mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
bound
xchg
int3
jmp
aad
xchg
adc
push
lds
test
jns
insl
lds
aam
ss
insb
and
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
fs
sub
push
loope
sbb
jo
adc
push
pushf
sub
mov
lcall
sahf
loopne
fldl
xchg
adc
call
in
aaa
sahf
fpatan
iret
push
bound
or
repz
jae
xor
adc
fs
std
jecxz
sbb
mov
loope
dec
shll
rcrl
repz
sahf
xchg
jle
and
jp
imul
jne
push
lahf
lea
sbb
dec
in
loope,pt
push
sahf
rcl
test
jp
fs
cmpl
vpaddsw
std
lds
push
std
iret
pushf
xchg
jb
fs
lods
xchg
mov
std
nop
stc
ss
sahf
out
adc
aam
unpckhps
std
nop
stc
pop
imul
push
cmpsl
jbe
lock
add
or
xchg
mov
movsl
xchg
sahf
out
jbe
lahf
lea
xchg
and
insl
dec
inc
push
int
icebp
in
pushf
das
jne
adc
in
lods
xchg
adc
mov
cmc
pop
sbb
and
sbb
loope
jmp
in
test
aas
pop
sbb
in
leave
cld
lret
std
lret
adc
jbe
sbb
loop
leave
cmp
cld
pop
xor
jb
dec
in
xor
aad
and
roll
mov
sbb
fmuls
fwait
je
lcall
out
push
push
adc
push
adc
adc
jp
cld
in
jmp
adc
imul
pop
push
adc
cld
pusha
adc
shrl
mov
or
push
pushf
stc
cld
sbb
adc
jp
jp
jge
push
xchg
and
sarb
aad
mov
adc
adc
adc
push
shrl
je
lcall
pushf
sbb
jecxz
or
adc
mov
adc
push
jns
push
adc
dec
or
dec
adc
push
push
adc
rclb
push
test
pushf
sarl
dec
aad
xchg
xchg
xchg
cld
push
sahf
loop
sbb
jne
dec
in
push
outsl
adc
adc
adc
push
shll
adc
aad
loope
shlb
xchg
adc
cmpsb
xchg
sahf
loop
je
lcall
xchg
and
jbe
and
jmp
cmpsb
sbbl
std
shll
lds
xor
mov
int
psraw
pushf
daa
jne
sbb
jbe
sbb
push
xor
push
in
lods
adc
movsl
push
leave
jns
ljmp
push
outsb
aad
sub
es
jp
jp
adc
push
aam
cld
adc
hlt
xchg
cli
pop
outsl
adc
out
pushf
movsl
push
roll
lds
inc
dec
push
lds
lds
and
xor
push
xor
and
lea
xchg
and
jbe
and
or
out
adc
push
adc
push
push
xlat
jp
adc
rolb
loope
dec
lds
push
lds
cmp
xor
lret
lds
push
in
push
in
push
cld
mov
call
call
dec
jge
int
in
pop
xor
fistps
adc
insl
jge
or
adc
lock
mov
std
adc
rcrl
xlat
in
push
mov
mov
and
xchg
fs
cmpl
arpl
aad
loope
push
sti
loope
aad
imul
xchg
add
in
loope
shll
lret
sahf
mov
xchg
aad
or
push
sbb
vaddsubpd
je
adc
push
adc
pop
fsubrs
adc
shll
sbb
xchg
aad
jecxz
aad
push
push
adc
aad
je
js
sahf
mov
insb
stos
aad
xchg
cmpl
insl
bound
xchg
imul
pushf
pushf
push
inc
mov
std
xchg
sub
adc
notb
adc
dec
pop
in
adc
push
sarl
mov
push
push
push
ljmp
std
cmp
mov
outsl
aad
gs
test
std
mov
insl
aad
gs
xor
je
dec
rcrl
push
shrl
jp
pushf
mov
and
xchg
fs
cmpl
vpand
jp
fdivr
stos
aad
pusha
adc
sar
push
jb
sbb
testb
sbb
jl
jp
les
insb
mov
sub
adc
loop
leave
stc
sbb
adc
xor
lods
push
leave
mov
and
ja
loope
push
lds
mov
decl
xor
jmp
adc
adc
push
adc
rcll
inc
adc
push
pop
lds
call
std
push
xchg
jge
rcll
jne
inc
pop
lds
lds
fimull
inc
fcoms
loope
pop
xor
xchg
adc
xor
push
xor
loope
shll
or
fimuls
jle
dec
sbb
and
arpl
loope
dec
adc
jne
dec
adc
loopne
int
in
dec
push
in
adc
je
dec
aam
int3
fistl
loope
int
in
and
push
je
lcall
aad
std
ficompl
stos
aad
pusha
adc
dec
inc
lds
xchg
pop
push
adc
scas
testl
adc
pop
lds
call
rcll
ja
loope
dec
insl
lds
in
jne
inc
pop
lds
lds
aam
push
fsts
loope
adc
in
adc
jmp
push
and
cmp
outsl
adc
adc
loope
jmp
sbb
jo,pt
lea
out
xchg
pop
sub
jp
adc
outsl
adc
adc
push
loope
push
push
mov
aad
loope
lret
jns
xchg
aad
or
adc
and
jp
jp
popf
clc
push
leave
add
hlt
ficoml
loope
ret
jp
mov
push
jns
jp
adc
push
mov
nop
aad
bound
aad
into
and
adc
push
sub
nop
aad
mov
dec
pop
arpl
push
loopne
aad
je
lcall
jbe
adc
outsl
adc
xor
mov
mov
js
cwtl
xchg
dec
and
ljmp
jne
insl
lds
aad
and
push
cli
inc
fisubrs
rorl
add
shrl
xchg
sub
add
jns
inc
aad
test
jne
push
push
push
mov
aad
loope
lret
jns
xchg
aad
or
iret
mov
inc
jle
adc
mov
aad
and
leave
jnp
jp
xor
inc
insl
adc
aad
loope
adc
xchg
adc
or
push
sub
insl
jp
jp
sti
cmp
outsl
adc
adc
loope
lcall
aad
cmp
adc
adc
loope
mov
test
lcall
fldl
fstl
loope
mov
jp
shll
rcrl
jp
dec
fsubrs
xchg
mov
push
pop
mov
outsl
adc
adc
or
push
lds
aad
and
push
in
lcall
jnp
jp
push
push
rcrl
sar
add
xchg
clc
imul
loope
sbb
lcall
xchg
push
loop
leave
jnp
jp
out
xchg
or
jne
loop
fistl
push
leave
jnp
jp
gs
dec
adc
dec
popa
in
nop
pushf
loope
rcrl
insb
stos
aad
aam
outsl
adc
sbb
sbb
jae
rcrb
lods
xchg
xchg
std
ret
xchg
sti
jnp
adc
out
fsub
fisubrl
shll
adc
movsl
sbbl
push
in
cmp
bound
out
xor
sbb
push
pushf
adc
fwait
push
loope
js
bound
in
std
mov
popa
repz
ljmp
adc
std
test
adc
adc
ljmp
test
stc
bnd
adc
std
xchg
xchg
sti
jg
and
rcrb
or
pmulhuw
lret
pushf
sub
mov
loope
push
sahf
jmp
push
test
cmp
mul
push
xchg
pusha
arpl
adc
ljmp
loope
rcll
loope
dec
out
pusha
adc
sub
push
and
divb
pop
pop
es
jp
jp
adc
push
push
loopne
xor
sbb
daa
lods
sbb
mov
xor
aad
or
xlat
adc
jbe
pushf
and
aad
xchg
orl
dec
push
adc
enter
aad
loop
shr
push
lods
pop
je
dec
add
xor
imul
jb
or
add
decb
xchg
cmpl
insl
sbb
or
xlat
adc
std
lcall
aad
mov
mov
pushf
adc
leave
dec
lret
paddsb
rcrl
pop
mov
mov
sub
cld
pushf
and
or
push
es
mov
push
jmp
decl
adc
loope
imul
pop
std
stc
subb
insl
aaa
rcll
ja
fs
xor
pop
insb
inc
sbb
adc
mov
loope
inc
lds
aam
cld
fists
loope
into
xor
bound
jb
mov
insb
stos
aad
xchg
orl
push
jne
xchg
or
sub
push
nop
mov
lcall
and
psrad
leave
jnp
jp
push
push
dec
shll
sbb
popf
cli
loope
lcall
and
rcrl
fwait
jbe
cmp
loope
pop
and
dec
fmuls
sbb
adc
notl
jnp
jp
xor
nop
aad
push
dec
push
in
rcrb
mov
insb
stos
aad
mov
push
push
bound
leave
xchg
in
xor
roll
cld
lret
jnp
jp
std
sbb
lret
int
loope
push
shl
adc
roll
outsl
adc
movsl
xchg
mov
nop
aad
and
xchg
fs
adcl
mov
outsb
ljmp
push
int
push
and
jnp
jp
and
push
pushf
popf
push
int
sbb
roll
add
adc
sbb
mov
pushf
out
or
push
roll
jb
in
add
push
push
cmpsb
jbe
sbb
mov
dec
icebp
loopne
xchg
or
adc
or
adc
rcll
xchg
pushf
cmpsb
jbe
adc
loopne
xchg
and
stos
aad
bound
ficompl
jbe
push
stc
push
xchg
mov
std
xchg
stc
xchg
imul
adc
xor
outsl
lcall
or
dec
jmp
in
nop
stc
inc
aad
gs
xor
jne
dec
aad
push
aam
loope
xchg
mov
movsl
xchg
cld
jecxz
shrb
mov
insb
stos
aad
adc
xchg
mov
cmc
xchg
adc
rclb
jbe
adc
dec
sub
nop
aad
push
push
add
mov
push
ljmp
xchg
fs
cmpl
loope
xchg
adc
fsubl
adc
lods
pusha
sbb
clc
push
adc
push
xor
int
icebp
jmp
dec
insb
in
pusha
sbb
dec
sub
int
fsubp
rcrl
ljmp
adc
jmp
dec
adc
push
jmp
push
ljmp
out
inc
and
dec
adc
push
mov
jmp
push
xchg
loope
push
sbb
out
inc
and
push
adc
outsl
adc
imul
xchg
pushf
pop
cmc
mov
push
imul
xchg
pcmpeqd
dec
inc
xchg
aad
or
fcoms
loope
add
push
sub
bound
in
std
adcb
in
gs
push
cld
sar
jecxz
fsubp
into
pushf
mov
xor
xlat
pushf
and
call
sub
adc
into
outsb
adc
cmc
out
loopne
mov
loope
jbe
lahf
lea
aad
xchg
push
push
push
dec
xchg
aad
loope
lret
arpl
adc
sbb
ficoml
loope
push
pop
mov
dec
pop
std
sbb
push
loope
and
xchg
xchg
aad
loope
jno
mov
dec
ss
scas
push
jno
jp
test
xchg
mov
xor
push
xchg
and
hlt
std
neg
sbb
loope
aad
cli
imul
loope
inc
movsb
loope
aad
and
xchg
mov
cmc
xchg
adc
rcrb
std
add
js
jecxz
daa
jne
xchg
shrl
in
test
and
rclb
std
sbb
cld
pop
xchg
cmc
push
sub
sub
mov
and
pushf
mov
repz
lods
bound
stc
cld
adc
jmp
jb
repz
push
lods
test
xchg
or
xor
aad
or
dec
adc
push
xor
nop
aad
jle
sub
in
aad
bound
leave
xchg
in
jne
adc
and
sarl
jp
sbb
jb
adc
std
adcb
into
sahf
movsb
outsb
aad
pop
xchg
aad
bound
outsb
adc
adc
and
push
inc
push
ljmp
outsb
and
fwait
cmpl
jp
sbb
push
xchg
mov
push
pop
mov
outsl
adc
adc
add
push
dec
jle
adc
pop
dec
pop
std
mov
cwtl
xorl
stos
aad
push
add
dec
jmp
test
xchg
mov
push
xor
nop
fcoml
loope
xchg
mov
xor
roll
fsubs
ljmp
xchg
shrb
movsb
jno
shr
dec
subl
lds
aad
insl
gs
add
std
aaa
or
ja
jp
jp
adc
push
or
push
adc
into
outsb
adc
std
nop
cmp
push
nop
bound
into
ds
outsb
adc
pusha
xchg
push
jne
dec
pushf
xchg
jb
paddsb
int
and
adc
fsub
fisubrl
sarl
loope
pushf
adc
push
fcmovne
xor
popa
jmp
fisubrl
sarl
loope
mov
loope
shr
push
ljmp
outsb
aad
popa
std
adc
std
fisttpll
outsl
adc
out
fdivl
adc
imul
xchg
xchg
mov
push
adc
call
aad
mov
dec
pop
std
adc
lcall
nop
pop
jne
push
idiv
push
nop
bound
in
xor
roll
cld
mov
int
or
fsubs
rcll
jne
push
dec
loope
iret
xchg
jns
leave
xchg
in
xor
roll
cld
sar
add
fdecstp
push
pushf
adc
stc
insb
aad
inc
fisubrl
shl
push
or
cwtl
xchg
dec
and
ljmp
jne
insl
lds
aad
and
push
cli
push
fnstenv
lea
and
xchg
fs
cmpl
gs
xchg
pop
outsb
push
adc
out
into
shr
push
adc
push
add
std
push
adc
adc
ljmp
mov
imul
loopne
aad
jp
xchg
loope
aad
push
pop
lcall
jmp
mov
into
sbb
push
rcrb
in
aad
bound
leave
and
adc
std
shll
loope
dec
adc
xchg
pushf
negb
push
loope
dec
jmp
in
std
nop
pushf
xchg
jb
and
loope
push
dec
lds
sub
psrlw
push
xor
xor
inc
or
push
adc
push
pushf
negb
fcmovne
xor
lds
xor
nop
aad
je
mov
xchg
dec
movsl
push
rorl
in
into
adc
movsl
push
rcll
in
outsl
adc
cmc
push
adc
jl
mov
xchg
push
in
outsl
adc
jne
adc
and
sarl
jp
fcmovne
xor
sbb
aad
push
aad
loop
aad
ljmp
incb
aad
or
notb
pusha
rcll
je
dec
in
xor
pop
jmp
jle
dec
lods
push
rcll
push
dec
adc
in
es
fisubs
adc
xor
mov
std
mov
std
shll
push
sbb
or
lcall
and
loop
aad
loope
popa
les
adc
nop
pushf
sbb
add
cs
adc
push
push
shl
or
adc
cmpsb
xchg
cld
fdivr
cmp
imul
test
pushf
movsb
push
adc
push
sbb
cld
pop
adc
imul
mov
and
xchg
push
push
add
dec
pop
insl
add
dec
xchg
aad
loope
sar
gs
sub
mov
dec
pop
std
sbb
adc
push
out
xchg
push
xor
mov
dec
aaa
popa
scas
push
jno
jp
test
xchg
mov
sub
aad
pop
std
nop
stc
adc
adc
sbb
frndint
mov
stc
outsb
insb
aad
insl
bound
bound
into
pushf
loope
fsts
loope
push
stc
in
in
jecxz
lcall
mov
loope
nop
stc
repnz
aad
imul
inc
and
jns
push
aad
popa
scas
push
jno
jp
test
xchg
mov
leave
or
adc
adc
sbb
jne
lcall
fs
inc
sub
jmp
xor
loope
push
cld
jecxz
clc
pushf
and
pop
sub
inc
sub
jp
jmp
xor
loope
aad
jecxz
clc
pushf
and
mov
fnstcw
and
push
and
cmp
or
aad
loope
lds
xchg
push
push
and
call
and
out
popa
push
mov
xchg
test
repz
insb
stos
aad
aam
add
sbb
xchg
std
jecxz
sbb
lock
bound
aad
jmp
lcall
push
xchg
sbb
stc
cmpsb
jnp
adc
rcll
loope
call
mov
movsl
xchg
lahf
and
mov
inc
and
nop
pushf
pop
adc
insb
and
xchg
xchg
add
dec
and
loope
xchg
fs
ljmp
jbe
adc
lea
sahf
push
repz
loop
test
sub
pop
jns
loopne
push
gs
jo
xor
inc
lea
loop
adc
rorb
bound
rcll
gs
or
xchg
cmpl
jmp
imul
xchg
and
rorl
loopne
xchg
mov
in
shlb
je
push
aam
sbb
fdivr
mov
test
popa
or
pushf
sbb
jmp
loope
test
jne
pushf
sbb
rclb
ret
out
xchg
mov
adc
push
jmp
ficomps
in
sbb
jmp
jbe
dec
fldt
ljmp
std
pop
inc
negl
add
out
or
adc
std
cld
aam
in
std
or
dec
and
enter
rorl
sbb
jbe
dec
adc
sub
mov
lods
aad
fiadds
aad
sbb
jmp
loope
nop
mov
cld
rcrb
xor
sbb
jbe
dec
aam
mov
and
xchg
fs
adcl
insl
or
add
ljmp
loopne
jns
imul
insb
mov
adc
inc
adc
adc
dec
in
xor
aad
fists
dec
push
or
dec
fmuls
cmp
adc
fstpl
mov
sbb
rclb
loope
ja
and
xchg
xchg
and
adc
adc
pop
sbb
jbe
mov
mov
nop
stc
pop
adc
adc
add
aam
stos
aad
xchg
std
std
inc
notl
push
push
in
jnp
and
cs
push
nop
push
push
out
pushf
and
sub
ja
dec
aam
xchg
pushf
icebp
lock
push
push
or
mov
and
popf
js
push
stc
or
adc
je
and
xchg
imul
je
fsubrl
adc
or
adc
push
stc
sbb
adc
xor
push
nop
dec
fldcw
xchg
push
loop
lret
repz
inc
fs
imul
int
mov
push
or
repz
xchg
fs
addl
loopne
xor
into
jmp
aad
mov
and
mulb
mov
shrl
lock
int3
mov
xor
jmp
adc
push
xchg
in
aad
loope
sub
jg
aad
sub
stos
out
xchg
and
xor
cmp
imul
fs
orl
lea
inc
sbb
xchg
sub
ljmp
popa
insl
daa
test
mov
out
xchg
cli
jecxz
outsl
popa
insl
jp
xchg
ljmp
cmpsl
ljmp
cwtl
out
xchg
sbb
xor
test
ljmp
les
rcll
imul
sbb
out
adc
out
lcall
call
pop
jns
js
pop
sbb
aaa
pop
or
xchg
adc
push
lahf
fbstp
push
or
in
xchg
or
cld
mov
fcomps
ja
push
cld
shr
fcomps
jbe
push
aam
mov
repnz
cmpsl
idiv
mov
xchg
mov
dec
inc
sahf
mov
insb
stos
aad
push
cli
inc
mov
mov
push
adc
neg
sbb
push
or
adc
push
adc
push
test
scas
aad
loope
pop
pop
xor
aam
xor
push
aad
jp
sbb
mov
frstor
loopne
aad
adc
and
adc
clc
push
shll
rcll
jno
mov
dec
xor
mov
adc
movsb
data16
loope
aad
or
mov
popa
or
in
adc
cmpsb
xchg
outsl
cwtl
xorl
xchg
movsl
loope,pt
dec
pop
std
mov
aad
or
rcll
loope
in
inc
jp
adc
nop
cs
xchg
dec
push
xchg
push
idivl
aad
popa
loope
dec
cli
pushf
xor
add
test
insl
mov
cwtl
jno
movsl
xchg
imul
xchg
xchg
jbe
popf
jg
out
adc
push
in
add
cli
inc
sarl
xchg
lcall
int
xchg
outsb
xchg
xchg
mov
imul
push
adc
sbb
adc
jp
adc
xor
add
sub
je
adc
imul
xchg
and
stos
aad
mov
adc
imul
xchg
and
stos
aad
mov
imul
test
jmp
insb
stos
aad
sub
cmp
out
xchg
mov
sub
xchg
and
and
xchg
xchg
mov
imul
test
stc
cs
push
mov
idiv
sbb
adc
jp
adc
cmpl
xor
add
daa
xchg
xchg
mov
idiv
sbb
adc
jp
adc
mov
and
ja
add
pushf
aad
add
incb
jno
jp
imul
push
rorl
mov
push
lcall
testl
fscale
or
stc
adc
adc
leave
jno
jp
out
mul
adc
push
out
sub
xchg
push
push
adc
xor
pusha
mov
popa
dec
or
adc
jmp
sub
push
push
push
aad
aad
loope
xor
popa
nop
adc
or
add
dec
push
adc
dec
push
lds
pop
in
sbb
adc
popa
scas
cmp
mov
ljmp
jbe
add
addr16
mov
aad
stc
imul
out
xchg
test
or
dec
sub
mov
xor
mov
jns
pop
aad
xchg
imul
pushf
jge
sub
adc
fcmovnbe
adc
push
mov
push
adc
int
sahf
jbe
pop
in
sub
shl
nop
sbb
nop
xlat
adc
push
inc
push
adc
mov
dec
adc
push
pushf
shl
inc
adc
push
pushf
mov
push
leave
loopne
aad
and
xchg
pushf
movsl
push
rcrl
jbe
adc
push
xor
rcr
mov
jp
imul
xchg
sbb
mov
adc
push
jb
mov
loopne
aad
and
xchg
pushf
movsl
push
and
cmp
call
push
adc
std
lret
sahf
imul
sbb
arpl
popa
and
int
mov
adc
in
adc
movsb
xchg
xchg
and
orl
jnp
jo
lea
aam
stos
aad
pop
jae
adc
aad
loope
dec
pop
push
push
push
jmp
push
pushf
test
inc
and
jbe
push
outsl
aad
loope
xchg
inc
adc
or
in
xchg
sbb
xor
adc
std
xchg
push
push
dec
push
std
rcll
push
sarl
popa
insl
mov
jmp
into
adc
sub
int3
icebp
aad
loope
push
pop
jne
call
adc
mov
push
stos
loope
xchg
nop
shl
push
inc
push
push
shll
or
xor
loopne
xchg
test
cmc
in
push
jne
call
aas
xor
jmp
aaa
xor
jmp
das
xor
jmp
daa
xor
jmp
pop
xor
jmp
pop
xor
adc
push
pushf
xchg
jle
pop
imulb
jb
jbe
pushf
movsl
push
rorl
mov
push
lcall
shll
aad
out
call
xor
add
xchg
stc
imul
mov
adc
loope
dec
lds
adc
jp
adc
inc
jne
sar
jns
in
sbb
sti
sbb
pushf
xchg
inc
dec
push
ss
aam
jne
shl
andl
insb
aam
loope
std
adc
notl
adc
incb
sbb
loope
adc
sub
rcll
adc
or
loope
dec
data16
shll
pop
xchg
aam
stos
aad
adc
push
add
push
stos
shll
mov
xor
insb
stos
aad
adc
xor
jp
shll
jno
jmp
lea
push
cmc
ficoml
je
sbb
je
dec
adc
nop
push
push
add
sub
jnp
jp
pop
jmp
std
je
push
roll
insl
out
push
jne
movsl
jno
ret
idiv
xchg
sarl
adc
in
xchg
test
imul
outsb
test
adc
or
push
stc
outsw
aad
or
xlat
adc
mov
pushf
xor
add
lret
sub
shll
dec
inc
mov
dec
mov
movsl
subl
and
rcll
xor
rcrl
outsl
adc
notl
dec
repnz
test
adc
popa
push
stc
outsl
aad
or
adc
mov
pushf
xor
jne
shll
adc
xor
and
shrl
mov
nop
aad
mov
mov
xchg
sahf
aam
outsl
adc
std
adc
rcll
adc
push
sbb
mov
and
adc
loope
xchg
fs
adcl
adc
sub
adc
push
or
jmp
inc
mov
dec
imul
adc
push
or
std
pop
fs
mov
xchg
push
pushf
adc
repz
pop
popa
loope
and
imul
and
test
xchg
mov
mov
and
xchg
inc
and
into
adc
inc
xchg
push
ds
outsl
adc
std
je
push
rcll
dec
aam
sar
into
ljmp
jae
xor
adc
std
xchg
popaw
scas
and
jp
test
xchg
aad
xor
pop
and
loope
aad
ljmp
sub
xchg
aad
mov
push
lds
jg
xchg
jge
loope
imul
fdiv
adc
mov
aad
loope
adc
mov
and
stc
outsb
or
adc
push
aam
scas
cmp
jp
mov
pushf
aad
xchg
mov
add
stc
inc
or
adc
push
pop
loope
aad
jmp
aad
xchg
cmpl
aas
push
adc
sub
jno
jp
mov
push
sub
aad
sar
cmp
adc
in
adc
cmc
adc
je
push
push
in
aad
loope
ret
push
aam
loope
xchg
mov
mov
sub
push
loope
into
inc
and
adc
loope
pop
cmp
loopne
xchg
mov
mov
lcall
aad
push
lds
out
lcall
hlt
adc
adc
adc
push
mov
imul
xchg
xchg
jp
aad
in
mov
loope
push
dec
loope
cmp
mov
push
sbb
inc
cmp
sbb
push
adc
std
in
cli
sub
adc
push
mov
loope
ja
lahf
lea
and
dec
aam
loope
inc
mov
rcll
jmp
loope
xchg
pushf
shl
addl
push
pushf
stos
bound
rcrl
aad
stc
loopne
popa
insb
mov
stc
and
cwtl
xor
nop
sahf
pop
std
rcrb
push
adc
std
or
stos
out
movl
jmp
int3
jecxz
loope
nop
adc
lcall
pushf
stos
bound
xchg
in
aad
stc
repnz
stos
bound
out
sbb
pop
stc
loopne
mov
repz
aam
stos
aad
and
xor
sub
xchg
add
stc
mov
aad
lcall
adc
lret
mov
rcll
loope
nop
inc
and
dec
aam
add
push
push
sahf
clc
cld
mov
and
in
cli
gs
imul
cmp
mov
std
xchg
inc
sub
lret
push
or
aad
loope
inc
push
mov
loopne
je
fsub
cltd
imul
loope
xchg
lcall
mov
pushf
shl
addl
out
fs
adc
loope
dec
xlat
push
dec
and
std
or
adc
orl
mov
or
ja
inc
push
stc
adc
and
repz
insb
stos
aad
ss
fs
orl
addr16
pop
push
dec
shll
push
mov
je
xor
lret
jae
sahf
add
dec
push
loope
jp
and
adc
lcall
leave
repz
or
adc
dec
adc
sub
push
lods
loop
jecxz
loop
fisubl
imul
pop
ljmp
sahf
mov
std
xchg
rcl
jmp
loope
xchg
push
push
push
aad
xchg
push
mov
fstl
movsl
xchg
push
lds
adc
xchg
aam
test
xor
pop
std
push
adc
cwtl
xchg
dec
and
jl
jge
push
stc
fisubs
adc
fstpl
out
fstl
je
jne
lcall
pushf
aam
add
mov
mov
xchg
push
push
add
xchg
xchg
sub
adc
mov
pushf
mov
push
inc
and
jns
cmpsb
aad
push
add
pushf
movsb
outsb
dec
adc
add
mov
mov
pop
sub
sbb
loopne
pushf
xchg
outsb
dec
daa
push
push
shll
loop
aad
or
std
xchg
push
push
dec
pop
jmp
movsl
xchg
jb
imul
jb
std
xchg
push
push
push
aad
xchg
out
xchg
inc
adc
lds
movsl
jno
ret
pushf
int3
mov
in
aad
xchg
adc
in
push
pop
icebp
clc
jle
cmp
adc
adc
adc
push
pop
icebp
clc
jle
or
loopne
loope
std
xchg
jl
rolb
and
jns
cmpsb
aad
insb
mov
stc
add
adc
push
add
jns
add
nop
push
push
and
xchg
xchg
lret
dec
loope
jno
mov
dec
xor
jo
jp
jp
xor
mov
daa
pop
loope
lcall
fs
cmp
jno
rcll
cmp
loope
ljmp
mov
test
lds
cmpsl
aad
and
xor
loope
jmp
xchg
int3
outsb
adc
imul
and
aad
daa
ja
popa
loope
rcr
in
jne
shll
adc
xor
and
shrl
fnsetpm(287
mov
mov
loope
aad
xchg
movsl
aad
or
loope
loope
xchg
test
adc
add
push
lods
cmc
push
jnp
ja
jno
jp
call
subl
push
nop
mov
adc
add
fstps
imul
and
dec
clc
adc
sub
or
loope
aad
mov
out
stc
or
adc
nop
push
or
loopne
fsub
shrb
shll
adc
sbb
aad
or
xlat
adc
lods
jp
jp
and
sar
loope
pop
adc
push
mov
inc
or
adc
jne
shll
inc
mov
push
cli
inc
mov
push
cli
inc
mov
push
cli
inc
mov
mov
aad
insb
stos
aad
jmp
std
xchg
or
loope
std
lcall
add
pop
cmp
adc
adc
or
push
aam
xor
adc
lock
mov
and
adc
push
dec
cli
push
cld
in
mov
lds
aam
adc
mov
adc
lret
dec
popa
loope
push
fidivs
pushf
aam
aad
loope
rcll
loope
mov
xchg
push
popa
or
xchg
test
xor
adc
loope
dec
shll
xchg
leave
insl
mov
adc
ss
fs
and
inc
repnz
stc
lret
adc
outsl
adc
lret
add
mov
and
inc
popa
loope
and
inc
ret
rcll
xchg
adc
push
popf
xchg
push
pushf
and
jae
loope
jns
insb
stos
aad
push
and
xchg
xchg
ds
loope
jno
mov
dec
xor
jo
jnp
jp
rcrl
jp
sub
or
adc
push
fidivl
std
xchg
xchg
int3
xchg
shrl
push
push
and
xchg
xchg
push
dec
loope
jno
mov
dec
xor
jo
jnp
jp
rcrl
jp
gs
or
adc
push
fidivl
std
xchg
xchg
int3
mov
shrl
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
mov
push
std
xchg
cmpsl
or
out
loope
inc
inc
sub
cmpsl
add
push
push
push
and
xchg
xchg
dec
loope
jno
mov
dec
xor
jo
jnp
jp
rcrl
jp
adc
or
adc
push
fidivl
std
xchg
xchg
int3
mov
shrl
fs
jmp
add
repz
std
mov
and
fildl
loope
inc
lds
aad
jge
inc
push
imul
stc
mov
aad
arpl
push
loope
ja
and
xchg
pushw
ljmp
std
xchg
push
push
and
nop
mov
and
xchg
xchg
and
jp
adc
loopne
adc
and
loope
in
cmp
imul
adc
push
sub
sbb
cmp
test
adc
js
adc
std
leave
test
adc
je
adc
scas
std
mov
and
loope
in
add
sbb
aad
or
in
loope
std
stc
ret
adc
jmp
adc
push
pop
or
push
push
adc
adc
push
pop
icebp
adc
loope
inc
push
adc
adc
push
pop
cmc
adc
adc
push
push
adc
adc
push
pop
stc
adc
adc
push
push
adc
adc
push
pop
std
adc
adc
push
jmp
cwtl
xchg
dec
and
decl
std
cmp
adc
adc
loope
xchg
mulb
adc
std
out
jb
std
xchg
fs
out
loope
outsb
adc
push
popa
punpckhwd
pushf
sbb
outsb
adc
push
push
punpckhwd
dec
sbb
das
leave
test
adc
mov
std
leave
test
adc
pop
out
loope
std
test
and
loope
in
sub
and
enter
in
and
imul
adc
push
adc
sbb
nop
insb
and
xchg
push
push
push
inc
and
lds
pop
jno
shll
adc
push
in
or
aad
cmp
add
push
jmp
lret
popf
outsl
push
adc
push
leave
or
aad
icebp
and
adc
push
mov
icebp
and
adc
push
mov
imul
adc
push
movsl
or
aad
stc
scas
fcoml
cmp
sbb
rcll
jmp
adc
adc
loope
dec
add
mov
imul
push
add
pop
std
sub
in
lods
imulb
mov
mov
popa
aad
or
sub
in
xchg
imulb
pop
out
mull
loope
and
fwait
cmpl
jp
popf
mov
outsb
ljmp
shl
adc
push
loop
lahf
lea
and
adc
push
and
push
pop
rorl
jne
cwtl
xor
adc
push
adc
push
sub
push
outsb
mov
xor
addl
test
dec
aad
loope
aad
loope
aad
test
outsb
xchg
push
adc
push
and
push
outsb
mov
xor
xor
mov
test
fs
cmpl
mov
push
adc
std
xlat
lcall
aad
bound
xchg
in
rclb
loope
dec
fimull
sub
adc
jle
out
and
cmpsb
sbbb
mov
xlat
adc
mov
xor
in
jmp
mov
xchg
popa
or
adc
std
fs
mov
in
pop
std
push
sahf
out
call
loope
add
xchg
adc
or
xchg
adc
or
addr16
pop
and
push
and
out
aad
sub
adc
aam
adc
decb
fs
std
jecxz
sbb
mov
loope
dec
aam
add
or
pop
sbb
adc
adc
push
leave
pushf
and
faddl
insl
add
cmp
mov
insb
stos
aad
xchg
cmpl
cld
push
pushf
mov
add
jno
push
stc
lcall
pushf
stos
xchg
mov
fisttpll
addr16
sbb
xor
in
std
xchg
inc
adc
push
negb
dec
adc
loope
ljmp
inc
enter
add
inc
adc
adc
or
mov
in
push
push
jbe
pushf
lea
lret
out
pushf
and
orl
lock
jle
fidivl
popa
in
in
adc
ljmp
push
jnp
sahf
mov
insb
stos
aad
push
push
aad
push
jl
adc
mov
sahf
movsb
outsb
and
xchg
xchg
pop
push
loope
jno
mov
dec
xor
adc
adc
or
std
adc
sahf
movsb
or
std
adc
adc
push
pop
or
push
pop
or
push
pop
sbb
mov
aam
test
xor
std
push
icebp
push
add
std
push
pushf
movsb
or
fscale
push
icebp
out
and
and
add
mov
mov
or
sbb
shrl
mov
test
repz
add
mov
dec
pop
add
push
sub
push
pushf
movsb
or
mov
stos
add
lcall
sahf
movsb
push
dec
pop
add
mov
mov
mov
inc
sbb
shrl
loopne
stc
cs
aad
outsl
jbe
pushf
movsl
xor
sahf
movsb
adc
pop
std
adc
jmp
jns
adc
jmp
js
adc
adc
adc
aad
jle
insl
mov
ljmp
int
push
daa
jb
push
std
add
adc
adc
jbe
cmc
push
call
lods
out
sbb
out
mov
daa
jb
push
std
add
sub
adc
jbe
cmc
push
jns
cmp
aad
fs
loope
push
adc
push
fprem
push
stc
mov
aad
or
and
push
iret
sub
fcomp
adc
clc
dec
adc
push
popa
insb
negl
jg
pushf
aad
in
aad
loope
aad
push
and
adc
cmpsb
xchg
stc
mov
negl
push
cmc
push
popa
mov
adc
fs
adc
jb
push
loope
dec
and
push
popa
push
rcll
loope
add
out
aad
or
loope
push
add
movsb
bound
pushf
movsb
es
shr
mov
aad
nop
adc
or
push
push
mov
adc
std
push
std
xchg
std
push
icebp
push
and
not
adc
push
stc
arpl
adc
loope
push
jmp
popa
push
cmc
pushf
mov
push
adc
mov
aad
xchg
or
ficoml
loope
push
add
movsb
or
mov
dec
pop
xor
std
dec
adc
push
popa
or
ficoml
loope
push
icebp
push
and
repz
shrl
adc
push
pushf
fs
adc
mov
aad
fs
adc
mov
aad
and
jns
test
stc
popa
or
ficoms
loope
in
insl
sti
push
aam
or
adc
push
jmp
or
adc
pusha
ficoml
loope
xchg
outsl
cwtl
xorl
xchg
push
push
loope
inc
lcall
jecxz
loope
jmp
or
mov
push
ja
insb
stos
aad
push
and
xchg
xchg
cmpsb
push
loope
jno
mov
dec
xor
jo
jnp
jp
rcrl
jp
lds
call
fidivl
std
xchg
xchg
int3
xchg
outsl
adc
imul
xchg
xchg
hlt
push
loope
jno
mov
dec
xor
xchg
dec
and
xor
aad
stc
mov
add
push
add
push
shll
push
cmp
push
jmp
mov
push
adc
push
sarl
adc
push
sbb
movsb
xchg
cmp
aas
dec
sbb
sub
jo
and
xchg
jne
jge
xchg
mov
mov
outsl
lea
xor
leave
dec
lahf
adc
adc
dec
mov
push
mov
pop
movsl
sub
xor
sbb
addr16
cs
pop
je
inc
in
adc
lret
jb
mov
dec
int3
jmp
cld
pop
clc
adc
orl
jb
adc
out
sub
xchg
xchg
sub
pop
add
sub
outsb
or
jle
nop
dec
inc
sub
clc
or
jecxz
loop
pop
push
dec
dec
test
es
sahf
mov
or
aad
stc
mov
cmp
aad
loopne
aad
mov
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
pop
insb
stos
aad
sar
xchg
adc
adc
adc
adc
push
adc
push
xchg
fildll
and
ret
adc
ds
push
cmp
out
sbb
repnz
or
testb
icebp
cli
insb
stos
aad
jae
fs
std
xchg
addr16
popa
jle
xchg
xor
xchg
dec
xor
xor
pop
and
inc
mov
and
mov
adc
movups
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
jno
int
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
loope
aad
popa
push
sbb
lds
push
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
cmpsb
popf
clc
inc
jnp
add
jb
add
jb
add
add
add
jmp
mov
adc
add
add
and
and
add
add
add
add
jno
add
add
add
add
and
popa
jo
fs
je
and
je
jb
inc
jo
cs
add
add
xor
add
add
adc
adc
add
add
insl
imul
add
add
or
add
xor
xor
xor
xor
xor
xor
and
and
and
and
and
and
add
add
add
add
rolb
add
ss
add
add
add
mov
mov
pusha
call
pop
sub
mov
mov
mov
cmpl
je
mov
mov
mov
ret
mov
mov
push
call
push
call
push
call
jmp
add
push
mov
add
pusha
call
pop
sub
mov
movl
mov
inc
mov
cmpl
je
mov
mov
incl
inc
jmp
mov
popa
mov
leave
ret
push
mov
add
pusha
call
pop
sub
lea
mov
movl
mov
rol
mov
inc
mov
cmpl
jne
movl
lea
lea
mov
mov
mov
rcl
mov
rcl
dec
jne
imul
inc
inc
mov
inc
mov
cmp
jne
popa
leave
ret
push
mov
add
mov
movl
jmp
incl
inc
cmpb
jne
mov
mov
mov
jmp
movl
jmp
movl
movl
jmp
shll
mov
shl
add
add
xor
mov
cmp
jb
cmp
ja
sub
jmp
cmp
jb
cmp
ja
sub
add
jmp
cmp
jb
cmp
ja
sub
add
add
incl
cmpl
jb
cmpl
jbe
mov
stos
incl
cmpl
jb
add
cmp
jb
mov
stos
mov
leave
ret
mov
lea
decb
inc
dec
jne
mov
mov
sub
add
icebp
mov
push
add
add
add
mov
add
add
jmp
pop
imul
jmp
and
pop
mov
add
sbb
push
fsubr
loopne
xor
fisubrl
imul
jmp
and
pop
mov
add
sbb
add
inc
push
les
add
mov
push
inc
fs
jae
jp
dec
sub
addr16
icebp
add
ljmp
xchg
les
mov
xor
cmpb
pop
jbe
adc
cmpb
inc
add
jne
add
add
dec
in
in
nop
push
add
add
test
add
pushf
or
add
add
mov
add
add
mov
add
add
add
mov
or
jne
mov
add
mov
add
mov
in
or
mov
and
add
add
cmp
add
xorl
roll
aas
dec
pop
jne
sub
add
add
in
mov
add
addb
add
jne
in
jmp
add
add
mov
adc
add
adc
add
rol
mov
adc
add
add
pop
sub
cmp
pushf
or
add
pop
pop
xor
les
add
add
loopne
fisubrl
push
jmp
and
pop
mov
add
sbb
add
inc
push
les
lret
int3
pop
int3
adc
and
jmp
and
mov
add
push
add
add
js
pusha
je
sbb
xor
mov
xchg
adc
add
sbb
addr16
test
xchg
xor
sub
mov
push
pop
or
adc
imul
jmp
and
pop
mov
add
sbb
add
inc
push
les
test
add
add
or
adc
push
popa
bound
and
cmp
pushf
or
imul
jmp
and
pop
mov
add
sbb
add
inc
push
les
jb
or
jmp
fucomip
adc
add
add
push
pushf
or
mov
mov
addr16
mov
jmp
or
gs
scas
imul
ret
add
shlb
xchg
mov
jecxz
mov
test
add
addr16
add
xor
addr16
add
repnz
and
rcr
jmp
das
xor
es
mov
addr16
sub
or
cs
test
add
xchg
sub
add
add
std
loope
fistpl
inc
inc
add
int3
pushf
inc
outsb
jle
adc
add
mov
ljmp
mov
enter
push
adc
cmp
add
mov
stos
or
and
adc
or
cmp
jg
push
xor
xchg
push
cs
push
sbb
add
je
or
dec
jns
sbb
sbb
and
sarl
and
add
mov
roll
das
mov
insb
outsl
xchg
lcall
or
xor
cmpsl
inc
xchg
test
es
rorl
movsl
cltd
cltd
sarl
mov
pop
add
aaa
nop
and
lahf
or
cmp
add
push
cmp
sub
sub
inc
inc
out
mov
or
das
mov
xor
mov
fs
add
cmp
add
and
dec
cmpsl
bound
movsb
sbb
xor
movsb
aaa
outsl
and
push
adc
jnp
xor
rcll
movsb
xor
xor
mov
iret
out
cmp
pop
jge
push
adc
fs
inc
icebp
out
mov
ret
xor
pushf
push
add
movsb
in
push
add
xorb
mov
sahf
push
lea
test
xor
sub
mov
sahf
pop
aaa
pop
clc
cmpsb
out
pop
push
bound
rolb
xchg
jge
pop
pop
pop
pop
fistpll
add
jp
movsb
xor
test
dec
sbb
shll
push
add
push
movsb
xor
aaa
stc
add
xchg
lock
cwtl
add
gs
and
out
push
out
mov
pop
pop
pop
int3
fimuls
add
xor
rol
or
push
or
pop
roll
test
add
add
jle
mov
pop
aam
and
pop
xchg
or
inc
sub
push
push
movsb
xor
fldl
sub
cmp
notl
adc
mov
add
pop
mov
dec
pop
pop
aaa
pop
fists
loope
xor
popf
or
movsb
imul
pop
mov
push
addr16
push
into
add
cmp
sub
add
orb
dec
pop
out
mov
inc
addr16
rcrl
jb
aad
inc
test
stc
dec
mov
dec
lods
mov
add
xlat
jg
jnp
mov
add
lea
pop
scas
test
push
movsb
xor
mov
test
fidivrs
adc
xor
and
ret
sbb
iret
dec
aas
sti
mov
cmpb
rcll
out
xor
xor
lods
and
xorl
shlb
aad
cmc
bound
add
ret
push
bound
dec
sub
je
adc
stc
add
add
push
movsb
xor
xor
jge
pop
jle
mov
xor
scas
jns
push
movsb
xor
inc
outsb
stos
add
pop
push
pop
xor
outsb
dec
pop
and
ss
out
mov
test
out
and
pop
jp
gs
pop
pop
pop
pop
fistl
mov
add
test
nop
cld
pop
cwtl
add
in
xchg
xor
and
sti
xor
sub
jle
adc
movsb
xor
push
imul
add
inc
xor
add
add
fisubs
out
mov
cmp
mov
add
xor
adc
add
pop
fisttpl
enter
in
or
push
jae
cmp
aaa
clc
mov
aad
in
into
call
jle
cmp
sbb
push
sbb
ret
sbb
test
push
push
out
test
and
dec
stos
xchg
lods
dec
jg
loop
adc
cmp
dec
push
hlt
stos
adc
and
or
lcall
movsb
xor
xor
mov
out
mov
std
clc
sub
mov
jp
push
dec
pop
adc
mov
add
test
dec
mov
ss
or
mov
mov
cwtl
add
xchg
xor
jp
pop
dec
pop
sbb
test
out
mov
lds
mov
stos
pop
out
mov
sbb
xor
pop
pshufw
cmc
xchg
jns
jle
mov
pop
out
mov
adc
mov
add
scas
xchg
push
movsb
xor
lret
add
cmp
out
mov
xchg
sub
cwtl
add
jns
punpckldq
add
cli
push
movsb
xor
jmp
outsl
scas
fnstcw
andb
out
adc
pushf
push
cwtl
add
sub
xchg
test
inc
movsb
xor
lods
dec
aam
and
push
movsb
xchg
pop
cwtl
add
push
push
pop
dec
pop
jg
into
cld
mov
inc
aam
and
test
xor
or
out
mov
aam
and
js
pop
cwtl
add
movsl
xor
jmp
xor
push
movsb
and
gs
dec
out
jp
jg
xor
stc
fidivrs
adc
dec
movsl
xor
scas
jle
push
movsb
xor
nop
inc
loope
pop
in
std
add
call
xor
mov
jmp
inc
jge
mov
cmp
popf
movsb
xor
xlat
popa
push
loope
push
jbe
mov
test
ret
movsb
sbb
pop
popf
stc
add
sti
sub
mov
fimuls
push
movsb
xor
push
mov
lods
mov
data16
out
mov
cld
push
cmp
pop
mov
test
adc
movsb
xor
jp
imull
int3
inc
int
cmc
sarb
push
movsb
xor
outsb
shll
sahf
lcall
and
shll
test
adc
scas
xor
test
push
movsb
xor
cmp
add
movsb
sahf
mov
add
jae
xchg
arpl
adc
mov
xchg
jmp
add
inc
and
out
mov
imul
cmp
add
sub
push
test
add
push
jle
lret
repz
ret
sahf
and
pop
movsb
xor
mov
add
xchg
cmp
mov
cmp
fmul
add
insb
jmp
sarl
data16
pop
dec
pop
and
jg
pop
jg
xor
insl
imul
mov
jb
jge
pop
insb
push
movsb
xor
mov
add
rorl
bound
adc
ljmp
es
push
movsb
xor
scas
decb
add
movsb
xchg
push
cwtl
add
rol
xchg
pop
fisttpl
fsubp
mov
jbe
scas
jge
push
movsb
xor
scas
jg
push
movsb
xor
fidivs
sti
add
andb
push
cmp
jo
mov
push
push
movsb
xor
test
sub
lds
xchg
push
insb
dec
pop
jle
cmp
xlat
mov
std
lock
jg
movsb
dec
out
mov
sti
in
add
cwtl
add
out
adc
mov
bound
pop
add
std
xorb
cwtl
add
popf
add
repz
call
bound
stc
add
out
add
add
add
or
xor
jge
je
xchg
mov
int3
cmpsb
jecxz
mov
jge
out
add
lods
int3
ds
fldz
mov
add
mov
or
mov
xchg
fisubrs
add
xchg
xor
test
movsb
add
dec
movsb
xor
loope
push
out
mov
jns
pusha
cwtl
add
and
cwtl
stos
mov
add
xlat
iret
push
pop
jmp
mov
mov
jp
addr16
pop
and
pop
popf
dec
movsb
xor
and
and
cmpl
and
add
xchg
push
cwtl
add
ss
loope
mov
sbb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
ss
inc
out
mov
jns
pop
cwtl
add
fcompp
inc
out
mov
adc
lret
incb
push
idivb
je
pop
dec
sub
push
cmp
inc
dec
push
out
loope
mov
jns
pusha
cwtl
add
test
arpl
in
mov
sbb
outsb
pop
aam
filds
cmpsl
mov
pop
xor
push
dec
pop
add
dec
pop
push
inc
sbb
mov
jle
addr16
scas
inc
cmp
push
dec
pop
or
add
fistps
push
dec
pop
jge
ret
pop
cmp
push
movsb
xor
inc
or
out
mov
push
inc
or
out
mov
mov
xor
pop
movsb
add
push
movsb
xor
mov
add
cmp
push
dec
pop
or
jecxz
shrl
add
jp
push
movsb
xor
xor
in
dec
pop
or
fiadds
mov
das
dec
movsb
add
sub
add
xlat
and
out
and
cmp
inc
push
inc
out
mov
lods
mov
out
pop
scas
movsb
jge
addr16
push
sbb
add
mov
add
rorb
movsb
xor
push
test
xor
aaa
ja
cmp
cmp
mov
xor
movsb
xor
mov
cmpsb
push
movsb
xor
xchg
mov
stc
push
movsb
xor
jbe
bound
movsl
add
movsb
lock
inc
repnz
ffree
mov
ficoms
push
xchg
mov
stc
push
movsb
xor
jbe
push
in
aad
cmp
add
test
or
dec
adc
mov
add
cmp
cmp
pinsrw
mov
xor
enter
mov
add
xchg
stos
fnstsw
push
push
movsb
xor
sti
mov
dec
adc
mov
add
cmp
cmp
pinsrw
mov
xor
mov
mov
xchg
std
add
add
ja
xor
mov
dec
adc
mov
add
cmp
cmp
bsr
add
ffree
mov
mov
fisubrs
pushf
dec
lahf
xor
in
std
fnsave
std
add
std
aad
cmp
add
test
or
dec
adc
mov
add
cmp
cmp
add
adc
out
movsb
xor
push
mov
add
movsb
mov
mov
pushf
negl
mov
lret
add
and
push
sbb
sub
ret
test
and
stc
cmp
ds
push
scas
jg
push
movsb
xor
sbb
sub
ret
test
and
popf
lods
add
out
addr16
xchg
rcrb
jne
dec
movsb
xor
mov
push
or
pop
test
xchg
xor
jbe
or
ja
xor
and
fstpl
add
mov
inc
adc
and
push
imul
pop
es
sbb
pop
xor
stc
cmc
mov
fstpt
pop
adc
adc
ljmp
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
in
push
adc
adc
cmpsl
fdiv
aaa
adc
adc
or
jg
mov
xchg
and
fnstsw
add
jp
and
and
scas
lea
pop
cld
and
push
fimull
aad
shll
lock
loop
adc
in
mov
fmull
jno
push
mulb
stc
into
add
incb
push
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
in
push
loop
push
daa
loope
add
add
xchg
push
and
addr16
pushl
ret
adcl
inc
lods
faddl
push
ds
sub
push
idivb
test
adc
lods
repnz
inc
sbb
push
cmp
pushf
inc
push
jg
scas
cmp
cmp
inc
add
or
mov
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
aad
adc
and
repnz
jmp
out
pop
pop
pop
adc
repz
fbstp
pop
jecxz
sub
sbb
xchg
fadd
in
or
in
xor
pushf
popa
hlt
fst
testb
and
adc
loope
mov
add
and
aaa
pushf
pop
jecxz
shl
mov
dec
and
cmpsl
fnstsw
idiv
jg
sbb
hlt
in
fmuls
movsl
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
jo
cmp
aas
ss
xor
movsb
jecxz
push
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
mov
push
aaa
test
jecxz
sbb
add
movsb
xor
movsb
xor
cmp
movsb
xor
mov
int3
sbb
pop
jo
xor
jae
push
sub
push
int
inc
lcall
dec
pop
mov
movsb
pop
mov
cmp
movsb
xor
jg
and
and
pop
aam
filds
pop
movsb
xor
xchg
mov
out
das
js
mov
dec
pop
xchg
movsb
stos
std
fdivp
push
out
mov
cmp
sarb
in
std
add
andb
data16
fmuls
fdivp
push
out
mov
cmp
imul
loopne
push
jae
mov
fsubrs
mov
pop
movsb
xor
mov
add
add
int3
and
orps
add
stos
mov
rol
xor
mov
add
jbe
pop
pop
pop
mov
jae
xor
leave
xor
add
in
jmp
push
fwait
jmp
inc
out
push
imul
in
sub
out
mov
adc
mov
add
xor
mov
rol
xor
mov
add
jns
movb
add
xor
xlat
or
jb
data16
nop
xchg
adc
outsb
mov
xor
sbb
push
movsb
xor
sbb
jl
pop
incl
movsb
xor
ss
push
movsb
xchg
js
popa
mov
loope
cmp
pop
jg
xchg
adc
dec
pushf
incl
push
sbb
push
stos
mov
lret
sbb
mov
add
fs
fidivs
fst
fs
jo
pop
cwtl
add
mov
cld
push
movsb
xor
enter
push
test
add
sub
jmp
out
lods
mov
divl
and
xchg
jecxz
cltd
outsb
lret
jns
je
add
scas
cmp
movsb
xor
xchg
add
adc
movsb
xor
arpl
cmpsl
xor
iret
sahf
std
mov
and
lret
adc
xor
lret
add
mov
push
and
pushf
pop
movsb
xor
sbb
and
fs
bound
push
and
cmc
sub
test
dec
sub
ss
out
mov
jle
push
loopne
pop
mov
cltd
movsb
pop
cwtl
add
lcall
jae
in
pop
and
sbb
jmp
and
fcoml
mov
rcrb
jae
inc
dec
int3
sbb
pop
pop
movsb
xor
jae
push
addl
jo
cwtl
add
inc
and
out
mov
js
mov
add
push
je
or
xor
sbb
jl
pop
incl
movsb
xor
in
sbb
pop
mov
fisttps
enter
pop
push
xchg
int
dec
pop
push
lods
mov
add
out
jno
adc
pop
movsl
add
pushf
incl
push
movsb
adc
xchg
dec
addr16
mov
sbbl
fistpl
stos
mov
aam
xor
mov
add
ja
cmp
inc
jle
movsb
mov
sub
sbb
repnz
adc
mov
add
pop
xchg
insl
pop
dec
pop
mov
pop
movsl
xor
and
add
push
movsb
xor
push
ss
mov
scas
out
push
adc
movsb
xor
test
test
lret
push
xor
and
popf
add
movsb
out
shrb
test
out
mov
mov
jmp
jg
out
push
out
mov
xchg
xor
or
cwtl
add
fdivp
add
mov
adc
shlb
push
cmp
pop
xchg
movsb
xor
movsb
xor
aam
loope
fsubrp
out
mov
adc
mov
add
sbb
dec
stos
mov
rol
xor
mov
add
jbe
std
inc
out
in
cwtl
add
popf
sti
add
push
push
mov
pop
push
mov
dec
pop
pushf
popa
movsb
xor
js
out
arpl
xor
inc
sarl
inc
movsb
xor
out
dec
xor
mov
dec
pop
xchg
movsb
add
andb
inc
movsb
xor
mov
int3
sbb
pop
insl
movsb
xor
jae
stos
xchg
lds
and
mov
les
add
cmp
mov
dec
pop
jg
xor
in
jle
cmp
and
push
push
jne
or
xor
sbb
aad
pop
pop
incl
movsb
xor
jecxz
jno
mov
jle
pop
sbb
js
cmpsl
cmpb
enter
push
scas
je
sub
mov
push
movsb
xor
mov
and
and
dec
hlt
bound
add
push
movsb
cltd
jg
movsb
imul
xchg
or
xor
xor
aam
aaa
pop
incl
movsb
xor
sbb
popf
movsb
lods
add
lods
mov
mov
push
enter
pop
cmp
pop
add
scas
cwtl
add
movsb
xor
mov
int3
mov
pop
aam
filds
jo
xor
cwtl
cmp
add
mov
test
loopne
xchg
faddl
cwtl
add
push
movsb
xor
mov
jp
out
mov
adc
aaa
mov
lret
mov
int
xor
out
and
lret
test
mov
fwait
test
add
clc
filds
clc
or
stos
mov
rol
xor
mov
add
jns
lock
iret
xchg
sub
js
in
xchg
stc
outsb
dec
pop
or
cmp
add
movsb
xor
push
sarl
sbb
test
lahf
dec
popf
pop
movsb
xor
pop
sti
sbb
mov
and
add
rcrb
push
movsb
xor
loop
mov
jp
push
dec
pop
push
push
je
or
xor
sbb
jl
pop
incl
movsb
xor
lcall
xchg
xchg
test
daa
sub
lods
imul
push
xchg
adc
movsl
xor
rcrl
sub
scas
addl
test
or
mov
push
cmp
add
push
add
push
dec
pop
dec
rcll
add
mov
js
and
add
cmp
sub
jb
test
add
cmp
jns
dec
cwtl
add
int
jg
push
jecxz
pop
lahf
mov
push
je
or
xor
sbb
jl
pop
incl
movsb
xor
jne
xor
movsb
xor
scas
je
mov
popf
sti
movsb
xor
movsb
xor
lea
int3
jno
pop
aam
filds
push
movsb
xor
jne
cmc
mov
ss
mov
add
movsl
add
pushf
incl
push
movsb
adc
xchg
cmp
jle
addr16
mov
cmp
ss
push
out
mov
cwtl
push
mov
add
test
push
sbb
into
dec
xor
pop
add
movsb
add
pop
movsb
xor
mov
add
in
or
push
stos
hlt
nop
adc
jbe
mov
adc
pop
test
fwait
inc
movsb
xor
lea
int3
jno
pop
aam
filds
pop
movsb
xor
jne
lea
cwtl
add
cmp
inc
add
and
test
test
dec
sbb
xor
sbb
mov
push
rcll
pop
pop
pop
and
fdivp
cmpl
ds
out
mov
dec
adc
mov
dec
xor
push
movsb
xor
popf
or
jo
xor
xor
pop
in
stc
orb
pusha
jg
roll
mov
jle
pop
outsl
xor
hlt
sub
out
mov
outsl
push
mov
cmpb
cwtl
add
lahf
dec
jge
or
mov
or
pop
lahf
xor
cmp
push
dec
pop
push
push
xchg
or
xor
xor
sarl
incl
movsb
xor
sbb
ret
cli
pop
in
mov
jnp
movsb
xor
test
sub
in
mov
scas
stos
mov
lods
jmp
push
movsb
xor
mov
rcll
and
add
int
movsl
xor
mov
push
xor
xor
insb
mov
cmc
xor
adc
movsl
xor
test
dec
fisubs
xor
vpsubq
xchg
add
cltd
push
pop
into
sbb
imul
stc
add
add
push
movsb
xor
cmp
xchg
push
movsb
xor
lret
add
scas
addb
xor
inc
mov
cmp
add
jb
pop
cmp
pop
or
sbb
push
stos
mov
lret
sbb
mov
add
fs
push
pop
push
orl
fmuls
mov
dec
sbb
fwait
imul
push
or
mov
imul
ss
out
mov
sbb
stos
inc
cmp
jb
push
and
cmc
sub
cmp
add
movsb
aad
bound
pushf
push
movsb
xor
das
jnp
mov
rorb
pop
jmp
jmp
mov
lods
jge
lods
stc
xor
out
mov
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
cli
aas
sbb
adc
cwtl
add
ss
icebp
mov
sbb
xor
dec
loope
mov
in
outsl
jo
fwait
leave
add
mov
aam
xor
mov
add
ja
jno
sbb
mov
je
icebp
jmp
pop
out
cmp
pop
jg
xchg
loop
pop
cmp
lea
gs
or
add
adc
xchg
mov
or
movsb
repz
xchg
mov
push
push
inc
cmpsl
fcoms
cltd
test
mov
xor
mov
add
mov
lods
xchg
mov
lea
js
or
cmpsb
dec
fsubp
popa
loopne
mov
jnp
mov
push
add
push
mov
ficoms
out
mov
adc
xor
lods
test
lods
sar
add
jl
push
movsb
xor
cli
add
push
scas
jg
push
movsb
xor
push
xchg
or
xor
xor
sarl
incl
movsb
xor
sbb
iret
add
mov
stos
mov
aad
sub
and
xor
int
lods
cmp
jb
pop
push
push
xchg
adc
xor
scas
or
mov
sub
cs
mov
mov
add
scas
mov
push
movsb
xor
enter
pop
test
add
adc
jle
and
jle
addr16
mov
xchg
clc
imul
in
dec
pop
mov
push
test
adc
movsb
xor
pop
sti
xchg
adc
cmp
jl
adc
mov
xchg
mov
xor
cmp
cltd
outsb
push
pushf
xchg
mov
sub
in
lcall
adc
test
pushf
add
aam
adc
ret
es
aam
outsb
mov
mov
adc
xor
movsl
xchg
pop
push
dec
pop
cmp
incb
push
movsb
aaa
bound
cmp
push
movsb
add
cltd
lcall
adc
movsb
adc
mov
dec
addr16
mov
inc
jecxz
pushf
jg
cmp
outsl
dec
pop
std
fdiv
loope
pop
mov
mov
jb
jno
pop
xchg
movsb
add
and
cli
add
cltd
test
movsb
into
fwait
inc
movsb
xor
lea
int3
jno
pop
aam
filds
pop
movsb
xor
jne
lahf
lock
popa
xor
cwtl
add
mov
sbb
insl
lcall
cmp
pushf
pusha
movsb
xor
dec
mov
xor
and
mov
and
mov
sbb
push
movsb
xor
sub
pop
incl
movsb
xor
jecxz
insb
sbb
jle
xchg
mov
imul
push
push
pop
xor
sbb
push
push
xchg
or
xor
xor
aam
aaa
pop
incl
movsb
xor
sbb
in
decl
jl
stos
push
lods
sahf
mov
jne
or
xor
sbb
aad
pop
pop
incl
movsb
xor
jecxz
insl
shlb
push
mov
movsl
add
jmp
xor
mov
movsb
ret
fwait
inc
movsb
xor
mov
int3
jns
pop
aam
filds
pop
movsb
xor
je
mov
mov
mov
out
mov
aad
xchg
mov
push
push
xchg
or
xor
xor
sarl
incl
movsb
xor
sbb
lret
mov
add
cmp
pop
mov
pop
movsl
xor
popf
or
repz
add
adc
out
mov
add
movsb
fsubs
mov
aaa
pop
sbb
loopne
or
push
and
push
bound
dec
bound
pop
push
movsb
xor
test
movsb
sbb
jno
lahf
mov
adc
xor
fwait
cli
mov
js
xchg
jns
scas
out
push
sbb
lret
dec
sbb
or
bound
std
add
imul
stos
mov
aad
sub
and
xor
int
and
push
dec
pop
test
lahf
mov
jno
pop
jge
adc
pop
test
add
xor
and
fsubl
fcoms
inc
movsb
xor
test
push
or
xchg
xchg
push
add
or
push
rcr
lret
push
and
push
bound
xor
movsb
add
and
cmc
sub
push
shll
xor
jl
push
movsb
xor
xchg
repz
pop
lret
loop
enter
pop
popf
push
add
movsb
out
push
jg
ja
adc
mov
jne
or
bound
sbb
movsb
jle
dec
mov
sti
push
inc
stos
fldz
mov
jle
stos
decl
mov
call
sbb
pop
add
fdivs
out
mov
jb
push
dec
pop
add
cmp
jl
movsb
xor
fists
nop
xchg
adc
sub
movsb
rcrb
jae
inc
dec
int3
sbb
pop
pop
movsb
xor
jae
sbb
nop
pop
add
mov
xor
mov
sbb
out
and
xor
gs
sbb
mov
adc
popa
inc
mov
cmp
out
mov
rorl
push
movsb
xor
fsubr
in
pop
push
js
push
and
gs
pop
add
cmp
mov
and
bound
add
cmp
add
movsl
add
pushf
incl
push
movsb
adc
addb
addr16
rclb
fld1
jmp
aam
fwait
pusha
movsb
xor
jg
cmp
sub
es
addr16
mov
popf
push
add
movsb
bound
and
es
xchg
movsb
add
dec
movsb
xor
inc
mov
out
mov
aam
fidivrs
out
mov
adc
xor
push
test
cltd
push
and
add
movsb
sahf
jge
jle
mov
jp
push
pop
pop
adc
push
aam
or
out
mov
inc
push
movsb
cltd
outsb
push
mov
adc
cmp
and
cmp
pop
jge
cmp
adc
mov
mov
jbe
pushf
jg
cmp
fwait
inc
movsb
xor
jle
and
sub
pop
aam
filds
push
movsb
xor
xchg
lods
mov
add
cmpsl
idivb
aam
fs
mov
push
sbb
push
stos
mov
sbb
out
and
xor
gs
ja
out
jg
and
add
xor
testl
mov
incl
push
movsb
adc
mov
dec
addr16
mov
lods
bound
stc
add
rorl
test
or
mov
adc
mov
add
cmp
pop
add
fcmovu
mov
mov
out
mov
adc
add
xor
xor
lret
sbb
mov
add
fs
mov
ds
fwait
lcall
push
pushf
incl
push
movsb
adc
addb
addr16
rclb
sub
sub
jle
out
mov
es
push
movsb
xor
sbb
push
xor
pop
mov
push
cmp
xor
mov
push
out
test
cmp
movsb
xor
jg
and
and
pop
aam
filds
pop
movsb
xor
xchg
push
mov
xor
adc
adc
scas
xchg
movsb
add
stc
mov
xchg
test
aam
jmp
lods
mov
jp
push
movsb
xor
push
jne
or
xor
sbb
aad
pop
pop
incl
movsb
xor
jecxz
scas
jmp
stos
test
popf
mov
mov
push
insl
dec
pop
mov
sbb
and
mov
or
push
movsb
mov
adc
sub
cwtl
add
push
fwait
icebp
pop
pop
dec
xor
adc
orb
push
movsb
sahf
and
imul
sbb
push
movsb
xor
sbb
aad
pop
pop
incl
movsb
xor
jecxz
mov
jmp
sub
adcb
sbb
push
jne
or
xor
sbb
aad
pop
pop
incl
movsb
xor
jecxz
ds
pop
inc
jbe
push
out
mov
std
push
movsb
xor
push
lcall
enter
push
scas
je
cs
mov
jno
pop
and
inc
movsb
xor
mov
int3
mov
pop
aam
filds
jo
xor
les
std
gs
xor
push
lahf
mov
orb
push
xchg
or
xor
xor
aam
aaa
pop
incl
movsb
xor
sbb
xchg
data16
fnsave
jp
dec
pop
jg
xor
mov
cmpb
dec
pop
add
push
pop
dec
pop
xchg
movsl
add
imul
add
jle
and
sub
pop
aam
filds
outsb
movsb
xor
xchg
adc
lret
push
filds
adc
or
pmaxsw
dec
ffree
fisubs
out
mov
cmp
inc
outsb
dec
pop
add
lret
fsubp
xchg
pop
cwtl
add
ss
fucomi
mov
popa
repz
push
or
dec
fdivp
push
out
mov
cmp
sarb
into
fisttpl
push
pop
xor
lahf
dec
dec
sbb
xor
mov
sbb
out
and
xor
gs
push
push
dec
xor
nop
jmp
stos
and
adc
add
ficomps
adc
mov
insb
iret
ficoms
out
mov
adc
scas
xor
popf
push
add
movsb
ret
fucomip
daa
inc
jl
outsl
add
leave
cwtl
add
jg
push
movsb
xor
push
jae
or
xor
jecxz,pn
jl
pop
incl
movsb
xor
jecxz
and
cltd
jmp
xor
jb
push
pop
add
cmp
add
movsb
add
leave
cwtl
add
jg
push
movsb
xor
cli
or
add
jg
push
movsb
xor
mov
add
jp
and
fldt
out
adc
orl
ficomps
adc
xor
and
mov
mov
add
andb
inc
movsb
xor
mov
int3
jns
pop
aam
filds
push
movsb
xor
je
and
xlat
subb
inc
nop
jle
jb
pop
dec
pop
add
cmp
add
out
cmp
cwtl
add
inc
xor
aam
dec
data16
fadds
pop
movsb
add
popa
movsb
xor
pushl
mov
cwtl
add
inc
repnz
mov
fiadds
shr
cwtl
add
push
xchg
movsb
scas
push
and
fidivs
or
out
mov
jns
push
cwtl
add
ds
jbe
mov
fsubrs
mov
add
or
jp
jg
pop
jge
out
pop
xor
add
jae
or
xor
jecxz,pn
jl
pop
incl
movsb
xor
jecxz
pop
push
xchg
or
xor
xor
sarl
incl
movsb
xor
sbb
mov
out
sbb
jle
mov
lret
ficomps
adc
enter
and
lahf
xchg
mov
xor
test
sbb
cmc
jg
mov
scas
jp
push
movsb
xor
pop
test
jle
push
out
pop
cmp
push
push
jb
or
xor
sub
pop
incl
movsb
xor
jecxz
mov
jmp
subl
stc
add
push
cltd
hlt
mov
and
movsb
xor
jmp
imull
incl
add
sub
mov
adc
add
and
iret
cmp
repnz
clc
fimuls
xor
jl
cwtl
add
out
or
mov
jg
outsb
out
pop
xor
test
adc
or
dec
stos
mov
rol
xor
mov
add
jbe
ljmp
add
pushf
incl
push
movsb
adc
xchg
dec
addr16
mov
jg
jne
dec
bound
xor
movsb
aam
push
movsb
xor
test
xchg
icebp
or
clc
scas
push
pop
mov
outsl
sahf
jge
pop
mov
movsb
cwtl
add
lods
daa
in
mov
add
pushf
incl
push
movsb
adc
addb
addr16
rclb
adcb
lret
xor
xchg
insl
jg
pop
add
mov
fadd
cs
mov
add
arpl
pop
sub
or
in
mov
test
dec
movsb
xor
xor
out
mov
imul
add
icebp
xchg
jne
jge
movsb
xor
jb
and
push
add
push
movsb
xor
mov
pop
or
push
jle
push
and
inc
movsb
xor
jg
and
and
pop
aam
filds
pop
movsb
xor
xchg
lock
aam
mov
loopne
fxtract
out
mov
xchg
xchg
inc
add
rolb
mov
movsl
add
pushf
incl
push
movsb
adc
addb
addr16
rclb
and
out
or
pop
mov
jmp
mov
bound
add
push
adc
test
push
bound
xor
movsb
add
xor
movsl
add
pushf
incl
push
movsb
adc
jle
and
jle
addr16
mov
aaa
cmc
cmp
xchg
enter
pop
sbb
push
stos
mov
lret
sbb
mov
add
fs
or
call
mov
bound
stc
add
jo
scas
cwtl
add
std
add
insl
movsl
fidivs
mov
add
ret
xchg
mov
inc
scas
jnp
push
movsb
xor
xor
push
adc
je
adc
ret
and
scas
mov
push
movsb
xor
test
push
jg,pn
xchg
sub
jp
fldl
push
push
mov
or
xor
xor
sarl
incl
movsb
xor
jecxz
mov
push
movsb
lock
test
cwtl
add
and
adc
mov
xor
pop
int3
fsubrp
fucomip
mov
xchg
in
cwtl
add
movsb
xor
mov
int3
mov
pop
aam
filds
pop
movsb
xor
pop
mov
mov
xor
and
jge
adc
mov
push
sbb
outsb
adc
pop
lods
cmpsb
fldenv
mov
add
popf
or
movsb
jnp
mov
lods
or
mov
mov
add
cmp
pop
or
sbb
push
stos
mov
fadd
cs
mov
add
arpl
test
push
cmc
test
and
dec
xchg
jle
addr16
repz
xchg
lret
dec
xchg
adc
cwtl
add
ficoms
out
mov
adc
stos
incb
push
sbb
push
stos
mov
sbb
out
and
xor
gs
sub
pusha
dec
pop
add
push
movsb
mov
mov
jns
in
mov
fiadds
sbb
push
stos
mov
aad
sub
and
xor
int
test
rcr
or
and
out
mov
add
fbstp
mov
sub
sbb
push
movsb
xor
sub
pop
incl
movsb
xor
jecxz
or
or
fdivr
sub
pop
sbb
sbb
push
movsb
xor
xor
sarl
incl
movsb
xor
sbb
xor
push
shl
daa
dec
xchg
add
bound
stc
add
mov
dec
cwtl
add
lcall
push
jl
scas
and
das
sbb
or
add
movsb
xor
lea
int3
jno
pop
aam
filds
outsl
movsb
xor
jne
fcomps
das
jmp
loope
mov
mov
inc
mul
out
mov
popa
sbb
cwtl
add
imul
xor
push
jb
or
xor
sub
pop
incl
movsb
xor
jecxz
idivl
outsb
sahf
push
bound
pop
in
mov
movsb
xor
movsb
xor
mov
int3
mov
pop
aam
filds
outsb
movsb
xor
jae
jnp
fwait
jbe
xor
dec
cmp
jno
mov
movaps
cwtl
add
jg
push
movsb
xor
cli
cmc
xor
cmp
movsb
xor
mov
int3
mov
pop
aam
filds
outsl
movsb
xor
push
adc
fwait
jnp
and
inc
jbe
out
mov
jns
movsb
cwtl
add
movsb
xor
mov
int3
sbb
pop
outsl
movsb
xor
jae
les
je
xchg
push
pushf
arpl
jecxz
out
adc
mov
mov
clc
mov
add
cmp
popf
add
movsb
out
insl
jns
add
push
repz
and
gs
or
add
adc
mov
dec
addr16
mov
jg
rcrl
adc
add
inc
scas
jg
push
movsb
xor
dec
pop
pop
popf
movb
movsb
cltd
test
into
loop
pop
cmp
pop
test
sbb
push
stos
mov
sbb
out
and
xor
gs
xchg
in
sbb
lock
sbb
repnz
push
movsb
xor
cmc
aam
push
je
or
xor
sbb
jl
pop
incl
movsb
xor
jecxz
jl
test
fdivp
jg
push
scas
jg
pop
movsb
xor
fiaddl
pop
and
push
bound
jp
push
movsb
add
inc
movsb
xor
cmc
adc
xor
mov
adc
lods
incb
push
cmp
xchg
movsl
xor
mov
add
inc
or
push
ds
fadds
mov
subb
xor
or
test
mov
lods
imul
subl
add
fwait
jo
sub
cwtl
add
fsubp
xor
movsb
sbb
xor
arpl
xchg
ss
shrb
jnp
mov
jbe
or
out
sbb
cwtl
add
xchg
sti
mov
xor
mov
rol
xor
mov
add
jbe
mov
inc
in
add
pop
jo
jb
inc
sbb
popf
push
movsb
xor
mov
in
mov
or
sbb
insb
pop
mov
pushf
test
and
dec
xchg
jle
addr16
repz
xchg
adc
bound
stc
add
add
push
movsb
xor
scas
insb
aad
ficoms
cmp
mov
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
fsub
orb
inc
movsb
xor
mov
jns
and
or
xor
and
pop
in
stc
add
out
orb
push
and
mov
add
pushf
or
movsb
mov
aam
sbb
lret
mov
mov
movsl
xor
lock
add
movsb
ret
fwait
inc
movsb
xor
mov
int3
jns
pop
aam
filds
pop
movsb
xor
je
push
cmc
push
lea
arpl
incl
push
sbb
pop
stos
mov
rol
xor
mov
add
jns
jecxz
push
es
xchg
icebp
pop
dec
pop
xchg
lahf
xor
movsb
xor
mov
int3
sbb
pop
jo
xor
jae
test
mov
test
cmp
inc
dec
pop
xchg
sahf
xor
cmp
adc
xor
insb
mov
std
pop
dec
dec
jnp
lcall
pop
dec
jle
es
push
movsb
xor
adc
ret
movsb
mov
add
movsb
leave
fwait
inc
movsb
xor
jle
and
sub
pop
aam
filds
pop
movsb
xor
xchg
in
xor
stos
lcall
cmp
xchg
inc
test
shll
sbb
rolb
cmp
movsb
xor
mov
int3
mov
pop
aam
filds
push
movsb
xor
js
add
mov
mov
movsb
xor
out
or
mov
shr
cwtl
add
inc
scas
fsubrp
mov
loop
movsb
xor
cmp
cli
bound
pop
add
movsb
ss
inc
mov
add
ds
push
out
mov
lods
inc
scas
jp
push
movsb
xor
xlat
xor
loopne
pop
aas
out
mov
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
aas
pop
insl
pop
mov
push
movsb
jno
call
ljmp
mov
movsb
movsl
add
pushf
incl
push
movsb
adc
xchg
mov
pop
add
movsb
repz
xchg
popa
lret
jg
dec
scas
jp
push
movsb
xor
push
je
or
xor
sbb
jl
pop
incl
movsb
xor
fdivl
out
push
add
call
lods
mov
add
movsb
xor
lea
int3
jno
pop
aam
filds
pop
movsb
xor
jne
test
lea
add
movsb
jle
sub
xchg
ljmp
xor
push
jne
push
dec
pop
adcl
movsb
xor
push
push
mov
sbb
and
mov
nop
fdivrs
xor
xor
cmp
pop
hlt
bound
andb
add
cmc
inc
and
mov
pusha
jnp
sbb
int3
ds
adc
mov
cmp
cmpsl
pushf
mov
or
test
movsb
cwtl
add
fimuls
xchg
fadd
cwtl
add
movsb
xor
addl
aam
filds
pop
movsb
xor
mov
fdivl
dec
add
inc
decl
jl
xchg
scas
cwtl
add
ss
jmp
ret
adcb
sbb
dec
pop
insb
lret
sbbb
out
cli
mov
lods
subl
shlb
mov
push
mov
jb
fs
pop
add
mov
mov
add
out
push
out
mov
jns
push
cmc
cmpl
cmc
xor
mov
data16
mov
add
mov
rcrl
out
mov
jns
ret
cwtl
add
into
sub
add
orb
pop
and
and
add
shll
out
loope
mov
sbb
add
sarl
fsts
xor
cmp
jb
push
dec
pop
add
cmp
sarl
add
stos
out
mov
mov
add
ficoms
out
mov
adc
add
xchg
jge
dec
pop
xchg
movsl
add
mov
xchg
sbb
cwtl
add
fidivrs
fucomp
mov
adc
inc
incb
push
cmp
test
je
add
jg
push
movsb
xor
push
xchg
or
xor
xor
sarl
incl
movsb
xor
sbb
cmp
stos
mov
add
cmpsb
xchg
rol
es
push
movsb
xor
jnp
mov
insl
dec
gs
hlt
mov
loopne
jg
jmp
movsl
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
sbb
xacquire
je
add
or
rorl
cld
outsb
pop
movsb
xor
mov
popa
lock
add
and
mov
pop
sbb
mov
cld
dec
pop
in
mov
insb
xor
jns
ret
pop
test
jle
repnz
xchg
lcall
mov
push
movsb
xor
scas
test
push
movsb
xor
mov
sub
sbb
fbstp
fsubrs
imul
fimuls
jns
pusha
cwtl
add
inc
hlt
out
mov
push
push
movsb
xor
jo
pop
and
cmp
outsl
jle
cmc
ja
dec
out
sbb
stos
mov
aad
sub
and
xor
int
jmp
sub
jge
dec
pop
push
push
mov
push
push
movsb
xor
lahf
dec
jg
orb
clc
bound
pop
and
cmpsl
push
inc
mov
out
mov
std
push
movsb
xor
mov
test
lock
and
bound
cli
add
js
xchg
mov
sbb
push
movsb
xor
xor
sarl
incl
movsb
xor
sbb
in
pop
shll
inc
sub
scas
insb
mov
arpl
cwtl
add
out
add
mov
add
pushf
incl
push
movsb
adc
jle
and
jle
addr16
mov
idiv
shll
pop
pushf
add
movsb
fxtract
push
cltd
push
sbbl
ljmp
sub
leave
xor
popf
cld
add
fs
adc
mov
std
enter
pop
cmp
pop
mov
movl
xor
aam
xor
mov
add
ja
fsubl
insb
push
movsb
xor
movsb
xor
mov
int3
sbb
pop
push
movsb
xor
jae
adc
dec
data16
mov
jns
pop
cwtl
add
lods
adc
inc
xor
push
jne
jne
je
lods
add
enter
push
je
std
push
movsb
xor
adc
dec
and
loopne
or
out
mov
cwtl
in
mov
push
add
pop
jp
orb
sbb
cmp
or
xor
xor
adc
sub
popa
sub
mov
test
jb
or
xor
sub
pop
incl
movsb
xor
jecxz
cmp
lea
decl
push
movsb
es
push
movsb
xor
ficomps
popf
mov
xchg
mov
nop
clc
imul
out
xchg
nop
mov
dec
popf
xchg
movsl
xor
scas
jp
push
movsb
xor
lcall
or
enter
add
sahf
fcmovu
push
dec
xor
or
sbb
jecxz
cld
fiadds
cmc
out
mov
mov
xor
push
xchg
or
xor
xor
aam
aaa
pop
incl
movsb
xor
sbb
mov
cmp
xor
add
mov
lods
call
enter
push
jae
xor
lahf
stos
dec
sub
jb
or
pop
popf
push
movsb
xor
cmc
andb
cmpb
xchg
fldl
jl
xor
push
cmp
mov
movsb
xor
and
gs
movsb
leave
jl
mov
int3
fwait
arpl
js
xchg
xchg
cmp
mov
sub
fnstenv
in
and
mov
add
dec
movsb
xor
loope
add
mov
inc
push
scas
jg
push
movsb
xor
push
add
push
xchg
or
xor
xor
aam
aaa
pop
incl
movsb
xor
sbb
dec
adc
mov
add
cmp
pop
popf
bound
testb
es
pop
jb
aad
jmp
push
call
movsb
xor
movsb
xor
addl
aam
filds
push
movsb
xor
mov
shrl
add
lods
movsl
xor
mov
add
js
mov
push
push
adc
dec
push
pusha
test
jne
sti
pop
xchg
cmp
movsb
xor
jg
and
and
pop
aam
filds
pop
movsb
xor
xchg
mov
pop
mov
mov
xorl
jge
dec
pop
jg
in
incb
push
movsb
movsl
add
pushf
incl
push
movsb
adc
xchg
mov
adc
movsb
repz
xchg
imul
jbe
push
cld
lods
test
add
sbb
dec
stos
mov
aam
xor
mov
add
ja
jg
jp
outsl
dec
pop
push
push
jae
or
xor
jecxz,pn
jl
pop
incl
movsb
xor
jecxz
rolb
xor
lods
leave
xor
add
push
push
addr16
shlb
insb
jb
pusha
lahf
in
cmp
inc
dec
pop
add
cmp
add
movsb
es
push
movsb
xor
sub
jl
lods
leave
xor
pop
adc
adc
mov
int3
pop
jnp
sarb
jmp
int3
inc
ficoms
out
mov
jns
ret
or
xor
aam
lods
aad
mov
int
xor
into
dec
cs
test
mov
add
pushf
incl
push
movsb
adc
jle
and
jle
addr16
mov
cwtl
and
mov
out
mov
add
pushf
incl
push
movsb
adc
jle
and
jle
addr16
mov
mov
popa
fistps
loopne
jbe
out
mov
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
nop
fcoml
add
fidivs
aad
inc
add
out
mov
jns
mov
xor
ficoms
stos
xchg
xor
sub
jne
dec
bound
add
cltd
test
xchg
ret
mov
add
jle
xor
das
or
movsb
add
dec
movsb
xor
and
mov
orl
clc
bound
pop
cmp
fadds
mov
xchg
jne
dec
pop
xchg
movsl
xor
movsb
xor
jg
and
and
pop
aam
filds
outsl
movsb
xor
xchg
pop
fs
sub
mov
nop
mov
mov
add
aam
xor
movsb
xor
mov
int3
mov
pop
aam
filds
pop
movsb
xor
mov
ret
pop
xor
sbb
cwtl
add
movsb
xor
lea
int3
jno
pop
aam
filds
pop
movsb
xor
jne
dec
fcomi
das
adc
mov
add
ljmp
push
movsb
xor
lods
ds
pop
es
movsb
xor
xchg
lret
mov
adc
mov
or
lahf
mov
cs
imul
jne
or
xor
sbb
aad
pop
pop
incl
movsb
xor
jecxz
xchg
fildl
and
mov
jmp
clc
cmp
pop
mov
cwtl
add
inc
or
out
mov
sub
dec
std
add
inc
decl
stos
mov
rol
xor
mov
add
jns
js
add
dec
movsb
xor
and
xor
push
movsb
xchg
fidivrs
pop
adc
mov
sbb
push
movsb
xor
jecxz,pn
jl
pop
incl
movsb
xor
jecxz
mov
jb
pop
dec
pop
add
cmp
push
movsb
jne
andb
mov
pop
jno
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
sbb
imul
adc
popf
add
push
movsb
add
in
mov
push
xorb
bound
xor
movsb
lret
dec
sbb
xchg
or
movsb
xor
mov
int3
sbb
pop
pop
movsb
xor
jae
xchg
xchg
int
int
jne
adc
pop
pushf
pop
movsb
xor
test
dec
inc
ds
adc
lcall
out
mov
or
testl
mov
ss
or
mov
cltd
les
xor
and
sarl
les
pop
dec
pop
jg
stos
or
jbe
add
cmp
pop
cli
jecxz
pop
popf
inc
add
movsb
movsl
add
pushf
incl
push
movsb
adc
mov
dec
addr16
mov
je
cmp
pop
popf
pop
movsb
xor
mov
cmp
test
mov
and
fdivrs
lret
movsb
xor
addl
aam
filds
outsb
movsb
xor
mov
pusha
loope
cmp
lock
jle
dec
decl
push
mov
add
movsb
xor
lea
int3
jno
pop
aam
filds
jo
xor
jne
xchg
aam
in
call
sbb
pop
push
bound
incl
push
movsb
int
xor
push
movsb
pusha
lahf
in
mov
mov
dec
loope
scas
out
mov
or
add
dec
dec
and
cwtl
add
cs
sub
and
rorl
jg
xchg
movsb
scas
cli
fisubrs
outsb
loop
mov
mov
push
mov
incb
push
and
fs
pop
add
mov
mov
add
mov
jae
dec
and
and
add
lock
add
add
inc
les
std
fldl
add
dec
pop
add
mov
mov
ret
cwtl
add
into
mov
jns
js
add
jg
jo
cwtl
add
jecxz
call
cmp
dec
pop
jge
pop
cmp
in
pop
cwtl
add
add
out
push
out
mov
jns
ret
cwtl
add
into
sub
add
mov
pop
movsl
xor
cmp
jo
pop
jg
mov
jp
dec
pop
jg
xchg
or
fidivs
cmp
jb
dec
pop
add
mov
mov
ret
cwtl
add
ds
push
out
mov
imul
and
push
call
xor
push
movsb
xor
fcomps
mov
ficomps
sti
notb
and
add
lods
out
mov
push
dec
jle
and
cmc
ficoms
iret
outsb
pop
movsb
xor
mov
xor
mov
test
dec
xor
into
adc
mov
jne
push
mov
adc
in
add
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
movsb
xor
pusha
nop
pop
repnz
pop
testb
pop
sub
pop
mov
pop
je
pop
mov
pop
or
nop
pop
enter
cltd
mov
pop
and
pop
adc
bound
pop
lret
cltd
nop
pop
xor
jae
pop
das
mov
nop
pop
mov
pop
push
fmuls
pop
scas
jne
pop
inc
or
pop
daa
ljmp
jno
nop
pop
xchg
pop
nop
pop
fmull
pop
inc
ja
pop
aad
nop
pop
or
nop
pop
xchg
je
pop
stc
sbb
pop
xor
nop
pop
jnp
pop
rcrb
pop
push
sub
pop
pop
aas
nop
pop
sbb
pop
sbbb
es
nop
pop
xor
pop
jp
nop
pop
xor
nop
pop
aaa
mov
pop
mov
pop
inc
popf
nop
pop
movsb
xchg
nop
pop
add
pop
and
nop
pop
cmp
nop
pop
sbb
adcl
push
popf
nop
pop
jns
nop
pop
ficoms
pop
xchg
rorb
pop
jl
pop
adc
xchg
pop
mov
pop
nop
pop
lods
in
pop
adc
nop
pop
mov
push
pop
hlt
and
pop
call
mov
pop
outsb
test
pop
sub
pop
xor
pushf
nop
pop
gs
nop
pop
dec
ja
pop
int
pop
inc
cs
pop
ret
pop
push
leave
pop
jnp
nop
pop
xchg
mov
pop
mov
imul
in
cmp
pop
loope
nop
pop
sub
pop
in
push
nop
pop
call
test
pop
and
pop
pop
testb
mov
pop
push
inc
nop
pop
jmp
nop
pop
ds
pop
stc
rorl
pop
int
nop
pop
pushf
aas
pop
js
pop
mov
pop
sbb
nop
pop
inc
jbe
pop
inc
push
pop
mov
xchg
pop
sub
pop
addb
pop
in
testb
imul
pop
test
nop
pop
jne
nop
pop
dec
inc
pop
xlat
loop
pop
fisubl
pop
sarl
pop
xchg
pop
sbb
scas
nop
pop
ret
pop
lea
pop
fcoml
pop
out
scas
nop
pop
daa
mov
pop
sbb
pop
imull
pop
iret
lahf
nop
pop
adc
pop
mov
inc
nop
pop
xchg
stc
pop
hlt
je
pop
push
dec
pop
mov
xchg
pop
jnp
nop
pop
cmpsl
jg
pop
ret
cmp
pop
test
add
jg
mov
and
mov
push
ja
cmp
or
pop
push
movsb
xor
adc
mov
addr16
mov
push
movsb
xor
xchg
xchg
add
push
stos
stos
mov
incb
aam
pop
bswap
jp
lods
fisubs
pushf
and
jge
fidivs
aad
lods
sub
push
xchg
add
xorb
cmp
mov
push
cmp
shl
daa
xchg
cmpsb
lock
xor
jae
or
xor
pop
int
movsl
xchg
outsb
scas
pop
sti
cmp
push
movsb
xor
inc
mov
or
xor
popf
add
push
movsb
fwait
lea
mov
jle
inc
movsb
xor
push
scas
mov
stos
pop
loop
pop
fiaddl
mov
cmp
and
lcall
addr16
cmp
movsb
jl
addr16
out
popf
pop
popf
in
daa
xor
popf
xor
inc
test
ds
mov
popf
mov
stc
cli
pushf
jp
incb
test
or
sbb
inc
push
movsb
xchg
addr16
or
xchg
mov
jl
and
or
xor
mov
xor
push
fistps
mov
lods
push
repz
mov
ret
imul
out
addb
xor
jle
inc
movsb
xor
jecxz
or
xchg
push
movsb
adc
movsl
xor
fidivs
xor
push
fists
jne
inc
js
xor
hlt
int
mov
enter
cmp
leave
jl
and
or
xor
dec
movsl
xor
sbb
add
lahf
ljmp
jb
scas
adc
popf
jo
xor
xchg
jge
inc
movsb
xor
mov
xchg
stos
add
arpl
mov
aas
cmp
out
stc
cli
add
bound
xor
out
lcall
divb
push
sub
pop
call
pop
popf
arpl
push
movsb
jle
rol
push
and
aas
push
movsb
rolb
dec
push
add
and
or
imul
repz
xchg
lods
push
test
je
and
and
xchg
std
push
mov
sub
in
std
aam
imul
adc
pop
es
movsb
xor
push
popf
test
movsb
xchg
addr16
xor
xchg
inc
pop
movsl
xor
stos
mov
and
sbb
mov
sbb
clc
call
dec
aam
lock
es
mov
mov
or
push
popf
xor
call
push
pop
xlat
addl
xor
xchg
add
int3
mov
incb
sub
adc
cmp
lahf
add
and
or
lcall
lods
jo
add
add
or
movsb
xor
pop
xlat
sbb
xor
mov
and
cld
xor
aam
adc
les
lods
data16
xor
pop
jbe
xor
aam
add
movsl
inc
dec
lods
add
push
lea
inc
movsb
xor
loope
sub
into
movsl
xor
ja
mov
addr16
xor
push
mov
ljmp
push
movsb
es
movsl
xor
callw
rcr
xchg
xor
subb
push
movsb
jle
inc
movsb
xor
lahf
stos
call
addb
push
test
popf
into
or
pop
nop
mov
and
jmp
sbb
out
cs
hlt
sbb
sti
lcall
jle
fcmovb
inc
or
fcoml
lret
and
test
bound
xchg
add
test
push
dec
dec
int3
lahf
shrl
inc
dec
mov
add
pop
mov
jl
movsb
out
mov
cmp
xor
addr16
jb
movsb
xor
add
insb
repz
push
fistps
pop
mov
add
popa
fistps
add
filds
addps
pushf
daa
test
add
fidivrs
stos
test
xchg
addr16
xor
popf
mov
mov
lods
push
ljmp
int
inc
sub
out
out
xchg
test
cld
aam
xor
ss
ds
add
popf
mov
push
movsb
loop
cmp
incb
mov
movsb
xor
dec
test
test
mov
lret
jne
or
xor
nop
movsl
xor
fnstenv
pushf
jb
incb
aam
stc
ds
lret
sub
sti
mov
push
movsb
jle
fidivrl
xor
addr16
jl
and
or
xor
push
imul
scas
push
movsb
into
pop
sub
popf
sbb
popf
hlt
push
movsb
jle
addr16
andb
movsb
jecxz
cmpsb
push
jp
pop
cltd
dec
shl
sbb
jne
movsb
xchg
jp
ds
dec
cmpsl
dec
popf
push
jp
add
popf
std
xor
into
insb
test
lcall
cs
cli
aam
in
negb
pop
fistl
mov
jb
lahf
or
popf
out
ds
dec
mov
jg
mov
mov
movsb
and
cmpsl
cmc
outsb
inc
popf
jno
push
movsb
jle
ljmp
sbb
repnz
add
push
movsb
lret
and
insb
mov
stos
cwtl
and
loope
dec
xor
push
loop
mov
sbb
push
psubsb
mov
addr16
fisubrs
push
movsb
aad
sbb
popa
sub
mov
fidivs
push
sbb
adcb
loopne
sbb
cmp
subb
push
sub
add
cmp
cli
jl
pop
fwait
les
xor
pop
fwait
test
movsb
fimuls
jge
dec
push
imul
add
pop
fistps
xchg
mov
lods
shlb
fwait
sbb
xchg
adc
sub
lods
push
cmp
cmp
out
popf
ljmp
pop
xchg
out
adc
pushf
sub
incb
push
lods
and
jno
adc
sbb
xor
push
popf
js
movsb
mov
cmp
call
push
cmp
add
popf
les
push
movsb
xor
aam
cli
add
es
arpl
rcrl
xchg
jge
inc
movsb
xor
idiv
add
jl
andb
xor
pop
fwait
popa
pop
movsb
xor
pop
orb
mov
es
push
movsl
xor
stc
test
push
out
test
idivb
xlat
les
popf
hlt
lcall
sub
xchg
fld
test
and
in
lods
sar
stc
cli
add
fcomps
imul
xchg
movsb
xor
inc
mov
dec
lods
push
ret
add
dec
test
and
push
es
dec
test
pop
call
addps
out
addr16
mul
ficomps
xchg
cmp
cld
adc
out
push
movsb
jbe
push
movsb
xor
mov
movsb
xor
addr16
test
out
int3
cs
or
ja
stos
test
stos
add
movsl
and
jg
int3
jl
jb
or
push
mov
pushf
lods
dec
test
sbb
inc
rol
rcr
mov
push
int3
add
inc
movsb
xor
loop
add
jl
addb
xor
addr16
and
pop
es
and
and
cmpsb
faddp
stos
mov
or
ficomps
sbb
xor
mov
sbb
add
lret
push
cmp
out
push
add
push
cmp
fiadds
push
cmp
incl
push
movsb
fadds
pop
jle
pop
es
aam
xor
adc
jle
mov
bound
cmpb
test
iret
mov
and
movsb
xchg
xchg
inc
popf
gs
incb
sub
outsb
pusha
jle
mov
lods
inc
cmp
cmp
es
sbb
or
xor
xor
cmp
out
sbb
add
cmp
movsb
or
push
loop
js
fcom
jno
cmp
popa
movsb
xor
in
cli
add
jle
jp
pop
lods
rcrb
push
cmp
out
xchg
cli
jl
pop
iret
jle
pop
or
and
or
mov
mov
sahf
push
movsb
mov
and
or
mov
add
mul
int3
pushf
into
imul
dec
popf
ds
xor
and
xor
mov
push
sbb
push
push
popf
mov
cmpsl
adc
out
lcall
inc
movsb
xor
clc
cli
jp
pop
mov
addr16
out
xchg
cli
jl
pop
xchg
push
movsb
andb
rorb
popf
mov
enter
add
xchg
incl
push
cmpsl
dec
jnp
lcall
push
and
pop
mov
xor
ja
lock
int3
popa
fists
and
xor
mov
xor
ja
xor
addr16
or
xor
ficoms
test
and
or
and
push
movsb
xor
pop
xlat
jl
pop
rcrb
and
or
fcomip
addps
jecxz
movsl
xor
xchg
lcall
and
out
push
and
xor
fistpll
fbstp
sbb
xor
sub
pop
sub
je
add
mov
adc
fwait
into
mov
or
and
or
mov
jle
pop
add
push
psubsb
ds
inc
popf
imul
xor
repz
xchg
jmp
and
or
push
dec
cmp
movsb
xor
pop
es
rep
xor
push
lea
inc
mov
sahf
iret
or
and
adc
mov
and
xor
pushf
cmp
sbb
call
lock
inc
fldl
cmp
or
lds
add
pop
aam
pop
cmp
call
push
movsb
fwait
out
movsb
xor
pop
je
push
movsb
xor
ficoms
pushf
inc
clc
incb
cmp
cmpl
movsb
mov
jge
pop
call
push
movsb
mov
mov
imul
movsb
jle
cmp
dec
dec
aam
repz
push
shrb
jbe
and
jg
movsl
xor
cmpsb
outsl
sub
pop
dec
cmpsl
mov
xchg
mov
mov
and
popf
dec
movsb
xor
jne
cmp
xor
or
shlb
stc
cli
sbb
in
add
es
movsl
xor
mov
push
inc
jg
daa
or
je
adc
imul
andb
pop
push
movsb
aad
mov
jge
stc
addr16
enter
sbb
mov
push
movsb
xchg
addr16
out
jbe
fcomip
jg
out
mov
in
mov
or
pushf
xor
cld
xchg
push
and
xor
aam
add
add
push
xchg
incb
das
cmp
cli
add
xchg
addr16
out
cmp
call
mov
in
push
movsb
je
pop
push
add
lds
movsb
xor
cwtl
jge
inc
movsb
xor
clc
cli
add
jl
addr16
aas
cwtl
push
movsb
sahf
xor
adc
movsb
xchg
addr16
fidivs
or
aas
or
out
out
stc
cli
dec
lods
mov
add
cmp
out
stc
cli
push
sub
jmp
push
sbb
sbb
addr16
fnstenv
push
movsb
mov
and
jp
xchg
iret
cmpl
sbbl
xor
aam
filds
stos
adc
ds
filds
push
sub
subl
pop
push
sub
subl
cld
add
aam
leave
fists
add
xor
inc
movsb
xor
mov
lock
pop
call
shll
add
mov
cld
mov
xor
aam
ds
sub
mov
loop
daa
sub
clc
addr16
xor
shll
mov
push
movsl
cmp
fldcw
jne
dec
and
jnp
lahf
ljmp
mov
jae
and
test
addr16
out
mov
xor
addr16
jl
lcall
out
mov
fcomps
xchg
loopne
or
pop
jnp
pop
aam
movsb
lods
roll
in
fisubs
xchg
popf
mov
addr16
int3
jl
lcall
call
xchg
decl
adc
add
aam
stc
sub
jge
lahf
sbb
sbb
lock
ret
imul
je
push
mov
lahf
push
movsb
fwait
xchg
jle
xor
pop
xchg
push
sbb
rcrb
fwait
and
push
lods
fisubrl
dec
lods
arpl
sarb
xor
imul
jle
pop
into
jl
and
or
xor
mov
dec
dec
and
stos
call
in
xor
movsb
xor
xorl
add
cwtl
pusha
sti
je
into
pushf
stc
pusha
xor
leave
fistpll
pop
es
movsb
xor
push
movsb
sbb
js
ljmp
mov
test
popf
pop
and
out
sbb
xor
mov
xchg
xchg
loopew
hlt
js
jl
mov
cmpsb
xlat
rcrb
and
or
mov
dec
lods
or
sbb
fcomps
sub
pop
xor
jmp
lods
pop
add
and
cld
lods
sub
add
inc
movsb
xor
popf
sbb
push
movsb
lret
pop
enter
fadds
push
push
mov
addr16
sbb
push
movsb
jl
addr16
ficoml
sbb
out
loope
jle
push
orl
movsb
xor
push
sbb
adc
and
or
mov
xor
jecxz
or
aas
or
jp
pop
xlat
test
fwait
or
xor
push
inc
add
cmp
jge
inc
movsb
xor
out
add
cmp
out
es
add
aaa
psubsb
and
cmp
incb
jbe
fcomip
push
pop
es
outsl
pop
jle
inc
movsb
xor
mov
test
je
or
xor
addr16
mov
jge
pop
jnp
lret
sahf
xchg
push
ss
ret
stos
push
imul
sbb
fistpll
cmp
xchg
cmp
filds
sub
popf
pop
int
movsb
into
sbb
and
les
pop
call
fwait
andb
or
in
in
data16
xor
mov
push
lods
or
push
call
xchg
addr16
jge
lcall
inc
movsb
xor
pop
jne
outsl
aam
pushf
lret
cmp
add
xchg
xor
jmp
push
adcl
fldcw
mov
pop
call
incb
mov
dec
dec
sbb
cli
add
out
xor
jmp
ficomps
jl
pop
imul
dec
scas
das
xchg
add
add
test
es
out
movsl
xor
and
add
xor
push
sti
xor
popf
jb
push
movsb
mov
pop
popf
sti
arpl
fwait
and
add
stc
and
xchg
cli
add
xchg
addr16
lret
sahf
push
movsb
jle
inc
movsb
xor
loop
jp
pop
xlat
xchg
inc
pop
xlat
test
sbb
cmp
movsb
xchg
mov
movsl
xor
push
pop
mov
addr16
out
pushf
scas
xor
or
cmpsl
push
test
jae
push
movsb
xor
movsl
dec
add
in
int3
dec
xchg
adc
les
popf
movsl
or
movsb
movsb
inc
pop
test
call
aam
push
xchg
xor
imul
ret
leave
add
and
stos
inc
ret
leave
dec
xor
call
pop
pop
xlat
dec
lods
xor
add
subl
popf
sbb
and
add
daa
or
xor
sbb
popf
bound
incl
aam
jae
xchg
movsl
mov
dec
hlt
movsl
xor
inc
mov
testb
xor
cmp
addb
enter
jg
pop
or
push
lcall
sub
mov
push
push
ret
pushf
ret
add
and
or
fistps
mov
pop
lods
push
push
add
ficoms
pushf
andb
mov
xor
movsb
xor
jbe
fcomip
addps
mov
movsl
xor
push
xor
filds
lods
adcl
das
loop
lods
inc
mov
push
cmp
js
push
and
xor
addr16
out
push
pusha
add
addb
scas
imul
mov
daa
or
xor
pop
ret
pushf
lock
add
adc
add
jmp
add
es
ja
xor
pop
mov
addr16
es
push
mov
lock
addr16
or
pushf
ficoms
stos
call
addb
daa
or
xor
pop
jle
addr16
jle
inc
movsb
xor
xchg
cli
add
xchg
addr16
xor
xchg
push
movsb
xor
aam
inc
xor
out
and
inc
xor
out
sbb
inc
dec
lods
pop
mov
out
shr
add
mov
add
jle
inc
movsb
xor
push
fistps
movsl
mov
sub
lods
test
lcall
inc
movsb
xor
adc
add
cmp
rcrb
adc
add
mov
cmp
aad
aam
in
cld
sub
clc
add
pop
call
push
sbbb
inc
pop
fwait
sbb
xor
pop
fwait
or
xor
aam
xor
ljmp
es
jmp
pop
call
push
lahf
stos
in
push
imul
add
aas
or
jg
add
cmp
imul
shl
and
and
jl
xor
out
lock
cmp
xor
lahf
ljmp
stc
cli
test
and
loope
mov
push
into
push
movsb
sub
mov
pop
push
dec
rorl
mov
or
mov
xchg
cld
cli
add
jle
inc
movsb
xor
popa
fistps
cld
test
les
and
xchg
push
and
out
adcb
push
and
adc
add
cmp
call
push
xor
out
jmp
push
movsb
es
movsl
xor
shll
pop
call
push
movsb
es
push
xor
cmp
xor
rorb
inc
movsb
xor
mov
xor
jecxz
push
push
sub
pop
lods
inc
push
add
mov
xchg
sbb
mov
dec
pop
movsl
inc
test
sbb
lock
pop
pop
or
popf
int3
mov
mov
jle
pop
sub
xor
addr16
loopne
push
movsb
out
xor
xchg
fidivrs
inc
in
jle
xchg
mov
mov
loopne
es
out
je
movsb
dec
mov
incl
push
movsb
es
xor
mov
idiv
jp
pop
xlat
pushf
mov
cli
divb
out
mull
or
roll
addr16
add
push
movsb
es
js
xor
pop
sarb
jb
push
movsb
xor
push
movsb
cmp
jmp
or
add
lods
roll
cmp
or
adcb
xor
fcoms
mov
add
jmp
sti
es
inc
cmpsl
push
stos
mov
or
cmp
ja
lret
xchg
movsb
xor
pop
mov
mov
lret
orl
hlt
adc
mov
repz
popf
movsb
lret
jle
addr16
outsl
addr16
lcall
lret
xchg
popf
pop
push
movsb
leave
pushf
jg
xor
adc
dec
dec
sub
mov
push
popf
pop
add
orl
cmp
out
cmpsl
xor
sbb
leave
fistps
and
pop
lods
movsb
xor
pop
rclb
int
inc
movsb
xor
push
sub
push
jae
inc
and
divps
or
and
xor
andb
xor
push
lds
and
and
xor
aam
aam
xlat
or
jmp
ror
xchg
xchg
addr16
xor
mov
test
insl
dec
movsl
xor
mov
xchg
movsb
xor
fcomps
nop
mov
pop
pop
pop
sub
pop
pop
pop
sub
xor
inc
movsb
xor
movsb
shrl
and
or
pushf
loopne
incb
insb
not
jle
pop
int
jp
xor
mov
test
cmp
xor
lea
std
mov
or
jo
mov
or
inc
dec
and
sbb
lods
shlb
push
pop
cs
test
add
xchg
cli
add
xchg
addr16
sub
xchg
addr16
push
mov
stc
addr16
or
push
movsb
cli
pop
push
movsb
xor
inc
movsb
xor
mov
add
and
in
lods
and
add
cmp
call
push
cmp
pop
call
push
or
call
outsl
pop
jle
inc
movsb
xor
mov
lock
addr16
out
mov
jle
inc
movsb
xor
pop
sbb
cmp
out
cmp
xor
popf
addl
mov
addr16
xor
movsb
xor
pop
xlat
jl
pop
fwait
mov
movsb
xor
pop
fwait
sbb
test
cmp
jg
rol
push
loopne
jmp
loopne
lea
dec
mov
xlat
jl
test
pop
addr16
int3
xchg
xchg
push
movsb
xor
sub
mov
add
and
lods
sbb
movsb
xor
mov
fcmovu
ja
es
push
movsb
xor
int3
pop
fisttps
mov
mov
inc
popf
mov
jo
movsb
xor
pop
mov
push
and
xor
push
movsb
leave
shl
dec
sbb
bound
and
or
mov
insb
push
insb
sub
jmp
div
mov
int
jge
lds
call
push
aaa
movsb
call
push
cmp
cli
jl
pop
fwait
mov
js
dec
push
je
pushf
divb
add
out
shrb
sub
inc
aam
std
adc
jge
cmpsb
mov
cmp
push
movsb
xor
sub
sti
stc
and
test
mov
fisttps
mov
mov
and
or
jl
push
arpl
add
leave
fistps
test
iret
out
cmp
call
push
cmp
jge
inc
movsb
xor
dec
lock
jle
mov
dec
sub
mov
daa
imul
clc
xchg
jb
mov
xor
addps
jl
pop
es
movsl
xor
pop
mov
addr16
or
cmpl
add
xchg
addr16
cmp
insl
cmpl
faddp
filds
sbb
jmp
xchg
cld
cli
add
es
cltd
movsl
xor
pop
dec
add
fisubrs
mov
hlt
xchg
popf
add
sub
jae
not
jl
and
jmp
xchg
push
xchg
nop
push
xchg
dec
xchg
lds
xor
iret
divb
ds
xlat
mov
and
cltd
and
repnz
gs
out
popf
imul
clc
pushf
jg
in
inc
and
or
push
out
lock
out
outsl
loopne
test
daa
in
dec
jae
and
sti
outsb
mov
cwtl
sti
xor
ljmp
dec
xchg
sti
fs
mov
test
gs
dec
je
xchg
test
popf
jmp
xor
add
push
sti
jmp
pop
cmpsl
add
sti
jmp
cwtl
jmp
adc
dec
lds
arpl
xchg
sti
test
ffreep
jmp
xchg
out
cmp
icebp
dec
clc
arpl
pop
lock
add
test
nop
sti
jmp
movsb
cmpsl
outsb
subl
jg
sti
loopne
jle
movsb
inc
cwtl
sti
or
jl
and
out
or
lods
sti
jmp
sbb
xor
mov
lods
lea
scas
dec
xchg
cld
adc
popa
xor
test
aad
dec
lods
ljmp
xchg
sti
add
lods
cmpsl
test
sti
jmp
ret
xchg
mov
pop
cwtl
divl
imul
aaa
fisubrl
mov
or
jmp
out
add
pop
lock
xchg
sti
test
sti
jmp
mov
mov
push
push
xchg
sti
jmp
repnz
rorl
add
sub
add
sub
xchg
jmp
sbb
aam
in
fs
jge
pushf
test
in
dec
fucom
aaa
pop
mov
xor
mov
sbb
cmp
loope
xchg
sbbb
insl
mov
jge
fsubs
dec
loopne
out
dec
xchg
out
sbb
cwtl
sti
or
nop
shr
dec
xchg
xor
xor
test
test
rcl
ret
xchg
inc
test
sti
jmp
mov
push
call
dec
xchg
dec
andl
pop
repz
hlt
mov
pop
adc
add
lea
add
push
add
push
cmpsl
aaa
addr16
xchg
fs
push
lock
xchg
sti
outsb
test
inc
call
das
xchg
sti
arpl
push
inc
xchg
sti
jmp
jae
out
sub
push
inc
xchg
sti
jmp
cmpl
and
mov
cmpsb
sbb
xlat
iret
shr
ret
xchg
arpl
xchg
sti
fs
dec
mov
lret
dec
movsl
pop
cwtl
adc
adc
jge
dec
xchg
inc
subb
lret
dec
jb
mov
nop
pop
scas
dec
xchg
xchg
test
push
out
loope
xchg
sti
arpl
lahf
fidivs
mov
arpl
iret
fimull
inc
dec
pop
test
idiv
jmp
test
test
xor
mov
jg
or
xchg
repz
xchg
inc
mov
push
in
or
cwtl
sti
bound
lahf
test
sti
jmp
inc
cmpsl
test
lret
ret
insb
mov
xor
iret
pop
jp
pop
dec
cwtl
sti
in
adcb
insb
sbb
mov
jg
scas
je
enter
jno
dec
dec
scas
iret
test
fucomip
dec
gs
fstl
cli
jmp
and
jmp
sbb
lock
xchg
sti
in
xchg
adc
dec
jg
mov
iret
iret
adc
sti
data16
out
arpl
out
mov
dec
and
jmp
xor
lds
push
jno
xchg
sub
cmp
push
rcr
test
jmp
mov
xor
jmp
sbb
lods
out
test
dec
mov
iret
dec
xchg
popa
jmp
nop
test
into
repnz
mov
and
movsl
pushf
or
xchg
test
push
xchg
jae
arpl
mov
movsb
sti
jmp
mov
or
inc
int3
lret
lods
lret
ret
insb
jae
ficoml
out
mov
inc
mov
sub
cltd
mov
enter
enter
inc
xchg
sti
jmp
gs
iret
enter
inc
xchg
sti
jmp
ljmp
or
jmp
movsb
cmpsl
ds
jle
loopne
scas
aas
arpl
aaa
in
dec
fistl
add
jmp
sbb
iret
adc
scas
inc
xchg
sti
jmp
fnsave
mov
xchg
sti
inc
dec
out
jp
cwtl
sti
insb
nop
lods
sti
jmp
nop
jmp
leave
int3
insb
mov
frstor
fisubl
jmp
push
test
pop
cmovl
xchg
dec
clc
and
xor
add
add
add
call
add
push
mov
sub
pop
mov
mov
add
inc
inc
aaa
add
add
subb
xchg
cmp
and
xor
cmp
adc
sub
pop
andb
cmp
add
sub
push
mov
add
or
cmp
add
add
aas
pop
add
mov
add
pop
addr16
mov
add
add
nop
dec
sbb
add
add
pop
daa
fiadds
out
pop
clc
xlat
shr
inc
sub
in
cmp
push
ljmp
add
or
ljmp
lea
pop
test
add
ret
add
lods
mov
add
cmp
add
add
fmull
rcrb
mov
push
add
add
add
add
pop
ljmp
jae
mov
in
add
imul
and
add
repz
mov
and
add
leave
mov
push
ljmp
mov
add
add
add
ljmp
add
xor
in
clc
aam
lret
xor
add
push
sub
dec
ret
push
ljmp
add
push
push
add
add
add
add
push
mov
mov
pop
xor
pop
ljmp
imul
and
add
mov
add
ljmp
and
add
mov
and
add
mov
mov
add
mov
pop
and
add
mov
int3
mov
pop
ljmp
fcoms
insb
sub
sub
push
cs
pop
mov
mov
add
pop
pop
add
pop
mov
ljmp
mov
push
mov
add
pop
mov
pop
ljmp
sub
shrl
ljmp
lds
ret
and
jae
inc
inc
dec
xor
xor
sbb
repnz
ljmp
cmp
dec
push
mov
add
pop
ljmp
push
and
push
pop
les
sub
ljmp
push
add
mov
adc
inc
add
add
add
add
push
pop
push
add
add
add
mov
push
ljmp
sbb
and
add
xor
jecxz
xchg
adc
add
mov
add
add
jl
hlt
cmc
sub
pop
ljmp
and
add
add
pop
sub
add
add
pop
add
mov
add
add
push
add
add
ljmp
lds
add
mov
inc
mov
and
pop
push
mov
add
add
or
dec
test
add
add
add
or
lds
fldcw
ficomps
insb
mov
add
add
sbb
add
pop
add
mov
add
pop
ljmp
ret
add
add
add
add
fwait
dec
add
push
ljmp
mov
add
add
add
add
movb
ljmp
and
xor
ljmp
xor
add
out
pop
add
add
add
add
dec
or
add
jnp
call
lds
add
cld
pusha
mov
and
mov
imul
xor
add
in
les
mov
add
pop
js
add
sub
pop
js
pop
xor
and
sbb
lock
fsubr
nop
out
add
xor
xor
sbb
add
mov
add
push
imul
pop
mov
pop
ret
xor
rolb
add
in
push
icebp
add
sbb
out
add
xor
xor
xor
push
mov
not
mov
mov
add
add
call
add
nop
add
add
add
cmp
add
mov
xor
and
daa
and
sub
add
push
dec
add
lahf
jb
add
pop
test
add
mov
add
add
insb
and
roll
add
arpl
ljmp
add
enter
jns
je
add
sub
and
push
ljmp
or
add
shl
add
sub
pop
clc
shll
and
ljmp
out
out
add
mov
pushf
xor
sbb
in
ljmp
and
mov
ljmp
add
mov
mov
xor
pop
inc
push
mov
shr
ljmp
and
push
and
add
ljmp
push
mov
xor
cs
sub
loopne
enter
sub
add
add
add
sahf
cmpsb
add
push
ljmp
add
add
push
push
mov
add
add
add
mov
add
add
add
add
out
add
ret
add
sub
sbb
add
add
sbb
ljmp
push
pusha
add
mov
add
mov
ljmp
add
out
add
mov
push
mov
ret
inc
ret
push
mov
ret
inc
or
outsl
aaa
dec
xor
or
jb
out
sbb
jmp
add
ljmp
lock
mov
push
sub
add
pop
test
add
and
mov
and
add
lds
add
incl
dec
add
xor
pop
sub
jmp
pop
add
push
mov
jmp
mov
sub
pop
add
push
push
pop
jmp
push
jmp
sub
add
add
sub
push
mov
sub
pop
mov
push
mov
add
add
xchg
pop
jmp
xor
xor
xor
mov
jmp
add
jmp
push
mov
mov
dec
jmp
pop
mov
push
mov
sub
jmp
mov
push
push
jmp
inc
not
shr
push
jmp
mov
push
mov
add
pop
sub
xchg
pop
mov
push
jmp
mov
add
pop
mov
add
add
push
mov
push
push
mov
push
addl
pop
sub
pop
push
mov
mov
pop
jmp
mov
push
push
mov
jmp
pop
pop
push
mov
jmp
sub
mov
push
mov
add
add
xchg
pop
xchg
pop
mov
mov
add
sub
sub
pop
movzbl
lea
push
mov
jmp
mov
add
xor
and
jmp
xor
jmp
add
add
pop
add
xor
xor
xor
pop
push
mov
jmp
and
push
mov
jmp
xor
jmp
dec
jmp
sub
jmp
push
mov
jmp
mov
mov
push
mov
add
add
push
mov
sub
jmp
add
jmp
pushl
mov
push
jmp
push
mov
add
add
xor
xor
jmp
add
push
mov
add
pop
jmp
shr
jmp
xchg
mov
mov
jmp
mov
mov
mov
jmp
lods
sub
sub
push
mov
add
jmp
shl
jmp
mov
xor
jmp
mov
jmp
add
add
pop
add
add
sub
push
mov
add
xor
push
jmp
pop
push
mov
and
pop
sub
sub
sub
push
mov
jmp
addl
pushl
pop
push
mov
jmp
popl
pop
add
push
push
jmp
pushl
jmp
xchg
pop
sub
add
add
jmp
sub
sub
pop
sub
sub
add
pushl
pop
push
push
mov
add
add
add
xor
xor
xor
pop
sub
mov
jmp
mov
jmp
sub
sub
add
add
jmp
mov
pop
pop
pop
jmp
pushl
jmp
sub
mov
push
push
pop
add
push
mov
dec
and
jmp
xchg
pop
jmp
push
mov
jmp
push
jmp
pushw
mov
mov
push
jmp
push
mov
push
jmp
add
push
push
pop
sub
jmp
popl
jmp
shl
push
jmp
push
push
mov
add
add
jmp
xchg
pop
mov
jmp
add
add
pop
xchg
mov
jmp
or
sub
add
pop
jmp
push
jmp
push
jmp
sub
xor
xor
xor
jmp
mov
push
mov
sub
jmp
push
mov
jmp
push
push
jmp
push
jmp
mov
jmp
shl
not
xor
xor
pop
sub
sub
mov
add
push
jmp
addl
subl
addl
jmp
mov
push
push
jmp
mov
jmp
push
pushl
pop
popl
mov
incw
pushf
jmp
sub
mov
mov
jmp
mov
add
jmp
add
and
push
mov
sub
mov
jmp
add
xor
xor
xor
mov
popl
pop
pushl
pushl
mov
add
jmp
push
mov
push
push
jmp
pushl
jmp
push
mov
sub
add
add
jmp
mov
push
push
push
pop
add
jmp
xor
mov
mov
add
jmp
mov
push
mov
push
pop
push
mov
add
jmp
addl
subl
sub
push
mov
add
pop
subl
pop
xor
push
push
pop
shr
or
jmp
xchg
not
xchg
jmp
add
push
mov
add
push
mov
jmp
push
pushl
pop
jmp
neg
push
jmp
mov
pop
add
mov
push
mov
add
add
jmp
jmp
push
push
mov
neg
jmp
sub
jmp
sub
jmp
mov
sub
xor
pop
jmp
xor
jmp
add
sub
pop
push
mov
add
pop
xor
xor
xor
mov
push
jmp
add
push
mov
add
pop
pop
add
xor
jmp
mov
pushl
jmp
sub
pop
pushl
jmp
sub
mov
push
mov
add
jmp
mov
add
sub
xchg
pop
mov
sub
mov
mov
mov
sub
jmp
or
or
push
mov
xor
pop
sub
add
jmp
push
mov
and
or
add
or
or
push
mov
and
shr
shr
xor
xor
pop
mov
pop
mov
pop
push
mov
mov
jmp
sub
xchg
pop
mov
push
jmp
add
pop
push
mov
mov
sub
shl
shl
xor
add
pop
xchg
jmp
sub
jmp
add
add
jmp
shl
xor
xor
pop
jmp
push
mov
or
mov
add
neg
xor
add
pop
jmp
mov
pop
add
pop
addl
add
subl
mov
add
jmp
add
add
xchg
pop
sub
mov
jmp
mov
mov
mov
pop
pop
dec
push
mov
xor
sub
shl
xor
or
pop
shl
and
xchg
neg
xchg
push
jmp
add
jmp
pop
popl
mov
jmp
push
mov
push
jmp
add
add
add
sub
pop
jmp
xor
pop
and
dec
not
sub
add
jmp
add
jmp
add
push
jmp
push
mov
pushl
mov
add
push
jmp
push
mov
jmp
push
mov
mov
pop
jmp
mov
push
jmp
add
mov
push
mov
add
push
mov
mov
jmp
sub
push
mov
sub
push
mov
mov
jmp
push
jmp
mov
push
mov
mov
pop
pop
sub
mov
mov
add
dec
not
push
jmp
add
push
jmp
mov
sub
mov
push
mov
addl
pop
push
mov
xor
inc
sub
xor
add
pop
sub
mov
jmp
push
mov
push
mov
add
add
add
xchg
mov
jmp
push
mov
push
mov
jmp
pushl
pop
push
mov
push
mov
addl
jmp
push
push
jmp
add
push
jmp
push
push
pop
jmp
mov
push
jmp
not
not
xor
sub
add
add
pop
sub
pop
pushl
mov
jmp
mov
push
pushl
pop
jmp
add
push
mov
push
mov
sub
neg
xor
and
sub
sub
pop
add
xor
neg
jmp
mov
add
jmp
xchg
pop
push
push
mov
mov
xor
mov
jmp
pop
push
push
jmp
sub
xor
xor
or
sub
jmp
inc
jmp
sub
mov
jmp
xorl
pop
jmp
mov
push
mov
add
pop
add
jmp
add
add
jmp
add
mov
jmp
add
pop
add
xor
xor
xor
jmp
push
mov
jmp
pop
sub
add
add
push
push
jmp
inc
push
notl
mov
add
add
jmp
dec
jmp
push
sub
mov
addl
jmp
pop
add
push
mov
jmp
pop
sub
push
subl
pop
add
jmp
push
jmp
push
mov
jmp
sub
add
jmp
mov
jmp
shl
jmp
pop
mov
jmp
mov
sub
or
sub
or
pop
push
negl
pop
add
xor
sub
add
jmp
mov
add
jmp
mov
jmp
add
add
jmp
push
jmp
shr
or
je
push
jmp
push
mov
jmp
mov
jmp
xor
add
jmp
mov
jmp
pop
push
pushl
jmp
mov
push
mov
mov
jmp
sub
add
shl
sub
add
pop
push
mov
push
jmp
sub
jmp
push
mov
jmp
mov
add
push
mov
dec
neg
dec
jmp
mov
pop
add
sub
sub
add
sub
push
xorl
pop
xor
mov
add
sub
mov
mov
xchg
jmp
add
pop
push
mov
sub
mov
mov
mov
or
not
jmp
push
mov
jmp
add
add
sub
mov
mov
and
neg
shr
sub
mov
mov
add
jmp
sub
mov
push
mov
jmp
mov
add
sub
xchg
pop
mov
push
mov
add
not
shr
push
sub
pop
jmp
mov
add
push
mov
xor
add
pop
add
push
mov
sub
pop
pop
jmp
pop
popw
pushw
mov
xchg
xchg
not
xchg
xchg
mov
push
jmp
pop
xor
pop
mov
jmp
push
pushl
pop
popl
pop
jmp
sub
mov
mov
shl
sub
add
jmp
sub
pop
xchg
pop
jmp
mov
push
jmp
pop
jmp
xor
sub
pop
push
mov
pushl
pop
popl
pop
mov
push
jmp
push
push
mov
mov
mov
xor
pop
jmp
push
mov
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
jmp
pop
and
jmp
add
pop
sub
jmp
pop
sub
xchg
jmp
mov
push
mov
push
mov
push
mov
jmp
mov
push
mov
mov
add
sub
xchg
jmp
mov
add
jmp
push
jmp
push
mov
xor
push
mov
and
or
neg
jmp
push
jmp
push
mov
jmp
pushl
pop
jmp
xchg
jmp
push
mov
xor
xor
pop
add
add
pop
dec
xor
sub
jmp
mov
shr
jmp
pop
or
shr
jmp
pop
push
jmp
push
push
jmp
mov
push
jmp
pushl
jmp
sub
mov
mov
shl
and
not
xor
jmp
shr
jmp
add
pop
push
push
pop
sub
add
jmp
xor
jmp
xor
xor
jmp
pop
sub
mov
pushl
mov
add
popl
jmp
add
xchg
mov
jmp
sub
mov
jmp
sub
mov
jmp
pushl
jmp
mov
jmp
pop
mov
jmp
add
push
xorl
mov
add
xor
pushl
pop
add
sub
mov
jmp
pop
push
jmp
mov
push
mov
sub
mov
jmp
xor
xor
jmp
mov
jmp
xor
add
jmp
sub
jmp
pop
jmp
pop
jmp
mov
push
mov
add
add
jmp
add
pop
add
push
mov
add
jmp
xor
push
mov
jmp
add
add
xchg
pop
push
jmp
sub
jmp
push
jmp
push
jmp
add
push
push
mov
mov
jmp
mov
sub
mov
mov
push
mov
jmp
pop
inc
push
mov
add
and
xor
add
jmp
push
mov
add
add
jmp
mov
add
add
sub
mov
sub
mov
push
pop
add
add
push
pushl
pop
jmp
and
push
jmp
pop
add
add
xor
xor
xor
pop
shr
push
push
pop
push
mov
add
mov
add
sub
xor
xor
jmp
mov
mov
add
push
push
mov
dec
sub
jmp
add
add
jmp
xor
pushl
pushl
jmp
add
pop
add
jmp
pushl
mov
add
jmp
add
jmp
mov
push
jmp
mov
mov
mov
add
add
jmp
mov
pop
xor
jmp
pushl
pop
popl
pop
mov
push
pushl
pop
push
mov
push
mov
xor
or
and
xor
neg
jmp
and
push
addl
sub
push
mov
sub
pop
pop
sub
push
mov
notl
mov
jmp
push
mov
add
sub
xchg
pop
jmp
and
pop
jmp
pushl
popf
pop
rcrw
pushf
jmp
xor
and
jmp
add
push
pushl
pop
popl
pop
jmp
xor
pop
push
push
mov
push
mov
mov
pop
mov
add
mov
mov
push
mov
push
mov
add
add
pop
add
push
jmp
add
jmp
dec
add
sub
mov
jmp
addl
mov
add
sub
mov
jmp
add
push
mov
jmp
mov
jmp
lods
push
mov
jmp
xor
mov
add
sub
add
push
jmp
shr
jmp
mov
add
xor
sub
dec
add
jmp
push
mov
jmp
add
pop
mov
add
push
mov
mov
add
mov
pop
mov
add
push
mov
push
push
mov
push
jmp
shl
jmp
addl
pop
push
mov
sub
jmp
mov
xor
xor
and
jmp
mov
push
mov
mov
xor
add
jmp
push
mov
and
jmp
sub
mov
push
mov
mov
add
mov
add
pop
push
mov
dec
jmp
push
push
jmp
mov
mov
jmp
pop
add
jmp
push
mov
add
add
xor
xor
xor
mov
pushl
jmp
xor
xor
pop
or
pushf
jmp
mov
pushl
pushl
pop
add
popl
mov
sarb
pushf
jmp
mov
add
xor
mov
add
jmp
popl
jmp
mov
jmp
mov
shr
not
sub
jmp
add
jmp
add
jmp
pop
add
popl
jmp
mov
mov
mov
sub
mov
mov
add
jmp
mov
push
mov
jmp
mov
add
jmp
lods
xor
jmp
add
mov
mov
add
and
dec
jmp
pop
add
sub
sub
jmp
push
push
pop
add
jmp
pop
xor
jmp
add
xchg
pop
jmp
push
push
jmp
or
pop
shr
inc
jmp
add
jmp
pushl
mov
jmp
mov
mov
and
xor
sub
mov
pop
add
pushl
mov
add
jmp
sub
xchg
jmp
sub
sub
add
pop
and
pop
or
shl
jmp
push
push
pop
push
mov
add
mov
jmp
push
mov
jmp
popl
push
jmp
mov
add
jmp
mov
jmp
pop
jmp
sub
push
jmp
sub
jmp
pop
xor
pop
jmp
mov
push
notl
pop
sub
push
mov
jmp
mov
shr
add
add
add
jmp
add
pop
jmp
pop
mov
push
mov
mov
sub
pop
jmp
pop
push
mov
sub
jmp
xor
xor
jmp
pop
jmp
movzbw
push
push
jmp
sub
add
push
jmp
xor
sub
pop
jmp
xor
xor
jmp
pop
push
subl
pop
push
mov
sub
add
add
pop
mov
jmp
push
mov
add
add
xchg
pop
add
add
sub
sub
jmp
xor
jmp
inc
shr
push
mov
shr
inc
dec
sub
or
sub
add
pop
jmp
mov
mov
push
push
mov
mov
push
addw
pop
sub
mov
add
mov
xor
pop
xor
pop
pushw
mov
push
mov
jmp
mov
shr
add
sub
or
add
xor
pop
add
pop
sub
push
mov
jmp
add
pop
jmp
push
mov
jmp
sub
sub
jmp
mov
jmp
push
push
pop
xor
add
sub
push
jmp
mov
sub
mov
push
mov
jmp
mov
add
and
not
add
sub
pop
add
add
sub
add
pushl
pop
jmp
push
push
pop
add
pop
add
pop
push
pushl
pop
jmp
pop
jmp
sub
mov
jmp
pop
push
mov
mov
add
add
sub
push
mov
sub
jmp
mov
push
jmp
push
mov
push
mov
add
sub
xchg
jmp
push
mov
add
jmp
mov
push
mov
mov
pop
push
mov
mov
sub
jmp
mov
jmp
xchg
mov
mov
push
pushl
pop
jmp
subl
pop
sub
mov
mov
shr
jmp
add
push
mov
jmp
add
pop
add
jmp
mov
add
jmp
pop
push
mov
jmp
add
push
mov
sub
pop
jmp
push
mov
add
push
jmp
shl
not
shl
jmp
mov
mov
jmp
push
push
mov
push
push
push
pop
add
add
push
pop
pop
mov
jmp
pop
shr
push
mov
add
jmp
mov
jmp
add
jmp
sub
pop
sub
addl
push
jmp
push
jmp
pushl
pop
popl
mov
push
jmp
add
push
mov
sub
push
mov
sub
mov
add
jmp
sub
pop
xor
xor
push
mov
mov
push
mov
add
pop
add
sub
xor
jmp
sub
add
pop
sub
xchg
pop
mov
push
jmp
mov
jmp
mov
xor
mov
push
jmp
add
sub
add
add
mov
push
mov
add
jmp
inc
add
shl
neg
jmp
sub
sub
add
add
pop
jmp
xchg
pop
mov
mov
add
push
jmp
push
jmp
pop
popl
mov
xor
xor
xor
xor
xor
jmp
and
mov
add
jmp
add
pop
inc
jmp
pushl
push
push
mov
jmp
pop
add
add
pop
push
jmp
pop
jmp
pop
add
add
xor
xor
xor
pop
dec
jmp
push
mov
xor
jmp
inc
push
mov
mov
sub
sub
jmp
add
push
mov
jmp
shl
xor
sub
add
pop
add
push
push
jmp
push
mov
sub
not
sub
sub
dec
sub
and
pop
shr
inc
jmp
mov
jmp
not
jmp
xor
jmp
pop
mov
jmp
mov
jmp
mov
add
add
sub
jmp
mov
jmp
shl
jmp
add
add
jmp
add
pop
push
mov
add
sub
sub
xchg
mov
jmp
sub
pop
xchg
pop
mov
mov
jmp
sub
jmp
add
xchg
jmp
pop
jmp
add
push
push
pop
push
mov
mov
add
mov
add
push
mov
push
mov
add
mov
jmp
sub
pop
jmp
push
subl
pop
add
mov
jmp
sub
sub
add
add
mov
push
jmp
sub
jmp
pop
push
push
xorl
pushl
jmp
shl
neg
xor
jmp
add
sub
mov
mov
push
mov
push
push
mov
mov
mov
jmp
pop
sub
mov
push
mov
mov
or
jmp
pop
add
pop
jmp
add
pop
jmp
mov
mov
push
jmp
mov
pop
subl
add
addl
pop
pop
jmp
addl
pushl
pop
jmp
mov
jmp
add
push
pushl
mov
jmp
pop
and
xor
mov
jmp
push
mov
jmp
pushw
mov
jmp
pop
sub
add
mov
add
push
mov
push
mov
mov
mov
add
push
notb
pop
jmp
mov
push
mov
push
push
popl
push
mov
shr
push
mov
add
pop
jmp
mov
add
xchg
pop
push
push
mov
mov
jmp
xor
add
mov
add
jmp
mov
jmp
add
jmp
xchg
mov
jmp
xor
jmp
sub
xor
jmp
xor
xor
pop
mov
push
push
popl
push
mov
addl
add
jmp
pop
sub
jmp
pop
mov
add
sub
jmp
push
mov
add
sub
xchg
pop
push
push
jmp
sub
sub
add
jmp
xchg
jmp
pop
xchg
mov
or
jmp
sub
pop
xchg
pop
jmp
pop
xor
inc
pushl
push
popl
mov
jmp
xchg
pop
push
jmp
push
mov
push
mov
mov
pop
pop
mov
add
xor
or
sub
add
jmp
pop
push
mov
dec
jmp
not
xor
add
sub
sub
pop
sub
add
pop
push
push
pop
add
jmp
xor
pop
push
push
mov
mov
sub
shl
neg
add
jmp
pop
push
mov
sub
add
pop
xchg
mov
rorl
pushf
jmp
sub
add
push
mov
not
jmp
xor
sub
push
mov
xor
xor
pop
add
pop
push
mov
jmp
mov
add
mov
add
jmp
pop
dec
push
jmp
sub
sub
jmp
pop
sub
mov
mov
push
mov
shr
add
sub
xor
pop
dec
push
mov
shr
or
dec
sub
and
pop
jmp
mov
jmp
mov
shl
add
jmp
push
sub
mov
jmp
mov
add
sub
add
add
push
mov
sub
jmp
xor
pushl
pop
push
mov
add
push
push
mov
or
add
mov
pop
add
mov
push
jmp
push
mov
add
sub
jmp
shr
shr
push
mov
push
mov
jmp
mov
mov
pop
jmp
mov
add
add
inc
push
sub
pop
sub
sub
mov
jmp
add
mov
add
sub
push
mov
sub
pop
push
jmp
sub
jmp
xor
xor
mov
jmp
sub
pop
or
mov
jmp
pop
xor
jmp
mov
add
push
push
jmp
mov
mov
subl
add
addl
pop
pushl
pushl
jmp
add
xchg
not
xchg
push
mov
notl
pop
jmp
add
sub
xchg
pop
jmp
mov
xor
mov
jmp
add
pushl
pop
sub
mov
mov
push
mov
and
not
add
add
sub
add
pop
push
mov
add
add
sub
pop
xor
xor
xor
mov
jmp
xor
shr
and
sub
mov
mov
jmp
pop
xchg
mov
jmp
sub
mov
push
pop
push
mov
add
jmp
add
add
sub
pop
jmp
sub
sub
jmp
push
jmp
and
mov
add
jmp
mov
jmp
pop
add
add
sub
mov
add
xchg
mov
or
je
push
push
mov
jmp
pop
sub
mov
jmp
add
pop
add
pop
push
mov
push
mov
jmp
mov
mov
jmp
xor
xor
pop
xor
pop
push
push
mov
jmp
mov
jmp
pop
xchg
mov
sub
mov
mov
push
jmp
mov
add
jmp
xchg
jmp
mov
add
jmp
pop
not
inc
and
push
mov
push
mov
jmp
add
mov
pop
and
or
jmp
xor
xor
xor
mov
test
pushf
jmp
mov
jmp
mov
add
push
mov
add
pop
xchg
mov
add
push
mov
push
jmp
mov
pushl
pop
popl
pop
mov
jmp
add
sub
add
pop
jmp
push
mov
pushl
mov
add
popl
mov
btc
pushf
jmp
pushl
pushl
pop
jmp
add
pop
sub
mov
mov
and
push
push
mov
sub
pop
addl
sub
subl
addl
jmp
add
pop
push
jmp
mov
mov
jmp
push
jmp
mov
neg
neg
push
jmp
mov
add
xor
pop
add
pop
push
jmp
mov
add
sub
jmp
add
push
sub
jmp
push
pushl
mov
add
push
push
pop
push
push
mov
mov
pop
add
add
mov
add
add
jmp
push
pop
add
sub
jmp
pop
sub
add
add
sub
pop
push
mov
mov
add
jmp
mov
add
add
sub
jmp
push
pushl
pop
jmp
shl
jmp
push
mov
and
jmp
mov
shr
shl
jmp
push
jmp
mov
jmp
add
pop
add
sub
pop
xchg
pop
or
je
sub
mov
push
push
mov
mov
pop
push
mov
and
sub
neg
neg
xor
or
pop
shl
shl
shl
or
push
mov
add
pop
push
pop
pop
push
mov
xor
push
mov
xor
pop
add
add
sub
pop
add
sub
add
add
sub
push
mov
add
jmp
pop
sub
mov
mov
mov
jmp
push
push
mov
jmp
jmp
add
jmp
xor
pop
push
jmp
sub
jmp
sub
jmp
subl
push
jmp
pushl
jmp
pop
add
jmp
inc
xor
mov
pop
xchg
inc
xchg
shl
jmp
push
addl
pop
sub
mov
push
mov
push
mov
add
add
xchg
pop
shl
push
mov
jmp
mov
push
mov
mov
pop
push
mov
not
or
push
mov
jmp
add
jmp
mov
mov
push
push
mov
add
push
mov
add
jmp
and
pop
add
jmp
mov
jmp
pop
jmp
pop
add
add
push
mov
sub
pop
pop
push
pushl
pop
popl
jmp
push
mov
jmp
sub
sub
add
pop
push
pop
jmp
mov
or
shl
pushl
push
popl
pop
push
push
push
pop
and
not
jmp
addl
popl
jmp
mov
push
mov
push
mov
and
pop
push
push
mov
mov
pop
xor
sub
mov
push
mov
jmp
inc
push
jmp
mov
jmp
mov
push
push
push
mov
xor
mov
jmp
add
pop
add
sub
sub
pop
jmp
mov
shr
push
mov
mov
push
mov
push
jmp
pushl
popf
pop
adc
pushf
jmp
mov
push
mov
jmp
mov
pop
push
mov
add
add
mov
push
jmp
add
xor
xor
xor
pop
push
mov
or
neg
jmp
sub
mov
mov
and
neg
sub
shr
xor
add
pop
jmp
push
mov
xor
pop
jmp
mov
jmp
mov
mov
push
push
pop
jmp
xor
pop
or
push
mov
mov
jmp
add
add
sub
push
jmp
pop
add
push
mov
add
mov
jmp
pop
jmp
push
jmp
pop
pushl
push
push
jmp
add
push
mov
add
add
sub
mov
add
add
sub
mov
jmp
shl
sub
add
pop
push
mov
add
pop
xchg
mov
push
mov
popl
pushl
jmp
sub
sub
sub
add
add
jmp
push
push
mov
add
push
mov
sub
pop
xchg
pop
mov
push
mov
addl
jmp
lods
jmp
pop
push
mov
jmp
push
pop
add
pop
neg
xor
sub
mov
mov
jmp
add
add
xchg
pop
sub
push
mov
jmp
or
add
mov
pop
sub
add
add
jmp
mov
sub
mov
jmp
push
mov
jmp
xor
pop
sub
add
add
pop
jmp
pop
push
pushl
pop
popl
pop
jmp
mov
xor
pop
jmp
mov
push
mov
add
push
mov
mov
jmp
sub
mov
add
mov
jmp
jmp
mov
push
mov
xor
sub
pop
jmp
sub
push
mov
jmp
push
mov
mov
jmp
or
add
push
mov
add
shr
xor
and
pop
inc
and
xor
mov
jmp
mov
sub
pop
jmp
add
pop
add
mov
add
xor
xor
xor
pop
jmp
pop
and
or
sub
shl
dec
jmp
xor
xor
jmp
sub
push
mov
shr
xor
jmp
add
jmp
popl
mov
div
pushw
mov
push
pushf
jmp
mov
push
push
pop
jmp
mov
jmp
mov
mov
pop
add
pop
popl
push
mov
add
jmp
push
mov
not
add
shl
not
and
add
xor
pop
xor
jmp
mov
push
mov
add
sub
xchg
pop
mov
jmp
push
mov
mov
pop
pop
push
mov
sub
xor
inc
jmp
push
mov
add
sub
jmp
mov
jmp
push
mov
mov
pop
mov
add
push
mov
shr
xor
jmp
sub
sub
mov
mov
add
jmp
sub
pop
sub
xchg
mov
mov
pushl
pop
popl
mov
jmp
pop
push
jmp
mov
sub
mov
jmp
pop
push
mov
mov
pop
mov
push
mov
jmp
xor
mov
push
mov
add
add
jmp
or
jmp
xor
xor
mov
mov
mov
jmp
shrb
pushf
jmp
subl
addl
push
sub
mov
mov
mov
sub
jmp
push
jmp
mov
imul
pushw
jmp
pop
xor
jmp
push
jmp
add
xor
pushl
mov
push
mov
add
push
mov
mov
jmp
pushl
pop
push
push
mov
add
jmp
pop
sub
mov
pushl
pushl
jmp
push
jmp
push
mov
add
jmp
xor
jmp
add
jmp
pop
push
push
mov
addl
pushl
pop
push
mov
add
add
xchg
pop
add
jmp
xor
sub
mov
jmp
add
pushl
pop
add
push
push
pop
push
mov
sub
add
push
mov
or
jmp
push
jmp
pop
mov
push
push
pop
push
mov
push
mov
shl
dec
jmp
lods
jmp
push
mov
add
pop
mov
pushl
mov
add
push
mov
add
add
xchg
pop
xor
mov
push
mov
add
add
xchg
pop
xor
mov
push
mov
mov
push
mov
xor
neg
sub
jmp
sub
mov
jmp
mov
pop
pushl
jmp
and
add
sub
xor
pop
push
mov
shl
dec
not
sub
mov
mov
sub
mov
add
jmp
mov
dec
jmp
push
mov
add
pop
add
xchg
jmp
not
jmp
xor
xor
mov
test
pushf
jmp
pop
subl
pushl
pushl
pop
push
mov
jmp
add
push
mov
sub
add
add
pop
add
jmp
add
add
jmp
xor
pop
not
jmp
add
xor
xor
xor
mov
jmp
pop
or
inc
jmp
shl
add
inc
xor
add
jmp
push
mov
add
add
pop
xor
xor
xor
pop
sub
pushf
jmp
lods
xor
jmp
mov
mov
shr
add
dec
xor
jmp
neg
dec
push
jmp
pushl
jmp
sub
add
jmp
mov
add
jmp
mov
pop
neg
sub
push
negl
pop
neg
jmp
mov
jmp
xor
sub
add
jmp
mov
jmp
inc
or
add
xor
mov
add
xor
pop
jmp
add
pushl
pop
add
sub
sub
jmp
add
jmp
mov
push
push
mov
addl
jmp
shr
sub
mov
mov
xor
neg
push
jmp
mov
pushl
pop
popl
pop
and
sub
add
mov
push
mov
add
add
xchg
jmp
pop
sub
add
add
add
pop
push
pushl
pop
popl
pop
xor
xor
xor
jmp
push
jmp
push
push
pop
or
add
not
inc
jmp
pop
add
jmp
push
jmp
pop
add
add
xchg
pop
shr
dec
push
mov
sub
sub
add
mov
jmp
mov
xchg
neg
push
push
mov
push
mov
add
add
xchg
pop
mov
jmp
xor
xor
jmp
add
add
mov
add
push
mov
jmp
xor
xor
push
jmp
add
xor
sub
jmp
pushl
pop
jmp
mov
push
pushf
jmp
add
sub
pushl
pop
add
sub
mov
mov
sub
pop
push
mov
inc
push
mov
shl
sub
shr
jmp
push
pop
add
add
xor
xor
xor
pop
push
mov
pushl
pushl
mov
add
jmp
mov
add
sub
xchg
mov
mov
notl
mov
jmp
mov
mov
mov
add
sub
push
jmp
dec
shl
shr
xor
xor
pop
sub
sub
add
jmp
push
mov
and
xor
push
mov
sub
pop
jmp
pop
push
mov
jmp
sub
jmp
add
jmp
push
mov
mov
add
mov
jmp
add
pop
or
pushl
mov
add
add
push
jmp
add
push
mov
add
sub
sub
pop
xchg
jmp
shr
jmp
mov
push
jmp
sub
mov
mov
add
jmp
pop
pop
popl
sub
mov
push
sub
mov
mov
push
xorl
mov
push
mov
jmp
pop
add
push
mov
jmp
push
push
mov
jmp
neg
inc
shr
not
sub
and
mov
add
or
push
push
mov
jmp
push
push
mov
add
xor
jmp
add
pop
xchg
mov
push
push
push
popl
push
jmp
mov
push
jmp
mov
pop
sub
pop
xchg
jmp
mov
sub
sub
pop
not
push
mov
add
sub
sub
pop
add
jmp
and
and
sub
and
pop
push
sub
mov
mov
shr
sub
not
inc
shl
add
jmp
sub
mov
mov
jmp
xor
jmp
add
popl
mov
mov
jmp
pushl
pushl
pop
push
jmp
jmp
lods
jmp
push
pop
not
add
mov
pop
shr
jmp
mov
jmp
push
jmp
xor
xor
pop
xor
pop
push
addl
pop
jmp
pushw
mov
mov
sub
jmp
add
push
push
jmp
mov
jmp
xchg
pop
jmp
mov
jmp
add
jmp
pop
sub
mov
pop
jmp
add
push
mov
sub
mov
mov
add
jmp
push
jmp
sub
xchg
pop
jmp
push
mov
add
pop
xchg
jmp
sub
xchg
mov
jmp
popl
jmp
add
sub
mov
mov
jmp
and
pushl
pop
push
mov
push
mov
push
jmp
mov
add
push
notl
incl
mov
add
xor
add
jmp
xor
jmp
push
push
jmp
shl
push
jmp
subl
add
jmp
addl
pop
push
push
mov
jmp
pop
sub
mov
jmp
add
mov
jmp
sub
pushl
pop
add
add
add
sub
mov
push
mov
push
mov
push
mov
not
not
push
mov
or
neg
jmp
mov
sub
mov
push
pop
push
push
push
pop
push
jmp
mov
push
push
pop
push
jmp
jmp
pop
jmp
add
add
jmp
mov
popl
mov
sub
pushf
jmp
popl
pop
mov
push
jmp
mov
addl
pushl
pop
add
jmp
inc
or
xor
mov
pop
xor
xor
jmp
and
shr
xor
push
mov
sub
sub
jmp
mov
jmp
mov
add
pop
sub
pushl
pop
jmp
push
mov
jmp
sub
mov
jmp
push
jmp
mov
mov
pop
mov
mov
push
jmp
sub
jmp
popl
jmp
shl
push
mov
push
mov
not
xor
shr
jmp
pushl
pop
sub
mov
push
jmp
add
pop
addl
sub
jmp
push
mov
mov
mov
jmp
mov
xor
add
jmp
and
pushl
pushl
jmp
push
pop
jmp
mov
push
jmp
pop
sub
sub
pop
xchg
jmp
mov
add
add
shr
xor
push
push
pop
push
jmp
sub
mov
push
push
pop
xor
push
jmp
pop
jmp
pop
mov
pop
jmp
add
add
push
mov
pushl
pushl
pop
add
popl
pop
and
pushl
pushl
mov
add
add
push
mov
add
add
xchg
jmp
mov
sub
mov
jmp
push
mov
add
mov
jmp
push
mov
push
pushl
mov
add
jmp
xor
pop
sub
jmp
push
mov
jmp
mov
xor
jmp
push
push
jmp
push
mov
inc
push
mov
jmp
pop
xor
pop
pushl
pop
add
push
addl
pushl
pop
add
jmp
mov
pop
mov
add
xor
mov
add
push
jmp
mov
xor
add
jmp
xor
pop
pop
sub
mov
jmp
push
mov
jmp
xor
xor
xor
pop
push
mov
mov
add
sub
jmp
add
pop
pop
pop
add
pop
add
add
jmp
push
mov
push
mov
jmp
sub
jmp
add
add
pop
sub
push
mov
add
jmp
shr
push
jmp
add
add
xchg
pop
shl
xor
jmp
and
pushf
jmp
mov
push
mov
jmp
pop
push
pushl
pop
popl
pop
push
jmp
push
mov
mov
pop
xor
mov
add
add
or
sub
jmp
mov
neg
jmp
pop
sub
jmp
add
jmp
pop
push
jmp
sub
pop
jmp
neg
jmp
push
mov
mov
add
sub
xor
jmp
or
pop
not
xor
or
pop
jmp
push
push
pop
jmp
mov
dec
or
neg
xor
add
pop
xchg
pop
push
mov
shr
not
jmp
mov
jmp
inc
jmp
xorl
mov
add
push
push
mov
inc
add
xor
mov
pop
jmp
sub
mov
add
add
push
mov
add
pop
mov
jmp
mov
jmp
xor
jmp
xor
pop
and
mov
add
shr
push
push
mov
push
push
push
jmp
add
xor
mov
add
push
jmp
mov
push
mov
jmp
not
add
and
dec
add
jmp
mov
push
mov
sub
mov
mov
dec
jmp
push
mov
neg
xor
jmp
pop
and
pushl
pop
add
jmp
push
mov
add
dec
jmp
add
pop
sub
mov
pushl
mov
add
popl
mov
push
mov
and
not
add
push
push
push
pop
jmp
pop
pop
jmp
inc
shr
jmp
mov
subl
jmp
sub
push
jmp
add
mov
pop
shr
dec
push
mov
dec
add
xor
pop
sub
pop
mov
add
xor
pushl
pop
push
mov
jmp
sub
mov
jmp
add
xchg
pop
add
sub
sub
jmp
pop
add
and
pushl
pop
add
or
shl
push
mov
jmp
add
popl
jmp
pop
pop
push
mov
sub
push
mov
mov
jmp
add
pop
xchg
pop
push
jmp
movzbw
push
jmp
pushl
subl
jmp
mov
add
add
xchg
pop
push
mov
jmp
sub
jmp
add
jmp
pop
push
mov
sub
add
add
pop
xor
sub
push
push
mov
sub
push
mov
sub
sub
pop
dec
sub
add
jmp
mov
pop
jmp
pop
push
mov
jmp
pop
add
jmp
xor
mov
shll
jmp
add
jmp
push
mov
jmp
mov
add
add
sub
pop
xchg
mov
mov
push
mov
push
push
popl
push
push
push
pop
xor
mov
pop
add
jmp
shr
jmp
dec
neg
add
mov
pop
not
shr
neg
push
jmp
neg
jmp
or
jmp
popl
mov
btr
pushf
jmp
mov
xor
inc
jmp
mov
mov
add
mov
add
pushl
pop
jmp
negl
pop
and
add
sub
add
pop
jmp
mov
add
mov
jmp
mov
jmp
mov
push
jmp
shr
neg
add
sub
jmp
mov
push
pushf
jmp
pop
push
jmp
push
xorw
pop
xor
mov
add
xor
pop
jmp
mov
mov
add
neg
sub
jmp
sub
mov
mov
add
mov
add
xor
jmp
mov
jmp
add
add
mov
jmp
push
push
mov
mov
mov
push
mov
add
add
xchg
mov
jmp
push
jmp
pop
xor
pop
add
pop
push
jmp
dec
shr
push
mov
add
mov
add
jmp
push
jmp
mov
push
mov
push
jmp
xchg
dec
xor
xor
xor
push
mov
jmp
subl
pushl
jmp
mov
add
add
xchg
pop
push
mov
push
mov
sub
pop
sub
add
pop
push
mov
jmp
pop
add
xchg
mov
jmp
add
sub
jmp
shll
pushf
jmp
mov
push
pushf
jmp
sub
pop
jmp
xorl
jmp
add
pop
mov
add
add
push
mov
mov
xor
shr
sub
shr
push
mov
mov
add
mov
jmp
xchg
pop
jmp
push
addl
pop
sub
jmp
xor
mov
add
push
jmp
dec
jmp
xor
jmp
and
pop
push
jmp
mov
jmp
mov
shr
or
add
xor
sub
mov
add
jmp
mov
jmp
mov
add
add
xchg
pop
push
mov
pushl
mov
jmp
sub
mov
add
xor
jmp
add
add
jmp
push
mov
jmp
mov
mov
and
jmp
pop
jmp
not
xchg
xchg
jmp
push
pop
pop
inc
xor
jmp
mov
jmp
decb
pushf
jmp
xchg
jmp
pop
jmp
mov
mov
jmp
push
mov
add
sub
xchg
pop
mov
push
mov
jmp
xchg
pop
jmp
mov
push
jmp
add
push
mov
jmp
pop
push
mov
pushl
jmp
mov
mov
pop
jmp
mov
addl
pop
jmp
pushl
pop
sub
mov
jmp
pushl
pushl
pop
push
mov
sub
jmp
add
sub
mov
jmp
add
xor
xor
xor
pop
jmp
mov
push
mov
sub
xor
shl
inc
jmp
pop
push
jmp
sub
add
push
jmp
add
add
jmp
xchg
mov
xor
xor
xor
jmp
pop
push
jmp
pop
jmp
mov
push
mov
jmp
push
push
jmp
mov
mov
add
push
mov
add
jmp
push
pushl
pop
jmp
xor
push
xorl
pop
xor
pop
mov
xor
pushl
pop
add
push
jmp
add
xchg
pop
push
jmp
pop
not
neg
and
add
jmp
add
jmp
xorl
pop
jmp
push
pop
push
mov
jmp
mov
pop
not
sub
add
mov
add
pop
push
mov
mov
pop
pop
sub
add
jmp
xor
jmp
xchg
jmp
xor
xor
xor
pop
xor
pushl
pop
push
push
mov
addl
jmp
mov
push
mov
jmp
pushl
jmp
mov
add
sub
sub
mov
add
mov
mov
add
jmp
mov
jmp
mov
pushl
pushl
pop
push
mov
push
jmp
mov
push
pop
add
add
push
jmp
push
mov
add
pop
push
pushl
jmp
pop
add
push
jmp
xchg
mov
shr
push
jmp
add
xor
jmp
mov
add
xchg
add
and
jmp
mov
push
push
mov
neg
xor
add
add
mov
pop
jmp
pop
xchg
inc
add
sub
mov
add
add
add
sub
pop
sub
add
add
mov
add
xor
xor
xor
mov
shlb
pushf
jmp
add
pop
or
push
mov
push
mov
add
jmp
mov
add
jmp
add
push
mov
add
pop
xchg
jmp
mov
mov
push
mov
dec
add
inc
push
notl
jmp
mov
shl
inc
push
push
mov
mov
pop
sub
pop
push
mov
sub
sub
add
mov
jmp
xchg
pop
popl
mov
mov
push
mov
push
jmp
add
jmp
mov
pop
xor
jmp
pushl
mov
add
push
jmp
mov
push
mov
push
mov
addl
mov
add
push
push
mov
mov
xor
jmp
pop
jmp
movzbl
cmp
je
pushl
pushl
jmp
push
mov
jmp
dec
dec
add
jmp
push
jmp
xor
mov
pop
push
mov
and
jmp
push
jmp
add
add
sub
pop
jmp
mov
sub
jmp
pop
xchg
mov
mov
push
push
pop
mov
pop
add
pop
xchg
pop
mov
pushl
pop
add
jmp
and
jmp
pop
sub
jmp
pop
add
push
mov
jmp
mov
jmp
sub
mov
push
mov
dec
xor
push
mov
or
jmp
mov
push
jmp
push
mov
mov
pop
push
push
mov
push
mov
mov
pop
mov
jmp
mov
mov
shl
not
inc
shl
neg
add
add
sub
jmp
sub
push
popl
push
push
pop
add
pop
mov
jmp
inc
push
jmp
sub
not
xor
mov
pop
xor
pop
add
add
sub
mov
push
mov
add
add
jmp
mov
push
jmp
pushl
pop
popl
pop
mov
jmp
mov
add
push
jmp
pop
jmp
mov
jmp
pop
jmp
push
mov
add
add
pushl
pop
push
mov
mov
add
push
jmp
mov
push
push
mov
push
mov
add
pop
sub
xchg
pop
sub
mov
jmp
push
mov
push
mov
add
pop
sub
add
pop
jmp
xchg
pop
push
jmp
mov
mov
sub
add
jmp
mov
push
push
mov
addl
pop
push
mov
jmp
pop
mov
jmp
push
jmp
push
mov
push
jmp
pop
add
xor
xor
xor
jmp
shr
xor
push
pop
jmp
sub
push
mov
add
pop
pop
sub
xor
pop
push
sub
mov
push
pop
jmp
add
sub
push
push
mov
jmp
pop
sub
push
mov
mov
and
mov
add
neg
sub
mov
push
jmp
addl
subl
jmp
add
add
sub
push
push
push
pop
push
mov
shr
shr
sub
or
pop
jmp
sub
jmp
mov
pushl
pop
jmp
sub
jmp
mov
jmp
or
push
mov
xor
xor
mov
add
not
dec
xor
shr
add
jmp
xor
and
mov
add
sub
xor
push
mov
add
pop
add
jmp
mov
add
pop
pop
push
push
push
mov
push
mov
mov
pop
pop
push
mov
add
jmp
pop
push
mov
add
pop
jmp
push
mov
mov
jmp
jmp
pop
add
jmp
mov
add
mov
jmp
inc
sub
add
pop
jmp
sub
jmp
push
jmp
push
mov
add
pop
xor
pop
and
mov
add
jmp
mov
add
sub
xchg
pop
mov
jmp
add
sub
xchg
pop
mov
push
mov
mov
pop
xor
mov
push
mov
push
jmp
xchg
mov
jmp
xchg
jmp
not
jmp
pushl
jmp
sub
add
sub
sub
add
pushl
pop
push
mov
add
add
xchg
mov
jmp
mov
add
sub
push
jmp
mov
add
push
mov
jmp
pop
add
pushl
pop
push
push
jmp
shr
push
mov
xor
jmp
mov
pop
or
jmp
pop
add
xchg
pop
xor
pushl
pop
push
jmp
push
jmp
add
sub
sub
jmp
mov
mov
shl
xor
add
or
pop
push
mov
mov
neg
shl
xor
jmp
pop
push
mov
mov
xor
xor
shl
add
shr
jmp
mov
jmp
mov
add
sub
sub
mov
add
xchg
pop
jmp
add
sub
sub
pop
xor
xor
xor
pop
jmp
jmp
sub
xchg
jmp
mov
mov
push
mov
or
shl
add
add
add
jmp
xor
jmp
mov
add
add
xchg
mov
add
std
push
jmp
sub
push
mov
sub
not
xor
push
mov
add
jmp
add
add
push
mov
not
sub
add
mov
jmp
add
jmp
mov
mov
jmp
pop
xor
pop
jmp
push
mov
inc
inc
and
add
push
jmp
push
jmp
mov
mov
pop
not
jmp
mov
jmp
xor
add
pop
add
xor
xor
xor
pop
sub
mov
jmp
sub
mov
push
mov
push
push
jmp
or
jmp
mov
jmp
xor
sub
jmp
push
jmp
mov
bswap
jmp
xor
pushl
jmp
neg
sub
not
jmp
shr
dec
add
jmp
mov
jmp
mov
jmp
add
jmp
xor
sub
add
jmp
pop
add
add
pop
xchg
pop
jmp
push
mov
mov
add
pop
xor
or
xor
jmp
sub
xor
add
mov
jmp
mov
add
pop
sub
pushl
mov
sub
mov
jmp
xor
jmp
shr
inc
jmp
shl
add
mov
pop
inc
jmp
push
mov
inc
push
jmp
push
mov
sub
jmp
xchg
pop
sub
sub
xor
jmp
mov
jmp
pop
mov
add
mov
jmp
pop
sub
mov
push
jmp
push
mov
mov
xor
pop
add
sub
push
push
mov
mov
pop
shl
neg
push
push
jmp
mov
mov
add
jmp
dec
jmp
pop
mov
add
jmp
pop
add
or
shl
xor
xor
add
sub
sub
jmp
add
push
sub
mov
mov
push
jmp
mov
push
mov
push
mov
sub
mov
jmp
push
jmp
add
jmp
mov
mov
add
sub
sub
jmp
push
push
jmp
push
push
push
popl
jmp
mov
mov
push
sub
jmp
mov
add
sub
add
jmp
add
pop
push
mov
mov
and
shl
and
inc
xor
push
mov
mov
mov
push
jmp
pop
xor
shl
sub
jmp
push
mov
add
push
mov
jmp
push
push
pop
add
push
mov
push
mov
and
xchg
not
jmp
pop
sub
mov
push
mov
mov
subl
push
mov
jmp
sub
sub
xor
jmp
sub
xchg
pop
mov
sub
mov
addl
jmp
inc
xor
mov
pop
add
and
push
jmp
mov
add
jmp
add
push
jmp
xor
add
pop
jmp
push
mov
push
pop
add
add
xchg
pop
jmp
mov
jmp
pop
sub
add
pop
xor
pop
jmp
xchg
pop
pushl
pop
add
sub
mov
mov
subl
add
jmp
push
mov
mov
pop
add
mov
add
push
jmp
pop
sub
pushl
pop
add
and
jmp
add
jmp
sub
add
pushl
jmp
mov
add
jmp
add
pushl
jmp
pop
push
pop
jmp
push
jmp
add
pop
xchg
jmp
mov
or
pop
jmp
add
jmp
mov
pop
jmp
inc
xor
add
jmp
pushl
jmp
shl
shl
xor
sub
sub
add
add
pop
dec
push
mov
shr
or
jmp
mov
xor
jmp
neg
jmp
pop
movzbl
mov
push
jmp
mov
mov
sub
jmp
mov
jmp
add
pop
add
xchg
pop
push
mov
add
push
mov
sub
mov
mov
add
jmp
pop
mov
jmp
pop
jmp
mov
add
pop
xchg
mov
pop
add
jmp
pop
xor
pop
push
push
mov
jmp
pushl
mov
jmp
add
sub
add
and
mov
add
jmp
sub
pop
pop
or
je
push
push
pop
add
sub
xchg
jmp
mov
or
jmp
add
push
mov
inc
sub
add
sub
sub
mov
add
jmp
add
pop
jmp
add
jmp
push
jmp
mov
mov
add
pop
shl
shl
xor
jmp
add
pushl
mov
add
add
inc
dec
push
jmp
xor
add
jmp
add
add
xchg
pop
sub
jmp
mov
push
push
popl
addl
mov
add
push
push
pop
or
sub
xchg
not
jmp
dec
xor
jmp
mov
push
jmp
movzbl
jmp
xor
push
push
mov
push
mov
mov
pop
pop
sub
pop
sub
add
pushl
jmp
mov
sub
mov
push
pop
neg
xor
jmp
mov
add
sub
push
mov
sub
pop
add
add
pushl
jmp
xchg
pop
add
not
push
mov
sub
jmp
add
jmp
mov
push
pushl
pop
jmp
mov
jmp
mov
mov
jmp
sub
jmp
xor
movzwl
push
mov
push
mov
add
push
jmp
pop
shr
xor
jmp
mov
push
push
jmp
and
mov
add
shr
jmp
and
xor
jmp
push
mov
jmp
add
push
mov
add
shr
and
xor
add
pushl
pop
push
sub
mov
addl
pushl
pop
jmp
bts
pushf
jmp
xor
pop
push
mov
jmp
add
push
mov
mov
shl
add
add
mov
add
jmp
add
push
pushl
jmp
mov
mov
pop
jmp
xchg
pop
popl
mov
xor
pushf
jmp
sub
add
jmp
pop
add
jmp
sub
pushl
pop
sub
mov
mov
add
add
xchg
mov
jmp
push
push
pop
add
jmp
not
jmp
push
mov
sub
pop
add
sub
sub
jmp
xor
push
jmp
add
jmp
inc
or
or
add
push
xorl
jmp
mov
jmp
pop
jmp
or
jmp
add
add
jmp
xor
xor
push
mov
push
jmp
lods
jmp
xor
pop
jmp
mov
add
jmp
shl
inc
jmp
dec
xchg
push
mov
mov
dec
push
mov
jmp
or
pop
dec
shr
xor
xor
pop
add
add
pop
push
mov
push
pop
jmp
push
mov
push
mov
mov
pop
neg
push
mov
add
pop
not
shr
push
mov
sub
not
shr
sub
mov
jmp
pop
push
pushl
jmp
notb
pop
jmp
pop
mov
push
mov
jmp
mov
pop
jmp
addl
sub
subl
pop
jmp
sub
and
pop
dec
add
xor
xor
pushl
pushl
pop
push
push
pop
push
jmp
mov
jmp
xor
xor
jmp
mov
mov
sub
jmp
mov
xchg
dec
xchg
shr
add
xor
pop
jmp
pop
shr
not
shr
xor
add
pop
push
jmp
pop
sub
sub
add
popl
jmp
add
add
add
xchg
pop
jmp
shlw
pushf
jmp
sub
push
mov
jmp
pushl
mov
add
popl
pop
pushl
pushl
pop
add
push
jmp
mov
add
jmp
pop
push
push
mov
sub
mov
push
mov
mov
xor
pop
addl
add
push
mov
sub
pop
pop
jmp
push
mov
mov
add
add
push
mov
mov
add
not
not
jmp
pop
mov
addl
mov
add
push
mov
or
shl
jmp
push
pop
sub
mov
push
mov
add
add
xchg
jmp
xor
xor
mov
shrl
pushf
jmp
pop
add
xor
xor
xor
mov
movsbw
sub
mov
mov
add
sub
mov
mov
push
push
mov
mov
mov
push
jmp
mov
push
mov
mov
jmp
and
pop
push
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
mov
jmp
pop
jmp
pushl
jmp
pop
mov
mov
shl
sub
mov
push
mov
mov
mov
jmp
push
mov
jmp
add
add
jmp
movzbl
pushw
jmp
pop
push
mov
mov
add
push
mov
mov
add
pop
push
jmp
mov
push
mov
add
add
xchg
pop
push
mov
add
jmp
sub
add
pop
pop
jmp
xor
sub
add
jmp
xor
jmp
sub
jmp
pop
sub
mov
jmp
xor
pop
pop
jmp
mov
add
push
mov
jmp
push
jmp
mov
push
mov
jmp
mov
sub
jmp
pop
push
popl
addl
pop
sub
jmp
xor
pop
add
pop
push
pop
pushl
pop
add
sub
sub
mov
push
mov
add
xor
pushl
pop
add
add
jmp
not
xchg
xor
sub
mov
pop
not
inc
add
jmp
push
mov
pushl
mov
add
jmp
push
mov
mov
pop
pop
jmp
pop
push
jmp
mov
add
sub
jmp
mov
mov
add
pop
xor
xor
xor
mov
movzwl
push
mov
jmp
pop
sub
add
mov
push
mov
add
add
jmp
sub
mov
push
pop
push
push
pop
add
pop
push
push
jmp
sub
mov
mov
shl
sub
mov
jmp
add
jmp
push
mov
sub
xor
sub
add
add
push
mov
and
jmp
push
pop
pushl
pop
add
not
push
mov
xor
add
xor
pop
jmp
mov
xor
xor
jmp
xor
add
pop
pop
jmp
sub
jmp
push
push
jmp
mov
mov
xor
jmp
add
jmp
sub
sub
sub
add
add
push
mov
dec
xor
sub
add
pop
add
jmp
push
push
pop
add
add
xchg
pop
pushl
pop
push
mov
push
mov
xor
add
pop
jmp
push
mov
mov
jmp
add
add
jmp
add
neg
sub
sub
mov
add
pop
add
jmp
add
xor
mov
pop
add
push
mov
and
pop
push
mov
sub
sub
jmp
push
push
pop
jmp
pop
push
mov
jmp
xchg
pop
mov
push
mov
sub
mov
jmp
mov
add
sub
push
pushl
pop
jmp
jmp
add
xchg
pop
mov
pop
sub
xchg
jmp
mov
jmp
mov
jmp
add
pop
push
mov
xor
sub
jmp
dec
not
push
mov
sub
jmp
mov
add
push
mov
add
jmp
mov
jmp
pop
add
push
push
mov
mov
pop
jmp
push
mov
push
jmp
mov
jmp
or
jmp
pop
mov
jmp
push
mov
add
pop
jmp
push
jmp
mov
xor
jmp
shr
push
mov
sub
mov
jmp
sub
pop
xor
push
mov
add
shl
push
mov
add
pop
sub
sub
add
pop
add
push
mov
shl
inc
shl
add
add
add
sub
mov
add
mov
add
add
xor
xor
xor
mov
movzbw
push
mov
mov
push
mov
jmp
add
xchg
pop
xchg
mov
jmp
pop
and
xor
push
mov
jmp
push
pushl
pop
popl
pop
jmp
push
mov
shr
jmp
imul
push
pushf
jmp
or
jmp
sub
jmp
sub
jmp
push
mov
jmp
add
mov
push
jmp
mov
push
mov
add
push
mov
add
jmp
pop
jmp
neg
jmp
pushl
pop
popl
jmp
mov
jmp
pop
jmp
sub
mov
mov
add
sub
xchg
pop
jmp
pop
pop
shr
push
notb
pop
push
push
jmp
xchg
pop
jmp
xor
push
mov
sub
or
or
shr
xor
add
or
dec
or
sub
jmp
push
mov
xor
jmp
push
pop
add
push
mov
add
add
add
add
jmp
lods
xor
push
push
pop
push
mov
jmp
add
xchg
pop
xor
xor
jmp
mov
pushl
pop
popl
pop
mov
mov
push
jmp
pushl
mov
jmp
add
mov
pop
sub
add
jmp
push
mov
add
jmp
sub
and
add
push
jmp
pop
add
mov
jmp
add
push
jmp
mov
pop
add
pop
xchg
jmp
sub
jmp
pop
jmp
shl
or
shl
jmp
pop
sub
pop
jmp
mov
jmp
pop
push
mov
jmp
mov
push
mov
mov
xor
mov
add
jmp
pop
xor
mov
add
shr
inc
jmp
mov
sub
pop
add
add
pop
push
jmp
sub
jmp
sub
sub
xchg
mov
jmp
mov
mov
jmp
mov
and
jmp
push
mov
push
jmp
push
mov
sub
shl
jmp
pop
push
push
jmp
xor
xor
mov
jmp
add
add
mov
add
add
jmp
not
jmp
addl
mov
add
sub
pop
not
push
mov
not
add
jmp
xor
not
jmp
and
pushl
jmp
mov
mov
pop
mov
add
mov
mov
add
shl
neg
sub
jmp
dec
jmp
mov
or
dec
xor
inc
jmp
mov
neg
jmp
popw
jmp
mov
jmp
shl
push
mov
add
pop
xor
pop
jmp
xor
xor
jmp
mov
push
pop
push
mov
mov
add
pop
push
mov
sub
jmp
push
jmp
sub
pop
push
mov
sub
jmp
pop
push
jmp
mov
jmp
add
xor
xor
xor
pop
add
push
mov
jmp
mov
push
mov
add
add
jmp
add
sub
xchg
jmp
pop
jmp
xor
dec
or
push
push
mov
and
shr
jmp
add
add
xchg
jmp
mov
add
jmp
mov
add
push
mov
sub
mov
add
push
mov
add
jmp
add
mov
jmp
xchg
jmp
mov
mov
add
jmp
mov
add
xor
pop
add
mov
jmp
add
add
push
mov
sub
pop
mov
add
jmp
or
and
xor
add
pop
push
pushl
pop
popl
jmp
popl
pop
jmp
xor
jmp
mov
jmp
xchg
pop
imul
push
pushf
jmp
mul
push
mov
sub
mov
push
mov
mov
sub
mov
add
sub
mov
jmp
mov
add
push
mov
sub
mov
add
jmp
mov
jmp
shr
shl
sub
xor
and
pushl
pop
push
mov
push
jmp
push
mov
dec
not
add
add
xor
pop
add
mov
push
mov
add
jmp
xor
dec
sub
add
mov
add
jmp
mov
add
add
jmp
add
jmp
sub
sub
mov
push
mov
jmp
mov
jmp
push
mov
mov
xor
pop
dec
push
mov
jmp
sub
pushl
pop
add
neg
jmp
sub
pop
add
pop
sub
pushl
pop
add
pushw
jmp
shl
jmp
push
mov
neg
jmp
mov
jmp
mov
mov
pop
add
add
sub
xor
mov
push
mov
add
add
xchg
jmp
not
push
mov
sub
mov
jmp
mov
mov
mov
add
jmp
xchg
pop
pushw
mov
jmp
push
mov
add
dec
or
xor
add
add
jmp
add
add
xchg
pop
xchg
pushl
pop
jmp
movzbw
jmp
push
mov
and
shl
sub
sub
pop
add
add
pop
add
push
pushl
mov
add
popl
pop
push
mov
xor
mov
jmp
shr
push
mov
xor
pop
neg
sub
mov
pop
add
sub
jmp
push
push
push
pop
and
neg
xor
mov
mov
jmp
pop
mov
pop
xor
sub
mov
jmp
push
popl
jmp
sub
pop
xchg
pop
popl
mov
mov
movzbw
push
pushf
jmp
pop
push
pushl
pop
popl
mov
jmp
pop
jmp
mov
mov
jmp
add
pop
jmp
pop
jmp
mov
add
add
sub
jmp
sub
xchg
pop
mov
sub
mov
push
jmp
mov
sub
pop
jmp
push
mov
add
pop
push
mov
push
push
pop
sub
push
mov
mov
push
mov
sub
pop
jmp
shl
shl
jmp
and
shl
pushw
mov
mov
jmp
xor
pop
mov
pop
not
jmp
sub
add
jmp
push
jmp
mov
push
mov
xor
or
sub
sub
pop
sub
dec
not
jmp
not
xor
mov
jmp
push
jmp
xor
jmp
mov
push
mov
jmp
push
mov
or
sub
add
pop
sub
push
pushl
pop
popl
pop
jmp
sub
add
jmp
push
push
jmp
sub
pop
pushl
pop
push
push
jmp
mov
sub
mov
jmp
push
mov
push
pop
push
mov
neg
dec
jmp
pop
push
jmp
xor
mov
add
xor
pop
pop
xor
mov
jmp
mov
push
mov
jmp
addl
pushl
pop
add
pop
push
jmp
add
jmp
mov
sub
dec
xor
jmp
not
jmp
xor
pop
xor
jmp
sub
mov
pop
xor
mov
jmp
pop
mov
sub
mov
push
mov
mov
jmp
pop
jmp
mov
add
add
xchg
pop
sub
jmp
mov
add
pop
xchg
mov
add
add
sub
push
mov
dec
add
sub
sub
mov
push
mov
mov
pop
or
pop
jmp
add
pop
add
jmp
shl
push
jmp
add
pop
push
mov
add
pop
xchg
pop
jmp
not
shl
jmp
negb
pushf
jmp
pop
push
mov
jmp
xchg
pop
mov
push
pop
add
sub
xor
jmp
add
sub
sub
sub
mov
jmp
pushl
jmp
push
jmp
add
jmp
xchg
add
add
pop
push
mov
pushl
mov
jmp
push
mov
mov
pop
add
pop
xor
xor
xor
mov
xor
jmp
mov
or
add
sub
mov
pop
add
jmp
pop
jmp
mov
add
mov
jmp
pop
jmp
mov
add
pushl
pop
push
mov
add
jmp
pop
add
pop
add
xchg
mov
add
pushf
jmp
add
jmp
add
sub
mov
mov
xor
jmp
push
mov
mov
jmp
add
pop
pop
push
mov
pushl
pop
popl
mov
mov
push
mov
push
mov
jmp
add
sub
xchg
pop
mov
subl
jmp
xor
pop
xor
mov
push
jmp
pop
neg
add
add
pop
mov
mov
add
add
mov
push
mov
mov
add
add
xor
xor
xor
pop
xchg
mov
mul
pushw
mov
push
pushf
jmp
pop
jmp
push
pushl
pop
popl
mov
jmp
mov
add
push
push
push
mov
add
jmp
add
mov
pop
xor
mov
jmp
add
add
push
mov
mov
add
sub
sub
pop
pop
push
pushl
pop
popl
mov
mov
jmp
add
add
mov
push
jmp
pop
jmp
xor
xor
pop
xor
jmp
xchg
jmp
push
mov
jmp
add
popl
pop
push
mov
push
mov
mov
jmp
add
push
mov
sub
sub
add
mov
add
jmp
add
jmp
xchg
pop
xchg
jmp
add
pop
sub
mov
pop
sub
add
push
mov
add
jmp
sub
jmp
mov
jmp
push
pop
add
sub
push
push
pop
push
mov
add
neg
xor
add
pop
sub
xor
xor
xor
jmp
sub
jmp
mov
sub
xor
jmp
mov
push
pop
sub
jmp
pop
jmp
pushw
mov
movzbw
push
pushf
jmp
mov
mov
pop
jmp
xor
pop
add
sub
mov
push
mov
jmp
sub
mov
push
push
jmp
add
jmp
add
neg
neg
not
jmp
xor
jmp
mov
add
add
jmp
mov
push
jmp
pop
add
jmp
jmp
add
pop
sub
subl
jmp
sub
mov
mov
mov
pushl
pop
push
jmp
mov
pop
sub
pop
push
jmp
lods
xor
push
mov
jmp
push
mov
jmp
mov
push
mov
jmp
xor
add
pop
push
mov
pushl
jmp
pop
add
push
pushl
mov
push
mov
add
add
push
pushl
pop
popl
pop
jmp
mov
add
popl
mov
push
mov
mov
xor
mov
push
mov
mov
push
mov
push
mov
sub
sub
jmp
add
sub
add
jmp
add
add
add
sub
pop
sub
xor
xor
xor
pop
mov
mov
push
mov
mov
inc
and
xor
add
jmp
not
jmp
and
pop
shr
xor
or
mov
jmp
neg
add
add
pop
push
mov
sub
jmp
pop
xor
add
push
jmp
mov
sub
pop
add
jmp
mov
mov
jmp
mov
sub
dec
add
jmp
add
add
add
jmp
add
sub
jmp
mov
sub
sub
add
pop
mov
push
push
jmp
mov
mov
mov
push
mov
add
add
xchg
pop
dec
push
mov
and
pop
shl
jmp
add
push
mov
shr
push
mov
add
jmp
pop
sub
pop
add
add
pop
push
push
mov
jmp
pop
pop
add
push
jmp
mov
jmp
pop
jmp
sub
xchg
pop
mov
xor
xor
jmp
xor
add
pop
push
jmp
push
push
mov
jmp
pop
mov
push
mov
sub
mov
addl
jmp
xchg
jmp
pop
push
mov
add
add
jmp
shl
push
mov
jmp
pop
push
mov
add
pop
jmp
add
and
pop
sub
add
sub
sub
jmp
pop
jmp
pop
mov
push
mov
jmp
push
mov
jmp
pop
add
xchg
jmp
xor
pop
jmp
mov
mov
jmp
jmp
mov
mov
add
sub
mov
mov
xor
jmp
not
xor
push
jmp
push
mov
inc
and
dec
not
not
jmp
mov
jmp
pop
shl
shl
push
mov
add
jmp
pushl
pop
add
push
pushl
mov
add
jmp
xor
mov
add
push
push
mov
push
jmp
add
sub
mov
pushl
jmp
mov
push
jmp
push
mov
push
jmp
mov
add
pop
sub
xchg
jmp
popl
jmp
mov
push
mov
push
mov
sub
shr
inc
sub
neg
add
add
jmp
lods
add
sub
add
push
jmp
xor
pop
jmp
mov
mov
pop
or
add
jmp
xor
xor
pop
sub
add
sub
sub
add
pop
jmp
sub
pushl
pop
jmp
add
sub
pop
sub
push
mov
sub
pop
add
add
push
mov
sub
jmp
neg
sub
push
push
jmp
mov
shl
push
push
jmp
add
xchg
pop
push
mov
push
jmp
mov
sub
jmp
push
mov
add
pop
xor
xor
jmp
mov
jmp
jmp
mov
push
mov
sub
jmp
mov
mov
jmp
add
pop
pop
jmp
push
jmp
push
pop
add
add
jmp
add
add
xchg
pop
sub
sub
pop
jmp
shr
shr
xor
add
sub
add
jmp
push
mov
or
shr
shl
add
add
xor
mov
pop
push
mov
jmp
add
push
mov
pushl
jmp
push
mov
dec
add
shl
sub
push
push
jmp
pop
mov
mov
jmp
add
xchg
pop
add
xor
add
sub
push
sub
mov
push
pop
add
push
mov
jmp
add
add
sub
mov
mov
sub
shr
push
notl
pop
sub
add
mov
push
mov
push
mov
jmp
mov
jmp
or
jmp
xchg
pop
shl
push
push
pushl
pop
push
mov
push
pop
push
mov
add
pop
push
mov
sub
mov
mov
shl
add
xor
pop
shr
dec
push
mov
xor
pop
add
pop
xchg
pop
pushl
pop
add
push
jmp
mov
mov
sub
shl
not
push
addl
mov
add
push
notl
jmp
xor
jmp
pop
and
pop
or
jne
push
pushl
mov
add
sub
mov
jmp
not
xor
mov
pop
sub
jmp
mov
mov
add
jmp
pushl
pushl
pop
push
mov
mov
push
jmp
add
sub
push
mov
push
mov
shl
shl
jmp
mov
push
sub
mov
jmp
inc
add
mov
pop
add
add
add
mov
pop
add
sub
sub
add
sub
jmp
push
mov
add
push
mov
xor
pop
jmp
pop
jmp
pop
jmp
push
jmp
mov
neg
add
add
pop
push
mov
add
pop
xor
xor
xor
pop
push
mov
push
jmp
pop
and
jmp
mov
add
add
xchg
pop
push
mov
jmp
sub
sub
push
mov
dec
inc
jmp
add
xor
jmp
push
mov
jmp
xor
add
pop
sub
add
add
sub
jmp
pop
pop
sub
add
add
jmp
pop
push
push
mov
mov
add
jmp
mov
neg
xor
add
xor
jmp
pushl
pop
add
push
mov
add
jmp
sub
pop
xchg
jmp
push
jmp
push
mov
sub
pop
jmp
add
push
mov
sub
mov
mov
add
sub
xchg
pop
mov
push
push
jmp
push
mov
push
mov
mov
mov
add
jmp
pop
popl
mov
mov
push
jmp
add
xchg
pop
jmp
add
jmp
pop
push
mov
jmp
mov
add
jmp
xor
mov
mov
mov
jmp
push
mov
jmp
pop
and
jmp
xchg
pop
push
jmp
mov
push
mov
jmp
xor
add
sub
sub
pop
add
add
add
mov
push
mov
jmp
push
mov
xor
jmp
pop
jmp
add
push
push
sub
mov
mov
sub
push
jmp
mov
mov
jmp
mov
mov
add
sub
xchg
pop
mov
mov
and
xor
add
pop
push
mov
or
push
mov
push
jmp
xor
jmp
mov
sub
mov
pop
subl
sub
push
push
jmp
pop
and
pop
xor
jmp
push
push
mov
neg
shl
jmp
push
push
mov
sub
mov
jmp
add
add
add
sub
jmp
pop
push
mov
sub
push
jmp
mov
add
jmp
pop
mov
pop
add
mov
add
jmp
mov
add
jmp
sub
mov
mov
neg
push
mov
xor
shr
sub
shl
add
sub
pop
sub
mov
xorl
mov
add
xor
pop
jmp
add
xchg
mov
push
push
jmp
pop
popl
mov
push
mov
jmp
xor
jmp
pop
jmp
sub
jmp
mov
add
push
jmp
xor
xor
xor
pop
push
popl
addl
pushl
pop
add
push
mov
add
pop
push
mov
add
pop
jmp
mov
push
mov
jmp
mov
sub
mov
pop
addl
add
jmp
pushl
jmp
add
sub
pop
pop
push
mov
add
mov
add
add
pop
push
mov
add
pop
jmp
add
pop
push
mov
mov
sub
add
push
mov
jmp
mov
jmp
sub
add
add
add
sub
mov
jmp
push
mov
shr
and
and
jmp
or
je
sub
mov
mov
push
mov
add
jmp
pop
sub
push
push
jmp
pop
sub
sub
add
push
mov
jmp
xor
jmp
xor
not
xor
sub
pop
jmp
add
add
sub
jmp
push
jmp
notl
jmp
pop
push
mov
mov
add
mov
push
mov
push
mov
or
add
jmp
mov
sub
add
pop
sub
xchg
pop
mov
mov
push
jmp
mov
pushl
pop
add
jmp
sub
xchg
pop
mov
push
mov
subl
push
mov
add
pop
addl
sub
subl
subl
addl
mov
add
mov
add
sub
mov
mov
push
jmp
mov
and
pushl
pop
push
mov
add
jmp
xor
push
push
pop
add
mov
add
push
push
mov
mov
and
add
push
mov
sub
sub
add
pop
mov
pop
jmp
pop
add
jmp
add
pushl
jmp
sub
add
pop
xchg
pop
mov
mov
push
mov
jmp
popl
push
jmp
mov
push
mov
jmp
sub
add
add
mov
add
sub
add
add
push
mov
sub
jmp
push
mov
mov
pop
push
mov
sub
jmp
pop
mov
jmp
pop
jmp
pop
mov
push
mov
add
jmp
sub
pop
or
push
mov
jmp
pop
sub
jmp
or
sub
add
pop
dec
add
add
add
push
mov
jmp
shr
dec
not
push
mov
xor
pop
add
pop
xor
push
mov
add
inc
push
mov
inc
neg
not
inc
add
jmp
mov
mov
sub
mov
add
push
jmp
mov
push
pop
add
sub
mov
jmp
xor
pop
or
jne
sub
mov
mov
push
jmp
mov
mov
sub
pop
xchg
jmp
pop
add
push
mov
jmp
mov
pop
push
mov
jmp
add
pushl
pop
push
push
pop
add
add
xchg
pop
sub
jmp
shr
xor
jmp
mov
add
jmp
add
add
pop
sub
xchg
pop
mov
pop
jmp
mov
sub
xor
sub
or
and
sub
add
pop
jmp
mov
add
add
push
pushl
pop
popl
pop
pushl
pop
push
mov
add
add
jmp
mov
jmp
add
add
xchg
pop
push
mov
mov
mov
jmp
push
mov
add
jmp
mov
push
push
jmp
add
jmp
push
mov
push
mov
push
mov
mov
pop
jmp
push
pushl
pop
jmp
mov
xor
pushl
pop
add
or
not
jmp
mov
sub
mov
jmp
pushl
pop
add
add
jmp
shl
add
mov
jmp
add
xchg
pop
push
jmp
popl
pop
jmp
or
add
xor
add
pop
push
pop
mov
add
add
mov
add
add
mov
add
push
mov
push
jmp
sub
pop
sub
jmp
pushl
jmp
mov
jmp
mov
jmp
mov
push
mov
add
pop
jmp
push
jmp
mov
push
push
mov
add
sub
push
mov
or
and
push
mov
push
jmp
add
mov
pop
jmp
mov
push
mov
add
sub
jmp
or
inc
shl
shl
add
add
pop
xor
xor
xor
mov
sub
push
pushl
pop
popl
jmp
push
jmp
neg
jmp
or
push
mov
shr
or
jmp
mov
and
jmp
sub
add
add
jmp
push
mov
add
pop
xchg
jmp
pushw
jmp
xor
sub
pop
jmp
lods
sub
mov
mov
push
mov
add
mov
add
sub
sub
add
pushl
jmp
mov
add
pop
sub
pop
mov
mov
add
push
push
mov
jmp
push
popl
addl
mov
add
jmp
xchg
jmp
jmp
push
mov
pop
mov
add
xchg
not
inc
xor
xor
xor
inc
inc
xor
sub
jmp
shr
shl
jmp
mov
pushl
pushl
jmp
sub
xor
pop
push
jmp
shr
shl
inc
dec
add
jmp
pushl
pop
add
xor
mov
push
jmp
pop
sub
pop
add
push
push
pop
add
sub
xchg
pop
mov
jmp
pop
mov
sub
pop
push
mov
mov
inc
jmp
pop
sub
pop
add
pop
push
mov
jmp
sub
mov
mov
sub
mov
add
jmp
xor
mov
jmp
push
mov
mov
jmp
sub
jmp
xchg
pop
popl
mov
div
push
mov
push
pushf
jmp
add
mov
mov
add
pop
pushl
jmp
push
jmp
add
xor
xor
xor
mov
push
mov
add
push
mov
mov
add
jmp
xor
not
add
jmp
push
jmp
push
mov
jmp
mov
push
mov
mov
jmp
add
add
jmp
add
sub
jmp
pop
pushl
pop
push
mov
push
mov
shl
jmp
xor
jmp
mov
sub
jmp
add
pop
jmp
xchg
jmp
mov
sub
jmp
add
pop
jmp
push
jmp
shl
shl
shl
sub
add
add
pop
add
pop
add
push
mov
shr
or
push
jmp
sub
jmp
add
sub
sub
jmp
pop
mov
push
jmp
mov
jmp
add
push
push
push
jmp
push
mov
neg
sub
sub
neg
jmp
push
jmp
xchg
mov
cmp
pushf
jmp
pushl
jmp
inc
sub
or
xor
mov
pop
add
jmp
sub
pop
xor
xor
xor
mov
push
mov
add
add
xor
xor
xor
pop
jmp
mov
jmp
add
push
push
mov
xor
push
mov
mov
jmp
mov
sub
jmp
pop
jmp
add
pop
xchg
pop
jmp
mov
jmp
sub
jmp
add
add
xchg
pop
jmp
add
jmp
add
sub
sub
add
push
push
mov
jmp
sub
mov
add
sub
jmp
mov
xor
pop
push
jmp
popl
jmp
pop
jmp
add
push
jmp
pop
jmp
mov
mov
shr
xor
add
pop
jmp
xor
jmp
popl
jmp
pop
mov
push
jmp
pop
push
push
mov
jmp
push
pop
shl
xor
mov
pop
or
and
jmp
sub
sub
not
shl
push
jmp
or
and
sub
push
mov
mov
jmp
push
addb
jmp
xor
jmp
pop
push
push
jmp
mov
mov
jmp
push
mov
jmp
add
and
jmp
push
mov
mov
not
dec
sub
sub
jmp
sub
shl
dec
sub
xor
sub
pop
mov
add
sub
sub
jmp
push
push
mov
mov
xor
pop
xor
pushl
jmp
xchg
mov
mov
jmp
pop
and
shl
jmp
sub
mov
push
mov
mov
add
push
mov
jmp
mov
add
jmp
mov
jmp
add
add
mov
add
push
jmp
sub
push
popl
push
mov
sub
mov
jmp
sub
sub
jmp
xor
pop
push
jmp
mov
add
add
xchg
pop
xchg
push
mov
or
jmp
mov
addl
addl
sub
jmp
pop
mov
push
sub
mov
addl
mov
add
push
push
pushl
jmp
mov
pushl
mov
jmp
sub
pop
pushl
pop
add
push
push
jmp
push
push
jmp
pop
xor
jmp
push
push
pop
push
push
mov
dec
jmp
mov
push
mov
add
jmp
not
inc
dec
push
notl
pop
or
add
and
pop
sub
jmp
add
sub
jmp
xor
sub
add
push
jmp
pop
jmp
or
push
jmp
pushl
pop
sub
mov
jmp
push
mov
jmp
dec
push
mov
push
mov
jmp
add
push
jmp
shl
shr
sub
jmp
shl
sub
shl
jmp
add
pushl
mov
jmp
pop
btr
pushf
jmp
mov
mov
mov
push
mov
sub
mov
mov
shr
and
xor
jmp
xchg
jmp
mov
push
mov
push
mov
mov
pop
add
jmp
mov
push
mov
push
mov
xor
push
mov
xor
pop
jmp
add
jmp
mov
push
jmp
pop
xchg
pop
roll
pushf
jmp
sub
add
mov
add
dec
inc
add
jmp
mov
push
mov
jmp
push
mov
jmp
mov
jmp
mov
push
mov
sub
pop
jmp
xor
mov
pop
jmp
push
mov
mov
push
mov
inc
sub
jmp
mov
jmp
sub
push
mov
jmp
inc
push
jmp
sub
jmp
pop
push
mov
push
push
mov
mov
pop
jmp
pop
neg
shl
push
mov
xor
pop
sub
add
mov
add
add
add
sub
mov
jmp
sub
xchg
pop
mov
jmp
push
mov
jmp
neg
add
sub
add
add
mov
add
add
sub
jmp
push
mov
sub
jmp
sub
jmp
push
mov
mov
push
jmp
pop
add
push
mov
shl
jmp
push
mov
jmp
pop
jmp
pop
push
jmp
sub
sub
sub
add
pop
add
sub
pop
jmp
mov
add
add
and
pushl
pop
jmp
xor
mov
bt
pushf
jmp
mov
xchg
not
xor
xor
jmp
mov
addl
mov
add
add
push
mov
add
jmp
neg
add
push
pop
mov
jmp
mov
push
jmp
pushl
mov
add
jmp
xor
sub
push
mov
jmp
pushl
pushl
jmp
mov
push
mov
jmp
push
push
mov
addl
pop
jmp
mov
add
sub
xchg
jmp
mov
jmp
push
jmp
pop
push
mov
push
mov
push
mov
or
jmp
mov
sub
mov
mov
push
jmp
add
jmp
xor
mov
pop
sub
mov
jmp
xor
xor
jmp
add
push
mov
jmp
add
push
jmp
xchg
push
jmp
shr
push
mov
xor
and
neg
or
dec
push
jmp
mov
push
mov
push
pop
push
mov
shl
push
mov
push
mov
jmp
mov
jmp
pop
add
pushl
mov
add
add
add
sub
push
mov
or
jmp
push
mov
mov
push
jmp
negl
pushf
jmp
mov
push
mov
or
jmp
sub
mov
pop
mov
push
jmp
mov
jmp
sub
jmp
pop
add
sub
pop
mov
add
push
mov
dec
or
sub
jmp
push
mov
jmp
add
add
push
mov
sub
pop
add
pop
mov
pop
push
mov
jmp
push
mov
jmp
pop
jmp
mov
mov
add
push
jmp
push
jmp
pop
jmp
push
jmp
xor
jmp
mov
mov
shl
jmp
mov
mov
jmp
add
add
xchg
pop
jmp
pushl
mov
add
push
jmp
and
push
jmp
mov
sub
add
pop
xchg
pop
push
jmp
add
add
sub
pop
jmp
mov
or
sub
jmp
pop
xchg
mov
xor
pushf
jmp
mov
add
sub
sub
pop
sub
mov
mov
shr
dec
xor
add
pop
sub
pop
popw
jmp
push
push
pop
not
add
mov
pop
sub
pop
jmp
pushl
pop
push
mov
mov
add
jmp
sub
mov
jmp
push
pushl
pop
popl
pop
mov
jmp
add
jmp
sub
mov
mov
add
pop
xor
pop
push
mov
add
pop
add
push
mov
sub
pop
pop
add
sub
mov
pushl
mov
add
jmp
mov
push
push
mov
jmp
add
pop
add
jmp
add
xchg
mov
jmp
or
xor
jmp
sub
jmp
sub
push
jmp
mov
mov
add
add
jmp
push
mov
shr
or
jmp
push
jmp
sub
jmp
sub
add
add
pop
add
jmp
mov
xor
pop
sub
jmp
mov
jmp
push
pop
add
sub
sub
pop
jmp
add
pop
inc
sub
sub
pop
sub
jmp
sub
mov
jmp
push
pop
push
mov
jmp
sub
add
mov
add
add
push
mov
mov
jmp
add
push
jmp
mov
add
jmp
sub
shr
sub
jmp
sub
mov
add
jmp
push
jmp
add
jmp
xchg
mov
or
pushf
jmp
mov
pop
add
pop
sub
mov
jmp
xchg
pop
add
jmp
push
jmp
add
xchg
pop
push
jmp
mov
add
pop
add
xor
jmp
add
xor
xor
xor
pop
sub
mov
mov
add
add
jmp
mov
mov
mov
jmp
addl
pop
addl
add
jmp
mov
sub
mov
xorl
mov
add
xor
jmp
pushl
pop
push
mov
push
jmp
or
pop
push
notl
jmp
mov
pop
jmp
mov
add
jmp
sub
pop
push
pushl
pop
jmp
add
jmp
push
mov
push
jmp
sub
mov
pop
jmp
sub
jmp
pop
mov
mov
not
and
push
mov
sub
pop
jmp
mov
push
jmp
add
push
jmp
xchg
sub
sub
jmp
pop
add
xor
xor
xor
jmp
sub
mov
mov
mov
jmp
pop
jmp
push
jmp
add
jmp
mov
push
mov
add
sub
jmp
add
shr
and
push
mov
jmp
not
inc
shr
and
shl
push
mov
not
mov
pop
sub
sub
add
add
pop
jmp
jmp
xor
pop
jmp
sub
sub
pop
push
mov
mov
pop
pushl
jmp
mov
xor
xor
xor
not
push
mov
push
mov
and
xor
shl
neg
add
sub
sub
add
add
jmp
pop
mov
pop
add
add
jmp
push
push
mov
mov
pop
not
add
sub
pop
jmp
pop
jmp
mov
push
mov
add
push
push
mov
mov
jmp
xor
xor
xor
pop
mov
mov
add
jmp
add
movzbl
jmp
mov
add
pop
add
push
mov
add
sub
sub
pop
mov
jmp
sub
mov
sub
mov
push
pop
or
push
mov
jmp
mov
sub
sub
add
pop
add
mov
add
push
jmp
addl
push
mov
subl
sub
addl
pop
pop
mov
add
add
pop
jmp
pop
add
push
mov
add
pop
sub
sub
mov
add
shl
jmp
push
mov
mov
shl
push
jmp
xchg
xchg
jmp
xor
sub
inc
jmp
and
jmp
push
mov
push
mov
push
sub
pop
sub
mov
pop
not
add
push
mov
jmp
mov
jmp
add
push
jmp
add
sub
pushl
pop
push
push
mov
jmp
add
pop
push
mov
mov
xor
sub
pushl
pushl
jmp
mov
add
jmp
push
mov
mov
mov
xor
pop
push
mov
neg
sub
mov
jmp
mov
push
mov
jmp
mov
jmp
pop
xor
xor
xor
pop
addl
jmp
pushl
popf
pop
adc
pushf
jmp
push
pushf
jmp
dec
jmp
mov
pushl
jmp
sub
shr
jmp
add
add
not
shl
jmp
pushl
pop
add
sub
mov
push
pop
push
mov
jmp
mov
sub
mov
mov
add
push
push
jmp
push
mov
mov
add
pop
push
mov
jmp
push
mov
sub
pop
sub
jmp
push
pop
mov
pop
pop
jmp
sub
pop
jmp
sub
mov
add
add
jmp
mov
add
push
mov
jmp
add
mov
jmp
push
push
mov
mov
add
jmp
shl
push
push
pop
add
sub
xchg
pop
mov
mov
sub
pop
push
pop
pop
and
jmp
add
pop
jmp
xor
xor
pop
push
mov
subl
pop
jmp
shl
sub
dec
xor
sub
pop
jmp
not
dec
inc
sub
jmp
add
add
add
add
jmp
mov
add
add
xchg
pop
jmp
add
jmp
xor
shl
push
mov
jmp
neg
sub
mov
pop
sub
pop
mov
add
push
push
push
push
mov
push
jmp
xor
push
mov
mov
pop
mov
add
jmp
pushl
pop
push
mov
add
add
jmp
push
mov
add
pop
xchg
pop
xchg
mov
jmp
pop
jmp
add
pop
push
mov
add
mov
add
xchg
jmp
push
sub
mov
push
push
mov
add
or
shl
and
sub
mov
jmp
mov
and
and
push
mov
jmp
xor
xor
sub
xchg
sub
inc
neg
push
mov
neg
jmp
popl
jmp
pop
xor
add
jmp
mov
add
add
jmp
xchg
jmp
add
push
mov
pushl
pop
popl
pop
jmp
popl
jmp
push
push
jmp
pushl
pushl
pushl
jmp
mov
mov
push
mov
jmp
add
xor
pop
add
pop
add
xor
xor
xor
mov
push
mov
sub
pop
sub
push
mov
jmp
mov
jmp
push
mov
dec
sub
jmp
push
mov
add
jmp
mov
jmp
xor
pushl
pop
push
mov
add
add
jmp
sub
mov
jmp
xor
xor
mov
sarl
pushf
jmp
sub
jmp
pushl
pop
jmp
push
mov
mov
or
mov
add
shl
jmp
addl
pushl
mov
add
push
jmp
sub
mov
jmp
mov
add
add
push
push
pop
add
add
jmp
sub
sub
pop
add
add
mov
push
mov
jmp
shr
cmp
je
sub
jmp
pop
popl
pop
mov
push
mov
jmp
push
mov
jmp
xor
mov
jmp
add
xor
pop
neg
inc
push
jmp
push
notl
pop
dec
xor
add
pop
sub
sub
add
jmp
push
mov
add
pop
not
push
mov
dec
add
add
pop
jmp
sub
mov
push
pop
sub
mov
push
jmp
add
jmp
add
pop
xchg
pop
shr
xor
push
mov
jmp
mov
mov
jmp
xor
jmp
add
pop
inc
push
mov
add
pop
xor
pop
mov
mov
add
shr
jmp
push
push
push
pop
jmp
add
shr
xor
jmp
pop
jmp
pop
xchg
mov
shlw
pushf
jmp
xor
xor
xor
xor
xor
jmp
add
mov
sub
add
add
pop
jmp
mov
pop
xor
jmp
add
jmp
add
push
mov
mov
pop
pop
mov
mov
add
sub
pop
add
jmp
mov
not
sub
mov
mov
sub
xor
pop
not
add
sub
pop
sub
push
jmp
pop
push
mov
add
pop
push
jmp
add
push
push
pop
jmp
mov
add
pop
push
jmp
push
mov
push
mov
add
add
xchg
pop
pushl
mov
add
add
jmp
add
pop
xor
xor
xor
mov
jmp
xor
pop
inc
add
push
mov
jmp
sub
pop
sub
push
push
mov
mov
pop
jmp
and
inc
add
dec
not
jmp
pop
pop
push
notl
pop
xchg
or
xor
add
mov
push
mov
jmp
xor
jmp
pop
jmp
xor
jmp
sub
sub
jmp
pop
jmp
pushl
pop
push
mov
add
add
xchg
pop
jmp
pop
jmp
not
neg
dec
sub
mov
mov
dec
neg
xor
xor
pop
mov
pop
sub
add
add
jmp
mov
or
jmp
push
mov
jmp
add
sub
mov
add
jmp
mov
add
push
mov
push
mov
addl
pop
add
push
jmp
pop
push
mov
xor
pop
sub
shr
xor
or
mov
push
mov
add
jmp
mov
mov
add
pop
pushl
jmp
push
mov
push
push
pop
add
push
mov
sub
mov
push
mov
jmp
not
xchg
sub
mov
mov
jmp
add
push
mov
jmp
pushl
pop
popl
pop
mov
pushl
jmp
push
mov
jmp
pop
and
xor
sub
pop
jmp
mov
add
popl
mov
pushl
pushl
pop
jmp
mov
or
neg
push
mov
jmp
mov
add
sub
mov
add
xchg
jmp
add
subl
pop
jmp
mov
add
xor
xor
xor
mov
idiv
movzbw
jmp
or
sub
mov
jmp
mov
jmp
push
mov
push
push
push
pop
and
jmp
sub
sub
jmp
push
pop
sub
mov
mov
add
sub
pop
sub
add
add
push
mov
add
jmp
sub
jmp
pop
sub
sub
add
push
mov
and
xor
xor
add
jmp
pop
jmp
popw
jmp
mov
jmp
sub
jmp
add
xchg
pop
push
mov
jmp
mov
pop
jmp
mov
push
mov
jmp
not
inc
jmp
push
mov
mov
or
not
dec
jmp
pop
pop
jmp
mov
popl
jmp
mov
push
mov
push
pop
push
mov
add
mov
add
jmp
subl
pop
mov
push
mov
add
add
xchg
pop
add
add
push
jmp
mov
mov
mov
add
mov
add
jmp
sub
sub
add
mov
pop
xchg
jmp
pop
jmp
xchg
neg
xchg
xor
jmp
pop
mov
add
push
mov
push
mov
jmp
pop
popl
pop
jmp
pop
push
pushl
mov
add
jmp
push
push
mov
xor
jmp
sub
mov
mov
subl
sub
addl
mov
push
mov
mov
add
add
xchg
jmp
push
jmp
add
pop
pop
pop
push
jmp
pushl
pop
add
push
pushl
pop
popl
mov
jmp
add
sub
pop
push
pushl
pushl
mov
push
mov
jmp
push
mov
mov
pop
jmp
xor
xor
jmp
push
mov
mov
push
mov
add
pop
sub
jmp
mov
add
add
pop
jmp
mov
xor
jmp
shl
shl
xor
jmp
add
jmp
sub
mov
subl
pop
push
jmp
and
pop
or
je
pushl
pushl
pushl
jmp
mov
mov
push
mov
mov
inc
jmp
add
jmp
mov
add
shl
push
mov
or
pop
push
mov
sub
mov
jmp
addl
jmp
sub
add
jmp
push
push
pop
jmp
sub
jmp
xor
sub
add
mov
jmp
xor
dec
jmp
sub
xchg
jmp
mov
mov
jmp
mov
jmp
push
push
jmp
sub
sub
pop
add
add
mov
add
jmp
inc
jmp
sub
mov
addl
pop
push
jmp
mov
add
sub
xchg
jmp
mov
mov
jmp
sub
jmp
mov
push
mov
add
add
jmp
mov
add
sub
xchg
mov
mov
push
push
mov
add
push
push
mov
mov
pop
push
push
mov
jmp
pop
mov
push
jmp
add
pop
jmp
push
mov
add
pop
add
jmp
pop
push
jmp
and
pop
add
not
xor
push
jmp
lods
xor
sub
jmp
add
jmp
pushl
jmp
add
push
pushl
mov
add
popl
pop
shr
sub
mov
sub
mov
mov
push
jmp
sub
pop
add
pop
xchg
pop
push
push
mov
add
push
mov
add
add
sub
mov
add
push
push
mov
mov
pop
jmp
mov
jmp
add
pop
sub
push
pushl
pop
popl
pop
mov
mov
push
jmp
not
xchg
jmp
sub
jmp
mov
push
push
jmp
push
pop
jmp
add
sub
xchg
pop
jmp
mov
jmp
push
pop
jmp
shr
add
sub
add
add
mov
add
jmp
and
add
jmp
push
mov
shr
not
add
xor
pop
jmp
push
jmp
add
sub
sub
add
pop
jmp
mov
or
add
add
neg
push
mov
neg
jmp
sub
jmp
mov
shr
or
add
jmp
add
add
sub
sub
pop
ret
jmp
add
mov
add
xchg
push
jmp
push
push
mov
mov
xor
mov
add
add
mov
push
push
pop
jmp
xor
mov
div
movzbw
pushw
mov
movzbw
jmp
shr
push
mov
jmp
mov
and
add
sub
pop
sub
add
pop
sub
jmp
mov
push
mov
mov
jmp
addl
pop
push
jmp
add
push
mov
add
pop
push
mov
jmp
mov
add
xor
xor
xor
mov
jmp
mov
mov
jmp
push
mov
mov
pop
push
mov
add
pushl
jmp
add
jmp
add
pop
add
xchg
jmp
add
add
jmp
mov
mov
jmp
mov
jmp
pop
jmp
shl
inc
shl
sub
or
xor
add
jmp
or
sub
sub
pop
jmp
xchg
mov
jmp
mov
pop
mov
mov
jmp
pushl
mov
jmp
sub
sub
add
jmp
pop
jmp
pop
mov
addl
mov
push
mov
push
mov
jmp
lods
sub
jmp
pop
not
sub
mov
jmp
sub
jmp
push
jmp
add
mov
pushl
mov
add
add
pop
pushl
jmp
add
xchg
mov
add
xchg
mov
pushl
pushl
pop
push
push
mov
add
push
jmp
push
mov
add
jmp
inc
push
mov
jmp
mov
add
pop
pop
sub
pop
sub
sub
jmp
mov
jmp
pop
jmp
pop
add
jmp
add
mov
push
mov
add
add
xchg
pop
xchg
mov
jmp
sub
mov
jmp
pop
jmp
popl
jmp
not
jmp
mov
push
jmp
pop
add
sub
add
mov
add
push
jmp
push
mov
mov
mov
xor
mov
add
mov
mov
add
jmp
mov
add
pop
push
push
sub
mov
jmp
pop
add
xchg
mov
push
jmp
pushl
pop
add
push
pushl
mov
add
popl
mov
jmp
jmp
mov
push
mov
dec
or
sub
neg
xor
jmp
mov
add
sub
xor
xor
xor
pop
mov
pushl
mov
add
jmp
add
sub
jmp
sub
xor
pop
jmp
push
jmp
add
popl
jmp
popl
pop
jmp
push
jmp
mov
sub
mov
push
mov
jmp
pushl
pushl
pop
push
push
mov
add
add
jmp
sub
jmp
add
push
mov
sub
mov
mov
push
mov
add
sub
push
pushl
pop
jmp
mov
add
sub
jmp
not
push
mov
push
mov
push
subl
pop
jmp
sub
pop
not
push
jmp
pop
add
pop
push
mov
push
mov
push
jmp
pushl
jmp
pop
pop
add
mov
add
push
mov
mov
mov
jmp
mov
add
jmp
or
inc
add
sub
mov
sub
mov
mov
add
push
mov
add
pop
xchg
pop
mov
add
xchg
mov
jmp
pop
xchg
pop
add
add
sub
pushl
jmp
push
mov
push
push
jmp
push
mov
push
mov
jmp
pop
pop
inc
add
or
pop
push
mov
sub
mov
jmp
xchg
pop
and
mov
push
mov
add
jmp
xor
add
add
add
sub
pop
add
xor
xor
xor
pop
jmp
mov
mov
jmp
pop
jmp
pop
push
jmp
pop
add
pop
movzbl
jmp
mov
push
mov
add
jmp
shr
shr
push
mov
add
shr
xor
or
pop
push
mov
add
xor
pop
jmp
mov
add
pop
sub
sub
add
push
mov
push
mov
push
notb
jmp
pop
push
mov
sub
pop
xchg
mov
jmp
add
pop
push
jmp
add
xchg
pop
add
push
jmp
add
add
pop
add
push
pushl
pop
popl
mov
push
jmp
mov
add
jmp
add
sub
mov
push
jmp
pop
mov
mov
sub
push
mov
mov
or
and
sub
sub
jmp
pop
push
mov
mov
jmp
popl
mov
mov
push
mov
shr
and
push
jmp
pop
add
xchg
pop
xchg
mov
mov
jmp
push
jmp
add
add
jmp
pop
mov
pushl
pushl
mov
add
push
mov
push
jmp
mov
sub
mov
jmp
add
sub
xchg
pop
mov
pushl
mov
add
popl
jmp
and
push
mov
sub
pop
push
push
mov
mov
pop
shr
shl
xor
xor
pushl
jmp
xchg
pop
pop
and
mov
add
or
je
push
jmp
mov
subl
jmp
sub
add
pop
add
sub
sub
add
push
mov
neg
xor
add
or
xor
sub
sub
sub
add
pop
add
sub
jmp
sub
mov
push
mov
push
pushl
pop
add
jmp
push
mov
jmp
xor
shl
and
jmp
mov
jmp
xor
add
add
sub
jmp
push
push
jmp
push
jmp
mov
pop
push
mov
sub
jmp
pushl
pop
jmp
add
popl
mov
shrw
pushf
jmp
add
jmp
push
mov
or
push
mov
mov
jmp
mov
mov
xchg
jmp
push
jmp
mov
xor
pop
jmp
pushl
jmp
mov
sub
mov
push
pop
add
jmp
mov
push
mov
jmp
pop
push
jmp
pop
add
mov
add
push
mov
mov
jmp
mov
jmp
pop
add
sub
sub
pop
and
xchg
xchg
jmp
push
mov
mov
jmp
sub
add
jmp
jmp
sub
pop
jmp
mov
inc
push
mov
jmp
neg
xor
add
pop
or
pop
inc
sub
add
jmp
push
mov
jmp
xor
sub
add
add
pop
add
jmp
sub
pop
jmp
jmp
add
push
mov
neg
inc
not
jmp
add
pop
add
push
mov
sub
mov
add
pop
and
mov
push
mov
add
add
xchg
jmp
pop
and
xor
or
pop
jmp
mov
sub
pop
xchg
mov
mov
push
push
pop
push
mov
xor
jmp
mov
shl
sub
jmp
mov
mov
push
mov
jmp
add
add
push
mov
add
pop
mov
add
push
mov
jmp
sub
mov
pushw
jmp
mov
jmp
mov
add
mov
add
add
pop
mov
jmp
pop
xchg
mov
push
popw
jmp
push
mov
sub
and
sub
shr
jmp
inc
or
xor
xor
mov
pop
jmp
mov
push
jmp
mov
add
add
push
jmp
xor
sub
pop
xchg
jmp
xor
sub
pop
sub
jmp
mov
mov
xor
pop
xor
jmp
push
mov
push
mov
add
jmp
push
push
mov
jmp
pop
jmp
xor
mov
mov
add
push
mov
jmp
add
mov
jmp
sub
mov
push
mov
jmp
pop
sub
push
pushl
pop
jmp
pushl
jmp
addl
mov
push
mov
jmp
dec
shl
not
inc
jmp
mov
pushl
jmp
not
xor
jmp
mov
pushl
mov
jmp
push
pop
neg
shl
jmp
add
jmp
mov
xor
add
add
sub
pushl
pop
add
add
jmp
mov
push
mov
jmp
mov
add
sub
jmp
pop
push
mov
sub
xor
add
sub
or
push
mov
sub
jmp
mov
jmp
mov
push
push
pop
add
jmp
add
xor
xor
xor
pop
jmp
mov
add
jmp
push
mov
mov
add
jmp
popl
pop
mov
jmp
mov
sub
mov
push
jmp
mov
mov
sub
sub
add
push
mov
add
pop
jmp
add
jmp
not
push
mov
jmp
xor
pop
mov
push
mov
jmp
mov
push
mov
jmp
xor
jmp
add
jmp
add
push
jmp
add
jmp
xor
sub
xor
pop
pop
push
jmp
sub
inc
dec
add
sub
or
jmp
pop
mov
add
popa
popf
ret
jmp
shl
sub
dec
sub
push
jmp
mov
dec
not
jmp
and
pop
push
jmp
pop
add
add
jmp
push
mov
xor
pop
jmp
shr
jmp
pop
sub
mov
jmp
mov
push
mov
push
mov
add
pop
pop
jmp
sub
jmp
popl
jmp
shr
push
jmp
push
mov
sub
pop
push
jmp
push
mov
mov
pop
mov
pop
add
jmp
push
mov
add
pop
add
xchg
jmp
popl
jmp
pop
add
jmp
mov
sub
pop
add
sub
jmp
push
jmp
mov
jmp
mov
add
push
addl
mov
add
jmp
inc
inc
sub
mov
jmp
xor
jmp
xor
sub
jmp
push
mov
add
mov
add
pop
jmp
add
push
push
mov
mov
sub
jmp
push
mov
mov
sub
push
mov
mov
pop
pop
shr
add
push
jmp
mov
xor
pop
jmp
sub
pop
add
add
push
mov
sub
pop
jmp
mov
mov
pop
sub
add
push
mov
jmp
mov
add
push
notb
mov
add
push
push
mov
jmp
pushl
pushl
jmp
mov
mov
and
mov
push
mov
add
add
xchg
pop
or
je
pushl
pushl
pushl
mov
add
push
mov
push
jmp
mov
add
xor
sub
pop
xor
mov
pop
mov
pop
jmp
add
jmp
lods
xor
jmp
mov
sub
jmp
pop
mov
add
dec
push
xchg
not
xchg
pop
shl
xor
add
mov
add
add
jmp
push
push
pop
shr
xor
mov
pop
add
jmp
add
sub
pop
add
add
sub
mov
mov
and
jmp
mov
push
mov
jmp
popl
mov
jmp
push
jmp
notl
pop
shl
dec
jmp
and
and
xor
jmp
xor
jmp
push
jmp
push
mov
pushl
pop
popl
mov
jmp
mov
jmp
pop
jmp
or
jmp
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
add
add
mov
jmp
mov
pop
add
sub
pushl
pop
push
mov
add
push
jmp
add
add
push
mov
sub
sub
pop
add
jmp
pop
sub
mov
push
mov
jmp
pop
jmp
sub
pop
xchg
jmp
pop
sub
sub
jmp
add
jmp
pop
push
mov
jmp
add
or
and
sub
sub
pop
or
sub
jmp
mov
jmp
sub
mov
mov
jmp
sub
pop
jmp
mov
add
jmp
add
mov
add
sub
mov
sub
mov
mov
sub
dec
or
dec
jmp
push
mov
push
jmp
add
jmp
sub
jmp
pop
pop
push
jmp
xor
pop
push
mov
jmp
subl
add
push
mov
add
pop
pop
pop
jmp
mov
push
mov
push
mov
add
pop
add
jmp
push
push
mov
jmp
push
mov
mov
add
mov
add
jmp
mov
push
mov
sub
jmp
neg
sub
jmp
mov
sub
mov
pop
jmp
sub
shl
jmp
mov
push
mov
mov
push
mov
mov
jmp
sub
jmp
mov
add
sub
sub
add
mov
add
mov
pop
sub
mov
mov
and
jmp
pop
add
pop
pop
push
jmp
pushl
jmp
xor
jmp
xor
xor
jmp
mov
add
jmp
pop
add
jmp
mov
push
sub
mov
jmp
pop
push
incl
jmp
add
inc
not
sub
mov
pop
add
pop
xchg
not
xchg
jmp
pop
or
sub
sub
mov
jmp
add
push
mov
sub
jmp
pop
add
push
jmp
add
push
push
push
push
mov
mov
pop
mov
jmp
sub
mov
push
jmp
xor
push
xor
xor
jmp
push
pop
jmp
mov
push
pop
add
push
mov
add
pop
xor
jmp
pop
jmp
push
mov
jmp
push
jmp
shr
sub
add
pop
jmp
pop
jmp
or
pop
neg
jmp
mov
sub
jmp
lods
xor
jmp
jmp
push
pushl
mov
add
jmp
mov
push
pop
push
mov
sub
jmp
pop
xor
xor
jmp
mov
mov
push
mov
jmp
pop
pop
add
add
jmp
add
jmp
or
neg
shr
add
add
jmp
sub
add
pop
push
push
push
pop
jmp
pop
jmp
shr
push
mov
jmp
push
pop
jmp
mov
jmp
xor
mov
pop
push
jmp
pop
mov
jmp
add
pop
sub
sub
jmp
mov
mov
add
push
mov
jmp
mov
add
add
add
xchg
pop
add
jmp
sub
pop
push
xchg
push
jmp
and
pop
push
mov
push
mov
add
pop
sub
xchg
jmp
add
push
mov
jmp
sub
jmp
pop
jmp
push
push
jmp
push
mov
sub
mov
mov
jmp
add
pop
pop
push
mov
add
pop
push
mov
push
mov
mov
xor
mov
add
push
mov
neg
push
mov
sub
mov
jmp
xchg
pop
jmp
shr
push
notl
pop
jmp
add
mov
add
jmp
pushl
pushl
pop
add
jmp
mov
mov
sub
sub
sub
push
mov
add
pop
push
push
mov
jmp
add
pop
pushl
jmp
notl
pop
xor
xor
xor
xchg
xchg
pushl
pushl
pop
jmp
mov
push
sub
jmp
push
mov
add
add
sub
pop
push
mov
push
push
jmp
add
xchg
pop
push
push
pop
push
jmp
xor
mov
add
xor
pop
jmp
pop
add
jmp
pop
jmp
mov
sub
mov
add
push
mov
pushl
pop
popl
pop
mov
pushl
pushl
jmp
pop
pushl
mov
push
push
mov
add
push
mov
push
push
mov
mov
sub
pop
shr
inc
shl
shr
add
sub
sub
add
pop
add
add
pushl
pop
push
push
mov
addl
jmp
pop
push
push
push
push
pop
jmp
add
jmp
pop
xor
sub
xor
sub
pop
push
mov
sub
pop
add
add
push
mov
xor
jmp
xor
pop
push
mov
add
jmp
mov
shl
or
sub
sub
pop
and
pop
neg
add
push
push
jmp
mov
sub
mov
push
mov
add
jmp
mov
add
popl
mov
pushl
pushl
pop
add
push
mov
add
sub
push
jmp
lods
jmp
add
jmp
and
not
add
sub
pop
xor
push
mov
pop
mov
sub
jmp
pop
push
mov
xor
jmp
jmp
add
jmp
pop
xor
pushl
pop
add
popl
push
mov
push
mov
sub
mov
mov
inc
shr
or
sub
sub
pop
add
add
pop
jmp
xor
push
mov
sub
jmp
push
jmp
pop
popl
jmp
add
add
xchg
pop
push
mov
xor
jmp
push
mov
add
jmp
xor
or
jmp
xor
pushl
jmp
add
add
xchg
pop
jmp
xor
xor
jmp
xchg
not
jmp
push
popl
push
mov
subl
add
push
mov
add
jmp
add
popl
pop
jmp
neg
or
shr
jmp
pop
popl
mov
xor
pushf
jmp
mov
shl
neg
sub
sub
push
jmp
add
sub
mov
jmp
push
mov
mov
push
push
mov
mov
pop
mov
pop
pop
jmp
and
jmp
mov
or
mov
add
shr
sub
mov
pop
sub
pop
add
jmp
or
or
jmp
pop
add
add
add
push
mov
sub
jmp
mov
xor
push
mov
jmp
mov
jmp
pop
or
je
pushl
pushl
mov
jmp
sub
push
mov
sub
add
add
jmp
mov
shl
jmp
pop
add
pushl
pushl
pop
sub
mov
mov
add
jmp
pop
push
mov
add
sub
jmp
mov
push
push
jmp
mov
add
pop
pop
jmp
add
jmp
sub
xchg
mov
jmp
mov
jmp
pop
pushl
pop
jmp
xor
xor
xor
pop
mov
sub
mov
mov
sub
jmp
add
add
jmp
add
and
add
shl
add
xor
pop
jmp
sub
add
sub
jmp
push
mov
add
dec
shl
jmp
mov
mov
xor
jmp
add
pop
push
mov
or
jmp
sub
push
mov
push
negl
pop
or
jmp
mov
mov
push
mov
push
xorl
jmp
mov
pushl
mov
push
mov
add
add
xchg
pop
popl
jmp
push
mov
jmp
push
mov
push
pop
or
pushl
pop
add
push
push
jmp
xchg
not
jmp
mov
add
add
sub
mov
push
mov
mov
jmp
mov
add
push
mov
xor
add
push
jmp
push
jmp
sub
jmp
xchg
pop
mov
mov
jmp
sub
jmp
pop
shr
xor
jmp
push
pop
xor
jmp
neg
xor
sub
jmp
sub
sub
push
jmp
mov
mov
jmp
and
xor
add
add
jmp
add
jmp
xor
sub
sub
mov
add
jmp
mov
jmp
shr
sub
mov
jmp
pop
xchg
jmp
push
sub
mov
pop
mov
add
jmp
mov
jmp
mov
push
mov
push
mov
shl
push
mov
jmp
pushl
mov
add
push
mov
push
mov
addl
jmp
sub
jmp
mov
push
mov
jmp
add
xor
pop
sub
xor
push
mov
push
mov
jmp
mov
jmp
pop
sub
push
negl
jmp
mov
push
push
jmp
mov
add
jmp
pop
jmp
push
jmp
add
jmp
sub
jmp
add
jmp
xor
xor
jmp
neg
add
inc
jmp
push
mov
add
add
xchg
pop
jmp
dec
jmp
sub
add
add
sub
push
jmp
mov
push
mov
add
add
xchg
mov
push
jmp
push
pushl
pop
popl
jmp
inc
dec
jmp
decl
pop
sub
neg
add
add
pop
jmp
pop
sub
jmp
sub
mov
mov
add
sub
xchg
pop
mov
mov
add
jmp
pop
sub
push
jmp
xor
pop
mov
pushl
pop
jmp
add
add
mov
add
xchg
mov
jmp
add
jmp
or
pop
dec
jmp
add
jmp
sub
xchg
pop
mov
jmp
xor
jmp
mov
jmp
mov
not
shr
jmp
pop
sub
mov
push
mov
mov
pop
jmp
add
xor
sub
add
sub
jmp
add
push
jmp
pop
jmp
neg
sub
jmp
sub
mov
mov
sub
pop
sub
jmp
xor
pop
add
pop
push
push
mov
jmp
xor
sub
xor
sub
mov
add
jmp
mov
push
jmp
xor
mov
mov
push
mov
jmp
pop
push
mov
add
pop
push
mov
sub
pop
xor
jmp
add
jmp
pushl
popf
pop
rclb
pushf
jmp
pop
jmp
xchg
mov
cmp
pushf
jmp
push
mov
dec
jmp
push
mov
add
jmp
pop
add
jmp
add
push
jmp
pushl
jmp
mov
pop
pop
jmp
popl
pop
jmp
add
sub
xchg
jmp
push
mov
jmp
push
mov
jmp
pop
xor
mov
add
jmp
pop
shl
push
mov
inc
shl
add
sub
add
pop
push
push
mov
mov
add
pop
xor
pop
add
pop
jmp
push
jmp
pop
sub
shl
sub
mov
mov
jmp
pop
push
jmp
pop
push
mov
add
mov
jmp
add
xchg
mov
push
jmp
add
sub
xchg
pop
mov
push
mov
push
mov
mov
pop
jmp
pop
movzbl
jmp
mov
xor
pop
not
push
mov
sub
sub
pop
jmp
mov
add
push
mov
add
shl
dec
xor
xor
pop
mov
pop
jmp
add
jmp
shr
xor
mov
pop
xor
pop
push
mov
jmp
add
dec
push
mov
neg
xor
sub
or
pop
jmp
pop
push
mov
push
jmp
push
mov
jmp
xor
dec
jmp
push
mov
push
mov
push
mov
sub
mov
mov
add
push
mov
add
mov
add
xchg
pop
and
jmp
add
xor
xor
jmp
add
sub
push
jmp
pop
pushl
mov
add
add
pushl
pop
add
pushl
jmp
mov
jmp
pushl
pushl
jmp
push
mov
add
jmp
mov
bt
pushf
jmp
addw
jmp
mov
add
jmp
pushl
popf
pop
rcrl
pushf
jmp
xor
push
xchg
xchg
not
xchg
xor
jmp
mov
add
add
xchg
pop
jmp
push
mov
mov
add
pop
add
jmp
and
pop
and
push
mov
jmp
add
pop
xchg
jmp
pop
pop
add
jmp
push
mov
push
mov
jmp
mov
addl
pop
push
push
jmp
pop
shl
add
push
mov
jmp
not
add
mov
mov
jmp
mov
jmp
jmp
pushl
pop
add
jmp
pop
push
mov
not
jmp
sub
sub
add
jmp
sub
add
sub
add
jmp
push
jmp
shr
and
jmp
add
add
jmp
pop
jmp
neg
xor
add
jmp
inc
shr
sub
add
pop
push
mov
add
jmp
mov
mov
jmp
mov
mov
sub
mov
push
jmp
pop
sub
jmp
push
jmp
mov
add
add
xchg
pop
sub
mov
mov
add
add
jmp
push
jmp
shr
add
jmp
push
jmp
xor
and
pop
jmp
pop
pop
jmp
mov
jmp
pop
push
mov
push
push
mov
add
add
jmp
xor
jmp
pushl
mov
push
mov
push
mov
shr
neg
jmp
pop
push
jmp
push
mov
add
add
xchg
pop
jmp
add
shr
jmp
sub
jmp
push
pushl
pop
push
jmp
neg
push
jmp
sub
mov
add
pop
jmp
notl
pop
sub
xor
sub
mov
jmp
mov
mov
push
mov
add
pop
sub
add
add
pop
add
sub
pushl
jmp
sub
mov
push
mov
add
sub
xchg
pop
mov
jmp
xchg
jmp
pushl
popf
pop
sbb
pushf
jmp
add
push
push
jmp
pop
push
mov
sub
sub
add
pushl
mov
add
add
push
mov
jmp
sub
mov
mov
shl
push
push
pop
xchg
neg
xchg
push
jmp
pushl
jmp
pop
sub
sub
jmp
push
jmp
mov
mov
jmp
pop
sub
sub
sub
sub
push
jmp
mov
add
xchg
mov
push
mov
jmp
xor
pop
jmp
mov
and
sub
add
jmp
xchg
sub
jmp
mov
sub
mov
add
mov
push
mov
add
push
mov
add
jmp
pop
add
jmp
not
jmp
mov
add
push
mov
sub
pop
sub
sub
add
jmp
mov
jmp
add
push
push
pop
inc
shl
or
or
and
xor
jmp
popl
mov
and
pushf
jmp
mov
jmp
pop
jmp
pushl
popf
pop
rcrb
pushf
jmp
add
add
sub
add
jmp
sub
sub
add
pop
mov
pop
sub
pop
xor
xor
xor
pop
mov
mov
shl
jmp
mov
push
push
pop
add
sub
jmp
dec
sub
sub
sub
sub
add
add
pop
add
pop
mov
pop
add
add
add
sub
jmp
xor
push
xorl
jmp
shr
push
push
mov
xor
jmp
push
mov
mov
jmp
xchg
mov
and
pushl
mov
add
push
jmp
or
and
sub
xor
jmp
add
sub
pop
push
mov
jmp
add
sub
pushl
pop
jmp
xor
sub
mov
push
mov
add
add
xchg
mov
jmp
add
push
jmp
mov
jmp
sub
push
mov
or
sub
shl
neg
and
push
mov
add
add
pop
add
pop
add
pop
add
sub
mov
jmp
push
mov
jmp
pop
push
mov
add
add
push
jmp
add
not
sub
jmp
add
push
mov
pushl
mov
push
mov
add
add
xor
xor
xor
jmp
mov
and
jmp
add
add
xchg
pop
sub
mov
mov
add
sub
add
jmp
mov
addl
pushl
pop
add
add
push
push
mov
mov
push
jmp
sub
mov
sub
mov
addl
pop
push
mov
jmp
push
jmp
sub
sub
pushl
pop
push
jmp
sub
add
pop
mov
push
jmp
mov
add
jmp
sub
xor
add
pop
jmp
add
sub
pop
jmp
mov
pushl
jmp
mov
jmp
mov
push
mov
mov
push
push
push
mov
mov
pop
sub
mov
push
subl
pop
add
jmp
sub
sub
add
add
mov
jmp
mov
jmp
popl
jmp
sub
pop
pop
jmp
mov
xor
pop
add
and
jmp
sub
jmp
mov
mov
sub
add
add
push
mov
sub
pop
push
mov
add
add
jmp
cmpl
je
push
jmp
xor
xor
sub
pop
add
sub
add
jmp
push
jmp
mov
shr
jmp
shr
jmp
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
dec
push
jmp
mov
neg
shl
shl
neg
sub
add
mov
add
mov
pop
add
xor
add
add
sub
pop
pushl
pop
add
jmp
xor
sub
pop
pop
push
push
push
push
pop
and
sub
jmp
add
or
inc
jmp
add
push
mov
sub
sub
pop
sub
pushl
jmp
sub
pop
mov
add
push
pop
mov
add
sub
jmp
sub
push
mov
jmp
mov
add
push
mov
shr
jmp
xor
jmp
pop
push
mov
push
mov
mov
jmp
mov
add
push
mov
jmp
popl
mov
jmp
push
jmp
sub
push
mov
jmp
jmp
mov
sub
mov
push
mov
addl
pop
add
sub
mov
push
mov
add
sub
push
sub
mov
addl
pop
add
sub
xchg
pop
mov
push
mov
dec
sub
or
sub
mov
pop
add
sub
sub
mov
add
add
add
add
mov
push
jmp
pop
dec
shr
not
and
sub
xor
pop
add
pop
sub
add
jmp
xor
push
mov
push
mov
mov
pushw
sub
mov
add
xor
jmp
xor
push
mov
shr
jmp
sub
xor
jmp
popl
mov
idiv
push
mov
mov
jmp
shl
inc
shl
push
mov
add
add
inc
not
sub
jmp
and
pushl
mov
add
push
jmp
mov
add
add
xchg
pop
jmp
mov
jmp
mov
push
pop
jmp
push
pop
jmp
push
mov
xor
and
pop
add
jmp
addl
pop
add
push
mov
add
pop
xchg
pop
xor
push
jmp
add
sub
xchg
jmp
mov
push
jmp
add
jmp
pop
push
mov
shl
not
add
dec
jmp
push
mov
add
add
jmp
push
jmp
push
jmp
push
mov
push
mov
sub
xor
sub
pop
neg
jmp
mov
dec
add
neg
add
add
mov
jmp
add
jmp
mov
jmp
mov
xor
pop
sub
jmp
xchg
pop
jmp
pushl
push
jmp
sub
mov
mov
jmp
add
pushw
jmp
sub
mov
mov
inc
or
sub
jmp
push
jmp
sub
add
push
jmp
mov
push
mov
add
pop
add
xchg
mov
xor
jmp
mov
push
pop
push
mov
mov
sub
push
mov
add
shl
jmp
add
add
push
mov
add
push
jmp
mov
jmp
shr
jmp
sub
mov
sub
mov
mov
or
jmp
add
push
mov
mov
add
mov
add
xchg
pop
jmp
add
sub
push
mov
xor
shl
inc
push
mov
add
add
sub
mov
add
jmp
pushl
pop
jmp
pop
add
sub
mov
push
pop
add
jmp
xor
xor
jmp
push
pop
jmp
add
pushl
jmp
add
sub
mov
jmp
mov
jmp
shl
shr
push
push
mov
mov
pop
and
and
jmp
mov
sarw
pushf
jmp
sub
jmp
or
add
mov
pop
add
mov
add
movzbl
mov
push
jmp
push
jmp
shl
xor
shl
jmp
push
mov
add
pop
jmp
add
jmp
neg
sub
jmp
add
add
xchg
pop
add
mov
add
pushl
pop
jmp
inc
xor
mov
pop
jmp
mov
jmp
pop
pushl
jmp
push
pop
push
mov
neg
and
jmp
mov
add
push
mov
add
sub
xchg
pop
jmp
add
sub
xchg
mov
mov
mov
inc
add
pushw
mov
push
push
mov
jmp
mov
sub
sub
add
add
add
pop
jmp
mov
push
jmp
sub
jmp
add
mov
push
push
pop
add
add
xchg
mov
jmp
mov
jmp
or
pop
add
jmp
xchg
mov
push
jmp
mov
add
add
jmp
push
mov
add
jmp
mov
add
pop
xchg
jmp
add
push
mov
and
xor
inc
xor
jmp
pop
push
jmp
push
jmp
mov
add
add
xchg
pop
push
mov
push
mov
jmp
popl
jmp
inc
shr
neg
push
mov
jmp
sub
mov
mov
jmp
xchg
push
notl
pop
xor
xor
xor
mov
add
jmp
mov
mov
push
push
push
mov
mov
pop
mov
jmp
mov
sub
pop
mov
mov
add
push
pop
pop
push
mov
add
mov
add
add
push
mov
push
jmp
shr
xor
or
jmp
mov
jmp
sub
pushl
jmp
pop
add
and
shl
sub
jmp
and
or
and
push
mov
jmp
xor
xor
xor
mov
push
jmp
add
jmp
add
add
xchg
mov
push
mov
shl
jmp
or
jmp
push
jmp
pop
sub
add
pop
add
pop
xor
xor
xor
push
mov
jmp
xor
xor
pop
and
mov
add
or
shl
pushl
push
push
mov
mov
push
mov
jmp
mov
add
shr
push
mov
push
push
pop
xor
push
mov
jmp
lods
xor
push
push
mov
mov
mov
add
jmp
add
jmp
xor
jmp
mov
jmp
push
pop
xor
jmp
pop
push
mov
push
mov
shr
neg
jmp
sub
pop
push
mov
sub
mov
sub
mov
push
mov
jmp
pop
push
mov
mov
add
add
sub
pushl
pop
add
push
jmp
popl
pop
push
mov
add
sub
and
push
mov
shl
sub
sub
jmp
push
mov
add
add
xchg
jmp
mov
add
pop
jmp
push
push
pop
sub
add
add
push
mov
push
jmp
mov
jmp
shr
xor
mov
pop
sub
mov
mov
or
mov
add
jmp
xchg
push
jmp
pop
add
push
mov
add
sub
sub
pop
movzbl
pushl
jmp
add
add
jmp
xor
push
mov
mov
pop
pop
sub
sub
add
pop
jmp
add
jmp
mov
add
jmp
xor
xor
xor
mov
jmp
mov
shl
xor
jmp
push
jmp
mov
add
add
xchg
pop
jmp
mov
jmp
sub
jmp
mov
or
pop
jmp
add
jmp
pop
push
jmp
add
pop
xor
xor
jmp
mov
mov
push
mov
push
mov
jmp
and
pop
shl
sub
shl
sub
jmp
pushl
pop
sub
mov
jmp
mov
sub
pop
sub
sub
jmp
mov
push
jmp
add
sub
jmp
mov
push
pop
add
pop
push
jmp
add
sub
jmp
mov
mov
jmp
add
xor
pop
add
sub
or
pop
or
push
jmp
push
pushl
mov
add
sub
mov
mov
jmp
add
sub
pop
sub
jmp
mov
jmp
mov
push
mov
push
pushl
pop
jmp
pop
sub
push
mov
add
pop
pop
jmp
pop
jmp
shr
add
jmp
mov
pop
and
pop
add
sub
push
mov
neg
sub
add
push
notb
mov
add
sub
jmp
add
mov
add
mov
jmp
mov
mov
add
push
mov
or
add
xor
pop
neg
add
or
pop
push
mov
xor
pop
push
jmp
sub
add
mov
add
jmp
xor
mov
pop
add
jmp
xor
pop
popl
mov
add
xor
xor
xor
push
jmp
pop
push
mov
jmp
pop
push
popl
push
mov
jmp
add
sub
jmp
sub
shl
sub
mov
mov
inc
sub
jmp
mov
mov
add
push
mov
shr
shr
jmp
push
mov
add
not
sub
xor
jmp
mov
add
add
jmp
sub
mov
add
add
add
add
sub
sub
pushl
pop
add
push
push
mov
sub
jmp
pop
popl
mov
push
mov
add
add
jmp
push
mov
add
pop
add
sub
pop
add
push
push
push
pop
jmp
mov
add
push
mov
add
add
xchg
pop
popl
pop
mov
jmp
push
mov
sub
pop
add
add
pop
sub
mov
pushl
pop
jmp
add
pop
push
mov
pushl
pop
popl
jmp
add
jmp
pop
jmp
pushl
pushl
pop
push
mov
push
mov
dec
neg
not
add
or
add
sub
add
add
pop
add
push
pushl
mov
add
popl
pop
push
mov
jmp
sub
pop
jmp
mov
jmp
addl
pop
add
jmp
push
push
mov
push
mov
mov
sub
pop
xor
pop
shr
add
sub
jmp
sub
sub
jmp
push
mov
add
add
xchg
jmp
mov
mov
jmp
add
add
jmp
mov
mov
push
push
popl
addl
pop
sub
mov
mov
add
sub
add
jmp
push
push
pop
xchg
not
xchg
dec
jmp
sub
xchg
pop
mov
push
mov
add
sub
jmp
mov
add
add
and
pop
jmp
mov
neg
sub
jmp
mov
add
add
xchg
pop
jmp
add
add
jmp
sub
pop
xor
pushl
jmp
add
jmp
neg
add
sub
jmp
jmp
jmp
pop
push
jmp
mov
push
jmp
push
jmp
not
sub
sub
pop
xor
pop
add
push
mov
add
sub
pop
push
jmp
inc
inc
add
sub
sub
pop
jmp
mov
mov
jmp
sub
pop
not
xor
jmp
push
mov
mov
sub
pop
pop
xor
xor
xor
mov
mov
mov
jmp
push
jmp
push
jmp
mov
push
mov
push
mov
inc
shr
push
mov
inc
jmp
pop
pop
mov
add
add
add
sub
jmp
add
xor
xor
xor
mov
push
mov
mov
push
mov
mov
shl
dec
or
sub
sub
add
pop
add
xchg
pop
jmp
mov
add
pop
add
push
jmp
add
add
pop
sub
add
add
sub
jmp
mov
add
sub
xchg
pop
mov
mov
push
mov
not
shl
push
mov
jmp
pushl
mov
push
mov
jmp
mov
push
jmp
pop
shr
jmp
add
jmp
mov
push
mov
mov
not
xor
dec
sub
jmp
add
jmp
add
pop
add
pushl
pop
push
jmp
add
push
mov
push
jmp
mov
mov
xor
mov
add
add
pop
push
mov
jmp
xor
pop
mov
sub
mov
push
jmp
push
mov
xor
mov
add
sub
pop
mov
push
mov
jmp
push
mov
jmp
mov
sub
jmp
xor
push
push
mov
jmp
pop
push
mov
push
jmp
xor
mov
sub
mov
push
mov
mov
xor
jmp
inc
xor
sub
mov
push
mov
push
push
jmp
add
jmp
push
mov
add
addl
push
mov
sub
add
mov
add
jmp
mov
push
mov
shr
jmp
pop
jmp
addl
jmp
xor
jmp
push
notl
mov
add
jmp
shl
push
mov
add
pop
add
mov
add
add
xchg
pop
popl
pushl
pop
add
sub
mov
jmp
pop
jmp
mov
add
add
add
add
sub
mov
push
jmp
neg
add
inc
sub
xor
mov
pop
add
pop
and
jmp
push
pushl
pop
jmp
xor
xor
xor
mov
cmp
pushf
jmp
xor
dec
sub
shr
jmp
pop
jmp
push
jmp
shr
xor
sub
jmp
neg
neg
and
sub
xor
jmp
xor
shr
xor
add
jmp
jmp
add
sub
pushl
pop
add
xor
xor
jmp
inc
sub
mov
mov
sub
add
add
pop
jmp
push
mov
or
pop
jmp
pop
mov
jmp
add
mov
push
mov
add
jmp
not
xchg
not
xchg
push
mov
sub
dec
push
jmp
add
add
pop
sub
sub
add
sub
sub
add
add
sub
push
mov
mov
jmp
mov
sub
jmp
push
pop
pop
jmp
push
mov
jmp
push
mov
add
add
push
mov
sub
pushl
pop
push
jmp
xor
pop
sub
and
pop
jmp
add
jmp
xor
jmp
pop
jmp
add
xchg
pop
sub
xor
pushl
mov
add
push
jmp
pop
add
inc
push
jmp
pop
push
mov
sub
jmp
add
subl
add
addl
pushl
pop
add
pushl
mov
add
push
mov
add
add
xchg
jmp
mov
mov
jmp
mov
jmp
add
xchg
jmp
sub
pop
mov
add
add
pop
jmp
xor
xor
jmp
push
mov
mov
push
push
pop
add
sub
jmp
sub
add
mov
add
jmp
sub
pop
xor
jmp
pushl
pop
jmp
xor
add
pop
add
mov
add
jmp
and
sub
sub
add
mov
pop
sub
add
add
pop
jmp
mov
add
xchg
pop
jmp
xor
shl
jmp
push
mov
mov
xor
mov
jmp
mov
mov
add
sub
jmp
pop
add
sub
add
jmp
mov
jmp
shr
xor
jmp
mov
sub
and
xor
xor
sub
pop
shl
xor
jmp
neg
push
mov
jmp
add
pop
push
jmp
not
xchg
shr
dec
shr
sub
sub
pop
add
pop
xchg
pop
add
pushf
jmp
sub
mov
add
mov
pop
xor
mov
jmp
push
pop
pop
add
sub
jmp
popl
addl
popl
addl
jmp
sub
pop
pop
pop
push
mov
push
jmp
xchg
pop
mov
mov
sub
jmp
lods
sub
sub
add
add
push
mov
push
jmp
sub
pop
sub
mov
push
mov
push
pushl
pop
add
push
mov
dec
or
shr
sub
and
pop
sub
push
push
pop
shl
jmp
pop
jmp
mov
jmp
movzbl
jmp
add
push
mov
pushl
pop
popl
pop
xor
movzbw
jmp
push
mov
add
add
jmp
push
jmp
sub
jmp
mov
pop
sub
mov
push
mov
mov
pop
add
jmp
mov
add
add
push
pushl
mov
add
popl
pop
or
shl
push
mov
push
mov
mov
jmp
push
mov
mov
sub
pop
xor
add
add
jmp
pop
mov
push
mov
add
add
jmp
add
jmp
push
mov
sub
pop
xorl
mov
add
jmp
push
mov
push
mov
add
xor
jmp
push
notl
mov
add
jmp
pushl
pop
add
mov
push
jmp
add
sub
add
pop
add
pop
jmp
push
mov
add
jmp
addl
pop
jmp
pop
xchg
dec
xchg
sub
mov
push
pop
xor
pushl
mov
add
jmp
push
mov
add
sub
mov
push
mov
jmp
mov
jmp
push
pop
jmp
pushl
jmp
add
pop
add
xchg
mov
jmp
pop
not
xchg
pop
jmp
push
mov
shl
xchg
dec
not
xchg
add
add
pop
jmp
lods
xor
push
mov
mov
shr
inc
jmp
pop
mov
push
mov
addl
mov
add
add
push
jmp
pop
jmp
sub
jmp
push
jmp
mov
imul
movzbw
pushw
mov
movzbw
push
pushf
jmp
mov
push
mov
jmp
pop
jmp
sub
jmp
sub
jmp
pop
xor
sub
jmp
push
pop
push
mov
or
push
notl
pop
xor
sub
jmp
mov
mov
xor
mov
add
jmp
pushl
pushl
pop
push
jmp
add
add
sub
pop
xchg
pop
jmp
shl
sub
sub
pop
mov
add
jmp
sub
sub
add
jmp
add
xor
xor
jmp
or
pop
sub
mov
jmp
sub
mov
addl
jmp
mov
add
jmp
xor
push
mov
notl
jmp
add
imul
push
mov
push
pushf
jmp
pop
add
add
jmp
add
jmp
pop
pop
and
pop
jmp
add
pop
sub
sub
pop
jmp
pop
shr
dec
not
sub
push
mov
dec
and
jmp
xor
sub
pop
jmp
push
push
jmp
mov
xor
jmp
and
not
sub
sub
jmp
inc
sub
add
add
pop
sub
mov
jmp
add
pop
add
sub
pushl
pop
push
push
pop
add
jmp
or
neg
add
sub
add
add
pop
jmp
pop
jmp
add
jmp
add
mov
jmp
push
mov
add
sub
push
pushl
pop
popl
pop
mov
mov
jmp
sub
pop
push
jmp
push
pop
neg
shl
or
xor
push
jmp
add
jmp
sub
xchg
mov
push
popl
addl
jmp
mov
mov
add
add
push
mov
sub
pop
pushl
pop
jmp
push
mov
xchg
jmp
push
push
pop
jmp
xor
xor
xor
mov
sub
pushf
jmp
mov
pop
sub
not
push
mov
inc
sub
sub
pop
and
pop
sub
sub
push
addl
mov
add
push
jmp
mov
add
add
push
mov
shr
add
dec
sub
dec
xor
sub
pop
pop
sub
push
mov
jmp
mov
jmp
not
xor
add
pop
jmp
or
push
mov
add
shl
jmp
add
add
sub
pop
jmp
add
jmp
pop
push
push
mov
push
jmp
sub
mov
push
jmp
addl
popl
push
jmp
sub
jmp
xor
and
jmp
xor
jmp
add
xchg
pop
jmp
add
and
jmp
add
popl
jmp
add
xor
jmp
add
add
jmp
shr
shr
jmp
lods
push
jmp
add
xor
jmp
addl
pop
jmp
mov
or
pushf
jmp
add
sub
sub
jmp
pushl
pushl
pop
sub
jmp
add
mov
push
mov
add
add
xchg
mov
push
sub
mov
jmp
add
jmp
mov
mov
pop
jmp
push
mov
add
push
mov
sub
pop
xchg
pop
jmp
sub
push
mov
xor
jmp
mov
pop
mov
jmp
mov
sub
jmp
push
jmp
xor
and
jmp
add
inc
push
mov
shr
push
mov
shr
jmp
dec
inc
push
jmp
pop
sub
push
pop
mov
add
jmp
push
mov
not
dec
inc
and
not
sub
xor
jmp
mov
pushl
mov
push
mov
add
add
xchg
mov
push
mov
push
pop
push
mov
jmp
sub
jmp
and
push
mov
xor
jmp
mov
mov
mov
add
pop
add
add
jmp
mov
pop
xor
jmp
push
jmp
sub
mov
push
mov
push
mov
jmp
sub
mov
push
mov
addl
jmp
mov
xor
pop
shl
sub
add
pop
add
sub
mov
add
add
xchg
mov
or
je
pushl
pushl
pushl
pushl
mov
push
mov
add
add
xchg
pop
push
mov
jmp
popl
pop
jmp
add
jmp
mov
pop
not
not
jmp
neg
xchg
xchg
sub
jmp
push
mov
add
add
sub
pop
push
mov
sub
add
jmp
and
pushf
jmp
sub
jmp
push
jmp
mov
sub
jmp
push
mov
jmp
mov
mov
add
inc
jmp
pop
add
add
sub
mov
pop
add
pop
push
mov
push
mov
shl
neg
add
or
pop
push
mov
jmp
mov
jmp
pop
push
mov
sub
sub
add
add
add
mov
add
add
xchg
jmp
pop
jmp
add
push
jmp
not
shr
add
xor
xor
pop
xor
xor
push
mov
sub
xor
mov
add
push
pop
pop
add
inc
add
sub
jmp
shl
add
xor
sub
pop
add
sub
pop
push
jmp
mov
mov
pop
push
mov
jmp
add
add
sub
jmp
pushl
mov
push
mov
push
mov
mov
add
pop
add
jmp
popa
ret
lods
add
jmp
push
mov
jmp
pop
push
jmp
mov
add
mov
jmp
push
mov
add
jmp
push
mov
jmp
xor
pop
push
mov
or
pop
sub
add
pop
jmp
xchg
pop
shll
pushf
jmp
shr
sub
xor
jmp
pop
inc
xor
push
mov
shl
sub
jmp
mov
pop
mov
pushl
pop
add
jmp
push
mov
neg
push
push
mov
xor
jmp
push
jmp
add
jmp
push
mov
sub
pop
add
sub
pop
jmp
mov
add
jmp
xor
and
jmp
add
sub
pop
add
jmp
pop
and
pop
shr
push
mov
push
push
jmp
sub
pop
not
push
push
jmp
sub
sub
push
mov
mov
add
pop
pop
jmp
add
sub
jmp
not
add
push
mov
mov
jmp
dec
not
shl
jmp
push
mov
dec
inc
xor
xor
jmp
add
pop
xchg
jmp
sub
mov
add
add
add
add
sub
sub
pop
not
jmp
mov
push
mov
mov
add
sub
jmp
xor
push
push
mov
mov
add
pushl
pop
add
add
sub
sub
add
add
add
push
mov
push
mov
jmp
mov
mov
sub
sub
add
mov
add
push
mov
add
jmp
add
sub
push
mov
neg
dec
neg
shr
add
sub
pop
pop
add
sub
mov
pushl
pushl
pop
push
mov
push
jmp
mov
add
pop
push
mov
shr
push
mov
or
mov
jmp
xor
jmp
xor
sub
jmp
push
pop
jmp
push
mov
add
add
xchg
pop
push
mov
mov
add
xor
shr
xor
add
pop
push
jmp
push
mov
shl
jmp
pop
add
jmp
pop
sub
sub
add
add
pop
mov
add
jmp
add
popl
pop
mov
jmp
add
pop
popl
push
jmp
sub
sub
jmp
push
mov
add
pop
add
jmp
mov
sub
jmp
xchg
pop
jmp
sub
mov
mov
push
jmp
add
sub
jmp
sub
sub
add
pop
push
mov
add
mov
add
jmp
mov
mov
add
jmp
popl
pop
push
popl
jmp
push
mov
mov
pop
push
jmp
add
jmp
add
mov
jmp
xor
xor
xor
mov
not
jmp
push
mov
mov
add
push
push
mov
push
mov
add
sub
jmp
push
mov
jmp
add
push
mov
add
pop
xchg
jmp
pushl
jmp
mov
xchg
not
push
jmp
xor
mov
add
add
pop
jmp
add
push
mov
jmp
add
xchg
pop
add
pop
push
jmp
pop
pop
neg
xchg
push
mov
mov
shr
sub
sub
pop
sub
inc
not
sub
sub
mov
add
xchg
jmp
add
sub
xchg
pop
mov
mov
jmp
xchg
sub
mov
jmp
mov
push
mov
jmp
add
mov
jmp
add
add
pop
jmp
sub
sub
jmp
pop
pop
push
jmp
mov
push
mov
sub
shl
dec
jmp
inc
shr
add
sub
mov
add
jmp
add
jmp
pop
pop
pushl
pop
push
mov
mov
push
mov
sub
add
add
pop
jmp
xor
xor
mov
pushl
pop
jmp
popl
jmp
mov
add
jmp
push
mov
add
add
jmp
pop
sub
add
jmp
add
jmp
push
mov
jmp
sub
jmp
add
jmp
push
pop
push
mov
add
pop
push
mov
jmp
shr
jmp
push
mov
add
add
jmp
pop
add
sub
xor
xor
xor
pop
mov
push
jmp
mov
push
push
mov
dec
neg
jmp
neg
jmp
push
mov
jmp
mov
or
jmp
add
add
push
push
mov
mov
push
jmp
pop
sub
push
mov
jmp
sub
push
mov
shr
push
mov
mov
add
and
jmp
sub
mov
push
jmp
mov
mov
jmp
xor
jmp
pushl
mov
add
push
mov
jmp
sub
jmp
mov
pop
push
jmp
sub
add
jmp
pop
push
mov
add
pop
sub
jmp
mov
jmp
shl
inc
jmp
mov
sub
mov
mov
sub
jmp
pushl
pop
jmp
pop
sub
pushl
pop
push
mov
mov
push
mov
add
jmp
add
sub
jmp
dec
xor
not
jmp
pop
jmp
pop
xor
add
mov
jmp
pop
add
sub
jmp
xor
add
jmp
mov
push
mov
neg
sub
jmp
mov
neg
add
push
mov
jmp
not
shr
add
push
jmp
sub
add
add
pop
xor
xor
jmp
add
jmp
add
add
add
pop
sub
xchg
pop
mov
push
jmp
pop
add
sub
jmp
pop
mov
jmp
add
push
jmp
mov
push
mov
mov
push
mov
push
mov
or
pop
dec
or
add
jmp
mov
sub
mov
push
pop
and
sub
jmp
mov
mov
push
mov
add
jmp
xchg
pop
mov
push
mov
add
add
sub
push
push
pop
xor
push
mov
jmp
push
jmp
shr
jmp
push
jmp
mov
addl
mov
add
sub
mov
jmp
push
pushl
mov
add
push
mov
jmp
jmp
xor
mov
push
mov
jmp
add
push
mov
push
pop
push
push
mov
mov
push
jmp
push
pop
push
mov
jmp
xchg
pop
push
mov
mov
shl
neg
inc
jmp
mov
add
add
sub
jmp
push
sub
mov
addl
pop
add
sub
jmp
pop
jmp
sub
pop
push
jmp
mov
pushl
pop
push
mov
add
add
xchg
pop
not
jmp
mov
pop
shr
and
inc
shr
add
jmp
sub
xor
or
pop
jmp
push
mov
add
sub
push
push
mov
push
mov
mov
jmp
xor
jmp
add
or
add
xor
xor
pushl
pop
jmp
popl
mov
jmp
shl
add
add
jmp
mov
shl
push
jmp
push
pop
xor
jmp
add
xor
xor
xor
pop
or
pop
jmp
sub
mov
mov
sub
push
mov
neg
not
sub
and
pop
sub
sub
pop
or
pushl
pop
jmp
add
add
xor
xor
xor
pop
xchg
pop
mov
mov
jmp
mov
push
mov
sub
jmp
pop
add
add
sub
jmp
xor
or
pop
not
sub
jmp
xor
jmp
add
xor
jmp
mov
jmp
add
sub
xchg
pop
mov
mov
sub
mov
jmp
jmp
add
pop
jmp
push
jmp
pop
jmp
pop
push
jmp
pop
push
jmp
mov
add
or
shr
xor
jmp
mov
jmp
neg
jmp
sub
mov
push
mov
push
mov
jmp
add
add
add
pop
jmp
sub
pop
add
add
push
push
mov
push
pop
jmp
mov
jmp
popl
jmp
push
jmp
push
push
mov
jmp
push
pop
sub
mov
jmp
pop
jmp
mov
add
add
xchg
mov
push
mov
dec
jmp
mov
mov
push
mov
push
xorl
mov
add
jmp
pop
xor
xor
xor
jmp
add
mov
add
pushw
mov
push
jmp
popl
jmp
mov
add
push
mov
add
pop
jmp
pushl
jmp
mov
inc
neg
push
mov
sub
pop
jmp
push
jmp
push
jmp
mov
sub
mov
mov
add
sub
xchg
jmp
push
push
pop
jmp
sub
sub
add
pop
xchg
mov
mov
mov
jmp
mov
jmp
pushl
popf
pop
adc
pushf
jmp
sub
mov
pushl
jmp
push
mov
mov
sub
mov
mov
sub
pushl
mov
add
push
mov
add
add
xchg
mov
add
add
sub
add
pushl
pop
push
mov
sub
mov
addl
mov
add
add
push
mov
add
pop
sub
mov
pushl
pop
popl
jmp
jmp
add
jmp
add
pushl
pop
jmp
push
push
pop
shr
xor
jmp
add
pop
add
sub
pop
add
pushl
mov
add
sub
jmp
add
sub
pop
xor
shr
jmp
push
push
push
jmp
pop
push
mov
add
push
jmp
add
xchg
pop
or
pushl
jmp
push
mov
add
pop
push
mov
jmp
mov
sub
pop
mov
add
push
mov
inc
or
sub
sub
pop
sub
add
mov
jmp
pop
push
mov
sub
sub
jmp
sub
jmp
add
jmp
add
add
sub
jmp
add
jmp
push
mov
jmp
pushl
jmp
xor
add
sub
jmp
jmp
add
pop
push
mov
sub
pop
xor
xor
xor
jmp
mov
jmp
xor
jmp
mov
push
push
push
popl
jmp
pushl
pop
popl
pop
mov
jmp
pop
jmp
shr
inc
jmp
sub
inc
jmp
mov
push
mov
jmp
pushl
pushl
jmp
mov
mov
jmp
add
jmp
popl
push
mov
mov
addl
addl
add
subl
push
mov
jmp
add
add
xor
xor
xor
mov
push
push
push
mov
jmp
push
mov
jmp
pop
jmp
mov
jmp
pushl
jmp
xchg
not
xchg
push
push
pop
pop
jmp
pushl
jmp
sub
pop
jmp
add
add
xchg
pop
jmp
sub
xchg
pop
jmp
pop
push
mov
add
mov
add
xchg
pop
push
mov
add
pop
push
mov
sub
add
push
mov
add
pop
mov
add
push
pushl
pop
popl
mov
movswl
push
mov
push
pushl
jmp
mov
add
push
mov
add
sub
mov
mov
add
jmp
mov
push
jmp
mov
mov
push
mov
mov
pop
pop
shl
and
jmp
mov
mov
pop
mov
jmp
push
jmp
push
pop
jmp
pop
add
jmp
xchg
mov
mov
jmp
mov
push
mov
add
add
xchg
pop
add
pushl
pop
add
push
mov
push
jmp
shl
push
notl
incl
pop
xor
jmp
push
mov
jmp
shr
jmp
pushl
jmp
add
jmp
decw
pushf
jmp
xchg
jmp
mov
push
sub
jmp
pushl
jmp
mov
jmp
mov
jmp
mov
pop
mov
pop
jmp
mov
mov
jmp
mov
jmp
add
jmp
push
push
jmp
mov
add
jmp
jmp
mov
add
pop
add
pop
xchg
mov
push
mov
add
sub
jmp
not
xchg
pop
push
push
jmp
push
mov
mov
jmp
mov
push
mov
push
mov
addl
mov
add
jmp
popl
jmp
mov
mov
jmp
pop
push
push
push
pop
neg
xor
sub
jmp
mov
jmp
mov
add
pushl
pop
push
push
mov
add
sub
xchg
jmp
mov
inc
or
add
inc
inc
add
mov
pop
sub
pop
sub
add
mov
push
mov
add
add
xchg
jmp
popl
jmp
push
pushl
pop
add
push
mov
jmp
mov
add
xor
sub
and
pop
sub
push
mov
and
mov
add
push
jmp
shl
inc
or
sub
add
pop
xor
xor
xor
mov
jmp
add
xchg
jmp
pop
jmp
xor
jmp
add
pushl
jmp
mov
sub
pop
xchg
not
jmp
mov
jmp
sub
pop
jmp
push
push
jmp
sub
jmp
pop
sub
mov
sub
push
popl
jmp
push
mov
jmp
xchg
mov
mov
push
jmp
add
pop
push
jmp
mov
jmp
mov
mov
jmp
mov
add
add
xchg
pop
sub
mov
pushl
jmp
dec
push
mov
or
pop
xor
add
pushl
jmp
xchg
pop
mov
addl
mov
jmp
and
pop
sub
mov
mov
xchg
not
xchg
and
neg
sub
xor
pop
mov
pop
sub
pop
add
push
mov
jmp
add
add
mov
mov
add
add
pop
add
sub
add
pop
push
push
mov
push
mov
mov
xor
pop
xor
mov
jmp
pop
add
pop
jmp
xchg
pop
mov
push
push
mov
add
xchg
not
xchg
sub
jmp
push
mov
add
pop
push
pushl
pop
popl
pop
jmp
mov
neg
push
push
push
mov
push
mov
mov
pop
sub
xor
add
neg
add
mov
jmp
addl
sub
subl
pop
jmp
mov
jmp
and
jmp
mov
add
jmp
add
add
add
jmp
push
mov
mov
add
pop
jmp
pop
push
mov
add
jmp
push
mov
add
add
jmp
sub
mov
jmp
pop
inc
sub
or
pop
neg
add
jmp
pop
add
pop
push
jmp
lods
push
mov
sub
mov
push
push
mov
push
jmp
pop
add
mov
pop
and
jmp
add
mov
pop
pop
xor
mov
push
mov
add
jmp
push
mov
add
sub
xor
xor
jmp
or
jmp
xor
jmp
push
jmp
add
pop
dec
shr
jmp
mov
mov
add
jmp
mov
add
sub
jmp
mov
add
add
push
jmp
pushl
pop
jmp
pushl
jmp
mov
mov
sub
mov
mov
add
push
mov
jmp
push
mov
jmp
pop
jmp
mov
add
add
xchg
mov
inc
jmp
xor
xor
mov
push
push
pop
add
push
mov
add
pushl
pop
add
xor
xor
xor
mov
pushw
jmp
xor
pop
mov
pop
add
jmp
pop
add
jmp
or
sub
sub
jmp
add
jmp
add
pop
push
mov
jmp
xor
xor
mov
push
mov
add
add
xchg
pop
xor
xor
xor
mov
add
push
push
pop
push
mov
xor
xor
add
pop
sub
jmp
mov
sub
mov
mov
add
pop
add
xchg
pop
xor
push
push
mov
push
push
jmp
neg
dec
inc
dec
not
xor
sub
jmp
push
mov
add
add
xchg
pop
push
push
jmp
xchg
pop
jmp
push
jmp
add
add
xchg
pop
jmp
add
jmp
mov
mov
sub
mov
add
neg
neg
sub
and
jmp
pop
add
jmp
mov
sub
jmp
push
push
pop
add
jmp
mov
mov
push
mov
push
mov
xor
pop
xor
jmp
sub
subb
mov
push
mov
add
push
push
push
jmp
mov
push
mov
mov
add
jmp
mov
push
push
pushl
jmp
pop
rolb
pushf
jmp
movsbl
push
mov
jmp
mov
mov
add
neg
neg
xor
add
mov
add
push
jmp
push
mov
sub
push
push
pop
sub
jmp
mov
mov
add
pop
jmp
add
pop
add
mov
add
sub
jmp
mov
pop
mov
push
mov
add
sub
mov
push
jmp
mov
push
sub
jmp
mov
jmp
pop
jmp
mov
jmp
push
pop
push
mov
mov
dec
push
push
pop
jmp
pop
add
push
mov
add
pop
add
jmp
mov
push
push
pop
neg
jmp
add
jmp
push
mov
mov
xor
neg
or
sub
mov
mov
add
pop
add
sub
sub
pop
shl
xor
add
pushl
pushl
jmp
add
add
sub
pop
push
push
mov
jmp
mov
jmp
inc
neg
xor
jmp
mov
add
push
push
jmp
xor
pop
jmp
xchg
pop
push
mov
push
jmp
mov
add
add
xor
xor
jmp
add
sub
sub
mov
mov
sub
pushl
pop
add
jmp
pop
add
push
jmp
add
xchg
pop
push
mov
dec
sub
jmp
sub
xor
pop
jmp
mov
add
pop
jmp
add
shl
jmp
mov
push
jmp
mov
jmp
pop
push
push
jmp
pop
sub
sub
add
mov
jmp
and
pop
add
and
add
jmp
jmp
add
jmp
mov
or
xor
add
pop
sub
sub
pop
mov
add
sub
mov
push
mov
add
sub
xchg
pop
mov
push
mov
push
mov
push
mov
mov
or
add
mov
pop
jmp
mov
jmp
pop
push
mov
xor
sub
pop
sub
pop
add
add
mov
jmp
push
mov
add
add
add
sub
jmp
add
push
xchg
not
xchg
mov
add
push
jmp
add
xor
not
push
jmp
pop
xor
pushl
pop
jmp
xchg
pop
mov
sub
mov
push
push
mov
xor
push
mov
mov
pop
pop
mov
jmp
not
xor
xor
jmp
popl
mov
jmp
pop
add
jmp
and
jmp
xor
jmp
mov
add
push
push
push
pop
xor
mov
pop
sub
push
mov
push
jmp
add
jmp
add
jmp
push
push
mov
subl
addl
add
subl
jmp
pop
jmp
add
pop
add
jmp
add
xchg
pop
xchg
push
mov
add
push
mov
add
jmp
pop
jmp
mov
mov
mov
xor
pop
or
xor
jmp
xchg
pop
mov
push
mov
add
mov
pop
or
jmp
mov
xor
jmp
add
pop
add
add
mov
jmp
mov
add
add
mov
add
xor
mov
add
jmp
mov
mov
pop
pop
sub
pop
neg
sub
mov
mov
add
sub
sub
add
jmp
mov
add
pop
xor
jmp
push
mov
jmp
add
jmp
mov
jmp
pop
add
pop
jmp
pop
movzbl
pushl
push
push
mov
neg
sub
shl
shl
xor
mov
pop
and
shr
push
jmp
shr
sub
xor
mov
pop
sub
pop
add
jmp
pop
add
pushl
jmp
mov
dec
not
not
inc
add
mov
mov
add
inc
add
sub
jmp
add
push
mov
shr
add
xor
sub
pop
push
mov
shl
jmp
pop
add
pop
xchg
pop
add
or
je
pushl
subl
pop
push
mov
push
push
pop
and
inc
and
xor
mov
pop
inc
push
jmp
shr
dec
dec
dec
xor
add
jmp
mov
push
pop
jmp
mov
jmp
inc
or
shr
inc
push
jmp
pop
addl
add
subl
mov
add
mov
add
sub
jmp
pop
add
jmp
mov
shl
add
sub
or
xor
jmp
add
push
mov
mov
pop
pop
pop
pushl
jmp
push
mov
push
mov
sub
jmp
dec
jmp
pop
mov
add
jmp
pop
push
jmp
add
xchg
pop
or
xor
jmp
mov
pop
jmp
sub
pop
sub
push
mov
pushw
jmp
pop
add
pushl
pop
push
mov
push
mov
add
mov
add
sub
xchg
pop
jmp
lods
xor
push
mov
mov
push
mov
add
jmp
push
mov
jmp
pop
push
jmp
push
mov
and
sub
sub
add
jmp
mov
shr
xor
xchg
jmp
add
push
mov
add
pop
xchg
pop
push
mov
jmp
pop
sub
add
pop
sub
xchg
pop
mov
push
pushl
mov
add
popl
sub
mov
xchg
xor
xor
jmp
and
shl
neg
sub
add
add
sub
pop
jmp
push
mov
add
pop
mov
add
add
add
xor
xor
xor
jmp
pushl
jmp
push
mov
push
jmp
mov
add
jmp
push
jmp
pop
add
mov
push
mov
add
jmp
sub
jmp
mov
mov
jmp
neg
or
jmp
mov
mov
pushl
jmp
jmp
pop
shr
or
add
sub
jmp
mov
push
mov
inc
neg
inc
shl
jmp
mov
add
add
xchg
pop
jmp
push
mov
jmp
xor
xor
jmp
xor
sub
add
jmp
add
sub
jmp
add
sub
jmp
neg
push
mov
add
mov
add
jmp
mov
sub
pop
sub
jmp
mov
neg
shl
xor
add
add
pop
push
pushl
pushl
mov
push
mov
add
add
xchg
pop
push
push
push
pop
add
push
mov
sub
pop
xchg
pop
mov
addl
pop
add
push
jmp
xor
jmp
pop
push
mov
xor
add
pop
jmp
xchg
pop
xchg
mov
jmp
push
mov
jmp
not
jmp
sub
mov
push
mov
add
sub
push
jmp
add
push
mov
sub
pop
xchg
pop
jmp
push
mov
push
push
mov
add
jmp
neg
jmp
add
mov
add
mov
push
push
pop
push
jmp
push
mov
mov
sub
jmp
popl
pop
jmp
push
mov
xor
jmp
sub
mov
jmp
mov
push
mov
add
add
jmp
not
push
mov
dec
inc
dec
dec
add
add
jmp
pop
push
mov
push
mov
push
mov
not
neg
add
shl
or
sub
jmp
pop
sub
pop
mov
add
and
pushl
jmp
add
mov
pop
mov
add
pop
sub
pop
pushl
pushl
pop
push
mov
add
add
push
mov
add
sub
xchg
pop
mov
pushl
mov
add
popl
pop
jmp
sub
xchg
pop
mov
push
push
pop
push
mov
shl
add
xor
jmp
shl
jmp
sub
jmp
mov
push
mov
mov
sub
pop
sub
sub
and
xor
xor
jmp
shr
push
mov
sub
and
jmp
push
mov
jmp
dec
not
jmp
push
mov
push
sub
mov
mov
or
jmp
sub
mov
pop
jmp
push
mov
add
sub
xchg
jmp
pop
sub
xor
jmp
add
pop
add
push
mov
mov
sub
pop
jmp
sub
add
pop
jmp
notl
pop
xor
add
jmp
mov
add
push
jmp
pushl
mov
jmp
sub
xor
jmp
xchg
mov
jmp
popl
mov
test
pushf
jmp
add
push
jmp
push
mov
jmp
add
add
push
mov
add
push
mov
inc
add
jmp
mov
add
sub
push
pushl
pop
popl
pop
push
push
popl
push
mov
jmp
push
mov
add
sub
xchg
pop
jmp
add
add
mov
add
add
jmp
pop
jmp
mov
push
jmp
pop
sub
jmp
add
subl
pop
pushl
pop
add
push
jmp
mov
push
jmp
mov
jmp
pop
sub
mov
push
push
jmp
pop
jmp
inc
add
push
mov
jmp
pop
jmp
sub
jmp
push
jmp
pop
add
add
pop
jmp
neg
push
mov
or
pop
shl
xor
mov
jmp
pushl
pop
jmp
mov
pop
jmp
pop
add
subl
sub
jmp
pop
or
xchg
jmp
subl
mov
jmp
sub
pop
jmp
pop
add
jmp
add
jmp
not
xor
mov
jmp
push
pop
add
neg
sub
mov
jmp
mov
and
pop
push
push
push
pop
not
add
push
mov
add
pop
mov
pop
jmp
add
mov
add
add
push
push
push
jmp
add
push
mov
mov
push
jmp
mov
add
pop
xchg
mov
push
mov
add
sub
sub
pop
jmp
xor
jmp
push
jmp
add
push
mov
add
sub
sub
pop
mov
jmp
sub
mov
add
xor
pop
sub
jmp
mov
mov
jmp
push
jmp
xor
pushl
jmp
xchg
pop
add
xor
jmp
push
pop
xor
pop
push
jmp
pop
add
popl
pop
shlb
pushf
jmp
push
pushl
pop
popl
mov
mov
push
subl
pop
push
mov
inc
inc
jmp
mov
addl
mov
add
jmp
mov
and
and
sub
add
mov
add
sub
sub
pop
push
mov
shl
and
or
jmp
sub
push
pushl
pop
popl
mov
mov
push
jmp
add
jmp
mov
shl
jmp
push
jmp
mov
jmp
mov
jmp
inc
or
add
jmp
addl
pop
jmp
shr
and
shl
neg
xor
add
jmp
sub
pop
jmp
xor
pop
btc
pushf
jmp
not
jmp
mov
mov
pop
sub
mov
push
jmp
mov
add
jmp
pop
neg
add
mov
pop
add
sub
sub
pushl
pop
jmp
or
and
shr
push
mov
mov
jmp
pop
add
jmp
pop
mov
mov
mov
push
push
push
pop
shr
push
jmp
xchg
pop
jmp
mov
jmp
pop
push
jmp
add
push
mov
push
mov
jmp
pop
xor
mov
jmp
push
pop
jmp
pop
neg
neg
sub
push
jmp
add
jmp
add
xchg
jmp
push
jmp
xchg
jmp
pop
add
jmp
push
pushl
pop
add
pop
push
xchg
not
xchg
mov
push
jmp
pop
push
mov
jmp
xchg
pop
jmp
push
mov
dec
jmp
add
jmp
mov
push
mov
xor
sub
jmp
sub
jmp
pop
mov
jmp
mov
push
mov
mov
add
or
shl
xor
xor
mov
jmp
mov
or
shr
sub
xor
pop
add
add
sub
pop
push
mov
sub
pop
xor
jmp
or
jmp
mov
mov
push
mov
push
mov
push
mov
add
add
jmp
add
push
mov
jmp
sub
mov
jmp
pop
jmp
mov
jmp
push
pop
sub
or
add
mov
pop
add
jmp
push
push
mov
add
sub
jmp
mov
push
mov
push
pop
add
jmp
lods
jmp
mov
jmp
add
xor
xor
xor
jmp
add
push
jmp
add
pop
jmp
add
add
jmp
mov
add
add
sub
mov
push
pushl
pop
push
mov
add
add
jmp
add
pop
add
pop
push
jmp
sub
mov
sub
mov
addl
pop
push
mov
add
pushl
pop
push
mov
add
add
xchg
pop
push
push
jmp
xchg
pop
mov
addl
pushl
pop
push
sub
mov
addl
pop
add
push
jmp
push
mov
push
jmp
mov
add
sub
sub
jmp
push
jmp
sub
mov
negb
pop
push
mov
add
sub
xchg
pop
mov
mov
push
push
jmp
add
add
add
sub
jmp
push
mov
add
add
xchg
pop
jmp
or
jne
push
mov
sub
jmp
pop
add
jmp
lods
push
mov
mov
push
push
mov
mov
mov
jmp
rolw
pushf
jmp
add
xchg
pop
add
push
jmp
mov
push
mov
xor
shr
jmp
dec
add
jmp
xor
pushl
pop
add
add
add
add
push
mov
mov
sub
sub
push
mov
add
pop
pop
pop
jmp
lods
push
jmp
xor
xor
xor
xor
xor
xor
push
jmp
add
add
jmp
jmp
and
jmp
pop
jmp
dec
add
sub
pop
push
mov
add
pop
add
add
mov
add
xchg
pop
mov
push
jmp
sub
add
pop
sub
pop
xchg
jmp
pop
inc
dec
shr
jmp
mov
jmp
mov
jmp
mov
pushl
mov
jmp
mov
add
add
jmp
mov
sub
jmp
pop
jmp
push
mov
jmp
mov
mov
xor
sub
mov
push
push
jmp
mov
sub
add
add
pop
push
push
mov
add
push
mov
jmp
mov
jmp
pop
jmp
add
pop
xor
xor
xor
not
xchg
inc
jmp
pop
jmp
push
jmp
sub
sub
sub
jmp
xor
pop
sub
jmp
push
jmp
mov
add
add
xchg
mov
add
push
mov
push
mov
xor
add
push
mov
not
add
jmp
sub
jmp
mov
jmp
mov
add
pop
add
push
mov
mov
jmp
pop
push
mov
jmp
mov
sub
mov
push
pop
push
sub
mov
jmp
pop
add
add
jmp
sub
push
mov
xor
jmp
xchg
mov
jmp
pop
pop
push
mov
push
pushl
pop
sub
jmp
add
pop
add
pushl
pop
sub
jmp
mov
add
xor
mov
jmp
es
or
popf
or
adc
pushf
or
addr16
or
fstps
imul
sahf
or
xor
or
lret
sbb
pushf
or
outsb
popf
or
and
popf
or
in
or
push
popf
or
jae
or
xlat
popf
or
lods
popf
or
fs
or
hlt
pushf
or
mov
or
sti
popf
or
add
or
cmp
or
xor
or
jle
or
jg
or
sbb
or
mov
or
push
popf
or
sbbb
cli
leave
popf
or
adc
or
in
or
dec
popf
or
ret
ret
sbbl
repz
or
loopne
or
xchg
or
leave
popf
or
adc
or
icebp
pushf
or
or
or
stos
popf
or
lock
or
loop
or
aas
popf
or
ficomps
or
insb
popf
or
out
popf
or
xchg
popf
or
sbb
or
loop
or
in
or
or
or
repnz
or
add
sahf
or
aad
or
out
pushf
or
xchg
or
ret
popf
or
or
or
cmp
or
out
pushf
or
rcrb
or
loop
or
js
or
rcrl
or
iret
popf
or
lea
or
sbb
or
cmp
or
loop
or
cmp
or
hlt
pushf
or
out
or
cld
popf
or
pop
sahf
or
xor
or
push
or
push
or
cwtl
popf
or
sti
popf
or
pop
popf
or
iret
popf
or
and
popf
or
and
or
repz
or
call
popf
or
enter
or
or
adc
sahf
or
xor
or
cli
popf
or
inc
popf
or
pop
popf
or
fs
or
ds
or
adc
or
add
or
xchg
popf
or
ja
or
aas
popf
or
push
sahf
or
and
or
lret
outsl
xchg
popf
or
jecxz
or
jbe
or
push
popf
or
or
or
clc
pushf
or
mov
popf
or
or
or
xchg
popf
or
imul
lcall
or
sbbb
push
lcall
or
sub
or
ficomps
jmp
or
sbbb
imul
or
push
popf
or
jo
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
sub
mov
push
jmp
add
pop
add
xor
xor
xor
pop
jmp
pop
add
push
pushl
mov
add
popl
pop
sub
mov
push
mov
mov
add
sub
sub
add
sub
pop
jmp
pop
jmp
add
mov
jmp
mov
mov
add
mov
add
jmp
mov
shr
add
sub
jmp
mov
mov
or
neg
add
inc
xor
add
mov
jmp
pop
add
sub
jmp
dec
jmp
pop
popl
mov
imul
push
pushf
jmp
sub
add
add
sub
sub
add
jmp
push
mov
sub
jmp
mov
add
jmp
pop
add
jmp
add
or
inc
add
add
sub
sub
push
mov
dec
add
add
pop
push
mov
sub
pop
mov
add
sub
push
mov
or
not
inc
add
add
pop
push
mov
xor
sub
mov
jmp
sub
add
and
pop
push
negw
mov
add
jmp
xchg
pop
pop
add
jmp
mov
jmp
add
or
push
mov
jmp
lods
xor
push
mov
jmp
or
dec
sub
jmp
shl
add
add
pop
shr
push
jmp
shr
shr
sub
push
mov
or
pop
sub
sub
pop
push
incb
mov
add
jmp
mov
subl
jmp
add
pop
shr
sub
xchg
neg
xchg
push
mov
push
mov
mov
add
jmp
add
jmp
popl
push
push
push
pop
add
or
xor
mov
pop
add
mov
add
pushl
pop
jmp
sub
shr
push
mov
push
mov
jmp
mov
add
push
mov
sub
pop
xchg
pop
mov
push
pop
push
mov
xor
sub
add
jmp
mov
or
jmp
pushl
pop
push
mov
add
add
xchg
mov
xor
sub
mov
push
mov
jmp
mov
jmp
mov
mov
jmp
add
push
mov
mov
pop
pop
sub
pop
pop
jmp
xchg
mov
push
mov
push
mov
add
push
mov
sub
pop
push
pushl
pop
jmp
sub
pop
sub
push
jmp
push
jmp
push
mov
mov
mov
push
mov
add
add
jmp
push
pushl
jmp
push
jmp
pop
jmp
add
sub
jmp
shr
push
xchg
inc
jmp
mov
add
add
jmp
add
add
jmp
pop
jmp
mov
add
sub
xchg
jmp
push
jmp
mov
mov
mov
inc
sub
sub
mov
mov
jmp
pop
shl
xchg
not
xchg
push
mov
add
pop
inc
not
jmp
xor
pop
push
mov
or
pop
push
jmp
mov
jmp
sub
sub
add
jmp
push
mov
add
add
jmp
pop
push
mov
jmp
add
jmp
xor
jmp
add
pop
sub
jmp
xchg
pop
mov
jmp
xchg
jmp
add
sub
mov
add
push
mov
dec
add
not
and
jmp
xor
mov
push
jmp
addl
mov
add
push
jmp
pop
push
jmp
add
xchg
mov
div
pushw
mov
push
pushf
jmp
add
sub
mov
push
jmp
mov
push
mov
jmp
push
mov
mov
mov
add
pop
jmp
mov
mov
pushl
mov
push
push
pop
add
jmp
push
mov
jmp
push
mov
add
pop
push
mov
add
pop
sub
jmp
mov
mov
sub
mov
mov
sub
pop
sub
jmp
mov
jmp
push
mov
or
or
jmp
and
jmp
mov
jmp
add
mov
add
push
mov
pushl
pushl
mov
push
mov
jmp
add
sub
jmp
mov
shr
push
jmp
pop
pop
xchg
mov
mov
mov
add
pop
push
push
pop
pop
not
xchg
pushw
mov
jmp
pop
push
mov
jmp
add
mov
push
mov
jmp
xchg
jmp
xor
add
add
sub
jmp
mov
mov
add
jmp
sub
pushl
pop
add
jmp
pop
push
jmp
mov
neg
xor
add
xor
xor
pop
sub
pop
jmp
pop
sub
mov
mov
jmp
push
jmp
mov
mov
mov
add
sub
pop
mov
mov
add
push
mov
inc
jmp
push
jmp
sub
jmp
push
jmp
sub
jmp
push
mov
jmp
mov
jmp
mov
shr
push
mov
sub
xchg
pop
add
jmp
mov
sub
sub
add
mov
pop
push
sub
pop
shl
push
mov
add
jmp
sub
mov
push
mov
jmp
pop
push
jmp
add
mov
add
jmp
pop
add
pop
xchg
jmp
not
push
jmp
pop
xor
mov
push
mov
mov
jmp
xor
pop
or
pop
push
push
mov
sub
push
jmp
xor
xor
add
xchg
xchg
push
jmp
pop
mov
pushl
pop
jmp
pushl
pushl
pop
push
mov
push
pushl
pop
push
mov
add
push
mov
mov
add
pop
xchg
pop
push
sub
mov
push
mov
push
jmp
add
push
jmp
add
pop
push
push
mov
mov
xor
pop
add
mov
add
add
pop
add
sub
mov
mov
or
push
mov
sub
pop
sub
sub
pop
mov
add
push
mov
add
mov
add
xor
jmp
add
sub
xchg
jmp
mov
xor
jmp
sub
jmp
xchg
jmp
mov
push
push
mov
push
mov
add
push
mov
shr
xor
jmp
pop
push
mov
add
add
sub
pop
jmp
add
add
xchg
mov
sub
pushf
jmp
shl
jmp
add
mov
pop
xor
mov
push
push
pop
push
mov
or
xor
add
add
jmp
push
push
pop
add
add
sub
pushl
mov
add
add
jmp
xor
xor
not
push
mov
mov
mov
jmp
sub
pop
push
mov
or
xor
sub
mov
jmp
mov
add
jmp
push
mov
sub
jmp
add
push
mov
push
mov
inc
neg
xor
xor
and
pop
push
mov
xor
jmp
mov
mov
push
jmp
push
mov
push
push
push
mov
add
mov
pop
mov
jmp
shl
and
push
push
mov
jmp
popl
jmp
xor
pop
sub
pop
add
mov
pop
jmp
lods
push
push
mov
mov
pop
jmp
pop
mov
push
pop
shr
sub
mov
mov
jmp
sub
jmp
mov
shl
neg
add
jmp
pop
sub
jmp
mov
jmp
pop
add
jmp
mov
shr
or
dec
sub
jmp
push
mov
jmp
add
jmp
mov
push
jmp
or
add
sub
mov
pop
sub
jmp
pop
push
jmp
xor
xor
jmp
add
xor
xor
xor
pop
jmp
xor
mov
incl
pushf
jmp
mov
jmp
push
mov
jmp
shl
sub
mov
mov
sub
add
jmp
sub
mov
push
jmp
mov
jmp
add
sub
jmp
add
mov
add
pop
push
jmp
sub
jmp
add
jmp
push
pop
and
and
sub
add
mov
jmp
xor
jmp
pop
mov
push
jmp
pop
popl
mov
xor
jmp
inc
add
sub
pop
add
add
add
pop
push
jmp
xchg
pop
push
mov
mov
xor
neg
shr
jmp
mov
add
jmp
mov
push
jmp
popl
mov
jmp
xchg
pop
push
push
sub
mov
jmp
not
sub
sub
pop
or
sub
jmp
mov
push
mov
mov
shr
not
sub
xor
jmp
xor
pop
push
mov
mov
sub
pop
jmp
mov
add
jmp
mov
add
shr
xchg
not
xchg
jmp
xchg
jmp
mov
push
push
mov
push
jmp
push
push
jmp
add
sub
mov
mov
sub
pop
jmp
push
push
pop
add
mov
pop
push
mov
or
pop
shr
shr
shr
or
add
sub
mov
pop
jmp
push
mov
push
mov
add
pop
push
mov
add
pop
xchg
mov
push
push
push
jmp
mov
jmp
shr
push
decl
pop
shl
push
mov
push
mov
mov
push
pop
add
pop
xor
pushl
pop
push
jmp
sub
pop
xor
xor
xor
pop
jmp
inc
sub
or
pop
jmp
add
jmp
pop
jmp
pop
add
jmp
add
add
sub
mov
add
jmp
sub
jmp
push
jmp
popl
pop
not
jmp
mov
or
push
push
jmp
mov
pushl
mov
jmp
mov
pop
sub
jmp
push
mov
jmp
add
jmp
push
jmp
pop
mov
pop
add
pop
jmp
mov
sub
mov
add
sub
sub
jmp
mov
push
mov
addl
pop
push
mov
push
jmp
xchg
jmp
sub
mov
jmp
or
push
mov
jmp
pop
mov
push
mov
add
add
xor
xor
xor
pop
mov
dec
neg
jmp
pop
xor
sub
xor
sub
sub
mov
mov
add
pop
jmp
popl
jmp
push
mov
add
sub
xchg
pop
jmp
lods
push
mov
push
mov
or
jmp
xor
pop
jmp
push
mov
push
sub
mov
mov
sub
mov
pop
xor
sub
add
pop
add
xchg
mov
sub
mov
push
mov
jmp
mov
jmp
add
add
sub
mov
mov
inc
jmp
mov
push
jmp
push
jmp
mov
push
jmp
push
mov
add
sub
jmp
xor
jmp
push
push
mov
jmp
push
mov
push
push
mov
shr
dec
add
mov
pop
addl
jmp
mov
push
mov
push
mov
jmp
mov
add
sub
xchg
jmp
add
jmp
xchg
pop
jmp
pushl
pop
popl
pop
shr
jmp
add
pop
sub
pop
not
xor
sub
pop
and
pop
add
and
pop
jmp
push
mov
sub
pop
sub
add
push
mov
and
neg
xor
jmp
add
sub
jmp
pop
push
mov
jmp
idiv
movzbw
push
push
push
popl
push
mov
mov
addl
jmp
push
mov
push
mov
sub
pop
jmp
push
jmp
mov
push
mov
push
push
mov
add
mov
add
jmp
add
pop
sub
add
pop
add
xchg
pop
or
pop
jmp
push
push
push
mov
mov
jmp
push
mov
mov
add
sub
sub
add
sub
pop
sub
sub
add
jmp
pop
jmp
push
mov
xor
add
sub
dec
add
sub
pop
pop
jmp
push
notl
pop
add
add
add
pop
pop
push
mov
add
pop
push
pushl
pop
popl
pop
jmp
xor
xor
xor
pop
jmp
mov
jmp
push
jmp
shl
push
mov
xor
pop
mov
pop
sub
mov
mov
sub
pop
add
jmp
mov
push
mov
mov
add
pop
add
xchg
jmp
add
jmp
lods
xor
sub
mov
jmp
add
subl
pop
pop
push
mov
push
mov
add
inc
xchg
not
push
jmp
add
sub
mov
jmp
add
jmp
sub
mov
mov
add
pop
sub
add
jmp
shr
sub
add
jmp
sub
jmp
add
pop
push
push
mov
mov
jmp
mov
push
mov
add
sub
xor
xor
xor
pop
jmp
push
jmp
push
jmp
mov
add
jmp
pop
jmp
mov
push
mov
add
jmp
mov
mov
notl
mov
add
sub
add
pop
push
jmp
pop
jmp
sub
shl
jmp
xor
sub
sub
add
pop
mov
add
add
xchg
pop
jmp
push
mov
push
push
mov
push
push
jmp
push
mov
add
xor
push
jmp
add
mov
push
mov
add
jmp
pop
jmp
mov
and
pop
sub
jmp
shr
push
mov
shr
inc
add
add
shl
add
xor
pop
push
push
pop
push
jmp
add
jmp
push
push
subl
pop
push
jmp
add
jmp
mov
pop
jmp
mov
pop
pop
or
neg
xor
mov
pop
add
pop
push
mov
add
add
sub
add
add
sub
sub
mov
add
jmp
pushl
mov
add
add
jmp
not
shr
jmp
add
or
je
pushl
pushl
pop
jmp
not
jmp
mov
jmp
pop
add
add
sub
jmp
add
push
mov
sub
pop
jmp
pop
and
pop
shr
xor
push
mov
mov
jmp
add
push
mov
mov
jmp
add
push
jmp
mov
push
mov
add
push
mov
add
jmp
pop
jmp
add
add
jmp
push
pop
push
mov
push
pop
add
push
mov
jmp
add
jmp
shr
sub
add
mov
add
mov
push
mov
add
add
jmp
sub
mov
jmp
pop
push
mov
add
pop
xor
xor
xor
pop
popl
pop
add
jmp
push
push
pop
xor
jmp
add
add
push
pushl
jmp
push
mov
push
mov
add
add
add
xchg
mov
pushl
pushl
mov
push
mov
add
add
jmp
pop
jmp
mov
add
add
pop
add
sub
jmp
mov
neg
add
jmp
add
and
mov
add
sub
jmp
pushl
pushl
pop
add
jmp
neg
add
mov
jmp
pushl
pushl
jmp
mov
jmp
mov
jmp
sub
jmp
push
mov
add
jmp
mov
push
mov
or
pop
inc
dec
inc
shl
xor
sub
add
add
pop
jmp
pop
xor
jmp
mov
mov
sub
mov
decl
pop
add
push
push
mov
mov
sub
pop
pop
add
pushl
jmp
mov
add
push
pushl
pop
popl
pop
or
pushf
jmp
sub
mov
add
xor
jmp
add
mov
push
mov
mov
jmp
pop
push
push
mov
addl
pop
add
sub
jmp
xor
xor
pop
add
push
mov
jmp
mov
jmp
push
subl
popl
push
jmp
mov
jmp
add
jmp
add
pop
add
sub
jmp
lods
sub
jmp
sub
jmp
pop
add
jmp
push
mov
add
pop
add
jmp
pop
push
mov
mov
xor
add
jmp
push
pop
push
push
pop
jmp
xor
xor
xor
push
push
mov
jmp
pop
add
pop
sub
sub
add
jmp
pop
neg
add
add
mov
push
jmp
mov
jmp
xor
pop
jmp
inc
sub
or
mov
add
push
mov
push
jmp
xchg
mov
or
je
pushl
pushl
pushl
pop
add
push
push
pushl
jmp
add
pushl
pop
add
add
jmp
push
push
pop
jmp
mov
sub
jmp
mov
mov
shl
sub
push
mov
mov
pop
pop
push
push
mov
jmp
push
mov
jmp
mov
add
jmp
mov
shl
sub
jmp
add
jmp
pushl
mov
jmp
add
pushl
pop
add
xor
xor
jmp
pushl
pushl
jmp
add
pop
add
push
mov
jmp
mov
jmp
popl
push
mov
push
mov
push
mov
jmp
push
mov
add
add
jmp
mov
mov
jmp
pop
popl
pop
jmp
xor
xor
xor
mov
jmp
popw
jmp
popf
ret
jmp
sub
mov
mov
not
push
mov
push
mov
or
pop
jmp
add
sub
pop
add
push
mov
or
neg
jmp
xor
mov
pop
jmp
shr
dec
add
sub
pop
sub
pop
push
pushl
pop
popl
pop
mov
push
pop
or
xchg
not
jmp
neg
xor
sub
pop
xor
jmp
mov
jmp
pop
jmp
mov
mov
or
jmp
sub
mov
pop
sub
pop
add
pop
jmp
xchg
pop
push
push
mov
mov
or
shl
dec
jmp
mov
add
push
mov
inc
neg
jmp
pop
jmp
add
jmp
mov
push
mov
push
mov
add
add
jmp
add
add
jmp
sub
mov
pop
shr
jmp
xor
sub
and
mov
jmp
mov
push
mov
add
shl
dec
sub
add
add
pop
sub
jmp
push
push
pop
add
sub
xchg
mov
jmp
pushl
mov
push
push
pop
push
mov
sub
mov
mov
push
pop
pop
add
mov
push
push
pop
jmp
push
notl
jmp
lods
xor
sub
mov
sub
mov
push
mov
add
sub
xchg
pop
mov
sub
mov
mov
shr
shl
add
add
push
push
mov
mov
pop
mov
mov
push
mov
push
jmp
pop
sub
mov
add
push
mov
jmp
pop
mov
add
push
jmp
sub
add
add
pop
push
jmp
add
jmp
xor
xor
jmp
inc
shl
inc
xor
add
pop
add
push
pushl
pushl
pushl
pop
push
push
pop
push
mov
sub
mov
mov
sub
xchg
pop
push
push
mov
jmp
sub
push
mov
jmp
add
mov
push
mov
add
push
mov
add
jmp
popl
mov
jmp
mov
mov
sub
pop
or
jmp
mov
jmp
add
pop
push
pushl
mov
add
popl
pop
jmp
mov
add
sub
jmp
mov
pop
pop
add
mov
add
jmp
mov
pop
xor
and
pop
sub
xchg
jmp
pop
push
mov
and
dec
and
xor
sub
pop
sub
sub
add
push
push
sub
mov
jmp
shl
inc
inc
add
add
pop
pop
xor
xor
xor
jmp
neg
sub
sub
mov
mov
mov
mov
add
pushl
pop
push
mov
jmp
mov
push
mov
add
add
xchg
pop
xor
add
add
push
mov
xor
sub
pop
mov
jmp
pop
jmp
sub
sub
sub
push
mov
push
mov
add
add
jmp
add
add
push
mov
dec
not
jmp
mov
add
pushl
pop
push
mov
add
jmp
subl
jmp
push
pop
mov
add
jmp
pop
push
mov
add
add
xchg
pop
pushl
pushl
mov
push
mov
add
add
jmp
jmp
add
sub
jmp
push
jmp
neg
shr
xor
add
mov
jmp
xor
xor
mov
xor
or
je
push
mov
add
sub
xchg
pop
push
jmp
push
mov
mov
mov
add
sub
pop
add
add
jmp
add
pop
add
xchg
pop
or
shl
push
jmp
pop
push
mov
add
pop
add
sub
mov
add
push
mov
push
jmp
shr
add
add
add
jmp
pop
mov
pop
sub
jmp
push
jmp
add
jmp
add
pop
sub
jmp
mov
push
mov
push
push
jmp
popl
jmp
mov
pop
jmp
sub
and
mov
add
push
notl
pop
push
notl
pop
inc
add
jmp
push
mov
and
jmp
mov
add
and
jmp
neg
add
neg
push
mov
mov
sub
pop
mov
pop
xchg
not
xor
xor
xor
xor
add
mov
add
add
add
sub
sub
push
mov
jmp
pushl
pop
push
mov
add
add
jmp
neg
xchg
jmp
sub
mov
mov
dec
sub
mov
mov
jmp
pop
mov
push
mov
jmp
push
mov
sub
pop
jmp
popl
jmp
shl
push
push
mov
jmp
inc
pushw
push
mov
sub
pop
jmp
add
pop
push
push
push
mov
mov
jmp
shr
jmp
pop
jmp
add
add
push
mov
sub
pop
mov
push
jmp
mov
add
pop
push
push
push
pop
shr
neg
xchg
jmp
mov
mov
sub
xor
pop
xor
add
add
jmp
mov
push
pop
shl
add
xor
mov
pop
add
push
jmp
add
pop
add
sub
sub
mov
jmp
add
mov
jmp
xor
push
jmp
add
sub
push
mov
inc
jmp
push
mov
xchg
not
xchg
not
not
jmp
mov
xor
jmp
push
mov
jmp
mov
pop
sub
add
jmp
push
pop
and
xor
dec
push
mov
jmp
add
jmp
lods
jmp
xchg
pop
jmp
pop
add
movzbl
pushl
pushl
jmp
xor
xor
jmp
mov
jmp
neg
sub
add
pop
push
mov
add
pop
sub
mov
jmp
pushl
jmp
mov
or
jmp
dec
jmp
pop
sub
pop
pop
and
jmp
sub
add
push
mov
dec
not
push
mov
sub
mov
push
jmp
pop
inc
jmp
push
jmp
push
mov
mov
pop
mov
jmp
add
pop
add
xchg
pop
jmp
push
jmp
pop
sub
mov
jmp
mov
add
add
jmp
add
jmp
add
add
jmp
push
mov
and
sub
add
push
mov
jmp
subl
add
addl
mov
add
pop
push
mov
add
jmp
mov
add
push
jmp
add
add
jmp
pushl
mov
add
add
popl
mov
or
pushf
jmp
pop
add
sub
push
mov
xor
xor
sub
pop
pushl
pop
push
jmp
push
mov
push
mov
add
jmp
addl
push
mov
mov
push
mov
add
pop
push
mov
add
pop
add
push
mov
sub
pop
push
jmp
add
xchg
pop
mov
mov
xor
pushl
jmp
push
mov
jmp
add
xor
movzbl
pushl
jmp
inc
jmp
add
jmp
push
mov
push
mov
sub
mov
push
mov
mov
pop
mov
pop
pop
mov
mov
jmp
pushl
pop
sub
mov
mov
push
mov
jmp
mov
mov
push
mov
dec
add
add
pop
xor
pop
push
mov
jmp
add
push
push
jmp
mov
push
mov
xor
pop
push
xorl
jmp
pop
push
jmp
mov
add
mov
jmp
mov
push
sub
mov
jmp
push
jmp
push
jmp
pushl
pop
popl
jmp
pop
sub
pushl
pop
add
push
pop
mov
add
inc
jmp
mov
mov
jmp
push
push
mov
push
subl
pop
push
push
mov
or
inc
jmp
mov
xor
pushl
pop
push
push
jmp
mov
shr
xor
add
push
mov
add
pop
add
sub
sub
pop
mov
add
push
jmp
mov
sub
sub
add
mov
add
add
jmp
push
pushl
mov
add
popl
pop
imul
jmp
add
sub
mov
pushl
pop
jmp
add
sub
xchg
pop
jmp
sub
jmp
mov
push
mov
mov
jmp
xor
jmp
mov
mov
pop
mov
push
jmp
add
or
jmp
shl
neg
add
jmp
pop
or
dec
xor
xor
pop
add
add
sub
jmp
add
add
xchg
pop
add
xchg
mov
btc
pushf
jmp
push
jmp
push
mov
addl
jmp
push
pop
add
sub
xor
xor
xor
pop
mov
mov
add
mov
jmp
pop
jmp
popl
push
mov
jmp
pop
jmp
sub
mov
push
mov
mov
jmp
push
jmp
push
jmp
inc
push
xor
jmp
xor
sub
add
mov
pop
push
push
pop
pop
xor
jmp
pop
mov
sub
mov
addl
mov
jmp
mov
mov
add
pop
pushl
jmp
push
mov
jmp
mov
jmp
mov
push
mov
jmp
push
mov
jmp
push
mov
xor
shl
jmp
add
push
mov
push
pop
add
add
xchg
pop
sub
mov
add
push
push
mov
add
jmp
mov
jmp
mov
shr
inc
jmp
mov
add
push
mov
jmp
add
add
jmp
add
add
sub
add
pop
push
pushl
jmp
mov
jmp
push
jmp
mov
jmp
mov
pop
and
jmp
xor
jmp
mov
mov
push
mov
mov
pop
pop
pop
sub
sub
jmp
push
mov
add
jmp
mov
xor
pop
mov
pop
push
mov
jmp
push
jmp
rorw
pushf
jmp
neg
neg
jmp
sub
mov
pushl
mov
add
popl
jmp
jmp
jmp
mov
jmp
mov
jmp
sub
mov
mov
jmp
mov
sub
mov
pushl
jmp
pushl
jmp
push
mov
mov
add
pop
jmp
add
jmp
push
mov
neg
xor
add
add
add
pop
mov
pop
dec
jmp
sub
mov
mov
sub
mov
addl
pop
jmp
xor
xor
jmp
pop
dec
dec
sub
not
push
mov
jmp
add
jmp
xor
add
or
pop
jmp
pushl
jmp
push
mov
jmp
add
pop
jmp
pop
add
jmp
add
jmp
push
mov
shr
jmp
pop
xor
jmp
shl
or
xor
jmp
add
push
push
mov
push
mov
dec
sub
shr
or
sub
mov
mov
jmp
push
mov
push
pushl
mov
add
add
jmp
pop
mov
push
mov
add
add
add
push
pushl
pop
popl
mov
jmp
pop
dec
jmp
lods
push
push
mov
mov
jmp
push
mov
add
jmp
mov
jmp
add
jmp
xchg
push
mov
shl
add
sub
pop
add
pop
pop
add
jmp
add
jmp
add
mov
mov
add
inc
push
jmp
push
pushf
jmp
mov
sub
jmp
or
shr
or
push
mov
sub
pop
sub
pop
add
pop
pop
jmp
popl
mov
push
mov
sub
jmp
mov
shr
jmp
pop
mov
pop
add
add
sub
pop
push
pushl
pop
jmp
push
mov
push
jmp
sub
mov
pushl
pop
add
mov
pushl
pop
add
mov
push
mov
add
jmp
mov
add
push
mov
dec
shr
xor
sub
pop
xchg
mov
mov
jmp
mov
push
push
mov
add
sub
xchg
pop
mov
push
mov
subl
subl
add
addl
addl
pop
mov
add
jmp
add
jmp
sub
xor
jmp
push
mov
and
xor
sub
mov
add
jmp
mov
jmp
pushl
pop
add
shr
jmp
mov
add
pop
sub
mov
pushl
jmp
add
pop
jmp
neg
shr
dec
jmp
pop
jmp
mov
add
push
mov
push
mov
mov
mov
add
push
jmp
and
sub
or
and
xor
jmp
mov
pop
sub
push
jmp
addl
jmp
neg
jmp
sub
mov
mov
push
mov
dec
inc
neg
sub
xor
add
xor
jmp
add
sub
xchg
pop
jmp
push
jmp
pop
sub
jmp
mov
mov
add
mov
add
sub
mov
mov
sub
shl
inc
jmp
subl
jmp
add
mov
pop
xor
mov
add
xor
pop
push
mov
mov
jmp
sub
pop
jmp
pop
popl
pop
jmp
pop
push
jmp
shr
jmp
add
pop
jmp
sub
jmp
mov
push
jmp
add
shr
push
mov
add
sub
xchg
jmp
push
jmp
sub
mov
mov
sub
add
add
pop
add
mov
add
jmp
pop
jmp
xchg
jmp
pop
jmp
xor
jmp
sub
pop
sub
jmp
mov
jmp
push
mov
add
pop
sub
sub
pop
mov
add
sub
mov
mov
add
sub
jmp
mov
or
dec
dec
add
inc
sub
xor
pop
or
push
decl
pop
xor
jmp
mov
mov
add
jmp
subl
jmp
not
jmp
add
push
mov
add
jmp
xor
mov
sub
mov
jmp
add
pushl
jmp
popl
pop
mov
mov
xor
xor
mov
pop
jmp
shr
jmp
add
add
jmp
push
push
jmp
mov
pop
pop
jmp
neg
shr
sub
add
mov
add
push
sub
mov
mov
mov
jmp
xor
add
sub
pop
mov
jmp
mov
pushl
jmp
pushl
pushl
pop
add
sub
jmp
pop
jmp
mov
add
add
push
mov
add
sub
sub
pop
pop
push
push
mov
mov
add
sub
dec
push
mov
shr
and
xor
or
pop
not
push
mov
jmp
mov
pop
pop
jmp
push
jmp
xchg
jmp
pop
sub
add
pop
sub
mov
push
mov
mov
jmp
pop
add
xor
xor
xor
pop
sub
jmp
add
add
jmp
mov
jmp
add
add
jmp
xchg
sub
mov
jmp
pop
jmp
shl
add
jmp
push
mov
push
jmp
push
jmp
sub
mov
mov
add
pop
jmp
add
pop
jmp
sub
pop
push
mov
jmp
push
mov
push
mov
shr
add
jmp
pop
jmp
push
mov
add
mov
add
inc
add
add
mov
add
push
mov
jmp
shr
jmp
shr
jmp
pushl
pushl
pop
jmp
push
jmp
lods
jmp
popl
jmp
sub
pop
jmp
shr
sub
add
add
sub
sub
sub
pop
push
pushl
pop
jmp
mov
mov
jmp
push
push
popl
jmp
pop
mov
pop
add
mov
add
xor
xor
xor
mov
jmp
xchg
jmp
sub
add
mov
jmp
sub
push
addl
pop
sub
pop
xor
push
mov
jmp
push
mov
jmp
add
sub
mov
mov
sub
add
add
sub
jmp
xor
jmp
sub
mov
jmp
xor
mov
pop
mov
mov
add
xor
push
mov
sub
pop
sub
push
mov
push
mov
mov
push
mov
mov
jmp
pop
add
pop
sub
xchg
mov
mov
mov
jmp
sub
xchg
pop
mov
push
pop
push
pop
mov
jmp
add
add
push
mov
jmp
pop
add
jmp
mov
push
mov
push
pop
push
push
mov
mov
jmp
mov
push
push
mov
jmp
mov
jmp
neg
or
inc
add
sub
pop
jmp
mov
mov
mov
add
jmp
pop
add
add
sub
pop
add
jmp
sub
or
mov
push
mov
push
mov
sub
shl
dec
xor
add
pop
add
xchg
pop
push
jmp
mov
mov
add
pop
sub
pop
push
mov
jmp
add
jmp
sub
mov
sub
mov
push
pop
add
jmp
not
not
xor
xor
jmp
xor
mov
pop
add
mov
jmp
add
or
or
push
push
jmp
push
mov
or
pop
push
addl
sub
subl
jmp
push
pop
inc
dec
sub
mov
pop
push
mov
mov
jmp
add
add
jmp
push
pop
push
mov
add
push
mov
sub
jmp
add
jmp
mov
sub
add
add
mov
add
pop
xor
xor
xor
mov
mov
movzbw
push
pushf
jmp
xor
pop
add
mov
add
sub
movzbl
lea
push
mov
push
mov
sub
add
add
pop
sub
jmp
pop
add
sub
sub
pop
push
push
push
push
jmp
mov
mov
xor
not
dec
shl
shr
xor
mov
pop
push
mov
jmp
lods
cmpl
je
push
mov
jmp
popl
jmp
mov
add
jmp
pop
mov
push
mov
add
add
push
jmp
mov
push
push
pushl
pop
jmp
mov
push
mov
mov
pop
xor
pushl
pop
add
and
pushl
mov
jmp
shl
jmp
shr
shr
add
mov
pop
add
pop
jmp
mov
jmp
mov
mov
jmp
pop
add
add
xchg
jmp
add
xchg
mov
mov
push
push
mov
push
jmp
not
sub
or
pop
shr
shl
push
jmp
add
add
jmp
xchg
not
jmp
xor
inc
dec
push
mov
add
pop
mov
jmp
mov
not
xor
add
pop
sub
xchg
pop
mov
push
push
pop
sub
mov
mov
add
neg
not
add
and
jmp
add
pop
sub
mov
jmp
pop
sub
mov
mov
add
jmp
pop
jmp
sub
mov
jmp
pop
push
mov
add
add
sub
mov
add
jmp
push
mov
push
pop
sub
mov
mov
jmp
pushl
popf
pop
sbb
pushf
jmp
add
jmp
add
sub
add
add
jmp
sub
pop
xchg
mov
mov
sub
mov
mov
add
jmp
mov
jmp
mov
add
and
pushl
jmp
mov
add
sub
sub
not
push
jmp
popl
jmp
push
jmp
push
mov
add
push
mov
add
add
sub
add
jmp
xchg
pop
jmp
add
add
xchg
pop
xor
pop
jmp
sub
pop
xchg
mov
push
popl
jmp
add
xchg
pop
sub
pushf
jmp
and
jmp
or
pop
xor
neg
and
add
mov
pop
xor
mov
add
add
jmp
push
mov
jmp
pushl
pop
popl
jmp
pushw
mov
jmp
mov
jmp
add
sub
mov
mov
sub
pop
add
push
mov
add
sub
jmp
push
push
mov
mov
pop
mov
pop
pushl
jmp
or
jmp
xor
jmp
push
mov
push
push
pop
jmp
push
pop
pop
push
mov
mov
sub
pop
or
not
jmp
xor
jmp
push
mov
push
jmp
add
neg
add
xor
sub
jmp
mov
add
jmp
shl
xor
sub
pop
xor
push
push
mov
jmp
sub
add
jmp
and
neg
jmp
add
mov
push
mov
push
mov
add
pushl
pop
add
add
jmp
add
add
xchg
jmp
mov
sub
mov
jmp
sub
jmp
mov
push
sub
mov
addl
pop
add
add
xchg
pop
push
mov
add
sub
xchg
pop
mov
pushl
jmp
sub
pop
mov
add
popl
jmp
push
pop
jmp
pop
jmp
push
sub
mov
mov
and
jmp
mov
add
pop
jmp
add
sub
push
mov
sub
add
pop
add
jmp
pop
mov
jmp
xchg
mov
and
pushl
mov
add
push
push
pop
add
push
push
jmp
push
mov
xor
jmp
pop
sub
push
mov
jmp
add
jmp
mov
add
and
jmp
mov
and
jmp
not
jmp
xor
and
jmp
sub
jmp
sub
mov
mov
push
mov
add
dec
not
push
jmp
add
xor
jmp
push
jmp
mov
sub
jmp
sub
sub
add
mov
add
movzwl
jmp
push
mov
add
add
jmp
xor
push
mov
mov
sub
mov
jmp
add
xor
xor
xor
pop
push
push
pop
jmp
mov
push
mov
add
pop
sub
jmp
sub
jmp
mov
mov
add
jmp
mov
add
add
xor
jmp
and
xor
jmp
xor
pop
jmp
movzbw
push
push
pushl
pop
jmp
add
jmp
pop
popl
pop
sub
mov
jmp
sub
jmp
pop
not
not
push
jmp
add
add
sub
mov
push
mov
add
push
mov
mov
jmp
push
mov
add
add
xchg
mov
jmp
mov
mov
add
add
push
push
mov
xor
not
shr
push
jmp
mov
shl
jmp
pushl
mov
add
push
mov
jmp
mov
sub
mov
push
mov
mov
not
jmp
push
mov
add
add
xchg
pop
sub
mov
mov
add
jmp
sub
jmp
xchg
pop
jmp
push
mov
sub
pop
xchg
pop
mov
notl
jmp
pop
push
mov
jmp
add
jmp
add
pushl
pop
jmp
xor
sub
pop
add
add
pop
push
mov
jmp
add
and
pushl
pop
add
xor
jmp
pop
xor
jmp
push
mov
add
mov
add
push
mov
sub
mov
mov
mov
jmp
dec
dec
sub
and
mov
jmp
mov
push
mov
push
mov
mov
pop
jmp
mov
mov
add
sub
jmp
shl
sub
jmp
push
mov
mov
mov
mov
add
pushl
pop
push
push
pop
jmp
shr
sub
push
mov
jmp
add
jmp
push
mov
push
jmp
push
mov
or
xor
sub
pop
jmp
mov
jmp
mov
push
jmp
pushl
pushl
pop
jmp
xor
pop
jmp
add
mov
jmp
mov
jmp
mov
mov
shr
push
mov
jmp
add
xchg
pop
and
jmp
add
push
push
pop
dec
xor
inc
xor
add
pop
push
pushl
mov
add
popl
jmp
mov
add
jmp
not
xchg
not
sub
mov
pop
push
jmp
add
push
mov
sub
mov
mov
jmp
mov
jmp
shl
jmp
sub
or
xor
add
jmp
mov
add
add
add
sub
pop
push
pushl
jmp
sub
xchg
jmp
pop
sub
sub
pop
pushl
pop
add
push
mov
xor
push
mov
shr
jmp
xor
inc
jmp
add
add
push
mov
jmp
pop
add
mov
push
sub
mov
addl
pop
jmp
and
xor
sub
jmp
pop
xchg
pop
mov
jmp
xchg
jmp
pop
popl
jmp
push
mov
jmp
add
sub
mov
xor
xor
xor
not
xor
xor
xor
jmp
push
jmp
add
pop
jmp
mov
mov
jmp
add
jmp
pop
push
jmp
xor
xor
mov
pop
sub
jmp
push
jmp
pop
add
push
mov
pushl
pop
popl
mov
mov
popl
jmp
mov
push
jmp
subw
sub
push
mov
add
pop
addw
mov
jmp
pop
push
mov
jmp
or
pop
jmp
pushl
pop
jmp
pop
jmp
pop
pop
pop
mov
add
mov
mov
push
mov
mov
jmp
add
pop
add
sub
mov
add
add
pop
sub
mov
push
mov
push
mov
sub
not
or
jmp
mov
add
pushw
mov
jmp
mov
push
jmp
mov
push
sub
jmp
mov
push
pop
add
dec
shl
push
push
mov
push
mov
jmp
push
jmp
mov
add
pop
jmp
sub
jmp
mov
shr
shl
sub
mov
pop
add
jmp
and
pop
push
mov
jmp
pop
add
pop
add
jmp
sub
xor
xor
pop
jmp
mov
jmp
shr
or
xor
add
pop
push
mov
jmp
mov
push
push
push
jmp
pushl
pushl
pop
push
mov
add
sub
xchg
pop
jmp
jmp
mov
pop
jmp
add
add
shr
xor
push
mov
jmp
add
and
pop
neg
push
mov
jmp
add
push
jmp
add
xchg
mov
popl
mov
jmp
sub
jmp
mov
push
mov
sub
add
pop
xor
xor
pop
add
jmp
pop
not
push
mov
dec
push
mov
sub
xchg
pop
push
mov
xor
sub
mov
add
or
pop
and
dec
dec
push
mov
jmp
xor
pop
xor
jmp
sub
sub
pop
sub
jmp
or
xor
add
mov
mov
add
shl
dec
push
mov
add
sub
xchg
mov
mov
jmp
pop
add
jmp
xchg
inc
xchg
pop
xchg
sub
add
push
mov
sub
dec
sub
push
incl
pop
sub
jmp
and
shl
add
jmp
add
pop
jmp
add
xor
xor
xor
mov
xor
jmp
pop
xor
jmp
pushl
jmp
add
jmp
push
mov
mov
mov
pop
mov
pop
neg
jmp
push
jmp
mov
push
jmp
sub
jmp
dec
jmp
xor
mov
add
sub
jmp
add
add
jmp
mov
add
or
pop
shl
push
mov
add
pop
sub
mov
jmp
mov
add
jmp
push
mov
add
jmp
mov
jmp
push
jmp
add
jmp
popl
pop
add
pushf
jmp
sub
jmp
add
sub
mov
add
push
pushl
pop
popl
jmp
mov
add
pop
subl
add
addl
push
push
mov
mov
pop
subl
sub
push
mov
add
mov
add
jmp
inc
or
add
add
pop
jmp
mov
add
sub
xchg
pop
mov
mov
dec
or
xor
add
add
mov
add
xor
xor
jmp
add
jmp
pop
jmp
mov
add
jmp
neg
xor
mov
pop
xor
inc
inc
push
mov
shr
sub
xor
pop
shr
jmp
push
mov
jmp
sub
sub
pop
neg
jmp
add
pop
jmp
mov
push
push
mov
xor
jmp
pop
jmp
add
add
shr
not
jmp
pushl
jmp
add
add
jmp
sub
mov
push
mov
mov
mov
mov
add
not
xor
add
pop
jmp
mov
or
not
add
sub
sub
sub
add
pushl
pop
add
sub
mov
mov
jmp
jmp
push
push
pop
sub
jmp
xchg
jmp
push
push
push
pop
push
notl
mov
add
sub
push
push
mov
add
add
dec
not
sub
mov
pop
xor
shr
push
mov
dec
shr
and
add
or
add
add
pop
jmp
pop
xchg
pop
push
mov
xor
pop
shr
not
jmp
pop
sub
sub
pop
not
neg
sub
and
mov
add
xor
jmp
dec
add
mov
pop
push
pop
jmp
sub
add
jmp
add
shr
and
sub
push
mov
xor
pop
sub
jmp
xchg
jmp
xchg
xchg
jmp
push
mov
push
mov
sub
mov
push
pop
jmp
pushw
pushw
mov
addw
popw
sub
mov
mov
push
jmp
mov
push
mov
add
add
xchg
pop
add
sub
jmp
pushl
mov
jmp
xor
shl
push
mov
add
add
pop
sub
sub
jmp
mov
jmp
neg
dec
add
jmp
decw
pushf
jmp
shl
shl
sub
jmp
add
add
dec
inc
push
mov
mov
sub
pop
xor
add
jmp
xor
xor
xor
mov
incw
pushf
jmp
mov
add
popl
mov
jmp
inc
shr
not
xor
add
jmp
sub
push
push
mov
neg
dec
xor
jmp
and
add
add
sub
jmp
mov
jmp
neg
add
push
mov
mov
dec
jmp
add
xchg
pop
jmp
add
xchg
pop
add
pop
push
mov
xor
jmp
push
jmp
subw
subw
add
addw
push
mov
add
jmp
push
jmp
xchg
mov
mov
jmp
pop
jmp
push
push
jmp
shr
inc
push
mov
jmp
mov
mov
push
jmp
sub
jmp
pushl
popf
pop
adc
pushf
jmp
push
mov
addl
mov
add
push
push
push
pop
add
sub
mov
mov
xor
pop
jmp
sub
push
mov
mov
not
or
shr
jmp
mov
add
xchg
mov
push
push
mov
mov
push
push
mov
mov
add
pop
sub
pop
jmp
btr
pushf
jmp
pop
jmp
add
mov
push
jmp
jmp
add
add
sub
pop
add
sub
pop
push
mov
jmp
add
push
mov
jmp
pop
add
push
push
mov
sub
mov
pop
sub
pop
xchg
pop
mov
mov
jmp
mov
xor
add
mov
jmp
or
shr
push
mov
or
pop
jmp
mov
sub
sub
mov
mov
push
mov
jmp
sub
jmp
sub
pop
jmp
add
push
jmp
mov
jmp
xor
jmp
pop
add
xor
xor
xor
pop
xor
xor
xor
mov
jmp
bt
pushf
jmp
mov
push
mov
mov
push
jmp
xor
sub
jmp
pop
push
pushl
jmp
pop
push
jmp
addl
jmp
add
mov
add
push
mov
shl
add
add
pop
xchg
mov
rorl
pushf
jmp
sub
or
jmp
add
xchg
pop
idiv
push
jmp
pop
jmp
push
mov
mov
push
push
pop
pop
inc
xchg
push
jmp
sub
pushl
pop
add
push
mov
jmp
mov
push
mov
push
mov
addl
pop
push
push
mov
jmp
mov
push
mov
mov
push
mov
add
sub
xchg
jmp
sub
xchg
jmp
xor
mov
add
add
sub
push
mov
jmp
pop
push
mov
jmp
pop
add
xor
xor
xor
pop
push
push
pop
sub
mov
mov
sub
jmp
mov
jmp
push
mov
sub
push
jmp
mov
add
push
mov
xor
jmp
pushl
pop
add
popl
mov
jmp
pop
jmp
push
mov
add
add
sub
pop
push
push
push
pop
sub
mov
pop
add
jmp
pushl
jmp
sub
pop
jmp
addl
pop
push
mov
mov
add
jmp
xor
mov
add
jmp
pop
sub
pop
sub
pop
add
xor
pop
xchg
jmp
xor
xchg
push
mov
jmp
xor
pop
add
add
sub
pop
push
mov
add
pop
xor
xor
xor
pop
jmp
mov
add
pop
jmp
add
jmp
add
push
jmp
not
sub
xchg
inc
xchg
shr
xor
sub
pop
mov
add
pushl
pushl
pop
push
push
mov
add
add
push
jmp
add
jmp
mov
mov
pop
neg
mov
mov
push
mov
add
add
xchg
pop
shr
push
mov
inc
jmp
sub
jmp
xchg
neg
xchg
shl
sub
mov
mov
xor
pop
sub
mov
jmp
xor
sub
pop
mov
pop
jmp
pop
sub
mov
jmp
pop
add
add
pop
add
push
pushl
pop
jmp
mov
jmp
xor
jmp
xorl
pop
xor
pop
push
jmp
push
mov
add
add
xchg
jmp
pop
push
pushl
jmp
mov
or
pop
push
mov
add
and
shl
xor
jmp
add
add
sub
jmp
mov
push
jmp
mov
jmp
xchg
mov
jmp
sub
push
jmp
xor
jmp
add
jmp
xor
xor
jmp
add
jmp
add
pop
add
jmp
lods
add
push
push
mov
push
mov
or
pop
jmp
pop
xor
mov
add
or
jmp
jmp
sub
mov
push
mov
push
mov
add
pop
add
jmp
xor
xor
xor
mov
mov
jmp
push
jmp
push
mov
add
sub
xchg
jmp
sub
dec
not
push
jmp
pop
sub
xchg
pop
jmp
pop
push
jmp
mov
push
decl
jmp
mov
push
pop
sub
mov
push
mov
push
xorl
pop
jmp
mov
push
push
jmp
mov
and
jmp
xor
shl
not
xor
add
pop
add
jmp
mov
sub
mov
jmp
add
xchg
pop
mov
jmp
mov
add
add
pop
pop
mov
add
pushl
pop
push
mov
add
push
mov
add
pop
xchg
mov
jmp
mov
pop
jmp
pop
jmp
shl
or
jmp
pop
jmp
popl
pop
movzwl
push
mov
jmp
push
mov
add
jmp
and
pushf
jmp
xor
sub
pop
push
mov
mov
pop
mov
jmp
pop
jmp
sub
mov
mov
dec
push
jmp
sub
sub
jmp
mov
add
and
jmp
dec
sub
and
sub
xor
add
sub
sub
mov
add
push
pushl
mov
add
popl
pop
mov
push
mov
jmp
mov
jmp
xchg
jmp
mov
sub
jmp
and
xor
or
pop
shr
xchg
not
xchg
jmp
mov
push
mov
neg
and
jmp
add
jmp
add
push
push
push
mov
not
sub
dec
push
mov
dec
jmp
pop
push
mov
add
add
jmp
sub
xor
xor
jmp
xchg
jmp
xchg
not
inc
xchg
and
sub
mov
sub
mov
jmp
add
sub
xchg
pop
jmp
push
jmp
pushl
pop
popl
mov
btc
pushf
jmp
sub
pop
jmp
mov
mov
add
jmp
pop
add
pop
push
jmp
pop
sub
add
add
jmp
mov
add
jmp
add
push
jmp
xor
pop
jmp
mov
add
pop
push
jmp
mov
add
push
mov
jmp
mov
xor
pop
add
add
jmp
xor
jmp
push
push
jmp
sub
jmp
sub
sub
jmp
sub
add
jmp
sub
xchg
jmp
mov
mov
jmp
mov
mov
push
mov
jmp
mov
add
sub
mov
mov
jmp
add
mov
push
jmp
push
mov
add
jmp
add
xchg
pop
jmp
add
sub
add
push
mov
inc
or
not
dec
jmp
pop
mov
jmp
mov
sub
jmp
xchg
mov
imul
push
pushf
jmp
mov
addl
pop
add
jmp
subl
pop
add
pop
jmp
xchg
add
push
mov
xor
mov
add
push
mov
push
mov
sub
push
pop
pop
sub
mov
mov
xor
jmp
pop
shr
shl
jmp
mov
add
push
push
mov
push
mov
jmp
sub
jmp
xor
jmp
push
push
pop
push
mov
and
add
neg
push
mov
sub
jmp
xor
pop
sub
sub
pop
xor
mov
jmp
mov
jmp
add
jmp
xchg
xchg
not
xor
xor
xor
push
mov
pushl
mov
add
popl
jmp
pop
add
jmp
add
pop
pop
push
jmp
add
push
mov
sub
jmp
sub
mov
add
add
add
mov
add
push
pushl
pop
popl
pop
jmp
mov
pop
push
push
mov
mov
pop
mov
pop
mov
jmp
mov
xor
pop
pop
xor
pop
push
mov
jmp
push
push
mov
add
jmp
xor
xor
xor
pop
jmp
jmp
xor
xor
jmp
and
add
jmp
pushl
jmp
sub
sub
push
mov
jmp
inc
sub
jmp
add
inc
jmp
add
pop
push
pushl
mov
jmp
xor
jmp
sub
jmp
mov
mov
jmp
pop
pushl
pop
push
mov
add
add
xchg
pop
mov
jmp
mov
add
add
sub
push
mov
sub
jmp
sub
pop
jmp
sub
mov
push
pop
push
jmp
pop
popl
mov
jmp
xchg
pop
xchg
jmp
pop
jmp
shl
or
sub
mov
pop
sub
jmp
push
mov
add
pop
jmp
dec
jmp
mov
mov
xor
mov
add
mov
jmp
mov
jmp
mov
jmp
decl
pop
push
notl
jmp
sub
shr
dec
not
xor
jmp
mov
push
push
jmp
and
push
jmp
push
mov
jmp
dec
push
mov
jmp
mov
add
inc
jmp
mov
jmp
sub
mov
mov
jmp
popl
pop
popl
pop
jmp
push
mov
mov
xor
pop
sub
add
sub
jmp
mov
push
mov
push
pop
push
sub
jmp
sub
jmp
pop
add
push
push
push
pop
xor
xor
sub
mov
mov
add
shl
jmp
push
mov
pushl
pushl
mov
add
push
mov
push
mov
inc
push
mov
and
jmp
pop
popl
mov
jmp
add
pushl
pop
push
push
pop
add
jmp
lods
xor
jmp
xor
push
mov
jmp
mov
push
mov
shl
jmp
xchg
mov
push
push
push
jmp
push
mov
sub
pop
xchg
pop
mov
jmp
add
mov
add
add
sub
sub
push
mov
shr
shr
shr
or
or
jmp
push
push
mov
mov
pop
dec
neg
not
xor
sub
push
sub
jmp
add
sub
jmp
push
jmp
inc
dec
xor
push
mov
mov
pop
mov
jmp
pop
pushl
pop
add
push
jmp
pushl
pushl
jmp
xor
mov
jmp
add
push
pushl
pop
popl
mov
push
mov
add
push
mov
add
pop
xor
xor
xor
jmp
mov
jmp
add
pop
push
mov
push
mov
mov
sub
inc
push
push
mov
jmp
mov
push
jmp
pop
jmp
mov
not
not
add
neg
add
xor
mov
push
mov
jmp
add
pop
pushl
pop
add
add
add
jmp
pop
jmp
add
and
pop
or
je
pushl
jmp
mov
push
mov
add
add
xchg
pop
push
mov
jmp
push
mov
jmp
mov
or
dec
xor
xor
pop
push
mov
push
xorl
jmp
push
pop
shl
sub
mov
pop
sub
pop
dec
xor
sub
mov
mov
xor
mov
add
push
push
push
jmp
mov
mov
jmp
pop
roll
pushf
jmp
xchg
mov
jmp
or
dec
shl
jmp
or
push
mov
not
sub
shl
dec
sub
sub
or
pop
xor
jmp
push
pushl
jmp
mov
add
shr
jmp
add
push
mov
sub
dec
inc
add
add
pop
add
jmp
sub
mov
mov
xor
mov
add
push
jmp
mov
jmp
mov
add
push
mov
mov
shl
add
push
push
jmp
push
mov
add
add
xchg
pop
push
push
jmp
dec
shl
neg
jmp
sub
xor
pop
sub
pop
inc
push
mov
xchg
jmp
push
mov
push
mov
jmp
add
jmp
dec
jmp
push
mov
push
jmp
pop
mov
push
mov
add
add
xchg
mov
add
jmp
pop
jmp
mov
push
jmp
xchg
not
jmp
pop
shl
push
jmp
add
pop
jmp
sub
pop
jmp
mov
jmp
dec
sub
jmp
sub
xchg
jmp
shr
or
add
jmp
xchg
mov
xor
jmp
add
jmp
add
pop
inc
shr
sub
add
pop
sub
pop
jmp
mov
jmp
push
pop
add
sub
xchg
pop
mov
mov
push
pop
add
pop
and
pushl
mov
add
push
mov
add
jmp
mov
add
jmp
mov
add
inc
sub
push
mov
jmp
push
pop
xor
mov
pop
push
mov
push
push
pop
add
jmp
push
push
push
mov
jmp
pop
jmp
shr
or
xor
sub
add
add
jmp
xchg
pop
push
notl
pop
xchg
push
jmp
add
pop
add
xchg
pop
sub
add
add
mov
add
xchg
mov
push
mov
push
mov
jmp
pop
mov
jmp
pop
add
shr
xor
mov
pop
push
mov
xor
pop
push
mov
mov
shr
sub
push
mov
not
sub
sub
pop
add
pop
add
push
mov
jmp
add
push
push
jmp
incb
pushf
jmp
or
jmp
inc
dec
shr
jmp
add
sub
sub
pop
inc
add
xor
mov
add
add
add
jmp
mov
add
add
xchg
pop
jmp
inc
sub
jmp
add
sub
jmp
sub
jmp
mov
sub
mov
jmp
push
mov
add
push
jmp
sub
sub
add
jmp
mov
mov
jmp
mov
push
jmp
mov
add
jmp
add
push
jmp
pushl
popf
pop
adc
pushf
jmp
add
sub
sub
sub
add
push
mov
xchg
jmp
jmp
mov
push
mov
sub
jmp
mov
pop
jmp
push
mov
mov
pop
push
jmp
push
mov
jmp
pop
push
push
mov
inc
jmp
mov
jmp
sub
mov
mov
sub
add
push
mov
not
inc
push
mov
add
pop
jmp
push
pushl
jmp
pop
jmp
add
push
pushl
pop
popl
pop
add
push
mov
jmp
mov
mov
jmp
pop
push
mov
jmp
add
xchg
pop
jmp
mov
push
mov
push
jmp
pop
neg
jmp
pop
popl
jmp
pop
jmp
sub
push
popl
jmp
push
mov
add
pop
jmp
dec
jmp
and
add
sub
pop
pushl
mov
add
jmp
pushl
pushl
pop
jmp
add
sub
pushl
mov
add
jmp
push
mov
sub
mov
add
jmp
add
xor
xor
xor
pop
popl
mov
jmp
xchg
pop
pop
mov
jmp
pop
push
mov
shl
shr
sub
add
add
pop
add
push
jmp
inc
sub
inc
add
jmp
xor
mov
sub
mov
push
pop
push
push
mov
mov
pop
add
add
add
sub
sub
mov
jmp
add
pop
add
xchg
pop
push
mov
mov
jmp
pop
add
addl
pushl
pop
push
mov
add
sub
xchg
jmp
pop
jmp
not
jmp
mov
xor
mov
pop
shr
not
jmp
mov
jmp
mov
push
push
push
popl
jmp
xchg
not
xchg
sub
push
mov
sub
shl
sub
or
pop
jmp
and
jmp
pop
sub
add
add
sub
push
mov
sub
add
add
jmp
mov
push
jmp
push
mov
add
add
xor
xor
jmp
inc
xor
jmp
sub
shl
and
jmp
mov
mov
add
sub
xchg
pop
mov
jmp
push
mov
or
jmp
pop
mov
mov
neg
jmp
push
mov
jmp
mov
shr
sub
sub
mov
add
pop
neg
dec
dec
not
add
add
mov
add
push
push
mov
mov
pop
sub
add
jmp
mov
add
sub
add
push
jmp
mov
add
pop
push
mov
push
mov
mov
pop
sub
jmp
sub
and
jmp
add
pop
xchg
pop
xchg
jmp
pop
add
pop
add
pop
jmp
sub
pushl
pop
jmp
xor
xor
not
jmp
add
mov
add
mov
add
pop
xor
push
push
mov
mov
add
pop
jmp
add
sub
pop
xchg
mov
rolb
pushf
jmp
xor
pushl
pop
jmp
add
mov
push
mov
jmp
and
xor
shr
push
mov
mov
add
mov
add
push
mov
xor
pop
sub
and
mov
add
shr
jmp
add
sub
pop
not
or
shr
add
push
mov
mov
pop
pop
xor
mov
add
shr
pushw
sub
mov
add
sub
sub
add
add
pushl
pop
add
push
sub
mov
mov
and
jmp
inc
jmp
pop
push
mov
jmp
add
jmp
push
jmp
mov
push
jmp
mov
inc
and
jmp
push
jmp
pop
add
jmp
xor
pop
push
mov
sub
pop
jmp
pop
add
mov
add
sub
sub
jmp
pop
add
mov
jmp
push
jmp
jmp
cmp
je
pushl
jmp
pop
sub
sub
add
add
pop
push
push
mov
jmp
xor
jmp
sub
jmp
and
or
jmp
add
add
pop
jmp
push
mov
add
jmp
mov
add
pop
movzbl
mov
push
mov
sub
mov
addl
pop
push
mov
not
add
jmp
pushl
jmp
pop
add
mov
jmp
popl
jmp
mov
jmp
push
mov
mov
pop
push
mov
push
mov
shr
inc
shl
add
xor
add
jmp
push
pop
jmp
addl
pop
add
push
mov
sub
add
push
mov
shl
jmp
sub
add
inc
jmp
xchg
pop
jmp
push
mov
mov
jmp
mov
push
mov
sub
mov
push
mov
sub
sub
push
push
mov
inc
sub
jmp
mov
addl
add
subl
pushl
pop
jmp
pop
push
subl
pushl
pop
add
push
push
jmp
push
jmp
mov
jmp
mov
jmp
shr
and
sub
or
sub
push
mov
jmp
push
jmp
sub
jmp
mov
xor
pop
shl
push
push
mov
mov
pop
and
neg
xor
or
xor
add
pop
dec
jmp
mov
add
xchg
not
jmp
popl
mov
mov
popl
jmp
neg
xchg
not
xchg
shr
add
xor
xor
pop
and
jmp
mov
add
push
mov
and
pop
push
mov
jmp
sub
jmp
xchg
pop
jmp
mov
add
add
xchg
pop
pushl
pushl
pushl
mov
add
add
add
push
jmp
pop
add
sub
mov
push
mov
dec
shl
jmp
popl
jmp
xor
push
jmp
add
jmp
not
jmp
pop
xchg
pop
push
mov
shl
sub
shl
jmp
pushl
pop
push
mov
sub
mov
addl
pop
push
mov
mov
jmp
pop
jmp
sub
add
add
pop
add
add
sub
sub
pop
xor
xor
xor
pop
mul
push
mov
add
sub
xchg
jmp
pop
jmp
mov
pop
add
sub
sub
pop
pushl
pop
sub
mov
mov
add
add
xor
xor
xor
pop
push
jmp
mov
add
jmp
shr
jmp
sub
mov
mov
jmp
sub
shr
jmp
shr
shr
shr
add
sub
mov
add
movzbl
jmp
mov
add
xor
pop
mov
mov
push
jmp
add
sub
sub
jmp
pop
sub
mov
jmp
mov
mov
add
jmp
push
mov
mov
pop
pop
jmp
mov
sub
jmp
push
jmp
push
jmp
mov
xor
jmp
mov
add
sub
jmp
pop
xor
xor
xor
mov
shll
pushf
jmp
add
jmp
xor
push
mov
inc
jmp
mov
jmp
add
sub
jmp
add
push
push
mov
mov
jmp
pop
jmp
or
shl
jmp
xor
xor
xor
mov
mov
pushl
pop
popl
jmp
add
jmp
xor
jmp
sub
jmp
xchg
pop
mov
jmp
push
jmp
xchg
pop
mov
mov
add
jmp
push
mov
mov
add
push
mov
add
pushl
pop
jmp
push
mov
jmp
mov
add
push
mov
push
push
jmp
inc
jmp
add
pop
jmp
sub
jmp
mov
jmp
mov
push
mov
jmp
sub
mov
mov
jmp
pushl
mov
push
mov
jmp
pop
push
mov
mov
jmp
jmp
xor
push
mov
jmp
mov
add
jmp
shl
add
add
sub
jmp
sub
jmp
pop
mov
mov
not
xor
xor
mov
pop
jmp
xchg
inc
xchg
xor
jmp
mov
shl
xor
not
jmp
xchg
pop
add
shr
push
mov
jmp
mov
push
push
mov
mov
jmp
mov
add
and
jmp
add
jmp
mov
sub
mov
add
sub
pushl
mov
add
push
mov
push
mov
jmp
mov
jmp
add
add
jmp
add
add
mov
add
add
sub
sub
mov
add
jmp
add
xchg
pop
pushl
pushl
jmp
sub
jmp
sub
push
jmp
xor
push
mov
jmp
mov
add
pop
push
push
pushl
jmp
push
mov
sub
pop
not
jmp
xor
xor
mov
mov
push
mov
pop
mov
add
push
jmp
neg
not
not
and
push
mov
xor
jmp
push
push
mov
mov
pop
mov
mov
add
jmp
mov
not
or
xor
jmp
push
jmp
pop
neg
jmp
add
jmp
jmp
pop
add
pop
jmp
pushl
mov
add
sub
mov
mov
push
mov
add
pop
add
jmp
mov
push
push
pop
push
mov
jmp
pop
add
push
jmp
sub
pop
jmp
sub
mov
push
subl
mov
jmp
mov
push
mov
push
mov
add
pop
jmp
push
push
mov
mov
pop
add
pop
xor
xor
jmp
add
push
jmp
mov
push
mov
xor
or
jmp
pushl
jmp
mov
jmp
mov
push
mov
mov
push
jmp
mov
mov
add
pop
xor
xor
xor
mov
and
pushf
jmp
mov
add
pop
mov
pop
pop
jmp
add
push
pushl
jmp
neg
sub
xor
pop
sub
pushl
pop
add
mov
pop
rep
add
push
mov
jmp
mov
mov
push
mov
jmp
mov
push
mov
mov
push
mov
mov
add
push
mov
add
sub
sub
pop
push
mov
add
jmp
sub
jmp
mov
sub
pop
mov
jmp
add
add
sub
jmp
pop
sub
jmp
pop
jmp
add
pushl
pushl
pop
push
mov
add
sub
xchg
jmp
add
jmp
pushl
jmp
push
mov
jmp
mov
jmp
dec
shr
shr
add
xor
add
pop
sub
pop
or
push
jmp
addl
pushl
pop
add
add
push
mov
add
jmp
mov
mov
sub
pop
xor
jmp
shl
jmp
push
mov
push
push
jmp
sub
jmp
push
mov
add
push
jmp
mov
xor
or
sub
mov
pop
xor
push
mov
xor
pop
dec
neg
sub
or
pop
jmp
add
add
mov
add
push
sub
pop
not
xor
jmp
not
shr
add
jmp
subl
sub
addl
mov
add
dec
add
jmp
push
jmp
mov
sub
add
add
mov
push
jmp
mov
add
and
sub
mov
push
jmp
sub
pop
xchg
pop
mov
jmp
mov
push
jmp
sub
xchg
pop
jmp
mov
xor
jmp
pop
mov
pop
sub
add
add
sub
pop
push
jmp
mov
push
push
pop
add
sub
xchg
jmp
mov
jmp
sub
mov
mov
sub
pop
xor
pop
add
push
mov
mov
sub
jmp
sub
jmp
add
sub
add
jmp
or
shl
jmp
add
push
jmp
mov
jmp
xor
xor
not
jmp
add
and
pop
or
jmp
push
jmp
pop
jmp
pop
mov
jmp
mov
mov
add
jmp
pop
jmp
pop
add
shr
shl
shl
sub
add
jmp
push
mov
xor
pop
sub
jmp
mov
sub
add
push
push
jmp
push
mov
add
sub
xchg
jmp
mov
add
jmp
pop
push
mov
xor
sub
jmp
push
push
mov
push
mov
push
mov
dec
xor
and
pop
xor
not
not
add
mov
pop
jmp
add
jmp
pop
push
mov
push
pop
and
jmp
mov
jmp
sub
pop
mov
add
xor
xor
xor
mov
cmp
pushf
jmp
pop
add
sub
pop
add
jmp
push
mov
add
add
xchg
jmp
xchg
jmp
mov
pop
sub
pop
mov
pop
add
jmp
sub
and
jmp
mov
and
push
mov
sub
or
pop
shl
xor
push
jmp
push
push
jmp
add
pop
mov
add
jmp
mov
sub
mov
mov
jmp
push
push
pop
shl
jmp
add
xor
pop
inc
shl
sub
push
jmp
shr
cmp
je
push
jmp
pop
push
mov
sub
jmp
pop
jmp
inc
dec
sub
push
mov
add
pop
jmp
mov
mov
jmp
inc
shl
or
add
jmp
mov
add
push
mov
and
jmp
add
mov
pop
mov
jmp
pop
mov
jmp
pushl
mov
add
popl
pushl
pushl
pop
push
jmp
add
pop
mov
pop
xor
mov
jmp
pop
add
add
add
jmp
pushl
mov
jmp
and
jmp
pop
popl
pop
push
jmp
sub
add
sub
jmp
and
sub
add
add
push
jmp
push
jmp
xor
pushl
pop
sub
jmp
pop
add
pop
sub
jmp
xor
mov
pop
sub
mov
add
xor
xor
xor
mov
mov
pop
jmp
mov
add
xor
xor
xor
mov
shlb
pushf
jmp
pop
add
pop
push
mov
and
pop
shr
and
sub
shl
jmp
xchg
jmp
mov
mov
sub
sub
mov
add
sub
push
jmp
pushl
pop
push
mov
add
add
xchg
jmp
inc
jmp
mov
shl
or
not
push
mov
sub
sub
pop
jmp
pushl
jmp
pop
jmp
mov
add
or
push
mov
sub
add
add
pop
and
add
push
mov
sub
mov
push
jmp
pushl
pushl
pushl
pushl
pop
jmp
popl
push
mov
add
mov
push
jmp
sub
pop
mov
pop
add
pop
add
jmp
add
jmp
mov
add
pop
add
push
mov
jmp
mov
sub
mov
mov
add
pushl
mov
add
jmp
mov
add
pushl
jmp
mov
add
not
push
mov
push
sub
jmp
pop
add
add
jmp
push
mov
push
jmp
add
pop
jmp
add
inc
jmp
sub
add
add
sub
pop
add
sub
add
add
sub
sub
mov
jmp
mov
push
mov
add
pop
sub
sub
mov
jmp
push
sub
mov
addl
popl
addl
mov
add
sub
mov
mov
add
xor
push
mov
add
pop
add
sub
pop
push
jmp
sub
jmp
add
add
jmp
pop
jmp
add
jmp
and
add
add
pop
pop
jmp
add
pushl
pop
add
push
mov
mov
add
add
sub
pop
jmp
add
pop
jmp
mov
add
shl
sub
sub
sub
sub
add
push
mov
not
sub
add
pop
mov
add
push
mov
push
pop
push
xchg
not
xor
xor
xor
pop
xor
jmp
pop
push
mov
sub
mov
add
mov
jmp
push
mov
add
sub
xchg
pop
mov
mov
and
pop
jmp
add
sub
pop
xchg
jmp
pop
jmp
push
mov
jmp
xor
mov
push
mov
mov
push
mov
sub
mov
push
jmp
push
push
pushl
pop
push
mov
add
jmp
add
popl
mov
mov
push
mov
add
sub
xchg
pop
mov
push
mov
jmp
add
add
sub
sub
pop
add
jmp
add
push
mov
jmp
push
mov
mov
pop
shr
sub
mov
mov
shr
jmp
pushl
pop
push
mov
mov
jmp
xor
sub
add
add
sub
pop
xchg
pop
push
mov
jmp
xor
and
jmp
push
jmp
push
mov
inc
shl
dec
add
add
jmp
pop
xor
pop
add
jmp
pop
add
add
mov
add
sub
mov
mov
mov
pop
pop
add
mov
add
sub
mov
pushl
pop
popl
mov
jmp
sub
pop
sub
pop
jmp
not
xor
add
pop
sub
jmp
jmp
or
jmp
push
mov
add
jmp
xor
xor
xor
jmp
push
jmp
pushl
pop
add
add
sub
mov
push
push
jmp
pop
push
jmp
pop
push
mov
sub
pop
pop
push
mov
add
sub
xchg
mov
mov
sub
mov
mov
mov
jmp
mov
xor
jmp
add
add
jmp
xchg
pop
sub
sub
add
push
mov
jmp
inc
push
mov
jmp
popl
mov
jmp
shr
dec
inc
shl
add
jmp
push
mov
add
jmp
dec
jmp
add
sub
jmp
add
and
xor
dec
shl
add
mov
pop
add
pop
mov
add
pushl
pop
add
pushl
mov
add
add
push
mov
push
jmp
mov
jmp
mov
or
pop
sub
or
pop
and
or
push
jmp
mov
add
jmp
push
mov
jmp
push
mov
add
jmp
xor
jmp
addl
subl
pushl
pop
jmp
push
jmp
mov
add
neg
sub
push
jmp
sub
push
xchg
not
jmp
xchg
pop
jmp
sub
add
push
mov
add
pop
mov
add
not
jmp
or
shl
push
push
mov
mov
push
mov
sub
jmp
mov
mov
add
jmp
popl
jmp
pushl
mov
push
mov
jmp
pushw
mov
pop
pop
xor
jmp
push
push
pop
or
xor
dec
xor
mov
pop
mov
xor
pop
add
xor
add
pop
push
mov
mov
add
sub
xchg
jmp
push
mov
and
jmp
push
mov
mov
push
push
push
mov
jmp
push
mov
add
sub
xchg
pop
jmp
sub
jmp
or
pushf
jmp
pushl
popf
pop
sbb
pushf
jmp
pushl
pop
push
jmp
sub
mov
add
xchg
pop
push
jmp
pop
push
mov
jmp
mov
add
add
xor
xor
xor
mov
jmp
mov
jmp
sub
not
push
push
push
mov
sub
jmp
sub
push
pushl
pop
popl
jmp
pop
mov
mov
jmp
push
mov
xchg
inc
xchg
pop
and
or
push
mov
jmp
mov
push
mov
push
pop
add
jmp
inc
inc
jmp
add
jmp
mov
rorb
pushf
jmp
add
add
xchg
pop
push
jmp
push
jmp
xorl
pop
jmp
add
pop
add
sub
mov
mov
add
pop
pop
jmp
add
add
push
pushl
jmp
pop
sub
mov
jmp
mov
addl
mov
add
push
mov
mov
and
jmp
mov
pop
pop
shr
xor
inc
jmp
push
mov
sub
mov
mov
mov
xor
pop
jmp
xor
xor
jmp
jmp
push
jmp
pop
pop
jmp
mov
shl
add
and
push
mov
inc
shr
add
sub
pop
add
jmp
xor
jmp
sub
add
add
sub
add
jmp
mov
add
add
add
pop
push
push
mov
jmp
pop
add
push
push
mov
mov
pop
sub
pop
push
push
mov
mov
pop
sub
pop
push
push
mov
mov
add
mov
push
mov
add
add
xchg
pop
shr
jmp
mov
push
mov
add
add
xchg
pop
push
mov
add
pushl
jmp
mov
jmp
push
mov
sub
pop
xchg
pop
mov
addl
jmp
xchg
mov
mov
mov
sub
add
push
mov
sub
mov
push
jmp
add
push
mov
add
pop
push
pushl
pop
jmp
mov
jmp
add
xchg
pop
jmp
push
mov
add
push
mov
add
pop
xchg
pop
xor
mov
jmp
mov
jmp
notw
jmp
inc
push
mov
jmp
xchg
jmp
sub
jmp
add
add
xchg
pop
sub
jmp
add
push
jmp
mov
push
jmp
dec
not
push
push
mov
add
pop
xchg
not
xchg
xchg
add
add
add
push
push
jmp
pushw
pop
push
push
pushw
jmp
add
pop
sub
sub
pop
xchg
mov
mov
jmp
push
jmp
push
mov
push
sub
pop
and
sub
xchg
not
xchg
inc
shl
push
mov
neg
jmp
mov
mov
add
push
mov
jmp
add
add
push
subl
mov
add
push
mov
sub
jmp
not
sub
and
jmp
add
sub
sub
jmp
push
jmp
mov
jmp
pop
pushl
pop
jmp
push
jmp
pop
sub
mov
push
pop
push
jmp
mov
add
jmp
sub
add
add
pop
push
mov
shr
or
xor
add
pop
xchg
pop
jmp
pop
xor
pop
add
add
sub
pop
add
xchg
mov
push
jmp
shr
sub
push
mov
jmp
pop
push
push
mov
jmp
add
xor
xor
xor
pop
jmp
push
pop
push
mov
sub
dec
inc
xor
add
pop
add
xchg
pop
jmp
sub
jmp
sub
mov
pop
sub
pop
pop
xchg
pop
sarl
pushf
jmp
xchg
pop
add
dec
dec
add
dec
push
mov
inc
add
jmp
push
jmp
popl
push
mov
add
pop
pop
add
push
mov
push
mov
mov
pop
add
pop
jmp
add
add
push
pushl
mov
add
popl
mov
jmp
mov
mov
push
pop
pop
xor
sub
jmp
xor
pushl
mov
jmp
mov
xor
mov
jmp
mov
mov
jmp
mov
addl
jmp
pop
or
jmp
shlw
pushf
jmp
pop
mov
pop
mov
pop
mov
pop
push
jmp
pop
popl
jmp
pop
add
add
jmp
pushl
jmp
add
and
or
jmp
neg
shr
jmp
mov
add
add
jmp
pushl
pop
popl
xchg
not
xchg
push
jmp
xchg
jmp
xor
sub
pop
mov
add
sub
sub
jmp
mov
pop
or
and
neg
not
shl
sub
and
mov
add
neg
not
sub
sub
add
jmp
mov
mov
push
pushf
jmp
mov
jmp
pop
jmp
add
sub
xchg
pop
jmp
add
push
mov
add
jmp
mov
pop
sub
jmp
add
push
mov
add
jmp
sub
add
mov
mov
add
xor
mov
jmp
mov
pop
push
mov
and
jmp
push
notl
pop
xchg
xor
mov
pop
jmp
pop
pushl
mov
add
add
sub
mov
add
jmp
push
mov
mov
add
add
xchg
mov
jmp
add
pop
push
mov
sub
pop
pop
add
add
pop
push
mov
add
jmp
add
push
jmp
xor
sub
jmp
xor
add
pop
mov
add
add
push
pushl
pop
popl
pop
pushl
mov
add
push
jmp
push
jmp
and
sub
add
mov
add
add
xchg
pop
jmp
mov
mov
dec
add
sub
jmp
mov
add
sub
jmp
shr
push
mov
xor
pop
add
jmp
mov
jmp
pop
jmp
pop
add
push
mov
sub
mov
add
jmp
pop
add
push
mov
add
jmp
mov
add
jmp
mov
add
push
mov
jmp
pop
shr
xor
sub
mov
jmp
mov
add
jmp
add
add
push
jmp
mov
xor
jmp
mov
push
pushl
pushl
pop
jmp
push
pushl
pop
jmp
mov
push
jmp
add
add
xchg
pop
popl
pop
jmp
sub
xchg
pop
mov
mov
xor
jmp
sub
sub
add
pop
movzbl
jmp
push
push
mov
add
jmp
add
mov
add
add
pop
push
pushl
pop
popl
pop
mov
push
jmp
pop
sub
sub
jmp
mov
pushl
jmp
push
mov
jmp
xchg
mov
jmp
push
jmp
xor
or
shr
push
mov
shr
push
mov
mov
sub
mov
add
or
jmp
xor
shr
push
mov
sub
pop
sub
xor
pop
add
xor
pop
jmp
mov
shl
xor
dec
sub
not
xor
add
pop
sub
pop
pushw
jmp
push
mov
sub
sub
add
pop
push
jmp
add
pop
add
jmp
mov
pop
pushl
pop
jmp
mov
sub
mov
push
jmp
pop
sub
add
jmp
push
pop
jmp
mov
sub
pop
jmp
xor
pop
mov
push
jmp
add
sub
sub
sub
jmp
push
mov
sub
pop
sub
pop
jmp
or
je
push
jmp
shl
shr
xor
push
mov
jmp
add
jmp
shr
and
sub
xor
and
pop
sub
jmp
lods
jmp
xor
xor
xor
jmp
and
jmp
xor
jmp
pop
push
jmp
mov
add
jmp
push
jmp
add
add
sub
jmp
mov
mov
jmp
dec
not
sub
mov
mov
sub
pop
jmp
mov
push
mov
jmp
add
jmp
mov
shl
push
push
jmp
add
push
jmp
xor
pop
jmp
sub
jmp
mov
jmp
mov
jmp
mov
add
sub
mov
pop
push
jmp
mov
jmp
add
push
pushl
jmp
add
jmp
add
pop
sub
xor
jmp
push
pushl
pop
popl
mov
jmp
pushl
jmp
push
mov
jmp
mov
add
pop
jmp
mov
add
pop
sub
push
mov
xor
sub
mov
jmp
add
add
xchg
jmp
mov
jmp
not
pushw
mov
mov
or
mov
add
push
mov
jmp
pop
sub
mov
pop
xor
pop
pop
xor
pop
and
pop
shr
xor
push
mov
push
jmp
xor
sub
add
add
pop
push
jmp
mov
and
add
push
mov
xor
jmp
xor
pop
sub
jmp
pushl
mov
jmp
shl
sub
mov
mov
xor
pop
mov
pop
pushw
mov
push
jmp
xor
jmp
mov
mov
jmp
push
mov
mov
jmp
pushl
jmp
xchg
pop
sub
mov
mov
jmp
jmp
pop
push
pushl
pushl
jmp
push
mov
mov
push
mov
and
pop
jmp
xchg
jmp
xor
jmp
push
mov
xor
add
jmp
mov
add
add
pop
sub
mov
push
mov
subl
jmp
mov
add
jmp
xchg
pop
jmp
mov
add
sub
mov
mov
jmp
xor
xor
jmp
pop
xor
jmp
sub
pop
sub
jmp
mov
add
mov
add
add
jmp
pushl
mov
add
jmp
mov
add
add
xchg
pop
add
push
mov
jmp
sub
sub
add
add
push
mov
jmp
inc
xor
and
mov
add
add
jmp
pop
push
mov
push
mov
mov
pop
jmp
add
sub
mov
add
add
xor
xor
xor
mov
bswap
jmp
pop
push
mov
add
add
xchg
pop
add
jmp
xchg
pop
and
pop
or
shl
sub
mov
push
mov
push
push
pop
inc
neg
add
sub
jmp
mov
jmp
shr
shr
push
mov
and
and
add
sub
jmp
popl
pop
push
mov
push
jmp
mov
push
jmp
add
add
xchg
pop
add
add
xor
xor
jmp
push
pop
add
sub
xchg
jmp
mov
pushw
jmp
add
add
sub
pop
push
mov
sub
pop
xor
xor
xor
mov
mov
mov
push
mov
push
mov
and
sub
add
pop
shr
xor
add
pop
push
push
mov
xor
mov
jmp
mov
jmp
add
jmp
push
mov
add
jmp
xor
xor
xor
shr
jmp
add
push
push
mov
jmp
pop
push
mov
sub
pop
push
pushl
jmp
xor
mov
add
jmp
mov
push
mov
jmp
pop
mov
jmp
and
pushl
mov
jmp
pop
add
push
jmp
sub
add
pop
xor
mov
add
jmp
push
jmp
push
mov
push
jmp
mov
mov
push
mov
jmp
push
mov
jmp
push
mov
push
push
mov
jmp
add
jmp
add
push
jmp
mov
add
jmp
pop
add
jmp
mov
push
mov
push
mov
add
jmp
bts
pushf
jmp
push
jmp
pop
push
mov
jmp
xchg
mov
jmp
sub
mov
mov
xor
pop
jmp
pushl
pop
popl
mov
mov
push
mov
mov
jmp
not
add
push
mov
mov
or
and
sub
jmp
xor
jmp
mov
jmp
inc
jmp
pop
push
mov
mov
not
jmp
mov
pop
sub
mov
mov
xor
mov
add
xor
push
jmp
push
mov
or
jmp
push
mov
jmp
sub
pop
sub
jmp
mov
mov
pop
pop
add
jmp
sub
sub
mov
push
mov
addl
pop
sub
jmp
pop
sub
push
mov
jmp
sub
mov
push
mov
push
mov
jmp
pop
popl
jmp
push
jmp
push
mov
add
sub
xchg
jmp
add
add
jmp
mov
mov
add
jmp
pushl
popf
pop
adc
pushf
jmp
inc
add
sub
inc
add
jmp
pop
jmp
mov
push
jmp
add
add
pushl
pop
add
sub
subl
push
jmp
pop
xchg
mov
mov
push
jmp
pop
sub
add
pop
add
add
jmp
pushl
mov
add
push
mov
add
sub
push
pushl
pop
popl
jmp
pop
jmp
push
push
mov
add
jmp
pop
xor
xor
pop
jmp
push
pop
add
add
xchg
pop
push
jmp
neg
shl
neg
neg
push
jmp
not
push
mov
jmp
push
jmp
mov
push
jmp
mov
pushl
mov
add
popl
jmp
notl
pop
xchg
jmp
mov
shr
dec
jmp
push
mov
dec
jmp
pop
mov
negl
pushl
pop
add
xor
mov
pushl
jmp
mov
pop
pop
xor
sub
push
mov
sub
pop
jmp
mov
pop
xchg
not
xchg
mov
pop
neg
push
push
push
mov
push
mov
push
mov
jmp
xor
add
jmp
push
mov
mov
jmp
add
pop
jmp
push
mov
push
jmp
mov
sub
jmp
mov
jmp
pop
pop
xor
xor
xor
mov
cmp
pushf
jmp
mov
jmp
sub
xchg
jmp
mov
sub
jmp
pop
sub
mov
add
push
mov
push
mov
not
not
xor
add
jmp
pushl
jmp
xchg
pop
push
mov
jmp
pop
sub
mov
jmp
xchg
pop
add
jmp
push
pop
add
jmp
pushl
pop
jmp
neg
add
mov
mov
add
push
mov
push
mov
jmp
pushl
pop
push
mov
push
mov
add
pop
add
push
mov
pushl
pushl
pop
push
mov
push
mov
mov
not
sub
add
jmp
inc
push
mov
add
jmp
mov
jmp
sub
jmp
sub
pop
add
jmp
sub
sub
jmp
add
add
push
mov
add
and
pop
sub
mov
jmp
mov
sub
shr
add
jmp
sub
add
pop
jmp
sub
push
notl
pushl
jmp
pushl
popf
pop
rcll
pushf
jmp
pop
mov
jmp
mov
push
mov
shl
jmp
sub
mov
jmp
mov
add
add
sub
jmp
push
mov
addl
pop
jmp
push
mov
add
add
pop
jmp
add
xchg
pop
jmp
pop
sub
add
add
push
mov
jmp
pop
add
jmp
sub
pop
shl
dec
shl
push
push
pop
xor
jmp
push
jmp
push
push
mov
jmp
mov
mov
jmp
inc
add
push
mov
jmp
mov
push
jmp
mov
add
jmp
push
jmp
mov
jmp
pop
jmp
sub
pop
sub
add
jmp
or
neg
neg
jmp
pop
jmp
mov
add
push
jmp
xor
mov
jmp
and
push
mov
jmp
mov
sub
mov
mov
add
add
jmp
pop
pop
shl
neg
push
sub
pop
shl
sub
add
pop
jmp
push
jmp
mov
add
add
xchg
jmp
mov
xor
jmp
xor
add
jmp
pop
jmp
mov
mov
jmp
push
mov
add
jmp
mov
jmp
mov
push
mov
add
push
jmp
pushw
jmp
push
push
mov
mov
pop
add
xor
xor
jmp
xor
jmp
add
push
mov
jmp
add
jmp
mov
mov
push
push
jmp
add
jmp
mov
mov
jmp
neg
jmp
mov
add
pop
mov
add
xchg
jmp
pop
mov
jmp
mov
push
sub
jmp
shr
add
add
pop
add
push
pushl
pushl
jmp
push
pushf
jmp
add
xchg
pop
jmp
add
neg
sub
xor
add
pop
push
mov
shl
and
jmp
pop
add
sub
sub
add
sub
sub
add
add
sub
push
mov
jmp
add
sub
mov
push
mov
mov
pop
not
jmp
mov
sub
pop
sub
add
push
mov
sub
pop
pushl
mov
push
mov
push
mov
jmp
xchg
pop
jmp
pop
not
push
mov
and
jmp
mov
add
jmp
xor
sub
pop
xchg
pop
mov
push
mov
jmp
mov
push
mov
jmp
sub
xchg
pop
mov
jmp
addl
jmp
xor
pop
or
add
and
mov
add
push
notl
pop
inc
jmp
sub
push
jmp
mov
mov
push
push
popl
push
mov
subl
add
addl
mov
add
pushl
pop
add
add
add
push
pushl
pop
jmp
mov
sub
mov
push
mov
add
push
jmp
sub
jmp
push
jmp
mov
mov
shl
xor
sub
pop
jmp
neg
shl
shr
add
sub
jmp
notl
jmp
and
push
addl
pop
xor
add
jmp
sub
mov
pop
add
pop
shl
sub
jmp
sub
sub
add
pop
add
sub
sub
pushl
pop
jmp
xor
add
add
sub
jmp
add
xchg
mov
add
sub
push
push
jmp
pop
add
add
sub
pop
push
mov
mov
xor
jmp
popl
mov
push
mov
push
pop
add
jmp
push
pushl
pop
popl
mov
jmp
push
push
push
jmp
subl
add
addl
addl
pop
mov
jmp
pushl
mov
add
sub
mov
push
pop
add
sub
xchg
pop
mov
push
pop
jmp
add
sub
mov
jmp
and
jmp
mov
mov
add
add
pop
jmp
mov
sub
pushl
jmp
shl
xor
or
sub
jmp
mov
push
mov
push
mov
shr
dec
xor
not
or
xor
add
mov
add
add
xchg
pop
xor
sub
add
jmp
mov
mov
add
sub
jmp
push
jmp
pop
push
push
jmp
sub
add
add
pushl
pop
add
push
sub
mov
push
push
jmp
xor
jmp
or
add
add
add
jmp
pop
mov
add
jmp
pop
mov
push
jmp
push
mov
jmp
mov
push
mov
jmp
popl
jmp
push
mov
jmp
xor
xor
xor
xor
xor
xor
jmp
pop
add
jmp
add
sub
sub
jmp
push
mov
jmp
mov
add
xor
movzbl
popw
jmp
pop
add
sub
mov
pop
mov
pop
push
push
mov
mov
sub
pop
or
and
jmp
add
push
jmp
or
jmp
pop
add
xchg
mov
jmp
popl
jmp
pop
push
mov
push
mov
mov
add
pop
add
jmp
push
mov
mov
sub
mov
add
sub
pop
jmp
add
xor
xor
xor
pop
push
mov
mov
add
mov
add
push
mov
add
pop
jmp
pop
jmp
neg
jmp
add
sub
jmp
jmp
pop
popl
pop
sub
mov
jmp
push
mov
mov
push
mov
neg
shr
xor
jmp
xor
not
sub
mov
jmp
mov
add
xchg
not
push
sub
mov
pop
jmp
push
pop
jmp
push
jmp
pop
push
mov
xor
mov
add
jmp
mov
jmp
mov
add
jmp
mov
push
mov
or
shl
shl
add
sub
add
add
sub
mov
add
jmp
sub
mov
jmp
mov
push
push
popl
addl
pop
push
push
mov
add
sub
add
push
mov
and
jmp
dec
shr
add
add
xor
xor
pop
sub
add
jmp
mov
add
jmp
add
add
xchg
pop
push
mov
jmp
mov
xor
jmp
add
jmp
add
mov
add
push
mov
sub
pop
add
xor
pushl
pushl
pop
push
mov
add
add
jmp
sub
jmp
pushl
pop
add
push
push
pop
add
add
jmp
mov
xor
push
jmp
pop
and
jmp
pop
add
jmp
push
mov
inc
not
shr
neg
sub
sub
pop
sub
jmp
sub
mov
jmp
push
jmp
add
sub
xchg
jmp
mov
push
push
mov
jmp
add
jmp
mov
pop
pop
sub
pop
push
mov
mov
sub
add
add
pushl
jmp
add
pop
add
jmp
pop
add
jmp
add
pop
push
mov
sub
pop
sub
add
sub
pop
jmp
push
mov
and
shr
and
and
add
sub
or
pop
push
jmp
add
sub
jmp
mov
pop
sub
jmp
mov
sub
mov
add
jmp
popl
jmp
push
pop
dec
and
dec
add
push
subl
pop
jmp
push
jmp
add
jmp
xor
jmp
xor
and
pop
inc
sub
mov
mov
jmp
pop
jmp
mov
add
add
xchg
jmp
add
add
pop
mov
add
movzbl
pushl
push
mov
sub
mov
jmp
add
xor
xor
xor
mov
btr
pushf
jmp
pop
add
jmp
sub
add
push
mov
push
push
push
mov
inc
sub
mov
mov
and
pop
or
dec
add
push
mov
neg
not
sub
sub
neg
add
xor
mov
add
jmp
add
xchg
jmp
push
mov
jmp
push
jmp
add
pop
pushw
mov
mov
add
jmp
xor
xor
jmp
xchg
pop
mov
push
pop
shr
sub
xchg
neg
xchg
push
mov
xor
jmp
xor
add
xor
not
xor
sub
sub
jmp
sub
mov
jmp
or
jmp
xor
jmp
pop
jmp
add
jmp
push
mov
neg
shl
xor
and
and
xor
sub
pop
sub
mov
mov
and
jmp
xor
xor
pop
jmp
mov
push
mov
mov
push
mov
add
pop
add
xchg
pop
not
not
push
jmp
mov
add
sub
jmp
or
pop
push
mov
sub
pop
add
jmp
mov
push
mov
pop
pop
xor
jmp
shl
add
jmp
add
popa
jmp
mov
sub
pop
add
add
sub
jmp
add
push
push
mov
push
pop
pop
sub
jmp
push
mov
dec
add
add
pop
or
xor
not
not
add
xor
pop
jmp
push
mov
and
xor
sub
add
xor
pop
or
pop
add
sub
mov
xorl
pop
xor
pop
jmp
push
mov
sub
pop
add
add
pop
jmp
pushl
jmp
mov
pop
pop
mov
add
mov
add
shr
jmp
sub
add
add
pop
xchg
mov
push
mov
push
mov
push
mov
sub
mov
mov
mov
jmp
sub
jmp
pop
sub
jmp
add
sub
sub
pop
xchg
pop
jmp
sub
xor
mov
add
pushw
mov
push
mov
mov
push
mov
push
mov
jmp
add
sub
push
push
pushw
pop
push
mov
mov
pop
sub
pop
push
jmp
pushl
pop
jmp
mov
pop
add
mov
add
jmp
sub
jmp
xor
xor
pop
shr
pushl
pushl
pop
push
mov
jmp
add
pop
sub
jmp
xchg
pop
popl
pop
jmp
jmp
popa
ret
lods
jmp
mov
jmp
not
xchg
xchg
jmp
sub
sub
jmp
add
mov
pop
sub
pushl
pop
jmp
sub
push
jmp
push
mov
sub
pop
not
sub
push
xorl
pop
xor
pop
sub
inc
push
mov
jmp
popl
jmp
pop
xor
jmp
push
push
mov
mov
pop
jmp
and
add
jmp
mov
mov
push
jmp
mov
not
jmp
mov
jmp
pop
pop
not
xchg
push
pushl
pop
popl
pushl
mov
add
jmp
sub
add
sub
pop
xor
xor
xor
pop
jmp
sub
or
pop
xor
sub
pop
push
mov
add
add
sub
pop
sub
sub
add
sub
pop
push
mov
push
jmp
add
jmp
xchg
pop
push
mov
add
add
push
pushl
pushl
pop
push
mov
jmp
xchg
pop
sub
mov
push
jmp
sub
pop
jmp
mov
add
jmp
mov
push
mov
push
mov
jmp
sub
mov
jmp
and
jmp
mov
mov
add
push
mov
add
jmp
add
pop
xchg
mov
mov
jmp
mov
jmp
mov
sub
add
pop
push
jmp
sub
jmp
push
mov
jmp
mov
push
mov
add
pop
sub
xchg
pop
mov
mov
push
jmp
lods
jmp
mov
add
pop
jmp
add
push
mov
mov
add
jmp
pushl
mov
add
popl
mov
pushl
pushl
pop
push
push
mov
addl
jmp
push
mov
and
or
sub
push
mov
sub
jmp
mov
push
mov
push
sub
jmp
push
mov
sub
pop
pop
pop
add
push
jmp
mov
mov
movzbw
jmp
add
add
add
jmp
add
push
jmp
or
shr
and
push
mov
xor
mov
add
add
pushl
pop
add
push
mov
sub
pop
xchg
pop
mov
jmp
sub
xor
pop
jmp
sub
jmp
mov
pop
pop
sub
shr
or
jmp
mov
push
mov
jmp
sub
jmp
add
add
add
add
sub
jmp
add
jmp
add
mov
add
pushl
pop
jmp
push
mov
xor
jmp
sub
subl
pushl
pop
push
mov
sub
mov
push
push
pop
shl
or
jmp
push
jmp
pushl
mov
push
jmp
mov
push
mov
or
pop
push
jmp
mov
popl
mov
push
mov
mov
jmp
pop
jmp
mov
add
shr
shl
not
inc
sub
mov
mov
sub
sub
jmp
and
sub
mov
pop
push
mov
pop
mov
push
push
pop
add
push
mov
add
pop
xchg
jmp
mov
push
mov
xor
sub
sub
push
pop
pop
jmp
add
pushl
pop
add
not
jmp
push
pushl
jmp
pop
add
jmp
mov
jmp
shr
sub
dec
xor
add
sub
sub
pop
jmp
pop
push
jmp
xor
jmp
xchg
pop
mov
push
mov
jmp
pushl
pop
jmp
or
jmp
add
add
sub
mov
push
mov
add
add
xchg
mov
xchg
mov
jmp
lods
xor
push
mov
shr
not
shr
inc
sub
jmp
or
jmp
and
pop
jmp
push
mov
push
mov
add
add
jmp
or
neg
add
shl
sub
add
add
sub
pop
add
pop
sub
mov
mov
xor
add
pop
xchg
pop
push
mov
sub
add
add
pop
sub
mov
mov
add
sub
sub
mov
push
mov
shr
shl
and
jmp
xor
xor
mov
or
jmp
pop
popl
pop
xor
pop
jmp
xor
xor
jmp
add
pop
add
mov
add
jmp
add
push
pushl
mov
jmp
mov
push
mov
add
add
xchg
pop
mov
jmp
popl
jmp
mov
push
pushl
pop
jmp
xchg
jmp
add
add
add
xor
pop
add
jmp
sub
shl
or
add
xor
xor
pop
dec
inc
xor
sub
add
add
pop
sub
sub
add
add
add
mov
jmp
mov
addl
pop
jmp
sub
pop
jmp
popl
jmp
mov
jmp
add
xchg
mov
push
push
pop
xor
inc
jmp
add
pop
push
mov
mov
and
and
jmp
pop
shr
push
mov
push
push
mov
mov
xor
pop
not
push
mov
jmp
mov
add
add
sub
pop
mov
add
jmp
mov
add
pop
xchg
jmp
xchg
jmp
or
pop
jmp
pop
and
pop
push
mov
sub
jmp
neg
push
mov
jmp
mov
jmp
add
pop
pop
xor
shl
add
add
add
sub
pop
xchg
pop
add
add
test
pushf
jmp
mov
push
push
jmp
sub
mov
mov
and
mov
add
or
push
jmp
push
jmp
mov
inc
shl
push
push
mov
mov
xor
pushl
jmp
mov
push
mov
mov
pop
push
mov
jmp
mov
mov
jmp
add
sub
pop
shl
push
mov
mov
sub
jmp
mov
add
sub
add
add
pushl
pop
add
xor
xor
xor
pop
pushw
jmp
pushl
popf
pop
rclw
pushf
jmp
push
mov
add
add
sub
pop
pushl
mov
sub
jmp
inc
inc
jmp
pushl
pop
popl
mov
cmp
pushf
jmp
push
jmp
mov
sub
mov
push
mov
add
sub
mov
mov
add
pop
push
mov
push
pop
add
jmp
sub
pop
mov
pop
xor
pushl
jmp
mov
push
subl
pop
add
pop
push
push
jmp
mov
sub
add
add
mov
sub
mov
push
mov
add
push
jmp
add
jmp
pop
or
je
pushl
push
mov
xor
jmp
xor
xor
mov
jmp
shl
push
mov
add
pop
mov
pop
xor
add
pop
push
mov
sub
pop
xor
xor
xor
mov
mov
jmp
mov
jmp
pop
sub
add
add
sub
pushl
pop
push
mov
add
jmp
add
and
not
sub
push
mov
shr
add
sub
and
pop
shr
xor
add
pop
add
pop
jmp
add
push
mov
xor
sub
pop
xchg
pop
mov
jmp
sub
pop
push
jmp
and
jmp
push
push
pop
shl
neg
add
shl
jmp
add
push
mov
add
add
xchg
pop
sub
jmp
sub
mov
push
mov
jmp
shl
push
push
mov
push
mov
mov
add
add
sub
shr
xor
push
mov
add
sub
jmp
push
jmp
pushw
sub
mov
add
not
jmp
push
pop
mov
mov
add
push
jmp
add
jmp
not
xchg
dec
add
jmp
mov
pop
inc
jmp
sub
push
jmp
push
mov
push
mov
jmp
sub
add
jmp
add
sub
jmp
mov
mov
push
push
mov
mov
mov
add
not
shr
or
shl
sub
mov
mov
not
xor
or
jmp
push
mov
dec
xor
add
shl
sub
add
jmp
add
sub
xchg
jmp
mov
push
push
mov
jmp
push
mov
jmp
add
pop
dec
sub
mov
mov
push
mov
push
mov
shl
jmp
pushl
popf
pop
rcrw
pushf
jmp
pop
and
dec
shl
or
jmp
xchg
mov
jmp
sub
sub
or
jmp
pop
popl
pop
mov
mov
push
pop
pop
mov
mov
add
pushl
mov
add
jmp
negb
pop
push
mov
xor
pop
push
sub
mov
sub
mov
mov
push
mov
neg
add
jmp
pop
or
pop
or
xor
jmp
xor
xor
pop
push
push
mov
addl
mov
add
jmp
push
push
mov
dec
jmp
add
sub
push
jmp
mov
mov
jmp
shl
jmp
shr
and
jmp
push
jmp
push
mov
push
mov
add
add
push
sub
mov
addl
pushl
pop
push
mov
push
mov
sub
add
add
pop
push
mov
add
pop
xchg
jmp
add
mov
mov
push
mov
mov
add
push
mov
add
add
sub
pop
xchg
pop
sub
mov
mov
inc
shr
add
and
jmp
and
neg
sub
mov
mov
not
or
jmp
inc
jmp
sub
pushl
pop
sub
mov
mov
add
push
mov
add
add
push
mov
sub
pop
xor
jmp
pushl
mov
jmp
add
add
push
pushl
pop
popl
pop
shr
jmp
push
jmp
sub
mov
pop
push
mov
dec
inc
add
push
mov
mov
and
pop
push
mov
sub
jmp
not
jmp
pop
sub
pop
jmp
mov
push
mov
push
mov
push
mov
xor
shr
add
sub
jmp
mov
add
push
mov
sub
and
add
jmp
not
shr
and
push
mov
mov
add
pop
and
pop
sub
jmp
inc
not
add
and
pushl
pop
add
or
je
pushl
push
push
pop
add
jmp
mov
pop
push
push
mov
or
sub
sub
add
xor
mov
pop
neg
push
mov
jmp
mov
sub
pop
add
pushl
pop
add
pop
sub
mov
jmp
mov
mov
add
pop
mov
jmp
pop
sub
pop
add
push
jmp
mov
jmp
push
jmp
mov
mov
sub
mov
jmp
mov
mov
jmp
push
mov
mov
jmp
popl
push
mov
jmp
add
pop
jmp
mov
push
jmp
mov
jmp
xor
xor
xor
pop
mov
sub
mov
push
mov
addl
pushl
pop
add
push
mov
jmp
pop
sub
mov
jmp
add
push
mov
xor
pop
push
notl
pop
push
mov
jmp
shr
xor
jmp
add
jmp
add
pop
mov
pop
sub
mov
add
jmp
sub
mov
mov
shr
push
push
push
pop
sub
jmp
mov
add
pop
pop
push
mov
mov
push
mov
mov
add
add
sub
pushl
pop
push
mov
jmp
and
xor
jmp
and
pushl
pushl
jmp
add
push
mov
jmp
shr
jmp
xor
jmp
xor
add
pop
pop
xor
xor
xor
mov
jmp
not
add
dec
shr
sub
add
jmp
jmp
mov
mov
xor
add
neg
shr
dec
jmp
notl
pop
inc
jmp
pop
pop
jmp
jmp
add
shr
jmp
addl
add
push
mov
jmp
xchg
pop
shr
jmp
pushl
pop
popl
mov
movzbw
pushw
mov
jmp
sub
jmp
xchg
pop
push
push
mov
not
jmp
mov
mov
jmp
mov
add
pop
jmp
pop
and
jmp
sub
jmp
sub
sub
mov
jmp
shl
shl
jmp
xor
jmp
pop
jmp
pushl
pushl
pop
push
jmp
lods
xor
sub
mov
push
jmp
mov
push
push
mov
push
pop
push
jmp
pushl
pop
jmp
pop
mov
pushl
mov
add
add
mov
pop
jmp
mov
xor
pop
push
mov
xorl
jmp
pop
neg
sub
mov
jmp
inc
jmp
push
jmp
pop
pop
xor
mov
add
pushl
pushl
mov
add
jmp
push
mov
neg
and
xor
xor
pop
shr
push
mov
xor
jmp
xor
jmp
pop
jmp
pop
add
xchg
mov
jmp
not
jmp
sub
jmp
popl
pop
jmp
sub
push
mov
sub
mov
pop
pop
mov
add
add
add
add
add
jmp
push
jmp
addl
add
subl
pop
popl
jmp
add
push
jmp
sub
mov
mov
mov
pop
neg
sub
shl
add
push
mov
neg
jmp
pop
jmp
jmp
xor
not
add
sub
jmp
push
mov
sub
pop
push
mov
add
pop
sub
sub
add
sub
jmp
xor
inc
add
push
mov
xor
pop
xor
pop
add
pop
push
jmp
sub
mov
push
mov
jmp
mov
mov
push
mov
mov
jmp
add
jmp
mov
mov
jmp
mov
jmp
pop
sub
sub
push
jmp
xor
jmp
push
mov
jmp
sub
pop
push
push
mov
jmp
addl
pushl
jmp
xor
jmp
sub
sub
push
mov
push
mov
mov
pop
sub
add
jmp
add
sub
mov
mov
add
jmp
or
shr
sub
xor
add
jmp
mov
jmp
inc
xor
sub
pop
add
add
mov
add
add
add
add
add
jmp
popl
pop
mov
pop
push
push
push
mov
push
mov
push
addl
pop
sub
pop
xor
pop
jmp
mov
jmp
mov
sub
jmp
sub
sub
push
jmp
jmp
add
sub
pop
add
jmp
mov
jmp
pop
push
mov
add
mov
add
neg
add
xor
push
pop
pop
add
pop
sub
jmp
pop
jmp
mov
jmp
shr
jmp
sub
pop
add
pop
add
xor
jmp
mov
jmp
add
xor
jmp
mov
jmp
mov
mov
add
push
jmp
mov
push
mov
mov
add
push
push
push
jmp
inc
jmp
mov
push
mov
add
pop
push
mov
shr
jmp
push
jmp
push
mov
dec
and
shr
jmp
add
mov
add
push
pushl
jmp
pop
add
pop
jmp
inc
xor
sub
pushl
pop
add
add
sub
mov
sub
mov
push
jmp
mov
add
pop
add
xchg
jmp
sub
mov
subl
pop
add
pop
add
pop
sub
mov
jmp
push
mov
jmp
push
mov
add
jmp
jmp
sub
add
add
jmp
pop
mov
sub
pop
jmp
mov
add
add
add
sub
push
mov
mov
shr
dec
not
sub
jmp
xor
pop
inc
inc
dec
not
jmp
sub
sub
add
jmp
push
mov
push
mov
add
pop
push
mov
or
pop
push
push
sub
mov
mov
jmp
sub
pop
pop
sub
mov
jmp
push
jmp
pop
add
sub
mov
pop
sub
add
jmp
push
mov
push
jmp
sub
mov
addl
jmp
add
add
add
add
sub
sub
jmp
mov
push
push
mov
jmp
pushl
pushl
pop
jmp
add
sub
mov
mov
mov
pop
pop
addl
add
jmp
mov
jmp
pop
jmp
pop
jmp
pop
jmp
push
mov
add
sub
shl
inc
add
sub
jmp
mov
jmp
mov
push
jmp
pop
mov
mov
add
add
add
sub
mov
jmp
mov
sub
mov
push
pop
add
push
sub
mov
mov
jmp
mov
mov
pop
add
xor
mov
push
push
mov
addl
mov
add
add
push
jmp
xchg
mov
sub
mov
push
mov
add
sub
push
pushl
pop
popl
pop
mov
mov
mov
jmp
sub
jmp
mov
pop
mov
sub
pop
add
mov
add
mov
push
mov
add
jmp
sub
jmp
mov
xor
xor
xor
jmp
pop
jmp
push
mov
push
mov
jmp
mov
jmp
add
push
mov
add
pop
pop
push
jmp
push
mov
or
shl
xor
sub
pop
jmp
pop
push
pop
mov
jmp
push
mov
sub
pop
sub
add
push
push
mov
shr
sub
mov
mov
jmp
or
jmp
add
jmp
dec
jmp
add
add
sub
sub
pop
push
jmp
add
add
add
sub
mov
pushl
jmp
pop
add
push
jmp
sub
inc
add
sub
add
jmp
add
sub
pop
push
mov
add
pop
xchg
mov
and
pushl
pop
jmp
mov
inc
neg
jmp
subl
pop
push
jmp
push
mov
jmp
sub
jmp
mov
jmp
pop
jmp
pop
sub
jmp
pop
push
mov
jmp
sub
pop
jmp
xor
xor
xor
mov
jmp
mov
mov
add
jmp
push
push
pop
and
jmp
sub
pop
and
shr
add
jmp
pushl
pop
popl
pop
jmp
mov
mov
or
mov
push
jmp
add
jmp
notb
jmp
popl
mov
mov
jmp
add
shr
jmp
mov
mov
and
or
push
push
pop
or
jmp
mov
add
push
jmp
add
mov
add
jmp
push
mov
jmp
mov
or
jne
push
push
sub
jmp
add
pop
push
mov
add
sub
xchg
pop
jmp
or
jmp
shr
inc
xor
add
pop
push
mov
sub
jmp
not
not
jmp
sub
xor
mov
jmp
pushl
jmp
inc
sub
jmp
pushl
pop
add
jmp
pushl
pop
add
and
mov
push
mov
push
pop
push
mov
neg
jmp
mov
jmp
push
mov
push
mov
push
mov
add
add
xor
xor
xor
pop
push
mov
jmp
neg
jmp
mov
push
mov
add
xchg
inc
jmp
sub
add
push
jmp
add
jmp
mov
sub
jmp
mov
push
pop
push
mov
sub
add
add
mov
add
sub
sub
pop
mov
push
mov
jmp
push
mov
push
pop
push
push
pop
sub
jmp
or
pop
add
push
pop
mov
push
push
jmp
pop
jmp
mov
xor
jmp
add
mov
add
push
mov
or
and
neg
or
push
mov
jmp
add
jmp
add
jmp
mov
add
push
mov
add
pop
push
pushl
pop
popl
pop
push
mov
push
jmp
push
pushl
mov
add
jmp
mov
dec
jmp
mov
add
pop
add
add
sub
sub
jmp
push
mov
add
add
shr
sub
mov
pop
jmp
xor
pop
pushl
pop
add
xor
and
pushl
pop
push
mov
jmp
xor
jmp
add
add
mov
add
xchg
jmp
pop
popl
pop
push
mov
sub
mov
jmp
push
jmp
sub
pushw
mov
push
jmp
pop
jmp
add
pop
push
mov
add
sub
jmp
push
jmp
mov
push
mov
mov
mov
add
jmp
neg
add
sub
mov
xorl
jmp
mov
mov
neg
add
add
pop
push
jmp
or
and
add
mov
pop
neg
add
push
mov
mov
shl
jmp
xor
xor
mov
push
mov
sub
mov
push
mov
push
push
mov
mov
pop
push
jmp
sub
mov
push
pop
add
push
jmp
neg
dec
sub
xor
sub
pop
add
add
jmp
add
sub
xchg
pop
mov
push
mov
and
and
xor
neg
xor
push
mov
jmp
add
jmp
sub
mov
push
jmp
popl
pop
pushl
jmp
pop
add
xor
jmp
pop
push
mov
jmp
mov
jmp
sub
shr
shl
jmp
add
sub
xchg
mov
mov
push
push
pop
xchg
dec
jmp
mov
mov
add
add
sub
jmp
mov
mov
pop
pushl
jmp
sub
jmp
mov
jmp
add
push
jmp
notl
pop
add
add
pop
push
mov
sub
pop
xchg
mov
mov
push
mov
add
xor
mov
push
mov
add
sub
xchg
pop
jmp
push
jmp
mov
jmp
push
mov
shl
add
inc
jmp
mov
sub
jmp
mov
push
push
push
pop
jmp
add
pop
xchg
pop
pushl
pop
add
xor
xor
jmp
inc
xor
add
pop
add
jmp
mov
push
mov
jmp
push
mov
or
jmp
xor
jmp
xor
xor
xor
mov
jmp
xchg
pop
add
add
sub
sub
push
jmp
push
mov
add
pop
sub
xchg
pop
mov
jmp
add
sub
xchg
pop
mov
push
jmp
shl
jmp
add
add
add
add
push
jmp
xor
xor
xor
pop
add
pushf
jmp
add
mov
add
not
neg
push
mov
xor
pop
neg
push
mov
and
sub
xor
pop
push
mov
mov
sub
jmp
mov
jmp
add
jmp
mov
jmp
push
mov
jmp
mov
jmp
mov
jmp
sub
not
xor
mov
mov
add
sub
add
add
pop
jmp
pushl
jmp
mov
sub
jmp
push
mov
add
pop
push
push
jmp
pop
jmp
push
mov
subl
sub
addl
pop
subl
sub
push
mov
mov
add
pop
addl
mov
push
mov
add
add
jmp
xor
xor
mov
xor
pushf
jmp
add
mov
mov
push
mov
jmp
mov
add
popl
mov
movzbw
pushw
jmp
mov
jmp
pop
pop
jmp
mov
jmp
mov
add
sub
xchg
jmp
add
jmp
xor
sub
sub
add
pop
push
jmp
mov
or
add
jmp
sub
pop
xor
jmp
pop
add
jmp
add
push
mov
mov
jmp
dec
xor
xor
shr
neg
push
mov
jmp
push
mov
add
add
not
not
and
sub
shl
push
jmp
mov
push
push
sub
mov
mov
jmp
add
mov
add
jmp
shl
jmp
mov
jmp
mov
add
add
push
mov
jmp
add
add
xchg
jmp
add
sub
sub
add
pushl
pushl
mov
add
jmp
mov
push
mov
and
and
push
mov
shr
add
sub
pop
sub
pop
jmp
mov
add
sub
jmp
push
push
jmp
push
mov
mov
jmp
add
sub
xchg
jmp
not
jmp
popl
addl
jmp
xchg
jmp
pop
popl
mov
add
push
mov
push
mov
mov
jmp
or
sub
xchg
not
push
push
pop
pop
dec
sub
sub
pop
push
mov
pushl
mov
add
popl
mov
mov
push
jmp
mov
jmp
pop
sub
mov
push
mov
mov
mov
jmp
push
jmp
sub
add
push
mov
sub
sub
inc
add
and
and
push
mov
xor
pop
add
pop
mov
add
push
pushl
pop
popl
mov
and
pushf
jmp
push
jmp
mov
push
jmp
inc
neg
shl
not
push
mov
xor
neg
jmp
mov
add
jmp
mov
push
sub
jmp
mov
push
mov
jmp
add
add
xchg
pop
xor
push
push
push
jmp
pop
push
pushl
pop
jmp
mov
jmp
push
push
mov
mov
pop
jmp
mov
push
mov
add
push
mov
shl
jmp
sub
jmp
mov
jmp
add
jmp
add
sub
push
jmp
mov
add
sub
xor
xor
xor
pop
mov
mov
push
mov
dec
dec
sub
jmp
push
mov
push
mov
add
jmp
xor
pop
sub
jmp
mov
jmp
lods
sub
push
mov
add
pop
jmp
neg
push
jmp
or
add
add
add
pop
pop
add
pop
xor
xor
xor
pop
jmp
xor
pop
push
push
jmp
add
sub
pop
add
mov
add
sub
mov
push
jmp
mov
push
push
pop
add
push
mov
sub
pop
xchg
pop
mov
jmp
xor
sub
jmp
pop
xor
mov
pop
jmp
sub
jmp
not
or
xchg
jmp
push
mov
mov
jmp
mov
push
jmp
sub
dec
push
mov
sub
pop
jmp
push
mov
add
pop
pushl
pop
add
push
mov
shr
jmp
sub
sub
mov
add
sub
add
jmp
movzbw
sub
mov
push
mov
addl
pop
add
push
mov
sub
sub
jmp
mov
bt
pushf
jmp
pop
sub
push
mov
jmp
mov
shr
xor
neg
jmp
add
jmp
mov
push
mov
push
mov
jmp
mov
pop
or
push
mov
xor
dec
jmp
mov
push
xorl
pop
xor
pop
pushl
pop
jmp
mov
pop
shl
jmp
mov
jmp
mov
pop
jmp
negb
pushf
jmp
pop
push
mov
push
jmp
mov
dec
inc
shr
add
mov
pop
push
jmp
push
jmp
add
jmp
mov
xor
jmp
mov
sub
mov
push
mov
add
sub
mov
jmp
sub
add
pop
add
jmp
push
jmp
sub
add
sub
add
sub
movzbl
mov
sub
jmp
mov
pop
add
mov
push
mov
add
add
xchg
pop
sub
mov
push
pop
add
xor
sub
jmp
xor
pop
mov
push
push
popl
addl
pop
jmp
shr
jmp
pop
push
mov
jmp
add
inc
push
jmp
mov
not
sub
xor
jmp
sub
pop
mov
add
xchg
jmp
notl
pop
push
mov
jmp
push
jmp
sub
mov
add
xor
movzbl
jmp
mov
push
mov
add
add
xchg
mov
jmp
pop
jmp
add
jmp
add
pop
add
xchg
pop
or
jne
push
mov
push
pop
sub
mov
mov
xor
push
mov
add
sub
sub
jmp
pop
jmp
neg
xor
sub
pop
add
add
sub
add
jmp
mov
shl
jmp
push
mov
xor
jmp
push
jmp
pop
add
push
mov
inc
jmp
mov
not
add
xchg
dec
xchg
add
mov
pop
mov
jmp
mov
push
mov
push
mov
push
jmp
pushl
pop
jmp
add
add
add
sub
push
mov
jmp
pop
pushl
pop
push
push
pop
add
add
xchg
pop
jmp
push
push
jmp
pop
add
add
mov
jmp
pop
push
subl
subl
sub
jmp
add
xor
shl
push
jmp
mov
inc
not
sub
sub
pop
add
jmp
shl
push
mov
sub
sub
jmp
pop
add
jmp
mov
push
push
pop
push
push
mov
mov
shl
xor
mov
mov
add
push
mov
jmp
pop
push
mov
not
and
xor
sub
sub
sub
add
add
pop
push
mov
sub
jmp
push
mov
sub
xor
add
pop
add
xchg
jmp
sub
sub
sub
sub
push
mov
jmp
push
notb
pop
xor
mov
add
jmp
xor
add
pop
push
pushl
pushl
pop
push
jmp
pop
push
mov
add
jmp
sub
push
pushl
pop
jmp
push
mov
add
pop
push
jmp
pop
sub
sub
pop
jmp
pushl
pushl
pop
add
push
mov
sub
mov
mov
sub
add
jmp
pushl
pop
add
add
xor
jmp
or
mov
jmp
and
or
jmp
sub
mov
sub
mov
mov
sub
shl
and
dec
or
xor
push
mov
mov
pop
mov
add
jmp
push
push
jmp
mov
addl
jmp
mov
jmp
push
jmp
not
jmp
pop
jmp
add
jmp
push
mov
or
pop
push
mov
jmp
idiv
push
push
pop
jmp
add
push
pushl
pop
popl
mov
shlw
pushf
jmp
shr
sub
sub
jmp
sub
sub
jmp
mov
sub
pop
xor
shr
jmp
add
add
xchg
pop
pop
push
mov
pushl
pushl
pop
sub
mov
mov
jmp
push
jmp
mov
mov
pop
add
inc
push
jmp
add
push
mov
neg
jmp
mov
push
pop
xor
jmp
push
mov
add
pop
add
xchg
mov
push
mov
jmp
push
mov
push
mov
add
pop
pop
add
jmp
push
jmp
push
pop
add
sub
xchg
pop
mov
popl
jmp
pushl
mov
add
push
jmp
pushl
pop
jmp
sub
mov
add
push
push
push
pop
or
or
shl
jmp
pop
mov
pop
jmp
push
pop
push
jmp
mov
push
pop
push
mov
or
or
shr
sub
add
pop
push
mov
shr
push
mov
and
pop
push
mov
shr
and
not
push
mov
sub
pop
sub
pop
push
mov
xor
add
pop
push
mov
jmp
add
jmp
add
add
jmp
sub
pushl
jmp
pop
push
mov
shl
sub
shl
sub
jmp
lods
push
jmp
mov
push
pop
add
sub
jmp
shr
shl
xor
add
pop
jmp
xor
add
mov
jmp
pop
push
push
pop
add
sub
jmp
popl
mov
test
pushf
jmp
sub
mov
push
mov
jmp
pop
push
notl
mov
add
dec
jmp
addl
pop
sub
mov
add
mov
add
push
mov
add
sub
xchg
jmp
add
pop
dec
neg
or
shr
sub
jmp
pop
neg
xor
xor
xor
add
push
push
mov
add
pop
jmp
not
jmp
mov
and
xor
xor
mov
jmp
mov
add
sub
mov
mov
sub
sub
add
jmp
or
sub
add
add
push
mov
jmp
pushl
pop
add
push
mov
push
mov
addl
pop
push
jmp
xor
xor
jmp
xor
and
mov
add
shr
and
add
sub
sub
jmp
add
xchg
pop
sub
mov
push
mov
push
mov
mov
pop
and
or
sub
mov
mov
inc
neg
add
dec
jmp
xor
xor
jmp
sub
mov
pop
add
pop
pop
push
mov
jmp
mov
add
add
xchg
pop
sub
mov
mov
add
not
add
shr
push
mov
mov
sub
jmp
pop
push
jmp
sub
xor
xor
jmp
push
mov
xor
push
push
push
mov
mov
pop
shl
jmp
xchg
jmp
add
add
push
mov
add
jmp
mov
mov
mov
add
sub
or
shl
shl
sub
mov
pop
push
jmp
mov
sub
jmp
not
sub
add
xor
add
pushl
jmp
xchg
pop
jmp
xchg
jmp
sub
add
pop
shr
push
mov
mov
inc
jmp
push
mov
push
pop
sub
mov
pop
jmp
sub
sub
push
mov
add
pop
jmp
mov
sub
add
add
pushl
pop
add
push
jmp
mov
push
mov
mov
or
mov
add
jmp
push
mov
push
pop
jmp
mov
push
mov
sub
mov
mov
add
add
xchg
mov
or
mov
add
push
mov
jmp
mov
mov
xor
jmp
sub
add
add
pop
push
mov
add
pop
jmp
pop
add
add
xchg
pop
jmp
pop
push
mov
push
mov
push
mov
mov
pop
mov
add
push
mov
shl
add
add
mov
jmp
sub
push
mov
sub
add
pop
sub
pop
push
jmp
add
mov
add
push
push
mov
add
jmp
mov
pushl
mov
add
popl
mov
pushl
pushl
pushl
pushl
pop
push
push
pop
add
add
xchg
pop
push
mov
push
mov
add
jmp
add
add
jmp
mov
jmp
push
push
pop
jmp
sub
pop
add
add
pushl
pop
push
mov
push
push
jmp
add
add
jmp
sub
add
add
push
mov
jmp
and
shr
sub
sub
pop
push
subl
mov
sub
mov
push
pop
add
add
xchg
pop
add
jmp
pop
add
push
mov
jmp
pushl
pop
add
xchg
mov
push
push
mov
jmp
add
add
sub
pushl
jmp
push
jmp
add
add
xchg
jmp
mov
jmp
pop
mov
add
sub
mov
mov
sub
jmp
add
add
push
mov
pushl
pop
jmp
mov
add
mov
add
shr
shl
push
jmp
add
add
xchg
mov
push
pushl
pop
popl
pop
push
push
pop
and
mov
push
mov
add
jmp
mov
add
shr
sub
shr
shl
push
mov
add
jmp
add
pushl
pop
jmp
mov
mov
pop
add
pop
xchg
mov
jmp
mov
pop
shr
sub
mov
pop
xor
pop
jmp
mov
mov
add
add
pop
sub
sub
mov
jmp
mov
jmp
inc
jmp
push
mov
push
mov
shl
dec
not
jmp
sub
mov
sub
jmp
mov
mov
mov
push
jmp
pushl
pop
push
mov
jmp
xor
pop
shr
shl
sub
jmp
add
or
je
pushl
sub
mov
mov
push
push
push
jmp
shr
jmp
add
mov
add
add
jmp
sub
mov
mov
push
mov
jmp
push
mov
push
mov
sub
mov
jmp
pop
dec
jmp
push
mov
mov
pushl
pop
sub
mov
push
pop
add
add
jmp
pop
jmp
not
add
sub
pop
xor
mov
pop
sub
add
push
mov
add
jmp
sub
xor
mov
pop
push
mov
mov
shl
push
push
mov
mov
mov
pop
shr
shr
jmp
pop
xor
mov
pop
sub
jmp
sub
mov
pop
push
jmp
push
mov
sub
mov
mov
jmp
mov
pop
sub
jmp
pop
add
sub
xor
xor
xor
jmp
neg
push
mov
push
jmp
push
jmp
mov
shl
neg
sub
add
jmp
mov
push
mov
jmp
add
push
sub
pushl
pop
add
push
mov
shl
sub
mov
mov
xor
mov
add
shl
dec
add
xor
mov
jmp
neg
add
push
mov
mov
sub
neg
neg
push
mov
shl
dec
and
jmp
sub
mov
pop
add
pop
xor
xor
xor
mov
push
jmp
sub
sub
add
add
mov
add
xchg
jmp
mov
and
jmp
sub
add
add
add
pop
add
pop
add
jmp
sub
pop
pop
add
push
mov
add
sub
jmp
add
jmp
push
mov
add
sub
sub
jmp
pop
xor
xor
jmp
shl
push
push
push
mov
push
mov
add
jmp
mov
jmp
xor
jmp
shl
jmp
sub
push
jmp
pop
mov
pushl
mov
add
sub
mov
push
mov
add
sub
mov
mov
jmp
pushl
pop
jmp
push
pop
xor
sub
mov
jmp
mov
push
mov
jmp
add
add
sub
mov
push
push
pop
add
add
xchg
pop
and
pushl
pop
push
mov
push
pop
add
push
mov
push
mov
add
pop
inc
jmp
push
mov
sub
pop
jmp
add
sub
pop
push
mov
push
jmp
pop
pop
jmp
add
push
pushl
jmp
push
mov
sub
mov
jmp
push
jmp
push
mov
jmp
pop
xor
add
jmp
mov
sub
mov
push
mov
add
jmp
push
push
mov
add
push
mov
xor
sub
pop
xchg
jmp
dec
sub
mov
mov
jmp
push
jmp
mov
jmp
sub
sub
add
pop
pop
push
mov
push
mov
add
pop
jmp
mov
push
mov
mov
pop
pushl
pop
add
jmp
sub
pop
jmp
add
jmp
add
pop
dec
jmp
shl
push
mov
jmp
push
jmp
push
mov
mov
pop
pop
push
mov
mov
mov
jmp
add
pop
or
mov
add
jmp
add
add
sub
push
mov
jmp
sub
add
pop
sub
sub
push
mov
add
pop
push
mov
mov
sub
neg
inc
sub
push
jmp
mov
add
jmp
mov
add
and
sub
neg
neg
jmp
popl
jmp
mov
push
mov
jmp
mov
mov
add
pop
push
pushl
pop
jmp
add
pop
add
pop
push
jmp
jmp
push
mov
mov
jmp
add
push
mov
mov
inc
shl
push
mov
jmp
sub
add
push
notl
pop
jmp
and
xor
add
jmp
add
pop
jmp
sub
jmp
mov
push
pushf
jmp
sub
jmp
not
mov
pop
jmp
pop
sub
xor
jmp
push
mov
decl
pop
shl
push
push
mov
add
pop
jmp
pop
push
mov
add
sub
xchg
pop
mov
mov
xor
jmp
pop
jmp
jmp
push
mov
push
push
pop
jmp
mov
push
mov
push
jmp
pop
push
push
jmp
jmp
mov
mov
neg
neg
inc
xor
add
xor
push
jmp
pushl
pop
add
add
jmp
add
add
pop
push
mov
add
push
mov
jmp
mov
xor
jmp
add
sub
pop
pop
xor
xor
xor
mov
xor
pushf
jmp
mov
mov
push
mov
push
push
mov
add
dec
add
mov
pop
jmp
dec
jmp
shl
jmp
add
pop
push
jmp
xchg
pop
mov
jmp
pop
add
pop
add
sub
pushl
pop
push
mov
push
pop
push
mov
add
mov
add
push
mov
add
jmp
mov
push
mov
not
or
jmp
add
add
jmp
mov
sub
add
pop
mov
add
add
sub
jmp
pop
jmp
push
mov
push
mov
push
mov
add
and
pop
jmp
mov
jmp
push
pop
and
inc
sub
mov
pop
jmp
mov
sub
mov
jmp
sub
pop
sub
pop
xchg
jmp
add
sub
jmp
neg
sub
and
sub
add
mov
add
push
push
mov
mov
pop
sub
pop
mov
pushl
jmp
shr
xor
mov
jmp
push
jmp
add
pop
jmp
push
mov
jmp
pop
push
jmp
pop
sub
mov
push
pop
add
add
xchg
pop
or
jmp
push
jmp
mov
add
push
mov
add
jmp
mov
mov
or
sub
add
sub
jmp
xor
inc
add
jmp
push
mov
add
jmp
push
mov
xor
shl
add
push
jmp
add
push
push
mov
jmp
push
mov
or
pop
push
mov
push
mov
mov
sub
and
pop
not
jmp
sub
pop
jmp
jmp
sub
add
jmp
pop
jmp
sub
pop
push
jmp
lods
add
jmp
add
mov
pop
and
inc
or
push
mov
push
push
mov
add
jmp
mov
jmp
add
push
push
mov
mov
pop
xor
xor
xor
not
xchg
add
inc
jmp
push
jmp
pop
add
add
sub
jmp
add
pop
jmp
xor
jmp
pushl
mov
jmp
movswl
push
mov
add
sub
jmp
pop
xor
add
mov
pop
xor
sub
jmp
add
jmp
sub
jmp
pushl
jmp
pop
mov
mov
add
add
xor
xor
xor
jmp
add
push
mov
mov
sub
pop
xor
jmp
pop
pop
sub
mov
mov
mov
jmp
mov
add
add
xchg
pop
add
sub
mov
pushl
mov
push
mov
jmp
push
mov
push
mov
push
jmp
push
mov
jmp
dec
not
add
add
pop
jmp
shr
neg
push
mov
shl
and
or
jmp
pop
push
push
pop
push
mov
xor
jmp
negl
pushf
jmp
xor
jmp
push
jmp
mov
jmp
mov
push
jmp
add
pushl
mov
add
add
sub
movzbl
pushw
jmp
addl
jmp
inc
add
mov
pop
push
mov
sub
push
mov
add
sub
jmp
pop
jmp
push
mov
xor
pop
and
add
sub
add
jmp
pop
mov
push
mov
mov
jmp
mov
mov
sub
mov
mov
add
pushl
pop
add
add
push
pushl
mov
add
popl
pop
jmp
mov
add
sub
xor
xor
xor
pop
jmp
add
sub
add
add
pop
pop
add
xor
xor
xor
mov
push
mov
push
mov
shl
inc
sub
jmp
push
mov
add
push
mov
add
pop
jmp
not
inc
xor
add
mov
add
or
sub
jmp
pop
jmp
push
mov
push
mov
jmp
pop
add
push
mov
push
jmp
not
push
push
pop
mov
add
and
add
jmp
mov
inc
shl
sub
add
pop
jmp
add
mov
add
xor
xor
xor
jmp
shr
not
sub
shr
xor
sub
mov
add
sub
pop
pop
push
mov
mov
push
push
mov
jmp
push
pop
pop
xor
push
mov
jmp
push
mov
neg
xor
push
mov
or
pop
jmp
mov
mov
add
push
mov
shr
xor
sub
pop
xchg
pop
mov
mov
add
push
push
jmp
xchg
pop
sarw
pushf
jmp
mov
jmp
push
mov
mov
add
jmp
pop
mov
pop
jmp
push
mov
add
xor
pop
jmp
mov
push
mov
add
pop
jmp
shl
shr
jmp
xchg
jmp
sub
mov
mov
xor
push
push
mov
jmp
push
pop
sub
add
push
mov
mov
xor
or
add
xor
pop
push
jmp
push
mov
addl
popl
addl
jmp
pop
dec
jmp
push
mov
jmp
mov
sub
add
jmp
pop
add
jmp
add
sub
mov
jmp
push
pop
sub
mov
jmp
pop
xor
jmp
pop
mov
jmp
mov
jmp
xor
xor
mov
add
not
sub
shr
xor
xor
pop
sub
mov
jmp
mov
jmp
mov
addl
pop
sub
mov
push
mov
shr
and
add
sub
mov
pop
sub
sub
add
add
add
pushl
pop
jmp
pushl
pop
push
mov
add
jmp
add
sub
mov
push
push
pop
jmp
add
pop
xor
mov
add
jmp
push
jmp
push
pop
pop
push
mov
add
pop
jmp
sub
not
sub
mov
pop
push
mov
mov
add
jmp
xchg
pop
mov
sub
jmp
add
add
mov
add
xchg
jmp
add
pop
and
pop
sub
jmp
mov
push
mov
add
add
xchg
pop
jmp
add
pushl
jmp
pop
pop
sub
jmp
pop
add
add
push
jmp
push
mov
jmp
pop
push
mov
add
jmp
pop
push
push
mov
jmp
push
jmp
or
inc
sub
mov
jmp
sub
pop
jmp
mov
mov
shl
jmp
push
jmp
add
push
push
jmp
sub
sub
add
add
mov
push
mov
jmp
sub
sub
add
add
mov
jmp
push
jmp
add
sub
jmp
xor
xor
xor
pushw
jmp
push
mov
jmp
pop
push
jmp
push
mov
xor
pop
xor
jmp
xor
pop
add
pop
push
mov
push
jmp
pop
sub
sub
add
push
push
mov
mov
add
pop
xor
shl
or
or
add
add
pop
pop
xchg
mov
jmp
add
subl
pop
addl
add
subl
subl
pop
pushl
mov
jmp
mov
push
mov
jmp
add
mov
add
push
mov
add
pop
sub
sub
jmp
addl
addl
pop
jmp
addl
jmp
add
pop
mov
add
push
mov
jmp
mov
push
mov
jmp
sub
add
pop
xor
sub
mov
jmp
pop
add
jmp
add
or
dec
not
jmp
add
xchg
jmp
neg
jmp
dec
jmp
pop
not
jmp
push
mov
xor
pop
sub
push
jmp
push
mov
add
xchg
not
xchg
jmp
lods
xor
pushw
jmp
neg
sub
add
pop
sub
and
pop
sub
mov
mov
shr
not
add
sub
xor
jmp
pop
pop
push
mov
push
mov
push
push
mov
mov
jmp
pop
addl
sub
subl
pop
jmp
sub
sub
jmp
add
pop
push
mov
jmp
add
add
pushl
mov
add
add
push
mov
mov
sub
add
add
push
jmp
mov
jmp
mov
push
pop
inc
xor
jmp
add
xor
xor
xor
jmp
inc
shl
xor
add
pop
sub
add
add
sub
jmp
add
jmp
mov
sub
pop
push
jmp
sub
pop
add
add
add
sub
sub
add
pop
push
jmp
popl
pop
push
push
pop
add
jmp
and
not
jmp
push
jmp
sub
pop
add
pop
push
mov
pushl
pop
popl
mov
imul
push
jmp
xchg
pop
sub
pop
add
jmp
push
mov
sub
jmp
sub
sub
jmp
mov
add
jmp
xor
jmp
mov
xor
push
push
jmp
sub
sub
mov
addl
popl
addl
mov
add
push
mov
add
pop
push
mov
push
jmp
xchg
jmp
push
mov
jmp
sub
add
push
mov
jmp
and
xor
add
push
mov
pushw
sub
mov
add
add
shl
sub
push
mov
jmp
xor
not
neg
jmp
add
not
sub
mov
jmp
mov
jmp
sub
jmp
mov
sub
mov
mov
jmp
and
or
jmp
pop
push
jmp
pop
jmp
mov
jmp
push
pop
add
add
xor
xor
xor
jmp
dec
neg
and
jmp
mov
jmp
xor
pop
jmp
pop
add
push
jmp
neg
dec
jmp
add
jmp
mov
push
xchg
not
jmp
add
xchg
pop
push
jmp
not
push
push
mov
jmp
addl
jmp
push
mov
add
sub
add
mov
sub
pop
sub
pop
jmp
push
pushl
pop
popl
pop
mov
pushl
mov
add
jmp
sub
pop
pushl
pop
jmp
push
jmp
pop
jmp
mov
add
jmp
pop
shl
sub
push
mov
sub
pop
add
sub
jmp
pop
sub
sub
push
mov
add
jmp
mov
pop
push
mov
or
jmp
pushl
pop
jmp
add
add
pop
add
xor
xor
jmp
xor
movzbl
jmp
pop
xor
xor
xor
jmp
pop
rolw
pushf
jmp
pushl
pushl
pop
jmp
push
mov
pushl
jmp
mov
add
sub
xchg
jmp
dec
xor
add
xor
jmp
mov
jmp
push
mov
sub
jmp
sub
mov
mov
add
push
mov
mov
add
jmp
mov
and
neg
shl
not
sub
add
add
jmp
mov
jmp
sub
mov
jmp
jmp
pop
push
mov
jmp
mov
xor
pop
sub
mov
add
add
inc
xor
push
jmp
pushw
mov
jmp
push
jmp
popl
push
push
mov
dec
inc
and
sub
mov
mov
add
add
jmp
pushl
mov
add
popl
mov
jmp
pop
add
sub
mov
mov
jmp
subl
push
push
pop
push
jmp
add
pop
or
xor
mov
pop
jmp
shl
push
notl
jmp
xor
dec
not
inc
jmp
sub
mov
mov
xor
mov
add
pop
xor
jmp
mov
push
push
mov
neg
shr
push
mov
jmp
push
mov
shl
sub
add
jmp
add
mov
push
mov
jmp
push
push
mov
mov
jmp
mov
jmp
shr
or
jmp
add
xor
mov
add
push
mov
jmp
lods
xor
push
jmp
push
jmp
sub
push
mov
and
shr
xor
add
pop
pop
push
pushl
mov
add
popl
mov
decl
pushf
jmp
shlb
pushf
jmp
pop
jmp
push
mov
push
jmp
sub
jmp
xor
pop
jmp
add
add
xchg
pop
push
mov
jmp
push
pushl
pop
jmp
shl
push
mov
inc
add
jmp
add
movzbl
push
mov
jmp
add
push
push
mov
mov
jmp
add
add
jmp
mov
push
xorl
pop
xor
pop
mov
add
pop
shr
jmp
push
mov
jmp
mov
mov
jmp
push
mov
add
pushl
pop
add
sub
add
push
mov
shl
sub
jmp
add
shr
shr
jmp
xor
mov
mov
jmp
push
mov
add
add
push
mov
add
sub
xchg
mov
mov
jmp
mov
push
jmp
push
push
pop
sub
jmp
push
jmp
add
push
jmp
add
jmp
mov
mov
sub
pop
xchg
mov
mov
push
sub
mov
push
mov
push
pop
jmp
mov
pushl
pop
popl
mov
jmp
pop
add
push
mov
mov
add
jmp
add
push
mov
jmp
push
mov
mov
pop
shr
inc
shr
sub
shr
xor
mov
jmp
add
add
pop
jmp
sub
pop
push
pushl
pop
popl
mov
imul
movzbw
pushw
mov
movzbw
push
pushf
jmp
mov
jmp
mov
add
xor
xor
inc
sub
add
pop
add
shl
dec
sub
mov
mov
add
shl
neg
shr
xor
push
mov
add
sub
mov
jmp
mov
mov
mov
pop
push
jmp
push
mov
jmp
push
pop
push
mov
push
pop
xor
jmp
push
pop
add
add
sub
jmp
mov
mov
push
mov
add
sub
push
jmp
pop
xor
pushw
mov
subw
pop
add
pushl
pop
add
sub
mov
add
push
jmp
mov
jmp
mov
jmp
push
mov
mov
jmp
mov
add
jmp
xchg
pop
push
mov
push
jmp
xchg
not
xchg
xor
add
jmp
not
jmp
pop
jmp
push
jmp
lods
push
mov
push
push
mov
mov
pop
jmp
shrw
pushf
jmp
mov
jmp
mov
sub
mov
mov
jmp
xchg
jmp
add
jmp
push
jmp
add
sub
sub
push
mov
shl
shr
dec
not
jmp
pop
xor
add
jmp
xor
jmp
add
jmp
mov
jmp
pop
xor
pop
push
push
jmp
mov
add
add
jmp
add
pop
add
xchg
pop
push
push
pop
jmp
xor
jmp
push
mov
mov
jmp
sub
jmp
sub
jmp
push
sub
mov
mov
mov
mov
push
mov
add
add
xchg
pop
push
jmp
push
mov
sub
pop
push
mov
shr
push
jmp
mov
push
jmp
pop
add
jmp
not
add
add
add
push
mov
sub
pop
pop
sub
push
mov
mov
sub
mov
jmp
xor
jmp
sub
mov
mov
sub
xor
jmp
mov
push
mov
mov
xor
mov
jmp
mov
mov
mov
add
jmp
add
add
xor
pop
sub
add
pop
push
mov
add
push
jmp
add
pop
xor
xor
jmp
push
push
pop
jmp
mov
or
jmp
push
mov
add
pop
xchg
mov
jmp
add
jmp
mov
push
push
mov
add
push
mov
jmp
xor
xor
xor
jmp
shr
xor
shl
and
xor
add
pop
sub
push
jmp
pop
jmp
add
sub
jmp
sub
add
jmp
pop
sub
mov
push
mov
mov
sub
jmp
dec
jmp
mov
or
pop
push
mov
mov
neg
and
jmp
add
sub
xchg
pop
mov
pushl
jmp
push
mov
add
sub
sub
xchg
mov
add
push
mov
jmp
push
mov
add
pop
jmp
mov
push
jmp
pop
push
jmp
mov
inc
not
or
inc
jmp
add
sub
xchg
pop
jmp
mov
push
mov
add
jmp
push
sub
mov
push
pop
xor
pushl
pop
push
mov
jmp
shr
add
push
push
push
mov
add
sub
not
jmp
mov
jmp
pop
add
add
mov
add
xchg
pop
push
mov
add
jmp
or
push
mov
neg
xor
sub
pop
add
add
sub
mov
jmp
push
mov
mov
pop
jmp
pushl
pop
popl
mov
mov
jmp
sub
pop
add
pop
add
sub
mov
add
jmp
mov
shr
neg
and
inc
jmp
mov
push
jmp
mov
push
jmp
not
xchg
xchg
push
mov
push
mov
push
mov
sub
shr
dec
push
jmp
push
mov
add
pop
pop
sub
mov
push
mov
add
add
xchg
pop
addl
add
subl
mov
add
mov
push
jmp
mov
add
sub
push
pushl
pop
popl
mov
jmp
add
jmp
mov
mov
pop
sub
pop
push
mov
add
pop
push
mov
add
jmp
sub
and
push
jmp
xor
neg
sub
push
subl
pop
add
pop
add
add
push
mov
jmp
push
mov
add
sub
xchg
pop
mov
mov
shl
push
push
jmp
mov
sub
sub
jmp
sub
mov
jmp
mov
jmp
sub
push
mov
jmp
xor
mov
sub
mov
mov
add
push
jmp
add
pushl
pop
push
mov
add
add
xchg
pop
xor
xor
xor
mov
mov
jmp
xor
xor
push
mov
add
pop
sub
mov
jmp
push
mov
jmp
sub
jmp
push
mov
pushl
jmp
mov
jmp
pop
jmp
sub
mov
addl
jmp
push
pushl
mov
push
push
pop
jmp
mov
jmp
mov
mov
add
mov
add
sub
jmp
add
sub
sub
mov
add
not
jmp
pop
push
push
mov
mov
xor
mov
push
mov
jmp
mov
and
pop
sub
mov
pop
mov
sub
add
add
mov
push
mov
jmp
not
inc
inc
shr
add
sub
add
xor
jmp
add
add
xchg
pop
pop
push
jmp
pushl
pop
add
push
mov
add
sub
xchg
pop
jmp
add
jmp
or
not
xor
xor
pop
add
jmp
mov
mov
pop
jmp
mov
mov
add
push
mov
add
sub
push
pushl
pop
popl
jmp
pop
sub
sub
pushl
pop
push
mov
add
sub
mov
mov
add
pop
jmp
add
inc
jmp
xchg
pop
jmp
push
mov
add
add
xchg
jmp
sub
pushl
pop
add
push
mov
add
sub
add
add
jmp
and
push
mov
sub
pop
jmp
push
jmp
pop
shr
jmp
pop
sub
mov
jmp
add
sub
add
jmp
pushl
pop
push
mov
add
add
xchg
mov
add
xchg
mov
mov
jmp
add
sub
pushl
pop
add
jmp
mov
sub
jmp
add
jmp
dec
jmp
push
mov
sub
mov
mov
and
neg
sub
and
push
mov
xor
shl
add
and
jmp
mov
add
mov
jmp
push
mov
push
pop
and
pushl
pushl
mov
push
jmp
pop
pop
mov
mov
add
shl
add
sub
add
jmp
xor
xor
mov
div
jmp
sub
jmp
xchg
pop
and
shl
push
jmp
mov
pop
sub
mov
mov
jmp
sub
sub
pop
sub
add
add
mov
jmp
pop
mov
jmp
sub
add
add
jmp
push
push
pop
push
jmp
push
mov
mov
add
add
push
jmp
mov
push
jmp
push
jmp
mov
addl
pop
add
sub
xor
xor
jmp
add
and
sub
add
pop
jmp
push
sub
mov
mov
add
push
mov
push
mov
jmp
xor
pop
add
sub
sub
pop
push
mov
jmp
not
or
push
mov
add
pop
xor
sub
mov
jmp
sub
pop
pop
mov
add
add
add
push
mov
sub
jmp
add
dec
not
add
xor
jmp
neg
add
or
sub
jmp
push
jmp
sub
not
jmp
and
jmp
pushl
mov
add
add
push
jmp
mov
or
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
sub
sub
jmp
pop
add
jmp
push
push
mov
add
sub
sub
jmp
add
xor
xor
xor
jmp
pop
mov
mov
jmp
push
jmp
push
mov
add
add
xchg
pop
push
mov
jmp
or
and
and
xor
sub
add
add
sub
add
mov
add
push
push
mov
push
mov
add
xor
jmp
or
pop
sub
mov
pop
sub
mov
add
sub
mov
mov
sub
mov
mov
xor
mov
jmp
pop
shr
xor
sub
mov
mov
mov
pushl
pushl
pop
push
mov
mov
jmp
mov
push
mov
push
mov
push
push
pop
push
mov
or
sub
jmp
pop
xor
inc
inc
or
jmp
sub
xchg
pop
mov
jmp
add
add
pushl
pop
jmp
lods
xor
push
mov
mov
push
jmp
push
mov
sub
pop
jmp
mov
push
jmp
add
sub
push
jmp
add
sub
sub
pop
add
add
pop
sub
mov
mov
neg
push
mov
add
pushl
jmp
and
sub
mov
mov
xor
jmp
pop
push
mov
add
xor
jmp
push
mov
jmp
xor
xor
xor
mov
mov
jmp
add
add
pop
jmp
push
pop
add
add
xchg
pop
push
pushl
pop
popl
pop
pushl
pop
sub
mov
push
mov
push
push
mov
push
mov
xor
sub
jmp
mov
push
mov
add
add
jmp
push
mov
add
jmp
pop
add
push
jmp
add
jmp
sub
shr
not
sub
add
jmp
mov
shl
jmp
pushl
popf
pop
rcrb
pushf
jmp
pop
xchg
jmp
add
jmp
mov
sub
mov
mov
add
add
jmp
add
jmp
neg
jmp
xor
xor
pop
neg
dec
jmp
pushl
popf
pop
rclb
pushf
jmp
sub
jmp
mov
addl
mov
add
push
mov
push
mov
add
pop
sub
xchg
jmp
lods
add
push
mov
jmp
push
push
mov
push
addl
jmp
mov
sub
mov
mov
push
push
mov
jmp
mov
push
mov
mov
pop
jmp
and
and
jmp
mov
sub
mov
jmp
pop
jmp
add
pop
jmp
mov
mov
add
push
push
push
mov
inc
jmp
pop
jmp
mov
add
jmp
mov
movzbw
push
pushf
jmp
mov
not
mov
pop
xchg
xor
add
jmp
lods
push
jmp
mov
jmp
mov
jmp
push
jmp
mov
jmp
push
push
pop
mov
push
mov
add
add
jmp
mov
jmp
shl
push
jmp
push
mov
sub
jmp
xor
xor
xor
pop
push
jmp
mov
sub
jmp
or
pop
sub
mov
push
jmp
sub
jmp
add
jmp
xor
xor
xor
mov
movsbw
jmp
add
jmp
notl
pop
shl
sub
sub
add
add
pushl
pop
push
mov
add
add
xchg
pop
and
pop
pushl
xorl
pushl
pushl
pop
add
push
push
mov
jmp
sub
mov
mov
push
jmp
pop
mov
push
mov
mov
xor
xor
xor
inc
jmp
push
mov
jmp
mov
mov
jmp
pushl
pop
popl
mov
subl
push
jmp
pushl
pop
push
jmp
pushl
pop
add
add
sub
mov
mov
sub
mov
add
add
push
mov
jmp
push
pop
and
shl
not
and
jmp
mov
add
pop
pop
jmp
pop
sub
jmp
pop
sub
sub
push
mov
add
jmp
mov
and
add
sub
sub
sub
pop
push
push
mov
push
jmp
push
jmp
push
mov
mov
jmp
mov
jmp
push
mov
add
sub
xchg
pop
mov
mov
add
sub
xchg
jmp
sub
pop
jmp
xchg
pop
add
jmp
mov
sub
pop
shr
not
inc
sub
mov
mov
jmp
xchg
mov
or
shl
push
push
jmp
push
mov
and
mov
add
shr
sub
add
jmp
mov
mov
push
mov
mov
add
add
jmp
lods
xor
sub
jmp
mov
add
jmp
sub
add
pop
add
jmp
add
sub
jmp
push
jmp
push
mov
push
pop
sub
add
mov
jmp
push
mov
jmp
sub
sub
mov
add
xchg
mov
mov
push
jmp
mov
mov
add
push
mov
jmp
sub
or
pop
jmp
pop
add
push
jmp
mov
xor
add
pop
neg
add
mov
pop
sub
mov
push
mov
jmp
add
add
xchg
mov
subl
pop
jmp
shr
and
xor
and
jmp
push
mov
add
push
mov
mov
push
push
jmp
push
jmp
mov
add
sub
sub
add
jmp
add
push
mov
mov
jmp
mov
shrl
pushf
jmp
sub
mov
push
mov
mov
pop
mov
mov
add
jmp
pop
jmp
mov
push
jmp
push
mov
or
jmp
push
jmp
push
mov
sub
pop
jmp
push
push
pop
jmp
pop
sub
jmp
sub
and
pop
jmp
mov
mov
push
pop
jmp
pop
add
sub
mov
push
push
jmp
pop
sub
add
push
jmp
push
push
jmp
xor
mov
push
push
pop
jmp
mov
jmp
pop
add
jmp
mov
push
mov
jmp
xchg
pop
jmp
xor
pop
push
push
mov
or
shr
not
inc
xor
mov
mov
jmp
mov
pop
xor
push
pushl
mov
push
mov
add
push
mov
add
jmp
pop
mov
add
jmp
add
jmp
or
neg
inc
add
sub
mov
jmp
push
mov
jmp
shr
jmp
pop
mov
jmp
pushl
jmp
pop
add
mov
add
push
pushl
pop
popl
pop
add
add
sub
jmp
xchg
pop
sub
mov
jmp
pushl
jmp
sub
add
mov
push
mov
jmp
mov
add
push
mov
sub
pop
xchg
pop
mov
jmp
mov
mov
add
push
mov
add
jmp
mov
mov
mov
sub
jmp
add
jmp
mov
push
mov
push
mov
jmp
or
or
sub
sub
add
push
mov
jmp
push
mov
jmp
mov
jmp
pop
add
jmp
pop
jmp
push
mov
mov
pop
jmp
xor
sub
pop
mov
pop
jmp
mov
push
pop
dec
xor
add
push
pop
jmp
pop
add
jmp
sub
mov
mov
add
pop
jmp
pop
add
jmp
xor
jmp
push
mov
add
pop
push
push
mov
mov
jmp
mov
pop
add
pushl
pop
jmp
sub
add
push
jmp
add
jmp
pop
jmp
popl
pop
jmp
add
shr
xor
push
mov
xchg
xchg
not
xchg
xchg
pushl
pop
push
mov
push
pop
jmp
xor
mov
add
add
mov
add
add
jmp
sub
mov
mov
add
jmp
dec
jmp
and
pop
add
push
mov
add
pop
or
sub
add
pushl
jmp
push
notl
pop
jmp
mov
push
mov
shr
dec
add
add
jmp
mov
or
je
push
mov
push
mov
jmp
inc
and
push
jmp
mov
push
jmp
add
pop
push
mov
sub
jmp
pop
mov
sub
mov
push
mov
add
pop
mov
add
jmp
xor
jmp
pop
not
jmp
sub
add
mov
jmp
pop
jmp
mov
addl
pop
push
mov
add
mov
add
sub
push
mov
pushl
mov
add
popl
jmp
push
mov
shl
push
sub
pop
shr
push
mov
sub
jmp
push
push
pop
xor
mov
pop
push
jmp
push
mov
and
sub
or
or
push
push
mov
jmp
pop
push
mov
add
or
inc
neg
xor
push
mov
xor
pop
add
jmp
shr
or
push
mov
jmp
pop
popl
mov
push
mov
jmp
mov
jmp
add
add
pushl
jmp
pushl
pushl
mov
add
add
popl
pop
jmp
not
jmp
and
push
jmp
xchg
pop
xor
pop
push
push
mov
jmp
or
pop
push
mov
add
sub
sub
pop
jmp
mov
jmp
mov
add
jmp
push
mov
add
dec
push
jmp
jmp
add
push
push
mov
jmp
mov
push
jmp
add
sub
pop
jmp
push
jmp
popl
pop
mov
mov
push
mov
mov
sub
add
jmp
mov
jmp
mov
jmp
add
jmp
sarb
pushf
jmp
shl
xor
sub
jmp
dec
shr
jmp
push
jmp
jmp
add
not
xor
add
add
add
sub
push
jmp
add
add
sub
pop
add
xchg
mov
push
jmp
dec
neg
jmp
pop
push
mov
mov
dec
sub
and
jmp
mov
add
xor
or
inc
shr
add
sub
jmp
push
push
mov
addl
pop
add
jmp
xor
pushf
jmp
pop
jmp
xchg
pop
mov
sub
mov
mov
jmp
mov
add
add
sub
sub
push
mov
sub
add
add
push
mov
jmp
add
push
mov
push
push
pop
add
sub
xor
xor
xor
pop
mov
mov
add
push
mov
sub
pop
xchg
pop
mov
push
mov
add
jmp
add
neg
jmp
pop
and
and
jmp
add
add
jmp
mov
xor
pop
jmp
mov
jmp
mov
mov
push
mov
push
mov
jmp
add
pop
jmp
pop
mov
add
mov
add
push
mov
jmp
or
sub
add
pop
push
mov
inc
inc
add
jmp
mov
jmp
mov
jmp
pop
push
mov
push
push
pop
jmp
pop
push
mov
jmp
mov
jmp
push
mov
not
push
jmp
mov
pop
sub
xor
jmp
shl
push
notl
pop
xor
push
jmp
sub
sub
add
jmp
push
mov
add
pop
push
jmp
add
pop
jmp
shr
jmp
mov
add
pop
neg
sub
mov
mov
xor
shl
jmp
mov
push
jmp
mov
push
jmp
push
jmp
mov
jmp
sub
xchg
pop
jmp
push
pop
add
pop
push
mov
jmp
xor
sub
jmp
mov
push
mov
push
sub
jmp
and
or
add
add
mov
add
add
sub
jmp
xor
xor
xor
mov
jmp
sub
add
jmp
xchg
mov
mov
jmp
mov
push
mov
mov
add
sub
xchg
pop
mov
push
mov
push
mov
jmp
pop
push
push
jmp
add
pushl
jmp
mov
jmp
pushl
pop
add
jmp
inc
xchg
jmp
mov
add
add
push
pushl
pop
popl
jmp
mov
add
add
xchg
pop
add
pop
xchg
pop
add
jmp
pushl
mov
sub
mov
sub
mov
addl
jmp
neg
shl
neg
sub
jmp
add
pop
push
push
jmp
mov
mov
addl
pop
push
mov
push
mov
xor
add
pop
shr
neg
add
add
mov
add
push
jmp
add
add
pop
push
jmp
mov
and
shr
inc
or
dec
add
add
jmp
pop
xchg
mov
mov
push
mov
mov
xor
pop
sub
add
add
pop
push
jmp
mov
add
add
xchg
pop
jmp
pop
add
add
add
add
jmp
mov
mov
add
jmp
and
pop
shr
jmp
xor
pushl
jmp
mov
add
pop
sub
add
add
pop
sub
jmp
sub
pop
sub
add
pop
add
jmp
mov
inc
sub
xor
shr
xor
jmp
push
pushl
pop
jmp
push
mov
add
pop
pop
push
mov
push
mov
inc
jmp
push
mov
xor
add
add
sub
pop
jmp
sub
jmp
pop
push
mov
inc
inc
jmp
pop
push
jmp
mov
jmp
mov
xor
add
dec
push
mov
sub
or
mov
add
jmp
push
pop
sub
mov
jmp
push
mov
mov
jmp
add
mov
jmp
not
add
sub
jmp
mov
push
jmp
xor
jmp
push
mov
sub
mov
sub
jmp
mov
add
jmp
push
mov
mov
pop
pop
shl
shr
inc
push
jmp
push
push
mov
sub
jmp
push
jmp
pop
push
mov
add
xor
pop
push
mov
sub
sub
add
add
jmp
add
add
sub
add
add
push
jmp
pop
pop
and
not
jmp
xchg
pop
jmp
add
jmp
add
add
jmp
push
mov
sub
add
add
pop
push
pop
jmp
mov
push
mov
xor
add
jmp
sub
mov
mov
inc
dec
add
push
jmp
push
mov
push
mov
sub
shr
add
mov
mov
add
add
pop
push
mov
jmp
not
shr
not
jmp
popl
pop
push
jmp
push
pop
jmp
add
sub
sub
jmp
and
neg
inc
and
inc
sub
sub
pop
push
mov
sub
pop
std
push
push
mov
mov
push
mov
add
pop
jmp
pop
mov
push
jmp
add
jmp
add
pop
add
add
pop
push
mov
add
pop
xor
jmp
mov
sub
xor
pop
dec
add
add
pop
sub
xchg
mov
mov
mov
add
add
push
mov
jmp
mov
add
push
mov
push
jmp
mov
sub
add
add
pop
jmp
pop
add
sub
sub
add
add
jmp
mov
add
push
push
mov
addl
pop
sub
mov
push
mov
mov
jmp
pop
dec
sub
push
notl
pop
shr
jmp
xor
shr
sub
add
sub
add
mov
sub
mov
mov
add
jmp
pushl
subl
pushl
pop
add
jmp
add
pop
push
mov
neg
jmp
pop
jmp
pop
jmp
pop
sub
or
pop
push
jmp
mov
jmp
mov
add
popl
mov
mov
push
pushf
jmp
add
pop
jmp
not
inc
xor
add
pop
sub
xor
pop
sub
sub
jmp
mov
mov
add
jmp
mov
add
sub
xchg
mov
mov
jmp
movzbw
jmp
mov
add
subl
jmp
mov
push
mov
add
jmp
mov
xor
jmp
sub
jmp
add
sub
xchg
pop
mov
push
mov
jmp
add
xor
xor
shr
xor
xor
mov
add
push
push
push
mov
add
add
push
mov
shl
jmp
add
mov
pop
add
push
jmp
pop
add
pop
jmp
sub
jmp
pushl
mov
push
mov
jmp
mov
jmp
add
add
xchg
pop
popl
pop
and
xor
jmp
pushl
pop
push
mov
push
pop
push
mov
jmp
mov
pop
mov
add
push
mov
push
mov
jmp
push
mov
mov
sub
mov
mov
jmp
sub
jmp
sub
mov
push
push
pop
add
jmp
mov
pop
push
xorl
mov
add
xor
pushl
jmp
pop
push
mov
add
pop
xchg
pop
add
jmp
shr
xor
jmp
pop
push
mov
push
mov
sub
not
push
mov
xor
sub
jmp
mov
sub
add
jmp
add
mov
add
jmp
mov
add
popl
addl
mov
add
push
push
mov
mov
dec
jmp
pushl
popf
pop
rcrl
pushf
jmp
push
mov
jmp
mov
mov
push
pop
add
add
xchg
pop
shll
jmp
pop
jmp
add
jmp
xor
jmp
mov
add
pop
xor
pop
mov
pop
jmp
pop
shl
jmp
push
jmp
push
mov
mov
pop
mov
jmp
shl
xor
push
mov
sub
sub
add
mov
add
jmp
xor
xor
mov
sub
sub
jmp
push
jmp
add
not
jmp
pop
and
pushl
jmp
and
xor
jmp
xor
push
jmp
xchg
mov
pushl
mov
add
push
push
pop
jmp
push
mov
add
jmp
inc
dec
sub
add
push
jmp
pop
jmp
xor
mov
jmp
and
jmp
push
push
popl
sub
mov
push
mov
not
add
add
push
pop
jmp
mov
push
mov
jmp
pop
sub
pop
pop
addl
jmp
mov
push
mov
push
mov
add
add
sub
mov
jmp
xor
xor
push
mov
not
xor
xor
xor
pop
push
mov
and
mov
add
or
xor
jmp
push
mov
sub
pop
mov
push
mov
jmp
pop
shl
xor
jmp
add
jmp
push
pop
jmp
push
mov
or
pop
push
mov
jmp
push
jmp
add
push
mov
jmp
mov
movsbl
push
mov
jmp
mov
neg
jmp
mov
push
mov
push
mov
mov
shr
jmp
sub
mov
pop
mov
pop
and
pop
add
sub
jmp
push
mov
addl
mov
jmp
mov
jmp
add
sub
pop
jmp
add
pop
xchg
pop
sub
jmp
add
pop
jmp
mov
add
jmp
mov
add
push
jmp
or
pushl
mov
add
add
push
jmp
add
push
push
mov
jmp
push
mov
mov
sub
jmp
and
jmp
mov
sub
mov
push
pop
add
jmp
and
jmp
mov
jmp
mov
or
pop
dec
xor
shl
add
xor
pop
jmp
sub
mov
jmp
mov
push
push
mov
add
jmp
or
push
notl
pop
inc
add
xor
pop
push
push
mov
mov
xor
jmp
inc
sub
sub
inc
jmp
pop
popl
jmp
pop
add
sub
mov
add
mov
jmp
mov
jmp
sub
pop
jmp
add
pop
push
jmp
add
mov
pop
xor
mov
add
sub
add
add
jmp
mov
addl
mov
push
jmp
mov
jmp
xor
jmp
pop
mov
add
pop
mov
add
push
jmp
sub
mov
add
pushl
jmp
mov
mov
or
shl
or
xor
xor
add
pop
jmp
or
push
jmp
xor
xor
xor
push
push
jmp
ret
jmp
push
mov
mov
push
push
push
jmp
add
pop
push
sub
jmp
neg
jmp
push
push
jmp
pop
xor
jmp
mov
sub
mov
addl
pop
push
push
mov
push
mov
mov
pop
add
pop
add
pop
sub
mov
mov
push
mov
add
pop
sub
add
add
sub
pop
jmp
sub
jmp
pop
sub
push
jmp
pop
xor
pop
sub
mov
subl
jmp
mov
add
push
push
push
push
pop
jmp
mov
jmp
push
mov
or
not
jmp
mov
push
mov
add
sub
xchg
pop
mov
push
mov
jmp
mov
jmp
mov
push
push
pop
jmp
add
pop
jmp
mov
or
pop
add
sub
jmp
sub
xchg
pop
mov
push
mov
mov
pop
jmp
pop
push
mov
push
mov
mov
jmp
mov
jmp
and
pop
shr
xor
push
mov
mov
add
push
mov
jmp
xor
pop
mov
jmp
push
mov
jmp
mov
sub
xor
jmp
inc
and
xor
push
mov
mov
pop
jmp
add
mov
add
push
push
pop
add
add
sub
pop
xchg
mov
shll
pushf
jmp
add
sub
add
sub
sub
add
sub
jmp
mov
or
and
add
sub
pop
add
add
add
pop
popw
jmp
pop
xchg
pop
xor
add
add
jmp
pop
jmp
sub
jmp
add
mov
add
jmp
sub
sub
pop
add
push
mov
mov
push
mov
jmp
sub
push
mov
xor
jmp
push
mov
sub
pop
mov
add
jmp
push
mov
shr
not
inc
add
sub
neg
jmp
lods
jmp
mov
sub
pop
sub
add
jmp
jmp
pop
jmp
not
jmp
push
push
mov
mov
mov
add
dec
xchg
xchg
not
xchg
xor
jmp
sub
jmp
add
add
jmp
pop
not
xor
push
jmp
sub
pop
push
push
mov
mov
xor
xor
xor
push
mov
jmp
addl
jmp
shl
jmp
mov
sub
pop
mov
pop
add
sub
sub
add
sub
mov
jmp
mov
push
mov
sub
mov
jmp
mov
neg
push
notl
pop
neg
push
mov
jmp
sub
jmp
mov
sub
mov
push
push
jmp
pop
add
push
mov
jmp
pop
jmp
mov
mov
add
dec
push
push
mov
xor
inc
jmp
mov
jmp
xchg
pop
mov
add
push
mov
add
mov
add
push
jmp
mov
xor
pop
jmp
mov
and
xor
sub
add
add
mov
add
jmp
mov
mov
push
jmp
push
mov
push
pop
add
add
push
pushl
pop
popl
pop
push
push
jmp
mov
mov
push
jmp
mov
jmp
push
push
mov
mov
pop
sub
sub
add
sub
jmp
inc
neg
push
jmp
add
addl
jmp
pop
push
mov
sub
pop
addl
add
push
jmp
push
mov
push
pop
push
mov
add
pop
sub
mov
push
jmp
push
pushl
jmp
push
pop
jmp
pop
pop
xor
mov
push
mov
add
add
xchg
pop
sub
mov
jmp
sub
pop
sub
push
mov
shr
sub
add
add
sub
pop
pop
and
pop
or
je
pushl
xorl
mov
jmp
mov
push
mov
push
jmp
addl
pop
sub
mov
push
mov
mov
jmp
sub
sub
mov
mov
jmp
mov
add
pop
jmp
mov
jmp
mov
jmp
add
add
add
mov
add
pushl
mov
add
jmp
pop
mov
pop
add
pop
jmp
pop
add
pop
xchg
jmp
add
pop
xchg
pop
push
mov
add
jmp
sub
mov
jmp
sub
add
pushl
pop
add
xchg
jmp
add
push
mov
subl
jmp
mov
push
jmp
mov
jmp
push
jmp
shl
push
push
mov
xor
add
neg
jmp
push
mov
add
pop
sub
xchg
pop
mov
notl
pushl
pushl
pushl
pop
add
push
mov
add
jmp
sub
mov
mov
xor
jmp
or
inc
sub
sub
jmp
shl
shl
sub
sub
add
push
push
mov
mov
pop
sub
add
add
pop
jmp
mov
mov
add
pop
jmp
xor
shr
sub
mov
subl
notl
pop
push
mov
dec
push
mov
mov
sub
pop
jmp
pop
xchg
pop
push
jmp
add
neg
add
shl
push
mov
jmp
push
sub
mov
mov
push
mov
not
jmp
sub
pop
jmp
mov
push
mov
push
mov
push
push
push
pop
neg
xor
jmp
pushl
pushl
mov
add
sub
mov
jmp
dec
xor
jmp
add
xchg
mov
push
mov
sub
pop
xchg
jmp
pop
jmp
add
jmp
mov
jmp
add
sub
mov
push
pop
push
mov
sub
add
jmp
mov
sub
sub
jmp
push
mov
mov
pushl
pop
jmp
add
push
mov
add
pop
xchg
mov
or
jne
sub
mov
mov
push
push
pop
push
push
jmp
mov
push
mov
push
push
jmp
pop
push
mov
jmp
add
mov
add
push
pushl
pop
popl
mov
sub
mov
push
pop
add
add
xchg
mov
add
pushf
jmp
xor
jmp
add
push
mov
jmp
jmp
pop
xchg
jmp
push
mov
xor
pop
mov
pop
add
add
add
sub
push
push
jmp
mov
push
push
mov
add
push
mov
add
jmp
push
mov
sub
mov
jmp
mov
sub
mov
jmp
add
mov
add
xor
jmp
mov
add
xor
jmp
add
sub
sub
pop
jmp
mov
pop
add
jmp
pop
add
sub
mov
mov
jmp
pushl
pop
add
add
pop
xchg
mov
or
shl
push
mov
mov
push
mov
push
mov
sub
pop
jmp
push
sub
pop
push
decl
jmp
pushl
jmp
push
jmp
mov
add
popl
mov
mov
push
jmp
add
xchg
pop
and
pushl
jmp
pushl
mov
jmp
add
pop
xchg
jmp
sub
pop
add
xor
xor
xor
mov
pop
add
sub
mov
jmp
push
mov
not
sub
jmp
pop
mov
jmp
xor
xor
add
pop
push
pushl
pop
popl
mov
push
jmp
mov
xor
neg
neg
add
add
jmp
sub
mov
pop
xor
mov
add
jmp
pushl
jmp
pop
neg
xor
add
sub
mov
pop
sub
jmp
not
xor
xor
mov
jmp
pop
add
pop
pop
xchg
pop
jmp
sub
mov
push
mov
push
mov
add
add
xchg
pop
and
pushl
mov
jmp
add
add
mov
add
sub
push
push
push
pop
or
jmp
push
mov
push
mov
xor
jmp
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
add
jmp
xor
sub
not
neg
jmp
pop
xchg
jmp
push
push
mov
push
jmp
not
mov
pop
xchg
and
not
sub
mov
jmp
and
and
sub
mov
jmp
mov
push
jmp
mov
neg
shr
xor
or
dec
push
mov
jmp
push
addl
pushl
jmp
add
sub
mov
pop
mov
pop
shl
push
push
mov
jmp
mov
and
add
jmp
mov
mov
push
mov
dec
add
shr
and
xor
mov
mov
add
push
mov
jmp
and
push
mov
inc
dec
not
xor
jmp
push
mov
add
add
xchg
pop
and
pushl
pop
add
or
je
push
jmp
mul
movzbw
push
mov
sub
mov
addl
pop
push
mov
push
mov
xor
jmp
push
mov
push
mov
sub
add
add
pop
sub
mov
mov
sub
pop
push
mov
jmp
shr
jmp
add
sub
xchg
mov
mov
push
mov
dec
and
dec
push
mov
mov
sub
xor
shl
jmp
mov
add
add
sub
mov
add
xor
pop
jmp
pushl
pop
push
push
pushl
pop
jmp
mov
sub
pop
mov
add
push
push
mov
push
mov
mov
add
pop
mov
pop
jmp
pop
mov
mov
push
push
mov
add
and
xor
neg
sub
mov
pop
xchg
xor
xor
xor
xchg
push
xchg
jmp
pop
xchg
jmp
push
mov
mov
push
mov
push
mov
push
pop
add
jmp
push
mov
mov
push
mov
mov
pop
pushl
pop
push
mov
jmp
push
mov
push
jmp
add
jmp
mov
shl
jmp
mov
sub
mov
push
jmp
sub
dec
or
sub
add
pop
pushl
pop
add
push
mov
push
jmp
decb
pushf
jmp
push
notl
mov
jmp
push
mov
add
jmp
xor
add
pop
xor
xor
xor
jmp
add
add
mov
push
mov
add
add
jmp
mov
not
jmp
pop
mov
pop
pop
push
mov
sub
pop
jmp
push
mov
add
add
jmp
mov
pop
jmp
pop
add
xchg
mov
push
mov
add
pop
jmp
xchg
pop
jmp
add
pop
xchg
mov
xchg
pop
mov
push
mov
push
mov
mov
jmp
pop
add
pop
jmp
mov
jmp
sub
mov
push
mov
mov
mov
sub
sub
add
pop
xchg
not
push
push
pop
pop
push
mov
jmp
add
jmp
neg
add
push
mov
push
jmp
push
mov
jmp
sub
sub
push
jmp
push
push
mov
addl
pop
push
mov
jmp
mov
add
sub
mov
jmp
mov
push
mov
add
pop
add
jmp
sub
sub
jmp
mov
xor
push
push
pop
shl
jmp
pop
push
jmp
sub
add
and
neg
inc
push
mov
mov
xor
mov
add
jmp
sub
add
pop
mov
push
mov
jmp
shl
and
xor
push
mov
add
pop
jmp
xor
add
pop
jmp
sub
jmp
add
shr
shr
jmp
push
push
pop
push
mov
neg
sub
xor
pop
mov
pop
sub
sub
jmp
add
push
pushl
mov
add
popl
mov
sub
mov
add
sub
push
mov
mov
sub
push
mov
jmp
push
mov
not
jmp
sub
jmp
mov
add
jmp
or
add
jmp
pushl
popf
pop
sbb
pushf
jmp
xor
jmp
xchg
shr
push
jmp
pop
jmp
shl
add
sub
mov
add
push
mov
not
shr
sub
sub
jmp
or
push
push
pop
jmp
inc
sub
jmp
push
pop
push
mov
add
pop
push
jmp
pop
pop
jmp
push
mov
xor
shl
dec
not
shr
sub
mov
mov
jmp
xor
xor
mov
mov
jmp
shr
push
mov
shl
shr
dec
xor
and
mov
add
sub
sub
push
mov
mov
pushl
pop
jmp
push
push
mov
jmp
push
mov
sub
pop
mov
jmp
shl
and
sub
add
jmp
mov
push
mov
add
add
xchg
jmp
sub
add
add
push
jmp
xor
add
not
push
mov
jmp
popl
push
jmp
push
mov
add
add
jmp
push
push
pop
push
mov
mov
xor
and
xor
jmp
mov
add
pop
sub
jmp
sub
xchg
pop
mov
push
jmp
sub
jmp
xor
pop
jmp
jmp
pop
push
jmp
add
push
mov
add
pop
xchg
mov
xor
jmp
mov
add
add
inc
add
jmp
push
pop
add
add
xchg
mov
pushl
pop
jmp
sub
jmp
mov
push
push
jmp
mov
sub
jmp
or
pop
jmp
or
sub
mov
jmp
mov
add
jmp
xor
add
xor
dec
or
dec
not
add
push
mov
jmp
mov
jmp
add
sub
xor
xor
xor
jmp
push
push
pop
add
jmp
mov
jmp
pop
push
push
mov
mov
pop
sub
xor
jmp
push
mov
add
pop
push
push
mov
mov
mov
add
pop
sub
mov
jmp
xor
sub
add
jmp
push
mov
mov
push
mov
jmp
push
mov
sub
mov
add
push
jmp
mov
sub
or
mov
add
xor
jmp
mov
addl
popl
addl
mov
sub
jmp
mov
add
add
add
push
mov
pushl
jmp
mov
add
add
xchg
mov
mov
jmp
pushl
mov
push
mov
add
add
xchg
jmp
pushl
jmp
pop
mov
jmp
pop
add
add
mov
add
xor
sub
mov
push
mov
mov
xor
jmp
sub
jmp
add
sub
add
add
jmp
mov
jmp
push
mov
push
jmp
add
sub
xchg
pop
mov
push
push
mov
shl
shr
jmp
mov
add
push
mov
add
jmp
sub
add
pop
pushl
jmp
push
mov
or
pop
sub
mov
mov
add
jmp
sub
mov
mov
neg
xor
inc
neg
push
mov
xor
pop
addl
addl
add
subl
push
mov
jmp
push
push
sub
mov
addl
jmp
pop
jmp
sub
add
add
jmp
not
xchg
jmp
push
pop
mov
add
jmp
not
push
jmp
sub
movzbw
pushw
mov
jmp
add
jmp
pop
mov
pushl
pop
jmp
xor
pop
jmp
inc
sub
mov
pop
sub
pop
jmp
mov
add
add
jmp
add
add
xchg
pop
xchg
jmp
shl
add
mov
pop
xor
pop
shl
shl
or
sub
push
push
mov
jmp
mov
mov
mov
push
jmp
mov
push
sub
push
popl
addl
jmp
not
xchg
pop
xchg
xchg
xchg
not
jmp
add
add
pop
jmp
sub
add
jmp
not
xchg
xor
xor
xor
jmp
pop
shr
and
jmp
shr
sub
mov
mov
add
mov
add
jmp
mov
add
sub
mov
mov
pushw
mov
push
mov
mov
pop
xor
mov
add
jmp
shl
jmp
push
jmp
sub
mov
push
mov
shr
jmp
add
push
jmp
push
mov
jmp
xchg
xor
jmp
not
jmp
pushl
jmp
pop
jmp
add
add
xor
xor
xor
jmp
mov
push
mov
add
sub
mov
push
jmp
mov
sub
jmp
xor
pushl
pop
push
jmp
push
jmp
push
jmp
neg
shr
shr
dec
xor
add
pushl
jmp
add
add
pop
sub
neg
jmp
mov
or
sub
jmp
push
mov
add
add
sub
mov
add
sub
pop
jmp
add
add
sub
add
jmp
mov
mov
add
pop
add
sub
jmp
push
mov
mov
pop
pop
jmp
add
xchg
pop
and
mov
push
jmp
pop
xchg
mov
sub
pushf
jmp
mov
pop
push
push
mov
xor
push
jmp
mov
shr
jmp
mov
addl
mov
push
mov
jmp
add
pop
jmp
add
add
xor
pushl
pushl
pop
jmp
negw
pushf
jmp
sub
push
mov
add
add
sub
sub
sub
pop
jmp
sub
or
pop
jmp
pop
push
mov
add
addl
pop
pushl
pop
add
sub
mov
push
jmp
mov
pop
sub
add
push
mov
sub
add
pop
pop
push
jmp
add
jmp
mov
push
push
push
mov
push
mov
mov
pop
pop
mov
pop
add
and
push
mov
xor
add
shr
jmp
mov
push
mov
push
mov
mov
sub
pop
and
pop
shl
sub
shr
and
jmp
dec
jmp
pop
add
pop
add
xchg
pop
add
pushl
pop
jmp
pop
sub
jmp
sub
xchg
pop
jmp
not
jmp
xor
sub
jmp
sub
mov
jmp
sub
sub
mov
mov
and
add
push
mov
jmp
mov
add
add
xor
xor
xor
jmp
push
push
push
jmp
pop
add
add
jmp
sub
jmp
pop
mov
addl
mov
push
jmp
add
jmp
shl
dec
push
jmp
push
mov
jmp
sub
mov
mov
add
add
xchg
pop
mov
add
add
push
push
mov
mov
jmp
pop
add
pop
pop
push
push
mov
mov
pop
add
dec
jmp
add
sub
jmp
push
jmp
xchg
pop
mov
pushl
mov
add
popl
mov
sub
mov
push
push
mov
mov
sub
mov
pop
jmp
pop
push
mov
jmp
add
add
sub
push
mov
jmp
pop
mov
jmp
add
not
dec
push
mov
xor
pop
xor
pop
mov
pop
xchg
push
jmp
mov
jmp
pop
push
jmp
push
mov
jmp
mov
and
push
mov
sub
push
jmp
sub
add
add
add
jmp
push
mov
jmp
neg
and
xor
jmp
mov
jmp
pop
push
mov
add
jmp
push
mov
push
push
mov
mov
sub
pop
shr
neg
dec
jmp
add
jmp
push
push
mov
jmp
mov
pop
sub
mov
pop
addl
jmp
or
pop
dec
push
mov
xor
pop
xor
mov
jmp
inc
not
and
add
and
sub
inc
shr
push
mov
sub
not
shl
not
jmp
push
jmp
shl
neg
or
sub
add
mov
add
jmp
add
pushl
jmp
mov
jmp
push
mov
mov
jmp
add
push
mov
jmp
mov
sub
pop
push
mov
inc
shr
xor
add
jmp
mov
or
jmp
pop
popl
mov
mov
push
pushf
jmp
sub
jmp
sub
mov
mov
push
jmp
pop
jmp
mov
add
sub
xchg
pop
mov
mov
add
sub
xchg
pop
mov
push
jmp
sub
mov
pop
jmp
lods
add
push
mov
add
sub
xchg
jmp
sub
shr
xor
xor
jmp
shl
shl
push
push
mov
mov
jmp
and
pushl
mov
push
push
pop
push
mov
xor
add
pop
push
mov
push
jmp
mov
add
sub
xor
xor
xor
pop
mov
pop
push
mov
jmp
mov
sub
mov
add
add
add
mov
push
mov
add
push
mov
jmp
or
jmp
sub
pop
add
add
jmp
mov
sub
push
popl
push
push
mov
add
jmp
pushl
jmp
sub
mov
add
add
add
push
mov
sub
add
sub
pop
jmp
mov
push
mov
jmp
sub
pop
add
pop
pop
jmp
add
xchg
pop
pushl
mov
add
push
mov
add
sub
mov
jmp
mov
shl
inc
and
inc
push
jmp
mov
inc
xor
push
jmp
mov
add
add
xchg
pop
sub
pushl
mov
push
mov
add
push
mov
jmp
mov
mov
jmp
shl
add
add
xor
mov
mov
add
add
sub
and
sub
push
jmp
mov
sub
add
jmp
pop
xchg
pop
mov
push
pop
and
mov
push
push
pop
push
mov
add
mov
jmp
mov
mov
jmp
push
mov
sub
mov
sub
mov
mov
jmp
pop
xchg
pop
sub
push
mov
sub
jmp
xor
mov
pushl
pop
add
dec
shr
jmp
push
jmp
push
mov
add
jmp
mov
push
mov
jmp
push
mov
add
sub
xchg
pop
jmp
pop
push
mov
sub
dec
shl
jmp
not
xor
add
pushl
pop
add
mov
pushl
pop
add
xor
pushl
pop
push
mov
add
jmp
add
xchg
jmp
xor
jmp
mov
or
jmp
mov
xor
jmp
mov
mov
push
jmp
xor
mov
pop
jmp
mov
mov
jmp
mov
not
neg
jmp
not
jmp
dec
sub
jmp
add
add
xchg
mov
add
xchg
mov
test
pushf
jmp
sub
pop
push
mov
add
jmp
pop
jmp
bts
pushf
jmp
pop
jmp
pop
jmp
pop
not
shl
jmp
xor
xor
xor
pop
xor
xor
xor
mov
mul
push
mov
push
pushf
jmp
mov
jmp
xchg
pop
jmp
add
add
push
mov
xor
add
sub
sub
pop
pop
sub
mov
pushl
pop
jmp
popl
pop
mov
pushl
mov
add
add
sub
mov
sub
mov
mov
push
pop
pop
and
jmp
mov
jmp
mov
pushl
mov
push
mov
push
pop
push
mov
sub
shr
jmp
jmp
xor
mov
div
push
mov
push
pushf
jmp
push
mov
push
push
mov
xor
pushl
pop
add
mov
add
push
push
push
jmp
mov
pop
sub
sub
add
pushl
mov
add
add
jmp
pop
popl
mov
mov
jmp
sub
mov
push
mov
jmp
mov
jmp
add
inc
xor
add
add
sub
shr
and
jmp
add
mov
add
add
jmp
xor
add
add
jmp
xor
jmp
mov
not
xor
mov
pop
inc
jmp
xor
pop
and
mov
add
xchg
xor
jmp
add
sub
sub
push
jmp
pop
jmp
add
xor
jmp
mov
add
pop
dec
push
notl
jmp
shl
xor
mov
pop
jmp
pop
mov
pop
and
pop
jmp
add
add
xchg
pop
push
jmp
or
neg
inc
sub
dec
jmp
mov
mov
add
jmp
push
mov
jmp
push
mov
push
mov
mov
jmp
mov
sub
jmp
xor
inc
shl
add
mov
pop
mov
pop
add
jmp
mov
push
mov
jmp
push
jmp
neg
dec
inc
inc
jmp
mov
jmp
mov
push
push
pop
jmp
not
jmp
sub
push
jmp
sub
mov
pop
sub
add
xor
add
mov
add
mov
add
push
pop
pop
add
jmp
xchg
dec
sub
jmp
add
jmp
add
jmp
mov
jmp
push
mov
jmp
pushl
pop
add
and
pop
jmp
sub
jmp
popl
pop
jmp
shl
jmp
add
pop
xchg
jmp
xor
jmp
pop
add
pop
jmp
mov
jmp
push
jmp
mov
mov
jmp
xchg
push
xchg
jmp
sub
mov
add
jmp
mov
or
jmp
push
mov
add
push
mov
add
pop
add
add
sub
push
mov
add
sub
push
pushl
jmp
xchg
sub
mov
push
mov
jmp
push
mov
jmp
neg
push
mov
jmp
mov
add
add
xchg
pop
push
mov
jmp
mov
jmp
sub
jmp
push
mov
jmp
sub
xchg
pop
mov
push
mov
push
mov
not
inc
jmp
add
mov
push
mov
mov
add
add
jmp
mov
jmp
mov
jmp
xor
mov
add
xchg
neg
xchg
shl
neg
push
sub
jmp
jmp
add
jmp
add
xchg
jmp
push
mov
add
sub
xchg
pop
jmp
mov
xor
pop
push
mov
add
sub
sub
pop
push
jmp
add
mov
jmp
pop
push
mov
add
push
mov
jmp
inc
xor
jmp
mov
dec
add
sub
pop
add
mov
add
xchg
pop
shrb
pushf
jmp
pushl
pop
add
push
mov
add
pop
xchg
mov
shr
push
jmp
mov
mov
push
mov
jmp
add
jmp
mov
jmp
mov
add
sub
xchg
pop
jmp
push
jmp
push
mov
sub
add
push
mov
mov
jmp
mov
jmp
mov
mov
push
mov
xor
sub
pop
push
mov
mov
not
not
jmp
sub
add
pop
jmp
pop
sub
pop
popl
addl
jmp
mov
mov
and
pop
jmp
add
jmp
add
jmp
add
mov
pushl
jmp
mov
push
lahf
or
pop
lahf
or
mov
lahf
or
gs
or
into
sahf
or
lcall
xor
dec
sahf
or
or
sahf
or
dec
lahf
or
xchg
or
mov
or
lea
or
dec
sahf
or
push
lahf
or
cmp
or
xor
or
mov
or
inc
lahf
or
dec
sahf
or
stc
sahf
or
mov
or
jl
or
jecxz
or
pop
lahf
or
and
lahf
or
ja
or
jnp
or
dec
lahf
or
cmp
or
lahf
sahf
or
sahf
or
xor
lahf
or
mov
lahf
or
loope
or
dec
lahf
or
dec
sahf
or
cmp
or
arpl
or
cmp
or
in
sahf
or
or
or
rcrb
mov
ds
or
cmc
sahf
or
cmp
or
jg
or
mov
or
pop
sahf
or
setg
mov
or
outsl
lahf
or
ss
or
pop
lahf
or
daa
lahf
or
pop
lahf
or
push
lahf
or
mov
lahf
or
xor
or
out
or
cli
sahf
or
repz
or
dec
sahf
or
mov
or
scas
sahf
or
jge
or
ret
sahf
or
dec
sahf
or
jno
or
data16
or
mov
or
cmp
or
adc
or
xor
sahf
or
data16
or
ret
sahf
or
sbb
or
xchg
sahf
or
imul
or
sahf
or
mov
sahf
or
test
sahf
or
sbb
lahf
or
inc
lahf
or
insb
sahf
or
inc
lahf
or
inc
lahf
or
lcall
xchg
lahf
or
sahf
or
pop
lahf
or
push
sahf
or
fs
or
jge
or
jb
or
addr16
or
addr16
or
mov
or
mov
or
inc
sahf
or
mov
lahf
or
pop
sahf
or
dec
sahf
or
lea
or
inc
sahf
or
sbbb
jg,pn
or
dec
lahf
or
daa
lahf
or
and
or
in
or
imul
or
cwtl
sahf
or
cmc
sahf
or
jmp
lahf
or
cltd
sahf
or
jp
or
repnz
or
dec
lahf
or
sahf
or
fistpl
or
xlat
sahf
or
ss
or
pop
lahf
or
cmp
sahf
or
data16
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
push
mov
mov
jmp
mov
push
pushw
pop
jmp
add
xchg
pop
jmp
xor
sub
or
jmp
push
mov
shl
add
sub
jmp
pop
jmp
pop
sub
mov
mov
sub
mov
jmp
xor
mov
pop
inc
xor
xor
pop
add
add
add
sub
pop
push
mov
push
mov
xor
or
inc
jmp
and
jmp
mov
jmp
push
push
push
pop
not
sub
mov
pop
mov
pop
add
add
add
sub
jmp
mov
push
mov
add
pop
push
mov
add
add
sub
jmp
xchg
mov
add
not
sub
neg
sub
add
push
jmp
mov
inc
sub
add
pop
sub
mov
push
pop
add
push
mov
sub
pop
jmp
pop
push
mov
jmp
mov
push
mov
push
push
jmp
neg
neg
push
mov
xor
add
pop
add
jmp
dec
push
mov
push
mov
add
sub
xchg
jmp
add
push
sub
mov
push
jmp
pop
jmp
add
pop
pop
push
mov
xor
sub
shr
push
mov
jmp
add
add
push
pushl
pop
popl
jmp
sub
add
add
jmp
mov
jmp
inc
and
add
sub
pop
xor
mov
add
push
jmp
sub
pop
push
mov
push
jmp
add
add
xchg
jmp
push
sub
mov
mov
and
shr
sub
jmp
push
jmp
push
popl
addl
pushl
mov
push
sub
mov
jmp
add
xchg
jmp
push
mov
sub
pop
shl
not
jmp
mov
add
xchg
pop
shr
xor
xor
xor
dec
jmp
mov
add
add
xor
xor
xor
jmp
add
pop
mov
jmp
mov
mov
mov
pop
push
mov
mov
pop
pop
mov
add
pop
add
not
push
mov
sub
pop
shl
push
jmp
pop
jmp
add
pop
mov
push
push
pop
add
push
jmp
addl
pop
push
push
jmp
sub
mov
push
jmp
mov
xor
pushl
mov
jmp
xor
xor
jmp
add
pop
jmp
push
mov
mov
mov
add
add
pop
add
and
pop
jmp
mov
push
mov
add
add
xchg
pop
or
je
pushl
addl
jmp
pop
jmp
mov
mov
xor
mov
add
jmp
pop
sub
pop
shr
shr
xor
push
push
pop
shl
and
shl
jmp
add
sub
mov
pushl
pushl
pop
jmp
mov
add
or
jmp
neg
dec
sub
add
dec
jmp
push
mov
add
sub
xchg
pop
jmp
sub
pop
jmp
sub
mov
jmp
pop
sub
push
mov
jmp
mov
push
mov
jmp
pop
jmp
xor
dec
jmp
pushl
jmp
add
add
pop
add
xchg
jmp
shr
add
inc
push
mov
dec
shr
jmp
pop
xor
jmp
shr
jmp
pushl
pop
add
add
xor
xor
xor
pop
push
jmp
pushl
mov
add
jmp
pushw
mov
jmp
sub
shr
inc
shr
push
mov
xor
jmp
sub
push
addl
jmp
mov
add
jmp
push
mov
pushl
pushl
pop
push
mov
add
sub
xchg
pop
jmp
add
jmp
push
mov
jmp
xor
sub
xor
mov
add
jmp
add
jmp
mov
push
mov
add
jmp
sub
pop
add
push
mov
add
pop
push
mov
xor
shr
not
push
mov
jmp
mov
add
jmp
add
xchg
jmp
add
pop
add
jmp
mov
pop
add
mov
push
mov
push
pop
push
mov
add
jmp
add
push
mov
neg
sub
inc
sub
sub
add
mov
add
pushl
mov
add
add
movzbl
pushl
push
push
pop
sub
mov
push
pop
jmp
push
mov
sub
add
add
pop
push
jmp
pop
add
add
add
sub
sub
add
pushl
mov
add
jmp
mov
or
shl
or
xor
add
jmp
not
sub
jmp
mov
sub
pop
sub
sub
add
add
sub
mov
push
mov
jmp
add
sub
mov
mov
jmp
add
pushl
pop
jmp
mov
mov
sub
pop
mov
add
push
xchg
neg
xchg
mov
add
push
mov
shr
jmp
mov
push
mov
mov
push
jmp
mov
jmp
mov
add
xchg
pop
mov
push
push
mov
add
jmp
shr
xchg
not
xchg
push
mov
not
sub
or
pop
inc
xor
add
pop
add
push
jmp
mov
jmp
pop
neg
push
mov
xor
not
inc
jmp
pop
jmp
shr
inc
xor
add
pop
pop
push
push
mov
mov
pop
add
pop
sub
sub
jmp
mov
jmp
pop
shr
jmp
mov
add
mov
add
push
mov
add
pop
add
push
jmp
sub
pop
sub
pop
push
mov
xor
add
pop
jmp
sub
jmp
popl
pop
mov
jmp
inc
push
mov
push
mov
sub
pop
sub
xor
shr
shl
sub
xor
xor
jmp
dec
jmp
mov
sub
sub
add
add
push
mov
add
jmp
mov
xor
pop
add
jmp
pushl
jmp
and
mov
jmp
neg
add
jmp
mov
push
mov
mov
add
sub
shr
inc
and
sub
xor
or
pop
push
jmp
pushl
pop
add
jmp
mov
rolb
pushf
jmp
push
jmp
shr
shr
push
push
pop
add
and
pushl
jmp
push
mov
sub
pop
sub
add
mov
add
sub
add
jmp
mov
jmp
dec
sub
sub
pop
sub
mov
add
mov
push
mov
jmp
sub
mov
mov
add
jmp
pushl
jmp
add
sub
mov
sub
jmp
mov
add
add
xchg
pop
push
mov
mov
shr
jmp
add
pop
add
sub
push
push
push
pop
dec
shl
jmp
push
jmp
mov
jmp
mov
add
jmp
inc
jmp
xor
sub
sub
mov
jmp
sub
pop
pop
xchg
mov
shlb
pushf
jmp
mov
push
mov
push
mov
sub
inc
jmp
add
sub
push
pushl
jmp
mov
pop
push
mov
inc
dec
jmp
add
sub
jmp
mov
jmp
add
jmp
mov
mov
add
jmp
mov
pop
jmp
mov
xor
shl
jmp
push
mov
add
pop
sub
mov
add
xchg
pop
sub
mov
mov
push
mov
jmp
add
push
mov
add
pop
jmp
pop
add
jmp
push
mov
mov
pop
sub
not
jmp
mov
jmp
mov
pushw
jmp
add
jmp
mov
mov
mov
pop
sub
sub
pop
jmp
add
jmp
push
push
push
popl
push
mov
add
pop
jmp
mov
jmp
pop
push
mov
add
sub
xchg
jmp
sub
pop
jmp
mov
add
jmp
xor
jmp
sub
push
jmp
mov
mov
jmp
add
push
push
mov
inc
sub
mov
pop
add
mov
jmp
sub
pop
or
pop
shl
push
push
mov
jmp
mov
mov
push
mov
or
pop
inc
inc
push
mov
add
pop
add
sub
mov
mov
add
pop
jmp
xchg
mov
movsbl
push
mov
mov
jmp
mov
jmp
pushl
pop
add
xor
xor
jmp
add
push
jmp
notl
pushl
pop
jmp
add
pop
jmp
pop
add
xor
xor
xor
pop
push
mov
mov
sub
add
jmp
xor
pop
sub
neg
sub
mov
pushl
pop
add
xor
and
add
push
mov
sub
xor
pop
add
add
sub
pop
push
mov
add
sub
pop
push
jmp
mov
push
mov
jmp
mov
jmp
pushl
jmp
push
mov
mov
add
mov
push
mov
push
jmp
add
mov
pop
jmp
mov
pop
inc
jmp
mov
sub
pop
sub
add
add
add
pop
jmp
not
xchg
pop
xor
xor
xor
mov
jmp
mov
add
pop
pop
add
xor
jmp
pop
xchg
mov
pushl
mov
jmp
mov
sub
pop
movzbl
jmp
add
push
mov
sub
mov
push
mov
and
jmp
pushl
popf
pop
rcll
pushf
jmp
add
jmp
push
mov
or
and
or
jmp
push
mov
pushl
pop
popl
mov
push
mov
sub
mov
sub
jmp
push
mov
sub
jmp
pop
add
xor
add
xor
mov
jmp
mov
mov
mov
jmp
add
xchg
pop
jmp
xor
xor
xor
pop
mov
mov
jmp
lods
jmp
push
mov
shl
shl
inc
add
mov
pop
xor
add
sub
sub
add
push
mov
inc
sub
sub
pop
pushl
pop
add
shr
jmp
pop
push
pop
pushl
pop
push
push
pop
push
mov
sub
add
push
mov
jmp
shr
or
add
jmp
push
pushl
pop
add
add
pop
push
mov
push
mov
jmp
mov
mov
mov
add
dec
push
mov
mov
jmp
push
jmp
add
jmp
pop
push
mov
add
jmp
add
push
mov
dec
shl
not
shl
sub
sub
mov
add
pushl
pop
push
mov
push
mov
add
pop
push
jmp
sub
pop
sub
jmp
mov
jmp
push
mov
sub
and
jmp
mov
add
jmp
push
mov
add
add
xor
xor
xor
pop
sub
mov
add
jmp
sub
xchg
pop
dec
add
sub
jmp
mov
pop
jmp
push
mov
add
jmp
mov
sub
not
inc
add
mov
pop
shr
and
shl
xor
jmp
add
pop
mov
push
push
pop
add
add
xchg
pop
push
mov
mov
jmp
pop
add
push
push
jmp
push
mov
and
pop
inc
add
jmp
push
push
mov
mov
sub
pop
shl
jmp
pop
jmp
mov
jmp
pushl
mov
add
jmp
push
mov
add
add
jmp
pop
sub
pop
push
mov
or
pop
shl
xchg
not
xchg
jmp
mov
pop
pop
push
mov
jmp
add
mov
add
xor
push
mov
jmp
mov
add
jmp
mov
push
push
push
pop
add
push
mov
sub
pop
jmp
mov
pushl
pop
push
mov
jmp
mov
mov
sub
mov
jmp
pop
jmp
mov
jmp
pop
add
jmp
push
push
pop
mov
jmp
push
jmp
push
push
pop
sub
add
jmp
add
push
mov
jmp
mov
pop
sub
pop
sub
mov
pushl
mov
add
jmp
xchg
pop
mov
mov
dec
sub
add
and
and
push
mov
xor
pop
jmp
inc
jmp
mov
pushl
jmp
pop
add
pop
add
xchg
mov
add
jmp
pop
jmp
add
sub
xchg
pop
mov
mov
sub
mov
mov
jmp
pop
inc
neg
push
jmp
pushl
pop
popl
jmp
mov
jmp
pop
shl
jmp
push
mov
push
mov
jmp
jmp
xor
xor
xor
pop
jmp
add
jmp
push
mov
inc
neg
and
add
jmp
add
jmp
add
neg
xor
jmp
add
pop
push
mov
add
pop
xchg
pop
add
push
jmp
pop
jmp
subl
jmp
push
jmp
pop
sub
jmp
dec
jmp
add
mov
jmp
mov
mov
jmp
shl
sub
jmp
push
mov
jmp
add
pop
xor
xor
xor
pop
jmp
xchg
mov
jmp
mov
add
xchg
not
xchg
jmp
pop
xor
or
sub
add
pop
jmp
add
pop
add
xchg
pop
sub
mov
add
push
pushl
jmp
pop
add
add
sub
add
add
jmp
xchg
pop
push
mov
mov
push
mov
jmp
mov
mov
dec
xor
add
shl
sub
sub
pop
jmp
mov
push
jmp
xor
xor
mov
push
mov
add
add
xor
xor
xor
pop
push
pop
pushl
pop
add
push
mov
mov
jmp
pop
shr
add
or
jmp
mov
pushl
pop
jmp
pop
push
mov
jmp
mov
push
mov
jmp
pushl
pop
push
mov
add
jmp
pushl
pop
jmp
xchg
jmp
add
jmp
xor
mov
pop
pop
add
jmp
and
sub
not
jmp
pop
pushw
jmp
pop
jmp
sub
sub
add
jmp
mov
add
pop
or
jmp
push
mov
sub
jmp
mov
pop
shl
or
shr
jmp
lods
xor
push
sub
mov
push
jmp
sub
mov
pushl
mov
jmp
add
xchg
pop
jmp
add
add
inc
xor
add
sub
sub
pop
xor
pop
jmp
push
jmp
add
pop
xchg
jmp
shr
xor
add
pop
push
pushl
pop
popl
mov
idiv
push
mov
push
pushf
jmp
mov
or
add
push
addl
pop
sub
jmp
sub
add
jmp
mov
pop
jmp
mov
add
pop
push
jmp
shl
or
jmp
xor
pushw
mov
notb
jmp
add
sub
jmp
push
mov
sub
add
add
pop
jmp
pop
add
sub
mov
mov
xor
add
pop
add
sub
sub
jmp
jmp
pop
add
pop
xchg
pop
popl
sub
jmp
mov
addl
popl
push
mov
subl
add
addl
jmp
pop
sub
sub
sub
add
add
add
pushl
pop
jmp
sub
pop
sub
pushw
jmp
pop
popl
mov
shl
push
push
jmp
not
xor
xor
jmp
mov
push
mov
push
mov
jmp
add
add
push
jmp
pop
jmp
lods
push
mov
add
add
sub
pop
jmp
mov
add
jmp
addl
pop
sub
push
jmp
xchg
pop
push
jmp
notl
pop
xor
xor
xor
jmp
mov
pop
push
mov
add
pop
add
sub
mov
sub
mov
mov
jmp
xchg
pop
mov
push
mov
add
jmp
pop
push
push
pop
push
jmp
add
push
mov
push
mov
mov
or
push
push
mov
mov
pop
jmp
mov
jmp
sub
push
mov
sub
shr
add
sub
jmp
add
pop
sub
xchg
jmp
push
mov
add
mov
add
jmp
push
push
jmp
add
push
mov
dec
and
xor
push
mov
and
pop
add
sub
pop
jmp
negw
pushf
jmp
push
mov
add
push
jmp
mov
jmp
mov
jmp
shl
dec
xchg
not
jmp
pop
mov
pop
xor
jmp
pop
subl
subl
add
push
mov
add
jmp
xor
mov
pop
add
pop
sub
jmp
add
jmp
push
mov
jmp
add
add
pop
jmp
push
push
pop
push
push
jmp
mov
add
add
add
add
sub
sub
pushl
jmp
mov
mov
or
sub
push
mov
and
pop
inc
neg
add
xor
pop
xor
xor
sub
pop
sub
push
mov
add
add
sub
pop
mov
push
jmp
pop
xor
pushl
pop
jmp
mov
push
push
jmp
mov
push
jmp
mov
mov
pop
add
pop
jmp
mov
jmp
push
mov
jmp
mov
sub
pop
xchg
pop
mov
notl
jmp
push
push
pop
pop
xor
jmp
sub
jmp
pop
popl
mov
mov
mov
add
add
xor
jmp
pop
jmp
pop
push
pushl
jmp
pop
mov
notl
mov
push
mov
jmp
pop
mov
movzbw
jmp
pushl
pop
push
jmp
xor
xor
mov
sub
mov
jmp
or
and
inc
sub
mov
pop
jmp
add
mov
add
jmp
add
pop
add
xchg
pop
add
xchg
mov
xor
push
jmp
mov
add
add
xchg
pop
pushl
pushl
pushl
pop
jmp
pushl
jmp
mov
push
jmp
xor
add
mov
add
popl
addl
jmp
push
mov
mov
pop
or
add
xor
add
mov
jmp
push
pop
add
jmp
mov
xor
pop
jmp
push
mov
sub
mov
mov
dec
jmp
mov
jmp
and
add
push
pop
mov
add
jmp
pop
xor
xor
xor
mov
jmp
mov
push
push
pop
jmp
add
sub
sub
push
jmp
mov
add
sub
push
pushl
pop
jmp
sub
sub
add
add
pop
jmp
pop
inc
xchg
neg
push
mov
add
mov
add
mov
jmp
mov
jmp
mov
add
dec
push
mov
sub
mov
mov
and
sub
mov
mov
add
push
jmp
xor
add
add
sub
mov
add
push
push
jmp
sub
pop
push
push
mov
jmp
add
mov
add
add
xchg
mov
mov
jmp
sub
mov
mov
add
jmp
mov
push
push
pop
add
push
push
push
pop
add
shl
shl
sub
mov
pop
jmp
not
add
add
xor
jmp
pop
mov
pop
jmp
inc
shl
jmp
pop
mov
jmp
add
xchg
jmp
pop
jmp
pop
sub
jmp
mov
jmp
pop
or
jne
push
push
mov
mov
jmp
mov
jmp
sub
sub
mov
add
jmp
xor
mov
jmp
xor
inc
add
add
pop
jmp
mov
add
push
mov
sub
mov
mov
dec
jmp
jmp
mov
push
mov
mov
pop
push
mov
jmp
push
mov
add
add
sub
mov
add
jmp
shr
shr
jmp
mov
pushl
pop
popl
pop
push
push
mov
mov
add
pop
jmp
mov
jmp
push
jmp
add
pop
push
sub
mov
mov
mov
sub
jmp
mov
add
mov
push
push
mov
addl
mov
add
push
mov
add
pop
push
mov
add
pop
xchg
jmp
xchg
pop
add
jmp
pop
add
pop
pushw
jmp
shl
jmp
and
jmp
jmp
add
xchg
pop
push
push
mov
add
sub
mov
mov
push
mov
sub
jmp
xor
add
pop
push
mov
mov
add
pop
add
pop
jmp
mov
add
push
mov
jmp
mov
jmp
movzbl
jmp
popa
ret
jmp
pop
xor
jmp
dec
jmp
sub
pop
add
jmp
or
sub
add
mov
jmp
sub
xchg
mov
mov
push
push
mov
mov
pop
mov
pop
push
jmp
mov
add
jmp
xor
jmp
add
add
xchg
jmp
add
jmp
pushl
pop
push
mov
push
pop
sub
mov
mov
sub
sub
shr
sub
dec
push
addl
sub
subl
pop
not
add
add
jmp
add
push
jmp
shl
jmp
xor
sub
xor
mov
pop
jmp
jmp
xchg
mov
mov
push
mov
jmp
add
push
mov
sub
pop
sub
add
pop
push
mov
push
mov
jmp
mov
jmp
pop
jmp
addl
pop
sub
jmp
add
add
pushl
pop
sub
mov
mov
jmp
pushl
mov
jmp
pushl
pop
push
jmp
add
xor
pop
and
pop
dec
xor
sub
and
shr
inc
xor
sub
pop
push
push
mov
mov
pop
xor
and
push
mov
xor
pop
jmp
add
mov
pop
jmp
pop
push
mov
add
pop
push
mov
add
jmp
pop
add
jmp
push
push
pop
xor
mov
pop
add
add
jmp
pop
xchg
pop
jmp
sub
jmp
sub
neg
jmp
pop
jmp
push
pushl
pushl
pop
add
push
mov
push
pop
push
mov
push
mov
add
pushl
pop
push
mov
add
jmp
xor
pop
push
push
mov
mov
mov
add
jmp
mov
jmp
mov
push
pop
add
add
jmp
sub
mov
jmp
mov
add
and
mov
add
jmp
mov
push
jmp
add
pop
and
neg
xor
push
xorl
pop
xor
pop
sub
sub
mov
jmp
mov
jmp
xor
xor
jmp
xchg
pop
push
mov
push
mov
add
add
jmp
lods
push
mov
push
mov
dec
dec
jmp
push
jmp
sub
and
jmp
sub
jmp
mov
push
jmp
push
mov
not
add
xchg
jmp
mov
shr
and
jmp
pop
xchg
jmp
push
mov
and
or
jmp
pop
push
pushl
jmp
inc
and
jmp
mov
mov
jmp
add
add
sub
pop
add
jmp
mov
mov
push
mov
add
add
xchg
pop
not
add
jmp
pop
xor
jmp
mov
jmp
push
mov
sub
add
pop
add
jmp
push
mov
push
mov
mov
pop
or
sub
jmp
mov
sub
pop
xchg
pop
jmp
add
jmp
sub
pop
sub
add
pop
push
pushl
pop
popl
mov
mov
popl
jmp
add
xor
xor
xor
pop
add
jmp
sub
shr
push
mov
dec
xor
xor
pop
push
pop
pop
sub
mov
jmp
sub
add
add
sub
add
mov
add
jmp
mov
add
pushl
jmp
push
xorl
pop
xor
pop
pop
jmp
pop
sub
add
add
sub
mov
add
push
pushl
pop
popl
jmp
mov
mov
sub
pop
jmp
sub
pop
add
pop
sub
jmp
addl
mov
add
add
jmp
add
pop
sub
add
add
push
mov
sub
jmp
push
mov
push
pop
sub
pop
jmp
pop
add
jmp
add
add
mov
add
sub
mov
add
push
mov
jmp
mov
add
mov
add
jmp
pop
add
pop
add
pop
sub
xchg
mov
mov
jmp
pop
add
push
mov
shr
xor
add
mov
push
mov
mov
push
mov
add
pop
add
jmp
mov
add
jmp
sub
jmp
xor
add
mov
add
push
mov
sub
jmp
push
push
mov
addl
mov
push
mov
add
jmp
pushl
pop
add
xor
pop
sub
shr
jmp
mov
pop
pop
jmp
pop
mov
jmp
shr
push
decl
jmp
pop
inc
add
add
jmp
xor
jmp
push
mov
xor
pop
jmp
push
pushl
mov
add
sub
mov
mov
add
jmp
pushl
pop
popl
pop
or
pushf
jmp
sub
pop
not
push
mov
sub
add
jmp
sub
subl
pop
push
addl
sub
push
mov
sub
pop
jmp
mov
jmp
mov
add
jmp
add
push
pop
pushl
mov
add
add
push
jmp
add
sub
sub
pushw
mov
push
mov
jmp
or
inc
dec
sub
sub
pop
sub
jmp
add
pop
push
mov
not
inc
and
add
add
pop
jmp
add
jmp
pop
add
sub
mov
subl
jmp
push
mov
add
add
xchg
jmp
shr
jmp
and
sub
jmp
pop
push
jmp
add
add
pop
add
jmp
push
jmp
inc
add
sub
pop
neg
jmp
dec
xor
mov
pop
push
subw
pop
add
mov
add
sub
jmp
mov
sub
jmp
sub
sub
add
add
jmp
pop
shl
sub
add
push
mov
add
push
push
pop
push
mov
or
pop
push
mov
xor
jmp
pushl
pop
add
push
mov
add
jmp
mov
add
jmp
sub
push
sub
pop
jmp
add
jmp
sub
pop
jmp
add
add
jmp
mov
jmp
push
mov
push
mov
sub
add
push
mov
add
pop
mov
add
push
mov
mov
add
pop
jmp
pop
mov
mov
add
pop
add
mov
jmp
pop
xchg
not
xchg
jmp
add
pushl
jmp
pop
mov
mov
add
mov
push
jmp
push
jmp
push
mov
and
xor
not
xor
sub
pop
add
push
mov
add
pop
add
jmp
pop
xor
mov
mov
add
and
not
add
sub
sub
add
pop
add
jmp
xor
xor
xor
mov
pushw
jmp
add
add
xchg
jmp
add
mov
add
jmp
push
mov
jmp
mov
push
mov
add
mov
add
sub
mov
mov
add
pop
xor
xor
xor
mov
xor
push
subl
pop
add
mov
add
jmp
push
jmp
xor
add
pop
and
sub
mov
pop
jmp
mov
sub
and
not
shr
jmp
pop
push
mov
shl
jmp
mov
add
push
jmp
shlw
pushf
jmp
pop
add
jmp
mov
push
mov
push
jmp
pop
add
jmp
mov
push
mov
mov
xor
pop
push
notl
pop
neg
add
and
pop
push
mov
mov
xor
jmp
pop
sub
xchg
pop
mov
jmp
xor
pop
jmp
mov
push
jmp
pushl
jmp
sub
jmp
sub
add
pop
jmp
mov
mov
sub
sub
add
jmp
pop
xchg
mov
mov
jmp
btr
pushf
jmp
xor
jmp
mov
jmp
mov
addl
jmp
pop
popl
mov
push
mov
push
mov
add
mov
sub
mov
jmp
pop
xor
pop
add
push
push
jmp
xor
xor
xor
pop
and
mov
push
mov
add
sub
xor
xor
xor
mov
mov
jmp
push
mov
mov
push
mov
dec
push
mov
xor
pop
push
mov
xor
add
sub
sub
add
sub
mov
add
sub
mov
push
mov
push
jmp
add
xchg
jmp
xchg
mov
mov
pushl
mov
jmp
pushl
jmp
add
xchg
pop
jmp
add
push
pushw
mov
add
xor
mov
jmp
pushl
mov
add
sub
jmp
mov
add
sub
add
add
sub
pushl
jmp
pop
xor
pop
push
mov
or
pop
push
push
mov
push
pop
pop
and
pop
add
push
jmp
or
jmp
mov
and
add
sub
dec
add
xor
jmp
push
mov
add
jmp
mov
mov
sub
mov
mov
push
push
mov
push
mov
jmp
mov
push
jmp
sub
xor
xor
xor
pop
mov
push
pop
push
jmp
push
mov
push
mov
not
neg
xor
sub
mov
mov
xor
mov
add
add
jmp
pop
jmp
subl
subl
pushl
jmp
push
mov
jmp
sub
pop
add
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
mov
shlw
pushf
jmp
push
push
pop
jmp
sub
add
mov
push
push
pop
jmp
mov
sub
mov
mov
jmp
push
mov
jmp
shl
or
add
sub
pop
sub
add
jmp
neg
and
add
jmp
push
mov
add
sub
xchg
pop
mov
mov
addl
add
subl
pop
jmp
push
jmp
mov
push
jmp
pop
xor
pop
jmp
mov
add
jmp
push
mov
push
jmp
mov
pop
sub
jmp
add
pushl
pop
add
push
mov
jmp
sub
mov
mov
push
jmp
push
mov
jmp
push
mov
subl
add
addl
jmp
mov
xor
pop
jmp
pop
push
mov
add
jmp
pop
popl
mov
shr
push
mov
push
push
mov
inc
shl
jmp
pop
push
mov
sub
add
add
pop
add
xchg
pop
jmp
mov
push
mov
jmp
mov
add
jmp
add
sub
pop
xchg
pop
push
mov
add
add
add
push
mov
push
mov
mov
sub
neg
dec
xor
add
pop
sub
pop
push
mov
shr
neg
jmp
sub
xchg
pop
mov
push
jmp
push
mov
mov
mov
add
pop
jmp
mov
jmp
pop
push
mov
push
mov
or
jmp
mov
push
mov
push
mov
jmp
push
mov
add
pop
jmp
pop
pushl
jmp
xor
xor
xor
jmp
not
jmp
mov
mov
mov
jmp
pop
jmp
mov
sub
sub
add
jmp
xor
xor
mov
push
mov
jmp
xchg
jmp
push
mov
jmp
add
not
inc
push
jmp
mov
jmp
pushl
jmp
inc
neg
add
add
jmp
jmp
mov
add
add
jmp
xor
or
pop
not
xchg
jmp
pop
push
mov
shr
shr
xor
add
pop
add
jmp
push
mov
shl
neg
push
mov
add
sub
jmp
and
xor
mov
pop
sub
jmp
push
mov
push
jmp
add
jmp
mov
push
mov
push
push
mov
mov
mov
jmp
mov
xor
jmp
pop
push
push
mov
xor
mov
pop
add
pop
push
push
push
push
jmp
mov
push
pop
jmp
mov
add
pop
xchg
jmp
neg
jmp
mov
add
mov
jmp
mov
push
mov
add
push
jmp
mov
sub
jmp
push
mov
add
sub
xchg
pop
jmp
push
push
jmp
add
pop
sub
sub
push
mov
jmp
add
sub
sub
push
mov
add
pushl
pop
add
add
push
mov
xor
sub
mov
add
add
add
jmp
sub
add
jmp
mov
sub
mov
push
mov
mov
xor
jmp
mov
add
mov
push
mov
push
jmp
pop
push
push
jmp
add
pop
pop
xor
push
mov
push
mov
mov
xor
pop
pop
push
push
push
pop
shl
add
jmp
xor
jmp
push
mov
push
jmp
mov
and
neg
add
add
sub
sub
pop
mov
add
push
pushl
mov
add
popl
jmp
mov
dec
add
add
sub
sub
pop
xor
sub
sub
add
pop
sub
push
pushl
pop
jmp
mov
jmp
sub
add
add
pop
push
jmp
add
add
xchg
jmp
pop
push
mov
mov
push
mov
xor
mov
add
add
jmp
pop
push
mov
add
pop
push
mov
mov
mov
jmp
mov
add
jmp
push
mov
jmp
push
sub
mov
mov
mov
jmp
mov
jmp
pop
sub
sub
add
pop
jmp
mov
jmp
push
push
mov
or
xor
not
and
add
dec
add
jmp
mov
push
notb
pop
jmp
neg
shl
inc
sub
jmp
mov
mov
mov
sub
push
mov
jmp
sub
sub
add
mov
add
jmp
mov
and
add
add
not
shr
add
sub
shr
jmp
xor
xor
xor
mov
mov
jmp
push
jmp
mov
push
mov
push
pop
add
sub
jmp
pop
not
push
mov
mov
mov
jmp
add
add
pop
xchg
mov
jmp
mov
add
add
push
mov
push
mov
mov
jmp
addl
mov
add
sub
jmp
mov
push
mov
mov
mov
add
add
add
sub
pop
push
mov
sub
sub
mov
jmp
sub
jmp
push
mov
add
sub
xchg
pop
mov
mov
xor
jmp
sub
pop
or
jmp
xor
mov
push
mov
add
add
xchg
pop
push
mov
jmp
add
pop
add
sub
pop
jmp
pushl
pop
push
push
jmp
shl
xor
add
jmp
pushl
mov
push
mov
jmp
xor
xor
xor
push
mov
mov
neg
xor
shr
add
add
and
pushl
mov
jmp
xchg
pop
mov
mov
sub
push
mov
jmp
pop
xor
add
jmp
sub
pop
push
mov
sub
pop
jmp
mov
jmp
addw
push
mov
jmp
sub
sub
mov
subl
pop
jmp
sub
dec
push
jmp
add
jmp
inc
shr
xor
add
jmp
push
jmp
pop
sub
mov
mov
push
mov
neg
jmp
push
mov
mov
neg
neg
push
mov
jmp
cmp
je
pushl
addl
pop
jmp
add
add
mov
add
push
pushl
pop
popl
pop
jmp
push
mov
inc
or
add
sub
pop
push
mov
xor
pop
push
mov
jmp
pop
sub
mov
jmp
popl
jmp
pop
inc
push
mov
not
neg
and
xor
xor
push
mov
jmp
pop
push
mov
push
push
jmp
inc
jmp
sub
pop
sub
push
push
mov
mov
sub
jmp
add
add
xchg
pop
shr
shl
jmp
add
add
jmp
push
push
sub
mov
mov
sub
mov
pop
or
jmp
mov
add
mov
jmp
push
mov
sub
inc
and
shr
add
push
push
mov
jmp
mov
jmp
mov
xor
jmp
pop
push
mov
add
pop
sub
jmp
pop
jmp
push
mov
push
mov
sub
jmp
sub
jmp
add
jmp
jmp
sub
add
add
sub
mov
jmp
push
push
pop
shl
sub
push
mov
xor
pop
push
mov
mov
mov
add
pop
push
push
pop
sub
mov
jmp
mov
mov
add
add
add
sub
jmp
xor
pop
push
jmp
pop
or
push
mov
not
mov
pop
inc
push
mov
jmp
mov
sub
pop
mov
jmp
sub
mov
pop
sub
jmp
mov
mov
add
mov
mov
add
jmp
pop
jmp
pushl
pop
add
neg
and
add
xor
jmp
xchg
shr
and
add
jmp
pop
push
jmp
sub
add
pop
push
push
jmp
xor
mov
or
jne
push
mov
push
pushl
pop
jmp
sub
jmp
sub
pop
mov
add
jmp
sub
pop
add
not
dec
push
mov
neg
jmp
mov
jmp
push
mov
add
add
xchg
jmp
mov
and
jmp
mov
jmp
sub
jmp
push
push
jmp
add
sub
pop
mov
add
pushl
mov
add
push
mov
jmp
push
push
pop
push
push
push
mov
jmp
sub
xor
xor
jmp
mov
jmp
sub
pop
jmp
sub
jmp
add
mov
add
add
sub
mov
add
push
mov
push
push
jmp
push
pushl
pushl
pop
add
push
mov
mov
jmp
xor
mov
push
jmp
neg
xor
add
mov
jmp
push
push
jmp
mov
push
jmp
add
pop
jmp
add
pop
xchg
jmp
push
mov
jmp
push
mov
sub
pop
push
mov
sub
jmp
pop
add
jmp
xor
jmp
and
push
mov
dec
not
jmp
mov
push
mov
jmp
pop
add
jmp
pushl
pop
popl
jmp
mov
push
jmp
add
add
jmp
sub
jmp
push
push
sub
mov
mov
mov
pop
mov
xor
pop
add
shl
dec
neg
shr
add
push
mov
jmp
push
mov
push
pop
xor
shl
jmp
mov
push
jmp
xor
pop
push
mov
or
sub
xor
pop
sub
pop
push
jmp
pushw
sub
push
mov
add
push
mov
sub
mov
jmp
xchg
jmp
add
pop
jmp
pushl
mov
add
popl
mov
sub
pushf
jmp
sub
xchg
pop
mov
jmp
push
mov
add
push
push
pop
jmp
mov
mov
add
jmp
sub
pop
pop
push
mov
mov
add
jmp
pop
xchg
jmp
mov
push
jmp
add
jmp
mov
pushl
jmp
pop
add
popl
mov
incb
pushf
jmp
mov
add
push
mov
add
mov
add
jmp
sub
sub
jmp
push
push
jmp
dec
sub
mov
mov
sub
jmp
push
push
jmp
mov
push
mov
jmp
mov
push
jmp
add
mov
pop
jmp
mov
jmp
mov
add
sub
sub
mov
push
mov
jmp
mov
add
add
xchg
mov
mov
push
jmp
pop
add
sub
xchg
pop
jmp
pop
jmp
xor
jmp
add
add
pop
add
jmp
pop
add
inc
push
jmp
add
pop
add
add
sub
push
jmp
inc
push
jmp
add
xchg
pop
popl
pop
mov
push
pop
add
push
push
mov
mov
pop
jmp
mov
pop
xor
add
pop
add
jmp
add
jmp
mov
pushl
mov
add
push
mov
jmp
shl
jmp
pop
push
mov
add
pop
push
push
mov
mov
pop
add
jmp
push
pop
pop
shr
not
sub
jmp
subl
sub
addl
subl
pushl
pop
push
mov
add
push
push
mov
shr
push
mov
or
pop
sub
jmp
add
xchg
mov
mov
addw
popw
addw
popw
pushw
mov
push
pushw
mov
add
not
add
jmp
xor
jmp
mov
add
jmp
add
add
pop
xor
pop
push
mov
add
sub
sub
pop
add
jmp
mov
add
xchg
pop
jmp
mov
push
jmp
push
jmp
pop
jmp
add
pop
add
add
jmp
mov
jmp
sub
push
pop
pop
mov
pop
or
add
sub
pop
add
push
mov
jmp
mov
jmp
push
push
mov
xor
push
push
mov
mov
jmp
mov
pushl
pushl
pop
push
jmp
push
mov
inc
jmp
addl
addl
add
subl
subl
subl
jmp
notb
pop
mov
pop
jmp
add
push
mov
add
add
xchg
pop
push
mov
mov
pop
mov
add
pop
push
jmp
mov
add
pop
push
jmp
mov
add
add
sub
jmp
sub
sub
mov
mov
add
sub
add
jmp
push
mov
jmp
add
pushl
mov
push
mov
add
push
mov
add
pop
jmp
add
pop
xchg
jmp
lods
push
push
jmp
mov
jmp
push
mov
or
not
push
mov
dec
add
sub
shl
dec
add
jmp
mov
push
jmp
mov
sub
jmp
push
pop
jmp
sub
add
sub
mov
jmp
mov
mov
jmp
push
push
jmp
mov
jmp
push
mov
push
push
mov
mov
jmp
pop
mov
mov
add
shr
push
jmp
and
jmp
and
push
mov
push
jmp
sub
jmp
pushl
pop
add
sub
jmp
push
mov
shl
neg
jmp
pop
add
jmp
pop
jmp
pop
push
jmp
sub
mov
push
mov
jmp
neg
neg
push
jmp
pushl
mov
add
add
push
mov
jmp
add
add
push
pushl
jmp
popl
pop
mov
mov
jmp
shl
jmp
neg
jmp
mov
jmp
xchg
sub
add
mov
push
mov
add
add
xchg
pop
add
xor
xor
xor
mov
jmp
add
xchg
pop
xor
sub
add
sub
push
push
jmp
push
pushl
mov
jmp
xchg
jmp
mov
add
add
mov
add
shl
xchg
push
notb
pushl
pop
jmp
pop
push
mov
mov
sub
sub
add
pop
xchg
pop
mov
push
mov
pushl
pushl
jmp
pushl
popf
pop
rcrb
pushf
jmp
push
mov
mov
jmp
xor
inc
xor
add
pop
sub
xchg
mov
mov
jmp
pop
push
mov
push
jmp
sub
shl
jmp
pushl
jmp
sub
pop
push
push
push
pop
xor
pop
pushl
mov
add
push
mov
push
push
push
pop
jmp
pop
mov
push
jmp
jmp
pop
add
push
push
jmp
mov
push
push
pop
add
add
xchg
mov
push
mov
push
mov
mov
sub
sub
sub
mov
mov
and
sub
jmp
dec
add
sub
pop
not
jmp
mov
shr
sub
not
sub
shl
xor
add
jmp
xor
mov
push
mov
push
jmp
add
not
or
add
and
jmp
mov
jmp
sub
xchg
pop
jmp
xor
jmp
push
mov
add
mov
push
push
jmp
not
jmp
push
pop
add
add
sub
jmp
push
jmp
or
add
jmp
add
mov
xor
pushl
jmp
pop
mov
push
mov
mov
dec
push
mov
xor
push
jmp
add
xchg
mov
push
jmp
pushl
jmp
pop
add
push
mov
add
sub
xchg
jmp
pop
mov
sub
mov
push
jmp
or
pop
xor
push
mov
xor
jmp
push
jmp
pushl
pop
popl
pop
mov
push
pushf
jmp
pop
push
mov
jmp
sub
inc
jmp
xor
xor
xor
pop
push
jmp
push
mov
xor
inc
xor
add
mov
jmp
add
sub
sub
sub
push
jmp
add
xchg
jmp
sub
jmp
mov
add
add
add
add
sub
pop
push
mov
jmp
jmp
add
mov
jmp
shr
push
mov
push
mov
mov
and
push
mov
or
jmp
xor
sub
and
add
jmp
push
mov
jmp
add
jmp
pop
and
pop
sub
xor
jmp
sub
jmp
sub
mov
sub
mov
jmp
pop
mov
jmp
add
push
push
mov
jmp
popl
jmp
xchg
pop
mov
mov
jmp
mov
add
not
add
and
jmp
mov
xor
jmp
mov
pushl
pop
jmp
mov
add
add
sub
jmp
add
sub
mov
pushl
jmp
push
jmp
add
push
mov
add
mov
add
sub
jmp
popl
popl
jmp
push
push
pop
push
mov
push
mov
sub
dec
xor
xor
sub
pop
add
add
sub
jmp
mov
jmp
xchg
pop
mov
pushl
pop
popl
mov
mov
sub
mov
pushl
pushl
mov
add
push
mov
push
push
mov
mov
pop
jmp
xor
xor
jmp
add
add
xchg
pop
jmp
mov
push
jmp
mov
sub
pop
push
pushl
pop
popl
pop
jmp
mov
add
sub
jmp
mov
mov
pop
sub
jmp
push
mov
dec
add
xor
jmp
add
xor
xor
xor
pop
jmp
mov
pop
jmp
mov
mov
push
mov
mov
mov
jmp
mov
add
sub
pop
add
jmp
xor
add
pop
pop
add
xchg
mov
jmp
mov
add
pop
sub
jmp
add
sub
jmp
mov
push
pop
push
mov
push
pop
sub
dec
jmp
pop
shr
sub
push
mov
addl
mov
jmp
add
jmp
pop
popl
push
mov
mov
sub
mov
push
pop
add
pop
jmp
push
jmp
mov
push
mov
add
pop
jmp
add
jmp
push
push
jmp
push
mov
push
subl
jmp
push
mov
push
mov
or
xor
and
pop
xor
xor
add
pop
add
xchg
jmp
xor
mov
push
mov
add
push
mov
add
jmp
pop
xchg
pop
add
push
mov
push
mov
mov
xor
pop
push
push
jmp
pushl
jmp
xor
jmp
addl
pushl
jmp
mov
dec
jmp
xchg
pop
jmp
add
jmp
add
sub
jmp
push
jmp
add
pop
xor
xor
xor
pop
jmp
add
sub
jmp
xor
jmp
sub
neg
jmp
or
sub
jmp
push
mov
add
sub
add
add
pop
sub
jmp
sub
pop
push
mov
mov
push
mov
add
dec
shl
shl
xor
push
jmp
mov
jmp
add
jmp
push
mov
jmp
push
mov
sub
pop
jmp
mov
jmp
inc
jmp
add
push
mov
add
sub
jmp
and
mov
add
or
jne
push
push
pop
jmp
sub
mov
push
jmp
pushl
pop
sub
mov
push
jmp
push
jmp
push
mov
or
pop
push
mov
sub
pop
dec
add
add
sub
add
pop
push
mov
add
pop
push
pushl
jmp
pop
add
push
mov
sub
add
add
pushl
jmp
shr
push
mov
sub
pop
push
push
mov
mov
jmp
sub
add
and
add
xor
mov
jmp
sub
pop
sub
jmp
pop
mov
addl
pushl
jmp
sub
mov
mov
add
pop
pushl
pop
push
mov
mov
add
add
jmp
and
inc
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
push
pop
pop
mov
mov
add
push
mov
add
pop
jmp
xor
xor
pop
push
jmp
push
jmp
sub
add
sub
mov
push
mov
mov
add
add
xchg
pop
jmp
add
add
sub
add
pushl
pop
add
jmp
neg
push
jmp
sub
xchg
pop
mov
push
mov
push
mov
jmp
sub
mov
push
push
mov
jmp
add
sub
xor
xor
xor
mov
mov
mov
push
push
mov
mov
pop
add
mov
push
jmp
add
jmp
add
jmp
add
dec
jmp
mov
push
jmp
sub
shl
add
add
add
pop
neg
xor
sub
add
add
jmp
add
jmp
push
mov
add
add
xchg
pop
push
push
mov
shl
not
push
notl
pop
sub
mov
pop
add
pop
xor
xor
xor
jmp
shl
push
mov
neg
sub
push
push
mov
mov
pop
and
jmp
add
add
pop
push
mov
add
jmp
add
xor
sub
pop
push
jmp
mov
add
sub
sub
pop
and
pop
jmp
sub
jmp
add
sub
mov
push
mov
jmp
push
mov
push
mov
jmp
shl
jmp
mov
mov
pop
xor
xor
xor
jmp
mov
add
pop
push
mov
mov
sub
pop
jmp
mov
sub
pop
sub
sub
push
mov
sub
pop
sub
add
push
mov
jmp
add
jmp
push
mov
jmp
xchg
not
jmp
mov
jmp
sub
sub
push
mov
add
pop
mov
push
mov
add
add
jmp
pushl
popf
pop
sbb
pushf
jmp
xor
sub
jmp
mov
push
mov
push
jmp
pop
shl
xor
mov
jmp
push
mov
or
xor
jmp
addl
jmp
add
add
xchg
pop
jmp
mov
push
mov
mov
add
jmp
mov
pop
sub
mov
add
mov
add
add
sub
jmp
mov
pop
not
push
push
mov
mov
add
mov
jmp
sub
mov
mov
jmp
push
push
mov
push
mov
add
jmp
mov
add
jmp
jmp
add
mov
add
push
jmp
add
sub
jmp
sub
shr
jmp
push
mov
add
add
xchg
pop
sub
mov
jmp
add
xchg
jmp
mov
add
jmp
add
sub
mov
jmp
mov
push
mov
addl
pop
jmp
pop
push
mov
push
mov
sub
mov
mov
jmp
push
mov
jmp
pop
push
mov
mov
push
mov
jmp
push
mov
add
sub
xchg
pop
mov
push
pop
jmp
push
mov
sub
jmp
pop
xchg
mov
mov
push
pop
push
mov
add
add
push
mov
shr
and
inc
and
sub
sub
pop
pop
push
mov
jmp
add
mov
jmp
push
push
jmp
mov
mov
sub
add
add
pushl
pop
sub
mov
mov
push
sub
mov
mov
mov
pop
add
mov
add
add
xchg
mov
jmp
push
mov
push
mov
shl
neg
jmp
mov
jmp
mov
push
mov
add
sub
xchg
mov
mov
push
jmp
add
pop
sub
jmp
xor
xor
pop
mov
push
mov
jmp
inc
or
jmp
xor
push
jmp
mov
add
pop
push
push
mov
shr
push
mov
jmp
add
xor
jmp
mov
sub
pop
pop
sub
mov
mov
jmp
dec
shl
add
jmp
xchg
pop
xor
xor
xor
mov
cmp
pushf
jmp
sub
mov
jmp
xor
add
mov
add
jmp
sub
pop
and
sub
sub
xor
pop
jmp
add
push
mov
mov
add
mov
add
jmp
push
pop
shr
add
jmp
sub
xchg
pop
mov
push
mov
mov
shr
jmp
xor
xor
pop
jmp
mov
movzbw
pushw
mov
jmp
add
jmp
mov
push
jmp
xchg
jmp
mov
push
mov
jmp
shr
jmp
mov
add
pop
jmp
push
mov
neg
add
add
push
jmp
push
jmp
add
pushl
jmp
pop
push
jmp
add
pop
add
xchg
pop
xor
xor
jmp
or
je
push
jmp
pop
pushl
pop
jmp
add
xchg
pop
sub
mov
mov
push
mov
xor
sub
pop
add
jmp
push
mov
jmp
push
jmp
push
jmp
add
sub
sub
sub
pushl
pushl
mov
jmp
push
mov
mov
mov
jmp
add
mov
add
jmp
add
sub
mov
jmp
push
mov
add
add
pop
pushl
pop
add
mov
xor
xor
add
pushl
pop
add
add
push
mov
jmp
pop
jmp
mov
sub
pop
jmp
add
mov
add
mov
pop
push
mov
or
not
or
add
jmp
push
mov
and
xor
mov
mov
add
add
sub
pop
sub
push
jmp
mov
add
add
jmp
push
pop
jmp
xchg
jmp
mov
xor
pop
mov
pop
sub
xor
jmp
push
mov
jmp
pop
jmp
push
mov
add
push
mov
xor
jmp
pop
push
jmp
mov
addl
pop
push
mov
add
pop
push
jmp
add
pop
jmp
add
add
pop
xchg
mov
shrl
pushf
jmp
push
mov
push
mov
add
mov
jmp
mov
push
mov
push
mov
sub
sub
add
add
pop
sub
xor
xor
jmp
add
add
push
mov
sub
jmp
sub
push
mov
push
mov
xor
pop
push
push
mov
mov
pop
jmp
sub
mov
pushl
jmp
push
mov
jmp
pop
mov
push
mov
addl
mov
sub
mov
jmp
xchg
pop
push
push
pop
pop
jmp
add
push
mov
push
mov
mov
jmp
pop
add
pushl
pop
add
jmp
xor
xor
sub
mov
xchg
jmp
pop
add
push
push
pushl
pop
add
sub
mov
mov
jmp
pop
jmp
add
sub
sub
pop
add
sub
mov
add
push
mov
add
add
jmp
push
mov
push
push
pop
add
jmp
neg
dec
neg
jmp
not
xchg
jmp
xchg
pop
push
mov
jmp
mov
add
push
push
mov
push
mov
addl
add
subl
jmp
pop
push
mov
add
push
mov
add
jmp
xchg
jmp
pop
sub
pop
push
mov
jmp
mov
shl
push
jmp
mov
add
sub
xchg
pop
jmp
push
jmp
pop
jmp
add
add
xchg
pop
add
mov
jmp
mov
shl
sub
sub
jmp
push
sub
mov
jmp
push
mov
and
or
and
push
jmp
dec
push
mov
add
pop
neg
push
mov
jmp
popl
jmp
sub
sub
push
mov
jmp
push
mov
mov
jmp
mov
push
jmp
shr
sub
mov
jmp
pop
jmp
add
or
pushl
pop
jmp
push
jmp
mov
jmp
pop
jmp
push
mov
add
pop
jmp
sub
xor
pop
jmp
sub
pop
jmp
add
xchg
jmp
pop
popl
mov
jmp
add
pop
xchg
pop
pushl
jmp
push
mov
mov
pop
mov
jmp
add
sub
pop
jmp
mov
sub
pop
mov
push
mov
add
push
push
push
jmp
pop
add
jmp
mov
push
jmp
pop
sub
mov
mov
and
sub
add
add
sub
pop
sub
add
add
jmp
add
jmp
mov
jmp
add
jmp
popl
pop
jmp
mov
mov
add
jmp
shr
push
mov
push
push
pop
mov
mov
add
push
mov
sub
pop
add
mov
jmp
sub
sub
push
mov
add
pop
add
mov
sub
mov
push
push
popl
addl
pop
push
mov
sub
add
jmp
lods
xor
push
mov
mov
xor
xor
xor
push
notb
mov
jmp
push
jmp
xor
add
add
sub
jmp
push
push
mov
push
mov
add
sub
xchg
pop
jmp
dec
and
sub
add
mov
add
jmp
sub
mov
mov
mov
add
pop
shr
inc
push
decb
mov
add
push
mov
sub
dec
jmp
sub
pop
add
add
jmp
xor
xor
xor
jmp
xor
jmp
add
sub
pop
xor
mov
jmp
mov
sub
sub
pop
mov
add
push
jmp
pop
jmp
mov
jmp
push
jmp
add
jmp
xor
pop
push
jmp
xor
mov
jmp
mov
push
mov
push
push
jmp
xchg
pop
mov
mov
add
jmp
xchg
jmp
push
mov
mov
mov
add
mov
pop
mov
push
mov
push
mov
jmp
sub
mov
mov
jmp
or
pop
inc
jmp
pop
sub
jmp
and
pop
sub
jmp
mov
push
mov
jmp
push
mov
jmp
add
jmp
mov
add
xor
sub
pop
mov
pop
shr
add
push
mov
jmp
xor
mov
sub
add
add
pop
sub
xor
xor
jmp
pushl
pop
add
push
jmp
mov
add
xchg
mov
add
pushl
pop
push
mov
push
mov
add
sub
jmp
add
pop
add
jmp
mov
push
push
mov
add
sub
mov
push
jmp
push
jmp
add
pop
push
push
mov
jmp
push
mov
sub
push
popl
addl
pop
push
mov
jmp
lods
xor
push
push
push
pop
push
push
pop
xor
push
mov
sub
pop
add
add
pushl
pop
push
mov
add
add
xchg
jmp
mov
pushw
jmp
push
pushf
jmp
push
mov
push
push
pop
jmp
shr
push
push
sub
mov
push
jmp
push
push
mov
jmp
pop
push
mov
add
mov
add
jmp
sub
pop
jmp
add
push
pushl
pop
popl
mov
shll
pushf
jmp
xchg
dec
xchg
xor
xor
xor
jmp
mov
add
jmp
push
jmp
pushl
pop
push
mov
add
jmp
mov
push
mov
jmp
push
pop
shl
inc
add
mov
pop
sub
pop
add
jmp
pop
add
jmp
sub
jmp
pop
mov
push
mov
add
add
xchg
pop
add
mov
jmp
push
pushl
mov
add
popl
mov
push
mov
add
jmp
push
push
pop
jmp
sub
pop
xor
pop
sub
mov
add
pop
dec
jmp
not
inc
neg
add
jmp
push
jmp
mov
mov
jmp
push
mov
mov
push
mov
add
pop
jmp
add
mov
push
mov
mov
add
add
xchg
pop
xor
xor
xor
mov
jmp
lods
push
mov
add
sub
add
add
sub
jmp
dec
xor
jmp
mul
movzbw
pushw
mov
movzbw
push
pushf
jmp
pop
jmp
inc
not
sub
sub
pop
jmp
add
pop
or
push
mov
xor
add
pop
shr
sub
jmp
xchg
sub
push
mov
sub
pop
jmp
mov
mov
add
add
xchg
pop
sub
jmp
push
jmp
mov
add
jmp
add
push
push
jmp
pop
add
add
jmp
and
jmp
pop
push
mov
push
mov
mov
sub
sub
add
jmp
add
popl
mov
imul
push
pushf
jmp
pop
add
sub
sub
add
push
mov
shl
not
or
jmp
pop
xor
pushl
jmp
mov
sub
jmp
push
mov
neg
xor
mov
pop
mov
pop
push
mov
jmp
or
or
push
sub
pop
sub
dec
jmp
xchg
jmp
add
push
mov
sub
mov
add
add
jmp
push
jmp
mov
add
jmp
mov
push
xorl
pop
jmp
mov
push
pop
add
push
mov
jmp
pop
push
mov
pushl
jmp
xor
xor
jmp
push
pop
mov
push
mov
add
add
xchg
pop
addl
subl
add
addl
subl
pop
jmp
xchg
pop
pushw
jmp
jmp
mov
sub
sub
jmp
push
jmp
xor
pop
sub
add
mov
push
mov
add
jmp
and
push
notl
jmp
add
jmp
add
xchg
pop
jmp
mov
jmp
sub
jmp
push
mov
jmp
shr
xor
jmp
add
pop
sub
jmp
xor
mov
push
push
push
pop
add
jmp
mov
jmp
push
mov
xchg
not
xchg
mov
pop
jmp
mov
subl
add
addl
mov
push
push
pop
add
add
xchg
pop
pop
jmp
mov
push
mov
mov
add
pop
jmp
sub
mov
jmp
mov
push
push
pushl
mov
push
mov
add
jmp
mov
mov
push
mov
add
pop
push
mov
shr
sub
xor
sub
pop
jmp
inc
xor
add
pop
push
mov
or
not
dec
add
and
pop
jmp
add
add
mov
jmp
mov
add
push
mov
push
pop
push
mov
xor
add
pop
sub
mov
jmp
sub
pop
mov
pop
push
mov
sub
pop
jmp
mov
add
push
mov
push
jmp
add
sub
jmp
pop
add
mov
add
pop
jmp
add
xor
xor
xor
pop
sub
mov
push
push
jmp
shr
jmp
add
jmp
mov
push
mov
dec
add
sub
shr
sub
mov
pop
jmp
add
push
mov
sub
jmp
mov
add
pushl
jmp
not
jmp
push
pushl
jmp
xor
xor
pop
jmp
add
xchg
pop
xor
jmp
sub
mov
push
jmp
xor
mov
xor
pushf
jmp
popl
mov
or
je
pushl
push
mov
push
push
pushl
pop
push
jmp
pop
jmp
pop
and
jmp
push
mov
add
add
push
mov
add
sub
xchg
pop
mov
jmp
sub
add
sub
mov
jmp
pop
mov
mov
push
mov
jmp
add
add
sub
pop
not
add
mov
pop
mov
pop
jmp
push
pushf
jmp
mov
or
neg
add
push
jmp
xor
mov
jmp
add
jmp
add
add
sub
jmp
mov
mov
sub
jmp
pop
shr
add
add
add
sub
pop
push
mov
push
mov
not
push
mov
inc
jmp
sub
add
jmp
mov
not
mov
pop
add
sub
jmp
pushl
popf
pop
adc
pushf
jmp
xor
push
jmp
sub
pop
jmp
pop
push
mov
jmp
mov
sub
dec
shl
sub
add
add
jmp
mov
add
sub
xchg
pop
mov
jmp
pop
add
push
jmp
push
mov
jmp
push
pushl
jmp
push
mov
neg
shr
jmp
xchg
mov
add
sub
push
sub
jmp
sub
mov
add
pop
jmp
sub
mov
mov
add
pop
pushl
pop
push
mov
push
mov
push
mov
add
add
xchg
pop
add
push
push
mov
jmp
inc
or
dec
add
sub
pop
movzbl
jmp
mov
jmp
and
push
mov
shl
sub
sub
jmp
sub
jmp
pushl
pop
jmp
pushl
jmp
pushl
mov
add
popl
mov
jmp
mov
add
add
xchg
pop
popl
mov
push
mov
jmp
mov
xor
dec
shr
xor
sub
pop
add
add
jmp
xchg
mov
bts
pushf
jmp
push
mov
add
pop
push
mov
push
mov
dec
shl
add
mov
pop
jmp
mov
mov
jmp
add
sub
mov
jmp
add
sub
pop
xor
jmp
mov
push
mov
sub
jmp
sub
mov
pop
jmp
xor
shr
add
mov
pop
mov
pop
and
jmp
mov
push
mov
not
jmp
shl
jmp
sub
mov
mov
push
mov
and
add
or
shr
xor
xor
jmp
push
mov
not
jmp
not
shr
xor
jmp
push
jmp
mov
jmp
pop
push
mov
mov
add
pop
add
jmp
pushl
pop
sub
mov
push
pop
push
mov
add
pop
jmp
pushl
jmp
mov
add
jmp
mov
add
push
jmp
and
pop
or
je
push
mov
push
jmp
mov
jmp
push
mov
jmp
mov
add
add
shl
xor
dec
jmp
add
add
mov
add
sub
jmp
mov
shl
push
jmp
add
push
mov
add
jmp
pop
or
pushl
mov
push
mov
jmp
xchg
jmp
pop
add
shl
jmp
push
push
mov
add
sub
add
add
mov
add
jmp
mov
jmp
pop
pushl
pop
add
add
push
mov
add
not
xor
push
mov
jmp
pushl
pop
jmp
sub
jmp
xchg
not
xchg
sub
jmp
mov
push
mov
push
pop
jmp
sub
push
mov
pop
mov
add
jmp
xchg
mov
push
mov
push
mov
push
pushl
jmp
sub
mov
add
add
push
mov
mov
sub
pop
dec
push
mov
xor
jmp
mov
sub
jmp
mov
mov
pop
add
add
sub
pop
sub
jmp
pop
pop
push
mov
mov
pop
pop
mov
add
add
jmp
mov
jmp
push
subl
pop
add
jmp
push
notl
pop
jmp
mov
add
add
xchg
pop
movzbw
push
mov
mov
push
mov
push
pop
sub
push
mov
add
pop
add
sub
add
pop
push
mov
mov
and
jmp
push
jmp
push
mov
push
pushl
jmp
mov
jmp
xchg
mov
popl
mov
mov
push
push
pop
push
mov
mov
add
add
push
jmp
decb
pushf
jmp
add
jmp
mov
push
mov
and
sub
jmp
xor
mov
jmp
add
sub
sub
mov
jmp
and
pushl
jmp
push
jmp
push
mov
mov
jmp
push
mov
push
mov
mov
jmp
xor
xor
mov
mov
jmp
push
jmp
push
mov
mov
mov
add
push
mov
jmp
push
mov
jmp
xor
xor
pop
jmp
add
mov
jmp
push
jmp
shl
neg
push
jmp
pop
sub
jmp
mov
pop
add
sub
add
add
sub
mov
add
jmp
mov
push
jmp
add
add
jmp
mov
xor
pop
jmp
add
push
mov
add
mov
jmp
add
sub
pop
add
pop
jmp
mov
pop
add
jmp
push
jmp
push
jmp
rorb
pushf
jmp
pushl
mov
push
push
mov
addl
pop
add
add
xor
xor
xor
mov
push
mov
push
sub
mov
mov
shl
xor
xor
push
mov
sub
sub
sub
mov
add
mov
jmp
push
push
pop
jmp
not
sub
push
mov
push
jmp
mov
add
jmp
xor
xor
xor
pop
jmp
mov
push
mov
mov
pop
pushw
sub
mov
add
shr
dec
inc
sub
add
sub
sub
mov
mov
push
mov
jmp
mov
add
add
xchg
mov
push
jmp
pop
jmp
push
push
mov
shl
neg
xor
jmp
mov
jmp
push
mov
shl
or
dec
neg
jmp
mov
mov
mov
sub
add
add
mov
add
sub
add
xor
add
pop
xor
xor
xor
mov
jmp
add
popl
mov
imul
jmp
pushl
jmp
push
mov
jmp
movzbw
jmp
push
mov
xor
jmp
xor
xor
mov
sarb
pushf
jmp
add
add
xchg
pop
push
mov
and
and
and
jmp
mov
jmp
pushl
pop
add
add
mov
add
add
xor
jmp
pop
jmp
push
jmp
sub
xchg
jmp
add
dec
sub
add
pop
sub
xchg
jmp
pop
add
add
add
sub
jmp
mov
push
pop
jmp
mov
sub
pop
push
jmp
mov
jmp
pushw
jmp
add
jmp
inc
inc
sub
and
sub
mov
pop
and
dec
shr
dec
not
push
mov
neg
jmp
push
mov
add
sub
xchg
pop
mov
mov
sub
jmp
add
add
xchg
pop
push
jmp
pop
jmp
mov
not
and
neg
inc
jmp
xor
add
add
pop
jmp
mov
sub
mov
push
jmp
add
sub
pop
sub
jmp
shl
or
add
dec
add
sub
mov
add
add
push
mov
jmp
sub
add
add
pushl
pop
push
mov
push
mov
add
pop
add
push
pushl
mov
push
jmp
mov
push
mov
and
pop
dec
not
add
jmp
mov
jmp
push
mov
jmp
push
jmp
mov
sub
mov
mov
jmp
pop
not
sub
add
add
pop
push
jmp
mov
pop
shl
push
mov
jmp
add
sub
pop
add
sub
mov
pushl
pop
popl
jmp
mov
push
mov
add
jmp
sub
mov
push
mov
jmp
inc
jmp
addl
jmp
xor
sub
shr
not
xor
add
sub
add
jmp
push
pushl
pushl
mov
jmp
pop
add
jmp
add
pushl
jmp
xor
add
pop
sub
xchg
pop
mov
mov
xor
pop
mov
push
mov
add
add
xchg
pop
jmp
pop
add
jmp
pushl
pushl
pop
push
mov
add
push
push
push
mov
add
mov
pop
mov
pop
add
jmp
add
xor
xor
jmp
mov
mov
pop
jmp
pushl
jmp
xor
push
mov
push
mov
mov
shr
sub
jmp
mov
add
add
jmp
sub
mov
mov
push
mov
jmp
pushl
pop
add
push
push
mov
add
push
jmp
xchg
pop
popl
pop
sarl
pushf
jmp
sub
add
sub
add
pop
add
jmp
shl
jmp
add
xchg
pop
jmp
mov
push
jmp
add
add
pop
sub
add
mov
mov
push
mov
jmp
mov
push
mov
add
add
xchg
pop
popl
mov
mov
jmp
xor
xor
xor
mov
btc
pushf
jmp
add
add
xor
xor
xor
pop
add
not
and
jmp
pushl
pop
jmp
push
push
pop
add
jmp
pop
add
add
jmp
pop
and
pop
neg
jmp
pop
add
pop
add
sub
sub
mov
push
jmp
pushl
push
pushl
mov
add
jmp
neg
inc
xor
add
sub
jmp
mov
pop
xor
sub
jmp
mov
jmp
xor
jmp
popf
jmp
mov
mov
mov
pop
jmp
mov
push
mov
mov
add
jmp
mov
jmp
add
sub
mov
add
add
xchg
pop
mov
jmp
add
push
push
push
popl
push
mov
add
pop
pop
add
sub
jmp
sub
jmp
add
xchg
jmp
shr
or
shr
dec
not
push
mov
mov
xor
mov
add
xor
pop
inc
shr
shr
dec
jmp
add
sub
xchg
jmp
mov
push
mov
not
jmp
pop
xor
shl
shr
not
xor
mov
jmp
add
jmp
add
add
sub
jmp
pop
push
mov
add
jmp
push
pop
mov
jmp
mov
sub
pop
mov
add
add
pushl
pop
add
sub
add
jmp
push
push
mov
add
jmp
sub
pop
mov
push
jmp
push
jmp
mov
jmp
xor
mov
push
jmp
add
jmp
add
add
add
jmp
add
push
mov
xchg
not
jmp
add
pop
jmp
xor
xor
jmp
mov
add
jmp
push
mov
mov
pop
mov
pop
jmp
mov
pop
mov
push
mov
push
pop
add
add
xchg
mov
jmp
add
xor
push
pop
jmp
xor
pop
and
pop
sub
mov
jmp
xor
xor
pop
push
mov
push
mov
push
push
mov
addl
mov
jmp
mov
pushl
jmp
xor
xor
xor
add
jmp
add
sub
jmp
add
jmp
sub
add
push
mov
jmp
mov
mov
add
mov
mov
add
jmp
mov
jmp
add
mov
add
xchg
pop
sub
add
shl
push
mov
sub
mov
push
jmp
jmp
push
pushl
mov
push
mov
push
mov
add
pop
push
mov
add
pop
xchg
pop
popl
mov
jmp
mov
jmp
add
add
jmp
pop
xor
xor
jmp
mov
mov
jmp
pushl
mov
add
jmp
mov
sub
pop
addl
add
push
jmp
mov
addl
popl
push
mov
jmp
mov
pop
add
sub
push
push
jmp
mov
push
pop
add
jmp
add
jmp
xor
jmp
push
push
pop
or
or
xor
push
xorl
pop
xor
pop
add
add
sub
pop
xor
jmp
sub
pop
and
mov
push
mov
add
add
jmp
pushl
pushl
mov
add
push
mov
jmp
push
jmp
sub
jmp
pop
jmp
add
pop
push
mov
jmp
push
notl
pop
and
sub
sub
pop
and
pushl
pop
add
or
shl
sub
jmp
add
sub
pop
xor
xor
jmp
add
add
mov
add
add
push
pushl
mov
push
mov
mov
add
add
xchg
jmp
sub
jmp
jmp
jmp
pop
sub
jmp
pop
jmp
addl
pop
push
mov
sub
jmp
sub
or
jmp
push
pop
jmp
mov
mov
sub
add
push
mov
dec
and
sub
xor
add
add
pop
pop
add
jmp
mov
mov
jmp
push
mov
mov
mov
add
jmp
pop
jmp
pushl
pop
add
push
mov
jmp
pop
jmp
mov
jmp
mov
not
and
xor
jmp
xchg
pop
mov
add
add
xor
xor
xor
mov
mov
push
push
pop
add
jmp
mov
xor
pop
add
sub
push
mov
jmp
jmp
dec
add
jmp
mov
pop
push
mov
mov
inc
add
jmp
pop
add
pop
jmp
shl
push
jmp
pop
shl
sub
mov
jmp
add
pushl
pushl
pop
add
push
push
pop
push
jmp
shr
push
mov
shl
and
jmp
pop
add
add
jmp
sub
add
sub
sub
push
jmp
mov
jmp
and
pop
or
je
pushl
sub
mov
push
mov
jmp
mov
pop
jmp
mov
sub
push
mov
mov
shr
jmp
xor
xor
jmp
mov
and
pop
jmp
pop
and
jmp
push
mov
jmp
push
jmp
mov
pushl
pop
add
jmp
xor
xor
push
mov
mov
mov
jmp
mov
mov
add
sub
jmp
push
pop
mov
add
push
push
mov
jmp
add
jmp
mov
push
push
mov
mov
inc
and
neg
xor
jmp
subl
push
push
mov
mov
add
sub
jmp
mov
mov
sub
sub
sub
add
push
jmp
pop
push
mov
add
pop
push
jmp
not
not
add
sub
add
jmp
push
pushl
pushl
mov
add
push
mov
add
add
xor
xor
xor
mov
add
add
add
xor
jmp
add
pop
sub
mov
jmp
push
jmp
sub
jmp
mov
xor
dec
not
add
sub
add
add
pop
jmp
pop
push
mov
add
add
xchg
pop
popl
pop
and
pushf
jmp
pop
add
sub
sub
pop
xor
xor
xor
mov
mov
sub
mov
addl
mov
jmp
xor
sub
jmp
shl
shr
jmp
sub
mov
push
jmp
add
jmp
add
pop
add
sub
pushl
pop
push
push
pop
add
add
xchg
pop
xchg
mov
mov
push
mov
push
jmp
popl
jmp
and
jmp
sub
push
mov
jmp
not
jmp
or
jmp
push
subl
jmp
xor
xor
xor
mov
jmp
sub
push
pushl
pop
popl
jmp
sub
xchg
pop
mov
jmp
mov
add
add
xor
xor
xor
pop
push
mov
xor
add
pop
jmp
add
add
jmp
pop
add
pushf
jmp
mov
mov
mov
add
add
mov
mov
add
pushl
pushl
pop
push
mov
add
add
xchg
pop
push
jmp
mov
push
mov
push
mov
not
jmp
mov
add
not
sub
push
xchg
jmp
push
push
mov
mov
push
jmp
xor
jmp
push
mov
add
jmp
xchg
jmp
mov
jmp
shl
add
mov
mov
add
jmp
add
pop
add
xchg
pop
sub
pushl
pushl
mov
jmp
push
jmp
pop
add
add
xor
xor
xor
mov
bswap
push
mov
jmp
add
push
mov
xor
inc
push
notl
pop
dec
jmp
xor
mov
jmp
mov
jmp
mov
jmp
add
jmp
mov
jmp
push
mov
push
mov
jmp
mov
push
pushl
jmp
add
jmp
mov
push
mov
jmp
add
sub
pushl
pop
push
mov
push
mov
shr
jmp
push
push
jmp
pop
jmp
push
mov
add
pop
add
sub
jmp
sub
push
mov
add
pop
jmp
mov
add
sub
add
pop
push
push
jmp
mov
pop
jmp
pushl
jmp
add
add
sub
sub
sub
pop
mov
add
mov
jmp
push
mov
add
sub
push
jmp
movzbl
push
mov
jmp
neg
xor
jmp
mov
add
sub
xor
jmp
or
shl
push
jmp
add
sub
not
jmp
push
mov
sub
and
pop
shl
xor
mov
pop
jmp
mov
add
add
jmp
inc
shr
jmp
inc
jmp
pop
add
xor
xor
xor
jmp
push
jmp
add
jmp
pushl
pop
add
push
push
pop
add
push
mov
add
pop
xchg
mov
mov
add
jmp
pushl
pop
push
push
mov
addl
pop
push
mov
add
jmp
sub
add
add
jmp
mov
add
jmp
push
pop
add
pop
push
pushl
pop
popl
pop
shr
jmp
add
pop
mov
mov
push
mov
add
add
xchg
pop
add
pop
push
mov
add
pop
xor
jmp
add
sub
sub
sub
not
neg
add
mov
mov
add
xor
add
pop
sub
jmp
pushl
pop
popl
mov
and
mov
add
or
shl
push
sub
jmp
sub
mov
push
jmp
mov
shl
jmp
pop
push
push
jmp
pushl
jmp
push
mov
push
pop
mov
push
mov
mov
push
mov
add
mov
jmp
inc
jmp
xor
jmp
sub
add
add
sub
jmp
sub
jmp
xchg
mov
mov
jmp
dec
sub
mov
pop
add
mov
add
xor
mov
jmp
add
pop
jmp
push
mov
jmp
or
sub
jmp
mov
add
pop
shr
shr
jmp
pop
push
mov
neg
jmp
push
sub
mov
mov
jmp
add
shr
sub
and
mov
jmp
sub
push
mov
add
jmp
xor
xor
jmp
mov
push
mov
push
push
popl
jmp
xor
xor
mov
test
pushf
jmp
mov
push
mov
jmp
shr
push
mov
jmp
push
mov
add
add
xchg
pop
jmp
or
jmp
pop
xchg
pop
mov
mov
dec
add
shr
sub
jmp
xor
xor
jmp
pop
sub
mov
sub
mov
addl
pop
push
mov
mov
add
add
push
mov
sub
jmp
add
sub
jmp
mov
jmp
push
pop
add
push
mov
push
push
pop
sub
mov
mov
jmp
jmp
xchg
pop
sub
jmp
sub
sub
pushl
pop
add
jmp
pop
mov
jmp
pop
jmp
movzbl
lea
jmp
mov
pop
add
jmp
push
jmp
add
xchg
pop
addl
jmp
sub
jmp
push
pop
add
sub
xchg
pop
jmp
mov
jmp
push
mov
mov
and
not
and
sub
shl
xor
neg
sub
shl
sub
mov
push
mov
add
push
mov
push
mov
xor
pop
inc
jmp
add
add
sub
pushl
pop
jmp
sub
add
jmp
mov
jmp
add
sub
mov
mov
push
mov
jmp
pop
add
shl
dec
xor
sub
add
add
mov
jmp
sub
mov
add
or
push
jmp
sub
jmp
dec
jmp
pop
push
mov
mov
add
push
push
jmp
add
add
pop
add
xchg
mov
shr
push
mov
push
push
push
pop
add
push
jmp
xchg
pop
btr
pushf
jmp
push
mov
jmp
pop
popl
mov
or
pop
jmp
not
push
sub
mov
jmp
push
jmp
xor
mov
incw
pushf
jmp
add
pop
xor
xor
xor
pop
movswl
push
mov
jmp
pop
xor
jmp
lods
xor
push
mov
mov
push
mov
or
push
mov
and
pop
jmp
lods
sub
jmp
sub
pop
jmp
and
add
push
mov
or
inc
sub
jmp
push
pop
add
jmp
sub
jmp
push
sub
jmp
add
push
mov
push
mov
jmp
push
jmp
mov
mov
add
not
dec
xor
and
jmp
add
jmp
sub
mov
mov
jmp
xor
jmp
pushl
mov
add
add
push
jmp
xor
add
add
jmp
mov
add
jmp
add
jmp
pop
jmp
add
add
xchg
jmp
mov
dec
jmp
add
push
jmp
mov
dec
neg
sub
sub
pop
jmp
pop
sub
sub
mov
jmp
lods
xor
jmp
mov
add
add
xchg
pop
mov
push
jmp
mov
pop
add
inc
sub
dec
jmp
mov
push
mov
add
pushl
pop
add
sub
mov
push
jmp
mov
add
jmp
mov
add
add
xchg
pop
add
xor
jmp
add
sub
jmp
sub
add
add
mov
push
push
jmp
pop
mov
add
inc
xchg
or
jmp
sub
sub
pop
pop
jmp
push
push
mov
jmp
pop
sub
xchg
pop
mov
mov
add
jmp
sub
pop
add
xchg
jmp
mov
push
mov
add
sub
push
pushl
mov
add
jmp
push
jmp
add
pop
sub
sub
pushl
jmp
sub
mov
jmp
shr
jmp
pop
mov
mov
push
push
mov
add
pop
pop
sub
jmp
xchg
jmp
pop
mov
add
sub
xor
shl
jmp
pop
push
push
pop
jmp
push
mov
jmp
mov
decl
pushf
jmp
add
pop
add
push
jmp
pop
jmp
add
pop
sub
push
push
push
mov
push
mov
push
push
jmp
sub
pop
jmp
push
mov
neg
sub
sub
add
pop
mov
push
mov
add
add
xchg
mov
and
pushl
jmp
neg
jmp
add
xchg
not
xchg
add
sub
add
sub
mov
mov
xor
jmp
mov
pop
sub
pop
push
jmp
push
push
pop
neg
shl
jmp
add
add
xchg
pop
mov
pushl
jmp
mov
xor
pop
jmp
mov
mov
add
add
xor
xor
xor
pop
push
mov
mov
jmp
add
pop
push
mov
push
mov
add
sub
add
add
pop
jmp
pushl
pop
push
mov
push
mov
jmp
pop
add
sub
xchg
jmp
not
add
add
mov
add
xchg
mov
jmp
mov
push
mov
jmp
xor
push
pop
pop
mov
sub
mov
add
jmp
add
pushl
pop
sub
jmp
xor
xor
jmp
pop
mov
jmp
mov
inc
add
sub
add
add
jmp
push
mov
push
jmp
lods
cmpl
je
add
add
sub
add
add
sub
jmp
mov
add
jmp
push
jmp
push
mov
sub
shr
push
mov
add
jmp
pop
sub
push
mov
jmp
xor
xor
xor
pop
not
xchg
xor
xor
jmp
dec
push
push
mov
jmp
sub
xor
pop
add
jmp
push
jmp
mov
mov
mov
mov
push
mov
mov
add
add
xchg
pop
push
mov
mov
pop
mov
push
mov
add
jmp
sub
mov
pop
sub
mov
jmp
sub
jmp
or
neg
sub
sub
jmp
mov
push
jmp
xor
push
mov
jmp
add
mov
add
and
mov
add
sub
mov
mov
jmp
sub
mov
mov
jmp
push
mov
jmp
xchg
jmp
mov
not
push
mov
mov
dec
or
push
mov
add
pop
xor
pop
add
pushl
jmp
pop
jmp
mov
add
jmp
mov
jmp
add
xchg
mov
rolw
pushf
jmp
mov
sub
pop
mov
jmp
pop
sub
jmp
xor
xor
jmp
push
mov
jmp
or
xor
add
add
jmp
mov
add
push
mov
add
pop
add
xor
xor
xor
pop
sub
jmp
push
mov
inc
jmp
pushl
jmp
add
jmp
push
jmp
push
jmp
neg
xor
shl
sub
mov
pop
inc
push
mov
add
pop
jmp
pop
xor
push
mov
mov
pop
pop
xor
pop
push
mov
add
pop
sub
pushw
mov
sub
mov
push
mov
jmp
xchg
mov
push
mov
push
mov
mov
neg
inc
or
xor
jmp
push
pop
jmp
pop
push
mov
add
add
jmp
pop
sub
mov
jmp
push
mov
jmp
push
mov
mov
add
push
push
push
jmp
mov
pop
shr
shl
shl
push
jmp
pop
popl
mov
mov
mov
add
pop
push
mov
push
mov
xor
sub
xor
push
mov
xor
jmp
sub
mov
mov
push
mov
add
jmp
addl
pop
add
sub
jmp
mov
push
jmp
xor
push
mov
add
jmp
and
pushf
jmp
add
jmp
mov
push
jmp
inc
inc
dec
and
or
jmp
pop
pop
sub
pop
add
pop
push
push
mov
jmp
xor
xor
pushl
pop
jmp
sub
jmp
mov
jmp
mov
push
mov
mov
sub
sub
add
add
push
jmp
mov
mov
mov
jmp
pop
sub
mov
mov
jmp
push
pop
xor
jmp
add
add
add
add
sub
jmp
dec
push
mov
add
pop
add
pop
jmp
mov
push
pop
inc
xor
push
xorl
pop
xor
pop
jmp
pop
add
sub
pop
shl
jmp
not
inc
inc
push
mov
mov
inc
jmp
mov
sub
pop
sub
sub
jmp
add
add
pop
jmp
push
mov
mov
jmp
and
inc
add
mov
mov
jmp
mov
mov
push
mov
jmp
sub
push
mov
jmp
mov
pushl
mov
push
mov
add
jmp
push
push
push
mov
jmp
add
jmp
xor
add
mov
jmp
add
xchg
pop
add
push
push
jmp
mov
mov
pop
mov
pop
jmp
xor
pop
push
push
mov
jmp
pushl
pop
push
jmp
sub
mov
jmp
pop
dec
push
mov
xor
or
sub
and
push
mov
mov
inc
jmp
mov
push
mov
add
pop
jmp
shr
xor
add
pop
add
sub
mov
jmp
push
mov
add
jmp
push
mov
add
add
jmp
pushl
pushl
pop
push
mov
mov
push
jmp
neg
shr
push
mov
xor
pop
and
push
mov
or
pop
add
sub
mov
add
sub
mov
pop
pop
jmp
push
jmp
xchg
pop
jmp
mov
and
jmp
pop
inc
and
shl
jmp
sub
push
push
push
push
pop
push
push
jmp
add
add
sub
mov
add
pop
jmp
decw
pop
jmp
mov
jmp
mov
mov
add
jmp
mov
sub
add
add
pop
xchg
pop
div
sub
jmp
pushl
jmp
push
push
mov
jmp
add
sub
not
jmp
push
mov
add
push
mov
jmp
sub
pushl
jmp
add
xchg
pop
jmp
push
mov
jmp
add
push
jmp
add
jmp
xchg
pop
xor
sub
add
jmp
push
mov
jmp
pop
jmp
mov
add
jmp
mov
add
shl
sub
sub
jmp
xor
push
jmp
xor
neg
jmp
push
mov
shr
shl
add
push
mov
sub
pop
jmp
sub
mov
jmp
mov
push
mov
push
push
jmp
add
push
push
mov
push
mov
jmp
pop
jmp
shl
xor
sub
jmp
or
neg
shl
xor
jmp
add
add
mov
jmp
or
je
pushl
pushl
pushl
pushl
mov
add
jmp
pop
push
mov
push
jmp
and
sub
add
pop
sub
jmp
pop
sub
add
pushl
mov
add
add
and
jmp
and
xor
add
pop
pop
mov
mov
push
mov
push
mov
not
jmp
mov
mov
add
pop
sub
jmp
sub
sub
sub
pop
add
add
jmp
xor
pop
jmp
and
pop
sub
mov
push
push
popl
push
mov
mov
add
pop
pop
push
mov
inc
jmp
pop
mov
push
jmp
pop
push
mov
jmp
mov
jmp
mov
mov
pop
push
mov
push
mov
add
pop
not
or
and
jmp
add
jmp
add
add
jmp
push
jmp
sub
mov
push
push
mov
push
mov
mov
pop
pop
xor
jmp
add
sub
mov
add
jmp
inc
shl
jmp
add
jmp
mov
jmp
add
jmp
add
pop
jmp
push
jmp
add
add
xchg
pop
mov
add
add
push
mov
sub
jmp
pushl
pop
jmp
push
jmp
mov
push
jmp
pushl
pop
add
add
add
jmp
push
push
jmp
add
pop
inc
jmp
mov
add
sub
mov
pushw
mov
push
mov
neg
shr
not
sub
mov
pop
push
push
mov
jmp
mov
jmp
pushl
pop
sub
mov
mov
push
mov
jmp
add
add
jmp
push
mov
add
jmp
pop
push
push
mov
mov
pop
add
add
push
mov
add
sub
push
pushl
jmp
mov
mov
push
push
jmp
xor
xor
jmp
add
xchg
pop
add
add
push
push
push
pop
jmp
xor
xor
push
jmp
push
push
pop
dec
xor
mov
jmp
add
add
jmp
xor
xor
xor
jmp
push
jmp
push
mov
push
notb
mov
add
shr
jmp
sub
mov
mov
push
jmp
add
sub
push
addl
pop
jmp
add
or
pop
jmp
push
mov
mov
xchg
dec
jmp
sub
or
push
mov
mov
xor
add
jmp
add
jmp
xor
pop
add
jmp
inc
sub
inc
jmp
xchg
not
xchg
jmp
pop
mov
push
mov
add
add
xor
sub
mov
jmp
add
push
mov
pushl
pop
jmp
sub
jmp
jmp
pop
not
jmp
mov
pop
jmp
push
mov
push
mov
xor
xor
sub
jmp
mov
neg
shl
jmp
push
mov
sub
jmp
xchg
jmp
or
pop
sub
add
sub
pop
pop
jmp
add
xchg
jmp
sub
pop
pushl
jmp
sub
not
dec
not
sub
sub
push
mov
add
jmp
add
jmp
pop
push
jmp
mov
pop
sub
add
mov
add
sub
mov
jmp
push
push
mov
push
mov
add
add
xchg
jmp
mov
jmp
pop
jmp
xor
sub
or
add
or
pop
push
jmp
sub
jmp
shr
and
jmp
pop
pop
xchg
pop
sub
add
mov
add
push
push
jmp
mov
jmp
xor
pop
xor
mov
add
and
pop
or
je
pushl
push
push
push
mov
mov
mov
jmp
not
push
mov
xor
jmp
add
add
pop
add
push
pushl
jmp
mov
mov
neg
add
add
add
jmp
mov
shl
jmp
mov
push
mov
sub
mov
mov
xor
xor
inc
xor
xor
add
add
pop
push
mov
jmp
xor
jmp
xor
jmp
sub
mov
mov
sub
pop
push
jmp
mov
shl
dec
sub
sub
jmp
sub
mov
pop
mov
jmp
pushl
mov
add
jmp
mov
jmp
pop
add
pop
jmp
pop
add
add
jmp
sub
add
pushl
pop
add
sub
mov
jmp
mov
jmp
pushw
mov
push
pushf
jmp
add
mov
jmp
push
mov
mov
jmp
push
pushl
pop
popl
mov
div
pushw
mov
push
pushf
jmp
add
mov
pop
mov
sub
pop
xor
and
shl
add
xor
push
mov
mov
jmp
xor
sub
mov
jmp
mov
jmp
mov
sub
mov
push
jmp
shr
jmp
push
mov
jmp
dec
and
xor
mov
pop
shl
or
shl
jmp
sub
xchg
pop
mov
pushl
pop
jmp
or
pop
shr
push
mov
jmp
mov
push
mov
sub
pop
add
xor
jmp
add
sub
xchg
pop
jmp
sub
add
pop
push
jmp
add
push
mov
jmp
add
jmp
mov
jmp
sub
add
jmp
or
push
mov
push
jmp
shr
push
subl
sub
addl
pop
neg
shl
push
mov
add
pop
and
pushl
pop
jmp
add
jmp
mov
add
push
mov
mov
jmp
add
xchg
mov
jmp
pushl
jmp
pop
pushl
pop
add
jmp
popl
mov
mov
push
pushf
jmp
mov
sub
mov
mov
push
mov
push
jmp
mov
shl
shr
jmp
movzbl
pushl
addl
jmp
pop
add
mov
jmp
sub
jmp
popl
sub
mov
push
mov
mov
jmp
inc
add
mov
pushl
jmp
add
add
push
mov
push
mov
add
or
pop
push
mov
not
inc
shl
neg
push
jmp
add
push
jmp
mov
push
mov
add
add
xchg
pop
add
mov
mov
add
and
sub
sub
add
add
sub
jmp
pop
push
mov
add
add
xchg
pop
sub
pop
jmp
add
add
xchg
mov
jmp
sub
pop
add
push
mov
sub
mov
add
pop
xor
mov
add
push
popl
pop
push
push
push
jmp
pop
sub
sub
mov
jmp
pop
add
sub
sub
pushl
pushl
pop
add
push
mov
mov
add
add
jmp
mov
pop
sub
sub
add
pop
sub
sub
mov
jmp
sub
mov
mov
mov
pop
add
jmp
add
mov
add
push
mov
add
jmp
push
jmp
add
push
mov
dec
xor
and
pop
push
jmp
push
pushl
pop
add
jmp
sub
push
pushl
jmp
push
push
jmp
xchg
jmp
mov
mov
xor
pop
add
add
sub
pop
jmp
add
sub
xchg
pop
jmp
xor
xor
xor
jmp
pop
sub
jmp
push
mov
or
jmp
mov
xor
jmp
pop
push
jmp
push
pop
not
not
and
add
mov
pop
jmp
mov
mov
jmp
mov
dec
shl
not
push
push
mov
mov
xor
pop
add
pop
sub
pop
push
sub
mov
jmp
add
jmp
sub
push
pushl
mov
add
jmp
not
xor
add
jmp
mov
jmp
mov
push
push
push
pop
sub
and
push
mov
shr
xor
not
jmp
pop
mov
push
mov
jmp
xor
sub
mov
add
xor
pushl
pop
push
push
jmp
pop
sub
mov
push
jmp
push
push
push
mov
jmp
popl
jmp
add
jmp
not
xchg
jmp
add
jmp
xor
mov
xor
pushf
jmp
add
push
mov
push
mov
or
xor
and
and
xchg
neg
xchg
add
add
pop
push
mov
add
sub
pop
xchg
pop
jmp
push
jmp
pop
mov
addl
mov
push
jmp
lods
xor
push
jmp
xor
xor
jmp
jmp
inc
jmp
pop
add
pop
jmp
mov
add
pop
jmp
pop
add
jmp
pop
jmp
or
dec
add
and
pushl
jmp
push
jmp
push
mov
push
jmp
push
mov
add
push
push
mov
and
shl
neg
and
or
jmp
push
pop
xor
jmp
pop
sub
jmp
and
mov
add
inc
add
jmp
sub
xor
jmp
pop
push
push
jmp
add
jmp
add
jmp
mov
add
jmp
push
push
push
pop
push
jmp
pop
xor
sub
jmp
push
mov
sub
mov
add
add
add
pop
jmp
sub
mov
pop
pop
jmp
sub
xchg
pop
jmp
push
mov
add
add
xchg
pop
mov
add
and
pushl
mov
add
push
mov
jmp
neg
neg
sub
mov
jmp
neg
push
push
mov
sub
shl
and
dec
add
add
push
subl
pop
add
pop
jmp
popl
jmp
pushl
pop
add
pushl
mov
add
push
push
jmp
shr
sub
mov
pop
mov
jmp
add
jmp
xor
mov
add
push
mov
add
mov
add
inc
xor
sub
add
push
mov
sub
add
jmp
jmp
pop
sub
push
jmp
mov
add
sub
xchg
pop
mov
push
push
mov
and
push
jmp
pop
add
pop
push
push
mov
add
push
jmp
add
sub
jmp
pop
dec
add
add
jmp
pop
pop
push
mov
mov
mov
add
mov
add
push
push
mov
shl
not
push
mov
mov
jmp
mov
sub
pop
add
pop
add
pop
pushl
jmp
push
mov
sub
neg
sub
or
pop
xor
add
mov
jmp
xor
pop
xor
pop
push
jmp
pushl
jmp
shr
add
jmp
push
mov
push
mov
mov
neg
dec
shl
jmp
add
jmp
sub
pop
jmp
not
shl
xor
add
dec
jmp
shr
cmp
je
push
mov
jmp
push
mov
jmp
mov
add
dec
jmp
mov
add
push
mov
add
mov
push
jmp
pop
popl
mov
jmp
or
mov
jmp
or
push
mov
jmp
jmp
mov
add
pop
pop
mov
pop
jmp
xchg
pop
addl
add
jmp
pushl
mov
jmp
dec
add
add
pop
push
mov
add
pop
xchg
mov
xor
mov
add
jmp
xchg
pop
xor
pushl
pop
add
xor
xor
jmp
add
pushl
pop
add
not
push
jmp
push
jmp
add
sub
add
pop
mov
pop
sub
mov
add
xchg
jmp
push
mov
mov
neg
jmp
pop
neg
add
dec
neg
jmp
push
push
mov
jmp
push
mov
add
add
xchg
mov
xor
shl
add
jmp
xor
xor
xor
neg
inc
jmp
pop
pop
pop
and
mov
push
mov
jmp
xor
xor
jmp
mov
mov
jmp
mov
jmp
push
jmp
mov
add
jmp
sub
mov
jmp
mov
mov
add
sub
jmp
pushl
mov
push
push
mov
add
add
jmp
push
jmp
push
pop
not
shr
xor
jmp
xor
shl
add
xor
add
pop
xchg
pop
popl
mov
push
push
mov
add
add
jmp
shl
shl
shl
sub
add
pushl
jmp
mov
push
mov
mov
add
pop
popl
push
jmp
push
mov
not
jmp
push
jmp
mov
jmp
pop
add
mov
add
jmp
xor
jmp
push
push
pop
add
jmp
mov
pushw
mov
jmp
mov
pop
or
and
sub
and
pop
sub
push
push
push
pop
jmp
xor
mov
jmp
mov
push
pop
dec
not
sub
add
push
jmp
xor
shl
neg
shl
dec
inc
add
sub
pop
xchg
mov
mov
jmp
pop
add
jmp
xor
and
add
sub
add
jmp
add
sub
xor
xor
xor
pop
mov
mov
jmp
push
jmp
mov
push
mov
add
add
xchg
pop
xchg
jmp
mov
pop
push
mov
pop
jmp
dec
xor
sub
jmp
pop
pop
jmp
push
mov
dec
shl
not
sub
add
jmp
sub
add
jmp
mov
add
sub
sub
pop
xor
add
add
add
sub
sub
pop
xor
pop
jmp
sub
mov
jmp
pop
xchg
jmp
pushw
mov
jmp
mov
add
pop
xchg
mov
shr
pushl
pushl
pop
push
push
mov
add
sub
xchg
pop
jmp
pop
push
mov
add
push
mov
add
pop
jmp
push
mov
sub
pop
add
jmp
pop
pop
xor
jmp
or
pushf
jmp
sub
sub
add
pop
add
add
mov
add
add
xor
xor
xor
jmp
xor
mov
mov
push
mov
jmp
add
add
sub
pop
xchg
pop
jmp
xor
xor
sub
jmp
pop
push
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
add
add
xchg
jmp
inc
jmp
shr
add
push
push
jmp
pushl
pop
add
sub
and
pushl
mov
add
push
jmp
pop
jmp
pop
xor
add
mov
jmp
push
jmp
lods
xor
push
push
mov
push
mov
push
mov
xor
pop
sub
shl
inc
xor
push
mov
mov
jmp
shr
jmp
xor
xor
jmp
sub
pop
jmp
mov
add
push
push
mov
jmp
pushl
mov
jmp
mov
mov
add
pop
pop
add
sub
add
push
mov
jmp
sub
sub
pop
sub
pop
popl
jmp
mov
add
mov
pushl
jmp
add
xchg
pop
push
mov
mov
add
push
mov
add
jmp
add
jmp
mov
not
inc
jmp
push
mov
xchg
not
xchg
mov
pop
neg
push
mov
push
mov
mov
add
and
pop
xor
neg
shl
sub
xor
pop
sub
push
jmp
pop
mov
push
pushl
pop
push
push
mov
add
push
mov
jmp
mov
push
mov
push
pop
push
jmp
pop
jmp
xchg
pop
push
mov
jmp
jmp
xchg
pop
jmp
add
push
mov
and
pop
sub
xor
push
subl
pop
push
mov
shr
shl
xor
not
push
mov
add
or
not
sub
add
pop
add
pop
pop
mov
jmp
xchg
dec
push
push
pop
pop
inc
push
jmp
mov
push
mov
mov
pop
jmp
sub
push
mov
sub
pop
mov
jmp
pop
push
jmp
add
sub
sub
mov
add
add
add
sub
mov
add
jmp
shl
sub
sub
jmp
xor
xor
jmp
add
xchg
pop
xor
xor
mov
add
and
pushl
pop
push
mov
jmp
mov
jmp
mov
mov
push
mov
add
add
jmp
add
mov
pop
not
inc
xor
add
push
push
push
pop
push
push
mov
xor
mov
pop
jmp
add
sub
xor
xor
jmp
push
jmp
add
dec
xor
push
mov
add
pop
sub
sub
pop
jmp
xor
push
pop
mov
add
and
jmp
pop
jmp
push
mov
mov
pop
pop
or
and
not
xor
jmp
neg
xor
add
mov
add
push
jmp
pushl
pop
popl
pop
push
mov
push
jmp
pop
mov
mov
xor
add
jmp
mov
sub
pop
add
jmp
mov
add
pop
jmp
not
jmp
mov
jmp
mov
add
jmp
add
jmp
sub
mov
mov
xor
push
mov
inc
jmp
add
push
mov
jmp
pop
sub
mov
push
pop
push
jmp
add
or
pop
jmp
pop
mov
push
push
pop
push
mov
jmp
push
mov
pushl
pushl
pop
push
sub
mov
addl
jmp
shl
shl
shl
and
push
push
mov
or
shr
add
mov
pop
add
pop
and
pop
add
shr
push
mov
jmp
mov
add
push
jmp
shr
and
not
or
jmp
sub
pushl
mov
add
add
add
add
push
jmp
pop
push
push
jmp
not
shl
push
mov
sub
jmp
mov
mov
xor
jmp
xor
neg
jmp
pop
jmp
add
add
xchg
pop
push
jmp
xor
pop
jmp
mov
mov
pop
not
push
mov
sub
pop
jmp
mov
add
dec
jmp
mov
add
pop
push
mov
jmp
pop
pushl
pop
add
jmp
push
mov
sub
pop
push
jmp
pushl
popf
pop
sbb
pushf
jmp
add
mov
jmp
mov
push
mov
mov
pop
add
add
xor
jmp
and
mov
jmp
pop
xchg
pop
idiv
jmp
pushl
mov
jmp
sub
add
push
mov
sub
add
add
pop
pop
pop
xchg
pop
mov
mov
add
sub
mov
jmp
xor
add
sub
jmp
add
xor
xor
xor
mov
jmp
add
sub
pop
xchg
jmp
add
add
push
pushl
pop
popl
mov
push
mov
sub
mov
addl
pop
jmp
dec
xor
sub
pop
jmp
mov
jmp
sub
add
add
pop
and
add
sub
mov
subl
mov
add
add
pop
push
jmp
pop
jmp
add
mov
add
movzbl
jmp
xor
sub
mov
jmp
add
add
pop
add
push
sub
mov
push
mov
mov
pop
mov
mov
add
add
push
mov
xchg
push
notl
pop
jmp
sub
mov
pop
add
pop
add
sub
sub
push
push
mov
jmp
sub
jmp
mov
pop
jmp
pop
dec
xor
mov
pop
jmp
xchg
pop
mov
push
mov
add
pushl
jmp
push
jmp
xor
pop
pop
push
mov
not
shr
and
and
sub
xor
mov
add
pop
mov
add
mov
push
jmp
mov
push
mov
add
sub
xor
jmp
mov
push
mov
add
add
xchg
pop
add
push
mov
xor
pop
push
jmp
push
pushl
pushl
mov
add
add
push
mov
add
jmp
mov
sub
push
sub
mov
jmp
pop
mov
sub
jmp
push
sub
mov
jmp
mov
jmp
sub
add
jmp
push
push
mov
jmp
push
push
mov
push
pop
mov
pop
push
mov
shl
jmp
mov
push
mov
jmp
pop
add
sub
add
mov
add
jmp
add
xchg
pop
add
push
mov
push
push
mov
push
mov
mov
sub
pop
push
mov
jmp
neg
xor
jmp
xor
jmp
add
add
sub
jmp
mov
pop
jmp
push
mov
sub
add
add
pop
xchg
pop
push
push
mov
neg
jmp
sub
mov
pushl
mov
add
popl
pop
xor
pushf
jmp
and
jmp
xor
pop
jmp
add
mov
add
jmp
mov
push
mov
push
mov
dec
and
add
add
pop
add
add
mov
pop
add
jmp
push
mov
add
push
mov
push
jmp
not
xchg
add
sub
jmp
sub
neg
or
jmp
pop
shl
push
mov
push
mov
mov
jmp
add
pop
xchg
pop
sub
mov
mov
inc
sub
sub
push
jmp
pop
mov
pushl
jmp
and
add
sub
jmp
pop
jmp
mov
jmp
push
subl
pop
add
jmp
pop
pop
add
add
xor
xor
xor
pop
jmp
add
pop
xor
mov
jmp
push
mov
jmp
mov
push
mov
push
pop
push
jmp
shr
or
push
jmp
mov
pushl
mov
add
popl
mov
mov
jmp
mov
push
mov
push
mov
jmp
xor
jmp
pop
push
jmp
add
xchg
dec
xchg
push
jmp
pop
push
mov
add
push
mov
jmp
mov
jmp
add
jmp
shr
push
mov
jmp
add
pop
addl
pushl
jmp
pop
sub
shl
jmp
push
mov
push
push
push
mov
jmp
mov
push
pop
pop
dec
push
mov
sub
pop
sub
jmp
xor
sub
mov
mov
add
pop
add
and
pop
jmp
mov
add
pushl
mov
add
add
jmp
push
push
mov
mov
pop
add
pop
xchg
pop
bt
pushf
jmp
mov
add
add
xchg
pop
sub
shr
xor
push
pop
pop
jmp
pop
push
mov
add
jmp
xor
sub
pop
sub
add
mov
add
add
jmp
pop
jmp
sub
mov
mov
add
add
sub
mov
jmp
pop
sub
mov
mov
jmp
xor
pop
jmp
sub
pushw
mov
sub
mov
mov
jmp
jmp
push
mov
mov
pop
jmp
add
pushl
pop
add
add
pushl
jmp
xor
xor
xor
not
push
push
mov
pop
pushl
pop
jmp
pop
xor
xor
xor
mov
imul
push
mov
push
sub
mov
push
mov
shr
jmp
mov
add
add
jmp
mov
mov
jmp
sub
jmp
mov
push
mov
shr
add
add
pop
xchg
not
xchg
push
push
mov
mov
add
pop
and
jmp
push
sub
push
popl
addl
popl
push
mov
mov
jmp
add
pop
sub
jmp
notl
pop
jmp
add
add
jmp
mov
add
mov
jmp
jmp
mov
mov
push
mov
mov
add
mov
add
push
mov
mov
xchg
not
xor
jmp
xchg
pop
add
sub
jmp
push
pushl
mov
jmp
push
mov
sub
dec
xor
sub
pop
xchg
pop
mov
push
mov
jmp
mov
jmp
pop
add
pop
mov
pop
shr
sub
sub
add
jmp
mov
jmp
pushl
pop
popl
pop
mov
jmp
xchg
mov
xchg
pop
pushl
pop
jmp
push
mov
push
mov
jmp
pop
push
jmp
pushl
pushl
pop
jmp
pushl
pop
jmp
pop
push
mov
jmp
sub
sub
pop
jmp
popl
mov
push
mov
push
mov
sub
jmp
pop
add
add
sub
pop
jmp
shr
or
inc
jmp
push
jmp
add
add
xchg
pop
pushl
pushl
pop
push
mov
jmp
pushl
mov
add
popl
mov
push
mov
push
jmp
add
push
mov
add
mov
jmp
mov
dec
jmp
push
mov
dec
not
add
jmp
mov
add
push
mov
add
not
sub
jmp
push
pushl
jmp
mov
neg
or
and
not
xor
jmp
push
push
pop
sub
pop
push
push
pop
pop
xor
and
mov
push
jmp
pop
popl
mov
push
jmp
push
mov
mov
pop
sub
pop
jmp
push
mov
jmp
mov
shll
pushf
jmp
and
pop
sub
add
sub
pop
shl
inc
dec
push
mov
or
pop
shl
xor
add
pop
push
jmp
add
jmp
incl
pushf
jmp
xor
jmp
add
pop
add
mov
add
push
push
mov
mov
pop
xchg
add
xchg
inc
pushw
mov
mov
add
mov
jmp
pop
mov
add
push
mov
push
mov
add
add
mov
add
push
push
mov
push
pop
jmp
xor
xor
xor
pop
jmp
pushl
pop
jmp
pop
push
mov
push
pop
mov
pop
jmp
xor
xor
xor
jmp
push
push
jmp
pop
jmp
mov
add
add
add
or
or
shr
push
mov
jmp
add
add
pop
pop
xchg
jmp
mov
add
push
push
pop
add
add
jmp
dec
dec
jmp
mov
add
jmp
xor
sub
pop
push
push
mov
mov
jmp
add
push
push
mov
xor
push
jmp
add
push
pushl
pushl
pop
add
popl
mov
jmp
and
jmp
push
jmp
add
sub
sub
pop
add
sub
push
mov
sub
jmp
shl
add
mov
mov
jmp
ret
jmp
sub
pop
jmp
add
add
jmp
mov
push
mov
neg
jmp
mov
push
mov
addl
pop
sub
mov
push
push
mov
push
mov
add
sub
add
pop
mov
jmp
push
jmp
mov
mov
pop
push
mov
jmp
pop
inc
add
push
mov
mov
pop
pop
jmp
push
mov
add
mov
jmp
push
mov
jmp
pop
add
sub
add
jmp
add
not
neg
or
shr
push
mov
add
jmp
pop
push
mov
add
add
xchg
pop
push
mov
jmp
xchg
pop
xchg
mov
mov
jmp
pushl
popf
pop
adc
pushf
jmp
mov
add
xchg
mov
btc
pushf
jmp
mov
add
xor
jmp
mov
jmp
pop
jmp
mov
add
jmp
push
mov
dec
xor
and
pop
push
mov
add
sub
add
add
sub
jmp
mov
add
jmp
not
and
shr
sub
jmp
jmp
neg
xor
add
add
pop
add
xchg
jmp
push
jmp
push
jmp
xor
xor
add
pop
push
mov
or
dec
dec
jmp
push
mov
and
pop
and
or
inc
xor
sub
pop
pop
mov
add
rep
add
push
push
jmp
xor
jmp
push
mov
add
jmp
mov
rorw
pushf
jmp
add
add
push
jmp
push
mov
add
push
mov
and
jmp
add
jmp
sub
pop
push
pushl
pop
popl
pop
mov
mov
sub
mov
jmp
xor
mov
mov
add
mov
mov
add
jmp
notl
pop
and
jmp
addl
popl
sub
mov
mov
jmp
mov
sub
add
add
pop
xchg
mov
mov
push
mov
mov
jmp
xor
pop
xor
mov
jmp
mov
mov
pop
xor
dec
xor
jmp
push
push
jmp
mov
sub
mov
push
jmp
mov
mov
jmp
mov
push
push
mov
jmp
xor
xor
jmp
mov
add
push
push
mov
add
jmp
mov
mov
jmp
pop
shl
jmp
mov
sub
jmp
sub
pop
add
pushl
jmp
mov
pop
jmp
shl
jmp
add
push
push
jmp
pop
jmp
pop
push
push
jmp
mov
add
pop
and
push
mov
sub
jmp
pop
add
xchg
jmp
pop
add
sub
mov
mov
jmp
neg
jmp
mov
mov
pop
sub
jmp
add
push
mov
neg
add
or
pop
xor
mov
mov
jmp
add
xor
add
mov
jmp
pushl
popf
pop
rcrw
pushf
jmp
pop
or
pushl
mov
add
add
push
jmp
add
pop
add
push
pushl
pop
popl
mov
popl
mov
and
pushf
jmp
lods
jmp
sub
add
add
jmp
add
add
jmp
sub
pop
mov
jmp
add
jmp
dec
jmp
push
mov
add
jmp
mov
push
push
pop
xor
jmp
sub
jmp
sub
xchg
pop
mov
mov
push
mov
mov
add
pop
push
push
jmp
mov
pushl
pop
popl
mov
mov
push
mov
push
mov
xor
and
neg
shr
jmp
mov
jmp
push
push
mov
mov
mov
pop
sub
mov
push
pop
add
sub
sub
pop
jmp
xor
pop
push
mov
push
mov
mov
sub
mov
push
mov
xor
jmp
xchg
jmp
xchg
pop
pushl
pushl
pop
push
mov
add
add
xchg
mov
push
mov
add
sub
jmp
add
push
mov
sub
pop
push
jmp
push
mov
add
mov
add
mov
jmp
push
pop
mov
xor
mov
sub
mov
push
jmp
push
mov
add
pop
pop
add
jmp
sub
add
pop
sub
jmp
push
mov
pushl
pop
popl
pop
mov
push
mov
add
sub
mov
sub
jmp
pop
mov
sub
mov
sub
mov
addl
pushl
pop
add
push
push
mov
mov
mov
add
push
mov
xor
pop
inc
not
jmp
sub
pop
jmp
addl
pop
jmp
popl
jmp
push
xchg
not
xchg
pushl
jmp
mov
sub
mov
jmp
pop
mov
jmp
mov
sub
pop
jmp
and
xor
jmp
pop
mov
add
add
sub
sub
jmp
add
pop
push
mov
add
shr
sub
add
sub
add
jmp
add
add
push
push
push
mov
jmp
mov
add
pop
jmp
mov
mov
push
push
jmp
add
jmp
pop
pop
xor
xor
xor
pop
xor
xor
jmp
mov
add
shl
jmp
sub
sub
jmp
pop
or
shl
xchg
push
jmp
mov
mov
mov
push
jmp
sub
pop
add
pop
sub
mov
push
jmp
pushl
pop
add
addl
sub
subl
mov
jmp
push
push
pop
jmp
push
jmp
dec
jmp
mov
add
pop
push
mov
add
pop
add
push
mov
sub
pop
push
jmp
add
pop
add
add
jmp
xor
jmp
pop
add
xchg
pop
push
jmp
push
mov
add
add
push
jmp
pop
popl
mov
push
jmp
mov
push
pop
push
jmp
mov
push
pop
push
mov
sub
mov
jmp
popl
addl
popl
addl
mov
jmp
sub
sub
pop
add
mov
add
push
jmp
mov
jmp
sub
add
pop
jmp
push
jmp
add
add
xor
mov
push
mov
mov
add
add
xchg
pop
sub
mov
mov
push
mov
decl
notl
mov
add
jmp
pop
jmp
add
add
jmp
sub
dec
or
and
jmp
mov
push
jmp
sub
xor
xor
xor
mov
mov
jmp
mov
add
add
xchg
jmp
add
xchg
pop
jmp
push
jmp
push
push
push
mov
add
push
mov
xor
pop
add
push
jmp
add
jmp
or
and
or
sub
add
pop
xchg
mov
movzwl
push
jmp
mov
jmp
pop
xchg
sub
push
mov
sub
mov
add
push
mov
shl
add
jmp
add
add
pushl
jmp
add
add
push
mov
sub
sub
jmp
add
xor
xor
xor
mov
push
mov
push
mov
mov
dec
push
mov
jmp
shrb
pushf
jmp
add
push
mov
push
mov
mov
pop
jmp
xor
jmp
add
push
mov
add
jmp
mov
sub
mov
push
mov
not
jmp
mov
pop
xor
not
inc
push
mov
jmp
sub
mov
mov
add
push
push
push
pop
shr
shl
sub
mov
push
push
mov
push
jmp
imul
movzbw
pushw
mov
jmp
push
mov
mov
push
mov
sub
xchg
mov
add
neg
dec
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
add
sub
xchg
pop
jmp
push
push
push
mov
jmp
movzbl
pushl
jmp
push
push
mov
mov
sub
pop
jmp
xor
sub
pop
jmp
sub
mov
mov
add
add
xchg
pop
pop
or
pop
jmp
add
xor
pop
jmp
mov
xor
jmp
mov
jmp
xor
add
jmp
pop
mov
mov
xor
not
xor
jmp
mov
jmp
sub
add
add
mov
jmp
and
shr
sub
jmp
and
jmp
push
sub
mov
jmp
add
mov
pop
push
mov
mov
pop
mov
add
neg
add
sub
jmp
sub
not
push
push
pop
add
mov
add
sub
jmp
add
jmp
mov
jmp
sub
pop
xchg
xchg
not
xchg
xchg
or
jmp
sub
push
mov
add
add
sub
mov
add
add
add
mov
add
push
pushl
mov
push
mov
add
push
mov
add
pop
xchg
pop
popl
mov
xor
jmp
pushl
jmp
shl
and
jmp
shl
push
mov
sub
mov
add
add
pop
xchg
mov
push
mov
jmp
push
mov
mov
push
mov
add
push
mov
sub
pop
xchg
pop
jmp
and
shl
shl
sub
mov
mov
xor
mov
add
add
pop
addl
pop
jmp
add
add
jmp
not
not
not
jmp
push
mov
jmp
mov
push
push
pop
add
pop
mov
add
jmp
and
jmp
add
sub
pop
push
jmp
pop
jmp
sub
push
push
mov
mov
pop
sub
not
and
neg
xor
sub
add
jmp
popl
jmp
xchg
mov
mov
push
mov
mov
add
jmp
push
jmp
add
pushl
mov
add
add
xor
xor
xor
pop
idiv
jmp
pop
inc
dec
push
mov
jmp
mov
push
mov
jmp
push
mov
push
mov
xor
sub
xor
pop
push
mov
sub
sub
push
jmp
push
push
pop
neg
dec
add
mov
pop
xor
add
add
jmp
xchg
pop
shr
xor
push
mov
push
mov
push
jmp
push
jmp
add
jmp
shl
dec
inc
sub
push
addl
pop
sub
pop
push
notl
jmp
pushl
popf
pop
rclb
pushf
jmp
sub
add
jmp
push
mov
jmp
inc
add
mov
jmp
pushl
jmp
mov
shl
and
add
xor
add
add
sub
pop
push
mov
sub
push
mov
add
jmp
pop
jmp
add
sub
sub
mov
jmp
xor
xor
inc
xor
jmp
mov
add
add
xchg
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
add
pop
sub
sub
dec
xor
or
pop
sub
neg
jmp
subl
pop
jmp
xchg
pop
popl
pop
mov
push
pop
add
jmp
pushl
pop
jmp
sub
jmp
sub
jmp
pop
inc
push
mov
push
mov
sub
sub
add
pop
add
add
sub
jmp
or
xor
mov
pop
push
mov
add
sub
push
mov
pushl
pop
popl
jmp
pop
push
addl
jmp
add
pop
pop
sub
add
jmp
or
mov
push
mov
add
push
jmp
sub
push
jmp
not
neg
push
push
mov
jmp
jmp
xchg
jmp
xor
xor
pop
jmp
push
mov
addl
add
subl
pop
add
subl
push
mov
sub
jmp
mov
push
mov
xorl
jmp
mov
add
add
jmp
mov
xor
jmp
pop
push
mov
neg
shl
jmp
add
mov
pop
jmp
xor
sub
add
add
pop
xor
jmp
push
jmp
add
add
sub
pop
add
push
jmp
push
pop
jmp
or
sub
add
pop
push
mov
sub
add
jmp
pushl
pop
add
sub
jmp
add
pop
xor
xor
xor
mov
pushl
pushl
pop
push
mov
jmp
add
jmp
sub
sub
mov
jmp
sub
mov
jmp
add
jmp
shr
xor
sub
mov
addl
mov
sub
jmp
pop
xchg
pop
jmp
add
pushf
jmp
pushl
pop
push
mov
add
add
xchg
pop
push
mov
add
push
jmp
or
xor
xor
mov
add
sub
jmp
pop
sub
add
sub
sub
jmp
mov
dec
not
sub
jmp
mov
sub
mov
jmp
push
mov
mov
add
jmp
mov
dec
neg
xor
jmp
mov
xor
pop
and
pop
jmp
sub
xor
pop
jmp
mov
pop
mov
jmp
sub
dec
or
xor
mov
pop
push
mov
sub
pop
dec
push
mov
push
jmp
mov
add
sub
xor
jmp
add
add
mov
add
jmp
inc
xor
sub
sub
add
pop
xor
mov
mov
jmp
mov
jmp
neg
shl
add
add
jmp
pop
pop
push
jmp
mov
mov
add
sub
xor
xor
xor
pop
mov
subl
pop
add
push
addl
pop
push
jmp
sub
push
pushl
pop
add
jmp
push
jmp
sub
add
sub
sub
pop
shl
push
mov
jmp
mov
push
mov
mov
pushl
jmp
sub
xchg
pop
mov
mov
push
notl
mov
add
add
jmp
add
add
sub
pop
add
sub
sub
pop
add
add
sub
mov
mov
xor
jmp
pop
jmp
push
jmp
pop
add
add
xchg
pop
add
pushl
pop
jmp
add
jmp
push
push
pop
jmp
mov
neg
inc
jmp
push
mov
push
mov
xor
mov
pop
jmp
ret
jmp
push
mov
not
not
sub
add
pop
xchg
jmp
sub
pop
jmp
mov
add
mov
add
push
mov
push
mov
not
dec
neg
add
add
mov
jmp
add
pushl
pushl
pushl
pop
push
sub
mov
addl
mov
push
mov
add
jmp
xchg
push
jmp
mov
jmp
sub
pop
push
mov
add
jmp
neg
not
not
add
xor
add
pop
sub
jmp
movzbw
pushw
mov
jmp
sub
pop
dec
shl
add
sub
mov
push
pop
push
mov
sub
jmp
add
push
mov
sub
pop
jmp
pop
sub
sub
push
mov
jmp
pop
add
shr
jmp
push
pop
jmp
not
sub
mov
mov
add
sub
pop
sub
push
jmp
add
add
push
push
mov
mov
jmp
add
pop
jmp
add
push
push
push
mov
mov
pop
mov
pop
shr
push
jmp
push
mov
shr
shl
not
dec
jmp
pop
push
notb
pop
neg
or
xor
push
mov
push
mov
jmp
push
mov
sub
pop
add
jmp
pop
jmp
mov
mov
jmp
push
jmp
pop
jmp
pop
xor
push
jmp
sub
jmp
mov
push
mov
push
push
pop
and
sub
jmp
mov
mov
add
pop
add
sub
pop
jmp
xchg
pop
jmp
pop
jmp
add
jmp
sub
mov
push
jmp
not
add
push
mov
dec
jmp
mov
sub
jmp
mov
jmp
add
push
mov
sub
xchg
pop
shl
jmp
or
push
mov
xor
pop
and
pop
jmp
add
pop
sub
pop
pop
jmp
add
xchg
pop
push
mov
jmp
xor
jmp
pushl
jmp
push
pushl
pushl
pop
add
popl
mov
mov
push
pushf
jmp
shl
shr
xor
add
pop
push
mov
jmp
popl
pop
shrw
pushf
jmp
add
add
xchg
mov
push
mov
mov
add
sub
push
mov
push
mov
add
jmp
mov
jmp
push
push
push
pop
xor
mov
pop
sub
dec
jmp
pop
pop
jmp
pop
jmp
add
pop
shl
shr
shl
neg
sub
push
mov
xor
sub
add
add
pop
jmp
pushl
pop
add
popl
mov
push
mov
add
add
xchg
pop
push
push
jmp
xor
xchg
jmp
pushl
pushl
pop
push
mov
add
add
jmp
sub
pop
jmp
xor
xor
xor
mov
jmp
push
jmp
mov
jmp
add
push
mov
push
mov
jmp
add
jmp
lods
push
mov
mov
add
sub
xor
xor
xor
jmp
pop
jmp
shr
xor
xchg
xchg
jmp
and
sub
add
xor
pop
shr
add
jmp
push
mov
mov
pop
jmp
add
push
mov
add
pop
xchg
pop
jmp
mov
jmp
pop
shl
push
mov
sub
mov
push
pushl
pop
add
inc
xor
mov
pop
shl
xor
push
push
mov
mov
pop
jmp
mov
neg
jmp
pop
sub
add
sub
add
add
jmp
push
mov
add
sub
xchg
jmp
add
push
mov
and
sub
add
shl
sub
jmp
neg
sub
jmp
xor
push
sub
mov
jmp
xor
jmp
neg
and
shl
jmp
popl
mov
mov
jmp
mov
add
jmp
add
push
mov
push
mov
dec
xor
not
sub
jmp
pop
mov
mov
add
mov
jmp
xor
xor
mov
sarw
pushf
jmp
add
pop
add
jmp
mov
pop
add
or
xor
or
pop
jmp
inc
push
jmp
sub
xor
jmp
add
add
sub
jmp
pop
push
jmp
mov
jmp
xor
jmp
push
mov
pop
jmp
mov
mov
push
mov
add
jmp
pop
jmp
add
sub
push
push
mov
jmp
push
jmp
pop
popl
pop
push
push
pop
jmp
add
pushl
pop
add
sub
mov
jmp
push
mov
mov
pop
add
jmp
add
xchg
jmp
lods
push
mov
push
jmp
push
mov
mov
pop
sub
push
mov
jmp
mov
mov
add
mov
push
mov
add
add
xchg
pop
xor
jmp
sub
push
jmp
pushl
jmp
mov
xor
pop
shr
push
jmp
pop
push
mov
jmp
pop
popl
mov
jmp
push
mov
push
pop
add
add
sub
pop
xchg
mov
mov
push
push
push
popl
addl
mov
jmp
add
sub
add
jmp
xchg
mov
push
push
jmp
add
jmp
mov
jmp
push
pushl
mov
add
push
mov
add
jmp
push
pop
push
push
mov
jmp
push
jmp
add
push
mov
sub
shr
shr
and
xor
jmp
xor
xor
mov
push
mov
sub
mov
push
mov
mov
pop
sub
jmp
add
push
mov
xor
pop
xor
pop
jmp
mov
pop
jmp
pushl
pop
jmp
mov
jmp
mov
jmp
pop
push
mov
sub
mov
pop
and
xor
add
pop
xor
xor
xor
pop
push
jmp
mov
push
jmp
xor
pop
mov
pop
jmp
xor
jmp
dec
inc
push
mov
add
jmp
push
push
mov
push
jmp
mov
sub
jmp
mov
dec
sub
mov
mov
and
jmp
pushl
pushl
pop
push
mov
jmp
pop
jmp
pushl
pop
push
mov
add
push
jmp
xchg
pop
sub
jmp
push
mov
push
mov
add
pop
push
push
mov
mov
pop
sub
sub
add
pop
xchg
mov
sub
mov
addl
popl
push
mov
add
pop
mov
push
mov
jmp
pop
pop
pop
mov
pop
jmp
or
xor
jmp
add
pop
sub
mov
push
mov
mov
jmp
pop
add
add
push
pushl
pop
popl
pop
jmp
negb
pushf
jmp
mov
jmp
add
xchg
pop
mov
mov
sub
jmp
sub
add
add
pop
push
pushl
jmp
push
jmp
pop
add
push
mov
add
pushl
jmp
pop
add
jmp
xor
add
pop
push
mov
mov
add
jmp
push
notl
pop
add
add
jmp
or
dec
sub
add
jmp
dec
push
jmp
sub
mov
add
jmp
shr
shl
xor
sub
add
pop
add
xchg
pop
sub
xor
jmp
mov
shr
dec
or
sub
add
xor
and
pop
not
sub
mov
pop
mov
sub
pushl
pop
add
push
jmp
not
sub
jmp
pushl
mov
add
sub
mov
push
mov
add
push
mov
mov
push
mov
sub
pop
sub
add
pop
jmp
mov
push
mov
mov
push
mov
jmp
sub
pop
xor
xor
pop
add
pop
push
pushl
pop
popl
mov
sub
jmp
add
jmp
pop
jmp
mov
push
mov
add
add
xor
mov
jmp
sub
sub
add
mov
add
xor
jmp
push
mov
jmp
sub
push
incl
pop
push
mov
jmp
add
add
add
jmp
sub
add
jmp
push
mov
shl
push
push
mov
jmp
add
push
push
pop
sub
pop
xchg
pop
jmp
mov
push
pushf
jmp
pop
push
mov
add
shr
sub
add
mov
add
add
xor
xor
jmp
mov
jmp
dec
sub
add
sub
sub
mov
add
push
mov
shl
sub
neg
inc
and
sub
jmp
addl
mov
add
push
mov
jmp
push
mov
shr
shl
sub
add
pop
add
jmp
subl
addl
add
subl
addl
addl
pushl
jmp
xor
mov
jmp
pushl
pop
sub
mov
mov
add
jmp
xor
pop
sub
pop
push
jmp
push
push
pop
push
mov
add
pushl
pop
add
add
push
pushl
mov
add
popl
pop
jmp
mov
jmp
mov
add
sub
mov
push
mov
add
add
add
xor
xor
xor
mov
jmp
shr
neg
dec
push
mov
or
jmp
mov
jmp
push
mov
shl
dec
xor
or
jmp
push
mov
push
mov
xor
mov
pop
add
pop
push
mov
add
sub
jmp
pushl
mov
add
sub
jmp
mov
mov
mov
jmp
add
jmp
pop
add
push
push
mov
shr
sub
push
subl
pop
add
pop
or
dec
sub
jmp
push
pop
jmp
pushl
pop
add
push
jmp
shr
add
shl
shr
push
jmp
add
mov
jmp
mov
pop
mov
pop
mov
add
push
jmp
add
jmp
dec
jmp
pop
push
push
mov
jmp
add
pop
add
pop
push
push
jmp
mov
not
neg
sub
xor
jmp
push
push
pop
add
add
xchg
mov
add
push
push
mov
jmp
push
jmp
mov
not
sub
and
dec
jmp
mov
add
popw
jmp
popl
pop
pop
jmp
lods
jmp
mov
pop
mov
pop
add
mov
push
mov
add
add
xchg
mov
push
sub
mov
mov
dec
shl
add
jmp
push
jmp
push
mov
sub
jmp
xor
jmp
push
pop
xor
mov
pop
sub
pop
sub
sub
sub
jmp
mov
push
mov
sub
mov
jmp
mov
jmp
sub
push
addl
jmp
pop
pop
sub
sub
sub
jmp
xor
pop
shr
push
push
jmp
mov
mov
push
notl
mov
add
xor
inc
xor
push
mov
sub
mov
mov
shl
inc
not
jmp
mov
push
mov
jmp
push
mov
mov
jmp
sub
pop
jmp
mov
add
pop
sub
mov
mov
add
pop
jmp
mov
push
push
jmp
pop
push
push
mov
and
jmp
mov
shr
shr
sub
xor
jmp
push
mov
pushl
pop
popl
jmp
pushl
pop
push
jmp
push
pushl
pushl
pop
push
push
pop
add
jmp
push
mov
sub
neg
sub
not
add
mov
pop
sub
pop
xor
xor
jmp
shr
jmp
mov
jmp
pop
add
add
jmp
add
xor
sub
add
jmp
xor
xor
xor
pop
sub
jmp
add
add
sub
sub
pop
add
push
mov
add
pop
mov
add
xchg
jmp
push
jmp
sub
pop
mov
add
movzbl
mov
sub
mov
mov
push
push
jmp
mov
add
mov
xor
jmp
mov
sub
mov
add
jmp
mov
sub
mov
push
pop
push
jmp
mov
sub
sub
add
jmp
push
jmp
pushl
pop
add
jmp
xchg
jmp
add
sub
pop
sub
add
push
mov
push
mov
jmp
jmp
mov
push
jmp
mov
xchg
neg
xchg
xor
jmp
pop
jmp
pushl
pop
jmp
mov
push
pop
add
push
addl
pop
sub
jmp
pop
sub
sub
add
push
mov
add
and
shl
shl
jmp
add
sub
jmp
add
pop
jmp
mov
jmp
movzbw
pushw
mov
jmp
add
push
jmp
mov
add
jmp
push
popl
push
mov
jmp
pop
popl
mov
push
mov
push
push
jmp
sub
pop
push
jmp
push
mov
add
jmp
dec
shl
push
mov
sub
pop
add
mov
add
push
pop
pop
add
add
sub
mov
add
push
push
pop
push
mov
add
sub
xchg
pop
mov
push
jmp
xchg
jmp
sub
jmp
pushl
mov
add
add
sub
jmp
push
jmp
mov
push
mov
sub
mov
jmp
mov
push
jmp
pop
pop
add
xor
xor
xor
mov
push
mov
pushl
pushl
mov
push
mov
add
add
xchg
pop
push
jmp
sub
or
jmp
mov
add
mov
mov
add
jmp
movzbl
pushw
jmp
inc
jmp
mov
add
pop
and
jmp
sub
jmp
xor
pop
pop
push
mov
jmp
xor
xor
pop
jmp
xor
mov
add
or
je
push
jmp
mov
jmp
mov
push
mov
xor
pop
shl
shl
or
neg
xor
sub
sub
sub
add
add
pop
add
add
jmp
neg
push
mov
and
jmp
pushl
pop
add
add
push
push
mov
push
mov
add
pushl
pop
add
add
jmp
and
pop
add
push
mov
mov
mov
push
mov
add
add
push
pushl
pop
jmp
mov
mov
sub
pop
sub
add
sub
pushl
pop
jmp
sub
add
sub
mov
jmp
add
pop
xor
xor
xor
pop
mov
jmp
pop
jmp
mov
push
push
jmp
add
sub
xchg
pop
mov
mov
jmp
push
mov
shl
inc
add
add
xor
jmp
pop
push
jmp
pop
push
mov
sub
add
add
pop
add
xor
jmp
sub
xor
jmp
pop
push
mov
pushl
jmp
push
push
jmp
or
or
push
mov
add
pop
sub
add
add
pop
sub
mov
mov
xor
jmp
pop
mov
mov
sub
mov
jmp
push
mov
mov
not
inc
shr
jmp
push
subl
pop
add
pop
jmp
addl
pop
add
sub
mov
push
jmp
mov
add
xor
sub
mov
add
jmp
sub
jmp
mov
jmp
and
add
sub
mov
sub
mov
mov
push
mov
add
pop
push
mov
add
jmp
not
xor
add
pop
xchg
mov
push
jmp
xor
mov
jmp
mov
add
pop
sub
xor
jmp
sub
jmp
add
xor
xor
xor
mov
test
pushf
jmp
popl
jmp
inc
add
jmp
mov
push
mov
push
pushl
pop
push
mov
push
jmp
mov
pop
addw
subw
subw
add
addw
jmp
pushl
jmp
add
push
jmp
mov
pushl
pushl
jmp
add
add
xchg
jmp
inc
push
push
mov
jmp
push
mov
jmp
neg
add
sub
pop
mov
pop
sub
push
pop
pop
add
push
jmp
push
notw
pop
push
pushw
pop
add
inc
push
jmp
mov
jmp
mov
jmp
add
pop
jmp
add
pop
push
jmp
push
mov
jmp
popl
jmp
push
mov
add
sub
xchg
pop
mov
sub
mov
addl
mov
add
sub
mov
push
mov
mov
xor
pop
jmp
mov
pop
sub
pop
and
jmp
xor
pushw
mov
xor
jmp
mov
push
mov
add
add
jmp
pushl
jmp
subl
popl
addl
pop
mov
add
pushl
pop
push
jmp
sub
mov
jmp
pop
push
jmp
pop
jmp
push
mov
jmp
xor
pop
add
xor
pop
add
push
mov
jmp
xor
pop
push
push
jmp
shr
jmp
pushl
pop
popl
xchg
push
mov
push
pop
push
mov
mov
add
add
sub
pushl
pop
add
push
jmp
and
pushl
mov
add
jmp
push
pop
sub
not
or
xor
mov
jmp
addl
mov
add
sub
mov
push
mov
push
push
jmp
pop
push
mov
sub
mov
mov
add
sub
mov
mov
or
or
xor
add
pop
add
jmp
pop
jmp
pop
pop
push
mov
xor
jmp
push
jmp
mov
add
add
xchg
pop
add
jmp
push
mov
add
add
xchg
mov
jmp
mov
jmp
add
push
push
mov
xor
mov
pop
add
not
xor
jmp
jmp
sub
pop
push
jmp
dec
add
jmp
pop
not
add
mov
pop
mov
jmp
mov
mov
add
add
xchg
jmp
not
inc
shr
inc
dec
push
jmp
mov
sub
pop
shr
shl
add
push
mov
sub
pop
add
push
jmp
add
xor
jmp
push
mov
add
sub
xchg
mov
mov
pushl
pop
push
mov
push
mov
jmp
and
add
add
add
add
jmp
mov
push
mov
sub
pop
add
add
pop
push
mov
sub
mov
jmp
mov
inc
jmp
jmp
add
dec
inc
shr
shr
push
mov
add
add
pop
sub
mov
add
add
add
push
push
push
mov
mov
jmp
push
pushl
pop
popl
mov
mul
push
push
mov
addl
mov
add
sub
jmp
mov
xor
neg
jmp
pop
mov
pop
shr
jmp
lods
push
mov
sub
mov
push
mov
jmp
mov
add
pop
jmp
mov
push
mov
jmp
add
add
xchg
pop
push
push
mov
mov
push
mov
add
jmp
mov
sub
mov
mov
mov
pop
sub
mov
push
mov
add
add
xchg
pop
push
jmp
add
sub
xchg
pop
mov
mov
and
pushl
pushl
pop
push
mov
add
add
xor
jmp
xor
pop
jmp
xor
pop
jmp
mov
jmp
mov
add
xchg
mov
mov
sub
mov
push
mov
jmp
sub
add
add
jmp
mov
jmp
popl
pop
pop
push
mov
jmp
add
jmp
xor
mov
pop
jmp
mov
sub
pop
xchg
jmp
xchg
mov
jmp
not
not
xor
sub
jmp
neg
jmp
add
jmp
push
mov
sub
jmp
push
push
mov
mov
pop
xor
pop
jmp
push
mov
mov
pop
not
and
or
jmp
xchg
not
xchg
pop
xchg
push
mov
add
jmp
pop
xor
pop
push
mov
mov
pop
mov
push
mov
add
add
xchg
pop
push
jmp
pop
shr
add
add
sub
add
add
push
jmp
shl
jmp
xor
shl
push
jmp
mov
jmp
push
push
pushl
mov
add
push
mov
add
add
xchg
jmp
pop
jmp
jmp
mov
jmp
push
mov
jmp
xor
jmp
add
jmp
or
push
mov
xor
pop
sub
sub
pop
sub
mov
jmp
sub
jmp
pop
push
mov
xor
pop
push
push
jmp
push
mov
jmp
add
sub
pop
xchg
mov
push
jmp
push
mov
jmp
add
add
xchg
pop
sub
mov
push
push
pop
push
mov
jmp
mov
mov
jmp
mov
mov
add
push
jmp
mov
mov
jmp
xor
jmp
sub
jmp
xor
jmp
mov
push
mov
push
addl
jmp
inc
not
inc
push
mov
push
mov
add
xor
jmp
add
sub
jmp
mov
jmp
mov
add
jmp
or
shr
not
sub
add
pop
jmp
xor
pop
shl
jmp
pop
jmp
push
mov
add
pop
xor
jmp
push
jmp
xor
add
mov
add
push
mov
add
pop
jmp
add
jmp
dec
dec
shr
inc
add
add
jmp
pop
add
shr
not
sub
jmp
xor
add
pop
push
mov
add
jmp
add
push
mov
add
pop
sub
mov
pushl
pop
jmp
add
jmp
push
jmp
sub
jmp
push
mov
mov
jmp
mov
push
mov
jmp
mov
jmp
push
mov
push
pushl
pop
jmp
add
jmp
sub
jmp
pop
add
sub
mov
jmp
pushl
pushl
mov
push
mov
push
push
push
pop
add
push
mov
not
jmp
mov
jmp
mov
mov
jmp
pushl
jmp
subl
pop
pop
sub
mov
add
jmp
pop
push
mov
mov
push
jmp
mov
add
pop
xchg
mov
push
jmp
mov
jmp
neg
jmp
pop
jmp
sub
pop
and
dec
xor
addl
add
subl
pop
pop
add
jmp
push
mov
push
push
pop
push
mov
mov
pop
pop
add
jmp
pop
add
pop
push
jmp
mov
add
add
xchg
pop
push
jmp
neg
jmp
add
sub
sub
sub
pushw
mov
jmp
not
push
mov
jmp
or
dec
jmp
mov
jmp
add
add
pop
sub
add
jmp
pop
push
jmp
push
jmp
mov
jmp
jmp
pushl
pop
add
jmp
add
xchg
pop
add
jmp
push
sub
mov
mov
jmp
not
xchg
push
jmp
add
inc
add
sub
add
add
sub
pushl
pop
add
push
mov
jmp
push
pop
add
push
mov
push
push
push
pop
shr
add
mov
jmp
shr
xor
push
mov
push
mov
mov
pop
mov
pop
pushl
mov
add
sub
mov
push
pop
push
mov
xor
dec
push
jmp
push
pop
jmp
add
jmp
push
push
pop
push
push
push
pop
shl
add
mov
pop
jmp
pop
pop
push
mov
mov
sub
jmp
pop
add
pop
push
jmp
xchg
pop
sub
mov
mov
add
push
mov
add
pop
xchg
pop
jmp
add
sub
sub
mov
push
mov
add
add
xchg
pop
jmp
sub
pop
push
mov
jmp
mov
sub
mov
jmp
add
push
mov
jmp
pop
jmp
xchg
pop
jmp
push
mov
dec
jmp
add
shl
jmp
push
mov
push
mov
jmp
mov
push
mov
pushl
pushl
pop
add
popl
jmp
add
pop
xor
xor
xor
mov
rorl
pushf
jmp
add
sub
xchg
pop
mov
push
pop
or
shr
add
dec
jmp
push
mov
add
pop
add
pop
sub
jmp
mov
inc
push
mov
jmp
pop
mov
sub
mov
jmp
xor
xor
xor
pop
inc
sub
mov
jmp
push
sub
mov
mov
push
mov
addl
pop
sub
mov
mov
jmp
sub
jmp
pop
add
shl
push
mov
xor
pop
push
mov
jmp
add
add
xchg
pop
add
jmp
add
push
mov
jmp
push
pop
sub
push
jmp
or
je
push
push
mov
mov
addl
sub
sub
mov
mov
addl
sub
subl
jmp
add
add
xor
jmp
push
mov
push
push
mov
mov
xor
jmp
mov
mov
sub
add
add
jmp
mov
jmp
popl
pop
jmp
sub
add
jmp
mov
add
add
push
mov
sub
jmp
add
shl
jmp
and
pop
add
add
pop
jmp
or
jmp
dec
jmp
push
jmp
mov
jmp
xor
pop
jmp
pop
xor
push
mov
xor
shl
push
incl
pop
sub
jmp
lods
jmp
sub
add
jmp
pop
sub
add
add
pop
jmp
or
shl
and
dec
add
add
pop
jmp
add
push
mov
mov
sub
mov
mov
jmp
shl
inc
push
mov
xor
pop
jmp
add
pop
mov
mov
add
push
push
mov
jmp
pop
add
pop
pop
jmp
push
mov
shr
shr
jmp
mov
push
jmp
mov
add
push
mov
push
mov
mov
mov
xor
pop
add
jmp
pop
jmp
shr
add
push
mov
push
jmp
mov
push
mov
push
mov
add
sub
xchg
pop
jmp
add
sub
xchg
pop
jmp
push
mov
mov
sub
mov
add
add
add
add
xor
mov
pop
not
sub
xor
jmp
and
jmp
pop
jmp
push
mov
jmp
xor
mov
jmp
add
sub
sub
jmp
pop
jmp
xor
sub
jmp
mov
pushl
pop
popl
mov
jmp
push
mov
add
mov
add
xchg
sub
push
push
pop
jmp
add
jmp
sub
pushf
jmp
add
xor
xor
xor
pop
xchg
pop
jmp
mov
push
jmp
mov
jmp
pushw
mov
pushw
mov
push
mov
sub
jmp
add
jmp
add
push
jmp
pop
push
mov
add
jmp
addl
pushl
pop
jmp
mov
jmp
pushl
mov
jmp
pushl
pop
add
pop
add
pop
add
push
mov
sub
and
dec
dec
sub
add
pop
push
mov
xchg
not
push
jmp
push
push
pop
jmp
add
jmp
push
push
mov
mov
pop
sub
pop
push
jmp
and
pop
xor
push
mov
xor
pop
sub
add
sub
sub
add
sub
jmp
mov
add
add
jmp
push
mov
add
not
not
xor
mov
pop
xor
pop
dec
sub
mov
mov
add
xchg
inc
jmp
push
mov
jmp
mov
mov
jmp
sub
pop
add
sub
jmp
or
not
add
xor
add
pop
jmp
mul
jmp
push
mov
jmp
add
xor
xor
xor
mov
pushl
pushl
jmp
pop
push
mov
push
jmp
sub
pop
sub
mov
mov
add
jmp
push
mov
push
mov
mov
pop
push
mov
xor
pop
shl
dec
neg
shr
add
mov
pop
jmp
pop
or
je
pushl
xorl
pushl
jmp
xor
add
pop
sub
jmp
push
mov
mov
push
mov
or
xor
not
add
shr
xor
add
jmp
pop
push
mov
push
notl
pop
jmp
mov
mov
sub
mov
add
xor
jmp
not
jmp
add
pop
pop
xor
movzbl
mov
push
push
push
pop
add
sub
xchg
pop
push
jmp
neg
jmp
mov
jmp
add
sub
jmp
pop
add
xor
jmp
pop
xor
push
mov
add
xor
jmp
sub
push
pop
pop
add
sub
sub
mov
add
pop
add
xor
jmp
add
jmp
pop
add
add
pop
jmp
pop
pop
push
mov
xor
jmp
mov
jmp
push
mov
jmp
xor
xor
pop
jmp
add
add
sub
pop
xor
xor
xor
mov
imul
pushw
mov
push
pushf
jmp
add
add
sub
pop
jmp
sub
subl
pop
and
shl
push
mov
jmp
push
mov
sub
pop
add
addl
pushl
mov
add
add
jmp
shr
push
jmp
add
push
push
mov
jmp
mov
pop
sub
or
inc
jmp
add
jmp
mov
add
jmp
pop
sub
mov
push
push
mov
mov
jmp
add
jmp
add
sub
push
jmp
pop
mov
add
jmp
add
pop
push
mov
mov
inc
shl
dec
sub
mov
decl
pop
jmp
mov
sub
jmp
xor
pop
jmp
mov
sub
mov
jmp
mov
jmp
mov
jmp
pop
popl
pop
mov
push
pop
push
mov
neg
or
or
jmp
xor
add
sub
jmp
mov
push
mov
add
mov
add
pushl
jmp
push
push
pop
shr
add
neg
add
mov
pop
jmp
push
pop
jmp
mov
jmp
pop
sub
pop
xchg
mov
mov
push
mov
addl
pushl
mov
add
add
push
jmp
mov
add
add
add
jmp
xor
pop
jmp
push
mov
sub
mov
add
and
jmp
sub
mov
add
pop
add
add
jmp
sub
push
jmp
mov
add
pop
not
xor
and
mov
push
mov
add
push
mov
add
pop
xchg
pop
jmp
pop
push
sub
mov
mov
add
jmp
xor
jmp
mov
push
pop
sub
mov
jmp
pushl
jmp
pop
xor
add
pop
add
xchg
pop
and
pop
jmp
mov
jmp
mov
push
jmp
xor
xor
xor
dec
push
mov
shr
jmp
add
sub
pop
mov
jmp
push
push
mov
addl
jmp
add
add
xchg
mov
pop
jmp
mov
jmp
push
jmp
mov
pop
sub
pop
push
pushl
jmp
pop
jmp
pop
add
push
jmp
not
shr
jmp
pop
sub
mov
mov
jmp
sub
pop
mov
pop
sub
mov
mov
sub
jmp
or
xor
jmp
jmp
mov
push
push
pop
jmp
sub
jmp
pop
push
jmp
add
add
pop
xor
mov
add
sub
jmp
add
mov
push
jmp
sub
push
decl
pop
shr
add
jmp
mov
push
jmp
add
shr
push
mov
addl
pushl
mov
add
jmp
push
mov
mov
jmp
mov
jmp
pushl
jmp
pop
jmp
xchg
pop
jmp
pop
push
push
jmp
pop
xor
jmp
mov
push
push
push
pop
jmp
sub
add
pop
jmp
mov
jmp
mov
pop
push
mov
xor
and
sub
push
mov
sub
pop
jmp
push
pushl
mov
push
push
pop
jmp
add
pop
sub
jmp
push
push
push
jmp
sub
jmp
mov
mov
pop
sub
pop
jmp
add
push
mov
add
pop
jmp
mov
push
mov
push
mov
add
jmp
add
jmp
not
sub
jmp
mov
mov
jmp
and
pop
shr
shl
sub
mov
push
mov
push
mov
add
add
jmp
pop
jmp
mov
push
mov
add
sub
xchg
jmp
xchg
pop
xchg
jmp
push
mov
dec
sub
jmp
sub
xor
xor
xor
pop
mov
mov
jmp
xor
pop
jmp
or
pop
xor
not
sub
mov
sub
jmp
push
mov
mov
xor
mov
add
add
jmp
push
jmp
add
or
xor
push
jmp
xchg
jmp
add
sub
pop
jmp
mov
or
pop
jmp
xor
push
mov
add
push
mov
xor
pop
inc
xor
sub
pop
sub
mov
mov
dec
sub
and
pop
jmp
mov
add
push
push
pop
add
push
mov
push
jmp
push
jmp
push
mov
jmp
mov
jmp
push
jmp
push
push
mov
xor
mov
pop
jmp
pushl
pushl
pop
add
sub
mov
push
mov
addl
mov
add
jmp
add
push
push
mov
push
mov
jmp
add
add
pop
push
mov
sub
pop
push
jmp
push
jmp
mov
sub
mov
mov
add
add
xchg
mov
jmp
pop
and
pushl
mov
jmp
add
pop
inc
shl
add
xor
xor
jmp
xchg
jmp
mov
push
mov
jmp
add
push
mov
add
pop
push
jmp
pop
jmp
and
jmp
push
mov
mov
add
sub
xchg
pop
mov
push
push
popl
addl
pop
sub
jmp
mov
jmp
mov
pop
jmp
push
jmp
sub
mov
jmp
mov
push
mov
add
jmp
mov
pop
push
push
mov
mov
pop
push
mov
mov
sub
jmp
or
push
mov
xor
pop
push
mov
sub
sub
jmp
shl
inc
jmp
add
pop
jmp
sub
pop
add
push
mov
jmp
push
pop
add
add
jmp
push
mov
add
sub
mov
mov
add
jmp
add
sub
xchg
pop
mov
mov
push
mov
add
jmp
sub
mov
push
pop
shr
jmp
sub
jmp
popl
pop
add
pushl
pop
add
push
mov
add
sub
xchg
pop
mov
pushl
jmp
pushl
pushl
jmp
pushl
mov
push
sub
mov
addl
jmp
mov
jmp
mov
jmp
dec
inc
jmp
sub
add
jmp
add
jmp
addl
jmp
jmp
xor
pop
mov
addl
jmp
movzbw
push
pushf
jmp
add
popl
pop
push
push
mov
jmp
xor
xor
xor
mov
or
pushf
jmp
shl
shr
push
mov
xor
pop
inc
sub
xor
pop
sub
add
jmp
mov
add
xchg
pop
sub
mov
mov
push
jmp
mov
add
jmp
mov
mov
sub
pushl
jmp
pop
jmp
push
mov
mov
jmp
mov
pop
push
mov
or
neg
or
sub
add
pop
add
sub
mov
push
push
mov
add
push
mov
jmp
xor
xor
xor
pop
push
mov
mov
shr
shr
sub
sub
add
add
pop
xor
xor
xor
mov
div
movzbw
jmp
pop
shr
push
mov
jmp
add
jmp
xor
xor
jmp
mov
add
add
xchg
pop
add
mov
add
sub
mov
push
pop
add
pop
xor
xor
jmp
pop
pop
jmp
add
sub
jmp
pop
add
pop
push
jmp
mov
push
mov
push
jmp
mov
addl
jmp
mov
push
push
mov
mov
sub
pop
inc
push
jmp
mov
jmp
sub
mov
add
push
mov
jmp
neg
not
jmp
pop
xchg
pop
sub
mov
jmp
shr
sub
mov
mov
add
sub
mov
jmp
pop
push
mov
push
mov
jmp
popl
pop
jmp
add
pop
add
push
jmp
add
sub
pop
sub
jmp
push
push
pop
add
sub
xchg
pop
jmp
add
sub
mov
push
mov
xor
neg
jmp
pop
push
mov
jmp
add
mov
jmp
pushl
pop
push
mov
push
mov
mov
add
add
jmp
mov
add
jmp
pushl
pushl
mov
add
push
mov
jmp
add
jmp
shr
shl
add
add
mov
push
jmp
shr
xor
jmp
pushl
mov
add
popl
pop
pushl
pushl
jmp
test
pushf
jmp
add
xor
xor
xor
pop
popl
pop
mov
mov
add
sub
xchg
mov
mov
jmp
mov
add
pop
sub
mov
mov
add
jmp
mov
add
add
xchg
pop
add
add
pop
add
push
jmp
push
jmp
pop
sub
add
jmp
xor
sub
add
neg
sub
add
pop
add
xchg
pop
add
mov
add
add
sub
pop
push
mov
xor
or
neg
add
sub
sub
add
pop
jmp
pop
mov
jmp
sub
sub
add
mov
add
push
jmp
xor
mov
push
mov
jmp
pop
push
mov
mov
jmp
mov
xor
push
push
mov
mov
pop
add
pop
dec
shr
jmp
add
add
sub
mov
push
mov
jmp
mov
push
jmp
mov
push
mov
mov
push
mov
push
jmp
pop
sub
pop
jmp
push
mov
jmp
pop
add
add
sub
mov
push
jmp
sub
pop
jmp
pop
xor
pushl
jmp
popl
jmp
xchg
xor
xor
xor
jmp
or
sub
sub
pop
jmp
xor
push
jmp
xor
sub
jmp
pop
add
xor
xor
xor
mov
add
jmp
pushl
mov
add
jmp
add
xor
jmp
push
mov
jmp
sub
jmp
sub
jmp
add
jmp
and
jmp
push
jmp
pop
add
inc
or
push
sub
mov
mov
jmp
push
mov
add
sub
xchg
pop
jmp
mov
pop
mov
pop
pop
jmp
pushl
pop
push
push
mov
push
jmp
and
xor
mov
jmp
sub
mov
mov
push
mov
push
sub
jmp
and
jmp
pop
push
mov
push
mov
jmp
add
add
mov
mov
add
pushl
pop
push
mov
jmp
shr
shl
jmp
add
pop
xchg
pop
bts
pushf
jmp
lods
add
add
add
jmp
mov
mov
pop
pop
push
mov
add
jmp
push
mov
dec
not
and
neg
xor
add
jmp
push
push
pop
add
jmp
neg
push
mov
sub
pop
add
pop
push
jmp
pushl
jmp
jmp
sub
sub
add
add
jmp
push
mov
add
push
mov
add
jmp
mov
push
pop
push
mov
inc
push
mov
and
shl
xor
add
sub
pushl
pop
add
add
pushl
pop
jmp
mov
pop
pop
dec
sub
jmp
mov
push
mov
jmp
push
mov
xor
xor
xor
pop
jmp
sub
inc
shl
push
mov
xor
mov
add
add
pop
jmp
push
mov
push
pushl
pop
push
jmp
push
mov
mov
add
sub
sub
pop
jmp
add
sub
sub
jmp
add
add
sub
mov
add
jmp
pop
sub
add
sub
sub
mov
add
add
pop
add
sub
mov
add
xchg
mov
movsbw
pushw
mov
jmp
neg
jmp
sub
jmp
mov
add
or
push
sub
pop
sub
xor
xor
pop
xor
pop
push
mov
jmp
pop
push
mov
push
jmp
xchg
pop
push
jmp
push
mov
add
pop
push
mov
sub
sub
sub
pushl
pop
add
push
pushl
pop
popl
mov
jmp
push
mov
mov
not
dec
add
and
mov
add
add
jmp
mov
and
pop
jmp
and
pop
sub
push
mov
mov
jmp
pop
sub
sub
add
add
pop
inc
jmp
xor
pop
add
pop
xor
xor
xor
jmp
mov
jmp
pop
push
push
jmp
pop
jmp
shl
or
add
xor
inc
jmp
pushl
pop
add
push
sub
mov
mov
shl
inc
xor
push
mov
jmp
add
xor
jmp
add
add
sub
jmp
add
jmp
pop
add
add
xor
xor
xor
pop
push
push
pop
push
push
mov
mov
xor
mov
add
jmp
xor
pop
add
mov
jmp
pushl
pop
push
jmp
sub
mov
jmp
push
push
mov
mov
jmp
push
jmp
sub
push
mov
not
sub
sub
pop
sub
mov
add
jmp
mov
sub
mov
mov
add
add
xchg
pop
push
jmp
sub
mov
push
push
mov
mov
pop
jmp
and
jmp
mov
mov
shr
shr
push
mov
shr
add
jmp
not
push
mov
jmp
push
mov
mov
jmp
pushl
jmp
push
jmp
add
xchg
pop
push
push
pop
add
jmp
mov
inc
not
shr
jmp
add
jmp
push
mov
push
jmp
pop
jmp
mov
xchg
not
xchg
pop
xchg
push
push
mov
addl
pop
push
mov
jmp
mov
mov
push
mov
xor
xor
jmp
mov
push
pop
push
mov
sub
sub
add
add
jmp
add
push
mov
sub
pop
xor
jmp
mov
add
sub
xchg
pop
mov
pushw
mov
jmp
pushl
pop
add
mov
add
push
jmp
mov
sub
jmp
mov
addl
mov
add
add
sub
jmp
mov
shl
shr
or
add
xor
jmp
sub
mov
mov
jmp
popl
jmp
pop
jmp
push
jmp
sub
mov
mov
add
add
pop
pushl
jmp
mov
not
push
jmp
shr
xor
xor
add
jmp
mov
jmp
push
mov
add
pop
add
xchg
jmp
mov
pop
jmp
add
add
jmp
add
jmp
mov
push
jmp
mov
pushw
jmp
push
push
mov
mov
add
pop
mov
pop
add
mov
add
add
sub
push
mov
mov
push
push
mov
push
mov
jmp
pop
add
push
mov
mov
xor
pop
shr
push
jmp
add
pop
jmp
add
jmp
mov
push
mov
jmp
pop
push
mov
push
mov
sub
jmp
pushl
pushl
pop
push
mov
jmp
mov
jmp
pop
jmp
sub
xor
xor
xor
pop
sub
mov
addl
popl
jmp
pop
jmp
push
mov
push
mov
jmp
or
add
not
xor
add
sub
sub
jmp
xor
mov
pop
push
push
jmp
jmp
mov
jmp
shl
jmp
pop
add
jmp
sub
sub
pop
xor
pop
jmp
push
mov
mov
pop
shl
shl
sub
jmp
push
mov
neg
sub
jmp
add
pop
add
sub
pop
add
jmp
shr
jmp
add
xchg
pop
add
push
jmp
not
inc
push
mov
xor
jmp
xor
add
inc
dec
dec
push
mov
add
pop
jmp
push
jmp
pop
xor
jmp
bt
pushf
jmp
push
mov
jmp
mov
add
shl
xor
jmp
or
jmp
mov
mov
pop
mov
jmp
add
xchg
jmp
mov
push
mov
xor
mov
pop
push
push
jmp
add
not
sub
jmp
add
sub
pop
not
jmp
mov
mov
mov
add
push
mov
jmp
push
mov
inc
jmp
add
jmp
xor
mov
push
mov
add
push
mov
jmp
xor
jmp
pushl
jmp
pop
add
sub
mov
push
jmp
push
mov
jmp
and
pushl
pop
add
jmp
mov
pop
jmp
mov
xor
pop
jmp
mov
add
jmp
mov
jmp
mov
push
mov
add
sub
jmp
push
pushl
pop
popl
jmp
add
add
pop
shl
sub
jmp
mov
shr
inc
xor
neg
sub
xor
or
pop
push
jmp
sub
jmp
mov
jmp
pop
shr
add
push
mov
jmp
mov
mov
push
mov
sub
add
push
mov
add
pop
jmp
sub
add
add
sub
jmp
mov
pop
and
jmp
mov
jmp
add
jmp
shr
xor
add
pop
jmp
xor
add
mov
pop
sub
mov
push
mov
add
add
xchg
pop
jmp
dec
add
xchg
jmp
push
jmp
mov
jmp
mov
add
add
xchg
jmp
add
add
xchg
pop
push
mov
jmp
sub
shr
push
push
mov
add
mov
pop
jmp
mov
or
jmp
sub
pop
jmp
mov
jmp
sub
pop
push
mov
add
pop
jmp
pop
jmp
xchg
mov
mov
mov
push
push
mov
mov
pop
mov
pop
pop
mov
add
push
mov
mov
pushl
pop
jmp
add
mov
jmp
sub
pop
sub
add
xor
sub
jmp
pop
push
mov
jmp
sub
pop
jmp
not
or
or
jmp
push
pushl
jmp
mov
add
jmp
push
mov
add
mov
add
push
push
mov
jmp
pop
jmp
xchg
not
xchg
sub
mov
pop
add
pop
xchg
pop
or
shl
sub
mov
push
push
pop
jmp
pop
xor
jmp
push
mov
push
jmp
mov
xor
pop
jmp
pop
push
mov
mov
pop
sub
sub
add
pushl
pop
add
xor
mov
push
mov
add
sub
jmp
pop
or
je
push
mov
push
pushl
jmp
add
add
sub
mov
push
jmp
mov
push
mov
add
add
jmp
neg
jmp
mov
push
mov
mov
pop
or
mov
add
push
mov
jmp
xchg
mov
mov
push
pop
push
push
push
jmp
sub
pop
add
push
mov
add
pop
mov
add
push
jmp
mov
add
push
jmp
pop
push
mov
sub
jmp
pop
jmp
add
jmp
pushl
jmp
mov
push
pushl
jmp
push
mov
mov
pop
add
push
jmp
pushl
popf
pop
adc
pushf
jmp
mov
pushl
jmp
push
mov
sub
sub
inc
dec
sub
jmp
push
mov
push
pop
jmp
add
xor
add
sub
pop
add
add
sub
add
jmp
pop
add
push
sub
mov
mov
jmp
mov
push
push
mov
push
pop
dec
jmp
mov
jmp
inc
jmp
xor
xor
xor
mov
push
mov
jmp
mov
add
add
add
jmp
push
pushl
mov
add
popl
pop
mov
push
mov
push
jmp
mov
mov
mov
pop
inc
push
mov
mov
sub
jmp
pushl
pushl
pop
add
add
jmp
push
sub
jmp
mov
mov
jmp
mov
addl
pushl
mov
add
jmp
sub
pop
and
jmp
push
mov
jmp
push
push
mov
or
not
add
add
push
jmp
push
jmp
add
add
xor
xor
xor
pop
add
push
jmp
xor
xor
pop
decw
pushf
jmp
add
mov
pop
and
jmp
add
mov
jmp
push
mov
push
mov
neg
add
or
add
sub
pop
sub
xor
pop
sub
jmp
not
sub
add
pop
sub
xor
jmp
add
jmp
sub
add
pop
add
add
sub
jmp
pop
add
sub
jmp
mov
inc
shl
xor
jmp
add
xchg
pop
jmp
or
jmp
sub
add
add
push
push
mov
mov
push
mov
push
pop
push
jmp
sub
pushl
jmp
inc
shl
jmp
xor
mov
pop
jmp
push
mov
jmp
popl
jmp
add
sub
jmp
lods
xor
jmp
pop
jmp
xchg
push
mov
dec
shr
not
jmp
add
sub
xchg
pop
jmp
xor
mov
add
shr
push
mov
or
pop
jmp
mov
add
push
mov
add
jmp
mov
mov
jmp
sub
jmp
sub
xchg
pop
jmp
xor
xor
xor
push
notl
jmp
push
jmp
mov
push
mov
mov
push
jmp
shr
sub
sub
jmp
mov
mov
add
add
xchg
mov
shr
xor
push
mov
push
mov
pushl
pushl
pop
jmp
mov
jmp
xor
pop
xor
mov
add
and
mov
jmp
push
mov
mov
pop
push
mov
mov
pop
mov
push
mov
add
add
xor
xor
xor
jmp
xor
xor
pop
jmp
pop
mov
pop
shr
inc
jmp
push
mov
jmp
push
mov
mov
pop
jmp
mov
push
pop
push
sub
mov
mov
sub
mov
xor
jmp
pop
sub
jmp
add
add
xchg
pop
movzwl
jmp
pop
pop
push
mov
add
jmp
mov
jmp
push
jmp
pop
add
xchg
pop
add
pushl
pop
pushl
mov
add
push
mov
push
jmp
add
add
jmp
lods
push
mov
mov
add
sub
jmp
sub
xor
sub
jmp
mov
mov
push
mov
sub
jmp
add
pop
add
add
sub
pop
add
mov
add
add
push
pushl
pushl
jmp
pop
subl
sub
addl
push
jmp
pop
add
mov
pop
jmp
push
mov
add
xor
mov
jmp
xchg
mov
shlb
pushf
jmp
mov
mov
jmp
pushl
jmp
mov
pushl
pop
popl
mov
shll
jmp
sub
mov
mov
shl
add
jmp
add
sub
jmp
push
mov
mov
add
jmp
mov
push
mov
push
mov
xor
add
xor
sub
add
jmp
mov
add
shl
sub
jmp
mov
add
pop
jmp
mov
roll
pushf
jmp
shl
xor
sub
jmp
and
and
jmp
xchg
jmp
mov
add
jmp
pop
add
push
mov
add
sub
xchg
pop
mov
mov
shr
dec
or
xchg
not
xchg
xchg
jmp
add
jmp
and
neg
dec
jmp
sub
shl
sub
mov
mov
inc
jmp
push
mov
mov
sub
jmp
add
pop
xor
xor
jmp
add
push
sub
mov
jmp
mov
jmp
add
add
sub
pop
sub
xchg
pop
mov
mov
sub
pop
push
jmp
add
sub
push
mov
mov
add
mov
jmp
xchg
jmp
sub
pop
push
push
jmp
mov
jmp
push
mov
xor
pop
jmp
mov
add
add
xchg
pop
push
mov
jmp
mov
mov
add
push
mov
jmp
pop
jmp
mov
jmp
push
pop
add
sub
jmp
sub
jmp
xchg
pop
mov
push
mov
mov
pop
add
jmp
push
mov
jmp
mov
jmp
pop
or
push
mov
jmp
pushl
pushl
pop
push
mov
add
add
jmp
mov
add
pushl
jmp
or
sub
add
mov
pop
push
negl
pop
sub
push
mov
jmp
sub
pop
add
pop
jmp
mov
add
jmp
push
mov
mov
jmp
xor
pop
push
jmp
pop
pop
jmp
push
jmp
push
mov
mov
push
mov
push
mov
mov
pop
or
pop
sub
mov
mov
add
add
pop
jmp
push
push
jmp
sub
and
sub
jmp
dec
jmp
mov
pop
sub
pop
add
jmp
xchg
jmp
push
notb
jmp
mov
mov
sub
pop
sub
jmp
or
dec
dec
shr
xor
sub
pop
pushl
pop
jmp
sub
add
jmp
mov
add
sub
sub
add
mov
add
jmp
push
mov
push
mov
push
pop
shl
push
mov
push
mov
or
add
and
push
mov
add
pop
add
sub
jmp
add
sub
sub
jmp
push
mov
sub
pop
pop
xchg
pop
mov
push
mov
mov
push
mov
jmp
pop
xor
xor
jmp
push
mov
mov
jmp
xor
pop
shl
push
push
push
mov
add
sub
jmp
add
jmp
pushl
pop
push
jmp
mov
jmp
push
mov
sub
pop
jmp
popl
pop
sub
addl
jmp
popw
jmp
mov
mov
pop
mov
add
jmp
pop
mov
jmp
popl
jmp
push
mov
add
add
jmp
push
mov
add
pop
xchg
jmp
inc
xor
inc
xor
sub
jmp
pop
mov
add
jmp
xchg
jmp
xchg
pop
push
mov
add
add
mov
add
sub
push
mov
sub
mov
add
mov
add
push
mov
add
sub
xchg
jmp
add
add
jmp
add
push
mov
mov
or
sub
inc
sub
add
add
pop
xchg
mov
or
shl
pushl
push
mov
jmp
mov
push
mov
mov
add
push
push
mov
push
mov
jmp
push
push
pop
add
jmp
add
jmp
add
jmp
add
jmp
pushl
pushl
mov
add
jmp
push
mov
add
push
jmp
add
pop
jmp
or
jmp
mov
jmp
add
push
mov
pushl
pushl
jmp
sub
xor
pop
jmp
add
add
pop
jmp
mov
xor
jmp
add
pop
sub
jmp
sub
mov
mov
add
add
xor
xor
xor
pop
push
jmp
pop
sub
sub
add
add
jmp
lods
add
jmp
mov
push
mov
push
jmp
xor
xor
jmp
inc
add
sub
add
jmp
xchg
pop
push
mov
jmp
xor
jmp
add
sub
xchg
jmp
pop
add
popl
pop
jmp
pushl
popf
pop
rcrl
pushf
jmp
add
jmp
xor
pop
and
pushl
pop
push
mov
add
jmp
add
jmp
push
jmp
mov
push
mov
neg
or
not
inc
jmp
mov
jmp
add
add
push
mov
add
mov
add
sub
jmp
sub
mov
pop
push
jmp
add
sub
add
sub
push
mov
inc
shr
inc
xor
jmp
push
mov
push
mov
sub
sub
add
add
pop
jmp
and
shr
jmp
not
push
mov
sub
pop
add
mov
add
add
jmp
add
add
jmp
add
pop
sub
dec
dec
shr
xor
jmp
mov
xor
or
xor
sub
pop
xchg
mov
mov
jmp
movzbw
push
pushf
jmp
pop
jmp
push
mov
add
add
xchg
pop
sub
mov
push
push
jmp
pop
mov
add
add
jmp
mov
add
pop
xchg
jmp
xor
push
mov
jmp
mov
add
pop
pop
push
push
mov
xor
mov
mov
jmp
push
jmp
mov
add
sub
xchg
mov
mov
jmp
sub
mov
mov
push
mov
push
mov
add
pop
add
sub
pushl
pop
add
push
push
push
pop
jmp
mov
neg
push
mov
shr
sub
jmp
add
push
pushl
pop
popl
pop
jmp
pop
add
jmp
or
xor
push
mov
add
sub
sub
pop
push
mov
or
shl
sub
add
pop
sub
add
mov
add
add
push
jmp
dec
jmp
push
push
pop
jmp
push
mov
pushl
pop
popl
pop
jmp
sub
sub
sub
sub
dec
and
jmp
xor
pop
xor
jmp
mov
shr
add
add
jmp
inc
sub
mov
pop
sub
jmp
pop
push
push
push
pop
not
add
mov
pop
shr
add
jmp
mov
push
jmp
mov
sub
add
add
add
sub
sub
add
pushl
pop
jmp
add
jmp
dec
neg
sub
sub
jmp
mov
jmp
push
push
pop
sub
sub
mov
pushl
pop
add
and
jmp
push
mov
mov
sub
sub
add
mov
add
push
notl
mov
push
mov
add
add
jmp
mov
add
pop
mov
add
push
mov
add
xor
push
jmp
sub
jmp
mov
mov
push
jmp
add
neg
jmp
add
pop
add
add
sub
pop
sub
sub
mov
push
push
mov
push
mov
jmp
add
jmp
sub
jmp
xor
sub
jmp
mov
jmp
mov
push
push
mov
shl
jmp
mov
sub
mov
mov
jmp
sub
push
mov
mov
push
mov
jmp
push
jmp
mov
push
mov
jmp
sub
sub
sub
mov
push
mov
push
jmp
push
mov
jmp
mov
push
pop
sub
add
add
pop
xor
xor
xor
pop
add
push
mov
push
mov
jmp
sub
xchg
pop
jmp
mov
inc
or
push
push
jmp
mov
jmp
sub
pop
jmp
mov
sub
add
jmp
addl
mov
add
push
push
pop
jmp
push
jmp
pop
add
xor
add
pop
xor
jmp
pop
and
pushl
jmp
xor
xor
xor
mov
jmp
push
jmp
push
jmp
add
or
xor
sub
pop
pop
push
push
mov
mov
sub
push
mov
jmp
add
push
incl
pop
push
mov
neg
add
jmp
add
add
mov
add
add
push
mov
inc
sub
xor
pop
sub
jmp
mov
not
and
jmp
mov
mov
add
mov
jmp
neg
shl
dec
xor
add
jmp
mov
add
sub
jmp
sub
mov
push
mov
push
jmp
pop
push
mov
mov
add
jmp
xor
xor
mov
mov
sub
mov
mov
not
dec
xor
push
push
jmp
add
jmp
inc
add
jmp
mov
jmp
pop
mov
add
shr
jmp
xchg
push
mov
xchg
not
xchg
pushl
jmp
sub
mov
jmp
pushl
pop
jmp
mov
push
sub
mov
push
push
mov
or
inc
push
mov
sub
pop
dec
neg
add
mov
pop
addl
jmp
mov
push
mov
addl
jmp
mov
push
jmp
add
sub
sub
add
jmp
pop
add
add
jmp
mov
push
mov
mov
jmp
pop
add
shr
shl
sub
add
pop
jmp
pushl
jmp
mov
add
push
mov
jmp
add
add
jmp
inc
inc
inc
add
jmp
push
mov
jmp
inc
xor
and
mov
push
jmp
xor
jmp
pop
jmp
dec
not
push
mov
shr
inc
add
add
mov
add
sub
push
jmp
add
push
mov
pushl
pop
popl
mov
push
mov
add
add
xchg
pop
jmp
pop
mov
mov
jmp
xor
jmp
pushl
jmp
sub
push
mov
mov
mov
jmp
push
mov
add
pop
jmp
sub
sub
add
mov
add
sub
mov
pushl
pop
popl
pop
jmp
mov
add
mov
add
neg
shr
jmp
mov
mov
add
sub
pop
jmp
pop
pop
push
mov
mov
shl
sub
jmp
add
jmp
push
pushl
pop
add
sub
mov
pop
add
sub
sub
pop
jmp
xor
push
jmp
sub
mov
jmp
push
push
push
pop
push
mov
sub
dec
sub
jmp
sub
add
mov
jmp
mov
sub
mov
mov
push
mov
or
pop
jmp
mov
jmp
xor
jmp
mov
sub
mov
jmp
lods
xor
push
jmp
sub
add
add
sub
pop
pushl
push
mov
add
pop
jmp
push
jmp
lods
push
jmp
pushl
pop
add
sub
push
push
jmp
mov
xor
push
mov
add
sub
sub
jmp
pop
xor
xor
xor
pop
mov
push
mov
push
pop
sub
mov
push
sub
mov
push
pop
sub
mov
mov
jmp
mov
push
mov
push
jmp
xor
mov
pushl
mov
add
jmp
push
mov
add
push
mov
jmp
mov
add
jmp
mov
push
mov
mov
xor
pop
add
jmp
inc
xor
mov
mov
add
push
mov
mov
pop
mov
push
mov
add
add
sub
mov
jmp
sub
jmp
add
add
jmp
xchg
push
mov
sub
pop
jmp
mov
jmp
pop
pop
pop
jmp
sub
sub
add
add
pop
jmp
mov
add
pop
xchg
mov
cmp
pushf
jmp
mov
sub
pop
jmp
mov
mov
sub
add
jmp
push
jmp
mov
jmp
pop
push
mov
xor
mov
add
pushl
mov
add
add
pop
push
pushl
pop
sub
jmp
sub
or
pop
jmp
mov
mov
sub
jmp
mov
sub
pop
sub
jmp
push
push
mov
push
jmp
lods
push
jmp
mov
push
mov
add
sub
mov
mov
jmp
pop
add
add
jmp
and
jmp
pop
jmp
add
add
mov
add
jmp
shr
add
xor
jmp
mov
cmp
pushf
jmp
inc
shl
push
mov
xor
pop
add
add
push
mov
xor
add
xor
sub
pop
jmp
pop
add
sub
xchg
pop
jmp
mov
jmp
mov
jmp
pushl
pop
push
push
pop
push
mov
mov
jmp
push
mov
addl
jmp
jmp
add
jmp
add
xchg
pop
pushw
mov
mov
push
push
push
mov
inc
jmp
mov
add
xor
movzbl
popw
jmp
pop
push
mov
jmp
mov
jmp
pushl
pop
jmp
xor
jmp
mov
push
mov
jmp
add
push
mov
sub
pop
xchg
pop
jmp
shl
sub
neg
xor
sub
pop
pop
pushl
pop
push
mov
mov
add
add
xchg
pop
and
jmp
or
jmp
add
pop
push
jmp
sub
pop
jmp
or
pop
sub
mov
mov
sub
mov
pop
sub
shl
jmp
push
sub
mov
mov
sub
mov
push
jmp
pop
and
shl
add
add
push
jmp
xchg
jmp
mov
sub
pop
jmp
push
mov
add
pop
mov
jmp
mov
jmp
add
jmp
xor
xor
mov
movzbw
jmp
sub
xor
jmp
mov
push
mov
push
jmp
inc
dec
shr
push
mov
dec
push
mov
jmp
push
push
jmp
mov
mov
mov
pushl
pop
push
mov
jmp
mov
jmp
add
jmp
pushl
jmp
push
mov
push
mov
mov
pop
pop
jmp
xchg
pop
mov
push
mov
addl
pop
push
jmp
pop
add
sub
push
pushl
pop
popl
jmp
push
mov
jmp
popl
mov
add
pushf
jmp
add
mov
add
shl
xor
sub
mov
jmp
or
inc
jmp
not
jmp
mov
mov
pop
push
mov
inc
or
dec
shr
jmp
pop
mov
jmp
pop
sub
sub
jmp
shl
push
jmp
push
push
mov
push
pop
push
mov
shr
add
shl
sub
jmp
add
or
pop
jmp
xor
sub
jmp
mov
push
mov
addl
pushl
pop
push
jmp
pop
jmp
add
add
jmp
xor
pop
xchg
jmp
sub
jmp
shl
sub
push
mov
xorl
pop
xor
pop
jmp
jmp
mov
add
pop
add
jmp
mov
addl
pop
push
jmp
push
jmp
mov
push
jmp
jmp
xchg
pop
push
mov
mov
add
pushl
pop
add
xchg
pop
jmp
add
add
pop
xor
pop
xor
pop
push
mov
sub
pop
push
mov
add
pop
jmp
jmp
add
xchg
jmp
add
sub
add
add
sub
add
push
mov
shl
shr
or
shl
push
mov
sub
jmp
shr
jmp
sub
mov
add
sub
mov
sub
mov
mov
mov
shl
shr
jmp
shl
shr
jmp
add
xchg
jmp
push
mov
mov
sub
pop
neg
shl
xor
mov
pop
push
jmp
sub
jmp
push
push
mov
mov
xor
pushl
pop
add
add
add
sub
pop
sub
jmp
push
mov
xor
add
mov
add
pushl
pop
jmp
mov
add
sub
push
mov
push
mov
add
jmp
add
xchg
pop
and
shr
jmp
xchg
jmp
add
add
sub
jmp
add
jmp
push
mov
jmp
add
add
sub
pop
sub
mov
mov
not
xor
push
mov
xor
jmp
mov
mov
add
pop
xchg
pop
add
xor
xor
xor
pop
sub
pushf
jmp
mov
push
mov
push
mov
push
mov
shr
jmp
lods
xor
push
jmp
add
push
push
mov
jmp
mov
shr
sub
mov
mov
sub
pop
sub
pop
add
mov
add
push
mov
xor
jmp
pop
sub
add
add
add
sub
push
jmp
mov
jmp
xor
sub
pop
add
pushl
jmp
pop
popl
mov
popl
mov
jmp
xor
xor
xor
jmp
add
pop
jmp
mov
jmp
add
mov
add
jmp
sub
pop
pushl
pop
add
add
mov
push
jmp
xchg
pop
sub
pushl
pop
jmp
mov
pop
sub
jmp
add
jmp
sub
add
add
pop
jmp
mov
add
add
push
mov
neg
shl
jmp
add
jmp
mov
sub
mov
pop
push
mov
jmp
addl
jmp
mov
sub
jmp
sub
mov
push
pop
push
mov
add
pop
sub
push
jmp
mov
mov
add
add
jmp
not
inc
not
dec
sub
mov
pop
sub
pop
add
jmp
xchg
pushl
pop
add
jmp
jmp
pop
push
mov
jmp
push
jmp
add
sub
xchg
pop
mov
sub
mov
mov
jmp
mov
add
push
notl
jmp
push
jmp
sub
mov
mov
sub
and
pop
xor
shr
sub
push
mov
xor
and
pop
jmp
xor
jmp
pushl
pop
sub
mov
push
pushl
pop
push
push
pop
add
push
jmp
push
notl
pop
xchg
shl
jmp
pop
push
mov
mov
push
mov
mov
jmp
mov
add
jmp
sub
mov
sub
mov
jmp
sub
jmp
pushl
pop
add
add
pop
push
mov
push
mov
push
mov
push
jmp
shl
add
jmp
xchg
xchg
jmp
pop
jmp
add
jmp
add
pop
sub
xchg
pop
mov
mov
add
mov
add
sub
jmp
shr
xor
sub
add
add
jmp
pop
jmp
shl
jmp
mov
add
push
jmp
pop
add
shr
jmp
xor
mov
push
push
mov
mov
jmp
pop
push
push
mov
jmp
not
jmp
add
jmp
inc
jmp
add
pushl
pop
push
mov
push
pop
push
mov
jmp
pop
sub
neg
sub
jmp
push
jmp
push
mov
jmp
push
mov
sub
pop
xchg
pop
mov
push
mov
add
sub
jmp
push
mov
and
jmp
add
xchg
pop
jmp
subl
pop
add
jmp
std
push
jmp
push
mov
jmp
add
push
mov
pushl
mov
jmp
pop
push
mov
mov
add
jmp
sub
pop
sub
sub
sub
jmp
sub
add
mov
add
jmp
or
sub
or
pop
add
neg
xor
push
mov
xor
or
shr
add
jmp
add
sub
sub
pop
jmp
push
mov
xor
sub
add
sub
sub
jmp
pop
mov
popl
jmp
mov
pop
xor
pushl
pop
jmp
push
mov
neg
not
sub
sub
pop
push
mov
push
mov
sub
pop
xor
pop
sub
pop
xchg
jmp
push
push
jmp
xor
jmp
add
sub
pop
jmp
and
sub
mov
mov
xor
add
and
pop
xor
jmp
push
mov
mov
sub
mov
add
jmp
xor
xor
xor
xor
sub
mov
push
mov
jmp
add
push
push
mov
jmp
push
mov
add
add
xchg
pop
push
mov
shr
add
add
mov
jmp
add
pop
jmp
xchg
pop
mov
jmp
notl
jmp
xor
push
mov
sub
mov
push
push
mov
mov
push
mov
mov
jmp
mov
push
mov
and
pop
shr
sub
not
jmp
mov
add
sub
xchg
pop
mov
push
mov
addl
push
mov
sub
pop
add
addl
subl
jmp
push
mov
mov
jmp
xor
jmp
pop
add
add
pop
add
xor
jmp
pushl
pop
add
push
mov
add
pop
add
xor
xor
xor
jmp
mov
jmp
mov
add
mov
add
mov
push
mov
push
mov
add
add
pop
push
mov
add
pop
xchg
jmp
mov
add
sub
sub
pop
pop
xor
xor
jmp
dec
add
sub
mov
add
add
add
pushl
pop
jmp
mov
jmp
pop
add
xchg
mov
and
jmp
push
mov
jmp
mov
jmp
or
shl
jmp
inc
dec
dec
jmp
push
jmp
mov
xchg
push
jmp
sub
push
jmp
pushl
mov
push
mov
add
add
jmp
add
push
push
mov
mov
push
push
xorl
pop
jmp
push
jmp
pop
push
jmp
pop
xchg
not
xor
xor
xor
jmp
pushl
pop
add
jmp
shr
add
add
pop
mov
dec
jmp
pop
mov
jmp
pop
jmp
pop
sub
jmp
popl
addl
pop
add
add
xchg
pop
push
mov
popl
pop
popa
jmp
mov
xor
shl
jmp
add
jmp
sub
add
add
sub
push
jmp
pop
xor
sub
mov
mov
xor
jmp
pop
jmp
add
add
jmp
push
mov
jmp
add
push
mov
add
pop
xchg
pop
jmp
or
pop
push
push
jmp
mov
pop
jmp
pop
jmp
pushl
mov
add
jmp
dec
not
dec
jmp
jmp
sub
xchg
jmp
pop
xor
pop
sub
add
add
sub
sub
jmp
add
jmp
shl
neg
jmp
mov
mov
push
mov
mov
pop
pop
jmp
pop
push
push
pop
jmp
sub
pop
jmp
sub
add
jmp
add
pop
add
add
sub
jmp
addl
pop
sub
pop
push
mov
jmp
sub
and
sub
xor
pop
sub
jmp
mov
jmp
mov
add
pop
push
pushl
pop
jmp
pop
popl
pop
mov
mov
add
push
jmp
pushl
jmp
push
push
mov
push
mov
mov
shl
not
xor
push
mov
push
mov
mov
jmp
mov
pushl
jmp
add
add
jmp
lods
jmp
mov
jmp
push
mov
push
mov
push
mov
jmp
pop
mov
push
pushl
pushl
pop
push
mov
jmp
shr
xor
neg
push
jmp
pushl
jmp
add
and
jmp
mov
push
mov
jmp
pop
pushw
mov
push
push
sub
mov
mov
dec
shr
sub
add
inc
sub
mov
pop
push
mov
add
push
mov
push
jmp
push
push
mov
pushw
pop
sub
mov
push
mov
mov
pop
sub
pop
jmp
add
jmp
mov
push
mov
sub
mov
jmp
xor
mov
push
mov
add
add
jmp
mov
push
mov
jmp
pop
push
jmp
sub
jmp
sub
jmp
push
mov
push
push
jmp
mov
add
jmp
mov
add
jmp
xchg
pop
mov
mov
sub
add
jmp
xor
jmp
jmp
sub
pop
jmp
pop
xchg
pop
jmp
pushl
pushl
jmp
push
mov
mov
jmp
mov
sub
and
add
shl
sub
add
xor
pop
mov
mov
add
add
jmp
add
jmp
mov
jmp
shr
add
jmp
sub
jmp
mov
shr
push
mov
shr
shr
jmp
xor
xor
pop
mov
jmp
push
mov
push
jmp
not
jmp
pop
push
mov
mov
jmp
push
mov
jmp
add
shl
jmp
push
sub
mov
mov
push
jmp
pop
popl
pop
jmp
negl
pushf
jmp
sub
add
jmp
push
push
pop
add
sub
xchg
mov
mov
jmp
mov
push
push
mov
add
xor
push
mov
jmp
popl
push
mov
subl
add
addl
pop
popl
push
mov
addl
add
subl
pop
jmp
add
pop
sub
add
sub
sub
push
push
push
jmp
or
sub
mov
jmp
mov
push
mov
xor
sub
mov
pop
jmp
mov
pop
add
mov
add
jmp
push
mov
add
jmp
pop
push
mov
add
jmp
jno
lahf
or
adc
or
mov
or
test
or
ret
add
mov
or
cli
lahf
or
and
lahf
or
push
mov
or
jp
or
rcrl
or
push
mov
or
cmp
or
xchg
lahf
or
lcall
or
lods
mov
or
inc
mov
or
mov
or
jnp
or
jmp
or
stc
lahf
or
into
mov
or
add
or
xor
or
fwait
lahf
or
sbb
mov
or
push
mov
or
std
lahf
or
test
or
outsl
mov
or
mov
mov
or
pop
mov
or
lcall
xor
lahf
or
lahf
or
jmp
lahf
or
mov
or
push
mov
or
push
mov
or
aad
or
mov
lahf
or
sbbl
or
shll
fs
lahf
or
popf
lahf
or
push
or
pop
mov
or
negb
or
jns
or
mov
mov
or
push
mov
or
int3
lahf
or
mov
or
mov
or
lret
pop
mov
or
xchg
mov
or
bound
or
dec
mov
or
pop
mov
or
mov
lahf
or
lret
lahf
or
push
or
mov
or
adc
or
stos
lahf
or
stc
lahf
or
pop
mov
or
fwait
mov
or
dec
mov
or
sub
mov
or
aaa
mov
or
jae
or
mov
or
mov
or
inc
mov
or
cld
lahf
or
loop
or
xchg
mov
or
sbb
or
std
lahf
or
add
or
push
mov
or
std
lahf
or
mov
mov
or
jno
or
pop
mov
or
cwtl
mov
or
movsb
lahf
or
pop
mov
or
cwtl
mov
or
dec
mov
or
mov
or
mov
or
int
or
pop
mov
or
movsb
lahf
or
jecxz
or
xor
or
pop
mov
or
push
mov
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
push
mov
xor
jmp
pop
xchg
pop
jmp
xchg
mov
push
jmp
pop
sub
sub
jmp
pushl
jmp
mov
mov
jmp
mov
jmp
mov
push
jmp
mov
sub
mov
jmp
pushl
pop
jmp
shl
sub
and
pop
sub
mov
mov
shr
jmp
add
jmp
add
pop
pop
pushl
jmp
mov
add
push
pop
jmp
shl
not
neg
sub
mov
jmp
xor
mov
add
sub
pop
jmp
push
mov
jmp
xor
push
push
pop
jmp
sub
jmp
pop
mov
mov
add
mov
add
jmp
neg
jmp
or
pushf
jmp
add
pop
sub
mov
jmp
jmp
mov
push
jmp
pop
sub
push
mov
or
jmp
sub
mov
mov
add
add
xor
jmp
xor
xor
pop
push
push
pop
push
push
mov
mov
pop
dec
jmp
xor
movzbl
jmp
sub
mov
add
add
xor
xor
xor
pop
push
sub
mov
push
pop
push
jmp
add
mov
add
push
pushl
jmp
push
mov
jmp
push
push
jmp
mov
jmp
sub
sub
pop
and
mov
push
push
pop
push
mov
jmp
mov
mov
add
add
xchg
mov
shl
dec
sub
and
jmp
add
push
mov
jmp
mov
mov
add
mov
add
pop
jmp
push
jmp
mov
jmp
mov
mov
sub
pop
add
push
mov
add
pop
add
jmp
push
mov
mov
jmp
mov
push
pop
jmp
add
jmp
sub
mov
add
push
jmp
add
push
mov
neg
not
add
add
add
jmp
push
push
jmp
add
jmp
add
jmp
pop
mov
add
jmp
pop
jmp
add
push
mov
or
pop
push
mov
xor
pop
push
mov
push
mov
add
add
xchg
mov
pop
jmp
mov
push
sub
pop
push
mov
xor
pop
add
jmp
push
mov
jmp
and
xor
sub
add
add
mov
add
jmp
sub
jmp
push
mov
sub
pop
jmp
mov
add
pushl
jmp
addl
pop
push
mov
jmp
pop
xchg
jmp
not
add
not
sub
shr
sub
add
add
sub
jmp
sub
sub
add
add
add
jmp
xchg
jmp
push
mov
add
push
mov
jmp
lods
xor
push
mov
jmp
addl
mov
push
jmp
sub
jmp
push
mov
mov
xor
pop
sub
sub
pop
shl
add
add
add
sub
pop
push
mov
add
jmp
mov
push
push
push
mov
jmp
push
mov
push
mov
mov
pop
push
mov
inc
xor
push
mov
jmp
mov
popl
mov
pushl
jmp
xor
jmp
push
push
pop
add
add
xchg
jmp
pop
sub
jmp
pop
mov
pop
sub
jmp
push
pop
shr
jmp
push
pop
push
mov
jmp
push
mov
add
push
addl
pop
sub
pop
not
shr
dec
dec
sub
mov
push
push
pop
not
not
push
jmp
pop
jmp
sub
sub
mov
jmp
mov
jmp
sub
mov
sub
push
jmp
mov
pop
jmp
pushl
pushl
mov
add
jmp
mov
jmp
push
mov
sub
pop
not
add
xor
mov
jmp
push
pushf
jmp
pop
add
sub
push
jmp
add
jmp
sub
pop
jmp
mov
add
add
add
push
jmp
mov
jmp
sub
mov
mov
inc
neg
xor
add
jmp
sub
mov
push
jmp
popl
mov
pushl
pop
jmp
add
xor
jmp
push
mov
and
pop
sub
push
mov
jmp
xorl
mov
add
xor
sub
mov
addl
mov
add
jmp
add
sub
jmp
push
mov
add
jmp
pop
jmp
mov
jmp
mov
add
or
pushl
pop
jmp
sub
pop
sub
add
add
sub
push
jmp
xor
neg
dec
shr
add
sub
mov
add
push
jmp
inc
jmp
add
add
xor
jmp
sub
pushl
jmp
mov
jmp
push
mov
xor
pop
add
add
pop
sub
jmp
xor
jmp
mov
add
jmp
sub
sub
jmp
shr
not
jmp
pop
push
mov
mov
sub
pop
add
add
pop
sub
add
add
sub
pop
xchg
mov
jmp
pushl
pop
add
and
pop
shr
jmp
mov
push
pop
jmp
mov
sub
dec
neg
dec
jmp
pushl
pop
push
mov
push
mov
add
pop
add
xor
xor
xor
jmp
pop
add
jmp
shl
add
jmp
push
mov
jmp
push
push
mov
mov
jmp
mov
add
add
add
sub
sub
pop
add
xchg
pop
push
push
pop
mov
add
jmp
push
mov
push
jmp
push
mov
xchg
xchg
not
xchg
xor
xor
xor
pushl
pop
jmp
pop
jmp
pop
push
mov
sub
pop
jmp
sub
not
push
push
mov
push
jmp
push
pop
jmp
mov
add
pop
jmp
mov
add
push
push
mov
jmp
add
jmp
push
jmp
sub
mov
mov
push
mov
jmp
mov
addl
mov
jmp
push
jmp
sub
jmp
popl
jmp
add
add
xchg
pop
mov
jmp
mov
mov
push
mov
mov
add
pop
add
add
sub
mov
mov
sub
mov
add
jmp
mov
mov
jmp
mov
pop
jmp
mov
add
sub
xchg
mov
mov
mov
mov
xor
pop
sub
pop
xchg
pop
mov
sub
mov
push
pop
sub
jmp
shl
xor
sub
add
jmp
sub
xchg
pop
mov
mov
xor
mov
add
add
add
jmp
mov
jmp
sub
pop
xor
xor
xor
pop
xor
jmp
sub
add
mov
push
push
jmp
pushl
pushl
pop
jmp
add
pop
sub
jmp
shl
shr
sub
add
add
sub
pop
sub
jmp
push
pop
jmp
push
mov
add
mov
add
pop
sub
push
push
push
jmp
mov
jmp
neg
add
sub
pop
or
pop
sub
mov
push
mov
mov
mov
jmp
mov
mov
add
add
xor
sub
mov
mov
sub
add
add
sub
push
mov
jmp
xchg
jmp
push
mov
not
sub
or
jmp
push
mov
push
push
push
pop
xchg
not
xchg
shr
neg
sub
mov
pop
shr
neg
and
sub
add
pop
shl
xor
add
jmp
add
jmp
sub
add
pop
xor
xor
jmp
pop
or
shl
or
add
sub
or
pop
jmp
sub
push
mov
sub
pop
jmp
push
mov
jmp
add
mov
add
jmp
mov
mov
add
add
sub
pop
push
mov
jmp
mov
push
mov
mov
add
pop
pushl
pop
add
add
jmp
push
mov
sub
pop
xor
xor
xor
pop
jmp
mov
add
push
mov
add
jmp
add
add
sub
jmp
mov
push
mov
add
not
jmp
pop
add
xchg
pop
jmp
mov
jmp
add
push
mov
jmp
push
jmp
sub
pop
sub
jmp
push
mov
add
add
xchg
pop
jmp
add
jmp
popl
jmp
push
mov
jmp
add
sub
jmp
xor
xor
xor
mov
mov
push
push
mov
addl
jmp
mov
sub
mov
jmp
mov
push
push
mov
push
jmp
push
mov
push
mov
addl
pop
push
mov
mov
xor
add
sub
add
jmp
xor
and
pop
add
add
jmp
xor
jmp
xor
add
pop
push
mov
mov
sub
sub
add
jmp
pop
jmp
pop
jmp
pop
mov
push
pop
jmp
inc
or
sub
jmp
and
pop
inc
jmp
sub
mov
push
pop
push
mov
jmp
sub
add
add
pop
jmp
sub
jmp
or
and
add
add
add
sub
pop
xchg
pop
add
shl
push
mov
jmp
mov
jmp
xchg
mov
mov
push
mov
mov
push
mov
add
jmp
pop
neg
add
add
pop
add
xor
xor
jmp
dec
jmp
push
jmp
push
mov
xor
shl
jmp
mov
pop
pushl
jmp
push
mov
sub
mov
push
mov
add
sub
push
pushl
jmp
add
sub
mov
add
jmp
sub
dec
or
or
dec
add
add
jmp
sub
jmp
mov
push
mov
push
mov
mov
pop
jmp
or
jmp
pushl
pop
add
push
mov
and
pop
add
jmp
mov
mov
xor
jmp
mov
pop
push
mov
sub
pop
add
sub
add
add
push
push
mov
shr
push
jmp
mov
push
mov
xor
pop
jmp
mov
add
add
jmp
pop
xor
add
mov
jmp
pop
jmp
or
add
add
pop
sub
mov
push
mov
add
xor
push
mov
or
pop
and
inc
xor
shr
add
push
push
push
jmp
add
pushl
pop
jmp
mov
add
and
or
xor
shl
push
jmp
sub
mov
push
mov
jmp
push
jmp
pop
mov
pushl
pop
push
jmp
mov
push
pop
push
mov
add
pop
push
mov
mov
sub
pop
xchg
mov
jmp
sub
pop
dec
neg
jmp
shr
inc
push
mov
xor
pop
jmp
xor
push
mov
sub
pop
xor
sub
pop
push
mov
shl
pushw
mov
xchg
not
xchg
pop
push
mov
and
pop
jmp
sub
xchg
pop
jmp
xchg
mov
jmp
push
push
pop
jmp
add
jmp
subl
jmp
pop
push
pushl
pop
popl
pop
sub
pushl
pop
jmp
pop
add
add
push
mov
push
mov
jmp
push
jmp
pop
push
jmp
pop
add
jmp
sub
sub
add
pop
push
mov
add
sub
xchg
pop
mov
mov
jmp
push
jmp
push
push
pop
jmp
jmp
sub
mov
push
mov
push
push
jmp
pushl
jmp
pop
jmp
sub
add
pop
sub
push
push
mov
add
sub
add
pop
sub
jmp
shr
push
mov
sub
jmp
xor
push
pop
pop
sub
neg
shr
jmp
xor
xor
add
pop
pop
xor
xor
xor
jmp
inc
push
mov
sub
pop
or
jmp
or
shl
push
push
jmp
mov
mov
jmp
push
mov
xor
jmp
addl
pop
push
mov
sub
and
inc
and
xor
add
pop
add
xchg
mov
pop
push
jmp
pop
or
and
xor
sub
sub
add
pop
mov
jmp
mov
add
xor
pop
not
or
jmp
xor
xor
not
xor
xor
xor
pushl
pop
add
jmp
pop
sub
sub
add
pop
jmp
pop
add
xchg
mov
jmp
add
jmp
mov
push
mov
push
pop
add
add
xchg
jmp
add
jmp
sub
jmp
mov
sub
mov
add
push
jmp
pop
add
pop
push
mov
jmp
push
mov
push
push
mov
neg
xor
jmp
push
jmp
xor
jmp
and
not
sub
add
add
sub
sub
sub
pop
jmp
push
push
mov
push
mov
sub
jmp
add
jmp
pop
add
jmp
add
sub
xchg
pop
jmp
mov
not
inc
add
inc
jmp
mov
add
add
xchg
jmp
mov
push
mov
and
and
neg
jmp
sub
sub
push
push
mov
mov
jmp
pop
pushl
pop
push
push
mov
jmp
add
sub
xor
xor
pop
jmp
popl
pop
push
sub
mov
mov
inc
pushw
subb
subb
sub
jmp
add
and
pushl
jmp
mov
mov
sub
push
jmp
push
mov
or
sub
jmp
mov
mov
shl
jmp
mov
jmp
mov
jmp
mov
push
mov
add
add
xchg
pop
mov
pop
add
jmp
mov
push
pop
shr
jmp
push
mov
push
jmp
not
xchg
push
jmp
push
mov
jmp
xor
pushl
pop
add
sub
add
push
push
jmp
pop
mov
mov
add
jmp
push
mov
neg
add
xor
xor
add
add
sub
mov
add
jmp
add
mov
add
add
inc
push
mov
push
mov
jmp
push
mov
jmp
add
sub
push
jmp
xor
xor
not
xchg
xor
sub
pop
sub
mov
mov
push
jmp
add
pop
pop
sub
sub
push
jmp
mov
sub
pop
push
jmp
mov
add
mov
add
xor
xor
xor
mov
shlb
pushf
jmp
jmp
add
push
mov
mov
shl
push
jmp
add
mov
jmp
add
sub
jmp
sub
mov
add
push
jmp
sub
xor
xor
pop
inc
shl
sub
add
add
sub
pushl
jmp
mov
dec
not
or
sub
sub
pop
xor
pop
add
jmp
xor
mov
push
mov
add
add
jmp
add
jmp
and
jmp
xor
xor
xor
not
xchg
jmp
push
pop
jmp
sub
mov
mov
add
add
jmp
add
push
mov
add
jmp
pop
xor
sub
add
add
push
mov
sub
shl
and
neg
xor
add
inc
jmp
push
mov
shl
and
shl
xor
inc
sub
mov
pop
and
shl
push
jmp
push
push
mov
jmp
dec
jmp
mov
mov
add
pop
push
mov
mov
xor
mov
add
push
jmp
mov
jmp
mov
jmp
pop
and
push
mov
jmp
sub
mov
jmp
sub
jmp
or
shl
jmp
mov
add
add
sub
pop
push
pushl
jmp
add
jmp
add
add
mov
add
push
mov
add
pop
push
pushl
jmp
xor
jmp
dec
push
jmp
push
jmp
mov
mov
sub
mov
sub
push
jmp
pop
jmp
add
add
jmp
pop
mov
pop
add
jmp
or
inc
or
sub
jmp
add
pop
sub
add
jmp
mov
jmp
mov
pop
mov
jmp
mov
shr
shl
xor
jmp
mov
sub
pop
jmp
sub
pop
pushl
jmp
mov
push
push
mov
push
mov
mov
pop
jmp
mov
pop
mov
jmp
add
jmp
mov
push
mov
sub
mov
addl
pushl
pop
push
push
pop
push
jmp
add
pop
add
jmp
add
add
jmp
pop
sub
push
mov
neg
sub
xor
jmp
or
or
jmp
pop
xchg
mov
jmp
push
mov
mov
dec
not
dec
xor
xor
xor
mov
pop
push
jmp
push
mov
add
jmp
mov
pushl
mov
add
add
push
mov
or
shl
add
sub
pop
jmp
popl
pop
jmp
sub
pop
jmp
add
pop
jmp
sub
jmp
pop
add
or
not
sub
mov
pop
inc
jmp
mov
jmp
mov
jmp
mov
push
mov
push
pop
add
push
mov
push
mov
push
pop
pop
add
jmp
push
mov
add
jmp
sub
add
add
sub
add
pop
xor
jmp
mov
neg
add
add
pop
sub
push
pushl
pop
popl
mov
mov
jmp
mov
pushl
pop
add
push
mov
subl
jmp
mov
jmp
pop
sub
mov
mov
jmp
mov
push
mov
jmp
push
mov
add
add
xor
jmp
addl
popl
jmp
sub
add
add
mov
add
jmp
add
or
shl
sub
and
pushl
mov
add
jmp
xor
pop
add
push
mov
jmp
pop
popl
jmp
add
add
pop
xchg
mov
push
mov
jmp
xor
pop
sub
pop
sub
xor
add
pop
jmp
sub
mov
mov
mov
jmp
xchg
pop
xchg
pop
jmp
xchg
not
xchg
add
push
jmp
mov
add
jmp
mov
push
push
mov
add
sub
jmp
mov
sub
jmp
pop
popw
jmp
pop
dec
add
not
add
jmp
add
push
mov
mov
jmp
xor
mov
or
je
push
mov
push
mov
jmp
pop
jmp
mov
jmp
push
jmp
add
pop
add
jmp
push
jmp
add
pop
xchg
mov
add
jmp
xchg
add
sub
pop
jmp
xchg
mov
shr
xchg
jmp
mov
sub
mov
mov
jmp
pop
sub
push
jmp
xor
pop
push
subl
jmp
sub
sub
add
jmp
push
mov
push
push
pop
add
neg
push
jmp
add
jmp
pop
sub
shr
sub
mov
mov
xor
jmp
push
jmp
pop
jmp
add
sub
add
mov
push
mov
add
jmp
mov
xor
jmp
add
sub
jmp
pushl
pushl
jmp
push
mov
push
mov
mov
push
mov
mov
jmp
shr
sub
xor
pop
not
add
sub
mov
push
mov
add
add
xchg
jmp
shl
jmp
pushl
jmp
add
xor
pushl
jmp
push
push
pop
push
mov
push
push
pop
xor
push
jmp
sub
add
add
sub
pop
sub
push
pushl
jmp
add
pop
add
xchg
pop
push
mov
add
add
sub
jmp
sub
jmp
sub
sub
pushl
jmp
xor
mov
pop
jmp
add
pop
push
mov
jmp
push
jmp
push
mov
sub
mov
mov
and
mov
push
mov
add
add
xchg
pop
xchg
xor
xor
jmp
add
xchg
pop
push
jmp
push
mov
xor
pop
jmp
pop
pushl
jmp
pop
sub
jmp
mov
jmp
or
mov
add
shl
push
mov
add
pop
mov
pop
add
add
sub
mov
add
push
mov
jmp
mov
sub
pop
add
addl
jmp
mov
jmp
shr
sub
xor
and
shr
jmp
push
xchg
jmp
dec
jmp
and
add
add
pop
push
push
mov
jmp
and
jmp
push
mov
add
sub
xchg
jmp
or
or
jmp
pushl
pop
popl
mov
or
jne
sub
jmp
popl
sub
mov
push
mov
mov
pushl
pop
add
add
pop
popl
jmp
pop
xor
pop
or
shl
or
or
push
jmp
mov
push
mov
add
push
mov
jmp
ret
lods
sub
mov
jmp
mov
mov
sub
add
mov
add
add
xchg
pop
popl
mov
and
pushf
jmp
pop
sub
mov
mov
add
pop
push
pushl
pop
jmp
mov
pushl
mov
push
mov
jmp
pop
jmp
push
mov
push
addb
sub
jmp
mov
sub
mov
add
shl
sub
add
pop
sub
jmp
sub
mov
add
jmp
sub
mov
jmp
shl
or
shr
push
mov
sub
jmp
xchg
pop
add
push
push
pop
jmp
xchg
pop
pushw
mov
push
mov
mov
xor
pop
xor
mov
push
mov
add
push
push
push
mov
xor
jmp
mov
dec
push
push
mov
jmp
movzbw
pushw
mov
jmp
add
add
sub
mov
mov
add
pushl
pop
add
add
jmp
add
push
mov
sub
pop
jmp
or
push
mov
xor
dec
xor
push
push
jmp
add
add
jmp
shr
add
and
add
sub
sub
jmp
pop
xor
add
mov
add
xor
jmp
xor
pop
shl
shl
or
xchg
jmp
push
mov
mov
sub
jmp
mov
push
jmp
push
jmp
sub
mov
push
push
popl
jmp
push
mov
not
shl
push
mov
add
pop
jmp
mov
push
mov
push
mov
add
dec
not
dec
xor
add
mov
add
push
push
mov
jmp
pop
sub
not
add
inc
push
jmp
add
jmp
mov
add
jmp
pop
jmp
add
jmp
mov
push
push
jmp
pop
jmp
push
mov
push
jmp
add
jmp
or
mov
add
sub
jmp
not
mov
pop
shr
push
mov
xor
inc
sub
add
xor
add
jmp
or
jmp
pop
push
jmp
or
neg
neg
sub
add
add
sub
pop
add
jmp
push
mov
push
mov
jmp
xchg
push
jmp
mov
jmp
mov
add
and
sub
jmp
sub
sub
pop
dec
jmp
mov
jmp
add
pop
push
mov
shr
xor
neg
xor
add
pop
push
pushl
pop
jmp
pushl
pop
popl
mov
jmp
push
mov
mov
add
pop
sub
jmp
popl
mov
xor
jmp
mov
push
jmp
pop
pop
and
pop
pushl
push
push
mov
add
subl
sub
push
push
jmp
pop
push
mov
push
pop
sub
mov
mov
add
pop
push
mov
sub
mov
jmp
push
push
jmp
mov
add
jmp
inc
dec
inc
xor
mov
pop
and
shr
or
neg
add
jmp
mov
inc
jmp
xor
jmp
neg
push
mov
jmp
xor
push
mov
xor
xor
xor
sub
mov
xor
jmp
push
mov
xor
jmp
pop
mov
jmp
jmp
add
xchg
pop
push
mov
push
mov
push
push
jmp
mov
push
mov
xor
pushl
jmp
add
jmp
push
push
mov
push
pop
addl
add
subl
mov
push
mov
push
jmp
add
mov
pop
push
mov
shl
sub
jmp
shr
add
jmp
mov
add
pushl
pop
push
jmp
push
mov
inc
jmp
add
jmp
pushl
pop
push
mov
add
add
jmp
add
sub
push
mov
jmp
movzbw
push
mov
push
pushl
jmp
push
mov
shl
sub
shl
xor
sub
add
add
pop
add
mov
add
add
xchg
jmp
and
mov
push
mov
push
jmp
add
add
xchg
jmp
xor
pop
jmp
pop
mov
push
mov
mov
pop
push
mov
jmp
or
not
not
add
jmp
shl
push
mov
add
jmp
push
popl
addl
mov
jmp
add
push
push
jmp
push
mov
mov
xor
pop
xchg
jmp
and
jmp
sub
add
add
push
mov
sub
add
add
sub
add
pop
mov
add
xor
xor
xor
mov
shll
pushf
jmp
mov
mov
add
sub
jmp
or
pop
push
mov
add
pop
dec
not
shl
push
push
jmp
add
add
pop
push
jmp
sub
jmp
add
add
sub
sub
pop
sub
xchg
jmp
pop
push
push
jmp
sub
jmp
mov
jmp
push
mov
sub
push
mov
addl
popl
addl
pop
push
mov
jmp
sub
push
mov
mov
jmp
mov
jmp
xor
inc
jmp
sub
sub
add
add
sub
pop
add
jmp
mov
mov
add
sub
xchg
pop
mov
jmp
mov
mov
push
pop
jmp
mov
add
sub
xchg
pop
mov
mov
jmp
push
mov
jmp
xor
xor
xor
pushl
pop
push
mov
push
mov
push
jmp
push
mov
jmp
add
jmp
cmp
pushf
jmp
or
shl
inc
sub
shl
sub
sub
pop
sub
sub
add
add
add
pushl
jmp
add
push
jmp
mov
add
xor
neg
add
xor
xor
pop
push
mov
jmp
pop
shr
jmp
mov
add
xor
pushl
pop
add
inc
push
mov
add
pop
jmp
sub
pop
sub
jmp
mov
addl
popl
addl
pop
jmp
push
jmp
add
pop
xchg
mov
add
pushf
jmp
sub
jmp
push
mov
jmp
pushl
jmp
push
mov
jmp
push
mov
jmp
xchg
pop
sub
jmp
mov
push
jmp
push
mov
add
add
xchg
pop
jmp
mov
jmp
pushl
popf
pop
rclb
pushf
jmp
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
mov
push
push
push
jmp
add
push
mov
add
sub
xchg
jmp
xor
xor
mov
shr
xor
push
sub
mov
mov
add
sub
mov
mov
sub
jmp
mov
push
mov
add
push
mov
add
jmp
xor
pushl
jmp
inc
sub
sub
pop
pop
sub
pop
push
mov
push
mov
jmp
pop
push
mov
jmp
sub
mov
jmp
mov
add
add
xchg
pop
push
push
mov
add
sub
xchg
pop
mov
mov
mov
sub
pop
push
jmp
mov
or
jmp
pop
xchg
pop
push
mov
mov
push
mov
add
jmp
push
jmp
mov
jmp
push
mov
mov
mov
pushl
pop
add
add
sub
sub
mov
add
xchg
pop
mov
jmp
mov
add
add
pop
push
decl
mov
add
dec
or
jmp
jmp
xor
pop
inc
shl
shl
add
sub
xor
pop
add
add
sub
pushl
mov
add
push
mov
push
mov
shr
sub
add
jmp
mov
sub
pop
push
mov
jmp
pushl
pop
add
push
push
mov
jmp
pop
pushl
pushl
pushl
pop
push
mov
add
add
xchg
pop
add
pushl
jmp
push
mov
add
add
jmp
sub
or
jmp
add
pop
xchg
pop
pop
jmp
push
mov
add
pop
add
jmp
add
jmp
sub
sub
add
mov
add
xchg
pop
mov
mov
jmp
xor
push
pop
pop
mov
jmp
push
push
mov
dec
not
not
sub
xor
mov
jmp
sub
mov
push
mov
add
jmp
sub
mov
push
push
mov
mov
add
pop
xchg
push
jmp
mov
push
push
mov
mov
pop
neg
shl
not
or
inc
push
mov
add
pop
add
jmp
push
pop
add
push
mov
add
pop
xchg
jmp
add
pop
mov
pop
jmp
push
push
mov
mov
pop
add
pop
push
jmp
and
shr
sub
push
jmp
push
pop
shl
sub
jmp
mov
push
mov
addl
add
subl
mov
add
mov
add
push
jmp
push
push
pop
pop
sub
xchg
push
mov
add
jmp
mov
push
mov
sub
pop
push
mov
push
push
push
pop
not
sub
mov
mov
add
mov
sub
pop
push
mov
add
add
mov
add
push
jmp
mov
sub
pop
add
add
pop
or
mov
add
xor
push
mov
inc
not
shl
not
add
add
pop
add
jmp
xchg
pop
push
mov
add
sub
add
add
sub
jmp
mov
inc
sub
jmp
inc
or
sub
mov
pop
push
push
pop
add
jmp
push
pop
add
jmp
add
push
jmp
push
mov
push
mov
add
jmp
add
jmp
pop
jmp
sub
pop
xchg
pop
jmp
mov
jmp
add
jmp
pushl
jmp
mov
mov
not
shl
and
not
not
xor
xchg
dec
xchg
push
mov
add
sub
xor
jmp
mov
mov
add
sub
xchg
pop
mov
push
mov
subl
subl
add
addl
addl
pop
jmp
add
sub
mov
mov
jmp
mov
push
push
mov
add
push
mov
jmp
xor
xor
mov
pop
sub
sub
jmp
push
push
mov
sub
or
sub
mov
pop
xor
push
mov
sub
pop
sub
push
pop
jmp
jmp
pop
jmp
push
jmp
add
push
mov
sub
pop
xchg
jmp
push
mov
sub
mov
mov
jmp
add
sub
xchg
pop
mov
push
mov
jmp
pop
add
jmp
sub
jmp
or
push
push
mov
push
subl
pop
add
pop
jmp
mov
add
jmp
mov
push
mov
push
push
mov
mov
add
mov
add
jmp
shl
jmp
pop
push
jmp
pop
jmp
pop
mov
add
jmp
pop
add
pop
xor
xor
jmp
add
sub
xchg
pop
jmp
xor
xor
mov
btr
pushf
jmp
pop
push
push
push
pop
jmp
pop
push
mov
mov
jmp
or
sub
and
jmp
mov
push
jmp
pop
jmp
mov
sub
pop
add
or
jmp
push
mov
push
pushl
jmp
pop
jmp
xor
mov
add
push
mov
mov
push
mov
add
mov
add
sub
jmp
push
decl
jmp
shr
jmp
mov
push
jmp
mov
jmp
mov
push
mov
sub
mov
addl
jmp
mov
mov
and
pushl
pop
jmp
mov
push
pushl
mov
add
add
jmp
pushl
jmp
popl
push
mov
jmp
add
pop
jmp
mov
jmp
mov
xchg
dec
jmp
mov
add
push
mov
dec
push
push
mov
mov
xor
jmp
mov
add
jmp
push
mov
sub
pop
movzwl
push
push
mov
jmp
pop
jmp
push
push
pop
push
mov
jmp
mov
push
jmp
pop
sub
shr
sub
mov
mov
shr
sub
jmp
push
jmp
xor
push
jmp
pop
push
mov
xor
and
add
jmp
neg
sub
jmp
push
mov
push
mov
mov
jmp
mov
jmp
pop
add
dec
xor
or
add
shl
push
jmp
mov
add
add
jmp
inc
add
jmp
add
push
pushl
jmp
pop
jmp
popl
jmp
pop
jmp
pushw
jmp
mov
xor
pop
push
mov
xor
sub
pop
mov
mov
add
jmp
add
jmp
pop
sub
mov
pop
xor
pop
xor
jmp
mov
add
jmp
add
shl
not
sub
jmp
pop
add
sub
mov
add
sub
add
add
mov
sub
mov
mov
add
add
xchg
mov
movzbl
lea
push
mov
jmp
shr
dec
xor
jmp
add
add
push
jmp
mov
jmp
popl
pop
jmp
push
jmp
pop
add
pop
not
jmp
add
pop
xchg
mov
popl
mov
jmp
mov
pop
jmp
push
mov
push
jmp
jmp
add
pop
jmp
mov
pop
sub
jmp
mov
add
jmp
add
xor
xor
xor
jmp
push
mov
jmp
addl
pop
sub
push
mov
mov
pop
pop
mov
jmp
push
jmp
or
jmp
xor
push
pop
pop
add
add
add
sub
push
jmp
mov
sub
pop
add
add
pop
jmp
xor
mov
push
jmp
mov
push
mov
add
add
jmp
mov
jmp
push
push
mov
mov
xor
jmp
add
add
jmp
push
jmp
mov
add
push
mov
jmp
mov
push
mov
jmp
sub
xor
add
jmp
add
pop
push
mov
xor
pop
add
jmp
sub
jmp
mov
push
push
pop
push
mov
add
mov
add
jmp
mov
mov
sub
jmp
or
pop
sub
sub
jmp
push
push
jmp
sub
mov
add
add
add
jmp
mov
xor
sub
pop
add
pop
push
pop
pop
jmp
pop
push
mov
sub
mov
mov
push
mov
sub
jmp
mov
addl
jmp
mov
push
mov
sub
push
jmp
mov
push
jmp
mov
neg
jmp
sub
jmp
pop
popl
pop
mov
push
mov
jmp
push
pop
add
push
jmp
mov
jmp
mov
add
jmp
pop
add
push
mov
xor
sub
pop
jmp
pop
shr
xor
add
jmp
mov
jmp
xor
xor
jmp
mov
sub
jmp
pushl
pop
add
or
jmp
pop
shl
push
jmp
push
mov
mov
push
mov
jmp
mov
add
add
sub
pop
push
jmp
sub
mov
push
mov
jmp
mov
add
xor
jmp
sub
jmp
push
jmp
add
pop
push
jmp
push
push
pop
sub
add
add
mov
jmp
mov
mov
add
pop
xchg
pop
jmp
add
push
mov
inc
sub
inc
jmp
add
jmp
add
pop
jmp
pop
neg
jmp
xor
pop
xor
pop
sub
pop
jmp
inc
push
mov
xor
pop
add
pushl
pop
add
sub
mov
notl
pop
and
sub
mov
jmp
sub
mov
mov
sub
add
add
pop
xchg
pop
subl
jmp
pop
push
mov
push
push
mov
mov
jmp
push
mov
mov
add
pop
xor
xor
xor
pop
jmp
mov
add
sub
xchg
pop
jmp
xor
mov
pop
mov
pop
sub
jmp
pop
add
sub
jmp
xor
mov
jmp
mov
mov
add
sub
add
jmp
pop
add
pop
std
jmp
pop
add
xchg
mov
jmp
mov
add
push
jmp
jmp
pushl
pop
push
push
mov
addl
pop
add
add
xchg
mov
push
mov
jmp
neg
jmp
sub
mov
pop
push
jmp
mov
and
add
push
mov
sub
jmp
add
mov
push
jmp
push
jmp
add
sub
jmp
mov
mov
jmp
add
pop
jmp
mov
push
mov
add
jmp
push
mov
shr
sub
xor
jmp
mov
jmp
add
add
pop
push
mov
add
pop
jmp
add
sub
pop
xor
xor
xor
pop
push
mov
push
mov
push
pop
jmp
add
jmp
push
mov
mov
not
push
mov
mov
and
shl
and
add
xor
jmp
mov
jmp
push
push
mov
mov
pop
add
jmp
pushl
pop
push
push
jmp
mov
mov
add
mov
pop
jmp
pop
sub
jmp
push
mov
jmp
mov
jmp
add
push
mov
mov
push
mov
add
pop
subl
push
mov
mov
subl
sub
jmp
pop
pop
push
jmp
mov
jmp
add
pop
push
mov
sub
mov
add
mov
jmp
mov
pop
or
push
jmp
xor
or
jmp
push
jmp
mov
sub
jmp
and
jmp
xor
mov
pop
and
jmp
add
pop
pop
xor
xor
xor
pop
mov
push
push
mov
addl
pushl
pop
jmp
sub
add
add
pop
dec
add
push
jmp
push
mov
not
shr
or
inc
sub
sub
pop
add
add
sub
add
mov
add
xor
xor
jmp
mov
add
add
pop
sub
jmp
mov
jmp
pushl
jmp
xor
jmp
mov
add
jmp
mov
add
sub
xchg
pop
jmp
push
mov
jmp
mov
jmp
pop
sub
jmp
and
add
add
pop
add
pop
xor
sub
add
add
sub
pop
add
jmp
sub
push
mov
sub
mov
jmp
mov
inc
jmp
sub
pop
xor
xor
xor
mov
jmp
neg
jmp
push
mov
sub
jmp
add
push
jmp
sub
jmp
push
pop
add
jmp
add
jmp
sub
mov
mov
add
jmp
pushl
pop
push
mov
add
add
xchg
pop
add
sub
mov
push
mov
mov
mov
mov
add
add
add
sub
pushl
jmp
xor
mov
pop
add
pop
add
add
sub
jmp
and
push
push
jmp
push
mov
add
add
xchg
pop
pop
add
sub
sub
jmp
mov
push
mov
add
add
xchg
pop
add
push
mov
push
pushl
pop
jmp
mov
jmp
dec
xor
add
pop
add
sub
jmp
pop
decb
pushf
jmp
sub
pop
jmp
shr
add
add
sub
jmp
popl
pop
push
mov
shr
and
sub
shl
neg
jmp
pop
sub
mov
push
pushl
jmp
mov
and
pushf
jmp
add
pushl
pushl
pop
push
sub
mov
addl
pop
jmp
mov
add
pop
xor
jmp
pop
jmp
mov
mov
jmp
push
push
mov
push
jmp
push
push
push
pop
shl
jmp
shl
jmp
push
mov
mov
jmp
pushl
pop
add
popl
mov
push
mov
push
push
mov
jmp
mov
push
push
jmp
mov
add
xor
mov
add
jmp
mov
mov
jmp
xor
xor
pop
mov
push
mov
push
mov
shl
or
inc
add
mov
pop
push
xorl
pop
push
mov
jmp
mov
push
jmp
mov
jmp
mov
push
mov
add
add
xchg
pop
push
mov
jmp
add
pop
push
mov
xor
jmp
xor
and
pop
add
add
pop
jmp
xor
mov
pop
add
pop
mov
push
push
mov
add
add
add
xor
xor
xor
mov
jmp
xor
xor
xor
pop
incw
pushf
jmp
mov
mov
mov
push
mov
add
add
xchg
pop
dec
jmp
pop
add
xor
xor
xor
mov
push
mov
push
push
push
jmp
xchg
mov
div
push
mov
push
pushf
jmp
add
push
jmp
xor
mov
jmp
push
addl
jmp
xor
xor
mov
mov
mov
add
sub
sub
pushl
pop
push
mov
add
add
xchg
pop
xchg
pop
mov
jmp
add
jmp
or
jmp
push
mov
jmp
pop
push
mov
sub
pop
jmp
xor
xor
pop
mov
push
mov
push
jmp
mov
push
mov
add
push
mov
push
mov
shl
jmp
push
mov
push
jmp
pop
sub
xor
xor
xor
mov
mov
push
mov
jmp
not
jmp
mov
jmp
push
push
pop
push
push
jmp
xor
jmp
pop
add
sub
mov
push
pop
push
mov
jmp
xor
xor
xor
mov
mov
push
mov
mov
push
mov
jmp
push
mov
sub
mov
push
jmp
mov
add
push
mov
add
jmp
sub
mov
jmp
neg
shl
not
inc
xor
sub
sub
pop
add
pop
push
mov
add
jmp
push
mov
add
sub
xchg
mov
mov
jmp
push
pop
push
mov
sub
add
add
jmp
sub
mov
push
mov
jmp
push
mov
dec
shl
shl
xor
xor
mov
jmp
xor
add
mov
add
pop
dec
push
mov
jmp
pop
push
mov
jmp
sub
mov
mov
mov
pop
pop
add
jmp
push
mov
mov
add
add
xchg
pop
jmp
push
mov
mov
jmp
add
sub
sub
jmp
add
sub
xchg
jmp
inc
push
push
push
mov
shr
inc
sub
not
sub
mov
mov
sub
mov
mov
add
add
xchg
jmp
mov
add
push
mov
mov
mov
pushl
pop
push
jmp
add
sub
jmp
add
add
xor
xor
xor
jmp
xor
jmp
sub
xchg
mov
mov
mov
shl
sub
and
add
xor
pushl
jmp
sub
jmp
dec
add
mov
jmp
add
add
jmp
xor
jmp
push
mov
add
pop
mov
push
mov
jmp
mov
mov
jmp
sub
jmp
mov
jmp
add
jmp
sub
and
jmp
push
pop
add
add
push
mov
jmp
subl
subl
subl
sub
addl
addl
jmp
xor
xor
xor
mov
rorl
pushf
jmp
pop
pop
sub
mov
push
push
jmp
add
neg
shr
add
jmp
pop
jmp
mov
jmp
mov
sub
add
jmp
add
pop
add
xchg
mov
push
jmp
mov
jmp
push
mov
add
sub
xchg
mov
mov
jmp
mov
mov
jmp
pop
jmp
pushl
popf
pop
rcrw
pushf
jmp
add
xor
add
sub
jmp
add
jmp
pop
mov
push
mov
add
push
mov
add
jmp
mov
push
mov
mov
jmp
inc
push
mov
push
jmp
add
sub
sub
mov
jmp
mov
add
pop
jmp
push
mov
and
and
xor
jmp
push
mov
jmp
mov
push
push
mov
mov
add
pop
jmp
pop
jmp
xor
pop
jmp
shr
jmp
mov
add
jmp
add
jmp
xchg
pop
mov
push
jmp
push
mov
add
jmp
mov
pop
mov
mov
add
pop
jmp
mov
or
sub
add
pop
jmp
pop
jmp
mov
xor
mov
push
mov
push
jmp
add
jmp
sub
xchg
pop
mov
jmp
push
jmp
sub
jmp
mov
or
pop
push
jmp
push
jmp
mov
push
jmp
pop
xchg
pop
sub
pop
jmp
push
push
mov
sub
not
jmp
pop
push
mov
jmp
pop
pop
mov
jmp
pop
jmp
mov
sub
pop
add
pop
xchg
pop
add
jmp
mov
add
add
xchg
pop
push
push
jmp
add
jmp
push
mov
add
pop
add
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
jmp
mov
push
mov
mov
sub
pop
jmp
xor
push
jmp
pushl
pop
popl
pop
sub
pushf
jmp
sub
jmp
push
mov
add
jmp
add
pushl
pop
jmp
mov
mov
push
mov
jmp
add
jmp
push
xchg
not
xchg
jmp
add
add
sub
jmp
mov
jmp
pop
sub
sub
sub
mov
add
sub
add
add
push
mov
mov
sub
add
add
jmp
sub
or
shr
push
mov
or
pop
push
jmp
shr
jmp
pop
jmp
mov
mov
push
push
push
pop
sub
jmp
mov
mov
sub
add
mov
add
add
xchg
mov
push
sub
mov
mov
sub
mov
push
mov
push
mov
add
jmp
push
push
mov
push
mov
mov
jmp
mov
sub
pop
add
jmp
xor
xor
xor
jmp
sub
pop
pop
add
push
mov
and
jmp
mov
mov
pop
jmp
add
jmp
sub
mov
mov
mov
sub
pop
or
pop
sub
push
mov
jmp
mov
xor
shl
jmp
mov
pop
sub
jmp
pop
push
push
sub
jmp
push
notb
jmp
lods
xor
jmp
pop
pop
pushl
mov
push
mov
jmp
shl
dec
sub
add
pop
add
xor
xor
xor
pop
push
jmp
mov
jmp
xchg
pop
add
add
sub
pop
xchg
pop
sub
mov
push
pop
add
add
xchg
pop
pushl
pop
push
jmp
mov
jmp
add
jmp
xchg
pop
push
popl
addl
pop
push
mov
add
jmp
sub
mov
add
mov
jmp
mov
mov
xor
add
jmp
pop
popl
jmp
push
mov
jmp
mov
add
add
push
mov
jmp
mov
jmp
mov
push
push
mov
push
jmp
xor
pop
sub
or
pushl
pop
push
mov
add
add
xor
xor
jmp
pop
mov
push
push
pop
jmp
pop
jmp
pop
push
push
mov
mov
mov
pop
neg
jmp
pop
inc
not
sub
add
sub
xor
pushl
pop
jmp
popl
mov
jmp
push
push
mov
push
push
pop
add
add
xchg
jmp
add
push
mov
add
jmp
mov
shl
sub
mov
push
mov
push
push
mov
mov
jmp
mov
pop
xor
jmp
pop
add
xchg
pop
popl
jmp
inc
add
jmp
mov
mov
neg
jmp
xchg
mov
xor
xor
xor
pop
incl
pushf
jmp
mov
pop
xor
mov
push
mov
jmp
mov
add
or
push
mov
jmp
sub
jmp
mov
sub
jmp
add
pop
push
mov
shr
shr
inc
and
add
jmp
pop
add
pop
add
jmp
pop
sub
pop
and
pop
xor
push
mov
add
jmp
not
and
neg
add
jmp
add
not
jmp
pushl
jmp
mov
push
mov
push
jmp
xchg
not
jmp
sub
pushf
jmp
push
mov
add
jmp
xor
not
xchg
xchg
or
push
jmp
not
jmp
add
pop
sub
push
jmp
mov
pop
mov
pop
or
mov
add
dec
pushw
jmp
pop
jmp
sub
mov
jmp
add
pop
sub
jmp
mov
sub
mov
add
jmp
pop
push
mov
sub
pop
sub
sub
add
add
pop
push
pushl
jmp
mov
mov
push
mov
mov
sub
sub
add
add
push
mov
add
pop
pushl
pushl
jmp
xchg
mov
jmp
sub
add
pop
jmp
sub
jmp
mov
shr
sub
shl
sub
push
addl
pop
sub
jmp
xor
dec
xor
jmp
mov
push
mov
jmp
mov
mov
pop
push
mov
jmp
mov
push
mov
negl
jmp
sub
jmp
xor
add
jmp
and
pop
shl
dec
xor
xor
mov
push
push
jmp
mov
sub
mov
push
jmp
add
sub
sub
pop
add
pop
push
mov
push
jmp
pop
xchg
jmp
add
and
pushl
mov
add
push
push
mov
addl
jmp
push
mov
not
push
push
pop
add
jmp
pop
add
sub
mov
mov
jmp
pop
jmp
add
pop
xchg
jmp
xor
pop
add
neg
xchg
dec
push
push
pop
pop
sub
push
jmp
push
mov
push
pop
push
mov
jmp
mov
add
push
mov
add
pop
push
mov
mov
jmp
sub
push
mov
inc
push
mov
sub
jmp
pop
sub
mov
jmp
mov
sub
jmp
or
je
push
jmp
add
xchg
pop
mov
mov
push
mov
xor
push
jmp
or
shr
add
sub
pop
sub
jmp
xchg
jmp
push
jmp
neg
add
and
jmp
add
jmp
push
mov
jmp
sub
mov
jmp
pop
and
pushl
pop
add
sub
xor
mov
pop
push
mov
mov
jmp
add
jmp
mov
push
popl
push
push
mov
mov
pop
jmp
add
jmp
inc
jmp
not
add
jmp
add
push
push
push
push
pop
add
sub
push
pushl
jmp
push
push
mov
jmp
mov
add
push
mov
sub
pop
xchg
pop
jmp
push
pop
jmp
mov
push
push
jmp
add
push
pushl
pop
jmp
pop
jmp
mov
mov
add
mov
add
sub
add
add
jmp
push
pushl
jmp
pop
xor
pop
push
jmp
pop
and
jmp
add
add
sub
jmp
or
jmp
mov
push
jmp
pop
jmp
mov
or
neg
jmp
pop
push
mov
add
mov
add
push
jmp
add
mov
add
jmp
lods
jmp
mov
pop
jmp
pop
sub
xchg
mov
mov
push
push
pop
sub
push
jmp
mov
mov
and
pushl
pushl
mov
sub
mov
mov
push
push
mov
shl
not
push
mov
sub
mov
add
jmp
add
pop
push
jmp
add
push
mov
pushl
pop
popl
mov
jmp
push
mov
not
push
mov
xor
pop
add
pop
add
pop
pop
push
jmp
add
pop
xchg
pop
jmp
neg
jmp
not
shr
shl
jmp
add
add
sub
mov
pushl
mov
add
popl
mov
xor
pushf
jmp
pushl
mov
add
push
mov
push
pop
push
mov
xor
add
pop
sub
mov
push
jmp
mov
jmp
mov
mov
jmp
not
xor
jmp
pushl
jmp
pop
add
shl
dec
inc
shl
push
mov
add
pop
push
mov
mov
pop
mov
jmp
jmp
add
push
jmp
xor
add
pop
jmp
sub
jmp
push
mov
jmp
push
mov
push
push
pop
jmp
add
add
pop
sub
add
jmp
movzbl
pushl
jmp
add
add
jmp
xor
pop
push
push
jmp
mov
add
xor
jmp
shl
xor
jmp
sub
jmp
mov
add
jmp
mov
mov
push
push
jmp
push
mov
push
pop
push
mov
add
sub
mov
mov
and
jmp
pop
push
mov
and
dec
neg
jmp
add
xchg
pop
xchg
mov
jmp
sub
add
jmp
mov
push
mov
jmp
push
mov
add
mov
jmp
mov
pop
sub
add
add
jmp
mov
add
push
jmp
add
jmp
push
mov
jmp
pushl
pop
sub
mov
push
mov
addl
mov
add
jmp
push
jmp
add
xor
pop
jmp
mov
xor
add
pop
add
jmp
xchg
pop
push
jmp
push
pop
push
mov
sub
dec
sub
jmp
push
mov
add
jmp
mov
mov
sub
add
jmp
mov
add
add
push
mov
push
push
pop
jmp
pop
sub
jmp
xor
pop
test
pushf
jmp
sub
not
or
neg
jmp
subl
pop
jmp
push
mov
push
mov
jmp
pop
jmp
pop
jmp
mov
mov
mov
push
mov
push
mov
add
sub
xchg
pop
push
mov
jmp
sub
pop
xor
xor
xor
mov
mov
jmp
add
add
xchg
mov
sub
mov
mov
push
push
mov
mov
sub
pop
jmp
push
mov
add
add
xchg
jmp
mov
sarl
pushf
jmp
inc
add
and
sub
jmp
jmp
sub
add
add
jmp
push
push
jmp
xor
jmp
or
shr
xor
mov
pop
jmp
push
jmp
push
mov
xor
push
jmp
mov
mov
mov
pop
jmp
add
add
xchg
pop
movzbw
pushw
mov
jmp
mov
mov
jmp
sub
pop
add
jmp
ret
jmp
mov
push
mov
xor
add
mov
jmp
pop
sub
add
sub
push
mov
neg
add
sub
pop
pop
sub
mov
mov
sub
pop
jmp
jmp
shr
xor
xor
jmp
mov
mov
jmp
add
add
xchg
pop
push
mov
pushl
pushl
pop
add
jmp
mov
xor
sub
and
sub
neg
add
jmp
sub
pop
push
sub
pop
not
sub
add
xor
jmp
add
jmp
mov
add
add
xor
xor
jmp
add
pop
pop
add
push
jmp
add
pop
xor
xor
xor
pop
jmp
sub
xchg
pop
mov
mov
and
jmp
xor
xor
mov
jmp
pop
jmp
xchg
mov
jmp
mov
push
jmp
add
pop
jmp
add
jmp
sub
mov
push
mov
addl
jmp
add
xor
xor
xor
pop
push
push
mov
xor
inc
shr
and
add
mov
pop
add
jmp
mov
add
jmp
mov
add
sub
xchg
jmp
sub
add
add
sub
add
mov
add
xchg
pop
push
push
mov
add
add
jmp
neg
push
jmp
mov
push
mov
sub
jmp
mov
sub
sub
sub
add
pop
jmp
mov
push
jmp
add
jmp
push
push
mov
push
mov
push
jmp
push
push
jmp
push
pop
mov
pop
push
xorl
mov
jmp
shl
jmp
pop
add
mov
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
push
jmp
pushl
pop
jmp
xor
xor
xor
jmp
sub
pop
push
jmp
not
jmp
jmp
add
push
jmp
xor
jmp
pushl
mov
jmp
mov
add
pop
not
add
xor
mov
push
push
pop
add
sub
jmp
mov
sub
mov
mov
jmp
mov
jmp
add
push
mov
jmp
xor
add
xor
pop
add
add
jmp
mov
add
mov
add
xor
xor
xor
pop
shr
sub
mov
push
mov
push
jmp
mov
push
jmp
add
sub
push
pushl
pop
popl
pop
jmp
push
jmp
shr
shr
add
add
pop
pop
xor
xor
xor
mov
shlw
pushf
jmp
push
mov
add
or
add
mov
pop
add
jmp
neg
push
jmp
xor
xor
jmp
mov
jmp
btr
pushf
jmp
add
push
mov
add
jmp
mov
add
xchg
not
xor
push
jmp
mov
add
push
push
pop
push
mov
mov
add
add
sub
pop
add
push
pushl
mov
add
popl
pop
jmp
sub
jmp
pop
add
jmp
mov
add
pop
jmp
sub
mov
addl
jmp
pop
add
push
mov
xor
add
jmp
mov
jmp
mov
xor
jmp
xchg
pop
push
push
jmp
add
push
mov
xor
not
xor
sub
pop
push
pushl
pop
popl
pop
mov
jmp
add
sub
jmp
push
mov
add
pop
sub
sub
sub
jmp
pop
jmp
push
mov
push
mov
add
add
xchg
pop
push
mov
sub
add
add
jmp
add
sub
jmp
xor
mov
add
sub
mov
mov
shl
sub
mov
push
jmp
lods
push
push
jmp
push
push
mov
mov
not
not
shr
jmp
pop
xor
jmp
pop
pushl
pop
push
push
mov
jmp
xor
mov
push
mov
push
pop
add
push
mov
jmp
add
sub
mov
mov
add
pop
xor
xor
xor
pop
pushw
mov
push
jmp
pushl
pushl
pushl
pop
jmp
mov
xor
jmp
mov
mov
mov
jmp
popl
pop
add
sub
jmp
push
mov
push
addl
pop
sub
jmp
mov
xor
pop
and
jmp
mov
xor
pop
sub
pop
sub
sub
add
add
add
pop
add
pop
jmp
mov
sub
mov
jmp
add
and
pop
jmp
cmp
pushf
jmp
pop
add
sub
xchg
pop
mov
push
mov
jmp
push
mov
push
mov
jmp
mov
pop
add
add
add
pop
add
pop
sub
mov
pushl
pop
popl
pop
push
mov
jmp
push
mov
add
pop
sub
sub
sub
add
jmp
or
shl
push
mov
jmp
mov
add
not
push
mov
sub
pop
push
mov
sub
jmp
mov
or
jmp
neg
shr
or
sub
add
pop
mov
add
push
push
push
jmp
add
pop
add
jmp
push
jmp
sub
mov
add
sub
add
add
jmp
pop
jmp
add
sub
xor
jmp
mov
jmp
sub
xor
jmp
add
pop
sub
shr
dec
add
push
jmp
mov
shl
push
jmp
pop
xchg
mov
bt
pushf
jmp
mov
push
jmp
push
jmp
or
jmp
pop
add
add
push
mov
sub
pop
pushl
jmp
mov
xor
push
mov
jmp
add
xchg
pop
mov
mov
add
push
jmp
add
pop
jmp
mov
mov
jmp
mov
mov
jmp
push
mov
add
push
mov
add
pop
xchg
pop
jmp
mov
pop
jmp
pop
jmp
mov
mov
pop
pop
not
shr
inc
xchg
xchg
not
xchg
xchg
xor
sub
add
add
pop
pop
push
jmp
sub
mov
addl
pop
sub
pop
jmp
negw
pushf
jmp
mov
jmp
add
pop
movzbl
pushl
sub
mov
push
pushl
jmp
push
jmp
sub
mov
push
jmp
push
mov
xor
pop
add
inc
shl
shl
push
addl
sub
push
jmp
mov
jmp
sub
pop
add
add
pop
sub
jmp
lods
jmp
pop
shl
xchg
not
xchg
xor
and
pop
sub
and
push
mov
sub
add
add
pop
or
jmp
push
jmp
or
shl
jmp
xor
xor
pop
push
mov
push
pop
add
jmp
pushl
pushl
pop
push
push
mov
add
sub
xchg
pop
mov
jmp
mov
jmp
pop
add
add
popl
mov
cmp
pushf
jmp
pop
xor
mov
pop
shl
xor
jmp
lods
jmp
xchg
mov
mov
push
pushf
jmp
mov
sub
pop
add
add
push
mov
sub
jmp
pop
sub
mov
push
sub
mov
addl
pop
add
jmp
pop
sub
add
jmp
mov
add
subl
jmp
add
push
mov
jmp
mov
add
push
pushl
pop
jmp
mov
pop
push
mov
add
pop
jmp
mov
add
add
sub
push
mov
sub
mov
add
add
sub
jmp
mov
push
push
pop
pop
jmp
sub
jmp
push
mov
jmp
mov
sub
mov
pop
add
push
mov
mov
add
pop
mov
pop
add
pushl
mov
add
push
jmp
pop
push
mov
mov
jmp
xor
jmp
xor
xor
mov
push
jmp
pop
jmp
inc
jmp
xor
jmp
mov
add
add
push
pushl
pop
popl
jmp
pop
jmp
mov
mov
add
jmp
xchg
pop
mov
mov
jmp
pop
or
jne
push
mov
xor
jmp
shr
jmp
pop
add
mov
sub
mov
mov
add
add
xchg
pop
push
jmp
add
add
push
mov
pushl
jmp
pop
popl
mov
shll
pushf
jmp
mov
add
push
push
pop
jmp
mov
add
jmp
push
mov
push
mov
or
mov
add
shl
sub
push
mov
sub
pop
add
pop
mov
pushl
pop
add
and
pushl
pop
jmp
mov
and
add
shr
not
or
add
mov
pop
jmp
mov
jmp
pop
push
pushl
jmp
pop
shr
push
mov
add
add
sub
pushl
mov
add
add
push
mov
jmp
pop
jmp
add
pop
add
xor
sub
add
add
pop
add
sub
add
pushl
push
mov
add
jmp
sub
jmp
mov
shll
jmp
pushl
pop
jmp
pop
jmp
sub
shl
jmp
sub
sub
add
pop
push
mov
push
mov
mov
mov
pop
pop
pushl
pop
push
mov
add
add
push
pushl
mov
add
popl
pop
sub
sub
jmp
sub
jmp
push
mov
jmp
mov
sub
sub
add
jmp
mov
or
jmp
addl
pop
push
mov
or
jmp
mov
push
mov
add
sub
mov
mov
sub
add
push
mov
xor
add
mov
jmp
pushl
pop
jmp
add
push
mov
sub
sub
jmp
push
mov
mov
pop
mov
add
jmp
pop
sub
add
add
add
jmp
push
mov
and
inc
add
sub
pop
shr
shr
xor
mov
pop
xor
add
pop
xor
xor
xor
jmp
add
pop
jmp
push
mov
jmp
add
and
pop
shr
jmp
xor
xor
xor
jmp
mov
pushl
jmp
xchg
pop
mov
mov
jmp
mov
push
mov
add
jmp
movzbw
pushw
jmp
mov
mov
add
jmp
pop
push
mov
push
mov
sub
sub
shr
shl
sub
add
jmp
pop
add
jmp
pop
jmp
add
add
xchg
pop
xchg
pop
rolb
pushf
jmp
pop
add
mov
jmp
mov
push
push
mov
push
mov
jmp
mov
jmp
pop
jmp
or
je
pushl
pushl
pushl
pop
push
mov
push
jmp
pop
mov
jmp
sub
xor
jmp
pushl
pushl
pop
add
jmp
pop
jmp
push
jmp
mov
sub
mov
push
mov
add
add
xchg
pop
shr
shl
inc
jmp
shl
or
xor
add
pop
jmp
mov
jmp
mov
push
jmp
mov
add
pop
xchg
pop
jmp
push
mov
add
add
jmp
xor
jmp
xor
sub
add
jmp
push
jmp
sub
pushl
pop
add
mov
push
push
jmp
not
jmp
mov
xor
pop
sub
add
sub
pop
jmp
jmp
add
xchg
pop
push
mov
push
push
mov
mov
jmp
add
xor
pop
mov
pushl
mov
push
mov
add
add
xchg
jmp
pop
pop
jmp
xchg
jmp
pop
jmp
mov
add
jmp
pop
mov
sub
jmp
sub
sub
add
pop
xor
push
mov
mov
pop
jmp
pop
add
mov
add
add
jmp
and
push
mov
neg
jmp
mov
jmp
add
and
add
push
jmp
movzbw
push
mov
mov
add
push
mov
sub
mov
add
push
jmp
add
add
jmp
add
push
sub
mov
mov
sub
mov
pop
pop
mov
jmp
push
mov
jmp
sub
xchg
pop
mov
push
sub
push
popl
addl
pop
add
sub
xchg
jmp
mov
add
push
jmp
sub
jmp
xor
xor
xor
pop
push
push
mov
jmp
popl
addl
pushl
mov
push
push
jmp
mov
add
add
jmp
add
add
sub
pushw
mov
mov
sub
pop
mov
jmp
pop
xchg
mov
jmp
mov
push
mov
mov
pop
jmp
mov
sub
jmp
push
mov
jmp
mov
sub
pop
pop
add
jmp
push
jmp
pop
push
mov
add
jmp
push
mov
add
add
xchg
pop
jmp
xor
pop
xor
pop
mov
pop
shr
add
jmp
sub
mov
mov
jmp
add
shr
push
jmp
mov
jmp
xor
neg
sub
jmp
not
jmp
mov
push
push
pushl
pop
sub
mov
mov
add
jmp
mov
push
jmp
mov
add
sub
xchg
pop
mov
jmp
pushl
pushl
pop
add
push
push
jmp
push
jmp
add
jmp
shl
shl
dec
push
push
mov
jmp
push
mov
push
pop
add
jmp
push
mov
and
shl
xor
xor
sub
jmp
sub
mov
pop
jmp
not
add
or
sub
sub
pop
shl
xor
jmp
push
jmp
sub
jmp
push
mov
negl
pushl
jmp
sub
add
mov
add
jmp
mov
add
xor
shl
push
push
mov
mov
xor
pop
and
mov
add
add
jmp
push
mov
add
mov
add
shl
neg
sub
add
mov
add
add
xchg
pop
sub
jmp
mov
pop
mov
push
push
jmp
push
mov
push
pop
pop
neg
xchg
xor
mov
jmp
push
mov
mov
sub
mov
pop
addl
jmp
mov
add
pop
sub
xor
xor
xor
pop
jmp
sub
mov
mov
xchg
jmp
mov
push
mov
jmp
mov
shr
add
mov
pop
add
jmp
mov
push
mov
add
add
jmp
neg
jmp
mov
mov
add
pop
add
pop
xor
xor
xor
mov
ret
jmp
add
pop
jmp
sub
mov
push
mov
push
jmp
sub
sub
add
mov
push
mov
jmp
push
jmp
or
jmp
pop
jmp
pop
add
pop
mov
add
push
jmp
add
push
jmp
pop
push
mov
add
add
xchg
pop
push
mov
jmp
pop
jmp
mov
xor
pop
sub
mov
push
push
pushl
jmp
pop
jmp
add
add
pop
shl
push
mov
xor
pop
xchg
xchg
jmp
pop
push
mov
sub
mov
mov
sub
mov
mov
mov
jmp
mov
not
jmp
xor
push
mov
mov
pop
pop
add
mov
jmp
mov
mov
push
addl
jmp
pop
sub
sub
jmp
mov
pop
shr
shl
sub
add
mov
add
jmp
pushl
mov
jmp
add
jmp
pop
add
pop
jmp
add
jmp
pop
shr
or
shl
jmp
addl
jmp
xor
xor
xor
mov
mov
pushl
pushl
pop
add
push
mov
add
push
mov
or
jmp
xchg
jmp
pop
sub
jmp
push
jmp
mov
or
pop
add
sub
pop
jmp
sub
push
mov
and
jmp
mov
jmp
add
shl
shr
add
jmp
pop
sub
mov
sub
mov
mov
push
push
jmp
mov
or
add
add
jmp
add
jmp
mov
push
mov
add
add
xchg
pop
push
jmp
push
jmp
push
mov
not
xor
jmp
sub
xchg
pop
mov
push
mov
mov
pop
sub
xor
mov
mov
add
subl
sub
push
mov
add
jmp
pop
add
add
jmp
neg
neg
push
mov
jmp
pop
jmp
push
mov
and
push
mov
add
jmp
or
jmp
sub
pop
sub
add
movzbl
jmp
push
pop
xor
mov
jmp
mov
sub
jmp
push
jmp
sub
jmp
mov
add
push
push
mov
push
jmp
pop
xchg
pop
jmp
mov
mov
push
jmp
pop
add
jmp
sub
add
jmp
pop
push
mov
sub
add
add
mov
jmp
xchg
jmp
pop
shr
or
je
push
push
mov
jmp
pop
add
push
jmp
dec
sub
jmp
add
jmp
push
sub
jmp
push
jmp
add
jmp
pushw
mov
push
push
mov
add
mov
jmp
add
xor
sub
sub
add
mov
jmp
pop
add
add
add
sub
push
mov
mov
sub
mov
push
push
pop
add
sub
jmp
add
jmp
mov
add
pop
add
pop
jmp
sub
mov
pop
mov
xor
mov
add
jmp
xor
mov
pop
add
or
jmp
add
jmp
add
mov
mov
add
sub
pop
sub
jmp
pop
mov
pop
and
mov
add
or
shl
push
push
jmp
mov
mov
add
push
push
push
pop
push
mov
add
xor
pop
mov
jmp
pop
push
jmp
push
jmp
add
pop
push
mov
add
pop
xor
xor
xor
jmp
inc
jmp
mov
push
jmp
sub
jmp
shr
jmp
push
jmp
mov
push
mov
add
pop
add
jmp
add
sub
jmp
shr
cmp
je
push
jmp
xor
pop
push
addl
pop
sub
pop
or
add
and
push
mov
xor
add
not
and
add
add
jmp
add
or
sub
sub
sub
add
push
jmp
xor
jmp
mov
add
jmp
mov
jmp
xor
dec
jmp
mov
push
mov
addl
pop
sub
pop
push
jmp
add
add
jmp
sub
add
sub
pop
mov
pop
push
mov
xor
shr
shl
jmp
mov
jmp
mov
jmp
sub
mov
pop
mov
pop
shr
jmp
sub
pop
add
sub
xchg
sub
xor
xor
xor
add
sub
mov
pop
push
mov
neg
inc
shl
jmp
add
jmp
pushl
mov
jmp
push
mov
add
sub
sub
jmp
add
jmp
pushl
jmp
mov
jmp
push
mov
jmp
mov
xor
push
mov
jmp
mov
addl
mov
push
mov
mov
add
sub
mov
mov
shl
push
mov
and
pop
shr
and
neg
jmp
mov
rorb
pushf
jmp
pop
xor
push
pop
pushl
pop
add
and
pushl
pop
add
or
je
pushl
push
mov
add
jmp
mov
push
mov
add
add
xchg
pop
sub
mov
push
push
pop
push
mov
jmp
add
or
je
push
mov
mov
jmp
pushl
pop
push
push
pop
add
add
xchg
pop
pushw
jmp
add
sub
sub
add
mov
jmp
mov
push
push
mov
neg
or
push
jmp
sub
pop
jmp
pop
jmp
pop
mov
push
mov
push
mov
mov
push
mov
pushl
jmp
mov
pop
not
sub
mov
mov
not
jmp
push
push
mov
add
mov
add
push
push
mov
add
jmp
add
add
jmp
jmp
mov
mov
add
pushl
pop
push
push
pop
push
jmp
pop
push
jmp
push
incl
jmp
sub
xchg
pop
mov
mov
add
jmp
mov
jmp
and
pop
jmp
add
add
pop
jmp
add
jmp
addl
jmp
mov
mov
jmp
not
xchg
add
jmp
or
sub
shl
jmp
sub
pop
sub
jmp
mov
add
push
jmp
mov
xor
not
jmp
mov
push
jmp
xchg
pop
sub
xor
jmp
sub
jmp
pushl
pop
push
mov
add
add
xchg
pop
sub
mov
push
pop
add
jmp
pop
jmp
sub
sub
add
mov
push
push
jmp
xor
jmp
pushl
jmp
push
mov
mov
push
jmp
mov
sub
sub
jmp
add
pushf
jmp
inc
jmp
push
mov
add
pop
push
push
mov
add
push
jmp
mov
pop
jmp
addl
addl
pop
jmp
pop
add
push
pushl
mov
push
jmp
push
jmp
xchg
mov
roll
pushf
jmp
mov
push
push
pop
push
mov
sub
jmp
popl
jmp
push
mov
add
sub
xchg
mov
mov
push
mov
add
add
not
push
sub
jmp
push
jmp
add
pop
add
add
sub
pop
jmp
push
mov
jmp
add
mov
add
pop
xor
mov
jmp
add
pop
xchg
jmp
push
jmp
mov
add
sub
pop
add
add
pop
xchg
mov
jmp
mov
addl
popl
addl
pop
add
push
mov
sub
jmp
push
mov
sub
pop
jmp
sub
add
add
pop
sub
mov
mov
jmp
mov
add
push
jmp
mov
jmp
not
xor
jmp
xor
xor
mov
xor
movzbl
popw
jmp
mov
jmp
sub
pop
add
sub
mov
jmp
push
jmp
sub
jmp
xorl
pop
xor
jmp
lods
sub
mov
push
jmp
not
xor
xor
jmp
pop
push
jmp
shl
push
mov
sub
mov
add
jmp
sub
add
push
push
mov
addl
sub
jmp
add
jmp
push
mov
add
sub
xchg
jmp
push
mov
add
add
xchg
pop
pop
mov
pop
xor
jmp
pushl
mov
add
jmp
push
mov
push
mov
not
jmp
mov
jmp
pushl
pushl
jmp
mov
push
mov
sub
push
jmp
push
jmp
add
pop
xchg
pop
add
push
push
mov
push
push
mov
jmp
pushl
pushl
pushl
mov
add
push
jmp
shr
shr
and
add
mov
jmp
mov
mov
xor
pushl
pushl
pop
push
jmp
mov
add
sub
sub
pop
xchg
pop
jmp
add
add
push
pushl
jmp
mov
push
jmp
and
xor
sub
mov
push
mov
add
add
xor
xor
jmp
decw
pushf
jmp
mov
sub
jmp
sub
push
mov
jmp
mov
push
push
jmp
sub
jmp
mov
push
mov
push
mov
not
inc
jmp
sub
push
jmp
add
shl
sub
sub
add
jmp
xchg
pop
jmp
add
mov
add
shr
add
push
mov
push
mov
mov
sub
pop
add
add
pop
or
pushl
pop
jmp
mov
jmp
mov
push
push
pop
shr
add
mov
pushl
pop
add
sub
jmp
inc
jmp
pop
add
jmp
and
jmp
push
mov
push
mov
push
mov
add
jmp
popl
jmp
shl
add
xor
jmp
mov
push
jmp
pop
add
jmp
mov
add
jmp
sub
add
add
jmp
add
popl
jmp
add
xchg
pop
push
mov
push
mov
neg
shr
shl
add
jmp
sub
jmp
push
pop
jmp
mov
mov
add
mov
add
push
mov
add
shr
and
jmp
pop
push
push
mov
sub
mov
pop
add
sub
sub
add
jmp
add
pop
jmp
add
jmp
add
add
and
jmp
sub
xchg
pop
mov
mov
shl
jmp
pop
sub
jmp
sub
or
push
jmp
pushl
pop
popl
mov
jmp
push
mov
pushl
pushl
pop
push
push
mov
push
mov
add
add
xchg
pop
jmp
mov
push
mov
sub
push
jmp
add
xchg
mov
add
sub
push
mov
mov
jmp
pop
jmp
mov
mov
pop
xor
mov
push
push
pop
push
mov
jmp
mov
mov
pop
xor
add
jmp
push
jmp
push
mov
add
push
push
jmp
push
mov
sub
jmp
sub
mov
push
mov
push
mov
add
add
add
xchg
pop
and
jmp
shl
xor
mov
pop
sub
pop
jmp
mov
add
add
xchg
pop
jmp
sub
add
pop
pop
push
push
push
pop
jmp
push
jmp
mov
jmp
push
jmp
pushl
jmp
push
mov
push
mov
add
jmp
pop
add
xchg
pop
jmp
push
mov
shl
sub
jmp
push
jmp
pushl
mov
add
sub
mov
push
mov
addl
pop
push
sub
mov
mov
inc
add
xor
push
mov
pop
pop
add
jmp
add
jmp
pop
jmp
mov
jmp
sub
pop
pop
jmp
mov
xor
xchg
not
xor
xor
xor
push
mov
mov
and
mov
add
shr
jmp
mov
mov
shr
jmp
push
push
mov
mov
add
pop
sub
pop
mov
add
sub
pop
xor
add
jmp
mov
jmp
xor
xor
xor
jmp
neg
xor
add
pop
sub
xchg
mov
jmp
add
jmp
push
mov
add
sub
push
jmp
push
mov
mov
push
jmp
push
jmp
add
add
add
pop
pop
xor
sub
mov
push
mov
xor
jmp
add
pop
mov
mov
jmp
add
pushl
pop
push
mov
add
add
xchg
pop
jmp
incl
jmp
add
pop
push
jmp
mov
xor
shl
dec
xor
not
add
sub
pop
xor
xor
xor
mov
mov
jmp
sub
add
xor
add
jmp
inc
sub
xor
jmp
mov
push
jmp
mov
jmp
xchg
jmp
pop
push
mov
add
add
xchg
pop
add
sub
mov
pushl
pop
jmp
mov
pop
add
jmp
pop
add
mov
add
push
push
mov
mov
xor
pop
push
mov
shr
add
xchg
dec
xchg
add
sub
jmp
push
push
push
pushl
pop
add
push
jmp
sub
pop
add
jmp
pop
shr
and
neg
add
push
jmp
mov
pop
add
jmp
xor
xor
xor
xor
pushl
jmp
sub
mov
mov
add
add
xchg
pop
add
xor
xor
xor
mov
jmp
add
add
shr
inc
sub
jmp
xor
jmp
mov
pushl
pushl
pop
push
mov
push
mov
not
add
add
pop
sub
xor
xor
xor
pop
mov
push
mov
jmp
xor
push
push
mov
mov
pop
xor
sub
pop
xor
sub
mov
jmp
mov
push
mov
mov
pop
pop
xor
xor
mov
add
add
mov
pop
push
jmp
sub
xchg
pop
jmp
pop
push
push
push
pop
jmp
push
mov
mov
sub
pop
xor
sub
jmp
sub
jmp
add
jmp
inc
neg
jmp
pop
not
inc
shl
jmp
mov
push
mov
add
add
sub
jmp
mov
mov
mov
pop
pop
sub
add
jmp
sub
jmp
push
push
push
pop
add
mov
jmp
pop
add
add
mov
add
and
pushl
mov
push
jmp
mov
jmp
add
add
sub
pop
jmp
pop
push
mov
jmp
mov
add
add
xchg
pop
add
add
pop
jmp
mov
push
mov
add
add
xchg
jmp
pushl
jmp
sub
jmp
mov
jmp
pop
sub
jmp
xor
sub
pop
mov
mov
add
jmp
lods
jmp
pop
popl
mov
jmp
xor
or
pop
xor
jmp
mov
add
jmp
sub
mov
push
mov
addl
pop
add
push
mov
add
jmp
mov
mov
add
push
push
push
pop
jmp
push
mov
xor
jmp
and
pop
sub
sub
jmp
mov
push
mov
jmp
add
pop
sub
jmp
xor
or
inc
sub
and
jmp
xchg
pop
sub
jmp
pop
push
mov
jmp
push
jmp
mov
add
push
mov
add
add
jmp
add
xchg
pop
popl
pop
sub
jmp
shr
or
add
push
mov
and
mov
push
mov
add
add
jmp
add
pop
sub
mov
jmp
push
mov
sub
mov
add
push
pushl
pop
popl
pop
mov
push
mov
add
jmp
add
jmp
add
mov
add
neg
and
sub
mov
push
pop
push
push
mov
mov
add
jmp
sub
pushl
pop
jmp
push
push
mov
jmp
add
pop
push
pop
pushl
pop
push
mov
add
add
push
mov
jmp
push
pop
pop
push
mov
add
pop
or
jmp
add
jmp
xorl
pop
xor
pop
xor
and
pop
or
jmp
popl
jmp
mov
jmp
mov
mov
inc
jmp
pop
xor
add
jmp
pop
push
pushl
mov
add
jmp
xor
xor
mov
mov
jmp
xor
and
jmp
xor
xor
mov
push
mov
push
mov
jmp
push
mov
add
add
xchg
jmp
push
push
mov
shl
or
jmp
push
mov
mov
pop
pop
sub
add
sub
pop
not
push
mov
dec
sub
mov
mov
add
jmp
push
mov
push
push
pop
xor
mov
jmp
mov
mov
jmp
and
mov
add
dec
jmp
jmp
pushl
pop
push
push
pop
jmp
pop
sub
pushl
mov
add
add
add
sub
jmp
add
jmp
or
neg
or
add
jmp
pop
jmp
add
sub
add
add
jmp
pushl
pop
push
mov
push
pushl
jmp
mov
push
mov
push
pop
jmp
shl
sub
push
xorl
jmp
sub
add
add
sub
jmp
pop
addl
add
jmp
push
jmp
xor
jmp
mov
push
mov
sub
sub
jmp
mov
neg
add
xor
pop
xor
pop
jmp
mov
sub
pop
sub
push
mov
add
xchg
not
jmp
add
add
jmp
and
jmp
sub
mov
push
mov
jmp
pop
push
push
pop
add
pop
push
mov
add
pop
push
pushl
pop
popl
mov
xor
mov
jmp
mov
mov
xor
pop
add
pop
push
mov
mov
jmp
add
pushl
jmp
push
mov
push
mov
mov
jmp
mov
mov
pop
jmp
push
pushl
jmp
sub
or
pop
add
add
mov
add
sub
push
pushl
pop
jmp
mov
mov
jmp
sub
jmp
push
mov
add
pop
add
pushl
jmp
mov
add
mov
push
mov
jmp
mov
jmp
pushl
pop
popl
pop
or
shl
push
mov
jmp
mov
pushw
mov
jmp
mov
jmp
pushl
pushl
pop
jmp
and
sub
jmp
add
mov
mov
add
shl
or
jmp
mov
push
mov
sub
pop
add
pop
sub
sub
add
push
mov
jmp
xor
xor
pop
mov
pushw
mov
push
push
mov
or
jmp
mov
jmp
push
mov
add
pop
pop
jmp
mov
add
xchg
jmp
pop
xchg
pop
shr
push
mov
xor
jmp
xor
jmp
pop
push
push
mov
mov
add
pushl
pop
jmp
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
pop
rorw
pushf
jmp
add
add
xchg
pop
add
jmp
mov
push
mov
add
jmp
popl
xchg
not
xor
jmp
mov
sub
mov
mov
add
add
xchg
pop
jmp
shl
jmp
sub
mov
mov
mov
pop
mov
add
sub
pushl
pop
add
push
mov
mov
subl
jmp
sub
pop
jmp
mov
mov
push
mov
jmp
push
mov
jmp
mov
push
mov
mov
push
mov
add
add
sub
jmp
add
pop
jmp
add
add
sub
mov
add
sub
neg
xor
shl
xor
or
pop
jmp
mov
mov
sub
mov
mov
shl
push
jmp
mov
push
mov
mov
or
push
mov
neg
jmp
mov
add
push
push
pop
add
sub
jmp
push
mov
jmp
sub
jmp
pushl
pushl
pop
push
mov
push
pop
push
push
push
pushl
jmp
add
add
jmp
mov
add
subl
sub
jmp
or
mov
push
mov
add
jmp
shl
jmp
not
jmp
mov
push
push
pop
push
mov
add
pop
push
push
mov
jmp
push
mov
add
jmp
add
add
jmp
add
xchg
jmp
push
push
jmp
pop
add
jmp
pop
push
jmp
sub
jmp
xor
jmp
pop
add
add
push
mov
push
mov
mov
pop
sub
mov
mov
xor
jmp
sub
sub
mov
jmp
jmp
and
push
push
pop
push
mov
and
dec
xor
shl
jmp
push
mov
pushl
pushl
pop
add
popl
mov
shlw
pushf
jmp
pop
pop
mov
pushl
pop
jmp
add
not
xor
xor
xor
jmp
jmp
push
mov
add
add
jmp
shr
xor
xor
jmp
mov
sub
mov
mov
add
or
push
mov
xor
xor
or
pop
jmp
mov
bt
pushf
jmp
mov
add
sub
sub
sub
add
push
mov
or
jmp
push
jmp
mov
pop
jmp
shl
jmp
sub
jmp
push
mov
dec
neg
sub
push
mov
sub
add
add
jmp
sub
mov
push
mov
add
jmp
push
jmp
add
push
notl
pop
push
jmp
and
pop
jmp
or
dec
jmp
pop
mov
jmp
pushl
pushl
pop
add
push
mov
sub
mov
mov
jmp
sub
mov
add
pop
add
sub
jmp
mov
mov
add
jmp
pushl
popf
pop
sbb
pushf
jmp
add
add
xchg
jmp
sub
and
xor
add
sub
xor
push
push
mov
xor
inc
and
shl
dec
jmp
mov
add
sub
add
add
sub
push
mov
push
mov
push
pop
pop
or
push
mov
jmp
mov
jmp
push
jmp
mov
and
xor
jmp
sub
jmp
add
sub
mov
jmp
push
mov
add
sub
push
pushl
mov
add
popl
pop
mov
sub
mov
push
mov
neg
and
shr
inc
sub
mov
pop
mov
add
pop
add
pop
jmp
sub
mov
push
mov
mov
pop
or
shl
and
jmp
mov
mov
xor
pop
push
sub
mov
add
neg
or
sub
add
inc
neg
jmp
add
jmp
mov
jmp
push
pushl
jmp
mov
not
or
or
inc
or
jmp
mov
sub
pop
add
pop
add
jmp
mov
add
pushl
pop
jmp
mov
jmp
add
xchg
jmp
push
jmp
mov
neg
push
push
pop
add
jmp
push
mov
jmp
sub
sub
pop
jmp
mov
add
add
xchg
jmp
add
add
xchg
jmp
mov
sub
mov
mov
push
mov
add
neg
neg
add
sub
pop
push
mov
inc
jmp
xor
xor
xor
mov
mov
movzbw
push
pushf
jmp
push
pop
xor
pop
popl
jmp
add
sub
mov
jmp
pushl
pop
popl
pop
btc
pushf
jmp
add
add
add
pop
push
mov
sub
add
add
pop
xor
xor
xor
pop
sub
mov
jmp
sub
sub
jmp
sub
jmp
pop
dec
xor
and
pop
push
jmp
sub
pop
push
jmp
xor
xor
pop
sub
push
negl
jmp
and
not
jmp
push
mov
push
push
pop
add
jmp
xchg
pop
mov
push
jmp
mov
sub
jmp
popl
mov
jmp
pop
add
jmp
push
mov
push
mov
pushl
pop
add
mov
push
jmp
mov
push
mov
dec
dec
inc
sub
xor
add
pop
push
mov
add
mov
jmp
neg
shl
sub
mov
mov
add
sub
jmp
add
neg
jmp
xchg
mov
add
add
push
push
jmp
pushl
pop
add
mov
mov
push
mov
add
add
jmp
add
xchg
jmp
inc
shl
xor
jmp
mov
jmp
and
xor
shr
inc
sub
xor
jmp
mov
add
pop
push
mov
subl
add
push
mov
jmp
add
add
xor
xor
xor
mov
push
mov
push
jmp
lods
xor
add
sub
mov
jmp
add
xor
jmp
pop
jmp
pop
push
mov
jmp
push
jmp
add
sub
add
jmp
add
pop
jmp
mov
sub
mov
jmp
mov
jmp
pop
push
jmp
push
mov
jmp
pop
jmp
add
pop
add
xchg
mov
jmp
add
shr
push
mov
shr
sub
jmp
sub
pop
shl
add
and
sub
or
add
add
pop
jmp
add
popl
mov
mov
push
pushl
pop
add
pop
not
xor
xor
xor
xor
xor
xor
sub
mov
push
mov
push
mov
push
mov
add
add
xchg
pop
push
mov
push
notl
pop
push
mov
sub
sub
jmp
and
shr
shl
shl
push
mov
add
jmp
add
mov
add
jmp
add
jmp
mov
jmp
sub
sub
jmp
xor
sub
jmp
add
jmp
pop
add
sub
mov
mov
jmp
mov
pop
add
pop
push
jmp
pop
pop
movzbl
mov
sub
mov
push
jmp
sub
sub
pop
push
jmp
add
add
sub
pop
sub
jmp
mov
pop
mov
push
mov
add
add
xchg
pop
add
sub
sub
mov
add
push
mov
sub
pop
add
sub
mov
mov
add
pop
add
sub
jmp
add
pop
jmp
push
mov
push
jmp
mov
xchg
push
notl
pop
xchg
pop
push
mov
add
pushl
pop
add
xor
pop
jmp
add
sub
add
mov
jmp
mov
add
add
xchg
pop
jmp
add
sub
push
jmp
xor
pop
sub
jmp
push
push
jmp
add
push
mov
xor
jmp
shl
sub
push
jmp
mov
pop
mov
push
mov
add
add
xchg
pop
push
jmp
pop
add
sub
jmp
add
sub
push
jmp
mov
pop
sub
mov
add
sub
add
sub
mov
add
push
mov
push
push
mov
add
sub
neg
sub
sub
push
push
mov
sub
pop
mov
add
add
mov
add
sub
add
add
add
jmp
mov
or
pop
sub
jmp
sub
add
pushw
jmp
mov
jmp
pop
shr
jmp
mov
pop
jmp
mov
push
jmp
mov
push
pop
add
push
push
mov
mov
jmp
add
jmp
inc
jmp
push
mov
sub
pop
sub
push
mov
push
jmp
mov
sub
mov
jmp
mov
jmp
push
mov
mov
add
mov
add
push
push
pop
jmp
mov
add
jmp
mov
push
jmp
sub
jmp
mov
add
mov
add
jmp
push
jmp
push
mov
push
mov
add
push
mov
push
push
push
mov
mov
pop
jmp
xchg
pop
sub
add
jmp
mov
pop
add
pop
xchg
mov
mov
jmp
add
sub
xchg
pop
mov
sub
mov
push
mov
jmp
pop
add
jmp
add
mov
jmp
pushl
mov
add
popl
mov
bts
pushf
jmp
mov
add
push
jmp
xchg
pop
and
pushl
mov
jmp
push
mov
jmp
not
xor
xor
xor
add
shl
neg
jmp
mov
mov
add
add
mov
add
push
pushl
pop
jmp
pop
pop
sub
mov
sub
mov
push
pop
jmp
add
add
sub
jmp
sub
mov
jmp
and
pop
neg
add
add
pop
sub
add
mov
push
jmp
pop
add
add
xor
xor
xor
jmp
jmp
pop
mov
push
jmp
mov
and
or
jmp
pop
shr
sub
sub
add
add
pop
add
sub
mov
push
push
pop
add
add
xchg
pop
jmp
push
jmp
pop
mov
pop
jmp
push
mov
xor
pop
and
push
mov
sub
pop
add
push
push
jmp
push
jmp
lods
push
mov
shr
add
jmp
add
push
sub
jmp
pop
or
sub
sub
mov
jmp
add
pop
xchg
pop
jmp
shr
sub
dec
sub
push
mov
push
mov
mov
jmp
mov
jmp
xor
pop
mov
pop
push
mov
add
sub
sub
pop
jmp
add
add
jmp
mov
add
jmp
sub
jmp
neg
add
add
pop
sub
push
jmp
addl
add
subl
pop
popl
push
jmp
neg
xor
push
push
mov
sub
neg
sub
shl
jmp
sub
mov
push
mov
push
mov
add
xor
or
xor
add
pop
jmp
sub
push
mov
jmp
push
push
push
mov
jmp
pushl
pushl
pop
add
push
mov
push
jmp
push
pop
add
jmp
sub
jmp
push
mov
add
add
jmp
mov
push
mov
mov
jmp
add
push
jmp
push
push
mov
mov
push
mov
and
pop
shr
add
mov
mov
jmp
xor
push
mov
add
xor
pop
jmp
xchg
pop
not
jmp
popl
pop
pushl
mov
jmp
mov
push
mov
add
add
xchg
pop
push
mov
push
push
mov
add
jmp
sub
sub
sub
add
mov
add
mov
jmp
pop
pop
add
jmp
pop
jmp
mov
xor
inc
sub
add
pop
xor
xor
xor
pop
pushl
pop
push
push
mov
add
push
jmp
add
xor
jmp
mov
mov
jmp
mov
add
pop
jmp
push
mov
jmp
pop
mov
addl
pop
jmp
pop
jmp
mov
add
jmp
push
mov
mov
push
mov
jmp
push
mov
sub
pop
mov
add
push
mov
sub
mov
mov
xor
push
mov
mov
pop
pop
sub
add
sub
sub
push
mov
mov
xor
sub
jmp
mov
add
push
mov
mov
push
mov
mov
and
shr
add
add
jmp
shr
shr
push
mov
sub
xor
pop
mov
pop
mov
pop
sub
pop
dec
jmp
pop
push
pushl
pushl
pop
add
jmp
mov
push
mov
mov
push
mov
add
pop
push
mov
sub
add
jmp
pop
sub
jmp
push
popl
pop
push
jmp
xchg
pop
jmp
pop
jmp
mov
neg
sub
mov
jmp
sub
xchg
pop
jmp
mov
add
pop
push
push
push
mov
push
mov
jmp
add
push
mov
mov
shr
and
xor
sub
pop
pushl
mov
push
push
pop
add
jmp
push
sub
mov
addl
popl
addl
pop
push
mov
jmp
pop
mov
jmp
sub
shr
sub
dec
add
and
sub
jmp
pop
add
xor
mov
mov
add
jmp
mov
jmp
mov
inc
shr
sub
jmp
mov
add
push
jmp
add
push
mov
mov
xor
pop
add
add
jmp
add
pop
pop
push
mov
mov
add
neg
or
not
push
mov
jmp
xchg
and
shl
add
add
pop
pop
xor
xor
xor
mov
mov
pushl
pop
jmp
pop
push
mov
xor
pop
push
jmp
add
jmp
mov
pop
mov
add
jmp
add
sub
mov
mov
add
pop
sub
xor
xor
jmp
mov
add
sub
dec
sub
add
jmp
xor
not
and
xor
add
jmp
xor
push
mov
and
pop
jmp
not
sub
add
jmp
pop
add
jmp
and
or
jmp
sub
sub
add
mov
push
mov
add
add
xchg
pop
movzbl
jmp
mov
add
add
xchg
jmp
pop
add
inc
add
jmp
xchg
mov
shrw
pushf
jmp
xor
add
or
pop
jmp
not
push
mov
jmp
pop
and
pop
jmp
shl
dec
xor
add
pop
jmp
add
jmp
add
jmp
mov
push
mov
add
sub
xchg
pop
mov
push
jmp
mov
jmp
push
mov
mov
push
mov
mov
neg
sub
xchg
jmp
pushl
popf
pop
adc
pushf
jmp
sub
pop
jmp
mov
dec
sub
sub
jmp
pop
pop
add
add
push
push
mov
add
shr
shl
jmp
pop
xor
mov
add
push
jmp
push
mov
not
jmp
pop
xor
pushl
pop
add
subl
addl
add
push
mov
sub
pop
addl
jmp
pop
jmp
and
sub
xor
mov
pop
add
mov
add
add
xchg
mov
jmp
push
mov
jmp
xor
pop
push
mov
add
jmp
not
not
sub
mov
mov
inc
sub
add
sub
add
push
jmp
shr
jmp
negb
pushf
jmp
mov
mov
push
mov
mov
and
and
shr
not
xor
add
pop
sub
jmp
pop
sub
jmp
pop
popl
jmp
xor
xor
jmp
mov
jmp
add
mov
add
jmp
add
push
mov
push
mov
or
push
mov
and
pop
shr
add
or
jmp
mov
add
sub
mov
addl
jmp
xor
push
jmp
mov
jmp
push
sub
pop
shl
jmp
xchg
mov
mov
jmp
mov
jmp
mov
mov
xor
mov
add
xor
jmp
mov
push
pushf
jmp
pop
jmp
mov
mov
jmp
add
push
jmp
addl
subl
add
addl
subl
pop
mov
add
push
mov
sub
pop
jmp
xor
jmp
add
jmp
add
sub
jmp
pushl
pop
jmp
xchg
jmp
sub
mov
jmp
shl
push
mov
jmp
pop
pushl
jmp
mov
jmp
pop
add
jmp
mov
xor
pop
jmp
push
push
pop
add
jmp
xchg
pop
jmp
push
mov
mov
pop
mov
add
not
push
mov
mov
and
shr
push
mov
sub
pop
add
pop
sub
sub
jmp
lods
xor
push
mov
sub
jmp
mov
or
pushf
jmp
mov
jmp
pop
add
sub
xchg
mov
mov
push
jmp
mov
add
jmp
add
pop
xchg
pop
jmp
pop
pop
and
pop
shr
xor
push
push
jmp
mov
shl
push
mov
and
pop
jmp
pop
add
push
pushl
pop
popl
pop
jmp
push
mov
push
pop
push
mov
add
jmp
xchg
pop
push
pushl
mov
add
jmp
add
xor
jmp
mov
pop
jmp
jmp
mov
push
pop
mov
pop
add
pushl
pop
jmp
push
jmp
mov
pop
pushl
pop
add
jmp
pushl
mov
add
push
jmp
add
shl
sub
jmp
mov
mov
subl
add
addl
mov
push
jmp
push
jmp
add
add
jmp
pop
jmp
pushl
pop
add
add
mov
push
mov
add
push
mov
jmp
mov
add
sub
pushw
mov
mov
sub
pop
jmp
sub
mov
push
mov
mov
pop
dec
jmp
push
jmp
pop
push
mov
sub
pop
jmp
mov
add
sub
jmp
mov
sub
pop
sub
jmp
xor
add
mov
jmp
mov
push
mov
pushl
pop
push
push
pop
jmp
mov
add
pop
add
shl
xor
jmp
and
push
mov
add
pop
not
inc
jmp
popl
pop
add
push
pushl
mov
add
popl
mov
xor
pushf
jmp
mov
jmp
sub
add
pop
push
push
jmp
mov
jmp
add
sub
jmp
xor
mov
pop
sub
mov
mov
xor
pop
sub
jmp
pop
add
push
mov
mov
push
mov
mov
push
jmp
mov
mov
push
jmp
add
pop
push
jmp
sub
or
or
push
mov
jmp
add
jmp
mov
jmp
pop
addl
add
jmp
mov
push
mov
mov
mov
add
add
jmp
not
push
mov
mov
dec
shr
push
jmp
mov
sub
pop
xor
jmp
push
mov
sub
pop
shr
jmp
dec
jmp
push
mov
add
jmp
push
mov
mov
or
sub
sub
add
push
push
mov
jmp
push
mov
jmp
mov
jmp
mov
add
mov
mov
add
push
jmp
sub
add
pop
add
add
jmp
pushl
jmp
pushl
jmp
pushl
jmp
neg
jmp
inc
jmp
mov
add
jmp
shl
sub
add
pop
sub
mov
jmp
add
pop
xchg
mov
jmp
mov
jmp
xor
mov
mov
push
mov
jmp
mov
push
mov
push
jmp
or
inc
dec
jmp
mov
push
pop
push
jmp
add
mov
add
push
mov
xor
sub
jmp
inc
sub
jmp
sub
jmp
pop
shl
not
add
xor
xor
xor
jmp
mov
push
mov
add
jmp
sub
mov
mov
jmp
push
jmp
pop
pushl
pop
jmp
add
sub
xchg
pop
jmp
mov
pop
xor
not
dec
jmp
mov
jmp
mov
add
pop
add
xchg
mov
jmp
lods
jmp
add
xchg
mov
shl
jmp
sub
sub
jmp
add
sub
jmp
sub
jmp
add
pop
add
jmp
push
mov
push
mov
add
add
xchg
pop
push
mov
push
mov
add
pop
and
xor
jmp
sub
add
pop
xor
pushl
mov
add
add
xor
push
jmp
pushl
pop
add
dec
add
mov
jmp
add
jmp
sub
pop
jmp
push
decl
pop
jmp
not
jmp
push
sub
jmp
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
add
sub
mov
jmp
push
jmp
pop
add
xchg
pop
mov
push
jmp
push
mov
push
mov
mov
jmp
pop
sub
pop
jmp
mov
jmp
sub
add
add
push
mov
mov
jmp
pop
neg
push
mov
xor
pop
sub
mov
pop
jmp
add
dec
inc
sub
jmp
mov
mov
push
push
mov
sub
mov
pop
add
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
mov
add
push
mov
jmp
sub
pop
add
sub
mov
mov
add
pop
pop
push
jmp
xchg
pop
push
jmp
xchg
mov
mov
push
push
mov
xor
pop
pop
push
mov
shr
sub
shl
jmp
mov
or
inc
push
mov
jmp
sub
sub
jmp
and
inc
push
mov
or
jmp
mov
jmp
pop
and
shl
not
jmp
xchg
mov
mov
push
mov
mov
add
mov
jmp
xor
push
mov
neg
not
xor
xor
xor
pop
jmp
addl
jmp
xchg
pop
mov
push
jmp
shl
push
mov
sub
jmp
push
mov
jmp
add
jmp
mov
pop
sub
jmp
push
mov
push
mov
mov
dec
shl
and
sub
not
add
mov
pop
or
and
xor
jmp
add
sub
xchg
mov
jmp
add
xor
pushl
mov
add
push
mov
add
add
jmp
xor
not
add
jmp
lods
xor
push
mov
jmp
shr
push
mov
jmp
pushl
pop
push
mov
add
push
mov
sub
add
add
jmp
xor
xor
pop
jmp
push
jmp
add
jmp
push
push
pop
add
sub
xchg
mov
mov
mov
push
push
mov
push
jmp
or
xor
push
decl
mov
push
mov
add
add
xchg
mov
sub
push
mov
sub
sub
add
mov
jmp
push
push
mov
add
dec
shl
push
mov
jmp
push
mov
push
mov
neg
shr
and
jmp
add
xchg
pop
push
mov
jmp
lods
push
mov
neg
push
mov
push
mov
jmp
mov
push
jmp
sub
push
mov
add
pop
jmp
pop
add
add
xor
jmp
mov
add
jmp
pop
add
add
xchg
pop
popl
mov
push
push
pop
push
push
sub
mov
mov
mov
xor
pop
sub
mov
mov
add
jmp
pop
mov
push
push
pop
add
push
mov
sub
sub
not
sub
add
pop
xchg
pop
push
mov
jmp
mov
jmp
push
mov
push
mov
sub
shl
jmp
xor
pop
add
pushl
pop
add
push
jmp
mov
pop
jmp
sub
pop
xor
jmp
push
mov
jmp
inc
sub
jmp
lods
add
add
push
mov
sub
mov
mov
jmp
mov
jmp
sub
jmp
push
jmp
and
shr
neg
dec
sub
sub
pop
add
jmp
xor
mov
jmp
shr
shr
add
xor
pop
sub
mov
jmp
add
jmp
sub
pop
add
xchg
pop
jmp
sub
pop
xchg
pop
jmp
addb
addb
jmp
add
xor
xor
xor
jmp
mov
push
mov
add
push
mov
add
sub
sub
jmp
neg
xor
and
pop
sub
add
jmp
mov
add
add
jmp
push
mov
add
neg
and
sub
mov
pop
shr
dec
and
push
mov
xor
jmp
pop
push
mov
inc
neg
xor
jmp
pushl
jmp
and
pushl
pop
jmp
mov
pop
mov
sub
pushl
pop
add
add
mov
jmp
mov
mov
add
mov
add
jmp
xor
jmp
add
add
jmp
pop
jmp
pop
push
push
pop
add
push
mov
push
mov
not
jmp
and
xor
jmp
mov
dec
sub
add
sub
mov
mov
jmp
pushl
pop
add
jmp
xor
jmp
addl
pop
shr
sub
neg
push
mov
xor
pop
sub
add
add
jmp
push
mov
jmp
mov
push
mov
add
add
xchg
pop
add
push
pushl
mov
push
push
pop
add
add
xchg
pop
popl
pop
mov
jmp
mov
pushl
pop
push
jmp
mov
addl
popl
addl
mov
add
push
mov
push
push
pop
push
mov
and
pop
shl
xor
mov
pop
jmp
add
pop
add
jmp
mov
mov
add
add
sub
mov
push
push
mov
add
sub
xchg
mov
mov
addl
mov
add
push
mov
push
mov
add
pop
add
jmp
add
sub
add
jmp
sub
jmp
mov
mov
sub
jmp
xchg
pop
add
xor
mov
mov
add
add
jmp
push
jmp
mov
jmp
mov
push
push
pop
push
mov
mov
sub
add
add
mov
add
push
mov
mov
add
jmp
mov
pop
xor
jmp
mov
add
sub
sub
pop
xchg
mov
mov
jmp
xor
add
pop
push
jmp
mov
jmp
add
push
mov
mov
push
jmp
mov
sub
sub
add
pop
jmp
inc
jmp
mov
jmp
xor
push
push
pop
jmp
add
add
neg
xor
add
sub
mov
add
mov
pop
inc
jmp
neg
add
add
sub
pop
neg
jmp
push
addl
pop
sub
mov
add
add
pop
and
mov
add
jmp
add
sub
xchg
pop
mov
mov
jmp
pop
add
push
mov
jmp
add
mov
pop
or
shl
xor
push
mov
jmp
shr
jmp
add
jmp
xor
not
push
jmp
mov
add
sub
jmp
sub
mov
mov
sub
jmp
pushl
pushl
pop
sub
mov
push
jmp
mov
sub
pop
sub
jmp
sub
mov
jmp
and
neg
push
jmp
push
mov
shr
sub
xor
jmp
push
jmp
sub
pop
add
add
sub
pop
jmp
mov
jmp
mov
push
pop
add
jmp
add
add
mov
add
jmp
mov
jmp
xchg
mov
imul
push
pushf
jmp
mov
sub
jmp
add
add
xchg
pop
push
push
jmp
shr
or
xor
xor
sub
add
jmp
mov
shl
neg
shr
add
sub
sub
add
add
sub
add
pop
sub
add
add
sub
add
mov
push
push
mov
add
add
add
jmp
mov
xor
jmp
lods
push
jmp
pop
push
mov
shr
jmp
push
push
mov
jmp
push
mov
mov
jmp
pop
add
xorl
pop
pop
xor
push
jmp
xchg
not
xchg
add
push
mov
mov
push
mov
xor
pop
sub
push
mov
jmp
sub
pop
jmp
xor
xor
xor
mov
push
mov
mov
push
push
mov
sub
xor
shl
not
sub
jmp
mov
add
jmp
sub
pop
push
jmp
add
push
pushl
jmp
and
pop
xor
sub
add
push
mov
add
pop
jmp
mov
push
mov
jmp
push
mov
jmp
pop
mov
notl
mov
add
push
jmp
shl
xor
or
sub
push
push
pop
jmp
add
push
notl
pop
sub
mov
sub
jmp
mov
pop
jmp
add
sub
pop
sub
xchg
xchg
not
xor
xor
xor
jmp
xchg
pop
mov
mov
push
mov
neg
inc
dec
or
xor
add
pop
not
push
jmp
push
mov
push
mov
shr
jmp
push
mov
mov
mov
push
mov
jmp
xor
mov
push
push
mov
jmp
mov
sub
pop
pop
push
mov
jmp
pop
popl
jmp
mov
neg
mov
mov
add
push
mov
inc
jmp
not
push
mov
push
push
push
jmp
mov
jmp
mov
mov
pop
sub
mov
add
sub
push
push
mov
mov
sub
pop
jmp
push
jmp
xor
xor
jmp
add
add
xchg
pop
xor
jmp
neg
not
jmp
pop
push
mov
sub
pop
sub
jmp
or
jmp
mov
jmp
push
push
mov
dec
xor
jmp
xor
pop
pushl
jmp
push
jmp
pop
xor
add
jmp
xor
neg
dec
neg
jmp
mov
push
pushf
jmp
and
pop
and
jmp
add
push
mov
push
mov
jmp
push
mov
add
pop
shl
add
jmp
xchg
mov
jmp
mov
sub
pop
add
jmp
pop
sub
dec
and
push
push
mov
mov
xor
mov
jmp
mov
push
push
mov
add
push
jmp
push
jmp
mov
add
add
jmp
add
pop
pop
jmp
add
pop
jmp
pop
push
mov
add
add
xchg
jmp
mov
push
mov
sub
pop
sub
jmp
sub
sub
mov
mov
sub
dec
jmp
sub
mov
pop
add
jmp
pop
push
mov
push
mov
sub
jmp
mov
sub
mov
push
pop
jmp
sub
pop
add
sub
sub
add
sub
pushl
jmp
mov
jmp
push
popl
addl
pop
jmp
pop
jmp
xchg
add
sub
xor
xor
xor
not
xchg
add
sub
mov
pop
inc
add
add
pop
jmp
add
xchg
pop
shr
jmp
jmp
pop
pop
and
mov
push
mov
add
push
mov
jmp
sub
add
and
mov
add
shl
xor
sub
jmp
pop
jmp
push
mov
jmp
mov
push
mov
add
pop
pop
add
push
mov
mov
jmp
add
add
sub
jmp
sub
add
push
mov
jmp
mov
add
push
mov
jmp
mov
add
add
xchg
pop
add
sub
jmp
push
mov
jmp
push
pop
pop
pop
sub
jmp
pop
push
mov
add
pop
xchg
jmp
mov
mov
jmp
push
push
jmp
xor
jmp
pop
sub
xor
add
jmp
add
add
jmp
add
sub
jmp
xor
pop
xor
dec
dec
push
mov
xor
jmp
mov
add
xor
xor
jmp
mul
jmp
push
push
mov
add
add
jmp
add
push
mov
not
not
sub
xor
jmp
push
mov
add
sub
push
mov
and
add
or
shl
xor
sub
pop
jmp
push
mov
mov
sub
add
add
pushl
pop
jmp
push
mov
jmp
dec
jmp
push
mov
sub
pop
xchg
pop
mov
mov
sub
jmp
sub
add
add
mov
add
sub
push
mov
add
shl
shr
sub
sub
add
add
pop
push
mov
sub
add
add
pop
add
jmp
pop
mov
mov
xor
and
and
push
push
jmp
push
mov
add
sub
xchg
pop
jmp
push
mov
mov
shl
sub
sub
pop
push
jmp
add
push
mov
push
push
push
pop
not
jmp
push
jmp
mov
sub
pop
xor
xor
xor
pop
mov
popl
jmp
mov
mov
push
mov
mov
jmp
pop
push
mov
push
mov
push
mov
not
xor
sub
or
pop
jmp
sub
add
push
push
jmp
sub
xor
jmp
push
push
jmp
add
sub
pop
sub
jmp
pop
not
neg
jmp
or
jmp
not
sub
add
pop
jmp
pushl
pushl
pop
jmp
shr
inc
add
jmp
sub
jmp
add
sub
sub
mov
push
mov
add
add
xchg
pop
mov
pop
jmp
mov
push
mov
jmp
add
push
mov
jmp
pop
jmp
mov
jmp
push
mov
mov
add
pop
push
mov
push
jmp
add
jmp
mov
sub
jmp
push
mov
shl
jmp
sub
jmp
pop
sub
pushl
pop
add
sub
mov
push
mov
add
jmp
push
jmp
push
pushl
pop
push
mov
push
mov
shl
shr
neg
sub
add
pop
push
mov
add
pop
xchg
pop
push
mov
shr
shr
dec
jmp
xor
add
pop
sub
xchg
pop
mov
mov
mov
pop
pop
push
mov
push
jmp
push
mov
mov
push
mov
sub
add
jmp
push
push
push
pop
sub
dec
neg
sub
jmp
pushl
pop
push
push
pop
push
jmp
mov
jmp
pop
xchg
not
xor
xor
xor
sub
mov
mov
push
mov
sub
xchg
jmp
mov
mov
pop
jmp
sub
mov
jmp
mov
xor
jmp
or
pop
xor
add
pop
pushw
jmp
pop
xor
xor
shl
sub
add
sub
add
jmp
popl
jmp
push
mov
sub
jmp
not
xchg
jmp
pop
push
mov
push
mov
add
pop
push
jmp
mov
mov
sub
sub
add
jmp
pushl
popf
pop
adc
pushf
jmp
mov
pop
shr
sub
shl
push
jmp
sub
xchg
mov
jmp
mov
add
add
sub
mov
add
xchg
pop
push
mov
push
mov
add
jmp
add
sub
pop
and
pushl
jmp
jmp
sub
jmp
add
sub
jmp
pop
push
mov
or
pop
sub
xor
push
mov
mov
jmp
xchg
mov
mov
push
jmp
pop
add
pop
push
pushl
jmp
push
mov
xor
mov
xor
pop
jmp
push
mov
add
pop
sub
add
add
pop
xor
add
add
push
mov
shr
neg
sub
jmp
sub
mov
jmp
mov
add
jmp
mov
mov
jmp
push
mov
mov
add
push
jmp
mov
pop
neg
sub
mov
jmp
add
jmp
pushl
mov
jmp
sub
jmp
sub
jmp
mov
neg
jmp
mov
add
add
push
mov
pushl
mov
push
mov
sub
jmp
add
add
sub
mov
jmp
add
jmp
pop
xchg
pop
add
popl
mov
jmp
add
sub
jmp
add
push
mov
neg
not
add
push
mov
not
inc
sub
add
xor
pop
sub
pop
pop
xchg
jmp
pop
popl
jmp
mov
jmp
add
mov
jmp
popl
mov
movswl
jmp
add
xor
xor
xor
xor
jmp
add
jmp
pop
add
add
sub
pop
xchg
pop
push
mov
push
push
jmp
xor
mov
add
sub
add
add
pop
sub
xchg
pop
mov
subl
jmp
inc
add
neg
sub
jmp
push
mov
pushl
jmp
pushl
jmp
mov
jmp
pushl
pushl
pop
push
push
pop
push
jmp
pop
jmp
mov
push
jmp
pop
add
add
push
jmp
push
mov
sub
pop
add
add
pop
push
mov
sub
add
add
pop
jmp
push
push
pop
not
push
mov
not
push
mov
inc
or
jmp
push
push
mov
jmp
lods
jmp
push
mov
add
jmp
mov
mov
jmp
xchg
pop
mov
jmp
add
sub
mov
mov
jmp
sub
add
add
sub
jmp
mov
shr
xor
sub
add
jmp
add
add
sub
sub
pop
push
mov
shr
dec
jmp
or
shl
jmp
addl
add
subl
jmp
mov
push
mov
add
not
jmp
xchg
pop
jmp
push
jmp
add
jmp
add
add
jmp
mov
jmp
sub
push
mov
sub
pop
sub
jmp
push
mov
neg
add
shl
jmp
push
push
push
pop
inc
not
jmp
mov
jmp
mov
jmp
sub
sub
pop
jmp
mov
add
add
jmp
xchg
jmp
add
push
jmp
sub
add
sub
add
add
sub
add
jmp
pop
jmp
mov
mov
sub
pop
jmp
sub
jmp
addl
pop
sub
jmp
mov
sub
mov
add
jmp
pop
jmp
mov
push
mov
add
add
xchg
jmp
mov
push
mov
xor
jmp
push
mov
sub
xor
jmp
xor
mov
or
pushf
jmp
add
mov
add
jmp
xchg
pushl
mov
add
push
jmp
sub
xor
pop
add
jmp
push
pop
jmp
push
mov
mov
mov
push
mov
add
sub
xchg
jmp
pop
jmp
xor
xor
pop
mov
push
jmp
shr
shl
jmp
sub
add
pushl
pop
add
shl
push
mov
mov
add
jmp
add
add
jmp
sub
add
add
mov
add
push
mov
sub
jmp
mov
or
pop
inc
jmp
mov
push
jmp
mov
jmp
add
push
mov
sub
sub
jmp
mul
push
push
jmp
push
pushl
mov
push
mov
add
add
sub
jmp
pop
movsbw
pushw
mov
jmp
add
mov
add
sub
jmp
pop
push
mov
sub
jmp
pushl
pop
add
push
jmp
sub
mov
jmp
pop
jmp
add
jmp
push
mov
add
jmp
mov
jmp
popl
pop
jmp
pop
add
sub
push
sub
jmp
push
mov
sub
pop
xor
jmp
pop
or
je
pushl
push
mov
add
push
mov
mov
sub
sub
add
jmp
push
push
pop
jmp
dec
sub
add
add
sub
jmp
mov
jmp
sub
add
add
pop
xchg
pop
movzbl
push
mov
jmp
mov
mov
dec
or
sub
jmp
add
add
pop
add
jmp
sub
pop
add
add
jmp
pop
jmp
pop
inc
xor
push
mov
not
jmp
add
pop
xchg
pop
jmp
push
mov
jmp
sub
xchg
pop
jmp
mov
mov
push
mov
jmp
sub
jmp
and
pop
or
je
pushl
jmp
xor
mov
jmp
sub
add
sub
jmp
xchg
pop
mov
push
pop
sub
mov
push
jmp
mov
push
jmp
pushl
mov
jmp
add
add
sub
pop
push
jmp
pop
jmp
subl
sub
jmp
popl
mov
push
jmp
xchg
pop
xor
sub
jmp
mov
pop
addl
addl
add
push
jmp
pop
xchg
mov
push
mov
jmp
mov
add
sub
xchg
mov
mov
movzbw
push
pushf
jmp
sub
sub
pop
pop
xor
jmp
sub
pop
sub
push
push
mov
push
mov
add
push
mov
add
pop
jmp
add
xor
jmp
mov
jmp
mov
push
mov
mov
add
pop
sub
push
pushl
mov
add
popl
pop
mov
push
mov
jmp
add
xor
xor
xor
pop
push
jmp
mov
jmp
push
push
mov
addl
pop
jmp
sub
pop
add
add
jmp
xor
jmp
sub
add
add
sub
add
sub
jmp
sub
xchg
pop
mov
pushl
pop
popl
mov
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
add
xor
xor
xor
jmp
mov
not
jmp
subl
jmp
sub
add
jmp
push
mov
mov
jmp
mov
push
push
push
pop
add
add
mov
mov
add
add
pop
pushl
pop
add
push
mov
jmp
mov
add
addl
pop
jmp
add
add
sub
jmp
not
jmp
push
jmp
mov
jmp
and
and
jmp
add
sub
sub
jmp
push
jmp
add
pop
sub
push
subl
pop
add
pop
jmp
pushl
pushl
jmp
shr
add
add
push
jmp
add
push
mov
jmp
popl
addl
mov
add
jmp
mov
not
xor
xor
sub
pop
sub
add
add
jmp
pop
add
add
xor
xor
xor
jmp
mov
dec
jmp
dec
not
and
jmp
pop
push
mov
shl
xor
push
mov
add
jmp
mov
jmp
push
mov
jmp
xor
pop
xor
pop
jmp
push
mov
mov
mov
pushl
pop
add
push
jmp
sub
pop
sub
add
push
mov
mov
jmp
mov
jmp
sub
sub
jmp
push
push
pop
xor
add
jmp
shl
push
mov
xor
pop
jmp
sub
push
mov
add
pop
push
mov
sub
sub
add
pop
pushl
pop
add
mov
add
push
jmp
pop
jmp
xor
xor
xor
mov
incb
pushf
jmp
sub
xor
jmp
pop
push
mov
and
inc
shl
xor
jmp
mov
jmp
sub
sub
push
push
pop
add
pop
add
jmp
pop
add
add
pop
pushw
jmp
pop
sub
pop
push
jmp
sub
jmp
pop
popl
pop
pushl
mov
push
mov
add
jmp
pop
push
mov
jmp
add
mov
push
push
pop
jmp
mov
add
push
mov
add
pop
xor
jmp
mov
sub
pop
xchg
jmp
xor
pop
mov
mov
add
and
add
mov
pop
mov
pop
jmp
mov
push
sub
mov
push
pushl
pop
add
jmp
mov
push
jmp
popl
jmp
sub
pop
xchg
pop
mov
push
sub
mov
mov
mov
pop
and
jmp
push
jmp
pop
xor
jmp
mov
jmp
pushl
mov
jmp
sub
push
mov
add
jmp
mov
add
add
push
mov
pushl
jmp
push
jmp
pop
jmp
push
mov
jmp
add
jmp
mov
push
mov
push
incl
pop
shr
shr
and
jmp
sub
add
jmp
pushl
pushl
jmp
mov
add
push
mov
pushl
pop
popl
mov
bts
pushf
jmp
or
xor
add
pop
xchg
pop
push
jmp
xchg
pop
jmp
push
mov
add
jmp
pop
add
mov
add
push
push
jmp
push
mov
add
pop
jmp
xor
sub
pop
push
mov
not
jmp
push
pop
jmp
lods
push
mov
mov
jmp
sub
jmp
sub
inc
xor
push
mov
xor
pop
sub
pop
jmp
xor
jmp
pop
push
mov
sub
sub
add
add
sub
push
push
push
push
pop
xchg
push
notl
pop
xchg
not
add
jmp
push
mov
xor
pop
xor
or
pop
jmp
pushw
mov
mov
and
jmp
add
push
jmp
pop
xor
xor
xor
mov
jmp
xchg
pop
pushl
jmp
push
mov
jmp
add
sub
mov
push
jmp
pop
mov
pop
or
pop
jmp
push
mov
sub
mov
mov
sub
add
add
mov
add
add
xchg
pop
add
push
mov
jmp
pop
add
jmp
push
pushl
pushl
jmp
mov
jmp
popw
jmp
pop
pop
sub
pop
movzbl
push
mov
jmp
sub
xchg
mov
mov
push
pop
push
jmp
inc
add
xor
mov
add
jmp
pushl
mov
add
push
mov
push
mov
jmp
and
pop
jmp
push
jmp
mov
push
mov
xor
mov
pop
add
add
sub
pop
push
mov
push
mov
push
xorl
pop
xor
pop
push
push
push
jmp
add
jmp
lods
sub
mov
jmp
mov
add
push
mov
sub
pop
pushl
pop
push
mov
push
pop
add
add
xchg
mov
push
mov
mov
sub
mov
mov
jmp
add
jmp
pop
jmp
mov
mov
push
mov
add
pushl
pop
jmp
push
jmp
pop
push
mov
mov
push
mov
add
jmp
push
jmp
mov
mov
sub
sub
jmp
mov
add
push
mov
jmp
add
jmp
mov
add
mov
add
xor
xor
xor
pop
idiv
pushw
jmp
pop
jmp
pop
or
sub
jmp
mov
jmp
pop
pop
add
add
jmp
push
mov
jmp
mov
add
jmp
pop
sub
mov
push
mov
push
jmp
pop
sub
jmp
pushl
mov
add
popl
mov
jmp
push
mov
not
sub
shl
jmp
mov
jmp
push
mov
sub
jmp
add
push
jmp
sub
xor
jmp
add
push
mov
jmp
push
mov
add
jmp
mov
jmp
sub
sub
pushl
pushl
pop
add
add
jmp
push
addl
pop
jmp
mov
push
mov
add
add
xchg
pop
xchg
pop
push
push
pop
jmp
popl
pop
imul
push
pushf
jmp
push
mov
add
neg
shr
jmp
sub
pop
push
mov
mov
pop
pop
jmp
mov
jmp
add
jmp
lods
cmpl
je
push
jmp
add
add
add
sub
sub
jmp
mov
add
pop
add
mov
push
mov
add
add
xchg
pop
jmp
xor
mov
pop
xor
sub
xchg
add
jmp
mov
shr
and
jmp
add
mov
push
mov
push
mov
not
dec
and
sub
add
pop
add
xchg
pop
push
mov
add
pop
xchg
mov
pushl
jmp
push
mov
add
jmp
pop
shr
jmp
pop
add
sub
add
pop
push
mov
add
jmp
xchg
jmp
mov
add
pop
jmp
mov
addl
popl
addl
mov
add
jmp
mov
add
neg
sub
xor
pop
not
push
mov
jmp
push
push
mov
jmp
add
add
pop
xchg
pop
push
mov
mov
push
jmp
mov
shl
jmp
pop
sub
mov
push
mov
push
mov
jmp
mov
push
mov
mov
add
sub
push
mov
mov
shr
and
push
mov
sub
pop
push
mov
push
jmp
pop
xor
pop
or
shr
shl
shl
push
mov
jmp
push
pushl
pushl
pop
add
push
mov
sub
mov
addl
jmp
push
mov
sub
jmp
add
sub
sub
mov
jmp
sub
push
mov
push
mov
xor
add
mov
jmp
push
jmp
pop
add
pop
pop
push
mov
shl
push
mov
jmp
mov
jmp
add
pop
jmp
sub
jmp
mov
jmp
add
addl
mov
push
mov
add
jmp
mov
mov
sub
pop
push
jmp
add
pop
xor
xor
xor
pop
decl
pushf
jmp
push
jmp
sub
xchg
mov
mov
mov
mov
mov
push
push
jmp
xor
xor
mov
jmp
add
mov
add
sub
xor
xor
xor
pop
mov
push
pushl
jmp
pop
push
jmp
push
push
push
pop
add
jmp
sub
add
add
jmp
push
mov
inc
push
mov
jmp
mov
push
pop
pop
mov
push
jmp
mov
sub
mov
jmp
add
xor
jmp
xor
movzbw
pushw
mov
jmp
mov
addl
mov
jmp
mov
add
jmp
add
jmp
sub
xor
inc
shl
add
jmp
pop
jmp
mov
push
mov
push
jmp
addl
pop
jmp
add
add
jmp
mov
push
mov
add
mov
jmp
xor
jmp
and
pushl
pop
add
jmp
pop
push
jmp
add
add
mov
add
push
jmp
sub
pop
sub
pop
jmp
pushl
jmp
mov
sub
pop
shr
sub
jmp
push
mov
mov
add
jmp
mov
pop
and
pop
push
mov
or
pushl
pop
push
push
pop
add
push
mov
dec
add
jmp
add
jmp
push
mov
xor
neg
add
add
pop
sub
mov
mov
push
mov
sub
pop
add
add
mov
add
jmp
pop
push
jmp
mov
push
mov
neg
neg
xor
add
add
push
jmp
add
add
sub
pushl
pop
sub
jmp
mov
mov
sub
mov
push
mov
add
push
jmp
add
pop
sub
sub
add
pushl
jmp
add
push
jmp
mov
push
mov
mov
jmp
push
mov
xor
mov
add
jmp
mov
add
sub
mov
jmp
add
pop
jmp
xor
xor
xor
mov
mov
push
mov
mov
push
mov
xor
pop
mov
jmp
mov
jmp
mov
mov
push
mov
xor
pushl
jmp
push
jmp
push
mov
jmp
mov
mov
or
pop
shr
add
push
xorl
pop
xor
jmp
xor
sub
add
jmp
xor
add
xor
add
pop
add
xchg
pop
push
mov
jmp
xor
xor
pop
sub
mov
sub
mov
jmp
xor
inc
sub
push
jmp
sub
push
mov
dec
add
sub
pop
add
pop
push
jmp
push
mov
mov
jmp
add
shr
shr
sub
mov
pop
jmp
pop
sub
pop
sub
mov
mov
push
mov
jmp
add
xchg
pop
xchg
mov
mov
jmp
pop
push
jmp
sub
jmp
add
xchg
pop
add
jmp
push
jmp
jmp
inc
and
add
jmp
mov
dec
add
sub
add
add
sub
pop
add
pop
jmp
mov
sub
mov
push
pop
push
push
push
jmp
pop
push
push
mov
jmp
mov
addl
mov
jmp
push
jmp
sub
pop
sub
pop
sub
sub
jmp
push
mov
dec
push
jmp
pushl
pop
push
push
push
popl
push
mov
jmp
xchg
jmp
mov
sub
jmp
xor
neg
push
mov
dec
or
not
push
mov
sub
pop
add
jmp
and
pop
shr
xor
xor
xor
jmp
inc
not
inc
add
add
jmp
pop
sub
pop
xchg
pop
jmp
inc
jmp
pop
sub
mov
pop
jmp
push
mov
mov
pop
jmp
add
or
not
add
not
and
shr
push
push
mov
xor
jmp
pop
jmp
sub
mov
push
mov
xor
shl
jmp
push
mov
add
sub
jmp
xor
mov
pop
add
mov
add
xor
add
pop
push
mov
push
mov
sub
push
mov
or
pop
jmp
add
add
xchg
jmp
pushl
jmp
mov
jmp
mov
jmp
push
jmp
pop
dec
shl
push
mov
jmp
mov
mov
jmp
mov
add
jmp
and
mov
push
mov
push
mov
sub
push
jmp
sub
pushl
jmp
sub
mov
pop
add
pushl
jmp
xor
xor
jmp
mov
mov
and
add
jmp
xchg
pop
mov
mov
sub
mov
push
push
mov
jmp
pop
and
push
notl
pop
push
notl
mov
add
push
jmp
mov
xorl
pushl
pop
sub
jmp
mov
add
add
xchg
pop
xor
xor
xor
pop
jmp
or
jmp
push
mov
add
sub
pop
push
jmp
add
pop
pushl
pop
add
push
mov
push
mov
neg
add
mov
pop
xchg
inc
xchg
or
add
push
mov
jmp
push
mov
jmp
add
push
jmp
or
jmp
lods
add
push
mov
shr
xor
xor
xor
not
jmp
push
mov
jmp
pop
jmp
push
mov
add
add
xchg
pop
popl
mov
add
pushf
jmp
push
negl
pop
add
mov
mov
add
add
jmp
sub
xor
sub
inc
xor
mov
pop
push
mov
add
pop
sub
sub
pop
push
jmp
mov
jmp
add
pop
push
mov
push
pop
sub
pop
xchg
mov
mov
jmp
push
jmp
pop
push
jmp
xor
add
jmp
add
push
mov
sub
inc
shr
and
jmp
push
mov
mov
pop
mov
pop
pop
xor
mov
add
shl
jmp
pop
neg
dec
push
mov
sub
pop
sub
add
push
mov
add
pop
jmp
add
add
xchg
pop
and
pop
or
shl
push
jmp
pop
push
mov
mov
and
jmp
push
jmp
mov
mov
jmp
mov
and
neg
jmp
add
sub
mov
add
jmp
pop
jmp
push
mov
push
mov
mov
shr
neg
add
push
mov
jmp
add
pop
push
mov
neg
neg
xor
add
sub
jmp
xchg
pop
push
jmp
shl
dec
push
jmp
sub
xchg
pop
mov
jmp
mov
add
jmp
pop
push
mov
sub
sub
add
pop
jmp
xor
pop
jmp
push
mov
xor
sub
jmp
xchg
pop
mov
jmp
mov
jmp
pop
add
xor
xor
jmp
sub
jmp
mov
addl
jmp
add
xchg
pop
sub
xor
jmp
add
push
mov
sub
mov
add
xchg
pop
mov
push
sub
jmp
add
add
xchg
pop
popl
jmp
mov
jmp
shl
jmp
push
push
jmp
sub
jmp
pop
and
push
jmp
and
push
mov
jmp
mov
mov
add
sub
xor
xor
jmp
mov
mov
sub
mov
mov
jmp
push
push
mov
sub
mov
pop
pushl
pop
push
mov
push
mov
not
neg
sub
add
jmp
mov
and
pop
or
jmp
or
jmp
push
mov
jmp
notl
jmp
sub
mov
push
pop
jmp
push
mov
sub
mov
add
add
push
mov
sub
pop
add
mov
add
add
xor
jmp
pop
sub
pop
push
jmp
xor
xor
pop
mov
pushl
pop
push
mov
mov
add
jmp
push
mov
shr
or
jmp
push
push
pop
add
sub
xor
mov
pop
add
sub
sub
jmp
push
xchg
not
xchg
pop
xchg
xor
inc
push
jmp
push
jmp
add
sub
sub
mov
push
pop
add
xorl
pop
mov
add
pushl
pop
jmp
sub
push
mov
xor
push
mov
jmp
lods
add
sub
add
add
sub
add
jmp
add
sub
pop
shr
pushw
mov
mov
jmp
mov
mov
jmp
push
pop
push
push
jmp
push
mov
jmp
push
addl
pushl
pop
push
jmp
not
not
sub
add
pop
push
mov
mov
jmp
xor
mov
mov
add
add
add
jmp
push
mov
jmp
mov
sub
mov
addl
mov
add
push
mov
add
jmp
pop
neg
add
jmp
mov
add
sub
jmp
sub
push
mov
sub
pop
pop
jmp
movzbw
push
pushf
jmp
push
jmp
mov
push
pop
sub
mov
mov
add
pop
add
xchg
jmp
pushl
pushl
pop
sub
mov
jmp
pop
push
mov
inc
push
push
mov
jmp
push
jmp
mov
push
mov
mov
sub
mov
push
push
mov
or
not
xor
not
add
mov
pop
push
mov
add
and
pop
inc
or
not
add
add
mov
pushl
pop
jmp
mov
mov
add
sub
mov
push
mov
mov
jmp
sub
mov
add
add
jmp
mov
add
popl
jmp
push
notl
pop
jmp
mov
or
sub
jmp
xchg
jmp
mov
jmp
mov
add
pop
jmp
pop
push
mov
add
add
jmp
shl
sub
mov
mov
push
jmp
add
sub
sub
pop
inc
sub
jmp
push
jmp
mov
sub
pop
xchg
pop
mov
mov
add
pop
xchg
pop
jmp
jmp
mov
sub
mov
jmp
push
mov
mov
xor
mov
add
sub
pop
and
neg
jmp
add
xor
jmp
push
mov
jmp
pop
xchg
pop
mov
push
mov
add
mov
mov
push
jmp
sub
xchg
pop
jmp
push
mov
jmp
sub
pop
xor
xor
jmp
pushl
mov
push
push
mov
push
mov
add
pop
jmp
dec
shl
add
jmp
pop
add
xor
xor
xor
jmp
add
jmp
mov
add
push
mov
neg
push
push
pop
inc
add
jmp
xor
xor
jmp
mov
sub
mov
jmp
add
sub
mov
push
jmp
pop
popl
mov
and
pushf
jmp
mov
jmp
add
shr
shl
or
dec
sub
add
mov
add
push
jmp
pop
jmp
mov
mov
add
add
pop
xor
xor
xor
mov
imul
movzbw
push
mov
push
jmp
push
mov
jmp
jmp
push
mov
push
pop
dec
sub
mov
jmp
add
jmp
add
jmp
add
pop
push
push
mov
mov
xor
pop
jmp
lods
push
push
jmp
jmp
mov
jmp
mov
push
mov
mov
pop
not
jmp
mov
add
jmp
and
add
shr
jmp
mov
pop
push
mov
jmp
shr
neg
push
mov
mov
sub
jmp
pop
push
mov
push
pop
push
subl
mov
push
mov
add
add
xchg
pop
jmp
mov
mov
xor
and
dec
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
pushl
pop
jmp
mov
jmp
push
mov
jmp
xchg
pop
mov
push
mov
mov
inc
inc
inc
sub
sub
pop
mov
jmp
mov
pushl
mov
jmp
mov
mov
push
push
push
jmp
pop
push
jmp
push
mov
jmp
mov
mov
pop
push
jmp
pop
push
jmp
push
mov
add
pop
sub
push
addl
pop
sub
pop
shr
neg
xor
jmp
add
push
mov
add
jmp
sub
pushl
pop
add
push
mov
add
jmp
mov
xor
pop
or
pop
sub
mov
jmp
add
xchg
pop
jmp
push
mov
or
jmp
mov
push
mov
push
jmp
mov
add
add
xchg
pop
or
push
mov
mov
sub
pop
jmp
popl
jmp
mov
addl
pushl
pop
add
sub
jmp
pop
sub
jmp
and
dec
push
push
jmp
add
pop
push
mov
add
sub
xchg
pop
mov
push
mov
mov
pop
dec
push
mov
add
xor
jmp
pop
pop
or
pop
push
jmp
pop
xor
sub
sub
add
pop
sub
mov
mov
xor
pop
and
jmp
mov
mov
add
add
sub
mov
push
sub
mov
jmp
add
sub
sub
push
mov
mov
push
mov
add
pop
push
mov
jmp
add
pop
jmp
pushl
jmp
mov
jmp
pop
pop
xor
add
pop
jmp
sub
jmp
dec
add
sub
sub
add
pop
add
jmp
pop
sub
mov
push
pushl
pushl
pop
push
jmp
mov
jmp
xor
jmp
push
mov
shr
sub
add
mov
pop
xor
mov
push
mov
add
jmp
not
neg
sub
add
mov
pop
sub
sub
jmp
mov
sub
sub
add
pop
push
mov
sub
pop
jmp
add
popl
mov
jmp
mov
add
add
mov
jmp
xor
jmp
push
mov
shr
shr
inc
xor
xor
xor
pop
push
mov
sub
pop
jmp
mov
add
add
shl
neg
push
mov
jmp
pop
push
mov
add
pop
xor
jmp
xor
jmp
shl
jmp
add
xor
jmp
push
jmp
addl
jmp
pop
jmp
mov
add
pop
pop
sub
mov
jmp
pop
mov
push
mov
add
sub
jmp
add
jmp
mov
add
mov
add
xchg
jmp
push
mov
mov
jmp
pop
pop
jmp
pushl
pushl
pop
push
jmp
push
mov
sub
jmp
mov
add
xor
xor
xor
jmp
pushl
pop
jmp
pop
mov
push
pushf
jmp
pop
push
jmp
xchg
pop
sub
mov
jmp
push
jmp
addl
pop
jmp
sub
jmp
pop
pop
jmp
shl
xor
jmp
pop
add
jmp
add
push
mov
jmp
xor
push
sub
jmp
push
mov
mov
pushl
pop
sub
jmp
push
push
jmp
push
jmp
xor
add
pop
mov
jmp
mov
sub
mov
jmp
push
mov
push
mov
add
pop
push
mov
sub
neg
push
jmp
mov
jmp
xor
add
pop
add
xchg
jmp
push
pop
push
mov
not
jmp
dec
neg
add
add
pop
push
jmp
push
mov
mov
jmp
add
sub
sub
jmp
pop
inc
shr
push
mov
mov
add
inc
push
mov
shl
xor
add
add
sub
mov
add
add
jmp
pop
popl
pop
jmp
pop
jmp
add
sub
mov
jmp
mov
push
jmp
pop
jmp
add
add
pop
sub
add
add
jmp
shl
jmp
dec
push
mov
jmp
push
push
mov
push
mov
jmp
mov
jmp
mov
add
jmp
mov
mov
jmp
mov
add
add
add
sub
sub
mov
add
jmp
pop
mov
add
jmp
pop
push
jmp
push
pop
add
push
push
pop
sub
add
add
pop
xchg
pop
add
push
jmp
push
push
push
pop
inc
add
push
pop
pop
jmp
jmp
popa
jmp
sub
pop
push
push
mov
mov
sub
pop
jmp
shr
jmp
mov
add
jmp
pop
sub
jmp
notl
pop
sub
sub
pop
add
pop
push
mov
add
pop
jmp
pop
or
and
jmp
add
add
mov
mov
jmp
xor
pop
xor
add
pop
and
jmp
pop
push
mov
push
mov
add
pop
or
xor
or
jmp
pushl
jmp
pop
jmp
xor
pushl
pop
add
jmp
not
xor
xor
xor
sub
jmp
sub
add
pop
xchg
pop
not
xor
xor
jmp
push
mov
shr
dec
shr
shr
shl
sub
jmp
addl
jmp
pop
jmp
mov
mov
xor
jmp
sub
mov
mov
add
jmp
and
xor
mov
pop
add
pop
push
jmp
pushl
popf
pop
adc
pushf
jmp
sub
add
jmp
push
jmp
add
jmp
mov
jmp
push
jmp
xchg
pop
jmp
mov
shr
not
jmp
mov
pop
jmp
mov
pushl
jmp
popl
pop
mov
pushl
pop
jmp
mov
neg
shl
jmp
mov
add
pop
xor
xor
jmp
mov
xor
pop
and
jmp
mov
xor
pop
add
pop
mov
mov
add
jmp
push
jmp
sub
xchg
pop
mov
push
mov
mov
or
push
mov
sub
pop
not
xor
push
push
mov
xor
neg
add
jmp
pop
sub
push
jmp
push
push
jmp
xor
xor
jmp
push
jmp
add
jmp
add
add
push
mov
push
mov
mov
jmp
or
add
xor
xor
pop
xor
add
pop
popl
jmp
mov
dec
add
not
xor
mov
pop
add
pop
push
mov
mov
add
add
push
mov
sub
pop
mov
push
jmp
add
jmp
and
add
add
jmp
push
mov
and
xor
push
mov
jmp
push
push
jmp
add
pop
pop
push
mov
jmp
mov
sub
add
jmp
sub
dec
or
xor
jmp
addl
mov
add
push
push
jmp
pop
jmp
push
jmp
pop
shr
xor
xor
xor
xor
push
push
pop
add
sub
xchg
mov
jmp
sub
jmp
shr
shr
sub
sub
pop
jmp
mov
pushl
pop
popl
jmp
mov
jmp
push
mov
add
add
mov
pop
inc
dec
add
mov
jmp
lods
sub
add
push
jmp
sub
jmp
popl
push
mov
xchg
not
xchg
mov
add
xchg
pop
xchg
sub
mov
sub
mov
mov
mov
jmp
pop
sub
mov
jmp
mov
mov
pop
mov
add
jmp
sub
neg
xor
add
xor
jmp
add
sub
sub
add
add
add
pop
sub
sub
sub
mov
mov
jmp
mov
push
mov
push
mov
sub
jmp
pop
popl
mov
mov
mov
shr
jmp
add
pop
mov
add
xchg
mov
mov
mov
sub
mov
mov
sub
add
add
jmp
mov
jmp
mov
add
pop
sub
xchg
mov
push
mov
push
mov
jmp
pop
or
shr
inc
sub
xor
pop
inc
not
and
dec
sub
jmp
sub
pop
pop
add
push
jmp
sub
pop
add
push
mov
add
jmp
sub
pop
jmp
push
push
mov
mov
neg
jmp
mov
mov
add
sub
mov
mov
add
add
pop
mov
push
jmp
sub
jmp
mov
pushw
mov
jmp
pop
add
push
mov
push
mov
jmp
push
jmp
pushl
mov
add
push
mov
jmp
mov
sub
pop
or
dec
xor
jmp
pop
jmp
add
jmp
pop
jmp
mov
jmp
pop
shr
push
jmp
mov
mov
pop
add
mov
add
pop
jmp
mov
mov
shr
jmp
xor
xor
pop
push
push
jmp
xor
mov
add
add
pop
xor
jmp
xor
xor
push
jmp
mov
jmp
sub
sub
pop
mov
mov
add
jmp
push
jmp
mov
pushl
pop
popl
mov
xor
pushf
jmp
mov
jmp
mov
jmp
add
push
mov
add
add
push
mov
sub
jmp
pop
popl
pop
push
popl
addl
pushl
pop
jmp
mov
push
jmp
popl
mov
movzwl
jmp
add
jmp
mov
add
jmp
xchg
jmp
pop
sub
push
jmp
push
mov
sub
mov
mov
add
sub
xor
xor
xor
pop
mov
jmp
push
mov
xor
jmp
xchg
mov
add
push
push
pop
sub
push
jmp
push
push
jmp
jmp
add
neg
xor
sub
pop
add
sub
mov
mov
add
jmp
add
add
jmp
sub
jmp
xchg
pop
xchg
pop
shr
xor
sub
mov
jmp
pop
push
mov
mov
add
sub
jmp
mov
jmp
push
mov
add
sub
xchg
pop
jmp
inc
sub
mov
jmp
push
mov
push
pop
add
sub
xchg
pop
mov
mov
jmp
add
sub
jmp
mov
mov
jmp
push
mov
not
not
add
inc
xor
add
jmp
pop
jmp
mov
push
jmp
push
mov
add
add
xchg
pop
sub
mov
push
mov
add
mov
pop
sub
dec
push
jmp
pop
popl
pop
push
mov
add
pop
push
push
pop
jmp
mov
sub
xor
dec
xor
shl
and
shl
not
sub
jmp
neg
xor
push
pop
pop
add
push
xorl
jmp
xor
pop
jmp
mov
dec
not
sub
mov
pop
push
mov
add
sub
jmp
mov
add
jmp
push
mov
mov
add
jmp
mov
jmp
sub
push
jmp
xor
add
mov
jmp
mov
jmp
mov
add
jmp
negb
pop
push
mov
jmp
mov
add
jmp
push
push
mov
addl
sub
subl
pop
pop
push
mov
add
sub
xchg
pop
mov
jmp
sub
add
add
mov
push
mov
add
push
mov
add
pop
xchg
pop
jmp
mov
mov
sub
jmp
or
xor
mov
jmp
add
not
xor
add
add
push
mov
sub
pop
pop
sub
mov
jmp
mov
sub
add
jmp
mov
mov
jmp
mov
add
pop
push
jmp
mov
jmp
mov
sub
mov
push
pop
sub
push
jmp
sub
mov
mov
add
shl
jmp
add
jmp
mov
jmp
mov
mov
jmp
add
jmp
pop
shl
add
xor
or
jmp
xor
push
mov
jmp
pop
push
push
push
push
mov
mov
add
pop
and
xor
or
push
mov
jmp
mov
add
shr
jmp
pop
popl
pop
rep
add
push
push
mov
push
mov
mov
push
jmp
push
pushl
jmp
xorl
pushl
pop
push
push
pop
add
push
mov
mov
add
pop
xchg
mov
jmp
neg
xor
sub
pop
sub
add
add
push
jmp
add
mov
add
and
shr
push
mov
sub
jmp
pop
neg
add
sub
add
mov
pop
push
push
mov
mov
jmp
add
jmp
jmp
sub
mov
push
mov
mov
pop
mov
jmp
push
mov
add
sub
xchg
jmp
mov
mov
add
push
jmp
sub
pop
jmp
sub
add
jmp
xor
and
pop
jmp
xchg
pop
or
jne
push
jmp
xchg
pop
push
sub
pop
sub
or
jmp
sub
mov
mov
xor
add
xor
jmp
not
xchg
not
xchg
shr
add
add
jmp
shl
jmp
add
jmp
push
mov
jmp
add
add
sub
pop
push
mov
sub
pop
xor
jmp
pop
mov
push
mov
jmp
popl
mov
shr
xor
xor
xor
jmp
push
push
jmp
mov
mov
pop
push
notl
pop
and
push
mov
push
push
push
jmp
sub
mov
push
mov
add
jmp
mov
add
sub
pushl
pop
add
push
xorl
popl
xorl
jmp
add
jmp
pushl
pushl
pop
add
push
push
jmp
xor
pop
push
jmp
sub
mov
mov
jmp
pushl
pop
jmp
add
push
push
mov
mov
jmp
or
add
add
jmp
push
pushl
pop
popl
jmp
pop
add
jmp
add
add
push
mov
add
pop
pushl
jmp
mov
mov
push
jmp
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
push
mov
sub
pop
add
push
mov
add
pop
pop
not
inc
xor
push
mov
add
pop
add
sub
jmp
mov
push
mov
push
mov
and
pop
or
shr
xor
mov
pop
jmp
add
pop
pop
jmp
add
push
mov
jmp
sub
pop
push
mov
push
mov
mov
pop
mov
jmp
add
add
push
jmp
xor
xor
mov
rolw
pushf
jmp
sub
add
jmp
dec
not
add
neg
add
mov
jmp
inc
sub
or
jmp
push
jmp
mov
push
jmp
mov
add
push
mov
mov
and
push
mov
not
inc
sub
or
jmp
jmp
add
pop
xor
xor
xor
pop
pushl
pushl
pushl
pop
jmp
mov
add
xor
mov
pop
add
pushl
pop
push
push
mov
add
add
add
push
jmp
push
mov
and
add
push
mov
add
pop
and
mov
jmp
mov
add
pop
xchg
jmp
push
mov
add
pop
add
mov
add
jmp
mov
add
add
mov
push
mov
add
jmp
pushl
pop
sub
mov
jmp
pop
sub
push
mov
xor
sub
dec
shl
add
push
jmp
pop
add
push
pushl
pop
popl
jmp
push
sub
jmp
pushl
pop
push
jmp
or
pop
sub
sub
mov
mov
add
pop
add
pop
push
mov
jmp
push
push
pop
add
push
jmp
pop
jmp
add
jmp
sub
mov
push
mov
add
add
xchg
mov
xor
pop
pushw
jmp
sub
push
mov
or
xor
sub
pop
sub
pop
xchg
pop
mov
jmp
shr
push
subl
sub
addl
pop
neg
xor
add
jmp
mov
or
shl
jmp
and
add
jmp
mov
push
push
pop
jmp
push
jmp
pop
jmp
add
push
mov
sub
pop
xchg
pop
mov
mov
inc
shl
sub
neg
and
neg
push
jmp
mov
jmp
shr
add
sub
jmp
push
jmp
add
mov
pop
shr
add
push
jmp
push
mov
mov
jmp
add
mov
add
add
jmp
xor
dec
xchg
jmp
sub
sub
pop
jmp
dec
shr
push
mov
add
sub
push
pushl
jmp
shr
push
jmp
pop
pop
add
pop
shr
xor
xor
jmp
add
or
add
jmp
push
pop
add
add
jmp
xor
mov
or
sub
mov
mov
inc
jmp
and
mov
jmp
add
pop
sub
sub
sub
jmp
xchg
push
notl
pop
xchg
mov
add
push
mov
xor
pop
neg
push
mov
jmp
add
pop
push
sub
mov
mov
mov
pop
shl
push
jmp
add
sub
pop
push
pushl
jmp
add
jmp
xor
push
mov
push
jmp
and
add
jmp
mov
shl
and
or
or
xor
jmp
lods
add
pushw
mov
mov
push
mov
add
pop
jmp
add
add
push
push
pop
sub
mov
xchg
not
jmp
mov
mov
add
pop
push
mov
add
shr
add
add
add
sub
jmp
sub
push
mov
push
pushl
mov
add
jmp
add
jmp
sub
sub
push
mov
push
push
pop
add
mov
jmp
sub
shl
add
push
push
mov
jmp
inc
or
sub
jmp
add
xchg
jmp
jmp
pop
add
add
jmp
add
xor
pop
push
jmp
pop
sub
add
jmp
xor
pop
mul
push
mov
push
pushf
jmp
or
sub
inc
sub
add
sub
pushl
pop
add
jmp
pop
mov
push
mov
jmp
push
mov
shl
not
inc
jmp
add
xor
xor
jmp
xchg
pop
mov
mov
add
pushl
jmp
pop
jmp
add
add
sub
mov
jmp
xor
pop
add
xor
or
shr
add
push
push
mov
mov
pop
xor
jmp
xchg
push
mov
or
pop
neg
sub
mov
push
mov
jmp
mov
add
sub
xchg
pop
jmp
addl
popl
push
mov
add
pop
mov
add
add
sub
mov
mov
add
pushl
pop
jmp
xor
mov
pop
jmp
push
mov
sub
mov
mov
add
pop
jmp
pop
jmp
mov
notl
pop
push
mov
sub
jmp
mov
push
subl
pop
push
mov
add
pop
push
mov
pop
pop
pop
neg
shr
shl
add
push
mov
jmp
push
jmp
xor
or
pop
jmp
subl
addl
addl
subl
mov
add
jmp
mov
sub
jmp
mov
push
mov
add
jmp
shl
or
xor
xor
sub
jmp
add
jmp
push
jmp
xchg
pushl
pop
push
mov
jmp
sub
xchg
mov
mov
jmp
xchg
mov
pushw
mov
pushw
jmp
add
add
sub
sub
jmp
mov
mov
sub
pop
push
mov
jmp
xor
add
and
shr
xor
or
pop
add
xor
jmp
sub
jmp
sub
mov
jmp
mov
jmp
push
mov
push
jmp
xchg
xchg
jmp
pop
push
mov
add
pop
jmp
push
jmp
pop
mov
jmp
add
mov
pop
sub
pop
push
jmp
sub
sub
add
add
pop
push
mov
add
addl
pop
jmp
push
mov
jmp
push
popl
jmp
pop
add
dec
jmp
mov
push
mov
jmp
push
mov
and
sub
sub
neg
sub
add
pop
mov
push
jmp
push
mov
jmp
mov
pushl
pop
popl
pop
popl
mov
test
pushf
jmp
add
shl
or
xor
xor
mov
add
and
push
jmp
pop
push
jmp
neg
jmp
lods
sub
sub
sub
mov
mov
shr
push
mov
inc
push
mov
sub
and
jmp
mov
movzbw
push
pushf
jmp
inc
and
xor
add
mov
add
push
pushl
mov
add
popl
mov
jmp
mov
push
mov
add
add
sub
xchg
jmp
not
jmp
mov
add
push
mov
add
jmp
xor
pop
sub
pop
or
pop
push
notl
pop
xor
push
jmp
add
add
push
jmp
and
pop
push
mov
shr
sub
sub
jmp
mov
shl
neg
jmp
add
and
jmp
mov
xor
pop
sub
add
not
add
or
mov
add
shl
push
mov
sub
xor
jmp
push
mov
add
jmp
push
mov
push
pop
add
jmp
push
sub
push
popl
jmp
pop
jmp
mov
jmp
add
add
mov
jmp
and
pushl
pop
add
xor
mov
pop
subl
add
addl
pop
mov
add
sub
jmp
push
jmp
push
push
pop
push
push
push
pop
add
sub
mov
jmp
not
add
mov
jmp
push
push
mov
shl
add
or
sub
mov
pop
xor
shr
sub
sub
sub
jmp
xor
push
mov
neg
jmp
add
push
pushl
pop
popl
jmp
sub
mov
jmp
xchg
pop
mov
mov
jmp
pushl
pop
jmp
push
pop
add
push
push
mov
add
push
mov
sub
add
jmp
pop
jmp
mov
mov
pop
pop
jmp
mov
add
push
mov
jmp
mov
add
sub
xchg
pop
mov
mov
jmp
shl
neg
dec
add
jmp
add
jmp
xor
xor
mov
or
je
pushl
pushl
pop
push
mov
mov
add
push
mov
add
sub
xchg
pop
mov
push
mov
push
addl
pop
sub
jmp
pop
add
mov
jmp
mov
add
jmp
mov
push
mov
add
add
xor
xor
xor
pop
xor
xor
xor
jmp
push
jmp
push
pushl
mov
push
mov
jmp
sub
add
add
add
pushl
pop
add
xor
xor
xor
mov
sarw
pushf
jmp
push
mov
jmp
add
pop
push
push
mov
push
jmp
pushl
pop
add
push
mov
shl
jmp
pop
push
push
pop
sub
mov
mov
jmp
mov
push
push
pop
push
push
mov
jmp
mov
jmp
pop
push
mov
jmp
add
pop
xchg
jmp
add
push
push
pop
add
push
jmp
pop
add
jmp
push
jmp
push
mov
add
pop
pushl
mov
jmp
pop
add
pop
jmp
mov
push
push
jmp
mov
jmp
push
jmp
pop
jmp
mov
add
push
mov
add
pop
add
add
add
add
sub
sub
sub
push
mov
jmp
mov
add
pop
jmp
push
jmp
mov
add
xchg
jmp
add
xchg
pop
push
push
jmp
add
xor
xor
xor
pop
push
mov
jmp
add
pop
jmp
push
pop
add
push
jmp
pop
jmp
mov
add
jmp
mov
or
je
pushl
pushl
pop
push
push
mov
addl
pop
add
push
mov
jmp
add
sub
sub
jmp
add
mov
push
mov
add
jmp
xor
sub
push
mov
push
jmp
push
pop
add
add
push
pushl
mov
add
popl
pop
push
mov
jmp
xor
sub
pop
pop
jmp
push
push
push
pop
sub
inc
xor
mov
pop
or
sub
mov
sub
mov
mov
push
mov
add
add
xchg
pop
mov
add
push
jmp
inc
sub
mov
pop
sub
pop
sub
mov
mov
push
jmp
push
mov
add
add
add
xor
xor
jmp
pop
add
pop
push
mov
add
jmp
pop
jmp
push
mov
mov
sub
jmp
xor
neg
sub
xor
jmp
mov
xor
push
mov
inc
neg
push
sub
pop
xor
not
sub
xor
pop
push
addl
mov
add
sub
jmp
push
push
mov
xor
jmp
add
pop
add
push
pushl
mov
jmp
push
jmp
mov
jmp
shr
shl
push
jmp
add
add
jmp
add
xchg
jmp
pop
add
pushl
mov
jmp
add
push
mov
add
mov
add
sub
add
push
push
mov
jmp
mov
sub
mov
push
jmp
xor
pop
sub
jmp
mov
push
jmp
push
mov
add
push
jmp
add
xchg
pop
add
xchg
jmp
add
add
push
mov
jmp
push
pushl
pop
popl
pop
xor
jmp
pushl
mov
add
jmp
xor
xor
pop
shr
jmp
pushl
mov
add
push
mov
push
mov
jmp
mov
and
pop
add
jmp
push
sub
mov
mov
mov
pop
jmp
add
add
sub
xchg
pop
mov
mov
push
push
mov
add
sub
add
add
pop
inc
push
mov
xor
jmp
pushl
pop
add
jmp
pushl
pop
push
mov
sub
jmp
mov
mov
jmp
push
pop
push
jmp
push
jmp
mov
push
subl
pop
add
mov
jmp
push
jmp
xchg
mov
pushl
mov
jmp
mov
push
mov
jmp
add
and
pop
add
sub
jmp
add
add
pop
xor
xor
jmp
push
mov
jmp
mov
add
jmp
mov
dec
sub
push
mov
sub
pop
sub
pop
mov
add
xor
xor
xor
pop
push
push
pop
and
mov
jmp
mov
add
add
xchg
pop
add
xchg
pop
bswap
push
mov
mov
push
mov
shl
inc
xchg
not
xchg
push
mov
and
xor
shl
and
xor
jmp
addl
pop
push
mov
add
pop
add
xchg
mov
sub
mov
push
pop
jmp
add
jmp
xor
or
mov
add
jmp
push
push
mov
push
push
pop
jmp
pop
sub
pop
add
jmp
push
push
pop
jmp
mov
jmp
pop
sub
jmp
add
push
mov
mov
add
mov
add
add
jmp
not
xchg
push
mov
sub
jmp
push
mov
mov
add
sub
mov
push
push
jmp
add
add
push
mov
pushl
pop
popl
jmp
push
mov
jmp
add
sub
xchg
pop
mov
jmp
push
mov
push
mov
pushl
jmp
add
pop
push
mov
mov
jmp
push
jmp
mov
push
mov
add
sub
jmp
add
xor
pop
mov
mov
add
shr
jmp
pop
sub
add
sub
sub
add
pop
mov
jmp
mov
jmp
push
mov
mov
pop
push
mov
mov
pop
pop
mov
jmp
push
pop
jmp
mov
pop
xor
pop
or
xor
add
sub
pop
pop
push
jmp
add
sub
push
mov
sub
jmp
push
mov
mov
push
mov
neg
sub
or
jmp
add
push
push
push
mov
shr
not
not
sub
shl
jmp
mov
xor
push
mov
not
not
push
mov
add
pop
shr
jmp
pop
sub
push
mov
sub
inc
sub
xor
mov
add
jmp
sub
mov
push
push
popl
addl
mov
add
push
push
pop
jmp
push
jmp
add
xchg
pop
sarb
pushf
jmp
mov
jmp
or
pop
or
jmp
mov
jmp
sub
push
push
jmp
xor
add
pop
mov
mov
add
sub
mov
add
add
pop
push
jmp
xor
sub
pop
jmp
popl
pop
shr
push
mov
push
mov
mov
jmp
mov
sub
jmp
jmp
xor
jmp
or
push
mov
jmp
add
add
push
mov
sub
jmp
add
xchg
mov
jmp
mov
mov
push
mov
jmp
add
sub
pop
push
pushl
pop
popl
jmp
sub
not
push
mov
jmp
sub
add
add
mov
push
mov
add
add
jmp
push
mov
add
sub
xchg
mov
mov
push
mov
not
jmp
mov
sub
mov
addl
pop
sub
mov
mov
push
mov
neg
jmp
sub
jmp
xor
mov
jmp
add
jmp
mov
jmp
or
pop
jmp
push
mov
jmp
sub
push
mov
mov
sub
jmp
pop
add
jmp
pop
sub
jmp
add
xor
jmp
xor
sub
pop
mov
mov
add
xor
pushl
pushl
jmp
popl
mov
jmp
add
xchg
jmp
xor
xor
xor
jmp
pop
jmp
mov
mov
add
add
sub
mov
jmp
pop
push
mov
mov
pop
jmp
negb
pop
jmp
inc
jmp
add
jmp
dec
jmp
mov
pushl
pop
popl
pop
popl
mov
jmp
pushl
mov
push
push
pop
add
add
push
jmp
add
add
jmp
or
pop
neg
jmp
push
mov
push
pop
sub
mov
push
push
jmp
sub
jmp
dec
add
add
pop
push
pop
pop
neg
jmp
pop
popl
mov
jmp
add
push
jmp
add
push
mov
add
jmp
add
xor
add
pop
jmp
mov
add
mov
push
jmp
popl
push
mov
add
pushl
mov
add
push
mov
add
add
xchg
pop
mov
push
jmp
mov
push
pop
add
add
jmp
pushl
pop
add
push
mov
xor
pop
add
shr
xor
sub
add
add
pop
jmp
mov
push
pop
add
push
mov
jmp
pop
mov
jmp
push
mov
sub
add
shl
jmp
sub
jmp
push
mov
jmp
sub
push
mov
or
pop
add
xor
mov
jmp
xor
pop
sub
mov
jmp
xchg
jmp
push
mov
jmp
push
jmp
mov
add
xchg
mov
add
jmp
mov
mov
jmp
mov
jmp
pop
add
add
xchg
pop
push
push
mov
sub
push
mov
mov
mov
jmp
popl
jmp
pushl
pop
jmp
sub
jmp
push
mov
add
mov
jmp
push
mov
add
add
xchg
jmp
sub
jmp
sub
jmp
not
shl
sub
sub
pop
push
jmp
sub
shr
push
mov
mov
add
sub
sub
mov
mov
add
sub
jmp
pop
add
xchg
pop
jmp
or
pop
shr
add
and
jmp
or
xor
not
push
mov
dec
sub
add
push
jmp
mov
and
pop
sub
jmp
pop
push
mov
shl
add
sub
neg
sub
jmp
add
pop
xor
jmp
mov
mov
add
jmp
sub
add
add
sub
jmp
mov
sub
mov
mov
push
mov
jmp
add
mov
push
mov
add
jmp
add
add
jmp
btc
pushf
jmp
mov
push
push
mov
mov
mov
pop
shr
xchg
jmp
push
mov
mov
jmp
sub
add
pop
jmp
add
sub
jmp
mov
mov
add
pop
jmp
push
mov
add
pop
add
xchg
jmp
pop
xor
mov
add
add
add
jmp
add
not
add
add
jmp
add
push
push
mov
xchg
jmp
add
push
mov
sub
mov
mov
inc
not
jmp
sub
sub
jmp
pop
sub
jmp
sub
mov
jmp
add
add
jmp
not
sub
shl
jmp
xor
xor
xor
jmp
add
pop
add
xor
xor
jmp
pop
push
mov
mov
push
push
pop
sub
mov
mov
add
not
shl
add
add
pop
xchg
mov
imul
pushw
mov
jmp
pop
jmp
div
jmp
mov
jmp
sub
mov
jmp
mov
add
jmp
dec
jmp
sub
jmp
push
mov
add
add
xchg
pop
push
mov
dec
add
jmp
add
pop
sub
xchg
pop
mov
mov
jmp
mov
pop
or
and
push
jmp
mov
push
mov
add
jmp
pop
add
xor
pop
xor
jmp
add
sub
mov
pushl
pushl
pop
jmp
add
add
jmp
pop
xor
pop
add
pop
add
xchg
pop
jmp
inc
or
pushw
mov
push
mov
mov
mov
pushl
jmp
pushl
pop
add
sub
jmp
add
push
mov
jmp
mov
xor
pop
mov
add
add
add
jmp
mov
neg
jmp
pop
xchg
pop
push
jmp
jmp
mov
jmp
mov
add
mov
xor
pop
add
or
or
jmp
mov
add
sub
add
add
push
mov
sub
pop
jmp
xor
add
pop
movzbl
cmp
je
pushl
jmp
pop
jmp
add
xchg
pop
jmp
pushl
popf
pop
rcll
pushf
jmp
push
mov
mov
jmp
mov
push
mov
mov
push
sub
mov
push
jmp
shl
sub
jmp
pushl
mov
jmp
push
mov
push
jmp
push
negl
pop
shr
sub
add
jmp
push
pop
push
mov
add
pop
add
push
mov
sub
pop
pop
mov
push
push
pop
sub
mov
mov
add
jmp
pop
push
mov
add
pop
xchg
mov
sub
jmp
add
add
jmp
mov
sub
mov
jmp
push
jmp
push
mov
jmp
pop
pop
not
push
mov
push
mov
pop
pop
xchg
inc
jmp
sub
jmp
push
jmp
mov
jmp
mov
jmp
mov
add
add
jmp
xchg
pop
shrb
pushf
jmp
push
mov
mov
pop
add
xor
add
neg
and
push
jmp
add
pushl
pop
add
xchg
pop
jmp
add
xchg
pop
xor
mov
jmp
and
jmp
sub
mov
jmp
pop
push
pushl
pop
popl
mov
mov
sub
jmp
add
add
sub
mov
push
pushl
pop
add
add
jmp
shr
sub
jmp
pop
add
jmp
add
sub
xchg
pop
mov
mov
jmp
pop
mov
jmp
pop
or
jmp
pop
jmp
pop
add
add
xchg
jmp
sub
jmp
dec
xor
sub
add
pop
add
xchg
mov
not
add
jmp
mov
pop
mov
xor
pop
jmp
pop
add
popl
push
mov
push
mov
jmp
push
push
pop
push
mov
jmp
add
xchg
pop
mov
mov
push
push
push
mov
dec
or
or
sub
mov
pop
mov
pop
shl
sub
jmp
mov
mov
inc
push
jmp
mov
mov
jmp
jmp
sub
pop
xchg
jmp
push
mov
xor
add
pop
push
push
mov
push
pop
push
pop
jmp
sub
sub
pop
mov
jmp
and
mov
push
mov
jmp
xor
pop
jmp
mov
jmp
pop
push
mov
push
pop
push
push
jmp
or
add
sub
jmp
mov
dec
jmp
pop
jmp
pop
add
push
mov
add
pop
xchg
pop
mov
mov
add
push
push
mov
sub
jmp
add
xchg
jmp
shr
jmp
add
add
jmp
mov
push
jmp
add
add
pop
sub
jmp
add
sub
pushl
pushl
pop
sub
mov
mov
add
jmp
mov
add
add
jmp
and
inc
xor
xor
xor
pop
jmp
shl
jmp
add
sub
add
push
jmp
mov
push
jmp
add
mov
push
mov
add
add
xchg
pop
add
xor
xor
jmp
or
push
mov
add
pop
add
add
pushw
mov
mov
sub
jmp
sub
xchg
pop
mov
mov
add
add
sub
push
mov
add
add
pop
pop
jmp
or
sub
jmp
mov
add
push
jmp
xor
xor
xor
pop
shr
push
jmp
push
mov
mov
shl
and
shl
jmp
mov
add
push
mov
xor
xor
pop
sub
mov
add
sub
mov
push
mov
dec
dec
sub
xor
push
mov
xor
sub
mov
add
mov
jmp
mov
add
pop
sub
mov
mov
jmp
add
add
add
sub
sub
pop
sub
mov
mov
xor
sub
pop
sub
mov
pushl
pop
popl
mov
jmp
mov
push
jmp
pop
mov
mov
add
sub
add
jmp
add
sub
sub
pop
neg
push
push
push
pop
jmp
sub
jmp
add
pop
sub
sub
pop
sub
push
push
mov
jmp
xchg
not
xchg
add
push
mov
not
sub
add
jmp
mov
pushl
mov
jmp
negl
pushf
jmp
mov
not
jmp
xor
add
pop
sub
jmp
pop
jmp
shl
and
add
jmp
add
add
sub
pop
xor
jmp
mov
pushl
pop
popl
pop
mov
push
pushl
mov
add
add
jmp
add
shr
shl
sub
and
sub
add
pop
sub
sub
jmp
mov
push
jmp
mov
push
jmp
not
jmp
mov
jmp
mov
mov
pop
xor
add
pop
pushl
pop
sub
jmp
pop
jmp
pop
add
add
pop
sub
pop
add
push
jmp
pop
push
mov
push
push
mov
push
mov
push
jmp
pushl
pop
add
popl
mov
push
mov
add
push
mov
add
jmp
mov
pop
jmp
pushl
mov
jmp
add
jmp
add
mov
pop
jmp
add
jmp
sub
add
jmp
notl
mov
add
xor
sub
add
jmp
pop
xchg
pop
sub
mov
pushl
jmp
pushl
pushl
pop
push
mov
push
mov
add
pop
add
xchg
pop
popl
mov
push
sub
jmp
push
mov
add
sub
xchg
mov
mov
push
jmp
mov
sub
pop
pushl
jmp
sub
pop
jmp
push
push
mov
mov
pop
push
mov
jmp
pushl
pop
popl
jmp
add
mov
add
add
xchg
jmp
add
pop
add
sub
mov
jmp
push
mov
sub
jmp
mov
add
add
jmp
inc
push
jmp
pop
xchg
jmp
push
push
mov
mov
jmp
sub
sub
sub
add
jmp
pushl
pop
popl
mov
mov
push
mov
push
jmp
add
xor
add
push
mov
sub
pop
sub
add
pop
push
jmp
push
mov
push
mov
jmp
addl
mov
add
add
add
xor
xor
jmp
popl
jmp
pop
pop
sub
mov
push
push
jmp
mov
xor
mov
add
add
sub
sub
mov
add
push
jmp
xchg
pushw
mov
pushw
mov
mov
add
pop
sub
mov
xor
xor
xor
pushw
mov
xchg
not
xchg
pop
xor
jmp
add
push
mov
jmp
mov
jmp
add
and
jmp
push
mov
shr
inc
push
mov
sub
jmp
pop
jmp
pushl
pop
popl
pop
shl
sub
dec
push
mov
push
mov
mov
jmp
mov
xor
add
pop
dec
push
mov
mov
jmp
pushl
mov
add
add
jmp
mov
push
push
mov
mov
xor
jmp
shr
xor
jmp
add
sub
xchg
pop
mov
push
mov
push
xorl
pop
xor
pop
add
mov
jmp
mov
add
add
push
push
jmp
add
subl
jmp
pop
xor
xor
xor
mov
idiv
movzbw
push
push
pushl
pop
push
push
pop
jmp
mov
shrl
pushf
jmp
add
pop
push
mov
add
add
pop
add
push
mov
jmp
mov
shr
sub
jmp
push
mov
add
pop
shl
and
add
add
pushl
pop
add
jmp
add
add
add
pop
push
subl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
push
pop
push
mov
add
pop
push
jmp
mov
mov
jmp
mov
jmp
movsbl
sub
mov
push
mov
add
push
push
push
pop
jmp
sub
pop
mov
pop
sub
add
add
jmp
and
pop
dec
shr
add
xor
sub
add
add
jmp
pop
pop
push
negl
pop
dec
push
mov
add
pop
jmp
neg
push
mov
shr
xor
xor
jmp
push
mov
mov
pop
xor
pop
sub
sub
add
pop
add
xor
add
mov
jmp
mov
jmp
push
mov
or
push
mov
xor
pop
shr
push
jmp
pop
add
mov
add
sub
jmp
mov
mov
xor
pop
and
push
push
mov
inc
neg
dec
shl
sub
mov
mov
jmp
add
add
mov
push
mov
push
pop
add
add
xchg
jmp
or
add
add
sub
pop
sub
push
mov
and
neg
add
jmp
mov
mov
add
pop
xor
mov
jmp
sub
push
jmp
push
mov
mov
mov
add
jmp
pop
jmp
add
pop
add
xor
xor
xor
mov
idiv
push
mov
push
pushf
jmp
pop
jmp
mov
add
jmp
sub
jmp
add
add
pop
xchg
mov
test
pushf
jmp
negl
mov
add
jmp
add
xor
xor
xor
pop
not
jmp
pop
pop
add
jmp
pop
jmp
add
add
xchg
pop
mov
jmp
inc
sub
jmp
sub
mov
jmp
mov
mov
jmp
dec
push
mov
push
mov
jmp
mov
push
sub
mov
sub
mov
push
mov
mov
push
jmp
push
jmp
mov
sub
pop
or
sub
jmp
add
push
mov
mov
or
mov
add
sub
mov
mov
and
pop
dec
add
mov
pop
push
push
pop
jmp
push
mov
jmp
add
pop
mov
push
mov
add
push
mov
add
pop
jmp
popl
addl
jmp
push
mov
mov
pop
xor
pop
jmp
mov
mov
push
push
mov
xor
mov
pop
xor
sub
pop
add
pushl
jmp
pop
xor
xor
xor
mov
jmp
and
jmp
pushl
mov
add
push
mov
jmp
add
pop
dec
xchg
neg
push
mov
sub
jmp
pop
mov
add
mov
pop
jmp
mov
or
sub
add
sub
push
mov
mov
add
pop
mov
jmp
mov
jmp
xchg
not
xchg
jmp
pop
add
xor
xor
xor
mov
mov
push
mov
add
push
mov
mov
push
mov
shl
neg
jmp
shl
add
push
pop
pop
jmp
mov
push
mov
push
mov
push
mov
add
jmp
mov
mov
add
pop
jmp
sub
mov
mov
jmp
xor
xor
mov
jmp
pop
push
jmp
push
pop
add
mov
pop
shl
jmp
mov
sub
sub
mov
add
push
mov
mov
pop
pop
jmp
push
mov
push
mov
mov
push
push
mov
jmp
add
sub
pop
jmp
pop
add
sub
sub
mov
mov
dec
jmp
mov
push
mov
mov
jmp
add
jmp
mov
add
xor
pop
xor
jmp
push
mov
mov
jmp
push
mov
push
pop
jmp
sub
pop
xchg
pop
jmp
add
push
mov
push
jmp
xor
jmp
xor
mov
jmp
pop
and
xor
add
jmp
dec
or
push
mov
jmp
pushl
mov
add
popl
pop
jmp
pop
mov
push
mov
add
add
xchg
pop
jmp
pop
push
mov
pushl
pop
jmp
movzbw
push
mov
jmp
pop
mov
add
sub
mov
push
mov
mov
mov
push
mov
add
add
xchg
jmp
dec
jmp
shl
not
push
mov
and
dec
push
push
mov
jmp
and
pushl
pop
jmp
push
mov
jmp
add
add
jmp
push
push
mov
jmp
neg
add
shl
xor
jmp
pop
xchg
pop
mov
addl
pop
jmp
pushl
jmp
mov
neg
add
xor
pop
push
mov
sub
jmp
add
pop
xchg
pop
jmp
push
mov
mov
add
jmp
pop
jmp
mov
add
pop
jmp
mov
push
mov
neg
dec
sub
jmp
addl
pop
jmp
add
neg
jmp
pop
xchg
pop
add
push
mov
push
jmp
add
add
pop
xchg
mov
jmp
pop
jmp
add
pop
jmp
notl
pop
or
not
jmp
add
add
jmp
pushl
pop
push
mov
jmp
not
push
mov
push
jmp
add
sub
pop
push
mov
mov
add
pop
jmp
push
mov
jmp
sub
mov
pushl
mov
add
popl
pop
push
popw
push
mov
jmp
sub
push
push
jmp
pop
sub
jmp
mov
sub
mov
add
sub
push
mov
push
mov
jmp
xor
jmp
add
push
mov
mov
jmp
mov
sub
mov
push
pop
jmp
add
push
mov
sub
sub
pop
pop
shr
xor
mov
pop
jmp
add
push
mov
mov
push
sub
jmp
mov
push
mov
mov
jmp
addl
pop
sub
mov
jmp
push
mov
mov
add
pop
sub
pop
add
sub
sub
push
mov
jmp
sub
jmp
add
pop
sub
add
push
jmp
add
mov
add
push
jmp
push
mov
and
pop
sub
jmp
add
add
xchg
pop
jmp
mov
add
add
xchg
pop
jmp
xor
xor
pop
div
push
mov
sub
jmp
sub
mov
mov
xor
jmp
pop
add
sub
jmp
mov
sub
add
pop
push
push
mov
mov
add
sub
xchg
pop
mov
push
mov
push
push
mov
mov
pop
push
jmp
sub
add
add
mov
push
mov
jmp
pop
xor
pushl
mov
add
jmp
pop
jmp
or
mov
add
jmp
pushl
pushl
jmp
add
sub
jmp
add
add
push
pushl
pop
jmp
pushl
pop
add
push
push
mov
jmp
pop
xchg
dec
push
mov
sub
pop
jmp
mov
jmp
sub
jmp
pop
jmp
add
add
push
pushl
pop
popl
pop
push
jmp
mov
sub
mov
mov
shl
sub
add
add
sub
jmp
pop
push
mov
push
mov
push
mov
add
add
xchg
pop
add
push
jmp
mov
add
xor
xor
push
jmp
mov
or
shr
not
or
sub
or
pop
shr
jmp
xor
shr
push
mov
jmp
inc
jmp
pop
xor
xor
xor
jmp
sub
mov
push
push
pushl
pop
jmp
xchg
jmp
addl
add
push
mov
add
sub
jmp
add
add
xor
push
mov
dec
push
jmp
pop
push
jmp
add
push
mov
add
pop
jmp
mov
push
sub
mov
addl
pop
jmp
dec
sub
xor
jmp
xor
mov
push
mov
add
jmp
mov
mov
sub
add
push
mov
mov
push
mov
mov
jmp
push
jmp
mov
add
jmp
push
jmp
dec
shl
push
jmp
sub
pop
jmp
pop
add
push
mov
dec
jmp
add
push
push
mov
mov
pop
add
pop
add
xchg
mov
popa
popf
jmp
push
pop
push
mov
add
add
jmp
mov
neg
shl
add
add
pop
sub
jmp
pushl
jmp
push
jmp
mov
jmp
mov
push
push
jmp
push
push
mov
push
mov
sub
pop
sub
addl
pop
pop
push
sub
mov
mov
push
push
mov
mov
sub
jmp
subl
pop
push
mov
add
jmp
inc
jmp
mov
pop
jmp
mov
mov
jmp
push
mov
push
mov
inc
jmp
pop
add
add
pop
push
jmp
pop
add
jmp
add
add
add
jmp
add
pushl
pop
push
jmp
mov
push
mov
push
jmp
mov
jmp
pushl
pop
popl
pop
pushl
pushl
jmp
mov
add
add
xchg
pop
add
sub
pop
xor
xor
xor
mov
pushl
mov
add
sub
mov
push
jmp
pop
add
pushl
pop
push
jmp
mov
push
pushl
jmp
mov
mov
push
mov
mov
jmp
add
jmp
pop
xor
add
sub
sub
pop
push
push
mov
shr
push
push
jmp
mov
sub
mov
sub
jmp
add
push
mov
sub
pop
mov
push
jmp
mov
mov
jmp
pop
jmp
push
mov
mov
push
push
mov
add
and
sub
mov
mov
add
jmp
mov
shr
shr
xor
jmp
pop
push
mov
and
pop
jmp
push
push
mov
add
not
shr
push
mov
jmp
mov
jmp
pop
jmp
add
xor
not
jmp
push
push
pop
xor
pop
mov
pop
mov
xor
pop
jmp
mov
jmp
push
mov
sub
mov
mov
jmp
push
mov
add
jmp
pop
jmp
add
sub
sub
pop
jmp
xchg
jmp
xor
add
jmp
push
push
mov
jmp
popl
mov
mov
jmp
pop
mov
add
xchg
mov
shlb
pushf
jmp
pushl
mov
add
push
push
push
popl
addl
jmp
or
shl
push
mov
push
mov
push
pop
push
jmp
mov
add
push
mov
jmp
sub
mov
mov
add
jmp
xor
mov
jmp
xor
push
mov
xor
mov
push
mov
mov
add
jmp
pushl
jmp
sub
sub
pop
sub
sub
add
add
pushl
pop
jmp
add
pop
push
push
mov
mov
jmp
mov
jmp
mov
jmp
sub
pop
xor
jmp
sub
jmp
push
mov
push
push
pop
push
sub
mov
add
sub
mov
pop
sub
add
push
mov
mov
add
pop
jmp
pop
jmp
pop
mov
jmp
sub
jmp
mov
not
shl
shl
and
shr
sub
sub
add
add
pop
pop
push
jmp
add
push
mov
add
pop
add
pop
sub
mov
pushl
pop
jmp
mov
mov
jmp
mov
jmp
pop
jmp
push
mov
jmp
sub
jmp
mov
add
pop
add
add
sub
sub
pop
sub
jmp
add
jmp
mov
mov
xor
xor
or
mov
jmp
pop
push
push
mov
mov
pop
add
pop
add
push
pushl
pop
popl
pop
pop
push
mov
jmp
add
push
mov
jmp
xor
and
jmp
pop
push
jmp
push
mov
mov
pop
add
pushl
pop
jmp
mov
mov
add
add
xchg
mov
xchg
pop
sub
jmp
sub
jmp
push
pop
jmp
add
pop
push
mov
add
add
jmp
sub
add
mov
add
xor
xor
xor
mov
jmp
pop
jmp
xchg
pop
jmp
mov
mov
jmp
sub
jmp
inc
pushw
mov
mov
or
mov
add
shr
or
push
jmp
xor
xor
pop
jmp
shl
add
xor
jmp
mov
add
pop
push
mov
sub
jmp
add
add
xchg
jmp
sub
sub
jmp
xor
xor
push
mov
jmp
push
push
jmp
sub
pop
jmp
pushl
jmp
push
mov
jmp
pop
mov
jmp
neg
inc
add
add
pop
jmp
mov
add
push
pop
pop
inc
jmp
xor
shr
shr
shl
not
sub
add
pop
jmp
push
mov
jmp
pushl
pop
add
jmp
movzbl
pushl
pushl
pushl
pop
add
push
push
mov
addl
pop
push
jmp
add
and
pop
shr
xor
xor
xor
jmp
mov
add
add
xchg
pop
push
mov
mov
add
push
mov
jmp
pop
xchg
mov
push
mov
not
shr
jmp
mov
jmp
add
pop
add
xchg
mov
push
mov
add
add
push
mov
pushl
jmp
push
mov
mov
add
jmp
push
pop
jmp
xor
or
push
mov
add
pop
add
pop
pushl
pop
jmp
lods
xor
push
push
jmp
push
mov
mov
jmp
push
mov
push
jmp
xor
mov
xor
xor
xor
jmp
mov
push
mov
jmp
push
mov
shr
jmp
push
mov
jmp
add
add
add
push
mov
add
sub
pop
mov
add
sub
jmp
shr
dec
jmp
push
mov
not
or
shr
xor
jmp
mov
jmp
add
jmp
xorl
pop
xor
mov
pop
pop
jmp
pop
add
jmp
pushl
jmp
sub
mov
mov
push
mov
mov
jmp
shr
jmp
xor
xor
mov
sub
pushf
jmp
mov
mov
add
add
neg
push
mov
sub
mov
add
jmp
pop
jmp
push
mov
inc
xor
or
not
neg
xor
add
jmp
mov
jmp
xor
xor
jmp
subb
mov
jmp
sub
jmp
mov
mov
xor
or
dec
sub
shl
push
jmp
shl
or
shr
add
add
pop
xor
xor
jmp
pop
popl
mov
push
mov
mov
jmp
mov
mov
push
mov
xor
and
pop
xor
jmp
pushw
pop
or
push
mov
push
mov
dec
add
jmp
pop
and
jmp
mov
addl
pushl
jmp
sub
pop
push
mov
add
pop
jmp
xor
pop
jmp
pop
popl
pop
imul
push
mov
jmp
mov
jmp
push
mov
add
push
mov
add
jmp
push
jmp
mov
shr
and
and
sub
add
sub
sub
jmp
mov
push
mov
push
jmp
xor
add
jmp
mov
jmp
pop
xor
mov
add
push
mov
jmp
mov
add
add
xchg
jmp
add
mov
mov
add
sub
mov
add
sub
jmp
neg
jmp
pop
sub
jmp
pop
jmp
xor
pop
jmp
add
add
jmp
pushl
pop
push
mov
push
jmp
push
mov
sub
pop
add
add
jmp
shr
shl
sub
mov
mov
xor
jmp
subl
add
addl
addl
pop
pop
mov
add
jmp
pop
mov
mov
add
push
mov
jmp
mov
jmp
push
mov
jmp
mov
jmp
pop
sub
jmp
mov
jmp
add
add
push
pushl
mov
add
jmp
push
jmp
mov
add
pushl
jmp
sub
pop
push
mov
mov
sub
push
jmp
shr
shr
neg
jmp
sub
mov
jmp
add
push
mov
add
pop
push
pushl
pop
popl
pop
push
mov
pushl
pop
popl
mov
jmp
add
pop
and
jmp
pop
jmp
mov
push
pop
add
mov
jmp
mov
add
neg
jmp
pop
sub
jmp
mov
push
jmp
push
jmp
pushl
popf
pop
rcrb
pushf
jmp
pop
push
mov
mov
pop
pop
jmp
neg
and
add
push
mov
dec
jmp
pop
add
and
pop
or
shl
sub
jmp
not
shl
push
mov
mov
and
sub
mov
mov
jmp
push
mov
xor
pushl
jmp
xor
xor
pop
mov
jmp
sub
mov
push
jmp
pop
sub
add
sub
sub
pop
pushw
jmp
sub
mov
mov
push
mov
add
jmp
pop
sub
xchg
pop
mov
push
push
pop
push
mov
jmp
not
jmp
not
add
jmp
pushl
popf
pop
rcrl
pushf
jmp
add
xchg
pop
push
jmp
mov
add
sub
xchg
pop
mov
popl
mov
add
pop
jmp
shl
xor
dec
not
and
not
sub
add
pop
xor
jmp
pop
sub
mov
mov
and
pop
sub
dec
and
sub
jmp
and
pop
push
mov
xor
jmp
pop
jmp
add
sub
jmp
push
mov
not
jmp
mov
jmp
add
push
pushl
pushl
pop
push
mov
push
jmp
movzbl
mov
push
mov
push
mov
add
push
mov
add
jmp
pop
sub
mov
jmp
mov
sub
mov
mov
sub
mov
mov
add
pop
jmp
sub
pop
or
shl
add
push
subl
pop
add
pop
add
push
mov
add
add
jmp
mov
add
add
xchg
mov
mov
add
add
add
sub
sub
push
mov
add
jmp
mov
jmp
pop
sub
mov
sub
mov
push
pop
xor
sub
mov
pop
pop
inc
push
mov
sub
mov
mov
add
pop
and
pop
add
add
jmp
mov
add
xchg
jmp
add
jmp
add
popl
mov
add
push
mov
jmp
push
mov
jmp
mov
sub
jmp
shr
not
jmp
sub
jmp
mov
add
jmp
shr
xor
sub
pop
push
jmp
mov
pushl
pop
popl
mov
push
mov
push
jmp
xor
add
pop
jmp
mov
add
add
pop
sub
mov
jmp
mov
jmp
add
add
xchg
pop
push
sub
mov
addl
pop
add
jmp
mov
jmp
mov
not
inc
jmp
push
pushl
pop
popl
mov
mov
sub
mov
mov
add
pop
jmp
mov
add
jmp
pop
push
mov
jmp
mov
push
push
pop
jmp
push
mov
add
mov
add
push
mov
sub
add
add
jmp
add
add
jmp
xor
mov
jmp
shr
push
mov
xor
jmp
sub
add
jmp
mov
add
jmp
xor
xor
xor
mov
pushl
pushl
jmp
xor
mov
mov
push
mov
jmp
jmp
push
jmp
mov
inc
shl
sub
xor
sub
or
jmp
pop
sub
jmp
sub
sub
push
jmp
pop
jmp
pop
sub
mov
jmp
sub
jmp
sub
sub
pop
xchg
pop
mov
mov
add
add
push
mov
pushl
mov
jmp
mov
jmp
mov
add
push
jmp
mov
push
jmp
mov
mov
xor
dec
and
jmp
push
push
push
mov
jmp
pop
jmp
pushl
pop
add
xor
xor
jmp
jmp
mov
jmp
push
pop
sub
sub
mov
pop
mov
add
pop
push
mov
mov
or
pop
inc
sub
jmp
lods
sub
mov
mov
sub
add
add
pushl
pop
add
jmp
pop
jmp
push
mov
jmp
add
jmp
subl
addl
add
subl
push
jmp
pop
add
sub
mov
jmp
mov
mov
push
push
mov
mov
mov
add
jmp
add
dec
push
push
mov
sub
mov
mov
jmp
pushl
pop
add
add
push
push
mov
and
push
jmp
add
mov
add
push
mov
mov
push
mov
mov
jmp
push
jmp
pop
jmp
sub
add
pop
sub
xchg
mov
mov
push
mov
push
jmp
pushw
addw
sub
subw
pop
xor
jmp
push
pop
add
mov
pop
sub
pop
sub
jmp
push
push
pop
push
jmp
xor
jmp
xor
jmp
mov
jmp
or
xor
push
mov
mov
xor
shl
sub
jmp
pop
add
add
xchg
pop
add
add
add
sub
sub
pop
jmp
mov
push
mov
sub
mov
mov
add
jmp
add
xchg
jmp
mov
push
mov
jmp
mov
push
mov
add
push
jmp
mov
pop
add
pop
jmp
add
xchg
jmp
xor
jmp
xchg
pop
push
mov
add
jmp
sub
shl
and
sub
jmp
mov
sub
mov
push
pop
push
push
push
jmp
mov
push
mov
mov
add
push
push
mov
mov
mov
mov
add
push
mov
add
sub
jmp
pop
mov
mov
add
push
mov
add
add
sub
pop
add
add
push
mov
not
shr
neg
xor
jmp
pop
sub
jmp
jmp
pop
sub
mov
mov
add
pop
jmp
add
pop
add
pop
jmp
mov
add
push
mov
add
jmp
mov
jmp
and
pop
push
push
pop
jmp
push
mov
add
pop
subl
pushl
pop
add
pop
jmp
not
jmp
mov
jmp
push
pop
sub
mov
mov
jmp
pop
xchg
pop
mov
push
mov
push
pop
add
push
sub
mov
sub
mov
push
push
push
jmp
pop
mov
add
xor
jmp
xor
xor
jmp
add
sub
sub
pop
and
pushl
pushl
pop
jmp
mov
mov
sub
dec
not
xor
sub
jmp
push
jmp
pop
jmp
xor
mov
mov
push
mov
mov
push
push
mov
shr
add
dec
add
add
mov
pop
jmp
mov
pop
xor
shl
add
xor
add
jmp
mov
sub
mov
push
jmp
pop
jmp
popl
mov
jmp
push
pushl
pop
add
sub
add
dec
add
push
addl
jmp
add
add
xchg
pop
push
mov
push
jmp
sub
xchg
pop
mov
mov
sub
jmp
xchg
pop
mov
mov
jmp
shr
shl
push
push
pop
sub
sub
add
add
jmp
and
sub
jmp
push
popl
push
push
push
pop
push
mov
sub
pop
mov
mov
add
add
pop
pop
add
push
mov
add
pushl
pop
sub
mov
push
pop
push
mov
add
pop
push
push
mov
or
shl
not
push
mov
add
pop
jmp
add
sub
jmp
sub
add
xor
jmp
pop
xchg
pop
popl
pop
jmp
add
xchg
pop
or
je
pushl
mov
push
mov
jmp
sub
mov
mov
push
jmp
add
jmp
push
mov
not
add
xor
jmp
addl
jmp
push
jmp
inc
xor
sub
add
jmp
movsl
push
mov
or
shlb
push
lock
or
inc
mov
or
sbb
or
mov
or
inc
mov
or
cpuid
or
sub
or
sub
mov
or
lret
mov
or
lods
mov
or
or
mov
or
and
mov
or
push
mov
or
mov
or
mov
or
cmc
mov
or
add
or
sbb
or
xor
or
and
or
pop
mov
or
movsl
mov
or
mov
or
shlb
or
jnp
or
or
or
outsl
mov
or
push
mov
or
and
or
mov
or
or
or
cmp
or
popa
mov
or
and
or
adc
mov
or
lds
or
add
or
push
mov
or
add
or
sahf
mov
or
insb
mov
or
js
or
test
or
in
mov
or
or
or
sub
or
repnz
or
loopne
or
daa
mov
or
mov
or
aaa
mov
or
push
mov
or
add
or
or
or
push
mov
or
jge
or
or
or
jecxz
or
mov
or
and
or
jg
or
fsubs
or
je
or
or
mov
or
or
mov
or
jp
or
adc
or
in
or
test
or
popf
mov
or
add
or
daa
mov
or
dec
mov
or
in
mov
or
mov
or
cwtl
mov
or
repz
or
fbld
or
inc
mov
or
mov
or
je
or
add
mov
or
add
or
push
mov
or
scas
mov
or
loope
or
ret
mov
or
or
mov
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
push
push
jmp
sub
jmp
add
addl
mov
jmp
mov
add
pop
shl
add
add
pop
push
mov
pushl
pushl
pop
push
jmp
xor
mov
jmp
push
mov
mov
jmp
sub
and
sub
mov
pop
or
jmp
pushl
jmp
push
push
push
mov
add
add
jmp
xor
or
sub
sub
mov
pop
neg
add
shl
xor
or
pop
add
xor
pushl
jmp
add
push
mov
add
push
mov
add
pop
jmp
sub
pop
jmp
push
mov
add
mov
add
push
mov
sub
inc
shr
xor
sub
sub
sub
add
add
pop
sub
add
jmp
add
sub
pop
pop
xor
movzbw
pushw
mov
jmp
add
neg
xor
and
pop
inc
jmp
pop
jmp
dec
push
mov
xor
add
shl
sub
mov
mov
dec
neg
jmp
mov
xor
jmp
add
sub
sub
pop
add
add
pop
jmp
mov
jmp
push
mov
mov
push
mov
add
add
pop
push
notb
pop
add
mov
pop
mov
jmp
sub
add
xor
xor
add
add
push
mov
jmp
jmp
pop
pushl
jmp
mov
mov
add
mov
mov
sub
mov
push
mov
addl
pop
add
push
mov
add
push
mov
jmp
push
mov
addl
jmp
shr
sub
jmp
mov
add
jmp
add
add
sub
jmp
or
shr
jmp
mov
shl
sub
xor
sub
pop
jmp
sub
shl
xor
add
pushl
pop
push
jmp
pop
jmp
add
jmp
sub
jmp
add
pop
jmp
shr
jmp
push
push
mov
mov
pop
neg
shl
add
add
jmp
mov
sub
mov
mov
add
add
jmp
pushl
jmp
add
jmp
add
jmp
mov
jmp
shl
inc
sub
add
pop
xor
jmp
mov
sub
jmp
mov
push
push
jmp
pop
push
jmp
xor
pop
jmp
pop
mov
mov
jmp
pushl
pop
add
push
sub
pop
sub
add
pop
push
mov
jmp
add
push
mov
jmp
push
mov
jmp
sub
mov
mov
sub
jmp
pop
push
mov
push
jmp
neg
add
jmp
mov
jmp
mov
add
pushf
jmp
xchg
pop
add
push
mov
add
pop
xchg
mov
push
mov
push
push
pop
mov
pop
sub
mov
jmp
push
pushl
pop
popl
mov
rorb
pushf
jmp
mov
jmp
mov
add
add
sub
add
add
sub
sub
pushl
pop
add
sub
mov
jmp
sub
mov
jmp
xchg
pop
popl
jmp
mov
push
mov
jmp
add
sub
xchg
jmp
and
jmp
mov
push
jmp
push
push
pop
add
push
push
mov
xor
jmp
sub
add
add
jmp
push
jmp
mov
sub
mov
mov
push
jmp
dec
sub
jmp
dec
sub
neg
and
dec
xor
sub
add
push
mov
add
add
pop
pop
sub
jmp
pop
popl
mov
imul
jmp
xor
pop
jmp
addl
pop
add
sub
push
pushl
mov
add
popl
pop
mov
push
pop
jmp
pop
add
add
push
mov
mov
sub
xor
sub
mov
add
sub
movzbl
jmp
popa
jmp
xor
jmp
sub
mov
pop
push
mov
xor
jmp
add
add
xor
xor
xor
mov
test
pushf
jmp
push
pop
pop
jmp
sub
pop
shr
jmp
add
mov
push
mov
add
add
xchg
pop
add
xchg
pop
jmp
add
xchg
jmp
addl
jmp
sub
add
mov
add
push
push
pop
add
jmp
sub
pop
sub
jmp
mov
jmp
pop
add
push
push
mov
pop
pushl
pop
push
push
push
jmp
shr
or
xor
sub
xor
pop
add
jmp
push
mov
jmp
neg
sub
mov
pop
jmp
pop
popl
pop
push
mov
add
jmp
sub
pop
jmp
add
sub
push
mov
mov
sub
add
add
mov
jmp
popw
jmp
mov
neg
not
xor
add
pop
push
mov
sub
pop
push
mov
sub
jmp
mov
mov
mov
pop
add
add
sub
pushl
pop
add
sub
sub
add
pushl
pushl
pop
push
jmp
sub
pop
add
mov
add
jmp
pop
dec
add
jmp
xor
or
jmp
add
jmp
mov
jmp
pushl
jmp
mov
sub
pop
sub
jmp
sub
jmp
add
jmp
add
subl
jmp
push
jmp
mov
add
add
xor
xor
xor
pop
movswl
push
mov
jmp
pushl
pop
add
push
mov
push
jmp
pop
or
jmp
xchg
mov
incb
pushf
jmp
mov
add
sub
pop
sub
add
jmp
mov
jmp
xchg
pop
sub
jmp
push
mov
mov
push
jmp
push
jmp
push
mov
add
jmp
pop
jmp
neg
xor
add
pop
sub
mov
push
push
pop
jmp
xor
pop
jmp
mov
push
sub
push
popl
push
push
mov
mov
pop
subl
addl
add
subl
jmp
push
jmp
add
xchg
jmp
add
add
pop
not
or
shr
add
sub
mov
mov
xor
xor
inc
not
push
mov
mov
xor
mov
add
add
sub
sub
pop
xor
xor
sub
jmp
xor
pop
imul
push
pushf
jmp
mov
push
mov
add
sub
xchg
mov
mov
push
pushl
mov
jmp
pop
jmp
push
jmp
sub
pop
sub
jmp
pushl
jmp
or
pop
jmp
xor
jmp
add
xchg
mov
shr
push
push
mov
jmp
push
pop
sub
mov
add
add
mov
add
push
mov
neg
push
mov
sub
jmp
sub
pop
add
sub
add
add
sub
push
mov
jmp
add
sub
xchg
pop
mov
sub
push
popl
addl
jmp
xor
push
push
pop
sub
jmp
mov
jmp
mov
pop
add
jmp
mov
push
mov
add
jmp
mov
jmp
xor
pop
add
pop
neg
jmp
push
push
mov
push
xorl
pop
sub
mov
jmp
pop
add
push
mov
jmp
xor
xor
jmp
add
xor
push
mov
push
push
pop
push
mov
add
mov
jmp
pop
xchg
jmp
push
pop
inc
shl
push
mov
add
sub
xchg
pop
mov
push
jmp
pop
pop
jmp
push
pushl
pop
popl
pop
mov
mov
mov
jmp
mov
jmp
pushw
mov
mov
sub
pop
mov
jmp
or
pushl
pop
add
neg
add
add
jmp
mov
shr
jmp
push
mov
jmp
addl
mov
add
push
mov
push
mov
add
jmp
mov
mov
shr
add
shl
sub
add
jmp
pushl
pop
push
mov
jmp
mov
pushl
pop
popl
jmp
push
mov
jmp
sub
mov
pushl
pushl
pop
add
popl
mov
push
push
push
jmp
mov
push
xorl
pop
xor
pop
add
jmp
add
mov
jmp
mov
mov
pop
jmp
sub
mov
add
push
pushl
jmp
pop
pop
jmp
jmp
push
jmp
mov
pop
inc
jmp
or
shl
sub
jmp
push
jmp
mov
jmp
sub
push
mov
mov
add
add
pop
pop
xor
xor
xor
mov
push
popl
jmp
push
jmp
pop
jmp
sub
mov
jmp
pop
add
mov
add
jmp
pop
push
jmp
pop
push
mov
jmp
sub
shl
add
jmp
movzbw
push
mov
jmp
push
mov
jmp
mov
pop
jmp
sub
pop
xchg
mov
mov
mov
add
sub
sub
pop
xor
mov
add
xor
mov
jmp
mov
mov
neg
jmp
mov
add
pop
sub
xchg
pop
mov
pushl
pushl
mov
sub
mov
mov
add
push
mov
mov
add
mov
add
xchg
pop
push
jmp
pop
sub
mov
push
mov
push
mov
dec
not
jmp
pop
sub
pop
and
pop
neg
shr
xor
sub
add
push
mov
mov
jmp
add
jmp
pushw
jmp
inc
sub
jmp
pushl
jmp
push
jmp
xor
xor
jmp
or
pop
sub
add
jmp
add
push
push
mov
mov
pop
jmp
push
push
pop
add
sub
jmp
add
add
not
not
add
jmp
push
push
mov
mov
pop
sub
mov
add
jmp
pop
pop
jmp
mov
inc
not
dec
push
push
jmp
add
jmp
add
add
add
xor
xor
xor
jmp
mov
jmp
sub
pop
push
mov
jmp
mov
add
jmp
mov
add
add
jmp
mov
add
jmp
mov
mov
jmp
add
pop
jmp
not
shl
shl
xor
jmp
sub
pop
sub
add
pop
add
pop
add
jmp
not
xor
mov
pop
mov
pop
jmp
push
pop
inc
sub
mov
pop
add
sub
shl
xor
shl
xor
sub
pop
pushl
pop
add
add
jmp
sub
jmp
pop
dec
add
mov
pop
xor
add
push
mov
jmp
push
mov
add
push
jmp
xchg
pop
xor
xor
xor
mov
add
push
jmp
sub
pop
inc
push
mov
add
pop
add
add
sub
mov
add
push
mov
push
mov
sub
mov
pop
mov
push
push
pop
push
jmp
push
mov
jmp
sub
not
not
shr
add
jmp
add
shl
not
xor
sub
pop
jmp
or
inc
sub
sub
jmp
mov
push
pop
jmp
xor
xor
xor
pop
shrb
pushf
jmp
sub
jmp
not
add
xor
add
pop
jmp
push
mov
jmp
mov
mov
or
jmp
mov
mov
push
jmp
mov
push
jmp
lods
push
mov
jmp
mov
and
pop
shr
push
push
mov
push
mov
mov
pop
pop
sub
xchg
pop
sub
add
add
add
sub
push
jmp
mov
mov
add
sub
add
add
pop
add
xchg
mov
jmp
mov
add
pop
push
push
push
jmp
push
push
pop
push
push
jmp
mov
add
sub
pop
sub
push
mov
push
jmp
mov
add
pop
pop
push
pushl
jmp
add
xchg
mov
popl
pop
push
mov
dec
xor
jmp
push
push
popl
sub
mov
push
mov
mov
pop
addl
jmp
add
mov
jmp
mov
jmp
add
pushl
jmp
mov
add
or
pushl
pop
add
add
jmp
add
add
jmp
xor
xor
mov
jmp
add
push
mov
add
jmp
mov
add
jmp
sub
add
add
pop
xchg
pop
add
jmp
pushl
pushl
pop
sub
jmp
mov
add
jmp
push
mov
jmp
mov
push
mov
jmp
pop
add
pop
popl
subl
pushl
pop
push
sub
mov
addl
pop
push
push
jmp
push
jmp
mov
neg
mov
pop
jmp
add
add
xchg
jmp
mov
and
jmp
popl
jmp
lods
xor
jmp
push
jmp
mov
push
push
jmp
xchg
pop
sub
mov
mov
add
push
mov
jmp
mov
add
pop
jmp
add
jmp
neg
shr
jmp
mov
push
jmp
sub
pop
pop
push
mov
sub
pop
xchg
pop
mov
push
jmp
popl
pop
add
shr
push
jmp
pop
jmp
add
xchg
jmp
sub
jmp
sub
pop
push
mov
dec
neg
not
sub
mov
mov
sub
not
sub
add
jmp
pop
sub
mov
add
add
jmp
pop
shl
not
add
xor
mov
pop
xor
jmp
add
push
mov
add
pop
push
mov
push
jmp
add
pushl
pop
push
push
push
jmp
mov
jmp
mov
and
add
or
jmp
push
jmp
neg
push
mov
jmp
add
jmp
sub
pushl
pop
add
std
push
pushl
jmp
mov
add
pop
subl
add
addl
mov
push
mov
add
add
xchg
pop
mov
push
jmp
add
xor
shr
push
mov
sub
pop
mov
mov
add
not
and
sub
jmp
xchg
mov
jmp
add
sub
mov
jmp
dec
sub
inc
jmp
push
mov
add
and
jmp
xchg
pop
add
add
xor
xor
mov
add
jmp
mov
jmp
xor
sub
pop
neg
push
mov
sub
pop
add
push
mov
dec
xor
shl
shr
xor
sub
sub
add
pop
jmp
pop
pop
sub
push
mov
jmp
push
jmp
inc
sub
shr
sub
xor
pop
and
pushl
mov
push
mov
add
push
jmp
push
pop
not
jmp
mov
mov
push
pushl
jmp
pop
jmp
push
mov
inc
add
jmp
add
jmp
pop
inc
and
xor
mov
pop
sub
jmp
push
pop
jmp
or
shl
jmp
jmp
push
push
push
mov
add
push
mov
shr
jmp
push
jmp
push
push
pop
add
add
xchg
pop
add
add
jmp
mov
pop
not
or
and
add
jmp
push
mov
jmp
sub
jmp
push
mov
add
pop
shr
shl
xor
sub
jmp
xchg
pop
pop
sub
mov
jmp
pushl
popf
pop
rclb
pushf
jmp
mov
add
jmp
push
jmp
pop
jmp
pop
sub
jmp
push
mov
jmp
push
mov
jmp
inc
jmp
push
jmp
add
push
mov
add
pop
xor
xor
xor
mov
bswap
push
mov
sub
mov
mov
push
sub
mov
push
pop
not
neg
sub
push
mov
jmp
add
pop
xor
jmp
lods
sub
sub
mov
mov
sub
jmp
push
push
mov
mov
add
pop
neg
shl
jmp
add
push
mov
pushl
jmp
push
jmp
xchg
not
jmp
mov
add
add
jmp
pop
xor
xor
mov
push
mov
mov
jmp
xor
pop
add
pushl
mov
add
add
push
jmp
mov
mov
sub
pop
add
jmp
push
mov
add
jmp
add
pushl
pop
add
xor
jmp
pop
pop
add
push
mov
sub
mov
mov
add
mov
pop
sub
jmp
mov
jmp
add
push
mov
add
pop
jmp
pop
sub
jmp
shr
inc
inc
push
mov
or
pop
jmp
xor
xor
pop
sarb
pushf
jmp
mov
add
dec
not
jmp
xor
pop
pushl
mov
push
mov
add
jmp
pop
jmp
mov
inc
push
mov
jmp
add
or
jmp
popl
pop
add
push
mov
push
mov
jmp
dec
xor
not
xor
add
pop
add
xchg
jmp
mov
add
add
jmp
xchg
pop
push
jmp
push
mov
jmp
xorl
mov
jmp
pop
and
pop
or
jne
push
mov
sub
mov
mov
add
jmp
pop
add
add
sub
jmp
push
push
pop
mov
jmp
sub
sub
pop
sub
pop
push
mov
sub
mov
mov
shl
sub
jmp
mov
add
push
push
mov
add
shr
or
sub
jmp
add
jmp
mov
push
jmp
sub
mov
mov
add
jmp
sub
dec
sub
mov
pop
and
pushl
pushl
pop
add
push
mov
sub
mov
mov
inc
or
shr
and
push
mov
jmp
sub
add
add
mov
push
mov
add
add
jmp
add
xchg
mov
xor
xor
pushl
jmp
pop
push
mov
push
push
jmp
mov
jmp
push
pushl
pop
popl
pop
jmp
add
push
mov
jmp
xchg
neg
inc
push
mov
sub
add
add
jmp
mov
add
jmp
mov
sub
pop
add
mov
push
mov
add
add
xchg
pop
xchg
pop
jmp
not
inc
xor
add
pop
push
push
mov
mov
jmp
add
mov
jmp
add
jmp
pop
jmp
sub
jmp
pushl
pop
push
jmp
xor
mov
jmp
sub
mov
mov
jmp
add
add
xchg
jmp
mov
shr
xchg
jmp
mov
shr
shl
add
add
pop
push
mov
add
push
mov
add
add
pop
jmp
add
mov
push
jmp
xor
jmp
mov
push
push
pop
neg
not
shr
jmp
push
mov
jmp
mov
push
mov
jmp
pushl
mov
add
push
push
mov
push
mov
add
pop
pushl
jmp
mov
xor
mov
add
jmp
mov
pushl
pushl
pop
push
mov
push
jmp
mov
add
jmp
shl
sub
jmp
xor
jmp
pop
add
jmp
pop
add
sub
mov
mov
push
mov
add
sub
pop
sub
pop
push
jmp
push
mov
mov
pop
pushl
pushl
jmp
mov
addl
pop
push
push
pop
or
push
mov
add
xchg
not
xchg
xor
or
sub
push
jmp
xchg
pop
mov
mov
push
jmp
neg
sub
sub
pop
pop
push
mov
jmp
push
jmp
pop
xor
xor
xor
mov
imul
pushw
mov
jmp
add
pop
push
mov
jmp
mov
jmp
movzbw
pushw
jmp
mov
jmp
push
mov
add
jmp
pop
add
push
jmp
xchg
jmp
movzbw
jmp
mov
add
add
xchg
pop
sub
mov
mov
push
mov
push
notl
pop
shl
jmp
mov
mov
add
push
mov
push
mov
jmp
mov
pop
xor
pop
sub
sub
jmp
xor
pop
push
jmp
push
jmp
push
push
mov
mov
pop
mov
add
pop
add
pop
xchg
mov
shll
pushf
jmp
or
jmp
add
pushl
pop
push
mov
add
push
jmp
pop
add
push
pushl
jmp
mov
push
mov
add
pop
sub
mov
mov
push
mov
and
sub
sub
pop
sub
push
mov
inc
add
shl
push
mov
sub
mov
add
sub
pop
jmp
add
pop
sub
sub
jmp
mov
pushl
jmp
pop
mov
mov
add
sub
push
jmp
mov
add
jmp
dec
shr
add
add
pop
push
push
pop
sub
mov
mov
jmp
pop
jmp
mov
mov
push
mov
add
sub
push
pushl
mov
jmp
push
mov
and
pop
push
jmp
pushl
pushl
pop
add
popl
push
notl
mov
add
jmp
add
pop
mov
add
xor
xor
xor
pop
roll
pushf
jmp
add
xchg
pop
popl
pop
jmp
and
pop
shl
add
not
inc
jmp
mov
sub
mov
push
mov
add
push
mov
mov
add
jmp
subl
pushl
pop
add
mov
add
jmp
mov
push
mov
mov
push
mov
shl
push
jmp
or
sub
inc
sub
mov
pop
add
push
mov
sub
add
add
add
pop
jmp
add
sub
mov
add
neg
inc
sub
sub
pop
push
mov
add
pop
add
pop
sub
add
jmp
popl
mov
xchg
pop
jmp
sub
add
add
sub
jmp
mov
not
sub
dec
xor
sub
pop
push
mov
or
jmp
pushl
popf
pop
rcll
pushf
jmp
addl
mov
push
mov
jmp
push
mov
mov
jmp
xchg
mov
add
xor
xor
jmp
mov
push
jmp
pushl
pop
popl
mov
add
jmp
sub
pop
xor
jmp
pop
jmp
pop
sub
add
pop
sub
mov
jmp
pop
jmp
push
jmp
mov
xor
pop
xor
pop
add
add
push
mov
jmp
and
pop
xor
add
pop
push
mov
add
xor
add
sub
add
mov
add
push
pushl
pop
popl
jmp
mov
jmp
not
not
add
jmp
mov
or
sub
add
pop
mov
jmp
pop
push
mov
jmp
sub
jmp
pop
add
xor
xor
xor
mov
jmp
pushl
pushl
jmp
mov
mov
mov
pop
push
mov
jmp
mov
add
jmp
push
push
mov
neg
push
jmp
mov
pop
mov
jmp
push
pop
jmp
pop
sub
add
add
sub
sub
jmp
shl
jmp
pop
xor
xor
xor
mov
jmp
mov
pop
add
mov
push
mov
mov
push
push
mov
mov
mov
add
neg
sub
add
jmp
pop
add
push
mov
jmp
mov
jmp
add
pop
push
mov
add
mov
add
xor
xor
jmp
pop
add
pop
push
mov
add
pop
add
sub
sub
add
jmp
mov
push
push
mov
mov
pop
inc
and
jmp
addl
pop
jmp
pop
pop
xor
sub
add
jmp
push
jmp
push
mov
add
pop
xor
jmp
xor
mov
mov
movzbw
push
pushf
jmp
add
sub
jmp
sub
mov
push
pop
sub
sub
push
mov
jmp
push
pushl
pop
popl
mov
add
and
pushl
pop
push
jmp
pop
sub
mov
push
mov
jmp
mov
push
mov
push
mov
jmp
add
add
jmp
mov
push
push
mov
mov
jmp
pop
jmp
inc
sub
jmp
add
pop
push
mov
mov
add
jmp
add
xchg
mov
mov
add
jmp
push
mov
sub
push
popl
addl
jmp
add
push
mov
notl
pop
add
push
mov
push
jmp
add
xchg
mov
push
mov
push
mov
or
jmp
pop
pop
jmp
pop
add
mov
pop
xor
mov
add
xchg
jmp
or
pop
jmp
mov
mov
pop
push
mov
mov
pop
pushl
mov
add
sub
mov
sub
mov
addl
pop
jmp
sub
jmp
push
jmp
add
shr
push
jmp
xchg
jmp
add
xor
sub
add
sub
sub
add
sub
mov
jmp
pop
sub
mov
mov
jmp
add
sub
jmp
add
sub
push
mov
sub
mov
add
pop
xchg
jmp
xor
shr
dec
jmp
pop
mov
sub
sub
sub
add
add
pop
sub
add
add
mov
push
mov
jmp
sub
xchg
jmp
mov
and
mov
push
mov
add
add
push
mov
pushl
jmp
sub
pop
jmp
inc
and
jmp
add
pop
push
mov
mov
shl
xor
not
xor
sub
jmp
mov
push
push
mov
add
push
jmp
pop
add
sub
mov
jmp
pop
sub
add
push
mov
mov
pop
mov
add
add
sub
xor
jmp
add
pop
sub
jmp
xchg
pop
push
push
mov
add
push
mov
mov
sub
jmp
add
xchg
pop
pushl
mov
jmp
pop
sub
pop
push
push
pop
not
inc
jmp
add
jmp
pushw
mov
jmp
mov
add
jmp
add
popl
jmp
mov
and
shr
push
mov
xor
pop
push
pop
pop
sub
or
pushl
pop
add
jmp
pushl
pop
add
push
mov
push
mov
add
jmp
pop
push
jmp
add
push
push
mov
not
add
jmp
push
mov
sub
shr
push
jmp
add
jmp
pop
sub
push
mov
xor
xor
pop
sub
add
sub
mov
mov
add
add
pop
pop
jmp
pop
popl
pop
sub
mov
jmp
sub
mov
add
mov
jmp
add
popl
mov
sub
mov
push
mov
mov
xor
jmp
pop
add
sub
mov
jmp
push
jmp
mov
mov
add
add
xchg
mov
jmp
mov
sub
pop
xchg
pop
mov
push
mov
mov
push
push
jmp
sub
jmp
xor
xor
pop
pop
inc
jmp
xor
pop
add
jmp
addl
pop
jmp
not
sub
add
or
jmp
add
mov
add
sub
mov
pushl
mov
add
popl
pop
pushl
pushl
pop
push
mov
add
add
jmp
push
jmp
add
jmp
not
jmp
mov
add
pop
add
jmp
sub
pop
jmp
sub
add
add
add
pop
jmp
xchg
pop
mov
jmp
mov
mov
add
mov
add
add
push
push
mov
mov
jmp
xchg
pop
shl
sub
mov
mov
xor
pop
push
push
mov
pop
jmp
push
mov
push
jmp
sub
add
add
sub
pushl
pop
add
add
add
sub
mov
add
xchg
mov
mov
push
mov
push
push
push
jmp
pop
add
push
mov
mov
push
mov
add
jmp
add
add
jmp
pop
push
mov
and
jmp
xor
jmp
push
mov
dec
add
jmp
pushl
pop
add
add
add
push
mov
inc
xor
sub
pop
jmp
pop
sub
add
mov
jmp
sub
add
mov
jmp
mov
push
mov
xor
sub
add
sub
mov
pop
xor
not
shr
push
notl
pop
jmp
xor
push
push
jmp
add
push
mov
add
pop
pop
push
mov
mov
sub
add
push
mov
add
pop
jmp
mov
add
jmp
neg
sub
push
push
mov
inc
xor
mov
jmp
pop
jmp
push
mov
mov
mov
pop
sub
mov
push
jmp
push
mov
add
pop
mov
add
sub
mov
mov
jmp
mov
add
add
jmp
mov
mov
sub
pop
add
jmp
inc
xor
add
mov
pop
push
mov
shl
jmp
push
notl
jmp
push
mov
jmp
add
push
jmp
add
jmp
sub
mov
add
jmp
mov
jmp
mov
add
pop
jmp
pop
pop
jmp
sub
push
mov
sub
xor
add
pop
jmp
pop
push
push
pop
add
add
xor
jmp
add
pop
push
push
jmp
shl
push
mov
or
or
inc
sub
xor
pop
jmp
xchg
mov
jmp
push
mov
jmp
mov
xor
pop
mov
mov
jmp
mov
add
push
mov
xor
sub
pop
mov
pop
add
sub
jmp
xor
jmp
mov
pop
add
pop
push
mov
add
pop
pushl
pop
add
mov
jmp
mov
add
pop
add
xchg
pop
push
push
jmp
xor
sub
sub
mov
pop
jmp
mov
push
jmp
xor
mov
pop
jmp
push
mov
mov
sub
pop
neg
shl
xor
jmp
push
jmp
neg
push
mov
xor
mov
add
xor
push
mov
add
jmp
add
jmp
mov
sub
push
mov
addl
popl
push
mov
push
jmp
inc
jmp
pop
jmp
pop
sub
pop
pop
jmp
mov
push
push
push
popl
addl
pop
push
mov
push
jmp
or
neg
sub
jmp
shl
xor
jmp
pop
add
neg
not
add
sub
mov
mov
add
jmp
mov
push
mov
mov
add
jmp
inc
sub
mov
mov
or
jmp
push
push
mov
push
jmp
push
mov
add
pop
shr
xor
add
pop
push
mov
jmp
xor
push
mov
shl
or
sub
shr
jmp
mov
mov
push
mov
jmp
push
jmp
popl
pop
push
mov
mov
push
jmp
pop
jmp
mov
sub
mov
jmp
pushl
pop
push
mov
add
add
xchg
mov
xchg
mov
mov
jmp
mov
mov
push
push
pop
shr
not
xor
shr
push
jmp
xor
pop
xchg
pop
push
jmp
not
jmp
mov
jmp
pop
add
popl
mov
sub
pushf
jmp
pop
jmp
mov
add
pop
jmp
add
add
pop
push
mov
shr
jmp
neg
add
jmp
sub
add
add
pop
jmp
xor
shr
jmp
xor
mov
mov
jmp
mov
pop
shr
neg
dec
sub
jmp
add
pop
sub
xor
xor
jmp
mov
add
pop
pop
sub
jmp
sub
sub
mov
add
shl
push
jmp
add
mov
push
push
mov
add
add
jmp
sub
add
pop
add
xchg
pop
push
push
mov
push
pop
dec
sub
jmp
mov
sub
mov
pop
sub
pop
add
pop
push
mov
sub
sub
shl
jmp
mov
mov
push
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
sub
mov
mov
shl
jmp
push
jmp
mov
mov
push
mov
inc
sub
or
add
add
pop
add
xchg
jmp
add
pop
push
pop
jmp
pop
jmp
and
push
push
push
pop
not
xor
mov
pop
add
push
mov
shl
sub
sub
pop
or
pop
shr
xor
xor
jmp
pop
jmp
push
mov
push
push
jmp
pop
add
pop
push
mov
shl
xor
sub
jmp
sub
mov
jmp
pop
add
push
mov
push
push
jmp
add
jmp
sub
jmp
pop
xchg
mov
mov
mov
sub
mov
push
mov
jmp
pushl
pop
popl
pop
push
push
jmp
pop
jmp
sub
sub
shl
sub
jmp
push
mov
jmp
sub
add
sub
pop
jmp
pushl
popf
pop
sbb
pushf
jmp
pop
jmp
add
jmp
add
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
add
add
jmp
add
push
push
push
mov
push
mov
mov
push
jmp
and
push
push
mov
jmp
sub
jmp
pop
add
pop
sub
jmp
dec
shl
sub
sub
add
jmp
pushl
pop
push
mov
push
jmp
mov
sub
add
jmp
push
pop
add
push
jmp
mov
jmp
mov
add
push
mov
or
shr
sub
shr
xor
sub
jmp
push
mov
push
mov
jmp
pop
dec
jmp
dec
xor
jmp
mov
addl
pop
jmp
mov
push
jmp
push
jmp
add
push
push
push
pop
neg
xor
mov
pop
xor
pop
and
sub
add
mov
jmp
push
mov
mov
add
xor
add
add
push
sub
mov
mov
and
add
mov
add
pop
sub
pop
pop
xor
add
sub
push
jmp
sub
pop
mov
add
pushw
mov
mov
add
mov
add
push
mov
mov
pushw
mov
push
mov
jmp
add
jmp
sub
push
mov
sub
mov
mov
add
pop
jmp
mov
add
add
sub
sub
add
jmp
pop
jmp
add
pop
mov
add
xchg
pop
mov
jmp
pop
jmp
xor
jmp
push
mov
jmp
xor
neg
xor
or
pop
add
shl
push
mov
mov
xor
jmp
dec
jmp
push
jmp
mov
add
push
mov
push
mov
and
jmp
pop
jmp
pop
xchg
pop
add
push
push
mov
or
neg
shl
add
sub
xor
jmp
add
jmp
mov
add
add
xchg
pop
add
push
mov
mov
push
mov
add
jmp
mov
xor
pushf
jmp
push
mov
addl
pop
push
mov
sub
add
add
sub
add
pop
jmp
mov
jmp
add
add
pop
add
add
sub
pop
add
pop
xor
jmp
sub
mov
jmp
pushl
pushl
pop
jmp
pushl
pushl
pop
push
mov
jmp
pushl
pushl
jmp
push
sub
pop
add
push
addl
pop
jmp
mov
jmp
pushl
mov
jmp
xor
sub
jmp
push
jmp
sub
sub
push
mov
jmp
push
pop
add
add
sub
mov
pushl
pop
jmp
pop
push
jmp
mov
sub
not
push
mov
push
mov
sub
or
shl
xor
add
pop
add
add
add
pop
mov
pop
xor
pop
add
pop
add
jmp
xor
pop
mov
pop
add
pop
jmp
mov
jmp
or
pop
or
and
jmp
add
jmp
mov
mov
jmp
mov
mov
jmp
xor
xor
jmp
mov
jmp
push
push
mov
mov
xor
pop
xor
not
push
mov
jmp
pushl
pop
popl
jmp
dec
jmp
push
push
pop
jmp
push
mov
add
jmp
shr
add
xor
push
jmp
mov
jmp
add
sub
mov
add
jmp
pushl
jmp
sub
jmp
mov
dec
not
add
dec
sub
xor
push
mov
xor
add
pop
add
push
jmp
or
jmp
pushl
jmp
pop
add
jmp
sub
sub
add
jmp
and
sub
push
mov
sub
pop
add
sub
xor
jmp
sub
mov
mov
add
jmp
mov
add
pop
push
mov
push
jmp
mov
push
jmp
not
xor
neg
sub
mov
pop
add
jmp
add
add
jmp
push
pushl
pop
push
jmp
mov
mov
push
mov
mov
add
add
xchg
pop
and
mov
push
mov
add
add
jmp
add
jmp
pop
add
push
push
pop
jmp
or
add
push
jmp
mov
mov
add
push
mov
mov
pop
pop
not
xchg
push
push
mov
push
push
mov
mov
pop
push
mov
push
mov
mov
pop
mov
jmp
pop
push
mov
xor
pop
jmp
xor
sub
pop
add
jmp
sub
jmp
sub
shr
jmp
neg
push
jmp
shr
jmp
mov
push
pushl
jmp
add
pushl
jmp
add
xchg
pop
push
mov
add
pop
jmp
mov
mov
mov
add
pop
pop
push
mov
push
mov
add
add
xchg
pop
mov
jmp
mov
push
sub
mov
jmp
pop
div
movzbw
pushw
mov
jmp
mov
mov
xor
pop
xor
mov
push
mov
push
push
push
pop
sub
mov
pop
xor
add
pop
jmp
push
mov
push
mov
add
mov
pop
jmp
mov
add
push
mov
add
pop
xchg
pop
push
jmp
add
mov
pushl
pop
sub
jmp
pop
mov
push
mov
add
push
sub
jmp
sub
sub
add
add
pop
jmp
mov
add
sub
add
push
jmp
mov
jmp
add
add
sub
push
mov
add
pop
pop
xor
sub
sub
sub
add
push
jmp
xchg
pop
push
mov
push
push
jmp
pop
jmp
add
popl
mov
mov
push
mov
push
mov
jmp
pop
jmp
push
push
pushl
pop
add
push
push
mov
and
shr
and
dec
add
mov
pop
xor
inc
jmp
sub
mov
sub
jmp
pop
and
jmp
mov
push
mov
jmp
push
mov
add
pop
add
jmp
dec
shr
push
mov
shl
inc
sub
jmp
push
mov
jmp
push
pushl
pop
jmp
mov
and
pushl
pop
add
shr
push
push
mov
xor
mov
add
jmp
neg
jmp
mov
or
and
not
jmp
push
mov
neg
dec
push
mov
sub
not
or
jmp
xor
or
jmp
push
mov
jmp
add
jmp
push
mov
jmp
add
mov
add
sub
add
add
sub
add
jmp
sub
add
jmp
add
pop
jmp
add
add
push
pushl
jmp
mov
mov
jmp
mov
and
inc
add
xor
add
pop
pushl
pop
push
mov
push
mov
add
pop
add
xchg
pop
push
xorl
mov
add
xor
pop
mov
pop
add
add
jmp
mov
jmp
shl
xchg
jmp
or
push
mov
add
sub
sub
shl
jmp
pop
add
pop
jmp
xor
xor
xor
pop
mov
push
push
pushl
pop
add
jmp
sub
jmp
push
jmp
mov
jmp
xchg
pop
jmp
mov
and
shl
sub
neg
shl
push
mov
push
push
pop
jmp
pushl
mov
jmp
mov
sub
add
push
push
mov
add
jmp
mov
add
add
add
push
jmp
xor
push
push
pushl
pop
popl
push
xor
xor
xor
jmp
pop
and
pop
jmp
pop
jmp
mov
add
add
xchg
pop
add
and
mov
push
mov
jmp
sub
jmp
push
mov
push
mov
not
not
jmp
xor
sub
add
add
pop
add
sub
add
jmp
dec
shr
jmp
mov
sub
mov
addl
pushl
pop
jmp
push
jmp
pushl
mov
add
push
mov
push
pop
push
jmp
pushl
mov
add
jmp
xchg
pop
jmp
mov
push
jmp
add
sub
jmp
push
mov
mov
xor
pop
push
push
mov
mov
pop
mov
pop
sub
pop
inc
or
xor
dec
push
sub
jmp
mov
add
and
pop
or
je
pushl
mov
push
mov
sub
mov
addl
pop
sub
mov
mov
sub
add
add
pop
push
mov
inc
xor
dec
sub
sub
mov
jmp
sub
jmp
mov
and
push
mov
xor
pop
and
inc
and
sub
jmp
mov
jmp
mov
mov
add
jmp
add
jmp
add
xchg
pop
jmp
add
xor
xor
jmp
mov
sub
jmp
shr
push
jmp
mov
pop
xor
mov
jmp
pop
add
sub
jmp
mov
push
mov
jmp
sub
add
mov
push
jmp
dec
add
add
pop
jmp
add
add
sub
push
push
pop
sub
jmp
lods
xor
push
mov
sub
mov
mov
add
add
jmp
add
pushw
mov
jmp
pushl
jmp
mov
push
jmp
pop
xor
mov
pop
jmp
add
add
pop
sub
push
mov
pushl
jmp
push
push
pop
add
add
xchg
mov
xor
xor
xor
pop
mov
push
mov
mov
push
mov
push
mov
mov
pop
sub
mov
mov
sub
pop
jmp
mov
jmp
pop
pop
mov
add
jmp
popl
pop
mov
push
pop
jmp
xor
jmp
add
sub
jmp
sub
jmp
pop
jmp
mov
add
jmp
neg
not
jmp
add
add
pushl
pop
push
mov
add
add
xchg
mov
push
mov
mov
add
pop
xchg
jmp
mov
jmp
sub
push
negl
jmp
add
pop
sub
xchg
pop
mov
xor
xor
xor
xchg
push
notl
mov
add
xor
xor
xor
jmp
push
mov
or
push
mov
jmp
mov
add
pop
xchg
pop
xor
pushl
jmp
mov
push
mov
push
mov
push
jmp
sub
jmp
add
xor
xor
xor
pop
push
jmp
push
mov
push
xchg
inc
xchg
pop
jmp
sub
mov
add
push
push
sub
mov
mov
mov
pop
push
addl
pop
jmp
xor
jmp
add
push
jmp
pop
and
push
jmp
mov
shr
shl
or
xor
add
add
pop
push
jmp
pop
xchg
not
push
push
pop
pop
push
incl
mov
add
push
push
jmp
pop
xor
mov
pop
add
mov
sub
jmp
pushl
pop
add
jmp
push
mov
push
mov
mov
add
pushl
jmp
mov
mov
pop
jmp
add
add
pop
add
xchg
jmp
and
mov
add
add
push
mov
add
jmp
mov
add
pop
add
pop
mov
pop
push
mov
shr
neg
add
add
sub
push
jmp
sub
xor
pop
add
pushl
pop
push
jmp
sub
sub
add
add
jmp
add
sub
mov
mov
jmp
xchg
not
xchg
inc
sub
jmp
push
mov
add
jmp
sub
sub
jmp
add
add
jmp
push
push
mov
mov
jmp
neg
jmp
pop
popl
mov
mov
mov
push
push
mov
or
sub
xor
jmp
subl
add
addl
mov
add
jmp
mov
push
pop
push
mov
mov
jmp
push
mov
jmp
inc
inc
jmp
pop
inc
and
jmp
add
add
add
sub
jmp
mov
push
push
jmp
shr
jmp
add
mov
add
sub
xchg
mov
mov
mov
add
push
jmp
sub
mov
mov
add
pop
xchg
pop
jmp
pop
sub
pop
mov
add
sub
jmp
pop
pop
add
sub
pushl
pop
add
jmp
push
mov
jmp
mov
jmp
add
sub
add
add
jmp
mov
mov
jmp
sub
mov
addl
jmp
pushl
mov
jmp
push
mov
xor
mov
jmp
xor
mov
push
mov
add
add
xchg
pop
add
add
sub
pushl
pop
add
sub
mov
push
mov
jmp
mov
jmp
push
mov
add
pushl
jmp
mov
jmp
add
mov
jmp
mov
jmp
sub
jmp
pop
push
jmp
pop
add
pop
jmp
sub
sub
add
pushl
pop
push
jmp
push
mov
mov
neg
and
and
not
add
xor
pop
xor
mov
jmp
push
mov
jmp
add
pushl
pop
push
mov
add
add
xchg
jmp
mov
mov
neg
not
sub
sub
sub
mov
jmp
mov
jmp
xor
jmp
xor
add
add
sub
pop
mov
pop
xor
mov
push
mov
push
jmp
push
mov
not
push
jmp
push
jmp
pushl
popf
pop
sbb
pushf
jmp
add
mov
push
push
pop
push
mov
add
jmp
shl
xor
sub
add
add
pop
add
pop
push
mov
jmp
xor
xor
pop
add
sub
jmp
xor
sub
pop
sub
jmp
jmp
shr
shl
add
jmp
mov
add
sub
jmp
sub
mov
jmp
add
jmp
mov
shl
sub
dec
jmp
push
mov
pushl
pop
jmp
sub
add
pop
add
xchg
pop
jmp
mov
sub
add
add
pop
push
mov
add
sub
jmp
sub
pop
sub
sub
add
add
add
mov
jmp
add
mov
add
pushl
sub
jmp
mov
add
mov
add
jmp
sub
push
jmp
push
mov
mov
add
add
xchg
pop
popl
mov
mov
jmp
xor
jmp
mov
jmp
add
add
xchg
pop
push
mov
jmp
pop
pushl
pop
add
pop
push
mov
push
mov
jmp
lods
jmp
mov
add
jmp
mov
xor
pop
sub
mov
add
pushl
mov
add
add
jmp
mov
mov
sub
jmp
mov
push
jmp
push
mov
add
sub
xor
xor
xor
jmp
push
mov
add
add
jmp
mov
shl
shr
inc
push
mov
sub
pop
or
xor
xor
pop
sub
push
incl
pop
sub
add
jmp
add
jmp
pushl
pushl
mov
add
add
push
jmp
not
xchg
mov
add
jmp
mov
xor
pop
jmp
mov
add
add
xor
jmp
push
push
pop
add
jmp
push
mov
mov
push
mov
dec
inc
shr
push
push
jmp
add
mov
add
push
push
mov
mov
jmp
mov
push
pop
xor
mov
push
mov
add
sub
push
mov
jmp
add
add
jmp
shr
shr
jmp
mov
mov
jmp
push
pushl
pop
push
jmp
xor
pop
sub
mov
push
mov
add
add
xchg
pop
add
jmp
mov
jmp
sub
mov
mov
xor
jmp
add
jmp
push
mov
add
jmp
decb
pushf
jmp
mov
sub
jmp
mov
sub
pushl
pop
add
addl
addl
add
subl
subl
push
mov
jmp
dec
add
add
mov
jmp
mov
add
pushf
jmp
mov
push
pop
push
mov
push
mov
shr
not
jmp
mov
jmp
push
mov
add
jmp
shr
jmp
pop
sub
pop
xchg
pop
mov
jmp
dec
or
jmp
push
mov
sub
sub
mov
push
push
mov
jmp
push
jmp
mov
jmp
add
add
push
pushl
pop
popl
pop
jmp
mov
shr
push
mov
add
sub
xchg
pop
mov
push
mov
add
push
mov
jmp
push
push
pop
inc
add
mov
jmp
or
mov
add
dec
jmp
add
mov
mov
jmp
push
mov
sub
jmp
push
mov
jmp
push
jmp
add
not
dec
sub
mov
pushl
pop
add
push
push
mov
subl
add
jmp
pop
pop
push
jmp
mov
push
mov
add
jmp
mov
push
mov
jmp
add
pop
add
sub
add
sub
sub
jmp
add
mov
pop
mov
pop
xor
mov
jmp
mov
add
sub
jmp
pop
add
sub
xchg
jmp
push
mov
add
sub
sub
pop
shl
push
mov
push
mov
inc
neg
inc
xor
add
add
mov
pop
push
mov
jmp
pop
jmp
add
sub
xchg
pop
mov
mov
add
sub
xchg
pop
jmp
mov
jmp
sub
jmp
sub
add
pop
add
jmp
sub
mov
jmp
add
pop
sub
jmp
mov
mov
jmp
add
push
mov
xor
jmp
push
mov
add
and
pop
sub
mov
mov
jmp
mov
push
push
jmp
xchg
pop
mov
push
mov
push
mov
sub
pop
shl
xchg
jmp
add
sub
jmp
neg
jmp
pop
sub
push
jmp
add
jmp
sub
shr
xor
add
pop
push
mov
jmp
pop
jmp
pop
xor
xor
push
mov
notl
pop
push
jmp
push
mov
addl
popl
addl
jmp
mov
jmp
mov
sub
mov
mov
jmp
and
pop
push
jmp
add
pop
push
mov
add
jmp
xor
pop
add
add
sub
mov
jmp
pushw
mov
sub
jmp
sub
pop
push
mov
add
add
pushl
jmp
mov
shr
jmp
add
mov
push
mov
add
jmp
add
push
mov
push
sub
mov
push
jmp
mov
pop
shl
add
push
push
jmp
neg
push
mov
notl
jmp
pop
jmp
mov
pushl
mov
push
mov
mov
add
add
xchg
mov
popl
pop
push
push
mov
push
mov
push
mov
and
shr
add
sub
add
pop
add
xchg
pop
add
push
mov
add
pop
xor
xor
jmp
mov
add
add
xchg
jmp
xor
add
neg
xor
or
jmp
mov
jmp
push
jmp
pop
and
pushl
mov
push
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
sub
mov
jmp
mov
xor
pop
push
push
mov
jmp
xor
add
jmp
mov
add
sub
xchg
pop
jmp
mov
jmp
add
sub
jmp
xchg
mov
mov
xor
xor
xor
xor
xor
xor
jmp
mov
jmp
pop
pop
add
pop
sub
jmp
shl
sub
jmp
pop
add
mov
push
mov
add
jmp
xor
pop
push
mov
jmp
mov
jmp
mov
mov
pop
mov
mov
jmp
push
mov
and
xor
sub
pushl
pop
add
shl
push
mov
shr
and
inc
xor
xor
pop
jmp
pop
add
add
shr
add
xor
sub
jmp
mov
add
add
dec
not
jmp
mov
add
movzbl
pushl
push
mov
add
sub
xchg
pop
mov
push
mov
mov
sub
mov
mov
inc
push
push
push
push
pop
xor
add
mov
pop
xor
jmp
mov
not
add
mov
jmp
pop
xor
xor
xor
jmp
mov
mov
jmp
sub
pop
add
sub
sub
pop
xchg
pop
jmp
add
pop
shl
shr
jmp
subl
jmp
sub
pop
xor
pushl
pushl
mov
add
jmp
xor
jmp
push
jmp
push
mov
mov
add
push
jmp
subl
push
mov
mov
add
sub
jmp
or
xor
mov
pop
add
pop
push
jmp
pop
mov
mov
sub
mov
mov
push
mov
jmp
mov
add
and
pop
inc
jmp
push
mov
add
add
jmp
pushl
pop
jmp
push
jmp
pushl
popf
pop
rclw
pushf
jmp
push
mov
jmp
sub
add
pop
push
push
mov
push
pop
jmp
mov
push
mov
add
add
xchg
jmp
push
mov
shr
and
sub
jmp
sub
jmp
mov
add
add
jmp
mov
push
pop
jmp
mov
mov
pop
neg
mov
pop
shr
or
neg
push
mov
push
mov
shl
dec
xor
add
xor
jmp
xor
sub
mov
push
mov
push
mov
add
pop
add
xchg
pop
sub
mov
sub
mov
mov
mov
add
mov
add
push
mov
add
jmp
pop
add
jmp
mov
add
jmp
mov
mov
xor
add
add
xor
pop
jmp
add
add
pop
push
jmp
pop
jmp
push
pop
xor
mov
pop
sub
add
jmp
mov
mov
push
mov
jmp
pop
push
mov
mov
not
xor
xor
pop
jmp
pop
jmp
mov
mov
jmp
push
mov
jmp
sub
pop
add
jmp
push
mov
push
pop
push
mov
shr
push
mov
sub
pop
add
pop
push
mov
add
sub
add
jmp
push
jmp
add
pop
xchg
pop
jmp
pop
jmp
sub
mov
mov
add
mov
jmp
pop
sub
mov
add
jmp
add
pop
add
xchg
pop
push
push
pushl
pop
add
push
mov
jmp
mov
push
mov
shr
jmp
sub
jmp
push
push
mov
mov
xor
pop
jmp
pop
push
push
addl
pop
sub
push
jmp
mov
pop
pop
mov
add
and
pushl
pop
add
or
shl
sub
mov
sub
mov
mov
add
sub
push
pushl
pop
popl
pop
mov
push
mov
push
jmp
or
jmp
add
pop
and
jmp
push
pop
xor
neg
add
xor
mov
jmp
push
mov
pushl
mov
push
jmp
pop
jmp
add
sub
pop
push
push
mov
mov
add
and
xchg
not
xchg
dec
push
jmp
mov
add
sub
jmp
shl
add
push
mov
xor
sub
pop
add
jmp
mov
add
add
xchg
mov
jmp
xchg
inc
jmp
xor
add
jmp
pop
add
add
mov
add
jmp
mov
mov
push
mov
jmp
mov
add
push
jmp
push
popl
push
mov
push
mov
jmp
push
mov
add
add
push
mov
mov
push
mov
xor
push
mov
jmp
xor
mov
pop
sub
add
add
pushl
pop
jmp
mov
jmp
pop
pushl
pop
add
jmp
sub
mov
mov
sub
pop
jmp
push
jmp
add
pop
xor
xor
xor
pop
jmp
push
mov
jmp
xor
mov
jmp
pop
add
xchg
jmp
mov
jmp
sub
add
sub
jmp
mov
push
pop
push
push
pop
or
jmp
add
xor
pop
jmp
xchg
pop
sub
sub
jmp
mov
pop
pop
jmp
addl
popl
push
jmp
push
jmp
pop
push
mov
mov
pop
pop
add
add
sub
pop
jmp
add
xchg
mov
mov
jmp
push
pop
push
mov
push
jmp
mov
sub
mov
sub
push
jmp
pop
jmp
push
jmp
popl
mov
jmp
pop
add
xor
xor
xor
mov
btc
pushf
jmp
mov
sub
pop
jmp
movzbw
jmp
mov
mov
pop
jmp
add
xor
mov
pushl
mov
add
push
mov
add
add
push
jmp
add
jmp
sub
pop
and
pop
or
je
push
mov
add
add
jmp
shr
shr
and
push
jmp
add
add
xchg
pop
xchg
jmp
mov
add
add
xchg
pop
and
or
xor
jmp
push
pushl
jmp
pushl
pop
add
jmp
add
add
pop
pop
xchg
mov
mov
mov
add
mov
jmp
add
pop
jmp
subl
pop
push
mov
add
add
mov
add
mov
add
jmp
mov
and
sub
or
push
jmp
sub
push
jmp
mov
add
sub
jmp
mov
pop
and
jmp
add
xchg
pop
jmp
add
push
mov
push
mov
push
jmp
popl
jmp
mov
addl
pop
add
add
xchg
pop
jmp
add
jmp
sub
mov
jmp
sub
xchg
pop
mov
jmp
push
mov
xor
pop
sub
jmp
add
sub
add
push
mov
jmp
mov
jmp
mov
jmp
add
push
mov
add
sub
sub
jmp
mov
push
mov
add
sub
xchg
pop
jmp
mov
add
jmp
mov
mov
jmp
neg
xor
mov
pop
sub
jmp
mov
add
jmp
and
pushl
pop
add
or
je
pushl
jmp
mov
add
popl
mov
mov
jmp
mov
add
jmp
push
jmp
add
jmp
mov
jmp
mov
push
jmp
pop
neg
sub
jmp
pushl
pop
jmp
mov
pop
push
mov
neg
sub
shr
shr
and
jmp
popl
pop
mov
jmp
or
neg
not
shl
push
jmp
mov
shl
push
push
mov
mov
jmp
xchg
pop
push
mov
push
jmp
mov
push
jmp
sub
add
jmp
mov
add
shl
sub
sub
jmp
shr
push
mov
dec
and
jmp
add
pop
push
mov
inc
jmp
add
pop
push
push
push
jmp
add
push
push
mov
sub
mov
pop
dec
add
add
pop
push
jmp
pop
popl
mov
jmp
mov
add
jmp
push
pop
add
add
jmp
mov
jmp
mov
jmp
push
jmp
push
mov
push
jmp
mov
mov
sub
push
mov
xor
pop
xor
pop
xor
mov
jmp
xchg
mov
push
push
pop
add
mov
add
sub
mov
push
mov
mov
xor
mov
pop
push
mov
and
jmp
sub
mov
jmp
push
mov
add
pop
push
push
pop
push
mov
mov
sub
mov
mov
jmp
pushl
mov
add
push
mov
push
pop
add
sub
mov
push
push
push
jmp
push
mov
mov
jmp
xor
xor
jmp
add
push
pushl
mov
add
popl
pop
jmp
sub
jmp
pop
mov
add
push
mov
add
pop
jmp
xor
xor
jmp
add
xchg
pop
jmp
pop
pop
jmp
mov
mov
sub
push
pop
pushl
pop
jmp
push
mov
sub
jmp
popl
jmp
pop
jmp
shl
jmp
mov
jmp
mov
pop
add
pop
sub
add
add
jmp
pop
neg
xor
dec
not
xor
sub
pop
dec
not
push
mov
jmp
mov
jmp
addl
mov
push
push
mov
jmp
mov
mov
add
pop
pop
jmp
not
inc
push
mov
neg
xor
neg
sub
xor
xor
add
pop
add
pop
pushw
mov
jmp
pop
jmp
xor
shr
inc
sub
push
addl
pop
jmp
push
jmp
xor
push
jmp
mov
jmp
sub
xor
add
jmp
mov
add
push
sub
mov
mov
mov
mov
add
sub
jmp
sub
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
add
sub
add
addl
jmp
add
mov
jmp
add
push
push
mov
jmp
sub
add
jmp
sub
add
pop
jmp
xchg
mov
mov
pushl
mov
push
jmp
mov
sub
pop
jmp
xor
inc
xor
push
pop
pop
sub
mov
add
push
pushl
pop
jmp
push
jmp
mov
sub
mov
addl
jmp
shl
add
add
add
sub
pop
add
xchg
jmp
sub
mov
jmp
sub
mov
jmp
add
jmp
pop
jmp
pop
sub
mov
jmp
add
pop
and
jmp
mov
jmp
pushl
pop
jmp
pop
jmp
push
pop
inc
xor
and
add
jmp
mov
jmp
add
and
pushl
pop
add
or
je
pushl
pushl
pop
push
mov
mov
push
mov
xor
neg
neg
push
mov
jmp
mov
add
pop
jmp
pop
jmp
mov
add
pop
push
jmp
not
sub
mov
push
pop
jmp
mov
jmp
mov
add
push
push
mov
jmp
jmp
neg
xor
jmp
pop
shr
jmp
xor
pop
add
mov
add
push
push
mov
sub
sub
mov
xor
pushl
jmp
add
add
xchg
pop
jmp
pushl
pushl
pushl
mov
add
push
push
pop
add
add
push
pushl
jmp
mov
sub
mov
push
mov
sub
mov
jmp
add
xor
xor
jmp
pop
add
xchg
pop
shr
push
mov
add
add
jmp
push
mov
push
push
push
jmp
add
jmp
pop
jmp
mov
add
push
mov
push
mov
jmp
mov
pop
add
pop
jmp
pop
push
mov
mov
add
jmp
sub
jmp
push
mov
push
mov
push
notl
jmp
xchg
pop
push
mov
mov
or
xor
add
jmp
lods
jmp
push
mov
push
pushl
pop
add
push
mov
sub
add
pop
sub
mov
jmp
pop
push
mov
mov
sub
jmp
pop
jmp
push
jmp
push
mov
sub
xor
sub
mov
pop
jmp
xor
sub
mov
pop
xor
pop
push
mov
add
mov
add
add
add
sub
push
mov
sub
mov
push
mov
add
push
mov
add
pop
xchg
pop
pop
push
pushl
pushl
pop
add
popl
pop
or
pushf
jmp
pop
add
add
push
mov
neg
jmp
add
add
push
jmp
pop
jmp
pushl
pop
popl
pop
popl
mov
mov
push
mov
add
push
push
mov
mov
jmp
add
pop
add
sub
push
jmp
not
xchg
jmp
add
jmp
push
jmp
push
push
mov
addl
pop
push
mov
xchg
jmp
mov
jmp
push
mov
jmp
pop
or
add
shr
jmp
or
mov
jmp
xchg
push
incl
jmp
add
add
jmp
pop
jmp
jmp
pop
push
mov
push
jmp
sub
sub
jmp
add
add
jmp
xchg
jmp
push
mov
sub
jmp
mov
add
jmp
mov
jmp
push
pushl
mov
add
popl
jmp
pop
not
xor
xor
jmp
pop
mov
mov
sub
jmp
add
jmp
mov
add
popl
jmp
sub
pop
jmp
popl
push
mov
add
pop
mov
jmp
pop
jmp
and
jmp
pop
jmp
mov
or
pop
jmp
xor
jmp
sub
xchg
pop
mov
push
pop
jmp
push
push
pop
pop
xchg
jmp
sub
jmp
mov
push
jmp
xor
add
add
sub
mov
add
xchg
mov
shrw
pushf
jmp
push
push
popl
addl
pop
push
mov
push
push
pop
add
shl
add
mov
pop
push
mov
dec
jmp
pop
movzbl
pushl
jmp
or
dec
neg
xor
sub
pop
push
mov
push
mov
push
push
jmp
add
jmp
push
mov
jmp
not
jmp
add
jmp
mov
push
mov
jmp
mov
jmp
push
mov
push
mov
sub
pop
jmp
push
xchg
not
xchg
pop
jmp
add
add
push
mov
xor
not
add
add
pop
add
jmp
mov
add
mov
add
sub
mov
sub
mov
subl
mov
add
push
mov
add
pop
jmp
mov
jmp
mov
pushl
mov
push
mov
add
add
xchg
pop
push
mov
jmp
pushl
pop
add
push
mov
mov
jmp
shr
or
jmp
pushl
mov
jmp
mov
jmp
add
sub
add
jmp
push
mov
dec
shr
neg
shr
sub
add
jmp
or
add
jmp
add
jmp
sub
xor
pop
xor
pop
push
jmp
mov
add
sub
mov
mov
shl
push
jmp
sub
pop
or
sub
dec
jmp
pop
mov
jmp
xor
shr
dec
add
push
mov
jmp
sub
push
jmp
xor
xor
mov
shll
pushf
jmp
pushl
jmp
pop
add
add
mov
jmp
mov
add
sub
jmp
push
jmp
xchg
pop
mov
pushl
mov
jmp
push
jmp
addl
pop
pushl
mov
jmp
pop
sub
shr
jmp
add
add
add
jmp
pushl
jmp
jmp
or
jmp
mov
mov
add
jmp
add
jmp
sub
sub
sub
jmp
xor
sub
xor
add
pop
sub
jmp
popl
pushl
pop
push
mov
push
mov
mov
or
xor
jmp
sub
pop
neg
xchg
not
xchg
xor
add
mov
add
sub
push
pop
pop
push
mov
jmp
pop
mov
jmp
add
sub
xchg
pop
mov
push
mov
mov
and
sub
mov
pop
add
sub
push
mov
jmp
pop
add
add
add
sub
pop
jmp
sub
sub
add
pop
sub
jmp
push
mov
shl
or
push
jmp
mov
add
push
mov
add
pop
jmp
inc
shl
sub
jmp
mov
add
add
mov
add
xchg
pop
movsbl
sub
mov
mov
sub
mov
jmp
mov
jmp
sub
jmp
push
push
push
jmp
pop
push
mov
add
sub
jmp
pushl
pushl
jmp
mov
add
jmp
push
mov
push
push
pop
add
add
xchg
pop
push
jmp
mov
push
mov
jmp
push
mov
add
pop
jmp
mov
add
popl
addl
mov
push
mov
add
sub
mov
jmp
pop
xor
jmp
mov
jmp
pop
add
xchg
mov
pop
mov
add
sub
or
jne
push
pushl
pushl
pop
jmp
mov
jmp
mov
add
add
jmp
push
mov
push
mov
push
jmp
mov
push
mov
push
mov
jmp
add
add
xor
xor
jmp
sub
mov
push
mov
jmp
or
push
push
mov
mov
jmp
add
pop
add
push
pushl
pop
popl
pop
pushl
jmp
xchg
pop
mov
jmp
add
pop
sub
jmp
xor
jmp
push
jmp
pop
push
mov
add
pop
jmp
push
jmp
mov
jmp
push
mov
sub
mov
mov
jmp
dec
xchg
sub
mov
jmp
popl
addl
mov
add
add
jmp
add
sub
pop
xor
xor
jmp
pop
jmp
mov
add
add
xchg
pop
or
jne
push
mov
add
jmp
sub
neg
jmp
mov
jmp
pop
mov
mov
sub
sub
sub
add
pushl
pushl
jmp
push
mov
push
mov
jmp
add
add
jmp
xor
pop
push
mov
sub
sub
add
pop
jmp
pushl
jmp
popl
jmp
add
push
jmp
pop
jmp
pop
push
jmp
add
add
xor
xor
jmp
add
push
jmp
add
add
add
push
mov
sub
jmp
not
add
or
jmp
mov
jmp
pop
pop
add
pop
jmp
mov
mov
add
add
xchg
pop
push
jmp
add
jmp
mov
jmp
mov
jmp
xor
pop
jmp
mov
push
pop
jmp
push
mov
jmp
pop
add
xchg
pop
push
mov
jmp
sub
push
pop
pop
dec
not
and
push
mov
sub
sub
jmp
push
pushl
pop
popl
mov
and
pushf
jmp
sub
mov
jmp
add
mov
pop
push
pop
jmp
push
jmp
sub
xchg
jmp
mov
add
jmp
mov
sub
neg
sub
sub
sub
pop
mov
pop
mov
pop
push
mov
jmp
or
pushl
pop
push
mov
add
jmp
add
pop
pop
push
jmp
xor
pop
push
jmp
mov
notl
pop
push
push
pushl
jmp
add
sub
mov
jmp
mov
xor
jmp
mov
pop
add
pop
sub
add
add
sub
pop
jmp
add
sub
jmp
mov
push
jmp
pop
pop
pop
jmp
pop
add
add
xchg
pop
mov
mov
pop
jmp
mov
push
mov
jmp
xchg
pop
push
jmp
and
pop
jmp
popl
mov
jmp
sub
addl
subl
pop
jmp
mov
neg
or
shr
xor
jmp
pushl
pop
push
mov
jmp
pushl
pop
jmp
add
add
mov
add
sub
mov
jmp
push
mov
xor
jmp
pop
jmp
popl
mov
mov
jmp
and
jmp
sub
add
add
sub
jmp
sub
add
push
mov
shl
add
inc
sub
add
pushl
pop
add
sub
add
add
sub
push
jmp
jmp
pushl
pop
push
jmp
add
pushl
push
mov
push
pop
push
mov
sub
jmp
add
push
jmp
mov
dec
dec
xor
sub
mov
add
push
mov
jmp
add
xchg
pop
push
mov
or
sub
jmp
add
mov
pop
sub
mov
add
jmp
add
jmp
push
push
jmp
inc
or
not
jmp
mov
sub
pop
xor
sub
jmp
push
jmp
mov
add
jmp
mov
add
jmp
pushl
pop
jmp
push
pop
push
mov
add
pop
push
mov
shr
inc
xor
sub
pop
xor
xor
xor
mov
mov
push
pop
jmp
mov
sub
xchg
mov
mov
jmp
push
mov
push
push
jmp
sub
xor
mov
add
add
pop
xchg
jmp
mov
jmp
pop
xchg
pop
mov
push
mov
push
pop
sub
mov
jmp
mov
pushl
jmp
mov
xor
pop
push
jmp
pop
mov
jmp
jmp
push
mov
add
add
xor
xor
xor
mov
jmp
push
jmp
jmp
push
mov
inc
jmp
add
shl
shl
push
mov
jmp
sub
mov
mov
push
mov
push
jmp
popw
jmp
push
mov
push
pushl
jmp
and
pop
jmp
subl
add
addl
pop
jmp
mov
push
push
push
jmp
xor
sub
dec
xor
mov
pop
sub
jmp
sub
mov
mov
mov
jmp
add
mov
xor
mov
jmp
push
sub
mov
addl
pop
add
add
xor
xor
jmp
sub
mov
push
push
jmp
push
mov
add
or
pop
not
jmp
pushl
pop
popl
mov
jmp
sub
jmp
pop
add
subl
jmp
xchg
push
mov
mov
sub
pop
dec
jmp
push
mov
mov
mov
pop
jmp
xor
add
mov
add
sub
mov
mov
push
notl
pushl
jmp
mov
sub
mov
pushl
pushl
pop
add
jmp
add
pop
add
jmp
xchg
pop
jmp
push
pop
add
add
xchg
pop
push
mov
jmp
shl
dec
add
xor
mov
add
jmp
mov
jmp
lods
jmp
add
jmp
add
and
shl
sub
jmp
sub
mov
push
push
mov
mov
mov
jmp
add
jmp
mov
add
jmp
sub
pop
push
mov
add
pop
add
jmp
mov
push
push
pop
xor
or
jmp
sub
push
mov
and
pop
push
jmp
push
mov
jmp
push
mov
add
add
sub
pop
push
mov
add
pop
xor
xor
xor
mov
sub
jmp
sub
mov
push
mov
mov
sub
pop
jmp
mov
jmp
mov
mov
jmp
not
jmp
add
add
jmp
sub
add
add
pushl
jmp
push
mov
jmp
mov
push
jmp
mov
jmp
sub
add
push
jmp
push
pop
neg
or
sub
jmp
mov
jmp
xchg
mov
shll
jmp
mov
xor
pop
sub
xor
pop
xor
dec
not
and
push
mov
jmp
jmp
sub
jmp
push
mov
not
dec
xor
add
jmp
mov
push
pop
push
mov
add
pop
add
xchg
jmp
mov
push
pop
add
pop
jmp
or
add
sub
add
pop
jmp
and
or
sub
sub
pop
jmp
sub
add
jmp
push
jmp
pushl
mov
push
mov
mov
add
push
mov
push
sub
pop
and
push
mov
add
or
jmp
mov
add
add
push
mov
add
jmp
pop
push
jmp
addl
pop
sub
sub
mov
xorl
mov
push
mov
add
add
xchg
pop
jmp
pop
jmp
mov
mov
and
mov
push
push
mov
add
sub
xchg
jmp
dec
xor
jmp
pop
xchg
pop
mov
sub
jmp
neg
neg
sub
jmp
sub
pop
mov
mov
add
push
mov
push
push
push
mov
add
add
mov
pop
sub
sub
add
add
add
mov
add
jmp
add
jmp
mov
jmp
push
decl
pop
add
jmp
pop
mov
add
pop
sub
mov
mov
push
mov
push
jmp
add
push
mov
push
mov
sub
jmp
xchg
mov
pushl
mov
add
push
sub
mov
addl
mov
add
sub
mov
jmp
mov
add
subl
jmp
push
push
mov
push
jmp
pop
sub
mov
pop
shr
push
mov
or
not
sub
sub
pop
xchg
not
xor
xor
jmp
push
mov
and
not
jmp
mov
jmp
push
mov
mov
add
add
xor
xor
jmp
push
push
mov
jmp
dec
and
jmp
mov
add
push
push
push
pop
inc
neg
jmp
xor
xor
jmp
add
add
jmp
mov
sub
mov
mov
add
push
mov
jmp
sub
mov
mov
neg
or
xor
inc
add
xor
mov
add
add
pop
xor
xor
xor
mov
jmp
push
mov
add
add
mov
mov
add
mov
jmp
mov
mov
sub
push
jmp
inc
sub
mov
jmp
pop
jmp
xchg
mov
xor
pushf
jmp
and
and
jmp
xchg
mov
jmp
mov
sub
jmp
push
mov
add
pop
add
sub
pop
dec
add
push
push
mov
mov
pop
jmp
sub
add
add
mov
mov
add
pushl
pop
add
popa
popf
jmp
push
mov
jmp
add
xor
pop
pop
xor
mov
add
jmp
mov
sub
add
jmp
add
sub
jmp
popl
mov
push
push
mov
addl
pop
add
add
push
mov
add
sub
jmp
incl
pushf
jmp
add
add
pushl
pop
add
jmp
xor
jmp
push
mov
or
add
push
mov
jmp
push
mov
mov
add
add
xchg
pop
sub
mov
mov
add
shl
not
inc
sub
add
mov
push
jmp
pop
push
push
push
jmp
sub
add
add
pushl
jmp
sub
pop
jmp
add
jmp
mov
sub
jmp
push
mov
add
jmp
pushl
pop
add
xor
xor
xor
pop
sarw
pushf
jmp
pop
push
mov
jmp
pop
pop
sub
push
mov
jmp
mov
add
pop
sub
mov
mov
jmp
add
mov
push
jmp
add
jmp
push
pop
jmp
pop
popl
push
mov
jmp
shl
add
mov
pop
and
add
add
push
mov
jmp
mov
jmp
add
push
mov
add
jmp
and
pushl
pop
push
mov
jmp
xor
pop
sub
mov
mov
xor
add
shl
xor
add
sub
pop
add
jmp
addl
jmp
xor
push
mov
shl
inc
shl
shl
jmp
push
mov
push
mov
not
and
jmp
add
push
pushl
mov
add
popl
mov
imul
push
mov
push
mov
jmp
add
sub
jmp
add
jmp
pop
push
jmp
mov
push
mov
push
push
mov
shl
push
mov
jmp
sub
jmp
subl
mov
add
add
pop
mov
pop
jmp
push
mov
xor
pop
mov
pop
neg
xchg
not
xchg
inc
jmp
pop
xchg
mov
push
mov
push
push
mov
mov
sub
pop
push
jmp
sub
jmp
push
push
jmp
sub
push
mov
push
jmp
pop
add
add
xchg
pop
push
mov
mov
add
add
xor
jmp
mov
push
pop
push
push
mov
mov
mov
push
mov
jmp
sub
jmp
add
mov
pop
add
pop
jmp
mov
or
jmp
add
pop
jmp
mov
push
mov
push
mov
push
jmp
mov
jmp
pop
push
push
pop
jmp
mov
mov
add
jmp
mov
add
sub
jmp
mov
addl
pushl
jmp
mov
add
push
pushl
pop
jmp
pop
push
mov
push
mov
and
neg
jmp
mov
push
push
jmp
mov
mov
shr
jmp
xor
xor
xor
jmp
xor
pushl
pop
add
add
pop
add
xchg
pop
shr
xor
sub
mov
jmp
push
jmp
push
mov
inc
sub
push
mov
neg
inc
inc
inc
jmp
sub
mov
mov
mov
sub
jmp
mov
mov
jmp
push
mov
jmp
neg
add
sub
pop
add
push
jmp
mov
mov
inc
sub
push
mov
shr
jmp
shr
jmp
sub
jmp
mov
jmp
xchg
pop
or
not
add
xor
jmp
xchg
mov
add
push
pushl
mov
jmp
xchg
jmp
add
add
jmp
pop
jmp
not
not
sub
inc
sub
push
mov
add
add
jmp
push
jmp
mov
bts
pushf
jmp
add
jmp
mov
mov
add
pop
push
subl
pop
jmp
add
add
jmp
xorl
pop
xor
mov
pushl
pop
jmp
add
add
pop
xor
jmp
addl
pop
jmp
push
jmp
mov
add
pop
xor
sub
mov
mov
sub
sub
add
jmp
sub
mov
pop
mov
xor
pop
jmp
mov
add
sub
sub
jmp
push
sub
mov
push
mov
sub
xor
add
mov
add
popl
jmp
popl
jmp
xchg
pop
sarl
pushf
jmp
pushl
mov
push
mov
add
push
push
mov
jmp
div
jmp
mov
add
jmp
add
push
mov
push
mov
push
mov
mov
pop
jmp
add
pop
add
mov
add
sub
dec
add
jmp
shl
push
mov
shr
neg
and
or
xor
sub
jmp
add
shr
inc
add
push
mov
xchg
not
xchg
sub
jmp
add
pop
pop
push
mov
add
pop
xor
xor
xor
pop
jmp
add
push
mov
add
pop
xchg
jmp
push
push
jmp
xor
xor
mov
mov
add
jmp
mov
mov
sub
pop
sub
pop
xchg
mov
mov
jmp
add
sub
xchg
pop
jmp
add
push
mov
or
or
dec
dec
sub
push
mov
sub
sub
pop
sub
add
jmp
popl
jmp
xchg
jmp
pop
push
pushl
mov
push
push
pop
add
add
xor
xor
xor
pop
jmp
pop
xchg
mov
jmp
mov
mov
xor
push
push
jmp
mov
jmp
shl
xor
jmp
push
mov
mov
sub
pop
push
mov
xor
jmp
xor
mov
pop
add
pop
add
push
mov
xor
mov
add
jmp
mov
mov
push
mov
or
push
mov
or
pop
add
and
pop
push
push
mov
mov
pop
xor
jmp
sub
push
mov
sub
add
sub
xor
pop
push
push
mov
push
push
subl
pop
push
mov
add
pop
mov
pop
pop
add
mov
add
jmp
push
mov
push
pop
or
add
push
mov
push
mov
sub
jmp
xor
jmp
pop
push
jmp
mov
mov
pop
add
pop
push
mov
add
pop
push
push
mov
mov
pop
add
mov
jmp
sub
pop
jmp
sub
pop
pushl
pop
jmp
xchg
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
pop
jmp
pop
sub
or
push
mov
push
push
jmp
push
mov
sub
sub
pop
sub
add
add
jmp
or
inc
jmp
add
jmp
xor
mov
jmp
rolw
pushf
jmp
lods
jmp
pop
add
add
sub
sub
pop
movzbl
pushl
jmp
mov
sub
add
pop
xchg
mov
and
pop
or
je
push
push
mov
push
push
pop
jmp
mov
pushl
pop
jmp
pushl
jmp
sub
pushl
pop
jmp
jmp
pop
xor
add
pushl
jmp
push
mov
sub
push
mov
push
mov
jmp
xor
xor
xor
mov
btc
pushf
jmp
or
jmp
pop
push
mov
mov
add
pop
push
mov
jmp
add
jmp
mov
sub
push
jmp
push
mov
dec
jmp
sub
pop
add
addl
mov
jmp
mov
mov
pop
xor
pop
jmp
xchg
mov
jmp
add
jmp
mov
mov
push
mov
push
mov
mov
sub
jmp
push
addl
jmp
pop
jmp
and
pop
not
sub
and
pop
sub
sub
pushl
pop
jmp
mov
mov
jmp
sub
sub
pop
xchg
mov
mov
push
pop
mov
pushl
pushl
jmp
pop
sub
add
add
pop
jmp
decl
pop
add
jmp
inc
not
sub
add
jmp
pop
add
jmp
add
sub
sub
mov
jmp
add
jmp
push
jmp
mov
jmp
sub
jmp
push
mov
push
pop
pop
xor
pop
push
mov
notl
jmp
mov
add
jmp
sub
add
jmp
mov
add
push
mov
jmp
push
mov
add
jmp
mov
jmp
sub
sub
push
mov
or
not
not
push
mov
add
pop
jmp
sub
jmp
add
push
mov
sub
mov
add
xor
jmp
pop
push
mov
jmp
sub
pop
add
add
push
mov
add
not
add
xor
sub
sub
pop
add
mov
add
pushl
pop
add
push
xorl
mov
add
jmp
sub
pop
mov
mov
add
jmp
mov
mov
xor
xor
add
xor
pop
add
mov
jmp
add
pop
xchg
pop
popl
mov
sub
pushf
jmp
add
movzbl
pushw
mov
jmp
lods
sub
mov
push
mov
jmp
mov
add
push
jmp
push
mov
add
add
xchg
pop
sub
jmp
mov
jmp
mov
add
sub
jmp
add
jmp
mov
add
jmp
pop
add
add
sub
push
mov
add
mov
add
add
sub
add
jmp
add
or
pop
jmp
mov
push
pop
push
mov
jmp
push
mov
add
jmp
mov
add
add
push
mov
shr
sub
add
neg
shr
jmp
pop
add
pop
xchg
pop
shr
jmp
push
jmp
add
pop
sub
subl
pop
add
not
add
add
pop
push
jmp
push
jmp
push
mov
add
mov
add
add
xor
xor
xor
pop
popl
mov
jmp
add
sub
mov
mov
shr
shl
jmp
neg
shr
inc
sub
push
sub
mov
xorw
jmp
xchg
jmp
mov
push
push
mov
mov
mov
pop
shl
push
mov
jmp
xor
pop
or
jmp
inc
jmp
shr
push
jmp
mov
mov
pop
mov
jmp
xchg
jmp
push
pushf
jmp
subl
jmp
sub
jmp
push
push
jmp
jmp
xor
jmp
add
sub
mov
mov
sub
jmp
xor
mov
pop
or
push
mov
or
pop
push
mov
jmp
inc
add
add
pop
jmp
mov
sub
jmp
pushl
pop
add
sub
sub
jmp
pop
mov
add
xchg
jmp
inc
push
jmp
sub
or
jmp
or
push
mov
xor
not
jmp
xor
jmp
add
add
push
jmp
add
sub
mov
pop
sub
sub
add
add
sub
add
add
push
mov
add
push
mov
mov
jmp
sub
add
push
mov
jmp
mov
add
push
jmp
and
pop
neg
push
mov
jmp
mov
push
mov
mov
jmp
xor
pop
pop
push
mov
xor
pop
mov
add
push
jmp
or
xchg
not
xchg
jmp
pop
jmp
xor
jmp
mov
push
mov
add
shl
xor
shl
jmp
mov
add
jmp
sub
xchg
mov
mov
popl
mov
add
jmp
pushw
mov
push
push
push
push
mov
add
jmp
push
mov
push
jmp
pop
jmp
pop
sub
jmp
mov
xor
jmp
mov
mov
mov
push
mov
add
add
xchg
pop
mov
pushl
pushl
pop
add
jmp
xchg
jmp
pop
add
mov
add
and
mov
add
sub
mov
mov
add
jmp
xor
add
jmp
pushl
mov
jmp
mov
add
push
mov
sub
sub
jmp
pop
sub
xor
xor
xor
pop
mov
push
pushl
jmp
mov
mov
push
mov
jmp
pop
shr
xor
mov
mov
add
jmp
push
mov
sub
dec
inc
jmp
xor
add
pop
sub
sub
pushl
pop
add
or
je
push
mov
push
mov
jmp
pop
push
mov
push
push
pop
mov
mov
sub
mov
jmp
mov
shl
xor
or
pop
shl
xor
sub
sub
add
pop
push
mov
jmp
add
jmp
add
add
xor
sub
jmp
push
push
pop
sub
mov
pop
xor
mov
add
mov
mov
push
push
mov
jmp
mov
add
xor
xor
xor
pop
bt
pushf
jmp
push
mov
inc
jmp
mov
add
sub
inc
shr
jmp
add
add
add
jmp
sub
add
sub
jmp
add
mov
add
jmp
xor
sub
mov
jmp
push
pop
mov
pop
mov
jmp
pop
sub
pop
push
mov
sub
pop
add
add
sub
add
add
sub
mov
jmp
pop
add
push
mov
add
sub
xchg
pop
mov
mov
shl
sub
add
jmp
pop
jmp
add
jmp
mov
push
mov
jmp
add
pop
sub
mov
push
pop
shl
shl
push
mov
sub
pop
inc
push
mov
dec
shr
and
and
sub
sub
pushl
pop
add
add
jmp
add
pop
push
pushl
pop
popl
pop
mov
sub
mov
sub
push
jmp
pop
push
mov
jmp
addl
pop
push
mov
jmp
add
add
xchg
pop
jmp
mov
push
push
push
pop
push
mov
add
pop
jmp
popl
xchg
push
notl
mov
add
push
push
pop
jmp
add
mov
add
push
jmp
push
mov
sub
jmp
xor
xor
xor
push
notl
pop
xchg
shl
sub
mov
mov
and
neg
shr
jmp
add
add
mov
add
sub
xchg
mov
mov
mov
push
mov
push
mov
and
jmp
pop
xor
mov
pop
mov
add
mov
jmp
add
xor
pushl
mov
add
add
and
mov
add
shr
xor
jmp
pop
inc
dec
jmp
mov
mov
jmp
mov
pop
xor
xor
jmp
sub
sub
add
pop
push
pushl
mov
push
mov
sub
mov
addl
mov
add
jmp
and
jmp
pop
push
mov
add
pop
add
pop
sub
xchg
jmp
mov
add
add
sub
sub
push
mov
add
jmp
xchg
jmp
sub
pop
jmp
pop
jmp
mov
mov
pop
mov
pop
neg
push
mov
jmp
shr
push
mov
jmp
sub
add
sub
add
pop
jmp
xor
mov
mov
add
dec
jmp
shl
dec
add
jmp
add
jmp
mov
jmp
pop
jmp
add
mov
jmp
not
and
inc
add
sub
add
pop
neg
or
or
shl
add
sub
pop
mov
add
push
push
mov
jmp
dec
sub
xor
pop
sub
sub
add
add
jmp
pop
popl
jmp
pop
add
push
push
push
pop
sub
mov
pop
jmp
xchg
jmp
mov
jmp
mov
jmp
sub
add
jmp
xchg
pop
or
sub
add
sub
push
jmp
add
mov
jmp
sub
sub
mov
add
jmp
xor
jmp
mov
add
add
jmp
sub
mov
jmp
mov
sub
mov
push
jmp
sub
and
jmp
mov
add
pushl
mov
add
jmp
sub
mov
add
push
jmp
mov
or
push
mov
or
jmp
mov
jmp
mov
jmp
xor
pop
jmp
mov
push
jmp
pop
sub
add
mov
add
mov
jmp
mov
add
sub
mov
push
push
mov
push
mov
add
add
jmp
xor
xor
add
xor
add
pop
sub
xchg
pop
mov
push
pop
push
jmp
mov
push
mov
shl
jmp
pop
pop
jmp
add
jmp
pushl
mov
sub
jmp
add
mov
push
jmp
add
push
mov
push
mov
mov
pop
add
sub
mov
mov
add
add
pop
pop
pop
pop
push
mov
jmp
push
jmp
and
jmp
pop
mov
mov
shl
sub
add
pop
push
mov
add
jmp
add
popl
mov
pushl
pushl
pushl
pop
add
jmp
pop
mov
mov
add
sub
sub
mov
add
jmp
pop
sub
jmp
add
add
pop
add
jmp
mov
sub
mov
jmp
sub
add
push
jmp
pop
sub
mov
push
mov
and
xor
mov
pop
or
xor
push
jmp
pushl
pop
push
mov
jmp
mov
jmp
add
pop
add
add
add
sub
jmp
pop
popl
jmp
push
pop
push
mov
add
pop
add
xor
xor
xor
pop
sub
xchg
pop
mov
jmp
mov
mov
add
add
sub
mov
push
jmp
sub
push
push
push
mov
mov
jmp
add
pop
jmp
xor
pop
push
mov
mov
jmp
popl
pop
mov
push
jmp
decw
pushf
jmp
mov
push
mov
sub
mov
push
mov
add
pop
mov
add
push
jmp
mov
push
mov
jmp
sub
jmp
mov
push
pop
pop
xchg
not
xor
jmp
push
mov
push
pop
sub
mov
mov
push
decl
pop
jmp
inc
jmp
mov
push
pushl
mov
push
jmp
pop
pop
mov
sub
mov
push
mov
push
mov
add
add
xchg
pop
add
add
xor
xor
xor
pop
jmp
push
mov
push
mov
shr
push
mov
or
not
inc
sub
or
pop
not
push
mov
jmp
mov
sub
add
add
pop
add
sub
jmp
mov
jmp
sub
jmp
push
mov
add
push
sub
jmp
add
pop
add
subl
pop
mov
jmp
pop
add
jmp
pushl
pop
sub
mov
jmp
push
mov
xor
pop
jmp
pop
add
and
push
mov
sub
jmp
push
mov
add
sub
xchg
pop
mov
pushl
pop
jmp
push
mov
mov
jmp
push
pushl
pop
add
sub
mov
mov
add
pop
push
mov
jmp
xor
sub
add
sub
pop
xchg
pop
mov
push
push
mov
mov
sub
jmp
add
xor
pop
sub
push
push
mov
mov
pop
sub
add
add
pop
add
jmp
push
mov
push
mov
push
mov
push
push
mov
neg
shr
jmp
push
mov
push
mov
and
pop
shl
neg
add
jmp
add
jmp
add
push
push
push
jmp
notl
pop
not
jmp
mov
jmp
sub
push
pushl
pop
popl
mov
mov
addl
popl
jmp
pop
xchg
mov
sub
mov
jmp
mov
add
push
mov
sub
pop
add
jmp
push
mov
push
mov
notb
jmp
sub
add
add
pop
jmp
xor
push
mov
inc
shl
dec
xor
jmp
mov
push
mov
add
sub
xchg
jmp
not
jmp
sub
mov
jmp
sub
jmp
add
push
jmp
pop
add
popl
jmp
lods
sub
mov
mov
shr
jmp
pop
xchg
pop
add
push
mov
jmp
push
mov
mov
pop
mov
add
and
push
mov
and
sub
and
jmp
xor
add
pop
add
jmp
mov
push
push
push
jmp
mov
pop
jmp
xor
pop
pop
mov
push
mov
jmp
mov
mov
xor
pop
add
pushl
pop
jmp
bts
pushf
jmp
mov
push
push
mov
push
jmp
push
mov
jmp
shr
xor
push
jmp
mov
jmp
or
shl
sub
mov
push
mov
jmp
push
mov
xor
add
add
pop
sub
jmp
push
mov
mov
push
mov
add
jmp
add
pushl
pop
add
jmp
add
jmp
mov
add
add
xchg
pop
or
pushf
jmp
mov
jmp
add
add
xor
xor
xor
mov
xor
mov
push
mov
mov
push
mov
jmp
mov
sub
add
jmp
sub
mov
jmp
push
mov
push
mov
jmp
not
jmp
pop
or
shl
jmp
pushl
pushl
jmp
or
pop
jmp
xor
xor
mov
push
mov
push
mov
shr
push
mov
xor
pop
shr
push
jmp
add
push
jmp
push
jmp
popl
jmp
pop
mov
pop
jmp
pop
push
jmp
pop
sub
push
sub
mov
jmp
pop
mov
pushl
mov
jmp
mov
sub
pop
neg
shr
and
xor
add
pop
neg
push
mov
shr
sub
not
xor
and
pop
add
add
jmp
mov
add
sub
xchg
jmp
add
jmp
mov
add
popl
pop
mov
jmp
push
mov
push
jmp
shr
xor
add
add
jmp
push
jmp
add
push
mov
push
pop
pop
mov
add
sub
add
add
pushl
mov
push
mov
push
mov
jmp
sub
add
push
jmp
sub
mov
jmp
pushl
jmp
mov
add
sub
mov
pushl
mov
add
popl
pop
incw
pushf
jmp
or
sub
sub
jmp
inc
xor
add
pop
pushl
pushl
pop
add
add
sub
add
add
xorl
jmp
sub
sub
pop
add
add
sub
push
push
mov
mov
xor
push
notb
pop
add
jmp
add
pop
push
mov
push
jmp
add
mov
add
sub
mov
add
add
push
mov
push
jmp
mov
pop
jmp
mov
push
mov
push
jmp
mov
push
mov
mov
jmp
pop
jmp
shl
shl
push
mov
push
mov
jmp
shr
add
neg
or
shr
xor
sub
pop
jmp
sub
jmp
and
add
jmp
pop
jmp
pop
jmp
mov
sub
pop
jmp
sub
sub
pop
push
mov
push
mov
shl
inc
jmp
mov
push
mov
jmp
pushl
mov
add
popl
mov
jmp
sub
jmp
mov
add
shr
xor
push
mov
xor
xor
xor
sub
jmp
add
mov
jmp
shlb
pushf
jmp
push
mov
mov
jmp
add
pop
pop
sub
mov
mov
jmp
pop
not
sub
xor
pop
mov
pop
jmp
sub
xchg
pop
jmp
mov
jmp
pop
jmp
xchg
pop
push
push
pop
sub
jmp
mov
add
sub
xchg
mov
mov
pushl
pop
popl
mov
jmp
push
jmp
xchg
jmp
shl
and
push
jmp
push
mov
sub
pop
mov
jmp
mov
mov
add
mov
add
push
jmp
mov
jmp
mov
add
add
xchg
pop
subl
add
push
mov
jmp
mov
jmp
mov
jmp
add
pop
add
add
push
jmp
mov
push
mov
jmp
add
pop
mov
pushl
jmp
mov
jmp
xchg
pop
mov
pushl
pushl
pop
push
mov
mov
add
add
xchg
pop
popl
mov
jmp
add
jmp
xor
shr
shl
sub
jmp
add
xor
xor
xor
jmp
mov
jmp
mov
push
jmp
pop
add
pushl
pushl
pop
add
push
mov
add
add
xchg
jmp
pop
xchg
pop
jmp
mov
mov
add
mov
add
push
pushl
pop
popl
mov
or
pushf
jmp
xchg
pop
add
push
mov
add
jmp
sub
add
add
jmp
pop
mov
jmp
sub
xchg
mov
mov
jmp
add
add
xchg
mov
pushl
jmp
pop
push
mov
add
jmp
sub
pop
sub
sub
add
mov
add
jmp
mov
jmp
pop
jmp
pushl
jmp
add
sub
mov
jmp
add
jmp
jmp
xor
xor
xor
push
push
jmp
mov
shr
add
sub
sub
add
jmp
push
mov
add
pop
jmp
not
xor
jmp
pop
push
push
mov
add
add
add
jmp
sub
sub
pop
add
pop
push
mov
add
add
mov
push
jmp
add
push
mov
shr
jmp
sub
mov
push
mov
add
jmp
and
add
neg
neg
jmp
sub
mov
mov
jmp
mov
jmp
mov
add
jmp
neg
add
sub
mov
add
sub
add
add
push
mov
shr
xor
add
pop
push
mov
add
sub
xchg
jmp
add
sub
add
push
mov
add
pop
pop
push
mov
push
pop
jmp
mov
push
mov
jmp
push
mov
add
jmp
add
add
jmp
mov
jmp
xor
xor
xor
sub
jmp
add
sub
xchg
pop
mov
mov
not
and
or
jmp
sub
add
add
jmp
push
jmp
xor
pop
push
jmp
push
mov
add
pop
push
mov
mov
push
mov
push
mov
addl
pop
add
sub
xchg
pop
mov
push
mov
add
sub
jmp
addl
pop
push
mov
jmp
mov
jmp
xchg
not
jmp
pop
jmp
mov
push
mov
push
mov
addl
pop
jmp
mov
push
mov
mov
mov
pop
add
jmp
mov
jmp
push
pushl
jmp
push
jmp
shl
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
jmp
shr
sub
mov
mov
sub
jmp
mov
jmp
add
mov
add
push
jmp
pop
xor
pop
pop
push
mov
xor
jmp
add
xchg
jmp
add
jmp
mov
jmp
pop
push
mov
xor
jmp
add
push
jmp
sub
jmp
mov
shr
sub
add
jmp
mov
xor
pop
not
shl
jmp
pop
and
shl
xor
jmp
pop
pop
jmp
pop
add
push
mov
sub
pop
xchg
pop
mov
jmp
popl
jmp
add
jmp
push
push
jmp
xor
pop
sub
jmp
mov
mov
xor
sub
inc
jmp
pushl
mov
add
popl
pop
jmp
push
mov
mov
neg
jmp
mov
jmp
xchg
mov
sub
mov
sub
mov
jmp
xchg
pop
push
mov
mov
pop
jmp
sub
add
jmp
push
jmp
pop
add
xchg
jmp
pop
xor
pushl
mov
add
jmp
add
push
push
mov
or
inc
push
mov
not
jmp
dec
jmp
push
mov
mov
pop
pushl
mov
add
add
add
sub
jmp
pop
push
mov
shr
shl
jmp
sub
sub
add
add
pop
add
push
pushl
pop
jmp
pushl
jmp
push
jmp
or
pop
jmp
sub
push
mov
sub
jmp
inc
xor
mov
pop
jmp
xor
jmp
push
mov
xor
jmp
pop
push
mov
mov
pop
jmp
add
jmp
or
pushl
pop
jmp
mov
jmp
add
pop
sub
sub
push
mov
jmp
mov
xor
xor
jmp
xor
xor
xor
jmp
add
sub
jmp
decl
pop
add
add
pop
jmp
mov
jmp
add
sub
add
add
mov
add
push
mov
jmp
mov
shr
sub
and
add
add
add
mov
add
xor
pop
add
mov
pop
sub
add
pushl
pop
add
add
xchg
mov
movsbw
pushw
mov
jmp
push
jmp
pop
add
jmp
add
jmp
pushw
jmp
pop
push
push
pop
push
jmp
mov
pop
neg
xor
inc
jmp
add
push
jmp
push
mov
push
pushl
pop
push
mov
push
mov
not
neg
xor
xor
add
pop
sub
mov
push
pop
shr
push
jmp
mov
add
jmp
xor
mov
pop
sub
sub
jmp
push
jmp
pop
jmp
pop
push
mov
and
sub
xor
pop
jmp
sub
jmp
xor
pop
add
sub
add
add
pop
sub
push
pushl
pop
popl
pop
mov
jmp
pop
add
xor
xor
xor
mov
test
pushf
jmp
pushl
pushl
pop
push
mov
push
mov
sub
add
add
pop
jmp
xor
pop
jmp
pop
add
jmp
mov
push
jmp
mov
pop
sub
mov
mov
jmp
mov
shl
jmp
xor
xor
xor
pop
mov
sub
push
push
popl
addl
popl
addl
mov
add
push
mov
add
xor
add
jmp
push
mov
mov
sub
jmp
add
jmp
xchg
jmp
mov
sub
mov
push
mov
push
mov
jmp
mov
jmp
mov
jmp
sub
pop
xchg
mov
mov
push
mov
add
push
mov
mov
add
jmp
pop
popl
pop
mov
push
pop
push
mov
mov
jmp
mov
mov
add
add
pushl
pop
add
add
push
jmp
pushl
pushl
jmp
pop
jmp
pop
add
xchg
pop
add
xor
xor
jmp
push
push
mov
jmp
push
mov
push
mov
sub
mov
push
pop
not
or
or
xor
mov
pop
subl
jmp
mov
mov
push
mov
push
mov
add
push
push
jmp
mov
add
shl
and
push
mov
mov
push
mov
xor
pop
add
mov
add
add
pop
jmp
pop
movzbl
jmp
neg
neg
shr
xor
push
mov
jmp
sub
add
add
mov
push
mov
add
push
mov
sub
sub
sub
jmp
mov
jmp
push
push
mov
jmp
push
push
mov
mov
pop
and
and
sub
add
jmp
add
pop
jmp
push
mov
push
jmp
push
mov
push
jmp
xor
add
jmp
push
mov
jmp
pop
jmp
push
jmp
add
xchg
pop
xor
xor
xor
mov
pushl
jmp
mov
xor
mov
add
sub
add
jmp
mov
add
push
mov
add
add
xchg
jmp
sub
xchg
pop
mov
pushl
pop
jmp
mov
pushl
mov
add
push
sub
push
popl
push
mov
add
pop
mov
push
mov
push
mov
jmp
mov
mov
pop
jmp
inc
jmp
pop
mov
push
jmp
add
popl
mov
jmp
movzbw
push
pushf
jmp
push
sub
mov
addl
mov
add
push
mov
neg
shr
push
mov
mov
xor
pop
add
pop
push
mov
jmp
pop
xchg
mov
add
sub
xchg
jmp
xchg
pop
mov
mov
push
mov
add
jmp
mov
push
mov
mov
mov
add
pop
pop
mov
jmp
push
push
pop
jmp
add
add
sub
jmp
mov
inc
push
mov
jmp
pop
add
sub
mov
push
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
mov
sub
xor
jmp
pop
popl
pop
push
jmp
and
not
jmp
push
pop
mov
pop
add
sub
add
add
push
mov
sub
pop
pushl
pop
push
mov
add
add
xchg
pop
jmp
push
mov
mov
push
jmp
mov
jmp
add
sub
xchg
pop
mov
mov
add
jmp
push
mov
jmp
push
jmp
add
jmp
pop
jmp
push
mov
jmp
push
mov
jmp
pushl
pop
push
mov
jmp
idiv
jmp
add
pop
neg
inc
add
mov
pop
sub
pop
mov
mov
jmp
mov
not
xor
not
xor
jmp
shl
jmp
lods
sub
jmp
add
sub
push
pushl
pop
jmp
lods
push
sub
mov
jmp
push
pop
add
add
push
mov
jmp
pop
pop
sub
jmp
add
mov
add
sub
pushl
jmp
pop
sub
xchg
pop
jmp
mov
jmp
mov
push
mov
add
sub
jmp
add
pop
push
push
push
pop
push
push
push
mov
add
xor
mov
pop
jmp
pop
pop
push
mov
jmp
sub
jmp
pushl
jmp
inc
not
jmp
jmp
add
push
mov
jmp
notl
pop
add
add
jmp
or
pop
sub
dec
neg
sub
mov
pop
add
pop
add
jmp
xchg
jmp
add
sub
sub
pop
mov
jmp
add
add
xchg
pop
shr
xor
push
mov
jmp
sub
mov
addl
pushl
jmp
dec
push
mov
xor
mov
add
push
jmp
mov
jmp
pop
jmp
mov
jmp
pop
add
push
mov
add
jmp
push
sub
mov
push
jmp
mov
xor
add
add
jmp
pop
add
pop
push
mov
not
or
jmp
add
pushw
mov
push
mov
mov
mov
pushl
pop
jmp
push
pop
neg
xor
sub
mov
pop
push
mov
jmp
sub
add
xor
shr
add
add
jmp
add
push
mov
add
jmp
xchg
mov
mov
mov
push
jmp
mov
push
mov
add
add
jmp
pushl
pop
jmp
pop
sub
add
jmp
mov
jmp
pop
push
push
pop
jmp
pushw
sub
mov
add
dec
add
push
push
mov
jmp
mov
sub
mov
jmp
xor
xor
xor
push
jmp
xor
jmp
mov
jmp
sub
add
jmp
pushl
pushl
jmp
pop
push
jmp
add
jmp
push
push
mov
mov
xor
and
shr
jmp
pop
push
mov
push
mov
xor
mov
add
sub
add
mov
add
jmp
mov
push
mov
jmp
add
xor
xor
jmp
shl
shr
jmp
pop
add
xchg
jmp
pop
add
jmp
xor
mov
push
mov
push
pop
add
sub
xor
xor
xor
mov
jmp
mov
push
push
pop
add
mov
pop
mov
add
jmp
push
mov
sub
mov
jmp
add
add
jmp
pushl
pop
add
push
mov
push
addl
pop
sub
push
jmp
mov
jmp
mov
jmp
mov
add
push
jmp
add
pop
push
push
jmp
pushw
mov
jmp
mov
mov
push
mov
shl
jmp
mov
pop
xor
sub
mov
mov
add
jmp
pop
pop
push
push
mov
mov
jmp
add
mov
mov
add
sub
sub
mov
push
pop
jmp
pop
mov
add
jmp
push
mov
add
push
jmp
mov
add
pop
shr
xor
push
mov
add
jmp
add
add
jmp
mov
push
push
mov
mov
pop
xor
jmp
pop
and
jmp
mov
and
jmp
mov
xor
jmp
pop
sub
sub
add
pop
sub
push
mov
sub
jmp
mov
mov
sub
add
add
jmp
mov
jmp
mov
add
push
mov
mov
push
mov
add
jmp
xor
pop
mov
push
jmp
push
mov
inc
or
add
sub
jmp
pop
jmp
sub
push
mov
push
mov
add
pop
push
jmp
pop
push
push
jmp
pushw
jmp
push
mov
add
jmp
push
mov
mov
shl
add
mov
jmp
and
jmp
pop
sub
xchg
pop
mov
jmp
mov
mov
shr
push
jmp
pushl
popf
pop
adc
pushf
jmp
pop
xor
push
jmp
mov
add
add
jmp
push
jmp
sub
mov
mov
push
mov
shr
push
mov
push
mov
jmp
pop
mov
push
mov
add
add
xchg
jmp
pop
mov
pushl
jmp
mov
push
mov
mov
pop
sub
add
mov
pop
inc
push
jmp
xchg
jmp
pop
add
xor
push
jmp
mov
jmp
add
sub
jmp
push
push
mov
add
sub
xchg
pop
jmp
push
mov
sub
jmp
add
mov
push
mov
push
mov
add
pop
add
jmp
push
mov
add
add
xchg
jmp
pop
xor
xor
jmp
xor
xor
sub
neg
add
add
jmp
and
jmp
push
mov
jmp
mov
add
sub
push
mov
sub
sub
add
pop
sub
add
push
mov
add
pushl
pop
push
jmp
pop
movl
jmp
push
mov
mov
add
jmp
mov
add
neg
jmp
add
push
mov
push
pushl
pop
add
jmp
push
jmp
push
mov
or
pop
push
push
jmp
xchg
jmp
mov
jmp
mov
add
add
sub
pop
jmp
mov
mov
mov
add
pop
mov
push
push
jmp
xor
sub
jmp
push
mov
add
add
jmp
push
jmp
pop
add
mov
push
mov
add
add
xchg
mov
add
add
sub
sub
sub
sub
mov
mov
add
sub
sub
mov
add
pop
xor
jmp
dec
jmp
add
add
mov
add
sub
mov
mov
add
add
add
push
mov
sub
pop
mov
add
push
jmp
push
mov
jmp
add
popl
mov
jmp
sub
push
mov
push
mov
jmp
sub
jmp
push
mov
jmp
push
jmp
mov
mov
add
push
jmp
add
sub
mov
mov
sub
add
add
jmp
push
mov
mov
jmp
mov
push
mov
jmp
sub
pop
xor
jmp
pop
add
xor
xor
xor
mov
mov
sub
mov
jmp
add
xor
pushl
pop
jmp
pop
pop
xchg
mov
push
mov
jmp
add
jmp
push
jmp
mov
xor
xor
add
and
pop
push
jmp
pop
pop
push
jmp
push
mov
xor
pop
jmp
mov
pop
pop
and
pop
or
je
pushl
sub
jmp
mov
push
jmp
add
popl
pop
jmp
mov
push
mov
mov
jmp
xchg
pop
push
jmp
mov
xor
mov
pop
jmp
push
pushl
pop
popl
pop
jmp
add
push
mov
add
sub
xchg
pop
jmp
xor
pushl
jmp
add
jmp
not
sub
sub
mov
pop
sub
and
push
subl
mov
add
push
mov
sub
and
and
dec
sub
add
pop
sub
pop
mov
mov
jmp
pop
dec
not
push
push
pop
add
sub
xchg
pop
mov
jmp
sub
pop
add
add
jmp
shr
shr
jmp
pop
and
shl
or
sub
and
pop
shl
push
mov
or
pop
jmp
mov
sub
pop
xor
pop
mov
pop
push
mov
xor
jmp
mov
jmp
push
push
jmp
mov
push
push
pop
add
add
xor
xor
xor
pop
push
mov
xor
jmp
pushl
pop
push
jmp
shl
sub
mov
mov
sub
xor
pop
push
push
pop
pop
push
notl
pop
xchg
jmp
pop
jmp
not
add
push
mov
add
jmp
mov
pop
add
pop
pop
jmp
add
add
add
jmp
xor
sub
pop
add
push
mov
inc
jmp
sub
add
add
pop
pushl
pop
add
add
add
sub
pushw
mov
mov
add
mov
push
jmp
mov
addl
subl
jmp
add
pop
jmp
mov
add
inc
shl
neg
sub
xor
sub
pop
jmp
inc
push
mov
not
neg
jmp
xor
xor
xor
pop
push
push
pop
jmp
push
mov
jmp
mov
mov
push
mov
mov
jmp
mov
pop
sub
jmp
pushl
pop
add
push
jmp
sub
jmp
sub
add
push
mov
sub
mov
mov
push
pop
mov
jmp
pushl
pushl
jmp
push
jmp
mov
mov
sub
add
jmp
mov
pushl
pushl
jmp
add
pop
add
jmp
sub
jmp
add
mov
pop
jmp
push
mov
mov
add
jmp
push
mov
add
jmp
push
jmp
mov
push
mov
mov
push
jmp
push
pushl
jmp
mov
add
push
jmp
mov
jmp
push
pop
sub
jmp
push
mov
addl
sub
subl
pop
pop
add
sub
mov
push
pop
push
mov
add
pop
push
mov
sub
pop
jmp
pop
jmp
pushl
mov
push
mov
mov
push
push
pop
push
push
push
mov
mov
pop
mov
mov
jmp
add
add
push
pushl
jmp
sub
add
add
jmp
mov
pop
push
jmp
pop
xor
xor
jmp
push
jmp
pushl
pop
sub
mov
mov
push
jmp
push
push
sub
jmp
popl
pop
push
mov
mov
push
mov
jmp
neg
xor
add
mov
add
sub
add
add
push
jmp
push
mov
xor
add
pop
xor
or
sub
add
jmp
mov
push
mov
push
jmp
add
add
push
jmp
xor
dec
sub
mov
push
jmp
sub
pop
pushl
pop
push
mov
jmp
mov
jmp
pop
shl
jmp
pop
add
shl
add
jmp
add
xor
jmp
push
mov
jmp
mov
add
add
sub
sub
jmp
pushw
mov
push
pushf
jmp
mov
mov
addl
sub
subl
mov
jmp
push
xchg
not
xchg
jmp
pop
add
mov
jmp
mov
push
mov
mov
add
add
jmp
mov
jmp
push
mov
jmp
push
mov
and
shl
add
add
sub
sub
add
jmp
pop
push
mov
add
jmp
pushl
pushl
pop
jmp
mov
add
pop
xor
jmp
mov
push
push
mov
add
push
mov
mov
jmp
mov
push
mov
add
jmp
add
sub
sub
mov
push
mov
jmp
sub
add
mov
add
add
xchg
pop
add
jmp
or
jmp
mov
jmp
inc
sub
add
pop
push
mov
add
pop
xchg
pop
sub
xor
xor
jmp
popl
jmp
pop
push
push
pop
push
push
mov
add
add
push
jmp
pop
jmp
add
jmp
add
xchg
pop
jmp
pop
add
push
pushl
pop
popl
mov
xchg
pop
shlw
pushf
jmp
jmp
pushl
pushl
jmp
mov
push
push
mov
add
add
sub
xchg
jmp
pop
inc
add
xor
jmp
mov
add
mov
add
xchg
pop
push
mov
push
pop
push
mov
add
xor
add
add
sub
jmp
add
jmp
pop
add
sub
sub
pop
pop
pop
and
jmp
sub
and
shr
push
mov
or
jmp
xor
xor
xor
pop
mov
push
jmp
mov
jmp
pushl
mov
push
mov
mov
add
jmp
or
push
push
push
mov
jmp
mov
add
add
jmp
add
push
pop
pushl
mov
add
jmp
add
xchg
pop
jmp
sub
jmp
cmp
je
pushl
jmp
sub
pop
jmp
pop
push
jmp
shl
sub
sub
pushl
mov
add
add
add
jmp
pop
pop
add
jmp
push
push
mov
push
mov
or
pop
jmp
mov
mov
jmp
inc
push
jmp
xor
pop
jmp
pop
xor
shl
xor
jmp
xor
or
add
add
jmp
mov
and
pushl
pop
jmp
push
jmp
inc
sub
push
jmp
xor
movzbl
mov
sub
mov
sub
mov
addl
pop
jmp
push
mov
or
push
mov
shl
sub
shr
jmp
not
jmp
push
mov
jmp
add
jmp
push
mov
add
pop
push
jmp
sub
jmp
push
jmp
dec
add
sub
push
subl
pop
add
jmp
mov
push
push
jmp
popl
addl
pushl
pushl
pop
add
push
mov
mov
push
mov
add
sub
xchg
jmp
push
pushw
jmp
mov
neg
sub
jmp
add
jmp
push
jmp
mov
jmp
mov
add
pop
sub
pop
push
mov
xor
pop
xor
pop
sub
mov
push
mov
mov
push
push
pop
mov
mov
add
mov
push
jmp
pop
sub
mov
add
add
add
pushl
pop
push
jmp
pushl
jmp
push
jmp
push
mov
jmp
sub
mov
pop
sub
jmp
pop
add
mov
add
jmp
add
xchg
pop
push
mov
sub
jmp
mov
add
sub
add
push
jmp
pushl
jmp
add
mov
jmp
pushl
pop
jmp
inc
sub
jmp
mov
jmp
mov
sub
mov
mov
push
mov
jmp
mov
add
add
pop
sub
sub
mov
add
sub
sub
jmp
add
push
jmp
mov
jmp
mov
jmp
mov
jmp
or
push
push
mov
jmp
push
pop
and
sub
jmp
xor
sub
pop
add
jmp
mov
sub
mov
mov
push
push
pop
push
mov
xor
jmp
push
push
jmp
sub
pop
add
jmp
pushl
pop
jmp
push
mov
mov
pop
shr
jmp
pushl
jmp
mov
jmp
add
jmp
pushl
pop
push
push
pop
push
mov
jmp
mov
dec
add
dec
jmp
xor
pushl
jmp
push
jmp
push
mov
mov
mov
pop
xor
dec
shr
xor
and
sub
jmp
mov
add
pop
jmp
mov
push
push
jmp
popl
mov
mov
pushl
pop
popl
xor
xor
jmp
mov
push
jmp
push
jmp
mov
xor
mov
pushl
pop
add
jmp
xor
mov
push
push
jmp
mov
jmp
push
pushf
jmp
mov
add
add
xchg
mov
push
mov
sub
mov
add
add
sub
add
push
mov
jmp
xor
jmp
add
add
jmp
pop
add
pushl
pop
push
jmp
jmp
pop
add
jmp
add
pop
push
mov
pushl
mov
jmp
mov
not
inc
jmp
push
mov
add
pop
push
pushl
pop
popl
pop
xor
xor
jmp
mov
add
pop
push
mov
pushl
pop
popl
pop
jmp
mov
sub
jmp
and
inc
and
jmp
add
pop
jmp
add
jmp
mov
jmp
push
mov
add
add
xchg
pop
push
mov
add
jmp
xchg
mov
xchg
pop
jmp
add
pop
add
add
sub
push
push
jmp
mov
jmp
add
add
pop
add
add
jmp
pop
push
mov
add
jmp
pop
push
push
jmp
mov
sub
jmp
add
mov
add
jmp
sub
add
add
pop
xor
xor
jmp
mov
sub
pop
mov
pop
shr
or
dec
add
sub
add
add
pushl
pop
push
push
mov
add
push
mov
jmp
add
pop
and
jmp
push
mov
jmp
pushl
mov
sub
jmp
pop
jmp
mov
jmp
mov
neg
and
sub
push
mov
sub
mov
push
mov
add
add
jmp
mov
push
mov
push
mov
add
pop
add
jmp
add
pop
sub
jmp
xor
xor
jmp
mov
xor
pushf
jmp
mov
add
mov
pop
push
push
jmp
xor
jmp
sub
mov
mov
add
mov
jmp
push
jmp
xor
jmp
push
mov
push
push
push
pop
inc
add
mov
pop
mov
pop
add
add
sub
pushl
mov
add
add
sub
mov
mov
sub
jmp
add
jmp
sub
mov
mov
not
not
sub
sub
and
mov
add
jmp
pop
xchg
sub
add
sub
sub
sub
add
jmp
xor
xor
mov
mov
jmp
mov
jmp
add
jmp
xor
xor
pop
jmp
pop
push
mov
add
mov
push
mov
add
add
xchg
pop
sub
jmp
push
push
jmp
mov
push
mov
mov
sub
pop
jmp
sub
mov
pop
jmp
sub
mov
mov
push
jmp
push
jmp
mov
push
jmp
jmp
add
add
xor
xor
xor
mov
push
push
mov
push
jmp
inc
add
jmp
xor
pop
push
mov
add
sub
xchg
mov
jmp
xchg
jmp
push
mov
jmp
mov
addl
pop
push
mov
xor
add
pop
add
xchg
pop
xchg
pop
popl
pop
jmp
pop
add
add
push
mov
mov
sub
add
add
jmp
shl
and
neg
add
jmp
sub
xor
pop
jmp
add
add
pop
add
sub
push
mov
mov
push
mov
push
pushl
pop
jmp
push
mov
sub
xor
pop
push
mov
mov
pop
pop
mov
add
pop
jmp
pushl
pop
popl
pop
jmp
xchg
mov
mov
push
pushf
jmp
shl
sub
jmp
mov
add
mov
pop
or
jmp
sub
mov
pop
pop
push
push
jmp
add
addl
pop
jmp
sub
mov
mov
push
mov
neg
shr
shl
add
sub
jmp
xor
sub
push
mov
jmp
mov
jmp
add
pop
push
jmp
mov
jmp
add
add
jmp
xchg
mov
cmp
pushf
jmp
mov
mov
push
xorl
jmp
xor
not
inc
jmp
mov
sub
pop
jmp
xor
xor
jmp
mov
pop
pop
or
inc
xor
xor
add
jmp
push
jmp
dec
push
jmp
mov
push
mov
not
jmp
sub
mov
jmp
xor
jmp
add
mov
push
mov
jmp
dec
jmp
add
xor
xor
xor
pop
mov
mov
add
jmp
sub
pop
add
jmp
add
mov
push
jmp
pushw
mov
pushw
mov
pushw
mov
add
pushw
mov
jmp
push
mov
push
jmp
sub
sub
jmp
add
xchg
jmp
add
addl
pop
pop
push
mov
or
shl
shl
sub
mov
mov
not
inc
jmp
push
push
jmp
add
pop
add
sub
push
mov
mov
push
mov
sub
mov
add
xor
jmp
sub
mov
jmp
or
add
or
pop
dec
push
mov
add
shl
shr
push
mov
or
inc
add
jmp
add
jmp
push
sub
mov
mov
mov
pop
jmp
sub
push
mov
pushl
pushl
pop
jmp
push
push
push
jmp
push
jmp
push
push
mov
shl
sub
mov
pop
not
jmp
xchg
pop
push
jmp
sub
sub
mov
jmp
pop
xchg
pop
mov
mov
push
push
mov
jmp
mov
jmp
add
jmp
add
pop
push
mov
shl
push
decl
jmp
pushl
push
jmp
xchg
not
xchg
push
jmp
xor
jmp
add
push
jmp
pop
mov
mov
dec
push
mov
sub
sub
mov
add
add
sub
push
mov
jmp
add
add
jmp
lods
sub
mov
mov
and
push
mov
sub
jmp
push
jmp
sub
sub
pop
pushl
pushl
pop
sub
mov
mov
add
add
jmp
mov
push
mov
add
add
add
xchg
mov
sub
mov
push
mov
add
sub
xchg
pop
mov
mov
mov
mov
add
add
jmp
lods
push
mov
add
sub
jmp
mov
add
add
xchg
pop
push
push
mov
jmp
mov
shr
jmp
subl
push
mov
subl
jmp
pop
sub
xchg
pop
mov
push
pushl
pop
jmp
mov
add
sub
sub
jmp
add
pop
sub
push
mov
add
pushl
mov
push
mov
add
jmp
mov
push
mov
jmp
pushl
pushl
pop
add
popl
mov
idiv
push
mov
add
sub
xchg
pop
mov
mov
add
sub
xchg
pop
mov
mov
push
push
mov
jmp
add
add
xchg
pop
push
jmp
add
pushl
pop
add
push
mov
xchg
not
jmp
pop
jmp
push
mov
add
pop
push
jmp
push
mov
sub
pop
or
pop
xor
add
add
sub
jmp
push
pushf
jmp
push
popl
addl
pushl
jmp
sub
mov
jmp
sub
mov
add
sub
mov
mov
xor
jmp
push
notl
pop
sub
add
xor
pop
jmp
mov
sub
pop
jmp
mov
sub
and
pop
jmp
mov
jmp
add
mov
pop
push
mov
shr
neg
jmp
add
mov
add
add
pop
add
pop
jmp
xchg
jmp
add
add
sub
add
push
jmp
mov
pop
mov
add
shl
jmp
and
xchg
not
xchg
add
xor
neg
or
push
mov
jmp
add
not
push
push
push
pop
shl
sub
mov
pop
add
pop
xor
jmp
sub
mov
jmp
xor
jmp
xchg
jmp
mov
add
add
xchg
pop
add
sub
jmp
mov
add
jmp
pop
jmp
push
mov
add
jmp
subl
jmp
or
and
dec
jmp
mov
xor
and
shr
push
jmp
xor
xor
xor
jmp
sub
and
xor
xor
add
jmp
push
mov
jmp
push
jmp
pop
not
sub
push
mov
jmp
add
sub
xchg
pop
mov
mov
add
sub
xchg
pop
mov
jmp
mov
mov
sub
dec
xor
add
pop
push
jmp
push
jmp
add
push
mov
push
jmp
pop
shl
add
jmp
push
mov
jmp
add
neg
add
mov
pop
xor
pushl
pop
sub
mov
jmp
pop
sub
mov
mov
push
mov
shr
jmp
mov
mov
jmp
mov
jmp
add
xchg
pop
jmp
mov
mov
push
mov
sub
pop
add
add
jmp
add
pop
xchg
mov
push
jmp
rep
add
push
mov
push
jmp
xor
shr
jmp
pushl
jmp
add
jmp
pop
push
jmp
jmp
push
mov
jmp
push
push
push
mov
mov
jmp
add
pop
push
pushl
jmp
push
jmp
push
pushl
pop
add
jmp
mov
push
mov
jmp
pop
xor
xor
xor
mov
test
pushf
jmp
sub
xchg
mov
jmp
add
pop
add
jmp
mov
sub
pop
sub
pushl
pop
jmp
push
pushf
jmp
push
mov
shr
xchg
not
xchg
shl
sub
jmp
xchg
jmp
pop
movzwl
push
push
mov
addl
mov
add
push
mov
mov
sub
jmp
add
add
sub
push
push
mov
dec
add
or
add
mov
pop
shr
shl
inc
jmp
push
mov
pushl
pop
add
pop
sub
mov
jmp
mov
add
shl
xor
jmp
mov
neg
jmp
mov
jmp
mov
add
pop
sub
add
add
sub
add
jmp
pushl
mov
push
mov
add
add
xchg
pop
push
mov
add
add
xchg
mov
jmp
sub
xor
xor
jmp
push
mov
push
jmp
push
popl
jmp
add
jmp
pop
mov
jmp
mov
jmp
sub
mov
addl
jmp
xchg
pop
sub
sub
mov
mov
sub
add
add
pop
sub
mov
push
mov
add
sub
jmp
push
mov
add
pop
push
pushl
pop
popl
pop
push
mov
jmp
pop
jmp
push
mov
mov
jmp
pop
add
jmp
add
mov
add
sub
add
add
jmp
or
shl
sub
mov
jmp
pop
xchg
jmp
pop
push
push
mov
jmp
mov
add
push
push
mov
and
and
sub
add
mov
pop
jmp
pushl
push
mov
jmp
mov
jmp
push
mov
jmp
push
push
jmp
pushl
jmp
not
jmp
or
pushl
mov
add
add
jmp
pop
jmp
sub
pop
add
xchg
pop
mov
sub
mov
jmp
pop
push
jmp
pop
push
jmp
push
push
mov
mov
pop
push
mov
jmp
push
jmp
pop
mov
push
mov
add
shl
and
add
jmp
mov
jmp
mov
sub
jmp
pop
jmp
mov
add
sub
jmp
add
sub
jmp
add
jmp
mov
mov
jmp
add
sub
mov
mov
add
sub
mov
add
mov
pop
add
addl
pushl
mov
add
push
mov
add
jmp
sub
xchg
pop
mov
jmp
pop
jmp
sub
sub
add
sub
sub
add
jmp
sub
sub
jmp
push
mov
xor
pop
push
push
push
mov
mov
pop
jmp
pop
add
pop
sub
mov
mov
add
sub
pop
sub
sub
push
mov
jmp
or
sub
xor
add
pop
jmp
xor
xor
pop
or
mov
add
jmp
mov
jmp
xchg
jmp
pop
xor
inc
sub
jmp
mov
add
subl
subl
add
jmp
sub
pop
jmp
add
mov
sub
mov
mov
add
push
mov
dec
inc
jmp
mov
push
jmp
mov
sub
shr
xor
shl
push
mov
neg
neg
dec
shr
xor
not
shl
or
push
jmp
add
sub
add
add
sub
pushl
jmp
add
sub
mov
jmp
mov
pop
or
sub
sub
mov
pop
push
jmp
sub
jmp
mov
mov
add
add
jmp
add
jmp
add
push
jmp
xor
add
add
push
mov
jmp
pop
jmp
addl
pushl
jmp
sub
mov
notl
mov
add
jmp
mov
jmp
pop
push
mov
jmp
add
pop
xchg
pop
push
mov
jmp
mov
push
mov
add
jmp
push
push
mov
jmp
mov
jmp
pop
sub
pop
mov
pushl
pop
push
mov
add
jmp
mov
pop
shr
inc
or
add
sub
add
sub
mov
push
push
pop
xor
mov
pop
jmp
popl
pop
mov
push
mov
mov
add
jmp
pushl
jmp
add
push
mov
add
pop
jmp
add
add
xchg
pop
jmp
push
mov
jmp
pop
push
mov
add
jmp
mov
and
pushl
jmp
add
sub
mov
mov
push
mov
push
mov
push
jmp
pop
jmp
dec
add
add
jmp
and
dec
shl
xor
add
pop
xor
xor
xor
mov
jmp
push
push
pop
add
push
mov
jmp
push
mov
add
pop
xor
jmp
mov
and
add
mov
pop
sub
jmp
add
jmp
push
mov
mov
pop
jmp
mov
add
pop
push
jmp
mov
xor
sub
jmp
add
sub
sub
push
jmp
xchg
jmp
push
mov
xor
neg
jmp
inc
xor
sub
pop
push
pushl
jmp
add
pop
push
mov
add
shr
inc
jmp
sub
mov
sub
jmp
add
xchg
jmp
mov
shlb
pushf
jmp
mov
and
jmp
add
jmp
pop
and
shl
jmp
push
mov
push
jmp
add
add
sub
jmp
notb
mov
add
add
and
push
mov
or
pop
jmp
add
movzbw
push
mov
jmp
add
pop
pop
add
sub
push
mov
sub
mov
add
push
mov
shr
dec
push
mov
xor
pop
shl
dec
jmp
mov
jmp
not
push
jmp
xchg
mov
mov
pushl
pop
popl
jmp
sub
jmp
add
xchg
jmp
pop
push
mov
jmp
xor
xor
jmp
add
pop
jmp
push
mov
sub
mov
jmp
mov
sub
mov
push
pop
pop
xor
xor
xor
jmp
jmp
mov
mov
or
sub
add
sub
jmp
xor
neg
jmp
mov
pushw
mov
jmp
lods
add
sub
add
push
jmp
pop
jmp
add
push
jmp
mov
sub
pop
mov
add
jmp
mov
sub
pop
push
mov
sub
pop
sub
jmp
add
or
xor
sub
add
push
jmp
sub
add
pop
sub
add
jmp
add
pop
xchg
mov
jmp
push
push
pop
jmp
add
sub
sub
mov
add
add
push
mov
xor
add
jmp
add
push
mov
inc
or
push
mov
shl
inc
xor
sub
pop
add
mov
add
jmp
pushl
pushl
pop
push
push
jmp
neg
jmp
mov
push
mov
jmp
add
jmp
mov
push
pop
xor
add
push
mov
add
pop
push
push
mov
mov
mov
jmp
add
add
push
mov
add
jmp
pop
push
jmp
not
xchg
sub
jmp
pop
push
mov
add
push
jmp
pop
xchg
mov
sub
mov
mov
sub
mov
xor
xor
xor
dec
xor
xor
xor
pop
jmp
pushl
pop
add
add
jmp
mov
push
mov
add
mov
add
add
jmp
sub
jmp
pop
shlw
pushf
jmp
mov
push
jmp
push
mov
add
add
jmp
push
push
pop
jmp
push
mov
mov
jmp
add
xor
xor
xor
mov
mov
push
mov
push
mov
mov
push
mov
jmp
mov
jmp
push
mov
add
add
xchg
pop
sub
sub
pop
jmp
sub
mov
mov
add
add
push
pushl
jmp
sub
sub
or
pop
jmp
push
pushl
pushl
pop
add
popl
pop
xor
jmp
mov
addl
pushl
pop
add
push
push
mov
mov
sub
pushl
pop
add
shl
push
mov
shr
push
mov
xor
pop
neg
xor
xor
jmp
pop
add
sub
add
jmp
push
mov
sub
mov
mov
mov
mov
add
mov
pop
push
mov
mov
add
push
mov
push
push
mov
or
jmp
pop
add
jmp
add
jmp
mov
mov
mov
pop
sub
mov
jmp
push
mov
push
push
pop
xor
neg
jmp
pop
push
push
push
mov
push
jmp
neg
add
add
sub
pop
push
push
jmp
lods
push
jmp
add
xor
and
jmp
shr
add
add
jmp
push
mov
xor
add
shl
or
add
and
inc
dec
not
sub
jmp
push
push
pop
push
mov
neg
inc
sub
jmp
sub
not
shl
add
add
pop
push
mov
push
jmp
rorw
pushf
jmp
shr
sub
add
pop
mov
push
push
pop
add
add
push
pushl
pop
popl
mov
sub
pushw
jmp
push
mov
add
jmp
add
add
jmp
pop
push
mov
add
push
mov
jmp
notl
pop
dec
jmp
sub
sub
pushl
jmp
sub
pop
push
jmp
xchg
mov
mov
jmp
pop
jmp
sub
shl
add
jmp
popl
pop
push
push
pop
add
mov
jmp
pop
xor
pop
xor
pop
sub
mov
mov
add
sub
jmp
add
sub
xchg
pop
mov
pushl
pushl
mov
push
mov
mov
add
add
xchg
mov
jmp
sub
add
pop
pop
shl
shl
sub
sub
jmp
push
pop
add
push
mov
jmp
add
add
pop
add
sub
add
add
push
mov
sub
pop
jmp
not
sub
sub
sub
jmp
pop
add
push
mov
jmp
add
push
mov
jmp
add
add
add
push
pushl
jmp
lods
jmp
mov
add
xchg
pop
push
mov
push
mov
mov
jmp
mov
jmp
mov
add
push
addl
pop
jmp
xor
shl
or
xor
add
add
sub
sub
add
sub
sub
pop
sub
pop
push
jmp
sub
jmp
and
xor
mov
pop
jmp
mov
add
add
jmp
push
pop
add
mov
pop
push
push
mov
mov
add
pop
shr
add
neg
add
sub
xor
pop
xor
add
mov
pop
push
mov
jmp
mov
add
xor
jmp
and
pop
inc
xor
xor
add
add
sub
pop
add
xchg
jmp
mov
mov
mov
pushl
pop
add
push
mov
sub
jmp
push
mov
push
pop
add
push
jmp
mov
push
jmp
sub
add
add
sub
pop
add
xchg
pop
push
jmp
mov
mov
xor
xor
pop
xor
add
mov
add
sub
mov
jmp
mov
push
push
pushl
jmp
pop
pushl
pop
push
mov
add
add
xchg
pop
push
xchg
not
jmp
mov
xor
pop
push
mov
mov
pop
jmp
xchg
pop
push
push
jmp
dec
neg
xor
add
xor
add
pop
xchg
mov
and
jmp
sub
inc
xor
add
pop
sub
sub
pop
mov
push
push
jmp
and
pushl
mov
add
sub
jmp
dec
xor
add
jmp
dec
jmp
mov
mov
push
mov
mov
pop
pop
add
mov
jmp
pop
and
mov
add
shr
xor
push
mov
pushl
mov
add
push
mov
sub
sub
mov
addl
jmp
pop
jmp
push
jmp
add
sub
add
add
jmp
mov
subl
sub
addl
pop
push
mov
jmp
mov
jmp
pop
jmp
pop
jmp
add
xchg
pop
push
mov
mov
jmp
sub
mov
mov
sub
jmp
inc
jmp
mov
xchg
not
xchg
pushl
pop
add
xor
xor
xor
shr
sub
add
add
jmp
add
add
jmp
or
shl
and
jmp
not
add
add
mov
add
add
push
jmp
mov
add
add
xchg
jmp
sub
pop
sub
jmp
push
pop
add
sub
push
jmp
pop
jmp
push
mov
mov
pop
add
sub
sub
add
add
add
sub
mov
push
jmp
mov
and
push
push
mov
mov
sub
pop
push
mov
not
mov
pop
neg
dec
jmp
mov
add
jmp
add
xchg
mov
push
push
mov
push
addl
pop
sub
pop
add
pushl
pop
push
push
pop
add
add
jmp
pop
addl
pushl
jmp
push
pop
sub
or
add
jmp
shr
add
jmp
pop
jmp
push
mov
jmp
pushl
jmp
push
mov
mov
push
mov
sub
add
add
sub
push
mov
shr
add
add
add
jmp
mov
add
pop
pop
jmp
mov
sub
neg
jmp
xor
jmp
push
subb
jmp
add
push
mov
push
pushw
jmp
add
add
xchg
mov
jmp
pop
mov
jmp
add
jmp
mov
add
pop
jmp
shr
neg
xor
jmp
add
add
sub
jmp
mov
mov
push
sub
mov
mov
push
mov
mov
pop
mov
push
jmp
btr
pushf
jmp
add
push
mov
shl
xor
jmp
add
subl
jmp
pop
jmp
pop
mov
pop
sub
mov
add
push
jmp
pop
xchg
jmp
sub
xchg
jmp
mov
jmp
shl
sub
and
shl
push
jmp
pop
popl
mov
jmp
sub
jmp
push
push
mov
add
sub
xchg
pop
push
popl
push
mov
subl
subl
add
addl
addl
jmp
add
push
mov
xor
pop
sub
mov
push
push
jmp
neg
sub
add
jmp
popl
pop
push
mov
jmp
pop
add
jmp
sub
add
jmp
mov
add
jmp
mov
jmp
pop
jmp
pop
pop
jmp
xor
jmp
pushl
jmp
push
mov
mov
add
add
push
mov
jmp
push
mov
add
pop
push
mov
jmp
mov
push
mov
sub
mov
mov
add
pop
add
xchg
jmp
neg
add
add
jmp
add
jmp
push
jmp
pop
add
pushl
jmp
add
mov
add
jmp
movzbw
push
pushf
jmp
jmp
mov
jmp
mov
mov
mov
pop
add
pop
xchg
jmp
pop
popl
pop
jmp
sub
mov
add
jmp
mov
sub
mov
push
jmp
xchg
jmp
push
mov
sub
sub
add
pop
push
mov
mov
pop
jmp
mov
push
mov
sub
jmp
sub
jmp
push
jmp
shr
sub
xor
add
mov
pop
add
pop
jmp
sub
mov
push
mov
push
mov
push
pop
add
jmp
xor
jmp
xor
xor
pop
mul
pushw
mov
push
pushf
jmp
shl
shr
sub
mov
pop
sub
mov
jmp
mov
jmp
push
mov
jmp
popl
mov
push
jmp
dec
add
jmp
inc
jmp
xor
jmp
and
neg
xor
add
pop
add
sub
sub
mov
add
jmp
push
mov
mov
add
push
mov
jmp
popl
mov
mov
jmp
pop
add
xchg
pop
pop
add
jmp
or
push
mov
jmp
addl
pushl
jmp
mov
mov
jmp
sub
mov
jmp
sub
pop
jmp
mov
and
pop
dec
push
mov
add
sub
xchg
pop
mov
mov
xor
pop
sub
pushl
pop
add
push
jmp
push
push
push
jmp
mov
shl
not
and
dec
xor
and
jmp
mov
jmp
pushl
jmp
sub
xchg
pop
mov
push
jmp
jmp
mov
add
push
push
jmp
pop
sub
push
mov
jmp
push
push
mov
jmp
mov
add
sub
xchg
pop
mov
mov
jmp
inc
shr
sub
sub
mov
mov
shl
sub
add
mov
add
push
push
mov
xor
jmp
pushl
popf
pop
rcrl
pushf
jmp
push
jmp
mov
jmp
popl
jmp
pop
push
pushl
pop
popl
mov
sub
jmp
add
pop
jmp
push
mov
jmp
pop
add
sub
pop
xor
pop
add
add
and
jmp
jmp
sub
jmp
pushl
pushl
pop
add
jmp
neg
jmp
add
push
mov
add
add
sub
pop
xchg
pop
sub
mov
jmp
mov
add
sub
sub
pop
sub
pop
inc
jmp
mov
push
mov
push
jmp
mov
add
add
xchg
jmp
xchg
not
xchg
mov
sub
mov
mov
jmp
mov
add
mov
pop
mov
add
push
mov
push
mov
push
mov
add
sub
xchg
jmp
not
xchg
add
add
sub
mov
add
push
mov
not
neg
shr
jmp
sub
pop
xor
mov
add
sub
add
mov
jmp
push
mov
mov
shl
jmp
addl
pop
add
and
jmp
add
add
jmp
pop
jmp
sub
push
mov
jmp
pop
push
mov
add
add
xchg
jmp
xor
jmp
mov
mov
add
pop
add
sub
sub
jmp
add
pop
push
jmp
shl
neg
add
jmp
push
mov
sub
jmp
mov
push
mov
jmp
notl
pop
dec
add
push
xorl
jmp
pop
mov
jmp
add
add
xchg
jmp
or
je
pushl
sub
mov
push
pop
add
mov
add
jmp
jmp
add
add
push
jmp
mov
jmp
add
push
jmp
dec
sub
add
add
jmp
xchg
pop
mov
mov
jmp
pop
xor
xor
xor
pop
push
mov
jmp
mov
add
add
push
mov
pushl
pop
popl
pop
jmp
add
sub
jmp
mov
push
mov
add
pop
add
xchg
pop
push
mov
push
jmp
sub
pop
sub
pop
push
mov
add
pop
sub
jmp
mov
push
pushl
jmp
inc
sub
sub
jmp
sub
pop
sub
jmp
add
add
jmp
mov
add
mov
add
pop
xor
jmp
pop
xor
xor
xor
jmp
xor
xor
xchg
not
jmp
mov
push
mov
mov
pop
pop
mov
pop
pushl
mov
push
jmp
pop
push
push
jmp
addl
add
jmp
or
jmp
sub
sub
add
add
add
add
pop
xor
push
pushl
jmp
mov
sub
mov
jmp
mov
jmp
sub
jmp
xchg
push
mov
shr
neg
xor
add
xor
pop
pushw
mov
push
mov
mov
not
not
sub
push
jmp
popl
mov
jmp
xor
pop
not
xor
add
add
jmp
sub
mov
jmp
mov
push
mov
shr
jmp
push
jmp
mov
jmp
mov
add
push
mov
shl
and
dec
add
sub
sub
jmp
mov
mov
mov
or
push
mov
inc
xor
add
add
sub
pop
sub
pop
jmp
mov
push
mov
mov
or
shl
jmp
mov
push
jmp
mov
push
mov
mov
push
mov
add
pop
mov
pop
or
add
push
mov
pushw
mov
push
mov
dec
dec
and
xor
mov
pop
xor
mov
push
mov
jmp
xchg
pop
mov
mov
jmp
add
add
xchg
mov
sub
pop
push
mov
mov
shr
jmp
xor
mov
pop
sub
jmp
sub
or
pop
neg
xor
push
mov
jmp
push
mov
pushl
mov
push
push
jmp
add
sub
mov
push
mov
push
mov
addl
mov
add
add
jmp
mul
movzbw
jmp
sub
push
mov
jmp
pushl
pop
add
xor
jmp
push
mov
sub
xor
push
addl
mov
add
sub
pop
add
or
jmp
mov
not
push
push
mov
mov
xor
pop
add
pop
sub
pop
push
push
mov
jmp
and
pop
jmp
add
pop
push
jmp
mov
jmp
add
add
pop
sub
add
push
mov
jmp
pop
add
jmp
mov
jmp
push
mov
push
mov
xor
jmp
pushl
pushl
pop
push
jmp
add
mov
push
push
pop
jmp
pop
push
mov
xchg
not
xor
xor
xor
jmp
pop
push
jmp
sub
jmp
pop
and
mov
add
jmp
mov
jmp
sub
sub
pop
xor
xor
xor
mov
mov
push
pop
push
mov
jmp
push
mov
xor
pop
mov
pop
sub
jmp
and
pop
sub
sub
add
push
mov
push
sub
pop
neg
shl
xor
add
jmp
add
pop
push
jmp
mov
push
push
mov
addl
pop
add
push
mov
jmp
push
jmp
xor
add
add
mov
add
push
mov
jmp
mov
jmp
add
add
sub
sub
add
mov
jmp
pushl
mov
add
push
mov
mov
push
mov
add
mov
push
jmp
pushw
jmp
negw
pushf
jmp
shl
neg
jmp
pushl
pop
add
jmp
add
pop
jmp
push
pop
shl
shr
jmp
add
push
mov
addl
add
jmp
add
add
mov
pop
sub
mov
jmp
xor
pop
mov
jmp
push
mov
add
push
mov
mov
add
pop
jmp
add
mov
add
add
pop
pushl
pop
sub
mov
push
jmp
push
mov
add
add
jmp
add
pop
sub
push
pushl
pop
jmp
xchg
pop
jmp
lods
push
mov
shl
xor
jmp
push
sub
push
mov
addl
popl
push
mov
jmp
pop
shl
jmp
sub
mov
push
mov
mov
pop
mov
pop
push
mov
shl
push
jmp
pop
jmp
mov
sub
pop
pop
push
mov
pushl
pop
popl
mov
sub
jmp
mov
sub
mov
pop
jmp
pop
xor
add
mov
add
push
mov
mov
add
pop
jmp
sub
pop
add
jmp
mov
add
sub
sub
push
mov
jmp
sub
sub
pop
sub
pop
push
jmp
mov
jmp
mov
add
jmp
mov
push
mov
sub
pop
push
mov
not
and
not
xor
add
mov
add
add
sub
pushl
pop
jmp
add
jmp
shl
shl
push
mov
jmp
add
shr
push
mov
and
xor
sub
add
jmp
not
jmp
not
inc
inc
jmp
add
sub
jmp
xchg
pop
push
mov
push
mov
add
add
jmp
push
jmp
and
shr
or
add
add
jmp
xor
neg
inc
sub
sub
pop
jmp
mov
push
push
pop
push
subl
mov
add
jmp
push
xorl
pop
jmp
pop
pop
push
jmp
or
shr
jmp
xor
xor
sub
add
pop
push
push
mov
mov
sub
pop
add
mov
add
xchg
mov
xor
xor
xor
sub
mov
push
mov
shl
push
mov
push
mov
mov
push
mov
push
jmp
pop
jmp
pop
not
shr
xor
add
mov
add
xor
xor
xor
pop
add
add
xor
xor
xor
mov
jmp
sub
xchg
pop
push
mov
push
mov
push
mov
add
pop
jmp
push
mov
add
add
jmp
add
push
jmp
sub
sub
push
mov
jmp
mov
jmp
add
xor
shr
and
push
push
mov
jmp
mov
jmp
push
mov
mov
add
mov
jmp
pop
jmp
pop
add
xchg
pop
jmp
sub
mov
mov
add
pushl
pop
jmp
mov
push
push
pop
sub
jmp
shl
push
mov
not
add
add
jmp
add
add
push
mov
jmp
add
pushf
jmp
pop
jmp
xchg
sub
push
mov
add
sub
xchg
pop
mov
mov
sub
add
jmp
sub
pop
mov
push
mov
add
add
xchg
jmp
pop
dec
add
add
mov
add
push
jmp
add
jmp
xchg
pop
sub
jmp
mov
add
push
mov
add
push
mov
add
jmp
push
jmp
push
mov
push
mov
mov
pop
or
push
jmp
add
jmp
push
pop
not
neg
push
push
mov
add
or
xor
shl
xchg
not
push
push
pop
pop
push
mov
jmp
addl
pop
mov
add
add
push
jmp
pushl
popf
pop
adc
pushf
jmp
push
mov
push
push
jmp
push
push
jmp
pop
xor
pop
xor
push
mov
push
mov
mov
xor
pop
add
xor
pop
add
xchg
push
mov
mov
push
addl
pushl
pop
push
jmp
mov
mov
mov
mov
push
mov
jmp
sub
mov
mov
jmp
mov
sub
mov
push
pushl
jmp
mov
add
pop
add
jmp
neg
inc
dec
shl
not
xor
sub
jmp
mov
pop
xor
pushl
mov
add
jmp
push
mov
jmp
xchg
jmp
push
jmp
push
mov
addl
pop
push
jmp
neg
jmp
xchg
jmp
add
sub
push
jmp
pop
jmp
mov
push
mov
add
add
jmp
pop
sub
pop
jmp
pop
mov
xor
jmp
add
jmp
sub
pop
addb
addb
sub
subb
subb
addb
mov
jmp
sub
pop
add
pop
sub
pop
xor
pop
shr
shl
jmp
pop
jmp
sub
jmp
mov
add
xor
xor
xor
pop
jmp
not
xor
xor
xor
inc
xchg
inc
jmp
sub
addl
push
jmp
push
push
jmp
xor
push
mov
pushl
mov
add
popl
jmp
add
jmp
shr
neg
or
sub
mov
pop
jmp
mov
push
push
push
mov
add
jmp
mov
mov
push
push
mov
jmp
pushl
popf
pop
rcrb
pushf
jmp
add
pop
add
sub
sub
add
sub
push
mov
jmp
pop
push
mov
jmp
pop
jmp
push
mov
mov
pop
mov
jmp
pop
jmp
mov
mov
pop
mov
pop
mov
mov
push
mov
push
mov
add
jmp
pop
sub
pop
sub
mov
pushl
pushl
pop
jmp
mov
push
push
pop
push
jmp
mov
add
jmp
popl
pop
and
pushl
pushl
pop
add
jmp
add
addw
pop
pop
addw
add
subw
pushw
mov
mov
sub
mov
mov
add
pop
addw
add
subw
subw
mov
add
mov
add
jmp
mov
jmp
pop
push
jmp
sub
and
mov
jmp
mov
add
push
mov
jmp
push
jmp
add
push
mov
sub
jmp
sub
addl
pushl
pop
push
jmp
push
pop
sub
pop
mov
mov
add
sub
mov
add
add
sub
mov
mov
addl
add
push
mov
sub
pop
jmp
push
push
push
mov
push
mov
mov
pop
mov
jmp
pushl
pushl
pop
add
sub
mov
push
pop
jmp
sub
pop
add
add
sub
add
jmp
mov
push
jmp
add
add
pop
push
mov
mov
sub
sub
add
pop
sub
jmp
mov
sub
mov
pushl
jmp
or
jmp
mov
push
notl
pop
shr
jmp
or
pop
xor
dec
not
xor
jmp
sub
pop
add
pop
sub
xchg
mov
mov
mov
jmp
xor
xor
pop
add
movzwl
push
sub
mov
addl
pushl
pop
add
push
push
pop
push
mov
mov
and
sub
add
pop
sub
xor
xor
xor
mov
mov
push
mov
mov
jmp
mov
mov
add
push
push
mov
jmp
sub
pop
push
mov
dec
jmp
mov
jmp
addl
mov
push
jmp
sub
sub
sub
pop
mov
jmp
push
mov
jmp
add
pop
push
mov
or
sub
inc
sub
push
push
mov
push
mov
add
add
xchg
pop
jmp
add
jmp
pushl
popf
pop
rcrw
pushf
jmp
add
and
pushl
pop
add
or
shl
push
jmp
mov
add
sub
xchg
pop
mov
jmp
pushl
jmp
shr
jmp
addl
add
subl
subl
pop
mov
add
jmp
mov
sub
pop
xchg
mov
mov
push
push
mov
mov
mov
jmp
add
pop
jmp
add
sub
push
pushl
pop
jmp
xchg
pop
push
push
push
mov
jmp
push
jmp
add
add
pop
xor
jmp
mov
jmp
pop
mov
mov
add
jmp
pop
dec
add
mov
pop
sub
pop
add
pop
jmp
pushl
pop
jmp
pushl
popf
pop
adc
pushf
jmp
push
mov
xor
jmp
xor
mov
shrl
pushf
jmp
mov
neg
push
mov
xor
pop
shl
xor
mov
pop
sub
pop
xor
xor
jmp
and
jmp
pop
jmp
dec
or
jmp
or
sub
add
pop
xchg
jmp
mov
add
push
mov
push
mov
jmp
add
push
mov
push
jmp
mov
push
jmp
mov
push
jmp
push
mov
sub
jmp
mov
mov
push
mov
jmp
push
push
push
popl
jmp
not
dec
sub
sub
pop
pop
xchg
pop
jmp
pop
or
jmp
push
mov
push
mov
push
jmp
add
jmp
mov
push
sub
push
popl
jmp
sub
jmp
add
mov
add
sub
xchg
mov
mov
push
push
mov
jmp
xchg
pop
push
mov
sub
pop
neg
inc
add
mov
mov
jmp
pop
sub
add
add
pop
jmp
sub
add
pop
sub
pop
push
mov
push
push
mov
mov
jmp
push
pop
jmp
push
mov
add
add
xchg
jmp
pop
push
mov
jmp
mov
mov
pop
pop
and
mov
push
jmp
xor
xor
xor
mov
jmp
push
pop
mov
push
push
pop
jmp
xor
pop
push
mov
and
pop
jmp
pop
jmp
mov
mov
add
sub
add
jmp
sub
mov
mov
jmp
pop
add
jmp
add
xor
pop
jmp
pop
push
mov
add
mov
add
push
push
mov
mov
sub
pop
shl
sub
and
push
mov
mov
sub
and
push
push
mov
mov
sub
pop
neg
jmp
push
mov
push
jmp
add
add
xor
xor
xor
mov
push
jmp
pop
xor
xor
xor
pop
mov
push
mov
add
sub
xchg
pop
mov
mov
push
mov
jmp
movzbl
jmp
mov
push
push
jmp
mov
mov
sub
mov
push
pop
jmp
add
add
xchg
pop
shl
or
shl
sub
push
subl
pop
jmp
mov
sub
shr
sub
add
sub
pop
pop
jmp
mov
jmp
pop
push
mov
jmp
inc
add
xor
mov
pop
sub
mov
add
push
jmp
shr
not
shr
neg
xor
add
add
jmp
div
push
mov
push
pushf
jmp
mov
dec
jmp
mov
jmp
sub
mov
pop
pushl
pop
add
jmp
add
push
mov
add
pop
jmp
pop
sub
jmp
add
jmp
pop
sub
xor
xor
jmp
mov
pushl
mov
add
jmp
sub
push
mov
sub
jmp
pop
sub
xchg
pop
mov
push
mov
jmp
mov
add
jmp
mov
push
mov
push
jmp
sub
mov
pushl
jmp
pop
push
mov
xor
jmp
add
pop
jmp
mov
push
jmp
dec
or
xor
push
mov
mov
jmp
mov
sub
add
push
mov
push
jmp
mov
jmp
shl
sub
add
jmp
mov
add
pop
add
xchg
pop
add
sub
sub
push
mov
add
jmp
not
neg
add
add
pop
jmp
pushl
pop
push
mov
push
pushl
pop
jmp
mov
add
push
mov
dec
add
xor
add
add
sub
pop
neg
push
mov
xor
jmp
shr
sub
mov
mov
add
jmp
mov
add
sub
xor
xor
xor
mov
mov
jmp
add
jmp
jmp
push
mov
jmp
pop
add
mov
push
mov
add
sub
xchg
pop
mov
jmp
sub
pop
sub
add
popw
jmp
add
pop
sub
mov
jmp
sub
jmp
mov
mov
sub
pop
jmp
push
push
pop
add
pop
sub
mov
mov
jmp
mov
pop
addl
subl
jmp
push
jmp
not
jmp
push
mov
add
add
xchg
pop
sub
sub
jmp
push
mov
mov
add
add
sub
pushl
jmp
popl
jmp
sub
mov
pushl
pushl
pushl
pop
add
jmp
or
push
push
push
mov
add
jmp
mov
jmp
subl
pop
add
pop
sub
sub
add
mov
add
jmp
add
push
mov
shr
and
shr
xor
sub
xor
pop
or
pushl
mov
add
add
jmp
mov
jmp
mov
push
jmp
mov
mov
jmp
mov
mov
mov
jmp
push
jmp
add
pop
or
pop
push
mov
jmp
pop
xchg
mov
pushl
jmp
mov
push
mov
jmp
mov
mov
push
mov
jmp
add
add
sub
mov
mov
sub
pop
pushl
subl
pushl
jmp
xchg
pop
mov
add
push
jmp
mov
add
sub
xchg
pop
mov
mov
sub
pop
push
jmp
pop
jmp
add
sub
xchg
pop
mov
push
jmp
add
xor
jmp
not
and
jmp
pop
add
push
mov
push
mov
not
add
add
pop
add
mov
add
push
jmp
push
mov
xor
push
mov
push
push
mov
mov
sub
add
add
pop
add
add
jmp
push
push
push
mov
push
push
mov
mov
pop
xor
xor
sub
jmp
push
mov
pushl
mov
add
popl
jmp
sub
mov
mov
push
mov
shr
neg
jmp
not
jmp
mov
add
jmp
xor
pop
jmp
add
pop
push
jmp
and
mov
add
or
jmp
dec
not
add
neg
sub
mov
pushl
pop
push
mov
push
mov
jmp
mov
sub
mov
add
add
push
mov
sub
pop
jmp
sub
add
pop
jmp
pop
add
pushl
pop
sub
mov
mov
add
jmp
popl
jmp
push
mov
sub
mov
addl
jmp
sub
jmp
sub
mov
mov
push
push
mov
sub
dec
or
not
sub
mov
jmp
popl
addl
pushl
mov
add
jmp
pop
jmp
add
pop
xor
jmp
mov
jmp
pop
sub
mov
jmp
pop
jmp
mov
push
pop
pop
xor
push
notl
mov
add
xor
push
jmp
mov
mov
add
shl
or
and
add
add
sub
pop
sub
push
push
mov
mov
jmp
pop
add
push
jmp
push
push
pop
xor
jmp
sub
add
jmp
push
push
push
mov
mov
pop
mov
mov
add
jmp
xor
xor
jmp
mov
jmp
or
jmp
add
jmp
add
movzbl
jmp
add
pop
mov
jmp
mov
add
jmp
mov
add
pop
add
jmp
mov
jmp
push
jmp
mov
shl
sub
and
xor
add
pop
jmp
dec
dec
dec
shl
sub
sub
jmp
neg
sub
shr
add
and
mov
add
push
push
jmp
push
jmp
add
jmp
sub
pushl
jmp
pop
sub
jmp
add
add
jmp
not
xchg
pop
push
mov
mov
or
pop
sub
jmp
mov
jmp
mov
add
sub
xchg
jmp
push
addl
addl
addl
sub
subl
push
mov
sub
pop
subl
pushl
pop
add
dec
sub
jmp
pop
jmp
sub
push
mov
shr
xor
xor
pop
sub
add
add
pop
addl
add
subl
mov
add
jmp
add
xor
add
sub
and
pushl
mov
add
add
push
mov
xor
pushl
pop
push
mov
add
add
push
pushl
jmp
sub
mov
jmp
push
mov
mov
add
pop
push
push
jmp
add
add
sub
jmp
pop
push
mov
add
jmp
xor
xor
pop
jmp
pop
xor
sub
pop
add
jmp
cmp
pushf
jmp
mov
sub
mov
mov
sub
jmp
pop
xor
push
jmp
pop
jmp
pop
jmp
mov
mov
add
add
xchg
jmp
add
sub
add
add
sub
pop
add
xchg
jmp
pop
push
mov
add
pop
xor
add
pop
sub
jmp
add
add
mov
add
jmp
push
mov
jmp
add
xchg
mov
push
mov
jmp
sub
mov
mov
jmp
push
pushl
pop
jmp
add
sub
push
pushl
pop
jmp
mov
addl
pop
push
mov
shr
jmp
mov
push
mov
jmp
push
pop
jmp
xor
jmp
push
mov
sub
xchg
dec
xchg
shl
xor
dec
xor
jmp
push
pop
add
sub
xor
xor
xor
pop
mov
push
push
pop
add
jmp
mov
add
jmp
dec
add
neg
xor
and
pop
xor
add
pop
push
mov
sub
neg
jmp
sub
mov
mov
add
add
sub
mov
add
push
mov
push
pop
push
mov
jmp
add
xor
mov
add
pushw
mov
push
jmp
mov
push
mov
shl
jmp
pop
and
jmp
mov
mov
push
mov
shl
sub
add
push
jmp
pop
xchg
pop
sub
mov
mov
push
mov
dec
shl
xor
add
pop
sub
xchg
jmp
mov
push
pushf
jmp
mov
xor
push
mov
or
mov
add
or
sub
jmp
not
jmp
add
shr
xor
jmp
add
sub
pop
jmp
sub
mov
jmp
pop
xchg
pop
shr
xor
xor
xor
xor
push
jmp
push
mov
mov
jmp
pop
add
push
mov
add
add
xchg
mov
push
push
jmp
pop
push
mov
add
add
xchg
pop
mov
sub
mov
mov
add
add
xchg
jmp
add
jmp
xchg
jmp
pop
or
mov
add
xor
add
pop
sub
jmp
mov
add
push
mov
dec
neg
jmp
dec
xchg
not
xchg
dec
jmp
add
mov
push
mov
add
sub
xchg
pop
mov
mov
push
mov
jmp
add
add
pop
jmp
mov
or
jmp
add
jmp
mov
jmp
mov
mov
jmp
not
xor
add
pop
xor
jmp
push
mov
jmp
pop
not
xchg
sub
not
sub
mov
mov
push
incl
jmp
add
jmp
push
mov
jmp
push
mov
sub
jmp
push
mov
mov
add
push
mov
mov
add
jmp
push
mov
jmp
xchg
mov
jmp
or
push
mov
and
jmp
mov
mov
or
pop
shl
push
mov
jmp
pop
popl
mov
jmp
push
sub
jmp
add
sub
jmp
add
jmp
ret
jmp
push
mov
sub
jmp
pop
mov
add
push
mov
mov
jmp
dec
shr
sub
sub
sub
push
mov
add
pop
jmp
addl
pop
push
push
push
mov
push
mov
neg
or
sub
jmp
push
mov
jmp
xor
sub
inc
sub
jmp
pop
add
add
sub
pop
push
pushl
pop
jmp
pop
push
mov
jmp
xor
pop
add
pop
jmp
shl
not
jmp
push
push
jmp
add
sub
push
jmp
add
xor
not
xor
jmp
shl
sub
jmp
push
pop
push
mov
jmp
pop
push
mov
add
shl
shr
neg
jmp
add
push
mov
mov
add
jmp
add
pop
sub
jmp
mov
jmp
pop
add
add
pop
add
jmp
add
jmp
add
and
neg
sub
xor
pop
add
push
mov
dec
inc
jmp
mov
not
shl
jmp
pop
xchg
mov
or
jmp
sub
xchg
jmp
add
pop
or
pop
or
jmp
mov
add
jmp
add
jmp
xor
sub
shl
sub
jmp
push
pop
jmp
xor
pop
add
push
mov
dec
sub
add
and
dec
jmp
mov
pop
sub
pop
and
xor
add
mov
add
push
jmp
mov
sub
mov
add
xor
xor
xor
pop
jmp
push
mov
add
jmp
mov
push
jmp
pop
jmp
push
pop
pop
add
pop
add
push
popl
jmp
mov
mov
jmp
add
push
mov
sub
jmp
pop
sub
mov
mov
add
mov
push
push
pop
add
add
xchg
pop
push
jmp
xor
jmp
push
mov
sub
add
jmp
add
sub
add
add
sub
add
sub
sub
jmp
push
mov
jmp
sub
pop
and
push
mov
xchg
not
xchg
shr
push
jmp
pop
mov
push
jmp
pop
jmp
sub
shl
jmp
mov
mov
sub
jmp
shr
xor
push
mov
mov
pop
pop
sub
jmp
pop
shr
jmp
sub
jmp
add
push
mov
xor
add
push
mov
jmp
sub
jmp
mov
add
sub
sub
mov
push
mov
push
mov
or
sub
sub
jmp
shr
push
notb
pop
push
mov
add
jmp
add
sub
pop
push
mov
push
jmp
pop
not
inc
sub
jmp
add
add
sub
sub
mov
jmp
pop
push
popl
push
mov
add
pop
mov
add
jmp
shr
push
mov
jmp
mov
mov
jmp
pop
jmp
add
pop
add
xchg
jmp
add
push
mov
not
shl
sub
sub
add
xor
add
pop
xchg
pop
add
or
je
push
jmp
sub
add
mov
add
sub
push
mov
sub
jmp
pop
add
pop
push
mov
add
add
sub
jmp
add
add
push
jmp
pushl
mov
push
jmp
shl
inc
sub
sub
jmp
add
jmp
not
dec
add
add
jmp
add
pop
add
jmp
push
mov
add
shr
xor
add
pop
pop
add
mov
push
mov
push
mov
add
pop
add
xchg
pop
and
pushl
pop
add
jmp
add
sub
xchg
mov
mov
jmp
mov
jmp
add
add
sub
sub
jmp
mov
add
add
jmp
mov
sub
mov
mov
not
jmp
add
add
add
jmp
mov
add
add
jmp
pop
jmp
jmp
pop
sub
pop
xor
pushl
mov
add
jmp
mov
sub
mov
mov
jmp
push
mov
jmp
mov
xor
pop
mov
add
jmp
sub
mov
push
mov
addl
mov
add
push
mov
push
jmp
pop
push
mov
dec
or
jmp
xor
sub
pop
push
mov
dec
jmp
pushl
mov
jmp
pushl
jmp
shr
inc
sub
xor
pop
mov
pop
sub
sub
sub
add
add
pop
and
pushl
pop
jmp
pop
add
pop
jmp
not
neg
xor
jmp
shr
jmp
sub
push
pop
pop
push
push
push
pop
add
xor
mov
pop
add
jmp
add
sub
mov
push
mov
mov
add
jmp
pushl
jmp
push
jmp
xor
pop
jmp
xor
jmp
mov
push
pushl
pushl
pop
push
mov
jmp
add
jmp
push
mov
or
push
mov
and
mov
add
add
sub
jmp
push
push
pop
push
jmp
shr
add
jmp
mov
jmp
push
push
pop
add
mov
pop
sub
pop
mov
jmp
or
pop
jmp
push
mov
not
neg
sub
or
jmp
mov
pushl
pop
popl
mov
push
mov
push
mov
mov
push
push
mov
add
sub
xchg
pop
mov
jmp
mov
xorl
jmp
pushl
jmp
pop
jmp
push
jmp
xor
pop
add
pop
jmp
pop
pop
mov
jmp
sub
neg
push
mov
and
not
add
xor
pop
jmp
lods
push
push
mov
jmp
add
jmp
mov
push
mov
jmp
shl
or
add
and
sub
and
pop
shr
add
jmp
mov
mov
pop
mov
add
sub
sub
shl
shl
shl
push
mov
xor
jmp
sub
sub
xor
add
pop
xchg
pop
xor
jmp
mov
push
mov
xor
mov
jmp
push
jmp
not
jmp
sub
jmp
mov
mov
sub
jmp
sub
push
mov
push
pop
pushl
pop
add
pop
push
mov
inc
not
inc
jmp
pushl
mov
add
add
jmp
pop
add
push
jmp
mov
mov
sub
pop
xor
xor
xor
jmp
push
sub
jmp
pop
pop
shr
push
mov
push
push
jmp
push
mov
jmp
lods
push
jmp
mov
add
pop
push
mov
add
sub
xchg
pop
mov
push
jmp
pushl
mov
add
jmp
pop
jmp
push
mov
dec
push
mov
or
pop
add
shr
dec
not
jmp
push
mov
add
jmp
add
xchg
pop
sub
add
jmp
mov
add
push
push
jmp
push
mov
inc
inc
add
add
jmp
add
pushl
pop
push
push
mov
addl
jmp
pushw
mov
push
push
mov
mov
pop
push
mov
push
mov
sub
mov
push
mov
mov
pop
jmp
notb
jmp
add
popl
mov
jmp
push
mov
jmp
jmp
add
xor
jmp
push
notl
pop
and
xor
mov
pop
not
jmp
sub
push
mov
jmp
pushl
jmp
mov
push
jmp
add
jmp
xor
jmp
mov
jmp
xor
movzbl
jmp
mov
add
add
push
mov
add
add
xor
jmp
pushl
pop
popl
mov
mov
mov
push
jmp
lods
jmp
sub
sub
mov
push
mov
mov
add
shl
jmp
pop
jmp
jmp
pop
mov
pop
add
pop
xor
xor
xor
jmp
xor
push
mov
add
pop
not
sub
sub
sub
mov
jmp
add
pop
jmp
mov
pop
or
or
push
mov
shr
dec
xor
jmp
sub
push
mov
shl
sub
not
sub
or
mov
add
inc
push
jmp
add
pop
shl
shl
push
push
mov
add
sub
xchg
mov
jmp
mov
jmp
negl
pushf
jmp
mov
jmp
push
mov
sub
add
jmp
push
mov
jmp
add
add
sub
pop
pop
push
jmp
mov
add
jmp
sub
jmp
add
jmp
mov
sub
jmp
add
sub
sub
mov
jmp
mov
or
inc
jmp
mov
jmp
mov
mov
add
sub
push
sub
mov
push
mov
dec
add
dec
shr
xor
mov
pop
shl
add
sub
mov
mov
add
xor
push
xchg
not
xchg
jmp
mov
mov
pushl
pop
jmp
sub
mov
push
pop
and
add
sub
sub
mov
pop
not
push
mov
jmp
popl
jmp
mov
jmp
xor
mov
pop
mov
jmp
mov
mov
sub
add
add
sub
add
jmp
mov
imul
jmp
jmp
add
jmp
add
sub
jmp
shr
cmp
je
push
mov
push
mov
add
jmp
add
jmp
add
jmp
push
mov
jmp
add
or
jmp
add
pop
add
jmp
mov
push
jmp
mov
push
jmp
subw
jmp
mov
push
mov
jmp
mov
or
jmp
add
pop
add
jmp
add
jmp
push
mov
mov
jmp
notl
pop
xchg
sub
xor
jmp
mov
push
mov
add
jmp
push
addl
jmp
mov
jmp
xchg
jmp
lods
cmpl
je
sub
add
push
push
push
jmp
sub
jmp
mov
add
xchg
mov
mov
mov
add
jmp
push
mov
push
mov
jmp
inc
push
mov
push
negl
pop
push
mov
and
pop
push
sub
pop
sub
shr
add
add
pop
shr
push
jmp
add
add
jmp
mov
pop
pop
push
jmp
sub
pop
push
mov
mov
add
xor
add
or
dec
sub
jmp
and
shl
push
mov
jmp
mov
mov
sub
mov
mov
sub
pop
add
push
mov
add
pop
pushl
addl
pop
sub
jmp
pushw
mov
mov
jmp
mov
push
mov
addl
mov
add
add
add
xchg
mov
decl
pushf
jmp
sub
add
jmp
mov
mov
add
add
xchg
jmp
mov
push
jmp
pop
popl
mov
add
and
pushf
jmp
or
pushl
jmp
pop
not
add
xor
jmp
xor
mov
jmp
pop
add
push
mov
jmp
push
popl
addl
pushl
pop
add
jmp
add
sub
push
mov
xor
sub
pop
pop
jmp
mov
push
mov
push
mov
push
push
mov
mov
add
sub
sub
mov
add
jmp
mov
xor
mov
push
mov
jmp
push
mov
shl
shl
push
jmp
mov
push
push
mov
push
jmp
push
jmp
add
add
push
jmp
mov
or
shl
neg
or
sub
mov
jmp
add
sub
add
add
sub
sub
pushl
mov
add
add
add
xchg
mov
jmp
or
push
mov
mov
push
mov
or
mov
add
shr
jmp
mov
mov
add
pop
push
push
push
jmp
add
mov
pop
sub
jmp
xor
pop
jmp
add
pop
jmp
xor
not
xor
xor
jmp
sub
pop
jmp
add
jmp
mov
xchg
jmp
or
add
sub
add
add
pop
jmp
xor
push
jmp
pop
and
jmp
mov
jmp
push
push
mov
sub
mov
pop
mov
pop
jmp
pop
jmp
mov
sub
jmp
push
mov
mov
jmp
mov
push
jmp
sub
xor
pop
xor
jmp
pop
sub
sub
jmp
push
jmp
mov
sub
mov
mov
add
push
push
jmp
push
mov
jmp
mov
xor
not
dec
xor
sub
pop
push
push
mov
add
sub
jmp
push
jmp
mov
push
mov
push
mov
jmp
mov
push
jmp
sub
sub
jmp
mov
add
neg
or
jmp
mov
mov
push
push
jmp
sub
sub
add
add
jmp
push
push
pop
push
jmp
negb
pushf
jmp
mov
mov
push
mov
mov
push
mov
mov
pushl
pop
add
mov
add
sub
pop
sub
mov
jmp
pushl
pop
add
shr
jmp
mov
push
jmp
not
shl
sub
xor
pushl
pop
add
xor
sub
pop
add
jmp
mov
mov
addl
add
jmp
mov
push
mov
mov
push
mov
push
push
pop
sub
mov
pop
xchg
jmp
push
push
pop
add
push
mov
mov
pop
pop
mov
mov
jmp
push
mov
and
or
jmp
xor
jmp
popl
push
mov
push
mov
jmp
add
add
jmp
sub
jmp
add
add
sub
add
add
pop
push
pushl
mov
jmp
xor
jmp
push
mov
push
mov
jmp
pop
mov
mov
add
sub
xchg
jmp
pushl
pushl
pushl
jmp
mov
add
jmp
mov
push
mov
add
add
sub
jmp
neg
jmp
push
mov
add
sub
push
pushl
pop
popl
pop
mov
mov
jmp
push
mov
mov
push
mov
sub
jmp
push
mov
add
pop
jmp
add
xor
neg
add
xor
jmp
push
pushl
pop
push
mov
add
push
jmp
pop
pop
xor
mov
add
xor
jmp
add
popl
mov
jmp
mov
mov
add
add
sub
pop
shr
shl
sub
mov
jmp
sub
add
jmp
push
mov
push
mov
mov
sub
jmp
xor
xor
pop
push
push
mov
addl
pop
jmp
or
xor
add
pop
add
jmp
pop
add
sub
jmp
add
jmp
xor
mov
jmp
mov
push
push
mov
add
add
add
push
jmp
pop
add
pop
mov
add
add
sub
mov
mov
add
jmp
mov
jmp
sub
mov
add
jmp
sub
add
add
jmp
pop
push
mov
xor
pop
inc
add
neg
xor
jmp
pop
push
mov
sub
jmp
sub
jmp
push
mov
not
sub
xor
or
xor
add
pop
xchg
pop
push
push
pop
add
add
xchg
pop
pushl
jmp
mov
shl
jmp
pop
add
inc
push
mov
jmp
mov
mov
jmp
pop
push
push
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
mov
add
push
mov
add
pop
xchg
jmp
add
xchg
pop
add
push
jmp
mov
add
sub
pop
jmp
add
pop
push
mov
add
sub
xchg
pop
mov
notw
mov
push
mov
push
pop
push
mov
add
pop
push
push
jmp
add
add
pop
jmp
mov
jmp
pop
mov
push
sub
mov
mov
sub
jmp
add
push
mov
sub
pushl
mov
add
push
jmp
add
jmp
add
popl
jmp
pop
jmp
add
jmp
xchg
jmp
push
mov
add
mov
push
mov
push
push
mov
mov
add
jmp
mov
mov
add
jmp
mov
mov
jmp
xor
xor
xor
pop
add
sub
mov
mov
shl
push
push
mov
add
push
mov
jmp
mov
mov
push
mov
push
pop
add
add
xor
xor
xor
mov
and
pushl
jmp
add
pushl
pushl
jmp
subl
pop
sub
mov
push
mov
xor
jmp
or
sub
mov
mov
sub
shl
and
pushw
mov
jmp
pushl
mov
add
add
sub
mov
mov
xchg
xchg
not
xchg
xchg
jmp
sub
pop
sub
sub
add
add
push
mov
sub
sub
jmp
add
mov
pop
jmp
add
pop
push
mov
and
and
push
push
jmp
mov
shl
not
sub
jmp
shr
shl
xor
sub
pop
jmp
add
add
pop
add
push
pushl
pop
jmp
sub
pop
pop
xchg
jmp
pushl
pushl
jmp
push
mov
xor
pop
sub
add
pop
jmp
push
push
pop
sub
sub
mov
pop
sub
and
add
sub
pop
jmp
xchg
pop
sub
add
sub
add
add
sub
push
mov
shl
or
xor
push
push
jmp
shl
xor
inc
add
push
jmp
mov
pop
push
jmp
push
mov
add
jmp
add
add
sub
pop
push
jmp
push
jmp
pop
jmp
mov
push
pop
not
shr
shr
sub
jmp
add
sub
sub
jmp
not
xchg
add
xor
add
shr
jmp
xchg
pop
add
add
jmp
pop
push
subl
sub
push
mov
mov
jmp
add
pop
jmp
or
shr
add
add
pop
sub
jmp
sub
mov
add
add
jmp
mov
add
sub
xchg
jmp
xchg
pop
add
push
mov
jmp
add
push
mov
jmp
add
pop
add
sub
jmp
and
mov
add
shr
push
sub
jmp
push
pushl
pop
jmp
sub
add
pop
shl
push
jmp
pushl
pop
jmp
mov
add
push
mov
push
mov
jmp
sub
or
jmp
pushl
pop
sub
mov
push
push
popl
push
mov
jmp
add
jmp
add
xchg
dec
jmp
pop
jmp
add
jmp
add
pop
jmp
pop
sub
shr
sub
and
pop
or
je
pushl
push
mov
sub
mov
push
pushl
pop
add
jmp
add
sub
mov
mov
and
pop
shl
shl
and
xchg
inc
xchg
push
mov
mov
sub
add
push
mov
mov
jmp
pop
popl
pop
mov
push
pushf
jmp
xor
push
jmp
jmp
mov
jmp
push
mov
push
mov
push
pop
or
inc
add
mov
pop
or
mov
add
jmp
add
pop
jmp
or
jmp
add
popl
mov
push
mov
jmp
pop
popl
mov
jmp
mov
jmp
pushw
mov
pushw
mov
jmp
push
jmp
push
jmp
pop
pushl
pushl
jmp
sub
mov
mov
add
sub
xchg
pop
mov
push
pop
jmp
add
sub
jmp
shl
jmp
mov
jmp
not
push
jmp
push
mov
jmp
add
sub
pop
jmp
pop
push
jmp
sub
jmp
pushl
jmp
mov
pop
jmp
add
sub
xchg
pop
mov
jmp
mov
mov
xor
pop
xor
jmp
mov
jmp
shr
sub
jmp
and
sub
mov
mov
shr
push
mov
not
add
jmp
push
pushl
pop
jmp
mov
add
mov
add
xchg
pop
jmp
add
jmp
dec
push
jmp
add
jmp
add
push
mov
jmp
mov
push
mov
or
pop
shr
add
shl
sub
add
pop
jmp
pop
jmp
sub
pop
sub
sub
sub
push
mov
jmp
sub
jmp
pop
add
jmp
add
jmp
push
jmp
mov
or
pop
sub
jmp
pop
xor
xor
xor
jmp
mov
mov
sub
mov
jmp
pop
push
jmp
xor
xor
xor
jmp
push
mov
addl
pop
push
mov
xor
or
push
jmp
sub
jmp
lods
push
mov
add
push
mov
mov
sub
jmp
add
mov
add
pop
push
mov
push
mov
sub
jmp
add
sub
pop
push
mov
jmp
shr
or
je
sub
mov
subl
pop
push
sub
jmp
mov
mul
push
mov
jmp
pushl
jmp
xor
xor
add
pop
add
jmp
mov
jmp
add
jmp
mov
mov
jmp
mov
or
pop
xor
and
push
notl
pop
xor
sub
add
add
jmp
mov
mov
pop
mov
jmp
add
sub
mov
mov
mov
pushl
pop
jmp
add
xor
pop
push
jmp
add
add
xchg
pop
push
mov
push
pop
sub
mov
mov
inc
shr
sub
jmp
jmp
xor
xor
pop
mov
push
push
mov
push
mov
jmp
mov
inc
xor
sub
mov
jmp
mov
add
add
sub
jmp
and
pop
add
jmp
mov
push
mov
push
mov
sub
or
and
and
add
add
jmp
pushl
pop
push
mov
mov
add
jmp
push
mov
jmp
sub
pop
xchg
pop
mov
push
push
pop
xor
push
jmp
shl
sub
push
mov
add
jmp
mov
and
xor
or
or
sub
mov
pop
or
jmp
push
mov
inc
push
jmp
mov
add
jmp
xor
add
jmp
push
pushl
pop
popl
pop
jmp
add
jmp
push
mov
mov
and
sub
add
mov
pop
push
push
mov
sub
sub
mov
pop
and
xor
xor
or
push
mov
add
add
sub
pop
push
mov
sub
mov
add
add
add
mov
add
sub
add
add
push
mov
inc
sub
sub
add
sub
jmp
mov
add
add
pop
xor
push
mov
not
sub
shr
jmp
xor
and
pop
xor
add
mov
sub
mov
mov
jmp
push
push
pushl
pop
push
mov
add
jmp
mov
add
jmp
neg
jmp
add
push
push
pop
jmp
add
add
not
jmp
mov
add
jmp
sub
jmp
pop
xor
xor
xor
mov
add
bt
pushf
jmp
sub
sub
sub
pop
ret
jmp
ret
mov
push
mov
add
sub
xchg
pop
mov
jmp
jmp
popl
jmp
sub
add
add
pop
sub
add
jmp
pop
push
mov
mov
pop
mov
add
push
mov
push
mov
mov
pop
jmp
pop
mov
jmp
push
mov
sub
mov
add
jmp
xor
jmp
push
mov
push
mov
mov
add
sub
jmp
push
mov
and
xor
jmp
push
popl
sub
jmp
sub
pop
xchg
pop
mov
pop
pushl
jmp
pop
sub
pushl
pop
jmp
pop
jmp
xor
mov
pop
push
sub
mov
mov
jmp
pop
push
xchg
jmp
pushl
pushl
pop
push
push
pop
push
mov
xor
xor
add
pop
jmp
mov
sub
pop
xor
xor
pop
shl
shl
xor
jmp
mov
push
jmp
pop
xchg
mov
add
push
pushl
mov
add
popl
mov
cmp
pushf
jmp
shr
xor
add
jmp
pop
jmp
add
popl
mov
sub
pushf
jmp
pop
push
addl
pop
sub
pop
add
mov
add
jmp
sub
mov
mov
add
add
xor
xor
xor
pop
push
sub
mov
push
mov
push
mov
mov
mov
add
jmp
sub
add
add
sub
pop
add
xchg
pop
sub
mov
mov
jmp
add
pop
push
mov
sub
pop
xchg
mov
mov
mov
add
add
xchg
pop
push
jmp
add
add
mov
add
sub
jmp
mov
jmp
dec
shr
push
mov
xor
jmp
pushl
pop
jmp
add
pop
pushl
pop
add
push
jmp
mov
sub
mov
mov
and
jmp
sub
pop
jmp
push
mov
push
mov
incb
mov
jmp
mov
xor
mov
push
mov
add
push
push
push
jmp
pushl
pushl
mov
add
add
jmp
pop
neg
add
jmp
subl
pop
jmp
mov
add
sub
xchg
pop
mov
pushl
pop
popl
mov
rolb
pushf
jmp
add
xor
xor
xor
jmp
sub
add
jmp
mov
add
xor
xor
pop
push
jmp
pop
add
mov
push
mov
add
jmp
mov
jmp
and
push
mov
sub
jmp
xor
xor
mov
btr
pushf
jmp
mov
jmp
not
jmp
mov
jmp
mov
jmp
sub
mov
add
xchg
mov
mov
mov
add
jmp
dec
jmp
push
pop
shr
jmp
xchg
pop
sub
mov
mov
add
pop
xor
xor
xor
jmp
pop
push
jmp
pop
push
mov
add
jmp
xor
jmp
pop
and
pushf
jmp
mov
add
pop
sub
xchg
jmp
mov
jmp
push
mov
push
pop
jmp
mov
mov
push
mov
not
add
jmp
and
jmp
mov
push
jmp
push
mov
xor
add
jmp
mov
push
jmp
push
push
mov
add
add
push
mov
or
and
neg
or
xor
add
pop
xchg
pop
mov
jmp
lods
xor
push
mov
push
mov
push
mov
push
jmp
mov
jmp
add
push
mov
sub
pushl
pop
push
mov
jmp
lods
add
pushw
jmp
xor
push
mov
sub
add
xor
pop
xor
pop
add
pop
movzbl
pushl
pushl
pushl
jmp
subl
jmp
xor
xor
xor
jmp
pushl
pop
popl
pop
push
addl
mov
add
sub
mov
add
and
pushl
pop
push
mov
add
add
push
pushl
pop
popl
mov
jmp
add
sub
push
jmp
mov
mov
sub
pop
neg
jmp
push
mov
add
sub
xchg
pop
mov
push
mov
shl
inc
sub
mov
jmp
xchg
jmp
mov
push
mov
push
sub
push
popl
addl
popl
push
push
push
jmp
popl
mov
xchg
mov
jmp
add
mov
push
jmp
add
or
push
mov
add
pop
jmp
push
pop
add
sub
mov
mov
jmp
push
jmp
add
push
mov
mov
dec
dec
or
add
add
pop
xor
jmp
sub
jmp
mov
jmp
mov
shl
xor
jmp
pop
sub
jmp
xor
or
pop
sub
mov
push
mov
not
jmp
push
push
push
mov
xor
add
jmp
push
push
jmp
mov
subl
jmp
add
add
sub
mov
mov
sub
mov
jmp
mov
jmp
mov
add
pop
jmp
mov
mov
pop
sub
mov
xchg
not
xchg
pop
inc
shr
sub
add
sub
sub
sub
jmp
mov
add
pop
add
mov
add
sub
mov
pushl
mov
add
popl
mov
rorl
pushf
jmp
jmp
push
push
mov
add
push
mov
add
pop
jmp
mov
pop
mov
pop
dec
add
add
pop
jmp
pushl
mov
add
push
mov
add
push
jmp
add
jmp
pop
push
push
mov
push
xorl
pop
xor
pop
add
jmp
mov
add
inc
xor
add
pop
jmp
xor
shr
jmp
sub
jmp
push
push
popl
push
jmp
mov
add
jmp
and
jmp
shr
not
jmp
push
mov
jmp
mov
pop
mov
jmp
xor
jmp
mov
jmp
lods
push
mov
push
push
pop
shr
add
jmp
pop
jmp
mov
dec
or
add
add
sub
pop
push
pop
pop
xor
mov
push
mov
push
mov
push
jmp
dec
or
jmp
sub
jmp
push
mov
mov
pop
jmp
mov
push
jmp
mov
jmp
pop
add
popl
mov
movzbw
push
mov
jmp
pop
mov
sub
mov
mov
add
mov
jmp
push
pop
push
mov
jmp
xor
jmp
pop
xchg
pop
or
push
jmp
add
jmp
pushl
pop
jmp
pop
push
pushl
pushl
pop
add
popl
mov
jmp
mov
mov
pop
push
mov
jmp
push
push
mov
add
add
push
push
mov
mov
xor
pop
jmp
mov
add
subl
add
jmp
add
jmp
mov
push
jmp
sub
add
pop
sub
sub
push
mov
push
mov
jmp
add
mov
add
mov
jmp
mov
push
push
mov
add
push
mov
sub
add
add
jmp
mov
mov
jmp
push
notl
pop
add
jmp
neg
push
mov
sub
add
sub
sub
add
jmp
sub
add
jmp
push
jmp
movzbl
lea
jmp
mov
push
push
pop
add
add
xchg
pop
push
push
mov
jmp
add
pop
add
xchg
mov
jmp
push
push
mov
add
add
push
push
jmp
add
sub
xchg
pop
jmp
sub
mov
add
add
sub
pop
jmp
sub
add
add
sub
push
mov
jmp
push
mov
jmp
sub
jmp
push
mov
jmp
push
jmp
xor
jmp
xchg
pop
push
mov
and
shr
sub
add
pop
jmp
shl
dec
sub
add
pop
push
mov
mov
push
jmp
xchg
mov
jmp
push
mov
mov
add
pop
push
mov
shl
sub
jmp
add
push
push
jmp
add
not
sub
mov
jmp
push
mov
neg
add
sub
jmp
add
jmp
mov
pop
sub
add
dec
jmp
sub
mov
push
push
jmp
pop
add
jmp
add
xor
shl
shl
shl
sub
and
pushl
pop
push
mov
jmp
shl
xor
add
pop
not
sub
push
mov
jmp
not
shl
push
mov
jmp
inc
add
xor
jmp
add
xor
push
mov
push
push
jmp
jmp
mov
add
push
subl
pop
push
push
mov
push
mov
jmp
add
add
sub
jmp
pop
mov
add
add
xchg
pop
jmp
push
jmp
xchg
pop
xor
jmp
pop
jmp
and
jmp
xor
jmp
xor
jmp
mov
sub
sub
mov
jmp
add
xor
xor
xor
mov
idiv
movzbw
sub
mov
jmp
add
sub
pop
jmp
xchg
pop
push
push
mov
sub
or
xor
xor
mov
pop
jmp
pop
sub
push
mov
or
jmp
push
jmp
add
jmp
add
jmp
pop
push
push
pop
add
add
xchg
jmp
lods
xor
push
mov
push
mov
jmp
mov
pop
subl
jmp
pop
push
mov
add
push
mov
jmp
push
jmp
mov
add
shr
dec
add
push
mov
mov
pop
mov
jmp
jmp
mov
mov
mov
jmp
xor
xor
xor
mov
mov
jmp
add
shl
sub
add
pop
sub
xchg
pop
mov
mov
jmp
shr
jmp
add
push
jmp
push
jmp
add
pop
or
pop
xchg
inc
xor
xor
xor
xchg
xchg
not
xchg
xchg
jmp
xor
push
push
pop
jmp
pop
popl
mov
jmp
mov
push
mov
mov
push
mov
push
jmp
add
pushl
pop
jmp
mov
or
add
push
jmp
popl
pop
add
add
sub
sub
mov
push
push
mov
push
mov
or
jmp
push
jmp
sub
pop
push
push
mov
mov
sub
pop
add
add
sub
pushl
pop
push
mov
add
push
mov
add
pop
jmp
or
jmp
push
jmp
push
mov
mov
add
jmp
xor
jmp
xchg
pop
mov
mov
push
mov
jmp
push
mov
add
sub
pop
add
add
mov
push
mov
add
jmp
mov
add
sub
mov
mov
not
inc
push
mov
or
pop
shl
push
mov
push
push
pop
jmp
sub
mov
mov
add
jmp
push
pushl
pop
jmp
add
sub
sub
jmp
mov
add
jmp
pushl
pop
popl
pop
push
jmp
push
mov
push
jmp
add
sub
jmp
pop
sub
push
mov
push
mov
jmp
shl
push
mov
push
jmp
mov
add
not
inc
xor
add
add
sub
jmp
shl
jmp
pushl
mov
push
mov
mov
add
push
jmp
mov
sub
mov
pushl
pushl
jmp
pop
push
mov
jmp
pop
pushw
mov
jmp
pushl
jmp
push
jmp
or
xor
xor
pop
mov
pop
jmp
push
mov
or
jmp
mov
push
jmp
shl
sub
sub
pop
neg
shl
jmp
sub
pushl
jmp
push
mov
xor
jmp
mov
jmp
sub
jmp
pop
add
xor
mov
jmp
push
jmp
lods
push
mov
jmp
dec
sub
shl
sub
sub
pop
jmp
mov
mov
mov
jmp
mov
jmp
push
mov
mov
and
push
negl
mov
jmp
mov
mov
or
pop
or
and
add
add
pop
push
mov
push
mov
addl
mov
add
add
jmp
push
pop
jmp
lods
xor
push
mov
add
push
mov
shl
push
notl
pop
or
push
jmp
push
jmp
add
push
mov
push
jmp
mov
push
mov
add
add
xchg
pop
jmp
add
push
push
pop
add
mov
push
jmp
add
add
jmp
neg
shr
inc
xor
push
xorl
pop
jmp
mov
push
pop
mov
add
xor
shl
xor
jmp
add
push
mov
or
sub
jmp
popl
pop
push
mov
push
jmp
shr
jmp
pop
add
jmp
xchg
pop
xchg
pop
jmp
push
jmp
pop
sub
jmp
mov
push
sub
mov
addl
pop
push
jmp
neg
sub
sub
or
pop
jmp
shr
xor
sub
pop
jmp
pop
mov
sub
pop
sub
mov
jmp
xor
mov
pushl
pop
push
jmp
add
xchg
pop
jmp
neg
jmp
add
pop
xor
xor
jmp
add
sub
sub
jmp
xor
mov
jmp
xor
xor
jmp
pushl
pop
jmp
pop
xor
movzbl
popl
jmp
add
xchg
pop
pushl
pop
jmp
mov
add
inc
shr
xor
jmp
push
jmp
pop
jmp
mov
add
pop
add
pop
jmp
mov
pop
dec
not
push
mov
sub
xchg
pop
or
jmp
push
push
mov
jmp
pop
push
jmp
dec
add
jmp
push
jmp
cmp
lods
mov
or
aad
or
jp
or
in
or
or
or
mov
or
mov
or
mov
or
sbb
or
pop
mov
or
into
mov
or
mov
or
xor
mov
or
lea
or
dec
mov
or
addr16
clc
mov
or
dec
mov
or
fisubs
or
sub
or
bound
or
jge
or
push
mov
or
jmp
mov
or
mov
or
outsl
mov
or
andb
arpl
mov
or
inc
mov
or
mov
or
dec
mov
or
pop
mov
or
pusha
mov
or
adc
or
cmp
or
andb
scas
jmp
or
mov
or
dec
mov
or
mov
or
aam
or
imul
or
clc
mov
or
lret
mov
or
push
mov
or
movsb
mov
or
push
mov
or
cmp
or
mov
mov
or
xchg
mov
or
xchg
or
push
mov
or
or
or
add
or
insb
mov
or
jns
or
imul
or
shlb
xchg
or
andl
or
mov
or
movsb
mov
or
dec
mov
or
push
mov
or
xor
or
inc
mov
or
dec
mov
or
cltd
mov
or
shlb
cmpsl
lahf
mov
or
pop
mov
or
fisubl
or
cld
mov
or
clc
mov
or
shlb
or
pusha
mov
or
or
in
mov
or
aaa
mov
or
mov
or
and
or
push
mov
or
int3
mov
or
xchg
mov
or
insl
mov
or
mov
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
sub
sub
sub
jmp
pop
neg
push
sub
jmp
and
add
jmp
mov
mov
push
mov
mov
push
jmp
xor
pop
or
add
mov
mov
add
add
mov
add
push
mov
jmp
xor
mov
add
push
mov
add
xor
jmp
or
shl
jmp
push
mov
add
pop
pop
jmp
pop
xor
jmp
add
sub
pop
add
add
pop
push
mov
mov
xor
jmp
mov
push
jmp
popl
mov
jmp
pop
jmp
push
mov
mov
pop
sub
push
sub
mov
jmp
not
xor
xor
jmp
push
mov
jmp
push
jmp
mov
mov
add
pop
push
push
mov
mov
mov
add
add
add
sub
sub
pop
add
pop
jmp
xchg
pop
mov
mov
push
push
mov
jmp
lods
sub
add
push
jmp
add
push
jmp
mov
neg
inc
shl
or
push
mov
jmp
xorl
jmp
xchg
pop
pushl
pop
push
mov
mov
add
jmp
sub
sub
push
mov
jmp
and
shl
push
mov
add
pop
jmp
pop
jmp
sub
pop
add
sub
mov
pushl
jmp
dec
xchg
jmp
push
mov
mov
mov
mov
add
mov
jmp
negl
pushf
jmp
push
mov
mov
mov
mov
add
jmp
pop
or
xor
mov
pop
sub
pop
xchg
jmp
add
sub
add
add
jmp
push
jmp
sub
mov
jmp
mov
add
mov
add
xchg
pop
jmp
add
push
jmp
pop
jmp
pop
sub
add
push
mov
add
pop
pop
xor
xor
xor
pop
push
mov
jmp
mov
jmp
xchg
pop
push
mov
push
push
mov
push
pop
xor
mov
add
push
mov
jmp
pop
mul
pushw
mov
push
pushf
jmp
mov
pop
jmp
dec
jmp
add
jmp
pop
push
push
mov
jmp
mov
add
sub
sub
pop
add
sub
sub
mov
add
add
push
mov
add
pop
pop
jmp
pop
add
jmp
add
and
shl
xor
and
pop
shr
xor
jmp
sub
mov
mov
addl
subl
sub
push
mov
add
jmp
pop
jmp
push
mov
add
sub
xchg
jmp
neg
xor
jmp
add
add
xchg
mov
jmp
xchg
pop
mov
mov
add
pop
xor
xor
xor
mov
push
mov
add
push
mov
shr
not
jmp
push
mov
push
push
pop
jmp
mov
shr
jmp
mov
push
mov
mov
jmp
push
mov
jmp
popl
jmp
pop
sub
mov
jmp
xor
xor
jmp
mov
add
jmp
xor
shr
add
add
pop
xor
pop
pop
jmp
push
mov
inc
push
jmp
mov
sub
sub
add
jmp
mov
push
mov
push
mov
xor
mov
jmp
add
jmp
add
sub
mov
jmp
sub
jmp
pop
mov
pop
jmp
xchg
jmp
sub
xor
jmp
pushl
jmp
mov
push
jmp
mov
push
mov
jmp
not
jmp
mov
sub
mov
mov
jmp
push
pushf
jmp
mov
add
jmp
mov
mov
add
jmp
mov
jmp
pushl
pop
jmp
mov
push
mov
jmp
mov
jmp
mov
jmp
add
xor
mov
add
mov
jmp
sub
xchg
pop
mov
jmp
pop
and
push
jmp
push
mov
xor
sub
not
jmp
add
xchg
pop
xor
push
jmp
push
mov
add
sub
sub
jmp
mov
push
jmp
push
mov
add
jmp
sub
pop
jmp
mov
add
pop
xchg
mov
jmp
add
pop
xchg
jmp
pop
push
mov
sub
add
add
sub
sub
sub
jmp
sub
pop
sub
add
jmp
mov
add
jmp
sub
push
mov
jmp
sub
mov
mov
jmp
mov
add
pop
jmp
mov
add
add
xchg
pop
push
mov
sub
shr
dec
push
mov
jmp
mov
add
jmp
push
mov
addl
pop
sub
mov
push
jmp
add
xchg
not
push
push
pop
pop
jmp
mov
jmp
add
pop
and
sub
add
sub
sub
pop
not
sub
push
mov
jmp
sub
mov
add
add
mov
push
mov
mov
add
push
mov
jmp
or
pop
push
jmp
pop
mov
push
pop
add
sub
mov
sub
mov
jmp
pop
sub
sub
add
pop
add
jmp
sub
pop
add
sub
sub
mov
push
mov
add
add
xchg
pop
jmp
pop
mov
mov
add
jmp
mov
sub
add
add
pop
xchg
pop
add
jmp
dec
inc
sub
push
push
jmp
add
pop
sub
mov
add
sub
sub
add
add
jmp
push
jmp
addl
pop
push
mov
push
mov
mov
xor
pop
sub
sub
add
add
sub
jmp
pop
mov
jmp
jmp
pop
add
sub
sub
jmp
mov
push
mov
push
jmp
pop
add
sub
add
jmp
mov
mov
or
shl
inc
push
mov
or
pop
jmp
mov
mov
mov
add
jmp
pop
neg
or
not
neg
jmp
mov
push
mov
jmp
mov
jmp
pop
push
mov
add
push
jmp
shr
add
sub
jmp
mov
mov
add
add
xchg
jmp
add
pop
xor
jmp
mov
push
pop
add
push
mov
or
xor
shl
sub
jmp
mov
pop
mov
pop
pushl
pop
jmp
pop
sub
sub
add
add
push
mov
add
sub
mov
add
pushl
mov
add
jmp
add
xchg
jmp
popl
jmp
add
jmp
push
mov
and
sub
dec
jmp
not
inc
jmp
add
jmp
push
jmp
pop
sub
mov
add
jmp
mov
add
jmp
dec
push
push
jmp
sub
jmp
mov
push
mov
add
sub
jmp
mov
jmp
add
jmp
pop
jmp
add
jmp
mov
add
pop
add
pop
push
mov
jmp
pop
push
jmp
subl
subl
addl
addl
mov
push
mov
jmp
dec
inc
add
push
mov
or
pushl
jmp
mov
not
xor
neg
sub
add
pop
sub
xchg
pop
mov
push
jmp
push
mov
sub
pushl
pop
add
push
mov
jmp
push
pop
jmp
popl
jmp
shr
inc
shr
sub
mov
pop
push
mov
push
addl
pop
sub
jmp
add
add
pop
sub
xchg
pop
jmp
mov
sub
dec
jmp
pop
push
mov
jmp
xchg
pop
jmp
lods
jmp
pop
jmp
pop
push
jmp
xchg
jmp
dec
not
not
push
mov
mov
push
mov
xor
jmp
sub
jmp
pop
jmp
pop
sub
add
add
add
pop
shr
or
xor
jmp
push
mov
add
push
mov
add
jmp
mov
sub
mov
jmp
add
push
mov
jmp
add
xchg
jmp
add
push
mov
mov
shl
and
add
jmp
pop
add
sub
pop
jmp
sub
jmp
mov
sub
jmp
add
pop
push
push
mov
add
sub
xchg
pop
mov
jmp
add
mov
pop
and
pushl
jmp
push
mov
jmp
mov
sub
xchg
jmp
mov
push
mov
jmp
add
pop
jmp
add
xchg
mov
pushl
mov
push
mov
add
add
xchg
pop
jmp
mov
mov
push
push
jmp
xor
xor
pop
push
mov
jmp
shr
jmp
add
jmp
push
push
mov
mov
pop
add
jmp
add
jmp
push
push
mov
mov
sub
pop
mov
sub
pop
add
and
mov
add
push
mov
sub
add
sub
shl
add
jmp
xor
jmp
xor
sub
sub
or
pop
jmp
add
push
jmp
push
pop
xor
add
mov
pop
mov
xor
mov
add
jmp
sub
pop
add
add
mov
jmp
push
mov
shl
jmp
inc
neg
add
and
shr
push
mov
shl
xor
and
pop
xor
add
add
pop
add
sub
push
jmp
pop
jmp
jmp
sub
add
jmp
push
jmp
add
mov
push
mov
add
add
xchg
pop
add
jmp
push
mov
jmp
shl
sub
jmp
mov
inc
push
mov
xor
pop
add
mov
add
push
mov
push
mov
xor
sub
not
jmp
push
jmp
add
pop
jmp
push
pop
jmp
pop
jmp
or
shr
dec
push
notl
jmp
mov
push
mov
jmp
pop
jmp
mov
or
dec
not
jmp
mov
jmp
and
pushl
pop
push
mov
add
add
xchg
mov
or
je
push
mov
push
mov
jmp
mov
mov
sub
sub
jmp
push
mov
sub
mov
add
add
add
push
jmp
xor
xor
xor
jmp
mov
jmp
neg
xor
add
pop
push
mov
jmp
mov
sub
jmp
inc
jmp
not
push
mov
or
sub
jmp
sub
mov
addl
jmp
push
push
jmp
add
pop
inc
jmp
add
jmp
add
push
mov
mov
push
push
jmp
sub
jmp
push
jmp
push
pop
pop
add
push
mov
jmp
push
jmp
popl
jmp
mov
add
add
jmp
mov
sub
sub
add
jmp
mov
jmp
sub
mov
add
jmp
add
add
pop
add
pop
jmp
or
jmp
pop
jmp
push
mov
jmp
add
mov
pop
push
mov
dec
jmp
jmp
xor
add
pop
pop
push
mov
xor
jmp
mov
add
mov
push
mov
add
add
xchg
pop
inc
dec
shl
sub
jmp
add
dec
xor
jmp
add
sub
jmp
push
mov
addl
pop
add
sub
xchg
pop
mov
push
jmp
sub
sub
pop
mov
jmp
xchg
pop
mov
jmp
or
pop
push
mov
jmp
mov
add
xchg
pop
sub
mov
push
pop
jmp
pop
mov
jmp
mov
shl
not
jmp
push
mov
mov
or
jmp
add
pop
add
jmp
mov
mov
add
add
jmp
push
mov
add
add
xchg
pop
push
pushl
jmp
mov
jmp
sub
xor
jmp
add
add
push
mov
jmp
not
shr
shl
shl
push
mov
sub
jmp
mov
pop
not
xchg
mov
jmp
pop
popl
pop
pushl
pushl
mov
push
push
jmp
add
sub
xchg
pop
mov
push
push
pop
sub
jmp
or
add
mov
pop
add
shr
add
neg
sub
xor
mov
add
xor
jmp
add
pop
add
jmp
add
jmp
or
jmp
pop
mov
jmp
mov
jmp
pop
shr
jmp
push
push
pop
push
sub
mov
jmp
pop
sub
add
add
sub
push
push
push
pop
shr
shr
or
add
mov
pop
add
jmp
sub
jmp
xor
pop
jmp
pop
jmp
pop
push
mov
mov
pop
mov
push
mov
jmp
popw
jmp
idiv
push
mov
push
pushf
jmp
add
jmp
pop
push
mov
mov
or
pop
push
mov
sub
pop
or
sub
mov
pop
neg
push
push
pop
sub
pop
mov
pop
add
pop
push
jmp
push
push
mov
mov
jmp
add
jmp
and
sub
add
pop
add
sub
push
mov
jmp
decb
pushf
jmp
push
mov
jmp
shl
shr
add
xor
pop
add
pop
add
jmp
mov
mov
or
mov
add
jmp
mov
push
mov
mov
pop
not
sub
jmp
shr
neg
or
and
add
sub
jmp
mov
sub
jmp
shr
and
shl
sub
not
jmp
mov
add
push
push
pop
jmp
mov
jmp
mov
add
xchg
pop
shlb
pushf
jmp
mov
push
mov
jmp
add
pop
and
pop
shr
jmp
push
mov
add
mov
jmp
push
mov
sub
sub
sub
mov
add
pop
xor
xor
xor
mov
jmp
add
dec
not
sub
add
push
mov
jmp
mov
mov
jmp
pushl
pop
push
jmp
xchg
pop
mov
jmp
push
jmp
mov
jmp
pop
push
push
jmp
pop
movzbl
jmp
pop
pushl
jmp
pushw
jmp
push
jmp
mov
mov
jmp
add
xor
jmp
push
mov
neg
not
add
add
jmp
pop
shl
push
mov
jmp
sub
jmp
not
shl
jmp
push
jmp
push
mov
or
pop
push
mov
jmp
mov
push
mov
mov
jmp
xchg
not
jmp
sub
xchg
jmp
shr
shr
jmp
mov
push
mov
mov
xor
pop
push
mov
jmp
add
sub
pop
jmp
pop
sub
sub
add
sub
jmp
push
mov
jmp
not
xor
push
mov
not
jmp
neg
shl
sub
push
mov
or
dec
inc
sub
add
jmp
mov
jmp
mov
xor
pop
jmp
xchg
pop
or
shl
push
mov
add
push
mov
add
push
mov
add
xor
add
xor
pop
pop
jmp
mov
add
jmp
mov
mov
add
jmp
push
mov
add
jmp
pop
xor
xor
xor
pop
push
push
jmp
sub
add
jmp
add
jmp
xor
xor
xor
jmp
sub
pop
xor
add
jmp
push
mov
jmp
push
mov
push
jmp
mov
mov
jmp
sub
push
jmp
push
mov
push
mov
add
pop
jmp
add
jmp
mov
add
sub
push
mov
dec
not
not
xor
jmp
pop
jmp
pop
jmp
popl
pop
push
jmp
sub
jmp
add
xchg
pop
push
mov
sub
jmp
mov
push
jmp
pop
jmp
xor
pushl
jmp
pop
add
jmp
pop
mov
mov
and
pop
jmp
pop
add
add
jmp
push
mov
sub
pop
push
jmp
push
jmp
add
add
sub
pop
mov
pop
shl
jmp
push
mov
sub
jmp
add
jmp
pushl
pop
jmp
push
mov
addl
popl
jmp
popl
addl
popl
addl
pushl
mov
add
push
push
pop
add
jmp
mov
push
jmp
mov
jmp
push
mov
jmp
xor
push
mov
sub
pop
push
xchg
push
push
pop
pop
not
xor
xor
xor
xchg
mov
add
xor
xor
xor
push
mov
sub
jmp
mov
jmp
xchg
pop
sub
mov
mov
and
push
jmp
add
jmp
mov
add
xchg
pop
push
mov
jmp
pop
add
jmp
mov
and
shr
or
not
jmp
mov
jmp
mov
push
push
pop
push
mov
push
mov
push
mov
not
add
jmp
neg
add
jmp
shr
shr
sub
push
jmp
mov
add
jmp
or
push
push
mov
mov
jmp
mov
push
mov
push
pushl
pop
add
push
mov
jmp
add
add
sub
push
mov
shr
jmp
mov
sub
pop
sub
sub
jmp
push
mov
jmp
pop
push
jmp
push
mov
add
xor
push
jmp
pop
not
jmp
sub
jmp
push
jmp
mov
push
mov
push
mov
mov
pop
push
jmp
add
push
mov
push
push
mov
mov
mov
push
mov
jmp
mov
jmp
xor
or
pop
not
jmp
add
push
pushl
pop
jmp
pop
add
jmp
add
jmp
push
jmp
sub
jmp
xor
xor
xor
xor
jmp
pop
sub
not
inc
jmp
xor
pop
add
sub
push
mov
sub
jmp
sub
jmp
add
add
sub
pop
add
add
jmp
sub
add
add
pop
xchg
jmp
mov
add
pushf
jmp
pop
sub
sub
add
pop
jmp
add
pop
sub
mov
mov
sub
jmp
mov
push
pop
add
sub
xchg
jmp
push
mov
push
mov
jmp
mov
mov
pop
mov
add
sub
sub
add
mov
push
push
jmp
mov
shl
and
add
shr
add
jmp
pushl
jmp
xchg
pop
shr
add
jmp
pop
and
pushl
pop
add
jmp
mov
push
mov
push
pushl
pushl
pop
add
sub
mov
push
jmp
push
mov
mov
jmp
mov
jmp
pop
jmp
sub
add
jmp
push
mov
dec
jmp
pop
jmp
add
or
pop
add
add
pop
jmp
and
pop
shl
not
sub
xor
xor
push
addl
jmp
mov
add
add
xchg
pop
add
push
jmp
mov
mov
push
jmp
push
push
mov
jmp
shl
shl
push
mov
inc
neg
shl
inc
sub
jmp
shl
jmp
pop
pop
add
jmp
push
jmp
add
sub
mov
jmp
sub
sub
add
push
mov
shr
sub
mov
mov
sub
xchg
pop
shl
jmp
xor
jmp
mov
jmp
push
mov
add
jmp
push
push
jmp
sub
xchg
pop
mov
mov
sub
push
mov
add
pop
add
jmp
sub
mov
sub
mov
addl
pushl
pushl
pop
jmp
mov
mov
pop
sub
add
jmp
pop
add
jmp
pop
push
push
push
jmp
add
add
push
mov
sub
pop
jmp
sub
pop
pushl
mov
jmp
pop
push
pushl
mov
jmp
pop
mov
push
mov
add
add
xchg
mov
xor
xor
xor
push
mov
notl
pushl
pushl
pop
add
push
mov
push
mov
mov
add
add
sub
jmp
push
mov
mov
pop
jmp
shl
sub
push
jmp
pop
add
add
xchg
pop
xchg
mov
mov
jmp
pop
push
pushl
mov
sub
mov
push
jmp
dec
jmp
xor
xor
mov
sarb
pushf
jmp
push
mov
and
xor
add
pop
add
xchg
jmp
add
neg
and
sub
jmp
lods
push
mov
mov
push
mov
xor
pop
jmp
not
jmp
mov
mov
or
and
dec
shl
jmp
add
jmp
push
mov
jmp
add
or
and
or
sub
add
pushl
pop
jmp
pushl
pop
push
mov
jmp
sub
add
mov
sub
mov
mov
add
jmp
mov
jmp
mov
add
or
xor
xor
pop
add
mov
add
add
pop
push
mov
not
sub
dec
shr
sub
add
mov
add
sub
jmp
add
add
xchg
pop
add
sub
push
jmp
mov
addl
jmp
pop
add
xor
mov
mov
add
xor
or
push
mov
add
jmp
pop
xchg
jmp
mov
add
jmp
push
mov
inc
sub
jmp
mov
mov
jmp
mov
jmp
push
mov
dec
jmp
sub
pop
sub
jmp
xor
jmp
shr
shl
jmp
popl
jmp
pop
pushl
pop
add
push
push
pop
push
mov
xor
pop
shl
sub
mov
jmp
sub
mov
push
mov
push
pop
add
pop
add
jmp
add
xchg
pop
push
push
jmp
sub
add
add
sub
pop
jmp
push
mov
or
jmp
mov
add
and
neg
push
jmp
pop
popl
mov
pushl
pushl
pop
push
push
pop
push
mov
mov
add
jmp
push
push
mov
neg
xor
mov
pop
and
push
mov
sub
jmp
mov
add
add
jmp
xchg
pop
sub
mov
mov
jmp
mov
add
push
pushl
pushl
mov
jmp
pop
add
jmp
xchg
pop
sub
mov
mov
push
jmp
or
push
mov
xor
pop
sub
jmp
push
jmp
mov
add
pop
push
jmp
mov
push
mov
push
mov
jmp
pop
xor
push
mov
push
mov
add
sub
xchg
pop
mov
push
jmp
pop
mov
push
jmp
push
push
mov
mov
xor
pop
sub
pop
pushl
mov
add
add
push
mov
add
mov
add
xor
xor
xor
mov
mov
push
jmp
mov
jmp
add
xor
push
push
jmp
pop
jmp
add
add
jmp
mov
add
push
mov
add
jmp
push
mov
push
jmp
push
mov
xor
or
jmp
sub
jmp
not
sub
jmp
sub
jmp
push
mov
add
jmp
pushl
pop
add
jmp
xor
xor
xor
jmp
push
push
pop
push
mov
push
jmp
pop
mov
push
pushl
jmp
add
jmp
push
mov
jmp
add
push
jmp
pop
push
push
jmp
add
push
jmp
pop
add
jmp
mov
pop
not
sub
push
mov
sub
or
pop
sub
xor
add
jmp
push
mov
mov
pop
or
add
sub
pop
jmp
add
push
jmp
pushl
mov
jmp
pushl
popf
pop
adc
pushf
jmp
mov
jmp
sub
add
jmp
xor
dec
jmp
mov
popl
pushl
jmp
mov
jmp
sub
add
add
sub
add
sub
jmp
mov
push
pushl
pop
add
push
mov
add
pop
push
mov
add
pop
xchg
mov
push
mov
mov
push
mov
mov
add
pop
add
jmp
add
jmp
push
jmp
sub
xor
add
add
sub
pop
push
mov
or
sub
xor
pop
jmp
xor
push
jmp
pop
push
push
mov
add
add
jmp
push
mov
push
jmp
not
xchg
not
xchg
push
mov
mov
neg
jmp
mov
jmp
push
pop
add
mov
jmp
xchg
jmp
mov
sub
pop
add
sub
sub
add
pop
jmp
push
pop
jmp
add
push
mov
dec
sub
add
pop
pop
push
jmp
sub
xchg
mov
mov
push
push
push
mov
push
mov
jmp
add
push
jmp
sub
jmp
push
mov
sub
shr
sub
shl
sub
mov
pop
add
jmp
mov
shl
sub
and
pop
shl
xor
push
mov
or
pop
push
mov
xor
pop
sub
add
add
sub
add
pop
sub
mov
mov
neg
jmp
xchg
pop
mov
jmp
pushl
pop
popl
pop
jmp
push
mov
push
mov
add
not
xor
shr
sub
jmp
and
mov
add
shr
push
mov
add
sub
xchg
pop
mov
push
push
mov
mov
pop
mov
mov
jmp
sub
mov
jmp
add
jmp
push
mov
add
jmp
sub
shr
sub
xor
pop
xor
push
mov
jmp
mov
jmp
push
mov
mov
jmp
mov
push
jmp
add
add
xchg
pop
push
mov
push
mov
jmp
push
notl
pop
sub
add
add
pop
jmp
dec
xor
jmp
add
sub
push
jmp
xor
pop
jmp
pop
add
push
jmp
add
and
mov
add
or
je
pushl
push
jmp
add
pop
sub
xchg
pop
mov
push
pushl
pushl
pop
jmp
mov
push
push
pop
jmp
pop
add
sub
mov
add
rep
add
push
mov
push
push
push
push
pop
neg
dec
add
mov
jmp
mov
push
mov
add
jmp
pushl
jmp
mov
jmp
mov
mov
mov
jmp
add
xchg
jmp
xor
xor
pop
mov
jmp
xor
pop
xor
mov
push
jmp
add
add
xchg
pop
add
push
jmp
mov
mov
push
mov
mov
jmp
add
push
pushl
pop
add
xor
pop
and
pop
shr
sub
mov
push
jmp
xchg
pop
push
mov
add
mov
add
jmp
pop
push
jmp
push
mov
add
jmp
mov
push
jmp
xchg
push
mov
mov
sub
sub
jmp
pop
add
jmp
popl
jmp
shl
add
add
mov
add
pushl
jmp
mov
neg
and
xor
or
sub
not
add
shl
add
jmp
pop
xor
pop
mov
pushl
jmp
popl
jmp
sub
add
push
mov
push
mov
add
pop
add
pop
jmp
add
jmp
pushl
mov
add
sub
mov
jmp
pushl
pop
add
shr
push
jmp
or
sub
sub
jmp
push
mov
push
mov
jmp
mov
mov
mov
mov
mov
jmp
push
mov
mov
and
pop
and
jmp
inc
jmp
mov
mov
push
jmp
xchg
mov
pushl
pushl
jmp
push
mov
jmp
pop
add
mov
add
push
jmp
sub
pop
add
mov
push
mov
add
jmp
xor
jmp
pop
sub
mov
mov
add
add
add
sub
sub
pushl
mov
add
add
xor
xor
xor
pop
jmp
add
add
jmp
pop
jmp
add
jmp
sub
sub
add
pop
jmp
pop
add
sub
mov
add
push
mov
push
mov
sub
jmp
mov
shr
add
not
sub
xor
shr
add
xor
pushl
pop
push
push
pop
jmp
push
mov
mov
mov
jmp
pop
not
shr
jmp
mov
not
shl
jmp
xor
xor
xor
jmp
sub
pop
sub
mov
mov
inc
and
or
jmp
push
mov
mov
add
jmp
push
mov
add
pop
jmp
mov
add
push
push
mov
xor
mov
pop
sub
mov
jmp
mov
jmp
mov
and
add
xor
pop
jmp
mov
push
jmp
pop
push
pushl
pop
popl
jmp
add
push
mov
mov
jmp
xchg
pop
add
jmp
add
sub
jmp
add
pop
push
mov
push
pushl
mov
add
push
jmp
mov
push
jmp
mov
add
add
xchg
pop
jmp
sub
pop
xor
sub
pop
jmp
sub
add
jmp
pop
push
jmp
sub
jmp
mov
sub
mov
mov
jmp
neg
sub
sub
jmp
mov
sub
jmp
pushl
popf
pop
rcrw
pushf
jmp
lods
jmp
mov
jmp
pop
jmp
push
incl
pop
add
add
mov
add
pushw
jmp
mov
sub
mov
addl
mov
jmp
sub
mov
jmp
mov
jmp
add
pop
sub
pop
push
mov
add
jmp
inc
not
jmp
push
pop
add
sub
push
pushl
pop
popl
pop
mov
jmp
add
jmp
pop
xor
xor
xor
pop
or
jmp
sub
xchg
mov
mov
sub
mov
jmp
or
xor
jmp
push
mov
add
pop
push
mov
sub
jmp
pushl
pop
push
mov
push
pop
push
push
push
jmp
pop
push
notl
pop
xor
add
xor
mov
jmp
mov
add
jmp
xor
pop
sub
mov
add
xor
jmp
inc
xchg
jmp
mov
mov
push
push
jmp
jmp
sub
jmp
or
jmp
inc
xor
sub
add
jmp
push
mov
sub
mov
jmp
shr
sub
add
mov
pushl
pop
add
jmp
push
jmp
pop
add
pop
push
mov
add
jmp
mov
push
mov
add
pop
add
xor
xor
xor
mov
or
or
add
sub
add
jmp
jmp
sub
jmp
push
jmp
pushl
mov
add
jmp
jmp
mov
mov
jmp
mov
jmp
mov
add
xor
jmp
pop
add
jmp
pop
dec
sub
sub
sub
jmp
pop
push
jmp
pop
xchg
pop
jmp
pushl
mov
add
add
push
addl
pop
sub
pushl
pop
add
and
pop
jmp
or
not
inc
xor
sub
pop
mov
push
mov
add
jmp
push
addl
popl
push
mov
sub
pop
mov
push
mov
mov
jmp
add
sub
pop
xchg
mov
mov
push
jmp
mov
add
add
xchg
jmp
xor
mov
jmp
pop
jmp
xchg
mov
jmp
push
mov
push
jmp
pushl
pushl
pop
jmp
not
push
jmp
sub
sub
add
mov
add
add
mov
add
jmp
sub
mov
push
pop
xor
dec
not
shl
jmp
pop
jmp
mov
mov
add
jmp
push
mov
mov
mov
jmp
movzbw
sub
mov
jmp
inc
not
add
mov
pop
add
mov
add
add
push
mov
add
pop
sub
sub
sub
push
mov
add
jmp
pushl
pushl
pop
push
push
pop
jmp
pop
push
jmp
pop
mov
mov
jmp
push
mov
jmp
add
add
add
push
mov
sub
sub
jmp
xor
pop
sub
mov
push
mov
addl
pop
sub
mov
mov
push
push
mov
dec
jmp
sub
mov
push
mov
mov
pop
add
mov
add
push
mov
jmp
pop
mov
pop
pop
push
mov
add
add
and
sub
shr
xor
jmp
push
mov
add
pop
xchg
mov
push
mov
add
sub
xchg
pop
mov
sub
mov
sub
jmp
pop
pop
push
mov
push
mov
sub
mov
push
mov
mov
pop
push
mov
mov
jmp
push
mov
pop
pop
jmp
add
add
jmp
xchg
pop
sub
mov
mov
push
mov
shl
xor
add
add
pop
jmp
add
add
push
push
mov
push
mov
jmp
mov
pushl
pop
add
mov
mov
add
add
add
push
jmp
pop
sub
push
mov
xor
shr
sub
neg
push
mov
jmp
add
pop
jmp
push
push
pop
push
mov
jmp
push
mov
mov
push
pop
pop
sub
pop
sub
push
push
mov
push
mov
push
mov
push
jmp
pop
push
jmp
push
push
push
mov
mov
xor
pop
mov
add
sub
sub
pop
xor
xor
or
sub
sub
sub
jmp
push
jmp
pushl
push
jmp
pop
not
shr
add
jmp
addl
mov
add
push
jmp
mov
push
mov
mov
xor
pop
sub
add
add
mov
add
xor
xor
xor
jmp
push
mov
inc
shr
xor
jmp
push
mov
sub
pop
sub
push
mov
sub
mov
mov
add
jmp
add
add
jmp
push
mov
shl
shr
xor
or
jmp
xor
neg
add
push
mov
sub
jmp
push
jmp
sub
sub
pop
add
add
pop
add
push
mov
add
push
mov
sub
jmp
sub
jmp
push
push
mov
push
pop
pop
push
mov
add
pop
add
sub
jmp
pop
add
mov
add
push
pushl
pop
popl
mov
jmp
pop
mov
jmp
mov
add
jmp
sub
sub
push
mov
add
pop
jmp
sub
pushl
pop
push
mov
add
jmp
pop
add
add
sub
pop
xchg
pop
jmp
jmp
xchg
mov
add
jmp
pop
add
push
push
jmp
mov
sub
jmp
push
jmp
pop
jmp
pop
jmp
push
pop
push
mov
push
jmp
mov
add
add
xchg
jmp
push
mov
jmp
push
mov
mov
push
mov
jmp
pop
mov
push
mov
add
add
xor
jmp
pop
jmp
mov
add
add
and
pushl
pop
add
shr
pushl
jmp
pop
add
sub
add
jmp
pop
push
mov
add
push
mov
add
add
sub
pop
xchg
pop
jmp
add
push
push
mov
push
pop
jmp
mov
jmp
mov
jmp
push
mov
jmp
pop
jmp
sub
jmp
push
mov
jmp
pop
jmp
mov
push
mov
add
add
xchg
pop
add
push
sub
mov
mov
push
mov
mov
pop
pushl
pop
add
jmp
mov
jmp
pop
sub
pop
add
add
sub
sub
jmp
sub
pop
push
jmp
sub
mov
jmp
mov
xor
or
pop
shr
xchg
neg
xchg
add
jmp
push
mov
sub
jmp
lods
cmpl
je
add
push
mov
jmp
add
mov
pop
pop
mov
add
push
mov
push
push
pop
xor
push
push
pop
mov
pop
pop
jmp
and
add
sub
add
jmp
add
shr
push
mov
add
sub
pop
xor
pop
jmp
push
pop
push
mov
push
mov
jmp
push
push
mov
mov
pop
add
jmp
and
xor
mov
mov
add
jmp
sub
push
jmp
add
mov
add
push
jmp
pop
jmp
sub
xor
xor
xor
pop
mov
mov
add
pushl
pop
jmp
push
pop
pop
sub
add
push
mov
add
pop
add
add
sub
push
mov
sub
pop
jmp
pushl
popf
pop
rclb
pushf
jmp
and
push
mov
jmp
shl
shr
shr
jmp
pop
xchg
mov
mov
push
mov
jmp
xor
add
sub
add
jmp
mov
mov
jmp
add
mov
add
sub
jmp
dec
and
shr
xor
jmp
pop
add
xor
push
mov
jmp
add
add
pushl
pop
push
mov
jmp
dec
shr
push
mov
add
add
jmp
mov
add
add
xor
xor
xor
mov
jmp
add
mov
push
push
pop
add
sub
mov
mov
sub
add
pop
xor
xor
xor
jmp
push
mov
shl
jmp
xor
xor
xor
mov
and
pushf
jmp
pop
add
push
push
push
push
pop
jmp
push
mov
pushl
jmp
push
mov
sub
mov
mov
add
jmp
xor
jmp
pop
add
mov
add
xchg
pop
mov
push
mov
add
sub
jmp
sub
pop
jmp
mov
and
jmp
push
mov
sub
jmp
xchg
pop
push
jmp
jmp
add
pop
push
mov
mov
inc
neg
add
xor
jmp
add
sub
pop
xor
xor
xor
mov
jmp
mov
mov
add
sub
jmp
mov
jmp
xchg
pop
btc
pushf
jmp
pop
popl
pop
mov
sub
mov
jmp
add
and
pop
sub
and
mov
push
mov
mov
push
mov
add
jmp
mov
push
push
push
mov
jmp
add
pop
add
xchg
mov
popl
pop
jmp
mov
inc
sub
neg
not
push
jmp
sub
add
sub
jmp
xor
sub
sub
jmp
pop
add
jmp
xchg
jmp
add
jmp
add
xor
xor
xor
mov
or
jne
push
pushl
pushl
pushl
pop
add
sub
mov
mov
push
mov
shr
add
xor
add
pushl
mov
push
mov
jmp
pop
mov
add
jmp
xor
sub
sub
pop
xor
pushl
pop
push
mov
add
add
xor
xor
jmp
push
mov
push
pop
mov
xor
pop
jmp
add
jmp
mov
mov
add
mov
add
push
mov
add
push
jmp
xor
add
jmp
pop
sub
add
jmp
lods
jmp
and
pop
sub
add
pop
xor
xor
jmp
push
jmp
push
mov
add
add
xchg
pop
jmp
push
jmp
jmp
and
pushl
pushl
mov
jmp
pop
jmp
mov
xor
pop
jmp
pop
or
inc
shr
sub
sub
add
add
pop
jmp
push
mov
mov
sub
push
jmp
mov
add
add
sub
pop
push
mov
jmp
or
xor
dec
add
sub
sub
push
jmp
mov
sub
add
shr
xor
add
mov
add
push
pushl
mov
jmp
mov
addl
pop
add
push
jmp
mov
jmp
add
jmp
add
push
mov
add
jmp
push
mov
jmp
pushl
mov
add
add
add
pop
jmp
pop
and
mov
add
shr
jmp
mov
mov
sub
pop
pop
push
push
mov
mov
pop
add
jmp
add
xor
mov
mov
jmp
add
jmp
mov
mov
add
jmp
mov
pop
pop
pop
jmp
sub
sub
pop
jmp
push
jmp
add
add
jmp
add
jmp
push
mov
add
push
mov
jmp
xchg
pop
jmp
push
mov
jmp
sub
sub
add
mov
add
xor
sub
jmp
push
mov
sub
add
pop
mov
jmp
sub
pop
add
jmp
mov
add
pop
jmp
mov
add
jmp
mov
push
mov
jmp
or
push
jmp
sub
mov
push
pop
push
push
mov
mov
mov
sub
jmp
push
mov
jmp
xor
mov
pop
push
jmp
mov
push
mov
shr
xor
add
mov
add
jmp
pop
push
mov
jmp
pop
jmp
pop
jmp
div
jmp
mov
inc
jmp
mov
push
pop
add
jmp
mov
mov
xor
pop
add
pop
jmp
sub
push
mov
xor
jmp
xchg
pop
jmp
sub
add
pop
add
pop
jmp
xor
xor
xor
pop
mov
jmp
mov
sub
pop
jmp
not
sub
jmp
mov
pop
push
subl
pushl
mov
add
push
push
pop
add
add
xchg
pop
add
pushl
pop
push
mov
mov
push
mov
jmp
pushl
pop
popl
pop
mov
push
mov
add
jmp
imul
pushw
mov
push
pushf
jmp
xchg
pop
push
mov
pushl
pop
sub
mov
mov
jmp
pop
jmp
mov
add
sub
xchg
pop
jmp
add
xchg
mov
jmp
push
notl
jmp
pop
add
push
mov
add
jmp
add
add
jmp
and
jmp
pop
jmp
mov
xor
not
sub
jmp
push
push
popl
addl
jmp
and
pop
shl
dec
xor
push
mov
sub
mov
jmp
sub
add
add
jmp
mov
pop
add
sub
sub
pop
push
mov
jmp
mov
or
jmp
mov
add
mov
jmp
pushl
pop
jmp
sub
pop
add
jmp
pop
push
push
mov
addl
mov
add
push
mov
add
push
mov
sub
pop
xchg
jmp
push
mov
jmp
pop
sub
pop
jmp
and
pushl
mov
add
jmp
pushl
jmp
pop
jmp
add
add
jmp
pop
push
mov
push
jmp
push
mov
dec
neg
jmp
mov
push
mov
add
sub
xchg
jmp
and
neg
push
mov
or
not
shl
or
sub
sub
pop
jmp
inc
and
add
sub
add
add
pop
jmp
add
sub
sub
push
mov
sub
mov
add
jmp
add
pushl
jmp
sub
pop
xor
sub
jmp
mov
add
add
add
push
jmp
add
push
mov
jmp
mov
push
pop
add
push
mov
mov
push
mov
push
mov
push
mov
xor
jmp
shl
xor
sub
jmp
mov
add
push
mov
mov
xchg
not
jmp
push
push
jmp
mov
pushl
mov
jmp
add
jmp
push
mov
jmp
pop
mov
mov
jmp
sub
jmp
mov
push
mov
push
jmp
mov
jmp
sub
mov
mov
xor
pop
push
mov
jmp
mov
push
mov
mov
add
sub
sub
pop
add
pop
mov
jmp
pop
push
mov
push
jmp
mov
push
mov
xor
neg
or
and
sub
sub
add
sub
jmp
push
push
jmp
mov
add
mov
pushl
jmp
popl
pop
push
mov
mov
add
add
xor
xor
jmp
add
add
sub
sub
jmp
add
xchg
dec
xchg
push
mov
xor
xor
xor
push
notl
mov
add
xchg
mov
add
push
mov
addl
pop
jmp
mov
add
jmp
add
push
mov
mov
jmp
add
add
xchg
pop
sub
sub
add
jmp
add
jmp
sub
pop
xchg
pop
jmp
xor
xor
push
jmp
dec
jmp
add
pop
jmp
pop
add
sub
xchg
jmp
add
jmp
pop
push
mov
add
pop
add
sub
jmp
mov
jmp
push
push
mov
push
mov
shr
not
neg
inc
push
mov
neg
jmp
push
mov
mov
add
push
jmp
mov
mov
xor
pop
push
mov
xchg
xchg
not
xor
xor
xor
push
jmp
add
push
mov
jmp
mov
jmp
add
push
mov
and
sub
add
and
not
jmp
xchg
jmp
mov
add
add
push
mov
mov
jmp
xor
pop
or
pop
xor
sub
add
sub
jmp
push
mov
sub
or
jmp
xchg
pop
mov
push
mov
jmp
pop
jmp
dec
xor
shr
jmp
mov
pop
jmp
xchg
pop
jmp
sub
pop
jmp
add
add
jmp
mov
decl
pop
push
push
jmp
push
mov
jmp
add
mov
add
sub
add
jmp
mov
push
mov
jmp
xor
inc
sub
mov
mov
add
neg
jmp
mov
jmp
pop
shl
sub
add
add
sub
mov
add
push
push
pop
jmp
pop
pushl
jmp
push
mov
jmp
mov
push
push
mov
addl
pop
add
push
sub
mov
push
pop
jmp
push
push
push
pop
push
mov
xor
or
pop
jmp
pop
add
pop
sub
xchg
pop
jmp
sub
jmp
pushl
pop
jmp
mov
add
sub
jmp
pushl
jmp
pushl
jmp
add
mov
pop
not
push
mov
push
mov
add
mov
add
dec
inc
jmp
add
add
push
jmp
pop
shr
sub
jmp
sub
add
pop
xor
pop
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
push
jmp
push
push
mov
mov
mov
jmp
sub
pop
push
pushl
pop
popl
jmp
sub
jmp
mov
pop
jmp
mov
push
mov
add
and
pushl
pop
jmp
neg
jmp
mov
mov
pop
pop
push
mov
and
jmp
mov
pop
add
xor
pop
shl
shl
jmp
sub
jmp
mov
jmp
mov
add
push
mov
jmp
push
mov
jmp
sub
jmp
shr
push
mov
jmp
add
push
mov
add
pop
pushl
pop
add
push
push
jmp
or
shl
sub
mov
sub
mov
mov
jmp
xor
xor
xor
pop
or
pushf
jmp
mov
add
sub
shl
add
add
mov
pop
add
jmp
pop
xor
add
sub
sub
pop
shl
shl
add
jmp
pop
sub
add
add
pushl
pop
push
mov
mov
add
add
xchg
pop
xor
xor
xor
mov
sub
push
push
jmp
mov
pop
pop
sub
sub
jmp
sub
add
add
add
jmp
mov
jmp
add
jmp
xor
jmp
push
mov
add
sub
pop
add
add
push
mov
add
add
sub
jmp
add
push
jmp
inc
sub
mov
xchg
not
xchg
pop
jmp
pop
pop
jmp
xor
jmp
push
push
pushl
mov
add
push
push
sub
jmp
pushl
pop
add
jmp
add
sub
pop
sub
sub
add
add
pop
jmp
lods
xor
push
mov
push
mov
push
jmp
xor
xor
pop
add
pop
sub
xchg
jmp
add
shl
add
add
pop
add
pop
xor
xor
push
addl
pop
jmp
mov
pushw
jmp
push
mov
decb
pop
push
mov
xor
inc
not
and
jmp
push
push
mov
add
push
mov
push
jmp
xor
jmp
add
jmp
push
mov
jmp
mov
push
mov
sub
mov
jmp
add
mov
pop
jmp
popl
addl
jmp
sub
jmp
push
sub
jmp
mov
mov
jmp
mov
jmp
sub
xchg
pop
mov
push
mov
xor
mov
jmp
add
push
pop
mov
push
mov
jmp
add
jmp
add
add
add
push
mov
add
pop
xor
xor
xor
mov
mov
push
push
pop
push
jmp
pop
xor
jmp
add
xchg
pop
popl
pop
jmp
mov
xor
dec
shl
shr
sub
add
pop
add
sub
mov
push
mov
add
add
jmp
inc
xor
or
mov
add
push
mov
mov
push
mov
add
pop
add
push
mov
not
sub
sub
sub
jmp
mov
jmp
pop
sarw
pushf
jmp
dec
sub
mov
mov
or
pop
shr
jmp
push
mov
add
pop
jmp
push
mov
add
pop
jmp
sub
push
incl
pop
sub
mov
mov
jmp
pop
sub
add
pop
add
jmp
neg
and
push
jmp
mov
jmp
mov
sub
push
mov
add
pop
addl
add
push
mov
mov
sub
pop
mov
push
mov
jmp
shr
jmp
add
and
pushl
mov
push
jmp
xor
xor
push
push
mov
jmp
mov
mov
push
mov
mov
mov
sub
jmp
add
mov
jmp
xor
sub
sub
push
mov
add
dec
xor
add
pop
add
push
jmp
pop
neg
xor
jmp
dec
xor
add
push
mov
add
jmp
pop
dec
sub
jmp
notl
pushl
pop
jmp
pop
push
mov
add
add
add
pop
add
push
mov
sub
pop
xor
jmp
xor
mov
push
mov
jmp
push
push
jmp
xor
jmp
mov
push
mov
push
push
mov
mov
pop
sub
jmp
pop
xor
pop
jmp
pop
xchg
not
xor
xor
xor
neg
jmp
push
mov
mov
add
add
jmp
push
mov
sub
mov
push
jmp
add
push
mov
jmp
add
add
jmp
add
sub
mov
jmp
mov
add
mov
add
push
jmp
mov
sub
mov
jmp
mov
mov
jmp
pushw
jmp
add
add
jmp
sub
jmp
pop
add
jmp
sub
mov
push
mov
mov
add
jmp
pop
xchg
mov
btr
pushf
jmp
add
sub
pushl
pop
add
add
push
jmp
mov
jmp
lods
sub
mov
mov
jmp
lods
push
mov
sub
jmp
mov
jmp
xchg
not
xchg
not
dec
xor
jmp
add
pop
jmp
xchg
jmp
sub
mov
pop
shr
push
jmp
pop
mov
push
pop
add
push
mov
mov
sub
sub
add
push
push
pop
jmp
push
sub
mov
addl
jmp
mov
pop
jmp
pop
add
jmp
push
mov
pushl
pop
popl
pop
jmp
xor
sub
pop
or
pop
shr
sub
mov
mov
jmp
mov
add
add
pop
push
mov
sub
jmp
add
mov
add
xchg
mov
push
sub
mov
jmp
mov
pop
add
sub
sub
pop
or
xor
add
pop
add
pop
xchg
mov
mov
add
jmp
not
xor
mov
mov
push
mov
add
add
xchg
pop
and
jmp
push
mov
sub
xor
xor
pop
jmp
mov
add
add
xchg
pop
jmp
mov
add
xor
xor
xor
mov
mov
jmp
push
jmp
jmp
sub
sub
push
mov
add
pop
push
push
mov
add
push
mov
neg
push
sub
pop
push
jmp
pop
add
sub
mov
jmp
add
pop
sub
mov
push
mov
push
mov
jmp
pop
push
jmp
sub
jmp
push
sub
mov
push
mov
mov
jmp
xor
neg
xor
mov
pop
xor
sub
pop
jmp
popl
mov
jmp
add
add
jmp
shrw
pushf
jmp
add
sub
jmp
add
jmp
shl
or
push
push
push
mov
jmp
xor
jmp
push
mov
add
jmp
shr
shl
sub
mov
pop
shl
sub
add
add
sub
jmp
add
pop
push
mov
sub
add
add
pop
xchg
pop
sub
pushf
jmp
add
jmp
pop
jmp
add
sub
pop
push
mov
add
sub
xchg
jmp
mov
jmp
pop
pushl
mov
add
push
mov
add
jmp
mov
sub
jmp
add
mov
jmp
subl
pushl
jmp
pop
mov
pop
pop
jmp
pop
mov
jmp
add
sub
xchg
mov
mov
push
pop
push
mov
mov
add
mov
push
mov
add
add
jmp
pushl
pop
push
mov
mov
add
jmp
and
add
push
push
push
mov
mov
push
mov
push
jmp
push
pushl
pop
jmp
add
sub
xchg
pop
jmp
or
jmp
push
jmp
push
mov
mov
mov
jmp
addl
jmp
push
mov
mov
pop
xor
pop
add
jmp
mov
add
jmp
push
mov
push
mov
mov
jmp
not
xor
mov
pop
add
pop
xchg
pop
push
jmp
mov
mov
not
sub
jmp
pop
push
mov
push
jmp
not
or
xor
xor
jmp
jmp
neg
xor
xor
jmp
push
mov
add
add
xchg
jmp
mov
jmp
pushl
pushl
jmp
add
push
push
mov
sub
neg
push
mov
and
push
mov
jmp
mov
jmp
mov
mov
jmp
push
jmp
mov
push
mov
push
jmp
sub
shr
shl
add
xor
pop
push
mov
xor
pushl
pop
add
push
mov
mov
pop
pushl
pop
push
push
pop
push
mov
add
sub
add
add
sub
mov
add
add
xchg
pop
and
jmp
sub
pop
add
jmp
xor
mov
jmp
popl
jmp
xchg
pop
mov
xor
mov
jmp
sub
sub
pop
add
mov
jmp
lods
jmp
add
pop
jmp
add
push
jmp
mov
jmp
shr
xor
jmp
sub
xchg
pop
jmp
push
pop
jmp
subl
jmp
xor
xor
jmp
pushl
popf
pop
rclw
pushf
jmp
push
mov
add
add
jmp
shr
sub
mov
mov
sub
sub
sub
add
pop
jmp
add
pop
add
xchg
mov
jmp
push
jmp
push
mov
neg
add
jmp
pop
push
mov
push
mov
add
sub
xchg
pop
mov
push
mov
add
mov
jmp
mov
push
push
mov
push
mov
mov
pop
mov
pop
push
push
mov
jmp
mov
push
mov
push
pop
jmp
push
push
pop
add
jmp
add
pop
push
mov
jmp
jmp
sub
add
pop
add
jmp
pop
mov
push
pop
sub
mov
jmp
sub
pop
jmp
sub
jmp
shl
push
jmp
mov
shr
dec
xchg
jmp
push
pop
or
jmp
add
pop
sub
not
add
or
pop
push
mov
and
sub
mov
addl
pop
push
mov
or
jmp
pushl
pop
jmp
push
mov
jmp
or
xor
push
mov
mov
pop
pop
add
pop
mov
add
push
jmp
mov
jmp
push
mov
mov
mov
xor
pop
jmp
push
mov
mov
jmp
sub
add
mov
jmp
mov
push
mov
push
jmp
mov
add
pop
pushl
pop
add
jmp
shl
xor
sub
jmp
mov
add
pop
mov
jmp
mov
push
jmp
push
jmp
mov
add
add
xchg
pop
and
sub
mov
mov
jmp
pushl
pop
push
mov
add
push
mov
jmp
mov
jmp
xor
xor
add
xchg
jmp
mov
jmp
push
mov
jmp
pop
jmp
not
push
mov
incl
mov
add
jmp
pushl
pop
add
push
mov
push
pushl
pushl
pop
jmp
pop
add
add
jmp
jmp
mov
sub
jmp
sub
jmp
or
pop
not
inc
add
or
xor
jmp
push
push
pushl
jmp
pushw
mov
jmp
xor
mov
shr
jmp
add
pushw
mov
mov
jmp
mov
jmp
mov
push
mov
mov
pop
pop
jmp
mov
jmp
add
pop
add
pop
add
mov
pop
jmp
pop
jmp
push
mov
jmp
mov
add
shr
add
push
mov
jmp
pop
and
jmp
or
shr
jmp
and
mov
push
jmp
sub
sub
add
pushl
pop
push
mov
jmp
xchg
jmp
mov
add
jmp
add
pop
shr
add
xor
push
mov
dec
jmp
pop
jmp
pop
mov
mov
add
jmp
xchg
not
xor
xor
xor
jmp
add
mov
add
push
jmp
add
sub
jmp
dec
push
mov
xor
jmp
pop
mov
push
mov
jmp
mov
mov
dec
push
mov
mov
and
shr
or
jmp
pop
push
mov
mov
push
mov
and
pop
not
jmp
mov
push
mov
mov
dec
jmp
mov
add
add
xor
sub
jmp
pop
shl
not
push
mov
mov
jmp
mov
mov
jmp
mov
jmp
xor
xor
jmp
shl
add
and
jmp
add
push
mov
add
sub
xchg
mov
mov
push
mov
shr
shl
dec
sub
push
mov
xor
sub
pop
mov
jmp
sub
jmp
not
mov
pushl
pop
jmp
xor
xor
add
pop
sub
jmp
mov
jmp
mov
jmp
pop
add
jmp
subl
pop
pushl
pop
add
jmp
mov
add
jmp
or
add
xor
jmp
mov
add
push
mov
push
jmp
push
jmp
mov
add
jmp
pop
pop
add
sub
jmp
push
mov
add
mov
add
sub
jmp
subl
mov
add
subl
add
push
mov
push
mov
jmp
push
mov
add
add
jmp
and
push
mov
jmp
push
mov
jmp
xorl
pop
jmp
mov
push
mov
sub
mov
addl
pop
push
mov
push
sub
mov
jmp
pop
pop
jmp
mov
mov
jmp
shl
neg
sub
xor
pop
add
sub
sub
mov
add
add
jmp
mov
jmp
xchg
jmp
push
mov
push
mov
jmp
push
mov
jmp
pop
add
jmp
sub
jmp
orl
jmp
add
pushl
pop
add
jmp
pop
sub
mov
jmp
pop
jmp
mov
mov
or
add
xor
not
shl
add
push
mov
add
and
sub
sub
jmp
add
jmp
xor
xor
xor
xor
push
push
mov
mov
add
pushl
pop
jmp
sub
jmp
xor
or
push
jmp
add
push
mov
push
mov
or
pop
jmp
add
add
pop
xor
jmp
pushl
pop
jmp
mov
add
jmp
add
push
mov
shr
add
add
jmp
xchg
pop
mov
push
pop
jmp
push
mov
jmp
sub
jmp
pop
add
pop
add
sub
sub
add
mov
add
jmp
mov
pop
mov
add
popa
popf
ret
jmp
xor
mov
add
xor
sub
pop
sub
pushl
jmp
push
mov
jmp
sub
jmp
xor
jmp
push
push
pop
add
sub
jmp
neg
xor
xor
jmp
push
mov
xor
and
jmp
mov
add
push
jmp
sub
mov
pop
jmp
push
mov
add
jmp
push
push
pop
sub
sub
add
pop
jmp
xor
pop
jmp
mov
pop
pop
mov
sub
mov
add
mov
mov
jmp
pop
push
push
mov
mov
xor
jmp
sub
xor
xor
xor
pop
mov
jmp
lods
jmp
pop
sub
mov
push
pop
push
mov
mov
pop
pop
jmp
pop
add
jmp
mov
jmp
add
add
jmp
mov
inc
and
dec
shr
sub
add
jmp
shr
add
jmp
push
mov
push
mov
mov
pop
jmp
and
push
mov
and
sub
jmp
pop
jmp
pop
xor
jmp
pushl
pop
push
push
pop
add
jmp
mov
jmp
pushl
jmp
pop
sub
sub
sub
push
mov
jmp
pop
jmp
push
mov
add
mov
jmp
push
mov
and
jmp
and
jmp
mov
push
mov
add
add
jmp
pop
mov
mov
add
and
pushl
pop
push
sub
mov
addl
pop
add
push
mov
add
jmp
push
mov
jmp
mov
jmp
pop
sub
sub
add
mov
add
xor
xor
jmp
xor
jmp
pop
xor
xor
xor
jmp
add
add
pop
mov
jmp
shlw
pushf
jmp
and
sub
mov
pop
shl
jmp
addl
jmp
pop
mov
push
jmp
add
xchg
pop
xor
pushl
mov
sub
jmp
push
mov
add
pop
add
add
sub
sub
jmp
mov
push
jmp
mov
push
mov
push
mov
addl
mov
jmp
pop
shl
xor
sub
jmp
pop
push
mov
and
xor
sub
xchg
jmp
add
add
xor
sub
add
pop
jmp
pop
sub
mov
mov
jmp
add
add
sub
xchg
mov
mov
push
jmp
pop
jmp
add
sub
push
mov
mov
sub
sub
push
mov
sub
pop
add
add
jmp
pushl
pop
push
mov
push
mov
add
pop
jmp
push
mov
mov
dec
jmp
mov
inc
xor
or
sub
jmp
pop
add
xchg
pop
sub
mov
mov
jmp
add
pop
jmp
add
jmp
sub
pop
sub
pop
add
add
jmp
mov
pop
add
pop
xchg
mov
jmp
mov
mov
add
mov
add
push
mov
mov
jmp
push
jmp
add
pop
mov
pop
add
pop
sub
add
push
mov
add
pushl
push
mov
sub
pop
pop
push
mov
add
pop
pop
pop
push
mov
push
pushl
pop
push
push
pop
jmp
sub
mov
push
pop
jmp
neg
sub
mov
pop
jmp
add
xor
movzbl
mov
push
push
jmp
pop
jmp
xor
xor
jmp
notl
pushl
pop
sub
mov
mov
jmp
sub
jmp
sub
jmp
shl
xor
mov
pop
push
mov
add
add
jmp
push
mov
jmp
or
mov
add
jmp
xor
jmp
mov
pop
pop
mov
pop
jmp
mov
push
mov
xor
sub
shr
shl
neg
add
sub
add
add
pop
jmp
xor
mov
add
add
xor
jmp
sub
jmp
mov
jmp
push
addl
pop
push
push
push
mov
jmp
push
jmp
push
mov
mov
pop
jmp
dec
jmp
pop
push
mov
jmp
push
mov
sub
pop
jmp
push
mov
inc
jmp
push
jmp
mov
jmp
push
mov
sub
mov
mov
jmp
or
add
jmp
sub
xchg
pop
mov
mov
push
mov
dec
sub
sub
add
pop
push
mov
push
notb
pop
jmp
add
popl
pop
jmp
add
add
jmp
mov
add
jmp
add
sub
jmp
mov
push
mov
add
pop
push
mov
sub
mov
jmp
pop
mov
pop
mov
jmp
mov
push
push
pop
push
jmp
mov
jmp
jmp
or
mov
push
jmp
add
xchg
mov
add
push
mov
shr
and
inc
push
sub
mov
mov
mov
pop
not
push
mov
or
or
sub
xor
xor
pop
sub
jmp
add
add
pop
push
mov
add
sub
xchg
jmp
mov
sub
pop
pop
add
xchg
mov
mov
jmp
push
mov
or
or
add
shr
push
notl
pop
xor
add
pop
pop
jmp
pushl
jmp
sub
mov
mov
not
dec
xor
jmp
mov
or
jmp
shl
xor
push
push
mov
mov
jmp
mov
jmp
mov
add
and
not
jmp
add
add
add
jmp
pop
xor
movzbl
jmp
add
pop
sub
pop
jmp
xor
xor
xor
mov
jmp
xor
mov
add
jmp
not
add
add
jmp
push
mov
jmp
add
sub
mov
add
jmp
shl
jmp
push
mov
and
mov
add
shr
sub
or
pop
jmp
mov
pop
push
mov
mov
pop
mov
add
sub
jmp
xor
add
add
jmp
push
jmp
mov
jmp
mov
mov
add
add
sub
pushl
pop
push
push
pop
push
jmp
add
pop
xchg
jmp
xchg
jmp
add
jmp
push
mov
add
jmp
pop
xchg
jmp
mov
mov
jmp
mov
add
sub
jmp
push
jmp
mov
movzbw
push
pushf
jmp
sub
add
jmp
pop
jmp
pushl
pushl
jmp
pop
push
jmp
push
jmp
mov
add
xor
pop
jmp
pop
push
jmp
neg
xor
jmp
push
jmp
add
jmp
mov
jmp
mov
jmp
sub
neg
push
mov
push
mov
mov
jmp
mov
mov
jmp
mov
push
mov
inc
shl
jmp
xchg
mov
mov
jmp
mov
jmp
push
mov
inc
not
sub
sub
pop
jmp
add
push
pushl
pop
popl
mov
jmp
sub
jmp
pop
sub
mov
mov
jmp
push
jmp
pop
pushw
mov
push
mov
xor
mov
pop
push
jmp
pop
shr
push
mov
shr
inc
dec
xor
add
pop
mov
pushl
pop
push
push
pop
jmp
mov
push
mov
mov
sub
pop
add
pop
jmp
push
push
mov
push
push
pop
add
add
xchg
pop
push
mov
mov
push
push
jmp
add
push
jmp
xchg
pop
push
pop
jmp
pop
sub
jmp
pop
push
mov
push
mov
or
xor
inc
add
sub
mov
add
and
dec
shl
sub
sub
jmp
pop
mov
mov
or
shl
sub
mov
jmp
push
pop
sub
add
jmp
pop
xchg
mov
mov
push
mov
push
pop
push
push
pop
push
sub
pop
jmp
mov
push
jmp
shl
push
jmp
mov
sub
xchg
mov
mov
push
push
pop
mov
jmp
pushl
pushl
mov
sub
mov
mov
push
mov
shl
sub
shr
add
inc
jmp
mov
and
not
push
jmp
mov
mov
jmp
pop
add
jmp
xor
pop
pushl
pop
add
add
add
pushl
jmp
pop
jmp
mov
add
add
sub
mov
add
jmp
subl
add
addl
mov
add
jmp
mov
and
pushf
jmp
sub
mov
add
mov
push
mov
mov
push
mov
push
jmp
sub
add
add
mov
add
jmp
pushl
pop
push
jmp
mov
push
mov
push
pop
sub
mov
push
push
jmp
mov
jmp
sub
mov
jmp
xor
mov
add
add
jmp
pop
inc
sub
add
add
xor
push
mov
sub
jmp
sub
jmp
add
sub
jmp
shr
add
add
sub
sub
jmp
xor
jmp
sub
add
add
mov
push
mov
add
add
xchg
pop
sub
mov
sub
mov
mov
sub
xor
jmp
add
jmp
xor
xor
jmp
add
add
jmp
xchg
pop
add
mov
push
jmp
mov
mov
add
jmp
xor
jmp
add
push
mov
jmp
add
mov
add
push
mov
mov
sub
pop
push
pushl
pop
popl
pop
mov
jmp
pop
jmp
pop
push
push
jmp
pop
xchg
pop
mov
push
pushl
mov
add
add
push
jmp
push
mov
mov
push
addl
sub
push
mov
push
mov
sub
jmp
sub
add
jmp
xchg
jmp
add
add
xchg
pop
pushl
jmp
pop
push
jmp
sub
jmp
pop
jmp
add
add
xchg
jmp
push
mov
not
mov
pop
or
dec
xor
jmp
mov
push
mov
dec
sub
sub
add
add
pop
add
xchg
mov
push
mov
add
jmp
mov
bts
pushf
jmp
sub
not
push
mov
not
inc
xor
sub
sub
jmp
neg
add
add
mov
pop
or
not
shr
or
xor
sub
pop
add
add
pushl
pop
push
mov
mov
push
mov
add
pop
add
jmp
mov
push
push
pop
sub
mov
push
sub
jmp
mov
mov
jmp
push
push
pushl
pop
push
sub
mov
addl
jmp
add
jmp
mov
mov
jmp
add
pushl
pop
jmp
push
jmp
mov
jmp
mov
add
jmp
mov
movzbw
push
pushf
jmp
not
sub
xor
neg
xor
jmp
mov
mov
neg
sub
shr
jmp
pushw
mov
jmp
pop
mov
pop
sub
shl
add
add
add
sub
mov
push
mov
jmp
mov
add
push
mov
jmp
push
jmp
pop
xchg
jmp
mov
pop
xor
inc
and
sub
push
mov
jmp
add
add
add
sub
or
pop
inc
xor
jmp
pop
pop
jmp
push
mov
inc
sub
shl
sub
add
pop
jmp
pop
add
jmp
add
jmp
mov
jmp
shl
jmp
pop
jmp
and
jmp
add
pop
push
mov
sub
pop
push
push
mov
mov
jmp
mov
mov
pop
push
jmp
add
add
xchg
pop
jmp
pop
jmp
xchg
pop
jmp
xchg
pop
mov
jmp
xor
xor
pop
or
je
push
jmp
xchg
jmp
mov
sub
pop
sub
pop
pop
push
push
push
jmp
shl
jmp
xor
mov
xor
mov
add
push
jmp
pop
add
sub
add
jmp
pop
add
xor
xor
xor
pop
rorw
pushf
jmp
xchg
jmp
addl
pushl
pushl
jmp
pop
push
jmp
pop
not
add
or
xor
and
pushl
jmp
add
add
jmp
not
add
add
pop
sub
sub
jmp
mov
jmp
mov
jmp
mov
jmp
xchg
mov
jmp
shr
xor
jmp
neg
jmp
pop
xor
mov
add
push
push
push
pop
not
add
mov
mov
jmp
mov
add
add
push
pushl
pop
jmp
mov
push
jmp
push
mov
mov
xor
jmp
mov
mov
or
shr
jmp
add
sub
xchg
jmp
mov
add
add
jmp
add
pop
add
sub
pop
push
mov
mov
push
mov
mov
dec
push
sub
pop
push
mov
jmp
mov
jmp
pop
push
mov
add
sub
jmp
mov
shr
not
sub
dec
jmp
xchg
mov
mov
mov
add
jmp
add
add
push
mov
sub
pop
pop
add
xor
xor
xor
mov
push
mov
add
push
jmp
add
push
mov
jmp
pushl
jmp
sub
sub
mov
pushl
mov
sub
mov
mov
push
mov
jmp
mov
mov
pop
jmp
mov
add
jmp
mov
sub
mov
addl
mov
jmp
mov
mov
add
jmp
shl
or
jmp
dec
push
sub
pop
jmp
shl
xor
or
add
sub
pop
or
jmp
xor
shl
jmp
or
add
or
pop
jmp
sub
push
mov
push
mov
jmp
add
pop
jmp
add
push
mov
sub
sub
jmp
pop
add
movzbl
popw
jmp
pop
popl
mov
jmp
addl
mov
jmp
mov
sub
jmp
pop
push
pushl
mov
jmp
add
pop
xor
xor
jmp
mov
jmp
mov
mov
add
shr
push
push
jmp
and
or
shr
dec
add
add
mov
jmp
add
add
jmp
xor
xor
jmp
mov
push
jmp
push
mov
xor
jmp
mov
pop
mov
add
jmp
mov
add
add
jmp
imul
push
pushf
jmp
push
jmp
pop
pop
pop
pop
pop
jmp
add
pop
jmp
sub
mov
jmp
mov
pushw
mov
push
mov
mov
push
mov
push
mov
push
jmp
pop
mov
pop
push
mov
mov
pop
pop
pop
mov
xor
pop
sub
jmp
push
mov
dec
or
xor
mov
pop
add
add
jmp
add
push
mov
add
add
xchg
pop
mov
push
mov
jmp
push
mov
jmp
mov
jmp
add
jmp
sub
add
add
jmp
xor
neg
shl
shl
jmp
add
add
pop
add
push
pushl
mov
add
popl
pop
sub
sub
add
push
mov
push
mov
mov
mov
jmp
xchg
mov
push
mov
addl
sub
subl
pop
push
mov
jmp
lods
jmp
add
jmp
push
pushl
jmp
xor
xor
sub
jmp
pop
mov
mov
add
jmp
pushl
pop
add
add
push
mov
sub
jmp
mov
jmp
sub
mov
add
jmp
add
push
jmp
mov
push
jmp
and
and
sub
jmp
push
pushl
pushl
pop
add
push
jmp
jmp
pop
push
push
pop
pop
xor
xor
xor
not
xchg
xchg
push
push
pop
pop
push
mov
add
sub
xchg
pop
mov
mov
jmp
popl
jmp
add
add
pop
mov
add
sub
sub
push
sub
mov
push
jmp
add
add
xor
pushl
pop
add
push
mov
mov
add
sub
xchg
pop
mov
push
push
pop
push
jmp
not
sub
mov
jmp
add
add
pop
xor
xor
xor
pop
push
mov
add
add
xchg
jmp
sub
mov
jmp
pushl
jmp
add
add
xchg
jmp
push
mov
shr
jmp
pushl
pop
popl
mov
movsbw
push
mov
sub
mov
push
mov
push
mov
mov
mov
jmp
add
push
jmp
add
jmp
add
pop
sub
jmp
sub
add
jmp
push
mov
jmp
pop
dec
sub
jmp
mov
jmp
mov
mov
xor
inc
shl
push
subl
pop
shl
push
mov
push
mov
and
jmp
push
jmp
pushl
jmp
sub
pushf
jmp
xor
add
not
jmp
pop
jmp
shl
push
jmp
push
sub
mov
mov
and
xor
mov
pop
jmp
push
mov
sub
sub
add
pop
jmp
mov
push
mov
and
jmp
mov
push
mov
add
pop
sub
xchg
pop
mov
jmp
push
mov
jmp
add
jmp
mov
push
mov
add
push
mov
sub
push
mov
addl
popl
push
mov
subl
add
push
mov
jmp
push
mov
add
add
jmp
push
sub
jmp
and
inc
jmp
add
sub
sub
jmp
push
mov
jmp
push
mov
jmp
mov
sub
jmp
add
jmp
pop
push
mov
add
add
xchg
pop
mov
add
push
mov
shl
jmp
mov
push
mov
sub
mov
mov
not
jmp
pop
mov
pop
pushl
pushl
pop
add
push
mov
push
pop
jmp
push
pushl
mov
add
push
mov
add
add
xchg
jmp
mov
push
mov
push
push
mov
add
jmp
lods
push
jmp
push
jmp
xor
pop
add
mov
add
xor
xor
xor
pop
rolw
pushf
jmp
add
sub
sub
pop
push
pushl
mov
add
popl
mov
mov
mov
jmp
pop
add
xchg
mov
mov
push
push
mov
push
pop
add
push
jmp
add
jmp
shr
sub
dec
push
jmp
push
jmp
or
pop
push
jmp
xor
jmp
pop
push
mov
dec
push
jmp
add
pop
jmp
push
pop
jmp
add
jmp
xor
mov
add
push
mov
not
jmp
and
xor
add
xor
pop
add
sub
mov
push
mov
add
xor
mov
pop
push
mov
add
jmp
mov
mov
add
add
mov
push
mov
add
add
xchg
jmp
add
push
jmp
sub
add
jmp
xor
pop
shl
not
add
sub
pop
pop
add
jmp
sub
sub
sub
pop
sub
jmp
add
push
mov
mov
shl
add
inc
push
mov
add
sub
xchg
pop
mov
mov
sub
pop
push
mov
add
add
sub
jmp
and
add
xor
push
mov
mov
mov
mov
add
pop
mov
pop
dec
xor
push
mov
sub
push
mov
shl
or
inc
jmp
mov
sub
mov
jmp
neg
shl
add
mov
jmp
popw
jmp
add
xchg
mov
jmp
sub
pop
sub
add
jmp
push
mov
xor
xor
dec
add
push
mov
mov
jmp
add
shr
dec
push
mov
jmp
add
pop
pushl
pop
add
sub
jmp
mov
sub
jmp
shl
xor
jmp
xchg
pop
push
pop
xor
pushl
jmp
mov
jmp
add
push
mov
xor
pop
pushw
jmp
add
jmp
sub
mov
push
mov
mov
add
add
xchg
pop
sub
mov
pushl
pop
popl
mov
jmp
mov
and
pop
jmp
pushl
jmp
push
jmp
push
push
mov
mov
mov
add
jmp
dec
push
mov
sub
xor
xor
pop
or
add
xor
pop
push
mov
jmp
push
pushl
pop
jmp
add
pop
sub
sub
add
sub
pop
add
sub
push
mov
push
mov
sub
pop
add
sub
mov
add
push
mov
jmp
add
push
push
jmp
xor
add
mov
add
sub
mov
mov
add
push
mov
neg
jmp
neg
and
sub
sub
pop
jmp
add
pop
push
mov
add
sub
xchg
jmp
push
mov
add
add
xchg
pop
pushl
pop
push
mov
mov
push
mov
sub
add
add
pop
add
xchg
jmp
mov
push
push
push
mov
jmp
mov
jmp
mov
push
mov
mov
push
mov
mov
jmp
add
mov
add
sub
mov
mov
shr
jmp
mov
and
pop
push
mov
push
mov
add
sub
xchg
pop
jmp
mov
push
mov
push
mov
push
mov
jmp
mov
jmp
mov
mov
pop
xor
pop
sub
jmp
add
mov
push
jmp
mov
mov
jmp
sub
sub
push
push
mov
jmp
pop
add
xchg
push
jmp
mov
push
push
pushl
jmp
mov
notl
subl
pushl
mov
add
add
sub
push
mov
jmp
mov
shl
shl
not
shr
xor
jmp
xor
push
push
pop
sub
jmp
push
mov
add
sub
jmp
mov
mov
jmp
sub
pop
jmp
pop
add
pop
xchg
mov
pop
sub
push
push
pushl
jmp
mov
and
pop
or
sub
add
add
sub
pop
xor
xor
jmp
add
jmp
popl
mov
test
pushf
jmp
add
sub
add
pop
push
xorl
jmp
xor
jmp
push
jmp
sub
push
mov
xchg
not
xchg
pop
jmp
pop
mov
push
mov
add
push
mov
add
pop
xor
xor
xor
pop
push
mov
mov
pop
pushl
pop
add
jmp
mov
push
mov
push
jmp
xchg
xor
sub
sub
jmp
mov
pop
pop
add
jmp
sub
jmp
mov
or
pop
neg
jmp
add
sub
sub
jmp
push
mov
jmp
push
mov
jmp
neg
and
inc
dec
add
xor
pushl
mov
add
push
mov
push
mov
jmp
push
mov
jmp
sub
pop
xor
add
neg
push
mov
xchg
not
xchg
xor
inc
sub
jmp
add
pop
add
sub
jmp
shr
dec
push
mov
add
jmp
add
xchg
pop
sub
mov
jmp
add
subl
jmp
pushl
pop
push
mov
add
add
jmp
push
jmp
sub
jmp
add
add
jmp
sub
pop
jmp
add
jmp
shr
jmp
mov
xor
mov
jmp
push
mov
xor
pop
add
mov
add
sub
jmp
pop
add
pop
sub
jmp
sub
std
push
mov
push
mov
add
jmp
sub
shl
push
mov
jmp
pop
sub
add
add
mov
pop
pushl
pushl
mov
push
jmp
pop
jmp
xor
jmp
xchg
pop
shl
xor
neg
sub
mov
mov
xor
pop
push
push
mov
push
mov
add
xor
jmp
mov
push
mov
jmp
push
mov
and
xor
sub
pop
jmp
pop
add
pop
add
sub
movzbl
jmp
popa
ret
mov
push
mov
add
push
mov
sub
pop
xor
jmp
xchg
pop
add
push
push
jmp
not
inc
jmp
pop
pop
add
jmp
pop
jmp
mov
push
mov
add
add
jmp
sub
pop
jmp
add
add
jmp
pop
sub
jmp
mov
add
pop
sub
jmp
add
xchg
pop
jmp
mov
sub
sub
jmp
push
mov
jmp
xor
xor
xor
push
mov
push
jmp
mov
jmp
pop
popl
pop
mov
jmp
add
jmp
xor
mov
add
sub
mov
jmp
popl
pop
push
mov
push
mov
push
jmp
xor
pop
add
sub
sub
jmp
push
mov
jmp
add
sub
xchg
pop
mov
push
mov
jmp
mov
mov
sub
mov
jmp
mov
mov
sub
mov
push
pop
add
add
xchg
pop
pushl
sub
jmp
mov
neg
sub
not
xor
jmp
add
push
push
pop
jmp
pop
add
push
push
mov
mov
pop
add
add
sub
shr
shl
sub
add
add
sub
mov
add
mov
add
add
jmp
xchg
mov
jmp
push
mov
jmp
push
jmp
add
pop
jmp
pushl
popf
pop
sbb
pushf
jmp
add
add
sub
pop
inc
or
shl
push
mov
neg
shl
add
and
pop
sub
sub
add
push
mov
add
jmp
add
jmp
pushl
jmp
pop
sub
pop
push
jmp
pop
add
xchg
pop
jmp
mov
jmp
add
jmp
sub
jmp
mov
add
jmp
mov
xor
jmp
mov
add
jmp
mov
push
mov
sub
jmp
xor
pushl
mov
jmp
sub
sub
jmp
mov
add
push
push
mov
push
pop
pop
sub
pop
xor
xor
xor
pop
jmp
sub
pop
sub
push
mov
add
pop
add
sub
jmp
mov
add
push
push
mov
mov
add
mov
jmp
pop
jmp
mov
mov
xor
pop
sub
mov
push
mov
jmp
sub
and
add
push
mov
jmp
add
add
jmp
add
jmp
add
add
sub
add
jmp
push
decl
pop
push
mov
jmp
sub
mov
push
pop
push
mov
mov
add
or
push
mov
mov
jmp
mov
add
push
mov
add
mov
jmp
jmp
or
je
push
mov
pushl
mov
push
push
jmp
xor
and
pushl
mov
push
jmp
mov
jmp
add
xchg
pop
push
mov
jmp
shl
add
mov
mov
add
add
jmp
pop
sub
xchg
pop
mov
push
mov
jmp
add
pushl
pop
add
xchg
mov
push
mov
add
jmp
pop
add
push
mov
add
sub
jmp
add
add
jmp
push
jmp
mov
mov
pop
jmp
add
push
mov
jmp
sub
push
mov
not
neg
dec
inc
add
sub
pop
pushl
mov
jmp
add
pop
add
xchg
jmp
shl
add
add
sub
jmp
pushl
pop
jmp
pop
pop
push
sub
mov
mov
shl
push
push
pop
jmp
add
push
push
mov
addl
pop
push
mov
push
pop
jmp
mov
push
mov
add
mov
add
sub
pop
add
add
sub
push
mov
push
mov
xor
mov
add
push
mov
xor
push
mov
push
mov
add
pop
and
push
mov
jmp
mov
add
jmp
sub
mov
mov
and
neg
push
jmp
add
pop
xor
jmp
not
jmp
and
jmp
xor
xor
jmp
push
mov
add
add
xchg
mov
not
dec
jmp
pop
xchg
mov
xor
pushf
jmp
mov
pop
jmp
add
jmp
push
push
mov
sub
pop
pushl
pop
push
mov
push
mov
jmp
mov
add
push
mov
mov
add
add
jmp
xor
inc
shr
sub
add
pop
add
sub
sub
jmp
and
shl
push
mov
inc
sub
push
mov
sub
pop
and
pop
push
mov
or
shl
shl
not
inc
jmp
mov
mov
add
jmp
pop
jmp
sub
jmp
notl
pop
add
mov
pop
jmp
sub
jmp
pop
jmp
xor
pop
mov
push
push
mov
add
dec
jmp
add
pop
add
xor
xor
xor
mov
jmp
dec
jmp
add
xor
and
jmp
pop
shr
add
and
dec
jmp
pop
xchg
pop
jmp
add
add
sub
sub
sub
pop
shl
jmp
mov
mov
push
mov
not
shr
shr
add
add
pop
push
mov
jmp
add
xchg
pop
jmp
push
pushl
mov
add
popl
pop
add
pushf
jmp
mov
jmp
mov
mov
add
add
xchg
jmp
sub
add
add
jmp
xor
xor
add
jmp
sub
mov
mov
add
sub
pop
add
push
mov
add
pop
pop
xor
movzbl
jmp
push
jmp
pop
jmp
shr
add
jmp
add
sub
add
add
push
mov
sub
mov
add
mov
jmp
pop
push
mov
push
mov
push
mov
push
push
mov
mov
add
sub
sub
pop
push
pushl
pop
add
pop
mov
pop
subl
subl
jmp
sub
xchg
pop
jmp
sub
jmp
sub
mov
jmp
mov
add
jmp
add
add
mov
jmp
pop
xor
add
pop
xor
jmp
xor
xor
xor
mov
mov
jmp
pop
sub
mov
pop
dec
add
jmp
lods
sub
push
mov
xor
sub
sub
sub
jmp
push
mov
add
jmp
mov
mov
sub
mov
mov
jmp
pop
xor
jmp
mov
push
mov
jmp
push
mov
add
add
push
sub
mov
jmp
add
push
mov
add
pop
xchg
jmp
addl
pop
push
mov
or
shl
xor
dec
sub
add
pop
jmp
sub
pop
push
jmp
add
add
jmp
add
sub
pop
add
add
jmp
push
jmp
or
and
jmp
push
mov
add
jmp
push
push
mov
mov
xor
pop
jmp
add
add
pop
xor
jmp
add
sub
pop
sub
push
mov
dec
jmp
push
push
mov
shl
sub
mov
pop
not
jmp
mov
add
popl
pop
idiv
movzbw
pushw
mov
movzbw
push
pushf
jmp
mov
xor
jmp
add
push
mov
add
pop
xchg
mov
jmp
push
addl
pop
sub
mov
add
dec
neg
jmp
mov
add
inc
jmp
xor
sub
pop
add
pop
push
mov
sub
pop
xchg
pop
mov
push
mov
push
mov
add
add
xchg
pop
add
sub
mov
mov
shl
jmp
push
mov
jmp
sub
mov
mov
add
add
xchg
pop
sub
mov
pushl
pop
add
jmp
add
jmp
dec
jmp
not
sub
xor
mov
pop
shl
jmp
and
and
sub
push
jmp
add
mov
add
xor
jmp
add
push
mov
add
pop
push
mov
add
sub
xchg
pop
jmp
pop
add
jmp
pop
push
mov
sub
mov
pop
inc
sub
add
add
sub
mov
add
jmp
mov
push
mov
add
push
mov
shl
and
add
sub
add
mov
add
add
jmp
pushl
pushl
mov
push
mov
add
add
jmp
pop
addl
subl
add
addl
jmp
add
jmp
push
jmp
pop
push
mov
add
sub
add
jmp
pop
mov
add
push
mov
shl
xor
shr
sub
add
add
sub
jmp
xor
pop
push
mov
mov
pop
pushl
pop
push
mov
push
mov
not
push
mov
and
inc
neg
or
sub
xor
jmp
xor
pop
and
pop
inc
jmp
popl
mov
push
jmp
or
sub
jmp
add
pop
pop
jmp
add
pop
sub
sub
jmp
mov
push
jmp
sub
mov
addl
pop
push
mov
sub
add
sub
sub
add
sub
jmp
mov
jmp
sub
jmp
pop
add
pop
xor
xor
xor
pop
add
xor
pushf
jmp
push
mov
jmp
mov
add
jmp
inc
add
jmp
push
pop
push
jmp
sub
jmp
mov
add
jmp
xor
inc
push
jmp
pop
add
add
xchg
pop
pop
jmp
neg
and
add
sub
jmp
neg
jmp
popl
mov
jmp
mov
jmp
xchg
pop
sub
push
jmp
add
push
mov
sub
jmp
add
jmp
mov
jmp
add
push
mov
jmp
push
mov
sub
mov
mov
shl
neg
xor
mov
pop
jmp
mov
pushl
pop
push
mov
jmp
pop
push
push
mov
jmp
push
incl
pop
sub
mov
mov
add
add
jmp
mov
add
push
pushl
pop
add
pushl
pop
jmp
mov
sub
pop
sub
sub
add
add
jmp
inc
sub
xor
sub
jmp
mov
push
jmp
mov
mov
add
jmp
mov
mov
sub
pop
mov
mov
add
add
sub
add
add
sub
pop
add
sub
push
mov
sub
pop
mov
add
push
mov
push
mov
mov
mov
jmp
add
not
and
push
mov
sub
add
add
jmp
mov
add
add
xchg
pop
inc
push
mov
mov
xor
mov
add
xor
pushl
pushl
pushl
mov
jmp
mov
push
pop
jmp
mov
sub
mov
push
mov
addl
pop
push
push
mov
mov
pop
jmp
push
jmp
pop
add
sub
mov
mov
push
mov
jmp
popl
pop
push
jmp
sub
sub
pop
sub
pop
add
add
add
jmp
sub
mov
sub
mov
push
push
mov
mov
pop
xor
mov
pop
jmp
pop
jmp
mov
add
jmp
sub
jmp
push
mov
sub
sub
add
pop
and
pop
push
jmp
sub
jmp
pop
add
xchg
jmp
sub
mov
mov
push
mov
sub
sub
not
add
neg
jmp
popl
pop
jmp
shl
not
add
shl
jmp
sub
sub
add
jmp
mov
add
sub
jmp
pop
push
mov
jmp
mov
pop
push
notl
pop
shl
xor
add
pop
add
jmp
xchg
not
sub
mov
mov
push
jmp
pop
add
add
push
push
mov
addl
pop
add
jmp
mov
add
add
jmp
lods
jmp
mov
add
jmp
pushl
jmp
xor
sub
add
add
pop
jmp
push
mov
jmp
add
sub
sub
mov
jmp
push
jmp
mov
pop
mov
mov
push
mov
jmp
add
sub
xchg
pop
mov
push
mov
mov
pop
jmp
pushl
pop
push
mov
add
jmp
mov
mov
sub
pop
sub
pushl
pop
add
add
push
jmp
push
popl
addl
pushl
pushl
pop
push
mov
push
jmp
pop
push
mov
pushl
pop
popl
mov
movzbw
pushw
mov
jmp
mov
push
pop
push
mov
add
pop
add
xor
xor
xor
pop
movsbl
jmp
mov
jmp
pushl
pop
popl
pop
jmp
pop
sub
xor
mov
add
add
pop
add
add
jmp
pop
sub
pushl
mov
jmp
mov
push
mov
sub
mov
pop
sub
shr
jmp
pop
push
mov
jmp
pop
shr
xor
add
jmp
not
sub
jmp
shl
sub
jmp
mov
push
sub
mov
mov
mov
mov
add
jmp
add
push
push
mov
addl
pop
jmp
mov
jmp
add
add
add
push
mov
push
push
jmp
mov
mov
jmp
add
push
push
mov
xor
mov
pop
sub
sub
add
jmp
push
pushl
pop
popl
pop
push
mov
jmp
push
pop
inc
jmp
add
push
mov
add
jmp
pop
add
push
jmp
mov
test
pushf
jmp
xchg
jmp
mov
jmp
push
jmp
push
jmp
add
pop
xchg
mov
add
pop
add
xchg
mov
pushl
pushl
jmp
push
sub
mov
pop
pushl
pop
push
mov
push
jmp
pop
mov
add
jmp
add
pop
push
mov
add
mov
add
xor
xor
xor
pop
xor
jmp
add
push
mov
add
pop
jmp
mov
pop
add
pop
push
mov
pushl
pop
popl
mov
mov
jmp
xor
jmp
add
add
jmp
xchg
mov
push
push
mov
add
pop
pushl
jmp
xor
xor
mov
jmp
mov
neg
xchg
neg
jmp
lods
xor
sub
mov
jmp
add
jmp
mov
push
mov
add
pop
sub
xchg
jmp
mov
jmp
push
mov
add
mov
add
jmp
inc
shl
add
xor
jmp
pop
popl
mov
shll
pushf
jmp
push
mov
push
mov
push
jmp
add
jmp
mov
jmp
popl
addl
pop
add
sub
push
pushl
mov
add
popl
mov
mov
mov
jmp
push
mov
add
sub
jmp
mov
sub
pop
jmp
inc
add
jmp
mov
xor
jmp
xchg
mov
jmp
pop
popl
pop
push
pushl
pop
popl
pop
jmp
mov
push
mov
push
jmp
pop
jmp
xor
pop
sub
sub
pop
sub
sub
sub
push
jmp
mov
add
push
mov
xor
mov
add
jmp
pop
add
xchg
pop
jmp
pop
pop
push
mov
xor
jmp
xor
jmp
sub
add
mov
push
jmp
xchg
pop
mov
push
pop
add
push
jmp
sub
pop
jmp
add
mov
mov
sub
mov
mov
push
mov
shl
xor
add
add
jmp
pop
add
jmp
mov
xor
sub
pop
and
mov
add
jmp
add
pop
add
xchg
mov
popl
jmp
pop
push
mov
neg
sub
add
pop
push
push
pop
add
push
mov
mov
jmp
pushl
pop
add
jmp
add
xchg
pop
add
jmp
push
mov
add
pop
add
push
jmp
push
push
jmp
xor
pop
add
jmp
pop
push
mov
add
pop
sub
mov
pushl
pushl
mov
add
add
jmp
add
jmp
add
pop
neg
not
inc
sub
sub
sub
add
add
sub
jmp
or
xor
sub
pop
xor
sub
mov
add
pop
push
jmp
mov
sub
mov
mov
add
add
sub
mov
add
sub
mov
sub
mov
push
jmp
add
jmp
add
and
or
sub
push
mov
inc
and
jmp
mov
mov
jmp
push
mov
jmp
add
xchg
pop
xor
xor
jmp
pop
jmp
mov
jmp
add
movzbl
pushw
mov
jmp
sub
mov
push
jmp
pop
sub
mov
jmp
push
mov
sub
sub
jmp
shr
not
neg
shl
jmp
push
push
push
mov
mov
jmp
sub
sub
jmp
pop
jmp
add
pop
add
dec
jmp
add
push
push
mov
add
push
mov
add
jmp
add
pop
push
mov
push
mov
shr
jmp
xchg
pop
add
push
jmp
sub
mov
mov
add
add
mov
pushl
mov
add
jmp
pop
push
push
mov
not
dec
and
sub
push
mov
jmp
mov
mov
pop
xchg
jmp
mov
pop
and
mov
add
push
mov
or
sub
xor
pop
mov
pop
add
xor
or
add
add
jmp
mov
mov
xor
pop
mov
mov
jmp
mov
pop
or
neg
dec
inc
jmp
xchg
jmp
pushl
pop
jmp
push
mov
addl
pop
push
mov
jmp
xor
mov
jmp
subl
add
addl
jmp
add
xchg
pop
push
push
mov
shl
push
decl
jmp
push
mov
jmp
pop
jmp
mov
mov
sub
xchg
pop
sub
sub
jmp
pop
push
mov
add
add
xchg
pop
sub
jmp
push
push
jmp
pop
push
mov
neg
xor
sub
sub
and
pop
push
jmp
sub
jmp
shr
push
mov
sub
sub
add
mov
push
mov
mov
add
jmp
shl
sub
add
jmp
push
sub
jmp
push
pushl
pop
jmp
mov
mov
add
jmp
mov
push
mov
add
add
xchg
mov
mov
add
push
mov
sub
add
push
jmp
lods
xor
jmp
pop
sub
add
mov
add
jmp
xor
pushl
jmp
add
sub
pushl
pop
add
jmp
add
jmp
mov
jmp
xor
xor
pop
shrb
pushf
jmp
xor
xor
pop
add
add
mov
add
add
sub
push
jmp
pop
push
mov
pushl
jmp
add
pop
jmp
mov
mov
not
push
decl
mov
add
inc
shr
add
sub
add
jmp
mov
jmp
add
add
add
pop
add
xchg
mov
jmp
mov
add
sub
mov
jmp
push
push
push
mov
addl
popl
push
jmp
sub
pop
push
pushl
mov
add
popl
jmp
mov
xchg
not
xor
xor
xor
mov
push
mov
push
mov
push
mov
jmp
shl
jmp
push
mov
xor
shr
or
add
or
add
or
jmp
xor
jmp
pop
jmp
add
xor
xor
xor
mov
or
je
pushl
jmp
shl
xor
add
sub
sub
pop
sub
mov
add
jmp
pop
jmp
pop
shr
jmp
add
jmp
sub
jmp
mov
mov
add
mov
add
sub
xchg
mov
mov
pop
mov
jmp
push
mov
inc
sub
dec
shr
jmp
add
push
mov
push
mov
push
mov
add
xor
push
mov
xor
sub
mov
add
add
pushl
jmp
add
pop
sub
push
push
mov
mov
jmp
sub
add
pop
jmp
add
add
sub
pop
xchg
mov
jmp
mov
push
mov
shr
xor
add
mov
jmp
pop
sub
subl
pop
mov
push
jmp
push
push
mov
jmp
mov
push
jmp
xor
mov
or
je
pushl
pushl
pushl
mov
jmp
add
jmp
add
pop
push
sub
mov
mov
inc
shr
or
dec
sub
jmp
mov
push
jmp
shr
sub
mov
pop
add
mov
add
xchg
jmp
xor
pop
mov
jmp
push
mov
xor
or
jmp
add
jmp
pushl
mov
add
push
jmp
pop
add
jmp
sub
pop
jmp
mov
mov
sub
sub
mov
addl
popl
push
mov
add
pop
mov
push
jmp
mov
jmp
add
pop
push
mov
jmp
mov
shl
neg
xor
neg
sub
jmp
push
jmp
mov
addl
popl
addl
jmp
push
pop
pop
dec
shr
neg
push
mov
xor
pop
sub
mov
add
add
sub
jmp
pop
shr
sub
add
jmp
add
sub
sub
pop
push
mov
sub
push
mov
jmp
xor
pop
jmp
xor
xor
jmp
mov
mov
xor
jmp
mov
jmp
mov
xor
push
mov
push
push
mov
mov
jmp
pop
push
mov
jmp
add
jmp
mov
or
jmp
sub
mov
add
push
mov
add
jmp
mov
sub
pushl
pop
jmp
sub
jmp
pop
sub
pop
jmp
sub
pop
xor
mov
add
push
mov
mov
push
notl
pop
inc
push
jmp
add
jmp
push
sub
pop
xor
xor
jmp
not
shr
push
jmp
add
sub
jmp
mov
sub
jmp
push
mov
add
jmp
mov
mov
pop
xor
pushl
pop
push
mov
add
jmp
mov
push
mov
add
sub
xchg
pop
mov
sub
mov
mov
add
sub
xchg
jmp
imul
push
pushf
jmp
or
sub
add
pop
add
xchg
pop
push
jmp
push
mov
add
sub
jmp
inc
jmp
xor
jmp
pop
push
jmp
sub
pop
sub
jmp
pushl
pop
add
shl
jmp
or
push
mov
sub
add
add
pop
jmp
push
jmp
mov
jmp
push
mov
sub
jmp
inc
push
mov
xor
pop
jmp
mov
pop
add
sub
and
sub
add
jmp
pop
push
mov
jmp
and
jmp
mov
add
push
mov
and
jmp
add
jmp
mov
and
xor
xor
mov
jmp
sub
push
pushl
mov
add
jmp
add
pushl
pop
add
sub
push
jmp
mov
add
xor
xor
xor
pop
push
jmp
mov
add
jmp
sub
pop
jmp
add
push
jmp
mov
jmp
mov
add
jmp
shl
push
mov
xor
mov
push
mov
add
add
xchg
pop
jmp
pushl
jmp
mov
jmp
push
mov
push
mov
not
xor
jmp
xchg
pop
add
xor
xor
jmp
add
add
sub
push
push
mov
not
jmp
sub
pop
pop
xor
jmp
mov
mov
pop
pop
push
jmp
pop
xchg
mov
mov
push
jmp
mov
push
jmp
inc
jmp
push
mov
add
push
mov
push
jmp
add
jmp
xor
mov
push
jmp
push
push
pop
add
push
mov
add
jmp
push
mov
jmp
push
push
mov
not
and
add
push
jmp
push
mov
or
pushl
pop
add
jmp
movzwl
push
jmp
mov
pushl
pushl
pushl
jmp
mov
jmp
push
push
push
push
jmp
push
push
push
pop
xor
jmp
mov
add
add
sub
sub
add
add
add
sub
push
jmp
pushl
jmp
or
jmp
mov
or
sub
mov
pop
not
sub
mov
mov
jmp
mov
pop
shl
neg
or
add
add
pushl
pop
push
mov
add
add
xchg
pop
push
mov
mov
push
push
push
pop
xor
sub
and
add
jmp
xor
xor
mov
sub
mov
mov
jmp
push
mov
add
pop
sub
push
jmp
mov
sub
mov
push
push
popl
push
mov
add
pop
pop
add
push
mov
sub
mov
push
push
pushl
pop
add
shl
jmp
mov
mov
push
mov
add
push
mov
jmp
not
xchg
pop
inc
add
sub
pop
push
mov
add
pop
and
jmp
push
pop
pop
jmp
sub
xchg
pop
mov
mov
add
pop
jmp
mov
mov
jmp
push
mov
mov
pop
push
jmp
xchg
pop
add
sub
jmp
add
xchg
mov
jmp
mov
mov
inc
sub
dec
add
push
push
push
mov
mov
add
pop
jmp
add
push
push
jmp
push
mov
jmp
sub
pop
push
xorl
pop
xor
pop
jmp
pop
push
mov
add
pushl
pop
add
push
jmp
add
push
mov
push
push
mov
mov
xor
mov
add
jmp
add
jmp
mov
add
add
push
mov
jmp
add
push
mov
sub
mov
mov
jmp
mov
jmp
push
jmp
pop
push
push
mov
add
mov
add
pop
sub
jmp
mov
pop
jmp
push
mov
jmp
shl
xor
sub
add
mov
add
sub
add
push
mov
sub
mov
mov
add
xchg
not
xchg
add
or
pop
jmp
add
xchg
pop
popl
mov
sub
mov
push
push
mov
mov
pop
jmp
mov
pushl
pop
popl
jmp
pushl
pushl
pop
jmp
mov
or
pushf
jmp
sub
jmp
mov
jmp
mov
mov
mov
jmp
pop
pop
add
pushl
pop
add
sub
jmp
lods
sub
jmp
shl
push
mov
add
pop
push
jmp
add
sub
sub
jmp
shr
xor
add
add
jmp
jmp
push
mov
mov
sub
pop
push
mov
dec
jmp
mov
xor
pushf
jmp
pop
mov
add
jmp
mov
push
mov
add
add
jmp
xchg
pop
push
mov
sub
add
add
jmp
not
inc
and
jmp
pop
jmp
mov
sub
mov
jmp
or
add
shr
shl
add
xor
jmp
mov
push
mov
mov
xor
jmp
shr
jmp
push
jmp
mov
add
pop
xor
push
jmp
pushl
mov
jmp
mov
push
mov
jmp
mov
xor
sub
pop
jmp
shr
cmp
je
sub
jmp
lods
push
mov
mov
jmp
pop
sub
add
add
mov
add
push
jmp
jmp
add
add
pop
push
jmp
sub
pop
jmp
xor
shl
jmp
pop
jmp
inc
jmp
mov
jmp
pushl
pop
push
mov
push
push
popl
addl
pop
jmp
push
mov
mov
mov
sub
mov
jmp
push
pushl
mov
add
popl
jmp
add
add
add
sub
sub
add
pop
pushl
mov
add
add
jmp
add
push
mov
shr
not
and
push
mov
sub
xor
pop
jmp
popl
mov
mov
push
mov
add
pop
mov
add
push
mov
mov
jmp
add
jmp
jmp
sub
xchg
pop
mov
mov
add
jmp
push
jmp
push
mov
shr
not
xor
sub
pop
jmp
pop
jmp
mov
jmp
or
or
add
add
pop
sub
xchg
jmp
sub
pop
pop
jmp
add
xchg
mov
push
jmp
sub
mov
push
pop
jmp
xchg
pop
jmp
addl
add
jmp
add
add
sub
pop
push
mov
sub
mov
jmp
or
jne
push
jmp
mov
mov
sub
push
mov
not
push
mov
xor
add
pop
push
notl
pop
not
and
push
mov
add
pop
jmp
mov
push
push
pop
add
sub
xchg
mov
mov
push
jmp
shr
inc
jmp
mov
add
add
sub
mov
mov
push
jmp
mov
sub
jmp
not
inc
jmp
sub
jmp
pop
jmp
add
pushl
jmp
add
xchg
pop
mov
push
jmp
mov
add
pop
or
shl
push
mov
xor
pop
add
jmp
mov
push
mov
push
pop
add
push
sub
mov
jmp
mov
add
jmp
push
mov
not
not
and
sub
jmp
mov
mov
pop
or
xor
push
jmp
add
sub
push
mov
jmp
ret
jmp
lods
xor
push
mov
mov
add
add
push
push
mov
push
jmp
sub
jmp
inc
jmp
xor
jmp
add
pop
xchg
pop
xor
xor
xor
xor
xor
xor
jmp
shr
xor
add
jmp
push
pop
push
mov
jmp
addl
pushl
mov
jmp
mov
mov
add
sub
xchg
pop
mov
mov
push
mov
sub
mov
push
mov
mov
xor
jmp
xchg
not
jmp
pushl
pop
push
mov
add
push
mov
jmp
mov
push
jmp
push
pushl
pop
popl
jmp
mov
mov
add
pushl
pop
add
shr
xor
push
jmp
subl
subl
addl
jmp
and
sub
sub
mov
jmp
mov
push
jmp
push
mov
mov
pop
pop
jmp
mov
push
pop
add
sub
xchg
jmp
mov
pop
mov
add
jmp
mov
sub
sub
jmp
pop
jmp
add
mov
add
jmp
add
xchg
jmp
push
mov
push
mov
neg
jmp
shl
push
negl
pop
push
mov
xor
xor
mov
add
or
jmp
mov
add
add
push
push
mov
jmp
sub
mov
mov
mov
jmp
mov
jmp
pushl
mov
add
jmp
pushl
pop
push
mov
add
jmp
mov
sub
push
popl
push
mov
add
pop
mov
add
add
push
push
push
pop
push
jmp
mov
add
not
shr
jmp
sub
jmp
sub
mov
push
mov
jmp
pop
jmp
push
mov
mov
jmp
pop
not
shl
dec
xor
sub
pop
xchg
jmp
not
xor
mov
pop
sub
pushl
pop
push
jmp
sub
push
mov
jmp
mov
mov
jmp
add
shr
xor
jmp
mov
mov
add
sub
add
add
mov
add
shl
jmp
dec
push
mov
sub
pop
jmp
mov
jmp
sub
pop
add
add
sub
push
push
mov
mov
xor
pop
add
jmp
incw
pushf
jmp
push
mov
push
jmp
pop
push
push
mov
add
inc
add
mov
pop
push
mov
sub
pop
push
mov
add
sub
sub
jmp
mov
push
mov
add
jmp
add
pop
push
mov
neg
not
shl
sub
add
mov
add
xor
xor
xor
mov
roll
pushf
jmp
add
push
jmp
push
pop
push
push
pop
add
sub
push
mov
push
jmp
push
push
pop
add
sub
xchg
pop
mov
jmp
or
jmp
push
mov
sub
not
add
shl
xor
mov
jmp
mov
add
sub
mov
push
jmp
sub
pop
add
mov
jmp
mov
mov
add
and
pop
jmp
sub
sub
pop
sub
xor
xor
xor
pop
mov
mov
push
jmp
pop
push
mov
add
pop
xchg
pop
mov
push
mov
push
pushl
mov
add
add
push
jmp
pop
xor
xor
xor
jmp
dec
push
mov
sub
mov
add
sub
mov
add
jmp
push
addl
pop
sub
pushl
jmp
or
je
push
push
popl
push
mov
push
jmp
pop
push
negl
pop
push
mov
shr
or
sub
add
pop
xor
mov
add
inc
add
jmp
mov
jmp
push
jmp
add
jmp
sub
add
add
pop
jmp
mov
mov
push
mov
jmp
mov
bt
pushf
jmp
pop
add
add
mov
jmp
mov
mov
pop
dec
jmp
sub
pop
jmp
push
mov
inc
sub
add
add
pop
push
jmp
push
push
pop
shl
jmp
sub
pop
push
jmp
mov
dec
sub
xor
add
jmp
sub
mov
jmp
sub
jmp
add
sub
jmp
push
mov
add
add
sub
sub
push
jmp
add
jmp
push
jmp
pop
push
mov
add
pop
xchg
jmp
pop
add
pop
push
mov
add
push
jmp
shl
jmp
add
pop
sub
and
xor
or
pushl
pushl
pop
add
push
jmp
push
mov
addl
popl
addl
pop
jmp
pop
mov
mov
push
mov
add
add
sub
pop
add
push
push
pop
xor
sub
pop
pushl
pop
push
mov
jmp
mov
pop
add
pop
jmp
pop
sub
add
add
push
mov
add
xor
pop
pop
mov
sub
mov
mov
jmp
sub
pop
push
jmp
push
jmp
sub
add
jmp
add
or
shl
sub
mov
jmp
mov
and
pop
shl
shr
jmp
push
mov
push
jmp
sub
pop
mov
jmp
pop
add
add
jmp
add
pop
add
mov
add
jmp
xor
sub
and
add
sub
pop
jmp
pop
push
jmp
pop
jmp
pop
pop
movzbl
jmp
mov
add
mov
add
sub
add
jmp
xor
xor
xor
push
mov
push
mov
jmp
mov
mov
add
mov
add
xchg
pop
jmp
shl
shr
sub
jmp
or
pop
not
shr
shr
push
mov
jmp
mov
not
or
add
sub
inc
push
mov
neg
add
sub
jmp
mov
mov
xor
shl
jmp
mov
mov
pop
xchg
xchg
not
xchg
xchg
sub
jmp
push
mov
jmp
sub
push
mov
jmp
not
xor
xor
xor
xor
xor
jmp
sub
pop
sub
pop
push
mov
sub
pop
pushl
pop
add
push
mov
push
mov
mov
push
jmp
popl
push
jmp
sub
add
add
pop
pop
jmp
pop
mov
jmp
and
sub
sub
mov
jmp
push
mov
push
jmp
push
pop
push
mov
add
sub
xchg
pop
mov
mov
add
mov
push
mov
mov
push
push
jmp
push
mov
push
mov
xor
pop
neg
shr
not
inc
inc
jmp
push
mov
mov
pop
mov
pop
pop
xchg
inc
jmp
sub
push
mov
shl
shl
sub
jmp
sub
jmp
mov
add
jmp
mov
push
mov
push
jmp
sub
pop
sub
dec
not
inc
add
mov
pop
push
jmp
not
and
add
xor
mov
jmp
add
add
jmp
xchg
jmp
sub
sub
pop
sub
jmp
mov
pushl
pop
jmp
push
mov
push
mov
and
pop
and
sub
add
xor
pop
shl
add
xor
pushl
pushl
pop
jmp
mov
mov
push
jmp
pushl
pop
add
add
add
jmp
sub
sub
push
jmp
add
pop
add
mov
add
xchg
pop
popl
mov
jmp
mov
add
add
xchg
pop
add
xor
xor
xor
pop
and
pushf
jmp
xor
add
pop
sub
mov
push
jmp
add
pushl
pop
push
push
pop
push
jmp
pushl
pop
push
jmp
pop
add
sub
add
add
sub
pop
jmp
pushl
jmp
popl
jmp
pop
jmp
sub
add
add
sub
pop
jmp
push
pop
push
mov
jmp
add
sub
sub
mov
add
add
add
sub
mov
sub
mov
mov
mov
pop
sub
jmp
shl
sub
push
mov
jmp
mov
jmp
mov
jmp
pop
jmp
subl
subl
jmp
pop
jmp
push
jmp
mov
xor
pop
add
pop
jmp
push
jmp
pop
sub
sub
pushl
pop
push
mov
add
add
xchg
pop
add
xchg
pop
or
jmp
mov
add
add
push
mov
jmp
not
add
add
mov
add
jmp
add
jmp
mov
shr
push
mov
xor
pop
jmp
push
mov
add
add
shr
jmp
push
jmp
push
jmp
push
mov
mov
xor
dec
sub
xor
mov
add
add
add
add
sub
sub
pop
jmp
pop
jmp
sub
add
push
mov
jmp
add
neg
push
jmp
xor
jmp
mov
xor
pop
jmp
push
mov
sub
not
jmp
push
push
pop
shl
xor
mov
pop
push
push
mov
pop
jmp
push
mov
jmp
xchg
push
xchg
jmp
mov
push
sub
push
popl
addl
mov
push
mov
jmp
xchg
pop
push
pushl
pop
popl
pop
div
jmp
pop
xor
mov
jmp
sub
add
mov
pop
dec
or
push
mov
jmp
sub
mov
mov
jmp
sub
not
xor
push
jmp
sub
jmp
mov
push
jmp
push
jmp
mov
add
pop
add
pop
push
pushl
pop
jmp
mov
pop
add
jmp
add
jmp
push
mov
mov
add
pop
mov
add
add
add
xor
xor
xor
mov
push
push
mov
dec
sub
mov
pop
sub
jmp
pop
popl
mov
and
jmp
mov
add
jmp
sub
jmp
sub
shl
shr
push
notl
jmp
mov
jmp
sub
pop
pop
add
subl
pop
mov
add
add
add
xor
xor
xor
jmp
add
jmp
popl
jmp
movzbl
jmp
push
pushl
pop
popl
mov
sub
mov
mov
push
mov
dec
push
mov
and
shl
add
jmp
mov
push
push
push
popl
push
jmp
dec
and
add
shr
push
mov
push
mov
jmp
add
add
xchg
pop
push
pushl
pop
jmp
mov
pop
jmp
sub
push
mov
sub
add
add
jmp
pop
xor
jmp
shl
neg
push
push
push
jmp
pop
and
add
push
jmp
mov
sub
add
jmp
add
push
pop
pop
push
mov
push
mov
jmp
mov
xor
mov
add
push
mov
jmp
mov
push
jmp
mov
push
push
jmp
mov
jmp
add
sub
pop
add
xor
xor
xor
pop
cmp
pushf
jmp
push
pop
pushl
pushl
pop
add
add
and
jmp
shl
sub
mov
mov
add
xor
jmp
pop
push
mov
jmp
add
push
mov
jmp
add
jmp
mov
shr
or
jmp
push
pop
jmp
sub
push
jmp
add
xchg
pop
mov
add
xor
mov
add
push
jmp
mov
push
push
pop
add
push
push
mov
mov
pop
xor
add
sub
sub
mov
add
xchg
jmp
mov
jmp
push
mov
add
jmp
mov
sub
jmp
add
sub
sub
jmp
sub
pop
push
mov
mov
addl
sub
jmp
add
shr
jmp
not
push
push
pushl
jmp
push
mov
jmp
pop
sarl
pushf
jmp
mov
mov
pop
pop
add
pushl
mov
jmp
popl
jmp
xor
xor
xor
mov
jmp
mov
add
jmp
mov
add
jmp
sub
jmp
push
mov
add
jmp
pop
push
jmp
inc
add
sub
jmp
pop
xor
jmp
add
xor
xor
mov
push
mov
add
push
jmp
pop
xor
jmp
add
jmp
xor
mov
sub
jmp
mov
add
inc
push
mov
jmp
add
mov
jmp
mov
jmp
xchg
mov
jmp
add
jmp
add
pop
jmp
pop
sub
xor
add
mov
add
push
jmp
and
jmp
sub
shl
jmp
add
add
pop
mov
pop
jmp
shr
jmp
add
jmp
pop
jmp
mov
add
add
xchg
pop
jmp
sub
push
mov
jmp
mov
mov
jmp
mov
add
pushl
pushl
pop
add
push
mov
add
add
jmp
sub
mov
push
jmp
and
push
mov
xor
pop
mov
jmp
pushl
pop
push
jmp
mov
mov
add
shr
xor
add
pop
jmp
push
mov
jmp
mov
xor
pushl
jmp
dec
neg
not
sub
jmp
pop
push
push
mov
shr
xor
jmp
mov
sub
add
add
pushl
jmp
mov
sub
pop
sub
jmp
pushl
pop
add
add
xchg
mov
popw
xor
xor
xor
not
xor
xor
xor
xor
xor
xor
jmp
mov
push
jmp
sub
jmp
add
sub
sub
pop
jmp
mov
add
sub
mov
mov
add
jmp
add
xchg
sub
add
pop
push
pop
mov
jmp
mov
add
pushl
pop
jmp
push
mov
sub
pop
add
add
sub
mov
push
mov
push
addl
jmp
pop
sub
add
pop
push
pushl
pop
popl
pop
sub
pushf
jmp
or
jmp
sub
xor
jmp
mov
add
push
jmp
or
jmp
add
add
sub
mov
jmp
pop
pop
and
shl
push
mov
jmp
pop
xchg
pop
pop
sub
mov
jmp
add
push
mov
add
jmp
pop
jmp
add
add
jmp
mov
jmp
sub
shl
jmp
push
jmp
mov
mov
subl
subl
add
addl
addl
pop
jmp
pop
sub
mov
jmp
sub
jmp
negb
pushf
jmp
pushl
pushl
pop
push
jmp
sub
mov
mov
add
add
xor
xor
xor
mov
pop
push
mov
sub
mov
mov
jmp
push
mov
inc
add
push
mov
add
not
not
sub
shl
push
mov
xor
pop
add
sub
sub
pop
add
add
mov
add
add
sub
pop
xor
jmp
pop
push
mov
jmp
pushl
pop
push
mov
jmp
pop
sub
mov
mov
add
mov
push
mov
jmp
sub
jmp
xor
xor
push
mov
xor
pop
sub
sub
add
mov
add
sub
add
add
add
push
push
mov
jmp
xor
jmp
add
pop
xchg
jmp
mov
mov
push
mov
push
jmp
add
add
xchg
mov
push
mov
jmp
sub
pop
xchg
mov
jmp
add
sub
xor
xor
xor
pop
jmp
xor
jmp
add
push
mov
mov
xor
jmp
add
sub
add
add
sub
mov
add
push
mov
mov
add
sub
sub
pop
xchg
mov
mov
notl
pop
xor
xor
xor
push
mov
push
pushl
pop
add
and
mov
sub
mov
mov
push
mov
mov
jmp
sub
pop
jmp
mov
mov
add
jmp
sub
mov
pop
add
jmp
xor
add
sub
jmp
xor
sub
push
jmp
mov
add
popl
mov
mov
mov
jmp
sub
jmp
sub
push
push
mov
push
jmp
add
sub
pop
xor
xor
xor
mov
jmp
mov
mov
xor
pop
xor
pop
add
pop
pop
add
xor
xor
xor
pop
jmp
sub
jmp
mov
push
pop
mov
sub
jmp
add
add
pop
jmp
add
add
sub
pop
jmp
mov
or
pop
add
or
pop
add
sub
add
jmp
pop
mov
push
pop
jmp
sub
add
mov
jmp
negw
pushf
jmp
add
push
mov
jmp
add
add
pop
add
xchg
jmp
push
mov
xor
pop
jmp
xor
pop
add
sub
inc
push
sub
jmp
mov
add
pop
xchg
pop
push
pushl
mov
jmp
xor
sub
add
jmp
mov
add
jmp
mov
push
push
pushl
jmp
push
mov
add
jmp
mov
add
mov
push
mov
add
add
jmp
push
mov
shr
jmp
mov
jmp
shr
push
mov
and
jmp
add
push
pushl
pop
popl
pop
xor
push
mov
not
shl
not
shr
xor
sub
pop
add
add
pushl
pop
add
pushw
mov
push
mov
sub
shr
and
jmp
shr
jmp
push
mov
jmp
mov
pop
jmp
or
sub
xor
jmp
mov
push
mov
add
jmp
pop
shl
shr
shr
push
push
jmp
add
xchg
pop
mov
pushl
jmp
pop
pushl
pop
add
push
mov
and
and
push
mov
shl
and
add
jmp
mov
push
mov
neg
jmp
push
mov
push
jmp
push
xorl
mov
jmp
add
sub
xchg
mov
mov
jmp
mov
shr
or
sub
sub
push
mov
add
pop
sub
sub
pop
add
add
mov
jmp
push
push
mov
push
sub
jmp
add
push
jmp
mov
jmp
inc
jmp
add
add
xchg
jmp
mov
push
jmp
pushl
pop
jmp
add
jmp
mov
add
add
pop
jmp
xor
pop
jmp
push
mov
add
pop
push
mov
sub
pop
jmp
push
mov
mov
shr
jmp
sub
mov
pop
sub
push
jmp
mov
mov
push
mov
push
mov
add
add
jmp
add
add
add
pop
xchg
pop
bswap
push
jmp
add
sub
jmp
mov
add
pop
xor
shr
push
mov
mov
push
push
jmp
lods
xor
push
push
mov
push
mov
mov
jmp
push
mov
not
shr
jmp
add
jmp
add
shr
or
jmp
pop
jmp
sub
add
add
sub
push
jmp
add
push
jmp
pop
xchg
jmp
mov
not
sub
sub
pop
push
mov
sub
jmp
mov
add
add
shr
push
mov
jmp
add
dec
xor
mov
pop
jmp
mov
jmp
push
mov
sub
add
pop
push
mov
or
jmp
add
push
mov
sub
pop
pushl
pop
add
xor
mov
jmp
pop
mov
jmp
mov
push
jmp
pushl
jmp
add
push
pushl
pop
popl
jmp
add
not
neg
add
jmp
add
pop
jmp
mov
jmp
shl
sub
mov
jmp
push
mov
mov
sub
add
pop
pop
xor
xor
xor
pop
pushl
mov
push
mov
jmp
add
push
jmp
add
jmp
mov
shr
push
decl
pop
push
push
jmp
add
and
jmp
push
mov
mov
shr
and
add
jmp
pop
mov
mov
push
mov
mov
mov
add
pushl
pop
add
sub
jmp
push
mov
push
pop
jmp
pop
jmp
mov
add
jmp
xor
pop
bt
pushf
jmp
xor
jmp
xor
pop
jmp
push
mov
add
add
xchg
pop
xor
xor
jmp
pop
add
jmp
push
mov
sub
mov
mov
add
and
inc
push
mov
not
jmp
add
push
mov
add
add
jmp
addl
add
jmp
add
mov
pop
mov
add
mov
jmp
pop
jmp
mov
add
push
mov
jmp
pop
jmp
xchg
pop
jmp
pop
sub
add
add
jmp
mov
jmp
add
mov
add
sub
jmp
pop
push
mov
jmp
pop
push
mov
add
mov
add
add
jmp
sub
mov
addl
mov
add
push
jmp
pop
add
mov
pop
push
mov
sub
pop
jmp
add
sub
jmp
xchg
push
mov
sub
xor
pop
and
pushl
pop
add
or
je
sub
mov
push
mov
jmp
sub
xor
xor
xor
mov
mov
pushl
pop
popl
jmp
mov
jmp
pushl
pop
push
mov
jmp
mov
add
jmp
sub
add
and
mov
add
push
mov
sub
pop
jmp
xchg
jmp
sub
add
add
jmp
shr
shr
jmp
add
pushl
pop
jmp
xor
add
pop
xchg
pop
jmp
sub
mov
push
pop
jmp
and
sub
jmp
push
mov
jmp
add
sub
pop
shr
jmp
push
mov
add
add
xchg
pop
add
push
mov
mov
add
jmp
add
xor
xor
xor
jmp
or
jmp
add
jmp
xchg
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
push
jmp
neg
not
xor
sub
pop
add
add
pushl
pushl
mov
add
sub
mov
push
pop
add
push
jmp
add
xchg
pop
jmp
push
pop
add
jmp
or
pop
shl
push
mov
dec
sub
xor
pop
push
mov
and
xchg
inc
jmp
mov
add
jmp
sub
xchg
pop
mov
jmp
and
pop
jmp
sub
jmp
mov
jmp
pop
shr
xor
sub
mov
pop
jmp
mov
mov
sub
pop
pop
add
sub
sub
sub
pop
sub
mov
mov
sub
jmp
push
mov
jmp
shlw
pushf
jmp
pop
shr
xor
add
mov
add
sub
push
push
mov
jmp
pop
not
add
and
shl
xor
jmp
push
push
push
pop
or
xor
jmp
mov
push
mov
add
jmp
push
mov
add
push
mov
jmp
jmp
xor
not
xor
sub
add
jmp
sub
add
jmp
push
mov
mov
add
jmp
push
pushl
pop
popl
pop
jmp
mov
push
push
mov
mov
mov
jmp
mov
shr
inc
sub
add
pop
pushl
pop
push
mov
add
add
jmp
jmp
sub
add
sub
mov
mov
add
pop
jmp
sub
sub
pushl
pop
add
sub
mov
pushl
pop
popl
mov
shll
pushf
jmp
pop
neg
push
mov
sub
jmp
push
push
mov
push
mov
sub
shl
jmp
pop
add
xor
shl
shr
add
sub
pop
jmp
xor
add
pop
pop
sub
jmp
mov
pushl
jmp
add
push
mov
add
jmp
pop
push
mov
add
add
xchg
pop
shl
jmp
add
mov
jmp
mov
jmp
not
sub
mov
push
jmp
pop
jmp
sub
jmp
xor
add
pop
jmp
mov
pop
xor
shr
shr
neg
not
inc
jmp
push
push
push
mov
xor
add
sub
mov
pop
mov
add
add
sub
pop
mov
sub
add
add
pushl
jmp
pop
jmp
sub
add
pop
jmp
sub
pop
add
pop
add
jmp
sub
sub
jmp
sub
mov
mov
xor
mov
jmp
push
push
push
pop
push
mov
xchg
not
xchg
sub
or
sub
mov
pop
xor
pop
xor
neg
xor
jmp
add
popl
pop
push
mov
inc
sub
xor
add
pop
xchg
mov
jmp
mov
sub
add
push
jmp
add
push
mov
push
jmp
pop
sub
jmp
pop
jmp
pop
jmp
shr
jmp
mov
pop
push
mov
mov
jmp
and
not
xor
sub
pop
push
pushl
pop
popl
jmp
or
pop
jmp
sub
xchg
pop
mov
mov
push
push
mov
mov
pop
jmp
push
mov
jmp
push
mov
neg
jmp
pop
add
shr
xor
push
push
jmp
pop
add
add
push
pushl
pop
jmp
mov
jmp
mov
add
jmp
mov
add
pop
jmp
add
jmp
add
add
xchg
mov
add
sub
mov
mov
jmp
push
jmp
add
push
jmp
mov
jmp
push
mov
xor
pop
jmp
pop
push
pushl
mov
add
popl
mov
btc
pushf
jmp
mov
jmp
pushl
pop
push
jmp
mov
add
or
pop
jmp
push
mov
sub
mov
pop
sub
sub
add
jmp
shl
add
jmp
pop
jmp
add
pop
add
jmp
push
pop
jmp
mov
add
add
pop
add
xchg
pop
sub
jmp
mov
push
mov
push
pop
add
sub
mov
sub
mov
jmp
add
add
add
push
mov
mov
sub
jmp
popl
pop
jmp
sub
pop
jmp
add
jmp
mov
add
push
mov
mov
add
mov
add
jmp
mov
jmp
mov
push
jmp
sub
jmp
mov
jmp
and
pop
push
mov
mov
sub
sub
pop
add
sub
pop
jmp
xor
xor
xor
jmp
jmp
lods
push
mov
push
mov
sub
jmp
mov
add
push
pushl
pop
popl
jmp
negl
pop
push
incl
pop
sub
mov
mov
sub
jmp
mov
add
push
mov
dec
shr
dec
add
add
add
sub
jmp
pop
add
add
jmp
shl
shl
inc
xor
jmp
add
push
mov
not
dec
push
jmp
mov
push
jmp
push
mov
jmp
pop
mov
push
mov
add
add
jmp
push
mov
jmp
pop
jmp
sub
jmp
pop
shr
xor
mov
pop
jmp
mov
add
pop
push
sub
mov
jmp
xor
xor
pop
jmp
add
add
xor
xor
jmp
xor
pop
add
add
jmp
mov
mov
add
pop
jmp
add
pushl
pop
push
mov
jmp
sub
xor
xor
xor
mov
jmp
push
mov
push
jmp
push
jmp
pop
push
mov
jmp
mov
add
add
xchg
jmp
push
push
popl
push
mov
addl
jmp
shr
push
push
mov
inc
inc
and
or
neg
add
push
mov
mov
jmp
mov
shl
inc
not
sub
jmp
sub
add
pop
not
xor
mov
jmp
subl
pushl
jmp
pop
pop
push
jmp
add
or
inc
jmp
neg
not
xor
xor
pop
not
jmp
pop
push
push
pop
push
mov
mov
jmp
mov
or
mov
add
push
push
mov
mov
sub
pop
shl
shr
jmp
push
pop
push
push
push
mov
add
jmp
not
shl
dec
jmp
add
sub
xor
xor
xor
jmp
pop
pushl
pop
add
sub
mov
push
pushl
pop
push
mov
mov
add
push
mov
shr
and
add
shr
not
add
jmp
push
mov
sub
jmp
pop
jmp
pop
jmp
lods
jmp
push
push
mov
xor
shl
or
and
add
mov
pop
not
shl
jmp
pop
add
add
sub
sub
add
push
mov
add
jmp
add
push
jmp
dec
push
mov
shl
xor
push
mov
mov
jmp
xchg
pop
jmp
push
mov
xor
pop
add
jmp
and
add
mov
pop
and
mov
push
jmp
xor
xor
pop
test
pushf
jmp
push
mov
push
notl
jmp
sub
push
pushl
pushl
jmp
jmp
sub
mov
add
jmp
add
add
mov
add
jmp
add
sub
sub
pushl
pop
add
push
mov
sub
pop
push
jmp
mov
sub
push
mov
mov
or
pushl
jmp
not
inc
push
mov
not
and
xor
xor
pop
add
pop
jmp
pop
mov
jmp
and
shl
shl
add
sub
add
jmp
add
shr
jmp
add
sub
pop
mov
pop
sub
pop
jmp
xor
mov
jmp
pop
push
mov
xor
xor
jmp
mov
sub
jmp
sub
add
push
mov
jmp
mov
mov
push
mov
push
mov
mov
add
mov
jmp
and
pop
jmp
mov
push
mov
sub
add
pop
push
jmp
push
decl
notl
pushl
jmp
mov
sub
mov
push
pop
push
push
push
push
pop
jmp
popl
mov
mul
sub
mov
sub
mov
addl
jmp
add
pop
jmp
pop
sub
mov
mov
jmp
pop
add
add
jmp
mov
push
pop
add
jmp
add
add
sub
add
add
jmp
add
add
sub
mov
sub
mov
mov
push
jmp
push
pop
add
add
xchg
pop
mov
pushl
pushl
pop
add
jmp
push
sub
mov
jmp
push
jmp
mov
jmp
shr
jmp
pop
xor
sub
sub
jmp
mov
jmp
add
pop
jmp
add
add
pop
mov
jmp
shr
not
inc
jmp
add
push
mov
add
xor
pop
pop
push
pushl
mov
add
push
mov
add
push
mov
push
push
jmp
sub
xchg
pop
jmp
addl
add
subl
addl
jmp
pop
pop
push
mov
jmp
add
jmp
mov
pop
mov
add
pop
xor
xor
xor
jmp
add
push
mov
sub
pop
xchg
mov
mov
pushl
pop
popl
pop
div
jmp
pop
incb
pushf
jmp
add
add
sub
sub
push
jmp
pop
sub
jmp
push
mov
add
not
inc
sub
jmp
xor
pop
dec
xor
jmp
or
sub
not
xor
xor
jmp
add
mov
push
mov
jmp
mov
jmp
push
mov
sub
sub
sub
pop
mov
jmp
xchg
jmp
or
push
mov
neg
mov
pop
inc
add
add
pop
and
pop
sub
sub
jmp
add
xchg
jmp
add
push
mov
sub
mov
jmp
push
mov
add
add
xchg
pop
add
shr
add
and
pop
sub
jmp
mov
push
mov
push
mov
add
sub
xchg
pop
mov
jmp
sub
mov
add
and
pushl
mov
push
mov
add
add
xchg
pop
add
shr
xor
jmp
mov
inc
add
xor
pop
xor
mov
add
add
add
jmp
shr
shr
xor
jmp
add
push
pushl
jmp
sub
add
add
jmp
mov
push
pushl
pop
push
jmp
sub
jmp
xchg
pop
jmp
pop
jmp
push
jmp
add
jmp
dec
and
jmp
xor
sub
jmp
xchg
pop
jmp
mov
push
push
push
mov
jmp
add
xchg
pop
add
subl
jmp
pushl
pushl
mov
add
push
mov
add
add
xchg
pop
popl
pop
jmp
shl
dec
push
mov
add
jmp
add
push
mov
mov
pop
pushl
pop
add
xor
push
push
mov
add
pop
pop
jmp
push
mov
sub
sub
add
pop
xor
xor
xor
pop
mov
jmp
push
mov
push
pop
shr
not
add
sub
and
jmp
xor
pop
neg
or
push
mov
jmp
pushl
jmp
xorl
pop
jmp
push
mov
add
sub
xchg
pop
mov
push
pop
push
mov
add
push
mov
jmp
pop
xor
or
jmp
push
mov
sub
pop
sub
sub
sub
add
add
add
jmp
mov
and
sub
xor
jmp
mov
add
jmp
mov
jmp
mov
jmp
pop
pop
xor
xor
xor
push
push
pop
jmp
mov
push
mov
xor
add
and
and
not
jmp
mov
or
pop
push
mov
add
jmp
push
pop
push
mov
mov
add
push
jmp
sub
add
mov
jmp
mov
add
push
mov
sub
pop
jmp
push
push
jmp
push
mov
jmp
pop
not
jmp
push
jmp
mov
mov
pop
mov
add
push
mov
not
jmp
shr
xor
mov
pop
addl
jmp
sub
inc
xor
or
mov
add
neg
push
mov
push
mov
push
mov
xor
pop
add
pop
add
mov
add
xor
pop
add
add
sub
pop
jmp
mov
add
mov
push
jmp
sub
pop
push
mov
mov
neg
pushw
jmp
xor
shr
dec
sub
jmp
pushl
jmp
mov
jmp
sub
mov
mov
add
add
sub
jmp
shl
push
mov
add
jmp
push
jmp
mov
add
add
xchg
mov
push
jmp
add
xchg
pop
xchg
mov
mov
popl
jmp
mov
add
jmp
lods
push
mov
xor
add
pop
sub
push
push
jmp
xor
pushl
pop
add
pushl
pop
add
push
push
mov
inc
jmp
pop
sub
jmp
mov
addl
subl
jmp
xor
jmp
mov
add
xchg
mov
shlb
pushf
jmp
push
jmp
push
mov
xor
inc
and
and
jmp
pop
xor
neg
jmp
mov
mov
sub
pop
jmp
push
negl
mov
add
jmp
sub
mov
sub
mov
mov
mov
jmp
mov
push
jmp
pop
push
mov
add
sub
xchg
pop
jmp
xor
jmp
mov
add
mov
jmp
xor
movzbl
jmp
mov
sub
inc
add
add
pop
shr
xor
add
pop
jmp
push
jmp
push
mov
xor
pop
dec
shr
xor
push
mov
mov
pop
pop
xor
jmp
push
mov
add
add
jmp
pop
jmp
pop
jmp
push
push
mov
jmp
mov
add
sub
add
jmp
xchg
pop
mov
mov
jmp
shr
jmp
sub
push
mov
pushl
mov
add
jmp
add
add
pop
add
jmp
addl
mov
add
sub
mov
add
sub
add
add
pop
push
jmp
xor
jmp
push
mov
add
add
xor
jmp
add
jmp
pop
push
incl
pop
shl
add
mov
pop
addl
add
subl
mov
add
pop
add
push
mov
push
mov
sub
shl
jmp
movzbw
sub
mov
mov
push
mov
push
jmp
xchg
pop
xor
and
mov
push
mov
jmp
mov
mov
add
add
xchg
pop
jmp
add
jmp
dec
jmp
addl
pop
add
add
xor
jmp
sub
sub
add
pop
push
jmp
pop
push
mov
push
mov
mov
mov
add
jmp
push
push
mov
addl
pushl
mov
jmp
xor
jmp
pop
sub
add
sub
sub
jmp
push
push
pop
shr
jmp
shr
add
jmp
pop
neg
xor
xor
jmp
add
add
jmp
mov
push
mov
mov
pop
jmp
add
add
add
add
push
push
pop
push
jmp
mov
mov
mov
pushl
pop
push
push
pop
add
add
xor
xor
xor
pop
sub
mov
push
pop
mov
mov
add
pop
add
pushl
pop
add
mov
add
sub
mov
jmp
mov
jmp
pop
shr
push
push
jmp
xchg
not
xchg
pop
and
sub
jmp
add
sub
pushl
jmp
push
mov
mov
add
mov
add
xor
jmp
add
jmp
mov
push
pop
push
mov
inc
jmp
mov
pop
sub
pop
pop
sub
mov
push
mov
xor
jmp
pop
mov
jmp
mov
pop
shr
inc
add
sub
pop
mov
push
mov
add
add
xchg
pop
shr
jmp
add
xchg
pop
mov
add
xor
add
jmp
mov
mov
push
notl
mov
add
shr
jmp
mov
push
push
pop
add
push
mov
jmp
movzbw
sub
jmp
add
not
and
add
mov
pop
add
add
sub
jmp
mov
sub
mov
jmp
xor
pop
jmp
pop
sub
jmp
xorl
pop
push
mov
and
shr
xor
sub
jmp
inc
sub
jmp
push
mov
add
sub
sub
pop
xor
jmp
add
neg
jmp
sub
pop
xor
xor
xor
pop
jmp
mov
jmp
add
add
xchg
pop
mov
push
mov
add
push
jmp
mov
add
dec
xchg
not
xor
xor
xor
jmp
mov
push
mov
push
mov
add
pop
mov
push
jmp
mov
jmp
shr
jmp
mov
push
mov
mov
mov
pop
push
mov
add
pushl
mov
jmp
add
sub
sub
add
sub
jmp
mov
subl
subl
add
addl
sub
mov
jmp
mov
jmp
push
mov
push
mov
push
mov
jmp
mov
push
pop
jmp
sub
mov
push
push
mov
inc
add
jmp
pop
push
mov
push
pop
jmp
mov
dec
not
push
mov
shl
xor
sub
pop
jmp
push
jmp
shr
jmp
shr
jmp
sub
jmp
sub
mov
jmp
sub
mov
push
mov
add
sub
xchg
pop
mov
mov
add
pop
dec
xchg
push
mov
add
sub
sub
mov
push
mov
add
add
xchg
pop
mov
pushl
pop
add
jmp
mov
jmp
pop
xchg
jmp
add
or
je
pushl
pushl
mov
push
jmp
push
mov
jmp
sub
sub
jmp
add
sub
xchg
jmp
pop
push
mov
add
jmp
mov
jmp
add
add
mov
push
mov
add
push
mov
add
pop
xchg
mov
xor
xor
xor
mov
decw
pushf
jmp
xchg
jmp
pushl
mov
jmp
pushl
popf
pop
adc
pushf
jmp
xor
pop
mov
add
inc
pushl
push
popl
pop
jmp
push
mov
sub
add
pop
shl
xor
xor
xor
not
xor
xor
xor
push
mov
jmp
add
mov
jmp
mov
shl
jmp
inc
jmp
sub
mov
push
mov
add
sub
jmp
add
mov
mov
add
pop
pop
pushl
mov
push
jmp
sub
mov
mov
jmp
mov
push
mov
mov
jmp
push
mov
sub
jmp
add
sub
mov
mov
add
push
mov
jmp
mov
mov
add
add
xchg
pop
jmp
add
jmp
mov
jmp
push
push
push
mov
mov
pop
dec
push
push
mov
not
inc
dec
neg
sub
jmp
mov
shr
jmp
add
pop
add
push
mov
jmp
mov
dec
jmp
xchg
pop
jmp
add
mov
push
push
mov
add
add
add
xchg
pop
push
push
mov
add
add
jmp
pop
push
mov
add
add
xchg
jmp
neg
sub
xor
pop
jmp
dec
jmp
inc
push
notl
pop
shl
add
jmp
mov
mov
push
pushf
jmp
mov
mov
push
push
jmp
pop
add
add
add
jmp
pop
jmp
jmp
mov
mov
sub
add
add
jmp
mov
add
pop
push
mov
jmp
xor
xor
jmp
sub
mov
push
push
jmp
push
push
mov
add
sub
xchg
pop
push
jmp
decl
jmp
mov
push
mov
jmp
push
mov
add
jmp
pushl
pop
add
xchg
push
jmp
shr
and
jmp
pop
pop
jmp
mov
sub
mov
push
jmp
pushl
pop
add
add
xchg
jmp
mov
add
push
jmp
mov
jmp
push
mov
dec
inc
sub
or
xor
sub
mov
pop
mov
xor
pop
sub
push
push
mov
mov
pop
not
sub
push
mov
mov
or
pop
neg
push
push
mov
push
mov
mov
pop
pop
xor
jmp
mov
push
mov
add
add
add
xchg
mov
shr
push
mov
push
mov
add
sub
xchg
pop
jmp
pop
pop
sub
mov
mov
add
pop
push
push
mov
mov
shr
add
shr
xor
push
mov
push
mov
add
add
xchg
pop
mov
add
push
sub
pop
sub
jmp
pop
mov
pop
jmp
add
jmp
pop
mov
add
push
mov
mov
dec
sub
or
jmp
mov
add
push
mov
push
mov
add
jmp
xchg
pop
mov
add
jmp
push
mov
mov
neg
jmp
add
push
mov
push
mov
push
mov
add
jmp
pop
sub
jmp
xchg
jmp
pop
jmp
push
jmp
mov
pop
pop
jmp
xor
or
pop
push
xchg
push
notl
pop
xor
xor
jmp
xchg
dec
push
jmp
and
not
add
add
pop
movzbl
pushl
jmp
inc
jmp
mov
add
jmp
mov
push
pop
add
pop
jmp
mov
dec
xor
not
neg
add
xor
add
jmp
push
mov
add
add
mov
jmp
mov
push
jmp
mov
mov
and
jmp
shl
neg
sub
xor
jmp
add
add
pushl
pop
add
add
xor
xor
xor
mov
jmp
sub
mov
jmp
pushl
pop
jmp
pop
and
or
shr
dec
jmp
xor
jmp
mov
push
jmp
add
mov
add
jmp
pop
add
inc
add
mov
pop
jmp
mov
jmp
add
jmp
dec
shl
shr
shl
add
sub
pop
add
push
mov
add
pop
add
pop
sub
mov
jmp
xchg
jmp
sub
add
sub
jmp
mov
shr
shl
push
mov
sub
jmp
push
mov
mov
add
jmp
pushl
pop
push
mov
add
add
jmp
sub
add
add
jmp
push
sub
mov
mov
dec
and
jmp
popl
pop
mov
push
pushf
jmp
mov
add
pop
pop
sub
sub
add
push
mov
shr
or
dec
push
push
mov
mov
pop
add
jmp
pop
jmp
pushl
popf
pop
sbb
pushf
jmp
lods
push
jmp
pop
sub
mov
jmp
push
mov
jmp
mov
inc
neg
inc
xor
or
jmp
pop
shr
xor
push
addl
mov
add
jmp
push
mov
sub
sub
inc
jmp
mov
shr
add
xor
subl
sub
jmp
neg
push
mov
not
sub
or
mov
jmp
push
mov
push
mov
add
pop
or
pop
push
jmp
pop
jmp
not
jmp
push
mov
add
jmp
pop
xor
xor
xor
jmp
sub
push
mov
jmp
not
xor
jmp
xor
xor
jmp
mov
push
mov
add
jmp
xor
mov
pop
neg
jmp
sub
push
mov
sub
pop
pop
add
sub
sub
mov
push
jmp
mov
sub
mov
mov
jmp
sub
jmp
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
add
xor
pop
jmp
mov
add
shl
push
mov
not
mov
jmp
mov
add
mov
pop
jmp
mov
jmp
sub
sub
sub
mov
push
mov
mov
push
mov
jmp
mov
jmp
movzwl
push
mov
push
pop
add
sub
mov
push
jmp
xor
sub
xor
pushl
pop
add
push
jmp
mov
pop
pushl
pushl
jmp
push
push
push
mov
add
jmp
push
mov
xor
pop
not
sub
sub
jmp
pop
jmp
pushl
pop
add
or
je
pushl
mov
jmp
and
pop
push
mov
and
pop
shl
push
jmp
pop
sub
push
jmp
xor
dec
push
mov
sub
jmp
add
pop
xchg
jmp
mov
sub
pop
dec
jmp
pop
addl
add
subl
pop
jmp
mov
push
mov
push
mov
push
push
mov
mov
pushl
pop
add
shl
sub
jmp
push
mov
push
mov
sub
mov
jmp
jmp
and
push
mov
xor
jmp
push
sub
mov
addl
jmp
xor
sub
add
add
pop
sub
jmp
mov
sub
pop
add
add
sub
push
mov
mov
push
mov
shl
add
sub
add
jmp
mov
push
mov
add
sub
jmp
push
mov
mov
jmp
add
sub
xchg
pop
mov
push
mov
or
not
jmp
pushl
jmp
add
push
push
jmp
sub
jmp
sub
push
mov
add
dec
and
xor
sub
sub
pop
jmp
mov
jmp
pop
xor
jmp
xor
jmp
sub
or
pop
shr
jmp
pop
add
push
mov
jmp
push
jmp
xor
xor
pop
sub
add
add
jmp
add
pop
add
jmp
sub
dec
shl
sub
inc
xor
add
jmp
push
push
popl
addl
pushl
pushl
pop
push
mov
add
add
xchg
pop
push
mov
add
sub
push
pushl
pop
popl
mov
jmp
shl
push
push
mov
add
shr
jmp
add
push
mov
xor
pop
add
xor
jmp
xor
xor
mov
pushl
pushl
pop
add
push
mov
mov
push
mov
mov
jmp
pop
sub
pop
add
push
mov
shr
shl
xor
jmp
pop
push
push
mov
mov
pop
sub
mov
add
push
notl
pop
push
push
mov
jmp
add
jmp
push
mov
add
pop
add
mov
add
push
pushl
jmp
mov
push
jmp
push
mov
sub
jmp
shl
or
shl
jmp
add
jmp
pop
sub
mov
push
jmp
sub
mov
pop
jmp
sub
sub
pop
jmp
pop
mov
jmp
sub
jmp
add
add
sub
pop
jmp
shr
sub
mov
mov
jmp
pop
jmp
mov
mov
sub
mov
mov
push
mov
sub
mov
sub
mov
push
push
pop
xor
add
add
mov
pop
mov
sub
add
add
jmp
push
mov
pushl
mov
push
push
pop
push
jmp
xchg
pop
push
push
mov
mov
pop
add
sub
sub
add
sub
mov
add
jmp
mov
jmp
popl
jmp
mov
mov
add
sub
jmp
push
mov
jmp
mov
jmp
xchg
pop
push
mov
mov
add
pop
jmp
xchg
pop
xor
jmp
push
push
mov
addl
pop
jmp
add
pop
push
mov
mov
add
jmp
push
push
mov
jmp
add
not
sub
jmp
xor
xor
pop
sub
sub
mov
mov
push
mov
sub
pop
add
add
jmp
pop
neg
sub
mov
mov
jmp
mov
mov
xor
jmp
pop
jmp
or
jmp
neg
jmp
add
subl
pop
popl
push
mov
add
pop
popl
push
mov
push
mov
sub
shl
jmp
push
mov
xor
jmp
dec
not
jmp
xchg
pop
mov
mov
push
mov
add
sub
add
add
push
mov
sub
mov
add
pushl
mov
add
add
jmp
sub
mov
mov
add
sub
xchg
pop
mov
push
push
pop
addl
jmp
xor
xor
jmp
mov
jmp
add
pop
push
mov
jmp
add
xchg
pop
jmp
pop
push
mov
shl
shl
add
or
pop
or
xor
sub
mov
pop
sub
jmp
mov
push
mov
jmp
xchg
jmp
push
jmp
pop
pop
or
add
jmp
pop
jmp
add
mov
add
jmp
push
mov
add
jmp
decl
pushf
jmp
xor
pop
shl
jmp
push
sub
mov
mov
sub
push
jmp
sub
mov
jmp
add
sub
mov
jmp
mov
push
mov
push
pop
sub
mov
sub
mov
jmp
mov
add
pop
jmp
pop
add
add
sub
mov
sub
mov
jmp
push
mov
not
xor
push
mov
push
mov
add
add
xchg
pop
pop
add
jmp
pop
popl
jmp
mov
push
mov
push
mov
add
jmp
inc
xor
add
pop
mov
mov
push
mov
add
add
xchg
pop
mov
pop
push
mov
sub
jmp
add
mov
add
sub
pop
movzbl
lea
push
mov
sub
push
popl
push
jmp
push
mov
jmp
push
mov
add
add
xchg
pop
push
mov
pushl
mov
push
mov
add
add
xchg
jmp
xor
mov
push
mov
jmp
shl
jmp
add
sub
jmp
add
sub
jmp
pop
jmp
mov
push
mov
mov
mov
jmp
push
mov
add
or
not
push
jmp
push
push
mov
jmp
mov
push
mov
sub
mov
jmp
mov
push
mov
jmp
pop
jmp
mov
mov
not
shr
or
not
sub
xor
pop
mov
mov
add
jmp
not
jmp
pushl
jmp
add
jmp
push
mov
add
add
xchg
pop
jmp
add
xchg
neg
xchg
push
push
pop
pop
shr
add
and
mov
push
push
pop
add
add
xchg
pop
or
shl
jmp
mov
add
push
mov
add
add
xchg
jmp
sub
jmp
shr
xor
sub
jmp
sub
push
jmp
neg
not
sub
add
pop
mov
add
push
mov
add
pop
push
jmp
or
jmp
add
jmp
mov
jmp
mov
push
pop
mov
jmp
mov
add
jmp
sub
add
jmp
push
jmp
not
sub
mov
pop
not
jmp
pop
jmp
add
addl
push
jmp
add
and
or
or
neg
push
mov
jmp
pop
push
push
jmp
pushl
mov
push
mov
push
mov
add
pop
add
xchg
pop
push
mov
add
push
jmp
mov
jmp
mov
jmp
sub
mov
jmp
mov
xor
sub
jmp
cmp
pushf
jmp
not
push
mov
shr
jmp
shl
jmp
add
pop
mov
add
mov
pushl
pop
jmp
add
popl
pop
shll
jmp
pop
jmp
pop
push
mov
add
sub
push
mov
sub
jmp
sub
mov
mov
push
mov
neg
add
and
sub
add
sub
pop
jmp
sub
jmp
pop
jmp
push
jmp
push
subl
pop
push
mov
add
pop
jmp
pop
add
jmp
sub
mov
push
push
mov
xor
add
jmp
mov
push
jmp
push
mov
add
jmp
add
add
jmp
mov
pop
push
mov
mov
pop
pop
jmp
add
add
jmp
not
xchg
push
mov
jmp
mov
sub
sub
add
add
sub
add
mov
add
sub
mov
mov
neg
neg
xor
sub
pop
sub
add
add
jmp
pop
xor
jmp
add
sub
jmp
pop
popl
jmp
push
jmp
add
xchg
jmp
xor
pop
inc
jmp
mov
dec
and
jmp
mov
add
jmp
mov
jmp
add
add
jmp
add
sub
mov
mov
jmp
push
mov
jmp
mov
mov
pushl
pop
add
pop
push
mov
mov
and
pushl
pop
push
push
mov
addl
mov
push
push
pop
add
add
jmp
mov
jmp
pop
shr
not
sub
mov
mov
shr
jmp
xor
mov
pop
add
jmp
add
add
xchg
pop
push
mov
jmp
mov
not
add
not
neg
xor
jmp
push
xorl
pop
xor
pop
sub
mov
pop
xor
mov
jmp
push
mov
sub
mov
jmp
pushl
pushl
pop
push
mov
push
push
jmp
push
mov
mov
pop
dec
shl
inc
add
mov
pop
jmp
push
mov
add
pop
jmp
add
popl
mov
mov
push
mov
jmp
add
xchg
jmp
mov
addl
pop
add
push
jmp
pop
add
jmp
shl
add
add
jmp
shl
neg
xchg
inc
xchg
xor
add
jmp
pop
jmp
push
mov
push
jmp
push
mov
add
add
xchg
pop
push
pushl
mov
add
jmp
mov
jmp
mov
jmp
pop
sub
mov
jmp
pop
pop
sub
mov
add
sub
jmp
push
mov
add
sub
jmp
pop
xor
add
sub
mov
push
jmp
shl
push
jmp
mov
jmp
pop
popl
mov
mov
push
pop
jmp
shr
push
mov
push
push
jmp
sub
jmp
push
jmp
pop
jmp
sub
mov
mov
push
mov
push
mov
xor
or
pop
dec
xor
add
pop
add
xchg
mov
mov
sub
sub
add
pushl
jmp
pop
jmp
add
xor
push
push
jmp
pushl
jmp
pop
pushl
pop
push
mov
add
add
jmp
pushl
pop
add
xor
jmp
sub
push
jmp
push
mov
xor
xor
push
mov
shr
push
jmp
sub
jmp
pop
push
mov
add
add
jmp
mov
add
pop
shr
push
mov
add
mov
add
mov
pushl
jmp
sub
mov
mov
shl
jmp
pop
add
sub
sub
add
pop
jmp
pop
push
pop
pop
xor
pop
sub
add
add
jmp
push
push
jmp
xor
sub
jmp
add
push
jmp
mov
add
pop
push
pushl
pop
popl
pop
and
dec
push
jmp
pushl
pop
jmp
push
mov
sub
push
jmp
push
mov
dec
xor
push
mov
add
pop
add
push
mov
push
mov
xor
or
pop
push
mov
shl
add
xor
sub
jmp
add
jmp
xor
or
jmp
pop
pushl
jmp
pop
add
mov
push
mov
push
mov
add
pop
push
mov
add
add
sub
pop
xchg
jmp
push
mov
add
sub
xchg
mov
mov
mov
shr
push
jmp
jmp
pop
sub
add
pushl
jmp
pop
jmp
sub
jmp
xor
xor
mov
imul
movzbw
sub
mov
sub
jmp
add
jmp
pushl
pop
popl
jmp
pop
mov
push
mov
jmp
xor
jmp
pop
sub
add
add
jmp
push
mov
neg
push
mov
jmp
mov
push
mov
push
mov
add
jmp
sub
add
pop
shl
jmp
xor
pop
add
pop
sub
sub
push
mov
jmp
pop
sub
xchg
pop
jmp
mov
mov
xor
pushl
pop
jmp
mov
jmp
push
mov
add
jmp
push
mov
sub
pop
sub
pop
push
mov
add
pop
jmp
push
push
mov
mov
jmp
neg
add
add
pop
add
xchg
mov
and
push
mov
xor
pushl
pop
jmp
not
xchg
push
push
mov
jmp
add
jmp
mov
push
mov
mov
pop
jmp
add
popl
mov
pushl
jmp
add
inc
shr
jmp
push
sub
mov
jmp
dec
or
add
sub
pop
jmp
push
mov
mov
push
mov
sub
pop
jmp
mov
pop
mov
pop
mov
jmp
pop
pushl
pushl
pop
add
add
jmp
push
pushl
mov
add
popl
pop
sub
mov
sub
sub
push
popl
jmp
add
add
jmp
add
pop
jmp
add
jmp
pop
sub
mov
push
push
mov
add
push
mov
add
pop
mov
jmp
pop
push
push
mov
neg
add
shr
inc
add
mov
jmp
pop
mov
push
pushl
mov
add
push
jmp
mov
add
add
jmp
pop
jmp
push
push
mov
shr
add
jmp
pop
xor
mov
pop
jmp
shr
jmp
xor
mov
add
xor
pop
jmp
xchg
pop
add
push
mov
mov
sub
jmp
pop
push
mov
add
add
xchg
pop
jmp
push
mov
add
add
jmp
pushl
pop
jmp
pop
dec
add
sub
mov
mov
push
jmp
mov
push
jmp
sub
mov
pushl
pushl
pop
add
popl
mov
mov
push
mov
push
pushl
pop
add
push
jmp
jmp
push
jmp
mov
push
push
mov
addl
pop
jmp
mov
pushl
pop
popl
pop
imul
push
mov
push
pushf
jmp
push
pop
add
add
push
mov
sub
jmp
not
sub
jmp
mov
sub
mov
mov
add
push
mov
push
jmp
sub
jmp
xor
xor
xor
mov
jmp
xchg
mov
jmp
addl
add
subl
push
jmp
sub
mov
mov
mov
mov
add
dec
jmp
xchg
jmp
cmp
je
pushl
pushl
jmp
push
pop
push
mov
push
mov
shr
inc
sub
or
pop
xor
add
pop
jmp
mov
add
pop
jmp
push
push
push
pop
jmp
xchg
pop
push
pushl
jmp
push
push
pop
or
jmp
pop
xor
xor
pop
push
mov
mov
push
subl
pop
jmp
mov
jmp
xchg
neg
jmp
mov
jmp
sub
mov
push
push
pop
add
add
xchg
jmp
push
mov
mov
push
mov
jmp
sub
sub
push
mov
mov
push
mov
jmp
pop
xor
jmp
mov
mov
add
mov
mov
add
pushl
pop
push
mov
jmp
mov
xor
dec
xor
jmp
shl
push
mov
neg
or
jmp
push
sub
mov
push
jmp
sub
pop
push
mov
neg
shl
add
or
pop
add
sub
not
add
or
push
mov
sub
jmp
and
or
add
jmp
push
pop
push
mov
xor
jmp
shl
xor
add
sub
add
jmp
push
jmp
pushl
jmp
push
mov
sub
xor
jmp
add
pop
jmp
mov
push
push
mov
mov
pop
push
jmp
sub
sub
mov
push
mov
add
add
jmp
jmp
pushl
popf
pop
rcll
pushf
jmp
mov
pushl
jmp
add
xor
jmp
pop
push
jmp
add
mov
add
push
sub
mov
jmp
push
mov
jmp
mov
rolb
pushf
jmp
push
jmp
mov
push
jmp
add
or
sub
xchg
not
jmp
xor
shr
dec
push
mov
jmp
pop
xchg
mov
push
jmp
mov
push
push
push
mov
sub
jmp
push
jmp
or
jmp
pop
movzbl
pushl
push
push
jmp
sub
jmp
add
jmp
shl
not
add
push
mov
push
mov
sub
xchg
jmp
add
add
sub
jmp
pop
pushl
pop
add
push
mov
jmp
mov
mov
pop
mov
jmp
push
push
jmp
pushl
jmp
mov
mov
or
jmp
push
mov
push
notl
pop
add
neg
jmp
push
mov
mov
push
push
mov
jmp
or
push
mov
jmp
push
pop
push
jmp
push
push
mov
push
mov
mov
pop
xor
mov
add
xor
sub
add
add
pop
add
jmp
add
jmp
sub
jmp
add
jmp
sub
jmp
and
sub
add
jmp
mov
jmp
not
jmp
add
jmp
add
xchg
pop
push
mov
add
push
push
pop
not
not
or
xor
jmp
pop
mov
jmp
sub
xchg
mov
mov
push
mov
add
sub
xchg
pop
push
popl
push
jmp
push
pop
add
push
mov
add
pop
xchg
jmp
sub
mov
push
pop
not
add
xor
mov
pop
add
jmp
add
jmp
rorb
pushf
jmp
mov
add
shl
push
mov
sub
dec
dec
sub
sub
sub
push
mov
push
mov
jmp
mov
jmp
xor
xor
xor
push
jmp
push
mov
inc
push
mov
push
jmp
mov
dec
not
xor
xor
jmp
dec
shl
jmp
sub
add
jmp
push
jmp
add
sub
sub
push
mov
jmp
mov
add
jmp
pop
add
add
sub
jmp
pop
push
mov
dec
and
xor
add
pop
mov
pop
xor
jmp
push
mov
and
shl
jmp
pop
mov
mov
add
push
jmp
mov
add
add
xchg
mov
add
push
mov
jmp
mov
push
jmp
push
mov
mov
jmp
pop
pop
neg
sub
sub
pop
jmp
add
jmp
subl
add
addl
mov
push
jmp
mov
jmp
mov
add
add
xchg
mov
add
add
pushl
pop
push
mov
push
mov
add
pop
add
xor
xor
xor
mov
push
mov
add
pushl
pop
add
jmp
neg
push
mov
mov
and
pop
jmp
xor
push
mov
and
neg
shl
shr
xor
add
add
pop
sub
jmp
or
push
mov
jmp
add
add
xchg
pop
push
mov
add
pop
or
jmp
push
mov
add
jmp
xchg
pop
shl
xor
mov
mov
jmp
mov
add
add
push
jmp
mov
mov
add
jmp
push
push
mov
jmp
pop
add
push
jmp
pushl
pop
add
jmp
sub
mov
push
mov
push
mov
jmp
mov
mov
push
push
pop
jmp
mov
add
xor
pop
push
jmp
jmp
push
mov
jmp
pop
not
sub
mov
mov
add
add
sub
jmp
push
push
mov
add
neg
not
sub
mov
pop
jmp
pushl
jmp
mov
rorl
pushf
jmp
mov
sub
pop
jmp
add
pop
mov
add
push
mov
dec
dec
add
and
push
mov
or
pop
jmp
push
mov
sub
pop
pop
jmp
pop
push
mov
push
jmp
mov
jmp
add
pop
sub
sub
jmp
push
mov
mov
mov
pop
shl
sub
and
push
push
mov
mov
jmp
pushl
pop
push
mov
sub
mov
addl
mov
jmp
mov
shr
jmp
mov
push
mov
jmp
add
sub
mov
mov
mov
jmp
pushl
popf
pop
adc
pushf
jmp
sub
pop
add
add
sub
add
push
push
mov
mov
jmp
sub
mov
pop
xor
jmp
xor
mov
jmp
add
push
mov
dec
dec
inc
add
shr
add
jmp
add
sub
xchg
pop
mov
push
push
mov
add
sub
xchg
pop
mov
mov
mov
pop
push
mov
jmp
push
jmp
push
pop
and
sub
add
jmp
sub
pop
jmp
jmp
pop
neg
xor
mov
pop
jmp
mov
mov
jmp
push
mov
push
jmp
mov
jmp
pop
xchg
mov
jmp
pop
jmp
and
xor
jmp
push
push
jmp
mov
sub
pop
jmp
lods
push
mov
push
push
pop
xor
add
mov
jmp
push
jmp
pushl
popf
pop
rcrb
pushf
jmp
mov
jmp
add
shr
neg
add
add
jmp
mov
jmp
sub
and
jmp
xchg
jmp
mov
sub
mov
jmp
push
mov
or
shr
or
add
add
add
jmp
mov
add
not
push
mov
shl
shl
neg
not
add
xor
pop
xor
xor
mov
push
mov
jmp
xchg
pop
mov
jmp
push
mov
add
jmp
mov
add
add
xor
xor
xor
pop
xor
xor
xor
mov
bts
pushf
jmp
add
add
xchg
pop
add
sub
xor
push
jmp
pushl
mov
add
popl
mov
push
mov
push
mov
push
mov
add
pop
sub
xchg
pop
mov
push
pop
jmp
mov
push
push
mov
addl
pop
push
jmp
shr
push
mov
add
pop
add
pop
jmp
push
jmp
mov
add
jmp
or
pop
push
jmp
pushl
pop
jmp
xor
jmp
mov
sub
jmp
push
mov
sub
mov
add
xchg
mov
mov
sub
mov
jmp
pop
push
mov
jmp
xor
and
add
xor
add
jmp
shr
push
mov
xor
pop
add
sub
mov
pop
add
pop
add
jmp
or
jne
push
push
pop
push
push
mov
mov
jmp
shr
and
xor
add
pop
push
jmp
inc
push
mov
xor
pop
jmp
add
inc
push
push
mov
jmp
push
push
mov
jmp
add
push
push
push
pop
not
add
push
push
pop
mov
mov
add
pop
sub
mov
add
pop
jmp
xor
mov
jmp
notl
jmp
push
jmp
jmp
jmp
sub
push
jmp
push
mov
mov
pop
jmp
pop
shl
shl
xor
and
jmp
add
add
jmp
sub
shl
sub
add
mov
sub
mov
mov
add
add
xchg
jmp
push
push
mov
add
sub
mov
pop
sub
mov
jmp
mov
jmp
inc
jmp
pop
push
mov
push
push
mov
neg
shr
dec
sub
push
sub
mov
mov
mov
jmp
mov
jmp
add
push
push
push
popl
addl
pop
add
push
mov
add
pop
xchg
mov
jmp
mov
mov
pop
jmp
inc
jmp
push
mov
jmp
pop
shl
jmp
or
pushf
jmp
sub
jmp
mov
sub
mov
add
add
jmp
xor
xor
xor
mov
jmp
add
sub
jmp
add
xchg
pop
jmp
xor
not
jmp
xor
mov
xor
jmp
add
add
jmp
not
xchg
and
jmp
push
mov
mov
xor
pop
add
jmp
push
pop
inc
add
jmp
add
add
sub
mov
add
xor
xor
xor
pop
popl
mov
mov
jmp
add
jmp
sub
mov
jmp
push
jmp
xor
xor
pop
and
shl
push
mov
xor
pop
shr
add
sub
add
xor
pop
neg
jmp
pushl
jmp
mov
push
jmp
and
xor
add
pop
pop
push
mov
jmp
pop
add
popl
mov
mov
push
pushf
jmp
xor
mov
mov
jmp
xor
pushl
mov
add
add
add
pop
shr
sub
push
pop
jmp
sub
jmp
mov
mov
push
mov
add
pop
jmp
shl
xor
jmp
mov
add
add
push
push
mov
mov
pushl
jmp
xchg
jmp
pop
sub
shr
add
mov
pop
push
mov
push
mov
sub
sub
add
jmp
mov
add
pop
add
sub
add
pop
push
push
mov
jmp
mov
mov
add
pop
pop
push
jmp
push
mov
sub
pop
jmp
not
or
shl
add
mov
pop
neg
sub
xor
shr
jmp
push
jmp
neg
jmp
pop
push
jmp
add
pop
jmp
neg
inc
add
xor
pop
add
jmp
mov
mov
add
sub
mov
sub
jmp
mov
cmp
pushf
jmp
mov
add
pop
jmp
add
mov
push
mov
add
jmp
neg
xchg
xor
add
sub
push
mov
jmp
push
mov
xor
xor
xor
not
push
pushl
pushl
pop
jmp
mov
jmp
add
push
mov
jmp
mov
push
push
mov
jmp
add
sub
jmp
mov
add
add
jmp
sub
mov
push
mov
jmp
add
xchg
pop
sub
add
jmp
sub
mov
mov
not
or
add
neg
push
jmp
push
mov
add
add
jmp
mov
xor
jmp
mov
mov
push
mov
add
sub
xchg
pop
mov
addl
pop
push
mov
shl
xor
add
mov
add
push
mov
add
pop
xchg
pop
push
jmp
pop
jmp
pop
sub
xchg
jmp
xor
mov
sub
mov
push
push
popl
jmp
mov
sub
or
add
jmp
mov
add
jmp
sub
not
inc
jmp
mov
jmp
mov
jmp
add
jmp
pop
sub
add
sub
sub
add
jmp
mov
push
mov
pop
jmp
mov
jmp
or
sub
sub
pop
push
push
pop
pop
jmp
push
push
mov
xor
neg
jmp
dec
jmp
mov
dec
inc
jmp
mov
add
push
mov
xor
jmp
pushl
pushl
pushl
jmp
push
mov
add
push
mov
sub
shr
add
jmp
mov
mov
add
add
jmp
sub
mov
push
mov
mov
jmp
push
mov
sub
jmp
push
pop
jmp
push
pop
add
push
mov
jmp
shr
add
sub
add
pop
sub
mov
jmp
push
sub
mov
mov
jmp
add
add
pushl
pop
add
add
jmp
sub
sub
pop
mov
jmp
shl
jmp
add
xchg
pop
jmp
inc
push
mov
sub
dec
add
add
add
jmp
inc
xor
add
neg
push
mov
add
pop
not
xor
push
jmp
add
pop
jmp
add
jmp
pop
dec
push
jmp
jmp
push
push
pop
push
jmp
add
push
jmp
mov
jmp
xor
xor
xor
xor
xor
push
mov
push
mov
add
pop
jmp
add
jmp
sub
push
push
mov
shr
sub
mov
mov
add
sub
pop
push
subl
sub
jmp
mov
sub
pop
push
mov
push
mov
xor
jmp
pop
sub
mov
mov
neg
jmp
mov
sub
mov
mov
push
push
pop
add
sub
xor
xor
xor
mov
mov
push
jmp
pop
jmp
push
mov
dec
neg
dec
xor
jmp
mov
push
mov
add
add
sub
pop
push
mov
shl
neg
jmp
inc
sub
sub
jmp
lods
sub
add
add
sub
sub
push
mov
mov
shl
and
push
mov
jmp
xor
xor
xor
pop
sub
jmp
sub
jmp
xor
jmp
mov
incl
pushf
jmp
pop
add
not
xor
and
shl
inc
inc
push
mov
mov
dec
not
push
jmp
push
mov
push
mov
jmp
pushl
pop
sub
mov
mov
push
mov
add
sub
xchg
pop
mov
jmp
add
add
mov
add
push
push
jmp
mov
push
pop
push
mov
xor
xor
and
jmp
mov
sub
jmp
pop
add
add
sub
push
mov
dec
not
sub
jmp
xor
sub
add
mov
add
add
jmp
mov
shr
shr
neg
xor
shl
xor
add
pop
push
pushl
pop
popl
jmp
pop
push
mov
mov
sub
mov
add
sub
add
add
push
mov
jmp
xor
jmp
inc
jmp
pop
jmp
mov
add
add
jmp
xor
pop
jmp
sub
mov
mov
sub
jmp
pop
mov
add
xchg
inc
xchg
dec
not
sub
mov
jmp
pushl
pop
pop
pop
push
mov
sub
mov
jmp
mov
jmp
pop
xchg
pop
mov
mov
add
push
jmp
sub
add
jmp
pop
sub
sub
mov
mov
inc
shr
not
inc
push
sub
pop
not
jmp
mov
jmp
add
pop
push
jmp
sub
mov
sub
mov
push
pop
jmp
or
jmp
pop
sub
mov
jmp
pop
not
neg
jmp
add
push
mov
push
push
pop
jmp
push
mov
jmp
pop
jmp
mov
add
add
add
sub
mov
add
xor
xor
xor
pop
push
jmp
add
push
mov
not
add
add
xchg
jmp
sub
mov
jmp
push
push
pop
add
add
xchg
pop
jmp
mov
add
jmp
mov
add
mov
add
jmp
or
jmp
xor
jmp
push
push
mov
jmp
mov
add
mov
jmp
not
mov
jmp
mov
add
pop
sub
mov
pop
jmp
add
add
jmp
mov
jmp
pop
push
pushl
jmp
add
pushl
jmp
xor
jmp
mov
jmp
shr
jmp
push
mov
jmp
push
mov
jmp
inc
push
mov
mov
add
pop
sub
pop
xor
xor
xor
mov
jmp
pop
jmp
push
mov
mov
jmp
mov
mov
not
jmp
mov
add
popl
mov
movswl
jmp
add
add
sub
sub
jmp
dec
xor
add
pop
jmp
popl
jmp
addl
mov
push
jmp
add
xor
add
pushl
jmp
push
sub
mov
jmp
push
push
pop
push
push
mov
xor
pop
pop
xor
mov
add
sub
not
xor
and
pop
push
push
jmp
push
jmp
add
xchg
mov
jmp
pop
jmp
addl
pop
sub
add
add
sub
pushl
jmp
pop
shr
jmp
mov
jmp
and
pop
jmp
mov
push
push
popl
push
mov
add
pop
pop
jmp
pushl
jmp
mov
add
xchg
pop
mov
jmp
mov
add
pushl
pop
sub
mov
mov
push
mov
add
pop
jmp
add
mov
jmp
mov
pop
mov
pop
jmp
pop
push
jmp
mov
shl
inc
sub
jmp
xor
sub
push
mov
add
pop
jmp
xchg
jmp
mov
pushl
pushl
pop
add
sub
jmp
mov
xor
pushl
pop
jmp
add
add
jmp
pushl
mov
push
push
pop
add
add
xchg
pop
push
mov
add
add
jmp
push
mov
push
mov
add
push
mov
inc
push
jmp
push
mov
add
add
xchg
jmp
not
xchg
not
jmp
push
mov
push
mov
push
push
mov
jmp
mov
jmp
xor
pushl
pop
add
jmp
sub
add
pop
shr
jmp
mov
mov
mov
jmp
pushl
mov
add
add
sub
jmp
pop
xchg
mov
jmp
not
sub
sub
sub
pop
add
push
mov
shl
push
mov
jmp
mov
add
push
mov
add
add
pop
add
sub
jmp
mov
push
mov
mov
sub
add
add
pop
jmp
pop
sub
add
add
pop
sub
add
jmp
add
push
push
jmp
mov
pop
or
pop
or
xor
jmp
mov
push
pop
push
mov
sub
jmp
push
jmp
xchg
jmp
mov
mov
jmp
mov
jmp
xor
shl
sub
mov
mov
not
push
jmp
push
mov
mov
xor
pop
jmp
push
mov
sub
sub
jmp
xor
xor
xor
mov
push
mov
push
mov
mov
push
mov
mov
shl
shr
push
mov
xchg
push
notl
pop
xchg
neg
add
jmp
add
sub
sub
mov
add
push
mov
mov
push
mov
notl
pushl
pop
push
mov
jmp
xor
xor
mov
mov
push
push
mov
jmp
add
jmp
mov
add
add
jmp
pop
add
mov
add
xchg
jmp
xor
jmp
add
xchg
pop
xchg
pop
jmp
xor
jmp
sub
jmp
xor
xor
shr
add
jmp
mov
add
popl
mov
mul
movzbw
pushw
jmp
sub
pop
jmp
xor
sub
pop
not
push
push
mov
mov
sub
pop
jmp
add
jmp
push
mov
jmp
pop
push
addl
pop
sub
mov
jmp
add
xchg
jmp
push
mov
mov
jmp
add
add
jmp
neg
shl
dec
add
jmp
push
jmp
mov
jmp
add
jmp
push
pop
pop
push
sub
mov
add
jmp
not
add
jmp
add
jmp
sub
sub
add
jmp
inc
add
sub
jmp
mov
jmp
pushl
pop
add
jmp
pop
add
push
mov
push
jmp
pop
add
pop
xchg
pop
pushl
jmp
pop
sub
jmp
push
pop
sub
mov
push
mov
jmp
sub
jmp
sub
add
add
pop
push
mov
push
pop
add
add
jmp
mov
sub
pop
xor
or
jmp
mov
sub
mov
push
pop
push
jmp
add
pop
add
xchg
pop
push
mov
mov
push
mov
jmp
pushl
jmp
xchg
pop
add
xor
xor
xor
pop
mov
jmp
add
jmp
mov
jmp
mov
jmp
add
jmp
sub
jmp
push
jmp
sub
mov
add
jmp
add
inc
add
add
pop
and
pushl
pop
add
jmp
pop
shr
jmp
push
push
jmp
pop
popl
jmp
pop
push
jmp
add
sub
jmp
pop
subl
pop
sub
addl
jmp
add
add
pop
jmp
push
pop
add
push
mov
add
pop
jmp
mov
jmp
sub
mov
mov
not
mov
pop
neg
jmp
mov
sub
mov
mov
push
mov
add
mov
add
sub
mov
jmp
shr
shr
not
not
jmp
push
push
mov
addl
popl
addl
popl
addl
pushl
mov
add
add
add
jmp
add
jmp
pop
jmp
shr
shr
xor
push
notb
pop
push
push
sub
mov
mov
mov
jmp
sub
jmp
push
mov
jmp
push
mov
push
mov
mov
mov
jmp
push
mov
sub
pop
add
jmp
mov
push
mov
push
mov
add
pop
sub
push
pushl
jmp
mov
add
sub
xchg
pop
jmp
pop
jmp
sub
xor
add
mov
push
jmp
neg
jmp
mov
not
jmp
add
mov
add
pop
jmp
sub
jmp
xor
push
push
mov
dec
neg
and
push
mov
mov
jmp
push
mov
mov
xor
pop
jmp
xor
inc
push
mov
inc
shl
jmp
pop
add
pop
sub
push
mov
add
jmp
add
pop
push
mov
jmp
mov
add
add
xchg
pop
sub
add
sub
sub
sub
mov
mov
add
pop
sub
add
push
mov
sub
jmp
xor
pop
dec
inc
jmp
pop
and
pushl
mov
push
mov
add
add
xchg
pop
push
jmp
pop
jmp
pop
jmp
pop
push
jmp
push
mov
push
jmp
popl
push
mov
jmp
xor
xor
pop
sub
mov
mov
push
mov
sub
jmp
sub
mov
add
pop
add
pop
xor
mov
push
mov
add
add
jmp
sub
pop
pop
add
pop
pop
add
push
push
jmp
pop
sub
jmp
push
push
mov
add
jmp
mov
shl
or
shr
not
push
mov
xor
jmp
mov
jmp
push
mov
jmp
add
push
jmp
push
mov
add
add
xchg
pop
jmp
mov
push
jmp
sub
mov
mov
shl
push
mov
mov
add
mov
jmp
mov
jmp
pop
pop
push
mov
add
mov
jmp
push
jmp
sub
jmp
mov
jmp
pushl
mov
jmp
mov
mov
add
push
mov
jmp
mov
pop
xor
jmp
mov
jmp
mov
push
mov
push
mov
mov
push
push
mov
add
jmp
push
mov
jmp
mov
add
add
jmp
mov
push
mov
add
jmp
mov
add
add
pop
jmp
not
push
mov
jmp
xchg
jmp
push
pushl
pop
popl
jmp
xchg
pop
movl
jmp
sub
jmp
push
mov
add
add
xchg
mov
pop
push
jmp
jmp
push
mov
and
pop
push
mov
add
mov
add
xor
add
add
sub
mov
jmp
add
jmp
mov
xchg
not
xchg
jmp
sub
add
xor
pop
xor
pop
add
pop
xchg
jmp
xor
xor
xor
pop
jmp
add
push
mov
or
not
neg
jmp
pop
add
push
mov
xor
add
shr
not
inc
jmp
push
push
mov
push
jmp
mov
push
jmp
push
jmp
sub
and
pop
inc
not
or
not
push
mov
push
push
jmp
add
xchg
pop
pushl
pop
add
and
jmp
pop
jmp
mov
mov
jmp
mov
push
jmp
add
mov
push
mov
sub
mov
jmp
sub
shl
jmp
add
pop
add
jmp
push
mov
push
mov
mov
add
push
mov
and
xor
sub
jmp
xor
xor
mov
add
push
jmp
sub
add
pop
dec
jmp
mov
mov
push
jmp
sub
jmp
mov
add
sub
push
mov
add
sub
sub
pop
sub
jmp
push
pop
push
push
mov
mov
sub
pop
add
push
push
mov
sub
and
jmp
pop
push
pushl
pop
popl
mov
jmp
mov
push
mov
addl
popl
push
mov
add
pop
pushl
jmp
mov
mov
push
jmp
mov
push
mov
jmp
xchg
xor
jmp
sub
pop
push
mov
jmp
shr
add
jmp
add
xchg
jmp
add
push
mov
mov
sub
pop
pushl
push
mov
add
pop
mov
jmp
dec
or
shl
not
jmp
xchg
mov
push
mov
jmp
mov
jmp
mov
add
add
jmp
mov
push
mov
neg
inc
xor
not
jmp
pop
sub
jmp
sub
jmp
push
jmp
mov
push
jmp
push
jmp
push
mov
mov
jmp
pop
add
add
jmp
push
jmp
shr
inc
add
xor
pop
add
pop
sub
jmp
add
sub
pop
add
xchg
mov
mov
jmp
pushl
mov
add
push
mov
add
jmp
push
pushl
jmp
xor
add
add
pop
push
mov
mov
push
mov
jmp
mov
push
sub
jmp
add
jmp
movzbw
pushw
mov
jmp
mov
jmp
sub
sub
add
add
push
mov
jmp
mov
add
xor
pop
sub
pushl
pop
add
add
push
mov
add
pop
push
push
push
jmp
pushl
pop
push
mov
jmp
pushl
pop
push
jmp
add
push
mov
jmp
xchg
jmp
sub
mov
pushl
pop
jmp
pop
jmp
pop
xchg
mov
jmp
add
sub
pop
push
pushl
pop
popl
pop
add
pushf
jmp
popl
mov
mov
movzbw
push
pushf
jmp
add
sub
push
mov
push
push
mov
mov
pop
mov
mov
add
mov
pushl
mov
add
add
mov
add
jmp
mov
and
pop
xor
jmp
push
jmp
sub
push
pushl
mov
push
mov
add
jmp
neg
jmp
add
xor
xor
xor
jmp
mov
xor
pop
add
pushl
pop
add
sub
xchg
jmp
mov
xor
jmp
add
xor
jmp
sub
jmp
pop
pop
push
mov
push
pop
add
jmp
mov
jmp
push
mov
jmp
mov
add
add
pop
sub
add
pop
jmp
pushl
pop
push
push
pop
add
jmp
pop
jmp
mov
push
pop
jmp
mov
add
add
jmp
popl
mov
mov
jmp
add
add
jmp
mov
add
add
xchg
pop
sub
push
pop
jmp
mov
add
sub
sub
mov
mov
sub
add
push
mov
jmp
mov
mov
jmp
push
jmp
add
add
xchg
pop
add
push
xorl
mov
jmp
mov
add
push
mov
add
pop
push
mov
sub
mov
add
xchg
mov
jmp
xchg
mov
push
jmp
mov
jmp
sub
push
mov
jmp
sub
push
push
mov
add
pop
pop
push
mov
sub
pop
pop
push
xorl
pop
push
mov
neg
dec
jmp
xor
pushl
pop
add
or
xor
jmp
pop
xor
sub
add
pop
jmp
lods
push
mov
push
jmp
sub
neg
xor
xor
jmp
shl
push
jmp
or
jmp
xor
xor
xchg
not
jmp
add
sub
mov
push
push
pop
xchg
not
xchg
sub
push
mov
jmp
push
push
jmp
pushl
mov
push
mov
jmp
mov
jmp
xchg
pop
or
je
push
mov
push
jmp
pop
jmp
mov
mov
xor
pop
xor
jmp
add
not
sub
jmp
xor
jmp
push
mov
mov
mov
add
sub
xor
pop
add
jmp
push
mov
jmp
pop
and
jmp
mov
not
jmp
mov
pop
sub
add
add
pop
jmp
mov
mov
add
add
pop
add
mov
jmp
and
pop
xchg
jmp
not
inc
xor
xor
add
pop
jmp
mov
mov
pop
add
mov
add
push
push
mov
push
mov
jmp
push
mov
inc
neg
and
sub
neg
jmp
mov
jmp
pop
add
sub
push
push
pop
inc
shl
push
mov
add
jmp
pushl
pop
jmp
mov
mov
pop
pop
pop
and
jmp
pop
add
push
mov
jmp
mov
pop
add
pop
sub
jmp
pushl
mov
sub
jmp
xor
sub
pop
xor
pop
mov
pop
add
neg
push
mov
and
pop
sub
jmp
shr
jmp
push
jmp
lods
push
push
push
mov
and
neg
shl
push
jmp
xor
mov
add
push
mov
inc
shr
add
not
add
add
pop
jmp
push
mov
push
mov
add
add
xchg
jmp
sub
jmp
sub
pop
sub
not
neg
add
push
push
mov
jmp
mov
jmp
mov
xor
pop
dec
and
sub
sub
pop
sub
add
push
mov
jmp
mov
jmp
mov
push
pushl
mov
add
add
add
jmp
mov
push
mov
mov
push
mov
push
mov
add
pop
xchg
jmp
sub
mov
add
push
mov
jmp
popl
mov
pushl
pushl
pop
add
sub
mov
jmp
add
jmp
mov
add
add
jmp
jmp
xchg
mov
add
xchg
push
mov
push
pop
jmp
mov
xor
jmp
push
mov
jmp
add
jmp
xchg
pop
add
add
jmp
mov
sub
pop
jmp
add
push
push
mov
not
shr
jmp
push
push
pop
push
jmp
push
mov
add
add
xor
xor
xor
pop
jmp
pop
sub
jmp
sub
dec
jmp
idiv
push
mov
push
jmp
mov
jmp
add
pop
add
push
mov
sub
shr
neg
xor
sub
pop
popl
jmp
push
mov
jmp
push
mov
add
pop
jmp
mov
or
mov
add
and
jmp
pushl
push
mov
xor
mov
add
pushl
pop
jmp
push
jmp
add
pop
shl
xor
sub
jmp
mov
push
mov
jmp
mov
add
add
xchg
jmp
pop
jmp
dec
xor
sub
pop
sub
add
jmp
push
jmp
sub
pop
push
mov
push
mov
sub
pop
add
jmp
xchg
pop
mov
push
push
pop
push
jmp
push
mov
neg
shr
and
dec
push
mov
xor
pop
jmp
mov
neg
dec
shl
push
mov
xor
pop
jmp
pop
jmp
mov
push
push
pop
add
sub
xor
xor
xor
jmp
push
jmp
mov
pop
mov
add
push
push
mov
mov
xor
jmp
sub
sub
mov
jmp
add
xchg
pop
add
push
jmp
mov
jmp
push
push
mov
push
xorl
pop
xor
pop
add
pop
add
xchg
jmp
pop
jmp
push
jmp
push
mov
add
pop
jmp
add
and
sub
add
pop
sub
sub
mov
jmp
pop
add
pop
sub
mov
jmp
pushl
jmp
xchg
xchg
jmp
pop
add
push
mov
shr
jmp
push
mov
jmp
and
jmp
mov
jmp
pop
jmp
push
mov
or
sub
push
mov
shr
add
jmp
sub
shl
and
jmp
pop
popl
mov
shrl
pushf
jmp
mov
push
mov
and
shl
neg
add
jmp
mov
jmp
mov
add
pop
pop
sub
pop
jmp
add
push
pushl
pop
popl
mov
mov
push
mov
jmp
push
mov
and
or
xor
add
pop
add
jmp
push
jmp
xor
mov
pop
jmp
add
push
push
pop
push
mov
sub
add
add
jmp
mov
push
push
mov
mov
mov
jmp
xor
mov
mov
push
pushl
jmp
pop
pop
jmp
xor
xor
jmp
mov
push
jmp
xchg
pop
pop
push
jmp
sub
pop
xchg
jmp
sub
pop
push
notl
pop
push
mov
shr
add
jmp
sub
jmp
pop
add
add
sub
jmp
pop
not
or
xor
sub
pop
add
add
mov
add
sub
jmp
mov
add
jmp
not
xchg
mov
add
push
push
pop
jmp
push
mov
add
dec
push
mov
and
jmp
mov
push
mov
add
add
xchg
pop
push
mov
jmp
add
xor
pop
dec
sub
add
pop
add
jmp
pop
push
mov
push
jmp
popl
jmp
sub
pop
add
jmp
pop
sub
mov
pop
add
mov
add
sub
add
sub
sub
push
push
jmp
mov
pushl
pop
push
mov
jmp
add
push
pushl
jmp
sub
pop
sub
jmp
add
pop
jmp
sub
pop
dec
push
mov
jmp
pop
shr
inc
xor
add
pop
xor
jmp
push
mov
add
jmp
mov
jmp
pop
push
jmp
pop
or
xor
jmp
mov
add
jmp
push
jmp
pop
jmp
sub
subl
mov
add
mov
add
pop
push
sub
mov
push
jmp
sub
push
mov
shr
sub
and
pop
push
jmp
add
pop
push
mov
jmp
pop
add
pop
pop
add
jmp
mov
pushl
jmp
sub
mov
mov
or
pop
add
sub
push
jmp
add
add
add
jmp
push
push
jmp
add
jmp
or
jmp
pop
push
mov
add
pop
push
pushl
pop
popl
mov
push
sub
mov
mov
push
mov
dec
xor
jmp
dec
xor
mov
pop
jmp
add
add
pop
push
mov
add
jmp
add
pop
add
push
pushl
pushl
pop
sub
jmp
sub
xchg
jmp
xor
xor
xor
jmp
add
add
mov
jmp
and
dec
add
add
add
pop
sub
jmp
add
pop
pushl
mov
jmp
or
shl
push
mov
mov
push
push
mov
mov
neg
jmp
not
sub
push
mov
xor
pop
mov
mov
add
sub
mov
add
jmp
mov
pushl
jmp
sub
mov
jmp
sub
pop
sub
pop
add
jmp
add
jmp
mov
pushl
mov
add
jmp
push
mov
sub
pop
pop
sub
add
add
pop
sub
sub
sub
add
add
push
push
pushl
pop
add
push
notl
pop
jmp
xchg
pop
jmp
pop
not
xchg
push
mov
jmp
pop
push
push
mov
mov
sub
jmp
add
shr
shr
push
mov
not
shl
jmp
pop
jmp
pushl
pop
push
mov
jmp
push
mov
sub
jmp
mov
btr
pushf
jmp
mov
sub
mov
mov
jmp
add
jmp
mov
add
push
sub
pop
xor
push
mov
mov
jmp
push
jmp
mov
jmp
push
pushl
pop
popl
jmp
sub
mov
pushl
mov
add
popl
pop
mov
mov
add
not
inc
push
push
mov
push
push
mov
xor
jmp
pop
push
mov
add
add
xchg
pop
push
mov
shl
sub
xor
add
pop
jmp
add
xchg
pop
jmp
sub
mov
add
pop
push
mov
add
pop
jmp
xor
pop
add
jmp
mov
mov
pop
push
push
push
mov
mov
add
add
sub
pop
shl
jmp
sub
addl
addl
pushl
pop
add
mov
add
sub
mov
mov
add
mov
push
mov
push
jmp
sub
push
mov
jmp
push
mov
sub
jmp
push
mov
jmp
mov
add
jmp
inc
jmp
add
pop
or
pop
push
jmp
add
mov
pop
xor
pop
jmp
add
pop
sub
shr
or
add
jmp
pop
push
mov
add
pop
sub
add
add
push
mov
or
push
mov
push
jmp
pop
add
jmp
sub
sub
movzbw
pushw
jmp
xor
add
pop
push
mov
sub
push
mov
add
pop
add
mov
jmp
mov
mov
jmp
notl
pop
add
add
add
push
mov
xor
sub
mov
add
mov
jmp
pop
jmp
mov
push
mov
mov
jmp
add
add
sub
pushl
pop
push
mov
jmp
pop
push
jmp
mov
add
add
xor
jmp
add
sub
add
and
neg
shr
jmp
push
popl
push
push
mov
not
jmp
push
mov
jmp
push
mov
push
jmp
sub
add
add
pop
shl
add
push
jmp
mov
push
pop
add
jmp
add
xor
jmp
not
jmp
shr
xchg
jmp
mov
and
sub
xor
push
jmp
xchg
jmp
mov
add
sub
xchg
pop
mov
mov
xor
pushl
jmp
pushl
pop
push
mov
mov
push
mov
push
jmp
add
push
mov
add
pop
xchg
mov
sub
sub
jmp
add
add
jmp
mov
pop
jmp
add
push
mov
jmp
pop
sub
pop
push
pushl
mov
add
jmp
add
jmp
pop
sub
pop
shr
sub
push
jmp
pop
mov
sub
jmp
mov
pushl
mov
add
jmp
add
jmp
sub
xchg
pop
jmp
mov
mov
push
mov
jmp
pop
pushl
mov
sub
mov
mov
add
push
push
pop
jmp
jmp
xchg
mov
pushl
pop
add
push
mov
push
push
jmp
add
sub
jmp
add
xchg
pop
pushl
pop
push
mov
add
add
xchg
pop
mov
sub
jmp
push
push
jmp
push
pop
push
mov
add
pushl
mov
add
add
push
mov
jmp
add
sub
mov
push
jmp
xor
push
jmp
add
push
mov
mov
pop
mov
add
jmp
xor
jmp
shl
pushl
push
jmp
add
jmp
or
jmp
sub
pop
sub
push
push
mov
jmp
popl
jmp
sub
pop
pop
sub
jmp
add
xor
push
mov
push
jmp
pop
shl
and
jmp
add
push
jmp
cmp
mov
or
mov
movsb
or
pop
movsb
or
shll
or
mov
or
ret
pop
bound
scas
pop
movsb
or
andb
cltd
mov
or
lods
mov
or
adc
cli
mov
or
scas
mov
or
mov
movsb
or
mov
movsb
or
fisubl
pop
sti
mov
or
lds
or
mov
mov
or
shll
push
inc
movsb
or
jg
or
stos
movsb
or
lock
or
push
mov
or
test
jbe
movsb
or
lock
or
xchg
movsb
or
shlb
or
mov
or
movsb
movsb
or
inc
movsb
or
inc
movsb
or
xchg
mov
or
mov
or
ret
mov
or
mov
sub
insl
outsb
movsb
or
and
mov
movsb
or
adc
imul
or
ljmp
xchg
movsb
or
test
ret
or
mov
movsb
or
push
movsb
or
cmp
sub
movsb
or
mov
dec
cld
mov
or
test
or
xchg
movsb
or
fsubl
or
push
movsb
or
lods
movsb
or
xlat
movsb
or
arpl
push
or
inc
and
movsb
or
xchg
mov
or
stos
mov
or
fisubl
or
pop
movsb
or
lret
sub
movsb
or
cmp
xor
fwait
movsb
or
test
movsb
or
adc
or
push
movsb
or
loope
or
push
movsb
or
xor
or
xchg
mov
or
les
or
cmc
mov
or
movsl
movsb
or
xlat
mov
or
insb
movsb
or
mov
movsb
or
sti
mov
or
hlt
mov
or
cmpsb
movsb
or
test
cmc
ret
cmp
movsl
mov
or
mov
or
push
movsb
or
lret
or
mov
or
mov
movsb
or
scas
movsb
or
popf
mov
or
or
es
or
iret
mov
or
aaa
movsb
or
iret
movsb
or
aas
movsb
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
push
mov
push
mov
mov
jmp
push
mov
xor
pop
add
mov
add
xchg
mov
jmp
add
not
add
xor
jmp
pushl
pop
add
jmp
pop
add
pop
add
xchg
mov
jmp
pop
add
pop
xchg
pop
pushl
subl
pushl
pop
add
push
push
mov
jmp
push
push
jmp
add
pop
mov
add
jmp
mov
sub
jmp
pop
add
push
jmp
mov
add
xor
xor
xor
mov
pushl
mov
push
jmp
mov
jmp
sub
mov
mov
and
mov
add
sub
add
add
add
jmp
push
pop
sub
mov
mov
jmp
push
mov
sub
sub
dec
and
and
sub
sub
pop
jmp
push
push
mov
and
jmp
mov
add
push
mov
sub
jmp
pop
add
push
mov
mov
and
and
neg
add
sub
add
mov
add
jmp
xor
xor
pop
or
pop
add
xchg
not
xchg
jmp
movsbw
pushw
jmp
sub
mov
mov
shl
and
jmp
add
jmp
push
jmp
mov
addl
jmp
sub
sub
add
add
add
sub
pop
push
mov
mov
jmp
jmp
popa
ret
popl
jmp
push
mov
add
jmp
push
push
mov
add
mov
pop
neg
jmp
add
pop
push
jmp
pop
popl
pop
sub
mov
mov
add
shr
jmp
or
neg
dec
jmp
mov
mov
add
jmp
push
mov
jmp
sub
jmp
shl
shl
xor
add
add
jmp
push
mov
mov
sub
mov
jmp
xor
not
push
mov
add
or
pop
add
mov
pop
push
jmp
or
mov
add
shr
push
push
mov
push
jmp
mov
push
push
mov
not
and
sub
jmp
mov
jmp
mov
mov
jmp
inc
push
jmp
sub
jmp
not
xor
add
sub
push
sub
mov
mov
or
push
mov
xor
pop
add
push
jmp
push
push
pop
not
jmp
add
sub
push
pushl
pop
popl
pop
mov
mov
jmp
mov
add
popl
jmp
shr
add
add
pop
jmp
add
add
xchg
pop
push
mov
jmp
pop
or
shl
add
add
pop
add
pop
add
xchg
pop
add
cmp
pushf
jmp
mov
jmp
pop
add
jmp
pop
add
push
push
mov
dec
or
jmp
mov
sub
mov
mov
dec
push
mov
add
mov
push
mov
add
jmp
pushl
mov
add
jmp
neg
xor
xor
jmp
xor
jmp
mov
mov
sub
sub
add
jmp
xor
pop
sub
pop
dec
not
push
push
jmp
mov
push
pop
add
sub
xchg
mov
mov
jmp
mov
mov
jmp
pop
mov
push
push
mov
jmp
push
push
pop
or
sub
jmp
add
add
add
pop
add
xchg
mov
or
je
sub
sub
mov
jmp
mov
sub
mov
jmp
mov
pushl
pop
jmp
add
jmp
sub
mov
jmp
add
pop
jmp
mov
add
sub
xchg
jmp
dec
dec
add
add
pop
add
jmp
add
jmp
mov
add
pop
pop
pop
mov
jmp
push
jmp
mov
push
mov
jmp
push
mov
push
pop
sub
mov
push
mov
jmp
neg
or
push
mov
jmp
add
add
sub
push
mov
sub
pop
mov
add
push
pushl
pop
popl
mov
roll
pushf
jmp
mov
push
push
jmp
pushl
popf
pop
rcrw
pushf
jmp
add
add
xchg
pop
pushw
mov
push
push
mov
push
mov
jmp
mov
jmp
pushl
jmp
add
not
jmp
mov
mov
mov
jmp
pop
pop
mov
add
mov
add
sub
mov
push
mov
sub
mov
addl
jmp
mov
add
dec
not
jmp
sub
mov
mov
jmp
popl
mov
jmp
push
mov
add
pop
sub
sub
sub
pop
push
mov
add
sub
xchg
pop
mov
push
mov
mov
mov
pop
push
mov
jmp
sub
mov
push
mov
mov
add
add
jmp
sub
mov
push
pop
jmp
push
mov
not
shr
jmp
sub
add
pop
mov
jmp
mov
or
pop
and
shr
add
add
jmp
mov
add
sub
xchg
mov
mov
mov
inc
push
mov
jmp
mov
jmp
mov
xor
jmp
push
push
push
jmp
xor
sub
add
jmp
add
sub
jmp
mov
sub
mov
push
mov
addl
pop
push
jmp
pop
sub
push
push
mov
mov
pop
jmp
push
jmp
not
jmp
mov
jmp
and
pushl
jmp
push
push
pop
jmp
mov
push
mov
push
mov
mov
jmp
mov
pop
sub
jmp
push
mov
jmp
shr
shr
neg
or
sub
or
pop
shl
not
jmp
xchg
jmp
add
xor
jmp
pushl
pop
popl
mov
push
jmp
mov
sub
mov
push
mov
add
sub
jmp
push
mov
add
add
jmp
push
mov
push
jmp
push
subl
pop
add
jmp
mov
mov
pop
push
pop
pop
pushl
pushl
pop
push
push
mov
add
add
add
xchg
jmp
pop
decw
pushf
jmp
mov
jmp
mov
mov
push
mov
add
add
xchg
pop
jmp
pop
push
mov
add
add
xchg
jmp
mov
push
mov
xor
pop
not
xchg
not
jmp
push
mov
jmp
add
jmp
push
mov
mov
pop
push
jmp
add
xchg
pop
push
push
mov
xor
mov
pop
dec
not
inc
add
jmp
pop
add
jmp
addl
popl
push
mov
add
sub
jmp
pop
shl
push
jmp
sub
xor
add
jmp
mov
add
add
jmp
or
sub
xchg
not
xchg
jmp
mov
jmp
push
mov
jmp
xchg
pop
xor
xor
xor
mov
mov
push
jmp
inc
neg
add
sub
pop
jmp
mov
mov
jmp
dec
dec
xor
sub
pushl
pop
add
push
pushl
pop
popl
mov
mov
jmp
xor
jmp
pop
jmp
add
shr
sub
push
mov
sub
jmp
add
push
mov
mov
jmp
xor
add
sub
add
add
jmp
sub
push
jmp
add
add
pop
sub
jmp
mov
push
mov
add
jmp
pop
xchg
pop
add
sub
sub
sub
add
push
push
push
mov
jmp
mov
sub
mov
jmp
and
add
push
xorl
pop
xor
jmp
mov
add
add
pop
jmp
popl
pop
jmp
push
mov
sub
jmp
sub
sub
jmp
sub
mov
jmp
pushl
pushl
pop
add
jmp
mov
push
pop
jmp
xor
xor
or
sub
add
mov
add
add
sub
pushw
mov
mov
sub
add
sub
sub
push
mov
push
jmp
popl
sub
mov
mov
jmp
shl
push
mov
sub
mov
pop
sub
jmp
mov
mov
shl
jmp
push
mov
mov
jmp
mov
jmp
mov
jmp
add
pushl
pop
add
xor
xor
jmp
push
jmp
and
dec
or
sub
add
inc
and
jmp
shr
push
jmp
mov
add
push
sub
mov
mov
sub
mov
mov
jmp
mov
add
popl
pop
mov
push
mov
add
jmp
mov
and
shl
push
jmp
add
jmp
jmp
add
push
mov
jmp
sub
mov
mov
add
sub
xchg
pop
jmp
pop
add
add
xchg
pop
push
mov
xor
inc
sub
add
pushl
pop
add
add
xor
xor
xor
mov
pushl
pop
push
mov
add
push
jmp
add
pop
push
pushl
pop
popl
pop
push
mov
pushl
mov
add
sub
mov
push
mov
add
push
jmp
push
mov
jmp
sub
push
mov
sub
sub
add
pop
jmp
push
mov
mov
pop
sub
sub
add
mov
push
jmp
sub
mov
addl
pop
sub
mov
mov
jmp
add
jmp
add
push
mov
mov
sub
jmp
or
je
sub
mov
push
mov
push
xorl
pushl
jmp
push
mov
mov
push
mov
jmp
push
mov
or
sub
inc
sub
jmp
mov
jmp
push
push
pop
jmp
add
xor
jmp
push
push
jmp
add
jmp
add
or
je
push
mov
sub
mov
mov
shl
push
mov
jmp
mov
add
jmp
pop
push
jmp
mov
push
jmp
push
pop
jmp
pop
pushl
mov
add
add
sub
jmp
mov
mov
sub
pop
xchg
pop
mov
mov
add
push
mov
add
mov
add
xchg
jmp
mov
mov
jmp
pop
add
sub
mov
mov
xor
neg
jmp
dec
xor
mov
jmp
push
push
mov
mov
pop
jmp
pop
mov
mov
add
jmp
add
jmp
add
add
xor
xor
xor
sub
mov
jmp
push
jmp
sub
pop
jmp
push
mov
jmp
add
shr
sub
add
sub
pop
xchg
pop
jmp
mov
add
jmp
pushl
mov
add
popl
mov
or
pushf
jmp
push
mov
mov
jmp
mov
add
add
jmp
add
add
xchg
jmp
add
jmp
jmp
popl
mov
movsbl
push
mov
jmp
xor
xor
xor
sub
jmp
add
push
mov
pushl
pushl
mov
add
push
mov
jmp
xor
mov
add
sub
add
add
jmp
pop
add
jmp
mov
mov
pop
add
mov
add
jmp
add
jmp
xor
pop
add
push
mov
jmp
mov
add
push
mov
push
mov
add
jmp
add
mov
add
push
sub
mov
jmp
mov
sub
jmp
xchg
pop
push
jmp
popl
jmp
inc
neg
neg
xor
jmp
push
mov
jmp
mov
add
sub
add
jmp
xor
jmp
mov
push
mov
add
add
jmp
sub
jmp
push
jmp
add
addw
push
mov
sub
jmp
mov
push
mov
add
jmp
mov
jmp
mov
xor
mov
pop
add
pop
add
xchg
jmp
pop
pushw
mov
jmp
neg
xor
push
jmp
pop
push
push
pop
push
push
mov
mov
pop
add
pop
jmp
mov
pushl
pop
popl
mov
pushl
jmp
mov
push
jmp
mov
mov
jmp
mov
mov
jmp
pop
jmp
push
pop
pushl
pop
jmp
jmp
mov
push
pop
sub
mov
mov
push
jmp
pop
push
mov
mov
add
add
mov
add
pop
push
mov
jmp
mov
add
pushl
pop
add
push
mov
sub
add
add
pop
xchg
pop
sub
mov
jmp
mov
add
jmp
push
pop
jmp
sub
add
add
mov
add
add
xor
shr
push
mov
sub
jmp
add
push
mov
add
pop
jmp
mov
shr
shl
add
jmp
mov
push
jmp
and
mov
add
dec
xor
push
mov
mov
add
sub
xchg
pop
jmp
mov
jmp
add
jmp
push
popl
jmp
push
mov
add
jmp
xor
sub
shl
and
sub
jmp
xor
and
pop
xor
jmp
mov
push
jmp
mov
add
jmp
mov
mov
add
jmp
pop
jmp
add
jmp
add
pop
add
sub
pop
sub
mov
pushl
pushl
pop
add
popl
mov
mov
sub
jmp
xchg
mov
sub
mov
mov
push
push
mov
xor
sub
jmp
sub
sub
add
sub
jmp
push
push
mov
jmp
add
pop
neg
not
dec
add
add
jmp
pop
jmp
movzbl
jmp
pushl
pop
popl
pop
mov
push
mov
push
mov
push
mov
mov
pop
pop
mov
pop
or
dec
not
pushw
mov
push
mov
mov
pop
jmp
pop
jmp
add
sub
jmp
add
add
pop
add
mov
jmp
push
mov
or
shl
add
mov
pop
add
dec
xor
jmp
sub
pop
jmp
shl
push
jmp
pop
xchg
jmp
sub
sub
pushl
pop
add
push
mov
push
pop
jmp
pop
add
pop
jmp
push
pushl
pop
popl
mov
jmp
mov
sub
jmp
pop
mov
jmp
mov
shl
shr
add
push
jmp
add
add
pop
sub
mov
push
mov
push
mov
mov
sub
mov
jmp
mov
mov
xor
pop
add
mov
jmp
push
jmp
add
pop
mov
jmp
mov
add
jmp
dec
jmp
popl
jmp
sub
mov
jmp
add
xor
mov
jmp
push
mov
mov
dec
or
push
push
mov
mov
xor
jmp
add
jmp
mov
push
pop
sub
jmp
mov
pushl
pop
add
add
pop
jmp
mov
jmp
mov
or
xor
mov
pop
add
sub
shl
neg
or
xor
add
pop
add
add
push
mov
neg
jmp
xchg
jmp
add
add
pop
add
sub
mov
jmp
add
sub
mov
add
xor
mov
add
and
jmp
add
xor
pop
add
pop
sub
sub
mov
push
mov
jmp
mov
not
sub
and
sub
mov
jmp
mov
sub
jmp
mov
jmp
add
sub
mov
add
push
pushl
mov
add
popl
mov
jmp
pop
jmp
mov
pop
push
push
push
mov
mov
jmp
add
jmp
sub
sub
add
jmp
sub
pop
shl
shl
sub
add
pop
push
mov
sub
pop
jmp
mov
add
jmp
sub
mov
sub
mov
mov
mov
sub
pop
jmp
add
jmp
shr
sub
jmp
add
pop
sub
xchg
pop
mov
mov
add
add
jmp
pop
push
mov
subl
add
addl
pop
jmp
xor
jmp
add
add
jmp
add
pop
mov
jmp
mov
jmp
neg
xor
and
pop
xor
add
pop
pop
add
jmp
mov
jmp
push
notl
pop
and
neg
not
jmp
xor
mov
pop
shr
inc
shr
sub
mov
mov
sub
sub
add
pushl
jmp
xor
or
jmp
sub
mov
push
jmp
add
sub
sub
pop
mov
pop
add
jmp
mov
or
jmp
mov
jmp
mov
and
jmp
add
shl
neg
jmp
push
notl
pop
add
sub
sub
add
mov
jmp
add
pop
jmp
add
movzbl
lea
push
mov
jmp
xor
mov
xor
jmp
push
mov
jmp
add
sub
mov
add
add
add
jmp
push
mov
add
sub
xchg
pop
mov
push
jmp
sub
mov
push
mov
mov
jmp
addl
jmp
pop
mov
pop
jmp
sub
sub
shl
jmp
push
pop
sub
sub
add
jmp
pop
mov
mov
add
jmp
add
pop
jmp
mov
jmp
xor
sub
jmp
mov
jmp
add
sub
sub
or
sub
shr
add
add
mov
add
jmp
push
addl
jmp
mov
add
push
push
mov
add
sub
mov
jmp
add
sub
sub
push
mov
add
pop
pop
sub
add
pop
jmp
pop
mov
mov
jmp
mov
jmp
lods
xor
jmp
mov
push
mov
push
mov
mov
pushl
pop
add
mov
pop
mov
jmp
mov
jmp
mov
add
pop
jmp
dec
add
add
pop
jmp
sub
pop
xor
xor
jmp
sub
pop
not
sub
push
mov
add
add
sub
pop
sub
jmp
push
pushl
pop
popl
pop
and
pushf
jmp
push
jmp
add
add
xchg
pop
or
jne
push
jmp
sub
pop
sub
mov
jmp
mov
add
add
xchg
pop
jmp
pop
push
jmp
mov
add
sub
add
inc
xor
xor
pop
push
mov
shl
xor
sub
add
jmp
not
xor
xor
xor
add
jmp
mov
push
push
mov
or
add
push
mov
xor
pop
mov
add
mov
add
sub
xor
jmp
push
mov
add
pop
xchg
pop
jmp
mov
add
pop
xchg
jmp
mov
xor
sub
jmp
push
popl
addl
pop
push
jmp
add
pop
shl
push
mov
push
jmp
mov
add
mov
pop
jmp
shl
push
sub
mov
jmp
push
mov
sub
pop
jmp
add
sub
add
add
pop
sub
xchg
pop
mov
mov
mov
shl
jmp
mov
add
pop
push
pushl
mov
push
push
jmp
mov
add
pop
jmp
pushl
jmp
pushw
pop
sub
mov
add
push
mov
xor
jmp
mov
jmp
mov
add
jmp
sub
mov
push
mov
jmp
mov
mov
shr
add
jmp
add
pop
and
jmp
lods
sub
sub
sub
push
mov
not
inc
not
and
push
jmp
mov
push
mov
mov
or
push
mov
xchg
not
xchg
shr
jmp
mov
jmp
jmp
add
add
xchg
pop
add
push
mov
pushl
jmp
mov
jmp
mov
push
pop
add
push
push
jmp
sub
pop
push
jmp
pop
not
sub
or
jmp
mov
add
push
push
mov
pushw
pop
jmp
mov
mov
add
pop
push
mov
add
jmp
imul
push
pushf
jmp
xor
xor
push
jmp
mov
push
jmp
push
mov
jmp
sub
mov
addl
jmp
addl
add
jmp
xor
pop
add
push
push
mov
xor
mov
jmp
pop
pop
push
mov
add
pop
push
mov
dec
jmp
add
shl
add
mov
pop
push
mov
xor
dec
and
shr
shr
sub
sub
jmp
mov
add
pushl
pop
add
jmp
sub
mov
sub
jmp
pop
add
sub
xchg
pop
mov
jmp
add
push
jmp
mov
pushl
pop
popl
mov
push
mov
push
pop
jmp
addl
pop
sub
pop
not
dec
sub
or
neg
add
jmp
mov
jmp
sub
add
add
pop
push
push
mov
jmp
mov
or
jmp
push
jmp
mov
add
add
popl
pop
imul
push
jmp
push
mov
push
mov
push
addl
pop
push
mov
mov
push
mov
sub
pop
neg
and
jmp
pop
pushl
mov
add
push
mov
add
sub
xchg
pop
mov
jmp
neg
push
mov
jmp
pop
add
xchg
pop
jmp
add
mov
add
neg
jmp
push
mov
push
mov
jmp
xor
jmp
add
add
sub
mov
sub
jmp
mov
xor
pop
sub
push
mov
sub
jmp
mov
addl
mov
push
mov
add
push
jmp
push
mov
jmp
sub
jmp
shr
xor
push
mov
or
pop
push
mov
push
jmp
mov
mov
add
pop
add
jmp
mov
jmp
pop
mov
add
pushl
mov
add
add
jmp
mov
add
push
mov
add
jmp
pop
xor
mov
add
mov
add
push
push
pop
jmp
push
mov
jmp
push
pushl
pushl
pop
push
mov
jmp
push
jmp
push
pushl
pop
jmp
push
mov
dec
jmp
xor
jmp
push
jmp
and
not
xor
sub
pop
or
shl
and
add
sub
pop
jmp
pushl
mov
add
jmp
neg
xor
add
jmp
pop
xor
mov
pushl
pushl
pop
add
push
mov
jmp
push
mov
add
sub
xchg
pop
mov
sub
mov
mov
jmp
pop
add
pushl
mov
push
jmp
push
push
pop
jmp
push
jmp
mov
add
add
xchg
pop
push
push
mov
jmp
push
mov
push
jmp
add
pop
jmp
push
mov
add
add
jmp
xor
add
sub
jmp
push
mov
mov
jmp
xor
pop
push
mov
shl
not
or
add
jmp
mov
sub
mov
mov
sub
sub
mov
push
jmp
mov
jmp
add
mov
push
push
pop
push
mov
xor
add
pop
add
xchg
pop
push
jmp
add
add
pushl
jmp
add
add
inc
jmp
popl
push
mov
add
pop
pushl
mov
push
mov
push
mov
add
push
jmp
add
push
mov
add
add
sub
mov
add
sub
add
add
sub
jmp
pop
push
mov
mov
push
mov
add
sub
jmp
xor
add
xor
jmp
add
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
mov
jmp
inc
xor
xor
xor
jmp
mov
not
shr
sub
mov
xchg
not
jmp
push
jmp
neg
jmp
push
jmp
push
mov
jmp
jmp
not
inc
xchg
jmp
pushl
pop
jmp
add
xchg
pop
sub
add
add
mov
jmp
mov
push
mov
add
add
add
xchg
pop
push
mov
jmp
add
jmp
mov
pop
jmp
mov
mov
pop
not
sub
jmp
mov
push
push
popl
jmp
add
push
mov
jmp
push
mov
push
notl
pop
inc
jmp
xchg
jmp
shr
push
push
mov
jmp
add
jmp
mov
push
push
jmp
add
jmp
mov
shl
jmp
sub
jmp
mul
movzbw
push
jmp
push
jmp
xchg
mov
add
add
sub
mov
add
jmp
add
sub
jmp
add
jmp
mov
jmp
neg
dec
push
mov
add
pop
push
jmp
mov
push
mov
mov
add
jmp
pushl
pushl
mov
jmp
pop
jmp
pop
xor
pop
xor
shr
push
sub
pushl
pop
add
add
push
mov
xor
pop
jmp
push
mov
mov
pop
not
jmp
xchg
pop
add
add
xor
xor
xor
pop
push
jmp
sub
sub
jmp
xor
xor
mov
or
jne
push
mov
popl
jmp
pop
pop
jmp
xor
jmp
push
jmp
sub
mov
push
mov
shl
push
mov
neg
add
jmp
neg
not
shr
inc
add
add
pop
jmp
add
sub
jmp
mov
pop
jmp
or
jmp
mov
jmp
shl
jmp
popl
mov
sub
mov
sub
mov
push
jmp
neg
shr
jmp
xor
mov
add
add
push
mov
mov
or
inc
jmp
decl
pop
dec
push
push
mov
mov
jmp
pop
sub
xchg
mov
mov
push
jmp
push
mov
push
mov
jmp
mov
push
push
jmp
sub
add
jmp
mov
shr
not
jmp
add
xchg
pop
push
mov
jmp
pop
jmp
xor
jmp
xchg
pop
pop
jmp
push
mov
push
jmp
mov
sub
pop
sub
jmp
add
mov
add
jmp
mov
jmp
pop
pop
push
push
mov
push
mov
jmp
pop
and
shr
xor
jmp
pop
add
jmp
sub
pop
sub
sub
pop
mov
pushl
pop
add
jmp
xor
jmp
push
jmp
push
mov
push
push
pop
xor
mov
pushl
pop
add
push
mov
xor
pop
sub
pop
push
jmp
xchg
pop
popl
jmp
sub
add
push
mov
jmp
pop
add
pop
add
jmp
lods
xor
push
jmp
xor
sub
jmp
mov
jmp
mov
add
add
jmp
sub
add
push
mov
add
pop
sub
add
push
mov
push
push
pop
jmp
mov
mov
add
jmp
inc
or
add
or
jmp
mov
jmp
push
mov
jmp
push
jmp
push
mov
push
mov
sub
xor
pop
add
push
notl
pop
or
jmp
pop
add
popl
jmp
mov
sub
jmp
push
push
mov
mov
sub
jmp
mov
push
pushl
pop
jmp
inc
sub
mov
mov
shr
inc
xor
not
shl
xor
inc
xor
shr
jmp
mov
jmp
push
mov
mov
pop
mov
add
push
mov
jmp
push
push
push
mov
not
sub
mov
pop
jmp
pop
and
mov
push
jmp
pushl
pop
push
push
jmp
mov
addl
sub
subl
mov
sub
mov
mov
jmp
push
mov
jmp
push
mov
mov
pop
jmp
mov
jmp
add
xchg
pop
jmp
pop
add
add
xchg
pop
sub
jmp
xor
pop
mov
sub
mov
addl
pop
jmp
push
jmp
add
pop
push
mov
xor
sub
add
add
pushl
jmp
sub
jmp
sub
mov
push
push
jmp
pop
jmp
mov
pop
pop
sub
add
jmp
neg
neg
or
inc
sub
sub
pop
jmp
push
push
pop
add
add
push
mov
jmp
xor
jmp
mov
add
pop
xchg
pop
push
mov
add
push
mov
dec
shr
shr
jmp
pop
push
pushl
pop
popl
pop
mov
push
mov
add
push
push
jmp
mov
mov
not
sub
jmp
mov
add
add
jmp
add
push
mov
add
pop
xor
xor
xor
mov
imul
push
pushf
jmp
xor
jmp
add
sub
add
jmp
pop
push
mov
jmp
pop
jmp
push
pop
and
push
mov
xor
pop
jmp
mov
add
sub
xchg
pop
jmp
pop
shr
dec
jmp
add
pop
push
mov
push
mov
jmp
mov
add
jmp
add
sub
jmp
pop
add
push
push
push
mov
add
push
mov
and
pop
xor
push
pop
jmp
popl
jmp
push
mov
push
mov
add
jmp
and
pushl
jmp
pushl
jmp
pop
add
sub
add
push
mov
add
pop
push
mov
sub
pop
pushl
pop
push
mov
push
mov
jmp
xor
jmp
shr
jmp
mov
push
mov
mov
xor
pop
push
mov
sub
pop
push
mov
add
mov
add
shr
neg
jmp
add
jmp
push
mov
jmp
add
add
jmp
sub
sub
mov
jmp
add
jmp
add
pop
push
mov
push
push
push
jmp
mov
push
pop
dec
xor
push
mov
xor
pop
push
mov
push
mov
jmp
add
add
sub
jmp
xchg
pop
push
mov
add
pop
jmp
add
sub
push
mov
add
pop
pop
sub
xchg
pop
mov
mov
sub
mov
mov
jmp
xor
sub
pop
add
add
jmp
add
add
pop
push
mov
add
push
mov
sub
jmp
push
pop
pop
add
jmp
add
add
push
mov
not
not
add
sub
sub
pop
mov
push
mov
push
jmp
push
mov
add
sub
sub
pop
add
push
jmp
pop
add
xor
sub
add
add
pop
xchg
pop
xor
xor
jmp
mov
mov
jmp
xchg
pop
jmp
and
shl
shl
xor
sub
jmp
add
mov
add
sub
sub
push
mov
mov
sub
inc
jmp
shl
add
subl
add
addl
pop
jmp
xchg
pop
mov
push
mov
push
jmp
pushl
pop
popl
mov
push
mov
push
mov
add
and
pushl
jmp
xor
pop
and
add
push
mov
push
jmp
push
jmp
sub
mov
mov
dec
or
not
jmp
add
xchg
pop
popl
jmp
add
sub
mov
push
pop
push
mov
neg
shl
push
mov
xor
shl
sub
xor
pop
push
mov
push
mov
add
jmp
sub
add
push
mov
xor
jmp
pop
sub
mov
jmp
push
mov
add
jmp
sub
jmp
add
jmp
pop
push
mov
add
add
jmp
pushl
jmp
push
mov
shl
sub
xor
pop
and
xor
sub
add
add
jmp
mov
inc
sub
jmp
xor
mov
jmp
add
push
mov
pushl
mov
jmp
sub
pop
mov
add
xor
xor
xor
pop
mov
push
pushl
pop
add
add
jmp
mov
push
push
pushl
pop
jmp
push
push
pop
push
push
mov
add
jmp
sub
pop
jmp
pop
add
add
xchg
pop
sub
mov
push
mov
sub
mov
push
mov
jmp
movzbw
sub
mov
mov
add
jmp
mov
add
jmp
add
add
push
mov
add
pop
pushl
pop
jmp
sub
add
pop
xor
pop
jmp
push
mov
jmp
mov
push
jmp
jmp
xchg
jmp
push
mov
jmp
sub
pop
mov
pop
push
jmp
add
pop
push
mov
pushl
pop
jmp
pop
pushl
mov
push
mov
add
jmp
add
push
mov
dec
shr
shr
sub
push
mov
mov
dec
inc
dec
add
and
pop
push
mov
dec
and
jmp
lods
push
push
jmp
mov
mov
jmp
sub
jmp
sub
jmp
xor
jmp
add
push
mov
sub
pop
jmp
push
mov
add
push
mov
add
mov
jmp
push
mov
jmp
add
jmp
pop
popl
pop
popa
popf
ret
jmp
not
sub
and
sub
add
pop
push
pushl
mov
add
popl
mov
shll
pushf
jmp
push
mov
push
jmp
shl
push
mov
shr
dec
jmp
xor
add
jmp
shl
xor
jmp
add
xchg
pop
sub
sub
add
pushl
jmp
mov
push
mov
add
jmp
pushl
pop
popl
mov
or
je
pushl
push
push
mov
push
xorl
pop
xor
jmp
pop
add
jmp
push
mov
push
mov
push
mov
xor
pop
sub
pop
jmp
pop
add
mov
pop
xor
jmp
push
pop
mov
add
sub
pop
addl
jmp
push
mov
pop
mov
add
add
sub
jmp
sub
mov
jmp
pop
xor
pop
add
pop
xchg
jmp
push
mov
mov
xor
pushl
pop
add
or
jmp
add
sub
push
mov
add
sub
xchg
mov
mov
jmp
add
add
xor
xor
jmp
mov
add
add
sub
pushl
pop
jmp
mov
sub
jmp
or
jmp
mov
shll
pushf
jmp
add
push
jmp
pop
jmp
sub
mov
mov
push
mov
inc
xor
not
jmp
sub
mov
add
xor
xor
xor
pop
mov
push
mov
addl
pushl
pop
push
push
mov
addl
jmp
mov
add
and
mov
jmp
xor
jmp
add
pop
sub
sub
mov
sub
mov
push
jmp
push
mov
mov
add
add
push
jmp
push
jmp
pop
jmp
pop
push
jmp
add
xchg
pop
popl
pop
jmp
push
mov
xor
add
add
add
push
push
pop
sub
jmp
add
add
jmp
push
jmp
add
sub
push
jmp
pop
jmp
add
sub
sub
jmp
mov
inc
shr
jmp
pop
push
mov
sub
pop
dec
push
mov
mov
or
pop
sub
add
push
mov
mov
sub
pop
jmp
mov
jmp
dec
dec
xor
add
jmp
add
sub
mov
mov
add
mov
push
mov
add
add
jmp
add
jmp
push
pop
add
add
xchg
pop
push
mov
jmp
mov
pushl
pop
add
push
mov
jmp
add
pop
add
xor
xor
xor
jmp
mov
jmp
mov
mov
sub
jmp
add
add
mov
add
push
jmp
add
xor
pop
jmp
pop
add
push
mov
sub
sub
jmp
mov
mov
mov
push
jmp
mov
add
jmp
pushl
pop
sub
mov
mov
jmp
pop
push
mov
jmp
mov
sub
mov
push
mov
add
push
mov
jmp
add
push
mov
xor
jmp
add
xchg
pop
subl
add
jmp
add
xchg
pop
jmp
dec
push
jmp
push
mov
add
pop
add
jmp
add
mov
add
jmp
pushl
mov
push
mov
add
sub
xchg
pop
mov
jmp
add
xchg
pop
mov
pushl
pop
jmp
add
sub
sub
jmp
mov
push
pushl
jmp
sub
xor
jmp
pushl
pop
add
and
and
dec
jmp
mov
sub
mov
jmp
mov
push
push
jmp
add
push
mov
dec
shl
inc
push
mov
sub
jmp
mov
push
push
pop
shr
sub
xor
xor
mov
mov
push
mov
add
jmp
xor
jmp
pop
add
xchg
pop
push
jmp
sub
pop
push
mov
add
xor
dec
jmp
sub
pop
xor
mov
add
push
mov
pushl
pop
push
push
pop
add
jmp
addl
popl
addl
pop
jmp
xor
add
pop
mov
pop
sub
mov
push
jmp
mov
mov
jmp
push
subl
pop
jmp
push
mov
push
pushl
pop
push
push
mov
addl
pop
sub
jmp
add
push
push
mov
mov
push
mov
add
jmp
pop
add
sub
mov
mov
xor
sub
add
add
pop
pushl
pop
push
mov
add
add
xchg
pop
xchg
pop
idiv
movzbw
sub
mov
push
jmp
pushl
pop
jmp
add
add
pop
add
sub
mov
pushl
mov
add
popl
mov
jmp
xchg
pop
jmp
xor
mov
add
push
jmp
sub
xor
mov
add
shr
jmp
not
xor
add
jmp
xor
add
shr
add
jmp
xor
xor
jmp
push
mov
jmp
add
popl
jmp
shr
shl
xor
jmp
sub
xchg
pop
jmp
mov
add
push
mov
add
pop
xor
xor
xor
mov
jmp
push
mov
jmp
add
pop
add
mov
jmp
pop
sub
pop
xchg
pop
jmp
sub
push
pushl
pop
popl
pop
mov
pushl
pop
push
push
jmp
add
sub
mov
jmp
mov
add
pop
sub
mov
pushl
mov
add
popl
pop
jmp
xchg
push
notl
pop
jmp
pop
add
jmp
mov
add
popl
pop
xchg
mov
mov
pushl
pop
push
mov
sub
jmp
add
xchg
jmp
xor
pop
jmp
shl
add
add
jmp
push
pushl
pop
jmp
pop
mov
pop
shr
sub
mov
mov
add
pop
sub
mov
push
pushl
pop
jmp
shl
shl
sub
jmp
sub
mov
jmp
not
jmp
add
pop
add
jmp
mov
jmp
sub
sub
jmp
add
jmp
mov
mov
push
jmp
push
mov
jmp
mov
sub
mov
push
mov
push
mov
add
pop
pop
push
mov
push
mov
jmp
or
jmp
mov
jmp
pop
jmp
push
push
jmp
xor
pop
add
pushl
pop
push
push
pop
add
add
xchg
jmp
mov
push
mov
push
push
pop
jmp
add
pop
add
jmp
push
mov
push
mov
add
push
mov
push
pushl
pushl
pop
jmp
sub
jmp
mov
push
mov
xor
pop
inc
neg
shl
add
jmp
shl
jmp
shl
or
jmp
push
mov
add
add
xchg
jmp
pop
jmp
mov
pushl
jmp
mov
push
mov
jmp
sub
add
pop
pop
xor
xor
xor
jmp
push
mov
jmp
push
mov
mov
pop
push
mov
add
pop
jmp
pop
mov
mov
neg
sub
push
push
mov
push
mov
jmp
push
push
pop
push
mov
xor
add
mov
add
sub
mov
mov
push
jmp
not
jmp
movzbw
pushw
mov
jmp
mov
pop
jmp
add
sub
push
jmp
pushl
pop
push
mov
add
add
xchg
mov
sub
sub
push
mov
not
shr
xor
add
pop
push
mov
push
mov
or
xor
jmp
add
push
mov
sub
pop
jmp
add
add
sub
add
xor
jmp
pop
jmp
xchg
pop
jmp
xchg
jmp
sub
xor
pop
shr
xor
jmp
pop
add
push
mov
add
pop
push
mov
push
mov
mov
pop
push
jmp
mov
jmp
add
pop
sub
xor
xor
xor
jmp
add
push
mov
push
mov
jmp
mov
sub
mov
mov
add
push
mov
mov
push
mov
xor
pop
add
add
mov
jmp
inc
shr
sub
or
jmp
push
push
mov
mov
pop
sub
jmp
mov
addl
pop
add
add
xchg
mov
addl
add
push
push
pop
jmp
push
mov
jmp
xor
xor
pop
sub
jmp
mov
pushl
jmp
mov
push
jmp
sub
sub
add
pop
push
sub
pop
jmp
sub
xchg
pop
mov
push
mov
jmp
mov
mov
pop
jmp
mov
add
jmp
shr
jmp
pop
push
mov
sub
add
pop
push
mov
sub
mov
jmp
add
jmp
pushl
jmp
mov
push
mov
jmp
xor
push
mov
push
mov
mov
add
pop
jmp
inc
and
xor
mov
pop
add
mov
add
add
sub
pop
jmp
mov
sub
mov
jmp
not
xchg
pop
neg
shl
inc
sub
add
mov
jmp
neg
not
shr
not
sub
sub
jmp
add
sub
sub
pop
sub
sub
add
jmp
add
xor
xor
push
jmp
add
mov
add
mov
add
push
pushl
pop
push
mov
add
add
jmp
sub
pop
sub
sub
add
add
add
pop
sub
mov
mov
jmp
add
jmp
pop
add
sub
push
mov
jmp
push
mov
sub
sub
push
mov
or
neg
not
sub
add
pop
pop
jmp
sub
mov
push
pop
jmp
shr
jmp
shl
jmp
pop
jmp
push
mov
mov
jmp
mov
xor
or
sub
sub
jmp
mov
add
add
push
mov
jmp
push
mov
add
pop
jmp
add
pop
xchg
jmp
mov
jmp
add
jmp
push
mov
sub
pop
jmp
mov
or
pop
sub
mov
mov
xor
mov
add
push
jmp
pop
push
push
mov
mov
add
sub
mov
mov
jmp
mov
sub
jmp
jmp
add
xor
xor
xor
mov
push
push
mov
push
mov
mov
add
jmp
add
push
jmp
pop
add
push
mov
add
pop
xchg
pop
and
mov
push
mov
mov
push
jmp
jmp
sub
add
jmp
add
jmp
add
jmp
add
xchg
mov
mov
mov
add
jmp
mov
add
sub
push
push
pop
neg
sub
add
pop
add
push
mov
sub
jmp
xor
mov
jmp
mov
push
jmp
add
add
xchg
pop
pushl
pop
add
add
jmp
mov
push
mov
dec
jmp
sub
add
pop
sub
sub
jmp
push
mov
xor
jmp
inc
sub
inc
sub
add
mov
jmp
push
jmp
inc
and
xor
sub
jmp
push
mov
push
push
pop
sub
pop
not
inc
jmp
sub
add
add
jmp
mov
pop
add
or
neg
shr
add
add
mov
add
push
jmp
push
mov
add
add
xchg
pop
jmp
xor
mov
jmp
sub
push
mov
push
push
mov
add
push
sub
mov
add
jmp
shl
shl
push
mov
jmp
pop
sub
xor
xor
jmp
mov
add
pop
jmp
pushl
mov
add
push
mov
push
pop
push
jmp
add
jmp
mov
add
jmp
push
mov
jmp
sub
push
mov
sub
add
jmp
mov
mov
sub
mov
mov
jmp
xor
jmp
add
jmp
mov
add
add
jmp
shl
add
addw
sub
subw
pop
jmp
pushl
jmp
pop
add
add
push
mov
pushl
pushl
jmp
mov
jmp
or
shr
sub
xor
jmp
add
pushl
mov
push
jmp
shr
sub
jmp
push
mov
mov
sub
pop
dec
push
jmp
add
add
pop
jmp
mov
push
pop
sub
mov
mov
add
sub
jmp
pop
jmp
dec
dec
sub
sub
pop
jmp
jmp
xchg
pop
and
pushl
pop
add
jmp
pop
xchg
neg
jmp
push
mov
addl
pop
sub
mov
mov
add
pop
jmp
mov
jmp
add
sub
sub
add
add
jmp
pop
add
mov
jmp
pop
jmp
add
or
je
pushl
pushl
mov
jmp
pop
jmp
mov
mov
mov
pop
sub
push
mov
sub
mov
add
or
jmp
subl
push
jmp
pop
pop
pop
pop
add
add
sub
mov
add
sub
add
add
push
jmp
sub
jmp
mov
pushw
jmp
mov
push
mov
mov
mov
jmp
xor
xor
xor
mov
sub
mov
mov
add
jmp
mov
jmp
shr
xchg
jmp
pop
push
mov
jmp
push
mov
jmp
add
pop
sub
sub
sub
mov
mov
jmp
shr
shl
push
mov
inc
and
jmp
mov
mov
mov
add
pop
xor
pop
push
jmp
mov
add
add
xchg
pop
jmp
add
pop
xor
push
mov
sub
jmp
mov
xorl
jmp
pop
jmp
jmp
mov
xor
pop
push
pop
pop
sub
shr
push
mov
shr
push
push
pop
add
shr
sub
xor
pop
xor
mov
jmp
push
mov
push
mov
add
add
jmp
mov
add
jmp
xor
jmp
add
jmp
pop
jmp
add
add
pushl
pop
add
xchg
pop
jmp
neg
and
sub
jmp
mov
push
pop
xor
mov
jmp
jmp
xchg
pop
push
mov
add
jmp
sub
mov
mov
mov
jmp
push
jmp
pushl
pop
add
push
mov
neg
shl
push
mov
jmp
mov
pushl
pop
sub
mov
mov
add
push
mov
sub
jmp
push
mov
jmp
sub
sub
jmp
push
jmp
push
jmp
mov
and
xor
and
neg
and
add
jmp
sub
jmp
mov
push
mov
jmp
not
jmp
xchg
push
pushl
mov
push
mov
add
add
xchg
mov
popl
mov
push
mov
jmp
mov
push
jmp
xor
xor
xor
pop
pushl
pop
add
push
sub
mov
push
pop
jmp
mov
mov
sub
sub
add
add
sub
add
push
mov
sub
jmp
xor
mov
add
push
pop
mov
add
sub
mov
mov
xor
sub
mov
push
pop
pop
not
xchg
and
shl
jmp
xor
sub
add
add
pop
sub
mov
push
push
pop
push
mov
shr
sub
not
push
mov
sub
pop
jmp
push
jmp
shl
add
sub
jmp
mov
mov
jmp
pushw
jmp
add
sub
xchg
mov
jmp
add
pop
add
xor
xor
xor
pop
add
xor
jmp
mov
add
add
xchg
mov
push
mov
push
mov
jmp
sub
jmp
xor
pop
push
jmp
mov
add
popl
mov
push
jmp
pop
shr
or
je
push
mov
sub
mov
pop
sub
mov
push
pop
push
push
jmp
push
mov
mov
sub
jmp
pop
sub
jmp
xor
pop
and
pop
or
sub
push
mov
add
jmp
add
pop
jmp
push
mov
jmp
pop
add
push
sub
mov
mov
push
jmp
sub
jmp
pop
jmp
pop
pop
xor
pop
push
mov
push
mov
jmp
sub
pop
sub
jmp
add
sub
xor
not
push
push
push
jmp
sub
add
pop
jmp
mov
mov
mov
sub
sub
jmp
pop
add
mov
pop
jmp
xor
mov
mov
jmp
push
jmp
sub
jmp
shr
xor
add
jmp
add
xchg
mov
push
push
mov
mov
push
sub
mov
pop
jmp
add
pop
push
mov
add
add
jmp
mov
add
add
add
xchg
jmp
push
jmp
pop
push
jmp
push
jmp
mov
add
sub
add
mov
pop
jmp
add
jmp
push
pushl
pop
popl
mov
push
jmp
mov
push
pop
add
add
xor
xor
xor
pop
push
mov
push
mov
push
jmp
xchg
pop
push
mov
inc
push
jmp
push
jmp
shr
push
mov
add
pop
add
jmp
pushl
jmp
sub
sub
sub
add
pushl
pop
add
jmp
add
push
jmp
pop
sub
push
mov
sub
jmp
add
sub
push
jmp
mov
add
add
xchg
mov
jmp
add
jmp
mov
mov
jmp
mov
jmp
pop
add
xor
jmp
add
push
jmp
xchg
sub
add
jmp
pop
jmp
jmp
mov
add
mov
jmp
push
mov
xor
pop
sub
mov
mov
neg
jmp
mov
push
mov
sub
neg
xor
sub
neg
add
xor
jmp
push
push
pop
add
add
xchg
mov
add
xor
jmp
mov
push
mov
push
push
mov
jmp
mov
mov
add
jmp
push
mov
add
pop
jmp
add
jmp
and
pushl
pushl
pop
add
push
mov
add
add
jmp
mov
pop
jmp
pushl
pop
add
xor
mov
mov
jmp
xor
xor
jmp
push
mov
add
pop
add
xchg
mov
shr
push
push
pop
push
mov
push
mov
add
pop
sub
xchg
pop
mov
push
push
jmp
shr
push
mov
add
or
jmp
add
pop
xchg
pop
popl
mov
jmp
shr
xor
jmp
popl
mov
mov
sub
mov
mov
add
sub
xchg
pop
mov
mov
push
push
mov
mov
pop
sub
sub
jmp
pushl
jmp
add
jmp
mov
push
mov
add
xor
mov
jmp
add
pushl
pop
push
mov
jmp
mov
push
mov
mov
add
pop
sub
add
add
pop
xor
xor
xor
mov
xor
pushf
jmp
add
pop
add
push
mov
not
xor
add
pop
pushl
pop
jmp
add
sub
jmp
add
sub
push
pushl
jmp
add
sub
xchg
jmp
sub
pop
jmp
xor
push
mov
add
jmp
push
mov
mov
mov
add
xor
add
jmp
sub
pop
sub
add
push
mov
add
pop
jmp
pop
push
jmp
add
add
jmp
xchg
pop
mov
push
mov
push
mov
add
mov
add
pushl
jmp
push
mov
xor
sub
add
pop
add
sub
push
jmp
and
pop
xor
shl
sub
not
push
jmp
mov
pop
push
mov
sub
pop
add
add
pop
sub
sub
push
mov
add
xor
add
pop
sub
mov
push
pop
add
push
mov
or
and
inc
not
shr
sub
sub
mov
add
xchg
pop
mov
push
mov
mov
pop
sub
mov
jmp
push
push
mov
add
jmp
pop
add
sub
push
pushl
mov
add
popl
pop
jmp
xor
jmp
sub
mov
mov
inc
push
mov
push
mov
add
add
push
mov
and
jmp
mov
jmp
mov
or
sub
mov
mov
neg
jmp
mov
push
mov
add
push
mov
not
xor
jmp
pushl
pop
popl
pop
jmp
mov
push
pop
push
push
push
mov
mov
mov
pop
jmp
add
pop
push
mov
pushl
pop
popl
jmp
add
jmp
xor
jmp
push
mov
mov
mov
add
pop
mov
add
mov
add
pushl
pop
add
mov
mov
push
jmp
push
jmp
shl
shl
push
mov
add
and
add
jmp
push
subl
popl
jmp
pop
add
push
mov
mov
inc
xor
add
sub
sub
sub
jmp
xor
pop
mov
push
push
pop
sub
mov
mov
add
pushl
mov
push
mov
push
mov
xor
jmp
mov
pushl
jmp
xor
xor
jmp
mov
add
mov
pop
add
sub
push
mov
xor
sub
pop
pop
sub
pushw
mov
push
mov
push
mov
add
sub
add
jmp
xor
mov
pop
and
shl
jmp
sub
jmp
add
mov
pop
not
add
jmp
add
add
push
push
mov
mov
pop
sub
sub
add
pop
push
pushl
jmp
pop
push
pushl
pop
popl
jmp
jmp
addl
mov
jmp
xor
jmp
sub
pop
jmp
add
sub
pushl
pop
push
mov
jmp
sub
jmp
sub
jmp
add
jmp
mov
jmp
pushw
mov
mov
xor
jmp
pop
mov
mov
add
mov
jmp
imul
movzbw
push
push
pushl
mov
add
add
push
mov
add
jmp
push
mov
inc
sub
xor
mov
pop
jmp
xor
sub
mov
push
mov
mov
xor
jmp
mov
add
pop
sub
mov
pop
pop
sub
add
add
mov
jmp
add
xchg
pop
pushl
mov
add
jmp
dec
add
jmp
xor
jmp
add
mov
add
jmp
mov
sub
mov
push
push
mov
mov
jmp
mov
pop
not
push
mov
not
or
shr
neg
push
mov
xor
pop
sub
pop
xor
add
pop
jmp
pop
push
jmp
add
jmp
mov
add
pop
add
xchg
jmp
pop
add
xchg
jmp
xchg
pop
push
push
mov
jmp
push
mov
push
pop
push
mov
mov
jmp
mov
xor
jmp
add
jmp
pop
mov
xorl
pop
xor
mov
push
mov
push
jmp
push
pop
push
mov
add
sub
jmp
pushl
mov
add
jmp
mov
pop
inc
inc
or
shr
push
mov
jmp
add
pop
push
mov
push
mov
mov
sub
sub
jmp
mov
sub
mov
mov
not
push
mov
dec
push
mov
xor
pop
add
xor
pop
jmp
shr
sub
push
negw
pop
push
mov
jmp
and
add
jmp
mov
pop
mov
pop
jmp
sub
pop
mov
jmp
add
jmp
mov
mov
push
mov
add
pop
jmp
pop
jmp
sub
mov
pop
push
mov
and
mov
push
mov
add
add
jmp
push
mov
and
xchg
not
xchg
xor
add
jmp
pushl
pushl
mov
jmp
pop
add
push
jmp
pop
add
pushl
pop
add
jmp
xor
jmp
shl
sub
xor
push
xorl
pop
xor
pop
sub
add
jmp
mov
mov
mov
pop
xor
pop
jmp
pop
add
sub
mov
pushl
mov
add
popl
mov
rorb
pushf
jmp
add
pushl
jmp
or
pop
push
push
mov
mov
sub
mov
mov
push
mov
mov
pop
pop
jmp
xor
xchg
jmp
add
xchg
pop
add
xor
pushl
pop
add
xor
popw
jmp
xor
xor
pop
mov
jmp
mov
add
jmp
shr
push
mov
add
xor
pop
mov
pushl
jmp
neg
dec
push
mov
and
jmp
add
sub
sub
mov
pushl
pop
popl
pop
mov
jmp
and
jmp
mov
jmp
mov
push
mov
push
pushl
pop
jmp
sub
pop
add
jmp
mov
mov
sub
push
mov
mov
jmp
push
pushl
mov
add
popl
jmp
mov
jmp
add
jmp
pop
jmp
inc
or
jmp
add
push
mov
push
mov
shl
sub
jmp
rorl
pushf
jmp
xor
pop
add
add
jmp
push
mov
push
mov
add
jmp
push
mov
push
mov
jmp
xor
pop
jmp
addl
mov
add
push
mov
add
pushl
pop
add
sub
mov
mov
push
mov
add
sub
xchg
pop
jmp
add
pushw
jmp
xchg
pop
jmp
mov
or
mov
push
jmp
mov
mov
jmp
pushl
jmp
pop
jmp
mov
mov
sub
inc
inc
add
add
sub
add
add
sub
mov
mov
sub
mov
jmp
add
sub
mov
add
pop
add
xchg
jmp
push
mov
jmp
xor
jmp
mov
pop
pop
dec
not
xor
add
jmp
pop
push
mov
push
push
pop
jmp
sub
xchg
mov
jmp
add
jmp
push
jmp
push
push
jmp
add
pushw
mov
jmp
pop
jmp
xor
add
jmp
push
sub
pop
add
push
mov
mov
shr
xor
add
mov
add
sub
sub
add
push
jmp
push
mov
add
pop
mov
pop
add
pop
push
pushl
pop
popl
mov
div
pushw
mov
push
pushf
jmp
push
jmp
not
jmp
add
sub
jmp
add
jmp
add
jmp
push
push
jmp
push
mov
push
pop
sub
pop
sub
add
pushl
pop
add
push
jmp
jmp
xor
xor
jmp
pushl
popf
pop
adc
pushf
jmp
mov
jmp
push
mov
jmp
mov
jmp
push
mov
notl
pop
shl
add
xor
shl
add
push
jmp
shl
shl
jmp
push
mov
or
jmp
pop
mov
mov
add
pushl
pop
add
jmp
not
xchg
jmp
mov
jmp
lods
jmp
push
mov
sub
pop
jmp
mov
mov
push
mov
add
pop
add
xchg
pop
push
jmp
xchg
jmp
shl
jmp
or
sub
add
pop
xor
sub
jmp
mov
jmp
sub
sub
add
add
push
jmp
dec
push
mov
mov
sub
pop
push
mov
jmp
mov
push
mov
mov
push
mov
push
mov
add
pop
add
sub
mov
add
push
mov
jmp
sub
add
add
add
pop
jmp
add
pushf
jmp
sub
push
mov
add
xor
not
add
shl
add
add
pop
push
pop
pop
sub
sub
push
mov
jmp
xor
push
push
pop
jmp
add
add
sub
jmp
mov
add
jmp
pop
xchg
pop
bts
pushf
jmp
mov
sub
mov
push
pop
mov
jmp
mov
mov
push
mov
push
mov
sub
jmp
mov
jmp
add
add
pop
pop
mov
add
add
push
mov
add
add
jmp
mov
sub
mov
add
mov
add
push
mov
mov
pop
mov
jmp
push
mov
xor
mov
add
sub
mov
jmp
pushl
jmp
sub
pushl
mov
jmp
pop
popl
mov
mov
jmp
xchg
pop
xchg
pop
jmp
push
mov
pushl
mov
push
mov
push
mov
shl
add
add
pop
add
xchg
pop
push
mov
jmp
add
xor
sub
mov
pop
inc
add
sub
pop
jmp
mov
add
jmp
popl
jmp
mov
jmp
sub
jmp
mov
add
add
and
pop
jmp
push
jmp
push
push
mov
mov
mov
add
add
pop
sub
mov
pushl
pop
popl
pop
bt
pushf
jmp
mov
or
shl
sub
mov
push
jmp
push
mov
mov
pop
jmp
sub
sub
add
pop
add
add
add
mov
jmp
pop
mov
pushl
pop
push
mov
mov
add
add
xor
xor
xor
mov
pop
jmp
addl
pushl
pop
push
jmp
pushl
mov
jmp
push
mov
add
pop
jmp
mov
mov
pop
jmp
add
pop
xor
pop
and
push
mov
shl
not
jmp
add
jmp
add
jmp
push
jmp
add
push
mov
jmp
pop
jmp
mov
push
mov
push
push
popl
addl
pop
jmp
push
mov
shr
and
push
notl
pop
shl
and
sub
add
pop
push
push
jmp
and
xor
add
pop
mov
pop
not
add
jmp
sub
mov
mov
shr
jmp
pushl
mov
push
mov
add
add
xchg
jmp
push
mov
add
pop
sub
push
pushl
pop
popl
jmp
mov
push
jmp
add
pop
neg
xor
add
add
sub
pop
jmp
mov
add
mov
push
jmp
pop
mov
jmp
add
pop
push
mov
add
mov
add
xchg
pop
add
push
jmp
mov
dec
shr
add
sub
pop
mov
add
jmp
mov
add
push
mov
mov
add
mov
add
xchg
jmp
mov
shl
sub
shl
add
dec
xchg
not
jmp
mov
inc
add
inc
xor
sub
pop
jmp
push
mov
push
mov
mov
add
pushl
pop
add
push
push
mov
and
push
jmp
push
jmp
sub
xor
jmp
push
pushf
jmp
push
mov
add
add
xchg
pop
jmp
not
shr
sub
inc
xor
add
pop
dec
push
jmp
mov
xor
jmp
mov
push
jmp
add
add
pop
add
xchg
mov
add
mov
add
add
jmp
mov
sub
and
add
or
pop
shl
jmp
mov
mov
push
pushf
jmp
pop
sub
jmp
pop
popl
mov
jmp
add
and
jmp
mov
xor
pop
and
jmp
pushl
jmp
shl
and
add
push
mov
push
push
mov
jmp
sub
jmp
mov
pop
add
mov
add
push
jmp
mov
add
xor
xor
pushl
mov
jmp
mov
dec
or
add
jmp
pop
inc
xor
and
mov
jmp
pop
popl
jmp
sub
sub
sub
jmp
xor
sub
add
jmp
add
add
sub
push
jmp
sub
sub
jmp
xor
pop
push
mov
jmp
mov
sub
sub
mov
add
mov
mov
add
push
push
mov
push
jmp
sub
pop
sub
add
pop
sub
pop
shr
dec
shr
xor
add
sub
sub
pop
sub
mov
sub
jmp
mov
push
mov
sub
mov
pop
sub
pop
sub
push
jmp
mov
push
mov
mov
and
or
dec
jmp
add
jmp
shr
add
xchg
not
push
push
pop
pop
xor
xor
xor
xor
jmp
xchg
mov
mov
push
push
mov
mov
xor
pop
mov
jmp
lods
xor
push
mov
xor
xor
xor
dec
xor
xor
jmp
push
jmp
add
push
push
pop
add
push
mov
sub
pop
push
mov
jmp
pop
popl
mov
rep
add
push
mov
jmp
pushl
pop
add
dec
sub
sub
pop
add
push
mov
jmp
pop
add
jmp
pop
push
mov
push
push
push
mov
mov
jmp
mov
jmp
sub
pop
push
push
mov
jmp
not
jmp
xor
movzbl
push
mov
jmp
mov
pop
push
mov
mov
add
jmp
push
push
popl
jmp
sub
mov
sub
jmp
and
pushl
pop
add
shr
xor
sub
jmp
neg
dec
or
jmp
pop
push
push
mov
mov
pop
add
jmp
pushw
jmp
sub
jmp
mov
add
add
jmp
lods
jmp
pop
jmp
add
add
sub
jmp
pop
sub
push
mov
push
mov
mov
add
mov
add
mov
jmp
push
push
mov
add
xor
push
mov
add
jmp
mov
jmp
push
jmp
pushl
jmp
pushl
pop
push
jmp
pop
jmp
mov
pop
jmp
mov
add
pop
sub
mov
pop
addl
add
jmp
mov
add
pop
addl
jmp
sub
mov
push
mov
push
jmp
mov
mov
and
pop
shr
xor
jmp
mov
add
jmp
pop
push
jmp
pop
jmp
mov
shlw
pushf
jmp
add
pop
jmp
sub
add
add
mov
jmp
push
push
push
pop
push
jmp
mov
push
mov
jmp
pop
jmp
mov
jmp
and
push
mov
xor
mov
add
xor
pop
push
mov
push
mov
jmp
mov
push
jmp
push
mov
jmp
push
push
jmp
pushl
popf
pop
sbb
pushf
jmp
xor
xor
xor
mov
jmp
add
sub
mov
jmp
pop
neg
sub
mov
jmp
mov
mov
add
mov
add
jmp
pop
push
push
pop
push
jmp
not
inc
shr
jmp
mov
jmp
add
xchg
pop
jmp
add
pushl
jmp
pop
push
mov
pushl
jmp
sub
push
mov
jmp
add
add
sub
sub
mov
jmp
push
jmp
jmp
shr
sub
jmp
add
jmp
mov
add
jmp
push
pop
push
jmp
push
mov
push
mov
add
mov
mov
add
add
push
mov
xor
pop
push
push
mov
mov
pop
add
jmp
push
mov
jmp
subb
jmp
push
jmp
sub
mov
pop
sub
pop
push
push
pop
sub
sub
pop
push
mov
sub
neg
sub
mov
mov
xor
pop
push
mov
sub
add
add
sub
add
add
pop
jmp
push
mov
sub
mov
mov
push
mov
inc
jmp
pop
push
push
mov
mov
sub
pop
jmp
push
jmp
addl
popl
push
jmp
pushl
mov
add
jmp
push
jmp
push
mov
add
add
xchg
pop
add
mov
add
jmp
not
xor
mov
pop
sub
mov
add
mov
add
and
jmp
pop
sub
add
push
jmp
push
mov
mov
pop
sub
add
and
pop
not
jmp
pop
xchg
push
incl
jmp
push
mov
jmp
add
add
sub
push
push
mov
mov
pop
jmp
neg
add
sub
pop
add
add
sub
pop
sub
mov
push
pop
add
mov
add
xor
xor
xor
mov
sub
pushf
jmp
sub
xor
sub
mov
pop
push
jmp
pop
sub
pop
xchg
pop
mov
push
mov
jmp
xchg
pop
sub
mov
mov
add
jmp
mov
pop
neg
or
shl
shl
sub
xor
jmp
push
mov
sub
mov
push
jmp
or
jmp
add
sub
xchg
pop
mov
push
pushl
pop
add
push
mov
add
sub
xchg
pop
mov
jmp
push
jmp
pop
xchg
pop
jmp
shl
push
mov
sub
xor
pop
jmp
add
xchg
pop
jmp
push
jmp
push
pop
jmp
xor
shr
sub
xor
sub
pop
and
jmp
pop
dec
shl
jmp
add
sub
jmp
mov
jmp
pushl
pop
add
push
mov
mov
add
add
sub
pop
push
jmp
mov
push
mov
mov
jmp
mov
add
push
mov
sub
sub
pop
sub
add
mov
push
jmp
xor
sub
jmp
mov
mov
sub
jmp
mov
mov
sub
mov
add
dec
sub
push
mov
shr
add
jmp
addl
pop
add
push
mov
add
jmp
xor
jmp
sub
jmp
add
push
mov
add
add
sub
pop
push
mov
add
pop
sub
mov
jmp
mov
add
pop
push
jmp
mov
add
add
jmp
mov
add
xor
not
shl
or
jmp
pop
add
pop
push
mov
push
push
push
mov
jmp
xor
xor
jmp
pop
jmp
xchg
pop
jmp
mov
mov
mov
push
jmp
add
pop
add
sub
jmp
add
add
xchg
pop
and
pushf
jmp
xor
shr
shr
push
push
mov
xor
add
add
sub
add
mov
pop
jmp
push
pushf
jmp
mov
jmp
and
pushl
pop
jmp
xchg
mov
mov
pushl
pop
push
mov
push
pop
add
add
push
jmp
push
mov
mov
sub
pop
add
add
add
sub
jmp
push
mov
mov
pop
not
and
shl
sub
sub
jmp
add
pop
push
mov
add
dec
push
mov
add
add
sub
pop
jmp
mov
add
sub
jmp
add
xchg
pop
mov
mov
jmp
add
jmp
not
push
mov
and
pop
xor
sub
add
jmp
popl
push
mov
addl
add
push
mov
subl
addl
sub
subl
push
jmp
xor
xor
mov
push
push
mov
mov
add
mov
jmp
xor
xor
inc
sub
jmp
pop
shl
xor
add
pop
jmp
add
pushl
pop
push
push
mov
jmp
xor
neg
xchg
jmp
add
push
mov
neg
jmp
push
pop
jmp
add
sub
and
mov
push
mov
add
add
xchg
mov
shr
xor
xor
xor
xor
push
mov
xor
jmp
mov
add
add
push
jmp
sub
mov
add
sub
add
add
add
add
mov
add
xor
xor
xor
jmp
push
jmp
add
inc
sub
add
jmp
mov
jmp
mov
mov
push
mov
add
push
mov
jmp
shl
neg
sub
push
mov
xor
pop
jmp
neg
jmp
pushl
pushl
mov
add
add
push
mov
push
push
mov
jmp
push
pop
add
add
sub
mov
jmp
mov
add
xor
xor
jmp
dec
sub
push
mov
xor
pop
or
pop
xor
dec
add
add
mov
pop
sub
pushl
pop
push
mov
jmp
pushl
pushl
mov
add
jmp
mov
add
pop
xchg
jmp
inc
add
mov
pop
xor
mov
jmp
pop
push
push
mov
mov
jmp
popl
pop
add
jmp
add
add
pop
pop
push
mov
push
mov
mov
jmp
add
mov
add
add
jmp
pop
movzbw
push
mov
push
pop
push
jmp
add
pop
xchg
pop
push
jmp
add
jmp
push
mov
mov
add
pop
shr
add
add
jmp
or
jmp
pop
mov
pushl
pop
sub
mov
push
jmp
add
push
mov
add
push
mov
jmp
pop
add
jmp
sub
sub
pop
xor
add
pop
add
xchg
mov
jmp
or
xor
jmp
pop
popl
mov
mov
push
mov
push
jmp
pop
add
popl
mov
push
push
mov
add
add
sub
jmp
add
pop
jmp
pushl
pop
push
jmp
shl
add
and
sub
jmp
pop
add
add
jmp
add
sub
mov
push
jmp
xor
add
pop
jmp
pop
sub
jmp
mov
mov
neg
push
notl
pop
push
mov
xor
jmp
mov
sub
mov
mov
mov
pop
sub
jmp
addl
add
subl
subl
pop
jmp
mov
push
jmp
shrl
pushf
jmp
mov
mov
add
sub
push
sub
jmp
push
jmp
xor
jmp
add
shl
sub
add
mov
add
add
xchg
pop
push
mov
sub
push
mov
sub
pop
add
add
mov
jmp
push
push
jmp
add
xor
xor
xor
mov
mov
xorl
jmp
pop
add
jmp
popl
addl
mov
add
push
push
jmp
mov
push
mov
or
xor
mov
jmp
or
jne
push
mov
jmp
push
sub
mov
mov
jmp
pop
xor
xor
xor
pop
xor
xor
xor
mov
mov
push
pushf
jmp
shr
sub
and
xor
shr
jmp
pop
xchg
mov
shl
push
mov
jmp
push
mov
sub
jmp
mov
pop
or
jmp
push
mov
jmp
add
sub
sub
add
mov
add
inc
add
add
jmp
pop
push
jmp
pushl
pop
push
mov
jmp
pop
add
jmp
mov
push
mov
jmp
mov
add
and
pushl
mov
add
push
mov
add
add
xchg
jmp
mov
jmp
sub
mov
push
mov
mov
push
jmp
add
and
mov
jmp
add
xchg
mov
jmp
push
jmp
dec
jmp
pushl
pop
add
push
mov
add
sub
sub
jmp
mov
jmp
push
push
jmp
add
sub
add
jmp
shl
sub
push
xorl
pop
xor
jmp
pop
push
mov
jmp
pop
shr
jmp
push
push
mov
jmp
mov
add
mov
add
push
mov
sub
pop
jmp
mov
add
xor
sub
add
jmp
pushl
pop
push
mov
push
pop
jmp
neg
inc
xor
jmp
mov
sub
mov
push
mov
add
sub
mov
jmp
mov
jmp
pop
mov
push
pushl
pop
jmp
mov
sub
jmp
mov
not
sub
jmp
pushl
mov
push
mov
add
jmp
push
jmp
add
pop
jmp
xor
jmp
pop
jmp
mov
push
jmp
xor
sub
mov
jmp
add
add
sub
push
mov
sub
dec
jmp
add
pop
add
xchg
pop
jmp
and
xor
shr
xor
add
mov
push
mov
add
jmp
pop
push
mov
push
jmp
push
jmp
mov
jmp
shl
add
jmp
push
jmp
sub
pushl
pop
add
push
jmp
xor
not
xor
jmp
neg
sub
sub
pop
jmp
mov
add
mov
add
jmp
xchg
jmp
xor
jmp
push
mov
add
sub
mov
add
push
mov
jmp
sub
mov
pushl
jmp
add
sub
mov
mov
push
push
push
jmp
mov
add
add
xchg
pop
mov
add
jmp
add
sub
push
mov
sub
sub
push
mov
add
pop
pop
push
mov
push
mov
mov
xor
pop
neg
jmp
sub
mov
push
push
mov
jmp
xor
xor
not
xchg
xchg
xor
push
pop
pop
jmp
pushl
jmp
mov
mov
pop
pop
push
push
jmp
mov
add
mov
push
mov
push
pop
add
push
jmp
xor
xor
mov
mov
jmp
add
jmp
sub
xchg
pop
mov
pushl
pushl
jmp
push
pop
add
add
push
pushl
pop
jmp
add
sub
mov
mov
add
sub
push
mov
xor
sub
pop
jmp
mov
add
xor
sub
dec
sub
add
sub
sub
pop
xor
pushl
pop
add
jmp
xchg
pop
jmp
add
xchg
mov
cmp
pushf
jmp
xchg
pop
jmp
pop
pushl
pop
add
jmp
push
mov
mov
pop
jmp
pop
add
sub
sub
jmp
add
or
mov
push
jmp
mov
jmp
pushl
pop
jmp
xor
xor
xor
mov
cmp
pushf
jmp
add
add
add
jmp
inc
jmp
pop
jmp
mov
add
jmp
mov
mov
pushl
pop
add
sub
shr
push
mov
add
jmp
pop
sub
sub
add
add
mov
add
push
push
mov
add
jmp
mov
push
pushf
jmp
mov
jmp
pop
add
mov
mov
jmp
xor
pop
jmp
add
and
add
mov
jmp
push
mov
jmp
mov
jmp
pop
shr
jmp
pop
xchg
pop
mov
addl
mov
jmp
sub
jmp
sub
add
jmp
push
mov
or
pop
jmp
xchg
pop
mul
push
mov
push
pushl
pop
jmp
push
mov
add
xor
mov
jmp
sub
mov
mov
mov
pop
shr
push
mov
jmp
push
mov
sub
mov
push
mov
add
pop
jmp
sub
mov
addl
pop
push
mov
push
pop
jmp
mov
jmp
push
jmp
push
push
pop
add
sub
xchg
mov
jmp
addl
mov
jmp
xchg
jmp
push
mov
sub
jmp
pop
add
xor
add
add
sub
pop
push
mov
jmp
mov
push
mov
push
mov
inc
sub
push
mov
xor
sub
add
pop
push
mov
jmp
sub
jmp
add
add
jmp
mov
mov
pop
jmp
mov
push
mov
push
mov
jmp
sub
shr
add
add
jmp
mov
sub
pop
jmp
addl
pop
jmp
mov
mov
pop
push
mov
push
mov
sub
jmp
mov
add
mov
add
sub
mov
pushl
jmp
pop
xor
mov
jmp
push
mov
shr
add
add
sub
sub
jmp
add
popl
jmp
sub
jmp
mov
sub
mov
add
xchg
pop
mov
push
pop
push
mov
add
pop
sub
mov
mov
add
pop
push
pushl
pushl
mov
add
push
push
pop
jmp
xor
xor
mov
pushl
mov
add
push
mov
push
mov
add
jmp
pop
pop
mov
add
add
xor
xor
xor
mov
push
mov
push
mov
add
jmp
pushl
pop
push
mov
push
mov
push
jmp
mov
and
pop
jmp
mov
mov
jmp
sub
jmp
add
pop
mov
jmp
mov
jmp
sub
jmp
shr
jmp
mov
add
jmp
pop
neg
xor
xchg
not
xchg
inc
xor
jmp
popl
mov
jmp
push
mov
add
add
xchg
pop
shr
sub
mov
mov
jmp
sub
add
sub
mov
jmp
sub
sub
add
add
sub
jmp
xor
jmp
lods
push
push
mov
shr
push
mov
add
pop
mov
jmp
sub
jmp
mov
xor
pop
mov
jmp
mov
sub
mov
mov
jmp
pop
add
subl
push
mov
jmp
push
mov
mov
add
add
xchg
pop
add
jmp
pop
jmp
push
mov
add
mov
push
jmp
mov
add
sub
xchg
pop
mov
jmp
push
mov
add
pushl
pop
add
sub
mov
push
jmp
sub
xchg
jmp
pushl
jmp
mov
add
jmp
xchg
pop
not
push
push
pop
pop
xchg
xor
xor
xor
push
mov
mov
push
mov
mov
push
negl
pop
sub
xor
add
pop
jmp
mov
push
jmp
mov
push
mov
jmp
push
jmp
pop
and
push
mov
jmp
mov
add
jmp
pop
push
mov
add
pop
jmp
push
mov
dec
shr
xor
jmp
pushl
jmp
jmp
add
pop
popl
push
mov
addl
jmp
sub
pop
mov
add
push
mov
sub
jmp
sub
sub
pushl
pop
add
mov
jmp
and
add
jmp
add
pushl
pop
push
mov
add
sub
push
pushl
jmp
mov
mov
jmp
mov
div
movzbw
push
push
pop
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
jmp
push
pop
jmp
push
mov
or
pop
push
mov
xor
pop
jmp
push
decb
pop
add
xor
sub
sub
mov
add
sub
push
jmp
add
xchg
pop
jmp
mov
push
mov
add
push
mov
push
mov
mov
pop
jmp
xor
jmp
mov
add
add
pushl
pushl
jmp
pushl
mov
push
mov
add
push
mov
add
pop
xchg
pop
jmp
mov
push
jmp
pop
jmp
add
add
mov
add
push
mov
sub
add
jmp
add
add
sub
pop
add
add
sub
jmp
add
jmp
sub
jmp
pushl
pushl
pop
push
push
pop
push
mov
and
and
add
add
pop
add
xchg
mov
jmp
xor
movzbl
mov
push
push
pop
jmp
mov
pop
sub
mov
mov
push
mov
shr
shr
jmp
pushl
pushl
pop
push
mov
mov
jmp
and
pop
dec
not
sub
jmp
xor
xor
xor
mov
sub
pushf
jmp
push
mov
sub
mov
push
mov
push
mov
jmp
or
je
pushl
push
push
mov
mov
sub
jmp
push
pop
mov
add
add
sub
sub
jmp
pop
jmp
mov
sub
jmp
mov
push
mov
not
inc
shr
add
xor
add
jmp
mov
mov
add
add
add
sub
sub
mov
add
sub
pop
push
mov
add
pop
jmp
add
xchg
mov
jmp
sub
jmp
mov
sub
inc
inc
push
mov
sub
pop
jmp
xor
jmp
add
jmp
push
mov
push
mov
jmp
mov
jmp
add
sub
pop
or
sub
push
mov
mov
pop
pop
add
mov
add
jmp
xor
pop
and
not
sub
mov
mov
sub
jmp
pop
xor
jmp
add
pop
add
sub
jmp
mov
jmp
pop
mov
mov
and
not
sub
sub
add
sub
jmp
mov
sub
sub
push
push
mov
mov
mov
pop
add
mov
push
mov
add
add
xchg
pop
jmp
sub
mov
jmp
mov
mov
shr
add
jmp
add
jmp
shlb
pushf
jmp
pushl
mov
push
mov
sub
mov
addl
pop
sub
mov
mov
add
not
add
add
push
mov
add
pop
add
pop
push
mov
xor
push
jmp
mov
jmp
inc
shr
jmp
jmp
not
xor
add
pop
sub
jmp
mov
pop
sub
pop
push
mov
inc
shr
xor
add
pop
movzbl
pushl
jmp
pushl
pop
jmp
push
pop
add
pushl
mov
add
jmp
shr
add
xor
pop
mov
pop
add
add
pop
add
mov
mov
add
jmp
dec
xor
or
jmp
add
sub
mov
jmp
not
jmp
jmp
mov
mov
jmp
neg
jmp
push
mov
mov
sub
pop
jmp
sub
add
add
jmp
mov
jmp
mov
addl
popl
push
jmp
mov
add
sub
xchg
pop
mov
jmp
xor
xor
not
xor
xor
xor
pushl
pop
add
push
push
mov
mov
add
push
mov
sub
pop
jmp
mov
add
add
sub
jmp
add
pop
add
pushl
jmp
push
mov
push
mov
jmp
mov
sub
mov
pop
add
pop
and
sub
mov
mov
dec
inc
add
add
pop
jmp
neg
push
mov
neg
jmp
shl
inc
jmp
pop
dec
dec
and
shl
sub
xor
jmp
push
mov
jmp
sub
sub
jmp
mov
push
mov
jmp
add
push
push
pop
add
sub
jmp
sub
mov
mov
add
jmp
mov
sub
mov
jmp
jmp
mov
mov
add
mov
jmp
sub
xor
addl
add
subl
jmp
sub
pop
push
pop
xor
pop
mov
mov
jmp
sub
pop
pop
xchg
pop
jmp
mov
add
jmp
pop
jmp
push
jmp
sub
jmp
add
or
jmp
push
mov
jmp
mov
mov
jmp
sub
xor
pop
push
mov
sub
pop
sub
add
sub
sub
add
jmp
mov
jmp
neg
push
mov
add
add
shl
xor
jmp
mov
mov
pop
jmp
add
sub
push
mov
jmp
pushl
pop
add
sub
pushl
pop
add
push
mov
add
sub
push
pushl
pop
popl
pop
jmp
mov
and
sub
sub
jmp
push
jmp
not
xchg
shr
dec
shr
xchg
not
xchg
add
sub
pop
add
jmp
pop
mov
mov
inc
dec
shr
not
add
subl
addl
sub
subl
addl
pushl
pop
jmp
pop
xor
xor
jmp
xor
mov
add
jmp
pop
jmp
popl
jmp
pushw
pop
shr
xor
xor
mov
pop
add
xor
jmp
add
pop
jmp
add
jmp
mov
shr
shl
sub
push
mov
add
pop
add
sub
mov
add
add
xchg
pop
jmp
xor
add
jmp
add
add
add
add
sub
pop
push
mov
sub
jmp
add
push
mov
add
add
push
pushl
jmp
add
push
pushl
mov
add
popl
pop
push
mov
mov
sub
push
mov
mov
push
mov
jmp
pop
sub
add
mov
add
push
pushl
jmp
sub
pop
inc
jmp
mov
mov
add
push
mov
push
jmp
pop
jmp
pushl
jmp
mov
add
push
mov
add
pop
xchg
jmp
jmp
add
sub
pop
jmp
pushl
jmp
xchg
pop
mov
mov
push
mov
jmp
push
addb
subb
sub
jmp
lods
sub
jmp
mov
jmp
popw
jmp
push
mov
or
jmp
mov
push
jmp
push
mov
add
sub
sub
pop
mov
sub
mov
mov
add
add
jmp
inc
or
xor
shr
push
mov
xor
jmp
mov
add
sub
pushl
pop
add
jmp
shr
and
shr
or
xor
jmp
and
pushf
jmp
xor
pop
add
pushl
mov
add
add
push
mov
mov
mov
add
pop
add
sub
sub
pop
push
jmp
shr
and
jmp
add
push
mov
shr
xor
inc
xor
sub
pop
push
mov
add
pop
jmp
jmp
mov
add
not
and
sub
add
pop
xchg
pop
or
shl
push
mov
add
push
mov
sub
pop
jmp
sub
pop
addl
push
jmp
pop
or
jmp
add
pushl
pop
push
mov
mov
push
mov
jmp
add
push
jmp
add
jmp
mov
add
mov
add
sub
pop
push
push
mov
push
mov
mov
jmp
pop
neg
push
jmp
push
pop
pushl
jmp
xor
sub
sub
add
add
add
pop
add
xor
xor
xor
mov
push
mov
add
sub
xchg
pop
jmp
mov
mov
mov
push
mov
add
jmp
xchg
mov
xor
pushl
jmp
pop
push
mov
not
not
shr
sub
jmp
mov
push
jmp
sub
pop
push
mov
or
pop
jmp
mov
addl
mov
push
mov
add
add
xchg
pop
push
mov
xor
or
xor
add
jmp
xchg
pop
mov
pushl
pop
jmp
pop
jmp
lods
pushw
mov
push
push
mov
mov
pop
jmp
pop
sub
mov
push
mov
not
jmp
xorl
popl
push
push
mov
xor
add
mov
pop
xor
pop
pop
pushl
jmp
push
push
mov
pop
pop
push
notl
jmp
pushl
jmp
pop
jmp
mov
push
mov
push
pop
push
push
pop
add
add
sub
jmp
pop
pop
jmp
xchg
jmp
add
pop
add
xor
jmp
xor
add
pop
sub
mov
mov
jmp
add
jmp
pop
xor
xor
jmp
pop
push
mov
add
sub
xchg
jmp
mov
pushl
pop
popl
jmp
xor
mov
jmp
mov
add
add
sub
pop
push
mov
sub
mov
push
mov
mov
pop
sub
mov
mov
sub
mov
add
add
pop
push
mov
xor
jmp
pop
dec
jmp
mov
jmp
pop
push
mov
xor
pop
push
mov
mov
sub
sub
jmp
add
mov
jmp
shr
push
mov
add
dec
or
push
mov
jmp
sub
add
jmp
sub
xor
sub
pop
inc
inc
push
mov
mov
sub
not
xor
sub
pop
mov
jmp
or
add
xor
mov
add
add
sub
jmp
mov
jmp
shl
sub
or
jmp
popl
addl
pushl
jmp
add
pop
add
add
sub
pushl
pop
add
add
xor
xor
xor
pop
push
jmp
pop
sub
pop
sub
pop
jmp
pop
sub
xchg
jmp
mov
mov
add
jmp
push
push
jmp
add
push
pop
pop
jmp
push
mov
push
mov
shr
and
dec
dec
jmp
pop
jmp
push
mov
xor
neg
push
mov
or
pop
inc
shl
xor
add
pop
push
mov
mov
push
jmp
xor
mov
add
jmp
xchg
mov
push
mov
push
mov
mov
pop
add
jmp
mov
add
shr
add
add
jmp
mov
add
neg
inc
sub
jmp
add
pushl
jmp
pop
jmp
sub
jmp
pop
xor
sub
shl
sub
mov
pop
sub
xor
sub
xor
pushl
mov
add
push
mov
add
sub
jmp
xor
pop
sub
mov
mov
push
mov
push
mov
shr
dec
or
not
sub
xor
sub
pop
jmp
mov
or
pushf
jmp
mov
jmp
pop
mov
add
jmp
add
and
push
push
mov
jmp
mov
add
xor
mov
add
add
mov
sub
jmp
pop
add
sub
xchg
pop
mov
mov
push
mov
add
add
pop
push
mov
push
mov
xor
inc
inc
neg
add
add
mov
jmp
add
jmp
mov
jmp
sub
jmp
mov
add
pop
push
mov
push
mov
add
pop
jmp
sub
pop
sub
jmp
mov
mov
push
jmp
neg
add
sub
shl
add
mov
pop
shr
inc
and
push
mov
sub
or
or
neg
not
xor
or
pop
or
sub
sub
jmp
pop
add
pop
shl
neg
push
mov
sub
add
jmp
mov
not
sub
inc
xor
sub
mov
pop
shl
shl
push
mov
add
pop
not
jmp
xor
mov
add
add
add
push
jmp
popl
push
jmp
push
jmp
shl
push
mov
not
xor
jmp
add
jmp
mov
jmp
neg
jmp
add
mov
mov
push
mov
add
add
xchg
pop
not
inc
shl
push
notl
pop
jmp
sub
mov
mov
jmp
pop
sub
add
push
jmp
push
jmp
push
mov
dec
push
mov
jmp
push
mov
not
push
mov
inc
xor
or
pop
jmp
mov
add
add
jmp
neg
inc
add
mov
mov
add
push
popl
mov
jmp
xor
pop
btc
pushf
jmp
mov
push
mov
add
push
mov
add
pop
xchg
pop
mov
jmp
inc
push
mov
inc
mov
pop
xor
sub
pop
push
mov
not
mov
pop
dec
jmp
mov
add
jmp
pop
xchg
jmp
mov
pop
add
sub
jmp
push
mov
jmp
xchg
pop
add
add
jmp
cmp
je
pushl
pushl
mov
add
sub
mov
jmp
pop
mov
add
jmp
pop
mov
mov
shl
push
jmp
pop
inc
xor
and
jmp
mov
add
xor
mov
pop
and
jmp
mov
add
mov
add
jmp
xor
pop
push
mov
push
jmp
xor
pop
mov
push
jmp
add
jmp
xchg
jmp
and
pushl
jmp
pushl
jmp
add
push
mov
shr
jmp
push
mov
mov
mov
add
jmp
mov
jmp
add
pop
sub
jmp
mov
jmp
pop
jmp
xor
pushl
pop
push
mov
add
jmp
pop
add
push
mov
sub
pop
pop
push
mov
sub
sub
pop
push
jmp
push
mov
mov
pop
push
mov
mov
push
mov
add
pop
or
inc
neg
jmp
mov
or
pop
add
or
pop
and
xor
sub
sub
mov
add
push
mov
jmp
mov
push
jmp
mov
push
push
jmp
add
add
jmp
add
add
pop
sub
mov
mov
add
jmp
add
jmp
add
add
pop
push
mov
jmp
mov
push
mov
add
add
jmp
xor
pop
mov
pop
shl
xor
push
jmp
push
jmp
pop
push
mov
mov
xor
mov
add
jmp
add
add
xchg
pop
sub
jmp
sub
mov
jmp
mov
mov
add
jmp
push
mov
add
pop
subl
subl
jmp
xor
pop
add
pop
push
push
jmp
pop
popl
jmp
push
jmp
add
jmp
xchg
shr
add
dec
add
jmp
xor
and
pop
push
mov
sub
xor
or
jmp
pushl
pop
add
sub
jmp
mov
mov
mov
jmp
mov
add
mov
add
add
pop
or
pop
jmp
inc
inc
dec
add
jmp
movzbw
jmp
push
mov
sub
mov
pushl
mov
push
mov
add
jmp
push
jmp
xor
add
mov
sub
mov
push
pop
jmp
push
mov
pop
pop
pop
neg
push
mov
jmp
add
add
xchg
pop
jmp
add
add
add
jmp
xor
pop
neg
xor
push
sub
mov
jmp
add
add
jmp
pop
pop
push
mov
mov
add
pop
add
jmp
and
push
mov
xor
pop
sub
mov
push
mov
add
add
jmp
and
push
mov
add
sub
sub
pop
jmp
pop
xor
pop
sub
sub
add
pop
push
subl
popl
addl
pop
jmp
add
add
sub
push
mov
not
jmp
push
mov
push
mov
mov
pop
push
mov
push
mov
mov
mov
add
jmp
mov
mov
push
jmp
mov
jmp
dec
shr
jmp
add
sub
add
add
sub
jmp
sub
add
push
mov
jmp
xchg
pop
add
xchg
mov
mov
push
jmp
pop
push
mov
add
sub
jmp
pop
push
jmp
mov
or
pop
push
mov
jmp
mov
mov
jmp
xor
add
xor
pop
jmp
shl
add
xor
mov
pop
add
and
mov
add
push
push
mov
mov
pop
add
not
and
neg
shl
sub
jmp
push
mov
pop
pop
not
xor
xor
xor
xchg
xor
xor
xor
push
mov
push
mov
pushl
jmp
xor
sub
pop
sub
sub
add
mov
push
mov
mov
add
add
xchg
pop
push
pushl
pop
popl
mov
jmp
mov
jmp
pushl
popf
pop
adc
pushf
jmp
not
shr
xor
sub
mov
pushl
pop
add
pop
jmp
mov
add
add
add
xchg
mov
jmp
and
pop
dec
sub
add
add
jmp
mov
add
push
notl
pop
jmp
xchg
pop
sub
xor
xor
xor
pop
mov
push
jmp
mov
xor
pop
push
mov
mov
mov
add
pop
push
push
mov
mov
pop
xor
and
not
or
jmp
sub
push
jmp
pushl
jmp
push
jmp
mov
jmp
mov
sub
mov
addl
pop
push
mov
mov
jmp
and
xor
jmp
mov
jmp
add
xchg
pop
mov
jmp
push
jmp
sub
and
xor
push
push
mov
mov
sub
jmp
mov
pushl
pop
jmp
inc
push
mov
jmp
xor
mov
pop
push
mov
or
mov
push
mov
add
add
jmp
not
push
mov
sub
pop
add
pop
mov
add
push
pushl
pop
popl
pop
mov
push
mov
mov
mov
xor
pop
add
mov
mov
add
jmp
add
shr
shl
jmp
dec
xor
dec
jmp
inc
dec
jmp
pop
popl
pop
push
push
push
mov
xor
xor
mov
jmp
mov
jmp
pushl
pushl
pushl
mov
jmp
push
mov
mov
xor
pop
jmp
push
mov
mov
jmp
shr
push
push
mov
mov
jmp
sub
or
pop
or
add
add
mov
add
push
push
mov
jmp
decb
pushf
jmp
pop
mov
push
jmp
mov
jmp
push
push
mov
add
or
sub
mov
jmp
pop
jmp
mov
add
add
push
jmp
pushl
pushl
mov
add
push
push
pop
push
mov
add
pop
push
mov
add
pop
xor
xor
xor
pop
jmp
pop
push
mov
not
neg
push
mov
sub
push
jmp
push
push
pop
add
inc
dec
xor
add
pop
xor
sub
add
sub
sub
push
mov
add
not
jmp
sub
add
pop
jmp
mov
add
jmp
push
push
pop
push
push
jmp
sub
mov
mov
mov
jmp
push
mov
xor
pushl
pushl
jmp
mov
add
add
xchg
jmp
pop
popl
mov
push
mov
push
push
mov
neg
not
or
shl
jmp
pop
pushl
pop
add
sub
mov
push
jmp
pop
mov
push
mov
addl
mov
add
add
jmp
dec
shl
xor
or
xor
sub
mov
sub
pop
push
mov
not
and
add
add
pop
jmp
mov
jmp
sub
mov
jmp
sub
xchg
mov
jmp
pushl
popf
pop
sbb
pushf
jmp
and
pop
jmp
popl
mov
sub
push
mov
mov
add
pop
push
mov
push
push
jmp
push
pop
push
mov
mov
add
mov
push
mov
add
jmp
lods
push
mov
push
jmp
pop
mov
jmp
add
add
jmp
xor
pop
incl
pushf
jmp
mov
push
mov
push
xorl
pushl
pop
jmp
mov
mov
inc
jmp
mov
and
dec
sub
xor
jmp
add
jmp
pop
add
push
mov
mov
inc
xor
add
pop
xchg
pop
jmp
add
sub
jmp
add
push
mov
sub
jmp
xor
sub
mov
jmp
mov
add
add
xchg
jmp
shl
xor
sub
jmp
mov
jmp
mov
jmp
sub
pop
add
jmp
mov
push
jmp
add
mov
pop
jmp
xor
jmp
pop
add
sub
mov
pop
push
mov
mov
pop
pop
xor
sub
mov
jmp
mov
pop
inc
jmp
xor
pop
jmp
pushl
pop
add
push
mov
push
push
mov
mov
jmp
push
mov
jmp
add
sub
sub
pop
xchg
mov
mov
push
mov
mov
add
sub
xchg
pop
jmp
add
pop
add
jmp
add
sub
sub
push
mov
add
xor
sub
add
sub
sub
mov
add
pop
jmp
push
mov
push
mov
add
pop
sub
jmp
mov
jmp
mov
jmp
pushl
mov
add
push
push
mov
addl
pop
push
sub
mov
mov
push
mov
jmp
add
push
mov
not
add
not
sub
inc
sub
jmp
add
xchg
pop
add
add
push
pushl
pushl
pop
add
popl
mov
pushl
push
mov
push
jmp
pop
popl
pop
sub
push
mov
add
pop
jmp
xor
pop
sub
pop
push
mov
mov
push
mov
mov
jmp
addl
pushl
pop
jmp
add
mov
pop
add
sub
mov
mov
or
sub
and
add
add
pop
add
sub
sub
pop
xor
xor
jmp
pop
sub
mov
push
mov
sub
jmp
mov
jmp
push
jmp
pop
xor
mov
pop
add
pop
add
push
mov
push
jmp
mov
mov
push
sub
mov
add
push
mov
jmp
pop
push
mov
push
mov
add
pop
sub
xchg
pop
mov
mov
add
and
pop
push
mov
push
push
mov
mov
pop
jmp
mov
sub
pop
jmp
add
pop
xchg
pop
or
add
push
mov
mov
pop
mov
add
jmp
push
jmp
pushw
mov
mov
push
jmp
pop
jmp
xor
xor
mov
jmp
mov
mov
add
jmp
sub
add
jmp
sub
add
pop
mov
add
push
mov
sub
mov
sub
jmp
sub
mov
add
jmp
sub
mov
jmp
add
mov
push
jmp
or
jmp
mov
jmp
mov
push
mov
push
pop
add
sub
jmp
pushl
jmp
pop
pop
xor
pop
jmp
sub
mov
mov
add
pop
jmp
add
sub
xchg
jmp
mov
mov
sub
mov
jmp
add
pop
add
xchg
mov
push
push
jmp
pop
sub
mov
mov
sub
jmp
mov
push
push
jmp
sub
mov
pop
push
mov
xor
pop
add
jmp
mov
add
push
mov
add
pop
jmp
pop
push
jmp
mov
push
mov
jmp
add
mov
jmp
mov
add
pop
xor
xor
jmp
pushw
mov
jmp
sub
inc
sub
jmp
pop
sub
jmp
pushl
pop
popl
pop
mov
jmp
mov
mov
add
push
jmp
mov
sub
pop
neg
jmp
mov
jmp
push
pop
neg
shr
add
mov
pop
neg
or
shl
or
sub
xor
pop
and
jmp
add
add
xchg
pop
push
mov
add
jmp
mov
add
jmp
xor
xor
jmp
or
jmp
pop
xchg
push
mov
push
mov
push
mov
push
xorl
pop
xor
pop
jmp
sub
mov
jmp
push
mov
xor
jmp
mov
mov
add
pop
sub
pop
pop
push
mov
jmp
mov
add
pop
push
mov
mov
pop
mov
add
jmp
sub
shr
push
jmp
add
sub
mov
mov
add
add
jmp
pop
jmp
xor
mov
sub
mov
jmp
mov
jmp
pop
add
sub
mov
jmp
pop
sub
xchg
pop
mov
jmp
push
push
mov
push
mov
neg
inc
and
jmp
push
jmp
pop
mov
add
add
add
sub
jmp
mov
mov
push
jmp
pop
push
mov
jmp
not
shr
inc
push
push
mov
mov
pop
xor
pop
add
mov
add
add
jmp
pop
add
jmp
xor
pushl
pop
push
mov
jmp
mov
push
mov
push
mov
dec
shr
shl
sub
add
pop
add
push
pushl
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
popl
jmp
xor
pop
jmp
xchg
jmp
push
sub
mov
push
jmp
xor
pop
shr
jmp
add
mov
jmp
add
push
jmp
add
add
jmp
xor
inc
xor
mov
jmp
push
push
mov
xor
push
jmp
add
add
xchg
jmp
add
xchg
jmp
mov
push
mov
add
add
xor
xor
xor
pop
add
sub
jmp
jmp
mov
add
push
mov
sub
jmp
sub
not
sub
sub
pop
sub
jmp
add
jmp
xor
pop
sub
pop
add
add
jmp
push
pop
add
mov
mov
add
add
add
sub
jmp
push
jmp
mov
push
pushl
pop
push
mov
jmp
xor
jmp
pop
rolb
pushf
jmp
push
mov
xor
shl
neg
xor
jmp
pop
push
jmp
mov
push
pop
push
jmp
or
pop
jmp
xor
shr
shr
jmp
inc
or
jmp
pop
add
jmp
pop
push
jmp
and
xor
addl
add
subl
pop
pop
push
push
pop
add
pop
jmp
push
mov
add
sub
jmp
neg
push
mov
xor
pop
push
xchg
not
jmp
sub
mov
push
push
popl
sub
mov
mov
push
mov
dec
shl
add
jmp
mov
shr
and
dec
and
sub
sub
sub
pop
jmp
sub
pop
subl
jmp
mov
push
mov
mov
push
mov
mov
add
push
jmp
push
pop
pop
push
mov
jmp
push
mov
jmp
add
sub
mov
push
mov
jmp
pop
btr
pushf
jmp
lods
xor
sub
mov
push
push
jmp
add
add
xchg
jmp
mov
jmp
mov
shlw
pushf
jmp
push
mov
not
shr
xor
sub
push
mov
jmp
pop
push
mov
add
pop
jmp
jmp
pop
and
sub
add
jmp
pop
add
push
jmp
mul
push
jmp
addl
mov
jmp
push
jmp
not
push
mov
push
mov
and
jmp
mov
sub
mov
push
push
jmp
neg
not
add
jmp
push
mov
and
pop
sub
add
pop
add
pushl
jmp
xchg
pop
xchg
mov
shr
push
mov
pushl
mov
add
push
mov
push
pop
jmp
push
push
push
pushl
jmp
mov
jmp
mov
push
jmp
add
push
push
jmp
pop
mov
jmp
pop
xchg
mov
jmp
add
pop
sub
mov
mov
add
jmp
xor
push
mov
xor
mov
jmp
pop
mov
push
push
pop
sub
mov
push
jmp
push
push
pop
add
add
xchg
pop
xor
xor
jmp
mov
shl
jmp
sub
mov
mov
and
pop
jmp
neg
jmp
pop
push
mov
add
add
xchg
pop
sub
mov
push
jmp
pop
jmp
not
add
mov
pop
sub
pop
add
jmp
mov
jmp
xor
inc
or
dec
neg
xor
mov
pop
sub
pop
or
jmp
pop
add
sub
xchg
pop
mov
mov
jmp
push
mov
sub
jmp
addl
mov
jmp
sub
push
mov
push
mov
mov
push
jmp
mov
push
mov
mov
push
jmp
mov
shr
push
decl
pop
jmp
xchg
pop
jmp
sub
pop
jmp
pop
push
mov
add
jmp
mov
pop
sub
add
jmp
shr
push
mov
push
mov
mov
jmp
pop
push
mov
addl
jmp
jmp
push
pushl
jmp
push
push
mov
addl
pop
add
sub
xchg
jmp
pop
sub
jmp
add
pop
jmp
xchg
pop
mov
jmp
push
mov
sub
mov
mov
jmp
mov
mov
shl
or
inc
jmp
sub
mov
mov
add
mov
push
mov
add
add
xchg
pop
jmp
add
xchg
mov
jmp
pushl
jmp
pop
jmp
mov
jmp
mov
jmp
xor
jmp
pop
add
jmp
add
sub
jmp
add
add
jmp
pop
push
pushl
jmp
add
xor
xor
xor
pop
xor
pop
mov
jmp
push
push
pop
jmp
pop
push
mov
push
mov
add
sub
mov
mov
shr
shl
sub
mov
mov
sub
sub
mov
xorl
pop
jmp
or
pop
jmp
pop
jmp
mov
mov
pop
jmp
add
pop
xchg
jmp
push
mov
push
push
pop
jmp
xchg
mov
add
push
mov
jmp
mov
sub
add
add
pop
xor
add
pushl
jmp
xor
add
jmp
or
je
push
mov
push
mov
mov
xor
pop
push
jmp
sub
push
mov
jmp
shr
cmp
je
push
push
mov
add
push
jmp
pop
pushl
pop
push
push
sub
jmp
add
sub
add
sub
push
mov
shr
neg
add
or
not
not
xor
jmp
mov
add
shr
push
mov
push
mov
add
add
push
jmp
mov
pop
sub
jmp
mov
mov
push
mov
not
not
xor
jmp
sub
mov
jmp
push
mov
shr
inc
sub
neg
neg
sub
jmp
add
jmp
sub
mov
mov
sub
pop
push
jmp
xor
not
push
push
mov
jmp
mov
add
sub
add
add
push
push
mov
mov
xor
jmp
mov
add
or
pop
neg
jmp
add
sub
xor
xor
xor
mov
mov
push
mov
push
mov
jmp
xor
jmp
xchg
jmp
mov
jmp
shl
add
add
add
push
mov
jmp
add
pop
sub
mov
jmp
mov
shl
dec
push
jmp
pop
xor
xor
xor
pop
mov
mov
jmp
popl
mov
sarl
pushf
jmp
push
mov
jmp
pop
jmp
add
push
mov
add
sub
xchg
pop
jmp
pop
push
mov
jmp
pushl
jmp
add
pop
xchg
jmp
jmp
sub
jmp
mov
mov
add
push
mov
mov
jmp
lods
push
mov
sub
push
mov
push
pop
push
jmp
xor
pop
sub
jmp
dec
jmp
sub
sub
jmp
add
pop
mov
add
push
mov
jmp
mov
jmp
mov
jmp
and
xor
add
push
push
push
jmp
mov
mov
sub
add
add
sub
mov
mov
push
jmp
mov
push
mov
push
jmp
add
pop
sub
xor
jmp
add
jmp
sub
or
pop
and
and
jmp
pop
push
mov
push
mov
jmp
popl
jmp
mov
jmp
sub
pop
push
sub
pop
xor
sub
xor
add
sub
pop
jmp
pop
sub
mov
push
push
push
mov
add
xor
mov
pop
mov
pop
add
pop
xor
xor
xor
pop
rolw
pushf
jmp
pushl
pop
add
pop
mov
mov
push
jmp
mov
sub
mov
push
pop
add
push
jmp
mov
mov
shr
jmp
push
push
mov
jmp
add
pop
mov
jmp
add
add
add
pushl
pop
jmp
push
sub
mov
jmp
sub
sub
push
mov
inc
jmp
pop
push
push
pop
push
mov
add
jmp
sub
pushl
pop
push
jmp
pop
push
jmp
sub
and
sub
xor
or
jmp
pushl
popf
pop
rcll
pushf
jmp
mov
shl
shr
jmp
push
mov
add
jmp
pushl
popf
pop
rclb
pushf
jmp
push
addl
pop
jmp
xor
add
mov
push
mov
push
mov
and
jmp
dec
jmp
add
push
mov
add
pop
mov
add
push
mov
jmp
push
push
mov
mov
pop
mov
jmp
pop
xor
mov
add
sub
pop
push
mov
sub
sub
sub
jmp
mov
add
pop
add
jmp
push
mov
mov
mov
add
jmp
mov
push
addw
pop
jmp
add
jmp
jmp
pop
jmp
mov
push
jmp
inc
jmp
pop
popl
jmp
mov
add
add
jmp
pop
inc
push
jmp
pushl
pop
add
push
mov
mov
add
push
mov
push
mov
jmp
sub
mov
jmp
shr
push
jmp
push
mov
add
push
mov
sub
jmp
push
mov
mov
xor
pop
push
mov
mov
jmp
shr
shl
jmp
mov
sub
pop
jmp
pop
push
mov
sub
sub
jmp
push
mov
mov
sub
pop
shl
push
mov
sub
jmp
mov
push
jmp
pop
sub
pop
sub
mov
jmp
add
xor
xor
xor
jmp
mov
jmp
xor
sub
add
add
sub
jmp
sub
sub
pop
jmp
pop
pop
push
mov
jmp
pop
jmp
add
xchg
jmp
sub
push
mov
push
pop
neg
xor
push
mov
jmp
xor
jmp
mov
jmp
pop
sub
add
push
push
jmp
pop
push
jmp
sub
jmp
add
pushl
jmp
pushl
pop
push
jmp
pop
pop
xor
mov
add
push
mov
push
mov
mov
jmp
push
push
mov
jmp
notl
pop
or
xor
mov
pop
jmp
addl
mov
add
sub
mov
sub
mov
push
mov
jmp
mov
movzbw
push
pushf
jmp
pop
add
jmp
xchg
neg
jmp
add
push
mov
push
mov
jmp
mov
shl
neg
sub
xor
sub
add
jmp
xor
xor
jmp
mov
mov
add
jmp
neg
push
notl
mov
add
jmp
mov
or
pop
sub
add
pop
sub
jmp
mov
push
mov
add
add
sub
pop
add
jmp
sub
jmp
and
jmp
pop
push
mov
sub
jmp
mov
sub
pop
push
mov
and
pop
inc
shl
xor
xor
pop
jmp
pop
pop
jmp
sub
add
add
pushl
pushl
pop
add
jmp
add
push
mov
mov
add
pushl
pop
push
push
pop
add
push
push
mov
not
neg
shl
jmp
add
push
mov
mov
not
not
add
add
jmp
push
mov
jmp
push
mov
xor
xor
jmp
mov
push
negl
jmp
mov
add
sub
mov
sub
mov
sub
mov
mov
not
sub
push
mov
add
sub
xchg
pop
jmp
addl
pop
push
push
mov
jmp
mov
push
pushf
jmp
sub
push
mov
jmp
jmp
mov
push
mov
not
sub
inc
jmp
shr
jmp
neg
push
push
push
mov
mov
shl
push
mov
sub
pop
jmp
shl
shr
xor
add
sub
sub
pop
push
subl
pop
add
pop
push
pop
jmp
pop
sub
add
add
sub
mov
add
add
push
mov
mov
sub
pop
mov
push
mov
add
add
xchg
jmp
push
jmp
sub
push
push
jmp
neg
add
push
push
mov
mov
pop
push
mov
mov
and
add
xchg
not
xchg
push
mov
jmp
pop
mov
pop
jmp
xor
xor
xor
mov
shlb
pushf
jmp
add
add
mov
add
sub
add
jmp
sub
xor
jmp
pop
jmp
sub
mov
mov
add
mov
jmp
add
and
pop
and
push
mov
jmp
add
jmp
mov
notb
pushl
mov
add
push
mov
add
add
xor
jmp
add
popl
jmp
mov
mov
jmp
mov
add
push
mov
mov
mov
pop
pop
add
inc
jmp
mov
addl
popl
push
mov
mov
jmp
popl
mov
incl
shrl
orl
subl
addl
push
push
jmp
add
jmp
pop
add
xor
xor
xor
pop
and
jmp
mov
push
mov
add
add
xor
jmp
mov
add
push
mov
sub
pop
xchg
pop
mov
jmp
sub
mov
mov
jmp
add
xor
jmp
mov
push
pop
or
push
mov
and
sub
jmp
pop
pop
pushl
pop
push
push
jmp
pop
xor
xor
jmp
push
jmp
shl
xor
sub
jmp
mov
shl
shr
xor
add
sub
sub
add
pop
jmp
add
push
mov
sub
push
mov
and
pop
xor
jmp
mov
pop
add
xor
or
pop
push
mov
not
shl
dec
inc
sub
xor
pop
push
jmp
cmpl
je
push
mov
push
jmp
push
mov
push
mov
mov
pop
pop
neg
shl
jmp
xor
mov
jmp
push
push
mov
mov
sub
pop
sub
sub
push
jmp
sub
jmp
sub
jmp
mov
mov
and
or
add
sub
jmp
push
jmp
shr
xor
jmp
push
pop
jmp
push
pop
push
jmp
pushl
jmp
pushl
pop
add
sub
mov
mov
add
jmp
pop
sub
add
jmp
pop
push
pop
pop
xor
pop
dec
jmp
or
neg
sub
add
add
pop
add
xchg
pop
sub
mov
sub
mov
jmp
mov
pop
mov
mov
add
shr
jmp
mov
jmp
sub
pushl
jmp
push
mov
add
add
xchg
pop
push
mov
push
jmp
xchg
pop
mov
push
mov
mov
push
mov
jmp
mov
jmp
mov
push
push
jmp
mov
push
mov
push
mov
jmp
xor
mov
sub
mov
jmp
or
dec
jmp
pushl
pop
push
mov
add
push
mov
mov
push
mov
and
pop
add
add
pushl
pop
push
mov
mov
push
mov
add
mov
add
push
mov
jmp
add
add
push
jmp
mov
push
mov
add
jmp
mov
jmp
mov
push
pushf
jmp
pop
jmp
add
push
mov
sub
pop
pop
push
jmp
add
jmp
mov
add
pushl
jmp
pop
jmp
mov
push
push
mov
jmp
add
add
pop
sub
push
mov
add
add
pop
jmp
mov
neg
jmp
mov
sub
pop
jmp
lods
push
jmp
mov
sub
pop
jmp
add
add
jmp
pop
shl
or
shr
sub
jmp
add
push
mov
push
mov
sub
pushl
pushl
pop
add
push
mov
mov
add
add
xchg
pop
jmp
mov
or
pop
jmp
pop
xor
xor
jmp
dec
add
and
sub
sub
jmp
push
jmp
mov
pop
add
sub
mov
mov
dec
not
neg
jmp
mov
sub
jmp
pushl
pushl
pop
add
popl
jmp
push
push
mov
push
mov
jmp
sub
jmp
mov
push
jmp
push
mov
mov
not
push
mov
shl
jmp
pushl
pop
push
mov
mov
sub
mov
mov
shl
jmp
mov
jmp
mov
dec
sub
mov
pop
sub
add
add
mov
push
mov
add
jmp
pop
push
pushl
pop
popl
pop
push
mov
add
pop
push
mov
or
pop
push
mov
add
jmp
pop
jmp
xor
xor
pop
push
mov
mov
push
push
mov
push
mov
push
mov
push
mov
mov
pop
pop
jmp
pop
push
mov
push
push
popl
jmp
add
add
pop
jmp
add
push
mov
push
mov
sub
xor
shl
jmp
push
mov
and
xor
add
sub
and
add
xor
jmp
shl
add
xor
pop
sub
pop
shl
add
and
xor
add
mov
add
mov
add
xchg
mov
jmp
sub
push
jmp
add
sub
sub
add
jmp
push
mov
mov
add
jmp
add
sub
sub
jmp
pop
xchg
pop
push
mov
jmp
add
jmp
and
add
xor
pop
add
sub
mov
push
mov
add
add
jmp
mov
push
pop
add
sub
jmp
pop
shl
jmp
sub
add
jmp
mov
pop
add
jmp
mov
add
pop
subl
mov
add
jmp
sub
jmp
mov
push
mov
shr
or
add
xor
and
jmp
add
mov
add
add
xor
jmp
pop
xchg
shl
add
sub
jmp
pop
add
xchg
pop
push
mov
push
mov
mov
pop
and
pushl
mov
add
push
mov
jmp
pop
jmp
pop
xor
mov
push
mov
add
add
xchg
pop
sub
mov
mov
sub
push
mov
jmp
or
inc
shr
and
shl
add
sub
jmp
sub
add
sub
add
add
sub
pushl
pop
add
add
sub
pushl
mov
add
add
jmp
not
xchg
push
mov
jmp
add
add
mov
add
push
push
mov
push
pop
jmp
inc
shl
xor
add
xor
pop
add
mov
jmp
pop
jmp
mov
jmp
mov
xchg
pop
xchg
mov
mov
push
mov
jmp
push
mov
mov
jmp
mov
add
sub
sub
pop
add
push
mov
add
jmp
mov
push
jmp
add
jmp
push
jmp
mov
jmp
and
pop
shr
xor
xor
xor
jmp
mov
push
sub
mov
addl
pop
jmp
pop
add
pop
pushl
jmp
xchg
not
xchg
jmp
not
or
jmp
push
mov
jmp
pop
pop
mov
mov
add
jmp
mov
shl
add
sub
pop
push
push
mov
inc
sub
not
push
mov
jmp
mov
sub
mov
push
mov
push
mov
add
pop
pop
push
mov
jmp
pop
push
mov
sub
pop
push
jmp
mov
add
mov
jmp
push
pop
add
push
mov
jmp
add
mov
jmp
sub
mov
mov
add
sub
xor
xor
xor
pop
jmp
xor
jmp
mov
addl
pop
push
mov
not
xor
add
mov
add
push
mov
jmp
dec
jmp
dec
add
jmp
mov
pushl
pop
popl
mov
pushl
jmp
add
jmp
mov
add
pop
push
pushl
jmp
xor
pop
sub
jmp
push
mov
jmp
mov
mov
add
mov
push
jmp
add
sub
xchg
pop
mov
push
mov
jmp
pop
jmp
push
jmp
push
mov
mov
pop
or
xor
sub
jmp
mov
dec
neg
inc
jmp
xor
xor
xor
jmp
shr
push
mov
jmp
xor
jmp
mov
pop
sub
mov
jmp
mov
neg
and
and
and
sub
jmp
mov
jmp
add
push
mov
jmp
pop
add
xchg
pop
shl
push
sub
jmp
push
mov
mov
jmp
pop
jmp
xor
jmp
add
add
push
mov
add
sub
xchg
pop
mov
mov
sub
jmp
sub
mov
mov
jmp
sub
sub
pop
xor
xor
xor
mov
mov
jmp
push
popl
addl
pop
push
jmp
mov
sub
mov
jmp
push
mov
add
jmp
mov
sub
pop
and
sub
or
xor
sub
jmp
xchg
pop
xor
mov
jmp
push
mov
sub
jmp
sub
pop
sub
add
sub
sub
mov
add
add
push
jmp
xor
xor
xor
pop
pop
inc
shl
sub
sub
jmp
mov
jmp
mov
xor
xor
xor
pop
mov
pop
not
add
sub
pop
xchg
pop
jmp
shr
jmp
negw
pushf
jmp
add
xor
push
mov
jmp
lods
jmp
pop
add
pushl
pop
jmp
pushl
pop
push
push
mov
addl
mov
add
add
push
mov
not
inc
shr
not
add
push
mov
sub
mov
add
add
push
mov
mov
shl
and
add
add
pop
jmp
popl
push
mov
add
jmp
xor
jmp
push
mov
xor
sub
jmp
add
xchg
pop
sub
add
add
sub
add
jmp
mov
jmp
push
pop
add
add
jmp
add
add
push
mov
sub
jmp
add
add
jmp
add
sub
push
jmp
mov
push
push
jmp
add
jmp
add
push
mov
add
add
push
pushl
jmp
xchg
pop
push
jmp
pushl
pop
push
mov
push
mov
add
push
mov
jmp
sub
sub
sub
pushl
jmp
push
jmp
shr
jmp
mov
jmp
mov
jmp
push
mov
push
push
jmp
mov
jmp
pushl
pop
mov
jmp
push
pop
jmp
mov
add
push
mov
mov
neg
push
mov
sub
jmp
xor
pushl
jmp
mov
sub
mov
push
pop
mov
pushl
pop
push
jmp
mov
push
mov
jmp
mov
add
jmp
neg
xor
add
shl
sub
sub
pop
sub
add
push
mov
jmp
add
mov
pop
jmp
pop
pop
jmp
add
jmp
pushl
pushl
pop
push
mov
add
push
mov
neg
push
mov
jmp
add
add
jmp
push
push
push
push
jmp
not
sub
jmp
add
shr
jmp
push
push
mov
mov
pop
add
pop
jmp
lods
xor
jmp
xchg
pop
shl
add
xor
jmp
mov
jmp
add
add
sub
push
mov
sub
jmp
push
mov
sub
mov
pop
not
push
incl
pop
and
jmp
sub
jmp
add
add
pop
push
jmp
dec
add
mov
pop
add
pop
mov
pop
push
mov
sub
pop
sub
add
pushl
pop
push
jmp
sub
push
popl
addl
pushl
pop
jmp
add
jmp
mov
mov
push
mov
mov
pop
sub
mov
pop
mov
push
jmp
pushl
jmp
push
pushl
pop
push
mov
add
jmp
add
jmp
sub
mov
decl
xchg
not
xchg
pop
push
mov
push
jmp
add
mov
jmp
pop
not
jmp
add
push
jmp
mov
mov
pop
jmp
mov
pop
push
jmp
pop
mov
pop
add
pushl
pop
add
xchg
pop
push
mov
jmp
add
add
jmp
push
jmp
add
xchg
mov
push
mov
add
pop
xchg
mov
jmp
pop
jmp
add
sub
mov
mov
push
mov
add
pop
push
mov
add
pop
xor
xor
jmp
pop
jmp
mov
push
push
jmp
add
add
xchg
pop
mov
add
add
add
jmp
pop
push
pushl
pop
jmp
pushl
pop
push
jmp
mov
inc
push
jmp
mov
push
mov
mov
pop
xor
pop
add
pop
mov
pop
mov
jmp
push
mov
add
jmp
and
sub
and
jmp
and
xor
and
jmp
inc
push
mov
jmp
pop
add
add
push
jmp
mov
jmp
shr
dec
shr
sub
push
mov
jmp
mov
jmp
add
add
mov
add
and
jmp
shl
sub
jmp
xor
sub
jmp
xor
jmp
and
pushl
pushl
jmp
xchg
pop
popl
jmp
mov
push
mov
push
mov
and
jmp
xchg
jmp
add
jmp
add
push
jmp
add
add
xor
xor
xor
pop
shl
add
jmp
sub
mov
jmp
pop
mov
push
sub
mov
addl
mov
add
push
mov
sub
add
add
pop
push
mov
add
pop
xchg
mov
push
mov
jmp
add
shr
add
add
jmp
mov
jmp
pop
add
jmp
pop
popl
mov
jmp
not
sub
shr
push
mov
shr
xor
push
mov
add
jmp
add
add
push
mov
push
mov
add
jmp
pop
popl
mov
jmp
add
add
jmp
mov
jmp
or
xor
add
pop
xchg
jmp
pop
pop
push
pushl
jmp
xor
xor
xor
pop
jmp
mov
add
jmp
add
pop
jmp
add
jmp
push
mov
add
push
mov
jmp
pop
sub
mov
mov
mov
pop
mov
push
push
pop
push
mov
add
jmp
lods
add
sub
push
jmp
push
jmp
sub
mov
mov
add
jmp
push
jmp
add
sub
xchg
pop
mov
mov
not
or
jmp
sub
mov
push
mov
push
mov
jmp
pop
jmp
mov
xor
or
pop
shr
xor
add
jmp
add
push
jmp
sub
jmp
add
jmp
add
jmp
pop
add
pop
sub
subl
mov
jmp
push
mov
sub
push
xorl
pop
xor
pop
jmp
push
popl
addl
pop
add
push
mov
add
sub
xchg
pop
jmp
lods
push
mov
add
sub
xor
xor
jmp
push
mov
push
mov
mov
pop
pop
sub
jmp
add
xchg
pop
add
jmp
popl
xchg
xchg
not
xchg
xchg
jmp
and
not
or
sub
sub
and
pop
sub
jmp
mov
sub
mov
mov
sub
mov
pop
xor
sub
pop
sub
push
push
jmp
add
pop
pop
jmp
push
push
push
mov
mov
pop
jmp
push
mov
jmp
pop
sub
sub
pushl
pop
add
sub
add
add
push
mov
or
neg
push
mov
xor
pop
sub
sub
add
mov
add
add
jmp
popl
mov
popl
jmp
pop
push
mov
shl
dec
xchg
not
xchg
dec
add
jmp
pop
xchg
mov
jmp
push
jmp
dec
shr
jmp
push
mov
add
jmp
add
push
mov
xor
and
or
not
shl
sub
xor
pushl
jmp
sub
mov
mov
add
push
jmp
pop
push
pushl
jmp
sub
mov
jmp
jmp
sub
sub
add
add
pop
add
push
mov
mov
sub
jmp
pop
jmp
add
sub
sub
sub
mov
push
mov
add
add
xchg
jmp
pushl
pushl
jmp
pop
xor
mov
push
mov
add
add
xchg
pop
push
mov
add
push
push
push
pop
xor
dec
jmp
mov
mov
shr
push
jmp
mov
push
pushl
pop
jmp
inc
add
shr
xor
add
jmp
add
add
mov
jmp
pop
push
jmp
mov
shr
xor
xor
xor
jmp
xor
jmp
add
sub
pop
inc
push
jmp
pop
jmp
mov
addl
pop
push
mov
jmp
mov
mov
add
pop
xchg
mov
btc
pushf
jmp
pushl
pop
add
add
add
push
pushl
pop
popl
mov
xchg
mov
jmp
mov
inc
add
add
pop
pop
push
push
mov
mov
pop
add
jmp
sub
jmp
add
push
push
pop
sub
sub
jmp
pushl
pop
popl
mov
mov
mov
push
mov
add
pop
jmp
mov
push
jmp
add
jmp
not
shr
sub
sub
mov
mov
add
mov
add
jmp
dec
shl
xor
jmp
pop
jmp
mov
add
add
xchg
pop
push
mov
add
pop
add
push
mov
sub
pop
sub
mov
mov
add
pushl
pop
add
jmp
pop
mov
pushl
pushl
pop
jmp
sub
sub
jmp
xor
add
jmp
push
jmp
add
sub
pop
push
mov
jmp
pop
sub
add
add
add
push
mov
sub
pop
jmp
add
xchg
jmp
add
add
jmp
add
push
mov
jmp
mov
jmp
pop
xor
mov
pop
dec
jmp
mov
mov
push
mov
jmp
mov
mov
jmp
xchg
jmp
push
jmp
push
jmp
pop
push
push
push
jmp
push
mov
shr
shl
add
push
jmp
push
mov
xor
pop
add
add
sub
pop
jmp
mov
push
mov
add
add
xchg
pop
sub
jmp
lods
xor
push
mov
sub
jmp
push
mov
jmp
pop
push
mov
addl
pop
jmp
pushl
pop
jmp
pop
add
mov
jmp
mov
shrw
pushf
jmp
pushl
jmp
shr
add
add
pop
add
add
push
mov
sub
jmp
xor
jmp
pop
xchg
mov
push
mov
jmp
pushl
pushl
pop
sub
mov
push
pop
add
sub
xor
xor
xor
mov
jmp
mov
push
mov
jmp
push
mov
push
jmp
not
xor
and
pop
dec
add
add
pop
push
mov
push
mov
add
mov
add
jmp
mov
add
jmp
mov
mov
pop
sub
jmp
push
mov
jmp
mov
add
add
jmp
mov
push
mov
add
add
xchg
pop
jmp
mov
jmp
push
mov
sub
jmp
push
mov
add
add
xchg
pop
add
add
push
mov
add
jmp
add
jmp
add
pop
jmp
push
pop
jmp
push
mov
sub
sub
add
pop
jmp
neg
push
mov
xor
pop
xor
pop
add
pop
pop
push
mov
jmp
push
mov
xor
add
pop
push
push
push
pop
jmp
pop
jmp
mov
pop
sub
sub
add
jmp
xchg
pop
mov
pushl
pop
popl
mov
mov
jmp
add
push
pushl
jmp
push
pushl
jmp
mov
add
sub
sub
add
pop
inc
push
mov
xor
jmp
not
push
mov
add
add
jmp
neg
shl
push
jmp
mov
jmp
pop
mov
jmp
pop
xor
push
push
pop
push
mov
and
shl
and
not
sub
add
pop
sub
xchg
pop
mov
mov
push
push
mov
addl
jmp
add
xchg
jmp
xchg
jmp
push
jmp
subl
sub
jmp
pop
jmp
pop
xchg
mov
jmp
push
jmp
pop
jmp
not
inc
add
add
jmp
mov
jmp
pop
xor
movzbl
popl
jmp
add
neg
sub
jmp
add
jmp
mov
push
mov
mov
push
mov
jmp
mov
push
push
mov
add
add
sub
xchg
pop
mov
mov
jmp
mov
mov
add
push
mov
and
jmp
push
mov
push
jmp
xor
pushl
pop
add
add
sub
pushl
pop
add
push
sub
mov
mov
mov
pop
xor
jmp
mov
add
popl
mov
push
mov
jmp
pop
jmp
shl
sub
jmp
push
mov
push
jmp
add
add
xchg
jmp
lods
jmp
pop
mov
add
mov
add
jmp
mov
pop
jmp
mov
jmp
push
pop
and
push
mov
or
sub
shr
dec
shr
jmp
pop
jmp
push
popl
addl
pushl
jmp
pop
xchg
mov
sub
jmp
xor
add
pop
shl
xchg
dec
xchg
add
and
push
sub
pop
push
mov
and
push
mov
jmp
pop
and
jmp
add
jmp
mov
add
sub
jmp
push
mov
neg
jmp
mov
push
mov
mov
jmp
sub
xchg
pop
sub
push
popl
push
mov
jmp
add
xor
xor
jmp
add
jmp
sub
add
pop
push
jmp
not
xchg
jmp
add
add
add
pop
add
jmp
pushl
pushl
jmp
mov
pop
mov
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
mov
pop
not
jmp
push
mov
inc
not
jmp
pushl
pop
add
add
xor
xor
jmp
shr
jmp
add
jmp
pop
shr
add
push
pop
pop
push
push
pop
sub
sub
add
push
push
jmp
mov
push
jmp
xchg
pop
push
mov
add
push
mov
sub
pop
xchg
pop
mov
push
mov
or
neg
xor
jmp
push
push
pop
add
add
sub
pop
push
mov
add
pop
xchg
jmp
xor
jmp
sub
jmp
neg
jmp
pop
push
jmp
shr
xor
sub
jmp
push
mov
jmp
pop
jmp
xor
pop
jmp
not
sub
inc
jmp
mov
add
jmp
add
push
mov
xor
not
sub
or
push
mov
sub
add
jmp
pop
push
mov
sub
sub
jmp
addl
pop
add
jmp
mov
jmp
push
mov
push
mov
jmp
sub
push
jmp
pop
sub
jmp
xor
pop
jmp
sub
dec
dec
sub
xor
jmp
xor
and
add
sub
push
mov
jmp
add
sub
mov
push
push
mov
add
add
push
subl
mov
add
add
mov
push
mov
mov
jmp
mov
add
sub
xchg
jmp
add
inc
xor
not
jmp
mov
push
jmp
push
sub
mov
pop
jmp
pushl
pop
jmp
xchg
mov
xchg
pop
jmp
add
push
mov
mov
sub
pop
xchg
pop
mov
jmp
add
xor
xor
xor
pop
push
jmp
popl
pop
mov
jmp
or
je
sub
jmp
mov
xor
pop
sub
pop
push
pushl
pop
popl
pop
mov
push
pushl
mov
push
mov
add
add
xchg
jmp
push
mov
jmp
mov
mov
pop
mov
add
xor
add
pop
push
jmp
subl
pushl
mov
add
jmp
xchg
pop
jmp
xor
xor
xor
jmp
mov
jmp
pop
mov
xor
pop
mov
mov
add
xor
push
mov
or
sub
add
pop
add
sub
pop
jmp
xor
mov
mov
jmp
shr
dec
jmp
sub
mov
jmp
mov
push
mov
add
sub
xchg
jmp
shr
inc
and
jmp
pop
shr
push
mov
add
jmp
pop
popl
mov
jmp
shr
neg
dec
inc
xor
sub
shl
add
or
sub
jmp
add
jmp
and
xor
mov
pop
xor
xor
pop
add
sub
jmp
pop
push
jmp
shl
jmp
push
jmp
sub
mov
mov
jmp
pop
push
mov
jmp
push
mov
add
jmp
add
push
mov
xor
pop
dec
push
jmp
push
jmp
mov
mov
add
pop
mov
push
mov
add
add
xor
xor
xor
pop
push
mov
add
add
jmp
popl
addl
pop
push
mov
jmp
shl
add
xor
push
mov
dec
sub
jmp
and
mov
add
shr
push
mov
shl
neg
xor
jmp
xor
jmp
push
jmp
add
pushl
pop
push
push
mov
push
push
jmp
pop
subl
push
push
push
pop
not
neg
shl
sub
push
mov
jmp
mov
push
mov
inc
neg
jmp
xchg
mov
push
mov
push
mov
and
inc
shl
add
neg
push
mov
jmp
mov
sub
pop
mov
push
mov
push
mov
add
jmp
mov
add
xor
pushl
pop
sub
mov
sub
mov
addl
pop
push
mov
add
pop
jmp
pop
xor
jmp
mov
jmp
push
mov
push
mov
add
pop
jmp
pop
jmp
add
add
push
sub
push
popl
addl
pop
add
push
mov
and
xor
jmp
add
mov
pop
jmp
push
mov
add
push
mov
add
pop
xchg
pop
xchg
jmp
popl
jmp
push
mov
push
jmp
xor
pop
add
sub
sub
pop
xor
pushl
pop
add
push
jmp
push
jmp
pop
pop
add
push
mov
sub
add
jmp
push
mov
jmp
sub
add
add
jmp
mov
or
shl
jmp
pop
movzbl
pushl
jmp
push
pop
not
sub
mov
pop
jmp
mov
push
jmp
mov
inc
or
or
dec
xor
sub
xor
pop
xor
xor
jmp
add
add
xchg
pop
pushl
pop
push
mov
add
add
jmp
push
mov
jmp
add
jmp
push
mov
add
pop
neg
add
jmp
mov
add
shl
inc
push
mov
add
jmp
add
inc
xor
add
pop
mov
pop
jmp
xor
xor
mov
incw
pushf
jmp
push
pushl
pop
jmp
mov
push
push
pop
or
xor
mov
mov
add
jmp
shr
dec
sub
push
push
mov
jmp
xchg
jmp
dec
or
inc
xor
push
mov
push
push
subl
pop
add
mov
pop
pop
mov
add
jmp
push
push
jmp
xchg
and
push
mov
shl
shl
push
mov
sub
sub
add
add
pop
xor
xor
pop
add
pushl
jmp
mov
push
push
pop
add
jmp
add
mov
pop
or
jmp
pop
jmp
add
sub
add
pushl
jmp
mov
add
add
jmp
push
mov
sub
pushl
pop
push
jmp
add
add
jmp
pop
push
mov
push
jmp
pop
push
sub
mov
mov
mov
jmp
add
pop
xchg
mov
pushl
pushl
jmp
push
mov
add
sub
xchg
pop
jmp
mov
sub
jmp
mov
jmp
add
pop
not
inc
dec
add
sub
sub
pop
push
pop
pop
jmp
mov
add
pop
push
mov
pushl
mov
add
popl
mov
bt
pushf
jmp
push
sub
mov
pushl
mov
add
popl
not
xchg
mov
add
inc
push
notl
pop
jmp
pop
jmp
and
and
jmp
pop
push
mov
pushl
mov
jmp
mov
add
add
xor
xor
xor
mov
idiv
push
mov
jmp
sub
sub
add
pop
jmp
mov
add
add
jmp
push
mov
sub
pop
push
jmp
mov
mov
add
pop
pushl
pop
add
add
push
sub
mov
mov
mov
pop
add
add
push
mov
shl
inc
xor
sub
pop
pop
push
mov
pushl
mov
jmp
push
push
mov
add
mov
jmp
pop
add
pushl
pop
push
push
pop
add
add
xchg
pop
jmp
mov
push
jmp
sub
mov
pop
push
mov
jmp
sub
mov
push
push
pop
xor
jmp
push
mov
jmp
push
jmp
mov
push
jmp
or
xor
push
mov
add
pop
shl
push
push
jmp
add
mov
add
push
mov
push
push
mov
add
jmp
add
xor
jmp
add
pop
jmp
add
jmp
mov
mov
jmp
pop
jmp
mov
push
mov
push
jmp
mov
pop
jmp
push
mov
sub
pop
jmp
shr
add
sub
add
jmp
push
jmp
mov
jmp
push
mov
jmp
xor
jmp
xor
push
push
mov
pop
pop
jmp
pushl
popf
pop
rclw
pushf
jmp
add
pop
sub
jmp
add
push
jmp
sub
mov
mov
shl
jmp
inc
xor
push
mov
jmp
add
jmp
mov
push
mov
add
push
mov
jmp
mov
sub
pop
xchg
jmp
and
sub
sub
jmp
add
pop
push
push
mov
xor
mov
pop
inc
neg
sub
sub
jmp
mov
mov
push
pop
jmp
pushl
jmp
push
pushl
jmp
sub
pop
jmp
mov
jmp
add
pop
push
push
push
mov
add
sub
xchg
jmp
push
mov
add
sub
jmp
mov
dec
jmp
push
push
mov
mov
pop
mov
pop
mov
jmp
push
mov
push
jmp
pop
jmp
mov
mov
push
mov
push
jmp
push
jmp
pop
sub
mov
mov
push
mov
mov
add
pop
add
xchg
jmp
add
add
sub
movzbl
jmp
add
dec
shl
xchg
dec
xchg
sub
add
jmp
push
mov
add
jmp
add
xchg
pop
push
push
pop
add
pop
sub
push
jmp
push
push
mov
mov
xor
pop
jmp
pop
add
popl
mov
jmp
mov
jmp
pop
sub
jmp
add
add
xchg
pop
jmp
xor
add
pop
push
mov
jmp
add
add
sub
pop
mov
jmp
pop
jmp
add
jmp
add
dec
xor
push
pop
mov
add
sub
add
add
jmp
shr
jmp
sub
push
mov
add
pop
pop
xor
xor
xor
mov
test
pushf
jmp
pop
push
mov
add
pop
xchg
mov
push
mov
or
add
add
pop
xchg
pop
push
mov
sub
mov
addl
pop
add
add
xchg
pop
or
pushf
jmp
xor
jmp
pop
jmp
push
mov
jmp
pop
push
mov
shl
add
dec
not
jmp
not
add
sub
push
push
pop
dec
xor
add
or
xor
xor
xor
pop
mov
pop
jmp
or
push
mov
neg
add
add
add
add
sub
mov
add
jmp
mov
push
mov
add
jmp
add
jmp
mov
xor
pop
jmp
add
sub
pop
add
push
mov
mov
add
sub
jmp
mov
add
jmp
decl
pushf
jmp
add
or
shl
jmp
sub
mov
add
sub
pop
jmp
pop
jmp
mov
pop
add
pop
push
mov
push
mov
jmp
sub
xchg
pop
jmp
add
pop
xor
xor
xor
mov
mov
movzbw
push
pushf
jmp
add
push
mov
mov
sub
jmp
pop
jmp
push
mov
pushl
pop
popl
pop
jmp
add
pushl
pop
jmp
sub
add
mov
add
jmp
sub
push
mov
jmp
add
jmp
mov
push
mov
push
jmp
addl
mov
add
add
sub
mov
jmp
add
jmp
xor
jmp
pop
jmp
push
push
push
pop
jmp
add
add
jmp
lods
sub
push
push
mov
push
mov
mov
pop
jmp
pop
push
mov
jmp
mov
jmp
add
xchg
jmp
neg
shl
add
shr
not
jmp
mov
push
mov
push
pop
add
push
push
jmp
sub
add
jmp
push
mov
jmp
xor
jmp
sub
sub
jmp
push
mov
jmp
mov
pop
add
pop
add
mov
add
add
push
pushl
pop
popl
pop
jmp
pop
jmp
add
add
pop
jmp
add
mov
add
inc
xor
not
push
mov
neg
add
and
push
jmp
pop
sub
pop
push
push
push
jmp
mov
jmp
mov
add
add
sub
pushl
pop
add
push
jmp
pop
add
sub
pushl
pop
add
pop
jmp
pop
add
add
mov
add
sub
sub
jmp
mov
jmp
push
jmp
popl
mov
imul
pushw
mov
push
pushf
jmp
jmp
popl
pop
add
sub
mov
push
push
pop
jmp
add
sub
add
add
jmp
dec
shl
sub
mov
xchg
sub
mov
push
pop
pop
xchg
jmp
mov
add
add
jmp
sub
push
mov
jmp
xor
mov
jmp
sub
mov
push
sub
jmp
push
mov
mov
jmp
sub
jmp
push
mov
jmp
push
mov
sub
mov
jmp
pop
sub
xchg
pop
mov
push
mov
mov
push
mov
and
pop
jmp
xor
pop
add
jmp
mov
pop
push
mov
mov
jmp
add
add
jmp
sub
add
pop
xor
push
pop
pop
add
add
jmp
pop
sub
pop
neg
push
mov
jmp
mov
mov
push
mov
mov
push
mov
sub
jmp
mov
popl
jmp
mov
inc
shr
shl
dec
add
sub
pop
neg
shl
push
mov
sub
pop
add
pushl
pop
add
sub
mov
pushl
pop
popl
mov
mov
jmp
add
mov
add
push
push
mov
mov
add
sub
sub
pop
add
add
jmp
push
mov
jmp
not
jmp
pop
test
pushf
jmp
add
xor
push
jmp
not
jmp
push
jmp
pushl
mov
add
add
or
shl
push
mov
push
mov
add
jmp
popl
addl
pushl
jmp
mov
sub
mov
mov
jmp
neg
jmp
mov
push
mov
add
sub
xchg
mov
jmp
xor
sub
jmp
xchg
pop
jmp
push
mov
mov
xor
mov
pop
push
mov
dec
dec
sub
add
jmp
addl
subl
mov
add
jmp
negb
pushf
jmp
push
mov
add
push
mov
add
add
sub
pop
push
pushl
pushl
pop
jmp
pop
sub
jmp
shl
shl
sub
jmp
push
mov
push
jmp
not
push
mov
mov
sub
add
sub
mov
jmp
mov
mov
push
mov
jmp
xor
jmp
add
jmp
mov
jmp
push
jmp
pop
push
mov
sub
jmp
add
push
mov
push
jmp
add
jmp
pop
add
add
pushl
pop
add
push
mov
add
pop
xchg
mov
pushl
pushl
pop
push
jmp
mov
pop
mov
mov
add
jmp
mov
add
jmp
push
mov
push
mov
push
jmp
sub
mov
add
push
mov
jmp
shl
sub
jmp
xor
add
pop
sub
mov
add
neg
push
mov
sub
push
mov
mov
xor
jmp
mov
jmp
mov
mov
add
add
pop
dec
push
mov
jmp
mov
pop
inc
push
mov
add
jmp
pop
add
neg
push
push
mov
pushw
mov
push
mov
mov
jmp
add
add
add
push
mov
sub
mov
jmp
mov
mov
jmp
add
sub
push
mov
inc
dec
and
sub
add
sub
pop
mov
add
neg
push
mov
add
jmp
mov
jmp
pop
sub
pop
and
push
mov
push
mov
sub
pop
add
add
pop
jmp
pop
add
jmp
pop
xchg
mov
movzbl
push
jmp
pop
not
jmp
pop
and
mov
push
push
mov
addl
pop
push
mov
mov
xor
shl
jmp
mov
mov
sub
add
jmp
push
push
push
pop
xor
mov
pop
addl
subl
add
jmp
pop
add
jmp
pop
sub
mov
pushl
pop
jmp
pop
jmp
push
pushl
pop
popl
pop
mov
mov
subw
add
addw
mov
add
addw
addw
subw
jmp
popl
mov
push
push
mov
add
add
push
mov
mov
sub
add
pushl
pop
jmp
movzbw
pushw
mov
jmp
add
jmp
push
mov
addl
pop
sub
mov
push
jmp
sub
jmp
push
mov
add
mov
add
xor
pop
jmp
add
push
mov
jmp
or
jmp
sub
add
jmp
mov
push
pop
jmp
push
mov
jmp
sub
mov
mov
add
add
pushl
pop
add
xchg
jmp
push
jmp
push
pop
push
mov
mov
push
mov
jmp
add
add
pop
push
jmp
add
pushf
jmp
xor
jmp
add
pushl
pop
add
push
mov
mov
add
pop
jmp
mov
push
mov
sub
add
jmp
xor
pop
add
mov
add
jmp
sub
add
add
sub
add
pop
sub
mov
push
pushl
mov
sub
jmp
mov
and
jmp
add
jmp
pop
jmp
push
mov
sub
pop
add
jmp
popl
mov
sarb
pushf
jmp
jmp
pop
or
je
push
mov
sub
add
add
sub
add
mov
pushl
mov
push
push
mov
addl
mov
add
push
push
jmp
add
push
mov
jmp
pushl
mov
jmp
or
push
decl
jmp
neg
shl
xor
mov
pop
add
mov
add
jmp
inc
sub
push
mov
add
pop
add
sub
mov
add
add
jmp
mov
add
pushl
jmp
rorw
pushf
jmp
shl
jmp
add
sub
sub
pop
jmp
sub
pop
and
mov
add
shr
xor
xor
xor
xor
push
mov
push
mov
mov
add
sub
xchg
mov
mov
jmp
sub
jmp
mov
add
pop
add
jmp
not
xchg
inc
xor
jmp
mov
add
add
jmp
push
mov
push
mov
dec
neg
inc
jmp
xchg
pop
mov
movzbw
push
pushf
jmp
mov
mov
push
mov
push
mov
jmp
add
add
pop
mov
pop
xor
mov
add
jmp
mov
sub
mov
mov
add
sub
xchg
jmp
mov
add
sub
xchg
pop
mov
mov
xor
sub
pop
jmp
pop
push
push
mov
mov
sub
push
mov
jmp
xchg
jmp
push
addb
jmp
push
jmp
mov
push
pop
jmp
shr
xor
jmp
mov
push
mov
mov
jmp
add
jmp
pop
jmp
xor
sub
mov
add
pushl
pop
add
add
push
push
push
pop
shl
xor
not
jmp
pop
shl
sub
xor
push
mov
jmp
sub
pushl
pop
add
sub
jmp
mov
sub
jmp
pop
add
sub
pushl
pop
push
mov
jmp
mov
jmp
add
sub
sub
pop
push
mov
mov
shr
push
mov
push
notb
jmp
mov
or
pushl
pop
add
push
mov
sub
mov
mov
add
sub
xor
xor
xor
jmp
add
jmp
add
pop
jmp
mov
push
push
jmp
not
sub
sub
xor
pop
sub
mov
jmp
mov
mov
pop
jmp
mov
xor
movzbl
popw
jmp
add
push
mov
mov
push
mov
push
mov
dec
jmp
add
add
jmp
mov
mov
add
add
push
pushl
pop
popl
jmp
mov
mov
pop
add
add
pushl
pushl
pop
add
push
mov
add
add
xchg
mov
mov
jmp
mov
add
inc
push
mov
jmp
xor
jmp
mov
pop
add
mov
add
jmp
add
dec
sub
add
pop
push
jmp
mov
sub
xchg
pop
add
jmp
push
push
jmp
sub
pop
mov
pop
or
jmp
pop
or
push
mov
add
jmp
sub
mov
add
add
add
jmp
add
sub
pop
xor
xor
xor
jmp
pop
add
jmp
push
mov
push
mov
push
mov
mov
jmp
and
pop
push
mov
jmp
sub
mov
mov
inc
jmp
push
notl
mov
add
dec
push
mov
and
jmp
push
mov
neg
add
add
dec
jmp
pop
add
push
mov
add
mov
add
jmp
pop
push
xchg
not
xor
jmp
pop
push
mov
sub
pop
sub
mov
mov
inc
shr
add
sub
sub
add
jmp
sub
pop
push
mov
jmp
shl
and
not
push
push
mov
jmp
pop
sub
mov
jmp
sub
jmp
push
mov
jmp
push
mov
sub
add
pop
add
pop
add
push
jmp
mov
push
mov
jmp
jmp
mov
mov
push
mov
neg
jmp
shl
jmp
xor
mov
add
jmp
pop
pop
xchg
pop
mov
sub
mov
push
mov
add
jmp
xor
sub
mov
pop
add
mov
add
sub
sub
add
pop
pop
push
mov
jmp
add
pop
xchg
pop
mov
push
pushl
mov
add
add
push
mov
jmp
sub
mov
mov
add
pop
xchg
pop
pushl
jmp
add
jmp
pushl
pop
jmp
shr
shl
and
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
push
jmp
mov
xor
sub
pop
pushl
jmp
add
sub
xor
xor
xor
pop
jmp
push
mov
push
mov
jmp
add
jmp
push
jmp
mov
add
add
sub
mov
add
push
mov
push
push
mov
add
neg
jmp
not
sub
push
mov
add
sub
push
mov
and
jmp
mov
dec
dec
not
not
jmp
pop
add
jmp
mov
or
neg
jmp
add
sub
dec
xor
push
mov
xor
sub
mov
add
sub
add
pushl
pop
push
push
pop
push
jmp
sub
add
pop
push
jmp
mov
sub
mov
sub
mov
addl
mov
add
push
mov
push
push
jmp
push
mov
mov
mov
add
jmp
mov
push
mov
not
or
or
jmp
add
add
add
pop
push
push
mov
mov
pop
push
mov
dec
shl
xor
add
mov
push
mov
push
mov
jmp
mov
mov
push
mov
add
jmp
xor
add
pop
jmp
push
jmp
mov
push
mov
sub
add
jmp
xchg
pop
sub
mov
add
pop
sub
jmp
mov
add
xchg
pop
idiv
jmp
and
inc
dec
jmp
not
jmp
push
mov
xor
jmp
addl
mov
add
push
mov
jmp
sub
mov
mov
add
sub
jmp
mov
jmp
neg
neg
add
or
pop
jmp
sub
add
pop
pop
sub
add
jmp
pop
add
neg
or
shl
jmp
or
pop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
dec
add
xchg
jmp
add
add
jmp
add
jmp
pop
add
pop
sub
sub
jmp
negl
mov
push
mov
jmp
jmp
mov
sub
add
add
pop
push
mov
sub
pop
jmp
mov
mov
pop
pop
pop
xor
mov
push
mov
jmp
sub
mov
add
xor
jmp
push
pop
add
jmp
mov
push
mov
mov
sub
jmp
pop
push
mov
add
mov
add
push
pushl
mov
add
popl
mov
shll
jmp
add
push
mov
pushl
mov
sub
mov
mov
add
jmp
pop
jmp
sub
add
add
pop
mov
push
mov
add
push
mov
jmp
mov
pushl
pop
push
jmp
sub
pop
pop
mov
mov
jmp
pop
mov
push
mov
add
add
xchg
jmp
sub
xchg
mov
mov
mov
push
mov
push
jmp
xor
push
mov
jmp
pop
add
push
jmp
push
mov
mov
sub
pop
mov
add
jmp
or
push
jmp
lods
push
push
mov
mov
sub
push
negl
pop
add
push
jmp
xor
jmp
pop
pop
push
push
mov
push
pop
pop
add
sub
add
add
sub
jmp
add
add
xchg
pop
xor
add
sub
sub
pop
add
push
mov
jmp
push
push
mov
mov
pop
add
jmp
mov
sub
pop
push
notl
jmp
mov
add
add
pop
xor
jmp
xchg
jmp
add
sub
sub
sub
add
add
add
sub
mov
mov
add
sub
xchg
mov
mov
jmp
sub
pop
sub
push
push
mov
push
mov
inc
jmp
pushl
jmp
xor
jmp
mov
jmp
pop
neg
mov
pop
dec
shr
add
push
mov
mov
mov
pop
pop
dec
jmp
mov
subl
add
addl
pop
push
mov
sub
pop
add
addl
subl
pop
jmp
not
or
sub
mov
pop
and
or
shl
add
shl
add
add
pop
add
push
jmp
mov
popl
not
jmp
pop
mov
pop
sub
sub
add
jmp
push
mov
add
add
pushl
mov
push
mov
add
jmp
pushl
jmp
push
jmp
sub
add
sub
pushl
mov
jmp
mov
inc
jmp
add
pop
jmp
sub
mov
add
add
add
sub
add
sub
mov
mov
sub
pop
jmp
mov
jmp
mov
push
mov
add
sub
jmp
add
push
mov
jmp
pop
push
mov
add
jmp
pop
mov
pushw
pop
or
jmp
sub
pop
sub
push
mov
push
jmp
mov
not
or
shl
jmp
sub
mov
push
jmp
add
mov
jmp
mov
push
mov
jmp
mov
push
mov
mov
pushl
pop
add
mov
jmp
mov
mov
add
and
jmp
add
shr
sub
mov
pop
sub
push
mov
sub
sub
pop
add
add
jmp
add
pop
push
pushl
pop
jmp
pop
xor
xor
xor
add
pushl
pop
push
mov
push
mov
mov
jmp
mov
jmp
or
shl
add
xor
xor
mov
add
add
add
push
mov
mov
jmp
push
mov
jmp
add
pushl
pop
add
xchg
jmp
and
and
and
add
jmp
popl
pop
pop
xor
mov
add
jmp
shrb
pushf
jmp
sub
mov
mov
jmp
xchg
pop
mov
push
mov
not
sub
mov
mov
add
jmp
sub
add
or
mov
add
and
sub
add
pop
add
jmp
pop
popl
pop
push
push
pop
add
jmp
or
mov
add
sub
shr
push
mov
sub
push
xchg
not
xchg
pushl
pop
jmp
add
push
mov
jmp
add
jmp
push
jmp
push
jmp
xor
add
xor
mov
pop
sub
sub
push
mov
add
mov
add
pop
push
pushl
pop
popl
mov
jmp
push
mov
mov
push
mov
jmp
sub
xchg
pop
mov
mov
jmp
xor
push
mov
add
jmp
add
pushl
pop
add
and
mov
jmp
mov
push
push
mov
add
jmp
add
push
mov
sub
add
pop
jmp
and
shr
and
sub
sub
add
sub
sub
pop
jmp
mov
jmp
add
jmp
xor
xor
pop
mov
push
push
pop
mov
pop
xor
push
xorl
pop
jmp
mov
add
jmp
xor
xor
jmp
mov
mov
push
jmp
mov
add
mov
add
jmp
mov
mov
jmp
mov
push
push
pop
push
mov
neg
or
add
neg
shr
xor
add
pop
jmp
pop
add
pop
sub
add
jmp
add
pop
add
pop
jmp
dec
push
jmp
push
jmp
mov
add
pop
neg
add
push
mov
push
mov
jmp
xchg
jmp
mov
jmp
and
sub
or
pop
sub
add
jmp
mov
jmp
sub
pop
push
mov
xor
pop
jmp
sub
pop
xor
xor
jmp
sub
xchg
pop
sub
sub
pop
add
add
mov
add
sub
jmp
push
mov
jmp
not
xor
mov
pop
add
pop
pop
add
sub
add
pushw
jmp
add
add
sub
jmp
mov
add
jmp
pop
mov
mov
jmp
add
jmp
xchg
pop
pop
push
pushl
mov
push
mov
add
add
xchg
jmp
xor
xor
jmp
mov
push
mov
push
push
pop
push
mov
xor
xor
neg
not
not
sub
add
jmp
pop
and
jmp
or
pop
jmp
xor
jmp
mov
jmp
addl
sub
jmp
mov
shl
and
shr
shr
jmp
add
pop
jmp
xor
xor
xor
push
mov
add
sub
xchg
pop
mov
pushw
jmp
add
add
jmp
or
xor
add
jmp
push
mov
mov
add
push
mov
jmp
pop
push
pushl
jmp
push
mov
add
add
xchg
pop
push
mov
shl
add
sub
jmp
xor
xor
mov
push
mov
mov
push
mov
jmp
sub
shr
xor
xor
pop
sub
sub
mov
mov
add
pop
add
sub
pushl
pop
add
movzbl
pushl
push
push
jmp
mov
jmp
lods
add
push
jmp
pop
push
mov
push
mov
push
mov
mov
pop
pop
shr
sub
jmp
add
jmp
mov
jmp
mov
not
push
mov
and
xor
and
pop
add
xor
push
mov
add
pop
sub
jmp
add
mov
add
jmp
push
mov
shl
jmp
xchg
pop
mov
mov
add
pop
jmp
lods
jmp
pop
mov
add
mov
push
mov
jmp
push
pushl
pop
push
mov
add
add
xchg
pop
jmp
mov
jmp
push
jmp
sub
xchg
pop
mov
mov
mov
jmp
addl
mov
add
push
mov
sub
jmp
pop
sub
mov
mov
jmp
push
push
jmp
dec
jmp
mov
jmp
mov
jmp
pop
push
mov
add
sub
add
add
jmp
mov
sub
pop
neg
sub
sub
sub
add
pop
jmp
xor
xor
xor
pop
mov
mov
jmp
pop
xor
sub
add
add
mov
add
or
jmp
sub
push
jmp
popl
pop
mov
push
mov
sub
mov
addl
mov
jmp
mov
push
jmp
add
xchg
mov
not
push
push
pop
mov
jmp
mov
add
add
sub
jmp
sub
jmp
pop
sub
xor
jmp
pop
sub
mov
push
pushl
jmp
push
jmp
mov
push
mov
add
jmp
shl
xor
jmp
pop
xor
jmp
mov
jmp
not
push
mov
neg
or
add
dec
jmp
mov
pop
jmp
add
sub
jmp
mov
pop
push
mov
add
jmp
push
pop
add
add
xchg
pop
add
push
mov
jmp
xor
add
xor
pop
mov
jmp
mov
jmp
push
push
mov
jmp
add
pop
xchg
jmp
mov
or
or
dec
sub
add
mov
jmp
push
mov
jmp
lods
jmp
add
neg
add
xor
pop
add
shl
add
and
mov
add
jmp
add
push
push
jmp
add
jmp
sub
mov
pushl
pop
popl
pop
push
mov
sub
jmp
inc
jmp
add
mov
add
push
jmp
pop
add
pushl
pushl
jmp
add
sub
sub
jmp
jmp
add
mov
mov
add
mov
jmp
add
add
add
sub
jmp
xor
and
add
sub
pop
push
mov
sub
jmp
xchg
pop
and
mov
jmp
push
jmp
pushl
jmp
sub
jmp
mov
push
push
pop
push
mov
inc
sub
add
pop
push
mov
dec
or
push
mov
mov
or
pop
jmp
sub
mov
mov
dec
shr
add
xor
push
jmp
mov
jmp
mov
push
pop
jmp
mov
jmp
sub
jmp
and
add
sub
pop
pushl
mov
add
add
push
jmp
sub
pop
jmp
or
or
jmp
pop
push
jmp
mov
push
jmp
pop
xor
and
pop
push
mov
add
jmp
xchg
mov
jmp
xchg
jmp
mov
sub
mov
mov
or
xor
jmp
xor
pushl
pop
sub
mov
mov
push
mov
add
pop
add
push
pushl
pop
popl
jmp
sub
jmp
pop
push
mov
sub
jmp
not
jmp
neg
add
push
mov
xor
dec
jmp
sub
jmp
mov
mov
sub
pushl
pop
push
push
pop
add
jmp
mov
add
jmp
push
jmp
pop
pop
pop
jmp
mov
push
sub
mov
mov
mov
add
add
sub
pushl
pop
add
mov
mov
add
add
push
mov
jmp
sub
jmp
mov
sub
pop
add
add
pop
jmp
pushl
pop
add
mov
add
jmp
pushl
sub
mov
push
mov
jmp
subl
add
addl
push
mov
sub
jmp
sub
mov
jmp
add
subl
subl
jmp
xor
jmp
mov
push
sub
jmp
pop
push
push
pop
push
mov
jmp
add
add
jmp
sub
jmp
pop
add
sub
jmp
add
sub
jmp
add
xor
xor
jmp
xchg
pop
push
mov
push
jmp
neg
sub
mov
pop
add
push
mov
jmp
pushl
popf
pop
adc
pushf
jmp
push
jmp
pop
add
add
push
mov
mov
jmp
mov
add
push
mov
jmp
mov
mov
or
pop
shl
sub
jmp
shl
push
mov
sub
mov
pop
jmp
push
mov
shr
add
xor
sub
mov
mov
sub
pop
jmp
sub
push
jmp
pop
push
mov
add
mov
push
mov
add
add
xchg
pop
sub
push
jmp
pop
popl
pop
movswl
push
mov
add
jmp
add
jmp
pop
jmp
pop
add
jmp
mov
add
add
xchg
pop
pop
jmp
push
mov
mov
sub
pop
and
or
push
mov
add
pop
add
sub
sub
mov
add
xor
push
mov
add
pop
or
xor
xor
xor
not
xchg
push
mov
jmp
add
sub
mov
mov
push
jmp
push
jmp
add
add
xchg
mov
sub
jmp
push
jmp
add
jmp
mov
push
mov
or
jmp
mov
push
jmp
sub
pop
sub
push
jmp
sub
add
add
pop
add
pop
mov
add
jmp
pushl
jmp
pushl
jmp
mov
add
pop
push
push
mov
neg
jmp
pop
pop
xor
jmp
pop
jmp
pop
dec
jmp
inc
sub
jmp
shr
jmp
pushl
jmp
push
pushl
pop
popl
mov
jmp
push
mov
sub
push
sub
mov
add
push
jmp
add
xchg
jmp
sub
mov
add
add
add
jmp
push
mov
and
pop
add
jmp
pop
sub
pushl
mov
add
add
mov
add
jmp
add
mov
add
sub
push
mov
xor
sub
pop
jmp
push
jmp
push
jmp
mov
mov
push
mov
and
jmp
pushl
jmp
mov
add
push
jmp
pop
pop
sub
pop
xchg
jmp
add
sub
xchg
pop
mov
mov
add
add
xchg
jmp
push
push
jmp
push
push
mov
jmp
xor
pop
sub
mov
sub
mov
mov
push
mov
add
sub
push
jmp
sub
jmp
inc
not
push
jmp
push
push
mov
jmp
push
mov
push
mov
jmp
sub
add
jmp
pop
xor
pop
jmp
pop
xchg
mov
push
mov
and
add
jmp
pop
xor
mov
add
pushw
jmp
sub
mov
mov
jmp
push
mov
jmp
sub
jmp
pop
and
mov
push
mov
jmp
xor
xor
pop
mov
mov
jmp
add
jmp
add
pop
push
jmp
add
or
pop
jmp
push
push
push
jmp
xor
xor
xor
jmp
shl
xor
sub
jmp
not
jmp
sub
jmp
jmp
push
mov
push
sub
mov
push
push
pop
neg
xor
push
pop
pop
jmp
add
push
jmp
mov
add
pop
xchg
jmp
push
mov
add
pushl
pop
add
push
mov
add
sub
xor
xor
xor
pop
mov
pushl
pushl
jmp
add
pop
mov
jmp
sub
pop
shl
push
mov
jmp
push
mov
push
mov
jmp
shl
jmp
xchg
pop
sub
mov
addl
popl
addl
pushl
pop
push
jmp
xorl
jmp
mov
add
jmp
push
mov
xor
pop
push
jmp
add
jmp
xor
jmp
mov
sub
mov
jmp
and
pop
shl
or
neg
add
push
mov
mov
sub
pop
mov
pushl
pop
add
jmp
push
jmp
add
jmp
push
jmp
push
mov
sub
pop
pushl
pop
mov
push
mov
push
push
mov
push
pop
sub
jmp
pop
jmp
mov
jmp
push
mov
add
jmp
dec
not
jmp
inc
sub
jmp
shr
jmp
push
jmp
sub
xchg
jmp
push
mov
mov
add
add
xchg
pop
popl
pop
push
mov
add
mov
add
mov
push
jmp
push
mov
xor
jmp
mov
neg
add
add
pop
shr
not
push
jmp
push
push
mov
sub
shr
or
xchg
not
xchg
push
jmp
pop
push
mov
jmp
pop
push
jmp
push
push
mov
mov
pop
push
mov
mov
push
pop
mov
push
push
pop
add
add
xchg
pop
pop
sub
mov
pushl
pop
jmp
pop
sub
push
jmp
pop
push
mov
add
pop
xchg
pop
push
jmp
add
pushl
mov
push
mov
push
pushl
jmp
push
mov
mov
mov
pop
mov
add
not
push
mov
not
jmp
or
pop
jmp
add
jmp
mov
mov
pop
sub
mov
mov
jmp
jmp
mov
push
mov
jmp
add
and
jmp
subl
jmp
push
push
jmp
pop
push
mov
sub
dec
inc
push
mov
not
push
mov
not
mov
jmp
sub
shl
shl
add
push
jmp
sub
xor
xor
xor
mov
mov
jmp
pushl
pop
jmp
add
push
mov
jmp
pop
add
add
mov
add
add
pushl
pop
add
push
mov
mov
push
mov
dec
shr
add
jmp
and
pop
sub
add
add
push
push
mov
sub
jmp
pop
add
xchg
mov
push
push
mov
add
sub
mov
push
push
pop
jmp
add
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
popl
jmp
add
push
jmp
not
jmp
sub
mov
addl
pop
jmp
add
popl
mov
mov
sub
mov
jmp
and
push
mov
jmp
and
or
sub
push
notl
jmp
add
pop
push
mov
push
jmp
push
mov
sub
pop
push
mov
sub
pop
pop
xchg
pop
push
mov
sub
add
push
mov
jmp
mov
mov
jmp
pop
mov
jmp
add
pop
push
mov
add
and
jmp
add
jmp
push
mov
add
pop
xchg
mov
push
mov
shr
or
sub
jmp
pop
jmp
pop
add
pop
add
add
sub
sub
sub
push
mov
jmp
inc
shl
push
jmp
mov
mov
add
add
xchg
jmp
xchg
pop
mov
mov
push
mov
jmp
pop
push
mov
sub
jmp
mov
sub
push
popl
push
jmp
shl
xor
xor
sub
pop
sub
add
add
push
sub
mov
push
jmp
push
mov
sub
pop
xor
pop
sub
add
push
mov
jmp
push
mov
mov
pop
pop
and
jmp
push
mov
shr
push
xchg
push
notb
pop
xchg
jmp
mov
push
mov
jmp
pop
push
jmp
pop
and
mov
add
shr
push
push
mov
push
push
pop
mov
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
push
pop
push
jmp
mov
add
add
push
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
add
jmp
popl
jmp
push
push
mov
xchg
inc
xchg
sub
mov
pop
add
add
push
mov
sub
jmp
push
mov
shr
inc
jmp
add
sub
pop
sub
xchg
pop
mov
jmp
mov
push
mov
mov
mov
pop
mov
add
sub
add
jmp
mov
push
mov
xor
xor
sub
pop
add
add
jmp
mov
jmp
xor
xor
mov
push
mov
push
mov
push
mov
xor
shl
sub
push
mov
subl
mov
add
jmp
push
push
push
jmp
push
pop
jmp
push
jmp
mov
add
add
jmp
pop
add
sub
add
add
jmp
jmp
mov
jmp
pop
pushl
pop
push
mov
add
add
jmp
xchg
not
xchg
dec
or
xor
pushw
mov
jmp
pop
push
jmp
mov
push
jmp
push
pop
add
jmp
push
mov
subl
sub
addl
pop
pop
pushl
pop
add
add
push
mov
jmp
add
pop
add
jmp
pop
jmp
push
jmp
add
jmp
mov
and
sub
sub
mov
jmp
pop
and
pushl
mov
push
mov
jmp
mov
shl
neg
jmp
add
sub
sub
mov
add
jmp
push
pop
jmp
sub
mov
add
xor
xor
xor
pop
incb
pushf
jmp
add
mov
add
movzbl
mov
jmp
xor
shr
jmp
push
jmp
addl
push
jmp
add
mov
add
push
pushl
pop
popl
mov
bswap
push
mov
jmp
push
push
mov
mov
pop
or
xor
add
jmp
pushl
pop
jmp
sub
mov
pushl
mov
add
popl
mov
push
mov
jmp
xor
jmp
and
push
jmp
pop
xor
jmp
mov
mov
sub
push
jmp
pop
add
sub
mov
mov
jmp
pop
mov
jmp
sub
mov
add
xor
mov
jmp
mov
sub
mov
jmp
xchg
pop
jmp
xor
xor
xor
mov
xor
pushf
jmp
xchg
inc
sub
add
pushl
pop
jmp
mov
push
mov
add
add
jmp
mov
sub
mov
push
jmp
mov
add
add
push
mov
sub
pop
pop
add
xchg
pop
push
mov
add
pushl
pop
jmp
pop
push
mov
shr
add
add
pop
jmp
pop
jmp
mov
not
mov
pop
shl
jmp
pop
add
push
pushl
mov
add
jmp
popl
not
xchg
jmp
add
add
xchg
pop
pushl
pop
jmp
mov
jmp
pop
jmp
push
jmp
and
pop
or
shl
push
mov
add
push
jmp
add
add
sub
sub
sub
pop
pop
jmp
mov
add
xchg
mov
mov
jmp
or
or
xor
jmp
inc
add
inc
push
jmp
mov
sub
not
jmp
xchg
mov
mov
jmp
add
jmp
mov
add
add
pop
sub
mov
mov
sub
add
push
mov
add
pop
jmp
shl
and
jmp
dec
shr
and
sub
push
mov
jmp
add
pushl
jmp
pop
add
add
push
pushl
jmp
pushl
pop
push
mov
push
jmp
sub
jmp
negl
pushf
jmp
pop
mov
pop
xor
add
pop
sub
mov
jmp
push
push
jmp
mov
push
push
pop
add
sub
xor
xor
xor
mov
mov
mov
jmp
pop
xchg
pop
push
popl
jmp
mov
push
mov
mov
sub
push
decl
mov
add
xor
xor
xor
push
mov
add
sub
sub
pop
xchg
push
jmp
mov
push
mov
push
mov
jmp
xor
sub
add
add
mov
jmp
add
push
mov
add
sub
add
jmp
pop
jmp
xor
add
sub
sub
mov
add
push
mov
jmp
push
mov
add
jmp
popl
jmp
mov
push
mov
push
pop
add
jmp
pop
jmp
pop
jmp
add
jmp
mov
push
push
pop
push
mov
push
mov
mov
push
mov
shl
jmp
mov
add
sub
sub
jmp
sub
mov
jmp
add
mov
push
mov
push
pop
push
mov
xor
xor
add
pop
jmp
xor
xor
xor
pop
mov
jmp
mov
push
mov
add
jmp
pop
xor
pushw
jmp
dec
and
sub
push
jmp
sub
pop
xchg
mov
jmp
shr
jmp
add
pushl
pushl
mov
add
push
mov
add
push
jmp
xor
jmp
mov
jmp
add
jmp
add
push
mov
pushl
jmp
pop
xchg
jmp
mov
jmp
mov
mov
mov
add
add
add
sub
mov
mov
jmp
add
mov
jmp
push
mov
and
sub
jmp
sub
pop
pop
neg
jmp
mov
push
jmp
push
push
mov
jmp
mov
sub
mov
push
mov
mov
jmp
sub
pop
sub
add
add
push
mov
push
mov
jmp
inc
sub
add
mov
add
sub
jmp
pop
jmp
sub
mov
mov
jmp
sub
push
jmp
mov
mov
sub
mov
mov
push
push
pop
add
jmp
add
add
pop
add
jmp
add
pop
sub
mov
push
push
push
mov
not
and
add
mov
pop
mov
pop
not
sub
jmp
pop
add
add
add
push
pushl
jmp
sub
add
pop
sub
add
add
mov
push
jmp
pop
push
mov
sub
pop
push
mov
sub
add
sub
pop
add
pop
neg
xor
add
pop
sub
add
add
pop
neg
xor
jmp
mov
mov
push
jmp
mov
jmp
sub
pop
sub
pushl
pop
jmp
add
mov
jmp
push
pop
add
jmp
pushl
pushl
pop
add
push
push
push
jmp
push
jmp
push
jmp
mov
mov
jmp
pop
jmp
jmp
mov
push
mov
jmp
shr
jmp
xor
xor
xor
pop
sarw
pushf
jmp
push
push
push
pop
sub
mov
pop
shr
xor
push
mov
xor
mov
push
mov
add
add
xchg
jmp
push
mov
push
jmp
push
mov
jmp
push
jmp
mov
pushl
pop
sub
mov
push
pop
jmp
mov
xor
neg
sub
sub
pop
jmp
lods
jmp
pop
push
mov
mov
pushl
jmp
push
mov
push
mov
add
jmp
push
mov
mov
pushw
mov
mov
sub
mov
add
not
jmp
add
pop
xchg
pop
push
mov
sub
jmp
mov
push
jmp
mov
add
pop
sub
mov
mov
jmp
push
jmp
mov
jmp
neg
jmp
shr
jmp
xchg
jmp
add
push
push
pop
push
mov
neg
inc
shr
sub
sub
add
add
pop
push
mov
add
sub
xchg
pop
mov
push
pop
add
add
push
mov
sub
pop
mov
jmp
xchg
pop
mov
mov
jmp
pushl
jmp
mov
jmp
mov
push
mov
xor
push
mov
jmp
push
pop
not
inc
and
or
jmp
sub
sub
mov
jmp
sub
add
push
jmp
pop
popl
mov
push
mov
jmp
add
add
jmp
sub
sub
add
pop
pop
add
sub
pop
jmp
push
mov
push
mov
add
add
push
pushl
pop
popl
jmp
add
dec
add
push
push
pop
push
mov
add
pop
sub
sub
push
mov
not
and
inc
push
jmp
pop
popl
mov
mov
push
jmp
popl
mov
btr
pushf
jmp
push
mov
sub
jmp
neg
push
mov
and
pop
not
not
jmp
push
mov
add
jmp
pop
mov
mov
or
add
neg
sub
sub
pop
sub
jmp
pop
add
push
mov
add
pop
push
push
push
push
mov
mov
jmp
push
mov
jmp
push
pop
add
jmp
push
jmp
neg
xor
jmp
mov
push
jmp
mov
jmp
sub
pop
pushl
pop
add
sub
xor
xor
jmp
push
mov
add
add
add
push
pushl
jmp
push
push
mov
dec
dec
xor
mov
pop
sub
jmp
add
jmp
xor
xor
xor
pop
movzwl
push
mov
sub
jmp
add
sub
jmp
push
mov
jmp
mov
jmp
push
mov
push
mov
jmp
pop
pushl
pop
add
xor
xor
xor
jmp
neg
neg
xor
jmp
mov
mov
push
mov
or
mov
jmp
push
mov
add
xor
jmp
mov
push
pop
sub
jmp
sub
pop
mov
add
push
sub
mov
mov
mov
add
pop
add
mov
push
mov
add
add
jmp
push
mov
jmp
popl
pop
jmp
mov
jmp
sub
jmp
mov
mov
pop
jmp
add
push
pushl
pop
popl
pop
sub
xchg
mov
mov
push
pop
and
pushl
mov
add
jmp
mov
shl
jmp
jmp
add
push
jmp
pushl
popf
pop
rcrb
pushf
jmp
mov
jmp
add
push
mov
not
push
mov
jmp
pop
add
push
mov
sub
pop
jmp
pop
push
push
mov
mov
pop
add
pop
pop
mov
add
sub
sub
add
add
push
mov
jmp
add
push
push
jmp
pop
mov
add
jmp
pop
jmp
add
xor
sub
mov
mov
push
mov
jmp
push
mov
add
jmp
xor
pop
neg
dec
jmp
sub
addl
subl
pushl
pop
add
sub
push
mov
subl
add
jmp
popl
mov
pushl
jmp
mov
push
jmp
push
mov
add
jmp
pop
and
or
jmp
pop
sub
push
mov
add
pop
add
sub
pop
jmp
pop
jmp
push
mov
jmp
push
jmp
pop
add
add
jmp
or
push
push
jmp
pop
add
push
push
mov
add
sub
xchg
pop
sub
mov
jmp
add
push
mov
sub
pop
mov
push
jmp
popl
jmp
pop
inc
or
sub
jmp
add
jmp
pop
and
mov
add
and
push
jmp
push
mov
add
sub
mov
mov
jmp
pushl
pushl
mov
add
push
mov
jmp
push
push
jmp
xor
push
mov
add
pop
jmp
push
mov
mov
jmp
sub
mov
push
mov
mov
jmp
mov
sub
jmp
mov
add
add
xchg
pop
add
jmp
pop
sub
jmp
mov
jmp
push
mov
jmp
shl
neg
jmp
mov
sub
and
xor
sub
mov
add
push
jmp
mov
jmp
add
xor
pop
and
pop
xor
sub
add
add
pop
movzbl
pushl
sub
jmp
add
push
mov
add
jmp
xor
jmp
sub
sub
pop
sub
xor
add
add
push
mov
jmp
add
sub
add
add
sub
std
sub
jmp
mov
dec
neg
jmp
pushl
pop
popl
pop
sub
sub
jmp
add
push
mov
push
mov
sub
pop
sub
add
jmp
mov
push
push
pop
add
jmp
xor
jmp
sub
jmp
mov
add
sub
add
add
pop
push
mov
jmp
not
push
mov
jmp
add
xor
xor
xor
pop
push
mov
jmp
shr
and
neg
add
sub
pop
sub
add
add
add
pop
push
mov
pushl
pop
jmp
pop
mov
push
push
pop
not
neg
sub
mov
mov
jmp
push
popl
jmp
push
mov
push
jmp
popl
pop
jmp
pop
shr
xor
jmp
pop
push
mov
push
mov
shr
xor
add
pop
xor
jmp
pop
not
add
add
jmp
mov
jmp
shl
add
shl
xor
add
pop
push
mov
add
pop
xchg
pop
jmp
mov
pop
sub
push
mov
jmp
sub
jmp
add
inc
not
and
jmp
mov
sub
jmp
pop
and
jmp
pop
push
mov
xor
or
add
jmp
pushl
pop
add
xor
mov
push
mov
add
jmp
sub
shl
neg
push
mov
add
jmp
add
sub
pushl
pop
add
push
mov
pushl
mov
add
popl
mov
sub
mov
push
mov
mov
not
shr
sub
jmp
mov
push
jmp
push
mov
add
jmp
xchg
jmp
add
add
push
mov
and
pop
push
incl
pop
xor
inc
dec
jmp
add
jmp
add
sub
xchg
pop
jmp
sub
mov
push
mov
inc
jmp
mov
pop
and
sub
neg
not
push
mov
add
add
sub
pop
push
mov
shl
push
jmp
mov
mov
add
jmp
add
pop
jmp
mov
pop
add
mov
jmp
push
jmp
mov
mov
add
sub
xchg
pop
jmp
pop
jmp
mov
mov
sub
mov
jmp
mov
add
push
mov
mov
pop
jmp
xor
pop
jmp
mov
mov
pop
pop
mov
pushl
pop
jmp
mov
add
add
xchg
jmp
mov
jmp
lods
xor
push
mov
push
mov
sub
jmp
pop
push
mov
push
pushl
pop
jmp
not
add
add
add
push
push
mov
mov
add
pop
sub
pop
pop
jmp
add
jmp
push
mov
mov
mov
add
jmp
add
add
jmp
mov
xor
pop
or
shl
neg
shl
xor
mov
pop
jmp
sub
pop
xor
jmp
sub
pop
push
mov
add
pushl
xorl
pop
sub
mov
push
jmp
addl
mov
add
push
mov
jmp
xchg
mov
or
je
sub
mov
push
pushl
pop
push
mov
add
add
xchg
jmp
pop
sub
mov
mov
push
xchg
jmp
add
jmp
xchg
pop
xor
shr
xor
add
push
mov
jmp
and
pop
shr
sub
sub
add
add
add
sub
sub
jmp
sub
xchg
jmp
neg
push
mov
sub
and
push
jmp
add
pop
jmp
mov
add
add
pushl
pop
push
mov
add
add
xor
xor
xor
pop
pushl
mov
add
jmp
mov
pop
sub
jmp
mov
add
add
jmp
pushl
pop
add
push
jmp
add
mov
push
mov
push
mov
sub
or
sub
neg
jmp
mov
add
pop
push
push
jmp
xchg
mov
jmp
mov
jmp
popl
mov
push
mov
add
and
or
jmp
pushl
pushl
jmp
pop
popl
jmp
mov
push
mov
jmp
pop
add
pushl
mov
add
add
pushl
jmp
mov
mov
add
pop
push
jmp
push
mov
jmp
pop
sub
mov
sub
mov
jmp
sub
add
jmp
shr
neg
sub
sub
jmp
xchg
jmp
pop
jmp
sub
jmp
mov
and
shr
add
neg
sub
sub
jmp
push
pushl
mov
add
popl
mov
mov
push
mov
sub
mov
push
jmp
add
pushf
jmp
add
xchg
jmp
push
mov
add
sub
xchg
pop
mov
jmp
mov
sub
shr
not
sub
and
push
mov
jmp
push
jmp
mov
pop
inc
xor
push
mov
add
jmp
mov
sub
sub
mov
pop
mov
pop
jmp
or
not
shr
push
mov
xor
pop
jmp
push
jmp
add
and
push
mov
or
dec
jmp
pop
and
sub
sub
add
add
jmp
add
jmp
add
add
push
mov
jmp
mov
jmp
xor
mov
jmp
sub
mov
jmp
add
jmp
push
mov
jmp
mov
push
mov
jmp
add
add
xchg
jmp
shr
push
mov
mov
jmp
pop
mov
jmp
mov
jmp
sub
sub
pop
sub
jmp
sub
push
jmp
pop
jmp
mov
xchg
sub
mov
notl
pop
jmp
push
pop
push
jmp
push
pop
add
sub
xchg
pop
jmp
mov
dec
jmp
mov
bts
pushf
jmp
add
jmp
pop
pop
sub
jmp
pop
add
push
mov
shr
shr
jmp
shl
and
jmp
shl
shr
add
mov
pop
add
jmp
or
pushl
pop
add
jmp
xchg
mov
jmp
add
push
mov
mov
sub
sub
jmp
push
jmp
sub
add
shr
jmp
add
sub
mov
add
jmp
add
mov
push
mov
push
mov
not
or
and
neg
or
add
jmp
push
jmp
push
pop
add
jmp
mov
push
mov
add
push
mov
add
pop
xchg
pop
push
mov
sub
pop
pop
sub
jmp
sub
push
mov
sub
sub
add
pop
add
add
add
pushl
jmp
pushl
pop
add
push
mov
add
add
xchg
pop
sub
mov
mov
jmp
push
mov
dec
sub
dec
jmp
push
mov
jmp
add
add
xchg
pop
add
sub
pushl
pop
add
push
push
push
mov
sub
mov
jmp
add
sub
pop
xor
sub
mov
add
xor
movzwl
jmp
notl
mov
push
mov
add
add
xchg
pop
xor
xor
xor
pushl
jmp
not
jmp
shr
sub
mov
push
mov
xor
neg
shr
or
shl
xor
mov
jmp
mov
push
mov
sub
push
jmp
or
xchg
not
xchg
inc
xor
sub
jmp
push
mov
jmp
pop
sub
add
push
mov
push
mov
and
or
sub
xor
mov
pop
add
pop
mov
jmp
push
mov
push
push
jmp
lods
push
mov
add
jmp
xor
xor
jmp
mov
add
add
push
pushl
jmp
sub
add
add
mov
jmp
xor
pop
and
jmp
mov
pushl
pop
jmp
mov
add
xor
pop
mov
push
push
pop
jmp
push
push
pop
jmp
add
xor
xor
jmp
push
pop
inc
shl
sub
xor
mov
pop
jmp
pop
sub
mov
push
mov
add
add
xchg
jmp
mov
push
mov
push
mov
add
sub
xchg
mov
mov
addl
mov
add
push
push
mov
shr
jmp
pop
jmp
push
mov
jmp
sub
push
jmp
add
add
pop
mov
pop
shl
jmp
pop
push
mov
inc
sub
sub
pop
sub
jmp
pop
push
push
jmp
xor
jmp
xor
add
pushl
pop
add
push
jmp
add
sub
mov
mov
jmp
xor
neg
jmp
pushl
popf
pop
sbb
pushf
jmp
push
pop
push
mov
xor
pop
sub
jmp
pop
push
pushl
mov
jmp
add
sub
sub
sub
push
mov
jmp
mov
sub
pop
shr
not
push
mov
sub
pop
sub
mov
push
jmp
add
add
xchg
pop
push
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
sub
pushl
pop
add
jmp
addl
jmp
add
jmp
mov
push
pop
sub
pop
sub
and
pushl
jmp
xchg
pop
add
sub
mov
pushl
jmp
add
jmp
sub
mov
jmp
xor
add
pop
add
pop
and
dec
xor
and
pop
push
mov
mov
xor
jmp
mov
sub
jmp
add
add
pop
add
add
sub
mov
mov
sub
pop
push
push
mov
push
mov
add
sub
push
mov
jmp
mov
jmp
xchg
pop
sub
mov
jmp
lods
push
push
mov
push
mov
dec
dec
xor
inc
jmp
mov
add
jmp
sub
neg
inc
add
not
or
inc
jmp
pop
jmp
add
xchg
mov
push
mov
add
sub
jmp
and
push
mov
shl
xor
or
pop
inc
jmp
push
mov
push
jmp
mov
push
mov
add
add
sub
mov
add
jmp
mov
jmp
popl
jmp
sub
mov
mov
jmp
mov
add
jmp
mov
jmp
xchg
pop
sub
sub
jmp
mov
jmp
mov
add
push
mov
jmp
pop
push
mov
xor
xor
or
pop
jmp
push
pop
add
add
xchg
mov
add
push
push
mov
mov
jmp
div
push
jmp
push
mov
jmp
add
jmp
sub
pop
jmp
pop
or
jmp
xor
dec
shl
sub
or
or
sub
dec
dec
sub
add
pop
sub
mov
mov
add
pushl
jmp
jmp
push
mov
add
add
push
mov
jmp
or
xor
jmp
sub
sub
add
add
pop
sub
jmp
xor
mov
movzbw
push
mov
push
pop
push
mov
push
jmp
notl
mov
push
mov
add
add
xchg
jmp
jmp
mov
mov
mov
jmp
mov
pop
push
mov
push
jmp
and
shl
sub
add
pop
push
jmp
add
jmp
pushl
pop
push
mov
jmp
push
mov
addl
pop
add
add
xchg
mov
jmp
xor
xor
xor
mov
push
push
pop
add
push
jmp
sub
add
mov
add
push
mov
push
mov
mov
mov
add
add
mov
add
xchg
pop
sub
pushf
jmp
pop
jmp
sub
jmp
add
add
pop
jmp
add
pop
xchg
pop
pop
ret
jmp
mov
pop
mov
pop
jmp
mov
mov
add
pop
jmp
pop
push
mov
sub
sub
sub
jmp
jmp
sub
jmp
mov
jmp
mov
mov
add
add
pushl
pop
add
jmp
add
xchg
mov
mov
jmp
mov
jmp
add
jmp
pop
jmp
add
add
sub
pop
push
mov
push
jmp
push
jmp
pop
pop
sub
jmp
sub
push
jmp
mov
inc
sub
shr
sub
jmp
mov
pushl
pushl
jmp
pop
mov
add
sub
sub
add
pop
jmp
add
pop
xchg
pop
push
mov
and
neg
jmp
push
push
pop
add
add
push
mov
pushl
jmp
add
sub
pop
add
pop
xor
mov
jmp
mov
add
sub
mov
mov
add
jmp
popl
pop
xchg
mov
xor
pushf
jmp
mov
sub
pop
mov
push
jmp
push
mov
sub
jmp
add
add
sub
jmp
push
push
jmp
push
jmp
shl
inc
sub
jmp
mov
jmp
mov
pushl
mov
push
mov
add
add
xchg
pop
popl
jmp
add
pop
add
push
mov
mov
add
sub
jmp
pop
sub
mov
pop
push
sub
mov
mov
mov
sub
pop
push
mov
add
mov
add
sub
pushl
pop
push
push
pop
push
mov
jmp
sub
jmp
jmp
pushl
pop
popl
mov
pop
sub
mov
mov
and
jmp
mov
add
push
mov
mov
push
jmp
xor
mov
pop
add
add
jmp
pop
xor
sub
pop
push
jmp
popl
pop
or
shl
sub
mov
push
mov
mov
mov
add
dec
jmp
push
push
jmp
pop
jmp
mov
jmp
push
mov
sub
pop
and
mov
add
add
sub
pop
jmp
pop
add
pop
push
mov
jmp
add
mov
add
sub
jmp
push
mov
add
jmp
and
pushl
pop
push
push
pop
jmp
shl
or
shr
dec
jmp
mov
push
push
pop
sub
mov
jmp
sub
push
jmp
mov
mov
and
mov
add
push
mov
sub
mov
pop
push
mov
shr
sub
add
pop
jmp
sub
jmp
add
pop
jmp
mov
add
jmp
push
mov
push
mov
sub
add
sub
push
jmp
shl
shr
jmp
sub
pop
jmp
mov
add
xchg
pop
test
pushf
jmp
pushl
pop
push
mov
jmp
add
jmp
xchg
jmp
pop
add
not
shr
jmp
xchg
pop
add
add
add
push
push
push
pop
neg
jmp
pushl
pop
jmp
mov
add
push
push
pop
jmp
sub
jmp
pushl
pop
push
mov
add
add
xchg
pop
add
push
push
pop
add
sub
xchg
pop
mov
push
jmp
mov
push
pushl
mov
add
push
jmp
add
sub
jmp
sub
mov
jmp
shl
or
or
jmp
sub
mov
pop
xor
pop
pushl
pushl
pop
jmp
mov
mov
mov
pop
sub
mov
jmp
pop
add
push
mov
add
pop
sub
jmp
sub
add
push
mov
add
pop
jmp
push
push
mov
add
mov
jmp
add
push
mov
mov
pop
pop
push
mov
push
mov
jmp
pushl
xorl
jmp
pop
add
add
jmp
shl
push
jmp
pop
push
mov
shl
dec
jmp
pop
push
mov
jmp
add
jmp
push
mov
neg
not
xchg
jmp
add
add
push
decl
pushl
jmp
add
add
pop
sub
mov
mov
add
jmp
mov
add
sub
xchg
pop
mov
mov
push
mov
jmp
pop
jmp
pop
jmp
mov
shl
jmp
add
jmp
add
push
push
mov
jmp
jmp
pop
shl
shr
jmp
push
push
pop
add
push
mov
jmp
jmp
lahf
mov
or
xor
or
movsl
or
pop
cmpsb
or
push
movsl
or
push
cmpsb
or
insb
movsl
or
mov
or
inc
cmpsb
or
inc
movsl
or
push
movsl
or
cmc
movsl
or
clc
movsl
or
mulb
or
sub
or
dec
movsl
or
push
movsl
or
aas
cmpsb
or
shlb
or
inc
movsl
or
std
movsb
or
repnz
or
loopne
or
or
or
mov
movsl
or
and
movsl
or
or
or
mov
movsl
or
in
movsl
or
xor
or
jno
or
jns
or
cmpsb
or
cmc
movsl
or
inc
movsl
or
sub
or
jg
or
outsb
movsl
or
push
movsl
or
or
or
shlb
or
or
or
cmpsb
or
push
movsl
or
pop
cmpsb
or
cmp
or
jbe
or
cli
movsl
or
sub
or
and
movsl
or
inc
cmpsb
or
stos
movsl
or
jmp
or
jae
or
or
or
sti
movsl
or
and
or
add
or
in
movsb
or
fisubs
or
movsw
or
shlb
or
shlb
or
outsl
movsl
or
xchg
movsl
or
ljmp
push
shll
or
fsubs
or
mov
movsl
or
mulb
and
movsl
or
loopne
or
xor
or
pop
movsl
or
ljmp
repnz
movsl
or
hlt
movsb
or
adc
or
jnp
or
pusha
movsl
or
push
cmpsb
or
pop
cmpsb
or
inc
movsl
or
movsl
or
mov
or
cld
movsb
or
mov
movsl
or
sub
or
sbb
or
andl
add
movsl
or
mov
movsl
or
out
or
and
or
in
movsb
or
imul
or
xchg
movsl
or
cmpsb
or
dec
movsl
or
in
movsb
or
jae
or
pop
movsl
or
jmp
or
adc
movsl
or
hlt
movsl
or
cmp
or
xor
movsb
or
sub
or
movsl
or
lret
movsl
or
jne
or
fisubs
or
add
cmpsb
or
cmp
or
xor
or
movsl
movsl
or
mov
movsl
or
in
movsl
or
sti
movsl
or
mov
or
add
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
jmp
push
mov
push
mov
push
xchg
jmp
push
mov
jmp
push
mov
push
mov
push
jmp
or
sub
xor
mov
mov
add
add
mov
sub
mov
mov
add
jmp
mov
dec
inc
xor
jmp
pop
add
add
sub
mov
pushl
mov
add
popl
pop
and
pushf
jmp
xorl
pop
xor
mov
jmp
push
pop
push
mov
mov
pop
jmp
add
jmp
not
jmp
mov
jmp
xchg
mov
jmp
push
pop
inc
push
push
push
pop
neg
not
add
push
mov
mov
pop
jmp
sub
add
jmp
pop
push
mov
jmp
sub
push
mov
push
mov
xor
shr
dec
not
sub
sub
jmp
inc
shr
or
jmp
mov
push
pop
jmp
jmp
mov
push
pop
pop
not
xchg
inc
jmp
add
xchg
jmp
sub
jmp
mov
mov
push
mov
add
and
push
mov
add
dec
add
sub
and
pop
jmp
add
sub
pop
add
jmp
xchg
pop
add
jmp
sub
add
add
jmp
pop
jmp
push
popl
push
push
mov
push
mov
mov
add
pop
jmp
add
push
push
pop
neg
jmp
push
push
push
jmp
subl
add
push
mov
add
pop
jmp
sub
jmp
add
jmp
sub
pop
push
jmp
mov
jmp
xchg
pop
jmp
add
push
mov
jmp
push
jmp
mov
jmp
mov
sub
mov
jmp
push
mov
sub
pop
xchg
mov
mov
jmp
xor
xor
mov
rorl
pushf
jmp
pop
push
jmp
xor
add
pop
xchg
pop
jmp
push
mov
and
push
push
mov
jmp
mov
push
push
pop
sub
mov
pop
push
mov
sub
pop
push
mov
sub
sub
sub
pop
sub
push
mov
jmp
mov
push
incl
pop
add
sub
add
mov
add
jmp
add
sub
xchg
pop
jmp
pop
xor
xor
xor
mov
mov
mov
push
subl
pop
jmp
mov
add
mov
add
jmp
sub
pop
jmp
pop
mov
jmp
push
mov
jmp
mov
jmp
mov
push
jmp
push
jmp
sub
jmp
xor
pop
pushl
mov
add
push
jmp
mov
jmp
or
or
sub
add
mov
jmp
xchg
pop
mov
jmp
lods
xor
jmp
mov
mov
push
mov
jmp
xor
sub
pop
push
jmp
sub
mov
mov
xor
shl
sub
sub
or
push
push
mov
jmp
mov
sub
pop
push
pushl
pop
popl
mov
jmp
pushl
popf
pop
adc
pushf
jmp
mov
add
mov
add
add
push
pushl
pop
jmp
pop
add
pushl
mov
add
add
add
jmp
push
mov
or
pop
xor
or
xor
sub
pop
sub
jmp
add
jmp
mov
jmp
push
mov
addl
pop
push
mov
jmp
pop
shl
add
neg
dec
not
jmp
add
sub
sub
add
sub
push
mov
xor
add
add
pop
sub
push
mov
push
push
mov
push
mov
mov
jmp
sub
xor
mov
pop
add
mov
add
xchg
mov
sub
mov
push
mov
mov
add
jmp
push
jmp
mov
sub
mov
push
pop
push
mov
mov
push
push
jmp
or
mov
jmp
mov
mov
push
mov
push
pushl
jmp
xor
mov
pop
jmp
push
mov
sub
not
jmp
mov
push
jmp
add
add
push
push
jmp
xor
jmp
pushl
popf
pop
rcrl
pushf
jmp
popw
jmp
add
sub
xor
xor
xor
jmp
mov
push
pop
add
push
mov
jmp
mov
xchg
not
xchg
jmp
sub
xor
jmp
add
mov
add
add
pushl
mov
add
push
mov
add
jmp
push
jmp
push
jmp
sub
mov
add
push
mov
mov
shl
jmp
push
jmp
mov
pushl
jmp
pop
jmp
sub
add
add
pop
sub
add
add
mov
add
sub
pop
push
addl
jmp
sub
jmp
xor
jmp
pop
add
sub
add
pushl
mov
add
jmp
add
xchg
pop
add
add
add
jmp
neg
jmp
xchg
mov
mov
push
mov
add
jmp
add
pop
jmp
mov
sub
jmp
sub
pop
push
mov
and
and
or
jmp
mov
mov
pop
mov
mov
add
and
pushl
jmp
add
sub
xor
xor
jmp
pop
jmp
mov
push
mov
push
mov
jmp
xchg
jmp
mov
pushl
mov
jmp
pop
shr
add
jmp
sub
add
add
jmp
mov
push
mov
add
add
xchg
pop
push
mov
jmp
push
mov
jmp
push
pop
sub
mov
push
jmp
mov
notb
jmp
add
sub
add
sub
pop
jmp
xor
mov
pop
shl
dec
xor
add
sub
add
jmp
not
inc
not
jmp
push
mov
push
mov
add
pop
mov
add
sub
jmp
mov
add
add
push
jmp
mov
mov
add
add
xchg
pop
jmp
pop
add
pop
push
push
mov
mov
pop
sub
add
jmp
pop
add
xor
pop
mov
add
sub
xor
jmp
push
mov
push
pop
jmp
xor
mov
bts
pushf
jmp
add
add
push
jmp
mov
jmp
mov
push
mov
inc
shl
and
add
mov
pop
sub
pushl
pop
jmp
mov
jmp
inc
jmp
sub
jmp
pop
jmp
push
mov
add
add
push
mov
push
mov
mov
jmp
add
jmp
and
jmp
add
pop
add
jmp
addl
jmp
sub
jmp
add
push
jmp
push
mov
jmp
mov
jmp
pushl
pop
popl
jmp
mov
movl
jmp
mov
jmp
mov
mov
shl
push
sub
mov
jmp
pushl
jmp
mov
mov
jmp
dec
jmp
pop
xchg
mov
or
pushf
jmp
add
push
mov
sub
mov
add
jmp
push
mov
push
mov
add
pop
popl
addl
popl
push
mov
push
mov
add
pop
add
subl
pop
pop
jmp
xor
not
sub
and
pop
inc
push
push
mov
mov
add
pop
add
add
sub
pop
sub
add
add
pop
mov
push
push
jmp
sub
add
pop
sub
jmp
sub
mov
pop
jmp
mov
push
jmp
sub
add
sub
pop
shl
jmp
mov
jmp
add
jmp
pop
jmp
popl
pop
jmp
add
add
pop
add
push
push
push
mov
mov
jmp
sub
push
jmp
pop
mov
mov
push
mov
inc
shl
push
jmp
push
mov
push
jmp
xor
xor
jmp
pushl
pop
sub
mov
push
mov
add
sub
xchg
jmp
add
pop
sub
pop
sub
push
mov
jmp
mov
jmp
add
add
and
not
sub
add
jmp
add
xor
xor
xor
pop
mov
push
push
jmp
xor
xor
xor
mov
jmp
mov
jmp
dec
xor
xchg
not
xchg
push
mov
or
sub
sub
pop
jmp
add
mov
mov
add
jmp
mov
jmp
push
push
push
pushl
pop
push
push
pop
add
push
mov
add
pop
push
pushl
pop
jmp
mov
mov
jmp
mov
add
push
mov
and
jmp
pop
jmp
push
push
push
jmp
pop
popl
mov
add
pushf
jmp
mov
add
jmp
push
mov
push
jmp
sub
push
popl
push
mov
push
pop
add
jmp
mov
sub
pop
neg
shr
sub
sub
neg
add
sub
pop
xor
jmp
push
push
mov
add
push
mov
sub
pop
push
push
jmp
mov
jmp
mov
shr
sub
add
pushl
pop
push
mov
mov
add
jmp
or
jmp
or
jmp
sub
mov
add
pop
add
pop
jmp
mov
push
sub
mov
mov
xor
not
and
jmp
pop
mov
jmp
mov
add
add
push
mov
xor
and
add
add
jmp
push
push
pop
jmp
push
mov
jmp
mov
jmp
mov
not
mov
pop
sub
sub
pop
jmp
xor
jmp
pop
push
mov
sub
jmp
mov
add
add
sub
mov
add
push
push
push
push
pop
add
jmp
mov
add
push
jmp
mov
push
push
pop
sub
shr
inc
add
sub
or
pop
push
mov
and
pop
shl
xor
add
sub
pop
mov
jmp
mov
add
pop
add
add
mov
jmp
pop
pop
neg
jmp
mov
mov
add
sub
sub
mov
add
shr
add
push
mov
jmp
xchg
pop
jmp
shr
push
mov
xor
jmp
push
pop
and
jmp
mov
jmp
pop
xor
jmp
push
pop
sub
jmp
mov
and
shr
add
sub
pop
push
mov
push
jmp
add
jmp
xchg
inc
jmp
mov
add
pop
jmp
shl
sub
shr
push
mov
add
jmp
mov
mov
sub
mov
jmp
add
jmp
push
mov
add
pop
xor
xor
xor
mov
jmp
mov
sub
pop
or
pop
xor
xchg
jmp
add
add
sub
push
mov
sub
pop
add
add
add
sub
push
push
mov
not
jmp
add
pop
mov
add
push
push
jmp
xor
sub
pop
add
jmp
pop
add
sub
jmp
xor
xor
mov
mov
mov
push
jmp
add
sub
sub
pop
jmp
add
add
pop
sub
xchg
pop
mov
push
push
jmp
mov
pushl
pop
popl
mov
decl
pushf
jmp
add
xchg
jmp
pop
push
mov
push
mov
mov
add
pop
shl
jmp
mov
push
push
pop
add
xor
mov
jmp
push
jmp
add
add
sub
jmp
mov
mov
add
pop
xor
xor
xor
pop
push
mov
push
sub
mov
mov
sub
jmp
mov
push
mov
jmp
pop
jmp
mov
push
pop
add
mov
add
push
push
mov
jmp
shl
jmp
push
jmp
add
add
xchg
pop
push
mov
jmp
mov
sub
mov
push
jmp
xor
xor
xor
mov
mov
mov
sub
add
add
mov
jmp
mov
add
add
or
shl
push
push
pop
push
jmp
sub
mov
mov
push
mov
add
sub
xchg
pop
mov
mov
add
pop
push
mov
push
mov
mov
pop
add
jmp
push
mov
push
pop
add
push
mov
sub
jmp
push
pushl
mov
add
popl
jmp
sub
pop
sub
mov
push
mov
jmp
mov
jmp
add
jmp
mov
jmp
pop
add
sub
jmp
sub
xchg
pop
mov
push
pop
jmp
add
mov
add
sub
mov
mov
jmp
pop
or
sub
mov
pop
sub
mov
pop
xor
jmp
add
jmp
xchg
jmp
mov
pushl
pop
push
mov
push
pop
push
mov
add
add
sub
pop
add
xor
jmp
add
jmp
push
pop
xor
pop
sub
jmp
pop
add
jmp
sub
jmp
sub
jmp
mov
jmp
xor
push
jmp
sub
jmp
push
push
mov
shl
push
mov
jmp
pop
jmp
sub
pop
push
mov
push
jmp
xor
xor
mov
mov
jmp
mov
xor
mov
add
addl
subl
subl
push
mov
add
pop
sub
jmp
add
jmp
mov
jmp
mov
add
sub
neg
dec
dec
push
notl
jmp
add
pop
xor
xor
xor
mov
movsbw
pushw
mov
jmp
push
jmp
mov
add
jmp
or
shl
or
or
and
jmp
jmp
pop
xchg
mov
push
mov
mov
jmp
add
add
xor
xor
xor
jmp
mov
push
mov
jmp
pop
push
mov
push
mov
neg
push
mov
jmp
popl
jmp
push
mov
sub
pop
sub
jmp
mov
sub
mov
jmp
push
mov
push
mov
mov
jmp
push
mov
jmp
xor
sub
jmp
xor
add
pushl
mov
add
add
jmp
mov
push
jmp
add
add
xchg
pop
push
push
pushl
pop
jmp
add
add
sub
mov
jmp
mov
add
jmp
add
add
sub
mov
add
jmp
mov
push
push
jmp
mov
add
xor
pushl
pop
push
mov
add
push
mov
sub
add
pop
xchg
pop
sub
mov
sub
jmp
mov
push
mov
add
inc
inc
xor
jmp
xor
or
jmp
or
jmp
xor
push
mov
mov
jmp
push
pop
jmp
pop
mov
jmp
inc
add
jmp
push
mov
sub
sub
sub
add
add
pop
xchg
pop
mov
mov
jmp
addl
add
subl
pushl
jmp
pop
or
and
not
jmp
push
pushf
jmp
add
pop
mov
add
push
mov
pushl
jmp
push
mov
jmp
pop
sub
add
pop
jmp
popl
pop
add
sub
mov
pushl
pushl
mov
add
jmp
add
sub
sub
add
jmp
xor
pop
mov
mov
jmp
pop
push
mov
mov
jmp
pop
push
popl
push
mov
push
mov
add
pop
add
push
mov
add
jmp
xor
mov
mov
jmp
add
jmp
push
push
pop
add
jmp
inc
dec
push
jmp
add
pop
jmp
push
mov
xor
sub
add
mov
add
jmp
xor
xor
xor
mov
push
mov
add
add
xchg
pop
idiv
sub
mov
mov
add
jmp
lods
push
push
mov
mov
mov
add
neg
shl
add
sub
add
xor
sub
pop
sub
mov
push
mov
mov
push
mov
add
mov
add
jmp
pop
sub
add
pop
jmp
add
jmp
sub
pop
xor
push
mov
jmp
add
add
pop
jmp
pop
push
jmp
xor
sub
add
pop
add
pop
sub
jmp
and
mov
jmp
pop
incl
pushf
jmp
add
shl
and
and
xor
sub
and
jmp
push
mov
xor
mov
pushl
mov
add
sub
mov
push
mov
addl
mov
add
push
mov
sub
xor
jmp
mov
pop
add
add
jmp
sub
jmp
add
mov
jmp
sub
pop
xchg
jmp
push
mov
or
mov
push
mov
push
pop
add
add
push
mov
pushl
mov
add
popl
jmp
mov
shr
shr
inc
sub
jmp
mov
jmp
mov
jmp
add
mov
sub
pop
push
mov
mov
pushw
sub
mov
sub
mov
mov
push
mov
add
add
add
sub
sub
jmp
mov
add
jmp
sub
mov
sub
mov
jmp
shr
jmp
xor
xor
xor
jmp
push
pushl
pop
popl
pushl
jmp
mov
jmp
sub
xor
pop
jmp
sub
jmp
add
jmp
mov
xor
sub
or
inc
jmp
add
jmp
push
push
mov
sub
mov
sub
mov
push
mov
add
pop
jmp
mov
pushl
pushl
mov
push
push
pop
add
add
xchg
mov
add
push
push
pop
jmp
mov
add
add
xor
xor
xor
pop
sub
push
push
mov
mov
add
mov
add
sub
sub
add
pushl
pop
jmp
push
jmp
pop
jmp
push
mov
jmp
push
mov
mov
push
push
mov
dec
and
jmp
add
add
mov
jmp
push
jmp
mov
add
add
xchg
pop
mov
add
xor
xor
xor
pop
mov
push
pop
push
mov
jmp
push
mov
add
push
mov
add
jmp
sub
jmp
mov
push
push
mov
add
jmp
sub
mov
jmp
pop
add
pop
xchg
mov
jmp
add
pop
sub
add
jmp
popl
pop
jmp
or
pushl
jmp
add
pushl
pop
push
mov
jmp
add
pop
xchg
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
add
pop
jmp
pushl
mov
push
mov
jmp
mov
jmp
mov
push
jmp
add
sub
pop
pop
push
mov
mov
add
pop
and
jmp
mov
add
pop
push
push
push
pop
jmp
mov
jmp
push
mov
jmp
add
jmp
jmp
mov
jmp
sub
mov
pop
jmp
push
mov
jmp
pushl
pop
jmp
add
add
sub
xchg
jmp
xor
pop
not
shl
jmp
pop
push
mov
push
mov
mov
xor
jmp
mov
jmp
mov
push
jmp
mov
jmp
mov
pop
pop
push
push
push
pop
sub
mov
pop
sub
sub
add
mov
push
push
jmp
mov
jmp
mov
add
pop
sub
push
push
mov
jmp
popl
mov
jmp
push
pushl
pop
add
jmp
mov
jmp
sub
pop
add
xchg
pop
movsbl
jmp
mov
mov
pushl
pop
push
push
pop
sub
mov
mov
jmp
shl
push
mov
xor
pop
add
xor
jmp
add
jmp
sub
pop
xor
jmp
pushl
pop
sub
jmp
xor
xor
mov
mov
push
mov
jmp
push
push
mov
mov
pop
xor
pop
push
pop
pop
sub
add
add
pop
push
pushl
pop
popl
pop
jmp
pushl
pop
push
mov
push
mov
add
pop
jmp
add
mov
add
push
mov
sub
pop
add
add
pop
push
jmp
push
jmp
mov
add
add
jmp
pop
add
popl
pop
btc
pushf
jmp
push
mov
sub
jmp
sub
jmp
not
xchg
shl
jmp
mov
jmp
push
mov
sub
pop
xchg
pop
mov
mov
add
push
push
pop
add
jmp
sub
mov
sub
mov
mov
mov
pop
push
jmp
xor
xor
mov
push
mov
push
mov
push
push
jmp
add
jmp
shr
xor
add
pop
sub
pushl
pop
jmp
mov
add
shr
add
jmp
shl
jmp
sub
jmp
pop
jmp
pop
push
mov
push
mov
sub
push
mov
jmp
add
push
mov
jmp
push
jmp
push
pushl
mov
add
popl
mov
pushl
pop
push
mov
jmp
add
add
jmp
mov
jmp
add
jmp
xor
xor
jmp
mov
add
add
pop
add
add
sub
push
mov
push
mov
shr
and
xor
and
shl
jmp
push
mov
dec
jmp
notl
pop
xor
mov
jmp
mov
xor
pop
add
jmp
mov
push
mov
notb
pop
jmp
mov
shl
jmp
xor
pushl
mov
add
add
push
jmp
push
mov
not
dec
xor
mov
jmp
sub
jmp
pop
add
mov
push
mov
jmp
add
pushl
pop
add
add
push
mov
push
mov
mov
xor
pop
jmp
push
popl
addl
pushl
pop
push
mov
jmp
sub
sub
mov
mov
jmp
lods
jmp
mov
add
sub
jmp
sub
add
add
jmp
pop
or
neg
inc
xor
jmp
xchg
pop
add
jmp
pop
mov
jmp
push
mov
push
mov
xchg
not
push
push
pop
pop
shr
sub
sub
sub
add
pop
add
sub
mov
push
pop
sub
add
push
jmp
mov
add
pop
xchg
jmp
mov
push
jmp
popl
push
mov
push
mov
mov
pop
addl
subl
jmp
sub
jmp
mov
xor
pop
mov
pop
add
jmp
add
pop
jmp
xor
sub
jmp
pushl
jmp
pop
xor
xor
add
add
sub
pop
pushl
pushl
pop
jmp
add
add
pop
mov
push
mov
add
add
xchg
pop
xor
add
push
mov
neg
neg
xor
sub
neg
sub
add
add
sub
pop
xor
pushl
pop
jmp
mov
push
mov
mov
add
add
sub
pop
push
mov
push
mov
xor
sub
mov
mov
shl
jmp
shr
push
jmp
push
mov
jmp
mov
mov
neg
jmp
mov
subl
jmp
mov
pop
pop
push
mov
mov
xor
pushl
jmp
pop
add
jmp
sub
mov
addl
pop
jmp
add
pop
jmp
pop
sub
mov
mov
push
jmp
push
mov
inc
add
or
pop
add
push
mov
mov
pop
jmp
mov
add
inc
xor
push
addl
pop
sub
pop
add
mov
add
xor
xor
xor
mov
jmp
push
mov
jmp
pop
push
push
pop
jmp
sub
sub
sub
add
push
mov
xor
sub
add
jmp
xor
jmp
sub
mov
jmp
mov
pushl
pop
jmp
push
sub
mov
push
mov
jmp
sub
mov
add
add
push
mov
jmp
mov
pop
shl
shl
sub
jmp
sub
jmp
xor
push
mov
add
pop
add
add
add
sub
sub
mov
add
xor
xor
xor
mov
push
mov
add
push
mov
add
pop
xchg
pop
bswap
push
jmp
mov
add
pop
push
push
push
mov
jmp
push
push
pop
mov
pop
mov
add
jmp
mov
push
sub
mov
addl
mov
push
mov
push
pushl
jmp
popl
pop
cmp
pushf
jmp
pop
popl
mov
sub
jmp
neg
jmp
add
add
sub
mov
push
push
mov
xor
shr
shl
xor
xor
sub
mov
pop
mov
jmp
jmp
pushl
popf
pop
sbb
pushf
jmp
pushl
jmp
add
mov
add
jmp
add
push
mov
add
pop
add
mov
add
xor
jmp
mov
jmp
mov
sub
mov
mov
sub
jmp
pop
and
not
add
mov
jmp
pushl
pop
jmp
add
jmp
add
popl
jmp
mov
mov
push
notl
pop
jmp
push
mov
mov
jmp
add
pop
jmp
add
sub
jmp
mov
jmp
push
mov
not
xor
mov
pop
add
jmp
add
jmp
push
push
pop
xor
add
jmp
neg
neg
or
add
push
mov
xor
jmp
push
jmp
push
mov
push
mov
add
pop
sub
jmp
jmp
push
push
mov
mov
and
sub
sub
pop
dec
sub
sub
mov
jmp
pop
jmp
add
add
jmp
and
sub
mov
pop
add
add
add
sub
push
mov
jmp
mov
sub
inc
sub
xor
jmp
pushl
jmp
popl
push
mov
jmp
pop
add
pop
push
push
pop
pop
not
xor
jmp
pop
sub
pop
pop
push
mov
add
pop
push
pushl
pop
popl
pop
sub
jmp
mov
jmp
sub
sub
add
jmp
subl
jmp
push
mov
not
jmp
push
jmp
pop
push
pushl
pop
popl
pop
push
push
mov
push
jmp
mov
push
mov
mov
jmp
mov
mov
add
mov
add
neg
jmp
add
add
jmp
xor
add
pop
xor
mov
jmp
push
push
pop
jmp
push
push
mov
jmp
pop
add
mov
add
push
push
mov
shl
push
push
mov
mov
jmp
xor
pop
add
jmp
add
sub
mov
mov
sub
jmp
mov
xor
push
mov
mov
shl
jmp
sub
sub
pop
jmp
add
pop
movzbl
jmp
xchg
mov
roll
pushf
jmp
subl
add
jmp
shl
sub
sub
jmp
inc
not
inc
and
push
mov
and
jmp
pop
add
push
mov
sub
sub
push
mov
sub
jmp
pop
jmp
pop
mov
pop
jmp
push
jmp
add
mov
add
pushl
pop
push
jmp
mov
jmp
sub
pop
push
jmp
sub
jmp
sub
jmp
mov
push
mov
mov
push
mov
mov
jmp
mov
and
not
add
xor
mov
jmp
pop
mov
push
push
mov
jmp
sub
jmp
push
push
mov
push
push
mov
mov
xor
jmp
pop
sub
mov
jmp
pop
push
mov
jmp
mov
add
push
mov
push
jmp
mov
jmp
xchg
jmp
shr
add
jmp
mov
add
jmp
push
push
push
pop
add
add
xor
mov
pop
jmp
mov
mov
add
xor
pop
push
mov
push
mov
neg
shr
shr
add
jmp
add
sub
xchg
mov
mov
mov
jmp
add
sub
mov
add
push
mov
pushl
pop
popl
jmp
mov
push
mov
add
jmp
mov
pushl
pop
add
not
shl
push
push
push
pop
mov
xor
pop
jmp
mov
sub
shr
or
add
xor
pop
xor
mov
add
push
mov
jmp
mov
jmp
mov
mov
push
jmp
sub
pop
shl
inc
sub
mov
jmp
or
shr
push
mov
jmp
mov
add
add
xchg
pop
and
mov
push
mov
push
mov
add
jmp
push
mov
mov
add
pop
subl
jmp
mov
dec
sub
sub
mov
jmp
sub
pop
xchg
mov
mov
push
push
push
jmp
pop
add
add
pop
push
mov
pushl
pushl
mov
add
add
popl
pop
cmp
pushf
jmp
mov
jmp
add
add
jmp
sub
push
mov
sub
pop
pop
sub
jmp
mov
mov
jmp
pushl
mov
jmp
mov
add
mov
add
add
push
mov
mov
sub
jmp
pop
sub
xchg
pop
mov
jmp
pop
add
sub
sub
mov
add
sub
jmp
push
mov
push
jmp
add
sub
pop
push
mov
xor
sub
jmp
push
mov
jmp
push
push
mov
jmp
sub
jmp
add
xchg
jmp
mov
push
mov
jmp
push
mov
push
mov
not
or
add
xor
jmp
pushl
mov
push
push
pop
add
jmp
pushl
mov
add
push
mov
add
push
mov
dec
push
mov
jmp
shl
xor
jmp
push
push
mov
mov
add
sub
sub
jmp
add
xor
xor
xor
pop
mov
jmp
pop
xor
jmp
pop
push
jmp
addl
pop
add
sub
mov
jmp
inc
neg
sub
add
mov
add
jmp
add
xor
mov
pop
add
mov
jmp
add
push
push
pop
add
mov
add
xor
xor
jmp
mov
jmp
add
xchg
pop
push
mov
sub
jmp
pop
popl
jmp
add
add
jmp
mov
pop
add
jmp
mov
pop
or
jmp
pop
push
pushl
jmp
add
pop
shl
jmp
xor
jmp
mov
mov
push
pop
jmp
pop
jmp
add
sub
sub
jmp
mov
mov
pop
add
pop
add
mov
sub
mov
jmp
addl
jmp
add
jmp
popl
mov
shll
jmp
subl
sub
addl
jmp
add
xor
pop
add
pop
push
push
jmp
dec
or
not
sub
xor
jmp
mov
add
jmp
add
pop
push
push
pop
mov
add
not
jmp
sub
xor
xor
jmp
mov
push
jmp
xor
jmp
add
add
xor
xor
xor
jmp
mov
jmp
push
mov
add
pop
add
jmp
mov
xor
add
pop
sub
mov
mov
push
mov
sub
xchg
pop
shr
xchg
jmp
push
jmp
mov
jmp
sub
jmp
push
jmp
mov
sub
pop
jmp
push
mov
jmp
push
mov
push
mov
jmp
add
add
pop
add
xor
xor
xor
mov
jmp
add
sub
mov
mov
add
pop
mov
add
push
mov
xor
pop
add
add
jmp
add
push
mov
sub
mov
pop
push
mov
sub
jmp
pushl
jmp
not
xchg
sub
add
jmp
popl
addl
jmp
sub
pop
pushl
subl
pop
push
mov
and
add
add
pop
pop
push
mov
shl
xchg
sub
jmp
add
pop
jmp
push
mov
not
jmp
add
xchg
jmp
sub
pop
mov
add
push
mov
push
pop
add
sub
sub
mov
jmp
xor
xor
pop
sub
jmp
mov
mov
add
pop
xor
xor
xor
jmp
push
jmp
not
jmp
push
mov
jmp
mov
jmp
pop
xor
and
pop
dec
add
add
add
add
jmp
mov
not
push
push
jmp
mov
mov
add
jmp
jmp
mov
push
mov
add
add
xchg
mov
add
jmp
popl
mov
pushl
pushl
jmp
shl
xor
jmp
mov
jmp
or
push
jmp
mov
push
jmp
mov
jmp
add
add
push
mov
mov
not
add
jmp
add
push
mov
add
jmp
mov
shr
xor
sub
pop
or
jmp
add
add
push
push
pop
add
mov
jmp
mov
mov
shr
push
push
mov
shr
dec
shl
add
jmp
mov
push
mov
push
mov
jmp
sub
mov
push
pop
pop
xchg
push
push
jmp
mov
mov
xor
pop
push
mov
mov
jmp
mov
add
pop
jmp
add
sub
mov
jmp
add
push
mov
push
pop
subl
sub
addl
pop
jmp
add
sub
sub
pop
push
mov
add
pop
jmp
mov
sub
add
add
pop
sub
xor
pop
add
pop
jmp
jmp
add
mov
add
pop
push
mov
xor
add
sub
add
pop
push
push
jmp
add
pop
jmp
push
mov
push
mov
jmp
mov
sub
add
xor
pop
and
pushl
jmp
mov
add
sub
mov
push
jmp
add
add
xchg
mov
add
sub
sub
push
mov
jmp
add
push
mov
dec
sub
add
jmp
xchg
pop
mov
push
mov
mov
push
push
jmp
mov
add
jmp
push
push
mov
push
mov
mov
pop
pop
sub
pop
mov
jmp
add
pushl
mov
add
add
push
pushl
pop
jmp
sub
push
pushl
pop
popl
pop
mov
mov
push
mov
jmp
lods
push
jmp
pop
push
pushl
pop
popl
pop
mov
push
jmp
pop
push
mov
jmp
mov
add
pop
mov
push
mov
add
add
xchg
pop
add
add
sub
pushl
pop
push
mov
add
add
xchg
jmp
mov
push
mov
add
add
sub
pop
sub
sub
jmp
pop
shl
add
jmp
neg
dec
shl
add
sub
mov
pop
push
mov
sub
jmp
pop
xor
shr
shl
shl
sub
add
sub
sub
pop
pop
push
pushl
jmp
pop
mov
jmp
inc
jmp
sub
push
mov
sub
jmp
push
mov
jmp
mov
add
sub
xchg
pop
jmp
mov
jmp
pushl
popf
pop
rclw
pushf
jmp
pop
pop
push
jmp
add
pop
add
xchg
mov
popl
jmp
mov
jmp
add
jmp
mov
and
pop
xor
push
mov
xor
pop
neg
or
add
push
jmp
mov
jmp
mov
pop
add
pop
sub
sub
jmp
mov
mov
add
jmp
push
jmp
mov
push
mov
add
add
add
jmp
push
jmp
push
subl
jmp
mov
pop
sub
add
jmp
mov
push
mov
push
jmp
xor
jmp
movzbw
push
mov
push
jmp
add
pop
xchg
mov
push
mov
push
jmp
push
mov
push
mov
push
mov
add
pop
pushl
jmp
push
jmp
xor
jmp
mov
mov
sub
mov
jmp
add
jmp
push
jmp
sub
mov
mov
sub
mov
add
add
add
jmp
sub
pushl
pop
push
mov
add
push
mov
jmp
mov
jmp
pop
div
push
mov
jmp
inc
jmp
pop
sub
jmp
popl
push
jmp
mov
jmp
pop
xchg
pop
add
sub
mov
push
mov
jmp
pop
jmp
xchg
not
xchg
pop
xor
jmp
push
mov
add
pop
jmp
pop
add
sub
jmp
push
mov
add
jmp
sub
sub
add
pop
xor
add
jmp
dec
sub
jmp
mov
add
sub
xor
xor
xor
mov
mov
jmp
pop
add
push
mov
mov
add
mov
add
not
push
mov
push
mov
and
xor
add
xor
jmp
xor
xor
mov
sub
add
pop
sub
mov
mov
push
jmp
pop
jmp
mov
pushl
pushl
mov
add
add
popl
pop
xor
jmp
add
add
sub
jmp
push
mov
mov
add
sub
xor
xor
jmp
pop
sub
add
pop
sub
xchg
pop
mov
push
mov
jmp
push
mov
shr
jmp
pop
jmp
mov
add
shr
xor
jmp
pop
add
neg
neg
push
jmp
mov
push
jmp
mov
mov
push
mov
push
mov
addl
pushl
pop
jmp
mov
jmp
dec
xor
sub
jmp
add
pop
add
xor
xor
xor
mov
push
mov
push
mov
mov
add
push
mov
jmp
push
jmp
add
sub
and
sub
add
pop
xchg
jmp
mov
pushl
pop
push
push
pop
add
add
xor
xor
xor
mov
mov
push
mov
add
add
xchg
pop
sub
jmp
pop
add
pop
not
push
mov
jmp
pop
pop
add
jmp
mov
xor
pop
add
jmp
pop
mov
sub
mov
mov
mov
pop
sub
add
add
pushl
pop
push
jmp
mov
mov
jmp
pop
popl
jmp
mov
jmp
xchg
mov
push
mov
sub
jmp
lods
push
mov
push
mov
xor
jmp
mov
mov
dec
add
jmp
mov
push
mov
add
jmp
pop
sub
xchg
not
jmp
push
decl
jmp
push
push
push
pushl
pop
add
xor
add
mov
pop
push
mov
neg
xor
add
pop
sub
jmp
sub
xor
jmp
mov
mov
sub
pop
push
push
push
mov
not
add
sub
mov
pop
mov
add
add
sub
pop
add
and
mov
push
mov
add
add
xchg
pop
neg
shr
jmp
inc
inc
dec
xor
add
add
sub
pop
jmp
push
mov
add
sub
xchg
mov
jmp
push
jmp
mov
mov
jmp
dec
add
add
sub
jmp
mov
shl
sub
inc
add
jmp
mov
or
xchg
xchg
push
notl
pop
xchg
xchg
and
add
and
xor
jmp
mov
jmp
add
jmp
xchg
mov
add
xor
jmp
push
mov
jmp
pop
shr
xor
add
jmp
sub
xchg
jmp
and
pop
jmp
mov
pop
pop
add
pop
push
jmp
push
jmp
negw
pushf
jmp
mov
add
add
sub
add
jmp
pop
push
mov
not
jmp
sub
jmp
mov
add
shr
sub
inc
push
mov
xor
pop
jmp
pop
jmp
push
mov
push
mov
jmp
pushl
pop
add
sub
jmp
mov
xor
pop
pushl
pushl
pop
jmp
mov
add
sub
xchg
pop
mov
jmp
xor
movzbl
mov
push
mov
push
mov
addl
mov
push
mov
add
add
xchg
jmp
add
jmp
mov
add
mov
add
jmp
mov
push
mov
sub
pop
add
mov
add
sub
mov
mov
add
pop
jmp
mov
add
add
jmp
sub
xchg
mov
jmp
mov
add
add
sub
pop
shr
sub
add
sub
jmp
sub
mov
jmp
add
xchg
jmp
mov
jmp
add
sub
mov
jmp
add
pop
add
jmp
mov
mov
mov
pop
push
mov
and
jmp
add
push
mov
jmp
push
jmp
mov
jmp
push
mov
push
jmp
and
not
sub
add
pop
jmp
add
jmp
push
mov
jmp
push
mov
and
dec
shr
sub
not
jmp
push
mov
add
add
jmp
push
mov
add
sub
xchg
jmp
sub
sub
mov
mov
and
push
push
pop
and
sub
mov
mov
sub
mov
add
push
push
push
pop
inc
inc
not
xor
mov
pop
sub
jmp
push
mov
push
mov
shr
xor
xor
push
mov
jmp
mov
jmp
movzbl
popw
jmp
and
sub
mov
pop
sub
dec
jmp
pop
sub
sub
add
add
mov
add
add
sub
sub
add
jmp
add
push
mov
xor
shl
jmp
add
add
xchg
pop
push
mov
add
add
jmp
sub
xor
jmp
or
push
mov
sub
jmp
lods
push
mov
jmp
sub
mov
add
or
jmp
add
pop
subl
pushl
jmp
push
jmp
sub
add
jmp
push
jmp
shr
xor
add
pop
xor
pop
jmp
mov
push
mov
add
jmp
xchg
pop
push
mov
sub
jmp
dec
xor
mov
pop
or
shl
shl
push
mov
sub
pop
mov
pop
push
mov
and
jmp
mov
jmp
push
pushl
mov
add
popl
jmp
sub
add
xor
xor
sub
add
add
pop
add
xor
jmp
add
push
push
jmp
mov
shr
push
mov
push
mov
mov
neg
and
jmp
add
pop
sub
add
add
mov
jmp
push
push
jmp
popl
push
mov
xor
jmp
not
xchg
pop
push
jmp
sub
add
pushl
pop
add
push
mov
push
pop
push
mov
shl
add
add
jmp
mov
sub
jmp
xor
pop
mov
pushl
jmp
pop
sub
pushl
jmp
pop
push
jmp
add
add
sub
mov
mov
dec
and
neg
push
jmp
pushl
mov
push
jmp
shr
jmp
pop
push
pushl
pop
popl
pop
mov
jmp
add
jmp
jmp
mov
push
push
pop
jmp
push
mov
push
mov
mov
pop
xor
jmp
mov
jmp
push
push
push
pop
and
jmp
add
jmp
mov
add
pop
sub
mov
jmp
push
mov
shr
jmp
mov
jmp
shr
jmp
lods
push
mov
add
mov
add
sub
jmp
sub
add
xor
sub
pop
jmp
shr
jmp
push
mov
sub
jmp
sub
addb
mov
add
inc
add
push
mov
dec
inc
not
add
sub
sub
jmp
add
add
sub
sub
mov
add
dec
shr
jmp
mov
sub
add
add
pop
add
xchg
mov
push
jmp
mov
jmp
sub
sub
jmp
mov
jmp
push
mov
add
add
push
mov
neg
sub
and
xor
or
pop
sub
not
sub
mov
pop
push
mov
mov
pop
pop
push
mov
jmp
sub
mov
push
mov
push
mov
mov
pop
shr
shr
sub
jmp
mov
mov
pop
jmp
push
mov
jmp
add
add
xchg
jmp
mov
add
push
push
mov
jmp
push
mov
mov
pop
pop
push
jmp
mov
push
jmp
mov
pushl
mov
add
push
push
pop
push
mov
sub
shr
jmp
mov
jmp
mov
add
push
mov
xor
jmp
mov
jmp
add
jmp
shr
add
shr
jmp
add
sub
sub
jmp
pushl
pop
add
jmp
push
jmp
sub
pop
add
push
mov
jmp
mov
pushl
jmp
pop
jmp
xor
sub
jmp
sub
sub
jmp
sub
add
mov
mov
add
inc
xor
mov
pop
add
add
sub
pop
push
mov
neg
jmp
pushl
pop
push
push
pop
sub
mov
push
mov
jmp
mov
add
add
xchg
mov
jmp
mov
mov
add
pop
add
push
mov
jmp
mov
mov
sub
sub
jmp
mov
add
pop
add
jmp
not
shl
xor
and
xor
add
pop
add
jmp
push
jmp
not
push
push
mov
jmp
neg
sub
push
mov
add
mov
push
push
jmp
sub
mov
jmp
add
push
mov
jmp
sub
add
add
jmp
xorl
pop
xor
pop
push
mov
jmp
inc
jmp
add
pop
push
push
pop
neg
jmp
mov
push
mov
add
or
sub
sub
mov
mov
jmp
push
mov
push
jmp
pop
popl
pop
shrb
pushf
jmp
xchg
pop
mov
addl
mov
sub
mov
push
pushl
pop
push
mov
jmp
push
mov
and
pop
jmp
shr
shr
xor
push
push
mov
shr
push
mov
add
pop
add
sub
not
xor
mov
jmp
xchg
jmp
pop
xor
jmp
push
push
jmp
sub
sub
add
mov
add
shl
jmp
sub
jmp
add
xor
xor
xor
jmp
mov
add
push
mov
sub
jmp
pop
or
je
pushl
pushl
mov
push
mov
add
jmp
pop
push
mov
jmp
mov
push
jmp
sub
jmp
mov
sub
mov
add
jmp
mov
add
jmp
dec
not
sub
push
mov
xor
pop
add
mov
push
jmp
xor
xor
pop
sub
jmp
push
push
pop
push
sub
jmp
mov
sub
mov
jmp
pop
push
mov
sub
jmp
sub
jmp
push
mov
sub
pop
add
jmp
add
xor
xor
xor
mov
sub
mov
mov
add
xchg
not
xchg
and
jmp
add
add
xchg
pop
jmp
mov
add
inc
and
jmp
add
pop
pop
push
jmp
pushl
pushl
jmp
pop
sub
sub
jmp
not
shl
jmp
pop
xor
pop
shr
jmp
push
push
jmp
add
popl
jmp
xchg
jmp
pop
sub
xchg
mov
jmp
mov
jmp
mov
mov
pop
push
mov
push
push
mov
mov
jmp
pop
jmp
not
add
add
pop
add
sub
sub
pushl
jmp
neg
not
xor
xor
jmp
xchg
mov
shl
sub
add
sub
jmp
pop
push
jmp
sub
mov
mov
mov
pop
mov
jmp
mov
add
xor
and
mov
add
or
shl
jmp
mov
mov
mov
add
add
xchg
pop
popl
mov
pushl
pop
push
push
pushl
jmp
inc
jmp
add
add
jmp
push
jmp
pushl
pop
add
jmp
mov
add
add
xchg
pop
push
mov
add
push
jmp
mov
jmp
push
popl
push
jmp
mov
push
jmp
mov
add
pop
jmp
push
mov
add
pop
jmp
sub
pop
add
sub
sub
add
jmp
jmp
or
pop
push
mov
add
pop
sub
sub
jmp
sub
add
pop
jmp
pushl
mov
push
mov
push
mov
push
mov
add
add
xchg
pop
jmp
or
add
push
mov
add
sub
sub
jmp
xchg
jmp
add
sub
add
add
push
jmp
push
jmp
sub
xor
pop
push
mov
shr
add
xor
jmp
xchg
pop
jmp
pop
jmp
mov
add
shr
not
shl
dec
add
add
jmp
subl
addl
push
jmp
add
add
push
mov
sub
jmp
mov
push
mov
sub
add
jmp
pop
push
jmp
mov
xor
jmp
or
shl
add
sub
jmp
push
push
mov
mov
push
push
mov
jmp
mov
push
mov
jmp
sub
push
mov
sub
add
add
pop
mov
add
sub
mov
push
jmp
add
add
xchg
jmp
or
xor
sub
pop
shl
jmp
pop
jmp
add
add
xchg
pop
jmp
add
sub
sub
add
pop
add
sub
mov
add
add
xchg
mov
incb
pushf
jmp
mov
push
mov
mov
sub
shr
dec
xor
jmp
mov
add
add
jmp
add
xchg
pop
add
jmp
add
or
jne
push
mov
mov
add
push
mov
or
push
mov
or
pop
and
push
jmp
push
mov
add
add
jmp
mov
jmp
mov
mov
add
pop
jmp
pushl
mov
add
push
jmp
push
mov
add
pop
jmp
push
push
pop
pop
pop
push
mov
mov
add
add
sub
pop
jmp
pop
add
add
push
jmp
add
jmp
not
and
add
add
xor
push
pop
pop
sub
add
add
pop
jmp
sub
mov
mov
add
pop
add
movzbl
mov
push
mov
push
pop
sub
mov
push
push
pop
push
mov
add
sub
xchg
pop
mov
mov
push
mov
mov
add
jmp
or
jmp
sub
add
jmp
push
mov
push
mov
sub
pop
mov
pop
sub
add
jmp
xor
pop
jmp
add
mov
pop
jmp
xor
pushl
pop
push
push
jmp
mov
or
jmp
inc
shl
shl
xor
add
pop
jmp
mov
xor
pop
sub
pop
jmp
add
pop
xor
sub
pop
pushl
pop
jmp
pop
jmp
mov
push
mov
add
sub
xchg
pop
mov
jmp
and
mov
add
add
sub
push
mov
add
jmp
mov
push
pop
push
mov
sub
pop
shl
push
sub
mov
jmp
pushl
mov
add
jmp
pop
mov
add
push
mov
xor
jmp
add
push
mov
add
jmp
mov
push
mov
add
push
mov
xor
jmp
add
sub
jmp
sub
jmp
mov
jmp
lods
sub
push
pushw
pop
jmp
not
jmp
shl
push
mov
add
pop
push
mov
push
mov
jmp
add
add
xchg
pop
and
pushl
jmp
push
notb
pop
jmp
sub
mov
mov
add
add
push
pushl
pop
popl
mov
add
add
add
jmp
mov
jmp
mov
sub
xor
shl
jmp
pop
jmp
push
mov
jmp
pop
jmp
sub
xor
not
sub
shl
sub
sub
jmp
sub
add
push
jmp
mov
add
add
jmp
add
jmp
pop
add
mov
add
jmp
pushl
pop
popl
pop
push
mov
sub
mov
addl
mov
add
push
mov
mov
sub
mov
mov
not
jmp
pop
push
notl
jmp
add
push
mov
mov
add
xor
sub
pop
add
add
sub
mov
jmp
pop
add
shl
xor
sub
jmp
push
sub
jmp
push
mov
mov
mov
mov
add
mov
push
push
pop
add
add
xchg
jmp
pop
mov
pop
dec
sub
push
jmp
push
pushl
pop
popl
mov
mov
mov
push
mov
xor
add
pop
not
push
mov
add
add
jmp
sub
sub
pop
xchg
mov
mov
push
pushl
pop
push
mov
push
jmp
push
mov
mov
mov
pop
jmp
pop
push
mov
jmp
push
pop
add
sub
xchg
mov
mov
mov
sub
mov
jmp
push
pop
add
sub
mov
mov
sub
sub
push
mov
push
jmp
add
pop
jmp
sub
mov
pop
neg
jmp
add
pushl
pop
add
sub
jmp
sub
sub
pop
jmp
push
mov
not
or
shr
dec
add
sub
push
addl
pop
sub
pop
sub
jmp
pop
sub
mov
jmp
push
pushl
pop
add
jmp
sub
add
add
sub
add
pop
jmp
and
add
xor
add
pop
jmp
add
pop
push
push
jmp
add
pop
jmp
shl
jmp
inc
push
jmp
pushl
mov
add
push
jmp
shr
xor
jmp
push
push
mov
jmp
pushl
pop
add
push
mov
sub
jmp
pop
add
push
mov
inc
push
mov
inc
mov
pop
sub
sub
sub
pop
add
sub
sub
push
mov
jmp
pop
sub
jmp
mov
mov
jmp
pop
add
sub
jmp
or
push
push
mov
mov
pop
jmp
mov
pop
mov
pop
push
subl
sub
jmp
push
jmp
mov
add
push
mov
pushl
mov
jmp
add
jmp
mov
inc
sub
xor
pop
shl
sub
mov
jmp
pop
jmp
not
xchg
sub
jmp
add
subl
pop
pop
push
mov
jmp
mov
mov
xor
sub
inc
xor
sub
mov
jmp
mov
push
push
mov
mov
add
sub
jmp
pop
jmp
xor
xor
pop
jmp
mov
mov
or
xor
xor
pushl
jmp
shr
sub
sub
pop
mov
add
add
sub
mov
mov
dec
jmp
mov
jmp
mov
jmp
shr
jmp
add
pop
sub
push
mov
jmp
push
mov
mov
mov
push
mov
add
add
jmp
mov
add
sub
jmp
push
push
mov
jmp
xor
xor
pop
jmp
popl
jmp
pop
jmp
push
pushl
mov
add
push
mov
push
mov
addl
pop
sub
mov
push
jmp
sub
pushl
mov
jmp
pop
sub
pop
add
add
pop
push
mov
push
mov
add
pushl
pop
add
pop
sub
mov
push
jmp
push
negl
jmp
sub
pop
sub
jmp
add
mov
add
jmp
mov
pop
sub
add
add
mov
sub
mov
mov
push
jmp
dec
or
dec
sub
mov
pop
jmp
mov
add
jmp
sub
jmp
push
mov
push
mov
add
push
push
mov
add
jmp
push
mov
add
pop
inc
sub
sub
and
pop
shl
sub
add
add
jmp
push
mov
xor
mov
add
xor
jmp
mov
jmp
pop
or
je
pushl
pushl
pushl
pop
push
mov
mov
jmp
pop
mov
push
mov
mov
pop
sub
pop
jmp
push
mov
add
push
mov
sub
sub
add
add
jmp
neg
or
shr
jmp
pop
shl
add
jmp
mov
pushw
jmp
shr
sub
jmp
push
jmp
push
mov
xor
xor
shr
add
mov
pop
add
pop
push
mov
dec
xor
sub
jmp
or
jne
push
jmp
push
pop
push
mov
mov
sub
mov
mov
or
jmp
add
pop
xchg
jmp
shr
push
mov
xor
pop
add
add
add
push
push
push
jmp
and
pop
jmp
pop
xor
push
mov
inc
push
jmp
sub
sub
pop
jmp
mov
xor
pushf
jmp
push
mov
xor
sub
jmp
sub
push
mov
dec
add
xor
jmp
mov
jmp
sub
mov
jmp
shl
push
mov
push
mov
jmp
mov
jmp
sub
pop
add
xchg
jmp
xor
pop
sub
pop
pushl
jmp
sub
jmp
push
push
pop
jmp
push
mov
push
mov
jmp
mov
jmp
pop
jmp
xor
xor
xor
pushl
pop
jmp
add
add
sub
mov
jmp
sub
jmp
mov
mov
add
pop
add
jmp
add
pop
push
jmp
mov
push
jmp
sub
jmp
or
or
inc
xor
add
jmp
pushl
jmp
mov
sub
jmp
shr
dec
xor
xor
mov
pop
push
mov
jmp
push
mov
add
jmp
mov
push
mov
add
add
xchg
pop
push
mov
add
jmp
push
pop
add
push
mov
add
jmp
xor
sub
jmp
xor
jmp
add
jmp
push
mov
neg
not
sub
or
xor
mov
jmp
add
jmp
xor
jmp
pop
pop
jmp
pop
add
add
xchg
jmp
pop
shl
jmp
push
mov
add
pop
jmp
add
add
pop
push
push
jmp
pop
mov
pop
sub
add
mov
jmp
sub
jmp
pop
push
mov
push
mov
shl
xor
add
jmp
mov
add
inc
shr
add
push
subl
pop
jmp
push
push
jmp
not
sub
xor
pop
xor
and
pop
not
jmp
add
push
mov
push
mov
jmp
add
add
xor
jmp
popl
pop
sub
jmp
add
sub
xchg
pop
jmp
push
jmp
push
pushf
jmp
mov
add
xor
pop
jmp
push
mov
mov
jmp
add
push
jmp
shl
xor
mov
pop
sub
push
mov
add
jmp
add
sub
add
jmp
sub
xchg
pop
jmp
add
pop
mov
jmp
mov
shl
and
shr
sub
mov
mov
add
jmp
mov
mov
jmp
dec
shr
xor
jmp
pushl
jmp
add
add
mov
add
add
push
mov
jmp
mov
mov
jmp
sub
pop
xor
pop
jmp
sub
add
jmp
add
push
mov
add
sub
xchg
pop
mov
push
jmp
xor
xor
jmp
jmp
sub
pop
push
push
mov
mov
jmp
mov
sub
mov
push
mov
add
jmp
xorl
mov
add
jmp
pop
mov
add
push
mov
jmp
pop
jmp
mov
push
pop
jmp
push
pushf
jmp
not
xchg
pop
jmp
sub
jmp
pop
push
mov
jmp
mov
pop
xor
pop
push
jmp
xor
add
jmp
add
push
mov
push
push
mov
mov
sub
pop
mov
pop
add
not
inc
xor
sub
pop
pushl
pop
push
mov
jmp
sub
mov
push
pop
jmp
add
mov
pop
xor
sub
mov
push
jmp
neg
sub
sub
shr
jmp
push
subl
pop
push
jmp
mov
jmp
pushl
pop
push
mov
jmp
mov
push
mov
jmp
sub
add
sub
push
mov
sub
pop
pop
jmp
push
sub
jmp
push
mov
mov
pop
pop
jmp
mov
add
sub
jmp
push
mov
jmp
shr
shr
add
jmp
not
shl
shl
push
mov
and
jmp
pushl
pushl
pop
sub
mov
jmp
mov
jmp
push
mov
push
mov
xor
neg
add
inc
neg
xor
mov
pop
xor
mov
add
shl
sub
add
neg
push
push
mov
mov
shl
push
jmp
add
pushw
mov
jmp
pop
add
push
mov
sub
pop
jmp
xor
xor
push
notw
pop
xor
xor
jmp
sub
jmp
push
mov
add
jmp
mov
jmp
or
dec
add
jmp
sub
sub
pop
jmp
mov
mov
push
jmp
sub
shl
sub
jmp
mov
mov
jmp
add
jmp
pop
push
mov
push
mov
add
pop
push
push
jmp
mov
add
sub
jmp
sub
pop
xchg
mov
jmp
sub
add
jmp
push
jmp
add
pop
mov
add
push
xchg
push
notl
pop
xchg
pop
not
jmp
push
mov
push
mov
push
jmp
push
push
pop
add
add
jmp
add
add
jmp
not
sub
sub
pop
mov
pop
or
jmp
pushl
pop
sub
mov
push
pop
add
add
xchg
jmp
mov
sub
add
add
push
subl
pop
jmp
pop
push
mov
add
jmp
jmp
add
push
mov
mov
add
sub
xor
xor
xor
pop
mov
jmp
pop
jmp
mov
mov
sub
pop
xor
xor
xor
jmp
sub
jmp
and
shl
shl
xor
xor
sub
mov
mov
push
mov
notl
pop
push
sub
pop
add
sub
xor
jmp
notl
pop
sub
jmp
mov
mov
subl
sub
addl
pop
sub
addl
jmp
popl
pop
add
mov
jmp
add
jmp
push
mov
mov
push
mov
xor
inc
neg
xor
sub
jmp
add
push
xchg
jmp
xchg
mov
jmp
add
sub
xor
xor
xor
pop
mov
sub
mov
mov
mov
xor
pushl
jmp
pop
add
pushl
pop
add
sub
mov
push
mov
xchg
xchg
xchg
not
xchg
xchg
push
jmp
mov
pop
add
pop
addl
add
subl
sub
mov
push
mov
jmp
pop
dec
push
mov
mov
or
jmp
push
jmp
pushl
mov
add
jmp
inc
xor
jmp
add
jmp
pop
dec
xchg
not
xor
jmp
pop
xor
mov
pop
neg
sub
push
mov
jmp
mov
add
push
mov
add
jmp
or
and
not
sub
add
jmp
add
add
add
pop
jmp
dec
shr
jmp
mov
jmp
mov
jmp
mov
mov
jmp
pushl
pushl
jmp
push
mov
shl
shr
shr
jmp
push
push
pushl
pop
push
push
pop
jmp
mov
add
add
push
mov
add
pop
xchg
pop
push
jmp
push
mov
sub
jmp
pop
mov
jmp
mov
jmp
mov
push
mov
mov
xor
jmp
pushl
pushl
pop
push
jmp
pushl
pushl
pop
jmp
add
add
push
jmp
push
pop
xor
sub
push
mov
mov
pop
pop
mov
sub
pop
add
pop
add
sub
push
mov
mov
push
jmp
mov
xor
mov
add
jmp
pop
sub
jmp
sub
mov
mov
add
push
mov
sub
mov
mov
shl
not
and
jmp
mov
mov
sub
pop
add
add
sub
add
pushl
pop
push
mov
jmp
mov
push
mov
push
mov
add
jmp
sub
pop
push
jmp
push
mov
add
add
xchg
mov
sub
mov
jmp
mov
push
mov
add
jmp
push
mov
mov
add
jmp
sub
pop
push
mov
sub
add
add
jmp
or
sub
jmp
mov
decl
pushl
pop
jmp
add
add
jmp
sub
mov
mov
push
jmp
mov
jmp
sub
jmp
mov
jmp
mov
jmp
xor
pop
jmp
xor
xor
sub
jmp
mov
add
pop
jmp
neg
add
add
pop
jmp
push
sub
jmp
push
pushl
mov
add
push
jmp
mov
add
sub
xchg
mov
mov
sub
jmp
add
jmp
add
xchg
pop
add
push
mov
jmp
mov
and
shl
inc
inc
and
add
mov
pop
add
push
mov
add
pop
add
sub
push
mov
sub
pop
pop
xor
xor
xor
pop
or
pushf
jmp
bts
pushf
jmp
xchg
dec
jmp
pop
add
add
jmp
add
shr
sub
mov
jmp
mov
and
pushl
mov
add
sub
mov
push
pop
push
mov
jmp
pop
mov
mov
jmp
pop
sub
add
jmp
sub
xchg
jmp
mov
inc
xor
jmp
add
jmp
pop
sub
mov
mov
jmp
lods
pushw
mov
jmp
sub
jmp
sub
jmp
mov
mov
add
pop
push
mov
add
shr
xor
add
sub
sub
mov
add
xchg
mov
mov
notl
jmp
mov
add
add
pop
push
addl
jmp
pop
mov
add
add
push
mov
push
push
mov
neg
jmp
pop
push
sub
mov
jmp
add
push
mov
add
jmp
mov
jmp
xchg
pop
popl
mov
imul
push
jmp
add
not
xor
xor
xor
push
mov
add
pop
add
add
sub
mov
add
add
jmp
mov
jmp
neg
not
shl
xor
jmp
pushl
jmp
push
pushl
pushl
mov
add
add
jmp
mov
sub
mov
push
mov
addl
pop
sub
jmp
push
mov
jmp
xor
add
pop
sub
jmp
pop
push
mov
sub
and
pop
xor
or
jmp
add
xor
jmp
mov
add
pop
add
push
mov
sub
pop
sub
pop
movzbw
push
push
pop
jmp
push
mov
sub
jmp
pushl
pop
push
jmp
xchg
pop
mov
mov
add
pop
push
mov
add
pop
jmp
pop
shr
jmp
or
sub
mov
pop
push
subl
pop
push
mov
jmp
pop
add
push
mov
and
add
and
xor
push
jmp
neg
add
jmp
add
sub
mov
mov
jmp
sub
mov
push
pop
push
mov
mov
xor
add
push
mov
xchg
xchg
not
xchg
xor
xor
jmp
pop
sub
jmp
mov
push
mov
push
pop
push
push
pop
push
jmp
add
sub
jmp
mov
push
jmp
sub
jmp
shr
jmp
xchg
pop
mov
mov
push
mov
xor
jmp
add
jmp
xchg
pop
mov
mov
jmp
mov
xor
jmp
add
sub
jmp
add
mov
add
push
mov
add
pop
jmp
push
mov
jmp
mov
mov
sub
pop
mov
sub
pop
jmp
push
jmp
shr
neg
add
add
mov
add
push
pop
jmp
mov
add
add
xchg
pop
add
popl
sub
mov
mov
subl
add
push
mov
add
pop
pop
jmp
xor
mov
mov
add
push
jmp
mov
mov
jmp
mov
sub
pop
sub
sub
add
push
jmp
mov
xchg
push
notl
jmp
sub
jmp
pop
push
jmp
sub
jmp
mov
mov
mov
add
jmp
xchg
mov
sub
jmp
inc
sub
add
mov
jmp
push
mov
jmp
push
push
jmp
mov
add
add
jmp
sub
not
push
mov
jmp
add
add
sub
pop
add
sub
jmp
dec
not
jmp
pop
push
mov
add
add
xchg
pop
add
push
mov
jmp
push
mov
add
sub
xchg
pop
mov
notl
jmp
sub
mov
push
mov
add
add
xchg
pop
xchg
mov
jmp
sub
mov
mov
xor
jmp
push
push
mov
jmp
inc
jmp
sub
pop
sub
jmp
mov
jmp
add
add
push
jmp
mov
add
jmp
pop
add
mov
jmp
pop
shr
jmp
mov
push
push
pop
sub
push
mov
xor
pop
xor
mov
mov
add
add
add
jmp
mov
mov
pop
not
push
mov
add
sub
jmp
xor
xor
xor
mov
sub
push
mov
inc
sub
and
inc
jmp
mov
push
jmp
sub
add
add
push
mov
inc
jmp
shl
shr
jmp
popl
jmp
popl
mov
jmp
xchg
pop
push
jmp
sub
mov
addl
jmp
sub
mov
pop
pop
add
sub
jmp
lods
xor
push
sub
mov
push
mov
add
push
mov
add
sub
xchg
pop
mov
mov
add
pop
mov
pop
dec
push
jmp
pop
sub
xchg
pop
add
jmp
mov
inc
add
jmp
mov
not
add
push
push
jmp
pop
xor
mov
pop
shl
jmp
dec
shl
jmp
pop
jmp
push
push
push
jmp
mov
pop
push
jmp
pop
jmp
mov
sub
pop
sub
pushl
pop
jmp
mov
mov
pop
mov
pop
jmp
movzbw
push
mov
jmp
add
add
sub
pop
add
sub
sub
push
mov
mov
push
mov
shl
add
and
jmp
add
jmp
mov
push
mov
mov
pop
jmp
add
pop
jmp
sub
sub
push
mov
shl
shr
add
push
mov
and
sub
inc
sub
jmp
or
pop
inc
jmp
mov
jmp
add
mov
add
push
mov
push
mov
and
jmp
add
add
sub
add
sub
pop
push
mov
jmp
add
xchg
mov
mov
jmp
mov
push
mov
add
pop
sub
add
jmp
push
push
mov
add
jmp
dec
inc
add
sub
jmp
push
mov
add
pop
not
xchg
push
mov
sub
mov
jmp
notl
mov
add
jmp
mov
jmp
push
jmp
mov
notl
pop
jmp
sub
and
jmp
add
add
pop
add
xor
xor
xor
mov
shlw
pushf
jmp
push
mov
jmp
xchg
pop
jmp
push
push
jmp
pop
push
mov
jmp
xor
dec
xchg
sub
jmp
add
pop
push
jmp
xchg
jmp
or
push
mov
add
jmp
mov
mov
jmp
add
add
push
jmp
pop
jmp
mov
jmp
push
pushl
pop
popl
pop
pushl
jmp
add
sub
pop
jmp
pop
push
mov
mov
sub
jmp
push
mov
add
sub
xchg
pop
mov
mov
push
jmp
push
push
pop
jmp
push
push
pop
add
sub
jmp
inc
inc
jmp
push
mov
jmp
pop
sub
xchg
mov
mov
push
jmp
or
pop
and
shr
shr
add
jmp
pop
popl
mov
imul
sub
mov
jmp
not
jmp
add
xchg
pop
jmp
mov
push
jmp
dec
add
add
or
sub
or
pop
add
sub
sub
sub
add
add
mov
jmp
add
mov
pop
push
pop
pop
jmp
pushl
pushl
mov
add
jmp
pop
push
mov
push
jmp
mov
sub
mov
mov
jmp
add
mov
sub
mov
add
jmp
add
jmp
add
sub
add
jmp
pop
mov
pushl
pop
popl
mov
jmp
push
mov
add
jmp
xor
pop
mov
pushl
pushl
jmp
add
jmp
push
push
mov
mov
pop
jmp
mov
and
xor
push
mov
add
pop
jmp
add
push
jmp
mov
jmp
pop
sub
mov
mov
or
pop
add
jmp
mov
add
push
push
jmp
mov
add
jmp
push
push
jmp
inc
jmp
add
jmp
pop
add
jmp
pop
add
sub
jmp
add
xor
jmp
push
jmp
add
add
xchg
mov
jmp
pop
add
sub
push
mov
mov
sub
sub
add
pop
add
push
mov
jmp
shl
sub
push
jmp
pop
add
jmp
push
mov
jmp
add
sub
mov
mov
or
push
subl
sub
addl
jmp
push
mov
jmp
push
push
mov
add
sub
push
jmp
sub
mov
jmp
mov
sub
pop
sub
mov
push
pop
add
push
sub
pop
xor
dec
sub
push
mov
sub
pop
sub
add
add
jmp
sub
pop
popl
addl
pushl
mov
push
push
pop
add
push
mov
jmp
mov
jmp
mov
mov
sub
and
push
mov
mov
push
mov
sub
xchg
pop
xor
xor
pop
jmp
sub
jmp
push
mov
add
add
xchg
mov
jmp
mov
jmp
add
add
pop
add
add
add
sub
pop
sub
jmp
pop
add
jmp
sub
pushl
pop
add
sub
jmp
push
mov
add
jmp
mov
xor
pop
add
sub
push
mov
mov
jmp
pushl
pop
sub
mov
mov
add
add
xchg
pop
push
mov
not
sub
xor
pop
sub
jmp
pop
add
jmp
pop
pop
jmp
sub
xchg
pop
mov
mov
not
sub
jmp
and
push
mov
xor
sub
jmp
mov
push
mov
jmp
push
mov
push
mov
jmp
sub
jmp
mov
mov
jmp
mov
push
mov
add
jmp
xchg
mov
mov
jmp
add
push
mov
and
shr
add
inc
push
mov
and
pop
push
push
mov
jmp
or
jmp
xor
jmp
pop
xor
xor
xor
pop
jmp
push
pop
add
add
xchg
pop
jmp
lods
push
jmp
push
mov
push
pop
add
mov
add
push
mov
neg
add
dec
inc
sub
jmp
and
mov
add
xor
mov
pop
addl
add
subl
mov
add
addl
jmp
push
mov
shr
shl
shl
shl
xor
or
pop
jmp
add
jmp
pushl
pop
push
mov
jmp
lods
push
mov
jmp
mov
jmp
xor
push
mov
add
mov
add
push
mov
xor
pop
add
jmp
add
pop
sub
subl
jmp
mov
push
jmp
push
jmp
mov
addl
pop
push
mov
add
push
xchg
not
xchg
mov
jmp
mov
add
add
push
mov
add
mov
mov
add
mov
add
jmp
mov
push
mov
and
shl
push
mov
mov
inc
add
add
shr
jmp
sub
mov
mov
add
push
mov
add
jmp
add
jmp
pushl
pop
add
and
jmp
add
add
sub
pop
neg
add
and
push
mov
sub
pop
push
mov
jmp
mov
add
jmp
push
mov
mov
pop
or
dec
xor
mov
jmp
not
jmp
mov
add
pushl
pop
add
sub
mov
mov
add
add
push
jmp
push
mov
jmp
add
add
sub
pop
jmp
xor
jmp
pop
push
jmp
mov
jmp
add
pop
add
pop
push
push
mov
addl
jmp
mov
neg
dec
sub
jmp
add
xor
xor
xor
mov
pushl
jmp
add
jmp
pop
jmp
add
add
xchg
pop
jmp
mov
mov
add
pop
and
pop
jmp
add
jmp
push
pop
add
add
jmp
pop
pushl
pushl
pushl
pop
push
mov
push
mov
add
mov
push
jmp
push
mov
jmp
add
add
add
push
mov
dec
xor
or
or
add
sub
mov
jmp
push
mov
mov
pop
pop
or
je
push
push
popl
push
mov
push
pushl
pop
add
add
jmp
push
mov
dec
not
xor
or
jmp
add
add
sub
pop
add
xchg
mov
sub
mov
mov
add
jmp
pop
jmp
mov
pop
jmp
add
sub
jmp
addl
sub
jmp
pop
jmp
mov
mov
jmp
sub
mov
add
sub
sub
jmp
sub
pop
jmp
shr
shl
push
mov
and
jmp
add
xchg
mov
sub
jmp
mov
pop
subl
add
addl
mov
add
popl
addl
pop
push
mov
sub
add
add
mov
add
add
xor
jmp
sub
mov
push
jmp
pop
add
push
mov
add
pop
push
mov
add
pop
xchg
pop
or
je
pushl
jmp
mov
jmp
and
dec
jmp
push
mov
add
jmp
push
mov
mov
push
mov
inc
or
add
jmp
or
push
mov
jmp
shr
jmp
pushl
jmp
push
mov
mov
sub
pushl
pop
add
jmp
pop
jmp
sub
pop
sub
jmp
not
or
push
mov
jmp
push
mov
jmp
not
sub
add
jmp
add
push
jmp
dec
add
add
add
pop
add
sub
jmp
pop
popl
pop
mov
pushl
jmp
add
sub
sub
jmp
inc
jmp
add
pop
dec
neg
jmp
xchg
pop
pop
pushl
jmp
inc
xor
mov
pop
dec
push
jmp
shl
xor
sub
pop
jmp
push
jmp
shr
inc
jmp
mov
sub
add
add
pop
jmp
add
push
mov
push
mov
jmp
mov
add
jmp
add
sub
jmp
add
inc
dec
not
jmp
shr
add
jmp
mov
jmp
jmp
sub
push
mov
jmp
pop
not
xor
push
push
mov
jmp
push
jmp
mov
push
mov
jmp
push
mov
add
mov
add
shl
sub
jmp
xor
xor
add
xor
pop
add
jmp
sub
pop
mov
pop
xor
jmp
or
je
pushl
pushl
mov
push
mov
add
push
mov
sub
or
shr
xor
add
pop
push
pushl
pop
popl
pop
jmp
pop
jmp
add
add
push
mov
mov
jmp
sub
jmp
mov
jmp
mov
add
add
push
push
pop
add
push
mov
add
sub
add
add
jmp
and
pop
sub
shl
shr
sub
add
pushl
pop
jmp
pop
jmp
mov
mov
jmp
sub
xchg
pop
mov
push
push
pop
jmp
pushw
jmp
sub
mov
push
jmp
add
xchg
pop
sub
push
jmp
xor
mov
pop
add
pushl
jmp
push
jmp
mov
jmp
sub
sub
pop
add
mov
push
mov
mov
add
add
jmp
add
sub
jmp
pop
jmp
mov
mov
xor
pop
and
jmp
not
inc
mov
mov
add
push
mov
jmp
mov
add
pop
jmp
push
mov
jmp
add
add
add
push
mov
not
push
mov
jmp
or
or
jmp
add
add
sub
pop
push
jmp
pop
mov
add
mov
add
pushl
pop
jmp
pop
xchg
jmp
add
jmp
pop
mov
push
mov
jmp
push
mov
sub
pop
pop
jmp
push
mov
shl
jmp
push
mov
xor
jmp
pushl
jmp
sub
mov
mov
add
jmp
jmp
sub
pushl
pop
jmp
add
jmp
shl
add
add
pop
add
sub
pushl
pop
push
mov
add
jmp
inc
xor
add
pop
jmp
mov
sub
shl
add
sub
jmp
pop
push
push
push
jmp
sub
sub
sub
push
push
jmp
mov
jmp
mov
push
mov
sub
mov
addl
jmp
sub
push
jmp
not
or
sub
push
mov
mov
jmp
add
jmp
pop
push
mov
add
add
jmp
shr
xor
sub
pop
add
add
push
mov
jmp
mov
jmp
sub
pop
sub
add
add
sub
add
jmp
dec
push
push
jmp
push
jmp
pop
jmp
push
sub
mov
mov
push
subl
mov
add
add
pop
push
mov
and
neg
not
jmp
shr
shr
sub
sub
pop
add
pushl
pop
add
add
push
pushl
pop
popl
mov
and
pushf
jmp
mov
not
sub
inc
jmp
mov
add
sub
xchg
mov
jmp
pushl
pop
add
popl
mov
push
jmp
mov
add
pushl
mov
add
jmp
pop
add
xor
or
xor
add
pop
jmp
sub
jmp
neg
sub
jmp
xor
jmp
sub
pop
add
jmp
mov
test
pushf
jmp
xor
jmp
pop
sub
add
add
mov
add
jmp
add
sub
sub
mov
jmp
pop
popl
mov
jmp
and
pushl
pop
jmp
xor
pop
add
add
jmp
pop
xor
xor
jmp
sub
mov
add
xchg
mov
sub
pushf
jmp
add
mov
pop
mov
add
push
jmp
pop
jmp
sub
add
mov
add
add
xor
xor
xor
jmp
add
jmp
push
mov
not
jmp
xor
add
sub
jmp
mov
xor
shl
add
push
mov
and
jmp
add
pop
jmp
add
pop
sub
xchg
jmp
mov
jmp
mov
jmp
notl
pop
push
mov
not
push
jmp
pushl
pushl
pop
push
mov
add
push
mov
or
jmp
mov
pop
mov
jmp
pop
sub
jmp
pushl
jmp
mov
add
pop
jmp
popl
mov
btr
pushf
jmp
mov
add
pop
pop
jmp
pop
jmp
push
jmp
xchg
pop
push
jmp
mov
mov
jmp
add
sub
xchg
pop
mov
mov
push
mov
push
jmp
sub
jmp
add
pop
sub
pushl
pop
add
push
push
pop
inc
add
not
shl
add
add
jmp
mov
jmp
sub
pop
add
sub
jmp
xchg
jmp
push
jmp
add
push
push
pop
jmp
push
jmp
sub
add
add
jmp
xor
xor
pop
mov
mov
add
push
mov
jmp
xor
xor
dec
jmp
push
pushl
jmp
pop
jmp
mov
push
mov
jmp
shr
jmp
xchg
mov
jmp
xor
xor
xor
mov
push
mov
mov
jmp
pushl
jmp
mov
dec
inc
xor
dec
push
jmp
mov
push
mov
addl
pop
push
mov
sub
add
add
pop
sub
xor
xor
xor
pop
jmp
pop
push
jmp
pop
add
jmp
push
mov
add
pop
add
sub
jmp
push
mov
dec
neg
xor
sub
jmp
sub
mov
mov
sub
mov
mov
inc
xor
xor
sub
jmp
mov
add
add
jmp
inc
xor
shl
xor
jmp
sub
mov
mov
xor
pop
push
jmp
jmp
mov
jmp
shl
shl
add
add
jmp
mov
sub
mov
push
pop
add
add
xchg
pop
push
push
mov
add
sub
xchg
pop
mov
push
pop
add
sub
sub
mov
jmp
pop
jmp
push
jmp
inc
jmp
mov
push
jmp
lods
push
mov
pushw
mov
jmp
add
jmp
sub
add
jmp
mov
add
shl
push
mov
dec
add
jmp
mov
push
mov
jmp
add
add
pushl
pop
jmp
push
mov
sub
dec
jmp
pop
popl
mov
popw
xor
xor
xor
xor
jmp
pop
push
mov
add
add
sub
mov
jmp
add
add
add
pop
add
sub
push
jmp
mov
jmp
sub
inc
xor
mov
mov
push
mov
add
add
xchg
mov
jmp
push
mov
add
pop
xchg
mov
idiv
movzbw
pushw
mov
movzbw
push
pushf
jmp
add
jmp
add
mov
add
xor
pushw
jmp
pop
add
xor
add
add
push
mov
sub
pop
mov
push
mov
add
jmp
add
jmp
xchg
pop
mov
push
pop
jmp
mov
dec
shl
sub
dec
xchg
not
xchg
push
mov
mov
push
jmp
pop
jmp
mov
jmp
pop
jmp
push
mov
jmp
sub
add
add
pop
xchg
mov
push
jmp
popl
jmp
mov
push
jmp
push
push
pushl
jmp
sub
add
push
mov
add
sub
jmp
add
pop
push
mov
add
inc
push
mov
jmp
mov
pop
dec
inc
neg
neg
jmp
pop
sub
mov
mov
add
pushl
pop
add
xchg
mov
mov
push
jmp
negl
pushf
jmp
sub
mov
push
mov
mov
sub
mov
jmp
xor
xor
jmp
shl
sub
sub
jmp
and
pushl
jmp
or
sub
jmp
push
mov
jmp
pop
push
mov
sub
jmp
sub
mov
mov
jmp
xor
xor
mov
push
jmp
mov
mov
jmp
xor
xor
xor
jmp
add
jmp
sub
sub
mov
mov
xchg
not
jmp
mov
jmp
mov
add
sub
jmp
pop
jmp
xor
jmp
mov
push
push
mov
add
sub
xchg
pop
jmp
pushl
pushl
pop
add
jmp
push
push
mov
add
sub
mov
push
jmp
mov
pop
push
jmp
mov
pop
mov
jmp
pop
not
xchg
inc
push
push
pop
xor
pop
xor
jmp
add
xchg
pop
mov
push
mov
add
sub
jmp
add
dec
xor
sub
pop
pop
push
mov
xor
pop
jmp
add
pop
xchg
jmp
mov
push
mov
add
neg
and
add
jmp
pop
add
jmp
pop
jmp
sub
pop
mov
jmp
and
push
push
jmp
or
pop
push
mov
dec
shl
xor
push
mov
or
xor
and
add
add
jmp
add
jmp
pop
push
pushl
pop
jmp
xchg
pop
mov
add
pushl
jmp
pushl
pushl
pop
push
mov
mov
add
jmp
pop
sub
jmp
pop
jmp
pop
or
shr
and
add
sub
pushl
mov
add
jmp
mov
mov
jmp
mov
add
pop
add
push
push
mov
mov
pop
sub
pop
mov
jmp
xchg
jmp
add
jmp
sub
jmp
push
mov
shr
add
sub
pop
pop
sub
jmp
sub
jmp
pop
mov
addl
jmp
pushl
mov
add
popl
pop
decb
pushf
jmp
mov
add
jmp
pushl
pop
add
add
jmp
add
sub
jmp
push
mov
jmp
mov
jmp
mov
pop
jmp
mov
push
mov
jmp
sub
pushl
pop
jmp
mov
sub
mov
mov
add
push
mov
push
mov
add
add
jmp
push
mov
mov
jmp
sub
mov
push
jmp
push
mov
mov
or
pop
xor
jmp
mov
not
or
or
push
mov
sub
jmp
pop
add
add
add
xchg
jmp
pop
add
xchg
mov
push
mov
push
pop
jmp
add
pop
sub
push
jmp
sub
push
mov
add
pop
jmp
push
mov
push
mov
mov
add
pop
push
push
jmp
pop
add
add
jmp
add
sub
pop
sub
pop
jmp
add
sub
mov
mov
not
inc
push
jmp
add
pop
add
pop
add
sub
push
mov
shl
jmp
sub
jmp
pushl
jmp
shl
push
mov
mov
or
jmp
mov
jmp
mov
shl
xchg
not
xchg
jmp
push
jmp
pop
add
jmp
pop
sub
add
pop
pop
push
jmp
pushl
jmp
sub
jmp
xor
pop
jmp
sub
mov
mov
add
sub
jmp
pop
push
mov
xor
jmp
pop
push
mov
or
jmp
or
push
notl
jmp
add
add
pop
jmp
add
pop
inc
jmp
add
pop
push
pushl
pop
popl
pop
sub
pushf
jmp
push
pop
shr
inc
jmp
add
pushl
pop
push
mov
jmp
addl
pop
push
mov
add
pop
sub
xor
xor
xor
pop
mov
push
jmp
xor
and
mov
add
push
mov
xor
mov
add
jmp
pop
push
mov
jmp
add
mov
pop
shl
or
neg
inc
jmp
xorl
pop
push
jmp
xor
sub
sub
jmp
push
jmp
mov
jmp
pop
add
jmp
sub
add
add
pop
add
xchg
mov
jmp
mov
mov
jmp
pushl
popf
pop
rcrb
pushf
jmp
mov
add
jmp
sub
jmp
push
mov
xchg
jmp
mov
add
popl
sub
mov
jmp
pop
shl
sub
or
or
jmp
mov
push
pop
add
push
push
pop
push
mov
jmp
push
mov
push
mov
add
pop
push
mov
sub
jmp
popl
pop
pushl
pushl
pop
push
mov
jmp
sub
mov
pop
neg
shr
shl
sub
jmp
mov
or
jmp
pop
push
mov
and
add
and
sub
sub
pop
xchg
mov
mov
pushl
pop
push
mov
add
add
xchg
pop
mov
add
push
jmp
add
sub
jmp
sub
pop
pop
neg
shl
push
sub
mov
mov
mov
pop
or
and
neg
dec
push
mov
jmp
mov
pop
push
jmp
mov
add
pop
xor
xor
xor
pop
push
mov
mov
and
jmp
push
mov
sub
pop
push
pushl
pop
popl
jmp
add
mov
sub
mov
mov
add
jmp
push
mov
or
add
or
push
jmp
mov
mov
push
jmp
or
add
add
pop
jmp
and
mov
add
push
mov
xor
jmp
mov
push
mov
and
mov
add
sub
jmp
mov
jmp
mov
add
dec
add
jmp
push
incl
pop
jmp
mov
add
add
and
add
jmp
mov
jmp
inc
sub
or
xor
add
pop
push
mov
neg
jmp
pop
sub
mov
mov
push
mov
add
push
jmp
add
jmp
xor
xor
pop
push
mov
add
sub
xchg
pop
mov
jmp
inc
push
mov
and
pop
jmp
mov
push
mov
push
mov
add
add
xor
xor
jmp
mov
sub
pop
xchg
pop
mov
mov
add
sub
jmp
mov
not
add
shl
sub
not
sub
or
jmp
pop
jmp
xor
pop
add
jmp
add
jmp
add
jmp
neg
xor
sub
add
add
mov
add
pop
pop
jmp
pop
shr
push
mov
sub
jmp
not
xchg
pop
jmp
mov
jmp
mov
add
mov
pushl
pop
push
mov
add
jmp
push
push
mov
jmp
pop
xchg
jmp
notl
jmp
mov
pop
add
pop
pop
push
jmp
pop
sub
jmp
mov
push
jmp
pop
jmp
sub
neg
xor
neg
xor
jmp
xor
xor
xor
pop
idiv
pushw
mov
jmp
xor
shr
not
inc
push
mov
jmp
add
xchg
jmp
sub
xor
xor
xor
pop
jmp
pop
push
xchg
not
xor
xor
xor
jmp
mov
push
push
mov
addl
pop
jmp
mov
jmp
mov
add
jmp
neg
shl
jmp
add
push
jmp
add
add
xchg
pop
jmp
add
popl
mov
mov
jmp
sub
add
pop
add
sub
add
movl
jmp
mov
add
jmp
dec
xor
jmp
push
jmp
push
mov
push
mov
add
push
mov
add
pop
sub
mov
push
mov
push
mov
push
mov
xor
jmp
add
sub
not
inc
inc
push
mov
push
pop
jmp
sub
mov
mov
push
mov
mov
jmp
pop
xor
pop
add
pop
jmp
xchg
xor
add
jmp
add
jmp
push
jmp
lods
xor
push
push
mov
jmp
xchg
pop
jmp
lods
xor
push
mov
add
sub
jmp
sub
jmp
or
pop
sub
add
mov
add
xor
xor
xor
jmp
push
jmp
add
sub
push
mov
sub
pop
sub
sub
push
jmp
sub
jmp
or
add
mov
jmp
add
jmp
mov
pop
jmp
shl
or
not
neg
xor
mov
pop
jmp
pushl
pop
add
jmp
mov
add
pop
add
jmp
mov
and
jmp
sub
pop
pop
mov
push
jmp
add
add
pop
not
push
mov
jmp
add
mov
add
push
xorl
pushl
pushl
pop
sub
jmp
mov
jmp
mov
pop
mov
pop
shr
add
shr
jmp
pushl
pop
add
xor
jmp
dec
dec
jmp
sub
jmp
sub
pop
push
jmp
pop
jmp
mov
jmp
pop
jmp
pop
add
sub
pop
push
mov
jmp
pop
shl
jmp
pop
jmp
add
xchg
mov
pushl
pushl
pop
jmp
mov
add
jmp
sub
sub
add
pop
pop
add
push
jmp
add
pop
jmp
mov
sub
mov
mov
push
mov
jmp
push
mov
push
mov
subl
add
jmp
and
pop
or
je
pushl
sub
mov
push
mov
jmp
add
jmp
xor
movzbl
pushw
mov
jmp
mov
add
jmp
pushl
pop
push
mov
jmp
xchg
pop
jmp
neg
dec
sub
add
push
mov
not
xor
jmp
and
dec
sub
mov
mov
sub
mov
jmp
mov
add
pop
jmp
mov
mov
jmp
mov
push
jmp
pop
push
jmp
pop
add
jmp
or
pop
push
mov
add
pop
jmp
add
sub
xchg
jmp
pop
push
mov
sub
pop
xor
xor
xor
mov
jmp
push
push
mov
add
sub
xchg
pop
mov
sub
mov
mov
jmp
pop
xor
mov
add
add
pop
sub
mov
push
mov
jmp
mov
mov
add
not
push
mov
or
jmp
xor
pop
sub
sub
push
jmp
push
mov
jmp
mov
add
sub
xchg
pop
jmp
mov
add
pop
add
sub
sub
mov
add
push
pushl
pushl
pop
add
popl
jmp
sub
mov
mov
jmp
push
mov
push
mov
jmp
sub
jmp
push
jmp
add
pop
push
jmp
pushl
pop
push
mov
mov
add
add
xchg
pop
mov
jmp
lods
jmp
pop
push
jmp
mov
jmp
sub
push
mov
neg
shr
neg
shr
jmp
pop
xor
mov
push
jmp
xor
mov
pop
sub
pop
sub
push
sub
mov
mov
mov
pop
add
pop
addl
jmp
add
jmp
pop
add
xchg
pop
jmp
pop
inc
add
push
jmp
shr
sub
add
pop
add
jmp
mov
add
jmp
sub
push
pop
pop
add
jmp
add
xchg
jmp
pop
jmp
push
mov
push
mov
jmp
push
jmp
mov
or
sub
add
jmp
push
mov
sub
pop
sub
add
add
add
jmp
sub
mov
addl
jmp
mov
mov
push
mov
xor
sub
jmp
mov
jmp
push
mov
mov
pop
jmp
add
xchg
pop
jmp
add
jmp
or
not
add
xor
xor
pop
mov
xor
pop
and
jmp
push
push
jmp
xchg
inc
add
push
jmp
inc
xchg
not
push
jmp
pop
mov
add
push
mov
push
pop
xor
jmp
push
mov
and
push
mov
add
add
pop
and
pop
not
push
mov
neg
shl
jmp
mov
pop
pushl
pop
jmp
push
mov
add
pop
add
push
mov
jmp
pop
sub
jmp
push
pop
push
mov
not
sub
xor
xchg
jmp
mov
sub
jmp
sub
shr
push
mov
sub
jmp
mov
mov
xor
pop
add
pop
push
mov
mov
and
pushl
mov
add
push
push
pop
add
sub
xchg
jmp
mov
push
mov
jmp
push
mov
add
xor
pushl
pop
push
mov
add
add
jmp
add
mov
mov
add
sub
neg
push
mov
not
inc
or
dec
jmp
xor
pop
add
pop
jmp
pop
jmp
add
pop
jmp
mov
shlb
pushf
jmp
push
push
push
popl
push
mov
push
jmp
push
mov
sub
xor
pop
jmp
xor
add
sub
sub
pop
pop
jmp
push
mov
add
jmp
dec
not
sub
sub
sub
sub
pop
pop
and
push
push
jmp
push
mov
xor
pop
add
pop
jmp
push
jmp
mov
push
jmp
mov
jmp
add
push
mov
sub
add
push
mov
jmp
sub
jmp
push
push
pop
push
mov
add
pop
add
xchg
mov
jmp
mov
add
add
jmp
mov
neg
xor
xor
sub
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
add
pop
mov
push
mov
add
add
xchg
jmp
pop
mov
mov
sub
add
add
sub
add
pushl
jmp
xor
xor
xor
sub
mov
push
jmp
mov
jmp
mov
jmp
pop
mov
jmp
push
notl
jmp
mov
jmp
add
jmp
add
add
push
jmp
mov
add
jmp
mov
sub
mov
add
push
mov
jmp
pop
add
pop
push
mov
add
add
sub
jmp
mov
push
mov
add
add
jmp
mov
xor
pop
mov
pop
add
sub
mov
jmp
mov
push
mov
push
mov
jmp
pop
jmp
mov
jmp
push
mov
push
mov
sub
pop
jmp
sub
push
mov
mov
pop
pop
jmp
mov
add
add
add
sub
pop
jmp
xor
shr
inc
sub
mov
jmp
or
add
mov
pop
jmp
pop
jmp
pop
jmp
mov
add
jmp
add
xor
xor
xor
pop
jmp
mov
mov
push
sub
mov
push
mov
add
xor
jmp
pop
sub
sub
mov
jmp
push
mov
mov
pushl
pop
add
push
jmp
add
pop
xor
jmp
mov
pop
add
pop
add
push
pushl
pop
popl
pop
jmp
push
mov
xor
pop
push
mov
xor
pop
add
sub
add
add
sub
jmp
lods
jmp
sub
or
mov
jmp
push
mov
jmp
pop
jmp
add
push
push
mov
add
mov
pop
pushl
mov
add
push
mov
sub
mov
mov
add
pop
add
jmp
mov
jmp
pop
push
mov
jmp
or
push
mov
shr
neg
shl
jmp
pop
xchg
mov
or
pushf
jmp
pop
pushl
pop
add
jmp
mov
sub
pop
sub
jmp
mov
push
mov
jmp
push
jmp
addl
pop
add
jmp
xchg
mov
jmp
push
pop
add
or
and
push
mov
jmp
lods
add
push
mov
inc
add
or
push
mov
add
jmp
push
mov
sub
mov
push
jmp
pop
add
sub
jmp
sub
shr
or
add
sub
pop
jmp
xchg
pop
jmp
push
push
jmp
mov
jmp
push
jmp
add
neg
dec
shr
neg
xor
jmp
xchg
pop
jmp
pushl
mov
add
add
jmp
mov
jmp
push
pop
pop
mov
add
mov
add
add
mov
push
jmp
add
pushl
jmp
push
mov
jmp
and
pushl
mov
jmp
add
add
xchg
jmp
add
push
jmp
shr
dec
add
add
pop
add
pop
add
jmp
add
add
mov
add
push
pushl
jmp
mov
mov
jmp
add
pop
jmp
sub
xchg
pop
mov
mov
xor
push
push
jmp
add
sub
sub
jmp
add
and
sub
jmp
pop
jmp
shr
sub
push
push
push
jmp
sub
mov
jmp
sub
mov
jmp
pop
jmp
xor
add
mov
add
add
jmp
sub
push
jmp
add
pop
add
push
mov
add
pop
jmp
xor
sub
mov
add
push
mov
push
jmp
add
jmp
xor
pushl
mov
add
jmp
mov
jmp
add
add
sub
sub
push
mov
and
not
sub
xor
not
xor
sub
pop
pop
xchg
pop
xor
jmp
mov
jmp
push
mov
add
sub
jmp
add
pop
add
xchg
pop
jmp
add
pop
push
push
push
mov
add
jmp
xor
movzwl
pushw
jmp
push
jmp
sub
pop
push
jmp
mov
add
add
push
mov
pushl
mov
add
popl
mov
jmp
push
jmp
neg
shl
jmp
mov
jmp
sub
jmp
add
jmp
push
mov
jmp
pushl
pop
jmp
pop
add
jmp
add
pop
jmp
or
mov
add
push
push
pop
add
shl
add
add
pop
add
pop
sub
add
add
jmp
mov
mov
add
pop
push
sub
jmp
sub
jmp
add
or
pop
dec
xor
push
mov
jmp
add
jmp
push
mov
add
xor
shr
jmp
pushl
jmp
push
pop
jmp
pushl
pop
sub
mov
mov
push
jmp
push
jmp
and
jmp
pop
shr
sub
mov
notl
pop
add
jmp
not
add
add
mov
pop
shl
sub
mov
mov
shl
push
mov
sub
pop
add
push
mov
and
pop
push
mov
add
xor
pop
xor
jmp
pop
shr
and
add
mov
pop
push
mov
jmp
sub
pop
xchg
mov
push
mov
jmp
add
xchg
jmp
and
sub
push
mov
add
shl
jmp
mov
push
mov
shr
or
neg
sub
add
pop
add
sub
pushl
pop
add
push
mov
mov
shl
jmp
push
push
mov
mov
pushl
jmp
mov
jmp
mov
xor
shr
and
shr
add
and
pop
xor
sub
pop
xor
pop
add
push
mov
mov
or
jmp
sub
jmp
mov
pushl
pop
add
push
jmp
push
jmp
pop
mov
push
mov
mov
add
mov
pop
push
mov
mov
jmp
jmp
mov
push
jmp
push
mov
not
dec
jmp
add
push
push
jmp
push
push
jmp
push
mov
jmp
pop
add
sub
mov
jmp
sub
xchg
jmp
mov
push
jmp
mov
jmp
add
shr
xor
add
sub
add
mov
add
add
jmp
sub
sub
add
movzbl
popl
jmp
xchg
pop
dec
not
add
push
mov
jmp
dec
add
sub
sub
and
pop
xor
shr
inc
push
mov
add
jmp
add
jmp
push
push
pop
sub
jmp
pushl
pop
add
jmp
pushl
pushl
pop
push
mov
add
push
sub
jmp
push
jmp
shl
and
xor
add
pop
add
jmp
mov
add
xor
jmp
mov
push
push
mov
mov
pop
mov
mov
add
mov
pop
mov
jmp
xor
jmp
mov
jmp
sub
jmp
push
mov
jmp
add
pop
sub
xchg
mov
jmp
dec
and
and
shr
add
add
jmp
shr
add
or
push
mov
jmp
mov
xor
neg
sub
sub
add
pop
add
sub
pop
push
pushl
pop
popl
mov
shr
jmp
push
mov
dec
add
xor
push
mov
mov
jmp
add
push
mov
jmp
add
add
xchg
pop
sub
sub
add
add
push
mov
sub
jmp
xchg
mov
add
jmp
push
mov
push
mov
add
jmp
mov
jmp
mov
add
pop
jmp
sub
pop
add
add
sub
pop
sub
sub
pop
sub
mov
pushl
pop
jmp
push
mov
add
not
add
sub
push
mov
add
pop
jmp
pop
and
pop
add
add
jmp
add
or
pop
sub
mov
pop
push
mov
not
jmp
push
mov
add
sub
xchg
pop
mov
jmp
and
mov
add
push
push
jmp
pop
xor
pop
sub
mov
jmp
push
mov
add
jmp
push
jmp
add
push
push
mov
mov
pop
jmp
sub
jmp
add
jmp
add
jmp
mov
pop
add
neg
neg
add
sub
add
add
pushl
mov
push
mov
add
jmp
mov
jmp
mov
or
mov
add
dec
jmp
push
jmp
push
mov
mov
xchg
not
xchg
xor
shr
shl
or
jmp
sub
or
push
mov
xor
pop
jmp
sub
jmp
add
jmp
pushl
pop
popl
pop
or
shl
push
jmp
xor
jmp
add
jmp
add
add
jmp
push
mov
sub
sub
pop
sub
jmp
sub
add
pop
and
mov
jmp
mov
inc
jmp
sub
or
add
sub
mov
add
jmp
add
jmp
push
pop
and
shl
and
add
add
pop
push
jmp
mov
add
add
xchg
jmp
xchg
jmp
mov
add
jmp
mov
add
mov
push
mov
push
jmp
push
mov
jmp
shr
jmp
add
pop
mov
pop
jmp
pop
jmp
or
shl
push
jmp
add
sub
add
add
sub
jmp
pushl
pop
sub
jmp
sub
pop
mov
pop
jmp
mov
jmp
pushl
popf
pop
adc
pushf
jmp
xchg
jmp
popl
mov
jmp
pop
xchg
mov
push
mov
jmp
push
mov
push
jmp
shr
xor
sub
pop
add
pop
jmp
add
add
mov
jmp
mov
add
push
jmp
mov
sub
add
jmp
mov
push
mov
jmp
dec
shl
inc
xor
add
pop
add
xchg
pop
xchg
mov
xor
pushf
jmp
xor
jmp
add
add
push
mov
mov
shl
push
mov
mov
or
dec
not
inc
jmp
add
mov
pop
pop
jmp
mov
jmp
push
jmp
mov
push
mov
jmp
mov
push
pop
push
jmp
add
shr
jmp
pop
jmp
add
sub
pushl
pop
push
push
pop
jmp
push
mov
mov
add
jmp
movswl
push
mov
jmp
pushl
pop
add
jmp
push
push
pushl
pop
jmp
mov
push
jmp
push
jmp
mov
rorb
pushf
jmp
add
push
mov
add
pop
mov
jmp
xchg
pop
mov
push
mov
push
mov
jmp
push
jmp
mov
add
push
mov
jmp
mov
push
mov
mov
shr
push
mov
add
push
mov
jmp
inc
inc
shr
and
push
push
mov
push
jmp
sub
pop
add
add
sub
jmp
jmp
shl
jmp
push
sub
mov
push
pop
shr
push
push
jmp
push
jmp
pop
add
add
xchg
pop
add
add
sub
mov
push
jmp
add
sub
mov
mov
jmp
not
push
mov
add
add
jmp
mov
push
pop
jmp
pop
sub
pop
add
push
mov
or
pop
push
mov
not
xor
add
mov
add
jmp
sub
pop
mov
add
add
pop
jmp
mov
or
pop
push
mov
jmp
pop
push
jmp
sub
pop
xchg
pop
push
popl
push
mov
add
pop
jmp
add
push
mov
push
push
pop
shl
neg
jmp
pop
shr
push
push
jmp
mov
push
jmp
push
jmp
pop
push
mov
jmp
add
add
xchg
pop
pop
shr
shl
shl
not
sub
mov
mov
xor
pop
and
mov
add
shr
xor
push
sub
mov
pop
pushl
pop
push
push
jmp
add
pop
pop
sub
sub
push
jmp
sub
jmp
pushl
pop
add
sub
pushl
mov
add
push
mov
jmp
xor
inc
push
mov
mov
push
jmp
push
push
pop
jmp
mov
sub
jmp
xor
xor
jmp
xchg
pop
jmp
mov
mov
jmp
add
sub
jmp
pushl
pop
add
jmp
jmp
and
shr
xor
jmp
mov
add
not
and
jmp
xor
shr
jmp
inc
push
jmp
push
jmp
pop
jmp
pop
add
add
sub
add
sub
jmp
pushl
pop
popl
jmp
shl
push
mov
or
inc
sub
jmp
pop
xchg
mov
mov
mov
push
mov
push
mov
sub
pop
add
jmp
mov
xor
jmp
shr
jmp
pushl
mov
push
mov
add
push
mov
add
mov
add
xor
jmp
mov
jmp
mov
push
mov
mov
mov
add
and
shr
sub
push
mov
sub
mov
add
add
pop
jmp
push
jmp
mov
jmp
xchg
pop
push
mov
add
add
push
mov
jmp
push
jmp
pop
jmp
xchg
not
jmp
mov
and
dec
jmp
mov
add
pop
pushl
pushl
pop
jmp
mov
add
add
sub
mov
push
push
jmp
mov
mov
add
add
add
sub
add
add
jmp
push
mov
mov
sub
pop
jmp
push
mov
push
mov
add
add
xchg
pop
jmp
mov
mov
jmp
push
mov
add
jmp
pop
and
jmp
pop
add
push
jmp
not
xchg
xchg
sub
xor
add
sub
add
push
mov
jmp
push
mov
sub
jmp
neg
jmp
add
jmp
push
push
pop
sub
mov
mov
add
pop
sub
push
pushl
pop
popl
pop
jmp
push
mov
sub
add
add
jmp
push
mov
jmp
pop
add
pop
jmp
sub
mov
xorl
jmp
mov
jmp
mov
push
mov
jmp
pop
dec
not
sub
add
sub
jmp
pop
push
mov
sub
add
add
mov
push
jmp
mov
jmp
push
jmp
mov
jmp
push
mov
push
pop
add
jmp
add
sub
mov
add
sub
pop
pop
sub
mov
mov
push
jmp
xchg
mov
shr
push
mov
mov
sub
mov
jmp
mov
sub
mov
add
xchg
pop
mov
sub
mov
jmp
add
pop
add
pop
pop
add
sub
mov
mov
jmp
popl
jmp
pop
sub
xor
pushl
pop
push
mov
push
mov
mov
add
pop
add
xchg
pop
jmp
mov
jmp
mov
add
and
pushl
pop
push
push
jmp
mov
jmp
pop
sub
add
jmp
dec
sub
mov
pop
inc
push
mov
or
shr
sub
xor
pop
jmp
add
sub
pop
shl
push
mov
xor
pop
mov
jmp
mov
jmp
sub
push
mov
or
or
jmp
xor
pop
movzbl
push
mov
push
jmp
push
mov
jmp
mov
mov
push
push
pushl
jmp
mov
add
add
xchg
pop
push
mov
not
shr
dec
jmp
shr
jmp
xchg
jmp
mov
or
jmp
pop
jmp
pop
jmp
mov
jmp
xchg
not
xchg
push
pushl
mov
jmp
pop
xor
pop
push
jmp
sub
jmp
push
push
jmp
add
pop
jmp
and
pop
jmp
add
add
sub
jmp
shr
xor
add
add
jmp
xor
pop
jmp
push
push
pop
add
jmp
add
xchg
jmp
sub
pop
jmp
inc
add
add
pop
add
xchg
jmp
mov
mov
add
sub
xchg
pop
mov
jmp
xor
pop
jmp
push
pop
xor
mov
add
and
mov
add
or
je
pushl
push
push
pop
sub
mov
mov
sub
pop
jmp
pushl
pop
jmp
sub
jmp
shr
push
jmp
mov
jmp
jmp
mov
sub
jmp
pop
push
mov
add
add
xchg
pop
sub
add
add
mov
push
push
mov
add
add
add
xchg
pop
jmp
mov
jmp
push
push
mov
mov
pop
jmp
mov
jmp
inc
jmp
mov
push
push
pushl
pop
jmp
mov
add
jmp
mov
push
mov
push
pushl
pop
push
mov
add
jmp
not
xor
jmp
incl
mov
push
mov
push
jmp
mov
sub
mov
mov
add
add
xchg
pop
jmp
mov
mov
xor
pushl
pop
add
mov
mov
jmp
xor
xor
pop
and
jmp
xor
or
mov
add
neg
add
jmp
sub
sub
or
jmp
push
mov
sub
pop
sub
add
push
mov
add
pop
pop
push
mov
jmp
pop
push
push
pop
jmp
mov
sub
mov
mov
push
mov
jmp
mov
jmp
sub
mov
add
sub
jmp
push
mov
jmp
mov
push
mov
dec
dec
jmp
push
push
pop
jmp
add
add
pop
sub
pop
jmp
add
pop
jmp
mov
jmp
mov
shl
or
jmp
inc
shr
push
mov
not
or
push
mov
sub
sub
jmp
push
mov
push
pop
add
jmp
pop
mov
add
jmp
mov
push
mov
mov
pop
inc
or
neg
and
jmp
mov
add
add
push
mov
sub
mov
mov
mov
pop
neg
add
push
mov
sub
mov
add
sub
mov
add
xchg
pop
mov
push
pop
push
mov
sub
dec
sub
sub
jmp
sub
jmp
mov
jmp
pop
jmp
pop
not
sub
or
jmp
jmp
push
mov
or
xor
sub
add
add
pop
xchg
pop
jmp
shr
xor
add
jmp
push
jmp
mov
push
jmp
pop
mov
push
mov
addl
jmp
mov
push
mov
push
jmp
pushl
pushl
mov
add
jmp
mov
sub
mov
push
mov
add
mov
mov
add
push
subl
pop
add
pop
and
pushl
mov
add
push
push
pushl
jmp
push
pop
add
add
xchg
mov
pop
xor
xor
xor
jmp
pop
jmp
sub
mov
mov
jmp
mov
add
add
xchg
pop
jmp
pop
jmp
push
pop
add
or
xor
mov
jmp
add
push
mov
push
pop
push
jmp
add
jmp
mov
sub
pop
sub
add
add
pop
push
mov
add
sub
sub
pop
xor
xor
xor
mov
mov
mov
add
push
mov
add
sub
xchg
pop
mov
mov
add
mov
add
push
jmp
pop
pop
sub
not
xor
xor
xor
not
jmp
pushl
jmp
shrl
shll
addl
addl
popa
popf
ret
jmp
or
pop
jmp
mov
add
push
mov
mov
jmp
add
sub
sub
sub
mov
add
xchg
jmp
pop
jmp
add
jmp
mov
add
jmp
xor
xor
xor
mov
push
mov
push
mov
push
mov
jmp
add
jmp
jmp
xchg
jmp
sub
add
jmp
push
mov
jmp
push
jmp
push
mov
jmp
push
jmp
mov
push
jmp
add
sub
jmp
mov
add
jmp
mov
or
pop
add
jmp
pop
push
mov
push
mov
add
pop
add
jmp
rorw
pushf
jmp
mov
mov
pop
jmp
push
mov
sub
pop
xor
sub
pop
xchg
pop
jmp
pop
push
mov
sub
add
add
pushl
jmp
or
pop
jmp
push
push
pop
push
mov
jmp
and
pop
jmp
add
jmp
mov
pushl
mov
jmp
shll
pushf
jmp
mov
pushl
jmp
pushl
pop
push
jmp
sub
jmp
pop
add
push
mov
add
pop
pop
xor
jmp
xor
shl
push
mov
not
jmp
add
add
sub
push
push
mov
jmp
sub
pop
push
jmp
pushl
popf
pop
sbb
pushf
jmp
pop
jmp
add
add
jmp
add
add
xchg
mov
add
push
mov
push
pushl
pop
add
add
pop
jmp
mov
add
xor
mov
pushl
jmp
add
push
mov
pushl
pop
jmp
add
add
push
mov
pushl
mov
add
popl
jmp
add
add
pop
jmp
mov
and
mov
add
jmp
push
mov
add
sub
jmp
pushl
jmp
mov
add
mov
add
push
jmp
add
pushl
pop
jmp
add
xor
mov
pop
jmp
push
mov
add
jmp
shl
shl
xor
xor
inc
sub
push
jmp
push
mov
mov
pop
push
mov
push
mov
jmp
popl
pop
shlw
pushf
jmp
dec
add
push
jmp
add
add
pop
add
jmp
sub
jmp
mov
mov
mov
jmp
or
jmp
push
pop
jmp
pop
jmp
add
pushl
mov
push
jmp
push
jmp
mov
neg
xor
shr
xor
jmp
sub
mov
add
and
jmp
xor
sub
shl
sub
add
pop
add
sub
pop
add
add
sub
pop
sub
sub
pop
xor
xor
xor
mov
mov
jmp
sub
pop
push
mov
dec
shr
neg
inc
add
sub
jmp
xor
mov
add
add
inc
push
mov
xor
pop
add
pop
push
jmp
pop
sub
add
add
pop
push
mov
jmp
add
xchg
pop
btr
pushf
jmp
mov
push
mov
push
pop
push
jmp
push
pushl
mov
add
popl
pop
push
jmp
mov
push
mov
mov
pop
sub
add
sub
sub
pushl
jmp
pop
xchg
pop
jmp
sub
mov
add
or
jmp
xchg
jmp
pop
mov
mov
push
push
jmp
subl
jmp
imul
movzbw
pushw
mov
jmp
shl
jmp
add
jmp
push
mov
sub
sub
add
pop
jmp
pop
shr
shr
shl
xor
or
or
jmp
push
mov
mov
jmp
add
add
push
pushl
pop
jmp
add
sub
xor
add
add
sub
jmp
mov
jmp
sub
mov
jmp
push
pushl
pop
popl
pop
mov
push
pushl
pop
push
mov
mov
push
mov
add
pop
jmp
push
mov
shr
xor
add
sub
or
jmp
mov
add
pop
push
push
mov
jmp
jmp
sub
sub
jmp
mov
jmp
popl
push
push
push
mov
neg
add
jmp
shl
or
jmp
push
pop
jmp
xor
sub
mov
mov
sub
jmp
pop
add
push
mov
add
sub
jmp
mov
xor
pop
mov
pop
pop
xor
push
mov
jmp
pop
jmp
addl
pushl
pop
push
mov
add
sub
jmp
push
pop
pop
or
dec
not
sub
push
jmp
mov
pushl
jmp
shr
push
mov
jmp
xor
mov
shll
pushf
jmp
pop
popl
pop
mov
sub
mov
mov
add
jmp
add
jmp
add
jmp
mov
sub
mov
mov
mov
pop
jmp
push
mov
mov
add
sub
push
pushl
pop
popl
pop
mov
mov
add
push
mov
add
add
sub
pop
push
pushl
pop
popl
jmp
sub
jmp
mov
add
jmp
neg
add
xor
add
pop
add
xchg
pop
jmp
add
sub
mov
jmp
push
mov
sub
push
mov
sub
pop
mov
pop
jmp
xor
and
jmp
mov
xor
sub
pop
xor
xor
jmp
add
sub
sub
jmp
push
mov
add
add
jmp
add
jmp
mov
push
mov
jmp
mov
push
jmp
mov
xchg
not
xchg
jmp
add
sub
mov
mov
jmp
add
neg
sub
jmp
add
jmp
mov
sub
add
jmp
mov
add
push
mov
jmp
xor
jmp
push
pushl
pushl
pop
add
popl
mov
add
pushf
jmp
mov
push
jmp
add
pop
add
jmp
or
shr
sub
sub
pop
add
add
add
pop
sub
pop
add
push
mov
jmp
add
pop
add
push
mov
pushl
mov
add
popl
mov
pushl
pushl
pop
push
push
jmp
push
mov
mov
add
pop
sub
sub
pushl
pop
push
mov
add
add
xchg
pop
push
jmp
xor
add
mov
add
push
mov
mov
sub
sub
add
pop
xchg
mov
mov
push
pushf
jmp
mov
add
jmp
pop
xor
pop
push
push
push
jmp
add
mov
pop
and
jmp
lods
sub
mov
mov
add
pop
sub
jmp
add
sub
xchg
pop
mov
sub
mov
push
mov
addl
add
subl
pop
pushl
pop
jmp
pop
popl
pop
push
push
push
jmp
mov
push
mov
jmp
pop
jmp
xchg
mov
push
jmp
pop
pop
sub
pop
and
mov
push
mov
add
add
xchg
pop
jmp
xor
jmp
add
pop
pop
and
mov
push
mov
jmp
pop
add
add
jmp
xor
add
sub
pop
add
mov
push
mov
jmp
add
xor
xor
xor
mov
mov
push
mov
jmp
sub
mov
jmp
sub
xchg
mov
mov
push
mov
add
push
mov
shr
add
push
mov
push
mov
jmp
mov
jmp
add
push
mov
shr
push
mov
jmp
popl
push
jmp
sub
jmp
sub
jmp
add
mov
add
movzbl
jmp
popa
ret
pushl
jmp
mov
add
push
mov
jmp
popl
push
mov
jmp
push
jmp
add
xchg
pop
push
mov
sub
jmp
pushl
mov
add
add
or
je
pushl
addl
jmp
add
jmp
mov
pop
sub
pushl
mov
jmp
add
shl
shl
xor
jmp
mov
dec
not
jmp
pop
add
sub
jmp
push
pop
push
jmp
or
xor
sub
add
add
pop
push
push
push
jmp
pop
add
add
jmp
push
jmp
xchg
pop
add
sub
pop
jmp
push
jmp
push
mov
sub
mov
jmp
mov
add
sub
jmp
xor
xor
xor
jmp
sub
add
jmp
push
mov
push
mov
mov
pop
mov
jmp
pop
jmp
shl
sub
dec
push
mov
mov
sub
mov
push
mov
add
add
xchg
pop
jmp
negb
pushf
jmp
xor
xor
xor
mov
btc
pushf
jmp
push
jmp
shl
push
push
mov
mov
add
jmp
sub
pop
mov
push
push
pop
add
add
xchg
pop
push
mov
xor
neg
shl
xor
jmp
mov
push
push
pop
push
mov
shr
sub
jmp
push
push
push
pop
jmp
mov
jmp
add
mov
add
push
pushl
pushl
pop
jmp
sub
pop
shr
add
add
add
push
mov
sub
pop
mov
jmp
sub
jmp
push
addl
pop
jmp
mov
push
mov
mov
jmp
push
push
jmp
not
shr
add
sub
sub
add
jmp
add
pop
jmp
pushl
pop
add
push
mov
shl
xor
jmp
mov
jmp
jmp
add
jmp
pop
sub
pop
xor
pop
add
mov
add
xchg
mov
add
jmp
push
mov
xor
or
inc
shr
add
sub
mov
pop
push
mov
shl
shl
xor
push
mov
jmp
pop
sub
push
mov
jmp
pushl
mov
add
push
mov
add
push
mov
add
pop
push
pushl
mov
jmp
dec
or
not
add
dec
push
mov
add
pop
mov
pop
sub
sub
push
mov
push
mov
jmp
sub
pop
push
push
push
pop
push
xchg
not
jmp
mov
push
jmp
add
pop
sub
mov
mov
add
push
push
mov
inc
and
sub
mov
mov
dec
add
push
jmp
push
push
mov
mov
xor
pop
sub
jmp
add
jmp
xor
sub
jmp
add
mov
add
push
mov
sub
add
add
pop
xchg
mov
pushl
jmp
pop
pushl
pop
sub
mov
jmp
mov
add
sub
jmp
pop
inc
and
sub
sub
add
add
mov
add
xchg
mov
jmp
sub
mov
mov
jmp
mov
add
push
mov
jmp
shl
neg
jmp
xor
xor
xor
xor
jmp
sub
mov
mov
jmp
pushl
pop
add
push
jmp
push
push
push
pop
jmp
pop
imul
jmp
mov
add
push
push
mov
add
and
xor
sub
jmp
push
jmp
sub
sub
pop
add
add
pop
push
jmp
jmp
add
sub
push
pushl
pop
popl
mov
mov
pushl
pushl
pop
jmp
pop
sub
pop
mov
jmp
push
mov
xor
pop
sub
mov
jmp
push
mov
mov
pop
jmp
pushl
mov
push
mov
jmp
pop
popl
jmp
pop
pop
sub
push
mov
jmp
pop
add
jmp
add
sub
pop
sub
xchg
mov
push
mov
addl
popl
push
mov
jmp
xchg
mov
jmp
sub
not
jmp
mov
push
mov
push
mov
neg
sub
mov
mov
add
pushl
jmp
mov
push
mov
shr
jmp
xor
pushl
mov
add
add
push
pop
pop
push
mov
xor
add
jmp
pop
push
mov
add
sub
xor
dec
xchg
neg
xchg
jmp
sub
pop
not
xor
push
jmp
sub
pop
push
mov
mov
add
pop
push
mov
mov
mov
pop
pop
jmp
pop
add
jmp
sub
push
mov
mov
neg
jmp
add
popl
jmp
mov
mov
pop
pop
or
pop
add
jmp
push
mov
or
shr
xor
xor
sub
pop
add
pop
push
mov
sub
pop
push
pushl
jmp
mov
jmp
dec
or
sub
and
jmp
mov
add
add
xchg
jmp
push
mov
mov
or
pop
and
not
jmp
add
jmp
popw
jmp
push
mov
add
jmp
mov
sub
pop
neg
push
mov
jmp
mov
add
sub
xchg
pop
mov
mov
push
jmp
mov
mov
jmp
add
add
pop
or
or
xor
push
mov
mov
pop
jmp
mov
jmp
pop
push
mov
add
pop
add
xor
xor
jmp
push
mov
mov
add
sub
jmp
xor
dec
not
and
not
jmp
pop
jmp
pushl
pop
push
push
pop
jmp
add
pop
jmp
add
pop
sub
xor
jmp
push
mov
add
add
sub
pop
xchg
pop
add
mov
push
jmp
pop
sub
mov
mov
push
jmp
pop
mov
add
push
mov
pushl
pop
popl
mov
bt
pushf
jmp
sub
sub
sub
mov
jmp
pop
add
pop
xchg
mov
jmp
xchg
pop
jmp
xor
jmp
pushl
pushl
pushl
jmp
push
mov
jmp
mov
add
push
xorl
pop
push
mov
xor
pop
jmp
popl
addl
pop
push
mov
add
sub
xchg
pop
mov
mov
jmp
popl
mov
mul
push
jmp
pop
jmp
movzbw
push
pushf
jmp
add
sub
jmp
pushl
push
mov
sub
jmp
push
mov
add
and
jmp
push
pushl
pop
push
mov
add
add
xchg
pop
add
push
push
mov
jmp
pop
xor
xor
jmp
pop
push
pop
pop
dec
shr
push
mov
add
jmp
sub
jmp
push
mov
add
pop
push
jmp
mov
mov
add
mov
add
and
pop
shr
or
je
push
jmp
mov
jmp
add
mov
add
push
mov
add
jmp
and
jmp
neg
neg
shr
shr
add
jmp
sub
mov
push
jmp
mov
push
jmp
sub
mov
push
jmp
xchg
pop
push
popl
push
mov
add
pop
mov
add
jmp
mov
jmp
mov
jmp
push
mov
add
pop
jmp
add
pushl
pop
add
add
jmp
push
mov
not
shl
not
xor
xor
xor
mov
jmp
neg
shr
add
jmp
and
jmp
push
mov
mov
jmp
mov
add
add
xchg
jmp
pushl
jmp
pushl
pop
push
jmp
add
pop
jmp
pop
add
jmp
mov
mov
add
push
mov
mov
pop
pushl
pop
jmp
mov
push
sub
mov
addl
pop
add
add
xchg
jmp
subl
add
addl
pop
jmp
push
mov
mov
add
add
xchg
pop
dec
sub
not
sub
push
jmp
mov
jmp
add
jmp
push
jmp
mov
push
pushl
jmp
not
jmp
xor
pop
jmp
pop
jmp
add
pop
xchg
jmp
mov
mov
add
sub
xchg
pop
mov
sub
mov
push
mov
mov
push
jmp
mov
sub
sub
inc
pushw
mov
push
mov
mov
pop
push
mov
neg
jmp
pop
push
mov
mov
add
push
mov
jmp
sub
mov
add
or
pop
push
push
mov
mov
jmp
pop
add
add
jmp
popl
jmp
pop
add
push
mov
add
pop
sub
mov
pushl
jmp
sub
add
add
sub
mov
mov
shl
jmp
mov
add
add
add
xor
push
mov
jmp
dec
shl
xor
add
pop
sub
jmp
add
pop
push
mov
sub
pop
sub
push
mov
mov
jmp
mov
add
pushl
pop
add
xchg
mov
sub
mov
mov
jmp
mov
jmp
pop
push
pushl
pop
popl
pop
bt
pushf
jmp
sub
jmp
add
xchg
pop
xor
jmp
mov
jmp
mov
addl
jmp
pop
jmp
xor
add
jmp
push
push
jmp
pop
jmp
mov
pop
push
push
mov
mov
pop
jmp
mov
sub
sub
add
mov
mov
jmp
sub
add
push
mov
shr
jmp
sub
pop
push
push
jmp
push
mov
or
pop
push
mov
jmp
sub
neg
xor
mov
pop
add
jmp
jmp
push
mov
push
mov
sub
add
add
pop
add
jmp
sub
pushl
pop
add
jmp
pop
mov
add
push
mov
push
mov
sub
mov
pushl
pop
add
jmp
sub
add
pop
sub
mov
mov
add
pop
jmp
add
add
sub
pop
add
sub
sub
pop
xor
xor
jmp
pop
jmp
push
pop
add
pop
add
pop
jmp
mov
mov
add
pop
jmp
sub
mov
pop
add
jmp
sub
add
add
mov
jmp
or
shl
push
jmp
add
not
jmp
mov
add
shl
not
push
jmp
mov
sub
sub
jmp
push
mov
jmp
mov
push
mov
addl
mov
push
jmp
pop
mov
jmp
add
jmp
xor
pop
push
mov
mov
jmp
neg
push
mov
or
pop
add
not
push
mov
xor
not
neg
xor
sub
sub
add
pop
add
mov
jmp
xor
shr
dec
add
mov
mov
add
sub
add
sub
push
mov
jmp
sub
mov
mov
push
mov
push
mov
xor
pop
sub
add
pop
sub
xor
xor
jmp
sub
jmp
add
push
jmp
mov
add
xor
xor
jmp
mov
add
add
sub
jmp
push
mov
not
xor
add
add
jmp
mov
pop
push
mov
jmp
pop
sub
add
add
pop
xchg
mov
shrw
pushf
jmp
add
jmp
sub
mov
add
jmp
push
jmp
add
jmp
rep
add
push
mov
jmp
push
mov
jmp
mov
mov
jmp
add
push
mov
sub
pop
add
add
sub
add
sub
jmp
pop
jmp
mov
jmp
mov
add
jmp
push
mov
push
push
mov
jmp
sub
add
sub
mov
mov
mov
pop
pop
sub
push
jmp
add
sub
sub
jmp
mov
add
jmp
add
mov
add
jmp
mov
jmp
sub
jmp
add
xchg
jmp
add
mov
add
jmp
pop
mov
jmp
pop
sub
mov
push
mov
pushl
pop
jmp
xor
pop
sub
pop
add
mov
jmp
mov
push
jmp
sub
add
jmp
push
mov
jmp
sub
mov
jmp
push
mov
jmp
pop
jmp
add
push
mov
jmp
add
pop
push
pushl
pop
popl
pop
jmp
add
xchg
pop
jmp
add
add
xchg
pop
sub
sub
add
pop
xor
mov
add
neg
xor
jmp
push
push
pop
sub
dec
shr
jmp
add
add
push
mov
sub
pop
pop
xor
xor
xor
mov
jmp
mov
push
sub
mov
addl
pop
add
add
jmp
mov
sub
mov
add
sub
mov
jmp
add
push
mov
sub
sub
jmp
shr
sub
xor
xor
pop
and
and
jmp
add
jmp
xchg
mov
push
mov
mov
push
mov
mov
add
jmp
pop
jmp
mov
xor
add
pop
jmp
add
dec
push
mov
not
shr
xor
or
push
jmp
pop
pushl
xchg
jmp
pop
sub
push
mov
jmp
add
sub
pop
push
mov
mov
push
jmp
pop
push
popl
push
push
mov
jmp
xor
jmp
sub
shr
xor
add
sub
push
mov
add
xor
sub
pop
jmp
push
mov
sub
sub
jmp
movzbl
pushl
pushl
jmp
sub
mov
push
mov
jmp
pop
jmp
pop
jmp
not
push
incl
pop
sub
add
pop
add
xchg
pop
xor
xor
xor
jmp
mov
add
sub
jmp
add
pop
push
push
pop
jmp
pop
shl
push
mov
jmp
sub
mov
jmp
mov
add
jmp
addl
pop
pushl
pop
push
mov
push
mov
add
pop
jmp
xor
pushl
pop
add
jmp
jmp
mov
sub
mov
jmp
mov
neg
jmp
or
add
sub
jmp
pop
jmp
push
mov
jmp
mov
add
jmp
push
pop
jmp
sub
jmp
mov
push
mov
jmp
mov
mov
sub
pop
shr
xor
push
mov
jmp
pop
push
mov
sub
sub
sub
jmp
add
jmp
shr
push
addl
jmp
sub
xor
xor
jmp
add
push
mov
push
jmp
xchg
pop
jmp
not
push
push
mov
jmp
and
inc
xor
sub
sub
jmp
mov
jmp
pop
add
sub
pop
pushw
jmp
mov
addl
mov
push
mov
add
add
xchg
jmp
push
mov
push
jmp
mov
mov
add
push
jmp
push
mov
jmp
pop
push
jmp
mov
push
mov
jmp
pushl
mov
add
push
push
jmp
add
push
jmp
add
push
mov
jmp
add
pop
jmp
sub
add
mov
add
add
xor
xor
xor
mov
mov
push
jmp
mov
push
mov
push
mov
mov
pushl
pop
push
mov
jmp
or
jmp
sub
mov
mov
add
xor
pop
and
mov
add
shr
push
push
mov
mov
push
mov
mov
xor
pop
sub
pop
push
mov
jmp
add
add
xchg
pop
push
mov
shl
inc
jmp
add
push
jmp
mov
add
inc
or
or
jmp
mov
jmp
push
pushf
jmp
mov
push
mov
jmp
mov
mov
push
mov
not
neg
jmp
pop
push
push
jmp
pushl
jmp
add
pop
sub
push
mov
pushl
pop
popl
pop
mov
push
jmp
push
mov
jmp
mov
sub
pop
mov
jmp
push
mov
mov
add
push
mov
add
jmp
add
jmp
add
jmp
push
mov
jmp
xchg
pop
push
mov
add
jmp
push
mov
jmp
pop
add
add
sub
sub
jmp
pop
jmp
pop
pop
shl
sub
push
mov
sub
pop
push
mov
jmp
push
mov
push
mov
mov
jmp
jmp
mov
jmp
lods
sub
jmp
pop
or
push
jmp
add
add
push
pushl
pop
popl
mov
xor
add
jmp
mov
mov
shl
xor
not
shl
push
mov
sub
sub
mov
jmp
add
push
push
push
jmp
push
jmp
add
mov
push
jmp
add
jmp
pop
mov
jmp
add
popl
mov
pushl
pushl
pushl
jmp
mov
add
pop
add
add
jmp
add
add
add
push
pushl
pop
popl
mov
push
mov
push
mov
jmp
push
mov
inc
add
add
mov
pop
add
jmp
xor
mov
mov
jmp
mov
and
add
add
shl
jmp
mov
sub
pop
jmp
mov
sub
pop
push
mov
jmp
sub
mov
jmp
push
mov
jmp
mov
jmp
add
jmp
and
mov
add
shr
xor
jmp
add
pop
add
jmp
push
mov
jmp
push
pop
jmp
push
pop
add
push
push
mov
mov
sub
jmp
mov
mov
jmp
push
mov
jmp
pop
mov
jmp
sub
jmp
xor
xor
sub
mov
mov
add
sub
jmp
xchg
mov
mov
push
mov
push
mov
dec
sub
jmp
push
jmp
mov
shr
dec
push
sub
pop
add
jmp
mov
sub
pop
push
mov
sub
sub
mov
add
jmp
mov
push
mov
neg
add
add
pop
add
xchg
pop
jmp
add
push
mov
jmp
add
push
mov
sub
add
pop
push
mov
sub
jmp
push
mov
jmp
pop
push
mov
jmp
sub
not
or
sub
sub
pop
add
jmp
shr
inc
jmp
push
push
mov
jmp
push
mov
sub
mov
mov
add
pushl
pop
add
push
mov
jmp
pushl
mov
jmp
xor
mov
push
jmp
pop
add
jmp
add
push
mov
add
add
jmp
sub
mov
mov
mov
pop
pop
push
mov
jmp
xor
add
pushl
pop
add
push
mov
jmp
push
push
push
pop
and
sub
jmp
pop
add
add
xchg
pop
shl
sub
mov
jmp
pop
add
add
add
sub
jmp
mov
push
mov
add
add
jmp
push
sub
mov
push
mov
add
shl
push
jmp
sub
mov
mov
jmp
push
push
pushl
pop
add
push
jmp
pushl
mov
jmp
mov
push
mov
shl
shl
jmp
pushl
pushl
mov
jmp
pushl
mov
add
push
mov
jmp
mov
push
mov
push
mov
push
push
pop
jmp
xchg
jmp
mov
mov
add
pop
jmp
mov
sub
mov
sub
mov
addl
jmp
sub
mov
pop
sub
mov
push
jmp
sub
push
mov
xor
dec
not
dec
xor
xor
sub
pop
pop
sub
push
sub
mov
push
mov
mov
mov
sub
sub
add
pushl
mov
add
push
mov
add
add
xchg
pop
jmp
mov
addl
pop
add
sub
xor
xor
xor
pop
mov
push
mov
push
pop
dec
add
jmp
add
mov
add
add
sub
pushl
pop
push
jmp
pop
push
mov
add
add
pop
pushl
mov
push
mov
sub
mov
mov
shl
add
neg
or
shr
sub
add
jmp
add
sub
xchg
pop
mov
mov
push
mov
add
pop
add
jmp
mov
push
jmp
mov
jmp
and
jmp
sub
xor
xor
xor
mov
mov
mov
and
add
push
sub
pop
jmp
pop
add
jmp
push
jmp
dec
sub
mov
pop
not
push
jmp
addl
pop
jmp
sub
pop
jmp
mov
push
pop
push
jmp
sub
add
add
jmp
mov
sub
mov
jmp
shr
not
sub
push
jmp
push
jmp
popl
jmp
mov
add
push
jmp
mov
jmp
xor
mov
add
mov
add
jmp
pop
sub
jmp
push
mov
jmp
sub
mov
mov
push
mov
jmp
pop
jmp
mov
mov
sub
pop
sub
add
jmp
mov
not
shl
push
mov
mov
xor
mov
add
sub
pop
sub
push
mov
push
jmp
push
push
jmp
mov
dec
jmp
sub
pop
jmp
pop
and
mov
add
or
shl
push
push
jmp
push
jmp
pop
jmp
mov
mov
jmp
pop
push
jmp
mov
addl
jmp
sub
push
pushl
pop
popl
jmp
mov
jmp
sub
jmp
add
push
jmp
mov
add
pop
pop
sub
mov
pushl
jmp
mov
mov
sub
sub
jmp
add
xchg
mov
mul
movzbw
pushw
mov
movzbw
jmp
mov
sub
jmp
and
not
sub
xor
mov
push
mov
add
jmp
mov
push
mov
add
add
jmp
push
pop
push
mov
add
add
jmp
xor
pop
mul
pushw
jmp
push
sub
mov
mov
jmp
xor
mov
add
push
mov
jmp
pushl
pop
add
shl
dec
push
notl
pop
sub
push
mov
mov
jmp
dec
sub
xor
jmp
sub
jmp
pop
jmp
sub
pop
push
mov
xor
and
jmp
sub
sub
jmp
add
sub
pop
sub
jmp
add
xchg
mov
jmp
push
push
mov
xor
pop
jmp
add
jmp
sub
push
mov
jmp
pushl
pop
jmp
jmp
sub
pushl
pop
push
mov
jmp
add
pop
jmp
pushl
pop
popl
pop
jmp
not
xchg
add
xor
pop
push
subl
jmp
pop
xor
add
pop
pushl
jmp
pushl
jmp
mov
add
and
push
addb
sub
subb
jmp
mov
add
pop
push
mov
sub
jmp
push
mov
add
mov
add
jmp
pop
neg
jmp
not
sub
add
sub
jmp
addl
sub
jmp
sub
mov
jmp
xchg
pop
not
inc
shl
dec
xor
mov
pushl
jmp
add
jmp
sub
sub
pop
jmp
push
jmp
shr
push
push
mov
dec
add
jmp
push
mov
jmp
pop
sub
mov
push
pushl
mov
add
jmp
add
add
jmp
xor
jmp
push
mov
push
subb
jmp
add
or
mov
push
mov
push
jmp
push
mov
jmp
sub
mov
mov
add
jmp
xor
add
jmp
xor
sub
add
jmp
add
add
jmp
pushl
jmp
mov
jmp
shl
jmp
mov
jmp
add
sub
xchg
jmp
pop
xchg
pop
mov
jmp
add
jmp
pop
xchg
mov
cmp
pushf
jmp
shr
jmp
pop
add
jmp
pop
jmp
dec
xchg
popl
addl
jmp
add
add
add
sub
pop
movzbl
cmp
je
pushl
pushl
pushl
pop
jmp
push
jmp
push
push
push
jmp
add
pop
push
mov
mov
jmp
push
pop
sub
jmp
sub
push
mov
add
add
sub
mov
mov
jmp
pop
add
sub
mov
mov
add
pop
jmp
sub
sub
sub
jmp
mov
mov
jmp
add
jmp
pop
not
jmp
pop
jmp
sub
pop
sub
xor
xor
xor
jmp
shr
and
push
mov
mov
or
pop
push
jmp
mov
jmp
xor
jmp
add
mov
pop
add
jmp
add
jmp
sub
pop
shl
jmp
mov
push
mov
sub
jmp
mov
jmp
shl
shl
jmp
mov
mov
push
mov
jmp
mov
add
add
xchg
pop
sub
jmp
mov
add
pushl
pop
add
sub
pop
push
jmp
sub
and
neg
add
jmp
addl
pushl
pop
add
push
jmp
pop
sub
add
jmp
shr
cmp
je
push
mov
push
jmp
add
xchg
jmp
mov
add
push
mov
add
add
xchg
jmp
or
inc
push
jmp
add
jmp
jmp
sub
mov
pop
pop
dec
jmp
add
pushl
pop
push
mov
push
pop
jmp
push
mov
add
add
xchg
pop
push
mov
add
add
xchg
pop
popl
jmp
mov
jmp
pop
push
notl
pop
push
mov
shr
dec
neg
sub
sub
jmp
push
mov
xor
or
pop
sub
jmp
push
jmp
push
mov
mov
jmp
jmp
xchg
pop
add
push
mov
push
mov
jmp
pop
xor
add
mov
add
jmp
pop
or
xchg
push
notl
pop
xor
xor
xor
push
mov
push
mov
jmp
push
mov
add
jmp
test
pushf
jmp
add
add
mov
push
mov
add
jmp
mov
add
sub
add
add
push
mov
and
xor
add
sub
jmp
sub
addl
pushl
pop
add
jmp
mov
pushl
pop
push
mov
jmp
add
jmp
mov
neg
sub
and
shr
shr
add
mov
mov
add
jmp
sub
mov
push
mov
push
jmp
mov
addl
pop
add
jmp
mov
push
jmp
sub
jmp
push
mov
xor
jmp
sub
sub
jmp
neg
not
push
push
mov
jmp
xor
or
xor
jmp
pop
push
mov
add
mov
push
mov
add
add
jmp
mov
inc
inc
neg
jmp
push
jmp
neg
add
or
pop
shl
or
push
mov
mov
jmp
add
add
xchg
pop
jmp
mov
xor
xor
xor
xor
jmp
add
pop
push
mov
add
sub
xchg
jmp
push
pushl
pop
popl
pop
add
add
push
mov
push
mov
jmp
push
mov
jmp
push
mov
jmp
pop
popl
jmp
mov
jmp
jmp
lods
push
push
jmp
xor
xor
xor
mov
jmp
push
mov
push
jmp
push
jmp
add
xchg
not
xchg
push
incb
pop
inc
neg
xor
jmp
mov
push
mov
push
pop
sub
mov
jmp
add
sub
pop
push
pushl
mov
jmp
pop
add
pop
push
mov
jmp
add
add
jmp
pop
push
pushl
pop
popl
mov
mov
jmp
sub
add
add
pop
add
sub
pushl
jmp
mov
mov
jmp
push
jmp
push
push
popl
push
mov
mov
addl
add
push
mov
subl
sub
addl
jmp
mov
add
jmp
subl
jmp
pop
jmp
popl
jmp
sub
sub
pop
add
add
pop
mov
add
push
mov
push
pop
push
mov
jmp
shr
push
jmp
mov
incl
mov
add
dec
sub
mov
mov
shl
add
shl
jmp
add
pop
jmp
sub
jmp
add
xchg
pop
push
mov
push
jmp
mov
jmp
not
xchg
push
mov
push
mov
jmp
add
add
jmp
mov
push
mov
add
jmp
mov
jmp
xor
pop
or
push
mov
shr
jmp
pushw
jmp
add
mov
pushl
pop
add
add
jmp
and
pop
push
mov
add
pop
jmp
push
xchg
not
jmp
shr
push
mov
xor
xor
pop
add
pop
add
jmp
mov
push
jmp
pop
jmp
xchg
pop
mov
push
mov
mov
mov
pop
and
pushl
jmp
xor
jmp
add
xor
jmp
mov
jmp
pop
jmp
mov
add
add
xchg
jmp
mov
sub
jmp
mov
jmp
push
mov
neg
sub
neg
add
or
pop
not
jmp
pop
mov
jmp
sub
sub
pop
jmp
add
add
jmp
push
mov
xor
jmp
sub
mov
add
push
jmp
mov
add
push
mov
jmp
inc
push
push
mov
mov
jmp
ret
jmp
add
sub
jmp
add
add
add
jmp
movl
sub
mov
jmp
jmp
add
not
shr
inc
or
jmp
mov
mov
shr
neg
push
mov
add
jmp
pop
sub
jmp
push
mov
inc
inc
sub
or
sub
xor
add
mov
add
mov
push
push
jmp
pop
add
jmp
add
sub
mov
mov
jmp
push
push
pop
push
jmp
pushl
mov
add
popl
jmp
dec
xor
xor
xor
push
notl
jmp
push
popl
addl
jmp
add
pop
add
sub
push
mov
sub
mov
add
jmp
push
pop
push
jmp
push
mov
mov
add
pop
jmp
shl
sub
mov
jmp
add
jmp
sub
add
jmp
push
pushl
pop
jmp
sub
add
add
pop
push
mov
add
sub
xchg
mov
mov
mov
add
add
push
mov
shl
push
mov
dec
add
or
mov
jmp
xor
not
push
push
jmp
xor
xor
xor
pop
mov
mov
jmp
mov
add
jmp
xchg
pop
mov
mov
add
push
mov
xor
not
neg
push
mov
jmp
and
shr
neg
add
add
pop
add
xchg
pop
push
mov
add
add
jmp
mov
add
xor
xor
xor
jmp
sub
sub
mov
add
pushl
addl
pop
sub
jmp
push
mov
jmp
add
jmp
pop
push
mov
xor
mov
push
mov
add
add
xor
jmp
pop
push
jmp
push
mov
mov
dec
or
sub
shr
and
jmp
or
not
sub
xor
sub
sub
add
jmp
mov
jmp
pop
push
mov
xor
pop
mov
pop
push
push
pushw
pop
inc
xor
sub
mov
pop
add
jmp
add
xchg
pop
push
jmp
mov
sub
pop
sub
jmp
push
mov
push
jmp
pushl
pop
add
jmp
sub
push
xor
xor
xor
not
xchg
mov
add
xor
xor
jmp
pop
push
jmp
dec
jmp
xor
pop
mov
pop
and
pushl
pop
add
jmp
pop
push
mov
jmp
sub
sub
sub
pushw
mov
push
mov
mov
push
mov
jmp
push
push
mov
or
shl
jmp
neg
add
push
mov
or
jmp
add
add
xchg
pop
mov
push
push
pop
add
jmp
xor
dec
sub
sub
pop
pop
push
pushl
mov
add
popl
jmp
pop
push
jmp
sub
jmp
mov
jmp
pushl
pushl
pushl
mov
add
push
mov
push
pop
add
push
jmp
pop
sub
push
jmp
push
jmp
or
add
not
sub
jmp
push
mov
add
add
push
mov
push
mov
jmp
pop
add
push
mov
jmp
mov
mov
pop
sub
neg
jmp
pop
add
add
sub
sub
push
mov
push
jmp
push
mov
add
sub
xchg
mov
mov
mov
push
jmp
mov
jmp
sub
add
mov
pop
neg
push
mov
mov
sub
pop
neg
sub
sub
mov
add
or
push
mov
mov
add
jmp
push
pop
pop
jmp
mov
add
jmp
not
jmp
sub
mov
jmp
push
mov
mov
pop
jmp
pop
xor
add
pop
sub
push
push
mov
mov
pop
jmp
pop
sub
mov
pushl
mov
push
mov
add
sub
xchg
jmp
mov
jmp
and
jmp
pushl
popf
pop
rclb
pushf
jmp
xor
add
mov
jmp
mov
push
jmp
mov
add
jmp
pushl
pop
add
sub
add
add
pop
push
jmp
mov
mov
add
add
jmp
shl
neg
push
mov
add
shl
dec
shl
inc
sub
xor
jmp
mov
mov
add
jmp
sub
xor
dec
add
dec
not
jmp
or
push
mov
not
mov
jmp
sub
sub
pop
xchg
pop
mov
addl
jmp
sub
pop
pop
push
jmp
mov
add
add
xchg
pop
sub
mov
jmp
add
jmp
mov
add
pop
add
add
sub
sub
pop
xchg
mov
jmp
subl
mov
jmp
mov
pop
inc
add
sub
mov
add
jmp
pop
pop
xor
jmp
push
mov
add
jmp
xorl
mov
jmp
push
pushl
pop
popl
pop
jmp
push
mov
add
sub
sub
pop
add
pop
mov
add
add
push
push
mov
push
mov
jmp
not
jmp
jmp
mov
sub
dec
push
mov
jmp
mov
sub
add
add
mov
jmp
xchg
jmp
add
xor
sub
pop
add
pop
sub
mov
push
push
pop
mov
sub
mov
add
add
pop
xchg
mov
jmp
pop
jmp
or
add
sub
pop
jmp
push
mov
sub
mov
jmp
sub
not
xor
xor
add
pop
sub
xchg
pop
jmp
mov
jmp
shr
sub
neg
add
add
pop
and
xor
push
jmp
push
push
mov
jmp
mov
jmp
add
jmp
sub
add
add
sub
add
pop
add
push
pushl
mov
add
popl
mov
sarw
pushf
jmp
pushl
pop
push
push
jmp
push
sub
mov
mov
mov
pop
xor
pop
xor
mov
add
mov
pushl
pop
jmp
mov
jmp
push
jmp
push
jmp
shr
jmp
pop
xchg
mov
jmp
add
push
mov
jmp
sub
jmp
add
jmp
sub
add
jmp
xor
dec
sub
add
add
pop
push
mov
xor
add
sub
add
add
sub
pop
add
sub
push
mov
sub
mov
jmp
and
jmp
mov
neg
push
mov
jmp
add
xchg
mov
jmp
shl
xor
jmp
sub
mov
push
mov
jmp
xor
pop
shr
shr
jmp
mov
pop
mov
push
mov
add
add
xchg
pop
sub
mov
push
push
jmp
mov
push
mov
sub
mov
sub
mov
jmp
mov
sub
mov
add
sub
push
push
pop
sub
sub
mov
add
pop
xor
mov
push
mov
push
jmp
inc
inc
jmp
mov
push
jmp
add
push
mov
xor
add
pushl
pop
add
pushl
mov
add
push
mov
add
add
xchg
jmp
mov
mov
push
sub
mov
addl
pop
add
sub
xchg
mov
mov
push
push
pop
jmp
add
jmp
push
mov
add
add
xchg
pop
jmp
add
pop
add
push
mov
push
mov
mov
jmp
mov
add
or
jmp
inc
push
mov
add
pop
xor
mov
add
jmp
pushl
pushl
mov
add
push
mov
push
mov
and
inc
add
jmp
push
jmp
add
popl
pop
sub
mov
pushl
pushl
mov
push
jmp
mov
jmp
mov
add
pop
and
add
mov
pop
xor
jmp
sub
mov
mov
jmp
and
neg
xor
add
pop
push
jmp
push
mov
mov
add
push
push
mov
xor
mov
pop
sub
jmp
pop
xor
pop
jmp
add
mov
mov
add
neg
push
mov
jmp
add
xor
pop
neg
jmp
mov
add
popl
jmp
mov
add
jmp
mov
mov
sub
push
push
mov
jmp
add
pop
xchg
jmp
shr
xor
xor
xor
xor
push
mov
push
pushl
pop
popl
push
notl
pop
xchg
pushl
jmp
mov
add
add
pop
pop
push
jmp
mov
mov
jmp
mov
pushl
mov
jmp
push
sub
mov
jmp
xchg
pop
jmp
add
push
jmp
pop
add
jmp
push
mov
push
mov
jmp
push
decl
pop
push
mov
or
pop
push
jmp
push
mov
mov
shl
inc
jmp
mov
add
pop
add
xor
xor
xor
pop
jmp
push
mov
sub
mov
jmp
mov
sub
jmp
mov
mov
add
xor
jmp
dec
and
push
mov
and
push
mov
xor
jmp
add
sub
sub
jmp
mov
mov
push
mov
shl
jmp
sub
add
pop
neg
xor
sub
jmp
sub
sub
pop
add
jmp
sub
add
mov
pop
neg
push
jmp
add
add
mov
add
add
add
push
mov
push
jmp
add
sub
mov
add
jmp
pop
push
mov
shl
and
push
mov
neg
push
mov
add
pop
jmp
add
jmp
push
mov
xor
pop
jmp
mov
mov
sub
mov
mov
sub
add
jmp
add
xchg
pop
popl
pop
mov
mov
push
push
mov
xor
jmp
mov
mov
push
push
jmp
add
jmp
add
popl
mov
subl
add
push
jmp
pop
xor
jmp
mov
sub
mov
mov
add
jmp
push
push
mov
mov
push
jmp
mov
neg
xor
mov
jmp
mov
jmp
xor
pop
xor
pop
jmp
or
sub
sub
or
pop
push
mov
push
pop
and
pop
push
mov
add
pop
jmp
push
mov
push
mov
add
pop
add
push
jmp
pop
add
push
mov
add
push
mov
sub
pop
xchg
mov
mov
mov
push
mov
jmp
or
pushw
sub
mov
add
jmp
add
pop
mov
sub
jmp
neg
add
jmp
mov
xor
jmp
add
sub
jmp
lods
xor
push
push
mov
neg
shl
jmp
mov
jmp
add
pop
mov
jmp
xor
sub
add
jmp
add
add
jmp
push
mov
shl
shl
sub
mov
mov
jmp
add
pop
add
jmp
sub
xor
xor
xor
jmp
pop
shr
or
dec
or
push
mov
sub
pop
jmp
mov
push
mov
push
mov
add
jmp
push
push
jmp
pop
mov
jmp
push
mov
addl
mov
push
mov
add
push
mov
sub
and
inc
jmp
mov
jmp
xchg
pop
sarb
pushf
jmp
push
mov
neg
shr
push
jmp
push
mov
add
pop
sub
pop
mov
add
pushl
jmp
pop
pop
pop
push
mov
add
pop
push
mov
jmp
and
and
xor
sub
pop
mov
add
push
mov
add
mov
jmp
xor
add
pop
push
jmp
xchg
pop
push
mov
sub
pop
add
pop
sub
jmp
pop
xor
mov
jmp
pop
jmp
sub
pop
sub
add
jmp
mov
jmp
dec
push
jmp
add
xor
mov
jmp
xchg
jmp
xor
push
pop
pushl
pop
jmp
add
pushf
jmp
pop
jmp
add
mov
jmp
add
mov
jmp
mov
push
mov
jmp
pop
jmp
add
add
mov
add
sub
mov
push
jmp
mov
jmp
neg
xor
sub
add
pop
xchg
pop
push
mov
jmp
mov
add
xor
jmp
and
not
add
xor
xor
add
mov
add
push
mov
not
jmp
and
jmp
mov
push
mov
push
jmp
mov
jmp
push
jmp
mov
add
jmp
pop
jmp
mov
add
add
xchg
mov
jmp
add
jmp
mov
jmp
xor
jmp
not
push
mov
xor
pop
jmp
mov
add
push
mov
and
mov
add
push
jmp
mov
add
add
xchg
pop
sub
mov
jmp
add
jmp
jmp
push
mov
jmp
xchg
jmp
mov
jmp
xchg
pop
add
mov
add
push
mov
jmp
neg
shl
sub
sub
sub
add
pop
sub
jmp
pop
jmp
push
mov
add
push
mov
add
pop
xor
xor
xor
pop
push
push
pop
jmp
pop
jmp
xor
jmp
mov
jmp
add
push
push
pop
xor
pop
add
add
jmp
mov
add
pushw
jmp
mov
push
push
push
popl
addl
pushl
pop
jmp
push
mov
jmp
xor
push
mov
mov
jmp
xor
add
pop
shr
not
jmp
mov
decw
pushf
jmp
dec
xor
mov
mov
add
push
jmp
push
mov
add
add
xchg
pop
add
push
mov
push
push
pop
mov
mov
jmp
push
mov
jmp
xchg
jmp
pop
xor
xor
jmp
add
and
jmp
xor
jmp
pop
push
mov
push
push
mov
push
pop
jmp
push
pop
jmp
add
pop
add
add
push
push
mov
mov
shr
sub
sub
and
sub
mov
push
mov
mov
pop
add
jmp
push
jmp
xor
pop
inc
jmp
add
xor
xor
pop
jmp
mov
jmp
xor
xor
pop
jmp
add
jmp
xor
jmp
pop
add
sub
mov
mov
add
jmp
pop
jmp
inc
or
push
mov
inc
dec
inc
xor
jmp
pushl
pushl
pop
push
mov
add
add
jmp
pop
add
push
jmp
mov
mov
and
jmp
add
addl
subl
jmp
mov
imul
push
pushf
jmp
pop
push
mov
jmp
inc
sub
xor
jmp
push
mov
sub
mov
addl
jmp
sub
mov
jmp
push
mov
neg
or
or
or
xor
add
pop
add
sub
sub
mov
sub
mov
jmp
popl
pop
add
push
jmp
sub
mov
add
push
jmp
pop
and
push
mov
jmp
mov
jmp
pop
pop
sub
pop
xchg
mov
mov
jmp
pop
add
shr
dec
xor
xor
push
push
mov
push
mov
mov
jmp
mov
jmp
xor
mov
add
mov
pop
shr
push
mov
jmp
add
push
mov
add
jmp
push
mov
mov
pop
mov
sub
pushl
pop
add
xor
mov
push
push
pop
push
mov
push
mov
jmp
pop
add
popl
mov
rolb
pushf
jmp
mov
mov
xor
jmp
mov
sub
jmp
add
sub
mov
push
jmp
add
add
jmp
pop
jmp
pushl
mov
add
jmp
mov
add
jmp
add
sub
jmp
mov
push
mov
add
add
xchg
jmp
mov
add
jmp
sub
mov
jmp
add
sub
sub
pop
xor
jmp
lods
add
add
jmp
mov
jmp
jmp
add
push
mov
add
push
mov
or
xor
sub
pop
xchg
mov
jmp
dec
push
mov
and
jmp
add
add
sub
pop
add
xor
xor
xor
pop
shrl
pushf
jmp
mov
push
pushf
jmp
push
mov
sub
jmp
mov
push
jmp
lods
sub
mov
push
mov
push
mov
mov
push
mov
mov
shl
jmp
add
add
xchg
pop
sub
mov
mov
add
add
jmp
add
add
jmp
lods
push
jmp
and
xor
neg
sub
sub
jmp
xchg
pop
sub
jmp
mov
shl
push
push
push
jmp
sub
dec
neg
jmp
mov
jmp
pop
sub
jmp
xor
xor
mov
jmp
add
xchg
pop
jmp
popl
pop
jmp
add
sub
sub
pop
add
jmp
push
jmp
mov
or
xor
shr
add
mov
pop
sub
pop
add
sub
push
mov
push
mov
add
pop
sub
sub
mov
mov
add
pop
jmp
push
mov
jmp
add
add
add
pop
push
jmp
not
sub
jmp
xor
jmp
mov
mov
add
pop
xchg
mov
push
mov
add
pop
push
mov
pushl
jmp
add
push
mov
mov
add
jmp
sub
mov
mov
or
jmp
addl
addl
add
jmp
push
popl
addl
pop
push
mov
shl
push
mov
jmp
sub
add
add
jmp
add
jmp
mov
push
mov
jmp
pop
pushl
mov
add
push
push
mov
push
mov
add
pop
jmp
mov
jmp
push
push
jmp
pop
add
jmp
add
jmp
pop
add
pop
pop
pushl
pop
push
mov
jmp
pop
mov
add
jmp
pop
pop
push
jmp
sub
mov
mov
sub
pop
subl
add
push
mov
add
mov
add
addl
sub
mov
mov
add
pop
mov
add
pop
jmp
xor
sub
pop
add
add
mov
add
add
pop
push
mov
sub
add
add
pushl
jmp
mov
jmp
add
pop
push
mov
sub
mov
mov
or
shl
sub
jmp
pushl
pop
add
push
mov
jmp
add
pop
push
mov
neg
jmp
add
jmp
mov
jmp
lods
jmp
pop
push
mov
neg
jmp
push
push
jmp
pop
add
push
mov
add
pop
add
xor
jmp
push
mov
jmp
pop
pushl
pushl
pop
add
push
mov
push
mov
push
jmp
add
xchg
pop
add
push
mov
jmp
mov
jmp
sub
jmp
mov
mov
jmp
and
pop
not
neg
add
xor
jmp
and
add
xor
xor
pop
or
mov
add
jmp
push
mov
and
shl
push
mov
add
jmp
shr
xor
add
pop
mov
mov
add
dec
push
jmp
sub
sub
jmp
pop
push
mov
mov
and
push
mov
shr
shl
or
neg
sub
add
pop
push
mov
jmp
push
jmp
push
mov
jmp
pop
sub
push
jmp
xor
xor
xor
jmp
sub
jmp
jmp
jmp
mov
push
jmp
pushl
pushl
mov
jmp
push
mov
push
mov
or
jmp
push
pop
sub
mov
mov
jmp
add
jmp
push
pop
shl
jmp
mov
div
movzbw
pushw
mov
movzbw
push
pushf
jmp
add
pushl
pop
add
push
jmp
pop
and
pop
shr
xor
push
jmp
mov
jmp
inc
shl
inc
sub
push
pop
pop
add
pop
jmp
push
mov
sub
pop
xchg
mov
mov
push
mov
mov
sub
pop
mov
jmp
add
add
sub
sub
add
jmp
push
mov
sub
pop
add
pushl
pop
add
mov
add
xor
jmp
mov
xor
pop
add
add
sub
sub
jmp
jmp
push
jmp
mov
or
xor
mov
mov
add
neg
dec
push
jmp
sub
jmp
and
and
sub
jmp
sub
xchg
jmp
push
push
pop
neg
push
mov
dec
and
dec
jmp
pushl
popf
pop
rcll
pushf
jmp
pop
mov
pop
sub
add
jmp
pop
push
mov
push
jmp
sub
mov
pop
push
mov
add
mov
add
subl
add
push
mov
add
pop
subl
mov
push
push
jmp
xchg
jmp
pushw
pop
neg
inc
shl
push
pushw
pop
sub
mov
add
add
xor
add
add
jmp
sub
shr
not
sub
push
mov
jmp
mov
jmp
mov
shl
not
neg
dec
push
notl
pop
push
mov
inc
xor
jmp
mov
xor
pop
push
mov
xor
pop
push
subl
pop
jmp
mov
add
xchg
pop
mov
jmp
add
pop
xor
xor
xor
mov
subl
jmp
pop
mov
pop
xor
jmp
pushl
pop
add
push
mov
shl
xor
and
mov
push
mov
mov
push
push
push
mov
jmp
jmp
xor
jmp
xor
jmp
pushl
pop
popl
mov
mov
jmp
or
mov
add
add
add
pop
xchg
mov
mov
push
mov
mov
push
mov
add
add
sub
mov
push
mov
add
add
push
pushl
pop
popl
pop
push
jmp
not
not
xor
add
pop
dec
jmp
pop
add
mov
jmp
mov
add
or
je
pushl
mov
push
mov
push
mov
or
not
xchg
not
xchg
sub
or
sub
jmp
popl
jmp
push
mov
or
and
not
add
add
jmp
add
xor
pop
or
shr
neg
jmp
pop
jmp
push
push
jmp
pop
push
mov
jmp
mov
and
shr
dec
sub
xor
add
pop
jmp
pushl
pop
add
add
jmp
addl
pushl
jmp
add
sub
sub
pop
sub
mov
mov
add
pop
add
push
mov
sub
pop
push
sub
mov
mov
shl
jmp
push
mov
add
pop
xchg
pop
push
mov
push
mov
push
push
mov
push
jmp
xorl
pop
xor
pop
jmp
push
mov
mov
sub
push
mov
add
jmp
sub
add
push
mov
mov
pop
jmp
add
xchg
jmp
xchg
pop
sub
add
jmp
sub
pushl
pop
jmp
add
jmp
pop
xor
xor
xor
mov
shl
push
mov
jmp
sub
mov
mov
jmp
and
pushl
pop
jmp
sub
sub
sub
add
push
mov
sub
add
jmp
mov
push
sub
mov
jmp
push
popl
push
jmp
mov
mov
add
push
jmp
mov
push
push
mov
mov
pop
push
jmp
mov
push
mov
add
jmp
xor
xor
xor
pop
push
mov
jmp
add
pop
pop
jmp
mov
push
pop
push
mov
dec
shr
neg
sub
mov
mov
add
pop
sub
add
pushl
pop
jmp
pop
push
mov
push
jmp
mov
push
mov
push
pop
add
jmp
mov
push
push
push
jmp
add
add
add
add
sub
jmp
mov
sub
mov
push
pop
push
mov
add
pop
push
mov
mov
shl
jmp
mov
add
sub
sub
pop
push
push
mov
jmp
pop
or
jmp
mov
push
pop
push
mov
sub
add
add
sub
add
pop
push
push
mov
jmp
pop
subl
add
addl
jmp
mov
jmp
xor
mov
jmp
pushl
mov
add
sub
jmp
shl
shr
neg
jmp
sub
push
mov
jmp
pop
dec
dec
dec
jmp
push
pop
jmp
neg
jmp
add
pushl
pop
add
push
mov
sub
pop
xor
xor
jmp
push
push
jmp
add
pop
jmp
pop
jmp
push
mov
xor
mov
add
pop
push
mov
jmp
mov
jmp
pushl
pop
add
sub
mov
push
mov
push
mov
add
add
xchg
pop
jmp
pop
jmp
popl
jmp
mov
jmp
mov
jmp
add
pop
jmp
sub
mov
sub
mov
push
pop
jmp
mov
pop
mov
jmp
add
pop
jmp
xchg
mov
mov
addl
mov
add
push
push
pop
add
add
add
pop
add
xor
xor
xor
mov
push
mov
push
push
push
jmp
add
jmp
mov
shl
xor
sub
sub
jmp
and
pop
jmp
mov
mov
add
pushl
pop
push
push
jmp
mov
xor
pop
jmp
sub
jmp
push
jmp
add
popl
mov
push
mov
push
mov
jmp
mov
jmp
or
je
sub
mov
jmp
mov
shl
shl
xor
sub
mov
add
xchg
xchg
jmp
pop
add
sub
xchg
pop
mov
jmp
pop
add
pop
add
xor
xor
xor
mov
jmp
mov
add
add
sub
pop
jmp
mov
jmp
xor
xor
xor
mov
jmp
pushl
pop
add
push
mov
push
mov
push
push
mov
mov
jmp
lods
add
jmp
add
xor
xor
jmp
sub
xchg
pop
push
jmp
push
jmp
mov
jmp
pop
add
push
jmp
shl
shr
jmp
pop
add
xchg
jmp
pop
jmp
mov
jmp
mov
add
pop
xchg
jmp
pop
add
push
push
push
pop
jmp
push
mov
push
jmp
push
jmp
mov
add
jmp
mov
jmp
sub
mov
addl
pushl
pop
add
add
add
push
pushl
pop
jmp
jmp
pop
push
mov
xor
add
mov
add
add
pushl
pop
jmp
popl
mov
pushl
mov
add
push
mov
jmp
mov
add
jmp
push
jmp
add
add
sub
push
mov
not
inc
xor
shl
neg
shr
jmp
sub
add
add
mov
jmp
mov
jmp
push
mov
add
jmp
push
mov
mov
xor
pop
add
pop
mov
add
sub
pushl
mov
add
push
mov
mov
add
add
jmp
pushl
jmp
shl
not
shr
sub
and
xor
jmp
sub
mov
push
mov
mov
pop
jmp
push
mov
or
sub
shr
add
xor
pop
sub
jmp
pop
push
push
pop
push
mov
jmp
pushl
push
mov
jmp
pop
mov
sub
mov
push
mov
mov
xor
jmp
push
jmp
shl
not
xor
add
pop
add
jmp
pop
sub
push
jmp
pop
popl
pop
push
mov
add
add
sub
jmp
sub
mov
mov
add
add
pop
pop
pushl
pop
jmp
push
mov
add
pop
push
pushl
jmp
sub
add
pop
add
mov
add
push
jmp
sub
push
mov
jmp
sub
jmp
popl
jmp
addl
pop
add
push
mov
push
jmp
xchg
jmp
push
pop
add
sub
push
jmp
push
mov
notl
pop
inc
shl
push
sub
mov
mov
push
jmp
push
sub
mov
mov
mov
sub
pop
sub
addl
addl
sub
subl
subl
mov
add
pop
add
mov
add
sub
push
jmp
mov
push
mov
mov
jmp
mov
sub
push
jmp
mov
add
jmp
pop
xor
jmp
mov
push
mov
add
add
jmp
mov
xor
jmp
sub
push
push
mov
mov
pop
add
mov
add
pushw
mov
sub
mov
pushw
pop
push
mov
add
pop
push
jmp
push
mov
push
mov
add
pop
add
jmp
xchg
pop
jmp
pop
shr
xor
xchg
push
mov
xchg
not
jmp
xor
mov
jmp
mov
push
jmp
sub
pop
jmp
or
sub
jmp
push
jmp
mov
jmp
or
and
shl
not
sub
jmp
add
pop
sub
xor
xor
xor
pop
push
popl
push
mov
mov
add
pop
pushl
mov
jmp
add
pushl
jmp
pop
jmp
mov
push
mov
mov
sub
mov
jmp
push
mov
sub
sub
pop
add
add
sub
pop
push
mov
push
mov
mov
pop
jmp
mov
jmp
mov
mov
jmp
pop
sub
push
jmp
add
add
jmp
add
pop
jmp
sub
jmp
sub
push
pushl
pop
popl
pop
mov
push
pop
push
mov
push
mov
sub
jmp
pop
sub
jmp
xchg
jmp
mov
xor
jmp
pop
popl
mov
mov
push
mov
push
push
jmp
xor
jmp
pop
or
pop
and
jmp
push
push
mov
xor
xor
mov
pop
jmp
not
shr
dec
push
mov
push
mov
mov
pop
jmp
pop
pop
xor
jmp
mov
xchg
xchg
not
xchg
xchg
jmp
xor
mov
add
jmp
mov
jmp
pop
push
mov
sub
jmp
add
add
jmp
mov
push
mov
sub
push
popl
addl
mov
add
push
mov
dec
inc
xchg
not
xchg
push
mov
jmp
add
xchg
pop
or
jmp
mov
push
mov
push
push
jmp
mov
shr
push
mov
jmp
pop
jmp
add
jmp
add
mov
add
pop
movzbw
push
jmp
sub
add
sub
jmp
sub
pop
sub
jmp
sub
mov
push
pop
add
add
push
mov
add
sub
xchg
pop
jmp
push
jmp
mov
push
jmp
push
mov
add
jmp
mov
jmp
pop
xor
xor
xor
mov
sarl
pushf
jmp
jmp
inc
jmp
pushl
pop
add
or
shl
jmp
shl
jmp
push
push
mov
mov
jmp
pop
xchg
mov
mov
mov
and
jmp
pop
add
xchg
jmp
mov
add
sub
mov
jmp
pop
mov
push
mov
sub
jmp
add
jmp
mov
pushl
pushl
pop
add
push
jmp
mov
jmp
lods
push
mov
jmp
shr
add
sub
jmp
mov
push
push
pop
push
mov
jmp
mov
pop
dec
sub
sub
push
mov
add
jmp
mov
mov
add
jmp
mov
shl
or
neg
xor
add
mov
add
add
pop
jmp
add
pop
jmp
push
mov
push
mov
inc
jmp
sub
jmp
push
mov
sub
not
not
sub
add
pop
jmp
push
pushf
jmp
xchg
pop
jmp
add
add
sub
jmp
add
add
pop
jmp
add
add
sub
jmp
sub
jmp
pop
jmp
mov
add
jmp
neg
jmp
sub
mov
push
mov
add
mov
pop
push
jmp
pop
dec
push
mov
xor
pop
mov
jmp
xchg
jmp
add
add
add
sub
pop
sub
mov
pushl
pop
jmp
pop
jmp
xor
xor
xor
mov
jmp
mov
and
jmp
add
sub
xor
mov
add
jmp
mov
push
mov
jmp
push
jmp
addl
mov
sub
mov
mov
add
add
xchg
pop
pop
add
add
xor
jmp
xchg
jmp
add
push
push
jmp
dec
and
push
jmp
add
jmp
mov
mov
push
mov
jmp
add
jmp
add
sub
pop
add
add
add
sub
sub
sub
push
sub
mov
push
jmp
push
jmp
sub
mov
jmp
pop
jmp
mov
jmp
incw
pushf
jmp
add
jmp
pushl
mov
jmp
mov
add
push
mov
add
mov
add
xor
xor
xor
pop
push
push
pop
add
jmp
pop
add
xchg
pop
add
add
add
jmp
mov
not
dec
shr
jmp
sub
mov
push
jmp
add
push
mov
jmp
mov
push
mov
add
jmp
add
sub
mov
mov
and
or
jmp
mov
mov
pop
subl
sub
jmp
sub
mov
mov
add
add
sub
mov
jmp
mov
add
sub
xchg
jmp
mov
jmp
pop
pushl
pop
add
push
mov
push
mov
or
shl
and
not
xor
add
pop
sub
xor
jmp
mov
sub
add
add
pop
sub
mov
pushl
pop
popl
mov
push
mov
jmp
push
mov
mov
jmp
mov
push
mov
sub
sub
mov
jmp
jmp
mov
add
add
sub
add
add
jmp
dec
xchg
push
jmp
mov
add
push
mov
push
jmp
jmp
push
mov
neg
add
sub
add
mov
add
add
push
mov
jmp
add
push
jmp
add
sub
dec
not
add
sub
sub
add
pop
jmp
add
or
shl
jmp
pop
xor
and
pop
xor
jmp
mov
add
push
pushl
pop
popl
jmp
add
pop
add
jmp
sub
add
pop
shl
push
mov
or
sub
sub
jmp
mov
push
mov
add
jmp
mov
mov
push
subl
mov
jmp
pop
add
add
jmp
xor
jmp
push
mov
mov
add
jmp
and
dec
shr
push
mov
xor
pop
sub
pop
pop
shr
xor
add
pop
sub
sub
sub
sub
add
push
jmp
mov
push
mov
or
jmp
sub
sub
add
pop
mov
pop
neg
sub
add
jmp
xor
xor
jmp
add
jmp
mov
sub
jmp
push
push
push
mov
mov
jmp
pop
add
push
jmp
dec
push
decl
pop
xchg
dec
xchg
push
mov
sub
or
jmp
mov
pop
mov
add
pop
jmp
mov
mov
pop
shl
inc
inc
dec
add
jmp
xor
pop
sub
pop
sub
pop
jmp
pop
mov
push
mov
jmp
mov
sub
mov
add
add
pushl
pop
add
xchg
jmp
add
sub
pop
jmp
pop
xor
push
mov
jmp
mov
rolw
pushf
jmp
push
mov
not
push
mov
sub
mov
push
mov
add
add
xchg
pop
or
push
mov
mov
or
add
inc
xor
push
mov
add
push
mov
jmp
add
jmp
sub
jmp
add
add
pop
mov
jmp
push
jmp
mov
jmp
mov
push
jmp
mov
sub
pop
sub
jmp
xor
xor
xor
sub
mov
xchg
not
xchg
pushl
mov
add
push
mov
add
add
xchg
jmp
mov
add
add
push
pushl
pop
popl
jmp
push
jmp
add
jmp
sub
add
add
jmp
and
jmp
add
add
xchg
jmp
neg
push
jmp
pop
push
mov
sub
pop
push
mov
jmp
xor
xor
jmp
mov
add
push
mov
sub
xchg
jmp
add
jmp
mov
jmp
add
sub
jmp
pop
add
add
xchg
pop
pop
push
jmp
pop
sub
mov
push
pop
push
mov
add
pop
jmp
add
push
push
jmp
push
mov
mov
jmp
dec
xor
or
jmp
xor
push
mov
neg
dec
add
jmp
add
jmp
push
mov
push
push
push
pop
sub
xor
dec
jmp
sub
jmp
mov
jmp
pop
add
add
pop
jmp
pop
add
mov
pop
shr
add
jmp
mov
jmp
add
push
mov
inc
sub
add
pop
jmp
push
mov
add
mov
push
mov
push
mov
jmp
mov
shr
inc
sub
jmp
push
mov
shr
and
neg
jmp
pushl
pushl
jmp
pop
xor
xor
xor
jmp
mov
xor
push
mov
mov
pop
mov
add
or
shl
push
mov
sub
jmp
push
mov
mov
push
jmp
sub
jmp
mov
sub
mov
mov
push
mov
mov
pop
jmp
shl
shr
or
xor
sub
add
mov
jmp
add
mov
add
dec
xor
xor
jmp
add
pop
shl
jmp
mov
push
mov
add
jmp
add
xchg
pop
sub
mov
jmp
mov
jmp
sub
jmp
pop
push
mov
sub
jmp
push
mov
mov
jmp
sub
jmp
dec
not
add
xor
xor
pop
xor
sub
sub
add
pushl
pop
add
jmp
and
xor
sub
sub
add
pop
mov
pop
not
sub
not
jmp
add
add
sub
pop
movzbl
pushl
push
jmp
mov
add
pop
add
jmp
mov
push
jmp
push
mov
jmp
pushl
popf
pop
adc
pushf
jmp
pushl
popf
pop
rcrw
pushf
jmp
and
pop
jmp
add
add
jmp
pop
xor
xor
xor
mov
jmp
sub
pop
push
jmp
mov
add
add
jmp
push
mov
push
jmp
push
mov
mov
pop
add
add
push
mov
jmp
push
jmp
mov
add
jmp
push
pushf
jmp
sub
pop
jmp
push
xchg
not
xchg
pop
push
push
jmp
push
pop
xor
mov
pushl
pop
add
jmp
pop
add
add
xchg
mov
and
add
jmp
add
push
mov
push
mov
or
neg
push
mov
inc
or
push
mov
sub
add
pop
jmp
push
mov
jmp
push
mov
push
mov
xor
jmp
push
jmp
mov
pop
add
sub
add
push
jmp
pop
pop
jmp
sub
add
add
mov
add
xor
xor
xor
mov
sub
pushf
jmp
xchg
pop
push
mov
jmp
mov
sub
pop
jmp
xchg
push
jmp
mov
push
sub
mov
addl
jmp
push
pushf
jmp
mov
push
mov
jmp
add
sub
and
jmp
pop
jmp
pop
add
add
add
mov
add
push
jmp
mov
add
xor
xor
xor
jmp
add
add
push
pushl
mov
push
mov
add
add
xchg
pop
jmp
pop
jmp
pop
and
sub
mov
push
mov
mov
sub
add
add
pop
add
add
sub
pop
neg
dec
add
jmp
pop
xchg
jmp
mov
jmp
jmp
sub
jmp
push
jmp
shr
sub
sub
pop
sub
push
mov
shr
inc
dec
add
sub
pop
mov
push
mov
add
add
xor
jmp
mov
shl
or
xor
jmp
add
xchg
pop
sub
xchg
pop
mov
push
mov
push
mov
inc
inc
sub
sub
pop
mov
pop
and
jmp
add
jmp
push
mov
push
mov
mov
pop
jmp
add
sub
jmp
add
xchg
pop
sub
sub
push
jmp
pop
jmp
pop
pop
jmp
add
jmp
mov
mov
add
pop
xchg
jmp
mov
pop
mov
xor
pop
sub
jmp
mov
subl
pop
add
pop
add
pop
jmp
xor
mov
mov
jmp
mov
jmp
mov
push
mov
add
or
shl
shl
not
add
add
pop
add
sub
sub
sub
jmp
pop
jmp
sub
inc
add
sub
pop
pop
jmp
pop
push
mov
sub
sub
jmp
mov
jmp
pop
sub
mov
add
push
mov
addl
pushl
mov
jmp
mov
add
and
pushl
mov
push
mov
add
add
jmp
add
jmp
mov
add
jmp
and
add
push
mov
inc
sub
not
xor
xor
pop
mov
pop
shl
jmp
sub
push
mov
xor
shr
jmp
mov
mov
sub
pop
mov
add
add
push
pushl
pop
popl
pop
push
sub
mov
addl
pop
push
mov
jmp
pop
xor
jmp
mov
jmp
mov
push
sub
mov
push
mov
add
mov
add
pop
sub
jmp
sub
mov
push
mov
push
mov
not
neg
sub
jmp
mov
add
xchg
jmp
mov
add
push
jmp
pushl
pop
add
mov
add
pushl
jmp
xor
jmp
add
pop
add
push
mov
jmp
xchg
pop
mov
push
mov
add
pop
pushl
pop
add
jmp
pop
add
jmp
push
push
push
pop
xor
dec
xor
mov
pop
xor
add
jmp
mov
push
mov
mov
pop
jmp
popl
jmp
push
mov
push
jmp
pop
inc
jmp
mov
xor
shl
neg
xor
and
jmp
pop
add
pop
jmp
mov
mov
pop
jmp
sub
mov
add
xor
movzbl
pushl
push
mov
jmp
pop
mov
jmp
pop
sub
mov
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
jmp
inc
add
jmp
mov
mov
mov
sub
jmp
popl
pushl
mov
add
push
jmp
sub
push
mov
neg
sub
shr
jmp
pop
pop
popl
sub
mov
addl
pushl
mov
add
push
mov
sub
mov
addl
pop
add
jmp
xchg
pop
add
push
mov
push
sub
push
popl
jmp
pop
mov
pop
push
mov
xor
pop
dec
jmp
sub
add
add
push
mov
sub
neg
and
neg
add
sub
pop
push
mov
add
pop
jmp
add
add
xchg
pop
add
jmp
mov
pop
push
mov
mov
pop
pop
pop
pushl
jmp
push
mov
add
pop
sub
xor
jmp
add
xchg
mov
add
push
mov
add
jmp
mov
add
pop
add
jmp
add
jmp
add
add
add
mov
add
mov
jmp
push
pop
add
jmp
xchg
mov
push
push
mov
push
jmp
push
pushl
pop
add
push
push
pop
add
pop
sub
mov
push
pop
sub
sub
mov
xchg
not
xchg
pop
shl
jmp
mov
add
pop
mov
push
mov
add
jmp
add
jmp
sub
sub
jmp
sub
pushl
pushl
pop
push
mov
jmp
mov
push
push
pop
add
push
mov
sub
mov
push
mov
add
jmp
mov
mov
pop
and
pop
sub
jmp
shl
shr
jmp
xor
add
pop
push
jmp
add
jmp
add
pop
push
mov
sub
pop
xchg
pop
mov
push
mov
sub
jmp
inc
xor
sub
add
push
mov
add
pop
pop
sub
jmp
xchg
pop
push
jmp
push
mov
add
or
add
push
notl
pop
inc
shr
shr
shl
xchg
jmp
push
push
pop
add
add
xchg
jmp
popl
mov
mov
jmp
mov
add
push
jmp
pop
add
pop
push
mov
add
pop
xchg
pop
push
mov
add
mov
add
add
xchg
mov
jmp
push
sub
pop
add
mov
jmp
mov
add
pushl
pop
push
jmp
mov
add
xor
pop
push
pop
mov
add
add
pop
push
mov
xor
shl
jmp
mov
add
jmp
sub
pop
add
jmp
or
jne
push
push
mov
push
jmp
add
add
jmp
push
push
mov
mov
jmp
pop
mov
add
sub
mov
jmp
pop
push
jmp
pop
jmp
push
mov
shl
push
mov
xor
pop
or
jmp
pop
push
mov
sub
mov
jmp
shl
push
mov
push
mov
push
pop
shr
jmp
mov
push
mov
sub
jmp
mov
mov
mov
and
jmp
pop
jmp
xor
pop
add
pop
add
jmp
pushl
jmp
add
xor
xor
xor
jmp
add
or
jmp
pop
sub
jmp
mov
push
jmp
pop
jmp
mov
add
add
sub
sub
add
add
push
mov
xor
jmp
notl
jmp
mov
add
push
mov
sub
jmp
shr
sub
add
pop
not
sub
mov
mov
add
sub
xchg
pop
mov
jmp
mov
add
pop
add
movzbl
lea
push
jmp
mov
add
pop
sub
jmp
push
mov
jmp
add
xchg
mov
pop
sub
pop
push
push
mov
push
mov
push
mov
sub
shl
shr
or
sub
sub
jmp
add
push
mov
push
mov
add
push
mov
sub
sub
add
pop
jmp
push
mov
add
jmp
pop
jmp
push
mov
mov
push
mov
add
push
jmp
mov
jmp
push
jmp
mov
push
mov
mov
pop
pop
mov
add
pop
mov
mov
add
pushl
mov
add
add
sub
jmp
mov
mov
jmp
xchg
mov
sub
sub
jmp
pushl
pop
push
mov
jmp
mov
jmp
add
xor
jmp
mov
add
push
mov
mov
neg
shr
jmp
mov
pushl
jmp
push
mov
add
mov
push
jmp
mov
add
push
sub
pop
shr
push
mov
and
pop
push
push
sub
mov
jmp
add
push
pushl
jmp
pop
add
add
sub
push
mov
jmp
shr
xor
jmp
add
push
jmp
mov
add
popl
jmp
mov
jmp
xor
xor
xor
mov
mov
sub
mov
sub
jmp
add
sub
jmp
push
mov
jmp
push
mov
add
pop
sub
mov
jmp
or
inc
shr
jmp
pop
sub
mov
sub
mov
addl
pushl
pushl
jmp
neg
shr
add
mov
pop
add
pop
add
xor
xor
xor
pop
push
mov
mov
jmp
add
jmp
mov
sub
mov
jmp
shl
not
add
inc
sub
add
pop
add
jmp
neg
xor
neg
jmp
push
mov
push
mov
add
pop
push
mov
sub
add
add
pop
push
jmp
push
mov
or
or
add
add
jmp
pop
inc
shr
jmp
mov
jmp
mov
push
push
mov
push
mov
add
add
mov
pop
add
pop
add
jmp
pushl
mov
jmp
pop
add
jmp
push
pop
add
sub
xchg
pop
jmp
push
mov
add
sub
xchg
pop
mov
pushl
jmp
push
push
pop
add
not
xor
mov
jmp
add
jmp
sub
jmp
xor
add
jmp
pushl
mov
push
mov
push
pop
add
add
xchg
pop
popl
sub
mov
push
jmp
add
add
sub
jmp
and
dec
add
and
jmp
add
push
jmp
add
xchg
pop
sub
mov
jmp
xor
jmp
push
mov
mov
pop
add
add
jmp
sub
pop
jmp
mov
add
pushl
jmp
mov
xor
pop
sub
jmp
xor
pop
add
mov
jmp
shr
sub
add
pop
push
mov
mov
sub
pop
xchg
jmp
pop
add
push
pop
jmp
mov
push
jmp
mov
pop
add
pop
pop
jmp
xchg
mov
push
mov
xor
xor
add
mov
add
xchg
jmp
cmpl
je
sub
mov
jmp
push
mov
add
push
mov
and
shl
shr
dec
neg
sub
sub
pop
xchg
pop
mov
mov
add
addl
mov
push
mov
push
mov
add
pop
jmp
xor
mov
jmp
xchg
pop
div
push
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
push
push
push
pop
shl
xor
mov
pop
neg
inc
not
push
mov
sub
add
jmp
push
mov
xor
jmp
sub
jmp
xor
add
pop
add
jmp
mov
jmp
shl
xor
xor
add
sub
mov
sub
mov
mov
add
jmp
add
add
xchg
mov
jmp
add
xchg
pop
sub
mov
mov
jmp
inc
xor
mov
pop
jmp
pushl
pop
jmp
xor
xor
pop
add
add
jmp
add
addl
mov
add
mov
add
pushl
pop
add
add
push
push
mov
jmp
mov
add
sub
xchg
pop
mov
push
jmp
push
push
mov
mov
pop
add
pop
xor
xor
xor
pop
push
pushl
pop
popl
jmp
mov
add
sub
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
push
jmp
inc
and
sub
add
jmp
inc
xor
xor
xor
jmp
mov
jmp
sub
mov
jmp
sub
mov
push
mov
push
mov
jmp
add
xchg
pop
sub
mov
mov
not
xor
xor
jmp
not
jmp
mov
mov
add
add
xchg
jmp
add
sub
xor
xor
xor
jmp
subl
subl
jmp
mov
jmp
xor
jmp
pop
or
jmp
pop
add
jmp
mov
jmp
xor
pushf
jmp
pop
sub
xchg
pop
mov
jmp
add
push
mov
add
jmp
mov
mov
jmp
pushl
mov
add
add
shr
xor
push
mov
sub
mov
jmp
push
mov
sub
mov
jmp
movzwl
push
jmp
push
mov
jmp
neg
jmp
pushl
jmp
sub
add
push
jmp
pop
add
sub
jmp
pop
sub
mov
pop
sub
pop
add
add
push
jmp
add
sub
sub
jmp
push
mov
jmp
push
mov
push
jmp
mov
mov
add
pushl
mov
add
add
mov
pushl
jmp
push
pop
sub
not
shl
push
mov
sub
dec
jmp
lods
sub
mov
mov
sub
pop
sub
mov
mov
sub
pop
push
jmp
add
sub
sub
push
jmp
push
jmp
push
mov
add
mov
add
mov
add
add
push
mov
jmp
xor
mov
pop
add
jmp
sub
sub
add
add
jmp
pop
mov
jmp
mov
mov
dec
and
add
dec
xor
xor
mov
pop
add
pop
sub
sub
pop
mov
mov
jmp
add
add
mov
jmp
sub
sub
mov
jmp
add
xchg
jmp
push
mov
add
add
sub
sub
jmp
mov
pop
sub
sub
sub
sub
add
add
push
mov
push
mov
xor
add
sub
sub
pop
push
jmp
add
sub
add
add
pop
add
push
mov
sub
pop
pop
sub
mov
jmp
push
jmp
xchg
mov
add
sub
jmp
push
sub
push
popl
addl
popl
addl
jmp
mov
and
push
addl
sub
jmp
xor
shr
push
jmp
mov
pop
pop
xchg
not
xchg
jmp
push
mov
add
addl
subl
jmp
mov
add
neg
jmp
add
add
xchg
pop
jmp
mov
pop
add
add
sub
mov
add
push
sub
mov
mov
mov
sub
jmp
sub
xor
xor
add
pop
sub
sub
add
pop
jmp
mov
add
mov
pop
jmp
mov
push
jmp
pop
jmp
push
jmp
pop
mov
jmp
pop
mov
jmp
push
mov
jmp
add
sub
jmp
inc
jmp
xchg
pop
movzbw
push
push
jmp
push
push
popl
push
push
pop
add
pop
pop
add
push
mov
mov
push
push
pop
xor
sub
sub
jmp
add
pop
sub
xchg
pop
push
popl
jmp
mov
jmp
push
push
jmp
push
mov
mov
mov
add
add
jmp
add
or
mov
add
push
mov
xor
mov
add
add
mov
jmp
mov
push
jmp
pop
sub
sub
mov
push
pop
add
pop
pushl
jmp
mov
push
jmp
mov
mov
xor
pop
push
mov
jmp
mov
add
or
add
or
inc
shl
dec
jmp
mov
sub
mov
push
pop
push
pop
pop
shr
or
push
mov
add
sub
xchg
pop
jmp
add
sub
xchg
pop
mov
pushl
pop
jmp
pop
xor
jmp
pop
jmp
mov
push
pop
mov
mov
jmp
pop
mov
add
pop
push
mov
add
add
xor
sub
mov
jmp
mov
push
push
mov
push
push
mov
jmp
pop
add
push
pushl
jmp
sub
jmp
push
mov
neg
or
or
xor
add
add
sub
pop
pop
push
push
mov
mov
jmp
pop
mov
mov
add
jmp
pop
add
xchg
pop
shlb
pushf
jmp
pushl
mov
add
jmp
pop
push
jmp
add
pop
push
mov
add
jmp
addl
pop
jmp
xchg
jmp
or
sub
or
shr
jmp
mov
jmp
negw
jmp
add
pop
add
xor
xor
xor
mov
sub
jmp
push
mov
mov
inc
dec
jmp
mov
push
mov
xor
pop
sub
jmp
pushl
pop
popl
jmp
push
pushl
jmp
pushl
mov
add
jmp
pop
jmp
mov
shl
jmp
and
xor
sub
jmp
push
pushl
pop
popl
jmp
sub
sub
pop
push
mov
add
push
mov
sub
pop
xchg
pop
mov
push
sub
jmp
pop
push
jmp
add
sub
pop
sub
mov
push
push
jmp
add
add
sub
pop
push
jmp
mov
push
push
jmp
add
jmp
mov
jmp
pop
sub
jmp
sub
pop
xchg
jmp
push
pop
push
push
mov
jmp
push
mov
jmp
sub
mov
push
pop
push
mov
jmp
neg
inc
shl
neg
add
jmp
shl
add
and
dec
sub
sub
jmp
neg
sub
sub
jmp
push
mov
add
jmp
sub
xor
mov
add
jmp
xor
pop
xor
jmp
mov
test
pushf
jmp
add
add
pop
add
sub
add
add
sub
pop
add
jmp
add
pop
push
mov
sub
jmp
add
sub
push
mov
sub
sub
add
mov
add
sub
mov
mov
push
xchg
jmp
pop
not
jmp
add
jmp
xor
pop
sub
add
push
mov
sub
or
add
add
add
sub
pop
pop
add
push
jmp
or
jmp
mov
pop
xor
pop
push
jmp
push
pushf
jmp
mov
neg
sub
shl
and
dec
jmp
mov
xor
mov
pop
or
jmp
push
jmp
and
mov
add
sub
xor
pop
sub
pop
add
push
mov
mov
add
mov
jmp
push
mov
add
add
jmp
pop
std
push
jmp
mov
pushl
mov
push
jmp
pop
push
push
jmp
pushl
popf
pop
sbb
pushf
jmp
add
jmp
xor
mov
jmp
mov
pushl
pop
popl
pop
shr
xor
push
push
push
popl
push
mov
push
jmp
add
not
or
jmp
push
mov
sub
pop
jmp
pop
or
push
push
mov
mov
pop
jmp
inc
push
mov
shl
inc
or
and
add
shr
add
sub
jmp
pop
jmp
dec
sub
jmp
push
mov
xor
pop
sub
mov
mov
mov
jmp
mov
push
push
mov
addl
pop
jmp
mov
push
mov
push
push
jmp
mov
push
jmp
mov
push
push
mov
add
jmp
mov
add
jmp
push
mov
dec
xor
and
and
push
notb
pop
jmp
sub
jmp
mov
push
pop
inc
push
mov
and
pop
jmp
sub
jmp
push
push
pop
shr
sub
and
and
jmp
dec
add
jmp
push
push
mov
jmp
xchg
sub
mov
mov
jmp
and
jmp
push
mov
sub
pop
pop
sub
jmp
mov
and
pushf
jmp
mov
push
jmp
sub
push
jmp
xor
jmp
add
shr
jmp
pop
add
add
add
jmp
and
pop
and
dec
or
push
jmp
push
mov
xor
jmp
mov
pop
jmp
add
mov
push
jmp
pop
sub
jmp
popl
jmp
sub
jmp
mov
push
mov
mov
push
push
pop
sub
sub
jmp
pushl
jmp
push
pop
mov
add
jmp
sub
pushl
pop
jmp
pop
push
mov
shr
not
or
xor
add
pop
push
mov
sub
add
sub
sub
add
pop
xchg
pop
mov
jmp
pushl
mov
add
add
jmp
add
push
mov
jmp
add
xchg
pop
push
mov
push
jmp
pop
add
jmp
pop
mov
jmp
mov
sub
neg
jmp
add
jmp
add
add
xchg
jmp
xor
jmp
pop
sub
mov
push
push
pop
or
add
jmp
add
xchg
pop
jmp
pop
pop
neg
xor
xor
jmp
jmp
pop
xor
jmp
add
add
shl
jmp
shr
sub
sub
pop
jmp
mov
xor
pop
xor
jmp
push
push
push
pop
jmp
xchg
pop
jmp
in
jnp
or
call
cmpsl
or
hlt
cmpsb
or
mov
cmpsl
or
jae
or
cwtl
cmpsl
or
and
cmpsb
or
nop
cmpsb
or
add
or
or
or
andl
or
outsb
cmpsl
or
hlt
cmpsb
or
mov
cmpsb
or
mov
or
cmp
or
mov
cmpsl
or
jp
or
pop
cmpsl
or
enter
clc
cmpsb
or
mov
or
shlb
inc
mov
cmpsl
or
mov
or
push
cmpsl
or
ja
or
xor
or
shll
sbb
cmpsl
or
cmpsb
or
andb
in
cmpsb
or
andl
or
jb
or
jae
or
jo
or
dec
cmpsl
or
push
cmpsl
or
push
cmpsl
or
imul
or
inc
cmpsl
or
mov
or
lcall
push
mov
cmpsb
or
mov
or
pop
cmpsb
or
ret
cmpsb
or
andl
or
xor
cmpsb
or
inc
cmpsb
or
sbb
or
ret
cmpsb
or
push
cmpsl
or
cmp
cmpsl
or
frstor
or
cmpsb
or
das
cmpsl
or
add
cmpsl
or
mov
or
and
cmpsl
or
sbb
or
shll
or
and
cmpsl
or
js
or
xchg
cmpsl
or
mov
or
in
or
push
cmpsb
or
pop
cmpsb
or
shll
or
insb
cmpsl
or
fisubl
or
mov
or
popa
cmpsb
or
je
or
jbe
or
jp
or
push
cmpsl
or
enter
in
or
popf
cmpsl
or
arpl
or
xchg
or
cwtl
cmpsb
or
lea
or
add
cmpsb
or
jo
or
jp
or
sub
or
mov
cmpsb
or
cmpsb
or
jmp
or
sub
or
mov
cmpsl
or
pop
cmpsl
or
cmp
or
jb
or
xor
or
cmc
cmpsb
or
out
or
popf
cmpsb
or
jle
or
mov
cmpsb
or
inc
cmpsl
or
pop
cmpsl
or
sub
or
arpl
or
je
or
aad
or
lcall
mov
das
cmpsl
or
dec
cmpsb
or
sbb
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
add
sub
sub
jmp
mov
xchg
dec
jmp
pop
sub
not
xor
mov
pop
xor
not
not
and
jmp
push
pushl
pop
jmp
xchg
pop
add
add
mov
add
xor
jmp
lods
xor
push
jmp
add
jmp
mov
sub
pushl
pop
sub
mov
jmp
push
push
popl
push
mov
add
pop
mov
add
push
mov
jmp
xchg
mov
jmp
push
mov
sub
mov
jmp
mov
add
add
add
jmp
mov
add
xor
sub
and
add
add
pop
jmp
pop
add
jmp
xor
pop
xor
jmp
add
jmp
add
pop
push
pushl
jmp
shr
sub
mov
mov
jmp
xor
pop
add
pop
mov
push
mov
add
add
xchg
pop
add
add
push
pushl
pop
jmp
sub
jmp
mov
add
jmp
mov
push
mov
shr
jmp
sub
mov
push
jmp
and
add
or
jmp
add
push
mov
not
shr
sub
or
jmp
add
sub
add
add
sub
pop
and
xor
jmp
add
sub
add
pop
push
push
mov
mov
sub
sub
jmp
and
and
xor
sub
jmp
mov
jmp
mov
neg
push
mov
add
sub
xchg
pop
mov
mov
dec
jmp
pop
push
mov
jmp
addl
mov
add
push
mov
mov
dec
jmp
add
jmp
mov
jmp
pop
add
not
add
jmp
mov
sub
mov
push
mov
xor
jmp
pop
push
mov
mov
pop
pop
jmp
mov
or
pushf
jmp
sub
pop
pop
add
xor
xor
xor
jmp
push
mov
and
dec
sub
sub
add
jmp
not
push
mov
add
jmp
sub
add
mov
add
sub
push
pushl
pushl
mov
add
jmp
add
mov
add
jmp
xchg
pop
xor
xor
xor
jmp
add
jmp
sub
add
sub
sub
jmp
mov
sub
sub
add
pop
pushl
pop
add
add
xchg
mov
xor
pushf
jmp
shl
jmp
push
mov
neg
shl
jmp
pop
jmp
add
xor
jmp
xor
pop
xor
jmp
pop
pop
add
inc
sub
shr
jmp
pop
mov
push
mov
mov
pop
shr
push
push
mov
inc
xor
push
pop
pop
jmp
pop
mov
pop
jmp
push
mov
push
mov
push
push
mov
mov
pop
jmp
add
push
mov
mov
add
pushl
pop
push
mov
add
add
xchg
pop
jmp
mov
mov
add
jmp
xor
xor
jmp
pushl
pop
push
push
jmp
or
mov
add
xor
add
jmp
pop
xchg
jmp
dec
add
and
jmp
pushl
pushl
pop
push
jmp
mov
mov
push
mov
add
pop
push
jmp
mov
jmp
add
mov
add
xor
xor
xor
mov
mul
jmp
pop
xchg
jmp
add
pop
push
mov
jmp
xor
add
mov
add
jmp
push
mov
add
pop
jmp
shl
inc
sub
sub
jmp
shl
xor
add
pop
jmp
sub
add
sub
pop
add
add
jmp
pop
mov
subl
mov
jmp
subb
pop
sub
add
pop
sub
sub
pop
jmp
pushl
jmp
mov
jmp
pop
jmp
movzbw
push
jmp
add
jmp
add
xchg
pop
test
pushf
jmp
pushl
mov
add
add
jmp
sub
pushl
pop
sub
mov
mov
jmp
mov
jmp
add
pop
sub
sub
jmp
push
mov
jmp
push
mov
jmp
add
jmp
pop
add
neg
sub
mov
jmp
or
shr
shr
xor
sub
jmp
inc
push
jmp
mov
add
pop
sub
add
jmp
xor
xor
xor
not
xor
xor
xor
jmp
addl
pop
push
mov
add
add
sub
mov
add
jmp
add
xchg
jmp
mov
pushl
mov
push
push
pop
add
sub
mov
mov
shl
shr
xchg
not
xchg
xor
neg
jmp
xor
xor
pop
jmp
pop
mov
jmp
mov
jmp
mov
push
mov
shl
add
mov
pop
push
mov
jmp
xor
jmp
mov
shr
or
push
mov
or
pop
sub
add
sub
jmp
mov
mov
add
mov
jmp
sub
pushl
pop
push
jmp
add
jmp
sub
xor
pop
sub
add
add
jmp
mov
mov
jmp
push
push
pop
xor
mov
add
add
add
sub
mov
add
push
mov
add
pop
jmp
pop
not
xchg
add
push
push
mov
push
jmp
mov
dec
add
jmp
xor
xor
jmp
pushl
pop
popl
mov
incl
pushf
jmp
push
mov
push
jmp
mov
or
pop
push
mov
jmp
add
push
mov
jmp
mov
inc
dec
sub
sub
pop
jmp
popl
jmp
add
push
push
mov
mov
pop
jmp
sub
jmp
mov
mov
pop
shr
xor
push
mov
jmp
add
add
sub
pop
xor
xor
xor
mov
sub
pushf
jmp
jmp
add
pop
xchg
mov
jmp
sub
pop
sub
push
jmp
add
push
mov
push
mov
sub
add
add
push
mov
mov
neg
push
mov
jmp
and
pop
push
jmp
subl
mov
add
pushl
mov
add
jmp
pop
xchg
pop
mov
jmp
push
mov
jmp
push
mov
sub
pop
pop
add
sub
sub
add
sub
push
mov
mov
add
sub
sub
pop
add
push
push
mov
mov
mov
push
mov
add
add
xchg
pop
add
pop
jmp
mov
mov
add
pop
add
add
sub
jmp
push
pushl
mov
add
jmp
push
mov
add
add
jmp
mov
jmp
xchg
jmp
pop
sub
mov
jmp
push
jmp
mov
mov
add
jmp
xor
jmp
xchg
pop
popl
mov
jmp
push
mov
mov
add
add
push
pushl
pop
popl
pop
popl
jmp
add
xchg
mov
popl
mov
xchg
mov
bt
pushf
jmp
pop
sub
sub
add
push
jmp
sub
pop
add
pop
add
push
pushl
jmp
add
pop
mov
add
jmp
pop
add
push
addl
pushl
pop
add
jmp
sub
mov
push
push
mov
add
push
mov
add
pop
add
push
mov
add
sub
xor
xor
xor
mov
mov
pushl
pop
popl
pop
push
mov
push
push
pop
push
push
mov
jmp
pushl
pop
push
push
push
popl
push
jmp
sub
not
xor
sub
pop
pop
xor
xor
xor
pop
jmp
pop
jmp
popl
mov
mov
jmp
push
mov
jmp
pop
add
mov
push
mov
add
add
xchg
pop
sub
jmp
pop
push
mov
jmp
shl
jmp
xor
pop
jmp
add
add
sub
pop
push
jmp
pop
push
mov
xor
jmp
add
mov
add
push
jmp
mov
push
jmp
pushl
pop
push
mov
mov
jmp
pushl
pop
popl
pop
jmp
dec
jmp
pop
jmp
sub
add
jmp
add
xchg
pop
xchg
mov
jmp
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
jmp
sub
sub
add
jmp
pop
push
mov
mov
xor
jmp
mov
push
push
pop
add
add
jmp
mov
addl
pop
add
push
jmp
push
mov
jmp
push
mov
mov
pop
mov
add
push
push
mov
add
not
dec
jmp
add
sub
pop
add
add
mov
jmp
add
jmp
pop
push
mov
push
mov
add
shl
sub
add
pop
add
sub
mov
jmp
pop
push
pushl
jmp
mov
addl
mov
push
jmp
pop
jmp
push
mov
add
jmp
pop
xor
jmp
pop
pop
sub
xchg
mov
mov
push
mov
push
mov
jmp
sub
add
add
jmp
mov
jmp
mov
sub
pop
add
jmp
sub
mov
mov
not
jmp
mov
add
add
sub
pop
pop
jmp
add
add
pushl
pop
add
push
jmp
sarw
pushf
jmp
or
push
mov
and
jmp
push
mov
jmp
inc
neg
add
add
push
mov
or
pop
jmp
add
mov
add
jmp
xor
jmp
add
add
pop
jmp
mov
add
add
add
sub
add
sub
pushl
pop
add
push
push
mov
push
mov
add
neg
not
sub
push
pushl
pop
add
pop
sub
dec
inc
xor
push
mov
add
pushl
pop
push
mov
add
jmp
push
push
pop
sub
mov
pop
mov
add
push
jmp
mov
mov
jmp
mov
jmp
pop
xchg
mov
or
shl
push
mov
push
mov
push
mov
add
xor
push
push
pop
pop
sub
xchg
jmp
mov
add
sub
xchg
jmp
mov
inc
or
push
incl
jmp
add
pushl
jmp
xor
or
or
jmp
add
add
jmp
mov
sub
mov
add
add
add
pop
push
jmp
push
mov
add
pop
sub
xchg
mov
mov
jmp
push
mov
mov
sub
add
add
pop
jmp
or
xor
sub
pop
jmp
mov
sub
pop
add
add
jmp
sub
add
jmp
pop
jmp
push
mov
xor
xor
mov
pop
and
sub
shr
sub
jmp
push
mov
xor
pop
xor
pop
jmp
sub
add
add
push
jmp
mov
add
push
mov
add
add
sub
mov
mov
xchg
not
xchg
push
mov
shr
neg
push
mov
add
pop
xor
shl
xor
xor
pop
or
pop
inc
sub
sub
pop
jmp
pop
add
push
push
mov
dec
or
sub
sub
mov
pop
or
pop
xor
push
mov
xor
mov
add
jmp
sub
pop
jmp
mov
add
push
mov
jmp
xor
jmp
mov
push
jmp
add
push
mov
push
mov
mov
pop
xor
sub
pop
xor
mov
add
add
jmp
mov
push
pop
push
mov
jmp
pop
push
push
mov
xor
add
mov
pop
add
pop
add
sub
pop
jmp
add
pop
xchg
pop
push
sub
mov
jmp
mov
add
jmp
add
pop
push
mov
pushl
mov
push
mov
jmp
pop
push
push
mov
push
mov
mov
pop
pop
push
mov
xor
jmp
push
push
mov
jmp
pop
sub
sub
push
push
mov
mov
xor
mov
pushl
pop
jmp
push
mov
jmp
add
pop
jmp
sub
neg
jmp
mov
mov
jmp
mov
pop
pop
jmp
mov
add
jmp
mov
jmp
mov
push
mov
jmp
mov
add
jmp
mov
or
dec
xor
neg
jmp
mov
shr
sub
jmp
add
pop
jmp
xor
jmp
xor
sub
jmp
pop
push
push
mov
push
jmp
add
push
pushl
pop
popl
jmp
not
jmp
add
sub
push
sub
jmp
sub
mov
mov
push
mov
add
jmp
pushl
push
mov
push
mov
jmp
add
jmp
mov
push
mov
xor
mov
add
add
mov
push
mov
add
add
xor
xor
xor
pop
jmp
add
push
mov
push
mov
mov
add
pop
push
push
push
jmp
mov
add
push
xorl
mov
add
xor
jmp
mov
mov
push
mov
sub
not
xor
jmp
mov
add
pop
xor
shr
push
mov
add
pop
add
push
mov
mov
pop
pop
sub
mov
add
add
sub
sub
add
add
pushl
jmp
shr
jmp
push
jmp
mov
push
mov
mov
mov
add
pop
mov
add
push
push
mov
mov
pop
jmp
push
mov
jmp
sub
mov
mov
add
add
xchg
jmp
sub
push
jmp
mov
dec
jmp
push
push
mov
jmp
push
mov
add
sub
xchg
pop
mov
mov
mov
pop
shl
shr
or
jmp
push
mov
mov
pop
jmp
pushw
jmp
mov
sub
pop
or
pop
pushw
mov
mov
sub
not
dec
inc
jmp
pop
jmp
mov
jmp
mov
pop
neg
xor
xor
pop
xor
jmp
inc
shr
inc
xor
add
mov
jmp
push
pop
add
jmp
push
pop
add
add
jmp
push
mov
mov
xor
add
pop
sub
jmp
mov
add
sub
xchg
jmp
add
add
push
pushl
pop
popl
pop
or
je
pushl
sub
mov
mov
sub
pop
pop
push
push
mov
push
pop
push
push
mov
jmp
pop
mov
pop
push
mov
push
jmp
push
push
jmp
push
jmp
push
mov
sub
shr
dec
add
xor
add
pop
jmp
add
and
pop
add
sub
mov
push
mov
jmp
pop
and
jmp
add
push
push
mov
mov
jmp
movzbw
push
mov
push
jmp
sub
mov
pop
xor
dec
jmp
add
dec
push
mov
jmp
pop
sub
mov
sub
mov
mov
neg
jmp
sub
jmp
add
pop
xchg
pop
mov
add
sub
mov
pushl
jmp
lods
jmp
mov
shl
jmp
add
jmp
mov
pop
jmp
mov
pop
not
shl
not
xor
add
mov
jmp
xor
pop
jmp
add
pop
push
mov
sub
jmp
mov
jmp
push
pushl
mov
add
popl
push
jmp
mov
jmp
pop
xor
push
mov
add
jmp
shr
sub
xor
mov
add
jmp
pop
jmp
or
shl
push
mov
or
jmp
dec
jmp
add
pop
sub
mov
jmp
sub
add
pushl
pop
push
mov
add
add
jmp
and
dec
add
add
xor
jmp
add
pop
push
pushl
pop
popl
mov
sub
mov
mov
jmp
not
push
mov
and
add
xor
jmp
add
jmp
mov
dec
or
jmp
sub
mov
jmp
add
jmp
add
add
pop
push
pushl
pop
popl
mov
mov
push
mov
push
jmp
shr
not
and
sub
add
pop
sub
xchg
mov
mov
jmp
shr
shl
shl
sub
jmp
sub
add
sub
sub
pop
jmp
push
mov
or
add
shr
xor
dec
add
add
pop
sub
jmp
mov
jmp
shr
xor
mov
pop
xor
jmp
push
mov
neg
shl
shr
jmp
sub
pushw
jmp
mov
xor
pop
subl
jmp
add
sub
sub
jmp
pop
add
sub
jmp
add
push
jmp
add
pop
mov
push
mov
add
add
xchg
mov
push
mov
jmp
add
push
jmp
and
jmp
and
shr
neg
neg
add
sub
or
pop
shr
shr
shr
push
mov
mov
xor
pop
push
mov
sub
pop
add
add
pushl
pop
add
push
mov
sub
pop
sub
mov
pushl
pop
jmp
add
add
xchg
pop
jmp
mov
add
add
xor
xor
jmp
add
add
add
sub
pop
jmp
mov
push
mov
mov
pop
add
mov
mov
push
push
mov
addl
mov
add
add
push
push
pop
push
mov
mov
push
push
jmp
sub
jmp
xchg
jmp
mov
mov
jmp
add
jmp
mov
add
add
xchg
mov
jmp
add
sub
add
jmp
pushl
jmp
mov
mov
pop
jmp
mov
push
mov
push
mov
xor
jmp
sub
jmp
add
pop
add
pop
xor
jmp
add
xchg
pop
jmp
and
sub
push
mov
not
shl
xchg
not
xchg
jmp
mov
jmp
sub
jmp
add
push
push
jmp
mov
add
add
push
jmp
pop
dec
jmp
push
jmp
pushl
pushl
jmp
add
sub
xchg
pop
jmp
xchg
jmp
pop
push
jmp
inc
xor
xor
dec
jmp
mov
push
jmp
push
mov
add
pop
jmp
mov
add
xchg
jmp
push
push
pop
shr
xor
jmp
jmp
mov
add
xor
jmp
mov
jmp
xor
pop
add
add
sub
jmp
push
xorl
pop
xor
mov
add
jmp
push
push
mov
addl
jmp
add
xor
xor
xor
jmp
shr
sub
push
pop
pop
jmp
push
jmp
add
xchg
pop
jmp
sub
mov
push
mov
mov
push
jmp
pop
jmp
xor
xor
mov
jmp
sub
mov
mov
jmp
mov
jmp
lods
push
push
push
mov
push
subl
pop
add
pop
mov
pop
add
mov
add
sub
mov
mov
shl
shr
shr
jmp
shr
xor
jmp
push
pushl
pop
popl
mov
shrb
pushf
jmp
pop
popl
jmp
add
add
pop
jmp
add
jmp
push
jmp
xchg
pushl
jmp
not
jmp
shr
push
jmp
mov
mov
push
pop
add
push
push
mov
add
jmp
add
add
pop
add
add
sub
jmp
mov
add
pop
sub
mov
jmp
lods
push
mov
mov
jmp
push
push
pop
jmp
add
push
mov
sub
pop
jmp
mov
xor
jmp
and
or
xor
push
notl
pop
sub
jmp
xchg
mov
add
jmp
pop
mov
mov
dec
jmp
pop
xchg
jmp
xor
xor
xor
xchg
jmp
mov
mov
jmp
notl
pop
jmp
sub
pop
add
add
sub
mov
push
jmp
inc
sub
push
jmp
add
sub
pop
jmp
pop
jmp
mov
pop
or
shr
push
jmp
popl
pop
mov
jmp
mov
mov
add
pop
add
add
pop
add
xor
xor
xor
jmp
mov
add
jmp
add
push
mov
push
mov
mov
add
add
push
push
mov
inc
xor
sub
mov
pop
not
jmp
mov
jmp
sub
pushl
pop
push
push
mov
add
push
push
jmp
sub
and
xor
mov
pop
add
pop
xchg
jmp
mov
mov
jmp
xor
pop
add
jmp
mov
jmp
or
pop
shr
push
mov
neg
jmp
add
pop
push
mov
neg
dec
push
mov
or
or
inc
add
xor
xor
pop
add
sub
sub
jmp
mov
not
inc
dec
not
push
mov
add
jmp
sub
add
add
pop
push
mov
add
pop
xor
jmp
pop
dec
push
mov
add
jmp
push
jmp
add
pop
add
xor
xor
xor
pop
add
jmp
sub
sub
push
jmp
sub
pushl
pop
add
push
mov
mov
jmp
pop
mov
push
mov
shr
xor
mov
pop
sub
jmp
add
pop
sub
push
mov
sub
jmp
pop
add
add
add
sub
mov
add
pop
push
push
pop
add
pop
xchg
pop
shr
push
subl
jmp
push
jmp
mov
add
jmp
add
mov
add
add
pop
push
mov
not
dec
add
jmp
shl
neg
sub
xor
pop
sub
sub
add
xor
neg
push
mov
jmp
pop
sub
pop
push
mov
dec
push
mov
add
sub
pop
add
jmp
pop
push
mov
xor
sub
mov
push
jmp
mov
add
add
jmp
push
push
jmp
add
jmp
mov
pop
and
pop
jmp
add
pop
push
mov
add
add
sub
add
jmp
sub
push
mov
add
pushl
pop
push
mov
push
mov
jmp
mov
push
mov
jmp
add
mov
add
push
jmp
mov
sub
push
mov
sub
sub
jmp
push
mov
add
pushl
pop
push
mov
add
add
xor
xor
xor
pop
pop
jmp
pop
xchg
pop
jmp
negb
pushf
jmp
add
pop
add
add
sub
pushl
mov
add
push
push
pushl
jmp
xchg
pop
mov
push
push
mov
addl
pop
push
mov
shl
jmp
push
jmp
not
push
mov
xchg
not
xchg
sub
push
jmp
push
push
jmp
sub
add
push
mov
push
mov
shl
jmp
xchg
jmp
xor
pop
add
jmp
xchg
pop
mov
mov
add
mov
push
mov
add
add
xchg
mov
push
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
sub
add
push
jmp
pop
inc
shl
xor
jmp
push
push
mov
mov
jmp
push
jmp
inc
sub
jmp
mov
add
push
jmp
dec
xchg
neg
xchg
or
xor
add
pop
sub
xchg
pop
mov
mov
and
push
push
mov
jmp
pop
xor
xor
xor
jmp
pop
pop
push
mov
shr
not
not
add
and
jmp
sub
jmp
pushl
pop
popl
pop
xor
movzbl
pushl
push
mov
xor
jmp
push
mov
jmp
push
push
pop
and
shr
push
jmp
mov
jmp
xchg
pop
push
mov
add
push
mov
jmp
add
jmp
pop
push
mov
jmp
sub
mov
jmp
mov
add
push
mov
neg
dec
inc
xor
sub
jmp
sub
add
add
pop
push
mov
mov
push
mov
add
sub
jmp
pushw
mov
mov
jmp
pop
add
jmp
push
mov
mov
shr
shl
push
mov
jmp
mov
jmp
add
jmp
xor
xor
xor
mov
shr
push
jmp
pop
jmp
pop
popl
pop
shr
jmp
sub
pop
add
pop
jmp
mov
add
sub
sub
add
add
push
push
mov
jmp
pop
sub
add
add
mov
add
sub
mov
push
push
mov
add
push
mov
sub
or
pop
dec
jmp
mov
push
jmp
mov
jmp
and
jmp
pop
add
jmp
pop
mov
or
jmp
add
add
xchg
pop
pushl
mov
add
add
xchg
push
jmp
push
push
push
popl
addl
pushl
pop
add
jmp
mov
add
add
jmp
sub
add
pop
add
jmp
pop
push
mov
push
jmp
sub
xor
inc
jmp
pop
popl
jmp
xchg
pop
mov
push
mov
push
mov
jmp
add
mov
add
push
mov
add
sub
push
pushl
pop
popl
pop
mov
push
jmp
xor
xor
xor
xor
jmp
pop
sub
jmp
pop
push
mov
jmp
and
dec
push
mov
or
dec
not
or
shr
add
sub
pop
add
jmp
xchg
mov
push
push
jmp
mov
sub
pop
pop
jmp
push
mov
and
sub
sub
mov
add
pop
add
push
jmp
mov
push
push
mov
push
jmp
add
pop
add
sub
add
sub
pushl
pop
jmp
add
jmp
xchg
pop
not
push
push
jmp
jmp
shr
and
jmp
add
jmp
push
jmp
pop
push
jmp
mov
add
jmp
push
mov
mov
add
sub
sub
mov
jmp
push
pushl
pushl
pop
jmp
add
pop
jmp
mov
sub
pop
mov
mov
add
jmp
add
push
pushl
jmp
push
subl
pop
add
pop
shr
not
jmp
sub
mov
add
add
pop
std
sub
jmp
addl
pushl
jmp
pop
jmp
mov
xor
add
pop
sub
jmp
pop
jmp
mov
jmp
add
sub
jmp
neg
inc
add
add
jmp
pop
add
add
jmp
sub
pop
add
add
mov
add
push
mov
jmp
push
jmp
add
push
push
mov
add
sub
xor
xor
xor
pop
mov
mov
mov
sub
add
push
mov
sub
sub
add
add
pop
pushl
jmp
xor
xor
jmp
mov
jmp
xor
mov
pop
mov
mov
jmp
mov
jmp
and
shr
and
add
and
mov
jmp
xor
add
jmp
and
or
sub
or
xor
sub
pop
add
pop
add
push
mov
pushl
pop
popl
pop
pop
push
mov
jmp
sub
mov
push
mov
mov
add
mov
add
dec
not
neg
jmp
pop
inc
or
inc
sub
jmp
push
mov
jmp
btr
pushf
jmp
mov
push
mov
jmp
pop
jmp
mov
mov
add
add
xchg
pop
push
pushl
pop
popl
mov
add
pushf
jmp
mov
push
mov
push
push
pop
push
mov
add
mov
add
sub
xor
xor
xor
pop
mov
jmp
push
mov
mov
add
pop
neg
jmp
add
mov
push
push
pop
push
mov
add
pop
jmp
mov
add
xchg
mov
pushl
jmp
pop
jmp
add
sub
mov
push
mov
push
mov
add
mov
add
push
jmp
pop
add
sub
xchg
pop
mov
push
jmp
jmp
inc
neg
not
push
mov
add
mov
add
shr
jmp
mov
mov
jmp
add
add
mov
push
mov
add
add
jmp
push
mov
jmp
mov
xor
or
mov
add
jmp
mov
push
mov
push
mov
addl
pop
jmp
lods
add
sub
jmp
mov
pop
jmp
pop
pushl
pop
push
mov
jmp
add
pop
xchg
mov
push
mov
pop
mov
add
sub
pushl
mov
jmp
push
mov
push
mov
and
xor
xor
pop
push
jmp
sub
mov
mov
add
sub
mov
mov
not
dec
not
sub
dec
add
sub
jmp
sub
sub
pop
jmp
pop
add
pop
add
pop
jmp
mov
add
push
mov
sub
add
add
add
sub
jmp
mov
push
mov
sub
push
popl
sub
mov
mov
add
pop
pushl
pop
push
mov
add
add
xchg
pop
push
jmp
pop
jmp
add
xchg
pop
and
push
mov
and
pop
push
push
mov
add
jmp
mov
pop
or
pop
xor
add
jmp
mov
not
or
jmp
shr
push
mov
xor
add
not
add
add
pop
add
sub
jmp
sub
jmp
mov
push
mov
jmp
push
jmp
popl
mov
rolw
pushf
jmp
push
pushf
jmp
pop
push
mov
jmp
mov
jmp
push
jmp
pop
push
mov
jmp
shl
inc
inc
and
sub
mov
pop
jmp
push
mov
push
mov
sub
mov
add
add
add
jmp
sub
pop
jmp
pop
push
jmp
mov
add
add
sub
mov
pop
jmp
mov
jmp
push
mov
shl
shr
jmp
sub
sub
mov
add
push
mov
xor
push
push
jmp
jmp
mov
mov
neg
xor
jmp
pop
jmp
mov
push
jmp
mov
add
add
pushl
pop
push
mov
jmp
mov
push
mov
add
add
xchg
pop
jmp
push
mov
add
pop
push
pushl
pop
popl
pop
jmp
popl
jmp
push
mov
add
sub
xchg
mov
mov
push
pushl
pop
sub
mov
push
pop
jmp
and
not
add
add
sub
sub
pop
pushl
pop
push
mov
add
push
mov
sub
mov
mov
push
jmp
add
sub
push
mov
add
pop
and
push
mov
jmp
push
mov
add
sub
mov
mov
add
push
push
jmp
add
add
xchg
mov
add
sub
push
jmp
mov
or
or
push
push
mov
mov
pop
shl
inc
push
mov
sub
pop
push
mov
sub
jmp
add
popl
mov
pushl
jmp
inc
dec
jmp
mov
jmp
add
xchg
push
pushl
pushl
pop
push
mov
add
sub
jmp
add
sub
jmp
pop
jmp
pop
push
mov
jmp
sub
add
jmp
push
pop
not
shr
jmp
mov
push
mov
mov
pop
jmp
push
mov
add
add
jmp
mov
mov
xor
sub
pop
push
jmp
push
mov
jmp
push
jmp
pop
sub
jmp
add
jmp
and
shl
jmp
push
mov
push
jmp
popl
mov
mov
jmp
mov
and
shr
or
xor
mov
pop
sub
add
add
sub
jmp
add
shr
push
mov
push
mov
jmp
pop
jmp
pop
jmp
pop
mov
mov
push
mov
add
jmp
mov
or
xor
and
jmp
mov
add
pop
push
jmp
xor
jmp
pop
add
add
jmp
dec
xor
shl
add
jmp
lods
xor
jmp
mov
sub
mov
mov
mov
pop
push
jmp
mov
add
not
neg
push
mov
neg
and
jmp
mov
add
add
jmp
sub
jmp
add
push
mov
sub
mov
add
pop
xor
xor
xor
jmp
sub
jmp
shr
add
xor
add
pop
push
mov
push
mov
mov
add
pop
add
push
mov
add
sub
xchg
pop
jmp
or
shr
sub
jmp
pop
jmp
pop
add
pop
jmp
mov
pushw
jmp
add
jmp
pop
add
jmp
add
jmp
pop
mov
mov
push
jmp
add
push
pushl
jmp
sub
mov
mov
add
push
jmp
pushl
pop
push
mov
push
mov
add
pop
add
push
pushl
mov
push
jmp
push
push
push
pop
inc
xor
push
push
jmp
pop
jmp
mov
jmp
sub
xor
xor
xor
jmp
mov
mov
jmp
pop
jmp
mov
xor
pop
xor
pop
sub
add
sub
jmp
add
push
push
jmp
and
xor
jmp
add
sub
xchg
jmp
push
pop
jmp
pop
jmp
push
jmp
push
jmp
pop
sub
jmp
pushl
pop
push
mov
push
mov
addl
pushl
pop
add
add
sub
mov
push
jmp
dec
push
mov
sub
sub
add
pop
add
pop
sub
jmp
push
notl
pop
xchg
xor
xor
jmp
mov
jmp
mov
jmp
pop
sub
pop
pop
jmp
sub
jmp
push
mov
add
pop
jmp
lods
push
push
mov
push
mov
mov
sub
add
add
mov
add
sub
jmp
pop
jmp
push
mov
not
add
sub
sub
mov
mov
jmp
add
not
jmp
push
mov
jmp
push
push
pop
jmp
pushl
jmp
pop
xor
add
add
jmp
push
sub
mov
push
jmp
push
sub
pop
push
incl
pop
xor
add
jmp
mov
mov
add
pop
add
push
notl
pop
jmp
mov
mov
mov
jmp
mov
decw
pushf
jmp
sub
add
pushl
pushl
jmp
pop
jmp
push
mov
add
mov
pop
add
jmp
add
xchg
pop
pop
pop
jmp
add
add
add
add
sub
mov
mov
add
add
sub
pop
movzbl
jmp
popa
ret
pushl
popf
pop
adc
pushf
jmp
pop
add
pop
pop
add
mov
jmp
push
mov
push
push
mov
xor
pop
pop
xor
jmp
sub
and
or
add
xor
sub
xor
pop
dec
push
mov
dec
jmp
sub
not
dec
push
mov
inc
jmp
mov
sub
pop
movzbl
jmp
shl
push
jmp
mov
add
push
mov
add
pop
xchg
mov
jmp
mov
mov
push
jmp
sub
xchg
jmp
pop
mov
jmp
pop
sub
xor
pop
push
mov
sub
mov
jmp
pop
jmp
push
jmp
sub
sub
jmp
sub
mov
add
jmp
push
jmp
mov
push
jmp
mov
jmp
pop
add
mov
add
jmp
push
pop
jmp
mov
push
mov
jmp
shr
shl
and
add
add
pop
add
sub
add
pop
push
pop
pop
push
mov
jmp
push
mov
push
mov
jmp
add
push
push
push
pop
mov
pop
xor
jmp
mov
mov
add
mov
add
push
push
mov
pushl
pop
push
jmp
sub
pushl
pop
jmp
add
popl
mov
jmp
mov
add
not
jmp
pop
xor
pop
sub
sub
add
pushl
pop
push
jmp
mov
push
jmp
push
mov
add
add
xchg
pop
push
mov
add
pop
xor
xor
xor
mov
push
jmp
sub
mov
jmp
pop
xor
add
pushl
jmp
pop
jmp
pushl
popf
pop
rcll
pushf
jmp
sub
jmp
sub
mov
push
pushl
pop
add
push
mov
push
mov
add
xor
or
pop
shl
jmp
neg
jmp
mov
jmp
mov
jmp
mov
push
push
push
pop
add
mov
pop
sub
sub
jmp
push
mov
add
add
xchg
pop
sub
jmp
pop
push
mov
add
jmp
pushl
jmp
push
mov
add
mov
jmp
pop
jmp
add
pop
add
push
mov
dec
jmp
shl
push
mov
xor
jmp
add
pushl
pop
sub
mov
jmp
mov
mov
push
mov
mov
shl
or
push
mov
jmp
sub
xchg
pop
jmp
pop
sub
mov
mov
sub
pop
sub
add
jmp
mov
jmp
push
mov
jmp
mov
push
push
pop
xor
mov
pop
jmp
subl
jmp
push
mov
neg
jmp
mov
mov
jmp
pop
mov
sub
pop
sub
add
add
mov
add
add
xchg
pop
push
mov
push
jmp
mov
add
pop
add
jmp
add
jmp
shl
shl
xor
add
sub
sub
pop
add
sub
sub
push
mov
add
sub
xchg
mov
mov
mov
jmp
notb
pop
shr
shr
add
push
mov
jmp
pop
mov
mov
jmp
mov
mov
push
mov
jmp
sub
jmp
pop
jmp
movzbl
push
push
mov
add
push
mov
push
push
mov
jmp
mov
push
mov
add
push
mov
sub
pop
xor
xor
xor
pop
mov
mov
push
mov
shl
jmp
pop
push
mov
add
sub
xchg
mov
mov
xor
xor
xor
xchg
jmp
pushl
jmp
add
pop
or
sub
push
mov
add
add
pop
jmp
push
push
push
pop
mov
add
pop
xor
not
xchg
not
push
jmp
pushl
pop
push
mov
push
jmp
sub
jmp
pushl
pushl
pop
jmp
xor
jmp
add
add
jmp
not
push
mov
push
mov
shr
jmp
add
pop
push
pushl
pop
jmp
push
jmp
add
push
mov
add
pop
jmp
push
mov
add
jmp
negw
pushf
jmp
pop
add
pop
jmp
add
jmp
pop
push
mov
and
pop
xor
and
push
mov
mov
and
jmp
add
push
mov
jmp
pushl
pop
add
popl
mov
jmp
push
mov
add
push
mov
sub
pop
xchg
pop
jmp
mov
push
jmp
pop
add
mov
pop
add
pop
push
mov
mov
jmp
push
jmp
push
mov
sub
pop
add
add
mov
add
push
mov
jmp
add
add
pop
add
sub
mov
sub
jmp
push
mov
jmp
mov
pushl
pop
add
jmp
dec
or
push
mov
jmp
add
jmp
mov
jmp
xorl
pop
push
mov
neg
add
xor
pop
mov
add
shl
push
jmp
pop
push
mov
push
pop
push
mov
dec
not
neg
shl
jmp
mov
push
mov
jmp
not
dec
push
mov
jmp
push
jmp
push
popl
sub
mov
jmp
pop
push
jmp
pop
xchg
jmp
mov
add
sub
add
pop
add
push
pushl
pop
popl
mov
jmp
add
add
pop
xchg
mov
xor
pushf
jmp
add
pop
add
jmp
xor
xor
xor
pop
div
push
mov
push
pushf
jmp
mov
add
sub
add
add
push
mov
jmp
push
jmp
mov
add
sub
xchg
pop
mov
mov
push
jmp
pop
push
jmp
mov
jmp
push
mov
mov
sub
pop
add
pop
push
mov
jmp
xor
mov
mov
jmp
mov
push
mov
add
pop
sub
jmp
mov
push
mov
mov
push
mov
mov
pop
mov
add
push
mov
jmp
mov
jmp
add
push
pushl
pushl
jmp
pushl
jmp
mov
add
mov
jmp
sub
pushl
jmp
sub
sub
mov
pop
subl
sub
addl
pop
jmp
push
mov
jmp
mov
add
pushl
pop
push
push
jmp
mov
jmp
add
sub
mov
add
add
push
pushl
pop
popl
mov
or
je
pushl
pushl
pushl
mov
add
jmp
pop
dec
or
jmp
mov
jmp
mov
jmp
add
push
push
push
pop
xor
mov
mov
jmp
pop
jmp
mov
add
xor
mov
sub
mov
mov
jmp
pop
push
mov
inc
mov
jmp
push
mov
xor
pop
shl
add
add
pop
pop
sub
jmp
push
mov
jmp
shl
sub
jmp
shl
and
jmp
mov
jmp
mov
add
pushl
pop
jmp
add
dec
xor
sub
pop
sub
add
add
sub
add
add
add
jmp
sub
mov
jmp
xor
add
add
sub
mov
jmp
push
jmp
sub
pop
add
pop
xchg
jmp
add
xchg
jmp
not
add
jmp
mov
xor
pop
xor
push
push
jmp
mov
push
mov
mov
jmp
push
mov
sub
pop
push
push
pop
inc
add
shr
add
sub
push
mov
jmp
mov
jmp
push
jmp
push
push
jmp
pop
popl
pop
push
push
pop
add
push
mov
sub
jmp
mov
push
mov
add
push
push
pop
add
pop
push
pushl
pop
popl
jmp
push
pop
jmp
sub
xchg
pop
mov
mov
push
jmp
sub
jmp
pop
mov
add
sub
mov
mov
jmp
push
mov
addl
pop
push
mov
push
mov
push
mov
add
add
xchg
jmp
mov
mov
not
jmp
mov
mov
sub
or
add
not
add
add
sub
push
jmp
mov
push
mov
add
jmp
sub
jmp
push
mov
add
add
pop
sub
sub
pop
jmp
sub
pop
jmp
not
jmp
addl
pop
subl
jmp
add
pop
sub
subl
push
push
mov
jmp
mov
xor
push
mov
shl
xor
jmp
sub
mov
push
subl
pop
jmp
mov
jmp
add
jmp
sub
and
jmp
mov
add
jmp
add
xchg
mov
push
mov
jmp
pop
popl
pop
mov
push
mov
push
mov
mov
pop
add
pop
jmp
sub
sub
xor
sub
pop
jmp
pop
shl
add
shl
shr
sub
sub
jmp
sub
mov
jmp
sub
sub
jmp
sub
push
mov
shl
jmp
mov
add
push
mov
push
push
pop
push
push
push
jmp
xchg
not
xchg
sub
xor
and
push
jmp
push
push
mov
push
push
mov
or
push
sub
pop
add
push
mov
mov
pop
pop
add
mov
jmp
sub
mov
push
mov
mov
jmp
push
mov
push
mov
add
mov
jmp
push
pop
push
mov
mov
jmp
mov
add
shl
shr
jmp
add
push
mov
jmp
pop
pop
add
push
jmp
xor
inc
or
sub
sub
pop
jmp
not
xor
xor
pop
jmp
add
mov
mov
add
mov
pop
and
pop
shr
xor
xor
xor
xor
jmp
or
mov
jmp
pop
mov
push
mov
addl
pop
push
mov
add
jmp
mov
jmp
add
add
push
jmp
pop
sub
push
mov
sub
jmp
pop
add
sub
mov
mov
add
pop
pop
jmp
xor
mov
jmp
and
jmp
sub
push
pop
jmp
mov
sub
inc
shl
jmp
xchg
mov
add
push
mov
jmp
add
add
add
sub
sub
pop
add
jmp
subl
pop
jmp
lods
jmp
mov
push
mov
add
mov
jmp
add
push
mov
sub
jmp
mov
neg
xor
add
pop
sub
jmp
xchg
pop
jmp
mov
push
jmp
add
push
mov
add
jmp
add
sub
sub
mov
jmp
sub
mov
mov
inc
push
notl
jmp
mov
mov
add
jmp
add
add
sub
sub
pop
pop
jmp
shr
cmp
je
push
jmp
pop
add
jmp
sub
sub
mov
mov
inc
xor
and
jmp
add
push
push
mov
and
jmp
add
jmp
push
jmp
push
jmp
xchg
pop
mov
jmp
popw
jmp
inc
push
mov
push
mov
mov
jmp
sub
mov
jmp
push
push
mov
mov
mov
pop
inc
dec
jmp
dec
or
jmp
or
pushf
jmp
mov
add
add
push
mov
pushl
pushl
jmp
pushl
pushl
pop
add
push
jmp
sub
jmp
add
xor
add
add
push
mov
push
jmp
mov
not
xor
sub
jmp
add
or
jmp
sub
push
mov
sub
sub
add
pushl
pop
add
sub
jmp
push
mov
jmp
push
mov
mov
pop
shl
xor
jmp
push
jmp
mov
jmp
mov
mov
jmp
mov
jmp
xor
xor
xor
mov
mov
jmp
sub
mov
jmp
inc
push
mov
jmp
pop
push
mov
add
push
mov
jmp
sub
pop
add
mov
jmp
add
or
jmp
addl
pop
jmp
push
mov
add
mov
add
xchg
mov
sub
mov
mov
jmp
sub
not
neg
add
jmp
mov
add
pop
pop
pushl
pop
add
sub
add
add
mov
add
add
sub
pushw
mov
jmp
xor
xor
xor
jmp
mov
xor
push
jmp
sub
jmp
pop
add
or
pushl
pop
jmp
mov
add
push
jmp
add
push
mov
add
jmp
pop
add
sub
jmp
push
jmp
sub
mov
mov
add
push
mov
add
jmp
sub
sub
pop
sub
sub
jmp
add
push
jmp
push
jmp
add
add
xor
xor
xor
jmp
pop
mov
add
addl
jmp
push
mov
add
pop
jmp
mov
not
xor
sub
pop
push
mov
add
jmp
mov
jmp
xor
mov
pop
sub
mov
push
mov
jmp
pop
sub
jmp
xchg
mov
or
shl
sub
mov
mov
jmp
pop
push
mov
xor
mov
add
jmp
pushl
mov
jmp
mov
add
pop
push
jmp
pop
jmp
mov
jmp
popl
addl
pushl
pop
jmp
not
dec
jmp
xchg
mov
mov
jmp
mov
mov
push
mov
push
mov
jmp
sub
add
pop
xchg
mov
mov
jmp
mov
add
and
mov
add
push
mov
jmp
addl
pop
jmp
push
mov
or
dec
sub
sub
pop
jmp
push
addl
pop
sub
pop
jmp
pop
xchg
pop
jmp
pop
sub
mov
mov
add
jmp
xor
jmp
pop
jmp
popl
mov
jmp
add
push
mov
jmp
pop
mov
jmp
push
pop
add
mov
pop
jmp
and
and
or
add
add
mov
add
add
jmp
push
mov
mov
add
pop
jmp
add
jmp
push
push
mov
add
add
pushl
mov
add
add
xor
xor
xor
mov
mov
push
mov
mov
push
push
jmp
add
jmp
shr
jmp
xchg
pop
sub
mov
jmp
pushl
pop
jmp
pop
sub
xor
xor
xor
pop
mov
push
mov
mov
sub
pop
push
jmp
mov
push
mov
jmp
add
sub
pop
add
xchg
pop
popl
push
jmp
add
sub
xchg
jmp
push
mov
push
jmp
add
add
add
sub
mov
jmp
mov
mov
add
pop
mov
add
jmp
add
popl
jmp
xor
add
sub
add
add
add
sub
mov
push
jmp
mov
or
pop
sub
sub
mov
pop
mov
pop
add
add
jmp
push
pop
inc
dec
xor
xor
push
mov
mov
mov
jmp
push
mov
xor
inc
jmp
jmp
mov
push
push
pushl
pop
jmp
push
jmp
xor
push
mov
and
pop
jmp
xor
jmp
xchg
jmp
add
sub
sub
jmp
add
jmp
sub
jmp
add
jmp
xor
add
add
pop
sub
sub
pushl
pop
add
sub
sub
jmp
shl
push
mov
push
jmp
push
pushl
mov
add
jmp
mov
add
and
mov
add
push
mov
push
push
mov
sub
mov
mov
sub
pop
addl
sub
jmp
mov
add
jmp
sub
push
mov
or
or
shr
jmp
mov
pushl
pop
add
xor
and
or
sub
add
jmp
add
pop
add
jmp
push
mov
sub
mov
addl
pop
push
mov
add
pop
push
mov
sub
add
add
mov
push
push
pop
push
mov
neg
xor
jmp
xchg
pop
jmp
mov
jmp
mov
jmp
inc
neg
sub
xor
mov
add
sub
mov
jmp
mov
add
jmp
mov
add
jmp
popl
pop
add
push
mov
add
jmp
sub
pop
add
mov
add
jmp
mov
add
push
jmp
xor
pop
sub
sub
add
jmp
xor
xor
jmp
add
push
push
jmp
add
push
jmp
add
jmp
add
jmp
xchg
mov
jmp
push
mov
jmp
sub
push
mov
add
jmp
add
xchg
pop
add
sub
add
jmp
push
sub
jmp
xor
add
xor
pop
xor
pushl
pop
add
push
mov
or
sub
add
jmp
not
xchg
jmp
add
push
mov
add
pop
xchg
mov
push
jmp
add
add
jmp
pop
push
push
push
jmp
push
push
push
jmp
neg
xor
jmp
add
jmp
pop
jmp
add
xchg
pop
xor
add
mov
add
jmp
pop
add
mov
jmp
sub
jmp
pushl
pop
add
mov
add
jmp
mov
sub
pop
sub
mov
mov
add
pop
jmp
not
push
push
mov
xor
mov
pop
or
pop
jmp
mov
jmp
add
xchg
pop
push
mov
jmp
sub
jmp
add
jmp
push
mov
sub
pop
add
mov
push
mov
add
add
jmp
mov
add
push
push
pop
add
add
xchg
pop
push
mov
add
mov
add
push
push
mov
jmp
sub
mov
pop
sub
sub
jmp
dec
xchg
push
jmp
sub
add
add
sub
mov
push
jmp
sub
push
mov
sub
pop
jmp
shl
add
or
pop
neg
xor
sub
pop
xchg
not
xchg
jmp
mov
push
pop
add
sub
push
mov
pushl
jmp
pushl
jmp
and
pop
sub
sub
pop
jmp
sub
add
add
neg
inc
add
sub
pop
sub
pop
sub
mov
mov
add
pop
jmp
push
jmp
push
mov
sub
jmp
add
xor
jmp
sub
pop
xor
sub
add
push
mov
jmp
mov
inc
shr
not
and
jmp
push
jmp
push
mov
push
mov
sub
mov
mov
add
jmp
add
xor
xor
xor
pop
div
jmp
pop
jmp
push
push
push
pop
sub
or
or
push
mov
add
pop
mov
pop
subl
sub
addl
pop
add
addl
push
mov
jmp
push
mov
push
mov
inc
xor
jmp
mov
sub
mov
push
mov
mov
pop
mov
pushl
mov
add
push
mov
push
jmp
push
jmp
neg
jmp
add
push
mov
add
pop
xchg
mov
decb
pushf
jmp
push
mov
sub
and
shr
add
sub
sub
add
jmp
add
pop
mov
add
jmp
push
mov
addl
mov
add
push
jmp
push
pop
jmp
sub
add
add
sub
mov
sub
jmp
sub
dec
add
xor
jmp
sub
push
mov
mov
add
add
add
or
push
mov
jmp
sub
mov
push
pushl
mov
add
add
and
pushl
pushl
pop
push
push
pop
add
push
mov
push
push
mov
shl
push
mov
add
jmp
pop
xchg
mov
and
pushf
jmp
push
jmp
pop
push
jmp
pushl
pop
push
push
pop
jmp
movzbw
push
push
mov
add
sub
xchg
mov
mov
push
mov
jmp
sub
mov
push
jmp
add
push
mov
sub
pop
jmp
mov
sub
mov
addl
jmp
pop
jmp
add
mov
add
xor
xor
jmp
sub
jmp
jmp
pop
add
sub
xchg
jmp
add
pop
push
jmp
and
mov
push
mov
mov
push
push
jmp
sub
add
add
mov
pop
push
mov
push
mov
add
jmp
add
add
sub
mov
add
add
xchg
mov
addl
add
subl
addl
push
mov
add
pop
jmp
mov
and
jmp
mov
push
jmp
push
notl
pop
sub
xor
pop
sub
jmp
mov
add
and
mov
add
shr
jmp
push
mov
push
mov
add
sub
xchg
pop
mov
jmp
add
jmp
add
add
add
jmp
push
mov
add
add
xchg
pop
xor
jmp
add
jmp
add
xchg
mov
mov
sub
mov
jmp
add
add
jmp
add
mov
pop
shl
and
sub
jmp
negl
pushf
jmp
mov
jmp
mov
add
pop
mov
pop
add
jmp
add
add
jmp
push
pop
add
jmp
add
push
mov
shr
xor
jmp
shl
and
dec
xor
sub
pop
add
jmp
sub
sub
jmp
add
xchg
mov
jmp
mov
not
add
jmp
sub
jmp
add
xor
sub
mov
mov
jmp
mov
add
add
sub
mov
pushl
jmp
sub
add
jmp
addl
pop
jmp
pop
jmp
add
popl
pop
sub
push
pushl
pop
popl
mov
mov
push
pushl
mov
jmp
mov
sub
not
not
push
jmp
mov
jmp
pop
push
mov
jmp
pushl
pushl
jmp
mov
not
jmp
mov
push
push
mov
mov
not
jmp
mov
jmp
mov
jmp
mov
jmp
push
jmp
add
jmp
sub
add
pushl
pop
add
jmp
push
mov
add
sub
push
jmp
add
jmp
sub
xchg
mov
mov
sub
mov
push
mov
add
pop
pop
push
jmp
xor
pushl
pop
push
jmp
mov
jmp
pop
pop
push
mov
sub
mov
mov
neg
jmp
push
popl
push
mov
add
pop
pushl
pop
jmp
sub
mov
sub
mov
push
push
jmp
pushl
pushl
pop
push
push
pop
add
push
push
push
pop
not
xor
mov
pop
and
not
push
jmp
mov
jmp
pushl
pushl
pushl
pop
push
mov
add
add
jmp
pushl
jmp
xor
add
jmp
xor
mov
pop
or
mov
add
not
inc
jmp
mov
add
jmp
mov
add
add
xor
pop
xor
push
jmp
xor
add
pop
push
mov
sub
pop
xchg
mov
mov
push
mov
add
addl
add
subl
pop
mov
add
add
add
sub
mov
pushl
pop
popl
mov
shll
pushf
jmp
mov
push
mov
shl
jmp
mov
add
pop
sub
push
mov
jmp
pop
pushl
pop
push
mov
push
mov
not
jmp
push
mov
dec
shl
shl
jmp
mov
dec
sub
sub
jmp
add
sub
shr
jmp
mov
xor
pop
dec
shr
sub
add
sub
sub
pop
sub
not
jmp
lods
jmp
popl
jmp
sub
mov
push
pop
jmp
mov
push
mov
push
mov
add
pop
jmp
pushl
jmp
push
pop
pop
add
pop
jmp
and
neg
xor
add
pop
xchg
not
xchg
jmp
mov
add
shr
push
mov
push
mov
jmp
sub
mov
push
jmp
push
mov
sub
jmp
add
jmp
lods
push
mov
inc
and
shr
shl
shl
sub
add
pop
jmp
push
mov
and
pop
shr
push
push
pop
add
sub
xchg
mov
mov
mov
sub
add
not
shr
shl
sub
add
pop
push
mov
not
add
not
neg
shl
add
sub
jmp
sub
jmp
add
xor
sub
add
add
mov
jmp
add
jmp
add
xor
pop
mov
pushl
pop
jmp
pushl
popf
pop
rclb
pushf
jmp
sub
mov
jmp
add
neg
xor
sub
pop
jmp
popl
mov
shr
xor
jmp
mov
jmp
mov
add
push
push
pop
push
push
mov
mov
mov
add
sub
add
add
jmp
add
jmp
mov
mov
push
mov
push
pop
add
sub
mov
push
jmp
pop
pop
pop
push
mov
add
jmp
push
mov
add
neg
shr
not
push
jmp
mov
add
jmp
pushl
pop
jmp
pop
jmp
mov
xor
add
pop
xchg
mov
push
mov
add
add
xchg
pop
pushw
jmp
sub
jmp
pop
add
pop
add
jmp
sub
jmp
mov
xor
and
jmp
mov
push
mov
jmp
mov
jmp
popl
mov
mov
jmp
mov
jmp
pop
jmp
mov
pop
jmp
sub
mov
add
push
mov
xor
pop
add
pushl
pop
add
add
jmp
pushl
pushl
pop
jmp
push
mov
mov
jmp
mov
jmp
pop
test
pushf
jmp
xor
xor
xor
jmp
shl
jmp
xor
jmp
and
sub
push
mov
mov
pop
pop
add
mov
jmp
mov
push
mov
push
mov
neg
xor
add
pop
add
xchg
pop
push
mov
jmp
pushl
pop
add
pushl
pop
sub
mov
push
pop
add
push
mov
add
pop
jmp
add
sub
jmp
dec
add
xor
jmp
add
mov
add
add
xchg
pop
push
mov
add
sub
mov
push
mov
push
xorl
pop
xor
pop
jmp
mov
jmp
push
mov
push
jmp
pop
jmp
pop
sub
sub
mov
jmp
add
mov
add
add
push
mov
mov
pop
mov
push
mov
jmp
sub
dec
xor
mov
pop
jmp
push
mov
addl
popl
jmp
mov
mov
push
mov
not
shl
push
mov
jmp
push
mov
jmp
mov
sub
mov
jmp
not
inc
sub
mov
mov
jmp
pop
sub
add
mov
push
mov
jmp
push
mov
sub
mov
pop
jmp
sub
mov
push
push
mov
add
or
jmp
jmp
mov
push
mov
push
jmp
mov
mov
sub
pop
xchg
pop
mov
push
push
mov
mov
pop
jmp
add
add
jmp
pop
push
push
mov
jmp
add
sub
jmp
pop
jmp
sub
jmp
add
sub
jmp
pop
push
mov
mov
add
add
pop
sub
add
jmp
pushl
jmp
xchg
pop
add
jmp
dec
neg
xor
add
mov
pop
not
add
jmp
inc
xor
sub
pop
jmp
push
mov
pushl
pushl
mov
add
push
jmp
add
mov
pop
sub
mov
add
sub
mov
push
jmp
not
xor
add
mov
pop
sub
pop
mov
pop
jmp
pop
add
push
push
jmp
popl
pop
pushl
mov
add
push
mov
jmp
mov
pushl
jmp
xor
pop
sub
mov
push
mov
add
inc
shl
sub
jmp
push
mov
mov
shr
push
sub
jmp
mov
add
jmp
mov
push
mov
mov
jmp
mov
add
pop
xor
xor
xor
mov
jmp
add
jmp
mov
mov
inc
sub
xor
sub
mov
mov
sub
add
add
pop
add
sub
pop
add
sub
jmp
add
pop
add
xchg
mov
push
pushl
mov
push
mov
jmp
pop
push
mov
dec
sub
add
pop
sub
push
mov
mov
sub
mov
jmp
mov
add
sub
pop
xchg
mov
mov
sub
mov
jmp
push
mov
add
pop
add
jmp
pop
xor
xor
xor
mov
mov
push
push
push
popl
addl
mov
add
push
push
jmp
mov
neg
xor
jmp
mov
shr
xor
add
pop
sub
mov
add
push
mov
push
mov
or
mov
add
sub
mov
mov
add
jmp
mov
add
add
jmp
push
mov
jmp
add
mov
add
push
mov
add
jmp
and
add
add
pop
mov
mov
jmp
pop
shl
jmp
add
jmp
add
sub
add
pop
push
push
mov
mov
pop
push
mov
sub
mov
add
add
add
pop
xor
xor
xor
jmp
push
mov
mov
mov
pop
pop
jmp
mov
add
pop
add
xor
jmp
pop
jmp
push
mov
push
mov
sub
jmp
mov
push
mov
add
add
xchg
pop
jmp
add
pop
jmp
push
mov
add
push
mov
push
push
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
jmp
pop
jmp
add
and
mov
add
xchg
push
mov
not
mov
pop
xchg
sub
jmp
pop
mov
pop
dec
dec
not
jmp
mov
push
mov
inc
dec
push
push
jmp
xor
jmp
pop
push
jmp
mov
pop
jmp
mov
sub
pop
pushl
pop
add
jmp
mov
sub
pop
jmp
push
jmp
movzbw
pushw
jmp
push
mov
jmp
mov
pop
add
jmp
mov
not
and
and
push
mov
mov
xor
jmp
xor
xor
jmp
sub
add
add
pop
push
mov
add
jmp
pushl
pop
add
jmp
xor
xor
mov
rorb
pushf
jmp
sub
jmp
mov
neg
shr
add
jmp
mov
mov
mov
pop
mov
add
sub
mov
push
jmp
sub
mov
jmp
pop
mov
push
mov
dec
xor
mov
mov
add
add
jmp
add
pushl
mov
add
push
push
mov
addl
pop
add
push
mov
mov
add
jmp
mov
add
sub
mov
jmp
xor
jmp
or
jmp
mov
xor
dec
push
push
jmp
add
push
mov
jmp
add
push
mov
sub
jmp
mov
mov
add
sub
add
add
mov
add
xor
pop
pushl
pop
add
push
mov
push
jmp
add
dec
add
add
mov
add
jmp
sub
mov
push
jmp
sub
add
jmp
pushl
pop
push
push
mov
add
sub
xchg
pop
mov
addl
pop
push
push
mov
mov
pop
sub
sub
add
add
push
mov
push
mov
sub
sub
neg
add
and
jmp
pop
sub
jmp
add
shr
dec
jmp
jmp
add
sub
add
mov
push
push
mov
add
add
jmp
pop
pop
add
add
push
mov
or
sub
shr
sub
add
jmp
not
push
mov
add
jmp
sub
pop
or
shl
or
jmp
push
sub
mov
addl
mov
add
jmp
or
sub
add
pop
pop
xchg
jmp
mov
sub
sub
sub
pop
xor
xor
pop
sub
jmp
push
mov
push
mov
add
push
mov
sub
jmp
xchg
jmp
mov
pushw
jmp
add
jmp
mov
add
jmp
push
mov
push
mov
dec
jmp
mov
xor
pop
jmp
pop
jmp
inc
sub
jmp
sub
mov
mov
push
jmp
add
add
sub
mov
mov
jmp
mov
jmp
mov
jmp
sub
jmp
pushw
jmp
mov
mov
jmp
add
and
pushl
pop
sub
mov
push
jmp
pushl
jmp
pop
mov
add
jmp
mov
jmp
mov
pop
shl
xor
shl
or
add
jmp
xor
jmp
not
xchg
push
jmp
mov
mov
jmp
mov
mov
and
sub
add
pop
push
mov
add
pop
push
pushl
pop
popl
mov
push
push
pushl
pop
jmp
mov
add
push
mov
jmp
add
sub
mov
push
jmp
push
mov
sub
pop
add
pop
sub
sub
sub
pop
xor
pushw
jmp
shl
push
jmp
pop
mov
mov
push
push
pop
add
add
jmp
and
push
mov
jmp
pop
add
sub
mov
jmp
push
mov
jmp
pop
jmp
mov
mov
add
add
sub
mov
push
mov
add
jmp
pushl
mov
push
jmp
xchg
pop
sub
pop
xchg
mov
jmp
sub
add
jmp
not
sub
add
add
push
mov
xor
shl
dec
shr
xor
jmp
pop
add
xchg
jmp
mov
mov
add
add
xchg
pop
jmp
pop
push
mov
jmp
xor
shr
dec
neg
xor
sub
mov
add
mov
add
jmp
sub
xchg
pop
jmp
add
sub
pop
shr
inc
sub
xor
mov
add
neg
neg
push
mov
jmp
push
jmp
mov
xor
and
jmp
add
xchg
jmp
mov
xorl
pushl
jmp
pop
add
add
sub
pop
push
jmp
mov
push
mov
push
mov
jmp
pop
mov
jmp
pop
push
mov
mov
add
pop
xor
xor
xor
pop
xor
pushl
mov
add
add
push
push
pop
push
jmp
add
pop
add
push
mov
sub
pop
pushl
pop
jmp
pop
xchg
pop
popl
pop
mov
popl
jmp
xor
pop
mov
push
pop
add
sub
push
mov
push
jmp
xchg
pop
mov
push
mov
push
pop
mov
add
add
add
add
sub
jmp
add
jmp
add
jmp
add
add
pop
shr
jmp
sub
jmp
mov
push
mov
push
mov
jmp
xchg
mov
push
mov
jmp
add
pop
sub
sub
add
sub
pop
add
jmp
add
jmp
add
push
jmp
xor
xor
jmp
or
je
pushl
push
mov
jmp
add
jmp
shr
or
neg
add
add
pop
push
mov
xor
jmp
mov
push
mov
push
pop
add
push
mov
jmp
mov
jmp
push
jmp
add
xchg
pop
push
sub
mov
jmp
pop
mov
add
add
push
push
pop
add
jmp
push
mov
add
sub
xchg
pop
mov
mov
neg
not
push
mov
xor
pop
mov
mov
add
push
incl
jmp
push
jmp
add
popl
jmp
push
mov
jmp
pop
xchg
mov
push
mov
push
mov
xor
push
push
mov
push
mov
jmp
pop
jmp
cmpl
je
push
mov
shl
sub
xor
shl
sub
sub
add
push
push
pop
shr
add
push
mov
jmp
lods
push
mov
add
mov
add
sub
pushw
mov
jmp
or
inc
push
push
mov
jmp
add
add
xchg
pop
and
pushl
pop
jmp
mov
push
push
push
mov
mov
shr
add
mov
pop
mov
jmp
mov
add
sub
mov
mov
add
push
mov
mov
sub
pop
jmp
push
jmp
pop
xor
xor
xor
mov
sarb
pushf
jmp
pop
sub
sub
pop
jmp
mov
push
mov
push
mov
mov
inc
push
mov
add
jmp
push
push
mov
addl
mov
add
push
mov
jmp
lods
push
push
mov
jmp
mov
add
push
mov
add
pop
xor
xor
xor
pop
push
mov
shr
and
sub
sub
mov
mov
dec
not
add
add
shr
jmp
mov
sub
pop
sub
add
push
mov
inc
push
mov
xor
pop
add
sub
pop
jmp
pop
mov
mov
push
jmp
inc
push
mov
xor
jmp
push
mov
add
pushl
mov
add
push
jmp
add
add
add
sub
sub
push
mov
mov
sub
pushl
pop
push
jmp
push
push
pop
add
push
pop
mov
add
shr
dec
neg
sub
mov
mov
shr
jmp
xchg
mov
jmp
mov
sub
mov
addl
jmp
mov
add
jmp
add
push
jmp
sub
add
add
add
jmp
add
add
sub
add
pop
push
jmp
push
mov
mov
push
mov
or
jmp
pop
sub
xor
xor
jmp
pop
add
jmp
add
jmp
add
jmp
mov
push
mov
jmp
push
mov
pushl
pop
jmp
pushl
pushl
mov
push
push
pop
push
mov
push
jmp
not
xchg
pop
push
jmp
mov
push
mov
jmp
mov
mov
jmp
mov
jmp
mov
push
mov
add
pop
xor
neg
jmp
push
mov
xor
pop
sub
add
add
pop
push
mov
push
mov
jmp
add
xchg
pop
or
je
pushl
jmp
sub
add
push
mov
inc
jmp
push
mov
mov
add
pop
jmp
add
popl
mov
push
jmp
mov
push
mov
add
sub
sub
jmp
pop
popl
pop
jmp
mov
mov
pop
sub
pop
xor
xor
xor
pop
mov
jmp
mov
mov
pop
mov
jmp
push
mov
jmp
sub
add
jmp
sub
xchg
pop
jmp
add
add
pop
jmp
mov
add
xchg
pop
mov
jmp
pop
add
push
mov
and
neg
dec
shr
and
add
add
push
mov
sub
mov
jmp
xor
jmp
add
push
push
push
popl
push
mov
add
pop
pushl
pop
push
mov
add
jmp
mov
add
add
add
sub
sub
sub
jmp
sub
pop
push
mov
not
shr
jmp
inc
xor
push
mov
sub
jmp
mov
pop
jmp
xor
pop
or
pop
neg
jmp
mov
push
mov
add
sub
xchg
pop
mov
mov
push
mov
push
mov
shr
inc
shl
add
and
pop
xor
inc
push
mov
mov
jmp
mov
push
mov
inc
inc
jmp
sub
add
push
sub
mov
mov
neg
sub
xchg
add
jmp
pop
push
push
mov
mov
jmp
mov
jmp
mov
shr
push
mov
sub
pop
jmp
pop
or
push
mov
jmp
mov
add
pop
sub
add
mov
add
xor
xor
jmp
pushl
pop
add
add
add
mov
jmp
mov
not
push
incl
jmp
push
jmp
xor
push
mov
notl
pushl
jmp
add
xchg
pop
push
mov
and
jmp
movswl
push
mov
jmp
sub
add
jmp
pop
dec
dec
xor
add
pop
sub
jmp
mov
jmp
pop
add
sub
sub
jmp
mov
inc
jmp
push
mov
dec
push
jmp
pop
push
push
push
pop
not
not
xor
mov
pop
push
mov
mov
and
not
and
jmp
push
mov
mov
mov
add
sub
mov
mov
sub
sub
pop
and
jmp
mov
add
jmp
xor
add
pop
sub
jmp
add
sub
pop
xchg
jmp
push
push
pop
jmp
xor
xor
xor
mov
mul
push
mov
push
pushf
jmp
mov
mov
add
pop
add
sub
sub
push
jmp
mov
pop
jmp
add
push
mov
sub
dec
dec
not
or
push
jmp
mov
jmp
add
jmp
push
jmp
sub
pop
sub
sub
mov
mov
neg
inc
or
xor
add
add
add
sub
mov
mov
jmp
add
jmp
mov
jmp
push
mov
push
pop
inc
push
jmp
push
mov
inc
not
push
mov
shl
push
mov
or
pop
sub
and
jmp
xor
mov
push
mov
sub
mov
mov
mov
pop
shl
inc
shr
push
mov
not
mov
pop
sub
mov
jmp
add
add
jmp
subl
add
addl
subl
pushl
jmp
pushl
mov
jmp
xorl
pop
xor
mov
jmp
decl
pop
and
shr
push
mov
xor
xor
jmp
mov
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
mov
pop
jmp
push
mov
jmp
xor
pop
neg
dec
sub
jmp
shrl
pushf
jmp
add
jmp
sub
pop
sub
push
mov
add
pop
jmp
pop
sub
mov
push
mov
mov
jmp
pop
or
inc
push
mov
jmp
push
mov
mov
pop
pop
add
pop
xchg
pop
idiv
push
mov
jmp
sub
jmp
push
mov
add
pop
jmp
add
pop
add
add
jmp
push
pop
pop
not
xor
jmp
mov
add
sub
mov
mov
push
mov
sub
add
pop
xor
xor
push
mov
jmp
xchg
jmp
add
not
add
xor
jmp
sub
pushl
pop
sub
mov
mov
add
push
mov
add
pop
xchg
pop
jmp
push
pushl
pop
popl
pop
mov
pop
and
mov
jmp
not
sub
jmp
xor
add
pop
mov
add
push
jmp
mov
jmp
mov
add
and
pushl
mov
jmp
mov
push
push
pop
sub
jmp
mov
mov
xor
pop
sub
mov
mov
add
sub
xchg
pop
mov
push
mov
push
mov
or
jmp
pushl
popf
pop
rclw
pushf
jmp
push
mov
dec
xor
jmp
sub
add
mov
add
sub
add
sub
sub
mov
add
add
pop
push
jmp
add
neg
not
sub
add
pop
sub
xchg
pop
mov
push
mov
push
mov
add
add
xchg
pop
push
mov
jmp
xchg
jmp
pushl
pop
add
xchg
mov
jmp
mov
push
push
jmp
push
mov
add
add
xchg
jmp
pop
jmp
pop
pop
xchg
jmp
mov
xor
pop
add
jmp
mov
mov
pop
pop
subl
jmp
mov
jmp
xor
jmp
add
xchg
mov
push
mov
mov
jmp
pop
xor
pop
push
mov
jmp
push
jmp
add
add
jmp
popl
jmp
pushl
jmp
add
xor
add
add
xor
mov
pop
jmp
xchg
not
xchg
add
sub
pop
xor
movzbl
cmp
je
pushl
push
push
pop
add
jmp
mov
mov
add
push
mov
not
xor
shl
jmp
pop
mov
push
mov
mov
mov
sub
jmp
push
mov
add
jmp
sub
mov
push
jmp
mov
add
jmp
add
xor
add
pop
jmp
mov
xor
mov
add
push
jmp
add
jmp
mov
push
push
jmp
sub
xchg
mov
mov
jmp
mov
mov
sub
sub
sub
add
add
add
add
pop
xor
jmp
pop
push
mov
sub
mov
jmp
lods
push
push
pushl
jmp
push
mov
jmp
xor
jmp
pop
sub
sub
add
pop
jmp
mov
jmp
add
mov
jmp
mov
add
xchg
pop
sub
mov
mov
jmp
add
jmp
pop
push
jmp
add
sub
add
mov
jmp
mov
mov
push
notb
pop
dec
or
shl
push
xchg
not
jmp
sub
add
jmp
mov
push
mov
xchg
not
xchg
pop
shr
xchg
not
xchg
sub
not
add
add
jmp
mov
pushl
pushl
pop
add
popl
pop
push
push
mov
mov
pop
push
push
mov
jmp
dec
push
mov
jmp
xchg
mov
jmp
add
add
xchg
mov
push
mov
sub
push
sub
mov
add
and
jmp
add
add
xchg
pop
jmp
add
xor
pop
add
pop
add
xor
xor
xor
pop
sub
jmp
add
sub
mov
jmp
add
mov
push
mov
add
add
xchg
mov
push
mov
jmp
add
push
mov
mov
pop
pop
and
sub
push
push
mov
mov
mov
add
mov
add
jmp
mov
push
mov
mov
sub
pop
push
mov
mov
shl
xor
jmp
mov
mov
pop
xor
xor
sub
sub
add
jmp
or
jmp
xchg
pop
jmp
push
jmp
xor
add
xor
jmp
mov
jmp
mov
push
mov
push
push
pop
add
add
xchg
pop
inc
add
mov
pushl
mov
jmp
addl
mov
add
push
jmp
mov
push
pop
push
mov
add
sub
xchg
pop
mov
mov
jmp
shl
jmp
add
sub
mov
mov
add
mov
mov
add
jmp
add
push
mov
and
neg
jmp
pushl
pop
add
and
jmp
or
push
jmp
pop
sub
shl
push
mov
xor
pop
push
mov
jmp
add
add
push
pushl
mov
add
popl
pop
pushl
pop
add
push
sub
mov
push
pop
push
mov
xchg
push
notl
pop
jmp
and
pushl
pop
push
mov
jmp
mov
add
pop
xor
xor
xor
mov
jmp
xor
jmp
or
shl
push
mov
push
pop
not
neg
push
push
mov
xor
mov
pop
jmp
pop
add
pop
sub
mov
jmp
add
jmp
pop
sub
sub
jmp
sub
pop
jmp
pop
xor
sub
add
add
pop
push
push
mov
jmp
add
jmp
pop
and
not
inc
jmp
not
push
mov
sub
jmp
sub
jmp
add
sub
jmp
pushl
pushl
jmp
add
add
push
push
pop
mov
pop
jmp
mov
jmp
add
jmp
mov
mov
push
mov
jmp
pushl
mov
push
jmp
push
mov
add
jmp
sub
mov
push
pop
push
jmp
pop
add
jmp
shl
jmp
mov
add
popl
jmp
pop
jmp
pop
mov
add
xor
popw
jmp
mov
push
mov
push
push
jmp
mov
push
push
mov
mov
jmp
mov
pop
add
pop
add
xchg
pop
add
push
mov
shr
and
push
mov
jmp
pop
jmp
pop
add
push
pushl
pop
popl
jmp
addl
sub
subl
push
mov
mov
sub
mov
push
mov
add
add
xchg
pop
jmp
pop
push
jmp
add
jmp
mov
pop
mov
push
sub
mov
addl
pop
jmp
popl
pop
imul
push
mov
push
pop
push
push
jmp
not
not
sub
shl
xor
xor
pop
push
mov
and
jmp
mov
jmp
push
mov
add
sub
xchg
jmp
mov
sub
mov
add
push
mov
push
pop
jmp
push
jmp
mov
pop
pushl
pop
add
addl
add
subl
pushl
mov
add
add
jmp
pop
push
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
push
mov
add
add
xchg
pop
push
mov
add
inc
push
mov
neg
neg
add
add
pop
sub
add
add
jmp
add
push
mov
mov
add
push
mov
jmp
pop
add
sub
sub
jmp
sub
push
mov
add
jmp
mov
push
pushf
jmp
push
push
mov
jmp
sub
sub
add
add
jmp
push
mov
mov
pop
sub
inc
push
mov
jmp
push
mov
push
mov
add
add
jmp
sub
mov
push
mov
jmp
shr
sub
mov
jmp
add
jmp
not
xor
add
jmp
mov
add
jmp
mov
push
jmp
push
mov
mov
jmp
add
xchg
jmp
add
pop
sub
sub
xor
pop
jmp
mov
jmp
mov
add
jmp
mov
push
pop
push
sub
mov
jmp
mov
add
add
jmp
pop
add
pop
xor
xor
xor
mov
jmp
mov
add
add
xchg
mov
push
jmp
mov
jmp
mov
push
mov
mov
jmp
mov
add
mov
add
sub
pop
add
add
add
push
mov
sub
pop
sub
mov
mov
push
mov
push
push
mov
add
sub
jmp
lods
push
mov
xor
jmp
pop
add
pop
push
pushl
pop
popl
mov
pushl
pop
push
mov
jmp
mov
add
sub
pop
push
mov
sub
mov
mov
jmp
not
xor
neg
push
jmp
jmp
push
mov
pushl
pushl
jmp
xor
pop
jmp
mov
and
xor
dec
sub
mov
pop
and
pop
add
shl
add
mov
pop
push
mov
jmp
mov
jmp
mov
pop
jmp
mov
push
mov
add
jmp
sub
jmp
addw
popw
addw
jmp
pushl
mov
jmp
mov
add
push
mov
sub
push
mov
add
add
sub
pop
xor
jmp
pop
xor
jmp
pop
mov
mov
add
mov
add
add
pop
add
jmp
push
mov
and
mov
jmp
mov
jmp
pop
pop
add
mov
add
sub
pop
add
jmp
mov
jmp
mov
add
add
push
pushl
jmp
push
mov
push
jmp
push
mov
mov
pop
jmp
push
mov
jmp
add
push
mov
add
sub
add
sub
sub
add
sub
jmp
sub
add
jmp
sub
sub
jmp
neg
jmp
mov
sub
jmp
shr
inc
sub
xor
add
pop
xor
jmp
and
jmp
pop
sub
jmp
pop
jmp
not
xchg
shl
push
mov
shr
shr
sub
xor
pop
add
pop
add
pop
sub
push
mov
push
pop
and
push
push
mov
mov
jmp
sub
sub
mov
jmp
add
pop
push
mov
sub
and
shl
xor
sub
pop
xchg
mov
push
popl
push
push
mov
jmp
mov
mov
jmp
sub
mov
jmp
add
push
pop
mov
push
mov
add
jmp
mov
push
jmp
mov
mov
pop
pop
push
push
mov
mov
mov
add
not
push
mov
mov
mov
mov
add
pop
jmp
mov
jmp
add
add
jmp
mov
add
pushl
pop
jmp
add
sub
xchg
pop
jmp
add
xor
jmp
push
jmp
add
jmp
mov
jmp
not
shr
add
sub
sub
jmp
not
xchg
push
push
push
jmp
mov
add
not
jmp
pushl
mov
add
push
mov
push
mov
sub
add
add
push
mov
add
sub
pop
add
pop
add
xchg
pop
sub
mov
mov
jmp
add
sub
xchg
pop
jmp
notl
jmp
pushl
pop
add
pushl
pop
add
xchg
mov
div
push
mov
push
jmp
mov
add
xor
shr
sub
sub
mov
push
mov
add
add
jmp
sub
and
xor
sub
mov
pop
dec
inc
push
mov
jmp
jmp
push
jmp
mov
push
mov
dec
and
add
sub
pop
shr
push
sub
mov
jmp
mov
mov
add
jmp
xor
xor
jmp
pop
push
mov
shr
or
or
sub
add
add
sub
pop
sub
xchg
mov
jmp
xchg
pop
jmp
push
jmp
neg
sub
jmp
pushl
mov
add
push
jmp
add
jmp
add
push
jmp
pop
push
mov
add
jmp
pop
add
mov
jmp
push
pop
add
mov
pop
not
sub
jmp
mov
pop
not
jmp
xchg
jmp
sub
jmp
mov
add
add
push
push
mov
xor
mov
pop
dec
sub
sub
jmp
add
pop
sub
jmp
pop
push
mov
add
add
sub
jmp
add
push
jmp
pop
xchg
pop
push
mov
sub
jmp
pop
add
jmp
add
sub
pop
push
mov
mov
sub
pop
add
sub
add
add
sub
push
mov
add
add
jmp
add
or
push
mov
mov
inc
neg
dec
sub
and
pop
not
add
xor
xor
jmp
sub
sub
pop
add
shr
inc
push
jmp
push
mov
shl
xor
xor
push
jmp
add
xor
xor
xor
mov
mov
push
mov
push
mov
sub
jmp
pop
inc
xor
add
jmp
mov
sub
jmp
mov
push
mov
add
add
push
jmp
pop
mov
add
add
sub
sub
sub
pop
jmp
push
mov
xor
pop
xor
add
add
sub
jmp
mov
pop
pop
push
push
mov
push
jmp
mov
jmp
add
jmp
not
xchg
sub
shl
shl
push
mov
sub
sub
add
jmp
pop
add
push
mov
xor
add
jmp
push
jmp
push
mov
jmp
mov
jmp
mov
jmp
xchg
inc
xor
xor
jmp
pop
add
sub
mov
pop
and
jmp
xor
mov
mov
add
add
inc
inc
shr
push
push
pop
xor
pop
add
mov
push
mov
add
add
xor
jmp
push
pop
and
not
sub
mov
jmp
add
push
mov
jmp
sub
pop
sub
mov
push
mov
push
mov
or
pop
xor
xchg
jmp
not
xchg
neg
xchg
sub
jmp
mov
add
shr
shr
jmp
push
pushl
mov
add
jmp
shr
sub
add
pop
push
jmp
mov
jmp
jmp
or
sub
sub
pop
pop
dec
push
mov
sub
mov
mov
mov
sub
jmp
pop
push
mov
pushl
mov
add
jmp
add
sub
xor
pushw
mov
mov
jmp
sub
push
mov
xor
sub
jmp
add
mov
pop
sub
pop
jmp
push
jmp
xchg
mov
mov
push
addl
mov
push
push
pop
add
jmp
mov
push
jmp
push
jmp
and
xor
add
jmp
add
jmp
mov
and
push
mov
shr
shr
jmp
pop
or
push
jmp
pop
jmp
dec
jmp
mov
xor
shr
jmp
sub
neg
neg
xor
jmp
add
push
jmp
jmp
add
push
mov
push
jmp
sub
jmp
mov
xor
pop
add
jmp
add
sub
jmp
mov
add
mov
jmp
mov
add
mov
jmp
push
mov
neg
dec
push
push
push
pop
add
jmp
push
sub
pop
jmp
xor
mov
mov
push
mov
add
sub
jmp
or
sub
jmp
xor
sub
pop
xchg
pop
mov
jmp
mov
mov
and
jmp
mov
push
mov
push
mov
or
pop
not
jmp
mov
pop
shl
add
push
push
mov
add
sub
xchg
jmp
or
shl
sub
xor
pop
jmp
add
add
jmp
xor
dec
jmp
dec
jmp
sub
pop
add
jmp
pop
push
jmp
push
push
pop
push
jmp
mov
add
pop
jmp
neg
or
add
jmp
sub
sub
pop
jmp
add
not
jmp
mov
mov
xor
shl
jmp
pop
jmp
mov
pop
mov
jmp
not
push
mov
add
jmp
push
mov
mov
sub
add
add
pop
jmp
push
mov
sub
or
pop
jmp
xchg
pop
mov
mov
jmp
mov
jmp
xor
sub
mov
add
pop
push
push
jmp
add
xor
add
mov
add
push
mov
add
add
sub
jmp
shr
jmp
mov
mov
sub
mov
addl
pop
add
add
push
pushl
pushl
pop
push
push
jmp
sub
push
mov
sub
sub
pop
push
popl
pushl
jmp
sub
mov
add
and
xor
not
neg
push
mov
xor
mov
add
add
sub
pop
add
mov
add
pop
sub
push
jmp
add
push
push
mov
mov
neg
add
mov
pop
add
mov
push
push
jmp
pop
xchg
mov
push
mov
mov
xor
xor
xor
jmp
pop
add
pop
sub
add
add
sub
add
mov
push
push
pop
add
jmp
xor
mov
jmp
mov
mov
add
jmp
not
sub
jmp
pushl
pushl
pop
add
popl
mov
jmp
sub
sub
jmp
mov
jmp
mov
push
mov
jmp
pop
push
mov
push
mov
push
jmp
xor
jmp
add
xchg
mov
roll
pushf
jmp
mov
add
push
mov
add
pop
xchg
pop
push
push
jmp
mov
addl
mov
add
push
mov
mov
add
pop
push
jmp
add
jmp
pop
push
jmp
mov
shr
jmp
add
add
jmp
push
mov
neg
jmp
add
pop
xchg
jmp
sub
push
mov
mov
push
mov
add
pop
jmp
add
add
jmp
pop
sub
mov
mov
push
mov
sub
add
add
jmp
sub
mov
sub
mov
push
pop
inc
sub
mov
push
mov
shl
and
shr
xor
mov
pop
jmp
add
add
xchg
mov
add
sub
sub
mov
jmp
pop
add
push
mov
add
sub
xchg
pop
jmp
xchg
add
sub
sub
push
mov
shl
add
jmp
mov
jmp
mov
push
mov
shr
jmp
shr
neg
add
add
add
sub
jmp
mov
shr
xor
jmp
or
add
and
jmp
mov
mov
push
mov
jmp
sub
mov
mov
push
mov
sub
add
sub
sub
pop
add
jmp
xor
xor
pop
jmp
mov
jmp
pop
pop
push
mov
add
sub
sub
mov
add
add
add
sub
add
push
mov
jmp
push
jmp
notl
jmp
pop
jmp
add
sub
xchg
jmp
inc
jmp
mov
push
mov
push
mov
addl
jmp
mov
push
mov
jmp
xchg
mov
jmp
push
push
jmp
push
mov
mov
pop
pop
jmp
add
add
xchg
jmp
sub
jmp
push
mov
mov
pop
push
jmp
mov
mov
add
mov
add
jmp
xor
xor
add
xor
jmp
mov
push
mov
and
pushl
pop
add
shr
jmp
pop
push
push
mov
add
jmp
sub
xor
mov
push
mov
add
add
xchg
jmp
mov
add
jmp
add
pop
sub
mov
pop
add
jmp
sub
sub
pop
shl
xor
xor
add
sub
push
jmp
sub
mov
mov
jmp
add
add
sub
pop
jmp
pop
push
push
pop
jmp
sub
pop
xchg
pop
mov
mov
jmp
mov
pushl
pop
push
mov
push
mov
jmp
push
mov
push
jmp
mov
shr
xor
sub
add
add
pop
add
jmp
mov
shl
or
add
neg
dec
add
mov
pop
jmp
add
add
pop
xchg
mov
shlb
pushf
jmp
add
jmp
sub
pop
sub
add
jmp
mov
shl
jmp
push
mov
add
sub
jmp
xor
push
subl
pop
add
jmp
push
mov
jmp
mov
push
jmp
pop
xchg
pop
or
je
push
mov
push
pop
add
sub
push
pushl
pop
popl
jmp
xor
pop
dec
sub
mov
mov
jmp
push
mov
jmp
pop
movzbl
lea
jmp
pushl
jmp
xchg
pop
xor
xor
xor
mov
push
jmp
mov
mov
or
pop
jmp
push
mov
jmp
push
jmp
push
jmp
pop
add
xchg
pop
btr
pushf
jmp
add
xchg
pop
add
xor
push
pop
pushl
pop
sub
jmp
pop
sub
pop
sub
pop
sub
push
mov
add
jmp
mov
pop
xor
sub
add
add
sub
push
push
mov
push
pop
sub
xor
mov
pop
jmp
dec
add
push
jmp
shl
push
mov
not
shr
inc
xor
xor
xor
add
jmp
push
sub
pop
xor
add
mov
push
mov
add
add
xchg
jmp
add
sub
mov
mov
add
add
xor
xor
xor
mov
push
push
pop
add
jmp
mov
inc
add
jmp
add
subl
add
push
mov
add
pop
mov
push
mov
add
add
xchg
pop
pop
add
add
xor
jmp
pop
xchg
mov
push
mov
jmp
sub
add
jmp
pop
shl
xchg
neg
xchg
sub
sub
jmp
pop
xchg
pop
mov
jmp
lods
push
push
mov
add
add
sub
mov
mov
add
pop
sub
push
mov
xor
pop
add
add
sub
jmp
push
jmp
xchg
pop
sub
pop
add
sub
sub
push
jmp
push
push
push
mov
not
inc
xor
jmp
xor
pop
add
pushl
jmp
not
shl
jmp
push
mov
jmp
xchg
jmp
push
push
mov
mov
pop
shr
and
jmp
mov
push
mov
add
add
add
pop
sub
xchg
mov
jmp
pushl
pop
push
jmp
sub
mov
pushl
jmp
add
push
pushl
jmp
pop
jmp
add
jmp
push
push
mov
jmp
xor
pop
add
push
jmp
not
push
jmp
shr
sub
or
mov
add
jmp
push
mov
jmp
xchg
pop
mov
mov
mov
pop
push
mov
jmp
pop
add
push
mov
mov
sub
mov
pop
push
jmp
add
pop
sub
jmp
add
add
pushl
mov
add
add
xor
xor
xor
mov
jmp
sub
pop
jmp
sub
and
sub
mov
jmp
mov
shr
sub
jmp
add
pop
sub
jmp
push
jmp
mov
sub
sub
add
pop
sub
add
pop
jmp
add
pop
push
mov
jmp
sub
addl
jmp
add
add
add
xor
xor
jmp
push
jmp
add
sub
add
sub
sub
add
jmp
add
add
xchg
pop
push
mov
jmp
pop
sub
sub
push
mov
push
mov
mov
push
push
jmp
not
inc
not
shl
xor
sub
jmp
mov
add
and
sub
inc
sub
mov
jmp
mov
push
mov
push
mov
push
mov
jmp
add
jmp
add
mov
add
jmp
add
push
mov
jmp
push
mov
add
jmp
xor
xor
xor
sub
mov
jmp
and
push
jmp
pop
xor
neg
jmp
pushl
mov
add
push
push
push
popl
sub
jmp
mov
jmp
add
add
pop
jmp
push
mov
jmp
xchg
jmp
xchg
pop
and
push
mov
neg
xor
xor
jmp
add
pop
add
push
mov
sub
pop
add
sub
push
jmp
pop
xor
neg
shr
xor
and
push
mov
add
jmp
pop
add
add
sub
push
mov
add
pop
pop
xor
xor
xor
mov
rorl
pushf
jmp
push
mov
jmp
mov
pop
jmp
push
push
mov
xor
push
mov
jmp
add
jmp
add
jmp
mov
add
pop
xchg
not
xchg
xor
xor
xor
push
pushl
pop
popl
pushl
mov
push
mov
jmp
pop
sub
mov
add
xchg
mov
mov
mov
push
mov
add
sub
add
and
pop
push
push
pop
sub
add
sub
push
mov
sub
mov
add
pop
push
jmp
push
mov
jmp
sub
sub
pop
mov
jmp
add
shr
sub
sub
pop
pop
jmp
push
mov
jmp
shl
add
sub
mov
pop
add
dec
not
add
jmp
mov
add
sub
pushl
pop
add
xor
push
mov
push
push
mov
and
shr
or
push
mov
jmp
add
jmp
mov
mov
jmp
mov
push
push
pop
push
jmp
add
pop
xor
xor
jmp
sub
add
pop
jmp
push
mov
jmp
mov
add
xchg
mov
mov
push
mov
add
or
sub
push
jmp
subl
jmp
mov
jmp
push
mov
mov
xor
push
push
push
mov
or
neg
add
dec
and
xor
mov
pop
xor
mov
pop
add
jmp
mov
jmp
add
push
mov
not
shl
push
mov
decl
pop
xor
sub
mov
push
mov
mov
xor
pop
add
add
sub
jmp
mov
mov
sub
jmp
addl
pushl
jmp
mov
mov
push
mov
inc
dec
jmp
add
pushl
pop
push
mov
jmp
xor
sub
pop
push
mov
jmp
add
push
mov
shl
jmp
sub
jmp
or
jmp
xor
xor
mov
pushl
pushl
jmp
sub
pop
sub
push
jmp
sub
mov
jmp
push
jmp
xchg
shl
neg
jmp
xor
sub
sub
push
push
mov
mov
sub
pop
dec
sub
or
add
jmp
xor
jmp
pop
jmp
mov
add
jmp
not
sub
shl
sub
add
pushl
jmp
push
mov
jmp
push
jmp
add
push
jmp
pop
jmp
add
add
xchg
pop
add
xchg
mov
mov
push
push
pop
add
push
jmp
mov
pop
add
pop
sub
jmp
sub
mov
mov
push
push
jmp
mov
mov
pop
sub
pop
xor
pop
xor
or
pop
add
jmp
pop
add
push
jmp
mov
push
mov
push
mov
xor
pop
add
add
pop
sub
jmp
add
add
sub
pop
sub
jmp
pop
mov
push
push
push
mov
jmp
sub
mov
push
push
pop
sub
mov
mov
add
jmp
add
jmp
sub
mov
mov
jmp
pop
xchg
pop
mov
xchg
not
xchg
jmp
push
mov
jmp
shl
push
mov
neg
shr
dec
add
xor
jmp
pushl
popf
pop
rcrw
pushf
jmp
or
pop
shl
jmp
push
mov
add
push
mov
sub
xor
add
pop
xchg
pop
movzbw
push
push
mov
jmp
push
mov
push
pop
add
jmp
mov
push
mov
add
pop
add
sub
mov
mov
push
mov
push
pop
add
pop
sub
jmp
mov
add
or
add
add
jmp
neg
inc
or
add
push
mov
shr
not
shl
add
or
sub
add
pop
push
jmp
or
xchg
jmp
push
push
mov
mov
xor
pop
add
pop
jmp
add
pop
add
add
sub
sub
jmp
xor
add
mov
add
add
and
pop
jmp
add
add
jmp
sub
pop
add
add
jmp
sub
jmp
mov
jmp
mov
add
jmp
mov
add
mov
pop
add
pop
add
jmp
pushl
jmp
mov
jmp
sub
mov
add
sub
jmp
mov
pop
push
jmp
add
jmp
pushl
pop
jmp
push
mov
add
add
jmp
xor
pop
dec
neg
xor
jmp
add
xchg
mov
push
mov
pushl
pop
popl
mov
or
pushf
jmp
sub
mov
jmp
add
push
jmp
push
push
jmp
push
mov
push
mov
mov
pop
mov
add
mov
push
mov
add
add
xchg
pop
shl
add
xor
shr
push
mov
add
add
add
mov
add
xor
pop
jmp
push
mov
or
pushl
pop
add
xchg
inc
xchg
or
sub
xor
sub
jmp
push
mov
jmp
sub
sub
add
pushl
pop
add
add
add
sub
jmp
pushl
pop
add
push
mov
push
mov
add
jmp
mov
pushl
mov
push
mov
add
add
push
jmp
push
jmp
add
jmp
push
mov
push
mov
push
jmp
add
push
pop
pop
sub
dec
shl
jmp
push
jmp
push
mov
add
jmp
mov
push
jmp
mov
jmp
pop
pop
jmp
mov
push
mov
add
jmp
mov
sub
pop
jmp
pop
mov
pop
sub
push
jmp
pop
mov
add
push
mov
sub
pop
sub
add
push
mov
add
mov
add
push
mov
neg
push
jmp
add
add
xchg
pop
jmp
inc
push
mov
xor
pop
jmp
pop
add
jmp
add
jmp
mov
sub
sub
add
mov
push
mov
add
add
jmp
push
push
mov
jmp
push
sub
mov
mov
mov
pushl
pop
add
jmp
mov
push
mov
mov
sub
jmp
mov
pop
jmp
push
jmp
xor
sub
add
jmp
addl
sub
push
push
mov
mov
jmp
pop
add
pushf
jmp
add
jmp
pop
popl
mov
popl
jmp
push
mov
mov
pop
push
mov
mov
jmp
shl
push
mov
mov
and
jmp
push
mov
add
jmp
sub
pop
jmp
xor
add
pop
add
jmp
push
pop
add
add
sub
mov
jmp
push
jmp
add
mov
pop
jmp
push
mov
mov
jmp
push
push
pop
add
add
xchg
pop
add
xor
jmp
decl
pop
jmp
pop
popl
pop
jmp
pop
popl
pop
sarl
pushf
jmp
mov
sub
pop
subl
add
addl
jmp
mov
push
mov
add
and
and
inc
jmp
pop
xor
pop
neg
push
mov
add
mov
add
sub
sub
add
mov
jmp
push
mov
jmp
sub
pop
push
push
mov
push
mov
push
mov
push
push
mov
mov
pop
mov
jmp
add
jmp
push
push
xorl
pop
xor
mov
jmp
pop
push
mov
mov
add
push
mov
mov
add
add
sub
pop
xchg
mov
push
push
jmp
push
mov
push
mov
sub
and
inc
xor
xor
pop
or
jmp
pop
pop
jmp
jmp
dec
add
add
mov
pop
add
sub
mov
push
mov
add
jmp
add
jmp
mov
jmp
add
jmp
xor
push
mov
sub
jmp
push
push
push
jmp
mov
jmp
mov
push
jmp
mov
jmp
xor
pop
xor
xor
xor
mov
mov
jmp
add
pushl
pop
jmp
mov
xor
not
jmp
pushl
mov
jmp
pop
jmp
add
jmp
push
jmp
xor
xor
pop
push
mov
sub
mov
jmp
add
sub
add
push
mov
not
add
add
pop
sub
jmp
xchg
pop
popl
jmp
pushl
pop
add
push
jmp
shr
xor
sub
pop
mov
jmp
mov
jmp
mov
shl
neg
xor
add
jmp
add
shr
push
mov
jmp
push
mov
jmp
sub
add
add
mov
add
jmp
pushl
mov
push
mov
jmp
add
shr
sub
mov
pop
pushl
pop
push
jmp
jmp
pop
push
mov
add
add
sub
add
add
jmp
sub
pop
add
jmp
mov
pop
jmp
sub
mov
push
push
jmp
mov
jmp
push
jmp
lods
push
push
push
mov
shl
jmp
and
push
push
mov
jmp
push
mov
push
push
jmp
mov
add
push
push
push
pop
shr
inc
xor
jmp
mov
add
and
pop
shr
xor
xchg
jmp
add
add
push
mov
or
pop
or
push
mov
and
pop
not
push
mov
mov
shl
shr
jmp
xchg
jmp
add
sub
jmp
sub
pushw
mov
mov
jmp
and
and
jmp
push
jmp
sub
xchg
pop
mov
mov
jmp
push
jmp
sub
push
mov
sub
jmp
pop
push
mov
xor
add
jmp
xor
mov
add
sub
add
add
sub
jmp
mov
push
mov
add
push
mov
mov
sub
pop
xchg
mov
mov
pushl
pushl
mov
add
add
add
mov
push
mov
jmp
sub
pushl
mov
add
push
mov
jmp
pushl
jmp
mov
mov
shr
jmp
inc
jmp
mov
jmp
mov
mov
sub
pop
add
pop
push
mov
add
pop
xchg
mov
popl
mov
jmp
mov
add
jmp
add
pop
shl
xor
add
add
sub
pop
add
jmp
add
pop
add
jmp
addl
popl
jmp
mov
jmp
mov
mov
push
jmp
shl
shl
jmp
add
mov
add
jmp
xor
xor
xchg
jmp
and
or
add
shl
jmp
mov
xor
pop
sub
jmp
add
pop
push
pushl
jmp
add
add
push
mov
sub
pop
pushl
mov
add
push
push
pop
jmp
sub
mov
mov
push
mov
sub
pop
inc
not
jmp
mov
imul
push
pushf
jmp
xchg
xchg
jmp
push
mov
neg
jmp
or
or
xor
sub
mov
add
jmp
add
pushl
pushl
jmp
mov
push
mov
mov
xor
pop
sub
sub
add
jmp
xor
mov
add
sub
sub
push
mov
xor
add
pop
jmp
shr
push
mov
jmp
sub
and
sub
jmp
sub
or
jmp
sub
pop
pop
jmp
pop
not
xchg
push
mov
sub
add
pop
push
mov
push
mov
jmp
pop
add
add
pop
push
push
pop
push
mov
inc
jmp
add
sub
mov
jmp
pop
and
pop
shr
jmp
xor
pushl
pop
jmp
xor
pop
jmp
add
jmp
mov
push
pop
jmp
push
mov
push
push
jmp
pushl
popf
pop
adc
pushf
jmp
pop
mov
push
mov
push
xorl
pop
xor
pop
jmp
push
mov
mov
sub
pop
jmp
and
neg
jmp
pop
pop
mov
xor
pushl
pop
push
mov
add
push
mov
add
pop
jmp
mov
push
pop
sub
jmp
pop
push
push
push
pop
add
sub
xchg
mov
mov
sub
mov
mov
mov
pop
and
sub
push
push
xorl
pop
xor
mov
jmp
mov
shr
and
jmp
neg
inc
xor
sub
sub
add
pop
add
push
mov
add
pop
mov
add
xchg
jmp
push
mov
inc
shl
jmp
add
xchg
mov
sub
mov
push
mov
add
sub
jmp
push
mov
push
mov
add
and
pop
add
jmp
mov
jmp
dec
inc
add
dec
sub
add
jmp
push
mov
add
jmp
pop
xor
add
add
mov
add
add
add
sub
jmp
add
pop
jmp
pop
push
jmp
pop
xor
xor
xor
mov
mov
pushl
jmp
add
add
mov
pop
add
pop
jmp
pop
xor
jmp
push
push
jmp
pop
jmp
add
add
jmp
mov
xor
pop
shl
jmp
push
push
mov
jmp
push
mov
push
mov
push
mov
jmp
xor
pop
or
je
push
mov
push
jmp
push
mov
add
pop
jmp
add
add
xor
xor
xor
pop
mul
push
push
mov
mov
add
sub
xchg
pop
sub
mov
addl
jmp
pop
mov
pop
sub
add
pop
xchg
pop
jmp
sub
jmp
mov
pop
mov
sub
add
add
mov
push
mov
add
add
jmp
mov
sub
pop
and
pushl
mov
add
add
shr
xor
push
mov
push
mov
push
jmp
add
jmp
addl
pop
push
mov
and
push
notl
mov
add
not
push
mov
add
sub
jmp
push
mov
shr
xor
jmp
xor
push
mov
add
sub
sub
jmp
mov
add
sub
sub
mov
jmp
xchg
jmp
pop
jmp
add
mov
jmp
mov
xchg
jmp
push
mov
mov
xor
pop
add
or
sub
mov
jmp
add
push
mov
push
push
push
pop
jmp
pop
add
jmp
add
pop
add
jmp
mov
mov
sub
mov
jmp
shl
push
mov
or
dec
xor
jmp
pop
or
jmp
mov
push
mov
push
mov
jmp
and
push
jmp
push
jmp
pop
mov
jmp
pushl
pushl
pop
add
push
push
jmp
add
jmp
mov
add
pop
sub
mov
add
mov
jmp
addl
pushl
pop
add
push
mov
push
mov
sub
pop
jmp
dec
jmp
mov
inc
push
mov
not
xor
shl
push
jmp
add
push
mov
add
pop
xor
add
pop
push
addl
popl
jmp
pop
neg
jmp
xor
xor
xor
pop
mov
push
push
pop
push
mov
mov
and
xor
push
mov
xor
and
pop
inc
inc
add
add
pop
sub
xchg
mov
push
jmp
shr
push
mov
sub
push
mov
add
pop
or
jmp
subb
sub
addb
mov
add
xor
push
mov
shl
shr
add
add
pop
add
jmp
xor
add
add
pop
push
mov
mov
add
sub
xchg
pop
mov
mov
add
jmp
shr
sub
jmp
mov
add
push
push
push
jmp
and
pop
jmp
mov
sub
add
add
pop
push
mov
add
jmp
mov
push
mov
add
add
xchg
pop
jmp
popl
mov
push
popl
jmp
add
sub
jmp
xchg
pop
jmp
push
push
jmp
sub
push
jmp
push
mov
add
pop
pop
push
jmp
xchg
jmp
pop
jmp
addl
pop
add
sub
xchg
pop
mov
mov
jmp
xor
push
mov
jmp
sub
jmp
pushl
pushl
pop
jmp
sub
pop
jmp
pop
add
sub
mov
pushl
pop
popl
mov
jmp
sub
add
pop
jmp
inc
push
sub
mov
mov
jmp
xchg
jmp
add
pop
push
mov
jmp
mov
add
push
push
mov
add
add
sub
mov
pop
sub
pop
xchg
mov
mov
jmp
xor
xor
mov
pushl
sub
mov
mov
xor
pop
pushl
pop
push
mov
push
push
mov
mov
mov
sub
jmp
pushl
pushl
pushl
jmp
mov
shr
shl
and
add
add
jmp
pop
sub
mov
push
jmp
pushl
mov
jmp
mov
mov
push
mov
jmp
sub
add
sub
sub
pop
jmp
pop
add
push
jmp
mov
pop
sub
mov
push
mov
add
add
xchg
jmp
push
jmp
mov
add
jmp
pushl
pop
popl
jmp
mov
jmp
sub
sub
sub
pushl
mov
add
add
push
mov
inc
shr
or
push
mov
push
mov
add
mov
add
jmp
sub
jmp
shl
push
jmp
pop
pop
jmp
mov
mov
add
dec
push
mov
xor
pop
add
sub
add
add
sub
jmp
pop
jmp
jmp
xor
jmp
push
mov
mov
add
pop
sub
sub
mov
add
add
add
push
jmp
pop
add
add
push
pushl
jmp
movzbw
push
pushf
jmp
xchg
pop
mov
mov
add
push
mov
push
pop
jmp
pushl
pushl
mov
add
push
mov
push
mov
addl
mov
add
push
mov
neg
push
mov
add
sub
xchg
pop
jmp
mov
mov
xor
jmp
mov
push
push
jmp
mov
jmp
sub
mov
jmp
pop
add
push
mov
jmp
push
mov
mov
add
mov
add
shl
jmp
pop
add
add
jmp
sub
xchg
pop
mov
mov
push
mov
shr
jmp
neg
jmp
shr
sub
mov
mov
or
pop
xor
xor
pop
sub
pop
jmp
pop
push
mov
add
sub
xchg
pop
mov
mov
add
add
xchg
mov
jmp
xor
add
jmp
pushl
jmp
mov
jmp
xor
mov
mov
jmp
add
mov
pop
sub
mov
jmp
push
mov
add
add
xchg
pop
jmp
sub
add
push
mov
add
pop
pop
jmp
push
mov
xor
pop
mov
pop
jmp
add
jmp
mov
pop
sub
xor
pop
push
mov
add
mov
add
neg
push
mov
push
pop
pop
not
jmp
add
push
pushl
pushl
pop
add
popl
mov
mov
jmp
push
mov
sub
jmp
mov
add
add
jmp
push
mov
shl
shr
inc
xor
add
xor
jmp
push
jmp
xchg
pop
popl
mov
push
jmp
and
jmp
add
jmp
add
mov
push
mov
add
jmp
sub
pop
add
not
add
mov
pop
add
pop
push
push
pop
jmp
pop
sub
sub
add
sub
sub
add
sub
mov
push
mov
push
mov
add
dec
not
jmp
push
mov
jmp
mov
push
jmp
pop
sub
sub
add
jmp
lods
xor
push
mov
mov
shl
jmp
dec
xor
neg
inc
jmp
pop
add
add
add
add
push
mov
sub
pop
jmp
popa
popf
ret
jmp
pop
mov
push
mov
jmp
add
pop
push
jmp
mov
mov
add
jmp
mov
jmp
mov
pop
shr
not
shr
push
mov
xor
sub
sub
pop
add
pushl
pop
add
add
xchg
jmp
xor
jmp
mov
push
jmp
add
jmp
mov
shl
add
or
add
add
add
pop
add
pop
sub
jmp
xchg
pop
jmp
push
mov
add
pop
mov
add
add
pop
jmp
add
pop
xor
xor
xor
mov
jmp
pop
jmp
pop
jmp
mov
mov
push
mov
jmp
subl
jmp
add
xor
xor
xor
pop
jmp
mov
push
mov
jmp
mov
push
mov
push
mov
mov
add
pop
add
pop
mov
jmp
pop
xchg
pop
push
popl
jmp
mov
push
mov
jmp
jmp
pop
jmp
pop
xchg
jmp
push
jmp
add
pop
push
push
jmp
push
jmp
mov
or
pop
or
jmp
mov
add
jmp
and
jmp
push
sub
mov
jmp
shr
inc
jmp
mov
add
add
add
jmp
mov
jmp
dec
add
sub
jmp
push
mov
addl
pop
push
mov
not
neg
xor
sub
sub
add
add
add
sub
push
mov
dec
jmp
mov
add
pop
inc
sub
not
sub
mov
mov
xor
pop
push
push
mov
push
mov
mov
jmp
pushl
pop
jmp
xchg
pop
mov
mov
jmp
pop
add
jmp
mov
jmp
mov
push
mov
mov
dec
xor
add
add
mov
add
add
xchg
mov
add
sub
jmp
xor
xor
pop
mov
push
jmp
mov
jmp
mov
jmp
mov
jmp
neg
not
not
add
mov
pop
jmp
sub
mov
push
mov
jmp
mov
jmp
pushl
jmp
mov
add
mov
pop
mov
jmp
mov
sub
pop
jmp
add
sub
jmp
sub
mov
pushl
pop
jmp
mov
pushl
jmp
pop
dec
jmp
push
pop
xor
not
neg
sub
add
pop
pop
sub
jmp
add
sub
mov
add
jmp
mov
jmp
push
mov
sub
jmp
mov
add
jmp
pop
mov
pop
and
add
dec
jmp
add
sub
xchg
jmp
mov
jmp
add
add
xchg
pop
jmp
pop
jmp
mov
push
jmp
mov
pop
pop
mov
xor
pushl
mov
jmp
pop
or
inc
shr
xor
add
pushl
pop
sub
mov
push
pop
add
jmp
mov
add
add
xchg
pop
push
push
mov
jmp
push
mov
jmp
xor
mov
btc
pushf
jmp
mov
add
pop
dec
jmp
pop
jmp
sub
jmp
add
jmp
xor
mov
add
jmp
add
pop
or
pop
neg
shr
xor
mov
jmp
shl
push
mov
xor
jmp
push
mov
sub
pop
xor
jmp
mov
push
mov
xor
jmp
mov
inc
not
add
and
and
push
mov
sub
jmp
mov
mov
jmp
add
or
dec
not
add
xor
pop
shl
push
mov
mov
or
neg
sub
sub
add
add
mov
push
push
pop
push
mov
not
jmp
inc
and
xor
sub
pop
dec
jmp
push
jmp
popl
jmp
push
jmp
popl
mov
jmp
or
jmp
add
jmp
pushl
jmp
add
pop
xor
pop
jmp
xor
push
jmp
add
jmp
dec
jmp
mov
push
mov
subl
add
addl
mov
add
jmp
add
pop
jmp
pop
add
push
mov
sub
jmp
xor
add
sub
pop
add
pop
add
push
jmp
inc
jmp
add
sub
add
jmp
mov
jmp
inc
add
and
add
add
sub
jmp
add
jmp
xor
shr
add
jmp
mov
pop
push
jmp
mov
mov
add
jmp
mov
jmp
add
and
neg
dec
jmp
push
pushl
jmp
push
mov
mov
shl
push
push
push
mov
add
neg
push
mov
sub
xor
pop
or
sub
mov
jmp
sub
mov
jmp
add
add
xchg
pop
push
mov
push
push
push
jmp
shr
sub
mov
mov
jmp
pop
add
sub
pushl
pop
add
jmp
push
mov
and
mov
jmp
mov
jmp
sub
xor
and
pop
neg
jmp
mov
pop
jmp
xor
add
add
sub
jmp
push
mov
xor
jmp
push
mov
sub
pop
jmp
add
pop
mov
jmp
pop
jmp
add
push
jmp
add
add
push
mov
pushl
mov
jmp
add
add
add
jmp
mov
and
mov
jmp
add
sub
sub
pop
add
pop
jmp
sub
xor
mov
add
mov
pop
xor
xor
xor
jmp
pop
jmp
push
mov
push
mov
dec
not
push
jmp
pop
jmp
or
shl
jmp
xchg
pop
mov
push
mov
add
sub
mov
pop
mov
xor
neg
and
sub
xor
pop
xor
and
jmp
mov
add
mov
add
sub
mov
push
push
jmp
add
add
sub
sub
jmp
pop
jmp
add
jmp
pushl
jmp
add
sub
jmp
pop
and
push
subb
addb
sub
subb
push
jmp
push
jmp
push
mov
shl
shl
jmp
pop
add
push
mov
sub
mov
jmp
sub
pop
and
pushl
pop
add
jmp
add
sub
sub
mov
push
push
jmp
mov
mov
push
mov
push
mov
and
or
sub
sub
push
push
mov
sub
jmp
xchg
mov
imul
push
pushf
jmp
pop
sub
pop
jmp
pop
sub
mov
pushl
jmp
mov
push
mov
add
push
mov
add
sub
pop
xchg
pop
mov
push
mov
mov
mov
add
xor
jmp
xchg
pop
jmp
mov
pushl
pop
jmp
add
sub
push
mov
add
sub
xchg
pop
jmp
add
jmp
push
jmp
pop
pop
jmp
add
push
mov
add
pop
mov
jmp
shl
or
inc
xor
mov
pop
jmp
mov
jmp
pop
jmp
add
pop
jmp
sub
xchg
pop
mov
mov
not
jmp
push
mov
push
pop
xor
dec
neg
add
xor
pop
sub
push
addl
pop
push
mov
dec
xor
jmp
xchg
pop
sub
jmp
shl
sub
sub
pop
add
pop
jmp
xor
sub
jmp
mov
jmp
not
inc
sub
add
mov
add
mov
pop
dec
sub
jmp
mov
jmp
pushl
mov
add
jmp
push
jmp
xchg
pop
mov
mov
add
dec
shl
jmp
sub
mov
add
xchg
mov
shlb
pushf
jmp
mov
push
mov
jmp
mov
add
jmp
push
mov
sub
pop
jmp
push
mov
xor
sub
sub
add
jmp
shl
shr
or
shl
xor
sub
pop
shl
or
push
mov
jmp
shl
not
jmp
add
pop
sub
jmp
push
jmp
mov
pop
push
mov
mov
add
push
mov
add
jmp
shl
jmp
sub
add
push
mov
add
pop
sub
mov
mov
jmp
push
jmp
add
xchg
pop
xor
xor
jmp
add
push
mov
mov
jmp
shl
xor
push
mov
jmp
mov
add
mov
add
mov
mov
jmp
mov
push
jmp
mov
add
jmp
pop
push
mov
add
add
xchg
pop
push
mov
add
sub
xchg
pop
mov
mov
add
pushl
pop
add
xor
jmp
push
mov
jmp
push
jmp
push
mov
jmp
add
add
jmp
and
jmp
push
mov
xor
pop
mov
pop
sub
sub
jmp
add
pop
push
jmp
sub
jmp
pop
xor
xor
xor
mov
xor
jmp
push
push
pop
jmp
push
jmp
xchg
pop
jmp
pop
push
mov
sub
pop
sub
add
sub
mov
mov
sub
pop
movzbl
pushl
jmp
mov
xor
pop
push
mov
add
pop
push
mov
xor
xor
sub
pop
sub
add
pop
add
add
jmp
sub
mov
subl
pushl
mov
push
jmp
xor
xor
xor
jmp
mov
push
push
jmp
addl
pushl
pop
jmp
pop
mov
jmp
add
push
mov
add
shr
sub
jmp
sub
add
pop
sub
mov
mov
add
add
sub
pop
sub
push
mov
add
jmp
pop
jmp
xor
add
pop
jmp
or
add
jmp
add
pop
sub
add
push
mov
mov
jmp
shr
jmp
sub
mov
add
jmp
xor
jmp
push
pushl
pop
popl
jmp
mov
sub
mov
push
jmp
add
add
xchg
mov
add
add
jmp
mov
jmp
jmp
sub
push
mov
jmp
mov
jmp
sub
mov
push
mov
add
push
mov
jmp
mov
jmp
and
pop
add
push
jmp
addl
mov
push
mov
jmp
pop
add
xor
pop
jmp
popl
mov
push
mov
push
mov
push
mov
mov
pop
jmp
push
mov
jmp
push
jmp
shr
and
xor
add
jmp
add
add
jmp
push
mov
jmp
or
add
add
pop
add
pop
push
mov
jmp
pop
mov
pop
pushl
pop
push
jmp
push
pop
add
add
xchg
mov
jmp
xor
jmp
mov
add
push
jmp
pop
jmp
popl
jmp
push
jmp
xor
xor
jmp
push
mov
jmp
pop
jmp
mov
add
add
pop
sub
pop
pop
sub
mov
mov
add
add
sub
mov
sub
jmp
xor
xor
xor
mov
bt
pushf
jmp
push
jmp
add
add
sub
pop
jmp
mov
movzbl
pushl
jmp
push
jmp
sub
mov
mov
jmp
mov
push
mov
sub
mov
jmp
mov
mov
pop
jmp
pushl
pop
push
mov
jmp
push
mov
mov
add
pop
shr
sub
mov
jmp
add
push
mov
add
mov
push
mov
add
add
xchg
mov
sub
jmp
mov
jmp
add
shr
shl
sub
jmp
sub
pop
jmp
add
jmp
xchg
jmp
mov
mov
add
mov
jmp
push
mov
pushl
pop
popl
mov
jmp
add
add
xchg
pop
push
mov
add
jmp
push
mov
mov
jmp
mov
jmp
pop
add
add
jmp
pop
add
sub
pushl
pop
add
sub
xchg
pop
mov
mov
sub
add
add
jmp
pop
jmp
mov
push
jmp
pushl
mov
sub
mov
mov
add
sub
jmp
mov
pop
xor
mov
add
add
jmp
mov
mov
push
mov
add
add
jmp
sub
mov
mov
push
mov
jmp
push
mov
pushl
jmp
add
not
xor
push
mov
jmp
add
or
xor
push
mov
mov
shl
xor
push
mov
shl
jmp
sub
xor
add
mov
add
sub
push
jmp
add
jmp
mov
push
pop
sub
mov
mov
add
mov
jmp
xor
xor
pop
add
sub
push
sub
jmp
add
or
jne
push
mov
jmp
add
pop
xor
jmp
pop
push
jmp
mov
jmp
xor
mov
bts
pushf
jmp
mov
push
jmp
mov
add
push
push
mov
jmp
pop
add
push
mov
add
pop
xchg
pop
push
jmp
add
mov
add
push
mov
mov
or
xor
add
jmp
push
pop
sub
mov
jmp
dec
sub
sub
and
pop
or
je
pushl
push
jmp
notl
pop
add
jmp
pop
jmp
sub
add
pop
movzbl
mov
jmp
mov
jmp
push
jmp
or
sub
sub
jmp
sub
mov
pop
sub
push
jmp
sub
xchg
mov
mov
mov
add
push
jmp
push
push
mov
sub
inc
neg
xor
jmp
mov
jmp
xchg
pop
mov
add
push
mov
jmp
pushl
pop
push
jmp
pushl
jmp
push
jmp
sub
mov
mov
dec
shr
sub
add
mov
mov
add
sub
sub
add
mov
add
xor
jmp
pop
jmp
push
mov
push
mov
push
mov
push
pop
xor
push
pushl
jmp
add
sub
push
mov
xor
xor
jmp
pop
add
push
jmp
mov
add
jmp
pop
add
jmp
addl
jmp
add
pop
sub
jmp
mov
push
xorl
jmp
push
jmp
mov
mov
jmp
sub
xchg
mov
mov
mov
add
push
jmp
shl
jmp
pop
mov
add
push
mov
jmp
lods
xor
push
mov
push
push
mov
jmp
push
mov
jmp
pushl
pop
add
add
jmp
sub
mov
mov
inc
xor
add
add
sub
sub
mov
push
mov
jmp
mov
mov
mov
mov
push
mov
add
jmp
pop
mov
push
mov
add
add
xchg
jmp
add
pop
sub
xchg
mov
jmp
push
push
jmp
push
mov
add
pop
xchg
mov
jmp
add
sub
push
pushl
pop
popl
mov
mov
push
jmp
shr
dec
jmp
pushl
pop
add
mov
add
push
mov
add
add
sub
jmp
push
jmp
push
push
mov
mov
xor
pop
shl
jmp
sub
jmp
sub
pushf
jmp
add
or
sub
add
jmp
mov
pop
mov
xor
mov
add
jmp
mov
jmp
add
xor
xor
xor
pop
shr
shr
push
push
push
jmp
pop
mov
mov
add
add
xchg
pop
and
pop
shr
xor
xor
xor
jmp
add
pop
mov
add
push
push
jmp
sub
sub
mov
mov
add
sub
sub
add
jmp
push
mov
add
push
mov
sub
jmp
mov
and
sub
add
sub
sub
jmp
pop
pushl
mov
add
push
mov
jmp
push
push
mov
mov
jmp
push
mov
and
pop
jmp
mov
add
sub
jmp
push
mov
jmp
pop
sub
pop
add
jmp
xor
pushl
pop
push
mov
add
push
mov
jmp
sub
add
sub
jmp
mov
add
or
push
mov
sub
jmp
add
push
push
jmp
add
xchg
jmp
pop
push
mov
or
pop
add
push
jmp
and
sub
and
push
mov
jmp
add
jmp
or
shl
add
xor
jmp
mov
mov
pop
sub
sub
shr
sub
shl
sub
mov
mov
add
mov
push
mov
push
mov
add
jmp
add
add
xor
pop
sub
mov
jmp
xor
xor
xor
mov
jmp
add
add
jmp
push
mov
mov
add
mov
add
push
jmp
pop
xor
inc
jmp
mov
jmp
add
jmp
push
mov
add
sub
jmp
mov
add
jmp
mov
jmp
mov
mov
push
push
mov
mov
pop
push
notl
pop
jmp
xor
jmp
add
add
pop
add
push
pushl
pop
popl
jmp
mov
jmp
mov
push
mov
sub
mov
mov
push
jmp
xor
add
sub
push
mov
or
and
and
sub
mov
mov
xor
mov
jmp
add
jmp
add
add
xchg
jmp
pushl
pop
push
push
jmp
mov
mov
jmp
push
mov
add
pop
add
xchg
pop
push
mov
push
jmp
addl
pop
add
push
jmp
push
mov
push
jmp
pop
add
sub
pop
xor
xor
xor
mov
jmp
mov
add
add
pop
jmp
push
pushl
mov
add
popl
jmp
add
push
jmp
push
mov
sub
pop
xchg
pop
mov
jmp
xor
jmp
push
mov
add
add
xchg
pop
push
push
pop
push
mov
jmp
mov
xor
pop
jmp
push
mov
jmp
and
sub
add
add
pushl
pop
add
jmp
mov
pop
push
mov
sub
pop
sub
sub
add
push
jmp
add
jmp
sub
jmp
xor
pop
mov
pop
and
jmp
push
mov
add
add
xchg
pop
xchg
pop
push
mov
push
mov
jmp
add
xchg
pop
add
push
mov
mov
push
mov
sub
mov
mov
shr
neg
jmp
pop
or
jmp
mov
add
jmp
add
pop
sub
xchg
jmp
push
jmp
pop
push
mov
mov
not
jmp
shl
shr
xor
add
mov
pop
sub
jmp
mov
push
mov
jmp
push
mov
push
mov
push
mov
xor
pop
mov
add
xor
push
mov
add
pop
pop
and
pop
or
jne
push
mov
jmp
pop
popl
pop
pushl
pushl
jmp
pop
mov
push
mov
jmp
add
jmp
mov
add
push
mov
push
jmp
pop
ret
jmp
mov
mov
jmp
xor
xor
xor
mov
incw
pushf
jmp
add
xor
sub
sub
add
pop
xor
xor
xor
jmp
pop
dec
jmp
add
jmp
neg
push
jmp
xor
jmp
add
add
xchg
pop
add
add
push
jmp
xor
jmp
mov
mov
add
mov
mov
add
and
mov
sub
mov
push
pop
jmp
mov
sub
mov
push
jmp
mov
pop
mov
jmp
push
mov
jmp
not
jmp
pushl
mov
add
push
mov
jmp
add
add
push
sub
push
popl
addl
pop
push
mov
add
pop
sub
mov
jmp
mov
push
push
pop
push
mov
add
jmp
sub
xchg
pop
mov
sub
mov
push
mov
sub
pop
jmp
mov
add
push
mov
jmp
push
jmp
push
mov
sub
pop
jmp
add
pop
pushl
jmp
add
jmp
mov
jmp
and
shr
sub
sub
pop
push
mov
and
pop
xor
jmp
add
xor
pop
add
push
jmp
push
jmp
sub
inc
add
add
mov
add
sub
jmp
push
mov
shl
add
mov
pop
jmp
or
jmp
push
mov
xchg
push
push
pop
pop
push
xchg
not
xchg
pop
jmp
sub
add
jmp
push
mov
push
jmp
not
inc
add
push
addl
jmp
sub
push
notb
jmp
add
add
jmp
mov
push
mov
add
jmp
add
jmp
pop
push
jmp
mov
add
push
push
jmp
sub
sub
pop
xor
xor
xor
mov
mov
pop
jmp
shr
push
jmp
xchg
pop
and
pushl
mov
jmp
mov
mov
jmp
sub
sub
add
jmp
mov
push
mov
mov
jmp
jmp
pop
xor
jmp
add
sub
xchg
pop
mov
jmp
push
mov
mov
pop
sub
push
mov
mov
pop
jmp
push
mov
add
jmp
push
notl
pop
xor
or
pop
shr
push
mov
jmp
pop
xor
jmp
inc
neg
sub
not
jmp
pop
add
add
sub
add
movzbl
pushl
pushl
pushl
mov
push
mov
mov
push
mov
neg
not
push
mov
and
pop
jmp
shl
push
mov
add
sub
xchg
pop
jmp
add
shl
and
push
push
push
pop
push
mov
sub
pop
jmp
mov
push
mov
jmp
pop
pop
add
add
sub
mov
push
mov
add
add
jmp
mov
sub
mov
mov
push
mov
jmp
mov
push
mov
sub
pop
jmp
mov
xor
pop
sub
add
pop
pop
push
jmp
push
jmp
xor
xor
xor
push
mov
xchg
push
push
mov
jmp
add
sub
pop
push
mov
jmp
push
pop
jmp
push
jmp
pushl
mov
add
popl
mov
btc
pushf
jmp
inc
dec
sub
and
neg
add
add
pop
xor
sub
pop
push
mov
jmp
mov
push
mov
sub
mov
push
push
push
pop
jmp
push
push
jmp
sub
pop
and
add
xor
pop
neg
inc
jmp
add
pop
push
push
mov
xor
xor
xor
not
xchg
shl
jmp
mov
mov
push
pushl
mov
add
push
jmp
push
jmp
shl
add
mov
pushl
jmp
add
neg
not
sub
sub
add
jmp
pop
push
mov
jmp
mov
or
sub
shr
jmp
pop
mov
mov
push
mov
add
jmp
mov
or
sub
push
pop
mov
add
jmp
add
mov
add
add
pop
add
jmp
or
pop
dec
sub
mov
jmp
xor
pop
push
mov
push
push
pop
jmp
add
sub
add
pop
sub
xchg
jmp
add
add
sub
jmp
add
push
push
mov
mov
jmp
add
pushl
jmp
pop
jmp
mov
push
jmp
add
mov
pop
add
pop
jmp
mov
push
mov
jmp
mov
sub
jmp
mov
add
sub
jmp
xor
pop
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
pushl
pop
popl
pop
mov
mov
xor
mov
jmp
push
push
mov
jmp
pop
or
jmp
pop
push
mov
add
pop
jmp
push
jmp
pushw
pop
jmp
push
mov
and
add
sub
jmp
xchg
pop
inc
sub
mov
negl
jmp
push
mov
add
pop
add
jmp
xor
add
mov
pop
not
shr
or
jmp
xor
mov
sub
jmp
mov
mov
jmp
mov
neg
mov
pop
xor
sub
sub
add
mov
jmp
add
mov
jmp
xor
shl
inc
xor
neg
sub
sub
jmp
sub
jmp
and
jmp
sub
sub
jmp
xor
jmp
add
pop
xor
xor
xor
jmp
add
jmp
push
mov
xor
pop
or
pop
push
mov
and
xor
add
add
add
sub
jmp
push
push
mov
mov
pop
jmp
or
mov
add
jmp
sub
add
jmp
push
xchg
not
xchg
pop
push
mov
mov
jmp
pop
mov
jmp
dec
and
shl
xor
sub
add
jmp
push
mov
add
jmp
sub
and
mov
jmp
push
jmp
push
mov
add
sub
mov
add
pop
push
mov
jmp
mov
jmp
sub
jmp
push
jmp
mov
add
add
xchg
pop
sub
pushf
jmp
mov
push
mov
push
push
pop
sub
mov
mov
add
pop
push
mov
jmp
push
jmp
xchg
jmp
push
push
mov
mov
sub
pop
sub
pop
addl
add
subl
push
mov
add
mov
add
addl
pop
jmp
add
add
push
pushl
mov
add
jmp
mov
add
jmp
push
mov
pushl
pushl
jmp
dec
add
jmp
pop
sub
jmp
and
pushl
pushl
pop
push
mov
jmp
push
mov
jmp
sub
mov
mov
add
jmp
sub
mov
add
sub
push
mov
inc
shr
push
mov
xor
pop
jmp
push
jmp
xchg
pop
xor
pushl
jmp
add
push
jmp
add
shl
jmp
mov
jmp
sub
jmp
add
push
push
mov
push
mov
mov
sub
sub
mov
jmp
push
push
pop
jmp
shr
or
add
mov
pop
push
mov
sub
pop
mov
mov
push
push
pop
push
jmp
lods
sub
mov
sub
mov
push
pop
jmp
mov
sub
mov
push
mov
add
push
jmp
mov
jmp
add
add
sub
pop
push
push
sub
mov
mov
mov
jmp
add
xchg
jmp
pushl
jmp
push
push
jmp
xchg
jmp
mov
push
jmp
push
mov
jmp
push
mov
add
jmp
mov
push
mov
add
push
mov
push
mov
push
jmp
sub
mov
mov
jmp
pop
pop
sub
add
add
add
pop
xor
xor
xor
mov
push
mov
mov
jmp
pop
push
mov
add
pop
push
mov
sub
pop
jmp
mov
pushl
pop
add
and
mov
push
push
pop
add
jmp
xor
mov
movzbl
jmp
pop
add
push
mov
jmp
pop
popl
pop
xor
pushl
pop
push
mov
push
mov
push
mov
add
pop
pop
push
mov
mov
jmp
shr
sub
mov
jmp
sub
add
jmp
pop
push
mov
add
pop
jmp
pop
jmp
add
xchg
pop
mov
mov
add
push
mov
jmp
pop
jmp
add
sub
add
push
jmp
xor
jmp
shl
and
inc
neg
xor
add
pop
push
jmp
add
sub
jmp
pop
jmp
add
sub
add
push
mov
inc
shr
add
add
mov
add
pushl
mov
add
pushl
pushl
pop
add
push
mov
add
jmp
popl
pop
push
mov
push
mov
jmp
push
pop
mov
jmp
pop
push
jmp
sub
xchg
pop
mov
mov
push
mov
add
not
jmp
sub
push
mov
push
sub
mov
jmp
mov
push
push
mov
addl
pop
push
jmp
pop
sub
add
pop
jmp
push
mov
mov
jmp
add
and
jmp
shr
sub
xor
mov
jmp
xchg
mov
mov
mov
jmp
sub
jmp
add
pop
jmp
mov
sub
jmp
mov
push
pushf
jmp
add
push
push
jmp
sub
mov
push
mov
jmp
push
push
mov
add
push
push
push
pop
jmp
mov
add
push
jmp
mov
mov
add
shl
not
add
shr
add
add
pop
jmp
pop
jmp
push
mov
sub
shr
sub
push
jmp
mov
sub
pop
add
pop
jmp
push
mov
jmp
sub
mov
mov
add
sub
add
add
jmp
mov
add
add
jmp
xchg
push
push
mov
push
jmp
pop
sub
add
add
push
mov
mov
xor
xor
xor
jmp
push
mov
add
sub
xchg
pop
mov
mov
dec
sub
mov
mov
push
mov
dec
add
xor
add
add
sub
pop
jmp
mov
dec
shl
jmp
mov
add
add
xchg
pop
push
mov
push
mov
mov
pop
push
mov
push
mov
mov
pop
xor
pop
push
mov
dec
not
push
mov
shl
or
jmp
mov
jmp
lods
jmp
add
add
sub
mov
mov
push
sub
pop
push
mov
sub
not
jmp
mov
jmp
sub
mov
pop
jmp
shr
add
mov
pop
add
jmp
sub
xor
not
xor
jmp
add
mov
pop
add
mov
add
jmp
mov
mov
xor
pushl
mov
add
add
xor
sub
add
push
mov
and
push
mov
add
xor
jmp
push
jmp
mov
add
pop
jmp
mov
decl
pushf
jmp
mov
xor
jmp
sub
mov
mov
and
jmp
add
push
pushl
pop
jmp
add
pop
sub
add
add
pushl
jmp
pop
xor
xor
xor
mov
pushl
mov
push
push
pop
push
jmp
mov
pushl
mov
push
mov
push
jmp
push
mov
add
push
mov
mov
sub
jmp
mov
sub
push
jmp
push
jmp
add
dec
jmp
or
push
mov
sub
jmp
pushw
jmp
not
add
jmp
mov
mov
push
jmp
push
mov
push
mov
add
pop
jmp
sub
push
popl
addl
mov
add
jmp
add
add
add
jmp
neg
push
push
mov
jmp
push
push
mov
jmp
push
mov
mov
add
pop
jmp
pop
or
shl
push
push
push
pop
add
jmp
sub
pop
add
pop
popl
jmp
inc
and
sub
xor
shr
jmp
inc
sub
shr
xor
add
mov
pop
jmp
mov
sub
mov
jmp
not
sub
and
pop
jmp
dec
add
add
jmp
pop
push
mov
mov
sub
push
mov
add
pop
add
not
push
mov
jmp
push
mov
shl
dec
neg
shl
dec
jmp
sub
mov
mov
xor
sub
add
jmp
xor
xor
xor
jmp
neg
sub
add
pop
add
sub
pop
xor
xor
xor
jmp
mov
push
push
mov
push
jmp
and
mov
push
mov
mov
add
add
xchg
pop
or
shl
push
mov
push
push
pop
jmp
incb
pushf
jmp
neg
shr
jmp
push
mov
jmp
shr
add
mov
pop
shr
push
mov
xchg
not
xchg
jmp
push
mov
add
sub
xchg
pop
mov
push
pop
add
add
add
sub
sub
mov
sub
jmp
mov
add
pop
add
add
mov
add
jmp
pushl
mov
add
push
mov
jmp
add
add
pop
jmp
xor
mov
push
mov
push
jmp
pop
sub
mov
jmp
add
sub
pop
jmp
dec
push
mov
sub
inc
jmp
add
pop
push
mov
jmp
add
add
pop
add
xchg
pop
push
push
jmp
pushl
popf
pop
sbb
pushf
jmp
pop
sub
and
pop
push
mov
sub
and
and
add
xor
mov
push
mov
mov
jmp
xor
and
sub
jmp
mov
pop
pop
sub
pop
jmp
pop
not
push
jmp
or
mov
add
jmp
pop
pop
neg
xor
xor
xor
jmp
push
mov
add
pop
shr
neg
jmp
mov
push
mov
mov
xor
mov
add
jmp
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
jmp
sub
jmp
xor
neg
jmp
sub
jmp
add
sub
xchg
pop
mov
mov
jmp
add
jmp
addl
pop
push
mov
push
mov
jmp
popl
mov
cmp
pushf
jmp
sub
jmp
xor
mov
pop
sub
add
add
jmp
xchg
pop
push
mov
jmp
pop
pop
add
or
pop
push
mov
push
mov
jmp
push
jmp
dec
add
push
mov
add
sub
add
jmp
pop
jmp
mov
add
jmp
dec
sub
push
mov
mov
jmp
sub
add
pop
sub
xchg
jmp
not
push
push
pop
pop
jmp
pop
push
mov
jmp
dec
shl
xor
jmp
pop
jmp
xor
sub
sub
add
add
jmp
mov
push
pop
push
mov
push
mov
add
pop
jmp
mov
add
add
pop
add
xchg
jmp
push
mov
jmp
mov
jmp
pop
jmp
pushl
pop
popl
pop
xor
pushf
jmp
pushl
pop
add
jmp
add
jmp
add
add
jmp
push
jmp
push
jmp
pop
xor
xor
xor
pop
movzbw
jmp
pop
shr
or
inc
jmp
mov
add
push
jmp
add
pop
push
mov
shr
sub
jmp
add
push
mov
xor
pop
mov
mov
add
add
mov
push
mov
add
sub
xchg
pop
mov
jmp
add
jmp
pop
add
mov
push
mov
add
add
jmp
push
pop
shr
jmp
mov
push
pop
push
mov
push
xchg
jmp
pushl
mov
add
jmp
pop
jmp
pushl
pop
add
xor
mov
add
sub
mov
mov
or
push
mov
sub
xor
pop
jmp
mov
add
pop
xor
xor
xor
mov
mov
push
push
mov
jmp
add
pop
sub
sub
pop
jmp
cmp
pushf
jmp
xchg
pop
mov
push
mov
add
pop
pop
add
push
mov
shl
and
shr
push
jmp
add
popl
pop
add
jmp
mov
jmp
push
pop
add
push
push
push
jmp
push
push
pop
push
mov
add
pop
sub
xchg
mov
mov
push
mov
mov
jmp
add
pop
add
jmp
xor
jmp
not
shr
jmp
sub
xchg
jmp
mov
push
mov
add
pop
sub
jmp
pop
sub
add
pop
pop
mov
add
jmp
neg
sub
or
pop
and
push
jmp
mov
push
push
push
pushl
pop
jmp
shl
jmp
mov
pop
sub
or
jmp
push
xchg
not
jmp
not
push
mov
sub
mov
add
push
mov
mov
push
mov
add
sub
xchg
pop
mov
mov
add
pop
push
mov
add
pop
add
sub
jmp
mov
add
push
mov
jmp
pop
push
jmp
pop
add
jmp
popl
jmp
pop
sub
jmp
pop
sub
add
jmp
mov
jmp
add
sub
subl
jmp
or
pop
add
sub
add
add
mov
push
mov
add
add
xor
xor
jmp
push
mov
dec
jmp
sub
add
mov
add
add
add
sub
sub
mov
add
jmp
mov
mov
mov
mov
jmp
mov
jmp
push
jmp
mov
push
mov
mov
push
mov
push
jmp
popl
pop
mov
push
mov
jmp
mov
mov
push
sub
mov
mov
jmp
push
jmp
add
mov
add
pop
add
jmp
push
mov
add
sub
mov
pop
add
pop
add
sub
pop
xor
jmp
push
push
mov
push
mov
mov
add
jmp
sub
add
sub
mov
push
jmp
mov
add
sub
xchg
pop
jmp
add
add
jmp
mov
shr
jmp
xchg
not
xchg
add
shr
add
or
pop
jmp
sub
push
mov
neg
neg
shl
shl
sub
jmp
jmp
sub
mov
add
push
push
pop
add
sub
xchg
mov
mov
push
mov
mov
add
push
jmp
mov
jmp
add
pop
push
mov
add
jmp
mov
jmp
add
jmp
mov
movsbw
push
jmp
pop
jmp
mov
jmp
mov
mov
shl
jmp
shr
not
or
and
sub
add
pop
jmp
push
mov
mov
jmp
push
jmp
push
mov
add
sub
xchg
jmp
push
mov
push
pop
add
push
mov
add
sub
xchg
pop
mov
push
jmp
mov
jmp
pushl
jmp
xchg
pop
push
mov
mov
sub
add
add
pop
push
mov
sub
mov
mov
mov
jmp
push
push
mov
shr
xor
mov
pop
and
xor
and
pop
jmp
xor
push
mov
mov
pop
pop
jmp
addl
pop
add
push
mov
sub
pop
xchg
pop
mov
push
mov
push
jmp
mov
neg
push
mov
add
pop
add
add
pop
push
mov
mov
push
mov
push
jmp
shl
and
push
push
push
pop
xor
not
jmp
push
mov
mov
push
mov
jmp
mov
and
pop
or
jmp
add
sub
pop
jmp
push
jmp
mov
mov
sub
mov
jmp
push
mov
add
pushl
jmp
inc
jmp
mov
push
push
pop
add
add
xchg
jmp
pop
xchg
mov
mov
movzbw
push
pushf
jmp
push
mov
add
pop
jmp
sub
add
add
jmp
sub
jmp
mov
add
sub
sub
jmp
push
mov
push
mov
mov
pop
jmp
pop
sub
mov
jmp
mov
jmp
add
xor
jmp
popl
jmp
push
jmp
dec
xor
sub
pop
add
add
mov
add
add
mov
add
pushl
pop
add
jmp
push
mov
push
notl
pop
and
shr
xor
sub
add
add
pop
push
mov
not
jmp
pop
add
sub
mov
add
mov
jmp
inc
sub
mov
pushl
jmp
pop
add
pop
mov
add
jmp
xchg
pop
mov
mov
add
add
jmp
push
mov
not
add
push
xchg
not
xchg
jmp
and
pushl
pushl
jmp
push
jmp
push
mov
add
sub
push
mov
neg
inc
xor
dec
sub
sub
pop
pop
push
jmp
sub
pop
xor
mov
jmp
add
jmp
mov
jmp
sub
xor
pop
push
push
push
mov
add
sub
jmp
mov
mov
pop
pop
not
add
push
jmp
mov
inc
shr
jmp
xor
xor
xor
jmp
mov
push
pushf
jmp
mov
mov
jmp
pop
jmp
mov
push
jmp
add
sub
jmp
pushl
mov
add
push
jmp
pop
add
push
mov
jmp
push
pushl
pop
popl
mov
mov
push
mov
push
mov
push
push
jmp
push
pop
add
push
mov
add
sub
xchg
pop
mov
mov
jmp
add
sub
sub
jmp
mov
xor
sub
pushl
pop
jmp
push
mov
sub
mov
pop
shr
add
sub
pop
sub
pop
jmp
mov
add
push
mov
neg
and
add
inc
xor
xor
pop
sub
mov
mov
add
pushl
pop
push
mov
jmp
mov
shr
jmp
sub
sub
pop
push
push
jmp
mov
jmp
mov
add
pop
push
mov
push
mov
sub
jmp
mov
add
popl
pop
mov
jmp
xchg
jmp
add
mov
add
push
jmp
mov
sub
jmp
sub
xchg
pop
jmp
push
jmp
sub
add
jmp
mov
add
dec
add
push
mov
jmp
mov
add
add
jmp
add
pop
xchg
jmp
add
add
pop
pop
push
push
mov
push
mov
push
mov
jmp
mov
add
and
pushl
pop
jmp
mov
mov
add
add
xchg
pop
sub
mov
mov
and
shr
sub
jmp
pop
jmp
mov
xor
pop
push
pop
pop
xor
jmp
mov
mov
jmp
mov
add
push
jmp
mov
inc
shr
jmp
pop
add
pop
add
pop
push
mov
jmp
xor
dec
add
jmp
pop
xor
pop
push
mov
add
sub
and
sub
jmp
mov
add
push
mov
sub
sub
jmp
mov
add
inc
and
jmp
sub
add
add
add
mov
add
xor
jmp
sub
sub
add
pop
push
mov
neg
add
jmp
mov
subl
add
addl
mov
add
popl
jmp
add
pop
push
mov
mov
jmp
not
xchg
add
mov
jmp
xor
xor
mov
cmp
pushf
jmp
xor
mov
add
push
mov
shl
push
jmp
xor
jmp
mov
and
xor
sub
pop
jmp
jmp
push
jmp
mov
mov
jmp
push
jmp
pop
add
sub
jmp
pop
pop
add
pop
inc
jmp
add
push
mov
add
pop
add
add
sub
mov
jmp
mov
mov
pop
pop
not
jmp
push
mov
push
pop
mov
pop
pop
jmp
and
sub
sub
pop
sub
pushl
mov
add
push
mov
mov
jmp
mov
add
pop
push
pushl
pop
popl
pop
push
mov
push
mov
push
mov
mov
mov
mov
jmp
mov
mov
add
jmp
mov
add
jmp
mov
add
sub
jmp
mov
add
add
sub
mov
pop
neg
push
jmp
pop
sub
xchg
pop
mov
push
push
pop
jmp
add
add
xchg
pop
sub
mov
push
mov
add
push
mov
mov
sub
sub
jmp
mov
push
push
pop
add
pop
or
sub
mov
pop
neg
sub
sub
pop
shl
add
shr
dec
push
push
mov
mov
mov
pop
jmp
mov
add
sub
push
mov
add
sub
jmp
pop
mov
push
push
mov
jmp
pop
sub
mov
mov
add
jmp
mov
add
jmp
mov
mov
jmp
push
mov
push
pop
push
mov
jmp
pop
sub
add
pop
add
jmp
add
jmp
push
pop
jmp
add
add
sub
jmp
add
or
pop
shr
sub
add
pop
xor
jmp
push
pop
xor
jmp
mov
xor
jmp
mov
add
add
xchg
mov
jmp
mov
push
mov
sub
mov
mov
xor
mov
jmp
pushl
pushl
pop
add
push
mov
push
pop
push
mov
jmp
push
mov
sub
mov
push
mov
add
sub
xchg
jmp
add
jmp
add
push
mov
push
mov
jmp
xchg
neg
add
add
jmp
add
sub
pop
push
mov
mov
and
pushl
mov
add
sub
mov
mov
push
mov
jmp
add
push
mov
add
add
xchg
pop
push
mov
mov
jmp
push
push
push
popl
addl
jmp
shl
xor
sub
jmp
pop
add
inc
push
mov
jmp
mov
notl
pop
jmp
push
mov
jmp
mov
add
pop
shl
shr
add
add
pop
jmp
push
mov
add
mov
pop
mov
jmp
mov
add
add
push
push
jmp
mov
jmp
pop
add
sub
xor
jmp
pop
jmp
push
jmp
add
xchg
pop
push
mov
push
jmp
sub
add
pop
add
xchg
pop
push
mov
pushl
pop
popl
mov
jmp
add
xor
jmp
pop
inc
jmp
push
mov
dec
push
mov
jmp
push
jmp
mov
addl
mov
add
push
mov
jmp
mov
jmp
xor
pop
jmp
mov
jmp
shr
sub
jmp
xor
xor
jmp
pop
mov
pop
add
sub
mov
mov
inc
push
push
mov
mov
mov
add
and
pop
neg
sub
shr
push
mov
sub
pop
jmp
push
push
jmp
add
pop
sub
push
push
mov
jmp
xor
shl
jmp
add
add
pop
jmp
sub
pop
pop
pushl
jmp
add
sub
add
jmp
push
pushf
jmp
add
xchg
mov
add
add
sub
jmp
inc
add
sub
pop
pushl
jmp
mov
jmp
xor
push
mov
push
mov
and
xor
neg
add
sub
jmp
add
push
push
jmp
pop
add
push
mov
sub
push
popl
jmp
pop
jmp
shl
add
mov
pop
jmp
pop
jmp
xor
xor
jmp
mov
xor
add
pop
add
push
jmp
pop
xor
xor
xor
mov
movzwl
push
push
jmp
sub
jmp
push
push
pop
add
push
jmp
add
jmp
push
jmp
mov
push
mov
shr
sub
push
mov
xor
and
pop
and
and
sub
mov
pop
add
add
push
mov
xor
jmp
pushl
jmp
mov
mov
add
pop
mov
add
push
mov
jmp
pop
shr
jmp
add
jmp
mov
add
pushl
pop
add
push
mov
sub
pop
pushl
pop
jmp
mov
mov
dec
jmp
mov
push
jmp
mov
push
jmp
add
jmp
pushl
pushl
jmp
add
dec
sub
push
mov
not
inc
push
mov
add
pop
shr
push
jmp
add
jmp
or
push
mov
xor
pop
jmp
push
jmp
inc
push
push
mov
not
or
push
jmp
pushl
pop
add
mov
pushl
pop
sub
mov
mov
add
jmp
add
pop
xor
add
jmp
sub
pop
pop
add
add
pop
sub
mov
mov
add
jmp
pop
jmp
xor
pop
add
sub
sub
pop
shr
pushw
mov
mov
jmp
add
pop
sub
pop
jmp
xor
pop
jmp
mov
jmp
add
or
je
pushl
pushl
pop
jmp
sub
add
add
mov
add
add
push
jmp
pop
jmp
lods
jmp
mov
jmp
add
sub
mov
jmp
mov
push
jmp
sub
mov
jmp
push
jmp
add
jmp
pop
add
push
mov
mov
xor
push
mov
xor
pop
add
jmp
xchg
pop
and
pop
or
shl
jmp
push
mov
mov
add
jmp
push
jmp
xchg
pop
push
mov
mov
shl
jmp
sub
add
pop
jmp
mov
jmp
mov
add
sub
xchg
mov
jmp
push
mov
add
jmp
add
add
pushl
jmp
add
jmp
push
mov
push
jmp
pop
push
pushl
jmp
pop
jmp
mov
mov
mov
add
jmp
push
mov
push
mov
add
pop
sub
add
add
jmp
mov
jmp
addl
pop
sub
pop
jmp
mov
addl
pushl
pop
add
push
push
mov
mov
pop
or
jmp
or
push
mov
add
pop
xor
add
jmp
add
push
jmp
xor
pop
mov
jmp
push
push
mov
jmp
xchg
pop
mov
push
mov
push
mov
jmp
mov
sub
pop
jmp
add
pop
xchg
pop
push
pushl
jmp
pop
xor
xor
jmp
notl
pop
jmp
pop
mov
push
mov
shl
sub
mov
jmp
push
mov
push
mov
shr
sub
mov
jmp
popl
mov
mov
push
pushf
jmp
add
sub
xchg
pop
mov
push
pop
jmp
sub
push
mov
jmp
pop
push
mov
push
mov
mov
sub
pop
xchg
inc
xchg
push
incl
pop
add
add
pop
sub
mov
push
push
pop
add
add
mov
pop
sub
mov
push
mov
add
add
xor
xor
jmp
pop
xchg
mov
add
jmp
sub
add
jmp
xor
mov
mov
add
add
pop
mov
jmp
add
sub
pushl
pop
push
mov
add
add
xchg
mov
xchg
mov
mov
jmp
pop
jmp
add
add
jmp
pop
popl
mov
pushl
pop
push
mov
jmp
pop
xchg
mov
shll
jmp
mov
shr
xor
and
dec
not
shl
xor
mov
pop
add
add
sub
pop
push
mov
add
pop
sub
add
add
push
jmp
sub
mov
jmp
mov
mov
or
push
mov
sub
and
pop
sub
mov
mov
xor
pop
shr
xor
xor
pop
sub
add
sub
sub
add
mov
add
jmp
add
push
mov
jmp
push
jmp
add
push
pushl
mov
push
mov
mov
add
jmp
lods
xor
sub
mov
push
push
push
mov
mov
sub
pop
mov
sub
pop
mov
sub
jmp
mov
add
jmp
inc
add
add
jmp
mov
mov
add
and
add
sub
add
jmp
mov
dec
not
add
add
mov
add
and
jmp
mov
mov
jmp
pushl
pushl
pop
add
push
mov
mov
push
mov
xor
push
mov
sub
sub
jmp
push
mov
xor
neg
jmp
pop
push
pushl
jmp
xchg
jmp
pop
popl
mov
jmp
pop
push
jmp
mov
and
push
mov
mov
xor
neg
or
push
mov
jmp
add
jmp
push
push
mov
push
mov
push
mov
add
neg
push
jmp
mov
push
pushl
pop
sub
mov
jmp
mov
sub
push
mov
neg
jmp
mov
mov
sub
sub
add
add
add
jmp
push
push
pop
addl
subl
add
addl
subl
mov
add
jmp
xchg
pop
jmp
mov
jmp
mov
xor
pop
add
add
add
sub
sub
mov
add
sub
xor
xor
xor
jmp
push
mov
or
push
mov
sub
jmp
sub
sub
push
jmp
add
pop
xchg
mov
mov
jmp
sub
push
mov
sub
sub
pop
pop
push
sub
mov
mov
mov
pop
add
sub
pop
shl
jmp
add
push
pop
pop
and
pushl
pop
push
jmp
mov
sub
jmp
sub
add
add
jmp
mov
add
jmp
mov
push
pop
jmp
push
pushl
pop
add
push
mov
and
pop
sub
add
push
mov
add
sub
sub
pop
mov
pop
xor
xor
mov
add
push
push
mov
add
pop
popl
push
mov
add
xor
dec
jmp
sub
mov
subl
pop
add
mov
add
sub
jmp
xor
jmp
mov
sub
pushl
pop
add
jmp
mov
add
pop
push
push
mov
jmp
pop
jmp
mov
mov
add
or
xor
sub
jmp
jmp
add
pop
sub
pop
jmp
xchg
pop
mov
push
jmp
jmp
lods
xor
jmp
add
push
mov
sub
neg
push
mov
and
pop
xor
add
pop
xchg
pop
sub
add
sub
mov
mov
add
add
sub
sub
shr
push
push
mov
xor
sub
not
sub
mov
pop
add
pop
sub
add
add
pop
push
mov
not
xchg
not
jmp
mov
mov
pop
pop
not
mov
jmp
mov
push
push
popl
addl
pop
push
mov
mov
shl
neg
jmp
xor
and
push
mov
add
add
sub
pop
push
mov
jmp
mov
sub
mov
push
mov
jmp
mov
jmp
xchg
xor
sub
add
add
mov
add
push
pushl
pop
popl
mov
push
push
mov
mov
pop
push
push
mov
mov
mov
push
mov
add
add
xchg
jmp
add
add
xchg
pop
push
mov
not
inc
neg
xor
sub
mov
add
sub
mov
push
push
mov
mov
sub
jmp
add
mov
add
sub
xor
xor
xor
jmp
pop
jmp
push
mov
sub
pop
push
mov
xor
pop
add
pop
jmp
mov
add
sub
jmp
mov
pop
jmp
push
mov
xchg
not
jmp
jmp
neg
and
jmp
xchg
pop
jmp
xchg
pop
mov
xorl
mov
add
jmp
push
mov
mov
add
add
xchg
pop
jmp
mov
pop
add
pop
pop
push
mov
mov
add
mov
push
jmp
mov
jmp
push
push
jmp
push
mov
or
and
xor
not
shr
xor
jmp
add
add
jmp
lods
push
push
mov
mov
add
mov
jmp
addl
add
subl
pop
subl
subl
add
addl
addl
jmp
or
sub
jmp
mov
mov
sub
add
jmp
mov
push
mov
push
jmp
mov
sub
neg
jmp
dec
jmp
add
sub
xor
xor
xor
pop
mov
jmp
sub
jmp
xor
jmp
neg
add
sub
add
add
pop
push
mov
mov
jmp
mov
jmp
add
mov
push
mov
add
push
push
mov
add
sub
mov
pop
jmp
push
mov
mov
jmp
add
jmp
add
rep
jmp
push
mov
jmp
sub
mov
add
push
push
mov
mov
xor
pop
xor
neg
shr
push
jmp
or
xor
add
pop
jmp
sub
add
jmp
or
jmp
mov
sub
pop
sub
mov
mov
add
push
mov
sub
and
jmp
push
jmp
pop
push
pushl
pop
popl
pop
add
push
mov
add
jmp
jmp
xchg
mov
xor
xor
xor
jmp
not
jmp
push
mov
add
sub
xchg
pop
jmp
mov
push
pushl
pushl
pop
add
sub
mov
jmp
add
add
jmp
sub
pop
add
mov
jmp
mov
mov
push
mov
add
pop
push
mov
add
pop
jmp
mov
push
mov
push
push
push
pop
not
jmp
add
jmp
mov
jmp
add
sub
pop
add
xchg
pop
sub
push
mov
xor
or
sub
and
sub
sub
pop
push
mov
push
jmp
mov
movzbw
jmp
pop
shr
inc
inc
add
shr
jmp
sub
xor
add
jmp
push
mov
dec
sub
jmp
push
mov
push
pop
push
push
pop
push
mov
jmp
sub
pop
push
mov
jmp
pop
jmp
push
mov
jmp
mov
add
jmp
xchg
jmp
mov
jmp
xor
xor
xor
mov
mov
jmp
not
xchg
jmp
xor
pop
movzbw
sub
mov
push
pop
push
mov
push
jmp
xchg
pop
pop
push
mov
mov
and
pushl
jmp
pop
add
jmp
add
push
mov
add
pop
pop
sub
xor
xor
xor
pop
mov
push
pop
add
push
jmp
mov
jmp
add
add
xchg
pop
sub
jmp
mov
jmp
sub
pop
mov
add
xchg
jmp
pop
push
mov
push
mov
jmp
xchg
pop
push
push
mov
mov
not
jmp
mov
mov
shr
not
sub
add
jmp
push
mov
inc
push
mov
or
add
inc
sub
jmp
dec
shl
add
push
mov
add
jmp
xor
xor
pop
jmp
push
mov
or
pop
shl
dec
jmp
pop
or
je
push
jmp
pop
add
xchg
pop
sub
sub
add
pop
push
mov
mov
sub
mov
push
jmp
add
push
jmp
mov
push
mov
jmp
mov
pop
subl
sub
addl
pop
sub
jmp
sub
push
popl
addl
jmp
xor
xor
xor
jmp
pushl
pop
push
push
mov
add
push
mov
push
mov
xor
pop
add
mov
add
add
jmp
mov
jmp
push
push
pop
shr
dec
add
xor
push
mov
mov
pop
pop
add
pop
mov
sub
mov
mov
add
add
xor
xor
xor
mov
push
mov
push
jmp
mov
jmp
xor
pop
mov
sub
mov
push
mov
add
sub
mov
pop
sub
pop
jmp
push
notl
pop
push
jmp
sub
mov
jmp
xor
sub
pop
sub
sub
push
jmp
add
add
pop
jmp
xor
pop
sub
add
push
mov
add
neg
and
jmp
popl
pop
jmp
jmp
push
push
pop
jmp
mov
add
add
jmp
push
mov
push
pushl
mov
push
mov
add
add
xchg
pop
jmp
add
add
jmp
push
mov
sub
jmp
pop
pop
push
mov
push
mov
neg
add
sub
pop
add
add
jmp
push
mov
sub
jmp
pushl
pop
add
push
jmp
sub
pop
xor
sub
pop
jmp
sub
mov
mov
shl
push
mov
sub
pop
neg
jmp
mov
push
mov
jmp
push
mov
dec
jmp
pop
popl
jmp
add
sub
pop
xor
add
pop
sub
mov
add
pop
push
mov
mov
jmp
pop
jmp
xor
xor
mov
push
mov
add
jmp
sub
pop
jmp
and
pushl
pop
add
shr
xor
push
jmp
mov
shl
inc
shl
not
jmp
add
pop
xchg
jmp
add
add
xchg
pop
jmp
push
mov
jmp
push
mov
jmp
add
add
pop
push
mov
push
pop
sub
add
add
jmp
push
pop
pop
jmp
push
mov
add
sub
xchg
pop
mov
sub
jmp
xor
xor
xor
mov
jmp
and
sub
sub
pop
pop
sub
add
add
jmp
sub
mov
pop
jmp
shr
not
jmp
mov
mov
jmp
mov
xor
pop
add
pop
add
xchg
jmp
xor
xor
xor
xor
xor
xor
jmp
mov
push
mov
jmp
mov
sub
jmp
push
jmp
sub
mov
mov
mov
jmp
pop
jmp
push
jmp
mov
push
jmp
xor
jmp
add
sub
pop
push
mov
add
pop
and
pop
add
push
mov
xor
xor
xor
not
xchg
jmp
sub
add
jmp
sub
addl
subl
jmp
pushl
pop
push
sub
push
popl
jmp
push
mov
and
pop
push
mov
push
mov
push
pop
mov
jmp
pop
jmp
sub
add
pop
add
xchg
pop
add
add
push
push
mov
jmp
pushl
pop
add
sub
mov
push
jmp
add
jmp
sub
mov
push
jmp
push
mov
sub
jmp
mov
sub
pop
xchg
mov
mov
movzbw
jmp
push
jmp
pop
mov
mov
jmp
mov
jmp
push
mov
pushl
pushl
pushl
pop
push
jmp
push
mov
neg
jmp
push
mov
sub
pop
pop
xchg
jmp
mov
mov
jmp
pop
jmp
shr
jmp
and
push
mov
dec
shl
xor
jmp
mov
push
jmp
pop
sub
mov
mov
shr
push
jmp
xor
sub
sub
push
mov
add
add
sub
jmp
imul
movzbw
push
mov
push
mov
sub
push
jmp
mov
mov
jmp
push
push
mov
add
sub
push
mov
add
jmp
mov
or
neg
not
push
jmp
pop
add
sub
add
add
pop
xchg
jmp
mov
sub
or
pop
push
jmp
shr
inc
jmp
push
mov
push
pop
add
add
jmp
xor
mov
add
add
add
push
mov
sub
mov
push
mov
neg
shr
add
mov
pop
add
sub
mov
mov
add
sub
xchg
jmp
mov
add
pop
jmp
push
mov
mov
or
jmp
push
push
mov
shl
dec
xor
mov
mov
add
push
pushl
pop
push
jmp
pop
push
jmp
mov
sub
jmp
add
add
pop
add
sub
mov
mov
shr
neg
jmp
mov
pop
add
pop
push
mov
jmp
mov
pop
dec
not
jmp
add
pop
xor
xor
xor
mov
or
jne
push
jmp
pop
push
jmp
not
add
push
jmp
add
xchg
mov
shlw
pushf
jmp
and
sub
add
pop
jmp
neg
push
mov
sub
xor
push
mov
sub
pop
jmp
or
neg
or
shr
push
mov
add
pop
add
pop
xchg
jmp
mov
push
jmp
subl
pop
pop
add
jmp
mov
push
mov
mov
shr
xor
jmp
xor
mov
pop
jmp
add
push
mov
shr
neg
push
jmp
mov
sub
pop
mov
pop
jmp
pop
add
push
pop
jmp
push
mov
add
sub
jmp
push
jmp
add
shl
jmp
add
push
jmp
lods
push
mov
jmp
push
push
mov
push
pop
neg
sub
jmp
sub
pushl
mov
jmp
add
pop
jmp
mov
shr
jmp
sub
xchg
mov
mov
mov
sub
jmp
xor
pop
jmp
xor
push
push
mov
mov
add
jmp
pop
jmp
push
push
jmp
mov
add
push
mov
add
add
jmp
add
pop
not
jmp
mov
jmp
pop
add
jmp
mov
push
mov
mov
xor
pop
jmp
mov
mov
jmp
sub
not
add
or
jmp
mov
mov
jmp
mov
jmp
sub
jmp
shr
push
jmp
add
xor
xor
pushl
jmp
pop
jmp
sub
mov
push
mov
mov
jmp
sub
add
jmp
pop
add
mov
add
xchg
pop
bts
pushf
jmp
push
pop
dec
add
mov
pop
add
shr
or
add
push
mov
and
and
shr
inc
jmp
add
mov
add
jmp
mov
push
pop
add
push
push
pop
push
jmp
xchg
mov
mov
push
pop
push
jmp
add
pop
add
pushl
jmp
mov
add
push
push
push
pop
dec
sub
jmp
pop
push
mov
add
add
xchg
pop
add
sub
push
jmp
add
jmp
push
mov
push
mov
add
pop
mov
push
mov
add
jmp
xchg
jmp
mov
add
pop
push
jmp
and
push
mov
add
add
sub
pushl
pop
add
add
mov
add
jmp
pop
shl
xor
add
pop
shl
push
jmp
pushl
jmp
add
or
pop
dec
shl
jmp
add
xor
shl
sub
add
sub
jmp
pop
add
pop
jmp
add
or
jmp
push
pushl
mov
push
mov
add
jmp
mov
add
push
mov
jmp
mov
addl
pop
add
add
xchg
pop
xchg
mov
test
pushf
jmp
mov
jmp
push
push
push
pop
add
add
xor
sub
mov
jmp
push
push
mov
addl
popl
addl
pushl
mov
add
jmp
mov
push
mov
and
xor
sub
push
mov
add
add
pop
sub
jmp
add
pop
jmp
sub
pop
sub
add
add
pushl
jmp
mov
jmp
sub
pop
push
push
mov
jmp
pop
sub
jmp
add
mov
add
mov
pop
sub
jmp
sub
add
pop
jmp
sub
jmp
mov
pop
sub
mov
jmp
mov
jmp
add
pop
sub
pop
sub
pushl
pop
add
jmp
mov
push
jmp
push
mov
pushl
mov
add
jmp
push
mov
dec
shr
neg
shr
jmp
add
add
xchg
pop
or
jmp
pop
push
pop
jmp
mov
mov
jmp
sub
add
pop
sub
add
add
pop
push
mov
add
pop
push
pushl
pop
popl
pop
push
push
mov
mov
neg
sub
xor
mov
pop
sub
sub
add
jmp
lods
xor
jmp
push
pop
pop
add
or
sub
add
pop
push
pop
pop
push
mov
jmp
mov
push
jmp
pop
push
push
mov
pushw
mov
jmp
push
mov
mov
jmp
mov
sub
pop
jmp
mov
dec
shl
jmp
add
jmp
push
mov
xor
pop
sub
mov
push
mov
add
push
push
mov
push
mov
add
dec
sub
sub
pop
mov
pop
push
mov
and
xor
shr
sub
jmp
mov
add
pop
jmp
xor
pushl
pop
push
push
mov
addl
mov
push
mov
add
jmp
xor
mov
mov
jmp
push
mov
jmp
subl
pop
add
pop
push
jmp
add
pushl
pop
push
push
mov
add
push
mov
add
pop
push
mov
sub
jmp
add
mov
push
jmp
pop
jmp
mov
sub
pop
push
push
mov
and
sub
shl
push
mov
xor
or
xor
sub
sub
jmp
xor
pop
push
mov
sub
jmp
mov
jmp
mov
inc
push
jmp
lods
push
jmp
pop
xchg
jmp
add
push
mov
sub
sub
pop
push
pushl
pop
popl
pop
mov
pushl
jmp
shl
shr
jmp
add
pop
pop
xchg
mov
sub
mov
push
mov
sub
add
push
mov
jmp
mov
add
push
mov
jmp
mov
push
mov
add
add
xchg
pop
jmp
mov
push
jmp
push
mov
jmp
mov
add
and
jmp
add
push
jmp
pop
push
mov
or
sub
sub
add
add
pop
add
xchg
pop
push
mov
push
mov
not
sub
add
mov
add
add
xchg
pop
sub
mov
jmp
push
push
jmp
push
jmp
push
mov
neg
neg
shl
jmp
pushl
mov
add
push
push
mov
addl
mov
add
push
push
jmp
mov
add
push
jmp
pop
add
jmp
xchg
pop
jmp
pushl
pop
add
add
xor
xor
xor
mov
and
pushf
jmp
jmp
sub
mov
mov
push
jmp
add
push
mov
and
shr
xor
add
pop
pushl
jmp
add
add
push
mov
sub
pop
jmp
push
mov
push
mov
mov
not
jmp
sub
pop
dec
jmp
mov
add
or
push
mov
mov
xor
mov
add
jmp
mov
push
jmp
pop
neg
inc
push
mov
push
mov
or
or
sub
add
mov
add
jmp
popl
mov
jmp
xor
pop
push
mov
notl
pop
xor
shl
add
push
mov
mov
mov
pop
jmp
mov
add
jmp
xchg
pop
mov
mov
jmp
push
sub
pop
push
push
pop
jmp
shl
push
jmp
sub
pop
add
jmp
sub
mov
jmp
pushl
jmp
jmp
xor
pop
dec
sub
xor
pop
jmp
mov
push
jmp
inc
jmp
pop
add
pop
add
sub
jmp
sub
mov
jmp
add
addl
push
mov
jmp
pop
jmp
shrw
pushf
jmp
push
mov
mov
pop
jmp
pop
push
jmp
mov
add
mov
pop
pop
mov
push
mov
add
add
xchg
pop
sub
mov
jmp
mov
add
jmp
push
push
jmp
pop
mov
mov
push
mov
jmp
subl
sub
addl
pop
push
mov
push
mov
jmp
mov
mov
sub
and
jmp
popl
push
mov
push
jmp
push
pushl
jmp
mov
mov
add
and
xor
sub
sub
pop
pop
sub
pushl
pop
add
push
mov
pushl
pushl
pop
add
jmp
push
mov
xor
mov
add
jmp
pop
add
add
sub
mov
add
xor
xor
xor
mov
push
mov
push
mov
add
mov
add
push
mov
add
add
sub
pop
xchg
pop
pushl
jmp
sub
sub
add
sub
mov
jmp
push
mov
mov
and
add
or
jmp
add
jmp
add
jmp
sub
jmp
add
jmp
add
sub
sub
mov
pop
jmp
neg
and
sub
jmp
mov
and
not
inc
jmp
push
notl
pop
xor
xor
pushl
pop
add
add
jmp
mov
push
mov
add
not
push
incl
pop
jmp
add
add
mov
push
mov
jmp
add
push
mov
add
jmp
push
jmp
mov
push
jmp
subl
add
addl
mov
add
pushl
jmp
mov
add
xor
xor
jmp
mov
add
jmp
mov
add
jmp
pop
shr
xchg
not
xchg
jmp
xor
shr
jmp
xor
xor
xor
pop
popl
mov
jmp
xor
push
mov
jmp
mov
mov
mov
jmp
pop
jmp
push
pop
push
mov
mov
and
jmp
pushl
mov
add
popl
mov
or
je
sub
mov
push
mov
push
jmp
not
inc
dec
and
push
mov
xor
pop
add
mov
jmp
push
mov
jmp
mov
jmp
push
mov
and
shl
jmp
add
add
push
mov
push
jmp
add
mov
mov
push
push
jmp
push
pop
jmp
mov
jmp
add
sub
pushl
pop
add
jmp
pop
and
push
jmp
sub
sub
jmp
sub
pop
push
mov
push
jmp
pushl
popf
pop
sbb
pushf
jmp
pop
add
mov
xor
mov
add
sub
mov
push
push
pop
push
mov
jmp
push
mov
mov
addl
addl
add
subl
push
jmp
and
inc
sub
mov
jmp
pop
sub
mov
push
push
jmp
add
jmp
mov
jmp
pop
sub
jmp
pop
shlw
pushf
jmp
pushl
jmp
sub
mov
mov
xor
pop
mov
push
mov
push
mov
add
push
push
jmp
pop
push
mov
shr
sub
xor
pop
sub
jmp
mov
add
pop
push
push
push
pop
push
mov
add
jmp
mov
jmp
mov
idiv
sub
mov
push
pushl
pop
jmp
xor
jmp
mov
mov
jmp
mov
push
jmp
xor
push
subl
pop
add
pop
xor
mov
push
sub
mov
sub
jmp
jmp
mov
inc
inc
neg
jmp
mov
mov
pop
dec
inc
inc
sub
jmp
xor
shl
sub
jmp
push
mov
mov
add
jmp
push
jmp
mov
add
push
mov
add
jmp
sub
pop
xchg
pop
mov
push
pop
add
push
mov
sub
jmp
push
mov
jmp
pop
jmp
add
sub
mov
push
jmp
push
jmp
mov
add
jmp
pop
mov
push
pushl
mov
add
add
push
jmp
push
mov
push
pop
shl
shr
sub
push
pop
pop
sub
sub
add
mov
sub
mov
mov
push
mov
push
jmp
push
push
mov
xchg
jmp
sub
sub
jmp
xor
jmp
mov
jmp
push
mov
push
pop
dec
shl
xor
push
jmp
sub
sub
push
jmp
xor
pop
jmp
add
pop
jmp
sub
sub
push
mov
add
jmp
mov
push
push
pop
sub
push
push
push
mov
add
jmp
pop
xchg
mov
mov
mov
add
mov
jmp
lods
jmp
sub
push
mov
add
add
sub
add
pop
mov
push
mov
add
jmp
push
jmp
inc
shr
jmp
not
jmp
neg
jmp
pop
push
mov
add
add
xor
jmp
add
push
push
jmp
sub
jmp
push
push
jmp
xor
xor
jmp
add
sub
jmp
mov
jmp
mov
pop
not
xor
sub
add
add
mov
push
mov
add
push
mov
add
pop
xchg
pop
add
sub
sub
push
mov
push
decl
pop
jmp
not
shl
sub
jmp
add
push
mov
pushl
pop
popl
pop
jmp
pop
popl
mov
xor
jmp
shl
xor
jmp
add
push
mov
jmp
pop
push
mov
add
sub
xchg
pop
mov
mov
neg
push
jmp
mov
xor
jmp
inc
or
sub
jmp
pop
add
push
mov
push
mov
mov
add
jmp
xor
xor
mov
add
push
mov
and
jmp
mov
sub
jmp
xor
sub
pop
pop
jmp
neg
sub
and
pop
inc
and
push
jmp
push
jmp
shr
jmp
dec
jmp
sub
jmp
mov
mov
shr
add
sub
pop
push
mov
jmp
xchg
pop
xor
pop
pop
sub
mov
push
pushl
pop
add
push
decl
pop
not
shr
inc
shr
xor
xor
mov
jmp
mov
add
jmp
push
mov
add
jmp
mov
push
mov
add
pop
sub
add
add
push
push
mov
add
sub
sub
mov
pushl
mov
jmp
sub
or
xor
jmp
push
pop
sub
push
mov
pop
pop
add
add
add
sub
jmp
sub
jmp
shl
push
push
mov
mov
sub
mov
mov
mov
pop
pop
dec
or
and
xor
or
pop
sub
add
mov
add
jmp
notl
pop
push
xchg
not
xchg
pop
jmp
mov
push
mov
sub
push
popl
sub
mov
jmp
xchg
pop
push
mov
add
sub
xchg
pop
mov
mov
jmp
xor
sub
pop
jmp
sub
and
sub
mov
mov
push
mov
jmp
push
jmp
subl
subl
add
addl
addl
jmp
xor
xor
jmp
pop
add
push
jmp
mov
jmp
add
pop
jmp
sub
pushl
pop
jmp
xor
add
jmp
mov
add
add
xchg
jmp
mov
or
inc
neg
or
shl
xor
sub
pop
sub
jmp
sub
pop
sub
add
pop
mov
add
push
mov
sub
mov
jmp
pop
jmp
pop
add
sub
sub
pushl
pop
add
add
jmp
mov
add
sub
mov
jmp
add
push
jmp
mov
shl
inc
add
jmp
pop
push
mov
xor
shl
xor
add
pop
add
push
mov
sub
pop
add
jmp
sub
pop
push
mov
jmp
add
jmp
sub
sub
add
sub
mov
sub
mov
mov
add
jmp
add
jmp
mov
jmp
add
sub
sub
jmp
push
mov
mov
push
jmp
xor
xor
pop
imul
push
push
jmp
push
push
pop
add
neg
xor
add
mov
pop
xor
sub
mov
add
jmp
mov
jmp
add
push
pushl
pop
popl
pop
push
mov
push
jmp
jmp
push
pop
add
sub
jmp
mov
shl
sub
sub
add
mov
pop
jmp
shl
sub
mov
pop
jmp
push
jmp
sub
jmp
sub
pop
add
pop
push
mov
and
not
shr
jmp
pushl
pop
add
push
sub
mov
mov
mov
pop
sub
jmp
pop
push
jmp
mov
jmp
mov
jmp
add
mov
add
sub
push
mov
add
sub
xchg
jmp
pop
xor
push
mov
jmp
push
mov
sub
pop
push
mov
push
pop
push
jmp
xor
jmp
push
mov
add
pop
xchg
pop
and
pop
jmp
push
mov
jmp
pop
jmp
mov
mov
xor
mov
push
push
mov
add
push
jmp
add
sub
xchg
mov
mov
sub
mov
mov
mov
mov
add
jmp
sub
push
mov
push
push
mov
jmp
xor
add
pushl
pop
add
pushl
pushl
pop
jmp
push
mov
mov
xor
mov
push
push
pop
jmp
add
jmp
xor
xor
xor
mov
jmp
pop
idiv
movzbw
jmp
push
mov
add
jmp
push
mov
shl
dec
jmp
mov
add
push
mov
jmp
mov
add
push
mov
neg
jmp
mov
mov
sub
and
not
shl
dec
xor
mov
jmp
mov
add
pop
pop
add
pop
jmp
add
add
add
sub
sub
add
mov
jmp
push
mov
mov
push
jmp
xor
push
mov
dec
jmp
xor
xor
pop
add
add
jmp
pop
sub
sub
jmp
pop
mov
add
push
pushl
mov
add
popl
mov
jmp
mov
mov
jmp
sub
mov
mov
add
jmp
sub
dec
or
shl
or
push
jmp
and
not
jmp
xor
mov
pushl
pushl
pushl
pop
jmp
pop
push
mov
push
push
pop
jmp
sub
jmp
add
pop
pushw
mov
mov
xor
jmp
pop
sub
sub
add
jmp
pop
jmp
add
push
push
pop
mov
pop
mov
add
xor
push
jmp
pop
popl
jmp
pop
jmp
xor
xor
jmp
mov
mov
add
sub
xchg
pop
mov
mov
push
mov
shl
xchg
not
xchg
xor
and
not
push
jmp
xchg
pop
popl
pop
add
sub
mov
sub
mov
jmp
mov
jmp
pushl
pop
add
add
mov
sub
mov
mov
push
push
mov
and
xor
mov
jmp
add
jmp
popl
mov
jmp
xor
mov
jmp
push
mov
add
jmp
add
add
mov
push
mov
push
mov
jmp
add
push
mov
add
sub
jmp
pop
xor
shl
add
mov
pushl
pop
jmp
pop
add
jmp
mov
xor
pop
and
pop
shl
jmp
push
push
pop
add
push
mov
inc
jmp
add
sub
jmp
add
xor
xor
xor
mov
xor
xor
jmp
sub
pop
mov
add
sub
mov
mov
add
jmp
xor
pop
jmp
pop
pushl
pop
jmp
add
pop
xor
xor
xor
mov
shr
jmp
addl
jmp
pushl
pop
add
push
jmp
mov
jmp
mov
mov
xor
mov
add
inc
not
sub
sub
add
jmp
pop
xchg
pop
jmp
add
push
mov
xor
pop
xor
sub
sub
jmp
push
push
mov
push
mov
mov
jmp
push
mov
add
pop
push
jmp
mov
add
mov
pop
mov
jmp
mov
shl
add
jmp
sub
sub
add
add
add
mov
add
push
mov
jmp
mov
not
xor
sub
jmp
sub
or
xor
jmp
mov
sub
add
jmp
push
mov
mov
pop
sub
push
mov
jmp
xor
add
pop
sub
jmp
mov
jmp
push
jmp
not
dec
push
mov
jmp
mov
jmp
pushl
popf
pop
rcrb
pushf
jmp
xor
add
pop
sub
jmp
sub
add
sub
pop
pop
sub
add
push
mov
add
pop
pop
shl
sub
and
pushl
pushl
pop
add
push
jmp
pushl
pushl
pop
add
push
mov
sub
mov
addl
pop
push
mov
jmp
inc
and
jmp
mov
jmp
mov
jmp
mov
mov
dec
and
add
jmp
mov
xor
push
mov
mov
add
sub
sub
pop
sub
pop
xchg
pop
mov
push
mov
add
pop
pop
push
mov
add
pop
push
mov
sub
jmp
mov
add
sub
xchg
jmp
add
add
add
sub
sub
mov
mov
neg
or
pushw
mov
mov
and
pop
push
mov
jmp
mov
push
jmp
jmp
add
jmp
mov
jmp
mov
mov
mov
add
sub
xor
xor
jmp
push
mov
addl
sub
subl
jmp
pop
add
add
push
pushl
pop
popl
jmp
push
mov
push
mov
add
push
mov
mov
add
pop
push
jmp
not
jmp
shl
dec
sub
xor
add
pop
xor
xor
jmp
xchg
pop
sub
jmp
pop
jmp
mov
push
push
push
mov
mov
jmp
addl
pop
add
jmp
sub
pop
jmp
addl
mov
add
push
mov
add
pop
push
mov
sub
pop
xor
xor
xor
pop
mov
push
jmp
mov
push
mov
sub
jmp
popl
push
mov
jmp
mov
mov
xor
jmp
pop
add
pop
add
push
jmp
mov
inc
jmp
sub
mov
mov
sub
pop
pushl
mov
add
jmp
push
mov
add
add
xchg
pop
sub
mov
add
xchg
pop
add
pushf
jmp
or
sub
push
mov
add
pop
xor
pop
shr
shl
push
push
push
jmp
push
mov
jmp
xor
xor
mov
pop
push
mov
push
mov
jmp
add
jmp
pop
add
pushl
pop
add
xor
xor
jmp
sub
jmp
inc
jmp
mov
xor
pop
jmp
push
push
mov
push
mov
add
sub
jmp
add
add
jmp
sub
mov
jmp
not
add
xor
pushl
jmp
add
mov
pop
mov
sub
pushl
pop
add
push
mov
jmp
mov
sub
pop
pop
xor
xor
pushl
mov
add
sub
mov
jmp
pop
add
sub
pop
shl
sub
jmp
add
jmp
subl
jmp
pop
push
jmp
add
mov
pop
xor
push
mov
and
push
mov
or
jmp
add
push
mov
jmp
sub
sub
mov
mov
push
mov
and
pop
dec
push
push
push
pop
shl
shr
shr
sub
jmp
add
push
push
jmp
mov
jmp
or
pop
xor
and
jmp
pop
push
mov
sub
xor
pop
push
push
mov
mov
jmp
mov
jmp
push
pop
add
add
xchg
jmp
movzbl
popl
jmp
push
mov
add
add
sub
pushl
pop
push
mov
add
add
xchg
pop
push
push
jmp
pop
push
mov
sub
mov
mov
sub
mov
mov
jmp
shr
and
jmp
add
jmp
add
add
xchg
pop
rorw
pushf
jmp
mov
add
jmp
shr
jmp
push
jmp
pushw
mov
jmp
mov
mov
mov
jmp
push
pushf
jmp
add
pop
push
jmp
pop
xchg
pop
push
jmp
push
mov
jmp
xorl
pop
xor
pop
add
pop
add
push
pushl
pop
popl
mov
jmp
push
jmp
add
pop
add
xchg
mov
movzbl
popw
jmp
pop
dec
sub
sub
add
pop
add
jmp
pop
jmp
add
sub
jmp
mov
neg
and
add
or
pop
xor
add
sub
sub
pop
pop
add
pop
jmp
pop
push
mov
push
jmp
push
mov
jmp
add
shl
inc
jmp
push
mov
mov
pop
add
sub
add
add
push
mov
sub
sub
jmp
mov
sub
pop
add
pop
sub
xor
xor
jmp
add
sub
jmp
sub
add
pop
mov
jmp
mov
push
mov
jmp
add
push
mov
mov
jmp
not
inc
sub
add
jmp
pop
add
jmp
shl
and
xor
xor
mov
mov
jmp
jmp
add
pushl
pop
jmp
add
pop
add
xchg
pop
add
add
sub
pop
xchg
pop
movsbl
push
mov
sub
jmp
push
pop
sub
mov
jmp
xchg
mov
mov
push
mov
push
push
popl
addl
pushl
pop
push
mov
mov
add
add
xchg
jmp
sub
pop
add
add
jmp
add
jmp
dec
add
add
jmp
mov
shl
and
or
push
mov
xor
push
mov
add
inc
jmp
inc
jmp
neg
shr
jmp
pop
mov
mov
jmp
add
push
mov
jmp
pop
jmp
add
push
jmp
push
mov
addl
pop
add
jmp
sub
pop
add
add
pushl
jmp
push
push
pop
sub
mov
pop
jmp
sub
push
mov
push
mov
sub
mov
mov
push
mov
dec
mov
jmp
mov
mov
push
mov
xor
jmp
pop
jmp
mov
jmp
add
add
xor
xor
xor
jmp
sub
sub
mov
pop
xor
sub
mov
jmp
push
mov
jmp
sub
xchg
pop
mov
push
mov
jmp
xor
mov
add
push
jmp
mov
mov
add
add
sub
pop
jmp
pop
jmp
mov
shl
xor
mov
pushl
pop
add
add
push
mov
mov
jmp
sub
mov
push
push
pop
add
add
xchg
pop
push
jmp
add
sub
xor
xor
jmp
add
jmp
sub
pop
sub
jmp
push
jmp
pushl
pop
push
mov
jmp
pushl
jmp
shl
shl
or
push
push
mov
jmp
push
mov
not
not
neg
inc
jmp
push
mov
pop
jmp
shr
xor
sub
add
pop
xor
jmp
jmp
shl
sub
sub
pop
xor
jmp
pop
jmp
mov
add
pop
push
mov
add
jmp
xor
mov
mov
push
pushf
jmp
add
and
jmp
add
push
jmp
add
pop
jmp
inc
add
mov
mov
add
sub
mov
jmp
xchg
pop
mov
push
push
mov
addl
mov
add
jmp
mov
add
add
xchg
pop
xor
xor
jmp
add
pop
jmp
pop
add
xor
xor
xor
mov
shll
pushf
jmp
push
jmp
push
mov
jmp
mov
add
push
push
jmp
mov
push
mov
push
pop
push
mov
push
mov
jmp
pop
jmp
pop
popl
pop
pushl
mov
push
jmp
and
pop
xor
xor
pop
mov
jmp
push
mov
xchg
sub
jmp
push
mov
xor
jmp
shr
xor
mov
pop
xchg
jmp
sub
mov
pop
add
jmp
pop
push
mov
mov
add
sub
jmp
push
push
pop
sub
mov
push
mov
jmp
pop
push
mov
sub
sub
sub
sub
add
add
add
pop
jmp
addl
add
jmp
xor
xor
xor
push
push
pop
jmp
pop
sub
jmp
shl
push
jmp
shl
jmp
pop
sub
add
add
pushl
mov
jmp
pop
shl
sub
jmp
push
mov
sub
sub
jmp
mov
pop
or
jmp
shr
or
je
push
jmp
xchg
pop
sub
mov
add
pushl
xorl
jmp
add
push
mov
jmp
add
pop
jmp
push
mov
jmp
pop
popl
jmp
xchg
pop
mov
push
mov
jmp
add
add
sub
pop
xor
pop
push
jmp
mov
push
push
pop
shr
push
mov
xor
jmp
mov
add
jmp
mov
add
push
mov
mov
jmp
pop
jmp
not
push
mov
jmp
push
pushl
mov
add
popl
mov
bswap
push
mov
jmp
mov
sub
pop
pop
push
jmp
pop
push
push
mov
mov
jmp
push
mov
mov
pop
jmp
push
mov
push
mov
add
pop
sub
xchg
pop
mov
mov
add
pushl
jmp
push
mov
add
pop
sub
pop
mov
jmp
mov
mov
jmp
mov
add
jmp
not
jmp
add
push
mov
add
xor
pop
pop
mov
add
push
jmp
push
jmp
decb
pop
sub
sub
pop
mov
jmp
mov
push
mov
mov
mov
pop
pushl
pushl
pop
add
push
mov
jmp
sub
push
jmp
sub
pushl
pop
add
sub
sub
add
add
sub
add
add
pop
add
xchg
mov
rolb
pushf
jmp
lods
jmp
mov
push
push
push
mov
addl
popl
push
jmp
pop
add
push
push
mov
jmp
push
pushl
pop
popl
mov
mov
jmp
sub
jmp
shl
or
sub
dec
inc
push
mov
xor
pop
sub
add
add
pop
sub
sub
add
jmp
pushl
popf
pop
adc
pushf
jmp
add
sub
sub
mov
add
add
shl
push
jmp
push
push
pop
add
sub
xchg
pop
mov
jmp
add
jmp
add
push
mov
jmp
mov
mov
push
mov
sub
pop
add
jmp
sub
mov
push
mov
jmp
pop
sub
mov
mov
add
add
jmp
push
pop
sub
add
add
push
mov
sub
jmp
push
xorl
pop
xor
pop
and
jmp
add
jmp
push
push
mov
jmp
sub
sub
pop
jmp
neg
push
jmp
add
jmp
pop
jmp
pop
add
sub
mov
jmp
mov
add
jmp
shl
jmp
xor
xor
mov
jmp
xor
mov
pop
mov
xor
jmp
add
jmp
sub
jmp
pop
jmp
push
mov
mov
add
mov
push
mov
add
add
xchg
pop
jmp
inc
jmp
xor
jmp
push
mov
xor
pop
jmp
sub
sub
add
jmp
push
push
mov
inc
shr
jmp
inc
and
not
shl
jmp
shr
xor
jmp
mov
mov
not
inc
sub
add
add
sub
sub
sub
add
add
pop
push
subl
jmp
mov
push
push
mov
jmp
sub
mov
mov
mov
jmp
sub
jmp
sub
pop
push
jmp
mov
push
jmp
sub
mov
add
push
subl
jmp
sub
mov
push
pop
sub
sub
add
add
sub
push
mov
shl
not
dec
neg
push
mov
add
or
or
shl
sub
add
pop
add
mov
add
add
pushl
pop
sub
jmp
mov
or
pop
push
push
mov
dec
xor
dec
add
and
xor
jmp
mov
mov
add
push
mov
mov
add
sub
jmp
sub
add
pop
jmp
pushl
pop
popl
jmp
sub
xchg
mov
mov
mov
jmp
mov
jmp
pop
mov
add
sub
mov
push
jmp
pop
xchg
jmp
pop
mov
push
push
mov
add
push
push
mov
mov
jmp
add
pop
xor
shl
jmp
pop
add
jmp
mov
add
add
add
xchg
pop
add
add
pop
sub
mov
push
pop
add
push
mov
sub
jmp
xor
pop
jmp
sub
mov
mov
shr
push
xchg
jmp
add
and
pushl
pop
sub
jmp
pop
push
mov
push
mov
dec
dec
jmp
add
mov
add
add
sub
add
add
push
mov
jmp
xor
shr
push
mov
jmp
pop
push
mov
sub
pushl
mov
add
add
push
jmp
pop
mov
jmp
push
mov
jmp
add
mov
jmp
push
jmp
sub
mov
jmp
or
mov
jmp
add
xchg
jmp
pop
mov
push
push
mov
xor
xor
add
mov
jmp
xor
xor
xor
mov
jmp
mov
jmp
mov
add
sub
xchg
pop
mov
mov
jmp
mov
sub
mov
push
pushl
pop
jmp
push
mov
and
mov
add
sub
push
mov
dec
not
shl
shl
shl
sub
or
pop
and
push
jmp
push
jmp
push
pushl
mov
add
popl
pop
and
pushf
jmp
mov
push
jmp
push
mov
not
mov
mov
add
shl
sub
mov
mov
xor
mov
jmp
sub
xchg
pop
mov
mov
shr
jmp
add
mov
add
jmp
add
push
mov
mov
jmp
mov
add
sub
movzwl
pushw
mov
jmp
mov
push
mov
jmp
xor
xor
xor
pop
push
jmp
or
xchg
not
xchg
sub
add
pop
add
push
mov
sub
pop
pop
push
mov
push
notb
pop
neg
push
mov
not
add
xor
sub
mov
jmp
mov
push
jmp
and
pop
not
sub
mov
mov
xor
mov
add
jmp
pop
mov
push
sub
mov
jmp
pushl
mov
push
jmp
add
xchg
pop
xor
mov
pushl
pop
add
jmp
push
jmp
mov
shl
jmp
pop
shr
xor
jmp
add
add
xchg
pop
mov
push
mov
add
add
xchg
pop
pop
mov
mov
add
add
pop
jmp
mov
jmp
add
jmp
xchg
adc
cmpsl
or
mov
or
pop
test
fisubl
test
mov
cmpsl
or
dec
test
pop
or
loopne
or
cld
cmpsl
or
sbb
or
or
or
sbb
or
sub
or
loopne
or
or
test
int3
push
test
mov
pop
test
xchg
pop
test
push
sbb
or
mov
test
ret
or
mulb
or
or
or
les
or
icebp
cmpsl
or
out
or
dec
test
dec
fsubl
or
or
cmpsl
or
mull
or
ret
cmpsl
or
data16
mov
test
aaa
pop
test
je
cmpsl
or
push
test
mov
bound
or
sub
or
dec
test
jp
test
aas
xor
or
in
or
sbb
or
pusha
test
and
test
dec
imul
or
mov
or
or
or
pop
test
ja
test
cli
imul
or
cmpsl
cmpsl
or
dec
test
and
test
mov
mov
or
push
test
xor
cmpsl
or
jmp
or
or
aam
or
adc
or
mov
or
mov
cmpsl
or
adc
test
fsubrl
or
cs
inc
gs
fdivr
cmpsl
or
and
or
test
or
push
test
out
cmpsl
or
push
cmpsl
or
out
cmpsl
or
mov
or
lret
cmpsl
or
dec
test
cmp
cmpsl
or
sbb
or
mov
or
add
or
push
test
sbb
test
dec
push
or
mov
cmpsl
or
dec
test
sub
or
ret
cmpsl
or
lods
cmpsl
or
cmp
or
add
or
fldenv
or
cmpsl
or
and
or
pop
test
jecxz
cmpsl
or
icebp
cmpsl
or
shll
or
lds
or
fbld
or
aaa
test
xor
or
leave
cmpsl
or
mov
test
sub
cmpsl
or
fisubl
or
mov
cmpsl
or
inc
test
mov
inc
test
test
and
or
ss
roll
scas
and
or
shlb
or
es
pusha
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
jmp
sub
sub
jmp
jmp
mov
shl
not
jmp
add
sub
mov
mov
push
mov
sub
sub
jmp
mov
jmp
sub
mov
mov
push
mov
inc
jmp
jmp
xor
mov
push
push
jmp
pop
jmp
mov
sub
mov
mov
and
sub
push
mov
neg
or
shl
add
jmp
pop
add
sub
sub
add
jmp
push
mov
jmp
sub
mov
pushl
pop
popl
mov
decb
pushf
jmp
push
mov
xor
jmp
xor
not
sub
add
xor
pop
or
pop
add
mov
pop
push
mov
xor
inc
xor
xor
pop
add
pop
push
mov
jmp
sub
jmp
pop
mov
sub
jmp
not
inc
jmp
add
push
jmp
mov
push
mov
add
add
xchg
jmp
pop
mov
push
pushf
jmp
push
sub
push
popl
jmp
add
pop
xchg
pop
jmp
pushl
jmp
push
mov
add
sub
add
jmp
add
add
jmp
mov
add
jmp
pop
sub
xchg
mov
mov
push
pop
add
add
jmp
push
mov
add
sub
xchg
pop
push
jmp
mov
push
jmp
mov
add
push
mov
shr
add
jmp
inc
xor
mov
pop
not
dec
not
jmp
push
mov
neg
or
jmp
add
popl
pop
sub
jmp
mov
add
xchg
pop
jmp
push
push
mov
jmp
push
jmp
or
jmp
mov
push
push
mov
jmp
xchg
not
xchg
jmp
xor
sub
pop
add
add
mov
push
jmp
mov
push
mov
push
pop
push
jmp
mov
jmp
add
add
jmp
sub
mov
add
sub
jmp
push
push
push
pop
jmp
mov
push
mov
add
add
xchg
pop
movzbl
cmp
je
pushl
push
jmp
xchg
jmp
pop
jmp
dec
xor
mov
pop
push
jmp
pop
add
jmp
mov
push
jmp
xchg
jmp
pop
and
xor
xor
push
push
mov
mov
add
jmp
push
push
popl
addl
pop
push
jmp
mov
jmp
addl
pop
push
mov
shr
add
add
pop
sub
xchg
mov
mov
push
mov
sub
mov
pop
jmp
mov
push
mov
push
jmp
incl
pushf
jmp
mov
pop
pop
mov
add
pop
mov
add
jmp
add
dec
xor
not
sub
mov
pop
jmp
add
sub
jmp
xor
jmp
add
jmp
xor
xor
xor
pop
mov
jmp
pop
push
mov
sub
dec
not
jmp
pop
jmp
mov
mov
xor
sub
pop
jmp
pushl
mov
add
push
mov
push
sub
jmp
pushl
pop
push
mov
push
mov
jmp
xchg
mov
push
sub
jmp
neg
shr
sub
xor
pop
add
add
add
jmp
and
pushl
mov
push
push
pop
push
mov
add
xor
inc
jmp
push
mov
add
pop
push
mov
jmp
add
push
push
mov
mov
pop
jmp
mov
add
jmp
shl
add
dec
xor
jmp
xor
sub
jmp
neg
push
mov
or
pop
xor
jmp
add
xchg
jmp
not
xor
add
pop
sub
add
add
jmp
mov
push
jmp
push
mov
mov
push
mov
jmp
push
push
mov
push
push
pop
mov
mov
push
mov
add
add
xchg
pop
pop
mov
mov
add
jmp
push
pushl
pop
popl
mov
push
mov
push
push
popl
addl
jmp
push
jmp
pop
push
mov
add
jmp
pop
pop
pop
add
xchg
jmp
mov
push
mov
push
mov
add
sub
xchg
pop
mov
mov
sub
add
pushl
jmp
neg
jmp
neg
add
jmp
lods
sub
mov
mov
add
jmp
mov
push
mov
push
mov
jmp
pop
jmp
push
mov
shl
add
mov
pop
jmp
push
mov
add
pop
xchg
jmp
push
mov
push
mov
add
jmp
shr
xor
jmp
mov
add
sub
push
push
xorl
pop
xor
mov
pop
pushl
mov
add
sub
mov
push
pop
add
add
jmp
mov
addl
mov
add
add
push
mov
jmp
mov
inc
shl
xor
push
jmp
push
mov
add
pop
push
mov
sub
pop
jmp
mov
sub
sub
jmp
shl
xor
jmp
pop
add
pop
jmp
mov
mov
addl
add
subl
mov
add
addl
jmp
sub
sub
not
add
jmp
mov
mov
pop
push
mov
jmp
pop
mov
push
mov
sub
mov
addl
mov
jmp
mov
jmp
sub
pop
xor
mov
add
mov
jmp
shr
xor
xor
xor
jmp
mov
jmp
xor
push
mov
add
pop
push
mov
mov
mov
pop
shr
xchg
not
xchg
add
jmp
push
push
mov
mov
jmp
mov
mov
pop
mov
add
jmp
add
add
mov
add
push
mov
sub
jmp
sub
sub
add
add
pop
sub
sub
push
mov
sub
jmp
pop
pop
jmp
mov
add
shl
jmp
mov
add
inc
shr
push
jmp
sub
add
push
mov
add
pop
pop
add
push
jmp
push
pop
mov
mov
push
mov
add
add
xchg
jmp
addl
jmp
pushl
pop
jmp
mov
jmp
xor
xor
xor
jmp
inc
not
add
add
pop
xchg
pop
jmp
add
add
sub
add
add
pop
jmp
sub
jmp
pop
push
mov
inc
xor
add
pop
sub
xchg
pop
mov
mov
dec
or
or
dec
dec
jmp
pop
push
jmp
xor
jmp
addl
pop
pushl
pop
add
push
jmp
mov
mov
add
sub
add
add
jmp
push
jmp
sub
mov
push
push
pop
jmp
sub
sub
jmp
mov
add
jmp
add
jmp
pop
add
sub
sub
jmp
sub
sub
jmp
pop
jmp
jmp
add
jmp
inc
sub
not
add
sub
push
mov
jmp
pop
jmp
mov
mov
jmp
sub
pop
push
mov
mov
jmp
mov
push
mov
add
sub
jmp
sub
xor
xor
add
jmp
pushl
pushl
pushl
pop
add
push
push
jmp
lods
push
mov
push
mov
add
add
add
sub
jmp
mov
push
mov
inc
dec
shl
and
or
push
mov
sub
dec
and
jmp
lods
push
push
mov
mov
sub
mov
mov
push
mov
neg
not
and
xor
sub
jmp
push
mov
push
pushl
pop
jmp
sub
jmp
pushl
pop
add
jmp
mov
add
pop
xor
xor
xor
mov
mov
push
push
push
jmp
push
mov
jmp
mov
add
sub
xchg
pop
mov
jmp
sub
pop
push
jmp
add
jmp
sub
pop
mov
jmp
pop
xor
pop
pop
addw
push
mov
jmp
and
shr
push
mov
or
jmp
and
jmp
push
push
mov
sub
mov
pop
jmp
xor
xor
xor
jmp
push
mov
add
pop
sub
push
jmp
mov
jmp
sub
pop
jmp
add
sub
mov
push
push
pop
xor
mov
add
pushl
jmp
add
sub
pop
jmp
popl
jmp
sub
jmp
mov
push
mov
mov
jmp
pop
mov
mov
add
sub
mov
push
jmp
add
mov
add
add
sub
jmp
shr
push
mov
add
pop
push
mov
mov
add
jmp
push
mov
mov
jmp
xor
xor
jmp
add
xchg
pop
push
mov
mov
add
jmp
mov
bt
pushf
jmp
and
push
mov
and
shr
and
jmp
mov
add
add
sub
xchg
pop
mov
push
pop
add
jmp
add
jmp
sub
jmp
or
or
add
add
sub
pop
and
pushl
mov
jmp
add
jmp
pop
jmp
mov
jmp
push
jmp
mov
push
push
pushl
pop
jmp
jmp
sub
and
jmp
jmp
xor
pop
jmp
add
push
mov
sub
shr
jmp
mov
jmp
pop
jmp
push
jmp
mov
add
add
push
jmp
pop
jmp
mov
push
jmp
push
mov
jmp
sub
mov
mov
add
jmp
xchg
jmp
inc
xor
xor
jmp
add
jmp
mov
push
mov
mov
add
jmp
mov
jmp
or
pushf
jmp
sarw
pushf
jmp
sub
jmp
shl
sub
mov
pop
jmp
pop
and
mov
add
shr
sub
mov
mov
add
sub
sub
pop
add
and
mov
add
or
shl
pushl
push
jmp
add
xchg
pop
and
jmp
push
mov
dec
not
push
mov
jmp
push
mov
shr
jmp
sub
jmp
lods
jmp
pop
jmp
movzbw
pushw
mov
jmp
push
addl
mov
add
push
mov
sub
pop
push
pop
pushl
pop
push
push
pop
jmp
pushl
pop
sub
mov
sub
mov
addl
pushl
pop
jmp
sub
pop
xor
mov
sub
mov
push
pop
add
push
push
jmp
not
push
jmp
neg
shl
not
sub
add
jmp
and
pop
neg
add
add
pop
xchg
pop
popl
pop
push
sub
mov
addl
jmp
mov
pushl
pop
jmp
mov
jmp
sub
add
jmp
xor
pop
xor
pop
jmp
push
jmp
push
mov
push
mov
push
mov
mov
pop
jmp
mov
xor
add
sub
jmp
xchg
mov
add
jmp
mov
add
sub
pop
jmp
mov
add
push
mov
add
pop
add
jmp
pop
jmp
push
mov
add
add
jmp
xor
pop
xor
xor
mov
push
mov
jmp
pop
push
push
push
mov
mov
sub
mov
jmp
mov
add
add
jmp
push
push
mov
push
jmp
mov
push
pop
mov
jmp
pop
pushl
pop
push
mov
push
mov
sub
mov
mov
add
mov
add
pop
push
jmp
add
jmp
imul
push
pushf
jmp
xor
xor
mov
test
pushf
jmp
mov
jmp
sub
pop
add
add
jmp
mov
jmp
sub
sub
pop
dec
push
mov
sub
mov
add
add
pop
jmp
add
sub
pop
push
jmp
push
mov
not
sub
dec
not
push
jmp
jmp
and
jmp
pop
shr
push
mov
mov
sub
mov
push
mov
add
add
xchg
pop
jmp
mov
push
push
pushl
mov
jmp
add
jmp
xor
xor
pop
jmp
add
mov
add
xchg
pop
push
jmp
mov
add
sub
xchg
mov
mov
mov
push
mov
add
add
jmp
neg
shr
dec
shr
jmp
add
mov
add
push
mov
pushl
jmp
mov
mov
pop
xor
pop
sub
sub
sub
sub
add
push
mov
xor
shl
add
add
pop
push
mov
jmp
push
jmp
neg
sub
mov
mov
jmp
and
dec
xor
sub
jmp
jmp
sub
push
mov
push
mov
not
not
neg
not
sub
add
pop
sub
sub
pop
pop
add
push
push
mov
mov
mov
add
pop
add
pop
sub
mov
mov
shr
sub
mov
mov
add
sub
jmp
mov
push
mov
jmp
sub
mov
mov
and
dec
add
shr
shr
xor
add
sub
sub
mov
add
jmp
pop
add
push
mov
add
add
jmp
mov
add
push
pushl
pop
popl
mov
and
pushf
jmp
sub
add
pop
add
add
jmp
add
push
push
jmp
sub
sub
jmp
pushl
pop
push
mov
push
jmp
mov
mov
push
jmp
add
xchg
pop
bt
pushf
jmp
pop
jmp
pop
pop
push
push
jmp
sub
sub
jmp
mov
push
mov
push
push
popl
addl
pop
sub
mov
push
push
mov
mov
pop
sub
mov
jmp
dec
add
add
mov
jmp
lods
add
push
push
pop
sub
sub
jmp
xor
push
jmp
push
mov
push
pop
jmp
inc
xor
jmp
mov
pop
push
push
mov
mov
pop
jmp
mov
pop
jmp
add
sub
add
add
jmp
add
jmp
mov
neg
or
xor
shr
push
mov
or
add
add
pop
jmp
push
mov
pushl
mov
jmp
addl
pop
sub
pop
jmp
sub
mov
mov
push
mov
sub
dec
push
push
push
mov
mov
sub
pop
jmp
sub
jmp
push
push
mov
jmp
mov
jmp
add
push
mov
add
add
sub
jmp
xor
pushl
pop
add
push
mov
mov
shl
push
mov
dec
push
push
jmp
push
pop
add
pop
xchg
mov
jmp
xor
mov
mov
push
pushf
jmp
push
mov
dec
jmp
pop
push
mov
add
pop
xchg
pop
add
pushf
jmp
sub
sub
add
push
mov
neg
jmp
push
mov
add
not
xor
inc
sub
jmp
mov
mov
sub
shr
push
jmp
mov
push
jmp
and
pop
shr
xor
push
jmp
pushl
mov
add
push
jmp
pop
jmp
sub
xchg
pop
mov
mov
xor
jmp
xor
add
pop
jmp
sub
add
jmp
pushl
pushl
pushl
pop
add
add
sub
mov
jmp
xor
mov
popl
mov
jmp
mov
push
mov
mov
add
jmp
lods
sub
mov
mov
push
mov
add
pop
sub
pushl
pop
add
add
add
jmp
mov
pop
jmp
add
jmp
add
jmp
add
pop
xchg
pop
push
mov
push
jmp
sub
pop
xor
mov
mov
add
shr
push
mov
jmp
push
mov
jmp
sub
add
jmp
pop
add
pop
push
mov
jmp
mov
sub
pop
jmp
push
pushl
mov
jmp
pop
add
add
push
xorl
jmp
lods
jmp
mov
jmp
add
xor
push
sub
mov
addl
jmp
push
mov
jmp
push
jmp
shl
jmp
mov
mov
jmp
dec
xor
mov
mov
add
add
add
jmp
push
mov
sub
pop
push
mov
push
mov
or
pop
push
mov
push
mov
add
pop
and
inc
push
mov
neg
jmp
push
jmp
mov
pop
push
jmp
mov
mov
push
mov
mov
sub
or
jmp
add
add
xchg
pop
push
mov
jmp
pop
and
mov
add
shr
xor
sub
mov
xchg
push
notl
pop
push
pushl
mov
push
mov
push
mov
addl
pop
add
push
mov
jmp
pop
bswap
push
push
jmp
add
sub
jmp
mov
push
jmp
mov
jmp
add
jmp
pop
sub
pushf
jmp
pop
sub
jmp
push
mov
add
shl
shl
and
xor
xor
xor
pop
dec
add
mov
mov
add
add
mov
add
jmp
popl
pop
jmp
decw
pushf
jmp
shr
push
jmp
mov
mov
add
add
xchg
pop
xor
pop
jmp
and
sub
xor
sub
pop
mov
jmp
xchg
pop
mov
pop
push
jmp
pop
add
xchg
pop
push
mov
xchg
dec
xchg
sub
shr
jmp
push
mov
add
pop
xchg
pop
jmp
and
jmp
mov
push
jmp
mov
push
pushf
jmp
xchg
pop
sub
jmp
push
jmp
add
shl
sub
jmp
mov
jmp
pushl
pop
popl
pop
xor
pushf
jmp
xor
or
shl
jmp
xchg
inc
jmp
pushl
pop
add
or
je
pushl
pushl
pop
jmp
not
sub
mov
pop
or
jmp
mov
addl
pop
jmp
mov
add
sub
jmp
push
mov
add
jmp
pop
or
shl
push
mov
mov
xor
jmp
mov
add
jmp
pop
add
add
add
push
mov
jmp
push
mov
add
push
mov
add
mov
add
sub
mov
mov
add
jmp
sub
add
add
pop
add
add
sub
jmp
mov
mov
sub
mov
mov
push
mov
jmp
push
mov
add
add
add
xchg
pop
push
jmp
mov
add
push
jmp
or
je
pushl
pushl
pop
push
push
mov
add
push
mov
mov
inc
push
mov
jmp
pushl
jmp
mov
neg
push
mov
and
mov
add
push
mov
jmp
add
add
xchg
pop
jmp
sub
pop
sub
mov
push
pop
sub
pop
xor
xor
xor
pop
mov
jmp
pushl
popf
pop
rclw
pushf
jmp
add
pop
popl
addl
pop
jmp
add
pop
push
mov
neg
add
add
jmp
sub
jmp
add
sub
pushl
jmp
mov
mov
push
push
mov
push
mov
mov
pop
add
jmp
push
mov
jmp
push
jmp
add
xor
shr
jmp
mov
push
jmp
add
pop
push
mov
or
sub
and
or
push
jmp
pop
jmp
pop
mov
pop
mov
jmp
xor
xor
pop
pushl
pop
add
jmp
mov
xor
and
shl
xor
add
pop
add
add
sub
pop
sub
mov
mov
add
mov
add
xchg
mov
push
mov
push
push
push
mov
jmp
add
push
mov
add
sub
xchg
mov
mov
mov
jmp
pop
xchg
pop
mov
mov
sub
xor
inc
push
mov
jmp
subl
jmp
pop
add
sub
mov
mov
add
inc
sub
jmp
sub
add
jmp
add
pop
sub
pop
jmp
add
jmp
pushl
pop
push
push
pop
add
jmp
push
mov
jmp
add
jmp
pop
sub
pop
pop
sub
mov
mov
add
push
mov
mov
not
not
inc
neg
push
mov
jmp
shr
jmp
pop
popl
pushl
pop
add
push
push
jmp
push
mov
jmp
pushl
jmp
add
pop
add
sub
pop
push
mov
add
pop
xor
xor
jmp
mov
push
push
mov
jmp
xor
jmp
add
add
push
mov
add
jmp
mov
add
shr
xor
xor
xor
xor
push
mov
add
sub
xchg
pop
mov
push
mov
pushl
mov
add
jmp
pop
jmp
mov
pop
and
push
negl
jmp
push
push
pop
mov
pop
mov
add
sub
jmp
xor
jmp
push
sub
jmp
push
mov
jmp
mov
jmp
push
mov
mov
jmp
xor
neg
or
dec
push
mov
sub
pop
not
xor
xor
mov
jmp
dec
sub
jmp
push
push
pop
neg
not
jmp
add
mov
pop
add
mov
pop
add
pop
add
jmp
mov
push
mov
push
pushl
mov
add
push
push
pop
add
add
xchg
pop
push
mov
not
add
not
dec
and
jmp
mov
add
jmp
mov
mov
jmp
mov
push
mov
sub
pushl
pop
push
push
mov
add
push
mov
jmp
jmp
push
mov
sub
sub
xor
mov
add
add
push
mov
xor
not
xor
sub
jmp
push
push
jmp
xchg
pop
jmp
not
add
xor
pop
xor
mov
pop
pushl
push
mov
add
mov
jmp
push
mov
jmp
sub
not
inc
shl
add
sub
jmp
and
pop
jmp
push
push
mov
add
push
jmp
add
add
jmp
pop
not
xchg
xchg
dec
xchg
not
jmp
pop
sub
push
mov
jmp
push
mov
push
xorw
jmp
xor
mov
pushl
pop
add
add
add
sub
pushl
pop
add
push
mov
jmp
xor
shl
sub
jmp
pushl
mov
add
jmp
jmp
shr
and
push
mov
xor
pop
xor
xor
xor
sub
jmp
mov
xor
pop
mov
pop
jmp
add
add
push
jmp
shl
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
or
xor
add
jmp
mov
shr
shl
shr
push
mov
xor
pop
push
mov
add
mov
push
mov
add
add
xchg
pop
jmp
add
sub
add
pop
xor
xor
xor
mov
jmp
mov
mov
mov
pop
push
addl
pop
sub
pop
jmp
ret
jmp
pop
push
mov
mov
sub
add
pop
not
and
push
mov
mov
sub
add
add
sub
add
pop
push
subl
pop
add
pop
jmp
add
popl
mov
push
jmp
add
pop
not
dec
jmp
push
mov
mov
xor
pop
add
add
sub
pop
xchg
pop
push
push
jmp
sub
pop
push
mov
xor
pop
add
add
mov
add
add
jmp
mov
push
push
mov
mov
jmp
sub
jmp
add
pop
jmp
addl
mov
add
push
push
mov
mov
xor
jmp
not
xchg
not
xchg
jmp
pop
sub
add
add
jmp
add
mov
jmp
xchg
jmp
mov
jmp
pushl
pop
push
mov
mov
push
mov
xor
not
jmp
mov
pushl
pop
add
pop
and
pop
shr
jmp
mov
push
mov
mov
push
jmp
sub
sub
jmp
push
push
pushl
pop
push
mov
add
add
xchg
mov
add
add
jmp
sub
pop
and
mov
add
shl
sub
jmp
pop
jmp
mov
push
jmp
dec
add
add
jmp
pop
push
jmp
pushl
pop
jmp
pop
xor
movzbw
pushw
mov
jmp
add
add
xchg
pop
add
jmp
push
mov
jmp
mov
mov
sub
shl
sub
add
push
mov
and
pop
inc
and
sub
and
mov
jmp
pop
jmp
xor
xor
xor
xor
jmp
mov
push
push
pop
add
add
xchg
pop
mov
jmp
mov
neg
jmp
sub
jmp
xchg
pop
push
push
mov
mov
pop
push
mov
mov
and
pop
sub
dec
inc
sub
mov
mov
add
pop
xor
xor
jmp
add
pushl
jmp
add
jmp
mov
add
sub
xchg
pop
jmp
xor
pop
shr
xor
add
jmp
pop
not
inc
jmp
push
mov
mov
sub
add
add
pop
xor
xor
xor
mov
shlb
pushf
jmp
add
add
xor
jmp
mov
mov
jmp
and
add
and
xchg
not
xchg
add
add
pop
xor
xor
xor
jmp
not
shl
jmp
push
jmp
add
jmp
push
push
mov
mov
mov
add
mov
pop
jmp
sub
jmp
mov
push
mov
push
mov
jmp
mov
pushl
jmp
xor
jmp
push
mov
shr
push
mov
jmp
xor
xor
pop
or
pushf
jmp
pop
push
mov
sub
pop
jmp
mov
add
jmp
mov
jmp
addl
push
mov
mov
add
mov
add
pop
pushl
mov
jmp
push
mov
jmp
push
mov
jmp
add
jmp
add
push
jmp
subl
push
mov
push
push
jmp
add
pop
mov
pop
xor
pushl
pop
jmp
sub
push
mov
sub
xor
neg
not
add
sub
sub
pop
add
sub
pop
jmp
mov
neg
add
and
pop
jmp
xchg
jmp
add
add
xchg
pop
and
pushl
pop
add
shr
jmp
sub
jmp
add
jmp
add
jmp
xor
mov
jmp
xor
mov
jmp
pop
add
jmp
shr
and
shr
or
jmp
mov
add
push
mov
sub
mov
mov
mov
jmp
shl
sub
jmp
add
mov
add
pop
push
mov
jmp
shr
add
shl
jmp
mov
push
mov
jmp
mov
jmp
add
push
pushl
pop
popl
jmp
mov
add
push
push
pop
push
jmp
sub
jmp
mov
jmp
push
mov
add
pop
add
xchg
pop
jmp
sub
sub
jmp
mov
pop
add
mov
add
mov
mov
add
xor
pop
pop
xor
push
push
jmp
mov
xor
or
sub
dec
add
add
jmp
shl
shr
push
jmp
sub
mov
pushw
mov
add
popw
jmp
add
mov
add
push
mov
mov
neg
sub
push
mov
and
pop
xor
add
pop
xchg
pop
rolb
pushf
jmp
shr
sub
add
jmp
addl
sub
jmp
add
jmp
add
xchg
pop
jmp
sub
jmp
xchg
pop
push
push
mov
jmp
xor
pop
jmp
mov
push
mov
push
subl
mov
push
mov
add
jmp
add
pop
push
mov
push
pop
add
pop
push
pushl
pop
jmp
or
jmp
mov
neg
and
shl
add
or
jmp
add
add
pop
xor
add
jmp
mov
push
jmp
xchg
pop
pop
push
jmp
add
jmp
pop
add
xchg
pop
jmp
push
push
pop
neg
add
sub
jmp
push
mov
jmp
xchg
pop
mov
jmp
push
mov
jmp
and
jmp
shl
xor
jmp
add
add
sub
sub
push
mov
sub
jmp
sub
and
and
add
inc
sub
sub
pop
add
add
add
push
mov
sub
mov
push
push
mov
jmp
pop
sub
pop
sub
jmp
push
pop
pop
jmp
push
pop
sub
jmp
mov
push
push
mov
mov
mov
add
sub
and
jmp
push
jmp
mov
add
pop
add
sub
add
jmp
mov
push
mov
jmp
mov
sub
jmp
push
mov
xor
mov
add
xor
pop
jmp
push
sub
pop
sub
sub
pop
jmp
neg
push
mov
xor
jmp
push
mov
jmp
mov
pop
jmp
add
mov
jmp
or
add
sub
mov
add
add
sub
add
jmp
push
mov
mov
add
add
sub
pop
add
push
mov
jmp
sub
pop
jmp
mov
add
add
xor
xor
xor
mov
jmp
mov
add
pop
sub
push
mov
shl
shr
add
add
pop
push
mov
push
mov
add
add
sub
push
mov
xor
push
incl
mov
jmp
pop
jmp
sub
push
mov
jmp
mov
jmp
add
sub
pop
push
mov
jmp
xor
xor
xor
xor
xor
pushl
pop
add
add
sub
sub
sub
mov
jmp
pop
sub
push
jmp
add
jmp
sub
jmp
mov
jmp
and
jmp
xor
add
sub
jmp
sub
pop
sub
xor
xor
jmp
pop
mov
mov
jmp
add
add
pop
mov
jmp
mov
add
add
xchg
pop
push
jmp
neg
jmp
push
mov
xor
xor
sub
jmp
push
jmp
push
mov
push
pop
dec
push
mov
xor
jmp
mov
neg
dec
and
sub
jmp
add
jmp
pop
sub
mov
mov
push
jmp
mov
add
pop
jmp
xchg
pop
mov
push
mov
add
add
push
mov
sub
add
add
pop
xor
xor
xor
jmp
add
push
jmp
xor
pop
push
jmp
pop
add
push
push
push
mov
add
jmp
pop
mov
mov
add
jmp
push
jmp
mov
jmp
mov
add
jmp
pushl
pushl
jmp
add
jmp
sub
mov
push
push
mov
push
mov
add
add
jmp
mov
shl
and
sub
sub
jmp
push
mov
push
mov
mov
xor
mov
add
add
xchg
not
xchg
xor
add
add
add
sub
sub
pop
movzbl
popl
jmp
add
push
mov
add
pop
xchg
mov
push
push
jmp
pop
jmp
sub
add
jmp
mov
jmp
push
mov
jmp
mov
pop
jmp
shr
jmp
xchg
jmp
push
pop
add
pop
add
pop
add
xor
xor
xor
pop
push
push
mov
mov
sub
xor
not
push
mov
sub
sub
jmp
mov
add
jmp
inc
sub
add
pop
add
jmp
push
push
push
pop
shr
inc
add
mov
pop
shl
push
mov
shr
sub
or
jmp
add
push
pushl
pop
popl
mov
imul
sub
mov
push
jmp
pop
push
mov
inc
sub
sub
dec
and
sub
add
pop
push
push
jmp
push
pop
push
mov
inc
sub
add
pop
push
push
pop
sub
mov
push
mov
add
add
jmp
sub
sub
add
pop
not
xor
shl
xor
sub
jmp
pop
add
pushl
pop
add
xchg
jmp
mov
push
mov
push
jmp
add
sub
push
mov
push
jmp
push
mov
sub
jmp
neg
jmp
popw
jmp
sub
jmp
shl
push
push
push
pop
or
and
push
mov
jmp
mov
push
jmp
push
mov
jmp
xor
dec
not
sub
add
jmp
add
add
mov
add
push
push
mov
mov
sub
pushl
pop
add
and
dec
sub
mov
notb
mov
add
jmp
add
mov
add
jmp
add
add
sub
pop
push
mov
push
push
pop
inc
add
mov
jmp
mov
mov
pop
pop
jmp
add
push
mov
mov
add
pop
xor
xor
xor
pop
push
mov
jmp
pushl
popf
pop
adc
pushf
jmp
add
push
jmp
mov
push
mov
mov
pop
push
sub
mov
mov
jmp
add
jmp
popl
jmp
mov
jmp
pop
jmp
pushl
pop
popl
pop
mov
pushl
pop
add
push
jmp
mov
jmp
push
push
pop
add
sub
sub
jmp
mov
jmp
sub
pop
xchg
pop
jmp
sub
jmp
add
jmp
mov
add
jmp
pop
push
push
mov
jmp
lods
jmp
mov
jmp
pop
jmp
mov
jmp
push
mov
dec
inc
add
sub
jmp
sub
pop
sub
add
jmp
xor
pop
jmp
mov
sub
pop
pop
add
jmp
shl
xor
mov
pop
and
pop
or
shl
pushl
push
jmp
push
pushl
mov
add
popl
mov
mov
jmp
add
pop
push
mov
jmp
add
pop
jmp
add
pop
add
push
jmp
pushl
mov
add
push
mov
mov
push
sub
mov
mov
inc
add
mov
pop
add
pop
push
mov
add
mov
push
mov
add
add
xchg
pop
xchg
mov
pushl
pop
push
mov
jmp
mov
jmp
push
push
mov
add
add
push
mov
sub
add
push
mov
inc
xor
push
jmp
add
jmp
mov
push
jmp
pop
sub
xchg
jmp
mov
add
mov
sub
sub
sub
push
mov
jmp
add
pop
sub
jmp
mov
jmp
push
mov
add
jmp
mov
push
push
pop
jmp
xor
or
push
mov
sub
and
add
add
pop
mov
jmp
sub
pop
sub
xor
jmp
pop
and
pushl
mov
add
add
shr
push
jmp
mov
or
add
add
sub
xor
add
jmp
pop
pushl
mov
add
add
push
mov
mov
push
subl
sub
addl
pushl
pushl
jmp
sub
mov
jmp
rolw
pushf
jmp
pop
add
push
mov
jmp
sub
mov
add
push
mov
push
mov
push
mov
jmp
subl
jmp
mov
mov
jmp
add
push
mov
shl
dec
jmp
not
xchg
mov
jmp
push
mov
xorl
mov
add
xor
jmp
add
mov
add
xor
popl
jmp
pop
push
mov
jmp
push
push
pop
sub
jmp
push
mov
add
add
xchg
pop
jmp
mov
jmp
pop
mov
mov
add
and
jmp
pop
jmp
add
sub
sub
pushl
jmp
push
pushl
pop
push
mov
add
add
jmp
mov
jmp
mov
mov
shl
jmp
pushl
jmp
push
jmp
pop
xor
pop
mov
pop
add
pop
and
xor
jmp
mov
push
push
pop
jmp
add
sub
xor
xor
jmp
inc
shr
add
add
mov
jmp
pop
popl
pop
mov
push
pop
jmp
mov
jmp
pushl
mov
push
mov
add
jmp
add
jmp
push
mov
jmp
pop
mov
pushl
mov
add
push
mov
push
mov
inc
or
shl
xor
add
pop
add
xchg
pop
pop
and
jmp
mov
push
mov
push
pop
push
mov
add
sub
xchg
pop
mov
push
pop
add
mov
add
push
mov
add
mov
add
xchg
mov
pushl
pushl
jmp
add
pushl
pushl
pop
jmp
push
mov
sub
pop
add
push
mov
push
mov
add
mov
add
jmp
push
pop
sub
jmp
not
jmp
push
push
push
jmp
mov
jmp
xor
xor
pop
mov
push
mov
push
mov
addl
jmp
add
jmp
add
and
pop
not
jmp
sub
mov
push
push
pop
push
jmp
pop
jmp
pop
sub
sub
pop
push
jmp
mov
mov
push
mov
push
pop
jmp
xor
jmp
add
jmp
notw
mov
add
sub
mov
mov
jmp
mov
push
mov
or
sub
add
jmp
mov
jmp
push
mov
add
mov
add
add
push
mov
inc
push
mov
dec
xor
xor
jmp
push
push
mov
add
sub
xchg
pop
mov
sub
mov
push
mov
mov
sub
pop
add
mov
pop
mov
push
mov
add
jmp
sub
sub
xor
xor
xor
jmp
sub
jmp
mov
push
mov
add
add
xchg
pop
xor
push
mov
add
add
shr
inc
sub
sub
sub
pop
add
and
mov
add
jmp
add
pop
jmp
push
push
pop
shl
inc
neg
neg
and
sub
jmp
shr
xor
mov
pop
sub
add
add
pushl
push
push
push
mov
add
neg
xor
mov
jmp
add
mov
jmp
push
notl
pop
xchg
and
sub
mov
pop
shr
and
or
jmp
push
jmp
and
push
jmp
push
mov
jmp
mov
add
push
push
push
mov
neg
add
not
jmp
dec
push
mov
jmp
add
add
pop
push
mov
add
pop
xor
xor
xor
pop
roll
pushf
jmp
mov
add
add
xchg
pop
push
jmp
xor
jmp
pop
xor
sub
jmp
shl
add
xor
pop
sub
sub
jmp
add
push
push
pop
jmp
push
mov
xor
sub
sub
add
jmp
mov
mov
pop
mov
add
add
pop
push
mov
xor
add
pop
xchg
mov
movzbw
pushw
mov
jmp
add
sub
mov
pop
sub
xor
and
or
jmp
neg
dec
sub
jmp
xor
mov
add
not
add
push
mov
dec
or
shr
not
add
jmp
push
mov
jmp
shr
shl
or
and
sub
add
sub
sub
pop
or
sub
add
jmp
push
mov
add
add
add
sub
mov
add
xor
jmp
mov
mov
jmp
and
shr
sub
mov
pop
add
sub
add
add
jmp
pop
jmp
add
sub
jmp
neg
sub
add
pop
mov
sub
mov
push
mov
add
add
xchg
pop
jmp
push
push
jmp
sub
add
add
pop
xor
xor
xor
jmp
mov
add
jmp
or
je
sub
jmp
pushl
mov
add
push
mov
mov
push
push
sub
mov
mov
xor
mov
pop
push
mov
jmp
add
add
add
pop
add
xor
jmp
shr
jmp
push
push
pop
not
push
push
push
pop
shl
add
mov
jmp
sub
xchg
pop
mov
push
mov
jmp
xor
mov
btc
pushf
jmp
mov
push
mov
sub
mov
mov
shl
add
not
push
jmp
add
push
mov
add
pushl
pop
add
add
jmp
dec
jmp
xchg
mov
mov
push
mov
jmp
add
jmp
or
jmp
jmp
sub
jmp
push
mov
add
pop
jmp
push
mov
mov
add
push
mov
shr
jmp
mov
xor
jmp
mov
pop
add
pop
add
jmp
add
add
push
mov
jmp
shl
shl
add
sub
mov
add
add
add
sub
jmp
add
pop
push
jmp
mov
xor
pop
push
mov
add
jmp
sub
subl
pop
jmp
push
mov
jmp
sub
pop
jmp
jmp
sub
or
pop
jmp
xor
jmp
push
mov
push
mov
jmp
add
pop
add
mov
push
mov
jmp
mov
mov
mov
add
sub
add
add
pop
jmp
mov
add
push
mov
add
pop
jmp
jmp
mov
add
sub
jmp
mov
push
mov
jmp
push
push
jmp
pushl
pop
push
mov
push
jmp
sub
inc
push
mov
or
mov
add
push
jmp
push
mov
shr
jmp
mov
jmp
mov
add
push
jmp
sub
add
add
pop
mov
add
jmp
mov
sub
add
mov
add
mov
add
push
mov
pushw
jmp
add
jmp
pop
add
jmp
mov
movzbw
push
pushf
jmp
not
add
not
sub
sub
add
add
pop
add
pop
sub
jmp
xor
xchg
push
xchg
not
push
jmp
add
mov
add
add
pop
xchg
pop
sub
pushf
jmp
sub
dec
sub
push
mov
xor
pop
sub
jmp
jmp
mov
mov
pop
pop
add
pop
push
mov
mov
add
pop
xor
jmp
pop
jmp
add
xor
xor
xor
pop
pop
jmp
push
jmp
inc
and
and
push
jmp
add
pop
xchg
pop
sub
jmp
pop
add
jmp
pushl
pop
push
mov
add
add
push
pushl
jmp
sub
sub
mov
xor
jmp
mov
and
sub
add
xor
pop
xor
xor
pop
mov
pop
jmp
push
pop
pop
or
mov
push
mov
mov
push
mov
add
pop
jmp
mov
add
pop
inc
xor
or
pop
or
jmp
pop
mov
pushl
jmp
sub
push
mov
jmp
xor
pop
push
notl
pop
sub
jmp
sub
add
push
mov
sub
sub
pop
push
mov
pushw
mov
mov
and
mov
add
shl
add
jmp
mov
jmp
sub
mov
mov
shl
sub
jmp
jmp
sub
jmp
pushl
mov
add
add
jmp
push
mov
sub
pop
jmp
negw
pushf
jmp
mov
pop
neg
jmp
xor
pop
cmp
pushf
jmp
push
mov
and
dec
xor
jmp
sub
add
and
pop
sub
add
add
jmp
push
jmp
mov
mov
sub
shr
shl
sub
add
jmp
neg
xor
add
add
sub
mov
jmp
pop
dec
sub
add
pop
sub
jmp
shl
shl
push
mov
jmp
sub
mov
mov
push
mov
jmp
dec
jmp
pop
sub
mov
add
ret
jmp
push
pop
jmp
mov
xor
pushl
pop
jmp
add
add
pop
push
jmp
add
push
mov
add
add
xor
add
add
add
push
mov
sub
sub
jmp
add
push
mov
mov
add
jmp
jmp
sub
add
pop
xor
jmp
lods
cmpl
je
push
mov
mov
add
pop
add
push
mov
add
xor
push
mov
sub
pop
sub
jmp
sub
sub
add
mov
jmp
xchg
pop
xor
jmp
push
push
pop
shl
shr
jmp
neg
xor
jmp
xor
pop
jmp
push
mov
xor
mov
add
mov
jmp
shr
sub
mov
pop
and
pop
jmp
sub
add
pop
jmp
push
mov
mov
sub
jmp
mov
jmp
xorl
pop
xor
pop
add
add
jmp
shl
xor
add
and
jmp
pushl
mov
add
popl
pop
push
mov
sub
mov
sub
mov
mov
add
jmp
or
je
push
pushl
mov
jmp
mov
jmp
push
mov
or
add
add
xor
mov
pop
mov
mov
add
add
push
mov
add
mov
pop
jmp
mov
xor
jmp
mov
jmp
mov
mov
add
pop
xor
mov
add
jmp
sub
pop
add
mov
add
add
add
push
mov
push
mov
jmp
sub
pop
add
xchg
pop
shll
pushf
jmp
push
push
jmp
pushl
pop
jmp
push
mov
add
add
jmp
push
mov
jmp
not
neg
jmp
pushl
mov
jmp
push
mov
jmp
add
add
xchg
pop
add
push
jmp
pop
add
push
mov
sub
add
pop
add
jmp
add
add
xchg
pop
and
mov
add
or
shl
push
push
jmp
add
add
xchg
mov
xor
xor
xor
pop
jmp
add
mov
pop
add
pop
xchg
mov
imul
push
mov
push
pushf
jmp
push
jmp
push
mov
neg
jmp
push
mov
sub
pop
inc
jmp
add
pop
add
movzbl
mov
push
push
pop
jmp
push
jmp
pop
add
add
add
pop
jmp
push
jmp
dec
dec
push
mov
add
jmp
mov
sub
mov
add
push
jmp
add
jmp
xor
mov
pop
add
pop
add
jmp
add
addw
subw
pop
jmp
pop
xor
jmp
push
jmp
mov
pop
not
inc
jmp
pop
mov
jmp
mov
pop
xor
pop
sub
pushl
mov
push
mov
push
jmp
add
sub
jmp
lods
push
jmp
push
push
pushw
pop
neg
not
xor
push
mov
mov
pop
mov
add
add
add
sub
pop
jmp
push
mov
jmp
pop
add
pop
xchg
pop
sub
jmp
neg
jmp
sub
mov
mov
xchg
inc
push
push
pop
jmp
pop
add
xchg
jmp
add
pop
push
mov
mov
jmp
dec
jmp
push
mov
push
jmp
mov
addl
pushl
mov
jmp
add
push
pushl
pushl
jmp
sub
pop
jmp
not
push
jmp
pop
add
add
sub
sub
mov
add
push
push
pop
add
mov
jmp
pop
jmp
mov
push
mov
jmp
lods
xor
push
mov
inc
pushw
jmp
pop
add
pop
sub
push
mov
jmp
sub
push
push
mov
mov
jmp
add
xor
xor
xor
mov
jmp
sub
mov
mov
add
jmp
push
mov
jmp
push
jmp
add
jmp
mov
jmp
push
pop
inc
not
jmp
sub
add
push
push
push
jmp
mov
pop
pop
pop
inc
shr
push
jmp
sub
push
mov
xor
jmp
add
mov
jmp
lods
push
mov
mov
add
add
sub
pop
jmp
sub
pop
push
jmp
pushl
popf
pop
rclb
pushf
jmp
sub
add
add
sub
mov
add
push
push
mov
mov
pop
jmp
push
pushl
pushl
pop
add
popl
pop
jmp
mov
sub
add
add
jmp
xor
push
xorl
pop
xor
jmp
push
mov
sub
pop
add
add
mov
add
add
xchg
jmp
and
pop
or
shl
sub
jmp
mov
inc
xor
add
pop
push
mov
inc
add
or
inc
xor
add
sub
jmp
add
sub
pop
jmp
add
jmp
add
jmp
add
push
mov
sub
pop
jmp
push
mov
neg
sub
inc
add
add
pop
jmp
pop
add
xchg
mov
rorl
pushf
jmp
shr
and
add
or
add
sub
mov
add
jmp
pushl
jmp
sub
sub
jmp
push
push
mov
xchg
not
xchg
jmp
mov
add
mov
push
mov
mov
push
jmp
push
mov
jmp
mov
add
shl
xchg
not
xchg
jmp
push
mov
mov
jmp
pop
add
dec
jmp
pop
push
mov
pushl
pushl
mov
add
add
jmp
pop
push
sub
mov
addl
pushl
jmp
pop
xchg
jmp
pop
xor
jmp
xchg
pop
jmp
pop
add
add
sub
pop
xchg
pop
shrb
pushf
jmp
mov
push
pushl
pop
push
mov
add
add
jmp
mov
push
pop
not
add
jmp
sub
sub
add
sub
sub
add
add
pop
jmp
mov
push
mov
push
mov
jmp
pop
add
pop
push
mov
push
mov
mov
pop
jmp
mov
pop
add
mov
add
push
mov
shr
push
mov
dec
neg
jmp
add
mov
jmp
push
jmp
add
sub
mov
push
jmp
push
jmp
mov
mov
push
mov
jmp
push
mov
jmp
pop
add
pop
shl
sub
sub
jmp
add
push
mov
xor
sub
sub
jmp
pop
jmp
xchg
pop
push
jmp
add
pop
jmp
mov
push
mov
mov
jmp
add
add
sub
pop
sub
add
add
sub
push
push
push
mov
mov
sub
pop
shr
xor
sub
dec
jmp
push
push
mov
jmp
push
mov
mov
pop
add
mov
mov
jmp
push
mov
mov
add
jmp
pop
or
jne
push
mov
push
pushl
mov
push
push
pop
add
add
xchg
jmp
add
jmp
shl
jmp
sub
xchg
pop
mov
jmp
mov
mov
jmp
pop
jmp
mov
push
mov
push
jmp
push
jmp
add
xchg
mov
push
mov
sub
mov
jmp
mov
push
jmp
sub
sub
pop
push
mov
jmp
sub
sub
push
mov
mov
jmp
add
xchg
pop
xor
and
pop
jmp
pop
pop
jmp
mov
push
mov
sub
mov
jmp
push
push
pop
jmp
mov
push
mov
mov
sub
add
jmp
sub
jmp
sub
sub
push
jmp
add
add
pop
push
mov
mov
not
neg
dec
shr
shr
push
mov
add
pop
add
jmp
xchg
mov
jmp
mov
mov
add
add
add
sub
jmp
push
pushl
pop
popl
jmp
xor
jmp
add
pop
add
sub
jmp
add
pop
add
pop
push
mov
add
jmp
mov
mov
neg
push
push
push
jmp
not
jmp
push
mov
mov
mov
add
sub
sub
add
pop
mov
pushl
pop
jmp
mov
jmp
and
pop
not
shl
and
sub
jmp
notb
pop
xor
jmp
mov
sub
jmp
xor
pop
push
jmp
push
jmp
push
mov
add
pop
pushw
jmp
xor
xor
xor
jmp
pop
add
xchg
mov
sub
pushl
pop
add
push
mov
xor
and
jmp
sub
mov
jmp
addl
pushl
pop
add
push
mov
inc
not
xor
neg
jmp
xor
xor
add
mov
add
sub
mov
pop
and
jmp
sub
dec
sub
add
pop
or
shl
add
jmp
mov
inc
shr
push
mov
sub
sub
add
mov
add
jmp
push
popl
jmp
push
jmp
pop
add
mov
push
mov
push
mov
shl
sub
xor
and
inc
push
mov
add
pop
add
jmp
xchg
jmp
popl
pop
jmp
mov
add
push
mov
jmp
or
pop
and
xor
add
pop
add
xor
xor
xor
mov
movsbl
push
mov
jmp
xor
add
jmp
sub
add
pop
push
mov
push
mov
jmp
pop
mov
mov
sub
xchg
mov
add
push
mov
add
add
sub
xorl
pop
push
mov
add
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
dec
sub
and
pop
sub
push
mov
jmp
sub
mov
add
xor
jmp
push
mov
xor
dec
neg
not
sub
jmp
sub
add
add
jmp
shr
push
notl
pop
jmp
pushl
pushl
mov
add
add
sub
mov
jmp
mov
push
sub
push
popl
jmp
add
pop
xor
jmp
push
pop
push
jmp
add
sub
add
add
sub
push
jmp
popl
jmp
pop
push
push
jmp
shr
jmp
sub
jmp
mov
add
push
pushl
pop
popl
mov
mov
sub
mov
jmp
sub
shl
jmp
pop
push
mov
jmp
sub
xchg
pop
mov
push
mov
sub
jmp
mov
jmp
sub
add
pop
pop
push
mov
push
mov
mov
sub
pop
add
sub
sub
push
jmp
mov
sub
jmp
mov
push
mov
add
pop
push
mov
add
pop
xchg
mov
jmp
push
notl
pop
xchg
shr
or
dec
jmp
not
jmp
mov
xor
pop
push
push
push
pop
xor
mov
pushl
mov
add
add
sub
add
add
pop
and
jmp
pushl
jmp
pop
pushl
pop
sub
jmp
add
jmp
mov
and
pop
sub
add
pop
sub
push
mov
push
mov
neg
add
jmp
push
push
mov
push
mov
mov
jmp
push
mov
xor
mov
push
push
mov
addl
jmp
pop
or
je
pushl
jmp
mov
mov
add
pop
jmp
and
pushl
mov
add
jmp
pop
add
xor
jmp
mov
jmp
push
mov
jmp
xor
pushf
jmp
mov
pushw
mov
add
jmp
shl
and
or
dec
jmp
mov
add
sub
push
mov
add
pop
add
sub
push
mov
add
pop
jmp
xchg
or
not
shl
shr
sub
sub
pop
add
add
pop
xor
xor
xor
mov
jmp
xor
jmp
addl
jmp
mov
push
jmp
pop
jmp
add
add
push
mov
jmp
sub
mov
sub
mov
push
push
push
mov
or
add
mov
pop
mov
pop
mov
pop
shl
add
neg
push
jmp
xor
jmp
sub
push
mov
xor
add
jmp
mov
add
add
xchg
pop
xchg
mov
push
mov
push
mov
add
push
mov
sub
pop
jmp
sub
add
add
pop
jmp
xor
mov
mov
push
mov
mov
add
pop
xor
mov
add
push
mov
jmp
sub
pop
xor
jmp
sub
pop
jmp
add
jmp
add
jmp
pop
xor
sub
mov
push
mov
jmp
pop
and
sub
add
mov
pop
push
mov
neg
inc
sub
shl
jmp
pushl
jmp
mov
push
push
jmp
add
add
xchg
jmp
pop
add
jmp
xor
xor
mov
push
mov
push
mov
mov
jmp
pop
jmp
xor
jmp
sub
mov
mov
push
mov
push
pop
not
jmp
pushl
jmp
push
mov
jmp
add
sub
sub
jmp
mov
push
push
jmp
mov
shl
add
sub
pop
inc
add
jmp
sub
xor
xor
xor
pop
mov
push
push
jmp
add
pop
add
jmp
pop
jmp
push
pop
sub
mov
jmp
add
pop
sub
xor
xor
jmp
subl
pop
push
mov
add
sub
xchg
pop
mov
jmp
pop
add
xor
jmp
xchg
not
xchg
jmp
inc
push
mov
jmp
add
add
mov
add
neg
push
jmp
sub
mov
jmp
xor
mov
jmp
sub
add
add
pushl
jmp
xor
xor
mov
imul
jmp
pop
push
mov
sub
pop
jmp
mov
pop
push
jmp
add
popl
jmp
not
add
sub
jmp
push
jmp
mov
jmp
mov
rorb
pushf
jmp
pop
popl
mov
jmp
mov
push
jmp
push
push
mov
mov
jmp
pop
jmp
push
mov
jmp
add
add
xchg
jmp
xchg
jmp
popl
push
mov
shl
dec
dec
jmp
shl
and
push
push
mov
mov
pop
push
mov
sub
mov
pop
xor
sub
add
add
mov
add
xor
and
mov
push
mov
jmp
dec
neg
push
push
pop
jmp
pop
xchg
pop
push
mov
xor
pop
jmp
pushl
pop
add
popl
pop
sarb
pushf
jmp
push
mov
dec
jmp
push
push
pop
add
add
xor
xor
xor
jmp
add
or
je
pushl
jmp
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
push
jmp
sub
mov
push
pop
push
jmp
push
jmp
push
mov
mov
pop
sub
jmp
or
sub
or
pop
sub
and
neg
shl
shl
xor
jmp
mov
jmp
mov
jmp
dec
push
jmp
negl
pushf
jmp
pop
add
xchg
pop
decl
pushf
jmp
mov
add
add
xchg
pop
push
pushl
mov
add
jmp
mov
and
pushf
jmp
push
pop
push
jmp
mov
addl
add
subl
pop
pop
sub
mov
jmp
sub
add
sub
sub
add
mov
push
mov
add
push
mov
add
pop
xchg
pop
sub
push
mov
jmp
sub
mov
add
shl
push
mov
mov
jmp
mov
jmp
sub
mov
mov
add
pop
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
push
mov
jmp
add
push
sub
mov
mov
push
mov
jmp
mov
add
mov
add
push
mov
push
jmp
pop
jmp
xor
push
pop
jmp
add
pop
jmp
pushl
pop
add
popl
mov
add
push
push
jmp
mov
add
jmp
add
xor
mov
pop
shl
and
neg
sub
add
pushl
mov
add
push
push
push
popl
addl
pop
add
jmp
sub
add
add
pop
jmp
pop
push
mov
mov
add
add
push
mov
sub
mov
jmp
addl
mov
push
mov
jmp
mov
sub
mov
push
pop
add
sub
mov
push
push
mov
mov
sub
jmp
shr
sub
sub
jmp
add
push
mov
jmp
pop
xor
sub
add
jmp
mov
mov
pop
pushl
jmp
pushl
pop
push
mov
add
sub
jmp
push
xorl
pop
xor
jmp
mov
jmp
add
add
push
push
jmp
shr
jmp
push
xchg
dec
xchg
pop
shl
push
mov
jmp
mov
jmp
mov
pop
add
add
sub
mov
add
xchg
pop
xor
pushf
jmp
add
sub
pop
add
jmp
push
mov
sub
pop
add
push
jmp
sub
sub
jmp
jmp
push
pushf
jmp
xor
and
pop
shr
sub
jmp
add
jmp
shr
jmp
mov
push
mov
push
mov
sub
add
push
mov
add
pop
pop
jmp
push
mov
push
mov
not
mov
pop
shl
xor
jmp
shr
and
and
push
mov
and
jmp
or
push
mov
and
pop
neg
add
sub
jmp
xchg
add
xchg
shl
push
mov
sub
sub
pop
xor
pop
push
mov
inc
jmp
neg
xor
add
pop
add
sub
pop
sub
pop
jmp
lods
push
mov
dec
xor
jmp
mov
push
jmp
xchg
jmp
xor
pop
sub
or
pop
sub
xor
mov
push
mov
add
push
mov
add
pop
xchg
pop
push
jmp
mov
sub
push
popl
addl
pop
add
add
xchg
mov
div
push
mov
add
push
jmp
mov
add
sub
xchg
pop
mov
mov
add
jmp
push
mov
add
pop
pushl
mov
jmp
mov
add
add
xchg
pop
sub
jmp
pop
jmp
push
mov
mov
add
push
push
mov
mov
mov
jmp
add
mov
add
add
sub
jmp
push
mov
jmp
pop
jmp
push
push
mov
jmp
mov
jmp
mov
pop
add
pop
push
mov
pushl
pop
popl
mov
jmp
pop
dec
not
push
sub
pop
add
push
push
xorl
jmp
xor
jmp
mov
jmp
mov
add
push
mov
mov
add
jmp
shl
shr
sub
add
pop
sub
sub
add
pop
sub
pop
add
pop
jmp
xor
add
jmp
push
notb
jmp
and
pushl
mov
add
push
mov
jmp
sub
pop
xchg
pop
jmp
add
sub
jmp
pop
push
mov
jmp
add
add
xchg
pop
or
je
push
jmp
sub
pop
add
mov
pop
neg
sub
jmp
xchg
pop
add
add
xor
jmp
pop
add
jmp
add
xchg
jmp
sub
mov
mov
push
mov
xorl
pop
push
mov
mov
jmp
add
push
mov
push
jmp
sub
sub
jmp
add
sub
sub
push
jmp
pop
pop
sub
sub
add
push
mov
jmp
addl
sub
subl
jmp
lods
jmp
add
push
mov
jmp
dec
not
push
mov
not
sub
not
sub
xor
xor
and
pop
sub
sub
mov
jmp
not
xor
xor
xor
xor
xor
xor
push
sub
mov
mov
sub
push
push
sub
jmp
mov
xor
not
jmp
add
pop
sub
push
jmp
mov
mov
push
mov
add
jmp
mov
push
push
pop
push
mov
add
pop
sub
xchg
pop
mov
push
sub
mov
addl
popl
push
mov
add
pop
pop
add
jmp
mov
sub
sub
add
pushl
pop
add
xor
xor
jmp
add
add
sub
mov
push
mov
add
shr
and
jmp
mov
jmp
mov
add
shr
jmp
sub
jmp
add
push
push
push
pop
sub
jmp
shr
push
push
pop
jmp
add
mov
add
sub
sub
add
sub
pop
xor
xor
jmp
add
jmp
sub
add
pop
add
push
mov
neg
jmp
add
add
jmp
mov
jmp
mov
push
jmp
pop
sub
xor
sub
jmp
pop
mov
jmp
add
push
mov
sub
pop
xor
xor
jmp
pop
jmp
add
push
mov
sub
jmp
div
movzbw
push
jmp
pop
add
jmp
mov
mov
add
push
jmp
pop
mov
pop
pushl
pop
push
jmp
add
sub
xchg
pop
mov
popl
pop
push
jmp
add
or
jmp
shr
jmp
pushw
mov
push
push
mov
push
mov
mov
jmp
push
mov
add
jmp
mov
sub
jmp
mov
jmp
xor
mov
pop
add
pop
xchg
mov
shlw
pushf
jmp
add
pop
sub
xchg
pop
mov
jmp
pushl
jmp
pop
inc
add
mov
pop
xor
pop
jmp
mov
sub
mov
pushl
pushl
pop
add
add
mov
add
xchg
not
xor
xor
xor
xor
xor
xor
push
jmp
pushl
popf
pop
rcrl
pushf
jmp
or
add
add
jmp
pop
push
push
mov
mov
sub
mov
pushl
pop
add
add
pop
xor
xor
xor
pop
push
mov
push
jmp
add
sub
pop
pushl
pop
jmp
xor
pop
mov
jmp
sub
add
jmp
mov
push
jmp
pop
xchg
mov
div
pushw
jmp
add
pop
jmp
xor
mov
shrw
pushf
jmp
push
mov
add
pop
add
mov
add
push
mov
mov
jmp
neg
or
neg
add
add
pop
mov
pop
sub
push
push
jmp
shl
neg
add
jmp
add
add
pushl
pop
add
push
mov
xor
xor
jmp
pop
push
jmp
pop
push
jmp
pop
sub
push
mov
inc
sub
and
xor
sub
jmp
sub
add
sub
pop
add
push
mov
add
pop
sub
sub
pop
shr
push
mov
dec
not
neg
jmp
mov
mov
add
pop
jmp
popl
pop
rorw
pushf
jmp
mov
sub
push
mov
sub
jmp
pop
jmp
mov
jmp
add
pop
jmp
sub
xchg
pop
jmp
add
push
pushl
jmp
xchg
pop
mov
jmp
and
xor
xor
pop
jmp
xchg
jmp
pop
jmp
pushl
xorl
pushl
pop
sub
mov
mov
add
jmp
pop
jmp
add
jmp
mov
sub
sub
mov
mov
add
add
shr
jmp
pop
sub
add
add
jmp
pushl
pop
add
add
add
sub
mov
add
push
mov
add
pop
xor
xor
jmp
shr
push
mov
xor
jmp
mov
sub
xchg
pop
xor
jmp
mov
jmp
add
add
jmp
mov
jmp
mov
add
sub
xchg
mov
mov
push
mov
mov
pop
jmp
pop
push
mov
add
pop
push
jmp
xor
add
sub
add
add
mov
jmp
pop
xchg
pop
mov
add
pop
xor
or
push
notb
pop
push
jmp
add
push
mov
push
mov
jmp
sub
xchg
pop
mov
mov
add
pop
xchg
mov
cmp
pushf
jmp
pop
sub
add
add
sub
sub
sub
pushl
jmp
add
xor
mov
jmp
pop
inc
shr
sub
and
pop
jmp
sub
mov
mov
sub
pop
jmp
push
jmp
add
add
push
mov
pushl
pop
popl
jmp
xor
add
add
sub
pop
sub
sub
push
mov
add
jmp
popl
jmp
pop
jmp
pop
add
pop
push
mov
jmp
mov
mov
add
add
add
sub
mov
add
or
pop
not
jmp
mov
mov
jmp
xor
shl
sub
add
sub
pop
jmp
mov
push
jmp
mov
and
jmp
mov
xor
sub
jmp
pushl
jmp
add
xor
sub
add
or
jmp
add
and
pop
shr
xor
push
push
pop
pop
xor
xor
xor
push
push
pop
pop
push
notl
pop
jmp
mov
jmp
sub
add
mov
add
add
xchg
pop
pushl
pop
add
add
jmp
add
pop
jmp
lods
xor
jmp
mov
jmp
mov
mul
push
jmp
push
jmp
add
push
mov
jmp
popw
jmp
notb
pop
push
push
mov
xor
mov
pop
add
mov
add
jmp
pop
sub
pushl
pushl
pop
add
push
push
pop
push
mov
shl
shl
shr
jmp
mov
xchg
not
xchg
add
sub
not
xor
jmp
sub
add
add
pushl
pop
add
jmp
mov
push
jmp
xchg
pop
sub
add
push
mov
xor
add
pop
mov
mov
jmp
push
mov
jmp
pop
add
add
pop
push
jmp
mov
mov
sub
mov
mov
push
mov
and
push
mov
sub
jmp
xor
add
mov
add
add
sub
mov
add
jmp
mov
or
jmp
add
add
jmp
pop
xor
xor
xor
mov
popl
push
jmp
mov
and
xor
jmp
sub
jmp
shl
sub
shr
jmp
add
push
mov
push
pop
add
jmp
push
push
mov
mov
pop
push
mov
push
mov
mov
pushl
jmp
sub
shr
not
xchg
push
notl
pop
xchg
jmp
pop
popl
mov
sub
mov
mov
add
add
jmp
push
mov
or
push
mov
not
add
shl
sub
sub
pop
or
pop
shl
push
mov
or
jmp
mov
jmp
add
pop
sub
pop
movzbl
jmp
popa
ret
pushl
mov
push
jmp
sub
jmp
push
pop
shr
add
jmp
pop
xor
pop
jmp
add
pop
xchg
mov
idiv
movzbw
pushw
jmp
mov
sub
jmp
pushl
mov
add
push
mov
push
mov
push
mov
add
add
xchg
pop
jmp
mov
jmp
push
pop
add
mov
pop
and
mov
push
mov
push
mov
shl
inc
add
sub
add
jmp
mov
jmp
push
jmp
push
jmp
pop
xor
xor
xor
mov
mov
jmp
and
inc
add
shr
shr
push
mov
jmp
sub
mov
jmp
add
jmp
push
mov
add
sub
sub
mov
push
jmp
push
mov
sub
mov
mov
xor
pop
pop
jmp
mov
push
mov
jmp
pop
add
push
mov
mov
pop
pop
pop
jmp
pop
sub
mov
mov
add
mov
jmp
xchg
not
xchg
shr
push
push
jmp
pushl
pop
jmp
mov
push
mov
add
pop
push
jmp
mov
pop
mov
add
jmp
sub
push
mov
mov
pop
pop
add
pushl
pop
push
mov
add
add
xchg
pop
xor
jmp
add
pop
sub
jmp
sub
jmp
pushl
popf
pop
adc
pushf
jmp
mov
add
push
mov
add
pop
push
pushl
pop
popl
jmp
add
jmp
lods
push
push
mov
mov
mov
mov
add
jmp
xor
pop
sub
add
add
sub
push
mov
jmp
add
jmp
push
mov
neg
or
jmp
xor
pop
jmp
add
jmp
push
mov
shr
push
mov
or
pop
jmp
mov
push
mov
jmp
add
add
pop
add
push
pushl
pop
popl
mov
pushl
pushl
pop
jmp
lods
jmp
mov
add
xor
pop
not
add
xor
jmp
push
mov
mov
xor
jmp
shr
shl
xor
add
pop
push
jmp
pushw
mov
jmp
dec
jmp
mov
addl
pop
sub
mov
mov
sub
add
add
pushl
pop
push
mov
add
jmp
pop
pop
push
mov
shl
shl
xor
sub
pop
sub
sub
add
add
add
add
sub
mov
jmp
pushl
popf
pop
rcrb
pushf
jmp
pop
sub
jmp
dec
xor
add
pop
push
push
mov
push
jmp
sub
xchg
pop
mov
push
push
pop
add
push
addl
pop
sub
jmp
and
xor
xor
mov
push
jmp
push
mov
push
pop
push
mov
push
mov
xor
pop
jmp
addl
jmp
sub
push
mov
sub
sub
jmp
subl
jmp
pop
mov
pushl
jmp
mov
mov
xorl
popl
xorl
jmp
mov
push
jmp
lods
jmp
mov
addl
mov
jmp
mov
push
jmp
push
push
push
pop
push
addl
jmp
or
jmp
and
pop
sub
xor
mov
push
mov
add
add
xchg
pop
push
mov
sub
jmp
add
add
sub
mov
push
jmp
or
xor
xor
mov
push
mov
add
jmp
pop
jmp
pop
add
pop
push
mov
add
pop
xchg
mov
jmp
push
mov
push
mov
push
addl
pop
jmp
add
pop
sub
jmp
xchg
jmp
push
mov
jmp
push
jmp
sub
jmp
add
rep
add
sub
mov
mov
mov
jmp
mov
push
jmp
mov
jmp
add
pop
jmp
mov
jmp
shr
inc
dec
xor
or
xor
jmp
add
mov
jmp
sub
jmp
add
add
add
xchg
mov
and
pushf
jmp
sub
pop
push
mov
and
jmp
mov
add
pop
add
pop
sub
pop
inc
and
sub
sub
pop
sub
add
add
jmp
add
subl
push
jmp
addl
mov
add
push
jmp
add
mov
jmp
mov
push
push
pop
dec
xor
jmp
mov
add
jmp
or
pop
add
not
not
xor
sub
mov
add
push
jmp
mov
jmp
shl
xchg
not
xchg
push
mov
jmp
pop
add
mov
add
jmp
push
mov
add
sub
mov
mov
jmp
add
mov
add
push
jmp
sub
mov
pop
push
addl
pop
sub
jmp
pushl
pop
push
jmp
xor
not
xchg
xor
add
add
sub
pop
sub
push
pushl
pop
popl
pop
mov
movzbw
push
pushf
jmp
pop
jmp
add
mov
add
push
mov
jmp
pop
sub
jmp
xor
jmp
mov
add
sub
add
jmp
add
xor
mov
add
or
jmp
pop
jmp
add
add
xor
xor
sub
pop
mov
add
sub
jmp
sub
add
pop
push
mov
jmp
pop
sub
jmp
mov
jmp
mov
add
jmp
not
add
add
xor
pushl
jmp
xor
add
sub
jmp
sub
pop
mov
add
jmp
mov
not
sub
jmp
pop
inc
sub
jmp
push
mov
jmp
pop
jmp
mov
sub
add
jmp
xor
pop
sub
sub
push
jmp
shr
xor
xor
push
mov
jmp
xor
mov
mov
jmp
mov
jmp
push
pop
push
mov
inc
xor
add
pop
add
xchg
jmp
push
jmp
mov
push
push
mov
jmp
xchg
pop
jmp
shr
push
mov
xor
pop
add
pop
push
mov
jmp
add
sub
sub
push
mov
jmp
mov
push
mov
mov
mov
mov
add
mov
sub
jmp
xor
xor
add
pop
push
jmp
pop
sub
mov
jmp
push
mov
and
neg
jmp
neg
neg
or
or
jmp
imul
push
pushf
jmp
mov
jmp
push
push
mov
and
sub
shl
jmp
pop
jmp
push
mov
push
mov
and
pop
jmp
push
mov
sub
pop
pop
xor
xor
xor
pop
movzwl
push
jmp
xchg
pop
xchg
pop
push
mov
push
push
mov
sub
mov
sub
mov
mov
push
mov
jmp
mov
subl
subl
add
jmp
push
mov
push
mov
sub
add
add
pop
sub
xchg
pop
mov
jmp
mov
jmp
xchg
pop
sub
pushf
jmp
mov
add
pop
xor
xor
xor
pop
jmp
pop
add
add
xchg
pop
jmp
xchg
mov
idiv
sub
mov
jmp
push
jmp
add
shr
jmp
add
mov
add
add
sub
jmp
lods
xor
push
mov
push
push
jmp
inc
xor
neg
sub
jmp
mov
sub
not
shl
xor
and
pop
or
sub
sub
jmp
mov
add
push
push
mov
push
push
pop
pop
push
mov
push
jmp
mov
push
pop
mov
pop
jmp
add
jmp
sub
mov
push
mov
dec
sub
mov
jmp
pop
xor
xor
jmp
mov
mov
xor
pushl
pop
add
or
shl
shl
jmp
pop
sub
jmp
mov
jmp
push
mov
sub
jmp
pushl
pop
add
and
jmp
push
mov
jmp
sub
xor
xor
jmp
mov
sub
pop
mov
jmp
push
mov
neg
inc
push
jmp
push
sub
push
popl
push
mov
add
pop
mov
jmp
pop
sub
mov
push
mov
mov
shl
push
mov
jmp
lods
sub
mov
push
mov
or
and
inc
sub
push
pop
pop
push
mov
dec
add
and
sub
sub
mov
push
mov
add
add
xchg
pop
add
jmp
push
mov
sub
or
not
dec
jmp
jmp
mov
add
xchg
mov
movzbw
push
sub
jmp
pop
add
sub
jmp
not
push
mov
xor
add
jmp
add
jmp
xor
jmp
mov
add
jmp
xor
pop
mov
mov
jmp
addl
subl
pop
popl
addl
jmp
push
jmp
or
sub
or
pop
sub
add
or
mov
add
jmp
push
pop
push
mov
jmp
add
jmp
push
mov
neg
and
inc
inc
xor
and
pop
shl
push
mov
or
pop
push
jmp
or
jne
push
mov
jmp
mov
mov
mov
add
jmp
pop
add
mov
add
jmp
mov
push
mov
jmp
xchg
pop
shr
shl
jmp
push
pop
xor
mov
pop
xor
add
pop
jmp
push
jmp
add
or
jne
push
jmp
pushl
pushl
jmp
mov
pushl
pop
popl
pop
jmp
mov
shl
sub
shr
shl
and
push
mov
or
jmp
pop
jmp
sub
mov
push
mov
add
push
mov
add
pop
jmp
lods
xor
push
mov
mov
push
mov
push
mov
and
jmp
add
pop
xchg
pop
jmp
pushl
mov
add
popl
mov
movzbl
push
mov
jmp
push
pop
shr
shr
add
sub
add
xor
jmp
xchg
mov
add
jmp
push
mov
xor
xor
pop
add
neg
jmp
mov
mov
add
push
push
mov
add
sub
xchg
jmp
add
sub
jmp
and
shl
sub
xor
dec
sub
add
jmp
mov
pop
and
xor
add
pop
sub
sub
pop
push
push
pushl
jmp
xchg
pop
push
jmp
and
sub
sub
mov
pop
and
sub
inc
push
mov
sub
neg
xor
inc
jmp
popl
pop
mov
push
push
mov
add
mov
xor
mov
push
mov
add
add
xchg
pop
jmp
or
pop
jmp
pushl
pop
push
sub
mov
addl
mov
push
mov
jmp
push
mov
add
push
push
push
push
pop
jmp
or
jmp
add
xchg
pop
or
je
pushl
addl
pop
push
mov
push
jmp
sub
jmp
popl
push
jmp
push
pop
push
push
pushl
pop
add
add
jmp
mov
push
jmp
shl
or
add
add
pop
push
mov
add
pop
xchg
mov
and
mov
add
jmp
movzbw
push
pushf
jmp
add
pop
jmp
lods
add
jmp
xor
sub
add
add
pop
xor
jmp
pop
jmp
mov
push
jmp
push
mov
inc
shr
xor
and
sub
xor
jmp
mov
add
add
sub
pop
jmp
pop
add
pop
xor
xor
xor
pop
push
mov
mov
add
push
notl
mov
add
push
jmp
xchg
pop
incw
pushf
jmp
push
jmp
mov
shl
jmp
add
add
add
push
pushl
jmp
mov
or
pop
add
xor
pop
add
push
jmp
mov
jmp
shr
neg
not
inc
and
push
mov
xor
xchg
not
xchg
sub
xor
pop
add
pop
push
jmp
mov
add
sub
xchg
jmp
add
xor
mov
pop
pushw
sub
mov
add
sub
jmp
push
jmp
xor
add
add
pop
push
mov
and
push
mov
shr
add
or
pop
and
jmp
add
pop
sub
mov
add
push
jmp
mov
push
push
push
popl
addl
pop
push
mov
add
pop
jmp
mov
push
mov
sub
mov
push
jmp
add
pop
jmp
add
push
mov
xor
push
mov
xor
pop
push
mov
shr
push
mov
xor
jmp
pop
sub
pop
pushl
mov
add
add
jmp
add
jmp
xor
mov
pop
xor
not
jmp
sub
add
pop
jmp
add
jmp
push
mov
push
push
pop
and
push
mov
sub
pop
push
mov
xor
pop
jmp
mov
add
push
jmp
pop
shl
or
push
mov
dec
shr
jmp
mov
jmp
add
xchg
pop
push
mov
push
mov
add
sub
jmp
xor
pop
jmp
pop
add
jmp
add
mov
jmp
mov
jmp
shr
jmp
push
mov
mov
sub
add
add
pop
sub
push
mov
mov
add
jmp
xchg
pop
push
mov
inc
xor
sub
pop
push
mov
neg
jmp
neg
jmp
mov
mov
xor
jmp
mov
jmp
mov
push
mov
add
sub
mov
mov
shl
add
neg
or
xor
jmp
sub
add
add
pop
pop
xchg
jmp
push
push
jmp
push
mov
mov
inc
push
mov
mov
add
add
push
mov
sub
jmp
mov
push
mov
push
mov
jmp
mov
sub
pop
xor
xor
xor
pop
jmp
pop
push
mov
or
pop
neg
shl
or
and
xor
add
jmp
and
jmp
push
jmp
pop
jmp
xor
xor
jmp
add
add
not
and
push
mov
xor
pop
and
jmp
mov
jmp
mov
mov
sub
mov
push
push
mov
and
xor
inc
sub
sub
mov
pop
push
pop
pop
jmp
mov
mov
pop
jmp
lods
push
jmp
xor
sub
mov
pop
add
pop
sub
mov
pushl
jmp
mov
jmp
xor
xor
pop
btr
pushf
jmp
mov
mov
sub
jmp
push
push
pop
push
mov
add
pop
jmp
pop
sub
pop
push
mov
push
mov
xor
jmp
mov
push
mov
jmp
add
push
mov
add
jmp
mov
add
sub
pop
jmp
add
xchg
mov
push
jmp
pop
jmp
push
mov
jmp
mov
sub
mov
push
push
popl
addl
pop
jmp
pop
jmp
shr
xor
mov
jmp
pop
push
jmp
add
pop
pop
jmp
mov
push
jmp
mov
add
pop
sub
xchg
pop
mov
mov
mov
jmp
add
xchg
jmp
mov
mov
pop
mov
push
mov
add
push
mov
sub
add
add
mov
add
xchg
pop
xor
jmp
add
add
xchg
jmp
sub
push
mov
jmp
push
mov
push
jmp
sub
jmp
mov
mov
add
add
pop
xchg
mov
pushl
jmp
push
mov
mov
add
pop
sub
jmp
mov
add
add
pop
pushw
jmp
sub
not
shr
push
mov
push
mov
or
pop
and
dec
jmp
add
add
xchg
pop
movzbl
popw
jmp
pop
jmp
mov
push
pop
push
jmp
add
pushl
mov
add
add
jmp
push
mov
jmp
mov
shl
shl
xor
xor
sub
mov
push
mov
push
mov
dec
jmp
mov
push
mov
or
shl
shr
jmp
pushl
popf
pop
rcrw
pushf
jmp
pop
push
jmp
pop
xor
pop
jmp
mov
or
shl
inc
not
jmp
pushl
pop
popl
jmp
add
add
xchg
pop
or
je
sub
mov
mov
jmp
mov
push
push
jmp
pop
add
push
mov
add
jmp
add
neg
xchg
jmp
push
mov
jmp
sub
or
mov
add
and
jmp
xchg
pop
mov
mov
push
mov
add
add
sub
mov
add
sub
mov
mov
add
jmp
pop
push
addl
jmp
sub
mov
mov
or
pop
dec
jmp
pop
add
pushl
pop
add
jmp
mov
pushl
pop
jmp
mov
or
shl
push
push
mov
mov
jmp
pushl
pop
add
add
jmp
add
add
sub
mov
push
jmp
mov
sub
xchg
jmp
mov
sub
mov
add
pop
xor
jmp
mov
or
sub
jmp
xor
sub
pop
xor
xor
xor
jmp
mov
jmp
push
jmp
add
xchg
pop
add
xchg
pop
jmp
mov
mov
jmp
mov
push
jmp
mov
sub
pop
xchg
pop
mov
addl
jmp
push
mov
sub
mov
push
jmp
mov
add
pop
add
push
jmp
dec
jmp
pop
xor
xor
xor
mov
mov
jmp
mov
push
mov
mov
push
mov
and
jmp
mov
jmp
jmp
push
mov
jmp
sub
jmp
pop
push
jmp
pushl
jmp
mov
jmp
push
mov
push
mov
mov
mov
mov
jmp
push
mov
add
jmp
xor
xor
push
mov
push
mov
jmp
push
popl
addl
pop
jmp
push
pop
add
push
mov
jmp
pop
jmp
mov
sub
mov
push
mov
add
add
jmp
add
mov
add
push
jmp
mov
sub
pop
xchg
jmp
mov
mov
jmp
pop
add
xchg
pop
jmp
add
add
push
mov
add
jmp
mov
mov
xor
jmp
pop
incb
pushf
jmp
sub
add
mov
jmp
mov
push
mov
push
jmp
mov
add
add
xchg
jmp
add
xchg
pop
or
shl
jmp
xor
jmp
sub
mov
pop
jmp
pop
shr
sub
add
add
push
mov
sub
pop
pop
movzbl
pushl
jmp
xor
pop
mov
jmp
mov
jmp
add
push
pushl
pop
jmp
addl
popl
addl
pop
jmp
sub
add
jmp
mov
jmp
sub
mov
mov
add
add
jmp
sub
mov
push
pop
add
jmp
sub
jmp
sub
pop
xchg
mov
mov
push
push
jmp
add
push
mov
sub
pop
xchg
jmp
xor
pop
jmp
sub
pop
push
pop
pop
jmp
push
pop
pop
jmp
push
mov
mov
push
jmp
add
jmp
add
sub
push
jmp
pushl
pop
add
push
jmp
pop
add
push
mov
add
push
jmp
not
inc
add
add
jmp
lods
push
push
mov
add
xor
shr
jmp
mov
jmp
pop
pop
add
xor
jmp
pop
mov
xor
jmp
xor
pop
add
mov
jmp
push
mov
mov
pop
pushl
pop
add
sub
pushl
pop
add
push
jmp
mov
sub
add
jmp
sub
inc
inc
add
jmp
sub
pop
add
pop
sub
sub
jmp
add
push
mov
sub
add
add
pushl
pop
add
xchg
jmp
xor
xor
pop
mov
pushl
pop
popl
mov
shrl
pushf
jmp
inc
jmp
xor
xor
sub
jmp
add
add
pop
push
mov
mov
sub
pop
xchg
mov
mov
jmp
mov
shr
neg
not
sub
mov
mov
push
push
push
pop
or
and
jmp
mov
pop
add
pop
add
sub
pushl
pop
add
xor
xor
xor
mov
idiv
pushw
mov
push
pushf
jmp
push
push
jmp
add
pop
jmp
and
mov
add
inc
add
push
mov
sub
jmp
add
pop
xchg
pop
jmp
push
jmp
xor
shr
jmp
mov
push
mov
inc
inc
or
add
sub
sub
add
add
pop
jmp
add
push
jmp
pop
add
pop
xor
movzwl
sub
mov
push
mov
add
add
push
push
mov
add
jmp
bts
pushf
jmp
add
sub
pop
add
push
mov
add
sub
xchg
pop
mov
pushl
mov
add
popl
mov
btc
pushf
jmp
add
add
push
jmp
dec
sub
sub
sub
pop
jmp
mov
add
jmp
mov
add
jmp
shl
add
xor
pop
push
mov
jmp
sub
jmp
push
mov
push
mov
mov
pop
jmp
mov
push
mov
push
mov
add
push
jmp
xchg
pop
mov
mov
push
mov
xor
mov
add
add
pop
xchg
pop
jmp
subl
sub
addl
jmp
add
or
pop
push
mov
jmp
pop
and
jmp
mov
jmp
sub
pop
push
mov
or
jmp
mov
mov
jmp
mov
shl
shl
jmp
pop
jmp
mov
push
mov
mov
pop
add
pop
jmp
sub
mov
add
sub
pop
sub
pop
sub
movzbl
pushl
jmp
xor
mov
jmp
mov
push
push
jmp
sub
sub
jmp
pushl
pop
push
mov
push
jmp
xor
jmp
sub
add
pop
push
mov
add
pop
xchg
mov
jmp
xorl
pop
xor
pop
and
pushl
pop
add
jmp
add
shl
neg
push
mov
jmp
mov
push
mov
push
pop
push
push
push
mov
add
mov
jmp
mov
jmp
mov
jmp
addl
jmp
push
mov
push
push
mov
push
jmp
mov
add
pop
add
xchg
mov
jmp
add
jmp
pushl
popf
pop
adc
pushf
jmp
shr
jmp
push
mov
shr
jmp
shl
jmp
mov
push
mov
addl
jmp
add
push
mov
mov
jmp
mov
push
mov
add
push
push
mov
push
mov
add
shr
push
mov
mov
xor
mov
push
jmp
mov
jmp
pushl
jmp
mov
jmp
or
pushf
jmp
push
mov
mov
push
jmp
mov
sub
jmp
mov
push
mov
mov
push
mov
sub
or
shl
push
jmp
pop
add
pop
sub
push
mov
jmp
pop
inc
jmp
pop
sub
mov
jmp
mov
mov
xor
jmp
push
push
pop
push
mov
neg
or
jmp
sub
sub
mov
add
sub
add
movzbl
pushl
jmp
add
mov
add
jmp
pop
push
mov
jmp
add
xchg
pop
jmp
mov
add
pop
push
mov
mov
push
mov
shr
jmp
shr
neg
jmp
add
push
mov
add
pop
xor
xor
jmp
sub
xor
xor
mov
add
and
neg
push
mov
xor
pop
push
mov
xor
jmp
sub
pop
add
pop
sub
sub
push
jmp
push
jmp
std
sub
mov
push
mov
push
mov
add
push
mov
not
shr
jmp
push
pop
dec
sub
mov
pop
shl
xor
push
mov
add
jmp
mov
push
mov
add
jmp
mov
add
push
jmp
add
add
mov
jmp
mov
jmp
mov
jmp
push
mov
jmp
add
sub
push
jmp
push
pushl
pop
popl
jmp
sub
mov
mov
push
jmp
mov
sub
mov
push
mov
jmp
push
jmp
mov
jmp
xchg
mov
mov
mov
not
push
mov
jmp
not
jmp
add
jmp
pushl
pop
jmp
sub
xor
pop
pop
add
pop
sub
sub
add
sub
jmp
dec
not
add
sub
pop
xchg
pop
mov
push
pop
add
add
sub
mov
pushl
jmp
push
mov
push
mov
mov
add
add
sub
mov
add
push
push
mov
push
notl
pop
xor
jmp
popl
jmp
not
jmp
push
mov
or
add
neg
jmp
xor
inc
add
xor
pop
push
notl
pop
not
jmp
or
mov
push
mov
add
add
xchg
jmp
push
mov
sub
jmp
pop
jmp
add
push
pushl
mov
jmp
sub
add
add
mov
mov
add
jmp
movzbw
pushw
jmp
pop
xor
xor
xor
jmp
neg
sub
sub
jmp
push
pushl
mov
push
mov
add
add
xchg
pop
push
mov
add
push
mov
jmp
mov
jmp
push
mov
mov
jmp
push
push
mov
push
mov
mov
jmp
mov
jmp
lods
jmp
shl
add
xor
add
pop
push
mov
add
sub
jmp
add
xchg
dec
xchg
neg
push
mov
jmp
push
pushf
jmp
add
pop
jmp
xor
sub
add
add
pop
push
mov
sub
mov
mov
jmp
jmp
push
jmp
mov
btr
pushf
jmp
pop
push
jmp
mov
pop
xor
sub
add
pop
sub
jmp
push
mov
add
pop
push
jmp
mov
jmp
sub
add
pop
push
mov
shl
dec
shl
push
mov
sub
pop
jmp
xor
push
jmp
pop
popl
jmp
add
sub
xor
xor
xor
pop
mov
jmp
push
push
popl
jmp
inc
shl
add
add
add
push
mov
sub
pop
mov
add
sub
pop
push
jmp
mov
jmp
xchg
jmp
jmp
push
jmp
sub
push
jmp
mov
add
jmp
mov
push
jmp
push
mov
jmp
add
mov
jmp
pop
inc
jmp
jmp
pop
jmp
xchg
pop
sub
mov
mov
dec
inc
inc
jmp
sub
push
mov
add
mov
push
jmp
pushl
pushl
jmp
pop
mov
add
push
mov
jmp
push
mov
jmp
pop
dec
jmp
add
jmp
xchg
pop
sub
pushl
sub
mov
mov
push
mov
add
mov
jmp
xor
xor
jmp
sub
pop
sub
neg
sub
jmp
mov
jmp
popl
pop
shlb
pushf
jmp
pop
add
mov
add
jmp
pushl
popf
pop
sbb
pushf
jmp
push
jmp
mov
addl
mov
jmp
mov
push
jmp
add
add
jmp
xor
add
mov
pop
dec
jmp
mov
jmp
add
pop
jmp
movzbl
pushw
mov
jmp
pushl
pop
push
mov
add
sub
mov
push
jmp
inc
add
xor
jmp
mov
mov
push
jmp
popl
jmp
mov
or
inc
not
sub
shr
jmp
xor
push
push
mov
mov
add
sub
mov
mov
push
jmp
dec
sub
push
mov
add
sub
xchg
pop
mov
jmp
xor
xor
mov
mul
jmp
push
push
mov
mov
not
xor
jmp
mov
jmp
xor
xor
xor
mov
jmp
pop
sub
add
jmp
push
push
mov
add
add
sub
jmp
xor
pop
add
pushl
pop
push
push
jmp
mov
push
mov
jmp
neg
add
mov
pop
jmp
pop
mov
jmp
xor
pushl
pop
push
push
pop
add
push
mov
jmp
sub
pop
jmp
pop
pop
xor
xor
xor
sub
mov
jmp
or
and
dec
add
sub
pop
pop
push
mov
sub
add
add
mov
add
xchg
pop
mul
movzbw
pushw
mov
movzbw
push
pushf
jmp
xor
mov
mov
jmp
pop
xor
jmp
xor
mov
test
pushf
jmp
pop
bts
pushf
jmp
xor
xor
xor
mov
mov
push
pushf
jmp
add
add
pop
push
notl
jmp
push
pop
add
jmp
push
mov
sub
add
add
pop
push
jmp
jmp
pop
mov
jmp
pop
jmp
add
add
pop
mov
add
push
jmp
pop
push
mov
push
pop
add
sub
push
pushl
mov
add
popl
pop
mov
push
mov
jmp
add
pop
add
jmp
add
sub
jmp
pushl
mov
push
mov
add
add
xchg
pop
push
jmp
neg
jmp
push
pushl
pop
popl
jmp
sub
sub
mov
push
jmp
add
add
pop
xor
xor
xor
pop
push
jmp
push
mov
mov
mov
pop
add
add
sub
pop
push
jmp
xor
mov
mov
jmp
pop
addl
sub
subl
jmp
push
jmp
mov
add
jmp
jmp
sub
push
mov
jmp
push
push
mov
mov
jmp
push
mov
not
dec
xor
sub
pushl
pop
add
sub
jmp
xor
add
jmp
mov
push
mov
push
mov
mov
pop
pop
jmp
sub
mov
jmp
xor
jmp
mov
inc
xor
shr
push
mov
push
push
mov
mov
xor
pop
sub
mov
add
sub
add
jmp
sub
jmp
pop
push
mov
jmp
add
and
mov
push
mov
jmp
mov
push
push
mov
shr
or
inc
add
jmp
push
push
jmp
pop
sub
sub
add
mov
push
mov
add
add
xchg
pop
add
push
mov
jmp
neg
add
jmp
pop
add
xchg
mov
push
mov
pushl
mov
add
push
mov
push
mov
mov
add
add
sub
pop
push
push
mov
xor
add
jmp
jmp
mov
dec
shr
sub
sub
sub
pop
jmp
or
shl
shl
sub
add
pop
add
sub
mov
jmp
push
mov
sub
mov
jmp
xor
jmp
pop
sub
push
mov
xor
add
jmp
pop
jmp
mov
mov
sub
add
add
mov
add
push
push
mov
push
jmp
xor
pop
sub
and
not
add
jmp
shl
xor
add
mov
pop
add
add
sub
pop
add
add
push
mov
sub
mov
add
sub
push
mov
add
add
pop
mov
add
push
jmp
add
mov
add
mov
jmp
pop
and
mov
push
mov
push
jmp
popl
pushl
pop
push
mov
add
add
jmp
add
pop
sub
push
jmp
pop
pushl
mov
add
push
push
jmp
add
xor
sub
xor
jmp
xor
jmp
mov
jmp
jmp
mov
push
mov
push
mov
inc
add
xor
shl
jmp
pushl
mov
jmp
shr
xor
and
jmp
xor
push
mov
push
mov
sub
add
sub
or
push
mov
jmp
mov
push
mov
jmp
push
mov
mov
not
pushw
mov
mov
jmp
mov
popl
mov
push
mov
push
mov
push
jmp
pushl
popf
pop
rcll
pushf
jmp
mov
sub
mov
mov
add
mov
add
jmp
push
mov
or
not
and
xor
mov
jmp
push
push
mov
sub
push
mov
mov
pop
pop
push
push
mov
xor
xor
inc
inc
shr
sub
mov
jmp
popl
jmp
dec
sub
add
pop
add
pop
xchg
jmp
not
xor
not
sub
mov
pop
mov
pop
add
pop
xchg
mov
add
push
mov
push
mov
add
add
shl
add
jmp
mov
jmp
add
mov
jmp
or
pop
sub
mov
pop
and
pushl
jmp
shr
cmp
je
push
mov
mov
push
sub
mov
mov
mov
add
pop
xor
pop
neg
or
xor
push
mov
jmp
neg
shl
jmp
lods
sub
mov
mov
jmp
pop
pop
sub
mov
push
mov
jmp
mov
jmp
mov
pop
jmp
and
jmp
xor
dec
push
mov
not
neg
xor
push
jmp
mov
add
push
mov
sub
jmp
pop
sub
sub
mov
mov
add
neg
and
sub
jmp
add
jmp
sub
push
mov
sub
mov
push
mov
add
add
jmp
push
pop
neg
xor
push
mov
mov
mov
add
pop
jmp
mov
pushw
jmp
add
add
sub
sub
pop
xchg
mov
jmp
sub
mov
push
mov
add
push
push
mov
jmp
pop
jmp
add
add
xchg
pop
add
jmp
push
mov
xor
add
pop
push
jmp
mov
push
mov
neg
sub
not
sub
xor
pop
shl
and
shl
jmp
mov
pop
shr
shl
xor
not
neg
jmp
push
mov
xor
or
neg
push
mov
add
pop
mov
pop
and
pushl
jmp
add
sub
sub
push
mov
sub
sub
add
jmp
shr
add
neg
push
mov
add
pop
mov
mov
push
mov
add
jmp
movzbl
pushl
sub
mov
jmp
pushw
mov
jmp
pop
push
jmp
xchg
mov
sub
mov
sub
mov
push
mov
add
push
jmp
add
sub
mov
push
mov
mov
add
add
push
pushl
pop
popl
pop
xor
xor
jmp
push
jmp
mov
push
push
jmp
mov
add
jmp
add
xor
xor
xor
mov
mov
jmp
add
pop
push
push
mov
add
add
pushl
jmp
push
jmp
popl
jmp
pop
jmp
push
push
jmp
jmp
add
add
add
pop
jmp
xor
xor
jmp
push
jmp
xor
pop
add
jmp
add
pop
pop
sub
jmp
push
mov
jmp
xor
push
push
mov
jmp
and
jmp
shl
dec
push
mov
shl
xor
add
add
sub
sub
pop
sub
mov
sub
jmp
push
pop
jmp
xchg
mov
or
je
pushl
jmp
popl
jmp
push
mov
push
jmp
add
push
push
mov
mov
pop
and
mov
add
jmp
mov
mov
add
push
push
jmp
sub
push
mov
jmp
push
mov
jmp
add
xor
jmp
pop
pop
push
push
pop
pop
xor
jmp
xchg
mov
jmp
mov
mov
push
push
mov
push
pop
add
pop
jmp
mov
mov
dec
push
mov
xchg
neg
jmp
sub
push
mov
jmp
push
jmp
mov
jmp
xor
add
add
pop
push
mov
jmp
pop
not
shr
xor
xchg
inc
xchg
xor
sub
add
jmp
push
push
pop
pop
jmp
pop
mov
push
jmp
add
push
jmp
xor
xor
xor
jmp
pop
xor
and
dec
xor
push
mov
jmp
push
mov
and
and
shr
dec
shl
add
sub
jmp
pushl
jmp
mov
and
not
jmp
push
jmp
pop
and
mov
add
shr
or
je
push
mov
pushl
pop
jmp
dec
xor
jmp
xchg
pop
add
push
push
mov
jmp
mov
xor
pop
neg
jmp
xchg
mov
jmp
sub
mov
mov
add
add
xchg
jmp
mov
shll
jmp
add
jmp
push
mov
jmp
mov
push
mov
jmp
pushl
pop
push
push
pop
add
push
mov
add
jmp
push
push
jmp
push
mov
add
not
sub
jmp
lods
xor
push
push
mov
jmp
push
mov
add
push
mov
jmp
push
mov
mov
neg
jmp
pop
mov
mov
push
jmp
mov
push
mov
jmp
add
sub
mov
pushl
pop
jmp
and
add
xor
pushl
pop
add
push
mov
mov
mov
add
sub
mov
mov
sub
sub
sub
jmp
add
add
push
mov
sub
pop
xchg
pop
mov
mov
push
mov
add
jmp
pushl
pushl
mov
add
add
jmp
mov
jmp
xchg
not
xchg
shr
dec
jmp
mov
add
jmp
shl
jmp
push
mov
push
jmp
push
jmp
sub
add
jmp
xor
pop
mov
jmp
mov
jmp
sub
jmp
pop
mov
pop
and
pushl
pop
push
mov
add
add
xchg
pop
shr
xor
push
mov
push
pushl
mov
add
popl
jmp
push
jmp
shr
jmp
neg
dec
dec
xor
mov
pop
mov
xor
pop
sub
pop
add
sub
mov
jmp
lods
jmp
push
jmp
jmp
add
pop
jmp
pop
sub
sub
jmp
mov
jmp
mov
add
sub
pushl
mov
add
jmp
sub
mov
mov
push
mov
shr
shl
add
add
add
pop
sub
xchg
mov
mov
jmp
xor
xor
jmp
mov
add
add
pop
add
jmp
mov
add
add
xchg
pop
add
xor
xor
xor
mov
mov
push
mov
push
jmp
not
xor
mov
pop
xor
add
pop
jmp
push
mov
add
sub
xchg
pop
mov
push
mov
mov
shr
jmp
xor
xor
xor
pop
movswl
push
sub
mov
addl
pop
add
jmp
sub
mov
xchg
not
push
pushl
pop
popl
pushl
pop
jmp
push
mov
add
pop
xchg
jmp
push
jmp
add
add
add
sub
sub
add
mov
add
xchg
mov
jmp
pushl
pop
jmp
pushl
pushl
jmp
popl
mov
sub
mov
push
mov
jmp
mov
pop
push
mov
add
jmp
sub
jmp
pop
shl
not
push
mov
and
mov
add
sub
mov
mov
shl
push
mov
jmp
mov
jmp
mov
mov
or
pop
inc
neg
sub
and
mov
jmp
mov
jmp
sub
jmp
pushl
pushl
pop
sub
mov
sub
mov
addl
mov
push
push
pop
jmp
pop
sub
pop
push
jmp
sub
pop
sub
jmp
add
xor
jmp
neg
push
push
mov
jmp
push
mov
add
pop
push
mov
push
sub
mov
mov
sub
mov
pop
mov
mov
add
add
mov
add
xchg
jmp
add
add
push
mov
jmp
mov
add
or
add
add
pop
push
jmp
add
add
pop
add
add
push
push
mov
mov
push
xorl
pop
xor
pop
and
sub
shl
shr
neg
sub
sub
pop
mov
push
mov
add
jmp
push
pop
and
pushl
pop
push
mov
jmp
add
add
pop
jmp
sub
add
mov
push
mov
mov
add
add
xchg
mov
sub
push
mov
or
jmp
add
push
push
mov
mov
mov
add
sub
add
add
pop
xor
jmp
add
jmp
add
mov
pop
shl
shl
shl
xor
xor
sub
add
add
jmp
pop
jmp
pop
sub
mov
push
push
pop
push
mov
sub
add
jmp
add
pop
jmp
xor
mov
push
sub
mov
mov
add
sub
mov
pop
jmp
mov
add
sub
pop
add
pop
add
xchg
jmp
sub
sub
pop
jmp
add
and
xor
jmp
pop
add
xchg
mov
jmp
xchg
pop
jmp
mov
mov
add
pop
xchg
jmp
inc
neg
add
mov
pop
push
jmp
push
pop
add
jmp
push
mov
add
push
push
mov
jmp
xor
jmp
add
jmp
pop
jmp
pop
push
mov
jmp
mov
shl
dec
xor
and
jmp
pop
add
sub
add
add
push
mov
sub
pop
push
push
mov
mov
add
pop
xor
jmp
mov
sub
jmp
mov
push
mov
add
mov
add
sub
mov
mov
add
pop
xor
xor
xor
pop
xor
jmp
add
push
mov
mov
push
jmp
add
add
sub
pop
xor
mov
sub
mov
push
pop
add
jmp
pushl
pop
add
popl
jmp
pop
push
mov
dec
jmp
push
jmp
add
or
pushl
jmp
mov
shr
shr
and
push
push
pop
shl
dec
jmp
sub
push
jmp
xchg
pop
xor
xor
xor
pop
mov
jmp
mov
shl
jmp
dec
jmp
add
sub
xchg
pop
jmp
push
pop
add
sub
jmp
add
add
pop
xchg
mov
jmp
pop
popa
popf
jmp
mov
push
jmp
mov
push
mov
sub
mov
addl
pop
jmp
mov
add
sub
xchg
pop
mov
pushl
jmp
pushl
jmp
add
xchg
pop
cmp
pushf
jmp
and
shl
sub
jmp
push
mov
push
mov
mov
jmp
mov
add
jmp
add
jmp
add
sub
push
push
mov
mov
jmp
xor
pop
pop
xor
mov
add
mov
sub
pop
mov
mov
add
push
push
pop
push
push
jmp
pop
push
push
mov
inc
add
inc
push
mov
jmp
xor
jmp
shr
jmp
pop
push
mov
not
sub
xor
not
xor
add
sub
sub
pop
movzbl
mov
push
push
pop
add
push
mov
push
mov
jmp
add
jmp
add
pop
jmp
mov
push
jmp
sub
jmp
pop
add
add
jmp
pop
add
popl
mov
mov
sub
jmp
mov
push
push
mov
addl
pushl
pop
add
jmp
sub
sub
add
xor
xor
xor
pop
and
push
mov
mov
sub
add
sub
sub
add
pop
sub
sub
add
add
jmp
mov
jmp
pop
jmp
shr
xor
push
notl
jmp
add
pop
push
mov
add
pop
jmp
add
jmp
sub
sub
sub
add
jmp
add
add
jmp
mov
shr
dec
xor
not
push
mov
add
sub
pop
add
add
add
push
jmp
negl
jmp
add
xor
xor
xor
mov
add
sub
mov
jmp
mov
pop
mov
add
and
pushl
pop
add
jmp
pushl
pop
add
xor
mov
add
push
push
jmp
push
mov
mov
pop
mov
add
push
mov
mov
push
mov
push
mov
mov
pop
pop
pop
mov
push
mov
add
add
xchg
pop
jmp
sub
mov
add
xchg
not
xchg
jmp
mov
push
jmp
mov
jmp
xchg
pop
jmp
sub
pop
jmp
push
push
jmp
mov
mov
add
sub
mov
mov
add
push
mov
mov
add
push
jmp
jmp
pop
mov
add
jmp
pushl
pop
push
jmp
pop
add
pushf
jmp
mov
mov
push
mov
sub
mov
push
mov
jmp
add
add
add
sub
jmp
push
pushl
pop
push
mov
push
pop
add
jmp
mov
add
jmp
mov
mov
jmp
sub
jmp
xor
xor
xor
mov
pushl
pop
sub
mov
push
mov
push
mov
add
pop
pop
push
mov
mov
add
shr
add
not
add
add
pop
jmp
pushl
jmp
xor
sub
pushl
pop
push
push
pop
jmp
mov
push
mov
xor
sub
mov
pop
sub
pop
sub
sub
mov
jmp
mov
sarl
pushf
jmp
pop
sub
pop
push
mov
jmp
add
popl
jmp
pop
add
pop
push
jmp
sub
and
jmp
mov
sub
pop
xor
jmp
mov
add
inc
shl
jmp
add
pop
add
jmp
pop
jmp
xor
mov
pop
sub
jmp
mov
push
mov
push
mov
mov
jmp
mov
jmp
mov
sub
jmp
add
pop
add
push
push
mov
mov
add
pop
xor
shl
inc
shr
dec
push
mov
jmp
mov
push
jmp
xor
pop
add
add
jmp
mov
push
jmp
mov
inc
push
push
jmp
add
pop
add
and
pop
not
inc
push
mov
sub
jmp
shlw
pushf
jmp
push
mov
xor
push
jmp
sub
pop
mov
jmp
and
push
jmp
push
push
push
mov
mov
pop
push
mov
mov
pop
pushl
jmp
xor
xor
pop
mov
sub
mov
jmp
mov
jmp
sub
push
popl
addl
pop
push
mov
shr
inc
shl
not
xor
add
add
pop
push
mov
jmp
subl
jmp
mov
sub
add
pop
sub
jmp
pop
push
mov
jmp
and
mov
add
sub
mov
mov
add
xor
jmp
pushl
jmp
mov
or
inc
push
notb
pop
push
push
mov
jmp
push
pop
push
mov
mov
add
push
mov
sub
pop
jmp
mov
push
mov
xor
jmp
pop
movzbl
lea
push
mov
jmp
shl
inc
xor
jmp
mov
shr
shl
xor
shr
jmp
mov
sub
mov
mov
jmp
mov
pop
add
jmp
sub
xchg
jmp
add
add
sub
jmp
jmp
push
mov
add
neg
neg
add
jmp
pop
push
mov
add
jmp
push
pushl
jmp
popl
pop
sub
mov
push
pushl
pop
add
add
jmp
push
mov
pushl
pop
jmp
push
mov
or
pushl
pop
sub
mov
mov
push
jmp
add
push
mov
add
jmp
mov
push
mov
addl
add
subl
pop
jmp
push
mov
inc
shl
neg
jmp
mov
add
jmp
push
mov
mov
add
add
xchg
mov
jmp
mov
sub
pop
and
pushl
pop
add
shr
jmp
mov
jmp
or
add
jmp
pop
xorl
push
mov
add
push
mov
dec
inc
neg
push
jmp
pop
jmp
xchg
pop
jmp
or
neg
or
sub
push
mov
mov
pop
pop
sub
push
jmp
sub
add
add
pop
sub
xchg
pop
jmp
add
mov
add
and
jmp
pushl
pop
push
mov
add
add
jmp
mov
add
jmp
sub
pop
sub
jmp
push
pop
push
mov
push
mov
dec
add
sub
pop
add
add
mov
add
push
mov
add
jmp
shl
xor
sub
pop
add
add
mov
add
add
push
pushl
pop
jmp
pushl
pop
add
xor
pop
xor
jmp
mov
mov
add
jmp
sub
sub
sub
pop
jmp
add
jmp
add
jmp
mov
push
push
pop
jmp
xchg
mov
shll
pushf
jmp
shr
push
notl
jmp
sub
jmp
sub
xchg
pop
mov
push
push
pop
add
mov
jmp
xchg
xchg
not
xchg
push
jmp
sub
mov
push
push
mov
or
xor
xor
add
mov
pushl
jmp
mov
push
mov
jmp
pop
add
jmp
mov
jmp
push
mov
push
mov
add
sub
xchg
jmp
sub
pop
add
pop
xchg
pop
pushl
pushl
pop
add
push
push
pop
push
push
mov
push
mov
jmp
addl
pop
push
jmp
push
push
mov
jmp
add
add
jmp
mov
sub
mov
jmp
xor
xor
mov
movsbw
pushw
mov
jmp
sub
mov
push
mov
mov
pop
not
xor
mov
pop
add
mov
add
jmp
mov
jmp
sub
pop
jmp
mov
add
pop
add
and
pop
neg
jmp
push
jmp
neg
not
inc
jmp
pop
add
xor
push
mov
jmp
push
jmp
popl
jmp
pop
jmp
mov
push
pop
sub
mov
push
jmp
push
push
pop
push
mov
push
mov
mov
pop
add
pop
add
jmp
push
mov
push
mov
add
add
xchg
pop
xchg
jmp
sub
jmp
push
pop
push
mov
sub
jmp
push
pushl
pop
popl
pop
push
push
pop
push
mov
or
sub
add
jmp
mov
pop
jmp
push
jmp
push
pushl
pop
popl
mov
jmp
sub
add
add
add
jmp
pop
mov
mov
jmp
and
mov
add
shr
push
subl
mov
push
mov
add
add
xchg
mov
push
mov
jmp
negb
pushf
jmp
and
add
jmp
pop
add
xor
jmp
add
pop
sub
jmp
push
mov
xor
inc
and
not
add
add
pop
jmp
mov
jmp
not
push
notl
pop
xor
push
mov
sub
sub
or
sub
sub
pop
or
pop
add
add
mov
add
push
mov
jmp
pop
xor
pop
sub
mov
mov
and
dec
push
mov
mov
xor
xor
pop
push
addl
sub
jmp
xor
xor
jmp
push
push
jmp
push
mov
addl
subl
subl
sub
addl
jmp
pushw
jmp
add
add
add
pop
add
sub
add
pop
add
sub
pop
jmp
jmp
xor
mov
mov
jmp
xor
xor
xor
mov
mov
jmp
mov
add
sub
jmp
pop
jmp
add
jmp
mov
test
pushf
jmp
add
pushf
jmp
pop
shr
push
mov
pushl
mov
push
mov
add
add
jmp
mov
pop
add
jmp
sub
push
mov
add
and
jmp
add
and
pop
add
neg
add
jmp
add
add
sub
pop
add
pushl
pop
jmp
sub
add
jmp
push
mov
sub
pop
mov
add
add
xor
jmp
sub
pop
push
jmp
pop
inc
xor
jmp
sub
pop
jmp
push
mov
jmp
xor
jmp
push
push
mov
mov
sub
pop
sub
pop
add
push
push
mov
xor
push
mov
not
sub
mov
mov
dec
jmp
pop
sub
mov
mov
jmp
mov
jmp
mov
jmp
sub
push
mov
add
pop
add
mov
pop
mov
dec
push
mov
push
notl
pop
add
or
xor
and
add
xor
jmp
mov
push
jmp
mov
sub
mov
jmp
add
add
add
push
mov
mov
add
mov
push
jmp
push
mov
sub
jmp
popw
jmp
jmp
add
add
jmp
pushl
pop
push
mov
push
push
mov
mov
mov
pop
push
jmp
push
pop
add
not
push
jmp
pop
push
mov
push
mov
not
or
xor
sub
shl
push
push
mov
mov
pop
jmp
lods
jmp
add
push
mov
sub
add
add
jmp
pop
add
jmp
mov
add
mov
xor
mov
add
jmp
add
mov
add
xor
jmp
add
jmp
sub
mov
mov
add
sub
mov
push
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
pop
sub
jmp
push
mov
push
jmp
push
mov
neg
jmp
add
pop
sub
pop
pushl
pop
add
add
sub
jmp
push
pushl
pop
add
add
shl
jmp
pushl
jmp
movzbw
sub
mov
push
pop
jmp
add
sub
jmp
xor
xor
pop
jmp
add
pop
xchg
mov
push
push
mov
jmp
push
mov
shr
not
inc
or
add
sub
jmp
jmp
xor
push
inc
push
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
inc
dec
dec
cs
insb
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
dec
sub
sub
xlat
repz
shlb
notb
insl
mov
mov
mov
popf
dec
mov
int3
add
sbb
xchg
push
lods
sbb
jb
fdiv
push
cmpsl
sbb
push
add
push
rorb
jns
stos
pop
dec
mov
pop
lock
mov
mov
push
call
jmp
loop
or
xchg
adc
lods
shll
popf
sub
imul
xor
addr16
pushw
xchg
test
push
cld
push
cli
mov
jbe
decl
fs
pop
ds
adc
and
inc
scas
cmp
inc
jmp
push
gs
jo,pn
cmp
cli
jbe
push
pop
push
push
popa
imul
or
mov
cli
fmuls
adcb
jge
inc
jb
cmpsb
sbb
cmp
std
popf
clc
aaa
pop
rol
and
loope
cmc
popa
adc
dec
rclb
lcall
mov
push
inc
or
sub
sti
mov
loopne
aad
bnd
les
pop
icebp
int3
andb
mov
inc
mov
aam
outsl
dec
movsb
pushl
imul
outsl
dec
data16
sahf
stc
aaa
imul
xchg
mov
pop
sub
or
xorl
icebp
mov
out
fcmovnb
data16
sub
shr
cmpsl
xchg
std
jo
cwtl
cmp
mov
sti
mov
xor
stc
jmp
add
icebp
lock
cmc
pop
shrl
mov
and
sbb
push
inc
movsb
adc
xor
pushf
add
sbb
leave
jns
sub
lret
cmp
out
lods
mov
orb
sahf
pop
mov
cmp
mov
aad
out
push
sub
pushw
stos
xchg
imul
xor
idivb
shlb
or
push
mov
cwtl
xchg
add
pop
dec
mov
push
rcll
fwait
sub
cmpsl
pop
fwait
jbe
push
xchg
inc
mov
jno
data16
dec
sbb
lcall
add
inc
xor
out
nop
sbb
xor
sub
lahf
aas
test
loopne
mov
mov
sbb
mov
jp
pop
mov
loop
subl
fs
jae
aad
movsl
ljmp
sbb
shrb
sub
xor
in
sbb
cmpsb
sbb
xorl
hlt
push
xor
jb
loop
cmp
dec
mov
mov
lret
pop
sbb
das
mov
lcall
fimull
mov
clc
insl
sbb
push
add
mov
sti
fistl
cmp
xor
xorl
test
dec
push
push
pusha
shll
or
jge
xchg
loopne
rcrb
xor
cmp
mov
mov
adc
bound
push
adc
cmp
les
mov
scas
imul
sub
ret
je
mov
mov
cmp
clc
sarl
arpl
outsl
cmpsl
test
mov
sub
outsb
cwtl
std
sbb
inc
mov
scas
sbb
jb
jo
inc
ss
xchg
out
scas
push
xor
inc
inc
out
or
scas
push
out
daa
pop
sahf
or
pop
pop
cmc
or
cli
lcall
fildl
push
jb
das
mov
fs
and
popa
out
mov
mov
xor
add
dec
call
or
and
cltd
int3
pop
jge
jbe
movsl
pop
xor
jecxz
add
pusha
push
bound
sahf
lds
fiaddl
jecxz
xor
arpl
xor
js
jae
insl
lock
push
jl
cltd
idivl
xchg
popf
loopne
lret
dec
xor
and
imul
fistpll
ljmp
lcall
pop
xchg
clc
imul
mov
sbb
mov
push
loope
and
xchg
icebp
pop
jmp
leave
gs
pusha
mov
jg
jp
out
mov
rorl
mov
pop
rcrb
inc
repz
shrb
or
adc
lea
jns
add
sbb
movsb
jne
lods
repnz
fisubs
ret
sub
movsb
push
cmovs
or
out
or
fmull
andl
lea
and
push
pop
ret
xor
nop
adc
or
jg
mov
pop
jnp
jecxz
fdivs
pushf
test
pop
pop
and
push
divb
ds
or
imul
iret
outsl
fstps
iret
nop
jg
xchg
sbb
out
inc
pop
mov
mov
mov
gs
lds
es
push
movsl
in
cwtl
fisttpll
add
js
call
mov
cs
sub
fwait
stc
gs
xor
sub
rep
add
jns
cmp
sub
inc
sti
push
fcomps
mov
rorb
insl
pop
call
rol
in
sti
call
rcr
fs
es
xchg
pop
dec
jae
cmp
add
pop
add
sub
sub
hlt
cmpps
add
cmp
jo
push
mov
pop
add
ret
loope
shlb
mov
out
push
pusha
adc
enter
lret
xorb
flds
pop
xchg
orb
pop
jb
pop
int3
das
aaa
fsubrl
mov
push
fcompl
push
or
lahf
lods
and
rorb
imul
sarb
cmpsb
adc
or
inc
adc
ds
jle
or
ret
sbb
hlt
outsb
xchg
mov
mov
sub
aaa
add
or
jns
lock
popa
jge
push
inc
popa
mov
insb
adc
lea
ljmp
pop
mov
xchg
pop
and
mov
cli
cmp
mov
xchg
sub
sbb
push
scas
dec
mov
inc
jbe
dec
aas
fisttps
and
xor
cmpsl
inc
das
fldl
jmp
mov
jp
sahf
nop
push
jb
xor
adcl
scas
adc
push
adcb
sarb
cmp
xor
mov
cmp
xor
sub
add
xor
mov
xchg
push
mov
inc
lahf
repnz
adc
jge
cmc
loopne
neg
movsl
sub
rcll
inc
out
sti
mov
xchg
mov
testb
arpl
les
bound
add
daa
xchg
ljmp
inc
or
dec
jno
adc
popf
aad
dec
call
mov
int3
cmp
jns
mov
pusha
cmp
mov
stos
pop
call
xor
xchg
push
ret
push
xchg
ss
popa
arpl
xlat
add
xlat
jb
inc
test
pop
and
out
les
repnz
out
shll
and
jb
lods
mov
daa
fucomip
das
stos
aam
push
ret
loop
inc
into
outsb
fdiv
mov
adc
xor
shlb
push
mov
mov
inc
lock
add
shl
add
popa
mov
mov
insl
lods
sbb
les
insl
xchg
add
xchg
mov
lds
sbb
push
les
jmp
mov
mov
cmp
xor
out
sbb
aad
mov
pop
pop
rcrb
inc
iret
out
sti
mov
fistl
je
movsl
push
and
mov
mov
xchg
lods
inc
xchg
nop
pop
jmp
aas
pusha
int3
xor
and
sub
mov
cmpsl
mov
popl
mov
lret
xchg
xor
push
mov
lock
shll
test
or
rorl
sbb
shll
mov
xchg
das
pusha
ficoml
sbb
or
xchg
fistl
add
cmp
gs
and
pop
mov
add
loop
pop
enter
stos
and
mov
call
leave
and
mov
ljmp
jns
cli
adc
mov
sub
test
int3
sbb
pusha
mov
fimuls
jp
outsl
jo
scas
sti
loop
or
xor
xor
mov
push
push
nop
or
loop
cmpsb
cwtl
adc
xchg
movsl
mov
jo
jb
xor
das
das
frstor
rorb
call
sbb
jo
adc
pushf
fbld
sbb
cmpsl
dec
xor
or
fisubrl
cmovne
cmp
mov
sti
sbb
cmpsl
push
jne
sub
and
fwait
idivb
mov
sbb
imul
fwait
nop
xor
push
imul
and
add
cld
pop
push
movsb
jl
add
inc
lahf
xchg
or
int
xchg
and
mov
push
loope
notb
test
add
dec
and
inc
scas
cmp
mov
mov
mov
xor
loope
and
inc
push
or
movsl
push
or
and
push
scas
cmp
mov
sbb
add
scas
and
imul
inc
fucomp
inc
roll
xor
dec
fldl
add
cwtl
sub
dec
jge
sub
sub
inc
inc
stos
enter
aaa
int3
inc
jecxz
jg
les
sub
cmc
mov
mov
into
jle
sub
mov
push
rorl
add
movsl
inc
mov
push
cld
cmp
mulb
ljmp
xor
xchg
mov
bound
fimuls
cmp
movb
shlb
int
pop
jmp
sti
jo
mov
cmc
ja
dec
jae
mov
add
sbb
lahf
inc
in
or
dec
pop
insb
cmp
fwait
cmp
jmp
les
fisttpll
out
int3
jge
xchg
cwtl
out
movsw
pushw
scas
sbb
xor
test
and
icebp
cmpsl
xor
aas
sub
clc
cmp
pop
add
shll
ja
mov
rcrb
fwait
decb
jge
repz
push
jge
js
out
lret
jbe
dec
mov
and
pop
sub
xlat
dec
aas
imul
les
mov
jnp
xor
or
xor
cmc
inc
xorb
mov
testb
add
into
inc
in
jbe
mov
mov
jge
push
sahf
xchg
xlat
mov
cmp
adc
adcl
push
mulb
adc
jmp
repz
adc
fimull
imul
nop
gs
adc
test
popf
mov
add
outsb
push
xorb
or
ds
loop
mull
daa
fwait
jb
loopne
xor
sbb
jbe
das
in
pop
xchg
lock
mov
jle
mov
sub
sbb
push
adc
xor
add
rcrb
mov
je
and
test
inc
ss
ja
icebp
shll
push
pop
or
ss
mov
scas
mov
repnz
stc
test
inc
mov
pop
push
lret
jnp
xor
mov
cli
cmpsl
lock
daa
pop
xorl
shll
ret
xor
fsubp
sbb
xchg
daa
out
xchg
out
pop
push
fcomp
jnp
pushf
and
loope
fdivrs
add
pop
lds
jb
xor
fisttps
fs
sahf
adc
add
mov
jecxz
test
add
ss
shr
pop
lret
or
mov
mov
bound
inc
movsl
daa
or
movsl
int3
jmp
out
push
fwait
scas
into
sub
mov
add
sbbl
inc
add
and
mov
adc
jo
xor
ret
add
out
jne
es
sarl
mov
pop
xchg
sahf
xor
adc
ret
in
mov
test
xchg
cmp
jecxz
cmp
dec
in
dec
mov
insb
hlt
ljmp
sub
or
or
mov
es
loopne
sub
and
push
sti
aas
and
testl
dec
add
push
xorl
add
or
pop
jmp
arpl
jmp
sahf
stos
pop
mov
pop
stc
test
ljmp
xor
shr
pusha
in
lret
bound
add
lods
test
sbb
cmp
xchg
ss
shlb
je,pn
rcrl
adc
shrb
loope
cmc
popa
out
dec
shlb
loop
ja
mov
movsb
cmpsl
pop
sub
xchg
cmp
sahf
inc
icebp
bound
xor
pushf
call
sub
shlb
cmp
cmp
jns
into
mov
pop
cli
outsl
pop
les
jle
negl
jo
gs
dec
or
lret
cmp
push
imul
loopne
les
dec
decl
and
imul
mov
xor
push
repz
fstps
jne
fistpll
cwtl
dec
in
aaa
sbb
in
mov
adc
inc
in
xor
xchg
sub
jne
outsl
vmwrite
mov
pop
adc
es
mov
adc
xchg
jg
or
xor
sub
inc
test
xor
jg
das
shl
test
scas
dec
and
bound
and
cmp
dec
out
cld
jno
jnp
fsubp
aas
das
cmp
dec
in
push
mov
fs
outsb
fisubs
cwtl
dec
sbb
inc
stos
xchg
adc
fsubrs
subb
and
lret
je
ss
fwait
std
mov
jecxz
xor
mov
cmp
dec
inc
fadd
pop
sbb
mov
in
dec
adc
and
sbb
or
push
cwtl
pusha
and
pop
iret
notb
daa
mov
cld
add
jp
jb
scas
dec
jb
mov
dec
stos
lret
push
aam
xchg
clc
test
mov
fld1
and
sbb
xchg
jo
jg
cmp
xor
sahf
inc
or
mov
mov
movsb
in
imul
xor
mov
inc
jo
sub
arpl
outsl
adc
and
cld
mov
nop
ret
mov
xchg
popa
fadd
push
ss
movsb
ljmp
dec
mov
pop
jmp
xlat
ja
cmp
xor
or
shll
popf
or
mov
out
add
mov
push
push
int3
add
imul
or
je
push
in
dec
sub
cmp
or
in
mov
push
lds
ret
cmp
cmp
dec
je
inc
xor
int
imul
iret
out
loop
test
push
dec
pop
stc
push
fisubrs
push
scas
sbb
mov
xchg
mov
sub
es
inc
leave
sahf
xchg
add
xor
hlt
nop
ret
jns
loopne
lds
nop
push
roll
xchg
jbe
movsb
cld
je
and
sarb
adc
cmp
xchg
pop
fcomps
out
mov
push
fisubs
shl
rorb
adc
add
sti
jg
pop
mov
jmp
push
xchg
sbb
jle
mov
rcll
jp
sahf
push
lods
int
or
push
lock
movsl
add
jno
pop
std
mov
adc
mov
das
mov
in
push
lock
inc
mov
adc
pop
stc
fdivs
xor
push
mov
repnz
xlat
xchg
push
jbe
scas
pop
inc
loope
mov
mov
jp
adc
xor
jo
mov
mov
lock
mov
ret
xchg
jnp
dec
incb
jp
and
popa
jl
cli
inc
andl
dec
in
pop
mov
add
loop
mov
add
xchg
icebp
cmp
pop
cmp
mov
and
sahf
and
loop
push
insb
dec
xor
bound
jbe
aaa
jo
adc
inc
jp
sbb
test
outsb
movsb
push
mov
ljmp
xor
cli
lahf
in
inc
es
mov
mov
lcall
dec
sub
shll
into
cmpsb
sbb
in
sub
ficoms
mov
lcall
jmp
mov
mov
icebp
pop
std
inc
icebp
adc
cmpsb
repz
cld
adc
popa
adc
lret
mov
test
jecxz
int3
rcr
jno
ret
test
pop
jl
movsb
mov
fs
testb
xor
xor
xchg
mov
xchg
addr16
dec
stos
mov
adc
xor
xchg
cmp
mov
test
cmp
je
sub
dec
lock
push
js
fstpt
push
loopne
fsubs
mov
popf
test
clc
popf
and
ds
push
fcomps
int
jg
andl
xchg
jb
adc
ficomps
mov
dec
mov
pop
ds
hlt
xchg
dec
imul
imul
aad
add
mov
mov
sbb
daa
pop
adc
movsl
and
ret
mov
bsr
test
push
inc
movsb
adc
mov
jb
movsl
ficoms
ja
jno
jp
sbb
stos
dec
mov
lret
movsl
in
cmpsl
inc
call
loopne
cwtl
lds
and
imul
in
data16
cmp
jecxz
scas
movsl
push
push
add
sbb
mov
xor
jnp
int
xlat
and
mov
xchg
inc
into
sbb
or
popf
and
mov
stc
mov
test
aaa
loopne
fldl
mov
and
xchg
ffree
loopne
jno
mov
sbb
lret
inc
arpl
cmpsl
rclb
add
and
idiv
jmp
push
loop
neg
inc
dec
lcall
jbe
shll
xor
push
daa
std
inc
ds
pop
stc
ds
inc
dec
xchg
push
sub
ja
popa
sbb
insb
xchg
jb
add
inc
ftst
hlt
cmp
push
jp
mov
ja
push
lcall
pop
adc
in
mov
aad
cli
insb
in
sbb
add
fwait
lods
ficompl
iret
lcall
flds
adc
lea
into
cltd
hlt
cmp
dec
int
sub
xchg
repz
mov
clc
lahf
iret
repz
imul
in
xor
add
int3
jl
or
push
push
mov
push
pop
jb
mov
into
outsb
push
popl
pop
stc
stos
or
pushf
clc
ljmp
mov
pop
fistps
out
aam
add
pop
push
mov
lock
mov
or
scas
cli
mov
fdivl
and
jbe
lahf
aam
sbb
jmp
xchg
icebp
cmp
sub
jp
je
popa
repnz
roll
mov
sub
lcall
cmp
stos
or
sub
and
mov
mov
data16
fs
cltd
sbb
lds
mov
mov
and
aaa
stos
shl
mov
push
jle
mov
or
fisttpll
ret
jl
pop
fidivs
sub
push
popa
test
lret
dec
outsb
push
in
adc
int
repnz
movsl
mov
loope
test
and
fwait
and
pop
lret
js
pop
jg
dec
test
sbb
dec
jno
push
push
pop
jmp
fidivs
mov
stos
data16
ret
into
rorb
mov
xlat
xor
popf
sti
addr16
js
sub
pusha
inc
or
pushw
loope
mov
pop
inc
aad
ljmp
pop
into
in
and
lods
aaa
and
pop
or
mov
dec
insl
mov
sub
push
ja
xor
push
lods
mov
sub
test
jne
inc
pop
adc
iret
movsb
push
push
cmp
mov
fcoms
mov
aad
add
xchg
push
mov
jp
jl
std
mov
jb
sbb
or
pop
into
lret
and
ss
and
inc
adcl
jg
push
fwait
and
cmp
loope
dec
mov
pop
or
lret
mov
lahf
cli
xor
cld
sbb
stos
out
stc
cmp
add
imull
dec
sbb
dec
jmp
push
lods
arpl
in
pop
xlat
js
addr16
inc
lods
adc
pusha
lcall
xchg
flds
mov
insl
clc
cwtl
cmp
pop
addr16
xchg
aas
icebp
cmpsl
in
pop
out
lret
imul
addr16
xchg
jb
frstor
mov
out
movsl
mov
lock
mov
leave
and
mov
pop
out
xchg
cmc
movsl
pop
in
pop
xchg
xlat
leave
daa
xchg
and
sub
int
inc
jle
iret
je
movsl
sti
xor
mov
std
mov
jo
inc
imul
aas
lcall
mov
imul
mov
cmp
cs
out
and
pop
or
ja
mov
add
mov
cs
rclb
iret
sub
lret
jnp
push
out
lods
mov
scas
pop
pmaxsw
orb
add
xor
mov
xor
test
lods
jg
cmp
pop
hlt
push
add
test
pop
popf
or
fidivrs
add
sbb
dec
movsb
and
stos
pop
fcmovu
mov
lcall
pop
lds
mov
jb
jecxz
mov
shll
mov
jl
push
leave
jns
les
in
mov
jmp
jae
pop
jo
in
xor
rolb
mov
outsb
push
js
mov
aas
sub
mov
js
int
ret
dec
out
sbb
jmp
lods
pop
jb
dec
sbb
nop
push
adc
gs
insl
stos
or
cltd
pop
mov
sub
push
jp
xor
ss
loopne
ljmp
mov
shll
push
ss
push
aas
inc
and
jno
test
or
push
sbb
add
xchg
inc
mov
fnstsw
mov
insl
inc
lret
bound
dec
shll
pop
mov
imul
xchg
lds
jecxz
out
pop
out
sub
je
xor
in
aad
sbb
sbb
dec
in
mov
inc
in
add
inc
iret
notb
and
and
pop
jge
lahf
rolb
mov
lods
sub
cmp
pop
or
inc
lock
jo
jno
lea
or
push
adc
dec
outsl
iret
jbe
out
push
mov
fwait
scas
cmc
push
gs
int3
pop
iret
outsl
lret
xchg
add
stc
shll
shll
in
add
lcall
inc
lret
aaa
lds
popf
mov
xor
aaa
mov
and
ja
leave
or
fstp
insb
fldl
cmp
inc
adc
cmpsl
cld
out
lahf
dec
push
icebp
mov
xor
arpl
sub
frstor
dec
xor
mov
mov
push
adc
xor
leave
pop
fstpl
dec
jmp
cmp
add
adc
xor
js
icebp
push
mov
nop
push
mov
jbe
pop
jno
xchg
xor
cmp
push
gs
mov
adc
icebp
jle
leave
and
fadds
dec
jns
subb
push
mov
push
hlt
pop
sbb
inc
incl
xlat
addl
lods
loopne
shrb
test
imull
or
push
add
cmp
mov
outsl
sub
test
pop
sub
aaa
and
paddsb
cmp
mov
daa
dec
repz
cmp
dec
shll
adc
jmp
adc
hlt
enter
rcrl
xchg
and
sub
cmp
clc
dec
xor
jge
and
sub
mov
dec
mov
xchg
rcrb
jmp
fldl
jmp
mov
or
inc
hlt
mov
sub
dec
mov
fbstp
mov
cmp
rcrl
in
adc
fildl
sub
mov
js
pop
cmp
rcl
outsb
int3
mov
mov
add
into
cmp
es
test
cmp
push
pop
arpl
inc
lods
dec
mov
push
aas
sub
cltd
jmp
popa
daa
pushf
dec
sarl
xor
dec
clc
or
jne
je
cltd
test
mov
aaa
xor
mov
dec
stc
int3
test
xor
js
jl
push
loop
in
push
push
or
fadds
push
mov
addr16
aad
push
jnp
mov
jnp
sbb
dec
stos
push
movsb
dec
cld
add
mov
add
rorb
into
adcb
pusha
repz
fidivrl
pop
inc
iret
inc
in
xor
shrl
jne
outsl
mov
add
sbb
dec
cmpsb
adc
fistl
or
mov
push
fcomps
pop
fnstsw
shlb
outsl
push
xor
test
dec
cmpsb
aam
neg
sbb
outsl
mov
mov
adc
rolb
pop
jbe
xchg
mov
loopne
xchg
push
jge
inc
lahf
xchg
or
mov
ljmp
fdivrs
dec
mov
mov
insb
dec
xor
jle
and
cmp
std
stos
stc
and
and
add
and
into
inc
aaa
push
scas
sbb
xchg
fwait
std
sbb
clc
push
insb
mov
sbb
xchg
lahf
add
pop
xlat
leave
in
lret
jnp
jp
adc
jnp
cmpsb
outsb
adc
jg
jg
ffreep
pop
mov
arpl
pop
aad
es
xchg
pop
mov
lods
pop
sahf
sbb
hlt
sbb
les
test
pop
push
shrl
and
mov
scas
sbb
stos
jae
push
loop
js
fdivr
mov
push
fadds
jb
ret
fs
push
fldenv
subb
ret
jae
sub
sub
mov
adc
dec
mov
sbb
push
xchg
cmp
in
shlb
shr
adc
mov
fnstsw
xchg
roll
add
xor
inc
enter
and
mov
add
fsubrs
lcall
push
dec
jno
inc
hlt
fdivp
inc
push
lret
test
xor
imul
in
sbb
add
xchg
pop
lcall
jno
fildl
lods
push
loopne
or
jo
inc
sbb
in
lret
inc
inc
xorl
push
scas
loop
inc
repnz
repz
mov
adc
lea
into
inc
repz
leave
pop
je
cltd
scas
mov
outsb
lea
xor
mov
sub
mov
pop
ret
sub
and
std
lods
push
adc
out
pop
call
ret
xor
sub
mov
enter
cli
hlt
mov
movswl
push
fmull
fs
gs
aad
mov
leave
inc
ret
mov
adc
shll
pop
and
push
scas
or
rorl
cli
push
faddp
sub
daa
jmp
jmp
in
or
inc
popf
fisttpll
pop
fstpt
pop
ds
or
cmp
jne
rcl
scas
dec
push
jbe
aas
pop
mov
daa
faddl
mov
ja
gs
pop
test
movsl
ret
fwait
add
ja
push
or
push
pop
mov
pop
adc
mov
ss
mov
outsl
jle
cmp
and
push
mov
pop
xchg
and
mov
sbb
xchg
xchg
sbb
dec
shlb
or
xlat
xchg
cmpsb
sbb
scas
push
data16
xchg
sbb
mov
cmp
faddl
xchg
repz
les
xchg
insb
addl
fcmovnbe
sbb
pop
imul
inc
icebp
push
jp
jle
cmpsb
sbb
fiaddl
xchg
add
mov
xor
es
int
ret
sbb
pop
mov
aaa
or
cmpsl
rcll
xor
inc
push
adcb
adc
mov
adc
mov
into
xor
lret
jae
or
add
hlt
cmp
pop
aas
pop
mov
and
lcall
add
mov
xchg
or
gs
shr
xor
xor
cli
adc
add
rcrb
mov
je
sbb
scas
pop
pop
push
add
pop
add
sub
cmp
xor
popf
dec
mov
push
push
mov
push
push
fs
fadds
push
adc
inc
or
pop
pop
xchg
popl
popf
out
js
lea
mov
ljmp
loop
jo
jg
dec
adc
pop
sub
sbb
xchg
pop
ret
sub
xor
or
dec
std
dec
outsb
cmp
pop
mov
bound
lock
cmc
sti
jecxz
mov
outsl
call
loop
adcb
pushf
shl
insb
sbb
mov
aad
rolb
call
dec
mov
ljmp
mov
xorb
fstpl
xor
bound
call
dec
sti
and
xor
xchg
push
dec
mov
sub
stc
mov
jbe
xor
cmp
mov
jno
xchg
lods
data16
andl
cmpsl
imul
jecxz
xor
xlat
xchg
xchg
and
enter
stc
xchg
in
fwait
and
push
jle
xchg
jae
or
ja
fsubrl
ret
lret
and
cmp
push
hlt
pop
sbb
mov
adc
push
pop
or
dec
xor
jb
xor
inc
xor
or
fistpll
popf
pop
addb
mov
jl
mov
test
in
and
fistl
sti
popf
sti
shll
popf
or
insb
add
mov
jecxz
jmp
sahf
dec
mov
ljmp
imul
push
or
cmp
pop
xchg
ss
sub
ss
es
and
imul
mov
sub
ja
andl
mov
fwait
or
push
add
dec
xor
je
xchg
inc
push
add
arpl
repz
in
jo
into
inc
je
hlt
jmp
inc
enter
movsb
mov
jbe
sar
repnz
or
jb
out
pushf
jno
mov
add
sbb
pop
push
data16
jae,pn
jge
push
xchg
test
push
cwtl
mov
out
mov
rcrb
movsb
out
dec
shll
popf
out
push
lret
jmp
das
movsl
sbb
mov
leave
xor
insb
fdiv
scas
dec
cltd
jno
hlt
pop
inc
ror
jmp
push
jge
mov
add
sarl
scas
cltd
sub
xchg
xchg
lea
mov
repnz
sbb
pop
mov
mov
mulb
out
loope
add
mov
xchg
fcompl
xchg
jecxz
xor
xchg
fdivrl
into
cmp
pop
or
cmp
aam
sbb
dec
ret
mov
mov
int
mov
ret
push
sub
pop
add
imul
and
inc
arpl
pusha
push
mov
jno
jl
outsb
pop
sbb
sbb
lret
stos
mov
jb
or
adc
std
bound
jg
pop
xor
xchg
mov
and
pusha
int3
xor
and
js
jmp
and
ret
adc
cltd
andb
fs
shrb
lcall
fistpll
adc
les
push
call
add
sub
gs
insb
sub
or
movb
inc
repz
test
mov
inc
pop
push
push
scas
repz
cltd
fimuls
sarl
cmpsb
inc
mov
jge
cs
or
lret
scas
pop
cmpsb
lret
fimull
or
lds
push
jb
pop
insl
cmp
sbb
push
fisttpll
mov
andps
jge
ret
mov
sub
mov
sti
pop
mov
mulb
out
leave
scas
or
cmpsb
in
in
loop
xchg
aaa
xlat
xchg
in
in
xor
jae
insl
pop
and
jne
mov
push
mov
dec
mov
arpl
jbe
aaa
ret
mov
jbe
pop
xchg
in
adc
jle
pushf
icebp
xorb
inc
cli
sub
cmp
leave
adc
sti
jo
test
sub
sahf
montmul
cmpsb
xorb
mov
scas
movsl
xorb
jns
sbb
mov
jle
cmp
cmc
out
mov
cmpsl
es
mov
mov
push
aas
stos
fiadds
mov
sub
pop
push
sahf
fistps
leave
inc
xor
fstpt
inc
iret
mov
out
subl
outsb
mov
idivl
jp
imul
jle
das
xchg
cltd
aam
stc
in
jnp
mov
push
cmp
jl
loopne
jns
fwait
stos
pop
xchg
xor
xchg
cwtl
dec
mov
cmc
xorl
jb
arpl
xlat
jg
inc
fistl
das
mov
inc
mov
int3
push
out
es
jbe
in
mov
adc
lahf
sbb
xchg
mov
xor
mov
jnp
sti
add
dec
ja
sti
fwait
idivb
popa
mov
mov
mov
into
or
lock
xchg
lods
cmp
test
xchg
and
dec
xchg
mov
xchg
inc
lret
jnp
dec
mov
scas
and
mov
fsubrl
bound
pushf
cmp
fwait
std
mov
packuswb
sarb
cmp
std
mov
ja
es
inc
clc
jne
sbb
push
repz
dec
mov
pop
outsl
cs
mov
mov
and
xchg
lods
push
and
push
jp
inc
shlb
cmpsl
pop
stos
pop
cmp
push
test
dec
add
dec
das
cltd
nop
fdivs
arpl
adc
mov
push
push
xchg
out
xorl
push
xchg
lds
test
add
cmp
movsl
jmp
ljmp
fdivl
mov
mov
scas
add
icebp
xchg
or
push
fwait
cmp
jbe
xchg
xor
sbb
sarl
fistpll
lock
dec
rep
xchg
sbb
loop
lods
pop
int
nopl
ret
xor
sbb
mov
xchg
scas
xchg
jecxz
out
lahf
rorb
xor
mov
push
enter
or
out
aaa
jecxz
jno
add
jmp
push
mov
xchg
add
cmp
jle
mov
dec
clc
fildll
mov
xchg
lods
xchg
jb
pop
scas
pop
jae
gs
and
jmp
jl
mov
std
popf
dec
mov
push
push
mov
sub
pop
or
adc
inc
xchg
push
add
aaa
outsl
dec
loopne
inc
rorb
sub
in
xor
sub
mov
mov
mov
jnp
jne
jg
insb
cmp
jo
aad
mov
notl
mov
pop
mov
stos
pop
fs
nop
cli
inc
iret
in
stos
cmp
sub
fsubrl
shll
pop
lods
and
les
leave
inc
rcr
jmp
jecxz
jle
mov
shl
adc
mov
xchg
inc
push
pushf
push
cmp
or
pop
mov
test
adc
adc
pop
daa
xchg
push
xor
in
pop
lret
in
jg
xchg
hlt
stos
insl
xor
jp
jne
loop
xchg
nop
dec
hlt
push
xor
push
jbe
push
mov
xchg
add
ja
jg
or
dec
add
mov
jne
and
adc
std
aaa
popf
dec
mov
cli
pushw
popa
test
inc
sahf
xchg
ds
pop
and
das
fwait
cmp
sti
cli
out
outsb
int
push
mov
jno
xchg
scas
or
mov
andb
cmp
cmp
jmp
and
bound
dec
ret
inc
das
mov
mov
mov
int3
daa
shll
jg
andb
into
adc
add
sahf
sub
xacquire
fs
adc
call
pushf
ret
or
lea
cmp
or
loop
lahf
scas
push
or
push
add
dec
cmpsb
pop
jge
icebp
bound
dec
mov
leave
popa
inc
movsl
mov
xor
cmp
sbb
adc
mov
outsl
cmp
dec
pop
jae
imulb
call
loopne
stos
xor
mov
ss
mov
daa
call
jo
out
push
insb
dec
das
dec
stos
roll
or
out
dec
push
movsb
outsb
adc
adc
xor
jbe
sbb
xchg
xchg
cmc
cmp
xchg
les
sahf
cld
movsl
xchg
xor
in
sub
call
sub
push
mov
lods
sbb
adc
push
andb
xor
arpl
or
add
mov
int
aam
cltd
xor
data16
and
ja
int
sbb
loopne
and
mov
xchg
fisubrl
in
dec
and
jge
mov
mov
xchg
push
ret
push
rorw
testl
xchg
push
add
lcall
nop
cld
inc
lods
pop
aas
outsb
jecxz
stos
pop
cmp
push
in
dec
mov
and
imul
ljmp
mov
test
cmp
es
ret
lahf
xchg
mov
add
sbb
fstpl
mov
mov
cmp
cmp
pop
mov
push
mul
aaa
mov
cmp
mov
pop
push
push
cmc
fnstenv
inc
stos
mov
add
lcall
xor
xor
sbb
je
int3
inc
cmp
pop
cmp
sbb
mov
ljmp
push
push
jne
mov
and
pushf
ret
arpl
jmp
and
xor
cmp
stos
fwait
pop
jo
xchg
inc
cmp
mov
mov
lock
test
sub
insb
fdivrs
lock
mov
inc
lds
push
dec
lcall
fildl
inc
lahf
aas
fisttps
sarb
and
in
pop
or
mov
and
fildl
or
loop
adc
add
sti
push
fnstcw
mov
cld
xor
in
repnz
rcrb
mov
in
push
insl
mov
add
adc
rcrb
test
xchg
xchg
cmp
pop
hlt
push
add
leave
jns
repz
add
es
inc
stc
xchg
daa
xlat
pop
xor
mov
fstl
pop
repnz
pop
jno
mov
sbb
jnp
icebp
add
push
push
add
add
loope
shlb
push
mov
cmp
addr16
cmpsl
xchg
test
lahf
addl
clc
xlat
cmp
pop
insb
lcall
push
mov
int3
xchg
insb
jmp
sbb
loopne
jno
stos
jmp
add
cmpb
ja
cmp
add
mov
push
push
cmpsb
mov
pop
leave
push
pop
mov
mov
jmp
and
ljmp
clc
inc
jns
pop
mov
cmpsl
xor
loop
xlat
div
js
xlat
adc
mov
cmpsb
add
insb
lret
fs
in
xchg
lock
shll
mov
pop
mov
dec
and
rcrl
sub
movsb
and
lret
sbb
stos
jb
gs
iret
outsl
fldenv
int
add
hlt
data16
fwait
test
popf
fsubrl
pop
cli
aas
out
fldenv
pop
imul
out
push
mov
popa
shr
lods
add
add
jp
in
repnz
aad
aas
out
int
out
mov
in
incl
lahf
jnp
arpl
test
not
xchg
clc
js
jnp
inc
negb
push
int
fs
ljmp
lcall
mulb
fwait
cltd
and
dec
clc
pop
sub
or
dec
cld
pusha
pop
std
mov
adc
mov
mov
xor
mov
fimull
test
sbb
adc
jb
jo
inc
inc
addr16
in
add
mov
inc
aam
das
ds
mov
std
xor
inc
call
gs
cmc
pop
xchg
hlt
sbb
pop
shll
sub
add
push
mov
clc
mov
pop
hlt
and
fimuls
repnz
loopne
and
mov
push
inc
outsl
movswl
push
or
add
xor
adc
popf
or
in
pop
insl
lahf
jecxz
inc
xor
outsb
push
xchg
popf
and
loope
adc
adc
xchg
mov
in
movsb
and
mov
les
and
popa
out
push
mov
push
ja
mov
mov
xchg
inc
mov
xorl
ret
push
je
imul
aam
lcall
shl
mov
mov
aad
and
sbb
lods
pop
lock
push
out
mov
andl
sub
fisubl
or
inc
out
arpl
push
pop
xlat
xor
aas
out
jne
jmp
insb
fwait
pop
movsb
adc
mov
xchg
sub
push
mov
flds
adc
xlat
or
add
inc
xchg
add
mov
rcrl
call
cmp
stos
push
or
sarb
in
into
in
xor
enter
loope
add
ret
inc
sarb
fimuls
mov
xchg
mov
in
add
or
addb
jle
sarl
mov
shl
add
mov
out
jmp
mov
mov
xchg
outsb
in
je,pn
in
into
stc
sti
stos
sub
push
lret
vmovdqu
inc
outsb
lea
clc
enter
roll
mov
push
sbb
jge
mov
inc
fistpll
jg
nop
cmpsl
test
inc
xchg
xchg
sub
mov
int
jae
test
lcall
pop
jne
dec
hlt
rorl
mov
aam
out
lret
imul
mull
sti
xchg
fmuls
mov
sahf
ss
mov
pusha
jecxz
cmpsb
ja
shlb
popa
cmp
inc
clc
fisttpl
movsb
adc
setp
andl
sub
sbb
sbb
add
jo
cmp
dec
dec
sti
inc
pop
push
xlat
or
pushf
es
dec
and
push
xor
push
cmpsl
xchg
cltd
mov
ss
inc
dec
mov
in
loop
mov
fistl
shlb
adc
push
jno
sub
mov
sub
mov
push
pop
push
adc
out
nop
out
pop
out
repnz
jno
mov
cltd
roll
jp
clc
adc
xchg
hlt
stos
ret
outsl
in
das
pop
iret
test
xor
mov
cld
data16
jb
popf
mov
dec
xor
out
and
add
lock
lret
addb
inc
jo
or
jns
xor
mov
jns
sbb
lahf
sbb
mov
dec
and
cli
lods
sub
jae
and
push
pop
outsl
ret
lahf
or
cs
sbb
and
cmp
pop
or
mov
xchg
mov
add
mov
mov
xchg
loopne
pop
aaa
in
out
xor
mov
lea
insb
ljmp
cs
cltd
cmp
fwait
cmp
fcmovbe
cmp
out
push
dec
mov
lret
lret
sbb
mov
jne
sbb
pop
sbb
xor
xor
xor
add
jno
fisttpll
wrmsr
pushf
add
lret
ret
pusha
adc
mov
push
loopne
icebp
xchg
sahf
add
lods
shll
popf
sub
add
or
lcall
insb
dec
das
mov
flds
jo
loop
int3
push
leave
stos
ljmp
cmc
movsl
and
jge
loopne
out
pop
push
mov
jnp
cwtl
jne
adcb
sarl
mov
andb
mov
dec
mov
pop
lcall
les
mov
mov
inc
orb
mov
mov
fdivs
mov
add
cltd
dec
mov
testb
test
leave
scas
sbb
lods
sbb
imul
or
pop
inc
mov
iret
lock
inc
pusha
adc
adc
push
movsl
jnp
fisttps
rorl
pushf
insb
push
in
mov
sub
fs
in
loope
or
in
sbb
shr
add
test
loope
sbb
mov
push
pop
ja
scas
and
inc
in
add
jp
dec
jle
cmc
adc
push
dec
xor
mov
imul
inc
jbe
fnstsw
out
mov
outsl
stc
jl
or
jge
sbb
jmp
adcl
mov
imull
jbe
dec
pusha
movsl
inc
scas
pop
mov
and
aad
lds
inc
cmc
pop
out
movsl
lcall
into
jg
jnp
stos
lock
xorl
rcll
leave
xor
xchg
pcmpeqd
mov
in
sbb
fidivrl
repz
mov
inc
iret
mov
mov
in
mov
faddl
scas
fildl
in
popf
xchg
or
dec
xor
and
push
push
mov
fmuls
adc
test
shlb
xor
sbb
ja
loop
out
dec
ret
mov
jg
sub
adc
mov
rcr
adc
push
jp
bnd
in
pop
lods
out
mov
test
test
and
cmp
or
fistl
pop
shlb
xor
dec
mov
pop
xor
mov
jnp
fwait
in
pushf
adc
cmp
loope
movsb
jne
fcoml
repnz
xchg
mov
xchg
cltd
cmp
es
pop
ljmp
add
xchg
and
shlb
out
nop
out
xchg
pop
cli
sahf
xor
movsl
add
rorb
lahf
push
icebp
cmp
mull
sahf
inc
cmp
mov
or
xor
xor
xchg
fmull
push
jmp
data16
sbb
lcall
mov
clts
and
arpl
iret
add
into
lods
pop
push
gs
cmp
clc
das
addb
mov
jg
mov
stos
sbb
xor
insb
loope
jne
inc
cltd
jne
inc
xchg
ja
outsb
mov
movsl
sub
lret
xchg
jmp
jmp
int
cmp
and
orb
ret
sbb
jae
fildll
inc
outsl
cltd
mov
inc
aas
nop
inc
mov
in
sub
cmp
sahf
sahf
sbb
jno
cmpsb
or
ds
adc
xchg
or
in
or
mov
mov
rolb
ret
das
mov
inc
pushf
nop
aas
pop
sar
in
loop
lods
pop
add
out
sbb
enter
scas
rep
cmp
pop
or
mov
xchg
add
ss
ret
jmp
negl
into
enter
pushf
xor
fidivrl
or
ja
xchg
sbbl
lds
imul
xlat
xor
das
mov
ret
lret
xor
cld
mov
mov
dec
pop
add
mov
or
jle
push
push
aad
shll
add
push
lcall
sbb
test
mov
fsts
movsb
push
xor
xchg
add
and
into
xor
xor
and
sbb
ja
loope
stos
pop
jne
outsl
pop
jl
add
out
push
cmp
shl
lods
ja
sarl
cmp
sub
adc
inc
in
cmc
stos
cmp
cmp
call
xorl
xchg
fmull
mov
test
les
xchg
std
mov
push
clc
xchg
imul
sub
imul
sarl
cmp
lds
xor
cmp
inc
or
test
ret
xchg
inc
lds
out
cmpsl
aam
loope
jecxz
cwtl
int3
jns
fsts
sub
xchg
and
scas
and
mov
cmp
cmp
lock
and
cli
hlt
xchg
lea
sbb
jle
mov
out
loope
pop
xor
cmp
lahf
shrb
jl
in
icebp
cmpsb
lods
lcall
mov
clts
js
inc
scas
or
push
mov
test
scas
sub
sbb
push
inc
aam
jae,pn
lods
inc
xchg
mov
andl
popf
sbb
mov
adc
fsubrs
mov
add
out
outsb
leave
inc
outsb
subl
jae
sbb
imul
and
inc
xor
jmp
and
sub
repnz
mov
js
push
fwait
mov
mov
jb
shll
mov
iret
push
jmp
inc
or
daa
xor
test
xorl
inc
fwait
or
shrb
lds
xchg
and
mov
stc
xchg
sub
add
loope
push
cs
sbb
jno
aaa
push
xchg
add
jecxz
jae
test
notl
mov
int3
iret
mov
nop
test
pop
inc
add
sub
inc
iret
icebp
ss
pop
xchg
or
cmpsb
or
jle
lea
popa
scas
rorb
push
jmp
lret
ds
pop
xchg
xor
aas
mov
adc
scas
push
or
or
aas
mov
xchg
inc
push
xor
cld
pop
cmp
or
movsb
mov
scas
sti
jo
mov
add
and
dec
scas
pop
lds
mov
jmp
pusha
int
movsb
ds
push
and
loop
fistpll
xlat
xchg
or
or
pop
xchg
adc
adc
add
push
jae
and
adc
repz
mov
xor
inc
shll
test
lret
ss
int3
jmp
js
inc
testl
push
stos
popa
push
shl
mov
gs
das
fwait
cmp
pop
pop
dec
js
cwtl
add
dec
add
sbb
test
dec
repz
insb
and
call
les
jno
addb
data16
cmp
or
xlat
sbb
xor
sar
test
mov
leave
sbb
push
shrl
jnp
jmp
xor
xor
cmpsl
jbe
sbb
aam
jne
push
push
push
mov
scas
pop
sub
or
jnp
pop
les
lret
es
mov
jl
jbe
sub
arpl
fldl
out
nop
in
jmp
sbb
insl
and
jmp
pop
ljmp
mov
pop
cmp
sbb
in
xchg
xchg
loopne
and
jnp
inc
fldln2
mov
jg
jb
fs
lea
mov
mov
mov
or
cld
lods
sbb
pop
lds
sub
cmpsb
shll
xchg
add
into
sub
fwait
sub
mov
inc
enter
pop
int
rcrl
popf
or
sub
push
mov
sbb
push
add
scas
addr16
jb
arpl
pusha
iret
or
std
shl
xor
out
dec
out
pop
and
lcall
outsl
and
test
movsl
pop
jae
popa
fdivrl
cmp
push
inc
jmp
mov
insl
mov
lahf
or
into
sub
es
cmp
mov
aas
insl
mov
cmp
or
pop
jne
xchg
aam
cwtl
stc
mov
xchg
mov
cli
loope
in
int
pcmpgtd
sbb
inc
inc
std
mov
jl
in
add
sbb
data16
daa
xchg
and
aaa
xchg
pushf
add
xrelease
adc
xlat
xchg
dec
and
dec
fadd
dec
in
mov
es
add
mov
ret
imul
shrb
mov
sahf
mov
lods
sub
imul
inc
ljmp
and
pushf
std
insb
inc
sub
mov
ret
dec
or
sbb
js
out
test
sub
mov
mov
sbb
add
pop
mov
cld
push
xchg
cmp
sarl
gs
adc
push
lods
gs
or
out
loop
hlt
stos
or
lahf
fsubs
ficoms
aam
rorl
add
int
cli
sbb
inc
pusha
and
daa
int3
xor
cmp
jnp
sar
lcall
mov
lods
call
xor
mov
push
imul
xchg
std
mov
jo
xchg
jo
lea
jb
mov
mov
mov
sti
cwtl
or
aas
fisttps
aam
int3
add
sti
stc
ds
jmp
and
lea
sub
fldln2
out
add
mov
jnp,pn
movsl
mov
lfs
pop
cmp
call
sub
mov
push
cmpl
roll
adc
jno
hlt
adc
arpl
push
add
imul
cld
fwait
cld
rcl
sbb
or
cli
push
andb
sub
cli
outsl
in
out
add
mov
push
rorl
jg
cmp
fwait
pop
outsb
aad
rcrb
lret
jl
and
js
mov
jno
inc
stos
xor
xchg
inc
xor
fistps
or
jg
mov
aas
out
pusha
jo
lret
sub
mov
cmp
popa
mov
adc
jg
dec
xlat
xchg
mov
cli
adc
jg
and
dec
out
pop
insb
hlt
dec
outsb
mov
push
shll
xchg
js
mov
mov
inc
pop
push
mov
shll
xchg
cmc
les
loope
mov
xchg
mov
jbe
pop
cmp
xchg
out
and
inc
leave
call
pop
rep
int
cmpl
push
or
dec
mov
loop
add
stos
fidivrl
sti
addr16
lret
imul
mov
pop
jmp
or
outsl
push
sub
aas
stos
pop
movsl
add
mov
aad
fiadds
sbb
push
mov
out
cmpb
rcrl
push
bound
xor
jp
push
xor
mov
xchg
push
inc
mov
cwtl
add
repz
inc
cwtl
mov
hlt
addr16
lea
out
packsswb
mull
aas
mov
rorl
jnp
lods
mov
and
jle
xor
mov
cmp
add
add
cwtl
dec
test
or
mov
cmp
aam
adc
incl
xchg
mov
cmpsl
push
adc
mov
xor
inc
lock
fnsave
xor
dec
test
sub
jl
mov
mov
in
insb
sahf
shlb
jmp
das
xchg
mov
stos
lret
jg
or
cmpsb
jp
aam
pop
stc
push
ffree
and
mov
add
add
rcrb
jae
fmull
adc
fldenv
push
jns
and
push
pop
ja
inc
lods
cmp
mov
inc
mov
dec
xor
adc
jl
xor
ffreep
pop
jp
out
mov
push
mov
push
mov
add
pop
sub
xchg
pop
sub
mov
push
mov
push
mov
add
sub
mov
addl
pop
push
mov
sub
add
add
mov
pop
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
das
pop
cmp
lahf
mov
mov
add
jmp
orl
gs
sbb
or
call
jbe
ja
cmp
jmp
pop
add
test
addb
test
lock
inc
outsb
add
xor
mov
add
mov
mov
mov
sub
xor
sub
jmp
adc
mov
cmp
das
ret
xchg
mov
clc
popl
js
movswl
sub
cld
dec
jb
sub
jne
xor
jmp
ja
movsb
fnstenv
arpl
inc
sub
add
add
jmp
mov
jns
xor
fnsave
dec
out
xor
test
add
jno
aam
jno
jmp
cs
mov
xchg
scas
jmp
shl
ljmp
outsl
sti
mov
add
jno
aam
jno
jmp
pop
sub
add
scas
mov
jmp
fldt
jmp
icebp
in
push
adc
mov
add
pop
aam
add
xorb
jno
push
xor
jno
imul
jo
jno
jmp
mov
aam
jno
jmp
jno
sub
jno
imul
scas
jmp
hlt
jae
out
mov
andl
add
jne
xchg
scas
mov
add
lea
mov
divb
inc
fnstsw
xchg
loopne
mov
xor
inc
or
ljmp
mov
jmp
mov
xor
arpl
adc
insl
or
in
add
jno
mov
sbb
xor
mov
add
xor
loop
mov
dec
clc
xchg
js
mov
dec
clc
xchg
inc
or
mov
out
jae
fnsave
mov
pop
popa
xchg
add
jno
jmp
ja
jmp
into
cmp
wrmsr
bound
inc
lret
lret
add
sbb
std
and
or
mov
jmp
jecxz
mov
bound
mov
and
push
mov
inc
popa
pushf
or
dec
push
pushf
aas
dec
push
ja
dec
push
mov
inc
popa
pushf
or
loop
lahf
inc
aas
dec
rcrb
jbe
xor
mov
and
xchg
cmp
test
sbb
dec
push
test
ds
das
stos
cmp
inc
inc
dec
xchg
mov
inc
push
bound
cmp
inc
inc
dec
xchg
xchg
loop
cmp
sahf
popa
xor
inc
sub
adc
xchg
push
xor
dec
mov
sub
mov
adc
das
stos
xor
insl
ja
xor
popa
and
push
mov
popa
loop
ja
loop
ja
loop
ja
loop
ja
leave
scas
jns
loop
cld
xchg
add
clc
out
jle
in
mov
pop
xor
popa
loop
adc
lds
adc
mov
xor
std
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
jecxz
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
xor
mov
add
mov
fistps
cld
test
xor
fsubrp
ret
mov
cld
xchg
xor
cld
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
jecxz
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
xor
mov
add
mov
fistps
cld
test
xor
fsubrp
ret
mov
cld
xchg
xor
std
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
jecxz
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
xor
mov
add
mov
fistps
cld
test
xor
fsubrp
ret
mov
cld
xchg
xor
cld
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
jecxz
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
xor
mov
add
mov
fistps
cld
test
xor
fsubrp
ret
mov
cld
xchg
xor
std
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
jecxz
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
push
pop
data16
loop
hlt
dec
cld
mov
add
mov
dec
cld
mov
jle
loop
dec
icebp
cmp
pop
pop
repnz
fcomp
icebp
imul
icebp
cmp
pop
loop
sti
pop
loop
ja
jge
jno
out
mov
adc
popf
inc
jno
out
cs
ja,pn
addr16
mulb
pop
pushf
push
pop
data16
loop
hlt
dec
cld
mov
add
repnz
fsubs
jecxz
out
stos
cld
xchg
mov
pop
std
mov
cmpsl
cmp
ja,pn
fcmovnb
sbb
mov
popf
gs
mov
std
mov
cmpsl
cmp
dec
ja
gs
out
jle
hlt
mov
fistps
jo
ja
imul
mov
out
pop
loop
sti
pop
loop
ja
xchg
add
clc
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
add
mov
mov
std
mov
cmpsl
fsubl
jecxz
out
jle
pusha
loop
imull
out
dec
jnp
gs
jecxz
out
jle
gs
das
add
stos
mov
pop
xor
int3
xchg
mov
push
lret
aam
mov
andl
adc
mov
fistps
sbb
mov
adc
mov
fistps
pushf
js
sub
xchg
add
clc
out
jle
in
mov
pop
xor
popa
loop
adc
lds
add
mov
dec
jnp
loop
cld
fwait
mov
sub
mov
adc
stc
push
out
pop
aam
or
pop
inc
repnz
fsubs
jecxz
out
stos
cld
xchg
mov
pop
std
mov
cmpsl
cmp
ja,pn
fcmovnb
sbb
mov
popf
gs
mov
std
mov
cmpsl
cmp
dec
ja
gs
jecxz
out
jle
hlt
mov
fistps
jo
ja
imul
mov
out
pop
loop
sti
pop
loop
ja
xchg
add
clc
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
add
mov
mov
std
mov
cmpsl
fsubl
jecxz
out
jle
pusha
loop
imull
out
dec
jnp
gs
jecxz
out
jle
gs
das
add
mov
int3
xchg
mov
push
lret
aam
mov
andl
adc
mov
fistps
sbb
mov
adc
mov
fistps
pushf
js
sub
xchg
add
clc
out
jle
in
mov
pop
xor
popa
loop
adc
lds
add
mov
dec
jnp
loop
cld
hlt
mov
sub
mov
adc
stc
push
out
pop
pop
pushf
loopne
ja
ja
sub
loop
int3
xchg
mov
jecxz
out
xchg
mov
pusha
lret
ss
imul
pop
xor
adc
ja
fsubrp
ret
mov
cld
xchg
xor
cld
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
push
lret
and
ja,pn
aam
mov
pop
aam
or
pop
inc
repnz
cmpsb
gs
jecxz
out
das
ja
loop
cld
xchg
mov
dec
std
mov
cmpsl
cmp
ja,pn
fcmovnb
sbb
mov
jle
jmp
andb
cmp
mov
ja,pn
leave
mov
popa
loop
jnp
gs
jecxz
out
jle
gs
das
add
and
fistps
int3
xchg
mov
push
lret
aaa
pop
data16
loop
cld
xchg
ja,pn
call
mov
std
mov
js
loop
adc
mov
fistps
pushf
js
sub
jmp
mov
pop
loop
sti
js
ja,pn
gs
lret
lahf
cmpsb
lret
lods
xchg
adc
lret
in
xchg
mov
cld
push
dec
xor
fisubs
inc
addr16
std
mov
ss
imul
pop
xor
adc
ja
fsubrp
ret
mov
cld
xchg
xor
std
mov
cmpsl
scas
xchg
add
clc
out
fucomp
inc
add
push
lret
and
ja,pn
aam
mov
pop
aam
or
pop
inc
repnz
fsubs
jecxz
out
stos
cld
xchg
mov
pop
std
mov
cmpsl
cmp
ja,pn
fcmovnb
sbb
mov
popf
gs
mov
std
mov
cmpsl
cmp
dec
ja
gs
clc
out
jle
hlt
mov
fistps
jo
ja
imul
mov
out
pop
loop
sti
pop
loop
ja
xchg
add
clc
out
fucomp
mov
xchg
add
clc
out
fucomp
inc
or
cld
jecxz
mov
mov
fmulp
addl
subl
cmpsl
cld
ret
mov
pop
lret
lahf
lods
xchg
adc
lret
in
xchg
mov
jecxz
out
hlt
cld
jecxz
mov
gs
cltd
fmulp
addl
subl
cmpsl
cld
inc
add
pop
lret
lahf
jne
push
out
lods
xchg
adc
lret
in
xchg
mov
pusha
lret
cld
jecxz
mov
cs
mov
push
ja
mov
loop
out
cmpsl
cld
and
mov
mov
ds
and
jnp
sbb
test
and
ds
stos
sbb
je
fisubl
mov
pop
lret
aam
mov
imul
sbb
bound
das
stos
aaa
jmp
imul
pop
fildl
scas
or
push
dec
ja
ja
repz
jmp
imul
pop
fildl
scas
or
lods
test
gs
pop
pop
adc
scas
adc
lretw
jnp
loop
adc
insb
fwait
cmpsb
mov
dec
icebp
das
cmp
inc
mov
mov
sub
sub
adc
dec
cwtl
or
stos
mov
mov
loopne
pop
stos
push
ret
aam
xorb
push
leave
aas
ja
loop
fstpt
add
lods
sub
adc
test
popa
loop
xorb
ja
loop
lods
or
ja
xor
inc
jmp
ja
loop
cwtl
pop
adc
adc
cs
or
cs
pop
insb
das
ja
loop
scas
or
test
test
sub
ja
leave
xor
or
int3
call
ja
loop
scas
loopne
in
out
out
cmp
mov
and
gs
dec
lret
in
lret
or
xchg
inc
inc
push
xchg
inc
inc
jg
fsubp
ja,pn
cmp
gs
mov
xchg
push
rclb
lret
popa
loop
scas
mov
out
mov
popa
loop
cmpsb
mov
insb
inc
mov
lcall
add
icebp
pop
out
pop
dec
rcrl
loopne
ja,pn
inc
push
sbb
ja,pn
xor
cwtl
loopne
adc
aam
adc
mov
add
punpckhwd
gs
jae
gs
and
ss
push
push
imul
push
in
jmp
mov
andb
aas
sub
add
pushf
enter
mov
in
sbb
mov
popf
popa
xor
jbe
loop
push
or
xor
and
xor
loop
mov
mov
xor
loop
ja
mov
cs
or
xorb
xor
popaw
loop
jecxz
fadd
mov
addr16
ljmp
fisubrs
dec
adc
jns
mov
pop
mov
addr16
xor
or
cwtl
push
addr16
sbb
ja,pn
xor
and
ja,pn
gs
stos
movsl
cmpb
add
loop
ja
xchg
cs
int3
pop
pop
sahf
xor
jb
fldcw
pop
push
orl
cmp
andb
rorb
aas
aaa
pop
pop
jecxz
leave
sub
popa
loop
arpl
xchg
clc
sbb
sub
add
loop
ja
inc
cs
mov
rclb
fmul
sarb
aas
sbb
or
ret
and
ja,pn
jp
daa
mov
daa
daa
fisttps
gs
popa
loop
xor
out
test
rorb
dec
ja
lret
popa
loop
mov
cmp
mov
popa
loop
stos
mov
ljmp
adc
dec
cmpsl
adc
pop
lods
or
jp
or
pop
cmp
jg
cmp
mov
adc
adc
loop
ja
xor
pop
mov
popf
adc
jne
imul
dec
ja
popf
push
insb
lret
sub
mov
bound
ja
leave
inc
ja
loop
inc
fistps
into
clc
xchg
fisubs
mov
add
leave
sub
loop
movl
xor
popa
leave
sub
aad
mov
test
xor
ror
loop
movsl
inc
inc
push
movsl
or
dec
mov
daa
lea
popa
xchg
lock
mov
jae
gs
sub
popa
loop
nop
fst
data16
call
scas
adc
dec
jge
sub
lret
jbe
jge
imul
dec
ja
fists
inc
stos
push
cmp
mov
popa
loop
and
ja,pn
testb
xchg
mov
jnp
xor
jl
das
cmpsl
mov
add
or
pop
gs
jae
gs
ja,pn
and
inc
add
pushf
sti
cmp
push
ja
or
pop
insl
mov
roll
enter
cs
int
push
push
sbb
iret
xchg
ror
adc
mov
popa
loop
xchg
inc
inc
dec
cwtl
inc
outsl
xor
and
mov
cwtl
and
mov
cmp
xchg
inc
jmp
ja
loop
and
ja
daa
xchg
inc
xchg
sbb
ja,pn
cmp
inc
leave
sub
loop
movsb
pop
jne
test
adcb
cmpsl
lahf
enter
fimull
pop
and
into
das
sarl
xchg
jg
in
mov
jb
int3
shr
mov
in
xor
mov
ja
bound
ja
xor
ja
lcall
inc
inc
push
xorb
movsl
pop
adc
or
ja
inc
inc
mull
ja,pn
xor
dec
or
push
xchg
pop
imul
popa
loop
scas
inc
inc
stos
mov
popa
loop
dec
lock
pop
dec
js
test
ja
lret
repnz
int3
add
jmp
test
and
ja,pn
shll
dec
mov
pop
pop
adc
add
ja,pn
jmp
ja
outsb
inc
mov
inc
aad
add
loopne
insl
or
ja
fcoms
daa
in
sub
mov
xchg
pop
fwait
xlat
cwtl
cmp
sub
pop
test
popf
lret
popa
loop
jns
gs
jnp
rolb
cmp
sbb
ja,pn
leave
inc
ja
loop
aas
sub
into
xchg
stc
enter
jge
hlt
mov
xor
lock
ja
loop
ja
das
xchg
adc
jg
pop
insl
das
ja
loop
dec
inc
inc
jns
pop
adc
scas
fisubl
adc
imul
loope
ja,pn
jmp
ja
loop
cwtl
jle
adc
inc
ja
loop
xor
push
push
xchg
daa
mov
test
mov
stc
add
adc
or
ja
and
hlt
ja,pn
das
enter
cs
cmp
std
cltd
xor
xchg
cmpsl
mov
jb
push
scas
fdivrs
push
lret
hlt
xchg
push
ja
inc
cs
data16
ja
fs
ja
loop
movsl
mov
in
mov
inc
adc
adc
leave
inc
ja
loop
dec
in
jge
lret
mov
es
fld
push
cmp
adc
inc
ja
loop
fildll
aad
mov
pop
jae
out
xchg
mov
out
frstor
inc
movsb
pushf
jle
sub
in
cmp
out
pop
inc
outsl
and
das
ja
dec
das
test
popa
add
punpckhwd
gs
jae
imull
ja
and
ss
stc
divl
mov
in
pop
out
pop
cmp
pop
lret
popa
loop
mov
cmp
mov
out
ja
loop
test
sbb
add
push
loope
ja
cwtl
movsl
push
fidivrl
adc
aaa
repnz
fdivrs
adc
adc
loop
ja
das
bnd
jge
rcl
cltd
andb
pop
ja
cmp
gs
pop
pop
stos
add
or
rcr
xor
jge
loop
pop
notb
lret
cmp
cmp
int
leave
pop
scas
xchg
dec
je
out
push
clc
movsl
fwait
cmpsl
add
cltd
sbb
pop
jmp
jns
loop
out
pop
das
stos
pop
or
dec
mov
icebp
push
adc
cmpsl
adc
pop
lods
or
enter
cs
in
push
xor
add
add
test
repz
subl
mov
add
loope
out
pop
jmp
daa
jmp
dec
das
test
fildll
ja
add
or
pop
gs
jae
gs
ja,pn
and
idiv
leave
aas
ja
loop
jecxz
and
ret
mov
loope
aas
xchg
fiadds
out
pop
cmp
cltd
fidivl
sbbl
loop
ja
cmp
adc
adc
loop
ja
xor
sub
out
pop
addr16
sbb
ja,pn
leave
aas
ja
loop
and
mov
loop
lods
sub
aam
mov
imul
sbb
bound
das
stos
aaa
jmp
imul
pop
fildl
scas
or
push
dec
ja
ja
repz
jmp
imul
pop
fildl
scas
or
loopne
ja
clc
mov
inc
cld
sub
and
ja,pn
pop
push
mov
ss
dec
mov
test
xchg
push
fwait
pop
in
imul
push
push
push
xor
push
inc
mov
cmp
add
xor
dec
push
push
xor
push
fwait
addl
mov
inc
popa
push
xor
lcall
ja,pn
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
sub
inc
dec
bound
pop
push
ja
loop
ja
loop
ja
loop
and
cs
gs
pop
and
or
rclb
hlt
dec
cmp
pop
insl
mov
imul
js
loop
hlt
xchg
add
cmpsl
fcoml
test
and
ficoms
scas
pop
popf
cmp
out
jno
lods
dec
lods
shrl
out
stos
cld
out
mov
int3
xchg
add
mull
cs
arpl
popf
popa
dec
das
ja
mov
idivl
in
adc
pop
xor
mov
dec
cmp
pop
insl
mov
imul
mov
fcoml
fistps
stos
cmp
adcb
gs
and
ja,pn
insl
movsb
stos
in
mov
add
mov
pop
add
loope
out
pop
lcall
cmpsl
gs
lret
lahf
push
sub
scas
xchg
dec
je
out
stos
cld
out
mov
adc
loop
pop
popa
loop
ja
pop
out
sbb
loop
mov
shrl
loop
ja
loop
ja
loop
adc
xchg
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
jb
in
cs
push
lods
adc
pop
cs
pop
adc
push
popa
mov
cmpl
arpl
inc
jne
aas
add
adc
dec
mov
pop
call
ja,pn
loop
push
mov
mov
push
mov
push
mov
push
test
xor
mov
push
mov
push
mov
xor
ja
loop
ja
loop
mov
popa
loop
ja
loop
ja
loop
mull
inc
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
jne
loop
js
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
js
loop
js
loop
ja
loop
ja
loop
js
loop
js
loop
js
loop
ja
loop
js
loop
ja
loop
addr16
loop
ja
loop
dec
popa
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
out
pop
popa
loop
ja
loop
push
popa
loop
ja
loop
ja
loop
mov
es
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
scas
adc
outsb
stos
pop
cmp
popa
loop
jbe
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
inc
push
jp
lea
js
loop
ja
loope
out
test
das
jns
dec
push
nop
pusha
pop
xor
pop
xor
pusha
insl
xor
push
xor
add
ja
loope
out
test
cs
pusha
loope
pop
popa
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
jnp
loop
ja
loop
cmpsl
adc
subl
bound
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
pushf
xor
jg
popa
loop
mov
xor
mov
xor
mov
xor
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
pop
dec
pop
xlat
xorb
fstpl
loop
ja
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
ja
loop
inc
mov
pop
pop
andl
inc
mov
out
das
mov
xor
popa
loop
cs
cmpsl
jp
and
jnp
loop
inc
mov
xor
pop
cmp
and
loop
bound
push
xchg
cmp
sahf
jae
or
lahf
inc
aas
dec
ja
dec
dec
xchg
dec
push
xchg
loop
cltd
ds
push
pushf
xor
ja
inc
fs
mov
cmp
xchg
ds
push
ja
dec
inc
mov
inc
adc
bound
popa
mov
push
mov
xor
mov
dec
bound
popa
or
xor
inc
arpl
inc
bound
popa
or
cmp
bound
popa
loop
ja
or
inc
aas
dec
xchg
dec
arpl
loop
ja
loop
imul
mov
fistps
sti
pop
loop
ja
gs
lret
ja
loop
cld
jecxz
mov
bound
inc
mov
test
sbb
jno
movsb
movsb
dec
ja
add
cltd
sbb
pop
adc
add
cld
and
ja
xchg
adc
pop
fcoms
scas
fldt
mov
loop
mov
in
xor
leave
cmp
push
popa
jmp
pop
add
cld
data16
ja
leave
xor
and
fcmovnu
adc
sbb
and
ja,pn
leave
daa
jbe
loop
js
loop
mov
in
ficoms
scas
bound
ja
gs
popa
loop
push
arpl
cs
pop
loop
ja
cmpsl
ficoms
scas
leave
sti
jne
loop
int3
and
sub
fwait
sbb
ret
xlat
fistps
sti
pop
loop
ja
mov
out
das
ja
loop
add
xor
fistps
jne
loop
aam
fiaddl
psubw
cs
ja,pn
mov
sub
loop
fcoml
push
pusha
loop
jbe
ret
xlat
fistps
sbb
data16
loop
cld
push
out
andl
ja
insl
movsb
cltd
test
loope
ja
popf
psubw
mov
andl
jle
loop
cmp
sbb
ja,pn
lahf
lods
int3
xor
xchg
popa
fistps
imul
ret
xlat
fistps
sti
push
loop
ja
gs
lret
ja
loop
cld
idiv
mov
ja
insl
movsb
mov
mov
pop
aaa
loope
ja
popf
psubw
mov
andl
jge
loop
cmp
sbb
ja,pn
insl
movsb
xchg
test
loope
ja
popf
psubw
mov
andl
jge
loop
cmp
or
ja,pn
insl
movsb
ljmp
loope
ja
popf
psubw
mov
andl
jge
loop
cmp
or
ja,pn
insl
movsb
out
mov
pop
scas
loop
ja
popf
psubw
mov
andl
jge
loop
cmp
dec
or
pop
loope
ja
insl
movsb
lock
sub
xchg
loop
ja
popf
psubw
mov
andl
jge
loop
cmp
std
aaa
out
pop
loope
ja
insl
movsb
repnz
sub
jmp
ja,pn
popf
psubw
mov
andl
jge
loop
cmp
std
pop
out
pop
loope
ja
insl
movsb
in
mov
pop
out
ja,pn
popf
psubw
mov
andl
jge
loop
cmp
test
ja,pn
insl
movsb
int
mov
pop
psrad
ja
popf
psubw
mov
andl
jge
loop
cmp
lea
out
pop
loope
ja
insl
movsb
cmp
mov
pop
ja
ja,pn
popf
psubw
mov
andl
jge
loop
cmp
imul
popa
leave
xor
loop
imull
cs
push
loop
ja
sbb
and
ficoms
scas
lahf
dec
rcrb
ja,pn
mov
imull
sub
ja
test
sub
ja
loop
ja
and
imull
sub
ja
test
ficoms
pop
test
ja,pn
sbb
and
ja,pn
bound
push
pop
sub
loop
js
loop
and
ja
loop
ja
out
and
ja,pn
pop
loop
hlt
ret
xlat
fistps
ja
loop
cld
andl
ja
lahf
xchg
ja
loop
jle
jmp
jge
loop
cmp
or
ja,pn
bound
pop
sub
loop
cld
imul
andl
ja
stos
jle
loop
cltd
call
add
int3
sub
mov
ja
loop
push
cmpb
adc
clc
movsl
adc
popa
jmp
insb
popa
loop
and
ja,pn
pop
enter
cmp
ret
cmp
inc
ja
inc
mov
cmp
dec
mov
popa
and
pop
lret
cmpsl
inc
jns
fsubs
imul
loop
fdivp
inc
mov
jne
test
aas
sti
mov
or
rcr
xor
leave
sub
loop
inc
loop
movsl
mov
jnp
and
in
ja
loope
jo
ja
scas
loopne
sub
mov
jge
out
pop
addr16
cwtl
pop
out
push
addr16
ja
clc
mov
or
movsl
icebp
out
es
clc
mov
jmp
popaw
loop
idivl
loop
xchg
add
xchg
iret
pop
pop
scas
aaa
sub
push
adc
mov
arpl
xchg
xchg
xchg
test
outsl
add
jbe
ljmp
imul
sub
mov
ficompl
test
dec
fldenv
fnstsw
push
ret
daa
fcmove
lock
cld
lret
mov
lret
or
lock
jmp
push
push
pusha
and
inc
xor
shll
jg
sbb
idiv
lea
nop
cmpsl
dec
sbb
cwtl
xchg
fstps
xor
xchg
xor
test
adc
loop
repnz
aas
das
cmp
pop
or
cwtl
fidivs
dec
je
cmp
mov
in
dec
pop
scas
push
inc
xor
add
dec
insl
or
inc
jno
xchg
mov
adc
mov
push
add
je
mov
or
dec
mov
loop
dec
cli
xchg
mov
cli
sub
push
sbbb
mov
test
mov
enter
into
dec
arpl
repz
je
aad
mov
pop
stc
xchg
insb
sti
jne
xchg
fiadds
fidivrs
and
xor
das
push
xor
mov
adc
sub
lea
pop
sbb
in
add
leave
mov
pop
arpl
or
setge
sbb
mov
test
int3
lds
dec
movsl
or
and
cmp
mov
inc
push
sub
adc
add
cmp
nop
sbb
cltd
and
sbb
into
rcll
sbb
test
add
dec
incb
jle
pop
lcall
sbb
lret
ljmp
sbb
lds
std
in
rcr
in
sub
gs
in
cmp
mov
inc
and
es
daa
cmp
mov
sbb
les
xor
pushl
add
pop
shll
mov
arpl
iret
pop
mov
scas
pop
ja
jg
push
dec
inc
mov
jns
in
inc
sub
xchg
mov
add
jle
jns
adc
and
cmc
mulb
xor
cld
in
inc
jmp
cmpsl
cld
leave
aad
jge
fsts
mov
inc
hlt
movsl
sub
jmp
cmp
xchg
fimuls
fstl
xchg
adc
call
pop
inc
imul
nop
jnp
std
jge
sub
pop
or
xor
fdiv
cltd
xor
inc
inc
ror
pop
sar
cli
xchg
pushf
jb
std
aam
sbb
fmull
ror
mov
ss
push
jecxz
sub
test
mov
xchg
out
push
int
shl
flds
jge
scas
stos
add
test
mov
inc
push
jl
sub
std
mov
test
insb
mov
xor
mov
mov
add
mov
dec
and
pop
or
arpl
jg
cld
add
xor
xor
cmpsb
ja
test
shl
out
fisttps
leave
mov
shll
test
adc
ljmp
test
imul
add
cmc
jecxz
or
arpl
cli
mov
adcl
call
orl
jmp
push
cwtl
sbb
lock
jmp
jge
fwait
call
mov
add
ja
ret
push
adc
push
push
xorl
loop
mov
inc
ds
jp
lret
int
mov
mov
mov
xor
mov
mov
mov
cmpsb
adc
cs
fs
mov
ret
inc
loopne
outsb
push
int
add
test
or
je
aad
mov
adc
add
or
fcmovnbe
push
sbb
lea
jo
fidivl
xor
cmpsb
pop
jp
xor
inc
or
cltd
test
fdiv
rorb
shlb
pusha
fidivl
fsubrp
sub
dec
stos
sbb
push
xchg
sub
mov
addr16
insl
test
out
mov
cs
or
int3
or
xchg
je
dec
bound
ffreep
rcrl
sbb
xor
pop
mov
jbe
mov
dec
dec
test
lret
daa
movsb
out
ljmp
arpl
adc
mov
sbb
mov
push
sub
in
jp
adc
adc
push
inc
or
pop
adc
cmp
jmp
cmp
mov
pop
ret
sahf
cwtl
xor
imulb
jmp
xchg
popa
imul
jmp
imul
out
dec
pop
dec
ss
js
lock
add
sub
jbe
pop
ffree
test
mov
outsl
jge
inc
mov
icebp
lock
shrl
std
push
scas
and
xchg
lret
ffree
dec
filds
mov
pop
dec
add
test
leave
movsb
mov
popf
pop
cmpsb
rcrl
aad
and
dec
or
icebp
jne
inc
sbb
decb
cwtl
adcb
dec
cmc
lock
xchg
or
xchg
cmp
hlt
sub
dec
popa
push
and
adc
shlb
lahf
mov
std
lret
mov
mov
and
rorb
fistpll
jg
and
push
pop
scas
mov
imul
leave
mov
mov
pop
sahf
pop
inc
cmpb
push
insl
xor
mov
jmp
div
push
cmp
data16
xor
jae
jno
jae
aaa
mov
and
js
call
jnp
mov
jns
cli
or
stos
or
or
or
jmp
xchg
jbe
sbb
pop
inc
js
fs
pop
jle
test
arpl
in
data16
fsts
sub
repz
sub
jg
mov
cmp
out
lods
mov
lods
jns
in
inc
cmpl
cmp
scas
in
add
xor
jecxz
push
cld
dec
jbe
pop
dec
jmp
jg
and
xchg
push
pop
cmc
stos
repz
ficoms
cs
fcmovbe
hlt
sbb
xor
pop
fldenv
mov
sub
or
cli
xchg
out
jmp
int
fs
popa
test
popa
pop
mov
test
test
jl
jmp
sbb
loop
ljmp
ja
mov
pop
frstor
jp
sub
xor
lret
xor
jo
jge
xchg
sbb
repnz
cmp
add
outsb
leave
pop
movsl
jo
scas
call
rorl
pop
repnz
dec
scas
stos
fs
test
pop
mov
pushf
sbb
es
sub
scas
adc
pop
out
ds
imul
adc
xor
ds
push
push
jae
out
rcll
fnstcw
ror
push
cwtl
loop
mov
das
mov
call
das
lods
fisubrl
jle
sub
stos
adc
popa
mov
xlat
arpl
pushf
xor
lea
fldl
ds
dec
lret
sub
push
add
jg
sub
cmp
in
inc
aas
loope
push
adc
xor
icebp
les
xchg
lods
or
ficompl
aad
jae
les
mov
mov
fcmovb
mov
mov
jbe
mov
mov
inc
jg
mov
loope
jb
adc
movsl
xor
dec
cmpsl
jno
fistps
out
and
pop
inc
hlt
or
in
add
inc
xchg
test
adc
pop
cmp
inc
sub
lea
repnz
sbb
sti
lock
popf
adc
icebp
mov
push
scas
rorl
cmc
inc
test
dec
in
sub
loop
jg
ds
xchg
or
loop
jp
cld
xlat
sbb
push
add
sbb
jmp
jg
push
lds
jo
xchg
popa
push
mov
in
lds
ret
mov
bnd
dec
fcomp
outsl
sub
fucom
and
inc
mov
fwait
ds
jnp
inc
xchg
clc
sahf
mov
mov
ja
pop
or
mov
outsb
out
fildl
mov
adc
adc
push
jno
xor
mov
adc
fs
push
lea
and
outsb
daa
xchg
ljmp
enter
adc
cmp
xchg
xlat
push
arpl
sahf
aaa
cmpsb
push
pop
lret
mov
push
fildl
dec
lret
sub
sub
sbb
add
and
dec
fcomip
and
fisttpl
inc
or
sbb
push
jnp
arpl
fadds
or
gs
inc
fdivrl
sbb
pop
sti
fdivp
scas
add
jno
dec
repnz
jmp
xor
push
pop
jns
rorb
xchg
sbb
je
sub
pop
jbe
mov
xor
fxch
movsb
inc
ljmp
stos
xor
mov
ja
and
dec
sub
pushf
mov
call
inc
add
pushf
xor
scas
dec
jl
mov
sbb
xor
imul
jmp
mov
arpl
jnp
lods
push
sub
es
call
movsb
js
repz
les
adc
add
icebp
pop
push
fsubl
inc
test
pop
xchg
loop
lea
dec
jmp
subb
clc
jmp
in
in
lahf
sbb
jb
jb
shl
ret
or
adc
xchg
add
xchg
cli
cmpsl
dec
push
sbb
xlat
pop
push
or
fisttpll
xchg
mov
daa
addb
cli
incb
in
stos
mov
mov
or
xor
adc
jp
sbb
sbb
aad
stos
lods
mov
movsb
std
cmp
dec
lea
inc
int
sbb
test
nop
clc
or
rorb
inc
pop
ret
or
jns
insl
fmull
push
xor
aam
xchg
add
push
lds
mov
stos
lods
hlt
push
loopne
and
cmc
sub
dec
sbb
xor
cmp
inc
and
mov
fs
enter
xor
scas
orb
jnp
gs
push
and
and
jo
adc
shll
push
adc
popl
mov
and
xchg
sub
cmpsb
das
ljmp
test
jp
or
mov
mov
or
inc
pusha
jne
push
or
pop
mov
insb
cwtl
das
mov
aas
lea
xor
test
lahf
data16
or
sbb
xchg
mov
dec
inc
aaa
xor
mov
inc
loop
xchg
inc
xor
xor
fdivs
sub
mov
xchg
pop
xor
inc
cwtl
arpl
jg
push
test
adc
pop
aas
mov
add
cmovns
cmp
ret
push
jmp
xchg
sbb
mov
jne
insb
cmp
imul
neg
mov
aas
mov
xor
rcrl
xchg
or
mov
pop
stos
stos
jecxz
sbb
lods
fdivs
pop
mov
sub
mov
pop
xchg
dec
pushf
jle
or
fwait
mov
mov
jae
jge
hlt
das
fsubrp
in
ficomps
xchg
call
xchg
sbb
or
jge
movsl
insl
push
icebp
mov
xchg
mov
xchg
test
rcrl
std
jle
scas
mov
or
cwtl
or
mov
sbb
mov
lret
js
xor
lcall
lds
jg
movsb
ss
call
jnp
inc
pop
rcll
test
pop
sub
inc
inc
fiadds
jmp
mov
or
bound
push
or
xor
xchg
push
aas
mov
aam
xchg
push
inc
test
dec
hlt
fsubrs
sub
cmp
mov
mov
subl
sbb
mov
out
mov
mov
jl
stos
mov
pusha
push
daa
xchg
aam
aas
hlt
ret
jno
in
adc
and
adc
divl
cmp
inc
movsb
mov
daa
rorl
jmp
cwtl
push
mov
inc
pushf
sti
xchg
add
ljmp
iret
pop
icebp
cmpsl
push
sub
add
sahf
incl
xchg
arpl
stos
out
in
push
sub
jbe
setle
fnstenv
fdivrs
adc
xlat
lds
mov
rcrl
pop
adc
push
pop
cmc
push
insb
jl
and
dec
nop
inc
filds
ss
out
sbb
adc
std
movsb
mov
push
dec
xchg
xchg
es
test
dec
stos
mov
mov
movsb
jne
imul
pop
and
push
les
push
jmp
add
int3
test
aaa
jmp
add
lock
cmpsl
sbb
jbe
lahf
inc
pop
rorb
movsl
xorb
mov
daa
mov
sbb
mov
xchg
insb
pop
cs
xchg
cltd
enter
into
fldenv
jne
in
mov
add
int
add
xchg
mov
cmp
push
adc
sbb
loope
insb
loop
cmpsl
jns
roll
test
fstpl
cwtl
dec
and
or
xor
call
into
push
aas
lods
mov
adc
int
js
xlat
popa
xchg
xor
in
push
or
loop
sti
popf
fdiv
cmc
dec
jl
jge
xor
pusha
test
jp
addr16
pushl
mov
jecxz
sbb
and
int
jmp
sub
sub
mov
jg
pop
hlt
adcb
mov
arpl
mov
or
or
cmp
mov
incl
mov
sbb
xchg
daa
cmp
mov
inc
add
push
xchg
xor
cmpsl
call
push
repz
sub
aad
into
mov
push
xlat
jl
ljmp
popa
aaa
jns
nop
pop
xor
mov
mov
les
mov
cmp
out
int3
xchg
pop
pop
fwait
push
cmp
fsubrs
cmp
add
bound
insb
pusha
xor
and
nop
or
aad
insb
lds
or
repz
inc
inc
movsb
ret
scas
pop
int
xor
or
es
xchg
push
idiv
adc
sub
adc
inc
jg
sub
adc
push
dec
leave
push
nop
clc
cmc
xchg
inc
ror
xor
dec
and
pop
adc
test
xor
fistl
imul
sub
inc
inc
inc
rorb
push
scas
cld
cmc
dec
add
adc
cmpsb
push
add
mov
lock
cmp
repnz
aas
inc
ffreep
push
push
mov
add
cld
out
mov
pop
add
cld
stos
pop
repz
cmp
jo
mov
xlat
adc
leave
into
sbb
or
adc
mov
idiv
jp
in
add
adc
rol
pop
inc
inc
mov
adc
movsb
pop
out
xchg
push
or
mov
jbe
repz
jg
ret
into
lahf
dec
pop
jbe
xor
mov
jbe
repnz
pop
add
and
pop
jns
pop
stos
adc
ret
adc
int
jbe
add
jmp
das
mov
outsb
pop
add
jne
pop
test
out
fsubrp
sbb
mov
jbe
sub
pop
add
inc
adc
mov
add
jbe
ljmp
cli
movsl
xchg
or
xlat
js
push
adc
scas
cmc
push
je
add
test
rorl
push
clc
mov
ds
cmp
bound
icebp
nop
mov
in
dec
ss
cmpsb
dec
cld
in
cmp
insl
add
push
rolb
rorb
or
popf
adc
add
repnz
rcrb
xor
inc
inc
ds
sbb
mov
mov
scas
xor
mov
inc
stos
or
xchg
sahf
daa
cmp
dec
repz
lret
mov
cmp
mov
cmp
in
push
addr16
stos
shll
inc
xchg
xchg
in
lahf
out
pop
adcl
int3
mov
test
lea
adc
shl
push
mov
jge
adc
pop
test
adc
in
int
test
lea
lds
bound
ret
mov
test
scas
aam
cmp
inc
lcall
xlat
or
in
push
in
in
in
xchg
sbb
jnp
mov
xor
out
cld
out
or
fucom
hlt
jmp
data16
sbb
int3
mov
push
incb
lret
repnz
jbe
test
sbb
and
push
stos
xchg
sarl
pop
add
pop
repz
sbb
aad
mov
ret
in
mul
mov
mov
les
mov
push
movsl
sti
mov
adc
mov
xor
and
pop
inc
push
mov
sti
sahf
jmp
xchg
int3
sbb
ljmp
pop
jbe
mov
jb
add
jb
data16
cmp
add
in
ja
pop
cmp
and
addr16
jp
push
mov
mov
pmaxub
adcb
ds
out
rolb
call
cmp
push
push
pop
ror
inc
pop
jbe
sub
sub
add
cmc
inc
push
pop
jbe
mov
jmp
das
fsubrp
push
lea
pop
add
repz
scas
cmp
data16
sbb
pop
test
out
enter
add
jbe
xor
push
pop
jl
sbb
pop
jge
scas
or
push
dec
or
cltd
les
sar
ds
sub
or
push
and
sbb
gs
hlt
xchg
add
cmp
into
orl
mov
call
mov
test
mov
dec
pop
adc
mov
gs
inc
sbb
xor
sub
and
je
sub
push
mov
movl
cld
mov
push
movsl
in
or
mov
dec
repnz
xor
aam
xchg
jle
jae
sbb
clc
adc
dec
sub
pop
inc
fildll
std
mov
push
gs
cmpl
or
mov
and
in
insl
jb
fdivs
xchg
adc
lret
push
push
ret
fs
je
add
test
jbe
js
jp
xchg
iret
in
mov
addb
adcl
pop
xchg
cld
xchg
jl
or
pop
jbe
test
push
lret
jmp
push
cmp
xchg
out
fwait
mov
dec
pop
fcmove
cli
pop
shlb
out
or
push
hlt
rcr
cmp
lcall
jmp
sub
cmp
xor
insl
jb
add
repz
push
fdivl
sub
or
inc
xchg
inc
cmc
mov
pop
jbe
xorb
pop
add
out
pop
cs
in
jg
fiaddl
and
pop
sarb
es
jb
in
jg
das
fdiv
pop
xlat
pop
shll
push
lock
sub
ucomiss
jbe
shl
xchg
jmp
fistl
jo
xchg
xor
outsb
dec
inc
inc
inc
in
or
out
mov
jbe
int3
sub
addr16
ret
ja
cs
scas
push
dec
aam
pop
jge
mov
and
imul
xor
es
icebp
pop
xor
jbe
jb
enter
aad
insb
into
rcr
dec
pop
xor
push
int3
add
je
shrl
add
add
jnp
jecxz
jnp
int
push
mov
add
pop
mov
sub
sub
enter
add
outsb
int3
xor
sarb
jecxz
jnp
int
push
mov
inc
imul
lret
jecxz
leave
jge
mov
je
rcrl
and
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
jo
ror
outsl
mov
push
xor
jbe
add
jbe
add
add
aaa
sti
pop
fldl
jbe
add
jbe
jnp
aad
jle
inc
pop
addr16
or
jae
ror
outsl
mov
push
add
fimull
data16
leave
int3
imul
aaa
jae
ror
outsl
mov
push
add
add
aaa
sti
jne
data16
fnstenv
mov
into
jne
enter
inc
pop
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
jle
loopne
mov
xor
lahf
xchg
shrb
shl
sahf
cltd
mov
add
repnz
scas
fwait
cmpl
mov
scas
lahf
xchg
push
scas
adc
mov
lods
test
sahf
sarl
add
lods
test
out
faddp
mov
sub
repz
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
fildll
rcr
mov
mov
rol
test
sti
lahf
mov
or
adcb
lahf
popf
pop
or
jg
scas
test
mov
mov
lea
ret
into
pop
enter
movsl
test
scas
mov
orb
or
mov
mov
les
adc
lahf
lcall
mov
rol
fwait
aam
mov
rol
mov
sarb
mov
lods
test
sub
repz
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
fildll
rcl
mov
sahf
popf
sarb
mov
into
scas
movsl
mov
scas
loop
cmc
leave
cmpsl
popf
adc
lahf
lcall
lods
test
sti
lcall
or
or
mov
lret
test
lods
lods
popf
rorl
adc
sahf
xchg
sti
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
adc
cmp
shrb
xor
loop
ds
scas
cmp
daa
mov
das
and
mov
cmp
loop
inc
loope
mov
inc
fucomip
mov
sub
loop
xor
call
test
xor
dec
adc
fildll
add
xor
loop
inc
fucomip
add
xlat
call
mov
xor
call
test
sub
aam
cmp
roll
aam
stos
inc
loopne
mov
mov
or
aam
cmp
roll
aam
in
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
jno
or
jno
fistpll
mov
inc
inc
clc
cs
stos
cmp
jmp
mov
mov
inc
inc
int
shr
test
fucom
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
jmp
test
aam
mov
shr
scas
xor
loop
cmp
and
cmp
sarb
xor
or
inc
add
cmp
sarl
das
and
aad
and
stos
sub
jmp
mov
and
lods
das
shl
mov
inc
fucomip
mov
sub
aad
sbb
rcr
xor
out
stos
xor
ljmp
ljmp
adc
daa
fsubrs
fsubr
mov
out
daa
mov
ds
mov
and
mov
xor
loop
mov
lock
cmp
out
cmp
daa
in
or
fsubrs
fsubr
mov
out
daa
mov
ds
mov
and
mov
xor
loop
mov
leave
cmp
shll
adc
daa
fsubrs
fsubr
mov
out
daa
mov
ds
mov
and
mov
xor
loop
mov
out
hlt
mov
cmp
out
aas
xlat
loop
arpl
push
add
sub
xlat
loop
aas
fcmovnbe
stos
cmp
shll
cmp
daa
mov
sub
aad
mov
cmp
push
aad
and
stos
sub
jmp
mov
and
lods
das
shl
mov
inc
fucomip
mov
sub
aad
or
lock
sub
in
inc
add
roll
aad
xor
daa
scas
cmp
jmp
inc
out
fildll
xor
jmp
add
shr
scas
cmp
inc
in
or
sub
aad
mov
and
mov
out
daa
aad
aam
mov
and
xor
aad
aaa
and
test
cmp
aam
ja
dec
mov
fbld
mov
xor
loop
xor
sub
xor
daa
test
aas
rcl
mov
inc
inc
and
mov
rcl
mov
xor
daa
les
shr
mov
loop
mov
aad
mov
das
and
scas
xor
shlb
add
icebp
mov
mov
ds
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
inc
inc
and
mov
aam
test
loop
mov
cmp
and
inc
shll
das
out
mov
inc
shlb
aas
xlat
jmp
aad
divl
push
inc
inc
and
push
outsl
cltd
addr16
mov
xchg
int3
addr16
xor
ss
and
imul
daa
int3
sahf
stc
into
sarb
fdivrs
cmp
aam
or
xorl
int
cli
ss
and
call
sub
or
inc
daa
ret
into
sarb
fdivrs
xor
sahf
mov
xor
sti
sub
jo
xchg
add
leave
faddl
ss
cltd
loopne
and
push
inc
rclb
fldl
inc
test
jecxz
sbb
mov
sub
sti
ss
dec
push
sti
les
cmp
push
fwait
sbb
mov
sub
sti
ss
dec
push
sti
dec
sahf
dec
inc
inc
and
mov
insb
lret
insl
test
push
and
ljmp
and
ds
cld
int
or
push
je
dec
sub
or
inc
daa
ret
into
sarb
fdivrs
cmp
lret
in
inc
push
push
movsb
mov
lret
inc
and
mov
add
cs
addr16
das
mov
lcall
rorl
adc
int3
fs
inc
and
rep
dec
es
lcall
push
inc
rorl
adc
lahf
and
inc
inc
nop
rorb
push
inc
je
or
inc
lret
mov
and
pop
add
ret
pop
cmp
mov
xchg
loop
jge
push
push
xlat
xchg
fldcw
pextrw
ss
inc
test
fs
sar
ss
sbb
adc
adcb
lds
les
das
mov
lcall
rorl
adc
int3
fs
inc
and
rep
dec
es
lcall
push
inc
rorl
adc
lahf
and
inc
inc
nop
sarb
push
inc
je
or
int
add
lret
mov
xchg
mov
cmp
das
das
inc
movsb
pop
das
inc
add
sbb
fildll
mov
xchg
ret
outsl
addr16
das
mov
lcall
rorl
adc
int3
fs
inc
and
rep
dec
es
lcall
push
inc
rorl
adc
lahf
and
inc
inc
nop
rclb
push
inc
je
or
int3
and
inc
inc
and
aam
and
and
and
inc
inc
inc
and
and
mov
sbb
inc
mov
dec
mov
addr16
adc
ss
test
rcrb
cs
leave
sbbb
shrb
jl
inc
je
or
test
repnz
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
cpuid
inc
inc
fmuls
cmpb
push
mov
xchg
and
and
mov
xchg
popf
jb
lds
out
loope
int3
pop
cmp
les
das
mov
lcall
roll
adc
int3
fs
inc
and
jp
dec
nop
shlb
rorl
lcall
cmp
leave
jmp
inc
and
jp
dec
nop
shrb
rorl
inc
enter
and
add
jmp
pop
ret
pop
daa
inc
and
scas
mov
scas
dec
adc
movsl
pop
inc
inc
and
mov
sbb
mov
add
and
out
leave
movsl
or
xor
xchg
out
dec
cwtl
push
mov
mov
dec
inc
inc
and
testl
push
xchg
mov
test
int3
js
mov
sti
ss
adc
add
mov
sbb
ss
and
imul
daa
sahf
jecxz
mov
jg
cmp
into
sahf
notl
xchg
jmp
xlat
stos
or
ss
addr16
ss
loope
ss
cmp
inc
ja
mov
inc
inc
add
pop
das
inc
movsb
pop
das
inc
add
add
sti
cmp
mov
mov
pop
fmul
adcb
xchg
stos
ljmp
or
inc
and
sahf
clc
into
enter
fdivrs
xor
sahf
fwait
test
leave
jo
push
ret
dec
and
pop
inc
inc
and
lds
pop
outsl
xor
mov
xchg
fcomps
mov
pop
mov
nop
dec
aam
pop
cld
ss
sarb
adc
ss
mov
inc
inc
add
comiss
pop
das
inc
or
subb
dec
inc
inc
and
mov
push
mov
sbb
dec
setae
xor
inc
and
or
push
negl
mov
pop
lds
inc
nop
add
mov
loope
ss
movsb
push
inc
inc
and
mov
scas
pop
push
aam
orb
ss
lahf
rclb
adc
jecxz
pusha
mov
cmpsb
movb
ss
cltd
int
sti
ss
mov
pop
mov
test
sahf
pop
sahf
adcl
or
xor
mov
add
ss
pop
mov
and
pop
mov
daa
adcb
adc
enter
lret
jge
dec
sub
ret
mov
cs
ss
lahf
pop
inc
inc
and
lds
out
or
popf
adc
mov
mov
sbb
popf
ljmp
imul
daa
int
cli
into
fdivrs
fdivrs
xor
sahf
insl
int3
in
and
ss
xchg
pop
inc
inc
and
lds
pop
push
aam
push
inc
ss
lahf
push
cmp
and
int
adcb
fwait
mov
popa
xchg
adc
mov
inc
inc
and
or
dec
push
leave
inc
and
call
jmp
inc
and
add
or
pop
ret
pop
cmp
and
xchg
push
cli
test
mov
cli
ss
pop
mov
cmp
inc
inc
and
aam
and
and
and
dec
inc
inc
and
sub
popf
inc
aam
xchg
leave
lret
mov
cmp
inc
mov
adcb
and
imul
daa
ret
sahf
clc
into
enter
fdivrs
cmp
sahf
mov
out
dec
imul
mov
push
fidivs
lcall
popf
ljmp
int
loope
ss
nop
pop
aas
mov
and
imul
daa
int
cli
into
fdivrs
fdivrs
cmp
sahf
mov
pop
mov
outsb
or
lcall
mov
data16
jo
pop
jg
or
lahf
mov
mov
and
push
ret
push
mov
lahf
mov
xchg
les
mov
cmp
pop
and
push
lock
push
mov
insb
sbb
jno
in
mov
aam
leave
and
inc
inc
movb
ret
mov
outsl
sbb
cmp
comiss
pop
das
inc
add
orb
dec
in
jne
sub
push
into
xor
mov
jg
add
aaa
and
dec
jo
and
aad
mov
aaa
inc
and
xorl
inc
aam
cmp
lds
sub
fs
mov
add
fsubs
mov
jae
mov
adc
jnp
icebp
cmp
inc
inc
and
push
jg
pop
jmp
clc
clc
and
push
ret
mov
xchg
fcomps
inc
lret
mov
and
pop
add
ret
pop
cmp
mov
cmp
mov
sbb
fwait
mov
mov
clc
mov
inc
inc
and
fdivs
xor
dec
mov
adcb
and
imul
daa
sahf
in
test
dec
fdivrs
cmp
iret
sahf
mov
sub
mov
inc
and
fstps
shlb
adc
pushf
mov
int
and
sub
mov
pop
lds
loope
arpl
lret
pop
mov
and
mov
out
sub
cmp
into
inc
and
loopne
mov
adc
ss
and
imul
daa
sahf
jecxz
mov
jg
cmp
mov
dec
inc
add
dec
and
arpl
out
jne
mov
dec
inc
inc
and
leave
jnp
push
in
mov
push
add
sbbl
push
mov
aad
mov
dec
and
pop
int3
addr16
ds
mov
mov
push
loope
popf
loope
lahf
in
mov
movsl
rolb
mov
inc
inc
add
pop
das
inc
movsb
pop
das
inc
or
adc
jecxz
fdivrs
cmp
push
sbbl
mov
and
pop
add
jmp
pop
ret
pop
es
and
mov
sub
into
lds
jecxz
adc
mov
dec
out
in
mov
lods
lcall
mov
ss
xchg
pop
mov
loope
ss
cwtl
mov
jb
nop
insb
inc
mov
and
loopne
dec
adcb
aam
push
test
int3
push
cltd
int
sti
ss
jns
jmp
aam
dec
or
ss
jge
fldl
adcb
mov
mov
incl
ss
fcoms
mov
push
lds
pop
push
fsubl
pop
sub
mov
or
ss
addr16
and
adc
inc
inc
mov
lock
sbb
cmp
pop
das
inc
movsb
pop
das
inc
or
inc
inc
fimull
adc
stc
cwtl
ja
push
pushf
xchg
fdivrs
push
mov
xchg
das
jle
repz
push
xor
in
and
jge
and
jmp
outsl
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
add
xor
sub
dec
xor
cmp
pop
and
push
push
and
test
repnz
loop
dec
jns
lret
inc
mov
out
aad
inc
dec
cwtl
cwtl
sub
lds
push
and
push
enter
mov
mov
aad
push
out
xchg
lret
cltd
loopne
and
push
inc
rclb
fldl
inc
test
jecxz
jbe
mov
sub
sti
ss
dec
push
sti
les
cmp
push
fwait
jbe
mov
sub
sti
ss
dec
push
sti
in
and
imul
daa
sahf
in
test
dec
fdivrs
cmp
mov
fs
mov
push
push
dec
jmp
inc
and
add
pop
ret
pop
cmp
lock
fldl
add
enter
push
enter
andl
add
fistpll
adcb
leave
lcall
aad
adcb
lret
mov
and
pop
add
ret
pop
es
and
sbb
mov
rolb
lret
pop
mov
cmp
inc
inc
and
aam
and
and
and
dec
inc
inc
and
jns
out
push
inc
inc
and
add
je
push
mov
in
push
outsl
in
cmp
cmp
pop
ja
insb
fcoms
jo
and
pop
repz
lods
jp
nop
fcoms
jl
jecxz
pusha
cld
cmp
lds
out
mov
ret
push
xchg
inc
xchg
sarb
adcb
bound
and
into
xor
inc
inc
and
aam
and
and
and
inc
inc
inc
and
sub
test
cmp
out
sbb
rol
xor
xor
dec
push
fisttpll
mov
mov
inc
push
inc
and
ja
sub
inc
and
mov
arpl
iret
fisttps
inc
loope
addr16
and
mov
adc
xchg
sti
ss
xchg
fwait
mov
jno
dec
and
mov
inc
inc
add
aaa
das
inc
movsb
pop
das
inc
or
addb
pop
xchg
jmp
pop
dec
dec
cwtl
inc
inc
inc
and
push
mov
sbbb
inc
inc
and
push
rcrb
push
into
adc
movsb
sub
ret
inc
inc
insb
push
movsl
fsts
ss
push
fidivrs
and
ljmp
adcb
and
inc
mov
loope
cmpb
sahf
dec
dec
cltd
ret
dec
inc
and
push
ret
stos
dec
mov
outsl
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
cpuid
inc
inc
fmuls
xorb
xchg
das
mov
sub
mov
inc
and
out
push
movsl
cmp
sbbb
inc
inc
and
push
ret
lcall
into
and
and
imul
daa
int
cli
into
fdivrs
fdivrs
cmp
aad
cmp
fcomps
cwtd
int
sti
add
lea
adcb
sarl
shlb
sub
nop
fcomps
lcall
xor
pop
mov
inc
inc
and
movsb
daa
cld
repnz
and
mov
and
pop
add
jmp
pop
ret
pop
cmp
mov
jmp
sub
jb
xor
inc
and
hlt
xor
mov
out
prefetchwt1
push
lret
jne
dec
pushf
rcl
adcb
cwtl
dec
cs
xchg
sbb
out
dec
adcb
push
jp
dec
aad
inc
hlt
cmp
inc
inc
and
aam
and
and
and
dec
inc
inc
and
aad
push
test
sub
fcomp
cmp
leave
sbb
jb
fwait
test
daa
aad
int
jmp
ss
ds
adc
cltd
pop
mov
mov
and
pop
add
jmp
pop
ret
pop
cmp
and
push
push
and
mov
sub
push
sub
pop
dec
push
mov
pop
popl
mov
and
push
jmp
inc
and
add
ret
pop
cmp
mov
clc
mov
les
pop
les
xchg
fidivl
arpl
sti
and
mov
mov
jmp
inc
and
sbb
scas
adc
inc
mov
push
mov
cmp
ret
mov
stc
imul
dec
nop
fcomps
ja
mov
stos
dec
es
mov
xchg
xchg
add
dec
lcall
out
pop
lds
pop
outsl
or
cmc
cmp
inc
inc
and
aam
and
and
and
inc
inc
inc
and
enter
mov
ds
push
lds
cmp
loop
mov
inc
and
je
xchg
into
inc
stos
dec
pushf
sarb
adcb
daa
push
mov
inc
and
dec
mov
mov
push
mov
in
and
repz
and
ret
dec
jmp
ret
ss
mov
in
movb
outsb
or
enter
in
mov
scas
cmp
fst
cmp
loopne
nop
fdivr
cmp
inc
into
mov
and
pop
add
pop
ret
pop
cmp
mov
or
xchg
aam
leave
inc
and
mov
les
xor
mov
inc
inc
cmp
inc
inc
and
loop
adc
mov
sbb
sbb
scas
adc
mov
into
lahf
mov
jb
nop
enter
aad
data16
ss
and
mov
add
ss
and
inc
idivl
inc
inc
and
aam
and
and
and
dec
inc
inc
and
push
and
lret
mov
les
mov
inc
inc
and
lea
xlat
jle
fwait
push
jmp
xchg
enter
sbb
jmp
in
and
mov
sti
ss
nop
sub
mov
push
sti
ss
and
imul
daa
sahf
in
test
dec
fdivrs
cmp
mov
out
mov
cmp
enter
cmp
mov
inc
sahf
dec
or
pop
add
hlt
sbb
sbb
jnp
popa
push
shl
xchg
call
inc
mov
push
mov
dec
cwtl
xor
inc
and
pop
inc
inc
and
aam
and
and
and
inc
inc
inc
and
add
pop
jne
xchg
dec
rcrb
int3
movsb
pop
mov
jb
ss
mov
xchg
loopne
xor
mov
inc
int3
cld
dec
push
jmp
xchg
repz
cmp
pop
adc
ret
sbb
ret
stos
dec
movsb
mov
jmp
outsl
sbb
cmp
pop
das
inc
movsb
pop
das
inc
or
subb
in
adcb
inc
stos
dec
cmp
pusha
dec
mov
xlat
out
stos
mov
dec
shll
adc
and
aad
xor
and
dec
bound
cmpxchg
pop
xor
push
mov
dec
xor
ja
dec
pushf
loopne
inc
adcb
xchg
shl
adcb
and
jb
mov
jmp
inc
and
add
sar
pop
ret
pop
cmp
mov
sub
nop
push
xor
aas
mov
push
sti
ss
loopnew
mov
test
sahf
adc
setb
shrl
adcb
add
and
sahf
jp
add
dec
setae
fiadds
inc
test
rcrb
cs
leave
sbbb
fcoms
mov
es
lcall
push
inc
rorl
pop
inc
inc
pushf
fcoms
mov
es
pushl
dec
inc
inc
and
cmp
mov
out
repnz
jmp
push
aam
cs
ss
fs
xchg
sbbb
inc
inc
and
lds
out
insb
mov
sub
ret
mov
ret
mov
fisttps
ss
pop
mov
lahf
cmp
mov
stc
hlt
ss
test
mov
pop
inc
stos
dec
aad
int
stc
hlt
idivl
mov
dec
sub
lahf
js
mov
and
loop
xchg
incl
dec
nop
fcomps
ja
fsubrs
xor
js
dec
movsl
xchg
cmp
add
inc
inc
cld
rcrb
xchg
loopne
and
dec
stos
dec
aad
popf
ljmp
and
aad
lret
and
xchg
fmuls
in
push
fimuls
fsubr
adcb
and
dec
mov
inc
and
push
mov
daa
dec
mov
inc
sbb
popa
aaa
adcb
and
jp
leave
js
bound
leave
mov
movsl
loopne
cmp
dec
cltd
dec
inc
inc
and
lds
les
sub
ret
push
mov
pop
outsb
scas
inc
inc
inc
cld
fdivrs
adcb
mov
mov
mov
push
xlat
int
push
sti
ss
and
imul
daa
ret
into
sarb
fdivrs
cmp
sahf
or
push
jne
pop
or
idivl
xor
daa
mov
nop
fsubrs
mov
and
imul
daa
sahf
in
test
dec
fdivrs
aas
and
sahf
add
push
mov
pop
pop
adc
fcmovne
xchg
push
sti
ss
jb
in
and
js
pop
outsl
call
enter
mov
pop
cld
ss
mov
lahf
cltd
xor
test
outsl
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
cpuid
inc
inc
fmuls
cmpb
mov
sub
lret
sbb
sar
enter
push
in
popf
out
or
ret
stos
dec
xchg
enter
push
push
and
fucomi
jp
dec
mov
push
fisubrs
mov
dec
dec
stos
dec
and
xor
outsl
or
mov
mov
adc
push
dec
or
test
imul
aam
stos
dec
into
cmp
pop
test
ss
pushf
and
lds
into
lahf
je
mov
and
pop
xor
sbb
xchg
cli
mov
sbb
scas
adc
repnz
inc
inc
and
aam
and
and
and
dec
inc
inc
and
sub
js
mov
pextrw
ss
aam
dec
inc
and
add
test
sti
ss
mov
pop
inc
mov
inc
and
inc
mov
into
lahf
aas
xor
cmp
dec
stos
dec
pushf
fdivr
dec
adcb
xchg
pop
dec
mov
pop
xchg
add
adc
scas
adc
repnz
inc
inc
and
aam
and
and
and
dec
inc
inc
and
cmp
mov
add
ss
pushf
and
pop
inc
inc
and
aam
and
and
and
dec
inc
inc
and
push
xor
push
mov
dec
cmp
dec
stos
dec
cmp
inc
inc
and
sbb
jecxz
out
or
fdivrs
xor
push
jmp
inc
and
add
pop
ret
pop
cmp
and
in
adc
adc
das
jno
dec
es
enter
mov
cmp
jno
dec
pushf
fsub
xor
push
sub
nop
fcoms
jl
jecxz
lcall
push
adc
ss
data16
loope
nop
movsb
daa
mov
and
push
push
mov
outsl
adc
scas
adc
inc
and
test
mov
add
sub
mov
adc
ss
xor
cmp
inc
inc
and
aam
and
and
and
inc
inc
inc
and
cmp
mov
sbb
xchg
call
inc
xchg
aam
stos
dec
push
aam
inc
and
mov
cmpl
cmovb
xor
push
in
sahf
push
cs
sub
dec
cli
loopne
sub
outsl
sarb
mov
or
ss
addr16
adc
xchg
adc
and
sahf
cli
into
fdivrs
fdivrs
cmp
sahf
push
dec
popa
aad
or
xchg
push
push
arpl
mov
jbe
dec
cld
mov
test
enter
int
or
ss
and
imul
daa
sahf
in
test
dec
fdivrs
xor
sahf
pop
xor
aam
shl
ss
sbb
push
jl
enter
mov
daa
js
repz
outsl
sarb
insl
xchg
lds
lret
ds
adc
mov
inc
divl
mov
cmp
daa
das
inc
movsb
pop
das
inc
or
xorb
sub
push
enter
mov
ret
inc
inc
lds
imul
inc
jae
cmp
inc
mov
arpl
sbb
cli
dec
outsb
sahf
loope
addr16
and
adc
inc
inc
mov
rep
sbb
cmp
pop
das
inc
movsb
pop
das
inc
cpuid
inc
inc
in
addb
or
lcall
test
push
push
cpuid
inc
dec
fwait
mov
test
sti
ss
push
fnstsw
inc
and
mov
and
pop
add
jmp
pop
ret
pop
cmp
repnz
pop
pop
or
inc
inc
and
test
mov
adcb
cltd
fildl
and
mov
ja
stos
js
mov
push
inc
inc
and
dec
sbb
jnp
dec
xor
mov
lds
xchg
fmul
xor
push
jmp
inc
and
add
sar
pop
ret
pop
cmp
mov
mov
mov
daa
mov
xor
mov
and
pop
add
sar
pop
ret
pop
cmp
mov
dec
ss
mov
and
add
adc
int
or
ss
data16
outsb
adc
inc
inc
sbb
test
inc
repnz
hlt
xchg
fsubrs
jl
pop
idivl
je
xor
les
and
mov
inc
inc
and
inc
mov
xor
into
addr16
adc
outsb
or
ss
jnp
inc
and
mov
mov
xlat
pop
mov
fdivrs
lret
ds
adc
inc
and
push
pop
mov
lret
inc
and
push
lret
pop
ret
pop
cmp
mov
or
mov
jnp
xor
lds
xchg
jl
int
or
ss
and
imul
daa
sahf
jecxz
mov
jg
xor
sahf
xor
pop
push
cli
aam
mov
adc
ss
popl
mov
and
fimuls
xor
xchg
adcb
jae
mov
les
cmp
push
enter
dec
inc
and
ss
nop
scas
adc
test
add
ss
test
mov
and
ss
xchg
scas
adc
mov
or
pusha
and
aad
xor
scas
adc
shl
mov
mov
imul
daa
ret
sahf
clc
into
enter
fdivrs
cmp
lret
sahf
cmp
inc
or
or
notl
push
repz
ds
adc
inc
mov
inc
mov
sbbl
std
mov
mov
loope
ss
push
jp
lahf
sbb
scas
adc
inc
je
fcom
xor
push
repz
aas
scas
adc
rcrb
cs
lret
ds
adc
ds
adc
mov
fimuls
dec
aad
mov
les
jmp
inc
and
add
jmp
pop
ret
pop
cmp
mov
mov
or
inc
pop
dec
ds
push
add
pop
and
inc
push
pusha
cmp
inc
and
adc
cs
fstpl
push
inc
and
mov
mov
jns
shll
sbb
ret
mov
inc
mov
icebp
outsl
sbb
cmp
comiss
pop
das
inc
add
addb
dec
mov
inc
jnp
mov
js
stos
dec
and
popl
mov
rcrb
push
iret
cmp
push
daa
mov
or
ss
lods
das
mov
and
push
mov
xor
push
imul
arpl
pop
scas
cmpsl
sbb
sahf
or
mov
insb
stos
aad
xchg
fsubrs
jl
jmp
inc
and
add
sar
pop
ret
pop
ds
and
in
xchg
pop
fiadds
inc
push
fisttps
inc
and
js
dec
and
mov
imul
daa
sahf
in
test
dec
fdivrs
cmp
mov
outsl
and
jecxz
cwtl
cmp
pop
adc
ss
fsub
dec
adcb
xchg
mov
outsb
mov
inc
inc
push
rorb
and
neg
outsb
das
pop
inc
inc
xchg
cmpsb
mov
xchg
shlb
adcb
jae
mov
les
cmp
push
enter
dec
inc
and
ss
nop
scas
adc
test
add
ss
test
dec
inc
and
ss
xchg
scas
adc
popf
mov
ss
and
imul
daa
rcrb
fdivrs
cmp
mov
ss
mov
dec
loopne
mov
mov
std
outsl
sbb
cmp
das
das
inc
movsb
pop
das
inc
push
mov
andb
fidivrl
loope
mov
cwtl
fildll
jmp
and
movsb
call
in
and
imul
and
mov
adc
ss
enter
push
xor
push
mov
jmp
and
into
xchg
mov
inc
fwait
outsl
out
mov
ret
repnz
cmp
scas
adc
mov
adc
ss
and
inc
idivb
inc
inc
and
aam
and
and
and
inc
inc
inc
and
xchg
insb
fstl
ds
and
cwtl
add
dec
incl
pop
mov
jmp
divl
inc
in
and
imul
daa
sahf
jecxz
mov
jg
cmp
sahf
mov
xor
push
sbb
mov
push
and
push
jae
mov
ds
cmp
cmp
mov
jmp
inc
and
add
or
pop
ret
pop
ds
and
aas
ljmp
mov
and
pop
push
lret
pop
ret
pop
cmp
mov
jg
cmpsl
xchg
cmp
lahf
sbb
scas
adc
pop
aam
inc
icebp
cmp
inc
inc
and
aam
and
and
and
inc
inc
inc
and
aam
bound
xor
call
inc
and
add
or
inc
and
int
jecxz
mov
test
lds
inc
inc
push
mov
mov
adcb
cltd
fs
inc
and
ss
aas
scas
adc
idivb
inc
inc
and
aam
and
and
and
dec
inc
inc
and
shlb
cwtl
xchg
dec
loop
dec
inc
inc
and
or
dec
movsb
test
hlt
xchg
shrb
adcb
push
adc
outsl
cmp
scas
adc
test
or
ss
nop
dec
inc
inc
and
mov
or
cmpl
inc
and
inc
mov
inc
and
aam
jmp
sti
ss
and
imul
daa
int3
sahf
stc
into
sarb
fdivrs
xor
sahf
mov
aaa
xor
cmp
inc
inc
and
aam
and
and
and
dec
inc
inc
and
cmp
ret
outsb
adc
ljmp
addr16
xchg
mov
cmp
adc
in
les
and
mov
popf
and
dec
stos
dec
mov
repnz
sbb
cmp
pop
das
inc
movsb
pop
das
inc
cpuid
inc
inc
in
orb
or
xchg
jnp
mov
inc
and
mov
ret
into
xchg
sbb
mov
orl
and
call
jmp
inc
and
add
sar
pop
ret
pop
cmp
mov
sti
mov
push
cli
adc
test
mov
dec
stos
dec
mov
jecxz
ret
inc
inc
push
fidivs
cwtl
repz
jne
adcb
lahf
aaa
xor
stc
ss
and
xchg
leave
ret
xor
inc
inc
pop
arpl
pushf
inc
xchg
mov
stos
dec
cmp
inc
inc
and
inc
scas
cmpsb
outsl
getsec
inc
pushf
xchg
mov
push
jnp
or
mov
jne
xchg
scas
jbe
push
jecxz
sub
cli
xor
push
inc
sahf
push
sti
cmp
lahf
jecxz
ret
inc
inc
push
aad
inc
and
or
xchg
mov
stos
dec
mov
rep
sbb
cmp
pop
das
inc
movsb
pop
das
inc
or
adc
dec
inc
inc
and
xor
jl
push
nop
ret
mov
inc
inc
and
ret
unpckhps
adc
pop
sbb
mov
push
mov
outsl
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
or
xor
insb
into
xchg
hlt
ss
mov
xor
pop
mov
mov
xor
imul
daa
ret
sahf
clc
into
enter
fdivrs
ds
sahf
sub
ret
and
mov
inc
int3
xchg
add
mov
and
imul
daa
int
cli
into
fdivrs
fdivrs
xor
sahf
jne
adc
mov
imul
mov
or
push
mov
popl
pop
sbbb
cltd
pop
inc
inc
and
mov
cld
outsl
sbb
cmp
daa
das
inc
movsb
pop
das
inc
or
andb
orb
in
std
and
push
jmp
inc
and
add
or
pop
ret
pop
cmp
mov
and
stc
test
pop
push
test
enter
push
enter
inc
dec
cwtl
pushf
dec
inc
and
mov
dec
and
push
test
mov
ss
fwait
pop
inc
inc
and
loopne
cmp
dec
cltd
testb
mov
ljmp
leave
mov
fsubl
xchg
fcoms
mov
mov
and
pop
add
pop
ret
pop
daa
inc
and
inc
ss
mov
ja
lods
push
and
fdivrs
add
popl
test
pop
push
ror
add
aas
inc
in
and
imul
daa
sahf
jecxz
mov
jg
cmp
sahf
jne
enter
mov
xchg
mov
xchg
jecxz
lcall
test
rclb
fldl
inc
test
jecxz
jg
mov
sub
sti
ss
dec
push
sti
les
cmp
push
fwait
jg
mov
sub
sti
ss
dec
push
sti
int3
xchg
andb
adc
or
inc
push
mov
push
mov
mov
inc
and
outsl
es
and
push
jmp
inc
and
add
sar
pop
ret
pop
daa
inc
and
test
cmpsb
push
mov
cld
outsl
sbb
cmp
daa
das
inc
movsb
pop
das
inc
add
andb
xchg
mov
push
cli
sbb
pushf
fsubr
xor
push
inc
ret
mov
dec
and
les
and
mov
imul
insb
adc
mov
iret
push
mov
lret
aas
scas
adc
inc
and
push
sub
inc
and
mov
and
pop
or
add
pop
ret
pop
cmp
negl
adc
int
or
outsl
adc
mov
push
mov
movsl
stc
notl
push
inc
xchg
mov
shrb
adcb
les
dec
cmp
inc
inc
and
movsb
jno
lahf
aaa
xor
jbe
mov
aaa
jbe
dec
and
xchg
iret
lcall
iret
fistps
mov
mov
rorb
dec
pushf
rorb
adcb
sub
dec
aad
imul
sbb
pop
int3
js
mov
or
ss
cwtl
movsb
pop
mov
or
ss
and
imul
daa
int3
sahf
stc
into
sarb
fdivrs
cmp
sahf
xor
sub
into
call
adcb
outsl
aaa
xor
and
inc
outsl
enter
ret
ss
mov
fildl
les
and
mov
dec
inc
and
jp
dec
nop
fmuls
dec
and
movl
outsb
jmp
inc
inc
cld
loopne
and
dec
stos
dec
mov
outsl
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
add
xorb
push
mov
scas
imul
inc
inc
push
jmp
xor
cld
ss
cwtl
mov
loop
jl
adc
pushf
fcom
xor
push
jmp
inc
and
add
jmp
pop
ret
pop
cmp
repnz
divl
xor
push
xor
sub
mov
pop
popl
xor
and
pop
jecxz
sbb
mov
xchg
test
mov
xor
push
xor
push
mov
outsb
into
test
fldt
call
jmp
inc
and
add
pop
ret
pop
cmp
mov
push
push
xor
ret
jb
fdivrl
xchg
inc
jecxz
adc
inc
and
enter
and
xchg
fcoms
int3
pop
insb
into
repnz
ss
call
push
pop
mov
xor
sti
ss
xchg
mov
cwtl
cmc
stos
dec
mov
repnz
sbb
cmp
pop
das
inc
movsb
pop
das
inc
add
sbb
fdivrl
cwtl
push
mov
inc
int3
xchg
call
mov
int3
sub
mov
lret
test
adc
push
mov
xor
inc
inc
fmull
push
ds
in
js
mov
and
mov
mov
pop
mov
pop
adcb
xchg
enter
push
rcrb
das
dec
les
cmp
push
enter
dec
inc
and
ss
nop
scas
adc
test
add
ss
test
test
and
ss
xchg
scas
adc
movsl
scas
std
ss
pusha
rclb
and
imul
daa
ret
into
sarb
fdivrs
cmp
sahf
cmp
inc
mov
mov
inc
and
test
pop
call
repnz
dec
mov
cli
ss
xchg
shrb
pushf
pop
enter
maskmovq
notl
push
enter
clc
adc
push
and
mov
jo
sub
popf
adc
push
test
clc
mov
jmp
inc
and
add
or
pop
ret
pop
cmp
mov
fcoml
xor
stos
dec
movsb
lcall
mov
xor
sub
mov
jno
dec
aad
mov
or
ss
and
inc
cmc
cmp
inc
inc
and
aam
and
and
and
inc
inc
inc
and
and
jnp
jb
adc
mov
inc
mov
lock
sbb
cmp
pop
das
inc
movsb
pop
das
inc
add
xorb
and
jae
mov
or
int3
xchg
call
cli
int3
addr16
dec
mov
aaa
outsl
mov
sub
enter
push
jmp
inc
and
push
lret
pop
ret
pop
daa
inc
and
dec
inc
mov
add
aaa
addr16
data16
pop
outsl
call
inc
icebp
cmp
inc
inc
and
aam
and
and
and
inc
inc
inc
and
test
ja
sbb
mov
dec
sahf
pop
inc
inc
and
lds
lret
adc
lds
int3
in
jmp
inc
and
add
jmp
pop
ret
pop
ds
and
jbe
loope
mov
gs
push
inc
inc
and
mov
and
pop
add
ret
pop
cmp
mov
ror
xor
dec
dec
adcb
cmp
dec
lcall
dec
cltd
bound
and
mov
divb
flds
lret
and
inc
dec
lcall
lock
inc
inc
and
aam
and
and
and
dec
inc
inc
and
push
pushf
jne
dec
inc
inc
and
lret
inc
inc
and
mov
jg
xchg
fcoms
mov
mov
lahf
push
aas
loop
aad
into
adc
ss
push
xor
inc
inc
and
aam
and
and
and
dec
inc
inc
and
mov
into
addr16
mov
adc
inc
inc
fwait
and
push
mov
mov
cs
fiadds
inc
test
rcrb
cs
leave
sbbb
fcoms
mov
es
lcall
push
inc
rorl
push
inc
inc
pushf
fcoms
mov
es
pushl
mov
cmp
daa
das
inc
movsb
pop
das
inc
add
addb
mov
lock
and
sub
push
enter
inc
and
nop
es
xor
and
xor
sar
cli
les
xor
out
inc
inc
sub
ss
and
loop
push
cmp
inc
inc
and
pop
inc
inc
and
aam
and
and
and
dec
inc
inc
and
cmpsb
imul
cmp
fstpl
push
fbstp
inc
and
test
mov
and
push
mov
pop
and
pop
inc
inc
and
aam
and
and
and
inc
inc
inc
and
pmulhw
push
orb
iret
lcall
dec
les
cmp
push
enter
dec
inc
and
ss
nop
scas
adc
test
add
ss
test
orb
fcmovne
stos
std
ss
xchg
scas
adc
in
int3
and
add
jb
cmp
mov
aas
mov
add
ss
dec
enter
inc
stos
dec
push
fstpt
inc
and
mov
push
dec
nop
mov
adc
pop
fisubrl
push
and
packssdw
inc
daa
rcrb
fdivrs
aas
and
sahf
cmp
out
cmp
mov
add
out
outsb
pop
mov
mov
ret
dec
in
int
pop
sti
ss
mov
xchg
mov
xor
and
inc
stos
dec
mov
inc
mov
dec
mov
dec
cltd
xor
and
sahf
dec
dec
cwtl
pop
inc
inc
and
ss
mov
mov
ss
pop
mov
sbb
inc
aaa
and
mov
test
jl
ret
mov
stos
or
inc
xchg
mov
mov
sbb
push
inc
ja
xchg
mov
pop
fmul
adcb
mov
call
mov
arpl
dec
es
mov
arpl
dec
lret
icebp
and
mov
mov
jecxz
xchg
incl
dec
nop
fcomps
ja
fdivrs
push
ret
mov
pusha
js
inc
xchg
incl
dec
nop
fcomps
ja
rolb
sbb
stos
dec
lret
pop
push
movsl
lcall
inc
inc
and
mov
icebp
inc
adcb
aas
jle
dec
and
mov
enter
stos
dec
lret
pop
outsl
in
scas
adc
sbbl
clc
mov
outsl
add
mov
loope
ss
push
xor
jb
nop
xchg
das
sbb
xchg
and
adc
inc
inc
xchg
shrb
mov
enter
stos
dec
lret
pop
outsl
in
scas
adc
ss
outsl
in
scas
adc
ss
and
mov
icebp
lds
mov
repz
inc
xchg
xchg
push
mov
cmp
packssdw
inc
daa
rcrb
fdivrs
xor
sahf
cld
and
aam
scas
or
ss
push
enter
mov
inc
and
jo
mov
arpl
lcall
iret
sbb
fiadds
inc
push
fists
inc
and
jae
dec
movsl
loopne
and
cwtl
inc
inc
inc
and
lds
outsb
js
inc
inc
movsb
xchg
pop
leave
xor
inc
je
cmp
dec
fcompl
jl
pop
inc
inc
and
aas
adc
and
in
adc
les
push
jmp
add
arpl
push
push
out
enter
inc
and
push
inc
inc
and
loope
aaa
sub
mov
jb
les
mov
inc
inc
mov
fmuls
inc
and
push
mov
inc
and
pop
inc
inc
and
aam
and
and
and
dec
inc
inc
and
ja
mov
mov
inc
and
cmp
pop
add
sbbb
and
inc
div
loopne
sub
jg
sbbb
inc
pop
and
mov
int3
sarb
cmp
inc
inc
and
rsm
dec
xchg
ficomps
ret
stos
dec
pushf
ficomps
adc
sahf
sub
cmp
sbb
enter
cwtl
xchg
das
clc
xchg
fdivs
bnd
push
and
in
xchg
push
test
sub
stos
aam
mov
and
mov
dec
inc
and
add
sar
pop
ret
pop
cmp
mov
imul
cltd
sub
mov
in
cmp
lcall
mov
nop/reserved
ret
in
jae
fstps
xor
rcrl
icebp
scas
push
mov
push
jle
dec
and
inc
inc
mov
mov
jmp
inc
and
add
sar
pop
ret
pop
cmp
icebp
pop
aam
push
xchg
shr
cmp
adc
xchg
lahf
jg
dec
ret
jb
lds
out
loopne
and
push
inc
dec
cwtl
cmpsl
inc
inc
and
mov
aad
adcb
mov
lds
inc
push
fbld
and
mov
and
pop
add
jmp
pop
ret
pop
cmp
repnz
scas
adc
fdivrl
in
push
mov
adc
mov
inc
and
clc
push
inc
rcrb
imul
das
movl
inc
inc
and
imul
ret
loope
adc
xor
lret
pop
inc
inc
mov
outsl
sbb
cmp
aaa
das
inc
movsb
pop
das
inc
or
cmp
mov
inc
and
or
xchg
jp
mov
sbb
dec
and
inc
inc
cmp
aas
mov
cs
dec
es
xor
add
add
add
and
pop
mov
addl
inc
push
ret
adc
mov
xchg
scas
cmc
ja
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
es
cmp
outsb
inc
mov
mov
push
jno
push
push
pop
pop
sidtl
push
mov
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
add
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
mov
insl
mov
jg
cmp
fwait
or
test
and
add
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
shr
add
add
fiaddl
or
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
mov
jmp
mov
bound
mov
loopne
push
push
call
and
pop
mov
addl
inc
push
ret
and
iret
mov
mov
jo
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
pop
roll
or
test
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
xchg
imul
mov
pushl
mov
lea
je
cmc
call
mov
cmc
mov
adc
lea
mov
push
call
mov
mov
lea
mov
push
mov
push
cmc
call
mov
mov
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
sub
mov
clc
mov
mov
jmp
add
add
xor
xor
xor
mov
popa
incb
push
jge
xchg
je
in
js
gs
imul
outsl
jb
popa
je
outsl
outsb
add
gs
jae
sub
arpl
je
arpl
push
data16
popa
jb
and
gs
outsl
jo
jb
and
je
and
and
insb
insb
outsl
ja
outsb
and
fs
and
outsb
imul
outsl
jne
or
and
and
and
sub
gs
and
push
dec
sub
outsl
outsb
and
jae
ja
outsb
outsl
ja
je
and
jo
and
arpl
bound
jb
sub
and
and
or
jb
imul
and
push
dec
and
cmp
or
imul
and
or
dec
dec
and
and
or
dec
push
push
and
cmp
or
dec
dec
and
and
or
dec
push
push
and
cmp
or
and
and
and
or
and
and
and
or
and
and
and
and
js
and
cmpl
je
lea
push
lea
push
push
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
pushl
call
jmp
cmpl
je
cmpl
jne
mov
add
jmp
lea
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cmpl
jne
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
lea
push
lea
push
lea
push
call
add
push
lea
push
lea
push
push
call
push
call
mov
call
stos
inc
mov
push
xchg
stc
lret
pop
and
sub
push
xor
pop
pop
add
pusha
jne
or
mov
popa
push
movswl
pop
mov
jl
mov
add
xor
mov
sub
mov
mov
mov
sub
sbb
sub
jne
mov
jmp
out
icebp
mov
mov
xor
popa
jmp
pushl
imul
pop
movsl
mov
dec
arpl
push
fucomip
push
or
sbb
jae
adc
sub
fistps
sub
jle
repnz
cmovnp
sbb
or
xchg
data16
cwtl
mov
xchg
fwait
or
add
sub
clc
fs
sub
jp
out
mov
movsb
ret
sbb
and
jno
popa
sbb
fistps
mov
adc
pushf
daa
sub
cmpsb
sahf
cld
sahf
repnz
sbb
fistps
mov
adc
cwtl
daa
sub
jl
adc
and
in
ficomps
sub
ret
ds
sub
add
jb
icebp
sub
lcall
fmul
loope
xorl
inc
sbb
repz
movl
sub
into
dec
sbb
into
ficompl
sub
pop
inc
cmc
or
pop
cmc
or
mov
sub
cmp
and
insb
mov
lcall
mov
sbb
pop
inc
push
jnp
out
std
push
xor
daa
add
sbb
scas
std
xchg
mov
push
rorb
ret
sbb
mov
sbb
or
sbb
push
jne
es
sbb
mov
mov
xor
repz
sbb
inc
test
pop
inc
jmp
scas
mov
into
mov
sub
pop
movsl
push
mov
cmpsl
cld
pop
les
mov
dec
sub
pusha
jg
lret
push
sbb
icebp
inc
cwtl
mov
cmpsb
aaa
mov
add
pop
xchg
add
jle
pop
shrb
sub
xchg
xchg
std
adc
aad
aas
fistps
sub
loopne
push
int3
push
inc
push
sub
jb
lods
imul
test
jmp
xor
sub
adc
aaa
outsb
sub
fnstcw
pop
gs
cmp
jp
leave
jne
sbb
cmp
xor
leave
jno
fldcw
fistpl
sub
leave
imul
cmpsb
lret
lods
or
sbb
icebp
push
sub
push
fucomip
push
or
sbb
jae
adc
sub
fistps
sub
iret
cmp
sub
pop
push
out
pop
outsl
test
scas
jl
add
fistps
sbb
sbb
or
sbb
or
sbb
jae
adc
sub
ficomps
sub
leave
rcrb
ja
sbb
add
insb
sti
and
insb
xchg
xchg
inc
sbb
lret
lret
mov
popa
sbb
into
ficompl
sub
addr16
int
or
or
mov
sub
ret
xchg
scas
mov
out
dec
jge
push
and
mov
add
add
pop
xchg
repnz
lret
push
iret
lods
cmpsb
mov
adc
sub
add
sub
add
pop
je
mov
sbb
push
ffreep
push
or
sbb
jae
adc
sub
jbe
jmp
int
mov
jno
sbb
sahf
repnz
push
movsb
ret
sbb
pop
das
sub
mov
xor
ret
sbb
ja
addb
xor
pop
das
sub
mov
pop
jnp
ret
sbb
ja
sub
add
xorb
sub
std
sub
leave
out
sbb
cmpb
imul
sub
leave
jno
fldcw
fistpl
sub
leave
jne
sbb
sbb
or
sbb
push
fucomip
push
or
sbb
jae
adc
sub
mov
lock
or
lods
gs
es
sahf
repnz
test
mov
popa
sbb
into
ficompl
sub
popa
inc
mov
or
mov
sub
push
sub
ror
or
sbb
sbb
add
movsl
push
pop
and
ret
ffreep
push
or
sbb
jae
adc
sub
ficomps
sub
jae
pop
dec
push
fistps
sub
add
fistps
sub
add
loop
daa
add
mov
sbb
imul
sbb
sbb
data16
xor
add
sbb
sbb
data16
xor
add
sbb
sbb
push
fistps
sub
gs
push
ficomps
sub
add
ret
lcall
ret
add
fistps
sub
xchg
ret
sub
cmc
mov
addr16
sbb
shll
adc
test
xor
fistps
scas
outsl
lret
repnz
add
in
mov
add
ja
sub
sbb
pop
add
push
adc
sbb
adc
and
mov
in
push
xlat
mov
mov
mov
add
lret
repnz
sub
lret
fistpl
push
shl
sub
xlat
mov
pop
push
es
test
fstps
sub
daa
xor
mov
sarl
aad
sub
xor
scas
dec
mov
sub
cmc
ficomps
scas
push
inc
add
sbb
movsb
ret
sbb
adc
sub
shlb
jle
sbb
ret
xchg
fimull
sub
or
or
add
cs
fistps
out
hlt
add
test
ficomps
sub
or
test
ficomps
sub
jmp
mov
stos
pop
push
or
sbb
clc
inc
daa
sub
fistpl
cmp
insl
sbb
push
sbb
sbb
imul
cwtl
mov
mov
shlb
scas
leave
jge
fmulp
jg
mov
loop
sub
leave
mov
sub
cmc
pop
sbb
push
add
shlb
int3
leave
lods
gs
sub
mov
fadd
xchg
ret
sbb
push
adcl
xchg
ret
scas
test
jl
xor
hlt
xchg
ret
mov
aam
sbb
push
xor
scas
inc
xchg
ss
xchg
xchg
aam
repnz
mov
push
xor
scas
inc
xchg
mov
inc
jl
xor
rol
ret
mov
pop
int
xor
inc
sbb
inc
lret
xor
pushf
add
xchg
rol
sbb
lock
inc
fsubrs
cmpsl
fcmovnu
sbb
imul
add
inc
lret
xor
pushf
add
xchg
rol
sbb
out
or
inc
fsubrs
cmpsl
fcmovnu
sbb
imul
add
mov
mul
inc
lret
xor
stc
ficomps
sub
mov
sbb
stc
test
insb
leave
repnz
shlb
scas
leave
je
lret
sbb
sub
xchg
ret
mov
pop
movsl
jl
jb
and
xchg
ret
mov
mov
cld
rcll
mov
sbb
add
fistps
int
rcrb
icebp
sub
mov
test
into
jl
jb
add
xchg
ret
lods
xor
add
inc
repz
jae
popf
rcll
mov
mov
add
fistps
cwtl
xchg
jl
data16
sub
rcrl
mulb
or
outsb
sub
mov
push
and
xchg
repnz
dec
inc
lret
daa
je
popf
rcll
sarl
xchg
repnz
xor
sub
movsb
ret
mov
aas
fistpll
inc
out
movsb
ret
ja
outsl
mov
inc
cmc
fwait
rcrl
js
mov
mov
inc
sahf
xor
xchg
xor
loop
movsb
ret
dec
or
add
fistps
sub
add
fistps
sub
add
loopne
sub
add
and
sub
pushf
xchg
repnz
pop
push
js
sub
sub
stos
xchg
repnz
pop
fiadds
mov
or
pop
imul
jnp
lcall
add
mov
stos
dec
faddl
dec
out
stc
fcoml
dec
mov
mov
loop
xor
jg
push
lock
dec
shlb
add
add
dec
adc
stc
aad
xchg
fnstenv
or
mov
xor
inc
arpl
and
push
jbe
mov
jp
mov
repz
sub
fisubrs
mov
sbb
stos
std
int3
les
mov
ror
out
lret
movsb
incb
lahf
in
cmp
les
add
pop
push
jmp
push
jne
jno
cmp
xchg
ds
adc
or
xchg
xchg
stos
push
or
mov
mov
push
push
inc
inc
sub
pop
jnp
ja
scas
js
add
hlt
call
xor
mov
adc
mov
jg
dec
mov
es
or
mov
or
fisubrs
jmp
push
and
or
sbb
mov
test
fidivl
push
add
sub
mov
jge
arpl
test
lods
lret
popf
sahf
push
aam
int
les
sub
in
mov
pop
shlb
pop
push
negb
xchg
or
ficoml
test
testb
aad
xor
mov
push
cmp
xor
repz
arpl
popf
aam
sbb
sbb
popa
add
fcom
adc
or
jns
mov
sub
cltd
imul
inc
sub
mov
push
jns
push
clc
testl
or
jae
add
pop
shlb
mov
in
push
sahf
sti
xchg
repz
rcl
jns
cli
fdivrp
and
sub
bswap
outsb
mov
dec
inc
dec
xchg
push
mov
ret
cs
sahf
cmp
cwtl
pop
jge
and
adc
mov
iret
icebp
mov
frstor
add
dec
cmp
or
mov
or
aad
ljmp
mov
cmpsb
mov
test
adc
sbb
jecxz
pusha
adc
mov
adc
push
pop
bound
pop
loop
ljmp
or
push
mov
insb
arpl
add
es
je
mov
je
iret
jp
xchg
popf
out
xchg
mov
jg
mov
fwait
inc
je
jae
or
out
xor
mov
fnstenv
imul
mov
push
xchg
push
inc
push
popa
scas
jle
mov
fdivs
push
outsb
cmp
or
inc
das
jo
dec
and
sub
jg
nop
ret
in
fldenv
loope
and
popa
xor
pop
lret
mov
mov
xlat
adc
les
pusha
jo
mov
hlt
dec
cmp
stos
pop
ret
xchg
outsb
jnp
xor
xor
test
xor
sti
into
inc
mov
add
sbb
sbb
jb
pushf
dec
mov
arpl
mov
pop
ja
mov
push
jge
pop
es
lock
dec
and
xchg
pop
cmp
fmuls
sub
xchg
add
cmpsl
cltd
add
or
adc
scas
push
cs
jecxz
test
addr16
insl
rorl
cmp
leave
aas
lds
and
inc
pop
mov
jmp
scas
mov
xor
ljmp
dec
push
enter
mov
cmp
cmp
mov
sbb
mov
inc
cmpsb
je
and
pop
out
cmpsl
nop
xchg
mov
leave
xor
add
cmp
mov
sbb
fimuls
mov
xlat
mov
loop
xor
stos
jno
ljmp
pop
pusha
jl
dec
shlb
dec
lods
mov
xor
call
data16
pop
xor
js
pop
adc
pushf
dec
std
add
in
pop
cmp
inc
popa
out
sub
hlt
inc
inc
mov
push
cmpsb
mov
int3
xorb
mov
jno
sbb
cs
add
and
or
dec
stc
arpl
scas
clc
cltd
pop
leave
pop
lea
int3
xor
add
mov
jge
sti
scas
inc
pop
mov
adc
jl
xor
xchg
std
mov
inc
lret
xchg
xchg
fstpl
int
xor
pop
dec
rolb
ja
into
and
lock
push
shr
sbb
mov
test
bswap
sub
mov
ljmp
or
dec
and
jne
lcall
stos
in
add
and
js
incb
insb
pop
sbb
push
movsl
inc
push
adcb
mov
jl
and
or
pop
fisubs
leave
xchg
cs
or
orl
rcrl
iret
pop
int3
hlt
pop
sbb
push
cltd
test
dec
loop
mov
jmp
jmp
int3
or
ret
cmp
cmp
lods
inc
shlb
push
jp
out
cwtl
insb
xchg
mov
dec
test
cli
hlt
fsubl
ljmp
dec
mov
cmpsl
xchg
mov
or
lods
push
sbb
or
daa
call
ficoms
sbb
and
and
jbe
inc
sbb
pop
fdivrs
bound
adc
xor
push
or
mov
ljmp
outsb
lds
jmp
mov
jno
dec
ret
mov
pop
mov
push
sarb
out
pop
cltd
shlb
cmp
cmp
jbe
xchg
fnstsw
packssdw
cmpsl
movsb
andl
xchg
sbb
popa
xor
push
fndisi(8087
xchg
inc
in
mov
jecxz
test
and
mov
iret
cmp
push
arpl
arpl
or
rep
das
pop
push
sbb
fsubs
push
cmc
xchg
cwtl
mov
ja
mov
add
movsb
test
xor
bound
adc
mov
test
adc
add
or
idiv
not
fisubrl
enter
jl
das
fucomip
jno
jb
and
in
movsb
push
movsl
fldcw
pop
mov
dec
popf
sub
outsl
adc
adc
and
les
or
inc
mov
mov
rcpps
sub
enter
or
push
leave
mov
mov
insl
scas
dec
jge
add
sbb
loop
jle
rclb
add
iret
sub
adc
insl
cmc
outsl
adc
mov
ds
inc
jmp
pop
dec
inc
rclb
shl
lret
push
int
out
and
push
pop
mov
in
xlat
mov
push
jnp
jae
add
aam
rorl
and
xchg
add
sar
mov
inc
and
jp
mov
loop
jno
repnz
push
or
cwtl
js
cli
negl
in
xor
stos
mov
push
xor
push
inc
fcomi
adc
sub
adc
aaa
adc
dec
mov
in
dec
cld
pop
mov
jmp
movsl
mov
pop
nop
xlat
add
movsb
gs
pop
mov
push
mov
mov
pop
and
pop
xchg
das
lret
and
pushf
outsl
or
mov
xchg
cmp
popa
dec
mov
les
nop
sub
sahf
pop
cmc
mov
js
dec
cs
jmp
andb
out
popf
nop
sub
inc
and
mov
push
sti
aad
sbb
xchg
fs
inc
add
jecxz
pop
jns
inc
sbb
out
jae
mov
std
ror
or
lods
xor
in
pop
out
in
lahf
mov
jno
inc
repnz
push
add
pop
repnz
fbld
bound
test
add
test
pusha
dec
cld
jbe
imul
rcrl
mov
cmp
cmp
and
add
push
and
sbb
bound
sub
cmp
push
arpl
mov
sub
jne
repnz
dec
out
mov
addr16
stos
xor
shrl
rorl
lods
lret
movsl
xor
adc
pop
jg
adc
out
or
jge
leave
imul
cmp
jmp
add
or
cltd
shlb
sbb
cmp
daa
loop
pop
pop
sub
dec
adc
adc
jecxz
mov
or
or
add
lahf
sbbl
mov
int3
hlt
popf
aas
sbb
xor
mov
dec
lock
dec
in
add
lret
xchg
insb
mov
sub
jnp
roll
mov
shlb
push
arpl
add
stc
xchg
sbb
rdmsr
lods
cmp
clc
mov
xchg
sbb
mov
pop
dec
cmpsb
call
xchg
sbb
and
loope
fiaddl
push
lret
aas
or
mov
push
sub
sub
push
jmp
sbb
out
inc
inc
cmp
inc
out
push
mov
xor
loopne
sahf
pushl
push
cmp
xchg
xchg
ret
sbb
ror
out
dec
xchg
inc
in
sub
or
inc
fcompl
mov
lret
xor
aam
jp
or
inc
sbb
and
cwtl
repz
or
sbb
adc
or
pop
jecxz
push
mov
or
mov
outsl
popf
and
pop
mov
aad
test
mov
insl
push
ret
pop
in
mov
adc
cwtl
outsb
in
movsb
sub
ret
pop
fisubrl
shlb
pop
bound
add
jnp
sbb
inc
lret
cmpsl
cmp
jb
push
pusha
jo
das
jb
sbb
cmpsl
sbb
rclb
enter
sbb
test
rcl
mov
out
das
adc
ficoms
sbb
or
and
jl
mov
mov
int
push
inc
jp
leave
sbb
dec
jne
mov
insb
pusha
out
idivb
push
xchg
mov
negl
icebp
push
aam
inc
loope
nop
fstpt
std
sbb
in
insb
mov
lock
sbb
decl
out
add
jb
outsb
jnp
inc
pop
pop
fcmovnbe
push
push
xchg
cmp
xchg
mov
addr16
add
push
pop
sbb
lock
outsl
xor
xor
ficompl
and
xorb
addr16
push
mov
adc
arpl
jns
jmp
fstps
jae
cmp
out
pusha
loopne
mov
sti
mov
out
movsb
pushf
pslld
and
and
pop
test
sub
pop
or
sbb
cld
xchg
in
pop
jecxz
xchg
cltd
inc
shlb
mov
cmp
mov
andl
enter
fbld
push
popl
jbe
ret
sub
push
push
ret
sbb
push
sti
cli
lret
movsl
mov
xchg
loopne
jo
loop
in
dec
leave
or
subl
lods
stos
sbb
fidivl
loop
mov
jmp
xchg
mov
mov
add
repnz
push
pop
adc
sti
or
dec
add
or
push
jmp
mov
lret
ret
adc
std
in
add
ljmp
jbe
jno
mov
arpl
out
xchg
sub
test
add
cmp
ljmp
adc
sub
jl
in
xchg
jne
sub
jbe
in
and
js
fnsave
repz
loopne
mov
pop
mov
movsl
loop
adc
adc
subl
cs
je
in
push
adc
icebp
add
les
aad
nop
jae
pop
pushf
in
insl
insb
mov
mov
jg
mov
out
xor
subb
in
popa
pop
pop
xor
jle
sub
xchg
mov
jl
push
jg
jbe
push
scas
andl
clc
jl
jecxz
cmp
adc
out
test
hlt
ja
inc
std
push
pop
cmp
sub
lods
jl
xchg
adc
pop
test
iret
add
and
sbb
in
xchg
mov
mov
aaa
cld
push
xchg
and
cltd
bound
ficomps
fisubl
aam
pop
push
loope
rcll
sbbl
popa
fnsave
shrb
outsb
cli
cmp
rcrl
cmpsb
mov
sub
or
ja
das
mov
and
push
add
sub
mov
cmp
mov
imul
mov
mov
pop
pop
add
cmp
xchg
xchg
push
rorl
cli
adc
into
inc
repnz
imul
clc
xchg
cmp
inc
or
cmpsb
into
fldt
add
xchg
fdivl
lcall
mov
and
pop
mov
jl
inc
inc
bound
add
cmp
nop
cmp
dec
push
inc
pop
stos
cltd
dec
jns
test
dec
mov
ss
or
xor
andb
ret
mov
aam
popa
stos
push
inc
dec
mov
mov
jno
push
aam
insl
sbb
dec
xor
mov
pop
cmp
mov
mov
fisttpl
cmp
sub
fldt
stc
cmp
daa
jge
mov
push
sbb
pop
icebp
add
fcmovnb
xchg
xlat
stc
jl
out
jb
push
push
sub
mov
and
mov
sub
mov
scas
jb
cmc
rcll
push
arpl
fwait
clc
lods
jb
adc
xor
outsl
jb
cmc
adc
add
pusha
sbb
jbe
sub
jno
in
fmuls
sbb
mov
cltd
hlt
add
aad
sub
sub
aaa
adc
sbb
cli
inc
sbb
pop
es
out
pop
fwait
mov
lret
shlb
add
adc
bound
push
jp
add
xor
pop
pop
cld
xchg
xor
pop
iret
aas
call
and
inc
inc
ret
repnz
pop
imul
mov
test
hlt
lret
mov
pusha
sti
or
xor
dec
push
out
pushf
pushf
mov
cmp
in
xchg
xchg
xchg
mov
je
jne
dec
inc
jo
in
stos
mov
push
clc
and
arpl
subb
lret
or
mov
cmp
sbb
or
or
out
je
mov
xor
adc
xchg
out
loop
fbld
dec
cmp
xor
testl
sbb
stos
out
xor
rcrl
loop
mov
mov
ret
cmp
dec
lock
lret
pop
and
mov
adc
ja
addr16
sub
xor
lea
inc
std
jnp
push
out
ret
lock
mov
fwait
sbb
pop
push
mov
inc
cld
dec
mov
or
push
sahf
inc
mov
adc
fcoms
inc
clc
inc
aad
xchg
subl
push
insl
pop
and
cmc
push
insl
aad
cli
arpl
xchg
cmp
lods
add
incl
or
mov
xor
cmc
sub
jge
xor
adc
imul
push
daa
adc
jg
mov
bound
iret
in
or
sbb
movsb
mov
push
aam
jl
push
cmp
lret
cmpl
daa
test
jne
push
not
stc
jo
cmp
sti
push
cmc
fists
pop
xchg
xlat
stc
sbb
pop
addr16
repnz
adcb
or
stc
cmpsw
cmpsl
pushf
stc
jg
and
dec
loop
cli
mov
xorb
stos
jge
cltd
adc
sub
sub
fsubrl
pushf
ret
sub
cmpsb
mov
push
ret
jp
pop
lret
adc
mov
test
out
sub
jmp
push
cmp
mov
mov
pop
jnp
in
cmp
jp
or
mov
inc
repnz
outsl
sbb
fisttpll
mov
sub
sbb
push
in
push
nop
cmp
xlat
pop
jle
xor
or
loopne
imul
xchg
ds
push
push
jbe
xorl
and
fistps
jmp
mov
mov
jo
jae
mov
sub
insl
mov
loopne
xor
mov
xchg
jae
ja
dec
cmc
testl
neg
sub
lcall
or
xor
mov
loopne
stos
test
add
shlb
lods
ljmp
sub
adc
arpl
lea
std
mov
inc
inc
push
jg
call
inc
iret
stc
int
inc
mov
lds
sbb
fdivrl
loopne
imull
scas
lret
inc
stos
fs
sbb
push
dec
jge
mov
lea
rorl
insb
or
je
stos
adc
scas
fbld
sbb
adc
push
cwtl
shlb
xlat
pusha
adc
inc
xchg
mov
add
pop
ds
xorb
stc
sbb
push
popf
jge
testl
cld
shlb
or
dec
addr16
xor
sub
imul
jecxz
popf
sub
daa
sbb
pop
outsl
jns
adc
mov
xchg
std
push
pop
cmp
ljmp
or
mov
aam
mov
in
scas
and
lods
inc
in
shlb
xchg
dec
xor
ret
popf
addr16
jmp
andl
dec
imul
or
popa
mov
xchg
or
lcall
sbb
lock
jb
mov
pusha
and
lcall
scas
mov
enter
mov
into
mov
jmp
xchg
fnsave
xchg
in
pushf
mov
pop
call
mov
subb
mov
jle
jae
rcr
mov
mov
fcomp
inc
push
jbe
addb
sbb
imulb
in
lock
incb
lock
or
adcb
fs
cmpsb
shlb
out
aaa
adc
mov
push
dec
sti
jle
xor
or
les
jb
into
out
or
mov
add
sub
insb
mov
daa
ljmp
test
pop
add
das
sub
out
shlb
into
lcall
and
push
push
aam
fldcw
jmp
out
pushf
lret
insb
into
push
sub
inc
push
push
fcomip
xor
loopne
movsb
push
adc
jmp
and
mov
ss
mov
aam
cmp
sahf
xchg
push
test
into
xchg
ret
sub
cmpsl
ret
stos
nop
shlb
cmpl
adc
xlat
mov
adc
fwait
cli
or
pusha
pusha
pop
iret
pcmpeqd
popa
icebp
mov
icebp
ds
fcomip
dec
fwait
int
sahf
push
les
push
add
mov
push
dec
push
ja
int
fsubr
push
sub
rorb
rol
mov
sbbb
jmp
xchg
add
jp
xchg
pushf
and
in
call
in
xchg
dec
lcall
in
sbb
fistl
les
loope
and
push
subb
in
adc
push
movsb
cs
imull
lods
iret
mov
mov
out
inc
mov
or
js
dec
jp
ja
call
js
push
adc
std
cmp
pop
inc
jnp
sbb
movsb
pop
mov
jmp
dec
je
lea
jnp
int3
jge
outsl
add
sbb
jae
into
jle
xor
aam
xchg
or
js
cmp
je
lds
mov
jb
and
adc
or
dec
test
loopne
imul
mov
les
cmp
fisubrs
inc
push
or
cmpsl
lods
jbe
test
mov
pop
mov
xor
push
sbb
mov
out
adc
enter
addb
ret
sbb
push
cmp
je
xlat
push
call
maskmovq
repnz
jmp
clc
dec
outsl
sub
pushaw
fstp
xor
ljmp
inc
mov
int3
bound
add
icebp
in
push
push
cmp
jl
test
mov
pop
sub
push
dec
loopne
sti
scas
push
pop
test
mov
int
es
ds
xor
xchg
cmc
sarb
test
jno
fs
mov
push
insb
mov
and
in
jns
push
sti
mov
add
jmp
in
fscale
sbb
addb
out
repnz
xor
jno
xchg
push
pushf
mov
mov
push
arpl
fildll
rcrl
ja
adc
jmp
pop
adc
xchg
add
inc
mul
ljmp
xor
jle
cmp
in
push
jmp
lds
loop
loope
je
shlb
xchg
push
mov
xchg
insl
enter
push
sbb
mov
sbb
push
push
jns
jnp
fs
cmp
push
and
stos
cmp
scas
fcoms
in
cs
mov
and
enter
lea
inc
dec
or
mov
int3
sub
adc
mov
clc
lret
push
fdivp
imul
xchg
adc
insl
icebp
jl
loop
enter
repnz
xor
cs
and
int
iret
push
add
mov
adc
arpl
pop
add
adc
movsl
pushf
js
shrl
sub
ror
sbb
push
sbb
mov
or
lods
mov
adc
mov
movsl
out
inc
icebp
jmp
mov
popf
jbe
xor
into
push
fwait
xor
add
xor
shl
mov
mov
leave
loopne
leave
shrb
push
fwait
push
mov
xchg
loope
push
movsl
dec
push
and
mov
pop
push
sub
pop
xchg
negl
and
jg
in
je
jge
in
sbb
into
pop
and
sbb
scas
rcl
add
push
jmp
push
xchg
mov
fistps
inc
test
adc
out
imul
fldl
dec
dec
addr16
pusha
sub
int3
add
mov
xlat
mov
int
cmp
xchg
fdivrp
sbb
xor
and
jge
cmpsb
test
popa
movl
dec
xor
shlb
add
mov
cmp
iret
bound
push
pop
fisttps
cld
sub
in
jmp
fs
les
xchg
lret
fstpl
dec
mov
pop
mov
push
in
scas
mov
pop
sti
push
sub
shrb
xchg
sub
mov
out
pop
std
xchg
jnp
cs
inc
sbb
dec
add
in
mov
adc
mov
mov
mov
adc
add
and
test
cwtl
je
or
add
xlat
push
jge
pop
jg
and
mov
sarl
pop
std
or
xchg
cltd
lods
adc
lock
jb
inc
test
adc
addr16
cmp
lahf
cmc
lahf
inc
lcall
push
or
add
bound
shll
jb
pop
adc
movsb
mov
push
int3
adc
aas
xor
xor
out
test
addl
cli
lahf
mov
dec
jnp
pop
lods
sbbl
daa
dec
nopl
addr16
jmp
dec
mov
or
fadd
leave
and
jp
pop
leave
daa
xor
outsl
push
cmc
loop
push
stos
dec
pop
inc
jb
lcall
in
fs
mov
fisubrs
and
test
pop
cmpsl
sbb
jns
iret
scas
mov
je
out
fistl
pop
adc
and
das
mov
movsl
adc
cli
mov
pushf
jl
xchg
xchg
lock
mov
mov
cmpsb
sbb
xorb
scas
lods
inc
aam
lahf
or
dec
int3
rcrl
pop
imul
jbe
jbe
inc
sti
adc
jne
ja,pt
das
inc
fwait
les
mov
cli
sbb
push
aad
and
dec
bound
pop
dec
mov
push
cmc
out
gs
lods
cli
cmp
xlat
push
fistl
cltd
adc
pop
stos
jle
clc
jns
stc
pop
inc
cmp
dec
enter
ljmp
iret
dec
bound
lods
ret
fcmovbe
ja
shrl
inc
jle
xor
icebp
add
xor
cs
jo
push
arpl
or
test
daa
jns
aad
rcll
xor
and
dec
xor
lock
roll
in
test
ret
std
jle
rol
mov
incl
stc
mov
mov
push
in
in
sub
and
in
xchg
mov
inc
nop
mov
insl
or
xor
in
and
mov
sarl
adcb
mov
or
lea
and
cmpsb
icebp
xchg
outsl
bound
or
push
cmpsb
imul
test
push
cmp
pop
loopne
sbb
dec
pop
cmp
dec
test
loopne
insb
inc
jnp
js
mov
adc
insl
data16
rol
dec
cmpsl
rcl
orb
out
repz
cmpl
adc
dec
lret
inc
cmp
sbb
adc
in
pop
aas
loop
lahf
jmp
and
push
inc
mov
push
ja
dec
mov
hlt
int3
lea
in
xchg
ds
mov
dec
popa
lock
les
xchg
bound
cs
inc
stos
push
insb
sbb
xor
lods
push
adc
mov
test
daa
sar
xorl
frstor
sahf
cmc
ror
cli
aaa
in
ds
vcvtsi2ssl
adc
andb
lret
js
inc
out
pop
jg
cmp
cmp
in
xchg
inc
xor
lea
dec
std
fndisi(8087
push
jl
add
lock
fcoml
mov
dec
mov
sub
lock
jnp
mov
push
in
aaa
sbb
xchg
fimull
sub
adcl
pop
test
int
push
popa
or
xlat
out
jne
aaa
and
jno
and
lock
ja
pop
xor
movsl
sahf
loop
repz
cmp
cs
sub
call
dec
repz
inc
ret
lds
dec
mov
add
and
in
stos
cmpsb
fdivl
repz
xor
lds
xchg
pusha
or
subl
sbb
in
lock
fmuls
rdtsc
xor
mov
xchg
pop
push
xor
adc
fdivrp
pop
data16
aas
jp
push
out
lret
stc
mov
sub
and
insb
push
or
dec
aad
inc
popa
popf
bound
push
lcall
or
fidivrl
xor
pop
sbb
mov
repz
mov
dec
mov
idivb
push
ret
sbb
add
icebp
or
cwtl
mov
imul
xor
cld
hlt
jae
lahf
jl
repz
sarl
add
in
mov
pop
rcl
adc
sub
cmp
xor
pop
sub
dec
mov
mov
loope
add
fnstenv
lock
mov
jnp
insl
mov
cs
lock
push
adc
jno
cltd
sub
js
daa
push
inc
or
mov
xor
or
add
cmp
xlat
mov
sub
xchg
insl
fstpt
mov
push
jns
lods
fs
xchg
in
xor
imul
push
mov
dec
nop
inc
dec
loopne
and
call
nop
xchg
lcall
stos
mov
jo
add
jbe
xor
roll
mov
lea
out
mov
jl
jbe
stc
push
fistpl
in
andb
sbb
mov
pop
inc
mov
and
dec
lods
xchg
das
inc
inc
fstpl
pop
jo
cmp
mov
ret
adc
mov
fsubp
fiaddl
cmp
adc
ja
into
xlat
addr16
mov
mov
stos
jge
inc
shlb
or
jmp
sbb
movsb
xchg
out
cmp
fildl
rcrb
mov
inc
xor
push
add
mov
inc
mov
jo
push
xchg
dec
mov
rol
sub
sti
adc
sti
insl
ret
ss
xchg
out
clc
sar
xlat
dec
cmpsb
xchg
adc
xor
push
sub
cmp
push
jecxz
sbb
add
les
add
xchg
scas
in
xchg
outsb
pop
pop
push
fnstcw
pop
movsl
mov
cmpsl
inc
adcl
sub
sub
ss
scas
mov
sahf
dec
pushf
fldl
cmp
popl
addb
mov
cmp
mov
fwait
mov
xor
add
push
mov
sti
lea
adc
push
mov
sbb
adc
mov
rorb
xchg
cmpb
adc
xchg
xchg
dec
notb
aas
aam
inc
int
cmp
ja
into
push
data16
and
xchg
adc
outsb
add
ficompl
in
jl
add
negl
pop
out
sub
mov
outsb
add
ud1
push
fst
fbld
fsub
dec
aas
loope
dec
fcmovnb
xor
mov
addr16
mov
push
in
clc
out
adc
jle
pop
xor
icebp
push
mov
mov
cmp
adc
hlt
addb
outsl
int
lea
std
and
popf
js
cmp
lock
jg
mov
mov
inc
and
data16
mov
jno
cltd
out
push
test
add
mov
adc
loop
cmp
adc
sub
iret
jns
shl
lods
xor
cmp
dec
dec
addr16
dec
js
orl
test
lret
lods
push
into
or
cmp
jmp
in
sahf
add
pushl
or
inc
orb
or
push
mov
mov
mov
mov
sbb
das
testl
or
fwait
jno
mov
xor
mov
in
cwtl
inc
and
fnstenv
icebp
cmp
mov
jb
inc
sbb
mov
movsl
scas
mov
push
xchg
stos
mov
pop
out
xchg
jo
or
cli
push
and
mov
xchg
jns
mov
idiv
push
and
cs
xor
stos
mov
xchg
xor
xchg
icebp
xor
ja
cli
ret
or
sbb
das
test
dec
cmp
cs
aaa
mov
sbb
sub
pcmpeqd
cmpl
jmp
inc
mov
pop
lock
loope
icebp
sbb
or
movsb
or
ret
push
out
mov
cmpl
mov
xchg
fistps
sub
dec
xor
outsl
and
in
jae
into
aam
enter
pop
outsl
lods
inc
xor
popf
xor
scas
pusha
push
pop
pop
aam
aas
push
in
pop
mov
js
dec
sbb
jecxz
cmp
flds
test
lahf
dec
xor
fucom
jle
adcb
mov
cmp
les
lret
enter
cmp
mov
mov
cmpsb
test
sub
cmp
jno
cmp
out
outsl
ret
mov
fwait
repz
shlb
or
cwtl
and
mov
outsb
sub
sbb
aas
shll
out
pushf
invd
adc
jl
cmc
inc
fstps
shlb
loopne
movsb
mov
adc
push
imul
in
push
or
mov
inc
xchg
inc
pop
int
dec
mov
xchg
lahf
lret
shrl
daa
mov
mov
adc
fmull
dec
outsl
ret
push
loopne
outsl
xor
rol
xchg
sbb
jnp
lret
lock
popa
and
lock
popf
sbbb
popl
adc
pop
ja
inc
fnstcw
insl
scas
jo
pop
mov
out
inc
iret
dec
bound
jno
lret
fwait
scas
inc
icebp
cmp
push
and
mov
dec
mov
call
push
adcb
outsb
lods
out
enter
sbb
and
lea
jp
xor
sub
adc
jo
test
mov
xchg
leave
pop
in
dec
insl
das
shrl
lds
mov
lock
and
push
jb
mov
idivl
push
lods
push
sub
mov
js
mov
lods
sbb
lahf
test
ret
stc
aas
and
in
mov
adc
mov
mov
mov
mov
pop
imul
dec
mov
sbb
flds
out
cmp
jae
outsb
push
rcll
inc
loop
pop
xorb
push
xchg
or
adc
add
mov
fs
ljmp
enter
sti
sub
es
lret
add
mull
push
fidivrl
mov
mov
js
jecxz
push
stos
push
bound
jle
dec
clc
fdivrs
je
jl
jnp
cltd
shlb
cltd
jae
fwait
pop
shrb
mov
add
xor
lea
cltd
aas
fs
aas
sbb
mov
cld
test
pop
test
push
jb
and
rorl
sub
add
xchg
mov
sub
jmp
xchg
and
mov
rorb
mov
fisubrs
out
jnp
notl
mov
lcall
push
sub
imul
inc
and
mov
sbb
shll
dec
or
mov
xchg
mov
xor
mov
movswl
add
lret
jbe
jl
incb
pop
cli
imul
xorb
ret
pop
mov
in
jne
jno
testl
pop
adc
xchg
mov
testl
push
sbbl
mov
adc
lods
insl
das
mov
dec
scas
aas
std
pop
ret
inc
call
mov
hlt
out
icebp
divb
jb
mov
push
push
mov
into
mov
aaa
and
stos
adc
addl
in
mov
and
test
push
push
mov
add
dec
ja
adc
arpl
mov
hlt
sbb
loopne
pop
cwtl
xor
sarb
dec
stos
inc
icebp
mov
add
sub
ret
inc
push
aas
push
and
or
enter
scas
daa
gs
aam
pop
inc
lcall
cli
push
pop
popf
jl
add
in
rcll
iret
mov
cli
ljmp
fidivs
xlat
jne,pn
mov
gs
test
enter
test
push
lods
in
push
xchg
jle
push
fisubrl
pusha
outsb
shrb
into
dec
rolb
arpl
or
cmp
mov
and
je
pop
push
mov
out
clc
inc
pop
push
adc
loope
ds
or
filds
and
insl
xor
sub
inc
aaa
das
pop
sbb
jg
push
push
hlt
cmp
or
std
ret
xor
out
es
pop
push
fwait
add
cld
sub
xor
aam
mov
sti
jecxz
xchg
jb
sbb
push
adc
popa
shll
mov
lock
adc
jp
pop
xor
sub
ljmp
mov
lret
inc
xlat
pop
push
mov
lahf
and
xor
xchg
add
add
xorl
ret
movsb
jb
ret
lret
ljmp
pop
insb
mov
sub
cmpsl
dec
fadds
adc
rolb
or
mov
jmp
sti
in
rcrl
dec
popa
arpl
inc
mov
ljmp
imul
cmc
lock
pop
enter
mov
cmpl
adc
mov
imul
xor
jmp
pop
in
jge
jecxz
add
insl
lock
xor
add
and
pop
loope
test
js
mov
mov
mov
jmp
add
push
enter
jmp
pop
dec
xchg
sbb
fcoms
arpl
aaa
cli
arpl
imul
dec
jl
popa
push
out
invd
insb
cmp
sub
pop
adc
ds
hlt
push
pop
je
add
pop
test
fucomi
xchg
sub
mov
sti
loopne
call
jmp
jb
sbb
in
adc
icebp
mov
ret
xor
cmp
sahf
sub
adc
inc
jmp
cld
push
loopne
fiadds
in
mov
and
sub
jb
lret
jne
cmp
sbb
xor
out
shl
sbb
cmp
data16
inc
repz
dec
mov
inc
add
fcomps
sahf
jnp
in
inc
jg
js
jnp
pop
fldenv
dec
push
test
shr
inc
mov
inc
jmp
sbb
enter
xlat
ret
sti
hlt
mov
or
lcall
rcpps
cmp
pop
sbb
push
push
dec
jnp
push
repz
push
adc
inc
fidivs
sub
dec
ja
dec
cs
fisubrl
jecxz
push
adc
fsubrl
shlb
aad
xor
push
lfs
adc
outsb
das
fisubs
cltd
and
mov
loope
repz
sub
cmp
push
lods
leave
fistpl
sub
jo
adc
fdivs
cltd
push
mov
xor
adc
shll
or
sbb
xchg
xor
rorl
or
je
call
xor
adc
jb
fistps
sub
add
jae
stc
sub
imul
das
xchg
inc
add
mov
test
push
lods
jne
jne
sub
sub
popf
or
xlat
sbb
lock
pusha
je
rcrb
sbb
xchg
mov
sub
push
inc
je
add
mov
mov
sbb
mov
sbb
add
fbld
inc
repz
xor
fsts
adc
sbb
sbb
repnz
mov
test
xor
xchg
repnz
mov
cwtl
and
sub
arpl
fidivrs
mov
jne
sbb
in
inc
popf
enter
imull
sbb
shrl
clc
push
jecxz
or
test
mov
dec
fidivs
ficomps
xchg
sahf
aam
or
iret
or
ret
mov
sbb
nop
inc
pop
jle
outsb
pop
in
imul
hlt
fwait
js
into
jne
lret
enter
cld
push
dec
dec
lods
mov
ds
ja
jmp
mov
pop
pusha
ljmp
adc
mov
fstl
shlb
push
scas
mov
mov
sarb
dec
icebp
or
cmc
fildll
jle
test
mov
ret
mov
xor
push
nop
or
push
nop
jns
popf
push
jbe
ret
aad
scas
mov
das
inc
mov
out
or
jg
fbstp
fistps
and
test
ret
and
push
jae
insl
loope
int
sub
ja
out
mov
sub
mov
test
jb
rep
pop
mov
cli
fisubrl
sbb
push
adc
xchg
ja
push
add
jo
mov
inc
outsb
sub
cltd
test
loopne
shll
xlat
mov
dec
sub
in
ljmp
cmp
sbb
and
loopne
mov
frstor
dec
cmpsb
in
push
sbb
mov
add
sbb
xor
pop
fs
cmp
iret
mov
decl
mov
xchg
jmp
sar
test
jecxz
adc
icebp
inc
das
xor
dec
in
sti
push
push
xor
or
adc
and
daa
mov
dec
xor
repz
push
pop
xchg
jmp
push
and
imul
sub
push
loopne
fcoml
dec
ficompl
and
xor
mov
mov
int
int3
fnsave
imul
inc
es
mov
xchg
pop
scas
inc
es
cld
mov
pusha
aas
xchg
int3
mov
push
jmp
xorb
adc
dec
loope
pushf
pop
lret
add
jne
sbb
sub
movl
fsubrl
push
jmp
lahf
ficoml
mov
mov
or
loopne
sbb
test
fimuls
call
loop
or
shll
jle
jbe,pn
out
pop
ds
mov
jne
pushf
les
mov
xlat
mov
cmp
insb
push
inc
xchg
imul
push
mov
test
sbb
push
jl
mov
mov
clc
pop
and
insl
cmc
mov
data16
test
dec
jp
lahf
enter
sbb
xor
cwtl
enter
jnp
jb
loope
dec
jmp
mov
in
jno
jnp
push
cld
bound
cmp
and
mov
sub
mov
mov
adcl
clc
shl
cmp
out
mov
rcrb
push
sbb
sub
mov
int3
push
sub
xlat
fisubs
mov
xor
mov
mov
inc
fistps
test
jbe
fisubrs
jle
iret
lret
adc
outsl
xor
jecxz
mov
push
shl
stos
sub
sub
movsb
out
sbb
cmp
test
sbb
add
pop
dec
cmp
das
hlt
mov
jne
loope
aaa
cmp
push
xorb
shr
sbb
xor
xor
popf
or
push
stos
scas
cltd
dec
sbb
jb
push
push
stc
mov
imulb
pop
repnz
mov
sub
in
cmp
push
or
cmp
xchg
addr16
pop
ds
cmp
inc
and
or
xchg
xor
xchg
loopne
or
dec
adc
or
jnp
data16
pop
movsl
and
push
mov
xchg
outsb
pushf
in
stos
ret
xchg
sbb
push
adc
icebp
testl
inc
gs
or
in
mov
xchg
mov
cmp
mov
sahf
sti
fcmovne
sbb
sbb
adc
dec
add
mov
repz
mov
test
fadds
inc
std
pusha
enter
jbe
popl
jns
mov
cmp
inc
mov
pop
adc
sub
jg
cltd
jp,pt
push
xchg
sysexit
mov
dec
sbb
xor
lret
scas
inc
sub
cmc
sub
or
cwtl
pop
cltd
fst
cs
fcom
mov
in
fiadds
test
fs
mov
adc
js
lcall
or
test
idivb
pop
and
mov
movsl
stos
aas
mov
cmpsl
gs
mov
pop
mov
mov
fisubl
je
push
pop
mov
pop
lea
mov
mov
jnp
mov
push
mov
lock
hlt
xor
cmp
insb
dec
mov
in
movsb
xor
shll
in
stos
fldcw
push
ret
mov
inc
add
cwtl
push
adc
clc
test
sarb
test
shlb
cmp
sub
in
popa
fwait
pop
ljmp
pop
cmp
and
inc
movsb
das
jae
insb
and
xchg
cmc
ja
dec
jle
xlat
arpl
lds
xor
pusha
adcl
add
mov
dec
pop
out
insl
fstps
es
add
stc
sub
repnz
inc
roll
shrb
jb
xor
call
and
cs
inc
xchg
pop
lock
mov
aaa
jecxz
repnz
push
xchg
fidivs
addl
push
test
xchg
shlb
add
pop
lss
push
sbb
std
mov
popf
cmp
aad
pop
xchg
ret
sbb
cmp
mov
mov
popa
adc
mov
jns
and
xchg
lea
jg
icebp
push
stc
fwait
cli
cmp
xor
inc
push
dec
mov
cmp
xor
sbb
inc
arpl
pop
insl
add
inc
fsubr
sbb
cmp
or
add
nop
xchg
cld
mov
test
fildll
pop
jl
test
test
pushl
xor
sub
pop
test
push
dec
push
jle
or
mov
lcall
roll
icebp
pop
iret
das
inc
aaa
mov
cmpsb
dec
rorb
sti
ja
bnd
xor
mov
add
into
dec
in
lods
lret
adc
mov
loop
movsb
inc
stos
ds
pop
out
popa
inc
jp
push
dec
xor
lcall
cmp
cli
adc
sub
jo
loopew
test
jle
mov
push
movsb
cmc
mov
xlat
sub
mov
inc
test
frstor
lahf
sub
sarl
xchg
push
cmp
fnstcw
fimuls
in
lock
pop
push
out
add
leave
push
pop
dec
sbb
mov
data16
add
stos
shrl
mov
inc
fnstenv
push
dec
stos
adc
lcall
dec
dec
scas
adc
sar
lods
jb
test
adc
inc
jge
inc
xchg
add
test
fwait
pop
cmc
mov
and
add
sub
jae
ret
les
sub
inc
pop
sarb
insl
sti
cmp
push
xchg
popf
mov
jns
push
mov
int3
adc
loope
out
negl
out
mov
int3
int
aas
lock
mov
loopne
push
sbb
andb
and
jae
sbb
jno
inc
sbb
xchg
cltd
lret
test
iret
push
mulb
lahf
mov
loope
push
push
in
shlb
cmp
jmp
cwtl
mov
ds
xor
out
pushf
jecxz
fidivl
or
and
ds
outsl
push
push
push
inc
sub
sbb
xchg
mov
xor
ret
pop
imul
ljmp
aaa
fdivl
fsubr
sbbl
idiv
xchg
cwtl
int
repz
xor
in
inc
cmp
fdivs
aam
dec
test
sar
mov
sbb
outsb
and
scas
mov
xor
pop
mov
mov
movsl
adc
dec
movsl
add
ret
inc
mov
stos
add
fldcw
jno
sub
sahf
cwtl
clc
shrl
lea
mov
movsl
sub
xchg
std
xchg
mov
xchg
lahf
cmpsl
mov
arpl
mov
outsw
sti
push
fstpt
push
mov
aaa
shlb
stc
sub
cli
dec
stos
lret
sub
mov
pop
pushf
lret
jg
movsl
iret
dec
in
jbe
clc
pop
mov
jp
adc
jo
dec
ljmp
pop
es
push
jg
jne
fstpl
vcvtss2sd
mov
inc
cwtl
ds
ret
fcmove
mov
out
dec
mov
icebp
adc
imul
xchg
lods
xchg
movsl
push
sub
scas
add
inc
repnz
push
test
cmp
xchg
push
or
adc
les
adc
and
xchg
test
in
or
aas
int
inc
cmp
aas
or
repz
pop
ds
daa
mov
les
push
in
js
cs
xchg
adc
nop
xorl
xchg
mov
cmpb
jnp
mov
pushf
add
mul
mov
stc
lods
xchg
pop
jmp
push
cmp
sub
jo
cmp
jecxz
ja
fwait
xchg
les
fisttps
nop
cmp
xor
mov
adc
push
into
ja
dec
nop
es
xor
pop
fistpl
fs
in
push
shll
or
scas
inc
ja
imul
adc
adc
push
add
add
inc
add
outsl
push
insl
pop
mov
xchg
cmpsl
popa
in
jns
mov
cmovle
mov
pop
sbb
xchg
fimull
lock
mov
sub
jne
cmp
ds
push
cmp
pop
pusha
es
jbe
pop
jns
pop
add
xchg
fistl
adc
in
xchg
mov
in
push
sbb
xor
pop
add
cmp
push
pop
shlb
sub
and
and
push
je
repz
mov
xchg
stos
orl
jmp
push
imul
movsb
mov
or
cmp
pop
stos
dec
push
int3
push
mov
cmp
cmp
mov
ret
scas
inc
push
negl
ficompl
push
in
daa
addl
dec
andb
je
insl
mov
xchg
scas
adc
stos
outsl
in
rcl
bnd
aaa
out
into
cmp
xor
call
mov
jmp
adc
pop
and
loopne
add
inc
jnp
in
mov
movsl
inc
or
inc
sub
aas
mov
or
or
mov
sahf
sub
scas
aas
pop
rcll
iret
xchg
insb
add
add
inc
sti
negl
mov
fidivrs
cs
jg
dec
cwtl
adc
sbb
sbb
call
inc
out
jle
arpl
fwait
push
xlat
movsb
into
ss
sbb
ret
and
aaa
call
xchg
clc
dec
dec
jbe
into
and
xor
pop
outsl
pushf
pop
mov
mov
mov
rcl
mov
aam
push
inc
insl
bound
dec
in
pop
and
dec
into
dec
pop
xor
sbb
rcr
mov
push
xor
fimull
cltd
por
ficompl
mov
xchg
lock
daa
mov
js
outsl
icebp
lcall
mov
ss
jo
inc
idiv
xchg
cltd
or
es
and
dec
shll
sbb
xor
push
cwtl
jge
mov
jns
dec
ret
std
or
mov
mov
rcrl
mov
std
or
or
sbb
aam
dec
hlt
fs
fcomps
cmc
out
mov
push
push
mov
jmp
mov
inc
cld
daa
fistps
sub
and
mov
push
lea
icebp
dec
inc
jne
jnp
and
call
int
mov
cmc
lods
jnp
mov
insl
xorb
jmp
cmp
out
jl
sbb
mov
psadbw
push
mulb
outsb
sti
xor
lahf
test
cmpsl
xor
dec
stos
sbbb
push
push
push
xchg
gs
xchg
scas
push
test
imul
jg
scas
push
popf
les
mov
push
rorb
or
cli
in
outsb
cmp
int3
jmp
xchg
push
dec
adc
inc
and
popf
mov
lods
jle
mov
jae
cmp
mov
push
push
int3
out
push
push
xchg
hlt
das
loope
add
sahf
inc
cli
hlt
dec
dec
push
fldcw
loope
mov
jmp
sub
das
pop
or
mov
add
mov
mov
imul
mov
add
lcall
inc
jmp
or
and
and
xlat
leave
push
data16
push
jo
test
std
sbb
xor
push
stc
sarb
mov
in
and
daa
sub
mov
pop
addl
mov
vphsubwd
stos
in
push
aam
lret
lret
test
inc
or
lock
mov
mov
imul
shll
cmp
push
imul
inc
jecxz
xchg
scas
mov
imul
jecxz
inc
das
dec
jp
sub
mov
push
aas
lods
in
and
scas
test
psubd
adcl
push
sbb
jnp
aad
out
out
addr16
or
xchg
sub
orl
repz
inc
outsl
out
fs
ja
jnp
jl
pushf
mov
pop
lods
jmp
test
jmp
cmp
mov
jo
insb
dec
push
add
dec
xchg
loopne
test
dec
imul
add
xor
das
jns
imul
dec
shrl
gs
mov
push
push
dec
daa
mov
mov
fistpl
sub
outsl
pop
push
add
and
push
dec
xor
push
push
lret
mov
fisubrl
mov
fimuls
lock
mov
jb
cmp
add
mov
cltd
rcl
lods
ljmp
dec
sbb
sbb
cmp
repnz
cmpsb
adc
pop
pop
cli
pop
insb
and
add
gs
call
in
lock
das
sahf
cmp
jb
repnz
jae
sbb
ret
xchg
pushf
outsl
out
lds
and
adc
aas
mov
insl
push
stos
fs
pushf
mov
shr
repz
xchg
and
popf
xchg
scas
into
cwtl
les
call
or
hlt
aas
adc
lahf
aas
ficompl
sbb
outsl
inc
int3
mov
iret
mov
je
scas
or
dec
sub
cmp
sbbb
incl
mov
lock
test
xchg
mov
mov
in
fsubs
adc
test
and
sbb
loopne
ret
xchg
push
dec
arpl
mov
or
adc
lods
call
mov
push
ds
jno
push
popa
es
cmc
push
adcl
addb
xchg
mov
outsl
add
aaa
adc
rorb
add
or
pop
adc
dec
pop
out
xchg
jno
mov
sbb
jecxz
sbb
sahf
fcmovu
mov
cmp
push
lock
movsb
out
jb
gs
jmp
sub
push
int
shl
rcrb
jae
fstps
inc
lds
enter
jle
dec
outsb
or
push
insb
pusha
push
push
insb
lods
mov
pushf
addr16
cmp
movsb
xchg
mull
jns
adc
sbbl
push
push
lea
inc
cli
je
mov
push
mov
mov
and
dec
sbb
or
adc
or
jo
flds
in
or
and
negb
ljmp
jmp
es
subl
mov
jge
or
out
bnd
add
ds
aas
test
in
outsl
pop
scas
js
repz
rcll
lock
cld
mov
xchg
repnz
add
in
hlt
ja
and
add
hlt
movsl
push
std
or
dec
loop
mov
ja
jbe
aam
ja
push
add
jmp
into
in
sahf
popa
cltd
sbb
push
xchg
ret
cmp
cmpsl
mov
decb
jle
sti
in
aaa
xor
or
gs
sbbl
add
dec
mov
frstor
outsl
pop
dec
push
xor
pop
fwait
push
mov
jl
push
inc
in
ljmp
jmp
mov
jnp
and
mov
movsb
dec
aad
sbb
ja
jnp
pop
mov
mov
cmp
divb
mov
push
jmp
js
mov
mov
ss
in
pushf
scas
jg
sti
fadd
mov
mov
or
sub
cmp
fs
movsl
xor
jle
xchg
xlat
jns
or
in
inc
ss
jp
leave
jmp
test
adc
sub
ja
jnp
cmp
shl
inc
popa
sub
and
push
mov
adc
stos
and
inc
sub
adc
or
adc
pop
or
push
inc
ja
movsb
out
xor
pop
repz
dec
push
xor
popl
popf
call
lea
add
aad
std
add
in
lret
outsb
fs
sti
dec
push
fisttpll
add
mov
sbb
idivl
or
lahf
mov
push
repz
xchg
add
lds
in
or
push
fisubrs
outsl
inc
js
inc
bound
and
sti
shl
sbb
ds
aad
dec
jae,pn
mov
test
cltd
test
xchg
cmp
dec
subb
push
cmp
jge
clc
cmp
mov
mov
pop
mov
xchg
arpl
jle
dec
popa
adc
inc
push
mov
cs
sbb
adc
pushf
mov
mov
cmpsb
add
leave
aam
nop
push
rcrl
test
fcmovnbe
sbb
lret
add
dec
fmull
mov
int3
cmc
addr16
insl
pop
imul
lret
xchg
daa
test
adc
xchg
add
dec
lret
sbb
xchg
cmp
ja
adc
fwait
add
aas
xor
ss
andl
and
es
inc
adc
jg
xchg
ja
adc
into
and
lods
add
pushl
sbb
lahf
jge
mov
mov
jle
jbe
movsb
and
in
cmpsl
ret
data16
sub
into
push
jb
mov
insb
pop
jg
xor
and
rolb
add
pop
pop
test
push
adc
movsl
mov
lcall
mov
sub
call
shrb
pop
cld
aaa
inc
inc
das
jb
and
jl
pop
sub
jp,pn
or
mov
cmp
dec
xor
lods
add
and
jge
inc
or
repnz
push
arpl
les
sub
scas
hlt
mov
mov
imul
add
loopne
push
dec
dec
je
lods
outsb
cli
or
push
push
insl
xchg
sub
repnz
dec
call
into
push
test
dec
ss
aas
xchg
loopne
notl
push
push
imul
mov
jae
adc
aad
testl
add
sub
add
mov
out
ret
pop
add
inc
adc
mov
mov
push
insl
mov
pop
fnsave
lret
sub
and
mov
sub
mov
lea
xor
daa
jnp
dec
out
leave
mov
jno
cld
sub
test
test
dec
cwtl
aam
ret
mov
lret
andl
pop
nop
sbb
inc
idiv
push
or
testb
ds
add
hlt
adc
ret
out
insb
mov
xchg
cmp
rol
add
outsl
mov
js
and
in
fimull
add
inc
out
inc
out
cmp
cmp
add
and
out
mov
repz
mov
aas
sub
lods
xchg
pop
iret
ficoms
test
dec
cmp
ffree
sbb
cltd
adc
pop
cmpsl
gs
test
pop
adc
rcrb
test
adc
mov
mull
pop
cmp
loope
mov
inc
ret
sbb
add
mov
leave
inc
or
xchg
or
mov
hlt
insl
aad
xchg
mov
mov
loop
push
cli
lods
push
dec
dec
push
mov
xor
loopne
add
or
sub
pop
and
push
lods
dec
or
psllq
mov
jmp
jecxz
lea
mov
inc
addr16
pop
mov
or
sbb
loopne
nop
stos
iret
mov
aad
inc
arpl
push
lods
sub
je
adcl
mov
and
cs
test
xchg
sbb
aaa
push
stc
mov
call
out
dec
popa
cmp
dec
lds
ficoms
les
call
adc
push
sbb
divb
mov
out
and
scas
push
sbb
fs
xor
lods
sahf
or
xor
insb
pop
xchg
push
dec
lock
lods
sbb
fcomps
call
or
in
outsl
dec
insb
cmp
ret
sub
xchg
mov
loop
cmp
sbb
fimuls
sub
sbb
lcall
inc
movsb
lahf
enter
call
inc
xor
mov
test
loopne
ja
jo
mov
aam
push
pop
or
fidivs
call
inc
mov
cmp
cmp
aam
xor
cmp
ret
clc
push
aad
push
movsl
cmp
popf
cmpsb
xorl
int
xlat
jmp
je
lahf
popa
xchg
mov
add
insb
insb
xchg
lahf
inc
mov
jp
lcall
lds
mov
push
cli
jge
push
scas
fdivl
mov
adc
pop
jg
out
jl
mov
pop
add
or
sbb
in
jb
sbbl
adc
sub
movsb
lret
mov
aad
xchg
sub
dec
and
add
lods
xchg
imul
xor
ficoml
adc
outsl
ss
mov
imul
imul
fsubl
mov
inc
inc
cmp
addl
das
mov
cwtl
pop
mov
sti
lods
iret
mov
and
outsb
mov
sbb
add
xchg
in
cmp
es
int3
and
lret
cmp
cmp
xchg
dec
adc
mov
xchg
mov
fstpt
adc
jnp
mov
jo
lock
cmp
ja
or
xchg
adc
enter
jl
sbbb
imul
mov
adc
fdivs
repnz
stc
and
aas
push
int
sub
lcall
and
mov
out
ds
pop
popf
fldcw
sarb
ljmp
sub
jno
jecxz
pxor
test
out
into
out
addr16
jns
repz
std
cltd
sub
push
push
mov
fcmovu
or
inc
adc
fwait
enter
mov
roll
or
rcl
ljmp
ja
push
pop
dec
arpl
ss
lcall
out
mov
jae
push
loop
cli
jno
test
inc
mov
cmc
or
mov
xchg
lea
outsl
aam
mov
cmpsb
js
inc
repnz
mov
mov
int
jae
mov
call
cmp
aaa
adc
pop
cld
jmp
sub
js
ja
push
test
add
mov
das
cmp
rcrl
add
xchg
mov
fadd
call
mov
cmp
jns
shll
mov
mov
and
cmp
pop
pop
test
push
rolb
fsts
ret
fsubl
fcomps
loop
jge
addr16
in
jo
aaa
movsl
sbbl
out
mov
sti
xchg
pop
mov
dec
and
and
aad
daa
cmp
xlat
push
ret
mov
subl
xchg
mov
pop
mov
scas
mov
loop
and
jecxz
js
add
inc
xchg
pop
test
mov
xchg
js
cwtl
and
mov
jno
stos
xchg
pop
dec
idiv
mov
daa
roll
test
add
mov
adc
sarl
faddl
jle
aas
mov
scas
addr16
hlt
aam
mov
es
push
in
cld
xchg
stos
jo
adcl
dec
mov
cmp
mov
add
jne
test
fwait
cmp
outsb
orl
jbe
arpl
ret
inc
repz
or
push
arpl
mov
in
cmp
std
xchg
push
fbstp
sub
push
cmp
addr16
push
add
pop
mov
cmp
lret
rcrb
adc
mov
fmull
mov
jle
push
notl
inc
dec
mov
cmp
add
aad
xor
popf
add
sbb
inc
mov
cmp
add
push
xchg
sbb
mov
mov
dec
int3
loope
sub
push
pop
dec
es
fwait
rcrb
jae
shrb
mov
jns
push
pop
jp
xor
cmp
inc
arpl
and
mov
push
stc
add
xchg
aad
cltd
pop
xchg
xchg
mov
sbb
outsl
or
sahf
rolb
leave
sub
test
popf
cltd
aaa
cmp
das
xlat
int
addl
popf
cmp
inc
and
sub
dec
in
cmpsl
mov
jae
jp
aaa
add
pop
inc
cld
inc
dec
sub
lds
cmpsl
jne
and
loope
movsb
xchg
push
xchg
sub
lret
in
das
add
dec
and
fcmove
inc
sub
xchg
cltd
iret
add
fsubs
xlat
dec
push
adc
mov
mov
out
movsb
outsb
out
imul
mov
rcrl
pop
push
pop
cwtl
push
mov
pop
imulb
or
sub
mov
mov
xchg
lahf
jmp
out
pop
outsl
outsb
int
jne
sub
mov
shl
leave
mov
mov
mov
dec
jecxz
mov
mov
test
mov
out
push
adc
pop
jl
movsl
jb
push
mov
cmp
cmp
aas
dec
rcrb
or
mov
xchg
xchg
setns
test
push
hlt
mov
std
xchg
arpl
les
int
mov
test
and
mov
mov
add
push
ds
clc
in
ja
int
pusha
sbb
ja
sahf
enter
add
cmp
out
scas
repnz
jne
loop
cmp
sbb
lret
inc
sub
jge
jb
mov
jae
xchg
xor
jnp
mov
hlt
je
dec
jne
loop
mov
mov
push
inc
into
mov
insl
cltd
sub
or
rcl
sbb
or
pop
add
shlb
scas
jbe,pn
push
add
stos
jns
repnz
inc
ja
pop
shlb
jp
daa
fildll
lods
pop
dec
xchg
scas
pusha
add
rcll
out
jne
in
jo
je
xor
dec
add
sbb
ds
adcl
inc
jmp
leave
xchg
xor
out
mov
cld
inc
sahf
push
cmp
nop
das
sti
cwtl
out
subl
lock
push
inc
xor
clc
push
adc
xor
repnz
add
xorb
daa
add
and
mov
stos
out
out
mov
fsub
jbe
sub
add
xchg
ret
scas
mov
call
cli
call
add
cmp
insl
add
enter
sbb
xor
andl
jl
jg
leave
xchg
test
xorb
mov
jle
add
mov
lahf
cmp
sub
fsubrs
int3
subb
popa
jbe
jae
dec
xchg
xchg
test
mov
push
or
add
jp
int3
shrl
jp
aaa
mov
sbb
jnp
sbb
push
xchg
mov
push
cmp
icebp
sub
sub
lret
movsb
mov
outsb
sahf
cmp
xor
sub
fnstcw
mov
jnp
xchg
addr16
ds
sub
fmul
leave
ljmp
fmul
jecxz
xchg
ret
dec
push
cmp
xor
or
mov
leave
ja
push
int
sti
mov
test
pop
cmp
cs
movsl
stos
dec
out
xchg
fsubl
in
sbb
insb
je
cmpsl
sbb
popa
imul
mov
add
xchg
mov
clc
pushf
cli
adc
rclb
inc
dec
xchg
inc
sbb
sbb
and
vpaddw
and
mov
andl
cmp
ljmp
jecxz
in
pop
pop
xchg
mov
lcall
divb
ret
sarl
xor
mov
dec
xchg
jge
fsubs
jge
push
inc
test
xchg
sbb
ret
and
adc
das
cltd
movsb
push
cmp
push
test
jbe
xchg
inc
pop
or
popa
fs
push
sar
addr16
xchg
ljmp
loopne
data16
jo
inc
loop
or
sub
nop
lods
sti
mov
xlat
cmp
push
ja
out
lods
xchg
mov
cmp
jg
mov
mov
std
cld
rorl
mov
cli
push
sbb
jbe
jne
call
lods
js
inc
jbe
jno
stos
inc
out
insb
cmpsb
js
frstor
cmpsb
rorl
xchg
movsb
outsl
dec
adc
xchg
arpl
aad
sub
ror
nop
mov
jg
daa
and
ss
movsb
les
cmp
in
fisubrl
xchg
push
mov
scas
jecxz
jmp
mov
std
sbb
loop
inc
sbb
mov
add
lods
jo
mov
rol
repz
enter
sbb
push
add
lods
outsb
pop
pop
mov
stc
pushf
xchg
mov
sarb
in
stos
push
dec
inc
mov
mov
push
stos
idiv
pop
xchg
push
test
ss
cmc
and
jmp
in
cmp
sbb
sub
xor
pop
mov
sbb
outsl
cs
xlat
stos
jae
test
ret
jmp
movsl
lret
xor
pop
adc
or
add
cs
aaa
aas
cmpsb
mov
and
ss
jbe
and
pop
jb
adc
shrl
push
in
repz
movsb
ret
movsb
test
pushf
lret
push
subb
jae
test
jmp
inc
and
sbb
inc
lahf
scas
js
lcall
mov
imul
aas
sub
fldenv
pop
std
aam
inc
lods
fadds
out
mov
add
xchg
jecxz
cmp
in
pusha
add
xchg
aaa
cmp
ljmp
dec
sbb
cwtl
cmp
bound
dec
lahf
xchg
adcl
pushf
rorl
sti
jp
je
fsub
div
xchg
int
gs
enter
enter
out
aad
movsb
sbb
in
jp
xchg
hlt
xor
scas
sub
push
lret
xchg
movsb
cli
adc
je
aas
jns
aaa
fsubl
loope
lods
add
in
lea
lret
sub
arpl
les
out
dec
sub
and
test
mov
gs
aam
and
cmp
push
and
or
in
arpl
sbb
push
pop
xor
in
bound
stos
cmp
xorb
xchg
sti
jbe
mov
repnz
jmp
lock
orb
mov
movsb
cmp
outsb
ret
std
mov
dec
and
imul
jbe
add
mov
dec
mov
out
imul
pop
sbb
imul
xor
mov
xor
push
mov
jp
div
dec
sub
pop
add
add
mov
sti
xor
iret
mov
mov
lret
test
xchg
dec
inc
or
andl
faddl
mov
or
test
fildl
sub
sub
movsl
dec
inc
and
out
enter
popf
leave
imul
pop
sub
cmp
mov
icebp
sahf
pop
dec
xor
fld
mov
cmp
sbb
xchg
pop
ss
fwait
jb
loope
fwait
cwtl
pop
xchg
fdivrs
in
je
jns
movsl
sahf
mov
addl
das
fwait
pop
ljmp
out
cltd
daa
pop
or
jno
cltd
and
pop
rcr
jne
repnz
push
push
cmp
out
dec
or
mov
and
mov
mov
inc
jne
push
enter
pop
sub
xor
xchg
sti
sub
xchg
test
push
into
mov
ljmp
insb
loopne
incl
popf
in
in
nop
test
in
pop
icebp
shll
js
dec
aam
aas
jle
arpl
popa
pusha
mov
shl
test
add
sahf
or
sbb
push
xlat
gs
and
in
sub
inc
sbb
popl
sbb
pop
and
xor
in
aas
mov
dec
and
icebp
nop
icebp
stos
sbb
ljmp
jns
ja
mov
in
imul
movsw
lret
and
mov
flds
xchg
jbe
stos
stc
pop
stc
jp
das
push
mov
sbb
and
shl
leave
jmp
mov
mov
dec
sbb
push
dec
mov
or
sbb
test
push
mov
cli
scas
out
pop
and
test
fiadds
mov
lods
pop
mov
lods
mov
cld
data16
add
jl
mov
push
aaa
fdivrl
insl
int3
lahf
repz
lret
dec
daa
and
mov
add
fstps
dec
ss
aad
cmp
les
fcmove
xlat
aaa
add
aam
lods
sub
inc
loope
inc
dec
pushf
test
cmpb
dec
out
pop
in
mov
je
shr
xor
xchg
add
xchg
mov
or
scas
mov
fwait
inc
jl
scas
pop
xor
neg
aad
cmpsb
cmp
dec
mov
insb
and
jg
push
fcmovnu
adc
les
dec
int
loop
adcl
and
adc
int3
aas
cwtl
inc
orl
pop
jno
sbb
mov
jo
stc
adc
adc
push
cmpsb
mov
out
popf
ret
sbb
jmp
push
cmp
adc
pusha
sahf
enter
xchg
mov
jmp
push
mov
pop
lea
das
jb
cwtl
pop
mov
sub
test
movsl
sub
mov
mov
push
in
and
out
inc
mov
rorb
shlb
and
imul
lds
xchg
pop
jae
int
cld
ret
sar
xchg
lahf
push
shl
push
lds
and
xchg
cmp
aas
pop
xchg
mov
lods
scas
sahf
and
fidivrl
iret
mov
push
mov
jp
cld
xor
into
movsb
stc
aaa
aas
fnstenv
jecxz
xchg
cmpsl
pushf
lahf
sbb
repz
push
rolb
loop
jmp
fwait
and
dec
imul
sbb
insl
mov
xchg
jmp
das
iret
add
cmpsl
sbb
add
jle
rorl
stos
or
loope
and
cmp
cmc
jne
mov
mov
fildl
push
faddl
sbb
jp
add
jle
out
cs
test
push
cmp
add
out
xor
andb
pushf
pop
outsl
sbb
rolb
and
les
mov
xlat
imul
idiv
mov
in
popa
loope
mov
jp
insb
sub
push
push
jne
inc
ret
outsb
inc
fidivs
cs
lods
insl
out
adc
shlb
je
xchg
shll
std
push
in
and
sub
ret
aam
pop
shr
das
loop
inc
sbb
cmp
es
mov
ja
loopne
test
ja
testb
jae
insl
push
scas
loopne
xor
loopne
stc
iret
mov
adc
pop
push
push
outsb
addr16
or
ret
addr16
neg
xor
jnp
or
xchg
jb
inc
mov
sbb
movsl
orb
divb
das
pop
mov
fimull
mov
test
pop
jecxz
rorb
and
in
rclb
je
fidivs
mov
xrelease
mov
sub
push
mov
out
arpl
jne
mov
in
xor
lahf
leave
call
aad
push
add
iret
mov
je
push
cmp
dec
sub
pop
gs
dec
ds
mov
mov
orb
leave
sub
in
sbb
dec
sbb
into
frstor
mov
adc
xor
add
dec
pop
test
mov
mov
rcrl
insl
cltd
imul
shlb
xorl
mov
xchg
mov
inc
popa
mov
jb
xor
adc
movsl
dec
jle
and
adc
test
dec
aaa
xor
test
mov
outsb
ret
adc
fldt
sub
sub
clc
inc
sub
clc
mov
jb
and
xor
stos
or
jb
add
push
mov
and
in
test
enter
xchg
xlat
cwtl
out
lock
pop
xlat
sbb
xor
lods
jmp
fbstp
sti
ficomps
sub
pop
cltd
lahf
sti
and
call
je
addr16
bound
mov
mov
push
push
dec
insl
adc
add
mov
and
movsb
stc
shr
xchg
lea
or
or
fistps
jmp
jae
cltd
jae
fistps
sub
sbb
jmp
sub
or
or
in
cmp
mov
lret
lock
lods
aad
testb
clc
ret
lds
or
fistps
sub
push
fbstp
xor
jae
cltd
insb
or
sbb
repnz
mov
sub
fcmovu
push
fstps
mov
mov
movsl
mov
mov
fildll
and
mov
iret
jns
mov
sub
mov
pop
pop
mov
sbb
and
add
ret
sbb
push
sbb
ret
int
pop
imul
std
mov
dec
sub
dec
mov
lcall
sbb
lods
fmull
add
add
fiadds
push
cwtl
fsubrs
dec
and
ficomps
dec
jmp
rcl
sub
leave
sbb
outsb
fldt
data16
dec
push
dec
pop
push
sub
sbb
pop
loope
mov
sbb
jb
sbb
out
sub
icebp
shl
mov
scas
sub
imul
add
mov
xchg
adc
ljmp
mov
shrl
inc
cmp
in
std
fadds
mov
dec
aad
xor
add
mov
xor
sub
insb
in
xor
push
sbb
sbb
je
test
data16
dec
stos
mov
adc
mov
iret
add
cwtl
daa
cmp
imul
insb
jo
dec
ret
dec
stos
fwait
test
bound
pop
decl
iret
and
push
fildl
jo
shrl
outsl
incl
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
push
add
jo
fs
sub
push
dec
popa
dec
cmpsb
jb
repnz
jge
aaa
in
sub
push
dec
popa
dec
pop
scas
repnz
leave
clc
shl
pop
sub
push
dec
popa
dec
nop
and
xchg
rolb
sub
push
dec
popa
dec
repz
scas
repnz
sar
dec
cmpsl
ds
sub
push
dec
popa
dec
outsl
add
clc
push
sti
add
dec
popa
dec
out
das
mov
inc
sbb
sub
sub
push
dec
popa
dec
sti
mov
inc
add
xchg
pop
push
sub
push
dec
popa
dec
xchg
shll
dec
cmpsl
shlb
dec
popa
dec
jo
mov
inc
sbb
xor
push
sub
push
dec
popa
dec
test
repnz
imul
mov
push
dec
popa
dec
add
xchg
add
dec
cmpsl
pop
jmp
push
dec
popa
dec
jecxz
mov
inc
popa
add
dec
cmpsl
int3
sub
sub
push
dec
popa
push
sbb
jb
adc
lea
mov
cwtl
aam
loopne
mov
imul
or
and
add
fbstp
mov
imul
rclb
ljmp
imul
cltd
fldcw
mov
cmp
mov
add
shrb
lods
push
cmp
fistl
mov
jno
icebp
mov
clc
rcr
or
scas
enter
aaa
icebp
outsl
lcall
mov
inc
nop
iret
inc
leave
xchg
fildll
sub
adc
and
sbb
jmp
negl
mov
mov
mov
int
mov
xchg
orb
pop
dec
push
mov
xor
jp
dec
test
fcoml
push
add
sub
fs
cmp
push
xor
sub
js
into
cli
aas
cs
ds
push
cmp
imul
xchg
inc
xor
lods
lret
inc
enter
daa
pop
jo
xor
popa
cmp
jmp
lahf
imul
bound
imul
xor
in
jge
adc
or
pop
mov
aas
movl
testb
out
jmp
in
push
lret
and
and
mov
js
lcall
pop
lds
xor
dec
repnz
lret
ss
sbb
test
cld
adc
popa
insb
adc
jb
in
clc
cs
daa
push
push
mov
or
mov
add
jge
out
jo
test
loope
jge
fcomp
xchg
mov
add
push
out
fbld
inc
ja
rol
and
pop
or
pop
pop
push
or
outsb
inc
and
lock
or
push
cmp
in
cmc
jge
adc
mov
cmp
fimuls
push
insb
into
ja
push
fwait
dec
pop
and
movsb
dec
es
fyl2xp1
out
std
orb
call
loopne
and
pop
in
lcall
fsts
jle
jg
cmpsl
add
sbb
loope
test
pop
lcall
or
lods
fs
or
jbe
lods
jmp
icebp
jl
clc
fistps
neg
adc
add
into
movsl
fldl
icebp
or
sub
icebp
jl
add
push
xor
jno
shll
rclb
nop
test
mov
ret
push
or
or
jge
imul
mov
enter
addr16
insl
ficompl
mov
insb
inc
pop
sti
cmp
aaa
xchg
ret
dec
sbb
or
fsubrl
and
jno
dec
das
lods
push
movsb
iret
xor
les
push
xorb
dec
xor
cmp
mov
lds
lock
jo
jo
push
lret
les
inc
adc
scas
add
sbb
sub
jae
sbb
push
add
addb
cmp
nop
xchg
fs
pop
pop
inc
cs
inc
push
cmp
fdivrp
fwait
lret
cmp
jp
adc
in
sub
sub
jmp
imul
pop
dec
cmc
addr16
sbb
inc
jo
aad
pop
int
cmc
inc
push
and
mov
xchg
add
out
adc
xlat
adc
inc
mov
mov
leave
xor
push
lds
mov
das
int3
jle
icebp
jge
xchg
ret
xor
xchg
enter
mov
aaa
pop
cmp
inc
call
scas
rcrb
out
jmp
cmp
xchg
stos
pop
jae
pusha
lret
movsl
pop
loopne
pop
shrl
pop
xor
cmpsl
push
add
xchg
or
sbb
insb
adc
mulb
push
push
sbb
mov
mov
incb
and
jns
lret
test
orb
cmp
or
push
cli
fildll
mov
ds
loope
repz
mov
iret
pop
repz
out
and
push
fdivl
sbb
mov
jg
leave
shll
xchg
inc
pushf
ja
imul
cmp
cmp
xchg
inc
mov
cli
jp
fsts
xchg
vpsubb
fdivrl
xor
mov
mov
movsl
sub
mov
push
xchg
pop
pop
add
sbb
adc
stos
sbbb
popf
pop
add
leave
test
or
mov
fildll
shlb
pusha
clc
outsl
push
ss
sub
pop
push
shll
push
sbb
cltd
push
stc
xor
mov
decb
cmpsl
std
rcrb
inc
negb
rcrl
cs
lahf
lahf
or
hlt
hlt
mov
stos
mov
in
or
rcrl
jbe
mov
cwtl
mov
arpl
adc
ss
iret
jecxz
into
shrl
aaa
push
and
jp
test
dec
shrb
xchg
int3
mov
jg
push
add
rcr
jp
stos
cmp
mov
pop
test
rorl
fwait
sub
push
xor
xlat
sti
sub
mov
les
inc
cmp
jb
repz
sbb
cmp
std
sbb
dec
fcoms
xor
and
add
inc
js
mov
movsb
fildl
sbb
jnp
lds
fisttpll
stc
jge
sahf
ret
sub
movsl
repnz
js
pusha
aaa
push
call
sub
push
mov
xchg
rep
decl
std
sahf
imul
mov
lds
ret
sub
mov
les
and
das
test
pop
call
mov
jno
lods
int
cmp
cmp
mov
aam
and
movsb
jo
push
call
add
inc
cmpsb
add
pop
call
ss
loop
pushf
adc
jae
lock
jmp
jl
test
stos
test
inc
out
rorb
les
movsb
inc
fwait
pop
sbb
add
or
pop
lds
bound
cld
and
and
cwtl
fs
cmc
negl
pop
mov
ljmp
dec
pop
lds
out
js
pop
add
hlt
jmp
pushf
sti
dec
cmp
cmp
iret
clc
mov
fwait
dec
int3
in
cwtl
add
leave
insl
lds
cs
aad
cmpsl
insb
and
xor
jbe
fsubrs
test
cmp
or
dec
inc
pop
xchg
mov
add
cmp
xchg
sub
js
sbb
sahf
push
pusha
cli
dec
dec
add
add
dec
pop
shll
and
mov
nop
out
mov
sbb
jmp
stos
rcrb
test
cmp
js
xchg
cmp
sub
ja
out
jp
or
inc
lahf
ret
jle
scas
ss
decb
jp
mov
sub
out
jnp
mov
xchg
das
fdivr
stos
push
int
pop
movsb
sbb
sub
je
or
in
repnz
adc
movsb
js
adc
fbstp
lock
and
test
add
push
testb
sbb
cmp
push
mov
fildll
cltd
in
inc
fstpl
push
xchg
jbe
testl
inc
sbb
sub
lcall
push
xchg
ret
gs
andnps
shrl
outsl
xor
adc
sub
fcmovnbe
lds
sbb
fbstp
cmp
mul
filds
fistpll
mov
add
movsl
adc
and
shll
push
cwtl
add
movsl
stos
in
icebp
add
add
data16
and
sbb
dec
pusha
pop
xchg
scas
test
jb
xchg
cmp
add
push
xchg
ds
add
push
and
cld
sbb
cmpsb
dec
mov
insl
lods
sub
clc
push
dec
cmpsb
loopne
orb
or
setbe
adc
rclb
aas
inc
sbb
xor
pop
pop
xchg
or
inc
pop
out
int3
shlb
dec
xlat
and
dec
test
js
test
xchg
xor
out
sub
lods
movsb
pushl
add
popa
fadds
loopne
loope
and
jns
sti
mov
push
adc
jne
adc
push
cmp
xchg
adc
sub
aas
mov
sub
cmp
add
jp
xor
jecxz
or
psubq
sub
inc
adc
out
pop
dec
aas
nop
imul
ds
sub
mov
or
xchg
lods
jg
scas
fstl
inc
loop
shrl
cmp
push
sbb
pop
sarb
cmp
pop
das
div
std
into
mov
std
mov
jl
xor
cmpsl
mov
repnz
inc
fs
out
in
jg
sbb
pop
stc
cmpsb
popf
lds
jge
in
test
scas
push
cld
jne
in
lods
pusha
insl
test
hlt
fcoml
xchg
adc
xchg
mov
pushf
data16
fcmovnb
leave
jl
out
mov
movsb
sti
pop
xchg
jmp
ficompl
pop
mov
lods
push
sbbl
sarb
aad
sbb
jmp
popa
xchg
cmp
push
fs
adc
pop
cld
xor
or
out
mov
add
out
cltd
arpl
mov
in
push
mov
fnstenv
arpl
popa
out
orl
out
mov
mov
jge
dec
insb
into
test
pop
mov
cld
add
sbbb
mov
and
shl
call
inc
cs
xchg
sbb
roll
mov
push
mov
mov
sbb
xor
cli
pop
add
mov
push
mov
es
js
or
mov
push
mov
sbb
jo
xchg
aaa
aad
cmp
dec
mov
ds
mov
inc
je
fwait
das
cltd
fsubrp
ret
es
jae
imul
dec
and
push
xor
ret
js
clc
mov
stos
xchg
out
and
jmp
popa
nop
inc
add
int3
cmpsb
mov
push
int
pop
sti
pop
push
dec
push
xchg
daa
fsts
daa
jb
hlt
mov
dec
aam
fstp
adc
mov
and
jle,pt
call
mov
cld
aaa
xchg
in
loopne
cmp
push
repz
sar
mov
js
sbb
dec
pop
ljmp
jcxz
imul
sbb
rcrb
das
fs
and
push
dec
repnz
outsb
push
or
add
sub
test
les
push
sbb
movb
out
lock
push
subb
orl
dec
inc
dec
cmp
test
sarb
mov
push
jge
xchg
js
and
fstl
xor
xchg
jge
adc
lock
pop
xor
dec
push
lods
ljmp
mov
pop
int3
mov
stc
pop
repnz
xchg
cmc
or
loope
mov
xchg
xchg
jbe
lret
in
mov
inc
hlt
sub
xor
cmp
lret
paddd
or
cmpsb
dec
cwtl
cmp
in
mov
les
outsb
cmpsb
pop
push
cwtl
adc
and
js
pop
and
jb
in
mov
hlt
add
mov
sbb
jmp
lret
mov
pushf
ficoms
inc
jbe
dec
mov
pop
or
push
mov
sbb
sub
out
and
mov
push
aam
outsb
cmc
leave
fldcw
fwait
cli
addl
loopne
loop
pop
popa
adcb
or
sbb
or
xor
in
push
stc
mov
jbe
mov
sbb
movsl
xor
test
jbe
loope
inc
mov
cmp
cmp
andl
int
cmp
fucom
call
cmpsl
push
lea
cmpsl
and
mov
mov
loope
idivb
dec
int
push
dec
push
dec
test
xchg
mov
or
hlt
sbbl
dec
aas
dec
pop
add
lods
jmp
negl
outsb
mov
mov
je
addb
fsubs
mov
pop
movsl
xchg
lds
pusha
and
pop
xor
pop
mov
lahf
call
pop
mov
imul
and
int
loope
pop
mov
mov
push
push
bound
cs
aaa
cmp
out
sbb
aaa
daa
test
mov
mov
push
pushf
addr16
add
sub
push
sbb
mov
xchg
sub
lods
xor
notb
adc
shll
pop
jg
imul
repz
stos
ds
fs
out
adc
cmp
scas
jne
mov
sub
int
cmp
fstps
dec
or
sbb
and
and
sbb
nop
aas
jno
lods
sub
inc
dec
mov
shl
adc
xorb
push
scas
jmp
inc
mov
pop
std
dec
sarl
adc
mov
iret
js
push
mov
and
mov
mov
sbb
xor
sub
xor
insl
jge
sahf
imul
insl
pop
add
inc
mov
icebp
dec
rorl
cmpsb
into
sub
lret
jg
pop
in
cmp
or
push
mov
cmpsl
mov
loopne
mov
imul
mov
daa
inc
scas
cmp
pop
stos
cmp
and
cmpsb
mov
add
adc
sbb
cltd
repz
insb
inc
jmp
mov
sbb
js
xchg
fwait
loopne
std
xor
cmp
hlt
or
jbe
lods
push
cmp
xchg
push
push
lds
imul
pop
aam
mov
xchg
int
data16
pushf
fs
sub
cwtl
jo
mov
cmp
xchg
jmp
sbb
dec
sarl
mov
xchg
sahf
adc
inc
ret
cmc
addr16
test
inc
mov
adc
loope
loop
mov
jg
dec
mov
xchg
push
jg
fadds
cld
sbb
mov
ss
jmp
push
out
mov
sbb
push
add
loop
jae
loopne
dec
push
jno
sub
push
xchg
add
ss
inc
adc
add
push
jmp
mov
clc
and
dec
into
push
dec
popf
popa
ljmp
out
xchg
push
inc
cmpsl
adc
jp
dec
push
gs
dec
push
dec
imul
les
mov
sub
lret
push
mov
cmpsb
fwait
andb
pop
xchg
dec
lds
mov
nop
mov
push
in
cs
sbb
loop
stos
jb
lahf
push
push
enter
fmulp
js
push
cld
insb
push
pop
jl
inc
adc
popa
pop
mov
jecxz
dec
push
xchg
adc
inc
dec
test
fisubrs
subps
add
and
in
add
xor
jg
out
sbb
add
and
xor
push
scas
les
sub
sbb
cwtl
leave
inc
sub
mov
push
jl
cmp
sbb
mov
fcompl
iret
arpl
or
call
pop
not
push
xor
cmc
dec
push
mov
shrl
stos
test
push
pop
fildll
imulb
xchg
dec
popf
mov
dec
andb
imul
cltd
in
daa
loopne
or
and
popa
loop
push
jp
cmp
orl
jle
int3
imul
jno
ss
cmpb
rcrb
ljmp
rolb
xor
rcr
dec
xor
dec
pop
mov
and
mov
sbb
mov
mov
pop
je
fbstp
aam
and
lret
rcrb
mov
jecxz
jno
sahf
mov
pop
xchg
and
sub
test
out
inc
add
add
push
cmp
ljmp
inc
mov
adc
lea
in
imul
repz
iret
leave
mov
mov
xchg
cld
dec
xchg
dec
int3
shrb
mov
jp
or
pushl
sbb
xchg
mov
and
ret
cs
pop
xchg
test
push
mov
jb
outsl
pop
shlb
mov
shll
cmc
jno
jb
in
push
data16
pop
and
jno
push
stos
push
jge
lods
ss
xchg
xor
not
push
sbb
sahf
adc
mov
add
pop
mov
sbb
and
mov
jnp
bound
fimuls
dec
ret
test
sub
imul
gs
leave
pusha
xchg
push
jnp
lock
jbe
enter
push
xor
inc
mov
les
xchg
mov
jns
decb
push
mov
add
pushf
pop
stos
push
sbb
mov
int
sbb
mov
lret
xchg
nop
mov
mov
push
and
and
or
cltd
cmp
mov
inc
sbb
movsl
dec
add
jge
push
int3
inc
sti
cmc
cmpsb
repz
sbb
pop
mov
cwtl
adc
jge
push
adc
cmpsl
push
adc
into
data16
fimuls
notl
xchg
mov
hlt
cmpsb
dec
cmpsl
cmp
loope
mov
push
jle
in
adc
add
repnz
out
and
out
dec
nop
mov
mov
rcll
int3
xchg
les
cmp
popa
dec
sub
sub
inc
ret
out
sbb
dec
inc
shl
negb
push
pop
and
dec
mov
mov
daa
push
lcall
push
cmpsl
mov
sbb
or
sbb
lods
pop
adc
fs
cmp
dec
inc
loope
fdivl
scas
lret
adc
and
jb
sub
js
or
xchg
js
in
push
cld
ret
pop
jns
clc
push
mov
bound
xor
cli
repnz
fistpll
loopne
ret
inc
sub
mov
and
push
mov
push
push
inc
pop
mov
icebp
lds
ss
push
cmc
mov
and
dec
enter
add
push
icebp
pop
int
and
sarl
fdiv
push
stos
dec
jg
out
mov
leave
daa
shll
mov
xor
jno
dec
xor
jmp
xor
testl
shlb
rcrl
insl
xchg
jl
sub
jle
mov
cwtl
in
es
repz
mov
insb
pop
push
fildl
push
dec
jbe
mov
xchg
scas
jg
push
mov
mov
stos
andps
mov
popf
nop
dec
mov
mov
movsb
icebp
and
sarl
xlat
stc
add
pop
mov
sub
sbb
in
shll
xlat
inc
mov
inc
vandnpd
pusha
sub
push
xchg
mov
add
and
and
adc
jl
aaa
scas
add
lea
adc
in
jnp
mov
push
movsb
inc
jbe
adc
in
push
fisubrs
xor
in
xlat
mov
hlt
push
shrb
mov
and
sub
and
or
andl
movsb
inc
sbb
test
jo
aad
xchg
test
mov
aas
ljmp
cmc
push
mov
in
outsl
sub
mov
icebp
sti
cmp
mov
ss
and
pusha
outsl
sbb
adc
int
addl
push
xlat
and
mov
cmp
mov
push
ljmp
aad
stc
mov
mov
fidivs
adc
jp
jae
cltd
insl
mov
jb
fcomps
fcmovu
shll
wbinvd
adc
xchg
lcall
sbb
int3
ss
mov
in
andl
inc
ljmp
sub
mov
adc
out
fdivs
scas
lret
ss
jb
mov
xor
mov
sbb
push
dec
fsubrs
cmc
movsl
jnp
popf
fwait
cmp
cwtl
arpl
push
mov
leave
inc
mov
inc
pop
clc
jmp
sti
xor
cli
add
mov
cld
dec
mov
shl
rcr
lods
cmp
jg
lods
or
push
outsl
outsl
cltd
xor
rcrl
sub
push
xchg
push
aad
test
or
sbb
hlt
adcb
inc
cs
and
mov
and
dec
pop
xchg
lahf
push
xchg
notl
shlb
mov
daa
mov
jl
pop
int
mov
xchg
pop
icebp
sbb
pop
or
aam
testb
je
mov
nop
mov
shrl
and
or
inc
lods
leave
mov
cld
xor
cmpsb
jmp
sbb
add
mov
jnp
repz
pusha
xchg
ljmp
lds
add
les
dec
inc
inc
es
stos
mov
cwtl
dec
sub
and
add
lods
in
push
jmp
ljmp
sub
jns
scas
push
dec
lcall
dec
mov
push
int
leave
leave
jge
mov
pusha
add
add
push
jle
push
cld
lds
mov
rcll
js
and
popa
push
aam
das
or
sub
push
jns
lea
jns
mov
or
mov
test
mov
fimull
push
enter
lea
ret
out
sbbb
js
popa
out
add
fistps
in
sub
jnp
rorb
mov
popa
xor
nop
stos
dec
clc
push
adcl
and
jnp
stos
ljmp
sub
sbb
xlat
jnp
sahf
cli
sbb
mov
in
push
pop
sub
lods
sbb
filds
js
mov
xchg
add
jl
mov
fucomp
cld
es
xchg
xchg
inc
push
inc
ret
sbb
ja
ja
out
inc
fwait
lods
pop
addl
inc
mov
imul
mov
out
in
pop
ja
xlat
mov
mov
jle
call
or
test
or
pop
mov
xor
lret
xor
shr
int3
jmp
shrl
inc
daa
jg
loope
jo
popa
mov
dec
and
push
mov
popa
sbb
popf
dec
cmpsl
ss
mov
mov
dec
push
icebp
push
cmp
dec
xchg
jae
icebp
add
dec
push
lea
xor
push
adc
out
sbb
mov
push
ljmp
mov
sub
jae
jno
les
mov
jbe
loope
pop
cmpsl
clc
or
pop
mov
mov
add
mov
sub
icebp
lret
stc
push
xor
dec
loop
jp
arpl
and
and
lock
cmpsl
or
andb
mov
aaa
xor
ficomps
push
in
cs
loope
dec
sub
xchg
nop
mov
stc
in
push
insl
jle
adc
add
sub
out
jge
add
mov
dec
repz
call
shlb
leave
xchg
xor
in
push
stos
fildll
mov
cltd
rcl
jnp
scas
imul
clc
xor
dec
stos
adcb
into
dec
movsb
dec
xchg
dec
cmpb
mov
out
xor
scas
mov
std
adc
icebp
dec
adc
lea
mov
je
mov
sbb
add
push
stos
or
push
icebp
adc
in
or
lret
fnstcw
push
nop
dec
incl
or
inc
inc
xchg
xor
out
mov
dec
inc
jmp
mov
cmp
in
incb
call
cli
pop
lock
adc
mov
and
fisubl
xor
jge
push
cmc
iret
fsubl
push
ret
jo
adc
jbe
push
or
mov
dec
adc
dec
sbb
sbbb
xrelease
jnp
or
dec
adc
mov
test
sbb
fadd
mov
mov
aas
aam
mov
or
jmp
or
push
and
dec
hlt
popf
scas
pop
sbb
jl
call
sbb
nop
pop
inc
movb
dec
mov
pusha
aaa
pusha
xchg
sub
xor
addl
out
int3
xor
dec
xor
jno
inc
mov
mov
push
adc
push
test
push
movsb
mov
repz
movsb
inc
sbb
imul
clc
lret
or
add
jg
xor
or
push
movsb
mov
sahf
insb
fsubr
inc
jg
mov
push
xor
add
sti
fstpt
pop
andl
outsl
cwtl
cmp
mov
xor
xchg
adc
mov
mov
mov
adc
imul
mov
inc
xor
popf
xchg
imul
sar
cmp
jb
ljmp
jmp
xlat
and
pusha
lcall
cmp
inc
xchg
sbb
loop
sub
push
loop
dec
mov
pop
jns
push
or
mov
or
xor
mov
jo
inc
xchg
in
scas
imul
lret
mov
xchg
sub
into
push
fwait
popl
outsb
cwtl
add
jnp
repz
pop
sbbb
test
add
int
add
cmp
ror
push
pop
sahf
lcall
push
hlt
adc
add
sub
idivb
je
sub
mov
lcall
in
sbb
or
pop
in
or
mov
ds
stos
int3
or
inc
test
xor
sbb
push
add
rcll
cmp
div
daa
das
pushf
rorb
mov
lock
test
loop
and
xor
test
clc
xchg
xlat
jmp
mov
clc
mov
mov
cld
enter
fstl
pop
adc
jno
lret
or
roll
mov
popf
in
add
leave
jno
lret
inc
mov
mov
pop
cmp
dec
inc
aas
sub
daa
cli
push
xchg
ret
sbb
popa
ret
loop
imull
loope
shll
lret
pop
and
in
loopne
arpl
lret
cmovle
push
cld
jnp
stos
xor
mov
cmpsl
int3
call
loopne
jbe
pop
and
or
das
inc
lahf
mov
jg
iret
push
loop
add
xchg
and
in
dec
mov
adc
in
pop
shrl
push
adc
mov
cmp
push
aad
insl
aad
sub
jecxz
call
aad
fdivs
ljmp
sbb
jns
xor
dec
cmc
lcall
adc
cmp
fildl
scas
xorl
inc
sbb
mov
push
lea
add
mov
sbb
jae
xchg
mov
sbbb
cld
aad
pop
inc
dec
push
cld
pop
mov
rcrb
pop
inc
mov
cli
sbbb
inc
into
fsubl
aad
in
dec
fidivrl
into
inc
loopne
xchg
sub
pop
sbb
dec
nop
sub
jne
inc
inc
xchg
mov
test
jecxz
gs
stos
icebp
dec
lret
jg
push
repz
inc
and
loop
outsl
lahf
and
mov
pop
sub
mov
xor
mov
jne
repnz
xchg
lock
jecxz
imul
dec
adc
jbe
pushf
xchg
xor
ret
nop
sub
imul
mov
push
imul
ss
pop
pusha
mov
add
pop
std
sbb
xchg
add
sub
inc
push
pop
sub
into
lret
or
mov
test
jo
mov
scas
push
mov
cmpsb
xor
sbb
jae
dec
mov
adc
push
cli
sub
push
push
dec
push
sbb
xchg
cs
out
and
out
scas
lock
loope
jp
pop
jmp
hlt
aaa
dec
aad
imul
out
mov
and
mov
popf
cmp
shll
ffreep
jno
inc
adc
mov
or
cmp
ror
addr16
out
pop
and
push
push
insb
xchg
push
outsl
sub
cmpsl
pop
mov
scas
lock
shll
loop
lahf
xchg
dec
in
push
lds
movaps
ja
sub
adc
int
ret
push
cltd
dec
adc
add
test
rcrl
push
fstps
test
sbb
fisttpl
and
aaa
xchg
xlat
or
shrl
out
sbb
or
jnp
scas
pop
sti
dec
mov
fwait
pop
leave
int
fsts
call
in
lods
adcb
ret
xchg
int3
fxch
xchg
push
in
lret
test
push
mov
iret
inc
mov
adc
mov
les
adc
sbb
pop
mov
popf
push
in
xchg
shll
ljmp
les
add
adc
push
mov
push
clc
pop
cltd
gs
lcall
inc
insb
fisubl
pop
push
cli
repnz
subl
add
rcrl
outsl
push
andb
movl
mov
into
scas
sbb
rorl
enter
mov
lahf
or
std
xor
mov
add
fwait
cmp
mov
scas
loop
cmpsb
sub
pop
jle
mov
out
popl
add
cmpsl
mov
outsb
pushf
lods
mov
popf
adc
sbb
lahf
jae
pop
add
lret
push
jmp
mov
sti
scas
testb
idivb
je
ss
jmp
icebp
gs
fwait
mov
movsl
xchg
inc
inc
xchg
roll
sub
lock
push
cld
jno
stos
lock
inc
cltd
nop
pop
push
xor
in
lods
xchg
push
sbb
addb
rcrl
mov
add
repz
mov
add
daa
aaa
lds
adc
lea
fs
xor
shr
movb
out
push
rcll
xchg
enter
jb
repz
test
sub
imul
pushf
stc
mov
jns
cmp
out
or
outsb
push
push
out
adc
jp
les
aad
les
push
push
pop
adc
sub
icebp
scas
lret
inc
jl
mov
jg
xchg
cmpsl
in
cmpsl
push
jge
dec
pop
rcr
mov
add
mov
sbb
movsb
push
pop
leave
cmp
jae
sub
out
fbld
and
jnp
pop
call
js
pushf
lods
push
repnz
cs
sbb
mov
inc
jmp
push
inc
and
imul
outsb
pop
iret
inc
cld
ss
fdivrl
mov
inc
into
int
fwait
adc
je
sbb
pop
icebp
or
cmpsl
pushf
jno
push
int
jns
movaps
mov
xor
mov
jecxz
jo
sbb
sbb
pop
jmp
adc
dec
cmp
sub
ljmp
inc
pop
clc
dec
cltd
add
out
inc
test
jge
jg
scas
sbb
cmp
test
mov
mov
in
add
xchg
pop
sub
mov
xchg
sbb
cltd
and
mov
mov
pop
push
jp
mov
inc
jbe
pushf
xor
or
pop
and
lret
cltd
clc
out
ja
xchg
sub
scas
adc
sbb
sarb
pop
push
inc
sahf
mov
xlat
out
add
out
inc
aam
popf
or
xor
into
xchg
movsl
and
push
out
js
ret
push
pop
cld
int
decb
xor
lods
lock
push
lods
out
enter
mov
add
sbb
add
and
adc
push
mov
cmpsl
inc
jne
push
add
imul
iret
addr16
jno
int
mov
or
mov
ljmp
push
test
mov
ja
mov
push
outsb
aam
adc
and
ja
push
jl
push
cmpsl
push
shlb
push
mov
popa
xchg
inc
popa
dec
mov
lahf
cmpsb
movsb
mov
mov
cld
jl
xorb
cmp
inc
stos
iret
xor
adc
and
xor
negl
xor
jle
add
dec
cmp
push
or
loop
test
lahf
mov
enter
in
sub
lock
add
sti
out
lods
cmp
std
mov
xor
mov
and
inc
mov
dec
enter
pop
mov
add
pop
push
ljmp
and
repnz
imul
mov
dec
push
adc
xchg
mov
inc
mov
add
fwait
lahf
xchg
dec
pushf
mov
mov
scas
imul
cmp
insb
mov
dec
int3
mov
mov
imul
es
jge
and
shl
in
lcall
int3
loop
fstp
mov
mov
dec
enter
adc
idivb
sti
cmc
sbb
pop
adc
adc
mov
inc
lock
es
xchg
movsb
or
cmp
dec
into
ss
jbe
dec
and
ret
ds
dec
jbe
popf
repz
sub
push
out
mov
mov
aaa
mov
inc
sbb
mov
or
mov
xchg
add
lock
cld
movb
outsl
push
dec
test
dec
mov
cmp
pop
jo
addb
cmp
cltd
imul
mov
jbe
lret
push
movsb
mov
xor
or
fwait
call
sbb
mov
push
iret
xchg
push
ss
or
in
xor
mov
ljmp
rcll
add
stos
sub
test
inc
pop
stos
sbb
aad
ja
sti
dec
xchg
stos
out
xor
cld
xor
in
push
cltd
xor
or
stc
adc
into
lret
and
cmpsb
mov
push
repnz
sar
push
ss
mov
ret
adc
out
add
mov
mov
mov
test
pop
aas
mov
push
nop/reserved
dec
cmp
outsl
mov
cmc
aas
pop
scas
call
imul
mov
arpl
pushf
add
shlb
ljmp
nop
mov
inc
add
add
pop
sahf
dec
cld
mov
cwtl
inc
push
ljmp
push
push
scas
lret
ss
adc
div
int
xor
insl
fcompl
push
setp
shrb
mov
mov
sbb
addr16
xlat
adc
cwtl
jl
jmp
mov
add
cmp
cmp
je,pt
fistps
aam
hlt
in
inc
enter
ljmp
imul
outsl
pop
stc
roll
nop
push
lock
or
mov
in
cwtl
push
mov
xchg
sbb
or
mov
push
test
pop
sti
mov
jl
loope
mov
ss
stos
lods
enter
pop
or
out
shr
icebp
pop
stos
pop
pusha
cli
repnz
aam
cmpsl
loope
add
push
aam
mov
pop
mov
test
stos
mov
sub
gs
cmpsw
int
js
popa
stos
jb
ss
pop
inc
stos
ret
popf
adc
fstpt
fstpt
repnz
pop
xchg
mov
push
out
adc
lahf
es
mov
xor
mov
andb
dec
xchg
ds
fadds
aaa
bound
lcall
imul
insl
call
pop
push
push
jp
xchg
aaa
push
pop
mov
rclb
dec
pusha
xchg
mov
and
add
pop
jns
paddsb
imul
movsl
outsl
ficompl
sbb
xchg
bnd
sub
dec
sub
push
fwait
cld
inc
lods
dec
jg
sbb
and
aam
rcrb
dec
lret
ljmp
sbb
and
cmc
adc
in
cs
mov
les
xchg
pop
cwtl
sahf
nop
cld
push
cmp
fadd
push
inc
sub
lret
add
addr16
nop
call
cmpsl
cmp
mov
stos
add
lahf
inc
ja
movsl
cmp
lds
enter
test
mov
jnp
out
xor
sbb
insb
push
cld
push
scas
xor
nop
stc
and
in
stc
aam
adc
push
div
jae
lret
sbb
fbld
mov
push
jl
sbb
adc
mov
mov
out
movsl
xchg
addl
cmp
test
add
clc
adc
cs
mov
xchg
mov
pop
repz
insl
cmp
in
mov
pop
jae
sbb
sbb
or
addr16
jbe
aam
ret
add
mov
xchg
leave
mov
push
mov
insb
loopne
pushf
ljmp
das
stos
lds
shl
test
hlt
push
test
clc
repz
push
int
call
icebp
adc
adc
js
pusha
mov
arpl
jecxz
stos
xlat
xchg
push
push
pusha
in
and
inc
jmp
outsb
pop
inc
daa
sbb
pushl
inc
dec
mov
xchg
mov
mov
jne
mov
xchg
lods
pop
daa
sbb
out
and
out
push
dec
stc
add
mov
ss
cltd
ret
fbld
jne
adc
inc
popf
test
jb
pusha
adc
inc
adc
test
mov
repz
sub
xchg
sbb
loope
or
lods
jnp
and
addb
fcompl
cli
ss
imul
fildll
jo
jge
jmp
xchg
dec
and
mov
lret
add
cmp
pop
pop
push
imul
or
fstpt
push
fistpl
push
fiaddl
cltd
inc
push
and
add
push
mov
ljmp
xchg
adc
in
adc
add
repnz
cmp
and
and
jecxz
out
fs
call
fwait
push
ja
push
movb
adc
xor
xchg
data16
lock
out
pusha
je
sbb
xchg
jmp
push
push
mov
movsl
jp
dec
xchg
pop
loop
and
lret
lret
mov
adc
rcrl
aam
cwtl
clc
sbb
lret
enter
dec
adc
xchg
xchg
sub
mov
ljmp
adc
mov
pop
icebp
shll
daa
lods
movsl
orb
mov
xchg
mov
addr16
in
push
enter
and
jmp
or
jnp
xor
fwait
movups
cmpsb
ds
add
jp
cmpsl
call
loopne
and
mov
dec
testb
cmp
sub
mov
addl
push
cld
dec
dec
stos
push
stos
adc
mov
mov
jg
cwtl
in
cmc
aas
pop
scas
dec
mov
test
add
call
or
fs
lock
std
idivl
sahf
inc
mov
xorl
pop
sub
pushl
mov
xchg
ret
repnz
xchg
inc
xchg
in
out
pop
push
in
push
xor
sub
imul
cmp
arpl
sub
aas
ljmp
push
mov
loop
in
add
popa
aad
sub
add
push
push
pop
movsl
popa
fcoml
loope
add
ficoms
fs
leave
in
sbb
frstor
cmp
mov
je
int
pop
out
adc
mov
or
xor
push
ss
mov
mov
xor
popa
test
push
mov
mov
loopne
pop
mov
stc
out
test
add
mov
je
pop
mov
pop
std
dec
mov
shll
cmp
pop
aad
and
jbe
iret
inc
scas
icebp
ficoms
in
lods
je
jecxz
or
lock
scas
xchg
cmp
movsb
stc
into
enter
sbb
adc
sbb
imul
loop
aas
fstpl
and
add
and
and
aaa
stc
ret
sbbl
mov
add
mov
mov
out
hlt
push
inc
mov
sub
pop
lds
or
call
inc
movsl
mov
mov
mov
jge
inc
out
jns
adc
push
jge
pop
outsb
and
cmpsl
sub
repnz
lods
inc
and
mov
popa
jnp
xor
arpl
xchg
mov
mov
loopne
xor
jne
lea
pop
jns
or
adc
icebp
aam
clc
and
test
add
in
adc
ljmp
sub
dec
mov
or
jle
out
mov
nop
stc
adc
jae
lods
fldenv
xor
les
shrb
repnz
cli
lock
ss
fstpt
cmc
mov
lea
rcll
push
cmpsb
cmpsl
add
scas
push
cltd
or
jnp
mov
mov
sbb
fdivr
adc
and
je
jle
jne
mov
pop
aad
rclb
pop
jmp
into
outsl
mov
pop
mov
inc
cs
cs
sub
popa
fsubrs
ljmp
imul
scas
jmp
sbb
add
xor
xor
lret
mov
jl
cmc
out
fdivrl
shrb
lcall
arpl
inc
cwtl
ss
mov
jp
mov
mov
shlb
sbb
add
loop
scas
cwtl
jae
push
mov
movsb
and
push
or
icebp
lcall
out
popa
shl
push
nop
mov
enter
sbb
movsl
sbb
mov
sub
inc
mov
fstpl
loop
les
shl
jb
push
scas
fmul
dec
jae
cmp
or
lahf
paddsb
dec
data16
lret
hlt
aas
jbe
push
cli
jno
xchg
cld
xchg
js
cmp
clc
pop
fdivl
in
in
cmpsb
sbb
pushf
cmp
js
aam
cmp
fdivrs
or
sbb
clc
je
and
in
dec
pop
or
mov
mov
add
and
fcomip
fisttps
cmc
and
jl
add
aaa
xchg
stos
mov
cmp
rcll
sbb
iret
icebp
lea
fstl
pop
push
filds
ja
inc
mov
jbe
lret
rcr
and
jbe
popa
fwait
xchg
fcmovne
aas
jg
pop
xchg
mov
pop
pop
fildll
or
add
ficoml
push
inc
lods
ds
popf
rorb
rorb
jecxz
test
lahf
add
dec
loop
jmp
cld
das
idivb
imul
xor
jno
add
es
sub
inc
nop
mov
add
rep
cmp
imul
lods
dec
inc
test
ljmp
hlt
inc
sahf
mov
inc
cmp
gs
xchg
das
sarb
in
out
lock
daa
repnz
rcll
insl
jmp
xchg
push
lea
ficomps
mov
imul
adc
push
sbb
lret
cs
inc
and
data16
mov
cmpsl
mov
jg
movsb
sti
es
add
aas
gs
inc
cmpl
lea
lret
ds
sti
sbb
call
ss
xchg
xor
jnp
jmp
in
daa
testl
pop
xchg
inc
ret
dec
popa
call
mov
popf
adc
jb
nop
sbb
push
push
jp
cmp
jle
lds
pop
pop
sub
shlb
lcall
sbb
in
xor
leave
aas
mov
in
repnz
call
mov
pop
mov
dec
pusha
push
pop
rorl
mov
enter
enter
popf
test
cli
arpl
sub
repz
or
test
push
jo
mov
mov
insl
jns
mov
dec
pusha
test
jp
mov
cmc
add
xchg
inc
mov
icebp
sbb
mov
cld
fsubrs
push
cmp
push
sub
lods
lcall
push
fists
gs
cmpsl
out
xor
jae
js
loopne
fneni(8087
mov
push
mov
xchg
dec
xchg
mov
addr16
mov
js
data16
adc
in
cmp
repz
sub
pop
pop
fsts
test
lds
or
mov
inc
sahf
push
jp
dec
xchg
dec
xor
out
shlb
xchg
or
pop
sub
aas
sub
jnp
stos
das
jge
movsl
addr16
inc
add
push
pop
iret
mov
dec
cmp
out
int
sub
adc
and
cmp
les
loope
or
cmp
hlt
les
cwtl
mov
mov
into
in
shlb
push
jl
movsl
pop
ficoms
repnz
pop
inc
inc
scas
xchg
jge
inc
fwait
push
push
adc
mov
dec
inc
sbb
jae
jno
mov
cmpsl
ret
push
push
imul
cld
sbb
sub
jecxz
sbb
movsb
fwait
ret
adc
sub
icebp
dec
lcall
add
es
cmp
int3
sbb
stos
jecxz
mov
inc
and
jbe
cmp
xor
jmp
mov
data16
and
imul
add
sub
enter
cli
lods
jp
int
mov
adc
push
in
adc
stos
cmp
int
jae
inc
out
cwtl
js
test
cmp
in
dec
push
push
jne
ror
jmp
sahf
fs
int3
in
test
mov
xchg
cmpsl
dec
mov
mov
cmp
xor
add
xor
shlb
loope
repnz
sub
push
test
mov
push
aas
insl
jmp
gs
push
inc
inc
or
push
sub
lahf
mov
and
mov
test
add
mov
pop
movsl
shrl
fsts
cmp
sbb
jns
pusha
cli
and
push
mov
pop
add
roll
sub
mov
lret
mov
call
rorb
fsubrl
outsl
mov
cmp
pop
leave
int3
inc
repnz
xlat
cli
out
sub
mov
cmpsl
sahf
xchg
xchg
leave
aas
sbb
xor
aas
outsl
cli
decl
ja
outsl
cltd
std
dec
jge
sar
lret
cwtl
add
or
jg
icebp
add
scas
and
push
loopne
cmp
lods
ss
add
aad
in
jae
cmp
sub
mov
fnstsw
or
mov
push
les
mov
int3
movsl
rcll
xor
xchg
vmovaps
adc
sbb
aam
xchg
xchg
push
arpl
mov
dec
cmpsb
inc
xchg
cmc
and
push
pop
filds
jmp
imul
mov
cli
les
jno
inc
dec
test
les
inc
or
test
sbb
xchg
mov
pop
outsb
cmp
add
lret
or
cwtl
sarl
sbb
mov
adc
push
push
xchg
lea
pop
inc
icebp
jae
xchg
mov
jb
inc
mov
sbb
in
cmp
mov
xor
inc
mov
dec
inc
sbb
pop
add
sub
mov
inc
dec
cmpsb
mov
ss
dec
out
sub
cmp
mov
scas
mov
cltd
add
test
pop
lea
dec
and
in
sar
clc
cmpsb
mov
lahf
jmp
adc
push
pop
cld
inc
scas
inc
pop
jns
lods
xchg
dec
and
push
pop
imul
daa
and
rolb
cmp
mov
sub
push
cmpsl
insl
inc
sbb
adc
push
adc
scas
jecxz
das
ljmp
fistl
push
test
inc
pop
mov
xor
cmpsl
add
xor
or
sub
sbbb
lock
stc
sti
cs
mov
mov
mov
sarb
inc
jmp
xlat
lock
popf
test
adc
andl
mov
pop
out
mov
outsb
pop
stos
jae
and
inc
mov
scas
les
testb
hlt
push
popf
xor
cld
jg
and
test
icebp
ss
call
or
mov
movsl
add
add
dec
into
aam
mov
mov
add
lret
insl
xchg
cs
adc
cwtl
dec
dec
adc
inc
pop
into
jge
jecxz
jno
adc
fs
popl
ds
adc
jnp
sarl
cli
insl
xchg
inc
adc
add
cmp
dec
nop
mov
push
int3
mov
out
dec
mov
sub
jns
sub
fwait
lods
push
movsl
lret
dec
mov
push
mov
lahf
sub
adcl
out
mov
test
imul
xor
cmc
lods
lcall
adc
in
loopne
je
out
sub
lea
ja
inc
sbb
jbe
adc
sub
cmp
sbb
test
mov
sahf
sub
cmp
addb
sub
daa
movsl
imull
loop
xchg
sbb
fnsave
mov
int
inc
inc
cmp
mov
rcrb
inc
push
adc
lcall
jmp
popf
addr16
sbb
dec
out
adc
or
dec
mov
cwtl
imul
mull
push
add
cmp
pop
pusha
xchg
or
xchg
rcrl
cmp
push
lret
shrb
mov
lods
sub
shlb
pop
std
lea
adcl
in
hlt
in
cmp
repz
orb
push
mov
rorb
pop
xchg
bound
test
es
leave
dec
dec
loop
fstps
pop
arpl
aam
dec
cs
test
mov
out
jbe
test
enter
fbld
mov
pop
mov
repnz
fiaddl
push
aas
and
xor
sarl
stc
xchg
adc
mov
xlat
mov
scas
pop
xchg
in
cmp
loope
insl
xchg
stos
jns
lds
subb
and
fadds
andl
push
inc
mov
test
dec
sahf
inc
or
xor
outsl
vpsrlw
lods
inc
cltd
data16
jg
sbb
adc
or
xor
mov
and
inc
xchg
rcr
movb
shrl
add
loop
dec
mov
jnp
inc
xor
jo
push
push
lahf
adc
lret
outsl
ret
ja,pt
mov
stos
xor
mov
cld
xchg
sarb
lds
mov
subb
out
jl
lods
sbb
icebp
cmp
std
add
inc
mov
inc
xchg
in
fidivs
jge
and
ret
imul
sbb
jns
pop
ljmp
test
hlt
bound
insb
sub
pop
sub
or
or
cmpsb
push
out
test
idivb
int3
sbbb
jnp
je
mov
inc
jl
xchg
cli
push
mov
add
pushf
lock
mov
shll
xor
add
or
loop
fdivs
xor
lock
mov
enter
mov
js
pop
adc
jg
mov
cwtl
lret
aam
xchg
xor
pop
cmp
xchg
xchg
cmp
loop
jmp
pushf
stc
repnz
dec
add
mul
mov
clc
and
add
ljmp
pop
mov
add
lds
pop
mov
mov
or
rcll
adc
mov
jecxz
adc
loopne
popa
jnp
adc
mov
or
sub
dec
pushf
mov
leave
cmp
or
test
sub
loopne
call
mov
je
xlat
insb
pop
jnp
cld
jo
dec
mov
pop
fsts
cmp
loope
jbe
repnz
fsub
cld
gs
and
and
int3
mov
push
and
xor
std
and
mov
and
fs
sahf
or
pop
cmp
scas
cmp
in
jns
jle
movsb
cmp
leave
inc
fldt
pop
add
ds
cmpsb
cmp
mov
or
xchg
jg
lcall
jp
lods
push
add
imul
cmp
and
push
and
ret
cli
cmp
xor
mov
mov
pop
stc
dec
mov
push
pop
adc
je
pusha
out
sub
sbb
daa
mov
daa
mov
push
mov
popf
push
mov
xor
shlb
cmc
ffreep
imul
xor
xchg
movsb
or
inc
incb
mov
pop
jecxz
mov
das
mov
icebp
in
dec
xchg
sub
cmpsb
add
mov
shll
mov
outsl
dec
jecxz
push
popa
insl
js
andl
sub
pop
push
push
xchg
add
inc
mulps
clc
fildll
sub
out
sub
fidivl
jnp
daa
push
cwtl
mov
sbb
inc
lods
in
push
adc
stos
loopne
or
loope
mov
movsb
mov
xchg
fimull
adc
inc
nop
movsb
sbb
push
jbe
and
mov
jecxz
inc
mov
lcall
test
popa
xchg
rol
scas
cmpsl
pop
cmp
lahf
fdiv
adc
inc
inc
pop
out
sub
orl
lds
sub
inc
loopne
mov
push
lds
mov
or
test
mov
insb
jno
cmp
enter
scas
or
xchg
shl
mov
inc
sahf
xor
or
jo
jmp
xchg
lcall
movsl
jo
std
insb
ficoml
jle
scas
add
mov
scas
jnp
shlb
xabort
xchg
cmpsl
adc
cmp
out
add
lea
mov
ss
outsb
or
or
arpl
lea
mov
sbb
cmpsl
push
dec
or
in
add
push
fs
sbb
test
sbb
inc
mov
cmpsl
xchg
push
mov
cmpsl
shrb
cmp
jae
sbbl
mov
mov
mov
xchg
sub
and
jmp
movsl
mov
push
push
sub
es
inc
add
subb
and
mov
mov
mov
sub
push
pop
cmpsb
int3
hlt
enter
je
jae
xchg
or
mov
call
dec
inc
add
push
imul
jg
fisttpll
adc
add
add
sahf
arpl
lds
sbb
add
jbe
cmp
outsb
xchg
fsubr
fiaddl
fcmove
imul
shlb
sar
jb
adc
mov
outsl
enter
mov
push
shrl
inc
ret
or
dec
cmp
push
ret
cmp
rclb
xor
or
cld
or
mov
xchg
shr
xchg
outsb
aam
sti
pop
xchg
add
mov
pop
push
dec
es
seta
push
xchg
bound
in
les
pop
addr16
jle
int
adc
mov
jb
cmp
insl
mov
lods
add
shlb
stos
adc
pop
and
rcl
cmp
rcll
lods
lds
sub
sub
mov
out
notl
push
pop
xor
cli
hlt
bound
roll
gs
shll
hlt
pop
sbb
imul
xchg
lea
sti
or
jnp
adc
mov
pusha
push
divb
push
fdivs
xchg
add
inc
mov
sub
sub
movsl
push
adc
leave
cltd
lahf
es
pushl
mov
insl
mov
xchg
fsubl
inc
mov
dec
cmp
dec
test
aaa
les
or
inc
mov
mov
es
cmp
lods
xchg
mov
arpl
xor
pop
mov
mov
sahf
test
int3
in
mov
jmp
aas
lret
and
inc
push
int3
inc
scas
mov
ja
jns
shlb
xor
sbb
xchg
push
data16
xor
aas
sub
int
add
xchg
in
sbb
pusha
cs
dec
shlb
test
jbe
push
stc
mov
shr
mov
lahf
dec
mov
out
jecxz
jle
jns
pop
xchg
pop
loopne
inc
mov
add
test
lds
inc
inc
aad
lds
add
or
add
movsb
push
sub
adc
cld
dec
fists
sbb
xchg
nop
cmp
mov
xor
and
lea
test
mov
rcr
loope
lret
mov
mov
add
xchg
or
xchg
cmp
mov
js
mov
call
cmpsl
mov
aaa
fcoml
stos
insl
movsl
popf
into
and
test
mov
stos
adc
cmp
adc
mov
xchg
data16
mov
jo
and
inc
mov
xchg
lds
mov
test
in
add
rep
lods
sub
pop
cmp
cli
push
cmp
leave
mov
cmp
push
addb
xor
cwtl
aam
push
outsb
hlt
jmp
loope
inc
jp
testb
push
out
mov
nop
xchg
jp
in
jne
mov
stc
aad
add
adcl
jle
pushf
arpl
movsb
das
or
mov
pusha
fwait
cltd
adc
imul
pop
add
imul
enter
adc
test
data16
js
dec
loop
mov
push
stos
ret
pop
jb
jp
inc
in
test
mov
lcall
scas
pop
repz
inc
mov
sbb
push
daa
in
daa
rcrb
mov
std
mov
clc
cmpsl
adcb
lea
xchg
adc
xor
push
inc
test
and
fists
push
mov
sbb
mov
dec
test
out
push
sbb
pop
call
clc
out
movsb
adc
push
es
stc
ss
out
mov
loop
repnz
sbb
in
cmp
xchg
and
inc
fbstp
add
fldt
jno
jns
fnstcw
jo
add
adc
outsl
sub
in
dec
mov
adc
jae
pop
in
or
and
xlat
fnstenv
sar
xor
daa
subl
outsb
std
stos
mov
data16
es
dec
loop
dec
sbb
push
lods
cs
jmp
scas
lcall
and
les
pop
test
mov
int3
push
je
ror
inc
pop
subb
xor
jb
clc
frstor
jmp
ja
pusha
xchg
add
mov
xchg
dec
mov
add
lock
xchg
in
sbb
dec
cmpsb
inc
dec
cmpsb
fdivrl
push
jne
cwtl
mov
stos
xor
test
jle
mov
test
imul
pop
aam
inc
aaa
aas
cltd
mov
dec
inc
lcall
in
scas
push
sahf
and
ja
xor
pop
mov
repz
repnz
iret
aas
insb
push
and
jno
jb
pop
ja
sbb
cmpl
rclb
mov
sub
int3
pop
mov
rolb
subb
cli
dec
pop
pop
jae
push
pop
std
adc
jl
and
sub
loop
and
out
jnp
sub
mov
push
xchg
push
inc
fistpl
sbb
hlt
gs
jp
jne
outsl
mov
mov
pop
xor
ja
scas
xor
fmull
gs
cmpsl
mov
fwait
and
loope
mov
scas
and
out
test
xor
fwait
aas
aas
imul
cs
adc
xchg
clc
shl
mulb
push
enter
inc
call
cmc
inc
aad
xor
xor
fisubl
pop
fisttps
mov
and
mov
sarb
dec
loop
xor
push
sbb
aas
mov
or
iret
push
dec
adc
out
sbbb
outsl
mov
dec
cmp
xor
push
mov
mov
cmpsb
jno
sub
xor
jnp
shlb
add
and
rcrb
std
cmp
pop
push
lret
fs
xlat
add
aaa
pop
lcall
es
stc
xchg
ljmp
jae
insl
xchg
in
push
mov
int3
push
mov
add
jmp
insl
stos
add
xlat
aas
fidivs
aam
ss
pop
mov
enter
push
cld
dec
pop
mov
lret
push
jb
ds
push
and
mov
or
xor
add
mov
jge
cmp
push
adc
pusha
mov
aad
aad
aad
push
bound
dec
jp
xchg
mov
pushf
mov
xchg
and
cmp
mov
test
in
xor
push
aas
lcall
cmp
and
mov
incl
mov
push
stos
pop
jmp
sbb
aaa
aad
cmp
adc
cmpb
insb
jl
pushf
hlt
bnd
out
ljmp
cmp
pop
mov
lahf
jb
mov
push
push
sbb
xor
xlat
das
sbb
push
add
mov
mov
out
ss
movsb
movsl
sub
es
pop
xchg
jmp
bound
cmp
pop
cmc
into
imul
out
fs
jmp
mov
push
mov
pop
je
inc
mov
inc
shll
andl
xchg
adc
addr16
pop
jnp
sbb
dec
adc
mov
and
insl
jb
push
negb
xor
cmp
outsb
cmp
mov
pop
cld
pop
ljmp
fmuls
xchg
xor
sub
sub
outsb
sbbb
scas
imul
inc
rcrl
loop
mov
xor
mov
xchg
lea
fidivs
mov
xor
jno
mov
mov
mov
jge
xchg
push
pop
popf
jge
push
lcall
xor
jl
sbb
cld
and
mov
jbe
sub
repz
sbb
out
add
enter
jmp
imulb
inc
mov
into
loop
enter
jle
arpl
jg
dec
cmp
and
fistpll
fcom
idivl
gs
xchg
xor
mov
aam
mov
inc
and
xor
frstor
pop
dec
or
fisubl
mov
and
push
fwait
int3
mov
mov
add
or
jno
xchg
test
sub
je
push
movsb
les
into
cmp
adc
push
sahf
and
xchg
fiaddl
sub
jns
and
stc
adcl
mov
cmp
fiaddl
outsl
lds
jle
out
xor
xor
push
fistl
mov
mov
pop
mov
jle
popf
mov
push
or
pop
cmpsb
xchg
aas
adcl
andl
cmp
sub
mov
dec
mov
shlb
fs
inc
repnz
loop
pop
jns
inc
pop
jg
pop
dec
xchg
push
mov
ljmp
into
aam
shll
sub
repnz
lods
je
cmp
or
fdivl
cltd
and
sub
lret
decl
mov
test
pusha
push
cmpsl
mov
dec
mov
sbb
xor
inc
cmp
lods
cmp
data16
cmpsl
xchg
xchg
adc
add
lods
shll
or
adc
jnp
fwait
hlt
dec
or
cmp
ret
std
test
sahf
xor
and
xor
xlat
fstpt
dec
mov
out
ret
xor
push
notb
mov
mov
adc
pop
filds
xor
mov
sub
mov
xchg
ss
sar
cli
sub
data16
mov
mov
cmp
pushf
lods
add
repnz
xor
lcall
mov
jne
sub
pop
daa
adc
mov
push
sub
mov
or
rorb
popf
mov
adc
or
pop
mov
mov
ficoml
jle
fld
pushl
out
xchg
fldenv
dec
inc
ret
fidivrs
fsubl
push
jg
push
nop
push
lahf
mov
inc
iret
dec
movsb
vmwrite
sbb
push
lods
mov
pop
iret
mov
sbb
aas
movsl
lods
pop
and
mov
dec
lret
pusha
rorb
cmp
xor
enter
in
xchg
pop
mov
push
add
add
xchg
or
gs
es
movsl
sbb
cmpsl
mov
ret
cwtl
fists
mov
xchg
xor
call
inc
inc
sub
mov
cli
dec
xchg
test
outsb
inc
loope
or
mov
mov
sbb
inc
lcall
cmp
int3
inc
lds
inc
jecxz
mov
xorb
and
aaa
jl
mov
dec
push
inc
pushf
out
aad
add
das
mov
mov
cmc
push
clc
sti
dec
repz
ja
inc
cmpb
mov
cmp
out
sbb
fnstcw
daa
mov
jae
sbb
leave
out
or
pop
push
jmp
inc
out
mov
mov
inc
cltd
cmp
scas
xchg
and
arpl
fsubs
xchg
inc
push
gs
aaa
scas
repnz
pop
inc
cmp
mov
add
enter
jecxz
adc
or
ret
aam
fwait
pop
pop
mov
sar
enter
lods
fisubl
push
push
and
fdivrs
fimull
nop
add
cmp
ja
in
lret
insl
jnp
xchg
fisttpll
test
test
pop
lcall
icebp
pop
pop
ror
jbe
adc
aam
movsl
stos
push
cmp
cmp
cwtl
push
cli
lods
leave
sti
dec
adc
aam
push
aad
xor
ja
mov
sbb
inc
in
outsl
iret
cwtl
sub
or
out
aaa
cld
jne
push
push
out
cmpsl
and
push
sbb
sarb
lea
dec
jg
or
stc
cmp
add
lret
sbb
mov
int
xchg
add
clc
inc
sti
xchg
xchg
js
xor
xor
pop
jmp
dec
mov
shr
ret
mov
and
xchg
mov
pop
aad
stos
lret
test
rcll
mov
rcl
inc
sahf
mov
xchg
inc
std
lcall
shrl
imul
dec
je
or
sbb
int3
lods
sub
xor
lahf
dec
inc
or
fsubrs
mov
adc
insb
xor
hlt
inc
lahf
sti
fwait
in
leave
and
xor
sbb
std
or
pop
cmp
fldt
inc
mov
cld
lea
sub
pusha
js
adc
cmpsb
sub
ljmp
push
lahf
push
je
cmpl
ret
ss
xchg
nop
pushl
inc
repnz
leave
add
inc
jmp
loope
and
or
add
mov
push
cwtl
movsl
push
addr16
jbe
push
push
xchg
mov
insl
inc
mov
shll
addb
xchg
rolb
push
dec
in
xor
icebp
in
pushl
push
xchg
pop
outsb
mov
cld
push
mov
scas
mov
lods
push
outsb
inc
jg
cmp
lods
pop
adc
repz
pop
or
dec
xor
ljmp
jo
add
jp
xchg
cld
dec
add
push
roll
cltd
mov
mov
imul
push
fadd
adc
jmp
mov
dec
out
out
or
mov
les
and
in
aas
leave
and
ljmp
and
call
pop
int3
pop
cld
sbb
in
ficomps
cld
add
jp
sbb
lods
push
sahf
mov
ljmp
sub
scas
dec
mov
lcall
xor
and
mov
cwtl
fsts
je
jl
push
jo
fwait
js
jbe
shl
cmp
and
fs
jbe
cmpsl
add
pop
test
call
dec
sub
lods
mov
jp
pop
or
pop
push
pop
stos
cmp
cmp
in
ret
mov
push
leave
loope
push
xchg
and
fistl
sub
mov
sbb
lock
pop
dec
add
push
jmp
and
xchg
in
mov
add
xchg
xchg
inc
std
test
dec
dec
loopne
js
pop
hlt
and
scas
jl
xlat
pop
test
insb
cmp
insl
ss
fstps
lods
aaa
sbb
push
xchg
xorl
scas
aam
mov
push
add
jns
shlb
xor
cmp
ds
scas
negb
fcoms
scas
sub
into
pushf
and
ffree
pop
fisubrs
cmp
inc
mov
jp
cmp
sahf
and
cmpsb
cwtl
mov
mov
xor
jle
dec
lock
jp
out
push
into
xchg
movsl
sahf
pushf
adc
shll
and
cld
je
dec
hlt
push
xchg
push
out
lock
push
fnsave
mov
repz
jb
into
xchg
add
mov
xchg
shrb
inc
jno
fdivl
ds
xor
cmp
push
push
mov
inc
cmp
sub
add
iret
repz
cld
scas
dec
add
mov
sbb
jno
pop
push
lds
and
out
in
cs
cltd
outsl
jb
sbb
pop
add
int
fsubr
pop
add
mov
and
cli
fwait
mov
cld
out
jp
fidivs
xchg
dec
push
cmp
inc
lcall
xor
push
sti
pop
dec
xchg
push
ss
or
movsl
xor
cmp
stc
std
cmp
jne
daa
jmp
bound
push
mov
push
lret
push
mov
je
inc
lock
xchg
or
lds
stos
jmp
mov
push
cli
dec
xor
ret
adc
stos
loopne
aas
pop
ret
incl
adc
inc
fwait
push
xor
fwait
xor
stos
push
out
cmpsb
xchg
icebp
iret
cmpsb
aaa
sub
add
jae
inc
push
lds
ret
fnstcw
cmc
mov
xorl
lcall
outsl
das
xor
jmp
lcall
jb
int
rol
sbb
sahf
sarb
lds
pushl
cmp
xchg
adc
ret
mov
imull
jno,pt
push
cmpsl
push
adc
add
and
arpl
fcmovbe
popa
fcomp
inc
fs
cmp
jo
and
cwtl
push
in
xchg
or
lahf
out
inc
and
out
sub
xchg
push
sbb
push
mov
sbb
outsb
mov
in
adc
call
add
jbe
mov
ret
testl
xchg
add
daa
jmp
roll
mov
pusha
data16
xor
adc
xor
lcall
xor
sub
lock
xchg
sbb
mov
jp
ljmp
mov
mov
mov
mov
aam
sahf
mov
sarb
mov
fldcw
push
jp
mov
push
inc
inc
cwtl
out
push
test
js
les
idivb
std
cmpsb
es
inc
incl
mov
das
imul
mov
cmp
mov
xor
add
scas
fwait
inc
bound
fbld
push
cli
out
mov
dec
push
in
js
inc
dec
jl
push
arpl
ds
xor
or
fisubl
and
mov
cld
inc
je
pop
daa
fwait
ljmp
stos
sbb
sti
mov
and
cmp
pushl
dec
jmp
test
cmc
lea
mov
mov
in
sbb
imul
jb
adc
dec
insb
fwait
xor
adc
push
ret
fstl
and
loop
and
je
imul
scas
jns
fwait
into
arpl
dec
mov
aad
nop
call
jecxz
imul
in
sub
aas
ljmp
jge
hlt
push
mov
aaa
shr
lock
repnz
add
lods
in
xchg
xor
cld
adc
sti
lret
xlat
sub
push
rcl
fucomi
dec
push
lret
int
faddp
xchg
loop
adc
pop
jnp
sbb
inc
xor
sbb
cltd
jmp
pop
nop
movsl
mov
dec
push
xor
lock
mov
inc
cmp
push
pop
popa
cmc
fsub
cld
jle
add
pop
faddl
adc
jmp
mov
cld
pop
mov
jle
lahf
push
dec
clc
xor
out
mov
sub
pop
pushl
xor
mov
jbe
in
add
cmp
inc
imul
sbb
sti
xor
xchg
mov
mov
lea
dec
mov
inc
pop
mov
pop
pop
sub
das
xor
jmp
jae
pop
sbb
mov
xchg
jns
xor
sbb
mov
cmp
add
xchg
ljmp
lahf
cmp
xchg
mov
pop
dec
movsl
xlat
pop
rcr
jecxz
or
and
roll
xchg
addr16
dec
ror
test
cmp
sub
in
or
xchg
push
xchg
xor
mov
sbb
stos
mov
jl
arpl
jbe
sub
xchg
inc
div
and
jno
pop
std
pop
add
mov
mov
pushf
mov
xor
mov
movsb
stos
outsb
lahf
or
dec
jne
mov
xchg
xor
arpl
data16
lds
sub
aaa
jo
dec
xchg
sub
fisttps
aas
stc
jo
inc
mov
sbb
mulb
sahf
imul
or
insb
js
jno
sar
sbb
rcr
in
push
add
mov
ret
ret
xchg
cmp
mov
or
addr16
cmp
adc
lcall
lods
insb
mov
mov
ret
pop
cld
dec
lds
mov
aad
shrb
jmp
push
idivb
jge
xchg
mov
adc
fwait
xor
enter
mov
jae
adc
mov
cld
cmp
inc
shlb
add
loop
imul
aas
iret
mov
mov
and
ret
mov
sbb
lods
sub
out
inc
pop
mov
cmp
adc
jo
idivl
mov
lcall
cmp
nop
pop
popf
pop
movsb
lods
or
xor
inc
movsb
rolb
mov
ffreep
ret
push
push
sbb
shlb
mov
mov
jl
lods
int3
addr16
divl
in
inc
out
insb
mov
data16
and
in
xchg
fcmovne
popa
clc
sti
scas
mov
and
int
sub
cs
push
xor
in
subl
xchg
xchg
sub
enter
push
jbe
cmc
mov
fwait
data16
inc
ljmp
adc
pop
xor
or
sbb
mov
and
sti
jo
fildll
jo
sub
mov
scas
jecxz
dec
outsb
test
add
or
sbb
jne
or
pop
cltd
pop
jecxz
gs
das
test
enter
hlt
push
test
insl
sahf
jmp
sbb
add
aad
cmp
adc
xchg
je
xchg
cmp
and
mov
out
inc
mov
out
movsl
dec
fldln2
iret
xchg
out
xlat
iret
inc
call
addl
xor
cmp
or
aaa
pop
mov
cmc
into
je
mov
aas
jl
insb
cmp
push
lahf
pop
repz
add
pop
jo
sbb
xchg
push
mov
or
aas
mov
ficomps
sbb
lret
xchg
aam
pop
mov
test
movsl
xchg
jmp
repnz
dec
insb
mov
push
sti
jo
ss
xor
mov
mov
inc
nop
adc
mov
shll
dec
adc
or
mov
jns
mov
and
mov
jo
mov
lds
mov
idiv
mov
pushl
xor
adc
imul
sti
cmp
sbb
ret
popf
insl
stos
xchg
jmp
pop
sahf
scas
aam
xlat
xor
cmpsl
xor
xchg
mov
mov
dec
out
stos
mov
and
jle
pop
movsb
xor
jg
xchg
repz
outsb
fbstp
and
daa
mov
fcoms
cmp
push
push
aad
daa
ljmp
cmpsl
mov
je
push
cmp
jbe
xchg
outsb
stos
jmp
jecxz
lret
xor
fcoms
push
dec
cmpsb
rcll
mov
push
outsb
cmp
mov
test
popf
std
dec
imul
cmp
sbbb
testl
movsb
test
test
mov
pop
mov
out
aaa
jge
arpl
fstpt
inc
dec
mov
sub
enter
xchg
addr16
ds
sbb
pushf
rolb
fs
out
xor
imul
ds
or
imul
dec
int
inc
add
dec
mov
ljmp
fldpi
cltd
insl
jge
cld
pop
mov
mov
sbb
and
imul
or
sbb
lahf
push
inc
jl
jne
push
dec
mov
push
lock
mov
cmpsl
push
test
leave
mov
add
lret
dec
mov
das
dec
in
mov
inc
xorl
dec
mov
in
aad
pop
mov
sti
mov
dec
int3
or
push
or
aad
pop
cmovo
cmpsl
pushl
xchg
ja
dec
dec
sahf
hlt
rcr
fiaddl
or
xlat
dec
ret
cli
ss
or
aam
sbb
xchg
hlt
fdivrl
push
dec
movsb
fnstsw
sub
add
xor
xchg
jp
pop
push
outsw
dec
fnsave
out
push
data16
pushf
pop
lret
mov
out
ja
mov
sti
fldcw
sub
jns
fadds
hlt
mov
iret
leave
mov
cmpsb
sbb
dec
sti
cmpsb
inc
mov
test
fidivs
xor
push
ror
scas
subl
stos
in
sbb
bound
bnd
mov
scas
inc
mov
add
pop
mov
jnp
arpl
inc
xchg
aas
pop
inc
push
cmp
icebp
mov
sbb
mov
or
sbb
ficoms
out
lock
xchg
and
xor
sub
add
sahf
cmp
icebp
push
ret
mov
and
xchg
pop
mov
jbe
in
pop
cmpsb
decl
or
xor
pop
nop
cmp
mov
add
mov
push
mov
wbinvd
scas
cmc
mov
enter
arpl
sub
cmc
push
adc
mov
sub
out
fbld
cwtl
sub
sbbl
imul
lahf
pop
aaa
sub
jp,pn
or
pop
adc
fisubs
sub
lock
in
ss
movsb
adcb
and
loope
cmp
jne
adc
adc
xchg
fsubp
and
xchg
aad
mov
scas
or
mov
mov
jbe
sub
mov
or
inc
push
push
hlt
push
imul
cmp
aaa
outsl
add
sbb
out
into
sbb
xor
sahf
mov
insl
add
aaa
mov
inc
sbb
cld
pop
xchg
stos
jl
sub
inc
mov
sbb
std
xor
cmp
adc
in
stc
shl
mov
jno
push
lock
out
je
sbb
adc
mov
add
pop
fmul
jns
push
fcmovnu
adc
mov
sbb
aas
hlt
dec
lret
xor
sbb
icebp
lret
sub
sbb
in
jmp
cmp
mov
add
je
ror
cmp
loopne
sbbl
push
cwtl
subb
ja
fcmovbe
dec
mov
mull
add
xchg
lahf
and
int3
dec
int
rol
je
xchg
push
sti
pop
leave
std
dec
and
xlat
xor
or
mov
aaa
or
inc
mov
or
push
pop
imul
mov
cmp
cli
sbb
mov
out
add
int
dec
out
repnz
push
pop
lret
rcll
dec
rcr
or
je
ret
psubw
icebp
cltd
ret
int3
dec
push
int3
int3
adc
iret
outsl
xchg
insb
cmc
dec
adc
cmp
jmp
jge
out
pop
sbb
or
imul
repnz
sbb
insb
inc
and
int
fstpt
jno
cmc
sub
ss
jo
and
add
mov
push
cmp
xchg
ljmp
int3
pop
stos
mov
jno
int
xchg
cld
pop
pop
aad
aam
notl
cmp
cltd
mov
les
pop
aad
jecxz
les
lret
and
add
and
shll
xchg
mov
subb
dec
push
mov
out
das
mov
cmp
setp
sti
gs
or
sahf
jne
mov
addb
aaa
push
xorl
mov
ret
test
xchg
mov
push
pop
or
test
and
test
cmp
fidivrl
mov
jno
inc
sahf
and
es
in
or
shlb
mov
loopne
mov
pop
dec
push
mov
repz
ret
in
cmp
fdivr
rolb
mov
mov
add
testl
out
lods
push
and
out
ja
xchg
dec
iret
stos
rcr
xchg
arpl
mov
pushf
xor
in
sub
int3
ficoms
and
fwait
cltd
mov
adc
mov
arpl
shll
movsb
jns
inc
inc
lock
mov
cmp
lret
mov
mov
ret
ljmp
lahf
mov
lcall
lock
idiv
out
imul
ret
and
scas
out
sub
push
fldl
mov
pop
mov
es
cltd
sub
dec
jmp
inc
mov
sbb
scas
cld
cmp
push
std
xorb
mov
ds
dec
stos
jp
inc
or
inc
adc
shrl
xorl
and
inc
in
and
push
pop
xor
aas
cmp
out
mov
adc
enter
mov
jge
data16
sbb
sbb
popa
mov
in
jae
movsb
cmp
or
jo
cmpsb
popa
sbb
sub
out
cmp
lods
lock
sub
fdiv
jle
std
inc
pushf
gs
sti
test
mov
mov
mov
mov
ja
xchg
jmp
mov
mov
push
imulb
inc
fidivl
rcrb
pop
xchg
sub
out
and
lcall
sub
into
sub
leave
push
push
outsl
mov
je
jl
cwtl
jo
stos
sbb
ficompl
mov
in
adc
out
in
aam
mov
out
daa
pop
cwtl
icebp
int
mov
fisubrl
sarl
pusha
mov
test
push
aas
jmp
inc
sahf
mov
mov
mov
jp
dec
pop
pop
pushl
xchg
xor
loopne
and
out
sub
and
out
mov
nop
xchg
jbe
push
and
or
arpl
adc
xchg
ret
outsb
cmp
mov
stos
mov
dec
cmp
rclb
out
mov
push
jmp
jne
mov
jno
mov
decl
testl
mov
mov
stos
outsb
jo
int
out
stos
subl
scas
push
sub
pop
roll
mov
mov
insl
add
mov
jle
ja
mov
test
testl
mov
movsl
fisubrs
xchg
test
bound
sbb
adc
fs
mov
lret
push
pusha
lcall
int
fstpl
arpl
mov
lods
mov
scas
cs
jne
mov
adc
iret
and
test
inc
rcrl
xor
adc
xor
addr16
push
dec
pop
add
dec
ret
sub
movsl
add
jae
fdivrs
insl
insb
ficoml
int
lods
imul
rcrl
fsubrp
sbb
xchg
jbe
je
es
xlat
and
fwait
in
sub
scas
xchg
and
sarl
add
xchg
xchg
mov
movsb
pop
pop
cltd
in
jl
cwtl
or
xor
add
mov
pop
mov
lcall
push
ljmp
sti
jle
sti
adc
test
mov
loopne
jnp
pop
jbe
mov
or
push
dec
push
and
jns
loope
inc
mov
mov
cmp
add
adc
movsl
out
mov
loope
or
cmp
mov
add
enter
into
cmpb
jge
xchg
inc
nop
inc
pop
cltd
push
xchg
push
sarl
das
mov
loopne
std
xor
cs
fs
ljmp
pushf
push
jle
dec
mov
cs
aad
inc
stos
xor
inc
sbb
je
pop
add
mov
xchg
clc
cmc
ret
push
fsubrp
xchg
sub
jns
push
test
xorl
and
jno
rol
popa
roll
lcall
and
sbb
bound
pop
pop
push
push
mov
jle
mov
insb
popa
cmc
popf
jo
add
es
push
cmpsb
xchg
xchg
sbb
sbb
repnz
jecxz
add
pop
and
ret
aaa
add
pop
mov
aam
mull
inc
testb
jno
ja
mov
stos
adc
scas
clc
pop
jle
or
psubusb
pusha
insb
sbb
pushf
dec
fcmovb
or
fisttps
into
in
icebp
inc
mov
into
dec
movsb
aad
mov
cmpsl
xlat
mov
xor
push
xchg
in
add
shrb
pop
stos
mov
sub
jae
jmp
sbb
sbbb
leave
adc
mov
jmp
dec
in
sar
mov
jg
stos
rolb
mov
or
xor
repz
stos
push
jbe
leave
insl
push
and
in
mov
sub
mov
mov
in
int3
or
mov
pusha
and
jae
sbbl
dec
dec
push
out
outsb
push
and
push
lods
les
lock
in
test
lods
int3
insl
push
cmp
icebp
cmp
jns
adc
enter
aad
add
xor
sbb
push
pop
pop
mov
mov
fsubs
dec
ret
sub
mov
sbb
mov
js
inc
jbe
scas
xor
dec
fidivrs
cld
out
cmpsl
fildl
ljmp
add
push
sub
pusha
push
mov
inc
lcall
gs
js
mov
mov
adc
xor
pushf
in
fcoml
lea
mov
adc
in
sahf
dec
and
and
lcall
adc
out
cld
add
cmpsb
dec
mov
hlt
and
add
shlb
mov
mov
hlt
fs
and
xchg
sbb
les
add
sub
ret
out
scas
out
pop
sbb
jp
dec
mov
addr16
xchg
add
nop
xchg
or
testb
rorb
sbb
pop
add
test
mov
push
add
test
push
mov
movsl
fs
cs
ficomps
xchg
or
sub
mov
icebp
push
mov
in
jle
out
add
mov
xor
test
enter
cmp
push
stos
out
push
sti
cmp
lods
pop
movsb
push
xor
pop
aam
push
mov
or
pop
sbb
pop
jge
push
fstl
movsb
movsb
stos
cmp
xor
out
fcom
cmc
xchg
outsb
les
jo
pop
dec
stc
push
mov
aaa
cmpsl
sub
sub
test
shlb
arpl
push
push
outsl
inc
movsb
mov
sub
jl
mov
test
lcall
jmp
jae
repz
mov
push
jnp
or
mov
pop
jp
sbb
push
stos
xor
jecxz
jge
xchg
gs
xor
pop
cmp
xchg
roll
cmp
add
shrb
test
dec
andb
inc
xor
adc
jp
inc
stos
jecxz,pn
add
iret
sarl
push
in
sbb
xor
mov
adc
popa
or
add
add
mov
clc
xor
call
adc
cltd
out
xchg
sub
mov
mov
push
out
jmp
pop
dec
pop
icebp
aam
lock
in
mov
pushf
adc
int3
inc
jne
hlt
dec
mov
pop
dec
mov
outsl
std
loopne
shr
movsl
lds
dec
or
sbb
mov
or
xchg
mov
sub
not
fisttps
test
sub
mov
mov
cli
xor
cmp
cmc
sub
add
or
mov
in
add
dec
sbb
outsl
jge
mov
popf
pop
sub
in
les
fistpll
pop
pop
sub
repnz
and
into
mov
adc
aad
lea
xor
pop
or
adc
mov
xchg
add
ds
cs
in
adc
mov
ret
mov
jo
dec
hlt
dec
popf
popf
add
adc
add
mov
and
jl
inc
dec
sub
jl
sbb
xchg
cld
arpl
outsl
sar
test
stc
jno
stos
push
fldcw
xchg
mov
decl
xor
sbb
in
mov
ja
jge
dec
push
sub
mov
and
sbb
xchg
lock
cmpsb
std
negl
movsb
xchg
mov
mov
push
adcl
add
add
pop
cmc
pop
popa
test
addr16
mov
sbb
xchg
jae
mov
ret
outsl
in
pop
js
add
repnz
clc
mov
clc
ds
xor
mov
cmp
jmp
sbb
insb
sbb
cs
jg
mov
add
in
dec
dec
sub
push
mov
push
rorb
lcall
cmp
inc
cwtl
mov
lea
jge
mov
rorl
popa
sbb
ja
mov
inc
and
push
jmp
add
fwait
and
or
xchg
out
aad
inc
aad
pusha
pop
lahf
or
mov
test
pop
push
pop
inc
nop
sub
pop
mov
lock
cmp
shll
aas
mov
or
xchg
mov
jo
daa
dec
shl
enter
and
js,pn
mov
cmp
and
jnp
leave
inc
shr
sub
out
fsubrs
xchg
repnz
sbb
push
enter
cmc
add
std
out
cs
mov
mov
lods
addr16
jnp
push
lds
mov
jl
dec
cmc
hlt
cld
jb
rcr
jg
in
fistl
jne
mov
mov
jno
pop
xchg
pop
gs
sbb
and
adc
lahf
loopne
test
inc
pop
pop
insb
cmp
hlt
lods
adc
sbb
icebp
push
mov
dec
repz
jp
mov
les
xor
movsl
lods
push
dec
and
dec
mov
pushf
pushf
ss
xlat
pushf
test
dec
in
sbb
in
insl
xchg
jno
pusha
adcl
lret
sub
jo
pop
clc
arpl
addr16
out
jnp
test
jmp
arpl
movsl
icebp
push
jbe
out
test
les
xchg
jo
jb
xchg
adc
inc
inc
mov
push
inc
xchg
jp
arpl
rcrb
adc
pop
dec
movsl
jge
movsl
jg
js
rclb
xchg
loope
arpl
pop
adc
inc
in
inc
mov
sbb
adc
inc
mov
sti
popl
movsl
es
xchg
sub
mov
cmpsl
push
leave
shrb
js
pop
shll
gs
stos
subl
jns
push
jp
mov
xchg
xchg
aaa
or
dec
push
repz
inc
popf
push
mov
sbb
dec
out
mov
sbb
or
out
cmpsb
and
inc
lods
out
or
sub
scas
cs
bound
pop
mov
inc
test
jge,pn
add
ja
xchg
adc
mov
clc
push
sub
jno
negb
cs
pusha
xor
cmp
stc
popa
icebp
int3
gs
push
outsl
subl
loopne
add
cmp
sti
dec
and
and
mov
pop
sub
jns
jecxz
ss
js
mov
jle
mov
mov
movsb
dec
rolb
in
push
xchg
mov
xchg
dec
repnz
and
sbb
jne
data16
sbb
cmp
pop
pop
mov
outsb
stos
inc
mov
in
or
in
mov
mov
out
lcall
push
mov
jge
adc
xchg
jmp
dec
shll
inc
notl
es
jo
lcall
pop
fwait
or
imul
repnz
popf
xchg
or
pop
or
sti
icebp
into
faddl
movsb
rcl
popa
enter
sbb
cmpsl
ljmp
out
push
aas
fistl
clc
lret
sub
in
imul
or
cmp
rcl
cmp
push
imul
data16
xchg
xor
add
fcomps
adc
int3
mov
lods
inc
imul
jle
aam
lret
push
movsl
mov
test
jmp
xchg
push
je
cmp
popa
test
lcall
ret
xchg
test
int
push
push
dec
pusha
arpl
mov
dec
loopne
ret
inc
nop
and
and
inc
jne
fisttpl
int
in
and
push
repz
fwait
dec
inc
mov
cmp
jbe
pusha
pop
xlat
je
dec
push
mov
inc
test
pop
xchg
stc
aas
fists
inc
jmp
dec
fmulp
jb
and
xchg
jmp
cmp
ljmp
push
cmpl
xor
imul
and
jmp
fs
xor
rolb
aas
js
mov
jo
jg
daa
in
cltd
repz
testb
fs
insl
jmp
decb
sbb
xor
sub
popa
fdivrs
xchg
sub
xlat
outsl
je
sbb
sbb
mov
pop
sbb
fisttps
popa
test
adc
test
lret
out
push
fst
push
mov
leave
fwait
movsb
xor
add
sar
test
lret
aad
add
fsub
mov
ss
adc
mov
in
lret
jp
or
shll
sub
aaa
mov
cmc
call
fsubrs
jne
insb
data16
mov
hlt
popa
pop
shll
lcall
or
xchg
out
out
subl
scas
push
inc
sbb
icebp
js
push
roll
jne
push
mov
inc
or
aas
pop
pushf
inc
lret
push
test
enter
xor
xchg
and
add
sub
or
cli
sub
clc
and
pop
and
dec
rorb
loope
sub
addr16
fldl
xor
les
dec
inc
mov
cmp
cmp
xchg
cmp
icebp
add
or
jge
mov
or
push
lods
les
or
dec
mov
lods
pop
mov
push
movsb
add
rorl
mov
insl
mov
gs
inc
popf
rcll
and
adc
fsubrs
xchg
das
ret
mov
pop
mov
sarl
add
jnp
clc
jg
jl
jb
or
mov
or
test
shlb
enter
pop
jae
clc
aad
lods
jmp
jns
repnz
out
mov
mov
cmp
mov
out
adc
fstl
shl
nop
pusha
jg
cli
sbb
and
push
movsl
fdiv
or
jge
test
xor
or
adc
sarb
mov
fisttpll
loope
test
sbb
or
push
adc
scas
jns
shrl
cmp
scas
push
pushl
sub
dec
subl
movsl
cwtl
mov
mov
push
cmp
inc
sub
mov
mov
mov
inc
popf
hlt
scas
mov
test
mov
cld
rcr
sti
push
adc
out
clc
xchg
xchg
or
mov
push
gs
sub
popa
add
jo
pop
adc
mov
cmc
test
jns
xchg
test
daa
pop
mov
mov
inc
add
jo
ljmp
push
shl
ljmp
fisttpll
xor
das
xchg
push
xlat
icebp
adc
push
xor
repz
adc
in
mov
ja
adc
stos
clc
mov
shll
pop
int
pminsw
cmp
jmp
fisubrl
mov
ja
inc
cmp
pop
aad
cld
fists
test
mov
dec
stc
push
add
jg
xor
cmpsb
sbb
jmp
dec
add
es
mov
push
cmp
xlat
aad
xor
nop
int
js
outsb
mov
jmp
mov
insl
pusha
sbb
or
test
mov
sahf
mov
push
outsl
adc
mov
lret
xchg
xchg
cmp
cli
clc
dec
sahf
mov
loope
xor
cld
repnz
sub
xlat
jmp
jmp
loope
push
jb
push
fidivrs
outsl
lods
and
in
and
jbe
stos
push
jmp
sbb
jecxz
aad
cmp
mull
mov
jg
nop
in
jae
in
out
ja
cmpsl
sbb
bound
and
lret
add
xchg
in
jp
jg
cmc
int3
repz
sub
push
pop
dec
jb
scas
mov
nop
push
fsubrp
jmp
out
or
imul
sbb
clc
inc
int
jne
rorb
push
pop
pop
ret
in
add
xor
aas
loope
out
bnd
cmovbe
inc
xor
test
adc
mov
push
test
adc
or
out
mov
mov
fstl
jge
stc
jp
cmp
push
mov
adc
test
inc
mov
sbb
inc
into
or
call
outsl
cmp
and
cld
xor
scas
daa
pop
mov
call
dec
arpl
cmp
pcmpgtd
mov
das
mov
dec
dec
test
stos
lods
jp
sub
mov
test
mov
sbb
and
daa
in
push
push
je
and
mov
incb
fidivl
lea
cmp
sub
push
lret
mov
ficoms
xlat
push
dec
pop
mov
ljmp
fs
roll
sbb
icebp
in
sahf
and
movsb
xor
cmp
inc
fidivl
xchg
inc
sub
or
or
outsl
sub
imul
mov
in
inc
inc
mov
movsb
in
test
xchg
inc
pushf
outsl
roll
adc
and
mov
rcrl
faddl
jb
jmp
mov
jnp
and
push
popf
add
cs
ret
sbb
loope
insl
rorb
mov
inc
xor
cwtl
cmp
jae
cmp
call
fcomps
xchg
cmp
fisttps
mov
pop
pop
aam
cmp
sbb
inc
aad
jns
cmp
ret
int
adc
jae
icebp
js
bound
test
xchg
test
filds
aaa
insb
xchg
sbb
add
sub
ret
mov
xor
xor
lds
push
push
sub
push
outsb
sbb
xchg
push
pop
aaa
arpl
loope
xlat
or
ret
mov
mov
pop
cmp
lcall
xor
mov
add
loope
cmp
pop
ds
aaa
pop
push
or
setbe
sbb
lock
mov
bound
fadds
sub
addr16
pop
mov
and
jne
xchg
daa
adc
es
inc
lock
push
sahf
in
mov
rcr
dec
xchg
mov
in
in
pop
enter
aaa
test
ljmp
mov
cmp
mov
push
or
mov
mov
jge
test
popf
aam
inc
mov
sub
or
andb
bound
nop
cmp
fwait
mov
cwtl
iret
xchg
std
adc
mov
icebp
inc
mov
xchg
test
mov
xchg
mov
cld
pop
test
mov
scas
popa
mov
stos
pop
nop
mov
mov
inc
mov
nop
push
pop
or
jae
insl
mov
adc
sbb
push
pop
push
xchg
int3
insl
mov
xchg
iret
xor
jne
push
add
xchg
inc
lret
mull
xchg
sbb
icebp
cmpsl
mov
or
jle
je
pop
xchg
ffreep
push
or
adc
lcall
xchg
or
xchg
or
dec
test
insb
fsts
sub
cwtl
pop
push
jno
ret
mov
in
adc
dec
test
outsb
adc
data16
or
adc
cmpsl
lcall
push
sub
lea
pop
cs
xor
out
decb
pop
mov
cs
jns
test
into
add
dec
scas
pop
mov
cmovle
pop
xor
loopne
sub
test
dec
sbb
cli
mov
jmp
xchg
dec
dec
jnp
dec
jns
and
push
cwtl
call
loope
dec
lret
push
data16
lahf
pop
or
addr16
je
sbb
hlt
loope
jne
xchg
mov
mov
push
aad
jno
xchg
out
adc
mov
fs
ljmp
out
movsb
iretw
es
sbb
popf
cli
pusha
cld
sub
push
sbb
test
aas
out
les
cltd
and
or
mov
cmp
jp
in
xchg
sbb
mov
push
push
loop
inc
sbb
in
or
rolb
sbb
xor
cmp
mov
test
mov
add
in
shlb
xor
arpl
int
mov
jae
aaa
je
sbb
mov
test
addr16
push
pop
out
stos
iret
sbb
in
das
jecxz
movsb
push
xchg
fiadds
pop
idivl
outsb
stos
and
fildl
lcall
icebp
js
push
rcll
sbb
outsb
mov
insb
ds
rol
lea
lret
push
add
adc
stos
in
out
mov
push
mov
negl
fcmovnbe
push
xchg
fstpt
hlt
mov
nop
ficomps
push
pop
xchg
push
les
es
mov
dec
mov
lds
dec
fsubs
push
test
loope
pop
mov
jl
push
jnp
mov
ds
fxch
repnz
cwtl
pushf
mov
dec
pop
xchg
aam
loope
and
out
movsb
call
std
movsl
push
lods
enter
jns
jno
arpl
mov
imul
test
jle
mov
test
pop
push
enter
fwait
jmp
pop
xchg
or
cmp
call
movl
dec
xor
or
xchg
pop
notl
enter
mov
cmpsl
dec
or
rcrb
jns
jmp
sub
stc
and
mov
fnstcw
aam
xor
xor
in
cli
ss
push
cld
xor
mov
mov
fnstcw
mov
ljmp
je
lret
mov
jb
add
jbe
xor
jbe
mov
xor
js
shrb
sti
sub
xor
cmp
or
inc
gs
cmp
mov
fsts
cmpsl
push
cwtl
cmpsl
leave
mov
loopne
jb
xchg
cli
and
cmp
mul
fldl
out
lret
in
bound
adcl
imul
loope
pop
sbb
mov
jo
in
inc
sahf
fldcw
mov
push
jecxz
mov
dec
xchg
xor
adc
cltd
dec
lahf
mov
pop
ret
jg
lods
aam
mov
inc
movsb
jne
adc
mov
insl
push
insl
xchg
dec
xlat
adc
lods
aad
xlat
negl
mov
mov
jg
in
xchg
add
lods
pop
loop
push
leave
pop
mov
dec
add
jno
cwtl
rolb
and
cmp
add
mov
popa
xchg
jecxz
shl
rcll
xchg
loopne
fbstp
xor
cltd
shrb
dec
aaa
decl
xor
clflush
push
jb
test
xchg
mov
xchg
inc
pushf
imul
sbb
jg
mov
push
cmpsl
movb
cmp
lcall
je
lock
in
fs
bound
outsl
into
into
jbe
add
enter
insb
test
jle
or
cmp
ljmp
cmpsl
mov
js
cmp
xchg
rcrl
xor
push
dec
test
sbb
xor
cwtl
std
mov
cmp
jecxz
ljmp
add
shll
cmpsl
int3
inc
insl
hlt
sub
mov
xchg
push
jne
fwait
xor
insl
les
push
decb
mov
adc
jl
jmp
and
adc
pop
mov
xchg
jns
sub
or
mov
cmp
call
xor
ds
mov
jge
daa
pop
outsb
jno
mov
enter
and
xchg
push
push
push
roll
loop
or
insl
mov
pusha
mov
fnstsw
jecxz
fidivl
push
shr
sbb
lret
mov
pop
cmp
xchg
mov
fstpt
adc
jl
add
jle
les
dec
mov
xor
xchg
mov
das
sub
mov
xor
das
clc
and
push
jl
inc
mov
imul
lret
and
jge
flds
push
insb
test
pop
mov
ds
xchg
repz
out
xchg
xchg
xchg
in
cmp
fldenv
call
outsl
movsb
adc
xchg
jle
fldenv
cli
jne
icebp
cltd
and
adc
sub
add
adc
fs
stc
xchg
lea
mov
inc
lahf
imulb
add
mov
arpl
adc
xchg
add
sub
fsubrp
xchg
sub
jae
ret
jb
mov
cmp
mov
fists
pop
push
jns
in
pop
adc
mov
js
push
cmpsb
push
add
lock
dec
add
add
sub
sub
adc
sub
sub
adc
cwtl
int
cmpsl
in
mov
or
in
fs
sbb
push
xchg
popa
movsb
sub
inc
in
jae
jmp
xor
and
stos
ret
pop
mulb
pop
test
and
push
loop
dec
movsl
insl
movsb
or
mull
in
ja
push
jle
ficoml
pop
test
dec
cmp
cmp
and
out
jmp
jns
and
pushf
jb
in
sbb
xchg
dec
and
jbe
cmp
loopne
mov
outsl
pop
mov
jno
jmp
or
nop
inc
mov
loop
cli
xchg
and
ret
and
adc
fmuls
sub
inc
aam
ret
scas
std
or
call
cmovl
jb
jns
std
sub
dec
dec
ss
xor
test
push
faddl
pop
jg
add
dec
call
pop
popa
fildll
test
mov
subb
into
mov
mov
push
mov
jge
mov
dec
leave
lret
or
jns
jbe
mov
or
cmpsl
add
out
jge
ds
inc
push
pop
dec
repnz
bound
cmp
add
into
or
in
mov
mov
mull
and
jbe
dec
test
das
cld
mov
add
mov
cmp
and
mov
ja
test
jl
fidivs
lret
or
mov
jmp
jle
movsl
fdiv
xor
fmuls
jnp
jno
push
fsubl
insl
pop
dec
pop
repz
jmp
inc
repnz
imul
or
fsubr
jmp
pop
aam
scas
int
in
mov
stc
ss
mov
imul
jecxz
jge
inc
jmp
shrb
push
xor
enter
cmp
mov
popf
hlt
sbb
add
mov
in
jno
xor
stos
loop
mov
loop
enter
jno
cs
out
jecxz
sbb
int3
sbb
push
and
aad
xchg
fwait
aam
pop
subl
loop
fs
aad
lcall
fisttpll
add
stos
loope
pop
shrl
pop
insl
add
out
pop
cmp
mov
add
ja
push
pushf
pop
jnp
cmp
xlat
std
ror
jle
pop
test
lock
push
pop
jb
out
aad
cmc
rcrb
bound
jmp
call
scas
mov
cmp
inc
js
jmp
loop
sbb
xchg
leave
fiadds
add
rcrb
xchg
push
add
mov
push
arpl
test
scas
shrb
out
xor
dec
sbb
xor
adc
mov
aaa
jge
testl
cmp
hlt
sub
xor
dec
jecxz
pop
push
and
ret
hlt
fstl
push
addr16
mov
cli
cmpl
xchg
lahf
es
bound
out
mov
fwait
and
int3
mov
jge
repnz
sahf
cmc
test
mov
cmpb
or
jmp
rcrl
addr16
inc
jb
and
ljmp
xchg
pop
int3
push
mov
dec
and
sbb
shl
adc
cmpsb
call
xchg
movaps
sahf
out
sub
call
pop
sub
fisubl
sahf
cmc
and
mov
mov
out
cmpsb
cs
cli
das
xchg
xorb
cwtl
data16
outsl
cmp
adc
inc
dec
jg
imul
cmc
push
mov
addl
and
cwtl
int
ja
cmp
scas
push
xchg
fstpt
je
ret
dec
fisttps
aam
inc
movl
pop
mov
inc
add
jns,pn
bound
enter
sbb
movsb
and
cmp
cmpsl
in
nop
lds
lea
and
pop
xchg
or
or
sarl
push
cmp
or
push
clc
mov
stos
add
mov
fnstenv
flds
pop
sahf
sbbl
push
lods
ljmp
and
sbb
jmp
jns
sets
repnz
cmc
sub
shll
jge
mov
jae
loopne
insb
das
and
adc
les
push
scas
cltd
repz
and
lods
sahf
test
iret
sub
repnz
pop
sbb
adc
fdivl
dec
pushf
nop
pusha
xchg
xor
stc
loopne
rcrl
dec
or
adcb
cld
sbb
mov
jb
movb
mov
pushf
testb
sub
ds
outsl
pop
cld
cmpl
ljmp
cltd
and
lahf
sbb
lcall
stc
sbb
iret
inc
cli
mov
out
les
mov
jecxz
xor
mov
mov
out
ljmp
fs
jo
sbb
jae
or
fistpl
arpl
jns
dec
push
imul
jecxz
xchg
int3
and
or
lret
pop
in
xlat
subl
rcrb
mov
aas
out
aas
movb
mov
pop
lock
mov
cmc
and
xor
je
pop
fistps
ljmp
subl
push
adc
sbb
or
lret
jl
xor
xchg
sub
insb
jmp
imul
outsb
sub
push
cmp
mov
mov
and
ss
jecxz
test
aas
in
lea
movsb
in
xchg
popf
lret
stos
jbe
cmp
cltd
shlb
sub
or
call
adc
es
jbe
rcrb
stos
call
fs
out
ret
dec
andl
push
jp
leave
incb
jns
imul
xor
and
es
cs
push
int
mov
outsb
sbb
lahf
or
jg
icebp
cwtl
and
gs
mov
testl
pop
or
sub
loop
dec
outsb
cmc
dec
fisttpl
pop
or
into
dec
icebp
call
addb
adc
hlt
dec
dec
xchg
loopw
insl
hlt
sub
mov
adc
lret
pop
xchg
iret
and
xor
inc
push
test
cmp
in
lahf
dec
movsl
push
xchg
mov
push
and
sub
pop
xchg
data16
inc
sub
mov
xor
xchg
mov
xor
push
pop
mov
jne
repnz
fisttpl
cltd
and
popf
aam
xchg
ds
sar
jbe
clc
mov
jl
mov
xor
rolb
cmpsl
das
es
dec
rcrl
idivb
sub
orb
ja
jae
stc
aad
ljmp
lret
mov
sub
fnstenv
outsb
fsub
stos
iret
push
lds
mov
clc
dec
and
sbb
push
xchg
sub
jo
mov
ljmp
push
das
out
inc
jl
in
mov
sbb
xchg
push
and
sahf
xor
jg
sub
ss
negl
jg
dec
call
movsb
fmull
dec
mov
cmp
in
add
mov
push
stc
jne
test
lret
stc
hlt
mov
inc
jmp
jns
cmp
fdivs
inc
sub
pop
push
adc
scas
add
hlt
pushf
repz
int
adcl
sarl
cmp
mov
push
popf
jg
jne
movsb
jae
pop
lahf
lds
pop
insl
ret
shl
sub
inc
push
or
or
cmp
or
pop
add
mov
dec
cmpb
adc
sub
add
xor
cli
std
push
ret
fiadds
jae
ret
adc
jp
pop
push
sbb
pusha
or
inc
mul
push
int
frstor
xor
rolb
lea
xchg
stc
sub
adc
mov
adc
out
inc
inc
je
das
jecxz
xchg
inc
int
inc
mov
rdmsr
mov
ret
das
xlat
cs
xchg
loope
xchg
jmp
std
xchg
scas
mov
mov
mov
push
fidivrl
jno
lds
in
mov
cwtl
negl
pop
out
nop
movsl
adc
popf
ficoml
popa
mov
xlat
jg
pop
jecxz
icebp
dec
fists
jno,pn
push
dec
jno
dec
mov
mov
aas
mov
push
jbe
loop
ret
pusha
or
mov
sbb
and
daa
daa
movsl
push
fistl
mov
insl
push
sbb
int3
mov
lcall
cmpsl
lea
outsb
out
dec
fdivr
cmpsl
lea
inc
push
pop
xor
push
xchg
and
jmp
sub
or
jmp
lret
sti
cmp
mov
cwtl
mov
rolb
lods
in
sbb
xchg
lods
out
sub
xor
xchg
in
cmp
inc
adc
pop
sub
cli
push
cmp
addb
push
shr
push
gs
xor
adc
adc
xor
add
test
rclb
push
iret
xchg
cmp
aaa
pop
in
cmpsb
mov
loope
les
imul
out
punpckldq
push
pop
cmp
adc
leave
adc
mov
hlt
rcpps
xor
outsl
mov
inc
fs
mov
ljmp
in
out
adc
xor
and
xchg
mov
icebp
into
jg
pop
add
ret
jge
mul
sub
mov
out
pop
fistps
add
test
dec
jg
xor
sbb
in
lcallw
mov
sbb
add
outsl
loopne
dec
xchg
xor
xchg
out
cmp
je
test
dec
sbb
mov
jmp
test
outsl
cmp
jno
or
aas
aam
mov
jne
xor
push
jae
and
sahf
cmc
mov
cmpsl
pop
xchg
fcoms
cwtl
iret
sbb
sub
cmp
mov
sbb
loopne
pushw
mov
inc
dec
lahf
adc
scas
and
jne
fwait
sti
inc
shl
dec
loope
jb
outsb
lds
pop
seta
mov
inc
mov
xchg
int3
jnp
addb
enter
mov
inc
mov
jle
movsb
fsubl
jno
add
and
and
popf
ja
arpl
fs
or
call
loopne
mov
add
add
bound
lds
push
movsb
scas
repz
push
push
adc
and
cwtl
cmp
test
mov
sbb
dec
into
scas
dec
cli
jno
ror
std
sahf
dec
insl
les
or
jmp
xchg
fcmovnbe
xchg
inc
pushf
scas
ds
cltd
shll
mov
in
ljmp
loop
iret
rcrb
cs
cmpl
aam
fldcw
cli
cmpl
imul
jecxz
popa
test
lea
imul
xchg
pop
xchg
dec
sbb
incl
data16
ret
leave
das
jge
pop
jge
pop
int3
push
jo
fidivs
push
cld
pop
cmpsb
std
sub
sahf
sbb
insb
fwait
xchg
nop
jbe
mov
cwtl
mov
loop
daa
in
fisubrs
loopne
or
inc
fsts
addb
hlt
inc
ja
mov
enter
jno
inc
int3
jnp
les
and
jne
pop
lret
daa
scas
in
testb
sbb
les
test
pop
inc
rolb
mov
inc
sbb
mov
ljmp
push
jno
and
in
iret
sbb
cmpl
dec
inc
ja
xchg
loop
pop
aad
push
comiss
sub
jl
jb
in
insb
repz
frstor
imul
xchg
pop
xor
or
fldl
dec
adcb
push
pop
insb
mov
mov
push
fxch
repnz
mov
aaa
lcall
pop
mov
xchg
sbb
mov
inc
enter
xor
into
xchg
out
hlt
in
jae
dec
ss
xor
add
fildl
sub
jnp
fidivl
popa
cwtl
jno
mov
or
sbb
sub
clc
out
test
push
push
scas
pop
sbb
jno
dec
lahf
scas
xorb
pop
hlt
test
sbb
js
mov
cmpsb
pop
popa
mov
es
mov
popf
jge
xor
aad
mov
or
xlat
or
sti
pop
dec
bound
push
lea
into
popa
hlt
imul
aas
dec
xchg
xchg
sbb
dec
rol
and
mov
inc
or
inc
jle
mov
bound
pop
in
in
mov
aaa
mov
xorb
addl
dec
ljmp
aad
cmp
lock
negb
stos
xor
jge
imul
movzwl
and
into
add
cmpsb
jmp
hlt
xchg
hlt
int3
and
lock
and
or
imul
aam
jg
stos
xchg
test
xchg
rclb
je
inc
and
xchg
cmp
and
fs
out
in
sub
or
xchg
lcall
enter
das
dec
jo
test
aas
mov
and
sbbl
add
cmp
sahf
in
jb
filds
add
sbb
mov
and
adc
das
arpl
mov
sbb
lods
ljmp
lds
fsubs
insl
daa
cmpsb
das
push
mov
cmp
inc
push
mov
xchg
or
divb
mov
or
xchg
pop
add
mov
and
fbld
les
push
push
stos
test
inc
mov
mov
repnz
mov
and
rcrl
fsubrp
sub
add
scas
xor
stos
jmp
xor
jl
mov
xor
aad
call
in
push
mov
adc
adc
ret
push
lock
movsb
xchg
inc
mov
sbb
out
stos
loope
jns
jl
ret
and
lock
out
mov
nop
adc
fcmovu
daa
scas
in
xchg
inc
mov
daa
arpl
push
in
loop
mov
lcall
pop
or
inc
xchg
mov
scas
inc
jp
xchg
fsubl
aaa
mov
mov
dec
add
pop
xchg
jp
fimuls
mov
sbb
call
push
or
sbb
xor
adc
adc
mov
imul
adc
and
pop
ja
cwtl
inc
jne
js
jp
xor
lock
pop
and
mov
lret
jo
sbb
xchg
into
sub
cli
iret
inc
cmp
sub
imulb
sarl
mov
nop
int
pop
mov
addr16
iret
ja
cmpsb
jecxz
push
push
addr16
loopne
xor
sbb
sub
sub
ror
adc
clc
or
in
cmp
sbb
cmc
sbb
shlb
jbe
movsb
or
push
adc
xchg
push
call
xchg
mov
sub
mov
push
pop
shrb
inc
insl
sbb
lret
das
xor
cld
push
fucompp
jle
xchg
negb
sbb
pop
out
xchg
add
pop
mov
andl
push
pop
ret
clc
xor
movsb
sti
sub
mov
icebp
movsl
fldt
data16
adc
mov
arpl
add
ret
aaa
test
pop
and
outsl
divb
mov
mov
mov
adc
fs
cmpsb
sub
sbb
xchg
push
ret
xor
sti
mov
repz
je
fnsave
fnstcw
push
xchg
dec
and
xor
shrb
push
lcall
dec
jp
and
mov
cmp
fcmovbe
std
cmp
daa
dec
xor
test
adc
ror
pop
das
jmp
addb
mov
inc
scas
mov
rcl
sti
stos
int
mov
mov
scas
out
popa
iret
clc
test
cmp
jnp
stos
mov
xchg
data16
ss
sbb
clc
and
add
ds
scas
test
inc
jmp
adc
out
mov
add
ficoml
lods
ja
icebp
mov
sub
pop
cs
or
jbe
and
loopne
jns
adc
inc
pop
xlat
fcompl
sbb
or
xchg
aam
xchg
or
es
sbb
cli
test
xchg
cmp
sub
or
test
dec
pop
daa
push
push
fnsave
mov
push
out
scas
dec
xor
test
jle
xchg
push
adc
sbb
repz
popf
ficoml
mov
jle
loop
and
shll
mov
notl
mov
jno
sbb
es
lds
stos
pop
out
mov
incb
push
jle
js
pop
testl
repz
push
popf
std
dec
mov
xor
push
das
add
or
out
cmp
sbb
jge
adc
pushf
inc
fwait
mov
add
mov
pusha
mov
and
les
or
add
cmp
imul
jg
jbe
aad
inc
lret
inc
lret
inc
sub
icebp
cmp
cmp
sbb
gs
mov
xor
movsl
jae
lcall
cmp
aam
mov
mov
mov
stos
push
fstps
cmpsl
dec
sub
stos
inc
bnd
jbe
pop
ds
ljmp
movsbl
xchg
scas
out
xor
inc
inc
mov
inc
sahf
mov
cmc
mov
mov
cld
sub
repnz
jge
pop
cmp
and
mov
rcrb
pop
shrb
push
mov
jne
sub
shrb
mov
jbe
dec
repnz
ja
lods
xchg
fwait
insb
xchg
sub
inc
xor
add
mov
loopne
ret
cli
jg
mov
sub
mov
xchg
nop
dec
jae
or
and
xorl
nop
xchg
inc
cltd
jmp
sub
subl
pop
loop
dec
aad
inc
inc
sbb
push
scas
mov
ss
inc
sbb
lods
xor
pop
cltd
inc
ja
dec
mov
aaa
test
int
jo
dec
push
insl
loope
popa
fs
add
mov
mov
cwtl
mov
sub
mov
sbb
xchg
add
rorb
sub
add
sahf
rcrl
test
and
repz
outsl
shll
mov
jb
pop
cli
or
push
imul
ss
mov
jo
lahf
dec
aad
out
iret
xor
je
inc
popf
push
das
pushf
inc
out
inc
xor
icebp
sar
mov
rcr
mov
rcrb
xor
shlb
aam
into
js
or
sar
and
popf
add
push
nop
fstpt
jbe
sub
pushf
and
xchg
or
adc
and
sbb
iret
jae
and
in
popf
mov
es
insl
or
and
cltd
pop
js
jae
xor
inc
psrlq
ds
stos
nop
mov
in
sbb
cmp
popf
sub
jno
jecxz
jmp
leave
lods
jmp
fwait
jmp
sbb
xor
stc
mov
iret
push
mov
insb
jo
scas
and
dec
imul
push
jnp
sub
das
subl
xchg
dec
insl
in
cld
movsb
dec
andl
mov
mov
mov
stos
shrl
pop
sub
je
and
ret
stos
xor
jbe
xor
shrb
call
xchg
in
in
sub
and
pop
loop
push
jns
lahf
push
int3
sbb
fwait
outsl
cmpsb
xchg
push
add
fnstsw
inc
test
data16
mov
sbb
or
add
push
mov
xor
cmp
xor
ljmp
rcrl
repnz
jno
repz
mov
leave
leave
jae
cld
sbb
scas
clc
pop
jg
lock
push
sub
dec
aas
bound
sub
mov
movsl
in
xor
enter
lahf
xor
mov
inc
mov
aas
jnp
and
sub
xor
outsl
test
testl
idiv
daa
sbb
cmc
aad
push
mov
in
mov
lods
pop
jle
cmp
daa
xor
jl
test
lret
stos
movsb
push
jmp
jmp
jg
js
push
mov
mov
mov
sub
rolb
negb
jmp
dec
test
mov
inc
pushf
mov
mov
les
xchg
movsl
enter
nop
or
movsl
dec
movsb
call
mov
adc
inc
test
jbe
clc
add
mov
roll
in
movsb
push
lds
js
sbb
ss
sbbb
ljmp
mov
sub
mov
push
xchg
fdivrl
xor
test
cmp
out
bound
sbb
cmp
in
mov
inc
cwtl
out
pop
mov
pop
mov
xor
mov
add
loope
push
leave
pop
sahf
and
pop
fwait
inc
js
jae
add
mov
sub
or
rorl
adc
mov
adc
popf
popa
pop
cltd
pop
testl
stos
lret
pop
or
dec
mov
in
pop
jns
shlb
lock
sbb
fmull
sti
fldt
pop
test
jp
mov
lret
cmp
xor
pop
pop
insb
sub
sub
pop
lods
cmp
mov
cmp
js
sub
cs
std
mov
xor
ja
faddl
lods
fistl
push
xor
js
jmp
mov
adc
jl
cmp
lret
or
sub
and
push
push
pushf
jecxz
cmpsl
sub
fsubrl
jle
mov
and
xchg
inc
jne,pt
mov
test
adc
lahf
jl
jo
jns
out
sub
mov
xchg
xchg
mov
jl
lahf
add
mov
adc
std
xor
repz
scas
aam
outsb
sbb
icebp
ret
jb
lret
sti
jo
sbb
mov
or
jne
sbb
push
dec
push
outsl
cmpsb
lret
mov
jbe
xchg
out
push
inc
or
sti
cmp
les
aam
leave
clc
sbb
in
sub
mull
repz
mov
out
rcrl
inc
add
sub
pop
loop
rclb
fucomi
cli
aad
sbb
sbb
sbb
dec
mov
pop
outsb
mov
xor
mov
int
pop
aaa
xlat
test
push
mov
dec
mov
lock
mov
ffreep
stc
push
sbb
xor
idivb
pop
int3
fwait
sub
push
push
lret
fimull
push
ja
lock
out
ret
out
les
sub
test
mov
mov
pop
sbb
daa
push
push
insl
movsb
add
ss
push
fcompl
add
pop
mov
iret
scas
adc
out
cltd
jbe
scas
sbb
out
sbb
sbb
shl
jge
or
hlt
movsl
cmp
push
fcoms
fsubr
lock
mov
mov
push
push
insl
out
lock
mov
cmp
jecxz
mov
jmp
dec
aad
sti
aas
out
lock
repz
cli
jae
repz
inc
aas
out
lock
inc
call
loopne
sbb
pusha
add
mov
sti
pop
ret
cmp
inc
cmpsb
std
aaa
into
dec
jo
dec
sub
mov
aas
jne
add
or
pop
xchg
fsubl
mov
mov
push
sbb
xor
daa
in
cmp
mov
jl
call
dec
loope
sub
out
xchg
jecxz
gs
or
rorl
cltd
or
insb
jp
xlat
or
in
out
aad
decb
mov
cmp
mov
or
mov
nop
adc
arpl
dec
filds
add
jmp
push
sub
jmp
mov
test
iret
cmp
pop
enter
xorb
fwait
mov
iret
mov
enter
or
in
cmove
jne
push
les
jns
add
mov
add
xchg
push
das
sub
add
test
test
loope
addr16
subb
inc
cmp
ds
pop
cmpsb
fstl
xor
scas
lea
add
stos
loop
testl
push
inc
add
push
stos
push
addr16
mov
icebp
adc
mov
xor
or
scas
mov
jo
dec
adc
sarl
push
sahf
dec
imul
mov
xchg
or
mov
add
or
inc
into
lahf
mov
cli
cwtl
sbb
inc
fwait
inc
fiadds
fsubr
or
pop
sub
sbb
int3
push
icebp
cmp
xor
add
adc
loop
push
xbegin
dec
test
bound
aam
jge
xor
xchg
rcrb
xchg
lds
push
lcall
test
xor
adc
iret
or
mov
fmuls
push
or
mov
je
lock
inc
dec
lret
lret
call
mov
cmp
orb
jnp
adc
push
frstor
mov
in
pop
pop
jae
sub
cmpsb
std
xchg
lods
pop
outsb
js
jle
or
mov
scas
xchg
gs
test
es
or
fs
movsb
rolb
testb
test
push
adc
stos
sub
movb
xor
or
test
xchg
mov
je
cmpsb
loop
mov
and
andl
lods
pushf
dec
add
xchg
adcl
jno
push
push
ja
or
add
jmp
dec
mov
push
mov
in
sub
inc
mov
cmpsb
fildl
push
stos
rclb
std
push
dec
sub
rcr
push
adc
rorb
test
ljmp
popf
and
call
pop
in
test
push
scas
jns
mov
push
inc
xchg
call
jp
mov
in
es
cwtl
xchg
jmp
push
xchg
xchg
inc
bnd
push
rcrb
jbe
cmp
jecxz
sub
js
and
cmp
loope
pop
inc
cmp
pop
je
arpl
mov
stos
fwait
cltd
fimull
xchg
loopne
pop
push
gs
movsb
loop
gs
fdivs
pusha
xchg
xlat
insb
sbb
out
cmp
mov
mov
lahf
notb
add
mov
aad
add
imul
in
push
push
xchg
add
adc
filds
jnp
cltd
stos
add
mov
out
lret
xchg
out
add
add
rorb
jg
gs
inc
jle
sbb
jns
loop
dec
ss
and
pop
or
out
iret
movsl
loop
jae
push
popa
mov
in
or
out
mov
add
mov
sbb
add
int3
es
int
mov
add
mov
sub
repz
mov
cld
adc
or
fisttpll
aam
jle
fidivrs
cli
inc
out
inc
mov
stos
push
fdivs
jne
rcrb
adc
int3
sbb
mull
pushf
repz
or
adc
mov
xor
movsl
cmp
or
add
mov
jno
in
mov
cmp
es
test
push
mov
sti
xchg
push
jl
and
mov
movsb
mov
mov
mov
and
in
pushf
dec
mov
xor
mov
xor
mov
mov
stos
push
add
repnz
mov
jnp
sbb
cmpsl
test
dec
xorl
dec
jg
enter
xor
adc
xchg
mov
sbb
cmc
adc
fidivrs
leave
shrb
or
das
gs
ljmp
paddw
test
push
lea
dec
mov
cmp
inc
subb
add
lcall
out
fwait
dec
rorl
inc
xchg
out
cmp
inc
add
push
div
xor
xchg
push
cmp
stc
mov
push
in
ret
pop
negb
outsl
aaa
loope
or
loope
imul
mov
add
pop
xchg
int3
inc
jo
movsb
cmp
jg
jbe
in
leave
push
jnp
jmp
xchg
jbe
add
nop
lods
or
sub
jmp
pop
orl
xlat
pop
mov
push
mov
cmp
lahf
in
xchg
cmp
xchg
pop
adc
jo
das
mov
movsb
stos
popf
rolb
iret
or
mov
jb
sbb
fcomps
cmp
pop
add
jmp
ret
in
test
loope
mov
imul
lcall
out
fldl
fsincos
mov
outsl
adc
mov
dec
pop
in
in
enter
cli
push
insb
adc
fists
cmpsl
shr
mov
test
add
and
cli
fwait
sub
mov
or
or
sub
decb
jno
shrl
movsb
fadds
adc
insb
nop
fiadds
and
dec
xorb
in
xchg
pop
aaa
cli
and
jbe
insb
mov
add
sarl
ja
mov
or
popa
or
cs
and
and
pop
dec
cli
cmp
negl
mov
pop
int3
xchg
jo
int3
jb
lea
aaa
stos
xchg
mov
lret
movsl
push
cli
mov
xlat
push
add
sbb
or
and
pop
mov
xchg
shr
negb
jo
test
pop
imul
loope
push
fstpl
push
lds
movsb
out
inc
sub
movsl
mov
outsl
sub
mov
mov
mov
mov
push
test
lahf
sub
pop
sub
add
addr16
cmpsb
std
arpl
int3
inc
sub
mov
adc
cwtl
xchg
loope
faddl
or
pop
pop
xor
aas
cmc
mov
repz
in
sbb
ss
sub
adc
mov
cmp
adc
cwtl
sub
mov
je
cli
aaa
mov
mov
fs
cmc
adc
cld
pop
dec
notb
repz
push
inc
mov
cmp
pop
push
int
ret
clc
test
in
and
insl
mov
adc
loopne
ret
fwait
imul
push
into
jo
fsubrl
cmpsl
sub
std
lahf
es
popf
jge
push
fbld
or
mov
pop
das
xor
adc
leave
fnsaves
movsl
cld
sub
data16
sbb
clc
test
xchg
mov
lods
scas
or
in
lahf
mov
leave
out
xlat
jmp
sub
aas
add
mov
shrb
mov
or
lods
cmp
insb
sbb
jbe
hlt
pop
pop
xchg
loop
arpl
roll
xchg
jecxz
xor
rolb
and
insl
out
hlt
dec
fsubrl
inc
mull
in
sub
mov
push
push
dec
sti
cmpsl
shll
or
xchg
pop
ret
lock
mull
ja
cmp
fsts
mov
sbb
int
adcb
pop
mov
dec
lahf
dec
outsl
hlt
dec
sub
sti
sbb
mov
jne
jmp
push
inc
das
lea
and
cmp
in
mov
pop
pop
shrl
pop
cmp
inc
mov
mov
cltd
fisubs
push
int
mov
adc
add
jbe
or
out
sbb
stc
push
in
mov
fisttpll
daa
mov
mov
into
jge
mov
xor
test
add
int3
jmp
int3
xor
fwait
mov
jle
pop
mov
push
pop
mov
adc
movsb
mov
dec
cmpsl
in
nop
int
jbe
xor
aam
jno
dec
rclb
aaa
inc
jp
fimull
pop
mov
cmp
sti
jno
call
cmp
sysexit
nop
lahf
xchg
xchg
push
push
or
fisttpl
ficoml
pop
shl
cmpsl
in
mov
add
pushl
imul
bound
cmp
inc
adc
jo
lea
mulb
jg
push
repnz
ss
and
gs
in
inc
into
add
sarb
jmp
sbb
sbb
test
mov
lds
dec
arpl
ret
mulb
roll
mov
mov
imul
mulb
sbb
fsts
push
popf
add
sub
cmpsl
shll
sbb
inc
inc
and
loope
mov
ret
jb
dec
andb
push
test
in
popf
leave
int3
push
stos
jge
or
leave
jno
dec
fmul
or
outsb
push
mov
mov
sbb
or
sub
or
ret
jns
lea
sbb
mov
negl
leave
and
scas
sarb
jmp
in
sub
lahf
test
sub
sub
roll
dec
push
ficoms
sbb
cli
cmpl
pop
jl
bound
push
in
lds
lds
lods
xor
sbb
inc
fwait
mov
mov
adc
in
mov
test
enter
sub
outsl
mov
testb
sbb
dec
shrl
jmp
mov
aam
rcrl
xlat
fwait
cmpb
jo
lahf
out
movsl
pop
push
xchg
cmc
pop
mov
jmp
jbe
ja
dec
movsl
int3
lahf
add
xor
jae
or
lret
imul
sub
fcoml
out
inc
and
aas
test
test
gs
cmpb
stos
mov
cmp
nop
pop
push
fwait
std
dec
shrb
decb
int
pop
xchg
lahf
shll
jge
iret
or
pushf
inc
in
cmp
mov
cmpsl
test
sub
mov
dec
mov
or
pushw
inc
repz
in
xchg
dec
push
add
add
pop
mov
iret
or
sar
leave
loope
mov
aaa
mov
fnstenv
adc
cmpsl
rcll
cs
mov
fcompl
fldcw
mov
pop
or
ds
lret
cmpsl
in
fildl
cpuid
call
cli
rcrl
aam
movsb
popf
xchg
call
pop
xor
push
aaa
push
mov
cmp
rclb
pop
mov
push
scas
out
jecxz
decl
dec
and
dec
test
std
outsl
pop
mov
and
mov
cld
hlt
mov
test
clc
cwtl
dec
mov
mov
mov
popa
pop
xor
xchg
fiadds
cmp
jns
cwtl
dec
lods
xor
clc
sbb
test
add
cmpsl
jmp
hlt
jl
int3
out
lds
les
dec
stos
xor
cmpsl
dec
cmpsb
pop
fcoms
sahf
in
xor
aad
nop
add
aam
test
jne
ret
sbb
jmp
sub
loope
xor
sahf
daa
daa
xchg
pop
or
or
orps
rorb
and
xchg
adc
in
mov
xorb
fstps
jmp
or
pop
jmp
in
enter
inc
cltd
jecxz
mov
mov
test
sub
push
lcall
sub
divl
imull
out
sahf
dec
aam
mov
in
mov
cmpsl
in
push
insl
mov
xor
cmpsb
sub
mov
or
add
cmpsl
iret
clc
pop
xchg
ja
es
fwait
into
mov
mov
pop
push
push
lret
lahf
xchg
in
add
push
xor
xchg
loop
cmp
in
loopne
movsb
cmpl
inc
or
loop
es
mov
adc
lods
xor
fdiv
dec
fs
lcall
gs
das
loop
inc
jb
pushf
call
pop
cmpsl
test
dec
addl
mov
in
mov
push
stos
daa
push
nop
fdivrs
push
sbb
movsl
jns
add
fs
push
push
add
dec
mov
out
adc
push
loope
and
movsl
add
clc
pop
pop
sub
f2xm1
adc
lds
add
xlat
fldt
sub
add
cmpsl
cli
mov
push
mov
xor
cmp
mov
fs
out
les
aas
int3
jecxz
xor
roll
aas
out
mov
push
push
mov
mov
or
mov
cwtl
es
xor
fisubs
fwait
rolb
pop
fdivl
inc
add
pushf
mov
and
std
and
sbb
push
mov
pop
pop
nop
scas
adc
jmp
jne
push
cs
ds
jle
cmp
je
jmp
push
push
cld
sbb
pushf
push
int3
sbbb
stos
add
inc
add
mov
sbb
sub
out
push
mov
dec
cmpsb
movsl
test
enter
mov
or
dec
sub
pusha
mov
jmp
aaa
pop
xchg
jp
movsb
xchg
push
xlat
fbstp
mov
jbe
and
xorb
aad
jle
jne
dec
push
mov
push
cmp
cwtl
outsl
fwait
fwait
dec
or
sub
rcll
mov
nop
sahf
xchg
daa
dec
std
xor
and
pushf
and
cmc
push
lea
xchg
in
mov
push
xlat
pop
mov
mov
aam
pop
mov
bnd
pop
fwait
mov
fisttps
addr16
inc
js
mov
fwait
dec
inc
mov
and
out
pop
in
cmc
pop
movsb
mov
bound
pop
cmc
push
dec
mov
out
jbe
bound
movsb
mov
ja
data16
cwtl
mov
xor
xor
jmp
je
push
push
nop
fnstcw
ret
and
mov
or
and
lret
and
pop
sbb
movzwl
cmp
pop
add
out
fbld
movsb
jl
scas
push
mov
outsb
cmpl
pop
lret
mov
xor
adc
pop
push
in
cmp
mov
cltd
jp
xchg
push
push
pushf
push
fcomp
pop
mov
push
mov
cmpsl
subl
pop
pop
dec
into
scas
enter
imull
iret
push
pop
ja
out
sbb
or
in
lds
mov
xchg
jmp
les
adc
dec
jmp
into
push
mov
pop
loop
mov
cmp
and
mul
jnp
jbe
repz
mov
mov
cwtl
out
sub
xorb
adc
pop
fsubp
imul
inc
mov
cmp
sbb
dec
sub
dec
mov
xor
push
test
or
mov
stos
push
mov
gs
lret
jae
imul
sbb
inc
in
mov
mov
shll
cli
lret
lods
pop
cmp
xchg
pushf
mov
sbb
mov
repz
dec
es
pop
push
pushl
dec
inc
mov
cmp
mov
xorb
mov
and
daa
sub
or
mov
jge
xor
mov
xor
mov
loope
push
leave
pop
mov
xor
cmp
and
add
add
xchg
clts
dec
scas
push
mov
in
nop
lds
dec
mov
adc
jno
cmpsb
rorb
int3
add
loope
outsb
and
int3
push
mov
lods
mov
and
mov
push
sub
sub
ffreep
mov
cmpsl
push
test
mull
and
in
mov
scas
movsl
cld
adc
adc
mov
or
test
mov
pop
mov
xor
or
inc
out
call
mov
negl
push
enter
pusha
adc
mov
jbe
movsl
je
roll
arpl
push
pop
adc
sub
xchg
vpmaxsw
mov
cmpsl
pop
mov
repz
dec
insb
push
add
outsb
dec
sbb
in
mov
add
mov
rolb
mov
lret
or
push
mov
aad
ss
je
fisttps
fs
mov
add
dec
daa
dec
and
jl
neg
loope
add
pop
mov
mov
jb
cmp
cli
cmpsl
aad
movsb
sti
lds
jg
inc
outsl
xchg
scas
or
lret
je
popa
imul
mov
cli
sub
popa
es
push
mov
sbb
rcl
pop
test
push
pop
or
lret
pushf
sbb
ljmp
in
mov
dec
sbb
xor
or
ja
inc
lcall
inc
out
and
mov
add
dec
fs
pop
or
push
push
mov
xchg
fdivp
xlat
or
mov
and
stos
add
aam
aam
enter
rcrl
arpl
sub
nop
cld
stos
movsb
jns
movsl
outsb
mov
jmp
fsubrs
in
insb
jnp
jno
das
out
and
mov
mov
movsl
push
out
inc
jg
outsl
je
aas
xchg
in
adc
add
xchg
mul
jb
jns
push
jecxz
movsb
push
stos
and
lahf
fsub
mov
addb
or
push
jb
inc
mov
adc
sub
scas
icebp
push
push
mov
test
adc
push
and
nop
cmp
cld
and
popl
pop
pop
jno
inc
das
fidivs
inc
cmc
dec
test
test
mov
cmp
jb
fmull
sahf
pop
sti
mov
repz
mov
mov
push
jno
xchg
ljmp
shlb
xchg
mov
repz
xchg
or
push
lods
xchg
jle
dec
in
and
fistps
lcall
jns
cmpsb
mov
pop
add
push
cmp
pop
cmp
int
jae
sub
out
jmp
out
out
ret
jb
ss
xor
sbb
fsub
push
push
cmp
arpl
mov
mov
xchg
inc
fwait
pop
xchg
rcll
scas
scas
jge
adc
je
cmp
dec
repz
cmc
popf
shl
jl
xor
pop
xchg
mov
ret
mov
aaa
loopne
repz
push
cmpsb
sub
or
stc
or
mov
sub
in
sbb
xchg
add
xor
and
ja
movl
fcompl
push
les
mov
add
cld
sub
repnz
or
dec
cld
cmpsl
in
xchg
loopne
mov
dec
bnd
cmp
dec
or
hlt
insb
leave
xchg
cltd
mov
hlt
dec
jns
cltd
cli
ret
dec
addl
push
jnp
loopne
repnz
fiadds
into
sbb
leave
dec
in
push
and
xor
dec
mov
ss
ret
ret
movsl
ja
mov
pop
test
fcompl
push
sar
test
add
popfw
adc
loop
loop
push
arpl
push
mov
pop
loope
rcrl
pop
ss
fldenv
and
sub
inc
ja
sbbl
jnp
xchg
loopne
cmp
inc
into
xor
movsl
push
stos
nop
fisubs
mov
ja
mov
ljmp
jge
jbe
pop
negl
sbb
jo
ljmp
scas
loope
xchg
imul
xchg
dec
nop
mov
test
or
adc
xlat
aam
mov
nop
push
pusha
std
rclb
sbb
je
push
dec
xchg
das
mov
pop
gs
scas
rcrl
push
cwtl
add
sub
add
add
adc
repnz
fiadds
or
subl
mov
stos
fcompl
jp
sbb
jbe
movsl
pop
stos
mov
jno
pop
mov
fldenv
roll
cmp
jo
sbb
pop
movsb
xor
iret
add
scas
jmp
cwtl
out
ret
sbb
mov
sub
xor
mov
inc
jmp
push
pop
xchg
out
and
pushf
push
aas
arpl
out
inc
sub
mov
inc
xor
insb
dec
cwtl
jnp
pop
insb
sbb
cmc
lret
xchg
dec
testl
xor
xor
iret
push
scas
cmp
scas
mov
add
jle
ljmp
jne
xchg
in
mov
jae
add
insl
jns
mov
sub
inc
or
in
mov
data16
or
arpl
in
add
adc
inc
and
xchg
or
mov
xchg
jns
push
test
outsl
mov
daa
xchg
mov
inc
test
xor
xchg
or
add
cmp
add
adc
outsb
push
dec
sti
cmpsl
in
mov
xorb
iret
or
popa
or
xchg
notb
push
arpl
fisttpl
mov
mov
sarb
jnp
insl
xor
orb
fwait
jno
hlt
shrl
rcll
xchg
xchg
inc
push
mov
jmp
shlb
xor
sub
xor
int3
or
sub
xchg
ficoml
pusha
out
lds
pop
and
rcrl
pop
dec
test
das
in
cmp
sub
cmp
sbb
jbe
adc
xlat
in
add
stos
xor
enter
icebp
nop
jbe
inc
jge
enter
popf
into
adc
pop
push
jnp
and
dec
loopne
in
pushf
repz
jnp
aaa
scas
shrb
daa
dec
gs
test
pop
in
popf
loop
sub
xchg
sub
cmp
lahf
repz
mov
cmp
mov
dec
cmpb
or
or
aaa
insb
ret
enter
xchg
add
xchg
pop
lds
add
fwait
xchg
enter
cmc
rorb
jbe
add
mov
xlat
adc
pushf
repz
leave
push
adc
adc
jecxz
add
lea
imull
pop
xor
sbb
out
adc
inc
mov
xor
inc
mov
movzwl
inc
xchg
ret
xchg
fistl
std
stc
xor
cmp
pop
cli
push
fdivs
dec
daa
mov
jl
and
hlt
xor
repz
pop
aad
movsl
pusha
mov
cmpsb
sbb
jp
jp
in
stos
inc
lahf
lret
pop
in
scas
lret
add
scas
xor
out
stos
push
mov
mov
dec
jecxz
shlb
mov
aad
or
xchg
mov
adc
pop
loopne
out
xlat
rcr
mov
jns
bts
shll
call
mov
ret
in
xor
mov
stc
sahf
lds
aad
push
and
mov
cltd
lock
in
ljmp
jnp
movsb
and
test
repnz
jbe
xor
roll
mov
bound
out
inc
dec
sbb
aam
xor
dec
push
lock
cmpl
sbb
sbb
mov
sbb
fsubl
push
addb
rolb
movsb
dec
inc
push
xchg
add
inc
push
jmp
inc
or
mov
xchg
add
aam
xchg
mov
dec
test
xchg
lea
fnstenv
xor
add
or
or
jle
into
push
xchg
fidivrs
cmpsb
mov
call
xor
cs
or
shlb
mov
lods
xor
inc
std
add
inc
jbe
fwait
shrb
imul
add
pop
adc
insl
mov
imul
sub
rorb
shrb
in
es
push
cmp
dec
cmpsl
cs
fcmovnbe
bound
xchg
inc
jg
jg
add
pusha
inc
out
mov
inc
inc
mov
inc
scas
sahf
inc
cmp
mov
xor
in
xchg
popa
xchg
cmp
add
lods
ljmp
adc
sbb
insb
push
mov
cmc
mulw
mov
aas
dec
in
lret
mov
divl
pop
addb
add
push
jns
and
xchg
mov
pop
arpl
xor
or
or
imul
push
pop
icebp
jle
push
ja
add
or
jecxz
mov
push
negl
dec
or
add
sub
stos
outsb
loope
pop
add
jp
or
aam
fwait
movsl
scas
fwait
dec
mov
mov
push
jp
testl
stc
xorb
loope
adc
in
mov
cmp
cmp
push
frstor
push
nop
cld
fiaddl
cld
clc
mov
cltd
adc
mov
pop
mov
imul
mov
nop
add
test
xchg
jmp
or
cli
mov
lret
or
add
mov
clc
lcall
incl
pop
push
cmp
mov
imul
adc
and
dec
xor
fdiv
pushf
jecxz
aam
mov
push
popa
xor
or
add
rcrl
jle
je
out
outsb
lcall
fs
cmp
sub
imul
daa
dec
adc
pop
lahf
dec
pop
mov
fld
sbb
test
sbb
adc
add
out
xchg
mov
jge
push
ficoml
pushf
pop
push
movsl
loopne
push
subl
icebp
pop
shr
hlt
jp
push
lods
add
pop
add
push
mov
ds
movsb
sti
fcomp
cmpsb
insb
lcall
cmp
add
xor
pop
ret
shl
es
lahf
inc
testb
adc
mov
mov
fwait
dec
adc
or
push
and
iret
shlb
lea
int3
adc
out
hlt
pop
mov
add
insl
stos
and
inc
cvttps2pi
fistl
fbld
adc
cmc
pushf
adc
inc
cmc
sub
jnp
cwtl
pop
mov
cmp
jl
ljmp
xchg
dec
and
call
movsl
cwtl
pop
mov
jge
lcall
xor
pop
data16
insb
push
les
fbstp
dec
ljmp
jae
js
mov
outsb
pop
push
icebp
or
outsl
test
cmp
pop
lret
ret
out
je
jp
inc
push
or
jo
adc
jle
cld
test
xchg
xchg
inc
cltd
or
and
arpl
mov
dec
push
mov
dec
xor
cltd
inc
jmp
outsb
aad
enter
sbb
mov
and
cmp
imul
mov
clc
jecxz
out
orb
xor
and
data16
inc
mov
mov
and
push
dec
sbb
inc
mov
sub
pop
xchg
pop
mov
fistl
daa
cmc
movsbl
and
in
cmpsl
hlt
inc
ljmp
add
mov
push
lds
sbb
bound
add
mov
sbb
xchg
inc
xchg
loopne
mov
dec
cli
push
cmpsb
mov
dec
push
orb
loope
out
and
pushf
inc
mov
mov
sti
add
icebp
push
out
jp
cld
orl
lea
aam
mov
std
mov
sarl
jmp
sub
and
jecxz
inc
jecxz
mov
fwait
rcrb
pop
xor
fstl
int
mov
mov
sub
jb
in
gs
loope
pop
pop
sub
mov
movsl
add
cli
xor
dec
sub
jmp
out
pop
push
xor
arpl
sbb
repz
pop
dec
insl
les
push
stos
push
insb
mov
dec
pop
stos
dec
pop
jbe
lods
pop
flds
fistl
xchg
cli
outsb
mov
repnz
adc
mov
mov
jecxz
je
sub
adc
jp
sbb
mov
or
je
scas
cmc
dec
imul
ficoms
push
cltd
jg
and
xorl
add
jmp
jge
icebp
or
test
lcall
fisubrl
mov
add
jle
in
pusha
xchg
lds
dec
scas
fistps
lret
stc
imul
dec
xchg
xor
rorb
mov
popa
xchg
inc
push
or
movsb
cmpsl
test
dec
cmpl
inc
lret
push
test
enter
dec
or
lds
dec
cwtl
pop
pop
xchg
pop
push
std
sub
imul
roll
or
lock
inc
mov
in
push
enter
xor
data16
push
mov
repnz
sti
rcrl
daa
or
jmp
daa
sar
mov
inc
xchg
dec
bound
lret
gs
push
icebp
pop
mov
sub
cmc
ljmp
popa
dec
or
mov
das
rol
sub
jg
cmp
xchg
rcrl
pop
mov
cltd
mov
sarb
outsb
stos
daa
push
mov
jl
inc
mov
cmp
sbb
fidivs
push
cld
movsb
repnz
scas
mov
dec
push
stos
jmp
mov
and
jle
add
sbb
jecxz
adc
mov
sbb
dec
xor
les
add
mov
push
xor
ficomps
sbb
mov
mov
sub
ljmp
add
pop
movsl
sub
or
in
adc
cs
lretw
jns
pop
loope
push
pop
nop
add
cli
mov
addb
leave
pop
inc
push
jge
pop
stos
pop
gs
out
xor
pop
dec
outsb
in
add
cmc
and
jb
lds
xchg
int
stos
pop
cmpsl
in
xchg
filds
aas
call
push
xor
push
std
dec
jbe
and
mov
pop
push
fcmovnb
push
push
jecxz
push
fimull
iret
xlat
jmp
aam
inc
xchg
lock
add
sarb
mov
dec
sti
push
fwait
jbe
inc
shll
mov
bound
sbb
bound
pop
gs
out
dec
xchg
leave
push
or
jb
std
sbb
cmp
in
push
mov
push
jnp
pop
aaa
mov
mov
js
inc
ljmp
xor
and
xlat
and
lret
jne
pop
rorl
shrl
psrlq
push
out
xchg
sub
loopne
mov
das
aad
sub
inc
lret
add
in
cmp
sbbb
adc
push
mov
sbb
or
lods
sub
fisubs
or
lds
pop
subb
lret
mov
pop
sub
pusha
push
test
in
mov
cmp
stc
push
adc
and
mov
jge
sti
popf
jle
fsts
test
jp
test
jle
cld
pop
cmpsb
sub
popf
jle
shrb
sti
popf
jle
lock
sahf
mov
push
mov
mov
sbb
adc
lods
inc
push
jbe
arpl
fnstcw
out
stos
and
mov
push
jmp
daa
xchg
add
inc
lods
mov
dec
sub
xchg
sarl
mov
aas
loopne
jl
jb
fs
cld
xlat
mov
pop
cmc
sbb
pop
fcmovne
sub
mov
xchg
pop
sti
test
dec
inc
push
ja
jbe
push
jne
push
mov
lret
jae
idivb
xor
pop
nop
int
push
scas
jns
int
int
sbb
repnz
mov
jge
pop
mov
cltd
lock
repnz
movzwl
sub
and
daa
cli
push
push
int
jo
push
cltd
std
movsl
sub
in
pop
pop
cmp
adc
fsts
xor
adc
xor
cli
push
insb
adc
inc
jp
insb
dec
fcompl
into
adc
pusha
ja
pop
imul
xchg
mov
jb
adc
xchg
push
jb
xor
lea
sbb
in
jmp
cmc
cltd
sbb
out
xchg
aas
cmpsb
sub
dec
hlt
cmp
sub
mov
push
mov
cmc
xchg
mov
sbb
sbb
sub
cmp
out
inc
aad
cltd
rcrb
movsb
pop
repz
sub
in
repnz
faddp
insl
fldcw
inc
pushf
jle
cmpsb
test
mov
cmp
pop
outsb
es
dec
or
push
or
lock
sti
push
movsl
loop
mov
xorb
and
jmp
pop
add
xchg
sahf
repz
stos
filds
aas
mov
inc
loop
fs
std
xor
das
dec
sub
sti
xor
int
mov
fwait
inc
out
inc
jle
add
push
jae
outsb
cmp
or
and
pop
jmp
mov
xlat
gs
cmp
cmpb
addl
shl
jne
ret
pop
dec
xor
test
mov
jl
insl
outsb
dec
fwait
and
push
dec
adcl
push
jecxz
jmp
jge
add
out
mov
mov
out
dec
xor
and
lret
cmpb
fs
dec
cmpb
roll
iret
ja
add
sbb
jno
and
mov
pusha
adc
mov
mov
lea
pop
xchg
or
popf
out
mov
leave
jg
inc
lcall
mov
stc
das
mov
dec
jge
xor
mov
icebp
das
mov
popl
rcl
arpl
cwtl
mov
dec
ljmp
enter
adc
or
into
orl
jle
pop
sarb
lods
push
sub
pop
push
or
jno
xchg
jmp
inc
sahf
add
and
inc
xchg
or
jmp
pop
mov
jge
jmp
fcoms
adc
mov
arpl
adc
and
rorb
xchg
hlt
in
pop
stos
pop
js,pn
pop
inc
jmp
inc
js
cltd
mov
jp
xor
out
sub
gs
jbe
test
gs
sub
xor
inc
xchg
ds
mov
push
scas
jno
aad
out
ja
aad
mov
fbstp
mov
or
pop
fs
int3
push
nop
fistpll
xchg
mov
rcrl
inc
and
dec
scas
cmp
lods
push
sbb
sarb
jmp
sub
xor
pop
loope
pop
adc
cld
divb
mov
sub
lods
or
leave
adc
aad
mov
in
mov
out
loopne
inc
xchg
lret
mov
xchg
cmp
out
das
je
lods
push
lahf
xchg
dec
les
loope
cli
test
inc
push
dec
pop
loop
addr16
std
test
lea
push
add
xchg
and
repnz
xlat
ficompl
inc
cmc
dec
shlb
push
stc
loopne
xchg
adc
outsl
test
xchg
sbb
jnp
insb
dec
adc
rol
jge
out
push
and
xchg
insb
xchg
xchg
sbb
push
insl
cwtl
stos
and
or
fldcw
push
inc
nop
ficoml
inc
mov
and
sbb
movsb
dec
test
fcoms
arpl
out
pusha
imul
int
xchg
jmp
push
neg
adc
scas
pop
mov
insl
cld
dec
sahf
dec
stos
mov
imull
push
roll
rclb
inc
pusha
imul
cmp
pop
adcb
jmp
xchg
push
jmp
mov
jo
adc
leave
add
push
xor
inc
dec
inc
xor
sbb
cmc
push
js
push
inc
push
jne
pop
pop
xchg
pop
inc
mov
cmp
pop
cmp
and
dec
mov
cmp
push
push
fisubl
aad
cmpb
lret
out
push
sub
dec
mov
push
js
and
sbb
jecxz
pop
out
testb
cmpsb
push
jbe
mov
loop
sub
cmp
call
mov
mov
jge
or
push
sbb
inc
addr16
test
pop
dec
test
scas
ss
sub
xchg
inc
dec
imul
push
mov
arpl
push
sbb
and
arpl
xor
lret
jg
jne
xor
mov
add
push
jecxz
in
stos
sarb
mov
xor
in
cmpsb
dec
clc
jecxz
xorl
sub
jp
xchg
in
loope
int3
cmp
push
xchg
mov
xor
pop
scas
mov
cmpsl
test
dec
adc
pop
xchg
fldl
aaa
insb
mov
pushf
repz
mov
adc
outsl
xchg
outsl
and
adc
iret
or
cs
sub
push
mov
lock
sahf
mov
int3
inc
mov
inc
repnz
stos
push
pop
pushf
push
adc
jo
fcoms
xor
sbb
jae
cmp
mov
mov
jnp
insl
inc
push
call
push
int
mov
popl
incl
dec
icebp
dec
fwait
ret
das
data16
cmp
mov
sbb
jle
or
jb
mov
stos
insl
xor
mov
cltd
sbbl
es
outsb
test
or
cmpsl
in
fldl
mov
ss
cwtl
dec
into
mov
push
cld
add
jne
jnp
test
pop
jg
push
pop
std
ds
push
in
je
mov
add
dec
popf
dec
mov
outsb
xchg
sbb
xchg
mov
dec
jbe
imul
insl
push
mov
insb
mov
sbb
push
cmpsl
pushf
mov
shrb
lret
and
push
jge
out
pop
or
pop
pop
cmp
std
cld
mov
sti
cmp
jne
or
aam
lods
popf
cmpsb
repz
repnz
mov
rorl
out
inc
mov
xor
xchg
mov
pop
pop
jge
xor
scas
jl
dec
dec
cli
xor
scas
shrl
sbb
push
inc
fistpll
inc
push
jb
daa
out
test
xchg
pushf
dec
rorb
inc
mov
jnp
jmp
enter
xor
fsts
xchg
or
arpl
repz
stos
pop
inc
jmp
inc
test
sub
jnp
test
es
out
mov
and
xor
push
addr16
aam
jge
jae
pop
cmpsl
shrl
dec
in
addr16
adc
cwtl
aad
jle
arpl
or
movsb
loope
mov
imul
cltd
std
dec
repz
in
pop
sub
imul
test
lret
sub
inc
pop
add
andb
add
xchg
jne
rclb
ret
loop
push
aaa
pop
xor
and
cli
lahf
add
ss
iret
adc
mov
and
jge
jb
cmc
dec
fwait
mov
mov
xchg
dec
adc
sub
xchg
ljmp
pop
ret
and
push
stos
pop
mov
fisubrl
orb
inc
mov
rcrb
sbb
sbb
fdivrs
aad
xchg
scas
push
mov
cmp
repnz
lods
lods
shr
inc
pop
pop
dec
jge
pop
fcoml
mulb
push
inc
call
popa
call
mov
outsl
xchg
outsl
es
dec
or
addr16
addr16
jg
test
and
das
std
inc
lds
sub
outsl
pusha
inc
es
mov
xorb
dec
lahf
aam
dec
adc
mov
pop
lret
daa
lcall
jge
jae
pop
cmpsl
shll
outsl
movsb
iret
push
xchg
fdivrl
xor
cmpsl
test
pop
enter
jle
dec
icebp
es
cli
and
aad
sub
add
add
cmpsl
in
mov
push
adc
repnz
dec
xorb
hlt
push
icebp
sbb
in
jo
movsbl
jns
cwtl
xor
pop
xchg
nop
int
xor
dec
lods
inc
jnp
pop
in
aam
adc
lea
sahf
cwtl
stc
cmp
jb
xlat
lods
leave
sbb
nop
out
testl
daa
dec
pop
xchg
ljmp
mov
jne
icebp
cltd
into
and
jecxz
pop
adc
dec
mov
stos
mov
or
aam
int
decl
clc
sub
ret
cmc
jns
rcrb
stos
adc
sbb
bound
dec
dec
inc
pop
cltd
dec
fxch
add
jmp
add
inc
into
add
fimull
xchg
stc
mov
xchg
lock
adc
and
pop
xchg
pop
lods
or
std
ret
cmp
inc
fs
outsl
push
jne
sub
push
mov
jo
shrb
rclb
into
pushf
inc
enter
xchg
inc
xlat
mov
es
sub
testl
or
xchg
ret
mov
adc
or
cmpsl
in
ret
sbb
subb
and
stos
push
push
int3
xor
addr16
fdivr
push
lods
xchg
js
test
js
jp
xchg
inc
mov
adc
outsb
add
xor
in
daa
lods
aam
lret
in
and
repnz
mov
mov
shrl
orl
mov
xor
outsb
mov
xor
cmp
ds
cmp
adc
add
movl
test
in
scas
jo
cmp
mov
xor
lahf
es
and
jae
aad
push
jno
push
int
and
adc
lods
mov
pop
rdmsr
mov
cli
mov
insl
sbb
sbbb
pushf
sbb
clc
fstpl
cmpsl
cs
insl
mov
xor
adc
subb
sub
stc
lods
add
popa
adc
setle
pop
fdivs
stc
insb
insl
adc
pop
mov
add
scas
mov
xchg
cs
push
out
pop
cs
repnz
jmp
and
aas
xchg
sub
add
cmp
and
dec
mov
add
jle
enter
sub
xchg
rcrl
dec
rol
dec
test
push
and
aas
and
pop
push
std
xor
adc
push
push
lods
dec
mov
adc
push
insb
inc
lahf
roll
loopnew
popa
mov
rol
stos
pop
orl
dec
aad
sti
les
dec
repz
xor
in
sbb
sbb
js
cmp
or
imul
movsl
fisttpl
sub
lcall
dec
jbe
mov
fildll
adc
sbb
jmp
cmp
iret
sub
ret
sub
push
sarb
cli
push
stos
test
pop
rol
cmp
sub
rcll
push
sub
sarl
add
dec
sbb
shl
cmpb
shrl
loop
imul
fsubr
push
mov
inc
mov
fmul
iret
cmp
int3
jbe
lcall
push
cmp
test
cmp
push
xor
aaa
inc
and
rdmsr
mov
ficoms
add
cmp
dec
divl
std
test
packssdw
outsl
push
iret
or
in
xor
shll
sub
sar
fnstenv
movsb
fistpl
xchg
mov
mov
and
mov
pop
insl
fbstp
xor
lcall
dec
mov
inc
ljmp
fwait
je
mov
mov
inc
movsb
shl
cmpsl
in
xchg
loopne
mov
into
add
sahf
or
aad
cs
or
and
mov
inc
jmp
loope
mov
add
inc
insl
sbb
negl
cwtl
dec
cmpsl
sarl
ja
inc
mov
mov
popa
or
and
sub
scas
push
push
rol
jno
inc
sahf
test
jne
shrb
repz
insl
cmpsb
dec
mov
xchg
cmp
bound
movsl
leave
sub
loop
rclb
rcr
mov
xchg
iret
or
movsb
dec
orl
stos
add
stc
or
fnstenv
mov
movsb
adc
inc
jle
inc
mov
mov
cs
push
mov
sti
imull
aam
stos
or
test
push
cmp
adc
xorl
test
nop
add
int3
in
into
mov
in
into
mov
pop
cmpsb
shlb
hlt
sub
adc
push
rolb
aaa
imul
insl
xor
xor
or
aad
mov
in
fbstp
ja
test
sti
mov
mov
movsl
sbb
jnp
inc
movsl
adc
mov
mov
sub
jle
lret
sti
stos
loope
ljmp
test
ds
sbb
mov
jecxz
ja
repnz
dec
xchg
xor
lret
or
loopne
es
mov
push
mov
mov
mov
mov
jae
sbb
lret
pop
or
mov
xor
arpl
in
iret
notl
adc
push
push
fisttps
mov
mov
mov
ja
xor
scas
shrb
xor
pop
xchg
inc
popa
inc
sub
jne,pn
andb
jne
pop
push
lcall
and
and
push
enter
jmp
in
inc
mov
pop
pop
movsl
xor
or
outsl
cld
sub
cld
push
add
jno
inc
sahf
xor
rclw
fimuls
out
push
jecxz
jmp
mov
in
pushf
inc
cli
scas
ret
aas
xchg
aaa
test
cs
push
ficoms
ret
pop
xchg
mov
xor
xor
aaa
jae
aaa
mov
jbe
xlat
dec
hlt
xchg
scas
in
fnstcw
inc
popa
pusha
stos
jo
inc
lret
add
lock
test
fildl
and
pop
pop
pop
andb
call
and
andb
push
lcall
nop
test
sti
test
pop
inc
popf
int
test
dec
es
ja
and
loop
fisubs
push
pushl
pop
out
xchg
ret
stos
add
lcall
dec
sbb
mov
pusha
and
aaa
in
and
aas
xchg
jnp
mov
aaa
mov
fmull
push
insl
mov
xor
out
test
add
lahf
leave
int3
xor
mov
popf
cltd
xor
stc
push
test
mov
ret
repz
push
lret
cmp
and
and
or
les
jo
xor
aaa
es
fwait
sbb
push
int3
fidivrs
pop
pop
loope
xor
mov
js
fmuls
mov
addl
rcrb
xchg
scas
jmp
sbb
arpl
push
push
es
mov
fimull
push
cmpsl
test
dec
sbb
loope
lea
mov
jae
adc
push
sub
mov
push
and
fimull
inc
leave
fdivrs
andl
out
jns
jg
out
leave
mov
inc
daa
push
out
sub
cmp
out
stos
and
dec
sbb
jmp
inc
test
xlat
int
xchg
rcrb
jl
jb
into
push
xchg
fnstcw
je
idiv
hlt
sbb
jns
xor
call
decl
out
and
cmp
cmp
mov
mov
lods
lret
sbb
imul
jmp
xchg
mov
rclb
iret
inc
dec
mov
stc
xchg
mov
gs
jge
negl
ljmp
lds
cmpsb
jne
clc
dec
cmp
xor
push
sub
out
aaa
jbe
dec
test
push
mov
outsl
pop
arpl
repnz
mov
sbb
mov
lods
jge
xor
jmp
jp
cld
push
sub
pop
jnp
cmp
lea
ficoms
xchg
stos
push
fcom
mov
lcall
repz
and
ljmp
pop
or
insl
movsb
jge
mov
mov
int
sti
iret
aad
jne
cltd
cmp
lods
add
dec
pop
adc
sub
gs
inc
xchg
inc
int
or
bound
in
clc
adc
mov
xor
gs
pop
insb
pop
sarl
out
lods
ja
fists
dec
cld
stos
pop
mov
outsb
push
aas
xchg
fsubrs
das
out
pop
mov
dec
add
mov
in
outsb
sbb
add
mov
push
lds
add
push
adc
jge
mov
nop
rcl
lock
call
jb
stos
or
es
mov
pop
fcompl
and
int
jp
test
push
pop
cld
lods
cmpsl
rcll
cmpsb
das
push
jge
dec
insb
mov
mov
cmp
cmpsb
gs
ljmp
or
out
cmpsl
in
xchg
loopne
mov
dec
fwait
inc
lcall
pop
push
loopne
fmuls
pushf
inc
loope
pop
leave
xchg
jbe
jae
jns
lcall
fiadds
push
add
ds
aad
mov
mov
jbe
lock
aam
aad
dec
push
aaa
dec
rorl
and
adc
sub
cmc
or
sbb
loop
jp
push
in
lods
scas
push
mov
push
pop
pop
fwait
cmc
lea
rcr
pop
mov
adc
or
outsl
dec
addr16
clc
loop
mov
adc
jmp
push
xor
adc
add
arpl
xchg
test
scas
mov
iret
pop
push
jl
adc
pusha
jae
jnp
sub
fstl
imul
adc
insl
pop
cltd
pushl
les
loope
dec
repz
xchg
sti
scas
pop
in
or
xor
pop
cs
inc
pop
les
mov
mov
push
mov
sbb
sub
mov
or
imul
fisubs
cli
fidivrs
nop
and
lahf
xor
lds
std
jg
addr16
icebp
es
shlb
lock
addr16
out
or
and
and
sbb
icebp
xchg
jmp
jb
je
adc
lods
loop
sub
imul
mov
push
add
repnz
cltd
rorb
es
jnp
add
bound
stos
and
test
in
adc
test
movsb
out
mov
or
mov
lret
movsl
out
in
sub
and
mov
pop
dec
and
inc
inc
jns
cmpsb
frstor
out
rorl
push
ja
xor
insl
outsl
xor
jbe
in
sar
xchg
sbb
and
or
adc
in
pop
pop
lods
stc
and
mov
jle
sahf
pmuludq
test
stos
negl
jno
aad
bound
clc
dec
in
inc
hlt
pop
inc
mov
xchg
loopne
push
call
cmpsl
push
popf
xchg
jge
add
adcb
mov
jnp
call
out
shrb
inc
insl
and
movsl
mov
push
or
or
lds
pushf
and
or
jl
mov
out
jb
popa
or
jb
scas
xor
mov
aaa
jecxz
pop
pop
mov
ja
movsb
add
cmp
inc
mov
push
dec
sbb
mov
jbe
xchg
sbb
add
out
jnp
je
sbb
stc
adcl
lret
xchg
sbb
fisubl
xor
aaa
xor
sub
push
pushf
and
and
fdivr
push
dec
jl
pop
adc
outsl
pop
cmc
mov
sub
fldt
mov
sbb
pop
lock
in
sbb
and
dec
subb
push
repnz
aad
push
xchg
add
loope
dec
and
fsubl
imul
sub
movsl
jge
pop
jg
cmp
ss
adc
test
lods
cwtl
fdivr
addr16
and
xchg
sub
outsb
arpl
xchg
lock
push
stos
or
lahf
jb
cmpsl
shrb
lock
sbb
and
mov
ss
xchg
negb
clc
and
in
sbb
xchg
mov
xor
cmp
or
jo
xor
adc
push
les
xchg
dec
push
push
sahf
ret
sbb
mov
jge
jno
jbe
test
pop
jge
scas
sbb
mov
inc
pop
lea
inc
stc
mov
adc
lock
into
jge
inc
jmp
stc
xorb
scas
cmp
lahf
push
fstl
cmpsl
cli
adc
das
mov
jl
repnz
xorb
imul
add
mov
sub
dec
inc
out
and
rorb
inc
mov
cmovl
loope
movsl
cs
xchg
sbb
fs
adc
push
daa
pop
test
xor
adc
sbb
notl
jo
int3
push
nop
fcmovbe
sbb
arpl
adc
cmp
push
and
outsl
loopne
outsb
lcall
rclb
mov
add
add
xor
xor
inc
adc
cmpsl
in
nop
mov
cmp
or
psubusw
int
xchg
sbb
sti
or
insb
adc
aad
jae
sbb
incb
cmc
sti
mov
xor
cs
mov
fistps
xchg
jmp
push
mov
and
jo
and
mov
loop
or
mov
cld
mov
pushf
dec
mov
cli
sbb
pop
mov
sbb
adc
pop
jecxz
ds
ss
sbb
in
cltd
lret
push
mov
outsb
subb
jo
push
insb
adc
icebp
cmpsl
outsb
loop
popf
aam
xchg
aas
test
mov
sahf
aaa
repz
xchg
pop
std
xchg
xor
std
push
jmp
sbb
or
lds
dec
mov
inc
sarl
mov
adc
popf
stos
idivl
fwait
addl
pop
mov
pop
jl
les
dec
cmc
aad
jnp
clc
sbb
xchg
insb
push
mov
xchg
cmp
out
int3
add
mov
jg
ljmp
scas
inc
push
aaa
jg
push
adc
sub
lds
dec
stos
fbld
or
add
fiadds
or
subl
or
in
inc
inc
pushf
mov
mov
xorl
adc
out
je
sbb
push
xlat
sti
shlb
push
sub
repnz
mov
in
sbb
push
out
cmp
out
xchg
cmp
ret
sbb
mov
push
jg
push
outsl
movb
and
adc
jne
jae
test
jne
mov
fwait
pop
leave
xchg
dec
or
loope
mov
xor
bound
pop
inc
pop
or
mov
mov
ret
out
divl
adc
arpl
push
inc
into
sbb
popa
mov
scas
pop
in
test
mov
inc
clc
mov
aam
sub
inc
popf
repnz
add
mov
stos
lods
cmp
shrl
jmp
sbb
cld
cmpl
loopne
sub
adc
lock
jmp
mov
dec
test
les
jecxz
pop
cs
lock
adc
fldl
shrb
xchg
jne
insb
lods
loop
nop
int
jp
hlt
ss
push
sti
push
movsl
cld
sub
adc
bnd
inc
repz
pop
loope
cld
mov
out
inc
jns
mov
sub
aad
mov
ret
cmp
jb
add
dec
add
and
in
sub
adc
das
push
mov
xor
sbb
cmpsl
test
dec
sbb
std
sub
gs
neg
out
sub
fldenv
iret
add
cmc
mov
dec
ss
mov
push
sub
lret
sbb
mov
ret
dec
jmp
dec
outsl
mulb
mov
fs
dec
iret
push
lods
jp
pop
xchg
int3
je
pop
mov
sbb
movsl
jg
sbb
sub
lds
loopne
sarl
cmp
push
xchg
lret
sub
in
dec
imul
mov
imul
xlat
or
cmpb
jae
inc
ret
imul
cmpsl
test
xor
mov
cmpsl
es
hlt
xor
adc
xor
lea
lds
rcr
dec
pop
add
jnp
ds
add
iret
push
dec
stc
sbb
jne
hlt
add
adc
fxch
movsb
dec
jle
sbb
je
cmp
sbb
cmc
jl
ret
dec
scas
mov
jle
bound
cltd
fwait
fs
or
mov
fsqrt
test
dec
jp
in
inc
cltd
int
fdivrs
mov
adcl
mov
xchg
out
cmp
test
inc
jmp
outsl
movsb
push
ficoml
pop
mov
and
dec
aad
sti
cmp
gs
adc
sub
pop
mov
cmp
iret
ja
rcrl
cmp
cmp
push
pushl
adcl
lcall
std
stc
jbe
cmp
ss
dec
jne
pop
loopne
cld
dec
stos
pop
mov
cmpsb
jl
arpl
insl
sbb
adc
je
test
xchg
dec
adc
adc
lds
sbb
adc
stos
out
mov
cmp
add
push
mov
inc
lahf
push
scas
shrb
mov
aaa
mov
cld
push
pop
sub
and
cmp
add
gs
adc
cmp
cli
xlat
test
jle
or
mov
andl
gs
xor
mov
sub
int3
and
push
xchg
fiadds
pop
pop
xchg
lcall
xchg
fiadds
cmp
daa
jmp
cltd
test
loope
mov
and
movsl
subb
sub
test
loope
or
aad
stos
out
pop
aas
stos
cmp
pop
add
push
insl
mov
das
push
je
mov
pop
lahf
aad
jbe
fdivl
adc
das
popf
aam
in
jno
lods
sbb
out
jl
sahf
dec
cld
push
mov
inc
out
cmpsb
fimull
insb
pop
mov
xor
into
sub
sub
sub
jo
ljmp
arpl
push
sbb
lds
cltd
sub
out
ret
out
cmp
xor
sub
push
filds
sub
dec
mov
sbb
stos
arpl
pop
lret
add
sbb
cmp
jne
cmp
inc
xor
mov
dec
lea
sub
dec
jmp
add
dec
inc
push
loop
cmp
xlat
pop
fwait
roll
cmp
pushf
ret
dec
rorl
nop
icebp
sub
mov
int3
add
les
xchg
and
add
dec
in
dec
adc
inc
lret
push
test
enter
fcmovbe
adc
stos
clc
add
scas
lret
dec
or
inc
loop
call
std
cmp
xlat
imul
xor
dec
mov
xor
arpl
cmp
fiaddl
cmp
neg
mov
frndint
push
test
push
dec
test
sub
sub
fst
push
cmp
mov
push
frstor
dec
jg
xor
sbb
xchg
jno
xor
jbe
xchg
imul
ljmp
lock
xchg
jmp
xchg
push
mov
jle
flds
cmp
and
and
mov
and
fimuls
dec
mov
cmp
and
bnd
dec
jl
stos
or
ret
out
push
and
call
cmp
fs
mov
mov
imulb
mov
daa
ret
push
fiaddl
lods
add
test
xchg
cmp
inc
mov
push
cmp
jnp
cmp
lea
in
xchg
out
in
push
movsl
pop
sahf
rcrl
icebp
bound
sbb
xchg
sub
ret
and
cmpsb
or
lret
xchg
idivb
dec
andl
sbb
mov
mov
inc
sbb
outsb
sbb
push
dec
cmp
inc
inc
xchg
or
aas
bound
nop
cmp
dec
mov
test
scas
pop
cmp
rolb
jne
push
les
or
add
pop
or
lds
dec
mov
mov
stc
jecxz
mov
and
stos
add
imul
push
mov
xchg
adc
adc
inc
fidivs
cs
test
mov
adc
or
push
push
mov
xchg
test
lods
lret
pop
jae
sbb
lods
xchg
cmp
and
push
scas
mov
cmpsl
fildl
bound
shrl
je
cmp
mov
xor
subl
icebp
aas
out
aas
imul
cmp
adc
test
xchg
fstl
imul
sbbb
ljmp
sub
arpl
push
inc
insb
enter
outsl
sbb
das
movsl
loope
rolb
pop
push
jns
aaa
mov
test
push
pushf
andb
or
mov
sti
push
mov
adcb
fdivrl
jg
xor
packssdw
xchg
gs
xchg
sub
or
aad
pop
mov
stos
cli
addr16
aad
jae
cmp
mov
cmp
push
jmp
punpcklwd
xor
xchg
mov
ja
rclb
inc
mov
je
repz
add
xor
ret
into
xor
pop
dec
mov
jecxz
dec
xor
adc
push
stos
add
icebp
xchg
pop
push
mov
sbb
mov
cld
and
clc
jb
sub
hlt
dec
pop
xchg
out
jnp
mov
cmp
xchg
in
test
dec
insl
pop
shrb
fildl
cmp
pusha
jae
sub
or
jbe
movsl
cmp
sbb
sbb
ret
push
mov
in
mov
loope
xor
repnz
push
and
and
jecxz
sub
xor
insb
in
ffree
cmpsb
mov
push
xchg
fldt
scas
xor
pop
mov
add
jecxz
mov
pop
shl
lock
call
sub
fnstcw
jo
and
mov
mov
aad
jmp
cmpsl
test
loope
mov
subb
lcall
fstps
imul
lcall
jns
cmp
xchg
or
fstpt
lret
lds
dec
scas
cld
movsb
push
xchg
jg
inc
mov
cmp
and
pop
dec
mov
push
sub
fstl
push
xchg
mov
mov
add
test
mov
and
aas
jbe
lods
dec
mov
and
mov
push
dec
in
pop
xchg
mov
pop
mov
scas
and
sub
cmp
insb
sbbb
dec
aaa
out
movsb
les
mov
adc
repnz
setge
mov
les
jne
lea
shrl
test
cmp
jmp
mov
lea
mov
lea
popf
inc
in
sbb
pop
mov
push
mov
add
pop
xchg
faddl
imul
in
and
sahf
inc
dec
or
jp
lret
sarl
cmpsb
dec
subl
cmp
mov
add
decl
mov
cmp
stc
icebp
dec
cmp
jbe,pn
mov
outsl
adc
add
mov
mov
dec
adc
sbb
out
pop
or
clc
pop
inc
leave
cmc
hlt
mov
mov
nop
out
arpl
pop
inc
or
jl
pop
mov
dec
mov
dec
sar
and
xchg
loop
les
and
scas
lret
push
fstpl
push
ret
adc
mov
data16
sbb
test
add
push
jne
push
ljmp
mov
add
inc
repz
iret
cmp
pop
repnz
ffree
cmc
cmp
popa
loopne
cmp
data16
mov
xorl
dec
fs
rorb
mov
pop
xchg
rcrl
add
lods
scas
int
aam
cwtl
rolb
sub
push
xchg
mov
adc
lret
ret
adc
mov
cmc
inc
jmp
test
ljmp
dec
jmp
sbbl
les
and
sbb
jae
mov
push
jecxz
sub
sub
sbb
insb
sbb
mov
pop
pop
test
mov
or
sub
dec
dec
sbb
push
pop
jno
imul
or
jmp
pop
imul
mov
dec
sbbb
add
xor
sarb
and
xchg
adc
in
dec
mov
and
add
pop
pushf
ret
sbb
jns
mov
ret
or
push
fldcw
outsl
mov
pop
xchg
cmp
shlb
adc
jecxz
mov
shl
call
push
test
enter
rolb
mov
mov
push
lods
cmp
or
dec
inc
das
add
cmp
sub
mov
inc
mov
dec
adc
cli
xor
mov
stos
xor
pop
gs
push
adc
add
hlt
lret
cmpsl
cld
sub
mov
cmp
jo
sbb
add
mov
jno
xlat
pop
fwait
rorl
aas
je
stos
out
xchg
filds
stos
aam
sub
test
bound
lods
and
aaa
sbb
aas
cmp
rcrb
xchg
ret
push
pop
push
add
jge
sub
out
cmp
lret
mov
sub
inc
pop
rcrb
inc
fwait
out
or
xchg
stos
add
leave
scas
cmpsl
in
xchg
fistps
enter
fcoms
sbb
insl
and
outsb
inc
fwait
shl
dec
inc
jl
jmp
mov
les
add
cmpsb
dec
pushf
inc
or
xchg
jns
orl
aad
shrl
pushf
test
shrl
and
into
daa
mov
sub
xor
mov
imulb
ss
mov
hlt
sbb
jne
gs
mov
in
and
sub
cmpsb
push
gs
add
scas
in
lcallw
dec
das
jmp
enter
xlat
push
lahf
mov
mov
adc
jnp
aas
sub
cld
sub
scas
rcr
cmp
adc
xchg
fwait
cmp
jb
mov
mov
das
xor
mov
rorl
scas
jbe
push
push
fwait
dec
addb
mov
and
leave
sti
in
icebp
dec
cmp
xor
cs
es
push
in
call
movsb
mov
stos
cmpsl
decl
xrelease
repnz
in
leave
rcrl
pop
test
mov
dec
xchg
dec
imul
jno
andl
push
add
adc
aas
xor
scas
roll
popa
mov
rcr
gs
adc
lds
pop
fiadds
pop
xor
pop
sub
sbb
mov
sub
cmp
xor
test
es
popf
mov
fisubs
add
xchg
shr
addr16
shrl
or
sub
pop
mov
jne
add
dec
fidivl
inc
mov
stos
add
leave
sub
cltd
xor
in
xorl
popf
ljmp
cmp
inc
lret
test
pop
mov
xlat
xor
mov
pop
in
hlt
sbb
pop
add
pop
jnp
pop
scas
cmpsl
push
mov
inc
enter
rorl
push
mov
mov
pop
mov
or
pop
mov
add
push
stc
adc
push
movzwl
setbe
pop
jnp
pop
or
inc
xchg
sbb
js
push
fdivr
cmpb
xlat
xchg
fisttps
fldenv
stos
xor
addr16
shll
jbe
mov
shr
pushl
mov
fs
or
arpl
and
je
add
outsl
hlt
loopne
fildll
push
test
and
fwait
mov
mov
inc
loop
frstor
call
fstpt
mov
push
xor
mov
inc
in
or
lret
jae
xlat
incb
aad
outsb
push
dec
lret
pop
hlt
shrb
data16
mov
fcom
sub
xor
fadds
lret
mov
push
data16
inc
shlb
hlt
or
jle
mov
mov
in
dec
in
jns
pop
sahf
aad
mov
sub
mov
or
lods
pop
jecxz
in
xchg
mov
loopne
fcoms
cmp
mov
test
repnz
cmpsb
dec
movsl
out
pop
sbb
nop
bound
andb
stc
push
mov
pop
sbb
sub
cld
cmp
mov
andb
xorl
out
idivl
movsl
add
sbb
lods
dec
rorb
aad
dec
popa
or
adc
dec
mov
jo
dec
fnstcw
push
mov
inc
mov
jmp
test
in
nop
int
ja
insl
mov
cmp
cmp
mov
or
add
mov
cmp
pop
cmpsl
rol
fs
sbb
fldcw
sarl
pop
cmp
es
push
xchg
fnstcw
je
cmpsl
in
fildl
push
pusha
adc
lods
push
pop
mov
loop
fcoml
arpl
mov
inc
xlat
jmp
icebp
sub
fwait
repnz
test
jmp
sti
imul
inc
cltd
dec
sti
orb
mov
nop
mov
pop
mov
test
int
imul
xor
ret
dec
sub
ss
mov
in
aam
cwtl
rolb
cmp
enter
addr16
arpl
mov
mov
int3
and
mov
repz
push
push
sti
call
and
xchg
jno
dec
push
aaa
outsl
cli
in
pop
adc
cmpsb
jge
and
out
je
mov
scas
add
in
or
inc
mov
pop
orl
and
pop
sbb
mov
mov
jo
imul
pop
stos
pop
mov
movsb
call
push
push
mov
scas
mov
push
adcl
call
int3
add
jp
jne
pop
push
jo
mov
xor
add
in
outsb
or
jne
sbb
es
in
xchg
lahf
pop
mov
sbb
sahf
sub
inc
call
out
and
inc
popf
or
out
mov
iret
aam
or
test
push
cmc
adc
std
fsubrl
mov
mov
pushf
mov
xor
out
call
cltd
adc
out
mov
lds
out
mov
js
and
add
iret
or
movsb
sarb
pop
mov
fwait
repnz
dec
test
sahf
sarb
jle
adc
lods
or
lods
stos
std
sub
sub
sbb
mov
xor
data16
mov
in
arpl
or
jo
ljmp
adc
cmp
add
popfw
and
adc
sub
mov
cwtl
and
leave
lods
ss
xorb
mov
lods
xor
clc
sbb
adc
cmpsl
shr
jle
jbe
iret
add
inc
std
cmp
shll
inc
jmp
dec
or
ret
fnstenv
dec
xorb
push
mov
je
jne
sti
inc
xchg
shrb
adc
pop
je
call
sbbb
or
btc
cmpl
push
rolb
pop
push
loop
xchg
and
stos
stos
and
or
push
lods
daa
pop
add
cmp
dec
rorb
inc
mov
fwait
rolb
stos
int
ret
imul
addr16
inc
ror
or
or
arpl
add
ljmp
mulb
inc
aaa
inc
mov
leave
movl
mov
xchg
jmp
sub
xchg
jbe
fidivs
shl
dec
and
fisubs
or
push
fsubrl
fwait
mov
mov
sbb
ss
inc
mov
and
cmpsl
rorl
scas
out
aas
je
sub
popa
pop
lahf
sub
mov
cli
inc
popf
adc
cmpsb
setbe
xor
es
and
js
or
in
fstps
pop
dec
sbb
lds
adc
or
in
xchg
lret
fimull
daa
jle
sbb
inc
gs
jne
loop
subb
pop
and
int
xchg
out
into
pop
pop
xchg
bound
xchg
sub
and
rol
jge
iret
jle
sub
loope
dec
mov
cmpsb
push
lods
stc
cmp
icebp
into
or
add
xor
adc
jle
xor
mov
mov
cmpsb
std
addr16
in
or
dec
jne
shlb
dec
push
lods
sub
je
fnstenv
es
adc
std
sahf
addr16
sub
pusha
xchg
shll
lea
jb
ja
cmp
mov
inc
hlt
pop
push
lcall
addb
ds
out
xchg
jge
jns
popf
hlt
out
xchg
test
movsl
mov
je
into
push
mov
push
inc
test
pusha
pop
test
sub
int3
mov
mov
cwtl
test
shlb
mov
xlat
cs
movsb
mov
dec
int3
sbb
fisttpl
ds
inc
test
jbe,pn
push
sub
into
dec
adcb
lret
jp
adc
ror
push
cmp
sbb
pop
mov
jns
shlb
loop
dec
inc
pop
popa
mov
xor
mov
cmpsl
cs
inc
pop
sbb
xchg
iret
add
cmpsl
test
dec
cmpl
in
pushf
cmpsl
test
dec
andl
fldl
add
add
mov
test
mov
test
bound
sub
mov
mov
bound
mov
cmpl
pop
push
dec
jp
mov
mov
adcl
pop
adc
fisttpll
xchg
outsb
jge
mov
jnp
mov
fbstp
push
inc
addr16
add
enter
lods
sub
sti
xor
xchg
ja
add
ret
xor
outsl
out
pop
xchg
mov
mov
pop
outsl
xchg
mov
icebp
mov
stos
fbstp
mov
sub
push
out
les
adc
pop
out
xchg
aaa
dec
xchg
inc
jns
popa
mov
imulb
sub
xchg
rcrb
cmovo
outsl
adc
or
mov
pop
sub
scas
sti
mov
daa
mov
inc
in
pop
mov
jne
repz
pop
ret
lcall
xchg
push
and
repz
dec
fmull
imul
in
enter
and
data16
lods
xlat
push
dec
mov
icebp
push
add
jle
cmp
jno
je
insb
push
rorl
out
movsl
in
or
mov
enter
fidivrl
and
test
in
das
cltd
mov
stos
and
movsb
inc
adc
stos
ret
sbb
push
xchg
dec
std
sub
xor
nop
pop
into
mov
loopne
adc
pop
jbe
cli
out
cmc
push
adc
mov
pop
dec
cmp
leave
and
sbb
push
stos
adc
es
dec
movsl
arpl
nop
xchg
and
mov
xorl
cwtl
loopne
sbb
push
outsl
jae
dec
jns
pusha
sarl
mov
fcompl
push
lds
mov
mov
jge
lret
and
subl
dec
lahf
aaa
pop
jl
cmp
adc
shrl
and
inc
cmpsl
shl
into
mov
sub
je
cmpsl
in
and
outsl
mov
std
je
negb
push
cli
and
mov
or
add
add
test
dec
subl
push
aad
mov
sub
das
jns
pop
dec
xchg
pop
xor
out
mov
test
push
mov
js
push
out
dec
or
sahf
insb
test
cmpsl
shrl
push
xchg
gs
jnp
add
mov
icebp
or
iret
rorl
outsb
pop
filds
add
jbe
xchg
add
lock
dec
hlt
jl
cmpsb
mov
pop
sbb
das
sub
adc
xor
xchg
sbb
push
jns
aaa
into
cld
scas
xor
rcrb
sub
xchg
and
sub
adc
cmpsl
sub
jle
push
xchg
rcrl
jle
je
pop
lret
dec
sub
daa
push
mov
dec
out
sbb
in
jo
cld
aas
add
sub
and
push
dec
inc
mov
call
inc
cltd
mov
out
arpl
ror
jns
lods
sub
mov
or
dec
negb
rorl
sbb
mov
add
mov
cltd
cld
jno
mov
mov
xchg
adc
lea
pop
push
and
and
pop
sbb
testl
mov
fidivs
mov
mov
imul
cmp
bound
xchg
aam
mov
cmpsl
cs
add
add
xchg
es
mov
loopne
and
mov
xor
or
or
nop
cmp
or
add
jp
repz
push
fcomp
push
xchg
leave
int3
clc
imul
inc
movsl
int
inc
jnp
cmpsl
fidivs
jo
add
mov
and
or
adc
xor
inc
pushf
idivb
or
dec
or
sahf
scas
stos
or
push
jl
dec
pop
jns
xchg
cmpb
dec
cmpsl
add
xchg
jae
or
jne
cltd
or
les
pushf
repz
lods
daa
cmp
scas
push
decb
rolb
mov
icebp
cltd
into
test
push
inc
test
sub
pop
and
loope
scas
xlat
pop
xchg
mov
mov
inc
ja
movl
inc
incl
dec
pop
in
in
lret
pop
add
lret
js
push
lods
std
lock
jno
imulb
mov
sub
aaa
popa
sbb
push
mov
pop
jno
jbe
mov
mov
addr16
cld
jbe
push
xchg
mov
jl
inc
cmc
fbstp
repnz
cmc
fbstp
fwait
inc
lret
cmc
fbstp
inc
call
and
fbstp
adc
icebp
mov
iret
or
mov
subl
and
scas
outsl
insb
in
mov
sbb
mov
mov
sub
sbb
xor
xchg
mov
mov
mov
jecxz
xchg
mov
cs
dec
sti
pop
xchg
jmp
fstps
pop
jo
xchg
std
or
daa
outsl
out
jmp
and
loop
pop
call
test
int
push
popa
jne
sub
jo
imul
adc
das
push
jp
mov
xor
adc
or
adc
add
fsubrs
and
jl
das
fstl
loope
sbb
xchg
mov
mov
dec
xchg
sbb
pushl
cmpsl
in
and
into
jbe
dec
rorl
inc
mov
cmpsl
in
fildl
out
cmpsl
test
loope
aaa
insb
adc
dec
sbb
cmc
push
addr16
insl
dec
dec
sbb
jmp
jns
in
mov
mov
data16
xchg
stos
pushf
mov
das
adc
cld
mov
test
jmp
rcll
adc
pop
mov
sub
mov
sbb
jp
xchg
sub
int3
jnp
mov
das
inc
out
ss
dec
mov
xor
je
cmp
test
mov
mov
add
sub
das
lret
inc
mov
stos
push
mov
cs
pop
sbb
lcall
cltd
sub
icebp
inc
push
add
jmp
jns
scas
lea
mov
or
mov
sub
mov
mov
sahf
shrl
out
repz
ja
in
ret
sbb
and
mov
scas
mov
sbb
dec
adc
and
xchg
mov
sbb
std
and
scas
ficoml
jg
jl
cmp
jbe
sub
pop
add
leave
push
xchg
cmp
movsb
fisttpll
rclb
fstps
add
add
js
repnz
ds
es
hlt
push
dec
inc
sbb
mov
sub
dec
notl
pop
mov
ficoms
push
test
test
jo
xlat
pop
xchg
fdivrs
scas
movsb
outsl
shl
mov
inc
repz
mov
popf
mov
repz
icebp
nop
mov
lahf
popf
hlt
ljmp
inc
ss
popf
jl
inc
addr16
insl
sbb
xchg
out
dec
adc
loopne
pop
push
outsb
lds
or
movsb
add
rolb
add
out
aam
nop
mov
mov
pop
jecxz
in
pop
xorl
int3
and
jns
aas
lods
in
lcall
ds
jnp
inc
repz
insl
ss
rcll
inc
mov
push
mov
imul
bound
xchg
scas
cmc
mov
hlt
and
scas
jl
movsb
xchg
std
es
movsb
push
mov
dec
test
roll
cli
sbb
adc
loope
mov
repnz
pop
xchg
sbb
xchg
faddl
ficomps
push
leave
cmpsl
in
shr
cmpsb
lds
xchg
rclb
out
inc
cltd
scas
in
out
inc
out
adc
notl
push
andb
es
iret
lock
es
push
outsl
add
pop
push
dec
and
daa
mov
imull
and
insl
rcr
mov
inc
inc
leave
into
test
dec
and
les
cmp
daa
outsb
popf
cs
and
cmp
pop
mov
or
lods
xchg
enter
jl
ret
mov
lock
cwtl
mov
xchg
cmc
pusha
cmc
adc
in
mov
jno
lods
mov
xchg
push
retw
repnz
addr16
negl
jno
xchg
aam
mov
mov
adc
jo
jg
cmp
and
mov
movsl
sub
stos
xor
mov
pop
add
ficoms
call
mov
jmp
mov
xchg
outsl
mov
dec
test
inc
in
and
or
outsl
dec
in
xchg
mov
dec
test
push
fcmovnbe
xor
jg
jle
jle
dec
or
sahf
dec
movsb
shll
xchg
and
mov
inc
fildll
fadds
out
sbb
fwait
inc
in
es
insl
aam
cs
xor
sub
test
pop
test
push
or
fadds
outsl
pop
mov
popf
shrb
xchg
nop
dec
sarl
mov
jae
test
push
sub
push
fldt
jae
cmp
cmpsb
dec
orl
int3
or
imull
mov
mov
loopne
push
popf
aam
mov
mov
jge
jmp
rorl
sub
gs
lret
inc
ljmp
jmp
cmp
add
sub
in
nop
xorl
lea
ja
scas
movsl
push
push
jae
aad
pop
std
mov
jnp
ficoml
inc
xchg
scas
out
mov
or
rolb
mov
sbb
int
inc
mov
cmp
idivb
xor
imul
sub
mov
xchg
orb
test
add
xchg
dec
cmp
jb
rcr
sbb
shl
addl
add
sub
adc
cmp
cmpsl
test
loope
mov
imul
xchg
jnp
mov
daa
or
and
mov
inc
sbb
mov
pop
xchg
mov
xor
out
jne
jecxz
sarb
cmp
out
rcl
and
imul
pop
fcomps
inc
jp
inc
daa
filds
pop
lea
ds
daa
imul
dec
stos
push
ja
hlt
mov
call
sub
movsl
push
int
lock
lahf
jb
sbb
adc
popa
jmp
push
int
sub
mov
cmpsl
sub
icebp
xchg
adc
cmc
xchg
fdivl
mov
or
lret
and
pop
outsb
cli
and
call
int3
pop
xor
pop
xchg
hlt
pushf
jl
cmp
adc
int3
lret
cmove
sbb
mov
or
xlat
fs
xor
xor
pop
dec
jno
push
cwtl
add
dec
test
cs
inc
gs
push
mov
incb
call
mov
inc
pop
mov
je
ljmp
adc
and
aad
push
jb
jmp
cmpsl
ficoms
mov
mov
in
sbb
or
rcrb
jl
aaa
inc
or
add
fwait
rolb
fnstcw
repnz
rol
jl
inc
mov
cmp
sbb
adc
popa
mov
mov
or
movsl
cld
pop
mov
shll
xchg
xchg
out
lods
fwait
hlt
sub
inc
scas
jne
mov
mov
xor
jle
inc
ja
and
push
push
sti
mov
inc
fwait
mov
rcl
nop
rcll
lea
loopne
jecxz
sbb
and
rolb
cs
xchg
test
mov
mov
mov
pusha
cwtl
movl
out
or
icebp
sbb
mov
je
imul
xor
inc
xchg
sbb
incl
fwait
xchg
repnz
mov
ficoml
pop
lds
pushf
or
lock
out
test
js
push
in
jmp
sub
loopne
and
dec
mov
xchg
sti
sbb
movsb
sub
mov
in
xchg
dec
test
mov
adc
jecxz
addl
test
xor
test
dec
pushf
fsts
out
jmp
add
and
pop
mov
ljmp
stc
xor
arpl
pushl
xchg
xor
fldl
outsl
gs
push
mov
outsb
out
dec
jbe
sub
inc
das
xchg
jge
push
fidivl
mov
add
sti
test
fwait
mov
cltd
lods
repnz
inc
out
inc
cmpsb
inc
repz
inc
loope
insl
movsb
and
in
sarb
jmp
xchg
mov
in
xlat
cs
mov
jecxz
xor
ds
mov
jbe
gs
movsb
std
into
jne
mov
xchg
test
add
adc
or
add
cmpsl
in
xchg
fisttps
rorl
cmove
cmpsl
es
xchg
lds
pop
sub
aad
and
mov
movsb
xchg
mov
adc
push
imul
xlat
push
enter
shrb
jle
pop
lret
cwtl
mov
fists
mov
mov
addb
mov
sub
pusha
cld
push
adc
pop
push
and
jae
push
das
xlat
mov
ljmp
dec
shr
bound
pop
rcr
mov
adc
mov
jbe
mov
mov
cmp
inc
xchg
push
jle
jo
cmpsb
jecxz
mov
push
jb
push
aad
ljmp
insb
je
test
popf
rorb
jmp
dec
out
mov
dec
sti
shl
dec
cli
jbe
mov
out
sbb
in
cmp
mov
add
xchg
shl
into
mov
jmp
sbb
loopne
mov
dec
fwait
in
sbb
sub
lahf
aad
shlb
push
sarl
jmp
filds
mov
addr16
push
shll
dec
insb
test
or
out
jbe
pop
fimull
shr
xchg
leave
push
dec
xor
cmpsb
cmpsl
orb
mov
xor
and
mov
jecxz
xor
call
test
fldl
push
pop
out
arpl
fstl
sub
insb
out
outsb
add
outsb
adc
ljmp
dec
xor
mov
and
bound
dec
xor
mov
fildl
mov
sbb
xchg
iret
test
mov
jmp
test
inc
jnp
leave
jae
push
xchg
jp
mov
jp
mov
ficompl
sub
outsl
out
ret
clc
scas
fadd
pop
mov
fcomps
xchg
js
sbb
in
inc
aaa
out
jp
lcall
inc
mov
xor
pop
out
mov
mov
into
push
xor
daa
dec
cmp
ficoml
dec
in
mov
add
push
and
test
aas
loopne
jle
subb
movsb
sub
fidivl
fcmovu
sub
fisubrl
js
xlat
lock
mov
xor
adc
out
jo
xchg
dec
jb
js
in
mov
pop
imul
mov
shrb
shll
lods
add
jo
and
in
xchg
lret
mov
idivb
out
xchg
aas
lea
stos
fiaddl
out
pushl
imul
out
roll
pop
scas
mov
dec
xchg
or
jbe
xchg
into
lahf
mov
push
int
in
inc
into
push
lods
jnp
fisubl
in
mov
test
fnsave
fisubl
push
sti
daa
ficompl
cmpb
mov
cmpsb
orl
mov
mov
pop
or
inc
xchg
lock
ret
pop
cmp
lret
sbb
jge
push
clc
stos
into
and
bound
stos
jl
sub
inc
rclb
xlat
inc
loopnew
cld
pop
scas
xlat
roll
int
inc
pushf
and
in
mov
push
cltd
loopne
scas
jmp
xchg
in
rcrl
dec
inc
cmp
imul
sbb
clc
clc
push
mov
lret
jno
das
fbstp
adc
jg
jmp
mov
negl
mov
sub
xchg
xchg
inc
adc
sub
xor
sub
xchg
push
sbb
mov
jge
jl
pop
jmp
mov
xor
sbb
ss
sbb
shlb
jno
jp
lret
out
inc
inc
outsb
loop
mov
cltd
test
or
into
sub
jb
js
int
jae
enter
push
jne
inc
inc
or
fs
pop
adc
or
clc
mov
or
mov
xor
stc
jbe
popf
hlt
adc
insb
insb
push
dec
aam
rclb
aaa
cmp
and
jnp
push
je
push
mov
jns
jo
ljmp
mov
fstps
cmpsl
or
sub
inc
outsb
mov
shrb
in
ret
push
adc
push
movsb
sub
add
xor
insl
nop
adc
pop
andb
push
out
jbe
inc
orps
or
or
and
call
adc
cli
js
pusha
sub
dec
sub
ret
faddl
lds
sub
stos
push
inc
ss
loopne
push
dec
adc
mov
xchg
pop
sbb
popa
out
ljmp
iret
fisubl
movl
sub
mov
fs
push
cmp
jp
ds
xor
sbb
stc
mov
cmp
lock
sbb
shll
cmp
or
outsb
pop
lods
je
inc
std
icebp
into
sbb
aam
icebp
mov
shrl
or
dec
rorl
call
mov
fs
and
and
aaa
xor
push
iret
hlt
jnp
and
and
cmp
push
mov
jp
rorb
es
lds
jnp
sub
out
test
gs
fs
decl
sti
pop
inc
sbb
mov
addr16
push
jg
std
leave
das
xchg
mov
mov
jns
lahf
popf
xchg
mov
out
bound
adc
icebp
dec
sub
fistl
lret
stos
je
lods
inc
ficoml
cmp
or
incb
jecxz
cmpsb
xchg
adc
pop
inc
imul
aas
bound
fmuls
pushf
sbb
xor
cmp
cwtl
or
xchg
or
mov
or
adc
mov
mov
pop
mov
jp
pop
iret
sti
jecxz
pusha
cltd
sbb
sahf
rcrl
scas
push
xchg
pop
jb
call
xchg
in
lea
xchg
xor
fwait
iret
or
push
divb
sub
pop
mov
or
xchg
add
inc
cli
aaa
dec
movsb
cmp
sarl
mov
repnz
sub
sub
stos
xor
pushf
cs
hlt
mov
cltd
out
out
stos
int
stos
jl
jno
lret
xor
test
push
push
shll
xor
ss
dec
lahf
fnsave
xor
iret
repnz
in
dec
mov
mov
push
cmp
movntq
popa
mov
insl
hlt
sub
push
outsl
pop
pop
jb
jle
negl
jne
fstpt
pop
and
sbb
repz
mov
das
mov
mov
jge
dec
mov
xor
sub
aad
adc
lds
sbb
or
test
mov
int3
add
xchg
push
mov
xchg
test
ljmp
xchg
out
bound
nop
aas
xchg
ret
mov
sub
and
mov
addl
jecxz
mov
jl
dec
and
jg
sti
xor
dec
pop
sbb
cwtd
push
jnp
lock
insl
fs
jbe
sbb
cmp
cmp
inc
inc
outsb
and
adc
fdivl
ja
pusha
xchg
inc
andl
mov
into
mov
and
cwtl
mov
mov
mov
jg
int
ficoms
bound
jns
arpl
push
cmc
test
adc
das
inc
sub
xor
repz
cltd
aad
lods
popa
sub
xchg
inc
lret
into
inc
stos
push
mov
addr16
repz
loop
lahf
ja
gs
movsl
mov
mov
bound
pop
loop
push
add
or
jp
daa
pop
xchg
fnstcw
mov
movsb
fsubs
xor
icebp
and
or
jmp
mov
cmpsl
in
nop
lds
dec
inc
mov
cmp
cmp
mov
and
jbe
mov
jp
in
fwait
repnz
bound
fisubs
sarl
fildll
mov
mov
lahf
cmp
push
jno
and
cmp
mov
xchg
ljmp
xchg
icebp
enter
cli
mov
repnz
mov
sub
sbb
adc
push
jg
ret
xchg
or
fiadds
pop
insl
hlt
xor
iret
add
outsb
push
mov
dec
rcrl
and
loopne
fisttpl
test
dec
stos
clc
mov
fwait
cmp
out
fcoml
cmpb
push
dec
xchg
jmp
or
cmpsb
aad
push
mov
add
out
lods
negb
jno
xchg
ret
xchg
int3
add
popa
jge
negb
loop
lahf
es
mov
lret
das
fs
pop
aaa
cmp
test
xlat
xchg
cmp
xchg
addl
add
push
fwait
decl
ret
xor
mov
mov
lods
xor
pop
shll
ljmp
popa
mov
lods
add
mov
xchg
lahf
dec
or
js
lret
in
and
lea
pusha
cmp
clc
subb
adc
pushf
insl
add
or
pop
pop
in
shrl
cmpsl
out
xorb
daa
jle
or
popf
inc
jp
mov
cwtl
jg
inc
in
sbb
mov
aad
dec
js
fwait
popa
int3
lahf
jl
mov
fnstsw
insl
les
gs
and
dec
adcb
cmp
inc
fdivrp
jae
dec
mov
and
or
insl
nop
cmc
cltd
call
mov
ficoms
mov
xor
loope
outsl
pop
add
jns
fs
xor
fbstp
mov
cld
idivl
mov
sbbl
fsubr
mov
insb
cmp
pop
cs
inc
pushf
fsts
adc
movsl
push
push
mov
call
xchg
test
xchg
ffreep
xchg
or
mov
mov
cltd
rolb
cmp
in
movl
cltd
add
mov
dec
js
shlb
movd
shl
sbb
and
xchg
pop
rcrb
bound
sub
lret
int
popf
jecxz
mov
mov
sub
mov
push
leave
or
inc
cmp
fs
push
loope
cltd
stos
cmp
sub
add
leave
jno
hlt
jnp
xor
pop
xchg
cmp
in
xor
sbb
cmp
cld
aam
scas
out
inc
in
sbb
fstps
jne
jb
sbb
or
jbe
fistl
pop
inc
movsb
push
pop
push
fs
mov
pop
mov
mov
cmp
fdiv
adc
ljmp
lds
aaa
mov
push
mov
dec
je,pt
lock
icebp
adc
lcall
or
daa
xlat
stc
test
dec
pop
inc
adc
mov
sahf
dec
test
insb
xchg
push
stos
int3
xchg
mov
dec
scas
std
test
dec
lahf
in
cli
mov
lret
insb
mov
movsb
fsubs
into
or
add
loope
sub
xor
sbb
add
cli
das
push
mov
add
add
loop
mov
xchg
shrl
sbb
mov
insb
sub
inc
ror
or
jg
sub
inc
jmp
test
mov
test
dec
insl
out
mov
sbb
and
xchg
sbb
rcll
jmp
jne
pop
nop
and
mov
inc
pushf
pop
insl
xor
fwait
xor
in
aam
ret
dec
xchg
das
fs
jbe
inc
sub
dec
bound
stos
add
push
orb
or
inc
outsb
imul
adc
mov
sbb
ficompl
pop
mov
loopne
push
cmpl
imull
pop
cmc
mov
fwait
roll
ss
pusha
sbb
js
inc
jge
sub
push
jl
inc
adc
cmp
mov
orl
pop
mov
mov
and
jmp
pop
sbb
cmc
jl
mov
xchg
xor
xchg
call
pop
inc
mov
cmp
mov
dec
and
mov
xor
scas
add
push
jmp
cmp
and
push
sub
push
add
sti
push
push
dec
pmulhuw
and
xor
nop
bound
sarl
jmp
jo
enter
xchg
lock
out
gs
or
ficomps
lret
add
jmp
mov
or
or
pusha
or
mov
jmp
mov
jne
outsl
je,pt
mov
insb
ret
mov
ljmp
mov
test
mov
mov
mov
mov
arpl
nop
mov
leave
add
dec
add
xor
mov
xchg
inc
popf
ja
cld
fcmovnu
cmp
cltd
inc
mov
repnz
stos
sbb
mov
js
imul
sbb
roll
sub
xor
and
push
insb
test
imul
sbb
pop
int3
fdivl
mov
cmp
push
fwait
mov
cmp
dec
test
jle
add
out
lods
inc
lods
add
adc
lods
dec
mov
daa
pop
in
scas
lret
sbb
divb
mov
outsb
or
lahf
xchg
pop
jmp
push
inc
jp
mov
repnz
pop
mov
jge
icebp
push
mov
jae
out
cmp
call
fstl
xchg
push
lds
gs
inc
int3
out
inc
js
dec
mov
xor
mov
pop
roll
pop
mov
lds
jp
adc
and
lock
lret
jbe
mov
or
and
or
mov
mov
xor
push
inc
hlt
push
xlat
push
iret
xor
imul
outsb
adc
movsb
fs
and
cmp
cli
xor
inc
push
ds
into
imul
adc
aam
push
push
dec
fldenv
outsl
mov
xor
aaa
and
jmp
and
fidivrs
mov
jo
jb
xor
mov
dec
add
repnz
pop
idiv
push
or
test
xchg
inc
cltd
dec
push
sbb
adc
push
xor
mov
pop
adc
pop
xlat
fcompl
cmp
lahf
lea
les
rcrb
cld
fldt
adc
std
aas
shrl
roll
add
out
aas
in
mov
fcoml
xchg
addr16
lret
jne
pop
cmp
cmc
int
push
push
inc
cmpl
ljmp
xor
lcall
xchg
cwtl
iret
sbb
loopne
push
add
jmp
push
sbb
xor
dec
pop
lock
lds
inc
mov
ret
ret
sbb
sti
pushf
push
mov
dec
pop
test
das
add
xchg
out
fwait
push
pop
xchg
sti
push
cmp
sub
sahf
inc
push
add
and
sub
push
icebp
outsb
gs
scas
mov
movsl
fldenv
iret
add
mov
pusha
sbb
pushf
jb
data16
dec
cmpsb
jno
cmp
dec
insl
stos
and
dec
repz
pop
iret
pop
cmp
pop
lods
push
cld
cmp
inc
lret
scas
std
movsl
fimull
iret
or
movsb
dec
add
push
jne
and
or
push
cli
mov
mov
int3
aaa
lahf
cmp
cmp
sbb
dec
pop
repnz
lret
sbb
dec
shrl
push
xchg
rcl
cmp
sbb
sub
xchg
ds
aas
cmp
xchg
xchg
out
sbb
stos
add
xchg
sub
shl
lahf
jmp
dec
scas
xor
xor
xor
push
cld
xor
hlt
inc
jne
dec
jno
inc
sub
fists
pop
cmpsb
and
stc
rcll
cld
enter
gs
add
cld
and
mov
clc
sarb
std
xchg
or
fs
lock
cmp
hlt
std
cmp
dec
std
test
sub
in
and
inc
sbb
gs
dec
in
dec
js
in
or
imul
mov
sahf
xlat
and
xor
js
test
mov
jmp
sarl
inc
ja
shr
data16
jno
cmp
fwait
outsb
sub
xchg
int
fiadds
test
in
jle
movzwl
and
rclb
lfs
stos
call
jge
xor
cltd
lock
and
cmc
imul
sub
jg
xor
fisttpl
scas
jecxz
sbb
aaa
aad
sti
push
xor
pop
dec
jbe
dec
mov
ret
es
mov
or
ret
mov
push
stos
jge
pushf
jnp
jno
dec
inc
mov
xor
jb
outsb
xor
ret
jp
movsb
jl
fmuls
outsb
mov
dec
mov
push
stos
xor
stc
sbb
xor
cmp
pusha
or
add
xchg
gs
enter
popa
mov
pop
jnp
int
mov
icebp
mov
xchg
xorl
fdivrs
xor
xchg
mov
mov
jge
push
ret
nop
adc
jg
or
add
inc
push
test
es
js
xorb
imul
sub
movsl
scas
pop
nop
addr16
imul
adc
pop
hlt
sbb
push
jge
lret
dec
dec
dec
loope
ds
dec
dec
lods
add
lret
icebp
jno
stos
int
and
test
jno
int3
push
xchg
mov
loopne
cwtl
mov
pop
outsb
cmc
xor
sub
ja
mov
sbb
roll
mov
jns
and
mov
lds
ret
or
call
out
or
cltd
sti
imull
adc
pop
xchg
mov
pusha
ret
stos
sbb
pushf
hlt
sbb
mov
xlat
pop
aaa
daa
mov
jb
int3
cwtl
cs
pop
sbb
aaa
int
and
sbb
cmpsl
dec
test
mov
sbb
mov
xchg
mov
fidivs
jl
fwait
ret
mov
out
cmp
sub
adc
insb
push
mov
iret
repnz
mov
gs
aad
imul
mov
stos
push
inc
shll
aam
ret
mov
xor
mov
xor
sbb
popf
pop
sub
sub
push
popf
stc
inc
out
xchg
aas
movb
scas
jecxz
mov
fsts
inc
xlat
push
jle
xchg
lret
pop
out
stos
dec
xchg
add
enter
loop
and
outsb
pop
repnz
cmp
and
adc
clc
mov
out
sahf
and
movsl
call
add
mov
daa
arpl
daa
test
add
loope
out
into
xorl
xchg
leave
loopne
xor
rdmsr
pop
xchg
jo
inc
cmp
mov
lahf
loopne
inc
call
adc
stc
push
clc
nop
loopne
push
push
js
jo
add
dec
add
in
cmpsb
sbbl
lods
sub
adc
sub
jp
out
or
pop
jb
hlt
das
add
dec
jb
sti
sti
imul
and
jecxz
add
mov
fwait
or
ret
ljmp
loope
jle
xor
ficompl
and
inc
iret
xlat
push
loop
mov
repz
mov
adc
cwtl
iret
jmp
add
or
xlat
pop
cmp
cltd
and
pop
cmp
lock
adc
lock
in
push
adc
xchg
sbb
lock
xchg
xchg
stos
shr
loope
pop
sarb
or
push
pop
add
xchg
push
cmpb
xorl
in
sbb
jb
sbb
xor
adc
aad
ja
xchg
popf
rolb
cmp
mov
add
cmp
movsb
arpl
pop
adcb
push
sahf
xchg
inc
arpl
sub
test
cltd
lock
mov
mov
mov
sbb
and
mov
popa
pop
adc
fidivrl
jnp
sub
push
mov
fadd
push
ret
cmpsl
fcompl
push
inc
sbb
jne
lahf
dec
jg
jp
repz
repnz
add
sub
xor
je
jle
jae
or
addb
lcall
push
sub
mov
aaa
test
pop
mov
and
or
mov
lods
in
pop
and
mov
leave
ret
adc
repnz
lret
das
cmpsl
sub
mov
lds
sub
lds
sbb
inc
mov
jge
sti
and
negl
adc
mov
ja
lret
aaa
out
cmpsb
xorl
xchg
mov
sar
clc
xchg
pop
jg
nop
or
fidivrl
insb
adc
xor
gs
pop
fwait
rcll
ja
or
push
dec
pop
js
jnp
scas
jo
cmp
mov
nop
icebp
mov
sbb
in
xor
xor
adc
clc
mov
in
and
lahf
ret
lods
inc
arpl
cmp
enter
int
mov
sub
fwait
movsb
pushf
negl
or
add
rolb
ss
out
adc
sub
jno
dec
add
pusha
pop
adc
repnz
jge
out
ss
push
push
jmp
mov
jge
mov
lret
repz
negb
inc
push
incl
sub
inc
xor
dec
ret
mov
or
mov
test
arpl
xor
dec
xor
ret
cmpsb
pop
dec
inc
push
js
pop
mov
pop
out
ljmp
inc
nop
cmp
adc
outsb
push
popf
aam
inc
mov
fdiv
out
enter
in
je
bound
and
in
and
xorb
jns,pt
dec
test
sbb
jg
dec
cmpsb
jno
xlat
push
imul
imul
into
stos
or
mov
jge
push
pop
out
sbb
sbb
dec
mulb
rcrb
xchg
in
pop
inc
sahf
js
push
or
xchg
fldenv
int3
sti
mov
cwtl
push
ret
add
cmpsb
shlb
gs
enter
jecxz
std
sub
add
push
inc
cmpsl
cmc
jnp
pop
add
xorl
xchg
iret
pop
jnp
jmp
cmp
das
insb
jecxz
inc
or
pop
or
mov
cmpsl
sarl
js
adcl
or
push
into
and
xor
jg
repz
mov
cmp
out
cltd
dec
xchg
test
add
sbb
pop
fbld
sub
inc
jp
cs
jl
lods
mov
mov
xor
mov
out
jmp
pop
xchg
mov
fisubrs
push
mov
fwait
xchg
outsb
vdivsd
shll
jle
aaa
arpl
xchg
xchg
xor
inc
fwait
pop
pusha
mov
jno
and
dec
xorl
inc
xchg
andb
mov
jns
in
pop
imul
add
loope
mov
jnp
in
sub
test
push
scas
jecxz
xor
push
in
jle
push
push
pop
add
xchg
push
cmpb
xorl
in
sbb
jb
sbb
xor
adc
aad
ja
lret
push
stos
jl
or
lret
xor
orl
enter
mov
lods
popl
mov
sbb
shrl
jg
jmp
je
repnz
mov
in
and
mov
fsts
inc
jp
pop
imul
mov
jmp
pop
mov
insb
shrl
fbstp
rcrb
inc
out
inc
or
push
xlat
push
ror
xchg
push
stos
scas
xorl
pop
xchg
repnz
jns
push
ficoms
icebp
stos
xchg
imul
mov
mov
rclb
jns
shrb
push
cmpsl
daa
mov
add
stos
jmp
cwtl
push
stc
mov
fsubr
adc
dec
xchg
cmp
aas
jnp
int
add
jo
xchg
into
icebp
fwait
mov
popf
cmc
pop
mov
mov
adc
sub
sub
xor
push
xor
jns
mov
js
adc
push
enter
sbb
push
iret
fsubrs
notl
xchg
xchg
inc
xor
dec
stc
and
mov
lock
pop
jecxz
inc
in
xchg
rcrb
jle
sub
stc
aad
mov
je
lods
js
insb
pusha
orb
xor
add
pop
mov
dec
lods
cmpl
inc
push
mov
insb
sub
adc
and
lcall
push
adc
cwtl
mov
pusha
out
rol
adc
aad
push
cmp
aaa
add
jle
fcoml
push
arpl
movb
or
cmp
ja
addr16
mov
push
sub
fdivr
inc
dec
andl
imul
test
shlb
push
jl
add
clc
xchg
mov
bound
inc
jl
pop
loopne
add
ds
paddusw
sub
push
rolb
fwait
loop
cmpsb
sub
mov
xchg
sbb
jae
imul
inc
mov
inc
ljmp
or
xor
aas
vorps
add
xor
add
mov
pop
push
pushf
add
outsb
in
dec
orl
pop
xorl
mov
xchg
sbb
push
mov
cmpsl
in
mov
add
mov
cmp
push
dec
inc
dec
pop
imul
push
test
dec
ret
aaa
or
in
jbe
mov
cmpsb
clc
sbb
notl
cmp
outsl
sbb
ss
or
je
xor
lods
mov
cli
dec
or
mov
movb
mov
rep
add
fildll
rorl
xor
cwtl
xchg
dec
cmp
inc
cltd
enter
test
repnz
mov
mov
and
lahf
ret
push
lret
je
jnp
cmc
pop
xor
rorb
je
es
in
pop
sbb
pop
outsl
inc
sbb
mov
sub
mov
push
inc
mov
or
shlb
mov
hlt
dec
in
cmp
scas
jo
daa
fisttpl
gs
aad
repz
jg
pop
jmp
ds
pop
lcall
xor
aas
jl
lods
stos
stos
aas
xlat
jg
jne
out
jno
pop
cmpsl
and
out
int3
add
adc
std
and
dec
ja
adc
lea
cmp
mov
pushf
mov
inc
fs
pusha
sbb
mov
sbb
jg
pop
jmp
rcrl
push
aad
mov
push
xchg
xchg
cmp
ret
add
ja
cmp
mov
rorl
xchg
imul
inc
lahf
lret
jp
ja
lock
push
cmpsl
sahf
aaa
cmpsl
sub
dec
aaa
mov
roll
repz
fdiv
cmp
lret
xor
adc
outsl
push
jp
out
push
scas
cmc
lahf
xchg
cmp
cmp
lock
mov
lds
jg
iret
sbb
mov
rorl
inc
mov
das
aad
xchg
ja
add
mov
ret
sbb
loope
inc
rclb
loopne
pop
test
mov
push
mov
push
negb
mov
mov
mov
inc
imul
lods
mov
mov
hlt
sbb
out
in
and
xchg
xchg
inc
xchg
cld
int
arpl
lea
mov
push
sbb
das
mov
outsb
cwtl
sub
das
jno
cmpsb
push
add
out
icebp
shrb
inc
mov
jle
mov
outsl
jge
test
jns
push
dec
sti
push
jg
pop
add
les
sub
mulb
dec
jp
jle
xor
aas
fs
aas
mov
adc
icebp
dec
lds
loope
jns
pop
adc
inc
in
adc
inc
aad
jns
pop
xchg
or
push
jle
pop
and
andl
sub
mov
js
pop
and
sub
out
dec
arpl
push
cltd
loopne
out
inc
shrb
and
push
popf
hlt
and
and
mov
dec
imul
and
sub
or
mov
sub
or
insl
movsl
dec
jecxz
cmp
leave
sbb
idiv
out
xchg
and
stos
sub
cmp
adcb
enter
lret
sub
adc
out
sub
outsb
in
push
mov
mov
inc
jns
jecxz
lea
jg
sub
xlat
pop
fwait
aad
xchg
cmp
rcrb
add
lock
sbb
test
pop
rcl
jmp
cwtl
stc
fadds
pop
xchg
add
nop
mov
jo
nop
int
or
std
push
jae
leave
xor
fdivrs
rol
inc
mov
outsb
popf
rclb
dec
mov
or
inc
mov
dec
addl
stc
in
or
lock
les
mov
leave
lret
loopne
popa
mov
in
pushf
repz
jb
pop
enter
jmp
add
repz
outsl
sbb
jne
fidivrs
out
out
pop
dec
inc
xor
std
jb
hlt
pushf
rcrl
cmpsb
sub
push
mov
inc
sahf
mov
adc
mov
or
inc
adc
pmulhw
testl
sti
sub
test
jns
mov
xchg
in
pop
leave
lret
call
push
inc
mov
jge
leave
push
lds
or
push
icebp
cmpsl
cmp
pushf
and
das
mov
mov
push
cmpsl
movsb
inc
lret
pushf
and
lods
insl
or
out
push
mov
loop
shrb
inc
mov
mov
ficoms
mov
add
and
jp
sub
or
mov
add
das
jmp
xchg
test
cmp
sahf
in
xchg
lods
or
leave
adc
mov
ja
mov
pop
pop
cmp
dec
out
das
cmp
and
pushf
adcl
mov
pop
pusha
or
dec
lcall
mov
xchg
sbb
adcb
dec
jo
inc
jo
cld
sbb
mov
xor
mov
xchg
sbb
add
sbb
xchg
mov
out
insb
in
add
and
jp
cmp
outsl
push
repnz
aas
xchg
xchg
xchg
dec
xor
in
and
push
fidivs
push
cld
xor
lds
loopne
scas
es
loopne
scas
pushf
inc
cmove
jne
pop
loopne
scas
jmp
ljmp
push
loopne
scas
jecxz
scas
push
fstl
loop
rorb
push
stos
dec
lahf
xor
jbe
sbb
cwtl
shl
dec
clc
xchg
push
insb
inc
mov
fdivs
stc
push
stos
pop
adc
ret
sti
pop
outsl
xchg
jmp
arpl
inc
jnp
mov
aaa
out
pop
jb
popa
pop
clc
mov
mov
jno
and
dec
sbb
xor
mov
or
xor
jmp
jl
cli
sub
mov
or
push
roll
mov
jg
sti
inc
lea
aaa
xor
mov
inc
jmp
inc
into
or
xchg
movsb
hlt
mov
in
arpl
out
call
mov
mov
jecxz
scas
leave
pop
push
cwtl
xchg
fnstcw
sbb
pop
lret
push
movsl
rorl
jle
aad
mov
and
pop
push
std
xor
or
outsl
mov
sub
adcl
or
cmc
inc
jmp
ror
lret
jne
sbb
iret
or
stc
mov
inc
lcall
push
loope
clc
dec
mov
push
pop
pop
mov
sub
jmp
rcrb
and
iret
pushf
inc
repnz
jae
jecxz
jbe
shlb
xchg
ficoms
test
addr16
test
inc
xchg
push
mov
xchg
in
lods
pushf
ljmp
sbb
loopne
mov
repnz
jnp
jo
push
adc
push
pop
aad
xor
pop
jg
fisttpll
es
inc
fiadds
mov
data16
xchg
test
mov
xchg
subb
pop
mov
mov
sbb
ja
iret
sti
outsb
inc
mov
jle
std
into
repz
jge
jecxz
mov
loope
repnz
leave
pop
sahf
ljmp
pop
xor
cmp
push
imul
out
lcall
fidivrl
sub
mov
loop
mov
and
gs
fs
sti
in
mov
mov
jp
sub
adc
notl
mov
in
adc
jbe
xor
lsl
imul
fdivs
xor
cmpsb
push
shl
mov
adc
dec
ljmp
push
push
jle
xor
cwtl
les
inc
push
fs
out
or
test
nop
fidivs
je
mov
out
sub
pushf
push
jg
test
sti
repnz
jle
fldt
fidivrs
sub
fimull
xlat
rcll
popa
cwtl
adc
adc
sbb
clc
mov
mov
adc
or
jb
out
sub
jb
push
inc
in
and
xchg
repnz
sbb
fs
push
bound
xor
rcrl
pop
popf
inc
outsl
add
dec
jb
and
lods
loope
inc
mov
cmp
mov
add
les
xchg
mov
adc
jl
xlat
jnp
xor
jmp
outsl
fwait
inc
scas
aas
pop
sarb
pop
sti
push
fistpll
pop
or
add
cmpsl
in
and
sarl
outsl
movsb
loope
imul
iret
or
sti
jne
repz
mov
push
push
iret
or
jmp
push
and
jae
sbb
negl
cwtl
xor
outsb
adc
jnp
aam
inc
mov
mov
sub
adc
in
push
sub
es
imul
loop
push
cmp
arpl
dec
sti
push
lret
popa
cld
pop
cmpsb
fnstsw
pop
inc
ss
push
cmpsl
scas
xor
cld
or
fldcw
je
mov
outsb
add
test
xchg
ret
outsb
lds
repz
add
cs
cltd
mov
push
cld
cwtl
mov
adc
mov
sbb
xchg
mov
jmp
xchg
repnz
jmp
mov
xchg
sub
scas
rcrb
add
push
adc
fwait
inc
js
sbb
mov
jo
jbe
rorb
shl
adc
mov
or
insb
mov
out
bound
pop
push
stos
stos
pop
out
jmp
fisubrl
mov
stc
rclb
out
push
loop
call
ss
xor
sub
jge
or
repz
inc
cwtl
lds
fsubl
push
sbb
and
imul
sub
cmpsl
aad
ret
mov
adc
out
movsl
pusha
mov
dec
xchg
fs
mov
or
xchg
mov
leavew
in
jae
mov
test
pushf
hlt
cmpsl
push
or
xchg
mov
test
dec
popf
or
rorb
je
xor
and
cld
add
cmp
adc
jg
shl
cmpsl
mov
orl
imul
lds
clc
lods
add
out
repz
push
xor
add
aas
in
sbb
mov
jb
clc
icebp
sbb
dec
aas
ljmp
lret
shll
jns
outsb
inc
je
sbb
dec
add
push
lret
lods
jp
add
push
inc
sahf
and
xchg
cld
dec
movsb
in
add
fimuls
insb
ret
cmc
dec
das
xor
dec
mov
pop
cltd
mov
bound
adc
mov
adc
mov
sub
popf
and
lods
sbb
lods
fldenv
int3
or
add
orl
shlb
jno
xchg
push
hlt
jnp
inc
or
jge
inc
mov
and
or
loopne
cmp
xchg
fdivp
out
pop
test
push
ficoms
test
ret
sbb
test
ljmp
sahf
sbb
fidivl
fimuls
jae
lret
jo
jmp
pop
stos
loop
xor
scas
mov
cmp
rcrl
jnp
and
xchg
or
leave
sbb
and
inc
mov
loope
add
les
hlt
stos
mov
sahf
mov
aad
push
cmp
mov
mov
enter
in
pop
push
cmp
ror
adc
andb
daa
ljmp
sub
jmp
arpl
inc
test
lea
pop
xchg
xor
repz
push
mov
jae
aas
jg
inc
test
les
or
jns
xchg
mov
push
enter
mov
sbb
call
sbb
adc
and
rcr
cmp
and
sahf
or
mov
jne
add
mov
sbb
movsb
add
xchg
cmp
outsl
inc
sbb
repnz
jne
orl
mov
dec
mov
dec
mov
dec
imul
add
dec
call
xchg
in
or
lret
jp
out
add
xor
movsl
aam
repnz
movb
mov
sub
outsb
stos
and
fs
inc
jne
sahf
and
mov
sarl
jle
insb
loopne
jp
lds
rcrb
ds
jge
cmpsl
jle
or
push
and
mov
add
mov
mov
add
push
fldenv
pusha
mov
mov
jno
test
sbb
mov
notb
or
fimull
js
in
clc
sbb
repnz
jle
mov
or
pop
lods
pop
or
into
and
inc
in
xchg
loop
mov
inc
dec
cs
lcall
cmpl
cmp
test
cmp
ds
out
stos
adc
call
movsb
jno
out
leave
js
shrb
sub
and
cli
loopne
cmp
icebp
pop
arpl
pop
aam
or
add
sbb
cmp
mov
outsb
mov
sub
out
imul
xor
rorl
xlat
inc
popf
lods
xchg
negb
add
popf
jmp
push
sub
ss
insl
loope
in
fimull
fbstp
and
add
and
pop
nop
dec
scas
jne
stos
out
push
jge
push
mov
push
mov
lea
in
push
stos
inc
test
fsts
or
imull
addb
ja
mov
sub
sbb
adc
pop
mov
dec
movsl
scas
inc
sub
sahf
in
cmp
push
ja
pop
mull
xor
jnp
cli
and
les
jecxz
movsl
aaa
cmp
pop
pusha
dec
jge
pop
add
sbb
pop
jge
mov
inc
hlt
dec
ret
dec
push
xchg
lock
sbb
inc
imull
mov
cmpsb
pushf
test
fwait
mov
push
add
mov
jnp
insl
ret
jmp
xchg
out
xor
bound
sbb
div
addr16
andb
pop
mov
js
in
pop
push
bound
mov
lcall
dec
xchg
mov
mov
adc
cwtl
scas
in
stos
xor
cmp
xchg
jg
fs
adc
test
xor
int3
add
pop
cmp
inc
sbb
xor
cmc
sbb
push
jle
mov
xor
mov
test
inc
ret
push
mov
dec
lahf
pop
insb
out
pop
mov
push
loopne
dec
jg
jns
sarl
sbb
cmpsl
fdivr
and
push
pop
push
sti
mov
in
or
dec
pop
xor
xchg
inc
jmp
jmp
mov
jne
icebp
jae
cmp
xor
jb
xchg
inc
lock
mov
inc
jns
popf
cmpsb
test
pushf
insl
scas
negb
jnp
cmp
mov
pop
push
rorl
roll
cmp
fimuls
xor
ljmp
loopne
stc
mov
rcrl
or
in
jp
movsl
nop
mov
xchg
shrb
add
and
test
es
mov
adc
or
fsubrl
xchg
adcb
popf
xchg
pop
mov
dec
scas
xor
jno
fldl
adc
stc
or
scas
data16
dec
hlt
movsl
into
test
xchg
movsb
push
negl
inc
enter
mov
lds
mov
adc
or
fimuls
loop
cmp
mov
add
aaa
mov
pop
aaa
repz
xor
arpl
mov
imul
inc
add
fldenv
pusha
push
jg
jle
cmp
add
pop
pop
jo
mov
insl
xchg
in
int
imul
sbb
push
mov
pop
fstpl
xor
dec
adc
call
rorl
ret
sbb
inc
loopew
cld
mov
cltd
popf
aam
in
mov
jo
loopne
scas
sub
dec
push
mov
cmp
jns
loope
imul
dec
negb
jo
lods
cmp
push
xchg
sbb
cmpsl
inc
xlat
fidivrl
rorl
cli
das
insb
out
dec
xchg
das
pusha
popf
aad
jp
cmp
push
dec
mov
and
adc
cwtl
cld
sub
sub
aad
aas
cmpsl
shll
inc
mov
xchg
enter
pop
sbb
jbe
lds
in
mov
jecxz
fimuls
pop
fists
lods
sbb
ret
pop
in
shr
mov
adc
mov
cmp
dec
xor
push
push
repz
add
ret
std
pusha
lock
scas
jl
in
cmp
out
int3
rol
and
push
xchg
lahf
xor
mov
and
bound
mov
mov
test
inc
inc
subb
mov
dec
mov
sub
rorl
je
push
add
mov
test
gs
int
pop
inc
cmp
aaa
jmp
push
scas
jo
cmp
mov
xor
cwtl
lret
cmp
sub
clc
or
cmc
jl
xor
pop
xchg
cmp
subb
jno
add
popa
mov
mov
in
sar
or
push
movsl
and
ffree
roll
mov
xchg
push
sti
orb
mov
int
jg
pop
mov
ret
jecxz
inc
sahf
mov
aas
clc
adc
test
and
mov
fiaddl
mov
aaa
outsb
push
int3
add
repnz
mov
xchg
lret
test
xor
pop
subl
or
cs
test
enter
inc
clc
jg
das
add
and
or
pop
repz
ds
dec
jnp
divl
adc
fsts
mov
leave
cld
inc
push
fisttpll
push
hlt
dec
mull
pop
aad
data16
outsb
in
xchg
cmpsb
cli
arpl
mov
neg
jb
mov
in
dec
inc
ret
notb
pop
mov
jl
pusha
shlb
and
xor
repnz
mov
xchg
mov
mov
push
pop
lret
dec
cmpsb
pop
mov
int3
xchg
leave
popa
xchg
lods
xchg
and
adc
notb
mov
inc
dec
insb
repz
fnsave
das
jge
dec
lock
int
xchg
xchg
sbb
int3
lcall
jns
in
out
xor
stos
jge
dec
push
sbb
cmpsb
xchg
int3
jnp
cmpb
int3
mov
ret
pop
stos
xor
out
and
daa
inc
sub
cmpsb
dec
mov
jae
mov
pop
mov
pushf
adc
hlt
dec
repz
add
dec
cld
stos
xor
shll
lahf
mov
xchg
mov
jae
push
jae
cmp
inc
xchg
cmp
inc
inc
in
test
int
arpl
mov
mov
push
and
aas
mov
dec
push
fcmovb
es
xlat
lret
pop
cld
in
shl
jg
clc
scas
pop
mov
sti
les
pop
ds
mov
mov
lock
mov
int
sarl
gs
ja
and
scas
and
dec
cmc
sub
xor
into
loop
call
shl
or
mov
jnp
sbb
add
clc
mov
mov
mov
loopne
jns
ret
mov
dec
nopl
adc
push
stc
mov
lahf
xchg
mov
rolb
xchg
push
xorb
subb
shll
push
gs
sbb
addr16
sbbb
xor
pop
push
cmpsb
std
sub
mov
sbb
insb
mov
push
enter
mov
xor
shr
ret
dec
cwtl
inc
insb
xlat
int3
rolb
inc
ja
pop
add
incb
push
sub
cmpsl
in
ret
in
mov
add
or
addr16
idivl
icebp
cltd
mov
pushf
inc
fwait
pop
fbstp
push
out
movsl
rorl
repz
test
sub
jae
in
mov
shll
gs
pusha
sbb
cmp
xchg
aam
in
in
std
inc
aam
imul
dec
mov
sub
test
or
movsl
pop
jecxz
push
jmp
testl
and
push
mov
fsincos
dec
ljmp
jb
fcmovnbe
in
loope
pop
inc
cmc
or
mov
jnp
es
test
ds
add
je
add
mov
xor
xor
aaa
jmp
mov
mov
push
das
push
lods
adc
push
scas
adc
cli
mov
cmp
jmp
push
lea
dec
jge
push
jl
lock
sub
mov
xchg
sbb
add
cmp
inc
jno
sbb
inc
pushl
ret
aaa
clc
and
js
xorl
js
int
mov
stc
jns
xor
repnz
lock
test
aaa
ficoms
mov
aam
push
sahf
push
lods
lret
xor
xor
mov
adc
jecxz
xor
aad
sbb
out
push
sbb
adc
xchg
nop
adc
fidivrs
cli
and
xor
aam
jnp
mov
jnp
push
es
pop
dec
movsb
dec
icebp
out
sub
int
push
test
jp
dec
loop
lods
push
mov
xchg
bound
mov
jl
movsb
loope
pop
push
enter
fwait
ret
lret
and
xchg
pop
or
mov
hlt
dec
enter
mov
adc
nop
out
mov
incl
lds
xor
xor
mov
sub
pop
or
mov
adc
pop
cmpsb
fisttpll
mov
jnp
cmpl
lods
incl
fsubrl
test
mov
out
mov
adc
sbb
sub
adc
adc
xor
scas
in
adc
mov
mov
negl
sbb
mov
xchg
shrb
bound
ljmp
sub
icebp
orb
aaa
je
push
insb
adc
xchg
or
mov
in
jae
cmp
xchg
xchg
add
add
pop
mov
pop
in
xchg
leave
jb
std
push
ret
mov
pop
jae
jb
cld
aam
inc
movsb
adc
jno
sub
jp
mov
mov
cs
mov
push
enter
stos
lret
js
lods
sbb
sub
inc
dec
adc
fs
leave
and
iret
push
mov
lods
adc
sub
hlt
push
je
fcompl
lcall
mov
inc
repz
mov
xor
aad
mov
xor
lods
push
inc
adc
shll
lods
jns
les
out
mov
add
mov
movsb
and
cmpl
je
push
je
mov
pop
pop
bswap
ljmp
jecxz
arpl
movsb
sub
clc
sub
dec
jge
cmp
mov
lahf
out
mov
xlat
push
and
ljmp
ds
sub
mov
rorb
mov
fwait
jp
push
inc
int3
cmp
xchg
add
xor
or
insb
out
push
add
adc
adc
and
or
aaa
xchg
mov
shrb
xor
rcll
push
mov
and
cmp
out
dec
mov
test
enter
gs
pop
xorb
xor
imul
fidivrl
in
and
xchg
cmp
xchg
sbb
lcall
les
test
in
jmp
out
push
test
repz
or
jl
addr16
xlat
mov
in
adc
lea
gs
fadds
cmp
js
fwait
js
sbb
pop
push
sbb
cmp
or
sub
add
adc
jg
sub
les
xor
outsb
cmp
flds
xor
pop
pop
jbe
aad
jbe
xchg
cmpsl
push
mov
sahf
outsl
sahf
push
sbb
nop
xchg
push
insl
fnstcw
aaa
mov
insb
push
adc
cmp
dec
xor
dec
std
dec
mov
mov
mov
loopne
mov
jge
cmp
mov
adc
in
pop
sahf
out
fcmovnbe
or
rclb
test
dec
inc
push
int
pop
xchg
pop
cmc
pop
rolb
cli
aaa
mov
cli
sbb
daa
callw
fistl
mov
test
mov
xchg
int3
and
in
pop
adc
jnp
repz
push
lret
cmp
out
into
ja
inc
ja
rorb
mov
xchg
mov
jnp
and
add
scas
mov
mov
lret
xchg
into
pop
mov
add
frstor
js
and
std
lods
xor
jp
fmuls
dec
and
add
xchg
xchg
pop
jp
mov
in
mov
mov
push
shll
movsb
lret
mov
mov
cmp
dec
mov
shrb
and
pop
dec
dec
or
pop
adc
fdivr
mov
adc
scas
leave
and
sub
cmp
clc
cwtl
sbb
adc
and
inc
xchg
stos
jnp
inc
push
dec
cli
xor
in
mov
std
sbb
adc
mov
sub
push
push
push
adc
xor
das
xlat
push
aam
les
add
cmp
ja
cmp
add
adc
stos
fistpl
push
shl
cmpsb
fimull
dec
xor
pop
and
mov
pop
mov
add
movsl
loop
lea
and
cmpsl
roll
loop
jnp
lret
xchg
nop
mov
lahf
test
aas
out
xchg
dec
adc
sahf
cli
mov
sbb
sub
aaa
ficoms
adc
loopne
fs
jge
jge
jmp
mov
jno
cmpsb
sub
mov
leave
add
std
cli
mov
pop
or
mov
inc
popf
fs
cmp
ret
push
out
push
xchg
jp
and
stos
add
lods
int
jmp
cmp
sbb
cmp
dec
xor
inc
les
push
shl
scas
jecxz
fcoms
xorb
test
pusha
inc
std
dec
jbe
sub
loopne
xchg
sbb
loopne
lahf
sbb
sub
push
inc
scas
sti
cmp
sbb
iret
mov
adc
mov
jmp
mov
push
xor
addr16
adc
sub
arpl
packssdw
sub
push
cmpsb
bound
or
leave
cli
imul
fmuls
stc
ljmp
popa
jo
cmp
int3
enter
add
int3
out
dec
arpl
mov
cltd
std
sbb
mov
cmp
in
out
outsb
and
jp
or
outsl
push
repnz
aas
lea
outsb
faddl
mov
mov
andl
icebp
rclb
xorl
mov
test
aaa
cwtl
mov
subb
or
out
cmp
or
call
mov
cmp
je
cli
mov
nop
scas
dec
mov
ret
shlb
xchg
push
push
cld
push
fistpll
mov
mov
mov
shrl
loop
sub
jle
das
and
jmp
mov
lods
and
add
cmc
sbb
sub
push
call
testl
out
and
and
pop
movsl
xchg
in
or
inc
mov
and
lods
xchg
repnz
xchg
push
insb
in
add
jo
inc
arpl
jno
pop
shrl
clc
sbb
mov
xchg
sub
adc
pop
imul
and
rol
mov
sub
jp
cmp
sbb
add
loopne
daa
mov
cli
push
popf
or
xlat
pop
call
cltd
rclb
lea
or
sahf
and
loopne
fisttps
jp
cmpsb
test
or
rcrl
mov
push
or
scas
add
dec
rorl
sub
push
mov
mov
cmpsl
inc
inc
enter
push
jp
mov
dec
xchg
and
bound
fadds
xor
xchg
jmp
or
repnz
call
lock
add
sarb
mov
aaa
lret
mov
hlt
stc
dec
sub
cmp
out
adc
push
fsubrl
jmp
test
clc
xor
movsl
aam
sub
jno
mov
adc
mov
pop
popf
jmp
test
test
xor
jl
mov
stos
loope
test
xor
add
das
push
outsl
inc
in
inc
xchg
testb
std
repz
outsb
popf
sbb
rcl
cltd
shl
das
cltd
rorb
push
loopne
jne
loop
pushf
dec
xor
in
pop
ss
jle
cmp
jge
pushw
cmp
sbb
pop
pop
imul
inc
idivl
repnz
or
pusha
adc
cmp
push
rorl
test
dec
sbb
es
cltd
roll
cmp
enter
icebp
pop
inc
xorl
shl
xor
ficoms
enter
sub
and
or
mov
mov
add
movsb
and
and
add
outsb
mov
cmc
mov
shrl
arpl
sahf
dec
aam
lret
mov
pop
xor
push
pushf
test
inc
repz
bound
jmp
ss
addr16
add
xchg
add
cmc
and
daa
pop
cmpsl
or
inc
sub
pop
xchg
fstpt
lret
ret
imul
mov
xlat
jecxz
aam
jge
aam
add
add
cmp
inc
cli
add
xor
xchg
filds
addr16
inc
dec
insl
adc
adc
pop
stos
out
xchg
jmp
xor
xor
clc
mov
data16
sbb
leave
sbb
add
mov
out
test
sub
inc
fwait
or
sbb
outsb
mov
and
fidivs
adc
into
sbb
jle
test
out
jne
push
les
jae
sahf
out
inc
dec
or
repnz
push
pop
dec
mov
push
dec
pop
sbb
cld
and
rorl
in
cmc
jecxz
sbbl
popf
leave
xchg
mov
inc
mov
test
fimull
xor
pop
mov
sbb
xchg
xchg
xor
test
mov
jg
leave
inc
rorl
shll
push
jmp
gs
xor
shll
addr16
push
inc
outsl
iret
add
xchg
jmp
ss
in
mov
cltd
scas
in
mov
scas
sub
pop
jbe
icebp
mov
cmpsl
push
pop
xchg
add
lret
push
mov
cli
xchg
outsb
out
jno
bswap
test
and
mov
pop
lcall
outsb
shll
jg
outsb
mov
mov
sbb
adc
inc
add
dec
aaa
cmp
aaa
inc
push
nop
mov
movsb
mov
fisubs
mov
push
sahf
aad
mov
mov
loopne
leave
loop
outsb
xchg
jnp
jno
inc
addl
sahf
pmaddwd
mov
pop
mov
add
cmovl
push
cmpsl
test
dec
orl
mov
lock
aas
imul
or
adc
dec
and
dec
adc
out
cmp
test
sbb
cmp
enter
jmp
stos
inc
mov
testl
adc
mov
sbb
testl
xchg
mov
dec
xor
jmp
sbb
nop
pop
mov
sbb
sub
xchg
add
sbb
dec
xchg
xchg
add
lea
imul
loopne
insl
nop
jmp
ret
sbb
jge
xchg
fcom
sbb
sub
mov
cmp
pop
mov
inc
jbe
or
or
ss
pushf
js
push
lea
bound
lret
mov
cmp
push
lods
jnp
out
lret
jae
das
push
int3
xchg
inc
sahf
jbe
inc
movsb
pushf
and
out
scas
jle
lods
xor
movsb
sahf
push
xorb
out
imul
push
mov
repz
inc
js
and
iret
xor
sub
mov
add
xchg
xlat
js
fildl
dec
icebp
into
cmc
sbb
repz
jnp
adc
imul
je
add
mov
dec
mov
loop
fidivrl
call
shl
mov
mov
cmp
mov
push
push
cld
cwtl
jg
inc
pop
or
cmovno
cmp
mov
in
cmp
imul
or
xor
mov
jl
mov
pop
ret
fstl
stos
outsb
bound
movsb
jle
stos
out
scas
push
jns
sbb
jo
sahf
ds
int
dec
mov
in
ja
cmpsl
pop
mov
inc
fimull
push
and
js
xor
repnz
aam
push
movsl
fmull
loope
lods
push
cmc
and
pop
or
push
dec
cli
cmpl
sub
dec
pushf
lods
addr16
fidivl
xor
into
test
stos
mov
ret
xchg
cli
mov
sbb
mov
rcrb
or
loope
xchg
aas
pop
jbe
push
js
std
push
call
out
sub
repnz
ss
je
test
jecxz
and
xor
cld
xor
std
je
aad
push
cmp
push
lods
jp
aad
int3
je
int3
and
mov
lock
mov
mov
or
jl
pop
int
imul
add
adc
mov
cli
lret
push
xchg
inc
lcall
imul
outsl
cmp
or
mov
mov
push
mov
jp
test
out
mov
inc
imul
movsb
pop
std
ret
and
dec
fists
mov
cmove
mull
adc
jp
leave
xor
fnsave
cs
loop
in
lret
push
mov
sbb
pop
aas
out
adc
ret
mov
dec
jl
lds
sti
mov
int
sub
mov
mov
inc
mov
and
jl
adc
mov
ds
test
pop
or
ja
inc
jns
cmpsb
dec
scas
mov
add
in
pop
sub
insl
movsb
rcll
xchg
rcrl
movsb
fimuls
sub
out
jg
cmp
push
insb
mov
sbb
in
mov
adc
bound
mov
sbb
fsubs
into
jbe
cld
or
test
cmpb
sahf
inc
jnp
faddl
add
dec
ja
lcall
sbb
int3
mov
imul
arpl
cltd
lock
mov
sub
sub
scas
repz
xchg
jbe
test
mov
or
mov
mov
fidivrs
add
pop
push
xchg
rcrb
xchg
mov
xchg
add
ficoms
and
push
and
add
cld
ja
negl
pop
xchg
or
sbb
jb
xchg
jmp
in
pop
sbb
outsb
popf
leave
push
aaa
xchg
mov
icebp
arpl
cs
mov
pop
pop
push
arpl
jl
subl
xchg
ljmp
fsts
push
pop
cmp
push
mov
fldt
int
fstl
ljmp
xchg
sar
jg
ss
pusha
xchg
in
mov
mov
mov
or
pop
sqrtps
outsl
lock
dec
cli
fisttps
addb
inc
mov
and
jns
aaa
pop
in
insl
int
pop
outsb
enter
sub
xchg
xor
gs
shl
jl
pop
int
dec
inc
jns
push
add
ja
outsb
lds
lds
push
xor
inc
pop
cltd
pushf
cwtl
out
inc
sti
or
ffree
xorb
jne
pop
add
dec
cmpsb
jno
dec
mov
sbb
dec
xchg
inc
cltd
pextrw
cmp
vmovaps
mov
push
data16
lret
aam
jb
dec
inc
or
and
loopne
out
mov
adc
test
xor
imul
push
jmp
outsb
test
mov
int3
and
int
dec
movsl
jo
clc
mov
push
ret
sbb
dec
clc
or
xchg
mov
push
stos
jl
or
lret
pop
imul
xchg
ljmp
and
mov
int3
pop
pusha
addl
and
fcom
inc
sarl
pop
scas
clc
dec
dec
xor
out
int3
and
es
mov
adc
mov
adc
out
dec
mov
std
and
insb
imul
cmp
jg
jp
jle
dec
mov
leave
pop
jae
imul
push
in
dec
orl
cmpsb
push
pop
dec
jno
out
and
hlt
xchg
leave
push
cmpsl
jo
es
fcmovb
xlat
adc
insl
nop
cmp
or
jecxz
mov
jp
push
jmp
xor
mov
cmp
xchg
mov
cmpsb
pop
hlt
sbb
xlat
pop
xchg
insl
jge
xlat
scas
roll
ret
movsl
aam
inc
insl
out
addr16
lds
data16
call
add
mov
mov
or
mov
sar
xchg
imul
pusha
add
gs
pop
push
stos
insb
pop
in
sub
inc
les
jbe
nop
je
dec
testl
mov
cli
sbb
and
std
push
or
daa
sbb
mov
mov
inc
fsubrp
mov
iret
jp
add
loopne
loope
mov
cli
pop
sbb
sbb
in
mov
cmp
xorb
dec
mov
fnstcw
movsb
inc
lahf
div
sub
push
adc
dec
out
add
mov
sub
xor
inc
int3
and
jae
pop
xchg
pop
push
std
and
std
dec
rorb
inc
mov
lods
loop
push
pop
xchg
out
ljmp
fsub
sbb
test
jle
ds
jb
hlt
sub
add
ss
and
ret
inc
or
int3
and
pop
xchg
add
mov
xlat
mov
pop
dec
je
call
loopne
xchg
inc
test
xchg
or
push
adc
stc
xchg
movsb
call
orb
adc
and
pop
xchg
or
jmp
adc
xor
cmp
ficoms
dec
jle
push
nop
fdivrs
xor
mov
lret
inc
inc
popa
push
push
cmp
or
pop
jle
push
xor
test
pop
or
aas
or
pop
enter
inc
jnp
imul
mov
xor
pop
pop
ret
clc
dec
negl
mov
shlb
js
cmpsb
inc
dec
stc
adc
dec
or
jge
xor
outsl
push
sbb
pop
mov
aaa
push
add
dec
mov
ret
jg
js
add
xchg
sub
push
cmp
sti
xor
sbb
les
dec
xor
stos
sbb
lret
add
mov
cmp
mov
jae
fcompl
push
mov
jnp
rcrl
jg
jecxz
les
jo
insl
fists
mov
ret
xor
pop
mov
mov
mov
adc
xchg
loopne
outsl
data16
or
rclb
mov
sbb
inc
repnz
mov
push
sub
jbe
push
mov
or
nop
pop
shll
dec
movsl
lds
fisubs
scas
inc
int
repz
inc
jmp
and
cmp
fldcw
and
add
das
jg
ret
jb
xchg
mov
mov
mov
mov
inc
loopne
lds
mov
jle
roll
mov
addr16
jne
xor
inc
out
data16
ret
cmp
add
jbe
movsl
adc
jno
jl
xor
inc
add
sub
inc
jns
in
out
les
fistl
mov
adc
gs
xchg
xor
push
cmp
sbb
fidivl
mov
dec
mov
pop
ds
gs
mov
fidivs
push
clc
xor
lret
rcr
cmp
pop
lcall
cmc
jl
sbb
je
push
xchg
int
ret
stos
and
mov
mov
lret
in
dec
mov
clc
ljmp
iret
jmp
xor
cmpsb
dec
mulps
in
and
rol
insl
sbb
ror
jmp
mov
bound
test
dec
fwait
add
xor
push
scas
xor
dec
or
xchg
out
std
dec
inc
imul
daa
sub
and
sahf
lea
or
orb
sub
sub
incl
test
hlt
cmp
jnp
cli
aaa
mov
or
add
std
sub
sbb
xchg
push
scas
push
movsb
sub
mov
cli
dec
test
mov
or
aam
repnz
mov
or
in
pop
fneni(8087
fstl
cmp
lret
shll
sbb
dec
xchg
idivl
repz
mov
scas
outsl
sub
or
cs
push
jo
pop
bound
out
out
sub
mov
or
gs
sbb
lods
xor
pushf
jecxz
es
push
xchg
sub
arpl
shrl
lods
pop
mov
mov
inc
stos
pop
mov
sbb
jbe
sbb
arpl
scas
inc
jge
add
xchg
and
mov
cmp
xchg
rcrb
lcall
xor
sbb
push
test
push
hlt
mov
ret
push
push
xchg
xchg
enter
mov
mov
mov
fucomip
and
dec
imul
mov
cmpsl
cli
int
or
mov
inc
inc
xor
lods
xor
jge
jl
leave
jno
dec
jno
sub
lahf
xchg
mov
outsl
je
cli
push
std
or
push
inc
out
inc
ljmp
sti
mov
pop
stos
pop
mov
xor
mov
cld
push
mov
lods
add
lahf
clc
cmp
dec
xchg
fidivrl
pop
loop
mov
ljmp
out
xchg
sub
gs
jae
pop
xchg
sub
outsl
and
loope
imul
imul
mov
mov
add
push
pushf
adc
cli
push
lods
push
lcall
push
xchg
dec
pop
clc
fdivrl
or
cmp
movsl
dec
orb
int
jne
pusha
stos
fists
lods
lods
cmpsl
loopne
nop
mov
pop
or
shr
stos
sub
movsb
dec
sbbl
inc
je
xor
dec
jns
and
sbb
push
int
xor
into
push
ret
sbb
scas
xchg
in
fwait
sarb
ret
pop
add
cmp
imul
clc
inc
out
and
std
jmp
dec
xlat
sbb
or
and
pop
mov
in
dec
aam
fwait
aaa
call
pop
lods
aad
or
scas
jo
mov
fisttpll
scas
inc
adc
inc
adc
add
inc
jg
sub
inc
jnp
xchg
push
adc
lret
mov
inc
int
sbb
mov
sbb
pop
mov
sahf
dec
ret
and
and
dec
test
pop
xchg
push
adc
and
fcmovnbe
sbb
dec
and
in
xchg
out
xchg
dec
testl
lock
cld
push
mov
data16
cmp
or
inc
mov
xchg
adc
xor
push
dec
ss
xor
pop
outsb
fs
pusha
jmp
mov
sub
sbb
sbb
data16
inc
jns
out
xchg
mov
pop
data16
pop
cmp
lock
subb
add
aad
stc
dec
mov
rorb
jp
pop
xchg
fcomip
mov
test
push
test
scas
pop
mov
daa
cs
jae
shlb
and
add
fisubs
loop
in
pop
jno
pusha
push
je
paddb
xchg
dec
cmpsl
fs
movsl
fisubrl
jg
xlat
repz
push
fnstenv
out
or
imull
mov
insb
ret
push
fdivrs
loop
cmpsb
sub
add
xchg
in
enter
cmp
aam
sbb
xlat
mov
clc
jno
xor
xorb
jge
dec
loope
sbb
decl
sub
dec
rorb
inc
cltd
lock
leave
inc
push
movzwl
push
mov
rorl
inc
xor
sub
mov
dec
and
push
std
movsl
dec
fwait
inc
js
xor
sbb
lds
insl
mov
xor
repnz
mov
cwtl
add
decl
jb
mov
test
movsl
repnz
aaa
sub
aam
jb
xchg
inc
cltd
xchg
mov
and
add
and
lea
pop
or
inc
aam
dec
movsb
inc
mov
bound
and
adc
mov
cmp
cmpsl
xchg
push
mov
popf
repz
sub
stos
in
mov
out
sub
testl
scas
idivb
xor
pop
nop
fidivs
add
outsl
push
mov
inc
loop
das
test
jecxz
frstor
ret
jb
ret
mov
and
adc
cltd
std
dec
repz
fstl
mov
or
push
fidivl
out
mov
push
clc
mov
sub
pop
add
pop
in
mov
stc
ss
aam
adc
and
lret
mov
add
std
cmp
xor
adcl
into
jb
gs
pop
jno
xor
leave
pop
mov
mov
adc
or
dec
test
inc
out
xchg
cld
add
push
inc
xchg
cmp
movsl
insl
stos
es
xchg
or
inc
or
add
mov
sub
nop
adc
inc
loope
into
jge
or
aam
cmc
sub
aaa
int
mov
and
scas
pop
add
mov
jae
jmp
scas
clc
xchg
nop
jb
es
dec
scas
xor
and
fidivl
out
and
clc
jg
inc
adc
cmc
popf
rolb
inc
mov
stos
out
xchg
jecxz
shrb
mov
sahf
roll
les
inc
cwtl
mov
fwait
mov
mov
test
fwait
rclb
add
fdivs
jmp
leave
adc
xchg
dec
sar
jns
push
scas
mov
xor
cli
repz
xor
subl
jmp
icebp
add
mov
into
and
or
mov
int3
and
xlat
push
leave
push
sub
push
cmp
bound
jno
lret
add
adc
fsubrs
sub
cmp
ret
or
pop
mov
je
xchg
adc
dec
scas
sahf
mov
fs
mov
mov
jb
add
cmpsb
add
fsts
leave
mov
and
jmp
adc
scas
nop
push
sub
in
xchg
leave
clc
aaa
clc
xor
mov
rolb
add
adc
or
lods
mov
pop
add
mov
cmp
cmp
mov
jmp
stc
xchg
mov
mov
aad
push
ficomps
push
ret
adc
negl
lret
add
inc
mov
stos
push
mov
insl
stos
and
mov
xchg
or
minps
mov
xor
xlat
lds
stos
xor
jo
or
sub
int3
enter
inc
imul
xor
and
out
dec
addb
mov
and
mov
jno
std
mov
lock
sbb
and
movsl
cld
out
pop
outsl
rorl
inc
rcll
adc
inc
xchg
adc
adc
fdivp
or
stc
xchg
arpl
dec
outsb
cmc
sub
cmpsl
xlat
and
sar
push
lods
mov
gs
loopne
pop
test
sahf
jecxz
ret
es
imul
xchg
xor
test
push
xchg
jae
lret
mov
xchg
jb
sub
mov
xor
loopne
pop
dec
arpl
sub
sbb
daa
icebp
sbb
xor
mov
or
in
adc
jo
pop
xor
inc
in
and
xchg
jecxz
pop
add
lods
sar
sbb
test
jb
in
sub
mov
jb
call
lods
test
fsubs
push
dec
roll
xchg
mov
imul
ljmp
loop
cmpsb
sub
fistl
or
in
ficompl
les
sti
enter
cmp
js
in
and
push
and
push
add
sahf
call
cld
sub
mov
jmp
andb
ret
fistpll
sub
gs
stos
xchg
sbb
std
and
pop
xchg
fadds
lret
pop
jae
mov
iret
sbb
cmc
stos
lea
mull
div
out
push
test
sbb
mov
mov
call
adc
xlat
or
mov
jg
or
mov
adcl
jb
dec
repz
fmuls
lock
jnp
subb
pop
loop
pop
out
paddd
jle
jns
pop
mov
int3
arpl
push
js
mov
inc
mov
inc
sbb
mov
fstps
movsl
fcompl
sub
int3
fs
rorb
inc
mov
sbb
mov
lahf
mulb
ja
mov
jmp
add
imul
pop
loopne
cld
cmp
ljmp
pop
mov
add
jnp
movsl
mov
jae
mov
cmp
iret
insl
mov
inc
test
fnstsw
sub
mov
aas
pop
sub
cmp
and
iret
mov
ficoms
push
cltd
nop
fdivrs
xor
jnp
xchg
fistl
push
mov
jns
xor
stc
stos
into
push
mov
scas
std
loop
movsb
mov
aad
dec
jbe
sub
es
pop
pop
loope
out
xchg
movsb
xorps
xor
or
repz
call
adc
repz
faddl
in
jle
push
inc
mov
dec
test
std
jno
xor
cmpsb
inc
int
or
push
fldcw
mov
xchg
imul
inc
mov
lods
loop
sbb
daa
adc
lock
int
mov
jo
jo
cmp
ljmp
adc
daa
std
fiaddl
adc
popf
stc
mov
outsl
loopne
popl
mov
xchg
cmp
dec
movsb
jae
push
add
imul
bound
add
test
push
hlt
and
dec
jp
cmc
dec
lods
leave
xchg
or
mov
xor
and
popf
roll
je
aas
pop
test
cwtl
xlat
inc
aaa
arpl
faddl
cmp
cwtl
mov
stos
ja
aam
out
loope
mov
test
test
inc
mov
repnz
push
popa
out
pop
cmpsb
das
xchg
fwait
ljmp
insl
loop
insl
mov
sub
inc
push
fstl
popf
pop
loop
and
dec
cmpsb
inc
ljmp
jo
in
cltd
aad
lds
cmpb
call
add
push
mov
mov
je
and
dec
mov
idivb
xor
imul
mov
bound
test
packssdw
sub
aad
lret
xor
push
xchg
mov
inc
or
mov
mov
outsl
ja
addr16
negb
data16
mov
push
pop
pop
fucomip
ds
test
or
jae
and
movsb
and
sbb
and
xlat
out
mov
fsubrs
in
push
scas
ss
pop
sbb
cmp
pop
fisttpll
mov
pop
frndint
push
pushf
cmp
xor
or
outsb
fsubrs
lods
xor
cmp
js
subb
cld
push
mov
jae
jmp
mov
cld
mov
mov
push
nop
fdivrs
sbb
imul
dec
movsl
jb
scas
stos
les
mov
adc
xchg
push
lods
pop
enter
mov
lds
das
push
call
add
pop
jne
fnstenv
js
repnz
fdivr
push
sub
jo
mov
pop
in
fimull
and
push
xchg
sarl
add
xor
sub
sbb
sub
lods
mov
push
push
add
jbe
jno
lcall
pop
jg
orb
xor
mov
sahf
incb
push
call
sti
pusha
xor
cmc
outsb
jae
out
mov
mov
mov
fldl
shll
mov
sbb
inc
mov
stos
xlat
push
mov
cmpsb
fildl
pop
ds
pop
pushf
mov
je
jb
pop
and
lahf
stos
inc
fsubs
mov
or
xor
imulb
movsb
testb
push
cmp
and
out
jne
cmp
mov
jge
jmp
ljmp
ljmp
dec
sbb
lods
xchg
in
xor
imull
or
xor
pop
adc
mov
push
repnz
push
ja
dec
push
mov
pusha
sbb
insl
xlat
dec
lods
jmp
pop
xchg
xchg
out
mov
or
xor
repnz
insb
je
sahf
outsb
vminsd
add
frstor
call
es
mov
setbe
rclb
sti
sub
mov
icebp
cmpsb
fisubrl
rolb
stc
test
xor
cmp
fninit
je
call
push
cmp
ret
bound
arpl
push
adc
dec
pop
inc
and
fmul
push
fsubrs
clc
in
xchg
loope
imulb
push
fsts
pop
mov
xorl
pop
repz
out
cmp
xchg
stos
add
fildll
mov
and
cld
cmp
imul
pushf
pop
or
pop
int3
aas
mov
call
mov
out
adc
cli
das
push
pop
mov
xchg
jge
jl
pop
inc
clc
sub
adc
add
daa
adcl
cli
pop
cmp
in
cwtl
out
dec
repnz
dec
jns
sub
sub
lret
orb
aad
adc
stc
sbb
iret
stc
cmpb
push
sbb
xchg
mov
mov
or
sbb
das
xlat
pop
mov
or
sbb
jl
push
xlat
dec
lds
jecxz
mov
lods
shlb
jmp
int
inc
pushf
lods
out
dec
xchg
int
jecxz
push
ficoml
mov
bound
xchg
add
adc
add
mov
xchg
in
daa
call
sbb
popf
push
or
les
sbb
jge
push
out
dec
pop
xor
fimuls
push
inc
iret
in
mov
adcl
repnz
popa
xchg
rcrl
adc
addr16
xor
hlt
dec
faddl
push
dec
xor
in
and
adc
leave
push
xor
pop
test
xchg
dec
subb
sti
pop
insl
adc
jp
inc
or
jb
push
jne
sahf
cmp
ljmp
in
mov
ds
lret
mov
inc
mov
ss
or
mov
xchg
filds
clc
jbe
xlat
adc
push
fwait
std
movsl
sub
or
rorl
inc
mov
popf
ficoml
sarb
in
gs
sub
dec
mov
fstps
xchg
cmpsb
push
cmpsb
or
lods
add
aad
das
mov
inc
dec
mov
adc
jne
int3
outsl
call
mov
test
sub
int3
push
jnp
and
fmul
push
cli
pusha
iret
pop
sbb
mov
insl
cmp
sub
mov
jb
push
push
fwait
pushl
jbe
inc
inc
sbb
push
jecxz
mov
jno
test
mov
jbe
dec
movsl
dec
int3
fbld
dec
std
test
or
fimuls
xchg
shll
aam
mov
dec
mov
jo
cmp
xchg
inc
repz
push
pushf
cld
dec
repnz
adcl
mov
dec
inc
stos
shlb
shlb
mov
fistps
cmpsl
int
mov
clc
aaa
adc
mov
lods
add
or
imul
mov
imul
movsl
enter
xor
ret
insl
push
jne
sbb
mov
inc
and
test
sbbb
xorb
xchg
fnstcw
shlb
lds
addr16
push
fwait
jmp
lret
dec
cmp
dec
xchg
das
clc
addr16
dec
divb
mov
xchg
mov
pop
mov
lcall
pop
pop
mov
push
pop
jle
push
xlat
push
in
adc
adc
mov
mov
lret
mov
dec
fnstenv
add
ljmp
xor
push
fwait
xchg
sahf
cmc
loop
cmp
and
cs
pusha
stos
lods
xchg
jae
icebp
sub
das
in
mov
or
loopne
daa
scas
add
and
add
mov
aad
mov
and
fs
adc
hlt
sahf
cmp
jmp
int3
and
mov
jle
enter
lret
mov
mov
loop
loopne
in
loop
addb
push
mov
popf
inc
push
lret
sbb
cli
sub
rorl
movl
test
inc
sbb
int3
or
add
or
lds
div
mov
stc
add
mov
mov
aad
cli
xor
loop
das
pop
roll
fisttps
mov
sbb
add
sbb
fdivrs
fadds
mov
cwtl
sbb
lret
push
lahf
add
cs
pop
js
jae
iret
lcall
popf
pop
push
sbb
insb
dec
jno
into
or
push
push
sbb
fldt
mov
mov
and
xor
sub
mov
bound
mov
inc
pushf
push
repnz
addr16
adc
dec
cli
cmpl
ljmp
int
push
xchg
push
int3
or
push
mov
xchg
in
in
mov
loopne
or
add
ds
clc
dec
mov
subb
jle
adc
adc
lret
pop
jbe
xor
dec
inc
mov
sub
pop
pushf
inc
mov
mov
dec
fs
movsb
dec
orl
mov
shr
lock
cmp
pop
jb
std
mov
out
loopne
jecxz
and
xor
mov
push
aad
ljmp
mov
filds
pop
jns
bound
adc
pop
jae
mov
xchg
aaa
sub
cmp
cmp
ljmp
push
mov
cmp
xor
roll
mov
int
dec
jne
cmp
stos
push
sub
mov
in
xor
pop
add
inc
test
mov
js
cmp
jg
out
dec
clc
mov
lods
and
sub
inc
ret
test
push
jg
push
add
dec
scas
test
mov
xlat
xchg
push
jbe
sub
or
fmull
push
mov
mov
dec
sub
dec
hlt
sub
test
dec
addr16
adc
mov
mov
sbb
pop
sub
or
fdivrs
adc
addr16
xchg
insb
in
gs
pop
and
imul
push
jnp,pt
stos
mov
out
bound
mov
fdivl
int
sub
jbe
xor
adc
jnp
js
push
dec
repz
inc
jp
and
jne
daa
and
add
cmp
movsl
fimull
xchg
iret
add
outsl
movsb
loope
and
add
or
rcrl
cmp
addr16
jne
out
push
mov
out
sub
hlt
jge
cmpsl
add
cmp
shll
mov
dec
fadds
sbb
fsubrp
push
bound
imul
shlb
scas
pop
xchg
fbld
sub
inc
jl
outsl
pop
xchg
or
dec
cmp
ret
clc
dec
or
xchg
mov
testb
test
dec
dec
lcall
mov
popa
mov
stc
test
cmp
cmp
mov
call
xchg
es
pop
enter
jb
mov
icebp
loop
and
mov
jns
in
lcall
mov
inc
scas
xchg
dec
push
jmp
mov
frstor
sbb
sub
jne
adc
movsl
fcomps
dec
mov
cmpl
mov
xor
out
lods
sub
out
aad
stos
pop
orl
xchg
bound
je
sbb
stc
ss
mov
and
and
clc
cmpsl
cs
sbb
xor
rorl
sub
adc
cmp
fimull
cli
pop
out
scas
lret
or
cmpsb
fisttpl
popa
mov
xlat
jg
icebp
js
cld
jge
aam
lods
push
fsubl
insl
pop
pop
xor
xorl
jns
scas
pop
pop
clc
sti
scas
sub
lock
repz
cmp
jg
lds
imul
sbbb
inc
into
and
inc
in
and
lret
mov
arpl
flds
ficoms
jae
addr16
and
es
bound
push
jmp
cmp
or
or
mov
cmp
arpl
adc
or
mov
push
cmp
cmp
addl
mov
dec
sbb
out
js
push
jnp
inc
lock
mov
pop
add
jl
jle
movsl
mov
sub
hlt
es
jnp
popf
aaa
shll
mov
ss
xor
std
jp
nop
pop
frstor
cltd
jae
pop
dec
movl
sub
sti
cli
cmc
sbb
test
mov
sub
cmp
mov
popf
dec
xorl
mov
or
pop
jp
aas
arpl
inc
xchg
lds
into
iret
or
mov
mov
popf
mov
push
mov
jge
sti
aad
xchg
jae
test
in
mov
into
mov
test
pop
lahf
enter
test
popfw
sahf
sbb
fmulp
add
cmp
lock
daa
fsts
inc
movsl
mov
push
adc
adc
pop
jbe
in
lods
cwtl
movsb
dec
nop
fs
lahf
notb
imul
pop
mov
mov
and
or
es
test
and
enter
ror
mulb
in
mov
fsts
bound
lods
pusha
xor
fnsave
sbb
rorb
xor
and
outsl
dec
jbe
pop
nop
scas
dec
adc
loop
fdivrl
insb
fsubrl
mov
mov
mov
insl
movsl
push
mov
jp
pop
push
in
mov
subl
dec
test
dec
xchg
xor
in
push
fcoms
pop
test
call
and
jno
addr16
hlt
mov
dec
negb
jo
popa
loop
adc
movsb
xchg
aad
pop
dec
mov
xchg
cmc
test
in
or
sbb
inc
add
leave
rorb
loop
mov
test
ret
jbe
int
icebp
xchg
out
jg
int
idivl
mov
dec
loope
pop
jbe
sbb
cwtl
cmp
fstl
sub
inc
ja
dec
jbe
adc
subb
mov
fstpt
mov
inc
xlat
fstpt
mov
cwtl
les
xchg
pushf
sti
adc
dec
fdivl
leave
push
inc
test
sub
mov
adc
stc
inc
out
xchg
in
stos
lods
add
sarb
shll
insl
inc
bnd
jae
aam
inc
movsb
sti
sub
mov
lahf
adc
push
popf
fidivs
push
cld
push
mov
or
jge
mov
and
std
aam
dec
xor
xor
addl
xchg
out
icebp
not
fistpl
push
lds
xor
dec
mov
jge
sub
je
ret
fdivr
je
sbb
test
jecxz
mov
mov
sbb
mov
mov
icebp
sub
pop
mov
mov
sbb
incb
insl
pop
subb
pushf
aad
pop
jno
jecxz
test
mov
xor
imul
movsb
sti
fldt
inc
lea
cli
roll
jbe
pop
xchg
add
dec
jp
mov
jp
pop
cmpsl
lods
les
cmp
daa
rol
enter
arpl
xor
stos
stos
sbb
xor
stc
inc
into
or
in
xchg
cmp
in
aam
push
push
leave
test
jno
and
mov
dec
jb
jno
repnz
in
aam
jle
pop
lret
xor
mov
inc
shrl
inc
cltd
mov
fs
xor
loop
mov
sbb
push
sub
pop
mov
sbb
mov
das
fs
add
loop
dec
adc
ds
xchg
out
jne
cmp
ljmp
pop
or
test
sarl
mov
xor
sbb
ja
or
adc
mov
cmp
dec
cmc
int3
push
mov
cmp
jg
es
sarb
movsl
rcl
push
rorl
es
cwtl
xlat
sbb
or
cld
movsl
jmp
lods
je
aas
jle
or
pop
and
test
mov
adc
cmp
dec
mov
inc
push
or
adc
aaa
ja
out
xchg
mov
mov
jl
enter
pop
enter
jae
in
cmp
idivb
push
mov
arpl
dec
aad
jno
incl
arpl
out
mov
inc
jb
pusha
or
pop
jecxz
out
inc
or
mov
xor
test
adc
xlat
dec
xchg
and
gs
jle
movsl
shll
leave
jno
pop
in
movsl
loop
fildl
cmc
mov
int3
lds
fstpt
mov
pop
add
imul
cli
stos
aaa
lcall
add
xchg
mov
stc
dec
inc
push
andl
out
movsb
push
nop
sub
lods
icebp
call
inc
lahf
out
inc
sahf
sti
and
adc
and
daa
adc
xchg
out
sbb
out
mov
dec
lods
sti
mov
inc
dec
test
jl
stos
inc
push
outsb
mov
sti
xor
sbb
cmp
scas
hlt
xor
int
dec
repnz
jne
cmp
frstor
xchg
insl
inc
mov
pop
lret
mov
loopne
loopne
imul
mov
pop
scas
roll
pop
jge
stos
add
cmc
lods
and
dec
shl
nop
repz
mov
jge
push
lock
sar
push
lods
enter
xor
pop
pop
cmp
xchg
xchg
jmp
jne
jnp
dec
jnp
mulb
hlt
push
push
lcall
dec
std
push
mov
test
fdivr
push
mov
hlt
pop
in
cwtl
shrb
mov
mov
call
int3
lret
push
sub
add
push
inc
mov
xchg
dec
subl
push
adc
out
out
or
xchg
pop
mov
movsl
xchg
xor
jns
outsb
dec
pop
std
in
and
push
xchg
mov
xor
xchg
cmpl
je
pop
add
stos
jp
sahf
cmp
push
lds
int3
stos
js
xor
add
lret
xor
sbb
inc
rclb
push
sub
imul
test
fs
shll
mov
cli
adc
fsubp
adcl
and
xchg
addr16
daa
xchg
fwait
push
lods
xchg
xchg
subl
mov
loope
in
shrb
jl
xlat
xchg
mov
push
test
dec
movsl
dec
pop
inc
push
addr16
insl
test
mov
mov
jge
imul
pop
xchg
xchg
or
jg
jmp
lods
mov
adc
filds
xor
sbb
mov
pop
mov
or
ja
cmc
sub
jl
cltd
ret
jbe
inc
mov
imul
lahf
es
xor
scas
ja
jo
cld
xchg
shlb
out
cmpsb
lret
scas
sub
inc
call
or
jp
dec
movsb
jae
ds
imul
imul
push
xchg
arpl
cltd
push
xorb
or
push
adc
fwait
mov
sbb
test
or
data16
mov
shrl
inc
sahf
and
inc
lods
add
loope
and
jb
loop
sub
mov
adc
bound
jg
iret
pushf
std
mov
jb
ss
popf
add
test
or
jge
mov
cmp
jo
sbb
push
and
adc
cld
cmp
push
xchg
pop
mov
inc
jne
jbe
fcompl
gs
inc
pushf
aaa
imull
sbb
cmc
fcmovnu
add
lahf
push
pop
pop
mov
push
into
pop
push
js
pop
sbb
int
movsb
sub
cmp
mov
mov
push
test
gs
lret
sar
fiadds
pop
iret
dec
mov
in
call
dec
add
jne
jmp
push
aas
into
pop
xchg
rcrb
jge
jae
das
mov
jnp
in
xchg
lret
push
shlb
jp
or
sbb
xor
bound
or
and
in
aam
push
stc
cs
adc
inc
adc
nop
stos
pop
in
fisubrl
rol
xchg
push
addl
jnp
js
test
push
dec
dec
pop
xchg
cmp
dec
fcomp
cmpsb
test
cmp
and
mov
aam
push
cwtl
hlt
xchg
mov
sub
xchg
dec
cmp
out
and
movsb
or
loopne
loopne
or
cli
push
insb
adc
fists
dec
xchg
xor
rorb
adc
push
cli
das
insb
in
sahf
fistl
mov
flds
test
xchg
roll
inc
mov
and
int3
or
or
jns
leave
and
adc
rolb
jb
adc
andl
jecxz
pop
mov
push
add
sahf
pop
mulb
sub
adc
mov
roll
pop
cwtl
cld
adcb
pop
testb
dec
lock
fdivs
cmpsl
sarl
fdivrs
js
adc
das
add
dec
je
add
mov
cmp
cltd
xchg
sub
std
push
ljmp
leave
outsb
jge
stos
pop
pop
scas
sbb
xor
xchg
mov
xchg
shr
add
push
loopne
rcl
les
outsl
int3
or
call
jle
aaa
arpl
push
xor
cmp
and
outsb
mov
xor
lods
xchg
mov
sahf
and
mov
jle
cmp
bound
adc
pop
in
scas
lret
cmc
sbb
pop
dec
cltd
pop
imul
ret
add
pop
fwait
dec
bound
push
push
sub
cmp
dec
adc
leave
and
aad
fisubrs
mull
arpl
repnz
hlt
dec
rolb
popf
cli
je
addr16
sbb
jae
and
xchg
adc
sub
scas
push
mov
xor
lds
mov
test
add
in
pop
add
mov
mov
scas
adc
sub
mov
sbb
mov
cmp
xchg
movsl
sbb
fnstcw
lock
jae
idivb
call
jmp
fs
in
push
rcrb
fildll
or
sbb
mov
push
jo
ljmp
or
in
orl
subl
jg
cmp
dec
stos
insl
xor
add
aaa
imul
pop
dec
mov
sbb
push
pushf
add
jb
sbb
mov
xor
dec
jge
mov
push
in
mov
cmpsl
test
rcrb
mov
test
fstps
dec
test
jg
sub
adc
push
pop
lock
dec
ret
test
inc
mov
int
mov
loope
mov
push
push
xchg
push
jp
inc
out
jp
enter
cld
jb
adc
or
in
adc
push
jns
mov
mov
mov
fists
icebp
mov
inc
push
cmp
int3
add
sti
fisubrs
sbb
sbb
jnp
sbb
pop
into
repnz
xchg
insb
push
fsubl
insl
std
or
jp
in
xchg
mov
xchg
mov
or
sbb
bound
das
mov
jmp
inc
lret
scas
in
xor
jge
cmp
dec
pop
push
mov
je
xor
sbb
pop
dec
or
scas
add
add
cmc
dec
cmp
mov
xchg
in
int
inc
movsb
push
ficoml
lods
and
dec
inc
ljmp
adc
iret
xor
cmpsb
dec
shr
pop
subl
fs
pop
pop
xchg
or
xor
lock
dec
fwait
inc
lret
and
cmpsl
scas
or
daa
add
sub
aaa
pop
loope
stos
in
fistpl
and
mov
hlt
sbb
daa
fs
pushl
mov
ljmp
aaa
icebp
jecxz
sbb
sub
mov
movsl
push
stos
sub
mov
mov
negl
jmp
test
lds
es
mov
jne
pushf
add
dec
xorl
and
out
cli
orl
xor
add
push
xor
add
push
xor
jo
and
dec
xorb
test
dec
cmpl
cmp
test
sub
mov
jge
div
enter
call
xor
xor
test
sub
adc
imul
in
mov
repnz
sbb
repnz
cmp
sbb
repnz
mov
mov
pop
call
xchg
push
push
xchg
fnstsw
xchg
insb
loop
roll
gs
lods
mov
or
fisttpl
shrb
inc
push
out
outsb
mov
rcrl
pop
dec
js
test
xlat
add
xor
adc
push
jbe
xchg
ss
rcrb
std
sbb
loopne
pusha
xor
lahf
sar
cmpsl
es
rcll
add
adc
outsl
sbbl
cmc
sub
scas
hlt
in
arpl
or
call
cmp
jb
lea
dec
push
xor
inc
jmp
test
fyl2x
js
sbb
xor
push
lahf
xchg
and
mov
fstpl
out
xchg
test
cmp
xchg
call
sub
jno
pop
scas
mov
out
repz
push
pop
clc
adc
dec
cmp
mov
nop
pop
push
sahf
add
cs
es
dec
cmc
popf
rorb
inc
ds
xchg
aad
sarb
ds
sbb
inc
mov
out
xchg
int3
or
xor
or
pushf
fld
aas
push
lods
mov
lahf
fwait
icebp
scas
and
jge
push
ret
mov
sub
jl
lods
add
cwtl
insl
js
lret
add
ret
rorl
mov
lret
mov
out
mov
mov
js
push
sahf
add
xchg
popf
roll
cmp
cmp
adc
xor
arpl
movsb
or
push
stos
pop
adc
fsubl
dec
cmpl
push
mov
xchg
mov
sub
xchg
dec
push
gs
nop
ds
mov
loope
int3
jnp
or
pop
rcrb
stc
push
pop
sahf
fistl
mov
xchg
lds
test
or
fnsave
mov
in
pop
inc
test
mov
sar
sub
push
push
fiadds
rolb
lahf
push
icebp
cltd
inc
jbe
cmp
js
out
sub
push
xchg
jg
hlt
scas
push
sti
xchg
jo
arpl
mov
mov
fcompl
xchg
int3
pop
sbb
push
adc
push
mov
cmp
pop
lock
loopne
ret
lea
loop
mov
jae
leave
push
dec
mov
xor
inc
cltd
mov
add
sbb
movsb
in
sub
rcrb
add
inc
test
das
fs
test
dec
sbbl
pop
call
inc
nop
int
jbe
add
stc
ss
sbb
mov
adc
or
add
sub
xchg
pop
mov
push
mov
push
mov
mov
push
mov
and
pop
xor
xor
xor
not
add
push
mov
addl
pop
push
push
push
pop
and
neg
not
sub
mov
pop
add
mov
pop
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
mul
push
mov
movsl
sub
loopne
dec
and
adc
fdivrs
mov
cltd
es
ror
xchg
dec
dec
daa
cltd
bound
loop
loop
aas
jmp
add
add
xor
and
je
jb
popa
insb
and
arpl
je
outsl
outsb
and
arpl
gs
inc
fs
jae
cmp
xor
js
or
jae
sub
arpl
je
arpl
jne
jo
jb
inc
outsl
jb
popa
outsb
jae
arpl
and
outsb
imul
outsl
jne
add
add
sbb
mov
cmpb
je
push
push
call
and
pop
mov
addl
inc
push
ret
insb
call
lea
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cld
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
movswl
mov
popa
jmp
out
adcl
inc
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xor
inc
pusha
push
mov
pop
popa
lea
pusha
mov
mov
popa
jmp
jmp
imul
jns
xchg
cwtl
sbb
and
push
call
and
pop
mov
addl
inc
push
ret
pop
jnp
mov
test
add
add
or
inc
and
jne
jmp
push
mov
jl
movl
cld
pusha
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
sub
add
add
mov
xchg
or
jne
pushl
popl
push
push
call
cmpl
je
push
call
cmpl
je
push
push
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
bound
sbb
push
xor
pop
xor
popa
sub
pusha
jmp
icebp
push
push
test
sbb
hlt
scas
stc
popa
mov
clc
mov
stc
jp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loop
call
sub
pusha
jmp
out
jne
xor
push
or
popa
popa
add
mov
lods
mov
add
pusha
je
and
js
mov
popa
push
pusha
js
push
pop
pusha
pusha
popa
pusha
popa
popa
popa
mov
stc
mov
jbe
sub
mov
cmpl
jne
mov
nop
pusha
pusha
jle
push
push
rdtsc
pop
pop
popa
jmp
or
push
jno
popa
push
pusha
push
push
pop
pop
push
push
push
push
rdtsc
pop
pop
rdtsc
jb
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
std
fsubrs
loope
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jo
cmpsl
push
pusha
mov
jmp
dec
std
shr
popa
or
ret
test
dec
aas
mov
rcll
jmp
pop
out
or
xcrypt-ctr
cmpsl
pop
lahf
in
adc
sbb
pusha
pusha
popa
jmp
cmp
mov
xchg
cmp
mov
push
inc
dec
mov
rdtsc
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
pop
nop
pusha
mov
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
aas
cmc
mov
xor
call
jmp
or
scas
jecxz
mov
addb
and
push
push
call
and
pop
mov
addl
inc
push
ret
jo
jno
pusha
jmp
pop
add
xor
inc
mov
popa
xor
mov
pusha
jmp
push
push
push
or
adc
xchg
sahf
out
xchg
mov
fwait
or
inc
push
push
call
and
pop
mov
addl
inc
push
ret
jl
mov
enter
mov
mov
cld
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
add
jmp
lock
call
and
pop
mov
addl
inc
push
ret
sbb
add
push
jg
fs
in
into
out
push
js
jne
jl
and
add
adc
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
lock
or
cli
and
popa
nop
jmp
movd
or
shrl
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
nop
jno
jmp
stos
loop
in
aas
jo
inc
and
cmc
nop
pusha
jno
push
push
rdtsc
pop
pop
pusha
pusha
popa
pusha
popa
popa
popa
push
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
jmp
add
lods
push
push
and
nop
jnp
jmp
push
scas
push
push
jecxz
test
test
add
add
addb
add
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
push
outsl
cmc
add
cld
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jge
fcomip
xor
fs
pusha
call
mov
or
lods
push
test
push
fs
xor
add
popa
jnp
jp
mov
sub
lods
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
adc
fwait
or
jl
and
add
adc
xchg
add
add
popf
lea
fwait
or
pusha
push
pusha
popa
pop
jl
pusha
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
lcall
mov
pusha
movswl
jb
push
pop
popa
push
push
push
push
push
jmp
xchg
in
insl
ja
xor
pop
pop
rdtsc
jns
push
push
rdtsc
pop
pop
pop
pop
mov
jns
je
mov
lea
jmp
dec
xchg
or
push
repnz
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
stc
add
add
mov
stos
cld
pusha
jmp
inc
in
pusha
xchg
imul
mov
lods
jmp
inc
jbe
notl
mov
popa
cmp
jb
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
dec
fisubs
sbb
sbb
jmp
or
or
call
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
fldcw
fwait
or
jl
and
add
adc
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
lret
push
add
push
js
jg
sub
push
push
jmp
test
add
inc
adc
aas
dec
pop
cmp
pop
mov
pusha
or
jb
adc
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
inc
std
sub
mov
nop
push
jmp
movsl
daa
add
int3
addr16
push
xchg
repnz
imul
inc
push
pop
push
push
push
push
pusha
popa
pop
rdtsc
pusha
jmp
shrl
jg
pushaw
popa
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
not
ret
inc
mov
adc
add
iret
xor
stc
fcmove
adc
shrl
fnstsw
and
pop
xchg
test
clc
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xlat
dec
and
mov
mov
popa
jmp
mov
ret
or
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
mov
dec
jmp
push
mov
fwait
stc
and
inc
stos
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sar
lds
daa
fwait
or
push
push
call
and
pop
mov
addl
inc
push
ret
mov
loop
mov
xor
or
jl
sub
add
adc
xchg
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
cmc
clc
nop
jmp
pop
test
jnp
mov
dec
pop
mov
sub
rcll
push
push
jmp
sub
call
mov
imul
jmp
lods
popf
push
push
inc
sarl
cld
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
add
add
or
lea
adc
insl
add
sub
add
add
add
and
pop
mov
addl
inc
push
ret
popa
data16
xchg
xchg
fdivl
pusha
mov
mov
popa
push
push
push
ja
jmp
test
repz
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
enter
cmpsb
outsl
lahf
mov
lea
jmp
xor
mov
shrb
push
call
and
pop
mov
addl
inc
push
ret
cmc
dec
jns
arpl
add
stc
stos
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
push
inc
fyl2xp1
pop
decl
cmpl
jne
xor
lea
jmp
push
lods
cmpl
ja
push
mov
push
lea
call
add
xchg
mov
mov
test
je
cmp
jne
push
xor
scas
jne
pop
sub
push
cld
xor
dec
mov
xor
xor
lods
xor
mov
mov
mov
mov
shr
rcr
jae
xor
xor
dec
jne
xor
xor
dec
jne
not
not
mov
rol
mov
pop
cmp
je
pop
add
incl
jmp
pop
stc
push
push
call
and
pop
mov
addl
inc
push
ret
or
das
mov
pusha
mov
jp
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xchg
push
xor
mov
shl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
insb
sbb
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
fisubl
add
add
dec
jnp
gs
jmp
flds
push
enter
sbb
imull
mulb
mov
sbb
or
xchg
dec
add
add
add
add
and
pop
mov
addl
inc
push
ret
xchg
xchg
jae
ficoms
push
mov
pop
popa
jmp
js
std
inc
inc
arpl
add
addl
add
mov
lods
push
push
call
and
pop
mov
addl
inc
push
ret
shl
xchg
jle
and
fwait
or
push
add
add
cs
leave
out
imul
push
call
and
pop
mov
addl
inc
push
ret
and
rorl
stos
loop
in
aas
jo
popf
or
or
test
fwait
or
mov
mov
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
out
cmp
cmp
mov
pusha
pusha
push
pop
jge
popa
mov
popa
lods
push
push
call
and
pop
mov
addl
inc
push
ret
inc
outsl
aas
mov
aam
jb
jmp
iret
sbb
je
mov
test
hlt
stc
cmpl
ja
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
mov
pusha
push
push
pop
pop
pusha
push
pop
pusha
popa
popa
popa
mov
jmp
cmp
sbb
xor
pop
xchg
cwtl
sbb
sub
adc
add
stos
mov
push
jge
testb
sub
xchg
test
lea
fwait
or
jmp
mov
mov
cld
mov
pusha
mov
adc
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
ret
dec
js
fcoml
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
clc
mov
xor
add
push
push
call
and
pop
mov
addl
inc
push
ret
int3
pop
nop
xrelease
mov
sub
movb
movl
movl
cmc
jl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movl
lock
push
sbb
out
jb
push
or
wrmsr
jno
jle
jmp
scas
add
rcr
mov
das
lret
test
popa
mov
pop
popa
push
push
call
and
pop
mov
addl
inc
push
ret
mov
scas
jnp
sub
pusha
sub
add
popa
ret
sub
mov
push
mov
push
push
push
push
mov
add
mov
mov
add
mov
movzwl
jmp
cmp
jb
mov
add
cmp
jae
mov
sub
mov
add
pop
pop
pop
pop
leave
ret
add
dec
cmp
ja
mov
pop
pop
pop
pop
leave
ret
pusha
mov
jno
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
repz
jmp
mov
add
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
addr16
push
add
add
or
test
test
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
inc
pop
push
cmc
and
das
stc
jo
jae
stc
jmp
lcall
dec
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jmp
lds
out
pop
cmpsb
insl
sbbb
inc
cmp
or
jg
mov
imul
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
lods
stc
stc
add
pusha
mov
mov
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
clc
fiaddl
fwait
or
push
push
call
and
pop
mov
addl
inc
push
ret
and
inc
std
add
jl
and
add
adc
xchg
mov
push
pusha
jmp
adc
in
icebp
js
pusha
popa
popa
mov
pusha
call
sarl
test
jbe
or
pop
push
mov
pop
popa
mov
add
jmp
loopne
pop
mov
pop
sbb
ficoms
adc
add
popa
xchg
mov
lods
inc
xor
mov
sub
mov
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jmp
pushl
jl
aaa
call
stc
jmp
mov
lea
jno
or
nop
pusha
jmp
xchg
jmp
push
hlt
outsb
sub
push
xchg
call
add
add
clc
popa
push
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
popa
nop
jmp
cmp
cmp
xor
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
sahf
xor
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cltd
and
or
or
add
adc
les
xchg
push
jge
jmp
movsl
out
decb
pop
unpckhps
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
add
mov
lea
stc
pusha
mov
or
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
add
mov
jmp
mov
mov
call
pop
sub
mov
cmpl
je
mov
movb
mov
movb
call
pusha
pushl
lea
push
lea
push
call
add
popa
jnp
mov
jns
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ja
pop
push
xchg
rcll
add
ja
mov
rorl
or
add
add
add
and
pop
mov
addl
inc
push
ret
imul
lods
add
add
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
adc
add
jmp
xchg
pop
dec
sahf
clc
pusha
loope
mov
fdivrl
call
and
pop
mov
addl
inc
push
ret
pop
ljmp
push
call
and
pop
mov
addl
inc
push
ret
mov
or
adc
fwait
or
test
fwait
or
pusha
call
in
add
cltd
xor
pop
js
jg
popa
mov
stc
jmp
mov
pop
sbb
je
pop
and
sub
inc
int3
stos
mov
mov
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
add
cmp
and
pusha
or
mov
popa
jmp
jmp
divb
push
movb
sbb
sub
call
pop
sub
mov
mov
lea
mov
pop
xor
ret
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xor
ret
cld
xor
mov
pusha
mov
pusha
jmp
scas
pop
mov
and
mov
lret
jns
mov
loopne
test
sbb
enter
push
push
call
and
pop
mov
addl
inc
push
ret
jns
jo
lock
mov
nop
jno
push
push
jle
rdtsc
pusha
popa
pop
pop
push
push
push
push
jmp
mov
pop
add
mov
mov
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
jl
cltd
inc
jmp
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
sub
sub
mov
jle
mov
lea
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fxam
cmp
jae
stc
movb
clc
call
sub
jl
push
push
push
rdtsc
pop
pop
pop
push
jo
push
push
push
pop
rdtsc
je
pop
pop
mov
jge
pusha
jmp
movl
rdtsc
pop
pop
popa
mov
jmp
stos
cmp
cld
push
scas
jno
pop
call
add
push
push
push
rdtsc
pop
pop
pop
pop
pop
cmc
mov
pushl
sub
jmp
cmp
lods
test
push
adc
dec
jle
lea
jmp
leave
or
dec
fcoms
stos
daa
jns
pop
add
call
jb
jmp
int3
insb
or
mov
cmp
mov
add
add
add
and
pop
mov
addl
inc
push
ret
pushf
fnstcw
sub
jg
jmp
sbb
mov
shl
mov
push
call
pop
sub
mov
mov
mov
mov
mov
mov
movb
movl
lea
mov
pop
xor
ret
pusha
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
add
and
or
add
add
add
and
pop
mov
addl
inc
push
ret
xchg
sub
cmp
popl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
add
pusha
sub
jmp
mov
ds
sub
nop
pushf
mov
popa
popa
call
pop
xor
and
cld
inc
pop
imul
cmp
insl
adc
mov
add
mov
push
mov
pop
mov
mov
mov
xor
add
xor
mov
add
movzwl
mov
sub
mov
add
sub
dec
jne
mov
or
fcompl
jno
pushf
jmp
pusha
jl
mov
in
rorl
add
cld
fs
jg
arpl
jbe
mov
out
mov
dec
push
pop
fnstsw
inc
dec
insb
jmp
cwtl
or
aas
ss
xchg
inc
fdivl
jle
dec
leave
cmpsl
pop
xor
clc
or
cmp
out
jle
fnsave
popf
mov
add
pop
cwtl
xchg
mov
jo
jle
push
inc
add
int3
and
jp
pop
and
or
movsl
jo
mov
and
jmp
out
jle
inc
aas
ss
insb
sbb
int
mov
mov
pop
add
jle
jo
sti
jo
jle
or
outsb
and
jmp
mov
js
pop
dec
dec
push
aam
mov
cmpsl
in
cmp
fisubs
or
dec
pop
popf
adc
and
popf
popf
cmpsb
fldl
loope
mov
cmpsb
movsl
mov
cmpb
or
jae
mov
sub
adc
pop
clc
adc
fisubl
add
cli
sub
sub
mov
sub
popf
addr16
xchg
movsb
sub
mov
mov
fldcw
mov
add
out
div
xlat
movsl
xor
xchg
outsb
sbb
pusha
push
adc
mov
adc
mov
or
adc
stos
gs
adc
fisubs
movsl
xor
fisubs
movsl
mov
pop
stos
inc
sbb
inc
mov
popa
addr16
mov
sahf
jns
ret
movsl
xor
sbb
movsl
cltd
add
mov
cmpsb
fiaddl
add
mov
or
xor
in
fldenv
stc
test
mov
out
pop
je
pop
dec
pop
std
xor
ds
fisubs
pop
inc
andb
xor
sbb
ds
fisubs
pop
popa
andb
xor
sbb
cmpsb
movsl
cmc
shrl
and
ficomps
mov
fldcw
out
and
push
scas
movsl
xor
sub
aad
mov
push
dec
and
stos
mov
xor
mov
out
xor
push
insb
in
or
add
daa
dec
pop
in
faddl
jno
sub
cmpsb
movsl
adc
pop
sbb
mov
cmpsb
movsl
insb
mov
xorl
sti
aad
loope
movsl
xor
fisubs
aad
lcall
int
cmpsb
movsl
xor
addr16
clc
sub
clc
sub
fldenv
dec
lea
aad
incb
call
inc
sub
movsl
xor
fbld
shll
xchg
movsl
xor
fisubs
dec
cmp
dec
ficoms
and
stos
movsl
xor
sbb
lea
dec
sarl
cmp
jmp
cmpsb
add
xor
xchg
enter
gs
mov
daa
mov
sbb
cmpsb
movsl
xor
adc
jge
mov
mov
dec
loopne
test
filds
imulb
cmpsb
or
frstor
cltd
push
addr16
clc
sub
clc
sub
fldenv
cmp
enter
mull
movsl
movsl
xor
mov
adc
loop
sbb
loop
movsl
xor
ljmp
jae
and
xor
fsubl
pop
xor
cmpsb
movsl
inc
fidivs
sub
cmpsb
movsl
adc
stos
test
stos
mov
cmpsb
movsl
push
in
les
js
cmpsb
stos
mov
in
les
mov
or
and
stos
movsl
xor
fisubs
movsl
xor
fisubs
movsl
xor
fisubs
movsl
xor
arpl
xor
movsl
movsl
xor
mov
adc
loop
sbb
loop
movsl
xor
xor
inc
jns
and
sub
pop
test
jno
fiaddl
in
jmp
cmpsb
shrb
mov
xor
cmp
testl
or
dec
movsb
pop
movsl
movsl
xor
mov
daa
sbb
loop
movsl
xor
inc
adc
or
cmpsb
movsl
ret
movsl
xor
out
enter
les
ret
and
cmc
jmp
cmpsb
aas
xor
fisubs
pop
mov
movsl
and
andb
pop
sbb
pop
aam
into
fidivl
sub
adc
add
rcr
fisubs
pop
imul
cmpsb
in
sbb
and
pop
add
inc
or
incb
dec
insb
jbe
gs
stos
movsl
xor
push
adc
shll
and
jns
pop
jmp
jl
push
mov
or
movsl
xor
dec
add
pop
inc
push
mov
insb
dec
movsb
pop
movsl
movsl
xor
mov
or
loop
sbb
loop
movsl
xor
adc
jge
arpl
aad
fbld
movsb
popa
sbb
xor
fisubs
pop
mov
andb
pop
sbb
test
xor
mov
cmpsb
pop
cmpl
cli
lods
scas
movsl
xor
sub
xor
sub
shlb
jmp
cmpsb
es
jns
mov
fisubs
out
mov
call
sub
fisubs
pop
mov
fisubs
sbb
mov
scas
xor
sarl
and
fisubs
movsl
xor
fisubs
aas
xor
fisubs
pop
imul
cmpsb
in
sbb
or
mov
cmpsb
movsl
sbb
mov
inc
pop
out
test
movsl
ret
movsl
xor
xchg
jo
ret
movsl
xor
frstor
cltd
push
addr16
sub
clc
sub
fldenv
pop
sbb
mov
jle
jge
mov
push
cmp
jg
jns
xor
rclb
lcall
js
sub
and
pop
add
rcr
fisubs
pop
pop
andb
xor
sbb
gs
mov
xchg
mov
jmp
or
ret
movsl
xor
mov
cltd
cmc
and
push
outsb
imul
lcall
movsl
xor
fdecstp
aad
icebp
fldenv
xor
leave
add
xor
pop
ss
dec
loope
mov
ljmp
xor
xchg
push
pop
dec
inc
cmpsb
or
frstor
cltd
push
addr16
clc
sub
clc
sub
fldenv
xchg
int
sub
movsb
gs
movsl
movsl
xor
mov
sbb
loop
sbb
loop
movsl
xor
jb
or
or
jl
cmpsl
out
fldenv
xor
push
sbb
push
dec
mov
movsb
movsl
xor
jmp
cmpsb
add
xor
iret
aam
fisubs
out
sub
insl
mov
pushl
and
xor
fisubs
sbbl
xor
test
out
movsl
xor
lods
xchg
aad
mov
jbe
and
test
movsl
inc
fidivs
sub
cmpsb
movsl
adc
mov
test
adc
cmpsb
movsl
jne
in
mov
lock
and
cmpsb
movsl
and
mov
pop
xor
arpl
movsb
sub
iret
xor
enter
fldt
jmp
jno
lods
movsl
xor
fisubs
push
out
fldenv
mov
sbb
sub
push
test
aam
sbb
cmp
pop
xchg
pop
lret
mov
fucomp
push
sub
mov
add
cmpsb
mov
shlb
shll
fisubs
je
or
fldenv
js
int
inc
lahf
and
ja
and
cmc
out
adc
ret
inc
mov
das
aam
repnz
test
enter
std
cli
stc
push
cmp
cld
stc
std
mov
mov
cmc
test
enter
std
cli
stc
aas
loop
rcr
stc
aad
mov
adc
dec
mov
addb
cmp
jns
vpaddd
aad
mov
mov
cmc
scas
rolb
cmp
aad
mov
lret
aad
mov
stc
std
int3
dec
mov
icebp
into
idivl
aad
stc
aad
stc
les
loopne
stc
std
mov
mov
cmc
test
enter
std
cli
stc
push
cmp
cld
stc
std
mov
mov
cmc
test
and
cmpsb
lods
jmp
jns
mull
fisubs
movsl
xor
fisubs
mov
dec
push
dec
jno
pushf
mov
inc
add
shlb
and
cmpb
add
shlb
and
mov
aas
fimuls
mov
ret
inc
popa
aas
jno
fdivrs
mov
shlb
and
int3
mov
cli
add
shlb
and
lock
fimull
pop
stos
xchg
dec
adcb
test
mov
push
aam
sarb
push
das
das
mov
stos
repnz
or
xorb
or
out
imul
into
cltd
ds
mov
or
movsl
imul
sub
movaps
pop
test
cltd
jecxz
clc
mov
add
testl
fldl
int3
inc
or
insl
xchg
pop
mov
rcrl
xchg
addr16
aad
lods
cmp
mov
addr16
scas
mov
out
insb
aaa
adc
fsubrl
cmc
inc
mov
fildll
xchg
sub
pop
bound
loope
dec
add
mov
shrl
into
insl
lcall
data16
movsl
aad
mov
add
mov
inc
mov
mov
sub
sub
aas
mov
adc
and
xor
lret
adc
js
jmp
stos
ja
ret
fnstcw
in
add
add
es
int
sbb
jae
shll
sbb
pop
mov
xchg
rolb
sub
jae
mov
call
scas
addr16
scas
xchg
or
inc
cltd
out
cld
mov
cmp
cli
cmp
jmp
mov
push
xchg
sbb
mov
out
fldcw
je
ja
dec
push
testb
push
push
xchg
test
int
add
fdivs
icebp
push
loope
pop
decb
test
mov
shll
js
arpl
ror
lods
xchg
call
sbb
inc
mov
shrl
movsb
scas
les
jno
xchg
push
fwait
sub
adc
aad
je
in
roll
dec
out
popf
jl
lahf
pop
jmp
popf
dec
adcb
fadds
and
hlt
pop
int
shl
mov
pushf
xchg
adc
jbe
and
xchg
cs
sbb
and
ja
jb
jnp
popf
or
out
test
lret
in
sub
stos
inc
adc
ret
jge
gs
adcl
faddl
mov
jl
xchg
mov
ja
xchg
cmp
jae
sub
mov
push
in
inc
or
stos
dec
rcrb
mov
dec
cmc
cmpsb
cmp
stos
or
add
fimull
rcrl
adc
or
incl
lds
dec
ljmp
add
mov
mov
mov
sbb
loope
pop
fimuls
fs
cld
scas
pop
xor
mov
lods
popf
or
dec
insl
loope
jl
into
mov
mov
mov
mov
std
inc
mov
add
xchg
dec
xor
dec
mov
pop
xor
les
sub
cmp
pop
shll
sub
jmp
or
push
mov
xchg
sub
shr
loop
xchg
mov
loopne
cmp
mov
jl
fdivr
jl
outsb
jle
push
lods
push
inc
mov
and
cwtl
mov
pop
jo
inc
push
adc
xor
ss
popf
push
std
imul
adc
imul
test
fs
pop
fcmovnbe
sahf
xor
scas
pop
sub
mov
jl
rorb
std
mov
outsb
mov
call
push
icebp
jmp
outsb
jmp
faddl
jge
je
cli
cmp
add
ret
out
out
je
shrb
and
loop
adc
cmp
dec
aas
xchg
sub
xchg
lret
inc
mov
mov
mov
fcomp
mov
mov
and
notb
jno
js
cmp
repz
pop
sbb
nop
cmp
lahf
or
mov
icebp
and
ja
lgs
aam
xor
imul
shll
add
pop
js
fcoms
xchg
shlb
push
shr
insb
lret
cmpsb
jl
mov
ret
scas
out
aam
xchg
cmp
int3
lahf
mov
xor
test
test
pop
xchg
sub
dec
jl
fldl
fstl
add
mov
std
aas
fidivs
aad
pop
push
clc
adc
mov
and
scas
loope
or
pop
je
sbb
ror
test
fnstsw
int
add
fildl
in
pop
sbb
daa
out
bound
pop
idivl
mov
enter
mov
pop
hlt
push
and
jb
cmp
mov
mov
pusha
enter
fildl
pop
out
cmp
scas
adc
or
loope
add
fdivs
xor
jns
pop
fmuls
cmp
out
lock
add
mov
pop
cmp
lahf
pop
or
cmp
insl
sub
jecxz
jno
mov
mov
adc
xchg
push
ret
popf
jns
xor
sub
stos
fs
pusha
push
jnp
stos
ja
adc
adc
mov
int3
inc
lret
insb
xor
roll
adc
pop
cmp
inc
adc
ret
and
incl
ja
mov
sahf
mov
or
push
jae
ret
dec
out
fcmovnu
and
loopne
dec
xchg
cmp
or
lock
int
jl
sub
outsl
cmp
stos
push
loopne
aas
sbb
mov
pop
jmp
cwtl
mov
movsl
movsl
andb
hlt
out
cmp
cmc
lcall
pop
and
sbbb
fisubrs
xor
fdivrl
inc
daa
push
inc
jo
and
xchg
out
es
or
es
mov
push
test
cmpsl
cmpsl
or
dec
iret
jmp
sarb
cmp
cmp
dec
cmp
mov
pop
xlat
inc
inc
ljmp
nop
scas
loop
pop
popf
or
shll
stos
xchg
adc
lret
sbb
push
out
stos
sti
cs
jle
add
lahf
mov
xchg
pushf
scas
push
dec
xor
mov
imul
add
ficoml
stc
test
arpl
mov
pop
pushf
add
xchg
push
stos
fs
cs
jo
or
xchg
mov
pop
aaa
mov
push
test
xor
pusha
lgs
shl
xor
or
mov
out
push
pop
loope
iret
push
cmp
imul
jns
dec
sbb
sub
das
fstp
aaa
mov
or
scas
ja
sub
insb
pushf
push
mov
jp
push
and
sti
sarb
mov
ja
call
mov
or
add
arpl
cmp
adc
test
loopne
fstpl
mov
mov
mov
push
cmp
adc
in
in
jmp
stc
test
ss
lock
push
add
inc
jo
sahf
insb
push
dec
in
xor
sub
test
pop
dec
fcomi
aaa
nop
repz
sbb
lea
stos
mov
inc
sbb
int3
pop
stc
fiaddl
mov
movsl
push
dec
fnstcw
mov
push
imul
or
push
in
and
test
data16
popf
push
jl
pop
ds
lahf
jno
xor
inc
sbbl
sbb
sbb
mov
iret
push
int3
xchg
ds
lret
cmc
testl
iret
dec
aad
jmp
mov
cmp
jno
sbb
leave
icebp
adc
push
repz
jg
inc
jmp
mov
jbe
cmp
in
aad
sbb
add
fsub
cmp
gs
movsl
push
fsubs
xlat
or
xchg
mov
dec
mov
clc
sbb
ss
xor
or
cmp
pop
or
pop
dec
fimuls
push
bound
dec
int3
jecxz
pop
aad
aaa
and
shr
inc
inc
xlat
mov
roll
scas
or
mov
dec
shr
lcall
sti
daa
rcll
add
dec
fisubrl
lret
dec
es
repz
movsb
mov
fimuls
jmp
popf
jmp
adc
lcall
sbb
push
ja
les
ljmp
and
jl
popa
add
into
stos
or
cltd
ljmp
daa
jae
xchg
mov
xchg
xor
cmp
xchg
insl
ficoms
mov
ljmp
test
addb
and
xchg
adc
adc
add
test
cmp
ret
push
pop
lahf
sub
adc
adc
sub
outsb
das
mov
lock
or
xor
inc
sub
adc
cmpsb
adc
push
jo,pt
cmp
push
loope
addr16
xchg
push
sub
fisubs
dec
dec
adc
sahf
cli
lahf
scas
pop
jo
xlat
mov
mov
push
jno
adc
fdivrs
mov
or
jmp
rorb
mov
int
or
call
iret
mov
or
mov
push
clc
repz
push
mov
jle
shll
ret
pop
adcl
lods
or
imul
mov
mov
or
or
dec
cmp
nop
adc
popf
pop
dec
pop
pop
aaa
sbb
jae
fidivs
push
out
push
sbb
mov
pop
roll
js
cmp
aad
imul
data16
aam
shll
test
mov
push
jnp
das
out
add
pop
push
mov
add
jecxz
cpuid
fisubrs
aam
cmp
std
xor
mov
aas
cmpsl
adc
push
out
ret
dec
or
nop
ret
mov
imul
mov
aaa
mov
lret
xor
inc
or
shl
push
and
sbb
clc
xlat
jmp
jl
mov
mov
lock
lock
je
add
jne
test
addr16
xor
pop
add
cwtl
orl
out
mov
mov
nop
stos
xchg
mov
sbb
or
sbb
push
sbb
push
into
divl
add
hlt
mov
push
sti
int
ss
aad
aad
pop
paddd
lahf
xchg
mov
pop
mov
sbb
sbb
jg
sub
fldcw
or
in
aaa
in
jmp
or
lock
mov
xchg
sub
loopne
cmc
mov
cmpsb
push
sbb
pop
fldt
test
les
pop
orl
mov
push
mov
cld
jle
in
jae
sarl
sbb
mov
cmp
jl
in
cmp
cld
jnp
add
dec
push
jmp
push
in
neg
lahf
cmpsl
mov
insl
icebp
frstor
cli
xor
pop
inc
push
aam
subb
filds
notb
jae
xchg
rorl
xchg
lods
jo
repz
sarl
pop
xor
mov
push
imul
xchg
cmp
das
and
push
jle
subb
cld
dec
jge
fwait
pop
sti
cmc
cmpsl
xor
jl
inc
in
ret
sub
pop
out
or
jge
push
pop
js
popa
stc
or
out
jp
arpl
leave
mov
lahf
dec
mov
inc
test
mov
fs
cmp
scas
fmuls
pop
dec
call
sbb
push
add
arpl
xor
out
es
inc
rcr
or
subb
dec
mov
inc
cltd
and
pop
jecxz
data16
xor
jecxz
sbb
push
lea
subl
jns
out
dec
mov
cwtl
jns
inc
xor
xchg
mov
and
cmpsl
xchg
adc
pop
mov
cmpsw
movsl
xor
push
jnp
shl
adc
adc
inc
aad
lods
cld
sub
stos
inc
jp
fidivrl
ljmp
jbe
inc
test
add
push
sub
inc
test
inc
xchg
test
pop
xor
lock
inc
fcmovbe
mov
mov
lds
jns
xchg
cmpsl
push
je
shl
cmp
cld
sbb
jb
push
dec
cmp
hlt
ficoml
and
add
mov
outsb
std
scas
outsl
test
shll
not
hlt
dec
imul
adc
pop
pop
movsb
clc
mov
fcoml
sbb
add
jmp
or
aad
mov
or
divl
jecxz
dec
orl
xchg
into
rcll
in
data16
dec
es
adc
icebp
add
xchg
dec
les
addr16
inc
sti
orb
daa
pop
lods
jmpw
sbb
xlat
dec
shlb
cmc
mov
nop
scas
pop
xchg
aas
lds
adc
fmuls
testl
and
fnstcw
sub
push
stc
mov
shrb
pop
and
andb
lcall
hlt
or
in
jmp
mov
mov
sbb
loopne
push
cmp
dec
sbb
fisubs
xlat
aaa
imul
out
fistl
lds
xchg
rcrl
cmp
sarl
daa
imul
pop
mov
add
fidivrl
push
jno
pop
bound
aas
xchg
test
test
push
push
sub
push
adc
jne
dec
popf
sbb
xchg
shl
lods
testb
push
in
outsl
ret
jmp
sub
std
ficoms
sub
loope
cwtl
das
inc
test
inc
setge
lret
add
out
mov
sbb
xchg
and
das
testb
fidivl
mov
pop
std
sbb
mov
pusha
and
cmp
mov
loop
mov
mov
rolb
sbbb
push
sub
and
pushf
hlt
add
scas
jge
pop
push
inc
cli
sbb
stos
sti
mov
mov
gs
push
xchg
mov
out
test
ds
scas
or
xor
aaa
pop
lds
jnp
jg
stc
mov
rcrb
xchg
xchg
pop
mov
add
cmp
aad
ret
outsl
jne
jae
data16
das
and
sub
popa
mov
test
dec
fldenv
mov
and
mov
push
out
mov
jge
lds
inc
dec
aad
outsl
dec
rclb
mov
mov
inc
and
or
int3
mov
lock
addb
repz
add
dec
xor
cs
scas
subb
bound
xor
jb
sbb
mov
jnp
bound
aam
pop
mov
in
pop
psubd
xchg
pop
mov
push
icebp
test
or
or
loop
int3
roll
les
decb
mov
call
lods
lods
and
scas
stos
ss
icebp
fdivs
add
fs
test
pop
inc
fcomps
aad
xchg
add
filds
inc
jecxz
cmp
ficoms
insl
subl
inc
push
xchg
insl
addr16
in
imul
jno
outsb
test
stos
or
jg
mov
mov
mov
mov
push
sbb
stos
addr16
fisubl
sar
mov
jge
lds
out
adc
stc
mov
fsubrl
push
push
icebp
aas
sti
out
mov
mov
inc
mov
cmp
add
push
int3
dec
iret
mov
loopne
and
sbb
je
fnstsw
fdivl
xlat
or
sbb
testl
scas
cmp
adcl
pop
push
adc
mov
cld
dec
arpl
and
add
dec
push
or
call
int
es
lahf
jp
jo
xchg
sbb
push
bnd
cmp
inc
xor
enter
inc
ja
sub
xor
sub
notl
mov
js
mov
aam
or
sub
jns
flds
sbb
or
pop
ficomps
sbb
cli
inc
stc
or
sbb
ss
dec
xlat
aas
scas
pop
movsb
pop
push
shr
nop
push
rclb
jb
lret
imul
jno
aaa
lret
into
mov
ficoml
mov
fimuls
lea
xchg
data16
and
push
jbe
inc
jle
push
repnz
or
rclb
push
aaa
out
mov
test
loope
push
sub
ret
jmp
pop
jl
inc
add
loopne
ljmp
mov
dec
int
jmp
addb
pop
scas
adc
dec
mov
xchg
xor
dec
push
mov
jecxz
gs
jmp
sbb
aaa
mov
push
cltd
das
add
std
pop
bound
es
pop
push
jnp
fs
cmp
sbb
stc
inc
mov
pop
sbb
jl
jmp
or
mov
jp
sarb
fs
ret
xchg
pop
push
xchg
imul
xor
mov
add
mov
dec
fsts
adc
sbb
subb
adc
je
adc
sarl
push
dec
ljmp
or
mov
pop
aam
ret
addl
sbb
sub
pop
jge
mov
dec
fs
and
mov
xor
sub
jo
jbe
test
xor
shll
iret
jmp
cmp
popf
inc
jb
insl
in
mov
popf
inc
jb
push
and
dec
or
out
cltd
jmp
add
push
cmp
jb
shlb
jae
rclb
pop
or
das
int3
mov
adc
in
neg
push
add
xor
mov
fadds
pop
in
jae
jp
ljmp
dec
and
loop
and
lods
cmp
jmp
into
mov
push
imul
jecxz
push
add
push
loop
ljmp
cmp
movsl
push
shrl
mov
in
lahf
testb
add
mov
lock
dec
adc
add
push
ror
pop
fnstsw
xchg
push
mov
adc
dec
adc
pop
cli
push
sti
sbb
add
sbb
mov
clc
adcb
add
adc
mov
int
testl
insb
xchg
sti
or
iret
in
sub
ljmp
add
pop
inc
movsb
lods
jne
mov
and
pop
ljmp
das
push
je
adc
clc
jb
cmc
nop
mov
push
adc
pushf
add
movsl
or
clc
aaa
adc
cmpsl
adc
mov
and
lods
push
stos
cmp
xor
xor
cmp
sub
jmp
dec
push
fwait
mov
xchg
jp
inc
push
sub
test
sub
jo
push
call
popf
dec
and
jmp
pop
rolb
cmp
test
cmpsl
std
rclb
inc
bswap
inc
js
scas
jae
jbe
in
push
lcall
mov
cmpl
xchg
clc
call
cmpsb
movsl
add
xchg
pop
mov
cmp
xchg
enter
fldenv
lret
mov
sub
hlt
xchg
aad
test
repnz
inc
out
cmp
aas
shl
mov
sbb
pop
jge
sar
adc
sbb
or
xchg
enter
jmp
lret
test
jge
scas
push
mov
or
lock
stos
rcpps
sbb
fbld
iret
cmpsb
in
sub
sub
ljmp
lods
ss
inc
jae
mov
xchg
push
push
or
jmp
outsl
orb
popf
mov
and
pop
rcrl
add
jbe
jne
pop
xor
xor
xchg
subb
and
into
inc
test
adc
dec
dec
or
jp
cmp
ljmp
sbb
push
cmp
sbb
xor
loope
hlt
cmp
jmp
mov
adc
push
xchg
mov
push
cmp
inc
stos
inc
and
jnp
inc
mov
stos
push
addr16
cmp
push
sub
mov
stc
cmpsb
mov
push
sbb
repnz
fmull
mov
pop
std
lret
dec
cli
hlt
pop
sbb
push
xchg
pop
or
sub
inc
mov
adc
sub
loope
mov
adc
ret
subb
out
mov
or
mov
mov
jmp
ficompl
pop
arpl
fcomps
push
push
daa
adcl
xchg
test
pop
leave
imul
mov
jecxz
sbb
mov
hlt
xchg
movsb
imulb
test
movntq
out
faddl
inc
into
div
adc
sbb
jo
mov
call
push
inc
rorl
aaa
and
adc
pop
push
sub
gs
push
xorb
jnp
cmp
xchg
jb
bts
jl
dec
xchg
mov
push
jbe
ficoml
jno
ljmp
mov
sbb
test
jo
movsb
jle
pop
cmpsl
into
jle
adc
lret
cmc
jmp
add
rorl
xchg
sbb
lods
mov
sarb
inc
lock
mov
mov
add
ljmp
cmp
mov
lahf
out
xor
fwait
lret
inc
stc
mov
add
sbb
shl
movsb
pusha
mov
push
nop
ds
fldcw
sub
in
sub
add
out
sub
stos
pop
mov
jecxz
or
int3
xchg
or
ds
push
mov
aad
test
stos
mov
hlt
fcmovne
jb
in
aad
enter
rcll
push
jb
mov
daa
sub
repz
icebp
mov
sbb
cmovne
add
cmp
insl
out
sbb
lds
cmp
imul
fiadds
mov
testb
or
pop
pop
xchg
or
xor
test
add
cltd
pop
dec
add
mov
pushf
mov
mov
int
mov
dec
cmp
andl
int
iret
pop
test
mov
jp
xor
sub
pop
jne
or
adc
out
and
les
mov
pushf
lahf
mov
adc
inc
mov
push
or
sub
stc
outsl
xchg
xchg
sbb
rolb
or
clc
jae
dec
dec
aas
push
push
ss
sbb
stos
cmp
jge
jbe
sbb
xchg
aas
xchg
pop
cltd
jmp
xchg
addr16
inc
sti
movsl
loopne
jb
pop
fs
push
jns
xor
add
pop
mov
negl
dec
or
ficoms
aas
repnz
jl
dec
icebp
xchg
aaa
pop
push
out
xlat
lds
test
shll
mov
rcrb
mov
cmc
xchg
mov
cmp
loope
pop
adc
enter
sub
in
shlb
sbb
insb
sub
pop
aas
xchg
por
fimuls
xor
sub
cmp
aad
mov
mov
lcall
adcb
sbb
mov
in
cltd
es
es
or
aaa
insb
aam
aas
loopne
xor
fldt
jae
int
int3
scas
or
adc
adc
ret
push
and
stos
and
xchg
cmp
fcomip
jno
cmp
push
sti
pop
mov
cmp
ror
pop
jne
cmp
mov
sbb
test
sbb
xor
mov
cmp
pop
dec
dec
fcoml
lret
js
jge
mov
and
and
add
sub
mov
data16
lret
inc
jp
inc
dec
idivb
sub
or
push
mov
hlt
jmp
cwtl
mov
jecxz
xor
popa
lock
or
push
ret
cld
packsswb
mov
xlat
dec
pop
mov
and
dec
orb
fwait
jo
and
pop
mov
icebp
adc
jl
push
and
jge
push
mov
mov
mov
sub
mov
popa
lret
repnz
lock
lds
pop
outsl
add
sti
and
pop
sbb
movsl
pop
mov
jno
and
fists
mov
outsb
sahf
xchg
xchg
subl
pop
test
shr
dec
mov
push
push
xor
cltd
xchg
mov
imul
movsb
push
into
out
push
push
mov
or
jno
pusha
mov
lcall
xorb
adc
insl
xchg
cs
ret
ret
xchg
xchg
pop
movsb
std
stos
mov
popa
fists
pop
jge
stos
cwtl
mov
cld
push
stos
add
insb
in
mov
popf
xor
out
xor
outsb
aaa
inc
push
lods
subl
packsswb
mov
iret
mov
pop
add
add
subl
push
push
in
pop
xchg
aaa
mov
dec
and
and
out
scas
add
dec
sbb
fmulp
shll
sub
mov
cli
iret
jne
into
push
inc
shlb
jae
test
mov
inc
lcall
xchg
ret
mov
inc
cltd
jecxz
xchg
sarb
das
enter
lods
mov
mov
rcrb
xor
dec
push
mov
cmpsb
lret
je
add
mov
mov
sbb
adc
mov
std
mov
repz
add
pop
pop
jp
inc
imul
jae
jbe
jecxz
fcoml
enter
pop
xchg
cmc
add
scas
sub
std
jecxz
repz
ljmp
lods
xchg
pop
dec
xor
test
push
in
aad
dec
icebp
imul
pop
push
ret
loopne
hlt
dec
push
lods
pop
jbe
mov
inc
cmp
stos
nop
jne
pop
pop
jmp
sub
jmp
inc
jge
adc
leavew
bound
mov
cmpsl
xchg
dec
jmp
inc
repz
mov
out
call
push
arpl
mov
imul
jmp
repz
mov
adc
inc
lret
pop
mov
cmp
jmp
cmp
jp
loopne
out
push
dec
add
dec
add
lods
or
addl
or
test
ftst
aam
hlt
jle
dec
fcoms
xlat
vmovss
loope
push
cmp
mov
movsl
sbb
jno
pop
lcall
mov
sub
xchg
outsb
fidivs
add
sbb
mov
fstl
push
mov
cltd
sti
cs
xchg
stos
mov
enter
push
or
push
lret
xorb
inc
ja
repz
enter
into
lods
fdivl
push
adcb
sub
inc
push
lods
pop
cli
mov
push
add
xor
out
sti
push
out
push
fs
dec
test
fimull
cmp
adc
and
stos
lods
cmp
sbb
jae
imulb
aaa
movsb
lock
xchg
bound
daa
pop
push
mov
ljmp
sbb
push
in
add
sbb
or
and
mov
pop
pop
xchg
lahf
add
mov
mov
sub
leave
sub
aad
jns
inc
sub
cmpsl
sub
dec
les
sub
sbb
jns
push
xchg
cwtl
inc
ja
add
push
pop
adc
fisttpl
dec
mov
sbb
test
sbb
and
pop
mov
xchg
pop
pop
mov
mov
add
mov
xchg
mov
dec
loopne
rorl
cwtl
in
mov
xlat
mov
addl
lock
in
sbb
cmp
sub
sbb
adc
or
inc
repz
mov
sub
repz
add
mov
lahf
cmp
cmp
test
mov
ljmp
data16
fstl
data16
mov
jnp
ja
and
sub
insl
nop
or
jl
je
adc
int3
sub
mov
testl
and
cmp
popf
pop
push
mov
sub
push
insl
lcall
or
int3
je
push
mov
enter
faddl
xchg
fisubrl
lea
sbb
out
shll
lods
rorb
cmp
popf
data16
adc
xchg
dec
cmp
int3
cmpsl
or
enter
testb
lods
mov
cmp
in
sahf
xchg
pop
jmp
mov
cmp
jecxz
jae
scas
xchg
dec
outsl
loope
add
xchg
imul
add
lea
xor
out
popa
je
fs
fbld
or
pop
std
push
mov
pop
pop
jge
add
loop
clc
loop
inc
sti
loopne
into
push
arpl
orl
js
icebp
pop
and
lret
mov
mov
xor
pop
stos
xor
jge
stos
test
inc
js
sub
mov
int3
adc
cld
clc
sbb
fwait
sbb
pop
aas
jle
pop
mov
push
loop
lods
subb
cld
hlt
lcall
jp
mov
loop
dec
sub
mov
fstpl
pop
test
frstor
cltd
out
jbe
repnz
sbb
out
imul
dec
push
shll
cmc
not
jmp
hlt
nop
sarb
mov
pop
xchg
cmp
mov
jno
arpl
sbb
cs
adc
inc
mov
adc
dec
jmp
xor
ss
sbb
mov
mov
outsl
sub
sbb
pop
mov
mov
lds
xor
adc
icebp
pushf
insl
sbb
test
xor
and
push
and
ss
dec
int
movsl
mov
or
push
scas
or
cmpsb
int3
jg
int
ret
dec
sbb
or
inc
arpl
cs
repnz
pushf
sub
loop
sub
xorb
cmp
push
test
and
repnz
out
xor
popa
pusha
int3
sub
mov
push
repnz
cmp
pop
cmc
mov
sub
test
or
popa
jne
xchg
dec
pop
jg
mov
ja
mov
xchg
imul
out
je
orl
push
outsb
iret
loop
mov
nop
adc
inc
xor
xor
fcoms
push
in
imul
mov
jle
push
sbb
leave
fstpl
sti
dec
lret
sub
orb
dec
repnz
out
lahf
test
imulb
sbb
mov
scas
xchg
popf
adc
in
loopne
jo
inc
jno
mov
subl
xchg
leave
stos
div
rorl
push
pop
or
xchg
add
cld
or
lock
adc
cmp
sbb
cmc
lret
or
loope
xorl
adc
xor
pop
push
out
xchg
test
pop
cmp
clc
outsb
enter
push
jp
add
pop
leave
mov
fwait
and
push
jo
in
inc
js
movsl
jl
lret
pop
pop
enter
mov
xor
test
xchg
sbb
stc
lods
push
faddp
outsl
pop
je
enter
sub
cli
mov
push
iret
mov
or
out
dec
mov
cmp
es
ss
lea
push
add
fidivl
jl
hlt
fdivrs
and
insl
sub
ficoml
adc
xchg
add
pushf
cmc
cmp
pop
iret
lcall
enter
mov
scas
adc
icebp
lock
pop
adc
in
cmp
inc
in
stc
push
adc
lea
sbb
shll
and
mov
jnp
movsl
imul
addr16
inc
fcmovu
pop
enter
data16
pop
imul
loop
push
push
push
pop
mov
insb
push
in
cltd
sub
or
sbb
mov
inc
sahf
jne
mov
jecxz
jle
aaa
sahf
pop
sbb
fsubl
je
mov
mov
addb
imul
jl
sahf
outsl
cwtl
mov
inc
enter
dec
cmpsl
fidivl
cmpsb
add
dec
xchg
xor
pop
mov
hlt
enter
fstl
lods
adc
push
fisubs
inc
call
fcomp
jne
ljmp
xor
adc
addl
data16
outsl
adc
dec
push
sub
ss
add
cmpsb
xor
leave
xlat
rep
push
or
push
push
jno
push
gs
sbb
call
inc
aad
inc
cltd
in
insl
lcall
cmpsl
aaa
fsubp
dec
gs
fiadds
adc
xor
repnz
sub
pop
jae
fstpl
ror
mov
or
mov
lds
repnz
pop
adc
mov
roll
pop
test
mov
call
daa
add
ret
in
mov
push
or
cltd
mov
aaa
mov
push
dec
insl
iret
inc
push
add
push
mov
mov
sbb
or
inc
fbstp
mov
mov
mov
pop
popf
adc
push
push
mov
sub
repz
je
or
jno
ds
sub
dec
mov
aas
movsl
cld
dec
lcall
fistpll
aad
and
orl
xor
push
adc
and
bound
pop
pop
sbbb
cmp
xor
rcr
xchg
or
push
sahf
mov
movsb
pop
inc
cmp
push
imul
cmp
mov
aam
fists
fwait
int3
xchg
pop
rolb
cmp
mov
and
mov
out
movsb
dec
fwait
out
testw
xor
cmpsl
mov
mov
jp
sarl
mov
sub
fadds
jns
ficoml
outsb
xor
scas
cli
fidivs
popf
pop
cmpsl
pop
subb
jbe
dec
cld
or
mov
sub
bound
push
repnz
cmp
sarb
rorb
repz
mov
out
pusha
fwait
mov
mov
xor
lods
sub
dec
dec
stos
add
in
dec
push
rolb
mov
xor
xchg
jecxz
les
mov
add
scas
push
fs
flds
jg
scas
test
dec
pop
fildl
mov
or
mov
sahf
inc
adc
clc
std
not
xor
int3
scas
int3
fs
xor
pop
add
sbb
out
jno
mov
aas
push
pusha
xchg
add
push
cltd
roll
pop
jne
gs
out
mov
add
lret
xor
in
incb
mov
les
call
arpl
mov
rcll
push
mov
dec
push
mov
mov
adcb
sub
jg
test
inc
pop
jg
push
add
cli
mov
add
test
addl
push
jmp
fld
sub
jecxz
cwtl
cmpsb
xor
mov
ss
outsb
dec
jecxz
cmp
push
mov
jae
inc
dec
int3
xchg
test
mov
mov
insb
cmpsl
gs
aad
jo
jne
mov
mov
push
pop
adc
cwtl
mov
xlat
push
xchg
cwtl
bound
xchg
mov
jmp
xchg
aad
jmp
mov
sub
and
cmpsl
out
jno
jnp
bound
dec
or
test
aam
shl
icebp
mov
sbb
inc
lret
mov
xchg
dec
fimull
push
bound
icebp
movsl
or
cmpsl
push
cld
dec
pop
mov
push
xchg
stos
push
pushf
es
cltd
je
cmp
loop
mov
es
in
sbb
adc
sbb
mov
rcll
jno
adc
les
gs
pop
popa
push
push
jae
aad
push
mov
xor
sbb
jg
sub
sub
test
xchg
adc
das
pop
xchg
pop
fsubrs
addl
mov
xchg
ljmp
cmc
in
mov
imul
xchg
inc
or
mov
mov
push
repnz
in
pop
popf
in
jecxz
pop
je
adc
push
inc
cmc
add
mov
cmp
inc
and
pop
push
lock
mov
imul
mov
ljmp
or
jp
cmc
cwtl
shl
or
xor
jecxz
ret
out
dec
mov
fadds
bound
jo
es
or
sbb
sbb
jae
fidivrl
jo
es
bound
sbb
out
mov
mov
mov
dec
add
xchg
lret
sti
rcrl
jg
sub
iret
jmp
out
cmp
xchg
pop
inc
add
imul
push
xchg
aaa
addr16
movl
and
fwait
cmp
jns
xor
sub
pop
popa
fucomip
imul
jnp
arpl
add
notl
and
int
xor
or
jg
loope
xchg
and
push
jl
sub
fldt
incl
test
or
sub
std
sub
xchg
mov
call
into
dec
pcmpgtb
inc
jbe
dec
jne
mov
sub
lahf
xor
or
or
test
into
mov
lea
push
popa
in
lret
ficoml
hlt
popf
mov
cltd
and
and
iret
sbb
cmpsl
add
xchg
lret
sub
jae
outsl
test
push
call
and
movsl
loop
leave
in
mov
shlb
sub
shll
xor
or
push
icebp
out
mov
or
push
sub
in
and
addr16
aaa
dec
push
dec
xchg
jp
xchg
pop
and
xor
mov
mov
pop
push
pop
cmp
jmp
popf
mov
ja
jmp
ficomps
dec
lret
adc
div
cmp
rcll
jl
cmpsb
lcall
cmp
in
cmp
mov
ds
popf
or
sub
add
and
lea
daa
ss
inc
dec
push
test
repz
xor
fisttpll
or
aam
std
push
jmp
dec
aaa
ds
sub
loop
add
addr16
sarl
orl
and
sbb
insb
sbb
adc
fidivrs
cmpsb
pushf
push
addr16
xchg
jb
shrb
push
pusha
mov
enter
sub
stos
mov
imul
dec
dec
popf
pop
testl
lret
fsubrl
add
xchg
ror
mov
push
adc
or
pop
stos
xchg
lahf
and
xchg
and
sar
sbb
cmp
push
xor
mov
sti
cld
in
sub
sbb
fcompl
xor
gs
push
mov
stos
mov
dec
push
or
adcl
push
std
cmpl
outsb
mov
aad
arpl
jmp
mov
lea
addr16
loope
pop
repnz
cs
mov
jp
xchg
sbb
rcrl
cmp
adc
test
fstps
xchg
outsb
adc
sub
test
imul
xchg
push
addl
adc
cwtl
cld
cs
cmp
ret
rorl
insl
js
in
mov
shlb
mov
out
adc
lds
mov
xchg
sub
fcmovu
sahf
inc
or
repz
dec
push
push
sahf
pop
lret
repnz
jge
sti
test
sarb
mov
xchg
das
fwait
push
lea
xor
pop
mov
sbb
jb
and
loope
lahf
cmp
mov
fdivrs
adc
cwtl
adc
mov
fwait
sbb
push
test
adc
mov
daa
and
adc
fs
test
icebp
and
mov
push
jp
or
mov
inc
push
or
jbe
insl
cli
add
cmp
loope
adc
adc
inc
sbb
xlat
mov
or
pop
xlat
pusha
ljmp
es
movsb
int
shl
inc
mov
mov
shl
daa
aad
mov
xor
push
out
bnd
fistpl
jg
arpl
dec
int
pop
cs
out
sarb
jl
data16
adc
cli
mov
inc
mov
push
out
test
push
popf
pop
dec
cmpsb
sbb
inc
adc
fisttps
shlb
repnz
addr16
mov
adc
mov
add
jl
out
and
mov
outsl
sub
movsb
std
in
test
xor
loope
js
iret
ja
and
stos
sub
ja
movsb
xor
popf
push
das
rclb
xor
out
das
out
xor
jmp
inc
loope
xchg
mov
aam
sahf
cmp
loopne
and
mov
insb
insb
test
sbb
pop
test
push
inc
imul
jp
fsub
stos
out
aas
aas
loopne
xchg
cmpsb
push
bound
test
xchg
pop
mov
lea
jno
arpl
sti
repz
in
in
jecxz
inc
sub
mov
sbb
xchg
inc
mov
mov
shr
pop
dec
insl
ljmp
jle
aaa
je
mov
and
push
roll
dec
icebp
mov
nop
or
inc
sbb
loope
add
xchg
loop
add
mov
cmp
mov
cld
lds
push
or
xchg
push
jae
out
mov
push
mov
and
enter
out
mov
mov
cmp
push
mov
pop
aad
outsl
clc
gs
mov
popf
aaa
loope
ljmp
jb
pop
fwait
sbb
lea
xchg
mov
inc
test
std
mov
mov
xor
sbb
iret
inc
adc
adc
sub
ljmp
mov
inc
sub
ljmp
xchg
sub
inc
das
ret
jnp
push
testb
sbb
mov
jo
add
xchg
mov
addl
in
cmp
mov
inc
loope
das
mov
lock
jae
stos
jo
adc
sub
imul
notl
xchg
fidivs
shll
ret
or
out
push
out
jnp
adc
loopne
fistl
xchg
cmp
mov
call
pop
shlb
js
dec
inc
mov
sub
in
fadd
jne
xor
mov
mov
imul
in
ret
sarl
xchg
nop
in
popf
in
adc
sub
and
in
lods
jmp
push
adc
cld
aad
inc
fcomi
syscall
xchg
daa
outsb
add
movsb
sbb
xor
jg
dec
mov
inc
inc
pusha
dec
data16
std
aam
leave
cmp
das
pop
lret
cmp
out
mov
lods
scas
mov
mov
cmc
push
sarl
xor
jae
daa
fidivl
push
jne
add
test
xchg
shrb
idivl
cmp
lds
push
jne
movlps
add
push
xchg
xchg
mov
sub
xchg
dec
shr
rcr
mov
movsb
repnz
push
pop
shrb
push
sub
ficoml
push
movsl
adc
shlb
aam
cmp
movsl
and
mov
push
mov
pusha
lock
add
add
popf
pop
jne
rcr
nop
jp
stos
test
add
xchg
mov
movsb
jmp
fistpl
jnp
clc
repz
mov
sub
std
pop
push
fcomp
je
pushf
int3
dec
adc
pop
sahf
cmp
adc
sbb
jo
addr16
cmp
out
mov
int
rorb
sub
sub
je
sahf
jmp
testl
and
hlt
cmp
mov
pop
enter
iret
lcall
aas
dec
mov
mov
mov
or
push
repz
inc
in
cmp
int
or
mov
sti
mov
popl
cmc
hlt
cmp
in
test
pop
test
scas
mov
test
enter
sub
fistl
int3
sub
es
push
dec
pop
cmp
hlt
faddl
or
cmp
ror
ror
inc
hlt
adc
cmpsl
push
xchg
pop
sbb
pop
xchg
xchg
inc
aaa
or
mov
mov
lret
add
xchg
mov
cmp
int
adc
xchg
faddl
insb
mov
jecxz,pt
sbb
out
mov
push
leave
aaa
adc
std
movsb
std
scas
sbb
jmp
sti
aas
lret
repnz
ljmp
push
xchg
dec
mov
add
push
inc
fidivrl
into
cs
shll
ret
out
das
sub
cld
ret
sub
scas
inc
insb
pop
push
push
fidivrs
cmp
fisubl
xlat
lods
mov
cmp
sbb
je
push
pusha
pop
jmp
jl
pop
aam
dec
push
mov
sbb
cld
rorb
cvtdq2ps
lods
xor
mov
psubsb
xor
ret
inc
inc
sbb
rolb
pop
dec
adcl
lds
enter
lds
push
stos
lea
cwtl
mov
xchg
test
xchg
rorl
das
sub
enter
mov
iret
dec
rorl
js
xor
add
in
insl
xchg
rol
mov
push
pop
inc
add
inc
sub
add
sub
jns
pop
xchg
adc
xor
jle
dec
outsb
inc
lock
lods
mov
movsb
sub
repz
repz
pop
lcall
pop
or
enter
outsl
aad
in
sbb
loop
mov
or
pop
popa
lret
and
cmpb
cmpsl
dec
add
jl
mov
jle
mov
xchg
mov
pop
push
dec
push
leave
paddsw
arpl
aas
pop
and
addr16
push
sub
inc
insb
adc
dec
enter
outsb
cmc
aad
pop
and
outsl
aad
sbb
scas
aad
jmp
je
test
inc
jno
loope
pop
xchg
insl
xor
decl
cltd
test
mov
push
cmp
out
inc
sub
in
xchg
popf
outsl
push
jle
mov
jecxz
popf
and
dec
mov
add
inc
fisubs
cs
cmovs
sub
andl
in
mov
leave
mov
mov
sub
inc
sbb
insl
iret
mov
inc
int
mov
xor
movsb
xchg
cmp
adc
ret
xorb
cmc
fisubl
jle
ds
inc
mov
xlat
rep
mov
orb
mov
sub
jl
jmp
push
in
sbb
pop
dec
lods
xchg
pop
popa
pop
std
jge
ljmp
jmp
fists
mov
xchg
jae
or
jl
int3
push
in
int3
fldcw
ret
jge
insb
add
add
in
clc
lret
mov
ficoms
sbbb
je
aam
mov
int
mov
movsb
sub
inc
lahf
pop
mov
or
mov
mov
or
mov
sbb
arpl
and
adc
lock
mov
decb
out
gs
sub
loop
xor
cld
cltd
and
jmp
aad
pop
inc
mov
mov
or
jb
std
pop
mov
xchg
sub
out
pop
aaa
dec
in
jp
rcl
pushf
and
jecxz
hlt
jae
dec
mov
les
daa
sbb
notb
add
lret
push
sbb
cmpsl
sbb
push
into
in
jo
nop
js
mov
xor
and
mov
fmulp
push
inc
and
insb
lds
mov
fdivs
inc
aam
xchg
loope
jle
sbb
mov
xor
jnp
cmpsl
xor
adc
inc
xchg
cmpsl
dec
insb
cld
jp
xor
repz
mov
rcrl
sub
fmull
lods
pop
les
mov
hlt
fstps
xchg
iret
jmp
pop
or
jp
push
inc
sub
insb
xchg
fdivl
xlat
outsl
pushf
or
mov
mov
popa
sub
pop
lea
test
test
aaa
pop
imul
or
js
in
inc
stos
je
sahf
jmp
sbb
inc
lods
jbe
jo
subl
and
mov
out
bound
xlat
icebp
pushf
dec
cmp
jne
jge
or
xor
cs
pusha
jne
cmc
or
leave
jnp
inc
imul
pusha
shlb
mov
xor
mov
and
mov
cwtl
repnz
in
dec
lock
adc
dec
dec
aad
loop
push
push
mov
iret
mov
cmpsl
inc
xlat
jecxz
sahf
lea
mov
es
mov
cmpsb
rcll
mov
fidivs
mov
pop
in
test
jecxz
cli
jg
push
out
addr16
sbb
mov
jno
iret
cmpsb
movsb
mov
stos
or
push
mov
sti
lds
sbb
xchg
xchg
mov
out
mov
sbb
jge
xchg
out
inc
out
inc
mov
movsl
inc
mov
push
addr16
and
or
adc
pop
xchg
cmp
repz
movsl
loopne
ja
and
mov
add
inc
and
lock
decb
fnstsw
sub
adc
xor
sbb
not
sub
sub
mov
mov
jp
repnz
mov
lods
xchg
fcomip
inc
scas
ss
cltd
push
adc
mov
sub
test
cmc
mov
int3
mov
adc
sbb
push
sub
test
push
fldcw
clc
sbb
fbstp
dec
roll
negl
mov
mov
cli
inc
clc
outsl
and
jnp
cmp
sti
mov
dec
insb
adc
lea
jmp
xlat
push
cs
rorb
sbb
out
outsb
rorb
not
fistps
bound
mov
imul
out
inc
sub
pop
inc
pop
mov
into
inc
cmc
pop
movsl
fstpt
inc
aas
add
cmp
mov
bound
mov
loop
jl
push
inc
in
mov
mov
insb
sbb
add
jmp
jns
pop
xlat
in
scas
in
add
arpl
dec
sbb
enter
cmp
out
push
imul
ret
dec
stos
mov
fistpl
repz
or
jnp
adc
mov
adc
popa
aad
pop
pop
orl
push
and
addb
pop
jmp
sub
arpl
or
adc
mov
cmp
and
je
jns
leave
jl
imul
mov
mov
bound
jno
xchg
jo
mov
mov
xchg
repnz
ss
xlat
ds
bound
loopne
jmp
ja
and
out
dec
nop
mov
adc
or
test
inc
jmp
divb
dec
add
in
outsl
shrb
adc
cli
push
mov
push
outsl
popf
scas
lock
jg
enter
push
idivb
fwait
push
push
bound
xchg
pop
sbbb
cld
mov
cmp
mov
add
fmul
fwait
jo
jg
iret
sbb
add
push
aas
push
in
push
push
ljmp
pop
stc
aaa
repz
enter
movsl
into
push
sbb
ror
popf
shlb
and
movsl
add
pop
lahf
sarl
adc
out
je
aaa
adc
icebp
outsb
icebp
popf
mov
xchg
push
jge
cli
push
jge
push
fldcw
mov
inc
sbb
data16
sbbl
pop
pop
pop
out
aad
gs
mov
lcall
pop
push
adc
lods
lock
ret
outsl
ja
lcall
mov
jg
fstl
pop
out
dec
mov
pop
movsb
jnp
rcrl
fdivs
jb
add
fisttpll
jmp
int3
pop
movsl
dec
mov
out
popa
sbb
cltd
push
jl
adc
push
sub
jno
aam
push
ret
ss
rcll
aaa
loope
sar
ret
shrb
and
adc
out
fsub
sub
add
lcall
adc
fiadds
jge
loop
es
lods
mov
cmp
out
int3
ljmp
idiv
les
fsts
sbb
cmp
icebp
fstpl
inc
sbbb
mov
stos
call
sbb
sbb
dec
lods
int3
inc
insb
push
mov
adc
sub
dec
pop
test
push
xchg
xor
iret
sbb
mov
inc
xchg
mov
xchg
jnp
dec
mov
outsl
imul
aaa
ljmp
push
bound
xchg
test
loop
xor
adc
out
dec
in
and
test
or
jb
insl
les
sub
push
pop
fwait
ret
js
ret
fcom
xchg
call
push
cmp
dec
dec
aam
stos
mov
mov
lret
and
or
test
dec
push
loopne
lods
shrb
out
pop
cltd
popa
bnd
lcall
cli
xor
into
imul
dec
push
cmp
andb
and
lret
pop
or
sbb
stos
pop
mov
sub
push
test
fs
push
daa
ljmp
scas
in
scas
cmp
push
ficomps
mov
aam
adc
and
pop
xchg
sbb
mov
inc
cld
test
mov
jmp
and
mov
movsb
imull
dec
or
int
lea
inc
mov
pop
lcall
movsl
xor
fsts
ret
hlt
xchg
dec
aaa
imul
push
jbe
inc
inc
jno
cmp
xchg
adc
mov
test
cmp
xchg
into
inc
and
add
je
ds
cwtl
lret
addr16
and
mov
iret
jmp
sub
stc
xorb
test
cmp
sub
mov
cmp
jb
and
push
leave
cltd
pop
add
lea
push
add
decb
insl
test
xchg
out
jb
scas
lcall
fstpt
roll
fcomps
cli
lret
ret
or
mov
inc
jge
loopne
cmp
jl
flds
mov
ret
adc
mov
pop
dec
imul
sub
mov
sbb
mov
push
jne
sbb
icebp
lret
pop
decl
or
mov
or
enter
andl
dec
in
pop
mov
je
xlat
lea
jo
adc
xor
inc
ret
jae
adcb
daa
jo
mov
push
rolb
repnz
mov
dec
xor
and
pop
push
and
arpl
mov
bound
daa
xor
icebp
pop
and
enter
push
int
aaa
xchg
bound
popf
cmp
sbb
repnz
mov
pop
mov
std
ja
jae
push
jne
sarb
mov
xorb
fcos
aam
inc
movsb
scas
adc
arpl
fmull
test
rolb
jge
loopne
jae
add
sbb
dec
jbe
dec
lret
int
and
or
and
icebp
lret
loop
cmp
clc
popa
mov
mov
fimuls
xchg
insb
inc
das
xor
lret
sbbb
test
and
jmp
or
mov
jo
lods
xchg
js
test
sub
and
mov
lahf
shlb
pop
mov
call
push
mov
cmp
lock
xor
and
or
xorb
jo
and
outsl
aad
sete
adc
test
and
out
out
sbb
jmp
loopne
jns
dec
dec
cmpsl
dec
add
pop
call
and
cmpb
stos
cmpsb
hlt
mov
cmp
lahf
aam
or
fsts
lea
push
mov
iret
mov
add
pop
rolb
mov
mov
xchg
mov
jno
push
jne
addr16
push
mov
mov
jg
adc
jae
inc
jecxz
fdivrs
or
pushf
in
out
and
pop
dec
cmp
or
insb
dec
ja
cwtl
cltd
inc
xchg
in
mov
insl
mov
push
lea
outsl
pop
out
adc
bound
xchg
lret
mov
xchg
loopne
pop
ficoms
mov
into
ret
inc
arpl
cltd
and
mov
cmc
jecxz
cmpsl
pop
fucom
adc
hlt
push
or
xchg
mov
cmpsb
mov
mov
sub
addr16
push
mov
stos
jmp
mov
push
sub
insl
ss
in
cltd
into
pop
btr
xchg
test
pop
pushf
cmpsl
popf
insb
push
adc
inc
jp
inc
fistl
push
cmp
cmp
adc
pusha
loop
sti
notb
arpl
adc
cmp
pop
push
push
add
fadds
pop
jg
mov
pop
add
adc
popa
adc
mov
enter
scas
mov
push
test
mov
jno
aad
jmp
xor
push
fcoms
or
lods
ret
movsl
shl
in
out
mov
vpcmpeqb
pop
adc
dec
fsts
sub
xor
push
into
aas
jb
mov
dec
mov
mov
in
xchg
lret
test
stos
lock
aam
mov
pop
sahf
sbb
sbb
loop
icebp
or
cmp
sbb
out
jle
cltd
inc
pop
shlb
xchg
mov
ja
xchg
addr16
jp
inc
xlat
cld
ja
or
xor
popf
data16
adc
pop
xchg
push
testl
js
int3
hlt
jbe
mov
and
stos
lods
push
dec
jb
fdivrp
rcl
jmp
push
add
cmp
es
xor
ret
and
mov
fmull
jmp
clc
out
dec
sbb
adc
xchg
insb
xor
inc
insl
mov
mov
leave
add
pop
mov
mov
lock
addr16
xchg
cmpsl
js
xchg
mov
push
out
sti
mov
jmp
mov
mov
inc
pop
dec
stc
test
and
je
sub
sti
inc
push
adc
xchg
repnz
cmc
mov
and
mov
mov
ss
dec
dec
dec
in
adc
cmc
dec
sbb
and
cmc
cmp
mov
ja
xchg
pop
xchg
setnp
out
mov
pop
out
mov
shrl
in
fwait
xor
out
imulb
pop
imul
and
popfw
mov
inc
jno
aaa
rcrb
ret
fwait
dec
outsb
jns
loope
outsl
jae
popf
lea
mov
jge
sbb
out
ret
imul
mov
xor
leave
pop
lds
fadd
mov
mov
std
stc
mov
cs
les
mov
xchg
or
mov
sub
push
lret
je
in
inc
lret
testl
sub
rclb
fstl
arpl
lea
xchg
inc
dec
popa
pop
in
sub
fsts
hlt
mov
cmpsl
xorl
xchg
imulb
and
adc
adc
inc
loope
std
sub
out
push
lds
in
movsb
and
mov
add
cmpsl
gs
aad
gs
outsb
test
cwtl
pop
ljmp
outsl
lock
add
je
pushf
dec
and
jnp
sbb
push
sbb
xor
outsl
add
cmp
jecxz
adc
mov
adc
sbb
lcall
loope
loope
xor
stc
push
jmp
out
add
mov
fsubr
xchg
loop
repz
mov
jecxz
sti
out
inc
daa
rolb
mov
fs
add
and
sbb
js
pushw
fdivrp
mov
aaa
or
pop
inc
in
fisttps
in
jbe
scas
rclb
sahf
lods
mov
cwtl
sti
dec
push
out
fs
dec
dec
bound
jnp
pushf
mov
xor
out
xchg
push
test
pop
xchg
icebp
fiaddl
add
or
and
sbb
dec
es
mov
add
arpl
pop
xchg
lcall
mov
mov
cmp
sahf
jp
in
test
fdivr
jo
insb
jl
mov
sub
adc
inc
xor
aas
jns
dec
inc
xor
lods
out
mov
xchg
mov
cmp
aam
icebp
and
rorb
xchg
and
leave
mov
adc
inc
into
sahf
adc
stos
shlb
add
lods
arpl
jno
cmc
add
fwait
lret
dec
mov
call
pop
sbb
mov
or
mov
adc
cs
inc
cmpsl
fwait
push
js
cltd
ljmp
xchg
jne
fs
cwtl
adc
pop
lahf
push
stos
inc
mov
adc
aas
sbb
push
es
jecxz
cs
aad
js
sub
pop
xorb
xor
mov
adcl
cs
cld
xchg
cmp
mov
xor
xchg
and
jl
fstpt
xor
and
aaa
add
push
mov
fbstp
add
rcr
cmpl
fistl
mov
mov
arpl
xchg
pop
push
lock
popa
xchg
loope
cwtl
lahf
add
fs
popa
cmp
aaa
xchg
cli
and
push
and
iret
xor
sub
jbe
mov
and
jl
cmp
iret
cwtl
mov
mov
shll
mov
add
and
inc
cmp
mov
jae
leave
bound
test
cld
inc
fsubs
or
sbb
cmc
lea
bound
pop
cltd
jle
mov
dec
leave
imul
inc
push
jle
sbb
push
push
adc
loopne
dec
push
dec
pop
fisttps
jnp
cmp
dec
aaa
mov
sbb
cmp
gs
jns
bnd
push
mov
stc
into
in
loope
inc
nop
sub
incb
xlat
add
mov
add
lods
negl
mov
fcmovnu
inc
cli
pop
cmpsl
or
jae
cli
mov
ljmp
mov
xchg
rorb
xchg
ss
inc
mov
fisubs
mov
repz
pop
xchg
pop
inc
iret
jmp
imul
xor
js
cmp
jp
jecxz
push
or
pusha
push
mov
lds
nop
cld
xlat
inc
into
std
xor
ja
add
pop
push
negl
das
inc
out
cmp
mov
fsubrs
pop
cmp
adcl
minps
inc
mov
leave
mov
mov
insl
pop
shrb
mov
loopne
insb
lods
fsubl
cmp
in
loope
xbegin
mov
test
clc
loopne
pop
jbe
xchg
mov
mov
push
inc
pop
adc
mov
cmpsb
iret
jae
push
xor
pop
pcmpeqw
and
xor
lea
adc
or
and
sub
push
cld
xor
or
adc
rolb
xor
stos
shlb
stc
mov
lods
fdivrl
mov
push
dec
enter
sub
inc
xchg
mov
movsl
pop
xchg
popa
xor
and
pop
sub
enter
scas
xchg
push
imul
jb
test
jb
fcmovu
outsb
mov
inc
into
arpl
pusha
sarb
ss
jo
sbbl
dec
imul
ljmp
jecxz
mov
int
add
mov
ds
xor
cmpsb
mov
stc
out
dec
lock
xor
pop
cmp
jne
push
pop
in
iret
sub
popf
cmp
fscale
repz
xchg
aam
fsubrs
cmpsl
sub
cmp
repz
pop
hlt
sub
fisttps
and
mov
cmp
mov
es
daa
jecxz
sub
jecxz
adc
daa
leave
inc
movl
lret
mov
push
lret
cmp
call
and
stos
xor
inc
mov
ljmp
imul
aaa
xor
xor
add
inc
dec
out
mov
inc
shl
cmp
pop
movsb
mov
outsl
out
fsubl
imul
fistps
cmp
sbb
cmovs
xchg
or
andl
jp
xor
shrb
mov
xchg
es
mov
push
test
test
jp
add
sub
push
jnp
rcr
xor
add
mov
pushf
ss
es
lods
gs
out
xchg
sbb
jecxz
jmp
mov
pop
xor
pop
cltd
and
adc
out
mov
movsl
outsl
push
pop
mov
and
ljmp
push
cwtl
jno
xor
leave
shl
bound
add
fsts
cmpsb
scas
push
inc
outsb
xchg
stos
cli
cltd
andb
stc
fstpl
fs
dec
lahf
cltd
jnp
xor
mov
sbb
int
stos
fistpl
int
pop
scas
mov
sti
jecxz
or
rolb
adc
icebp
mov
jae
out
lock
push
sbb
xchg
ss
gs
call
sub
arpl
pop
lods
and
mov
out
ss
mov
cmp
loopne
push
pushf
in
mov
test
xchg
ds
pop
in
xor
cwtl
mov
jmp
jb
scas
repz
popa
pmaxub
mov
mov
lock
aaa
mov
inc
fistpl
mov
insb
jl
mov
push
cmpsl
mov
das
aas
sar
xor
jno
jle
adc
push
aad
mov
xchg
lock
push
push
jl
cli
cmp
jecxz
mov
pop
icebp
daa
pop
lods
or
add
bound
cmc
push
or
not
fs
dec
bound
mov
mov
push
je
xchg
cs
aad
cmp
cmp
adcb
lods
dec
enter
sbb
xor
lods
adcl
aaa
aaa
mov
sti
mull
mov
test
arpl
xorb
and
sub
pop
add
push
scas
adc
xlat
stc
push
fbstp
lret
push
and
mov
fcompl
mov
into
sete
jns
jle
leave
fldt
jge
ss
cmp
and
sub
mov
sub
mov
cli
push
add
inc
mov
cmp
bound
jae
dec
roll
fdivrl
dec
push
sub
pusha
adc
in
push
stos
mov
adc
cld
sahf
inc
and
xor
or
xor
mov
out
flds
pop
dec
sbb
push
jmp
mov
jne
cld
ljmp
inc
out
lret
clc
jle
mov
or
push
inc
clc
add
push
sbb
int
nop
push
push
pop
or
pop
fwait
ret
jbe
adc
push
fsubl
movsl
mov
adc
xchg
pop
loopne
xor
push
jle
ds
cltd
inc
jbe
adcl
sbb
mov
aaa
mov
xchg
adc
pop
sbb
inc
jle
mov
rcll
fildll
jo
shll
mov
adc
iret
add
insb
mov
outsb
dec
or
ficoml
popa
stos
adc
cltd
aas
jo
loopne
or
fdivs
dec
pop
jle
aaa
outsl
pop
rorw
divl
jmp
cmpsb
fsubrs
aaa
ljmp
addl
sbbb
fstps
clc
test
fldz
sbb
and
push
cmp
mov
movups
cld
cmp
or
cld
mov
sbb
cmpsl
add
test
push
pop
and
in
xchg
jno
popa
mov
jge
cmp
inc
sbb
fisubrl
js
xchg
mov
in
js
orl
rcr
or
mov
mov
cmp
mov
neg
cwtl
xlat
xor
movsb
push
and
sbb
stos
push
out
jb
mov
shll
out
and
or
insb
mov
pop
cli
or
pop
mov
xchg
jo
mov
jle
adc
inc
fistpll
lds
sti
or
pop
aaa
sbb
clc
std
dec
sahf
mov
sar
aas
in
daa
jge
add
cmp
and
scas
sub
hlt
sub
push
xlat
mov
es
mov
pushf
std
dec
dec
mov
mov
jg
xor
jb
cmp
scas
xor
iret
mov
jecxz
jmp
hlt
outsl
xorb
sbb
mov
dec
fstl
sbb
sahf
jae
mov
pop
adc
sbb
loop
fnstenv
mov
xchg
adc
mov
loop
aas
or
rcll
xchg
mov
push
push
scas
es
or
jne
xchg
fnstenv
out
mov
pop
mov
push
lock
test
pop
push
add
and
and
mulb
inc
dec
cmp
in
pop
inc
out
adc
xchg
scas
push
lcall
insb
push
mov
fistps
mov
mov
pushw
xor
imul
jle
arpl
idivl
inc
outsb
xchg
mov
and
pop
jae
mov
mov
dec
xor
or
mov
cmpsb
jbe
les
xor
andl
roll
loope
jno
pushf
add
insl
sbb
int3
inc
sub
mov
scas
nop
inc
and
aaa
jbe
xchg
cmp
hlt
mov
pushf
xor
or
mov
hlt
xor
cmp
sub
in
out
imul
cmp
mov
sahf
into
inc
inc
gs
mov
cmp
addr16
xor
mov
lcall
int
fcompl
mov
test
xor
data16
jge
das
jp
movsl
daa
mov
pusha
jl
cwtl
aas
sti
cs
and
cs
das
mov
xchg
pusha
cwtl
push
imul
roll
or
lea
cmp
dec
adc
das
std
mov
push
stc
loope
enter
and
sti
cmpsb
jecxz
packuswb
cs
add
and
jae
out
mov
aad
sub
jb
es
inc
out
pop
fs
jmp
xchg
rcrl
jmp
add
jmp
push
test
jne
dec
pop
in
cmp
cmp
scas
add
ds
xchg
fcompl
xor
dec
orb
mov
popa
add
sub
bound
loop
imul
xchg
mov
jo
std
xchg
jbe
xlat
sub
lock
jecxz
and
or
xor
out
xchg
stos
or
mov
mov
add
lret
xchg
dec
add
inc
jge
adc
dec
aas
aam
orb
inc
fldenv
mov
fidivrs
stc
fmuls
jecxz
dec
out
adc
mov
aaa
mov
xor
test
roll
xor
fwait
pushf
dec
addb
xchg
jne
inc
or
movb
cmpsb
out
loopne
push
inc
repz
clc
sti
leave
sbb
jmp
mov
sub
add
cmp
adc
lea
cmpsb
repz
imul
sbb
in
sub
daa
xor
movsl
enter
mov
and
bound
ljmp
sub
dec
push
inc
pop
adc
adc
ret
push
lds
pop
mov
jge
mov
push
movb
ja
push
mov
shll
nop
clc
push
jbe
jne
es
movups
scas
aam
ret
lret
and
pop
pop
movb
xchg
cmpl
pop
sub
pop
rol
jbe
leavew
fldcw
or
inc
jl
dec
jnp
ds
cmpsl
inc
push
pmovmskb
sub
mov
out
adc
ja
xor
xor
xor
push
jbe
pop
adc
xchg
sub
popa
push
xor
jg
mov
scas
mov
sub
xchg
xchg
jecxz
jl
mov
cmp
sbb
cmp
popf
cmp
inc
jge
out
pop
xchg
push
ret
mov
inc
mov
or
lods
cmpsl
loop
lcall
call
jge
sbb
daa
xchg
inc
dec
insl
and
xor
jl
imul
mov
scas
mov
add
aam
cli
in
mov
cli
adc
sarl
or
adc
mov
movb
and
xchg
test
adc
dec
and
sbbl
inc
fwait
cmc
jle
fwait
xchg
sbb
jge
sbb
sbb
mov
inc
lds
or
test
fisttps
lds
push
lods
aad
xchg
icebp
xchg
push
and
xor
loop
pop
rol
mov
stos
in
and
dec
negl
add
inc
xchg
xchg
icebp
fstps
arpl
lock
fildl
inc
inc
pop
not
pushf
lods
sub
movsb
cmp
mov
adc
ds
xor
xor
mov
iret
pop
incb
insl
xchg
outsb
shll
ss
jmp
jl
xchg
mov
pop
xlat
push
sti
rcrl
jae
mov
pop
fdivl
cmc
mov
cmpsl
add
arpl
int3
xor
xor
jg
je
fisubrs
andb
rolb
cltd
sbb
lea
cmpsb
cmp
lret
popl
sbb
shl
cli
cmp
jae
mov
popf
dec
sub
clc
test
test
jp
sub
adcb
xor
inc
shrl
pop
sbb
push
adc
sbb
outsl
scas
lods
jnp
sub
cld
dec
ret
test
cmc
sbb
inc
lahf
dec
xor
push
add
cmp
add
loop
inc
aad
mov
int3
pop
jae
pushf
xlat
xchg
fnsave
test
jnp
push
in
int3
lea
jecxz
push
scas
pop
mov
es
daa
insl
jmp
xchg
xchg
aas
cmpsl
imul
sti
mov
ss
inc
xorl
sub
fistl
scas
rol
jl
sbb
mov
adc
arpl
jae
loop
mov
lret
stos
add
xor
pop
and
lock
jl
les
mov
inc
lock
sahf
das
and
enter
sbb
mov
pop
jbe
dec
cltd
sub
shlb
arpl
push
fcoms
fstl
repnz
pushf
ret
cmpsb
aaa
cmpsl
stos
into
push
cli
and
jl
cmp
xor
cltd
test
xchg
adc
arpl
loop
xchg
inc
push
fnstsw
fmull
outsb
je
cwtl
sbb
scas
xor
gs
cltd
sbb
and
in
pop
fistpll
mulb
test
mov
push
fs
outsb
aad
mov
ljmp
xor
xor
adc
les
xor
pop
inc
dec
jg
lods
test
sarb
push
jns
cmpsl
xor
and
push
out
mov
ror
inc
push
or
cmpsb
cld
mov
xor
les
mov
div
xchg
dec
ret
inc
pop
mov
call
mov
cmp
stc
cwtl
movsl
in
mov
adc
jl
outsb
arpl
lock
rol
imul
xor
or
cld
ficoms
aam
sti
insl
loopne
jle
push
cmp
in
imul
adc
and
stos
cmp
clc
or
sub
xorb
cmp
daa
push
cmp
rcrl
jle
lcall
addr16
int
inc
pop
ds
cmp
movsl
push
and
inc
ja
arpl
adc
inc
lret
cmp
ja
jbe
test
sahf
mov
lret
insb
cmp
ss
xor
movb
decl
div
flds
les
fldcw
xchg
es
mov
push
cmpsl
push
je
ficompl
outsb
cmpsb
mov
cltd
fcmove
push
jne
sbb
jecxz
push
cmp
aad
adc
cmp
cmp
mov
xchg
xor
imul
inc
jle
hlt
rcl
out
jbe
fnstcw
outsl
pop
sbb
sbb
repnz
aam
mov
dec
pop
push
mov
lock
repz
mov
and
and
push
push
inc
cli
push
ret
adc
push
jno
mov
mov
hlt
sahf
jne
jge
in
pop
gs
scas
mov
lds
scas
xchg
sub
mov
xchg
jnp
xchg
and
sub
mov
movsl
js
lret
inc
jp
std
test
dec
test
out
pop
pop
inc
je
imull
clc
fs
mov
aaa
aad
inc
inc
enter
xor
pusha
insb
or
inc
fs
push
cmc
mov
mov
and
cs
cld
mov
outsl
xchg
loop
inc
push
movsb
mov
repnz
xchg
rorl
sbb
das
je
rorl
add
mov
enter
les
mov
call
inc
orb
orl
out
adc
cmpsb
adc
outsl
cwtl
enter
ss
es
mov
js
test
mov
dec
mov
cmp
sbb
push
lds
pop
test
xor
mov
pop
cmp
aam
stc
adc
js
fucomi
sbb
mov
sahf
fstpl
outsb
add
popa
pop
push
pop
push
mov
dec
cmp
pop
pusha
lea
jecxz
out
imull
dec
dec
fstl
mov
jae
mov
mov
pop
loopne
jbe
cmp
add
jge
push
leave
lcall
mov
cmp
pop
push
xor
push
mov
mov
push
mov
lret
dec
add
fiaddl
cmp
inc
mov
loopne
fs
ja
je
xchg
inc
inc
push
mov
push
outsl
lcall
dec
test
xor
sub
mov
scas
aad
bound
mov
iret
dec
push
xor
movsb
and
leave
lcall
subl
push
mov
jns
loope
inc
or
mov
xchg
rcll
lahf
pop
cltd
sub
arpl
adc
inc
mov
push
mov
arpl
jae
pop
xlat
cmp
mov
adc
cmpsl
test
xchg
movb
jp
and
and
std
ror
push
xor
xor
and
fwait
ljmp
inc
and
cmp
pop
into
repnz
inc
xor
insl
lods
or
pop
leave
int3
mov
shll
adc
pop
xlat
repnz
xchg
frstor
push
repnz
sub
fldl
repz
addr16
mov
xchg
hlt
popf
dec
pop
cmp
xchg
je
hlt
push
fwait
lret
adc
xor
insl
lcall
scas
aas
repnz
jl
push
sarl
out
push
sahf
mov
mov
movsb
push
addr16
fists
stos
jb
mov
pop
inc
add
fucomp
pop
mov
iret
ret
nop
addl
scas
mov
fsts
aas
fdivr
jae
cmpsl
mov
std
cmpsb
gs
mov
popa
mov
mov
push
jge
mov
cmp
sti
inc
repnz
or
repz
xchg
stc
xchg
and
jnp
andl
sarl
mov
pop
mov
sbb
andl
inc
jne
aaa
leave
and
push
decl
mov
jmp
mov
xchg
loopne
add
aas
enter
out
push
insl
inc
leave
ja
vmovshdup
ljmp
cli
mov
mov
fldl
xor
mov
sub
mov
mov
inc
loope
inc
xchg
dec
xchg
stc
pop
idiv
add
iret
into
add
imul
ljmp
int
pop
lods
icebp
and
mov
mov
daa
jbe
or
icebp
mov
inc
jmp
insb
mov
clc
inc
cmp
cmp
inc
mov
fistl
loope
dec
jle
sbbb
repz
push
jno,pn
cs
adc
inc
in
fwait
dec
loopne
push
adc
out
xlat
aam
lods
xor
pop
daa
iret
roll
push
movd
cmc
out
xchg
add
fstpt
stc
sub
and
cmc
iret
int
xchg
mov
daa
pop
sahf
add
mov
inc
rorb
cld
mov
and
jle
aas
mov
mov
aas
shll
cmp
xacquire
aas
mov
dec
sti
mov
mov
xorl
dec
divb
adc
xchg
movsl
cmp
repz
loop
mov
in
cmp
gs
repnz
mov
add
mov
xchg
inc
aad
clc
stos
push
adc
xchg
mov
sub
pop
sub
out
imul
adc
inc
insb
lret
rorb
jle
data16
or
push
stos
add
cmp
test
imul
sahf
pushf
in
inc
push
and
mov
js
xor
fs
call
mov
push
mov
dec
loope
repz
shrl
fcomps
xchg
pop
pextrw
or
pushf
aaa
pop
rcll
cmp
lods
rcr
and
ja
inc
adc
out
roll
mov
push
std
scas
push
in
add
mov
fdivs
leave
adc
jb
jle
sub
and
movsl
mov
sti
or
subl
aam
call
pop
nop
pop
test
adc
lea
adc
or
in
mov
xor
mov
xor
push
xor
inc
mov
pushf
inc
jnp
outsl
add
fdivrl
and
inc
jg
jmp
sub
test
imul
add
lcall
push
test
adc
add
and
cmp
std
movsl
out
icebp
mov
push
out
movsb
and
jo
xor
or
fsubrp
dec
mov
lock
fucom
inc
out
add
popf
cld
dec
mov
repz
fidivs
leave
push
sub
cltd
loopne
mov
out
rcll
mov
inc
mov
cmpl
inc
inc
cmp
sti
sbb
push
or
mov
xchg
js
fldt
and
xchg
dec
dec
mov
std
sub
mov
and
dec
adc
inc
out
mov
pop
pop
push
mov
add
decb
or
mov
fstl
test
and
shrb
cld
mov
fstl
sbb
imul
sbb
or
mov
test
sahf
ja
push
mov
aam
sub
int
in
jmp
gs
imul
or
and
outsl
jno
xchg
dec
push
and
movsb
mov
in
pop
imulb
stc
push
pop
lret
xchg
lcall
push
scas
xor
mov
sub
pop
fidivs
push
jns
ja
push
das
popa
pop
xlat
fnstenv
pop
add
mov
popa
ret
mov
jge
test
arpl
mov
mov
xchg
or
xchg
cmp
andl
xchg
cmp
xlat
cmpsl
movb
xor
jne
lret
faddl
insl
cmp
add
outsb
out
fsubrl
mov
push
or
pop
cmpsl
add
push
jmp
cmp
add
popa
and
int
pop
mov
and
cmp
into
dec
add
ss
dec
test
or
sub
fs
mov
xchg
cltd
adc
jle
std
pop
int3
out
xchg
mov
jbe
push
add
imul
inc
fdivs
loopne
inc
popa
insl
test
subb
sub
clc
shll
xchg
addr16
jb
loopne
add
sbbb
jle
mov
jbe
or
xchg
mov
jp
cmp
push
pop
add
out
sub
pop
dec
jbe
mov
cmp
aad
xor
fwait
icebp
or
mov
insb
adc
fbstp
ds
lret
je
cs
xor
mov
cmpsb
mov
sub
call
ja
and
and
es
sahf
loop
fld
mov
pop
pop
or
mov
cmp
mov
mov
repz
dec
pop
nop
mov
ss
inc
or
xor
loopne
in
push
adc
mov
inc
shrl
mov
dec
add
fs
cli
sub
adc
xor
negl
sub
pop
cmp
repz
push
sbb
mov
pushf
jmp
adc
cmp
les
shrb
mov
adc
sbb
in
jne
hlt
popf
sbb
jmp
das
enter
push
out
lahf
outsl
jns
mov
xchg
or
lcall
cmpsl
adc
shll
add
mov
cmpsb
pop
shl
mov
push
jge
mov
sub
cmp
in
pop
rcrl
ja
je
jle
or
push
enter
mov
cmc
lods
jo
sub
push
or
jae
lcall
cmc
loope
icebp
sbb
sub
mov
pusha
loope
add
add
pop
faddl
xchg
lock
fs
add
addb
pop
xchg
cmp
adc
inc
xor
in
mov
lret
xchg
jecxz
mov
and
pop
pusha
xchg
push
adc
mov
inc
out
sbb
nop
sahf
into
sbb
repnz
enter
fstl
hlt
popf
jl
push
inc
lods
dec
jg
and
push
jp
xchg
xchg
mov
aam
scas
pop
lret
sahf
lock
mov
das
push
ljmp
mov
dec
insl
pushf
xchg
aas
les
sbb
aam
jo
test
push
jbe
arpl
xchg
in
cltd
jno
mov
nop
dec
and
dec
jo
out
dec
inc
pop
lret
pop
cmp
adc
insl
jb
dec
jns
test
xor
pop
ret
xchg
adc
mov
jg
sbb
roll
or
cmp
jo
dec
cmc
sti
stos
xorb
add
outsb
mov
add
mov
mov
jbe
cmpsl
testb
jp
mov
hlt
xchg
mov
cmp
loop
fimull
shrl
not
clc
mov
das
sub
adcl
sbb
aas
pop
add
push
int3
dec
mov
rolb
dec
mov
dec
pop
gs
mov
mov
pop
sarb
and
in
mov
je
mov
dec
mov
and
cmp
adc
jge
cld
scas
inc
pushf
adc
test
mov
scas
outsl
lahf
xor
mov
jo
cmp
push
lahf
ret
in
or
jecxz
nop
les
cmp
mov
fdivr
lcall
in
lock
lcall
xchg
xchg
out
push
inc
test
push
insl
adcb
dec
cli
push
sti
cld
sub
or
and
addr16
pop
cltd
or
sbb
xchg
mov
imul
je
mov
in
dec
xchg
xchg
pop
sbb
dec
cmp
cli
insb
pop
into
mov
mov
pop
mov
cld
pop
sub
outsb
sub
mov
mov
pushf
int3
sbb
pusha
repnz
lods
pop
outsb
imul
adc
fistps
popa
adc
cmp
mov
pushf
push
jmp
int
test
rol
ja
js
aaa
inc
in
or
jmp
pop
pop
ds
ret
jmp
iret
outsb
fidivl
push
jns
out
sahf
in
and
xor
fidivrl
nop
xlat
ja
mov
call
mov
dec
jne
data16
and
xor
fcmovb
mov
xor
cltd
loop
hlt
popf
out
inc
shrb
jl
push
dec
mov
stos
adc
cmp
xor
sub
outsb
lea
in
enter
lea
cmp
xchg
hlt
inc
aad
mov
push
pop
iret
popl
insb
jg
cmpsl
fucom
rcrl
xor
inc
jge
push
out
push
movsb
jne
pop
dec
add
dec
fcoms
arpl
sub
dec
add
xchg
pop
adc
test
sbb
addb
lods
inc
shrl
mov
cmpsb
pop
mov
cltd
outsl
inc
push
les
pop
loop
imul
jo
cs
push
push
rolb
dec
add
js
xor
xchg
sub
fs
jbe
push
inc
dec
lret
daa
pop
sbb
jne
sti
clc
xorl
mov
lret
mov
insl
sarb
test
stos
loop
bound
adc
or
rorl
jno
adc
jae
xor
cld
xor
adc
stos
inc
push
int3
das
sti
aas
mov
jmp
mov
mov
mov
xor
and
jl
xor
cmpsb
push
mov
or
int3
outsb
sbb
sub
pushf
pop
jne
sarl
xor
xor
inc
lds
push
pop
shrb
jo
xor
fucomi
das
loop
subb
push
insl
stos
fldt
sub
iret
sti
out
push
pop
mov
daa
bound
inc
ret
fmuls
mov
jns
mov
mov
mov
sub
mov
js
insl
push
adc
mov
adc
mov
cmp
sbb
adc
popw
iret
xor
std
push
sub
and
lods
subl
jbe
loope
xchg
add
push
imul
test
scas
or
cwtl
sub
jmp
stc
outsb
jecxz,pn
mov
mov
out
jns
cli
mov
inc
lock
cltd
inc
sti
call
fs
xor
ja
sub
scas
sub
push
pop
mov
or
mov
pop
jle
sbb
inc
data16
in
push
stc
cld
xor
jb
inc
es
outsb
pop
dec
sbb
xor
push
loope
shrl
enter
into
mov
add
mov
jl
clc
mov
push
sti
out
clc
enter
adc
add
stc
jne
ret
cmp
add
aam
dec
jns
jno
icebp
inc
fcomi
aaa
rorl
and
icebp
leave
pop
out
mov
add
or
adc
mov
mov
pop
jbe
loopne
outsl
mov
mov
orl
jp
mov
xor
lahf
outsl
mov
inc
into
sbb
sub
push
insl
decl
les
jge
pop
ss
dec
cld
or
sbb
ds
insb
mov
sbb
roll
mov
mov
jmp
pushf
pop
out
xchg
mov
jbe
and
push
jae
dec
mov
clc
xchg
in
push
pop
movsb
mov
ret
je
or
push
inc
lock
fidivs
inc
adc
lods
push
loop
in
add
sbb
mov
push
fsubl
mov
shll
dec
nop
inc
in
and
push
jne
or
pop
push
and
movsb
ss
cmpb
outsb
jle
push
add
xchg
xchg
lcall
bound
add
sarl
inc
sub
pusha
nop
and
stos
mov
sub
push
add
icebp
push
sbb
dec
add
push
mov
loop
jp
aad
pop
addr16
push
mov
loopne
fwait
bswap
das
fldcw
and
cld
es
je
mov
andl
std
sub
sbb
pop
jp
fsts
stos
imul
hlt
popf
adc
sub
mov
mov
enter
sub
cmpsl
inc
lods
push
and
repnz
int3
mov
lds
out
dec
icebp
mov
jo
jl
les
dec
repz
sub
jge
iret
sbb
mov
gs
stos
and
pop
mov
negl
or
push
enter
test
sbb
inc
jp
pop
mov
fildll
fldt
es
out
pop
mov
push
pop
inc
out
mov
adc
sbb
cld
gs
movsl
and
mov
pop
loope
and
addr16
lcall
das
cs
inc
lods
and
jge
iret
int3
iret
negb
arpl
push
add
push
pop
out
dec
shrb
aas
hlt
xchg
pop
adc
stc
dec
add
jb
aas
call
loop
mov
iret
add
repnz
imul
bound
imul
add
daa
ret
sbb
jp
mov
ret
lock
adc
mov
add
jo
sbb
daa
xor
insb
pushf
int3
sbb
xchg
stos
xorl
aad
pop
enter
std
xchg
inc
fsubs
out
ss
dec
mov
or
stos
mov
jg
mov
sbb
xor
adc
jne
dec
cwtl
in
call
cmp
lret
mov
xchg
mov
lahf
std
hlt
push
je
mov
and
mov
cmp
sbb
pop
xor
adc
xchg
sub
sub
push
jmp
push
cmp
imul
pop
or
lock
push
jge
dec
xor
fs
and
clc
js
jae
xor
inc
lds
fs
jl
mov
test
jae
xchg
in
sub
out
or
mov
ljmp
push
jae
enter
mov
ljmp
stos
push
dec
sahf
push
jmp
push
mov
pop
les
and
ret
mov
ret
jmp
jg,pt
cld
cmpsb
dec
popa
addr16
icebp
sbb
cltd
leave
jge
jg
lds
xchg
push
frstor
push
outsb
cltd
jl
adc
pop
test
xchg
inc
roll
push
fists
or
mov
js
mov
sub
pop
push
sbb
mov
mov
data16
cmp
inc
pop
push
xchg
push
mov
jbe
dec
fwait
mov
in
or
mov
cmpsl
addr16
sbb
mov
cmc
stos
fisubrl
fidivs
aas
call
int3
icebp
and
aas
inc
inc
or
mov
sub
cmpl
sbb
jns
cld
inc
and
xor
fst
mov
fdivr
pop
lock
xchg
inc
lock
lcall
pop
fwait
dec
inc
outsl
imul
dec
xchg
sub
jmp
std
and
insb
cmp
lcall
pusha
test
jno
jo
movsl
jg
jns
dec
iret
popa
stos
xor
pop
insb
mov
dec
xlat
pop
xor
dec
push
sbb
add
xchg
mov
popa
mov
or
ficompl
pop
ret
test
mov
push
sub
mov
stc
push
jbe
mov
cmp
cmp
jo
xchg
outsl
mov
xor
int
rorb
je
jbe
stos
mov
jae
int
push
cld
dec
push
test
loope
cmp
mov
out
xchg
lret
cmc
add
xchg
imul
jl
mov
mov
sbb
ret
movsl
jo
inc
out
hlt
mov
movsl
xchg
push
aas
mov
addr16
and
pop
mov
pop
xorl
or
scas
add
pop
adc
or
or
or
mov
ret
xchg
pop
fisubs
and
sti
mov
pusha
mov
data16
stos
aad
sbb
aas
out
cmp
xor
pop
iret
test
sub
sbb
jne
ss
jge
dec
sbbb
cltd
test
stos
push
xor
adc
iret
cmpsl
xchg
push
mov
mov
or
lea
jp
stos
cli
mov
dec
mov
repz
mov
int
mov
je
jmp
mov
lds
jecxz
xor
repnz
in
mov
xchg
mov
out
sbb
mov
fwait
cmpsl
stc
js
xor
dec
sti
bound
outsb
mov
cmp
push
push
jge
cli
fwait
nop
std
xchg
jge
and
mov
dec
call
and
jecxz
xor
fiaddl
stos
mov
or
ss
lea
inc
mov
fucomp
inc
in
pop
add
ljmp
sbb
sub
lods
sahf
ret
lds
stc
xor
and
scas
adc
int
sbb
adc
cmp
push
jno
mov
icebp
push
aaa
fists
sbb
sub
mov
sbb
push
jno
dec
xchg
dec
lods
stos
imul
xchg
xchg
mov
and
and
popf
shl
sbb
cli
icebp
jge
xchg
popf
das
js
inc
shll
outsb
sahf
adc
jg
or
inc
repz
lcall
push
dec
popf
clc
insb
mov
shl
adc
push
mov
adc
das
icebp
sbb
jb,pt
push
mov
insl
mov
xchg
mov
adc
loop
jg
out
test
adc
and
sub
dec
sbb
stos
inc
insb
adc
sbb
pop
gs
or
sub
test
push
xchg
xor
lds
jbe
ja
xchg
es
mov
mov
leave
push
jno
mov
dec
or
mov
add
add
test
xchg
in
dec
fbstp
inc
std
cmpsb
push
je
sub
mov
xchg
jns
hlt
jnp
mov
ret
stos
push
jle
jmp
sarl
add
mov
addb
lret
cmpl
or
jle
push
mov
add
sub
xchg
pop
mov
push
mov
push
mov
push
push
pop
inc
push
mov
shl
sub
add
pop
mov
pop
sub
mov
addl
pop
sub
mov
mov
mov
pop
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
or
les
mov
add
jmp
xchg
jae
jp
xchg
lea
cmpb
jl
pop
daa
inc
addr16
sbb
push
shll
adc
xchg
pop
dec
fdivrs
repz
cmp
jmp
lahf
xor
jmp
lea
mov
mov
mov
movb
add
push
push
jmp
jmp
pop
jl
sub
cli
idivl
mov
adc
and
adc
mov
cltd
sub
dec
and
adc
add
ds
xchg
sub
in
or
lahf
ret
stos
or
xchg
jns
fwait
or
mov
add
pusha
xor
cmc
popa
push
mov
mov
addl
pop
ret
pusha
lea
jmp
push
push
pushl
call
pop
add
cmpl
jne
popa
ret
mov
mov
lea
push
xor
pop
add
mov
call
shlb
shll
outsl
enter
adc
lods
adc
mov
add
or
add
jb
int3
mov
xchg
cmpsl
push
jmp
mov
repz
mov
add
xor
test
xor
mov
sub
push
xor
mov
sub
or
out
testl
add
mov
push
js
cld
popl
pusha
mov
jno
ja
popa
sub
mov
dec
dec
dec
movswl
sub
jne
xor
sbb
sbb
cmp
pop
enter
out
mov
mov
dec
stc
cmpsl
into
pop
cld
mov
psllq
cli
xchg
pop
ret
sbbb
sub
sbb
sub
sbb
sub
mov
test
sbbb
sub
xor
sub
xor
xor
lret
jp
cld
sub
call
adc
scas
cmp
sbb
jecxz
xor
ljmp
sub
cwtl
push
das
add
das
lcall
sbb
dec
pusha
fisttps
int
cmpsb
and
mov
test
sbb
sub
pop
xor
cmpb
out
frstor
dec
test
xor
andb
fs
sti
cmpsb
out
test
mov
in
test
cwtl
lods
outsl
lcall
fwait
aaa
sub
fstpl
add
test
jle
pop
xor
cmpb
out
dec
test
xor
sbbb
cmc
inc
dec
test
test
cmp
sub
pushf
sti
inc
xchg
test
stos
pop
stos
xor
std
sub
aaa
ljmp
sub
nop
push
das
add
das
xchg
sbb
sub
jno
sbb
insl
adcb
xor
sub
call
stos
ds
addl
xor
or
lret
push
sbb
sbb
sbbb
jecxz
push
fst
sbb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
inc
add
xor
andb
add
in
cs
add
ds
and
call
orb
jecxz
and
sub
sub
call
orb
xor
lret
jg
lea
sbbb
pop
ds
pop
sbb
xchg
cmp
sbb
sbbb
jns
aaa
cmpsl
arpl
pop
lret
adc
push
cmp
dec
test
sub
shl
out
arpl
mov
inc
int
fbld
adc
inc
ds
xorb
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fiadds
jb
xor
add
sub
std
enter
cmpsb
xchg
mov
ljmp
imul
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
cmp
xor
mov
cmp
sbb
pop
cltd
cltd
pop
or
mov
sub
sbbb
xchg
and
aaa
jl
xchg
mov
insl
inc
pop
fidivl
mov
add
sub
and
mov
cmpsb
mov
adcb
xor
loop
in
dec
enter
push
xor
mov
xor
cmpb
out
dec
test
xor
sbbb
and
clc
inc
gs
test
ds
mov
xor
pop
xor
cmpb
out
fisubl
dec
test
xor
sbbb
mov
fistps
mov
fwait
inc
sbb
test
mov
push
jl
jp
outsl
movsb
and
sbbb
addl
outsl
movsb
pop
mov
movsb
pop
inc
sub
jae
jnp
sub
sub
lcall
inc
aas
test
mov
out
mov
aaa
ljmp
sub
nop
push
das
add
das
xchg
sbb
sub
jno
mov
sbbb
push
inc
daa
mov
pop
bound
test
out
clc
mov
sub
sbb
mov
cmp
mov
adc
call
mov
mov
adc
xchg
jmp
addr16
inc
mov
xor
sub
lds
mov
jns
mov
sbb
sub
sub
rolb
sub
jecxz
movb
inc
pop
shrb
pop
fidivl
sbb
cmpb
xor
andb
frstor
xchg
fwait
sbb
jns
jbe
outsl
movsb
pop
inc
mov
sbb
sub
sub
mov
sbb
inc
sbbb
jbe
in
or
fdivr
shl
outsl
sub
sub
aas
ss
insl
xchg
mov
sbb
sub
jae
jge
jae
pop
loopne
mov
or
aaa
jg
xlat
inc
sbb
pushf
sub
add
test
mov
outsl
movsb
pop
dec
sub
aam
stos
rcl
cmp
sub
xchg
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
jle
mov
mov
mov
cwtl
lods
ja
outsb
lods
dec
adc
mov
aaa
ljmp
sub
cwtl
push
das
add
das
xchg
sbb
sub
jb
dec
cltd
xorl
aaa
subb
cmp
jo
das
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
fidivrs
or
mov
imul
push
and
sub
hlt
aam
xor
idivb
mov
mov
sbb
sub
nop
push
das
add
das
xchg
sbb
sub
jno
and
aad
sbb
sub
xchg
pop
mov
addr16
mov
pop
movsb
out
mov
cltd
mov
sub
roll
inc
mov
mov
mov
xor
cmpb
out
frstor
dec
test
xor
andb
sub
stc
push
adc
xchg
imul
loopne
jecxz
xchg
cmp
inc
sbb
xchg
mov
mov
push
sbb
xor
ljmp
sub
pusha
push
das
add
das
cltd
sbb
sub
imul
ss
repnz
frstor
ds
fstl
mov
scas
cmp
sbb
jp
xor
mov
mov
mov
cmp
xor
cmpb
out
frstor
dec
test
xor
andb
arpl
cmpb
loopne
cmp
aaa
call
jb
adc
sbb
sub
and
fistpl
xor
cmpb
aas
cmp
cmp
rcl
inc
sbb
inc
ljmp
xchg
leave
orb
aaa
pushf
push
or
out
out
mov
mov
dec
fnsave
ljmp
sub
jo
das
add
das
xchg
sbb
sub
insl
cmc
cli
ftst
dec
adc
sbb
sub
movsl
pop
sub
int
add
jg
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
pusha
xchg
xlat
inc
push
rcll
lods
push
insl
inc
mov
imul
int
int
or
clc
mov
cmp
out
shlb
xor
add
sub
bound
ljmp
jno
jno
and
inc
sub
xchg
mov
aas
pusha
outsl
add
adc
std
xchg
inc
mov
loope
mov
jge
sub
push
lret
xchg
pop
loop
cmp
xor
shll
mov
sbbb
jge
jl
orl
cmpb
xchg
jnp
sub
fdivrs
imul
or
test
outsl
movsb
pop
cmpb
mov
fidivl
pop
loopne
xchg
cmp
sbb
sub
movsb
mov
sub
mov
mov
xor
cmpb
out
fbld
dec
test
xor
andb
pop
push
leave
gs
pop
sbb
mov
aaa
or
sub
sbbb
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
mov
pushf
loope
sbb
xchg
xorb
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fidivs
and
inc
mov
popf
mov
movsl
not
mov
mov
and
sub
xchg
cmp
xchg
icebp
add
fs
adc
cltd
sub
and
sub
insb
test
sbb
sub
sbb
dec
push
push
mov
ds
imul
jae
adc
sbb
cltd
lea
add
out
or
clc
mov
imul
sub
add
mov
mov
sbbb
cmp
insb
test
popa
vandps
cmp
lds
sub
pusha
push
das
loopne
mov
sbbb
sbb
test
sub
fsubrs
arpl
fadds
xor
cmpb
out
fisubs
dec
test
xor
andb
mov
pop
or
insb
jne
fadds
int
jg
lahf
dec
sbb
pushf
sub
add
test
mov
outsl
movsb
pop
dec
sub
xchg
and
in
push
imul
sbbb
or
dec
fsubrl
mov
mov
std
inc
and
sbb
xchg
subb
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
jns
add
ds
or
test
cmp
adc
xor
sbb
adc
sbb
sub
iret
ss
out
mov
movsl
xor
jg
shlb
jnp
sub
fdivs
mov
aas
mov
xor
cmpb
bound
dec
mov
sub
jl
mov
add
sub
pop
out
push
cmp
testl
add
sub
xor
inc
pop
imul
ss
rcl
data16
loopne
fidivl
xchg
subb
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
cmp
out
add
sbb
sub
jnp
lods
sbbb
sub
sbb
mov
sbb
xor
sbb
adc
orl
or
loope
mov
pop
adcl
xor
ret
dec
lds
xor
iret
mov
sbbb
mov
xor
cmp
inc
jmp
out
cmc
shl
jle
out
cmp
sub
pop
cmpb
mov
sbbb
xchg
sbb
sub
je
sbb
xor
cmpb
out
fisubs
dec
test
xor
andb
test
addr16
int3
fs
sub
xor
or
xor
andb
sub
and
mov
cmp
and
sub
mov
repnz
sbb
sub
pop
xor
cmpb
out
fisubs
dec
test
xor
andb
lea
mov
pop
insb
sbb
sbbb
xchg
xchg
ret
fisttpl
mov
sub
xchg
icebp
lods
addl
out
cmp
lahf
rcr
gs
push
jecxz
adc
test
sarb
xor
lods
out
sbb
sbb
aaa
stos
rol
push
xorl
or
push
mov
mov
mov
sbb
sbbb
dec
mov
aas
ss
sbbb
insb
rcr
in
xchg
jg
popa
fsubs
cmp
sub
sub
sbb
push
add
test
lea
ds
subb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
push
sar
adc
mov
mov
inc
stos
sbbb
sub
imul
jae
test
movsl
mov
mov
jmp
xor
cmpb
out
fbld
dec
test
xor
andb
sub
mov
nop
mov
xor
mov
cmp
mov
jnp
dec
cmp
jl
mov
es
xlat
jns
mov
imul
mov
mov
jge
dec
mov
mov
sbb
sbb
jg
dec
negb
xor
shrb
jge
fwait
xor
sbbb
pop
imul
mov
pop
inc
jl
int3
insl
xlat
xor
stos
inc
pop
loopne
mov
sbbb
jnp
sub
fdivrs
shrb
cmp
and
sub
jne
cmp
jne
mov
sbb
xor
inc
cmp
aaa
or
cmp
sub
aas
int
jns
mov
sbbb
ljmp
pop
sbb
mov
aaa
loopne
icebp
popf
out
mov
adc
mov
mov
jno
pop
mov
aaa
ljmp
sub
jp
lahf
movsb
pop
mov
movsb
pop
dec
sub
xlat
out
iret
sbb
sbb
test
xor
xlat
jnp
mov
and
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
jp
inc
add
push
push
jle
xchg
test
fcompl
jae
push
shl
mov
xor
cmpb
out
fisubl
dec
test
sub
movsl
test
push
sbb
sbb
inc
adc
shll
sbb
test
sbb
or
inc
sub
xchg
xorb
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fidivs
int3
test
adc
in
adc
and
sub
mov
pop
sbb
mov
mov
and
sub
mov
push
sbb
xchg
xchg
subb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
fs
inc
pop
mov
mov
test
adcb
sbb
sub
pusha
push
das
add
das
popf
sbb
sub
imul
add
dec
adc
mov
inc
js
inc
sub
or
or
fcmove
lea
test
loope
jnp
mov
loope
aaa
or
mov
aaa
imul
icebp
stc
rolb
sub
movsb
mov
pushf
jbe
test
sub
mov
mov
jnp
insl
xchg
mov
jae
jnp
add
sub
mov
pop
ret
cmp
pop
ljmp
cmp
ret
xchg
mov
cltd
push
mov
xor
sbbb
mov
jp
jnp
insb
addb
jnp
cmp
sbb
test
jne
mov
repz
rolb
and
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
xor
push
jecxz
push
or
xchg
mov
ss
sub
adc
sbb
sub
mov
xor
add
mov
mov
outsl
movsb
pop
dec
sub
jns
fisubl
fsubrs
sbb
jl
xor
jmp
adcb
sbb
sub
pusha
push
das
add
das
cwtl
sbb
sub
imul
and
add
mov
aaa
shll
test
test
subb
sub
movsb
scas
dec
test
sub
and
or
insl
mov
loope
aaa
popf
scas
sub
add
mov
mov
outsl
movsb
pop
dec
sub
mov
push
lahf
xchg
sbbb
sub
add
mov
mov
outsl
movsb
pop
dec
sub
outsl
lret
sbb
mov
mov
xchg
push
mov
movsb
sub
add
mov
mov
outsl
movsb
pop
dec
sub
rorb
repz
ljmp
sub
mov
add
das
fwait
sbb
sub
jo
js
jg
outsb
jmp
sbb
sub
adc
popf
add
sub
shlb
lock
xor
add
xor
addb
sub
movsb
mov
pushf
jbe
test
xor
sbbb
jl
fcomi
mov
mov
sub
jge
aad
adc
jnp
sub
adc
sbb
sub
cltd
insl
xchg
pop
jnp
pushf
pop
jno
jge
call
dec
cmp
and
sub
ds
test
imul
adcb
lcall
inc
pop
mov
sbb
sbbb
out
mov
fdivp
jecxz
jne
mov
sbb
xor
aaa
cmp
inc
mov
shrb
mov
sbb
icebp
inc
and
mov
in
sub
mov
mov
xorb
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fiadds
pop
pop
cmp
pop
loopne
sub
aaa
ljmp
sub
je
outsl
movsb
pop
mov
movsb
pop
dec
sub
hlt
push
inc
push
cmp
pop
aaa
sbb
orb
in
mov
mov
imul
cmpb
test
mov
aaa
xorl
shll
test
test
xor
mov
jo
das
add
das
lcall
or
rcrl
jp
lods
inc
and
mov
xchg
jnp
pop
xor
cmpb
out
fsubs
dec
test
xor
sbbb
pop
mov
aad
mov
mov
mov
inc
scas
mov
sbb
mov
jo
das
add
das
cwtl
sbb
sub
insl
cmc
xchg
mov
sbb
sbbb
mov
jbe
cld
or
sbb
sbbb
mov
jge
mov
xor
subl
sbb
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
fidivs
or
xor
andb
mov
andb
inc
or
mov
jl
sahf
inc
sub
insl
inc
pop
fidivl
pop
loopne
mov
push
cmp
dec
test
sub
pop
or
ljmp
mov
adc
jge
insl
inc
pop
fidivl
pop
mov
mov
or
xor
xorb
adc
xor
cmpb
out
fbld
dec
test
xor
andb
outsb
sbb
ds
cmp
sbb
rolb
ds
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
leave
sbb
out
or
xchg
adc
nop
xchg
add
jge
loope
mov
aaa
mov
inc
scas
mov
xor
ljmp
sub
mov
add
das
fwait
sbb
sub
jo
sub
shll
adcl
mov
sbb
and
imul
imul
sub
jnp
sub
fdivs
mov
aas
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
mov
jo
jg
mov
sub
mov
aaa
sar
sub
movsl
not
mov
xor
cmpb
out
fisubl
dec
test
sub
pop
fnstsw
pop
cmp
sub
jge
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
mov
cltd
fdivl
inc
mov
sbb
sub
aad
push
or
out
sbb
stc
mov
loope
aaa
sbbl
test
test
xor
mov
js
das
add
das
popf
sbb
sub
outsb
cmc
subb
xchg
pushf
cmpsb
mov
jmp
sbb
sub
js
das
add
das
xchg
sbb
sub
outsb
cmc
in
popf
add
add
mov
add
dec
sub
sbb
and
add
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
or
lock
fbstp
cmp
in
cmp
aaa
call
outsb
orb
aas
aaa
push
adc
pushf
sub
add
test
mov
outsl
movsb
pop
dec
sub
repnz
sbb
pushf
sub
cmpsb
out
rclb
xor
addb
loope
loope
aaa
fiaddl
push
imul
push
cmp
dec
test
sub
iret
jns
in
mov
add
lret
mov
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
fdiv
mov
popa
jns
pop
add
jnp
mov
sbb
sub
sub
mov
jle
jne
test
jb
jnp
jae
mov
ret
mov
sub
iret
lock
pushf
sub
add
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
dec
inc
jp
inc
outsb
mov
xor
addb
and
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
dec
cmp
popf
aad
mov
aam
cmpsb
out
adc
jbe
mov
xor
cmpb
out
fisubl
dec
test
xor
sbbb
mov
dec
lods
test
mov
mov
add
xor
addb
sbbb
sbb
outsb
cmc
test
notb
mov
dec
sbb
sbbb
xor
incb
pop
pop
ret
mov
push
jbe
mov
addl
adc
cmc
test
jo
das
add
das
cltd
sbb
sub
insl
cmc
xchg
jo
mov
dec
cmpsl
repnz
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
inc
fwait
or
mov
sub
int
adcb
mov
cmpsb
shrb
jmp
in
sub
les
sub
scas
cmp
sbb
sti
test
xor
mov
add
dec
mov
xor
xor
mov
mov
repnz
subb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
in
mov
add
shll
mov
repnz
sbb
sub
sbb
popf
add
in
insl
xor
movsl
fidivl
sub
add
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
xor
subb
out
or
mov
pushf
sub
add
mov
mov
outsl
movsb
pop
inc
sub
dec
aam
add
cmpsb
repnz
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
xor
mov
mov
mov
xor
cmpb
out
fisubs
dec
test
mov
pop
add
mov
xor
fwait
mov
jmp
sarb
push
fs
mov
sahf
mov
test
sub
aaa
imul
cmp
xor
addb
mov
sub
mov
mov
and
call
test
xchg
xorb
sbbb
push
cmpl
sub
cmp
adc
xor
and
mov
xor
or
mov
aaa
rolb
xor
inc
and
repz
sbb
sub
sbb
sub
mov
xchg
in
xorb
jmp
jg
xchg
subb
int3
xor
push
nop
out
outsl
lcall
cmpsb
out
sahf
mov
mov
sub
cmc
add
fisttpl
sub
mov
fwait
mov
sub
xor
jle
fsubr
in
sbb
mov
leave
pop
mov
sub
scas
cmp
sbb
in
sbb
mov
leave
pop
mov
sub
xchg
subb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
cmp
xchg
lcall
sbbb
mov
mov
outsl
movsb
pop
dec
sub
test
out
or
pushf
sub
add
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
pop
or
push
test
sbb
dec
ds
lahf
mov
dec
mull
into
mov
and
mov
mov
sbb
sub
push
push
das
popf
sbb
sub
insb
cmc
mov
pop
cmpsl
sti
icebp
cmpl
sub
rcr
loopne
mov
adc
sbb
sub
sbb
sbb
and
shrb
mov
jae
jnp
sub
arpl
cmpsl
adc
push
jae
sarl
jge
insl
xchg
mov
sbb
sub
jae
pop
loopne
test
mov
mov
push
stos
push
xchg
jge
fldl
test
fisttps
loope
mov
shrb
arpl
sbbb
sbb
inc
or
pop
cmpsl
add
ss
mov
jbe
test
scas
xchg
xor
sbbb
sub
adcl
sbb
sub
push
push
das
xchg
sbb
sub
insb
cmc
in
jg
xlat
inc
sbb
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
sbb
int
cli
xchg
test
les
pop
xor
subb
sbb
in
mov
aaa
ljmp
aaa
push
in
mov
jecxz
or
push
adc
mov
insb
mov
lcall
sub
sub
dec
mov
sbbb
lods
mov
adc
push
pop
icebp
push
imul
dec
scas
fidivrs
jge
jl
pop
loopne
mov
sbbb
test
pushf
dec
jns
mov
ljmp
sub
cwtl
push
das
add
das
popf
sbb
sub
jb
mov
dec
stos
lcall
xor
jg
mov
aaa
or
pushf
sub
add
mov
mov
outsl
movsb
pop
inc
sub
mov
int
or
mov
sub
ds
inc
xor
mov
cli
fnsave
mov
jmp
sbbl
push
sub
ds
loop
mov
mov
outsb
test
sub
xor
or
shrb
mov
dec
mov
shrb
cmp
fwait
inc
push
pop
fisubrs
mov
sub
mov
xor
jge
enter
aad
cli
decb
imul
ss
faddp
push
or
xchg
adc
sbb
sub
lcall
mov
sbb
push
inc
pop
sahf
xor
jge
outsl
movsb
pop
cmpl
mov
sbbb
cmp
je
stos
imul
aaa
jg
xlat
inc
sbb
arpl
in
int
or
sub
cld
push
popa
sahf
adc
cmp
and
pop
mov
sbbb
push
add
add
pop
adc
test
mov
in
push
mov
ss
mov
xor
cmpb
out
frstor
dec
test
xor
andb
pop
cmp
in
or
sbb
mov
aaa
or
lahf
push
sbb
clc
mov
cmp
xor
pop
xor
cmpb
out
dec
test
xor
sbbb
pop
leave
incl
cmpl
mov
pop
xor
inc
sub
fsubrs
div
push
dec
jp
fcomps
popf
sub
out
inc
mov
movsb
jb
add
mov
sub
roll
cmpsb
mov
mov
mov
sub
xor
cmpb
out
fisubs
dec
test
xor
andb
pop
or
add
movsl
or
inc
ljmp
jle,pt
rorb
sbb
lcall
imul
sbb
sub
aas
xchg
or
mov
aaa
jg
xlat
inc
sbb
jmp
pop
jge
add
test
subb
sub
movsb
sahf
dec
test
sub
mov
int
jg
sbb
sbbb
ret
xlat
adc
mov
stos
mov
xchg
xorb
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
ficomps
jo
xlat
pop
call
sbbb
pop
cmp
or
inc
dec
xchg
rcll
jecxz
loope
mov
mov
jb
movsl
cmp
sbbb
loopne
inc
int
roll
sub
into
cmp
sub
cmpb
xchg
mov
jae
pop
imul
push
imul
movsb
leave
mov
mov
pop
or
das
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fiadds
sahf
inc
cmp
out
xchg
mov
xchg
subb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
xchg
or
sub
sub
rorb
mov
leave
repz
sub
in
out
scas
mov
mov
dec
fnsave
loopne
mov
lods
jo
movd
xor
cld
ljmp
sub
cwtl
push
das
add
das
lcall
jae
idivb
pop
mov
aaa
or
inc
scas
mov
xor
movsb
cmp
sbbb
loopne
aas
int
inc
mov
jns
pop
sbb
lcall
xor
addb
sbbb
mov
mov
sub
sbb
sbb
lea
sub
add
mov
mov
outsl
movsb
pop
inc
sub
hlt
pop
shlb
xlat
inc
sbb
inc
loop
test
ds
adc
add
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
fmulp
enter
sub
cmp
aaa
mov
clc
mov
cmp
xor
pop
xor
cmpb
out
fsubs
dec
test
xor
sbbb
fs
cmp
and
sub
mov
aaa
out
rorb
dec
mov
fidivl
aaa
sbbb
ss
and
xchg
shl
xchg
lods
test
xor
roll
xor
xchg
mov
outsl
movsb
pop
dec
sub
stos
jno
mov
out
cmp
je
loopne
inc
int
jg
xlat
inc
sbb
sbb
sbbb
push
adc
pxor
stc
jle
sub
mov
sub
sbb
sbbb
pop
popf
jae
push
fstl
mov
std
mov
xor
cmpb
out
dec
test
xor
sbbb
ret
and
sbb
mov
mov
xor
ljmp
sub
js
das
add
das
xchg
sbb
sub
outsb
cmc
fimuls
cmpsl
out
dec
mov
ds
mov
sub
sbb
or
sbbb
dec
mov
aas
ss
sbbb
insb
rcr
xor
and
xor
push
ja
push
nop
insb
pusha
sbb
and
ds
test
cwtl
lods
dec
mov
mov
sbbl
xchg
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
inc
mov
mov
xorl
cs
inc
mov
sbb
sub
xor
addb
sahf
pop
stc
aam
xor
insb
push
sub
add
and
insb
sbb
sbbb
dec
mov
aas
ss
sbbb
insb
rcr
int
sub
xor
or
arpl
in
sub
aaa
jg
xlat
inc
sbb
pushf
sub
add
test
mov
outsl
movsb
pop
inc
sub
or
mov
dec
fnsave
ljmp
sub
nop
push
das
add
das
cltd
sbb
sub
jno
add
mov
cmpsl
or
xbegin
push
insl
mov
aaa
ficomps
test
test
xor
mov
js
das
add
das
xchg
sbb
sub
outsb
cmc
imul
incl
sub
mov
icebp
push
mov
xor
mov
orb
sbb
sbbb
or
lcall
mov
addr16
mov
mov
mov
jmp
sbbb
sub
jl
mov
std
mov
xor
cmpb
out
fldenv
dec
test
sub
dec
dec
pop
or
dec
mov
sbb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
repz
sbb
sbb
in
adc
sub
jnp
push
add
mov
sbb
repz
daa
xor
addb
sub
mov
cltd
mov
adc
or
es
fimuls
pop
div
fucomip
inc
pop
sbb
sbbb
scas
jmp
cmp
mov
sub
add
mov
mov
outsl
movsb
pop
inc
sub
push
push
add
adcl
push
inc
mov
sbb
sub
xor
subb
movsl
sbb
std
push
sbb
sub
pushf
dec
or
mov
test
xor
mov
nop
push
das
add
das
fwait
sbb
sub
jno
loope
jge
stos
fldl
cmpsb
mov
sub
aaa
loope
mov
push
add
sbb
rclb
sbb
sub
nop
add
jb
clc
stc
or
sub
aaa
out
adc
test
add
mov
xchg
xor
cltd
das
int
ljmp
sub
jo
das
add
das
cltd
sbb
sub
insl
cmc
enter
dec
xchg
insl
sbb
fnstenv
insb
adc
mov
call
pop
cmp
or
sub
add
mov
mov
outsl
movsb
pop
inc
sub
mov
pusha
mov
dec
mov
xchg
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
ja
push
xor
push
xor
andb
add
add
sub
addb
sbbb
jns
and
sbb
xor
adc
mov
sbb
sbbb
jle
sbb
std
push
insl
sbb
sbbb
sbb
mov
repnz
pop
xor
cmpb
out
dec
test
xor
sbbb
fistpl
js
mov
xchg
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
sub
aaa
xchg
mov
aaa
or
sub
sbbb
mov
mov
outsl
movsb
pop
inc
sub
lds
mov
mov
sbbb
xor
ret
call
mov
jle
popf
push
shrl
pop
fidivl
mov
jnp
jnp
sub
fsubrs
cmp
sub
adc
sbb
sub
sbb
loop
xchg
scas
dec
inc
xchg
mov
xchg
jl
pop
xor
cmpb
out
fldenv
dec
test
xor
sbbb
dec
fistpll
sub
jnp
sub
fdivs
movsb
test
subb
sub
movsb
sahf
dec
test
sub
fs
out
cwtl
add
outsl
mov
aaa
or
scas
push
sbb
cwtl
mov
sbb
in
lahf
mov
cs
movsb
mov
movsb
mov
mov
sub
mov
mov
pushf
cmp
sbbb
shlb
aaa
call
outsb
mov
mov
push
loop
sbb
rclb
jo
das
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
fsubp
sbb
inc
xorb
sbb
aaa
add
push
sub
xor
pop
xor
cmpb
out
dec
test
xor
sbbb
movsb
ljmp
out
inc
ljmp
ds
xorb
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
fisubs
adc
lock
ja
jecxz
flds
jmp
push
mov
sub
add
mov
mov
outsl
movsb
pop
dec
sub
cmpsb
repz
ret
daa
call
pusha
stos
add
les
ret
int
and
push
test
or
pop
push
in
xor
cmc
les
dec
pop
fdivrs
adc
cmc
xchg
js
das
add
das
cwtl
sbb
sub
outsb
cmc
add
loope
ret
xor
cmpb
test
push
lods
das
mull
xchg
add
pusha
jnp
sbb
rclb
jno
das
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
ficoms
cmpsb
xchg
ds
test
mov
ds
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
fidivs
push
or
sbb
xchg
subb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
and
mov
in
or
mov
aaa
inc
mov
test
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
inc
jmp
push
stos
xchg
sbb
nop
sbb
sub
dec
or
adc
popl
je
mov
imul
imul
sbbb
nop
and
xchg
cmp
pop
in
fwait
cmp
sbbb
mov
sbb
sub
cmpsb
jbe
test
mov
mov
xor
xor
or
and
xorl
xor
subb
fdivrs
lcall
push
mov
mov
sbb
and
xchg
jnp
sub
sub
sub
test
jl
outsl
movsb
pop
cmpb
push
xor
subb
fadds
xor
cmpb
out
fldenv
dec
test
xor
sbbb
outsb
ljmp
cmpl
pop
sbb
jl
cld
ljmp
sub
mov
add
das
cltd
sbb
sub
jo
add
call
inc
xchg
dec
int
ljmp
sub
nop
push
das
add
das
fwait
sbb
sub
jno
les
in
jo
add
jb
mov
sbb
sub
mov
xor
sub
adc
insl
ss
fidivrl
cmp
and
sub
sbb
jge
cmpsb
jbe
test
jnp
insl
mov
mov
mov
sbbb
test
sub
shrb
pop
fidivl
jge
dec
mov
addb
sbbb
testl
or
mov
mov
cmp
inc
arpl
push
out
sub
mov
test
xor
mov
nop
push
das
add
das
xchg
sbb
sub
jno
mov
sub
roll
pushf
and
add
sub
das
sbbb
xchg
cmp
mov
and
mov
xchg
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
ficomps
ret
rolb
mov
cmp
mov
adc
mov
out
sahf
cmp
sbbb
mov
sbb
sub
jae
adc
sbb
sub
addb
rolb
test
mov
xor
and
push
or
inc
lods
xchg
sbb
sub
insl
inc
mov
sbb
sub
sbb
sub
jae
outsl
movsb
pop
cmpb
lea
xchg
sbb
sub
lods
sbb
ljmp
push
xorl
fsubs
sub
roll
test
jle
pop
xor
cmpb
out
dec
test
xor
sbbb
dec
test
add
movsb
mov
mov
mov
xor
cmpb
out
frstor
dec
test
xor
andb
jbe
cmpsb
jg
pushf
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
adc
push
xor
data16
mov
inc
sbb
mov
aaa
ljmp
sub
js
das
add
das
xchg
sbb
sub
outsb
cmc
popa
add
ljmp
outsl
or
cmp
aaa
sarb
stos
sbbb
sub
jns
mov
jns
mov
aas
pushf
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
es
rorb
sub
imul
push
cmp
dec
test
sub
push
xor
or
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
adc
cmpsl
pop
mov
cli
fnsave
ljmp
sub
nop
push
das
add
das
fwait
sbb
sub
jno
jl
jo
bound
cmc
xchg
aas
data16
cmp
sbbb
popa
inc
nop
scas
imul
and
sub
imul
adc
cmc
test
push
push
das
xchg
sbb
sub
insb
cmc
enter
jl
movsl
cmp
sbbb
jge
jne
pop
loopne
mov
inc
cmp
roll
aaa
or
mov
test
int
out
cld
push
inc
mov
inc
sub
imul
test
int
mov
mov
push
dec
int
ljmp
sub
cwtl
push
das
add
das
cwtl
sbb
sub
jb
inc
push
std
pop
push
or
mov
aaa
or
mov
mov
ds
sbb
sub
sbb
sub
fisttpll
or
aaa
roll
xor
sbbb
lods
inc
xor
sub
movsb
jbe
xchg
jbe
mov
popa
cmpsl
jbe
test
adc
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
fiadds
gs
mov
rcr
int
loope
add
mov
jecxz,pt
pop
ret
mov
fwait
inc
sbb
pop
cli
inc
add
cli
scas
inc
and
jbe
out
pop
ds
mov
scas
imul
mov
aaa
imul
icebp
cwtl
shll
stc
sub
jecxz
dec
xchg
xchg
subb
sbb
dec
mov
aas
ss
sbbb
insb
rcr
add
inc
xchg
subb
sub
movsb
scas
dec
test
sub
mov
xor
mov
cmp
hlt
aaa
sti
jg
jns
out
lea
inc
mov
out
movsb
mov
sub
sbb
mov
out
mov
inc
mov
out
xchg
mov
sub
sbb
mov
out
popf
mov
sub
sbb
mov
out
mov
inc
mov
out
stos
mov
sub
sbb
mov
out
scas
mov
sub
sbb
mov
out
mov
inc
mov
out
pushf
mov
sub
sbb
mov
out
xchg
mov
sub
sbb
mov
out
mov
sbb
mov
out
mov
sub
sbb
mov
out
mov
inc
mov
out
xchg
mov
sub
sbb
mov
out
xchg
mov
sub
sbb
mov
sbb
sbbb
loop
sbb
fisubs
sbb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
fst
cld
call
xor
adcb
ficompl
lahf
xor
sbbb
mov
jl
lods
test
xor
out
jns
loope
out
aam
mov
sub
and
call
orb
jecxz
and
sub
mov
mov
aaa
jg
lea
sbb
xor
cmp
xor
or
mov
aaa
jg
lea
test
xor
mov
cwtl
push
das
add
das
xchg
sbb
sub
jb
xchg
sahf
add
sub
into
insb
cwtl
dec
mov
xchg
subb
sbb
dec
mov
aas
ss
sbbb
insb
rcr
mov
mov
xchg
cmp
xor
addb
sbbb
fcom
test
mov
sbbb
mov
cmpsb
sub
add
jl
jmp
add
sub
in
sbbl
fldenv
or
inc
cwtl
in
lret
add
xor
cmpb
lock
cwtl
jecxz
dec
xchg
mov
mov
xor
cmpb
out
fbld
dec
test
xor
andb
cmp
pop
push
js
jmp
dec
inc
mov
sbb
sub
cmpl
mov
movsl
mov
cmp
and
sub
mov
push
test
xor
addb
sub
movsb
mov
pushf
jbe
test
sub
adc
push
call
or
out
sbb
gs
or
sub
sbbb
mov
mov
outsl
movsb
pop
dec
sub
adc
dec
mov
add
xor
andb
xlat
imul
sub
mov
and
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
ficoms
push
or
or
inc
int
ljmp
aaa
ljmp
aaa
or
sub
sbbb
mov
mov
outsl
movsb
pop
dec
sub
sub
enter
and
scas
test
sub
movsb
push
ljmp
mov
aaa
add
aaa
xchg
subb
sbb
dec
mov
aas
ss
sbbb
insb
rcr
and
xchg
arpl
xchg
or
xchg
push
or
add
sub
insl
loopne
add
xchg
jmp
shrb
adc
sbb
sub
sub
rolb
sub
add
inc
xor
and
dec
mov
or
push
xchg
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
fdivp
or
ds
out
and
or
mov
aaa
ljmp
aaa
jg
aas
cmp
sub
aaa
or
sub
sbbb
test
mov
outsl
movsb
pop
dec
sub
fs
mov
call
sub
add
test
mov
outsl
movsb
pop
inc
sub
cmp
cmp
sub
sub
sbb
push
cmp
sbb
xchg
subb
sbbb
dec
fcmovu
mov
aas
ss
sbbb
insl
rcr
xchg
hlt
insb
loop
jmp
mov
xor
sbbl
pop
mov
ds
xorb
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fsubp
xor
sbb
cmp
and
sub
sti
sbb
sbbb
adc
sarb
inc
pop
adc
subb
rcrl
imul
mov
cmp
int
push
and
sub
sbb
sbbb
mov
mov
outsl
movsb
pop
dec
sub
lahf
dec
loope
lret
mov
aaa
or
fistl
sub
sub
mov
push
call
mov
inc
mov
sbb
sub
sbb
sub
mov
add
das
fwait
sbb
sub
jo
cmp
cmp
test
xlat
mov
inc
scas
mov
xor
or
xor
add
sbb
sub
pop
xor
cmpb
out
fsubs
dec
test
sub
fcoml
ja
push
call
or
sbb
sbb
mov
pop
inc
mov
mov
ja
sub
imul
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
mov
sbbb
xchg
insb
jne
shll
mov
mov
xchg
subb
sbb
dec
mov
aas
ss
sbbb
insb
rcr
or
mov
dec
pop
cmp
pushf
push
sub
xor
cmp
cmpl
or
popa
ds
outsb
aas
cld
into
push
lret
icebp
cmp
adc
mov
sbbb
xchg
xorb
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
ficoms
add
sbb
xor
imul
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
cld
ret
dec
inc
out
xorb
sub
jbe
das
movsb
test
jge
pop
xor
cmpb
out
fisubl
dec
test
xor
sbbb
mov
lods
mov
adc
pop
xor
ljmp
sub
mov
add
das
fwait
sbb
sub
jo
jnp
push
cmp
jb
mov
jnp
pushf
loopne
out
xor
jno
loope
mov
sub
add
test
mov
outsl
movsb
pop
dec
sub
sahf
xor
rolb
sub
xchg
xor
ljmp
sub
mov
add
das
xchg
sbb
sub
jo
xchg
xor
xchg
add
repz
or
repz
mov
xchg
ja
cwtl
lods
jbe
or
pop
xchg
jnp
pop
xor
cmpb
out
fsubs
dec
test
xor
sbbb
inc
pop
int
cmpl
cmp
jno
lods
dec
sbb
inc
sbbb
into
lret
hlt
mov
addl
and
dec
out
or
pop
push
xor
subb
shrb
mov
jbe
inc
sbbb
insb
loopne
sbb
mov
jo
ret
sbb
adc
orb
xchg
subl
nop
out
fisubs
dec
test
xor
andb
jbe
test
test
dec
push
mov
xor
cmpb
out
fldenv
dec
test
xor
sbbb
aad
add
xor
scas
cmp
sub
jbe
inc
sub
xchg
cmpsl
popa
cmpsb
jbe
add
jg
stos
cmp
orl
add
insb
lret
cmp
mov
aaa
lea
sbbb
test
mov
outsl
movsb
pop
dec
sub
push
test
or
mov
sbb
sbbb
test
mov
outsl
movsb
pop
dec
sub
and
and
xorl
sub
add
test
mov
outsl
movsb
pop
dec
sub
cmp
daa
push
xor
orb
lods
bound
scas
daa
add
ds
lahf
mov
aaa
or
pushf
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
je
loopne
aam
mov
inc
sub
adc
dec
test
test
sbb
sbbb
mov
loope
push
push
addl
pop
mov
mov
movsb
out
mov
sbb
sbbb
xchg
mov
ficoml
push
call
inc
push
in
cwtl
and
mov
in
dec
mov
or
lods
popa
stos
repz
mov
sbb
sub
inc
iret
lods
mov
pusha
mov
subb
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
mov
jge
in
add
nop
push
pop
sub
and
xchg
mov
aam
sub
lahf
repz
sbb
sub
mov
add
das
fwait
sbb
sub
jo
sub
sbb
lahf
lcall
sub
iret
aad
mov
mov
pop
sub
mov
lea
mov
mov
sbbb
xchg
or
cwtl
mov
adc
das
lahf
aad
sbbb
sub
add
mov
mov
outsl
movsb
pop
dec
sub
mov
test
int
ljmp
sub
js
das
add
das
lcall
ret
mov
aad
call
push
inc
xorb
xor
aaa
mov
sub
cmp
cmpsb
out
xchg
mov
adc
sbb
sub
sbb
sub
pusha
push
das
add
das
cwtl
sbb
sub
imul
addl
cmpsb
aas
jbe
adc
cmp
mov
xor
cmpb
out
frstor
dec
test
xor
andb
push
std
and
cmp
loop
int3
pushf
mov
push
dec
cwtl
dec
xchg
add
jnp
or
mov
aaa
or
ja
sbb
mov
lods
inc
int
push
and
sub
sbb
sbbb
xchg
mov
outsl
movsb
pop
dec
sub
iret
fimull
add
jge
mov
shll
sbb
ljmp
pop
push
sbb
pushf
sub
add
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
in
add
sub
ss
push
mov
inc
sub
inc
add
xchg
pop
inc
or
jbe
loopne
xchg
cmp
setae
sbb
pushf
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
push
cmpsl
inc
ds
adc
enter
dec
stos
or
add
sub
scas
mov
pop
dec
es
out
jns
jecxz
jno
cmp
test
xor
mov
nop
push
das
add
das
xchg
sbb
sub
jno
sub
inc
mov
sbb
sub
cmpsb
sub
sbb
add
and
add
test
mov
outsl
movsb
pop
dec
sub
jae
clc
or
and
inc
loop
add
xlat
inc
mov
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
aas
cmpsl
sbb
push
rorl
aam
das
mov
push
aaa
jge
push
bound
repz
stos
sbb
shlb
notl
xlat
mov
sub
mov
mov
mov
push
push
adc
les
into
cmp
jmp
xchg
sbb
insb
into
sbb
iret
jl
jo
push
xchg
push
cmpsl
out
mov
dec
cmp
sbb
scas
pop
jae
fdiv
and
sub
push
add
adc
fs
fists
cltd
sub
lods
sar
add
pushf
dec
xchg
inc
dec
sti
test
in
xchg
icebp
aam
mov
lcall
aam
pop
ds
pop
jnp
mov
rorl
das
icebp
lret
ja
sub
mov
das
rorb
aas
sub
or
test
mov
test
pop
into
fistl
lds
divl
cmovae
scas
push
mov
scas
clc
push
fdivl
and
xorb
ljmp
xchg
add
lods
mov
cmpsb
add
js
mov
movsl
daa
add
lcall
cwtl
cmp
xchg
shll
xor
js
push
xchg
bound
fdivrl
jnp
fcompl
xor
daa
xor
mov
push
xchg
xor
jns
mov
lea
inc
sbb
lock
ja
xor
iret
sbb
mov
sbb
stos
mov
push
add
cs
out
mov
xor
mov
or
or
xor
arpl
outsl
cld
ds
neg
mov
je
inc
icebp
cmc
cmp
sub
cmpsl
push
xchg
std
call
add
mov
scas
sbb
mov
pop
incl
push
cli
arpl
lea
push
daa
in
and
out
fmull
repnz
xchg
dec
daa
xchg
jle
adc
dec
out
mov
xor
dec
jp
xchg
ljmp
test
fcomps
lret
xor
stos
pop
xor
addr16
pushf
adc
sub
adc
int
in
add
loop
adc
movsb
je
push
adc
xchg
pop
inc
pop
and
inc
fistpll
jmp
cltd
out
sbb
lods
xchg
in
adc
inc
out
jnp
mov
out
adc
sub
push
scas
pusha
xchg
cmpsb
pop
jge
fdivs
hlt
mov
adc
push
or
xchg
xor
imul
mov
ret
loope
push
or
cmp
jbe
sti
mov
push
lcall
jg
mov
out
jge
cmp
cmp
inc
loop
pushf
insl
iret
pop
cmc
jp
pushf
jge
jl
je
mov
push
jle
adc
call
cmp
sbb
aaa
xchg
std
ss
loop
mov
or
sub
inc
aam
mov
fidivrl
in
fwait
sbb
sbb
xchg
les
pop
ror
loope
out
loop
shr
jne
add
pop
or
mov
lahf
aad
sub
insl
sbb
pop
shlb
pusha
mov
test
mov
and
aas
cmp
jno
popf
pop
adc
cmp
jbe
lret
js
hlt
jecxz
jg
add
lret
push
icebp
fldcw
test
sahf
arpl
fnstsw
mov
shll
daa
cmpsb
outsl
pop
inc
or
xchg
sub
loope
sub
jle
fwait
dec
mov
sbb
pop
xchg
xchg
mov
jne
ljmp
into
cwtl
lret
dec
insb
mov
fwait
jge
jmp
mov
mov
jp
dec
ljmp
iret
pop
cmp
mov
push
xor
shr
jns
jg
xor
pop
mov
sti
ljmp
mov
jnp
xchg
xor
sub
xchg
jne
sbb
ret
scas
ss
cmc
loopne
cmc
push
xlat
stos
stc
aaa
push
xor
adcb
or
or
lods
push
ficoml
movsl
mov
rol
loope
sbb
into
dec
test
ret
mov
outsl
add
dec
pop
aad
sbb
lret
int
push
jno
dec
pushf
int
sub
mov
pop
jo
xchg
jnp
and
cmpsb
sbb
jle
add
mov
jecxz
xchg
pop
dec
xor
nop
xor
or
mov
adc
push
push
adc
mov
cld
pushf
cmc
xchg
jne
test
dec
movsl
xor
popl
and
loopne
enter
xchg
ja,pt
lahf
in
sub
pop
test
and
out
adc
xchg
nop
or
pop
mov
lds
mov
hlt
jle
and
jno
lahf
sti
pop
dec
insb
into
inc
div
inc
fildl
xchg
sbb
imul
ror
sub
sbb
dec
jns
rcrl
out
fs
in
xchg
aaa
mov
scas
stos
and
mov
scas
inc
inc
cmp
int3
js
adc
loop
jae
leave
test
in
xchg
int3
cmp
adc
int3
jp
mov
add
aaa
jmp
outsl
lods
lea
pop
pop
in
mov
mov
ja
int
pop
sub
in
lods
inc
out
cmpsb
test
inc
cld
xlat
inc
push
lods
mov
push
jmp
test
jge
fcompl
mov
xor
repnz
xchg
jae
jmp
jg
pop
shlb
xchg
cmp
cwtl
and
push
lret
xor
sbb
mov
xchg
push
cmp
stc
sub
mov
test
mov
stos
sub
dec
scas
or
inc
push
mov
push
lret
arpl
mov
mov
sub
orb
fstpl
inc
dec
lret
adc
sub
mov
hlt
mov
mov
jnp
xor
mov
data16
xor
jnp
lock
mov
sti
cmpsb
hlt
adc
fildl
call
sub
and
dec
mov
outsl
push
lea
dec
rorb
sbb
jnp
sti
out
lods
pop
cmp
roll
xor
push
xchg
or
imul
fs
jg
out
cli
mov
add
adc
pop
cs
fdivrs
adc
test
repz
pusha
inc
andnps
or
outsb
in
cmp
dec
mov
mov
aad
addr16
mov
daa
scas
fcoms
jno
xor
pop
dec
push
cmpsl
outsb
pop
jge
leave
xor
sub
xchg
pop
shrb
mov
and
mov
mov
int3
sub
xchg
sti
jecxz
mov
inc
sub
and
in
jge
lea
lret
fildll
shll
imulb
std
loop
xchg
lods
mov
aas
dec
pop
add
std
jmp
mov
pop
cwtl
add
out
jnp
call
pop
ret
or
mov
mov
out
adc
cld
jae
xchg
imul
mov
cli
cltd
jns
mov
xor
aaa
inc
fisubs
std
in
push
sarb
adc
aad
mov
out
repnz
fistps
push
push
inc
ret
repz
and
mov
mov
decb
imul
scas
xchg
pop
fwait
scas
es
inc
rcll
lea
pusha
in
das
mov
pusha
and
jb
sbb
nop
popf
pop
lcall
jg
xor
jle
sub
rcr
rcll
inc
pushf
push
cmp
out
push
jns
xchg
sti
stos
jmp
mov
xor
pop
dec
inc
mov
fcoms
cmp
cmp
out
mov
inc
add
or
fs
sub
jg
or
popa
and
push
mov
test
imul
ja
ljmp
mov
decl
adc
xor
sarl
dec
fistpl
pop
or
xchg
adc
insb
dec
push
fistpl
push
jecxz
pushl
outsb
dec
jmp
js
stos
pop
pop
mov
inc
and
ljmp
inc
push
adc
iret
scas
pop
sbb
ljmp
adc
adc
test
and
push
cmp
out
orl
sahf
fsubrs
daa
mov
push
jle
iret
sub
cwtl
cmp
aam
jb
dec
mov
out
dec
pop
xchg
out
shrb
pop
nop
xor
ret
mov
jb
dec
pusha
push
sbb
lret
push
jmp
fnstcw
mov
mov
sar
inc
cmp
call
sbb
add
cld
and
xchg
in
jbe
inc
sbb
cltd
xor
std
mov
or
xorb
adc
jmp
fadds
cmp
pop
xchg
or
daa
test
or
pushl
insl
gs
fistpl
xlat
pusha
loop
push
sbb
int3
out
mov
xor
xchg
push
cmpsb
aaa
xchg
out
imul
into
cwtl
daa
test
jb
inc
xor
shrl
sbb
cmp
scas
shrb
int
hlt
mov
pop
inc
mov
adc
or
leave
pusha
jg
imul
movsb
gs
and
sbb
js
ds
mov
scas
xor
addr16
and
xchg
rcrb
adc
jo
sub
stos
sbbb
inc
mov
ds
mov
sarb
scas
inc
aam
or
xor
adc
jns
mov
pop
lds
stos
xchg
lods
push
cmp
lds
xchg
js
jg
or
lret
test
cld
adc
lods
xchg
je
aad
jnp
jle
xchg
dec
jmp
inc
jnp
outsb
pop
cmp
nop
mov
movsl
jno
sub
in
inc
mov
inc
xor
xchg
mov
pop
pusha
push
sub
or
iret
xchg
or
movb
dec
scas
xchg
jecxz
mov
sarb
jnp
int
xlat
sbb
lods
sbb
decb
cwtl
xchg
cmc
cmpsl
gs
inc
push
dec
movsb
jne
adc
mov
sahf
test
stos
pop
pop
pop
in
pop
popf
and
addb
lcall
movsb
push
mov
and
loope
popf
sub
ds
sbb
dec
out
pop
lds
sub
in
push
nop
jge
ja
aas
lahf
fldl
xchg
dec
ret
cs
or
icebp
pop
add
push
cld
in
outsb
cmc
xchg
adc
shrb
pushf
xor
fldcw
push
movsl
stos
pop
jmp
or
ss
sbb
icebp
jns
mov
pop
mov
xlat
popaw
movsb
ds
mov
nop
sarl
outsb
sbb
insl
xchg
dec
jmp
jne
pop
and
stos
xchg
je
into
and
push
adc
adc
dec
mov
xlat
ret
lea
es
in
lea
outsl
push
sahf
lret
in
lea
lret
movsl
aad
inc
fiaddl
pop
xchg
push
mov
push
sbb
daa
xor
sub
dec
mov
jp
push
test
test
mov
add
nop
xor
or
jb
lret
lock
xchg
into
scas
xchg
dec
adc
cmp
jns
mov
into
inc
xchg
gs
cmp
jle
lret
and
notl
inc
dec
decb
imul
insl
lock
push
inc
cmp
lret
mov
lahf
or
xchg
and
inc
mulb
push
enter
mov
push
ja
repnz
test
cmp
xor
xor
and
and
xchg
imul
adc
mov
call
scas
call
mov
stc
sub
or
test
cmpb
xchg
jbe
mov
push
xor
leave
scas
or
jnp
xchg
cs
ficoms
xor
outsl
mov
add
push
arpl
mov
orl
pop
repnz
decb
sahf
sub
ss
or
aaa
cmp
cmp
or
mov
and
mov
repnz
add
jbe
divb
push
jnp
testl
lret
das
lds
push
adc
xchg
xor
sbbb
iret
insl
sbb
jno
sub
push
in
and
pop
and
sbb
cmp
cmp
bound
or
insb
andl
add
int
dec
mov
mov
push
add
jg
push
push
inc
decb
mul
in
adc
out
mov
mov
and
sbb
andl
mov
popa
mov
int
test
adc
jb
sbb
cltd
jnp
dec
call
jbe
pop
fwait
jnp
nop
fidivrs
xchg
push
add
aam
jp
jno
sub
lods
mov
stc
mov
das
sahf
or
or
mov
int
int3
adc
bound
pop
mov
xchg
inc
scas
fstpl
into
dec
pop
or
inc
lea
movl
mov
icebp
in
and
push
add
sahf
shl
mov
test
leave
mov
mov
aad
loop
cmc
pop
or
xchg
in
mov
arpl
hlt
jl
jo
jno
loope
adc
sub
jl
mov
jo
fbld
mov
push
jp
loop
loope
outsl
ljmp
jae
xchg
ret
add
je
xchg
incb
mov
pushf
push
dec
jmp
mov
push
or
inc
cli
cmc
xchg
in
jo
sbb
fiaddl
adc
inc
sar
or
mov
test
add
in
xchg
imul
jbe
pusha
outsl
add
pop
sub
ror
jp
push
cmp
xchg
addr16
jmp
int
dec
dec
ret
inc
xor
mov
arpl
loope
pop
setb
sbb
mov
sbb
mov
leave
stc
fstps
iret
popf
loopne
xor
insl
sbb
cmp
cltd
in
repz
push
and
out
bound
scas
test
pop
jbe
pop
je
jb
call
jns
jecxz
mov
mov
aaa
and
push
sub
pop
push
xchg
xor
fsubrl
dec
es
lods
jbe
lret
daa
adc
adc
jmp
mov
fdiv
xor
mov
popa
lahf
cld
cmp
arpl
aaa
stos
cs
mov
scas
ss
xlat
ss
int
push
mov
orps
sub
add
inc
jbe
cwtl
cmp
call
mov
imul
lods
pop
sub
mulb
xchg
movsl
aaa
push
cli
js
loopne
jg
push
xchg
fists
push
daa
sub
sbb
jge
mov
lea
data16
inc
sbb
jg
mov
sbb
pop
push
or
into
adc
cmpsb
test
das
int
loopne
loopne
loope
cmp
shr
or
xchg
insb
push
icebp
je
int3
push
mov
pop
fists
and
clc
adc
dec
cmp
jg
push
gs
push
imull
dec
out
fs
das
arpl
popf
sub
in
subb
call
iret
pushf
fidivl
lahf
fildll
cld
mov
add
sub
push
ljmp
pop
outsb
xor
mov
push
jl
dec
adc
jne
pop
xchg
cmp
insl
pop
dec
mov
xchg
mov
jmp
adc
dec
xchg
dec
cli
xchg
sub
adc
lret
cmpsl
movsb
sbbb
icebp
addr16
adc
cmc
or
mov
push
lret
sbb
in
aad
movsl
pop
fidivrl
add
add
fdivs
lret
adcl
jg
xchg
sbb
int
pushw
out
sti
pop
outsb
dec
movsb
pop
sub
sub
push
mov
or
xchg
push
je
test
sbb
aaa
jbe
nop
add
inc
mov
adc
mov
mov
mov
std
mov
lods
or
adc
adc
xchg
jb
mov
xor
dec
xor
dec
out
into
jne
pop
xor
pop
or
lcall
sbb
or
mov
lcall
int
call
cmp
jle
insb
add
pop
popa
call
shlb
mov
xor
ss
in
jno
lds
cmp
dec
xor
cltd
daa
inc
aas
pop
lods
ja
dec
pop
repnz
iret
push
dec
out
into
stos
cmp
xchg
inc
fs
push
cwtl
insl
int
stos
mov
adc
and
jecxz
mov
cwtl
icebp
clc
push
mov
jg
jno
inc
cmp
sar
cmpsb
in
adcb
stos
push
loop
or
lret
mov
lret
fstpl
hlt
test
jns
mov
xchg
jl
dec
inc
mov
and
mov
int
xchg
pushf
push
cmpsl
add
mov
andl
and
test
adc
pop
out
add
sbb
xor
mov
cmpsb
imul
fcoms
and
imul
xchg
add
test
clc
test
mov
enter
or
mov
out
out
jge
loopne
int
xchg
test
xchg
dec
fs
divb
sbb
or
pop
aam
js
icebp
mov
or
fisttpll
mov
cli
mov
ror
pop
in
ret
push
or
data16
add
callw
ret
pop
push
lcall
fmul
or
mov
mov
pop
rorb
push
sub
jp
xchg
jg
sbb
mov
int
and
sbb
mov
sahf
and
xorb
sahf
orb
xor
pop
cmc
dec
iret
or
lahf
xor
imul
mov
push
ljmp
push
pop
inc
pop
out
js
lahf
loope
xlat
shll
hlt
jnp
rclb
and
cmp
ret
hlt
push
incl
jmp
push
stos
inc
pop
mov
adc
sub
push
cli
push
aaa
adc
push
je
mov
ficoml
frstor
call
cmc
aad
pusha
hlt
rcrb
in
orb
and
jbe
cmp
mov
mov
sbb
inc
in
inc
lock
les
and
xlat
ret
js
or
or
jle
mov
lock
rdrand
xlat
push
and
int
and
addr16
lods
lahf
pop
cs
xchg
or
mov
cmp
sbbb
jecxz
adc
fnstsw
sbb
mov
xor
sbb
xchg
repnz
lods
outsb
pop
jg
es
and
fsubrs
sbb
pop
mov
pop
cmpsl
xchg
arpl
iret
bnd
dec
stos
ds
mov
xor
mov
mov
mov
jo
fwait
mov
xor
loop
xchg
pop
cmc
and
fdivs
inc
jp
scas
xchg
repnz
jp
mov
in
cmp
sti
adc
mov
cmpb
xorb
int3
jnp
cmp
rolb
jp
push
lahf
lods
dec
cmpsb
pop
jp
push
and
lcall
addr16
repz
stc
mov
mov
inc
push
pop
das
fists
mov
shrl
dec
jbe
adc
cmp
or
pop
addr16
and
jge
sbb
xor
add
stc
ret
ficoml
pop
test
mov
test
sub
add
mov
dec
mov
inc
sbb
cli
jbe
stc
dec
inc
rorb
cmp
jmp
jmp
jmp
xchg
std
in
outsl
mov
popa
inc
roll
and
scas
imulb
fcoms
rol
shlb
jns
mov
pop
lds
aad
movsl
jge
or
jg
push
fistpl
push
popa
pop
mov
mov
push
cld
repnz
loop
ret
fsubl
sub
ja
xorb
jge
outsb
out
xchg
inc
pop
and
push
push
and
fidivl
enter
jp
lods
xor
mov
or
jge
push
cltd
jnp
in
out
fistl
ret
aaa
shll
adc
push
push
adc
imul
mov
pop
push
push
mulb
lock
push
or
lock
fwait
inc
idivb
push
add
dec
push
inc
scas
cmp
mov
es
sbb
cmp
outsb
lods
int3
test
fildll
adc
insb
sbb
cmp
icebp
ret
jo
pop
pop
mov
inc
arpl
lret
mov
fisubrl
dec
cmpsb
loopne
in
inc
inc
lock
aad
aad
das
inc
pushf
push
mov
mov
push
ss
ljmp
push
jmp
mov
jae
push
add
push
lahf
shlb
xor
fdiv
sbb
lock
out
outsl
pop
lds
icebp
cwtl
shll
dec
leave
or
lret
mov
outsl
adc
sbbl
inc
xor
nop
icebp
in
mov
sahf
mov
sbb
mov
xchg
enter
ret
pop
bound
dec
pop
in
jnp
lods
inc
subl
cmp
lock
push
xchg
rorb
fwait
mov
in
mov
daa
sahf
movb
mov
shlb
mov
aad
daa
jle
mov
imul
add
jo
xchg
jmp
movsb
pusha
jg
or
mov
and
sbb
cmpsb
pusha
lods
call
stos
stc
cltd
testl
sub
pop
pop
add
xor
adc
mov
push
cmpsb
mov
jbe
jnp
lea
xor
hlt
stos
jg
scas
fisubs
push
lds
push
bound
int
inc
lret
fiadds
sbb
cmp
fadd
dec
fdivl
icebp
add
or
lahf
stos
cmpl
pusha
inc
inc
and
jecxz
xchg
mov
aas
imul
xchg
pop
jns
out
jecxz
mov
aad
sbbl
inc
sub
or
xchg
sbb
repnz
jp
fsubl
push
adcl
sbb
lods
ret
int
jne
add
cmp
lds
aam
lods
and
mov
outsb
jbe
test
cltd
stos
and
outsb
push
or
addr16
inc
mov
dec
shlb
cwtl
xchg
pop
pop
aas
cmovl
jmp
sub
ret
pop
dec
push
xor
ret
scas
xor
dec
mov
imul
xor
pop
ret
pushf
cmp
mov
je
arpl
mov
filds
sbb
jmp
sub
mov
rorl
lods
jmp
and
call
sbb
mov
loope
or
js
nop
jmp
aad
push
pop
ret
shrl
jge
hlt
inc
bound
fisttpl
jo
fisttpl
and
add
xor
adc
js
push
inc
addr16
jb
fwait
das
push
fldl
cld
xchg
fsubrl
cmp
gs
scas
in
dec
mov
lahf
mov
lcall
mov
fcoms
in
push
xchg
sbb
sbb
movsl
lea
sbb
and
mov
cld
push
rcrl
lods
cmp
sub
bound
mov
adc
rolb
mov
lahf
jne
movsl
js
add
test
repnz
mov
ror
dec
xchg
jnp
and
cwtl
add
xchg
dec
mov
add
ja
fwait
xor
shlb
icebp
pop
ds
xor
jno
mov
inc
enter
ss
hlt
fildll
inc
mov
push
jg
std
jmp
ss
fiadds
les
jmp
mov
pushf
xchg
xor
fmuls
or
std
mov
out
aam
shlb
mov
movsb
sbb
inc
js
out
sbb
xor
mov
enter
xor
jl
mov
or
xor
sbb
xlat
jecxz
xor
gs
sarl
out
mov
pop
movsb
in
jns
add
and
xor
push
xor
jno
push
dec
lcall
cltd
jmp
mov
jp
inc
jmp
in
sbb
jmp
and
cmp
adc
out
fs
arpl
mov
fadd
cs
and
inc
dec
jge
jle
aaa
xchg
cld
sahf
pop
and
in
int3
mov
inc
in
stc
xchg
gs
scas
pop
or
idivb
scas
lret
pop
xlat
sti
insl
into
outsb
xchg
mov
sbb
xor
mov
push
fwait
xchg
in
jg
mov
sarl
movsb
or
adc
pop
push
fwait
add
mov
clc
popf
and
orb
add
sub
lahf
cmc
adc
push
scas
push
push
int3
push
push
arpl
lret
js
and
add
sbb
faddl
filds
xchg
sbb
add
jbe
xchg
xchg
sarl
jb
fwait
xor
push
jb
aaa
mov
jg
out
mov
int3
adc
adc
cmp
std
inc
outsb
push
ret
jp
inc
inc
fdivs
les
pop
imulb
insl
mov
and
repz
cmp
orb
adc
mov
pop
inc
mov
jmp
int3
stos
inc
adc
pushf
pop
pushf
jbe
cmpsl
fwait
js
fnstcw
pop
sbb
pop
sub
xchg
mov
pop
mov
mul
roll
sbb
les
aaa
ret
pop
push
add
add
fs
adc
cwtl
orb
fiaddl
mov
test
lea
jle
das
in
sti
repnz
push
cmp
sbb
mov
ret
repz
or
jae
into
mov
pop
inc
xchg
test
insl
and
and
sarl
sbb
adc
jmp
jno
mov
dec
pop
cmp
roll
or
xchg
xor
int3
inc
and
lods
inc
je
mov
sbb
imul
push
jp
cmc
es
jmp
test
arpl
push
ret
repz
fistl
fnstenv
push
jmp
sti
mov
cmp
jl
nopl
std
test
in
push
sub
xor
cli
mov
push
cs
inc
out
inc
fistpl
xlat
push
cwtl
pop
mov
sub
loopne
fistl
or
sbb
mov
in
das
mov
push
adcl
insb
dec
mov
sub
aas
add
scas
pop
dec
pcmpgtw
dec
aad
loopne
lock
movsb
test
notb
mov
cli
aas
add
insl
and
stc
fs
nop
nop
sarb
jo
or
xchg
stc
cmp
sub
cld
push
add
sub
sbbl
bnd
cmpsb
mov
in
mov
jne
arpl
ds
or
out
cwtl
or
inc
out
es
and
arpl
mov
jne
pop
sarb
in
stos
dec
loop
in
jmp
dec
lods
fstp
ds
stos
lahf
fisttpl
dec
pop
jae
out
in
mov
xchg
ret
rolb
pop
mov
and
test
pop
mov
out
cmp
test
arpl
add
jmp
or
cmpsb
lock
push
sbb
pop
gs
cs
das
dec
sub
add
adc
and
jmp
jmp
ja
lcall
mov
lret
dec
mov
test
les
stc
dec
fistpl
mov
cs
pop
ss
das
fsts
mov
or
xchg
pusha
push
sbb
js
jo
push
cmp
pop
in
int3
ja
sbb
int3
in
sub
js
jnp
stos
pushf
mov
popf
lret
mov
jno
sub
scas
sbb
stc
mov
adcb
mov
movsl
dec
xchg
mov
pop
pop
and
sub
xor
sbb
mov
and
test
mov
pushf
push
jg
insl
xor
jp
fs
pop
test
push
add
jns
rcrl
nop
sub
stos
lcall
mov
or
jmp
xchg
mov
dec
std
cld
test
in
jmp
les
mov
xchg
pop
inc
divl
iret
mov
and
ret
inc
pop
cmp
popa
inc
pop
fcomps
mov
cld
mov
adc
cmp
inc
mov
aaa
shlb
jmp
icebp
jnp
loope
popa
push
hlt
cmp
mov
ret
dec
testb
cmp
in
xchg
adc
and
pushf
stc
adc
les
pop
lret
fimuls
js
sub
mov
pop
dec
call
fistl
and
mov
or
lea
and
jmp
and
aaa
push
push
mov
call
and
jne
push
xor
mov
xchg
imul
shll
ret
lahf
xchg
int3
lahf
pop
xor
sub
jb
ret
mov
and
out
sbb
pop
xchg
xchg
inc
enter
je
mov
cmpsb
xor
addr16
or
aas
add
lea
rcr
inc
adc
loop
mov
and
and
pop
mov
xor
dec
jnp
mov
out
sub
cli
in
xchg
iret
jns
push
xchg
pop
dec
fnsave
movsb
mov
popa
dec
sbb
loope
out
daa
sbb
fstl
jbe
daa
and
sbb
or
mov
rcll
lahf
add
mov
xchg
push
fs
pop
sub
adc
mov
es
add
movsb
pop
xchg
int
fbstp
add
in
data16
adc
je
pop
pop
mov
push
sbb
movsl
lds
sub
ja
rolb
sahf
hlt
pushf
insl
push
xchg
adc
mov
xchg
mov
adc
shrl
sub
adc
mov
cmp
dec
dec
push
stos
lahf
lea
add
push
mov
jnp
cmp
push
add
imul
or
sbb
nop
pusha
and
int
dec
rorb
mov
pop
in
sbb
mov
neg
popa
bound
adc
leave
inc
mov
negl
scas
inc
sbb
test
adc
cld
cmpb
int
sbb
adc
sbb
fsubrs
into
dec
add
xor
subb
arpl
cmc
xchg
imulb
pop
iret
rcrb
stos
mov
mov
imul
test
mov
rorl
xor
divl
in
pop
mov
mov
rorb
adc
jg
int
mov
aaa
sarw
stos
cmp
aad
or
jne
fwait
aaa
or
xor
loopne
xchg
push
or
inc
xchg
sbb
add
sarb
cmp
and
push
testb
mov
cli
rorb
pop
inc
mov
push
mov
mov
mov
dec
mov
push
pop
call
lcall
in
ret
sub
gs
fwait
cmp
mov
hlt
xchg
fstpt
inc
ret
pop
sahf
cs
pop
xchg
jl
std
mov
pop
sub
push
push
loop
ret
jle
jnp
mov
outsl
or
enter
sti
adc
inc
fwait
daa
sub
inc
fwait
inc
mov
and
sti
dec
xchg
jle
inc
sub
mov
fidivl
add
popf
xchg
ja
cmp
call
mov
arpl
add
das
in
push
aad
mov
out
int
xchg
imul
pushf
sub
int
cmpsb
and
pop
std
cli
insl
mov
jmp
ja
hlt
pop
clc
inc
int3
jmp
lds
cli
dec
cmp
lret
xchg
push
out
push
mov
je
sarb
jnp
mov
out
pop
cmpsb
lds
jl,pn
inc
dec
outsl
jp
push
jp
mov
pop
rolb
sahf
hlt
outsb
jp
xchg
pop
stc
sub
jl
movb
subl
pop
cmp
sub
sub
push
jmp
es
add
mov
fimuls
iret
pop
popf
cld
sarb
mov
jne
mov
ret
mov
or
mov
inc
sti
and
pop
or
popa
xlat
xor
mov
mov
clc
shll
ljmp
push
cwtl
and
ja
pop
sub
imul
pop
loop
inc
inc
mov
scas
flds
dec
jae
mov
insl
jo
std
push
aam
clc
mov
xor
aaa
loope
outsb
mov
or
pusha
lods
sbb
dec
aaa
mov
mov
stc
pop
imul
ja
pushf
or
outsb
aaa
lods
imul
and
lret
stos
scas
lea
test
es
push
lds
orl
getsec
cmp
hlt
xor
pop
sbb
jp
imul
test
and
and
and
mov
imul
imul
test
cli
add
xor
aas
test
nop
jne
data16
in
pushf
mov
inc
mov
call
push
mov
sub
dec
stc
ljmp
lds
aam
outsb
lret
mov
cmpsb
in
fnstenv
sbb
and
mov
and
inc
aam
aad
mov
in
pusha
xchg
cmc
xchg
cmp
mov
mov
mov
cwtl
incl
push
test
adc
adc
not
push
sbb
jnp
push
mov
mov
sbb
test
pop
push
jmp
jecxz
repz
fstps
int
pop
inc
imul
pop
popa
fstps
push
inc
jb
mov
push
pop
imul
popa
fstps
bound
fstps
xchg
inc
inc
mov
cmp
and
inc
pop
div
inc
iret
adc
int
cmpsb
sbb
clc
mov
lret
gs
add
stc
cmp
fstps
pop
cwtl
lods
dec
movsl
pop
orl
sbbb
inc
sub
stos
sbb
std
mov
pop
outsl
jmp
dec
es
inc
int
fsub
push
cs
shlb
data16
mov
imul
jmp
test
sbb
scas
imul
inc
movsb
ja
push
movsb
subl
sbb
outsl
sbbb
das
movsb
cmpl
movsb
sahf
imulb
add
ss
aas
mov
movsb
pop
mov
mov
dec
add
ss
aas
mov
sbb
lods
inc
and
sub
cmpsb
dec
xlat
movsb
sbb
sbbb
xchg
mov
adcb
push
test
ds
sbb
jb
hlt
pop
mov
cmp
mov
xchg
subl
nop
out
fisubs
dec
test
xor
andb
dec
lret
insl
aas
int
imul
sub
add
mov
mov
outsl
movsb
pop
inc
sub
dec
sbb
sbbb
push
inc
dec
aam
js
push
inc
add
push
lahf
filds
xor
cmpb
out
fsubs
dec
test
xor
sbbb
stos
sub
mov
jge
mov
add
mov
mov
mov
xor
cmpb
out
fbld
dec
test
xor
andb
inc
insl
mov
push
push
arpl
movsl
xor
aaa
or
fisttps
sub
jnp
imul
jne
cmp
jne
jnp
fwait
inc
sub
sbb
sub
jne
mov
xchg
subb
sub
movsb
scas
dec
test
sub
fxch
adcl
mov
aaa
out
aad
jmp
sbb
and
push
mov
icebp
lahf
xor
ljmp
mov
test
xor
mov
nop
push
das
add
das
pushf
sbb
sub
jno
gs
pop
dec
add
aad
repnz
scas
sbb
mov
aaa
shlb
scas
inc
and
sbbb
test
mov
outsl
movsb
pop
dec
sub
lea
sarb
jge
movsl
xor
sbbb
pop
loopne
mov
subb
inc
sub
dec
ljmp
sub
jo
das
add
das
popf
sbb
sub
insl
cmc
addb
mov
fs
in
sub
lods
push
xchg
inc
lcall
das
sbbb
dec
nop
mov
aas
lods
les
ss
sbbb
jno
fidivrs
dec
out
fstps
lea
adc
cmc
mov
nop
push
das
add
das
popf
sbb
sub
jno
ljmp
loope
pop
test
sub
mov
dec
int
cmpsl
aaa
sub
or
adc
push
js
sbb
mov
lods
inc
int
push
and
sub
sbb
sbbb
mov
mov
outsl
movsb
pop
dec
sub
jecxz
jecxz
loope
leave
push
test
lds
jns
ljmp
push
adc
or
mov
mov
add
mov
ds
subb
sbb
dec
mov
aas
ss
sbbb
insb
rcr
mov
xor
in
cmpsb
xor
mov
negl
pop
mov
cmp
aaa
add
xor
sbb
sbbb
test
mov
outsl
movsb
pop
inc
sub
or
out
loopne
mov
inc
mov
sbb
sub
pushf
stc
mov
test
lahf
sub
sbb
sub
sub
roll
xor
aas
jno
jg
push
push
nop
mov
sbb
lcall
outsl
fsubp
mov
test
sbb
xchg
xorb
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
fimuls
mov
iret
inc
inc
mov
sub
aaa
loope
sub
add
addl
outsl
movsb
pop
mov
movsb
pop
dec
sub
add
push
add
out
cmpsl
mov
repnz
sbb
sub
mov
addb
aas
xor
sbbb
ljmp
aaa
sub
mov
scas
das
sbb
sub
sbb
sub
mov
add
das
lcall
jg
movsb
cs
xor
mov
aaa
jg
aaa
dec
sbb
ret
add
sub
mov
daa
insb
mov
mov
test
sub
fsubrs
arpl
jne
test
imul
orb
data16
sub
imul
pop
sbb
pop
push
cld
or
sbb
sub
insl
inc
pop
fidivl
mov
test
xor
mov
js
das
add
das
fwait
sbb
sub
outsb
cmc
xchg
inc
mov
mov
adc
pushf
and
addr16
push
and
sub
sbb
sub
cwtl
push
das
add
das
cwtl
sbb
sub
jb
sbb
pop
fs
out
sbb
loop
or
rcll
sub
pushf
ljmp
sub
nop
push
das
add
das
pushf
sbb
sub
jno
xchg
mov
adc
mov
aaa
sbbb
dec
in
test
dec
dec
test
xchg
push
mov
xchg
subb
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
lahf
push
repnz
or
inc
loope
xchg
subb
sub
movsb
sahf
dec
test
sub
mov
mov
out
sbb
sub
sbb
mov
jo
das
add
das
fwait
sbb
sub
insl
cmc
roll
sti
sbb
mov
sbb
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
repz
cld
rep
dec
jp
nop
lcall
in
push
add
mov
mov
outsl
movsb
pop
dec
sub
hlt
je
loopne
nop
test
sbbb
push
jb
icebp
shll
sbb
sbbb
lea
mov
and
pop
add
sbb
mov
jo
das
add
das
lcall
sub
mov
xor
xorb
xlat
lock
out
out
mov
rolb
sub
push
mov
jne
mov
push
test
movsb
dec
dec
push
inc
push
pushf
push
sbb
cltd
mov
inc
sub
rcrl
sbb
pushf
sub
add
mov
mov
outsl
movsb
pop
inc
sub
pop
lahf
xchg
aas
mov
adc
test
scas
cmp
sub
aaa
xor
call
data16
sbbb
mov
mov
outsl
movsb
pop
dec
sub
in
or
sbb
sub
std
or
jmp
das
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
jg
mov
dec
mov
xchg
sbb
sub
dec
inc
int
cwtl
inc
pop
bound
in
imul
and
stc
ficoms
cmp
pusha
xor
addb
sub
movsb
jle
test
sub
inc
test
mov
cmp
hlt
cs
sbb
sub
sbb
sub
js
das
add
das
cwtl
sbb
sub
outsb
cmc
adc
mov
mov
fisubs
pusha
mov
sbb
ljmp
sub
cwtl
push
das
add
das
cltd
sbb
sub
jb
push
jmp
movsb
iret
pusha
scas
mov
xchg
ja
pop
mov
dec
int
stos
repz
scas
mov
xor
loopne
mov
mov
jae
loopne
sub
aaa
out
xchg
adc
xor
or
xor
sub
xor
jb
das
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
fmulp
int
shrl
inc
sbb
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
ret
popa
sbb
cmp
mov
sub
pushf
mov
sbb
sub
sbb
sub
push
push
das
xchg
sbb
sub
insb
cmc
je
aas
mov
aaa
ds
xor
nop
popf
cmp
sbbb
loopne
ds
jbe
cmp
xor
addb
sub
movsb
xchg
pushf
jbe
test
test
in
or
or
push
and
mov
xor
cmpb
out
fisubs
dec
test
sub
xchg
into
fsubrs
lcall
test
sub
das
sbbb
dec
fcmovnu
lea
aas
ss
sbbb
outsb
rcr
and
test
into
mov
cmp
inc
cmc
mov
in
gs
mov
ds
mov
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
jae
in
sub
mov
aaa
or
pushf
sub
add
test
mov
outsl
movsb
pop
inc
sub
out
dec
dec
cmp
cmpsb
cmc
mov
xorb
shrl
cmpsl
ljmp
sub
nop
push
das
add
das
cwtl
sbb
sub
jno
adc
out
adc
cmpsl
repnz
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
fimuls
sub
mov
sti
xchg
xor
add
add
sub
and
inc
fistps
mov
movsl
mov
xchg
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
ficoms
cmpsb
mov
pop
cmp
adc
loope
inc
int
shrb
push
cltd
aas
mov
out
cwtl
cmpsb
mov
mov
push
cmp
dec
test
sub
out
in
lahf
out
xor
lahf
fisubrs
sbbb
call
subb
lret
xor
sbbb
dec
fcomp
mov
aas
ss
sbbb
imul
mov
jecxz
pushf
sub
xor
sub
and
cmpsb
and
clc
mov
repnz
lock
test
dec
shlb
popa
mov
aaa
sub
add
mov
mov
outsl
movsb
pop
inc
sub
fnsave
or
test
xor
mov
nop
push
das
add
das
popf
sbb
sub
jno
adc
in
xor
jmp
cmpsb
out
xchg
mov
shll
xchg
xor
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
faddp
cmc
repnz
daa
movsb
or
inc
dec
sbb
mov
pop
push
int
subb
movsl
xchg
xor
aaa
movswl
ljmp
sub
pusha
push
das
add
das
xchg
sbb
sub
imul
sarl
and
jp
sub
cwtl
in
ljmp
sub
nop
push
das
add
das
xchg
sbb
sub
jno
nop
mov
lret
aas
ljmp
sub
pusha
push
das
add
das
xchg
sbb
sub
imul
mov
xor
pop
dec
int
or
push
push
add
jb
mov
mov
inc
pop
ss
jmp
add
push
dec
mov
xchg
movsb
ljmp
xchg
add
daa
mov
mov
pushf
sub
add
mov
mov
outsl
movsb
pop
dec
sub
addr16
push
lahf
inc
sub
sbb
sub
mov
mov
mov
ret
sbb
sub
push
mov
pop
xchg
cmp
sub
dec
or
enter
cwtl
mov
sbb
insb
cltd
mov
cmp
sbb
sub
mov
xchg
xorb
sbbb
dec
xchg
mov
aas
lods
les
ss
sbbb
jb
fsubrp
sarb
adc
lock
mov
jle
xor
sbbb
cmp
and
sub
mov
repnz
sub
add
xchg
mov
outsl
movsb
pop
dec
sub
inc
sbb
or
cmp
sub
sbb
lock
xchg
filds
mov
push
push
sub
mov
mov
sub
sbbb
mov
mov
outsl
movsb
pop
inc
sub
out
jecxz
sbb
sub
pushf
sub
add
test
mov
outsl
movsb
pop
dec
sub
nop
fldl
sbb
mov
aaa
ljmp
sub
jo
das
add
das
cltd
sbb
sub
insl
cmc
add
jecxz
cmpsl
repnz
and
xor
cmpb
out
fbld
dec
test
xor
andb
and
jae
mov
fcomps
insb
test
or
mov
xor
cmpb
out
fisubs
dec
test
xor
andb
shll
xchg
addb
sub
movsb
cmpsb
dec
test
sub
daa
sub
push
mov
mov
aaa
push
cmp
ss
pop
add
mov
jnp
jb
mov
sub
mov
xor
xchg
movsb
xchg
sub
fidivl
das
movsb
cmpsb
out
lods
mov
sub
pop
dec
mov
xor
cmpb
out
fbld
dec
test
xor
andb
test
cmp
sub
mov
sub
sbb
sub
fnstenv
sbb
stc
insb
test
xor
addb
sub
movsb
xchg
pushf
jbe
test
sub
mov
pop
lahf
jle
xor
scas
scas
xchg
xor
push
mov
adc
dec
adc
sub
addr16
out
add
xor
add
xor
addb
sub
movsb
mov
pushf
jbe
test
xor
sbbb
pop
lds
mov
mov
xor
cmpb
out
frstor
dec
test
xor
andb
sbb
push
test
xor
out
and
rcrl
adc
sbbb
dec
fstp
mov
aas
lods
les
ss
sbbb
jo
ficomps
js
test
pushf
sub
add
addl
outsl
movsb
pop
addl
inc
push
ret
xchg
fisttpl
dec
jae
adc
add
mov
pusha
movsl
and
fwait
or
mov
mov
popa
movl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sub
add
add
cld
add
and
pop
mov
addl
or
movl
addl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
jg
xchg
lea
fwait
or
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
in
xchg
je
test
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
cwtl
push
in
lock
sub
push
push
push
push
jmp
inc
xchg
test
or
xor
orb
add
pop
add
add
repnz
das
repz
and
shl
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
rorb
mov
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
sub
add
add
mov
push
lods
push
push
and
xchg
sti
mov
add
add
add
push
call
and
pop
mov
addl
inc
push
ret
rorl
or
je
or
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
and
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
out
inc
ja
or
add
inc
mov
adc
or
loope
add
add
add
and
pop
mov
addl
inc
push
ret
rdtsc
pop
inc
mov
adc
mov
push
fwait
or
lret
lock
jmp
out
aad
addb
add
mov
jmp
mov
dec
cmpsl
and
mov
add
mov
mov
sbb
add
sub
jne
jmp
aas
xchg
icebp
das
sbb
ds
nop
movsl
adc
lock
imulb
push
call
and
pop
mov
addl
inc
push
ret
in
mov
lea
mov
push
pusha
push
push
pop
pop
jmp
in
cmpb
outsb
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
lea
popf
test
add
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
or
fwait
mov
mov
add
add
or
add
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
icebp
jne
sti
inc
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
adc
or
jmp
sar
lods
jno
mov
call
insb
lods
cwtl
loop
jno
es
or
adc
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
test
cmp
mov
jmp
mov
push
lret
lret
insl
aad
add
or
xchg
or
add
add
add
and
pop
mov
addl
inc
push
ret
fldl
jns
mov
lea
or
push
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
sbb
gs
sub
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
jl
mov
mov
jmp
call
pop
sub
mov
cmpl
jbe
mov
push
mov
pop
mov
sub
and
mov
mov
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
push
add
add
inc
ds
ret
sub
lcall
add
test
add
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
repz
ret
inc
push
add
cmp
jmp
mov
adc
cmp
test
cmp
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
insb
sub
outsl
mov
push
fwait
or
mov
sub
cmp
push
push
call
and
pop
mov
addl
inc
push
ret
je
mov
popf
xor
add
add
add
and
pop
mov
addl
inc
push
ret
sbb
mov
andl
push
push
call
and
pop
mov
addl
inc
push
ret
test
add
sti
mov
mov
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
test
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
scas
sbb
in
sbb
push
jmp
scas
cwtl
je
dec
ja
add
jmp
dec
jns
in
popf
imul
add
add
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cld
or
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jmp
ja
jle
scas
push
xchg
orl
jno
adc
add
repz
std
ljmp
ret
in
lea
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
dec
ja
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fldcw
loope
test
jne
or
add
jg
popf
dec
out
and
rcr
push
mov
push
add
add
jge
mov
ret
movswl
mov
shr
and
mul
movzwl
sub
push
push
call
and
pop
mov
addl
inc
push
ret
fsubrp
adc
add
das
daa
or
lahf
imul
push
add
pop
push
push
push
pusha
jmp
out
mov
inc
test
add
xlat
mov
insb
nop
xchg
rdtsc
pop
pop
popa
rdtsc
push
jmp
inc
cmc
jl
pop
sub
cmpsl
jp
and
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
and
cmc
es
or
xchg
jge
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
and
push
mov
xor
add
add
sub
clc
stc
jb
or
jmp
jo
popf
mov
jno
add
add
add
and
pop
mov
addl
inc
push
ret
push
sbb
ljmp
fwait
or
popa
jae
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
mov
and
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
xor
shr
mov
mul
adc
sub
jmp
inc
sub
lods
repz
cltd
adc
push
fwait
or
fmuls
mov
add
add
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
aaa
mov
add
cmc
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
daa
out
mov
or
data16
or
pop
or
outsb
daa
mov
ja
jbe
sub
jns
jp
xor
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
mov
or
xchg
add
mov
pop
add
sub
cmp
jbe
sub
movzwl
jmp
xor
pusha
add
adc
popa
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
jmp
fwait
scas
add
push
jno
insb
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
add
or
shrb
call
and
pop
mov
addl
inc
push
ret
test
daa
mov
nop
call
sub
pop
add
jne
or
incl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
and
xchg
dec
mov
add
jle
das
jbe
movsl
push
leave
pop
call
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
and
mov
jae
insl
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
aas
in
mov
lods
in
mov
mov
jge
fwait
or
push
jmp
idivb
push
in
stos
cmp
jge
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
add
js
mov
xor
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
call
inc
dec
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
or
add
or
or
mov
jbe
cmc
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
inc
dec
jmp
jge
push
pop
bndldx
fists
aam
mov
add
mov
jmp
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
aas
scas
jmp
into
add
xlat
mov
insb
nop
xchg
popf
and
fwait
or
test
and
call
and
pop
mov
addl
inc
push
ret
mov
fwait
or
pusha
jmp
lods
fildll
js
scas
sbb
and
or
add
jno
out
xor
fs
popa
push
push
jmp
cmp
loop
dec
call
adc
push
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
lret
and
int
rolb
fwait
or
lea
nop
jmp
out
inc
in
sbb
cmp
mov
fdivrl
jne
in
push
push
push
push
pusha
popa
rdtsc
jbe
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
daa
push
dec
jp
mov
add
add
or
out
mov
xchg
or
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sbbl
add
pop
aaa
mov
pop
aad
push
das
fiadds
xchg
push
jmp
scas
pop
test
sub
pop
pop
call
or
incl
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
jl
cmpl
jbe
jmp
loopne
mov
sub
das
fstpl
popf
push
adc
or
mov
mov
and
or
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
inc
stc
fwait
mov
or
adc
fwait
or
mov
add
test
add
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xor
cltd
loop
clc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
mov
inc
pushf
mov
or
add
cmp
loopne
mov
push
jmp
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
lods
mov
dec
dec
mov
add
push
jmp
dec
push
jb
in
jns
test
fwait
cmp
xor
popf
inc
sbb
or
popf
push
adc
or
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
mov
andl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
cmpsl
xchg
pop
icebp
call
jmp
inc
out
cli
pop
mov
out
inc
dec
test
push
jne
jmp
imul
inc
xchg
addl
add
push
movd
jb
xorb
add
add
adc
add
push
pop
mov
jge
dec
ret
mov
outsl
push
scas
mov
mov
out
push
push
call
and
pop
mov
addl
inc
push
ret
lret
add
add
cltd
cmp
out
jle
push
mov
cmc
in
push
push
call
and
pop
mov
addl
inc
push
ret
mov
ret
fstps
or
fldl
fsubrs
push
call
and
pop
mov
addl
inc
push
ret
stc
mov
ljmp
sbb
inc
rcr
insb
mov
pop
sbb
mulb
ds
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
and
inc
adc
repz
mov
jmp
repz
aam
fldenv
loop
add
add
add
and
pop
mov
addl
inc
push
ret
mov
cmp
xchg
add
jbe
or
sub
jmp
sbb
fiadds
pushf
insl
push
push
repnz
or
into
cltd
push
lea
xchg
add
add
addb
add
push
pop
popa
xchg
push
jmp
lea
mov
fiadds
xchg
pop
push
pusha
push
push
push
rdtsc
pop
pop
pop
jne
pusha
popa
popa
xchg
add
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
adc
or
add
out
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
and
insb
sbb
add
out
sbb
jg
in
mov
cmp
jae
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
test
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aad
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
dec
imul
ret
mov
jle
jle
ja
shr
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
jmp
mov
ds
cmp
and
popa
sbb
cmpb
loop
add
add
add
and
pop
mov
addl
inc
push
ret
jmp
sub
mov
sub
or
cld
sub
js
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sarb
ja
add
push
push
call
and
pop
mov
addl
inc
push
ret
int3
mov
sbb
xchg
add
add
xchg
fstl
fwait
or
mov
xor
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
int3
mov
and
add
add
pop
push
push
call
and
pop
mov
addl
inc
push
ret
js
aad
jmp
rcrb
aam
and
ret
sub
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
fldt
das
mov
call
mov
imul
inc
xchg
popa
movzwl
pop
mov
mov
movl
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jae
cmpl
jne
movzwl
incl
push
push
call
and
pop
mov
addl
inc
push
ret
call
lds
fwait
or
mov
and
push
call
and
pop
mov
addl
inc
push
ret
mov
sti
jmp
shrl
icebp
js
ss
mov
or
add
ret
lahf
shl
jl
and
gs
fwait
or
call
clc
push
dec
aaa
jo
sub
xor
cmp
jmp
mov
xlat
push
jg
push
mov
xchg
jge
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
push
out
push
push
pop
jo
or
nop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
mov
adc
add
add
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
jl
les
cmc
mov
jl
mov
mov
adc
mov
sub
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
sub
xor
jmp
dec
fwait
rorb
pop
out
jle
aaa
mov
fs
ret
sti
push
push
call
and
pop
mov
addl
inc
push
ret
ret
dec
sub
push
call
and
pop
mov
addl
inc
push
ret
push
das
sub
into
jae
dec
mov
mov
jmp
pusha
mov
mov
pusha
push
pop
clc
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lock
jmp
add
add
call
test
lret
mov
cmp
call
inc
repz
adc
fwait
or
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
ret
adc
mov
push
jmp
jo
or
dec
insl
mov
jg
push
stos
sti
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
std
dec
bound
mov
add
push
call
and
pop
mov
addl
inc
push
ret
push
or
lret
xchg
and
or
test
push
lods
or
adc
add
cmp
out
fstp
sbb
pop
mov
movsl
insb
adc
add
stc
add
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
cmp
xchg
ret
in
lea
test
add
add
sbb
or
pusha
push
push
push
rdtsc
pop
pop
pop
jmp
inc
or
sbb
dec
mov
push
push
jmp
lods
jae
and
dec
jns
dec
repnz
loop
inc
lret
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sti
or
push
push
call
and
pop
mov
addl
inc
push
ret
inc
and
xor
lods
add
iret
push
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
push
fwait
or
mov
sub
adc
adc
les
add
int3
sub
into
jno
call
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
in
jge
or
pcmpgtd
add
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
add
shlb
sbb
mov
fwait
or
pop
add
jbe
pusha
sub
mov
popa
push
jb
mov
pop
mov
xor
and
sbb
mov
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
xor
out
popa
mov
fwait
or
mov
add
jmp
adc
lods
cmpsb
push
dec
fiadds
or
je
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
cmp
pop
jg
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
out
adc
or
add
adc
adc
iret
andb
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
fs
inc
add
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
sbb
call
and
pop
mov
addl
inc
push
ret
lret
lds
mov
mov
andl
push
push
call
and
pop
mov
addl
inc
push
ret
scas
outsl
push
pop
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
mov
add
jo
mov
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
lret
jecxz
jmp
mov
xlat
scas
les
dec
call
add
nop
push
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
push
push
push
push
push
push
pop
rdtsc
jmp
xlat
inc
lods
xchg
mov
ret
jbe
dec
jno
push
inc
mov
rdtsc
jbe
pusha
popa
pop
pop
nop
mov
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
aam
pop
adc
and
movsb
int3
pusha
mov
popa
out
mov
in
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
bound
lret
outsb
jmp
jns
cmc
ficoml
push
imul
repz
fsubrs
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
add
popa
enter
test
adc
add
push
push
call
and
pop
mov
addl
inc
push
ret
fdivs
push
jo
jmp
push
aas
and
hlt
adc
lahf
repz
mov
xor
mov
movzwl
shr
mul
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
test
fisttpll
fwait
or
jle
push
push
jmp
adc
xchg
mov
lods
pop
rdtsc
jb
pop
pop
mov
call
inc
xchg
mov
push
test
rorb
call
imul
mov
pop
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jae
cmp
loopne
enter
int
movsl
popa
popa
call
push
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jg
popf
dec
out
and
shl
pusha
mov
adc
popa
in
push
push
call
and
pop
mov
addl
inc
push
ret
aas
mov
rcll
sbb
popa
jae
call
add
enter
insl
pop
mov
xchg
mov
add
add
fildl
sub
nop
sbb
sub
fwait
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sub
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
mov
push
fwait
or
call
call
and
pop
mov
addl
inc
push
ret
xor
jbe
mov
icebp
mov
mul
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xlat
pop
xchg
test
popf
std
adc
or
out
jg
sbb
gs
adc
sub
js
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
add
add
jg
mov
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xorl
add
add
cmc
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
fdivrl
sub
test
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
jae
add
sbb
xchg
add
add
xchg
andl
mov
xchg
add
pop
jo
sub
sub
je
mov
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
lods
adc
fdivr
or
fstpl
add
or
shlb
insl
jle
ret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jle
scas
pop
jmp
fwait
or
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
lahf
mov
ret
mov
and
mov
popa
cmpl
jne
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
lea
sub
add
add
add
and
pop
mov
addl
inc
push
ret
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
into
xchg
cmp
jmp
add
mov
nop
jmp
or
push
cmp
and
add
add
add
and
pop
mov
addl
inc
push
ret
jbe
sarb
mov
mov
jne
mov
pusha
call
loope
les
and
hlt
les
xor
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
add
js
pusha
popa
jmp
pop
shrb
or
add
jo
lock
sub
push
jmp
mov
fidivrl
decl
sbb
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
lret
fucomp
mov
mov
clc
push
push
call
and
pop
mov
addl
inc
push
ret
jl
inc
clc
mov
mov
jmp
mov
clc
clc
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
adc
push
xchg
adc
sldt
add
lods
mov
mov
adc
mov
pop
call
mov
xor
pop
jmp
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
je
pop
out
stc
scas
subb
call
and
pop
mov
addl
inc
push
ret
cltd
dec
jne
mov
lea
xor
nop
push
push
pusha
popa
pop
pop
push
ja
push
push
jmp
fists
pop
lods
inc
hlt
jb
lahf
test
clc
rdtsc
jmp
or
xorl
cmc
cs
bnd
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
lock
jmp
sbb
adc
push
call
and
pop
mov
addl
inc
push
ret
xchg
fwait
or
add
or
test
add
add
add
and
pop
mov
addl
inc
push
ret
lret
cmc
cmp
js
push
mov
pop
add
mov
push
pusha
push
push
jmp
mov
mov
insl
sub
in
push
cmp
rdtsc
pop
pop
pop
pop
push
jg
pop
popa
mov
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
bnd
push
push
call
and
pop
mov
addl
inc
push
ret
fdivrp
pop
add
sub
test
lea
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
call
call
inc
cmpl
jo
jl
or
divb
mov
pop
incl
mov
jmp
call
pop
sub
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
fldenv
popa
sbb
mov
mov
push
pop
and
mov
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
fwait
sbb
cmpl
je
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
jno
adc
shrl
mov
adc
pop
lods
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
pushf
push
or
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
shl
and
mov
call
add
adc
int
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
sub
popf
mov
and
jmp
jne
mov
mov
xchg
ss
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
xchg
je
xor
ret
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
sub
jmp
or
out
cmp
xlat
push
xor
xchg
add
add
add
add
and
pop
mov
addl
inc
push
ret
jle
in
mov
push
push
push
pusha
popa
pop
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xchg
add
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
and
add
add
out
ss
and
scas
mov
pop
pop
mov
push
pop
out
jmp
ret
and
scas
je
decb
xor
jno
movzbl
or
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popa
aam
shlb
cmp
cmc
jg
shr
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jae
repnz
aam
mul
push
push
call
and
pop
mov
addl
inc
push
ret
and
sub
sub
jmp
stos
add
mov
cmp
notb
push
loopne
push
push
jmp
mov
scas
jns
cltd
add
sahf
inc
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
shlb
xchg
sub
pushl
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
sbb
pop
and
popf
jg
push
jmp
test
mov
aaa
cld
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
out
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
outsb
sub
push
in
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
jae
mov
movzbl
and
mov
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
xorl
inc
sbb
sub
push
push
call
and
pop
mov
addl
inc
push
ret
popa
xor
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
lea
aad
fwait
or
push
push
call
and
pop
mov
addl
inc
push
ret
insb
andb
add
adc
mov
mov
popa
sub
js
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
mov
adc
add
loope
stc
pusha
cwtl
pop
push
push
mov
fwait
pushl
dec
jge
add
mov
jmp
imul
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
fs
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
add
test
filds
xchg
add
mov
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
movsl
push
pusha
cld
mov
popa
pop
mov
cmp
jbe
jmp
js
in
ss
jg
push
add
add
push
call
and
pop
mov
addl
inc
push
ret
jg
stc
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
sub
or
xchg
add
add
or
ret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
int
clc
mov
xchg
movswl
movl
mov
mov
movzwl
jae
cmpl
jne
add
incl
xor
pushl
push
mov
pop
mov
call
sub
mov
nop
push
jmp
jnp
mov
cmp
and
mov
sub
add
cmp
push
push
call
and
pop
mov
addl
inc
push
ret
imul
idiv
or
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
sbb
mov
sub
push
mov
pop
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
add
add
or
add
jecxz
pop
dec
cmpsl
sub
lret
popf
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
repz
pop
imulb
stc
or
call
and
pop
mov
addl
inc
push
ret
ret
idiv
decl
add
or
icebp
mov
mov
jmp
add
add
movswl
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
mov
daa
jp
or
lea
jmp
outsw
fbstp
xor
rdtsc
pop
pop
jge
popa
jmp
dec
push
out
xor
mov
mov
pusha
pusha
pusha
popa
jmp
int
icebp
mov
mull
push
jns
rdtsc
pusha
popa
pop
pop
popa
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
pop
aas
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
and
mov
daa
fwait
or
addb
add
sbb
lea
mov
add
nop
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
mov
pop
pop
rdtsc
jmp
push
in
pop
xor
dec
sbb
lock
adc
push
ja
jns
push
push
rdtsc
pop
pop
nop
push
mov
push
jp
mov
call
mov
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
and
incl
mov
jmp
call
pop
sub
jge
mov
cmpl
jbe
add
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mulb
or
and
push
push
call
and
pop
mov
addl
inc
push
ret
nop
jno
sbb
hlt
and
stc
jl
or
pusha
js
mov
sub
popa
or
jne
je
mov
cmpl
je
sbb
jmp
movswl
movl
mov
jmp
mov
movl
call
and
int
push
mov
xor
fwait
or
adc
jmp
mov
and
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
es
jns
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
pop
ljmp
add
mov
nop
jmp
mov
sub
dec
xchg
mov
push
jp
jge
rdtsc
push
push
pop
pop
pop
pop
nop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
sbb
add
add
mov
pop
fwait
or
xchg
xchg
or
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
out
push
push
call
and
pop
mov
addl
inc
push
ret
in
jmp
xchg
pusha
mov
add
popa
in
mov
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
scas
cmp
sarb
add
add
add
and
pop
mov
addl
inc
push
ret
repz
lcall
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
aas
and
push
cmp
jnp
shr
mov
mul
call
ja
push
shrb
jne
iret
lds
push
pop
sub
mov
push
pusha
push
pusha
popa
pop
pusha
pusha
popa
jmp
mov
ds
mov
push
pop
aam
push
inc
jle
popa
popa
mov
adc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
mov
xor
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
sub
scas
mov
add
add
add
and
pop
mov
addl
inc
push
ret
leave
lods
out
mov
in
push
push
call
and
pop
mov
addl
inc
push
ret
jg
dec
lods
popa
sub
mov
cmp
jae
sub
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
xor
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
es
or
mov
clc
shr
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
ret
mul
push
push
call
and
pop
mov
addl
inc
push
ret
ja
bswap
fadds
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
adc
add
inc
and
xchg
sahf
ret
cmpsb
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
popf
hlt
out
fiaddl
inc
lea
push
sub
js
push
push
call
and
pop
mov
addl
inc
push
ret
adc
lds
scas
add
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
mov
or
or
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jl
insl
fs
flds
popf
lds
fwait
or
roll
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
dec
fwait
cmp
mov
call
mov
pop
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
idiv
jb
inc
jmp
xor
add
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
or
add
add
or
shrb
call
and
pop
mov
addl
inc
push
ret
rorl
mov
shrb
inc
je
mov
mov
mov
push
jl
pop
movl
cld
cld
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
jno
mov
or
pop
add
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
xchg
inc
insb
sub
push
lret
mov
cmc
incl
jmp
pop
fistpll
cld
pop
dec
rorl
dec
add
dec
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
js
call
mov
dec
stc
push
in
jle
jno
mov
pop
pop
call
mov
nop
pusha
pusha
sub
mov
mov
jmp
and
aam
lahf
add
add
add
lods
sub
loope
push
pusha
popa
pop
sub
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
out
loopne
mov
movzwl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
js
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
or
xor
add
add
bound
imul
loope
fwait
or
test
add
add
add
and
pop
mov
addl
inc
push
ret
dec
stos
loopne
jbe
mov
ja
jmp
jecxz
sbb
ret
stc
sbb
mov
idiv
ljmp
push
call
and
pop
mov
addl
inc
push
ret
test
lds
shrl
call
and
pop
mov
addl
inc
push
ret
jmp
push
add
add
cmp
add
add
or
xrelease
lea
clc
mov
push
ja
push
push
jbe
rdtsc
pusha
popa
pop
pop
mov
jmp
test
loope
push
fs
push
out
rcr
lock
jnp
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
in
jl
test
dec
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
adc
jno
or
rolb
add
add
pop
ret
pop
mov
addl
inc
push
ret
scas
aad
or
push
push
push
jmp
jp
and
inc
xor
rdtsc
push
pusha
popa
pop
pop
pop
mov
jmp
imul
out
or
hlt
out
add
add
add
and
pop
mov
addl
inc
push
ret
clc
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
fmull
add
jmp
into
inc
push
and
add
rcr
mov
call
cld
lea
jge
or
call
jge
repnz
inc
push
fcomi
adc
mov
pop
call
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
std
jmp
call
pop
sub
mov
cmpl
jbe
sub
xor
mov
and
or
jne
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
enter
mov
add
call
push
mov
xor
pop
adc
into
pop
int3
pusha
mov
mov
popa
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
stc
daa
pusha
mov
js
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
rol
push
cmpsl
repnz
repnz
movl
mov
lea
mov
sbb
andl
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
jo
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
movzwl
mov
test
je
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
sbb
add
add
mov
rcrl
sbb
je
add
adc
add
jmp
shl
mov
jmp
xlat
lds
inc
cmp
add
add
xchg
lea
mulb
add
pusha
mov
mov
popa
out
cld
in
mov
movzbl
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xlat
xchg
dec
jnp
mov
call
cwtl
add
aam
dec
ret
jbe
mov
ret
jmp
mov
cmp
cmpsb
call
inc
clc
mov
inc
mov
jnp
call
call
and
pop
mov
addl
inc
push
ret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
add
mov
or
sub
jmp
ret
pushf
arpl
push
cmp
adc
mov
popf
sbb
push
jmp
ljmp
inc
out
bound
sahf
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
add
mov
and
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
add
jnp
jo
add
add
add
and
pop
mov
addl
inc
push
ret
mov
fwait
or
or
add
movsb
mov
in
movswl
cmp
jae
push
push
call
and
pop
mov
addl
inc
push
ret
dec
movzbl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
inc
lahf
pop
bound
call
and
pop
mov
addl
inc
push
ret
pop
or
nop
push
arpl
shr
mov
mul
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
add
pushf
xor
sbb
pop
jge
cld
sub
push
push
call
and
pop
mov
addl
inc
push
ret
repz
movsl
or
add
add
iret
movswl
pop
sub
js
mov
mov
jmp
pop
out
push
cwtl
fdivr
call
iret
push
imul
fucom
add
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
pushf
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
iret
mov
mov
mov
test
je
pusha
movswl
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
popa
inc
jmp
rsm
ss
das
adc
in
pusha
inc
loopne
fidivl
call
and
pop
mov
addl
inc
push
ret
dec
dec
xor
pop
mov
test
mov
cld
sub
push
push
call
and
pop
mov
addl
inc
push
ret
and
fwait
or
xor
add
jbe
add
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fcmovbe
xchg
movzwl
clc
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
decb
mov
pusha
call
or
mov
ret
enter
mov
repz
icebp
popa
movl
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
add
add
and
pop
mov
addl
inc
push
ret
and
mov
mov
cmpl
jne
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
push
stc
pop
sahf
out
mov
pusha
mov
mov
popa
pushl
call
dec
lret
sbb
incb
jo
clc
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
fwait
or
xor
cmc
das
fwait
or
mov
mov
mov
jmp
stc
xchg
scas
test
ljmp
add
add
mov
pop
mov
outsl
ret
imul
mov
sbb
jl
push
or
mov
pop
popa
xor
clc
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
lock
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jp
nop
adcl
lds
fwait
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
loope
mov
mov
jmp
cmpsb
or
ror
push
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
inc
push
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jp
jno
jmp
cmc
fdivs
popa
add
clc
stos
or
xor
pusha
jmp
add
insl
xchg
outsl
inc
hlt
push
xchg
add
aaa
push
decl
mov
add
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
aas
insb
adc
repz
lea
loop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
test
dec
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
aam
mov
pop
jp
mov
add
and
jne
jmp
adc
and
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lock
add
mov
mov
and
or
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
or
inc
fimuls
add
add
adc
or
add
add
add
and
pop
mov
addl
inc
push
ret
inc
in
xchg
out
mov
lea
add
add
or
loope
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jne
iret
sbb
lea
loope
jne
push
push
call
and
pop
mov
addl
inc
push
ret
and
bound
fsubl
sbb
add
mov
sbb
add
jmp
shll
jg
in
jne
cmp
clc
dec
inc
in
dec
jp
out
mov
arpl
stc
jl
stc
std
test
inc
lods
ljmp
daa
movsb
lods
or
pop
stc
movsl
addb
pop
cli
pop
hlt
xor
gs
pushf
lds
push
pushf
lock
xchg
add
or
mov
xchg
adc
mov
inc
hlt
orl
add
gs
test
add
sub
xor
movsl
mov
rolb
or
sha256rnds2
sti
xlat
loop
mov
mov
shlb
in
call
test
jg
lret
dec
pop
jno
call
jecxz
pop
and
xchg
push
xlat
xchg
inc
push
int
jmp
push
movsl
out
and
dec
mov
mov
imul
sub
aad
push
push
inc
pop
xor
or
pop
dec
inc
mov
inc
or
adc
scas
stc
ds
fldl
mov
sub
sbb
sahf
jge
adc
push
decb
loope
daa
out
mov
pushf
int
data16
inc
frstor
inc
push
cmp
jl
jge
pop
pop
jmp
xlat
sbb
mov
dec
rcrb
pop
mov
add
in
test
mov
gs
test
fdivrl
cwtl
lahf
add
jo
inc
adcl
xor
inc
cmc
das
pop
mov
aas
pop
cltd
jno
pop
jmp
and
push
and
pop
lods
inc
mov
mov
lods
add
xor
mov
mov
js
cmp
std
xor
or
mov
adc
push
jae
icebp
mov
fstpt
outsb
sbb
out
and
fmull
mov
inc
stos
enter
stos
inc
pop
add
pop
push
mov
jecxz
xchg
data16
cmp
fldt
inc
push
in
and
fdivl
test
inc
incb
stc
lahf
dec
xchg
adc
jne
fnsave
xchg
stc
dec
notb
test
cmp
mov
pop
jae,pn
sbb
and
movsb
les
lock
xchg
add
jecxz
sbb
jle
aas
push
mov
xchg
add
push
jbe
push
sbb
push
stos
mov
fwait
xlat
cmpsb
outsl
mov
push
pop
sub
push
sbb
aam
mov
mov
dec
sub
cmp
xchg
push
lret
xor
outsb
sub
loope
frstor
insb
sub
push
enter
aaa
enter
xlat
dec
shl
into
jg
push
aas
lods
adc
insl
and
or
push
sysret
test
inc
scas
aaa
fwait
and
repnz
movsl
cmp
fldl
and
jp
dec
xor
enter
adc
adc
shr
cmp
mov
mov
jl
loopne
test
sbb
shlb
xchg
ljmp
pop
or
jo
test
insb
xchg
jl
out
push
mov
gs
push
test
mov
pop
mov
lea
scas
stos
aam
sub
add
adc
fcoms
mov
shlb
outsb
sbb
sbb
ja
inc
in
adc
pop
lahf
outsl
sub
pop
sub
pop
xor
jle
test
neg
xchg
xchg
add
in
ss
jg
test
sub
mov
test
subb
jle
movsl
ss
push
add
ret
push
mov
mov
jmp
inc
add
gs
pop
lret
adc
xor
mov
push
pop
pop
fistpll
daa
sbb
pop
mov
and
cld
inc
inc
adc
imul
and
sub
dec
or
jmp
insb
mov
mov
lea
pop
dec
xor
outsb
add
mov
and
add
mov
jp
je
push
fistpl
fistpl
subb
pop
xlat
lds
mov
js,pn
push
addr16
mov
mov
cmp
push
xchg
hlt
add
mov
mov
mov
dec
mov
mov
pop
aam
out
sti
inc
in
rclb
push
cwtl
mov
enter
pop
push
push
push
mov
push
mov
xor
dec
lahf
xlat
insl
push
into
push
mov
add
cli
sbbl
jge
pushf
gs
test
push
js
mov
stos
cwtl
fdivrl
ss
test
jp
call
inc
fdivrl
loop
imulb
sbb
mov
repnz
mov
daa
mov
cwtl
sbb
fildll
sbb
mov
stos
cwtl
nop
lock
fldcw
rcrb
sbb
cmp
lods
icebp
add
lahf
in
mov
cwtl
xor
stos
cwtl
pop
mov
insl
es
int
sub
xchg
gs
cmpsl
adc
and
sbb
pop
pop
int3
mull
add
adc
cmc
fwait
stc
dec
sti
inc
sbb
inc
xor
dec
push
adc
leave
push
ja
into
fldenv
push
insb
mov
sbb
orl
movsl
jl
xchg
int3
jge
jecxz
scas
out
lret
das
sbb
paddb
cmp
push
in
push
pop
sub
dec
ss
xchg
lret
lds
adc
lea
adc
jbe
outsl
add
cmp
pop
out
add
add
rorb
call
adc
push
pop
out
xlat
dec
mov
cmp
rolb
es
dec
out
sbb
jns
or
inc
icebp
das
test
and
xchg
cmpsb
shll
sub
daa
insb
daa
mov
mov
bound
xchg
mov
pop
fistl
sub
adc
lret
push
std
nop
aad
out
out
std
pop
pushf
loope
sbb
jno
mov
pcmpgtb
aam
ja
in
jbe
inc
cmp
jne
fs
xor
popf
add
stos
and
pop
movsb
or
test
and
push
outsb
js
sbb
imul
rcll
push
push
out
gs
adc
mov
xor
jbe
jmp
mov
cmp
int
and
xor
inc
cwtl
insb
mov
lods
ja
adc
mov
adc
jno
repz
outsl
xchg
daa
adc
jp
mov
xchg
stos
jecxz
testl
rolb
cwtl
vpaddb
jmp
test
test
les
popa
loopne
pop
andb
dec
or
sbb
jne
loop
xor
sti
lret
ret
dec
cmp
xor
mov
sub
leave
pusha
shlb
call
inc
fsubrs
mov
dec
test
in
jle
addr16
or
in
cmp
inc
mov
or
add
dec
in
dec
aam
cwtl
es
out
test
jae
xor
imul
add
mov
testb
mov
rorl
jo
adc
shrl
pop
pushf
pop
loop
cmpsb
cld
xchg
gs
pop
out
nop
adc
fsub
jbe
mov
jle
in
mov
ja
stc
jb
xchg
idivb
aas
mov
jb
pop
addl
push
ret
dec
jbe
dec
add
lods
inc
cmp
scas
jns
enter
xor
inc
push
mov
xor
push
int
mov
icebp
cmpsb
pop
xrelease
pop
inc
xor
xchg
pop
mov
and
jecxz
jl
cld
inc
mov
inc
jg
out
push
cmpl
mov
jmp
lret
popa
push
lahf
xlat
sbb
cs
jg
lret
sub
sets
inc
fsubrs
add
jge
fiadds
aam
rorl
scas
sbb
mov
mov
scas
fimuls
sub
fnstsw
cli
sahf
cltd
lods
xchg
xor
adc
pop
iret
cltd
push
mov
pop
adc
push
es
or
rcrb
out
xlat
dec
xlat
aaa
int
das
mov
lods
cltd
push
icebp
mov
mov
add
das
sbb
xorb
je
pop
lods
fwait
adc
fs
jle
jecxz
lcall
int
dec
lods
pop
push
pushf
cwtl
clc
pop
pushf
repnz
lret
mov
es
insb
jmp
jle
jo
fs
lock
in
xor
or
fwait
lock
pop
mov
insb
ret
and
movb
or
pop
das
mov
mov
daa
mov
jns
jge
in
xor
ficoms
movb
inc
fsubs
push
scas
dec
jbe
or
or
mov
js
stos
dec
pop
imul
addr16
scas
cmp
jno
in
ss
mov
test
xor
pop
xor
jnp
cmpsl
ds
repz
pushl
pushf
and
inc
aaa
mov
jl
out
or
mov
adc
pop
daa
push
pop
push
dec
pushf
inc
add
rcll
es
and
mov
push
enter
enter
xlat
cwtl
xor
add
mov
dec
rol
and
out
mov
rol
cmpsl
jae
jae
jge
loop
add
xorl
popa
shll
xchg
sbb
out
adc
pop
mov
sub
sub
mov
pop
adc
push
lock
jecxz
add
add
mov
push
jp
pop
stc
mov
jno
lods
jge
ja
sbb
ljmp
pushf
cld
pop
mov
mov
out
movsl
sbb
arpl
cmp
ss
xor
pop
out
xchg
push
les
fstl
adcb
xor
jne
mov
lcall
pop
cmpsl
in
movsl
aas
movsl
mov
pop
mov
jg
in
rorl
inc
xchg
inc
insl
and
sub
mov
push
cmp
mov
fwait
loopne
xchg
cmp
out
add
push
outsl
rcl
gs
inc
xchg
lcall
fnsave
cmc
in
test
test
push
loope
sub
cmpsl
cmp
dec
xchg
xlat
aad
mov
add
out
test
dec
xlat
insl
push
pavgb
xchg
mov
test
jo
sbb
test
dec
jnp
jmp
mov
inc
sub
pop
mov
aam
arpl
repz
xchg
testl
jo
cmp
out
mulps
xchg
cmp
and
push
inc
dec
mov
xacquire
inc
insb
push
sbb
sbb
push
test
jg
add
cltd
ss
nop
test
mov
sbb
pop
mov
sub
xchg
and
cltd
outsb
jae
dec
pop
mov
xchg
xchg
push
hlt
repz
ficomps
mov
cmp
pop
xchg
int3
aas
mov
cwtl
cs
iret
push
divl
jmp
jp
cli
pop
int3
inc
jnp
fldenv
or
pop
pusha
mov
adcl
and
push
pop
pop
lret
push
sub
inc
xor
push
pushf
xchg
rcrl
inc
and
xorl
scas
shll
xchg
sub
shr
mov
loopne
inc
cmpsb
ficoms
lods
fwait
push
push
mov
add
es
push
negl
out
jp
cmp
loop
iret
and
sbb
and
scas
push
and
inc
xor
les
jecxz
xor
scas
out
lret
scas
jp
xchg
dec
stc
and
pop
repz
iret
mov
sub
pop
stc
fdivrl
xor
jmp
sbbb
add
enter
int3
xchg
addr16
and
or
fisubs
xchg
jge
out
movb
out
lret
fs
in
loop
call
pop
push
pop
xchg
rolb
add
push
push
addr16
adc
int
push
cltd
fidivrs
adc
aam
call
insb
mov
mov
ss
inc
movsb
sub
dec
loope,pt
inc
lret
out
test
clc
cmp
mov
xor
xchg
mov
xchg
pop
test
mov
dec
aad
push
movsb
jmp
aaa
xchg
testl
xchg
iret
pop
dec
stos
xchg
xchg
popa
adc
mov
das
andl
sbb
xchg
mov
aam
into
mov
test
jmp
mov
das
clc
les
ja
inc
rcrl
in
push
fldt
cmp
rclb
je
les
dec
in
ss
mov
out
push
subb
pop
mov
scas
add
shll
xchg
arpl
pop
ljmp
jne
xor
and
mov
fwait
sti
test
add
inc
lea
xor
adc
and
jno
imull
or
mov
push
enter
xor
cmp
loop
inc
jge
jns
and
push
mov
jg
mov
js
mov
fcoml
cltd
adc
lret
dec
lea
in
pop
mov
clc
add
inc
xor
add
fs
int3
pop
out
stos
cmp
je
movsb
sbb
xor
xchg
lods
or
add
in
popa
xchg
repnz
sbb
out
dec
fsubrs
shlb
xchg
sub
ret
shlb
cli
xor
sbb
pushf
or
mov
or
andb
and
lret
stc
mov
cmp
cmp
adc
in
outsw
in
fidivrs
mov
stos
add
xchg
test
aaa
and
push
or
bound
sahf
add
iret
lret
cmp
push
xchg
sub
sub
inc
shlb
lret
in
inc
fstl
mov
out
push
xchg
cld
int
push
enter
and
sbb
pop
push
imull
fidivrl
mov
xor
les
ja
frstor
sub
stc
jnp
jge
inc
pusha
and
rcrb
dec
fdivrs
jo
and
xchg
xor
add
dec
pusha
add
insl
add
cmp
adc
dec
inc
add
push
inc
out
jns
aam
mov
ljmp
not
inc
movsl
or
movsl
ljmp
mov
andl
lods
and
pop
aam
pop
dec
mov
pop
push
mov
xchg
mov
fildl
and
cmp
rorl
inc
mov
mov
je
add
arpl
dec
test
leave
jo
sbb
xchg
call
popf
inc
outsw
insl
insl
adc
xchg
cltd
or
lods
jbe,pt
cmp
lods
or
add
out
jmp
jno
je
je
aam
or
test
push
lods
sbb
loopne
loop
cmp
aas
or
inc
inc
push
push
inc
cmp
pop
xor
mov
sub
dec
xlat
or
sub
fmull
sub
or
add
das
dec
addr16
xor
jecxz
int3
movl
daa
push
sub
mov
xor
fadds
js
cmp
mov
lahf
in
fadds
sub
mov
mov
dec
or
fadds
jo
or
insb
movsb
dec
adc
add
xchg
in
cli
sub
jp
sbb
ljmp
scas
adc
loopne
or
iret
adc
add
stos
pop
repnz
mov
shrl
jne
adc
add
cmp
repnz
outsl
add
aas
into
mov
insb
and
cmpb
out
dec
adc
or
cltd
fisubrs
stos
xor
ljmp
inc
mov
jmp
jp
mov
xor
sahf
repz
ja
add
loopne
and
dec
jecxz
xchg
out
cmp
jnp
xor
dec
pop
sbb
out
cmp
cmp
pop
movb
cmp
addr16
inc
cmpsl
aad
mov
jle
scas
mov
stos
push
jo
mov
std
push
test
dec
xchg
sub
in
sbb
je
adc
mov
cmp
icebp
icebp
push
fidivrl
mov
add
inc
aas
test
pop
cmpsl
add
outsb
xchg
enter
jo
mov
inc
mov
mov
imul
or
xor
jp
fisttpl
daa
inc
adc
xchg
push
lret
xor
rolb
sbb
imul
aad
addr16
pop
out
gs
mov
sub
stc
fisubs
pop
jp
dec
aam
mov
rorl
sub
je
push
aas
mov
jns
dec
cmp
fcomip
test
xchg
std
movsl
cmp
shr
jle
pop
lods
into
push
call
push
xlat
push
inc
js
add
mov
testb
clc
in
dec
lods
dec
adc
mov
pop
push
jp
push
int3
gs
mov
sub
cmpsl
adc
push
mov
cmp
ss
cli
inc
ljmp
das
xchg
negl
ret
jp
cmp
mov
imul
sti
inc
xchg
pushf
cmp
cmpsl
xor
xor
sub
mov
adc
and
add
popf
dec
aas
scas
aaa
xchg
negl
ret
or
lret
pop
mov
fisubrl
rorl
popf
cmp
stos
das
andl
add
xchg
push
xchg
and
inc
mov
jne
pop
mov
cmp
add
out
jne
scas
test
add
inc
enter
call
xchg
mov
lret
mov
cmp
adc
push
mov
stos
cwtl
inc
cmpsl
fbld
push
loop
jb
pop
xorl
dec
push
sbb
jns
mov
xlat
inc
jp
clc
and
test
jne
inc
rcrl
into
fcomps
sbb
loop
aaa
jl
bound
js
in
sahf
andps
pop
pop
jmp
das
pop
subb
lds
or
adc
push
clc
shr
adcb
push
arpl
lea
lods
fwait
push
xchg
cmp
jno
scas
out
stos
inc
push
cmp
push
fistpl
adc
or
ljmp
xchg
fbstp
mov
add
push
xor
pop
mov
push
mov
mov
bound
push
cmp
lods
fcmove
stc
sbb
loope
inc
frstor
sub
stc
out
stos
inc
xor
xor
add
mov
inc
int
icebp
jg
out
fsts
rcll
jmp
stos
xor
int3
adc
add
pop
mov
out
ret
sahf
jecxz
pop
push
pushf
xor
loop
pop
push
pushf
jl
loopne
shlb
adc
push
cmp
adcl
or
adc
jb
orb
test
add
lea
and
popf
sub
call
scas
adc
push
xchg
inc
dec
in
jl
out
sub
addr16
cmp
cmp
add
ss
sub
sub
cmp
jecxz
into
pop
mov
add
and
scas
inc
cmp
test
mov
dec
xor
jbe
sbb
outsb
pop
notl
mov
fistl
sub
push
and
lods
and
mov
mov
xor
inc
xchg
mov
cmp
push
mov
sbb
movsb
loope
mov
jmp
jle
mov
test
mov
cmpsl
ret
or
jbe
mov
pop
push
push
xchg
push
jno
or
or
cmp
inc
lods
clc
push
cltd
or
js
insb
out
les
popf
aad
pop
int
mov
mov
dec
xor
ss
into
jne
inc
mov
addr16
sub
mov
pop
shrl
mov
mov
mov
adc
out
mov
popf
add
imul
sub
into
push
in
aam
ss
cmp
dec
sti
xchg
out
imul
cli
aas
out
mov
jne
mov
cmp
nop
aad
les
jl
or
pop
inc
cmp
jecxz
push
adc
clc
fldcw
xchg
out
scas
jbe
jmp
imul
into
push
pushf
fs
xchg
and
fisubrl
xchg
dec
rcrl
ret
jp
cmp
and
leave
dec
mov
or
pop
and
and
js
icebp
cmc
jnp
mov
lods
sbb
xchg
inc
xchg
rcrl
test
aam
push
pop
out
dec
xchg
pop
cwtl
jg
movsl
inc
rol
xchg
and
jl
lds
faddp
jne
cltd
out
insb
nop
insb
mov
push
pop
jl
adc
add
shll
lock
adc
insb
mov
or
xlat
sbb
push
jne
cwtl
push
in
xor
push
clc
icebp
and
ja
orb
je
and
dec
imul
repz
test
pushf
fdivl
jl
rcl
push
out
dec
movsl
in
sbb
mov
lahf
xor
nop
jne
repz
mov
sbb
popa
gs
dec
mov
cmpsb
das
fnstcw
popf
out
aad
xor
cmpb
mov
xorb
jnp
fs
push
mov
je
mov
add
cmp
ds
lret
nop
aad
add
outsl
pop
rcrb
add
in
test
stc
mov
fisttpll
push
arpl
mov
inc
and
hlt
subb
pop
sbb
and
mov
fiaddl
pop
mov
enter
movsb
data16
mov
xchg
jb
mov
push
mov
push
testl
push
mov
add
pop
push
aam
ret
push
mov
add
jnp
aam
nop
ficompl
mov
lock
and
xor
or
cmpb
fstpl
sub
insb
push
sti
push
jo
add
mov
outsl
outsb
test
dec
mov
lahf
push
lock
push
and
ficoml
cmp
add
mov
sub
jae
stos
mov
jecxz
test
or
mov
adc
jl
icebp
lcall
leave
repnz
mov
mov
xchg
out
mov
xchg
dec
fcoml
xchg
inc
cmp
movsb
xchg
pop
imul
xlat
imul
cmp
scas
push
arpl
mov
dec
aaa
mov
cltd
stc
jp
jl
inc
leave
add
jle
jns
sbb
sub
mov
mov
push
ret
mov
in
out
mov
cmp
xlat
ss
adc
jae
aam
pop
adc
inc
inc
aas
fwait
rorl
lods
cmp
xorb
shlb
xchg
add
bound
iret
jmp
ret
mov
pusha
mov
cmpsl
js
pop
xchg
out
fnstsw
or
rol
mov
pop
mov
pop
repz
dec
fisubs
in
dec
inc
das
xor
stos
dec
dec
inc
das
stc
pop
mov
jae
fsubs
and
data16
lds
stos
cmpsl
pop
imul
cli
mov
in
push
fldcw
je
int
jns
push
shll
out
mov
push
sbb
aas
test
rorb
scas
cli
mov
cmp
shlb
mov
sahf
xchg
and
mov
cmp
fcmovnu
int3
je
dec
stc
call
lds
push
arpl
push
mov
push
out
and
push
pop
pop
fildl
shr
mov
repz
mov
mov
push
push
xor
push
sahf
mov
mov
in
mov
xchg
cmc
cli
jne
mov
mov
push
dec
ja
add
les
sub
aaa
test
sbb
adc
stos
or
lcall
rorb
aam
lret
rolb
jl
add
jmp
add
xor
or
xlat
jb
jge
sbb
push
popl
add
movsl
nop
or
aaa
fdiv
inc
mov
cmpl
push
mov
pop
in
xor
mov
cmpsl
dec
mov
sub
or
cmp
jle
in
outsl
jae
in
or
cmp
loop
mov
push
in
ret
ret
das
divl
pop
add
jns
or
hlt
fsubrs
mov
outsb
into
xor
inc
fdivr
mov
pusha
jmp
js
stc
jo
dec
or
loopne
add
int3
pop
out
stos
cmp
xlat
dec
mov
xchg
pop
aas
test
push
pushf
shlb
ja
add
lds
mov
sbb
xchg
push
lods
js
in
dec
stc
mov
addb
pop
mov
mov
pop
sub
fldcw
lret
adc
add
and
subl
xlat
pusha
rclb
sbb
hlt
mov
jl
fsubl
sub
imul
popl
sub
stos
lahf
adc
stc
lcall
cmp
orl
jbe
cmp
cmp
xor
dec
xchg
arpl
fisubrs
loope
dec
xlat
pusha
shlb
or
sub
insl
mov
fisubs
or
jp
loope
adc
mov
jo
lods
repnz
dec
jo
mov
cmp
jl
sbb
outsb
fcomps
push
cltd
sarl
test
push
testb
outsb
xchg
inc
push
mov
pop
das
mov
pop
and
mov
xor
subb
jge
outsl
add
jno
mov
mov
adc
or
outsb
notl
mov
xor
inc
sbb
cmc
add
add
lret
pop
out
cmpsl
dec
adc
mov
inc
xor
mov
mov
xor
add
pop
mov
mov
push
mov
faddp
aaa
lret
pop
adcl
jb
sub
xchg
mov
cwtl
lods
or
adcb
inc
test
aaa
sub
loopne
xorl
jns
sbb
int
xchg
push
sub
sarl
les
lods
lret
enter
aam
adc
pop
xor
rcrl
stos
push
push
and
mov
inc
xor
fadds
sub
mov
cld
mov
or
dec
jbe
pop
sub
mov
stos
out
push
xchg
cwtl
dec
mov
ret
aas
insl
data16
push
jb
lret
add
addr16
test
gs
sub
xchg
push
pop
int
lods
jns
or
dec
daa
jne
cmp
insl
fisubrs
pusha
pop
jbe
jecxz
xor
stc
pop
xor
inc
cmp
add
daa
filds
pop
mov
push
push
add
decb
jg
mov
inc
dec
adc
push
xchg
jle
std
frstor
repz
mov
mov
nop
ds
adc
andb
cli
dec
cltd
dec
and
aam
push
dec
xchg
mov
cmpsb
and
popa
cmpsb
push
cmpsl
pop
cs
push
mov
xorb
iret
xor
pop
cs
jg
out
add
lock
lcall
in
sub
repnz
xchg
lea
out
dec
int
cmp
mov
xlat
or
xchg
pop
nop
lock
dec
fsubrs
aam
repz
jns
pop
push
mov
adc
mov
adc
jae
pop
rcr
jle
stos
mov
fiaddl
push
lret
shlb
mov
idivl
mov
in
jbe
push
jns
mov
fs
push
punpckldq
add
out
out
imul
ds
xor
pop
aas
out
fdivr
in
mov
sbb
shrb
mov
test
in
push
shr
dec
aam
sbb
dec
sbb
adc
scas
push
lret
xor
jle
mov
push
scas
call
mov
pushf
or
int3
lds
jecxz
xchg
dec
mov
dec
xchg
ds
subb
std
and
mov
jl
stc
std
out
mov
cmpsl
pop
imul
fcmovb
cmp
or
adc
mov
mov
jecxz
dec
or
and
or
mov
dec
dec
cmp
dec
arpl
repz
arpl
scas
inc
pop
ja
cmp
mov
icebp
sub
push
fistl
hlt
push
mov
or
fdivl
inc
push
jo
or
fimuls
inc
mov
sbb
pop
popf
pusha
cmp
xchg
mov
mov
add
insl
xchg
xor
mov
pop
jb
aam
add
add
jns
movb
js
movsl
ljmp
or
iret
adc
pop
scas
jns
dec
lods
in
inc
mov
add
hlt
add
cli
nop
addr16
adc
addr16
pushf
cmpsb
push
push
fidivl
push
aad
pushf
clc
push
into
push
in
aad
xlat
aaa
xchg
sti
inc
sub
cmp
repnz
aad
sub
mov
es
fldl
ficoml
mov
mov
and
or
sbb
fstps
xor
cwtl
push
mov
mov
pop
sub
mov
cmpb
mov
outsb
xor
hlt
pop
mov
out
push
mov
xchg
repnz
fwait
pop
into
inc
jmp
movsb
shll
test
aaa
fs
or
cmp
and
fstps
fcomp
adc
add
mov
jno
out
or
adc
pushf
add
insl
push
into
outsl
and
jno
notl
add
in
inc
ficompl
std
jo
mov
repnz
inc
inc
and
inc
sbb
shl
js,pn
and
dec
sbb
adc
cmc
aas
test
imul
fidivl
pop
test
xchg
jns
mov
sbb
and
sbb
lods
icebp
mov
xchg
adc
inc
xlat
aaa
mov
outsb
pminub
jbe
shlb
push
jmp
fcompl
mov
aad
xor
adc
adc
movsl
ljmp
or
rorl
repz
sub
dec
mov
inc
ficompl
xorb
xchg
pop
pushf
aam
ljmp
cmp
stos
mov
cmp
sbb
add
adc
cmpsb
mov
es
in
mov
lods
push
inc
xchg
adc
loope
arpl
push
pop
test
adc
push
or
or
pop
inc
bound
inc
test
and
cmp
scas
add
inc
adcb
inc
movsl
cli
jns
gs
adc
bound
add
push
hlt
cmp
jecxz
inc
adc
xchg
mov
cwtl
fcomps
mov
adc
dec
fidivrl
sub
mov
xor
xchg
sbb
lcall
sbb
aad
mov
cld
cmp
mov
add
stos
fisubs
sbb
jae
adc
adc
and
fisubs
stc
mov
fcmovnu
fwait
mov
or
pop
test
out
nop
cmpl
loope
ss
bound
push
ja
add
dec
jecxz
adc
xchg
test
dec
icebp
jno
std
xor
sbb
cld
jg
jbe
pushl
xchg
fs
jle
adc
jns
xchg
mov
jmp
and
mov
test
jmp
lock
jns
filds
stos
inc
mov
jne
sbb
jne
xlat
xchg
push
and
cltd
cltd
sti
fmull
cs
pop
mov
and
in
inc
fisubl
daa
mov
jle
push
in
add
adc
faddl
mov
xchg
pop
test
push
or
out
add
imul
jl
mov
icebp
pop
call
es
sub
xor
cmp
cmp
ja
adc
out
int
adcl
addl
aaa
fildl
movsb
cmp
jo
in
mov
xlat
mov
outsl
out
add
pop
jmp
stos
push
adc
jne
pushf
add
sbb
or
adcl
cmp
loope
mov
and
push
cld
jge
cltd
pop
and
sbb
or
repz
roll
jbe
int3
add
insb
std
inc
mov
push
add
inc
aad
hlt
ret
push
fistpll
pop
push
mov
mov
pusha
push
add
pop
das
clc
rcrb
xchg
test
adc
ljmp
jbe
push
ljmp
enter
sub
xor
mov
adc
jno
or
shlb
stc
outsl
pop
scas
pushf
nop
and
ss
jbe
dec
mov
mov
xchg
pop
xor
je
imul
rolb
in
inc
jne
fldl
test
xorb
xor
mov
dec
lods
mov
pop
nop
es
std
outsb
rcrb
lret
adc
mov
or
sbb
push
mov
nop
aad
add
and
jb
aad
insl
inc
cmp
test
jo
xor
mov
sbb
sub
mov
scas
inc
xor
mov
ds
cmp
mov
scas
cmp
mov
mov
add
mov
push
mov
push
mov
add
sub
xchg
pop
mov
mov
sub
shl
sub
shl
push
mov
and
xor
xor
pop
push
mov
add
sub
mov
mov
add
mov
pop
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
xchg
pushf
add
push
aad
movl
lods
or
pop
push
jno
subl
xchg
jae
jae
psubsb
mov
cld
movsl
adc
es
popf
xor
out
push
jae
clc
and
clc
mov
mov
and
push
xor
pop
and
jmp
pushf
pop
enter
mov
xor
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
ja
loope
jne
jmp
push
aas
adc
jl
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
sub
imul
add
test
add
mov
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
popl
and
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
or
enter
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
xor
or
lea
and
call
and
pop
mov
addl
inc
push
ret
mov
leave
jb
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
lods
call
inc
xor
lcall
sub
out
pop
mov
mov
add
xchg
shrl
or
popa
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
dec
adc
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
insb
xor
popa
push
push
call
and
pop
mov
addl
inc
push
ret
loop
ja
call
mov
jmp
dec
inc
pop
scas
faddp
mov
mov
pop
jmp
popa
popf
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
pop
lahf
cmp
xorl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
ret
fs
filds
or
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
push
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
insl
dec
jo
jle
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
test
pop
stc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
add
xchg
or
mov
add
mov
call
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
jnp
cmpsl
jle
push
sub
add
add
data16
mov
add
push
sub
pop
pop
movzwl
call
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
ljmp
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
ficomps
pop
cld
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jp
pop
pop
and
xor
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
fs
in
test
sbb
lds
fwait
or
test
sbb
or
add
add
add
and
pop
mov
addl
inc
push
ret
dec
roll
add
test
pop
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
test
pusha
mov
pusha
mov
jnp
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
mov
mov
add
sub
call
and
pop
mov
addl
inc
push
ret
sub
call
xor
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
ja
mov
call
mov
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
push
add
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
jmp
ret
add
pop
in
flds
test
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
ja
cli
xor
pop
push
mov
pop
call
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
adc
xchg
loope
mov
jmp
mov
jns
outsb
out
xor
insl
cwtl
mov
popf
add
xor
or
test
push
fwait
or
or
add
sub
outsl
pop
xor
lahf
call
push
push
call
and
pop
mov
addl
inc
push
ret
test
ss
mov
mov
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
add
outsb
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sub
sub
call
jae
adc
repnz
push
sbb
dec
add
mov
mov
add
pop
jnp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
push
outsb
xchg
add
add
add
and
pop
mov
addl
inc
push
ret
inc
add
mov
orl
add
add
mov
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
clc
mov
sub
shr
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
mul
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jnp
movsb
lods
call
call
inc
in
pop
outsb
jbe
push
cld
sub
add
lahf
xchg
out
fucomp
sldt
add
aaa
cmp
push
loop
pop
sub
data16
pop
push
push
push
pusha
jmp
lret
dec
mov
popa
rdtsc
push
push
jnp
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
sbb
jl
sbb
add
add
add
add
and
pop
mov
addl
inc
push
ret
test
inc
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
inc
adc
adc
sbb
push
call
and
pop
mov
addl
inc
push
ret
add
mov
dec
jnp
ss
adc
add
sbb
pop
sbb
and
xlat
mov
jns
icebp
sub
out
daa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
daa
int3
lock
push
and
add
add
add
add
and
pop
mov
addl
inc
push
ret
leave
mov
xchg
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
push
call
and
pop
mov
addl
inc
push
ret
add
mov
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
fcmovnu
mov
sub
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
sbbb
fwait
or
test
sbb
push
call
and
pop
mov
addl
inc
push
ret
aas
imul
in
xchg
adc
fwait
or
push
add
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sbb
xchg
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
in
popf
imul
inc
add
icebp
or
or
xchg
lea
fwait
or
orl
add
mov
add
add
or
sbb
push
call
and
pop
mov
addl
inc
push
ret
add
jo
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sbb
adc
add
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
push
sbb
pop
mov
cmc
add
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
dec
mov
mov
mov
jmp
jmp
ror
xor
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jl
xchg
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
dec
pop
scas
push
pop
out
add
sldt
add
sbb
jno
push
push
pop
mov
lods
mov
js
push
mov
call
mov
ret
push
push
call
and
pop
mov
addl
inc
push
ret
repz
jecxz
xchg
add
add
test
fwait
or
lds
push
call
and
pop
mov
addl
inc
push
ret
lea
dec
nop
lcall
mov
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
adc
cmpl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
jmp
fs
mov
add
jno
rorb
push
push
call
and
pop
mov
addl
inc
push
ret
clc
push
push
push
push
push
pop
pop
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
push
scas
arpl
jmp
adc
add
xchg
adc
mov
or
add
add
add
and
pop
mov
addl
inc
push
ret
aas
sbb
mov
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
popa
jp
movsl
add
pusha
xor
sub
popa
mov
nop
pusha
push
push
push
rdtsc
pop
pop
pop
pusha
push
pop
jo
popa
popa
push
jmp
pop
cli
cmp
lea
and
mov
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
adc
in
fsub
pusha
call
dec
mov
push
mov
fcoms
imul
leave
or
or
xor
popa
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
imul
pop
les
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xchg
mov
daa
mov
call
mov
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
jl
inc
fldenv
lock
lea
mov
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
les
adc
cmp
je
mov
push
mov
movswl
push
je
push
pusha
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
jmp
call
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
leave
dec
add
insb
mov
add
sub
push
fnsave
pop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sbb
fisttps
mov
mov
popa
mov
lea
jmp
lahf
or
and
push
push
push
pop
rdtsc
jmp
jbe
cmp
jle
pop
jmp
loop
rcrb
mov
aam
call
rcrl
add
add
jmp
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
scas
sub
mov
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
sti
arpl
not
sub
add
shll
push
jle
loope
dec
push
and
pushl
jmp
addl
loop
xchg
stc
sub
add
add
mov
mov
out
push
pop
in
mov
cmp
jae
mov
movzbl
jae
jmp
call
loop
cmp
mov
add
add
decb
shr
mul
jno
mov
sub
stc
mov
add
jmp
mov
jae
cld
mov
jb
jmp
cwtl
stos
adc
or
dec
leave
jl
loope
out
cli
mov
add
push
add
pop
mov
add
jmp
mov
loopne
sti
rol
cmp
jae
mov
jmp
mov
mov
call
mov
jno
aam
sub
loope
je
cld
andl
call
xor
push
mov
mov
mov
xor
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
leave
or
mov
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
add
je
mov
call
push
movswl
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
test
adc
test
add
add
popf
popa
pop
fwait
or
add
add
mov
mov
mov
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
andb
and
int
fwait
or
mov
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
push
mov
call
push
jno
or
mov
cltd
push
ret
aad
fwait
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
mov
push
pop
or
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
addl
and
call
and
pop
mov
addl
inc
push
ret
gs
xchg
cmp
jmp
add
xor
pop
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
leave
xor
add
cld
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
into
cmp
popf
sbb
loope
mov
icebp
and
or
je
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
sbb
adc
addb
add
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
iret
pop
std
dec
xchg
mov
or
flds
push
call
and
pop
mov
addl
inc
push
ret
loop
les
fdivs
sub
add
add
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
or
test
fwait
or
mov
nop
js
push
push
push
rdtsc
pop
pop
pop
push
jmp
push
stc
sub
push
call
and
pop
mov
addl
inc
push
ret
dec
hlt
add
add
add
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
xchg
pusha
popa
push
js
push
push
pusha
popa
rdtsc
push
pop
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
add
int3
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
dec
mov
mov
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
loop
jmp
sbb
add
push
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
push
arpl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
call
and
pop
mov
addl
inc
push
ret
arpl
fucom
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xchg
push
jmp
shrb
cmp
add
popf
push
pop
push
pusha
jmp
cmpsl
mov
popa
jno
and
mov
mov
mov
or
mov
ret
test
fwait
inc
mov
add
add
add
and
pop
mov
addl
inc
push
ret
stc
ja
mov
pop
jnp
jae
mov
pushl
call
incl
pop
add
lea
add
add
pusha
popa
rdtsc
jmp
imul
add
add
daa
jmp
das
mov
push
push
jne
push
pop
rdtsc
jge
jmp
xor
outsl
sub
cmp
mov
jmp
cmp
fmull
imul
and
push
pusha
jbe
pusha
popa
popa
pop
pop
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
mov
movzwl
nop
jmp
push
insl
test
dec
ljmp
push
push
push
push
push
pop
pop
rdtsc
pusha
pusha
popa
jnp
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
pop
push
call
mov
jp
push
cltd
adc
fwait
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
xchg
adc
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
mov
icebp
and
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
xchg
adc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
sti
xchg
je,pn
leave
adc
or
pop
add
add
and
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aad
xchg
sbb
jl
add
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cld
loop
fisttpl
or
mov
add
test
add
add
mov
add
add
test
fwait
or
mov
add
test
add
add
mov
fildll
or
lea
mov
pop
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
cmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
push
out
in
inc
pop
mov
movl
mov
push
jmp
mov
and
pushf
adc
mov
pop
mov
push
mov
pop
pushl
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
push
subb
inc
jle
inc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
inc
in
adc
scas
dec
imul
fwait
or
test
es
or
xchg
add
add
mov
mov
xor
add
mov
cld
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
xchg
rcl
sti
or
adc
add
xor
hlt
inc
fisubrs
cltd
xchg
cmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
bound
mov
pushl
call
xchg
push
push
push
pusha
popa
pop
rdtsc
push
jmp
mov
xchg
pop
pop
pop
push
jbe
jge
jmp
xchg
das
popa
and
xchg
jecxz
and
sbb
les
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
fildll
call
and
pop
mov
addl
inc
push
ret
jo
clc
call
push
push
call
and
pop
mov
addl
inc
push
ret
lods
mov
xchg
cmp
mov
je
xchg
push
push
push
push
push
pop
rdtsc
jg
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
push
pusha
pusha
push
pop
jae
popa
pusha
je
jmp
frstor
mov
jne
and
in
popa
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
push
jae
jns
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jg
sbb
sub
jle
movswl
pushl
mov
call
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
ja
mov
push
in
movsb
push
sahf
mov
xor
mov
movswl
movb
je
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
push
ds
test
mov
or
jmp
adc
mov
jb
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fisttps
jmp
sbb
into
cmp
pusha
push
push
rdtsc
pop
pop
jge
popa
rdtsc
jns
push
push
rdtsc
pop
pop
pop
pop
push
push
push
jmp
out
dec
test
es
jbe
jge
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
xor
push
jns
jmp
bound
add
add
sbb
xchg
repnz
mov
add
lods
or
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
add
popf
repnz
popa
insl
add
cmp
imul
add
pop
nop
jmp
outsb
out
dec
or
repnz
push
ljmp
push
ja
pop
push
push
jbe
rdtsc
push
pop
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
aad
push
push
push
call
and
pop
mov
addl
inc
push
ret
daa
adc
ret
push
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
idiv
jne
mov
lea
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
fwait
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
popa
push
mov
pop
cmp
je
mov
sub
push
sbb
push
jne
jmp
fldt
add
mov
call
jmp
mov
bound
mov
loopne
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
mov
dec
jmp
adc
scas
push
cwtl
int3
pause
add
add
in
jle
aad
fmuls
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
shlb
lea
jae
mov
push
jns
pusha
jmp
cmp
sub
sub
pop
popa
mov
movzwl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
add
add
push
call
and
pop
mov
addl
inc
push
ret
lret
jge
fwait
or
test
xor
mov
push
xor
pushl
jp
call
jmp
mov
mov
mov
out
mov
in
mov
mov
cmp
jae
mov
movzbl
pusha
mov
call
cmpsl
mov
pop
sbb
mov
mov
push
dec
add
pop
popa
mov
mov
mov
pusha
popa
shr
mov
mul
mov
sub
or
mov
mov
jmp
mov
mov
mov
add
pusha
jne
adc
or
popa
add
mov
mov
cmp
jae
jle
mov
jmp
mov
mov
mov
and
je
mov
andl
mov
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
dec
jl
sub
ja
adc
add
dec
aam
stos
jge
lahf
call
cwtl
dec
push
in
add
push
call
and
pop
mov
addl
inc
push
ret
sub
push
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
repz
addr16
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
test
add
add
sub
ret
pusha
repnz
mov
cld
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xchg
sub
inc
pop
cld
push
push
call
and
pop
mov
addl
inc
push
ret
jp
xchg
mov
mov
sub
jmp
aas
jmp
inc
aas
push
mov
push
call
and
pop
mov
addl
inc
push
ret
add
les
call
add
hlt
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
dec
pop
shll
sti
pop
mov
xor
pusha
mov
push
pusha
popa
pop
popa
or
mov
call
cmovne
ss
shll
nop
lods
push
outsb
inc
push
mov
dec
dec
shl
mov
pop
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
les
into
stc
clc
xor
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
add
add
xchg
in
fwait
or
mov
add
test
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
fmull
sbb
and
or
add
add
add
and
pop
mov
addl
inc
push
ret
dec
in
loopne
and
and
mov
leave
mov
mov
cmpl
je
jp
mov
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
bound
mov
add
add
add
and
pop
mov
addl
inc
push
ret
lea
in
sti
ss
out
or
loope
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
push
or
fisttpll
add
out
mov
and
jnp
jne
lods
mov
je
push
push
call
and
pop
mov
addl
inc
push
ret
iret
jb
aas
scas
ss
scas
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
pusha
mov
mov
popa
xor
push
push
call
and
pop
mov
addl
inc
push
ret
push
jp
add
jae
xor
push
js
pusha
push
push
rdtsc
pop
pop
push
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aam
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
aas
mov
xor
call
incl
pop
add
addl
add
je
jns
jmp
in
jne
adc
iret
push
shlb
push
push
pusha
popa
rdtsc
push
pop
pop
pop
push
push
jmp
mov
jle
daa
push
lock
or
xor
or
add
push
pop
jo
lea
pop
popa
mov
jg
jg
pusha
popa
mov
jmp
repnz
decl
push
push
pusha
popa
rdtsc
push
pop
pop
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
cli
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
fisubs
jp
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
pop
fucompp
or
add
ds
cmp
hlt
inc
xor
add
add
add
or
mov
fildll
call
and
pop
mov
addl
inc
push
ret
mov
mov
fwait
or
mov
add
add
xchg
add
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
pushf
jmp
add
movsb
cmp
xor
lret
sbb
add
mov
shrb
dec
pusha
or
jb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
inc
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
test
fwait
or
jmp
dec
out
mov
enter
mov
or
add
scas
or
cmp
mov
repnz
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
and
xchg
cmp
mov
fildll
call
and
pop
mov
addl
inc
push
ret
push
cli
mov
popf
lea
or
push
xchg
xchg
fucomp
add
pandn
loope
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
add
dec
jmp
cmp
push
xchg
in
imul
test
ret
inc
push
jge
push
js
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
jge
ret
xchg
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
data16
push
xchg
add
sahf
out
fs
mov
add
popa
popa
push
push
call
and
pop
mov
addl
inc
push
ret
adc
dec
les
mov
movl
mov
mov
cmpl
je
js
mov
jmp
xor
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jg
ja
mov
push
in
jmp
adc
sub
or
in
xor
movsb
dec
xchg
mov
cmpl
jne
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
dec
sub
jmp
in
adc
sbb
mov
cltd
loope
repnz
jl
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
insl
sub
fildll
call
and
pop
mov
addl
inc
push
ret
ficompl
inc
xchg
and
push
shl
subb
mov
fwait
or
add
and
push
inc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
add
adc
mov
pop
sub
xchg
push
jg
pusha
popa
pop
push
jno
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
inc
loop
cmp
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sti
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
and
mov
fildll
adc
es
or
add
add
add
and
pop
mov
addl
inc
push
ret
hlt
outsl
std
dec
sub
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
fsubs
fadds
mov
push
and
push
call
and
pop
mov
addl
inc
push
ret
mov
lds
scas
push
or
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
cld
cld
add
add
add
mov
mov
mov
push
mov
xor
pushl
mov
or
call
mov
xchg
pusha
jmp
push
ss
and
rdtsc
pop
pop
pop
popa
push
jmp
add
stos
pop
mov
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
loope
jns
sub
jmp
xchg
imul
or
add
lret
and
pushf
sub
jg
xchg
std
add
add
add
popa
cmpl
je
mov
xchg
jmp
mov
imul
and
mov
push
push
jno
jmp
push
mov
insb
pusha
adc
push
push
call
and
pop
mov
addl
inc
push
ret
push
jns
mov
xchg
or
addl
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
movsl
push
cltd
out
sub
xchg
inc
adc
add
add
popf
lea
or
mov
sub
xchg
add
add
xchg
std
push
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
popf
call
and
daa
fwait
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
add
ss
test
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
fisttps
mov
push
fwait
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
inc
pop
push
sub
jmp
mov
mov
jmp
das
aam
cmp
fildl
fwait
or
lea
add
add
or
jge
push
pusha
popa
pop
push
pusha
push
jge
pop
pusha
jl
jmp
fistl
inc
lock
mov
hlt
in
adc
dec
add
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
insb
addr16
sbb
push
jmp
dec
pop
push
mov
mov
cwtl
mov
mov
push
jmp
arpl
pop
dec
jne
mov
and
cmc
jnp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
xor
add
mov
jmp
fidivs
jnp
rcrb
sub
and
jne
add
sbb
test
add
add
or
aaa
ljmp
in
sub
jae
push
push
jmp
outsl
inc
mov
mov
cmp
push
push
rdtsc
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
cmp
repnz
or
mov
push
push
pop
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
rorl
mov
xchg
loope
fwait
or
lea
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
cmpsb
jmp
add
add
or
add
mov
dec
or
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cli
sbb
outsl
mov
add
xchg
pop
and
cli
loopne
test
arpl
or
jne
mov
cmp
je
mov
push
mov
nop
jmp
imul
sahf
cltd
inc
jmp
push
push
push
push
push
rdtsc
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
and
cld
jmp
imul
cmc
and
in
mov
sbb
cmp
xchg
adc
add
add
add
and
pop
mov
addl
inc
push
ret
sarb
dec
mov
jmp
call
pop
sub
pusha
movzwl
mov
popa
stc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
call
mov
and
push
jmp
dec
jg
push
lcall
push
call
and
pop
mov
addl
inc
push
ret
add
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
cli
xchg
sbb
popf
mov
movzwl
incl
jmp
inc
fisttpl
mov
ja
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
add
movsl
iret
shll
xor
fwait
or
jmp
das
imulb
dec
das
push
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
popa
les
subl
call
jmp
mov
mov
jmp
inc
ja
push
xchg
xchg
out
and
in
xor
cmp
jae
jmp
sub
inc
jp
gs
movzbl
cmc
mov
mov
mov
mov
mov
shr
xor
mul
pusha
add
jmp
push
in
notl
inc
and
xchg
sahf
ret
enter
shll
mov
add
add
mov
add
add
add
or
add
sub
or
les
icebp
sub
or
scas
add
add
ret
jmp
mov
jno
add
pusha
pusha
clc
mov
popa
mov
popa
add
mov
add
call
arpl
es
xor
lahf
cmp
add
mov
jae
jns
or
jmp
mov
mov
mov
js
sbb
and
je
mov
andl
push
add
pop
mov
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
std
dec
xchg
mov
jle
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
add
movsb
lods
call
xor
or
xchg
jge
fwait
or
or
or
add
push
call
and
pop
mov
addl
inc
push
ret
fistpl
mov
add
mov
add
mov
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jl
shrl
mov
mov
jno
mov
mov
push
pusha
cld
pusha
popa
popa
pop
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
jmp
mov
sbb
sldt
add
or
add
jg
ds
pop
dec
mov
xor
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
out
subl
and
or
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
cs
lret
xor
add
mov
jno
jmp
fnstsw
xchg
push
dec
pop
fucompp
inc
sub
push
out
dec
stc
lea
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
rcrl
and
and
add
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
push
dec
mov
sub
cmpl
je
pusha
push
jmp
xchg
stos
push
mov
sub
mov
cmpl
jbe
mov
pusha
jno
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
es
jnp
mov
add
add
add
and
pop
mov
addl
inc
push
ret
sub
or
je
mov
mov
push
mov
pop
xor
mov
pusha
mov
popa
nop
jle
push
push
pop
pop
push
jae
push
push
push
push
rdtsc
pop
pop
rdtsc
je
pop
pop
nop
pusha
mov
je
mov
popa
jmp
addl
xchg
jecxz
add
push
call
and
pop
mov
addl
inc
push
ret
cmp
call
incl
pop
add
xchg
add
add
or
add
stc
xchg
pop
push
ret
pushf
xchg
pop
adcl
add
add
push
pop
popa
rdtsc
push
jbe
pop
pop
pop
mov
push
push
push
jmp
inc
loop
pop
sub
into
insb
jae
int3
pop
rdtsc
push
push
jne
rdtsc
push
pop
pop
pop
pop
pop
mov
push
push
jne
jmp
out
mov
xchg
rdtsc
jmp
add
and
in
ljmp
pop
mov
pusha
jge
push
pop
push
jmp
ret
sti
or
jno
pop
popa
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
imul
or
add
out
dec
outsb
adc
nop
andb
push
inc
mov
pop
mov
movzwl
jmp
pusha
jmp
int
mov
in
jbe
mov
popa
mov
push
pop
mov
movl
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
xor
popf
fstpl
fwait
or
test
dec
mov
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
insb
jmp
inc
cmp
adc
addr16
clc
lods
insl
aaa
rorb
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
xchg
jb
jmp
pusha
mov
pop
lea
pop
sub
loop
push
jmp
rclb
notl
pop
test
int3
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
xor
test
mov
out
cmp
pushl
mov
push
jnp
jns
pusha
popa
addl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
or
push
push
jmp
outsb
sub
push
xchg
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
xor
into
and
adc
xchg
aad
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
fdivs
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
arpl
movzwl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
call
fildll
push
add
add
or
push
add
add
pop
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
daa
mov
adc
and
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
push
dec
add
mov
fildll
inc
add
add
push
call
and
pop
mov
addl
inc
push
ret
lret
mov
or
sub
xor
insl
sub
xor
or
mov
fildll
push
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
xchg
mov
xchg
jmp
icebp
arpl
pop
das
pop
imul
jecxz
sbb
pop
pop
pop
xchg
xor
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jo
hlt
outsl
std
dec
xorl
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
add
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
inc
cmc
ja
mov
fsts
fwait
or
test
es
or
add
add
add
and
pop
mov
addl
inc
push
ret
test
push
add
add
or
xchg
add
add
jl
xchg
xchg
and
add
jmp
cmp
lahf
popl
popa
lods
mov
dec
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
addr16
and
push
xor
mov
jmp
lahf
add
movsb
out
and
sub
cmp
call
popf
imul
add
push
call
and
pop
mov
addl
inc
push
ret
mov
adcb
mov
pushl
jmp
fisttps
mov
pushf
out
loop
inc
cmpsl
pop
jmp
cli
ret
sbb
xchg
adc
add
add
add
and
pop
mov
addl
inc
push
ret
pop
push
inc
mov
je
jnp
pusha
jmp
mov
lods
xchg
popf
fstps
imull
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
data16
inc
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jae
mov
mov
cmpl
je
and
xchg
jmp
insl
stos
push
add
xchg
hlt
sbbb
push
push
pusha
push
pop
push
pop
popa
rdtsc
push
push
push
pop
rdtsc
jmp
test
mov
repnz
aaa
and
pop
pop
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
fldenv
inc
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cld
mov
push
add
adc
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
add
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
shrl
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
int
insb
push
movzwl
mov
mov
mov
pusha
mov
push
sub
pop
popa
movb
movswl
movl
movzwl
jmp
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
gs
jmp
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
stos
jl
mov
push
add
add
adc
sub
inc
or
fisubrs
pop
xchg
imul
sub
push
clc
push
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
jmp
sahf
push
cpuid
jmp
rolb
add
add
pop
ret
pop
mov
addl
inc
push
ret
jbe
int3
inc
testl
push
add
add
popf
lea
fwait
or
dec
push
pusha
jmp
mov
jnp
cmpsl
mov
or
add
mov
sub
dec
xchg
mov
add
add
push
mov
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
add
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
jns
movsb
add
fwait
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xchg
mov
mov
sub
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jb
jmp
repz
lock
daa
push
jmp
mov
mov
mov
nop
push
push
jo
push
push
rdtsc
pop
pop
rdtsc
pusha
jmp
add
ja
pop
jae
pop
clc
xor
mov
sbb
ljmp
popa
pop
pop
push
jbe
push
pusha
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
decb
mov
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
ljmp
call
pop
sub
mov
call
sti
pop
cmc
pop
dec
and
fcmovne
mov
and
shll
dec
aaa
sbb
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
not
ret
inc
mov
or
add
jg
push
push
rdtsc
pop
pop
push
push
push
jmp
ret
xchg
out
jmp
mov
loop
inc
dec
aas
shlb
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
nop
movswl
pushl
mov
mov
movswl
incl
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
sbb
jmp
sub
add
mov
adc
mov
sbb
mov
out
push
stc
pop
in
js
sub
cmp
jae
or
movzbl
mov
mov
mov
mov
add
shr
mov
mov
mul
mov
mov
sub
mov
mov
or
jmp
mov
mov
sub
add
xor
add
cmp
jae
push
mov
pop
cld
jmp
mov
mov
ja
adc
and
je
clc
andl
jle
jmp
sarb
mov
call
in
test
push
mov
jmp
scas
push
loope
mov
mov
daa
jmp
add
or
sub
pop
push
clc
call
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
and
sahf
and
jno
add
cld
pusha
stc
adc
popa
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
ss
mov
lods
xor
shr
add
sub
jne
mov
mov
push
mov
pop
or
jg
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cmp
sbb
shlb
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
in
data16
shrd
popf
jge
fwait
or
mov
push
call
and
pop
mov
addl
inc
push
ret
scas
insb
bound
xchg
stos
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
rorb
lods
adc
add
push
push
call
and
pop
mov
addl
inc
push
ret
sub
cli
push
fstpt
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
test
mov
adc
or
movzwl
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sbb
mov
incb
or
je
or
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
jb
shll
sbb
fwait
or
popf
insl
adc
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
std
jmp
testb
and
push
push
call
and
pop
mov
addl
inc
push
ret
imul
leave
je
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
movsb
out
and
sub
adc
mov
xor
xor
nop
pusha
pusha
push
push
rdtsc
pop
pop
push
pop
popa
jmp
sahf
sarl
inc
cmp
push
push
jmp
cmp
outsb
ficompl
mov
adc
adc
iret
lret
rdtsc
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
repz
push
call
incl
pop
add
push
pop
pusha
popa
popa
pop
push
jmp
ficoms
ret
loop
jle
lods
in
sub
pop
add
add
mov
dec
jnp
mov
push
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
mov
push
jp
push
pop
pop
pop
mov
mov
call
pusha
jmp
and
or
add
add
inc
inc
add
fildll
push
fwait
or
mov
add
add
add
and
pop
mov
addl
inc
push
ret
lcall
push
pusha
mov
popa
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
nop
jbe
adc
add
subl
insl
xor
and
cmp
clc
pop
call
movsl
xor
fildll
add
or
or
mov
xor
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
out
iret
lock
xchg
pusha
jmp
cld
cli
dec
clc
sbb
int3
imul
add
add
pop
cmp
lahf
mov
pusha
mov
sub
add
add
inc
out
pushf
mov
xchg
jnp
sbb
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
add
xchg
out
sar
jnp
sub
or
loope
sub
jg
jmp
sbb
mov
xor
push
or
daa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
and
sub
addl
add
lea
add
push
jge
push
push
pusha
popa
rdtsc
jbe
pop
pop
mov
xor
call
popa
jmp
sub
cmpsl
lods
jge
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
imul
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
sub
jmp
mov
pusha
call
mov
push
ret
cmc
pop
mov
popa
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
pop
sub
cwtl
or
sub
mov
jo
mov
cmpl
jne
mov
cmpl
je
mov
jmp
test
lea
sub
es
mov
or
mov
fildll
xor
sub
and
stos
or
xchg
cmp
or
push
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
dec
das
aad
movswl
push
push
push
push
jno
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
pop
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
decb
mov
shrl
xchg
popa
or
call
and
pop
mov
addl
inc
push
ret
mov
popf
sbb
fwait
or
mov
fildll
shlb
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
lds
fwait
or
xchg
xchg
and
push
call
and
pop
mov
addl
inc
push
ret
lahf
xor
mov
add
jmp
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
dec
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
sub
mov
movzwl
push
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
add
add
call
mov
xchg
jmp
arpl
xlat
xchg
push
mov
mov
add
add
add
leave
ret
mov
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
lods
adc
push
push
pop
movswl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
hlt
push
notl
push
fwait
or
xchg
imul
dec
setnp
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
int
jle
push
add
add
out
in
inc
pop
cmp
dec
cltd
icebp
testb
push
add
pop
pop
push
push
push
push
jb
pop
rdtsc
push
push
push
pop
rdtsc
push
pop
pop
pop
pop
pop
mov
movswl
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
aam
sub
jmp
stos
dec
fiadds
mov
mov
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
sti
rcl
push
std
push
fwait
or
clc
cmpl
je
jmp
imul
aad
cli
sbb
ficomps
push
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
mov
xor
mov
add
add
popf
mov
pop
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
es
dec
push
fwait
or
add
add
or
add
inc
xchg
lcall
and
test
ljmp
push
call
and
pop
mov
addl
inc
push
ret
daa
pop
mov
mov
mov
mov
and
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
mov
nop
push
push
push
push
rdtsc
pop
pop
pop
pop
push
push
jl
jb
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xorl
mov
jp
mov
popa
jge
mov
pusha
jp
xor
jmp
cmpsl
or
jbe
dec
mov
loopne
test
popa
push
pusha
or
popa
mov
push
jmp
jo
or
nop
inc
push
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
cmpsl
xchg
cmp
and
rolb
add
add
pop
ret
pop
mov
addl
inc
push
ret
sahf
inc
cmc
push
push
pop
push
jmp
pop
rcrl
sbb
jne
loop
inc
sbb
les
add
pusha
adc
mov
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
je
xchg
cld
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
lea
push
push
call
and
pop
mov
addl
inc
push
ret
je
mov
push
pop
insb
jns
addb
add
mov
call
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
stos
dec
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
fdivrl
test
fdiv
pusha
clc
mov
popa
push
ja
push
movzwl
pop
push
push
push
jmp
xor
imul
testb
fdiv
jmp
addb
add
push
push
rdtsc
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
call
mov
jmp
call
pop
sub
push
jb
jae
pop
movswl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
mov
mov
push
push
jmp
scas
movl
cwtl
and
pop
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ss
sahf
xor
push
call
or
dec
mov
adc
movswl
pop
mov
incl
jmp
mov
cltd
inc
fdivs
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sahf
ret
cmpsb
adc
add
add
pushl
call
jmp
cmc
mov
mov
out
mov
in
or
cmp
jae
mov
movzbl
pusha
sub
movzwl
popa
mov
jmp
das
imul
mov
add
insl
stc
mov
mov
mov
shr
mov
mul
sub
jns
mov
sub
mov
mov
jb
mov
jmp
pusha
mov
movzwl
popa
mov
mov
mov
add
sbb
add
mov
cmp
jae
mov
jmp
mov
mov
sub
and
je
andl
mov
mov
or
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xchg
jge
jle
xchg
or
fwait
or
add
stc
call
push
push
call
and
pop
mov
addl
inc
push
ret
aam
mov
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
adc
call
fnstcw
pop
and
inc
mov
jp
call
fwait
or
call
sbb
fwait
sbb
call
mov
pop
cld
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
jmp
add
add
mov
sub
mov
lods
xor
shr
add
sub
jne
mov
or
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
test
stos
mov
loope
popf
test
lea
add
add
add
and
pop
mov
addl
inc
push
ret
jmp
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
ret
test
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
fs
dec
mov
jmp
xchg
negl
fld
movb
sub
and
or
mov
push
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
jmp
mov
and
addb
add
mov
cmpl
je
pusha
add
mov
popa
cmpl
jbe
mov
pusha
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
test
jo
mov
or
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jbe,pn
in
push
jae
cs
jo
or
xor
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
nop
jbe
push
push
pusha
popa
rdtsc
jmp
mov
subb
jmp
in
adc
xchg
sahf
out
jb
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
popf
dec
inc
jb
mov
mov
popa
call
incl
pop
add
adc
add
bound
adc
xor
enter
sti
ret
inc
mov
test
add
add
popa
push
pusha
jno
jmp
jp
data16
jnp
rclb
popa
rdtsc
jmp
sub
out
cmpsl
jnp
adc
push
pop
pop
popa
mov
pusha
pusha
push
push
rdtsc
pop
pop
jbe
popa
push
push
push
push
rdtsc
pop
pop
rdtsc
jne
pop
pop
popa
mov
push
push
jmp
push
test
rdtsc
push
push
pusha
popa
rdtsc
push
pop
pop
pop
pop
pop
mov
pusha
jmp
lret
mov
jbe
test
cmpsb
push
jmp
test
push
incl
or
adc
push
push
call
and
pop
mov
addl
inc
push
ret
fnstcw
call
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
mov
shr
cld
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
iret
call
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbbb
call
add
add
add
xchg
mov
clc
loop
aaa
pop
sbb
movzwl
movl
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
push
jne
push
push
rdtsc
pop
pop
pop
push
pusha
push
push
push
pop
rdtsc
push
pop
pop
pop
pusha
push
pop
push
push
rdtsc
pop
pop
popa
popa
xchg
mov
pushl
mov
push
push
push
push
pusha
popa
pop
rdtsc
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
pop
xorl
pusha
mov
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jne
push
js
jae
jb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
xchg
imul
xchg
aad
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
std
ret
fmull
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
movl
jmp
xchg
xchg
jl
xchg
xchg
or
mov
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
cmc
fmulp
loopne
or
add
mov
repz
mov
add
fwait
or
jmp
add
loopne
mov
aas
push
mov
pop
jmp
sub
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cld
int3
aaa
cmp
or
add
xchg
jle
xchg
data16
addb
add
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
sub
adc
add
mov
add
test
add
add
stc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
mov
shrb
mov
xor
sub
call
and
pop
mov
addl
inc
push
ret
or
mov
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
or
dec
mov
mov
push
jno
push
push
push
push
rdtsc
pop
pop
rdtsc
jnp
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
sub
adc
add
dec
pushl
mov
mov
call
push
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
jmp
and
or
pusha
es
push
ljmp
les
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jl
in
xchg
das
dec
add
push
push
call
and
pop
mov
addl
inc
push
ret
fimull
sti
inc
or
jge
in
jbe
pusha
sub
popa
mov
mov
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
cmc
push
push
push
call
and
pop
mov
addl
inc
push
ret
jo
jmp
dec
shll
mov
pop
add
dec
or
mov
fildll
or
adc
add
add
add
and
pop
mov
addl
inc
push
ret
negb
int3
dec
or
push
push
push
jmp
mov
stc
call
lock
xchg
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
push
push
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jo
scas
lock
and
or
mov
add
test
add
mov
push
push
push
push
push
jmp
data16
into
dec
lcall
pop
pop
rdtsc
jmp
les
das
loope
xor
lds
fsubr
pop
pop
mov
mov
push
mov
pop
pushl
mov
call
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
test
jns
adc
add
fwait
repnz
loope
ljmp
pop
rclb
cltd
and
xchg
std
push
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
pop
cmpl
je
ja
push
or
pop
mov
mov
movb
mov
movl
mov
sub
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
int3
pop
mov
pop
popf
movswl
mov
jmp
pusha
jp
nop
test
xchg
int3
cmp
adc
fwait
or
push
push
push
jmp
dec
sbb
jle
lock
push
jmp
adc
fistpl
xor
push
pop
rdtsc
pusha
popa
pop
pop
pop
pop
push
push
push
jmp
cwtl
cld
popf
and
ror
pop
rdtsc
jmp
push
loopne
dec
jl
sub
ja
xchg
pop
pop
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
out
cmp
and
sbb
add
add
add
and
pop
mov
addl
inc
push
ret
jbe
add
movswl
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
mov
outsb
js
jmp
dec
icebp
sarl
int3
pop
inc
push
movsb
addb
jns
nop
jmp
mov
inc
or
jae
sub
pusha
push
push
jmp
repnz
inc
xor
xchg
fmulp
pop
cli
icebp
adc
xor
mov
add
add
jmp
or
cli
xor
pop
jmp
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
or
not
push
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
les
call
and
pop
mov
addl
inc
push
ret
lods
cmp
jge
movzwl
call
sub
movswl
cmpl
jne
adc
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
out
push
inc
iret
push
jmp
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jo
mov
mov
nop
pusha
jno
push
push
rdtsc
pop
pop
push
jmp
inc
or
ja
jno
cmp
popa
push
push
push
pusha
push
pop
push
pop
popa
rdtsc
jmp
add
stos
aam
sbb
push
push
adc
nop
jmp
cmp
add
rclb
call
xor
and
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
jns
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fsub
je
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
stos
inc
jge
nop
xchg
lods
xchg
inc
and
add
jl
pusha
popa
push
push
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
pop
ja
add
clc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
ret
mov
popf
or
jmp
pop
out
js
or
nop
mov
hlt
push
scas
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cli
inc
or
incl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
or
add
fildl
adc
mov
je
push
pop
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sti
out
adc
add
xchg
sub
mov
call
jmp
xor
mov
mov
sub
mov
out
jmp
push
das
mov
imul
xor
cmp
add
mov
movzbl
pusha
xor
sub
popa
mov
mov
mov
call
in
into
out
push
js
jne
mov
pop
shr
mov
jmp
sub
test
lea
dec
xor
push
gs
xor
mul
sub
sub
movzwl
mov
mov
call
or
leave
imul
add
sti
iret
inc
xchg
sbb
or
jmp
mov
mov
mov
add
mov
add
cmc
cmp
jae
mov
jmp
jmp
icebp
mov
pop
sub
movsl
sbb
cmpsl
or
sub
add
mov
mov
andl
xor
mov
mov
jmp
lea
pusha
sbb
mov
popa
push
call
or
mov
jmp
mov
leave
jb
and
push
push
call
and
pop
mov
addl
inc
push
ret
aad
mov
popf
cmp
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jmp
cmpsl
xor
xor
fxch
xor
shrb
push
call
and
pop
mov
addl
inc
push
ret
stc
dec
jg
jmp
push
jnp
jne
mov
mov
ret
add
sub
jne
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fwait
or
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
or
xor
lods
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
cld
daa
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
sub
pop
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
jmp
pop
mov
test
arpl
imul
add
add
add
and
pop
mov
addl
inc
push
ret
adc
cmpsl
and
dec
push
mov
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
testl
in
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jne
push
sub
aaa
movsb
sub
jmp
cmpl
je
cld
call
jmp
cmp
ljmp
jmp
jge
ljmp
sub
pop
fldpi
sub
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
in
in
push
cli
push
aaa
mov
cmpl
jbe
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
call
add
jmp
lret
inc
repnz
xor
rcrb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
sub
add
add
add
and
pop
mov
addl
inc
push
ret
sti
xchg
ret
or
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
xchg
add
inc
shlb
pusha
mov
add
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jae
insl
sbb
and
popa
sbb
call
and
pop
mov
addl
inc
push
ret
lahf
and
mov
push
push
push
jmp
pop
push
xor
stos
mov
repz
popa
js
rdtsc
pusha
jp
push
pop
popa
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
xchg
pop
sub
add
add
incl
pop
add
push
add
add
lea
sbb
add
in
or
mov
je
push
jl
pop
mov
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pusha
js
push
pop
popa
popa
mov
jmp
sub
loopne
cmp
add
leave
pop
push
push
call
and
pop
mov
addl
inc
push
ret
jle
and
add
xchg
aad
fwait
or
mov
enter
mov
push
movswl
pop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
cmc
jp
movzwl
mov
cmc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jns
and
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
or
sub
jmp
fisubl
outsb
lret
jb
mov
xchg
xlat
mov
mov
mov
mov
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
in
out
push
clc
rcrb
push
push
jbe
push
push
rdtsc
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
std
cmp
jle
popf
mov
mov
pushl
push
jp
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
addl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
or
adc
add
jg
jmp
xor
call
jo
jne
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
in
out
sbb
mov
call
mov
popa
clc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
imul
push
xchg
mov
cmovo
imul
inc
xchg
addl
push
dec
mov
add
or
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
adc
add
dec
outsl
jae
ds
aad
and
testl
icebp
and
or
jne
mov
cmpl
je
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
fildll
sbb
or
push
add
add
and
push
pusha
jno
jp
jmp
adc
jno
lds
bound
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
xor
add
mov
pushl
mov
mov
call
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
ds
dec
inc
mov
mov
sub
add
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
mov
fimuls
popf
stc
or
pushf
hlt
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
mov
sbb
or
or
add
wbinvd
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
clc
sete
add
add
mov
xchg
inc
lcall
fildll
add
pop
rcll
jae
dec
inc
dec
sub
and
mov
out
faddl
or
xchg
adc
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
icebp
mov
push
push
push
jae
jnp
rdtsc
push
push
jle
rdtsc
jmp
inc
js
adc
mov
jnp
lods
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
pushl
sbb
call
sbb
cmpl
je
mov
xchg
push
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
push
jl
jl
push
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
fwait
or
mov
fildll
call
and
pop
mov
addl
inc
push
ret
jmp
call
js
call
add
cs
xor
andl
cmp
lds
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
data16
jne
ja
mov
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
mov
nop
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
js
mov
mov
movb
movswl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
add
adc
stos
stc
movswl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
sub
xor
testl
push
push
call
and
pop
mov
addl
inc
push
ret
testb
lea
push
push
call
and
pop
mov
addl
inc
push
ret
popf
or
mov
push
jmp
fldl
jecxz
inc
das
es
xlat
mov
jmp
pop
add
sub
push
mov
sbb
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sub
stc
mov
add
add
add
add
and
pop
mov
addl
inc
push
ret
stos
mov
mov
mov
nop
push
push
push
pusha
popa
pop
rdtsc
jmp
gs
push
flds
pop
bswap
pop
pop
push
jmp
shlb
xchg
stos
dec
test
jl
imul
add
add
add
and
pop
mov
addl
inc
push
ret
test
jmp
pop
and
or
je
jb
sub
popa
push
jmp
cmc
movb
mov
adc
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
or
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
negl
inc
les
shrl
push
call
and
pop
mov
addl
inc
push
ret
jp
shll
ss
sbb
or
jne
jae
mov
cmp
je
mov
push
mov
nop
jmp
jmp
jecxz
les
adc
push
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
jmp
cli
mov
jecxz
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
out
shrl
add
call
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
dec
dec
popf
pusha
mov
mov
popa
jmp
fiadds
mov
mov
das
jno
adc
add
or
cltd
repnz
shl
and
mov
in
fisttpll
pop
lea
jmp
decb
xor
hlt
mov
out
lods
add
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
pop
mov
pop
popf
mov
sub
xor
and
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pushl
add
mov
pusha
push
call
cld
sahf
sbb
pop
pop
mov
popa
incl
mov
push
jmp
movsl
repz
sub
cmp
sub
jne
fwait
or
call
jmp
jp
mov
mov
call
dec
xchg
ja
aad
mov
pop
out
cmc
in
mov
cmp
jae
mov
call
lcall
or
repnz
loopne
inc
je
jmp
aam
xchg
fisttpl
dec
jae
xchg
lret
mov
jno
mov
mov
mov
mov
and
shr
sub
mul
mov
sub
mov
mov
mov
jg
mov
jmp
mov
mov
cmc
add
stc
add
mov
cmp
jae
xor
jmp
mov
mov
mov
and
je
mov
movswl
andl
mov
mov
mov
movswl
sub
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
stc
pop
or
adcl
sti
push
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmpb
xchg
adc
or
data16
add
push
call
and
pop
mov
addl
inc
push
ret
fld
in
rcr
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
cmp
lods
mov
cld
cld
push
push
call
and
pop
mov
addl
inc
push
ret
divb
jnp
fs
push
or
add
call
push
pop
mov
lret
sub
js
adc
fcoms
fwait
or
sub
push
push
call
and
pop
mov
addl
inc
push
ret
lea
push
fdivs
lret
iret
inc
pusha
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
mov
mov
call
and
pop
mov
addl
inc
push
ret
pusha
adc
call
push
fwait
or
stc
or
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
orl
xchg
and
push
call
and
pop
mov
addl
inc
push
ret
jae
int3
popa
imul
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
daa
or
push
push
call
and
pop
mov
addl
inc
push
ret
test
ljmp
pop
jmp
mov
mov
or
ljmp
push
fwait
or
je
mov
jno
push
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
stos
mov
and
jmp
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
fmull
jmp
dec
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
icebp
and
or
jbe
mov
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
lock
test
add
add
dec
mov
and
pusha
jl
and
popa
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
sarl
jnp
outsb
cmpsl
xor
popf
movsl
and
or
call
and
pop
mov
addl
inc
push
ret
fdivrp
mov
loop
test
fwait
or
mov
sub
push
push
jmp
sahf
and
andl
aam
mov
push
push
call
and
pop
mov
addl
inc
push
ret
data16
cmpsl
cmp
or
add
or
mov
add
popa
push
push
push
push
push
jp
rdtsc
jne
pop
pop
rdtsc
jmp
mov
in
jbe
je
xor
movsb
addl
addl
push
push
call
and
pop
mov
addl
inc
push
ret
popa
jmp
push
mov
pop
call
call
mov
mov
pop
sbb
repz
test
addl
stc
or
add
mov
mov
movl
xor
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
je
int
daa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
jnp
mov
add
sub
movsb
inc
and
push
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
or
dec
adc
call
lock
mov
cli
lea
mov
push
push
push
pusha
popa
pop
rdtsc
jle
push
push
rdtsc
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
mov
ds
sub
mov
fildll
add
sahf
jl
insb
jne
mov
mov
push
pusha
push
push
jns
rdtsc
push
push
rdtsc
pop
pop
pop
pop
jmp
mov
mov
push
popf
inc
out
mov
popa
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
loope
add
out
sbb
and
add
add
outsl
mov
push
jmp
push
fcomps
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
add
sbb
push
add
add
mov
call
push
push
or
mov
repz
inc
mov
push
or
add
xor
movl
xchg
aad
fwait
or
fisttps
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
aad
mov
add
test
add
add
test
add
add
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sti
push
sub
outsb
test
popa
add
fstpt
adc
inc
adc
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
and
sub
cmpl
jne
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
fimuls
test
mov
fildll
or
insl
sub
and
stos
or
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
addr16
jne
add
xchg
pusha
jmp
loopne
shr
repnz
xchg
dec
dec
popf
andl
pushf
push
jmp
mov
mov
add
push
out
fisubrs
fcomp
pop
popa
push
pusha
push
push
pusha
popa
rdtsc
push
pop
pop
pop
pusha
push
push
rdtsc
pop
pop
js
popa
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
mov
push
adc
sbb
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jle
ss
mov
in
fisttpll
movsl
sti
dec
std
shr
popa
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
dec
sti
aaa
and
xchg
jmp
xor
pop
lcall
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
repnz
or
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
sub
mov
pusha
push
mov
pop
xor
popa
add
push
sbb
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
xchg
iret
xor
or
fimuls
add
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jmp
dec
jp
stc
adc
int
fstl
jbe
pusha
inc
xlat
pop
push
push
call
ds
push
adc
pop
pop
or
dec
ds
jl
aam
pop
pushl
or
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
pusha
jmp
ljmp
pop
pop
popa
push
jmp
sahf
testb
add
pop
call
add
add
and
pop
mov
addl
inc
push
ret
fwait
shlb
inc
jns
insl
mov
pushl
jmp
mov
and
mov
xchg
imul
push
call
and
pop
mov
addl
inc
push
ret
sbb
fwait
or
popf
mov
mov
add
add
or
mov
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
aam
fbstp
xor
pusha
push
pop
pusha
popa
popa
pop
push
pusha
jbe
jmp
sahf
test
rcrb
clc
xor
mov
mov
push
jmp
roll
xor
rcr
fxch
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
into
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
inc
add
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
fildl
sub
add
add
add
and
pop
mov
addl
inc
push
ret
arpl
dec
mov
push
add
add
mov
jle
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
pop
aam
aad
xchg
mov
add
add
adc
add
push
addr16
fsubrl
test
mov
push
aaa
cmp
adc
pop
jmp
shll
mov
add
test
add
add
add
xlat
arpl
add
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
sahf
mov
dec
push
fwait
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
cli
mov
sub
jmp
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
or
or
add
mov
or
mov
adc
and
adc
xchg
aad
fwait
or
lea
jmp
in
jbe
cmp
test
dec
cmc
mov
and
nop
push
push
push
jmp
fwait
add
rdtsc
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
pop
push
pusha
jmp
dec
and
clc
aaa
divl
jmp
jae
xchg
sti
mov
nop
jno
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
addl
xor
adc
fwait
or
add
push
call
and
pop
mov
addl
inc
push
ret
add
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xlat
xchg
dec
data16
rolb
add
add
pop
ret
pop
mov
addl
inc
push
ret
cwtl
add
orb
push
add
add
or
push
push
pusha
push
pop
push
push
rdtsc
pop
pop
popa
rdtsc
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
pop
mov
sub
push
or
push
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
xchg
in
repnz
call
xchg
adc
sbb
sbb
add
add
xchg
out
inc
ja
pop
lea
push
mov
pop
call
stc
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
inc
and
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
andl
push
push
call
and
pop
mov
addl
inc
push
ret
ja
mov
jns
jb
xor
clc
nop
push
push
push
push
jne
rdtsc
pusha
popa
pop
pop
rdtsc
push
jmp
inc
test
loope
aam
xchg
pop
pop
push
push
push
js
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
nop
inc
push
xor
push
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
add
push
sldt
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
or
and
jmp
test
push
mov
lea
add
nop
jmp
outsb
rsm
ss
das
adc
in
push
push
push
push
jmp
in
flds
pop
rdtsc
pusha
jp
pusha
popa
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
out
jns
add
add
add
or
pushl
call
sbb
sbb
out
mov
xchg
jo
mov
pop
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jle
call
cmp
cld
mov
adc
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xor
pushl
add
call
jmp
push
mov
pop
mov
jl
add
out
call
int3
fadds
shlb
orl
cwtl
xchg
pop
in
cmp
jae
mov
jmp
xchg
xchg
xchg
cmp
mov
nop
es
lcall
push
add
add
or
push
add
add
or
popf
loope
fwait
or
roll
shr
mul
pusha
mov
mov
popa
sub
mov
mov
jmp
js
pop
lds
jmp
mov
jle
mov
add
pusha
jmp
fisubl
xchg
and
sub
lods
lret
add
add
push
pop
popa
push
sub
pop
add
sub
cmp
jae
jmp
mov
mov
mov
mov
and
je
jns
mov
andl
pusha
call
ljmp
mov
test
arpl
imul
lds
fwait
or
mov
popa
jp
mov
mov
mov
jmp
lea
push
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
call
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
push
call
and
pop
mov
addl
inc
push
ret
jp
andb
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
popf
jl
sti
lret
sbb
fwait
or
shr
adc
add
fmull
push
lcall
jp
push
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
xorl
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
bound
pop
jnp
xchg
xchg
and
lods
add
add
ds
add
lea
add
add
add
and
pop
mov
addl
inc
push
ret
outsb
shrl
sbb
imul
mov
mov
add
mov
mov
shr
add
mov
pop
xor
clc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
add
cltd
jmp
outsl
loope
mov
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
daa
xchg
popf
test
or
add
add
add
and
pop
mov
addl
inc
push
ret
fsubr
adc
add
pop
jg
shr
jecxz
push
stc
pop
adc
cmpsb
addr16
and
jmp
mov
cmpl
je
add
sub
cmpl
je
movzwl
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
sub
pop
inc
in
jne
jae
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
fldenv
xor
into
mov
movzwl
and
and
or
je
mov
push
jo
ja
pop
mov
mov
xor
mov
nop
jmp
mov
add
imul
add
pusha
jnp
push
push
rdtsc
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
testb
push
dec
push
push
push
call
and
pop
mov
addl
inc
push
ret
fisubrl
sbb
pushf
inc
cmp
mov
mov
call
incl
pop
add
push
push
rdtsc
pop
pop
pop
pop
push
jmp
jno
push
jge
inc
xchg
scas
call
mov
inc
push
or
push
push
jae
rdtsc
push
pop
pop
pop
jle
push
push
rdtsc
pop
pop
popa
mov
push
push
pusha
jne
jmp
xor
inc
adc
xor
or
add
mov
pop
ficoml
out
arpl
lods
pop
pop
pop
mov
jmp
out
inc
gs
mov
adc
pop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
stc
push
jmp
in
in
dec
mov
mov
xchg
dec
sbb
push
fwait
or
xchg
aad
fwait
or
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
data16
xchg
mov
fwait
or
mov
add
add
push
call
and
pop
mov
addl
inc
push
ret
inc
push
sbb
stos
or
mov
movl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
call
pop
std
dec
xchg
mov
xor
lret
xor
jae
or
lea
add
add
mov
pop
mov
mov
mov
mov
mov
mov
cld
mov
and
xchg
pusha
jmp
mov
inc
es
fnstcw
in
mov
mov
push
rdtsc
pop
pop
popa
popa
push
push
push
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
rdtsc
jmp
jl
mov
fstps
in
pop
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jmp
leave
jae
mov
fucomip
fwait
add
loopnew
aad
mov
call
incl
pop
add
mov
add
add
adc
add
mov
pop
lahf
int3
enter
into
xchg
jne
scas
lcall
add
add
gs
iret
mov
add
adcl
add
push
push
push
push
rdtsc
pop
pop
rdtsc
ja
pop
pop
mov
push
push
pusha
push
pop
jmp
out
scas
cmpsb
scas
ja
push
into
out
mov
push
mov
rdtsc
jg
jmp
mov
ds
mov
push
pop
aam
push
inc
jle
pop
pop
mov
pusha
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
jle
jmp
inc
dec
roll
sar
cmp
or
mov
pop
mov
lea
jno
or
nop
jmp
ja
inc
inc
andl
arpl
xor
and
push
jmp
test
mov
orl
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
notb
push
add
mov
call
mov
popa
add
jmp
inc
mov
gs
push
test
and
or
add
add
xchg
sbb
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jg
pusha
mov
mov
popa
mov
add
cmpl
je
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
insl
pop
fistpll
mov
call
mov
jg
sub
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
std
ljmp
xchg
jno
fwait
or
adc
add
out
fisubrs
fcomp
aas
and
jg
sbb
add
pusha
mov
pop
xchg
push
push
jmp
jmp
in
rdtsc
push
push
pop
pop
pop
pop
push
je
push
push
jl
rdtsc
jbe
pop
pop
xchg
add
mov
pushl
mov
call
or
stc
mov
push
jmp
icebp
xchg
and
ret
add
divb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cs
add
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
scas
push
incb
leave
jp
or
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
xor
or
mov
movswl
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
call
lret
xor
es
push
les
lds
ret
pop
call
adc
mov
fildll
call
jb
add
xchg
jno
push
push
jno
rdtsc
jmp
sub
js
out
xor
mov
push
jno
push
push
rdtsc
pop
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
dec
fists
push
jge
pusha
popa
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jge
jno
psrld
xchg
imul
test
fwait
or
popa
pusha
mov
mov
popa
cmpl
je
push
sub
pop
xchg
pusha
push
push
pop
pop
ja
push
push
rdtsc
pop
pop
popa
push
push
push
push
jmp
imul
inc
xchg
addl
add
cltd
and
cmc
cmovnp
adc
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
mov
outsb
sbb
sub
pop
add
add
ja
push
mov
popf
daa
fwait
or
stc
call
add
pushl
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
imul
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
adc
ret
xchg
shrb
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
pop
test
dec
cmc
pusha
call
and
mov
xchg
ret
sti
dec
orps
pop
jmp
mov
es
adc
popa
movb
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
mov
push
sub
pop
movl
jg
clc
jmp
mov
mov
cmc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
lods
int
pop
movl
std
lcall
loop
jo
jmp
xchg
sti
add
int
mov
sahf
nop
pop
and
xchg
add
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
loopne
mov
fwait
or
xchg
push
mov
lea
mov
add
mov
push
pusha
pusha
jmp
push
jnp
scas
stos
pop
pop
push
push
rdtsc
pop
pop
popa
push
pusha
popa
pop
popa
mov
sub
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
imul
push
jge
call
add
jmp
pusha
pop
negb
lea
xchg
or
add
add
add
and
pop
mov
addl
inc
push
ret
cmc
mov
xor
and
aad
jmp
js
or
or
rcll
xchg
into
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jne
add
push
add
add
and
cli
mov
rol
sub
inc
ljmp
shrl
push
call
and
pop
mov
addl
inc
push
ret
mov
in
sbb
sbb
or
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
xor
movswl
cmp
je
push
push
push
call
and
pop
mov
addl
inc
push
ret
out
pop
notb
dec
sub
sbb
jmp
clc
cld
jge
cwtl
movsl
sub
daa
and
or
xchg
push
push
push
push
jno
rdtsc
jmp
jae
insl
sbb
and
in
pop
pop
mov
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fdivrp
mov
push
push
fwait
or
mov
jmp
call
pop
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
int3
jmp
fmulp
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
dec
or
jno
add
mov
nop
jmp
pop
lea
jns
dec
push
push
push
jle
jmp
inc
sbb
cmp
xor
adc
add
out
jae
dec
cmp
push
sbb
stc
mov
adc
add
pop
or
pop
sub
pop
fisubrs
pusha
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
test
lret
stc
rorl
or
pushl
mov
mov
mov
incl
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
or
popf
add
or
xchg
stc
sub
add
movswl
mov
call
mov
in
jnp
mov
fimuls
mov
pop
out
mov
in
sub
mov
cmp
jae
mov
movzbl
push
mov
pop
mov
or
mov
mov
shr
jmp
jnp
mov
xchg
mul
mov
sub
jno
mov
push
mov
pop
jmp
mov
mov
mov
add
add
mov
sub
cmp
jae
mov
jmp
jno
mov
mov
mov
and
je
movswl
andl
cmc
mov
jle
mov
jmp
lea
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
test
sarb
fwait
or
xchg
jge
fwait
or
mov
mov
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
dec
push
adc
or
add
cmpsb
pusha
cmp
icebp
outsb
addr16
push
push
call
and
pop
mov
addl
inc
push
ret
nop
loope
pop
cmp
sub
mov
sub
movswl
lods
xor
shr
add
sub
jne
jmp
scas
movsl
pusha
xchg
mov
cmp
add
add
pop
ret
pop
mov
addl
inc
push
ret
aam
rorb
int
mov
add
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lock
std
jp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
inc
sbb
in
dec
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
outsl
nop
inc
mov
jecxz
sub
cmpl
je
cld
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
and
or
popf
adcl
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
loop
subb
sub
mov
add
test
add
add
fmuls
or
mov
add
xchg
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
xchg
andb
lea
adc
add
mov
sbbb
imul
fstl
cwtl
cwtl
out
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
sbb
pop
out
or
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
jmp
xchg
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
das
add
add
add
movswl
pusha
mov
xor
popa
xor
movswl
nop
push
push
jmp
stc
fistl
mov
rdtsc
pusha
push
pop
pusha
popa
popa
pop
pop
push
jmp
ja
inc
repz
push
push
call
and
pop
mov
addl
inc
push
ret
adc
xlat
sub
add
add
incl
pop
add
pusha
popa
pusha
popa
popa
pop
push
jge
pusha
push
pop
jmp
fbstp
mov
inc
lock
icebp
sub
mov
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
ja
jmp
pop
adc
cmp
push
pop
pop
mov
push
push
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
mov
jmp
push
cli
shlb
pushf
bound
push
push
call
and
pop
mov
addl
inc
push
ret
fstps
mull
call
push
push
call
and
pop
mov
addl
inc
push
ret
sti
push
xor
cmp
mov
ret
orb
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
pusha
push
cmp
sbb
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
outsb
mov
movl
push
mov
pop
mov
jmp
stc
mov
in
xchg
out
mov
push
sub
xor
push
mov
mov
mov
js
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
mov
popa
jl
mov
sub
mov
mov
xchg
jge
jmp
cmpsl
xchg
fcoms
adc
push
pusha
push
jmp
scas
popf
and
dec
shr
cmp
lods
mov
jnp
pusha
popa
popa
xchg
sub
stc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
nop
jge
mov
setnp
stc
fidivrl
pop
rdtsc
jl
pop
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lea
or
push
push
push
pusha
push
pop
jle
popa
rdtsc
push
push
push
rdtsc
pop
pop
pop
pop
pop
mov
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
movsw
sub
xor
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xor
movl
sub
jb
mov
cmpl
je
or
pusha
push
pop
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lds
add
or
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
or
pop
cmpl
jne
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fildll
call
and
pop
mov
addl
inc
push
ret
xchg
cwtl
arpl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
inc
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
rcll
mov
pop
push
pusha
push
jmp
das
aad
mov
imul
inc
pop
jmp
ljmp
xchg
repz
stc
std
arpl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sbb
lock
adc
adc
add
popa
dec
mov
das
cltd
ret
pop
xchg
sub
or
pop
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sub
mov
mov
mov
je
push
sbb
pop
mov
ja
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
xor
and
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fs
sbb
pushf
hlt
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
inc
or
adc
mov
pusha
and
mov
popa
popa
xchg
push
push
push
jbe
pop
rdtsc
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
pop
push
pusha
jmp
mov
pusha
jmp
pop
mov
add
inc
push
shr
cwtl
jb
pop
add
add
add
xchg
pusha
mov
add
popa
pushl
push
or
pop
call
pusha
mov
jmp
lds
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
ds
or
inc
mov
adc
adc
add
std
orb
jge
pushl
faddp
sub
mov
jp
xor
pushl
mov
call
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
test
add
aas
std
sbb
xchg
push
arpl
xchg
std
push
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
push
sbb
mov
push
or
pop
cmpl
je
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
popa
jo
pusha
call
mov
popf
scas
fs
fucomi
in
pop
pop
jne
add
popa
movb
push
push
call
and
pop
mov
addl
inc
push
ret
insl
cmp
jno
stc
or
movl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lds
dec
and
add
push
mov
pop
mov
mov
jbe
mov
lea
mov
push
push
push
jmp
push
iret
syscall
leave
dec
test
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
rcrl
cmc
jmp
jnp
fst
test
push
adc
aaa
or
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
inc
ss
stos
mov
add
push
call
and
pop
mov
addl
inc
push
ret
or
lea
or
add
mov
nop
pusha
push
push
pop
pop
push
js
pop
popa
push
pusha
push
pusha
popa
pop
push
jmp
mov
mov
sub
mov
sti
pop
popa
nop
jl
call
insl
cmpsb
std
mov
mov
add
add
add
push
call
and
pop
mov
addl
inc
push
ret
fcomps
popf
inc
sbb
sub
xchg
or
add
add
add
and
pop
mov
addl
inc
push
ret
insl
adc
pusha
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
pop
adc
mov
orb
add
pusha
movzwl
mov
popa
call
pusha
and
mov
popa
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sub
or
clc
add
test
push
mov
pop
mov
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
bound
pop
pop
lahf
int3
enter
lds
jmp
jae
shrb
lahf
pop
pusha
push
ret
xlat
pop
push
jmp
rclb
aam
das
jnp
sarb
ja
push
call
and
pop
mov
addl
inc
push
ret
mov
add
mov
call
jmp
fs
in
inc
mov
mov
add
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
lods
and
or
inc
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
add
push
je
pop
rdtsc
pusha
pusha
popa
pusha
popa
popa
pop
pop
push
pusha
push
jns
pop
jmp
shl
xor
sbb
inc
ret
add
popa
nop
call
sub
pop
pop
mov
pusha
mov
mov
popa
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
inc
arpl
mov
incl
jg
movzwl
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
imul
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
sbb
mov
call
jmp
mov
mov
mov
jmp
mov
in
jnp
mov
fimuls
out
mov
in
clc
cmp
jae
mov
movzbl
pusha
jmp
and
in
xorl
popa
mov
add
mov
mov
shr
mov
mul
mov
sub
add
mov
add
and
jmp
ja
mov
mov
add
jmp
mov
idivb
and
add
mov
cmp
jae
je
movswl
jmp
jmp
lea
push
mov
mov
mov
aam
mov
mov
or
and
je
mov
andl
mov
call
pop
pushf
aas
or
jno
mov
pop
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
je
mov
mov
push
push
mov
pop
jbe
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
clc
jge
jmp
inc
adc
cli
xchg
scas
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
aam
or
ja
xchg
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
shrb
call
and
pop
mov
addl
inc
push
ret
out
add
add
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jae
test
or
or
or
push
push
call
and
pop
mov
addl
inc
push
ret
aad
fsubl
and
mov
add
add
in
pushl
inc
andb
jmp
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
push
cli
cmp
pop
push
mov
add
xchg
pusha
xchg
adc
test
lea
add
add
add
and
pop
mov
addl
inc
push
ret
andl
cwtl
les
jl
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
out
or
add
ja
jmp
addr16
inc
leave
jmp
lcall
int
mov
sbb
mov
add
add
or
mov
add
test
add
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
push
mov
pop
lea
sub
jmp
call
dec
addb
sbb
and
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
xlat
popa
cld
mov
jg
pop
sub
cmpl
je
mov
cmpl
jbe
mov
pusha
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lea
loope
call
js
jg
push
mov
sub
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
fwait
or
adc
add
subl
out
sbb
mov
mov
push
jmp
insb
iret
scas
lods
mov
int
pop
push
or
mov
xor
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
call
incl
pop
add
jmp
jle
and
fucomip
jmp
inc
nop
in
ret
repz
popa
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
push
push
push
jmp
mov
pop
pop
cmp
idivl
jnp
call
pop
mov
jmp
bound
and
cltd
mov
testl
mov
jmp
ss
das
adc
in
pusha
inc
loopne
mov
push
jmp
adc
enter
and
cwtl
pop
pop
js
call
call
push
xchg
out
and
pop
jge
pop
jno
test
loop
or
int
cmp
mov
jmp
clc
push
dec
aaa
jo
sub
xor
cmp
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
push
test
test
add
add
add
and
pop
mov
addl
inc
push
ret
mov
dec
push
mov
xor
add
add
add
push
call
and
pop
mov
addl
inc
push
ret
icebp
in
pusha
mov
pop
call
mulb
and
lea
xchg
adc
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
shll
or
jmp
mov
mov
jbe
popf
adc
mov
or
or
iret
fimuls
sub
adc
dec
or
add
shrl
mov
icebp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cpuid
jmp
test
push
xchg
jmp
xor
mov
sbb
outsl
cmp
je
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
scas
cmpsl
mov
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
cmpb
push
pop
mov
pushl
pusha
call
sbb
inc
out
mov
push
popf
inc
out
mov
pop
sub
popa
mov
push
push
push
push
push
pop
rdtsc
push
pop
pop
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
test
mov
nop
push
push
pusha
push
pop
push
push
rdtsc
pop
pop
popa
rdtsc
push
push
push
rdtsc
pop
pop
pop
pop
pop
push
jmp
outsl
xor
movswl
call
sub
popa
mov
movl
jmp
les
cli
shll
jmp
jl
insl
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
sbb
popf
xchg
mov
and
add
stc
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
sub
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sub
fiaddl
xchg
insl
or
and
sub
je
movzwl
pushl
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
int3
bound
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
ucomiss
jns
push
add
add
mov
xchg
jns
pusha
push
pop
pusha
popa
popa
push
jns
jmp
push
xor
dec
fs
dec
inc
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
push
lods
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
dec
push
std
jmp
cmp
cwtl
jecxz
sub
or
xchg
popa
or
test
mov
fildll
add
frstor
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
imul
mov
add
and
add
add
lods
mov
pop
add
pusha
jb
call
push
cmp
jmp
jmp
enter
pop
mov
popa
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
inc
or
lret
xor
mov
xor
je
jmp
rep
in
xchg
mov
add
popf
lds
sub
add
add
add
and
pop
mov
addl
inc
push
ret
or
mov
push
fwait
or
xchg
adc
xchg
std
sbb
or
jne
push
jmp
lock
jns
adc
pand
fcompl
push
pop
pusha
popa
popa
pop
xchg
mov
pushl
mov
call
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
xchg
jmp
mov
push
jmp
xchg
mov
dec
cmp
xchg
jmp
loope
test
stos
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
jmp
push
dec
jo
pop
jge
aad
dec
jae
stc
call
adc
pushl
jbe
movswl
stc
call
push
mov
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mul
into
lret
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
stc
mov
call
testl
sti
lea
add
mov
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
lret
jecxz
outsl
add
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jne
push
leave
das
lea
mov
push
push
push
push
jne
rdtsc
pusha
popa
pop
pop
pop
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
mov
push
sub
lea
push
mov
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
jb
iret
outsb
xchg
leave
mov
add
add
or
add
xchg
sub
cmp
sub
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
stos
or
popf
cmc
or
popf
popf
adc
jmp
or
test
add
add
jno
clc
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
fs
les
pop
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
inc
testl
loopne
sbb
add
and
push
add
imul
push
stc
pop
push
jnp
push
jmp
ljmp
pop
rclb
add
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sbb
cmp
or
sbb
xchg
mov
fwait
or
jmp
cmp
pop
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
enter
mov
push
add
add
pop
add
in
dec
adc
push
call
and
pop
mov
addl
inc
push
ret
jae
adc
repnz
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
add
pop
mov
cmp
push
mov
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insl
subl
addb
add
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
jle
jbe
inc
mov
in
xor
add
add
add
incl
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
inc
aad
pop
mov
jp
sti
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
pusha
mov
jmp
inc
test
nop
popa
call
jmp
jbe
xor
movzwl
mov
sub
jle
mov
out
mov
in
mov
cmp
jae
mov
movzbl
pusha
pusha
mov
sub
popa
add
popa
mov
mov
movzwl
mov
jmp
aam
aam
ficomps
pop
cld
fstpl
call
cld
sub
mov
mov
mov
pusha
mov
pusha
call
push
mov
filds
jecxz
test
pop
sub
popa
popa
jmp
mov
mov
add
add
mov
adc
add
sub
jmp
das
int3
js
decl
and
arpl
rorb
orl
dec
or
add
mov
mov
mov
and
je
sub
andl
mov
stc
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
repz
push
jmp
adc
test
xor
xchg
imul
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
sub
dec
outsb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
add
add
and
pop
mov
addl
inc
push
ret
pop
fidivl
mov
sub
pusha
jmp
xchg
shlb
rcll
push
mov
pop
popa
sub
ja
mov
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
fstpl
popa
bound
aaa
test
or
jmp
gs
and
sbb
jmp
and
push
call
and
pop
mov
addl
inc
push
ret
xorl
add
lret
js
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
in
imul
add
add
push
mov
mov
add
mov
mov
shr
add
mov
pop
jns
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
aas
and
hlt
adc
lahf
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
mov
and
lea
mov
jmp
mov
cmpl
je
jno
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
shrb
add
mov
sti
xchg
or
je
cmc
ret
pop
jne
jmp
xchg
and
dec
daa
push
jl
cmpl
jbe
add
mov
pusha
jmp
scas
inc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
push
je
pusha
mov
popa
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
sub
test
pop
sub
adc
add
mov
divb
xchg
xchg
mov
push
cwtl
mov
nop
jmp
sar
adc
push
jle
push
jmp
adc
daa
ja
sub
jns
mov
push
cmc
call
incl
pop
add
mov
add
add
pop
push
pusha
jne
push
pop
pusha
pusha
popa
jmp
inc
inc
push
cld
arpl
mov
push
pusha
push
pop
jb
popa
pop
mov
push
push
push
push
rdtsc
pop
pop
pop
pop
mov
pusha
jmp
test
push
push
push
push
push
rdtsc
pop
pop
pop
popa
pop
push
pusha
jmp
loope
jnp
lods
or
push
gs
pop
lods
inc
mov
popa
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
rclb
fisubs
test
mov
push
add
add
or
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
insb
stos
mov
movl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
test
add
add
add
and
pop
mov
addl
inc
push
ret
or
iret
jmp
ret
int
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insb
mov
pop
sbb
mov
mov
mov
mov
push
jmp
xlat
adc
and
add
add
add
and
pop
mov
addl
inc
push
ret
sub
hlt
dec
pushl
clc
mov
push
push
pusha
jmp
int3
pop
jne
dec
push
pop
popa
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
xor
test
sub
dec
je
jmp
xchg
dec
sbb
imull
dec
push
push
push
jle
pusha
popa
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
fwait
movups
push
std
adc
pop
pop
pop
nop
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
ljmp
add
add
add
and
pop
mov
addl
inc
push
ret
shr
jecxz
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
daa
add
fwait
lret
loope
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
loop
sbb
push
or
jmp
jnp
jle
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
xor
ja
mov
jmp
push
jnp
in
arpl
mov
pop
loopne
sbb
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
repz
dec
push
sarb
sub
sub
je
push
push
call
and
pop
mov
addl
inc
push
ret
rclb
mov
fwait
or
mov
or
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
das
push
adc
pop
pop
or
dec
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jb
mov
loope
out
mov
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
mov
pop
jb
mov
push
pusha
js
push
pop
pusha
push
push
rdtsc
pop
pop
jmp
adc
adc
popa
popa
mov
jns
push
jmp
in
inc
pop
cmp
dec
cltd
icebp
testb
ja
push
pop
imul
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
add
mov
mov
and
popa
call
mov
jmp
xchg
pop
lods
loopne
add
frstor
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
sbb
cwtl
jb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fimuls
xchg
and
push
call
and
pop
mov
addl
inc
push
ret
pop
sub
aam
ret
mov
and
addb
add
mov
lea
add
mov
sub
push
or
pushl
push
mov
pop
call
and
push
jne
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
mov
mov
pushl
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmpl
jmp
lret
ss
mov
shr
mov
imul
lds
or
je
jmp
sbb
lods
pop
and
mov
faddl
jbe
jmp
xor
ljmp
mov
test
push
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
mov
add
add
lret
push
mulb
lea
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
mov
mov
pushl
push
jge
cmc
pop
call
and
cmpl
je
mov
mov
push
xor
pop
movb
sbb
movzwl
movl
add
jp
pusha
jmp
xchg
jb
fisttpll
mov
repz
ljmp
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
daa
ja
sub
cmp
pop
lea
jno
jmp
xor
dec
les
int3
xor
pusha
jmp
mov
repnz
adc
xchg
pop
jns
das
lods
mov
add
add
rdtsc
pop
pop
popa
popa
push
jmp
ss
loopne
jnp
popa
gs
sbb
mov
pusha
mov
ja
mov
popa
push
sub
push
call
xchg
repz
stc
std
arpl
or
lea
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cld
jnp
bound
or
jmp
gs
pop
dec
cmp
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
in
lods
std
movnti
add
mov
add
insl
stc
sbb
les
gs
popa
pop
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sbbl
or
jecxz
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
psubsw
add
add
js
mov
dec
sub
jae
roll
add
push
push
call
and
pop
mov
addl
inc
push
ret
jae
shrb
lahf
movswl
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
gs
pcmpgtw
mov
pop
nop
jne
push
push
jmp
lahf
mov
stos
pop
sbb
decl
jg
sbb
rdtsc
pusha
popa
pop
pop
push
jmp
xchg
pop
push
and
jo
loop
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
pusha
push
jmp
outsl
call
push
sbb
push
push
pop
mov
popa
pusha
adc
mov
popa
jmp
call
pop
sub
jb
push
and
pop
jo
mov
lea
cld
push
push
push
pusha
pusha
popa
jae
popa
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
clc
mov
add
add
test
xor
call
and
pop
mov
addl
inc
push
ret
stc
pop
movsl
pop
mov
add
es
push
jmp
loope
adc
add
cmp
push
ret
mov
xchg
stc
std
arpl
popf
cmc
or
add
add
add
and
pop
mov
addl
inc
push
ret
stos
addr16
outsl
jle
enter
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
les
mov
mov
push
or
pop
call
jmp
sub
mov
jp
out
or
in
jmp
aaa
mov
aad
js
sub
popa
jae
mov
jmp
inc
pop
sbb
test
les
jle
imul
enter
add
add
mov
mov
and
mov
stc
shr
js
jge
mov
mul
call
stos
loop
in
aas
jo
mov
pop
sub
mov
mov
call
stos
ss
das
adc
in
pusha
inc
loopne
fidivl
sub
jmp
pusha
mov
xor
popa
mov
jmp
mov
xor
rolb
or
add
or
rorb
orl
add
movswl
jmp
mov
mov
call
add
es
mov
and
pop
mov
and
je
andl
jmp
hlt
lods
pop
lock
int
insb
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jmp
and
das
cmc
cmc
ret
adc
lock
xor
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
call
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns,pt
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
frstor
add
add
movsb
pusha
popf
adc
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
sub
mov
lods
xor
shr
add
sub
jne
stc
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
mov
xchg
and
push
call
and
pop
mov
addl
inc
push
ret
push
mov
push
mov
pop
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
mov
mov
cmpl
je
mov
mov
jmp
imul
rcrb
jmp
daa
sbb
xor
pop
mov
arpl
or
mov
adc
push
add
add
or
loope
add
add
add
and
pop
mov
addl
inc
push
ret
call
mov
add
test
add
stc
sbb
and
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
adc
call
xchg
ss
add
lea
push
cmp
nop
mov
dec
dec
jbe
mov
pop
mov
cmpl
jbe
xor
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
shr
or
add
neg
push
int
nop
in
lods
rcrb
add
fldcw
push
call
and
pop
mov
addl
inc
push
ret
outsb
and
jnp
pusha
xor
cmc
popa
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
int
mov
mov
add
xor
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pop
pop
psrlw
in
xor
or
test
sbb
jl
push
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
ja
popa
pop
pop
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
add
xchg
out
adc
setnp
push
mov
push
jno
pusha
popa
rdtsc
jb
jmp
shlb
dec
mov
and
xorl
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
sub
or
or
add
add
add
and
pop
mov
addl
inc
push
ret
push
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jmp
xor
push
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
add
add
add
rorb
lea
fwait
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
xchg
or
or
add
add
add
and
pop
mov
addl
inc
push
ret
loope
in
and
xchg
mov
or
add
push
push
call
and
pop
mov
addl
inc
push
ret
repz
hlt
mov
push
add
add
mov
push
push
pop
loope
pop
push
push
push
jae
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
test
sub
fwait
or
mov
fildll
call
and
pop
mov
addl
inc
push
ret
inc
movswl
push
pusha
jmp
mov
aaa
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
popa
xorl
call
mov
pop
cmp
add
xor
leave
xor
add
mov
pop
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fadd
or
pop
push
jmp
cmpl
cmp
adc
out
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lds
xchg
aad
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
xchg
popa
push
push
call
and
pop
mov
addl
inc
push
ret
shrl
ljmp
int3
jmp
jmp
xchg
add
in
jmp
int3
call
push
or
sub
and
test
and
or
add
add
adc
add
movsb
pop
minps
int3
je
test
sbb
mov
mov
add
test
add
add
or
dec
add
add
push
call
and
pop
mov
addl
inc
push
ret
inc
cld
or
sub
fwait
or
mov
or
adc
inc
adc
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
and
ja
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
rcll
pushf
xchg
negl
popf
loope
fwait
or
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
movsl
cwtl
push
add
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
xor
or
sub
fildll
call
and
pop
mov
addl
inc
push
ret
mov
push
mov
pop
movl
push
mov
pop
xchg
jo
pusha
jmp
into
mov
inc
sahf
xor
shr
add
add
pop
test
inc
xchg
jp
or
test
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
jmp
jne,pt
iret
jns
dec
out
shlb
aas
lock
push
mov
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
or
xchg
cld
movzwl
pusha
call
cmpsb
nop
mov
add
mov
xor
popa
pushl
jb
pusha
add
popa
stc
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
xchg
xor
call
lods
and
xor
pop
rolb
sub
add
xchg
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
bound
or
test
es
or
adc
add
push
cmpsl
call
xor
pop
sub
arpl
add
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lea
xchg
and
add
mov
pusha
mov
pusha
jb
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
fdivs
scas
mov
lea
mov
pusha
or
popa
push
mov
jmp
fucomp
adc
mov
and
stos
or
add
add
add
and
pop
mov
addl
inc
push
ret
call
callw
stc
xchg
push
push
jmp
add
aam
mov
out
sbb
jne
push
pop
pop
pop
push
jae
pusha
jae
jb
popa
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
call
movzwl
cmpl
je
or
push
pusha
push
push
pusha
popa
rdtsc
jg
pop
pop
pusha
pusha
popa
je
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
ret
lret
test
stos
or
mov
inc
adc
sbb
fildll
call
and
pop
mov
addl
inc
push
ret
adc
fdivrp
xchg
std
push
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
rorb
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
popf
mov
fwait
or
test
add
add
add
and
pop
mov
addl
inc
push
ret
sbb
ret
add
or
test
fwait
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
addr16
pusha
mov
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
imul
clc
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xor
and
jnp
xchg
rcll
or
test
and
call
and
pop
mov
addl
inc
push
ret
jge
pop
pop
cmpb
add
add
lea
dec
nop
lcall
pop
clc
mov
outsl
jmp
sub
repnz
popa
call
rcrb
add
pop
call
xchg
in
fcmovu
fadds
jo
hlt
outsl
std
dec
xorl
push
push
push
jbe
rdtsc
pusha
popa
pop
pop
pop
mov
jl
push
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
sbb
test
subb
fwait
or
mov
mov
popa
add
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
push
jg
pusha
popa
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jbe
pop
pop
pop
pop
push
jmp
insb
outsb
je
jge
loop
test
sub
call
and
pop
mov
addl
inc
push
ret
inc
movsl
jne
mov
push
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
gs
cmp
or
or
inc
les
call
and
pop
mov
addl
inc
push
ret
testb
mov
mov
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
inc
jmp
scas
push
xchg
js
add
rcl
movzwl
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
push
call
and
pop
mov
addl
inc
push
ret
or
cli
sub
mov
mov
nop
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
pusha
pusha
popa
pusha
popa
popa
pop
pop
push
jns
jmp
or
decb
call
and
pop
mov
addl
inc
push
ret
mov
call
jmp
sbbb
xor
fistpll
add
add
add
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
decl
inc
cmc
mov
mov
add
lea
jmp
pusha
xor
jnp
xchg
add
adc
sub
push
jmp
data16
mov
add
sub
pop
push
push
jmp
nop
daa
test
stos
sub
inc
cmp
nop
mov
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
dec
mov
add
incl
jmp
sub
out
pop
mov
mov
xchg
lret
or
in
inc
push
push
push
call
and
pop
mov
addl
inc
push
ret
test
dec
stc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
je
mov
call
jmp
mov
mov
mov
out
push
movzwl
pop
in
pusha
call
sarb
lret
inc
sbb
add
add
pop
jno
mov
popa
cmp
jae
pusha
stc
jmp
outsb
fcmovnu
subl
outsl
mov
mov
mov
mov
call
mov
jb
jge
lea
aas
jne
in
sub
fwait
jmp
movswl
pop
mov
sbb
shr
mov
mul
mov
sub
jp
mov
mov
mov
or
jmp
pusha
sub
push
call
sbb
add
pusha
jo
int3
mov
jnp
pop
popa
mov
mov
call
xor
xor
mov
or
add
add
jp
push
sub
pop
cmp
jae
add
jmp
mov
mov
jmp
mov
mov
loope
je
or
andl
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
subb
add
sub
popf
ljmp
push
push
push
call
and
pop
mov
addl
inc
push
ret
call
xor
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
and
add
push
push
call
and
pop
mov
addl
inc
push
ret
add
ds
cmpsl
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
and
test
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aad
cli
sbbl
addb
add
adc
call
ret
in
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
add
cli
cmp
or
lds
jge
push
push
call
and
pop
mov
addl
inc
push
ret
ret
xor
outsb
dec
in
aaa
jmp
in
mov
xchg
lea
fwait
or
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
sub
addr16
pusha
mov
jmp
and
and
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
roll
push
mov
sbb
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
ja
or
add
in
mov
mov
les
sbb
test
rorl
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
add
add
dec
jae
testl
sbb
and
or
add
add
add
and
pop
mov
addl
inc
push
ret
xchg
jns
sub
cld
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
idiv
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
rorb
fstl
fwait
or
mov
cmpl
je
jmp
adc
mov
or
jbe
je
mov
pusha
pusha
pusha
mov
mov
popa
jg
mov
popa
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fs
lahf
xchg
nop
and
push
push
call
and
pop
mov
addl
inc
push
ret
enter
xor
or
je
mov
mov
xor
xor
movswl
nop
push
pusha
pusha
popa
pusha
popa
popa
pop
push
jo
push
pusha
popa
pop
nop
jae
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
loope
mov
call
incl
pop
add
mov
add
add
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
jo
push
pusha
popa
pop
mov
jmp
xor
add
cmp
outsb
cwtl
in
in
xor
adcb
pusha
push
pusha
popa
pop
pusha
push
push
rdtsc
pop
pop
je
popa
popa
mov
jle
push
pusha
popa
pop
pop
jmp
xor
repnz
push
sbb
dec
add
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
pop
mov
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
mov
movsb
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
orb
ja
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
fildll
popf
lea
fwait
or
mov
popa
jmp
fwait
mov
jbe
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
fcmovne
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
pop
xor
push
jmp
adc
pop
sub
pop
push
push
push
rdtsc
pop
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
add
mov
fildll
call
and
pop
mov
addl
inc
push
ret
inc
imul
add
add
mov
mov
call
incl
pop
add
adc
add
cltd
loop
dec
loope
test
cwtl
inc
xor
mov
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
mov
jmp
ficompl
jae
add
jo
pop
push
jmp
dec
push
mov
mov
pop
popa
mov
jmp
sti
adc
loop
sub
add
add
add
and
pop
mov
addl
inc
push
ret
mov
loopne
rorb
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
add
push
push
push
jmp
jns
aam
int
out
pop
mov
mov
movsb
adc
xor
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
pop
mov
jle
jmp
addr16
test
xchg
notb
call
jmp
add
jo
lock
cli
add
xor
push
push
call
and
pop
mov
addl
inc
push
ret
stc
lods
out
mov
mov
movl
xor
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
fwait
dec
test
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
sub
insb
sub
popf
shll
fwait
or
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
clc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
sub
test
test
add
add
or
mov
fildll
add
adc
xchg
insl
sub
mov
fildll
cs
or
adc
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
add
fwait
or
push
push
jmp
xchg
scas
call
push
push
pop
rdtsc
jp
pop
pop
pop
pop
push
push
jmp
fimuls
bound
pop
xchg
or
pushl
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stos
inc
cmp
pop
pop
dec
mov
jmp
stos
js
pusha
les
add
push
call
and
pop
mov
addl
inc
push
ret
popa
stos
sub
push
add
or
mov
mov
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
in
jecxz
les
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
push
negb
mov
add
add
add
and
pop
mov
addl
inc
push
ret
jecxz
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
bound
or
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
shl
or
pop
out
add
push
jne
push
pusha
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
xor
push
fwait
or
mov
fildll
add
lahf
inc
push
cli
mov
les
adc
imul
push
call
and
pop
mov
addl
inc
push
ret
std
xchg
mov
into
mov
adc
or
je
mov
push
jb
pusha
push
pop
push
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jle
mov
fildll
call
and
pop
mov
addl
inc
push
ret
aad
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
scas
stc
mov
sub
pushl
jb
mov
adc
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
stc
jmp
pop
adc
or
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
fcompl
xor
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
jb
push
mov
add
jns
add
or
movl
or
jmp
add
mov
mov
lea
or
push
adc
pop
push
push
push
pusha
push
pop
push
push
rdtsc
pop
pop
popa
rdtsc
jmp
cmp
pop
pop
dec
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
jo
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
imul
in
xlat
adc
adc
add
xor
imul
testb
fdiv
jmp
mov
lea
jo
jae
cld
add
stc
push
push
push
push
push
pusha
popa
rdtsc
jmp
push
lcall
mov
fs
out
mov
jb
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
mov
pop
pop
pop
pop
mov
sub
push
jo
mov
mov
push
pusha
mov
mov
popa
call
or
lea
cmc
call
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
rolb
or
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
adc
mov
push
mov
nop
jp
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
push
push
push
pusha
push
push
rdtsc
pop
pop
jmp
aas
cmp
call
jb
popa
rdtsc
jmp
inc
test
movsb
xchg
xchg
mov
movswl
call
and
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
inc
stc
push
push
call
and
pop
mov
addl
inc
push
ret
in
adc
xchg
xor
inc
stos
or
nop
push
push
pusha
push
pop
pusha
popa
popa
rdtsc
pusha
pusha
popa
push
pop
popa
pop
pop
push
pusha
js
pusha
popa
push
push
push
push
rdtsc
pop
pop
rdtsc
jbe
pop
pop
popa
nop
and
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
jns
aaa
jbe
inc
pusha
jl
mov
xor
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
jecxz
mov
int3
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
fmuls
mov
push
jo
clc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
insl
xchg
outsl
inc
hlt
push
xchg
add
aaa
call
jmp
mov
mov
jl
mov
out
jmp
int
push
adc
js
cmp
jno
popf
xchg
sbb
adc
add
sbb
movzbl
mov
mov
jmp
int
xor
mov
mov
sub
shr
or
mul
mov
sub
mov
mov
jmp
jb
adc
mov
mov
jle
or
add
jo
sub
add
and
cmp
jae
mov
jmp
mov
mov
jns
mov
and
je
jnp
mov
andl
sub
mov
clc
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
es
or
add
push
call
and
pop
mov
addl
inc
push
ret
jl
sub
add
mov
call
mov
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
adc
scas
sub
andb
add
add
out
cmpsl
jnp
adc
push
cs
adc
mov
mov
or
sub
push
add
pop
or
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
orl
dec
sbb
or
mov
or
mov
mov
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
jbe
adc
or
mov
mov
add
mov
mov
shr
add
mov
pop
mov
cmpl
je
mov
mov
lea
jmp
movsl
jb
mov
jmp
add
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
int3
mov
cmpl
je
push
cld
pop
cmpl
jbe
sub
pusha
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
cmp
leave
je
mov
jmp
ljmp
lods
adc
test
fwait
or
nop
pusha
pusha
push
push
rdtsc
pop
pop
jmp
icebp
dec
dec
mov
loop
xorb
dec
xchg
pop
lcall
jmp
xor
lcall
jo
jne
pusha
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
add
or
add
push
aas
adc
jl
xchg
mov
movzwl
call
incl
pop
add
jmp
push
fisubrs
pusha
and
jp
jb
popa
popa
jmp
sbb
shl
fdivs
push
jmp
mov
imul
addr16
or
push
push
push
pop
pop
pop
mov
push
jmp
notl
or
xchg
ds
mov
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pusha
jns
push
pop
popa
popa
pop
push
push
call
and
pop
mov
addl
inc
push
ret
flds
xor
jno
fwait
or
mov
call
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
ja
nop
jb
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
in
xchg
push
std
daa
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
sub
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
mov
outsl
movswl
mov
jae
pusha
mov
mov
popa
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
filds
mov
movzwl
xchg
push
push
jl
jmp
jnp
inc
ret
add
pop
in
flds
pushf
es
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
push
jmp
adc
mov
xchg
mov
pushl
mov
push
pusha
push
push
jmp
sub
lahf
ret
xchg
out
jmp
mov
xor
pop
pop
jnp
js
popa
addl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
gs
jge
mov
nop
push
push
js
pusha
popa
rdtsc
push
jae
pop
pop
pop
push
jmp
shll
push
arpl
adc
rclb
mov
call
movswl
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
or
dec
movl
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
dec
into
or
add
mov
mov
jmp
call
shrl
lods
mov
pop
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
and
lea
or
and
or
jne
jmp
push
gs
pop
lods
inc
sti
push
loop
lock
mov
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
dec
ret
jge
jl
or
pushl
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
fs
xor
lea
or
mov
fildll
and
add
add
or
jno
jmp
xor
dec
cli
pop
adc
add
add
add
and
pop
mov
addl
inc
push
ret
pop
hlt
cmp
jnp
addb
add
mov
jmp
dec
push
std
nop
cs
inc
icebp
push
pushl
jae
jmp
push
push
imul
or
daa
fwait
or
mov
fildll
call
and
pop
mov
addl
inc
push
ret
mov
sbb
out
fimuls
or
add
add
add
and
pop
mov
addl
inc
push
ret
mov
xor
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
adc
push
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
xchg
jecxz
jmp
test
imul
cmp
pop
lea
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ja
mov
add
add
repnz
inc
adc
femms
xor
insb
mov
add
add
add
and
pop
mov
addl
inc
push
ret
and
cld
mov
add
inc
add
icebp
cmc
cmpsl
ror
xchg
ss
inc
push
and
mov
adc
fwait
or
mov
fildll
mov
and
cli
call
mov
push
push
push
push
push
jb
rdtsc
pusha
popa
pop
pop
rdtsc
jae
pusha
popa
pop
pop
mov
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
test
dec
lods
call
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
mulb
adc
mov
add
test
add
add
scas
cmp
push
pusha
push
pop
push
push
rdtsc
pop
pop
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jns
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
ss
adc
mov
xor
pushl
cmc
movswl
call
mov
cmpl
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jmp
jmp
dec
bound
leave
iret
and
push
inc
sub
movb
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
ret
xor
jmp
movswl
mov
mov
lea
mov
mov
nop
push
push
pusha
push
push
rdtsc
pop
pop
jns
popa
rdtsc
jl
push
push
rdtsc
pop
pop
pop
pop
push
pusha
pusha
push
pop
push
pop
popa
jo
jmp
insl
pop
sub
leave
add
leave
xchg
sbb
loopne
cltd
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
xor
push
push
call
and
pop
mov
addl
inc
push
ret
sub
add
mov
das
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
psubsb
add
rcll
mov
mov
xor
popf
or
add
add
add
and
pop
mov
addl
inc
push
ret
push
cld
shl
cmp
fcoml
push
push
pop
pop
push
push
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
lea
fwait
or
popa
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jne
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ret
sub
sar
shrl
popf
loope
fwait
or
mov
add
test
test
push
fwait
or
clc
add
test
lea
or
add
flds
clc
pusha
push
mov
nop
push
push
push
push
push
pop
rdtsc
jmp
or
cmp
pop
xchg
dec
std
cld
xor
aam
or
pop
pop
rdtsc
push
jmp
jne
outsb
sarb
iret
cmpsl
pop
pop
pop
push
push
push
jmp
inc
fists
das
call
xor
popa
js
popa
pop
pop
nop
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
jno
xor
xor
jmp
call
pop
sub
xor
jmp
lds
les
sbb
cmp
movzwl
lea
jno
mov
push
jge
push
jmp
enter
mov
fnstenv
icebp
and
add
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
add
ret
fsubrl
ffreep
ror
hlt
pop
ljmp
add
dec
pushf
sbb
ljmp
pushl
xor
mov
mov
and
incl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
xor
xor
pushl
mov
call
jmp
movswl
mov
adc
out
call
jae
jmp
pusha
add
fdivrp
jmp
neg
cmp
push
mov
push
jne
gs
negb
jno
popf
xor
fwait
or
or
popa
jae
jmp
push
jo
hlt
outsl
std
dec
xorl
mov
jmp
filds
rcrl
and
and
sti
mov
clc
mov
jmp
aaa
test
mov
mov
call
adc
pusha
add
push
jae
pop
popa
sub
jo
mov
mov
mov
mov
jmp
mov
mov
sbb
add
sub
add
jmp
jmp
and
jae
jmp
jno
or
cmpsb
xchg
or
add
stc
jae
jmp
adc
mov
mov
and
je
mov
andl
mov
mov
and
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
das
test
push
jmp
rorl
lds
xor
fstpl
aaa
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jmpw
add
adcb
xor
xor
enter
cmp
mov
mov
and
add
cld
push
push
call
and
pop
mov
addl
inc
push
ret
out
adc
add
push
sub
ja
xchg
push
mov
push
and
lea
add
add
sub
pusha
adc
movzwl
popa
sub
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
orb
or
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
lods
call
add
add
and
pop
mov
addl
inc
push
ret
movsl
stos
iret
ja
and
aam
sbb
test
sbb
pop
or
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
adc
push
add
mov
adc
fiadds
scas
xlat
cmpsb
xchg
or
add
add
add
and
pop
mov
addl
inc
push
ret
shll
lea
add
add
add
and
pop
mov
addl
inc
push
ret
mov
out
xchg
sub
add
add
or
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
popf
movsl
sbb
or
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cmc
jmp
out
inc
test
scas
xchg
pusha
repnz
mov
shlb
mov
mov
sub
lea
jo
jmp
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
out
add
ds
jge
cmpl
je
mov
cmpl
jbe
pusha
call
bound
xor
and
fwait
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
lret
idivb
add
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
lea
or
leave
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
jmp
sub
dec
xchg
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
add
add
test
in
fildll
mov
or
decl
xor
fwait
or
mov
mov
add
add
or
js
jne
jmp
lods
ds
lea
adc
push
addl
movzwl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
scas
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
std
sbb
or
roll
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
les
sldt
add
jecxz
cltd
xchg
sbb
repz
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
pusha
movswl
movl
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
std
dec
xorl
add
add
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
ja
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
scas
popa
sub
mov
push
pusha
jmp
in
mov
cli
sub
lahf
arpl
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
adc
mov
mov
pushl
movzwl
jl
and
push
pusha
pusha
jl
js
popa
push
push
jp
rdtsc
push
pop
pop
pop
popa
addl
jns
jmp
inc
jae
jae
repz
mov
fwait
or
test
mov
nop
jmp
cmp
jg
push
push
push
jbe
push
pop
pop
nop
mov
call
or
popa
mov
add
movl
mov
cmpl
je
xor
jmp
push
clc
pop
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
ja
mov
mov
mov
mov
jmp
repz
int3
dec
stos
arpl
sarl
push
insl
mov
mov
add
test
add
add
jp
push
sub
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
dec
movsl
push
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
data16
add
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
fildll
pop
fwait
or
push
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
xchg
push
push
js
jmp
mov
fisttps
rdtsc
jle
js
pop
pop
push
pusha
jmp
cmp
pop
sbb
mov
add
add
popa
xchg
jmp
les
lret
jecxz
lahf
stos
cltd
push
mov
sub
add
add
add
and
pop
mov
addl
inc
push
ret
ficoml
xor
mov
jno
mov
call
mov
mov
mov
mov
mov
mov
mov
pusha
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
add
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
loopne
mov
adc
add
mov
xchg
shrl
or
push
movsl
xor
add
push
call
and
pop
mov
addl
inc
push
ret
cwtl
sbb
mov
add
add
or
add
xchg
in
mov
fildll
call
and
pop
mov
addl
inc
push
ret
xor
push
adc
call
or
push
push
push
jmp
mov
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
aad
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
stos
push
inc
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
int
sahf
out
jb
xchg
push
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
push
jbe
pusha
push
pop
push
pop
popa
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
or
adc
int
fwait
or
xchg
inc
adc
call
and
pop
mov
addl
inc
push
ret
je
out
test
call
push
nop
push
test
push
and
add
add
push
out
dec
stc
sahf
int3
cmp
pushl
pop
pop
pop
pushl
mov
call
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
pop
mov
fwait
or
test
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
push
dec
addr16
cmp
mov
fwait
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
or
mov
ljmp
push
push
call
and
pop
mov
addl
inc
push
ret
jl
mov
imul
and
jno
xsha1
cmpsb
mov
sub
mov
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
or
fwait
push
adcl
push
push
pop
pop
rdtsc
jb
jmp
sti
pop
sub
or
aaa
pop
ljmp
sub
ss
imul
test
add
add
addb
add
pusha
popa
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
int
jno
pop
mov
stc
push
push
push
call
and
pop
mov
addl
inc
push
ret
int3
pusha
mov
fwait
or
test
lea
es
or
rolb
add
add
pop
ret
pop
mov
addl
inc
push
ret
cmpsb
dec
pop
xchg
popf
shll
xchg
cmp
lret
sub
push
pusha
push
push
pop
pop
pusha
push
push
rdtsc
pop
pop
push
pop
popa
popa
mov
mov
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
and
sbb
or
add
xor
inc
insb
mov
xchg
or
add
add
add
and
pop
mov
addl
inc
push
ret
popf
bound
dec
mov
fwait
or
xchg
popa
and
inc
les
call
and
pop
mov
addl
inc
push
ret
xchg
jnp
mov
add
call
and
pop
mov
addl
inc
push
ret
and
cmpl
jne
mov
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
fists
mov
xor
lods
movzwl
push
mov
nop
push
push
jo
push
pop
rdtsc
jae
pusha
popa
pop
pop
push
jb
jmp
mov
mov
nop
mov
call
mov
sub
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
and
rcll
xchg
mov
push
call
jmp
and
fwait
pop
pop
jl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fnstenv
xor
add
cwtl
cmpsl
add
cmc
push
jmp
icebp
and
jp
jnp
pop
test
add
movzwl
pushl
mov
mov
mov
incl
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
add
sbb
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
loopne
repnz
test
and
xchg
stc
sub
add
mov
mov
mov
out
movswl
in
jb
jnp
mov
cmp
jae
movzbl
xor
mov
mov
mov
or
jmp
sti
add
pop
dec
mov
cli
int3
push
pop
push
mov
mul
mov
sub
movswl
mov
je
jmp
loopne
pushf
adc
xor
or
or
jmp
sub
mov
cmc
add
mov
add
mov
sbb
cmp
jae
add
jmp
mov
adc
mov
push
mov
pop
and
and
je
mov
andl
add
mov
push
clc
pop
jmp
lea
call
std
loopne
movsb
call
mov
pop
push
jmp
cmc
pop
dec
and
fcmovne
mov
and
sar
xchg
jge
fwait
or
addb
add
add
mov
push
pop
push
mov
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
push
sbb
sti
inc
or
or
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
shrb
mov
mov
mov
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
subb
lds
fwait
or
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
rorb
jmp
adc
and
cmpsb
or
dec
push
adc
or
mov
and
add
add
add
and
pop
mov
addl
inc
push
ret
pop
cli
out
jmp
sbb
add
or
sbb
sbb
rorl
add
mov
pop
jmp
ficoms
repz
sbb
adc
push
push
call
and
pop
mov
addl
inc
push
ret
fidivrl
add
mov
and
int
jmp
aam
sub
cmpw
je
sub
jmp
inc
mov
aas
pop
lahf
mov
ret
sti
shrb
int3
in
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
insl
adc
jae
mov
lea
jmp
aaa
cmpsl
repz
aad
xor
dec
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
push
or
pop
pusha
call
bound
xchg
sar
pop
scas
adc
dec
inc
outsb
fidivs
ds
pop
mov
popa
mov
cmpl
je
jle
sbb
cmc
cmpl
je
sbb
cmpl
jbe
cmc
call
lcall
mov
push
dec
ret
jbe
fisubs
sti
pop
pusha
sbb
mov
mov
and
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
fisttpl
or
test
fwait
or
add
add
add
and
pop
mov
addl
inc
push
ret
add
cld
fidivs
fwait
or
test
fwait
or
adc
lea
add
push
push
pop
pop
mov
mov
push
mov
mov
push
push
push
jmp
scas
pop
je
add
push
pop
rdtsc
push
pusha
popa
pop
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
mov
mov
clc
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
inc
movl
and
fildll
add
add
popf
adc
dec
add
add
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
movl
call
pop
sbb
ja
fnstcw
out
arpl
mov
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
fwait
scas
shl
cmc
xchg
adcb
or
or
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
lock
push
push
call
and
pop
mov
addl
inc
push
ret
aad
sti
or
and
or
mov
mov
mov
xchg
jns
jb
push
pop
push
jp
push
push
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
lcall
mov
xchg
jge
fwait
or
pushl
mov
push
push
push
push
pusha
popa
rdtsc
je
pop
pop
pop
xorl
jle
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
outsl
dec
sub
nop
pusha
pusha
push
pop
pusha
popa
popa
pusha
jmp
add
in
in
sub
movsb
inc
and
js
popa
popa
push
push
push
push
pusha
popa
pop
rdtsc
pusha
pusha
popa
pusha
popa
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
call
jne
jl
or
popa
xor
movl
and
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
or
hlt
push
icebp
or
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
jmp
pop
pop
push
sbb
add
pop
jo
xor
clc
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
pop
pop
dec
pop
mov
sbb
cmpl
je
push
add
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
jns
inc
scas
mov
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
nop
iret
add
mov
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
jns
adc
popf
xchg
or
pusha
push
push
rdtsc
pop
pop
jg
popa
jle
push
push
rdtsc
pop
pop
popa
push
jmp
loope
lods
inc
enter
add
add
add
and
pop
mov
addl
inc
push
ret
or
mov
mov
fildll
call
and
pop
mov
addl
inc
push
ret
out
push
add
add
les
rclb
sarb
sbb
orl
add
jb
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
or
push
mov
or
and
stos
or
popl
add
add
or
fwait
or
das
xor
les
add
xor
mov
mov
and
add
adc
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
iret
xchg
mov
pushf
lods
and
xor
pop
add
add
jg
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stc
movsb
bound
mov
sldt
add
mov
jecxz
cmc
rcr
push
pop
fdivl
add
push
call
and
pop
mov
addl
inc
push
ret
sbb
outsl
mov
xor
mov
sub
call
mov
push
pusha
jmp
jne
lret
and
add
sahf
out
fs
inc
mov
dec
ds
xor
push
push
call
and
pop
mov
addl
inc
push
ret
clc
dec
std
shl
xor
sub
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
mov
cmp
jle
push
pusha
jmp
xorb
mov
jbe
pop
movsb
push
test
mov
popa
xor
mov
cmpl
je
mov
xchg
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
rdtsc
pusha
jmp
lcall
aas
push
pop
popa
pop
pop
push
push
jmp
test
and
lods
negb
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cmc
data16
mov
pushl
mov
add
call
jmp
int3
loop
imul
mov
insb
pusha
pushl
jnp
mov
call
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
bound
es
mov
mov
or
movb
push
push
call
and
pop
mov
addl
inc
push
ret
and
cwtl
adc
sbb
xor
inc
or
test
fwait
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
pushf
adc
or
inc
sub
pushf
jmp
sub
cmpsl
jp
and
push
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
pop
imul
popf
mov
fwait
or
shrl
call
and
pop
mov
addl
inc
push
ret
popa
mov
push
pop
call
jb
cmpb
cltd
push
ret
test
lds
fwait
or
push
mov
pop
add
mov
mov
add
pushl
mov
pop
mov
add
mov
xor
pusha
jmp
fidivrs
mov
pop
neg
cmp
push
jmp
pusha
int3
pop
jne
dec
lods
gs
jo
mov
jmp
popa
xor
jmp
cmp
insl
pop
inc
or
pop
testl
mov
popl
push
add
pop
mov
sub
add
cmp
jne
mov
jmp
aad
flds
jo
dec
push
negl
sub
incl
mov
pop
add
clts
lea
xchg
icebp
sbb
rol
fiaddl
enter
shl
dec
mov
and
rorb
pop
cmp
jp
push
movsb
icebp
push
enter
jp
push
nop
sbb
enter
movsl
stc
icebp
or
jp
dec
jne
cmc
pop
sbb
repz
cmpl
inc
jo
push
enter
enter
sub
cmp
push
pop
mov
mov
dec
inc
sub
loopne
jge
push
enter
mov
pop
fsub
mov
in
add
jbe
int3
ret
push
enter
pop
fsts
sub
push
scas
ja
fsts
push
push
popl
pop
pop
push
jbe
dec
inc
sahf
fsts
mov
in
mov
ret
outsb
mov
lret
push
mov
ret
or
mov
add
outsb
js
push
inc
repnz
repnz
repnz
repnz
jp
push
enter
enter
enter
enter
add
fsts
imul
jmpw
popa
iret
aas
repnz
iret
jp
push
enter
test
fsts
jp
push
xlat
imul
adc
popa
mov
js
push
inc
repnz
repnz
iret
imul
push
enter
jp
iret
aas
repnz
jp
push
inc
repnz
iret
mov
repnz
inc
repnz
iret
jp
push
enter
inc
repnz
iret
aas
repnz
iret
inc
repnz
iret
aas
repnz
iret
aas
repnz
iret
aas
repnz
dec
loope
dec
enter
cmpl
adc
popa
iret
aas
repnz
iret
cli
push
push
enter
aas
repnz
iret
icebp
popa
iret
aas
repnz
into
jp
push
dec
repnz
xlat
aas
repnz
iret
aas
repnz
xlat
aas
repnz
iret
inc
repnz
iret
aas
repnz
dec
out
out
cmp
aaa
enter
jp
push
sub
insb
cltd
push
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
pop
daa
fcoml
sub
fstps
inc
aad
xchg
pop
jbe
xchg
inc
mov
fsts
pop
pop
cmp
mov
std
and
enter
enter
inc
mov
stos
mov
mov
ret
push
and
push
enter
jecxz
fsts
icebp
pop
test
and
add
mov
sbb
mov
mov
rcr
sbb
loope
mov
jp
adc
pop
adc
les
adc
jns
dec
enter
mov
fsts
xchg
sub
out
scas
addr16
lock
out
pushl
sahf
xchg
rcr
push
enter
sbb
mov
adc
sahf
push
mov
push
enter
push
cli
xor
clc
or
sub
pop
jle
jae
and
jp
cmp
jp
xlat
stos
mov
cmp
mov
mov
pop
dec
enter
add
xchg
add
outsb
inc
ret
cmp
ss
push
cmp
call
jl
inc
xor
std
test
add
jns
adc
jns
clc
sub
cmp
mov
xchg
sub
outsl
call
push
mov
lock
xor
inc
mov
inc
push
enter
jbe
or
fsts
jp
sbb
push
stos
mov
adc
xchg
push
mov
and
es
or
mov
das
cwtl
mov
decb
sbb
outsl
xchg
sub
repnz
popa
pop
mov
or
xlat
xor
jecxz
mov
inc
push
mov
jp
dec
inc
cmp
push
enter
pop
jp
push
dec
inc
aaa
push
mov
jp
cli
xor
rol
jp
push
push
cmp
in
xchg
rcr
push
enter
sbb
stos
mov
adc
fstps
pop
dec
fsts
cli
mov
jae
pop
enter
stos
mov
fsts
mov
push
push
enter
sub
jp
push
dec
inc
xor
mov
jp
lds
and
loopne
jge,pn
ror
jp
push
inc
xor
inc
pop
enter
xor
rcl
jp
push
inc
sub
fsts
rcr
inc
jle
push
enter
leave
les
push
enter
jp
bound
shlb
aad
cmpsb
dec
inc
sub
cmp
shl
inc
inc
jbe
dec
inc
fidivrs
jl
out
sub
xchg
dec
inc
fsts
idivl
cld
mov
jp
cwtl
out
jae
pop
enter
stos
rcr
inc
jno
push
enter
sub
fcoml
jp
push
nop
repnz
jl
sub
arpl
pop
jle
ror
jp
push
xorb
rol
jp
push
dec
xlat
loopne
mov
inc
imul
vandnpd
jge
push
enter
ret
jle
adc
xor
pop
popa
enter
jbe
cmp
inc
inc
in
jbe
aaa
cltd
jle
aad
inc
data16
cmp
xchg
rorl
pop
and
pop
jbe
shlb
xchg
push
dec
cmp
mov
jge
out
aaa
into
cmp
loopne
icebp
pop
mov
add
jbe
hlt
jp
push
lcall
and
and
in
pop
adc
jle
push
enter
or
jnp
xor
shlb
sahf
push
dec
enter
stc
in
xor
cmp
out
jo
dec
inc
or
cmp
repnz
jp
outsl
enter
call
ss
push
inc
ds
push
sarb
push
xchg
sbb
dec
sub
mov
ret
push
sub
jbe
xchg
and
and
push
ret
cltd
test
push
cltd
or
fsubr
and
fidivs
mov
sub
inc
sbb
jne
aam
mov
lahf
cmp
inc
lret
shlb
inc
pop
mov
aaa
or
xchg
cwtl
loope
inc
inc
popl
pusha
scas
mov
push
add
lock
jl
fisttpl
jl
inc
jb
aam
loope
or
jbe
sub
push
jno
fs
in
pusha
mov
cli
imul
mov
add
repnz
leave
repnz
fs
dec
jmp
push
call
imul
and
insl
fs
repz
fs
jge
dec
sub
dec
sub
lahf
fs
pop
fnstenv
and
lahf
fs
xor
ss
hlt
sbb
cmpsl
mov
negb
sbb
push
jge
jmp
imul
arpl
loope
fs
cs
xlat
loope
pusha
in
mull
or
xchg
mov
and
add
mov
or
negb
divl
xchg
mov
add
arpl
dec
test
jne
dec
cli
or
adc
sbb
fisttpl
ret
jns
test
hlt
mov
pop
mov
sbb
cmc
popf
dec
mov
or
mov
test
orl
pop
sub
fldt
scas
cwtl
stos
arpl
test
loopne
adcl
daa
pop
mov
push
xchg
les
shr
mov
push
jnp
fsub
dec
push
mov
dec
dec
pusha
xor
pop
mov
icebp
loopne
imul
cmp
cmp
inc
aad
push
jge
sub
pop
cmp
sbb
jo
push
daa
loopne
cmp
in
mov
jg
mov
in
inc
aad
in
std
xchg
out
faddl
inc
aad
mov
mov
mov
and
mov
sub
movsl
fsubr
jbe
les
push
insl
test
imul
dec
das
test
and
cmp
cmc
ds
or
dec
movsl
pop
cwtl
and
int
arpl
mov
cld
mov
xor
sub
mov
mov
fidivrl
popa
xchg
inc
popa
sub
push
jns
jo
pop
fcomps
rolb
mov
add
push
pusha
popa
sub
popa
sub
aam
lea
mov
sub
out
out
rol
test
insb
mov
mov
dec
mov
jbe
leave
insl
stos
dec
push
iret
mov
mov
repz
xchg
inc
dec
ja
push
jecxz
pop
js
mov
jmp
loopne
mov
testb
insl
lcall
inc
call
sub
xchg
mov
inc
ja
imul
lods
dec
mov
call
jnp
mov
jbe
jmp
push
dec
negl
mov
into
imul
repnz
inc
ret
fisttpl
repz
out
xchg
dec
xor
cmp
repz
es
mov
pop
mov
jo
pop
jecxz
dec
out
xor
out
addr16
fbstp
mov
pop
dec
lds
testl
dec
pop
mov
insl
dec
xorl
dec
pop
outsb
pop
mov
ss
dec
pop
inc
and
test
je
and
daa
push
cmp
iret
daa
int
shll
int
cli
mov
cli
ret
push
dec
lods
lret
lret
sbb
jo
mov
fldt
les
popa
jo
mov
addr16
nop
fsubrl
mov
cmp
stos
and
lock
xor
pop
sub
mov
movsl
out
and
test
fildl
sub
mov
dec
mov
aad
ficoms
test
popa
sarb
add
mov
negb
out
mov
inc
lds
outsl
jge
push
jo
mov
fldt
les
insb
outsl
test
xchg
mov
jg
sti
adc
xor
push
sub
jo
fbld
xchg
add
out
push
rclb
push
jo
pop
lods
scas
rorb
data16
cmp
jo
jns
scas
mov
fs
xor
xlat
pop
test
cmp
roll
test
xor
in
inc
fcmovnb
les
imul
xchg
shr
pop
jmp
pop
push
dec
mov
sbb
movsb
nop
rcl
lods
mov
add
lcall
arpl
mov
push
sti
test
push
jo
inc
lods
int
out
mulb
scas
fstl
sub
and
pop
out
cmpsb
mov
adc
clc
pop
enter
pop
int
mov
cltd
push
jo
repnz
jo
mov
add
mov
mov
xlat
js
sar
mov
sahf
add
repnz
jo
mov
fstpt
cmpsb
rol
les
lahf
fldln2
and
mov
iret
out
arpl
cmpsb
pop
or
mov
push
adc
pop
or
nop
fistps
xor
icebp
pop
xchg
mov
push
jo
sub
add
xor
mov
adc
sbbb
lods
mov
dec
jo
mov
in
pop
punpckhdq
leave
mov
inc
cmp
jge
repnz
xchg
repnz
jo
mov
fldt
les
popa
jo
mov
je
jmp
push
add
filds
xor
ss
data16
cli
pop
aam
xchg
nop
sar
cmpsb
mov
cld
je
mov
stos
push
andl
adc
mov
push
addl
adc
fisttpl
push
jo
repnz
jo
mov
int3
rolb
pop
les
xor
cmp
mov
cmc
add
mov
sahf
dec
dec
and
lds
nop
fists
test
cld
je
mov
stos
push
andl
outsl
test
push
ret
ja
addl
sarb
add
mov
pop
xchg
ret
idivb
mov
test
pop
xchg
push
jo
and
xchg
mov
pop
or
outsb
xor
icebp
gs
mov
std
popl
lods
movsl
sub
in
sar
sbb
push
jo
adcl
push
jo
pop
mov
push
data16
cmp
jo
dec
scas
scas
pop
add
and
push
cli
pop
push
add
filds
xor
mov
or
loope
je
es
clc
stos
and
and
stc
pop
test
push
jo
or
jo
mov
in
pop
sub
push
jo
enter
pop
sbb
popa
pop
and
test
fisttpll
movsl
in
pop
mov
in
popa
push
lds
mov
push
lahf
adc
and
jo
adcl
push
jo
pop
test
jnp
js
movsb
cmp
jo
scas
scas
mov
and
jbe
add
pop
cwtl
jl
and
test
leave
pop
mov
mov
push
xchg
mov
mov
jo
sub
xor
daa
xor
add
adc
lcall
adc
stos
repnz
add
mov
pop
and
shl
aam
sti
jp
push
jo
mov
push
jo
inc
adc
add
xor
mov
dec
adc
std
mov
push
jo
push
mov
add
cmp
cmp
push
and
push
jo
mov
push
jo
mov
fcmovnbe
les
insl
outsl
test
sahf
in
xchg
inc
imul
mov
fs
mov
hlt
push
mov
jns
call
arpl
jo
jp
ficompl
rcr
adc
push
cmp
xlat
push
adc
fildll
mov
popa
std
pop
sub
in
dec
mov
xorl
adc
mov
clc
rcl
dec
movsb
push
popf
sub
mov
push
stos
pop
aad
aad
mov
mov
push
jo
sub
xor
daa
xor
add
adc
xchg
and
cld
pop
add
push
push
jo
ja
stos
dec
ds
bound
pop
subb
push
rol
stc
lods
fnstsw
push
andl
insb
test
push
xor
cmp
dec
call
jo
mov
push
jo
sub
xor
daa
xor
push
mov
adc
or
shlb
out
repnz
in
pop
sarl
cmp
or
das
repz
xor
mov
push
jo
inc
adc
add
xor
mov
sub
lea
jnp
dec
sarb
andl
aad
push
lods
negb
mov
cmc
pop
mov
stos
mov
test
fists
int3
aam
fistpll
cwtl
lds
loopne
cmp
cmp
into
add
pop
jo
mov
test
fists
int3
aam
fistpll
pop
mov
lods
loopne
cmp
test
lea
pop
mov
arpl
push
jo
push
lcall
jl
je
mov
lods
fnstsw
push
andl
jb
mov
leave
movsl
and
sbb
mov
bnd
mov
rclb
mov
mov
call
stos
sbb
sarb
clc
stos
ja
mov
mov
push
jo
inc
adc
add
xor
mov
push
jo
dec
adc
or
adc
cmpsb
mov
pop
and
pop
test
mov
push
jo
inc
adc
add
xor
mov
sub
jecxz
es
outsb
mov
cli
sub
sbb
test
push
jo
adcl
push
jo
pop
lods
scas
mov
cmp
jo
jp
scas
fisubrs
or
repnz
jo
mov
les
insb
outsl
test
mov
in
sub
jns
or
mov
sbb
push
sbb
pusha
xor
aam
test
push
popa
sub
sti
popa
test
push
xor
pop
fcoml
out
shll
std
nop
push
sbb
loopne
outsl
jle
push
jo
mov
fcmovnbe
les
insl
outsl
test
sahf
in
push
add
cmp
dec
adc
ds
pop
cmp
mov
adc
add
xor
push
mov
adc
in
scas
aam
cltd
add
push
stc
cmp
test
push
sarb
push
andl
adc
mov
loopne
pop
jbe
fsubrl
jbe
clc
stos
nop
leave
mov
and
push
fisttpll
stos
aam
mov
add
pop
push
jo
sbb
xchg
mov
mov
int3
pop
push
cmp
pop
bsr
je
and
jne
popf
int
cmp
dec
insb
sub
sub
push
jo
adcl
push
jo
pop
mov
arpl
push
jo
push
lcall
or
ret
xlat
repnz
aam
pop
push
into
inc
clc
stos
mov
test
cld
je
mov
stos
push
andl
js
mov
xchg
ror
movsl
xchg
nop
push
jo
bnd
mov
jmp
inc
sub
subb
push
rol
stc
test
andl
jb
mov
test
jle
fsts
mov
adc
movb
pop
andl
fildll
test
push
subb
push
sarb
mov
mov
push
andl
js
mov
inc
xchg
mov
push
jo
cmpsb
jmp
sahf
sbb
shl
fcmovbe
aam
mov
bound
pop
popa
and
int
loopne
lea
iret
pop
xor
aam
fistps
cs
lods
ds
cli
ficomps
xchg
or
add
es
outsb
test
pop
jae
test
fwait
cmp
aas
iret
aam
ficomps
outsb
sbb
les
lock
push
pop
test
lea
pop
test
jnp
js
movsb
cmp
jo
scas
scas
ss
pop
stc
in
adc
inc
lods
mov
inc
scas
aam
fldt
ljmp
adc
mov
lds
test
movsb
cmp
jo
dec
movsl
scas
es
dec
push
pop
das
pop
fldt
mov
stos
repnz
jo
mov
sub
lcall
jno
mov
xchg
repnz
jo
mov
fstpt
cmpsb
rol
les
lahf
fldln2
les
stc
push
fbstp
test
push
subb
push
rol
stc
test
andl
insb
test
push
leave
jns
in
cwtl
out
int
lea
adc
popa
dec
pusha
test
or
xor
repnz
sbb
out
mov
stos
test
les
pop
adc
std
popf
dec
shrl
cld
push
inc
push
add
cmp
jp
jne
push
and
cmp
insl
stos
and
jge
imul
aaa
pop
sub
shll
loopne
fsubl
sbb
repnz
test
sbb
dec
add
jecxz
inc
dec
add
xchg
add
addb
jb
ljmp
std
cmc
xor
xchg
test
sub
inc
jbe
dec
pushf
jbe
and
leave
mov
sub
add
in
pop
mov
lcall
mov
adcb
sub
inc
dec
sub
insl
mov
orb
es
shll
cs
mov
int
loope
mov
and
dec
cmp
xchg
inc
mov
out
push
loopne
inc
push
mov
sti
xor
jbe
adc
leave
mov
sti
add
jnp
mov
hlt
int
leave
subb
or
and
cmp
leave
mov
or
and
test
int
jecxz
imul
test
and
sahf
push
push
outsb
lds
addr16
iret
mov
sbbb
sub
inc
dec
sub
fisubs
subb
jnp
cmp
fmull
dec
hlt
aad
ret
aaa
pop
push
mov
pop
add
push
stos
xchg
or
xor
sahf
mov
cmpsl
js
outsb
jae
pop
fildll
repz
cmpl
fs
call
sahf
mov
xchg
in
push
push
lds
fs
jbe
imul
push
mov
sti
out
adc
clc
xor
es
jl
mov
clc
jl
int
repz
sbb
xlat
gs
mov
clc
arpl
pop
out
cmp
andl
adc
mov
enter
stos
andl
adc
mov
in
mov
jecxz
stos
andl
adc
mov
in
mov
jecxz
stos
andl
adc
mov
xor
sar
pushf
mov
in
cmc
rcrl
sti
or
adc
clc
jl
sti
mov
enter
jl
sti
push
fcoml
nop
cmc
enter
jl
sti
ss
adc
clc
jl
adc
dec
adc
jl
ret
scas
shrl
cltd
dec
pop
iret
cld
add
jl
adc
xchg
daa
iret
hlt
enter
jl
mov
imul
es
addb
adc
jl
test
jl
test
dec
sbb
jl
insb
xor
lea
xor
sar
jl
mov
or
nop
mov
jnp
cmpsl
xor
xor
jl
shrl
jnp
negl
ret
clc
repz
add
mov
inc
jbe
sub
test
push
xchg
cmp
lea
jecxz
pop
ret
xor
push
mov
xor
fbld
fdivs
fsubrl
dec
jg
jns
and
mov
inc
mov
push
cmp
cmp
mov
jmp
fcmove
test
pop
cmpsb
cmp
xor
outsl
lock
scas
or
mov
mov
ret
fucomp
aaa
fs
divl
jmp
in
and
dec
inc
xor
das
add
xchg
and
lods
test
adc
loopne
dec
bnd
xchg
dec
in
push
xchg
fmull
push
mull
movsl
out
popf
fdivl
sub
xor
cmp
popa
dec
enter
jb
jmp
scas
cmp
and
pop
jg
fidivl
adc
xchg
sarl
mov
inc
pop
xchg
loopne
and
push
loop
in
pop
sub
test
or
sub
jno
arpl
cmpl
xchg
int3
or
sbb
xchg
fwait
movsl
dec
adc
sbb
cmp
cs
stos
xchg
pop
and
insl
popf
inc
push
push
inc
test
mov
lods
fistl
mov
xor
or
adc
call
in
nop
stos
pop
arpl
xchg
pop
sub
gs
sub
jp
mov
rolb
xor
cld
sub
xchg
inc
fidivrl
popf
mov
add
adc
xchg
rcr
and
mov
iret
scas
cmpsl
mov
xor
jae
popa
push
clc
std
sub
xchg
sub
mov
push
das
notw
mov
sub
adc
mov
test
out
orl
push
jmp
lods
bound
add
dec
pop
push
add
stos
js
mov
popa
dec
jns
mov
mov
arpl
jne
xchg
jno
int3
fldenv
adc
pop
arpl
pop
rcrl
push
dec
insb
jne
lret
ja
adc
mov
jecxz
xchg
xchg
lahf
mov
jg
mov
pusha
ja
xchg
and
popf
test
jge
cli
daa
inc
or
mov
sbb
enter
movsl
add
bound
sbb
push
push
mov
sub
repnz
dec
push
mov
or
push
xchg
mov
push
add
push
xchg
nop
adc
inc
cli
push
ljmp
inc
sub
cmp
inc
mov
lahf
jl
mov
cmp
sub
das
dec
lahf
sub
out
xor
pop
xor
mov
call
jb
pop
rcr
jno
addr16
sub
jg
ss
nop
mov
movsb
bound
add
or
jmp
sub
xor
cmp
add
inc
cmpsb
xor
paddusw
mov
je
sub
xlat
lea
pop
jge,pt
sahf
inc
rcrl
idivb
mov
adc
pop
dec
push
insl
fistpl
enter
add
pushf
ja
sbb
fwait
or
sbb
in
xor
jecxz
jp
lods
dec
out
sarb
in
arpl
pusha
xchg
add
dec
sbb
mov
test
out
nop
adc
cmpsb
and
filds
rcl
dec
rcrb
xor
or
and
dec
pop
ljmp
add
cmp
lds
lret
mov
or
inc
sub
jbe
inc
push
repz
dec
scas
xor
xor
sbb
insb
adc
mov
lea
sahf
sbb
pop
adc
popa
xorl
mov
enter
aad
jo
sbb
dec
ret
insb
cmp
cli
out
cmp
loope
jle
cmp
xlat
ljmp
pop
loop
bound
subb
bswap
loop
push
fisttpll
mov
stos
sti
or
mov
lahf
iret
pop
dec
inc
mov
xchg
fadd
loop
cmpsl
pop
pop
divb
aad
ret
sub
cmpsb
mov
ss
lds
pop
mov
pop
adc
cmpsb
lds
sub
or
iret
stos
repz
imul
ss
lret
aaa
in
adc
out
adc
jae
fstl
jno
outsb
dec
xchg
jge
jno
scas
push
out
push
and
sub
test
lcall
stos
adc
dec
xor
aaa
lock
mov
aad
mov
loope
push
jl
fnstenv
loope
mov
xor
in
xchg
cmpl
xchg
fs
cmp
pop
push
sub
xchg
fwait
movsl
sub
or
or
div
mov
adc
ret
sub
faddp
adc
jmp
out
mov
aas
pop
xchg
push
arpl
cmp
insl
les
je
xchg
jae
and
xchg
jge
ror
or
cmp
call
fsubs
outsl
jle
shrl
mov
pop
push
add
sarl
pop
mov
test
mov
xchg
lcall
fisubrl
mov
xchg
push
andl
xchg
sbb
popa
sbb
cwtl
leave
bound
pop
jge
shlb
imul
incb
aad
mov
jmp
loope
in
dec
cmp
jae
in
xor
stos
and
pop
int3
mov
test
pop
inc
loopne
sub
cmp
gs
mov
test
xor
mul
xchg
outsl
lcall
jmp
push
and
mov
pop
push
mov
mov
add
fisttpll
add
stc
loopne
cmpsl
fstps
jnp
sar
sub
pop
adc
movl
or
inc
dec
mov
mov
or
mov
add
or
inc
mov
sub
lods
jne
outsl
sbb
jne
mov
jl
insb
rclb
push
scas
cwtl
add
popa
inc
test
add
sbb
mov
mov
pop
imul
sahf
cli
test
aaa
jge
mov
mov
jns
outsl
in
jl
cmpsl
nop
cmp
clc
in
sarb
loop
f2xm1
push
fstps
dec
and
repz
sub
pop
lods
ds
cli
idivl
sbb
aam
cmp
sbb
aas
and
in
out
sti
cmpsl
mov
xchg
fistpl
mov
pop
and
push
mov
sub
pop
inc
in
xor
out
pop
pop
stos
sub
ss
mov
out
pusha
sbb
int
cmp
inc
ljmp
std
dec
cwtl
pushf
dec
call
mov
push
es
dec
xchg
push
xchg
testl
cmp
mov
inc
jg
push
pop
aad
xchg
popa
dec
dec
dec
cmp
and
mov
sbb
jmp
test
pop
or
outsl
mov
sub
movnti
xchg
pusha
loopne
mov
movb
pushf
call
rorl
in
and
cmpsb
pop
cmp
xor
push
ret
mov
repnz
popf
mov
imull
repz
aad
inc
repnz
pop
and
and
jg
jle
pop
jge
adc
imul
das
ret
cmpl
adc
mov
push
push
lahf
addl
sub
adc
or
or
pop
je
add
movsl
lret
rcrb
cmpl
fs
sub
loope
outsl
ss
xor
in
pop
fwait
inc
loopne
push
lret
hlt
aaa
xchg
lea
orl
fdivp
pop
dec
cmp
mov
ds
xor
in
mov
push
rcrb
shr
test
fsubrl
gs
sti
mov
add
push
dec
mov
loop
iret
dec
sub
add
xor
sbb
imul
loopne
jge
call
test
ss
jle
add
mov
add
mov
xchg
je
insl
out
divl
dec
dec
push
out
testb
cmc
inc
jge
adc
push
test
add
mov
and
push
and
cmp
mov
movsl
inc
jne
push
adc
pop
orl
mov
jnp
push
fnstenv
and
popf
adc
and
in
sub
movsl
mov
insb
lods
cltd
sub
pop
push
lcall
cmp
lea
loope
xor
add
mov
lods
sbb
inc
cmpsl
clc
rolb
enter
push
loop
jmp
div
adc
xchg
into
scas
mov
mov
fnsave
jecxz
inc
out
dec
inc
aad
fcmovnu
sub
out
in
insl
cmp
ja
adc
icebp
mov
push
dec
sahf
xor
push
cmp
fincstp
xor
mov
pop
dec
xchg
in
mov
sarl
and
pop
or
sbbl
dec
sub
movsl
scas
and
push
jge
stos
adc
fs
add
xchg
sbb
dec
or
fdivr
fs
inc
aas
test
cs
xchg
xchg
lods
add
shll
sbb
sahf
js
sbb
and
dec
xchg
cmp
mov
aam
cmp
imul
andb
dec
cmp
lahf
stos
aaa
aaa
adc
call
sub
inc
loopne
sub
cli
dec
dec
push
mull
repz
pop
inc
mov
push
or
ret
mov
xchg
pop
cmc
call
popf
dec
rclb
ss
in
jae
sti
movsl
inc
pop
cmp
gs
sub
ja
mov
popa
js
fdivr
lret
nop
cs
mov
jne
popf
add
ret
mov
testl
jl
rolb
lret
push
out
mov
add
mov
xchg
push
movsb
arpl
or
jg
mov
inc
cmp
xlat
cmp
mov
sahf
call
push
aam
xchg
dec
fnstsw
mov
push
movsl
je
xor
inc
sbb
push
sub
arpl
sbb
xchg
cmpb
push
mov
outsl
jle
jl
mov
inc
mov
in
aas
hlt
imul
push
aad
sbb
bound
imul
and
pop
je
inc
mov
mov
or
adc
cmpsb
notb
xchg
shlb
xor
js
jl
xchg
filds
jmp
push
mov
idivl
out
dec
fidivs
lret
adc
jmp
and
pop
les
cmp
insl
negb
and
aam
xchg
and
fistpl
aas
inc
loopne
sub
dec
mov
je
popl
inc
xchg
enter
cmp
sub
test
add
jmp
mov
pop
loopne
xchg
push
addr16
jge
aas
pop
cmp
pushf
or
xorb
popf
mov
inc
xchg
mov
or
shll
push
stos
mov
xchg
shlb
inc
xchg
movnti
ret
mov
imul
sar
push
call
cmp
cmp
hlt
call
adc
scas
xchg
jne
push
push
cmp
flds
addb
add
mov
mov
or
jmp
mov
pop
push
pop
lea
pusha
lock
pop
and
cltd
in
mov
push
ds
lahf
cltd
jl
arpl
scas
out
lods
adc
daa
std
cs
dec
out
inc
frstor
or
test
lods
push
sbb
js
mov
cmp
jb
pop
xchg
lods
push
xor
lds
lds
insl
adc
push
int
sbb
out
mov
scas
cmpsl
mov
xor
xlat
enter
clc
mov
and
mov
or
cwtl
xor
outsb
mov
clc
jl
add
ret
xchg
fstl
fistl
and
int3
outsl
jle
ja
lret
push
in
aas
add
test
fstp
xchg
movsl
cmp
jl
in
pop
fcoml
in
mov
mov
cltd
cmp
adc
and
jb
push
xchg
fisttps
push
aas
jl
repz
es
in
jl
cmovns
out
incb
sbb
pop
lcall
and
pop
xor
xor
dec
jecxz
lods
pop
sbb
lret
cmp
cltd
rolb
jle
out
jmp
sbb
cmp
pop
cmp
mov
imul
dec
bound
pop
lea
loop
scas
shl
cmpsl
leave
mov
add
cltd
rolb
fstps
pop
push
jmp
pusha
xor
mov
or
cli
inc
jmp
fmulp
mov
pop
imulb
outsl
imul
cmp
bndldx
sub
outsb
test
pushl
sub
xchg
push
add
jnp
ret
out
mov
imul
in
ljmp
int3
outsb
lock
stos
stos
movsl
outsl
lahf
pop
data16
push
inc
ja
cmc
pusha
imul
push
or
jb
imul
and
lret
cwtl
test
push
dec
iret
push
sarb
push
lret
pop
push
es
inc
sbb
std
or
int
jnp
cmp
xor
int
das
lods
jge
inc
mov
dec
cmpsb
add
lock
push
cmpsb
ljmp
sub
out
insl
and
xchg
lret
jmp
mov
popf
mov
push
inc
push
mov
mov
push
movsl
int3
out
push
xor
jl
mov
and
push
cvtpi2ps
ret
dec
rol
addb
mov
xor
jnp
jne
out
cs
loopne
mov
in
fsts
test
and
fidivrl
pop
out
push
icebp
inc
sub
scas
or
adc
insb
add
jb
or
sbb
aaa
dec
imul
mov
sbb
push
int3
dec
cld
sub
push
clc
push
fstps
adc
lahf
scas
push
and
sub
popf
xchg
aam
sub
iret
dec
sbb
icebp
aam
inc
xor
movsb
sub
in
int3
aam
aas
popl
pop
lods
movl
loope
adc
push
in
testb
add
jl
mov
imul
in
dec
and
jne,pn
inc
in
xchg
dec
inc
mov
adc
lock
adc
lock
or
cld
arpl
ss
les
dec
ret
cmp
sbb
inc
mov
push
subl
or
pop
lea
ds
leave
std
push
mov
fidivrl
outsl
rorl
lret
repnz
leave
cmp
hlt
cmp
and
cmp
push
jo
leave
and
xor
stos
test
fmuls
adc
inc
xchg
imul
fisubs
loope
cmp
data16
fdivrs
inc
push
or
push
aas
add
dec
loope
xchg
or
arpl
jmp
testb
cmp
popf
negb
orb
mov
lcall
popf
lcall
insb
push
cmpsb
cmc
mov
sub
mov
jge
icebp
loop
mov
cli
dec
arpl
in
jmp
cld
dec
cmpsb
xchg
mov
fwait
cs
jb
movsl
out
inc
std
xchg
das
inc
lods
lret
divb
je
pop
dec
enter
je
and
mov
divl
in
or
hlt
movsb
xchg
adc
fcoms
mov
mov
cltd
test
mov
ja
ret
fwait
jo
inc
orl
mov
in
dec
es
inc
stos
test
js
push
jb
test
dec
xor
push
push
lods
mov
pop
xchg
adc
jge
dec
cltd
push
js
ja
sbb
add
or
push
jo
shlb
cmp
jg
mov
popa
xor
mov
sbb
pop
in
push
pop
jb
adc
insb
jg
daa
mov
dec
imul
jp
insb
mov
pop
sbb
bound
data16
or
mov
scas
push
ds
inc
outsb
mov
je
push
imulb
dec
mov
add
pop
dec
mov
ljmp
mov
dec
sbb
subl
add
test
lds
pop
bound
jge
movsb
xor
cmp
inc
cmp
jge
add
pop
test
mov
jbe
in
in
popf
cs
push
and
outsb
mov
cmpl
and
pop
mov
inc
cmpsl
inc
mov
xchg
jmp
jge
inc
bound
sbbl
mov
sub
daa
not
mov
jge
pop
sub
aaa
mov
mov
xchg
mov
ss
push
lods
out
xchg
imul
push
lock
cmp
fldt
mov
cmpsl
fs
or
les
icebp
push
sahf
mov
aaa
js
sub
icebp
inc
lods
lock
dec
jne
in
inc
shll
icebp
fbstp
and
mov
in
or
scas
pop
gs
add
adc
sbb
and
neg
lahf
loopne
dec
fstl
mov
insl
jp
std
cmp
rcll
mov
in
movsb
and
cltd
or
add
adc
sbb
sub
jl
adc
dec
insl
lahf
inc
mov
mov
mov
push
inc
clc
rorl
jb
mov
sti
ficoml
lods
sub
xchg
idivb
pop
fmull
stos
pop
inc
lahf
push
cwtl
add
sahf
jmp
shlb
popa
cmp
inc
xlat
push
xchg
and
ds
clc
mov
outsl
adc
xchg
dec
mov
and
fcomps
jne
adc
adc
dec
cwtl
daa
icebp
imul
sti
idiv
in
xor
fstpt
dec
xchg
push
add
cwtl
or
test
imul
and
adc
sub
in
dec
adc
int3
movsl
cmc
rol
pop
clc
test
std
movsl
xchg
in
cli
inc
and
pop
mov
adc
xor
push
push
xchg
sub
ja
ret
insb
cmp
push
mov
test
fildl
inc
movl
mov
cld
and
pop
sub
and
add
imul
xor
dec
inc
jle
sahf
in
jl
pop
sub
popa
and
dec
aas
iret
mov
adc
sbb
loope
xchg
ja
add
es
jo
fldcw
and
push
ljmp
gs
sarl
hlt
mov
jns
enter
arpl
cmp
mov
cld
inc
ret
push
scas
and
in
mov
sub
das
ret
mov
jecxz
adc
dec
fs
xchg
and
in
mov
pop
test
jns
outsb
ror
sbb
dec
aas
lods
adc
repz
cmpsl
fiadds
push
xchg
jns
mov
loop
push
loopne
enter
push
pusha
or
mov
and
cmc
or
add
sub
icebp
arpl
sahf
fcmovnbe
jbe
ss
pop
mov
cmpsl
dec
xor
leave
cmp
push
sarl
or
dec
bound
push
xlat
lea
sub
mov
pop
xor
xor
paddsw
out
out
mov
pop
aas
inc
loope
andb
cwtl
add
test
adc
xor
pop
orl
icebp
into
mov
in
lret
cmp
lds
dec
inc
jns
jo
jmp
sbb
clc
xchg
pop
jmp
insb
dec
push
mov
orb
sbb
inc
cmp
push
cmp
xor
sbb
into
mov
fwait
fwait
cwtl
mov
cwtl
adc
pop
and
push
xor
push
adc
pushl
inc
sub
cmpsb
jne
enter
bnd
mov
and
xor
getsec
int3
push
ret
and
gs
or
ss
sbb
pop
dec
cmp
enter
and
and
inc
mov
mov
xchg
jecxz
push
test
xor
bound
enter
rorl
sar
inc
loopne
cmc
outsb
push
mov
pop
mov
into
outsb
cmp
mov
xor
push
lcall
xchg
adc
popf
test
jmp
in
pushf
test
cltd
lret
mov
cltd
adc
push
lods
int
popf
clc
in
popf
sahf
and
out
mov
pop
call
pop
neg
js
fs
mov
les
test
out
fsubrs
test
fnstcw
cmp
inc
or
shrb
mov
inc
mov
mov
ljmp
xor
sar
dec
pushf
cmp
push
icebp
enter
inc
push
pop
popa
and
lea
pop
ss
imul
add
xchg
sti
in
mov
mov
outsb
dec
out
jg
enter
sbb
jge
mov
scas
clc
popa
push
add
ret
and
les
fstpl
fwait
iret
popf
xor
fcomps
gs
idiv
aad
sbb
jns
push
mov
jmp
dec
pop
mov
or
xor
inc
dec
mov
clc
jae
lahf
push
mov
lret
std
dec
lods
adc
outsl
jg
pop
push
je
push
sub
pop
mov
cs
mov
xor
sti
pop
mov
es
decb
test
iret
dec
shl
pop
in
sub
cmpsl
loop
iret
pop
in
xor
push
stos
clc
cmc
icebp
mov
push
inc
mov
jnp
fisttpl
cs
push
add
add
pop
cmp
cmpsl
dec
inc
push
cs
aas
subl
pop
lock
scas
jmp
hlt
out
mov
pop
pop
shr
adc
inc
fisubrl
mov
cmp
jo
int3
stos
inc
push
xlat
cmp
into
das
popa
and
jbe
nop
or
nop
cmp
daa
jmp
dec
pop
cmp
jge
dec
in
fcmovnbe
cmpsb
ja
mov
fcoms
push
fucomi
insl
inc
push
mov
icebp
mov
xor
sbb
add
add
add
stos
pop
cmp
fs
adc
adc
scas
jo
ret
rorb
jno
xchg
add
push
sub
cmpsl
loope
push
mov
aaa
data16
lcall
incl
mov
jns
je
aam
mov
push
xor
jns
mov
mov
daa
inc
xor
movsl
js
jo
mov
stos
aad
fisttps
add
ljmp
lret
dec
mov
daa
js
xlat
push
icebp
cmp
push
into
or
dec
lods
arpl
dec
push
xchg
inc
mov
xchg
cmp
ss
add
cmc
or
mov
aad
jb
outsb
shl
add
and
adc
popf
mov
dec
fcomi
sbb
add
fs
mov
ds
mov
xlat
loop
ret
sbb
int3
pop
or
push
jno
xor
or
pop
xchg
sti
mov
aaa
pop
jmp
dec
fildll
in
xor
sub
dec
pop
out
ret
in
shll
std
icebp
push
pop
mov
jbe
pusha
inc
xchg
pop
jg
push
ljmp
out
movsb
lods
sub
mov
sbb
mov
add
insb
xchg
push
ret
sahf
aaa
mov
adc
push
or
lds
inc
adc
lahf
aaa
mov
mov
jmp
cmpsb
fisubl
fs
iret
notl
lods
xchg
ficoms
mov
testl
xor
loope
test
mov
xchg
movsl
pop
cmc
inc
icebp
sbb
andb
js
movsb
inc
xchg
and
enter
mov
negl
pop
mov
cmp
pop
stos
jecxz
mov
cmpl
mov
loopne
and
inc
out
sbb
faddl
mov
bound
mov
xor
xor
not
mov
sbb
pop
sub
cmp
int3
iret
sub
mov
pushf
push
or
adc
fstpl
es
fstpl
fwait
rorl
in
push
cmpsb
fsubl
add
lods
stos
add
mov
jp
dec
push
call
jmp
scas
push
mov
lret
add
sbb
std
mov
inc
xchg
and
ds
xchg
push
es
pusha
pop
adc
jno
mov
push
cmp
fcmovbe
pop
adc
xor
lcall
mov
adc
and
pusha
jge
std
sbb
imull
cmpsl
sar
ljmp
pop
pop
mov
and
rol
daa
xchg
pop
push
push
jl
addr16
push
movsl
mov
scas
mov
push
adc
pop
insl
pusha
pop
popf
jne
dec
fs
push
sbb
jp
jns
mull
addl
push
imulb
cmp
loop
pop
clc
or
jl
shl
scas
repnz
rcrl
push
loop
test
cld
xchg
jbe
adc
insl
and
sti
js
sbb
cltd
fisttpll
loopne
dec
xchg
dec
decl
stc
pop
xor
adcb
mov
mov
movsl
fs
fsubrs
in
sub
les
inc
repz
sub
mov
or
mov
out
cmp
jo
and
fimuls
jne
pop
lock
jo
mov
add
call
ljmp
fisttpll
pop
test
fwait
cmp
ss
mov
xbegin
call
and
adc
or
into
sbbb
daa
mov
push
mov
in
test
call
dec
scas
pop
add
xchg
cmp
shrl
adc
jb
rolb
in
or
cwtl
push
or
js
lret
pusha
push
cmpsb
inc
test
pop
xlat
lcall
push
fs
je
mov
adc
cmc
xchg
pop
shl
cmp
movsl
div
hlt
adc
jge
cwtd
push
jae
pop
bnd
es
mov
enter
adcl
jno
lods
cmp
lret
test
sbb
mov
stos
pop
ror
mov
sarl
pop
in
arpl
dec
in
lock
aad
jle
and
adc
shrl
sbb
mov
xchg
imul
mov
cld
cmpsl
jmp
jge
adc
imul
loop
cld
or
mov
push
and
sub
ret
xor
adc
lods
stc
pop
test
outsl
sub
inc
or
ret
cmp
fisttpl
sbb
push
out
das
push
clc
adc
in
xor
add
das
and
test
mov
mov
dec
loope
and
out
pop
sub
mov
test
int
jecxz
mov
das
sbb
test
jge
cwtl
push
addl
arpl
test
lods
adc
test
jecxz
in
int3
sbb
loopne
addr16
testl
outsl
cwtl
les
dec
dec
cwtl
adc
sub
mov
push
js
inc
out
in
xor
add
add
xor
dec
daa
lds
daa
dec
mov
clc
jecxz
xchg
test
or
jns
fisttpll
pop
push
xchg
push
mov
xchg
arpl
jns
mov
or
cmpl
test
or
lock
andl
imul
lea
int
out
push
mov
sbbl
jmp
adc
gs
in
mov
jge
int
mov
ja
insb
cmc
jns
mov
test
adc
jl
or
outsb
dec
leave
xor
mov
mov
mov
fxam
mov
add
movsb
inc
js
cmp
hlt
popl
jns
push
mov
int
push
push
xor
xchg
fdivl
imul
shufps
inc
rorb
adcl
jl
jno
mov
mov
and
insl
inc
jl
inc
adc
inc
lahf
in
movsl
xor
push
decb
fstps
jae
cmp
lret
sub
js
repnz
shlb
int
add
popa
push
push
mov
dec
push
mov
sbb
or
dec
mov
xor
testb
sbb
dec
lods
andl
xchg
mov
mov
mov
fldcw
negl
or
cmc
sbb
push
mov
enter
cmpsb
test
cmp
cld
imul
xchg
loope
in
nop
fucomi
sbb
mov
lock
movsb
cltd
cmpsb
sbb
pushf
daa
dec
and
mov
int3
and
xor
clc
adcl
scas
adc
adc
xor
mov
cmp
pop
inc
fistps
js
dec
ja
mov
mov
roll
dec
jnp
push
adc
pop
mov
mov
test
mov
xchg
stc
adc
aad
and
loope
and
mov
add
jge
mov
daa
and
scas
xor
sbb
fmulp
lds
add
push
mov
mov
enter
xor
iret
nop
pushf
pop
pusha
sub
xor
inc
cmc
repnz
and
xchg
inc
out
push
loopne
sub
adcb
mov
cmp
rcll
xchg
lock
dec
mov
xchg
fsubrs
mov
enter
xor
out
adc
js
sbb
ror
ret
cmp
lret
and
fcompl
enter
jo
xchg
popf
clc
in
out
push
mov
dec
clc
out
das
and
mov
movsb
inc
shlb
jg
pop
fwait
sub
insb
test
shlb
and
rcr
test
aam
test
faddl
jb
loope
mov
jne
mov
cmpsl
fs
icebp
lds
inc
ret
loop
pop
stos
shll
pop
mov
jno
fimull
xor
push
cmc
ret
inc
mov
lahf
popa
rorl
add
sti
inc
push
addr16
pop
das
js
ror
add
into
stos
mov
in
arpl
notw
mov
mov
stos
aaa
loop
cmp
out
xor
inc
push
stc
subb
dec
and
jge
repz
push
pusha
or
cld
out
loop
icebp
int
iret
stos
out
cmp
push
daa
sub
adc
jmp
xchg
adc
mov
pop
in
out
cmp
lods
mov
cmp
psubsb
mov
sti
xlat
jl
rcrb
and
jmp
enter
pop
lret
push
xor
subb
add
in
fsubrl
jl
mov
aaa
jbe
cmp
sahf
jns
xchg
mov
xchg
xor
xor
ficoms
jp
pop
bound
imul
scas
out
mov
jbe
and
sbb
inc
jb
dec
mov
imul
push
xchg
push
inc
outsb
mov
mov
jae
sbb
dec
and
xchg
jecxz
adc
or
mov
loope
out
sbb
inc
push
enter
jl
cmp
cmp
mov
adc
push
mov
pop
pop
movsb
lret
jl
dec
jns
pop
pusha
push
inc
fildll
pop
cmp
jnp
lea
or
push
pop
leave
mov
cmpl
mul
adc
test
test
cmp
filds
jae
inc
scas
sub
in
pushl
dec
sarl
cwtl
mov
or
inc
mov
and
mov
xchg
popa
dec
sahf
cmp
movsb
outsl
aam
test
pusha
jg
and
jo
lods
mull
cltd
fimull
mov
or
xor
push
jmp
out
and
cmp
mov
mov
dec
mov
push
push
aad
mov
xchg
mov
mov
xchg
cmc
jne
dec
mov
pop
jle
in
push
add
adc
jnp
cmpsl
inc
or
inc
out
mov
jge
inc
jge
scas
xchg
jae
pop
push
sbb
jecxz
lcall
sbb
lock
ja
das
add
push
int3
test
sbb
call
loope
bound
into
or
fs
or
rorb
push
es
push
xor
mov
add
mov
dec
cli
mov
dec
ss
push
dec
mov
cmp
pop
or
jle
mov
inc
push
sub
ds
call
push
add
lcall
adc
sub
and
les
roll
test
inc
les
push
paddsw
insb
adcb
loop
xchg
sbb
pushf
pop
ds
add
dec
addb
imul
inc
inc
push
adc
mov
int3
cmp
lods
pop
jle
outsb
leave
inc
lds
fistpl
repz
push
sub
cld
ljmp
xchg
cmp
add
push
or
dec
mov
ljmp
and
inc
pusha
jno
iret
or
xor
leave
lcall
imul
cmp
arpl
jbe
add
or
les
xchg
jne
aam
mov
push
out
hlt
std
mov
jmp
lods
sbb
mov
movsb
or
add
jp
addb
dec
xorl
rcr
int
rolb
dec
in
ficompl
mov
mov
pusha
aas
or
mov
jbe
xchg
out
sbb
aas
mov
insb
das
inc
or
mov
aam
cmp
test
inc
or
mov
add
inc
outsb
push
inc
inc
jecxz
xor
jo
out
les
nop
dec
les
xor
lods
loope
movsb
dec
cmpsl
sarl
sbb
pop
test
mov
xlat
push
lret
out
mov
into
jl
and
lahf
pusha
push
mov
das
call
pop
mov
test
and
jnp
mov
ret
mov
mov
inc
das
icebp
imul
fnstcw
test
test
pop
add
xor
mov
andb
rorb
push
dec
pop
insb
pushf
or
pop
cld
jmp
xor
out
lock
vpsrlq
iret
loopne
jl
repnz
xor
and
pop
or
aad
inc
xchg
push
mov
popf
shll
data16
or
mov
repnz
push
aas
xchg
sub
mov
loopne
test
scas
rcrl
mov
mov
mov
fbld
in
into
int
mov
outsl
jp
mov
call
out
push
xor
repz
xchg
jge
xchg
repnz
jne
shrl
jb
mov
gs
xchg
call
jb
in
dec
setne
jb
xor
scas
sar
add
push
clc
jl
call
repz
sbb
jl
shl
sub
xor
xor
enter
out
xchg
push
in
clc
jl
ret
inc
sub
dec
pop
sub
andl
gs
lds
pop
cmp
pop
xchg
adc
add
rolb
and
mov
mov
imul
ljmp
sub
and
push
pop
imul
int
sub
jl
in
xchg
dec
out
xchg
fwait
xor
sub
movsl
sbb
xchg
fs
add
mov
adc
sar
test
clc
jl
inc
sbb
aam
mov
fldt
pop
xchg
inc
cmp
xor
aaa
push
loopne
jo
jnp
jl
pop
shl
inc
and
or
rcrb
mov
cmpsb
frstor
ficomps
jp
fucom
loope
and
in
pushf
sub
sbb
repnz
xchg
int
jmp
push
xchg
xor
fnstsw
jge
xorl
aad
add
lock
mov
stos
jp
jmp
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
outsl
adc
xor
pusha
adc
sbb
cmp
clc
cmp
adc
pop
mov
and
pop
clc
fcoms
xor
pop
mov
and
cmp
clc
jno
adc
pop
mov
and
jge
adc
pop
mov
and
in
pop
clc
dec
fcoms
xor
in
jbe
test
inc
in
movsb
test
mov
les
jmp
aaa
sub
rcl
fwait
push
aas
add
aam
sti
negb
mov
pop
adc
xor
or
std
mov
lahf
cli
repz
sarl
xor
lods
sbb
ja
push
or
cmp
inc
int3
sbb
xchg
popf
push
stos
outsl
test
jbe
movsl
pusha
sbbb
fldenv
jnp
push
movsb
pop
mov
jg
pop
ficoms
mov
or
repnz
jmp
cld
mov
fcoms
and
jne
xor
push
pop
xor
mov
dec
jecxz
test
or
xchg
lret
test
cmp
jae
jno
cmpsl
cmp
cmp
cmp
jle
cmp
inc
cmp
inc
sarl
outsb
pop
stos
int3
out
mov
adc
call
xor
push
push
push
daa
cld
lahf
negb
loope
push
pop
je
rcll
mov
lret
inc
inc
int
in
mov
stc
pop
data16
and
hlt
dec
and
push
inc
cmpsl
push
cs
sbb
mov
sub
dec
cmc
or
push
mov
es
jno
dec
js
lds
pop
mov
jg
sbb
gs
add
cmpb
or
cwtl
rorl
cmp
ja
xorb
and
ss
jge
insb
pop
xlat
jae
sub
imul
loop
pop
xchg
push
mov
sahf
mov
mov
pop
cmpsb
std
dec
push
mov
ss
cmp
sbb
andb
insb
incl
mov
adc
dec
out
sub
mov
dec
add
mov
imul
jge
int3
adc
xlat
lock
jb
sti
rcll
add
repnz
cld
xchg
xchg
fdivr
aas
loope
das
pop
mov
jb
pusha
andb
roll
inc
dec
movsl
das
mov
in
jge
sub
add
mov
gs
pop
push
or
inc
mov
pop
jmp
ljmp
lahf
out
pop
in
inc
in
or
cmp
sbb
fadd
mov
pop
mov
iret
leave
cmp
cmpsl
shlb
jns
push
repnz
mov
sub
ljmp
es
out
scas
test
iret
je
pop
jnp
test
je
mov
cmp
or
xchg
inc
negl
popf
xor
bound
loopne
outsl
loope
in
ret
jl
scas
cmp
and
daa
insb
ret
cwtl
add
ljmp
dec
jl
mov
mov
sbb
and
xor
cmc
push
mov
push
out
push
and
jb
pop
or
test
pop
xlat
into
cli
shr
or
sbbb
mov
loop
mov
dec
add
adc
icebp
ds
cwtl
outsb
js
push
scas
insl
repz
mov
imul
inc
cmpsb
into
int3
cmp
mov
or
pop
adc
test
adc
dec
xor
add
pop
or
je
push
xor
inc
shr
lcall
sbb
dec
mov
pop
or
xor
xor
pop
clc
mov
cmpsb
int
push
push
push
xor
call
pop
fnstsw
jge
imul
cmp
lods
xchg
cld
sbb
fadds
mov
xchg
out
in
repz
mov
enter
and
or
and
insb
dec
xor
cmp
xchg
inc
lcall
add
loop
into
daa
or
fdivrs
jae
stos
push
xor
dec
jp
mov
ss
out
scas
bound
push
xchg
adc
xchg
aas
fcmovne
xor
and
daa
out
in
pop
test
mov
aad
aam
fcoms
divps
std
push
cmp
scas
xchg
inc
loopne
lods
lret
dec
movq
test
xchg
imul
shll
push
mov
push
inc
lahf
xchg
nop
inc
adc
jp
addl
mov
daa
dec
stos
pop
mov
lea
ret
mov
sbb
adc
xchg
jg
dec
pop
enter
fsubrs
mov
sub
jne
or
mov
cmpsl
lock
dec
pop
sub
pusha
xor
into
fistps
test
ret
jnp
dec
cmp
sbb
dec
popa
addr16
in
lret
push
fcmovb
and
imul
cmp
js
mov
mov
dec
or
ljmp
or
lcall
idivl
movsl
in
icebp
adc
and
imul
add
in
fisubl
fs
or
xchg
sub
rorb
add
xor
iret
cmp
dec
pop
pop
mov
stos
mov
mov
imul
pop
inc
aaa
sub
and
xor
pop
dec
js
add
mov
mov
ja
in
cli
cmp
popa
popf
sub
hlt
sub
and
xlat
mov
push
lahf
in
ds
mov
xchg
cmc
test
xchg
dec
push
and
or
pop
and
mov
cmpsl
xchg
push
adc
leave
es
int3
shrl
sub
rorb
push
aas
adc
shl
in
fld
add
and
mov
sub
test
mov
push
dec
jbe
xchg
add
mov
test
mov
dec
movsl
xchg
jp
add
push
es
divb
filds
fsub
and
movl
lods
inc
pushf
das
into
jnp
pop
push
push
icebp
sbb
xlat
out
das
cmp
js
ja
sub
test
cmc
jmp
adc
addr16
push
cmp
sahf
jno
imul
std
jno
sub
aam
dec
fstp
iret
cmp
ret
pop
jne
sub
xchg
xor
jl
fwait
loope
aad
push
and
and
dec
sub
jmp
pop
xor
repnz
xchg
out
gs
std
push
jo
nop
lahf
jg
lcall
leave
and
scas
fildl
std
push
push
push
jp
fcomps
mov
dec
cmp
popf
popf
fstl
sbb
daa
ficoms
mov
stos
pop
ret
insb
out
fisubrl
icebp
inc
sahf
lcall
cmp
mov
lea
pop
adc
lret
movsb
std
loopne
pop
test
jge
cmp
rcr
pop
push
sbb
incl
xor
ret
aas
mov
dec
xchg
xor
fwait
jae
inc
aam
movhps
fcmovne
shl
bndstx
dec
int
in
adcl
aas
sub
adc
mov
ljmp
testb
sbbb
and
movl
insl
xchg
mov
sub
pop
pop
xor
add
into
ds
shll
bound
sub
and
icebp
popf
lahf
jg
imul
int3
cmpsb
inc
aaa
stos
push
cld
rol
or
mov
add
loop
fistpl
dec
popf
xor
loope
insb
jmp
inc
mov
jg
lahf
add
jg
loope
aaa
lret
in
sti
outsl
jmp
sbb
add
outsb
mov
call
mov
mov
jl
outsl
outsl
arpl
insb
inc
or
add
cmc
mov
sub
mov
fwait
cs
addl
xchg
lock
ret
test
and
out
fistps
andl
fists
fildll
xchg
mov
dec
ja
cmp
push
push
jbe
cld
iret
test
sub
inc
pop
fdivl
sub
or
sub
lret
jae
movlps
into
mov
dec
fidivrl
push
js
test
mov
lds
cmp
sbb
sub
lcall
mov
daa
mov
dec
or
aad
outsb
imul
push
ret
sbb
fsubrs
push
fmuls
and
aaa
std
adc
mov
ds
mov
xchg
fstl
and
mov
shll
cmpsb
xchg
push
fsubl
out
lods
ret
or
mov
jbe
icebp
jae
sbb
or
adc
add
addr16
into
push
push
xor
pop
pushf
add
inc
je
in
hlt
adc
sbb
dec
dec
ljmp
rcrb
xchg
ss
xor
test
fucom
scas
lods
jbe
loope
sbb
add
ret
gs
cmpsb
fcompl
pop
adc
add
fimuls
test
iret
dec
mov
in
inc
lret
or
pop
int
xchg
pushf
sub
leave
les
mov
push
in
jge
xor
pop
sub
hlt
jb
stos
push
mov
or
imulb
pop
or
mov
dec
pop
dec
insl
inc
mov
inc
sti
nopl
cwtl
popa
arpl
xlat
ds
and
xchg
sbb
add
stos
repz
mov
push
loope
mov
jge
pop
or
pop
jne
push
stos
arpl
idivl
stc
in
adcb
jge
lods
cs
imul
mov
and
jle
addl
pusha
dec
mov
sub
inc
xlat
lret
fistl
cmp
xor
push
dec
je
cmpsb
dec
daa
sbb
fists
js
and
stc
outsb
or
mov
aam
out
cmp
xchg
push
mov
stc
and
add
jae
jnp
or
lcall
xchg
lcall
clc
rorb
add
add
nop
inc
ljmp
ret
loopne
or
inc
sub
int3
dec
inc
aas
insb
inc
dec
pop
int3
jg
jo
cli
inc
loopne
nop
add
push
cmp
push
ds
cmp
sbb
dec
ja
push
push
rorl
sub
xchg
inc
push
push
lcall
xor
inc
pop
dec
lock
push
xor
xor
push
dec
jne
jle
mov
cmp
lods
cmp
jge
xchg
pop
stos
iret
pop
pop
jbe
add
push
fsub
leave
pop
jl
lret
pop
adc
movsl
pop
stos
jb
mov
popf
div
popa
out
cmp
inc
cmpsb
mov
sbb
add
pop
cmp
js
lods
arpl
imul
dec
mov
fists
xchg
out
fistpl
sub
cltd
cli
cmp
inc
ss
jmp
sbb
dec
daa
mov
adc
inc
pop
rolb
pop
jg
int3
subl
or
mov
mov
push
cld
dec
test
adc
testl
sti
div
imull
xor
dec
loope
pop
dec
insl
cmp
data16
push
cmp
or
xor
and
mov
daa
sub
mov
icebp
push
sbb
ds
mov
xor
pop
icebp
sbb
sub
in
dec
and
push
fwait
pop
xorl
jbe
inc
out
dec
sub
mov
mov
mov
xchg
outsb
pop
cmpb
pop
inc
adc
and
dec
in
mov
in
test
loope
lret
out
je
add
adc
push
leave
outsb
sahf
mov
jo
inc
cmpb
dec
scas
scas
pop
xor
pop
test
pop
cwtl
mov
mov
cli
push
call
xchg
repnz
sarl
aaa
inc
lahf
mov
int
inc
rclb
fidivs
xor
cmovne
mov
ret
push
mov
cmp
cmp
pop
mov
rolb
imul
enter
jne
and
jo
inc
jge
orl
sub
pusha
dec
and
jb
adc
das
sahf
pop
aam
das
pop
ret
sbb
out
dec
push
es
cltd
cli
mov
loop
push
negb
mov
gs
mov
hlt
inc
add
mov
dec
inc
cmpsb
fnstenv
and
pop
in
jns
jge
shlb
cld
repz
pop
xor
lret
mov
test
sub
mov
inc
mov
loop
mov
aam
fistps
or
pop
scas
outsl
adc
push
jge
mov
dec
popf
dec
jb
xchg
inc
mov
add
out
ret
insb
push
and
pop
or
pop
dec
sbb
dec
pop
scas
enter
insl
push
or
repnz
lret
gs
daa
pop
repz
mov
xor
pop
nop
stos
notl
fldpi
mov
lock
cwtl
xor
pop
dec
test
push
insl
jmp
inc
in
cmpl
cmpsl
cs
leave
das
pop
fs
test
xchg
dec
sbb
sbb
outsb
lock
fidivrl
adc
jle
int
cltd
fildll
mov
stos
cmpl
popa
divb
adc
sub
dec
mov
je
repz
mov
push
iret
das
cmova
es
psraw
nop
fldl
mov
cmpsl
xchg
sbb
rorb
cmp
lret
clc
xchg
cmpsl
push
sbb
push
mov
popf
addr16
adc
xchg
jbe
push
push
jb
out
mov
xlat
pop
das
inc
shrl
enter
cmp
leave
pusha
data16
pop
jae
push
or
shrb
ds
or
mov
sbb
gs
pop
xchg
sbb
xor
stos
push
mov
pop
mov
icebp
mov
mov
popa
add
sahf
aad
dec
imul
shl
push
ds
dec
dec
andb
stos
fcompl
popf
mov
sbb
shlb
sub
and
out
add
dec
notb
rcrb
cmc
push
lods
inc
inc
fistps
cmc
in
icebp
repnz
cmp
mov
negl
mov
stos
shll
sbb
repnz
sarb
fldenv
xor
xchg
inc
mov
and
sub
and
in
fs
or
mov
and
adc
rolb
sbb
inc
es
enter
loope
outsl
jnp
pop
clc
mov
or
in
imul
sbb
pop
gs
js
pop
sbb
sbb
int
xchg
clc
addr16
stos
std
mov
fldt
sbb
xchg
xor
jg
sbb
mov
mov
jno
add
or
jb
adc
add
lret
add
adc
and
int3
xchg
xchg
out
mov
push
xor
sti
pop
push
aam
jmp
sbb
mov
inc
cmp
nop
add
outsl
aas
lea
xchg
dec
ljmp
aad
jns
dec
lret
mov
push
or
push
out
shr
add
ficoms
pop
inc
lods
add
repnz
pop
mov
loope
mov
rcll
jecxz
bound
nop
das
xchg
pop
and
mov
jno
mov
jl
movsl
daa
jo
xlat
fcoms
or
sub
cmpsb
stos
adc
push
pushf
insb
or
sub
fldcw
xchg
mov
xchg
sub
pop
push
jns
cmc
lcall
addr16
mov
mov
mov
test
repz
dec
sub
sub
enter
stc
fcompl
clc
or
xchg
aaa
pxor
sbb
push
ret
std
push
cmp
inc
test
cltd
pushf
pop
jmp
data16
pop
mov
lea
push
xor
cs
outsb
sub
jle
add
clc
repz
addr16
sub
in
xchg
jmp
pusha
push
sbb
mov
xor
out
dec
xchg
mov
pop
aad
add
xchg
je
jp
fs
js
pop
out
mov
xchg
mov
inc
lods
dec
lods
into
add
rorl
fmuls
mov
sahf
les
jge
cmp
movb
push
pusha
lahf
cmpsb
mov
sbb
movsb
cmpsl
sub
sbb
adc
div
ja
mov
fstpt
in
sub
dec
in
inc
pop
xchg
xchg
push
mov
mov
mov
imul
or
or
roll
enter
loope
ss
cmp
jbe
cwtl
inc
fldl
and
adc
mulb
notl
popf
add
stc
lcall
mov
sbb
fiadds
mull
push
jbe
cmp
push
loop
push
adc
rorl
insb
in
ss
lret
aad
xchg
pop
mov
sub
xor
push
dec
adc
stos
imul
es
pop
sbb
in
cmp
fstpl
lock
mov
jae,pt
aas
ss
and
xor
xor
inc
shlb
pop
sti
mov
and
sbb
movl
jb
fwait
repnz
aaa
push
cmova
cmpsl
je
cmp
rol
imul
push
xchg
fucomi
cmc
mov
pop
out
mov
icebp
jnp
inc
xchg
sub
je
adcl
jno
std
pop
mov
mov
hlt
or
cwtl
inc
dec
jg
cltd
fdivs
dec
push
test
jp
mov
iret
or
loopne
adc
inc
outsl
push
das
sbb
idivl
aad
ret
leave
inc
shl
shl
sbb
out
pop
rorl
cmp
and
pop
mov
stos
dec
test
insb
push
or
movsl
fwait
enter
in
aad
jle
sbb
scas
cmp
jg
push
fcomi
rcl
cld
xchg
inc
scas
hlt
pop
insb
jne
jne
bound
mov
movsb
fcoms
push
mov
xor
or
aas
vmovupd
push
cld
lahf
addl
shl
push
jns
movsl
dec
mov
pushf
test
out
pop
sti
pop
xchg
add
dec
mov
fisttpll
jne
adcb
sbbl
leave
dec
adc
inc
cmp
inc
jnp
out
cmpsb
sahf
popf
fcoml
inc
ljmp
xchg
mov
adc
lcall
cwtl
and
fmul
iret
mov
or
adc
or
shrb
sarl
pop
test
jle
stc
push
stos
fcmovnb
or
insb
insb
xchg
ja
sbb
and
lock
push
imul
or
push
push
xlat
rclb
xchg
lret
or
add
sbb
outsb
stos
insb
es
fimuls
cmpsl
mov
xchg
sub
lea
jno
icebp
fwait
inc
fxch
adc
lods
dec
xchg
mov
cmpsl
call
cmp
movsl
mov
mov
xchg
jne
sbbb
sbb
divl
in
jns
xchg
mov
dec
adc
or
pushl
divb
mov
xchg
push
in
subl
nop
push
ss
jg
inc
jmp
fsts
bound
cmp
and
jb
inc
js
fimuls
outsb
mov
or
es
and
hlt
push
sbb
stc
jbe
lods
jbe
pop
mov
push
fimull
ss
xchg
mov
rcrl
pop
push
negb
add
pop
dec
hlt
sbb
les
imul
xchg
pop
lret
mov
and
ret
ljmp
mov
icebp
push
subb
cwtl
xor
movsl
int3
mov
adc
adc
cmp
data16
enter
in
inc
xor
lods
jmp
push
nop
xor
xchg
lea
adc
es
fistps
sarb
es
repnz
jmp
fcoml
inc
out
mov
shrb
cmc
mov
ret
mov
mov
dec
popa
pop
push
jmp
sbb
and
int
iret
mov
nop
in
sbbl
out
lahf
jns
push
jecxz
lods
sbb
data16
lock
dec
inc
stos
out
mov
push
mov
sbbb
test
lods
mov
sahf
jg
pop
ljmp
insb
test
scas
xchg
loop
or
xchg
mov
rep
mov
out
int3
push
jl
enter
adc
xchg
mov
fnstcw
iret
test
out
les
testb
rclb
int
aam
insl
sbb
xor
scas
lods
into
flds
jne
leave
push
sub
loop
inc
in
xor
pop
push
dec
lret
xchg
sbb
outsb
xor
xor
add
roll
rcrl
xor
xchg
jp
gs
std
and
jl
mov
sub
out
push
lods
or
mov
shlb
and
sub
je
xchg
loop
pop
fstl
mov
sbb
stos
pop
fwait
lock
jmp
sub
and
push
sbb
xchg
pop
mov
cmpsb
into
cltd
je
xchg
adc
leave
adc
sti
inc
xor
mov
add
adcl
add
ljmp
int
adc
push
je
loope,pn
jo
and
and
jl
cltd
jne
nop
mov
fidivs
cs
add
mov
pop
out
cmc
and
out
insl
imul
stos
lahf
push
inc
sbb
dec
arpl
mov
das
jmp
jne
int
iret
add
mov
dec
jmp
dec
faddl
xchg
outsl
xchg
mov
iret
pop
pushf
rol
sub
xchg
push
arpl
int3
inc
test
insl
andl
cltd
lcall
out
into
outsl
dec
mov
sub
sbb
inc
cmp
or
sbb
daa
outsl
movsb
into
and
pop
loop
mov
sbb
push
cltd
sbb
mov
mov
sbbl
pusha
pop
test
into
imul
mov
jnp
lahf
into
adc
and
xchg
shll
push
icebp
mov
aam
lds
sbb
cwtl
mov
add
hlt
aas
pop
jns
sbb
out
push
xchg
data16
and
inc
loop,pn
in
push
mov
pushf
jne
inc
cmovo
jmp
or
add
or
adcl
xchg
ljmp
sbb
push
xor
and
shr
mov
imul
xchg
jns
pop
mov
cmpsl
mov
push
pop
jmp
or
xor
jecxz
adc
mov
fcmovnb
sub
xlat
or
mov
or
ret
stos
add
mov
pop
fistpll
ret
sbb
sub
mov
fadd
and
mov
xchg
aad
loop
lcall
or
push
mov
stos
sbb
jbe
sub
arpl
lods
adc
xor
cs
mov
inc
xor
pop
adc
xor
aam
push
and
sahf
jnp
pop
mov
push
mov
lock
mov
out
imul
dec
lahf
jbe
inc
stos
mov
add
or
mov
jno
push
in
jmp
dec
jle
or
xchg
xchg
mov
mov
sbb
movsb
out
stc
cli
mul
pop
pop
jecxz
les
popa
pushf
cmp
xor
jl
inc
mov
add
inc
push
insb
cmp
pushf
shll
adc
pop
out
jmp
xchg
aam
call
shll
and
jp
jns
decb
sbb
pop
adc
jo
subb
jp
cmp
scas
pop
push
xor
sbb
jne
sbb
sub
push
push
inc
insl
cmpsl
sub
mov
fwait
insl
into
lcall
or
and
imul
cmpsb
arpl
and
cltd
dec
out
pop
shrl
rcl
push
cmc
dec
push
mov
mov
addr16
or
mov
test
mov
ds
ficoms
inc
xorb
pop
sbb
xor
ljmp
xchg
pop
or
pusha
and
icebp
loope
push
ret
mov
cmp
or
jl
cmp
xor
rolb
inc
outsb
lods
sub
hlt
sbb
sbb
in
adc
push
popf
je
jge
loopne
inc
pop
pop
sbb
sub
rolb
push
rcl
jecxz
test
test
xchg
and
push
ss
pop
mov
inc
mov
jl
add
xchg
rorb
push
mov
das
cli
or
mov
push
mov
pop
mov
mov
dec
outsl
pop
sub
mov
lods
out
push
outsl
and
gs
mov
sbb
inc
int3
jns
dec
sbb
jo
aad
push
inc
mulb
out
mov
insl
into
and
cmp
jle
xchg
arpl
and
test
jo
push
in
enter
pop
dec
mov
push
pop
cmp
jo
fsubrl
mov
cmp
je
xor
loop
mov
loop
sub
add
pop
mov
cmpsl
insb
and
adc
std
sahf
in
mov
or
loop
sysexit
ss
xor
inc
fmuls
and
gs
fists
sub
stos
fs
cmp
or
push
sub
nop
jmp
scas
add
leave
add
add
cmp
rolb
add
or
or
insb
xor
lds
xchg
mov
adc
and
test
push
ror
jo
push
push
push
sub
ror
push
inc
mov
popf
cltd
repz
and
ds
repnz
insl
mov
push
ss
es
popa
movsl
arpl
sahf
adc
repz
adcb
sub
push
xor
rcrb
out
or
andb
sbb
dec
cwtl
movsl
fimull
daa
sbb
ret
mov
inc
and
iret
mov
daa
ljmp
sbb
jno
push
das
mov
loop
mov
adc
and
mov
pop
xor
cmp
cmc
mov
fsincos
sub
push
dec
cwtl
mov
jno
and
imul
mov
dec
mov
pop
dec
push
aad
mov
jnp
das
xchg
lock
enter
movsl
adc
rcrb
push
cmp
xor
in
idiv
cwtl
test
sub
pop
inc
adc
pop
adc
jle
insb
lahf
jb
cmc
insb
push
jmp
cmp
fdivrs
add
lock
jp
jns
mov
shll
mov
adc
std
bound
cmp
xchg
mov
imul
jo
test
xor
mov
aad
mov
xlat
or
pop
pop
lds
sub
stc
scas
cmp
les
sbb
iret
scas
shlb
mov
gs
xorb
mov
add
sbb
fdivl
jo
add
in
inc
data16
pop
or
push
inc
pop
add
mov
adc
adc
icebp
faddl
lock
xor
mov
mov
lret
fnstenv
cmpsb
jmp
loope
fstps
mov
sbb
dec
fs
xor
popf
sub
mov
inc
imul
sbb
mov
mov
lock
fs
daa
fwait
push
pop
adc
outsl
xchg
aad
sub
cld
into
mov
data16
push
push
or
push
and
pop
std
pop
into
icebp
ret
mov
dec
mov
xor
enter
adcl
negl
inc
mov
out
sti
and
pusha
ret
adc
pop
and
adc
in
es
xchg
dec
or
and
sub
in
mov
testb
mov
repnz
xlat
push
fdivrs
pop
add
jecxz
push
adc
push
xchg
sbb
jo
mov
cmp
lret
aaa
bound
mov
jmp
adcl
xchg
adc
dec
in
lock
add
mov
or
inc
fucom
pop
mov
adcl
aad
sarl
xor
push
fstl
insb
sbb
xchg
inc
cmp
mov
hlt
mov
out
add
inc
ja
dec
sti
aaa
js
adc
fsubl
cmpsb
fildll
int3
push
sbb
daa
sub
sub
mov
mov
xchg
push
dec
sub
mov
push
or
outsb
cmp
dec
test
ret
cmc
loopne
mov
or
shlb
inc
inc
push
sbb
xor
adc
dec
jmp
lret
adc
sub
sbb
mov
lock
sbbb
loopne
ds
sub
inc
sub
jle
lahf
or
adc
insl
fcmovb
inc
pop
cwtl
out
pop
mov
cmp
js
jmp
cmp
xor
mov
inc
icebp
sbb
mov
icebp
push
push
mov
ljmp
push
js
cmp
in
mov
jp
sbb
mov
neg
pusha
sub
out
push
dec
sbb
pop
inc
push
add
ret
xchg
xchg
mov
xchg
cmp
je
xor
mov
addr16
sub
push
in
insl
gs
fisubrs
std
xchg
and
rcrl
daa
adc
mov
xor
movl
movsl
jbe
test
ret
mov
push
repz
xor
sbb
xor
xor
scas
sub
xor
gs
cmp
stos
lds
push
cmc
daa
jl
adc
hlt
sub
adc
pushf
mov
mov
mov
mov
inc
jbe
mov
mov
lcall
bound
shl
adc
nop
sbb
jb
mov
add
loope
ljmp
sbb
ret
mov
aam
jae
or
push
dec
mov
cmc
cs
jmp
popf
mov
mov
push
lea
sub
adc
cwtl
xchg
dec
andb
lods
push
cmpsl
sub
scas
jne
test
xchg
mov
test
fiadds
and
jnp
mov
or
jge
pop
insl
jmpw
addl
aad
pop
je
dec
addr16
cwtl
dec
test
sub
adc
mov
xchg
cli
sbb
mov
dec
mov
or
movsl
jmp
and
lahf
cmp
roll
xlat
aaa
mov
lods
xchg
rorl
sti
push
in
out
mov
andl
push
lahf
xchg
loop
insl
adc
je
rorb
xor
inc
or
xchg
arpl
pop
pop
les
adc
mov
mov
inc
mov
popf
in
movsb
and
cmpl
pop
mov
dec
mov
in
fstpt
cli
cmp
movsb
fsubs
repnz
dec
js
lret
sbb
cmpsb
lods
or
dec
sti
xchg
mov
fmuls
scas
adc
clc
jecxz
sub
loope
xor
or
sub
stos
pop
inc
popa
cwtl
sbb
ret
xchg
mov
add
jns
cmp
sub
test
ret
sti
cld
mov
xchg
inc
xlat
xor
inc
xchg
out
loop
je
mov
addr16
xchg
in
push
repz
pop
loope
adc
mov
ja
xor
adc
out
pop
and
pop
std
or
dec
mov
ds
push
scas
sub
sarl
cmp
push
fldt
mov
xor
inc
and
das
pop
inc
mov
loope
outsl
dec
test
dec
lock
push
add
fmull
add
pusha
inc
scas
sbb
clc
ret
xor
insl
pop
dec
scas
xor
clc
loope
jp
pop
mov
out
push
into
mov
jle
sbb
xchg
movd
outsb
iret
adc
test
add
les
cwtl
dec
sub
sub
jb
fimuls
mov
sti
mov
xchg
insl
jns
ds
popf
mov
into
mov
cmp
push
por
lret
subb
jne
inc
adc
xor
rorl
pop
mov
sub
sub
sbb
cmc
push
sub
xor
adc
ljmp
shlb
fyl2x
or
fisubrl
add
jl
rcll
inc
fcomi
mov
xchg
andl
mov
loop
and
cmp
cwtl
mov
inc
inc
aas
cmpsl
sub
add
mov
xchg
insl
fwait
cli
mov
inc
xchg
les
pushf
sbb
sbb
fs
subb
in
inc
push
add
mov
xor
fwait
nop
clc
sub
imul
js
lods
pop
xlat
xor
xchg
in
cltd
xchg
mov
sub
mov
scas
xor
imul
dec
call
mulb
cmp
mov
adc
mov
clc
jb
inc
test
fwait
mov
push
lock
jno
jge
sbb
js
mov
inc
cmp
mov
mov
int3
or
mov
dec
lahf
adc
mov
push
pop
xlat
fwait
mov
arpl
pop
ja
dec
or
jg
loopne
mov
popf
xor
pop
xchg
sub
jge,pn
jle
fcompl
fnstcw
jp
pop
dec
mov
dec
lret
sub
pop
imul
lods
mov
push
adc
pop
jne
dec
xchg
idivb
in
add
mov
mov
mov
sbb
push
or
shrb
outsb
mov
divl
idivl
adc
push
daa
sbb
stos
adc
dec
iret
lcall
push
push
and
out
clc
xchg
rclb
ljmp
pop
or
mov
mov
icebp
rorl
push
push
ljmp
imul
movsb
and
sub
stos
add
add
jl
xchg
adc
and
jmp
addr16
shll
hlt
jg
and
jne
pop
xchg
popa
add
sti
mov
imul
pop
pop
add
fcmovbe
push
add
das
and
iret
adcl
cmp
fsubrs
mov
lods
je
repz
and
mov
adc
pop
into
outsl
cmp
push
loopne
push
push
out
sbb
xchg
xor
push
add
imul
pop
mov
out
mov
lods
mov
jae
mov
jl
pop
mov
inc
cmp
mov
mov
pop
sub
mov
sbb
adc
jo
sti
sbbl
cmc
push
and
lds
xchg
ja
push
adc
add
sbb
jb
outsb
daa
cmp
pop
and
xlat
loop
pop
adc
pop
call
and
mov
jns
mov
push
scas
aam
imul
xlat
adc
sub
lds
test
fs
clc
xor
push
pop
mov
repz
icebp
out
jmp
hlt
test
lahf
fs
leave
cli
and
mov
fldcw
in
adc
das
inc
into
xchg
push
jae
jae
daa
andb
sbb
mov
ds
cmp
jmp
in
fadds
add
or
mov
push
dec
fistpl
pop
jne
fmull
pop
cmpl
test
cmpsb
mov
cmc
std
jecxz
testl
mov
mov
mov
jae
aam
and
bound
scas
xchg
inc
das
or
sbb
sub
int3
cmpsb
out
jg
shll
push
mov
pop
ss
push
pop
xor
fwait
dec
pop
cs
push
mov
fbstp
gs
xchg
cmp
xor
incb
mov
jae
xchg
pusha
icebp
pop
dec
std
arpl
add
pop
xchg
push
nop
xor
fcoms
jo
jnp
sub
sbb
push
aas
xor
push
cmp
mov
and
lock
xchg
std
gs
out
cmp
inc
sbb
imul
test
movsl
jo
push
adc
dec
jbe
ljmp
dec
sub
mov
lcall
int
cld
jo
out
shr
pop
jbe
out
inc
xchg
ja
jecxz
mov
dec
xchg
daa
xor
inc
setbe
or
aas
xor
lds
lcall
lret
int
lods
lret
std
aad
gs
pop
loop
fstpl
push
cmpsl
mov
in
or
add
lds
mov
adc
insb
jmp
xchg
out
mov
xchg
sti
enter
daa
pop
adcl
ljmp
sahf
mov
out
int
shlb
iret
push
push
sbb
mov
jg
fstl
cmp
into
push
adc
mov
mov
aad
jecxz
imul
pop
sub
stos
ret
imul
fidivl
or
sbb
call
lcall
cmovp
dec
xchg
jns
stos
jno
sbb
push
adcl
fmul
pop
int
inc
jg
cmc
add
int3
sbb
lret
inc
pop
addb
in
fcomp
cmpsb
pop
sub
out
xor
push
out
cs
cmp
ds
or
xchg
shl
cmc
test
popf
repz
ds
enter
pop
rep
fmul
sbb
setno
ret
add
sub
pushf
lods
dec
hlt
lock
cld
shlb
push
test
sub
and
xchg
and
adc
mov
dec
jns
mov
dec
mov
mov
stos
in
jp
sti
popa
cs
push
pop
idiv
pop
out
mov
shl
aam
icebp
cli
pop
out
std
mov
iret
in
repz
lcall
mov
in
jmp
insl
pop
xor
repnz
cmpsl
in
loope,pt
pop
push
int
dec
mov
loopne
sub
je
faddl
ficoml
idiv
mov
ret
dec
xlat
push
xor
outsb
aaa
mov
jb
push
or
lret
sbb
fnstcw
xor
dec
ljmp
rorl
ljmp
xchg
inc
inc
or
xchg
mov
imul
sahf
iret
dec
pop
mov
add
nop
push
sbb
or
add
test
or
and
dec
add
xor
lods
lret
pusha
shll
jge
ret
popf
or
andl
pop
inc
mov
enter
xchg
bound
jno
xchg
mov
adcl
sub
inc
sub
les
and
mov
stos
jns
mov
mov
adc
repz
dec
jl
mov
fisubrs
lret
jo
int3
pop
push
sub
pop
sub
cli
and
leave
jo
sub
lods
lret
in
or
int
cmpsb
fnstsw
div
pop
mov
cmp
inc
inc
out
mov
xor
and
or
adc
jmp
pop
xor
cmc
aaa
sbb
and
neg
imul
and
push
dec
sti
aad
negb
or
add
xchg
lahf
push
push
mov
ljmp
in
fsubrp
or
mov
adc
out
xor
and
in
cmp
or
add
mov
jo
lret
jae
jmp
cmpsb
add
icebp
jge
adc
adc
jle
int3
cmp
in
push
lea
mov
pop
insl
mov
sbb
mov
xchg
sub
mov
pushf
jb
mov
into
add
mov
sub
mov
pusha
adc
xor
imul
mov
add
popa
out
jo
das
les
lcall
xor
xlat
inc
or
es
lds
dec
add
xor
aad
push
lods
push
mov
leave
dec
int3
test
mov
lock
icebp
mov
jle
xchg
icebp
aam
out
stc
dec
loopne
lock
adc
and
and
or
mov
and
lods
dec
ror
jl
sub
xlat
pop
mov
out
cs
jae
cld
add
cwtl
nop
icebp
pop
pop
jb
iret
adc
push
mov
inc
mov
cli
lods
out
sahf
repnz
imul
push
xorb
push
cltd
les
mov
and
or
pop
dec
sbb
sub
loopne
sti
int3
inc
movsl
xchg
mov
pusha
lock
jo
push
mov
dec
xchg
in
popa
mov
xchg
nop
pop
xor
out
mov
scas
jo
fsubr
mov
xchg
popf
xor
movsl
xchg
cmc
stc
jecxz
aaa
test
mov
leave
sar
lods
pusha
movsl
js
dec
arpl
xchg
in
sub
cmc
mov
imul
xlat
enter
fiadds
pop
roll
xor
adc
dec
aas
lods
loope
repz
scas
arpl
fcmovbe
push
jmp
dec
int
xchg
jo
cs
adc
ss
scas
mov
pop
mov
xor
xor
lret
mov
subb
mov
xlat
fcoml
add
or
dec
pop
pop
sub
or
jno
cli
call
mov
scas
outsb
cwtl
inc
daa
push
out
jmp
dec
sub
cmp
ljmp
pop
mov
insl
mov
dec
sub
outsl
ds
cmpsl
dec
inc
in
shll
shrl
or
out
in
lods
movsb
pop
in
cs
push
push
mov
lods
mov
and
les
orl
sti
test
push
jl
inc
push
aas
sub
inc
mov
int
sahf
in
fnsave
dec
xchg
in
inc
mov
pushf
test
mov
dec
mov
xor
mov
cmp
aaa
out
cmp
push
inc
dec
mov
imul
icebp
jb
cmp
flds
neg
stos
mov
sub
push
sbb
or
jp
leave
dec
insb
add
jmp
jnp
dec
in
int
push
enter
sbb
mov
xchg
xchg
nop
cmp
divb
aad
shlb
mov
fistps
test
mov
inc
pushf
mov
shl
pop
pop
pop
aas
insb
add
inc
cltd
fwait
jmp
loop
aam
inc
jno
lret
daa
inc
ret
jle
roll
jne
notl
test
jle
inc
jg
aam
out
mul
sub
popf
addr16
xchg
stc
shll
neg
add
cmc
dec
fsts
cmp
fs
sbb
aaa
dec
push
rcll
or
mov
or
pushf
mov
xchg
pop
das
push
pop
mov
cmpl
mov
cmp
push
pop
cli
imul
out
add
call
jb
mov
xor
jae
arpl
pop
inc
lcall
stc
hlt
jo
add
xchg
in
jle
shr
or
jp
cmp
inc
sbb
xor
cwtl
test
pop
shlb
popl
cmp
push
adc
icebp
inc
push
mov
rolb
xor
pop
scas
jmp
pop
daa
xor
jbe
mov
dec
mov
js
test
jle
popf
arpl
xchg
jae
int3
daa
pop
test
push
sub
xorb
cmp
or
xor
lods
mov
and
mov
mov
aas
std
scas
xor
daa
shll
lret
out
outsl
add
fisubrs
imul
xchg
inc
push
or
shll
jp
lahf
jno
pop
movsl
jo
jmp
inc
add
mov
jnp
push
sub
stos
test
arpl
cmp
js
jge
jle
sbb
addl
adc
insb
pop
lock
jnp
xchg
pop
push
inc
inc
inc
mov
je
out
adc
jecxz
jl
mov
in
mov
xlat
lahf
pop
and
es
xchg
enter
or
in
dec
jbe
inc
adc
cmpsb
dec
xchg
cwtl
dec
push
aaa
and
ret
adc
sub
bound
jne
mov
testb
into
sub
lret
jnp
xchg
fsubrl
test
loop
jp
outsb
lods
lcall
push
push
incb
out
jae
push
or
push
push
fdivp
jge
mov
xorl
insb
add
outsb
fistl
mov
ret
xchg
lahf
jg
inc
pop
pop
icebp
mov
cmp
adc
in
ljmp
xchg
mov
xchg
pop
inc
xchg
rolb
and
xchg
mov
mov
mov
test
push
loop
rolb
test
sbb
sbb
xor
sub
nop
jg
mov
sbb
out
leave
jno
incl
call
pushw
push
sbb
xchg
nop
pop
in
ds
fistpl
inc
pop
pop
adc
gs
mov
nop
mov
push
pop
mov
push
lods
addr16
pop
popf
cmp
and
fdivr
jno
adc
int3
pop
xor
sbb
pop
sbb
push
sub
sub
js
xor
dec
enter
pop
repz
popa
leave
sbb
xor
enter
dec
adc
sub
cmp
cmp
enter
fistpll
and
pop
xor
push
outsl
mov
sbb
ljmp
pop
xchg
jg
inc
cmpsb
xor
fists
mov
shll
jecxz
rcrb
pop
out
jg
mov
fidivl
lods
pop
jns
daa
mov
mov
std
js
stos
xor
sub
jno
test
mov
out
inc
mov
mov
out
test
gs
iret
xchg
addr16
inc
leave
outsl
fcmove
in
fs
jnp
sarl
das
lret
add
dec
pop
aad
stc
dec
lret
lret
inc
mov
inc
mov
pop
fiadds
insl
xchg
xor
insb
les
test
mov
das
and
sub
pop
movsb
ja
or
mov
les
adc
in
scas
cwtl
fidivrs
filds
sub
ds
stos
fldl
inc
sarl
shll
sbb
dec
insb
lcall
fisttpl
jge
sbb
xor
pop
sbb
ja
pop
loopne
add
pop
outsb
ljmp
push
sbb
insb
jg
ds
aad
cmp
push
mov
mov
sub
xchg
adc
cltd
cmp
ds
scas
sub
rcr
mov
xchg
and
xor
mov
mov
dec
sbb
rol
lea
mov
outsl
pop
cwtl
sbb
pop
pop
out
adc
leave
mov
pop
test
xor
insl
imul
dec
push
mov
sbb
lcall
test
jle
ret
and
adc
inc
leave
shlb
clc
lret
xchg
push
sahf
in
jno
inc
mov
xchg
inc
jge
mov
fisttpll
int
sub
mov
fs
jg
imul
int
fstpl
ljmp
aad
adc
and
push
and
inc
pop
lcall
movups
loope
hlt
add
sbb
mov
dec
in
mov
or
outsl
jl,pn
aaa
sarb
adc
ret
movsb
aam
adc
sub
in
rdtsc
dec
cmp
mov
aam
add
cltd
loop
lds
mov
push
xchg
pop
ficomps
adc
hlt
jae
mov
or
jb
jge
sbb
xchg
das
jne
test
push
push
sbb
in
movsb
bound
insb
cmp
es
bound
scas
mov
lcall
in
xor
mov
fdivrs
mov
shll
dec
sbb
jb
sbb
rcrb
int
vpsubusb
sbb
ja
adc
aad
sbb
ficomps
in
pop
jl
adc
mov
adc
xchg
in
and
and
pop
into
and
rcr
or
mov
hlt
outsb
vmovdqu
or
mov
jmp
stc
das
es
mov
cmp
push
inc
mov
cwtl
sub
mov
cmp
sbb
inc
negl
or
jnp
push
push
sahf
adc
adc
push
pushf
mov
inc
js
add
or
rol
mov
ljmp
and
add
or
bound
and
push
bnd
lock
cmp
xchg
mov
shrl
insl
mov
testb
div
jnp
mov
jno
fldt
inc
imull
and
mov
mov
mov
xchg
jecxz
lcall
mov
sti
mov
icebp
scas
add
arpl
jb
in
sbb
flds
lahf
popf
shr
add
scas
test
lahf
test
dec
mov
lods
das
dec
in
lods
mov
shrl
xchg
push
push
mov
out
jmp
ss
mov
loope
add
add
sbb
mov
mov
and
sbb
xor
arpl
shrb
scas
mov
jb
fxam
fcoml
ljmp
dec
addr16
adc
fbld
jo
adc
sahf
mov
push
adc
add
outsb
in
out
adc
and
ja
push
gs
or
jne
inc
sbb
sar
pop
cltd
mov
xchg
mov
mov
mov
ds
sbb
mov
adc
sbb
xor
dec
test
stos
jmp
scas
icebp
sbb
loop
jecxz
and
xor
mov
jp
pop
jmp
lcall
aam
sub
mov
jmp
pop
insb
cmpl
push
add
sub
cmp
scas
sbb
push
dec
xchg
das
mov
subl
lcall
lahf
and
fcomi
push
pop
mov
mov
jb
pop
and
in
jno
sbb
xor
cmp
dec
in
insb
xor
mov
js
push
inc
mov
in
push
jbe
out
movsb
dec
xchg
out
shrb
pop
mov
xlat
cmp
dec
jp
addl
adc
or
rcrb
mov
aad
xchg
inc
lret
mov
or
jb
popf
cmpsl
daa
lcall
fisubrs
or
add
sbb
xor
in
loope
rorl
subb
mov
enter
cmp
stos
mov
negb
xor
insb
inc
push
out
inc
push
push
stc
popa
inc
sbb
and
push
cmpsl
hlt
sti
lods
out
data16
cmc
push
sub
jmp
cmpsb
xor
shll
scas
xor
jecxz
or
cmpb
cmp
das
in
out
loope
insl
in
mov
int3
jae
ficompl
sarl
mov
adc
stc
push
das
hlt
inc
push
je
ja
cmpb
mov
adc
mov
sar
or
sbb
mov
out
ds
dec
sahf
adc
push
fwait
jecxz
bound
test
sub
aas
data16
aas
mov
xorl
push
jle
adc
cmpsb
jnp
push
dec
inc
test
add
lods
jle
imul
negl
sbb
frstor
fidivs
mov
cmpsb
mov
push
push
imul
cmp
adc
pop
cmp
sbb
jg
mov
popf
lea
inc
jecxz
aas
adc
pusha
outsl
andl
test
add
dec
jecxz
lret
cs
fstp
inc
push
xchg
or
in
cmp
adc
cmp
aam
popa
inc
fwait
sub
dec
jle
rep
mov
out
fwait
jl
rol
xchg
or
lock
inc
jo
in
sarb
imul
xchg
pop
test
xchg
and
call
push
pop
cs
ljmp
test
adc
and
or
enter
test
addl
sub
inc
lock
shr
divl
mov
ret
jge
push
repz
jge
adc
jle
xchg
sub
seta
jo
dec
inc
pop
repz
std
ja
jg
addb
xchg
adc
leave
pop
filds
jnp
dec
fxch
faddl
mov
and
jl
sub
xchg
push
leave
dec
sbbb
in
inc
or
adc
add
cmp
ljmp
or
arpl
xor
lock
sbb
ja
mov
and
in
rclb
cmpsl
aaa
not
xchg
mov
enter
dec
lods
sbb
inc
insl
nop
jge
sbbl
push
mov
mov
ret
outsb
xchg
cmpsl
pop
mov
loopne
test
sub
jb
data16
lahf
pop
and
add
mull
xor
xor
mov
sub
aaa
fnstcw
xor
rcl
aad
fcoms
lret
mov
add
insl
lret
pop
notb
in
push
sahf
adc
mov
mov
insl
xor
mov
and
leave
pop
jne
xor
es
cmp
mov
ja
sti
mov
jge
and
rcrl
in
push
daa
insl
ret
test
push
stc
mov
jb
imul
test
rolb
icebp
mov
add
mov
pop
or
cltd
mov
adc
sbb
cwtl
xchg
cmp
sbb
xor
movsl
inc
xor
mov
xor
sub
sub
mov
mov
push
das
loope
lods
jle
cwtl
loop
mov
js
js
sbb
negb
add
inc
and
and
mov
mov
sbb
repnz
sbb
mov
dec
inc
je
mov
in
mov
repnz
xor
mov
sti
inc
mov
jne
push
outsb
rorl
ja
fildll
loope
mov
mov
mov
shl
cld
cmpsl
push
xchg
jmp
push
fstpl
mov
jae
mov
icebp
loope
rcl
mov
xor
dec
mov
jns
dec
fistl
push
mov
jg
mov
mov
xor
xchg
xchg
mov
adc
pop
adc
pusha
test
mov
jae
loopne
xchg
lret
fdivr
jnp
lahf
pushf
mov
shrl
adc
aam
stos
sub
iret
lret
loope
or
push
in
ret
icebp
in
jmp
cmp
mov
sbb
insb
mov
roll
xchg
add
xor
into
js
inc
cltd
je
jnp
in
mov
cmp
push
mov
fidivs
adc
pop
testb
pop
ljmp
xchg
stos
add
out
and
sbb
fadds
push
add
cs
inc
lods
cltd
add
lcall
das
cmp
ds
push
lea
je
stos
lds
or
mov
jns
sub
jo
xor
adc
imul
ja
pop
incl
insb
adc
pop
ljmp
loopne
stos
in
and
jle
insb
rcl
jle
jmp
pop
xlat
fcoms
mov
xchg
fwait
xchg
pop
js
cmpb
int
fcmove
aam
pop
loopne
stos
dec
lcall
iret
test
adc
ret
rcr
test
das
or
jl
pop
mov
in
or
out
imull
mov
gs
jo
pop
mov
adc
int
push
das
cmp
int
inc
mov
cmp
mov
push
adc
inc
sbb
call
scas
jl
loopne
jmp
fldt
mov
sbb
and
scas
jnp
adc
int3
fwait
andl
cld
leave
jp
push
rorb
cwtl
mov
push
xchg
jmp
mov
sbb
movsl
jl
nop
cmpl
inc
aam
inc
faddp
dec
pop
pop
mov
sub
mov
clc
lea
fstl
das
clc
inc
pop
adc
leave
sbb
shll
fidivl
aam
ret
ja
ljmp
mov
cmp
leave
rorb
jae
push
adc
add
cmpsb
push
divl
iret
loopne
addr16
adc
test
arpl
outsb
cld
push
push
lods
das
cmc
jecxz
into
push
xor
lahf
xor
movsb
push
aas
aam
lea
lods
sub
jns
dec
push
in
mov
divb
mov
jnp
pop
dec
xor
je
stc
fistl
lcall
inc
cld
dec
xor
movsl
mov
add
xchg
lret
push
jmp
mov
adc
jne
bound
push
fsts
and
jmp
inc
fmuls
cmp
add
addb
insl
sub
fnsave
xchg
test
push
cld
inc
stos
cmp
mov
jle
repz
sbb
jmp
out
pop
pushf
cmp
lods
and
and
lods
cmpsl
pop
add
addr16
fnstsw
nop
add
repnz
lcall
push
mov
lcall
fistps
cmp
push
out
add
pop
inc
test
and
js
xchg
adc
push
xlat
lcall
hlt
mov
lods
and
inc
loope
mov
mov
inc
popa
arpl
dec
add
and
xchg
jo
cld
lock
inc
jge
or
inc
mov
movsb
je
push
sub
xor
sbbl
jg
aaa
nop
cmp
xchg
fxch
sub
sbb
clc
mov
jne
sub
xlat
sahf
loopne
cwtl
popf
xor
pusha
stc
jl
jb
mov
mov
inc
sbb
jno
out
adc
xor
sub
or
cmc
xchg
addr16
cs
inc
std
adc
mov
mov
push
in
xor
pop
dec
fsub
je
pop
bound
test
sarb
pop
les
xchg
rcll
and
sti
sub
aam
into
rol
mov
mov
inc
stos
clc
leave
push
add
xor
add
sbbb
mov
and
clc
lods
adc
repnz
orl
outsl
inc
pop
mov
notl
xor
mov
inc
xchg
jns
notl
cmc
rolb
xor
rorb
pushf
cmc
inc
lock
or
and
mov
scas
jne
pop
pop
das
push
jne
movsl
push
ljmp
shlb
incl
std
shl
rol
mov
lret
pushf
or
sbb
add
sti
pop
stos
jne
outsl
movsb
jne
aas
mov
pop
mov
pop
in
fadd
es
stc
sub
jmp
es
cmpsl
movsl
fistpl
out
daa
repz
orl
pop
push
sbb
test
sub
sarb
xchg
mov
jbe
xchg
push
xchg
jnp
pushf
adc
xorb
addl
test
sti
dec
lods
leave
lock
jl
aas
lret
or
add
test
inc
addr16
cli
shr
adc
imul
xlat
je
sarl
sahf
in
xchg
xor
mov
gs
adc
into
sbb
lea
mov
mov
xor
or
xchg
aam
out
in
dec
and
popf
test
fcmovnu
sbb
cmp
test
adcl
cmp
pop
xchg
and
popa
movsl
jle
pop
adc
dec
test
sbb
adc
mov
test
inc
pop
lahf
sbb
test
out
sub
in
xchg
mov
mov
aaa
lret
fisttpl
scas
add
test
sbb
adc
jmp
insb
lods
scas
jle
dec
enter
enter
fisttpl
inc
shl
and
push
orl
mov
mov
xor
push
and
lahf
aaa
out
adc
dec
cld
or
stos
outsb
mov
lret
and
xchg
and
test
or
leave
shrb
inc
jae
dec
fs
add
or
dec
pop
mov
into
sarl
mov
fs
push
inc
pop
popa
mov
inc
popa
out
sarb
movsb
adcl
lcall
cmp
lcall
xorb
fs
cmp
inc
add
aam
add
lea
add
enter
test
pop
xchg
mov
scas
push
push
xchg
sbb
ret
pop
lahf
xchg
push
dec
hlt
xor
mov
notb
lahf
xchg
and
arpl
ficompl
lret
ret
push
jecxz
insl
pop
cmpsl
out
inc
xchg
repz
or
insl
pop
aam
mov
xchg
xor
pop
mov
and
mov
lcall
nop
aas
lock
mov
push
dec
sahf
sahf
in
sahf
and
pop
pop
xor
adc
push
mov
dec
adc
int3
mov
jecxz
pop
mov
shll
es
nop
test
sbb
dec
sahf
ss
mov
int3
sbb
adc
add
rcl
in
loop
xchg
jmp
fcoml
and
lret
cltd
mov
sti
shll
sbb
adc
test
in
add
in
jbe
roll
lcall
xchg
add
inc
loope
fs
jmp
jne
shlb
pop
aam
jl
cmp
lret
push
adc
push
andb
jl
xchg
xor
fs
out
mov
xchg
fisubrl
mov
insb
or
ja
add
sub
lahf
jae
or
shlb
inc
mov
cmp
scas
cld
les
rol
ja
dec
imul
adc
cmp
insb
in
rclb
mov
mov
xchg
insl
pop
xorl
sub
fadd
sarl
jle
xor
je
mov
out
or
xor
std
pop
pop
mov
cs
dec
scas
adc
xchg
xchg
popa
push
aad
xchg
jmp
cmp
rclb
inc
mov
cmp
jns
push
ja
je
leave
pop
mov
cwtl
std
jae
sbb
mov
lret
mov
dec
push
mov
je
pop
stc
negb
aam
xchg
cmp
lret
test
mov
mov
push
jg
dec
fsubr
shl
andl
jmp
xchg
xchg
inc
push
lea
mov
xchg
insl
roll
sub
sbb
stos
mov
and
xchg
mov
push
inc
ficomps
test
xchg
or
movsb
jae
in
lret
js
xchg
sbb
xlat
jnp
or
ret
pusha
inc
adc
jmp
lods
js
fcompl
cs
xchg
mov
push
mov
fists
cmpsl
jge
mov
mov
scas
adc
jo
and
or
movsb
sbb
aas
fdivr
adc
xchg
cmp
loop
add
xchg
fsts
dec
push
pop
xlat
xor
popa
in
shll
mov
or
dec
xchg
adc
jle
shlb
inc
in
xor
cs
popf
popa
jge
aam
sahf
jmp
test
enter
pop
repnz
aas
addl
or
lahf
idivb
rolb
in
add
fsts
ljmp
unpckhps
add
sub
and
cmpsl
jge
sub
inc
aad
mov
into
bound
jge
xor
sahf
sbb
cltd
shl
in
push
movsl
dec
dec
pop
xor
jmp
icebp
roll
jae
and
aam
pop
ja
movlps
xchg
cmp
push
and
push
loop
dec
cmp
jo
mov
pusha
push
dec
imull
lods
adc
pop
fnsave
jne
mov
mov
mov
popf
subb
insl
dec
xchg
inc
adc
adc
popf
shll
inc
push
pusha
push
dec
cmp
lcall
sbb
sub
pop
movsb
jns
stc
jmp
fcoms
stos
int
lahf
not
int
xchg
pusha
push
outsl
sbb
add
jo
push
leave
mov
add
dec
pop
pop
push
or
inc
mov
add
mov
push
xchg
movsb
iret
xchg
fwait
xchg
in
das
fs
add
into
das
push
inc
test
subl
frstor
and
mov
lret
xor
sbb
jbe
sbb
dec
out
jno
icebp
into
ret
sub
sub
jne
dec
dec
xor
stos
sub
and
lods
mov
repnz
sub
push
xchg
xor
and
int3
imul
scas
gs
sub
and
sbb
das
cmp
out
cwtl
add
scas
add
mov
sub
dec
aad
popa
mov
xor
xor
cmp
lret
push
arpl
pushf
jg
mov
sub
outsl
ja
xchg
in
push
jmp
pop
pop
pop
cmp
fwait
sub
jp
xchg
add
jae
insl
imul
cltd
shrb
xlat
decl
int3
push
pop
push
mov
aad
roll
or
inc
and
inc
insl
lea
int3
rorl
testb
sbb
cld
inc
jo
inc
xor
push
out
xchg
int3
shll
jno
lret
pop
movsl
ret
fwait
rcr
nop
cld
cwtl
and
orb
cwtl
sbb
xchg
cli
xor
lret
roll
fidivs
jnp
ljmp
cmc
sbbb
test
push
fs
add
icebp
or
pop
inc
sub
nop
xchg
jo
dec
stos
dec
mov
pop
inc
fldenv
addl
and
add
and
loop
mov
cmp
xor
cmp
adc
sbb
movsl
mov
push
or
cli
xlat
add
mov
loopne
insb
cmp
dec
shlb
ds
ja
loop
std
nop
inc
xor
outsl
test
jo
lea
xchg
push
xchg
jnp
cmp
jb
insb
jb
mov
in
cwtl
add
sbb
test
cltd
pushl
push
pop
xchg
xchg
ja
pop
pop
das
rep
out
jnp
stc
int
lods
xchg
xchg
and
mov
mov
int
mov
pop
aam
mov
mov
popa
int
mov
mov
in
push
inc
cmp
les
jmp
pop
mov
inc
xchg
repnz
call
add
adc
in
scas
shll
aaa
mov
scas
imul
cmp
mov
pop
xchg
xor
push
int
loop
andb
sub
test
xchg
in
int3
mov
and
loope
mov
mov
push
sub
push
and
cmp
mov
fstp
and
cmp
popf
dec
adc
inc
adc
push
pop
push
pusha
pop
dec
sub
pop
xor
jno
pop
mov
push
cld
jge
imul
in
call
cmp
dec
enter
inc
clc
fimull
pop
sub
push
cs
into
jae
andb
outsb
fnsave
mov
enter
insb
add
dec
inc
hlt
loopne
sbb
sub
sbbb
cwtl
mov
cmc
sarb
je
rorb
pop
or
pop
xchg
lahf
mov
in
ret
dec
xchg
mov
sarb
imul
movsl
push
jle
bound
pop
xchg
xchg
nop
shl
or
mov
push
cmpl
imul
or
add
pop
jno
sbb
mov
and
xor
mov
cld
loopne
or
mov
imul
push
test
adc
lea
cltd
pop
jg
cmp
shlb
fs
leave
std
push
dec
lret
xchg
pop
out
push
or
loopne
push
mov
notb
hlt
pop
push
dec
dec
arpl
enter
inc
outsb
add
insl
lea
fistpl
ret
sti
sti
or
movsb
stos
adc
cmp
jmp
sbb
jno
add
jbe
fbld
dec
xchg
scas
xchg
fprem
mov
scas
inc
dec
mov
in
fistl
gs
mov
out
inc
cmpsb
arpl
pushf
imul
mov
or
mov
arpl
in
loope
fwait
adc
dec
in
jne
sarl
sbb
mov
lea
adc
cmpl
pop
fstpl
enter
shrb
fwait
mov
out
push
push
add
es
cmp
pop
out
inc
adc
js
xor
test
cmp
xor
adc
test
pop
imul
cmp
sub
mov
sbb
mov
addr16
rol
jp
loop
andb
scas
mov
notb
push
sbb
movsl
imul
sbb
lret
xor
cmp
cmpsl
dec
push
mov
mov
into
pextrw
ljmp
mov
or
dec
sbb
enter
daa
xchg
inc
pop
jle
data16
testb
hlt
dec
addr16
dec
aaa
aas
push
dec
repz
out
insb
ss
rorb
or
push
or
les
iret
lock
mov
or
mov
ficompl
mov
sti
lea
mov
and
incl
popl
hlt
test
test
adc
jno
add
hlt
and
jns
add
sti
fidivs
outsl
jno
popa
std
and
pop
popa
mov
out
adc
push
push
cmc
cmp
inc
pop
test
mov
push
outsl
mov
nop
insl
pop
xor
push
jne
lcall
popf
xor
fmuls
sbb
sbb
and
and
das
or
notl
push
fs
inc
scas
inc
mov
jbe
mov
hlt
add
jno
inc
add
jo
jle
or
mov
stos
jl
jle
shll
cltd
inc
sub
inc
mov
inc
xor
inc
mov
mov
aaa
out
push
dec
add
dec
std
lods
inc
je
repnz
div
loope,pt
adc
cltd
je
cwtl
and
sub
jmp
cmp
lods
mov
add
xor
pop
jp,pn
xor
lods
jmp
or
lock
pushf
xadd
sub
and
sub
sub
mov
dec
mov
and
jle
inc
cmp
jne
inc
popl
loopne
or
frstor
lea
daa
mov
jno
dec
loop
stc
add
sub
divb
sti
cmc
ss
dec
ret
jnp
aaa
cmp
and
or
pop
ficomps
sbb
inc
mov
icebp
pusha
shll
xchg
pop
lods
xchg
aad
or
mov
add
rcl
rcr
lahf
pop
or
xchg
xchg
or
psubb
lds
sbb
xchg
push
adcb
gs
sbb
mov
daa
ret
inc
inc
insl
fstpt
clc
shrb
mov
push
or
xchg
sub
dec
cs
lcall
insb
mov
xor
out
sti
fisubl
test
push
test
jbe
jp
adc
mov
pop
mov
sub
adc
or
ret
dec
jne
in
orl
or
insl
orl
or
xor
and
icebp
mov
outsb
mov
cmp
into
jae
mov
xchg
jae
aad
test
sbb
xchg
pop
xor
ss
fucom
add
inc
inc
cwtl
adc
lods
addr16
sub
and
xchg
inc
aaa
or
mov
fdivrl
sub
add
repnz
fadds
je
loop
neg
test
xchg
inc
push
lea
dec
ja
cmp
mov
inc
sub
xchg
popf
xor
push
pop
int
pop
sti
and
cs
xchg
mov
int
rorl
cli
test
test
jae
and
scas
adc
cwtl
ds
outsl
pop
int
mov
mov
xor
mov
lret
xlat
dec
push
sarl
cmp
repz
jmp
imul
sbb
negl
mov
inc
dec
push
out
les
sahf
pop
aaa
out
pop
cmpsb
call
adc
xchg
aaa
adc
loopne
cmc
stc
lea
dec
fsubrs
inc
jmp
sbb
xchg
sbbb
stc
xchg
int3
mov
fs
pop
or
cmp
pop
push
add
icebp
jmp
lock
lods
sub
or
inc
push
bound
dec
outsl
rcl
inc
scas
test
leave
sub
fldt
fbstp
jne
and
jg
inc
mov
adc
inc
push
pop
enter
loope
dec
enter
ljmp
jl,pt
jbe
or
sbb
icebp
mov
lods
jae
lea
pop
dec
pop
ds
pop
inc
push
sub
xchg
fsubs
jecxz
enter
fwait
cmp
aaa
cmp
stc
push
fdivr
fucomp
mov
add
xchg
jle
and
cwtl
xchg
adc
notl
cmp
movsb
adc
cmpsb
inc
push
jns
imull
insb
inc
add
bound
xor
cs
push
mov
jge
shrb
adc
imul
in
jge
sub
ljmp
leave
push
mov
sub
and
mov
ss
mov
add
call
mov
fcmove
imul
dec
test
jle
add
cs
negb
rolb
dec
fimuls
pop
hlt
fadd
add
adc
xchg
fiadds
and
clc
xor
hlt
pushf
inc
fsubs
enter
push
es
jle
int3
test
push
lcall
pushf
lock
pxor
rclb
es
fwait
insb
pop
mov
pop
adc
stc
cmp
cld
insl
pop
cwtl
test
fnsave
stc
inc
int
inc
push
in
sbb
fisubs
mov
mov
out
push
lea
sbb
inc
inc
adc
adc
pop
in
sub
mov
jl
leave
sub
sbb
ljmp
push
ret
inc
outsb
mov
enter
sub
fmuls
mov
cmpsl
add
in
movsl
inc
insl
and
mov
cli
ss
jle
test
test
bound
in
inc
lods
pop
add
mov
mov
clc
mov
sbb
into
es
push
test
add
jae
shll
push
or
ret
or
mov
mov
dec
dec
push
adc
mov
adc
sub
sub
repz
gs
sbb
mull
in
inc
xchg
pop
jg
out
sbb
xchg
or
and
mov
sbb
dec
ljmp
icebp
enter
adc
pop
cmpl
es
jns
in
mov
pop
lods
bound
js
mov
pop
out
push
notl
dec
cmpl
jbe
mov
std
and
fsubs
into
enter
pop
sahf
insl
nop
sarb
cmpsb
aas
or
add
loopne
lahf
pop
jae
and
sub
fcomip
xlat
cmp
je
data16
out
dec
and
aam
xchg
inc
out
dec
jns
aas
mov
xor
into
stc
push
std
pusha
inc
imul
cs
mov
sbb
jnp
cltd
sbb
repnz
lcall
xchg
outsl
push
int
xor
stos
xor
xlat
cltd
mov
lcall
jbe
es
or
cwtl
stos
cmp
shll
jmp
xchg
pop
xor
stc
js
dec
pop
stc
xchg
mov
les
loop
ret
test
pop
pop
dec
adc
add
push
cwtl
dec
cld
inc
xchg
and
movsl
push
dec
ficoml
push
out
daa
adc
loop
in
insb
roll
or
std
pop
shrb
or
std
subb
insl
lods
push
fs
sbb
scas
nop
jmp
inc
inc
or
cmp
mov
adc
ljmp
mov
mov
test
sub
dec
test
jmp
ds
std
xchg
enter
dec
rol
inc
mov
sarb
inc
dec
xchg
std
push
inc
fbstp
filds
lds
or
push
xor
jecxz
pop
repz
push
es
mov
mov
neg
adc
ss
pushf
pop
push
fincstp
ficomps
lret
into
mov
pop
int
adc
dec
outsb
dec
popa
mov
inc
mov
mov
xor
pop
dec
mov
test
pop
mov
cmpsl
shl
daa
add
pop
mov
test
cmpsl
mov
mov
adc
push
mov
or
divb
std
mov
fs
loope
push
cmp
sbb
sahf
lahf
pop
pop
imul
adc
leave
cmp
pop
rdtsc
jns
jnp
push
sbb
push
pop
test
in
pop
cmc
out
jl
pop
mov
or
int
push
or
pop
scas
pop
add
adc
outsl
ret
stc
sub
daa
push
daa
xchg
push
fidivs
fldl
mov
pop
add
icebp
sbb
repz
aaa
lods
ljmp
and
sbb
adc
popa
bound
scas
and
xor
loope
int3
cmp
rol
xor
sbb
dec
jl
insb
or
jnp
push
hlt
ficoml
lea
adc
insl
or
cmp
mov
mov
fcoml
nop
scas
pop
add
jecxz
or
fiadds
sub
hlt
divl
dec
push
jo
test
dec
lods
ret
push
adc
aas
xor
push
mov
loope
mov
imul
rclb
fnsave
dec
sti
mov
clc
jle
cmp
cmp
int
stc
jbe
cmp
divl
mov
push
sbb
jge
sbb
bound
cmp
stos
pop
jle
mov
inc
negb
repz
xor
and
fwait
xchg
inc
or
arpl
add
in
inc
lods
fisubs
xor
lods
push
push
orb
insl
mov
xor
dec
aad
mov
test
outsl
xchg
int
lds
imul
popf
jno
ljmp
jecxz
out
mov
mov
xor
pop
call
sbb
ljmp
hlt
jmp
stos
push
or
mov
dec
cmpb
jle
jecxz
pop
pop
ja
lock
iret
mov
xchg
cmc
subb
addr16
shrb
dec
xor
repz
ds
lret
or
mov
loopne
xchg
mov
in
loop
or
sbb
fisttpll
push
leave
xchg
repz
outsb
adc
xchg
mov
adc
and
aas
mov
adc
bound
and
dec
cmp
and
cs
xchg
pushf
fiaddl
mov
rcll
test
js
insl
xchg
mov
or
or
filds
daa
mov
sbb
dec
imul
jb
sub
jae
mov
shl
int3
ljmp
fldt
gs
out
lahf
aam
arpl
mov
sub
inc
mov
movl
inc
mov
movsl
or
iret
and
xchg
stc
xchg
sub
adc
jo
ret
icebp
or
xlat
lds
or
jl
sar
pop
cmp
loope
mov
popf
icebp
pop
lds
fwait
mov
mov
and
xchg
add
ret
add
cmp
insb
and
adc
call
push
xor
movsb
es
mov
or
pusha
cmp
shll
push
jecxz
pop
movsb
lret
insb
mov
or
jl
dec
mov
sbb
aaa
insl
negb
jno
shlb
test
jns
cmp
aaa
cltd
jb
mov
jne
ret
dec
jb
jg
xorb
loopne
insl
shl
jne
out
add
fdivl
test
mov
hlt
xor
outsb
push
leave
nop
and
jmp
and
push
jl
xor
out
out
pop
xchg
cs
jp
push
and
xchg
aas
and
sbb
jp
arpl
inc
add
sar
xlat
sub
mov
int
mov
xor
jno
es
clc
loope
mov
icebp
jle
pop
pop
in
push
jmp
mov
push
lret
pop
push
add
arpl
jle
scas
mov
xlat
add
cmp
mov
into
cli
adc
mov
inc
ds
jbe
dec
inc
clc
enter
stc
push
jns
cmpsl
jmp
std
pop
cli
aam
popa
lahf
inc
fs
repz
xchg
inc
sbb
and
jle
jmp
lret
mov
xor
xchg
in
pop
sub
jbe
mov
fs
xchg
bound
push
mov
daa
cld
fdivrs
inc
cmpsb
shrb
mov
pop
shr
lcall
je
das
lods
add
ljmp
cs
fistps
push
fadd
lods
cmp
pop
adc
scas
xchg
xchg
mov
icebp
or
rol
sbb
lret
sub
or
ss
push
pop
add
jp
iret
and
xchg
imulb
je
das
imul
inc
sbb
cmc
dec
pushf
rorb
in
iret
cltd
lds
outsb
icebp
inc
popa
test
sbb
jp
lock
sahf
push
scas
mov
mov
pop
xor
jge
rcl
and
mov
hlt
iret
fldt
ds
mov
xor
inc
xlat
xchg
imul
inc
dec
dec
sti
mov
iret
cvtps2pi
dec
cld
les
add
out
cmp
push
movsl
ret
jnp
mov
sbb
fstps
icebp
aad
mov
test
adc
lahf
hlt
sbb
jns
and
in
nop
in
push
mov
imul
jmp
sbb
out
in
ja
dec
add
outsb
out
imul
and
sbb
push
push
sub
out
push
inc
lock
or
add
roll
imul
xor
mov
mov
lahf
pop
mov
std
pop
push
mov
lcall
mov
in
jecxz
test
dec
dec
pop
shr
jb
lea
mov
test
das
fwait
mov
das
add
lds
rcr
push
cmp
pop
lcall
xor
inc
jecxz
jp
xchg
fwait
jmp
notl
jo
ret
lods
or
or
dec
lds
lds
sub
add
pushf
cmp
call
scas
pop
pop
andl
xchg
notl
arpl
push
cmp
sti
or
sbb
pop
scas
jp
addr16
dec
subb
outsl
pusha
push
das
ljmp
mov
lcall
pop
ja
jb
and
in
jmp
pop
mov
in
push
aas
jg
jecxz
xor
cmp
inc
xchg
call
jmp
pop
xchg
int3
sub
cmp
cmp
shll
lret
sbbl
dec
int
and
xchg
mov
out
sbb
das
call
jl
ret
or
mov
subb
fwait
mov
jno
jmp
aam
rorl
add
shll
pushf
fcomps
in
or
js
xor
pop
stc
pop
xor
fidivl
add
pop
jae
mov
xchg
pushl
xchg
clc
ljmp
and
inc
clc
ljmp
rorb
mov
arpl
lea
mov
data16
test
sub
sbb
hlt
mov
inc
cmp
pop
jecxz
fcomi
stos
ljmp
mov
loop
pop
xchg
cmp
ds
out
movsb
inc
jbe
repz
pop
mov
adc
flds
xchg
mov
add
ret
mov
dec
push
cmpsb
adc
adc
insl
xchg
aam
pusha
fmuls
and
mov
dec
mov
fisttpll
out
adc
pop
imul
int3
int
cmc
mov
outsb
movl
xchg
push
xor
xorl
pop
sbb
mov
outsl
sbb
sahf
repnz
sub
mov
pop
ljmp
jae
pop
mov
data16
mov
cmp
mov
or
out
inc
arpl
lret
and
adc
xor
cmpl
les
fs
out
lods
sub
fsub
add
hlt
push
fwait
cmpsb
adc
ja
or
xchg
xor
icebp
pop
mov
into
loop
ret
cwtl
in
jns
or
pushf
push
ljmp
and
psrlq
outsb
out
in
or
cmpsb
pop
addr16
push
push
and
loop
push
cmp
out
push
cmp
sub
lea
adc
je
outsl
cwtl
mov
sub
push
ljmp
imul
cmc
clc
inc
repnz
pop
lods
pop
cmpsl
stc
pop
xor
popa
subb
outsb
fldenv
sahf
fs
popa
inc
ja
pop
fisubl
ret
xchg
and
scas
pop
inc
std
cld
cmp
mov
mov
cmp
xor
addr16
pop
cmp
sub
cmp
pop
repz
jne
adc
xor
jmp
in
imul
jle
lea
lcall
outsb
bswap
inc
stc
in
enter
push
popa
adc
cltd
insb
movsl
pop
call
out
jbe
out
es
xchg
in
sahf
mov
or
pop
outsl
mov
xchg
shrl
scas
outsl
call
and
sub
cmc
mov
pop
dec
hlt
hlt
jle
lods
and
shrb
pop
lock
cld
xchg
in
dec
mov
sar
xchg
push
jecxz
cmp
repnz
xorb
pusha
repnz
ret
ljmp
popf
sbb
mov
cmp
or
jns
sub
fwait
xor
pop
in
add
andb
xor
xor
fidivl
into
add
mov
push
roll
xor
and
nop
clc
test
or
test
jne
shl
dec
sbbl
inc
xchg
cmpsb
push
fsubrp
adc
push
pop
mov
jae
adc
lds
les
ret
cmp
repnz
and
or
mov
stos
leave
jecxz
push
cwtl
mov
outsl
faddl
fbstp
lahf
mov
inc
mov
and
mov
aad
sbb
jb
lret
dec
and
xlat
add
jmp
cld
je
or
mov
imul
push
lret
inc
sub
mov
push
xchg
scas
je
movsl
fldt
inc
mov
lcall
mov
sub
xchg
test
nop
ret
je
in
js
lds
xchg
sub
jne
and
mov
push
add
mov
mov
xor
add
data16
les
dec
cmp
pop
xchg
lds
cmc
dec
hlt
jmp
into
xchg
cmc
sub
cmc
jmp
sub
aaa
aad
xlat
sub
std
push
add
shll
add
and
push
call
fwait
sbb
in
lahf
or
fs
and
cld
pop
into
mov
clc
mov
in
jmp
popf
pusha
cmp
inc
jbe
jl
insb
mov
shlb
rorl
dec
inc
jge
sbb
adc
inc
cli
xor
push
lahf
mov
or
sahf
mov
mov
dec
data16
mov
xor
in
aas
out
or
filds
cs
daa
jne
scas
pushf
fisttps
push
notl
push
lret
loopne
filds
xchg
out
cmp
cmp
popf
ja
mov
mov
cs
aas
popa
jg
add
dec
mov
lods
pop
data16
mov
dec
and
jno
inc
lret
dec
data16
in
out
or
dec
inc
xor
and
mov
pusha
jp
out
arpl
dec
cltd
rorb
into
dec
jne
jae
repz
loopne
inc
lods
xchg
xchg
and
outsl
sahf
loope
xor
xchg
mov
jge
lret
aad
dec
push
sub
inc
nop
mov
pop
dec
fwait
dec
and
pop
jb
incb
mov
adc
and
mov
out
jb
add
inc
lea
xchg
sub
mov
push
outsl
test
dec
add
dec
mov
shr
pop
std
push
adc
cmp
pop
or
shlb
and
fisttpll
dec
ljmp
lock
adc
xchg
dec
mov
fs
add
xchg
lea
pop
dec
xchg
dec
inc
insb
xchg
sub
mov
pop
jns
fisttpll
lret
sbbl
sub
dec
cltd
jo
dec
xor
iret
jmp
jne
out
fcomps
negl
mov
add
faddl
pop
jbe
dec
xchg
js
cli
inc
flds
cs
pop
test
mov
mov
mov
sbb
call
xchg
aaa
mov
mov
loopne
sbb
inc
addr16
sti
or
mov
cs
jl
jnp
sub
push
jle
xor
mov
xor
jae
popa
jnp
push
xchg
outsb
stc
jae
mov
sti
and
hlt
and
adc
mov
rolb
stos
fmull
ret
cmpsb
mov
outsb
loopne
jnp
jo
mov
mov
leave
out
inc
insl
xchg
pop
jne
push
jne
push
insl
add
cmpsb
sub
mov
dec
xchg
adc
xchg
mov
inc
mov
and
fdivs
mov
adc
les
xor
inc
push
mov
cmp
sbb
ret
sub
cmp
out
jo
sbb
rorl
insl
out
cwtl
pop
lret
xchg
faddl
push
pop
das
fwait
out
pop
vmwrite
fwait
push
adc
enter
cmp
jbe
mov
jle
cmp
lahf
js
fwait
push
fidivs
addl
jne
pop
dec
jo
sub
ds
enter
inc
dec
ret
pushf
add
test
mov
imul
xchg
stos
jne
cmp
pusha
mov
inc
int
popa
mov
xor
decb
popa
push
jle
dec
dec
mov
dec
in
cltd
in
pop
mov
mov
sub
addl
out
lock
inc
cmp
enter
jp
push
data16
xchg
sub
and
push
inc
divl
dec
push
cmp
mov
fidivl
xchg
loope
push
mov
jg
add
jmp
and
inc
push
fmuls
add
dec
lret
add
and
es
mov
pusha
jp
int
mov
fists
sub
testl
iret
cltd
mov
sub
lahf
sub
xor
xchg
das
fldl
insb
xchg
lods
jb
mov
mov
and
in
lds
sbb
test
xor
mov
mov
dec
orb
aas
mov
jmp
movsb
popa
fdivrp
mov
dec
imul
notb
aad
push
int3
sub
sub
push
inc
add
add
or
fsubl
scas
mov
mov
push
ljmp
xchg
pop
jae
ret
mov
xor
js
lock
xor
cmpsl
xchg
scas
fcmovu
test
pop
cmp
mov
and
jb
jmp
jg
in
fwait
xchg
andb
outsb
sbb
and
add
push
cltd
jg
or
mov
push
cmp
jmp
cmp
addl
cmp
les
leave
cs
pop
mov
push
and
inc
mov
pop
out
inc
mov
andl
sbb
and
outsl
cmpsb
cli
xor
adc
roll
bound
or
push
repnz
xchg
add
sub
gs
cmp
jo
loopne
iret
notb
insl
jo
and
test
in
xchg
aaa
push
xchg
cmc
push
mov
mov
mov
adc
das
add
sub
orl
sbb
push
paddw
sub
movsb
mov
jno
sub
test
and
xlat
xor
mov
xor
mov
push
hlt
fsubrl
cmp
adc
add
push
sbb
std
xor
pop
ficompl
jnp
jbe
cli
int3
ljmp
hlt
pop
fidivrl
je
outsb
mov
push
pop
xchg
int
pop
ror
clc
test
je
rcll
ja
jb
dec
leave
lea
ljmp
repnz
sub
pop
jbe
mov
test
rorb
fucomi
shl
mov
dec
ret
iret
in
pop
leave
inc
mov
inc
inc
sbb
stos
jo
enter
inc
addr16
stos
and
add
rolb
je
push
adc
or
sar
and
dec
xchg
dec
repz
mov
inc
imul
in
jp
cmp
pop
lods
cmp
or
pop
cltd
mov
outsl
sub
and
mov
ret
push
xchg
bound
jl
sub
imul
add
aad
xchg
mov
mov
loop
jnp
or
mov
cld
out
mov
mov
cmp
test
inc
test
cmpsl
mov
xchg
outsb
rcrb
mov
rorb
mov
out
subb
test
add
or
or
xor
jmp
pushf
mov
or
jno
push
jle
loope
and
xor
movl
dec
into
sar
or
insb
pusha
iret
add
mov
xor
stc
stos
imul
jecxz
out
shrb
shrb
scas
jp
jns
mov
xor
out
ss
or
mov
and
mov
shlb
aam
test
daa
not
push
xorl
push
sbb
pop
xchg
icebp
stos
daa
lahf
repz
add
ret
dec
andb
sbb
aad
sbb
mov
es
mov
mov
std
inc
fs
loopne
shll
fdivl
dec
push
cmp
or
jb
add
xlat
idivb
shll
mov
jmp
jnp
xor
xor
jmp
stc
incl
or
pop
rorb
sbb
in
mov
pop
xchg
clc
ljmp
mov
je
cmp
fwait
xchg
jae
bound
jg
mov
inc
mov
pop
mov
mov
adc
fdivs
sub
jg
jmp
test
push
mov
or
dec
push
mov
adc
sti
jns
xchg
lods
mov
jnp
mov
movsb
mov
ss
fstps
es
mov
inc
fbstp
loope
push
and
sbb
cs
push
mov
int3
and
fsts
in
mov
sbb
xchg
sub
stos
pop
push
inc
cli
pop
mov
scas
add
mov
nop
jns
add
pop
xchg
out
cmp
jbe
inc
adc
cwtl
mov
and
or
mov
xlat
pusha
pushf
test
das
xchg
xchg
jmp
add
xchg
in
loope
imul
sbb
pop
mov
inc
xor
xchg
xor
push
andb
xchg
sbb
inc
imul
ss
ljmp
push
rcrl
dec
jg
leave
int3
push
cmpsl
add
jnp
popf
les
sbb
fcompl
adc
adc
inc
fwait
add
push
sub
test
mov
lahf
jne
xor
or
cmp
jmp
add
push
mov
leave
mov
adc
add
pop
lret
shr
xchg
mov
ret
dec
vshufps
xchg
popa
pop
lcall
dec
cwtl
lods
aam
sub
jmp
bound
sub
subl
ret
andl
dec
pop
mov
inc
adc
ficompl
adc
mov
cltd
mov
insb
cmp
or
cwtl
pop
aad
cmpsb
mov
or
je
push
dec
inc
das
movsl
ret
cmp
cli
lcall
int
imul
or
or
inc
jae
andl
pop
jp
sub
addl
out
or
into
xchg
mov
inc
mov
arpl
mov
inc
pop
sub
stos
cmp
rcr
pop
pushf
adc
sub
shr
mov
mov
out
sub
jmp
and
aam
ljmp
loope
jns
insl
in
sbb
out
mov
loope
fmull
pop
and
ret
and
lods
mov
pop
dec
fldt
fwait
les
lods
cmp
cwtl
or
push
mov
xchg
pop
push
rcl
rorb
inc
push
shl
cmp
ret
icebp
pop
fldenv
inc
ret
sahf
mov
inc
add
ficoms
xchg
sar
xchg
mov
test
and
cli
pusha
and
mov
inc
fs
mov
push
mov
clc
test
or
adc
jo
cli
jno
sbb
negb
inc
pop
repnz
mov
ficoml
sub
imul
and
in
lods
add
sub
pop
mov
fpatan
mov
xor
jecxz
push
mov
add
addr16
ds
fistps
stc
js
popa
int
mov
mov
sub
shr
fwait
pop
pop
mov
add
add
shll
loopne
sahf
roll
jno
ja
push
cmc
mov
std
addl
movsb
icebp
mov
data16
repz
cltd
mov
mov
jp
imul
jg
xor
add
in
dec
bound
fdivl
lods
fwait
stc
rorb
sbb
push
pop
enter
sub
mov
pushf
cmpsl
test
fnstenv
lret
ret
hlt
push
test
repz
inc
pop
xlat
arpl
push
movsl
stc
gs
daa
scas
mov
jno
jnp
mov
fwait
out
mov
xchg
mov
insl
or
icebp
fpatan
out
inc
nop
mov
push
aam
mov
and
testl
or
pop
push
cs
out
xor
inc
mov
push
xor
jo
sub
mov
cmp
aam
sub
pop
inc
adc
xchg
cmc
sub
addr16
stc
jb
loope
stos
stc
jb
adc
imul
xorl
cmp
jo
popf
sti
dec
test
lea
mov
jne
outsb
pop
pop
mov
sub
xchg
out
adc
les
xlat
icebp
mov
xor
mov
inc
sbb
leave
push
xlat
adc
xor
sbb
pushf
hlt
subl
leave
push
jp
fadds
sahf
hlt
dec
cwtl
in
push
mov
ret
mov
sbb
add
push
sti
loopne
mov
xchg
cmp
enter
ljmp
and
fdivl
or
idiv
cli
test
orb
out
cmp
pop
fwait
shrb
mov
loope
fs
out
lret
outsl
mov
scas
mov
aaa
push
outsl
ret
je
arpl
sbb
jne
cmpsb
and
sahf
pop
ficoms
arpl
addr16
insl
push
fistl
jp
ljmp
and
xchg
testb
add
add
leave
jecxz
bnd
xchg
inc
bnd
dec
mov
inc
iret
xchg
testb
sbb
hlt
sbb
shl
test
inc
into
stos
mov
cmpsl
dec
subb
jmp
push
mov
or
fdivl
test
mov
inc
addr16
mov
xchg
or
stos
icebp
inc
in
push
lcall
mov
pop
mov
add
adc
sub
ljmp
mov
or
mov
cli
stos
jae
inc
cmp
daa
pop
cs
scas
add
dec
xor
jns
cli
adc
and
test
xor
inc
mov
mov
push
mov
pop
adc
pop
jae
loope
outsb
jg
sti
and
and
mov
pop
add
xlat
fs
and
sarb
xchg
cmp
scas
mov
mov
xor
in
cmp
xor
mov
mov
jno
xlat
jecxz
lds
lahf
or
pusha
xchg
das
dec
addr16
xor
scas
push
push
inc
cmp
call
movsb
in
sbb
xchg
fnstcw
jo
jb
stos
sbb
loopne
sbb
repnz
push
jnp
in
sub
jge
sbb
ljmp
gs
out
cmp
inc
movsl
jp
cmp
lods
sbb
cmp
or
cmpsb
int
xchg
out
pop
push
test
inc
pop
cmp
out
mov
jecxz
loop
or
das
mov
mov
xor
mov
test
xor
mov
adc
stos
daa
pop
fs
loop
inc
jbe
ljmp
xchg
scas
test
mov
sbb
lock
ss
xchg
adc
push
jno
in
xor
dec
push
nop
imul
and
packsswb
fldcw
aam
sub
cwtl
fisubrs
or
aad
in
jecxz
adc
sbb
xchg
add
mov
mov
fidivs
dec
cld
add
mov
cmpsl
loop
pminub
or
cli
test
fcompp
push
jmp
sbbb
fadd
mov
push
jl
mov
pop
jae
dec
mov
ficoml
or
popa
flds
add
adc
scas
in
ss
and
mov
or
xchg
loope
cmp
fcomi
cmp
pushf
scas
mov
out
cwtl
push
fcomi
dec
imul
pop
aad
or
cmpsl
mov
xor
sub
in
popf
cmp
mov
ficoml
outsb
xchg
nop
in
jecxz
or
cmp
outsb
ds
sbb
mov
inc
cmc
inc
leave
push
sbb
push
clc
pop
movsl
sbb
sub
xor
xor
stc
jecxz
notl
loope
push
gs
mov
shr
sbb
pop
push
jne
cvtps2pi
mov
fdivrs
and
mov
fadds
or
outsl
mov
je
push
dec
or
xchg
jmp
cmpsb
inc
in
sub
in
push
jl
int
loop
adc
fldt
popf
adc
pop
cs
bound
jp
andl
dec
ret
fisttpll
iret
divb
jge
xor
jnp
pushf
js
jbe
jb
inc
sub
dec
sbb
popf
icebp
sub
outsl
add
push
pop
pop
cmc
insl
xchg
ss
aam
inc
ret
arpl
data16
and
loope
sub
sti
and
cmpsb
cli
dec
push
subb
push
filds
cmp
test
cmp
cmpsl
jb
insb
xchg
repnz
inc
push
gs
xchg
or
mov
iret
je
decb
push
and
mov
and
pop
mov
add
jle
js
outsb
jo
fsts
int3
ss
xchg
call
pusha
orl
jmp
pop
jns
repz
in
xchg
push
and
ficompl
adc
adc
inc
mov
xchg
stc
jbe
or
fisubrl
mov
popf
mov
das
sub
in
rorl
pop
mov
das
cmpsl
rcl
or
push
je
jno
inc
int3
shll
loope
cmpsl
and
ret
push
sbb
push
xlat
movsl
in
pop
test
jbe
scas
aaa
ret
lcall
aaa
mov
cmp
sbb
add
mov
xchg
es
inc
pop
push
push
mov
xchg
xchg
out
fstpt
lcall
pop
xchg
cmp
pop
inc
leave
rcrl
divl
cmp
jbe
jmp
lods
push
insl
aad
inc
xor
xchg
scas
sbb
mov
sbb
lcall
sbb
add
sbb
js
mov
add
sub
icebp
jbe
test
sub
in
icebp
cltd
inc
rorl
lock
pop
push
xchg
jbe
enter
jbe
or
dec
test
int
call
scas
aad
pushf
into
js
xor
mov
mov
adc
add
pop
mull
leave
inc
fimuls
loope
ret
ret
lahf
jmp
xor
stc
movsb
mov
mov
and
xchg
add
orb
ljmp
sbb
mov
rcr
mov
pop
scas
in
loope
push
cmpsl
jne
sub
mov
pop
mov
sti
mov
fidivrl
jnp
pop
js
sub
fcmove
and
movsl
int3
hlt
sbb
fmul
sub
jmp
pop
or
clc
fdivs
sarl
xor
jno
das
out
pusha
mov
dec
and
lds
pop
out
pop
push
movsl
ret
fnsave
lret
out
pop
lods
and
mov
xchg
lods
cmpsb
fldl
test
xlat
cmc
setae
adcl
stos
popa
jg
xchg
pop
dec
les
inc
lcall
subl
and
push
jle
ret
cli
adc
cmpsl
mov
mov
xchg
mov
das
pop
dec
and
in
sar
inc
jo
iret
inc
shlb
jp
inc
lds
ss
aad
inc
jge
in
in
sub
add
sub
jp
and
add
jge
or
pop
mov
sbb
cmpsb
fcompl
xchg
icebp
imul
mov
fdivrs
xchg
jbe
pop
jg
jle
cmpsb
xor
xchg
xchg
mov
jl
and
xchg
cmc
movsl
shr
cld
insl
shl
xor
mov
jne
in
xor
adc
popa
stc
rorb
hlt
addr16
ja
popf
pop
inc
jns
fldt
fiaddl
fs
inc
jp
inc
sbb
and
xchg
cmp
and
or
inc
movsl
xchg
cmc
jmp
jge
xchg
imul
add
cld
xor
push
cmp
or
pop
ds
xlat
lahf
movb
imul
loopne
stc
adc
jno
fdiv
cld
ds
push
push
mov
ds
lds
inc
mov
mov
jae
mov
add
add
lret
and
or
push
data16
loope
dec
orl
xchg
jge
pop
add
sbb
ja
iret
sti
dec
test
mov
in
insl
sahf
mov
xchg
movaps
mov
outsl
in
pop
rcll
sub
ret
daa
lahf
mov
dec
je
test
shl
cmc
adc
mov
aas
xor
mov
xchg
das
fiaddl
test
jecxz
out
push
dec
fisubrl
sbbb
adc
inc
sbb
dec
pushf
inc
push
jb
or
movsl
xor
pop
xchg
mov
cmp
daa
xchg
ss
xchg
rcrb
push
sbb
xlat
pop
ss
lea
clc
stos
add
jp
mov
sub
jg
inc
push
lret
aas
jbe
adc
sbb
fimuls
pop
push
sarl
sub
push
loopne
cs
aas
jnp
fwait
xor
pop
or
push
mov
lods
fiaddl
pop
lahf
stc
adc
popa
cwtl
add
lods
jbe
lahf
stc
loopne
ds
push
add
cmp
adc
pop
dec
fdivr
ss
cmp
gs
pop
mov
add
dec
mov
pop
jo
leave
cmpsl
sti
xor
and
jo
mov
adc
cltd
adc
out
ss
mov
xchg
inc
mov
sbb
lcall
roll
adc
pop
test
arpl
hlt
in
mov
movb
push
cmp
pop
ja
in
cmp
call
inc
repnz
arpl
cmc
cmp
pop
lret
pop
mov
popa
sbb
jnp
dec
ret
dec
loopne
or
jno
push
jmp
xlat
bound
xor
insb
out
mov
sbb
into
mov
insl
xchg
jb
pop
push
bound
mov
push
aam
data16
out
mov
popf
sbb
push
fsubl
dec
insl
xchg
nop
mov
testb
ret
add
push
lret
cltd
xchg
sbb
cmp
aas
pop
mov
mov
lcall
jmp
mov
icebp
iret
add
jle
xchg
jno
shlb
xchg
lods
inc
push
mov
gs
lods
imul
xor
stos
jo
cltd
ja
inc
jns
mov
sub
cmp
jp
out
mov
lahf
mov
jo
or
mov
aad
sbb
pop
cli
movsl
mov
cmpl
loopne
push
inc
pop
ljmp
pushl
push
int3
mov
movsb
xchg
inc
popa
jnp
es
fadds
push
inc
outsl
mov
or
and
pop
sbb
lock
aas
addr16
cmpsl
imul
lret
gs
sbb
lahf
repz
clc
ja
sub
and
cwtl
mov
dec
push
push
addr16
push
inc
mov
inc
jmp
mov
gs
stc
in
pop
iret
pop
sub
jle
dec
pop
add
arpl
xor
fiaddl
jle
mov
call
sbb
xor
fwait
cmpsb
pop
push
ret
lret
out
ja
les
xlat
icebp
mov
xor
adc
xor
movsl
sahf
sub
in
xor
mov
shll
dec
xchg
loopne
mov
mov
cmp
movsl
sahf
out
add
cld
push
int3
hlt
shr
test
push
jno
pop
enter
negl
cwtl
push
mov
mov
jge
jge
jl
cmpsb
xor
push
bound
mov
adc
add
ljmp
add
shl
imul
inc
ficoml
mov
lea
or
lahf
pop
cwtl
dec
stc
mov
adc
push
lock
xchg
fdivrp
mov
int3
inc
pop
int3
push
jno
xchg
mov
inc
and
ljmp
mov
in
sahf
sbb
sbb
fadd
sbb
push
dec
push
xchg
inc
mov
add
pop
insb
jo
pushf
jns
adc
and
push
inc
pop
stos
test
inc
xchg
mov
xor
jnp
xchg
cmpsl
cmp
xchg
mov
and
pop
mov
pushf
insl
xor
es
leave
inc
ret
dec
add
out
or
dec
imul
pop
xor
pop
xchg
inc
mov
jae
shlb
dec
aas
popfw
icebp
jl
pusha
jg
test
xor
push
and
mov
add
aam
stos
and
jne
pop
dec
fs
jp
scas
imull
push
add
ror
pop
iret
mov
mov
add
sahf
mov
popf
repnz
mov
cmp
cmp
lcall
stos
fisubl
stos
loope
push
push
je
subb
and
add
pop
xchg
inc
test
outsb
mov
popa
sbb
or
inc
call
or
sub
icebp
or
cmp
sbb
inc
sar
pop
push
je
xor
mov
dec
inc
ret
cli
adc
xor
add
les
out
add
das
cmpl
mov
push
rorb
dec
inc
out
cmc
fdiv
je
inc
jb
out
push
jne
cmp
jecxz
out
scas
les
mov
inc
dec
stos
push
xor
mov
push
stos
loope
movsl
adc
data16
push
pop
cmp
cmpsl
sub
out
sti
out
mov
mov
pop
add
mov
jae
es
mov
mov
popa
lods
mov
and
notl
pop
dec
ret
out
inc
jns
xor
dec
shl
cld
out
loope
int
adc
mov
push
xchg
mov
xor
push
pop
scas
enter
mov
adc
test
fists
sub
dec
ret
mov
jecxz
adc
into
nop
clc
xchg
inc
sbb
test
jns
fdivrs
mov
mov
push
sbbb
xchg
cmc
xchg
in
inc
pop
or
jp
fcoml
xlat
xor
push
ljmp
nop
cld
test
mov
call
outsb
sbb
jp
add
movsl
xorl
mov
lods
dec
sahf
push
xor
popa
ret
stos
mov
loopne
mov
bound
jmp
sub
out
lcall
inc
pop
insb
push
lods
movl
loopne
pop
pop
jmp
mov
pop
jne
add
mov
mov
push
and
jg
pushf
mov
cs
into
fstl
in
lret
pop
mov
not
popa
popa
push
fs
mov
bound
pop
dec
ret
cmp
insb
pop
sbb
neg
call
std
pop
pop
mov
repnz
jmp
xchg
lods
cmpsl
sbb
pop
js
adc
ret
roll
cmp
aas
pop
jg
add
in
push
xlat
inc
ror
jo
loope
sub
lds
inc
pop
sahf
insb
xchg
jno
into
nop
push
jne
push
loope
daa
out
dec
fstpl
sbb
lea
xchg
cwtl
jno
pop
xchg
sbb
mov
popa
sub
int
cld
push
jge
stc
and
lds
cmp
int
mov
and
call
or
dec
pop
and
sbb
cld
push
push
mov
xchg
ljmp
mov
mov
sbb
ret
cld
je
xchg
sbb
cmpl
out
lcall
je
outsb
jbe
icebp
daa
sbb
and
or
add
les
pushf
sub
inc
mov
iret
jmp
sbb
push
jne
das
push
fldcw
mov
jmp
xchg
adc
pop
xchg
mov
and
lret
lods
dec
push
pop
push
adc
add
notl
adc
xchg
dec
lret
mov
mov
lea
test
imul
imul
inc
and
sub
test
pop
inc
xor
dec
or
sub
in
fistl
mov
in
sub
dec
push
in
mov
imul
loopne
adc
xorl
aam
cmp
or
je,pt
jno
xlat
sub
mov
insb
xchg
mov
mov
pop
sarb
in
popf
imul
cs
clc
push
xchg
bound
jae
xor
sti
cmp
arpl
test
dec
testl
xchg
push
cmp
xchg
mov
adc
mov
jl
cld
mov
or
in
or
clc
ss
cwtl
xchg
js
mov
dec
sub
fistps
xor
bound
add
mov
adc
xor
cmc
cmp
sub
ds
dec
rcr
dec
test
sbb
sub
pop
imul
add
and
and
enter
hlt
xchg
xchg
cmp
aam
cmc
shld
shlb
std
sbb
lcall
pop
sahf
fwait
jge
add
push
stos
loopne
push
mov
jne
push
cmp
cltd
jmp
xor
mov
or
mov
pop
mov
in
jb
in
cmc
icebp
imul
xor
jg
and
cmp
gs
adc
jno
mov
adc
adc
popf
cltd
ret
jo
test
sub
sbb
out
pop
imul
in
add
fsubrs
xchg
dec
inc
scas
jge
or
lea
push
int
arpl
movsb
repnz
adc
cmpsl
lods
mov
sub
sub
out
cmp
jnp
jge
roll
cltd
out
cmp
cld
adc
test
ja
cmp
jns
or
jb
rorl
push
leave
sbb
repz
cmp
or
xchg
sahf
rclb
pop
ret
cli
cltd
in
add
shlb
dec
jl
jnp
cmpsb
fstpl
xor
and
test
inc
int3
push
incb
adc
mov
loop
xchg
mov
repz
xlat
pop
xchg
xchg
sbb
pop
pushf
ret
outsb
jno
and
lahf
aad
xor
shll
test
mov
sub
add
mov
orb
cmp
xlat
push
int3
out
cmp
test
shlb
sub
insl
adc
cmpsl
xor
test
pop
inc
adc
jo
test
push
or
xorl
jge
push
sub
pop
in
push
sub
xor
pop
xor
jp
rolb
mov
lods
sbb
int3
mov
pop
js
adc
loop
sbb
popf
std
sbb
inc
jo
std
fnstcw
cwtl
mov
inc
stos
sahf
gs
sub
aas
out
nop
pop
loop
stc
cvtps2pi
jl
ljmp
popl
mov
jp
mov
cmp
ljmp
lret
add
add
std
jo
les
das
xchg
je
jnp
push
jno
rol
inc
popa
movsl
inc
cli
adc
push
and
cmp
sub
cs
ja
xor
faddl
cmp
out
mov
inc
orl
mov
mov
repnz
lcall
cmc
sub
std
imul
cmp
xchg
sahf
in
sbb
out
adc
cwtl
je
sahf
sub
push
pop
je
add
lcall
sbbb
or
pop
fistl
ss
cmpsl
test
movsl
mov
jecxz
mov
jg
pop
and
jge
pop
mov
or
push
xchg
mov
ret
decl
out
or
fsts
add
and
mov
ljmp
push
movsb
adc
in
stc
in
mov
push
push
pusha
outsl
outsl
mov
cli
adc
pop
popa
mov
jmp
scas
int3
out
add
aas
and
cmpb
int
push
mov
jo
out
or
nop
scas
leave
dec
or
jg
cmc
push
lods
je
sub
sbb
or
xchg
out
mov
sub
cltd
inc
rorl
rorl
inc
movsl
add
out
rcl
test
test
out
xchg
aas
int3
xorb
mov
lcall
lahf
outsb
mov
and
jmp
out
push
jl
lock
or
mov
cmp
sub
enter
sbb
aaa
xchg
inc
popa
loope
mov
fabs
jae
xchg
push
outsl
aaa
scas
test
mull
adc
and
es
mov
test
push
mov
addb
movsb
int3
dec
adc
sarb
dec
out
jnp
cmp
das
dec
stc
pop
push
arpl
mov
adc
xorl
cmp
in
in
sbb
mov
stos
adcl
test
or
data16
inc
dec
adc
sub
mov
sti
jno
cmpsb
mov
hlt
cmp
icebp
cs
mov
xchg
push
test
dec
fldl
ja
sbb
mov
nop
mov
adc
shlb
mov
cltd
dec
or
adc
mov
mov
loope
shrb
int3
ja
cmp
fsubs
dec
or
mov
ficomps
sbb
repz
pop
and
sub
xor
shr
adc
repz
cmp
outsb
and
std
sti
sbb
in
movsb
dec
mov
lea
dec
int3
jmp
roll
movsl
mov
cmp
dec
cmp
xchg
jecxz
test
ret
cmp
mov
scas
mov
dec
dec
pop
adc
loopne
in
jne
test
aad
subb
mov
cmc
into
call
xor
xor
pusha
adc
pop
gs
jmp
xchg
mov
or
rolb
sub
dec
icebp
adc
xchg
bnd
aaa
lret
xor
and
aad
jecxz
movsb
mov
adc
inc
adc
push
jge
int
dec
hlt
call
andb
add
mov
mov
xor
add
add
lods
pop
es
xchg
popa
mov
jns
test
cmp
lret
xchg
stc
xchg
sub
dec
mov
test
mov
fsubrl
int3
inc
int
data16
xchg
add
in
lds
add
sub
push
pushl
pop
popl
pop
push
mov
add
sub
xchg
pop
mov
push
mov
mov
add
neg
dec
push
mov
and
pop
sub
push
mov
addl
pop
push
mov
popl
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
and
cmc
and
scas
or
mov
sbb
shlb
cmp
cltd
or
shll
daa
xor
push
adc
mov
sub
and
mov
pop
sbb
ss
mov
jp
sub
mov
sub
mov
sub
pop
sbb
add
adc
push
pop
push
xor
sub
jl
scas
push
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
popf
lds
fwait
or
lea
addl
test
add
mov
movl
mov
mov
pushl
call
aam
inc
inc
js
adc
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
stos
cmp
inc
sub
pusha
push
call
push
rorl
iret
fnstcw
xor
adc
and
sub
sbb
mov
popa
push
call
mov
jmp
call
in
mov
dec
mov
xchg
lea
stc
ds
mov
dec
xchg
cli
mov
adc
sahf
cltd
xchg
xchg
sbb
mov
inc
or
inc
mov
cmp
jge
cmp
and
mov
ss
cmpsl
in
loop
cwtl
nop
out
lahf
push
or
mov
push
dec
and
jecxz
gs
rcll
lds
sub
movsl
rolb
sbb
leave
inc
add
or
addr16
pop
pop
stos
ljmp
imul
xor
or
push
call
fldenv
loopne
in
addr16
pop
shll
adc
pop
lret
fcomps
stos
notb
lods
mov
pop
pop
ljmp
pop
dec
lret
jg
loopne
pop
pop
or
push
dec
add
out
aas
lcall
subl
in
cmpsl
pop
repnz
mov
mov
mov
xchg
call
cmp
int3
loopne
sub
or
rcl
in
pop
mov
pop
or
repnz
push
data16
sbb
sarb
xchg
xchg
fwait
mov
mov
fldenv
sbb
xor
ja
jmp
enter
test
iret
pushf
xor
in
xor
cmp
call
xor
mov
xchg
rclb
dec
and
jl
adc
incl
aas
icebp
push
dec
pop
test
push
out
iret
push
lock
xchg
aas
mov
insl
push
xor
into
jg
push
rcrl
add
stos
push
xor
inc
dec
dec
test
xlat
cli
add
jp
sbb
push
lock
jo
dec
and
jns
shrb
lock
mov
or
push
lock
push
lock
out
sbb
inc
iret
mov
rolb
push
out
iret
push
lock
adc
je
imul
mov
inc
sbb
inc
xlat
pop
enter
jp
in
cmp
lock
push
add
mov
shl
std
cmp
jnp
mov
push
lock
dec
test
push
lock
scas
dec
test
push
pop
sbb
push
lock
fwait
int
js
sub
inc
xchg
sub
notl
test
jnp
fcoms
test
fiadds
js
mov
lock
pushl
push
rorl
rclb
iret
push
lock
lock
es
stos
test
mov
nop
mov
add
movsl
sub
rcrb
pushf
iret
push
push
add
add
push
lock
loop
int
add
out
mov
jae
dec
lock
add
sbb
insb
mov
mov
inc
gs
stos
dec
mov
xlat
lret
pop
pop
stos
inc
and
cmpl
cmpl
outsl
cmpl
add
or
push
mov
notl
aam
lea
rcl
mov
rcrl
test
push
out
iret
push
lock
mov
into
lods
xchg
push
xor
movsb
push
mov
into
xorl
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
inc
cmp
pop
jle
repnz
negb
jmp
cmp
jne
push
jbe
repnz
inc
negb
jge
test
inc
sbb
add
inc
rep
adc
sahf
mov
movsl
movb
in
jg
sahf
scas
data16
push
adc
js
xor
xor
mov
adc
inc
js
and
clc
inc
aam
mov
mov
lea
icebp
leave
nop
or
les
mov
scas
jge
aam
lods
loopne
lret
jae
lods
outsb
rcll
add
jmp
push
inc
push
xlat
iret
xor
pop
xor
mov
pop
jge
loope
in
fwait
mov
ljmp
xchg
int3
andl
and
jae
jmp
stc
es
call
xchg
xchg
sbb
mov
push
mov
repnz
jecxz
fmul
jg
movsl
fsubrl
cmp
clc
ljmp
xchg
xchg
loop
fs
sub
je
pop
movsb
xlat
push
xor
mov
sub
dec
stos
and
rcrb
out
nop
dec
cmp
lds
jp
fidivl
decb
addl
aam
xchg
and
pop
lods
test
jno
fcoms
cltd
shrb
mov
addl
lahf
push
sbb
inc
add
packuswb
lret
jnp
pushf
pop
je
pop
mov
sbb
or
xor
into
dec
lahf
iret
adc
test
mov
push
popa
jbe
outsl
pop
call
sub
ljmp
out
jge
pop
rcrl
stos
stc
sbb
adc
jmp
push
or
mov
pop
out
cmp
daa
jg
cmp
cmpsl
mov
fstl
dec
adc
testl
shll
inc
inc
aaa
imul
inc
inc
xchg
and
enter
jne
enter
xor
jns
mov
cs
ja
cmp
sbb
pusha
lods
dec
pop
lods
xor
jne
test
xchg
sbb
nop
imul
lret
xor
pop
cld
mov
es
sub
jle
mov
jp
aam
out
pop
xor
mov
jp
xor
inc
dec
fnsave
adc
adc
add
adc
dec
dec
mov
aam
getsec
insl
xor
push
mov
or
pop
adc
loop
js
in
arpl
enter
push
ficomps
cs
in
cmp
pop
jecxz
pop
dec
cmp
sbb
cltd
xor
dec
xchg
ds
pop
fsubr
dec
jnp
pop
movsb
sbb
push
popf
pop
iret
ret
test
sbb
jae
outsl
pop
xchg
clc
adc
dec
jb
fisubl
inc
fistps
push
in
nop
mov
sbb
xlat
xchg
pop
mov
mov
pusha
int3
mov
pushf
clc
push
ss
or
fimull
int3
adc
in
rolb
adc
mov
out
rorl
cld
dec
popf
xchg
add
and
jecxz
scas
daa
cli
xor
test
inc
into
dec
inc
scas
addr16
orl
int
enter
adc
adc
insl
test
add
mov
in
and
lea
es
std
push
xchg
mull
push
inc
pop
mov
ljmp
sbb
jo
cs
jno
xchg
stos
jnp
and
or
add
jbe
popl
icebp
sub
and
xchg
add
imul
push
mov
add
je
cmp
fwait
mov
push
out
movsl
imul
xor
jg
dec
or
sarb
pop
push
cltd
vmovaps
fldt
leave
pop
pop
cltd
add
mov
lock
repz
test
stos
and
jmp
testl
rcll
lfs
cmp
cltd
aas
xchg
sub
popa
sub
pop
xchg
sbb
jo
ret
fisubl
xchg
sbb
ljmp
adc
adc
js
negl
or
pop
dec
into
cwtl
sbb
mov
push
clc
out
or
jb
adc
inc
lods
nop
rclb
lds
mov
arpl
iret
stc
cmp
test
inc
inc
stc
jp
sahf
sbb
dec
push
ljmp
mov
xchg
push
jmp
push
adc
dec
mov
in
lock
pushf
adc
sbb
cmc
mov
imul
jecxz
xorl
cmp
out
cmp
sub
lcall
cltd
sbb
inc
outsl
ljmp
lods
xchg
lods
mov
add
std
cmpsb
jmp
je
push
xor
mov
mov
test
jmp
mov
outsl
sbb
mov
je
shll
xchg
push
imull
imul
push
leave
call
mov
cmp
mov
jb
insb
dec
sbb
fs
into
pop
movsb
and
mov
jp
mov
sbb
insl
xor
sbb
cltd
je
shrl
pop
jo
in
cmp
adc
into
ljmp
pop
ret
lret
notl
mov
sbb
lods
push
pop
mov
dec
push
push
out
loop
cmp
lea
jmp
add
mov
addr16
fiadds
pop
sub
aas
ficomps
jl
ret
rcll
add
sbb
test
or
lea
mov
pop
add
dec
or
cli
pop
jp
or
out
les
adc
dec
sub
and
inc
sub
or
andl
xor
or
pop
lea
ss
inc
and
sbb
or
movsl
xor
and
rcrb
and
cmp
jg
in
movsb
lods
clc
popf
add
pop
cld
cmpsb
negl
mov
jle
mov
ss
or
fnstcw
sbb
outsb
mov
cmpsb
mov
xchg
push
enter
rcll
insb
jae
adc
int3
sub
in
into
bound
rorb
mov
pop
jne
adc
xor
mov
popf
push
or
inc
je
jp
ret
imul
sbb
rcr
mov
sub
sub
cmp
neg
pop
ficoms
mov
jno
xchg
ffree
aas
insl
ljmp
lret
stos
mov
push
in
cltd
sub
mov
int
pop
xor
or
cltd
enter
nop
js
cmc
mov
jle
insl
mov
das
xor
dec
enter
dec
and
arpl
mov
pop
and
nop
fsubrs
inc
and
add
hlt
push
sbb
adc
xor
arpl
fs
mov
popa
addr16
insb
lods
push
fwait
xor
mov
or
insb
lahf
call
mov
adc
shr
insb
insb
dec
jp
pusha
lcall
movsl
mov
mov
jecxz
xor
gs
xchg
pop
adc
mov
mov
dec
add
leave
hlt
xchg
pop
pop
fidivrs
xchg
pop
pop
sub
pop
lods
or
das
popf
mov
addr16
bswap
jno
add
mov
in
lea
mov
in
rolb
lods
mov
ds
cli
aaa
mov
sbb
and
in
rcrb
or
loop
aam
mov
xor
adc
imul
add
xchg
pop
gs
adc
inc
pmovmskb
pop
push
jnp
jmp
scas
xor
xchg
mov
jo
pop
lret
je
je
add
mov
ss
push
add
fdivrl
out
mov
cli
dec
mov
or
mov
in
outsb
add
pusha
inc
dec
and
sahf
or
rclb
test
jl
stc
lcall
xchg
gs
movsb
ror
test
decb
sub
pop
out
aad
cld
jns
fucomi
jns
jae
outsb
add
or
sbb
fldcw
scas
shll
imul
dec
mov
dec
std
fdivrl
out
mov
icebp
or
sub
js
mov
mov
xchg
addr16
insl
lods
mov
or
cmp
push
das
fs
dec
out
mov
dec
cltd
jecxz
push
push
aas
call
mov
inc
sbb
mov
fwait
xchg
in
enter
movsl
mov
mov
faddp
fsubrl
xlat
fsubs
mov
lock
sub
in
ljmp
pushf
pop
fldenv
jg
add
sub
cs
jno
addr16
insl
stos
lahf
inc
lret
push
call
gs
cmp
jo
adc
or
jnp
aad
add
cwtl
inc
mov
push
inc
dec
push
daa
xor
mov
and
pusha
pop
das
bound
ds
aas
cmp
jg
or
jbe,pt
fs
adcl
xor
add
mov
jno
inc
adc
cmp
lret
out
ret
pop
call
cmc
vaddsd
pop
pop
or
ret
filds
cmc
pusha
push
repnz
fidivs
repz
fldt
and
sarl
add
mov
cmp
add
inc
loopne
inc
fisttpl
jbe
mov
scas
cmp
mov
mov
xor
pop
in
push
negb
scas
sub
dec
or
or
mov
adcb
and
sbb
adc
ret
xor
jne
inc
loope
mov
js
xchg
cwtl
mov
sahf
mov
popf
out
arpl
jmp
push
add
sbb
or
sti
leave
cmp
fmull
out
cmp
insl
mov
xchg
push
inc
lret
dec
cld
ss
lret
mov
pop
adc
je
xchg
add
subb
cmp
xchg
add
push
jge
pop
mov
test
pushf
adc
mov
pop
lret
inc
mov
fdivrp
je
xchg
inc
aam
outsb
mov
add
push
mov
dec
dec
cwtl
xchg
jne
imul
push
in
repz
push
sub
cmc
mov
shrb
push
sbb
pop
cmc
orl
dec
xchg
fs
fistps
jp
arpl
lahf
sbb
pop
mov
adc
arpl
inc
ss
lcall
pop
sbb
add
dec
fdiv
ja
leave
fnstsw
jno
push
sahf
lock
adc
psraw
test
insl
popa
imul
push
jbe
pop
sbb
xchg
rcll
mov
dec
enter
sub
pushf
adc
in
pop
stc
sub
lahf
cmp
mov
mov
jg
lcall
mov
popa
aad
cli
push
xor
dec
and
cmp
iret
mov
popa
pushf
imul
arpl
xchg
add
pushf
xor
mov
lret
stc
test
das
fnstcw
add
insl
pusha
mov
aas
cmpsl
test
xchg
lret
inc
out
lock
xor
mov
adc
inc
and
or
or
sub
push
jae
mov
and
jecxz
mov
lret
fs
fucomp
clc
inc
shrb
mov
pop
push
cmp
mov
pop
into
and
xchg
mov
xchg
ds
add
mov
popf
or
xor
mov
repnz
jns
mov
cwtl
mov
call
mov
sahf
sbb
pushf
push
cmpsl
sti
out
xor
mov
xchg
or
xorb
gs
lcall
cwtl
add
andl
fisttpll
in
pop
fadd
clc
pop
cmp
add
inc
mov
fdivp
shl
add
or
daa
or
jp
adc
in
movsl
hlt
xchg
and
mov
test
dec
clc
loopne
lods
add
fdivrl
sbb
xchg
movsl
in
lods
mov
add
cli
jne
cld
js
mov
xor
inc
aas
sbb
add
pushw
adc
or
fs
dec
arpl
jmp
xchg
xor
shrl
push
jg
xor
inc
cmc
cmp
sbb
jne
push
jecxz
jno
roll
in
adc
lea
dec
and
mov
or
bound
mov
repz
push
or
shlb
mov
mov
xchg
lock
out
adc
push
dec
mov
aas
pushl
xchg
notl
pop
xor
outsl
dec
lahf
rcll
adc
mov
jbe
stc
sbb
inc
shl
rorb
repnz
push
scas
adc
lret
xor
ja
mov
pop
mov
inc
rol
mov
jb
rcll
xchg
pusha
pushf
push
and
scas
cmp
leave
popa
mov
mov
es
add
scas
mov
push
aas
bound
xchg
xor
ret
xor
dec
sahf
mov
stos
dec
inc
adc
cmpsl
sbb
sbb
ds
popf
stc
jbe
add
bound
lcall
mov
sub
mov
push
cmpsb
adc
sub
push
and
pusha
fdecstp
lea
scas
fwait
jns
stc
sub
jle
lcall
lods
daa
push
push
jne
jb
imul
fwait
cmc
jb
mov
inc
ret
xor
int3
popf
push
data16
lods
fsubl
sub
xor
dec
inc
xchg
sbb
jmp
inc
dec
rcrb
jle
fcomi
ljmp
fstp
cmp
aam
xlat
dec
mov
mov
adc
mov
sub
push
ret
push
or
xchg
xor
loopne
jnp
fsubrs
sbb
and
mov
aaa
mov
cmp
inc
arpl
lods
sbb
add
daa
fstl
inc
iret
repz
sbb
mov
cli
int3
ljmp
fwait
xor
outsb
mov
dec
jmp
hlt
jne
mov
repz
add
test
lahf
xor
or
int3
and
sbb
add
jo
outsb
pop
jns
hlt
mov
sbb
movsb
dec
out
cwtl
daa
pop
addr16
hlt
lods
add
lods
jb
hlt
aad
mov
add
pop
jno
cld
aas
pop
and
mov
negl
movsb
sbb
lcall
sub
pop
mov
jbe
lret
popa
shl
shlb
xchg
arpl
into
mov
mov
and
inc
mov
mov
nop
lcall
push
jns
jg
out
test
shll
pop
lret
push
jns
fs
and
mov
lods
pop
pop
movsb
rcrl
sub
push
movsb
arpl
cmp
hlt
and
fistpl
test
jl
nop
xchg
mov
inc
pop
and
jmp
xor
cmpsl
sub
nop
idivb
sbb
lods
mov
cli
outsb
out
add
sbb
mov
mov
sbb
pop
inc
cmp
push
popa
call
jle
push
inc
outsl
in
out
inc
ret
xlat
push
mov
out
ficoml
into
xchg
gs
das
push
sub
pop
cs
aam
ret
sbb
push
xchg
jo
icebp
popl
in
jp
shrb
fstps
mov
es
jl
jmp
sahf
std
insl
add
movsb
cmp
inc
lret
std
adc
push
iret
insl
std
mov
dec
lcall
xor
jbe
mov
arpl
lahf
sub
and
test
xor
lds
cmp
pop
pop
std
shrl
cmp
bound
cmp
and
jno
ret
cmp
mov
sbb
sti
jnp
xor
xchg
xchg
rcrl
inc
rol
mov
xchg
pop
xchg
push
in
inc
das
cmp
mov
push
xchg
movsl
mov
add
mov
xchg
lods
add
rclb
mov
stc
cli
dec
dec
aaa
stc
bound
dec
shll
testb
cwtl
imul
in
or
or
aaa
cld
fbld
dec
dec
lds
mov
leave
jb
xacquire
inc
lds
pop
popa
xchg
sbb
cwtl
mov
jp
loope
in
cmpsl
notl
cli
shl
fwait
xor
std
pop
jmp
movsb
push
addr16
scas
cmpsb
daa
push
cmp
pushf
push
je
dec
mov
or
adc
jne
lahf
out
sbb
jmp
mov
mov
push
call
clc
call
scas
push
into
je
mov
rolb
sub
es
outsb
std
xchg
imul
jge
mov
and
loope
cmc
shlb
adc
data16
jecxz
or
add
lods
cltd
call
mov
xor
repz
add
dec
or
pop
ja
mov
sti
mov
adc
lods
pop
imul
and
mov
sbb
and
adc
adc
ss
dec
add
xlat
pusha
adc
mov
dec
xchg
ficoms
adc
test
mov
cli
ret
adc
loope
mov
pop
ja
xor
test
dec
lahf
xchg
in
sub
into
mov
pop
or
into
scas
lret
fsts
lea
dec
mov
lea
push
sarb
jecxz
adc
out
xchg
lret
xchg
push
xor
call
or
mov
xorb
fwait
mov
ret
mov
push
ja
leave
sub
xor
pop
sub
std
mov
outsl
std
pop
call
sbb
sub
jmp
push
jg
mov
test
adc
sub
pushf
push
int3
mov
push
inc
pop
aaa
movsl
lret
sub
fnstcw
sbb
mov
test
movsl
xlat
dec
enter
xor
xchg
lcall
ljmp
inc
test
int3
or
add
mov
mov
xchg
sub
adc
jle
inc
gs
aas
out
movsl
iret
and
rclb
sahf
add
push
sub
lea
mov
adc
setb
push
inc
sbb
repnz
fdivr
fs
inc
hlt
lds
and
xor
and
mov
sbb
jae
xchg
sbb
sub
push
pop
mov
xchg
pusha
mov
sub
xchg
mov
dec
mov
scas
mov
stos
ljmp
adc
mov
xchg
add
test
cld
jl
cltd
iret
test
or
cli
outsl
jb
inc
pop
int3
mov
sbb
mov
cmpsl
mov
pop
lahf
imul
inc
adc
sti
push
xchg
add
xchg
fsubs
dec
xchg
push
inc
inc
mov
sbb
push
repz
idivl
lret
out
mov
stc
mov
stc
inc
pop
enter
lret
pop
mov
jg
lcall
loopne
push
data16
mov
mov
fiaddl
das
push
push
sahf
or
dec
aas
push
lcall
xor
push
sub
mov
adc
sbb
cmp
pop
pop
pop
mov
aas
in
cmpsl
int
xor
dec
cmpsb
cltd
jecxz
in
movsl
imul
pop
incl
add
out
sub
add
mov
add
jmp
jbe
lods
xor
jbe
xchg
pop
dec
xchg
pop
cmp
lret
inc
lahf
xor
fdivs
aam
mov
mov
cmpsl
jnp
lods
in
fmulp
lret
cmpsl
test
aad
xchg
sti
out
inc
inc
outsb
movsb
sbbb
pusha
lret
cmp
adc
outsb
mov
add
jmp
int
xor
scas
cmp
inc
add
and
jmp
pop
xchg
push
adc
pop
mov
das
sbb
sbb
out
xlat
mov
push
push
daa
mov
scas
or
gs
clc
jns
cli
adc
dec
insb
fstpl
and
push
and
mov
xor
lods
sub
xchg
je
mov
sub
mov
adcb
adc
sub
cmpsb
rorl
ror
negl
jns
sarb
nop
rsm
testb
fs
in
mov
sbb
mov
insl
lea
not
pop
lcall
or
cli
data16
jnp
adc
mov
push
adc
rcrb
xchg
cmpsl
das
or
pop
shll
jp
jge
xchg
cltd
jo
sub
and
dec
sbb
fbld
lret
out
lock
pop
inc
stos
dec
stc
mov
clc
mov
int3
pop
adc
pop
hlt
adc
push
mov
inc
jns
jnp
orl
shll
xor
sbb
push
ss
lahf
mov
lret
cmpl
shll
dec
mov
cmp
in
dec
mov
aam
ja
jbe
js
clc
enter
std
cld
push
lcall
fldenv
dec
mov
test
xchg
ljmp
pop
fucomp
fucom
imul
mov
mov
or
mov
and
mov
cwtl
fdivr
imul
enter
out
mov
xchg
adc
aaa
lret
cld
flds
rclb
push
addr16
ss
sahf
xor
in
jecxz
pop
out
movsb
xor
add
dec
std
mov
popf
sarb
shll
mov
sub
lods
test
inc
data16
pop
mov
data16
inc
push
or
js
lock
push
scas
jb
test
xchg
pop
out
sub
xlat
into
pop
sbbb
xor
add
shll
mov
aas
push
ss
push
jno
sub
ret
fucomi
inc
xchg
out
push
ficompl
lret
pop
stos
push
mov
out
xchg
leave
daa
icebp
pusha
pop
mov
inc
fildl
out
movsl
iret
and
adc
adc
or
mov
add
xor
mov
mov
std
or
jp
cmpsb
pop
fisubl
sbb
lods
in
cmpsl
repnz
xchg
dec
sbb
jnp
xchg
mov
lods
mov
outsl
adc
cmpsb
aas
push
xchg
mov
cltd
sarl
lock
cld
js
stc
pop
test
mov
pop
imul
dec
stc
lret
shl
mov
gs
add
cwtl
aam
inc
cmc
push
rcrb
imul
push
cmp
ss
sti
dec
icebp
jo
popa
orb
mov
lcall
mov
push
daa
outsb
cs
lods
add
and
xchg
cs
scas
arpl
sub
dec
xchg
jge
lock
mov
into
fmull
xor
xor
imul
fmul
sub
push
mov
subb
aad
pushf
imul
pop
add
ret
aas
cs
adc
lcall
sub
je
adc
and
out
loopne
cmp
cli
jbe
inc
adc
dec
push
cmp
lods
in
loop
jnp
push
xorb
orl
stos
sub
insb
or
xchg
std
jnp
stc
add
xorb
push
out
adcl
or
push
push
and
pop
clc
sbb
mov
testb
pop
mov
cmp
int
sub
cmp
mov
fstl
cli
inc
sub
mov
insl
xor
mov
test
mov
lcall
pop
pop
cs
je
inc
xchg
icebp
push
call
out
and
js
shlb
loope
das
lea
cmp
cwtl
insb
mov
shr
shl
outsb
xchg
je
pop
test
movsb
cli
fs
stos
in
pop
jge
push
sub
or
fsubs
fnsave
fwait
or
and
and
or
imul
add
sbb
push
rorl
fmull
lahf
les
jg
inc
xchg
xor
jo
fsubs
jle
push
push
int
and
int3
cmp
es
popf
and
mov
packssdw
and
cmp
push
or
xor
int3
mov
fildl
movsl
stc
jbe
push
xchg
cmp
stc
pop
cs
fnstcw
test
mov
jb
xor
stos
out
mov
faddp
jne
mov
jg
dec
stos
loopne
cmp
repnz
push
adc
testb
dec
pop
push
arpl
adc
frstor
cmp
aam
sarb
cld
jae
stc
push
mov
rolb
outsl
mov
sti
test
sbb
or
enter
dec
xor
inc
pop
adc
adc
shrl
jns
mov
jo
pop
or
insl
dec
icebp
aam
jo
sbb
loop
mov
cmp
push
pop
cmp
mov
cmp
fwait
inc
dec
rcll
movsl
stos
sub
inc
xor
mov
inc
or
in
cltd
cmp
inc
cmpl
enter
pop
ja
ljmp
xor
add
fidivrl
dec
dec
mov
cmpsb
and
cltd
cs
inc
adc
jmp
mov
sahf
adc
fwait
inc
mov
idivl
pop
dec
push
lea
loopne
jnp
mov
cmp
xchg
in
std
mov
jmp
push
movsb
inc
loopne
mov
cs
pop
out
into
fsubl
push
pusha
test
aaa
xchg
cmp
push
jle
push
insb
out
dec
jl
lahf
mov
xor
adc
je
and
rorl
and
adc
mov
std
add
fstps
jae
cmp
xchg
dec
loop
mov
xor
int3
sub
out
xchg
dec
sbb
popf
dec
mov
xchg
cmp
jmp
int3
and
stos
hlt
inc
filds
push
cmpsb
rclb
ret
aad
jae
bound
iret
pop
push
lock
sti
loopne
push
ret
xchg
sbb
sbb
paddusw
insb
mov
cmpsb
rclb
loop
adc
adc
mov
call
mov
cs
xchg
loop
push
int3
jmp
xchg
test
lods
ljmp
lea
or
xchg
aaa
sti
jno
pop
dec
fucom
jecxz
cwtl
adc
dec
sti
out
jne
xchg
mov
mov
imul
mov
and
mov
pop
xchg
push
add
mov
jle
xchg
mov
fstps
mov
xor
xchg
xor
shrb
xchg
or
out
add
sbb
cmp
cmp
stos
sbb
mov
mov
pushf
jnp
jge
mov
pop
xchg
jne
sbb
and
xchg
mov
test
outsl
not
fs
test
push
pop
or
popa
mov
adc
push
pop
mov
jo
push
xchg
outsl
ds
call
mov
inc
sub
cltd
jecxz
scas
out
xor
int3
or
add
aaa
loope
push
add
push
jp
sti
lcall
outsl
dec
testl
mov
je
loop
inc
jle
leave
inc
mov
and
loopne
dec
sbb
mov
loop
mov
mov
xchg
cmp
enter
sahf
dec
push
mov
pushf
mov
xor
adc
loop
adc
cmp
std
pushf
sbb
and
repnz
push
xor
push
xchg
movsl
jno
or
pop
mov
rcll
mov
cmp
in
pop
fs
xor
or
insl
dec
fdivs
xor
sub
add
push
lods
lcall
fcomps
xor
testb
test
fimull
dec
out
cmpsb
leave
or
sarl
les
cmp
fistps
xor
cmc
jp
push
and
jbe
mov
push
or
clc
jne
je
adcl
nop
aam
or
loopne
jae
mov
adcb
sbb
xor
bound
pop
or
add
scas
jg
xor
lret
pop
cld
lods
shll
notb
mov
dec
xchg
mov
lock
out
add
loopne
inc
insl
or
mov
cmp
fmull
dec
xor
test
push
mov
mov
xor
int
and
adc
add
test
movsb
repz
addr16
push
cmp
mov
pop
ja
in
cmp
inc
adc
pusha
test
push
mov
stos
pop
inc
mov
data16
fldt
mov
nop
jb
jbe
sub
xchg
push
lahf
fxch
nop
mov
mov
xor
sub
mov
test
out
push
pushf
pop
bnd
shll
xchg
push
clc
inc
insl
stos
addb
add
sub
lock
sub
lds
or
mov
and
sti
cmp
dec
push
fimuls
shrl
test
jbe
xor
and
add
mov
mov
int3
insb
or
mov
cltd
xor
sarl
daa
jb
and
dec
jecxz
sbb
sbb
fbld
js
fnstenv
jp
in
sbb
aam
insb
inc
call
lock
jmp
mov
mov
cmp
cmp
sbb
xor
xchg
lcall
or
jo
and
push
imul
xor
jbe
xchg
inc
cmp
or
hlt
mov
cmpsl
leave
cwtl
mov
mov
call
stos
fimull
adc
jns
popa
cmp
jb
rcll
mov
adc
jle
test
sub
hlt
mov
sub
dec
pop
outsb
jmp
sarl
mov
push
mov
jmp
and
cwtl
sub
add
push
pop
push
ret
call
dec
push
cs
cmpsl
xchg
add
ret
xor
gs
cmp
xchg
and
loopne
push
pop
mov
jl
sbb
sub
call
mov
sbb
js
es
or
ficompl
mov
outsb
cld
lcall
je
jecxz
dec
or
mov
and
in
stc
roll
xchg
cmp
push
jecxz
int3
jbe
orl
movsl
mov
dec
lret
xchg
divl
sbb
int3
cwtl
mov
jno
push
inc
jbe
rclb
imul
mov
repnz
je
push
jbe
insb
mov
xor
xchg
insl
imul
js
int
fisubrl
adc
or
sbb
lods
pop
movsl
data16
fisubl
mov
push
lret
pop
sub
aas
mov
adc
sti
js
shll
mov
or
pop
add
push
test
xor
fwait
xor
mov
and
adc
or
cs
or
and
mov
inc
add
add
not
and
lds
and
dec
push
lods
bnd
in
pop
jecxz
mov
cmp
andb
cmp
push
mov
mov
inc
int
push
pop
mov
inc
int3
inc
mov
roll
push
ds
fildl
mov
out
dec
or
xchg
sub
jmp
jne
out
out
add
cld
add
push
scas
outsb
mov
inc
or
pop
jmp
shlb
loope
push
add
fmull
jp
jb
psubsw
pop
mov
or
lret
gs
adc
cld
xor
sbb
jmp
es
cli
mov
and
jbe
xchg
hlt
cmp
adc
xchg
je
shrl
pop
mov
jns
and
out
push
call
imul
add
mov
cli
sub
pushl
ret
xor
aad
imul
addr16
insl
lods
mov
or
ret
lret
mov
lods
test
add
jecxz
jnp
or
push
pushf
jle
inc
sub
sbbl
stc
stc
shr
xchg
inc
mov
mov
jmp
dec
mov
fs
scas
lcall
xlat
into
mov
xor
sahf
pop
imul
mull
test
mov
dec
je
pop
movsb
lahf
dec
stos
jge
cmpsb
jne
push
jb
add
xor
pushf
imul
push
lcall
cmpsb
or
push
cmpsb
rcl
inc
jge
je
mov
push
fcomps
je
mov
mov
ljmp
xchg
fdivl
mov
fimull
rcrb
pop
xchg
dec
test
stos
sbb
adc
inc
jno
mov
mov
pop
mov
mov
hlt
imul
adc
inc
mov
fisttpll
in
push
xchg
data16
add
out
inc
jmp
mov
jns
nopl
lcall
sbb
xor
xlat
xchg
stos
je
xchg
xor
pushf
inc
inc
xor
inc
das
push
fnstcw
cltd
shrl
loopne
xchg
push
adc
popa
dec
js
jne
lret
mov
xor
fdivrl
out
movsl
iret
and
xorb
rclb
hlt
cli
std
shl
add
jb
push
pop
int
sbb
les
mov
ja
jg
adc
xchg
xor
lods
sub
push
in
push
jmp
pop
pop
lcall
and
add
fsubl
lods
iret
jmp
xchg
mov
adc
sbb
mov
out
in
in
inc
mov
inc
loopne
mov
iret
jb
imul
mov
add
mov
outsl
sub
addr16
push
fisttps
xchg
iret
lods
cmp
sbb
dec
sub
mov
fsubs
cmpsl
in
sub
sbb
xor
rolb
into
lea
rcrl
pop
add
push
ss
int3
negb
mov
cmpb
adc
mulb
or
mov
in
sub
jns
dec
mov
push
enter
xlat
and
fsubrl
repz
xchg
mov
ret
vmulps
insb
std
add
jg
mov
inc
pop
cld
push
jno
push
adc
or
cmp
adc
push
cltd
test
fidivrs
xchg
push
shll
clc
imul
cmp
push
into
cmp
adc
xor
lods
xchg
out
insl
aad
out
or
lret
cmp
dec
lods
rclb
mov
and
das
icebp
scas
lret
and
pop
mov
sbb
push
shl
push
or
inc
adc
fs
push
mov
ss
sub
lret
test
sub
hlt
xor
std
enter
nop
out
pop
or
out
icebp
cld
xchg
add
push
in
jecxz
and
ljmp
into
addr16
push
je
lea
sub
call
pop
jae
xor
test
adc
mov
inc
sbb
add
movsl
xor
pusha
mov
cmp
or
push
test
or
and
popa
jae
shl
xor
and
addr16
insl
lods
mov
cmp
sub
in
and
aad
add
lcall
or
jmp
sub
inc
pop
mov
in
or
aam
mov
faddl
xchg
aaa
push
mov
fisubrs
push
xlat
test
aad
add
fistl
or
mov
lods
sbb
jmp
sbb
or
dec
movsl
jl
sub
outsl
jnp
push
jnp
dec
mov
lock
mov
in
lcall
adc
popa
shrl
cmpsb
mov
xor
nop
cmp
xor
cs
int3
xor
cmpsl
xor
ja
and
push
dec
sbb
fdiv
add
sbb
fwait
sbb
mov
pop
inc
adc
in
sbb
sub
leave
out
clc
dec
inc
sub
pop
fldt
mov
nop
out
jnp
add
sbb
xchg
addr16
insl
lods
mov
xor
ret
fld1
lods
pop
adc
dec
mov
sub
mov
cmp
jae
mov
xchg
xor
loopne
jnp
fsubl
std
and
sub
loopne
out
push
pop
insb
jns
cmp
aaa
out
mov
mov
xchg
popl
pop
or
inc
das
loopne
out
adc
push
xor
nop
sub
lret
pop
sub
push
cmpsl
jne
xor
xchg
icebp
cld
lret
adcl
pop
aam
aad
repz
into
push
in
push
popa
cmpb
dec
push
cmp
mov
xchg
ficoml
push
jecxz
pop
add
in
or
pusha
iret
xor
dec
push
pop
data16
or
ficoms
jmp
lea
sbb
iret
xor
pop
dec
mov
fwait
or
cmp
insb
push
insb
push
mov
mov
sbb
mov
pusha
cmp
in
cmp
inc
pop
sahf
mov
sbb
fs
and
stc
shlb
xchg
ss
insl
mov
fdivrl
cwtl
sub
fst
sbb
adc
movsl
xchg
mov
push
mov
and
stos
mov
mov
adc
dec
test
xchg
lods
sbb
mov
dec
xchg
jb
xlat
std
dec
popf
jns
push
jbe
int
add
xchg
inc
dec
inc
adc
mov
lods
test
xor
aad
lods
and
add
xchg
push
lret
ret
testl
push
stos
repnz
shrl
shrb
fisubs
sbb
shll
jo
push
xchg
push
xchg
sub
sbb
dec
cmc
outsb
in
pop
jae
jo
das
rcl
popf
sarl
out
adc
out
data16
push
test
pusha
and
testb
mov
xchg
cmp
movsl
pop
imul
pushf
xlat
pop
and
pop
cwtl
and
mov
fwait
adc
pop
and
dec
pop
cs
popf
pushf
mov
jg
enter
out
xchg
xchg
mov
jle
pop
adc
lock
add
sub
jmp
mov
rclb
jnp
sbbl
lds
icebp
cmpsl
mov
push
push
sbb
push
or
xchg
mov
sub
cmc
repz
push
adc
xchg
inc
movsb
lcall
outsb
fmulp
xchg
mov
pop
imulb
inc
adc
jno
ret
inc
movsl
jmp
adc
add
jp
test
ret
sbb
dec
sbb
outsb
icebp
xchg
std
cmp
fldcw
add
cs
jne
mov
in
add
fsubl
outsb
lea
cmc
adc
xchg
inc
popf
sub
mov
jge
sub
or
aas
mov
into
lcall
inc
lds
popf
push
dec
in
sub
popa
push
fwait
mov
rol
fsubrl
loop
or
xor
mov
push
dec
out
mov
mov
dec
scas
lods
loop
lods
add
mov
dec
lods
and
mov
cmp
mov
outsl
cmpsb
addb
mov
add
sbb
je
mov
popf
lds
inc
and
lods
and
ret
xchg
mov
xchg
outsl
into
jno
cmp
mov
xor
movsb
pushl
lret
fdivs
cmp
or
lods
dec
cmp
outsl
and
cltd
es
cwtl
cmpl
cmp
mov
push
lcall
scas
pop
popf
xchg
pop
icebp
jnp
add
mov
shll
nop
jno
roll
imulb
insl
in
cmp
pop
mov
mov
mov
adc
ffree
adc
jmp
adc
inc
inc
aad
cmpsb
dec
mov
lods
xchg
aaa
dec
in
lods
sbb
es
aad
insb
sub
xchg
sub
push
push
imul
cwtl
xchg
inc
outsl
std
xchg
ljmp
les
cmp
mov
mov
out
or
imul
jecxz
xor
mov
xor
or
pop
add
sub
push
push
imul
cmp
and
xchg
xor
or
push
jns
shrb
pop
and
adc
roll
jge
repz
adc
iret
imul
jg
popa
rcrb
jmp
es
add
sub
cmc
adc
dec
cwtl
fs
fnstenv
push
xor
cmp
pop
push
jno
insl
pushf
adc
movsb
call
push
mov
inc
cld
stos
leave
and
aaa
xor
xchg
es
je
ret
test
test
shll
jns
pushf
push
int3
mov
push
inc
sbb
inc
xlat
jnp
iret
jne
mov
outsl
jp
mov
enter
sbb
add
jns
scas
and
fstps
sub
push
sbb
dec
and
lcall
daa
or
dec
sub
out
mov
lcall
sbb
push
xchg
sub
add
je
inc
scas
mov
daa
ficomps
jno
pop
sbb
cmp
xchg
mov
cmp
mov
fisttpl
xlat
loope
mov
push
mov
cmp
sub
incb
std
in
or
imul
cmp
arpl
cmpsl
lea
lock
sbb
mov
push
in
pop
adc
aaa
mulb
mov
subb
adc
push
inc
push
push
push
add
andb
dec
arpl
js
xlat
out
jle
sti
arpl
mov
cld
push
ljmp
mov
xor
jecxz
mov
xor
or
nop
das
movsb
xor
test
push
cs
repz
xor
into
xchg
mov
dec
sbb
stos
sbb
test
fiadds
cmpsl
test
or
es
aad
xchg
push
sub
mov
cltd
iret
and
dec
push
loop
adc
jge
and
xor
and
cmp
stos
nop
test
sti
mov
out
fwait
pop
mov
loope
xchg
jl
in
sarb
adc
fldt
andl
fisubrs
jge
pop
lret
sahf
push
jb
mov
add
xchg
scas
lret
dec
fisubrl
daa
pop
mov
dec
mov
out
lds
pop
jae
pop
jb
pop
jl
lea
or
xchg
repz
jae
add
dec
or
clc
and
mov
fs
mov
ja
dec
inc
ljmp
mov
push
into
shr
sbb
rolb
jnp
jl
fwait
inc
call
xchg
mov
daa
mov
adc
xchg
add
and
or
xchg
fnstsw
jp
pop
or
cmpsb
xchg
addr16
dec
stos
xchg
jecxz
lcall
lcall
xchg
mov
cmp
movsb
enter
xchg
inc
lcall
stc
int3
lret
cli
push
mov
sub
adc
lea
jne
lcall
jl
sti
jle
fwait
aaa
outsl
out
push
inc
fcoml
rorl
mov
push
movl
pop
out
add
adc
cmp
aad
and
mov
rorl
pop
mov
fstpt
ret
ret
in
sbb
pop
sti
adc
adc
jae
sahf
outsl
fldcw
jg
mov
std
jnp
or
lods
lret
mov
dec
int
and
push
cmpsb
addb
mov
sbb
inc
pop
arpl
xchg
and
shlb
enter
lcall
sub
or
mov
inc
push
stc
xchg
push
incl
sarb
sbb
sbb
popf
mov
or
jbe
mov
jno
push
ss
aad
sbbl
int3
es
pop
add
imul
mov
imul
xor
adc
ss
call
dec
xor
shlb
dec
lret
pusha
lret
add
aaa
jo
int3
dec
int
sub
int3
not
adc
xor
mov
inc
lods
adc
pop
jno
jge
in
or
push
outsl
xor
icebp
push
lods
in
mov
out
fsts
lret
lds
fdiv
dec
ljmp
sahf
lock
je
icebp
daa
in
jg
jne
or
out
inc
shrb
adc
mov
sbb
repnz
mov
sub
clc
shll
arpl
int
sub
cmp
mov
and
add
pop
mov
call
cwtl
pop
hlt
out
int
scas
mov
jns
in
ret
cmp
jle
cmp
cmp
cmpl
xor
clc
pop
outsl
inc
adc
cmp
mov
jns
ss
xor
pop
push
iret
daa
pushf
aad
decl
cmp
mov
ficoms
adc
xchg
lods
inc
mov
xor
repz
pextrw
movsl
arpl
sub
gs
add
enter
inc
add
leave
jo
shlb
xor
btr
add
inc
jmp
je
lds
dec
mov
cmp
lret
leave
cmp
cmpsb
mov
fisubrl
in
ret
sbb
loop
adc
jecxz
mov
mov
enter
push
shrl
sub
fsubr
faddl
cmpsb
nop
push
push
pop
adc
xchg
xchg
xor
xchg
std
sbb
cmp
inc
sbb
fstps
addl
mov
repnz
mov
cmp
cmp
push
push
leave
jl
in
cmpsb
stc
jne
add
adc
and
insl
call
push
xchg
fildl
stos
adc
pop
jo
std
xorb
hlt
push
stos
jno
mov
push
int3
adc
cmp
dec
test
mov
movsb
fadds
int3
sbb
push
test
push
jae
fcmove
outsb
arpl
cmpsb
into
push
es
test
dec
and
lds
xchg
xor
subl
popf
dec
dec
mov
sbb
int3
jg
leave
int3
loop
or
inc
fmull
pop
dec
sub
out
push
dec
stc
cmp
xchg
lahf
jnp
ss
cld
jae
sbb
clc
dec
mull
in
xchg
mov
mov
push
scas
sbb
aaa
scas
and
popa
lret
add
xor
mov
cld
mov
cmc
out
push
lods
adcb
lahf
fcomps
test
mov
jp
mov
adc
out
mov
cmp
lds
in
push
call
negb
pop
pop
and
fnstsw
fdiv
hlt
dec
out
gs
insb
xchg
dec
std
movsl
hlt
xchg
test
inc
sub
xor
dec
icebp
in
xchg
xorb
pop
fsub
sub
xchg
ss
xchg
jae
push
daa
dec
shll
arpl
mov
jl,pn
dec
dec
mov
icebp
lcall
out
test
adc
xor
das
mov
loope
xor
jno
js
fstp
sti
pop
cli
push
sbb
cli
dec
dec
push
mov
push
dec
sti
push
mov
ss
out
loope
imul
sub
aas
lahf
out
ss
mov
loope
cmp
cmp
and
ficoml
cmp
orb
mov
fcomps
aad
push
outsb
push
ror
adc
out
arpl
cmp
and
cltd
addl
jmp
jle
xor
int3
pop
in
add
xorb
repnz
out
xor
into
sbb
cmp
test
jge
inc
jo
mov
divb
pop
add
xchg
sub
loopne
pop
dec
popf
cmp
mov
xchg
mov
out
mov
out
clc
dec
xor
out
rclb
leave
pushf
clc
inc
inc
pop
dec
cmp
add
fsts
sbb
ret
loop
movsb
insl
and
sbb
es
pop
add
les
xor
dec
imul
outsb
std
sub
xchg
mov
loop
fidivs
cmc
ret
jns
mov
dec
mov
add
fwait
adc
loopne
dec
push
cs
aam
push
jo
adc
std
sti
pop
lcall
pop
ret
call
shrl
rol
lret
outsb
push
insb
jnp
insl
xchg
adc
mov
mov
fisttpll
fdivrl
sbb
and
mov
mov
lods
or
insl
fcoml
jl
ret
lret
das
aad
jo
subl
mov
stc
aas
ret
int
jg
xchg
lock
fstpl
sahf
pushf
sub
dec
int
icebp
pop
inc
aam
xor
pop
xor
mov
mov
mov
es
push
das
test
daa
sub
pop
in
clc
lret
inc
mov
lods
push
or
adc
sbb
sbb
sbb
or
lret
add
std
xchg
lds
sub
dec
and
mov
push
jnp
dec
cmpsb
adcl
sbb
imull
addr16
and
push
out
insl
mov
cmp
in
fstl
pusha
add
outsl
dec
aam
lret
xor
fucom
into
push
call
pushf
aas
dec
inc
imul
stc
testb
aam
fidivrs
into
enter
out
sbb
inc
cwtl
pop
out
and
jo
into
iret
or
push
mov
cmp
add
in
nop
mov
test
movsb
xor
popa
mov
fldcw
xor
stc
rclb
mov
push
enter
das
or
iret
imul
dec
add
or
loopne
nop
ja
mov
fsubrs
aam
sub
mov
sbb
jecxz
add
int3
xchg
mov
push
pop
stc
jae
movlhps
xchg
mov
daa
sarb
jne
hlt
add
mov
dec
adc
xchg
mov
dec
repz
cmp
push
adc
and
inc
push
and
ret
jno,pt
mov
and
mov
popl
sbbb
test
lahf
idivl
jo
jle
dec
add
arpl
mov
pop
push
fidivl
in
dec
loopne
test
mov
test
aaa
or
rcrb
dec
jbe
shl
sbb
mov
int3
jl
shlb
cmpsb
or
pop
pop
repz
or
bndldx
or
pop
sbb
jbe
push
or
mov
idivl
out
fs
jle
fildll
ljmp
pop
mov
or
les
dec
jle
hlt
icebp
xchg
dec
in
aad
lcall
pop
stc
pushf
nop
and
lods
in
dec
push
filds
jmp
jmp
ss
loopne
aam
and
daa
into
or
cmp
or
fisubl
icebp
add
jge
sti
jmp
filds
mov
pop
js
scas
jg
bound
push
stos
out
dec
mov
int3
adc
push
xchg
xor
cmp
mov
outsl
ljmp
cmp
inc
xor
jecxz
out
sub
sbb
mov
push
and
ss
inc
cld
fildll
dec
filds
fistpl
idivl
jo
add
aad
pushf
mov
sub
out
push
movsb
jnp
cwtl
popf
rcr
push
loope
icebp
add
inc
cmc
or
adc
xor
add
dec
cmpsl
xor
fimull
jmp
cmpsl
sarl
push
jl
and
mov
and
clc
inc
aam
mov
fldenv
es
xor
rolb
les
inc
cwtl
mov
ret
xchg
pop
pop
test
xchg
and
loopne
xchg
dec
cli
lret
jl
sub
push
repnz
insl
or
fsts
push
div
jmp
aam
cmp
pop
test
xchg
push
mov
je
dec
mov
or
lret
dec
scas
jae
adc
andl
sub
scas
outsb
in
mov
insb
pop
mov
mov
bound
ds
mov
cmc
stos
insb
mov
push
push
jne,pt
and
pop
fisubs
sbb
gs
ret
dec
int
adc
sbb
je
xchg
testl
or
out
mov
rcr
js
jo
mov
cmp
bound
mov
jns
in
sub
sub
lcall
bound
lea
imul
jbe
leave
subb
push
sbb
aaa
inc
scas
pop
inc
pop
xor
pop
push
popf
inc
cmpl
pop
loope
push
mov
lret
fwait
push
jle
outsl
and
adc
cmp
mov
xchg
insl
mov
and
cmp
and
mov
cmc
loope
fbstp
jp
xor
loopne
xor
add
sub
aam
in
xlat
lods
inc
dec
inc
iret
fdivl
sub
test
out
lods
stos
ss
pop
scas
sub
jno
xor
jecxz
pop
cwtl
push
xchg
mov
add
mov
jb
mov
xor
popf
xchg
fimull
movsl
push
dec
push
adc
ljmp
out
fs
rcrl
cwtl
xorl
movsb
iret
mov
and
sbb
add
in
xor
pushl
jmp
lock
fwait
imul
aaa
jge
xchg
addr16
insl
lods
mov
xor
xor
sub
out
cld
push
ljmp
push
push
cli
int
pusha
imul
mov
mov
mov
repnz
repnz
sbb
call
xchg
xor
inc
dec
fs
inc
stos
inc
cmpsb
std
push
mov
add
push
xor
mov
outsl
and
adc
push
stos
fidivs
adc
cmp
sub
xchg
mov
jb
inc
dec
daa
pushf
aad
fiadds
mov
xor
aas
hlt
xor
fsubrl
mov
mov
adc
inc
xchg
into
nop
cmpsb
repz
mov
or
loop
test
mov
lret
mov
test
inc
mov
mov
fcoml
es
addr16
or
addr16
mov
dec
sbb
into
cmp
cld
sarb
push
outsl
int
pusha
mov
cmpl
jecxz
mov
daa
arpl
xchg
jl
popl
pop
in
arpl
adc
push
adc
push
repnz
popf
ljmp
add
out
fstpl
lret
xchg
cmpsb
pop
sub
ret
add
push
cmc
jp
outsl
stos
lds
ret
js
push
movsb
adc
sti
sub
or
cmp
cmp
lock
push
lret
cld
pop
test
inc
or
aas
sbb
lds
cwtl
sbb
cmp
sbb
or
out
addr16
xlat
stos
inc
adc
into
cmpsl
js
inc
aaa
lahf
cmpsb
rcll
mov
or
gs
jo
push
das
sub
gs
push
jno
and
mov
ja
xor
insl
cli
enter
stc
test
adc
test
in
adcl
popf
xchg
sub
imul
or
mov
mov
inc
xchg
jg
mov
jmp
outsb
xchg
sbb
jo
or
push
add
cli
mov
and
sbb
xchg
int3
cmpl
cmp
sbb
fstl
cmp
xor
mov
push
pop
popf
mov
test
dec
adc
pop
or
lahf
xchg
cmpsl
rcll
ret
xchg
sbb
cmc
cmp
int3
aam
cmpl
fidivrs
mov
int
and
orb
and
insl
sub
inc
xor
or
xlat
pop
insl
repz
shrl
scas
sub
fidivrs
pop
int
cmpsl
sub
push
repz
and
cmp
rcrl
daa
call
cmpsb
cwtl
int
sbb
testl
mov
pop
clc
sbb
sub
or
into
pop
xor
jg
ds
test
mov
lock
push
jae
pop
hlt
pop
xchg
cmp
nop
divb
imul
fsubr
int
aas
mov
sbb
jnp
movsl
xchg
out
lcall
aas
sbb
add
out
jno
jl
mov
mov
adc
dec
add
mov
adc
gs
int
or
mov
cmp
rcll
repnz
call
mov
add
fmull
roll
in
cmp
xor
test
add
imul
dec
movsb
sub
fistpl
subb
ret
jmp
xchg
adcl
out
test
fldcw
xchg
dec
jge
mov
addr16
adc
add
mov
imul
cmp
adc
or
mov
enter
dec
mov
je
sahf
inc
ss
inc
mov
cmpsb
movsb
std
push
mov
in
add
iret
xor
pop
cwtl
fnstenv
js
mov
sbb
in
arpl
mov
cld
js
sbb
cmpsl
sbb
leave
mov
xor
cmp
ja
insb
xor
int3
cmp
ja
fwait
dec
push
das
hlt
ja
cmp
shlb
mov
dec
pop
and
ret
loope
dec
outsb
sub
fcmove
jge
ret
subb
cmc
adc
arpl
jge
fucomi
clc
notl
add
imul
inc
xchg
mov
fldcw
add
adc
ds
inc
sahf
or
inc
and
xchg
fisttpll
mov
aaa
sbb
out
and
mov
lahf
ja
adc
inc
je
push
arpl
cs
cmp
cld
ficomps
jp
hlt
cmp
sub
dec
stos
stos
sbb
ss
movsl
jne
fldenv
lahf
mov
push
mov
mov
push
inc
outsb
sub
arpl
imul
lret
ffreep
dec
adc
mov
mov
and
mov
shrl
and
jecxz
ja
push
jmp
fisttpll
pop
fnsave
sub
xchg
mov
add
xchg
mov
scas
add
mov
lcall
push
jbe
add
insb
test
jecxz
mov
rcrb
rclb
push
ffree
call
sbb
rcrl
sub
jp
inc
loopne
push
sub
sti
hlt
adc
mov
add
add
aam
lret
jno
rcrl
frstor
sbb
pop
inc
std
mov
rorb
idivl
push
movsb
push
inc
mov
mov
push
or
and
xchg
inc
mov
sbb
arpl
lods
cwtl
pusha
iret
cli
daa
or
xor
mov
into
mov
ds
mov
xchg
sub
psubsb
xor
idivb
mov
in
pop
dec
out
loop
movsl
das
sbb
xchg
mov
out
int
pop
mov
stos
movsl
in
push
aam
cmc
adc
or
push
jp
xchg
icebp
data16
or
les
sti
push
inc
xor
mov
mov
popa
imul
out
loopne
lock
daa
inc
cmp
or
pop
mov
add
sub
mov
jo
or
jo
ss
jne
shll
mov
push
push
push
mov
pusha
cmp
ja
clc
inc
movsl
xchg
mov
mov
xchg
pushf
xor
insb
xlat
mov
inc
and
out
jbe
adc
pop
int3
popf
ret
xchg
aaa
stos
pop
in
addr16
sbb
add
test
int3
push
or
dec
and
sub
insl
mov
or
dec
jb
jl
cmp
int
cld
test
mov
idivl
sti
dec
rclb
push
or
sbb
inc
push
aam
outsl
rcr
mov
add
xchg
adc
pop
rcrb
xchg
hlt
lahf
mov
lea
pop
inc
or
pop
hlt
mov
or
scas
xor
ss
add
cmpb
clc
pushf
push
xor
pop
hlt
pop
mov
xor
shrl
int
aas
scas
dec
lods
lahf
adc
sub
cmp
out
clc
ja
inc
loopne
push
sbb
mov
sub
ljmp
int
cwtl
mov
mov
sbb
add
xorb
or
fisttps
xchg
insb
sub
jge
testb
out
inc
pop
mov
pop
pop
stos
dec
subb
repz
testl
loope
out
lret
negl
sub
aad
ja
pop
fdivp
add
aad
pop
arpl
stc
imul
mov
pop
add
push
lds
or
jnp
in
xchg
push
push
fistpl
adc
add
enter
push
inc
pop
cltd
xor
cmp
xchg
and
xchg
clc
sub
mov
popa
push
cmp
je
subb
sub
enter
loope
fidivs
mov
mov
pop
add
pop
pop
xchg
sub
inc
mov
negl
sub
leave
aaa
lcall
rcr
sbb
lahf
cmpnleps
pushf
and
xor
mov
call
test
insl
outsl
push
mov
mov
popf
mov
mov
adc
shl
pusha
outsl
add
mov
ljmp
and
pop
sarl
movsb
rclb
and
dec
icebp
mov
xlat
scas
stos
int3
lret
imul
movsl
mov
cli
xlat
or
ret
mov
jne
andl
sub
or
faddl
add
rcl
imul
add
fsubrs
setg
test
adc
pop
and
mov
mov
add
xchg
stos
icebp
test
or
cmpsb
psubsw
and
mov
jle
push
push
in
jns
or
ds
fs
xchg
mov
mov
xchg
leave
nop
addr16
dec
sti
arpl
mov
inc
inc
cmp
xlat
sub
dec
icebp
xor
or
dec
testl
cwtl
push
pop
pop
js
cmpsl
xor
add
lret
dec
dec
sub
dec
sub
lods
shlb
pop
movntq
pop
inc
and
add
stos
push
popf
jl
arpl
inc
stos
rorl
or
call
mul
ret
divb
rcr
add
inc
mov
sbb
sbbb
push
pushf
cmp
jmp
xor
shlb
cltd
xchg
int3
imulb
cld
ret
ret
xlat
pop
ficompl
cmp
mov
out
mov
mov
fsubp
cmp
shlb
sub
mov
and
mov
xchg
adc
jns
popa
or
and
adc
arpl
das
cltd
mov
ds
lea
dec
xlat
aad
mov
cs
and
mov
rcll
inc
lods
add
popa
add
adc
jmp
fidivs
aaa
fmul
clc
mov
ljmp
jnp
sbbb
fldenv
xchg
and
es
pop
fstpt
lea
frstor
mov
lret
fwait
in
jns
insl
out
inc
push
adc
jp
add
aaa
mov
fisubl
out
xchg
test
ss
dec
fcmovu
sub
adc
cld
push
cli
pop
pop
pop
ds
fsts
adcl
pop
jge
xchg
popa
or
lods
scas
cs
push
les
push
inc
aaa
jnp
shrl
arpl
or
jecxz
fsubr
nop
call
mov
leave
mov
clc
lea
cwtl
daa
pop
fcomi
dec
mov
mov
jge
ja
aaa
loope
or
sub
insl
ret
cltd
lds
ja
fimull
or
fucom
jmp
lods
les
xor
push
dec
lods
pop
inc
adc
sub
mov
lods
in
aaa
or
orb
aam
testb
loopne
add
lcall
cmp
sub
clc
push
add
dec
cmp
pop
cld
cwtl
push
pusha
cmp
nop
xchg
outsl
ret
xchg
xor
mov
je
int3
cld
xchg
popa
sbb
xor
leave
jo
dec
daa
je
pop
ds
cwtl
movsl
loopne
je
test
xchg
fcomi
add
add
inc
fnsave
or
cmp
push
ficomps
cmp
xchg
jnp
jmp
loopne
orb
in
repz
les
hlt
lds
out
mov
sahf
and
mov
mov
mov
arpl
jne
jge
dec
inc
jmp
data16
xor
das
ljmp
push
sbb
cmpsl
and
and
or
or
mov
outsb
leave
mov
or
fwait
push
push
mov
mov
or
mov
data16
rorl
xchg
clc
sub
orb
cld
imul
sub
dec
rol
cmc
aad
loop
in
pushfw
push
js
or
cmp
sbb
roll
icebp
xlat
xchg
or
sub
and
icebp
dec
int3
dec
hlt
lea
lods
stos
add
or
push
dec
negl
xchg
mov
push
sbb
and
adc
pop
daa
add
into
adc
jecxz
ret
subl
cmpsl
sub
add
pop
movsl
inc
fwait
jmp
push
nop
sub
cmp
inc
cwtl
das
sahf
sbb
push
sti
mov
inc
movsl
inc
ror
lret
fisubrl
adc
les
mov
icebp
jnp
sub
int3
sbb
movsl
iret
jl
jp
cs
mov
ljmp
shl
jo
jb
cmp
sub
pop
out
pop
pop
imul
les
in
mov
jns
fldcw
das
cmovb
sub
xor
add
jmp
imul
sbb
add
or
movsb
icebp
clc
push
insb
inc
imull
dec
and
inc
sub
xchg
enter
jnp
push
out
test
xor
add
outsl
push
dec
js
xlat
fdivrl
jne
lods
jno
sub
and
lods
cmp
enterw
cmc
mov
insl
add
jle
pop
xchg
mov
push
shll
jge
shrl
and
loop
pusha
push
subl
push
fwait
scas
or
jno
movsl
push
pop
test
insb
add
out
mov
lds
inc
jmp
push
mov
xchg
inc
mov
mov
pusha
sub
add
add
inc
mov
fidivl
xchg
jmp
out
fistpl
scas
adc
mov
je
push
int3
push
imul
jbe
out
in
sub
sub
pop
lea
pop
es
sahf
test
enter
shrb
call
movsl
loop
xchg
test
es
push
js
adc
sbb
add
or
jge
cmp
pop
inc
and
add
mov
ljmp
sub
cmpsl
xchg
dec
pop
insb
sub
aaa
sbb
adcl
mov
sbb
int
cwtl
push
jne
popf
jmp
nop
xchg
inc
fildll
stos
mov
aas
ljmp
fdivl
pusha
inc
das
pop
dec
sub
inc
mov
pushf
arpl
jecxz
sbb
xor
and
fmuls
sub
stos
push
sarl
push
aad
lcall
adc
and
cmp
in
dec
aas
add
push
dec
shll
into
cmp
nop
ja
addr16
int3
mov
push
mov
mov
test
pop
jl
std
mov
sub
mov
pusha
mov
mov
or
pop
fidivl
cmp
rcrl
fimuls
les
mov
popf
adc
adc
xchg
movsl
lods
leave
sbb
xchg
pop
jmp
dec
mov
jne
and
pop
push
push
lahf
add
lods
test
cmpsb
es
jl
mov
jne
shrl
negl
fcoml
cli
data16
add
aam
inc
sub
insl
ret
cmc
in
jl
scas
fsub
jmp
js
fwait
mov
je
add
xor
adc
sbb
jle
inc
aas
push
jb
iret
mulb
pop
add
sub
test
xchg
push
mov
jno
mov
mov
inc
add
fisubl
jg
and
mov
dec
scas
rcl
stos
inc
outsl
mov
mov
icebp
adc
dec
xlat
cmp
adc
add
sbb
mov
ret
pop
repz
push
repz
mov
sbb
imul
xor
aam
fstpl
mov
or
mov
push
inc
add
aaa
cli
cmp
fmuls
outsl
mov
push
mov
add
pop
push
imul
pop
jae
adc
jns
cmp
jl
sub
out
push
out
xor
pop
arpl
push
lods
sbb
jecxz
mov
das
pop
cwtl
test
sub
pop
xor
fwait
sti
scas
push
inc
mov
sub
test
sbb
xchg
ljmp
push
xchg
in
cmp
mov
fisubs
sub
fistps
out
js
pop
cmc
arpl
out
inc
pop
xor
in
lahf
in
inc
shr
xlat
xor
sub
pop
rol
pushf
orb
mov
xchg
or
inc
sub
mov
mov
xor
jmp
mov
movsb
push
sbb
mov
jns
xchg
sbb
mov
push
sub
jns
xchg
addr16
test
fstl
cmpl
or
out
jbe
clc
or
mov
cmpl
imul
outsb
mov
ja
int
mov
cmp
out
or
jge
adc
jnp
jne
cltd
test
pop
clc
inc
pop
enter
leave
nop
cmp
jns
iret
stc
aad
out
mov
cld
imul
push
or
xlat
inc
fisubrl
push
push
std
sbb
ret
jne
pop
in
mov
in
push
pop
mov
push
icebp
das
in
shrl
push
insb
hlt
rorl
lret
pop
push
fidivrl
jae
test
push
push
adc
mov
decb
push
aad
mov
fldpi
jnp
pop
fwait
sbb
in
xor
jmp
pop
cmp
jmp
add
cmp
test
enter
push
pop
mov
loope
lods
sub
or
jne
jge
push
shrb
sbb
cltd
mov
push
lea
push
adc
pop
imul
mull
push
dec
jmp
mov
out
push
sbb
dec
scas
lea
das
sbb
into
mov
out
sub
arpl
adcb
orb
inc
mov
lods
fimuls
inc
inc
pop
sub
hlt
dec
cmp
adc
jecxz,pn
out
fldl
imul
mov
in
leave
popa
mov
subl
xchg
cmpsb
cs
ja
jae
insl
add
or
int
aam
cld
sub
aas
mov
in
jnp
mov
imul
addl
sbb
xchg
mov
inc
scas
xor
lods
dec
iret
and
xor
xor
lods
test
repnz
push
enter
fcoml
or
jnp
sub
mov
xlat
mov
cmp
inc
mov
lret
or
test
mov
addr16
mov
rorb
lea
aad
stos
in
outsl
in
jmp
rclb
js
ss
xor
xchg
pop
pop
std
imul
inc
sub
int3
pop
test
clc
push
dec
aad
inc
push
jp
outsl
dec
aad
sub
add
jmp
sub
incl
subl
aam
inc
sbb
out
sub
inc
mov
push
shll
add
inc
xor
cmp
dec
fnstenv
add
or
rcll
stos
or
out
ret
andl
cmc
pop
aam
ljmp
xchg
lds
cmpsb
push
cmp
fsubrl
mov
add
lea
in
adc
lods
push
mov
movsl
icebp
pop
stos
cmpsl
push
jecxz
jmp
test
cli
in
mov
inc
mov
outsl
cmp
sub
and
push
jno
aad
clc
jl
es
imul
pop
pushf
adc
xor
and
movsb
aam
lcall
aas
dec
xor
push
iret
xchg
xor
fisubrl
fstpl
mov
or
dec
cmc
dec
push
out
fcmovu
xor
add
out
pop
aam
dec
int3
addr16
inc
xor
cmpsb
push
xor
jne
stos
inc
cmpl
rcl
sbb
je
notb
fists
bound
mov
outsb
arpl
fwait
mov
imul
and
out
je
add
stos
sbb
shll
sub
jmp
adc
aaa
jne
movzbl
and
add
outsb
mov
xchg
push
xchg
inc
or
mov
ljmp
popf
fdivrl
mov
outsb
lret
mov
subb
pusha
pop
std
jbe
imul
push
pslld
jb
cmp
fistl
stos
in
push
adc
out
hlt
imull
mov
call
lcall
mov
jb
jae
dec
inc
test
lds
mov
push
mov
adc
sahf
dec
adc
jl
daa
xor
mov
aad
xor
fs
xor
sub
or
addl
loope
lret
mov
fstpt
xor
loopne
jbe
movsb
test
or
lock
je,pt
not
push
movsb
xchg
int3
or
jnp
jnp
xor
cmpb
jmp
push
in
inc
cli
lock
sahf
pop
je
ss
xchg
cld
push
mov
test
repz
pop
les
cmp
arpl
ljmp
inc
add
popf
mov
pop
push
cmpsb
jbe
sub
loop
shlb
add
imul
test
mov
pop
pop
cmpsb
mov
lret
xchg
pop
ret
iret
mov
mov
sbb
push
stos
cmp
mov
negb
lret
jl
dec
and
fildll
addr16
leave
push
movhps
sub
add
jl
inc
sbb
repz
inc
repnz
inc
push
dec
push
sub
sub
mov
jmp
sbb
mov
xor
inc
pop
test
repz
std
jl
mov
sti
imul
imul
xchg
ss
and
inc
dec
in
testl
inc
add
inc
xchg
pop
dec
enter
pop
clc
xor
test
repnz
shr
sahf
or
dec
lods
jne
mov
and
push
nop
popf
adc
mov
test
dec
repz
sub
adcb
int3
mov
les
sbb
out
std
out
cmpb
ficoms
test
inc
notl
inc
cmpsl
xchg
xor
dec
or
js
push
push
lea
or
leave
xchg
mov
shll
mov
cmpsb
fbld
mov
mov
ljmp
ret
mov
into
jle
cltd
test
hlt
rcl
in
cmpsl
div
xor
lods
aaa
repnz
aaa
mov
stc
sbb
sbb
loope
mov
cmp
mov
xchg
lods
nop
gs
cmp
out
dec
icebp
jmp
xor
mov
loopne
popf
add
pushf
inc
push
cld
sbb
push
outsb
aam
and
flds
cmp
xlat
mov
add
insl
and
jns
fs
int3
ss
mov
push
arpl
addr16
subb
jo
test
dec
cmp
popf
dec
adc
scas
push
shrb
xlat
xor
mov
adc
xor
dec
enter
xchg
cwtl
stos
inc
inc
push
cmp
lahf
inc
add
push
xor
nop
push
data16
mov
inc
adc
push
xchg
sub
jmp
ja
jp
xchg
in
mov
nop
outsb
rcll
dec
sbb
xchg
mov
lds
and
out
leave
outsb
dec
cmp
xchg
shll
fcompl
stos
cmp
sar
fisttpll
gs
inc
rorb
adc
movsl
inc
icebp
test
js,pt
inc
arpl
push
mov
in
lds
out
pop
pop
mov
loope
push
jnp
push
ret
jge
push
xchg
xchg
sub
push
test
shrl
mov
mov
pop
push
xor
pop
fidivl
xor
icebp
cmc
pop
jmp
dec
adc
scas
les
cltd
mov
jb
push
daa
jle
or
lods
jmp
loope
decb
inc
xchg
cmc
push
popa
sbb
cli
dec
movsl
push
out
leave
mov
imul
xchg
jp
pop
aaa
popa
enter
loop
sbb
in
mov
lods
push
sti
out
outsb
add
jmp
aad
xchg
jmp
adc
fisttps
sti
mov
fstpl
outsl
js
add
test
jbe
into
jnp
inc
jo
dec
aam
mov
push
mov
or
pop
shr
xchg
movsb
imull
xor
mov
int3
not
xchg
xor
jle
rorb
jmp
dec
aad
sbb
lea
pop
inc
jg
sarb
jb
adc
xchg
or
jecxz
rolb
in
xchg
fisttps
pop
mov
inc
enter
aas
mov
cltd
push
sbb
or
push
nop
imul
mov
push
mov
call
in
or
jge
lea
ret
pop
mov
int3
xor
or
out
push
mov
aad
xchg
jmp
nop
sbb
cwtl
jl
sbb
shl
sub
subb
and
ret
test
xlat
xor
scas
or
add
adc
xor
sub
sarb
and
rcrl
add
or
adc
lds
inc
and
imul
jae
repnz
and
mov
adc
or
mov
bnd
jle
xchg
gs
jge
mov
rcrb
sarl
clc
popf
xor
jg
xor
push
and
mov
mov
push
sahf
mov
jb
xlat
mov
dec
dec
lahf
xor
ret
jbe
cmp
sbb
push
sti
push
or
das
mov
lds
je
cwtl
mov
jne
sub
outsb
and
xchg
jge
jnp
add
push
pop
pop
sbbb
dec
dec
imul
addr16
lret
sbb
aad
lods
xor
aas
add
sbb
jg
pop
cmp
cmp
sbb
push
mov
jae
push
jbe
sub
lret
imul
pop
xchg
sbb
js
mov
test
lret
mov
dec
adc
cld
out
cmp
inc
mov
in
xchg
xor
add
inc
arpl
pop
jmp
ss
or
mov
stos
push
fdivl
fistl
and
arpl
add
fwait
cmp
and
xchg
in
mov
call
push
out
and
addr16
ret
leave
in
xchg
daa
pop
mov
test
jb
push
popl
outsl
in
xchg
arpl
jmp
inc
sub
iret
pop
loopne
xor
dec
ljmp
sarl
call
xchg
loopne
fisttpll
dec
cmp
adc
jle
orb
adc
enter
in
loopne
sbb
jecxz
jb
lret
jge
ret
testl
mov
jle
test
pop
sub
push
xor
rcl
mov
mov
fldenv
xchg
xor
inc
loopne
enter
fsubrp
or
hlt
stos
stc
jnp
imul
lret
mov
push
cs
sub
dec
ficoms
inc
int
and
rcr
scas
xchg
inc
repz
lea
hlt
pop
add
lea
fistl
lods
cs
test
adc
xlat
imul
and
adc
out
bound
or
dec
jmp
imul
sbb
push
jle
fwait
test
fstpt
mov
je
inc
push
lret
sahf
inc
and
mov
stos
mov
jae
nop
or
xchg
mov
ret
scas
gs
xchg
clc
int3
dec
mov
negl
cmc
jns
icebp
stc
push
adcl
aam
mov
rcll
xchg
jbe
ljmp
mov
lret
xorl
loopne
inc
arpl
push
xor
repnz
mov
in
push
unpckhps
aam
cmpsl
xchg
aam
and
test
cmp
adc
xor
cmc
btc
mov
mov
sbb
and
fiadds
push
add
ds
and
inc
xchg
or
aaa
add
mov
movsl
mov
fwait
xchg
dec
xlat
shll
xchg
inc
push
jecxz
mov
test
inc
mov
jae
add
dec
sti
mov
int
cwtl
loop
adcb
andb
or
iret
cmp
add
repnz
out
inc
testb
ret
push
push
adc
cmp
or
clc
loope
out
stos
mov
add
sub
add
lds
clc
loopne
inc
js
adc
idivb
out
dec
jb
mov
pusha
jmp
cmp
out
rcrl
pop
decl
sub
mov
mov
cs
jmp
lock
imul
dec
xor
or
dec
divl
dec
mov
adc
ret
push
iret
test
call
in
test
push
dec
xchg
jno
pop
xchg
out
imul
jg
inc
and
cmp
dec
mov
andb
repnz
xchg
pop
mov
add
and
xchg
fidivrl
fstpt
inc
fwait
pop
leave
lds
inc
ret
orb
lcall
cmp
inc
imul
xor
jae
inc
out
test
arpl
xchg
mov
adc
lret
add
bnd
mov
mov
cmpsl
add
jge
jb
xchg
shufps
das
loopne
sarl
dec
sbb
decb
jo
js
dec
cltd
ja
pop
dec
push
ja
rol
outsb
das
out
inc
clc
stos
popa
jmp
xchg
dec
insb
mov
push
repz
fisttps
movsl
adc
popf
ror
push
mov
inc
aad
push
cli
test
cwtl
pop
and
jno
mov
mov
and
cmp
lcall
ret
dec
out
je
aad
addr16
xlat
jnp
add
adc
int
xorb
pop
and
push
mov
loope
adc
gs
repnz
ja
arpl
and
lea
push
int
push
mov
lahf
push
test
xor
jg
in
and
ja
lods
xchg
addr16
pop
lods
cld
out
adc
sbb
imull
push
pop
push
jmp
jecxz
into
mov
or
xchg
pop
iret
mov
mov
ficomps
cwtl
into
inc
iret
cmpl
in
mov
jns
jge
aad
aas
test
push
cmc
ret
imul
inc
notl
test
testb
cmpsb
fwait
jmp
stc
inc
xlat
pop
and
das
js
sub
sbbl
insb
jmp
cmp
aam
ret
cmc
sub
add
lock
imul
adc
pop
sbb
push
sbb
js
xchg
loop
sub
std
sub
xor
inc
jnp
sbbl
xchg
testb
fsubrs
mov
arpl
xchg
pushf
in
xor
mov
push
jns
ror
and
js
ss
les
jbe
dec
mov
jecxz
pusha
push
cltd
cmp
popa
fcom
push
test
cmp
cmpsl
sbb
xor
jp
or
test
push
jno
sub
jecxz
sti
inc
fimuls
je
adc
mov
dec
scas
lret
ficoml
std
aaa
mov
jmp
sub
jnp
fisttpll
out
data16
fwait
stos
sbb
loope
sbb
movb
xlat
aad
or
jg
adc
add
ror
in
xchg
xor
ror
gs
and
repnz
xchg
cmp
insb
sahf
or
cmp
mov
test
test
std
pop
inc
xor
ret
jns
mov
insb
ds
pop
mov
sbb
mov
mov
test
dec
popa
mov
mov
stos
aad
iret
xor
out
iret
adc
imull
in
jmp
pop
inc
dec
jp
loope
cmp
in
dec
xchg
or
scas
mov
sub
mov
push
jae
je
lds
push
push
test
push
and
and
cmpsl
dec
sub
inc
loopne
insb
sbb
bound
arpl
mov
in
jno
cmp
ljmp
int3
enter
cmp
repz
mov
mov
mov
ds
sbb
imul
xchg
stc
pop
test
mov
mov
dec
repz
sub
xlat
fisttpll
sbb
pop
add
xchg
add
or
mull
lret
mov
shr
enter
out
je
sbb
lret
cld
jns
insb
mov
jb
fcomps
xchg
mov
jnp
mov
out
adc
pop
and
aad
lods
dec
in
ljmp
ret
cmp
movsl
jnp,pt
cli
and
jmp
fstps
pusha
mov
lret
sub
jbe
icebp
arpl
jmp
stos
and
fadd
fidivl
scas
setne
mov
shrb
cs
xor
callw
sub
out
inc
cwtl
cmpsl
xchg
mov
lea
xchg
push
pop
inc
rclb
loop
jo
push
push
cmp
cmp
ja
pop
inc
and
icebp
stos
and
cmp
adc
xor
push
xor
pop
inc
pop
ds
or
sbb
mov
ret
lret
xchg
jns
pop
jle
xor
shll
jg
inc
push
pushf
insb
sub
push
push
ljmp
or
int
mov
fxch
leave
lret
pop
pop
int
mov
fstpt
rorb
pop
lret
adc
fisubs
mov
jne
sbb
inc
xchg
jns
pop
hlt
jbe
iret
push
mov
ret
or
mov
outsb
fnstsw
or
mov
or
std
sbb
and
clc
dec
scas
inc
dec
dec
das
xor
mov
and
in
adc
std
inc
movsl
mov
lret
xadd
mov
daa
xchg
ja
leave
and
repnz
xchg
xor
int
or
ss
mov
jns
nop
xchg
daa
jns
or
jae
jb
aaa
into
sti
jl
sbb
lret
sahf
iret
loop
add
es
div
push
imul
lret
rcrl
leave
sub
mov
or
es
push
fs
jle
pop
lret
inc
mov
test
mov
out
imul
fbld
orb
repz
enter
xor
outsb
jno
ja
psubw
mov
loop
cwtl
out
fwait
je
xchg
push
and
out
ss
mov
sub
sbb
out
xchg
jns
inc
mov
add
xchg
mov
add
dec
pusha
push
popf
out
and
inc
pop
sub
outsl
push
and
es
fdivrl
adc
xor
lock
ja
popf
aam
xor
outsl
inc
sub
cmp
mov
xchg
xchg
jo
int
icebp
inc
mov
jo
mov
mov
sbb
lds
arpl
jno
icebp
aas
popa
jb
popa
or
imul
daa
xchg
mov
mov
and
cli
mov
or
jmp
lea
insl
lods
dec
pop
ja
add
test
jecxz
lds
daa
mov
insl
pop
pop
cmp
cwtl
inc
lret
cmpsb
cmp
xlat
inc
pop
xor
clc
in
add
cs
in
push
lea
cmp
loopne
cmpsl
dec
xor
fdivl
xchg
lcall
aas
push
lods
and
fnstcw
cmc
mov
std
std
adc
movsl
jg
sbb
lret
in
mov
mov
call
cld
loopne
push
mov
mov
mov
adc
and
jp
sbb
mov
loopne
pop
nop
in
int
loope
inc
ret
fwait
push
sbb
cmp
cmp
inc
xor
push
in
lcall
pop
ss
insb
mov
scas
or
imul
movb
stc
fldenv
pop
ficompl
into
xlat
iret
inc
inc
pop
inc
inc
sahf
lock
push
sbb
pusha
test
pop
mov
into
lods
dec
mov
ret
rcr
insl
idivb
and
and
push
xor
sub
xor
or
je
scas
and
xchg
ja
push
mov
orl
fwait
sbb
adc
sub
mov
stc
dec
iret
xor
daa
sub
out
js
push
or
insb
or
rclb
das
dec
mov
lcall
mov
dec
imul
cmc
movsl
sbb
cmp
mov
dec
xchg
clc
jno
inc
nop
mov
pop
aas
ja
jns
in
xchg
and
or
fldenv
dec
int3
inc
aas
mov
mov
add
lods
and
test
clc
mov
xor
sahf
mov
cmp
cmp
call
mov
add
cmp
xchg
lcall
add
ss
cld
adc
adc
lret
cmpsl
sbb
leave
insl
push
xor
imul
adc
ffreep
jo
call
xchg
mov
and
add
adc
mov
xor
test
out
ljmp
mov
mov
dec
enter
adc
mov
cwtl
jo
push
je
sub
in
mov
shl
mov
cwtl
idivl
mov
clc
loope
or
cmpsb
push
popa
pop
std
xchg
out
rcl
loopne
mov
push
fcmovnbe
push
iret
sub
pop
lcall
pop
dec
jl
dec
pop
ss
inc
lahf
aam
cmc
ficomps
mov
adc
inc
xor
or
mov
jae
jmp
aad
loopne
or
mov
jnp
out
cwtl
push
in
push
or
xor
sbb
popa
ss
add
inc
lahf
cmp
outsl
dec
ret
push
add
sbb
hlt
decl
xchg
leave
pop
out
sbb
mov
cmp
loope
and
das
mov
jne
popa
fidivl
xchg
fsubp
dec
and
or
jne
inc
pop
in
xor
aaa
mov
icebp
gs
or
jecxz
jnp
test
jne
inc
das
sbb
mov
inc
int
arpl
dec
roll
push
add
aas
mov
loopne
inc
jecxz
xchg
faddl
lret
xchg
movsl
insb
sbb
addl
repnz
scas
xchg
sbb
push
lods
cmp
xor
test
cli
scas
lcall
jge
fisttpll
dec
sbb
js
push
loope
ret
and
lods
dec
daa
xchg
add
lcall
sbb
inc
and
pusha
cmpsl
test
out
xchg
inc
and
jno
rorl
mov
and
dec
dec
scas
pop
js
lret
into
fiadds
and
ljmp
and
test
sub
or
clc
xlat
adc
mov
stc
xor
xchg
push
pushf
mov
lret
dec
fwait
mov
lret
addr16
sbb
lock
into
push
andl
xchg
push
sahf
inc
add
xchg
movb
outsl
inc
push
xchg
xchg
rorb
loope
jnp
add
pop
mov
xor
pop
sub
mov
addl
pop
push
mov
popl
mov
push
mov
add
add
xchg
pop
mov
push
mov
add
add
xchg
pop
jmp
rcrl
cmp
mov
adc
clc
scas
or
lds
cli
scas
or
add
add
add
and
pop
mov
addl
inc
push
ret
bnd
lea
dec
jo
inc
testb
push
pop
movl
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
add
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
shlb
clc
call
call
or
xor
fwait
rol
mov
push
inc
mov
and
call
mov
jmp
neg
pop
daa
push
jno
repnz
enter
dec
test
addr16
rolb
jnp
daa
mov
sub
insb
or
pop
or
ret
cmp
jmp
mov
cmp
scas
das
dec
shr
sub
mov
imul
or
cmp
ja
inc
enter
dec
insb
mov
aad
movsl
stos
repz
mov
arpl
loop
xchg
cwtl
arpl
or
sbb
sub
rcrl
inc
jae
fsubs
sub
inc
cli
lods
mov
jle
add
mov
and
adc
cmpsb
pop
mov
mov
cmp
and
pop
test
mov
fbld
xchg
mov
repnz
fisubl
fldt
jg
ljmp
popf
jp
cmp
jge
call
mov
inc
in
sub
jg
xchg
lods
xlat
ljmp
ret
or
xchg
int3
iret
ljmp
or
jo
in
outsl
std
pop
aad
xor
pop
xor
sbb
and
cmp
xor
sbb
mov
sbb
xchg
mov
mov
in
dec
jl
inc
xchg
jae
push
movsb
pop
mov
add
mov
mov
mov
and
inc
in
stos
push
pusha
push
jecxz
jge
vmwrite
mov
mov
sbb
sbbl
fwait
xor
push
jp
loope
jp
jae
pop
jmp
adc
rorb
loope
xchg
cmp
lods
int
out
xor
xor
sbb
lahf
jge
add
xchg
jmp
lahf
xchg
iret
scas
ds
push
lea
lahf
mov
bound
pop
aas
js
rcrl
call
sahf
mov
sub
dec
jmp
sub
scas
pop
adc
sub
mov
pop
add
jb
jg
insb
test
ret
in
mov
pop
xchg
pop
jmp
cmp
ret
in
xlat
fstps
bound
pop
xchg
adc
jb
cmp
cmp
int
cltd
sbb
data16
pop
jmp
fisttpll
sbb
fiaddl
pusha
sbb
loope
pop
push
cmp
in
sbb
sbbl
fwait
xor
push
jp
loope
jp
sbb
and
cmpsl
dec
sahf
lods
or
out
inc
add
leave
adc
mov
stos
and
cli
int3
cmp
sahf
pushf
xor
jo
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
and
mov
mov
mov
mov
xor
daa
xor
mov
and
enter
jo
jo
int3
cmc
repnz
mov
xor
stc
js
in
mov
clc
jbe
add
addr16
pushf
dec
lock
insl
cli
pop
dec
mov
sub
inc
iret
jmp
in
push
mov
ja
cmp
sbb
cli
pop
and
pop
sbb
push
mov
xor
es
nop
xor
imul
xchg
jmp
je
inc
or
movsl
mov
sbb
fimull
sub
insl
es
jo
shrb
jns
pop
xchg
insb
scas
sub
test
mov
lea
movsb
sub
mov
and
pushf
xor
out
or
pop
mov
xor
std
negl
es
je
mov
divl
push
add
fnstcw
mov
and
dec
cmp
popf
mov
add
mov
sub
mov
popf
mov
pop
mov
daa
pop
xchg
mov
mov
jo
loope
mov
add
and
sub
mov
add
and
dec
lods
lods
jo
dec
aaa
jo
mov
lea
movsb
mov
shll
pusha
iret
es
push
and
xchg
push
enter
lahf
insb
cmc
shrb
sbb
sbb
gs
mov
movsl
mov
pop
out
jg
push
sub
movsb
mov
enter
daa
inc
push
mov
xor
mov
mov
roll
xor
inc
add
movsl
mov
push
aam
mulb
inc
aas
cmc
mov
adc
arpl
cmp
and
popa
or
mov
push
mov
daa
scas
xchg
mov
mov
pop
mov
movsb
push
sub
rolb
jne
fcomi
push
mov
popf
mov
pop
mov
daa
jbe
mov
mov
inc
mov
bound
add
sub
mov
adc
cwtl
jmp
jb
cli
ljmp
mov
mov
push
dec
movsl
repz
mov
push
out
test
out
loope
ss
movsl
mov
idivb
subl
insl
cmp
inc
or
cmc
lock
pop
xchg
dec
pop
fnsave
call
mov
xor
mov
inc
sbb
xor
test
test
mov
clc
mov
shll
insb
mov
out
mov
jmp
add
lahf
insb
add
mov
jmp
andl
sahf
lods
xor
out
je
out
mulb
dec
jge
or
mov
lret
jnp
hlt
loop
cmp
popf
mov
add
mov
test
jo
jnp
mov
inc
pop
ret
mov
add
lea
mov
push
push
jp
add
pop
lea
jo
mov
add
movsl
mov
mov
cmp
and
push
sub
adc
sub
or
add
daa
je
add
jb
push
mov
insb
lea
mov
lahf
insb
scas
sub
push
negb
daa
ja
sarb
movsl
aas
jns
mov
inc
pop
mov
push
mov
mov
mov
aas
dec
and
xchg
push
insl
cmp
or
mov
xor
mov
add
int
repz
inc
push
rolb
cmpsl
mov
inc
push
outsb
inc
icebp
sbb
inc
pop
outsl
movsl
mov
xor
xlat
push
xchg
pop
sbb
outsl
insl
push
adc
movsl
mov
xor
rclb
test
out
int
xor
mov
jo
aas
sbb
fstl
icebp
sub
jl
cmp
into
mov
xor
mov
sahf
pushl
jge
test
pop
add
pusha
rol
clc
push
cmpsb
push
icebp
popa
pop
ds
add
sub
dec
popf
mov
mov
jle
jecxz
jl
jo,pt
mov
add
hlt
dec
mov
xor
pop
test
ds
mov
mov
mull
mov
pop
test
imull
pushf
xchg
test
adc
mov
stos
xchg
inc
cmc
sub
sub
outsl
movsl
mov
jle
fninit
pop
xor
dec
addl
lods
sub
or
test
repnz
movsb
lahf
insb
cmc
pop
test
aam
push
sbb
jecxz
outsl
movsl
mov
dec
mov
movsb
adc
mov
stos
scas
lahf
insb
push
sub
jle
or
scas
xor
jmp
mov
jmp
aad
cmp
movsl
mov
cwtl
sbb
mov
repnz
cmc
cmc
mov
out
fwait
inc
in
push
add
mov
cld
out
loope
mov
mov
enter
imul
jo
invlpg
lcall
sbb
push
push
pop
out
jg
sub
popf
and
jo
mov
popa
scas
int3
add
shrb
push
sarb
pop
cmc
shlb
or
add
jo
loope
test
test
je
roll
xor
mov
xor
daa
ret
push
mov
mov
push
sub
jo
mov
and
mov
xor
pop
cmc
sbb
xor
cli
inc
mov
cmc
shlb
hlt
test
pop
sub
jmp
jge
mov
push
cld
call
inc
mov
sbb
mov
bound
push
dec
and
in
mov
gs
xor
cmp
in
xor
jbe
adc
jbe
push
dec
scas
outsl
xchg
lods
adc
pop
mov
or
adc
pusha
push
setne
shl
xor
insb
push
repnz
xor
xchg
das
sub
scas
jge
xor
fwait
mov
pop
sub
shl
push
stos
out
and
push
xor
add
aas
cmpsl
cmp
and
in
jno
insl
scas
jbe
adc
jbe
push
push
sub
data16
add
popf
jbe
push
aas
sub
daa
test
jbe
jg
hlt
out
inc
sub
ljmp
push
lahf
xor
pusha
push
jbe
mov
inc
lcall
mov
mov
pop
mov
in
mov
push
dec
ret
enter
pusha
xor
jl
mov
xor
pusha
out
sub
out
xchg
adc
jno
jbe
xchg
xor
push
jbe
lcall
pusha
imul
imul
xchg
adc
sbb
add
dec
pop
mov
push
fsubl
iret
mov
push
into
dec
movsl
mov
mov
dec
or
push
fwait
mov
iret
mov
cmpl
pusha
icebp
mov
pop
dec
movsl
in
insb
incl
mov
jecxz
jbe
push
test
cmpl
pusha
icebp
mov
pop
inc
shr
insb
incl
mov
push
jbe
dec
fnsave
jmp
xor
pusha
test
lods
jbe
adc
jbe
push
pop
sub
data16
add
lahf
jbe
push
inc
sub
movsb
movsb
int3
test
sti
or
sarl
in
insb
outsl
mov
pop
mov
xor
xor
cltd
cmp
stos
jecxz
cltd
pusha
out
xor
hlt
mov
cmp
xor
enter
pusha
dec
fdivl
jmp
xor
pusha
stos
test
outsl
mov
sbb
lcall
push
ret
pusha
push
mov
out
xor
pusha
in
add
fs
aaa
lea
and
fstps
mov
andl
push
sub
cwtl
sub
pusha
push
push
cmpsb
sub
push
adc
cmp
movsb
inc
cmp
mov
inc
cmp
mov
jecxz
sub
fwait
sub
pusha
push
push
movsl
sub
push
mov
inc
cmp
mov
ss
push
xor
sbbb
mov
add
xchg
dec
rcrb
call
jbe
adc
jbe
push
pop
sub
data16
add
dec
jbe
push
inc
sub
fisubrl
xchg
xor
mov
cmp
push
into
out
lods
pop
fstps
scas
jbe
adc
jbe
push
pop
sub
data16
add
dec
jbe
push
inc
sub
jmp
xor
pusha
mov
mov
pop
push
jbe
push
mov
add
mov
je
push
sub
xchg
sub
pusha
push
push
mov
inc
cmp
movsb
inc
cmp
mov
popa
xchg
sub
xor
pusha
mov
jbe
push
pop
dec
shl
add
add
clc
cmp
and
mov
push
jbe
push
xchg
or
icebp
clc
fidivl
insb
adc
sub
pusha
push
fbstp
mov
pop
ljmp
mov
out
rorl
mov
cmp
adc
mov
imul
fs
mov
mov
or
jno
mov
sti
fisttps
xchg
mov
pusha
push
adc
repnz
repnz
lahf
rclb
insb
push
mov
mov
xor
jnp
or
sarl
push
repnz
dec
pop
mov
fdivrl
stc
mov
les
arpl
mov
dec
inc
mov
push
repnz
dec
pop
mov
fsubl
les
in
es
sub
push
dec
out
pop
lahf
and
repnz
push
jbe
imul
mov
in
push
insl
jecxz
jmp
cwtl
mov
insl
iret
mov
push
aaa
cs
push
push
jb
scas
je
xchg
xor
push
add
pop
mov
cmp
pusha
sub
inc
dec
pop
fs
mov
call
pop
out
push
loope
decl
push
out
dec
adc
adc
aaa
inc
jb
scas
outsl
mov
jecxz
adc
push
jbe
push
jbe
pushf
iret
roll
mov
in
mov
icebp
mov
add
jo
mov
mov
mov
jp
jbe
sbb
add
dec
in
insb
repz
or
push
repnz
push
jbe
addr16
push
outsb
das
xor
pusha
push
jbe
push
or
mov
xor
mov
pop
push
pop
dec
in
insb
in
mov
mov
out
dec
in
insb
sub
jbe
in
mov
in
mov
push
push
jmp
adc
les
mov
in
arpl
insl
iret
xor
adc
aaa
pop
push
xchg
dec
in
insb
in
mov
mov
enter
sub
iret
aaa
lea
repnz
mov
and
imul
imul
inc
xchg
adcb
aaa
test
mov
mov
je
call
dec
in
insb
repz
mov
jmp
jno
imul
pusha
push
mov
inc
mov
lret
push
loop
flds
out
jecxz
fstps
aas
lea
add
mov
add
repnz
or
call
aaa
jbe
cmp
mov
insb
xor
pusha
sub
pop
xor
adc
jbe
push
lods
jp
cld
js
push
cli
add
in
insl
cmp
push
cmp
sub
jns
repnz
mov
xchg
xor
pusha
jmp
aaa
jbe
cmp
mov
insb
xor
pusha
sub
pop
loop
pusha
adc
jbe
push
lods
imul
pop
push
jbe
push
or
sub
imul
pusha
push
cli
add
pusha
push
mov
out
jbe
push
mov
loopne
xor
and
xor
in
mov
or
lods
push
adc
push
adc
aaa
or
sub
adc
test
out
dec
adc
jbe
push
das
js
fistps
mov
lahf
sub
mov
jbe
addr16
xor
leave
inc
imul
mov
insl
push
dec
mov
dec
pop
pusha
push
std
fsts
fbld
mov
dec
xor
dec
jmp
mov
and
lret
stc
pop
aaa
popf
inc
mov
cli
adc
cmp
aas
jbe
push
std
dec
jge
stos
jb
rorb
fwait
call
mov
xor
testl
cmp
call
ret
lods
xor
xor
mov
cmp
dec
insb
jnp
gs
mov
lock
sbb
test
lea
hlt
lret
push
loop
inc
mov
mov
cmp
mov
cmp
sbb
fwait
dec
push
adc
ljmp
into
pop
mov
xchg
adc
out
xor
inc
xchg
mov
jmp
in
in
xchg
push
adc
jl
and
pop
jge
cmp
inc
pop
pop
ja
and
pop
imul
jmp
pop
adc
and
pop
rdpmc
daa
xchg
jmp
pop
inc
ja
and
pop
and
jmp
pop
jnp
and
pop
daa
dec
daa
xchg
jmp
pop
dec
ja
and
pop
mov
add
ja
and
sahf
cmpsl
sub
xor
shl
and
std
push
in
cmc
pop
popf
jl
or
aad
aad
pop
unpcklps
sbb
mov
xor
inc
cwtl
pop
adc
fsub
adc
mov
dec
mov
dec
sbb
sahf
sbb
push
or
clc
lcall
int
mov
sbb
or
or
inc
and
sub
lea
add
jge
pop
mov
xor
jp
push
cmp
dec
xchg
xchg
mov
or
xchg
or
jae
adc
data16
jp
repnz
jl
pop
lods
lahf
add
or
aas
mov
jle
add
sub
xchg
cwtl
push
fdivrs
mov
rep
pop
sub
inc
and
iret
inc
out
fnstcw
or
repnz
sub
clc
aaa
jle
add
and
cmp
loope
mov
cltd
fadds
push
mov
adc
pop
out
sbb
enter
or
pushf
push
je
sbb
cmc
test
mov
ja
jb
lret
xchg
inc
pop
decb
es
fsubrl
jmp
xchg
call
mov
shl
in
decb
ds
dec
test
repnz
popa
cmpsb
ja
subl
push
js
popa
pop
dec
pop
inc
pop
pushf
call
sahf
in
inc
test
lds
inc
xchg
inc
outsl
mov
and
mov
popf
in
es
and
les
sbb
jmp
cmp
adc
adc
xor
jno
pushf
push
and
push
cmp
adc
xchg
lret
lds
js
cmp
xchg
in
cmp
cli
cmp
inc
mov
mov
pop
pop
inc
rcr
fwait
cmp
idiv
in
imul
movswl
mov
push
inc
stos
and
roll
inc
inc
mov
rol
dec
loope
pop
cmp
inc
xor
test
adc
jbe
jbe
and
cmp
lock
testl
or
inc
pop
les
jo
addr16
cmc
fstpl
into
sbb
mov
mov
and
or
fdivrl
pop
xchg
sbb
andb
xchg
test
cld
jae
mov
icebp
in
push
aas
push
sub
xchg
mov
mov
push
xchg
mov
mov
aas
add
dec
jnp
cmp
or
imul
jnp
stos
rorl
out
pop
mov
jo
in
sar
dec
les
js
and
adc
inc
arpl
int
dec
test
and
lahf
clc
flds
add
ret
mov
mov
xor
fists
lret
mov
pusha
ficoml
add
loopne
negb
adc
pop
pop
push
or
bnd
int3
jae
cs
in
dec
in
xchg
icebp
adc
and
sub
and
das
and
or
push
xor
and
lods
cld
daa
sub
in
pop
repnz
add
jb
cmpsl
inc
roll
mov
pop
pop
mov
aaa
cmpsl
mov
xlat
mov
les
inc
mov
lret
add
fmuls
inc
dec
mov
xor
sbb
sub
adc
push
inc
popa
sbb
pop
push
test
sahf
mov
dec
jmp
test
push
ficoml
das
cmp
lret
arpl
int3
es
jle
aas
cs
popa
arpl
cmp
sbb
or
imul
out
or
aad
vunpckhps
out
popf
sub
jecxz
ret
push
push
stos
sahf
mov
out
out
imul
in
icebp
clc
mov
ror
test
sub
mov
cmp
jecxz
test
ja
jmp
add
test
jno
clc
mov
jmp
ror
adc
pop
mov
jne
inc
pushf
fstps
lds
stc
push
cmp
ss
mov
mov
jl
jns
in
adc
xor
pushf
fbstp
inc
fcomps
mov
push
adc
out
fistpl
xchg
lea
push
adc
lods
inc
adc
pop
shrb
mov
add
outsl
xchg
mov
mov
shlb
sub
adc
dec
std
jo
dec
mov
dec
lods
negl
xor
jae
cmp
rcll
cmpsl
and
jnp
and
jmp
ljmp
test
adc
pop
movsl
pushf
or
nop
xchg
xchg
adc
movsl
push
out
mov
or
or
ret
insl
xchg
add
sti
inc
test
lods
mov
sub
inc
aam
or
mov
sar
test
test
lea
inc
outsl
dec
bound
frstor
cmp
inc
ja
and
add
and
push
pop
push
clc
jp
xor
das
and
hlt
icebp
lock
jp
lds
push
jbe
inc
mov
xchg
arpl
and
jb
mov
mov
sub
add
mov
in
cli
dec
scas
data16
xor
fiaddl
fdivrs
lahf
or
cmp
push
hlt
idivb
in
cmp
hlt
testl
push
add
shll
add
pop
xchg
in
dec
out
xchg
bound
std
xchg
mov
mov
ret
loope
fimuls
in
cmp
and
or
xor
pop
movsl
push
dec
dec
xchg
push
inc
pusha
mov
dec
xchg
rcrb
pop
nop
push
sbb
push
scas
jle
and
mov
jg
loopne
jo
bound
scas
ja
jmp
in
sbb
cmp
or
repnz
xchg
push
mov
jmp
es
pop
jle
push
scas
sarl
mov
ds
add
fmull
cld
je
std
jne
jno
ss
popf
cmp
inc
faddl
mov
mov
addb
les
or
pop
lds
sub
rcl
cwtl
ret
iret
dec
stos
mov
add
xlat
hlt
cmp
test
inc
mov
cli
or
pop
rolb
mov
clc
ficomps
in
push
pop
sbb
push
je
add
or
sbb
leave
mov
mov
xchg
push
fldenv
daa
push
cmp
dec
das
fdivrs
xchg
sar
and
pop
jecxz
aaa
mov
sbb
lahf
es
or
sbb
cmpsb
pop
into
or
mov
call
cmp
lret
mov
jl
jmp
xchg
jnp
outsb
mov
and
and
mov
scas
xchg
loop
mov
std
xor
out
or
sti
cld
aam
gs
lret
or
sbb
push
fidivs
lds
shrl
mov
push
nop
pop
or
stc
or
rol
pusha
add
icebp
fimull
je
test
mov
gs
rorb
idivl
push
inc
mov
add
mov
ss
add
add
insb
loopne
fnstenv
jne
in
mov
jge
mov
jg
mov
xchg
cwtl
out
xor
push
scas
jb
test
aam
out
aas
pop
ds
mov
loop
inc
jne
xor
sub
push
add
add
mov
or
cmp
inc
or
cmpl
add
jle
imul
jecxz
ljmp
mov
pop
or
insb
gs
push
xchg
dec
xchg
mov
cltd
mov
xchg
mov
pushf
aaa
sub
clc
int3
xor
xchg
sub
fildll
add
rcrb
mov
js
jnp
mov
xchg
cmp
out
push
lds
inc
ljmp
mov
lea
pop
adcb
aaa
gs
add
pop
rcll
mov
daa
aad
adc
sbb
push
dec
ficoms
cli
ja
loop
jb
sarl
pushf
in
push
cmp
fwait
shlb
lret
add
cld
pop
jnp
fs
jnp
outsb
adc
popa
xor
pushf
out
push
gs
mov
in
lret
and
xchg
add
push
add
scas
pop
iret
mov
out
imul
xchg
test
mov
mov
in
adc
mov
mov
dec
lret
push
lods
rcrl
push
addl
frstor
mov
test
cmp
lret
push
inc
mov
clc
mov
push
pop
rcll
add
pop
inc
adc
das
jo
lret
cmp
scas
loopne
sub
std
adc
shlb
mov
xchg
addr16
adc
push
fmull
lahf
outsl
and
repz
push
pusha
add
pop
int
jb
push
sbb
mov
add
xor
mov
adc
pop
or
sub
cmp
dec
cltd
or
or
sbb
adc
mov
pop
add
outsl
jns
ja
lds
mov
sbb
jmp
and
pop
js
pop
es
lcall
mov
insl
cltd
mov
mov
clc
fstl
xchg
sbb
pop
jmp
loope
push
cmp
cmpsl
stc
inc
lds
lods
scas
cltd
inc
mov
pop
addr16
cmp
pop
mov
es
test
daa
inc
cmp
out
mov
sbb
dec
ss
lods
push
sbb
je
xchg
loop
loope
loop
sub
popl
mov
test
stos
mov
nop
and
inc
test
mov
in
dec
cmp
sbb
movb
pop
jno
aas
fistl
sti
cmpsb
mov
sbb
in
xchg
add
adc
xor
sub
cmpsl
sbb
std
popa
xor
jbe
scas
adc
in
add
push
xchg
test
adc
and
jl
mov
fdivrs
push
sbb
pop
xchg
orb
mov
cltd
mov
jae
jge
and
mov
lock
in
lock
sub
iret
js
leave
cmp
pushf
out
mov
xor
das
lahf
in
pop
dec
mov
or
mov
test
mov
and
mov
jp
dec
push
and
and
mov
sarl
in
or
push
rcrb
cmpsb
fistl
orl
xchg
gs
add
mov
jp
in
shrl
push
jecxz
or
sub
cltd
fcmove
cmp
out
cmp
test
adc
cmp
aam
in
or
xchg
inc
fldcw
xor
mulw
push
mov
in
popa
xlat
sbb
test
mov
pop
xchg
fnstenv
dec
xchg
jmp
in
add
loop
scas
lock
fsts
mov
cli
add
aam
test
pusha
push
out
insl
lcall
mov
lds
mov
mov
dec
outsb
aas
inc
lret
or
js
xchg
xor
mov
adc
dec
push
xor
out
call
mov
and
pop
rol
mov
push
jecxz
arpl
es
push
lods
mov
lahf
popa
scas
enter
bound
stos
push
mov
lods
cli
hlt
xor
xor
test
or
mov
mov
pop
sub
je
or
and
xchg
sbb
popa
sbb
lock
rorl
cmp
xor
test
ffreep
pop
adc
mov
inc
in
pop
mov
mov
inc
outsb
or
and
mov
inc
into
repz
xchg
mov
push
adcl
sub
push
xor
lret
lods
push
fcmovnb
fs
jmp
aad
sub
sti
loopne
mov
mov
rcll
mov
add
out
and
push
inc
xchg
and
jmp
sub
dec
int
lods
or
mov
rolb
addr16
les
outsb
push
ds
pop
je
jg
mov
mov
mov
cmp
fisttpl
testl
lret
xor
dec
sub
add
test
push
outsl
xchg
pop
test
dec
mov
fstpt
stos
scas
xchg
cmp
call
aaa
mov
jb
movsl
fstpt
jge
ja
adc
xchg
scas
hlt
sbb
rclb
jae
std
cmp
out
cmp
lret
jmp
test
addb
or
jb
cmp
sbb
cltd
jae
push
mov
inc
xor
stos
mov
pusha
mov
cmp
jae
mov
sarl
push
or
cmp
pop
cs
push
inc
out
mov
mov
sbb
into
jb
outsb
ret
xchg
nop
pop
inc
pop
icebp
and
daa
repz
in
add
arpl
lea
orl
cmp
and
push
sub
fcomps
jne
stc
mov
in
push
sbbb
repz
fs
cmpsb
mov
lock
cli
subb
pop
fdivrs
mov
cmp
lds
pop
xchg
mov
shlb
repz
shlb
inc
shrl
stc
mov
movsl
pop
mov
sbb
dec
test
inc
into
test
aam
xchg
test
out
bound
mov
sahf
pop
pop
aam
cltd
cmp
fwait
cmpsb
nop
test
push
push
and
inc
lods
jnp
cmp
int
popf
jmp
sti
inc
push
cmp
ds
inc
ds
data16
fdivrl
sbb
arpl
inc
dec
jae
fmuls
loopne
idivb
and
popa
adc
cli
arpl
sub
xchg
cmpl
sbb
ret
mov
lcall
mov
push
addb
push
jne
pop
cmpl
fisubs
push
mov
or
fmull
add
movsb
lea
movb
add
out
les
negb
into
ja
add
mov
mov
cltd
dec
dec
popa
mov
dec
ss
mov
xor
and
push
add
sbb
mov
or
popa
jl
or
incl
into
push
test
fmulp
out
mov
sbb
insb
inc
lods
jo
popa
jmp
ret
lock
mov
dec
xchg
adc
jge
adc
dec
test
daa
xchg
pop
out
lock
mov
xchg
mov
cmp
dec
jnp
push
pop
cmpsl
aam
enter
outsl
movsb
add
jecxz
push
push
in
xchg
and
imul
and
mov
mov
scas
insl
push
mov
rorl
fimuls
and
ljmp
mov
fstl
mov
xchg
incb
aad
and
testb
leave
add
jo
les
cmp
or
lock
clc
es
inc
add
scas
mov
or
imul
or
in
mov
pop
popf
and
daa
loopne
lahf
daa
mov
or
mov
pop
add
lods
sbb
ljmp
push
sbb
cmp
sbb
sub
pop
imull
fisttpll
aas
js
ds
xchg
xor
cmp
pop
fwait
cmp
inc
sbb
xlat
cmc
movl
pop
adc
xor
adc
nop
sahf
fs
lods
push
fwait
out
scas
and
rcrl
jb
cwtl
cmpsb
mov
and
dec
jecxz
push
fsubl
push
mov
push
adc
int
shll
dec
add
sbb
lret
cmpsb
dec
test
jecxz
pop
shl
sub
cmp
in
outsl
into
into
test
les
cmpsl
lret
pop
stc
inc
sbb
sub
movsb
test
cltd
mov
lods
mov
gs
aad
loope
es
aaa
and
add
cltd
mov
cmp
sarb
cltd
ss
or
sti
fisubs
mov
repz
cmpsb
and
mov
jge
inc
cmpl
mov
or
or
pusha
hlt
pop
es
dec
jne
out
adc
arpl
gs
cmpsl
cs
gs
sbb
negl
mov
push
pop
lods
add
mov
test
decb
push
mov
push
jnp
xor
testb
and
neg
das
and
xor
sub
pop
rcrb
adc
testl
les
icebp
fisubrs
cltd
les
and
pop
cli
jb
sbb
inc
repnz
cmp
fmull
inc
std
clc
adc
int3
arpl
add
sub
jns
std
xor
mov
js
sbb
stos
hlt
lods
insb
loope
daa
hlt
push
clc
fistl
lods
push
xor
pop
shr
clc
pop
shrl
mov
jnp
lcall
jge
loopne
pop
mov
dec
dec
aad
fs
xor
cmp
inc
jbe
mov
jg
jl
xchg
mov
call
mov
fidivs
jle
add
jo
or
scas
cmpsb
aaa
mov
pop
sarb
inc
cltd
out
ret
into
popf
mov
ror
loopne
shlb
jecxz
fisubs
stos
cld
xchg
adc
cltd
out
or
int3
insb
add
lea
loope
cmpsl
imul
push
stc
xchg
movsl
pop
es
mov
pop
mov
jle
xor
pop
jle
fnsave
ficoms
cmp
dec
cmc
mov
jb
cmp
xchg
adc
xchg
nop
out
mov
cmp
leave
loope
fcoms
lea
dec
nop
jb
inc
lods
stos
test
adc
push
adcb
adc
cmp
xor
bound
xchg
shl
in
or
sub
xor
les
push
adc
add
mov
sub
mov
and
outsl
mov
xlat
xchg
lock
dec
mov
adc
rcrb
icebp
sub
dec
mov
cmc
jl
data16
sbb
aad
push
test
and
leave
push
adc
mov
cmpsb
inc
in
xor
dec
rcll
outsb
pop
outsl
push
sub
pop
stc
xor
jno
outsl
mov
ficoml
cltd
in
jnp
jo
adc
push
icebp
rcrb
insb
dec
stos
popf
cmp
in
addl
fs
adc
dec
scas
or
jns
cmp
xchg
test
mov
sahf
jbe
pop
cmp
xchg
enter
out
sub
dec
xchg
int
adc
fnstsw
rcrl
scas
or
aam
fs
and
cmpsl
test
jb
lret
sbb
sbb
push
movsb
inc
outsb
ret
and
in
enter
pop
mov
daa
out
enter
cmp
mov
or
xchg
jg
mov
mov
cmpsb
dec
push
sahf
or
cmp
jg
sarl
imul
mov
jge
inc
push
addr16
mov
sub
mov
jmp
xchg
ss
lock
mov
loopne
int
cmpsb
push
and
xchg
jno
lcall
inc
sub
es
lret
pop
push
jne
mov
push
cmp
repnz
cmpsb
xchg
ljmp
sbb
shrl
or
mov
or
outsl
pusha
repnz
xchg
test
dec
mov
and
ja
fmuls
add
push
in
test
dec
rcrl
jge
mov
sbb
mov
xor
xrelease
out
test
test
rcl
aam
stos
xor
test
lea
cltd
lcall
mov
cs
fcoml
mov
xlat
jo
sbb
mov
stos
add
shlb
mov
orl
jl
ficompl
mov
test
lea
repnz
xchg
mov
mov
int
adc
pop
inc
adc
sahf
cmp
nop
jecxz
mov
adc
cmp
mov
push
stc
xchg
sub
in
push
ret
pop
loop
pop
jmp
jl
add
pop
cmpl
idivl
leave
cmp
repz
cmpsb
movsb
mov
and
adc
mov
inc
cwtl
pop
adc
clc
or
pusha
shl
or
lock
imul
fnstsw
aad
rcrl
cs
shll
push
fldcw
mov
add
out
xor
adc
inc
mov
xor
sub
jle
push
inc
mov
loopne
sub
ret
cmpsb
or
jp
sbb
subl
fnstcw
add
test
orl
test
and
out
xchg
popa
sbbl
sbb
sbb
mov
jns
or
andb
push
sbb
fldl
xchg
cmp
ds
aas
adc
popf
jae
repz
inc
inc
fdivl
rorl
and
push
jb
push
and
jb
push
in
fstps
mov
and
fbstp
lock
cmp
add
mov
mov
mov
fcompl
pop
xor
jl
jl
repnz
ret
jae
ja
sbb
popf
daa
insl
fcoml
stos
ds
dec
cmp
and
xchg
sti
mov
incb
ret
dec
xchg
cmp
loope
outsl
sahf
and
fisubrs
xchg
push
pop
sti
lea
mov
pop
sub
sub
mov
mov
or
push
imul
ret
add
jp
shl
movsl
xchg
add
cmp
shll
jne
outsb
xor
pusha
pop
fsts
out
pop
outsl
das
out
mov
pop
push
sbb
rol
mov
movsl
repnz
lods
int
push
shl
shlb
pop
movsl
enter
jo
fildl
aaa
pop
jnp
cmp
jg
sbb
nop
clc
loope
dec
fildl
add
punpcklbw
ret
mov
pop
inc
xchg
xchg
xchg
hlt
sbb
test
mov
xchg
lcall
xor
inc
bound
adc
scas
lods
cmp
cmp
sub
hlt
sub
jns
mov
stc
out
or
hlt
subb
ljmp
cmp
stos
or
ljmp
mov
sbb
fwait
push
push
push
adc
in
movsl
jo
mov
imull
insl
in
cmpsb
in
mov
iret
in
mov
jecxz
jnp
mov
dec
test
jecxz
enter
test
adc
test
or
rcrb
lahf
mov
pop
insb
jno
iret
mov
jae
jns
adc
das
sub
jns
scas
je
jmp
adc
orl
and
stc
test
pushf
xor
outsb
sbb
test
addl
fdivrp
sub
test
out
push
xor
xchg
jno
ds
movsb
dec
aam
pop
jecxz
clc
iret
les
popa
lahf
push
loope
cmp
inc
fcom
jae
stc
pop
jno
pop
push
sbb
mov
mov
cltd
mov
into
lock
je
pop
jae
xchg
lahf
mov
mov
cli
sub
fcoml
dec
pushf
push
je
popf
sbb
cld
hlt
js
out
xchg
or
xor
aad
cmpsl
clc
test
xor
rcl
cwtl
lret
pop
cmpsl
adc
shrb
and
sbb
jg
mov
cli
mov
insb
sbb
mov
pop
pop
jo
or
mov
loope
mov
xor
adc
lahf
inc
sbb
call
lock
popf
in
dec
and
pop
push
fisttps
lock
push
into
into
lds
repz
dec
ss
adc
into
inc
mov
insb
mov
push
add
xchg
pop
aaa
fs
sahf
pop
mov
pop
or
scas
pusha
sub
dec
out
fcomps
inc
or
xchg
leave
loopne
stc
cltd
add
push
rol
jno
std
imul
pop
adc
sbb
insl
test
push
push
sub
das
dec
pop
inc
out
sub
jno
cmp
test
push
push
into
ljmp
cmp
mov
repz
sub
lds
inc
test
movsl
add
sub
mov
mov
pusha
mov
cmpxchg
adc
or
sbbl
test
call
xchg
fistl
xchg
out
repz
push
cs
lds
push
mov
sbb
mov
loop
movsl
xlat
dec
add
push
pop
or
push
sub
add
out
xor
pop
xor
enter
mov
jp
push
icebp
sub
outsl
mov
sbb
ljmp
in
xchg
insb
push
fistl
xchg
movsl
in
jg
dec
daa
pusha
movsb
ljmp
inc
and
addr16
sub
xor
lcall
xchg
stos
jo
push
mov
mov
dec
push
clc
ljmp
cmp
jne
out
sub
data16
inc
ljmp
cmp
sahf
jmp
mov
inc
inc
aad
movsb
or
push
addr16
int3
lds
cmp
idiv
jp
in
fnstsw
les
push
leave
leave
lret
int
not
dec
cltd
in
inc
cmp
cmp
test
push
mov
adc
xchg
push
js
lods
mov
insb
dec
push
mov
jle
jne
popf
movsb
add
lcall
movsl
icebp
dec
fstpl
push
stos
push
cmpl
xor
inc
jo
mov
jg
int
hlt
mov
xor
dec
dec
dec
movsb
lret
mov
jmp
jg
out
inc
movsl
test
pusha
lcall
aas
xor
jle
jge
sahf
xor
rorl
add
mov
das
dec
bound
aaa
inc
jg
xor
inc
xchg
or
adc
xor
subl
jp
add
xor
scas
jo
push
jmp
mov
into
leave
push
jp
cmp
nop
mov
enter
cld
add
lods
mov
fnstcw
pop
scas
fsubs
cld
lds
pusha
and
ficompl
shlb
into
xor
imul
out
cmpsl
dec
sbb
fucom
or
mov
ss
scas
pop
mov
leave
aaa
lods
stc
pop
popf
inc
fdivs
data16
inc
pop
fldt
js
in
loope
jg
jne
mov
push
mov
clc
cwtl
add
push
in
fists
fadds
call
cmp
add
rcrb
mov
sub
stos
xor
aaa
aas
dec
jmp
repz
daa
xchg
add
sbb
enter
mov
movsb
popl
push
jbe
call
rcrl
imul
cmpsl
push
cmp
and
adc
sbb
push
stos
clc
jnp
repz
jns
out
ret
loop
sub
mov
mov
add
lock
ja
scas
out
add
adc
jb
xor
icebp
into
sbb
push
mov
xchg
push
mov
pop
xchg
adc
jno
lcall
mov
adc
inc
mov
cmpsl
enter
xor
add
pop
inc
xchg
out
add
dec
adc
mov
pop
lahf
inc
hlt
fists
in
dec
lods
ror
popa
call
add
mov
jmp
test
subl
xor
in
mov
mov
pop
mov
add
dec
mov
xchg
sub
inc
outsl
xlat
add
stos
mov
shrl
jo
mov
aas
outsb
xor
jb
and
mov
cmp
xchg
rclb
mov
jmp
pop
mov
mov
ficoms
mov
mov
outsb
mov
int3
mov
or
into
int
cli
fs
jecxz
xor
cmpsb
ss
xchg
movsb
adc
lds
lahf
cli
sub
fdivl
shrb
rcll
or
mov
cmp
push
dec
dec
or
rcrl
inc
stc
aaa
mov
add
dec
xchg
push
in
in
insb
inc
mov
cmpsb
jne
movsb
out
xchg
dec
addr16
loop
xor
add
inc
sub
sub
xor
testl
in
out
lcall
xor
jne
cmp
mov
or
scas
mov
inc
popf
fisubrs
xor
push
lods
into
inc
imul
or
lock
cmp
insl
inc
icebp
addr16
stos
sub
insb
xchg
mov
pop
in
inc
cmp
mov
mov
mov
dec
adc
repnz
sub
enterw
nop
push
inc
aas
add
lock
pop
xchg
inc
and
or
loopne
ss
push
pop
hlt
addr16
adc
scas
cmpsb
dec
loop
mov
es
or
data16
rcrb
enter
aas
aam
fistl
xchg
pop
rclb
pop
fidivs
out
sbb
lock
test
xlat
shll
popf
cmp
loop
out
movsl
xchg
mov
incl
popa
or
fstpl
in
mov
jge
dec
cmc
fnstsw
shll
fsubs
mov
ret
jmp
pop
and
jae
out
insb
mov
mov
addr16
jecxz
popa
in
cmp
cmp
jbe
addl
fisubl
sub
adc
roll
out
out
clc
test
or
test
jo
pop
inc
mov
pop
cmp
aam
ss
push
jae
js
add
outsb
xchg
push
jmp
movsl
push
test
sbb
sahf
xor
ljmp
lock
xchg
or
dec
push
stc
xchg
hlt
ss
xor
ret
push
cmp
cltd
imul
call
jo
sbb
orl
fwait
mov
or
jne
sti
jl
push
jo
cwtl
aaa
cmp
push
inc
addb
hlt
jecxz
jno
jo
ja
push
sbbl
pop
test
mov
test
cmp
sub
mov
jbe
cmc
cmpsl
mov
sbb
push
mov
aad
std
lods
lret
and
loop
or
inc
dec
pop
mov
push
repnz
mov
inc
mov
mov
and
cmp
movsl
add
stos
jmp
sbb
mov
into
ja
jnp
mov
push
push
jecxz
xor
pop
mov
xchg
cli
fldt
lds
icebp
lret
jle
arpl
jb
push
add
adc
in
xor
pusha
sub
aam
and
jne
jne
and
mul
loopne
rcrl
mull
sub
cmp
es
fnsave
inc
repnz
inc
sub
hlt
out
clc
mov
jne
xchg
repnz
and
loope
je
int3
ss
xchg
mov
leave
ss
lds
xchg
cmpsb
stos
or
test
xchg
mov
pop
in
clc
ds
jmp
outsl
in
mov
cmpsl
psubusb
aas
or
and
adc
sbb
ja
mov
sub
js
cmc
jge
scas
jle
sbbb
inc
loope
cmp
add
push
in
adc
int
faddp
mov
je
mov
push
push
daa
daa
arpl
movsb
out
aaa
scas
lock
sbb
cmp
cmp
dec
cmp
jne
cmp
push
push
movsl
outsl
and
or
jmp
cmp
push
les
stos
test
jnp
push
adc
stc
mov
jmp
sub
insl
adc
rcrl
jae
sub
cmp
xlat
xchg
pop
shll
push
insl
inc
dec
mov
pop
out
lock
imul
dec
jmp
cmp
lret
pop
stos
xlat
sub
mov
xlat
or
xchg
xor
sub
call
dec
subl
call
push
and
pop
pop
fldcw
sub
push
cmp
add
or
imul
dec
std
xor
in
inc
or
mov
xchg
jmp
push
movsb
jae
xchg
std
pushf
icebp
and
popa
xor
cmpsb
sbb
leave
pushf
jmp
mov
ret
ret
test
and
mov
sbb
xor
pop
into
into
xchg
jne
adcl
rolb
bound
outsb
cmp
insl
mov
sahf
in
cs
sbb
mov
xor
sub
sub
push
add
pushf
leave
pop
or
mov
push
mov
les
adc
mov
sti
xor
mov
mov
fcoms
mov
mov
push
jl
faddp
xor
cwtl
ljmp
add
mov
and
dec
rcll
xorb
mov
jle
in
mov
lahf
adc
adcb
loopne
adc
jge
jmp
add
aam
ljmp
pop
xchg
arpl
add
cmp
xor
in
repnz
xor
test
mov
ljmp
lods
mov
pop
aad
aam
fidivrs
jb
xchg
adc
imul
fldt
xchg
fs
sarb
cmp
mov
shr
mov
lods
xchg
stc
push
in
push
sti
lret
push
addb
insb
mov
loop
jge
rol
xchg
out
adc
push
add
mov
sbb
fadd
jnp
sbb
mov
dec
bound
sub
cmp
lret
push
cmp
mov
clc
pop
mov
xchg
and
inc
pop
fldlg2
jno
jg
mov
xor
lock
ror
pop
push
pusha
xor
dec
sbb
mov
sub
data16
push
pop
pop
lret
pop
in
add
lcall
out
fimuls
jecxz
into
pop
push
sub
stos
jnp
shl
sbb
addr16
dec
insl
ret
and
les
ljmp
pop
lcall
jg
andl
mov
insl
mov
mov
jo
and
jl
sbb
outsl
mov
insb
mov
jp
push
call
fdivs
add
mov
sbb
dec
mov
push
int
cmp
rcll
sbb
pop
dec
add
xor
fwait
into
or
push
imul
int3
pop
out
idivb
mov
jb
scas
adc
andl
movsb
mov
sub
fstpl
fmull
jno
out
inc
movsb
ret
lds
jecxz
jnp
push
pusha
fistpl
arpl
sti
or
test
adc
jge
cmp
lret
imulb
cmp
repnz
or
rcrl
mov
arpl
inc
insb
cli
xchg
sbb
in
cld
pop
dec
sub
pop
outsb
scas
jb
mov
fildl
mov
cmp
jl
out
ja
adc
loop
mov
enter
shll
push
lods
in
pop
les
ljmp
in
ds
pop
shl
gs
aaa
push
or
lcall
and
or
inc
das
rol
daa
mov
mov
mov
bound
lea
or
mov
dec
or
repz
sahf
enter
shrb
out
xchg
jmp
ja
pop
adc
cli
jns
ljmp
or
jl
gs
lcall
std
inc
out
js
xchg
pop
inc
dec
cmp
cmc
or
jecxz
jp
movsl
jae
into
or
push
dec
in
call
sbbl
inc
fsubl
fidivrl
shl
js
insb
add
nop
cmp
fwait
jns
xchg
fs
cmpsl
pop
push
imulb
add
mov
xor
mov
out
gs
call
dec
pop
popl
in
dec
push
sahf
in
loopw
inc
pop
test
mov
jmp
push
rcrl
aaa
cmp
lods
add
aam
enter
xchg
add
scas
popf
lcall
mov
sbb
out
ret
adc
aaa
pop
shlb
lahf
adc
push
add
xchg
jno
pop
lret
xchg
je
es
mov
adc
mov
out
ja
mov
pop
lret
sbb
outsb
gs
in
dec
xor
jle
sti
pop
shll
mov
in
pop
stos
push
inc
mov
fistl
mov
pop
cmp
mov
daa
dec
fistl
jns
add
xorl
sti
mov
fmuls
sub
mov
xchg
movsb
ljmp
mov
jnp
call
sbb
sub
mov
sarb
add
push
mov
and
jecxz,pt
stos
mov
add
bound
mov
popa
xchg
xor
test
aas
lcall
pop
sbb
lods
cs
in
cmpsb
adc
cmpsl
push
and
push
lods
scas
cmp
addr16
xchg
dec
popa
ror
mov
pop
imul
lods
repz
fcomp
xor
and
pop
addl
xchg
and
push
hlt
xor
fsubrs
std
lret
rorl
push
leave
pop
and
push
inc
mov
xchg
call
nop
in
shll
mov
in
popf
push
mov
and
or
jae
jns
cmc
lret
test
sub
adc
xchg
arpl
xchg
push
mulb
or
addr16
add
ja
jo
stc
movsl
jae
pop
mov
dec
es
icebp
cmp
pop
mov
pop
push
mov
jns
sub
sbb
and
mov
fs
aam
mov
inc
cmp
xorb
js
int3
jg
push
daa
les
pop
mov
leave
pop
mov
push
xlat
test
nop
dec
jb
xor
xor
adc
or
cmp
push
xor
cld
xor
jns
adc
mov
xor
push
call
in
iret
pushf
out
or
scas
xchg
inc
inc
pusha
test
mov
push
cmp
in
push
mov
push
inc
std
das
push
add
rcll
or
sbb
mov
inc
mov
inc
push
sti
cmp
adc
cmp
fstl
movsb
and
int3
inc
mov
aad
aas
in
lods
pop
fwait
xcrypt-cfb
cmpsl
arpl
xchg
adc
and
imul
adc
vxorps
add
inc
jecxz
fldenv
arpl
jl
push
push
inc
sahf
incl
xchg
std
xchg
mov
jge
add
cltd
icebp
dec
mov
lret
inc
jmp
mov
xlat
sbb
lock
adc
les
jns
and
sti
pop
and
sbb
xchg
add
lock
push
addr16
jg
and
inc
repnz
lcall
and
pop
inc
and
std
icebp
fidivrl
fistpl
push
icebp
pop
inc
xor
call
lea
add
sti
cs
add
jg
cmp
sarb
mov
fiadds
lahf
rolb
jmp
movhlps
cli
aas
js
jge
cmp
push
lods
ljmp
inc
div
push
mov
iret
addr16
xor
sbb
push
adc
mov
js
jge
pop
cmp
cvtps2pi
test
add
ficoml
xchg
insl
cmp
sbbl
in
adc
in
sub
lret
pop
fcmovbe
jmp
sbb
dec
jmp
and
push
out
xchg
pop
div
popa
add
mov
repz
mov
js
add
and
in
lods
or
jno
lret
mov
pop
adcl
mov
mov
lret
mulps
aaa
insb
and
xor
jne
cmp
jns
jno
cltd
cld
adc
mov
in
jl
and
push
fidivl
cmpb
in
xchg
pop
int
sbb
stos
test
into
and
adc
lret
outsl
outsb
call
nop
jmp
roll
xor
fnstenv
mov
adc
jecxz
scas
js
mov
jb
iret
dec
sub
sbb
push
fdivrl
push
sahf
hlt
rorl
icebp
pop
xlat
pushf
pop
aad
adc
xor
add
leave
div
rcll
inc
dec
dec
mov
mov
loop
out
leave
in
cmpsb
mov
rclb
add
mov
push
das
push
mov
nop
sub
inc
and
sbb
push
pop
aam
jno
push
pushl
fiaddl
dec
and
loope
hlt
mov
cmpsb
insb
mov
sub
inc
mov
xchg
sub
adc
aas
mov
ret
xchg
jns
sahf
xor
or
sub
ret
jns
cmp
mov
cmp
sbb
imul
and
mov
jns
pop
ljmp
cli
call
push
cmc
pop
jne
outsl
adcb
jne
leave
shrb
fwait
rcll
xor
lds
jle
mov
sbb
mov
inc
cmp
mov
scas
sbb
cmpsb
ficoml
push
out
je
jnp
out
adc
leave
sub
enter
cmpsl
lods
push
js
fimull
fsubrl
lcall
add
dec
jg
pop
cmp
cmp
test
jb
push
pop
jno
aam
dec
mov
aam
aad
sbb
cmpl
ljmp
or
sub
in
cwtl
pushf
cmc
push
movsl
outsb
into
daa
mov
aad
push
inc
gs
ret
aam
outsb
mov
mov
inc
lcall
mov
and
jbe
shll
pop
scas
adcl
clc
sbb
cs
fisubrs
cmp
cmc
popf
xor
js
shrb
pop
loope
jg
mov
lock
adc
or
jnp
push
dec
das
iret
shl
mov
lahf
jmp
add
inc
fbstp
and
cmp
aas
scas
mov
jb
jmp
dec
push
inc
jo
sub
and
test
pop
aaa
push
mov
ljmp
cmp
jp
adc
push
mov
fsubl
ficompl
imul
ds
lret
push
xor
in
out
data16
lret
push
int3
pop
xor
sub
or
adc
push
out
mov
orb
ds
aam
imulb
cmp
sub
push
cmpsb
mov
jns
dec
adc
add
pop
mov
and
ror
nop
xor
repnz
mov
push
pop
mov
daa
popa
inc
pop
lods
clc
cmp
or
inc
xlat
mov
mov
xchg
sub
sub
arpl
les
mov
mov
stos
dec
out
and
popf
add
loope
mov
or
adc
jp
sti
mov
xor
jle
add
sti
mov
sbb
imul
push
sbb
push
mov
pop
in
arpl
fwait
mov
clc
popf
cmp
cltd
pop
stc
js
push
icebp
mov
push
lods
shll
aam
sbb
dec
icebp
pop
aad
and
addb
aad
cs
xor
cmp
push
jecxz
push
add
repnz
mov
jg,pn
bound
sbb
jae
dec
cmpsb
fldcw
push
jns
scas
outsl
or
or
mov
aas
test
mov
xlat
lcall
mov
jge
cmp
push
int3
test
dec
dec
pop
push
jbe
xchg
icebp
je
or
fcoms
addl
or
pop
xor
pushf
jmp
out
push
movsl
jmp
aad
jp
pop
call
jg
sbb
in
mov
adc
and
mull
dec
lcall
call
ja
fwait
sti
scas
das
mov
or
xchg
push
pushf
pop
sahf
add
or
jb
test
add
into
sarl
out
cwtl
sub
lea
in
sbb
mov
xchg
lret
shlb
lcall
or
pop
mov
adc
lret
aad
mov
outsl
or
loopne
loopne
add
cmp
and
repnz
movsb
sub
andb
sahf
add
sbb
ss
cli
dec
cmpsb
sub
sbb
fnstsw
sti
popa
and
jno
inc
cld
xor
xchg
jb
pop
jns
std
jbe
dec
std
clc
cmpsl
sarb
popf
xlat
mov
or
push
add
jmp
scas
in
add
les
hlt
push
out
ds
sub
xchg
cmp
fildl
cmpsb
fistl
andl
lock
xchg
addr16
pop
lods
in
xor
bound
sahf
loope
int3
jne
sub
mov
push
in
fidivs
into
in
inc
test
mov
mov
jne
mov
jns
std
sbbl
in
dec
push
testl
sub
and
loopne
out
cli
in
insl
mov
jge
ret
mov
scas
cmc
add
out
in
fistps
divl
jecxz
ljmp
xchg
or
mov
cmc
add
push
dec
pop
and
mov
test
jnp
out
pop
lahf
call
jge
fildll
movsb
or
lret
das
loope
xor
push
outsl
iret
fwait
inc
int
ret
xchg
mov
sbb
dec
loopne
cmp
inc
sbb
shlb
push
inc
or
push
jl
pop
mov
or
mov
or
push
lods
movsl
sbb
or
insl
stos
notl
ja
sub
iret
and
test
pop
psubd
lds
jmp
cmp
push
and
mov
hlt
loop
leave
pop
inc
jmp
xor
mov
dec
lods
gs
pop
sbbl
cmpsl
and
cmp
lahf
add
ljmp
xchg
fst
ret
sub
outsb
rcrb
mov
add
mov
and
pop
sub
push
mov
jb
sbbb
inc
push
imul
int
mov
movsb
insb
lret
pop
sbb
dec
out
ret
mov
aaa
pop
pop
cmpsl
aam
add
pop
mov
and
pop
jnp
cld
or
mov
stc
negl
loopne
fdivrl
out
push
cmpsb
pop
or
mov
outsl
mov
inc
icebp
rcrb
dec
roll
inc
repnz
push
in
mov
test
inc
cmp
dec
xchg
clc
je
out
negb
xchg
adc
and
push
hlt
loop
adc
insb
cli
scas
movsl
inc
ret
xlat
or
je
imul
and
stc
ljmp
add
add
fstpt
mov
xchg
xor
pop
and
adc
int
in
decl
pop
dec
add
lods
inc
repz
rol
lds
mov
aam
mov
pushf
stos
cwtl
cmpsl
and
jmp
xchg
pop
dec
add
mov
jle
clc
test
sub
jno
push
xchg
imul
inc
aad
fcomps
pop
inc
xchg
je
jmp
test
in
sahf
inc
incl
stos
or
lds
call
lea
cmpsb
cmp
sahf
jmp
and
sub
mov
adc
push
push
out
lcall
aas
mov
jns
scas
stc
cs
fistpll
call
test
add
ljmp
lahf
xchg
popa
jg
adc
addl
fstpl
jns
fs
pusha
mov
lret
stc
or
mov
xchg
jle
outsl
mov
fwait
repz
clc
addr16
lods
fwait
pop
shlb
out
mov
fnstcw
inc
mov
test
xor
xor
dec
adc
jp
or
adc
sbb
popa
lahf
pusha
xorb
imul
cmp
xchg
fwait
imulb
sbbl
shl
dec
xchg
xor
in
xor
add
imul
cltd
mov
or
scas
out
rorb
mov
dec
movsb
nop
dec
dec
cmp
cmp
pushl
push
ficoml
mov
lret
push
dec
dec
aad
lea
mov
xchg
push
cmp
adc
test
push
dec
xchg
das
fdivl
jmp
push
ljmp
repnz
mov
cmpsb
out
lcall
daa
out
popf
fisubrs
jb,pt
xchg
into
pop
adc
mov
push
rcrl
jmp
pop
loope
jmp
xchg
cmc
fnstenv
adc
sub
cmp
das
add
mov
outsl
pop
cmpl
push
lods
mov
shl
sub
popa
mov
arpl
dec
loopne
nop
cwtl
rcrb
cmpsb
cmp
cmpsl
xchg
or
and
aaa
pushf
rep
aaa
sub
push
push
fists
add
ret
addr16
mov
sti
xchg
push
iret
xor
out
sbb
dec
xor
mov
jg
and
dec
mov
cli
les
cmpsb
jb
aam
cli
xchg
and
jle
mov
lcall
dec
mov
mov
sti
add
or
push
pop
insl
jne
fwait
jno
movsl
je
int
xor
loope
mov
xchg
xlat
xor
pop
lcall
dec
loope
lods
jl
fcmovb
dec
pop
stos
shrb
pushf
das
aas
lret
mov
cmpsb
fwait
jbe
or
pusha
test
mov
mov
outsl
jl
loop
or
out
mov
cmp
rol
dec
pushl
push
leave
aaa
or
jle
jmp
gs
repz
sbb
xor
xor
adc
lea
gs
iret
mov
inc
inc
pop
sub
out
addl
outsl
out
ja
push
sbb
js
cltd
cmp
out
pop
pop
popa
inc
pop
clc
mov
pop
pop
sbb
ja
pop
mov
xchg
pop
ds
mov
fs
out
subl
ljmp
xchg
mov
nop
test
xchg
pop
cmp
pminsw
lods
jle
or
icebp
push
jg,pn
pop
dec
pop
cmpsb
sbb
andb
insl
cmp
cmp
ss
mov
rcll
sbb
inc
cmpsb
sbb
xchg
jnp
inc
test
in
mov
sti
xor
lock
inc
test
mov
or
push
test
pop
je
test
ss
push
dec
ss
movsb
test
sbb
mov
xchg
push
mov
push
gs
test
call
cli
shl
cwtl
hlt
lds
ficompl
mov
xor
inc
and
pop
mov
jl
aad
pop
cmp
or
lock
addr16
dec
fadds
hlt
or
popa
xor
sbb
dec
pop
test
addr16
xchg
and
pop
imul
movb
hlt
in
xor
sbb
or
scas
in
testl
xchg
push
mov
inc
es
mov
mov
inc
sarb
add
xchg
and
sahf
rcl
jns
push
xchg
loop
pop
mov
fstpl
xchg
mov
push
imul
lods
xor
push
xchg
mov
adc
nop
int3
or
in
inc
test
mov
movsl
in
adc
test
jl
jb
idivb
xlat
mov
cli
cs
sub
or
jl
sub
mov
mov
pop
outsb
cmp
or
add
mov
ret
aaa
adc
cwtl
je
inc
push
or
add
inc
dec
xlat
mov
adc
push
in
dec
lods
push
test
dec
orb
int3
stos
jae
out
push
and
jo
pop
xlat
cmpsl
pop
dec
rcll
jae
aam
and
pop
xchg
mov
sub
dec
push
movsb
les
xchg
mov
mov
mov
das
cmpsl
repz
data16
lds
cmp
pusha
xchg
or
mov
lahf
and
mov
mov
daa
mov
cmp
outsb
lcall
cmc
mov
arpl
repnz
popa
or
std
icebp
out
lds
mov
and
shll
dec
dec
mov
ljmp
xchg
and
add
dec
dec
jmp
mov
js
lret
sti
jg
cld
lea
inc
cltd
dec
cltd
icebp
fistps
shl
xor
pop
clc
mov
cmp
loope
movsb
aam
sub
out
mov
aam
jne
adc
xor
sbb
js
lods
cli
dec
xchg
repz
iret
dec
bound
lods
dec
imul
jp
pop
mov
lcall
dec
mov
lret
cmp
mov
dec
or
jb
les
dec
insl
popa
or
xor
xor
test
xchg
ret
mov
pop
jle
adc
xorl
jge
int3
push
mov
fs
imul
inc
mov
popl
leave
mov
or
das
out
xchg
in
mov
sub
xchg
ret
insb
pop
cmp
and
cld
inc
sub
pushf
sarl
mov
xchg
mov
fadds
gs
int3
jp
add
mov
xchg
dec
or
mov
dec
out
je
pop
mov
mov
lods
push
xchg
cmp
push
pop
pop
icebp
ljmp
jg
push
sbb
add
orl
add
add
out
ret
adc
out
pop
mov
mov
jmp
repz
repnz
xchg
insb
lahf
enter
pop
sbb
jno
jl
mov
add
jecxz
inc
mov
sub
aas
cwtl
ret
mov
dec
mov
je
scas
jmp
jmp
ret
cwtl
jno
cmpsb
cmp
pop
mov
mov
sbb
loope
cmp
and
add
lret
sub
lock
lods
je
enter
cmp
adc
mov
pop
push
cmp
add
or
jmp
jbe
shr
shll
push
jle
mov
cmc
insb
scas
dec
cmp
dec
int3
sbb
or
push
mov
lcall
sub
mov
mov
mov
xor
pop
pop
mov
xorl
push
sbb
movsl
cli
push
sahf
pop
push
popa
ret
dec
cmp
sbb
jb
push
jecxz
sub
mov
fldt
sub
jmp
or
outsl
push
sub
mov
inc
cmpsb
loopne
sti
xlat
test
mov
sub
and
push
icebp
lock
or
rolb
iret
mov
dec
movsb
lods
xorl
or
sahf
cmpl
nop
sub
das
or
in
ljmp
js
xchg
mov
lds
out
dec
sbb
sbb
mov
leave
loop
xchg
in
fstl
out
les
pop
ret
mov
xchg
enter
pop
dec
sti
pop
mov
aad
adc
out
cmp
mov
lcall
pop
push
mov
xor
push
pop
push
mov
test
mov
mov
pop
imul
dec
lods
mov
inc
rolb
push
and
pop
movb
cmpsb
cmp
cwtl
push
imul
std
sub
fdivl
ret
movl
inc
push
xchg
bound
cmp
xchg
cltd
cwtl
and
cmc
imul
inc
cmp
cmp
xchg
decb
xchg
inc
int
scas
push
xchg
sub
mov
and
popa
and
lea
push
inc
call
adc
sahf
inc
sbb
mov
das
inc
xchg
pusha
inc
mov
pop
sbb
push
sub
ret
cmp
inc
dec
cs
arpl
jae
mov
aam
setae
repz
loopne
adc
test
and
in
aaa
inc
or
jno
enter
ret
add
push
xor
sub
out
stos
fstpl
nop
lahf
add
gs
dec
jge
push
pop
mov
push
mov
lods
jns
push
mov
pop
xchg
in
int3
jmp
cmp
and
push
sub
adc
mov
jmp
lds
ret
in
sbb
movsl
mov
push
cmp
push
push
jo
out
fildll
int
or
push
sarl
mov
ret
ficompl
sub
sti
mov
loopne
pop
or
test
loope
mov
mov
xor
aam
les
clc
lea
mov
fcom
lahf
jmp
push
hlt
jmp
gs
mov
mov
add
insb
out
xchg
scas
adc
pop
or
ja
iret
dec
jae
mov
adc
mov
adc
push
or
pop
jecxz
les
mov
cmpsl
movl
and
xchg
push
mov
imul
call
mov
or
mov
mov
xchg
dec
mov
xchg
sbb
sbbb
bound
negl
enter
mov
mov
fimull
repz
and
jmp
dec
insb
in
inc
pop
ret
pop
clc
inc
sbb
test
das
xchg
cmp
mov
sbb
in
push
mov
sub
mov
scas
mov
xchg
test
jbe
dec
or
aad
inc
enter
xchg
add
lods
ljmp
rclb
xor
lods
loopne
out
pop
and
add
loope
call
lock
sub
int3
aas
or
and
push
jbe
or
xchg
jb
pop
jns
or
and
mov
jmp
icebp
xor
aas
sbb
and
pusha
push
ljmp
lods
int
mov
mov
sub
cmp
aaa
das
pop
lds
shll
or
in
and
ja
aas
xor
inc
std
lock
adc
cmp
fdivr
add
jne
into
nop
adcl
shl
or
scas
cmp
push
leave
cltd
lcall
popf
inc
sti
dec
cmp
enter
jbe
js
imul
and
cmpsl
mov
xchg
mov
dec
xchg
pusha
pop
inc
fcompl
imul
mov
stc
lret
and
adc
push
iret
outsb
clc
inc
push
cmp
popa
mov
xchg
xchg
sbb
mov
rcr
aaa
ljmp
add
mov
js
insb
adc
pop
xchg
rorl
pop
adc
jle
rorb
sub
xchg
sbb
mov
dec
pushf
jl
ds
mov
rcrl
mov
sub
push
pushf
jns
es
adc
jns
mov
sahf
outsb
in
loop
arpl
enter
push
aad
test
push
adc
jmp
mov
shrb
adcb
ljmp
push
fists
mov
bound
dec
adc
fistl
cmc
int3
in
lods
cmp
cmp
int
push
sub
push
aad
ss
sub
and
sarl
sub
mov
lock
fisttpl
xchg
das
test
int
dec
mov
pop
sahf
push
hlt
not
mov
or
adc
mov
fs
popa
mov
sbb
mov
test
push
xchg
enter
inc
cmp
incb
dec
popf
sti
loope
lods
jle
insb
ret
jo
loopne
sbb
cmp
in
dec
rolb
pop
sbb
jnp
das
push
or
in
das
into
mov
add
cltd
fildll
lds
sbb
dec
sub
push
pop
cmp
adcl
stc
out
cmp
push
outsb
or
mov
xchg
jg
jnp
and
mov
jb
popf
push
orb
lret
mov
or
cmp
or
gs
fnsave
xchg
sbb
adc
fs
jb
sbb
cwtl
push
arpl
rcll
sbb
addb
lea
js
mov
push
decl
or
sub
pop
push
jmp
loopne
cmp
xor
nop
aam
test
sbb
push
imul
pop
mov
jmp
or
ret
fbld
inc
scas
pop
sub
mov
cs
ret
or
insb
lcall
pushf
lock
push
jns
pusha
sub
lods
push
dec
mov
hlt
les
pop
and
shlb
lods
xor
cltd
addl
xorb
popf
sbb
insl
daa
pop
into
inc
pop
xchg
mov
mov
aam
cmp
gs
int3
jo
xchg
test
scas
ss
lcall
sbb
mov
hlt
stos
pushf
xchg
loop
aaa
pop
sub
push
test
adc
mov
mov
mov
mov
xchg
out
fists
cli
nop
jnp
mov
out
lcall
add
pop
cmp
push
mov
je
addr16
sub
pusha
and
inc
ret
cld
lcall
cmp
adc
mov
pop
pop
lds
dec
sbb
and
inc
xlat
pop
sub
sbb
insl
and
lret
mov
mov
fidivrl
lret
adc
xchg
xor
jns
sti
jne
or
dec
and
int3
fs
jl
sub
js
and
test
pop
je
cwtl
push
aas
mov
jg
leave
ja
icebp
xor
lret
stos
nop
add
and
jecxz
inc
lret
add
mov
aaa
mov
push
vpsrlw
cmpsb
jnp
inc
das
out
pop
dec
hlt
adc
fstl
push
js
stc
sbb
pop
pop
push
cmc
push
xor
xchg
pop
adc
pop
adc
mov
out
dec
push
lret
cmp
in
adc
mov
into
out
pop
mov
xchg
mov
movsl
xlat
pop
jmp
fldt
sti
in
dec
adc
std
xchg
add
mov
popa
in
int3
push
je
lcall
cmp
ja
mov
cmp
js
mov
outsb
lea
push
mov
lret
imul
add
orb
mov
aas
daa
lret
pop
cmp
add
in
xchg
in
hlt
xchg
mov
bound
adc
xor
cmp
sti
enter
inc
ds
iret
mov
jbe
stc
xchg
xor
lcall
shll
xchg
sub
pop
sbb
or
shl
dec
add
or
jge
in
xchg
popa
dec
stos
jp
push
fisubrl
pop
arpl
cld
addr16
inc
enter
out
lcall
mov
add
push
test
adc
and
xchg
notl
sub
popa
nop
out
aam
icebp
push
arpl
and
push
out
cmp
stc
jmp
mov
adc
push
sub
xchg
pop
pop
in
push
xchg
shlb
pop
enter
pop
xchg
ret
ss
stc
mov
sbb
or
sbb
mov
iret
or
int3
mov
sbb
mov
dec
mov
and
pop
xchg
out
mov
dec
or
sub
inc
frstor
cmp
jne
mov
lds
dec
mov
mov
mov
add
sub
xorb
push
mov
jbe
adc
inc
out
jns
xchg
sub
adc
les
sti
popf
in
xor
jne
in
loop
out
fcomip
shl
icebp
in
push
in
arpl
pop
loopne
mov
adc
ficomps
cmpb
or
loop
negb
dec
ret
mov
jnp
icebp
aas
pop
cmc
pop
cmp
enter
mov
dec
lods
sbb
mov
nop
dec
dec
mov
pop
pop
das
fstps
leave
sub
test
cmp
repnz
dec
jge
int
and
outsw
stos
push
daa
pusha
and
sarl
pop
add
jo
mov
mov
or
mov
aad
hlt
repnz
jg
xor
enter
xchg
and
xchg
mov
and
jo,pn
stos
inc
and
and
add
scas
jae
jg
mov
push
adc
push
out
cs
mov
outsl
xlat
xor
popa
std
mov
ja
icebp
xor
in
stc
pop
jbe
pop
mov
shr
out
les
and
loopne
mov
add
jae
fidivl
rcrl
lret
sub
and
jns
lods
add
ss
and
scas
and
jle
xor
pop
gs
or
cmc
inc
fisttpll
xchg
jno
jb
mov
xchg
adc
xor
imul
dec
jge
mov
pop
dec
pop
movsl
sbbb
sbb
adc
shlb
test
dec
addr16
push
ljmp
and
pop
cmc
mov
sub
inc
mov
or
lahf
rcrb
pop
loop
movsb
iret
adc
pushf
mov
add
in
leave
fs
adc
push
cmpsb
add
mov
and
and
jl
sub
daa
xor
jae
adc
inc
push
aaa
cmpsb
fwait
pop
and
add
aas
cmp
jp
inc
iret
mulb
xlat
lock
mov
xchg
jno
nop
ret
sbb
lods
ret
imul
movsb
push
mov
inc
lods
adc
fdivrl
pop
add
ret
idivl
inc
cmp
sti
jbe
mov
pop
mov
jb
adc
jmp
fmull
pop
push
int3
add
hlt
lock
dec
repnz
adc
adc
mov
add
pop
cmc
out
jp
push
pushf
mov
mov
sbb
sti
mov
cmp
sub
jp
bound
fsubs
xor
xor
fisttps
jecxz
xchg
subb
cltd
fs
lret
outsl
aam
and
orb
jecxz
and
pop
adc
mov
test
push
outsl
mov
rcrb
nop
pushl
sbb
fsubrl
loop
lahf
ljmp
popa
xchg
dec
xchg
mov
xcrypt-cfb
cmpsl
arpl
shll
ljmp
rorl
mov
mov
dec
or
inc
ljmp
jne
pushf
das
adcl
stos
out
outsl
dec
cmp
cld
ljmp
dec
jnp
xchg
into
enter
test
dec
push
aaa
lret
data16
inc
aas
or
mov
iret
cld
jg
in
lock
or
iret
out
sbb
jle
xchg
out
sbb
pop
lds
mov
push
icebp
ljmp
ret
inc
push
adc
inc
cmp
push
dec
pop
dec
xchg
mov
movsb
push
jmp
ss
xorb
aam
aad
nop
stos
and
in
mov
imul
imul
ffree
adc
sbb
push
jns
aam
push
cltd
mull
dec
push
xor
cltd
sbb
lds
cmp
pop
or
sub
dec
mov
xchg
cli
in
adc
repnz
mov
pop
in
sub
jmp
pop
dec
sub
jnp
mov
sub
adc
fdivrp
testb
scas
pop
pop
mov
add
mov
sub
adc
pop
jnp
push
test
add
jns
cmpsl
mov
mov
mov
daa
imul
push
sub
cltd
int3
dec
testl
lods
mov
xchg
mov
fwait
mov
pop
adc
sbb
mov
cmp
cld
iret
imul
xchg
dec
mov
lds
xchg
fadds
add
mov
lods
mov
mov
fs
sub
xor
lods
xor
or
jge
xor
out
fdivs
daa
jno
inc
into
xchg
scas
mov
divb
shlb
sbb
xor
repz
pop
lea
mov
bound
pop
mov
xor
jge
fmul
sub
loop
pop
mov
sub
jno
dec
rcrb
cmp
mov
into
addr16
xor
out
sbb
inc
jbe
cmp
rcl
rcrl
adc
stos
es
mov
mov
cmp
or
push
push
cli
jmp
cmc
out
xor
push
xchg
jae
cld
pop
mov
pusha
lea
and
cmp
bound
fcmovbe
push
sub
gs
aad
pusha
mov
jle
jo
lods
jg
cmp
xor
cmp
imul
arpl
push
fstps
cmc
push
xchg
mov
xchg
lret
lods
mov
pop
into
cmp
in
push
adc
cld
pop
pop
cltd
adc
pop
lahf
inc
shll
stos
mov
cltd
sbb
xor
xor
jge
sbb
lahf
test
cltd
lds
push
popf
or
inc
loop
rcr
pop
and
ss
hlt
pusha
mov
xchg
cmp
xlat
imul
mov
popa
out
test
jae
xchg
cmp
adc
or
scas
mov
mov
adc
fsts
popa
mov
test
ja
and
sub
jb
lcall
lcall
test
add
mov
addl
int
push
lret
in
leave
mov
les
lods
lret
sub
cmp
icebp
inc
shll
or
stc
mov
lret
push
fstpt
push
push
xchg
nop
xor
test
adc
and
cmpsb
cmp
fsubl
cmp
xchg
popa
inc
shrl
and
mov
jmp
rcrb
push
adc
test
add
ja
out
adc
mov
xor
push
mov
mov
popa
fwait
das
lock
and
xchg
icebp
jbe
xchg
mov
add
sbb
mov
sti
or
push
aaa
clc
clc
jno
arpl
mov
ljmpw
aaa
daa
lret
ljmp
daa
jle
test
cmp
les
outsl
fdivrl
sub
jp
sub
mov
mov
mov
sbb
cmp
dec
loopne
and
jecxz
enter
and
cli
pop
fdivs
inc
mov
in
mov
testl
iret
jo
cmp
loop
cmp
adc
cs
mov
insl
cld
fdivrp
add
out
dec
or
testl
daa
ret
dec
dec
aas
in
dec
jo
sahf
hlt
cmp
rcrl
sbb
sub
or
push
fildll
xchg
push
rcll
xchg
bound
fsubs
xor
push
repz
imul
scas
std
fisttpl
les
cmp
mov
cmp
ret
shlb
xchg
mov
fistl
inc
and
sub
in
dec
test
xor
lcall
rorl
insb
dec
mov
mov
xchg
pop
push
add
cs
adc
outsl
lret
outsb
jle
mov
bound
dec
repnz
dec
sbb
sbb
test
push
pop
adc
push
jg
mov
rclb
int3
push
or
xchg
mov
das
stos
adc
sbb
fldt
cmp
test
xchg
jg
and
sub
and
or
imul
and
jns
loopne
stc
dec
rcl
divl
mov
daa
arpl
mov
bound
mov
xchg
cmp
fstpt
jg
ret
dec
loop
fiaddl
sbb
rol
pop
adc
jle
mov
push
cmp
push
mov
lcall
mov
movsb
push
adc
xor
ds
lods
int
xor
or
ja
ljmp
andb
js
insl
xor
aaa
loopne
jo
std
clc
adc
bound
mov
outsl
push
mov
int3
jbe
mov
decl
ret
data16
cli
lahf
inc
mov
add
ds
fwait
cmc
mov
pop
jecxz
mov
jl
mov
dec
data16
cmp
jle
dec
cmp
aad
test
sub
mov
jns
lcall
lret
and
jle
inc
mov
ds
arpl
clc
push
sahf
adc
pop
mov
ja
and
sub
mov
add
insl
mov
jno
sub
movsb
add
dec
mov
mov
test
sub
mov
stos
sbb
dec
xchg
xchg
pop
xchg
shlb
mov
jg
push
out
and
or
std
dec
add
pop
mov
jp
xor
test
jo
push
dec
test
outsl
clc
mov
jb
pop
push
cwtl
test
jbe
push
mov
mov
jns
pop
das
shrl
add
pop
sbb
rolb
mov
mov
or
push
jp
xchg
scas
xchg
lods
xor
push
ficompl
add
mov
repz
and
fisttps
lcall
pop
std
dec
mov
mov
sub
xchg
pop
fidivl
xchg
pop
mov
cmc
push
xchg
inc
or
imul
lret
adc
and
push
leave
cmp
pusha
cwtl
outsl
add
fwait
pop
mov
jae
xchg
sub
push
xchg
xor
dec
push
fwait
stos
xor
neg
mov
and
mov
push
mov
dec
sbb
movsl
popa
mov
push
sti
or
mov
pushf
lea
outsl
and
dec
outsl
imul
lret
mov
xchg
imulb
or
nop
mov
rcrb
addl
inc
lahf
add
mov
mov
ss
pushf
outsl
mov
lret
imul
inc
int3
jbe
popf
outsb
mov
mov
nop
inc
pop
testl
dec
daa
and
in
or
mov
rcrb
lock
xchg
add
adc
and
or
pop
shlb
lds
test
sub
inc
hlt
pusha
jnp
inc
pop
jg
js
fists
dec
mov
sbb
and
inc
dec
add
insl
data16
pop
inc
gs
add
lds
add
js
adc
cmp
pusha
repnz
mov
pusha
mull
rcrl
and
outsb
jg
out
rcrb
xor
inc
nop
dec
push
pop
inc
movsl
push
pop
add
inc
xor
scas
loop
or
or
xchg
ja
jmp
jne
dec
inc
sub
jmp
les
pop
scas
je
adc
and
pusha
es
push
push
dec
pop
test
pop
popf
jl
outsb
mov
xchg
mov
mov
fs
maskmovq
or
xor
fisubrs
pop
mov
stc
rorl
sahf
add
sbb
bound
mov
stos
ja
notl
mov
rcrl
sbb
xlat
xchg
lock
sub
inc
inc
loope
cmpsb
mov
pop
push
or
pushf
sbb
jnp
and
int3
aas
xor
push
pop
test
dec
and
fadd
cmpsl
addl
lcall
dec
cmp
test
in
adc
imul
int
aam
sub
mov
adc
ss
out
xchg
dec
lods
pushl
lods
dec
jne
push
mov
sbb
cmp
and
jae
dec
lds
rcrl
fptan
cmc
fs
dec
scas
je
push
std
mov
xor
dec
sub
outsl
mov
push
or
cmc
imul
mov
cs
icebp
xchg
pop
rorb
and
mov
jnp
in
and
int
test
nop
stos
push
and
out
pop
inc
inc
jmp
test
sti
stos
and
popf
mov
cld
and
ret
pusha
push
addr16
push
cltd
sbb
orb
push
or
aam
leave
mov
dec
incb
notb
jg
clc
fcoml
jbe
repnz
movsl
or
stos
daa
xlat
data16
jge
leave
adc
lcall
stos
es
inc
dec
lods
sbb
mov
jae
fucomi
testl
aam
filds
sahf
das
lock
sbbb
xor
lcall
rclb
xchg
push
xchg
push
add
data16
movsl
pop
push
jl
mov
int3
jne
ds
loop
pop
sub
stos
inc
fcom
add
add
aas
bound
pop
pop
dec
push
ljmp
xchg
push
xchg
cmp
in
adc
sub
test
jae
daa
xchg
es
pop
dec
in
push
xchg
push
jmp
mov
cmp
lods
xor
xor
mov
imul
xchg
jle
std
sbb
mov
cs
out
xchg
int
imul
call
inc
jns
mov
data16
lahf
inc
sbb
lods
inc
pop
jecxz
sbb
arpl
out
rcrb
inc
icebp
rcrl
out
fs
or
push
std
daa
or
repnz
inc
test
mov
lret
les
out
inc
ret
les
jmp
test
fsts
test
cmc
ficoms
mov
mov
dec
mov
push
stc
mov
adc
push
subb
push
in
aaa
lret
test
jecxz
xchg
mov
mov
test
push
test
mov
mov
push
mov
aas
lret
and
test
xor
mov
pushf
cwtl
shl
mov
sub
jbe
sbb
and
cmp
inc
dec
mov
mov
pop
arpl
sub
add
push
repz
popl
fidivs
inc
mov
jbe
dec
jno
subb
jecxz
mov
dec
cwtl
jp
stos
fsubrs
push
sbb
test
adc
in
inc
jns
into
push
jecxz
sub
data16
or
notb
fstps
dec
cmpsl
popf
add
push
sub
cltd
lret
xor
js
test
jmp
jge
inc
push
jecxz
xor
shrb
push
jmp
test
call
pop
adc
dec
shrl
insb
fnstenv
lods
pushf
jb
enter
sub
push
fdivp
ds
xlat
xchg
xor
sbb
and
cwtl
mov
sahf
addr16
idiv
push
mov
pop
cwtl
in
cmp
add
jne
sbb
mov
pusha
sbb
fcmovnbe
orl
adc
decb
out
idiv
call
and
add
push
pop
lcall
ljmp
or
pop
and
in
push
sbb
insl
cmpsb
jl
dec
mov
pop
adc
js
adc
and
jb
pop
popf
mov
cmp
sub
jp
lea
xchg
lcall
pop
xchg
inc
int
pushf
sbb
ret
fildll
push
outsb
loop
and
imul
imul
mov
cmpsb
fiadds
mov
xorb
je
push
pop
fbld
das
loope
ss
jb
aaa
xor
orl
lods
inc
test
pusha
loop
roll
pop
in
jg
aad
iret
pop
lods
jae
mov
stos
adc
in
pop
cltd
pop
fldl
ret
test
ljmp
add
lret
or
mov
mov
sub
gs
mov
shlb
adc
xlat
stos
jle
xor
movsb
inc
adc
xor
add
dec
ret
out
and
fbld
add
mov
push
movl
movsl
xor
jbe
sbb
mov
dec
dec
vxorps
lret
in
dec
mov
sbb
jne
mov
cmpsl
rcpps
das
in
sbb
inc
fcompl
mov
sbb
jo
mov
and
xor
addr16
clc
cwtl
cmpsl
pop
aas
add
inc
mov
dec
lahf
adcl
adcl
mov
jge
fwait
xor
imull
pop
mov
insb
xor
xchg
sar
loope
out
push
pop
fdivrp
cmpsb
sub
cmc
xor
loop
mov
into
dec
mov
imul
mov
stc
loop
adc
and
pop
aaa
cmp
xor
test
rcl
mov
mov
sahf
dec
les
cmpsb
cmc
test
dec
push
mul
into
jae
xor
and
aas
push
jg
cs
in
sub
stos
neg
cltd
daa
xchg
adc
cmpsl
enter
adc
movsl
enter
xor
adc
stc
gs
jno
int
daa
cmp
lahf
nop
aam
loop
not
sbb
movsb
inc
or
addr16
mov
and
and
jecxz
js
mov
mov
cmpsb
pop
out
push
xchg
adc
mov
sar
inc
jl
jl
stc
loope
pop
enter
shl
pop
popf
into
and
out
adc
xchg
and
pushl
outsl
orl
cs
or
dec
add
lds
shrl
icebp
stos
push
push
fsqrt
jmp
push
push
in
xchg
mov
in
aas
out
daa
lahf
pop
mov
andl
dec
adc
arpl
call
shll
jae
or
mov
fisubrl
or
sbb
push
jbe
js
faddp
bound
mov
and
lea
lods
insl
mov
pop
pop
rcr
movsb
movswl
inc
data16
test
pop
repz
icebp
into
sbb
pusha
loope
stc
outsl
cli
pop
push
jae
ss
add
and
mov
xor
and
in
addb
in
inc
int3
cmp
mov
lods
push
sbb
call
add
lock
je
jp
pop
icebp
adc
lea
adc
scas
out
add
push
wrmsr
xchg
popf
push
ds
xor
mov
in
lea
xor
pop
rcll
inc
sub
cmc
jle
and
loop
lahf
or
jmp
lahf
adc
inc
incl
mov
lds
jl
movsl
xchg
xbegin
xchg
andb
mov
in
jnp
jns
fs
sub
jb
pop
into
inc
enter
adc
rcll
mov
adc
ret
aaa
jmp
jge
mov
shll
dec
into
mov
cmp
cmc
sbb
into
cli
clc
dec
mov
addr16
add
shlb
imul
int
or
out
cmpsl
aad
jb
outsb
call
leave
add
push
subb
iret
xchg
sub
subb
sbbb
out
mov
dec
jge
pop
xor
jns
daa
mov
test
fsubrs
xchg
jno
test
jo
adcl
mov
dec
cmpsl
pop
loope
in
mov
fldenv
lock
dec
or
push
pop
adc
pushl
insl
xchg
out
add
ljmp
mov
sbb
invd
imul
popa
out
into
dec
movsl
inc
insb
mov
and
stos
cmp
iret
pop
cmp
sub
or
sub
mov
jg
push
xlat
xchg
push
push
cmpsb
mov
mov
adc
mov
das
nop
addl
add
xchg
add
ss
div
aam
add
stos
int3
xlat
out
stos
ret
sub
and
call
lods
and
ljmp
std
out
mov
jl
scas
mov
xor
sub
mov
push
mov
add
xchg
xor
add
push
jge
in
pop
bound
rcrl
enter
mov
ds
cwtl
and
cmc
stos
icebp
aaa
fwait
dec
mov
iret
jo
sti
loopne
test
out
not
lock
subb
imul
fistl
xchg
xor
lods
outsl
dec
mov
and
popa
out
adcb
fs
push
mov
and
push
ret
test
enter
pusha
lds
jg
xchg
adc
push
cmp
ficoms
out
in
loopne
pop
mov
add
and
add
nop
out
mov
jae
test
inc
pop
aad
in
fdivl
shll
inc
push
scas
xor
adc
addr16
cmp
adcl
mov
dec
fwait
mov
cli
mov
sbb
fidivl
jp
dec
test
dec
dec
les
test
adc
dec
fdivs
xor
leave
test
inc
mov
ss
or
push
das
mov
fucom
test
fxch
addr16
inc
adc
fwait
sub
lds
or
adc
orb
xorb
xor
mov
inc
fldt
inc
icebp
mov
mov
and
outsb
pop
xor
inc
xor
or
fcmovne
outsb
idiv
outsl
cmp
out
mov
ret
ds
scas
bnd
outsl
mov
out
adc
out
xchg
popf
mov
pop
jae
test
pop
enter
insl
mov
jne
mov
ret
adc
sbb
push
sub
in
mov
lahf
mov
ljmp
xchg
js
inc
and
jbe
mov
push
jbe
dec
cltd
cmp
sub
sbb
and
mov
dec
mov
mov
inc
adc
rorl
hlt
loop
lods
cmp
dec
push
mov
dec
mov
out
cmpsl
sub
sbb
and
jns
pop
cwtl
cmc
add
mov
stos
inc
sbb
outsb
and
mov
adc
out
add
push
lcall
lods
stos
mov
sub
cmp
in
sbb
inc
pushf
sbb
test
dec
mov
add
xor
mov
ljmp
jecxz
mov
jmp
cltd
sarb
fdivr
loop
and
and
jg
out
and
flds
sub
push
jge
sub
in
mov
sbb
out
push
into
add
jnp
xor
inc
dec
cmp
dec
mov
push
jge
and
add
cmp
jle
out
in
insb
push
or
inc
ficoms
inc
jb
mov
das
cli
mov
lahf
sahf
scas
lcall
xor
xchg
leave
int
jnp
ret
das
jl
enter
xchg
cmp
pop
mov
scas
and
lret
aas
iret
add
mov
ret
lahf
cmp
fsub
in
mov
xor
dec
dec
test
xchg
pushf
test
jns
ret
mov
mov
mov
stos
sbb
adc
push
cmpsb
jge
pop
mov
mov
or
xor
push
pop
fldl2t
lcall
fcomp
test
xchg
daa
mov
leave
enter
aaa
dec
stc
cmpsl
mov
pop
xor
sbb
inc
xchg
mov
jnp
sbb
fstl
push
xor
xchg
dec
jle
les
out
pop
jae
cmp
out
insl
arpl
mov
mov
jbe
lock
sbb
lds
mov
repnz
cltd
push
daa
movsb
xor
sub
xchg
loope
notb
hlt
xor
mov
pop
sti
cmp
out
popa
mov
sbb
std
gs
shlb
into
and
ja
push
js
push
and
mov
leave
dec
cmpsl
imul
inc
sub
int
fs
add
sahf
push
in
mov
sub
dec
mov
and
shrl
repz
sti
sbb
sahf
push
in
sub
inc
mov
xchg
lahf
lods
je
sub
fdivrs
test
or
dec
mov
sub
add
or
push
sbb
jno
inc
test
and
xor
and
jp
stos
push
sbb
adc
add
mov
movsb
add
mov
imul
sub
push
das
cwtl
out
jb
mov
xchg
por
mov
mov
mov
inc
inc
add
jno
jl
pushl
mov
cli
mov
enter
cs
jmp
lds
add
push
int
fildll
sbb
scas
inc
mov
in
dec
mov
loop
cmp
inc
push
out
popa
dec
and
sbb
scas
out
aam
cltd
sub
or
push
outsb
and
js
or
lahf
cmp
mov
push
sahf
push
xchg
mov
int3
das
aam
les
or
jae
adc
sub
or
loop
mov
fwait
push
lods
test
repz
shrl
dec
jno
shll
ret
xchg
jle
cmp
aaa
dec
pop
mov
rorl
dec
jge
lahf
add
pcmpgtb
fidivs
repz
je
mov
loope
lods
or
pop
mov
xchg
ret
notb
or
and
or
jg
xor
mov
sbb
adc
xor
inc
sub
jge
inc
dec
mov
rcrl
icebp
call
jle
mov
sbb
aad
sbb
popa
mov
push
bnd
aad
push
mov
test
and
xchg
lret
loop
mov
int
xor
lret
ret
stc
xchg
repz
sbb
push
fidivl
es
inc
mov
and
jo
push
pop
sbb
jmp
movsb
leave
mov
fistl
mov
je
push
orl
pop
int3
mov
cmp
cwtl
mov
pop
out
xchg
loopne
rorb
mov
icebp
and
fdivrs
addr16
popf
gs
jp
aaa
and
pop
aad
cld
fs
mov
dec
cld
adc
fcoms
outsl
imul
repz
or
sbb
ja
pop
orl
or
clc
jg
in
nop
sbb
mov
aas
xlat
pop
imul
push
sbb
mov
int
insb
jge
mov
push
add
push
cs
das
add
jge
out
sub
mov
fidivrl
jbe
fbstp
shlb
mov
sti
divb
xor
daa
out
ret
fs
sbb
cmp
idivb
xor
popl
dec
dec
test
aam
outsl
dec
mov
fwait
push
sub
and
daa
lods
std
sub
into
incl
rolb
movsl
sbb
pop
xchg
int3
dec
adc
lret
jnp
dec
pusha
push
outsl
shll
mov
inc
dec
icebp
jae
jg
rorl
clc
adc
jmp
push
and
gs
cmpsl
xchg
jp
insl
adc
jb
and
gs
inc
ljmp
xchg
scas
enter
cmp
popf
aam
insl
add
sbb
out
pop
xor
pop
leave
inc
xor
in
lahf
loop
or
call
sahf
loopne
aam
std
mov
stc
xchg
inc
in
mov
inc
shrb
icebp
lods
jne
sbb
pop
ficompl
sbb
add
mov
mov
ds
xor
aas
insb
scas
shlb
cltd
hlt
adcl
stos
in
dec
push
out
cld
lret
pop
xlat
or
jmp
add
pop
inc
cmp
repnz
xchg
adc
cs
mov
pusha
movsl
pop
fiadds
cmp
mov
dec
inc
imull
and
cvtdq2ps
mov
lods
inc
sbb
and
xchg
or
inc
pop
add
stos
nop
and
std
add
jg
and
insl
cs
mov
lcall
cmp
pop
jg
fisubrl
and
add
xor
adc
xor
xor
mov
es
xor
push
cs
cmpsl
adc
push
push
iret
fstpt
add
popf
popa
aaa
les
mov
push
inc
or
xor
std
pop
inc
in
push
xchg
movsb
sbb
mov
add
xchg
test
dec
jmp
jbe
add
fdivs
and
pop
cmc
fcmovnu
adc
and
jne
test
orl
push
ret
and
jno
mov
jl
inc
enter
pop
mov
cmp
cmp
bsr
lods
sbb
in
and
add
fdivl
dec
sti
ljmp
shl
js
cmpsb
mov
xchg
xchg
cmpsb
and
aad
cmp
ret
push
mov
test
sarl
scas
xlat
imul
call
lahf
mov
xor
push
push
push
in
mov
insb
movsb
jnp
pop
dec
loop
push
in
rcr
shlb
dec
insl
pop
adc
pop
mov
jno
testl
lods
sbb
aas
sub
cwtl
pop
add
fimull
and
mov
pop
movsb
push
iret
and
push
lea
lahf
insl
add
xchg
mov
push
or
and
cmpsb
push
jae
bsr
xor
stc
pop
cmp
clc
fisubl
mov
ja
call
outsl
and
sbb
lock
dec
sub
push
inc
pop
inc
lods
adc
xchg
add
out
repnz
lea
push
test
out
std
lods
sti
rorb
loope
jecxz
sbb
sub
xor
jns
cmpsl
mov
ljmp
movsl
cmp
xchg
pop
push
mov
fcompl
testl
pop
into
or
cwtl
stos
leave
or
xchg
shll
ret
fwait
in
lret
icebp
lahf
mov
jno
mov
xchg
pop
mov
mov
lods
cltd
sub
mov
cmp
fwait
bound
push
das
mov
rep
sbbl
mov
lret
sbb
pushf
out
addr16
in
test
sbb
cmp
icebp
mov
mov
out
loope
fsub
jne
pusha
ja
sahf
cwtl
xor
xchg
roll
call
and
outsl
pop
scas
insl
fsubrs
fsubrp
outsb
xor
je
xor
sub
daa
aam
test
adc
adc
jb
call
aaa
sarb
xor
cmp
cmp
push
mov
out
fisttps
mov
jge
movsl
pop
ficompl
sbb
jg
inc
fsts
lock
movsb
xor
imul
xlat
sub
out
cmpsl
scas
lock
jne
lods
push
adc
sbb
or
mov
inc
mov
fistpll
lret
dec
cmpsl
xchg
adcb
std
pop
ljmp
sub
in
sub
pop
test
or
inc
cmpl
xor
rcrb
dec
pusha
rorb
inc
pop
fstpl
xchg
ss
lods
sub
inc
sbb
loope
pushf
subl
cmp
daa
adc
outsl
pop
incb
mov
pop
lret
in
int
lock
pop
mov
sub
sub
pop
mov
dec
movb
gs
ret
in
scas
sub
add
mov
icebp
mov
xor
sub
in
sub
or
jle
sbb
int3
daa
or
mov
push
inc
stos
or
mov
and
imul
into
jg
mov
sub
repnz
nop
ljmp
je
mov
lret
pop
enter
lcall
sub
adc
mulb
jno
in
mov
xlat
rcr
lret
ret
sahf
divb
xor
loope
dec
mov
scas
jp
inc
mov
pop
out
int
sti
xchg
push
inc
jl
xchg
or
fwait
jl
cs
sbb
mov
sub
fiadds
mov
mulb
xchg
push
test
jecxz
divl
int
adc
push
cmp
movsl
xchg
js
xchg
mov
faddp
sbb
enter
out
ja
aam
js
mov
imul
outsb
xor
pop
das
cmpsl
push
jecxz
mov
sti
in
sub
mov
fcoms
sbb
cmpsl
cltd
pop
sub
and
stc
dec
cmovg
insl
std
inc
scas
lock
mov
fildll
xchg
mull
dec
stos
jno
sbb
xchg
aas
sub
div
test
inc
dec
push
insb
sbb
fcoml
popl
and
out
mov
inc
mov
inc
pop
and
out
ss
and
adc
push
xchg
scas
adc
push
xchg
sbb
push
dec
cmpsl
outsl
mov
mov
ss
aam
inc
push
jg
dec
jnp
aad
push
pop
mov
mov
out
push
pusha
push
xchg
mov
daa
add
mov
lcall
mov
ja
les
xchg
sbb
xor
jnp
xchg
dec
cmpb
leave
dec
stos
adc
push
mov
nop
or
insl
mov
sbbb
out
fwait
cmp
or
xchg
pop
orb
ds
iret
dec
jnp
bound
adc
jge
cmpsb
subl
dec
mov
out
mov
mov
add
add
or
sbb
enter
into
jl
mov
aaa
in
and
jle
jg
in
jns
sbb
fadds
jmp
aam
pause
repnz
clc
nop
adc
ret
pop
stos
lahf
addb
xor
ss
add
adc
ret
adc
test
jo
and
or
and
jne
loope
xchg
test
jae
xor
out
sbb
jge
mov
ljmp
fisttpll
call
fcomps
mov
movsb
outsl
jg
push
push
je
jo
xorl
mov
aas
scas
pop
mov
or
idivb
xchg
shrb
inc
inc
push
jnp
pop
outsl
pop
ret
push
rol
adcb
inc
xchg
or
fnstcw
adc
xchg
fnstenv
pusha
mov
or
or
mov
mov
jge
add
xchg
sub
imul
dec
popf
cmc
into
sbb
iret
pinsrw
into
inc
shll
jae
filds
pop
mov
fisubrl
jg
sub
and
out
dec
push
sub
xchg
push
add
ficoms
xor
xor
decl
pop
clc
pop
or
in
add
pusha
cmc
xchg
add
bound
or
mov
mov
pop
lcall
jnp
ja
mov
adc
mov
push
dec
and
sbb
loop
inc
mov
ljmp
jno
jg
mov
inc
sub
adc
cmp
mov
sub
pusha
lcall
or
jns
clc
mov
add
push
dec
js
mov
jns
add
mov
rorl
in
push
stc
dec
add
outsl
sbb
loope
dec
cmp
add
arpl
fldcw
pop
xchg
jecxz
sub
mov
jmp
test
push
adc
das
cmp
fwait
loope
rcrb
pop
imul
mov
aas
dec
sbb
out
clc
stos
imul
lock
test
dec
lahf
or
xchg
orl
push
mov
sbb
inc
lret
sti
mov
lret
fdivrs
add
jnp
fdivl
out
insb
imul
insb
cmp
add
xor
cld
xor
push
insl
mov
into
mov
cmp
dec
shr
adc
lcall
sub
cmp
imul
sbb
jnp
inc
scas
adc
and
js
push
in
xor
mov
stos
cmp
mov
movsl
aas
fs
stos
or
int
pop
sti
shrb
add
insb
sbb
dec
fsts
das
mov
arpl
pop
cld
test
jmp
xor
fiaddl
jae
mov
insl
xor
pushf
mov
cmpsl
dec
loopne
sbb
adc
lea
in
dec
cli
lret
and
scas
in
mov
pop
mov
insb
sti
scas
in
pop
in
xor
pop
push
xchg
add
mov
add
stc
nopl
and
pop
xchg
or
ja
inc
sbb
inc
fstl
ds
mov
xor
pusha
push
dec
aas
mov
xor
mov
pop
xchg
addr16
je
arpl
dec
sub
stos
pop
out
pop
push
je
jg
xchg
rclb
movsb
push
cld
push
and
cmp
xchg
inc
mov
out
mov
mov
cmpsb
icebp
and
mov
call
test
shrb
jp
push
int
jmp
push
xor
insb
push
pop
rolb
push
and
xor
icebp
sub
fmull
insb
movsl
sbb
jg
leave
ja
sbb
js
shll
cld
les
mov
mov
addr16
jb
pop
int
or
xor
dec
lods
fs
out
fidivrs
push
fmuls
fst
adc
mov
jg
push
inc
jg
sbb
mov
je
stos
scas
imul
jg
sbb
push
out
jp
fbld
jg,pt
fwait
sub
xor
rolb
push
testb
add
jg
fstps
test
fldenv
orb
push
cmp
enter
leave
fwait
scas
fwait
add
insb
dec
adc
inc
fcomps
pop
inc
add
and
icebp
fisubs
cmp
inc
mov
and
jg
cltd
add
push
cmp
push
movb
mov
or
dec
orb
cs
cltd
xchg
push
test
pop
xchg
and
ficoml
jbe
push
mov
je
lahf
sbb
jg
cmc
inc
push
popf
dec
push
adc
sbb
mov
in
cmp
dec
jo
jg
daa
ret
jg
sbb
out
sbb
jg
xlat
xor
mov
popa
cmpl
xorl
xor
cltd
sbb
xor
mov
daa
lret
jg
sbb
add
jmp
mov
cltd
add
pop
sub
mov
je
pushw
fwait
mov
pushw
fwait
daa
mov
fbstp
jg,pt
scas
popf
sahf
mov
ret
rol
and
rolb
lahf
add
movsl
fistpl
test
jg
popf
sarb
dec
or
lock
cmpsb
mov
jp
pop
sub
lds
cmc
shlb
dec
lods
int
leave
sbb
rolb
lods
addr16
cmpsb
lcall
je
lods
sub
cmpsl
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
jl
fbld
fs
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
sbb
dec
pusha
add
int3
and
lret
jo
in
pop
dec
leave
cmp
xorps
int
dec
jo
rcr
pop
dec
leave
sub
lret
sbb
mov
mov
shrl
insb
add
int
cs
jo
test
pop
dec
leave
add
cld
insb
add
int
inc
lret
jo
xchg
fistps
leave
push
cld
insb
add
int
push
lret
jo
sbb
dec
leave
mov
cld
insb
add
int
imul
pop
dec
leave
sbb
insb
add
int
movsb
int3
jo
pop
ficomps
leave
loope
cld
insb
add
cmp
fs
and
ja
sbb
xor
stc
jle
sahf
push
scas
das
fstps
rorb
mov
fcmove
fidivs
xchg
adc
or
insl
mov
in
fistps
rcl
mov
mov
fdivs
xor
jmp
out
mov
shrl
hlt
daa
cmp
jne
icebp
add
adc
mov
pop
pop
sarl
aaa
pop
jno
and
inc
inc
push
es
test
js
out
rorb
scas
and
cld
movsl
ror
imul
ds
jle
pop
out
jp
dec
roll
fldl
dec
xchg
adc
adc
cmp
xor
movb
pop
push
mov
and
test
adc
loop
les
in
mov
jp
sbb
insl
loop
adc
jecxz
ljmp
sub
stc
jmp
dec
bound
ficoms
je
fisubs
adc
push
and
push
xor
out
popf
mov
aaa
cld
sub
dec
cmp
pop
ror
and
adc
imul
mov
cwtl
insl
add
insb
push
pop
and
xor
dec
mov
lock
cmp
add
rorl
sub
scas
mov
sahf
xchg
mov
pop
jg
push
pushf
sbb
out
mov
xchg
dec
sub
mov
push
cmp
sarl
or
adc
in
pop
pop
ljmp
mov
pop
and
mov
or
dec
mov
xchg
sbb
or
out
mov
enter
jno
inc
and
data16
cmpsl
lcall
sbb
xchg
xchg
pop
and
lds
mov
lock
sub
mov
clc
push
xor
inc
mov
call
arpl
xchg
arpl
cmc
add
xchg
repz
mov
dec
pop
data16
cmp
int3
xor
jmp
cmp
and
test
xchg
sti
fcomps
sbb
mov
in
jns
mov
xor
clc
mov
dec
rol
sub
andb
test
or
inc
cmp
lods
or
cmp
mov
jle
mov
lods
xchg
and
lret
mov
scas
scas
or
imul
aaa
lods
out
cmpsl
jecxz
xor
cli
add
pop
cltd
imull
dec
push
faddl
decl
add
push
fs
ja
add
test
rolb
jno
sbb
mov
xor
faddl
jo
jmp
xchg
mov
xor
iret
adc
mov
mov
fistpl
js
cmp
mov
xchg
mov
out
movsl
jnp
jne
imul
push
add
push
clc
lahf
or
mov
add
dec
das
setb
xor
int
mov
cli
out
leave
cmp
mov
stc
popa
cli
out
push
into
push
addb
mov
cmp
inc
cmc
fs
push
pop
fwait
in
scas
inc
cmp
push
iret
adc
add
push
jle
adc
jns
out
incl
in
lahf
jecxz
loopne
lods
scas
aas
das
ss
leave
std
pop
cmpsl
std
shll
aam
pop
mov
movsb
jecxz
shlb
pop
aas
aam
mov
add
sub
mov
push
jae
xor
in
or
push
sbb
xlat
lret
idivl
adc
push
out
jnp
mov
jns
call
mov
sbb
pusha
xorb
push
dec
jbe
outsl
pop
pop
out
xchg
push
into
mov
pushf
mov
sbb
sub
jge
ret
xlat
pushl
les
fwait
inc
das
fcmovnu
les
adc
pop
push
mov
pop
push
xchg
out
jp
or
dec
lods
cwtl
imul
inc
mov
push
gs
hlt
out
mov
dec
in
cs
mov
and
sub
or
gs
dec
pop
xor
and
adc
mov
push
out
icebp
mov
xor
and
addb
fmul
shl
lods
scas
jae
enter
aas
movsl
or
jo
jno
rorl
pop
test
decb
cltd
loop
lock
cmpb
repz
imul
sub
neg
adc
imul
cmp
enter
jae
dec
pop
fisttpll
add
inc
scas
mov
or
icebp
push
dec
pop
pop
lret
incb
mov
loope
pop
sbb
pusha
scas
mov
mov
mov
fwait
in
xchg
inc
ret
and
sub
movsl
js
sbb
dec
je
mov
daa
out
xchg
ror
xor
dec
or
addr16
jmp
xchg
mov
jg
lods
fldlg2
mov
and
mov
mov
in
notl
jb
int3
pop
pop
mov
jns
mov
mov
cs
les
in
icebp
aam
mov
push
ss
aaa
mov
sbb
add
sbb
and
mov
int3
cmp
sbb
xchg
stc
push
cmp
sub
in
cwtl
mov
test
test
insl
inc
xor
mov
dec
sarb
mov
movsb
loope
xor
jp
dec
jmp
or
cwtl
mov
push
cmp
pop
cmc
je
add
add
mov
rcl
and
xor
push
int3
sar
dec
mov
cmpsl
test
lods
cmp
js
in
out
lods
jns
xor
mov
sub
cwtl
inc
in
mov
cmp
xchg
imul
pop
jns
add
or
pop
xchg
mov
push
mov
outsl
adc
imul
gs
mov
mov
rorl
rclb
xor
sub
popl
arpl
jmp
jmp
mov
mov
xchg
push
movsl
mov
sub
test
cmp
mov
mov
movsl
xchg
dec
pop
leave
mov
imul
enter
mov
xor
lds
or
nop
and
fldt
out
adc
inc
lret
fcmovnb
out
jge
push
in
ret
cltd
lret
mov
push
mov
addr16
xchg
std
xchg
repnz
dec
stos
insl
outsl
pop
push
pop
popa
xchg
cmp
movsl
pop
aam
fldl
loop
mov
ljmp
jbe
pop
or
negb
push
cmpb
sbb
adc
stc
addr16
das
and
or
aaa
sub
scas
cmp
mov
mov
cs
inc
jle
lahf
imul
sbb
and
adc
adc
fidivl
xchg
cbtw
outsb
inc
inc
lahf
movsl
push
test
jnp
hlt
test
sub
subl
aaa
fldenv
pop
fs
js
fisubl
stos
cld
loop
push
lods
in
adc
xchg
repz
rorb
pop
adc
mov
ja
and
lea
lock
mov
sbb
mov
adc
push
fildll
dec
insb
jmp
xchg
mov
xchg
push
imul
int3
xor
dec
in
mov
or
stos
add
daa
ljmp
push
fbstp
movsb
loop
and
stc
std
lahf
mov
sbb
out
mov
jo
dec
inc
sbb
pop
js
xchg
addr16
sub
fstp
popf
sub
pop
dec
daa
mov
pusha
stos
inc
cmp
jae
pop
push
mov
cmpsl
mov
div
lret
sub
arpl
sbb
pop
test
adc
out
or
dec
inc
ds
call
pop
ja
nop
dec
nop
xchg
je
sub
add
imul
pop
cmc
adc
sub
xchg
mov
push
add
in
sbb
mov
pushf
popa
in
ret
arpl
cli
add
jb
pop
inc
add
xchg
adc
mov
sbb
mov
pop
cmc
inc
xor
or
notb
das
repnz
cmc
mov
mov
jnp
adc
lahf
mov
imul
xchg
aad
scas
push
mov
lret
sbb
push
iret
dec
call
dec
sbbl
fldcw
and
mov
ds
add
lret
rolb
pop
inc
test
fistl
in
push
sub
sub
fsubrl
es
adc
inc
or
sarb
shrb
mov
pushf
jg
cmp
leave
push
push
dec
xchg
xchg
or
stc
mov
mov
mov
cmc
ret
int
xor
pop
test
pop
or
adc
mov
aas
adc
outsl
pushf
mov
jecxz
and
push
out
pop
mov
int3
sbb
repnz
dec
insl
cli
loope
loop
xlat
sbb
push
inc
dec
jp
mov
jae
inc
insl
fwait
pusha
cmp
inc
mov
in
inc
push
or
aaa
inc
inc
mov
sub
jno
int3
push
sub
test
sub
or
mov
xchg
dec
add
outsb
pusha
inc
sub
mov
lret
cmp
sbb
push
fildll
inc
inc
fildl
lds
pop
js
mov
mov
mov
or
add
xor
test
push
fisttpll
in
sub
clc
sub
sbb
push
jl
sub
int3
xchg
out
enter
sub
pop
lds
sahf
jmp
out
out
mov
dec
mov
push
or
aas
sub
shl
push
icebp
xchg
es
pop
out
mov
rcl
inc
push
mov
jns
mov
loopne
inc
mov
pop
loopne
xor
push
sbbb
add
and
int
mull
jmp
push
mov
and
out
xor
dec
adc
jns
ja
loopne
jg
jg
mov
pop
testb
movsb
push
fidivs
es
divb
push
mov
filds
dec
out
addl
sbb
cs
cmpps
imul
jnp
jmp
into
cmpsb
or
jmp
dec
into
insl
int3
pop
mov
inc
fcompl
adcl
cmc
popa
add
lret
cmp
aad
int3
jp
sub
adc
inc
std
mov
incl
sub
pop
xchg
ret
mov
into
ljmp
pop
push
daa
mov
enter
xchg
xor
jb
add
movsl
ficoml
mov
lcall
sahf
movsl
dec
jbe
cs
pop
ja
sub
and
push
xlat
cmp
fcmovb
mov
in
fldln2
daa
nop
andl
fcmovb
and
stc
push
or
out
adc
add
pop
std
int3
mov
dec
lret
mov
aam
pop
out
pop
jle
mov
fidivl
icebp
add
outsl
and
push
and
adc
popa
enter
out
cmc
push
sbb
push
cmp
jo
add
cmp
and
jmp
test
ljmp
stos
cmpl
dec
mov
sub
cmp
cwtl
jae
test
stc
shrb
xchg
push
rolb
lds
lods
outsl
rorb
loope
loopne
fstpt
cmpb
ret
loope
xor
je
add
pushl
pop
mov
pop
sub
cmp
loop
adc
xchg
aad
jnp
les
dec
pusha
mov
xor
mov
dec
ja
mov
out
test
popa
cmc
pop
in
shlb
pop
inc
aad
iret
mov
pop
xor
xchg
out
out
ret
into
mov
aam
mov
push
ja
sub
cmc
out
ds
cmp
cmp
divl
jmp
adc
jmp
xor
fs
lea
and
pushf
adc
nop
pop
xlat
jns
shrl
cmp
ss
in
repz
push
outsb
jge
mov
xchg
mov
movsl
pop
cwtl
test
pop
pop
lods
iret
nop
inc
stos
xlat
shll
sahf
and
adcb
ret
insb
add
aam
es
out
hlt
nop
scas
add
sahf
sbbl
adc
mov
xlat
fs
dec
xchg
lods
rolb
mov
outsb
sbb
sbb
rcr
insl
push
lret
and
ret
rcrl
push
pop
or
out
icebp
dec
or
xor
insl
jbe
inc
enter
push
fs
cmp
outsb
push
jne
cmp
xchg
xor
xchg
fistl
cli
js
sar
dec
adc
data16
aas
jae
jae
push
ljmp
mov
scas
es
and
arpl
cmp
sbb
mov
sub
sbb
lods
ss
adc
call
inc
orb
cltd
sub
mov
and
iret
mov
mov
fwait
sub
out
or
imul
pop
pop
xchg
sarl
les
add
mov
or
subb
inc
cmp
pop
cmpsl
push
sbb
rcr
mov
test
mov
dec
stos
inc
mov
fistpl
mov
inc
lds
cltd
andl
jge
adcb
pushf
popa
sahf
add
mov
or
test
insl
xor
in
out
dec
push
inc
notl
ficoml
inc
dec
orb
sub
pop
sbb
and
xchg
enter
xchg
mov
cmp
incl
xor
bound
mov
lea
nop
fcmove
xchg
into
lea
fisttpl
icebp
jg
jnp
insl
loop
jb
sbb
loope
pop
daa
and
lcall
fbld
lock
jno
xchg
push
dec
jne
or
aas
stos
pop
jmp
or
lret
sti
jmp
sub
mov
stc
les
add
aaa
jnp
jne
sbb
inc
jl
add
cmpsl
pop
sub
pop
popf
imul
imul
and
xor
test
fnstenv
fisttps
mov
mov
inc
jb
push
pushf
adc
fcompl
xchg
js
add
pop
pushw
jmp
mov
fstps
fstps
outsb
testb
nop
out
xor
dec
cmpsl
push
dec
lock
nop
adcl
hlt
arpl
sbb
add
adc
mov
xor
fisubs
out
outsb
add
jge
xlat
js
xcrypt-cbc
cmpsl
adc
ljmp
pusha
mov
int3
popa
arpl
pop
sub
add
inc
mov
mov
sbb
cmp
lcall
push
jne
push
pop
jae
mov
gs
xchg
idivb
or
xchg
xor
int
icebp
test
adcb
push
in
pop
xor
jns
mov
mov
sbb
cs
pause
pcmpeqw
add
data16
and
js
sub
push
pushf
cmp
jmp
iret
fldcw
mov
scas
fdivr
addr16
xchg
mov
jae
adc
sahf
fidivs
inc
cmp
in
adc
mov
icebp
cmp
and
inc
or
jbe
lock
push
or
aad
push
dec
inc
mov
dec
and
scas
push
xchg
and
jns
loopne
stos
out
lods
cmpsl
and
fnstenv
dec
pop
mov
mov
in
push
push
adc
xchg
mov
ljmp
fdivs
in
or
lds
rolb
mov
stc
outsl
mov
pop
call
xor
rcrb
es
mov
pop
cmp
cmp
sbb
sbbl
and
fs
std
mov
sahf
or
stc
data16
ja
sub
into
adc
repnz
in
pusha
push
xor
mov
cmp
jle
icebp
push
push
push
and
pushf
stos
or
bswap
xchg
std
or
add
sub
fstp
push
pop
add
out
push
ljmp
jecxz
adc
fstpl
je
aad
inc
push
mov
xchg
cmpsl
xchg
mov
cmc
in
sub
push
addr16
aas
pop
test
jb
fstpl
cs
enter
xor
je
mov
cmp
cmp
test
ja
xchg
cmpsb
cmpsb
or
out
inc
push
daa
pop
lea
xchg
sbb
cmp
in
daa
test
cmp
aaa
test
push
inc
jns
or
push
dec
push
push
std
push
leave
shlb
std
jmp
mov
decl
roll
or
icebp
fwait
ljmp
add
inc
ljmp
ret
hlt
add
lret
stc
dec
pop
mov
gs
loope
add
sahf
das
push
inc
xor
xor
fsubrl
cmpsl
mov
loopne
push
out
mov
dec
aas
mov
inc
mov
enter
out
xor
test
aas
inc
je
aaa
mov
out
mov
inc
repnz
iret
pop
mov
movsb
fcmovbe
xchg
int3
sbb
xchg
les
or
inc
icebp
bound
scas
outsb
jo
or
daa
faddp
daa
or
inc
pop
outsb
clc
bound
rolb
dec
xor
or
pop
xor
int3
lret
adc
mov
cmp
cmp
pushf
add
jmp
mov
ljmp
in
or
jnp
pop
and
xlat
rcr
xchg
mov
mov
icebp
lret
dec
push
and
mov
inc
mov
mov
pop
mov
push
push
jp
inc
pop
cwtl
add
fmuls
mov
fstl
mov
sub
in
shrl
mov
psllq
push
hlt
cmp
jb
pop
popa
mov
jns
repnz
cmp
jno
popl
dec
mov
jmp
outsb
lods
jns
lret
and
push
mov
dec
lods
sub
xor
mov
out
repz
in
filds
mov
enter
sbb
xchg
dec
xchg
mov
inc
shl
dec
loop
cwtl
lcall
sbb
and
xor
das
inc
sahf
arpl
sti
pop
lahf
cmp
out
jecxz
jne
lret
sahf
push
xlat
xor
pop
inc
mov
add
out
mov
mov
mov
aaa
dec
xor
ficompl
dec
sub
dec
lods
popf
jle
xor
pop
mov
inc
push
cmpsl
xor
xchg
rorb
mov
mov
pop
fwait
in
cmpsb
hlt
pop
pusha
pop
pop
xchg
out
in
out
push
mov
jp
mov
rorl
and
call
int3
dec
adc
cwtl
add
lods
add
mov
shlb
push
xchg
cmpsl
icebp
pushf
inc
and
add
out
mov
sub
push
sub
mov
and
loop
or
movsl
mov
scas
adc
sub
and
repnz
dec
add
stos
sub
adc
jb
dec
icebp
out
jecxz
sub
mull
test
mov
mov
inc
jae
sar
xchg
ds
ja
in
iret
dec
loop
push
test
dec
movsb
jmp
mov
or
xor
stc
repz
ss
inc
fistl
push
sub
add
insb
jo
sahf
jne
clc
fwait
jo
jns
fs
nop
inc
ret
fnstenv
mov
out
jno
mov
jge
sub
dec
test
je
sbb
sbb
je
sti
fcmovu
lea
jmp
cmc
mov
roll
pop
xor
mov
lret
dec
xchg
cld
mov
mov
sbb
fdiv
sbbb
jae
fs
aas
cmp
test
loopne
inc
push
inc
jnp
xor
ret
jge
lods
lods
divb
cmpsb
inc
popa
arpl
push
stos
sub
pop
inc
lods
push
ss
pop
sbb
mov
sub
leave
dec
lret
stos
icebp
adc
subb
cmpsl
add
arpl
shll
xchg
xor
clc
into
testb
adc
cltd
arpl
or
pop
mov
xchg
mov
filds
adc
inc
mov
in
push
push
xor
aam
cld
mov
insl
out
xchg
loop
hlt
add
fwait
in
cld
fs
push
and
push
out
and
inc
enter
fstps
testb
sarl
and
popa
pop
jg
inc
inc
xchg
mov
pop
imul
outsl
in
adc
cmpsl
cmpsl
shr
jp,pn
jb
inc
adc
or
sbb
popa
aas
adcb
out
mov
pop
mov
mov
xchg
inc
data16
jne
mov
mov
popf
cmp
add
scas
shlb
mov
or
in
sbb
push
mov
arpl
lods
arpl
dec
xchg
xchg
stc
and
mov
mov
insl
jl
mov
lea
fcomps
or
inc
and
sbb
push
popf
repnz
mov
push
js
push
int
pop
mov
int
mov
mov
or
out
dec
test
je
push
add
push
mov
fistl
outsb
adc
jmp
or
cmpsb
mov
or
in
push
test
ffreep
repz
cltd
jmp
mov
jnp
xchg
dec
and
add
push
xchg
movsl
dec
mov
xchg
rcll
aas
mov
addl
push
call
aaa
cltd
insl
cwtl
cli
movsb
filds
xor
daa
add
and
push
repz
es
loope
jbe
pop
jl
push
jo
push
pop
and
xchg
pop
mov
mov
frstor
ficompl
cmpsl
lods
mov
xchg
test
mov
or
push
adc
jg
lret
in
loop
aam
inc
in
rorb
push
adc
repz
inc
sbb
mov
test
dec
fildll
aaa
sub
outsb
jle
js
fistpl
sbb
lds
inc
push
out
lock
mov
push
add
insl
mov
dec
mov
mov
dec
bound
loopne
int3
mov
jg
mov
add
sbb
scas
int3
test
jae
xor
pop
mov
imul
dec
lcall
insb
add
and
fildl
scas
addl
addr16
movsb
imulb
xchg
or
out
and
add
in
cld
cmp
jle
test
imul
insb
xor
es
sub
enter
mov
xor
adc
adc
sbb
out
jecxz
cmpsl
inc
lock
js
adc
or
cmp
push
mov
jle
xlat
inc
dec
clc
sahf
push
xchg
pusha
imul
cwtl
rcll
testb
repz
ret
push
xor
or
adc
xchg
in
sbb
je
faddl
scas
sar
jns
pop
dec
in
sahf
inc
pop
fimuls
or
ret
mov
mov
hlt
stos
pop
xchg
mov
pop
jo
je
mov
loop
fidivs
inc
cmp
sbb
or
lods
dec
jecxz
mov
arpl
adc
xor
stos
mov
jnp
or
pushl
repnz
fists
daa
mov
xor
xchg
stos
fldcw
lcall
push
imul
cmp
add
jle
add
add
xor
xor
xchg
add
jo
adc
loope
or
pop
movsl
ret
aad
pop
adc
enter
in
jle
cmp
jo
dec
xor
jnp
std
cmp
mov
jge
cmp
nop
mov
adc
cld
adc
mov
stos
push
popf
lahf
lock
sbb
xchg
lcall
mov
adc
or
mov
jl
repnz
out
ret
and
mov
cmp
fisubs
push
gs
arpl
fistpl
pop
sub
cltd
mov
gs
mov
out
or
cmp
iret
orb
adc
add
mov
jl
jecxz
fstpl
mov
movsl
leave
pop
mov
pop
js
and
std
cwtl
das
roll
xor
or
bound
inc
fistpll
add
into
push
xchg
jg
ret
test
cmp
xorl
insb
int
mov
into
xor
mov
add
arpl
fstl
cmpsb
dec
fucomi
push
add
sbb
cmp
dec
pop
inc
and
dec
insb
push
mov
sbb
mov
lds
push
test
pop
jae
xchg
mov
out
and
push
push
mov
les
es
or
mov
jnp
dec
js
add
and
fimull
mov
loope
jne
adc
xlat
rcrl
popf
lods
sub
xor
inc
adc
aaa
sbb
pop
rorb
mov
aad
push
or
pop
ret
adc
fdivl
std
dec
push
push
xor
sti
popf
nop
and
mov
loop
sbb
aas
cmpsl
cwtl
push
push
ret
pop
jp
mov
mov
xor
hlt
push
and
imul
test
xor
mov
imul
inc
xor
imul
cmp
pop
and
orl
xor
aad
jbe
iret
jo
shlb
gs
test
repnz
fimull
cwtl
insl
test
movsl
movsl
icebp
ds
fiadds
aam
es
push
pop
inc
jnp
cli
dec
int
jge
push
push
adcl
outsl
push
cli
or
jo
mov
mov
rol
test
mov
and
int3
test
mov
cmp
cltd
cmp
pusha
and
push
add
fdivrp
cmp
push
mov
inc
inc
and
sub
and
mov
setbe
notl
repnz
out
inc
cmpsl
mov
test
pop
jmp
ret
xor
popf
outsb
movq
xchg
mov
mov
adc
push
mov
mov
fnstenv
mov
inc
push
sub
imul
ljmp
nop
shr
lea
imul
sub
jo
push
adc
je
add
push
add
sub
push
je
into
mov
inc
scas
fmull
mov
popa
std
cmp
pop
mov
cmp
adc
imul
lahf
mov
adc
insb
lahf
cmp
call
xor
pop
sub
in
dec
test
cmp
jae
loope
shlb
ss
out
push
mov
push
call
push
push
std
cmp
dec
jl
cmp
sub
push
and
mov
mov
pushf
sub
ja
jne
rorb
ljmp
inc
frstor
movsl
setb
std
imul
push
orl
or
dec
lds
mov
inc
shrl
xor
xor
push
addb
xor
push
inc
and
sbb
mov
pusha
je
push
xlat
aas
rolb
xchg
cmp
bound
pushf
leave
scas
ljmp
imul
les
hlt
pushf
lock
mov
clc
pop
insl
inc
test
movsb
lods
add
sbb
leave
push
ljmp
cmpsl
xchg
notl
js
testl
fistpl
aaa
sahf
ret
and
mov
movsb
out
or
loope
mov
pop
stc
out
mov
add
addl
xchg
xor
adc
cmc
mov
mov
push
xchg
lret
lcall
mov
mov
das
cld
sub
pop
sub
ret
lret
fwait
jo
sbb
aaa
aas
mov
movl
lock
in
roll
cmp
imul
lea
jecxz
leave
sub
mov
arpl
loopne
add
pop
divl
repz
jge
sub
jae
rolb
scas
js
sbb
jmp
out
push
jg
cmc
in
push
hlt
popa
pop
ds
and
mov
outsl
add
fstpl
dec
outsb
push
iret
xor
les
adc
stos
mov
movsl
dec
fs
ds
scas
add
cmp
fldenv
movsl
inc
fcoms
xor
add
inc
outsb
in
inc
mov
inc
adc
push
pop
mov
les
stos
sahf
xlat
jae
pop
jae
fcmovbe
and
lock
test
mov
cmp
dec
mov
into
dec
hlt
dec
in
push
and
lea
inc
popf
pop
sar
lahf
or
mov
sti
adc
sbb
xor
sbb
push
into
sarb
lcall
jle
or
pusha
aam
xchg
fldenv
xor
lock
inc
test
jne
cmc
add
call
jb
inc
xlat
mov
gs
push
mov
cmp
jb
jo
pop
fstl
imul
loopne
mov
dec
or
test
inc
jno
pop
and
mov
lahf
hlt
inc
sarl
jo
fmull
in
push
push
mov
rolb
sbb
cmp
and
mov
out
lods
adc
adc
decb
out
xor
scas
dec
mov
test
divb
in
mov
mov
push
mov
mov
ss
jmp
lock
les
sub
popa
mov
mov
arpl
jbe
icebp
and
cmp
adc
sub
jno
mov
aad
shlb
lods
test
cmp
and
std
xor
aas
dec
into
cmpsl
or
add
xchg
pop
imul
sti
leave
ret
cmpsl
push
push
adc
xor
in
out
mov
push
ficoml
into
mov
outsb
jle
ds
lcall
out
addr16
add
add
aam
test
add
add
xchg
lds
sbb
pop
xlat
push
aam
fidivrs
mov
add
loopne
popf
mov
std
mov
std
push
rolb
loop
popf
roll
dec
sub
mov
lods
mov
push
aam
xchg
int
sbb
xchg
cmp
fists
push
cs
pop
xchg
jnp
cmpsl
inc
inc
or
sbb
fildl
mov
outsb
movsl
push
imul
jnp
gs
mov
add
or
xchg
xor
bound
sub
jp
push
xchg
cmpsb
and
and
bound
aaa
or
adc
mov
sar
push
xchg
movsl
shll
in
ror
lea
push
add
xchg
std
loope
cltd
xchg
sbb
xor
push
rolb
and
test
test
push
xor
add
sub
rclb
push
das
pop
mov
int3
movsb
jg
out
std
pop
shrb
xchg
push
cmp
pop
cmp
in
leave
fisubl
mov
out
shl
jmp
inc
mov
cli
mov
fwait
adc
gs
or
xorl
sub
inc
xchg
stc
out
dec
jge
arpl
fstpt
jg
jns
cmp
pusha
inc
testl
aad
scas
dec
divl
call
xchg
jl
test
cmc
pop
cmp
jnp
pop
and
aas
cmpl
push
dec
push
cli
adc
out
das
dec
or
das
sahf
fisubl
daa
jmp
mov
into
cmp
ljmp
pop
pop
ja
lock
xchg
idiv
std
inc
sbb
mov
sbb
sub
xchg
xchg
icebp
mov
mov
push
test
arpl
out
mov
adc
aas
sti
cmp
sbb
dec
lahf
sbb
fimuls
mov
fnstsw
iret
adc
scas
outsb
cli
sarb
pop
addr16
sti
add
ljmp
ror
mov
pop
repnz
das
ds
inc
iret
inc
xchg
cwtl
test
inc
fstpl
movsb
lcall
ss
les
cs
jbe
or
movsl
pop
inc
mov
adc
sar
push
lea
sub
mov
pop
and
push
loop
daa
mov
insb
or
mov
jl
push
cmp
sub
insb
stc
stos
fstps
and
pop
fnsave
out
jo
mov
or
pushf
in
push
fdivrp
push
imulb
cmp
cmp
test
jne,pt
pop
pop
scas
cli
cli
movsb
stc
loope
andb
or
mov
lahf
je
add
inc
or
mov
lcall
pop
or
imul
scas
mov
adc
add
cwtl
pop
inc
xlat
xchg
dec
mov
fists
pop
inc
js
inc
fwait
pop
and
or
cmpsl
sub
cmp
in
cmp
fwait
scas
sbb
imul
arpl
lock
add
or
cmp
lea
mov
mov
or
jmp
push
or
addr16
pop
in
lods
mov
sub
mov
add
mov
xchg
loop
pop
in
cmpsl
out
lret
push
lock
push
dec
mov
jbe
lahf
je
int
fs
cmp
outsb
repz
jecxz
daa
mov
fistpl
int
mov
sti
push
inc
dec
insl
lds
out
cmpsl
dec
xchg
cmp
cmp
xchg
loope
xchg
and
sbb
sbb
add
xchg
cmp
lret
jmp
cmp
jecxz
dec
and
push
sub
inc
iret
stos
andl
inc
xchg
pop
inc
xchg
or
int3
dec
sbb
pushf
xchg
fimuls
cmpl
mov
outsl
inc
xchg
mov
jns
mov
and
movsb
shlb
adc
shr
std
sub
fwait
inc
sbb
jbe
push
js
js
sub
leave
lea
filds
mov
mov
xor
popf
fwait
out
test
fimuls
inc
jb
in
jp
scas
cmp
cmp
jecxz
aad
push
mov
rcll
sub
cmpsl
push
test
and
movsb
mov
ret
mov
or
inc
into
dec
roll
xlat
cmc
or
shll
or
adc
push
xchg
out
adc
loope
xor
sbb
sbb
sbb
ficompl
in
and
xchg
leave
push
mov
cltd
in
mov
daa
pop
dec
jecxz
fistps
dec
jge
pop
fwait
ret
jecxz
sahf
scas
enter
ja
add
cltd
sbb
leave
sbb
pop
jbe
lahf
lret
aas
cmp
int
adc
scas
dec
divl
dec
jne
cmp
mov
rcl
push
in
cld
pop
testl
data16
adc
das
pop
into
in
pop
xchg
fstpl
mov
test
and
inc
add
repnz
inc
inc
js
cltd
mov
adc
fisttps
or
sub
ljmp
and
and
int
pop
enter
test
lret
scas
notl
sbb
adc
sti
icebp
imul
mov
fstpt
inc
jnp
cmp
sub
inc
je
fidivrs
mov
scas
mov
pop
push
and
mov
out
lds
cmp
imul
adc
dec
xlat
jge
into
call
cltd
add
mov
sub
addr16
hlt
sahf
out
jne
push
mov
sub
xor
mov
pop
push
dec
scas
scas
or
adc
into
mov
and
push
dec
cmp
mov
mov
inc
inc
and
pop
dec
cwtl
ficoms
jne
in
sarb
insb
inc
jl
and
cmp
jle
out
notl
add
xchg
push
in
mov
jne
test
lock
jo
xor
cmp
cld
movsl
mov
cmp
dec
push
jge
jmp
push
and
xchg
mov
adc
cmp
hlt
add
stos
idivb
fldt
nop
mov
cli
and
push
sti
mov
lds
nop
ret
inc
roll
out
mov
imul
lret
int3
mov
xor
mov
pusha
adc
sub
test
or
pop
imul
popa
adc
leave
jae
outsl
dec
adc
fbstp
int3
push
mov
jge
fldl
ffree
frstor
sahf
xchg
jb
movsb
and
out
dec
sahf
jg
push
xchg
imul
repnz
mov
sub
ds
add
icebp
int3
inc
add
cs
jmp
scas
push
dec
mov
mov
jo
xor
aam
arpl
mov
fdivs
mov
mov
sbb
js
es
lahf
mov
dec
enter
mov
je
mov
adc
jecxz
cmpsl
lds
leave
xchg
nop
scas
or
cmp
sbb
in
pop
mov
mov
pop
cmc
idivl
or
pmullw
enter
mov
std
ror
sub
fbstp
mov
xchg
insb
mov
dec
js
nop
cmpsb
cmc
fsubs
test
daa
das
push
and
or
xor
outsb
cli
ror
nop
lods
std
mov
sbb
out
enter
mov
push
shll
or
shrb
xor
stc
dec
dec
push
adc
popf
sub
pop
iret
cmpsb
jbe
xor
adc
jb,pn
xor
mov
jmp
push
inc
shll
loopne
outsl
aaa
les
fbld
pop
rol
stos
or
outsl
jae
xor
pop
inc
inc
jne
jmp
pop
pusha
mov
data16
sub
pop
cmp
cli
adc
and
fsubr
cs
scas
scas
into
fsubp
adc
and
add
xor
shrb
xor
or
mov
xchg
add
pop
push
cmp
cmp
or
or
int3
xor
adc
or
jb
push
call
dec
or
xchg
or
outsb
sub
in
jae
stc
repnz
dec
lock
outsl
sub
add
pop
xor
out
out
mov
sahf
adc
mov
jmp
sub
xor
add
pop
in
cli
pop
mov
popa
aas
test
gs
shll
and
or
adc
adc
and
out
aas
inc
popf
ds
sub
inc
mov
and
stc
in
jns
mov
inc
push
sub
in
ja
stos
sti
xchg
daa
jecxz
cmp
ret
int
xor
movsw
mov
push
sbb
lds
sbb
into
movsb
jae
ds
int3
cli
cmp
js
cmp
push
arpl
das
out
icebp
pop
aad
push
xchg
sti
xchg
rolb
cmp
loop
dec
push
ret
mov
out
sub
inc
insb
fnstenv
enter
push
xor
out
popf
fnstenv
add
ret
movsl
and
xor
subl
es
inc
cmp
ffreep
psllw
or
push
aas
ret
and
xchg
cmp
imul
xor
fidivl
xor
jg
out
outsb
mov
mov
ret
mov
xorl
gs
lahf
mov
stos
lds
jge
and
pop
xor
lods
and
filds
cmp
xchg
mov
adc
test
cmp
stc
pusha
jl
dec
cmp
je
shrb
std
aas
pop
jecxz
jl
mov
das
push
addr16
scas
in
pop
mov
inc
sub
pop
popl
sbb
lea
popa
mov
pop
mov
adc
xor
orl
addl
sub
xor
stc
xor
mov
adcb
arpl
adc
insb
mov
data16
ror
frstor
xor
fisubrl
cmpsb
int
out
lcall
xlat
xchg
dec
cmp
push
testl
leave
add
jbe
push
push
inc
cmpsb
fcmovu
lea
jmp
sbb
into
aad
and
out
xor
jnp
pop
fdivs
and
ds
mov
mov
popf
jbe
jl
movsb
out
in
adc
inc
mov
pop
mov
adc
mov
shl
add
mov
xor
cltd
ror
xor
sub
push
pushf
into
movsb
lea
imul
mov
addl
cmpsb
test
and
cmp
repz
sbb
jae
icebp
in
js
sbb
jmp
cmp
arpl
and
stos
pop
test
ja
imul
adc
add
ret
ret
sub
pop
ja
in
aaa
inc
lds
xchg
push
ss
and
lret
jmp
pop
icebp
push
fistpl
xchg
jg
and
mov
enter
out
xor
add
into
mov
xchg
movsb
in
pop
out
sbb
mov
loop
lock
push
addb
popf
shll
mov
fcoml
cld
cs
daa
mov
and
call
and
incl
divl
mov
pop
mov
pop
and
or
fsubrs
loop
fidivrs
cmpb
insb
cmp
test
adc
fs
add
cmpsl
shll
addr16
push
push
lock
or
ljmp
cltd
inc
cmp
xor
out
push
inc
pop
mov
add
add
andb
lret
lea
sub
push
outsl
mov
in
xorb
shrl
fistpl
xchg
mov
pop
adcb
leave
add
lahf
addl
mov
sub
pop
xor
xchg
dec
xorb
cmp
insb
jl
xchg
rclb
in
insl
pop
cmp
xor
add
daa
nop
sarb
shlb
jo
repnz
pushf
xchg
jecxz
in
jmp
mov
ret
cld
add
sub
nop
gs
sbb
xchg
pop
sbb
outsl
in
nop
push
adcl
jae
jbe
sahf
nop
repnz
std
mov
add
cld
mov
push
and
and
xor
and
repz
into
add
addr16
mov
popf
adc
and
fucomp
ss
rorl
sbb
sub
aas
adc
das
int
movsl
add
xchg
addb
orb
aam
lret
or
shlb
pop
and
pop
repnz
pop
xchg
cmpsb
or
inc
cmp
push
fmuls
mov
sub
cmp
add
in
cld
mov
xchg
inc
pop
jp
cwtl
pop
mov
push
in
in
sub
aad
push
ds
xor
icebp
xchg
stc
call
shlb
sbb
clc
xor
sbb
insl
inc
cmp
xor
pop
pusha
test
in
cmpsb
je
ss
and
iret
cltd
adcb
movsl
mov
je
test
add
lock
loopne
sub
pop
mov
push
lcall
pop
and
pmulhw
test
lcall
sbb
xlat
ss
push
cmpsb
xchg
mov
ljmp
xchg
repz
jl
shrl
dec
js
mov
roll
fsubs
aad
jmp
adc
dec
es
mov
mov
mov
lcall
movlps
pop
out
stos
cmp
mov
and
cmp
lret
pusha
das
add
cwtl
cmp
pop
add
push
xchg
in
popf
or
lods
out
fstpt
jno
inc
jle,pn
dec
push
aad
ja
cmp
dec
push
mov
sti
jb
mov
pop
int
cwtl
ret
outsl
mov
xchg
mov
inc
xor
das
repz
daa
pop
aas
scas
ljmp
pop
and
sbb
pop
leave
dec
inc
insl
dec
jge
xchg
push
gs
cmp
andl
loope
cmp
fnsave
xchg
adc
data16
test
test
rcr
insb
inc
jle
ljmp
pop
jle
xor
mov
cmp
sbb
loopne
sbb
arpl
repnz
popa
das
xchg
ds
out
rcll
sub
mov
pop
cmpsb
mov
xchg
and
out
roll
cmp
or
ja
sbb
aaa
xchg
das
ffreep
mov
dec
xor
aas
and
call
and
bound
sub
xchg
dec
insb
into
sbb
jno
sbb
push
cmc
mov
mull
xchg
adc
mov
and
jbe
rclb
out
cmp
mov
push
dec
dec
jae
sub
nop
inc
insl
and
dec
call
lds
cmpsl
test
xchg
daa
jle
pop
mov
test
and
push
sub
scas
data16
xor
mov
dec
cmp
and
xchg
dec
flds
cs
xchg
mov
xorb
and
lret
adc
enter
cwtl
lcall
pop
nop
ds
popf
popf
mov
test
xchg
iret
test
pushf
loope
imul
mov
xlat
push
mov
cmp
test
dec
popa
sahf
and
xchg
rcll
popf
addr16
jp
pop
jae
iret
imul
loope
push
pop
cmp
add
int3
cs
xchg
or
inc
jno
out
dec
popf
mov
aaa
jae
push
and
xchg
dec
xor
pop
test
push
mov
xor
movsb
adc
pop
xchg
insb
ds
aas
out
mov
sbb
mov
sub
lahf
push
cmpsl
es
mov
iret
xor
je
test
pop
or
inc
jne
adc
sbb
jnp
inc
mov
andl
and
lret
jb
mov
xchg
xchg
pop
push
push
scas
dec
enter
fldt
ret
mov
in
enter
or
mov
inc
leave
int3
dec
sub
lahf
jne
cmpsl
mov
movb
mov
test
popf
lret
sarl
sub
sbb
jl
mov
dec
fiadds
and
in
pop
xchg
fiadds
adc
push
cmpb
scas
adc
adc
pop
insb
mov
and
jecxz
ret
or
fwait
arpl
or
shl
rcrl
mov
sub
xchg
add
pusha
inc
insb
mov
es
fwait
add
cmpsl
jge
paddusb
add
jge
aam
faddl
xor
inc
cwtl
out
scas
or
stos
pop
sub
js
mov
and
dec
mov
lret
stos
xchg
les
inc
mov
test
push
cmp
notl
test
push
xchg
je
and
cld
aaa
sub
mov
scas
movsb
or
jle
sbb
aam
mov
or
mov
mov
cmp
lret
fucompp
fs
xchg
mov
hlt
nop
and
popa
or
daa
push
mov
jno
aaa
sub
jne
test
adc
dec
fildll
jmp
cmp
fdiv
mov
testl
idivb
ja
dec
inc
jno
and
ret
dec
loope
fcoms
xchg
xchg
aaa
sub
or
ja
rol
dec
mov
or
xchg
pop
xlat
adc
dec
jne
jne
sub
test
mov
mov
dec
mov
popa
push
bound
push
add
cmc
lock
repnz
cmp
fwait
or
inc
insb
xchg
xchg
fistpll
rcr
fistpll
jmp
or
aad
pusha
ret
sbb
and
lock
aas
scas
pop
xor
mov
movsl
shrb
aaa
and
cld
rcl
push
xchg
xchg
sub
ror
pop
or
inc
push
pushf
or
and
fsubrs
jbe
xor
cltd
push
aam
mov
jnp
cmp
mov
inc
or
mov
xchg
push
sbb
aad
test
lods
inc
jbe
pop
xor
xlat
aas
xor
ret
xor
decb
mov
je
mov
scas
lock
mov
xor
imul
popa
mov
mov
and
sub
insb
sbb
lock
call
ret
adc
inc
std
jle
mov
pop
int
xor
jle
rcrb
fmull
outsb
dec
jle
xor
loop
mov
arpl
fwait
jnp
testl
div
mov
inc
in
in
inc
mov
fcmovnb
mov
mov
push
xchg
out
fmuls
pop
sub
fnsave
adc
dec
cmp
mov
inc
mov
xorb
jl
mov
add
test
enter
mov
inc
sbb
lea
loope
xor
std
push
inc
outsb
jbe
popf
lahf
or
adcb
int
popl
mov
jmp
fs
cmp
ret
arpl
or
fildl
sahf
add
dec
cmpl
fsubp
lret
nop
lret
mov
push
loop
xor
inc
cmc
jae
mov
movsl
or
cmp
and
lods
xchg
push
push
sarl
pop
das
lods
xor
cmpsl
mov
inc
sbb
pop
mov
rcrl
and
or
ret
or
rclb
jmp
push
mov
or
int
daa
jo
popa
mov
jns
pop
xchg
fimuls
sub
mov
rcll
jns
jno
fs
cwtl
ds
sarl
lds
imul
loopne
mov
insb
enter
aaa
nop
adcl
add
cld
xchg
mov
cmp
cwtl
loop
xchg
into
cld
push
cmpl
pop
inc
ja
pop
enter
sbb
jne
into
aas
lret
cltd
xlat
cmc
push
mov
lods
sbb
sub
add
andl
in
lcall
leave
mov
lahf
pushf
pushf
into
add
popa
sub
imul
gs
sbb
cmp
and
jl
or
dec
js
mov
andl
jmp
mov
test
cltd
jmp
nop
fdivrs
mov
fs
arpl
mov
test
add
jmp
mov
push
arpl
in
pop
jl
lahf
in
mov
jo
out
or
test
ss
adc
divl
cld
lret
mov
jp
popf
xor
out
cmp
dec
in
aad
push
pop
lock
jmp
repz
mov
xchg
pop
jge
add
pop
ljmp
mov
dec
mov
cmp
aas
mov
testl
imull
jge
mov
movsl
sbb
out
inc
pop
cmpsl
pop
enter
add
mov
and
mov
mov
cld
into
xchg
bndldx
dec
and
clc
jnp
jns
pop
clc
pop
mov
pop
push
jge
sbb
je
popf
dec
pop
in
and
sub
dec
cli
dec
cmp
lods
xchg
inc
jbe
movsb
add
pop
sbb
push
dec
xorb
mov
jno
lock
test
out
pop
loopne
ud1
test
dec
js
movsl
mov
mov
xchg
mov
lds
popf
scas
fcomps
add
roll
ret
cmp
bound
scas
dec
movsl
movsb
push
jb
sub
xor
jb
mov
sbb
mov
icebp
mov
sub
lock
sbb
adc
sub
pop
sub
ljmp
sarb
stos
scas
mov
jg
sbb
sbb
xlat
mov
xor
mov
mov
push
bound
stos
sbb
addr16
enter
out
outsb
jns
cmpsb
arpl
adc
cmp
es
dec
mov
xlat
mov
jnp
adc
or
out
test
sarb
ficoms
or
dec
pusha
clc
lods
ss
int
inc
xor
push
popf
fistpl
js
stos
pop
scas
jecxz
mov
jbe
mov
and
shlb
pop
jg
mov
icebp
cmpsb
pusha
or
jo
lcall
notb
mov
shl
jo
imul
repz
jne
dec
dec
outsb
push
mov
fwait
aad
mov
mov
inc
push
xchg
ljmp
fcmovnu
pop
lahf
dec
adc
jo
inc
lcall
pushf
ss
dec
sbb
outsb
cmp
mov
lods
and
lcall
cmp
in
lret
daa
push
lods
adc
pop
mov
and
xor
fnsave
aas
dec
jne
or
ds
sti
dec
insl
lcall
jbe
mov
xor
inc
dec
cmc
es
pop
xchg
js
je
mov
adc
mov
mov
out
or
repnz
stos
or
pop
test
xchg
mov
inc
add
jns
add
aam
adc
insl
cmc
ss
mov
pop
test
in
cmp
imul
jne
insl
outsb
push
jge
sbb
sbb
das
lret
sar
lcall
rcrl
shlb
les
dec
push
adcb
dec
aam
inc
sub
cwtl
mov
data16
testb
mov
cmp
inc
add
fxch
mov
jae
cmp
ffree
aas
movsb
notb
mul
inc
lds
mov
scas
dec
add
xchg
nop
addl
inc
jbe
rolb
pop
mov
insl
sahf
inc
xchg
inc
mov
cmp
pop
mov
dec
movsb
adc
adc
incl
adc
mov
loope
lds
dec
mov
daa
mov
inc
fnstenv
mov
cwtl
jo
dec
out
je
gs
cmp
inc
je
aad
push
es
jne
shrb
leave
aad
getsec
mov
mov
pop
movsb
inc
jge
push
cmp
roll
mov
pop
incb
pop
addr16
push
mov
adc
outsl
int3
aam
push
sub
ja
lret
pop
jge
sbb
inc
or
fisubl
inc
push
fdivs
sub
xchg
les
movl
mov
cmp
pop
mov
xchg
dec
push
lret
mov
flds
inc
lds
or
mov
mov
xchg
adc
bound
adc
ret
sti
xchg
jmp
xor
push
sub
sub
jns
xor
dec
int
push
mov
fldt
mov
nop
loopne
add
shrl
and
lock
gs
pusha
dec
inc
int
lods
sbb
mov
sbb
aad
mov
call
test
adc
test
mov
pop
test
dec
xchg
push
mov
sub
fs
test
add
fwait
imul
sarl
mov
loop
jecxz
lret
testb
imul
dec
xor
mov
push
int3
inc
cltd
arpl
dec
jbe
fsubr
loop
jle
std
or
lock
in
mov
out
mov
xlat
and
lds
adc
scas
cmp
dec
in
cld
out
mov
sub
pop
xchg
sar
and
cmpsl
push
mov
mov
stc
iret
xchg
sub
in
cli
lea
fs
repz
lea
sub
adc
xchg
pop
daa
lea
aad
xchg
out
aad
add
popf
mov
mov
mov
or
mov
push
sub
stc
xchg
push
or
stc
fcompl
xor
movnti
xor
push
push
cmp
mov
shrb
sbb
adc
out
jecxz
popf
in
outsl
mov
cmp
mov
outsb
mov
adc
aam
mov
testb
mov
mov
shlb
xlat
or
xchg
jo
fistl
pop
push
and
mov
cli
pop
xor
cmp
stc
cmp
hlt
popf
sub
popf
cld
sub
mov
sub
shll
pop
xor
sahf
or
test
je
repnz
scas
sub
xchg
push
loop
and
iret
jnp
or
mov
mov
rolb
mov
pop
pop
adc
fstpt
test
mov
inc
cli
push
mov
jne
ljmp
bound
int3
mov
daa
aaa
cltd
xor
mov
leave
sahf
ficompl
ss
mov
leave
lret
jmp
daa
jmp
inc
jb
push
xchg
into
or
flds
mov
cmp
fcomp
jmp
adc
xchg
aad
dec
out
adc
add
out
cld
dec
mov
inc
xor
aad
loop
shll
and
push
fcmovnb
jno
inc
fdivs
xor
hlt
add
adc
mov
test
out
sub
shll
and
pop
and
xchg
pop
lret
cmp
or
push
or
pop
aaa
enter
lcall
inc
test
cwtl
dec
push
mov
dec
or
lods
lret
jnp
mov
sti
or
shrb
lock
and
clc
sbbl
mov
lcall
jae
jmp
jne
fisubrs
in
dec
inc
mov
jno
dec
dec
push
adc
or
jno
hlt
test
sbb
or
fiadds
mov
mov
or
mull
sti
push
or
and
iret
lock
fnstcw
and
push
into
cmpsb
aam
cmp
sbb
jp
mov
sahf
insb
bound
xchg
test
lock
xchg
mov
xchg
mov
mov
in
mov
mov
stos
pop
adc
call
xor
std
or
nop
clc
insl
test
daa
jl
sbb
xlat
xchg
or
mov
xchg
mov
test
hlt
orb
aas
je
dec
imul
inc
scas
cwtl
repz
push
imul
mov
push
sti
pop
mov
inc
cmp
js
dec
xor
xchg
shl
cmp
add
mov
jae
jb
push
xor
or
fistps
movsb
add
xor
fidivrs
adc
orb
lea
dec
push
lea
and
cmp
mov
mov
xor
ficompl
sbb
dec
push
xchg
and
mov
js
sbb
fldt
mov
rcl
scas
adc
add
out
sub
mov
push
in
jg
js
pop
sbb
dec
dec
lock
mov
imul
jb
test
mov
cwtl
stos
jl
scas
mov
pushf
jbe
sbb
mov
push
push
scas
xchg
adc
sbb
ljmp
mov
add
pop
xor
adc
cmpsb
cmp
stos
push
dec
cmp
ds
pusha
sub
jle
or
jl
push
negb
hlt
fsubr
push
es
push
hlt
cmc
lret
lahf
out
dec
or
xchg
sbb
test
jne
dec
or
jle
data16
sub
xlat
loop
push
fisttpl
fstps
daa
stos
data16
mov
imul
test
and
enter
jae
mov
roll
jnp
jg
lock
cld
out
imul
mov
insb
add
jbe
repz
imul
into
sub
mov
jno
mov
decl
cli
imul
pop
sbb
loop
xchg
int3
cld
ljmp
sub
frstor
cli
mov
push
and
test
test
fiadds
imul
pop
out
pop
jl
sbb
mov
lea
dec
mov
andb
mov
cmp
fadds
inc
cmp
jno
dec
test
mov
outsl
rcrl
in
call
pop
jle
mov
loop
data16
loopne
imul
dec
clc
pushl
mov
push
mov
std
push
lea
cwtl
insl
sbb
lret
inc
mov
dec
fdivrl
fxch
dec
pop
xchg
xor
mov
jno
dec
enter
xor
adc
andl
hlt
shrl
lcall
iret
movsl
mov
scas
dec
or
sbb
push
inc
xchg
testb
or
cmpsb
call
inc
jnp
insb
aam
sbb
stos
fs
rolb
js
mov
mov
jecxz
cmp
push
mov
call
dec
inc
jo
mov
sbb
and
ficompl
int
sub
inc
adc
sbb
mov
mov
ljmp
jl
fptan
inc
mov
xchg
iret
mov
clc
push
sbb
rclb
clc
add
pop
push
lock
adc
mov
sbb
mov
jge
fwait
xchg
testb
jbe
sbb
stos
pop
js
xchg
sub
outsl
iret
pop
imul
sbb
ret
inc
ret
add
mov
out
in
mov
mov
in
inc
sbb
outsb
pop
mov
and
and
jmp
lret
cmp
or
scas
loopne
ja
lahf
inc
cs
mov
cld
lahf
xchg
sub
xchg
je
cmpsl
sbb
pop
scas
les
mov
jno
xchg
mov
fnstsw
inc
je
adcl
pop
pop
jge
jmp
sahf
addr16
ja
ret
push
push
dec
adc
add
fisubl
jge
mov
lret
jle
inc
jne
dec
call
loopne
fisttpl
mov
test
mov
jnp
cwtl
sub
mov
fistps
out
lock
gs
sub
or
loope
imul
cmp
data16
repnz
or
jge
xchg
pop
sbb
test
dec
stos
xlat
pushf
xchg
cmp
iret
or
xor
lds
sbb
dec
lret
stos
scas
add
push
mov
sti
clc
dec
xchg
lcall
cmp
dec
inc
mov
push
xor
xor
arpl
insl
gs
mov
cld
jg
mov
mov
jae
cs
imulb
nop
aaa
test
and
rcrb
data16
dec
mov
popf
cmp
fsubp
daa
cmp
mov
sub
sbb
mov
iret
scas
sbb
pop
dec
mov
sarl
cmpsb
mov
adc
push
sbb
pushf
mov
and
cwtl
cli
addl
mov
sub
xchg
mov
xor
jmp
iret
out
call
jl
push
aad
or
fcmovnu
mov
out
xchg
imul
jae
sub
inc
xor
xchg
pop
repz
push
dec
fcoml
sub
ds
jnp
push
inc
sbb
cmp
push
push
adcb
mov
xchg
lcall
mov
aaa
loope
inc
dec
push
cmpsl
sbb
mov
sbb
inc
mov
jg
aas
push
cmpsl
inc
cwtl
xor
adcl
sub
imul
in
out
adcl
dec
mov
mov
jae
mov
ss
shr
xor
lret
fbstp
sbb
or
dec
pop
popa
test
pop
xchg
arpl
and
sub
cmpsl
jbe
and
pop
jno
dec
mov
mov
frstor
xchg
xchg
pop
in
popa
arpl
aad
shlb
sbb
jne
sbb
inc
int
inc
adc
test
stos
mov
ror
mov
rorl
and
je
cmp
in
loope
and
jns
stc
xor
push
lcall
addl
repnz
vprotd
outsl
add
jns
jp
cli
lahf
fs
popf
dec
clc
and
ret
and
and
sbb
cmpsl
jecxz
push
mov
pusha
lds
sahf
adc
sub
lock
in
sbb
mov
in
std
cltd
fwait
pop
mov
sub
fiaddl
fnsave
pusha
adcb
fs
xchg
cmc
and
out
pop
fwait
enter
mov
push
push
lcall
arpl
stc
outsb
test
ljmp
mov
xchg
mov
xor
push
add
jne
jle
jno
and
clc
dec
fs
int3
mov
decb
fsubr
data16
mov
dec
ja
int3
fistpl
nop
gs
dec
jno
xor
xchg
mov
cltd
add
in
pop
inc
in
addr16
sub
xchg
xchg
pop
mov
sub
leave
lods
sub
in
fistps
rorb
jbe
and
cli
jb
mov
mov
test
ret
leave
pop
in
dec
jnp
cmc
call
push
xchg
jl
js
test
in
hlt
add
xchg
ror
movsl
shr
sbb
lods
push
xor
test
divl
or
ljmp
repz
movsl
pop
bound
mov
sub
fisttpll
jge
lea
lds
leave
push
call
fwait
xor
repnz
lahf
scas
xchg
outsb
cli
cmpsb
and
push
mov
out
xor
int3
cmp
jp
xchg
cmp
fisttpll
loopne
adc
mov
cwtl
stc
xor
outsl
push
add
imul
rcrl
fwait
xor
jbe
pop
test
sub
jo
mov
arpl
inc
push
mov
clc
mov
out
loop
xor
jl
aaa
adc
sub
loopne
lret
jl
jle
mov
pushl
lcall
leave
fcomps
ficomps
sbbb
hlt
pusha
cmc
xchg
sbb
or
pop
test
in
sbb
inc
mov
test
mov
subb
mov
jb
sahf
dec
es
mov
mov
lret
mov
and
fisttpl
mov
adc
mov
mov
xor
or
or
fmull
fbstp
aaa
inc
loop
repnz
cmp
pop
adc
jmp
sbb
sbb
cmp
sub
test
cmc
jno
aas
movsl
xor
cmp
fsubr
add
ja
xlat
or
dec
lock
xor
push
mov
dec
mov
jg
sub
cld
xor
in
sbb
push
xor
xchg
xor
mov
ds
jl
ljmp
cltd
aad
jno
sub
mov
mov
inc
out
scas
mov
adc
dec
and
push
dec
icebp
jns
imul
cltd
jecxz
xor
int3
adc
repnz
repz
add
and
mov
or
fidivrs
ret
inc
pop
fisttpl
dec
xchg
insb
pop
mov
dec
inc
outsb
pusha
cld
sbb
notl
inc
shlb
pop
dec
out
pop
fnstcw
cs
into
cmp
inc
or
and
cltd
jg
dec
sahf
jno
lcall
jbe
mov
xlat
xor
bound
push
mov
jbe
shr
mov
stos
dec
sbb
or
mov
xor
pop
mov
pop
stos
cmpsl
jl
pcmpeqd
imul
sbb
pop
dec
lds
fcoml
loope
cmp
add
mov
push
adc
andb
out
repz
add
jle
mov
or
je
adc
insb
inc
pop
inc
sbb
sub
or
add
shll
mov
sub
hlt
xor
sbb
xor
test
push
ss
cltd
loope
sbb
xlat
jle
mov
lret
ret
lcall
out
int
dec
fwait
cmpsl
loop
lcall
sub
popa
icebp
jo
or
pop
inc
fidivrl
mov
loope
ljmp
lahf
mov
outsl
pop
xchg
loop
cli
out
add
int
sub
sarb
cmp
fs
mov
add
nop
inc
add
xor
in
mov
pop
push
lea
pop
push
pop
sbb
push
push
inc
aaa
jge
addl
jg
fnstcw
and
outsb
dec
jnp
adcb
adc
daa
mov
and
inc
in
lds
mov
enter
xchg
pop
aam
push
test
pusha
ss
cwtl
cmpsl
repnz
out
xchg
jae
pop
mov
fcomi
push
push
mov
imul
adc
daa
jae
scas
pop
pop
std
mov
cmp
push
mov
js
push
inc
xor
mov
les
loope
sti
jp
lret
int
andl
pandn
jecxz
es
fs
mov
out
xchg
mov
cmp
cmp
mov
cmp
cmp
jecxz
push
popa
ss
xchg
mul
jg
sbb
lret
bnd
lods
mov
dec
bnd
stos
push
push
les
mov
sub
inc
push
rorl
sbb
shlb
fcoms
dec
or
imul
xchg
mov
adc
das
ds
adc
test
addr16
push
fadds
sarl
into
rcrl
pop
jmp
nop
pop
push
cld
push
or
dec
dec
imul
pop
ja
pop
push
insb
mov
jg
or
shll
ret
imul
data16
sub
cmp
or
fldenv
inc
adc
add
orb
sbb
dec
ja
jp
movsb
jns
cmpsl
xor
push
inc
xchg
and
enter
dec
leave
in
inc
ror
mov
notb
gs
enter
out
mov
sbb
or
je
add
fimuls
add
insb
xchg
ret
das
fisubl
xchg
or
mov
lret
mov
aas
jp
std
jl
sub
stos
or
decb
cmp
out
cmp
mov
mov
fidivl
sbbb
xchg
xchg
push
filds
cld
pop
fs
lcall
cmp
pushf
in
and
adc
scas
pop
dec
into
data16
gs
in
mov
add
inc
push
push
shll
sbb
popa
pop
outsb
cmpsl
addr16
sub
jecxz
popf
pop
xchg
dec
mov
adc
mov
cmp
sbb
xor
mov
into
push
scas
out
inc
insb
roll
push
mov
imul
leave
inc
jl
aaa
outsb
in
jno
clc
fucomp
loopne
or
sar
add
sbb
lods
adc
fiadds
imul
fcompl
ss
scas
lahf
or
adc
stos
cmp
cwtl
cli
inc
sbb
lods
movsb
iret
mov
stos
and
pop
pop
cmpsb
jne
fsubs
ds
lcall
and
or
adc
sbb
pop
push
or
fisubrs
ja
aaa
inc
lds
adc
xchg
dec
fcomps
scas
push
mov
jecxz
or
fcmovb
std
imul
stos
fdivl
les
test
adc
sbb
out
fsts
and
push
fstps
inc
sbb
decb
add
jno
fstps
pop
xor
cmc
add
mov
lcall
in
fildll
hlt
mov
sbb
inc
movsl
or
pop
mov
clc
lods
lea
addr16
fmul
xor
sahf
or
je
repnz
rcrl
mov
mov
adc
stc
mov
insb
or
mov
cmp
repz
mov
jne
cmpsl
sar
pop
lods
filds
add
inc
xorl
leave
adc
fadd
or
mov
mov
or
cmp
pop
fistl
cmp
mov
sub
hlt
movsb
jp
test
mov
pop
xor
test
jbe
js
into
imul
lcall
outsl
mov
adc
into
dec
sub
scas
shlb
mov
jae
sub
movl
and
ja
cmp
jnp
cmpsl
mov
or
cmp
sbb
lods
and
pop
cmpsb
adc
inc
cmp
inc
jge
ljmp
int
and
lock
in
incb
ss
pusha
rorb
jl
push
push
fstl
pop
pop
shll
jae
cmpsl
aas
inc
js
adc
cld
inc
jns
cmp
jp
sbb
sub
sub
xchg
ret
sbb
lods
pop
es
jecxz
in
inc
jp
ror
data16
mov
out
jb
pop
dec
inc
ficoml
inc
xor
dec
cmp
out
faddl
mov
movsb
mov
sub
fistpl
dec
inc
inc
les
rorl
sub
scas
dec
dec
adc
in
inc
int
xor
sbb
sti
adc
outsb
push
out
loopne
pop
xor
cmp
mov
bound
imul
sub
inc
sahf
lcall
jno
aaa
out
mov
push
cmpsl
fisubl
notb
lret
sbb
in
test
lods
iret
lods
aaa
push
cs
gs
pop
dec
xor
cs
pop
cltd
in
push
sbb
add
dec
daa
pop
mov
stc
sub
out
aaa
ss
int
cmp
sub
ret
sub
outsb
dec
inc
lcall
mov
push
lods
sub
mov
jmp
into
mov
and
test
or
xor
pop
loope
fistpl
mov
test
out
xor
outsb
push
sub
mov
int
icebp
push
jg
xchg
jp
push
lret
jnp
or
stos
cmp
mov
add
ret
or
add
adc
sbb
pop
xchg
xor
lahf
jmp
cwtl
xchg
mov
jb
pushf
enter
pop
int
jbe
fcmovu
or
pushf
inc
lcall
test
cltd
sub
and
xor
lock
mov
pop
ficoms
stc
mov
sbb
inc
inc
inc
push
es
fsubrs
gs
sarl
jp
pop
sub
sub
jno
xchg
out
aaa
cmp
pop
aam
in
xor
push
mov
push
fistps
mov
loop
jmp
dec
inc
cltd
stc
inc
test
cmp
icebp
mov
cmp
outsb
xor
in
leave
and
je
cmp
add
push
rorb
in
cld
jp
sbb
jns
cld
shr
sbb
aas
or
sbb
add
aad
jnp
incl
mov
mov
std
mov
mov
adc
mov
in
stc
or
lret
stc
jle
mov
jmp
in
ss
push
loop
js
or
dec
lods
adc
cwtl
sahf
shlb
out
dec
or
add
push
mov
inc
mov
in
jb
dec
rcrb
jnp
push
repnz
daa
loop
out
dec
arpl
pop
outsb
in
insl
and
mov
stc
dec
mov
cld
imul
pop
leave
ffree
xchg
testb
sub
pop
fistl
add
into
xor
adc
pusha
loope
jg
stos
pop
pop
dec
repnz
jg
adc
stc
jbe
inc
icebp
pop
cmp
mov
push
in
push
jns
sub
inc
fistpl
ljmp
add
mov
lcall
sbb
jp
mov
pop
jl
xor
jns,pn
mov
rclb
cmc
or
dec
dec
dec
mov
pop
inc
mov
repz
mov
adc
inc
xchg
in
lcall
in
fmull
shl
aad
clc
inc
mov
aaa
sub
ss
cltd
test
into
xor
pop
in
push
dec
mov
push
mov
call
pop
popa
jle
mov
lsl
call
sub
inc
sub
popa
arpl
fidivrl
push
mov
add
cwtl
sbb
out
and
int
xchg
out
lret
loopne
bound
stos
add
leave
mov
lods
add
outsl
or
fildl
hlt
inc
mov
jo
lock
mov
sarl
in
sbb
adc
and
pop
lret
std
inc
pop
add
and
enter
loop
movsb
insl
stc
iret
jmp
cmp
inc
movsb
shll
push
cmp
pop
mov
dec
xchg
and
hlt
std
dec
jge
push
test
mul
stc
or
push
dec
in
jp
jl
stc
out
lea
ret
pop
dec
jno
decb
arpl
or
xchg
cmp
mov
fidivrs
stc
fistpl
sub
mov
sub
dec
mov
cmp
aaa
lret
sub
scas
sub
sub
mov
mov
add
ss
xor
out
cmp
dec
pusha
icebp
sahf
push
or
inc
pusha
mov
mov
iret
pop
loopne
or
movsl
xchg
insb
sub
sbb
andb
sub
mov
push
or
sbb
and
aaa
rcrb
scas
das
orl
and
popa
cmp
sarl
pop
insl
xor
or
mov
stc
js
fdiv
mov
out
imul
jge
fucomi
call
jae
ret
pusha
add
loope
mov
inc
jp
mov
shrb
mov
out
jecxz
daa
cmp
push
or
jnp
add
pop
sub
adc
lea
xor
xor
add
cmp
lds
adc
push
es
jae
rorb
add
in
in
push
push
repz
shl
pop
ljmp
pusha
shr
mov
sub
adc
orl
sub
lds
xor
push
outsb
out
hlt
fwait
lahf
adc
ds
lods
flds
std
xor
rclb
call
adc
xchg
loope
push
pop
ret
push
lods
in
and
sub
push
cmp
sbbl
cmpb
scas
push
loopne
call
insl
cld
int
imul
test
sub
dec
cmpsb
divb
lret
mov
and
pop
adc
loope
inc
mov
addb
sarl
add
std
mov
mov
pop
repz
jno
int
daa
jg
cmp
jp
rol
popa
jb
adc
mov
sbb
cmp
imul
adc
pavgb
adc
dec
fsubl
mov
dec
lock
loope
push
push
test
fxch
lock
push
jno
mov
jp
and
pop
mov
cmc
and
sub
mov
int3
negl
mov
mov
out
rolb
mov
sbb
jmp
and
divb
lcall
xor
ret
addr16
ficoms
dec
imul
ficompl
rolb
mov
mov
jo
cli
cmp
test
and
push
imul
and
or
jl
ret
pop
pushf
add
rorl
jns
mov
push
cmp
sub
mov
push
out
pop
xchg
jae
push
insl
fcmovne
in
and
or
ret
bound
mov
mov
cli
arpl
mov
hlt
sub
test
adc
dec
ds
jmp
imull
stc
sub
xor
scas
in
adc
lea
adc
add
pushf
push
dec
pop
push
jbe
and
and
outsb
mov
inc
mov
sbb
cltd
sub
js
mov
push
fcmovb
inc
sbb
adc
les
cld
lods
xor
rolb
lret
xor
pop
pop
in
push
pop
outsb
movsl
push
lret
mov
cld
mov
shlb
fldt
xchg
or
mov
addr16
filds
lods
jnp
jns
adc
repnz
jnp
mov
push
in
in
mov
test
ja
or
lock
push
add
rolb
pushf
pusha
push
shlb
push
test
jb
outsl
mov
scas
or
mov
es
aad
in
xor
mov
repnz
jp
xlat
enter
xor
bound
mov
mov
mov
jg
adc
leave
inc
in
jmp
in
daa
jp
cmp
out
sub
lahf
mov
xchg
add
xor
push
cmpsb
mov
lock
jge
fsubs
arpl
inc
jg
sub
clc
pcmpeqd
cmp
fsub
xor
sub
fimuls
bound
pop
add
add
xchg
jns
bound
scas
loopne
cmp
mov
sbb
sbb
inc
pop
push
pop
int
push
imul
or
push
xor
mov
leave
vmaxsd
and
jg
lods
xchg
int
dec
mov
inc
mov
mov
sbb
fdivrs
and
sub
inc
push
sbb
fldt
rcrl
pop
adc
arpl
popf
shlb
sbb
jnp
lock
pushw
push
int
call
cltd
jg
rol
imul
mov
gs
push
pop
sahf
in
mulb
mov
sarl
and
sahf
cmp
lods
jle
bound
imul
shll
or
popf
imul
inc
sbb
mov
xchg
insb
and
push
das
jbe
pop
imul
xchg
aad
dec
lock
cli
xchg
ja
ror
mov
push
aam
cmpsb
loopne
xchg
loopne
pop
sub
out
jge
test
mov
insb
nop
orl
pusha
cmpb
mov
fmull
movsl
xor
cld
cwtl
in
sahf
lahf
jae
jmp
insb
jb
cmp
movsb
pusha
cmpb
mov
iret
mov
or
imul
std
lock
xchg
rcr
mov
aaa
mov
mov
dec
mov
pop
les
xchg
bnd
add
mov
sub
lret
lcall
xchg
das
adc
mov
dec
insl
sahf
je
aad
add
mov
dec
cs
in
mov
nop
jnp
out
mov
sub
cld
cld
sarb
mov
adc
cmp
popa
daa
popf
xlat
lret
push
or
cmpsb
adc
shrb
mov
jecxz
pop
mov
xchg
out
xchg
jmp
cmc
lock
fs
out
xchg
fmuls
pop
push
into
jno
aam
mov
mov
mov
lods
inc
js
ss
adc
sbb
jmp
cmpl
outsl
sub
mov
cmp
dec
enter
cmpsb
jge
or
repnz
js
test
xchg
addr16
cld
jno
and
in
jle
mov
or
sub
out
and
sub
sbb
cli
pop
pop
out
jae
xchg
jl
add
jo
sbb
and
movsb
movsl
imul
fsubl
test
xor
and
ss
or
sahf
xlat
jae
push
push
lahf
adc
pop
lods
test
dec
push
into
imul
mov
pop
daa
sbb
inc
xor
pop
orb
orl
xor
rcll
loop
mov
mov
mov
cmp
pusha
data16
scas
pop
dec
into
sbb
mov
dec
mov
ja
jp
jl
xchg
or
insl
mov
aad
es
rorb
inc
fdiv
inc
mov
xor
cltd
inc
jno
add
xchg
repz
add
sub
cmp
adc
cmp
push
adc
dec
xorb
cmp
pusha
xor
mov
test
out
testb
mov
xchg
pop
inc
xor
pop
jle
sub
push
in
stos
mov
and
mov
adc
das
sbb
inc
mov
mov
cmp
dec
loopne
fstpt
hlt
ds
and
add
cltd
inc
sbb
sti
push
jle
enter
fstpl
xchg
xchg
pop
push
outsb
fcmovb
cmpsb
adc
aaa
mov
add
cltd
icebp
mov
mov
mov
pop
mov
jge
rol
add
xor
xchg
jmp
fldln2
push
inc
pusha
pop
mov
xlat
fwait
mov
push
xor
and
xor
or
mov
adc
call
cmp
into
mov
int3
xchg
mov
dec
shl
adc
leave
or
icebp
adc
jns
popf
jb
rclb
orb
pop
jge
jmp
inc
lahf
push
cs
outsb
fadds
mov
js
lods
pop
dec
pop
rcrb
enter
inc
shll
test
lds
arpl
test
push
pop
push
cs
or
push
dec
or
cmp
mov
push
cmpsb
lods
out
lahf
fistpl
jp
xchg
test
outsl
movl
xchg
test
in
mov
pop
cmp
push
xchg
scas
push
mov
adc
hlt
jns
push
lea
inc
stos
sahf
jb
mov
add
mov
test
fists
sub
push
inc
mov
repnz
loopne
push
lock
out
cmp
pop
repz
mov
into
mov
inc
xchg
ljmp
mov
clc
pop
inc
imul
cmp
in
loop
fisubrs
mov
jb
push
mov
fsubl
mov
sbb
daa
mov
movsb
xlat
sub
pop
js
lea
xchg
sub
dec
and
xchg
mov
sahf
sbb
jp
lea
and
ds
mov
sub
mov
sub
ret
lret
aad
mov
xor
int
rcrb
mov
in
mov
pop
pusha
pop
cmp
jne
bound
push
data16
push
add
sub
mov
adc
mov
and
fwait
inc
and
mov
cmp
xchg
jnp
or
in
ror
sub
push
pop
call
jle
or
inc
cmp
pop
rol
inc
inc
mov
cmp
push
mov
rcll
push
popa
shl
sbb
jno
imul
or
imul
jl
mov
jecxz
and
pushf
scas
cmp
fwait
scas
cmp
inc
repz
mov
fmuls
stc
xlat
mov
cmp
adc
add
and
fs
xor
add
int
xor
arpl
adc
pop
mov
mov
mov
lahf
bound
fdivrl
fs
push
lea
add
shlb
adc
neg
fsubr
or
cmp
mov
push
adc
inc
inc
xor
adc
cs
push
sahf
gs
into
in
orb
cmc
pop
xorl
pop
inc
push
push
data16
mov
ret
pop
pop
push
popa
fucomip
jbe
fisubs
jns
cmp
pop
fldcw
xchg
repnz
lea
jmp
pop
fnstenv
in
jp
lods
xchg
jns
and
int3
add
xor
adc
add
stos
fimull
or
clc
xor
jb
push
ret
dec
aam
cs
lock
mov
sbb
or
lret
push
das
mov
push
cltd
mov
dec
cmp
jbe
jle
adc
jmp
dec
rcrl
test
repz
mov
xchg
pushf
push
add
aas
sbb
pop
xlat
xchg
and
addr16
bound
outsb
jbe
nop
cmp
hlt
xchg
fldenv
cmp
lods
lods
adc
mov
adc
repnz
sub
cmpsl
subl
jns
es
xchg
daa
lea
mov
xchg
aam
hlt
jnp
bound
ja
std
inc
imul
pop
stos
out
loope
inc
cmp
mov
add
jnp
adc
adc
xchg
mov
mov
sbb
clc
out
xchg
sub
aam
lcall
insb
aam
mov
mov
mov
or
adc
fcmovbe
das
rolb
xchg
mov
sub
out
inc
sbb
cld
aad
shlb
xlat
outsl
sbb
out
adc
pop
add
xchg
cwtl
and
jge
push
adc
shlb
fnstenv
push
jne
sbb
pop
and
sbbb
enter
sub
xchg
mov
fcompl
scas
lret
jmp
insl
push
in
sbb
xor
test
sti
std
inc
mov
add
add
aam
lcall
dec
mov
dec
pop
mov
xor
push
rcrb
and
adc
jae
xchg
scas
cmp
xchg
dec
mov
adc
dec
ljmp
fcmovb
xor
fimuls
insb
push
es
pusha
icebp
cmp
in
push
aad
adc
adc
in
pop
mov
push
gs
vandnps
test
addb
or
aaa
xor
inc
fdiv
mov
dec
or
nop
adc
cmp
cs
cwtl
inc
int
jbe
sub
mov
cmp
xor
shrl
inc
push
mov
mov
mov
sub
inc
dec
mov
les
push
add
int3
mov
ds
pop
xchg
lock
in
roll
xor
adc
xchg
mov
fs
test
ficompl
rorl
dec
roll
xor
sub
shlb
inc
mov
mov
and
aam
and
sub
cmpsl
mov
enter
cmp
loop
mov
pusha
mov
sub
or
and
mov
rclb
mov
xor
stc
pusha
push
xchg
sbb
sbb
or
adc
mov
lds
fidivrl
fistpl
or
aas
mov
loopne
pusha
mov
mov
mov
dec
ret
int3
call
mov
arpl
or
pop
sbb
insb
cmpsl
mov
xor
aad
outsl
insl
out
insb
orb
iret
int3
sbb
jne
ret
and
xchg
pushf
aad
fucompp
fdivl
jle
lea
adcl
int3
nop
sub
repz
mov
lds
cmpl
shlb
mov
or
inc
clc
xchg
mov
adc
sbb
mov
test
rorb
decl
xlat
hlt
adc
lret
lock
cs
mov
push
scas
ja
xchg
imull
xchg
or
mov
call
push
neg
pop
pop
push
xor
pop
ja
inc
mull
aam
jno
movsl
and
mov
dec
sbb
shrb
cmp
mov
addr16
jp
subl
into
fs
mov
loopne
scas
adc
outsb
push
icebp
in
or
sbb
rolb
in
ffreep
inc
inc
push
mov
das
mov
jle
inc
lods
mov
push
and
inc
fdivs
cmc
push
lock
sbb
ja
cmpsl
popa
mov
adc
popl
inc
mov
mov
ljmp
inc
mov
push
loopne
xor
xor
in
dec
mov
fdiv
sbb
scas
cmp
nop
insb
insl
mov
ret
and
decl
and
push
sub
in
xlat
lods
or
cltd
test
push
adc
enter
fdivs
mov
jecxz
jne
lahf
sub
clc
or
rcrb
leave
icebp
add
cltd
andb
dec
icebp
mov
pop
les
fstpt
cli
mov
sub
fdivs
mov
pop
push
xchg
inc
adc
movsb
idiv
in
and
dec
mov
cmovae
dec
xchg
dec
sbb
inc
cli
sub
pop
pop
insl
inc
xorb
mov
bnd
addb
push
sti
sbb
jmp
loope
je
ss
and
and
add
dec
lods
out
inc
cmpsl
stos
fcmovnbe
nop
call
pop
pop
add
and
mov
adc
popa
ret
ds
pop
stos
mov
cmp
fdivr
jmp
xchg
es
mov
ljmp
add
sbb
xor
js
divl
jnp
bound
jns
test
movsb
mov
rorl
cli
mov
loope
ljmp
or
push
jbe
lock
cmp
pop
and
inc
xchg
addb
pop
out
into
push
rcrb
and
jo
and
fidivs
adc
addr16
or
xchg
aam
push
adc
xor
je
push
lcall
xchg
mov
sub
data16
cmp
aaa
mov
cli
into
in
jns
cmp
jmp
add
pushf
sbb
es
jp
into
subl
outsl
divl
mov
xchg
push
jne
imulb
cmp
lea
arpl
gs
mov
xchg
jg
xchg
add
lods
cld
cwtl
in
dec
jmp
stos
test
cmp
inc
add
adcb
adc
xchg
fdivrl
decl
dec
sub
push
inc
js
jmp
jg
lods
lret
stc
push
icebp
sub
lods
pusha
push
shl
das
loope
xchg
xor
mov
ret
mov
xchg
or
mov
insb
push
pop
sbb
xchg
mov
pop
push
jne
sbb
cmp
fcmovu
leave
xchg
sub
or
scas
out
push
sar
mov
lock
aam
pop
faddl
divl
xchg
out
insl
lahf
mov
push
imul
movsl
jnp
setns
pop
inc
jb
daa
test
inc
mov
add
cmpsb
cmp
xor
xor
and
xchg
fwait
sbb
sbb
cmp
les
mov
ss
es
add
and
jecxz
adc
nop
add
scas
jmp
fimull
jge
cltd
mov
int3
fistpll
adc
mov
mov
ret
sbbl
fistl
or
mov
xchg
fs
dec
mov
inc
jne
clc
xchg
daa
in
clc
xor
into
mov
mov
sbb
jmp
int
mov
cmp
fadd
and
jns
xchg
repnz
movsb
or
sbb
xor
std
jg
mov
sub
pop
mov
cmpsl
mov
sub
sub
lcall
jbe
mov
and
mov
leave
cmp
imul
sbb
jno
bound
and
pop
cmp
inc
xor
sbb
cmp
stc
sub
cs
inc
fwait
jecxz
mov
mov
cmpsl
aam
push
and
ljmp
sarb
addb
orb
dec
jbe
xor
int
sub
push
pop
mov
out
js
jle
push
mov
in
test
pop
pushf
aas
rol
imul
and
inc
nop
dec
and
cmp
arpl
xor
dec
mov
mov
jge
fwait
pop
mov
xor
les
lret
arpl
sti
in
or
pop
aam
jne
pusha
stos
mov
roll
mov
jno
jmp
sbb
das
aad
push
inc
pop
ss
in
or
ja
sub
icebp
loopne,pt
mov
cmp
pushf
mov
sub
mov
sbb
jo
and
lea
daa
xorb
lock
movsl
popa
out
rclb
movl
test
lret
ficomps
mov
imul
jp
mov
loope
xor
fs
sti
lcall
test
icebp
jmp
orb
loopne
sbb
int3
mov
jo
mov
push
out
js
and
dec
pop
out
testl
sub
push
imulb
out
sub
push
test
mov
imul
mulb
sbb
inc
movq
fcomp
sub
push
pop
lods
add
mov
pop
jo
sbb
loop
lods
stos
dec
cs
sub
ret
shrb
cmp
cld
mov
loope
xchg
mov
lods
data16
bound
rolb
xor
test
mov
sbb
hlt
mov
pop
or
cltd
jl
dec
scas
jno
adc
jge
cwtl
fstps
leave
push
call
mov
test
ret
std
dec
push
xor
dec
fcomps
cmp
mov
lods
adc
jg
push
xor
adc
ds
in
into
cmp
adc
fisubrl
sbb
push
pop
and
push
mov
lods
scas
xlat
daa
movsl
dec
push
mov
inc
or
xor
fisttpll
jmp
rcll
leave
cmc
cltd
inc
push
subb
cmp
filds
sub
and
clc
xor
daa
mov
jecxz
or
push
mov
xchg
cmpsl
lcall
stc
in
lahf
adc
xchg
out
scas
mov
sub
scas
mov
cs
loope
pop
sbb
push
adc
clc
pop
das
pushf
sub
mov
repz
cmpsl
jno
pop
repnz
negl
xor
mov
cmp
or
stos
or
cmc
or
fdivl
jmp
rcrl
inc
fnstenv
sbb
and
inc
lar
jmp
mov
lods
sub
xchg
pusha
xchg
adc
sub
cwtl
sub
and
sti
int
sub
idivl
sarb
adc
dec
fists
or
insl
inc
mov
sbbb
xchg
faddl
nop
mov
push
mov
inc
int3
or
icebp
cwtl
fcmove
jecxz
inc
mov
rcl
push
imul
inc
xlat
xchg
or
shrb
popa
jne
loope
in
gs
aas
jbe
scas
sti
dec
and
daa
jge
shll
jb
in
rcl
xor
dec
pop
aad
or
or
xor
jp
pusha
ret
push
clc
pop
or
dec
mov
and
push
int3
fidivrs
je
mov
addr16
in
pop
icebp
pop
into
ret
dec
ret
inc
mov
xchg
and
stos
mov
lds
bound
cld
push
js
sbb
icebp
or
fidivrl
xor
lcall
or
or
jns
adc
xchg
push
ret
js
jecxz
dec
adcl
dec
daa
ds
xor
jno
push
jo
imul
in
sbb
rolb
and
mov
dec
push
cltd
adc
pop
imul
mov
jg
mov
jmp
dec
ret
ficoms
xor
out
pop
leave
decl
ljmp
cmp
fsubl
jns
inc
adc
push
or
aas
push
fiadds
stos
fildll
sub
cmp
sbb
std
push
jge
push
sbb
sbb
popf
xor
fs
mulb
pop
mov
add
mov
movsl
lock
cmp
jle
cmp
or
scas
insb
mov
arpl
jp
adc
inc
test
lret
insl
out
jp
ret
out
inc
jns
rcll
flds
mov
pop
adc
and
ret
test
push
aaa
push
outsl
outsl
or
inc
xchg
lret
test
mov
sub
insb
fistps
mov
in
pop
scas
add
aaa
pop
xchg
scas
lahf
mov
fdivrs
jne
fisttpll
dec
and
cltd
adc
xor
jbe
rorb
inc
shlb
rorl
pop
test
sub
cmp
js
movsl
add
and
dec
mov
addr16
ficomps
and
jp
xchg
mov
dec
xchg
adc
push
mov
sti
cmpsb
mov
or
pop
push
pop
inc
cmpl
inc
add
cmp
lcall
enter
call
push
sahf
faddl
in
dec
mov
adc
les
push
or
arpl
xchg
scas
pop
cmc
lret
out
push
push
int
js
cwtl
leave
add
js
mov
scas
loopne
leave
imul
push
pop
xor
sbb
ja
fistpll
hlt
out
insl
fnstenv
and
xchg
stos
push
cmp
addr16
sub
es
fs
mov
jae
and
cmpsl
sti
xor
jne
adc
push
xor
jbe
adc
shlb
lcall
lods
jnp
xlat
xchg
mov
adc
xchg
shl
scas
adc
adc
inc
push
dec
pop
inc
sbb
loopne
mov
ret
inc
aam
and
ljmp
push
pop
adc
insl
iret
cwtl
outsb
shl
movaps
push
jp
jmp
push
mov
xchg
cld
add
adc
inc
mov
insb
sbb
mov
inc
or
aam
arpl
lods
fisttps
and
sub
fisubrs
pop
xchg
insl
mov
incl
ss
and
mov
push
out
push
in
shll
mov
push
in
enter
cmp
std
adc
je
pop
ret
inc
in
push
mov
les
lcall
scas
jp
cmpl
push
shlb
les
fdivrs
xchg
pop
jmp
ffree
push
out
push
mov
call
int3
mov
jmp
ja
xchg
mov
icebp
or
inc
pop
xor
dec
loope
push
inc
cmc
jb
je,pt
pushf
loopne
jnp
xlat
adc
inc
outsb
mov
jle
dec
push
movsb
mov
je,pt
lods
pop
cmp
jno
xor
adc
jb
imul
cmp
mov
push
arpl
pop
jb
cltd
lods
repz
aam
push
mov
inc
add
push
cmp
cmp
fmuls
bound
pop
dec
inc
xor
or
loopne
das
xchg
divl
sub
mov
xchg
lds
mov
cli
pop
pop
es
and
cltd
ret
add
jecxz
subb
sahf
sahf
lds
inc
mov
test
ljmp
fimuls
pop
push
jo
mov
dec
out
andl
mov
orb
and
inc
jge
pop
xlat
stos
push
out
xor
sub
inc
femms
icebp
out
pushf
mov
ja
mov
pushf
push
ja
xor
enter
sbbb
test
cmpsl
sbb
mov
std
xor
cmpsb
shlb
mov
add
pop
jmp
dec
cmp
inc
pop
fistpll
sub
mov
lods
ljmp
xor
hlt
push
cwtl
fistpll
scas
andl
sbb
jmp
push
mov
jle
mull
add
stos
rcl
repnz
rcl
lcall
in
jbe
and
aam
leave
add
sbb
pop
add
xor
jns
mov
mov
in
imul
rcrl
lcall
dec
sbb
add
repnz
inc
outsb
mov
push
and
xchg
mov
test
jne
sub
es
int3
sub
out
loope
es
inc
lods
aad
aaa
arpl
add
jle
in
pushf
dec
stc
adc
dec
inc
into
mov
mov
leave
in
lea
daa
popa
mov
and
rcrl
cmp
daa
cmp
inc
rcrl
mov
decl
negb
cmpsl
into
call
insb
jle
jbe
mov
lods
dec
push
fsubl
daa
imul
lods
loop
stos
mov
xor
jl
push
and
daa
cwtl
cs
push
ficoml
test
jbe
daa
push
pop
sbb
pusha
pop
jns
cmp
mov
out
rcrl
mov
lcall
xchg
mov
fadd
ljmp
fs
sbb
dec
mov
call
inc
outsl
mov
add
js
jl
nop
pop
sub
jnp
testl
lock
xor
pop
add
in
jo
add
xchg
adc
xor
push
sub
push
outsl
aas
lahf
mov
cmpsl
sub
xor
in
mov
dec
rcr
mov
daa
xor
rcr
fcomps
loopne
pop
aam
jl
dec
clc
in
lods
aam
insl
lcall
push
pushf
rcll
aaa
repnz
cmpsl
push
daa
ss
hlt
testl
adc
popf
xor
insb
xchg
cli
scas
mov
push
aam
mov
sbb
movsb
repz
les
inc
pop
imul
pop
out
mov
cmpb
outsl
pop
add
aad
rorb
pop
and
or
int
lcall
loopne
filds
adc
aad
std
imul
sbb
loop
mov
jae
aaa
mov
stc
test
cmp
ja
push
pushf
in
xchg
dec
mov
xlat
jecxz
pop
out
mov
fisttps
andb
push
add
clc
and
xchg
cmp
mov
cld
sub
je
imul
mov
pop
lret
pop
out
dec
addr16
push
test
mov
mov
add
dec
ret
or
inc
adc
scas
sbb
mov
jle
sbb
out
push
sbb
shrb
inc
xor
sti
pop
cmp
jae
sub
fwait
je
xor
aas
repnz
xchg
mov
jmp
loopne
mov
sbb
subb
xor
fmull
fisubs
data16
cmp
mov
push
sbbl
jmp
add
xchg
sar
fstl
mov
pop
cmp
pusha
sub
xlat
push
test
dec
jb
or
dec
mov
xchg
and
movsl
ret
outsb
jno
and
xor
jb
loopew
mov
not
int3
popa
out
jbe
scas
cmp
je
pusha
or
popa
dec
sahf
clc
jne
mov
jge
aas
xor
or
ss
pop
mov
dec
lods
ljmp
sti
add
cmp
pushf
mov
pop
jb
jmp
int
pop
jb
out
mov
inc
sar
pop
fwait
mov
mov
decb
add
arpl
flds
js
rcrb
stc
dec
pop
cli
out
mov
fildl
jne
insl
rcr
icebp
scas
jp
pop
xchg
je
loop
clc
ljmp
and
fdivl
loope
dec
ret
mov
push
add
xchg
jbe
imul
test
dec
nop
mov
in
xchg
flds
and
push
js
xor
ljmp
ja
and
inc
inc
and
int
adc
xchg
jmp
add
xlat
push
xchg
dec
adc
add
fisubl
ficoms
loopne
into
test
fldcw
out
inc
out
cmc
sbb
xor
xchg
inc
jmp
lcall
sahf
inc
lret
pop
jg
in
popf
pop
js,pt
cs
inc
les
loopne
mov
sub
dec
xchg
inc
out
dec
lods
mov
cs
mov
pop
test
inc
sbb
loopne
stos
jae
js
cmp
shl
imulb
inc
pusha
mov
xchg
arpl
in
popf
dec
adc
push
in
and
out
mov
addl
xchg
sbb
mov
pushf
cmp
or
orb
gs
call
sub
xchg
lcall
jns
add
test
loope
test
sahf
mov
mov
scas
or
lahf
std
lcall
scas
sbb
sbb
inc
aam
xor
pop
sldt
cs
scas
sbb
int
leave
inc
inc
jns
je
ret
inc
aam
cmpsb
mov
sbb
das
rolb
jge
or
in
push
imul
or
dec
fsts
scas
test
xchg
jg
in
push
inc
mov
ficompl
cmp
inc
sahf
mov
and
test
add
shll
out
iret
inc
xchg
or
xchg
scas
outsl
pusha
fdiv
xchg
cmp
jge
add
mov
pop
sbb
in
adc
or
in
popa
int
mov
jp
repz
jge
movsl
fdiv
xchg
imul
jnp
mov
cld
adc
xor
mov
inc
push
stos
loopne
jb
sbb
cld
dec
gs
xchg
outsl
sub
pop
mov
retw
push
scas
lock
sbb
cmp
iret
mov
movsl
rcrl
daa
cmp
mov
push
cmp
sbb
jl
mov
or
in
das
sbb
stos
pop
sahf
jae
stos
mov
adc
sub
cmp
mov
out
mov
push
pusha
xor
dec
xor
out
pop
adc
push
pop
mov
iret
add
xchg
nop
jg
sub
in
insl
and
enter
in
arpl
mov
jo
xorb
xor
arpl
and
repnz
mov
mov
xor
jmp
xor
mov
ljmp
popa
in
pop
cld
je
hlt
sub
sub
pop
js
shll
notb
push
xchg
pop
test
repnz
xchg
xchg
mov
bound
cmp
push
insl
incb
out
or
xchg
out
add
mov
xor
dec
pop
aad
and
std
scas
arpl
sub
inc
lods
popa
push
pop
icebp
fwait
xchg
mov
ljmp
movsb
fidivl
xchg
lret
cmp
sbb
xchg
mov
lods
pushf
pop
dec
int
xchg
ret
sbb
mov
mov
mov
mov
in
push
outsl
mov
push
mov
push
xchg
gs
mov
dec
arpl
inc
shl
or
dec
dec
xor
fsubs
movsl
cwtl
push
mov
push
jmp
sub
pop
pop
cli
test
inc
dec
add
mov
cmp
push
in
or
add
subl
fldl
orb
xchg
aaa
rorl
out
sub
push
cwtl
mov
ret
cmp
inc
sarb
pop
xor
push
pop
adc
jne
loopne
inc
mov
mov
cmp
scas
sub
jl
or
xorb
es
pushf
ret
ljmp
jp
sbb
and
rorl
pop
cmp
dec
data16
in
movsl
fs
icebp
or
ljmp
shlb
xor
or
xchg
sbb
mov
adc
mov
dec
lea
dec
lret
lock
jnp
popa
daa
inc
icebp
cmp
adc
pop
jg
aas
mov
outsb
repnz
imul
pop
ja
add
aas
pop
jno
mov
hlt
daa
or
pop
dec
cmp
inc
rclb
mov
jge
ret
adc
or
dec
mov
out
xor
adcb
xchg
pop
rorl
dec
pop
jno
or
fisubl
cmpsl
fiaddl
push
in
push
aam
sub
mov
shrb
leave
mov
subb
cltd
inc
sbb
shl
fwait
inc
les
int3
add
cmp
pushf
repnz
xchg
clc
push
cmp
cmpl
push
sub
push
fistpll
imulb
cmpsb
rorb
pushf
mov
jo
mov
dec
pop
inc
pop
dec
sbbl
pop
mov
stos
scas
inc
mov
mov
js
jecxz
mov
push
ljmp
lods
sub
into
call
push
jl
jl
outsl
mov
pop
adc
sbb
mov
insl
lret
jae
stc
and
inc
push
shl
mov
cmpsl
and
scas
add
mov
mov
or
mov
mov
cmp
push
stc
gs
jae
mov
ds
enter
jl
pop
lret
push
daa
pop
scas
push
call
cmp
into
jp
sti
int3
inc
pusha
mov
pop
rcr
cltd
mov
sbb
test
bound
mov
push
test
test
clc
test
dec
jo
cmp
inc
pop
or
ret
cli
adc
in
xor
add
add
jp
scas
ja
adc
fprem
xchg
pop
out
inc
addr16
adc
cmp
mov
jl
sbb
movsl
pusha
push
push
mov
scas
rorb
in
push
imul
imul
and
jmp
arpl
jl
cmp
add
pop
out
inc
in
repz
movsb
lret
jbe
mov
push
sarb
pop
or
inc
je
sarb
xchg
out
mov
arpl
inc
js
ret
add
loopne
insl
jne
cmp
cmp
in
push
std
mov
cmp
stc
lods
es
pop
mov
ficomps
mov
pop
imul
iret
mov
inc
lret
mov
add
scas
orb
sub
cli
push
or
adc
cmp
in
inc
pop
jns
lcall
in
adc
push
mov
sbb
test
dec
out
push
dec
lods
fisubrl
jge
rcr
das
jne
ret
mov
mov
fsubr
pusha
inc
imul
push
xchg
sub
movsl
fistl
dec
je
popf
jg
push
mov
sbb
outsb
negl
imul
push
push
lret
xchg
imulb
lods
sbb
hlt
sbb
ljmp
mov
sub
int
scas
out
jb
popf
sub
mov
mov
sub
ficoml
lods
test
jge
ja
int3
cli
mov
andb
cmp
lcall
cmp
push
lahf
ret
jnp
sub
sub
cmp
js
jl
push
insl
cltd
imul
scas
popf
push
sub
lock
test
pop
add
in
add
mov
and
inc
cmc
mov
and
out
imul
pop
jg
xor
push
mov
popa
push
sbb
adc
push
pop
sub
mov
or
popf
sti
push
ret
test
test
in
or
gs
add
cmp
stos
pop
cmp
pop
cli
adc
cmp
pop
cs
jae
rorl
je
rorb
or
ljmp
nop
hlt
subl
mov
gs
gs
or
ss
sahf
int3
adc
lock
sub
les
adc
or
movsl
pop
scas
leave
jns
mov
into
and
xchg
cmc
sub
mov
sub
jle
hlt
push
inc
cltd
add
mov
nop
sbb
pop
mov
add
mov
push
and
push
mov
xor
pop
adc
popa
cwtl
and
push
mov
adc
sahf
aad
pop
lock
cli
add
mov
or
fldz
dec
sbbl
int3
add
dec
cmp
into
adc
lds
lods
mov
push
mov
mov
add
xchg
cmpsb
sti
xor
stos
pushf
push
ss
mov
pop
ja
or
xor
bound
mov
shll
and
jne
or
push
int
lock
mov
mov
test
pop
movl
fwait
cwtl
adcl
mov
mov
fbstp
xchg
sub
daa
int3
icebp
and
lcall
inc
mov
lahf
aad
daa
mov
test
or
sbb
cli
insl
jae
dec
sbbb
add
pop
fidivs
push
ja
pop
add
xlat
xor
stos
les
xchg
pusha
jp
push
bound
sub
data16
inc
push
lret
imul
push
cld
sbb
icebp
rcl
loop
inc
es
pop
movsl
jecxz
loope
xchg
mov
mov
aad
adc
testb
test
and
icebp
xchg
mov
les
ds
ficompl
dec
cltd
jmp
xchg
mov
in
and
cmp
ds
fdivs
rclb
jle
repnz
out
jno
loope
xor
push
sbb
add
jmp
mov
testl
push
pop
je
mov
rorl
dec
fs
ret
std
ljmp
je
dec
jne
dec
ja
cmp
xlat
sub
dec
pop
out
lods
mov
adc
fidivs
push
addb
inc
sbb
dec
aad
pop
push
mov
and
scas
and
aas
add
in
jbe
jge
lahf
pusha
fdiv
in
adc
movsb
ret
push
popf
fdivl
imul
outsb
jmp
xchg
scas
clc
dec
in
dec
or
mov
dec
jae
and
push
jp
mov
pop
inc
and
cmp
xchg
int3
add
cmp
adc
sub
xorb
and
and
push
insl
xchg
std
push
xchg
lds
mov
test
lock
add
xchg
inc
sub
pop
mov
ret
test
jp
in
lods
xor
sbb
inc
rcl
adc
test
aas
cld
repnz
mov
mov
cmp
and
add
cmp
jne
pop
mov
pop
subb
push
imul
or
mov
push
movsb
mov
push
cmp
pop
lcall
push
bound
jle
repnz
fisubs
cs
lahf
mov
mulb
mov
repz
sbbl
inc
iret
add
sbb
xchg
mov
inc
cmpl
insb
in
jecxz
or
popf
out
pop
ret
movsb
ret
xchg
and
aam
test
in
xchg
mov
jb
mov
adc
repnz
jge
xchg
push
add
xorb
stos
cli
jl
in
test
push
xchg
adc
mov
mov
cmp
fstl
call
sbb
clc
out
jmp
stos
iret
jo
sbb
nop
stos
addr16
push
xchg
cmc
mov
inc
push
lret
xchg
or
inc
or
loope
mov
das
and
xor
scas
mov
xchg
stos
cs
cmpsb
xlat
lods
jae
movsb
cmpsb
fs
jle
mov
sahf
mov
sub
jno
pop
cld
sub
lods
sub
ret
loopne
jbe
and
push
scas
popa
xor
rolb
mov
or
mov
jl
out
out
xor
xchg
cwtl
mov
leave
rcrb
popf
sbb
scas
shlb
jg
std
mov
cmc
insl
xchg
cli
xchg
and
pop
pop
and
arpl
sub
dec
dec
mov
sub
cmp
rorb
popa
mov
push
push
push
and
cmpsl
aam
ljmp
mov
pop
out
push
nop
add
push
jae
adc
icebp
nop
scas
add
in
push
lods
into
addl
adc
fsub
fcoml
inc
pop
pop
neg
adc
scas
jnp
jno
jl
adc
adc
in
and
imulb
cmpsb
pop
push
jns
mov
fistps
pop
push
std
cmp
fisttpl
dec
decl
sbb
movsl
sub
add
ficompl
mov
mov
lds
push
xor
cmp
mov
cs
out
push
dec
ljmp
sbb
mov
addr16
dec
in
insl
repnz
cmpsl
in
sbb
pop
jbe
outsl
daa
lahf
stos
and
or
mov
add
adc
adc
inc
insl
mov
or
mov
aas
pushf
faddl
add
add
mov
insb
scas
push
shr
or
add
mov
nopl
xor
jecxz
lods
and
scas
adc
mov
jbe
jge
mov
or
lods
stos
jns
movsl
ss
inc
out
pusha
sub
mov
imul
xor
cld
mov
les
inc
lcall
push
xchg
stos
xchg
and
ret
cltd
icebp
mov
and
scas
mov
jne
cmp
dec
mov
push
sbbb
xchg
pause
cmp
ljmp
and
jmp
scas
jp
mov
dec
flds
push
outsb
push
clc
ljmp
scas
out
dec
lods
mov
lret
mov
sti
scas
insb
mov
lahf
mov
push
jb
adc
inc
push
mov
aaa
push
and
test
repnz
dec
and
jns
inc
mov
lret
xlat
or
cwtl
imul
mov
sub
push
imul
lods
xchg
fdivrs
mov
stos
mov
pushf
repnz
movsl
cmpl
fcmovne
adc
enter
lea
scas
pop
rcll
das
fiaddl
addr16
sbb
mov
xchg
jp
mov
repnz
aad
mov
daa
pop
xor
insb
bound
or
inc
lds
xor
cmp
ja
push
loop
mov
dec
sbbl
inc
aad
jmp
add
push
push
cltd
inc
jne
aas
int
negl
push
loop
loope
push
out
movsl
jecxz
pop
adcl
stc
lea
xchg
dec
mov
or
into
imul
push
shrb
cmp
aas
and
dec
xchg
aas
jmp
test
adc
cmpsl
or
out
sub
xor
je
fucom
les
or
aam
jnp
jp
cli
jb
push
mov
jle
popf
pop
popf
nop
mov
xorl
sbb
fdivr
stos
mov
fs
pop
outsb
mov
clc
ljmp
leave
sbb
mov
xchg
cmpsl
rcl
mov
das
dec
addr16
lods
fdivrp
jne
xchg
test
sub
jno
icebp
daa
mov
ficoms
sbb
pop
or
data16
add
lcall
notb
enter
push
mov
mov
divps
lock
jecxz
mov
out
lock
jb
shr
dec
pusha
shll
flds
std
aas
mov
xchg
push
inc
pop
stos
add
inc
mov
add
fmull
ret
fwait
out
jl
fidivrl
fisttpll
outsb
loopne
iret
mov
adc
call
sbb
pop
mov
pop
xchg
jmp
mov
push
js
fildl
jmp
mov
cmpsb
icebp
pop
xchg
and
jmp
cmp
sbb
testb
xor
hlt
sahf
cmpl
dec
pop
and
lahf
sbb
fdivl
insb
out
inc
lea
call
or
push
loop
andb
dec
stc
loope
mov
arpl
mov
inc
cmp
cltd
ss
xchg
fstps
jmp
insb
stos
popf
ljmp
aam
adc
xor
inc
rorb
test
adc
movsb
mov
jns
jmp
scas
repz
psubq
in
add
pop
inc
xchg
int
sbb
dec
arpl
shlb
dec
mov
jle
mov
repnz
inc
mov
lods
lods
idiv
jne
addr16
int
pop
or
xchg
xchg
ret
dec
fs
faddl
sbb
push
clc
fs
mov
imul
fcoml
mov
push
fildl
push
jmp
inc
mov
inc
pop
mov
push
arpl
add
std
mov
or
fcoml
sub
fisttpl
dec
fldenv
loope
jae
jl
ss
xor
aam
or
fcmovb
sti
shr
pop
sbb
dec
int3
fwait
mov
inc
rcr
adc
repnz
call
xchg
cmp
sti
flds
pushl
into
data16
test
push
xchg
stos
sub
std
jp
and
nop
hlt
subl
mov
imul
jmp
dec
jne
outsl
rcrb
movsl
sarl
xor
adc
lods
lret
pop
push
xor
pop
bound
cmp
mov
mov
cmpsb
xor
test
test
sarl
cmp
fs
sbb
jle
mov
test
jb
imul
sbbb
pop
call
rorl
out
pop
repz
nop
aam
pop
gs
enter
mov
roll
dec
je
in
notb
es
loop
add
stos
test
cmp
fcoml
pusha
adc
cmp
fwait
cmp
inc
add
push
gs
pop
push
outsb
pop
xor
int
daa
jp
loopne
pop
je
ret
xor
std
and
push
add
pop
and
ja
jg
add
lret
xchg
inc
sbb
mov
fistpll
push
lock
inc
ret
pusha
mov
popa
jge
rorl
imul
aam
inc
repnz
jp
ret
cld
je
iret
xchg
sti
and
idiv
insl
pop
test
pushf
shll
leave
jg
dec
clc
ljmp
cmpsb
adc
xchg
or
lret
aaa
jnp
xor
jnp
hlt
push
icebp
inc
sbb
dec
fldlg2
les
mov
jo
xchg
mov
jo
or
xor
lahf
pop
jns
and
aad
insb
outsl
pusha
jecxz
adc
xchg
push
mov
dec
push
xchg
lea
cs
or
jbe
jecxz
adc
bt
mov
jb
addr16
test
mov
out
data16
pushf
push
push
roll
add
int3
cmp
in
adc
popf
loope
icebp
es
push
dec
mov
pusha
sub
pusha
jp
mov
adc
pushf
inc
scas
sti
push
hlt
inc
ja
push
xor
iret
call
xchg
int3
orl
xchg
sarl
add
adc
adc
cmp
in
adc
sbb
popf
repz
js
sbbl
sub
mov
test
cmp
cli
xchg
rsqrtps
enter
mov
xor
arpl
mov
sarb
xchg
out
push
cmp
cmpsb
jb
pop
jge
adc
sbb
pop
xor
mov
pop
and
loope
adc
mov
xor
push
push
push
fbstp
pop
in
inc
mov
dec
mov
pop
mov
jne
or
and
addr16
jo
movsb
xor
inc
jl
push
fs
dec
adc
outsb
push
iret
jmp
inc
push
movsb
add
and
sbb
jp
cs
jg
jns
and
jecxz
mov
add
cmp
aad
xlat
stos
and
mov
add
stos
stc
fistps
xor
lds
jg
inc
sti
xchg
out
loope
popf
fwait
out
and
imul
push
adc
nop
lea
and
ficoms
aaa
mov
mov
enter
scas
jp
and
movsl
jmp
adc
mov
mov
stos
and
dec
ljmp
push
loop
arpl
scas
in
xchg
fldenv
mov
std
stos
and
gs
jl
fisubrl
fs
mov
je
shll
mov
fwait
rorb
sarb
aaa
insb
cmp
cmp
mov
add
jecxz
leave
sbb
aaa
adc
and
scas
xchg
add
adc
and
add
insl
shl
test
mov
jle
in
pop
mov
mov
sbb
xchg
mov
ret
push
jns
mov
jle
cmp
mov
aad
xor
ja
es
filds
sub
in
add
in
test
cmp
add
sub
in
imul
inc
lret
xor
fwait
mov
mov
int
inc
jns
lods
daa
adc
call
mov
rcll
xchg
outsl
leave
insl
inc
ds
jbe
lds
loope
in
lahf
and
push
sub
aad
sub
pop
pusha
mov
pop
push
cmpsb
add
es
mov
rorb
in
push
dec
adcb
add
xchg
in
fldt
mov
lcall
pop
leave
frstor
adc
mov
fucomp
push
pop
cmp
jmp
push
mov
fdivrs
lea
insb
cmpsb
inc
and
push
daa
or
inc
mov
jmp
ret
cmp
pop
mov
dec
sbbb
add
shrb
fisttps
push
push
and
pushf
sub
dec
gs
stos
imul
or
cld
out
sub
data16
pop
mov
sbb
int
in
push
inc
pop
rorl
sub
dec
out
and
lcall
sti
movsl
pop
scas
mov
in
or
call
lret
lahf
xchg
add
lret
in
ret
dec
std
fcoml
fnstcw
sbb
mov
stc
test
cmp
xchg
mov
push
inc
addr16
and
jo
aam
imul
push
filds
xchg
test
jbe
and
mov
shr
imul
negb
popa
ja
mov
fistpll
hlt
out
mov
mov
out
movsl
iret
pop
dec
outsl
cmpsb
xor
mov
arpl
xchg
cmp
dec
imul
sbb
inc
jp
inc
icebp
out
sbb
mov
je
ljmp
sub
and
pop
dec
mov
out
dec
sbb
cmpsb
mov
lds
insl
mov
mov
add
nop
fwait
jl
adc
jle
inc
lock
pop
xchg
aas
hlt
rorl
flds
or
and
mov
xlat
adc
pusha
or
cmp
in
and
sbbl
aad
adc
sub
mov
adc
jae
cmp
or
lcall
inc
pop
push
dec
sbb
cmp
xorl
sti
sbb
lea
dec
fucom
in
adc
add
adc
add
xor
mov
xor
insl
xchg
push
out
dec
testl
scas
xor
cmpsb
pop
pop
shlb
shrl
or
pop
ret
jo
adc
scas
imul
sbb
hlt
push
es
into
xchg
ja
scas
jmp
js
shl
xchg
in
sub
clc
or
in
nop
pop
push
dec
lock
loope
leave
xchg
pop
scas
lock
add
int
mov
aas
movsb
inc
arpl
jns
sbb
mov
xorb
inc
pop
or
ret
jmp
popf
aam
mov
pop
cltd
andb
fldcw
dec
mov
int
pop
insl
xlat
inc
shr
or
shlb
fisubrl
mov
out
sbb
push
test
and
mov
jb
or
mov
out
add
pop
push
mov
xchg
push
scas
out
jmp
cs
aam
inc
adc
mov
and
mull
stos
cmp
push
push
cmp
xor
iret
pop
dec
jg
or
outsb
dec
dec
push
cmp
inc
and
mov
sub
fxch
out
push
popf
sarb
push
pop
or
repnz
mov
sbb
es
in
out
ss
fdivrs
pop
adcl
push
sbb
jl
hlt
insb
xchg
xchg
mov
js
subl
or
jl
gs
in
gs
out
mov
sbb
sbb
imul
imull
add
and
sbb
dec
push
inc
mov
and
scas
mov
in
pushf
adc
cmpsb
addr16
aaa
mov
jg
push
push
movsb
fidivrl
cmp
xor
aaa
scas
daa
inc
lock
in
fnstsw
push
repz
mov
mov
cmp
jge
in
adc
pop
stos
fs
cmp
fstp
inc
repnz
mov
loope
in
jecxz
push
fwait
ret
xchg
int3
pop
xor
jno
das
xor
xor
das
data16
jge
in
in
in
mov
inc
or
stos
ljmp
mov
testl
popa
mov
pop
sbb
pop
cmpb
lds
bound
ret
aam
xchg
or
fisubrl
flds
jne
ds
fldenv
sbb
sub
or
sarb
daa
into
aad
dec
jne
and
int3
out
and
jl
ljmp
push
cmpsb
adc
addr16
adc
rcrl
rorb
sarl
inc
pop
jno
test
stos
out
pop
cwtl
aam
and
aas
scas
stos
dec
test
stos
dec
xor
mov
cltd
jle
mov
mov
mov
inc
push
fmuls
sbb
jg
add
xor
xchg
clc
ljmp
and
dec
push
and
idiv
insl
cmp
sbb
roll
ljmp
xchg
fld
add
jg
outsb
out
push
xchg
mov
or
mov
sbb
xor
mov
lret
mov
std
and
xlat
aad
stos
pop
and
fstp
rcrl
cmp
scas
int3
add
xchg
add
push
sbb
cmpsl
loope
mov
sbb
outsb
enter
xlat
scas
and
mov
pop
fnsave
sti
inc
xchg
xchg
adc
mov
mov
aas
jb
add
test
ja
shl
shlb
pop
stc
je
push
push
inc
xchg
in
xor
ficoml
push
mov
push
lock
inc
cltd
inc
sbb
movsl
and
adc
xchg
scas
adc
sbbl
js
inc
jp
les
fs
lret
aam
cs
iret
ror
jnp
imul
xchg
add
fidivs
dec
cld
mov
add
fmuls
sbb
mov
test
pop
test
pop
nop
mov
loopne
dec
je
or
and
cmp
popa
xchg
andl
xchg
daa
mov
or
xchg
add
mov
test
ss
loopne
repnz
cmp
out
cltd
sti
js
or
xchg
mov
das
push
insb
inc
mov
out
push
push
xchg
faddl
sahf
testb
pop
mov
inc
repnz
pop
cmpl
gs
cmp
in
sub
int
testb
push
inc
push
mov
inc
repnz
stc
push
mov
push
mov
cwtl
test
inc
insb
mov
pusha
pop
fsts
mov
or
inc
or
or
push
nop
je
sbb
out
ljmp
ja
inc
clc
ljmp
rorb
data16
or
mov
mov
sbb
scas
hlt
push
fwait
sub
mov
mov
lret
cltd
outsl
out
das
dec
sbb
negl
inc
ret
xor
pop
scas
ret
inc
xchg
repz
fldenv
and
test
xchg
out
fs
jno
xchg
lea
aam
dec
iret
sub
das
mov
lea
ljmp
jecxz
in
pop
insl
nop
pop
push
inc
push
mov
pop
daa
pop
cli
data16
xor
dec
jne
shll
jno
icebp
xor
add
dec
adc
imul
loope
shll
imulb
cmp
pop
pop
fwait
cld
icebp
sbb
ss
enter
adc
jle
push
pushf
cmpsb
push
insb
shrb
icebp
hlt
push
insl
rcr
mov
push
shr
sub
xor
add
mov
mov
loop
mov
sub
pop
mov
mov
inc
outsl
sbb
pop
xchg
jmp
dec
mov
out
inc
in
cmc
sbb
cld
cmpsl
mov
xor
fildl
cmp
sub
loope
push
mov
addr16
cmp
xor
push
adc
xor
pop
ret
jns
xlat
adc
pusha
mov
jle
xchg
inc
call
shll
roll
sarb
add
push
iret
add
add
xchg
inc
sub
loopne
sti
push
imul
std
pop
popf
push
pop
scas
leave
jns
pop
jecxz
inc
xchg
lret
aaa
push
mov
xlat
fstl
push
xor
or
xchg
dec
mov
and
es
shr
add
xchg
mov
mov
and
or
vandps
test
push
xchg
or
mov
jbe
xchg
lret
sub
in
clc
adc
jae
mov
out
pushf
lahf
jle
adc
add
mov
xor
pop
imul
or
pop
xchg
pop
int
inc
mov
sbb
jl
add
adc
mov
and
std
loopne
mov
or
call
out
dec
mov
add
adc
dec
sub
pop
loop
nop
xor
lea
xchg
add
ret
xchg
ds
inc
xor
jle
cwtl
imul
ljmp
mov
inc
jp
and
mov
sti
pushf
push
int
in
push
jg
pop
test
mov
fs
add
jae
inc
mov
mov
add
push
cltd
mov
adc
fildll
out
push
aad
les
inc
test
ret
cmp
sbb
pop
jne,pt
iret
inc
sbb
lock
inc
pop
mov
lods
test
jle
cmp
or
sbb
or
ret
xlat
movb
xchg
insl
xchg
lret
dec
data16
loope
mov
cmpsb
push
or
xor
dec
cmc
in
dec
inc
or
add
mov
pop
push
xchg
push
shll
push
jl
fstl
rorl
icebp
jge
mov
sub
aaa
je
gs
mov
cs
data16
mov
jb
aam
pop
and
jmp
xchg
sti
testl
pusha
fcomps
xchg
and
xchg
stc
and
ljmp
lea
rcr
arpl
in
sbb
out
pop
in
ja
add
inc
out
jg
dec
js
ss
push
jbe
aas
fsub
pop
xor
out
or
sub
push
push
add
pop
mov
inc
mov
inc
lret
repnz
inc
push
jb
es
mov
ret
pop
add
fistpl
sbb
xor
in
ljmp
sbb
rcl
mov
xor
mov
ret
stc
js
cld
jae
out
not
mov
add
pop
aaa
and
inc
aam
in
mov
add
mov
add
and
into
push
outsb
ret
jbe
nop
xor
inc
int
rcl
mov
test
pop
subl
mov
mov
fistl
mov
adc
jo
inc
xor
ss
psubd
sub
test
xor
jmp
aas
or
adc
xor
jno
and
movsl
xchg
push
push
jae
sbb
dec
jbe
inc
loopne
rep
push
mov
inc
push
mov
repz
popa
adc
fdiv
jnp
imulb
sub
add
je
subl
in
jmp
jnp
or
pop
fs
cli
xchg
int
add
mov
or
ret
sarl
cmpl
adc
pop
dec
out
imul
daa
jno
loopne
out
adc
test
push
mov
pushf
jo
mov
aas
mov
pop
cli
sbb
cmpsb
and
in
loop
inc
ret
cmp
cmp
xchg
stc
adc
andb
int3
sbb
ljmp
sarb
je
aam
adc
inc
test
and
dec
push
cmc
sbb
cmpsb
xor
xor
xchg
nop
mov
adc
lret
bound
int
and
mov
mov
add
sbb
lea
int3
inc
mov
jl
cmp
jnp
lock
fdivs
je
lahf
sub
mov
push
dec
xchg
push
push
jne
out
push
adc
nop
outsb
out
int3
test
insb
push
je
pushf
and
mov
adc
adc
xchg
shlb
test
inc
xchg
pusha
push
andb
mov
sar
repnz
jp
xchg
push
mov
inc
outsl
xchg
adc
inc
divb
clc
mov
jno
mov
bound
mov
repz
or
add
std
adcb
and
fistl
dec
insb
xchg
xchg
mov
push
mov
inc
fcomps
dec
js
push
or
es
inc
or
or
xor
out
inc
js
xor
ffreep
inc
ljmp
into
hlt
es
or
sub
cli
imul
repz
inc
rclb
out
fwait
shr
push
push
fidivrs
push
nop
scas
enter
ficoml
loope
pop
xchg
mov
andl
enter
jae
adc
pop
shll
mov
rorl
movsb
loopne
subl
push
test
repnz
nop
ds
inc
ljmp
cmp
ljmp
and
adc
cmp
mov
xor
call
ljmp
mov
pop
adcl
push
repz
push
popl
and
movsl
fwait
mov
add
push
out
leave
mov
inc
xchg
lret
mov
pop
jl
into
push
xor
test
cltd
mov
push
jno
out
loop
push
je
or
inc
pop
jns
fbstp
adc
cmp
pop
adc
mov
jnp
sarl
js
call
lea
int
sbb
push
enter
mov
sbb
adc
sbb
cmp
aad
and
rcll
mov
pop
loopne
pop
fcoms
es
sbb
cmp
jns
push
push
mov
clc
push
xor
lds
cmpsl
push
rolb
xchg
std
cmp
leave
jecxz
pop
popa
scas
add
cmp
push
lret
pop
jge
push
stos
cmpl
or
or
push
imul
or
mov
xchg
loope
fsubrs
int
xor
jge
int
lea
xor
cli
pushf
shll
jnp
cmp
add
in
lcall
inc
sbb
and
xchg
inc
mov
ja
push
fiaddl
cld
test
xchg
jmp
shrl
pop
ja
jle
inc
mov
dec
aaa
mov
or
js
jmp
and
inc
es
out
fildl
andl
jge
push
jbe
in
movsb
cmp
adc
inc
dec
cmp
xchg
add
into
pushf
lea
aas
pop
pop
bound
fstl
pop
sbb
test
leave
cmpl
jg
mov
push
inc
jo
and
cltd
mov
sub
mov
push
shr
xchg
mov
aad
fwait
insb
in
jnp
mov
mov
fldt
scas
lret
fldenv
pop
mov
pop
iret
lods
jg
xchg
sbb
pop
xchg
call
push
sub
std
pop
pop
cmpsb
dec
movsl
mov
inc
mov
xchg
jne
pop
cmp
mov
mov
loopne
mov
insl
sbb
cwtl
lock
lret
pop
jg
xor
pop
jmp
push
inc
xchg
xor
inc
js
pusha
mov
lret
add
dec
lret
push
movsb
push
divl
push
push
shrl
lods
xor
jmp
aaa
mov
stc
test
cmp
sti
imul
jl
loopne
mov
mov
icebp
or
in
imul
xor
push
mov
pop
push
fildl
pop
outsl
xchg
inc
xchg
addr16
cmp
sbb
out
cld
inc
push
ja
aad
cmpsb
cli
adc
inc
fs
inc
cwtl
mov
cmp
repz
dec
fs
xchg
fdivs
add
lcall
popa
aas
mov
shlb
inc
mov
push
bound
in
inc
inc
sbb
push
push
sub
sbb
clc
adc
and
xchg
test
jp
push
push
movsl
adc
mov
aaa
std
flds
insb
inc
test
psrlq
jmp
dec
shl
mov
loop
cmp
mov
imulb
arpl
mov
or
aas
comiss
addr16
in
jbe
pop
mov
sbb
cli
dec
test
pushf
pop
in
stc
push
jmp
xchg
call
imul
jae
movsl
mov
sbb
xor
cmpsl
nop
ret
loope
pusha
aas
sbb
push
mov
insl
aam
pop
jbe
xlat
rorb
loope
negl
cli
rorb
ja
icebp
aad
fs
sbb
and
mov
jns
xlat
inc
mov
jb
dec
in
pop
out
inc
jo
mov
or
mov
mov
pop
dec
mov
ret
push
jl
mov
sti
or
int
call
fwait
mov
mov
test
cmp
outsb
dec
decl
das
mov
lea
mov
add
mov
inc
imul
repz
in
mov
in
jp
sti
jecxz
cmp
and
jp
scas
xor
push
push
sub
adc
ss
mov
xchg
xchg
mov
rol
and
sbb
inc
lret
notl
mov
imul
push
pop
mov
push
cmpsb
push
push
jp
cs
clc
imul
dec
mov
xchg
cli
push
inc
mov
leave
push
jge
inc
dec
frstpm(287
mov
call
in
mov
jb
repz
push
dec
cltd
sub
in
lods
outsb
arpl
and
adc
ja
fcmovnu
jbe
push
iret
dec
mov
sub
out
imul
orb
inc
mov
aas
nop
in
xor
aaa
bound
cmp
or
xchg
push
push
add
cmp
popa
cmp
aad
adc
mov
into
add
jae
sbbl
dec
mov
jp
fldt
sbbl
fimuls
add
pushf
fistl
lahf
jmp
lahf
hlt
push
jnp
fiaddl
out
roll
or
clc
loopne
jb
adc
cmp
ja
out
enter
repnz
sbb
sti
inc
pop
xor
push
add
lock
sub
xchg
adc
cltd
xor
xchg
lcall
inc
push
pop
movsl
fcoml
sub
shll
lret
push
mov
pop
subl
daa
pop
jmp
pop
lret
xor
out
faddl
push
mov
imul
sti
cmpsb
mov
xor
push
or
add
dec
popa
in
jp
or
ret
jns
pop
and
mulb
enter
mov
pushf
mov
cmpsb
loop
mov
fiadds
pop
ret
mov
mov
movsb
mov
cmp
mov
sub
sub
mov
pushf
jb
shlb
push
pop
pop
std
popa
jg
mov
inc
mov
dec
arpl
ss
or
fcoml
bound
jle
sbb
push
jge
pop
dec
mov
icebp
xchg
xlat
scas
leave
xchg
jo
lret
pusha
xor
sbb
mov
mov
jl
sub
sti
movsb
pusha
mov
lock
loope
cmc
out
popf
repnz
out
mov
adc
pop
les
lahf
lahf
pusha
xor
inc
mov
adc
test
cs
jmp
add
insl
jl
jno
cmp
mov
shll
aam
sbb
enter
movsb
int3
hlt
dec
repz
sbb
movsb
fldt
addr16
sti
repz
sahf
repnz
hlt
jns
lods
fistl
pop
jg
jns
and
or
fs
icebp
cmp
or
fs
divl
sub
cwtl
mov
add
sub
cmp
mov
pop
imul
ljmp
or
mov
lret
and
xchg
stc
lock
mov
btl
push
sbb
add
jge
ss
mov
adc
xchg
jbe
mov
shrb
xor
mov
jae
pop
or
push
push
mov
rcll
xor
call
mov
inc
pop
gs
sarl
xor
rcrl
lock
fisttpll
cmp
inc
add
jno
sbb
divl
xchg
or
sub
out
adc
pmaxsw
aad
push
inc
cmpsl
stc
jno
mov
xchg
scas
in
sub
mov
imul
push
movsl
sub
and
negl
inc
test
loope
mov
movsb
fistl
inc
sahf
mov
mov
cmp
out
insb
mov
int3
pop
jne
out
loopne
leave
inc
xchg
lret
inc
movsl
and
xor
nop
pop
cmpsb
rorb
scas
cmp
mov
push
lret
and
push
cli
int3
fildll
xlat
outsl
push
ja
add
lret
mov
mov
mov
xor
iret
and
nop
adc
jecxz
aad
or
scas
cmp
subl
sub
pop
jno
ret
inc
sar
dec
addr16
fcomp
lock
or
jne
and
outsl
cld
cmpsl
mov
xor
mov
mov
loop
xchg
add
cmp
adc
and
or
cmpl
cmp
in
loopne
shlb
cltd
mov
mov
imul
aam
divb
mov
or
orb
jne
mov
sbb
mov
inc
cltd
out
lret
pushl
dec
cmpb
das
inc
or
push
cmpsl
shrl
dec
ja
add
jno
jo
pop
dec
jno
rolb
enter
ljmp
and
dec
pop
add
mov
aad
js
pop
lahf
sbb
cmpsb
jmp
int
fadd
or
cmp
xchg
lods
add
frstor
inc
ret
pusha
rcrb
jnp
cmp
test
inc
inc
jb
ds
rclb
repz
inc
mov
xor
mov
addr16
packuswb
loopne
ret
xor
inc
mov
testl
shll
cli
adc
into
cltd
lahf
sahf
cmp
cwtl
sub
jnp
adc
or
dec
fidivrs
js
sub
fwait
sub
stos
pushf
sti
adc
mov
cmp
repnz
addb
dec
fs
out
inc
lods
call
mov
int
fsts
dec
mov
sarl
shll
xor
loopne
shll
xchg
inc
fcomip
jns
into
outsb
out
js
rcrl
jg
xor
shl
rcrl
in
out
js
jne
jns
mov
fs
notl
adc
arpl
stos
stos
js
add
pop
subb
inc
pop
jae
stos
mov
mov
ds
sbb
jg
js
jmp
cmp
das
ffreep
fnstsw
jo
add
push
insb
sbb
fnstsw
lods
insl
mov
mov
pop
test
mov
or
outsl
mov
and
mov
int3
inc
pop
ss
pusha
mov
xor
cltd
add
int3
imul
inc
js
push
sbb
pop
fnstenv
fists
mov
movsb
and
push
pop
dec
and
inc
and
pop
cmp
mov
int3
adc
or
xchg
push
arpl
pop
out
xchg
add
mov
in
xchg
mov
addr16
idiv
sbb
fsts
int3
in
adc
dec
mov
xor
in
or
push
adc
pushf
adc
mov
inc
mov
vandnps
in
or
or
mov
lock
mov
inc
sbb
nop
mov
cwtl
int3
rcll
js
inc
nop
cmp
inc
sub
mov
test
imul
ret
jecxz
add
cmpsb
rcrb
add
dec
int
push
je
fsubr
cmp
xlat
mov
and
rorb
andl
ljmp
mov
push
jb
clc
inc
aam
leave
cmc
dec
jg
addr16
movsl
call
pusha
jp
cs
cmp
lea
mov
pop
jae
mov
out
jg
mov
push
cmp
mov
mov
or
test
fisubl
into
xorl
ret
xchg
shlb
and
xchg
or
and
mov
mov
cld
lods
or
cmp
out
and
or
clc
pop
jno
in
pop
lret
daa
mov
insl
jae
and
jb
out
inc
xchg
mov
js
lret
rorl
in
sbb
cli
and
add
fnstsw
and
sbb
fsubrs
mov
ss
ljmp
sub
jp
jbe
or
add
jb
cmp
popa
or
bound
jbe
or
push
idiv
mov
cmp
ljmp
cmc
add
add
xor
fldcw
aaa
popa
int
push
mov
testl
xor
test
fildll
mov
lret
pop
mov
scas
mov
out
mov
dec
adc
stos
push
push
orb
mov
outsb
out
cmovnp
cwtl
inc
sbb
and
push
fnsave
jne
xor
das
xor
ja
and
xchg
sub
adc
mov
xchg
sbb
mov
jnp
jp
cmpsb
fnsave
addr16
addr16
push
cwtl
ret
lods
nop
stos
loopne
int3
push
cwtl
mov
xchg
cmp
xor
dec
popf
dec
pop
cmc
out
and
aad
xchg
or
cmpl
pop
int3
pop
mov
cmp
fwait
andl
push
fs
pop
repnz
mov
enter
out
mov
jns
sbb
jbe
inc
in
hlt
sbb
pushf
cwtl
aas
xor
sbb
and
xchg
or
jmp
ret
fsubrs
push
aaa
dec
int
aaa
mov
or
shll
enter
and
jg
cmpsl
xor
orl
test
or
ljmp
daa
jb
mov
jo
mov
in
add
fiadds
mov
jp
xor
cli
jns
inc
lahf
test
jb
movsl
lcall
sti
cltd
stc
xchg
cld
popa
jnp
xchg
sub
jnp
cmp
mov
in
cmc
fsubrl
sbb
bound
pop
jmp
dec
arpl
loop
outsb
sbb
inc
xchg
scas
pop
mov
and
out
es
popf
mov
sbb
sbb
jmp
test
push
lret
mov
sub
movsb
push
mov
outsb
ret
cltd
cmp
jle
sub
rcll
fadd
cli
ja
aas
dec
hlt
out
and
push
and
es
mov
in
pop
ds
test
ret
jae
push
pop
xchg
add
jmp
idivl
jmp
mov
enter
int3
repz
aas
call
push
push
sarb
cmpsb
xor
lret
ret
inc
mov
mov
xor
stos
loope
push
cld
fld
xchg
fnstenv
add
outsb
fiaddl
push
mov
jbe
loopne
test
int
push
insb
pop
inc
inc
adc
jb
jg
test
and
aaa
fldpi
cmp
cmp
mov
mov
hlt
imul
or
xchg
inc
roll
roll
test
dec
cld
xchg
sub
inc
in
hlt
pop
inc
rolb
loop
pop
jne
pop
xlat
cmp
dec
lock
out
jge
in
lret
inc
rcll
scas
mov
xchg
xlat
xchg
mov
mov
push
pop
xor
xchg
mov
fdivs
and
jne
ljmp
out
or
cmp
sub
lods
xchg
stos
pop
pusha
pop
sub
sbb
in
stc
lret
test
and
lahf
fmul
shr
fdivl
stos
lds
xorb
mov
div
inc
shlb
aaa
out
cli
shrb
jmp
fxtract
pusha
mov
xchg
out
push
add
sti
outsl
outsb
xchg
int3
ja
out
dec
rcrl
mov
jnp
testb
out
lret
mov
sub
cmp
sbb
xlat
fwait
test
xchg
stc
pop
pushl
push
rcr
xor
cmp
sub
lcall
push
mov
pushf
add
mov
or
dec
sbb
pop
lods
cmp
cli
push
fwait
push
push
repz
or
xchg
ljmp
inc
jl
pop
add
xchg
cmp
fs
sbb
jecxz
mov
sti
dec
cli
in
mov
sbbl
bound
add
fdivr
insb
sbb
adc
cmp
out
and
xchg
in
push
add
sti
insb
insl
xchg
lret
jae
add
add
jb
popf
dec
adc
std
and
xchg
je
dec
xlat
xor
cmpsb
psubw
xchg
inc
dec
mov
addr16
in
add
test
xchg
stos
push
int3
inc
fsub
add
les
mov
dec
add
ret
rcrl
jg
pop
pushf
inc
xor
inc
outsb
int
shll
jb
cmp
xchg
mov
es
pop
adc
xor
and
dec
cmp
scas
in
sbb
iret
push
adc
or
jge
repz
stos
mov
inc
in
mov
lods
xor
inc
sub
inc
insb
call
cmp
adc
inc
fimuls
dec
icebp
in
push
add
test
sti
lods
xor
ss
filds
rolb
call
mov
mov
repz
mov
stos
daa
jnp
pop
nop
data16
loopne
xor
push
adc
ror
xchg
or
hlt
or
mov
mov
cli
and
sbb
shlb
cltd
inc
sbb
and
gs
lods
adcl
dec
pop
pop
sti
je
pop
xchg
movsb
mov
fnstcw
sub
popa
pop
jns
in
jmp
push
pop
jle
sub
les
aas
xchg
and
dec
cli
out
pop
lods
jecxz
mov
xorb
push
cmp
ret
popa
jbe
outsl
mov
out
scas
push
sbb
out
or
pop
lahf
jle
dec
sub
movsb
pop
jg
jae
add
dec
xchg
rcrl
aas
xchg
leave
jb
dec
jl
sarb
lods
jg
repnz
movsl
repz
and
or
call
in
and
jp
hlt
lea
out
loopne
mov
arpl
jle
jmp
shlb
rorl
popa
mov
sub
movaps
ja
pop
inc
push
mov
nop
dec
sub
cmp
fldcw
pop
popa
mov
adc
cmp
out
inc
in
cmc
sbb
lcall
int3
pop
subb
push
jecxz
mov
push
fnsave
shl
pop
sti
cmpsl
sti
adc
das
sbbl
fiadds
mov
and
aaa
or
xor
aaa
push
outsl
loop
push
daa
movsl
sbb
mov
mov
cmp
fldt
mov
inc
lods
mov
jne
int3
addb
ss
adc
mov
pop
inc
outsb
ret
scas
in
icebp
pop
push
xor
idivl
jecxz
idivl
repnz
pop
add
outsl
pusha
sub
cmp
pop
test
lock
dec
rorb
cmp
and
push
fwait
test
cli
inc
test
inc
mulb
cmpsb
cli
dec
push
subb
push
push
in
pop
loop
repz
add
dec
cld
enter
xor
int
cmp
or
adc
pushf
dec
arpl
shll
pop
xor
scas
lds
cmp
ljmp
jp
outsb
std
push
mov
pop
mov
jne,pt
out
xor
or
gs
push
and
add
pop
clc
data16
pop
bswap
xchg
lea
push
push
mov
sti
in
sbb
les
lret
jae
xor
notl
stc
popf
les
dec
mov
das
pusha
das
cmp
xchg
stos
imul
mov
mov
xor
push
inc
mov
std
and
adc
xchg
ljmp
pop
nop
aad
xchg
incl
mov
add
add
loopne
fadd
insl
add
sbb
add
dec
dec
xchg
lahf
cs
pushl
cmp
mov
jbe
add
pop
push
subl
xor
add
pop
jns
mov
icebp
or
in
jb
xchg
sub
adc
cld
jmp
xor
outsb
sbb
inc
or
call
lds
ret
jl
iret
add
mov
jge
and
sub
sub
push
filds
cmp
adc
or
or
cmp
mov
dec
push
jb
jne
mov
sub
les
xchg
sub
popl
adc
push
dec
addl
jmp
sub
dec
inc
mov
lods
sbb
fldenv
dec
addr16
loope
and
or
cmpsl
jmp
in
call
adc
xchg
insb
xchg
jecxz
imul
cltd
adcb
fildl
push
jo
push
pusha
imul
fldcw
push
jle
es
lock
pusha
imul
out
lahf
push
pusha
imul
addr16
ficoms
imul
and
data16
popf
sub
mov
mov
sub
xlat
jbe
jg
daa
inc
icebp
push
pusha
imul
lock
xor
inc
cli
add
cmpsb
jnp
cmpsb
cmp
popa
jg
ret
cld
pop
and
push
pop
ret
jp
pop
sbb
sbb
sbb
inc
leave
and
sti
outsb
arpl
cmc
aas
fcomps
inc
stc
stc
mov
and
push
dec
lret
pop
jae
cmp
into
add
push
sarb
fsubrs
sti
or
aam
mov
cwtl
in
and
adc
jns
outsb
and
inc
pop
dec
push
push
xchg
jl
mov
out
xchg
ds
addr16
add
mov
jl
mov
in
icebp
outsb
out
cmpsb
aaa
hlt
cmc
jno
ljmp
cmp
mull
int3
xchg
testl
jg
add
out
or
inc
hlt
aam
sbb
push
hlt
adcb
hlt
add
dec
jno
ret
ficoml
jmp
std
sti
aad
xor
ret
xor
pop
ja
add
sbb
sbb
movb
push
insl
lahf
fsubr
pop
add
movaps
pop
mov
arpl
xor
sbb
out
jge
mov
mov
daa
mov
sbb
mov
stos
or
fwait
insl
ja
mov
fsubrl
or
mov
jle
jns
call
xchg
jp
movsl
int3
and
xchg
testl
movsl
mov
or
ret
lret
jae
mov
data16
jne
jns
mov
cmp
sub
jae
movb
cmp
repnz
push
cld
xor
fwait
cld
adc
lret
in
fstl
dec
popa
mov
sbb
out
and
mov
enter
push
jne
xchg
pusha
and
scas
icebp
and
outsl
in
or
leave
mov
mov
inc
pop
ss
xor
inc
jb
ljmp
dec
push
cmp
push
cwtl
out
or
data16
in
push
inc
insb
dec
lock
insb
xchg
sti
pusha
sbb
leave
daa
lahf
pop
imul
mov
or
xor
pop
cmovp
mov
mov
sub
mov
les
mov
cmp
ljmp
add
sbb
mov
mov
lret
mov
xchg
faddl
or
cmp
add
sbbl
fs
fmull
stos
leave
jecxz
sbb
mov
inc
sub
das
mov
push
dec
dec
or
in
xchg
dec
rorb
sub
rcll
jg
dec
jp
fdivs
jecxz
mov
mov
inc
cmovae
addr16
clc
out
sbb
fwait
arpl
cmc
push
pop
push
inc
cmp
or
lock
xchg
mov
adc
jmp
xchg
mov
pop
jns
sub
cmp
divb
cltd
xor
pop
insb
aam
push
xor
mov
adc
lret
sub
lea
sub
fnstenv
decl
mov
ficoml
fcompl
cmp
add
fsubr
push
fstpt
mov
mov
inc
imul
fadds
into
mov
mov
out
fisttpll
add
mov
gs
sbb
in
push
std
bound
in
adc
add
add
mov
fsubrl
mov
jge
lahf
repz
pusha
aad
jle
xchg
ret
lock
xor
cmp
sub
mov
loope
sbb
insl
push
lods
adc
test
mov
es
lcall
xchg
pop
jl
popa
call
cmp
jae
lds
xor
inc
push
movsl
xchg
je
mov
daa
mov
cmp
cld
test
mov
into
imul
cmp
je
push
xchg
jmp
dec
repz
inc
xchg
inc
pop
imul
dec
jmp
es
or
jp
jmp
cmp
dec
test
sbb
cwtl
inc
mov
add
clc
imul
popa
cwtl
adc
inc
rcrb
mov
push
xor
fucom
push
sub
xchg
aam
jns
scas
int3
out
daa
xor
jae
jne
fs
andl
push
stos
or
xor
aam
pop
popf
les
ds
pop
aam
xor
ljmp
lds
sbb
std
push
cld
in
pop
js
mov
sbb
sahf
repnz
xlat
pop
push
push
dec
cld
and
hlt
orl
repnz
icebp
in
sbb
insl
dec
cld
push
lcall
into
insl
push
or
sbb
or
sti
cmp
lock
pushf
inc
pop
jae
ret
inc
jl
or
pop
mov
add
lahf
outsl
jmp
ret
xchg
pop
and
cmpsl
ljmp
in
or
mov
dec
jo
and
jns
cmp
inc
cmp
subl
push
inc
into
add
xchg
mov
jmp
scas
dec
sti
dec
imul
xlat
icebp
mov
xor
ja
aaa
jmp
adc
sbb
stos
mov
popa
mov
add
inc
jnp
je
loop
clc
ljmp
and
inc
clc
ljmp
rorb
mov
arpl
mov
jbe
aaa
test
xchg
in
dec
mov
adc
jecxz
dec
mov
sub
cwtl
inc
mov
mov
scas
lds
ret
dec
sub
pop
cld
iret
inc
popa
aas
imul
jg
or
sbb
fwait
or
cwtd
push
nop
aaa
out
inc
pop
sub
ret
xchg
cmpsb
mov
sbb
mov
cmpsb
mov
pushf
cmc
adc
stos
push
xchg
mov
pop
jg
and
mov
add
lods
jbe
pop
adc
pop
ds
pop
lret
subl
scas
push
pop
adc
aas
xchg
leave
sub
adc
arpl
adc
adc
arpl
xchg
mov
lret
xchg
adc
jmp
repz
lods
movb
mov
fisttps
pop
mov
jb
and
push
scas
fwait
jp
sbb
xor
sti
and
hlt
dec
repz
sbb
sbb
lock
jmp
pop
push
aad
ss
sbb
mov
in
dec
nop
addb
adcb
cs
aaa
imull
stos
outsl
xor
sahf
sbb
div
jl
mov
mov
bound
or
xlat
pop
js
aaa
cmp
loop
jp
movsl
mov
pop
xchg
xor
jl
das
aas
xchg
ds
push
push
int
int3
xchg
jns
mov
xor
lret
in
push
push
fadd
push
pushfw
and
adc
int3
xor
dec
sbb
sbb
ss
push
outsb
mov
fcmovnbe
outsl
xchg
cld
mov
pop
test
push
sbb
out
icebp
mov
or
fdiv
out
xchg
pusha
cmp
div
fldenv
add
xor
loope
mov
push
loopne
data16
xor
mov
and
cmp
fldl
xor
out
and
sbb
pop
pop
jno
leave
jecxz
dec
add
push
lea
insl
sarb
fsts
in
inc
jbe
mov
pushf
movsb
loopne
cmp
loopne
jbe
mov
mov
xchg
xor
xor
aam
repz
pusha
cli
sbb
push
je
jecxz
sbb
push
mov
add
lcall
mov
jp
out
into
push
mov
sbb
in
setl
das
inc
lods
add
shr
out
xchg
dec
rorb
rorb
dec
sti
decl
jmp
cs
mull
xor
mov
wbinvd
inc
gs
shr
or
push
mov
mov
adc
or
xchg
leave
fisubrs
das
inc
stos
adc
cmc
adc
sbb
test
sub
bound
xchg
lret
or
jae
sbbb
inc
ja
pop
mov
test
insl
sub
adc
fimull
shl
mov
loope
and
push
int3
xor
stos
in
dec
mov
roll
sbb
push
cmpsl
fnsave
mov
xchg
xor
movsl
mov
bound
sub
or
cmp
xchg
in
dec
aas
and
stc
and
inc
inc
movl
out
jno
or
xor
jle
and
rcrl
dec
daa
pop
jb
das
daa
mov
pop
xchg
les
or
cltd
in
inc
pop
or
popf
jne
shl
inc
pop
cmovge
popf
jns
dec
adc
sub
xchg
insb
pop
fdiv
es
inc
and
push
xor
cwtl
mov
les
ja
jge
pop
mov
jmp
inc
test
insb
xchg
mov
xchg
out
push
push
add
inc
mulb
mov
cmp
mov
aam
leave
jecxz
inc
and
pop
xchg
mov
push
fcompl
in
imul
pop
test
popa
push
insb
pop
mov
mov
std
pop
or
mov
scas
dec
xchg
mov
fsubrp
xor
inc
mov
jne
mov
aaa
push
addb
adc
fcoml
pop
scas
pop
add
sbb
xchg
leave
out
dec
add
xor
test
dec
jb
shr
cltd
mov
jl
lret
outsl
inc
js
cwtl
outsb
mov
aad
push
addb
ficoms
xchg
int
sahf
or
push
xchg
sti
movsb
gs
imulb
pop
xor
cld
push
fcomps
mov
decb
xor
jp
and
aam
repnz
jecxz
into
repnz
and
enter
sub
pop
sbb
in
or
xchg
fdiv
xchg
cmp
xchg
pop
xlat
dec
imul
aam
jecxz
mov
fdiv
jge
int3
movsl
lock
rolb
sbb
stos
cwtl
je
popf
mov
fwait
inc
or
pop
rorl
xchg
and
add
rorb
js
and
fadds
cmpl
jl
imul
lods
mov
pop
xor
pop
or
xchg
sub
xor
fs
test
rcr
sarl
aaa
popf
popf
mov
out
xlat
and
inc
jnp
fsubr
xlat
rorb
pop
in
mov
int3
out
setge
inc
out
pop
mov
add
inc
addl
loop
je
mov
cmpsb
scas
jmp
jbe
push
lret
pop
push
jg
in
xor
imul
int3
out
test
push
ror
je
push
jo
mov
ss
jne
mov
ret
mov
add
ret
add
push
mov
mov
sar
pop
loop
jno
mov
cmp
into
add
cmc
mov
rolb
mov
lret
push
stos
xor
cmpl
pause
xor
or
in
notb
mov
arpl
fldcw
addr16
mov
sbb
jmp
iret
fyl2x
imul
hlt
cmova
push
arpl
fstpl
popf
shlb
icebp
or
mov
xor
push
loop
sub
enter
ds
arpl
stc
adc
iret
ret
xor
jnp
dec
jnp
loop
and
iret
pop
inc
test
add
add
lock
adc
loop
insb
mov
add
adc
dec
sub
mov
les
fsubl
sahf
mov
jne
lods
sahf
rcll
imul
fnstsw
mov
cmpsb
cld
adc
cmp
lea
and
in
jecxz
movsb
jns
adc
clc
sbb
xor
sar
sbb
jg
fimull
jecxz
mov
loopne
xor
fucom
pop
fcmovne
push
call
arpl
flds
js
rcrb
stc
dec
pop
cli
out
mov
fildl
jne
insl
rcr
cmp
jp
pop
xchg
lret
xchg
cmp
adc
movsl
test
and
inc
repz
rorb
imul
sub
pop
ret
push
push
dec
stos
xchg
mov
bound
jmp
jno
imul
mov
jne
sub
fiaddl
jne
push
mov
cmp
divb
cmp
cwtl
adc
push
push
sbb
insl
or
xchg
push
pop
mov
nop
inc
dec
stos
jge
out
ljmp
imul
iret
and
dec
mov
in
or
push
loopne
mov
into
inc
iret
imulb
cli
mov
mov
xlat
icebp
mov
testb
sbb
mov
and
dec
fdivr
sbb
movsl
lods
push
push
jnp
inc
add
add
lret
push
js
loop
inc
jb
fcompl
push
xor
and
insb
mov
fiadds
js
add
jno
add
cmp
jo
and
orb
rcrb
repz
inc
lret
add
idiv
add
pop
sbb
lods
or
hlt
aad
pop
xchg
push
icebp
sub
cmp
and
pushf
pop
iret
adc
call
pop
adc
or
jmp
ljmp
xchg
cmp
shlb
dec
cli
jle
or
iret
adc
lea
adc
or
adc
inc
bound
and
arpl
jno
pop
adc
push
sub
jo
fisubrl
inc
jg
lods
sub
lock
je
popa
push
or
jecxz
push
lret
aas
int3
repz
popa
adc
jmp
jnp
fpatan
xor
mov
movaps
test
xchg
enter
add
sbb
xchg
inc
sbb
mov
pushf
dec
andl
clc
jbe
jno
mov
jle
loopne
inc
mov
add
sbb
fdivrp
ds
fs
mov
adc
arpl
sub
notb
lds
sbb
out
or
jno
repnz
cltd
fcoml
or
xchg
xor
movsb
jmp
xor
fsubp
fwait
mov
lret
repnz
or
inc
aas
jb
stos
cmp
loopne
jp
les
hlt
and
jb
stos
xchg
xchg
out
inc
xor
dec
shl
cmp
push
cli
or
out
imul
mov
push
int
jbe
dec
lret
jmp
jmp
dec
dec
sub
and
jns
movsl
fdivl
pushw
insb
sub
leave
es
call
add
jge
inc
rorb
mov
movaps
stc
decl
sub
mov
mov
xor
sarb
and
ss
mov
cmp
mov
packsswb
sahf
lret
pop
fmull
push
mov
push
adc
cld
jge
mov
movsl
mov
ret
inc
or
pop
xchg
or
lret
aas
int3
inc
andl
je
sub
cmp
sti
or
cwtl
iret
or
pop
add
sub
mov
lea
nop
stos
push
push
cmpb
mov
and
or
cmp
xchg
jp
movsb
xor
sarl
movsl
fsubrl
sub
cs
gs
aaa
add
rclb
outsb
lcall
mov
adc
nop
push
es
ret
in
mov
sbb
mov
ror
sub
dec
jg
in
mov
fcmovu
push
aam
pop
orb
js
add
adc
movsb
mov
jb
out
xor
clc
mov
jge
test
push
movsl
dec
data16
lock
lods
lahf
incl
std
test
hlt
fists
ljmp
daa
mov
scas
mov
push
mov
ds
mov
std
mov
mov
jg
adcl
ljmp
inc
shl
push
sub
in
into
jne
mov
sub
hlt
data16
pop
into
jl
cmc
popa
cli
cwtl
jae
out
popf
jno
sub
mov
movaps
sbb
inc
push
push
rcll
push
ja
xchg
jp
dec
mov
jle
fidivs
jp
cmp
fldl
out
push
pop
rcrl
ljmp
mov
xchg
int3
inc
pop
aaa
ret
lods
sti
outsb
mov
in
bound
das
movsl
sub
mov
push
stos
jbe
leave
jecxz
xchg
in
xor
pop
test
or
xor
jle
out
pop
jge
clc
adc
adc
inc
sub
mov
imul
cmp
cmp
rdmsr
inc
push
jnp
cmp
sub
jno
mov
fmull
jmp
pop
inc
mov
add
int
inc
pop
xchg
ds
outsl
dec
je
xor
adc
mov
nop
cmp
bound
fmull
std
out
adc
adc
pop
es
imul
mov
dec
pop
pop
jne
inc
sub
push
inc
js
inc
cmpsb
lret
jo
dec
lods
or
sbb
mov
addr16
mov
popa
cmpsb
jbe
xor
sub
shl
inc
cltd
mov
out
push
int
sub
mov
push
pop
mov
dec
inc
jb
fcompl
xor
addb
out
addr16
sub
inc
push
cmc
sub
inc
sbb
push
push
mov
jle
adc
adc
xchg
xor
cmpsb
push
xchg
mov
sbb
push
mov
sub
test
mov
repz
pusha
movsb
cwtl
adc
dec
rcrl
xchg
and
clc
and
pop
xor
mov
dec
ret
add
stos
mov
loop
movsl
lea
mov
xchg
scas
mov
pop
jne
roll
loope
or
fidivs
pop
mov
add
push
cmpsl
push
or
xor
fs
lret
mov
jne
sbb
mov
adc
push
clc
ja
and
movsl
jne
inc
push
lcall
jg
ja
or
popa
insl
test
add
add
setbe
mov
jle
in
sub
iret
or
dec
jp
mov
nop
push
fidivrs
add
mov
pop
outsl
jl
adc
mov
ret
pop
xor
sbb
ret
mov
adc
imul
mov
inc
mov
xor
push
repnz
in
jge
mov
icebp
inc
jb
out
push
ds
cmp
push
sarl
dec
adc
or
lcall
mov
mov
in
and
pushf
ja
xor
jo
mov
and
jg
jmp
sub
js
js
or
inc
cmp
jb
mov
push
pop
push
add
jno
or
or
pushf
shll
or
xor
div
push
xchg
cmp
popa
or
xor
mov
dec
inc
push
push
push
inc
mov
inc
cli
rcrl
dec
cmp
mov
add
and
xlat
icebp
pop
and
xchg
jno
aam
das
rcrl
push
adc
gs
insl
xchg
das
add
mov
cwtl
in
push
mov
add
and
pushf
inc
push
jb
cmp
movsl
xor
mov
out
xor
sbb
clc
adc
movsb
mov
imull
xor
test
cmp
loop
xor
inc
mov
sarl
popa
out
jno
xor
pusha
js
sbb
push
xor
into
call
add
inc
cltd
in
idiv
mov
add
inc
and
push
roll
jbe
lret
add
and
jl
jl
mov
jnp
and
test
jne
negb
xchg
sarb
mov
in
jle,pt
std
repz
popf
scas
es
les
xchg
sbb
xor
push
dec
in
test
adc
jno
addr16
adc
dec
xchg
mov
xchg
inc
sbb
lret
jbe
mov
add
push
adc
mov
jns
movsb
push
inc
cmp
mov
xchg
imul
pop
fcomi
int3
pusha
fcmove
in
jmp
pusha
mov
or
xchg
jecxz
dec
scas
rcll
jl
mov
add
add
fnsave
sarb
movsl
inc
in
cmc
sbb
jl
daa
cmp
xchg
dec
rcrb
das
int3
ja
mov
mov
mov
je
ret
inc
jle
xor
mov
or
ret
movl
negb
lcall
test
cmp
pop
mov
jnp
or
fcoms
insb
inc
mov
pushf
jmp
mov
rclb
and
or
les
pop
fisubrl
dec
aam
mov
loope
add
iret
cli
push
lahf
stos
lods
and
sub
push
mov
xchg
push
sub
shrb
mov
rol
fisttps
js
push
test
xchg
out
xor
mov
xchg
mov
imul
xchg
push
jno
jecxz
xor
sub
mov
test
ds
pop
jb
sbb
pop
push
clc
adc
fs
mov
jno
addr16
ja
cmp
fs
pop
pop
fs
push
stos
pop
push
sub
or
sub
fadds
inc
pop
jp
jne
scas
fcoms
xor
leave
xchg
xor
dec
push
xchg
pop
jae
add
xchg
fdivrp
and
pop
push
cmp
or
push
roll
xor
cmpsb
push
or
mov
je
xor
outsl
push
mov
outsb
push
lahf
sbb
jnp
jbe
inc
push
int
push
rcr
pop
sbb
push
xchg
roll
int3
inc
lods
xlat
pop
xchg
js
icebp
sub
pop
rorl
xor
or
loop
in
call
out
or
mov
jl
in
cmc
out
add
add
xchg
ds
dec
mov
cmc
mov
fstl
xorl
test
into
cmp
std
addr16
stos
ss
bound
sbb
jnp
fsubrl
lds
popf
aam
mov
jns
ret
arpl
inc
sbb
cmpsl
mov
push
lods
lea
xor
rorl
test
adc
lcall
scas
pop
add
xchg
mov
lea
inc
fwait
mov
hlt
out
je
negb
call
repnz
push
out
mov
and
add
rclb
aaa
scas
leave
mov
xchg
ljmp
push
jp
xor
arpl
jl
fstps
sbb
outsl
shlb
shr
jecxz
xchg
and
enter
js
push
mov
inc
aaa
dec
add
lret
mov
jg
xor
cmp
in
dec
or
loopne
pop
cmp
pop
enter
dec
push
call
mov
rcrb
sahf
dec
mov
stc
shrl
lds
mov
ret
cmp
mov
pop
inc
arpl
xor
inc
pop
or
sahf
fnsave
faddl
xorb
cwtl
in
adc
dec
pop
imul
fisttpl
mov
insl
jg
push
inc
cltd
inc
sbb
addr16
shll
push
and
sbb
scas
add
and
lret
jnp
cli
mov
adc
mov
cli
mov
dec
cmc
out
and
cld
pushf
lea
dec
ret
cli
fidivrl
ret
lods
pop
mov
roll
sbbl
daa
add
lea
iret
push
movsb
clc
adc
pop
fs
sub
mov
adc
jno
mov
popf
lahf
insl
xor
sbb
hlt
and
flds
popf
icebp
pushf
inc
ret
cli
movsl
mov
fs
xor
fldt
dec
mov
in
scas
adc
sub
cmpsl
sub
xchg
mov
mov
or
push
insb
pop
leave
jl
adc
cmpsl
cmp
xor
xchg
mov
sbb
enter
es
or
cltd
out
sbb
dec
push
mov
pop
mov
sbb
lea
cs
rorb
jp
negb
jge
sbb
push
ss
add
jge
inc
xchg
inc
sbb
dec
adc
inc
sub
or
shl
das
aaa
filds
jae
jb
xor
or
adc
icebp
jo
in
push
mov
mov
inc
daa
aad
dec
push
inc
bnd
and
repnz
mov
push
insl
leave
add
loope
ljmp
dec
fs
adc
fnstcw
lcall
pop
xorb
mov
jp
fldcw
outsl
mov
jp
jg
sub
test
pop
ds
jg
mov
insb
pop
jmp
pusha
aaa
repnz
sbb
mov
jnp,pt
sub
fimuls
push
icebp
movsl
testb
add
insb
push
das
cmpl
add
clc
jo
stc
push
jp
icebp
inc
cltd
mov
subb
mov
int3
xorb
insl
test
fildl
or
or
jo
mov
sub
fwait
push
bnd
adc
or
rcrb
jb
sub
push
loopne
stos
cmp
in
fs
ret
movsl
ret
ljmp
pop
xlat
adc
mov
or
and
mov
xor
fisubrl
push
cwtl
imul
xor
dec
ljmp
out
lcall
bound
sub
push
jge
or
into
cmp
cmc
and
imul
mov
clc
jle
sub
arpl
inc
fistpll
mov
imull
pushf
sahf
add
je
fbld
repz
jp
jns
ss
inc
mov
jne
jp
sti
and
aas
pop
xor
xor
fnsave
shr
and
sub
sbb
push
sbb
notl
mov
stc
mov
xchg
adc
sar
mov
mov
data16
sbb
sbb
fdivr
push
js
cmp
add
enter
add
scas
sbb
mov
mov
popa
mov
cmp
stc
mov
out
and
xchg
sub
dec
mov
test
mov
fsubrl
int3
inc
int
data16
xchg
add
jecxz
ret
add
add
push
mov
sub
pop
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
sub
mov
mov
mov
pop
push
mov
addl
pop
push
push
pop
mov
pop
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
cmpl
push
imul
mov
add
jmp
xchg
jno
sbb
dec
sbb
and
add
dec
or
and
call
and
pop
mov
addl
inc
push
ret
imul
and
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
and
add
add
add
mov
jns
sub
pop
pusha
jmp
jne
popf
ds
inc
mov
call
mov
stos
lods
mov
cld
cmc
les
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
rorb
call
and
pop
mov
addl
inc
push
ret
or
addl
add
movswl
cmpl
je
jle
jne
movswl
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sbb
shll
mov
add
xchg
out
jae
and
int
add
mov
cmpl
je
movswl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
dec
jae
add
add
movswl
mov
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
jae
jmp
iret
add
push
out
ficomps
test
xchg
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
sbb
jmp
dec
jmp
add
daa
ja
sub
add
jmp
jmp
xor
clc
lret
push
call
pop
sub
adc
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
add
add
ftst
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
or
fildl
addb
add
sub
nop
push
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pop
push
push
push
push
pusha
popa
rdtsc
jl
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
ja
in
fcmovu
cmp
jecxz
mov
add
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lock
mov
add
push
sub
js
nop
pop
mov
add
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
loopne
cmp
sahf
cmp
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
ret
mov
xchg
pusha
jmp
adc
adc
pop
ja
dec
ret
in
loopne
sbb
mov
add
jmp
mov
cli
rclb
push
jmp
adc
inc
jne
push
xor
das
out
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
sub
imul
add
or
pop
mov
call
fucom
hlt
mov
inc
test
add
xlat
mov
add
add
sub
pop
cmpb
jne
push
push
call
and
pop
mov
addl
inc
push
ret
mov
clc
mov
jne
adc
popa
mov
jmp
mov
cmp
add
add
add
xchg
xor
push
and
add
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
data16
push
mov
loop
xor
test
push
mov
add
add
mov
jmp
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
ds
int
mov
mov
popa
pop
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
cmpw
je
and
movl
mov
dec
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
sbb
add
sbb
call
dec
pop
mov
lea
cmp
je
xor
ror
inc
jmp
lods
fisubs
leave
out
repnz
hlt
cli
std
fisubs
jmp
xor
ret
or
iret
pop
out
lret
lcall
cmc
jns
jg
inc
dec
fidivrl
mov
or
sub
add
pop
psubq
jae
cli
bnd
jg
cmc
iret
ss
pop
sub
or
pusha
mov
in
cmp
call
aaa
inc
cmp
bound
fdivs
movsb
loopne
mov
jle
xor
push
scas
lods
fs
jae
or
jl
mov
add
insl
mov
test
jg
ja
mov
aaa
jno
pop
mov
lret
pop
pop
nop
repz
ffree
nop
lea
sbb
adc
mov
mov
in
imul
jl
aad
bound
cmpsb
push
enter
lods
sar
loope
aas
outsl
pop
cmpsl
jmp
cs
jne
inc
outsb
xor
xchg
lret
push
sbb
inc
out
stos
sbb
repnz
push
xor
push
in
clc
loopne
or
sub
aaa
cld
clc
fwait
xchg
inc
aam
fcoms
into
in
cmp
dec
std
lcall
pop
stos
dec
repz
xor
inc
inc
jecxz
and
dec
mov
call
and
pop
mov
addl
inc
push
ret
lea
jbe
ss
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fs
cwtl
loopne
mov
test
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
mov
mov
mov
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
lcall
pusha
sbb
ja
or
popa
movl
mov
call
stc
mov
jnp
test
sub
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
les
and
sub
or
or
add
add
add
and
pop
mov
addl
inc
push
ret
leave
add
dec
push
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sub
adc
push
call
mov
jmp
stos
sbb
aad
imul
lods
popa
cwtl
xor
mov
outsb
cmp
pop
jns
cmp
xchg
push
fcoml
test
sub
dec
cltd
popf
lea
cltd
fstpl
leave
cmp
sarb
imul
pop
in
mov
fmull
aas
mov
lcall
psllq
lods
cs
insb
daa
mov
cmpsb
hlt
add
mov
fwait
xor
xchg
fildll
jl
add
push
cli
mov
dec
add
sbb
push
insb
cmp
xchg
fildll
rclb
jne
push
push
or
adc
push
fwait
inc
icebp
imul
lods
imul
jl
push
fs
or
stos
imul
stos
fcomps
loopne
xlat
sub
mov
pslld
imul
daa
mov
repnz
enter
dec
stos
sarl
imul
fimuls
xchg
imulb
jecxz,pn
mov
push
jmp
imul
test
push
cmp
mov
sub
xchg
fucomip
mov
push
xchg
mov
or
shrb
xlat
js
jmp
sub
cmpsl
sub
int
mov
mov
jge
add
es
icebp
jge
jge
jge
jge
jge
jge
jge
jge
jge
fucomp
lahf
push
icebp
in
jno
mov
jge
push
add
rcl
shr
scas
in
ljmp
jmp
jne
or
shr
mov
mov
movsl
ljmp
shr
cmpsl
in
ljmp
jmp
inc
or
lret
jecxz
add
movsl
int
insl
cmc
pop
push
inc
pop
fsts
insl
jo
lahf
pushf
jmp
add
add
arpl
cmc
icebp
adc
xchg
mov
dec
mov
mov
push
dec
cmp
sti
test
cmpsb
mov
add
dec
fcomip
repz
loopne
cmp
mov
inc
loope
xchg
and
sub
add
enter
popa
cs
jecxz
and
imul
fmuls
andb
cmpsl
push
and
or
in
adc
mov
sub
loope
pop
xchg
add
pop
nop
cs
loope
outsl
push
mov
lock
mov
lret
cmpsb
movsb
xor
pop
pop
mov
mov
cmp
clc
jmp
inc
add
aam
dec
popf
inc
and
adc
sti
jl
aad
mov
faddl
push
mov
lahf
sti
scas
lods
add
xor
cmp
jg
lock
movsb
mov
adc
cli
ja
mov
jp
adc
psubsw
in
out
addr16
jo
fs
push
pop
xchg
sbb
cmpb
shll
insb
dec
xchg
and
jae
mov
xor
ficomps
lret
sub
mov
pop
adc
and
inc
adc
cmpsl
orb
out
fucomip
adc
in
push
mov
and
test
sbb
movsb
mov
lret
dec
jle
mov
mov
sbb
pop
shr
call
stos
mov
int3
std
inc
fcompl
lcall
sub
sbb
inc
js
bound
lret
xchg
dec
les
das
cmpl
outsl
push
test
push
test
inc
ret
stos
mov
sub
xor
inc
mov
pop
sbb
jecxz
push
fld
or
jecxz
imul
sti
test
mov
or
add
jecxz
add
sti
push
outsb
mov
jbe
mov
sbb
mov
and
fists
adcl
inc
loopne
mov
nop
subb
xchg
sbb
into
daa
pop
aaa
dec
sbb
scas
or
icebp
jne
or
loope
dec
cmp
fdivrp
jge
outsl
xchg
xorl
add
call
jne
test
xor
mov
es
das
mov
push
test
in
ja
addl
jge
rcll
mov
jg
shlb
push
stc
int
lods
push
dec
gs
sbb
xor
inc
xor
xchg
xchg
aad
sbb
jno
mov
inc
inc
add
mov
pop
push
fcmovb
push
pop
in
xchg
dec
fmuls
pop
mov
mov
rcl
mov
or
pop
and
sbbb
cld
out
adc
pop
cmpsl
jg
or
push
cmc
movaps
jnp
and
fcmovbe
dec
jno
add
sahf
shlb
jb
xchg
mov
mov
pop
mov
stos
or
hlt
rclb
fsubl
dec
inc
adc
pop
xchg
hlt
in
xor
mov
test
xchg
or
ficomps
mov
dec
mov
addb
cmp
sbb
outsb
mov
jle
dec
sub
pop
addr16
inc
inc
dec
xchg
push
aam
push
js
sbb
jo
mov
pop
outsb
mov
sbb
add
data16
or
fldenv
mov
adc
dec
pop
inc
jp
mov
loope
sbb
xchg
mov
cmp
pop
fs
mov
mov
mov
or
mov
addr16
fwait
dec
mov
scas
imul
xchg
gs
push
and
push
jle
and
xchg
push
xchg
fdivp
dec
cmp
jb
sbb
xchg
xchg
mov
adcb
aam
cltd
xor
sbb
inc
pop
jle
sbb
or
xor
and
dec
cmp
shl
out
sahf
inc
add
sbbb
and
mov
cmp
mov
sbb
movsb
vpackuswb
lods
cmp
gs
ja
lock
jb
fwait
jno
cmc
push
ret
cmp
sub
mov
cmp
rorb
aam
xor
mov
clc
inc
aas
adc
sahf
gs
jg
jne
lods
cmp
inc
movd
repnz
repnz
dec
enter
push
cmc
ffreep
test
scas
adc
sub
das
fst
das
fidivrl
andl
or
imul
mov
mov
adc
lock
inc
sub
in
fxch
repz
sbb
jl
mov
cmp
stc
cmp
sbb
aam
push
iret
or
or
cmp
mov
icebp
ja
push
cmp
dec
push
mov
sahf
mov
test
fs
jno
mov
inc
xor
jge
push
ficoms
jns
mov
mov
dec
fst
xchg
jbe
and
cmc
hlt
lret
cmp
push
sub
mov
or
push
arpl
sahf
xchg
out
lret
stc
inc
xor
neg
or
sub
imul
fs
mov
mov
aad
ljmp
fists
xchg
and
daa
test
cmp
imul
mov
dec
pop
mov
das
pop
aam
stos
lods
mov
std
pop
inc
cltd
push
xchg
and
sahf
out
sub
mov
push
sbb
mov
aam
call
test
ss
and
jmp
push
inc
sub
jmp
adc
push
test
cld
or
inc
fisttps
cli
push
mov
sub
sbb
fistpl
dec
adc
mov
add
test
pop
xchg
mov
jp
sbb
adc
mov
mov
push
mov
cmp
mov
sti
cld
mov
push
add
xor
cmp
dec
add
dec
je
inc
dec
pushf
pushl
dec
inc
push
out
and
jmp
addb
and
mov
mov
sbb
add
jb
mov
mov
dec
repz
inc
or
mov
sarb
sub
lock
xchg
xchg
std
xchg
push
xor
sub
sbb
lret
sub
xor
dec
xchg
aaa
insl
std
mov
add
loopne
sbb
dec
fs
imul
je
adc
sub
into
in
ja
adc
scas
cmp
shll
popf
cmp
rol
gs
dec
push
cmc
fs
xor
jp
xchg
inc
stos
push
sub
push
inc
dec
add
das
mov
in
shl
bound
popf
jl
sub
mov
jecxz
dec
stc
pop
testb
or
mov
xorb
fs
sbb
dec
inc
icebp
push
leave
add
stos
arpl
daa
pop
lock
cmp
jmp
cwtl
push
outsb
or
movsl
add
aam
daa
popf
fcmovb
mov
hlt
imul
mov
push
outsl
outsb
adc
icebp
pop
lcall
stos
lcall
xchg
inc
andb
xorl
pop
pusha
and
fcmovnu
mov
repz
pop
je
mov
in
push
inc
test
push
in
inc
mov
mov
mov
arpl
scas
out
movsl
dec
jge
xor
aaa
inc
test
call
ret
jl
push
xor
sti
fst
mov
cld
fwait
cmp
dec
outsb
data16
insb
rol
pusha
fstp
push
mov
imul
clc
fcoml
shl
data16
mov
scas
out
jne
adcb
out
leave
and
lods
lret
shlb
jb
ja
mov
xchg
sub
negl
and
sbb
out
cmc
ret
dec
decl
push
xchg
outsl
int3
sub
leave
push
push
shl
inc
in
insl
inc
add
push
fistps
mov
mov
shrl
rcrb
cwtl
ret
adc
dec
sub
and
add
mov
pusha
mov
sub
mov
lret
jae
mov
xchg
je
sbb
xlat
mov
mov
inc
jmp
dec
dec
jle
add
subl
shrl
fidivrl
test
mov
push
sub
mov
push
add
mov
xor
jbe
cld
jmp
cmc
xchg
gs
mov
add
mov
in
dec
or
mov
insb
fsubrp
pop
xchg
add
sbb
call
pop
mov
pop
in
stos
jmp
icebp
loopne
idivl
pop
cmp
dec
lods
jbe
jp
rorl
cmp
loop
xor
fisttpl
add
loop
outsb
rolb
into
and
xor
and
js
or
lahf
out
jmp
mov
lods
jne
adc
or
and
mov
cmp
xchg
mov
fcompl
mov
jne
movsb
movsb
jnp
cltd
inc
lret
sub
movsb
sub
push
xchg
jmp
mov
mov
cld
inc
lcall
out
aas
inc
dec
mov
cmp
add
cmp
xor
sub
add
ljmp
shll
mov
mov
into
adc
sub
adc
out
lods
lea
int3
outsl
adc
mov
addr16
movsb
push
xchg
imul
cmpsl
insl
fs
adc
inc
push
test
xchg
jne
xchg
icebp
sub
in
push
mov
pusha
out
push
inc
cltd
movsl
and
dec
xor
mov
xor
fsubrl
mov
mov
mov
cltd
jbe
movsb
adc
pop
pop
in
cmp
sub
out
mov
adc
pusha
sub
or
inc
cmp
popa
jae
roll
push
adc
repnz
mov
aaa
push
clc
fnstcw
jmp
loop
fisubrs
mov
add
mov
or
push
daa
mov
test
ds
xor
pop
jns
insl
inc
das
pop
dec
lea
cmp
enter
stc
aad
jp
jle
cwtl
enter
imul
lahf
inc
sbb
movsb
adc
adc
sbb
int3
mov
js
insl
cli
push
stc
test
addr16
fisubrs
negb
loopne
test
xchg
cs
mov
ljmp
dec
insb
xchg
xor
xchg
aad
ds
clc
dec
in
xchg
push
stos
push
pshufw
mov
lods
sbb
and
push
call
or
cmp
push
jbe
stc
pop
cs
pop
jg
adc
pop
cmp
mov
arpl
mov
movsb
or
scas
pop
mov
adc
std
and
and
lods
and
iret
notb
xor
div
xor
div
outsl
xchg
pop
xchg
xchg
cmp
mov
push
in
aad
or
hlt
cmpsl
pop
lock
std
imul
adc
outsb
in
cmc
pop
pop
jo
xchg
jbe
pop
clc
sub
lahf
jp
sub
sub
outsl
loopne
jo
jb
add
xor
in
imul
sub
jno
mov
mov
push
and
cmp
bound
hlt
js
inc
test
fistl
cmp
mov
add
leave
xor
faddl
lret
out
push
sub
mov
xchg
pop
jge
jo
cli
pop
cli
repz
cmc
add
adc
mov
test
iret
imul
scas
xor
cmc
clc
pop
loope
arpl
in
imul
cmp
cltd
int
daa
push
pushf
mov
jge
dec
mov
cmp
xchg
jae
aam
leave
mov
xchg
cmp
xor
add
dec
aaa
insl
dec
push
jl
aad
scas
mov
jp
inc
xchg
mov
dec
dec
pop
mov
int
xchg
je
jnp
movsb
or
and
xor
cmpsb
andb
adc
pop
push
dec
cmpb
imul
data16
loope
sbb
fisttpl
sub
jo,pt
hlt
fst
push
jecxz
push
idivl
adcb
mov
push
cwtl
insl
sahf
shlb
jp
and
adc
cmp
loopne
cmpl
ret
xchg
mov
or
push
lods
stos
inc
jge
cmpsb
add
ja
xchg
aaa
dec
decb
je
mov
in
adc
sub
fsub
mov
jmp
mov
ss
outsl
std
int
sub
popa
mov
add
or
ljmp
pop
ficompl
bound
push
jo
rol
scas
cmpsb
test
push
and
mull
mov
jae
mov
leave
fstp
and
pushf
xor
fwait
mov
push
fdivrl
mov
dec
pusha
imul
fwait
push
add
testb
stc
out
xor
cwtl
add
lea
and
and
movsl
sub
fisubrl
mov
xchg
loope
int3
mov
mov
cmp
stc
inc
sbb
fwait
inc
addr16
and
xor
faddl
pop
dec
fildl
pop
push
popa
pop
inc
fsubrs
call
ljmp
mov
stos
pop
ss
arpl
xor
pop
call
arpl
push
shll
mov
mov
filds
test
mov
andb
arpl
sbb
aad
push
stos
cmpsl
mov
pop
lea
and
or
int3
les
jecxz
jl
shll
out
fiadds
out
sub
or
xor
fisttpl
xor
sahf
lods
stos
sub
dec
fsubs
pusha
cmp
push
nop
jno
pop
mov
rclb
jno
inc
cmp
push
mov
push
cmpsb
cmpsb
test
in
hlt
add
and
arpl
clc
std
pop
jl
jbe
call
mov
lret
cmp
mov
or
and
rolb
pop
bnd
adc
inc
cmpsb
cli
sti
sbb
data16
xchg
fidivrl
xor
push
and
mov
mov
mov
int3
mov
inc
ja
jae
aas
out
jb
mov
lcall
mov
nop
xchg
push
xchg
add
sti
cmpsb
xchg
unpckhps
mov
mov
cwtl
jp
cmp
push
push
dec
sub
and
mov
ljmp
frstor
outsl
pop
loop
nop
mov
testl
pop
mov
pushf
dec
xor
add
or
lcall
pop
dec
das
xchg
dec
shll
push
mov
leave
test
lret
inc
rorl
pop
movsb
lods
cltd
js
xchg
jmp
shrb
pop
shll
rorl
pop
call
fstpl
cmp
xor
ljmp
shlb
xor
out
cmp
mov
adc
cmp
or
push
std
push
push
call
mov
cmp
jnp
cmp
push
ss
fildl
inc
or
cs
cmp
pop
flds
cmp
jmp
mov
sub
in
out
fildl
add
jl
push
outsl
inc
xorl
ss
mov
lods
jle
cltd
dec
push
lret
loope
imulb
popf
sbb
outsb
inc
es
push
test
mov
sbb
or
test
mov
inc
jne
mov
orb
pop
push
cmp
push
xor
mov
les
cmp
pop
mov
icebp
inc
mov
bound
fwait
sbb
jge
mov
bound
out
in
nop
ret
adc
mov
mov
sub
mov
dec
sub
neg
jle
add
mov
lock
xor
mov
push
dec
fs
mov
add
ds
ja
push
repz
jge
mov
xor
xor
sbb
and
mov
or
fisubrs
push
mov
and
inc
xchg
jns
dec
cmp
push
cmp
pushf
xchg
add
out
sub
in
mov
dec
jb
mov
and
pusha
xchg
push
pop
mov
fisttps
repz
ret
lahf
stos
and
insl
repz
movsb
and
stc
data16
adc
enter
pop
in
add
fwait
jmp
out
in
inc
jg
ja
js
add
out
ret
daa
xchg
int
adc
loope
ds
nop
sbb
movsb
pusha
popa
test
and
outsl
imull
add
cmp
push
and
ret
rol
movsl
shl
lcall
xor
data16
scas
outsl
fisttpl
stc
dec
aaa
lods
pop
xor
add
mov
test
out
in
fwait
adc
pop
or
ja
nop
scas
sbb
std
and
ds
mov
mov
mov
pushf
xor
jle
outsb
lock
enter
mov
xor
icebp
ss
dec
inc
scas
fldl2t
out
movsl
arpl
xlat
pop
and
or
test
jmp
inc
rclb
add
mov
scas
xchg
insl
and
push
inc
stc
repz
jbe
das
pop
mov
and
dec
mov
ja
repz
xor
cmpsl
fwait
adc
pop
jle
cmp
sbb
mov
fisttpl
jbe
clc
ja
imul
ret
inc
xor
xor
ljmp
cli
and
incl
jae
mov
sahf
jle
rorb
cmp
dec
lcall
fsubrl
fiadds
jg
xor
xchg
je
push
js
add
adc
icebp
fwait
adc
jecxz
jp
mov
nop
jg
enter
mov
dec
call
outsb
mov
xchg
pop
jle
pop
cltd
dec
fs
lret
cli
jp
or
fcompl
fcoml
jae
mov
push
xchg
push
aam
dec
rolb
pusha
loope
mov
sub
shll
in
or
ret
lock
leave
pop
mov
es
idivb
mov
cwtl
jecxz
pop
insb
pushf
lcall
ss
rorl
xor
dec
or
inc
adc
jbe
push
pushf
add
push
cmpsl
push
es
rcll
frstor
repnz
gs
in
aad
ss
jge
int3
mov
jg
xchg
movsl
int
imul
test
or
int
xchg
add
sub
push
out
mov
cmp
shlb
mov
pop
out
jno
lret
xchg
dec
lret
in
mov
mov
sarb
pop
scas
clc
fs
sbb
fwait
dec
mov
xchg
fcomps
test
jp
jmp
imul
add
xchg
rolb
mov
rcrl
mov
jmp
adc
pop
add
hlt
jnp
adcl
and
inc
push
add
stos
fmull
cld
loopne
xchg
xchg
mov
xchg
pop
or
push
outsl
push
ds
aaa
mov
mov
jge
insb
ret
push
xchg
sarb
out
cmp
gs
jl
lret
xor
pop
mov
call
and
xchg
arpl
xlat
stos
xbegin
lock
dec
xor
xchg
mov
adc
sti
out
in
cltd
cmpl
inc
out
and
shlb
imul
and
pushf
jecxz
cmpsb
cmpsb
dec
das
xchg
fs
jp
pop
daa
adc
clc
adc
addr16
fcoml
dec
ss
mov
inc
mov
ret
shll
arpl
xchg
jbe
push
add
cmpsb
add
or
sub
dec
and
xor
pop
and
sub
dec
out
out
lahf
outsb
push
sbb
mov
mov
loop
xchg
sbb
imul
inc
imul
sahf
sbb
ret
xchg
push
std
sbb
sahf
aaa
push
jmp
cmc
adc
and
mov
lea
lret
out
sub
push
enter
das
std
push
std
jg
cld
in
in
enter
add
lret
call
xchg
xor
lret
pop
rcrb
mov
pop
pop
sub
std
jmp
mov
and
mov
push
mov
mov
push
lods
sub
daa
dec
mov
std
hlt
rorb
cwtl
fwait
stos
sarb
add
mov
sbbl
and
xchg
mov
inc
xchg
ret
scas
lahf
cwtl
sub
sahf
out
outsb
pushl
adc
mov
leave
subl
pop
xor
xchg
push
and
xchg
sbb
jl
mov
dec
cmpsl
push
in
fnstsw
push
arpl
inc
mov
inc
mov
inc
ljmp
loope
sub
sbb
jmp
test
and
pop
int
test
call
adc
insl
shlb
fcoml
popf
pop
adc
mov
gs
into
in
les
bound
bound
popf
dec
sti
jno
aas
jns
cltd
cmp
in
rcll
or
cmp
insl
ficompl
fdivrs
fidivs
xchg
int3
out
test
lea
mov
or
jnp
and
fwait
cmp
adcl
add
jae
xor
pop
faddp
nop
jnp
lea
cmp
or
push
aam
stc
sbb
shlb
inc
mov
js
lret
xor
jns
dec
in
adc
jp
xchg
mov
mov
fucomip
insl
popa
cmc
cwtl
xchg
push
cmp
dec
or
mov
xorl
aas
jae
lods
orl
sub
xchg
nop
pushf
inc
inc
cmp
in
stos
xchg
push
inc
in
mov
jp
pop
xchg
cltd
pop
pop
das
lea
imul
fs
push
fists
jbe
sbb
mov
or
push
xchg
jne
inc
addr16
push
push
mov
pop
mov
test
pop
xchg
cltd
scas
imul
jnp
adc
inc
push
cmp
jl
lret
ds
sbb
arpl
std
popa
sub
jo
std
lods
mull
jno
imul
mov
pop
popa
sub
xor
aas
ficoms
or
mov
mov
sbb
push
cwtl
add
leave
faddl
push
dec
iret
add
test
cld
inc
imul
sbb
add
cmc
fisubrl
inc
jl
bound
xchg
cmp
pop
sbb
dec
bound
dec
mov
push
daa
fists
pop
sbb
xor
into
call
pop
loope
leave
insb
jne
in
test
cli
cmp
mov
jp
mov
or
inc
jns
mov
mov
iret
lods
scas
jo
es
add
mov
int3
nop
cs
mov
icebp
ret
jno
mov
dec
jnp
jno
loope
rdtsc
sub
push
cmp
dec
add
aad
xlat
test
aam
sbb
insb
mov
fs
jae
mov
loopne
and
out
ficompl
mov
add
sub
pop
push
sub
sub
aam
mov
cmp
sahf
sbb
sahf
inc
xorb
inc
xchg
mov
fmulp
call
loopne
dec
pop
dec
jp
ljmp
pop
mov
and
adc
leave
cmc
rorl
pusha
mov
lret
adc
fcmovnbe
mov
xor
out
mov
xchg
leave
adc
xchg
inc
mov
dec
add
xorb
sbb
fbstp
loope
sub
aam
or
pop
les
movsl
cwtl
mov
xchg
ficoml
cmpsl
ss
je
or
adc
pop
sub
lcall
addr16
jl
xchg
mov
dec
gs
in
jnp
and
add
pop
push
sbb
dec
lahf
std
xchg
cli
ds
jbe
or
push
and
leave
xchg
pushw
and
sbb
and
inc
or
lcall
movsl
xchg
dec
test
shll
js
xor
add
mov
mov
dec
pop
adc
andl
or
jae
inc
mov
sub
jno
add
push
jne
popf
int3
stos
or
xchg
pop
jnp
jo
mov
std
jb
mov
mov
cld
enter
or
int
sti
adc
push
scas
mov
add
add
enter
dec
jge
mov
divb
test
lock
cmp
fistpl
mov
pushf
outsl
push
and
pop
dec
test
xor
add
xor
mov
shlb
mov
push
sub
les
mov
or
xlat
mov
imul
dec
or
leave
test
pop
cmc
ja
jae
xacquire
enter
mov
arpl
xor
jmp
or
cli
xchg
adc
fisttpl
shlb
add
dec
repz
add
push
sbb
add
add
leave
push
mov
popf
sbb
sub
mov
xchg
inc
subl
in
pop
movsb
pop
sahf
lahf
clc
mov
rorl
inc
lea
inc
xchg
mov
pop
lret
or
repz
xlat
mov
push
outsl
rorb
sbb
mov
cmpsl
xor
mov
jnp
push
test
pop
jno
das
or
sbb
xor
shlb
fs
hlt
inc
mov
xor
mov
xchg
cwtl
or
addb
stos
jl
adc
fs
pop
and
cmp
int3
and
or
pop
stos
dec
sbb
sub
mov
mov
and
loop
xchg
mov
test
les
xchg
adc
cmp
ljmp
jle
insl
xor
mov
cmp
sub
out
test
push
or
stos
or
adc
repnz
icebp
hlt
sarl
fdivrp
push
xchg
inc
mov
out
jmp
mov
outsb
pop
sub
dec
out
jl
fnstcw
rclb
and
and
push
daa
clc
mov
xlat
lods
jecxz
adc
ficoml
dec
ljmp
and
mov
sub
loop
or
subl
in
aad
xchg
out
int
int3
mov
pop
mov
mov
aam
or
lods
outsb
push
icebp
dec
or
dec
lods
movsb
lea
cmpsl
jne
push
add
andb
push
pop
mov
fists
ljmp
fidivs
xor
orl
xlat
xor
push
scas
sub
cmp
insl
or
push
jns
cmp
int3
adc
pop
or
inc
xchg
loopne
movsb
data16
sbb
jb
xor
push
cmp
lea
pop
and
out
cltd
mov
push
pop
inc
push
repnz
xchg
mov
aas
push
nop
mov
and
inc
cmp
das
fidivrl
stos
pop
mov
pop
mov
pusha
push
push
mov
cmp
leave
ss
jmp
xor
hlt
ror
cld
repnz
pop
jo
jbe
mov
adc
iret
inc
roll
ja
jb
or
mov
push
outsb
das
xchg
pushf
outsl
out
lret
mov
jae
jmp
arpl
sbb
adc
xor
sub
repz
test
sbb
rol
in
push
dec
andl
dec
xchg
jecxz
or
sbb
mov
jno
inc
cwtl
dec
idivb
sbb
sahf
rcrb
inc
push
inc
mov
and
jae
adc
mov
jmp
dec
lock
shlb
fsub
pop
pushl
divb
mov
divb
mov
or
push
stos
clc
push
stos
iret
push
push
push
pop
lods
pop
loopne
bound
sub
jns
jbe
sbb
xchg
test
cmp
xchg
sub
mov
rolb
and
insb
sahf
fwait
movsb
jnp
test
jae
mov
and
cli
jmp
sub
int
push
mov
mov
ja
mov
cmp
out
adc
outsb
add
adc
adc
inc
das
fs
and
mov
push
xor
imul
ds
push
aam
jnp
or
ret
arpl
in
cli
mov
dec
dec
cmpl
insb
jmp
xchg
bound
and
xchg
fwait
dec
sub
lods
sub
push
mov
sbb
or
mov
jo
pop
mov
fadd
adcl
mov
cmp
sbb
fwait
mov
test
and
push
pop
enter
popf
xor
loope
hlt
jge
ss
lods
sub
imul
aad
rcl
loop
int3
in
lea
clc
sbb
bswap
jno
xchg
xchg
xor
leave
movsl
jnp
nop
pop
and
decl
aam
sub
les
mov
popf
mov
mov
js
arpl
xchg
in
into
ja
xchg
mov
ror
mov
pop
bnd
mov
cmp
shrb
push
pop
mov
adc
dec
cld
cmpsl
bound
repz
mov
std
rorb
repz
sar
xchg
test
xor
icebp
xchg
out
cmp
fs
call
xor
push
scas
in
ja
dec
and
iretw
shufps
lret
and
or
ficoml
fidivl
fisubrs
pop
push
mov
and
mov
xchg
test
cmp
ret
mov
xchg
dec
or
arpl
mov
lret
pop
push
inc
iret
inc
lret
sub
aam
xor
adc
mov
fwait
mov
addr16
pop
cs
add
mov
cmpsl
sti
ja
cld
in
push
jge
inc
iret
mov
test
jmp
mov
aas
push
sub
dec
daa
out
into
daa
mov
mov
sbb
sub
pop
xchg
pop
shll
je
jl
hlt
push
inc
pop
adcb
mov
adc
sti
pusha
out
add
pusha
pop
ret
pusha
dec
and
movsb
out
inc
inc
dec
jno
je
je
jbe
mov
ss
loopne
mov
adc
repz
loopne
rcll
inc
mov
lods
ljmp
pop
push
adc
pusha
sti
adc
xor
mov
jo
lahf
push
fdivrl
mov
cmpsl
mov
xchg
push
fisttps
arpl
xor
sub
dec
push
sub
cmpsb
dec
sub
jg
mov
mov
adc
mov
jmp
dec
jmp
and
cmpl
dec
jge
adc
ret
ds
iret
movsl
or
xchg
lock
sub
test
stos
xor
mov
mov
aas
mov
ljmp
cwtl
daa
call
xchg
clc
xchg
mov
sub
xor
sbb
repz
dec
mov
lods
add
jmp
stos
dec
sbb
mov
dec
aaa
mov
das
mov
dec
les
cmc
hlt
pop
lret
xor
adcl
int3
das
lea
leave
cmp
repz
mov
loopne
dec
add
es
xchg
adc
clc
mov
fists
imul
and
stos
dec
std
adcl
popf
dec
mov
or
lods
dec
sub
loopne
pop
add
and
int3
inc
add
insb
cs
icebp
ss
and
inc
das
das
es
mov
or
and
leave
fldl
jle
imul
lret
ret
lret
or
mov
add
dec
lahf
jl
stos
pop
je
jecxz
dec
popa
adc
xchg
dec
pop
insl
dec
push
shll
mov
pop
into
fidivrs
into
dec
sbb
negb
add
insb
dec
xchg
sahf
xchg
and
cs
mov
sub
movsl
lea
movd
lahf
pop
cmp
sbb
mov
add
xchg
mov
cmpl
gs
fs
xchg
mov
lret
mov
sarb
xorl
jae
xor
jae
fcoms
xchg
jmp
hlt
aaa
pop
cwtl
jl
dec
and
sbb
xchg
and
inc
dec
xor
in
or
dec
mov
mov
ret
shr
dec
sbb
mov
mov
insb
aaa
or
nop
out
roll
sbb
movsb
pusha
popa
pop
jg
sub
dec
das
or
mov
push
pusha
test
cmpl
sbb
stos
mov
cmp
movsb
pop
inc
cmp
ror
sti
sbb
mov
test
dec
clc
inc
xlat
jo
pop
lret
and
xor
push
out
dec
mov
ljmp
inc
cltd
jne,pn
jns
fucomip
sub
add
push
push
push
imul
or
in
jg
je
fwait
shlb
in
push
cwtl
jbe
cmp
cmp
xchg
adc
jl
inc
xor
xor
mov
stos
jl
mov
dec
inc
xchg
std
push
adc
test
inc
inc
add
fisttpl
data16
mov
icebp
xchg
sub
mov
movsb
lods
pop
sti
sub
imul
sub
gs
xchg
push
and
jle
mov
fmuls
sbb
test
jecxz
pop
xor
push
popa
daa
pop
pop
pop
shrl
mov
pop
push
aam
lds
aam
xchg
or
mov
outsl
pop
shrl
idiv
xchg
out
ljmp
lahf
sbb
bound
int
pop
and
ja
aas
clc
adc
addr16
loop
inc
ljmp
lret
jge
mov
mov
cmpl
addl
mov
jno
imul
xorl
int
frstor
add
divb
mov
and
enter
outsl
fcom
xchg
fists
bound
sub
enter
stos
mov
sbb
pop
pop
mov
mov
lcall
or
outsl
bound
xor
inc
xchg
enter
add
into
mov
add
js
pop
push
icebp
jae
inc
outsb
jo
mov
pop
sub
inc
lcall
loope
jbe
outsl
mov
pop
sbb
aaa
cmpsl
test
ror
mov
add
mov
sahf
jno
inc
daa
stos
ljmp
fimull
shrb
lahf
loopne
btr
jmp
pop
mov
dec
pop
push
sbb
js
ret
ret
adc
cmp
cmp
icebp
xlat
push
ljmp
je
or
push
out
fyl2x
jge
xchg
xor
and
je
and
jb
fldt
lods
mov
jae
xchg
mov
dec
sbb
fisttpll
sub
hlt
mov
mov
push
dec
out
sub
sub
ja
arpl
sbb
jno
sub
xlat
pop
push
push
cmp
adc
scas
or
cmpsl
sub
fldl
adc
inc
mov
test
jbe
cmp
xchg
stc
pop
outsb
add
add
jb
jnp
xor
test
dec
cmpsl
cmpsb
add
add
sbb
mov
dec
sub
dec
sar
lahf
dec
into
in
mov
mov
push
shll
aaa
mov
push
arpl
lahf
hlt
jno
mov
rclb
push
push
cli
push
xor
sbb
cwtl
sbb
out
fdivrp
call
dec
sarl
cmp
mov
xchg
je
add
sbb
add
push
inc
jne
mov
push
stos
jle
sarl
inc
adc
push
xchg
push
cmpsl
inc
insb
mov
sub
je
out
in
lods
cmp
lret
push
cmp
adc
dec
cmpb
xor
mov
cvtpi2ps
aaa
aam
fstp
lods
mov
lret
movsb
pop
pop
pop
jg
popa
insb
mov
inc
cmp
test
mov
fidivrl
mov
xor
add
cmpsl
scas
pop
jl
jmp
xor
jb
rcr
and
xchg
aaa
loop
pop
out
xchg
aaa
sub
idiv
aad
push
cmc
mov
mov
sbb
mov
fsubrs
mov
mov
inc
test
add
insb
add
les
and
inc
fnstcw
into
and
fnstsw
loopne
cmpsb
imul
in
xchg
test
repz
arpl
or
stos
xor
adc
bswap
mov
jnp
xor
lock
lods
jo
fsubs
jb
jp
xchg
push
push
sbb
mov
sahf
inc
pop
pushf
aaa
mov
push
enter
pop
call
imul
jg
mov
test
lret
add
rcll
xchg
cmpsl
iret
int
push
divb
push
xlat
jp
out
push
add
cmc
fcom
sbb
mov
aad
in
pop
xchg
or
mov
sbb
lret
xor
dec
dec
add
ret
adc
dec
xor
rclb
fsubrl
adc
rorl
mov
xor
in
das
loope
add
add
imul
sbb
sbb
inc
cmpsl
fildl
ret
push
aaa
push
add
inc
div
repnz
pop
or
call
mov
add
cmp
clc
test
pop
cmp
add
xor
add
andb
popl
ja
nop
mov
dec
fwait
outsl
push
test
insl
fimull
adc
out
mov
dec
xchg
sbb
movsb
dec
repz
cmpsb
arpl
or
dec
push
faddp
fisubs
leave
fdivp
notl
popa
outsl
out
bswap
mov
jecxz
adc
bound
mov
xchg
scas
sub
jns
or
in
xor
sub
mov
pop
adc
add
shll
mov
sbb
sbb
dec
pop
pop
jl
aam
negb
and
loopne
push
inc
pop
push
fnstcw
adc
and
xor
mov
sub
push
add
add
lahf
mov
push
lahf
insl
mov
aas
mov
mov
inc
fsubrs
or
mov
mov
fs
fdivs
add
push
pop
jae
sbb
push
jo
lret
insb
xor
std
push
xchg
adc
pop
rorb
cmp
mov
push
popa
mov
xchg
xchg
out
imul
inc
dec
mov
jecxz
adc
loope
mov
mov
lret
sbb
test
push
and
mov
mov
adc
jp
sub
push
loope
xchg
cld
and
dec
cs
rcll
cltd
jb
test
and
inc
and
test
cltd
xchg
xlat
mov
enter
dec
sub
loope
push
data16
cmp
push
push
loope
pop
dec
mov
std
xor
fidivrs
mov
cmp
in
std
enter
icebp
jge
mov
jle
pop
aaa
scas
js
push
gs
xchg
cwtl
push
pop
adc
fldl
arpl
push
xchg
shr
arpl
pop
xchg
or
pop
andl
outsb
or
inc
data16
cmp
mov
out
sarl
sbb
mov
faddl
outsl
out
lret
push
je
cmp
cmp
or
cmpsl
fsubrs
mov
pop
pop
stos
fidivs
adcb
lret
stos
xchg
mov
icebp
jge
lods
sbb
and
jecxz
adc
cmp
clc
aam
cmp
mov
jmp
call
movb
and
or
sahf
rorb
js
push
or
mov
bound
hlt
dec
add
icebp
test
adc
pop
pop
jne
je
icebp
out
add
lock
inc
add
jae
ljmp
sub
inc
test
sbb
icebp
jge
std
stc
in
ja
bswap
mov
adc
out
or
mov
inc
stc
pop
xchg
fldt
lods
scas
int
add
mov
into
sar
sub
out
sub
xchg
adc
frstor
mov
out
sub
ret
mov
fstps
cmp
cli
leave
cmp
ss
jmp
mov
push
movsl
fs
clc
inc
leave
xchg
popa
and
imul
mov
jge
out
ja
movsb
nop
push
or
jno
pop
aaa
mov
enter
inc
xchg
insl
pop
mov
pop
insb
inc
cmp
hlt
out
xlat
mov
dec
aaa
jns
cmp
in
insb
xor
push
pop
andb
sub
add
xor
rcll
lds
sub
jne
cwtl
cmpsb
aad
negb
push
push
bound
das
lcall
imul
xlat
dec
shll
cmp
adc
jmp
lret
in
dec
cmp
cli
sbbb
lock
sahf
shlb
fists
nop
mov
cmp
xchg
or
xchg
bound
jno
lret
xlat
sub
xchg
enter
inc
pop
icebp
out
adc
mov
fildl
and
adc
fidivrl
jne
frstor
mov
aaa
frstor
inc
jbe
dec
inc
addr16
sbb
jecxz
and
mov
push
shl
repz
push
xchg
scas
test
xor
aas
ret
mov
imul
cwtl
mull
loopne
std
stos
adc
xchg
lahf
ret
in
pop
xor
xchg
jb
sub
dec
cmp
xor
insb
and
push
ja
outsw
ljmp
or
or
subl
dec
jmp
stos
insb
dec
push
xor
or
add
loopne
movsb
andb
push
xlat
ljmp
pop
add
cmp
or
loopne
iret
cli
push
inc
sti
jb
fsubrs
jecxz
out
pop
inc
loop
in
out
mov
out
das
cmc
xor
sahf
insl
jns
push
jne
lahf
lock
or
add
fidivl
incl
lret
andb
sti
sub
mov
mov
mov
shll
mov
in
push
adcb
mov
cmc
sbb
movsb
clc
sbb
andb
xchg
fwait
loope
jle
addr16
lock
dec
shll
mov
push
cmp
shlb
ljmp
inc
dec
insb
inc
mov
cli
icebp
or
adc
inc
jne
jo
or
xchg
lcall
adc
jnp
clc
or
dec
jge
fidivs
adc
dec
sub
sub
icebp
and
jo
enter
icebp
jae
hlt
sub
aaa
push
and
jp
dec
xlat
or
fstpl
imul
pop
or
inc
insb
pop
sbb
mov
mov
pop
notl
fwait
or
inc
jns
add
jl
mov
es
inc
lcall
jp
popf
push
cmp
sbb
xchg
mov
lds
jg
xchg
or
repnz
sbb
dec
jno
dec
inc
sbb
jnp
popa
pop
dec
shr
negb
imull
rclb
adc
int3
xor
call
aad
mov
push
jno
in
inc
sbbb
jnp
pop
movsl
mov
fstps
push
ds
sarb
dec
sbb
mov
sub
test
add
mov
mov
addr16
subb
movsb
test
test
xor
pusha
in
add
cmp
jp
jne
cmp
jl
jle
xchg
outsl
pop
jg
mov
jno
movsb
xor
cmpsb
jp
shrb
sbb
sbbb
push
fwait
jmp
pop
sub
inc
out
filds
adc
shll
sbb
fmuls
mov
or
mov
sub
jge
clc
cmp
test
mov
add
xor
xlat
xor
mov
adc
mov
mov
sbb
push
push
ret
push
jge
data16
roll
xor
push
loope
pop
jg
add
jl
cmp
dec
scas
jb
dec
mov
pop
shlb
loop
sbb
ficoml
outsl
lahf
cli
test
push
pop
mov
inc
dec
mov
repnz
outsl
loop
pushf
rcrb
dec
push
int
adc
and
mov
loope
out
daa
or
scas
push
insb
mov
notl
pop
or
enter
out
cmp
insl
inc
xchg
popf
cmp
push
cmp
cmc
nop
dec
subb
add
outsb
sarb
mov
out
negb
aam
mov
mov
pushl
subl
jmp
xchg
fstl
cmovnp
les
inc
mov
and
sub
and
mov
adc
add
adc
cmp
outsb
push
xchg
push
inc
push
leave
jnp
push
push
out
cmp
lcall
pop
jnp
sub
adc
xlat
and
add
addr16
loop
jg
cmp
mov
adc
pop
cli
shl
mov
rolb
loope
jg
jae
lcall
subb
jbe
in
fstl
outsb
lods
into
sub
push
inc
out
inc
fnstsw
inc
inc
and
ss
aad
mov
mov
sarb
shlb
push
std
or
ret
and
mov
inc
jp
push
clc
test
out
push
sbb
dec
outsl
stos
lods
ss
mov
repnz
mov
jle
psraw
fnstenv
ja
or
mov
push
lds
sub
cmp
inc
aas
mov
enter
and
jle
jno
aaa
xchg
sub
mov
icebp
or
inc
test
mov
dec
les
das
or
nop
ja
mov
scas
enter
sbb
push
dec
call
pop
sahf
ss
cwtl
sbb
mov
sub
adc
fldlg2
aas
push
pop
lds
lret
orb
jg
lret
fidivrl
rclb
or
xchg
pop
push
xor
push
mov
aad
adc
fcmovnbe
mov
cmpl
lea
push
out
push
sub
push
aas
cltd
loop
mov
xor
out
popf
mov
nopl
mov
adc
subl
and
pop
imul
cmp
mov
xchg
sub
pop
inc
sbb
iret
int3
stos
scas
xlat
dec
pop
pop
xor
dec
xchg
push
dec
sbb
mov
or
xchg
pop
sub
mov
cmp
movsl
fiadds
jo
jecxz
sub
repnz
incb
fstpl
paddsw
mov
add
push
xchg
push
roll
jecxz
push
mov
inc
sub
push
xchg
enter
fwait
leave
lock
sub
scas
and
jnp
mov
icebp
dec
mov
xchg
sarl
ficomps
repnz
int3
jecxz
shrl
and
jns
xor
movsl
and
loopne
cmp
nop
clc
adc
loopne
sbb
ss
aaa
jo
jg
iret
out
lods
mov
mov
add
xchg
pop
shlb
daa
mov
popf
mov
inc
xchg
das
cmpb
decl
xor
sbb
lcall
cld
jb
pop
cs
push
xchg
loopne
dec
cmpsb
dec
loope
ret
cmp
mov
pop
popa
test
cmpsb
dec
imul
dec
cltd
xchg
repz
es
push
sbb
xor
mov
imul
mov
and
andl
mov
popl
call
ret
stos
je
lret
and
in
rol
mov
mov
sub
inc
push
dec
cs
mov
push
leave
add
lcall
dec
js
and
pop
push
ret
in
lret
xchg
and
clc
in
xchg
push
mov
stc
xor
cs
mov
insl
pusha
popa
mov
push
lods
pop
cmp
sub
mov
pop
push
jae
int
stos
add
rcrl
adcl
cld
movsl
das
repnz
mov
pop
push
jns
cmp
into
mov
jbe
push
inc
sbb
or
out
sbb
cmp
popa
icebp
and
cld
lret
flds
outsl
inc
dec
cmp
mov
cmp
lret
xlat
lock
inc
inc
adcl
dec
xor
js
test
out
lahf
ffreep
mov
aam
or
adc
daa
scas
out
shll
sbb
xchg
inc
sbb
loop
mov
fdivrs
sbb
popa
in
dec
out
testb
out
test
and
inc
clc
ret
not
xchg
mov
repnz
dec
push
and
adc
roll
mov
in
pop
cld
movsb
sbb
adc
test
add
bound
jbe
test
adc
cmpsb
mov
jp
nop
push
sub
dec
jne
dec
inc
adc
fwait
add
push
cmpsb
sub
verr
push
adc
js
xor
push
in
cmpsb
mov
xor
lahf
jp
inc
xchg
ljmp
or
xor
push
in
fbld
pop
aaa
mov
arpl
jae
jbe
mov
xchg
cli
into
hlt
xor
int3
movaps
push
das
mov
jbe
xchg
jae
sbb
fdivl
add
sbb
and
pop
mov
out
jl
pop
xor
sti
outsb
mov
jae
and
cmp
cmc
sahf
pop
mov
in
xchg
aad
pop
adc
in
loopne
fmuls
imul
xchg
cld
stc
cmp
or
addr16
mov
sti
pushf
popa
jnp
iret
inc
addr16
and
movsb
add
pop
inc
xchg
icebp
test
jo
inc
mov
push
xchg
mov
lcall
xchg
lahf
insl
and
hlt
sbb
mov
sub
lods
pop
arpl
out
enter
outsb
xor
mov
mov
xor
mov
jecxz
sub
aaa
in
stc
or
push
cltd
xchg
testb
mov
inc
xchg
test
out
push
mov
repnz
aad
clc
fldcw
mov
daa
clc
jmp
mov
pop
aas
jp
adc
dec
dec
push
das
lea
repz
icebp
lret
mov
in
mov
jb
call
mov
hlt
jmp
jno
int3
jl
in
int3
shll
pop
insl
pushf
sbb
test
add
aas
arpl
dec
push
mov
clc
and
in
dec
dec
rorb
sahf
jge
xchg
mov
dec
jl
cld
pusha
repnz
jge
sbb
sbb
push
mov
add
adc
hlt
jp
lock
jns
stc
adc
mov
and
outsb
test
push
insl
or
sarl
aas
inc
cmpl
les
std
les
inc
pusha
arpl
xor
fisubrl
shll
shrb
pop
pop
rcll
rcrb
pop
add
xchg
movsl
aas
sbb
fs
pusha
mov
mov
cwtl
pop
mov
gs
pop
std
mov
idivb
inc
push
cmc
fstpt
cmpsl
dec
jne
push
jg
mov
inc
cmp
mov
je
push
mov
rcll
push
xchg
add
push
add
jl
jo
jno
xor
les
dec
das
push
pop
and
adc
mov
pop
dec
sub
das
mov
cmp
jmp
call
sbb
and
jl
jge
clc
mov
mov
jns
fwait
sbb
mov
add
pop
mov
imul
cmp
test
cmp
sbb
loope
test
dec
xchg
cmp
jg
rclb
clc
scas
sahf
add
inc
jl
xor
call
roll
icebp
mov
into
mov
mov
adc
inc
xchg
ja
insb
xchg
scas
out
inc
test
dec
sbb
insl
sub
cmp
mov
cmp
xchg
sti
in
add
icebp
adc
icebp
test
mov
dec
jmp
jns
dec
jb
xchg
clc
adc
inc
loope
jecxz
cs
cltd
push
add
sbb
bound
ljmp
in
repnz
lahf
mov
dec
cmp
xchg
fs
and
daa
adc
int3
sarl
xorb
test
rcll
xlat
fs
pop
cs
jg
iret
cmpsb
punpckhdq
test
cmpl
inc
mov
in
push
shrb
stc
push
adc
int
pop
addl
jo
sub
xchg
shlb
pop
adc
adc
sbb
xchg
push
lahf
out
jle
mov
aad
push
ret
mov
cmp
stc
add
popa
pop
or
adc
fs
pop
xor
xchg
out
jne
sbb
pop
pop
pop
addr16
push
lods
popa
outsl
and
or
mov
leave
shrb
into
jmp
loopne
lret
xor
or
jle
imul
lahf
push
mov
ljmp
and
jg
sti
pushf
icebp
xor
mov
jge
movsb
mov
lods
dec
repz
mov
jg
jmp
dec
cmp
xchg
fcoml
or
popa
adc
shlb
xor
xchg
sbb
lods
mov
fbld
scas
dec
call
inc
xchg
inc
mov
xor
xchg
sub
sbb
and
out
aad
insl
add
imul
xchg
mov
fidivrs
hlt
pop
sub
test
mov
and
cmpsb
in
sub
roll
jne
jne
xchg
push
arpl
imul
call
pushf
jecxz
xchg
mov
cmp
sub
add
cli
scas
push
loope
js
mov
sub
sub
lods
dec
sub
cmpsl
xchg
out
xchg
jmp
loop
addr16
mov
movsb
bound
and
and
popf
in
das
js,pn
xor
lods
lahf
je
pop
xor
mov
cmp
push
outsl
jmp
or
stos
cld
fstpt
jae
dec
add
ds
iret
or
sub
inc
mov
sbb
leave
cmp
dec
mov
jo
incb
sub
pop
rol
aam
icebp
xchg
inc
mov
jl
sbb
movzwl
ljmp
jg
mov
fidivl
aaa
cli
repz
loopne
and
sbb
int
sub
fwait
sbb
pop
daa
stos
gs
mov
mov
loop
hlt
push
sbb
jle
mov
push
clc
imul
xchg
push
lods
jmp
adc
sbb
pop
xor
or
mov
aaa
imul
xor
call
adc
fwait
sti
lods
pop
cmp
mov
imul
adc
fisubrs
or
lret
std
add
dec
push
or
scas
and
pop
pop
mov
sub
sahf
pop
jle
imul
sbb
shrl
jb
out
cmc
hlt
xor
aad
outsb
scas
mov
fisubl
push
loopne
pop
js
mov
add
sahf
dec
scas
fiadds
sbb
clc
repz
pop
push
insl
inc
push
sarb
int
or
sti
cld
jmp
adc
cmp
rorl
xchg
outsl
xchg
jnp
cmp
fldt
cmp
inc
in
repnz
jae
aas
mov
add
jae
xchg
lret
loope
adc
pop
mov
inc
out
test
iret
add
sbb
mov
or
ret
dec
jle
adc
stos
cmpsl
jg
xor
inc
mov
insb
push
mov
sub
dec
xchg
jne
add
fiadds
mov
cmpsl
ja
in
mov
out
out
cmc
ret
push
dec
mov
and
cmp
fiaddl
icebp
cmp
cmp
icebp
jge
enter
sub
js
xchg
cwtl
push
pop
dec
lods
pop
pop
xor
pop
xchg
cmp
cmp
cmp
pop
push
ds
test
push
cmpl
add
mov
dec
fldt
cmc
and
cmp
sub
movsl
and
clc
cmp
lahf
jno
std
fildl
mov
pop
test
inc
loop
inc
sbb
rcl
adc
lods
inc
out
fildll
cmp
loop
sub
lea
xchg
addr16
sbb
pop
or
cmp
cltd
cmc
jmp
ret
cmpsl
jmp
jle
mov
cmpsl
dec
movsl
mov
xor
inc
subb
cli
add
repnz
cmpl
adc
jl
movsb
int
jne
and
lret
mov
sbb
adc
dec
add
add
add
xlat
bound
dec
ds
test
inc
mov
jmp
loop
push
rolb
loopne
inc
xor
and
fcompl
mov
sub
adc
js
inc
mov
mov
inc
xchg
gs
sub
vpaddq
lods
cmpsb
pop
fldt
outsl
sbbb
jl
cmp
pop
xchg
rorb
bound
adc
jns
shlb
ret
add
shll
mov
in
hlt
xchg
mov
sub
shlb
push
icebp
jmp
cli
frstor
add
mov
jns
push
enter
push
push
and
lea
add
push
add
sbb
or
out
jecxz
sbb
test
adc
out
inc
mov
scas
in
cmp
jae
test
jb
call
push
das
jae
test
je
in
mov
stos
outsl
pop
lds
push
push
int3
sbb
jge
popa
daa
and
hlt
jl
fildl
xchg
sti
and
mov
icebp
aad
shlb
jns
jge
sbb
push
outsb
lock
pop
gs
loopne
stc
pop
xchg
loope
or
push
sahf
into
and
dec
mov
xchg
movb
imul
lock
cmp
adc
hlt
dec
roll
sub
cli
out
std
bound
and
notb
jg
pop
arpl
pop
push
lock
lea
pop
pop
push
sarb
or
and
mov
lock
mov
shrb
js
arpl
hlt
cmp
imul
hlt
enter
sbb
fwait
sahf
mov
mov
sar
jmp
jmp
jle
testb
mov
shl
jb
out
sub
enter
daa
mov
fisubrs
mov
push
xchg
push
aaa
jmp
jecxz
jmp
outsb
pop
push
jge
and
jle
lock
dec
ret
loopne
jmp
cli
inc
dec
dec
jbe
sbbb
addr16
rclb
and
nop
dec
mov
xor
xor
mov
adc
mov
or
jns
cmp
andl
andl
lret
cltd
shlb
push
push
das
add
iret
mov
push
gs
push
jmp
push
jns
dec
scas
inc
out
xchg
push
stos
and
adc
or
mov
inc
test
or
aaa
mov
movsb
jp
cli
lcall
mov
mov
lret
inc
cmp
jnp
sub
ja
jle
daa
pop
orb
aas
push
jo
and
int3
das
test
cmc
cmp
push
stos
jg
test
pop
jge
negl
jbe
int3
imul
pop
mov
mov
mov
or
inc
ja
into
and
andb
pop
mov
rclb
pusha
inc
mov
test
sbb
cmp
lcall
dec
mov
test
mov
xchg
xchg
iret
pop
mov
cmpsb
inc
and
xchg
fcmovnb
cmc
rclb
pop
cli
repnz
movsb
sbb
lods
mov
sub
mov
dec
aaa
dec
xchg
adc
clc
mov
mov
push
pop
push
lret
imul
lret
push
jno
andl
push
repnz
push
adc
jmp
mov
dec
sub
mov
dec
mov
and
adc
mov
nop
arpl
icebp
sbb
sub
xchg
sub
mov
mov
jb
imul
dec
scas
loopne
aaa
out
repz
xchg
mov
sbb
iret
and
or
and
lods
lods
cmpsl
lods
sub
enter
movsl
mov
fcomp
insl
pusha
xor
sti
mov
lock
jae
sub
sbb
adc
mov
mov
sub
lret
cli
mov
xor
inc
mov
imul
divb
scas
popa
in
test
fincstp
mov
lods
xchg
jbe
outsl
bswap
stos
sbb
xchg
mov
cmp
call
inc
ljmp
inc
adc
mov
int
xlat
repz
inc
pop
sbb
mov
imul
or
xchg
frstor
push
jae
sub
int
push
pop
push
loopne
xchg
add
insl
mull
getsec
fs
cmpsl
ds
nop
mov
xchg
pop
test
int3
pop
shrl
jle
jecxz
sub
mov
or
aam
hlt
mov
sbb
pop
jae
jg
test
cmp
lods
jge
adc
xchg
push
dec
add
jns
cli
add
imul
add
xlat
push
cmp
std
shll
and
test
data16
cmp
mov
inc
out
es
test
inc
mov
lcall
das
scas
xchg
test
shrl
adc
outsl
pop
stc
fwait
xor
adc
js
jae
mov
or
repnz
pop
adc
popa
ljmp
xlat
inc
inc
sub
dec
sti
nop
outsb
cmp
adc
jg
cmpl
sbb
jne
dec
jo
fidivl
cmp
call
sbb
pop
mov
pop
xor
mov
adc
jl
cld
fmuls
fldcw
dec
test
aad
cld
add
test
ret
cmc
out
sub
sahf
jmp
imull
or
fwait
dec
ss
sub
fucomip
lods
add
outsb
movsb
scas
sbb
mov
lahf
decb
cmp
outsb
cltd
mov
adc
jecxz
mov
clc
aam
xchg
imul
ja
jnp
xchg
sbb
dec
gs
gs
xchg
sahf
jge
sti
pause
jno
stc
pop
xchg
je
push
jl
sbb
mov
and
iret
pop
push
xchg
mov
pop
leave
into
mov
pop
sub
jne
mov
jl
roll
int
mov
xchg
cld
xor
sub
rcr
and
andl
dec
pop
test
xor
xchg
mov
stc
stos
jmp
sbb
mov
xchg
jecxz
repnz
jge
lods
rclb
movsb
out
aaa
aad
lock
push
insb
jae
clc
cmpsb
pop
not
mov
mov
movsl
rcr
stos
or
jmp
mov
aaa
jnp
scas
add
pusha
aam
xchg
sbb
lds
mov
xor
jo
notl
inc
add
cmp
xor
sarl
pop
mov
dec
jg
add
int3
outsb
imul
loopne
stc
pop
xchg
push
sbb
repz
xor
outsl
fldt
cmp
scas
imul
sub
jge
mov
adc
jg
or
and
out
cmp
xchg
out
xchg
sub
aam
jmp
cli
and
mov
ret
jl
xor
scas
or
pusha
sub
inc
pop
cli
repz
push
mov
ret
sbb
shll
jns
scas
fucom
bound
lahf
or
cmp
mov
sahf
fcoml
inc
xor
fs
in
int
inc
aaa
outsl
jne
and
sti
popf
push
pop
or
cli
in
iret
insb
outsl
jns
addr16
adc
mov
mov
cmpsl
jb
ja
lcall
mov
sub
les
out
sub
mov
in
sahf
adc
add
stos
rcr
xchg
inc
mov
out
fnsave
mov
push
rol
pusha
add
sbb
or
insb
in
movsb
add
push
mov
out
cwtl
push
ret
mov
mov
mov
insb
stc
jp
popl
in
je
mov
inc
mov
and
out
jecxz
aad
int
adc
mov
cmpsl
xchg
lods
in
jbe
dec
pushl
sbb
dec
adc
arpl
rcrb
xor
xor
and
inc
mov
xchg
add
popf
inc
scas
test
ret
jg
scas
sbb
mov
test
inc
stos
std
mov
pop
cmpl
inc
sub
out
or
jg
dec
xchg
xor
cwtl
inc
push
enter
jmp
mov
ret
dec
movsb
aaa
mov
call
mov
fucomi
fsubs
mov
mov
clc
scas
sahf
sti
or
sbb
mov
sbb
cmpsl
mov
ljmp
mov
and
jo
dec
dec
in
sbb
lods
pushf
xchg
jo
stos
bound
push
and
pusha
and
or
xchg
sub
mov
cmc
ja
clc
add
in
push
xor
sahf
popf
lcall
mov
jge
mov
cmp
cmp
stc
lcall
scas
dec
out
call
jmp
xchg
xchg
pop
in
pop
jge
mov
int
cld
testl
cmp
gs
jp
dec
pop
push
push
stos
not
les
mov
dec
sub
push
fnstsw
xchg
xchg
je
pushf
mov
jne
dec
inc
push
loope
je
gs
xchg
jo
insl
pop
sbb
lret
scas
dec
xchg
push
pop
xchg
sub
pop
test
faddl
je
cmp
and
pushf
repnz
fucomip
mov
aam
pop
scas
add
jbe
movsl
test
push
push
cmp
pushf
or
pop
fwait
cmp
in
mov
xor
fstpt
std
std
sbb
dec
int3
xlat
mov
lcall
or
inc
cmp
pop
lods
sbb
stos
ds
bswap
mov
sub
out
lret
das
dec
stos
enter
mov
mov
jecxz
outsb
inc
stos
and
nop
push
pop
insl
lret
jge
jmp
mov
push
stc
fimuls
adc
cli
cwtl
pop
and
neg
push
jecxz
jne
mov
push
jp
in
mov
mov
cmp
sub
mov
loop
jae
jle
cmp
loop
pushf
imul
negb
ja
mov
fdivl
mov
xchg
xchg
xchg
pop
push
add
and
cmpsl
rcrb
dec
inc
mov
mov
scas
or
aam
adc
call
icebp
pop
pop
and
shlb
jp
cltd
xor
mov
aas
mov
fs
cmp
out
inc
pop
xor
xlat
or
mov
test
jo
cmp
mov
inc
adc
gs
pop
and
repnz
push
aaa
sub
cmp
pop
inc
ljmp
sbb
dec
adc
or
pop
and
popa
ljmp
arpl
sub
cmp
lods
ds
lcall
repnz
pop
mov
repz
push
in
movsb
pop
add
xor
std
adc
or
cmp
jns
mov
stos
cmp
mov
mov
fwait
insb
in
fildll
je
bswap
iret
mov
push
test
add
loopne
lock
push
call
sti
out
xlat
adc
jmp
pop
psraw
outsb
mov
sbb
stos
and
add
xchg
mov
sbb
int3
mov
mov
adc
sub
mov
stos
xor
sub
clc
in
int3
pop
cmp
add
push
mov
in
imul
adc
push
inc
sub
jl
mov
pop
test
xchg
shrb
mov
daa
cmp
xor
repnz
mov
or
lcall
mov
xchg
mov
jns
cli
incl
push
push
iret
inc
cwtl
and
sbb
push
jnp
dec
in
filds
jmp
loop
push
out
cwtl
and
inc
mov
mov
jp
into
jge
xor
test
jle
xor
xchg
gs
xchg
test
add
aad
mov
aam
sub
sti
push
outsl
pushf
lods
xchg
pushf
pushf
cmp
dec
push
call
cmp
ror
stos
xchg
repz
mov
ja
cmp
pop
pop
and
cmp
test
pop
icebp
push
daa
loope
mov
sbb
rcr
sbb
and
sbb
imul
call
lcall
es
sub
and
xor
mov
std
aam
mov
lds
jo
test
mov
xor
add
or
hlt
mov
mov
andl
push
dec
test
mov
push
notl
xchg
addr16
lret
insb
shl
stos
outsl
lcall
xchg
add
pop
add
jbe
cmp
mov
or
lahf
ss
nop
loope
cli
cmp
addr16
sbb
mov
add
inc
inc
mov
jmp
jmp
out
mov
push
sti
jmp
and
das
lds
fnsave
dec
loop
and
mov
fisubrs
cmp
fsubrl
rcrl
in
mov
div
leave
pop
push
add
mov
or
jge
mov
imul
inc
cs
icebp
adc
aam
cmp
insb
fwait
das
push
jge
or
call
bound
and
sbb
mov
adc
fnsave
mov
in
mov
aaa
decl
call
out
imul
shrl
mov
and
gs
adc
and
xchg
nop
outsl
push
add
pusha
fsubl
inc
mov
jb
hlt
jmp
inc
and
inc
push
xorb
push
ret
addr16
mov
movsl
div
ficompl
aaa
mov
call
adc
push
sti
cmp
shll
dec
fldl
xor
cmp
out
iret
cmp
fnstcw
or
pop
cmp
aad
repz
leave
dec
fdivr
repnz
int
pop
enter
hlt
in
fucomi
imul
mov
fidivs
or
fisubl
dec
cli
pop
fs
in
or
adc
lods
std
fadds
test
adc
xchg
xchg
xor
movsb
sti
or
pop
pushf
call
add
shl
mov
adc
push
pop
mov
jnp
push
inc
dec
lods
sbb
maskmovq
popf
out
inc
lret
push
fs
fwait
lods
mov
into
add
addl
int3
sub
jns
xor
loop
arpl
jg,pt
sbb
xchg
std
inc
in
lods
inc
mov
push
daa
sub
add
add
jae
fwait
mov
clc
and
rcrb
xchg
xchg
popa
pushf
call
or
addr16
push
addr16
jo
jne
add
xchg
shlb
lds
cmp
leave
xor
lret
dec
xchg
cmp
jo
xchg
ret
mov
test
and
ret
ja
sbb
ret
out
outsb
lahf
je
mov
lea
jb
dec
xchg
cmp
mov
xor
lock
jmp
int3
imul
dec
xchg
int3
insb
icebp
sub
sbb
hlt
cmc
jmp
divl
loope
inc
das
aad
sbb
ret
mov
ds
lds
and
mov
pop
outsb
dec
and
lock
ljmp
fisubl
sub
pop
dec
mov
idiv
jnp
xchg
addr16
adc
loope
cmp
and
sub
dec
cmpsb
xchg
mov
fdivl
push
adc
addl
mov
push
fisttpl
push
xor
es
jo
pop
ret
inc
sub
xchg
inc
fcoml
mov
insl
in
dec
rcrl
icebp
push
add
int3
int
push
inc
dec
jns
jb
push
les
dec
mov
push
sbbl
sub
fistpl
jle
mov
cmp
scas
popa
mov
lahf
inc
test
lcall
pop
push
stos
or
mov
fcomps
or
out
jmp
push
mov
imul
jo
cltd
xchg
outsb
xor
inc
mov
jmp
add
jno
shll
adc
les
xchg
adc
cld
mov
cmpsb
inc
jmp
sbb
fcmovnu
in
xchg
aaa
xchg
mov
daa
ss
insl
out
out
fildll
or
stos
shrl
outsl
cld
jns
sub
or
add
inc
add
cmpsb
daa
aad
test
lds
stos
hlt
pop
out
push
pop
call
push
xor
and
inc
jl
aam
aaa
adc
jmp
push
or
test
jae
hlt
sbb
sub
sbb
and
inc
sub
mov
cmpsl
dec
and
push
push
scas
cs
pop
jns
adc
add
sub
ljmp
leave
mov
out
dec
pop
adc
jecxz
insl
mov
in
inc
gs
mov
push
jb
mov
dec
adc
out
push
push
iret
mov
adc
lea
jmp
fidivrl
jns
jns
shlb
xor
mov
jecxz
fmul
sub
imul
mov
push
push
adc
lret
test
pop
ss
or
xchg
mov
cmc
dec
xor
mov
andb
and
xor
cmp
stc
add
adc
xlat
rcr
xchg
in
popa
cmp
pop
adc
adc
xor
cmp
mov
mov
incb
cmp
cmpsb
cmp
xor
mov
je
xchg
int
daa
dec
leave
push
jmp
ja
add
push
hlt
insw
adcb
arpl
les
test
inc
mov
ret
imul
jmp
test
mov
mov
xor
inc
inc
add
push
mov
dec
ret
jl
neg
mov
pusha
push
adc
dec
push
int
int3
xor
jp
inc
test
pop
test
dec
outsb
pop
cmp
pop
mov
repnz
mov
cwtl
roll
ret
popl
fprem
out
repnz
decb
lea
rcr
or
rcrl
jp
jge
sbb
pop
push
stos
sbb
mov
pop
or
jno
jmp
fstps
sub
out
jg
sbb
fwait
bound
mov
cmp
sub
gs
fsubrs
std
lret
les
imul
mov
loope
rolb
movsl
or
xchg
jb
inc
cltd
jp
push
out
sarb
and
ror
adc
stc
or
outsl
adc
andl
jne
in
mov
jl
ficomps
aad
out
xor
mov
and
popf
mov
push
push
loopne
subl
imul
push
dec
js
jg
xor
dec
ret
lods
push
and
pop
mov
lds
int3
mov
mov
repz
xor
push
sbb
shlb
push
ljmp
mov
and
add
and
xor
ja
sbb
xchg
dec
push
cmpl
pop
ret
push
push
lret
icebp
jge
lea
inc
popf
je
cltd
jmp
les
pushf
pusha
lcall
idivl
sub
in
cmpsb
inc
add
lods
or
sahf
shlb
mov
sbb
inc
xchg
lods
adc
pop
iret
mov
dec
out
push
movsl
mov
cmp
cld
bound
pop
mov
orb
xchg
out
lds
rorl
or
loopne
pusha
jl
pop
icebp
pop
pusha
mov
mov
test
shr
sbb
sbb
in
mov
test
xchg
push
sub
subb
test
push
scas
dec
xor
rorb
push
push
adc
add
jp
add
or
push
ret
gs
sub
call
mov
inc
xchg
xor
outsl
mov
jb
mov
pop
xchg
mov
mov
mov
push
in
adc
aam
sbb
out
mov
ret
inc
pop
mov
mov
xor
mov
dec
mov
and
cmp
int
sti
cmpsb
pop
movsl
lret
lcall
mov
movswl
adc
cmp
mov
dec
rolb
rcll
lcall
cmc
cmpsb
push
dec
gs
sbb
mov
sub
pop
add
pop
test
icebp
push
push
cmp
mov
mov
nop
push
push
mov
sti
jnp
out
push
pop
sub
fidivs
or
add
mov
jmp
jp
mov
mov
sbb
aam
sub
pop
or
out
jmp
test
mov
outsl
adc
cmpsl
lods
sub
in
jnp
cmpsl
outsb
sbb
decl
xlat
out
push
xchg
popf
sbb
daa
xchg
mov
xchg
and
jo
nop
movsb
jnp
jg
and
jg
pop
cmc
mov
mov
es
dec
outsl
lods
ret
pop
loop
scas
hlt
cmc
movsl
es
fwait
sbb
jbe
xor
orl
clc
mov
out
fildl
adc
insl
push
xor
cld
dec
scas
mov
adc
mov
insb
pop
and
sub
imull
loop
sub
xor
cli
mov
clc
sub
xchg
sti
cli
inc
mov
jb
and
xchg
mov
push
sub
mov
or
les
cmp
shll
test
mov
mov
enter
mov
xchg
enter
arpl
push
pop
jg
fst
inc
mov
rorb
add
push
push
add
mov
clc
pop
xchg
js
push
lock
adc
xchg
fcmovbe
push
sahf
nop
sbb
insb
pop
sbb
outsl
jecxz
mov
sub
and
shlb
shlb
mov
in
jle
xchg
mov
sarb
sbb
pop
int3
push
lret
mov
or
pushf
in
orb
mov
cmpsb
mov
repnz
xchg
repz
mov
push
btr
mov
and
mov
sbb
cli
mov
repnz
iret
jecxz
push
jecxz
pop
cmpsl
dec
out
sti
jae
sub
das
push
add
daa
jmp
push
popa
add
cmp
mov
mov
push
sub
clc
scas
sahf
decb
mov
or
or
inc
jecxz
cmp
loopne
cs
in
sbb
sub
loopne
sti
dec
or
js
jnp
idivl
aas
scas
mov
cmp
lods
cs
jg
mov
or
mov
jmp
mov
and
and
leave
pop
ficoms
sub
jl
ret
cmpsb
mov
push
pop
xchg
push
lcall
xor
das
pop
jg
icebp
outsb
bnd
lods
nop
jle
fsubrs
fstpt
stc
sbb
outsb
mov
sti
test
xchg
sub
outsb
cld
or
or
out
sub
push
nop
mov
mov
lcall
adc
push
leave
and
add
push
or
cltd
leave
lahf
inc
xchg
add
icebp
push
or
mov
aaa
out
add
dec
jecxz
arpl
lea
icebp
lret
mov
dec
call
cmpsb
testb
fs
jge
and
mov
int3
std
ret
fstpl
pop
ja
popa
cld
xchg
jbe
cmpsl
sbb
imul
icebp
xor
push
int
inc
pop
test
xor
sti
ds
sub
stos
dec
lret
add
pop
mov
mov
sbbb
mov
lret
stos
mov
outsb
mov
jmp
outsl
jb
mov
insl
sub
fwait
add
jg
mov
sub
lds
mov
dec
xor
les
jns
imul
cmp
xchg
jg
add
sahf
les
inc
repnz
lret
inc
andl
and
outsb
cmp
cmpsb
lea
arpl
lret
repz
roll
orb
addr16
stc
outsl
push
icebp
in
mov
repz
loope
add
fisttps
mov
iret
jp
inc
loop
inc
addr16
in
aad
inc
std
or
dec
mov
icebp
popa
cmp
pop
jne
dec
mov
fidivs
cmp
push
ja
into
icebp
adc
orl
or
fidivs
mov
lds
mov
xchg
sbb
lds
outsb
xchg
push
f2xm1
cli
lret
inc
mov
daa
jl
stc
cmp
clc
stc
imul
and
outsl
xor
cmpsb
adc
jo
scas
fwait
sahf
xchg
dec
and
movsl
xchg
pop
out
jbe
addr16
mov
repz
cmc
jl
js
sbb
and
sbb
xor
inc
mov
pop
cmc
mov
ja
dec
dec
cwtl
cmpsl
scas
call
inc
adc
popf
ds
inc
or
add
xor
mov
mov
sbb
call
mov
imul
pop
xor
clc
out
outsb
adc
push
mov
ret
test
fwait
adc
mov
sar
push
xor
xor
out
in
cld
cmp
or
leave
cld
aad
dec
inc
adc
mov
push
push
xchg
lret
push
sub
in
mov
mov
push
pop
repnz
pop
add
sahf
popf
notb
out
or
mov
xchg
out
jo
xor
mov
jbe
mov
and
sub
sub
or
cwtl
les
mov
test
fnstcw
loope
sub
cmp
filds
lods
out
mov
hlt
mov
or
xchg
mov
lea
sbb
enter
test
aas
or
das
dec
insl
imul
hlt
ret
dec
out
movsl
xor
adc
mov
sub
inc
outsb
sub
cmpb
in
aas
mov
sub
mov
mov
xchg
cs
cmp
sbb
int3
xchg
adc
rcrl
nop
mov
ja
add
in
add
mov
push
pop
out
and
cwtl
icebp
cmpsb
or
push
xchg
ss
push
popa
adc
sub
adc
outsb
dec
add
inc
addr16
add
adc
or
cld
ljmp
lds
nop
mov
and
out
inc
test
cmp
test
push
ficompl
dec
add
shrl
imul
call
mov
inc
xchg
out
mov
xor
aad
mov
mov
js
push
jp
and
pop
pop
xchg
push
dec
cmp
jmp
mov
lds
stc
faddl
push
or
mov
aaa
xchg
push
fs
mov
daa
pop
ret
shlb
movsb
les
scas
add
mov
dec
ja
icebp
ljmp
jbe
sub
daa
or
add
jmp
lret
adc
pop
push
rol
int
sbb
scas
xchg
fcoms
in
adc
jmp
aam
or
negb
out
mov
cli
sub
mov
sbb
xor
pushf
xchg
mov
add
fiaddl
pop
aad
dec
nop
cmp
loopne
sub
in
xchg
jb
jmp
int
jl
movsl
xor
test
xchg
mov
shlb
call
mov
sub
in
dec
mov
add
pop
mov
or
dec
add
jmp
mov
push
xor
xchg
das
subl
pop
xchg
out
push
ds
or
add
cltd
in
and
pop
mov
xchg
in
push
enter
lods
push
mov
clc
andl
stos
jb
add
ffreep
xor
xchg
cmpl
out
push
ftst
sbb
aad
jb
fwait
sbb
in
dec
nop
mov
jne
es
push
add
or
std
jbe
push
jle
sarb
pop
loopne
dec
add
jge
add
mov
adc
push
loope
jae
je
pop
lods
mov
and
pop
fwait
lcall
ss
mov
lock
aaa
sbb
iret
mov
push
leave
jecxz
aam
insl
ret
push
mov
nop
test
pop
sub
jns
push
jnp
mov
add
inc
pop
xchg
mov
adc
jl
inc
jp
clc
adc
jecxz
cmp
aaa
sub
or
rcll
push
ret
iret
dec
cmp
aad
shll
pop
mov
test
jnp
jecxz
mov
sti
push
into
dec
lahf
dec
adc
stos
pushl
push
cmpsb
sbb
cld
push
push
sub
daa
fcoml
cmpsb
sbb
sbb
mov
cs
xlat
dec
imul
bound
xchg
adc
xor
es
xchg
mov
mov
jle
cmpsb
mov
rorl
fucomp
popa
pushf
mulb
dec
je
inc
lods
sub
call
or
adc
cmp
in
and
lock
inc
lds
mov
cwtl
xor
lcall
mov
leave
cld
push
pop
push
jno
insb
into
pop
fsts
sahf
add
shll
jmp
cmp
mov
or
aam
cld
mov
loopne
in
mov
loopne
test
pop
xor
mov
ret
hlt
test
push
push
push
sar
pop
pusha
push
xchg
out
je
xchg
outsl
cmc
adc
hlt
push
push
sahf
pop
or
pop
jmp
xlat
mov
test
push
mov
xchg
divb
inc
jmp
adc
inc
std
rcrl
sahf
repnz
sub
jmp
lahf
dec
mov
xchg
mov
push
movsl
mov
flds
aaa
mov
in
loop
mov
rcr
addl
mov
ss
pop
test
jp
cmpsl
ja
fistps
je
shll
test
mov
mov
loop
lret
jbe
lahf
adc
pop
or
xor
in
lcall
push
int
outsb
mov
outsb
out
adc
test
add
loope
arpl
mov
mov
inc
imul
test
push
and
xchg
adc
sarb
cmp
fs
sbb
jbe
ret
pushf
inc
pop
add
push
cmpl
dec
sub
cmpsb
scas
mov
mov
sbb
popa
fidivs
fldl
aaa
insl
push
mov
cmp
xor
lds
pop
mov
or
cltd
scas
out
insl
cmpsl
xchg
and
insb
and
dec
faddl
sub
in
pushf
cmc
jb
push
sub
add
dec
inc
sbb
int3
add
clc
ljmp
push
mov
stc
xor
clc
ljmp
aaa
loop
push
sub
lods
dec
clc
adc
loope
mov
cmp
fldl
dec
add
inc
jbe
iret
icebp
pushf
xchg
or
sti
cmp
int3
clc
add
cmp
rcrl
mov
sarl
subb
dec
fnsetpm(287
or
add
ds
js
das
cmp
or
jb
in
pop
adc
dec
ret
cmp
lods
pop
mov
mov
jnp
push
test
ret
gs
mov
jle
jecxz
push
push
xchg
adc
jne
out
lea
ljmp
fs
push
imul
fiaddl
push
in
cmp
fdivl
dec
cli
add
loop
mov
add
loop
cmc
adc
jno
sbb
sub
hlt
sub
dec
lods
hlt
mov
lret
sbb
sbb
sub
or
in
adc
outsl
roll
pop
mov
cmp
adc
mov
mov
cltd
mov
aam
xorps
sti
insl
and
push
mov
into
je
daa
hlt
dec
repz
sbb
inc
fadds
push
mov
loope
xchg
mov
js
enter
jbe
sub
push
mov
mov
dec
popf
out
push
sahf
int
mov
adc
lods
fwait
xchg
mov
sbb
aam
mov
sub
and
test
push
push
loop
loope
or
adc
adc
les
ret
pushf
in
jns
xlat
je
jae
mov
das
in
adc
mov
sub
and
in
repnz
mov
add
out
prefetch
mov
mov
xchg
jp
jbe
fnstsw
aaa
sbbl
test
sbb
notb
nop
xchg
xor
loop
test
sbb
jmp
rolb
jl
icebp
imul
addr16
dec
bound
cmp
sti
jl
dec
adc
test
pusha
loope
mov
and
cmp
sti
ds
fdivrs
xchg
out
sub
pop
fists
jns
sub
jns
sbb
jns
push
or
pop
test
daa
jnp
and
mov
lods
mov
lods
in
imul
mov
pop
jecxz
cmp
movsb
mov
inc
mov
inc
data16
loopne
push
mov
data16
adc
xor
inc
dec
xor
add
pop
lods
sbb
je
lret
jp
cmp
hlt
iret
mov
aad
cmp
dec
mov
roll
stc
mov
loope
inc
jge
add
xlat
jbe
lock
dec
loope
xchg
jecxz
sub
push
and
scas
cmp
push
shr
jae
in
pop
mov
jp
lock
jno
fwait
mov
mov
test
inc
pop
push
mov
in
sub
cmp
mov
cs
jne
loopne
sbb
pop
push
dec
and
xchg
adc
mov
jns
xor
lea
cmpb
hlt
pusha
jecxz
mov
hlt
adc
cmp
mov
scas
sbb
jg
enter
shr
jb
es
fs
mov
or
mov
mov
inc
addb
ja
jno
ror
negb
inc
outsb
shlb
imul
loopne
movsb
dec
pop
test
jb
dec
rcr
add
mov
jl
sbb
jp
fistpll
aaa
mov
sahf
mov
dec
je
push
shufps
mov
xor
push
lods
jg
shrb
sarl
pop
jbe
xor
xchg
push
negl
mov
sbb
or
ret
loope
imul
fwait
das
cmp
shll
jns
mov
loopne
xchg
cmp
ret
cmpsl
lods
in
push
mov
sub
mov
stos
xchg
jno
lds
jg
cmpsb
xor
sub
pop
nop
repnz
mov
push
pop
loop
ss
ret
cltd
sbb
jmp
xlat
dec
fisubrl
lcall
ret
mov
out
shld
mov
sub
ret
sub
jnp
ret
shlb
dec
mov
xchg
out
aaa
lret
mov
jle
pop
jne,pt
adc
add
pop
pop
fbstp
shl
push
popa
mov
and
idiv
insl
cmp
xchg
stc
xchg
sub
dec
mov
test
mov
fsubrl
int3
inc
int
data16
xchg
add
loopne
mov
add
pop
sub
xchg
pop
push
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
mov
xor
pop
push
mov
addl
pop
push
addl
popl
push
mov
sub
pop
mov
push
mov
add
add
xchg
pop
mov
push
mov
add
add
xchg
pop
jmp
jns
dec
push
sarb
mov
add
jmp
ss
push
stos
fsubrs
push
dec
adc
aas
lods
into
adcb
xor
xor
or
adc
cwtl
sub
cmpsb
ret
or
pop
cmp
stos
ss
push
ja
pop
mov
push
xor
imul
pop
filds
fstl
cmpsb
sbb
add
sti
xor
and
sahf
jg
xchg
stos
fisubrl
pop
in
fwait
cmp
jbe
in
add
add
ds
add
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
test
dec
jg
xor
sbb
in
lcallw
mov
sbb
add
outsl
loopne
dec
xchg
xor
xchg
out
cmp
mov
ja
imul
mov
std
mov
lods
lret
lods
orb
inc
fidivs
mov
movsl
pop
push
xchg
rcrb
jle
clc
aam
xor
sarl
add
rorb
lea
jle
push
lahf
cmc
sti
or
inc
enter
xor
mov
push
icebp
pop
sub
push
sbb
outsb
stos
and
dec
test
dec
movsl
into
add
xchg
inc
call
cmc
pop
push
cmp
jno
sub
or
xchg
lret
inc
mov
ds
test
push
sbb
shrb
cwtl
iret
sarb
adc
dec
jno
mov
mov
lahf
adc
rolb
out
mov
lret
add
imul
xchg
xorb
sub
xor
dec
xchg
pop
cmp
sbb
push
cmpsb
lock
push
inc
push
call
xchg
fdivl
enter
roll
cli
cmpl
sub
sbb
ficompl
push
arpl
and
or
dec
mov
add
xchg
inc
insl
loop
inc
mov
mov
addr16
cli
nop
mov
fs
xchg
repnz
ljmp
pop
xchg
into
pop
push
inc
mov
sbb
adc
dec
cmp
add
inc
mov
jae
mov
sub
push
pop
mov
stos
add
mov
test
in
je
stos
mov
mov
and
push
fsubl
mov
mov
mov
xchg
sbb
dec
cmp
aaa
mov
loop
test
je
inc
pop
or
aad
mov
cmp
cmpsl
lret
lods
mov
mov
imul
xor
sub
pop
xchg
rcrl
cmp
add
cltd
push
pop
arpl
jmp
test
ret
pop
xor
test
xlat
dec
dec
roll
stos
ret
bound
mov
and
cmp
pop
pop
push
and
lret
jecxz
push
incl
inc
enter
scas
jmp
sbb
mov
fwait
rorl
scas
ss
inc
xor
adc
mov
sbb
in
xchg
add
or
nop
out
icebp
push
stos
sub
dec
addl
push
sub
gs
lds
outsl
test
or
movsl
pop
rol
sbb
pop
mov
cmp
mov
lds
popl
xchg
lahf
lods
loopne
xchg
jle
iret
xlat
shll
cli
mov
ret
mov
mov
xor
jmp
mov
lds
sbb
dec
ret
dec
aam
cld
sbb
dec
dec
repnz
jle
sar
dec
push
orl
mov
jns
fsts
test
inc
shlb
cmpsl
and
mov
das
or
and
jb
popa
in
mov
aam
push
push
xchg
push
mov
dec
jecxz
pushw
cmp
and
push
dec
push
cmp
cwtl
jbe
fsts
test
cmovne
fisubs
sub
inc
js
inc
les
xor
sub
icebp
mov
jne
and
dec
aam
cltd
xlat
mov
xor
adc
fcoms
add
movb
ficoms
cmp
add
icebp
xchg
in
ja
adc
arpl
xchg
add
dec
and
push
cmp
fisubs
or
icebp
jg
jmp
add
add
es
gs
jmp
cmp
shll
add
loopne
adc
shlb
lods
enter
sub
int
pop
or
and
inc
jle
es
add
pop
jb
and
sub
cmp
sub
mov
dec
jns
mov
int3
xor
lock
bound
or
lods
jge
pop
scas
add
out
testb
xchg
xor
mov
and
adc
aad
jg
inc
sub
hlt
dec
fadd
dec
rclb
or
mov
stos
test
push
jle
cmp
daa
gs
or
dec
ja
adc
pusha
repz
jbe,pn
mov
inc
into
add
int
push
and
je
inc
popf
mov
imul
stos
add
inc
pop
mov
mov
std
rclb
cmpsl
ficoms
adc
inc
jo
dec
cli
sbb
fnsave
push
stos
pop
adc
mov
lcall
shl
ds
xor
dec
pop
adc
pop
jnp
or
fsubrp
push
cmp
shll
jmp
gs
mulb
push
mov
je
int3
inc
lock
sub
dec
out
les
lock
mov
out
push
arpl
ljmp
mov
negb
xor
xchg
repnz
xchg
in
cmp
or
fwait
mov
mov
lcall
ljmp
lret
fbstp
movsb
subl
rolb
inc
sub
cmpsb
popa
in
je
adc
ret
dec
subl
xchg
sbb
cli
sub
shl
sub
push
dec
add
pop
xchg
dec
cmpsl
add
xchg
adc
xchg
les
in
sbb
cwtl
mov
les
fstpl
push
ret
xchg
cmp
mov
aam
jp
or
lock
insb
pushf
mov
add
ss
push
insl
mov
xor
mov
add
cmpsl
sarl
mov
mov
sbb
sub
lods
push
add
lahf
mov
mov
or
daa
aam
pop
or
cmc
jbe
icebp
mov
add
sti
push
jge
cmp
sub
pop
movsl
ss
jle
adc
dec
test
or
lds
mov
arpl
in
pop
mov
mov
in
rcrb
xor
popl
cmp
movsb
inc
mul
xor
jg
daa
lock
cltd
leave
jg
dec
sti
stos
pop
loopne
and
cmp
push
js
mov
loop
sub
lds
aad
pop
or
addr16
call
int
pushl
rorb
out
hlt
xor
int
push
clc
xor
lcall
push
aaa
mov
mov
movsb
fistl
lret
sub
adc
lret
sub
mov
pop
mov
clc
sub
je
out
jb
sub
dec
lock
jle
ret
xor
loopne
lods
and
fldenv
addr16
popa
cmc
ficomps
push
enter
les
or
mov
adc
imull
add
mov
sbb
nop
jecxz
in
scas
mov
loopne
mov
dec
jg
in
scas
mov
aaa
push
dec
outsb
jmp
sbb
out
push
in
xor
jmp
test
cmp
in
lret
jp
imul
and
int3
add
idiv
inc
mov
dec
xchg
dec
lock
xor
xor
add
sub
call
jl
sbb
xor
sbb
mov
pop
xchg
dec
jl
popa
test
cld
adc
sti
cmp
push
ret
cmp
mov
cmpsl
fldl
dec
lods
in
or
fs
jbe
sub
and
ja
pop
jl
cmc
popf
rolb
int
jmp
lods
xor
jno
mov
sbb
fwait
dec
rorl
inc
mov
inc
mov
xchg
add
sub
shrl
enter
test
std
inc
lret
add
clc
mov
or
shll
jp
mov
push
and
in
push
popf
rclb
push
jbe
cmp
or
sbb
loope
xor
push
dec
test
rorl
lahf
sbb
mov
fcmovbe
js
jae
or
scas
shrl
aam
push
ret
push
lds
loopne
testb
xorb
loope
adc
push
jge
insb
repz
cs
nop
dec
xchg
lods
dec
add
scas
fistps
push
cwtl
iret
out
sub
add
or
cmp
jnp
repnz
mov
push
jne
out
inc
mov
xchg
mov
add
bound
push
lock
mov
mov
je
push
in
jmp
mov
mov
ret
movsb
sub
adc
imul
mov
movsb
xor
inc
xchg
or
sbb
es
ljmp
fcomp
add
aam
fcoms
outsb
mov
sbbl
pop
outsb
push
cmc
aad
sbb
movsl
test
xchg
fistl
add
mov
push
lcall
dec
imull
add
lds
push
rorl
fiaddl
xchg
dec
nop
loopne
mov
insb
push
add
outsl
cmp
cmp
fmull
in
sbb
clc
add
xor
and
xorl
ja
out
lods
cmp
movl
sub
xor
push
mov
mov
cltd
push
xchg
cmp
xchg
jmp
dec
jecxz
sub
bound
or
pop
mov
lret
xchg
xchg
fdivrl
jne
inc
lcall
and
dec
xchg
mov
jg
cmpsl
subl
jne
jb
cs
sub
mov
jae
sub
jbe
and
cli
mov
shlb
bound
mov
xor
ljmp
insl
hlt
sub
pop
and
imul
cltd
dec
outsl
idivb
inc
jb
mov
fwait
shlb
adc
sub
popf
imul
loopne
add
out
inc
adc
ret
clc
jg
inc
out
sub
pop
jae
test
jo
fcompl
or
mov
mov
lret
add
insb
ret
push
cmpl
mov
cmpl
add
out
jb
fbld
test
fistl
mov
les
inc
jg
or
jl
outsb
lods
jns
clc
cmp
sbb
adc
pop
nop
mov
lds
adc
cmp
sbb
xchg
cmp
or
inc
in
jp
add
or
inc
das
push
test
ret
sub
add
subb
fdivl
iret
es
xor
add
data16
cmc
aad
movsl
inc
das
rcrb
inc
lret
imul
pop
xchg
scas
sbb
xlat
lds
dec
xchg
sbb
ss
xchg
mov
idivl
aaa
clc
jo
dec
subl
push
mov
lahf
mov
xor
ret
lods
mov
sbb
cs
ja
fimull
dec
dec
hlt
cmp
xchg
in
bound
add
repz
daa
jle
sub
jp
jo
xchg
cmp
pop
push
jnp
in
mov
pusha
inc
test
arpl
xchg
mov
out
es
cmpsb
repnz
sarl
test
and
sbb
pop
jbe
dec
sti
subb
loope
popf
aam
into
in
in
cmp
fbstp
push
pop
test
lahf
pop
push
scas
mov
push
push
in
adc
inc
test
das
pop
out
jecxz
in
adc
test
add
push
xchg
mov
pop
in
mov
push
and
jmp
xlat
xchg
push
imul
retw
out
shlb
ljmp
mov
shrb
bound
dec
mov
and
stc
test
sbb
addr16
push
push
xchg
lcall
inc
mov
jmp
pop
add
cltd
into
js
mov
push
movsl
cmp
and
movsl
inc
push
xchg
dec
insl
sbb
jno
mov
dec
inc
in
push
cmp
jb
jbe
mov
inc
je
dec
rcrl
data16
dec
sarb
ljmp
stos
jge
fidivl
repnz
xor
pop
sarl
out
arpl
inc
inc
xchg
mov
mov
roll
mov
ja
daa
jle
adc
pop
mov
add
ss
sub
jp
jge
aad
and
std
pop
clc
adc
popa
mov
nop
sub
or
lret
cmp
fs
xlat
cs
adc
push
addb
das
push
push
pop
lahf
dec
std
test
and
adc
lds
test
mov
and
pop
cmp
pushf
gs
dec
aam
cwtl
lret
pop
into
jge
fildl
xchg
adc
out
stos
and
dec
aam
cld
push
mov
dec
repnz
push
jmp
stos
mov
aam
ljmp
test
push
jb
in
daa
scas
shll
leave
and
pop
cwtl
stos
insl
jmp
adc
mov
inc
lret
and
add
inc
pop
mov
test
mov
aad
jbe
sub
rolb
jmp
pop
subb
mov
imul
lret
out
inc
push
stos
sti
rcr
dec
hlt
cmp
push
mov
iret
push
sbb
add
cmp
xchg
pop
cmp
sbb
push
mov
rcll
pop
mov
add
mov
sbb
push
cmpsl
jo
mov
cmpsl
in
xchg
filds
mov
ret
mov
push
add
in
cmp
xchg
or
or
and
xor
out
cmp
mov
cld
cmp
fcom
pop
jecxz
shlb
add
dec
movsl
xlat
adc
push
movsl
fistpl
push
pop
xchg
add
sbb
loopne
sub
cmp
sahf
ja
test
sbb
xor
imul
movsl
add
mov
mov
xor
lcall
es
add
xlat
jg
cltd
inc
inc
stc
push
fildl
movsb
jp
divb
jmp
lods
fimuls
mov
cmp
push
mov
in
jo
sbb
idivb
fs
mov
push
inc
in
fs
jo
jns
sub
mov
pop
xchg
adc
test
push
pop
sbb
nop
mov
push
pop
push
dec
sbb
or
out
clc
popa
jl
jns
lahf
ret
and
pop
adc
pop
inc
adc
ret
lods
pop
inc
pop
mov
test
mov
pop
jns
ljmp
lret
fdivrs
push
scas
outsl
mov
jle
lcall
mov
mov
cli
push
jmp
into
jo
dec
testl
and
jp
push
push
arpl
inc
adc
sbb
xlat
repnz
adc
push
push
adc
in
cmovbe
loop
sbbl
jo
fnsave
inc
pusha
ja
sbb
int
aad
aad
repnz
out
or
roll
insb
mov
pusha
pusha
jo
cmpsb
rcrb
push
adc
ja
fcoms
rolb
ret
mov
out
inc
pushf
push
subb
or
or
aas
scas
pop
push
je
push
sti
test
lds
sbb
sbb
clc
dec
xchg
shrl
int3
add
lods
add
or
inc
jg
daa
jne
push
add
gs
mov
xchg
imul
jle
cmpsl
push
lea
jmp
sarl
pop
fbstp
loope
cmp
push
std
xor
fdivrl
push
jb
std
jno
out
pop
and
sbb
inc
cmp
aaa
mov
pop
xor
test
jns
mov
cmp
dec
cmp
loop
mov
add
iret
or
movsb
dec
cmpl
sbb
jae
scas
and
loope
mov
or
ret
sub
mov
add
xchg
in
hlt
adcl
sub
lret
mulb
fiaddl
sahf
jo
cld
push
lcall
popa
add
ss
sub
scas
xor
jge
outsb
inc
xchg
pop
daa
js
xchg
pop
mov
xor
jp
popf
hlt
and
shll
int3
add
mov
loop
dec
jp
dec
rorl
mov
daa
sbb
mov
enter
sub
sbb
pop
dec
jo
rorl
test
and
rcr
jne
mov
js
rcrl
cmpsb
jecxz
mov
sbb
es
adc
or
outsb
aaa
jge
jge
pop
enter
lret
int
push
or
xchg
addr16
mov
fwait
rclb
pop
sub
aad
inc
sub
mov
jge
jmp
enter
int3
nop
int
xchg
jns
and
incb
insl
sub
mov
aam
rorl
js
loopne
and
pop
cwtl
ror
std
enter
inc
js
scas
jmp
xchg
in
ret
aas
mov
xor
dec
test
sub
js
mov
xchg
ljmp
inc
enter
jge,pn
ficoml
pop
ret
aaa
mov
icebp
aas
movb
scas
cld
movsb
flds
mov
popf
inc
scas
dec
and
jns
stos
rcll
idivl
jmp
sahf
shrl
jae
idivb
in
pop
test
mov
xorl
or
loope
adc
xchg
or
notb
adc
jnp
adc
jp
ds
push
jne
sbb
stos
rcl
call
lret
in
ret
cmp
fistpl
push
gs
mov
lods
imul
push
outsb
lods
dec
mov
xchg
data16
jne
adc
aas
dec
cwtl
pop
or
repz
aas
imull
xor
addr16
push
enter
cmp
inc
mov
lahf
rorb
aam
adc
cmp
roll
push
call
lods
sub
xor
jns
push
cmc
sub
fucomip
adc
xor
pushf
rdmsr
mov
and
pop
popa
cmp
adc
mov
popa
lea
test
rorb
loop
push
inc
xchg
or
adc
push
bound
mov
pop
insb
mov
xchg
adc
inc
pop
push
lret
adc
push
orl
clc
push
jns
xchg
test
push
jb
lret
jmp
mov
ds
aam
mov
les
sbb
inc
lret
leave
mov
sub
icebp
lcall
loop
lock
cltd
mov
lods
push
mov
ss
xchg
scas
addr16
test
ljmp
mov
es
pop
out
pop
stc
adcb
mov
pop
xor
outsb
testl
dec
or
dec
daa
xchg
in
pop
sub
fmuls
je
adc
mov
fnsave
out
dec
push
xchg
inc
leave
add
fcomps
lock
add
repnz
ds
or
loope
out
or
dec
repnz
xchg
adc
push
sbb
shll
add
push
test
std
stos
mov
jg
pop
dec
notl
int
insl
hlt
sub
repz
insb
mov
pop
push
push
mov
and
xchg
or
movsb
jno
int3
cwtl
leave
and
mov
fsubrl
add
add
ds
je
cmp
or
xchg
pop
xor
das
sub
aad
jg
loopne
add
mov
mov
or
push
aam
lcall
je
cmp
mov
xor
sub
scas
pop
xlat
cmp
movsl
dec
aam
mov
fnstsw
jmp
cltd
mov
test
dec
and
pop
mov
ud1
cmp
push
jo
testb
std
cmp
addr16
xor
pop
push
lods
add
jle
and
je
jno
xchg
jp
push
push
push
gs
push
mov
pop
xchg
jle
pushf
shlb
jmp
jg
mov
pop
clc
outsb
pop
jbe
fnsave
fisttpll
mov
hlt
mov
and
sub
cmp
push
aad
jae,pt
pop
into
rolb
outsl
roll
cmp
in
add
sahf
notb
xor
xor
in
mov
cltd
fisttpll
mov
jns
lret
dec
and
testl
popa
test
pop
sbb
and
in
aas
xchg
or
popa
push
out
stos
and
inc
jnp
loopne
pop
fs
jp
xlat
cs
jle
int3
pop
mov
pop
xor
xlat
fs
movsb
mov
ret
dec
shrl
decl
and
jmp
sub
sahf
inc
popf
jl
mov
push
cmp
fimull
lret
addr16
das
fidivs
fidivl
jmp
aaa
mov
mov
shlb
cwtl
mov
lahf
out
mov
fsubp
int
testl
jae
cmpsb
jecxz
nop
sar
cmpsb
xlat
adc
shl
movsb
fmull
sub
inc
je
ds
mov
add
push
fnstenv
out
mov
cmpsl
in
mov
xorb
iret
or
negl
addb
mov
mov
repnz
shl
jle
test
add
push
jecxz
xorb
inc
hlt
jb
hlt
jne
ds
or
or
out
es
push
xchg
mov
or
aam
sbb
push
jp
lds
icebp
es
aad
adc
xchg
xchg
or
ret
das
add
inc
sub
sub
cmp
les
inc
jo
clc
sub
push
fisttps
push
dec
arpl
rep
mov
cld
inc
jbe
dec
jno
dec
pop
cmpb
mov
loop
or
add
pop
add
pop
pushf
aad
adc
or
ret
mov
sti
lcall
scas
cltd
inc
hlt
jnp
cmp
jns
mov
jmp
mov
cs
icebp
leave
push
scas
sub
cmpsb
sbb
nopl
xor
xlat
sarb
ja
int3
lds
rorl
jl
mov
ss
imul
fisttpll
mov
les
dec
inc
mov
cmp
cwtl
in
je
jp
testl
cltd
ffree
mov
mov
push
stos
sti
dec
xchg
pop
andl
ret
popf
dec
mov
call
push
mov
push
mov
adc
mov
fdiv
push
lea
pop
lods
fsts
pop
cmp
push
mov
loope
push
daa
push
mov
es
add
or
jnp
lret
push
pop
iret
add
and
mov
cwtl
out
cmp
push
push
mov
xchg
add
add
insb
ret
loop
movsl
xor
mov
sbb
mov
xchg
insb
fbld
lods
add
aas
xchg
cli
repnz
fdivr
push
pop
aad
in
dec
dec
and
lds
js
bound
cmp
test
jmp
mov
mov
fld
sbb
int
sarl
scas
mov
sbb
and
jnp
movsb
and
mov
fwait
loope
dec
outsb
xchg
in
jp
push
enter
test
or
lods
shrl
loope
les
addl
push
add
shlb
dec
movsl
cld
mov
mov
add
add
push
mov
cli
adc
add
mov
movsl
in
xor
xchg
lret
cli
das
xor
out
xor
dec
add
outsb
mov
test
enter
add
fldl
scas
pop
xchg
jle
frstor
rdpmc
stos
push
inc
mov
adc
pop
jge
pop
mov
insl
cmp
int3
inc
mov
pushf
and
rcrb
ret
stc
stos
adc
sub
xchg
lret
cmc
mov
out
mov
movsl
shll
add
inc
xchg
aad
inc
adc
ljmp
or
push
js
jnp
dec
xchg
push
dec
push
imul
fcmovnb
outsl
pushf
push
lods
fildll
iret
ret
push
ss
add
ja
xor
cmp
xor
add
sbb
dec
incb
rorl
mov
mov
lds
mov
mov
in
jmp
or
sub
and
repz
xlat
out
sub
testl
sti
push
outsl
pop
pop
movsl
in
sbb
lret
test
dec
xchg
xor
cmpsb
das
aad
fidivl
lcall
in
mov
fisubrs
fidivs
add
scas
in
cmpsb
push
or
test
and
subb
add
mov
dec
loope
lahf
ret
nop
inc
adc
int
or
sub
mov
gs
jnp
adc
and
add
push
jp
mov
cmp
or
dec
fmull
jo
adc
out
fs
out
cmc
dec
dec
lahf
and
jno
cmp
lcall
sbb
sbb
xchg
sbb
inc
dec
int3
in
adc
hlt
jnp
sub
outsl
ficoml
mov
jle
and
repnz
aaa
xchg
popa
pop
dec
mov
sahf
cmp
cmp
out
and
icebp
daa
jge
jge
in
pushf
inc
pop
test
js
add
imul
int
pop
into
push
fdivl
in
add
call
shl
test
push
movsb
dec
sbb
mov
add
push
int
inc
mov
ds
cmp
sar
test
xor
sbb
xchg
push
les
fwait
arpl
insb
ret
cmp
leave
mov
bound
lock
sbb
repnz
es
pop
xor
xchg
jg
scas
lods
incb
leave
sub
push
add
adc
push
inc
add
and
ljmp
add
mov
movsl
fsubl
jmp
js
outsb
pop
pusha
inc
push
sub
test
and
pushf
pushf
je
out
aad
iret
mov
jns
sarb
cmp
addr16
sbb
cld
mov
push
sbbl
je
js
std
push
stos
stc
push
sub
and
xchg
stos
push
jmp
jmp
add
mov
and
in
jb
ss
pop
in
ret
jnp
loope
mov
mov
fs
push
insl
pop
sti
mov
cmp
mov
outsl
xor
scas
nop
pop
dec
popf
push
into
mov
mov
xchg
int3
idivb
scas
fdivrl
cli
lds
dec
stos
loopne
push
popf
hlt
and
sbb
adc
mov
roll
repnz
push
sti
lock
in
imul
add
aad
pop
inc
dec
xchg
popf
mov
out
lret
sub
xchg
incb
int3
enter
ljmp
out
inc
mov
mov
pop
mov
add
into
add
outsb
push
lods
push
in
push
popf
ficoml
popa
mov
xlat
jg
pop
int
pop
cwtl
xlat
inc
jbe
cmp
mov
xorl
out
lds
int3
repnz
pop
pop
add
cmc
mov
fbld
fcoms
lret
jno
adc
in
xchg
jno
jmp
and
add
add
scas
adcb
fwait
in
inc
popf
mov
pop
in
sti
xor
cld
bound
sbb
loope
sbbl
add
and
sbb
pop
fwait
xchg
imul
xchg
jmp
mov
inc
in
fpatan
adc
aad
daa
rcrl
mov
mov
fists
adc
cmp
nop
lret
jp
hlt
push
xchg
mov
mov
xor
sub
add
mov
sbbl
leave
mov
cmp
mov
outsl
pop
addb
gs
out
sub
adc
ret
ret
popf
in
cmp
sub
clc
imul
dec
mov
lret
adc
sbb
mov
sub
mov
call
and
clc
mov
cmpsb
inc
sbbb
pusha
pcmpgtd
mov
rorl
inc
jge
jbe
jge
jne
das
fiadds
loopne
adc
sahf
and
cltd
inc
jbe
dec
mov
xor
sub
xor
adc
icebp
cltd
into
and
xchg
nop
mov
rorb
scas
mov
out
mov
cmp
pop
lret
push
out
test
add
xchg
lret
and
jl
sarb
mov
cmp
pop
js
mov
sbb
ret
sbb
fyl2xp1
out
inc
push
xor
sbb
mov
push
add
rclb
dec
ja
js
sub
pop
cmpsb
std
sub
mov
add
jmp
add
add
lods
fs
fs
and
je
mov
aad
stc
repz
mov
inc
pop
add
adc
loop
lcall
dec
or
jb
es
int3
add
jle
stc
xchg
sbb
inc
dec
movsl
push
stos
scas
jge
xor
sbb
cmp
test
push
sbb
stos
push
dec
mov
lds
cs
adc
sub
rorb
test
test
inc
lods
fiaddl
jle
pusha
pop
mov
ret
adc
or
mov
incb
mov
push
lock
testb
pusha
sub
repz
xchg
dec
int3
push
stos
jge
aas
insl
leave
push
cmpsl
jo
aas
insl
outsb
push
dec
cmc
dec
jl
out
push
push
daa
jnp
jbe
sbb
imul
add
lcall
jo
loope
inc
cmp
mov
out
int
sbb
lods
loop
mov
jmp
sub
sbb
jnp,pt
and
fs
repz
jnp
push
mov
push
test
es
dec
movsb
jae
sbbl
mov
das
jge
pop
jge
xor
and
leave
popa
push
pop
sbb
mov
in
inc
jle
jbe
mov
aas
into
pushf
dec
mov
push
jmp
cmc
stos
idivb
push
bound
nop
aas
std
dec
cmp
jne
push
mov
call
lods
mov
jl
fs
mov
jp
jnp
sarb
push
lea
mov
inc
rolb
aas
fs
xlat
or
mov
int
push
mov
or
mov
js,pn
sbb
xchg
add
xchg
push
push
cld
push
les
xor
sbb
dec
xchg
xor
pop
add
pusha
mov
test
loope
dec
adc
or
std
mov
xor
cmpsb
bound
jmp
call
imul
or
in
fildl
xchg
or
xchg
adcl
sbb
into
sbb
std
jbe
clc
mov
adc
add
loope
imul
add
adc
push
cld
and
or
add
or
mov
cmp
or
sbb
imul
jl
and
dec
push
mov
in
xlat
dec
adc
stos
shr
fiadds
pop
cmp
mov
cmp
sbb
inc
sub
mov
xchg
jmp
inc
xor
push
add
sahf
mov
aas
mov
sub
pop
and
cmp
in
push
sbb
pop
or
pop
xchg
jmp
lods
hlt
cmp
pushl
stc
ss
xchg
sbb
out
ljmp
shll
cmp
pop
pop
mov
repnz
mov
pop
sub
xchg
lods
sub
outsl
xchg
sbb
jmp
je
xor
movsl
add
push
insl
fwait
jmp
incl
pop
outsb
or
cld
xor
pop
mov
in
pop
pop
adc
shrl
js
cs
fdivr
xchg
or
fs
and
imul
fs
fiaddl
jmp
mov
addb
gs
adc
dec
insb
out
shl
scas
push
in
stc
cmp
xchg
push
or
sbb
mov
loop
scas
push
jmp
std
pop
add
pop
pushf
xlat
dec
xchg
aam
adc
mov
idivl
lock
inc
in
test
push
in
rcrb
cld
cmp
test
dec
add
ljmp
js
mov
add
and
push
fistl
xor
in
adc
cmpsl
jns
jmp
mov
enter
jmp
or
fimull
push
jno
hlt
jnp
push
out
mov
pop
js
sub
cmp
fwait
mov
push
dec
pop
lods
imul
or
cmp
sbb
add
arpl
imul
repz
sbb
sbb
dec
shl
cli
xor
dec
cli
cmpl
lock
and
adc
jg
xchg
adc
mov
dec
xchg
or
add
jg
andb
fs
or
in
and
sub
xor
outsb
je
aaa
xchg
inc
int3
or
add
loope
mov
xor
mov
xchg
inc
xor
push
sub
xchg
notb
mov
cmc
jl
out
xchg
ds
ja
mov
ss
cmpl
jno
ljmp
cmpsb
enter
lcall
addr16
int
lret
arpl
popa
pop
push
adc
xor
fnstsw
dec
nop
jae
or
dec
sub
cmp
or
in
and
push
dec
sbb
repz
sub
mov
sarb
clc
mov
cli
cmp
bndldx
pop
add
mov
push
cmpsb
aad
cltd
xchg
ja
inc
mov
adc
mov
and
outsb
movsl
pop
cwtl
fstpt
cmp
mov
mov
je
arpl
loopne
push
lods
jp
int
int3
je
aam
cwtl
roll
cmp
and
aam
mov
int
ja
aaa
or
push
xchg
fidivrl
mov
lcall
imul
mov
std
fidivl
sbb
xchg
mov
pop
mov
cmp
les
stos
add
xor
aas
jo
repnz
imul
es
jg
push
pop
int3
clc
push
aas
out
repz
insb
mov
sarl
test
sub
pop
dec
sbb
jecxz
pop
scas
lret
gs
and
sbb
jne
sub
xchg
jbe
rcll
mov
nop
loope
dec
movsb
incb
ret
or
movsb
push
ljmp
or
jbe
test
sub
je
push
lds
jo
jno
push
pushf
add
cli
das
xchg
lcall
cmp
cmp
and
pusha
cmpl
inc
inc
stc
je
inc
or
lea
popf
jbe
test
dec
std
dec
stos
icebp
lds
xor
pop
inc
pop
jne
sbb
insb
dec
add
push
pop
mov
mov
push
ljmp
mov
push
mov
inc
jae
mov
sbb
add
sub
dec
xchg
aas
je
aam
jge
lret
aad
jp
scas
cmp
mov
mov
xor
jecxz
movlps
mov
cld
fcmovu
jae
push
jne
inc
pushf
repz
popf
jo
test
insl
jae
mov
xor
mov
das
dec
mov
fnstenv
jmp
add
aas
jmp
mov
pop
lahf
jne
mov
repz
add
xor
xchg
push
adc
dec
xchg
fsubs
ds
xchg
sbb
cmp
rolb
popa
ds
in
paddusw
mov
mov
out
dec
arpl
push
cld
mov
loope
push
test
adc
gs
dec
adc
push
dec
adc
jle
lock
int
push
scas
and
loop
mov
subl
cmp
xor
cli
xor
cmp
sub
cmpsb
rorl
cmp
clc
cmpsl
fistps
mov
lock
aas
mov
neg
loope
fcomps
dec
jg
sbb
mov
and
inc
into
fists
pop
fisubl
rorb
movsb
sub
es
mov
cmp
push
scas
jmp
cltd
into
and
out
in
cmc
test
aad
add
push
int
fcomps
mov
xor
jg
cmp
sub
sub
fisubl
outsl
shlb
xchg
test
jne
mov
jl
pop
jl
aaa
arpl
adc
pop
icebp
mov
pop
mov
aam
mov
in
fnstenv
adc
insl
pop
ds
xchg
xchg
cmpsl
hlt
add
rolb
repnz
std
add
ljmp
stos
std
add
jmp
pop
in
ret
insl
les
xor
dec
test
xor
jne
add
lods
pop
mov
arpl
dec
incb
les
mov
rcrl
shlb
sbb
pushf
cmp
ja
jge
inc
push
arpl
and
inc
hlt
add
cltd
subl
negb
cli
inc
cld
jecxz
add
mov
pop
jbe
xchg
cltd
addr16
xlat
jle
rolb
lea
sub
adc
fmuls
and
inc
push
and
jno
movsbl
sub
cmpl
push
mov
fs
addr16
inc
scas
hlt
push
jmp
or
adc
rcrl
cli
xor
jbe
mov
mov
xor
lret
rolb
flds
dec
pop
test
outsb
sub
mov
and
jno
and
les
mov
icebp
mov
dec
xchg
and
out
or
js
and
loopne
cmp
aad
mov
ja
sarb
and
lret
jae
cmp
in
push
and
or
adc
imul
test
lods
rcrl
cld
movsl
out
sub
dec
sbb
add
fbstp
scas
frndint
push
cmovb
stos
mov
push
sti
push
test
xor
mov
xchg
fiadds
cmp
in
ret
cmpsl
dec
test
inc
push
jnp
mov
mov
mov
scas
xorl
sub
push
into
add
dec
mov
icebp
dec
pop
push
insb
xor
insl
xor
andb
call
sbb
pop
mov
stc
sub
insb
mov
adc
scas
addr16
sub
or
sub
push
cmp
clc
jg
inc
ja
pop
cmc
popf
inc
jp
cmp
sub
mov
pop
mov
pop
js
std
ljmp
push
mov
jne
push
push
stos
test
hlt
pop
add
mov
cmp
in
icebp
loop
and
jnp
rcrl
adc
lds
xchg
inc
cli
xchg
push
mov
std
addr16
orl
sbb
iret
data16
pop
movsb
out
mov
or
sbb
jg
inc
andl
sub
pop
loope
push
leave
and
xlat
imul
push
fsubrs
in
rcrl
pop
pop
loop
mov
jmp
cmp
push
sub
addr16
loop
inc
repz
jb
or
dec
outsb
gs
mov
dec
inc
mov
xchg
and
out
popf
push
mov
arpl
jb
es
test
subl
insb
xor
push
sub
nop
jecxz
mov
ja
push
xchg
ficomps
push
lret
mov
or
lods
dec
mov
out
inc
pop
inc
hlt
dec
rcll
pop
xor
pop
daa
push
xor
jmp
cmp
popa
popf
movsl
fstps
lods
pushf
dec
mov
arpl
imul
mov
sub
pop
pop
push
push
pushf
and
or
jb
ss
cld
cmp
shlb
arpl
inc
xchg
sbb
adc
shr
lods
cmp
aad
inc
mov
sbb
push
in
add
fisubrs
adc
add
inc
lock
and
jge
and
jo
daa
pop
mov
mov
jbe
fistpl
push
ret
mov
repnz
pop
scas
js
mov
cmpsl
in
mov
cmpb
aas
push
ret
iret
or
cmp
mov
cmp
add
cli
lock
and
pushf
repz
pop
popf
lods
loope
in
adc
ja
in
mov
out
dec
mov
dec
gs
sub
loopne
jne
mov
mov
ret
ja
stc
popf
fsts
mov
subl
dec
roll
outsl
dec
xor
je
ljmp
mov
in
pop
jl
push
mov
ret
stc
inc
pop
cmc
scas
sub
je
dec
subl
push
pop
rcr
pusha
popf
ror
add
sbb
dec
test
inc
ljmp
testl
mov
lret
dec
xor
mov
push
loope
xorb
pop
mov
cmp
dec
and
and
push
pusha
in
or
xor
imul
mov
and
test
les
xchg
inc
mov
daa
dec
std
test
or
dec
movsl
jb
ret
les
sub
lret
bound
sub
mov
cltd
rorb
rcr
jns
imul
rolb
mov
xor
jmp
outsb
sbb
dec
mov
cmpsl
insb
jge
pop
mov
sbb
pop
cltd
clc
push
jp
push
test
pop
ljmp
xchg
pusha
push
movsl
orb
jge
sbb
pop
jno
testl
push
shrb
sbb
lock
mov
push
dec
call
adc
xor
rdmsr
mov
sahf
call
int3
pop
mov
pop
ds
int3
add
sub
jle
add
ss
xchg
dec
cmpb
inc
mov
int
test
adc
xor
adc
sti
dec
push
test
ljmp
jne
xchg
sbb
sub
add
sub
fisttpl
add
dec
mov
cmpsb
sub
pop
pop
add
fdivrs
fisubrl
cmp
out
push
xlat
xchg
pop
ret
dec
jno
daa
and
in
mov
inc
mov
out
iret
xor
or
das
inc
imul
add
je
mov
out
pusha
mov
int
mov
push
jp
push
aam
lods
lods
pop
loop
cmp
addr16
inc
jb
adc
fistps
jecxz
test
add
sbb
pop
mov
outsl
sbb
jl
push
jns
jmp
lods
add
dec
push
and
sbb
mov
add
mov
mov
or
cmp
ds
imul
lea
mov
arpl
inc
movsb
sbb
adc
insl
les
jp
jecxz
enter
mov
xchg
lods
dec
movsl
jb
jp
les
es
push
out
into
add
cwtl
loopne
enter
pop
jle
cmp
adc
inc
or
push
movsl
fsubl
imul
adc
xorb
dec
outsl
hlt
pop
sahf
aad
jg
jle
cmp
shlb
mov
xor
xor
clc
sbb
adc
xor
mov
sbb
push
mov
jmp
mov
out
dec
test
adc
push
xor
cltd
dec
setnp
pop
out
bound
pop
lds
out
push
bound
imul
into
and
xlat
jnp
mov
pusha
xchg
jecxz
cmpsl
sub
je
jne
or
cmpb
jge
jae
mov
dec
movsl
jb
clc
fwait
les
dec
mov
aaa
insb
ret
mov
mov
outsl
xchg
filds
or
out
cmp
insb
mov
push
stos
push
mov
lods
xor
push
mov
movsl
cld
sub
clc
imul
mov
pop
cmp
repnz
cltd
cli
cmp
movsb
mov
inc
mov
mov
mov
cli
push
inc
or
pusha
jmp
les
int
jle
adc
loopne
sub
cli
mov
push
movsl
sbb
std
aaa
dec
xor
cwtl
cmpsb
jge
lds
lods
aam
mov
adc
lcall
xchg
test
pusha
lret
mov
pop
mov
add
scas
outsl
push
in
decb
bound
lahf
leave
stc
test
stos
add
bound
sbbl
repz
cmp
repz
xchg
fbstp
and
lods
aam
sub
jge
jno
mov
hlt
idivl
test
sbb
sub
xchg
xchg
jmp
or
inc
jae
bound
clc
sbb
lods
movsl
cmpsl
xchg
pop
sbb
add
push
lret
daa
jle
aam
cs
fucomi
adc
sbb
add
addr16
lret
add
aas
daa
repnz
sub
jle
sar
dec
stos
aas
fdivl
xchg
mov
pop
lods
push
mov
popa
je
and
test
jl
cmp
lods
roll
add
mov
jnp
sbb
mov
out
in
inc
imul
int3
and
jmp
pop
negl
push
xlat
cmp
pop
sbb
jo
xchg
push
fwait
mov
jne
outsl
movb
dec
mov
mov
and
in
pushf
repz
repz
or
xlat
cwtl
sahf
je
fs
stc
out
cmp
add
jmp
rolb
xor
add
cmp
ds
outsb
stos
sub
scas
push
mov
test
jl
stos
sbb
fbld
inc
shrl
push
sbb
outsl
and
jo
cld
adc
xchg
lods
sarl
fstp
aas
movsb
push
rcr
push
out
popf
and
call
loope
call
xchg
xchg
loope
mov
cmp
add
mov
sarl
xchg
movsb
lds
dec
imulb
jno
lret
pop
test
jo
jle
inc
leave
loopne
hlt
pushf
shl
jnp
inc
leave
loopne
icebp
cltd
lock
xchg
movsb
sub
rcrb
adc
int3
jp
test
stc
jmp
cmc
xor
nop
pop
push
lcall
lock
ror
loopne
pushw
gs
mov
mov
sti
bts
mov
xchg
pop
xchg
pop
inc
mov
imul
push
add
sbb
and
mov
nop
jge
bound
mov
mov
gs
roll
mov
adc
push
clc
inc
sbb
dec
test
add
std
or
leave
xor
loope
xchg
dec
cmpsb
adc
js
add
fisubl
aas
call
push
cmp
mov
xchg
fnstsw
dec
mov
xor
push
and
jmp
push
add
mov
fstps
outsl
movsb
add
mov
push
lods
jnp
enter
pop
jne
addr16
inc
insl
iret
jecxz
mov
scas
jecxz
or
data16
enter
push
adc
pop
or
pop
loopne
test
jmp
loop
sbb
cmp
xchg
mov
je
jg
repnz
lods
pop
clc
jbe
mov
sti
and
xchg
adcb
cmc
inc
sub
inc
outsl
and
mov
lods
adc
cmc
jl
inc
jge
repnz
dec
mov
xchg
arpl
in
dec
addr16
jne
dec
sbb
cli
mov
cmp
push
adc
ljmp
xchg
sub
scas
movsb
pop
dec
inc
mov
dec
sub
cli
outsb
and
cli
lret
push
pop
aaa
insb
ret
loope
dec
push
imul
shl
or
js
push
pop
jmp
aad
call
fs
cld
pop
sahf
and
lahf
call
outsl
pushf
lahf
jne
inc
call
inc
mov
stos
loopne
sahf
push
mov
out
add
push
call
push
push
push
xchg
inc
arpl
jno
pop
and
insb
out
out
lds
and
adc
insb
dec
add
jno,pt
push
mov
mov
mov
jae
out
cmpsl
out
cwtl
dec
negl
cld
xchg
test
push
mov
push
pop
out
ljmp
iret
add
ret
pop
rcll
mov
repz
fyl2xp1
cmc
sbb
clc
jge
push
int
add
pushf
dec
add
or
cmp
push
out
inc
pop
push
imul
out
mov
addr16
jnp
not
xchg
and
jnp
movsb
adc
push
clc
mov
inc
pop
out
mov
push
out
scas
aam
int3
pop
inc
enter
pop
mov
jae
stc
sbb
in
add
mov
cmp
push
decb
out
rolb
mov
push
dec
xor
aaa
data16
pusha
pop
pop
pop
ljmp
shl
repnz
pusha
hlt
mov
push
sahf
mov
xor
daa
jle
and
or
mov
adc
push
or
mov
pop
mov
push
outsb
shll
xorb
stos
pusha
hlt
cmp
int3
in
aad
shl
push
lea
popf
test
dec
mov
push
lea
adc
sub
fcmovnu
dec
add
fadds
int3
push
fidivl
out
movsb
add
loope
popa
outsb
pop
subl
mov
aaa
test
or
inc
inc
pop
inc
cmp
adc
dec
xchg
mov
lcall
sbb
inc
iret
es
ret
mov
jmp
mov
jmp
out
dec
xor
pop
adc
push
hlt
mov
inc
je
dec
mov
cmp
xchg
cmp
nop
jge
repnz
lcall
ss
je
push
jne
push
pop
pushf
rolb
js
pushf
in
mov
aad
subl
sbb
push
ret
icebp
addb
pop
jge
mov
out
dec
subb
outsl
mulb
fwait
nop
cld
es
mov
xor
mov
pop
mov
inc
loop
pop
ret
adc
xorb
jnp
xor
xchg
into
push
jp
call
lds
mov
std
cs
inc
or
pop
or
ljmp
jo
test
dec
xorl
add
mov
inc
int3
movsl
clc
sbbl
mov
and
popa
mov
sub
push
dec
cmp
jae
adc
push
lods
sbb
mov
or
out
imul
imul
andb
scas
pop
in
dec
mov
outsb
lds
jl
in
shll
mov
inc
mov
and
imul
lret
sub
sub
adc
and
jecxz
cmpsl
pop
jnp
je
lods
cmpsb
std
test
adc
orl
mov
sahf
fistl
mov
dec
jnp
inc
dec
push
outsl
adc
push
mov
ficoml
bound
mov
cmp
push
adc
jb
sub
fimull
cmpsb
ret
mov
icebp
nop
xor
lods
pop
xchg
xlat
jnp
mov
pop
cltd
stos
mov
stc
and
sbb
sbb
test
jle
test
mov
push
insl
add
and
sbb
imul
mov
and
rolb
insb
imul
daa
das
mov
movl
xchg
adc
push
scas
clc
pushf
test
lds
cmp
sub
jle
inc
in
rcrb
aaa
loopne
cmpsl
xor
fadds
ficoms
lcall
scas
cmpsl
xor
stos
loopne
adcl
and
sbb
nop
inc
lcall
outsl
mov
cmp
or
jnp
shrl
pop
or
jnp
inc
shrl
pop
adc
push
repz
aas
arpl
xor
push
xor
lret
mov
xchg
push
dec
xchg
into
and
outsl
movsb
dec
movsl
jb
xchg
dec
les
mov
adc
les
or
mulb
pop
mov
xchg
in
adc
xor
jg
xchg
subb
mov
bound
inc
jmp
lea
addr16
lea
lods
lahf
fsts
jge
push
daa
fs
cmove
cmpsl
in
mov
xorb
mov
add
test
add
inc
jne
push
push
out
and
cmpsl
in
mov
sbb
aaa
mov
adc
sub
mov
xchg
and
xchg
stc
and
xchg
movsb
jp
outsl
js
and
xor
mov
and
jnp
xlat
xchg
jae
add
and
inc
ret
add
cmp
push
pop
xchg
or
xor
mulb
testb
insl
xor
mov
xor
nop
mov
and
lock
xchg
sbb
jle
mov
push
lret
mov
mov
mov
dec
mov
xor
shlb
outsb
jns
push
mov
dec
adc
xor
icebp
sbb
sbb
sbb
xchg
out
call
sbb
xchg
mov
push
mov
sub
push
pusha
add
stc
mov
pop
sub
and
mov
inc
pop
pop
leave
sub
jge,pn
pop
orl
sub
add
bound
push
stc
dec
mov
push
nop
dec
jmp
rcrl
lods
iret
cmp
lds
lret
dec
mov
sahf
push
int
inc
cmpsb
cmpsl
setle
inc
ss
stos
rorl
pop
js
stos
scas
xchg
pop
repnz
loopne
es
pop
out
fisubrl
cmp
inc
xlat
push
int
pop
pop
cmp
ljmp
and
or
test
cmpsl
shll
js
xor
clc
jbe
lock
pop
jbe
mov
fsts
in
mov
test
mov
adc
cwtl
push
stc
jmp
shlb
subl
push
test
pop
lcall
test
dec
orl
pop
dec
int
inc
jnp
jno
ljmp
out
fstps
dec
test
pop
lea
sbb
loop
inc
cld
jmp
cs
lods
dec
insb
xor
mov
jge
mov
cmpsl
lret
push
lret
adc
dec
adc
adc
addr16
dec
xor
loope
mov
jp
stos
inc
jle
sub
pop
cmp
fbld
dec
xchg
add
cmp
dec
stc
push
repnz
test
lcall
out
or
and
dec
into
dec
in
xchg
cmp
lea
inc
cmpsb
rorb
test
adc
or
movsb
dec
subl
cs
push
iret
or
mov
data16
cli
and
push
or
fs
mov
inc
leave
push
dec
scas
add
and
push
stos
jge
or
jno
push
cmpsl
in
fldl
sub
inc
in
jae
push
iret
or
jo
dec
std
cmpsl
shl
or
fcompl
in
xchg
leave
jae
and
loopne
sbb
ficoms
out
popf
hlt
nop
or
fsubrl
add
mov
xchg
cli
mov
jmp
mov
adc
insl
les
xchg
in
iret
std
jns
xor
adc
out
sbb
cmp
mov
pop
loopne
ljmp
adc
repz
shrb
fnsave
xchg
das
sti
xchg
idiv
pop
xchg
sbb
fisttpll
mov
lret
xchg
dec
jbe
mov
loopne
adc
dec
dec
mov
adc
rcr
cmp
push
in
mov
sub
jbe
lock
mov
dec
fidivl
adc
movsl
inc
test
enter
or
sub
adc
or
dec
scas
xor
push
ret
mov
in
fistpl
push
outsb
mov
popf
imul
add
gs
stos
add
test
pop
or
or
xlat
push
inc
and
popa
mov
jo
fmuls
inc
lds
mov
push
push
ja
mov
sub
mov
jo
push
xor
or
ds
inc
sbb
lahf
negb
rcrl
sbb
push
daa
shlb
push
incl
clc
jae
repz
inc
js
pop
xchg
lcall
les
shlb
pop
push
inc
mov
orl
ja
xor
fnstcw
shrb
test
cli
es
adc
shl
in
pushf
repz
jl
filds
mov
imul
pushf
inc
mov
mov
imul
inc
int
repz
or
pop
xchg
add
sti
stos
cmpsb
and
add
sub
mov
and
jp
test
xor
jge
in
leave
cmpsl
shrl
dec
test
jecxz
fldcw
shrb
cmpb
sbb
xchg
arpl
mov
mov
jnp
jae
movsl
cld
dec
icebp
aam
out
mov
cmp
fbstp
loop
test
sbb
xchg
cmp
xorl
mov
xchg
cli
adc
popf
fldcw
cmp
mov
jno
mov
test
add
cmpsb
aad
mov
add
repnz
test
popl
mov
int
pop
add
adc
lods
cmp
cmc
mov
repnz
jge
ja
rcrb
xor
dec
push
add
and
sub
enter
mov
mov
sahf
divl
cwtl
imul
push
cmp
and
rorl
or
mov
das
dec
lret
xchg
inc
js
xchg
into
int
mov
and
lea
outsl
jge
or
orl
mov
out
addb
leave
iret
out
fs
int
pop
sub
mov
sub
arpl
cmp
enter
sbb
inc
insb
ret
js
adc
mov
pushf
xchg
push
loopne
insb
mov
pop
xchg
in
jmp
mov
pop
add
cmpb
mov
cwtl
inc
movl
imul
in
xchg
dec
test
pop
icebp
jnp
loop
fldenv
and
lahf
movsb
popa
jno
adc
add
loopne
cld
fimuls
ss
out
jl
es
fildll
xchg
in
xorb
and
pop
mov
mov
xlat
ror
out
lahf
cmpsl
rcl
mov
aaa
je
sbb
iret
xor
cmp
aad
cmpsl
in
push
fs
lds
in
shll
lds
or
in
shll
insl
fldl
and
rcrl
rorl
inc
mov
or
xchg
sbb
rorb
and
cmp
cmpsl
cs
sbb
or
sub
sub
iret
or
dec
shlb
lock
or
inc
out
xchg
rcrl
jle
je
push
inc
xchg
fstpt
mov
mov
into
sbb
insb
cwtl
cli
shll
sbb
cmpsl
test
dec
sbb
cmp
pop
add
add
sbb
int
fbld
inc
jo
fdivp
cli
insb
ret
or
xchg
mov
xor
repz
dec
lods
add
pop
ret
push
or
rcrl
pop
ret
mov
lock
inc
out
xchg
lret
push
mov
mov
sub
dec
mov
xchg
inc
lcall
mov
and
sub
aas
cmp
inc
cmp
pop
pop
ret
cmc
adc
and
xor
xchg
jo
test
mov
test
dec
jg
inc
mov
es
mov
xlat
das
std
or
jecxz
sahf
mov
add
jmp
dec
push
push
adc
nop
mov
iret
imull
idivl
ljmp
jle
in
xchg
loopne
push
adc
fs
dec
adc
in
inc
dec
std
cltd
outsb
push
add
sti
arpl
mov
jbe
popf
cs
inc
mov
inc
sar
xchg
and
addb
sub
xor
cs
test
in
in
dec
or
pop
add
mov
aaa
fists
lcall
mov
fstps
shrb
lock
in
add
xchg
sbb
mov
xor
lret
and
adc
cmp
icebp
nop
adc
stc
sbbb
xchg
clc
jae
push
add
pop
das
inc
movsl
mov
shll
fstl
out
push
xchg
push
int
sbbb
jp
ror
or
ljmp
daa
add
sub
into
adc
sub
filds
pusha
aaa
mov
xchg
inc
pop
mov
shl
add
jp
loopne
mov
cmpsl
subb
or
mov
loopne
andb
cmp
pushf
repz
outsl
dec
incb
mov
mov
mov
sahf
jns
xchg
xchg
outsl
mulb
fnstcw
gs
into
and
test
test
out
dec
mov
cmp
inc
cmpb
jb
mov
mov
xor
pushf
and
or
cmpsl
rcl
sub
clc
sbb
cmpsb
inc
cmc
cmpsl
shrl
leave
incb
leave
int3
push
jg
popf
clc
sbb
jmp
mov
fldenv
int3
out
xchg
aas
repnz
pop
or
fnsave
pop
clc
movsb
push
inc
scas
arpl
out
mov
add
fwait
xor
inc
add
xor
sub
fistpl
push
mov
es
mov
sbb
push
testb
repnz
and
or
loopne
data16
mov
lods
push
in
fstl
or
xchg
mov
mov
sub
fdivrl
in
or
lods
jns
out
add
mov
jecxz
inc
enter
add
jp
insl
sbb
loope
add
rorl
pop
or
jmp
ret
sub
lahf
es
add
fistl
cmp
mov
add
in
jmp
xor
cltd
sub
jle
fiaddl
xor
jb
lret
insb
nop
pop
fwait
cmpsb
push
and
push
or
pop
hlt
std
dec
pop
imull
add
fdivrs
jmp
les
imul
xor
out
subb
psubsb
loop
les
pop
test
jl
sbb
add
mov
cmp
cwtl
bound
aad
lock
dec
or
test
dec
cmpl
dec
and
pop
dec
sub
inc
sti
fstpl
fists
iret
loop
push
int3
add
in
sub
shll
or
xor
decl
ror
jne
imul
or
lock
out
cmc
jl
inc
sub
sub
lcall
xchg
roll
cmp
push
cmp
fldl
jae,pt
sbb
jl
das
decl
ss
insb
sti
fs
fcoml
push
mov
mov
out
jne
or
xor
cmp
cmp
insb
int3
xchg
push
mov
sahf
and
in
inc
js
push
mov
xchg
divl
mov
xor
pop
jbe
loopne
jbe
sbb
ja
insb
mov
push
ret
jp
jne
push
shrl
das
pop
push
stos
push
shr
jns
and
movsb
pop
and
mov
mov
in
je
ret
fstpt
cmpsb
or
push
xor
and
pop
xchg
fidivrl
mov
nop
pop
push
fwait
std
dec
ja
xor
mov
dec
add
push
adc
xchg
in
jmp
sbb
xor
xchg
and
int
sub
int3
push
mov
pop
gs
add
cmp
jg
test
xor
popf
jge
lock
inc
jp
push
js
cmp
out
fstpl
push
adc
aaa
inc
mov
movsl
loop
mov
test
mov
fbld
sbb
ret
in
out
cltd
dec
addb
int
cmp
sub
dec
stc
push
inc
out
pop
add
xor
ljmp
shl
jns
int
mov
jne
and
or
mov
inc
ljmp
outsb
mov
jns
stos
dec
sbb
sahf
push
xor
pop
mov
movsl
and
out
inc
repz
out
cmp
sti
mov
lret
clc
ret
fnstenv
int3
inc
sub
sti
les
faddl
push
pop
xchg
clc
mov
sub
lcall
lcall
dec
add
fdivl
shr
push
enter
mov
xor
orb
orb
or
mov
jl
roll
testb
inc
and
aas
and
dec
dec
mov
aam
gs
adc
pop
push
mov
fimuls
mov
popf
mov
or
sub
jo
push
sahf
inc
or
jnp
pop
pop
pop
mov
add
jae
lcall
xor
es
and
push
mov
sub
cs
mov
imul
rolb
inc
mov
xchg
cs
sbb
sub
jnp
rcrl
mov
mov
insl
mov
add
subb
mov
or
dec
xchg
push
xor
inc
ret
aas
push
cmp
or
hlt
sub
adc
rorl
in
xchg
dec
add
push
rorl
or
movsb
fcmovnb
stos
dec
sarb
add
rorb
mov
sbb
pop
mov
sbb
or
lret
xchg
push
out
rclb
fidivrl
mov
lock
mov
and
mov
mov
xor
sub
test
xor
xchg
jp
push
mov
sub
in
std
ret
popw
adc
shr
loopew
mov
mov
mov
xchg
imul
rcll
push
sti
xor
sbb
adc
dec
cld
inc
rorb
ljmp
xor
or
pop
pop
sbb
rolb
push
sub
mov
adc
sub
cmovae
cmc
inc
jmp
sbb
popa
int
mov
scas
fisubrs
dec
imul
add
dec
cmp
inc
or
mov
sbb
cmpsb
repz
nop
sahf
sub
mov
adc
jmp
insl
stos
and
sub
mov
in
mov
cmp
imul
jle
push
inc
je
cmp
dec
test
jno
aam
cmpsl
ds
dec
xor
popa
adc
dec
push
cmp
push
cmpsl
fnstcw
mov
fcmovnbe
adcb
add
mov
mov
lcall
and
mov
fnstcw
jb
out
xor
outsb
push
fildl
mov
fstps
lcall
mov
fisttps
cmp
and
xor
call
cmc
aas
xchg
sbb
cld
push
cmp
push
inc
jmp
imul
lods
das
cmp
and
push
push
xchg
je
cmpsl
pusha
lods
pop
jge
imul
lret
push
push
mov
mov
xchg
in
jmp
or
rcrl
ja
test
mov
aad
cmp
add
ret
or
xor
mov
dec
xchg
dec
lock
in
fistl
mov
cmc
popf
hlt
jp
sub
mov
bound
call
sbb
mov
icebp
je
mov
push
pop
inc
pop
jecxz
add
mov
sub
fisttpll
nop
imul
in
rol
sub
sahf
icebp
das
sub
mov
fadd
jl
push
icebp
loopne
hlt
xor
mov
xor
cmp
jmp
std
arpl
je
jl
aad
mov
invd
inc
frstor
pop
pop
push
cmpsl
sbb
pop
push
stc
lahf
and
stos
lea
hlt
sbb
push
mov
scas
cmp
jmp
mov
adc
leave
jno
push
lods
out
mov
jae
test
mov
sahf
aad
test
sbb
push
add
cmp
fsub
cmp
mov
ficomps
cs
push
nop
movl
lret
lods
mov
rclb
or
aas
jmp
cmp
xchg
inc
popf
jns
aas
push
cmp
lahf
add
jb
push
lcall
lds
loop
rcrl
sub
test
push
call
test
push
mov
cmp
push
cmpb
xchg
pop
inc
mov
pop
pop
xchg
add
dec
std
test
dec
fnstcw
cmpsl
shll
push
inc
or
or
sub
dec
jb
into
xchg
push
rcl
outsb
lods
or
daa
dec
jbe
dec
stos
leave
cmp
jecxz
push
scas
mov
xchg
push
scas
shrb
cwtl
cmpsb
mov
mov
push
jns
and
out
sub
ljmp
add
std
movsb
or
lods
adc
repnz
inc
rclb
paddusw
imul
leave
jg
imulb
loopne
and
call
das
cmp
adc
test
xor
cmpl
mov
sbb
fisubl
addl
aas
aaa
sbb
ret
xor
and
inc
add
addr16
das
dec
lods
mov
lods
lret
sub
imul
mov
push
daa
dec
push
push
pushf
cld
dec
repnz
jne
cmp
add
push
frstor
push
int
fiaddl
mov
ret
testb
lock
adc
adc
add
insl
outsl
and
lds
inc
mov
push
dec
das
fimuls
mov
repz
adc
scas
pop
xchg
fdivrs
add
enter
out
sbb
push
push
cld
sbb
out
and
cmpb
mov
jg
pop
mov
mov
sub
dec
hlt
pushf
ljmp
pop
aaa
insb
sbb
jecxz
stos
arpl
adc
scas
std
movsl
cld
pop
mov
into
mov
loop
sbb
lods
jge
out
in
mov
jne
inc
cmp
fidivrs
push
xchg
sahf
icebp
jb
mov
pop
mov
xor
cmpsl
shll
pop
outsl
mov
push
or
jnp
push
jne
gs
inc
xchg
in
inc
or
mov
sub
xchg
loope
outsl
push
jge
jnp
lds
mov
cs
loopne
into
mov
cmp
push
jp
pop
hlt
idivb
movsb
xchg
cs
lods
shlb
test
cwtl
and
repz
cmpsb
add
pop
test
into
and
xor
das
mov
or
adc
fidivs
xorl
dec
mov
outsb
stos
and
into
mov
sbb
roll
dec
mov
outsb
mov
adc
lahf
xchg
repz
mov
and
cmp
int3
xor
xchg
lret
aas
push
push
ja
jle
pop
mov
shll
mov
pushf
imul
pop
xor
neg
lret
mov
aaa
je
movsl
out
popf
hlt
adc
xchg
mov
pop
pop
mov
push
pusha
sarl
jns
add
jne
xor
mov
js
mov
sbb
movsl
dec
cmc
sahf
dec
movsb
sbb
ljmp
push
cld
jns
addl
jb
aas
pop
xchg
and
cmp
add
mov
and
xor
jo
push
dec
sbb
xchg
dec
test
push
js
int
stos
lcall
adc
or
mov
inc
js
ljmp
add
scas
add
mov
sbb
or
sub
cwtl
xor
sbb
bnd
push
rolb
out
push
jne
pop
add
xchg
rcrl
jge
pop
mov
test
pcmpgtd
jnp
mov
gs
jmp
test
push
outsb
cmc
jl
inc
mov
push
repnz
mov
rcrb
fdivl
scas
pusha
dec
jo
aaa
inc
adc
mov
mull
mov
sbb
jnp
jmp
sub
or
add
pop
in
jns
mov
sbb
scas
mov
rorl
cld
imul
clc
mov
ret
ljmp
or
pop
or
mov
or
cmp
subb
add
scas
or
push
js
and
inc
test
and
gs
imulb
mov
inc
mov
and
push
lea
lret
push
mov
fmull
xchg
outsb
ret
sbb
jmp
cli
nop
sbb
xor
fistl
lret
ja
sahf
bound
mov
clc
jae
enter
or
inc
cwtl
adcl
pop
pop
cs
add
inc
add
inc
inc
and
jmp
mov
popa
mov
movsb
lcall
ds
in
mov
xchg
lret
subl
cmpsb
xchg
sbb
mov
ja
add
push
loopne
outsl
push
mov
arpl
daa
test
add
out
sbb
adc
mov
js
sbb
dec
xchg
mov
ja
icebp
and
subb
pop
sub
pop
cmpb
xor
mov
mov
push
add
ret
dec
xchg
xor
add
xchg
sbb
stos
xor
sbb
adc
xchg
faddl
pop
push
gs
lcall
imul
jle
out
stos
add
movsl
cld
cmc
fmuls
mov
call
js
xor
xchg
in
xchg
insb
mov
cmpsl
mov
test
dec
pop
mov
ret
fbld
mov
mov
cmc
ja
add
mov
incl
insl
cs
add
lea
fs
nop
adc
mov
dec
int
sub
out
push
xchg
lea
ret
cli
sub
in
int
negb
sub
sbb
mov
stc
sbb
jnp
arpl
pop
adc
bound
push
mov
bound
movsl
cs
stc
mov
inc
jbe
adc
xor
fidivs
ret
sub
mov
and
lock
dec
ljmp
sbb
mov
icebp
mov
jp
cmc
or
cmp
jmp
inc
fdivs
mov
jns
adc
jge
icebp
adc
rclb
jmp
out
aad
push
inc
int3
or
jmp
cmpsl
popa
ret
push
mov
andb
inc
jb
xchg
push
mov
iret
lea
cmpsb
mov
fs
shrl
mov
jmp
inc
adc
in
je
cmp
push
mov
push
xor
mov
and
mov
fwait
aad
insl
stos
push
mov
inc
sbb
shrl
mov
jno
loope
sub
lds
mov
mov
mov
shlb
shr
cmp
mov
sbb
adc
icebp
adc
cmp
pop
insl
push
mov
mov
jns
sub
dec
js
fstps
mov
mov
stc
orb
out
insb
cld
push
or
mov
xor
cmp
dec
mov
jecxz
mov
jmp
into
js
cmp
imulb
push
insl
lds
jmp
cmpsl
add
enter
call
sub
sub
fidivrl
push
nop
fstps
jno
fidivrl
ja
fsubrs
cmp
jbe
add
pushl
insl
out
dec
mov
xor
dec
jnp
xor
lret
xchg
pop
dec
mov
and
in
push
fwait
std
fsubl
insl
sarb
cmpsl
shrl
dec
dec
ror
add
mov
icebp
daa
fs
int3
outsl
inc
in
inc
pop
push
gs
jmp
les
push
xchg
mov
xchg
jbe
jl
sbbb
xchg
scas
push
pusha
pusha
xchg
enter
xor
fs
and
call
loop
push
inc
dec
sbbl
xor
or
xor
xchg
inc
xorb
mov
or
test
xchg
in
stos
mov
push
xchg
test
stos
cmp
mov
dec
scas
lds
lds
repz
mov
dec
in
inc
je
or
lds
push
inc
mov
in
push
add
sbb
xor
loope
test
push
jl
addr16
aaa
jne
in
daa
sub
dec
test
dec
addr16
mov
mov
fisttpl
sbb
nop
ret
jno
dec
test
pop
test
cwtl
aad
or
sub
aam
lret
stc
xchg
inc
mov
mov
sbb
xor
sbb
mov
imul
jae
mov
cmp
mov
rol
fwait
in
inc
and
testl
or
test
aaa
call
push
aad
xor
or
mov
and
or
stc
shlb
jg
pop
lret
xor
add
outsb
std
mov
mov
pop
xchg
mov
lret
mov
jmp
es
test
sbb
dec
cmpsl
dec
lea
sub
loopne
pushf
shr
lods
jnp
mov
jno
addr16
push
jmp
or
jo
dec
in
adc
enter
fcmovbe
sub
or
lods
shll
leave
mov
aad
pushf
into
and
addr16
mov
mov
and
and
or
sbb
out
jne
push
icebp
ret
int
iret
add
out
xlat
inc
mov
push
testl
outsl
and
mov
adc
fucom
mov
pop
adc
mov
xchg
dec
nop
int
fisttpl
int
push
add
lret
mov
adc
dec
sub
sub
adc
out
jnp
jae
cltd
and
fidivl
inc
test
aad
stos
xor
mov
sbbl
push
aaa
lea
add
add
ljmp
into
and
aaa
outsb
iret
push
mov
ja
out
mov
arpl
daa
dec
jbe
cmpsl
mov
div
cwtl
pop
cmpsb
jecxz
xchg
call
adc
inc
pushw
inc
stc
dec
add
stos
loop
cwtl
push
or
dec
rorl
inc
mov
cmp
mov
mov
mov
pop
push
xlat
adc
shl
mov
arpl
insl
loope
and
dec
mulb
cmpsb
shll
mov
arpl
mov
jns
xchg
or
adcb
fiaddl
cli
ficoml
push
idivb
out
xchg
aas
je
xor
sub
push
in
and
adcl
nop
test
add
cmc
outsb
movsl
lods
jno
cmp
scas
pop
inc
inc
mov
cs
mov
sbb
add
outsl
divb
mov
js
cmp
das
in
mov
and
stos
std
cmp
call
outsb
mov
ss
jbe
add
dec
fildll
in
pop
or
mov
push
jo
mov
fcmovbe
cmp
sbb
in
dec
scas
or
ret
mov
fimuls
pop
mulb
jmp
mov
sbb
and
dec
aas
mov
fwait
lods
lcall
sbb
stos
scas
icebp
popf
rolb
xchg
push
sub
sub
aas
xchg
into
pop
push
aad
test
lea
inc
stc
pusha
or
mov
es
push
lahf
fcoml
or
cmp
js
inc
xchg
iret
add
xchg
pop
int3
push
nop
fcom
sbb
pop
int3
mov
xchg
add
adc
cld
cmp
sbbl
inc
jl
mov
testb
rcl
sbb
and
xchg
mov
notb
xor
lcall
filds
pop
inc
jno
addr16
mov
fs
daa
jb
xchg
push
or
test
test
mov
or
jg
bndldx
pop
out
sahf
aam
pop
inc
mov
push
into
movsl
daa
iret
push
fnsave
pop
push
jle
inc
jmp
leave
lret
or
or
cmpsb
imul
dec
ss
push
mov
pop
xchg
ret
int3
xor
mov
arpl
dec
cltd
repnz
outsl
mov
sub
in
sub
pusha
pop
add
sub
or
xor
cs
mov
add
imul
push
or
mov
xorb
cmc
or
xchg
fadd
cltd
jg
bound
fwait
repnz
addl
adc
inc
mov
sub
outsl
cwtl
adc
fwait
shl
jae
pushf
adc
loope
sbb
jmp
xchg
lods
imul
ret
pusha
push
fistps
nop
pop
outsb
mov
sub
inc
push
movsb
popf
pop
or
lds
in
imul
in
inc
sbb
push
aam
xor
or
sbb
dec
or
nop
cmp
cmp
push
in
inc
sti
sub
mov
push
std
xor
xor
jl
mov
subl
addr16
mov
mov
dec
pop
sbb
outsb
sub
aam
dec
inc
in
sbb
and
sarb
outsl
or
jge
mov
mov
test
fdivrs
adc
addr16
mov
shlb
lods
insl
jl
imul
test
test
inc
xchg
sbb
or
mov
decl
pop
lret
jecxz
fs
ret
aaa
jns
push
xchg
inc
sub
pusha
mov
jecxz
cltd
scas
shrl
imul
arpl
mov
adc
add
in
mov
arpl
imul
in
jg
daa
or
ja
in
sahf
add
pop
sub
leave
and
fdivr
stos
add
xor
and
mov
loop
mov
scas
dec
jp
cmp
xchg
rcrb
jp
call
dec
mov
adc
xor
pop
dec
test
cs
pushf
aad
js
lods
add
ljmp
in
nop
fiadds
popa
xchg
rcrl
adc
inc
sahf
mov
or
mov
and
inc
out
inc
shrb
aaa
xchg
sub
dec
mov
fistpl
hlt
dec
test
loopne
adc
inc
push
inc
jmp
push
mov
pusha
mov
ljmp
fstpt
mov
aad
popa
mov
inc
push
popf
mov
das
mov
add
shlb
ret
sbb
sbb
sub
cmpsl
into
cmc
dec
add
clc
or
cmp
mov
or
cmp
jge
cmp
cmp
and
push
insl
sti
ljmp
push
push
and
mov
idivl
jle
xchg
inc
ja
push
xchg
push
stc
stos
jbe
pop
loope
imul
adc
int
fmuls
aad
sbb
jecxz
int
rorl
adc
jmp
pop
aam
cmp
inc
adc
and
or
outsb
inc
push
dec
fidivs
push
fistpl
push
ret
adc
lods
ret
mov
fs
loope
aaa
iret
cmp
dec
es
mov
adc
sbb
into
test
sbb
rorl
pushf
orb
dec
xor
jl
jmp
pop
and
mov
jnp
pushf
popf
les
lcall
cli
in
loopne
popf
icebp
int
and
cmp
lcall
call
cmpsl
in
xchg
cmp
shl
imul
jo
shl
mov
dec
cltd
inc
cwtl
dec
lock
inc
flds
xor
add
stos
mov
pop
fidivrl
rcrl
cmp
or
in
adc
xor
das
out
mov
test
je
pop
mov
cli
into
lahf
xorb
jnp
js
sbb
adc
jg
cmp
xor
fisttps
imul
pop
mov
addr16
rolb
add
lods
mov
jg
push
and
sbb
sbb
xor
inc
adc
xlat
cs
sbb
arpl
call
js
pop
stos
xor
dec
in
sbb
pop
jle
cli
mov
jbe
arpl
out
pop
ja
pop
incb
in
mov
mov
xorb
push
xchg
lds
scas
je
push
fstl
xlat
pop
ja
sar
xor
stc
xor
push
fwait
adc
out
xchg
jb
xchg
mov
data16
cld
insl
and
ss
icebp
xchg
mulb
popf
hlt
and
fldl
push
lods
pop
jnp
jnp
push
dec
jp
inc
mov
inc
jne
jg
test
mov
movsl
push
nop
cmpsb
push
mov
cltd
cmpsl
cltd
pop
sub
push
enter
cmpl
outsb
mov
cmp
inc
xchg
sbb
xchg
mov
or
das
fiadds
lods
iret
or
mov
lods
push
fistpl
push
lds
mov
adc
out
jp
adc
push
ficoms
add
and
int
shl
mov
sbb
jns
jle
and
sub
stc
jns
push
and
insl
mov
mov
ljmp
push
push
sbb
mov
lea
insl
add
xchg
jo
mov
mov
mov
cli
sub
shl
test
sbb
push
dec
aad
mov
mov
mov
jp
push
ja
lcall
sbb
stc
sbb
loopne
fildl
add
inc
js
int3
dec
fcoms
mov
sub
mov
mov
fidivrl
mov
sub
andl
pop
pop
mov
sbb
mov
mov
cmp
popa
out
or
xchg
push
or
sub
mov
pmulhw
mov
mov
dec
sub
xor
cmp
cmp
xchg
xor
fwait
add
mov
repz
jle
movsl
and
fbstp
inc
push
lcall
shlb
xchg
fwait
in
push
repz
insl
test
clc
add
push
fnstsw
jbe
inc
push
in
xor
dec
fstpt
imul
push
inc
call
incb
inc
leave
push
dec
mov
test
dec
xchg
jns
jg
push
or
push
jecxz
xor
dec
pop
das
xchg
mov
pushf
and
mov
movsl
loope
jno
sahf
and
add
lret
sar
jo
int
inc
push
inc
mov
xchg
sbb
sub
outsl
sbb
lahf
lods
add
nop
add
lret
add
enter
xor
aaa
fbld
in
inc
fstpt
mov
ds
cmp
and
fnstenv
sti
fldenv
popf
mov
push
dec
clc
sbb
jnp
mov
notl
out
mov
jo
or
and
sbb
push
mov
sub
subb
test
xorl
mov
xorl
xchg
mov
dec
test
pop
sub
repnz
and
aaa
in
push
arpl
imul
jbe,pt
mov
mov
movb
std
fdiv
mov
dec
test
inc
out
and
sahf
sahf
mov
sbb
cmc
in
and
imul
push
fwait
ret
xchg
inc
cmpsl
inc
div
pop
in
scas
lret
add
stos
xor
rorl
mov
mov
and
or
jl
fcomps
rolb
cmp
xchg
dec
cmp
ret
cmpsl
icebp
dec
cmp
add
bound
or
xor
cmp
loope
xchg
jle
mov
cmc
adc
call
insb
pop
negl
mov
jnp
cmc
mov
subl
test
in
and
in
jnp
sub
add
sbb
lcall
cmp
mov
pop
add
mov
nop
out
jae
fisttpl
mull
xchg
jne
sti
jae
inc
int3
add
or
cmpsb
xchg
clc
pop
cmpsb
call
sbb
loopne
push
test
or
dec
sub
sub
aad
cmp
xchg
mov
add
pop
rcl
movsl
or
mov
sub
sub
and
pop
add
mov
xor
cmp
push
add
dec
mov
lcall
add
push
fcoms
cmp
cmp
ret
sub
mov
cld
ja
add
cmp
dec
xchg
xchg
sbb
xchg
add
and
sub
pop
in
fcmovne
test
arpl
inc
pushf
ljmp
hlt
hlt
mov
xchg
mov
mov
sub
nop
sti
inc
mov
std
xlat
or
cltd
insl
rcll
adc
adc
dec
subb
xchg
cmpsl
and
jne
out
jp
push
cmpsl
cs
sub
jmp
pop
or
inc
adc
call
jns
cmp
cmp
and
dec
fwait
inc
jmp
loope
push
lcall
cmp
xor
or
sub
pop
adc
push
jg
push
push
sarl
cltd
pop
and
andb
sahf
sub
adc
pop
data16
std
or
xor
xor
gs
adc
mov
bound
call
jbe
fisttpl
mov
cmpsl
test
dec
sbb
push
xchg
fdivrs
enter
mov
push
fldenv
or
adc
icebp
jg
jae
push
cmpsl
sub
xchg
and
mov
mov
mov
mov
pop
fistps
lret
ss
inc
mov
or
mov
jmp
xchg
jmp
clc
das
push
not
jge
and
and
daa
scas
in
mov
movsb
lahf
mov
mov
adc
mov
and
outsl
xchg
in
add
and
cmp
aad
jbe
lods
add
mov
imul
cmc
sbb
test
stos
xor
lods
es
add
out
cltd
sahf
pop
cli
push
fwait
aam
jo
inc
cli
jno
mov
jno
pop
insl
movsb
mov
dec
inc
shrb
test
sbb
sub
and
inc
movl
add
dec
inc
ja
sti
mov
mov
push
fwait
std
test
mov
into
and
mov
mov
sub
mov
sbb
test
xchg
out
inc
cmp
leave
adc
shll
repnz
pop
inc
repnz
xchg
dec
aaa
decb
xor
pop
xchg
lds
mov
lds
movsb
bound
das
mov
xor
and
popf
mov
frstor
es
fwait
stos
dec
jle
sub
xchg
nop
rorl
jno
sti
push
fs
and
pop
in
dec
testl
sbb
jno
adc
or
jp
jb
ds
dec
cmp
scas
push
cmpb
cmp
enter
adc
pop
cli
lret
cs
or
lods
scas
and
dec
test
xchg
sbb
inc
cmp
filds
push
pop
mov
xor
out
mov
mov
jns
roll
negb
cld
xor
sbb
add
sbbl
aas
std
jg,pt
mov
nop
enter
pop
cmp
pop
ss
test
adc
pop
push
js
jle
into
mov
mov
mov
sbb
jb
das
imul
mov
fistl
addr16
je
cmp
sbb
outsl
pop
mov
push
lahf
cmp
roll
sub
outsl
es
or
pusha
scas
xor
lods
mov
mov
adc
pop
outsl
es
add
test
or
push
dec
sub
int3
in
mov
pop
clc
push
mov
mov
push
jl
sub
test
sub
mov
mov
int3
int3
outsl
pop
inc
cltd
and
popf
out
mov
jae
out
loopne
push
fnsave
popa
loop
xor
push
fmull
sub
cmp
mov
sub
or
hlt
fstps
pop
cmp
cmpsb
mov
ds
lods
mov
aaa
mov
sub
pop
imul
shll
test
test
outsb
inc
xchg
jecxz
js
push
mov
mov
jecxz
and
imul
lea
adc
adc
pop
test
clc
push
js
add
rolb
into
xchg
sbb
or
fnsave
dec
loope
ret
mov
inc
adc
sbb
test
xchg
ja
iret
stos
adc
in
cmc
movsb
fldt
test
inc
fmul
push
xor
sbb
xchg
push
cmp
jge
add
lret
fiadds
fwait
leave
decb
xchg
or
lcall
int
lea
mov
sbb
pusha
mov
mov
adc
pop
loope
xlat
cmp
cltd
and
pop
fisubs
dec
iret
or
mov
stos
loopne
cld
test
stos
mov
xchg
inc
idiv
jae
dec
pop
pop
imul
sbb
stos
push
pushf
pop
fwait
push
rclb
mov
jns
jmp
mov
test
ret
pushf
lcall
addb
dec
push
pop
into
xor
cmp
and
xlat
pop
out
pop
mov
jp
shlb
push
and
popa
mov
ficoml
dec
popa
or
rorb
inc
repz
repz
jnp
and
in
cmp
pop
or
loopne
cmp
add
fs
setbe
cmp
sbb
mov
pcmpgtd
jnp
mov
adc
push
in
dec
mov
and
daa
cmp
and
dec
aad
jg
and
xchg
mov
mov
loop
repnz
movsl
add
pop
jne
movsl
je
xor
in
sub
mov
sbb
cs
je
js
dec
jne
repnz
aad
dec
jmp
mov
cmp
stos
out
inc
ja
fld
sbb
shlb
or
or
lods
fstl
popf
dec
test
arpl
and
xchg
pop
pop
pop
pop
movsl
nop
adc
ds
int3
cwtl
out
jge
mov
bound
mov
xor
fnstenv
adc
cmp
mov
rorl
aam
jmp
or
cmpl
stos
call
and
and
sub
push
push
xchg
call
cmp
mov
jno
add
pop
sub
push
hlt
pop
ds
out
xchg
pop
std
lods
add
scas
sub
sub
lock
imul
adc
sub
or
xor
fs
es
xchg
fiadds
cmpsl
jno
imul
icebp
cmpsl
mov
mov
cmpsl
rcll
ficoms
push
cmp
xchg
data16
mov
icebp
inc
or
test
fstps
ljmp
adc
add
xchg
aad
sar
das
xchg
push
jae
xchg
int3
xchg
mov
nop
pop
add
pop
adc
pusha
sbb
nop
lcall
dec
pop
cmpb
dec
ja
add
xchg
filds
aaa
arpl
cmc
xchg
jp
int
lret
pop
xchg
sbb
dec
dec
jmp
adc
gs
aas
cmc
lret
cwtl
andb
and
lock
sahf
cmc
mov
or
jne
cmpsl
jnp
rorb
shll
pushf
insl
jb
dec
iret
or
mov
testl
jmp
xchg
negb
sub
dec
cmpsb
nop
sub
mov
outsb
xchg
dec
test
rcrb
or
jp
pop
adc
mov
loope
inc
fwait
loope
push
jge
xchg
out
nop
and
repnz
cld
stos
rcrb
jne
rcrb
aad
sub
in
xchg
lret
or
fs
push
mov
jecxz
pop
add
xor
ror
sahf
push
mov
test
insl
xchg
filds
cmpsl
fistl
xor
push
insb
adc
push
dec
in
mov
mov
and
idiv
jecxz
sub
xor
stos
push
ret
inc
repnz
dec
mov
inc
hlt
dec
cmp
fcmovb
mov
and
xchg
sahf
rcrl
ljmp
int3
or
insl
xchg
mov
sub
scas
push
bnd
sub
lds
jg
xchg
popf
dec
mov
adc
jp
fdivp
mov
mov
jge
imul
jp
rcll
loop
loopne
lcall
mov
sbb
pop
and
cmp
mov
or
orb
pop
inc
mov
test
fs
in
inc
rorl
lret
and
push
push
push
mov
aam
ret
jns
push
jnp
add
push
scas
jns
or
pop
cltd
aad
push
insl
mov
xor
adc
js
xor
add
test
int
int
daa
icebp
dec
mov
mov
popa
adc
daa
test
push
mov
add
mov
sbb
sub
push
pusha
inc
test
push
cmp
mulb
pop
mov
ljmp
fldcw
repz
cmp
xchg
enter
mov
icebp
daa
iret
add
ret
jbe
jl
adc
fbstp
outsb
sti
xorl
ja
push
lods
pop
xchg
out
and
mov
out
mov
je
negb
jge
popa
call
stc
mov
out
mov
loopne
push
clc
int3
mov
sub
cmp
mov
inc
int3
push
stos
jge
rorb
stos
jmp
clc
das
sbb
pop
mov
flds
cld
jb
mov
xor
test
ja
fwait
jg
movsl
icebp
arpl
adc
cs
inc
dec
inc
cmpsb
mov
lds
loop
insb
sub
xchg
std
test
packssdw
push
popf
stc
mov
pop
adc
add
fsubl
and
loop
pop
fwait
testl
xorb
mov
sbb
push
jne
arpl
data16
and
and
sub
data16
adc
scas
in
pop
mov
lcall
stos
mov
lcall
jg
stc
sub
test
mov
push
and
jg
pop
into
and
dec
cld
push
addl
cmc
movsb
sti
push
gs
mov
inc
in
fnsave
mov
push
outsl
xor
sub
xor
or
and
shll
inc
ss
out
add
xchg
cmp
add
or
mov
ficoms
movsb
add
bound
hlt
cmp
dec
loopne
ds
or
mov
sub
int3
and
add
sbb
dec
inc
mov
ljmp
mov
cmc
push
test
icebp
cmp
mov
out
and
ja
pop
ds
jle
fbstp
push
addr16
test
mov
mov
movsb
jmp
mov
push
mov
dec
sub
das
test
xchg
xor
mov
loop
adc
stc
and
ret
faddp
divb
lret
jmp
test
xchg
mov
cmp
clc
xor
lock
push
or
lods
ss
out
pop
inc
fwait
mov
adc
jno
addr16
cs
movsb
jl
loopne
push
dec
movsl
mov
nop
or
mov
call
xchg
inc
icebp
js
cmp
inc
sub
push
pop
add
inc
dec
pop
xor
push
mov
mov
int
out
call
mov
fadds
pushl
out
or
test
and
lods
jmp
and
fnstsw
iret
addl
shrl
lahf
mov
pop
pop
xor
pop
ret
jp
scas
out
test
add
xchg
std
movsl
test
mov
insl
les
add
je
cli
mov
cwtl
lds
xlat
pop
subl
popa
mov
xlat
adc
shrb
mov
sbb
shrl
shlb
sbb
xor
loop
inc
cmc
fcomps
cmp
mov
inc
ret
cmc
sub
lods
inc
add
push
adc
xchg
in
nop
xchg
mov
mov
outsb
flds
jb
mov
outsl
dec
sub
enter
cmc
jle
mov
sarl
jmp
jne
pop
inc
push
stc
jmp
cmp
push
gs
mov
jl
pop
add
mov
adc
mov
repz
and
pop
mov
pop
jno
fists
mov
cmc
mov
cmpsl
in
fistpl
push
ret
pusha
xchg
rcrb
adc
iret
cmpxchg
sbb
ds
inc
pushf
loop
in
ljmp
scas
pop
or
cwtl
cmp
clc
jne
loop
pop
or
mov
cmp
xor
xor
cmp
lcall
aad
or
or
push
data16
mov
and
mov
cltd
aam
inc
pop
icebp
mov
stos
or
inc
mov
dec
scas
cld
cmp
mov
xor
adcl
dec
testb
jae
dec
or
pop
sub
scas
sbb
and
es
fiadds
data16
xchg
js
sub
push
js
mov
mov
mov
pop
movsl
popa
and
cld
pop
aaa
xchg
stos
push
lcall
jmp
cmpsb
cmp
adc
imul
fimuls
int3
push
fidivl
out
int3
push
clc
sub
jecxz
pop
dec
mov
jno
push
adc
lcall
scas
jmp
cwtl
int
add
int3
and
imul
push
in
xor
mulb
jo
outsl
mov
lret
add
push
jl
lret
mov
mov
enter
mov
xchg
ljmp
add
push
test
cltd
mov
outsl
movsb
sti
pop
push
popf
cwtl
test
fdivs
aad
mov
out
movsl
icebp
cmp
jne
test
daa
jns
mov
call
pop
imul
ds
in
ds
cmpsl
ds
dec
or
into
push
xchg
fnstsw
jo
cmpsb
jecxz
mov
xorl
ja
leave
sbb
sahf
sub
jl
sti
popa
out
icebp
sub
mov
fisubs
and
lods
or
leave
adc
inc
push
test
negl
xchg
add
es
cmpsl
inc
mov
je
pop
cmpsl
inc
mov
xchg
jno
jnp
inc
fistps
test
aam
mov
repz
lahf
data16
or
mov
xor
push
fwait
shr
push
outsb
lds
imul
movsl
mov
mov
lcall
mov
dec
mov
dec
push
or
in
pop
add
stc
mov
pop
and
jmp
enter
mov
xor
push
cmp
cmp
icebp
js
cmp
mov
xchg
andl
mov
add
mov
jbe
push
mov
adc
add
pop
test
adc
hlt
push
sbb
aaa
xor
rolb
js
jg
inc
pop
lods
mov
repz
mov
shlb
mov
inc
xchg
outsb
mov
cmp
movsl
sub
mov
dec
addb
icebp
sbb
push
xchg
inc
aaa
ret
add
add
test
dec
cld
jle
and
lret
push
pop
cmp
rol
test
sbb
sub
test
iret
es
push
sbb
inc
in
and
roll
dec
in
cmpsb
mov
mulb
cs
lahf
fdiv
and
or
push
add
imul
je
adc
testl
int3
and
movsb
movsb
push
fmull
ret
loopne
ret
jl
out
lahf
dec
movsl
pop
cmp
nop
sbb
ret
fimull
push
mov
xchg
inc
pop
in
jae
cmc
push
test
adc
cmpb
pop
or
ja
mov
cmp
or
lcall
cld
dec
int
sbb
jbe
sub
add
adc
xchg
aas
pop
mov
mov
jmp
ret
jno
push
add
stos
int
sarb
cmp
adc
ret
jb
pushf
sahf
ja
adc
jbe
cmp
pusha
out
arpl
fcmovbe
and
sbb
sub
jl
in
scas
lret
jg
pop
addr16
outsl
movsb
dec
mov
lret
sbb
adc
pop
popf
or
js
pop
jmp
mov
jl
mov
pop
mov
lret
push
add
or
pop
lret
aad
push
sub
mov
add
in
jmp
jbe
push
repz
xor
mov
lret
and
fs
outsl
lods
daa
pop
mov
adc
jp
cwtl
add
sbb
negb
or
sarb
dec
inc
adc
lahf
es
je,pt
xor
push
fcmovb
sbb
mov
enter
shrl
out
mov
cmp
stos
imul
stos
xor
and
sbb
rol
inc
jle
icebp
int
cltd
ja
pop
fnstenv
mov
adc
arpl
or
xor
cmp
cmpsl
mov
and
xor
negb
mov
js
sbb
cmp
cwtl
mov
or
cltd
and
rcll
mov
jecxz
push
jp
jnp
mov
hlt
sbb
mov
clc
ret
xor
test
push
jl
mov
mov
pushf
xchg
daa
pop
mov
ss
cmpb
mov
xor
fs
xchg
xchg
and
lods
ljmp
les
les
insb
jle
inc
push
push
arpl
aad
inc
sub
fildll
test
out
push
dec
inc
aad
fsubrl
and
mov
adc
mov
lea
mov
jg
out
xchg
aas
jl
sub
push
lods
bound
ss
fimull
fidivrl
xchg
sbb
xor
out
jnp
and
outsb
lea
push
or
mov
pop
jecxz
push
adcl
lods
cmp
lea
popa
sbb
sbb
hlt
js
jne
lods
sub
adc
or
out
jne
push
les
jge
jb
dec
jb
es
test
cli
and
neg
daa
cmp
daa
push
push
scas
sahf
loope
negb
test
inc
xlat
cs
mov
xchg
cld
test
fwait
mov
mul
mov
xchg
in
mov
out
lods
lea
push
sbb
pushf
inc
sbb
sahf
das
loopne
rorl
push
mov
mov
addr16
into
dec
mov
push
inc
lock
cmp
mov
pop
movsb
xor
or
push
scas
cmc
cmp
sub
mov
mov
mov
sub
into
push
pusha
jae
cmp
lahf
int3
and
xchg
and
cld
dec
mov
test
scas
mov
lods
fwait
sub
dec
ficoms
je
test
shl
repnz
movsl
fnsave
pushf
or
cmp
sbb
cmc
xor
or
or
push
add
lea
cmpsb
pusha
push
jbe
cltd
popf
cmp
xor
das
out
xchg
sbb
daa
and
sbb
lahf
aam
push
jns
sub
gs
mov
xor
add
cli
push
fstl
jbe
add
jnp
inc
mov
iret
inc
mov
in
in
pop
dec
subl
add
leave
or
or
sbb
push
fildll
push
test
jae
rcrl
rolb
aad
clc
sbb
repz
jo
repz
pop
iret
popa
mov
ja
push
std
xchg
ss
xchg
imul
xchg
filds
incl
sti
or
xor
xchg
jge
pop
mov
pop
jbe
test
or
push
ficoml
pop
ret
jnp
mov
add
and
popf
add
mov
in
adc
jbe
testb
ja
mov
mov
incl
in
dec
insb
repz
inc
cmp
jo
inc
mov
jle
pop
xchg
outsl
std
xor
or
xchg
inc
popf
leave
xor
push
subl
xchg
push
insl
cmp
or
fldenv
scas
add
and
je
idivl
outsl
or
aaa
xorb
push
xchg
cmpsl
stos
dec
inc
cmp
subb
pop
leave
popa
icebp
jl
jp
fsubrp
movsb
fcmovne
xor
push
mov
es
icebp
mov
popl
scas
gs
mov
outsb
cmpsb
pop
sahf
and
mov
push
je
lcall
je
xchg
adc
sbb
xor
lds
inc
in
test
dec
push
lret
pusha
andb
iret
fidivs
xor
jo
data16
ds
sbb
mov
or
xor
xor
shl
shrb
mov
sub
push
pop
push
rcrl
divl
ss
std
negl
enter
xorb
xor
mov
out
sub
aad
add
pop
push
repnz
dec
test
loop
cmp
aaa
dec
das
test
call
or
ror
xchg
and
dec
cmp
push
shll
mov
jmp
cmp
dec
jo
inc
mov
sbb
negl
int
or
inc
mov
cli
dec
mov
jbe
lea
mov
cmpsb
daa
sub
pop
mov
mov
or
arpl
dec
xchg
mov
cs
cmpb
and
andb
xor
andb
imul
add
sbb
lret
mov
push
push
lahf
sti
sub
loope
inc
or
bound
mov
pusha
cwtl
leave
push
dec
scas
loopne
push
enter
test
pop
or
or
movsb
dec
subl
fs
aad
or
popa
or
scas
add
jp
cmp
outsl
imul
ret
jg
xor
xchg
sub
cs
pop
ss
daa
xchg
in
and
xor
sti
aam
mov
dec
inc
push
inc
cmp
and
adc
cmc
jmp
fstpt
sarl
test
mov
mov
decl
or
cld
push
inc
fs
add
add
xor
fs
dec
or
out
and
xchg
inc
leave
push
dec
mov
sub
cmp
aaa
mov
pop
push
leave
pop
mov
sarb
jb
mov
repnz
gs
jne
mov
fwait
push
gs
jp
and
popa
sub
dec
mov
dec
push
sbb
mov
push
ret
xchg
enter
out
jbe
pop
fnstenv
outsl
adc
xchg
bound
stos
add
mov
cmpsb
pop
cld
pop
mov
jl
out
adc
dec
sub
cmc
jb
mov
jle
outsl
and
inc
daa
inc
push
call
aam
sbb
test
dec
fildl
sti
pop
nop
repnz
loope
and
xchg
or
dec
cmpsb
jmp
loope
ja
stos
loope
mov
stc
jns
mov
ret
lea
call
fs
cwtl
sub
or
mov
dec
xchg
xor
sub
adc
mov
push
cwtl
cld
dec
repnz
rol
add
jns
push
push
adc
adc
pop
jne
sti
leave
aad
xchg
icebp
sbb
dec
cltd
fimull
scas
call
dec
sbb
mov
adc
pop
mov
sbb
push
xchg
pusha
mov
push
std
mov
push
xchg
jo
les
pushf
in
dec
mov
dec
les
pushf
sahf
loop
mov
dec
mov
movsb
push
stos
cmpb
lret
in
and
jbe
stos
fidivrs
jle
test
into
or
outsl
out
cld
shrl
shrl
lea
inc
call
notl
adc
add
jmp
rolb
stc
sub
or
inc
or
sbb
inc
fwait
shlb
lcall
int
loopne
sub
sub
and
inc
pop
and
jne
add
cmpsb
sti
lods
cmp
push
fisubs
imul
push
fildl
dec
das
fs
jg
xor
mov
in
jmp
sbb
outsb
lcall
dec
test
test
or
or
mov
dec
mov
jmp
je
pop
mov
inc
mov
inc
ljmp
and
or
add
add
mov
fdivl
sub
and
pop
icebp
jne
pop
xchg
and
or
ret
stos
xor
mov
js
lahf
push
pushf
repz
aaa
push
test
cmp
testl
data16
in
pusha
mov
addr16
push
idivb
test
push
nop
pop
loope
adc
mov
dec
add
lret
stos
out
xchg
lds
dec
stos
fistpl
push
cmc
xor
or
inc
js
cmp
int3
add
xor
xchg
cmpsl
in
ret
aaa
push
inc
push
xor
sbb
ss
xlat
push
and
adc
enter
and
mov
imul
ret
dec
ret
fiadds
rcrb
or
inc
sbb
imull
adc
or
and
mov
inc
cs
lahf
inc
jl
xlat
mov
out
lcall
int
ljmp
push
cmc
hlt
mov
or
and
call
stos
cmc
mov
nop
testl
stos
add
push
jbe
push
or
xchg
mov
or
mov
jmp
mov
push
cli
addr16
into
add
xlat
lret
lds
out
xchg
in
push
or
add
mov
xor
cli
push
insb
adc
jo
sbb
push
pop
mov
push
xor
adc
sti
push
jg
pop
repnz
push
notb
mov
push
mov
dec
push
sub
in
mov
fs
aad
mov
inc
out
and
call
mov
aam
lds
lea
fimuls
inc
popf
adc
shl
xor
hlt
jnp
mov
cmp
pusha
lret
inc
lock
mov
subb
not
adc
pop
in
mov
pop
adc
scas
push
cmp
insb
lds
cmp
mov
dec
test
dec
xchg
xor
adc
test
lock
inc
outsb
or
cltd
pushf
cmp
sbb
mov
adc
jmp
inc
negb
popa
into
jns
push
xchg
in
sub
push
lret
call
or
test
enter
xchg
stc
push
repnz
cwtl
pop
dec
adc
push
insl
mov
xor
sbb
jle
mov
cwtl
rclb
mov
mov
mov
das
fisubs
aaa
insb
sbb
mov
movl
bound
ja
dec
mov
ss
cmp
icebp
lea
xchg
sbb
outsb
gs
xchg
inc
hlt
jnp
xor
dec
adc
xchg
sbb
pop
stos
add
sahf
add
adc
jmp
ret
sbb
sahf
jl
add
sub
push
lcall
adc
fwait
inc
repz
insl
xlat
data16
or
lcall
mov
pop
subb
scas
pop
sbbl
jno
xor
scas
cs
jle
xor
mov
inc
or
bound
aas
out
cmpsl
in
pop
insl
daa
cmpsb
sub
aas
fnsave
repnz
cmpb
xchg
adc
pop
rcpps
push
subl
movsb
sub
jbe
lea
sbb
pop
mov
loope
movsl
inc
sbb
or
push
jns
jp
xchg
ficoms
inc
in
repnz
rorb
loop
jmp
ja
jo
push
jp
mov
insb
or
push
push
int
test
mov
fcomps
mov
mov
popf
and
sub
mov
out
testb
insb
xchg
or
ds
mov
jno
mov
cmovbe
imul
lods
inc
in
mov
pop
xlat
xchg
mov
pusha
out
jmp
add
lods
test
sub
push
outsb
mov
mov
and
mov
mov
push
test
or
cmpsl
add
fisubrs
jnp
mov
inc
insl
adc
mov
outsb
sbb
dec
xchg
jmp
cmp
xor
fildll
adc
or
ret
push
and
arpl
jbe
cmp
jns
in
xchg
in
push
sti
js
enter
push
jnp
clc
jecxz
xorl
lock
jmp
mov
popa
lahf
fisttpll
ret
jb
or
fmul
mov
dec
bound
dec
fstl
adc
adc
inc
into
add
add
add
call
jp
iret
dec
lcall
outsb
inc
loop
fnsave
pop
cmc
push
out
pop
pop
jo
sbb
ret
or
repz
cmpsb
cmpsl
and
pop
cli
or
jo
fwait
repnz
ja
jg
fwait
xchg
mov
xorl
xchg
xor
or
cli
push
pop
adc
outsl
cmp
test
sahf
nop
lock
cmp
jb
add
repz
cmp
adc
inc
cmp
dec
mov
cmpsl
dec
test
inc
fwait
test
xor
and
jmp
cmpsl
fistl
adc
roll
cmp
and
ljmp
das
test
enter
push
push
insl
movsb
mov
aam
pop
pop
inc
xchg
xchg
adc
xchg
mov
cmpsb
leave
jg
shl
test
push
sub
xchg
movb
dec
into
xor
pop
nop
fwait
scas
mov
loope
cli
sub
test
mov
movb
mov
inc
jl
xchg
mov
loop
test
dec
mov
mov
incb
and
fsubl
sub
jne
push
cmp
mov
nop
mov
sub
sbb
rol
inc
mov
pop
xchg
cs
into
dec
call
lret
cmp
cmp
adc
add
mov
jae
sbb
das
xchg
jae
xchg
inc
jnp
adc
stc
mov
xor
push
ficoml
pop
ret
prefetcht2
ljmp
or
mov
jp
pop
dec
adc
pop
mov
aaa
fwait
jns
adc
or
ret
sbb
adc
add
loopne
adc
xchg
cmp
jb
lret
or
jne
es
out
arpl
stos
cmp
jg
push
jno
mov
mov
dec
add
js
cmpsl
pop
push
xor
loop
pop
cmp
mov
lods
xchg
pop
lahf
cmpsl
pusha
sbb
int
sbb
sarb
sahf
inc
jb
shl
cmp
popa
call
imul
imul
mov
fs
fiaddl
cmpsb
aas
adc
fs
aad
subl
mov
jb
daa
pop
test
insb
adc
mov
adc
subl
test
add
arpl
movzwl
jne
mov
push
fwait
cli
jb
stc
andb
shll
mov
pop
mov
loope
pusha
leave
js
in
add
repz
mov
mov
pop
push
enter
jg
push
add
or
hlt
push
loop
sub
or
jmp
jle
or
pop
sbb
mov
xor
sub
or
repz
inc
cmc
inc
jmp
enter
aad
lret
jae
sbb
negl
xchg
dec
jp
bound
sub
adc
lea
sti
push
push
push
lods
clc
xorl
jge
in
dec
es
mov
mov
imul
ficomps
inc
pushf
or
mov
hlt
dec
inc
jo
sub
or
jne
jnp
mov
test
mov
inc
ds
and
aaa
and
ja
pop
push
in
cmp
sub
sub
cmp
mov
cwtl
add
sub
and
fwait
shl
dec
pop
cld
or
out
push
or
mov
pop
outsb
push
mov
iret
int3
and
out
cld
fidivl
leave
add
inc
movl
repz
je
out
repz
hlt
mov
mov
jns
and
mov
mov
jnp
clc
jg
mov
cmc
ret
rcrb
pushf
repz
xchg
in
cltd
lock
ljmp
ds
call
mov
fdivs
sbb
add
repnz
and
in
outsb
hlt
ljmp
aad
out
and
rorb
inc
mov
mov
mov
es
push
gs
call
sbb
push
fmuls
std
aad
mov
lock
jb
lock
push
movsb
lock
les
aas
mov
sbb
fsts
repnz
std
repz
enter
dec
mov
cmp
sub
jmp
mov
loopne
call
fbstp
xchg
sub
push
addr16
jns
repz
mov
and
cmc
leave
test
and
adc
xchg
pop
mov
and
flds
add
dec
jnp
xor
xchg
into
push
jp
call
lds
mov
std
cs
inc
or
pop
or
ljmp
jo
shll
lea
pop
outsl
out
push
dec
clc
adc
mov
or
rorl
xchg
loop
mov
dec
outsb
lds
out
ljmp
popa
mov
les
out
cmp
and
inc
jne
gs
lea
xor
dec
loopne
jb
rcrb
xchg
cmp
xchg
sub
pop
clc
shlb
loopne
jmp
arpl
jno
mov
mov
addr16
push
add
call
mov
ficoml
loop
aad
pop
and
xchg
ljmp
add
sub
xchg
mov
mov
cmp
xchg
sti
mov
sub
cmp
cmp
sbb
push
dec
and
lock
sbb
jbe
and
stc
cmp
push
jne
movsl
rcrl
sahf
cmp
mov
add
pop
cmpsl
sahf
jno
es
xor
adc
ret
or
sub
push
sub
pop
pop
cwtl
arpl
inc
in
xchg
lret
dec
test
leave
sti
mov
and
lcall
dec
xor
popf
push
mov
lods
aaa
test
insb
xchg
clc
mov
inc
inc
test
movl
xchg
xchg
sub
mov
jmp
inc
sbbl
dec
cmp
lea
repnz
mov
xlat
repz
gs
jo
or
sti
aad
in
dec
movsl
cmpsb
int3
mov
inc
sahf
cmc
dec
imul
test
push
xchg
fstpl
movsb
jg
jecxz
cmp
pop
cmp
imul
std
movsl
pop
arpl
and
and
push
jae
mov
pop
lea
mov
cltd
stos
add
xlat
sbb
cmp
adc
fmulp
jmp
in
sbb
inc
es
adc
testl
cltd
or
stos
rorb
int3
push
jp
cmp
jbe
loopne
pop
test
inc
jno
ljmp
stos
and
repz
inc
es
je
cwtl
int
sbb
sub
aas
add
lea
cmp
sub
inc
in
cmp
push
cmp
cmc
scas
dec
subl
pop
add
pop
xchg
fisubl
jae
add
in
ret
push
lea
pop
xchg
inc
orl
dec
movsb
andl
test
loopne
sub
dec
subb
adc
and
das
repnz
sar
and
pop
out
rcrl
fstpt
lea
test
cmp
fisubrl
daa
push
mov
jecxz
fisttpll
clc
and
adc
imulb
and
lods
sbb
add
lret
pop
test
lea
xor
rorl
adc
test
shlb
jnp,pt
es
test
imul
push
hlt
push
nop
fistpll
outsb
adc
call
mov
roll
adc
clc
fwait
stc
and
xchg
jmp
stos
loop
popa
sub
pop
dec
mov
popf
hlt
inc
imul
mov
je
adc
sbb
dec
xchg
mov
sub
fildl
sub
sub
jo
call
push
adc
inc
sar
xor
push
aam
push
push
std
aam
xor
sbb
cs
push
movsb
jecxz
mov
dec
mov
cmpsb
out
pusha
pop
lfs
addr16
push
mov
pop
sub
xchg
pusha
pusha
loope
clc
dec
repz
jmp
mov
nop
mov
add
pop
push
cwtl
cld
dec
repnz
xlat
cmpsl
shll
and
es
je
and
cmp
scas
push
push
enter
stc
jp
leave
jmp
push
dec
dec
pop
popf
dec
mov
imul
fadds
push
sub
cli
pop
shl
or
cli
lret
xor
and
imul
xchg
into
mov
cmpb
enter
jl
dec
int3
sti
mov
push
xor
in
in
pop
mov
xchg
fcomps
cmpsb
jecxz
mov
insl
imul
cli
jbe
fwait
movsb
adc
push
dec
xchg
sub
ret
cltd
mov
test
push
xor
sbb
adc
es
bound
mov
pop
fisttps
and
push
stos
xlat
inc
xlat
xchg
jns
bound
jge
and
aad
mov
mov
aad
test
xor
xchg
aad
mov
out
fistps
enter
add
fldcw
pushf
leave
cmc
sub
add
sub
dec
jbe
loop
jb
hlt
pushf
shl
and
sti
mov
xchg
fidivs
subb
sub
pop
test
sub
ret
mov
mov
scas
and
dec
sbb
mov
imul
cwtl
jle
push
mov
imulb
and
jb
and
dec
sbb
push
jp
xor
mov
mov
push
lcall
out
test
push
pop
xchg
add
fwait
or
mov
push
or
mov
xor
sar
cmp
out
faddl
pop
nop
int
jne
int3
cld
pop
add
push
jg
mov
stc
test
shrl
popf
leave
aam
rcll
cmpsl
adc
jle
in
adc
ret
stc
xor
adc
mov
jno
test
dec
dec
insb
ret
inc
aad
push
and
notl
xchg
lret
cmp
inc
lret
cmp
xor
scas
getsec
mov
in
xor
adc
jae
decl
sarl
jne
push
scas
rcrb
and
test
jge
repz
out
sub
dec
mov
mov
or
add
mov
mov
cltd
pop
ds
pop
push
cs
and
stos
or
xor
xor
xchg
in
pop
cmp
mov
mov
dec
movsl
jb
jp
les
fcoms
sbb
insl
mov
ret
je
push
test
jl
add
inc
stos
push
and
fwait
into
clc
movsl
fsubl
rolb
pop
cmp
mov
mov
cs
jbe
aaa
call
fwait
in
cld
cmpsb
push
and
or
xor
stos
and
in
idivb
xchg
jno
mov
fsts
repnz
in
mov
sub
aam
add
jg
test
imul
add
mov
jmp
mov
sbb
adc
fwait
and
or
xor
lahf
xor
sbb
inc
xchg
movsb
add
mov
push
add
add
lock
int
stos
mov
cmpsl
in
mov
xorb
mov
fcomps
shlb
inc
add
insl
stos
cltd
lret
imul
in
aam
flds
xchg
xchg
call
cltd
lock
addb
jnp
sub
push
popf
push
inc
popa
pop
cmp
jmp
lds
int
inc
mov
inc
and
sbb
arpl
push
pop
add
pusha
out
insl
es
fldl
pmovmskb
pop
inc
inc
rclb
ljmp
cmc
imul
cmp
xchg
pop
jecxz
loope
out
xchg
pop
jecxz
jmp
test
popa
jae
push
in
push
pusha
int
cld
xor
jecxz
inc
mov
adc
inc
jbe
or
movsl
shl
negb
mov
sbb
clc
mov
adc
add
dec
js
mov
push
sub
adc
cmp
xchg
daa
je
adcb
xchg
out
popa
jl
xchg
aad
and
std
ds
mov
ret
mov
push
imul
xchg
adc
adc
jp
nop
rorl
sub
add
outsl
fwait
subl
mov
add
in
iret
or
add
add
mov
cmc
and
push
stos
mov
or
fadds
push
js
add
dec
in
inc
movsl
int3
sub
or
adc
sub
call
ds
jae
push
dec
fisttpl
cltd
lock
popa
lahf
and
lods
out
xchg
nop
je
and
cmpsb
leave
loope
push
std
inc
out
push
pop
cmp
lea
mov
xor
cmp
mull
jno
dec
mov
mov
gs
mov
mov
pop
aaa
and
pop
test
pushf
xchg
add
daa
lret
fdivrl
insl
mov
das
cmpsl
fldt
cwtl
or
mov
xchg
lret
cmp
lret
jg
xchg
jl
cmc
sbb
cmc
xor
and
and
clc
gs
pop
ljmp
xchg
dec
call
sub
js
popfw
out
lods
push
push
add
shrb
or
cmp
sar
loop
push
sahf
xchg
fcomps
jbe
pop
sar
cmp
xchg
sbb
cltd
cmc
dec
add
xchg
call
sbb
dec
xchg
aas
adc
xor
ds
jb
adc
fadds
cld
das
pop
mov
adc
sbb
adc
inc
leave
js
ss
jle
in
test
imul
stos
and
arpl
rorl
sub
mov
xchg
mov
sub
clc
in
jle
jecxz
adc
or
mov
into
bound
and
aad
cmpsb
jl
lret
and
and
std
push
mov
sbb
out
xor
repz
out
mov
mov
shl
rorl
sti
or
jge
jo
mov
iret
es
sub
mov
pushf
test
test
bnd
ljmp
pop
jns
sbb
int
sub
jnp
hlt
sub
sti
stos
xor
sbb
cmp
iret
scas
jecxz
inc
mov
inc
imull
in
outsl
jne
data16
push
scas
lret
test
jnp
ret
cmpl
loope
xor
fstpl
jae
call
lds
gs
and
iret
repnz
adc
sub
adc
das
jb
arpl
pop
call
movsb
in
incl
adc
lahf
fidivl
out
adc
out
sub
cmc
xor
sbb
and
shlb
clc
jb
hlt
pushf
repz
adc
sub
mov
jne
test
adc
inc
call
testl
cmp
and
sub
jg
out
out
outsb
mov
dec
sub
jns
push
addr16
insl
scas
inc
fsubr
fwait
repnz
lahf
icebp
inc
repz
adc
jo
sub
aaa
sbb
test
push
or
lcall
mov
pop
or
mov
adc
in
dec
iret
outsl
push
pop
mov
out
inc
and
sub
repnz
mov
je
and
dec
negb
inc
pop
scas
mov
int
shrl
mov
popf
loop
mov
mov
xchg
push
push
test
cs
outsl
pop
gs
sbb
dec
outsl
in
push
pushf
add
cli
mov
scas
mov
push
mov
mov
popf
mov
fildll
xor
xchg
dec
ret
arpl
xlat
cs
cmc
xchg
dec
adcl
push
sbb
and
or
add
and
xor
dec
xchg
loopne
xor
mov
mov
sub
pop
dec
dec
fsubl
les
inc
push
jle
sub
or
mov
adc
scas
les
into
jbe
pop
mov
push
fistpl
aaa
mov
popf
sbb
add
int
sbb
cli
jns
push
mov
cltd
mov
or
mov
vpaddq
add
cwtl
rcr
adc
scas
daa
pop
enter
xor
xor
add
xchg
sbb
add
test
add
sub
mov
adc
testl
loope
inc
fidivs
xchg
and
sub
aaa
out
adc
movsl
cltd
jmp
jo
lds
fs
xor
fcoms
insl
es
adc
pop
mov
xor
scas
dec
incb
or
mov
outsb
fucom
xchg
inc
cwtl
lcall
iret
inc
imul
adc
and
and
push
jecxz
jl
adc
cmp
push
enter
ficomps
add
inc
cltd
mov
les
data16
dec
mov
xchg
ds
insl
cmpsl
dec
jns
xchg
xor
cmp
fs
inc
pop
mov
xlat
arpl
popf
test
push
scas
add
xchg
jo
mov
icebp
shlb
sub
or
jno
sti
call
xor
add
push
inc
mov
mov
sbb
loope
mov
inc
mov
xor
mov
xchg
jmp
jg
push
xchg
movsb
loop
mov
push
adc
mov
push
xor
sub
mov
push
lods
add
xorb
inc
xchg
mov
cmp
cmp
clc
data16
adc
outsb
divl
inc
or
jns
imul
push
mov
inc
sub
pop
lret
inc
mov
jnp
pop
jnp
xor
jnp
in
xchg
cmp
lods
cs
inc
dec
dec
outsl
in
gs
in
mov
cmpsl
mov
jmp
bnd
ret
pop
cmpsb
ffree
bound
ret
sub
mov
mov
sbb
dec
test
fst
pop
and
sbb
dec
xchg
pushf
inc
fwait
mov
dec
xchg
mov
test
out
int3
xchg
test
push
lcall
fnstenv
xchg
mov
pop
pop
lods
sbb
dec
subb
imul
mov
mov
subl
pop
mov
cld
in
lcall
cmp
jnp
inc
add
das
mov
jl
ljmp
and
mov
dec
dec
jge
sbb
push
imul
dec
js
test
shrb
xor
imul
pop
pop
dec
push
adc
cmp
setbe
sbb
xlat
adc
ret
xor
in
xor
fdivs
rorl
ds
xchg
pop
xor
mov
jmp
push
mov
adc
iret
mov
mov
and
mov
jb
adc
in
xchg
jmp
adc
lea
add
lret
jp
xchg
enter
out
mov
lock
hlt
mov
mov
push
ret
stos
xlat
sahf
jae
ret
clc
dec
inc
les
and
push
fsubp
or
jbe
dec
add
inc
movl
cmp
in
push
jb
mov
dec
or
lods
sbb
cwtl
arpl
cltd
and
and
test
test
lock
andl
rcrb
jo
scas
fstps
and
sub
mov
sub
shr
sbb
lahf
jo,pn
test
xchg
sbb
arpl
mov
cmpsb
jbe
mov
push
adc
lahf
aad
pop
xor
jle
xor
iret
jge
cmp
xchg
cmp
sbb
stc
cs
jmp
push
xchg
test
rorb
out
adc
int3
add
je
daa
cmp
add
sub
in
xchg
ret
jbe
cmp
jp
mov
lret
sbb
adc
xchg
jns
fisubl
call
popa
cmpsl
icebp
add
cmpsl
adc
ret
fs
dec
jne
or
loop
dec
sarl
xchg
mov
mov
adc
adc
fldenv
sub
dec
cli
sub
fwait
repnz
mov
dec
cmpsl
notb
ja
and
dec
add
in
pop
add
inc
enter
or
js
bound
jmp
xor
pop
cmp
lock
inc
inc
fldenv
mov
je
das
mov
mov
divl
loope
fs
dec
mov
pop
jle
jne
mov
lahf
dec
movsl
pop
jge
mov
movsb
push
mov
or
enter
xchg
je
sti
xor
fstpt
test
cmp
scas
sbb
push
and
fisttps
lds
aas
push
call
lcall
mov
mov
dec
outsl
imulb
fmul
fstpt
lea
bound
arpl
testb
stos
sbb
test
pop
cmpsl
push
lods
rclb
scas
dec
imul
ds
incb
movhps
dec
addr16
xchg
test
and
dec
negl
jo
es
sbbl
xchg
cmp
or
test
dec
sbb
or
mov
js
pop
xchg
mov
dec
pop
mov
sub
scas
incb
or
mov
and
into
push
sbb
pop
mov
jmp
cld
cmp
pop
push
jge
icebp
or
mov
out
cmp
loop
cmp
mov
xchg
outsb
ljmp
mov
lahf
aam
xchg
test
movsl
out
xor
push
mov
leave
xor
cmp
adc
flds
arpl
fst
mov
idiv
je
imul
mov
cmp
imul
push
jae
sti
and
sub
pop
out
stc
call
pop
pop
rorb
or
sub
or
or
enter
aad
dec
repz
xor
pushf
sub
sub
shll
in
test
push
mov
cmp
loope
or
add
mov
inc
aam
in
sbb
cmp
pop
scas
lea
push
mov
push
sti
mov
jecxz
js
stc
fs
pop
mov
pop
xor
pop
in
lods
pusha
ljmp
xchg
in
add
loop
push
leave
pop
mov
je
mov
je
fiaddl
push
test
inc
cltd
imul
in
rcl
push
sub
movl
shll
mov
jae
rolb
jg
test
fisubl
or
add
or
repnz
jp
fs
pop
nop
aas
movb
scas
jecxz
sbb
xchg
daa
das
xlat
or
and
ret
popa
xor
pop
in
test
in
or
cmpsl
cmc
and
imul
aam
jge
fsts
pop
inc
mov
adc
dec
cmc
inc
or
jns
dec
xor
in
adc
mov
jl
and
stos
pop
cmpsl
stos
hlt
xor
sbb
jnp
add
divb
mov
in
mov
push
cmc
sub
dec
div
mov
push
fistl
xchg
push
outsb
jge
movsb
in
xchg
out
stc
repz
jl
imul
xchg
inc
out
sahf
and
cmc
vpsubusw
pop
into
and
clc
sbb
pop
sbb
push
mov
imul
adcb
pop
ljmp
bound
mov
fidivl
cmpsb
sbb
pop
and
sbb
mov
jg
cmp
insb
sbb
inc
cmc
mov
cmp
jecxz
and
mulb
or
ret
mov
sar
stos
loopne
xchg
ror
sub
inc
gs
xchg
mov
aaa
je
and
out
cmp
cmp
or
loope
lahf
mov
mov
into
cmp
cmp
mov
push
xchg
sub
nop
cmpsl
sti
pushl
lret
sbb
repnz
xchg
and
inc
jle
add
sub
mov
arpl
fstps
insb
ret
lods
inc
in
xchg
imull
sbb
pop
repz
pop
xchg
inc
popf
cwtl
xchg
mov
call
js
stos
xchg
add
test
mov
mov
imul
dec
push
outsb
mov
pop
dec
aad
mov
call
adc
ret
les
cmp
jecxz
mov
xor
ja
movsb
jmp
jl
ds
les
nop
mov
sar
cmpsl
fsubrl
mov
gs
jmp
iret
mov
cld
jb
scas
leave
sub
fisttps
pusha
mov
push
xor
icebp
cltd
into
js
popl
cmp
mov
cltd
or
ss
sti
dec
jno
cld
iret
push
lret
jle
fs
mov
adc
sbb
out
mov
sub
push
fisubs
imul
fildl
cmpsl
shll
dec
fcompl
mov
sahf
and
lret
cli
mov
dec
xorl
jne
hlt
rolb
repz
dec
sahf
push
test
pop
push
leave
pop
push
fwait
std
dec
xchg
add
sbb
dec
enter
lret
dec
jp
test
clc
sbb
add
mov
insb
mov
xor
aam
cmp
cmpsl
shll
scas
in
test
add
leave
jno
jg
inc
popa
or
cmc
popf
shlb
cmpsl
rcl
adc
jae
mov
sbb
sub
lcall
and
push
loop
fnstenv
pusha
push
jg
dec
xchg
daa
sbb
sbb
mov
inc
add
fldl
push
lret
add
adc
enter
inc
push
xor
cmp
adc
sbb
jbe
and
js
cmpsl
push
loop
push
lcall
xor
add
imul
mov
jns
mov
arpl
cli
std
push
ret
xor
cmp
lods
xor
lcall
push
orl
int
xor
in
xchg
leave
and
imul
test
mov
testl
pop
dec
dec
outsl
mov
ja
in
pop
xchg
mov
ja
sbb
iret
and
aad
inc
cmpsb
insb
add
call
cltd
mov
inc
cmpsb
lret
xchg
movsb
xlat
incb
cld
fcomp
pop
xchg
sbb
cmp
sub
push
popf
decl
sub
into
in
pop
mov
mov
sub
xchg
aam
adc
jne
xor
cmpsb
fucomp
dec
sub
adc
orb
push
jl
das
pop
cmpsl
cmp
orl
mov
add
jne
mov
pop
or
jne
lret
push
mov
pop
or
sbb
idivb
pop
ds
mov
or
or
xorb
cmp
push
jne
fisttpll
cmpsl
mov
xor
lock
lcall
jp
fidivrl
hlt
pushf
roll
mov
or
inc
dec
or
ja
cmp
scas
push
push
or
into
test
test
sub
cs
lods
lock
popl
push
pop
jmp
cmp
es
mov
inc
repz
test
out
push
into
and
outsl
js
sbb
cmp
daa
bound
nop
jge
nop
aas
xchg
fwait
mov
cmp
addr16
dec
mov
ss
add
mov
test
subl
pushf
or
adc
lock
ret
xlat
iret
pop
mov
jp
repz
push
jbe
out
and
push
pop
call
dec
adc
icebp
js
jle
mov
pop
mov
push
aas
mov
aaa
mov
js
push
add
push
ficomps
push
leave
pop
mov
outsb
loope
out
sub
fnstenv
out
sub
out
pusha
or
mov
push
mov
lods
add
sbbb
insl
jle
sub
repnz
inc
roll
daa
push
mov
fnstenvs
dec
jg,pt
movsb
sti
inc
mov
mov
in
shll
mov
mov
hlt
sbb
icebp
adc
sub
repnz
sub
jb
pop
push
xchg
rcrb
jle
je
rclb
xor
push
cld
xor
adc
cmpsb
push
jmp
xor
cmp
and
push
cmp
adc
mov
rorb
add
xchg
mov
test
lea
inc
adc
xor
lcall
sti
sbb
cs
xchg
out
xor
jae
mov
hlt
ficompl
jbe
jecxz
icebp
fwait
repnz
out
add
mov
daa
ljmp
lods
iret
es
add
int3
inc
adc
shl
fstp
sbb
pop
push
push
push
jo
outsl
push
jne
outsb
or
mov
jg
nop
out
push
mov
fcompl
int3
je
add
mov
pusha
or
stos
popa
xor
or
and
add
jg
mov
es
jbe
cs
dec
xchg
lret
mov
xchg
fsubrs
sbb
mov
mov
movsl
call
shlb
lods
or
in
mov
in
ja
std
or
shl
sti
jecxz
dec
shl
mov
scas
mov
push
pop
testl
fsubs
xor
lret
lods
icebp
xchg
xchg
rolb
stos
xor
mov
and
ret
fyl2xp1
les
push
ja
aam
inc
cmp
movsb
fisttpl
xchg
mov
outsb
es
fimuls
jae
cmpsb
popa
cmpsb
adc
push
pop
test
scas
pop
in
dec
roll
fchs
loopne
inc
addr16
dec
stc
push
nop
mov
jge
fidivs
and
sbb
sub
xchg
inc
cltd
les
ss
adc
lods
cmpsl
fdivp
dec
pusha
push
and
push
popf
push
sub
lock
or
outsb
mov
xchg
and
jb
loopne
lea
adc
out
sub
jp
sub
fadds
scas
and
lds
mov
mov
mov
xchg
mov
rclb
fistpll
int
mov
jge
xchg
inc
leave
add
mov
and
xchg
jmp
pop
mov
lock
add
ss
mov
mov
push
fstl
jmp
adc
jb
scas
pop
mov
fistl
cs
xchg
sbb
sbb
xor
xchg
push
mov
cmp
loope
inc
into
or
add
loope
push
dec
xchg
stos
sbb
call
into
sarl
xor
dec
rolb
in
xor
xchg
movsl
cmpsb
out
pop
sbb
ds
mov
arpl
add
dec
loop
scas
pop
xorl
dec
icebp
movsl
xor
fs
stos
es
xchg
inc
icebp
mov
addr16
repz
fisubs
ja
popf
mov
cmp
inc
xchg
push
jnp
aaa
mov
cmp
addl
imul
push
dec
jge
cmpsl
in
mov
xorb
cs
jle
xor
dec
inc
mov
in
adc
nop
out
std
or
push
scas
jecxz
test
aaa
insb
push
xchg
and
or
adc
mov
jp
sbbb
sti
jne
fadds
mov
sti
add
arpl
int3
out
and
stos
jl
or
lret
mov
push
inc
into
add
std
inc
and
lods
std
lods
cmp
sub
push
lods
sub
mov
jno
xor
cmp
orb
in
shll
or
mov
pop
scas
ljmp
int3
ss
adc
clc
jg
xor
inc
sarl
dec
aas
arpl
inc
xchg
hlt
pop
ret
push
mov
add
jg
fisubl
push
stos
sbb
dec
xchg
enter
and
push
jg
ljmp
aam
lcall
ret
aaa
insb
ret
fistps
cld
adcl
jo
mov
mov
sahf
aaa
stc
mov
fcmovne
jo
inc
leave
cmc
movsl
xchg
cmpb
lcall
jge
adc
hlt
fsubrs
stos
jp
push
dec
hlt
jge
mov
sub
pop
dec
cli
push
cmc
mov
pop
nop
pop
mov
pop
lcall
rcrl
cs
ret
jne
dec
in
inc
lret
mov
push
inc
cwtl
sbb
mov
mov
xchg
push
dec
out
xchg
dec
stc
jmp
outsb
out
dec
pop
scas
in
fs
out
ret
adc
xchg
aas
hlt
sub
aaa
mov
dec
xor
pop
push
mov
adc
rorb
jmp
jge
xor
fstl
lods
or
call
call
fs
xor
push
pop
sarb
sub
push
jne
rolb
sub
push
rorl
and
in
pop
addr16
jne
pop
push
or
stc
mov
cmovl
jns
cmp
mov
popl
cli
mov
sbb
fstpt
rorb
lret
add
popf
add
add
cmpsl
in
mov
test
sbb
addr16
adc
inc
dec
es
or
jge
sbb
inc
cltd
jp,pn
insl
push
cwtl
inc
into
or
xor
in
sbb
cs
or
fs
xor
popa
scas
push
decl
sub
pusha
mov
je
lret
fisttpll
ja
cld
movsb
dec
cmpl
rorb
jmp
jnp
lea
push
adc
add
mov
pop
pop
dec
test
aaa
jg
cld
pop
loope
xchg
fdivrl
xor
xchg
and
add
pop
xchg
inc
cmpsl
test
dec
cmpl
les
mov
dec
stos
stc
mov
hlt
and
or
adc
sbb
and
cmp
imul
add
cmpsb
pop
stos
call
jecxz
mov
bound
xor
and
pop
sbb
lret
xorb
lock
or
cmc
sbb
iret
dec
lods
pop
push
aam
out
push
nop
and
xor
adc
orl
stos
jl
xor
mov
rcrb
daa
mov
sbb
lods
andl
jmp
pop
movsl
xchg
lods
lret
xor
mull
mov
shl
stos
and
cmpsb
adc
pop
jno
pop
jmp
adc
call
out
jno
pop
adc
xchg
pop
insl
shll
aaa
mov
cmp
adc
pop
cmp
in
xor
sti
cmp
dec
aam
cld
pushf
adc
dec
ficomps
dec
cmc
xor
xchg
xchg
pop
add
call
out
popf
hlt
jge
sbb
sub
sbbb
jecxz
pop
call
push
pop
xor
push
cmpsl
arpl
divb
pop
or
js
xor
rolb
shrb
jae
pop
fs
adcl
es
and
inc
fwait
mov
les
imulb
push
fsubs
or
pop
sti
idivl
fnstenv
xchg
mov
dec
les
cli
repnz
jecxz
insl
push
cmp
aad
cmpsl
outsl
sbb
or
out
xchg
cmp
sbb
fs
inc
add
das
sub
rcrb
jbe
cmp
movsb
mov
int
or
es
sbb
jns
dec
add
push
add
dec
jnp
sub
lret
jo
daa
repnz
imul
fs
jne,pt
dec
jbe
subl
pop
add
mov
sub
cmp
dec
mov
cmpsb
ror
sti
mov
or
sti
push
outsb
mov
xchg
pop
scas
rorl
test
mov
ja
sbb
inc
movsb
mov
enter
xor
cli
push
insb
adc
mov
or
cld
sbb
lea
adc
push
lahf
or
inc
mov
iret
cmp
out
movsl
mov
in
or
lcall
cld
outsb
cmp
push
mov
cwtl
mov
nop
jno
or
mov
fdivr
push
es
aaa
mov
hlt
dec
shlb
push
push
out
or
ss
mov
adc
xor
pop
push
popw
push
pushf
add
add
fisttpl
mov
ja
call
aas
and
popa
js
pop
jge
cmp
fwait
pop
sub
leave
adc
fiaddl
mov
outsb
hlt
iret
xchg
xor
mov
cwtl
inc
jle
inc
cmpsb
pop
or
test
dec
and
aad
hlt
or
jl
sub
jne
pop
cmpsb
std
sub
stos
push
sbb
pop
or
xchg
clc
in
xchg
lret
xor
aaa
popa
pop
dec
jno
das
mov
sub
incb
push
rorb
add
add
stos
xor
xchg
clc
mov
test
mov
bound
sbb
out
ret
sahf
loope
pop
insl
mov
sbb
into
pop
fcoml
mov
jo
incb
and
mov
jb
scas
lea
jmp
xchg
pop
add
add
push
fwait
pushl
cmpsl
in
and
cmp
or
push
shll
cmp
mov
fnstenv
das
cmpsl
scas
xchg
push
xchg
sahf
jle
jle
ret
negb
jns
repz
push
daa
pop
jnp
add
in
sub
movsb
cli
outsl
sbb
scas
pusha
ret
pushf
and
cmc
cmp
lods
adc
pop
push
xor
adc
shl
mov
or
mov
pop
andl
sub
sar
sbb
jmp
aad
push
lods
push
mov
stc
cmpsl
and
xor
push
dec
jno
jae
test
aam
xchg
pop
pop
mov
mov
xor
mov
xchg
jmp
push
les
das
mov
aad
pop
dec
push
inc
sbb
dec
cmp
icebp
repnz
xchg
scas
ss
test
pop
ss
stos
shrb
shr
sub
jl
loope
add
cmpsb
in
je
cmp
or
cmp
jmp
xchg
out
cltd
ret
stos
fbstp
dec
push
push
daa
mov
outsb
pop
lret
push
mov
pop
leave
aas
push
inc
insb
repz
inc
mov
hlt
aas
push
cs
sub
or
mov
xchg
push
gs
es
xchg
inc
sub
out
hlt
mov
into
dec
inc
or
xor
stos
sub
add
push
fldenv
pusha
xchg
pop
jle
jmp
enter
add
pop
fisubs
lret
lret
das
clc
xchg
pop
fimuls
sub
xchg
dec
xchg
pop
fdivrp
movsl
fimull
dec
arpl
into
and
push
inc
inc
sub
sub
aam
insl
stc
push
cmp
popf
xchg
mov
inc
jb
stc
ljmp
daa
pop
mov
mov
fdivl
fmul
adc
mov
xor
pcmpgtd
pop
or
pop
lcall
mov
aaa
pop
lcall
loope
jl
mov
mov
fbstp
and
sub
insb
xchg
jmp
leave
das
jge
int
pop
xchg
mov
mov
jle
cmp
out
std
push
in
push
sti
sbb
movsb
sub
adc
or
mov
or
gs
into
xor
pop
add
aam
inc
jne
adc
pop
xorl
jge
repnz
mov
mov
or
imul
scas
jbe
mov
mov
pusha
js
pop
ficompl
inc
in
mov
shrl
xor
and
imul
cltd
xor
mov
hlt
scas
mov
jge
mov
cli
pusha
jge
inc
jb
pop
loop
push
enter
jge
sub
and
fwait
and
fwait
jno
cmp
or
push
lret
sbb
clc
jno
clc
cmpsb
mov
sub
cli
sbb
cmp
daa
pop
nop
push
push
add
sarl
inc
adc
mov
mov
test
out
push
insl
mov
leave
add
lahf
fcoml
std
and
push
popf
rcr
dec
hlt
cmp
jne
sbb
mov
pop
test
clc
inc
out
and
push
rorb
jmp
sbb
lods
sarl
sbb
lret
or
jno
xor
popl
sub
push
iret
mov
iret
outsl
or
es
add
scas
and
jg
cmp
sti
push
out
and
std
nop
iret
xchg
testb
xchg
or
push
xlat
push
dec
dec
pop
subb
or
cmp
push
mov
mov
repz
cmp
lret
iret
fdiv
fld
xor
push
popf
add
xorb
loopne
cld
lcall
pop
cmp
xor
jmp
cmp
inc
adc
pusha
xor
or
lea
je
lret
shl
xor
inc
fwait
imul
sbb
and
add
add
jle
mov
clc
adc
idivl
test
add
je
or
dec
rorb
mov
shl
ficoml
mov
xchg
and
mov
add
loop
out
mov
or
push
cwtl
adc
gs
xchg
or
mov
aas
imul
add
inc
fwait
lock
outsb
xchg
icebp
dec
les
sub
jmp
push
pop
xchg
push
sahf
mov
rcrb
pop
sub
or
arpl
clc
dec
fstpt
loopne
push
xor
push
mov
jae
push
adc
mov
cmp
dec
lahf
lock
xchg
add
adc
mov
cmp
scas
lods
insl
jns
cwtl
jecxz
shl
mov
test
push
cmp
xlat
jno
sbbl
pminub
pop
out
push
loopne
sbb
or
dec
and
inc
cmp
fwait
and
pop
fsub
in
jecxz
ret
sbb
xchg
movsb
ljmp
add
push
icebp
dec
movsb
pop
jnp
pop
inc
addr16
insl
les
push
pop
push
xor
pop
mov
fildl
in
fimull
pop
in
movsl
mov
fadds
xchg
add
jp
push
pushf
mov
ret
mov
or
stos
lods
imul
outsl
pop
jge
iret
popa
pop
adc
stc
cs
jns
daa
jne
push
cld
cltd
in
in
mov
jae
xor
add
inc
pop
adc
ljmp
sbb
cld
add
push
mov
pop
notb
jb
movsl
shl
ret
mov
adc
push
mov
jns
andb
rorl
jecxz
xlat
rorl
das
mov
xchg
addl
mov
add
insb
aaa
insb
ret
movsb
mov
insl
ss
hlt
mov
cmp
mov
mov
clc
push
scas
sub
jmp
stc
push
mov
sti
subb
negl
jo
rcrb
adc
bound
xchg
mov
sub
add
outsb
push
dec
jl
inc
mov
sub
test
xor
test
xor
and
cmpsb
mov
pop
imul
and
movsb
pop
dec
push
mov
push
mov
pushf
sbb
jbe
pop
dec
mov
fdivrl
rcrl
addb
fildl
xorb
mov
jmp
pop
loopne
push
lret
rcrb
rcrl
lret
lods
add
fxch
mov
lds
sarl
dec
push
sub
pop
pushf
dec
jg
and
mov
popf
enter
fstps
pop
nop
cmp
lret
jp
test
clc
jo
repnz
scas
push
mov
rcrb
push
outsb
cmp
inc
dec
mov
ret
mov
ja
into
lahf
cmp
push
es
push
pop
jg
das
push
lret
push
and
test
jecxz
dec
mov
push
add
jge
push
mov
push
push
outsb
lds
xor
aad
xchg
js
jo
clc
dec
sti
push
jno
out
push
sub
mov
lds
addl
iret
rcr
sbb
xor
popa
inc
cmp
add
bound
inc
mov
sub
sub
mov
enter
dec
adc
mov
clc
xor
std
adc
scas
ret
das
leave
xorl
mov
cmp
or
movsl
ficoml
pop
pop
xchg
pop
push
std
cmp
xchg
mov
mov
aas
stos
mov
xchg
ret
sbb
and
xchg
mov
iret
jle
mov
dec
shlb
adc
int
adc
fisubl
test
mov
inc
popa
push
push
std
push
sbb
lock
pop
mov
or
das
push
test
std
insb
roll
or
dec
rorl
inc
mov
sti
push
ret
adc
adc
lcall
jae
fimull
fwait
repnz
outsl
xor
sbb
shl
popf
fsubp
add
pop
xchg
outsl
dec
test
fwait
lock
imul
call
rorb
inc
pushf
jbe
enter
sub
cmc
push
mov
pop
jne
sub
mov
mov
add
xorb
jge
bound
ljmp
mov
sbb
pushl
insl
loop
inc
test
das
pusha
push
xchg
in
cmp
jb
in
ret
inc
mov
cmpl
mov
loope,pt
es
fwait
bnd
clc
push
mov
xchg
and
jl
xchg
clc
xchg
movsl
cld
pop
sub
jbe
sbb
cli
xchg
aaa
out
xchg
push
xor
repz
inc
pop
add
out
mov
mov
shrl
mov
jae
cmc
xchg
inc
addr16
sahf
cwtl
mov
fcmovnbe
inc
sbb
movsl
cld
mov
fldenv
sbb
push
push
or
ljmp
cld
cmpl
sub
cmc
movsb
sti
mov
xor
push
pushf
jecxz
cmpsl
das
xor
test
clc
xor
or
lock
add
enter
xlat
pop
fwait
aad
jp
cmpsl
roll
loope
shll
cmp
xchg
and
xor
mov
cmp
cli
jo
cli
dec
add
push
inc
cmp
iret
out
adcb
addr16
in
xchg
arpl
sbb
inc
and
sbb
mov
int
dec
inc
dec
test
xchg
out
mov
mov
lods
inc
addr16
and
dec
pop
fs
xor
jl
or
cmp
or
adc
push
xchg
hlt
or
lods
lcall
jecxz
rcll
aad
jle
pop
dec
sti
in
dec
sub
xor
addr16
fldl
mov
jmp
sub
xchg
dec
test
fsubs
mov
jl
mov
add
pop
push
jmp
dec
xor
lret
add
les
xchg
pop
sti
in
adc
fcoms
test
jnp
xor
mov
xor
xor
jecxz
inc
mov
and
inc
in
xchg
loop
or
aad
rcrl
mov
sub
mov
bound
jae
push
stc
fwait
dec
test
cmp
and
push
sbb
sbb
insl
cwtl
xor
je
cltd
jecxz
push
ficomps
mov
xchg
cmp
inc
jmp
roll
and
push
cmpsb
je
or
dec
add
leave
jg
mov
ret
and
pop
dec
sbbl
mov
jp
test
sub
nop
es
xchg
iret
push
jp
hlt
xchg
out
std
stos
ficoml
pop
les
ja
rclb
stos
clc
mov
adc
or
sbb
push
inc
negb
add
jnp
aaa
popa
scas
push
xchg
fdivrs
xor
cmpsl
in
xchg
movl
jmp
movsb
rcrb
sbb
cmp
sbb
cltd
rolb
push
imul
inc
ss
cmpsl
xor
cld
push
sub
and
bound
cs
sbb
movsl
sub
jbe
iret
es
test
pop
nop
or
and
decb
pop
mov
out
sub
mov
dec
mov
mov
imul
int
jecxz
scas
mov
inc
int
hlt
cmpsl
cltd
sbb
pop
or
inc
jg
sub
push
push
idivl
sub
fcoml
in
dec
insl
hlt
xor
jne
push
imul
lahf
jno
mov
cmp
and
add
imul
fisubrs
adc
inc
or
xchg
ljmp
or
insl
sbb
daa
iret
sti
repz
dec
mov
dec
xchg
mov
sar
mulb
ds
mov
add
mov
mov
gs
jae
inc
mov
clc
cltd
mov
jg
loope
pop
add
ljmp
popf
loope
out
gs
or
mov
into
adc
test
xor
add
cmp
mov
bound
mov
ja
mov
pop
fucomi
xor
mov
mov
mov
jg
push
stos
std
push
cmpsl
sub
in
inc
push
out
adc
outsl
xchg
jmp
cli
test
sti
and
or
lret
rcl
stc
mov
inc
sahf
nop
mov
inc
ljmp
push
repz
ret
out
stos
sbb
pop
in
mov
cli
push
cltd
lock
or
cmpb
setbe
in
or
mov
xchg
cmpsl
sub
sbb
jbe
jne
push
stos
push
push
pop
loop
in
js
dec
scas
lock
sti
push
mov
insb
xor
bound
cs
jmp
inc
adc
adc
nop
lcall
data16
inc
lods
adc
test
cmp
sub
and
push
fwait
loop
xchg
mov
xchg
fstpt
sub
fsts
pop
shl
cmc
inc
lret
nop
fstl
xor
and
and
mov
ds
jns
mov
fcmovbe
leave
arpl
mov
dec
adc
ja
in
fbstp
mov
jo
out
cmpsl
sub
xor
xor
jns
je
daa
jne
jl
mov
cmp
adc
mov
cmc
scas
mov
mov
jno
mov
daa
inc
jne
sarl
fwait
pop
cmp
aad
jle,pn
lcall
inc
xchg
pop
sahf
lret
sbb
cld
xor
js
jmp
scas
jg
push
into
sbb
sbb
xchg
or
cmp
pop
xchg
fmuls
mov
inc
xchg
enter
adc
pusha
loope
mov
xor
or
mov
rorl
jl
pop
scas
or
fisubrs
fstp
xchg
pop
lcall
pop
cmp
std
test
cs
lea
out
mov
mov
and
cmp
jbe
test
dec
jmp
xlat
cli
mov
pop
push
cmp
loope
out
int
mov
xchg
cmp
pop
cld
xlat
js
repnz
sbb
in
mov
xor
xor
xchg
subl
test
out
mov
cmp
push
sub
stc
pushf
cmp
cwtl
xlat
xchg
or
push
xchg
cltd
scas
mov
je
and
popf
hlt
and
lock
es
adc
cmp
pop
add
jmp
xchg
mov
push
stos
jl
pop
xlat
lret
pop
test
dec
test
ds
les
pop
xlat
jecxz
xor
push
repz
lahf
test
in
xchg
roll
mov
gs
xchg
inc
lcall
dec
mov
loop
mov
cli
test
jbe
out
gs
ljmp
xor
push
mov
movsl
mov
es
sar
in
popa
jmp
inc
sahf
mov
or
mov
xchg
test
mov
sbb
sub
push
mov
lret
dec
insl
pop
cs
lea
incl
je
stos
loope
sub
lock
or
pop
xchg
sbb
add
popa
dec
dec
leave
int
lret
jge
inc
pop
pop
pop
mov
imulb
subl
cmp
lods
dec
aas
outsl
movsb
ret
jge
mov
aad
scas
jae
insl
aam
fisubrl
js
push
cmp
cwtl
pop
push
or
gs
mov
cmp
cmp
pop
jg
mov
test
aas
std
lcall
stos
mov
add
dec
cs
xchg
aas
cmp
nop
push
jns
xor
xor
fcomp
jl
fimull
rorl
cs
mov
loop
pop
test
xchg
or
inc
add
enter
jo
loopne
mov
pop
dec
pop
movsb
ret
or
js
pop
jae
stc
arpl
dec
or
add
mov
pop
inc
mov
sbb
je
and
push
ret
or
fists
mov
push
inc
mov
mov
dec
cld
cmpsl
rol
or
popa
mov
xchg
rcrb
add
fldenv
stos
pushf
or
fwait
inc
lret
dec
popf
jecxz
jbe
das
xchg
pushf
repz
cmp
stos
into
push
mov
jno
leave
push
fistpl
je
call
into
mov
mov
xor
scas
jne
inc
xchg
cmp
loopne
dec
dec
sbb
aas
cmp
mov
cmp
add
add
xchg
call
std
xor
cli
push
cli
aam
cld
cli
les
adc
mov
cmpsb
push
jmp
xor
push
rolb
pop
outsb
jge
inc
mov
inc
jb
cld
loope
hlt
sahf
and
sub
test
dec
cmpl
data16
iret
jge
adc
cmp
inc
or
jg
shl
aaa
or
dec
fnstenv
sub
cltd
lock
movsl
gs
adc
mov
xchg
cli
push
push
cmp
popa
mov
mov
aas
push
ret
ss
jmp
or
loope
ret
dec
cmpsb
dec
cltd
dec
lahf
out
aad
mov
and
cmpsl
sub
jns
repz
stc
jae
testl
imul
cld
xor
aam
lea
js
rclb
fistpl
call
jg
sbb
outsb
lcall
inc
nop
pop
push
lahf
add
jae
int
pop
jecxz
shr
mov
xchg
leave
js
out
jg
rclb
pop
shr
lock
mov
mov
xor
loop
rcrl
into
rolb
pop
insl
stos
and
sub
mov
fistl
repz
lret
sub
out
xchg
out
xorb
scas
test
sbb
sbb
add
mov
sub
in
cmp
push
or
cmp
xchg
inc
sub
loop
or
push
cmpxchg
push
out
push
bound
insb
sahf
test
lock
outsb
mov
pop
adc
out
movsl
shl
dec
pop
cld
mov
repnz
imul
push
cs
lods
or
leave
adc
xor
jg
cmpsl
sbb
xlat
andb
imul
sub
shl
jnp
xor
xchg
les
xchg
xchg
sbb
cmp
dec
popf
cwtl
adc
roll
cmc
rolb
jg
mov
mov
jle
fs
cmpsb
sub
mov
repz
out
xchg
lret
jne
in
icebp
push
adc
push
sub
sub
ss
stos
clc
dec
push
adcl
adc
mov
fdivs
and
inc
fisttpll
push
mov
xchg
cmp
jo
enter
push
fstpl
push
lds
mov
je
cmc
mov
fidivs
push
cld
cmpl
sahf
loopne
enter
int3
xchg
sarl
dec
push
leave
sbb
xchg
ljmp
out
xor
ret
sbb
movsb
mov
or
pop
or
inc
mov
ss
or
mov
pusha
inc
sub
in
jbe
inc
push
pushf
mov
inc
xchg
mov
push
aad
jae
pop
xchg
mov
sub
xchg
imulb
xor
shll
pusha
dec
mov
enter
push
out
mov
nop
sbb
lret
stc
push
lods
lahf
rorl
lds
bound
cmp
jae
imul
xchg
or
inc
test
iret
mov
out
jne
cmp
les
ret
xor
push
scas
jns
or
mov
or
push
inc
idivl
add
jge
jo
test
xor
mov
arpl
and
xchg
adc
or
add
adc
xchg
or
jno
test
divb
mov
cmp
in
add
cld
sub
sti
pop
jae
int3
je
idivl
pop
lret
adc
mov
xchg
xor
fisubrs
xchg
rcrb
pop
jno
mov
and
aaa
bound
add
icebp
sub
add
pop
aad
ljmp
shll
sbb
or
xchg
sbb
jo
mov
push
pop
push
stos
pop
mov
jae
push
mov
lahf
mulb
or
dec
fdivs
xchg
cmp
fisubrs
setbe
ret
sti
cmp
mov
xorl
fs
les
jno
pop
jmp
and
fistps
out
xor
ss
push
push
dec
jno
ja
inc
xchg
pop
dec
movsl
cld
mov
sahf
cmc
test
sub
and
xchg
fnstsw
xchg
fs
mov
dec
cmp
push
stos
movb
mov
mov
loope
mov
cltd
mov
pop
mov
xchg
sub
inc
popf
loope
xor
mov
out
cmc
and
mov
outsl
mov
adc
sub
addr16
push
call
lods
mov
lds
xor
jo
stos
pop
test
mov
insb
in
lret
sbb
pop
int
arpl
adc
mov
and
rorl
mov
pop
in
push
fildl
push
addr16
orl
push
pop
add
cs
aaa
fcomps
sbb
lock
ffreep
push
xor
test
mov
inc
addr16
sub
pop
or
pop
cld
scas
adc
enter
jp
les
jle
fiaddl
out
into
pop
sbbb
lds
repz
aas
arpl
bound
cmpsl
mull
daa
dec
test
mov
mov
fdivr
sub
push
dec
push
mov
cmpl
ret
push
data16
xchg
lret
mov
push
int
int
jne
out
imul
dec
or
fdivs
in
je
adc
cltd
add
inc
lock
sahf
fistl
mov
loope
lret
mov
xor
adc
mov
sbb
sahf
fcoms
pop
lret
adc
and
and
loop
pop
imul
scas
es
test
test
or
dec
scas
cld
movsb
rolb
mov
int3
add
stc
subb
push
movsl
addl
push
scas
xor
adc
mov
sbb
jbe
xor
and
fbstp
sbb
js
movsl
jae
sub
in
add
or
push
sbb
in
pop
xor
cmp
fstpl
inc
lock
mov
xchg
repnz
call
dec
js
addr16
sti
lret
xchg
xchg
rcrl
jp
jo
sub
repnz
mov
mov
xchg
inc
adc
mov
popf
xchg
fistps
mov
mov
insb
int3
push
int
xchg
fnstsw
xchg
insb
loop
fs
lock
fldcw
outsb
xchg
sbb
ljmp
daa
popa
aad
sahf
and
inc
cld
push
add
fdivrs
or
inc
pushf
jae
fdivrl
mov
into
shll
addr16
dec
cmpsb
aad
cmp
popf
push
inc
xor
jmp
xchg
push
shrb
ljmp
lock
cmp
cmp
mov
xor
inc
jae
rcr
sti
push
fisttps
aam
outsl
xchg
jmp
cmpsl
sub
out
or
out
xchg
adc
sbb
nop
out
and
cli
push
loop
push
mov
pop
pop
mov
cltd
sahf
mov
dec
loopne
sahf
in
jb
add
add
sub
mov
sbb
in
addr16
int3
add
cmp
ljmp
lcall
dec
xchg
xor
cwtl
out
cmp
aad
lds
in
and
mov
shrl
out
movsl
jb
ja
cmp
rcrl
adc
cmp
cwtl
lahf
adc
shll
pop
pop
mov
jp
hlt
cmp
push
adc
sbb
fsts
bswap
inc
lcall
jge
sbb
insl
adc
pop
fmuls
pop
leave
inc
inc
imul
mov
std
test
jl
popf
and
lods
das
jnp
lcall
and
jp
inc
jg
sub
push
jp
mov
push
jb
pop
adc
inc
call
cmpsb
and
inc
shl
in
push
cmpsb
push
inc
pop
mov
jne
data16
mov
and
rolb
push
fmull
addr16
jnp
aam
inc
popl
aaa
loop
pop
add
adcl
mov
outsb
sbb
push
xchg
inc
enter
ficoms
inc
cld
stos
pop
pop
push
add
mov
int
mov
test
dec
movsl
fsubs
dec
jg
mov
mov
push
mov
add
pop
movb
sbb
imul
ss
out
out
adc
lea
rolb
out
adcl
pusha
xchg
sti
clc
adc
xchg
push
push
stos
push
dec
ss
js
ficompl
js
sahf
pop
adcb
jbe
mov
pusha
out
in
dec
sbb
and
inc
mov
inc
xor
or
orl
fs
mov
jp
and
mov
sbb
sub
out
xor
test
iret
jecxz
mov
clc
aam
stos
out
nop
ficomps
push
enter
pop
outsl
add
clc
push
jno
mov
cltd
lock
dec
sti
stos
movzwl
pop
daa
mov
decl
jb
sub
dec
jno
das
xchg
push
pusha
mov
shl
cwtl
inc
imul
test
das
rorb
ret
jae
shrl
xchg
call
jb
js
out
or
add
pop
dec
xchg
pop
mov
jg
fimuls
dec
rorb
inc
mov
push
cwtl
xchg
fidivrs
mov
xchg
test
cmpsl
jnp
pop
pop
cmp
mov
ds
shlb
ja
add
cmpsl
rorb
xchg
or
addr16
ljmp
cmpl
pop
iret
mov
inc
aad
sbb
icebp
push
xor
movsl
das
mov
jne
adc
dec
jg
out
sub
sub
sub
adc
jecxz
mov
xchg
stos
test
out
les
mov
rcll
pop
mov
das
jecxz
test
xchg
dec
popf
test
sub
push
push
sub
movsl
xchg
xchg
adc
repz
add
pop
ss
cmp
movsl
std
jo
jmp
dec
std
lods
or
cmc
mov
out
xchg
adc
jne
leave
push
mov
lock
and
add
mull
cmpsb
adc
test
sbb
xchg
gs
xchg
iret
mov
xor
dec
test
xor
sbb
inc
jne
cmp
cmp
movb
mov
adc
sti
lods
add
addr16
sti
and
jae
mov
cwtl
sti
lahf
inc
jl
push
mov
sbb
addr16
sti
xchg
cmp
push
pushf
and
add
and
xor
sti
add
in
pop
fisubs
sub
inc
lret
iret
or
inc
call
or
xchg
fiadds
int
jbe
add
stc
ss
sbb
mov
adc
or
add
sub
xchg
pop
push
mov
push
mov
mov
shl
push
mov
neg
shr
xor
add
xor
pop
push
mov
addl
pop
push
mov
addl
popl
subl
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
hlt
subl
xchg
mov
add
jmp
in
mov
and
cld
jno
test
push
sub
sbb
add
cmp
or
add
add
xor
add
mov
inc
out
ljmp
test
or
inc
inc
out
ljmp
mov
or
cmp
ljmp
les
out
ljmp
shlb
out
ljmp
in
or
sbb
out
ljmp
hlt
mov
jmp
push
jmp
ret
dec
test
sbb
je
jecxz
pop
aam
out
jle
insb
adc
mov
fdivr
push
fnstcw
loop
add
mov
nop
xor
push
mov
adc
lea
push
rcrb
xchg
push
cmc
and
test
push
cmp
stos
or
andl
add
jle
into
aas
outsb
push
add
jnp
addr16
bound
orl
in
sahf
stc
xor
das
fistpll
lahf
je
push
mov
add
faddl
pop
pushf
adc
sbbb
fsubl
shrl
dec
xchg
push
fiaddl
and
sub
dec
sbb
out
in
cld
xchg
add
shll
xor
pop
int
mov
rolb
pop
fs
push
cmpsb
pop
loop
cmp
stos
cmp
add
mov
enter
sbb
cmp
jnp
jnp
lcall
jg
add
sbb
in
ret
dec
add
jmp
scas
scas
push
add
popa
dec
inc
scas
pop
dec
gs
arpl
inc
jecxz
out
stc
ror
add
and
addr16
add
fcomi
and
ljmp
rolb
cmovg
sub
lods
shll
popf
or
ja
adc
adc
adc
xor
mov
out
fsubr
add
mov
cwtl
xor
mov
push
pop
or
fwait
stc
pop
mov
jmp
shlb
lret
jnp
mov
mov
mov
jne
ds
xor
or
shll
xchg
dec
scas
add
mov
idivl
sbb
cmp
jecxz
out
es
inc
scas
in
pop
adcl
ret
aam
dec
std
outsb
in
xchg
les
stos
cmp
pop
rol
push
cltd
hlt
cmp
incb
and
jne
test
sbb
ljmp
hlt
jge
fldcw
sub
out
jbe,pt
sub
lcall
cmc
push
fstpt
mov
xchg
inc
or
dec
mov
arpl
dec
mov
mov
xor
daa
xchg
sbb
sub
sbb
xor
fwait
xchg
add
lahf
rorw
mov
xorb
adc
and
in
xor
in
mov
jmp
pop
mov
xor
push
adc
insb
mov
add
or
test
fcmovbe
or
rcrl
rcrb
xchg
push
fdivrs
mov
pop
jmp
shll
int
jns
or
sub
aaa
cs
hlt
addr16
scas
mov
mov
push
cmc
pop
mov
in
xor
cmp
ja
inc
andl
imul
jbe
xorb
cwtl
lahf
jg
sbb
sub
push
cltd
imul
in
inc
inc
insb
or
pop
pusha
xlat
dec
or
mov
lret
jnp
imul
and
pop
sub
jns
jge
push
shrb
mov
iret
idivb
fildl
jae
add
insl
adc
out
adc
pop
repz
cmpsl
cmp
lods
sarb
aam
stc
xor
jnp
ret
dec
xchg
inc
cld
mov
sbb
mov
cltd
cld
jb,pt
dec
outsb
in
xchg
sbb
cld
add
scas
sub
movsl
push
je
jg
movsb
int
lret
jae
push
ret
lcall
push
dec
or
xchg
sub
aas
mov
cmp
sbb
inc
mov
out
pop
gs
es
dec
xchg
cmc
mov
mov
stos
arpl
add
aaa
mov
dec
movsl
call
pop
mov
or
add
stc
cltd
add
pop
movsb
inc
movzwl
cmc
xchg
inc
ds
cli
xor
cmp
mov
jno
inc
testb
pop
ret
fidivs
popf
cmc
push
xor
flds
xchg
lock
ljmp
sub
mov
rol
cltd
cmp
dec
shll
in
dec
mov
mov
negl
xchg
inc
mov
pop
pop
sub
xor
dec
fistpl
fildll
imul
sub
negl
push
push
mov
ror
cmp
or
pop
jmp
loope
orl
jp
faddl
cmp
and
addr16
clc
pop
sub
enter
mov
repz
fistpll
subb
mov
or
fisubs
mov
scas
dec
mov
xor
scas
adc
cs
sar
bound
mov
jge
push
sbbl
fs
fstps
pop
out
cmp
mov
std
mov
add
loopne
jg
mov
add
push
add
repnz
inc
mov
add
dec
cmpsl
adc
inc
rcrb
test
dec
fnstsw
repnz
fwait
std
pop
insb
sub
test
fsts
pop
sarl
push
xchg
test
adc
or
push
imul
dec
insb
popa
sub
xchg
add
pushf
inc
add
push
xorl
in
mov
imul
imul
clc
jbe
dec
sbb
push
jl
pop
adc
and
jmp
fmull
sub
insl
push
adc
shll
pushl
cs
or
xchg
iret
dec
popf
daa
insb
pop
pop
cmpsb
in
es
mov
cmp
scas
adc
adc
and
repnz
jno
sub
mov
mov
inc
xor
push
xlat
clc
divl
cmp
dec
sub
pushf
sub
out
fs
adc
aaa
jae
jge
out
fadds
jnp
push
sub
cmp
arpl
into
fs
inc
inc
loope
xchg
sbb
or
cmp
and
dec
repnz
push
or
pusha
add
push
xchg
std
mov
inc
into
jmp
addr16
inc
mov
mull
xor
jecxz
xor
mov
pushf
repnz
mov
shll
dec
call
inc
jae
cmc
jmp
mov
fistps
or
das
mov
insb
mov
enter
xor
mov
fs
das
movsl
icebp
mov
mov
aad
lods
shrb
and
jne
out
jmp
bound
mov
in
xchg
xor
push
dec
mov
and
cld
mov
lock
cmp
mov
scas
and
cs
testl
cmp
popf
xor
mov
adc
lods
add
movsl
rorl
sti
orl
jne
mov
add
and
ret
add
je
mov
inc
mov
shll
xor
sub
xchg
xor
lret
and
popf
cmp
and
out
adc
sti
mov
pop
or
in
lock
dec
adc
enter
mov
pop
in
dec
ljmp
jnp
jne
clc
mov
sti
clc
pop
and
shr
mov
mov
jl
cwtl
ljmp
inc
lahf
sbb
icebp
xor
xor
jg
push
or
cmp
int
mov
push
xchg
xchg
or
sbb
pop
jnp
dec
mov
fs
jae
sbb
cmp
jns
cmpsl
adc
sub
outsb
jge
repz
roll
adc
and
insl
fwait
popf
movl
mov
sbb
icebp
mov
subl
or
xor
pop
jecxz
dec
cltd
jno
and
nop
rcr
inc
mov
test
mov
mov
sub
and
or
imul
push
pusha
pop
jne
in
adc
jmp
jne
dec
mov
or
rol
test
or
and
jo
daa
arpl
fiaddl
dec
in
push
stos
out
popf
iret
push
bnd
adc
xor
inc
lods
cmp
push
lcall
push
test
cmp
mov
inc
jns
pop
or
dec
out
sub
fwait
adc
xchg
popf
mov
fsubrl
jle
and
push
lds
fidivl
pop
mov
add
add
fs
xlat
xor
pushf
sub
test
push
outsb
push
imul
sub
xor
dec
add
sub
inc
orl
loopne
pop
push
lret
xor
or
lret
inc
jl
popa
fdivr
jo
jp
sbbl
int3
scas
push
jp
jne
fistpll
xor
and
pop
inc
scas
cmp
sbbb
ret
sbb
loop
xchg
out
xchg
mov
inc
mulb
sarl
les
es
jle
mov
outsl
jmp
stos
mov
test
lds
testb
ret
and
or
into
cmp
jae
mov
xor
daa
int3
rcll
cwtl
cmp
es
dec
das
stc
xchg
addr16
mov
push
lods
arpl
mov
add
inc
hlt
icebp
repnz
xchg
mov
pushw
into
xchg
cmpb
or
inc
mov
sbb
inc
mov
push
jno
mov
iret
js
sub
mov
pop
ret
arpl
xlat
jne
mov
cli
or
pop
xor
lcall
fs
mov
fcoml
add
insb
lret
pop
adc
shrl
and
mov
inc
icebp
push
fsubr
repz
push
sub
test
clc
jo
outsb
cmp
inc
jb
push
mov
mov
mov
inc
dec
lea
add
push
add
int3
inc
icebp
mov
sub
and
jb
insb
cmpsl
insl
out
cwtl
dec
cmp
mov
jne
mov
jmp
fsubrp
cmc
push
lahf
inc
bound
add
xor
insb
cmpsl
fprem1
push
fnstcw
mov
fdivrp
push
fnstcw
mov
in
xor
jbe
jmp
and
aaa
lds
pusha
add
inc
cmpsb
jns
and
add
or
add
popl
insl
cmp
push
cmp
mov
mov
lcall
xorb
enter
pushf
dec
fdivrs
aas
pop
fildll
shr
pop
jmp
xchg
in
add
dec
iret
cmp
fs
jge
and
xchg
aaa
xlat
xchg
mov
ret
repz
lret
nop
cld
lods
cmpsb
rcr
int
xchg
dec
ret
mov
jle
imul
lock
push
xchg
mov
es
cmc
and
jge
sbb
push
into
imul
int
repnz
popf
lods
mov
jns
ss
sub
clc
pop
xchg
psubsb
xchg
subl
push
sub
jno
addr16
lret
cli
sbb
mov
xor
inc
and
push
add
rcrb
xchg
push
fisubs
add
and
popa
push
repz
pusha
sbbb
push
pop
and
xor
cmp
clc
arpl
xchg
xor
add
lods
pop
adc
add
cmp
xor
xor
in
mov
sahf
inc
rcr
sbb
mov
rdtsc
stos
xor
sub
and
fisttpll
into
sub
xchg
add
pop
nop
add
hlt
fildl
popf
out
sub
jnp
stc
cmpsl
sarl
sbb
push
fmuls
fisubl
xor
movsl
insb
adc
xor
sbb
outsl
std
lods
mov
repz
xorb
fwait
into
jae
insl
sbb
mov
push
mov
inc
mov
mov
xchg
scas
xchg
in
xchg
insb
pop
iret
inc
in
scas
xchg
mov
add
ficoms
lds
repz
jns
es
mov
enter
imul
lock
or
shll
xchg
adc
push
into
pop
shll
shll
in
add
inc
loope
add
in
sarb
stos
dec
out
xorb
arpl
mov
push
xchg
add
push
xchg
std
mov
cmpsl
cmp
shrb
mov
rcll
push
mov
mov
enter
jb
mov
std
mov
mov
dec
ljmp
lods
xor
int
pop
into
cmp
push
mov
arpl
imul
shrb
lahf
or
arpl
push
jo
pop
pushf
xchg
lock
sbbl
sbb
cwtl
mov
sbb
xchg
movb
or
inc
leave
scas
cmp
and
jle
inc
jns
add
and
cmp
add
fnstenv
sahf
cld
push
dec
outsl
stc
gs
pusha
adc
mov
xchg
or
cmp
cmp
gs
arpl
pop
rol
and
xor
cmc
pop
xchg
repz
out
es
out
iret
mov
and
pop
rol
pop
adc
cmc
movsl
loopne
dec
mov
push
lret
xlat
es
ja
fistps
push
cwtl
dec
xlat
lods
mov
aam
cmc
cli
repnz
outsl
insl
jge
push
jo
pop
sbb
mov
je
dec
jecxz
xor
sahf
repz
sbb
or
fiadds
dec
shlb
lods
inc
sbb
fnstenv
and
fwait
insl
cmp
mov
mov
ljmp
and
xchg
xchg
xor
ss
or
sub
pop
mov
fstpl
subl
int
lea
mov
or
xor
jp
in
hlt
loopne
int3
insb
adc
xchg
out
or
scas
adc
inc
jmp
jb
xchg
dec
mov
fstl
imulb
out
adc
pusha
adc
mov
inc
sub
push
jb
xchg
mov
inc
movsl
inc
int3
dec
sti
inc
sbb
and
add
xchg
std
mov
push
add
adc
popf
adc
mov
addr16
shrb
lcall
jns
mov
or
sbb
xor
jb
loop
cld
xchg
out
and
test
xchg
in
and
pop
addr16
lods
push
nop
loope
fidivrl
mov
test
test
dec
cli
mov
divl
pop
lea
fimull
stos
scas
mov
mov
xor
cmp
mov
pop
call
stos
bound
imul
dec
dec
in
popf
push
and
mov
mov
and
sub
adc
insb
mov
sub
add
add
out
arpl
mov
add
xchg
imul
xchg
add
enter
adc
cmpsl
fnstenv
mov
sahf
lret
lret
arpl
filds
mov
mov
test
and
or
dec
mov
aad
daa
pushf
out
xchg
cld
jmp
sarb
inc
lock
mov
int
cmpl
lea
enter
das
stc
xchg
jno
adc
mov
mov
inc
cmp
ret
and
inc
pop
mov
mov
xchg
add
cmp
int
sub
push
xchg
test
jo
lea
and
cmp
and
cwtl
hlt
adc
xchg
je
mull
xchg
inc
and
push
inc
lcall
jns
shr
lahf
fists
sti
push
jae
and
xchg
xchg
nop
add
xchg
jbe
imul
xchg
test
lods
ret
ljmp
pop
loopne
movsl
cmp
mov
xchg
les
mov
cmpsl
dec
ret
inc
icebp
int
out
es
lods
sub
aad
fcomi
xor
inc
jmp
mov
xorl
nop
adc
inc
rcll
jge
rcl
shlb
rcrb
cmc
popa
adc
das
jo
ljmp
jnp
lret
cmp
rorl
js
jb
mov
add
daa
fwait
cmp
jns
in
mov
and
and
fdivrl
cmpb
mov
xchg
push
add
inc
repnz
add
insb
or
sub
imul
jns
sub
xor
pop
mov
sahf
or
add
mov
aad
mov
mov
cli
and
ss
mov
dec
out
mov
scas
pop
ficompl
jmp
mov
rcrb
push
fidivrs
cmpsb
jge
jle
hlt
push
test
mov
fimuls
inc
in
mov
mov
cmp
jg
push
leave
jne
sub
out
mov
cld
mov
rorl
push
push
dec
ret
xor
fimull
jne
push
ss
mov
adc
sbb
mov
movsb
mov
mov
or
nop
ret
ljmp
jnp
push
or
mov
into
cmpsl
out
dec
test
adc
and
in
and
pop
inc
and
nop
loope
shlb
rcll
cwtl
repz
fstps
inc
int3
jmp
xchg
out
bound
sbbl
pop
inc
pop
add
mov
and
orb
out
dec
les
pushf
add
jns
jmp
bound
scas
lret
adc
adc
leave
lret
das
dec
sbb
sarl
sbb
les
mov
xorl
mov
pop
add
xchg
mov
xchg
icebp
cmp
mov
mov
push
jbe
aaa
mov
add
xor
shrl
fwait
loopne
fidivl
and
mov
or
rorb
jo
jmp
pop
add
aaa
inc
fldpi
jae
inc
inc
dec
pop
push
addr16
mov
push
enter
mov
mov
bound
mov
xchg
dec
lds
outsl
mov
fistpll
iret
inc
sarl
push
jb
nop
out
pop
call
add
adc
aam
sahf
sub
sbb
mov
pusha
push
mov
pop
aam
jp
xor
push
dec
fadds
outsl
enter
cmp
or
je
cld
cmp
inc
mov
xchg
adc
int
iret
stc
adc
insl
sbb
mov
ficoml
mov
mov
lahf
dec
push
inc
popa
testb
lahf
imulb
or
test
ljmp
pop
outsb
pusha
pusha
jae
clc
nop
push
pop
popf
outsb
loopne
push
negl
jge
and
out
pop
roll
and
sub
lds
fbld
mov
and
adc
mov
lods
xor
in
mul
stos
cmpsl
loopne
arpl
fsts
mov
cwtl
fistpll
fldt
pop
push
dec
lods
jo
mov
lret
clc
xor
push
daa
arpl
es
addr16
jno
sbb
loop
xlat
or
shlb
inc
cmp
pop
loope
pusha
sub
sub
stos
iret
inc
hlt
jbe
or
pushf
cmpsb
pop
add
shll
sbb
adc
cmp
jmp
rcrb
mov
leave
pop
cmp
lret
push
lcall
or
dec
and
nop
out
pop
xor
jb
xchg
lods
lea
pop
sti
fwait
dec
mov
clc
test
lods
lea
sbb
dec
mov
jnp
out
mov
dec
sbb
jb
mov
cmp
fwait
lods
clc
test
mov
rcrl
and
adc
xlat
mov
lds
cs
jp
das
sub
filds
test
shlb
int3
addl
or
adc
andl
ret
adc
push
jne
pop
loop
rcrl
outsl
xor
adc
lods
dec
test
push
je
outsb
mov
scas
data16
cmp
data16
dec
call
xor
subb
cs
jne
ljmp
loope
negb
adc
jecxz
jae
je
nop
cld
mov
loopne,pn
hlt
mov
repnz
inc
mov
lahf
je
out
jge
into
int
loope
and
sbb
in
add
mov
lods
std
outsl
cmp
add
push
lahf
sbb
insb
shlb
hlt
push
add
mov
out
int3
pop
ds
leave
jo
xchg
add
xchg
sti
mov
mov
pop
pop
xor
fs
popa
sbb
loope
repnz
aad
mov
jp
iret
jbe
aad
push
add
test
jmp
lods
inc
negl
aam
sbb
test
mov
rolb
or
lret
ss
mov
fs
sub
jb
and
ljmp
mov
cli
out
xchg
push
cmpsb
sbb
push
lds
cmp
pop
jmp
movsl
push
mov
mov
cmpsl
push
lea
mov
jae
push
or
decl
adc
inc
idivl
cmp
sub
xchg
test
mov
adcl
jne
lods
ret
jae
out
fisubs
out
xor
inc
adc
pop
jle
lcall
rol
push
in
lods
dec
cld
insl
pmuludq
ds
cli
sbb
jecxz
lods
cmp
cmp
js
jmp
loope
push
mov
into
and
dec
sub
imul
clc
stc
push
les
mov
dec
xchg
add
pop
xor
popa
mov
dec
lock
and
inc
lods
mov
je
cmp
jmp
into
inc
ss
add
mov
xchg
mov
lods
pop
inc
xor
movsb
push
scas
sbb
jg
mov
aam
cmc
mov
and
xor
and
mov
inc
jge
into
cltd
xor
std
imul
mov
hlt
xchg
sbb
outsl
movsb
dec
mov
sub
inc
xchg
mov
add
lret
rcrb
test
dec
out
lahf
adc
push
add
dec
ficompl
adc
sbb
pop
and
add
lcall
addr16
push
xor
pop
enter
cmp
mov
push
jl
or
jno
xor
in
jmp
pop
les
fcoms
pop
add
rclb
jp
sub
data16
repnz
ja
sahf
cltd
xchg
and
ljmp
and
sbb
mov
jecxz
jecxz
push
cmp
ret
ja
cwtl
inc
int
push
stc
xor
loop
nop
les
jb
and
pop
imull
adc
inc
testl
lods
pop
push
add
and
test
repnz
adc
mull
in
test
adc
movsb
adc
orl
cwtl
dec
mov
loop
cli
jns
lock
movsl
xor
in
jne
xor
inc
xchg
pop
jno
mov
je
mov
dec
pop
mov
push
lock
mov
hlt
imull
sti
push
fsubrs
jnp
or
dec
mov
cmp
mov
out
add
std
inc
scas
or
dec
cmpsl
outsl
adc
xor
mov
add
lods
mov
mov
pop
mov
fcoms
inc
dec
mov
xchg
xlat
mov
xchg
aaa
jne
into
into
jnp
or
jnp
rclb
cmpsl
add
pop
enter
mov
sarl
dec
pop
pop
adc
into
pop
xorl
push
cld
data16
and
enter
mov
add
lds
jle
out
ret
aam
sbb
jg
dec
xlat
push
hlt
inc
and
movsl
cmp
add
shlb
add
mov
xor
xchg
mov
push
js
mov
repnz
adc
jle
dec
mov
rcrb
test
add
adcb
mov
mov
bound
pop
mov
mov
jno
aad
sub
pop
jecxz
sti
push
xchg
inc
call
push
ljmp
ffree
push
icebp
pop
into
mov
jno
psraw
aaa
stos
adc
mov
push
pop
inc
and
inc
leave
scas
cmp
les
repnz
aad
pop
cmp
sbb
repz
test
sub
push
loopne
jge
es
ret
jbe
mov
jge
push
dec
cmpsb
adc
ret
pop
push
clc
xlat
cs
push
dec
pushl
cmpsb
xchg
inc
lods
pop
and
xlat
loop
push
xchg
inc
and
lret
pop
rclb
sub
jge
int
pusha
push
in
push
jb
std
adc
adc
push
dec
dec
roll
int3
mov
rorb
jge
mov
out
jb
cmp
xchg
stos
dec
test
pop
icebp
push
ret
cltd
inc
inc
add
ss
jbe
dec
mov
mov
pop
js
imul
test
clc
rol
fistpll
mov
jmp
fidivrs
mov
les
fadd
out
cltd
aas
outsl
insb
jae
les
xchg
scas
imul
shrl
pop
dec
push
xchg
add
dec
cmc
mov
notrack
nop
xchg
out
cwtl
push
mov
or
and
inc
mov
lock
sub
xchg
repnz
in
pushf
jae
or
xchg
xor
adc
push
dec
dec
xchg
fisubs
jno
enter
stos
xchg
or
inc
adc
ja
jbe
daa
dec
out
xchg
push
mov
mov
jle
into
aas
mov
or
pusha
inc
ret
inc
shl
adc
imul
dec
orb
push
add
ljmp
pop
stc
or
cmp
and
test
pop
xor
cmp
jnp
cmp
sub
mov
cld
pushf
push
clc
shr
das
imul
ja
mov
inc
stos
pop
dec
scas
cmp
addr16
mov
in
or
outsb
cld
lods
push
pop
inc
rcrb
cmp
test
fnstsw
gs
pushf
lods
or
dec
cmp
scas
outsl
and
cmpsb
push
mov
mov
test
jp
pop
jg
inc
jmp
add
pop
or
es
rcll
sbb
ss
add
dec
or
filds
xchg
dec
scas
adc
lret
mov
arpl
pop
or
cmpl
inc
loope
int3
loope
push
mov
fnsave
rorb
sbbb
lock
jp
xor
cmp
mov
aas
sbb
daa
adc
fidivl
repnz
in
fbld
imul
ss
push
pop
and
xchg
decl
add
repnz
add
das
iret
cmp
pop
andb
movl
fs
mov
js
shr
outsl
mov
inc
hlt
sub
daa
push
test
popf
dec
jno
sbb
aas
loop
pusha
outsl
xchg
mov
mov
in
push
pop
jg
push
pop
adc
xchg
lcall
jae
push
outsb
dec
ret
jnp
mov
push
ljmp
pop
mov
and
je
pusha
add
mov
sub
sarb
stos
dec
movsl
imul
nop
cld
mov
cmp
stos
popf
js
pop
insb
pop
jle
es
or
xor
test
fwait
pusha
stos
outsb
jecxz
nop
jmp
or
cli
out
and
stos
mov
or
in
or
test
je
or
pop
mov
scas
pop
imul
dec
push
loope
adc
cmp
add
or
wbinvd
pusha
inc
aad
icebp
mov
addl
mov
mov
xor
in
lcall
enter
idiv
loope
das
cltd
xor
decl
les
and
and
push
pop
or
stc
test
ljmp
lea
xchg
dec
je
outsl
mov
lret
jnp
jo
in
sub
movsb
adc
push
mov
nop
out
pop
cli
stos
sbb
in
push
in
and
aad
xor
popf
dec
data16
inc
inc
mov
jg
insl
fsubrl
cltd
insb
jae
out
cs
sub
nop
mov
sub
adc
and
ss
in
mov
inc
add
jl
xchg
repz
jnp
mov
insb
xchg
mov
mov
fdivp
sbb
mull
mov
in
xor
push
insl
repnz
jl
jb
les
stos
mov
outsb
push
js
cmp
dec
outsl
or
sbb
dec
cmp
adc
into
sub
xchg
repnz
in
inc
int
xchg
or
lahf
xchg
or
aas
pop
jne
dec
punpckhdq
adc
dec
add
cltd
xchg
or
orl
mov
sub
stos
insl
mov
mov
sub
sbb
loopne
xor
scas
in
mov
sub
cmovge
insl
or
in
push
xor
mov
in
fstps
sahf
or
mov
jnp
addr16
ret
mov
dec
ljmp
add
xchg
pushf
push
arpl
xor
mov
loope
push
popa
jbe
fadds
dec
cltd
cmpsl
xchg
mov
mov
mov
in
pop
xchg
xchg
sub
lcall
daa
das
or
mov
xchg
pop
roll
jne
inc
int
sbb
in
sbb
cmp
sub
ret
jmp
add
ret
test
xorl
and
sti
je
dec
fidivrl
mov
sti
stos
pop
movsl
push
and
xorb
jbe
aaa
jo
jecxz
jae
inc
out
enter
inc
jg
push
je
push
lahf
pop
fisttpll
mov
loop
test
aaa
fdivl
and
mov
mov
arpl
pop
mov
rcr
roll
les
pushf
dec
xlat
dec
jb
scas
repz
mov
cltd
mov
fcmovbe
sti
jo
jp
nop
fsubrl
cmp
ficoml
xorl
mov
pop
lods
pop
into
jle
xor
movsb
andl
call
repz
sbb
pop
les
xchg
mov
pop
lods
or
dec
gs
fisubs
mov
fs
mulb
mov
cmp
pop
xchg
dec
ss
jl
addb
cmc
int
aam
inc
imulb
enter
cld
mov
inc
lods
rcll
mov
xor
xchg
or
jg
adc
jl
mov
test
stos
sub
xchg
pop
cs
xlat
inc
roll
and
cmpsb
pusha
fwait
arpl
xchg
xlat
sahf
and
clc
test
inc
fbld
pop
test
in
lcall
mov
stos
lods
mov
lret
in
pop
out
scas
pop
iret
test
mov
pop
mov
xchg
pop
out
addr16
add
mov
add
hlt
loop
mov
mov
sbb
jns
xor
les
xchg
dec
jno
cmp
pop
lahf
rcr
insb
sarl
fidivl
pop
mov
in
dec
mov
mov
rol
and
ljmp
aaa
frstpm(287
dec
xchg
int
outsl
sbb
fistpll
insl
movsl
out
pop
pop
flds
je
add
or
mov
popf
sbb
and
lds
push
jno
insl
adc
lock
mov
xorb
insb
inc
iret
dec
xchg
xor
jg
fistl
subl
mov
pop
sbb
out
cmp
cmovp
mov
js
xchg
inc
sti
xor
jb
loopne
dec
arpl
jns
dec
and
cltd
push
mov
sti
inc
lock
stos
and
aas
xor
push
fucom
imul
scas
bound
orl
es
xchg
mov
xchg
mov
data16
cmpb
xchg
repz
in
popf
cmc
mov
ja
lds
mov
push
push
cmpsl
clc
sti
dec
mov
jb
inc
cmp
test
cmp
repz
mov
mov
outsl
clc
jne
cs
test
xchg
insb
dec
xchg
cmp
mov
mov
ss
adc
sub
xor
inc
ss
xor
sbb
sbb
sub
inc
out
jle
outsl
cmp
xchg
adc
cmp
push
mov
xchg
decl
xor
push
mov
outsl
std
pop
cmc
ljmp
rorb
es
cmpsb
ss
js
ljmp
call
into
stos
mov
das
call
and
mov
pop
pop
call
or
xchg
in
mov
stc
xor
jae
dec
dec
loope
mov
inc
scas
pop
mov
inc
jle
or
in
push
and
repnz
pop
loope
lcall
ljmp
and
das
and
fcompl
loop
addr16
jno
in
mov
test
push
js
cwtl
repz
popa
out
jb
fidivrs
xor
mov
loope
vmwrite
sub
je
push
ret
fstl
mov
sbb
cmp
dec
hlt
stc
xchg
pop
inc
lock
imul
fimuls
ljmp
add
stos
cmp
xlat
jge
lock
dec
shlb
decl
xchg
or
data16
inc
mov
sahf
clc
cwtl
add
rcrb
and
mov
inc
scas
sbb
xchg
push
fimuls
pop
add
repnz
rol
and
or
ret
dec
outsl
ret
aad
or
in
xor
rcr
inc
jo
sbb
inc
movsl
inc
mov
dec
cs
lock
loope
call
movsb
mov
pop
or
mov
mov
mov
jecxz
out
mov
xlat
ds
jo
xor
push
jns
in
mov
mov
add
out
fcomi
pop
in
dec
shr
push
sbb
aas
mov
jmp
cwtl
adc
ds
lret
xchg
hlt
lea
push
sub
pop
pop
sub
repnz
push
cmp
rcll
jbe
push
ret
pop
stos
push
jge
xor
sbb
das
pop
jb
fsubrl
push
testl
push
loope
rclb
sbb
loop
test
ja
in
dec
pusha
xchg
or
rol
sbb
in
xor
adc
pushw
lret
pop
pop
jo
or
and
mov
gs
out
arpl
aad
ficompl
popf
pushf
lcall
insl
xchg
out
and
sbb
pop
mov
les
les
fdivrl
inc
sahf
or
pop
sub
xchg
or
shrb
test
adc
mov
xor
loop
inc
push
into
cmp
add
mov
mov
lds
les
jle
mov
loopne
ss
clc
jp
or
test
xchg
push
dec
fwait
pop
or
lock
popa
mov
clc
loop
call
cmp
or
stc
test
mov
ss
inc
rcl
adc
std
mov
jbe
fs
lcall
ja
mov
mov
test
jmp
call
bound
aas
lds
pop
mov
enter
cmp
fstpt
movsl
xor
fwait
stc
gs
push
ret
iret
sbb
or
orb
xor
lahf
or
imul
scas
mov
orl
jo
jbe
add
leave
push
add
xchg
xor
aad
fmull
add
lret
mov
sbb
jle
test
int
and
or
and
loop
daa
xlat
inc
dec
xchg
in
sub
test
mov
test
inc
clc
inc
xchg
setae
inc
rolb
outsb
adc
inc
ss
sarl
in
cs
imul
pop
push
int
cld
xchg
sbb
add
add
mov
mov
jl
dec
mov
jns
pusha
adc
mov
add
aaa
xchg
lcall
loop
sti
insb
inc
out
adc
out
jnp
inc
gs
lret
jnp
and
xor
pop
outsb
fadds
fprem1
scas
call
mov
mov
lea
lret
rorl
lret
arpl
icebp
xchg
and
pushl
sarl
push
cmp
imul
cmp
ret
dec
xor
pop
pop
mov
and
shlb
mov
mov
add
mov
inc
scas
sbb
out
xorl
jge
imul
icebp
ss
inc
cld
out
scas
pop
repz
test
dec
push
adc
inc
stos
int
sbb
icebp
outsl
lret
les
sub
sti
jmp
cmpsl
mov
sbb
or
sub
popf
dec
mov
cli
pushw
jo
mov
data16
cmp
cmc
jb
sbb
sbb
mov
inc
xor
test
ja
loopne
inc
incb
mov
xchg
pop
test
mov
push
jo
test
int
hlt
push
add
xchg
divl
dec
aam
sbb
jmp
mov
test
or
movsl
js
mov
jp
jne
sbb
out
rorb
push
scas
push
push
test
in
popa
inc
aas
insl
enter
xor
mov
adc
dec
cli
fwait
movsl
neg
int
inc
mov
outsb
push
xor
aam
mov
clc
xchg
fistpll
push
mov
and
ljmp
mov
jbe
xchg
and
mov
test
inc
mov
sbb
test
pop
jmp
mov
hlt
std
test
pop
or
sbb
xor
repnz
or
aam
stc
in
push
sbb
jp
jae
mov
xchg
add
cmp
cli
clc
adc
lock
jmp
push
loop
fs
shrl
mov
fisubrs
mov
addr16
enter
adc
mov
push
jl
push
mov
into
push
xchg
mov
lret
xor
pop
inc
loopne
in
xchg
daa
jmp
xchg
fdivr
sbb
test
loopne
inc
out
pop
cs
in
lea
scas
push
mov
jae
into
inc
mov
mov
in
ja
cmp
daa
and
pop
or
ret
je
outsb
push
fldt
je
xchg
or
iret
adc
ja
fstl
das
xor
in
mov
flds
ret
push
movsl
mov
inc
mov
dec
or
inc
jae
outsb
cmpsb
out
push
xor
cmpsl
aam
test
ljmp
mov
test
mov
repnz
outsb
fiadds
pop
xlat
scas
sub
gs
jno
int3
ss
test
arpl
test
adc
xor
popf
add
popf
xchg
add
sbb
push
push
mov
subb
popf
loop
rcrl
fsubrs
push
xchg
pop
mov
cmc
stos
or
sub
popa
pop
jne
cmp
test
mov
add
clc
movsl
dec
inc
popf
xchg
or
bound
loopne
dec
dec
mov
mov
jle
ret
pop
iret
scas
sarl
xchg
mov
xor
and
xor
push
rcrl
in
ror
pop
fnstcw
and
mov
xor
xor
popf
mov
cs
outsb
push
movsl
testl
add
jae
or
testl
mov
lret
cmp
push
add
js
mov
iret
and
xor
out
jl
arpl
mov
jmp
mov
sbb
pop
les
pop
std
sbb
es
sub
sbb
int3
daa
out
lret
sbb
xchg
cwtl
pop
enter
cmpsb
pop
popa
insl
or
mov
icebp
xlat
pop
cmp
xor
dec
outsb
mov
dec
mov
adc
xchg
lcall
sarl
int
fldt
inc
adcb
jbe
inc
loopne
add
test
adcl
cwtl
push
xor
xor
mov
xor
repnz
sub
js
push
xor
and
repnz
jg
add
mov
sub
movsb
sbb
or
ret
cmp
in
int
jge
xor
or
push
xchg
repz
adc
sbb
fiaddl
cmp
std
xor
pusha
inc
xchg
pusha
mov
addr16
xorl
in
lods
shl
xchg
cld
inc
add
mov
insl
roll
mov
sub
je
mov
out
lods
aas
imul
dec
mov
and
mov
inc
repnz
movsl
stos
insl
dec
xchg
inc
sbb
xchg
add
loope
dec
das
shlb
lret
add
scas
pusha
push
movsb
add
xor
inc
inc
mov
fildl
movl
or
xor
loopne
imul
pop
rcrb
lock
test
cmp
jg
aam
sbb
adc
cmp
sub
test
incb
into
into
outsb
fimull
or
push
in
pop
std
popf
inc
jmp
add
jne
fwait
cld
mov
mov
out
push
addr16
inc
ret
ret
xlat
test
pop
xchg
movsl
pop
jbe
push
add
pop
push
and
scas
rolb
pop
mov
mov
in
in
test
dec
mov
jecxz
sub
or
xchg
lahf
dec
out
into
int3
roll
stos
adc
or
add
lds
mov
and
les
dec
jmp
cld
insl
negb
pop
mulb
cmpsb
push
js
sbb
ljmp
stc
push
cmpsb
or
dec
add
pushf
shrl
jns
mov
jb
mov
cmp
out
stos
jg
adc
inc
iret
jg
cmc
xor
push
inc
mov
pusha
inc
adcl
popa
cmpsb
adc
cs
push
ffree
push
xchg
ss
xchg
shll
xchg
lcall
das
rorb
or
add
mov
xchg
or
orl
mov
cs
mov
loopne
push
ffreep
fnstsw
repnz
rolb
push
mov
adc
adc
repz
lahf
add
jnp
hlt
ss
inc
dec
in
movsb
mov
imulb
add
xchg
packsswb
gs
ds
adc
jl
cmp
pop
push
sbb
xorb
xorb
faddl
flds
inc
mov
xor
inc
lret
stos
and
jb
sub
and
out
push
daa
lret
push
in
jns
les
sub
bound
popl
das
loope
aaa
xlat
xchg
icebp
xchg
cs
cmc
icebp
xchg
lds
mov
sahf
add
sub
adc
or
sub
imul
xchg
lcall
inc
jp
cmp
roll
inc
pop
jne
repnz
jae
into
inc
repz
sub
gs
push
aas
data16
inc
lret
inc
mov
mov
push
xor
lcall
mov
loope
push
jb
lahf
dec
push
jns
call
jecxz
lods
cwtl
fnstsw
pop
push
jb
or
cmc
xchg
cwtl
or
std
pop
or
lea
andb
sub
fimuls
fldl
daa
xchg
inc
in
push
push
fimull
mov
pop
and
repnz
mov
incl
mov
loop
xchg
jbe
scas
divl
mov
dec
into
outsb
adc
lds
in
cmpsb
lret
inc
cmp
shlb
push
dec
test
andb
push
and
mov
inc
icebp
cld
lret
xchg
stos
aaa
jl
pop
and
jns
in
shll
cwtl
pop
sub
rorl
inc
test
adc
stc
clc
insl
sbb
scas
and
pusha
clc
push
pop
dec
inc
inc
mov
cmp
lods
shrl
aad
fimuls
arpl
mov
repnz
es
sub
mov
mov
push
pop
jle
push
jmp
push
mov
mov
leave
fistpll
cwtl
pop
mov
insl
jg
dec
loopne
sub
xor
adc
lret
imul
dec
push
pop
cmovno
mov
mov
orl
ds
adc
lods
sbb
push
add
cmpsb
les
cmp
mov
enter
ficoms
out
or
push
jno
scas
pushf
iret
out
sahf
mov
lret
dec
cmp
ja
jmp
sbb
jmp
stc
pop
add
jns
aas
aam
rcrb
mov
sbb
mov
cld
push
orb
fidivrs
push
inc
mov
adc
int
sub
sbb
xor
sub
mov
or
mov
mov
pop
jmp
adc
shll
pop
movsl
gs
push
jne
cmp
fdivr
test
sarb
add
mov
hlt
loopne
es
xor
jmp
stos
es
jbe
dec
out
pop
sahf
vcvtps2dq
push
or
int3
adc
inc
insb
xor
mov
and
mov
filds
dec
jmp
xor
stc
sbb
in
mov
sarb
jle
adc
bnd
mull
jno
xchg
cmp
fdivl
xchg
push
lret
out
daa
xchg
cli
popa
andl
mov
xlat
jl
lods
adc
movsb
mov
pop
pushf
or
fisttps
repz
aam
notl
sbb
lods
ret
jge
push
inc
mov
and
add
stc
cltd
dec
mov
or
sahf
test
push
cwtl
add
mov
dec
fsubrl
aam
add
enter
sbb
rcrb
test
dec
fnstsw
repnz
fwait
std
pop
and
mov
pop
les
sub
repz
add
repnz
fsts
cmpsl
inc
imull
push
add
movsb
adc
jg
lahf
adc
xor
xor
imul
sub
xor
je
mov
es
test
cltd
hlt
cmp
imul
pop
jg
lods
fdivrl
out
aam
pusha
aad
test
icebp
gs
ja
bound
or
aam
jp
das
fists
lods
jle
mov
das
mov
lock
in
movsb
dec
loopne
dec
shlb
xor
inc
lods
adc
mov
mov
movsb
sbb
data16
push
push
out
fcomps
mov
daa
in
xchg
icebp
pop
leave
daa
orb
or
fisttpll
into
cmp
sub
xchg
add
jl
gs
or
pop
adc
cmp
jns
inc
shr
call
push
lods
pop
punpcklbw
movsl
sbb
pusha
outsb
mov
cmp
dec
jo
sbb
jo
test
jns
das
push
adc
enter
lods
lret
imul
cmp
rclb
push
in
sti
jb
sub
call
imull
add
stc
push
inc
enter
mov
pop
lods
pop
into
ror
sahf
or
bound
cmpsl
jae
mov
mov
mov
loop
scas
xor
andb
mov
gs
movsb
scas
xchg
add
test
xchg
inc
mov
aam
ds
or
out
jo
enter
bound
es
adc
fiaddl
mull
andb
and
jmp
xchg
shrl
loop
and
and
pop
dec
icebp
filds
cmp
sub
fbld
sarl
cmp
lea
adc
sbb
push
test
cmp
and
test
mov
and
push
in
lret
jmp
lret
add
sub
adc
lods
pusha
push
je
dec
fidivl
pop
test
jbe
jge
nop
and
adc
sbb
mov
push
lods
or
jns
pop
cmp
push
ficomps
js
inc
scas
cmp
lahf
lock
popa
int
adc
rcl
push
je
inc
jmp
xchg
out
es
mov
sbb
xchg
lahf
xlat
test
and
out
rcrb
out
mull
outsl
lret
xchg
add
pop
xor
or
pop
mov
test
call
imul
mov
mov
pop
jge
mov
das
dec
test
inc
imul
push
push
mov
mov
arpl
cmp
scas
or
je
ds
insb
mov
jmp
popf
push
in
pop
push
mov
mov
cmp
jo
es
movsb
and
inc
jnp
add
add
ja
orl
inc
popa
mov
notb
fiadds
pop
sub
xchg
cmc
les
and
xor
mov
inc
lods
sbb
fdivp
mov
call
fimuls
sahf
jecxz
js
mov
test
mov
cmp
stc
out
pop
xchg
pop
aaa
insl
mov
mov
sbb
mov
push
popa
mov
xlat
mov
pop
xlat
inc
push
xchg
mul
out
lock
mov
jno
mov
stc
jno
jo
add
rolb
jns
pop
jmp
push
and
mov
js
inc
ret
das
call
pop
push
pop
mov
nop
add
dec
cmp
imul
xchg
ljmp
xlat
ret
out
test
test
mov
lods
sbb
shll
in
popa
adc
ljmp
push
xchg
sbb
bound
repz
or
sbb
lahf
xor
mov
enter
bound
adc
pop
cmp
movsb
ret
out
cmpsb
in
mov
mov
int
add
cmp
lods
es
lds
xchg
fs
cli
int
imul
fisubrs
inc
hlt
dec
sub
lret
stc
int
mov
shlb
dec
jnp
lock
lea
mov
cmc
decb
js
xlat
popa
cmp
push
or
xor
int
push
add
or
dec
mov
aad
sarl
dec
pop
rol
and
xor
pop
cmpl
fmuls
inc
cmc
fimull
push
subl
je
xchg
adc
xorb
test
sahf
and
cmpb
and
pop
iret
jg
cmp
pop
or
xchg
pop
push
xor
jecxz
sahf
js
pusha
out
adc
pop
mov
jp
aas
mov
adc
jmp
scas
and
mov
scas
sub
lods
inc
pop
pop
lret
test
notb
icebp
mov
loop
mov
sub
mov
adc
roll
push
cmp
pop
sti
push
fnstcw
or
sarb
mov
in
jo
int
pop
cmp
gs
inc
push
or
lock
add
push
xchg
jl
pop
fbld
pop
lret
jl
in
pop
jp
iret
fimuls
test
leave
sub
icebp
xchg
xor
push
sub
int3
mulb
popf
push
cld
or
ret
jae
incl
sub
imul
jo
add
xlat
cltd
mov
adc
cld
dec
rep
in
adc
jg
and
adc
imul
movsb
mov
or
mov
sub
push
out
pop
in
xor
ja
cwtl
xchg
fwait
jecxz
mov
add
pop
iret
dec
pop
adc
sti
in
or
xor
jno
lods
jle
rcrb
push
sub
inc
adc
in
dec
push
jg
xorl
jns
xor
and
ljmp
rorb
mov
mov
xor
inc
mov
mov
pop
sub
push
sub
dec
xor
push
add
ja
or
and
sub
cmp
fnstsw
in
xor
test
nop
ret
enter
bound
aas
dec
sub
mov
flds
mov
adc
mov
into
mov
loop
dec
shlb
movsl
pop
cwtl
mov
or
push
cmc
push
fstpt
or
cli
dec
sarb
andb
inc
cld
dec
into
adc
push
repnz
inc
mov
dec
into
sub
ret
mov
daa
cwtl
mov
into
push
mov
sbb
dec
mov
mov
dec
cwtl
insb
mov
stos
mov
xor
addl
jae
fisttps
sar
scas
cmp
push
lret
jp
or
sub
push
imul
aam
mov
or
ja
je
imul
pop
cmp
jle
pop
pop
lcall
xlat
xchg
imul
mov
lret
sbb
mov
daa
mov
inc
cmp
inc
jle
dec
xchg
push
xor
add
and
inc
cmp
jp
cmp
mov
mov
outsb
adc
icebp
or
ss
xchg
ret
add
movl
int
xor
sahf
or
jno
rorl
loop
jl
jle
mov
je
jno
movsb
pusha
lock
or
fadds
js
outsb
scas
xchg
scas
adc
lahf
lcall
and
lahf
shlb
cwtl
mov
xchg
pusha
sub
js
lods
or
add
lods
sub
cmp
dec
std
int
adc
mov
jne
push
into
cld
inc
insl
loop
std
mov
jmp
jae
inc
xchg
sbb
add
in
pcmpgtd
mov
push
aas
pop
lds
out
xchg
out
pop
jmp
jo
jbe
xchg
enter
das
aam
dec
pop
adc
outsb
mov
xor
jns
add
std
jge
js
rcrl
stos
cmp
pop
inc
and
out
sub
fdivl
ret
push
sbbb
push
jbe
jl
push
incb
fstp
insb
push
or
fmuls
sub
xchg
arpl
rorb
fistpl
adc
ficoms
pusha
jb
mov
nop
cwtl
pop
enter
mov
sub
inc
mov
pop
jge
push
add
int
pop
mov
jae
inc
cmc
mov
push
pop
xchg
inc
test
enter
sti
ljmp
cmpsb
push
or
jp
loope
inc
orb
add
mov
aad
inc
sbb
pop
push
in
outsb
mov
xor
xchg
ja
inc
fisttps
sub
cmp
stos
test
cmp
push
add
pusha
pop
into
xor
lcall
adc
xchg
jae
loopne
mov
add
pushf
in
dec
fisubrs
cmpsl
movsb
inc
lahf
xchg
pop
roll
ret
mov
sbb
jns
jo
movsl
push
outsl
adcl
pop
sub
sahf
dec
mov
mov
jno
and
push
aam
dec
jb
inc
out
dec
mov
mov
repz
test
mov
and
adc
jne
into
inc
cmp
in
stc
rcrl
sbb
jecxz
lock
xor
xchg
testl
mov
in
rcrb
test
xchg
in
stos
mov
shll
mov
gs
cs
movsb
sarb
fimuls
mov
or
cmp
sahf
sbb
pop
dec
push
loopne
in
popf
inc
shll
je
sbb
pushl
pop
or
loope
enter
cmc
and
push
lret
jb
es
ret
jmp
xor
lds
inc
repz
fnstcw
icebp
push
xchg
sahf
adc
cmp
xor
dec
stc
bound
sbb
pop
clc
mov
and
or
test
push
xchg
lcall
lret
sbb
sbb
push
repz
test
popf
mov
jb
xchg
fiaddl
stos
cmpsb
xlat
fs
pop
pop
pusha
lret
idivl
pop
arpl
dec
mov
arpl
insb
loope
notb
mov
movsl
pop
icebp
stos
shlb
xchg
jmp
add
or
addl
in
das
int3
mov
loope
dec
shl
or
mov
sbb
pop
dec
fs
push
pop
lock
loope
xchg
decb
xchg
aaa
push
mov
and
jns
stos
adc
add
mov
xchg
mov
mov
xchg
xor
test
sbb
negl
lods
sahf
mov
or
mov
jae
mov
ja
xchg
test
or
bound
ljmp
lock
ljmp
xchg
lahf
pop
xchg
pushf
dec
daa
pop
inc
mov
ja
push
mov
mov
in
imul
xorb
cltd
leave
loope
inc
cmc
cmp
mov
mov
andl
xor
pop
divl
sbb
xchg
cli
and
inc
cld
inc
and
add
mov
mov
dec
dec
je
cmpsl
push
enter
cwtl
add
shlb
or
sub
outsb
adc
push
call
cwtl
add
mov
pop
js
adc
dec
mov
jle
js
stc
ret
fs
push
fnstcw
fs
dec
cmpsl
movsl
add
outsb
fidivrl
fwait
mov
cmpsl
imul
stos
dec
mov
jb
push
das
out
pop
fucomip
das
fbstp
push
dec
movsb
and
ss
daa
or
aad
gs
movsl
adc
aaa
fimull
jbe
mov
jp
mov
movsl
stos
pop
movsl
push
and
sbb
std
jnp
cmp
or
push
pop
lds
cld
push
mov
mov
imul
outsl
mov
fstpt
pop
inc
sahf
or
push
fisubl
pop
dec
cmp
pop
push
sbb
adc
rorl
adc
mov
xor
sbb
mov
push
pop
mov
sbb
fistpll
ret
xchg
std
cmp
mov
icebp
cmpsl
add
je
loope
stos
cmp
mov
dec
dec
sti
push
ffree
push
mov
inc
pushf
xchg
cmp
and
push
mov
scas
in
mov
xor
mov
mov
xor
mov
sti
or
mov
outsb
iret
inc
outsb
mov
repz
out
xor
sbb
mov
cmp
mov
sti
lods
sbb
push
nop
fs
int
and
dec
xor
in
popf
xchg
cld
insl
adcl
push
cmp
xchg
pop
out
add
inc
jns
xor
repz
mov
leave
aad
inc
in
into
outsb
leave
inc
cmp
out
push
xlat
xor
pushf
sub
push
or
ret
repnz
jmp
sub
cltd
daa
insb
dec
addr16
mov
jmp
les
sarb
cmpb
xor
xor
xor
repnz
jns
or
sub
inc
stos
pop
pop
cmp
dec
inc
add
sbb
cwtl
and
test
jp
push
pop
ljmp
insb
or
pop
incl
mov
cmp
in
lock
sub
dec
push
jo
stc
mov
gs
lea
scas
or
mov
dec
pop
addr16
sbb
push
lods
or
or
aaa
lds
data16
lahf
inc
ds
pop
shl
cmpsl
push
mov
xorl
or
ljmp
push
cmp
test
mov
push
jle
push
dec
std
pop
shll
inc
lret
lods
or
std
xor
rolb
in
fisttps
dec
mov
xchg
push
pusha
add
imul
in
sldt
mov
test
mov
loop
fcoml
shlb
hlt
push
add
fildl
jp
ficompl
mov
pushf
cltd
inc
sti
aad
shlb
mov
jno
inc
ss
add
cltd
repz
mov
popf
dec
int3
outsb
loop
mov
fcmovnb
jo
or
jns
sbb
test
test
push
test
cltd
hlt
cmp
daa
ja
sbb
mov
imul
inc
push
add
lahf
jae
dec
outsl
popa
dec
push
lock
push
sbb
scas
dec
shl
loop
push
scas
sbb
jb
cmp
push
pop
out
pushl
pop
add
push
mov
push
ficoms
push
ja
vpunpckhqdq
and
in
popf
add
push
stos
adc
jbe
add
pop
mov
xchg
mov
movsl
xor
into
test
pop
in
mov
insb
loope
lret
imul
sub
loope
cld
push
mov
lahf
aas
out
pusha
sub
icebp
inc
lret
pop
jmp
jg
lret
sbb
lret
pop
icebp
iret
cmp
push
mov
out
mov
imul
adc
popa
add
sub
subw
sub
rolb
fwait
fwait
cmp
pop
sbb
push
call
fnstcw
pop
insl
js
decb
xor
xchg
pop
pop
test
test
loopne
add
mov
dec
les
inc
cmp
xor
ja
out
leave
cmp
daa
aam
jae
ret
xor
test
int
jg
and
push
mov
mov
jne
es
jnp
sbb
cmp
push
add
lods
pop
int
push
add
or
jg
mov
ret
data16
sbb
cmc
mov
add
fadds
dec
imul
rclb
movsb
ds
xchg
and
sub
lods
mov
mov
cmpsb
inc
out
pop
popf
mov
insb
mov
or
adc
enter
lods
push
jl
loopne
add
sub
lods
icebp
mov
ret
loop
mov
and
loopne
and
icebp
sbb
lcall
xor
dec
movsb
outsb
adc
push
xor
push
dec
lea
outsb
fcoms
stos
repz
or
add
xlat
xor
mov
xchg
and
xchg
pushf
push
cltd
dec
hlt
cmp
hlt
out
ficoms
inc
or
orl
out
pop
or
lods
shll
popf
sub
scas
insb
cmp
in
and
lods
out
loopne
mov
ret
mov
aam
mov
fwait
cmp
inc
mov
jns
sub
cs
and
fldt
push
push
push
pop
xor
gs
mov
loope
imull
ret
and
pop
sub
mov
test
cmp
sub
stos
loopne
mov
dec
mov
imul
and
mov
add
inc
dec
jo
pop
sbb
rolb
lcall
jmp
xchg
frstor
add
out
ja
mov
movsb
fidivrl
push
add
xchg
push
add
movsl
inc
or
lea
stos
dec
cmp
cld
mov
addr16
xor
pop
repz
adc
stc
mov
xlat
sahf
jae
jbe
add
sbb
ret
inc
subl
ja
inc
gs
lret
fistpll
in
dec
dec
sub
and
fs
dec
inc
jnp
rcrl
sbb
mov
sbb
aam
push
mov
xchg
xchg
cmc
adc
lds
sub
mov
iret
movsb
and
enter
test
xchg
xor
mov
pusha
lret
mov
and
out
aaa
imul
add
push
mulb
sahf
sub
mov
mov
das
fstpt
inc
push
ds
mov
dec
outsl
movsb
dec
shlb
into
sub
repz
mov
xchg
mov
xor
leave
jns
jno
mov
icebp
dec
hlt
sub
xchg
rol
hlt
dec
mov
aam
adc
fidivrl
movsb
xor
cmpl
cmp
stos
int
xchg
add
add
jno
stos
testl
xchg
loop
add
add
mov
lock
rcrb
mov
adc
push
stc
pop
subb
add
in
push
xchg
fwait
cmp
pop
sbb
inc
or
add
enter
jg
sti
cmp
ljmp
popa
add
dec
xlat
mov
dec
jo
imul
addl
repz
inc
out
xchg
insb
push
cmp
sti
bound
mov
popa
or
popa
dec
xchg
decb
mov
push
xchg
xor
pushf
mov
xchg
mov
add
and
cmc
xchg
sub
add
or
shrb
test
and
nop
fdivrp
mov
sbb
mov
insb
call
fcoml
dec
lds
push
scas
sbb
xchg
sub
mov
fdiv
and
push
jmp
mov
setne
out
fld
sbb
mov
out
inc
xor
stos
cs
sbb
cltd
add
addr16
mov
sub
dec
in
cli
push
ffreep
pop
les
add
xchg
mov
lea
pop
sub
addr16
mov
xchg
push
xchg
inc
adc
imul
cmp
in
pushf
loop
mov
rclb
lahf
outsb
cmpl
inc
push
cmp
push
pop
icebp
pop
inc
jae
and
ret
fsubs
jne
add
and
test
push
lock
scas
and
adc
sub
cmp
mov
gs
pop
mulb
mov
sub
repz
in
dec
jmp
cmp
clc
sub
enter
pop
inc
scas
cmp
jo
push
cmc
pushf
pusha
adc
mov
fsubl
mov
dec
in
jp
repnz
lock
lock
in
gs
aaa
fisttps
test
mov
pop
jbe
imul
mov
cmpsl
add
pop
rol
xor
popa
push
mov
adc
mov
push
mov
jbe
jo
pop
icebp
inc
cmp
add
fdivs
clc
sahf
cld
push
pop
cs
mulb
cmp
jp
fwait
repz
add
xlat
gs
arpl
xor
mov
js
inc
mov
dec
mov
sub
mov
inc
add
xor
jmp
fldl
stc
jno
je
jmp
loope
add
dec
fnstenv
xlat
ja
cwtl
icebp
sub
mov
push
lcall
jb
mov
popf
icebp
pop
inc
xchg
fiadds
push
ljmp
mov
jne
mov
fwait
mov
nop
jmp
pop
or
aam
dec
mov
mov
adc
movsl
sarl
int
loop
jge
repnz
lods
dec
mov
cmp
xchg
lods
mov
scas
test
push
int3
fwait
xor
jns
das
and
scas
cmp
push
xor
lahf
adc
dec
nop
inc
cmp
dec
dec
xchg
dec
sub
bound
fimuls
scas
bound
dec
push
cmp
mov
lcall
sbb
mov
mov
mov
fcomp
ss
mov
loope
int3
ret
cwtl
xchg
lcall
les
cmpsl
sbb
loop
cld
or
cmpsl
and
fstp
adc
ljmp
inc
lods
adc
and
xchg
inc
and
dec
jo
sub
cltd
or
je
sahf
sarl
xor
push
dec
out
int3
daa
jmp
rcrl
push
hlt
js
leave
pusha
std
lods
rcrb
ret
daa
pushf
dec
jg
xchg
mov
pop
sub
sbb
lods
xchg
sbb
cmp
fisubrl
dec
mov
inc
fcmovbe
and
jnp
les
es
dec
sti
js
fnsave
out
or
iret
cmp
fs
add
nop
pop
push
or
push
push
fisttpl
xor
dec
lods
jns
insl
or
lcall
sti
mov
pop
lret
jbe
xchg
pop
lret
sarl
int
push
scas
popa
pop
jne
sub
cmpsb
push
xchg
aas
and
pushf
adc
and
loop
sbb
ret
xlat
popf
xchg
and
mov
imul
es
dec
aaa
fisubs
call
test
push
pop
jns
inc
roll
add
xor
add
lods
ret
mov
test
icebp
push
lods
aam
stos
outsl
jmp
push
pop
adc
dec
gs
add
and
mov
dec
mov
xor
or
leave
hlt
fisubl
push
scas
loopne
mov
add
inc
mov
addr16
imul
loopne
lea
loopne
mov
mov
fs
test
pop
lcall
mov
out
jg
pop
daa
xchg
cmp
pop
loope
mov
add
xor
je
mov
cwtl
jne
lds
jp
rol
outsl
cwtl
out
roll
imul
sbb
mov
sub
dec
xchg
or
cld
sbb
xchg
lret
sahf
and
das
mov
mov
sbb
test
or
les
xlat
leave
daa
ja
mov
nop
push
jns
and
test
xrelease
or
sarb
xchg
jmp
push
lds
out
aam
add
mov
pop
inc
int3
dec
xchg
inc
out
or
add
push
out
out
push
push
jnp
xchg
pop
movb
sub
xor
leave
add
xchg
daa
mov
fwait
ret
mulb
daa
sub
adc
clc
sbb
dec
pop
push
pop
or
sub
sub
pop
pop
popa
fimull
and
test
hlt
out
sub
rcrl
shl
or
fldt
fmull
mov
imul
xor
inc
mull
imul
cmc
movsl
fistpll
jne
mov
aaa
ret
inc
jecxz
test
cmp
cmp
and
inc
or
les
in
jp
pop
sub
xchg
repnz
mov
mov
daa
and
push
xchg
icebp
inc
lock
or
sbb
push
movsl
jge
faddl
push
clc
shrw
std
mov
fistpll
add
mov
or
lods
shr
dec
shlb
adc
dec
shlb
adc
jle
loopne
xor
scas
in
sbb
xchg
xchg
addr16
adc
push
flds
jp
sti
arpl
loope
add
mov
fisttpll
lcall
clc
shll
add
test
dec
mov
std
lods
add
gs
mov
mov
sbb
push
or
push
cmc
pop
mov
ljmp
gs
xor
mov
lahf
loop
mov
shll
repz
in
fdivrp
push
ffreep
popa
mov
jge
cmp
pusha
adc
mov
or
cmp
cmp
push
add
outsl
fdiv
fs
stos
push
cwtl
add
pop
ret
lock
inc
add
into
jle
push
xchg
push
int3
adc
out
pop
jmp
pop
sub
dec
icebp
sti
xlat
mov
push
cmp
jle
ret
inc
adc
aad
fimull
js
sub
lds
stos
cmpsl
jo
mov
mov
ret
pusha
arpl
push
movsb
mov
popl
sbb
xchg
push
push
repz
loopne
outsl
in
fldcw
push
add
cmpsb
mov
pushf
dec
stc
inc
arpl
sbb
lcall
enter
sub
xchg
inc
mov
and
jns
lds
data16
jge
aas
rcll
sbb
push
add
mov
mov
and
inc
add
inc
jns
push
push
cmp
frstor
fwait
dec
test
add
fadds
jns
xor
rolb
ret
das
fwait
cmp
mov
hlt
add
jle
scas
pop
das
sahf
jecxz
mov
push
movsl
fs
lods
sub
mov
jns
xor
dec
push
adc
push
xchg
push
movsb
shrl
mov
jae
cmp
push
mov
push
jecxz
in
or
ljmp
mov
xor
mov
int
adc
add
lret
inc
lock
mov
mov
shll
repnz
scas
pop
shll
out
pop
jmp
push
push
mov
sbb
inc
inc
xor
inc
push
fistl
jmp
mov
outsb
inc
inc
repz
lret
rolb
push
int3
ljmp
adc
pop
dec
popf
fcom
scas
loopne
inc
cmpsb
mov
adc
push
sti
lret
xchg
xchg
fisubrs
mov
aad
pop
incb
jle
push
inc
or
xor
sub
xor
addl
scas
out
jne
cld
mov
incl
popa
adc
pop
mov
mov
push
and
js
jp
mov
jno
inc
sub
xchg
add
mov
mov
mov
sbb
xchg
sahf
push
mov
and
cmpsb
aas
iret
outsl
fnstenv
ljmp
je
cmp
mov
xchg
mov
mov
push
push
adc
shr
int
imul
jl
push
in
mov
nop
incb
mov
mov
movsb
inc
mov
adcb
popa
inc
cmc
cmp
stc
je
call
iret
outsl
repz
cmpsb
test
add
dec
jmp
push
add
scas
int
stos
pusha
mov
cmp
and
add
andb
mov
inc
scas
pop
shrb
jle
mov
es
rcll
rolb
mov
fimull
pop
imul
push
sbb
pop
popl
ds
divb
fistpll
hlt
stos
cmp
mov
in
sahf
inc
inc
mov
outsl
mov
sarb
idivb
lahf
dec
fcoml
rcrb
je
loope
cld
xchg
repz
add
and
xchg
sahf
or
jg
push
push
xorl
arpl
dec
into
cmp
jo
fcoml
nop
cmpsl
dec
fidivl
pushf
push
movsl
sbb
adc
xor
fisttpl
add
out
or
and
dec
xchg
or
popf
xchg
cs
imul
adc
mulb
inc
test
mov
jae
sbb
jno
mov
rcr
or
daa
xlat
jnp
bound
or
pushf
pushf
loope
lahf
sbb
ret
cmp
and
add
add
pushw
pop
or
sub
movsb
call
loopne
mov
mov
int
push
leave
jns
dec
aas
inc
xchg
mov
jo
testl
jg
and
pop
shlb
shll
out
insb
repnz
into
outsb
leave
inc
aaa
lds
ljmp
jp
bound
lods
movsb
mov
popa
push
jb
jecxz
xorl
sbb
iret
dec
int
outsb
in
or
xchg
mov
inc
test
xor
ds
pop
dec
out
das
fwait
sub
mov
fcmovb
or
xor
insl
adc
loope
jmp
push
lahf
sbb
das
pop
nop
add
test
adc
mov
std
sbb
sarl
mov
xchg
inc
mov
dec
or
mov
fiadds
mov
pop
lea
iret
pop
ja
insb
mov
sahf
push
call
idivl
shrb
es
test
rcrb
sub
repz
outsl
sbb
adc
sub
mov
lcall
mov
shll
sub
sub
mov
xchg
push
xchg
movsl
dec
jmp
out
dec
lods
sbb
pop
add
or
mov
pushf
inc
fimuls
pop
lods
jnp
mov
cmp
push
clc
mov
les
mov
test
push
dec
xor
scas
loope
jmp
out
push
scas
sbb
cmp
shll
inc
flds
rcl
sub
inc
inc
mov
xchg
mov
inc
or
aad
xor
repz
xchg
fsts
aas
xchg
sbb
int3
mov
insb
ljmp
jge
adc
es
mov
int
or
fbld
data16
enter
dec
loopnew
jg
hlt
inc
push
pop
cli
push
fstpt
push
std
mov
xor
xor
mov
aas
push
ret
jge
mov
mov
lret
inc
int3
cmc
test
les
lahf
jno
dec
mov
repz
cld
outsb
aad
pop
shrb
rcrl
mulb
out
loope
adc
pop
aad
sub
arpl
sbb
test
xorl
sbb
outsb
sub
cwtl
add
inc
fwait
xchg
or
popa
push
mov
dec
stc
push
test
xchg
inc
mov
test
xchg
aaa
mov
adcb
test
fmull
es
add
and
nop
out
pop
call
mov
fimull
dec
mov
cmp
mov
ret
fsubrl
outsl
pop
cmpsb
or
jecxz
je
lds
push
data16
fdivr
sbb
movsl
or
xchg
and
outsl
pop
cmp
dec
mov
insb
dec
mov
pop
fdiv
mov
in
pushf
mov
and
push
je
subl
or
hlt
fs
enter
mov
test
rcll
inc
mov
rol
push
cmp
test
je
test
daa
jl
loop
dec
rorl
xchg
fnstcw
jae
cmc
out
aas
inc
sbb
cmpsb
int
in
insb
dec
jmp
mull
jae
dec
das
stc
sahf
mov
jns
fisubs
mov
sti
gs
imul
dec
xchg
icebp
add
and
inc
sbb
cmp
stos
dec
sti
insb
push
xchg
ss
ds
into
add
or
xchg
cmp
sub
lret
adc
pushf
push
dec
decl
fmuls
dec
fidivl
xchg
fisubl
mov
mov
cmp
dec
xchg
loop
data16
test
sbb
fcomp
aad
fnstsw
cmp
lods
jb
shll
mov
jno
xor
pushf
sub
xchg
inc
mov
sbbb
es
lock
xor
in
mov
inc
notl
mov
add
lcall
leave
repnz
les
addr16
pop
or
lock
into
inc
repz
fxch
pusha
jg
mov
ds
es
mov
lret
pop
or
jg
sti
stos
pop
jp
and
and
and
cmp
cmpsb
jb
fmull
xchg
inc
imul
scas
sbb
and
adc
loop
icebp
adc
xor
out
jl
or
and
dec
lea
ljmp
repz
xor
jno
inc
sub
fs
inc
lea
adc
mov
adc
xor
xchg
add
lods
cwtl
sub
scas
scas
dec
out
lahf
adc
outsb
loopne
cld
insl
sbb
outsb
cmp
mov
subb
mov
add
jae
mov
adc
hlt
fmuls
fwait
adc
repz
popf
push
outsl
in
mov
sub
and
movsb
sbb
add
jecxz
lcall
cmp
mov
cmpsb
mov
fnstsw
icebp
cmpsl
xor
int
pushf
negb
cmc
stos
or
sbb
adc
mov
movsb
jecxz
shl
jp
loope
loope
mov
hlt
shlb
xchg
sbb
pushf
mov
arpl
loope
add
adc
xchg
in
rolb
in
mov
rcr
dec
jne
mov
enter
ficomps
mov
fdivr
and
pusha
int3
xor
stos
lret
popa
cmp
sub
stos
dec
cli
imul
push
cmp
cmp
and
fstps
push
ret
or
js
test
mov
xor
xorb
icebp
cmp
add
stos
lock
or
or
xor
cmp
call
imul
jae
sbb
pop
inc
lods
adc
push
push
lds
out
es
inc
sahf
xor
cmpsb
adc
negl
outsb
fidivrl
pop
inc
roll
roll
push
xlat
ja
popa
shrl
xchg
push
loope
cmp
sahf
add
scas
pop
push
cltd
jnp
pop
push
ja
out
ljmp
jae
and
jmp
sbb
mov
jl
cwtl
or
pop
xor
push
loop
pop
and
pop
xor
dec
fdivr
scas
xor
addr16
nop
add
inc
sarl
pusha
fwait
or
les
mov
push
bound
cs
loope
mov
scas
lret
lds
jnp
pusha
lret
mov
popa
push
and
shlb
sbb
repnz
ja
inc
dec
mov
ret
or
push
lret
es
jecxz
test
xchg
adc
sbb
pusha
clc
push
lock
xor
xor
aam
in
pop
test
lcall
fdiv
addr16
push
xchg
mov
pop
lea
adc
aaa
add
cs
xor
or
fwait
je
sub
leave
adc
or
cmp
sbb
push
xchg
inc
mov
cmpsb
push
leave
pop
inc
adc
inc
jnp
mov
ret
adc
aam
jnp
mov
cmp
mulb
mov
aaa
mov
das
xchg
addb
jo
pop
pop
or
dec
jae
enter
xor
cmp
mov
or
out
repnz
repnz
lret
pop
adc
adc
adc
sub
and
jo
and
mov
frstor
mov
adc
sbb
stc
ss
inc
add
mov
push
je
dec
fidivrl
movsb
mov
cmpsb
sbb
xchg
xor
pop
daa
inc
rorl
nop
cli
mov
in
cmp
andb
mov
dec
mov
add
inc
into
adc
sbb
xlat
push
xchg
pop
clc
cld
aam
adc
add
outsl
sbb
pusha
in
adc
mov
xchg
dec
inc
mov
stc
push
dec
les
cmpsb
dec
clc
pop
jae
test
insl
adc
mov
les
mov
cld
push
fnstsw
cmpsl
xor
repnz
dec
call
or
arpl
mov
scas
add
jno
inc
cmp
xchg
cmp
ds
loopne
aad
sub
mov
pushf
mov
and
cmpsb
push
add
aas
pop
jo
inc
gs
dec
jp
jbe
pop
ds
jl
jmp
push
int
mov
jge
dec
push
ljmp
adc
add
sbb
lret
adc
jp
enter
add
lcall
xor
pop
push
xor
jle
outsl
out
xchg
mov
popf
jbe
imul
in
bound
mov
push
add
or
movsl
mov
cmp
mov
sbb
repz
and
or
and
std
pop
shll
mov
stos
pop
cli
aad
sahf
shrl
cltd
mull
sbb
cmp
mul
dec
fisttpll
movsb
push
push
xor
icebp
pop
loopne
pop
or
stos
pop
jl
push
lret
test
xlat
ja
cmpsl
in
pushf
mov
popa
adc
mov
pop
cmp
push
fs
mov
cmp
in
fnstenv
ss
adc
fisubrl
dec
test
pop
jb
fnstsw
cmpsl
xor
lods
dec
in
popf
push
push
in
fimuls
js
mov
sbb
int
lret
xor
enter
outsb
mov
testl
rcl
sub
mov
call
mov
xchg
jbe
or
push
mov
dec
enter
imul
andb
addl
or
es
xchg
cmpsl
cmp
scas
hlt
movsb
popa
mov
adc
dec
sbbl
sub
xchg
int
xor
mov
enter
sarb
stos
adc
cmp
adc
mov
aad
int3
jl
mov
xor
xor
loopne
outsb
push
pushf
adc
loop
test
fadd
or
sahf
loop
push
shlb
dec
mov
outsl
cmp
or
mov
ror
push
sub
and
or
div
sti
loopne
inc
clc
int3
ret
adc
push
inc
fcomps
sbb
push
or
mov
es
dec
mov
pop
les
aas
out
test
sbb
lods
pop
dec
and
test
lret
inc
xchg
add
adc
or
imul
inc
aaa
push
scas
sbb
nop
sahf
add
add
push
dec
fs
xchg
or
orl
adc
push
push
jnp
pop
mov
bound
int
icebp
add
pusha
inc
xchg
sub
xchg
inc
out
cld
das
adc
sub
rol
dec
mov
xchg
push
shlb
insl
hlt
sahf
or
sub
jecxz,pt
ja
cmpsb
pop
imul
sbb
cmp
mov
sub
add
rcl
data16
rolb
test
stos
adc
jbe
and
int
or
mov
mov
xchg
cmc
mov
cmpsl
jno
sahf
and
mov
loop
sti
shl
xchg
or
and
pop
or
mov
ret
daa
js
lret
ljmp
insl
bound
sbb
add
test
push
push
adc
xchg
jne
scas
push
dec
adc
subb
xor
fisubrl
xlat
add
jge
sbb
inc
push
mov
adc
sbb
hlt
lods
sbb
and
hlt
repz
in
dec
ret
or
hlt
flds
push
icebp
mov
loop
test
arpl
sub
pop
dec
rcrb
test
push
inc
mov
enter
adc
mov
pop
out
xor
stos
dec
push
add
add
push
fbld
dec
int3
es
sbbb
jb
hlt
test
mov
jnp
sub
jge
sub
movsb
cmp
jp
shlb
sbb
adc
cmp
or
jo
mov
jb
jp
push
pop
nop
imul
mov
xchg
mov
out
popf
sub
sub
fmuls
jmp
je
adc
orl
je
and
push
mov
xor
push
and
lea
jbe
cmp
push
mov
or
arpl
add
dec
cmp
mov
lcall
les
aaa
xchg
lcall
sbb
and
inc
stos
xchg
ds
sbb
cwtl
or
in
dec
mov
lock
pop
mov
or
cmp
mov
or
xor
sub
or
popa
test
int3
cmp
jb
and
fs
imul
stos
shl
adc
sahf
add
int
mov
pushf
dec
mov
stc
sahf
mov
jg
push
pop
jge
lahf
or
mov
inc
loope
cmc
stos
or
mov
xchg
xor
outsl
jb
or
inc
roll
sti
pop
outsb
push
js
and
inc
or
add
push
dec
jns
pop
inc
out
enter
jne
mov
mov
clc
ss
popf
add
jo
test
or
bound
mov
pop
ljmp
dec
sti
insb
mov
bound
in
pop
out
scas
add
stc
lahf
std
mov
sub
push
sub
out
clc
imul
push
pop
ljmp
test
stos
popa
cwtl
cs
inc
roll
lds
push
lock
jecxz
lods
sbb
notl
mov
mov
pop
cmpsl
push
enter
cwtl
add
in
and
popa
andb
xlat
cmp
das
dec
outsl
or
xchg
nop
test
pop
repnz
sbb
ja
out
jnp
xchg
movsl
shrb
fcomps
xorb
mov
mov
lret
jmp
mov
fsubr
rep
and
fwait
rolb
xor
fldln2
repz
in
inc
iret
mov
jnp
addr16
cmpsl
dec
lds
shr
sbb
cmp
or
add
pop
adc
xchg
cmp
xchg
mov
sbb
pop
rcrb
les
lmsw
mov
sub
jnp
ds
cmpsl
xor
rorb
mov
lret
sti
inc
mov
enter
in
mov
icebp
xchg
xor
push
mov
xchg
xor
xchg
adc
das
leave
sti
lods
pop
movsl
gs
pusha
adc
cmp
and
fimull
dec
xchg
sub
mov
adc
ret
daa
orb
pushf
add
dec
xchg
decl
rcrl
loopne
jg
jg
comiss
loopne
ljmp
popa
inc
enter
int3
jl
outsb
dec
jns
cltd
shlb
aaa
and
out
repnz
jbe
sbb
dec
or
jne
mull
cwtl
dec
data16
call
adc
sarl
stc
ja
aaa
push
xchg
push
imul
cmpsl
mov
daa
pushf
dec
push
movsl
or
in
mov
xchg
or
jg
push
push
pop
jl,pt
out
jecxz
and
rorb
cli
mov
xchg
mov
jp
out
movsl
mov
aaa
out
pop
dec
iret
sub
mov
fsubs
iret
test
mov
lahf
cli
xor
mov
mov
ljmp
xchg
adc
or
sub
and
or
or
cld
push
sbb
movsl
adc
cmp
int3
dec
inc
or
shrb
dec
mov
cmc
popa
out
lahf
jnp
icebp
sub
jbe
xchg
cmpsb
push
push
sti
mov
adc
sbb
aam
lahf
sti
and
sub
push
in
jno
cmp
xchg
inc
xchg
pushf
mov
cmp
subl
jne
xor
mov
scas
pusha
push
sbbb
nop
jecxz
fimull
nop
jecxz
xchg
cmp
dec
dec
cld
cld
mov
scas
cmp
pop
mov
popf
or
mov
fs
mov
and
sub
jle
or
pop
jl
shl
lock
dec
insl
fucomip
or
sbb
add
mull
gs
ffree
push
cmc
pop
sub
nop
in
cli
push
jg
fs
mov
cs
ret
test
pop
leave
adc
inc
xchg
xchg
addr16
call
lret
cmp
and
pop
jbe
imul
cs
fisttpll
lret
movsb
negb
lds
dec
sub
lods
sbb
lea
and
jns
daa
jae
pop
notb
jg
cli
lcall
out
mov
cmpsb
cmp
lret
pop
mov
push
int
cwtl
or
add
lret
es
mov
out
mov
pop
lret
xchg
scas
pusha
lods
dec
mov
jno
mov
inc
cmp
nop
in
out
sahf
cmpsl
pop
scas
out
mull
aad
mov
fs
ss
pushw
in
arpl
fildll
movsb
inc
jmp
push
in
jnp
pop
sub
add
push
das
xchg
mov
cltd
sahf
dec
fcomip
push
or
nop
inc
sub
mov
pop
pushf
je
jnp
cli
lcall
fsubrl
jne
mov
mov
mov
fdivrp
scas
fadd
and
aas
dec
inc
dec
test
adc
sub
jecxz
pop
inc
aam
add
ljmp
int
insb
mov
xlat
xchg
mov
cwtl
add
jae
scas
int3
aaa
mov
test
inc
mov
xchg
or
std
mov
push
mov
enter
es
je
ja
xchg
sbb
inc
cmp
and
pop
jle
inc
shll
outsl
punpckhdq
imul
and
dec
inc
std
push
cmp
scas
or
lods
pop
into
cmp
add
inc
sbb
ret
sbb
add
jmp
outsb
ret
int
or
imul
pusha
mov
lea
mov
sub
cwtl
mov
add
xchg
icebp
cmp
aad
cmp
sbb
hlt
cmp
aad
inc
pop
mov
sub
dec
lock
sbb
shlb
push
in
mov
jne
fnstsw
push
dec
cmpsl
adc
mov
or
repnz
cmp
lret
roll
jl
sbb
dec
stc
iret
mov
fiaddl
xchg
inc
sahf
daa
pop
adc
arpl
lahf
adc
dec
add
test
aas
add
push
lds
push
lds
pop
rol
imul
dec
clc
imul
xor
mov
pop
inc
lahf
or
add
mov
dec
mov
mov
ja
xor
sahf
jg
lods
pop
orl
lock
cmc
adc
add
adc
mov
inc
dec
sbb
ja
ficompl
in
sahf
sar
pushf
idivl
pop
or
lods
rclb
jb
fdivrl
cmpsb
adc
gs
les
cmp
movsb
add
notb
sahf
orps
ljmp
out
nop
add
lret
adc
cwtl
jle
lret
loopne
fiaddl
repnz
ss
pop
inc
push
int
cmp
xor
dec
sub
and
adc
xor
mov
fwait
adc
je
in
jnp
cmp
mov
and
adc
jecxz
dec
out
pop
fs
in
and
pushf
ret
jae
aam
push
aas
stos
fimuls
and
jmp
jnp
ljmp
and
inc
dec
mov
repz
imul
data16
daa
and
sub
movsb
jmp
or
sbb
mov
dec
sarl
enter
ja
push
add
pop
lret
mov
popa
out
jge
xchg
in
and
call
aad
mov
dec
dec
mov
mov
mov
hlt
movsb
adc
xor
push
movsb
sbb
push
stos
popa
pop
dec
es
lds
ds
cmp
cmp
iret
add
movsb
push
cwtl
dec
push
ficoml
sbb
cld
dec
outsl
sbb
push
mov
out
sub
lods
into
cmp
mov
pop
mov
dec
shll
push
dec
sbb
mov
push
repnz
jo
ja
xchg
int
out
fucomi
mov
daa
dec
jbe
push
jecxz
mov
cld
push
xlat
stos
jmp
hlt
mov
shrl
or
dec
mov
sub
push
dec
das
stc
test
ljmp
jnp
push
loope
notb
jno
insl
mov
xchg
js
in
adc
jbe
cmp
dec
mov
jmp
sbb
pusha
jg
or
and
xchg
std
sub
xchg
or
shlb
add
data16
dec
jae
pop
outsb
cmp
cmp
test
out
sbb
jae
popf
dec
mov
cli
mov
jecxz
sub
dec
imul
rcrl
mov
mov
fmuls
push
stc
int3
aam
mov
jle
mov
sarb
xor
movsl
sbb
jnp
pusha
mov
mov
mov
fstl
mov
movsb
call
mov
sub
cltd
inc
lods
lret
sbb
pusha
out
nop
xor
jp
lret
jmp
or
dec
movsl
insb
dec
or
pop
cmp
scas
or
cltd
inc
ljmp
jno
int
cmp
fisubrl
inc
cmp
sub
xchg
jo
nop
hlt
loope
mov
enter
inc
xor
jb
dec
jl
pop
in
fisubrl
mov
sub
imul
lret
jl
dec
xor
xor
xchg
jl
cmp
push
jge
and
pop
push
mov
mov
lds
loopne
mov
push
popa
lar
mov
xor
pop
sub
stos
loope
xchg
enter
dec
push
fimuls
icebp
scas
repz
push
xorl
and
lret
pop
or
xchg
test
stos
out
mov
push
mov
scas
arpl
fistps
and
gs
xor
inc
jp
mov
rclb
lahf
dec
lock
leave
scas
cmp
dec
push
jbe
mov
popa
adc
je
stos
xor
mov
stos
dec
mov
pop
mov
lret
fldcw
dec
je
xor
jae
dec
dec
je
jecxz
mov
fildl
out
in
fnstenv
mov
xor
ja
push
inc
fmull
fsubrl
es
lock
jnp
outsb
clc
pop
aad
mov
loop
fdivl
std
xchg
popf
add
jge
insl
das
es
jb
jne
into
inc
repz
loopne
push
movsl
mov
movsb
xacquire
lock
xlat
dec
add
mov
pop
test
test
movswl
rcr
insb
roll
and
std
ss
fnstcw
mov
insl
adc
add
sbb
pusha
adc
mov
mov
xchg
jnp
call
imul
xor
adc
jl
xor
ffreep
pop
jp
out
mov
sub
mov
mov
add
sub
xchg
pop
push
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
mov
add
sub
mov
addl
pop
sub
mov
subl
popl
addl
pushl
pop
add
pushl
pop
add
jmp
bswap
mov
data16
mov
add
jmp
mov
popa
es
mov
jns
add
push
xchg
dec
lds
sub
loopne
sub
outsb
jp
cmp
or
xor
cmp
push
and
sbb
leave
ret
or
add
dec
aaa
mov
jl
push
mulb
jp
pop
js
mov
popa
pop
movzwl
add
mov
mov
sub
sbb
pushl
mov
pop
mov
xor
pusha
mov
jae
jl
popa
xor
jb
call
mov
ss
cmpsb
outsl
lahf
fadd
pop
aad
stos
mov
adc
shll
mov
jbe
push
mov
pop
sub
movswl
add
jmp
sub
push
mov
adc
sub
mov
ss
sub
jne
xor
sbbl
mov
cmp
xor
jnp
pop
sbb
into
lcall
shll
push
jnp
pop
mov
mov
lds
mov
dec
test
mov
inc
push
sub
xchg
fldt
cmp
push
jnp
sub
iret
push
mov
aas
add
out
testl
jnp
das
sbb
into
lcall
sarl
mov
jnp
je
and
iret
mov
sbb
imul
clc
mov
and
mov
int3
cmp
push
jecxz
adc
iret
mov
mov
mov
fidivl
xor
mov
aam
push
lret
push
fnstcw
cmp
push
in
inc
dec
aam
aaa
jle
int3
bound
push
sbb
jnp
dec
sub
push
gs
jne
in
push
jb
add
cmc
pop
pop
stos
pop
or
sbb
movaps
and
or
push
inc
or
mov
mov
outsb
jl
or
shll
out
xchg
icebp
out
jnp
std
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
icebp
cmpsb
xchg
testl
in
fsubrl
cmp
push
jo
adc
push
lods
out
pop
inc
cmpsb
cmp
inc
jo
adc
incl
out
pop
mov
jp
push
xor
sbb
cmp
pushf
jno
adc
lds
jmp
mov
mov
dec
dec
pop
xor
bound
pop
pop
sbb
idivb
scas
inc
mov
mov
unpckhps
mov
cmpsl
mov
stos
or
out
mov
pusha
cmp
add
outsl
fstpt
cltd
fnstsw
fbld
inc
scas
add
cmpl
mov
pop
xchg
test
test
add
sub
out
cmpsl
cmp
xlat
into
lahf
pushf
mov
mov
or
push
stos
mov
aad
mov
fisubs
mov
hlt
xor
cmp
aas
dec
mov
test
rolb
dec
test
inc
mov
popf
leave
inc
push
and
aas
std
pop
insb
and
inc
mov
inc
repz
popf
ror
xchg
add
mov
movsb
sub
enter
pusha
sub
xchg
out
inc
push
ficoml
andl
add
fsubs
addr16
xor
imul
mov
dec
adc
sub
xor
mov
addr16
xchg
xor
leave
xchg
push
insb
enter
popa
imul
xchg
out
pusha
push
cltd
out
fdivrs
sbbb
dec
sbb
sbbb
xor
jge
std
xor
cmp
in
mov
sti
jge
flds
sub
in
data16
push
insb
lods
adc
push
rorb
push
push
jo
ret
enter
bound
jge
pop
roll
jns
es
jecxz
fnstenv
jmp
pop
in
enter
mov
fsub
hlt
dec
pop
lcall
push
dec
pushf
loopne
xchg
pop
xchg
aam
cwtl
mov
mov
dec
fadd
inc
addr16
rorb
sub
ljmp
les
pop
lret
and
rorl
adc
fisubrs
scas
xor
mov
mov
lea
sti
add
inc
cltd
lret
fcomps
jbe
aam
push
enter
stc
andb
push
iret
push
aad
adc
sub
mov
or
inc
fdivs
in
icebp
inc
mov
lods
sub
add
sbb
sbb
mov
mov
mov
sub
pop
push
add
lcall
mov
xchg
sub
adc
outsl
jb
mov
jg
stos
in
aad
adc
fisttps
int
jecxz
and
outsl
add
or
in
dec
dec
adc
xor
mov
sbb
add
mov
imull
adc
lret
fsubrs
jo
push
inc
dec
sbb
xor
jle
inc
scas
xlat
or
dec
mov
imul
data16
es
in
scas
dec
and
shr
shlb
push
faddl
adc
aad
call
sub
lods
or
aas
and
shl
loope
mov
mov
mov
mov
cmp
lret
pop
cs
lds
cmpsl
mov
mov
into
pop
insb
add
outsl
faddl
cltd
test
test
push
or
enter
cmp
sub
adc
arpl
jmp
sbb
test
loope
negl
aam
xchg
xchg
sti
mov
aad
mov
mov
je
cmp
mov
xor
repnz
push
insb
aaa
call
iret
into
ss
mov
mov
sar
fs
cmp
mov
push
or
jae
lret
outsb
jl
xchg
popa
lret
pop
fidivrl
sub
pop
mov
outsl
pop
adc
jmp
mov
push
dec
mov
test
fstl
gs
mov
loop
movdqu
cmovg
and
in
dec
andb
push
fldcw
pop
aam
std
inc
cmc
pop
sub
testb
mov
xor
mov
jo
inc
sbb
call
and
jae
sub
push
testl
adc
idivb
push
iret
test
in
mov
sub
mov
push
push
push
xor
and
pop
test
ret
and
fsubrp
cmc
inc
pushl
pop
mov
call
shlb
nop
pop
ret
sub
sub
adc
jge
pop
mov
lcall
loope
mov
push
sbb
nop
aas
add
inc
inc
popf
inc
fldt
mov
pop
bound
sub
add
and
add
fdivrl
sbb
mov
icebp
cmp
cltd
nop
lahf
rcl
imul
dec
inc
into
rorl
push
pop
stos
dec
sbbb
stc
push
pop
dec
dec
rorl
fstpl
pop
clc
push
sbb
pushf
add
out
scas
aad
lods
mov
stos
xchg
sti
push
sbb
pushf
imull
cmp
sub
xchg
fadds
sti
mov
fstps
std
inc
sub
adc
ds
aam
xor
push
imul
subl
aad
inc
xlat
mov
xchg
push
xlat
mov
vpcomq
mov
push
push
or
and
inc
sub
push
sub
aad
ficoms
add
dec
mov
jecxz
inc
sub
fwait
ja
cmp
bound
jb
cmp
dec
repz
dec
pop
add
mov
xlat
in
xor
out
repz
inc
fldl
mov
sbb
or
push
mov
jbe
lahf
or
aas
fdivp
cltd
std
push
sub
add
jg
sub
addb
dec
repnz
jno
bound
dec
leavew
loop
cvttps2pi
test
dec
nop
lds
jl
fisttpl
xor
and
idiv
adc
jg
mov
out
icebp
adc
gs
dec
xor
sub
cmp
add
test
in
cwtl
outsb
ds
loopne
or
leave
adc
nop
xor
adc
xor
sbb
add
inc
mov
subl
loop
sbb
pop
jo
pop
sarb
add
movsb
dec
fisubs
cs
sub
xchg
lods
pop
mov
or
push
fsts
out
jl
dec
iret
sub
std
mov
pop
popw
mov
mov
stos
cmpsl
enter
inc
add
enter
lahf
in
dec
cmp
and
int
negl
mov
jl
test
xchg
or
xchg
orb
adc
bound
push
jl
jle
pop
pop
xchg
or
jb
in
xor
mov
pop
cltd
xchg
xlat
pop
add
push
cmp
mov
fwait
mov
out
fsubrs
pop
subb
call
imul
lds
mov
repnz
cmp
xor
xor
insl
out
movsb
sbb
cmp
push
stc
les
xchg
xchg
jae
sub
xchg
push
xchg
push
dec
mov
and
cmp
out
into
mov
or
ja
bound
jge
in
std
and
sub
push
pop
bound
fwait
enter
fisttps
dec
pop
jb
mulb
mov
mov
or
aaa
sahf
std
mov
pusha
cs
or
add
add
movsb
test
inc
das
mov
push
lds
ds
daa
sub
or
sub
sti
cmp
pusha
xchg
jle
mov
dec
xor
dec
fcompl
and
add
jmp
pop
and
jnp
xor
and
mov
ds
popf
notl
fs
ss
in
mov
push
mov
cmpsl
dec
mov
jne
mov
or
fildll
faddp
jg
ss
inc
mov
aad
mov
fwait
or
out
fdivrs
mov
adcl
push
cwtl
sarl
cmc
loope
test
xchg
jge
dec
cmp
cld
ret
add
xchg
sub
xor
cmpl
dec
mov
and
cmp
ds
aam
mov
daa
sbb
add
inc
mov
outsl
cmp
pop
xchg
push
mov
xchg
adcl
sbb
fs
frstor
fs
cmp
xchg
lds
jbe
test
jle
cmp
xchg
ret
and
pop
and
loop
jb
es
sbb
mov
jle
sub
hlt
pop
je
cmp
lods
dec
sbb
dec
jmp
mov
or
out
cmp
xchg
xor
lret
notb
dec
enter
lds
test
sahf
sub
xchg
jae
jae
ret
les
cmpsl
int3
and
popl
mov
jle
pop
xlat
jmp
push
pop
outsl
into
dec
fistps
dec
mov
pop
or
popa
negb
mov
lcall
ss
fnstenv
popf
lods
loopne
add
xchg
and
xchg
cmp
fistps
out
fildl
sub
sbb
insb
lods
cs
dec
icebp
pop
out
push
inc
push
xor
mov
aad
xchg
lea
fs
cmpsl
mov
imull
in
mov
mov
movsl
das
mov
add
stos
sbb
sub
inc
fwait
out
dec
jne
dec
inc
aad
outsl
xchg
xor
cwtl
dec
rorl
add
and
mov
xor
jecxz
test
lahf
xor
mov
mov
pop
sti
dec
inc
mov
or
in
cld
clc
push
ss
sbb
leave
sub
outsl
xchg
js
lock
inc
decb
scas
push
in
out
push
mov
je
popf
out
mov
add
shrb
mov
rorb
es
push
adc
jb
lods
testb
loope
xor
sub
mov
jp
fiaddl
imul
jmp
cmpsb
jnp
popa
notl
sub
stos
jne
jno
cmp
shlb
insl
inc
sub
cltd
ret
pop
dec
jp
jmp
call
pop
in
adc
mov
rcrb
aas
add
cmpsb
lods
mov
outsb
jno
mov
jge
jmp
mov
mov
int3
jl
cld
call
fabs
cmpsl
lret
js
das
es
leave
push
jmp
xor
jb
sti
xor
add
bound
ret
xor
and
fs
shrl
mov
movsb
dec
adc
sub
add
xor
mov
lock
xor
sbb
mov
out
inc
aam
mov
sub
xchg
lahf
shl
pop
lcall
cmp
js
mov
dec
dec
xor
mov
push
xlat
xor
popf
shrl
lahf
pop
jns
into
fidivrl
aas
jbe
xchg
nop
mov
cmc
pushf
add
out
daa
mov
aaa
mov
pop
aaa
nop
adc
in
sub
jmp
jnp
unpcklps
mov
scas
xor
jp
nop
in
stc
pshufw
jbe
adc
int
add
cmc
ljmp
fwait
loopne
add
mov
fiaddl
popf
mov
out
xrelease
stos
inc
test
cwtl
divb
sbb
fdivs
roll
push
call
jle
xchg
pop
mov
mov
hlt
mov
xchg
repz
push
loopne
or
dec
fwait
push
mov
cmpsl
inc
inc
jae
adc
pop
add
lea
cmc
inc
js
pop
xchg
jg
mov
pop
aas
sub
repz
mov
cmp
or
fdivr
and
imul
dec
cwtl
fs
cltd
lods
xorb
xor
xchg
push
outsl
cmp
and
xchg
push
das
out
xorb
push
cmp
xor
dec
jmp
mov
imul
inc
test
ret
cmp
push
int3
cmpl
jae
cltd
test
notl
push
dec
sbbb
int3
sahf
xchg
xchg
movsb
dec
cmp
push
add
push
scas
into
lcall
lods
popa
ljmp
cmp
sbb
or
rorl
out
jne
push
jge
fistpll
pusha
fwait
xor
out
out
jae
lds
jnp
mov
sbb
add
testl
xchg
pop
pop
jp
lldt
mul
sub
sar
add
mov
inc
mov
cmc
mov
inc
imul
es
adc
cltd
mov
addb
mov
stos
test
jmp
addr16
aaa
das
mov
sub
cli
jmp
or
adc
shlb
mov
inc
dec
xchg
xchg
shll
push
jmp
sahf
or
clc
imul
fstps
inc
stos
jmp
push
sbb
lods
outsl
daa
xor
imul
sbb
push
rclb
cmp
sbb
je
pop
adc
inc
add
aad
push
mov
je
lret
or
test
cmpsl
mov
push
jmp
xchg
shlb
pop
lods
insl
jae
stos
mov
push
inc
sub
and
push
push
mov
mov
add
mov
and
testb
push
loope
fisttpll
ss
add
pop
out
sub
xchg
push
jle
push
insb
jge
add
fwait
mov
movsb
or
xor
jle
clc
push
lcall
dec
pop
mov
pop
je
inc
cmp
test
shl
ljmp
cmc
adcl
mov
iret
cmp
mov
dec
fcmovbe
insb
lret
xor
test
cmp
cmp
add
or
std
bound
insl
jo
or
add
xor
push
test
jmp
cmp
in
cmp
imull
mov
push
rcrl
aaa
cmpsl
add
std
in
fildll
sar
ret
bsf
cli
cmpsb
dec
add
scas
movlhps
sub
mov
pop
imul
mov
mov
xchg
rcrl
int3
sahf
in
std
lahf
sub
sub
dec
dec
shll
push
jno
xchg
adc
jne
das
adc
aas
dec
stos
fcomip
mov
cltd
xor
repz
sub
jno
icebp
dec
fildll
mov
dec
and
cs
fildl
fisubrl
in
xchg
sahf
lock
cs
mov
add
xchg
sub
mov
add
jmp
sub
cld
dec
roll
mov
jmp
jle
inc
pop
and
ja
aaa
inc
inc
rcl
dec
cwtl
aas
push
mov
aad
mov
ds
mov
jns
cli
push
loop
xchg
mov
fs
push
jne
sub
movsl
inc
mov
movsl
push
imul
pop
mull
ret
or
test
dec
cwtl
sbb
mov
pushf
stos
lea
ret
push
cmpsl
or
xchg
movsb
mov
adc
sub
sahf
mov
cmp
nop
test
add
stos
xchg
or
jnp
xor
mov
mov
gs
jge
rolb
mov
sub
sbb
jae
cmpsl
mov
push
dec
or
jmp
adc
std
sub
in
mov
or
cmp
in
ja
mov
jecxz,pt
fnstenv
addr16
movsl
dec
xor
sub
dec
mov
xor
int3
mov
jns
and
sub
dec
iret
addr16
push
lea
shll
out
pop
cmp
out
iret
jmp
incb
jns
jle
inc
sub
add
mov
jg
and
fdivrs
mov
sub
aas
adc
fldt
dec
mov
mov
loope
out
cmp
inc
sbb
or
pusha
pop
rorb
push
inc
mov
add
add
inc
cli
push
mov
iret
dec
jne
cmp
inc
jno
aaa
dec
dec
push
aaa
dec
aam
lock
push
pop
movsl
sub
jne
adc
add
xor
pop
adc
notb
jo
out
jge
mov
adc
test
jbe
xor
or
sub
sbb
jge
mov
pop
push
push
imulb
inc
outsb
pusha
inc
inc
jmp
das
mov
mov
lret
inc
inc
xchg
ds
dec
adc
daa
loope
repnz
rcll
sahf
jmp
notl
rcl
js
jnp
in
ret
or
xchg
fisubl
arpl
rolb
icebp
mov
stc
cmpsl
nop
xchg
hlt
mov
repz
cmpsb
sbb
mov
shrb
add
dec
add
cwtl
xchg
in
dec
jmp
adc
jmp
lret
mov
and
pusha
std
pop
and
lcall
push
and
xchg
in
jb
sbb
out
inc
sbb
scas
xchg
jb
adc
imulb
inc
cwtl
adc
lds
ret
adc
pop
adcl
imul
adcb
out
jmp
push
nop
jp
mov
enter
in
pusha
jl
sbb
xor
rclb
aas
lcall
out
shll
aam
loop
into
bound
in
int
mov
inc
mov
push
mulb
lea
dec
popl
sub
rorl
jbe
outsb
xchg
lret
lods
inc
or
mov
andl
and
pop
das
lods
xor
das
adc
repz
mov
pop
cmp
xor
mov
sbb
jbe
xor
jnp
push
jg
push
clc
and
into
pop
inc
pop
stc
mov
pop
es
ret
pop
clc
jb
hlt
or
imul
xchg
lcall
push
scas
pop
or
dec
dec
mov
jno
mov
lret
popa
jno
outsb
jnp
std
fcomps
rcrl
push
xchg
bound
data16
push
push
sbb
imul
jge
and
add
push
or
ret
or
cltd
pop
cwtl
pop
shll
push
cmp
les
ds
jge
add
les
pop
or
inc
dec
pop
fdivs
xor
jbe
cmpl
and
pop
std
outsb
and
pushl
in
js
sub
xor
add
bound
imulb
repnz
jbe
adc
je
in
xchg
add
jmp
mov
movb
pxor
mov
repnz
cltd
push
jb
xchg
xchg
jae
mov
and
cmp
jmp
inc
outsb
stc
sbb
pop
push
xlat
add
fcmovne
jmp
insb
xchg
aaa
arpl
sub
call
das
cmp
mov
cld
jle
iret
xor
pusha
popf
addr16
gs
push
xchg
cmp
inc
cmpsb
insb
add
cmp
std
dec
mov
push
push
cwtl
movsb
jno
fstpl
add
ror
sti
ret
cltd
out
mov
outsl
outsb
lret
sti
inc
adc
add
mov
outsb
loope
jne
mov
loopne
test
fcmovu
test
in
imul
xor
xor
lahf
sub
mov
out
addr16
mov
sarb
or
stc
xlat
icebp
dec
mov
test
add
xchg
pop
jae
add
mov
mov
jno
ljmp
cmp
or
pop
inc
scas
jl
imulb
vrsqrtps
sub
or
mov
xchg
bound
pop
xor
sbb
aas
scas
shl
fucomi
das
negl
shlb
pop
xchg
adc
pop
xchg
pop
xchg
mov
or
sub
pop
sub
cmp
lcall
xor
dec
or
in
xchg
into
add
cmp
bound
fwait
mov
jl
jns
aas
cwtl
fs
push
repz
popa
push
ja
stos
cld
mov
and
jne
pop
sahf
or
mov
sub
sbb
in
arpl
add
xor
popa
add
add
mov
rclb
cmp
push
push
stos
pop
mov
and
nopl
test
cmpsl
pop
scas
mov
js
fbstp
adc
or
inc
enter
into
jmp
sbb
ret
mov
lgs
insl
cld
push
mov
cmp
cmc
les
ror
sarb
fisubrl
mov
ss
clc
sbbl
mov
cmp
push
popf
sub
pop
outsb
jg
push
pop
mov
inc
rorb
repnz
pusha
daa
cwtl
add
into
lcall
lret
cwtl
mov
mov
and
sbb
push
loopne
mov
in
push
hlt
add
adc
jns
xchg
popa
xchg
inc
jg
xchg
mov
or
mov
int3
cmpsb
iret
imul
gs
enter
inc
out
ja
inc
data16
mov
loop
mov
jne
mov
mov
jle
popf
fcoms
rcrl
stos
jns
stos
pop
nop
lods
xchg
jecxz
jg
sbb
cwtl
out
pop
mov
adc
cmp
pop
xchg
cli
mov
stos
jg
leave
xchg
mov
and
repnz
testb
mov
cmc
add
in
lods
or
and
out
xchg
pop
pop
inc
xor
mov
sahf
imul
jmp
jl
pop
xchg
clc
mov
push
jo
movsb
pushf
add
fsubl
sbb
imul
fstp
and
stc
popf
push
push
int3
cmp
lahf
xchg
test
dec
pop
mov
xlat
and
popf
sahf
ja
fs
pushf
push
rcr
test
movsb
inc
aas
orl
cmpsl
movsl
fsubp
pop
test
fs
sub
insl
cwtl
lcall
in
unpckhps
stos
lds
jmp
mov
jecxz
sub
aaa
int
mov
ja
repnz
stc
repnz
mov
xor
int3
or
add
xor
cmpsb
sahf
je
insb
jo
xor
je
iret
xchg
lea
test
or
push
jb
stc
adc
cli
pop
push
lds
xchg
add
mov
test
cltd
inc
pop
add
fadds
dec
aad
jnp
push
test
mov
and
push
shll
push
push
movsb
jbe
dec
sbb
test
jo
dec
jmp
add
push
std
rcrb
out
xchg
lea
pop
push
stc
andb
fimull
push
leave
sub
aam
sbb
mov
xor
and
int3
xchg
std
icebp
js
call
or
cmp
add
xchg
notl
and
lock
mov
aas
mov
insl
or
jo
pop
outsl
lock
mov
inc
xchg
push
mov
inc
or
xchg
cs
ret
scas
mov
ret
lods
vpmacsdqh
dec
popf
and
mov
in
fdivs
jmp
ret
pop
or
lcall
or
test
push
pop
mov
sarl
inc
xchg
sub
push
fisttpl
mov
add
test
jno
fs
adc
aad
pop
out
lods
or
xchg
imul
sub
dec
xchg
push
sub
lahf
push
insb
scas
cmp
bnd
jb
jmp
inc
push
aas
lcall
xlat
je
sbb
cvttpd2dq
cmpsb
sbb
aas
test
divl
call
adc
clc
movsb
pusha
js
cmp
ja
sub
dec
popf
ljmp
jb
gs
adc
rcl
sub
pusha
outsl
xor
pop
mov
int
push
xchg
or
inc
scas
rcll
sbb
mov
push
mov
and
imul
sbb
push
out
and
mov
xchg
hlt
fdivr
add
inc
dec
ret
and
jb
aam
mov
mov
fwait
js
mov
movsb
stos
leave
test
lcall
icebp
stos
lret
popa
pop
ret
in
scas
jne
shrl
and
xchg
xchg
mov
adcl
ret
mov
inc
mov
cmp
pop
dec
inc
aaa
imul
lds
jge
movl
pushw
data16
out
pop
pushf
stos
sbb
into
inc
mov
pop
adc
inc
hlt
cwtl
clc
xor
fidivrs
pop
mov
sbb
maxps
aas
into
jmp
flds
out
xchg
sub
or
push
gs
xchg
pusha
jecxz
push
xchg
std
imul
js
sbb
sti
cmc
or
std
cwtl
xor
loop
jle
xchg
imul
int
clc
lret
jbe
or
sub
mov
jae
loopne
cs
pop
sbb
aam
inc
movsl
add
ret
or
and
daa
loope
cmp
lea
lock
and
popa
jecxz
mov
mov
or
cmpsb
dec
and
mov
inc
xchg
pop
ds
out
inc
stc
aaa
jmp
sub
ret
das
xor
lret
out
sub
aad
cld
fsubs
add
add
aad
orl
inc
out
mov
sbb
jg
pop
iret
pop
test
adc
enter
add
fwait
lret
gs
sub
jle
lcall
shl
filds
adc
or
jnp
daa
jecxz
push
mov
mov
add
cmp
push
xchg
inc
cmp
dec
outsb
pop
dec
stos
or
mov
push
push
pop
inc
test
jns
insl
ljmp
pop
and
mov
push
movsb
mov
gs
lahf
dec
cli
jne
fimull
sbb
jne
push
ret
push
inc
mov
hlt
clc
lock
hlt
inc
lock
rorl
and
mov
imul
sub
test
xchg
sub
bound
dec
scas
inc
cs
sbb
fs
sti
sbb
jle
push
ljmp
mov
andb
enter
sub
icebp
notl
addr16
out
mov
pop
dec
notb
dec
push
xlat
mov
imul
inc
jno
lret
daa
jo
and
mov
lods
mov
daa
add
stos
fdivl
filds
sti
xor
in
lods
pop
stos
icebp
inc
hlt
adc
outsl
insb
mov
add
fcmovne
rorl
popa
dec
test
fwait
int3
xchg
loop
dec
test
dec
pushf
ds
add
loope
int3
aas
lock
int
hlt
sarb
sbbl
imul
mov
jmp
and
mov
psrad
in
pusha
push
xchg
loopne
or
pop
test
movsl
jle
xor
outsb
out
aad
stos
dec
xchg
push
subb
addb
loope
dec
pop
lea
sbb
sub
dec
std
mov
lds
jge
sbb
repnz
mov
sub
mov
or
test
mov
push
out
arpl
mov
test
imul
pop
xlat
cmpl
mov
pop
xor
or
fimuls
test
addb
xchg
push
jl
lds
pusha
shl
lods
sahf
lahf
lea
aam
ljmp
outsb
jae
sub
mov
xor
js
not
sbb
mov
sub
xor
cltd
inc
rorl
in
ret
adc
outsb
pop
or
rcl
dec
jg
std
mov
pop
out
mov
lock
dec
test
cmc
xlat
mull
ftst
loopne
mov
mov
adc
or
push
pop
subb
dec
adc
push
aam
sahf
mov
rcrb
dec
fwait
inc
add
jmp
push
leave
xchg
add
std
add
xor
adc
test
out
cmp
sub
or
xor
jne
ss
pop
xchg
mov
jl
outsb
xchg
xor
mov
pop
add
push
xchg
out
and
cwtl
mov
dec
insb
daa
fnstcw
jmp
in
sbb
ljmp
leave
xchg
shll
add
adc
jecxz
pop
pop
mov
lahf
addr16
ja
inc
jns
sub
cltd
jbe
and
mov
movsb
repz
lods
mov
ret
insl
cli
popf
idivl
mov
pusha
sub
mov
sub
pop
xor
in
shll
adc
ljmp
push
push
jne
arpl
or
xchg
insl
dec
xor
jb
pop
push
aad
or
dec
push
fistpl
les
sbb
xorb
mov
test
mov
test
aas
push
inc
inc
and
pop
sbbb
sub
movsl
or
pusha
icebp
cmpsb
std
scas
out
mov
mov
lahf
test
and
dec
jmp
lret
and
jp
add
cld
cld
push
enter
hlt
mov
push
stc
inc
cwtl
sti
inc
xor
or
sub
test
mov
ret
mov
dec
push
bound
je
je
mov
cmp
movq
sbb
jmp
adcb
xchg
adc
enter
imul
lret
cltd
ret
mov
shll
pop
jecxz
pop
aad
loop
add
xor
jae
ljmp
push
or
daa
aas
and
pop
and
loop
ficomps
pop
fwait
adc
xlat
fcmove
subl
lahf
jg
rol
xchg
stc
sub
arpl
push
outsb
jnp
mov
std
aaa
stos
push
sub
xchg
pushf
shlb
xchg
bound
fwait
adc
jno
jmp
sub
mov
jne
mov
fildl
insb
xor
test
and
inc
add
inc
xlat
xchg
loopne
push
push
divb
adc
sbb
or
ljmp
mov
fdivs
loope
enter
inc
cltd
ficomps
mov
sub
addr16
cmc
mov
and
sub
imul
loope
jo
push
dec
mov
es
ss
pushf
dec
pop
mov
sbb
nop
mov
jo
cmc
adc
rcr
jg
mov
sub
add
hlt
js
mov
cwtl
idivb
fstl
xchg
mov
scas
mov
add
dec
pusha
or
sbb
xor
cmc
pop
mov
mov
insl
or
stos
cltd
sub
adc
sbbb
xor
aas
xlat
xchg
in
mov
test
repz
mov
cltd
lock
mov
jae
fmuls
repnz
xchg
stos
out
arpl
mov
push
les
stos
nopl
dec
add
inc
std
fs
jno
jb
xor
adc
mov
or
or
and
sub
pop
xchg
loopne
leave
imul
mov
inc
xlat
jmp
dec
cmp
pop
mov
jp
leave
pop
movsb
and
ja
jl
inc
psrld
and
pop
pop
sub
cmp
out
push
push
cli
sub
xchg
cli
sbb
shl
hlt
in
repnz
cmp
movsl
sub
sbb
repnz
mov
imul
mov
sbb
jnp
jmp
cmp
test
push
xor
testb
jae
jmp
xchg
xchg
je
shrb
xlat
add
fisttps
adc
pop
aaa
hlt
or
rorb
add
dec
adc
inc
addb
jmp
js
sub
fnsave
xchg
lock
leave
popf
and
inc
pop
xor
xor
sub
inc
repnz
je
aam
fldcw
adcl
lock
testb
shll
adc
sub
pop
mov
xchg
rorl
ss
test
jmp
dec
btc
lret
inc
mov
push
adc
dec
xlat
repnz
popa
or
outsl
decb
jno
out
mov
rcr
mov
cmp
adc
aad
mov
pop
push
call
popl
addr16
push
ja
push
stos
aaa
mov
lods
cmp
or
xlat
dec
sbb
fsubs
mov
mov
sbb
add
aad
pushf
xor
int3
push
inc
mov
ret
and
outsb
das
fistl
in
stc
test
out
jns
xchg
cmp
lret
jg
xchg
cmpsl
inc
ss
push
cmp
pop
adcl
in
lods
enter
and
test
test
xor
mov
cmp
outsl
and
mov
add
pushw
push
cmp
dec
xchg
es
insl
sahf
insl
shrl
mov
dec
push
add
add
and
shrl
inc
aaa
and
cmc
fsub
or
test
outsl
stos
ss
js
clc
sti
jno
into
aaa
sbb
in
out
leave
jb
adc
out
mov
xchg
pop
ljmp
loope
cmpsb
inc
jle
fmuls
outsl
sti
inc
arpl
lcall
lcall
push
xorb
int3
mov
dec
loope
stos
push
js
adc
pop
lcall
and
dec
cld
xchg
push
cwtl
mull
idivl
mov
lds
sub
mov
jp
xor
out
insl
or
mov
sarl
adc
mov
cmpsl
xchg
or
lods
cmp
xor
cmp
loop
aaa
add
push
ficoml
int3
shrb
testb
mov
mov
pop
sbb
push
mov
xchg
aaa
repnz
mov
stos
adc
in
xchg
sbb
enter
cld
lds
adc
aas
mov
clc
push
push
ret
sbb
icebp
jne
inc
imul
mov
fucom
lods
lcall
ds
hlt
out
icebp
pusha
sbbb
es
pushw
es
bound
popf
addr16
fisttps
dec
ljmp
cmp
add
push
aaa
mov
daa
jb
push
dec
int3
pop
loope
jo
cwtl
je
sub
shlb
xchg
ljmp
xor
xor
icebp
xor
repnz
jl
inc
xchg
lcall
or
or
dec
push
mov
enter
fstps
inc
stos
gs
dec
mov
enter
sub
and
repnz
adc
int
out
push
push
les
scas
fcmovb
cmc
lret
shr
imul
xor
add
roll
jb
jg
jecxz
cmp
gs
xor
repz
outsl
fisttps
sti
addb
xchg
sbb
mov
outsl
jecxz
jne
mov
cmpsb
xchg
in
xorl
adc
and
or
pop
jl
dec
inc
xchg
pop
pop
cwtl
mov
cltd
sub
cmp
xchg
or
roll
push
imul
js
sub
xor
inc
inc
jb
js
pop
or
dec
adc
push
addr16
shl
jp
mov
sahf
cli
pop
adc
sti
sbb
adc
out
lds
inc
aam
aas
es
sbb
mov
icebp
das
or
add
lahf
or
nop
mov
jg
roll
popf
addr16
arpl
loope
fsubl
mov
mov
lret
adc
arpl
mov
scas
add
and
mov
in
jmp
lods
out
icebp
mov
pop
sbb
adc
mov
punpckhbw
cltd
pop
iret
pushf
xchg
mov
loopne
mov
mov
lret
sub
cmp
pop
inc
xor
js
inc
xor
icebp
cmp
mov
sub
and
pop
pop
cmc
jge
insl
outsb
mov
sbb
or
push
push
dec
ficoml
lahf
push
inc
xchg
mov
xchg
aad
popf
push
mov
mov
sub
dec
pushf
xchg
mov
int3
std
neg
inc
mov
xor
pop
stc
fsub
data16
mov
jp
stos
test
add
push
push
ss
repnz
xchg
imul
sub
loop,pt
sbb
jno
xor
sub
mov
push
into
cmp
imul
mov
je
pop
test
sar
stc
or
stos
sub
xor
stos
jbe
or
xchg
mov
jnp
lods
push
sub
test
aaa
mov
aad
cmp
scas
in
jne
cld
inc
add
outsb
js
jmp
mov
cmp
dec
sub
sbb
aad
pop
inc
shlb
gs
rolb
adc
dec
fimuls
xor
cmp
rcrl
mov
sub
jne
pusha
loop
int
mov
xlat
xchg
in
out
or
adc
shrl
js
pop
or
xchg
fisttps
sub
lret
jae
xchg
repnz
loope
cli
sti
cmc
shll
xchg
repnz
lods
test
int3
dec
jae
sub
xchg
push
sbb
shrb
jmp
push
jae
add
pusha
dec
push
ljmp
jns
test
filds
push
push
jns
mov
push
pop
ficoms
out
into
jmp
cmp
dec
ret
negb
sbb
xlat
fdivr
ljmp
dec
cmp
jmp
icebp
lds
mov
scas
into
pop
push
cmc
ret
sub
stos
lock
xchg
hlt
mov
mov
mov
out
sbb
mov
xchg
icebp
push
lods
aad
cltd
push
jb
insb
std
imul
jecxz
pop
sub
jecxz
mov
fdivrl
iret
adc
mov
jmp
or
out
inc
or
mov
lret
xchg
push
mov
cmp
push
mov
fs
call
loope
lret
xor
imul
das
mov
out
lods
xchg
mov
xor
mov
int3
arpl
xchg
cld
stos
adc
mov
sbb
and
sbb
cs
sub
xor
std
mov
push
mov
insl
std
jecxz
aad
imul
add
loop
push
imul
repz
sub
mov
pop
out
lea
mov
xlat
je
sbb
cmp
xchg
in
cmp
jge
adcb
je
stos
jo
xchg
nop
mov
jge
jbe
xor
mov
sbb
xchg
add
ljmp
mov
cwtl
lock
xor
repz
sti
pop
add
leave
push
insb
lods
pop
jbe
or
cmp
push
mov
je
out
hlt
push
sbb
stos
inc
lahf
test
into
daa
jnp
sahf
cmpsb
push
mov
push
xlat
out
enter
pop
out
leave
jb
inc
in
adcl
rcl
sub
xor
inc
mov
mov
in
sub
icebp
cmpsb
int3
xchg
cmp
jae
inc
pop
dec
fidivl
icebp
mov
or
add
hlt
mov
push
rolb
iret
pop
addl
xor
cltd
jl
pop
pop
out
push
movsb
cmp
jns
cmc
loop
loop
xor
enter
cmovnp
es
pop
pop
iret
add
push
mov
sahf
or
jp
mov
pop
cli
sarl
dec
mov
icebp
cmp
bound
adc
inc
mov
cmp
adc
rcrl
std
popf
sbb
icebp
lahf
push
add
push
cmc
mov
add
push
xchg
shll
fdivr
sbbl
sub
xlat
loope
and
add
gs
and
loop
jb
add
les
repnz
jno
pop
loop
js
and
jae
sbb
outsl
mov
inc
mov
scas
cltd
dec
or
in
jmp
mov
mov
jb
subb
in
sbb
cs
addl
inc
stos
and
inc
ja
aam
mov
cmc
call
mov
xor
push
mov
jnp
popa
push
push
test
add
clc
insl
movsl
outsb
mov
cmpsl
push
inc
mov
pop
call
pop
xor
mov
push
inc
out
lods
jne
xchg
pop
rcll
test
andl
lea
ss
nop
out
and
lods
xchg
popf
add
popf
mov
lds
ja
jle
inc
mov
push
xchg
test
filds
ljmp
imul
cmc
loopne
out
sbb
hlt
cmc
std
outsb
adc
cld
xchg
addl
dec
sub
pop
add
push
test
mov
jo
or
pop
pop
xchg
pop
cltd
gs
cli
xor
pushl
stos
xchg
sbb
adcl
jno
movsl
lods
cld
dec
rcrl
jae
pop
pushw
xchg
dec
pop
sbb
std
dec
mov
add
xchg
cmpsb
rclb
das
lret
inc
or
sub
sbb
cmp
mov
cltd
dec
sub
xor
add
or
inc
in
ret
fisttpl
push
lret
dec
mov
sub
jge
dec
aad
pop
movsb
cmp
test
pop
inc
and
push
hlt
gs
mov
push
dec
push
scas
clc
xchg
jecxz
jne
push
jecxz
mov
test
imul
bt
popa
negb
mov
mov
xlat
cmp
icebp
ljmp
ss
and
aaa
xor
adc
add
dec
xchg
lds
in
imul
xchg
adc
lods
adc
dec
insl
mov
js
ss
cmp
in
les
cmp
inc
mov
sub
sbb
outsb
test
stos
adc
aas
dec
fistpl
add
push
mov
les
imul
or
fucomip
sub
ljmp
jne
std
jnp
jbe
xor
cmp
mov
dec
lds
movsl
sar
and
arpl
inc
xchg
cmp
test
mov
push
lret
popa
popa
mov
sahf
sarb
sub
sbb
test
and
bound
xor
addl
daa
jge
clc
bound
ljmp
repnz
xchg
int
sub
outsl
ret
pop
int3
pop
xchg
mov
ds
jl
jle
inc
jb
rol
mov
inc
mov
xchg
jg
jp
fwait
dec
cmpsl
jge
jbe
mov
aaa
das
ds
mov
sbb
fistps
repnz
xchg
stos
cld
jp
push
inc
mov
pop
sti
leave
sub
les
xchg
pop
jmp
data16
mov
stos
adc
stc
mov
mov
add
add
int
dec
rorb
loopne
jbe
mov
lret
test
je
cmp
pop
movq
mov
repnz
in
lcall
mov
ja
adc
repnz
pop
mov
mov
addr16
fnstsw
fstps
and
adc
in
push
test
jp
and
bound
jle
jp
sub
cmpsl
dec
mov
xchg
call
and
pop
jns,pn
adc
jmp
add
push
ja
mov
negb
sub
mov
or
mov
nop
mov
xchg
lret
xchg
out
in
mov
mov
decb
out
out
loope
sbb
out
xchg
sub
ja
pushf
mov
loopne
in
fsubs
ljmp
shll
and
orl
cmpsb
mov
xor
scas
push
jg
sbb
jns
rolb
les
mov
mov
mov
pusha
jnp
imul
or
arpl
out
pop
mov
jmp
mov
sbb
mov
out
pop
les
std
mov
out
call
xchg
adc
xchg
loop
and
cmp
pusha
repz
out
or
xchg
imul
bound
cmp
js
mov
jno
dec
loope
dec
cmc
stos
cmp
pop
loope
pushf
and
fwait
gs
xchg
or
mov
push
xlat
aam
shl
stos
push
bound
jg
xchg
push
lea
xor
lods
jg
insl
cs
sub
fildl
repnz
cmpsb
adcl
mov
push
mov
mov
inc
mov
or
add
vbroadcastf32x8
daa
scas
scas
sub
sub
adc
mov
mov
in
inc
xchg
loop
fldenv
sahf
cwtl
into
fldt
jo
test
push
ja
out
sbb
mov
scas
filds
push
test
ds
or
inc
cmp
mov
scas
call
fisubrs
in
insb
aam
jb
sub
mov
aaa
icebp
dec
ss
mulb
stc
dec
mov
lods
xchg
sahf
push
outsl
shrb
fldl
and
in
xor
and
push
add
or
xchg
outsl
pop
sbb
les
adcl
add
outsl
lret
icebp
jno
jecxz
inc
pusha
data16
sub
packssdw
mov
data16
pop
jge
mov
pop
ret
mov
dec
xchg
jle
and
xchg
push
jge
push
aaa
fnstenv
mov
inc
or
gs
sub
pop
fcomp
add
gs
xor
adc
sbb
sub
pop
pop
shlb
mov
dec
sbb
mov
rcl
xor
xchg
mov
add
fistps
enter
or
cmp
mov
hlt
mov
leave
add
sbb
lock
ja
push
pop
xor
inc
mov
and
xor
mov
stc
mov
push
mov
stos
sub
sub
dec
fnstsw
out
jmp
setnp
xchg
je
or
gs
pop
js
xor
inc
jg
dec
daa
aas
out
gs
xchg
lahf
add
addl
repnz
loopne
into
add
jns
add
xchg
mov
jecxz
stos
mov
cli
shll
outsl
sbbl
mov
xor
pop
cs
lock
mov
outsl
sbbl
sbb
mov
xchg
xchg
pop
inc
ret
stos
xor
mov
xchg
cltd
repnz
pop
mov
push
adc
jo
push
movsb
adc
mov
fdivr
fsincos
push
pop
aaa
inc
cmp
jne
lock
push
jnp
inc
xor
jp
ss
mov
js
ret
push
xchg
aam
push
or
rcl
push
fwait
cltd
aas
mov
push
push
cld
sahf
out
leave
jae
mov
add
jnp
test
dec
mov
setno
insb
icebp
cmpsb
or
lret
ret
addr16
jnp
jg
pop
pop
jle
add
push
xchg
call
fadds
call
push
push
stc
cmp
scas
outsl
push
xor
lea
xor
pop
cmp
mov
ss
in
push
mov
mov
mov
cmp
xchg
sub
and
or
jmp
add
adc
in
lock
hlt
rorl
dec
mov
mov
rcrb
xchg
xchg
daa
cmpsl
sti
cmp
adc
out
pop
dec
js
jo
jp
mov
pusha
test
xor
pop
jb
insl
mov
and
inc
xchg
int
or
lahf
in
jle
pop
cmp
stos
rorb
cmp
sbb
aas
scas
daa
push
int3
hlt
fwait
imul
iret
popl
ret
das
push
push
hlt
and
and
movsb
push
mov
arpl
inc
shl
cmp
jne
push
mov
stos
movsl
mov
in
add
pop
xchg
adc
lds
cmpsl
jp
inc
mov
loop
add
testl
fcoml
mov
pop
push
mov
xchg
mov
vmwrite
jecxz
ds
push
lret
test
lock
mov
xchg
pop
adc
lods
push
addr16
cmp
inc
pop
push
mov
xchg
loope
mov
mov
push
dec
push
test
sbbl
divb
cmp
sub
frstor
mov
mov
aaa
icebp
stc
repz
movl
arpl
xchg
outsb
icebp
cmpsb
and
add
jl
mov
add
fs
mov
bound
popa
jo
push
repz
mov
cltd
ret
cli
pop
stc
bound
cs
mov
sbb
or
movsb
jbe
loope
and
in
sub
xchg
lds
sub
fildll
pop
fidivrs
aas
mov
adc
repnz
aam
cmpsl
mov
or
out
subb
jne
out
addb
repz
inc
mov
xor
iret
popf
adc
loop
and
ljmp
push
bound
jae
rclb
lock
and
icebp
fstpt
push
xor
clc
xchg
in
popf
cmpsb
dec
xor
cld
sbb
jae
push
or
dec
sub
addb
fnstenv
xor
sbb
test
cli
loop
cld
and
cmc
lds
cli
mov
popf
jge
xor
push
and
bound
mov
xchg
jecxz
jmp
mov
mov
daa
imul
sub
mov
xchg
xchg
or
pop
rorl
mov
in
or
repnz
mov
and
in
into
and
js
and
iret
fwait
ret
fcompl
or
nop
xor
and
mov
icebp
addr16
aas
call
arpl
push
test
aaa
xor
test
pop
int3
in
cmp
push
and
repnz
or
sbb
mov
insb
test
and
lahf
scas
sti
and
fnstsw
sub
mov
jbe
xor
ss
test
pshufw
push
sub
xchg
rep
movsl
test
mov
mov
data16
mov
or
in
pop
cmpsb
movsb
sub
pop
xlat
xchg
jmp
xor
and
imul
dec
lock
pop
adc
sbb
sbb
int
jge
sbb
inc
pop
or
xchg
sbb
ljmp
aad
jbe
imul
ljmp
fiaddl
xchg
negb
jmp
sub
mov
aam
jb
mov
and
les
mov
mov
xchg
xor
aam
xorb
enter
pushf
ja
dec
or
inc
scas
clc
dec
jnp
scas
jle
mov
loope
mov
or
dec
jge
mov
xchg
lret
push
stos
mov
rcrb
mov
push
sahf
ret
adc
bnd
cmp
cmp
inc
mov
int
out
xor
mov
mov
mov
mov
imul
adc
add
fbld
adc
and
fidivl
lods
sub
push
lret
popa
lods
inc
nop
rcr
sub
xchg
aas
jmp
mov
mov
pop
or
lahf
inc
or
out
je
mov
adc
insb
leave
out
sti
jge
add
cmpsl
or
loopne
loop
mov
xchg
cmp
adc
test
in
mov
pop
ret
pop
leave
adc
icebp
adc
fiadds
out
jo
imul
pop
jmp
cli
adc
pop
pop
lahf
nop
sbb
int3
dec
sub
pop
arpl
cs
dec
pop
sub
in
xor
sbb
mov
mov
nop
out
mov
jne
xor
mov
inc
jno
cwtl
aaa
test
lods
jle
adc
jmp
ss
xor
mov
mov
push
mov
lret
push
jge
mov
jmp
pushf
lret
repz
fstps
adc
pop
test
push
cmp
int3
aas
or
push
int
dec
mov
xchg
xor
cmc
idivl
pop
mov
mov
test
loopne
lea
dec
addr16
std
dec
rcrb
sub
mov
cwtl
pop
cmp
mov
clc
cmpsb
out
in
push
ljmp
int
ss
in
mov
stc
dec
std
cmpsb
xchg
repz
ds
scas
xor
sbb
mov
popf
sti
dec
icebp
lock
movsb
ret
repz
aad
int3
or
test
pushf
icebp
sti
daa
test
jle
adc
gs
sub
pop
cmc
das
sbb
loopne
mov
lret
cmp
cmp
inc
mov
xorb
or
jnp
fcoml
fwait
cltd
popa
shrl
outsl
xor
fnstcw
in
cmc
lds
inc
or
in
aam
cmp
data16
into
push
mov
inc
jmp
clc
fbld
jmp
imul
add
or
jl
or
xchg
iret
inc
sbb
pop
fcmovne
inc
mov
xor
lea
dec
or
mov
pop
jge
divl
xchg
cmp
jo
pop
loopne
into
mov
pop
mov
sti
sbb
mov
imul
jl
pop
lods
stc
sub
jl
cmp
fcmove
popa
dec
test
sbb
cli
mov
repz
fwait
pop
addr16
outsb
xchg
sub
js
mov
xchg
pop
neg
or
lea
push
js
mov
dec
aad
int3
sub
xor
pop
lret
dec
mov
cmpl
cmp
mov
outsl
push
shlb
mov
mov
jecxz
ficoml
out
inc
ret
inc
inc
popl
lcall
das
push
aad
test
int3
sub
jns
mov
popa
cmpsl
stos
jecxz
or
mull
jae
jae
xor
les
mov
mov
push
imul
jae
imul
out
pushl
clc
test
dec
mov
popa
sarb
ss
cs
fs
inc
rcl
aam
fisttpll
sub
sti
add
clc
sub
jne
mov
add
movsl
out
mov
jmp
loop
xchg
sbb
sbb
pop
pusha
dec
cmp
cld
aad
mov
movsb
xor
les
push
in
or
scas
or
lret
add
mov
movsl
inc
pop
mov
and
push
mov
add
pushw
inc
shrl
pop
or
cmp
shl
out
cmp
adc
sub
cld
pop
cli
xor
pop
inc
push
sub
daa
inc
sbb
jno
sti
mov
push
fcmovnb
or
jbe
outsl
enter
cmpsb
and
and
loop
addb
imul
push
xlat
test
mov
subb
clc
loop
icebp
ja
scas
das
clc
fistl
fnstsw
xor
inc
inc
mov
je
cmp
scas
cmp
push
jp
enter
xchg
data16
hlt
or
pop
cmp
pop
repnz
test
cmp
mov
jne
sbb
cmp
dec
ret
dec
sub
sub
ds
clc
push
xchg
mov
sub
dec
std
scas
jb
out
inc
outsb
ja
mov
cmp
sub
mov
lret
gs
push
adc
or
mov
xor
sbb
bound
adc
outsl
or
push
mov
pop
xchg
xor
pusha
or
loop
aam
and
jnp
cli
xchg
pop
push
or
bound
ret
add
adc
and
mov
inc
fildl
sub
data16
push
repz
nop
lods
xchg
inc
sbb
xlat
out
stos
loopne
jle
xchg
add
cs
and
cmp
dec
and
stos
in
ret
test
xchg
adc
mov
lods
mov
pushf
icebp
pop
lahf
bound
push
ss
xchg
add
lcall
mov
mov
cwtl
inc
push
cld
lcall
fsubs
cmp
or
outsb
dec
adc
or
in
and
sbb
mov
sbb
cmp
xchg
cmp
movsl
test
pop
push
adcb
add
clc
in
sbb
fdivs
stos
add
sbb
mov
and
add
push
lds
add
int3
fisubrs
fcoml
adcl
in
stos
lods
xchg
inc
iret
mov
jmp
das
in
jl
jae
pop
lock
sub
fsubr
lcall
cmc
pushf
jbe
or
cmpsl
mov
xchg
lret
adc
out
ja
das
scas
push
shll
cld
cltd
aad
cmp
jb
mov
push
xchg
cmpsl
clc
rclb
ljmp
jo
xlat
in
pop
adc
addr16
mov
mov
mov
test
and
jp
sub
mov
cmc
movl
test
in
dec
jg
fisubs
dec
sub
insb
leave
ret
dec
xchg
xchg
adc
sti
lcall
inc
push
in
and
mov
or
mov
adc
test
std
test
pop
lock
aad
and
leave
std
negl
mov
jle
or
sub
incl
rol
mov
movsb
and
push
fadd
sub
test
call
jo
jl
or
pushf
mov
jg
fnsave
pop
pop
divl
addl
jne
xchg
inc
push
sbb
mov
movsb
adc
adc
cmc
push
cmp
je
pop
test
adc
cld
sub
sub
movsb
out
fcoms
dec
pop
mov
int3
fdivl
mov
ds
ds
ss
push
lock
mov
cmp
lock
inc
dec
xor
repz
divl
aaa
icebp
repz
xor
fisubs
pusha
loop
data16
rorl
gs
cwtl
or
mov
and
mov
mov
add
in
scas
xor
in
and
or
jle
jmp
sub
pop
test
xchg
rep
jb
and
mov
inc
mov
xor
mov
cmp
xor
sbb
mov
movl
mov
add
cmpb
inc
lret
ss
inc
scas
mov
je
pop
cmpsb
test
sbb
nop
mov
xor
push
mov
jo
mov
mov
pop
xchg
mov
stos
or
inc
xchg
xor
aam
dec
mov
push
inc
mov
dec
cmp
ret
cltd
icebp
xchg
repz
pop
test
ret
xor
pop
in
push
mov
lret
jo
push
lock
mov
sbb
lods
and
std
test
dec
mov
push
add
gs
dec
jbe
and
adc
lcall
adc
sbb
pop
adc
pop
lods
jno
inc
adcl
ret
nop
xchg
or
xchg
arpl
pop
mov
add
mov
mov
jns
jle
jp
cmp
jne
fcompl
call
jnp
adc
jo,pt
lahf
fistps
fimull
sbb
fbstp
or
aaa
sbb
in
push
ret
inc
popa
add
push
dec
cli
arpl
je
inc
push
icebp
dec
push
aad
shlb
scas
out
fwait
pop
xor
push
cli
jg
and
mov
xor
in
push
lock
sub
xchg
mov
mov
ss
mov
pop
push
aam
jb
mov
push
push
sbb
pop
xor
and
fidivl
cli
xor
sbb
in
or
dec
ds
inc
andb
lods
and
push
leave
das
push
or
sbbl
push
xor
add
or
int
cs
ret
int3
mov
lcall
push
jge
jge
pop
mov
mov
mov
xchg
rorb
adc
xor
in
fstpt
xchg
sub
xchg
push
and
pop
out
pop
test
andl
int3
mov
sbb
fsubrs
mov
std
xchg
pop
dec
cltd
movsl
in
cld
push
adc
and
add
xchg
jbe
fists
jmp
push
stos
xor
loop
sbb
xchg
lods
cmpsl
mov
mov
nop
sub
xor
mov
bound
xchg
gs
inc
dec
and
add
lahf
add
xor
data16
sub
dec
movsl
ss
jecxz
mov
inc
iret
xchg
mov
int3
or
cmc
cmp
pusha
aam
popa
cmpsb
pop
pusha
jbe
gs
jno
xchg
inc
lcall
cmp
leave
rep
repz
icebp
aas
movsb
ret
in
pop
adcb
push
into
push
loop
cmp
mov
xchg
mov
mov
fstl
adc
cmpsl
scas
push
lods
adc
adc
xor
xchg
inc
mov
subl
mov
fidivrl
sbb
mov
cmp
push
scas
cmp
sbb
fadds
lock
mov
out
cmp
imul
addr16
pop
insl
stos
adc
outsl
sbb
ficoml
mov
outsb
or
stos
js
jle
addr16
dec
scas
sar
enter
ret
cwtl
jno
pop
mov
imul
sub
dec
inc
les
in
push
ja,pt
mov
in
lock
cmpsl
jno
pop
pop
fdivrs
in
add
mov
xchg
into
adc
into
jae
jmp
mov
dec
jmp
sub
mov
in
inc
push
push
jp
jg
ss
or
inc
mov
and
cli
aaa
es
xchg
sub
and
sahf
pop
pop
cmp
jmp
icebp
lahf
dec
gs
hlt
popa
movsb
cmp
adc
sub
into
dec
bound
jmp
push
and
dec
aad
mov
xchg
test
pop
popf
cmp
push
jge
inc
adc
icebp
sbb
ret
nop
mov
pop
arpl
mov
xchg
in
out
dec
lcall
iret
shr
aaa
mov
sahf
pop
dec
sub
subl
mov
inc
or
cmpsl
icebp
sub
cmpsl
jp
mov
popl
cmp
pop
leave
xchg
lret
mov
lea
je
xchg
sbb
push
dec
push
mov
sbb
in
sarl
cmp
pushf
pop
arpl
gs
ljmp
fmull
insb
xlat
add
add
es
push
xchg
pop
call
aas
sub
cmpsb
inc
mov
mov
xchg
push
jle
mov
xchg
dec
cs
add
repz
popf
hlt
dec
sbb
cmp
xor
into
int3
xchg
xchg
mov
lahf
push
mov
push
scas
lock
xchg
out
sbb
push
mov
stos
jnp
pop
stos
cmp
pop
cwtl
push
enter
push
push
popf
and
rorl
sub
rorl
pop
int3
stos
add
loope
jmp
icebp
repz
jb
cs
jmp
sub
and
inc
push
xor
mov
enter
mov
mov
lds
cmp
popf
xor
xor
jo
mov
jmp
icebp
jne
imul
ret
and
dec
pop
xor
dec
mov
lods
jecxz
aaa
lea
pop
call
sbbb
lcall
xor
insb
movsb
adc
hlt
cs
js
pop
dec
lea
or
movsl
mov
jl
sub
jne
test
cmp
outsb
aam
lods
dec
adc
push
shrb
xchg
mov
mov
adc
psubw
into
cs
mov
push
mov
xchg
and
jl
pop
add
rcrb
mov
mov
out
aam
addr16
push
leave
scas
cmp
sub
jle
popa
into
push
lahf
jle
add
jle
push
jle
fwait
cmc
and
jg
sahf
cmpsb
clc
clc
sbb
shrb
ds
cmc
pop
aad
xchg
push
inc
loopne
les
or
inc
cld
lds
int3
dec
popf
ljmp
cld
cmp
mov
shrb
fidivrs
imul
mov
out
sub
mov
sti
xchg
add
enter
int3
xlat
push
xor
cs
stc
je
xor
daa
cwtl
cld
mov
sar
push
cltd
jecxz
mov
fs
clc
arpl
fiaddl
rclb
xchg
mov
lock
mov
addr16
xchg
mov
shll
cltd
xor
add
loopne
mov
sub
cmp
xchg
xchg
pop
add
sub
insb
arpl
mov
jns
mov
adc
xor
pop
jmp
fdivs
movsb
pop
mov
cmp
mov
jp
dec
test
repnz
cli
in
lret
popf
dec
inc
pop
mov
sahf
inc
push
inc
pop
insb
xor
stos
pop
test
xor
aas
shr
xchg
adc
aam
mov
and
or
stos
jbe
sbb
ffree
xchg
aad
xchg
pop
push
ret
pop
shlb
dec
cld
dec
dec
and
sbb
mov
movl
cltd
data16
mov
or
outsb
lret
outsb
pop
cwtl
xchg
cmp
in
in
adc
test
or
sub
jl
mov
xchg
clc
fsubs
mov
pop
pop
inc
das
mov
cli
lahf
mov
bound
xor
cmpsl
inc
sub
mov
add
sub
sti
shll
inc
into
inc
or
cmp
push
insb
xor
cmp
sarb
dec
scas
subl
int
xchg
cmpsb
add
mov
rcl
pushf
dec
push
jg
inc
or
xchg
push
gs
sub
in
loopne
ljmp
xchg
clc
mov
dec
std
and
aam
fisttps
add
ret
sbb
stos
pop
cmpsb
ja
push
imul
movsb
andl
iret
xor
push
push
aas
dec
repz
xchg
iret
int3
fmul
rorl
dec
pop
push
inc
lods
bound
cmpsl
cmp
push
and
ss
adc
and
dec
call
cmp
pushf
lds
sbb
mov
divb
test
xchg
mov
and
cmc
ljmp
loopne
adcl
or
fistl
push
add
lods
mov
cmp
mov
call
dec
add
jecxz
outsb
xchg
enter
adc
jg
outsl
pop
mov
subl
sbb
popl
mov
ljmp
cwtl
adc
lret
iret
aaa
leave
xchg
mov
sbb
test
mov
xor
pusha
cmp
testb
pusha
dec
dec
cmpsl
or
test
dec
mov
aaa
or
jp
loop
xchg
js
mov
push
jno
mov
cmp
mov
push
or
inc
insl
pushf
inc
mov
xor
push
loope
sarl
push
pop
insb
mov
cmp
add
subl
jge
xor
fdivrl
out
mov
stc
psrld
cmp
incb
mov
int3
sahf
mov
xchg
xchg
fnsave
ds
pop
xchg
sti
xchg
es
jbe
into
xor
fs
jb
cmp
cltd
add
and
cmp
addr16
mov
sub
xchg
enter
mov
imul
cmpsl
aas
mov
lods
ljmp
lods
adc
lods
sbb
mov
stc
mov
into
push
mov
push
movsl
inc
mov
cli
and
jno
cmpsb
scas
adc
dec
dec
sahf
mov
idiv
or
or
bound
outsb
push
push
lods
es
stc
cmp
adcl
lea
pop
add
cmp
pop
dec
pop
pop
inc
sub
mov
xchg
enter
sub
and
out
in
das
fwait
xor
pop
push
or
xchg
jae
xchg
imul
inc
mov
jne
xor
pop
std
xchg
jbe
mov
cld
xchg
push
sub
adc
pop
pop
ljmp
outsl
cmp
sbb
out
cmpsl
pop
gs
mov
in
dec
mov
lock
mov
cmc
push
mov
pop
mov
jno
lahf
dec
andl
sub
xchg
lret
pop
or
jmp
xor
push
xor
lahf
dec
loopne
scas
cmp
orl
cltd
mov
movsl
mov
mov
mov
loopne
into
adc
mov
dec
test
jge
push
add
jge
push
add
lret
ret
dec
inc
into
mov
popa
negb
mov
popa
loope
dec
fstl
cmp
add
pop
push
test
xchg
test
rcr
add
movsb
stc
icebp
jecxz
clc
bound
sbb
das
ja
lcall
mov
add
sbb
push
mov
mov
add
and
lea
in
in
sub
inc
sbb
or
sbb
call
jbe
out
sahf
div
or
mov
daa
fnstenv
mov
dec
inc
fcoms
mov
inc
pop
mov
pop
out
fcmovb
clc
ret
mov
cmpb
mov
and
sub
mov
xor
inc
cmp
jae
cmc
aas
cs
adc
inc
pop
pop
inc
imul
jle
orb
mov
imull
or
sub
mov
ret
mov
insb
aas
xor
and
js
pop
pop
ss
repnz
gs
xchg
insl
push
and
fnsave
pushf
add
popf
and
pusha
and
adc
xorb
cmp
xchg
cmp
sub
sbb
xchg
rcrb
pop
bound
inc
daa
inc
and
cmp
jns
add
in
test
ds
mov
jno
dec
sbb
sub
mov
clc
mov
lods
test
lock
lea
mov
jb
jge
add
ss
jae
inc
xor
push
out
xor
imul
sbb
jne
pop
out
std
sar
xchg
fdivrs
sub
dec
sbbb
sub
lcall
inc
pop
adc
adc
xchg
xor
in
lret
push
push
mov
mov
mov
shr
fsub
jbe
in
push
mov
stc
mov
sbb
aad
fisttpl
mov
jb
mov
call
call
sub
jae
js
ficoml
mov
sahf
jnp
xor
add
in
mov
mov
in
pop
and
mov
sbb
xor
jo
mov
add
inc
cli
out
xor
into
dec
jne
mov
gs
dec
shll
xor
mov
mov
cs
xchg
pop
mov
scas
push
xchg
adc
ss
sub
aas
xor
sub
sbb
xchg
insl
mov
icebp
adc
jnp
imul
test
push
ficoms
inc
das
mov
mov
inc
pushf
mov
lret
out
add
lods
pop
push
inc
int
mov
imul
addb
cld
aaa
rorl
mov
sbb
in
hlt
mov
jg
push
fisttpl
sub
mov
cs
xchg
dec
sbb
xor
xchg
fcoml
dec
pop
cmc
push
fsubs
inc
sub
popa
adc
mov
jecxz
push
push
divl
leave
pop
test
ret
jbe,pt
in
pop
mov
and
cmp
icebp
mov
and
xchg
les
lret
mov
pop
push
mov
sbb
mov
jno
gs
stc
fcmovnb
imul
mov
loope
xchg
mov
je
inc
fsts
or
cmp
inc
pop
insb
std
mov
ja
test
cmp
cwtl
test
mov
sbb
cmp
dec
pop
stos
in
jnp
mov
test
mov
cmp
and
fstps
jecxz
lret
sub
sbb
sub
loop
dec
scas
cwtl
pop
addr16
arpl
fdivp
jecxz
adc
cmp
jbe
das
sahf
sbb
pop
mov
sbb
dec
arpl
pop
xchg
sub
add
jo
jcxz
jb
pusha
adc
sbbl
sbb
pop
pop
cmpsb
cmp
in
adc
repz
loopne
stos
int
pushfw
mov
popa
lock
aas
mov
pop
push
sar
dec
aas
aad
in
push
fs
add
inc
pop
cmp
sahf
cmp
jnp
std
aaa
and
cmp
lea
dec
add
and
test
pushf
adc
cld
sub
or
enter
push
data16
inc
out
test
sbb
xor
test
jno
sbb
icebp
fs
pop
mov
pop
jns
popf
mov
inc
mov
mov
xchg
js
push
push
push
or
jbe
hlt
mov
ja
or
rol
jecxz
inc
ret
js
xchg
ds
in
pop
pop
clc
into
mov
int
jno
push
arpl
mov
mov
xor
xor
or
mov
inc
outsl
pop
ret
loop
loope
push
lret
sub
add
mov
cmp
clc
rclb
lods
xor
and
sbb
pop
pop
dec
cltd
sub
test
xor
jb
sarb
pop
popf
xchg
ffree
flds
jo
hlt
xchg
push
jg
lcall
es
aam
mov
dec
pop
or
jmp
jnp
adc
mov
ljmp
ret
fwait
sbb
xor
pop
push
xchg
push
mov
jge
rcrl
xor
shll
fadds
loope
xchg
mov
and
call
shll
popa
ret
shlb
push
mov
repz
adcb
inc
sub
push
aas
and
jno
loopne
scas
cmp
imul
push
xor
int
mov
sub
clc
fldl
cli
shlb
sub
add
fcompl
xchg
xchg
adc
aam
or
aas
dec
fnstenv
pop
cmpsb
pop
movsb
jecxz
or
sbb
adcb
adc
clc
pusha
push
pop
int3
add
imul
or
cmp
xchg
push
loopne
ljmp
hlt
add
and
call
je
cltd
jno
aad
cmp
popa
stos
add
repnz
and
sub
add
sbb
mov
xchg
enter
cmpsl
jp
ror
push
outsl
mov
push
inc
outsb
sbb
and
sbb
fs
call
popa
mov
icebp
or
iret
inc
fnstcw
xchg
ljmp
sbb
imul
and
push
movsb
fcmovbe
add
in
shll
mov
xchg
cmp
jl
scas
lds
scas
mov
and
adc
xchg
test
into
inc
addl
pop
xchg
mov
aad
in
in
fimull
test
dec
fldenv
pop
xchg
inc
scas
shr
int3
ret
pop
xchg
mov
adc
in
push
dec
push
shl
sbb
mov
sbb
add
out
lods
push
fcoms
stc
repz
push
pop
dec
scas
jp
push
or
cltd
and
test
lock
movsl
pop
jns
js
cmp
mov
sahf
leave
dec
ret
jp
outsl
pop
movsl
jnp
movsb
cli
and
ja
push
mov
cwtl
lret
outsl
imul
jmp
sarb
jl
outsl
scas
sbbl
push
pop
mov
pop
data16
lds
fldcw
cmpsl
pop
sub
cwtl
cwtl
lahf
cmc
adc
ret
mov
cmp
lret
push
jmp
inc
jae
mov
xorb
sub
sti
cli
xchg
mov
push
or
jecxz
and
xchg
lahf
hlt
data16
cwtl
rclb
les
das
mov
cwtl
sbb
popa
test
jecxz
xor
pop
cmp
mov
repz
xchg
in
sub
out
in
shll
nop
add
add
mov
and
repnz
ss
push
lcall
cmpb
cmp
jae
nop
sub
sarb
testb
cmp
into
enter
shlb
jbe
mov
cmc
adc
aad
push
mov
adc
inc
aad
sub
push
jecxz
xchg
outsl
add
mov
mov
fiaddl
sarl
cmpsb
popa
sbb
iret
dec
in
inc
dec
add
orl
leave
or
sub
add
mov
les
outsl
rorb
in
ret
ror
or
cwtl
in
pop
stos
and
lret
aam
into
scas
or
xchg
pop
fbld
shlb
leave
aam
into
rol
xchg
xorb
shll
push
mov
movsl
mov
neg
xor
mov
cs
dec
sbb
xchg
test
pop
cmp
bound
xchg
insl
es
xor
lret
xor
test
fidivl
mov
es
pop
out
std
push
pop
jle
sahf
cltd
scas
add
xchg
adc
dec
pop
and
xchg
jne
or
xchg
push
test
call
stos
ljmp
js
out
xchg
in
dec
mov
int
inc
dec
sbb
mov
inc
out
hlt
xor
pop
jns
fsubrl
loop
mov
add
lret
lods
scas
add
dec
loop
pop
xorl
je
test
int
shrl
pusha
add
jae
sar
adc
dec
xor
xchg
pop
in
pop
inc
rorb
std
arpl
je
mov
fnstenv
xchg
mov
xor
and
pop
mov
jmp
out
push
dec
sub
xlat
mov
lea
mov
xlat
xchg
icebp
dec
inc
int
and
lods
stos
pop
add
pop
push
push
sub
jnp
dec
xchg
pop
out
call
popf
aad
fs
sbb
mov
ds
test
add
jle
repz
push
movsb
pop
sub
mov
out
mov
stos
std
js
insl
shr
pop
sbb
scas
in
dec
xor
jg
cltd
cmpsl
and
std
xor
jmp
icebp
pop
lahf
bound
pop
stos
jnp
aaa
pop
add
push
sbb
cli
adc
push
pop
dec
pop
adc
mov
mov
dec
sbb
sbb
paddusw
daa
js
stc
push
cwtl
inc
mov
jno
popf
call
cmp
sbb
ja
out
xor
xchg
aad
sub
aam
xor
sbbl
popa
xlat
inc
pusha
pop
in
or
aaa
testb
leave
add
jp
push
out
lcall
sbb
lods
mov
dec
mov
sti
stos
or
push
or
push
int
and
lods
xchg
push
mov
sahf
sub
mov
sbb
jnp
orb
fwait
xlat
cmc
shlb
and
or
xchg
adc
adc
mov
mov
xchg
inc
adc
psubusb
xchg
add
push
push
jnp
cli
and
dec
stc
adc
rorl
movsl
inc
xchg
ds
sbb
pushf
rcrb
in
ret
sub
sahf
scas
push
sub
push
fwait
sar
dec
imul
aas
in
dec
sbb
movsl
outsb
fisubrl
int3
and
inc
ret
mov
jae
pusha
inc
ret
cmp
call
int
mov
adc
adc
std
mov
cmpsl
or
dec
jg
push
cmpsb
adc
xchg
les
or
cmp
lods
fnsave
cmp
bound
inc
dec
push
loope
rorb
dec
sbb
incl
negl
sbb
andl
and
xor
mov
fcompl
xchg
mov
test
repz
out
push
sub
imul
push
movsl
push
sahf
ret
aad
xchg
adc
xchg
sti
stos
stc
arpl
push
dec
push
cmpsb
std
dec
cmpsl
ja
sbb
cmp
or
lock
mov
pusha
add
cltd
pop
fdivs
popf
pop
iret
lock
je
inc
dec
iret
lock
dec
in
mov
xchg
mov
adc
adc
into
cmp
and
pushf
adc
sub
fadd
cmp
xchg
stos
shlb
pop
aad
dec
pushf
aad
lcall
sahf
icebp
and
sahf
loopne
add
jg
lcall
negb
movsb
jno
or
sbb
xchg
cmp
das
mov
sbb
movsl
inc
pop
mov
cmpsl
sahf
push
into
addr16
pop
pop
decl
loopne
mov
or
or
mov
in
movsl
ja
jae
mov
cmpsb
push
addl
xchg
hlt
xchg
sbb
icebp
insb
add
das
sbb
xor
mov
in
in
mov
fbld
cmp
mov
cmp
jo
nop
mov
xor
in
adcl
sbb
push
xchg
jge
stos
mov
pusha
jg
sub
inc
mov
sub
push
push
in
fidivs
or
xchg
sbb
add
adcb
pushl
sbb
out
xor
sub
cmp
xchg
scas
adc
lret
pop
xor
mov
movsl
sub
mov
ret
mov
xor
jmp
fwait
test
call
push
dec
mov
sbb
pop
sahf
or
in
scas
push
sbb
and
sbbl
es
lret
outsb
add
test
and
inc
test
dec
inc
and
or
addr16
pop
imul
or
pop
add
es
push
push
cmp
pop
ljmp
pop
test
mov
or
sbb
xchg
pushf
inc
xlat
jne
into
gs
mov
pop
push
inc
mov
ljmp
int
ljmp
std
clc
loope
sbbl
mov
cmp
outsb
mov
bound
sahf
sbb
pop
inc
inc
xor
push
and
xor
xlat
inc
dec
jecxz
out
mov
inc
addr16
mov
scas
jno
push
jbe
sti
pop
shr
push
mov
dec
mov
das
push
fimuls
int3
add
sbbb
rorb
or
adc
aam
push
clc
xlat
gs
mov
jge
in
negl
pushf
clc
stc
cwtl
mov
in
adc
pop
js
pop
xchg
fdivrp
bound
mov
leave
bnd
mov
loope
add
inc
dec
call
and
insb
pop
jae
popf
loop
jns
xchg
int
xchg
sbb
stos
icebp
jg
cmp
ret
cmc
fisubrs
mov
jns
pop
cmp
inc
mov
movsb
and
cmpl
ljmp
mull
jecxz
ret
in
lods
pop
inc
fnsave
sub
inc
and
call
xchg
dec
xchg
add
sub
lcall
in
dec
cwtl
popa
das
cmc
call
into
push
inc
mov
adc
sub
rorb
sub
loope
xchg
add
lea
daa
sbb
ret
cmp
jno
sub
push
es
fcmovu
add
adc
lret
jmp
out
sbb
call
lahf
inc
fsubrl
push
mov
mov
decl
push
aam
scas
xlat
sbb
lds
mov
loopne
mov
and
or
shr
inc
inc
jmp
jl
jae
int
cmpb
test
jbe
in
sbb
xchg
sbb
movsl
sbb
mov
adc
icebp
insl
rolb
pop
popa
lods
nop
cmp
out
inc
fisttps
xchg
fildll
xor
push
and
loopne
in
or
pop
scas
and
popa
mov
cmp
movsl
out
addr16
jb
cmpsb
mov
xor
stos
jmp
int3
movq
mov
movsl
ret
imul
inc
std
fsub
sbb
jg
je
dec
xchg
cwtl
aas
pop
scas
std
movsb
lret
jo
mov
ret
hlt
bound
cli
ret
aaa
and
dec
cmp
imulb
mov
or
pop
sbb
or
lret
das
test
cs
inc
test
push
inc
test
fsubr
inc
inc
xchg
push
stos
and
test
pop
loopne
aaa
mov
leave
or
lock
out
xor
ret
popf
fwait
jle
add
and
xor
mov
inc
popa
and
inc
sbb
fs
jb
stc
xchg
int3
nop
inc
test
jnp
mov
xlat
pushf
xchg
les
ficomps
pop
gs
movsb
sahf
bound
fs
xchg
shlb
adc
out
or
stos
cmp
test
push
xchg
jmp
and
in
hlt
mov
pop
cmp
or
mov
lcall
jns
add
push
dec
mov
cmpsl
push
pop
popl
xchg
test
cwtl
call
imul
outsl
lret
mov
dec
adc
push
xchg
or
rolb
cmpsb
inc
adc
rolb
xor
sbb
into
push
mov
pop
xor
mov
pop
cmp
rcl
js
cmc
or
mov
lods
xchg
sbb
adc
fcmove
rorb
out
test
fucom
xlat
xor
cmpsl
lock
sub
movsb
aad
adc
sysenter
fs
cmp
loopne
jecxz
cmpsl
dec
xor
xchg
repz
or
xchg
push
dec
adc
mov
add
stc
ficomps
sahf
jge
adc
push
fstl
xchg
or
adc
je
testb
cmp
inc
sbb
xchg
sbb
sarb
inc
xchg
fucom
cmp
mov
jle
das
push
cmpl
and
sti
push
sbb
insl
popaw
das
add
es
loop
jp
enter
cmp
sbb
mov
or
lret
xchg
mov
nop
pushl
sahf
push
jmp
loope
dec
clc
push
jnp
es
xor
mov
popa
lods
and
into
dec
int
inc
ja
pusha
dec
pop
gs
pop
popa
or
cwtd
dec
sbb
outsl
and
or
sbb
adc
fildll
fsubs
cmpsl
mov
sub
sbb
sbb
sbb
add
jne
sbb
cli
push
lret
add
in
xor
loope
scas
xchg
lret
adc
in
std
ss
outsb
fidivl
rolb
dec
outsl
pop
popf
pop
insl
mov
jg
gs
or
sub
lcall
sub
inc
and
mov
push
pop
jne
testl
pop
or
dec
arpl
out
pusha
repz
rclb
cli
movl
cli
sbb
scas
loopne
pop
dec
call
sub
inc
and
cmpsl
mov
xchg
xchg
enter
adc
or
popa
mov
mov
jmp
idiv
pop
vunpckhpd
mov
in
loope
in
lds
cmp
mov
mov
insl
lret
add
pop
subl
test
popf
adc
dec
jbe
test
fcompl
mov
pop
int3
sbb
in
pop
out
mov
repnz
cmc
xchg
adc
es
cmp
push
push
decb
xor
in
mov
xchg
andl
call
ja
xor
in
popf
mov
das
enter
mov
dec
dec
push
fistl
movsb
out
and
call
loopne
xor
add
out
push
insl
mov
and
cmp
push
ljmp
push
mov
dec
out
jo
mov
sub
out
lock
cmpsl
jmp
or
fdivr
out
sbb
xchg
int3
mov
lret
cld
popa
mov
call
xchg
iret
mov
xor
ss
negl
rep
lods
cmp
xlat
aas
outsl
xchg
push
pop
and
adc
sub
mov
push
xchg
addr16
addb
mov
pop
push
lahf
mov
mov
test
or
stos
stc
xchg
jmp
dec
jbe
inc
rolb
sti
dec
loop
jne
movsb
shlb
jg
shl
fdivrs
jg
sbb
and
cmpsl
or
stos
shrb
jo
jnp
adc
cmpsb
in
popf
notb
mov
mov
mov
popf
test
pop
mov
dec
pusha
movsl
push
push
pop
into
push
xor
xchg
mov
lods
and
fldenv
jmp
out
insl
jnp
dec
xlat
fisttps
test
mov
inc
push
inc
mov
and
sbb
and
xor
add
and
insb
cmpsb
shl
dec
in
inc
cmc
dec
inc
inc
sbb
pop
fcomps
xchg
ss
adcb
mov
or
xchg
add
hlt
daa
jg
lret
and
mov
fwait
sub
out
pop
inc
nop
xlat
std
in
daa
xor
cwtl
pop
xchg
mov
sub
fs
push
mov
adc
imul
cmc
fwait
jbe
ret
cmp
movsl
sbb
mov
jo
mov
nop
andl
xchg
mov
test
std
adc
sbbl
and
fidivrl
xor
movsb
xchg
repnz
sub
ret
cmp
sub
shll
pusha
scas
les
and
in
xchg
fsubrs
dec
bound
xlat
insb
xchg
adcl
shr
or
xor
pop
cmpsl
lods
ret
lahf
pop
fstpt
xchg
and
mov
lods
jmp
mov
jne
ja
pop
push
fs
aas
sbb
enter
cli
rol
rcrl
fcoms
xchg
cltd
cs
sub
push
jle
sbb
dec
adc
jb
jl
fnsave
imul
in
fimuls
filds
syscall
pop
fcoml
sbb
aad
adc
in
sub
fs
scas
pop
lcall
test
call
dec
insl
push
stos
inc
lcall
lcall
cwtl
pop
xchg
mov
xor
stc
jge
push
stc
pop
adc
xor
xlat
push
pushf
jmp
push
shr
adc
mov
adc
push
jne
dec
xchg
incl
rcrb
jge
nop
mov
mov
xchg
in
les
enter
cmpb
ss
jnp
in
or
js
xchg
jo
jmp
mov
lea
push
cltd
imul
xor
mov
or
jmp
std
mov
xchg
ja
adc
sti
lahf
js
inc
incb
push
push
cmpsl
xchg
and
or
cltd
push
jmp
rol
cld
stc
sub
iret
lret
scas
mov
and
popa
and
sti
and
mov
sbb
mov
or
imul
mov
cmp
xor
and
das
pop
jbe
mov
mov
lea
cwtl
shrb
jns
lea
mov
test
rcl
aad
fiaddl
and
pop
dec
push
mov
call
lret
addl
mov
ljmp
xchg
std
sub
sahf
mov
loopne
xor
xchg
xor
mov
mov
or
xchg
gs
fucomp
push
xchg
and
sti
imull
cli
pop
jle
test
cmp
loopne
scas
push
add
lret
hlt
mov
adc
mov
xchg
xchg
push
xor
adc
imul
dec
sub
xchg
dec
xlat
lret
rol
in
rolb
in
pop
inc
mov
lock
jno
inc
stc
rolb
add
out
iret
xlat
cli
lods
push
sub
lods
mov
xchg
cmp
push
xchg
mov
insl
and
outsl
add
shr
pop
ret
fistl
loope
into
sub
pop
mov
mov
repnz
inc
mov
xchg
inc
into
lock
mov
mov
mov
xor
jns
lds
mov
push
mov
mov
lcall
stos
ss
das
jo
jl
push
push
add
mov
mov
inc
sub
lret
adc
dec
out
or
cmc
pop
xchg
mov
push
and
mov
mov
popl
dec
andb
dec
jne
xor
xchg
sub
mov
mov
fs
fstpt
pop
cs
ret
repz
mov
push
mov
jg
jle
int3
push
lret
and
add
loopne
inc
ja
cmc
outsb
sahf
xor
xchg
les
mov
pop
push
add
imul
xorb
fwait
rcrl
ficoms
pop
out
fstl
cmp
rorb
xor
sbb
lret
ja
add
cli
mov
test
xchg
push
lret
decl
dec
sbb
loope
lods
push
popa
outsl
lcall
sti
inc
mov
mov
push
xor
in
push
icebp
movsl
ret
ss
fiadds
fcom
arpl
lock
xor
bound
cmp
aad
stos
orl
aaa
test
inc
jge
imul
lds
xchg
es
add
sbb
out
jno
fsubl
jp
daa
cmp
lock
pop
xor
push
cltd
xchg
shlw
inc
aas
push
xor
lods
and
add
mov
xlat
cmc
into
data16
xor
push
ret
jmp
rcr
add
in
aad
lods
in
mov
xlat
call
jle
inc
ficompl
ror
andl
leave
push
call
mov
repnz
leave
push
fldcw
rcrl
adcb
mov
sbb
data16
out
cmc
repz
jecxz
test
push
push
loopne
outsl
mov
mov
mov
nop
pop
test
xor
xchg
stos
sub
pop
loope
movsl
and
push
iret
in
adc
mov
add
jns
dec
andl
stc
mov
aad
add
outsl
push
iret
sbb
dec
jmp
ljmp
imul
mov
inc
push
pushf
add
les
mov
in
adc
clc
mov
test
std
rcrb
pop
stc
mov
mov
add
xchg
jnp
jbe
jl
fs
pop
pop
cmp
cmp
push
insl
imul
sbb
sub
shl
insb
xor
inc
aam
mov
add
cmp
outsl
pop
sarb
testl
hlt
jg
loope
into
fs
or
jo
notb
in
and
add
lock
mov
sub
leave
sbb
inc
xchg
imul
aad
inc
sub
inc
aad
in
mov
imul
in
inc
fsubl
outsw
int3
sbb
jne
pop
mov
pop
lahf
shll
mull
jg
lds
in
lcall
or
cmc
es
sahf
xor
scas
jo
push
add
inc
and
mov
aas
xor
lcall
push
mov
pop
shlb
cmp
movsl
or
out
dec
test
adc
dec
mov
mov
pusha
sahf
cmp
xchg
pop
pop
adc
gs
push
in
pop
mov
into
cwtl
adc
mov
xacquire
rcl
push
test
and
inc
push
xlat
push
sti
int
push
mov
imul
inc
ret
in
sbb
jbe
incb
hlt
push
pop
lods
lret
pop
inc
pop
movsb
aaa
test
sbb
inc
and
or
mov
cmp
ret
adc
xchg
push
rorl
aad
sbb
iret
push
mov
movsl
mov
jb
push
xor
cmpsb
pop
leave
imul
mov
xor
mov
sarb
sbb
xlat
inc
lahf
mov
out
mov
gs
daa
mov
lret
or
aad
lea
movsl
jo
bound
pushf
or
mov
pop
insl
nop
lock
mov
pop
repz
pop
mov
aam
sbb
add
sbb
push
mov
jno
dec
xor
push
and
add
daa
mov
sbb
out
stc
adc
jne
or
in
repnz
lds
gs
gs
mov
test
addr16
cmp
push
jno
sbb
mov
sbb
lock
cmp
popf
aad
inc
das
mov
sub
mov
hlt
dec
cmp
inc
xchg
fdivl
lahf
call
sub
dec
jg
push
test
imul
pop
mov
mov
inc
int3
shr
lret
movsb
stc
out
rorb
sarl
out
lds
xor
gs
push
inc
int3
inc
cld
add
cmp
les
stos
inc
xor
add
rclb
mov
stos
je
leave
push
xchg
ret
sub
dec
cmp
cld
dec
fnsave
push
adc
push
lret
mov
mov
aad
xor
xor
mov
dec
notb
dec
or
push
lcall
test
jle
pusha
mov
iret
jae
movsl
ljmp
sbb
inc
push
cli
jle
call
mov
cli
fdivrs
pushf
loope
xchg
cs
and
and
push
ljmp
jne
jno
test
cltd
orl
add
sar
jbe,pt
mov
lods
fmuls
fldl
mov
mov
jnp
and
mov
out
dec
mov
fmull
jbe
pop
lock
xchg
iret
pop
scas
xor
mov
cmp
jmp
test
push
sub
ss
xchg
dec
fisttpll
sbb
mov
jmp
in
test
outsb
into
outsl
pop
lcall
in
and
insl
mov
jle
mov
pushf
loope
and
add
mov
xchg
mov
ret
xlat
pop
push
or
dec
push
aam
inc
mov
cmp
jno
pushf
sub
mov
mov
test
cmp
and
add
jb
or
cmpsl
sahf
cmp
add
sub
and
mov
jo
mov
int
ret
inc
mov
sbb
add
fists
imul
out
cld
mov
fwait
inc
pop
cmp
jne
jnp
pop
push
cmp
in
jns
shlb
into
lahf
dec
push
test
push
outsl
test
sub
pop
lret
adc
sub
xchg
mov
inc
xchg
into
cmp
fstpt
push
andl
pop
fisttpll
add
sub
jne
dec
ficoms
cmpsb
or
add
and
mov
add
pop
imul
scas
int
mov
mov
cmp
xchg
push
lea
sbb
out
adc
cmp
subl
and
daa
pop
cmc
pop
mov
sub
scas
dec
js
aaa
xchg
push
jecxz
cltd
inc
ret
ret
pop
xchg
or
push
cld
lds
cltd
stos
dec
dec
in
in
mov
xlat
sbb
shlb
sub
pop
mov
mov
inc
sub
popa
fnsave
xchg
in
imul
fldenv
and
in
push
ficoml
test
push
xchg
negl
xchg
mov
jne
xor
jns
sbb
push
xor
push
xchg
sub
hlt
sub
mov
mov
and
fwait
sti
pop
cmc
pop
xchg
xor
lock
jae
mov
mov
fcomip
push
mov
call
xor
cmc
data16
es
hlt
ret
push
mov
and
in
in
add
add
nop
aad
add
and
mov
test
sub
mov
scas
inc
xor
mov
ds
cmp
mov
scas
cmp
mov
mov
push
mov
or
inc
sub
shr
sub
add
pop
sub
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
mov
add
push
mov
add
push
xorl
popl
push
mov
inc
xor
xor
pop
pushl
pop
add
pushl
pop
add
jmp
cmp
cmp
jo
mov
add
jmp
inc
das
adc
xchg
xor
push
outsb
mov
lahf
fistpl
inc
hlt
js
outsl
push
pop
xchg
jmp
dec
pop
bound
inc
aas
and
stos
cmp
out
xor
fists
and
adc
sbb
adc
add
xchg
es
dec
adc
pop
dec
bound
sub
sti
add
jmp
jmp
mov
mov
mov
lea
lea
call
ret
push
call
pop
sub
cmpl
jne
pushl
mov
xor
call
cmp
jne
mov
jmp
xor
jmp
push
lea
push
pushl
mov
xor
call
add
lea
mov
and
cmp
je
xor
jmp
mov
cmpl
jne
pop
ret
jmp
pop
iret
lea
mov
jmp
mov
aas
add
aad
add
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
xor
int
adc
push
mov
movsb
lods
dec
adc
mov
sub
lret
push
xor
outsb
mov
dec
mov
mov
enter
rorl
xor
ljmp
xor
ljmp
adc
cmp
in
adc
mov
and
sbb
xor
test
inc
jmp
inc
pop
or
sahf
mov
idivl
push
addr16
jnp
xchg
in
sub
leave
sbb
clc
push
js
add
inc
insl
movsb
add
push
movsb
mov
fdivr
sbb
jno
clc
xor
aad
pop
test
pop
lcall
orl
push
pop
sti
jns
call
andl
out
nop
scas
add
add
push
or
iret
xor
mov
and
lods
sarl
jbe
repnz
and
ficoml
pop
clc
cld
jmp
mov
rorb
jecxz
loope
inc
pop
jns
sbb
mov
mov
push
inc
rcr
jbe
mov
push
mov
jl
insb
dec
imul
test
and
test
pop
out
or
je
mov
test
in
push
xchg
and
pushf
lock
inc
dec
adc
fwait
sub
movsb
clc
adc
dec
insb
inc
sub
insl
movsl
repz
push
sti
sbb
stos
mov
add
push
and
dec
push
scas
xchg
pop
dec
and
test
call
pop
cld
call
pop
xor
push
loop
adc
sub
push
insb
call
mov
mov
outsl
xchg
int
scas
add
mov
out
jl
shr
jae
sahf
sub
mov
pushf
lock
mov
push
inc
add
pop
mov
cmpsb
outsl
mov
gs
out
stos
pop
jg
push
incb
dec
lea
dec
mov
dec
lahf
mov
sar
xor
fwait
in
dec
xor
addl
pop
mov
add
mov
aam
xlat
shl
nop
orb
adc
les
hlt
sbb
ds
filds
loope
cmc
dec
mov
or
inc
sarb
cmp
out
lret
or
es
int3
cmp
aaa
sbbl
and
add
sub
mov
jb
cmp
je
and
loop
jno
cmp
repnz
push
or
out
adc
add
es
pushf
leave
insb
shll
test
ss
fs
fcoml
inc
fwait
cltd
cltd
in
sbbl
testb
test
pop
test
ljmp
mov
push
sbb
lcall
cmp
xchg
adc
mov
ljmp
scas
es
jns
movsb
xor
and
pop
pop
ret
push
pop
pop
negb
mov
inc
mov
push
outsl
inc
rcr
sbb
push
mov
mov
icebp
ss
jl
subb
push
mov
incb
push
movb
aas
rcr
std
sbb
xor
dec
ret
call
cmp
popf
jo
jmp
test
cs
clc
add
mov
xor
notl
jo
sti
xor
inc
jmp
xchg
or
jle
out
pop
ja
data16
inc
jbe
fisubrs
bound
fsubs
pop
pop
mov
test
pusha
xor
shrd
mov
pop
jmp
cld
push
sti
out
scas
or
dec
orb
cltd
cmp
fldt
dec
stc
addb
mov
addl
hlt
adc
jo
push
movsl
mov
flds
aaa
push
mov
outsl
jp
push
roll
sti
sahf
fmulp
inc
pop
xchg
lahf
pop
add
loop
icebp
pop
xchg
adc
shrb
xchg
xor
pusha
ret
call
pop
mov
jb
shrl
push
jp
iret
and
xchg
mull
mov
xor
ja
push
mov
or
mov
aas
data16
inc
leave
push
jbe
push
shlb
daa
loop
mov
xchg
mov
mov
ljmp
push
jge
cmp
nop
dec
mov
stos
pop
add
mov
sub
mov
mov
push
sub
xchg
xchg
lret
jbe
out
lcall
jno
ljmp
inc
fwait
xor
imul
pop
adc
mov
mov
sar
lock
mov
insb
mov
mov
push
mov
adc
pop
scas
cmp
inc
sbb
in
pop
ds
cmp
aad
test
mov
imul
xor
loopne
mov
push
inc
xor
pusha
push
fucomip
mov
inc
ss
outsb
xchg
out
rcr
push
enter
addr16
push
aam
xor
mov
rcrb
xor
cmp
jb
imul
int3
inc
fstpt
sahf
xlat
jle
or
aad
orb
jb
jo
lods
lods
adc
lahf
add
and
mov
xor
lcall
or
cmpsb
push
sub
xchg
icebp
xor
movsl
push
xor
data16
fstpl
scas
repnz
in
lahf
enter
mov
bound
scas
add
popa
sahf
xor
dec
or
std
pop
sar
sbb
mov
iret
jmp
insb
mov
insl
shl
jnp
mov
leave
into
ss
or
scas
push
ja
sbb
lea
fimuls
sub
xchg
movsb
ret
mov
xchg
aas
and
sub
sub
push
mov
xor
inc
sbb
out
sbb
out
sbb
push
pushf
testl
popf
jl
add
les
lcall
setb
jae
mov
xchg
scas
leave
pusha
mov
adc
adc
sbb
cmp
lods
je
ja
jbe
mov
sub
mov
fldt
adc
adc
fwait
mov
repnz
jae
imul
cmp
lret
stos
addr16
in
gs
sub
jmp
mov
or
rolb
jecxz
test
jecxz
dec
push
mov
sbbl
jns
mov
dec
pop
add
pusha
jb
dec
fisttps
cmp
lahf
dec
adc
std
and
adc
int3
xchg
jnp
cmpsb
xor
fidivs
pop
lods
pop
add
inc
push
push
int
into
cmc
sub
mov
aaa
pop
call
pusha
shl
call
xor
test
and
inc
enter
and
and
push
sbb
xchg
fsubrs
pop
stos
mov
pop
ja
ss
inc
jns
loope
andb
popa
sbb
mov
add
add
xchg
pop
push
xor
pop
jb
mov
jno
pop
mov
push
mov
in
adc
cwtl
hlt
pusha
mov
lret
fmul
lcall
jl
jb
cmpsl
pop
xor
or
add
inc
pop
mov
push
add
ss
hlt
jge
dec
cmp
dec
xchg
jno
xchg
in
jp
icebp
les
aad
sbb
lods
adc
add
out
inc
lods
adc
ja
lods
adc
or
data16
pop
adc
push
jne
sbb
push
shld
out
adc
dec
fnop
xchg
cmp
dec
imul
pop
cmp
push
das
movsl
ret
push
mov
inc
inc
sbb
mov
and
jmp
xchg
lahf
jbe
lahf
jge
push
inc
xchg
test
loopne
add
stos
enter
or
fnstsw
mov
and
or
sbb
aas
pop
fs
js
lock
jl
and
inc
ret
cwtl
mov
js
jnp
xchg
lods
cld
cld
sub
call
pop
xchg
or
sbbb
popf
scas
xchg
pop
das
dec
imul
shlb
cmpsl
or
fldl2e
or
inc
pushf
jp
or
xor
das
nop
cmp
push
iret
jmp
mov
cmp
dec
movsb
adc
int
in
and
xchg
mov
push
add
cmp
or
inc
dec
inc
pop
out
sbb
roll
test
ds
sarb
iret
dec
or
lds
call
sub
cli
loop
pop
jnp
jp
mov
push
or
inc
cmpsl
jle
xchg
stc
xchg
mov
out
addr16
inc
das
cmpsl
lds
dec
and
mov
add
flds
sub
jp
mov
out
jecxz
adc
test
pusha
outsb
sti
out
mov
jmp
push
test
pop
dec
sub
mov
aad
sbbl
xor
xchg
ret
dec
dec
data16
pop
ljmp
nop
or
add
and
mov
and
adc
xchg
lcall
dec
cmp
mov
fcomps
shll
or
jae
push
std
jecxz
imul
out
imulb
sbb
xchg
mov
inc
repz
lret
repnz
mov
add
inc
add
inc
andl
inc
mov
mov
push
mov
ficoml
ss
pop
ret
jbe
insb
cmpb
xor
and
jne
add
out
or
in
fidivrl
hlt
mov
movsl
xchg
or
test
xlat
and
mov
push
cmp
pop
adc
fbstp
imul
stos
inc
cmc
pop
xlat
icebp
jb
leave
jge
insb
shl
rol
shlb
ret
jae
cltd
push
xor
jo
in
adc
clc
xor
ficomps
cld
cmp
popa
mov
xlat
or
add
xchg
dec
lds
cmp
sbbb
in
and
orl
psrld
sarl
test
mov
nop
leave
je
or
jle
imull
flds
mov
std
mov
movsl
mov
popa
jnp
shrb
cld
cmp
inc
mov
mov
cmp
test
pop
ror
ljmp
movsl
xor
pop
sbb
xor
inc
std
inc
mov
dec
scas
call
imul
lock
lods
shll
out
mov
loopne
and
std
cli
and
inc
sub
push
mov
push
mov
in
adc
sub
jmp
sti
fcoms
andl
xchg
shr
adc
aas
jne
mov
add
iret
mov
sbbb
cmp
push
into
xchg
dec
ss
popf
fidivs
push
daa
dec
loop
pushf
and
je
sbb
cmp
adc
repnz
pop
xlat
cmc
cmove
insb
mov
xchg
test
std
leave
test
push
arpl
scas
pop
add
adc
outsl
shll
imull
js
cmc
das
xlat
sub
or
adc
sub
aad
xor
mov
test
xor
repz
sbb
rolb
inc
je
push
notb
mov
jb
sbb
mov
lock
fs
test
xor
popf
pop
imul
pop
adc
loopne
das
addr16
out
mov
mov
stos
mov
stc
sub
push
imul
stc
mov
inc
mov
sbb
fwait
adc
scas
clc
xchg
and
mov
xor
mov
dec
jae
out
pop
pop
mov
leave
cmp
in
out
dec
mov
scas
leave
mov
shrb
sbb
add
xchg
or
nop
rclb
test
outsl
xchg
ja
pop
push
adc
sub
cmp
jbe
mov
movsb
clc
mov
mov
rclb
mov
mov
js
adc
ret
and
fdivs
loopne
mov
add
mov
xchg
jmp
cmp
jl
cmc
in
outsl
pop
notb
jnp
pop
sarb
repz
dec
inc
inc
das
jbe
sub
imul
xor
icebp
outsb
ret
test
addb
mov
cmp
cmc
jno
iret
jmp
in
jbe
repz
and
lods
mov
not
pop
sbb
cmp
and
pop
rorb
mov
fs
pushf
inc
vaddps
jno
adc
xchg
jmp
outsl
cli
jg
cwtl
mov
jmp
dec
add
add
and
sti
ss
pop
das
jl
fwait
xchg
gs
loope
cmovo
push
mov
mov
mov
sub
in
repnz
jl
divb
xor
testb
sbb
rolb
and
lcall
pop
lahf
fdiv
sbb
jmp
or
ljmp
iret
mov
pop
nop
push
loope
dec
push
fucomp
imul
sbb
mov
jmp
jno
ficompl
sbb
add
call
fldl
add
lea
dec
subl
xchg
mov
or
loope
xor
xchg
ja
inc
add
test
mov
mov
sub
int
or
pop
movsb
dec
lahf
pop
xor
sbb
inc
ja
mov
das
jge
pop
pop
cmpsl
xor
and
mov
lcall
pushf
mov
jle
add
icebp
or
enter
mov
dec
pusha
popa
mov
dec
xchg
adc
icebp
imul
mov
and
pop
xchg
mov
dec
subl
cmp
xchg
mov
sub
mov
je
jp
mov
outsb
movsb
push
lods
lods
adc
mov
clc
push
inc
xor
xchg
repnz
out
nop
stos
push
push
jae
sbb
jo
test
into
negb
jb
xchg
dec
push
fisubrl
mov
adc
cmc
dec
arpl
pop
push
jge
fildl
sub
fbld
xchg
adc
subb
nop
and
jb
or
stc
fwait
jb
in
arpl
insl
shrl
inc
sar
and
xchg
repz
aas
inc
repnz
cltd
jo
pop
test
and
or
fmul
out
rorl
loopne
into
and
into
loopne
inc
dec
addr16
ja
sbb
or
cld
pop
mov
jnp
loop
push
test
pusha
pop
jb
dec
clc
loopne
pop
mov
sbb
mov
and
mov
stc
add
adc
out
ficomps
mov
jbe
dec
fstpl
jb
ret
inc
jle
dec
mov
add
xor
inc
xor
imul
cs
lds
cmpsl
ffree
sbb
test
outsb
fcomip
popa
clc
adc
fwait
pop
mov
lds
sbb
cmpsb
mov
mov
adc
xchg
push
or
jmp
cld
cmpsl
mov
roll
push
cmpsb
fadd
cmc
adc
shl
testb
aaa
sub
cmc
je
jnp
je
shr
daa
xor
cmpsl
lods
ret
cmp
loope
jge
pop
mov
dec
xor
or
pusha
add
aam
xchg
jbe
inc
js
sarl
popf
sbb
repz
cmpsl
stos
xchg
push
in
cmc
rcll
push
xor
out
icebp
mov
jle
lea
pop
jp
lea
sub
sahf
inc
enter
pop
cmp
push
lahf
jno
andl
sarb
fsubs
fs
mov
cwtl
inc
inc
sbb
in
cltd
inc
sbb
inc
popa
shlb
movsl
pop
testb
imul
bound
sbb
outsl
jl
mov
lret
mov
adc
cmpsb
and
jecxz
je
insb
outsl
sub
mov
inc
pop
lods
jnp
xchg
mov
push
test
into
call
dec
ret
fstp
out
fsubl
test
lea
jno
clc
and
ds
shll
dec
cmc
jmp
push
stos
push
insb
sbb
std
cmp
mov
cltd
lods
ljmp
ds
test
xchg
dec
pop
shr
aaa
and
dec
iret
or
xchg
and
xorb
lcall
jg
int
ret
gs
add
ret
in
pop
aaa
lret
dec
jle
sbb
test
into
xchg
icebp
inc
mov
jo
cmp
push
dec
imul
jne
cmp
and
clc
bound
cmp
pop
repz
dec
popf
mov
aad
jo
in
push
dec
imul
aaa
sbbb
adc
xchg
sahf
xor
movsl
jge
ficoms
mov
and
xor
movsl
ret
fldl
jae
fwait
in
stc
test
sub
or
jnp
sub
inc
pop
fstpt
fadds
sub
push
jecxz
push
mov
aam
cmpsl
popf
sbb
sbbb
aad
stos
int
mov
pop
sub
fs
dec
stos
push
push
or
lahf
repz
inc
lret
add
push
push
cmpb
dec
jle
lcall
adc
cmp
lret
and
dec
pop
mov
xor
add
icebp
js
movsl
sbb
and
mov
mov
mov
das
shr
imul
mov
testl
imul
outsb
inc
clc
inc
inc
push
nop
cld
or
pop
pop
rorb
xchg
inc
into
cmpsl
mov
xchg
insl
movsb
mov
out
dec
mov
jo
ror
stc
and
leave
je
sahf
mov
sar
and
xchg
push
movsl
data16
and
in
mov
test
aaa
xchg
mov
xor
in
cmpsl
fcompl
sbb
mov
and
orl
jge
push
lds
movmskps
or
mov
cld
push
xchg
or
jp
inc
icebp
in
sbb
out
push
and
stos
push
or
xor
sbb
sub
jmp
xor
xor
add
cmpsl
nop
sub
xor
not
add
jge
iret
jmp
mov
xchg
imul
lock
imul
mov
dec
aad
test
pop
pop
xor
xorl
test
fldt
xorl
push
jns
xor
outsb
in
outsb
xchg
dec
adc
scas
insl
push
lcall
cld
jns
mov
or
inc
xchg
cmp
inc
and
loop
pop
push
jmp
mov
cmp
mov
outsl
mov
lock
int3
scas
fdivrs
cld
mov
js
jl
inc
loopne
push
inc
pop
mov
shr
dec
in
loop
adc
cmpb
cmpsl
push
daa
test
or
pushf
fimuls
or
das
dec
push
mov
sbb
cmpb
in
sbb
inc
ret
in
ja
sub
add
insl
mov
mov
popa
cltd
or
mov
add
stc
jecxz
les
pushf
cmp
cli
push
stos
push
push
sbbb
xchg
repnz
in
nop
dec
mov
jno
cwtl
xor
add
and
sub
xchg
cmp
sbb
rolb
mov
in
cwtl
mov
inc
cmpsb
dec
stos
les
or
pop
movsl
xchg
adc
sub
aaa
dec
in
in
testb
in
pop
fistpl
mov
lock
dec
sbbb
push
rorb
xor
xchg
push
lea
mov
cmc
push
sbb
dec
xor
movsl
sbb
push
ss
enter
mov
aaa
int3
adc
jmp
dec
pop
ja
lds
shl
xor
cmpsb
fsubr
pop
dec
nop
mov
mov
fwait
movsb
xor
dec
push
pop
aad
jnp
test
setp
pop
pop
and
enter
negl
hlt
mov
lods
lods
loope
jmp
inc
mov
dec
hlt
insb
xchg
rorb
or
imul
je
push
pop
dec
jg
xchg
mov
lret
xchg
jp
mov
cmp
ljmp
int3
add
icebp
pushf
inc
hlt
push
mov
sub
mov
adc
mov
cmpsb
rorb
xchg
lret
sub
ficompl
jne
dec
cmc
ljmp
loopne
xchg
stc
cld
shl
aad
inc
pop
xor
sti
xor
jnp
mov
sbb
arpl
inc
jp
outsb
jge
cmpsb
xor
in
jo
aam
in
jp
out
or
mov
mov
jbe
mov
cmp
mov
fwait
popf
out
jns
movsl
sub
sbb
lcall
jecxz
jns
xor
bound
arpl
add
push
xor
xchg
adc
add
xchg
xchg
jnp
ja
mov
xchg
mov
xor
insb
push
add
push
sub
cli
lcall
adc
push
jb
sbb
iret
lods
sbb
leave
repz
mov
jnp
ficompl
cmp
fpatan
scas
repz
pop
jp
lods
int3
js
std
jne
cmpsl
xor
push
aaa
cltd
xor
das
jp
inc
sbb
pop
ja
jmp
or
lods
into
ret
sbb
pushf
lock
fistl
adc
xor
push
pop
inc
mov
les
test
mov
add
addb
cwtl
into
inc
jbe
push
pop
cli
dec
xchg
lret
dec
mov
fcomps
inc
imul
xor
in
enter
mulb
mov
das
xchg
ja
out
jecxz
ljmp
jae
fs
ret
jl
add
dec
repz
push
shll
rorb
inc
iret
arpl
sti
stos
rol
adc
nop
dec
mov
rol
shl
push
push
jae
lds
aad
data16
pop
mov
mov
adc
mov
dec
adc
call
clc
xor
mov
cld
lds
cmpsb
outsl
xor
loope
sbb
jns
push
xchg
xchg
sub
xchg
jne
cwtl
mov
aaa
mov
dec
dec
sbb
movb
lock
xchg
inc
jns
pop
add
mov
and
js
sbb
sub
xorb
lds
jo
outsb
inc
sbb
jb
jno
lcall
push
push
xchg
inc
sbb
ret
pop
ret
jnp
fpatan
rorb
cmpsl
je
push
in
inc
inc
stos
loope
jnp
leave
xchg
mov
icebp
jl
mov
stos
dec
add
imul
icebp
or
dec
cmp
mov
xor
inc
jle
sahf
xor
into
xor
dec
mulb
add
into
sahf
ja
add
repnz
inc
std
ss
ret
inc
repnz
mov
push
cmc
mov
xchg
push
mov
xchg
sub
or
pushf
loopne
dec
push
lods
std
test
sbb
push
movsb
xchg
out
js
mov
and
cmpsb
movsb
mov
add
aas
dec
data16
sbb
fdivl
xor
rorb
pop
xchg
and
xlat
lcall
mov
mov
movq
pusha
jp
movsb
out
mov
out
push
mov
insl
sbb
xlat
xchg
ss
or
aas
pop
outsb
and
xchg
repz
add
mov
lods
cli
test
fimull
loop
push
mov
mov
and
xchg
decb
xchg
popa
cmc
packsswb
mov
mov
mov
adc
in
sahf
dec
pop
mov
mov
leave
add
pop
or
nop
xor
inc
mov
mov
call
jmp
cmp
xor
rorb
loopne
lahf
pop
ja
push
push
ud2
fnstenv
icebp
out
stos
pop
adc
sub
or
pop
mov
aad
cmp
push
mov
lods
es
and
pop
sbb
push
jne
and
dec
adc
mov
add
cld
mov
jbe
dec
mov
ficomps
inc
xchg
sub
movsb
ja
dec
mov
lahf
adc
sbb
popf
repz
lret
scas
add
movsl
push
mov
stos
dec
adc
sub
movsl
sbb
mov
stos
stc
and
dec
sbb
icebp
sub
adc
shll
jae
jb
pushf
sub
mov
xor
cli
scas
sbb
mov
sbb
add
notb
xor
lret
xchg
sbb
mov
lcall
mov
cmpsl
adc
packsswb
cmp
xchg
movsl
scas
add
and
shll
xlat
pop
mov
test
cld
dec
data16
ret
adc
and
push
loopne
fidivs
lahf
mov
sbb
push
jno
xchg
mov
xor
push
insl
xor
movsb
push
add
les
dec
fiadds
hlt
pop
shl
movsl
or
xchg
jge
and
dec
pop
xorb
call
nop
ds
outsl
jae
into
inc
lcall
scas
mov
arpl
nop
xchg
inc
inc
hlt
mov
or
aas
jo
inc
out
iret
mov
pop
hlt
adc
lods
in
pop
lea
outsl
inc
arpl
sub
cmp
cmp
mov
xor
fsubrl
ret
push
jecxz
shr
jle
mov
adc
loop
sub
push
and
out
ds
in
fsubr
pop
push
dec
lds
dec
jecxz
dec
sbb
mov
dec
aas
xor
sub
rcrb
mov
xor
adc
loopne
fdivrl
add
cwtl
sarb
scas
pop
or
aad
push
loope
aaa
push
xor
pop
call
push
fwait
ret
out
imul
mov
jp
sbb
ficomps
cmp
in
xchg
popf
test
mov
ds
mov
xor
cld
movsl
mov
sbb
mov
clc
cs
xor
insl
dec
repnz
ja
lcall
in
cmc
xor
rorb
jg
or
lcall
repz
xchg
std
cmpsb
mov
add
xchg
dec
pop
sahf
lret
outsl
leave
test
cmp
mov
pop
mov
add
scas
ror
imul
dec
mov
xchg
das
dec
mov
push
arpl
jecxz
stos
out
adc
daa
sub
dec
mov
and
subl
cs
out
sub
insl
mov
sbbb
or
arpl
cmpsb
or
push
or
inc
addr16
push
jle
jge
stos
aaa
pop
xchg
jmp
mov
push
xor
adc
imul
lods
mov
or
sub
cmpl
stc
dec
addr16
stc
out
test
pop
jp
call
add
push
movsb
dec
adc
sub
lea
cmp
mov
aad
jp
sub
sub
ret
imul
out
push
push
pop
cwtl
cmpl
inc
sbb
and
pushf
aam
pop
mov
lahf
jg
xor
daa
cmp
sub
das
mov
enter
test
cs
mov
xchg
jl
jmp
mov
xchg
inc
outsb
ret
cwtl
in
push
mov
xchg
inc
jle
lahf
in
insb
mov
pushf
mov
fiaddl
xor
push
mov
lcall
push
jb
sbb
inc
and
movsl
sbb
mov
out
insb
mov
cmp
cs
mov
or
cwtl
and
add
cmp
xchg
dec
rcrb
xor
jl
movsb
inc
xchg
mov
mov
fstpt
ds
out
dec
mov
rorl
xchg
jp
movsb
lret
pop
lods
push
or
or
repnz
push
jp
sub
int
mul
movsl
int
add
cltd
push
xor
mov
inc
sbbl
es
adc
imul
mov
add
dec
scas
rorb
test
mov
gs
sub
mov
mov
xor
cmp
cltd
cwtl
aad
aam
add
je
shrl
mov
or
pop
inc
sar
xor
test
fs
es
out
push
push
or
jg
arpl
cli
pop
pop
loope
pop
ja
mov
inc
pusha
in
cltd
call
jg
aam
out
jmp
pop
ja
pop
cmp
sti
leave
push
movl
popf
cmp
adc
sbbl
out
imul
adcl
mov
or
jp
addr16
cli
int
pop
mov
adc
int
cltd
iret
popa
cmpsb
jns
or
aad
daa
mov
sbb
cli
adc
mov
adc
mov
xor
dec
arpl
js
movsb
jnp
xchg
jns
mov
push
notb
std
test
out
movsb
ret
sub
dec
daa
pop
scas
scas
fsubp
inc
jp
sbb
jno
pusha
fdivrp
pop
sti
pop
jno
add
dec
mov
xchg
fnstenv
pop
lods
sbb
inc
jp
imul
shll
or
sub
xchg
popa
or
cmp
in
and
add
add
enter
ljmp
and
sahf
add
push
test
jg
std
imul
ds
test
fildl
subl
fwait
inc
sbb
and
iret
mov
pop
fs
dec
lret
or
nop
xchg
in
shr
and
divl
sub
jl
add
push
pusha
mov
insl
mov
mov
push
jle
xchg
xor
sbb
mov
xor
lea
or
sbb
push
out
jg
jge
adc
xor
add
lea
andb
jae
cmp
jecxz
outsl
ljmp
adc
mov
dec
push
ficomps
call
mov
scas
add
imul
iret
add
jo
pop
push
lcall
pop
xchg
loope
pop
sub
xchg
push
jle
xchg
imul
pusha
mov
sarl
inc
icebp
fwait
cmp
mov
pop
xchg
lods
sbb
xchg
js
mov
jbe
es
mov
es
shrb
cmc
or
icebp
int3
lcall
cmp
adc
pop
or
xchg
shl
outsb
push
loope
push
dec
ret
dec
mov
cmc
xor
jp
dec
imul
and
sub
xchg
xchg
inc
pop
rsm
adc
jns
xlat
icebp
je
repnz
into
and
jg
out
push
stos
les
out
fiadds
xorb
push
les
lods
filds
ss
lods
push
addl
push
int
jns
call
fmuls
mov
push
dec
adc
into
add
test
mov
sbb
out
lods
aam
sub
ss
filds
cmp
movsl
stc
das
rcrl
push
test
das
ja
leave
repz
dec
int3
out
mov
or
iret
dec
mov
inc
aad
in
fdivl
arpl
mov
js
add
xlat
lret
add
clc
repz
into
and
ja
mov
dec
xlat
push
movsl
mov
jge,pt
into
inc
lods
add
xlat
cmc
jbe
ja
add
sbb
pop
jbe
cmp
in
jbe
mov
cwtl
cmp
jge
fisttpll
adc
cmpsb
push
or
xor
cmp
sbb
loop
jae
lcall
addr16
popf
pushf
pop
loopne
pop
nop
cmp
ljmp
sbb
mov
inc
aam
inc
pop
mov
insb
xchg
aaa
xchg
mov
outsl
mov
add
and
jae
ret
fwait
loope
and
or
insb
stc
mov
sbb
add
xchg
xor
test
push
or
sahf
repnz
cmp
call
add
sub
jo
cltd
ss
or
jae
loope
xchg
mov
sti
bound
movsb
mov
movhlps
cmp
insl
in
add
dec
sbbb
shlb
data16
lds
mov
cli
mov
nop
sbb
or
cmp
lea
mov
sub
repnz
aam
negl
jle
mov
iret
sub
decb
das
push
aas
imul
getsec
pop
mov
add
adc
sub
mov
stos
mov
or
mov
adc
push
aaa
and
lahf
jo
arpl
mov
push
imul
in
jmp
or
push
sbb
push
cmpsb
dec
imul
mov
dec
out
shll
push
test
or
out
or
out
add
add
fcom
aam
jp
dec
adc
movsl
sbb
ljmp
outsl
out
jno
cwtl
pop
in
shll
xchg
or
fildl
xor
inc
sub
jb
repz
outsl
xchg
adc
cmc
cmp
sbb
out
and
rcrl
aas
loopne
aaa
dec
add
mov
jbe
and
push
cmc
jne
add
jb
xchg
aas
cmp
aad
xchg
stos
mov
push
int3
out
adc
push
out
aas
mov
mov
cmpsb
pop
xor
jl
push
jnp
mov
jne
aas
sbb
or
cmpsl
fidivrs
pop
mov
pop
repz
loope
imul
rep
fcompl
sbbb
cmp
push
stos
rorb
xchg
or
stos
add
lds
mov
xchg
jmp
out
push
mov
mov
xor
repz
sbbl
fiadds
mov
mov
pop
inc
push
jl
es
jmp
mov
call
and
stos
lds
pop
push
in
mov
jno
scas
sub
hlt
mov
jle
roll
es
or
push
jl
dec
jp
negb
jge
push
hlt
lret
add
fildll
out
inc
scas
inc
and
iret
scas
dec
mov
in
xchg
dec
adc
punpcklwd
push
mov
pop
mov
cmp
cmpsl
push
popa
mov
jl
mov
int3
out
pop
push
mov
daa
lcall
scas
aaa
cmp
dec
adc
and
in
add
ror
dec
hlt
jmp
lret
and
push
sbb
dec
jbe
aam
xchg
bound
jl
cmpsb
jne
lds
loopne
pop
nop
sti
mov
sti
out
scas
or
add
jge
and
dec
jno
xor
popa
cwtl
in
inc
jmp
adc
jnp
repnz
mov
pushf
mov
fimuls
arpl
inc
jnp
add
mov
dec
mov
outsb
cmc
movsl
and
jmp
pop
fisubrl
flds
shll
add
mov
call
test
loopne
in
int
leave
dec
repnz
out
push
or
mov
dec
shr
notb
jmp
jg
pop
mov
push
xchg
push
push
xchg
push
mov
iret
mov
mov
adc
ja
in
push
mov
sahf
jo
inc
jle
pop
or
ss
xchg
sbb
sahf
aad
pop
call
lcall
xor
ret
cmp
repnz
shlb
dec
popa
lea
xor
aad
sub
push
xchg
fs
and
push
imul
ja
add
dec
inc
pusha
xchg
mov
xlat
test
repz
dec
insb
adc
dec
scas
push
lock
mov
mov
and
int
push
or
fwait
addr16
popa
jnp
mov
mov
inc
sub
sbb
loop
mov
cmp
push
cmc
jb
sbb
aas
adc
jne
lret
mov
lret
stos
mov
cli
jecxz
mov
mov
adc
mov
int3
add
fimuls
pop
adc
mov
sti
push
in
movsl
stos
mov
adc
push
dec
roll
mov
pop
aam
and
je
subb
and
sub
fwait
pop
in
negb
lret
in
jmp
pop
or
mov
fildll
imulb
fsts
xchg
jecxz
les
xchg
int
popa
shr
lcall
mov
add
popf
fisubs
std
adc
jo
mov
xchg
add
sub
adc
mov
xor
dec
popf
mov
lods
dec
test
clc
das
fiaddl
xor
sbb
cli
inc
and
push
jo
into
sbb
dec
mov
dec
mov
out
jp
jns
mov
je
add
sbbl
and
pop
imul
shr
sub
jl
push
push
shlb
add
iret
inc
mov
xchg
in
mov
jle
shll
add
sub
sbb
scas
fwait
sub
push
xchg
push
xchg
sbb
loope
adc
add
jg
jge
jl
test
mov
pop
and
mov
pop
add
inc
in
xor
pop
push
fldcw
mov
sbb
inc
push
js
sbb
mov
neg
rcr
sahf
push
adc
loop
aad
inc
jge
mov
jg
mov
adcb
lods
loope
ja
adc
jge
xor
cli
cmpsl
vaddsubps
jmp
stos
scas
sub
mov
sarb
test
fildl
sub
push
cld
jecxz
rorb
mov
test
in
loop
or
shrb
mov
adc
fcmovbe
pop
xchg
inc
ds
xchg
dec
mov
and
mov
jns
sbb
inc
ret
fisttpll
hlt
out
lods
push
mov
add
sub
ret
ljmp
loope
sbb
call
mov
add
pop
jb
cmp
repz
push
jo
sub
xchg
jmp
mov
loopne
es
inc
fs
fs
sbb
push
int3
scas
insb
pop
dec
sahf
adc
or
sbb
sbb
loopne
xor
dec
bound
or
xchg
or
add
push
or
mov
cmp
cmc
mov
mov
sub
jl
dec
mov
push
inc
lret
cmpb
inc
ret
lahf
outsl
je
ret
cli
sbb
int3
js
add
test
popf
adc
xchg
out
movsb
addr16
adc
fs
aam
xor
repz
or
add
rcrb
hlt
js
mov
imul
jl
ret
mov
int
rcr
test
dec
push
xor
ljmp
bound
xchg
out
push
jle
mov
jbe
xchg
dec
adc
out
pop
es
in
std
sbb
out
pop
stos
push
sti
loop
mov
add
aad
aam
std
xor
test
das
arpl
pop
jbe
out
shr
cmpsl
rcll
insl
mov
mov
jns
jge
adc
jp
aaa
ficompl
add
mov
adc
popf
sbb
fadd
push
mov
xor
sub
inc
imul
sbb
sbb
adc
sbb
xor
mov
cmp
mov
mov
sbb
scas
daa
or
mov
loopne
dec
push
mov
test
das
pop
cmp
sbb
movsl
fucomi
and
add
sbb
jg
xor
popf
or
bound
lods
mov
xor
push
lea
sbb
shr
lcall
cmc
jecxz
push
xchg
das
pop
call
arpl
sbb
mov
rcr
xor
addr16
xchg
lods
std
adc
sbb
or
xchg
loop
cltd
mov
repz
xchg
push
bound
loope
push
mov
or
xor
pop
call
jne
cmp
push
mov
jp
jge
inc
xchg
lret
cmpl
push
rcrb
ficomps
sbb
decb
subb
insb
cmp
divl
fisubrs
jo
sti
cmpsb
mov
xor
pop
add
pop
js
adc
push
or
gs
jle
lods
pop
sbb
test
std
jne
movsl
pushf
ja
sbb
fists
call
std
ja
rorl
sub
inc
inc
adc
repnz
sbb
movsl
and
insb
stc
mov
rorl
dec
mov
int
pusha
movsb
inc
in
lock
pop
adc
cmp
mov
lret
xchg
inc
popf
mov
lods
adc
je
loop
clc
ljmp
and
fnstenv
popa
lret
addr16
lea
lock
loope
push
mov
xchg
scas
pop
add
out
push
dec
clc
loope
xchg
cmp
loop
in
mov
mov
cld
inc
pop
lahf
or
notb
jae
mov
repnz
hlt
xchg
iret
fbld
xor
movsl
shr
insl
out
push
jae
mov
xor
add
fistpl
addr16
mov
out
push
outsb
sbb
fs
dec
test
jl
inc
pop
xor
in
es
cwtl
les
outsb
fisubl
cmp
add
jb
pop
ret
fisubl
or
repnz
std
mov
test
std
imul
out
cmc
xchg
stc
jno
into
lret
dec
andb
nopl
cmovne
jnp
jo
mov
aas
lcall
popa
aas
inc
daa
jp
mov
sub
push
dec
and
push
int
movsb
mov
push
aad
hlt
jne
push
jne
cld
mov
stos
pushl
jp
sub
bound
sbb
les
and
sbb
enter
dec
fmuls
leave
rcrl
push
mov
insb
push
xlat
mov
sahf
inc
es
pop
or
xor
xchg
out
fs
xlat
inc
push
add
cmp
loope
xor
inc
out
cwtl
lock
xlat
xchg
imul
aaa
xchg
pop
ret
xchg
and
fst
ds
enter
cmc
dec
hlt
jmp
es
adc
adc
adc
dec
cli
loop
mov
adc
push
xor
mov
jmp
daa
pop
js
jnp
scas
dec
pop
adc
xchg
sbb
cmp
pushf
shr
xchg
push
xor
popf
rcl
in
or
jp
pop
pop
lcall
out
push
mov
inc
andb
cmpsl
icebp
dec
ret
adc
outsl
stos
dec
bts
insl
inc
paddq
sbb
push
add
outsl
sbb
inc
shl
addr16
ror
cmc
sbb
rolb
mov
and
mov
ds
mov
test
mov
pop
and
sbb
adc
jecxz
lock
add
ret
and
mov
mov
es
adc
adc
jle
jo
jecxz
enter
repz
sbb
xor
sbb
faddl
or
ljmp
mov
int3
scas
pop
sub
add
ret
sub
mov
or
sub
cmp
cmpsl
cli
xor
push
gs
xchg
mov
mov
push
mov
rolb
stos
or
cmp
cmp
stos
out
cld
sbb
lods
imull
addr16
dec
add
inc
mov
cmp
mov
lea
insb
mov
pop
scas
enter
int3
loop
inc
lahf
loop
sub
mov
js
jg
fisttpl
dec
mov
mov
pop
adc
out
cltd
adc
inc
mov
xchg
sbb
ret
rorl
lock
out
and
out
in
xchg
pop
jp
sub
notl
stc
mov
sub
mov
mov
cmpsb
repnz
inc
sti
js
ja
lahf
sub
mov
lret
adc
pop
dec
push
jno
test
sahf
test
cmp
ss
pop
out
ret
pushf
fs
and
fidivrl
or
inc
pop
or
sahf
aad
mov
push
xchg
dec
aam
and
fstpl
jne
dec
nop
mov
nop
out
aaa
mov
sub
mov
jge
mov
stc
sub
push
test
pop
sbb
adc
imulb
loop
aaa
dec
xor
ret
cmp
push
jno
ret
adc
or
dec
outsb
jae
push
scas
push
xchg
int
aaa
mov
sub
jno
bound
push
inc
lock
push
xchg
sarb
or
in
outsl
push
xchg
xor
inc
pop
fbstp
dec
das
pop
aad
or
inc
jns
stc
das
push
push
mov
pop
les
mov
test
mov
test
aaa
pop
dec
ds
lahf
aam
sub
push
mov
lahf
clc
add
shll
in
dec
repz
stos
shr
js
xchg
andl
in
imul
pop
adc
cmp
test
sbb
add
or
jl
cld
xor
lods
icebp
repnz
sbb
dec
xor
dec
mov
cmc
mov
cmpsl
sti
xor
mov
in
inc
insl
ret
cmp
mov
mov
cmp
adc
lret
cwtl
out
jo
cmp
out
orl
xchg
lret
jle
or
sbb
adc
cmp
call
pop
mov
inc
fs
aam
imul
mov
push
sub
jp
pop
jecxz
xchg
and
lcall
or
adc
test
mov
pop
ret
mov
es
jmpw
jbe
fistl
scas
movsb
insl
sbb
adc
loop
lret
xchg
mov
in
fldcw
ret
inc
sbb
fldt
cmpsl
mov
lahf
or
adc
lret
add
lret
pop
lret
imul
xor
aaa
jmp
inc
addr16
sub
inc
push
ds
out
mov
sub
sbb
aad
cmp
in
ret
jge
clc
mov
stos
push
lea
rcr
addr16
in
test
jb
lock
fdivl
dec
cli
dec
lock
mov
adc
in
inc
ja
stos
out
cmp
mov
push
xor
inc
aaa
jbe
adc
out
mov
push
int
inc
jge
dec
hlt
jmp
stos
push
push
orb
pop
mov
jnp
out
in
inc
mov
test
sub
adc
and
inc
cmp
mov
in
aas
pop
mov
mov
fdiv
mov
xor
lds
cld
or
shl
sbb
xchg
adc
inc
mov
call
lock
loope
jl
in
es
lret
fcomi
pop
jecxz
int3
mov
push
mov
lods
cmpsl
and
and
dec
fadds
outsl
push
fidivrs
scas
in
bndstx
mov
or
mov
cmc
insl
xchg
cmp
in
cli
sbb
pop
and
mov
mov
data16
xlat
or
jle
mov
fsubr
iret
in
pop
pop
iret
adc
ja
dec
pop
bnd
inc
jl
pop
jo
push
adc
ljmp
mov
ljmp
mov
sbb
or
outsl
xor
ljmp
xor
mov
mov
mov
add
fs
sbb
or
push
mov
pusha
xchg
mov
into
inc
fmull
int3
push
add
scas
mov
push
push
out
cmpsb
sbb
pop
cwtl
push
outsl
mov
jle
ja
jp
add
outsl
in
ret
loopne
xchg
aam
lret
or
push
and
dec
sahf
cmp
aaa
scas
leave
mov
inc
andl
add
es
sti
push
daa
sub
faddl
add
arpl
flds
js
rcrb
stc
dec
pop
cli
out
mov
fildl
jne
insl
rcr
movsl
mov
cmc
pop
xchg
je
dec
cmc
in
and
fbstp
xor
call
xchg
movsb
adc
hlt
test
int
es
shll
push
sbbb
jl
pushf
jp
testb
mov
cmp
add
push
or
mov
xlat
and
nop
mov
dec
bound
mov
push
and
ret
inc
das
inc
pusha
jp
in
mov
lock
adc
std
inc
xchg
jmp
jb
ret
stos
dec
into
or
fisttps
push
xchg
push
lret
sub
std
pop
lahf
adc
adc
or
shll
push
leave
push
test
push
adc
xor
cmp
test
add
incb
dec
ja
outsb
jno
and
jb
arpl
insb
jmp
mov
iret
or
xchg
clc
ljmp
dec
cld
idiv
insl
lea
or
idiv
insl
inc
addr16
dec
sbb
add
inc
insl
rcr
popf
add
sbb
out
mov
bound
sahf
sbb
subb
sahf
mov
lcall
ss
inc
fldcw
cld
mov
xchg
or
push
movsb
adc
sbb
cmp
pop
test
rcrb
or
test
mov
fwait
and
xchg
pop
loop
lret
mov
adc
and
cmp
std
sbb
imul
jb
popf
dec
adc
xor
stos
jo
mov
sub
popa
mov
mulb
aaa
pop
shl
mov
inc
call
fmull
fiadds
pusha
bound
cmp
test
bound
stos
popa
jo
inc
pop
jecxz
std
mov
mov
rep
gs
rcr
adc
pop
mov
mov
push
repz
jo
mov
ja
or
lods
pop
cmp
and
xor
jnp
ljmp
cmp
jb
adc
or
stc
xchg
jbe
mov
sbb
cmp
push
push
push
call
mov
ljmp
sub
inc
xor
sbb
cld
push
sbb
push
cmp
inc
pop
xor
mov
loope
dec
inc
jbe
push
insl
rcll
inc
popf
fimuls
pop
push
into
and
je
hlt
push
ds
cmp
mov
aas
popfw
sbb
jecxz
movaps
xlat
fs
stos
fs
sbb
lret
push
sbb
adc
test
push
das
xor
scas
sbb
packsswb
mov
ss
push
xchg
xor
cmpsb
mov
data16
pop
jno
data16
in
jmp
adc
cmp
std
push
movsl
mov
flds
aaa
les
ret
fwait
jae
popf
sub
add
cmp
dec
ret
push
sbb
sbbb
push
add
scas
mov
lock
pop
shr
add
mov
inc
push
negb
inc
in
shlb
push
lret
xchg
cmp
ret
mov
push
stos
loope
lds
mov
daa
and
xchg
roll
push
xor
push
push
push
add
xor
or
enter
push
lret
popa
inc
sbb
adc
aad
cmp
leave
inc
in
hlt
sbb
push
mov
lds
pop
sbb
push
push
inc
in
aam
push
mov
inc
testl
inc
jbe
inc
xor
rcrb
std
sbb
lods
mov
mov
cmp
mov
mov
cltd
arpl
push
in
mov
pop
dec
xor
mov
outsb
int
adc
xchg
or
in
mov
pop
iret
dec
sub
and
push
add
ret
aam
pop
sub
cli
xor
add
clc
add
fimull
mov
sarl
cmpsl
ficomps
fcomps
daa
cwtl
in
push
xchg
mov
inc
sarb
cmpsl
in
roll
andl
inc
lods
or
push
add
cmp
shll
repnz
lods
inc
fwait
paddsb
int3
movsl
out
and
mov
sahf
mov
loope
jp
je
adcb
loopne
inc
in
jno
and
negb
jmp
lock
test
push
sti
loopne
mov
mov
sbb
xchg
and
insb
pushf
sub
sbb
test
xor
or
push
int
mov
insb
faddp
mov
mov
insb
faddp
int3
cmp
lock
fwait
jns
cmp
stos
mov
popa
or
ss
add
addr16
aaa
mov
push
inc
insb
shrb
mov
nop
in
sahf
pop
fwait
inc
lds
pop
pop
xlat
push
mov
jle
lea
aaa
fcmovnu
mov
ljmp
test
lcall
outsl
repz
push
cli
sbb
sbb
movsl
adc
dec
arpl
pop
lcall
pop
call
aam
cli
fwait
int3
inc
jo
cli
and
fcmovu
and
lds
or
test
adc
fdiv
cmp
pop
gs
mov
adc
cmpsb
push
lcall
mov
cmpsl
lods
popa
pushf
cmp
inc
inc
mov
mov
stos
sbb
inc
lcall
pop
sbb
jl
xor
dec
pushf
mov
fwait
daa
pusha
shl
shrl
add
adc
pushf
rorl
enter
ljmp
and
inc
clc
ljmp
rorb
dec
sahf
or
and
icebp
xor
lret
aas
int3
repz
xchg
stc
xchg
sub
dec
mov
test
mov
fsubrl
int3
inc
int
data16
xchg
add
sbb
and
loop
ret
add
sub
xchg
pop
push
mov
push
mov
sub
mov
mov
mov
sub
pop
push
mov
addl
pop
push
push
mov
sub
pop
popl
addl
mov
push
mov
add
add
xchg
pop
mov
push
mov
add
add
xchg
pop
jmp
fstpt
add
jmp
mov
outsl
add
arpl
push
jp
imul
lahf
and
clc
xorb
mov
add
add
addr16
xor
cltd
cmpsl
jne
sbb
mov
fistpl
or
scas
jp
mov
push
and
call
das
pop
xor
dec
jmp
hlt
pop
lock
cwtl
and
adc
add
sbb
pminub
add
push
add
add
jns
jmp
imul
dec
jecxz
les
adc
xor
mov
mov
mov
sub
jmp
mov
daa
repnz
rcrb
out
inc
test
repnz
mov
mov
jnp
mov
sub
add
add
mov
sub
jne
xor
jmp
ds
adc
rclb
jmp
cmc
imul
mov
jne
insb
daa
and
daa
xchg
popf
test
add
or
sub
jo
jbe
mov
lcall
dec
jbe
mov
cmp
cmp
stos
push
dec
jbe
dec
pushf
push
cwtl
std
in
mov
outsl
mov
fbstp
pop
loopne
mov
dec
xchg
fisubrl
cmpsb
dec
nop
push
test
insb
dec
mov
das
lahf
and
inc
add
mov
orb
nop
sbb
dec
fildl
push
push
jbe
insb
insb
into
inc
movsl
jo
mov
subl
stos
adc
test
xchg
add
pop
pop
cmp
mov
xor
pop
jne
jle
adc
pop
pop
lahf
push
mov
adc
pop
pop
add
add
mov
xlat
jo
insb
dec
or
jns
orb
and
movsb
clc
fidivl
xor
inc
fwait
outsl
mov
sahf
jecxz
mov
add
sub
cmp
mov
ss
xchg
jns
in
and
inc
inc
mov
pop
dec
aas
mov
fadd
add
xlat
stos
push
add
popa
lds
pop
or
into
ret
fsts
xchg
add
push
es
mov
push
jae
hlt
inc
jbe
fstl
sub
out
fisttps
inc
push
jae
and
dec
xchg
xchg
pop
cmpsl
subb
or
sub
jns
sarl
pop
pop
hlt
mov
sbb
clc
ds
xor
xor
stc
xor
stc
and
mov
popf
and
ds
pop
aaa
mov
loopne
fdivs
cmp
cltd
leave
aad
jns
and
jns
and
jo
mov
lret
fidivl
jo
mov
or
cmpsl
movsb
xchg
jnp
jns
cli
or
lock
xor
test
cli
insb
push
inc
mov
push
xchg
adcb
jmp
sub
js
mov
aad
xor
mov
aaa
mov
jg
sub
sbb
test
sbb
push
or
xchg
xor
movsb
mov
pop
movsb
mov
addr16
lods
arpl
sahf
inc
pop
movsb
mov
addr16
lcall
cmp
movsb
mov
jno
mov
cld
mov
cmp
movsb
icebp
adc
movsb
mov
incl
dec
mov
out
das
or
jo
mov
test
sbb
inc
cmp
aas
xchg
sub
push
mov
pop
call
push
and
mov
pop
ljmp
movsb
call
mov
test
cwtl
sbb
dec
sbb
mov
xchg
bound
jp
or
stos
xor
xchg
adc
dec
cmp
jae
popf
aam
loopne
loopne
mov
out
out
cmp
adc
xor
pusha
push
das
cmp
sbb
fmuls
mov
and
xchg
fmuls
lea
nop
lds
xor
cmp
lods
push
insb
jl
xor
flds
mov
mov
push
sub
mov
sub
mov
sub
mov
sub
xchg
mov
adc
xchg
xor
xor
ss
or
xchg
mov
adc
xchg
xchg
outsl
fdivs
repz
les
jle
xchg
adc
xlat
xor
repz
stc
xchg
mov
adc
xchg
push
lahf
xlat
xor
ss
stc
xchg
mov
adc
jns
or
and
gs
xchg
sti
arpl
adc
gs
jno
cmp
loope
stos
mov
ret
xor
fcomi
sarb
mov
xchg
dec
push
test
mov
mov
sbb
lahf
icebp
mov
cmp
mov
adc
test
movsl
push
xor
add
insb
add
xchg
cli
adc
rolb
mov
pop
dec
lods
test
jae
mov
fldl
fmull
nop
das
ljmp
dec
into
add
movsb
mov
out
and
cmp
jne
mov
lahf
xor
and
out
mov
out
je
fildl
cwtl
or
sbb
call
cwtl
jae
in
cmp
sbb
dec
subl
xchg
mov
test
dec
in
jbe
xor
jb
out
shr
test
cmp
lret
push
cmpsl
ljmp
test
imul
pop
mov
cwtl
cmp
and
mov
ret
adc
or
out
cltd
cmpl
jns
xchg
shl
in
mov
cmc
mov
add
xor
or
xor
pop
lods
mov
sahf
add
sbb
sbb
sub
mov
imul
push
lcall
sbb
mov
push
jg
insb
imul
push
dec
xchg
rol
sub
or
and
lods
jge
push
jl
lods
cmp
les
mov
outsl
es
movsl
bound
arpl
sub
cmp
mov
xor
or
sub
and
pop
mov
xlat
add
and
dec
sbb
jecxz,pn
call
lods
stos
dec
xor
popf
inc
push
cmpsb
and
leave
jl
sti
and
mov
jmp
add
loopne
sahf
sbb
lahf
jmp
sbb
ror
adc
clc
movsl
gs
aas
scas
das
icebp
fcoms
jge
int3
and
mov
pop
dec
lret
adc
loope
xor
push
and
flds
adc
lret
mov
jmp
pop
mov
jo
loopne
jns
ficompl
sbbb
adc
in
in
push
and
imul
iret
and
xor
daa
lock
arpl
sti
mov
adc
mov
test
pop
lods
xor
lods
imul
mov
xchg
push
or
push
cmp
push
push
sub
xor
jg
jg
imul
xchg
int3
cmpsb
adc
xlat
loope
imul
mov
push
xchg
aaa
cmp
jmp
inc
push
repz
mov
aaa
mov
adc
jns
stos
movsb
add
push
add
je
sahf
xchg
cmp
mov
mov
push
mov
notb
pop
jne
push
lds
jne
mov
push
dec
jge
cmpsl
inc
pop
and
imul
orl
dec
xor
ds
adc
jb
vpsubusb
inc
negl
mov
dec
mov
adc
lea
inc
ljmp
adc
shl
aad
jmp
push
sub
mov
jl
rclb
scas
jmp
mov
push
sbbb
pop
fbstp
outsb
and
jae
cmpb
mov
push
push
pop
jae
pop
jle
js
js
mov
and
adc
jl
fmuls
nop
jmp
mov
push
cmc
sbbb
and
push
mov
fs
stc
xchg
das
cltd
push
repnz
test
cld
ds
xchg
sbb
rcr
jp
jae
inc
je
or
dec
xchg
pop
push
ljmp
mov
adc
ja
mov
inc
push
lock
std
xor
jo
mov
lods
mov
jge
fwait
cld
fwait
xor
mov
sub
mov
jle
jb
lea
mov
jle
pop
and
mov
fisubrs
sbb
cmpl
add
dec
pop
imul
adc
push
jmp
sahf
mov
dec
es
dec
nop
adc
adc
aas
insl
je
bound
repz
faddl
aad
imul
dec
mov
mov
cmp
into
sub
push
add
add
push
out
addr16
adc
mov
jl
int3
xchg
leave
adc
jle
dec
cmp
cvtps2pd
std
and
clc
cld
ficoms
clc
dec
mov
xchg
jnp
cmp
sti
or
or
movsb
push
insl
mov
int
sub
or
daa
fildll
ret
cmp
lock
inc
xlat
xchg
pop
lahf
cvtps2pd
jnp
adc
and
lret
push
ss
adc
in
pop
jne
mov
or
stos
or
inc
scas
fwait
jmp
movsl
clc
sub
out
pop
fwait
sub
mov
icebp
dec
pop
cltd
xchg
notl
aaa
mov
fldt
xor
int
cmp
aad
xchg
or
jns
test
cmp
popf
cmp
push
add
int3
pusha
push
inc
pop
jno
adc
repz
mov
xor
repz
pusha
mov
data16
cltd
xchg
mov
pop
lock
in
lahf
in
std
cmpsb
jno
stos
sub
dec
mov
mov
test
xor
push
in
insl
push
pusha
rorl
push
mov
mov
dec
sbb
xor
cmp
mov
cmpsl
inc
movsl
sbb
pop
dec
sub
test
cmp
ficomps
ljmp
stos
mov
lea
push
xor
lahf
push
ljmp
movsl
mov
loopne
push
and
inc
push
sub
add
loop
scas
les
xchg
and
js
movsl
scas
fadds
or
fisubl
adc
or
andl
cmp
pop
or
dec
movsl
stos
push
icebp
movsl
xchg
out
in
or
jo
mov
lea
notb
shlb
inc
push
mov
ljmp
add
jmp
xor
adc
push
ds
scas
push
mov
dec
sbb
or
addr16
and
jbe
mov
xor
mov
movsb
adc
testb
mov
xlat
push
lods
sbb
cmp
and
sbb
pop
mov
pushf
cs
and
stc
inc
negl
popa
jge
addb
jecxz
mov
add
jbe
jne
xchg
push
shlb
push
inc
mov
insl
or
clc
xlat
and
sbb
stc
push
push
fsubp
insl
mov
dec
mov
xchg
loopne
jae
sub
test
push
lock
cld
dec
test
inc
out
and
and
jbe
mov
lods
pop
jnp
mov
int3
sti
mov
subl
xor
or
pop
das
and
add
push
mov
sti
fdivr
cwtl
mov
out
jp
mov
sarl
push
push
sub
sub
jns
cmp
cmpsl
scas
mov
add
js
dec
fmulp
dec
stos
cmpl
dec
pushf
in
dec
pop
movsb
push
adc
add
mov
jo
mov
cmp
xchg
aad
outsl
enter
pop
sbbb
pop
dec
or
leave
inc
mov
imul
js,pn
rorl
or
or
out
mov
addl
lods
ret
push
xchg
mov
fisubrl
mov
insl
xor
sahf
lcall
ds
push
mov
mov
int
shl
fimull
in
ds
imul
js
mov
mov
push
jg
inc
mov
imul
pop
xchg
outsb
cmpsl
jae
fucom
jmp
dec
int3
cmp
dec
movl
add
cli
movsb
sbb
dec
jo
fstl
movb
jge
cli
adc
loope
inc
popf
mov
add
inc
cmpsb
lahf
jnp
fwait
dec
jne
mov
in
outsb
ficompl
mov
adc
or
jmp
std
pop
imul
dec
shrl
mov
int3
pop
loope
jle
or
cli
fistpll
jo
fidivrs
mov
add
rcrl
dec
sti
data16
add
outsb
mov
dec
cmp
das
cld
loopne
data16
jecxz
js
and
and
arpl
pop
dec
nop
popa
insb
pminub
loop
inc
sub
fs
push
popf
cmp
lock
add
hlt
mov
repnz
dec
test
enter
mov
sub
jns
arpl
lahf
pop
movq
jecxz
add
hlt
sub
xchg
cmc
pushf
outsb
pop
push
xor
mov
dec
ror
and
cmp
sbb
scas
icebp
popa
xor
fs
repnz
pop
xorl
addl
mov
xlat
pusha
gs
push
icebp
add
sbb
sbb
lcall
subl
mov
out
push
dec
pop
jl
scas
movsb
daa
js
jmp
mov
push
ja
movsl
enter
cmp
enter
aaa
push
lret
out
aad
popf
xchg
inc
out
or
dec
icebp
sub
push
fs
fsubs
xchg
dec
cld
call
ret
rcll
fstpl
cs
xchg
adc
ds
dec
xchg
add
scas
sub
push
cmpl
gs
mov
jl
scas
mov
xchg
mov
cmp
stos
inc
popf
stos
frstor
lea
mov
mov
fisubl
inc
dec
es
xchg
aas
lock
dec
jns
and
pop
popf
dec
xor
rcrb
jno
cmc
gs
mov
add
fisttpll
shll
mov
rclb
in
loop
inc
pushf
iret
sub
sbb
lcall
in
mov
movsb
gs
cmpsl
jecxz
mov
mov
add
mov
adc
out
mov
push
inc
sbb
sub
outsb
adc
aas
xchg
imul
aam
arpl
icebp
mov
jne
ret
push
adc
out
ja
pop
iret
jle
loope
insb
fs
cmpsl
ret
mov
xchg
jp
push
jmp
sub
mov
ljmp
inc
pop
sahf
dec
clc
popa
jl
sbb
sahf
aas
jno
nop
or
add
mov
inc
mov
std
hlt
adc
lds
xorl
mov
pop
adc
and
dec
in
sbb
outsl
jmp
push
aaa
jmp
mov
ret
scas
or
jb
mov
scas
mov
mov
or
adc
lret
das
fdivrs
xchg
imul
mov
dec
shlb
notl
leave
add
call
mov
test
out
sub
mov
mov
cltd
inc
ljmp
mov
mov
inc
push
addr16
xchg
sbb
adc
cmp
jp
xchg
sbb
and
test
mov
stos
jno
aaa
or
clc
icebp
push
mov
cld
scas
mov
and
and
and
mov
mov
scas
adc
and
fidivrs
cld
movsb
xor
mov
enter
xlat
push
cs
push
or
in
mov
repz
inc
jo
sub
divl
test
movsl
xor
std
xchg
fistps
sub
sbb
dec
out
xchg
add
int
cmp
lahf
add
mov
push
or
xchg
pop
xchg
or
call
aad
xor
lret
nop
xchg
add
push
cmpsl
clc
mov
sub
and
mov
xchg
mov
icebp
cmpsl
or
shrb
pop
or
jcxz
in
pop
add
loop
push
xchg
inc
sbb
rorb
dec
jle
dec
jge
push
jb
pop
inc
lret
test
lock
icebp
jmp
add
jecxz
jne
test
inc
les
lds
aam
cmp
xchg
rep
aam
xor
insl
cmpsl
cld
xlat
loope
sbb
mov
mov
sarl
and
jb
in
cmpsb
psubd
je
cltd
lret
stc
movsb
sub
in
mov
into
fimull
stos
ds
jle
add
scas
mov
pop
mov
rolb
das
jno
adc
loop
mov
sarl
inc
test
ret
lahf
mov
cmp
or
and
movsb
pop
adc
xchg
cmpsl
leave
add
pop
stc
pop
jg
pop
loopne
enter
rolb
loop
sbb
cmpsb
inc
add
dec
jg
cmp
mov
pop
stc
xor
cmp
mov
jno
pop
push
xlat
jg
mov
push
dec
mov
ds
push
in
popa
push
cmp
mov
jle
cmpsb
addl
cmp
cmp
pop
in
sbb
push
and
push
cwtl
imul
xor
dec
jl
mov
cmp
sbb
and
pop
xchg
fdivp
in
or
mov
add
dec
lret
push
nop
xchg
add
sub
push
xor
pop
jp
aaa
inc
das
mov
stos
shl
stos
add
xlat
sub
sub
inc
insl
fisttpl
in
test
lods
lock
inc
fdiv
xchg
push
int3
cltd
jg
lret
sbb
and
mov
jb
jl
inc
push
fistl
cmp
addb
push
test
push
cmc
call
mov
fisubl
jecxz
xor
shrl
adc
aam
subb
dec
or
rorl
cmp
scas
addr16
lea
mov
mov
inc
cmp
mov
push
std
cltd
fwait
pop
rorb
fcoms
add
push
loope
repz
mov
loope
pusha
data16
dec
leave
test
fidivrs
out
push
mov
mov
inc
sub
and
and
push
cmp
dec
mov
mov
xor
stos
mov
mov
cmpsb
xchg
in
xchg
movb
pop
dec
xchg
aas
mov
stc
jnp
sub
icebp
mov
and
jl
sbb
in
pop
push
stos
cld
scas
add
pop
xor
lock
aaa
xor
and
aam
scas
das
in
xchg
xor
dec
pop
icebp
sub
stc
xor
enter
fdivs
xor
ds
test
or
icebp
out
test
test
xor
out
and
ljmp
das
cmp
lock
dec
jle
push
adcl
dec
rcrl
cmpsb
mov
push
mov
out
push
cltd
sub
cmp
mov
push
pop
xchg
push
inc
jno
inc
cmp
inc
push
jle
sbb
mov
pop
into
or
lahf
jo
mov
xor
addr16
enter
add
fimuls
pusha
je
pop
and
fs
inc
outsl
mov
jnp
mov
inc
outsb
pusha
repz
mov
loopne
mov
xor
shlb
scas
dec
inc
jl
cmp
ja
mov
xchg
or
jmp
pushf
mov
ss
lret
int3
or
pop
pop
lock
and
mov
jecxz
sbbb
enter
fucomp
dec
cltd
xchg
pop
mov
mov
dec
mov
clc
bound
test
daa
fimuls
mov
lahf
jmp
cmp
pop
inc
mov
sti
pop
aad
lock
pusha
js
das
in
jb
cli
mov
inc
mov
rorb
ret
cmp
dec
into
les
inc
inc
xchg
cltd
and
aas
mov
sti
roll
js
cli
ret
dec
jg
xchg
pop
enter
fwait
sbb
mov
add
dec
imul
out
dec
cmp
pop
mov
sbb
arpl
loope
movsl
xchg
jne
add
sub
neg
jo
mov
push
hlt
pop
cmp
daa
push
movsb
test
and
xchg
int
out
daa
fcomi
insl
popf
push
pop
adc
sub
call
xchg
popf
sbb
test
or
jecxz
cmpsb
xchg
mov
mov
sbb
sbb
sbb
push
cmp
dec
xor
and
cmp
sub
push
mov
jo
ret
add
cmp
ljmp
pusha
pop
int
fdiv
jns
add
sub
clc
sbb
adc
arpl
outsl
cmpsb
aam
loop
jbe
rol
lods
ret
push
sbbl
cwtl
xchg
cld
cmp
inc
cwtl
dec
cmpps
inc
ljmp
rcl
cmp
mov
inc
xor
pop
ss
lds
icebp
insb
daa
push
fpatan
test
sti
xlat
inc
mov
add
dec
jl
sbb
icebp
xor
mov
ficoml
or
mov
testb
pop
lods
mov
sbb
shl
inc
stos
into
mov
push
and
lock
inc
xchg
pop
jb
push
in
outsl
jecxz
inc
outsb
push
push
sbb
pop
dec
testl
sbb
adc
sbb
and
dec
sbbl
mov
outsb
fistl
daa
sbbb
jp
out
push
test
cmpsl
repnz
sbb
inc
jl
adc
sbb
or
xchg
xchg
jns
jecxz
jecxz
dec
sarb
dec
gs
jge
cli
stos
decl
mov
loope
lcall
dec
sub
test
movb
sbb
imull
push
insb
clts
fndisi(8087
sbb
and
fstpt
jne
and
loopne
lret
push
fdiv
call
and
stos
ljmp
and
imul
cmp
add
out
dec
dec
add
stos
dec
or
add
cs
fisubl
jg
subb
arpl
jge
into
lds
int3
imul
lret
out
fstpl
lea
mov
repz
mov
clc
daa
fimull
pusha
pop
and
or
insl
cmp
test
aam
ret
sbb
pop
mov
push
out
and
add
aas
imul
loope
pop
enter
mov
inc
xchg
shll
add
in
push
mov
cmp
xchg
ss
jb
es
xchg
mov
xor
mov
pop
stos
cwtl
inc
ret
sbb
pop
sbb
jl
adc
xor
jae
fsubs
cwtl
loop
imul
stos
pusha
adc
jl
mov
fsubrp
sbb
pop
jae
stos
ja
xchg
pop
dec
xchg
pushf
cmp
leave
mov
sbb
stc
aam
cmpsb
sbbl
sbb
lea
mov
jae
scas
dec
in
aam
roll
pop
jmp
add
mov
ret
imul
add
mov
ficoml
cmp
inc
lahf
hlt
sbb
push
jnp
loope
aas
bnd
or
inc
pusha
arpl
inc
sub
mov
test
popf
iret
push
les
jbe
pushl
push
pop
pop
jns
xchg
mov
mov
push
fidivl
ljmp
mov
adc
inc
out
pop
lea
data16
test
nop
pop
movsl
ja
scas
dec
add
je
sbb
jecxz
lods
cmpsl
sbb
and
lock
mov
jle
and
jge
sti
push
push
sbb
sub
mov
stos
add
add
cmp
cmp
push
cmp
and
cmc
mov
xchg
outsb
insl
add
js
ficompl
fistpll
ret
sti
dec
mov
leave
dec
lock
mov
imul
and
sbbl
cmc
andb
lahf
scas
ja
cmp
and
fdivs
ja
adc
lea
adc
out
adc
push
jb
xchg
add
mov
popa
add
inc
icebp
sub
repnz
add
ljmp
cmp
js
lret
pop
icebp
push
ss
cltd
pop
fnsave
ljmp
xchg
jle
jle
mov
xor
jp
sub
loope
jg
pop
fnsave
mov
jle
rolb
and
icebp
pop
push
nop
pop
imul
lret
pop
test
mov
fcoms
adc
outsb
push
frstor
xor
mov
cli
xor
into
popa
fisubl
or
mov
xor
lret
mov
and
hlt
inc
mov
imul
fs
ret
lcall
adc
rolb
imul
movsl
arpl
jnp
pop
jne
inc
and
js
mov
ja
ror
xor
adc
test
ds
push
fsts
pop
sub
mov
mov
fstl
sar
ljmp
jecxz
ljmp
iret
rcll
outsl
mov
lret
mov
shl
dec
int3
xchg
cld
outsl
sub
mov
jmp
rorb
jne
mov
jg
adc
ret
jae
dec
push
mov
push
jae
jecxz
lods
popf
push
aaa
lock
or
pop
into
out
mov
mov
ret
xchg
pop
enter
xchg
push
mov
pop
or
ljmp
push
push
xchg
mov
fwait
pop
clc
push
lret
cs
mov
jge
mov
es
out
in
mov
mov
popa
pop
mov
test
sti
and
mov
ret
cmpsl
aad
outsl
js
enter
push
test
lcall
leave
push
push
jl
sti
jge
fildl
mov
cltd
pop
das
pop
push
fistpl
mov
lods
sbb
xchg
iret
sbb
and
stos
sti
mov
vmread
xor
mov
sarb
cs
scas
cld
add
sub
push
and
mov
stc
leave
adc
jbe
inc
mov
push
insl
inc
mov
repz
rol
icebp
mov
in
pop
push
into
sub
push
scas
enter
mov
rdmsr
loope
dec
inc
sub
cmp
and
xor
sub
add
mov
mov
sbb
adc
in
pop
pop
cmc
pushf
js
add
les
ret
xor
int3
sbb
das
xlat
scas
and
leave
je
xchg
inc
jg
sub
mov
pop
or
inc
xor
in
or
inc
jns
add
aaa
fstl
imul
push
jne
subb
aad
cltd
dec
outsb
int3
cwtl
adc
xchg
movsb
aaa
out
sub
adc
pop
jne
xchg
adc
sti
jge
mov
rorb
lahf
lock
fadd
xor
leave
iret
mov
pop
adcb
jmp
push
clc
and
shr
pop
xchg
dec
and
xchg
icebp
jo
loopne
cld
dec
fisttpll
mov
mov
pop
pop
cmp
pop
bound
mov
dec
rcrl
mov
fstpl
pop
pop
gs
fldenv
dec
adc
xchg
cmc
and
shll
jae
movsl
jno
adc
xchg
sub
shrl
push
std
das
loop
mov
jg
cld
repz
pop
push
inc
lds
into
xchg
add
inc
fmull
cwtl
adc
jb
imul
jecxz
insb
lahf
mov
dec
fstp
and
in
insl
rep
and
insb
push
fisttpll
hlt
mov
shll
sarb
nop
aam
mov
cwtl
ss
lods
ljmp
mov
add
aam
cwtl
xlat
add
push
out
out
ja
mov
je
push
int
fst
xor
por
jg
enter
mov
les
and
mov
add
cld
nop
les
enter
push
lea
jnp
push
jecxz
and
lcall
loope
sub
jl
xchg
test
dec
iret
push
shrb
xchg
adc
xor
mov
ja
jo
loope
std
lock
loope
ljmp
push
insl
fisttpll
or
dec
xchg
in
orl
add
stc
adc
out
int3
push
mov
fimuls
add
arpl
out
fwait
push
fs
and
daa
jno
or
std
rorb
ss
fisubrl
pop
sarb
xor
mov
mov
or
fmul
popf
cmp
mov
dec
or
jno
adc
push
jle
outsl
or
repnz
mov
push
call
xchg
push
loope
fdivrs
push
subl
cmp
dec
mov
sub
mov
xchg
mov
ljmp
lock
hlt
lcall
and
push
arpl
hlt
pop
jl
mov
popa
mov
sti
imul
lods
mov
decb
pop
jp
je
ja
push
lds
inc
push
inc
out
push
lock
jg
mov
push
push
es
mov
outsl
sbb
les
cltd
inc
push
movsl
mov
jg
test
sbb
outsb
aam
xor
sub
pop
jnp
or
sbb
ret
adc
clc
ficompl
mov
mov
aaa
ljmp
xchg
inc
icebp
jg
mov
jmp
inc
sbb
mov
inc
stos
xchg
mov
adc
aas
addl
shll
outsl
arpl
int3
arpl
outsl
test
ror
xchg
std
aaa
cmpsb
mov
mov
push
inc
lret
adc
mov
movsl
std
in
enter
cld
xor
dec
test
fwait
dec
jge
inc
mov
clc
jmp
jbe
pop
shl
and
call
mov
imulb
fsubrs
adc
cmpsb
sub
push
in
cmovle
cmc
stc
jmp
and
int
outsl
cmp
cmpsb
aam
pop
test
loope
adc
fbstp
fadds
or
push
fimull
push
fs
arpl
ret
ss
lahf
out
dec
lods
push
jne
hlt
lds
dec
dec
inc
or
outsl
sub
insb
or
rcr
dec
mov
inc
xchg
push
insl
fsubl
fndisi(8087
mov
sahf
cmpsb
sbb
arpl
dec
push
sbb
adc
sbb
xchg
mov
xor
es
test
dec
cmp
sar
icebp
test
hlt
jmp
clc
mov
cmp
cmpsl
jae
fsubrl
inc
mov
daa
adc
shll
jae
loope
je
test
inc
push
leave
ss
xchg
out
in
dec
jl
in
jb
or
repz
sub
adc
push
xchg
addr16
cmp
mov
movsl
and
xor
push
in
push
fdivrl
out
mov
sub
inc
adc
sahf
pushf
mov
jo
add
adc
leave
fidivrs
rcrl
pop
movsl
xlat
mov
loop
cmp
loop
popf
jns
inc
mov
rolb
jmp
sti
push
add
add
fmul
add
mov
in
aad
out
mov
les
and
push
mov
add
cs
mov
test
sbb
add
pop
push
decb
mov
xchg
call
cmpsb
mov
mov
cmp
inc
mov
xchg
imul
jno
add
or
inc
and
inc
inc
mov
das
stos
frstor
frstor
push
ja
push
dec
lahf
mov
add
mov
rolb
mov
popf
sbb
ret
rol
mov
inc
mov
mov
scas
or
mov
xor
sti
pop
nop
int
test
mov
pop
jle
mov
lret
add
leave
out
cmp
imul
popf
fisubrs
into
ret
or
pushf
out
push
cmp
fsubs
shrb
inc
aad
mov
lcall
push
stos
into
sarb
repz
mov
nop
cmc
test
or
idiv
jae
pop
jp
aas
push
dec
int3
daa
adc
mov
pop
ja
lret
adc
adc
jbe
or
das
fldenv
loopne
insb
ficoml
inc
sahf
mov
fcomps
and
xor
xor
mov
popf
test
push
ret
cmc
and
mov
incl
sbb
sub
inc
insl
je
bound
sub
mov
dec
xchg
fwait
insl
nop
shr
js
lock
xchg
pop
or
sub
loopne
jl
mov
ds
mov
pop
and
cmpsb
pusha
xlat
mov
fadds
div
repz
add
push
icebp
stos
xor
jbe
cld
push
or
add
jae
adc
nop
xchg
inc
pop
adc
rorl
arpl
lods
cmp
push
into
fisubs
dec
fmull
xor
push
jo
rcrl
xor
cmpsl
in
mov
jle
sub
pop
mov
xchg
int
push
mov
xchg
leave
push
or
fsub
insl
mov
fisubrs
push
ror
xor
mov
pop
mov
into
jl
loop
je
lock
stos
lcall
mov
inc
aam
test
pop
xor
xor
dec
jb
popf
out
movl
lds
xchg
pop
mov
push
ljmp
andl
sbb
nop
inc
lock
mov
lahf
rorb
jge
stos
push
cmpsl
xchg
mov
and
fwait
repz
mov
stc
cmp
mov
aaa
jg
ror
or
xor
xchg
ficompl
mov
hlt
sbb
inc
push
mov
xor
mov
je
mov
test
dec
jbe
mov
adc
aas
sti
or
sub
mov
ret
push
in
inc
jnp
loop
cmp
test
cmp
jecxz
cmp
inc
sti
outsl
push
push
jg
push
mov
pop
into
adcl
imul
jnp
fcmove
aam
mov
loopne
roll
jge
mov
not
pop
aam
aaa
jmp
in
mov
sbb
lea
ljmp
mov
popa
fcomps
in
out
imul
xor
popf
mov
lret
adc
sarl
fsubrl
dec
rcll
and
xor
mov
arpl
or
scas
or
pushf
mov
sbb
xorb
mov
ja
cltd
jb
loope
push
imul
mov
lret
jp
adc
popf
jae
subb
pushf
push
mov
add
ljmp
jl
lahf
add
cltd
arpl
inc
cmp
add
dec
fdivrp
out
and
mov
ja
adcl
xor
mov
cmpl
or
xor
xor
jo
jb
xlat
adc
cmpsb
jno
repnz
jmp
addl
push
pop
lcall
js
loop
repnz
cwtl
mov
push
dec
xchg
pop
out
xchg
sub
outsl
call
lcall
xchg
mov
mov
movsb
dec
mov
sub
jp
stos
pop
adc
shrl
sub
fildll
sub
lahf
mov
adc
rolb
push
ljmp
push
lret
test
sub
cmp
imul
xchg
dec
inc
adc
scas
sbb
inc
pushf
cmp
test
pop
add
aaa
clc
mov
adc
inc
jge,pt
enter
clc
aad
popf
xchg
jl
ja
out
pop
dec
dec
sbb
inc
pop
inc
out
lret
sub
jne
lea
xchg
jb
pop
ja
dec
cmpsl
movsb
or
pusha
lcall
mov
addr16
xchg
mov
aas
mov
mov
cmpsb
sbb
fisubrl
test
jmp
jae
bound
jp
cmp
rorl
or
fndisi(8087
jle
push
jmp
sahf
test
xchg
out
out
lret
insb
std
jp
fisttpl
sahf
adc
fcmovnb
xor
push
jno
ret
pop
pusha
je
adc
scas
cli
sub
rclb
imul
sub
divl
push
mov
fs
das
adc
push
jl
popf
ja
out
push
mov
in
inc
pop
je
shlb
stc
je
mov
mov
sub
push
in
std
inc
shlb
ret
adc
push
xchg
pop
ja
sahf
or
fcomip
adc
enter
mov
rcrb
jle
dec
fwait
divl
sub
jp
dec
adc
call
lret
sub
jnp
or
ret
in
repnz
loope
out
and
jb
dec
mov
ficoms
nop
mov
jo
lea
jecxz
nop
jecxz
and
xchg
push
push
mov
aad
or
imul
lods
jg
inc
and
sub
aaa
push
imul
xchg
into
adc
std
fwait
fwait
rcr
stos
jb
push
xchg
add
cmp
cmpsb
clc
mov
sub
xor
bound
js
jno
mov
pop
and
mull
lea
xchg
sbb
je
mov
add
mov
push
ljmp
jne
icebp
das
shlb
test
pop
mov
lock
mov
inc
aam
or
pop
jne
adc
xor
in
sbb
and
jae
cmp
push
mov
push
aas
inc
jmp
mov
outsl
sub
xor
fidivl
lods
dec
cmc
stos
mov
inc
mov
sub
out
or
aaa
and
in
dec
test
push
lahf
cld
push
jp
add
mov
adc
cli
mov
mov
arpl
imul
shr
sbb
enter
pop
jns
int
popf
xor
pop
jno
push
mov
adc
sti
pop
push
es
mov
mov
dec
and
test
cmpsb
daa
xor
or
push
lret
aam
adc
push
dec
cmp
ja
fs
push
pop
ror
add
mov
add
or
mov
dec
lods
xor
ds
pop
in
mov
sti
cli
mov
fsubrs
cmp
cmp
into
sub
jo
jge
pop
fcompl
outsb
jo
xchg
push
cwtl
push
decb
and
mov
cltd
pusha
sahf
adc
std
xchg
scas
lret
lea
pop
sbb
rcr
shll
insl
ss
es
pop
jl
pmaddwd
push
shrl
pusha
js
mov
ret
add
mov
adc
cmp
lea
mov
adc
pop
stos
push
pushf
repnz
out
shr
test
int
rclb
mov
mov
aam
mov
mov
jl
lahf
and
data16
ja
mov
popa
jb
fsubl
cmp
dec
mov
jns
jl
fsubrs
mov
dec
sbb
xor
mov
cmpsl
lock
jge
adc
sub
inc
xor
ljmp
sub
sbb
xor
jl
push
in
loopne
icebp
ljmp
lods
mov
aas
orl
int3
jle
mov
cs
mov
popf
imul
lea
out
scas
outsb
lea
inc
mov
push
incl
out
daa
lock
mov
scas
jae
inc
into
ja
dec
lret
mov
cmp
hlt
jne
pop
add
push
popa
fcomps
xchg
mov
addl
adc
inc
push
negb
or
mov
mov
cmp
inc
in
jo
mov
sub
xlat
lea
mov
in
fsubrp
push
cs
sbb
aad
mov
adc
jecxz
or
dec
adc
fprem
and
add
cmp
jb
cs
sahf
xchg
nop
or
data16
adc
push
xchg
out
out
push
add
sbb
fwait
xor
dec
cmpsb
cmp
sub
push
enter
jg
sub
push
push
addr16
mov
iret
pop
xlat
cmp
push
fs
xchg
pop
scas
das
repz
nop
iret
mov
fsubl
mov
and
cmp
xchg
fisubrl
mov
push
fidivs
leave
notl
mov
jbe
dec
movsl
dec
mov
push
ljmp
fsubrl
in
imul
imul
leave
add
mov
outsb
lea
sbb
cmp
cs
mov
rorb
loop
dec
adc
jecxz
adc
loope
lods
pop
scas
or
sub
add
mov
jp
adc
jmp
pop
ds
lods
add
popf
lds
or
and
adc
sbb
jns
sbb
mov
xlat
add
in
in
mov
xchg
sbb
or
push
jne
repz
mov
add
std
bound
test
jp
cli
or
xchg
mov
or
push
sub
cld
mov
add
jo
push
xchg
lock
cmp
sbb
dec
imulb
inc
or
xchg
or
nop
lcall
add
cli
nopl
rcrb
dec
rcl
jg
mov
xor
jbe
xlat
insb
sbb
xor
outsl
or
test
push
aaa
push
cli
test
outsl
ja
inc
xor
jnp
out
std
jno
cmp
test
pop
clc
xor
dec
filds
mov
dec
jp
mov
mov
or
cwtl
icebp
mov
pop
scas
out
stos
push
add
ds
fnsave
xor
mov
inc
adc
xchg
ficoms
outsb
inc
aad
xchg
out
imul
dec
imul
jg
xchg
sbb
arpl
bound
and
adc
lret
cmp
or
in
ret
sbb
fildll
mov
out
in
push
out
rcrl
ret
pop
pop
jl
push
clc
jl
push
lods
adc
add
lret
sub
shr
cmpl
dec
inc
in
and
mov
add
shr
test
fcoms
fistps
out
imulb
in
hlt
lret
and
mov
ficoml
xchg
scas
in
or
insb
fs
fists
cmp
jnp
hlt
hlt
jg
dec
clc
das
lret
add
stos
fnstenv
sbb
sahf
aam
xlat
add
xor
jo
mov
testb
lcall
mov
hlt
test
jae
iret
sbb
mov
test
xchg
loop
cmp
bound
ret
xchg
xor
shrb
mov
data16
push
dec
les
vaddps
negl
adc
ljmp
push
xor
into
cs
int3
push
xor
mov
mov
xor
mov
push
enter
add
fwait
sbb
mov
inc
idivb
mov
mov
mov
dec
sub
ljmp
adc
inc
repz
popa
stos
stos
jecxz
push
sbb
movsb
loop
mov
je
adc
ja
sti
add
push
xchg
push
rorb
mov
dec
js
push
jns
lahf
lret
iret
xor
jmp
lahf
dec
call
ret
sub
pusha
leave
inc
pop
dec
mov
push
xchg
mulb
shl
nop
mov
shrl
xchg
gs
imul
notl
pop
aaa
cmp
js
int3
push
dec
mov
call
mov
mov
lahf
hlt
and
or
mov
pop
paddq
xlat
gs
popf
sub
cmp
lcall
pop
andb
test
inc
mov
popf
out
lods
pop
sbb
dec
mov
push
pop
jae
idiv
xchg
test
xor
es
mov
or
xchg
pop
sti
adc
int3
xchg
lods
adc
xor
dec
out
or
ds
lahf
stc
rcrb
adc
stos
lock
imulb
daa
insl
adc
fsts
or
mov
pushf
enter
dec
mov
dec
aas
outsl
cs
test
incl
inc
in
stc
xchg
mov
imul
push
mov
push
cld
push
dec
shll
xor
jl
or
inc
addr16
ret
loope
pop
jg
std
cmp
mov
jle
popf
pop
aaa
test
aam
mov
pop
or
fcomps
into
fisttpll
pop
pushf
xor
pusha
lcall
cmp
or
inc
sub
sbb
mov
es
sbb
enter
mov
repnz
into
add
daa
and
adcl
mov
ja
daa
jns
fldcw
repz
xor
sti
aad
ret
add
bound
sub
cmp
ljmp
rorl
inc
and
outsb
cmp
xor
iret
and
sbb
jmp
pop
pushf
jle
std
xor
out
loop
xor
sarb
das
ss
rorb
and
dec
iret
and
sub
sbb
andl
cmp
push
lock
fnstcw
int
add
mov
and
lea
daa
sbbl
mov
jle
jle
xchg
jmp
pop
and
dec
dec
movsb
stc
mov
out
mov
mov
and
mov
mov
xchg
dec
cld
sbb
cltd
sub
ds
push
imul
ficompl
cli
push
cmpsl
pop
scas
inc
sbb
dec
call
dec
adc
ret
sbb
das
xchg
xlat
xchg
cli
sub
cld
jecxz
scas
push
je
lds
jp
fstpt
push
jmp
test
mov
arpl
scas
mov
pop
lea
inc
xchg
jne
push
js
dec
into
push
shl
jns
mov
cwtl
loopne
adc
jae
mov
dec
xor
popf
outsl
sub
mov
scas
push
mov
adc
jne
cmp
adc
xor
sub
mov
mov
mov
adc
hlt
adc
fdivr
xchg
stos
pop
ljmp
cltd
inc
clc
out
sub
mov
in
pop
fwait
dec
xchg
cmp
jo
mov
popf
popa
xor
in
pop
inc
pop
ja
aas
add
nop
jmp
aam
pop
jno
mov
sub
xchg
in
sub
mov
mov
adc
and
ds
out
dec
int
mov
dec
sbb
lahf
cmp
sub
push
mov
jl
das
pusha
insl
dec
cld
adc
shr
cld
xor
mov
add
or
push
enter
xchg
xchg
mov
cli
xor
push
enter
test
cld
inc
fnsave
inc
lock
imul
test
ffreep
clc
dec
mov
xchg
mov
xor
dec
mov
and
in
push
fcoms
jmp
cmpsb
fadd
cmp
bound
xchg
out
dec
popf
dec
push
movsl
rcrl
add
sahf
pop
jle
pop
mov
lock
out
loop
or
ljmp
or
call
pop
mov
leave
and
mov
sbb
leave
stc
imul
xchg
es
jns
cmp
pop
or
shl
stc
xchg
imul
mov
stos
dec
das
adc
pop
movsb
push
and
enter
sbb
xor
fmull
pop
aad
sbb
pop
jl
xchg
or
cld
adc
mov
push
adc
or
mov
mov
lock
cwtl
fnstenv
xor
push
lahf
cmpsb
es
icebp
mov
mov
push
mov
pop
aas
add
pop
inc
and
out
cmp
rcrb
mov
out
out
pop
test
bound
mov
fisttpll
sbb
xchg
lea
xchg
inc
cli
rorl
out
xchg
ds
adc
or
movsb
jecxz
add
adc
xchg
mov
xor
repz
loop
inc
das
or
bound
inc
fwait
in
in
inc
ficoml
aaa
sti
xor
lret
inc
popa
mov
mov
cmp
dec
mov
pop
fistps
faddl
sub
scas
mov
shlb
sti
gs
push
xchg
push
repnz
mov
xor
push
cmpsl
insb
cli
mov
push
mov
jp
ffreep
es
cltd
mov
movsl
dec
mov
ss
sarb
xchg
addr16
sbb
jg
mov
dec
imul
dec
jne
je
nop
or
cmp
sub
out
dec
mov
in
iret
mov
enter
xorb
clc
into
int3
xchg
gs
lcall
push
loop
in
pop
out
dec
jmp
roll
add
inc
sbb
aas
loope
fs
push
test
fwait
je
lcall
daa
jecxz
push
inc
icebp
mov
aam
fistl
jae
in
inc
or
mov
jo
jp
cld
fwait
pop
mov
int3
jne
in
out
or
test
repz
or
xor
or
orl
cld
dec
pop
stos
popa
push
ss
fldl
or
mov
call
and
push
dec
jg
ror
ficomps
adc
sub
inc
mov
in
mov
jp
mov
out
addr16
pop
out
imul
mov
cmp
movsl
adc
add
and
popa
lock
es
jns
arpl
mov
mov
testl
icebp
xor
int
cs
cs
cmp
out
and
push
and
xchg
shl
lock
cld
jl
or
inc
je
lods
cmp
push
aad
outsl
ret
sbb
ss
adc
or
out
jno
and
and
mov
daa
lds
inc
cmp
insl
mov
fs
xchg
fincstp
arpl
jg
scas
mov
jmp
xchg
lods
call
push
mov
outsb
fsubs
xchg
dec
push
stos
push
lock
jo
orb
loopne
mov
imulb
adc
and
sahf
sub
pop
enter
sbb
mov
rorl
push
pop
dec
mov
cmpsl
repz
repz
test
xlat
fstpt
imul
inc
sub
push
inc
lods
popf
enter
adc
adc
jle
mov
mov
push
sub
cmp
adc
xchg
cmp
lcall
stos
sbb
in
es
leave
popf
xor
mov
mov
das
mov
pop
iret
adcl
scas
xchg
movsb
or
std
xlat
cmp
mov
jnp
mov
into
push
std
insb
into
inc
cmpb
sub
fidivrs
popa
cmp
mov
push
pop
mov
dec
in
sti
mov
xchg
dec
mov
insb
dec
sub
push
and
sub
cmpsl
clc
mov
cli
xlat
dec
mov
xchg
add
sbb
lret
and
xchg
test
enter
testl
push
push
insb
dec
mov
stos
dec
mull
lea
or
push
mov
cmpsb
addr16
xchg
dec
push
sub
push
call
inc
jg
faddl
insb
out
pop
lods
and
cld
sub
mov
imul
sti
aad
into
xchg
aam
rcll
popf
aam
mov
shrl
cmp
inc
je
add
in
jl
lea
add
mov
pushf
inc
jmp
xor
xor
adc
jnp
out
xchg
dec
bound
sub
jg
insl
arpl
mov
sbb
out
fucomp
cmp
xlat
jbe
popf
outsb
test
sub
dec
mov
inc
xchg
lds
aaa
orb
xchg
pop
or
adcb
rclb
lret
mov
adc
jnp
push
push
inc
mov
mov
pop
mov
pop
mov
mov
mov
xchg
jns
in
loope
imul
xchg
cmp
lea
enter
test
mov
inc
jnp
mov
cs
out
inc
sub
xor
fmul
rol
jle
int3
jp
imul
push
popf
stos
and
add
jl
mov
cmpsl
dec
mov
ds
sbb
arpl
mov
dec
sbb
mov
mull
dec
mov
jle
pop
out
ficomps
adc
jl
mov
mov
mov
out
je
or
roll
in
das
scas
je
rorb
inc
iret
sub
inc
lret
dec
data16
push
xchg
push
lock
pop
and
push
jp
mov
movl
rol
nop
rorb
leave
inc
repz
push
mov
xchg
add
push
cmpsb
mov
movsb
pushf
dec
jg
fwait
pop
adcb
mov
sbb
push
mov
cmpsb
stc
leave
imulb
cmc
mov
add
loope
test
xor
nop
dec
or
xor
mov
cli
test
mov
push
out
pop
call
leave
pop
das
ss
jne
lret
ret
outsb
int
pop
push
out
sub
push
mov
cli
in
scas
lcall
pop
in
mov
mov
jne
int3
sub
out
outsb
jge
dec
sbb
out
mov
cmp
mov
add
shl
aas
in
loop
loop
inc
ss
mov
jle
pop
add
cwtl
cld
shll
out
sbb
ror
pop
inc
bound
dec
jbe
mov
mov
mov
mov
flds
jno
mov
xchg
push
mov
lods
sub
arpl
pop
out
xorl
dec
dec
repz
jge
add
aas
mov
je
jbe
hlt
shr
sbb
pop
pop
mov
test
pop
repnz
pop
stos
or
pop
adc
add
sbb
jns
mov
lret
and
sbb
leave
stos
aad
dec
fcomip
xor
sub
addr16
jg
data16
xchg
push
lcall
xchg
push
adc
xor
lret
sub
aam
jae
idiv
daa
push
insb
and
cmc
aaa
sbb
or
test
or
orl
into
push
pop
pusha
mov
or
lods
push
push
and
xchg
fstpl
lock
pop
in
out
cmpl
adc
imulb
cltd
mov
pop
rorb
ret
sbb
jmp
push
mov
mov
sub
js
cmp
test
lock
fidivrs
in
cmp
dec
push
sbb
in
mov
xchg
mov
inc
xlat
int
or
jnp
mov
fisttpl
jb
dec
sub
incl
and
arpl
mov
jne
adc
mov
std
mov
mov
add
clc
fsubp
rcrl
loope
popa
xchg
subb
fwait
jo
mov
sub
jbe
aad
loopne
rcrb
jp
jne
rcrl
repz
out
shr
test
inc
fisttpl
rclb
aas
or
jg
rcll
jle
fcomi
shlb
stos
xchg
dec
jecxz
push
cli
inc
mov
adc
hlt
scas
clc
out
fcompl
xor
faddl
pusha
loop
cld
xor
out
es
cld
in
add
scas
sbb
push
push
ss
out
mov
pop
shlb
movsb
fnstsw
xchg
test
mov
sbb
ljmp
jmp
push
push
rcrb
sub
into
mov
pushf
loop
pop
insl
out
mov
bound
aaa
popf
mov
cmp
cs
imul
mov
sbb
pop
xchg
inc
lds
cwtl
pop
shrl
and
nop
and
dec
cmp
mov
push
roll
inc
daa
inc
mov
jmp
mov
xchg
sbbb
lods
dec
lea
xchg
mov
push
mov
pop
mov
mov
jg
loop
mov
xchg
test
jno
mov
lcall
clc
ret
fmull
sbb
sub
jp
je
xchg
pop
or
inc
dec
ds
xor
into
shlb
inc
insb
jns
mov
push
inc
sbb
pop
loopne
push
aaa
repz
mov
mov
fcomps
addr16
int
jbe
mov
lock
cmc
rorl
out
cwtl
add
lock
div
out
push
push
lret
cmp
es
mov
movsl
inc
jae
cmp
test
push
sub
add
rolb
xchg
jp
pop
movsl
push
lock
mov
and
pop
dec
lret
or
nop
inc
sbb
pop
scas
in
inc
mov
push
imull
shlb
ss
aam
stos
xchg
out
neg
inc
mov
icebp
es
jae
jg
inc
push
loope
lcall
aad
not
push
sub
cmp
mov
insl
movb
xlat
add
mov
insl
push
test
adc
adc
and
pop
mov
mov
dec
rorl
fwait
adcb
incl
insb
dec
sub
jns
xor
subb
icebp
test
or
xchg
fstpl
sub
fdivrp
jne
jns
movsb
movsl
sbb
lahf
pop
outsl
push
xor
fnsave
lds
mov
push
jg
mov
ret
in
mov
lods
and
inc
stos
push
lcall
push
aad
push
cmc
mov
push
xchg
loopne
add
push
lock
dec
dec
fs
jmp
add
mov
lret
inc
fcompl
dec
stos
xchg
jmp
mov
xchg
pushf
inc
mov
aam
nop
inc
repnz
loop
push
cmpsb
add
repz
xor
lret
arpl
lock
and
and
mov
add
mov
mov
leave
imulb
je
cmp
sti
mov
dec
sbb
mov
insl
mov
inc
and
mov
xchg
or
inc
out
push
xchg
sub
inc
jne
frstor
inc
sbb
fdivs
xchg
dec
mov
popa
jl
xor
and
stos
ror
test
mov
sbb
or
xor
jl
xchg
cld
aas
mov
rorb
dec
sbb
or
aam
pusha
dec
jecxz
int3
mov
or
bound
jne
icebp
and
repnz
mov
sbb
aad
movsb
add
cmpsb
xlat
in
cs
fs
jle
pop
stos
sub
int
ss
xor
xor
addr16
mov
ljmp
in
dec
lods
sub
jb
jmp
test
mov
ja
js
jo
out
bound
mov
mov
outsb
xorl
inc
cmpsb
jns
pop
mov
lahf
dec
cmp
or
scas
dec
sub
cs
test
pop
jno
add
ja
pop
ret
lret
sbb
jae
push
mov
not
cmp
sub
xor
repnz
push
add
push
inc
rcrl
stos
aam
mov
mov
in
mov
mov
mov
into
fiadds
cmp
inc
inc
stos
loope
daa
push
xor
stos
cltd
dec
and
jbe
cmp
mov
xor
out
jp
xchg
dec
xor
pop
scas
sbb
arpl
xor
sahf
mov
mov
mov
mov
push
inc
jae
sub
stos
mov
adc
mov
loope
call
es
arpl
adcb
fisubrs
xchg
test
adc
in
inc
cmp
push
xor
adc
pop
add
btcl
je
dec
xchg
xor
cwtl
das
xchg
lds
sbb
test
stc
jne
xchg
xor
push
in
scas
cmp
arpl
insl
fdivs
arpl
xor
rcr
addr16
jo
or
and
jle
sub
push
jbe
in
or
pop
sbb
cmc
arpl
mov
scas
clc
pop
clc
xchg
and
sub
pop
xor
adc
stos
in
pop
test
pop
sub
push
xchg
add
data16
add
inc
pop
aad
mov
rolb
mov
xchg
stc
cmp
push
mov
fdivs
inc
mov
in
jmp
xor
enter
add
mov
cmp
xor
push
sub
mov
mov
es
in
sbb
push
or
pop
mov
mov
lods
sbb
int
or
mov
or
fcmovbe
push
lcall
sub
jp
repz
mov
test
xor
inc
fprem
das
add
add
fs
or
pushf
loope
mov
cwtl
out
xchg
mov
icebp
inc
jl
movsl
loop
fsubs
pop
js
mov
cld
shll
sub
sub
push
ss
cmp
mov
xor
es
inc
rcrl
outsl
out
adc
hlt
roll
lods
xchg
push
xchg
pop
jo
jecxz
mov
sub
inc
sbb
movl
or
and
mov
mov
xor
cmp
test
outsb
cli
aam
jmp
jae
add
rcrb
jg
aaa
inc
aaa
in
push
out
les
test
add
and
add
das
fcom
outsb
sub
addb
dec
clc
push
mov
jne
pop
cmp
inc
add
fsubl
movsl
iret
sbb
and
or
icebp
sahf
inc
jns
es
jae
sub
addr16
imul
adc
fisttpl
inc
fbstp
icebp
lods
pop
and
into
sub
dec
dec
test
cwtl
shll
xchg
sub
subb
add
mov
xor
nop
push
cmp
mov
ss
add
cs
adcb
pop
jg
dec
pop
cmp
arpl
leave
mov
jecxz
push
push
data16
cmp
xchg
ljmp
repz
addr16
daa
dec
lock
sahf
xor
loope
jae
xchg
push
add
int
sahf
shl
pop
pushf
mov
add
or
stc
loope
adc
fbstp
aad
jae
dec
andb
hlt
inc
leave
div
jecxz
add
mov
stc
push
dec
dec
lahf
adc
loop
inc
nop
lock
sahf
jns
dec
sbb
inc
inc
je
in
popa
in
lds
rorb
xchg
mov
aad
inc
push
xchg
std
pop
mov
out
mov
repz
or
and
sub
or
mov
adc
mov
leave
rorl
xor
push
or
stc
fsubs
fcompl
scas
and
xchg
out
or
jo,pn
jl
sub
sub
imul
std
ficomps
test
jl
pop
addb
fwait
sbb
sub
rcl
ja
pop
pushf
outsl
insb
push
xor
int3
sbb
stc
lock
adc
inc
mov
aaa
sahf
or
sahf
popf
or
stos
xchg
sbb
xor
xchg
xchg
add
sbb
mov
cmp
fildll
lods
jo
inc
sbbl
pop
mov
cltd
xor
adc
or
leave
pop
mov
nop
sub
inc
nop
jle
push
inc
jnp
or
pop
jo
mov
pop
dec
dec
scas
subb
jle
rcr
cltd
and
idivl
rclb
inc
cmpsl
es
aam
aam
enter
popa
add
xchg
and
sarb
cmp
stc
mov
mov
mov
pop
push
dec
dec
sbb
jle
out
in
xor
lock
jecxz
insl
pop
dec
jl
mov
pusha
or
mov
pop
fstps
hlt
lcall
pop
mov
sbb
dec
push
sbb
push
imul
iret
into
mov
mov
test
pusha
mov
stos
fisubrl
addr16
cs
sti
je
rcrl
sub
push
je
xlat
and
in
push
and
ret
sahf
cmp
push
jo
cmp
inc
inc
mov
jmp
pop
imul
cmp
mov
mov
mov
lea
rcrb
sub
leave
xor
in
cld
xor
add
mov
push
outsl
daa
shrb
sub
sbb
dec
shlb
in
arpl
andb
aam
sub
in
or
test
arpl
or
insl
or
js
loope
outsb
stos
and
test
data16
mov
sub
ffree
cmp
mov
cmpsl
pop
and
fwait
xor
fs
push
stos
inc
fs
xchg
push
cwtl
mov
xchg
repnz
rolb
push
dec
mov
lcall
xchg
pusha
mov
or
test
jb
jge
stos
xor
hlt
and
jp
nop
orb
jne
jae
call
ds
xor
mov
jmp
aas
movsb
sbb
pop
jnp
addb
stos
mov
cmp
fdivrp
ljmp
repz
add
jbe
push
mov
aas
inc
and
loope
mov
ret
push
cmpsb
pop
mov
and
test
fcomps
push
stos
push
lea
mov
dec
fnstenv
mov
movsb
sti
repnz
jbe
negl
mov
sub
addr16
pusha
loop
scas
jle,pn
jecxz
sub
in
insl
pushf
adc
inc
dec
pop
nop
cli
das
mov
push
ljmp
clc
jecxz
das
xor
add
push
ret
out
jp
cmp
sub
popf
inc
dec
ljmp
xor
or
dec
dec
insb
mov
nop
data16
bound
jle
adc
aad
xor
notb
shlb
mov
fnstcw
push
pop
shrb
jge
xchg
push
jo
shll
out
xchg
or
push
add
sbb
cmc
cmpl
cmpsl
xlat
inc
jmp
xchg
push
adc
pusha
fwait
adc
jbe
lret
cmpsl
loope
pop
inc
xchg
hlt
xchg
repz
jmp
sahf
or
mulb
xchg
xorl
push
dec
in
adc
in
jnp
pop
inc
ret
jo
xchg
add
mov
cwtl
sub
cmp
cwtl
imul
jns
lds
sub
repz
pop
mov
ret
popf
loopne
xor
leave
push
pop
movsl
stos
fdivr
xchg
mov
ret
and
cmpb
xchg
push
pushf
sub
xchg
adc
fcoms
sarb
sbb
je
mov
nop
out
push
push
ret
cmc
ja
xlat
fistl
mov
not
pop
or
iret
sarb
repz
in
pop
pop
mov
cmp
lahf
mov
and
stc
push
mov
out
push
stc
jmp
push
std
out
push
or
xchg
dec
xchg
movb
mov
and
sar
loop
roll
xchg
iret
dec
mov
jbe
insl
bound
iret
and
nop
decl
cmc
das
mov
pop
dec
fisttps
lds
stos
and
adc
cli
push
popa
cmp
cmp
lds
or
push
adc
icebp
imul
test
ja
dec
cli
pop
push
mov
and
sbb
jnp
lahf
repnz
sbb
jb
xchg
sub
mov
lcall
hlt
jp
push
sbbb
add
mov
call
or
orl
pop
cmp
add
stos
aas
insl
ljmp
jae
mov
adc
sub
push
adc
xchg
rclb
and
dec
out
arpl
loopne
pushw
cmp
sti
xchg
push
inc
fwait
xor
dec
adc
fs
call
cmc
rcrl
mov
test
mov
addl
and
sti
sbb
mov
bound
add
sub
ret
push
jecxz
mov
mov
fisubl
push
push
jg
movsl
jb
cmp
jg
xor
xor
pop
test
sbb
data16
pusha
lock
fnsave
popl
mov
pop
mov
jl
xchg
pop
cmp
xor
cmp
popf
sbb
ja
xor
cmpsl
sbb
mov
mov
out
adc
decb
dec
addr16
fs
out
fs
fmull
nop
add
jp
cmp
pop
daa
mov
lods
clc
fnstsw
mov
cmp
int
and
jae
push
push
sub
fisttpl
mov
das
add
pop
sbb
xchg
fldl
dec
xorl
sub
mov
cmpsb
or
popa
sbb
ds
mov
sbb
call
or
orl
fs
mov
mov
test
or
fwait
mov
aaa
adc
and
inc
sti
ja
es
mov
shlb
xor
mov
sbb
cmp
push
inc
push
pop
lret
fcmovu
iret
inc
fcompl
and
and
pop
xor
fsts
clc
jl
lahf
mov
dec
xchg
mov
and
stos
lods
fnsave
stc
pop
push
add
mov
inc
popf
leave
iret
in
mov
mov
or
imul
sub
aam
adc
cmpl
mov
into
in
adc
or
loope
push
pusha
inc
sbb
cld
loop
or
out
enter
cli
or
push
xchg
imul
lods
dec
adc
xor
insl
xor
mov
sbb
cwtl
sub
pop
ret
data16
sbb
jo
pop
add
mov
sub
bound
je
adc
mov
lret
pop
sub
xor
in
mov
pop
jno
xchg
fstps
stc
je
sub
sahf
pop
push
aas
loope
clc
jle
arpl
ja
aas
dec
xchg
jge
pop
das
pusha
dec
aad
int3
mov
pop
roll
sub
int
push
scas
dec
cltd
or
cmc
and
mov
push
cmpsl
rol
aaa
mov
and
icebp
or
push
or
loopne
xor
aam
jae
movsl
pop
insb
xchg
fisttpl
dec
ret
and
movsb
inc
test
sub
cmp
mov
fiaddl
sub
arpl
jbe
je
xchg
push
popa
fsubrs
mov
testl
nop
cmpsl
pop
inc
fcoml
stos
xchg
add
sub
fcom
or
jae
mov
mov
xchg
pop
jge
xchg
adc
loopne
pushf
mov
cmp
stos
out
mov
push
roll
adc
fdivl
lea
dec
daa
shrb
enter
pop
pop
pop
xorl
jo
gs
pop
sub
pop
xchg
xchg
hlt
popf
xor
dec
mov
and
push
cmp
es
fucomp
ret
pop
mov
inc
popa
or
cmpl
add
cmp
mov
jmp
mov
shlw
jg
sbb
adc
fiaddl
push
loopne
xor
test
pusha
sub
adc
inc
rcll
mov
xchg
jbe
mov
mov
xor
or
loope
jae
fsubs
dec
iret
aas
sub
mov
and
xor
xor
les
sbb
mov
inc
fldenv
insb
jecxz,pt
add
fnsave
addl
xor
and
xchg
je
mov
push
xchg
sub
testb
cwtl
lcall
cli
jecxz
fbstp
sub
nop
into
lahf
inc
mov
jle
adc
cli
aaa
or
jmp
mov
and
jmp
idivl
pop
stos
inc
add
in
adc
popf
bound
sub
ljmp
arpl
jmp
inc
iret
sub
leave
push
daa
lods
sbb
in
int3
lods
inc
movsb
push
push
sbb
sub
or
hlt
pop
jmp
and
lods
arpl
pop
cwtl
xor
mov
aas
add
xor
lahf
out
jae
jns
sti
movsl
ds
push
nop
or
sti
fisttpl
xchg
popa
mov
lods
pop
sbb
in
mov
dec
pop
sbb
mov
inc
mov
jno
stos
mov
nop
jne
dec
xchg
cwtl
mov
mov
and
push
inc
stos
scas
add
lahf
ret
fidivrs
cwtl
xchg
push
xchg
stc
xor
cmp
jno
ljmp
or
fsubrs
mov
and
sarl
inc
fcmove
rcr
incb
jmp
outsl
orb
fcoml
pop
cli
addr16
or
jg
mov
push
pushf
cmpb
mov
mov
xchg
mov
sti
xor
fcmovnu
dec
mov
xchg
mov
aaa
cmpsb
sub
cmp
inc
push
push
add
call
add
push
jmp
inc
mov
dec
push
mov
fcom
push
add
fdivs
outsl
dec
call
adc
inc
sbb
mov
inc
rcrl
cmp
iret
mov
cmp
dec
mov
and
mov
add
data16
int3
sub
sarl
imul
xchg
jmp
iret
daa
sbb
pop
mov
xor
jecxz
hlt
jmp
aaa
push
ljmp
lea
rcl
push
test
push
dec
xchg
aaa
sarl
test
movsl
xchg
xor
push
mov
std
cld
xrelease
es
dec
mov
sbb
jae
sub
inc
or
or
fnstenv
idiv
or
shrl
dec
ds
in
adc
popf
lds
mov
aas
push
cwtl
mov
add
dec
or
add
fxch
ljmp
pop
pop
addr16
in
pop
pop
into
pop
mov
xor
pop
push
and
lahf
mov
xor
fisubs
dec
movsb
in
push
xor
dec
mov
xor
arpl
fisttpll
out
inc
push
add
jp
out
or
add
xor
test
mov
roll
in
and
notl
or
leave
int
pusha
xor
movsb
iret
dec
rcr
adc
jl
pop
sti
pop
inc
or
mov
out
push
repz
inc
dec
push
cmpsl
aaa
dec
sbb
or
mov
pop
xor
out
dec
aas
dec
xchg
data16
mov
lret
mov
sarb
xchg
pushf
mov
cmpsb
shlb
mov
mov
mov
and
mov
sahf
int
add
jno
fwait
adc
sarl
bound
lds
paddq
dec
popf
cmp
ficoml
adc
mov
jmp
mov
jne
inc
mov
in
push
fsubp
outsb
sub
sub
jae
gs
push
mov
in
stos
push
jno
mov
ds
sahf
sahf
and
mov
inc
leave
mov
mov
rcrb
sub
push
or
mov
pop
je
sub
xchg
popa
loope
inc
xchg
pop
jle
enter
mov
jge
mov
setp
push
fsubrs
mov
insb
push
dec
jecxz
xchg
adc
jmp
adc
cmp
fstpl
stc
mov
add
sbb
cmp
mov
xchg
sbb
adc
xor
insb
sub
int
xor
nop
push
xor
dec
into
out
pusha
mov
js
jl
mov
inc
popf
or
das
popf
jmp
inc
mov
xchg
push
xchg
mov
pop
sub
ret
cltd
adc
mov
and
inc
inc
pop
ffreep
xchg
out
mov
jo
xor
lcall
add
shrb
faddp
xchg
cmc
repz
loope
fcom
push
hlt
test
enter
fiaddl
mov
pop
jae
pop
push
int3
sub
dec
push
test
lock
pop
sbb
cmp
mov
addb
mov
jg
and
add
lock
adc
mov
roll
add
test
and
cli
orb
xlat
mov
ds
mov
call
ja
les
shrb
cld
jnp
or
sbb
and
pop
adcb
xchg
or
stos
loopne
cmpsl
sub
dec
push
push
or
and
or
pop
pop
sub
dec
fcmove
nop
cwtl
ja
sahf
aas
outsl
xchg
pop
push
lods
inc
stos
push
leave
cmp
dec
lock
fsts
mov
test
cmp
xchg
pusha
pop
ljmp
mov
cltd
daa
push
ds
stos
imul
jnp
add
xor
fnstsw
pushf
dec
mov
orb
or
lahf
outsb
adc
sub
dec
mov
loope
mov
xchg
push
cld
sbb
ja
cmp
icebp
ds
push
push
out
lahf
fwait
xor
not
aam
adc
ds
sbb
fstp
and
jo
pop
lods
loope
inc
xchg
jp
push
ja
mov
mov
xchg
mov
cmp
movsl
nop
add
ja
xchg
in
cmpsl
clc
sub
repnz
daa
xchg
cmpl
sub
movsl
cmovp
rcll
psllw
leave
scas
sbb
xchg
sub
mul
or
popw
mov
fildll
inc
sub
arpl
fwait
shlb
lcall
int3
out
or
std
out
pop
xor
mov
stos
ss
cmc
sahf
stos
movsb
and
and
bound
adc
cwtl
adc
leave
test
loop
cmp
lcall
push
out
jnp
xchg
nop
dec
xlat
and
mov
pop
or
add
xchg
notb
cmp
jmp
scas
mull
out
neg
jl
ja
xor
lock
push
insl
jns
loop
mov
add
into
xor
scas
inc
pop
ss
testl
jp
inc
sbb
sub
iret
push
shll
or
and
mov
dec
shlb
fmull
insb
push
inc
dec
inc
jo
stos
stos
pop
fstpt
es
cmp
out
outsb
sub
xor
mov
adc
fisttpl
js
out
lcall
aas
out
lret
add
mov
nop
sbb
mov
cltd
subl
insl
or
ljmp
jmp
or
loope
cmpl
dec
jg
jno
and
lcall
pop
lods
inc
xlat
sahf
sbb
and
dec
xor
fdivp
lcall
pop
dec
movsb
lods
dec
into
ljmp
addr16
mov
in
push
or
push
sbb
mov
and
daa
jecxz
fwait
sbb
xor
push
sub
mov
insl
ret
xchg
cld
or
test
mov
mov
pop
lcall
inc
pcmpeqw
das
lret
jle
xor
cltd
rclb
mov
and
cmpsb
popf
dec
arpl
std
mov
rcrl
sbb
pushf
dec
adc
jl
pop
shrb
ja
jns
call
scas
push
fisubrs
push
dec
cmp
adc
shlb
cmp
sbb
or
inc
dec
and
adc
push
repz
sbb
cs
movsl
leave
nop
out
add
pop
fisttpll
push
je,pn
cmp
adc
fsubr
decl
aad
das
rol
mov
outsl
inc
jecxz
push
test
and
cmc
dec
and
dec
mov
fsubs
xlat
and
dec
mov
xor
inc
push
in
xorb
xchg
pop
lret
push
aam
sbb
ret
sbb
popa
mov
std
mov
out
mov
scas
dec
mov
sbb
add
lods
sbb
pop
cmp
inc
sub
xor
cwtl
cmp
movsb
dec
popf
movsl
ja
fxch
lret
outsl
fwait
dec
out
sahf
js
pop
roll
mov
shlb
sub
lds
movsl
ljmp
adc
mov
les
mov
popa
in
and
adc
mov
jae
popa
popf
outsb
or
es
pusha
cmc
jle
push
sub
jbe
mov
jmp
jle
push
arpl
ja
sbb
inc
sahf
cltd
mov
or
jnp
mov
shr
mov
inc
ja
shr
adc
jp
fsts
jo
js
pop
pop
loopne
cmp
in
aad
adc
aaa
mov
adc
xor
lock
cmc
jb
xchg
xchg
iret
or
je
fmul
fsubl
inc
flds
aad
loop
inc
xor
pop
shr
test
roll
adc
je
and
leave
xchg
jnp
push
push
mov
repnz
int3
insb
jecxz
cs
out
mov
insl
push
cmc
inc
mov
lds
pop
xchg
pop
mov
imulb
and
pusha
mov
aas
mov
dec
cmp
into
fcoms
faddl
stc
es
nop
mov
mov
clc
pop
scas
and
pop
iret
sbb
or
cmp
mov
dec
dec
in
mov
inc
jge
sti
loopne
dec
int3
cli
enter
xor
scas
pop
sbb
ret
pushf
cmpsl
push
js
mov
mov
jecxz
mov
lds
insl
popa
orb
pop
punpckhbw
inc
jae
cld
jo
cmp
stos
mov
outsb
xor
pop
mov
mov
in
ljmp
adc
ja
hlt
aam
ret
add
roll
rorb
adc
xchg
mov
xor
aaa
inc
in
xchg
fcom
and
or
inc
jp
push
loop
stos
xchg
imul
lea
mov
cli
add
mov
dec
pop
stos
xchg
insl
pusha
inc
pushf
stc
stos
ljmp
into
das
add
shlb
dec
in
jb
push
test
add
cmpb
push
loopne
int3
jnp
jle
or
dec
shlb
sbb
shlb
je
loope
popf
cwtl
mov
sbb
movsb
cmp
dec
sbb
add
icebp
test
rorl
and
push
push
xchg
xchg
mov
mov
mov
pop
mov
movsb
ret
cmp
lds
aad
cmp
jne
push
push
out
movsl
adc
mov
add
jno
loop
jl
pushf
imulb
cmp
enter
mov
inc
mov
dec
xor
rcll
int
push
fs
leave
rcll
dec
test
xchg
jo
xchg
push
mov
pop
aam
add
inc
xor
jle
cmc
cmp
sub
mov
pop
mov
xchg
cmp
dec
or
scas
mov
cmpsb
dec
xlat
and
std
fnstcw
cmpsb
cmp
xor
jbe
nop
js
aas
pop
lds
ret
or
sub
ds
push
xor
xor
fsubrs
loop
push
popl
xchg
push
or
inc
lret
xchg
into
jb
clc
in
cmp
mov
pop
pusha
cmp
shrl
lods
ret
jae
or
scas
cli
ss
mov
sub
lcall
lcall
addb
push
sub
push
adc
jp
in
fdiv
stos
mov
rcll
pop
sar
push
adc
inc
stc
mov
mov
ss
inc
push
push
cmp
gs
pop
mov
nop
mov
and
nop
lret
push
pop
cltd
xor
aad
dec
inc
add
sub
and
cmp
pop
lret
ret
sub
pop
jbe
rorl
cmp
flds
test
xchg
mov
mov
sti
hlt
mov
lcall
add
or
cmp
pop
cld
dec
jmp
or
inc
stos
pop
adc
fimuls
and
sub
sbb
outsb
pusha
aas
in
in
sbb
js
jno
and
add
or
inc
adc
imul
pop
xlat
imul
js
icebp
arpl
dec
movsb
cmp
mov
jp
mov
add
adc
in
mov
sub
inc
mov
mov
sbb
arpl
adc
jg
rcll
dec
inc
xor
cmp
fincstp
movsl
sbb
push
cltd
push
imul
fwait
out
cmpl
jl
pusha
rol
stos
push
inc
aas
mov
dec
inc
insb
insl
fld
mov
mov
or
lahf
push
shll
lods
xlat
icebp
stos
sbb
int3
sbb
mov
pop
js
mov
xor
es
stos
movsb
in
lcall
adc
out
inc
aas
cmpsb
xchg
sbb
pop
xchg
bound
aas
jmp
adc
jp
pop
lret
xlat
xlat
xchg
and
je
wbinvd
lea
pop
cltd
inc
or
pop
out
push
sub
movsb
rcrl
xor
aad
sbbb
inc
push
cmp
push
push
ret
or
outsb
pop
add
out
jae
stos
add
inc
shlb
ja
and
mov
cwtl
setnp
inc
test
cmp
scas
mov
movsl
mov
lcall
nop
pop
bound
or
out
jo
jne
out
add
outsb
pop
fdivrl
insl
dec
in
jl
insb
pop
push
nop
pop
iret
ljmp
mov
icebp
push
and
xor
out
sub
mov
out
fstp
aam
adc
add
and
cmpsb
out
std
push
ret
jae
mov
dec
test
mov
fstl
js
push
dec
fists
mov
and
les
scas
xchg
adc
daa
cmp
inc
movsb
push
dec
add
sbb
popf
stos
xor
decb
cmp
dec
mov
mov
mov
xchg
sub
jmp
in
shrb
sub
imul
lcall
out
imul
cmp
xor
and
faddl
pushf
idivl
jmp
cld
mov
ret
xlat
loop
mov
out
aam
cltd
pop
and
add
arpl
and
mov
stos
add
loopne
dec
sbb
mov
mov
fsubs
popa
dec
sub
imul
dec
mov
mov
rorl
adc
fsubs
inc
mov
push
sbb
aad
pop
in
push
xchg
mov
pop
jecxz
aas
mov
mov
add
imul
outsl
sub
inc
push
cmp
in
mov
in
faddl
icebp
in
and
sub
dec
push
sbb
loope
fists
out
decl
inc
test
pop
inc
aas
add
rclb
jle
ret
ss
je
mov
pop
dec
dec
mov
movsb
fidivrs
mov
scas
cltd
out
out
mov
jl
loopne
nop
inc
fisttps
int
cmp
sub
and
iret
cmp
sub
jnp
cmc
les
jmp
stos
je
in
insl
adc
call
push
sbb
add
pop
push
in
mov
sub
fistpll
mov
fbld
jp
xchg
xor
mov
mov
mov
xlat
fsubr
ja
xchg
ret
xor
sub
ss
ret
jmp
xchg
xchg
adc
mov
lods
xor
xchg
or
dec
fcmovb
mov
fs
icebp
imul
loopne
addr16
ret
std
fnsave
sbb
mov
test
or
sbb
mov
arpl
fcmovbe
sti
out
and
pop
cmpl
fwait
adc
mov
ds
push
inc
dec
pop
dec
mov
adc
sbb
lret
cld
jb
mov
imul
mov
jb
lds
mov
popa
or
aas
sub
xor
les
mov
js
std
in
push
vandnps
or
cs
repz
loop
sahf
out
std
jnp
js
adc
lahf
jmp
test
mov
jb
rol
les
clc
decl
and
dec
into
sub
cmp
mov
add
out
xchg
lret
inc
push
out
fldenv
cmp
jns
push
into
insb
out
pop
repnz
int3
popa
lret
dec
sbb
test
ss
xor
cmpsb
dec
mov
or
xchg
add
add
mov
cltd
lahf
push
add
int
loopne
inc
es
mov
and
pop
pop
mov
jb
adc
push
lea
push
lods
mov
jno
add
add
cmp
mov
jae
ljmp
push
xchg
je
xor
sub
add
sahf
push
adc
or
ljmp
push
mov
mov
cmp
push
shrl
rolb
jo
mov
fstp
adc
push
pushf
mov
push
adc
test
adc
jne
and
sbb
dec
cwtl
or
cwtl
cmp
push
xchg
andl
loopne
mov
mov
mov
arpl
stc
xor
and
cs
mov
cli
jp
bound
add
pop
data16
ljmp
cs
jb
ljmp
jp
movnti
dec
andl
jp
mov
imul
xor
dec
dec
popa
popf
push
lret
test
lock
sbb
push
or
push
sha1msg2
loope
mov
lcall
inc
in
jns
adc
mov
pop
or
std
mov
cmpsl
dec
push
adc
rorl
sub
loope
lret
les
mov
dec
add
ja
fsubl
lea
inc
movsl
cmc
dec
mov
adc
and
andl
xchg
xchg
pcmpgtw
mov
clc
and
leave
fcoms
mov
inc
mov
cmp
push
push
test
adc
es
jb
fnstsw
pop
mov
addr16
xchg
fdivrl
fwait
push
xor
push
shr
sbb
sbb
inc
adcl
outsl
imul
sub
sbb
pop
cli
mov
mov
shlb
imul
xchg
loop
nop
clc
adc
movsb
dec
xchg
adc
das
add
jle
pop
push
inc
into
pop
divl
out
inc
fbld
xor
jg
push
and
lds
adc
dec
out
dec
jbe
push
push
dec
lock
and
pusha
mov
add
add
pop
adc
xor
movsl
jecxz
pop
insl
push
jne
fidivs
and
xchg
sub
addr16
movsb
int
mov
roll
pop
les
pop
jne
into
in
repz
sub
inc
addb
dec
lcall
push
and
in
mov
mov
or
add
mov
jbe
movsb
rolb
and
push
jecxz
nop
outsl
mov
or
in
in
add
pop
ja
shrb
sbb
mov
movsl
inc
mov
movsb
pop
xchg
int
fbld
sbb
adcb
inc
pushf
xlat
sbbb
fisttpll
lock
jb
and
outsb
insb
lea
ret
aam
andl
sub
mov
cmp
fnstenv
insl
adc
mov
sbb
out
pushf
jne
mov
popl
jb
minps
pop
mov
mov
or
mov
mov
push
test
mov
pop
sub
std
fstpl
iret
les
aad
or
ljmp
sub
int3
pop
nop
mul
ljmp
adc
pop
insl
fisubs
push
dec
imul
mov
add
rcrb
ret
xchg
out
cmpsb
sbb
sbb
hlt
lods
xchg
adc
push
mov
mov
or
cmpl
iret
lods
aad
inc
dec
sub
dec
fisttpll
pop
stos
xchg
push
movsl
ret
xor
movsl
lods
jecxz
addr16
insl
clc
lcall
mov
movsb
mov
jno
movsl
pop
and
orb
and
fsubl
loop
cmc
inc
fcoml
int
aad
and
inc
inc
cmp
mov
inc
add
out
dec
fbstp
popf
xchg
mov
jl
push
fwait
into
int3
mov
inc
jg
sub
mov
daa
cmp
fs
push
or
dec
jmp
inc
dec
xor
mov
jb
lret
adc
jne
test
adc
loope
filds
mov
int3
jb
sbb
in
lret
out
pop
xchg
test
mulb
cmp
add
clc
mov
and
cmp
add
add
mov
push
out
push
inc
into
testl
out
hlt
mov
je
jmp
mov
inc
xorb
shl
je
pop
sub
mov
xlat
adc
add
inc
enter
sbb
xchg
je
sbb
pushf
in
push
mov
idivl
pop
jbe
in
movsl
out
lahf
pushf
lahf
xor
fcoms
jnp
test
xchg
inc
nop
mov
clc
cmp
sub
pop
push
leave
repnz
aad
cmc
mov
movsl
pop
jno
jmp
lret
lret
push
daa
aam
inc
rcrb
scas
fwait
jns
repz
xchg
inc
xchg
mov
and
js
jne
inc
mov
mov
and
jge
or
scas
andl
lahf
add
mov
jnp
sahf
daa
pop
popf
test
jl
rcrl
mov
jnp
iret
bound
loope
adc
mov
addl
pop
xchg
inc
in
lods
cmp
jne
mov
int3
daa
inc
out
mov
gs
int
or
jnp
adcb
js
mov
cld
pop
cmp
ss
sub
and
and
xor
cmp
ss
mov
lret
sub
sub
add
pop
jecxz
jmp
dec
adc
int3
or
cmc
sbb
loope
jle
xor
dec
xor
dec
outsb
sub
lock
xorb
test
lret
dec
add
int
xor
clc
iret
loop
and
in
ss
xchg
xor
mov
and
add
cmp
mov
pushl
out
push
out
inc
pop
mov
mov
test
mov
mov
je
stos
add
insb
aas
pop
mov
cmp
xlat
mov
adc
ret
lock
push
call
popa
mov
and
cmp
pop
mov
xor
scas
aaa
shlb
mov
in
inc
shrb
inc
jbe
add
push
negl
sti
jbe
cli
mov
cmp
inc
mov
and
mov
into
outsl
dec
movsl
push
ljmp
push
mov
ret
xor
xchg
roll
lahf
xchg
scas
lahf
js
mov
mov
xchg
lcall
cli
push
lods
insb
mov
mov
and
and
fbstp
movsb
in
sti
xchg
sub
enter
aaa
stos
mov
xchg
lods
pop
cmc
int
mulb
outsl
sub
sbb
sbb
xor
out
fiadds
in
lods
sbb
jmp
sub
das
xor
call
je
lret
push
popa
shll
mov
jbe
test
ljmp
mov
push
les
inc
cli
out
xor
loop
mov
mov
adc
out
cmp
aad
jae
mov
push
jno
cmpsl
pop
pop
jbe
sub
subb
mov
sbb
scas
test
mov
stc
mov
divl
repnz
xor
cld
aad
sbb
cmpsl
je
es
cs
adc
jne
outsb
xchg
ret
aam
sbb
cmpsl
shlb
fisttpl
daa
mov
jle
mov
pop
or
pusha
mov
stos
outsl
push
and
push
cmc
lods
shll
lahf
arpl
jle
lahf
sub
cmp
push
into
aad
int3
les
mov
enter
push
adc
sbb
dec
xor
std
xor
lods
jmp
movsl
jle
js,pt
std
sub
scas
mov
in
and
lret
testb
dec
cli
lahf
inc
testb
imul
lods
ljmp
outsl
not
add
out
inc
mov
scas
jl
in
xchg
movsl
adc
ss
xchg
stos
xchg
jl
aad
inc
dec
jne
addr16
push
adc
scas
mov
fisttpll
pop
in
loop
inc
ficomps
mov
das
mov
xor
add
dec
cmp
jnp
xchg
inc
icebp
imul
mov
sub
mov
je
cmp
testl
mov
xchg
pop
mov
ljmp
push
je
and
cwtl
dec
mov
pop
pop
or
rcl
xor
mov
xor
dec
adc
rolb
imul
xchg
adc
subl
sbb
leave
xchg
inc
leave
cld
xchg
cltd
add
into
movsl
test
xor
pop
xchg
sub
adc
mov
ds
rclb
pop
push
xor
nop
std
std
mov
loope
pop
fwait
xchg
mov
or
sarl
mov
mov
dec
xchg
int
sub
inc
xchg
out
dec
add
aas
jge
mov
ds
scas
mov
je
sbb
cmp
and
cmpsl
aam
inc
fstl
arpl
jecxz
lods
pop
xor
xor
jno
arpl
sahf
jmp
aad
shll
inc
fimull
sti
sbb
scas
cmp
add
mov
decb
idivb
add
mov
aam
xchg
push
push
pop
mov
jl
push
mov
cmpsb
xchg
outsl
pop
mov
lret
mov
fisttpl
mov
cmp
sub
aam
mov
stos
aaa
cmc
sub
mov
clc
shll
movsb
addl
sbb
cmp
mov
jb,pt
inc
push
or
push
jle
stos
cwtl
mov
fstpt
cmp
enter
out
add
dec
jl
push
jns
adc
scas
cmpl
pusha
or
inc
nop
jle
push
test
and
push
inc
pushf
rdmsr
pop
lock
shlb
pop
inc
movsl
jecxz
add
push
stos
adc
xor
sub
sbb
fbstp
cmpsb
mov
pop
pop
popa
push
cmpl
iret
lret
dec
xor
or
adc
rcrb
xchg
or
adc
sub
into
dec
fmull
mov
iret
sbb
xor
neg
imul
insl
fs
dec
mov
ret
inc
popa
movsb
loope
rol
add
ret
mov
jno
jno
stos
andb
jnp,pn
cmp
imul
push
sub
inc
mov
pusha
sti
push
jle
jb
sahf
clc
add
and
insl
nop
jns
iret
mov
es
sub
pop
adc
ret
mov
adc
arpl
cmp
cwtl
xchg
stc
pop
stc
repz
jns
dec
jne
out
mov
nop
mov
cmp
dec
int3
sar
scas
insb
xor
xchg
shll
imul
pop
test
loope
pop
and
movsb
jl
hlt
inc
or
pop
and
call
jge
push
jl
hlt
inc
or
pop
sbb
or
pop
or
or
push
hlt
inc
or
movsb
test
jno
push
xor
or
mov
sub
jne
shll
fiaddl
mov
repz
test
out
out
or
mov
push
xor
aaa
mov
out
or
dec
test
mov
push
pop
add
imul
jbe
add
pusha
loop
sub
repz
sbb
orl
daa
fbstp
pop
jg
push
inc
lret
inc
xchg
jmp
fwait
inc
mov
cmp
xor
adc
sbb
sarb
xor
addb
jne
push
xor
jne
xor
call
faddl
les
bnd
lea
mov
insb
push
jae
fwait
cmpsl
int3
xchg
aas
mov
inc
mov
mov
pop
push
jae
fwait
xchg
aad
aas
mov
cmp
push
jae
fwait
dec
loopne
aas
mov
jp
ret
xor
rcrl
mov
es
push
iret
ret
sbb
jae
or
push
out
clc
fisubrl
push
jecxz
fistpll
lock
int
popa
aam
into
roll
lods
pop
inc
outsb
pop
in
arpl
xchg
xchg
lods
or
push
call
test
cmpsl
push
inc
cmp
mov
leave
ja
mov
addb
call
ja
in
pop
fdivs
sub
pop
sti
fimull
adc
push
xor
push
lret
stc
sub
leave
push
pop
inc
mov
nop
mov
call
adc
and
xchg
mov
movsb
sub
mov
ljmp
adc
loopne
dec
sbbb
xchg
xchg
and
test
ja
jno
hlt
test
pusha
or
insb
les
sarl
or
insb
arpl
xor
or
mov
adc
push
dec
aam
sti
xchg
fiadds
insl
in
scas
adc
shrl
das
push
sub
adc
push
mov
nop
adc
ss
and
in
and
dec
jo
mov
mov
pushf
fcmove
sbb
aas
mov
mov
xchg
fcoml
fnstenv
push
leave
dec
sbb
call
ret
mov
adc
mov
js
rorb
in
bound
jns
test
addr16
mov
stc
loope
dec
cmp
jl
cmpsl
xor
popf
xor
adc
data16
lcall
mov
mov
jmp
icebp
fdivrl
sbb
sbb
pop
and
jge
lea
adc
push
push
add
and
xor
cld
dec
outsl
jnp
push
into
xchg
xor
cmp
ss
stos
mov
ja
mov
jl
mov
sub
popa
mov
daa
pop
icebp
adc
inc
test
jge
mov
scas
jg
mov
sbb
mov
and
pop
sbb
aad
mov
cmp
jecxz
out
test
scas
cmp
in
mov
sti
jle
lods
imul
cmp
and
scas
imul
lea
das
sarl
or
repz
xor
stos
inc
sbb
adc
xor
sub
aas
inc
ljmp
mov
into
mov
add
inc
lret
mov
push
lahf
and
push
out
out
ret
fiadds
lods
fimull
jb
xlat
mov
pop
mov
mov
ret
lahf
jecxz
in
fstps
jl
into
mov
shld
leave
push
lds
push
loope
jl
inc
idivb
aam
insl
pop
dec
inc
sahf
icebp
cltd
mov
adc
nop
fwait
inc
pop
out
rcl
ret
push
sbb
pop
dec
shl
hlt
out
cmp
cmp
repnz
mov
or
lret
adc
test
xchg
jnp
cmp
pushl
fiaddl
adc
and
or
sbb
xlat
jno
sahf
mov
dec
aas
adc
mov
cld
adc
cmp
mov
inc
ret
xchg
lcall
pop
daa
pop
sub
es
cmp
xlat
or
hlt
jle
ja
les
addl
addr16
mov
aas
popa
rolb
jp
xchg
xchg
pop
and
push
test
dec
out
out
cmpb
fidivrs
mov
inc
pop
inc
faddp
stos
push
sbb
sbbl
and
adc
dec
jecxz
nop
cmpsb
sub
push
mov
movsl
and
sbb
sbb
push
add
ffreep
sub
rcrl
imul
loope
int3
mov
sbb
mov
inc
ficoml
mov
sub
stos
adc
jmp
ljmp
movsl
xchg
imull
test
and
jbe
inc
popf
adc
xchg
sub
sub
mov
je
dec
xlat
xor
jp
cs
mov
inc
mov
mov
push
and
lcall
mov
sbb
sbbb
dec
in
in
pop
inc
sahf
mov
imul
test
loope
cwtl
inc
or
in
push
and
das
lahf
daa
mov
mov
sbb
or
xchg
dec
inc
xchg
cmp
subl
push
imul
sub
and
inc
push
test
sti
aam
mov
pop
sub
xchg
mov
jge
popa
pushf
cmp
daa
inc
pop
lcall
push
sqrtps
and
stos
mov
cmp
jns
mov
outsl
add
inc
cmp
fisubrs
mov
enter
mov
mov
fiadds
cmp
fs
test
in
popf
push
icebp
popa
pop
cs
mov
sbb
shll
mov
stos
pop
js
popa
cmp
ja
ds
xlat
xor
cmpsl
push
mov
and
imul
test
push
sbb
xchg
rclb
push
pop
xchg
ret
fdivl
sbb
dec
in
clc
jne
lcall
sub
xchg
ja
xchg
or
pushf
leave
mov
push
xchg
push
ret
mov
outsb
icebp
pop
out
negl
inc
jmp
adc
adc
aas
int3
ja
mov
test
fs
xlat
jbe
iret
xchg
stc
xchg
das
ret
movsb
dec
adc
push
cmp
add
test
xor
movsb
lret
xchg
testb
sbb
xor
pop
jbe
clc
ljmp
mov
cltd
inc
inc
sbb
shl
push
stos
shr
mov
imul
pop
pop
push
dec
ret
loope
sbb
pop
repz
sub
jno
cmpsb
pop
mov
cmp
inc
mov
inc
inc
cld
movsb
jne
push
push
scas
leave
jns
pop
lods
jecxz
insb
sub
mov
mov
jae
pusha
sub
sarl
sub
xor
dec
nop
jl
mov
testl
fidivs
fldl
inc
in
negl
xor
push
jecxz
dec
je
out
inc
pop
or
and
dec
fildl
sub
xchg
sti
xor
and
xchg
and
jecxz
mov
pop
out
sar
jge
push
daa
and
pop
jnp
cld
in
or
icebp
lods
inc
popa
cmp
in
push
movsl
fildl
cmp
sub
mov
xchg
or
mov
cwtl
iret
jmp
push
pop
scas
enter
cmpsl
loop
and
popa
sti
cmpsl
cmp
pop
and
stc
xor
outsb
sti
cmpsl
mov
lods
mov
pop
adc
pop
sbb
movsb
lahf
sbb
mov
mov
mov
fistpll
arpl
inc
cltd
iret
call
ret
test
push
cmpsb
push
or
fwait
sub
jmp
outsl
jbe
loope
fldenv
and
das
xchg
inc
pop
jbe
retw
dec
fdiv
mov
popa
cmp
adc
fdivrp
dec
mov
xchg
shr
or
mov
jnp
mov
pop
dec
xchg
lcall
shlb
movsb
scas
sub
inc
xor
popa
shl
jl
mov
out
rcrb
push
add
jle
data16
aaa
push
adc
xchg
or
add
push
rcl
dec
addr16
cmp
mov
inc
pusha
jp
cmp
mov
push
das
cmpsb
and
mov
test
mov
aaa
push
add
cmp
push
fnstsw
ret
mov
mov
pop
mov
mov
jl
xor
fdivrs
ss
adc
dec
jns
mov
dec
sbb
adc
push
daa
push
cmp
pop
mov
notb
xchg
sahf
or
push
les
jbe
fdivrs
pop
add
jle
jae
lods
pop
pop
cmpl
and
mov
dec
cmpsl
pop
ss
mov
and
inc
mov
jno
jb
cld
in
movsb
mov
jo
cmp
pop
jns
add
add
pop
lods
cmp
sub
pusha
xchg
mov
sbb
pop
push
mov
lcall
inc
arpl
sub
es
xor
sub
xor
mov
and
jne
and
dec
jns
sub
ud2
xor
aam
inc
bound
mov
movswl
add
sub
add
add
scas
mov
add
push
ret
push
iret
dec
pop
jns
lret
pop
pop
adc
loop
subb
test
xchg
dec
push
subb
into
adc
lahf
sbbb
test
movsl
push
push
enter
sub
insl
in
outsl
mov
outsb
pushf
or
imul
mov
std
aas
dec
inc
jg
adc
jo
cmp
pop
aas
addr16
fs
ret
jb
jbe
imul
dec
and
xor
scas
adc
scas
pop
mov
jnp
jecxz
xchg
xchg
adc
stc
sub
and
out
mov
push
ss
and
out
or
pop
jns
xor
in
ficoml
js
sbb
push
inc
out
cmp
push
outsb
xchg
pop
inc
rorb
xchg
mov
imul
jg
dec
jmp
cs
shll
repnz
mov
packsswb
jne
aas
popfw
mov
imul
cmc
clc
fnsave
push
add
fmul
dec
fiaddl
mov
and
xor
xchg
mov
pusha
jl
popf
dec
adc
enter
xor
jmp
fs
out
and
and
repz
stos
xor
insl
ret
xlat
sbbb
arpl
stos
fsubr
xchg
popa
shrb
adc
and
add
loop
shrl
outsb
inc
jbe
add
aas
pusha
cwtl
shrb
push
inc
in
mov
out
jmp
cmp
sub
lock
xchg
sbbl
add
leave
movsb
sbb
in
push
ret
stos
sar
pop
dec
jl
inc
pusha
outsb
inc
adc
cltd
add
mov
push
cmp
cli
test
clc
das
fiaddl
sub
cs
fidivrs
jp
mov
sub
jb
in
mov
lret
lahf
or
jmp
dec
sti
gs
xchg
sbb
mov
adc
in
or
fdivrp
push
inc
mov
xchg
ljmp
je
jns
and
aam
int
mov
xchg
rcrb
pushf
repnz
les
jne
imulb
and
add
lcall
sub
orb
clc
xchg
jbe
out
jo
int
outsl
packsswb
jns
pop
xchg
jmp
jno
mov
push
das
push
std
int
mov
loop
and
sahf
repnz
pushf
xor
bswap
pop
in
and
add
fwait
inc
leave
adc
fildl
loopne
shrl
xchg
mov
into
cmp
sbbb
movsl
stc
adc
sub
je
rorl
xor
orl
add
pop
and
js
cmp
inc
and
xchg
leave
ds
or
lret
popa
mov
pop
push
idiv
sub
fwait
mov
mov
scas
or
sub
push
rolb
push
ss
loop
lds
push
pushf
addr16
pop
inc
test
shlb
pop
add
dec
pop
aad
aam
add
push
cs
inc
inc
mov
fcompl
jp
push
outsl
xor
inc
roll
pusha
fsubrs
pop
insb
rorl
inc
mov
mov
rorl
fidivs
mov
loopne
adc
mov
sbb
push
mov
shl
cmp
lahf
ret
and
loopne
cmp
mov
and
test
pop
fiadds
mull
ficompl
cmp
xor
mov
jmp
inc
shll
icebp
and
sbbb
loopne
je
shlb
clc
ljmp
shl
test
test
clc
ljmp
adc
clc
ljmp
push
jno
mov
pusha
lcall
fcoml
test
mov
adc
stc
nop
mov
in
pop
push
inc
gs
add
pop
mov
add
shll
pop
mov
out
inc
cmp
push
popf
mov
stos
lods
loop
cmpsb
xor
stos
sbb
inc
push
movsb
lock
push
and
std
andb
cld
push
ret
pop
xchg
repnz
out
loopne
loopne
jmp
pop
xchg
or
dec
adc
push
stos
loopne
add
jle
lods
jle
test
mov
or
lods
bound
fwait
pop
push
lret
pop
push
add
mov
outsb
adc
sub
repnz
jl
movsb
push
mov
or
iret
jp
xchg
fs
mov
lock
sub
lock
mov
ss
mov
mov
mov
std
cld
or
mov
std
and
scas
add
pop
jl
dec
mulb
clc
lea
mov
es
lahf
lock
push
sbb
arpl
adc
adc
cmp
jl
test
fsts
gs
scas
pop
push
orb
insl
xchg
test
fists
xor
test
or
pop
push
mov
ds
or
shr
inc
scas
or
inc
outsb
movsl
ret
das
movsl
sbb
mov
fcomps
sahf
adc
ljmp
imul
push
push
insb
or
mov
jmp
rorl
idiv
lods
ja
scas
xchg
in
jns
outsl
mov
dec
or
dec
push
dec
in
jae
pop
shlb
push
test
negl
out
movsl
fildll
in
cmpsb
xchg
lods
pop
cmc
neg
out
pop
push
dec
xchg
into
and
sti
and
cmp
aam
sub
inc
inc
cmp
jmp
rclb
sbb
mov
adc
pusha
xchg
mov
into
std
push
or
and
clc
and
inc
stos
loopne
mov
loope
addr16
aas
jne
int3
addr16
ljmp
add
cmc
movsl
popa
xlat
lea
ss
mov
dec
pop
arpl
dec
call
push
push
out
movsl
cli
or
gs
repz
rcll
icebp
pop
in
jbe
xchg
leave
test
push
arpl
cmpsb
shll
enter
sub
int3
and
movsb
mov
lret
fmull
sahf
adcl
jo
fistpll
addl
push
jle
xor
test
xchg
mov
loop
clc
ljmp
and
xchg
testl
aaa
addr16
lahf
int
popa
movsb
imul
push
loopne
scas
leave
and
lret
test
cmpsb
pop
mov
or
jle
negb
lds
icebp
xchg
or
mov
mov
ds
addr16
icebp
jb
or
pop
pop
clc
gs
insl
push
outsl
lret
aaa
testl
pop
aaa
sti
push
ja
test
mov
arpl
xchg
or
mov
loope
pushf
sbb
mov
sbb
mov
or
scas
or
es
dec
cs
mov
push
loopne
loope
daa
stc
fisubrs
nop
push
into
call
cmp
mov
jbe
jmp
dec
mov
jge
stc
or
xor
lods
in
lds
fwait
sub
xor
or
loope
pop
pop
fdivl
clc
adc
enter
inc
push
enter
bound
sbb
scas
outsb
in
dec
je
cld
jns
and
jmp
pop
test
push
push
imull
xor
pop
cs
loope
push
inc
lock
jp
add
iret
repnz
das
pop
mov
fisubrs
sbb
fwait
push
outsb
mov
mov
xlat
or
cmp
sbbl
out
lahf
jb
push
adc
subl
add
add
cmp
test
divl
repnz
dec
ret
xor
leave
sbb
into
call
push
leave
jecxz
imul
rorb
xchg
stc
sub
mov
lret
jp
sbb
pop
daa
in
fldlg2
or
imul
je
addb
or
xchg
mov
pop
add
in
scas
sbb
ja
aas
stos
sbb
leave
and
add
xchg
jbe
add
aaa
pusha
mov
je
jb
mov
adc
mov
or
dec
loopne
lcall
loopne
sbb
stos
incb
das
cmpsl
sbb
mov
inc
inc
push
xorb
lret
jp
fisubrs
frstor
sub
sub
jge
adc
fs
lret
roll
ficoml
jp
ficompl
jmp
mov
push
roll
mov
mov
xor
push
lcall
jl
mov
cmp
aad
mov
and
cmp
mov
inc
in
negl
cmpsb
int
xchg
in
sti
inc
mov
sbb
cld
push
xchg
repz
lret
or
cwtl
adc
mov
sbb
inc
lock
sub
and
mov
popa
bound
repnz
jnp
bound
andb
pop
mov
into
xor
push
inc
lods
xchg
jns
or
adc
aad
jbe
sbb
cmc
jmp
fisubl
test
mov
mov
lcall
loop
lock
in
nop
pop
mov
mov
fidivrs
je
shlb
inc
negl
fs
mov
cmpsl
or
inc
sti
aas
pop
dec
scas
in
xchg
ret
mulb
jg
adc
cli
mov
inc
push
test
sub
xlat
jo
into
roll
add
adc
push
enter
sub
cwtl
cltd
mov
sbb
je
xchg
fmuls
cld
pop
sub
adc
imul
lds
shll
xor
lahf
mov
ja
enter
push
xchg
iret
push
aam
aad
cmp
lods
bound
and
pop
icebp
lahf
movsl
mov
push
xor
xlat
or
and
leave
adc
and
and
rcl
mov
filds
sbb
test
sbb
loopne
add
jo
dec
nop
test
dec
test
push
or
in
inc
xchg
scas
pop
clc
rorb
enter
insl
sti
pop
je
shr
into
mov
cld
fisubs
xchg
scas
inc
xchg
mov
pop
loope
dec
push
xor
xor
leave
lock
lahf
repz
inc
lds
mov
fldenv
les
fdivs
rcll
repz
in
push
adc
mov
adc
into
xchg
sub
les
pop
mov
xor
push
ljmp
dec
xchg
xor
adc
mov
and
push
outsl
scas
cmp
cvtps2pi
dec
outsl
out
mov
mov
mov
mov
addr16
dec
data16
push
imul
insb
push
xchg
cld
adc
ret
pop
imul
repz
fmuls
push
test
mov
in
imul
push
inc
in
mov
mull
cmc
imul
and
sti
scas
shrb
out
mov
add
std
lds
xor
xor
imull
out
dec
inc
sbb
stc
and
sti
xor
xchg
sbb
call
subl
daa
ret
pop
xor
sarl
mov
or
and
sbbl
cbtw
jl
sub
orl
add
xorl
ret
mov
insl
add
cmp
es
sbb
movsl
pusha
mov
pop
outsb
out
inc
mov
das
gs
popa
adc
push
and
repnz
or
iret
test
out
ret
push
mov
mov
fldt
add
into
push
xor
imul
icebp
or
les
mov
pcmpgtb
push
mov
movsb
clc
adc
mull
mull
xchg
ds
aas
pop
cmp
fcomps
pop
xchg
lods
mov
js
mov
mov
dec
adc
sub
adc
xchg
pop
cmp
cmp
stos
pop
sti
adc
mov
pop
into
out
dec
stc
add
mov
int
aad
xor
push
adc
enter
sub
inc
jl
push
adc
push
fisttpl
cmp
pop
ja
push
pop
lods
dec
xchg
je
lret
stos
xchg
sub
lock
add
inc
add
jl
stos
inc
bnd
xchg
flds
jne
push
fadds
jmp
mov
xchg
hlt
movsb
xor
jp
jne
je
les
xor
stc
js
icebp
mov
or
adc
stos
stos
adc
mov
cs
dec
push
ret
inc
pusha
jbe
adc
xor
out
xchg
scas
cmp
lret
fs
mov
sbbl
cmp
out
int
mov
and
dec
repz
pop
aad
lahf
adc
xchg
arpl
add
icebp
icebp
jno
push
gs
cmpsl
call
test
rcrb
xor
jp
in
and
andl
sbb
push
test
in
ret
and
cs
enter
dec
js
hlt
sbb
cwtl
in
push
mov
xor
and
xor
es
imulb
invd
sbbb
adc
fwait
into
in
push
inc
sahf
mov
imul
inc
cmp
xchg
dec
mov
pop
std
in
dec
mov
cmp
mov
sub
xchg
xor
lcall
aam
sbbb
or
xchg
xchg
mov
pop
dec
sub
jle
jae
std
push
mov
push
pop
je
push
xor
xchg
sbb
ret
repz
and
out
cmpsb
dec
add
mov
xchg
xchg
adc
mov
cmp
movsl
fbld
or
pop
test
add
push
scas
pop
adc
das
aas
pop
xlat
popa
push
cld
push
pop
dec
push
dec
cmp
jnp
hlt
and
jg
adc
aad
ret
cmp
loope
cmp
rorl
jae
jecxz
pop
dec
fdivr
ss
push
hlt
mov
in
sbb
cld
push
xchg
mov
fdiv
cmp
cli
sbb
popa
lret
and
xchg
testb
jno
sbb
fcomps
shr
fwait
int
in
cmp
int
in
outsl
xchg
mov
das
gs
pop
push
pop
pop
and
addb
stos
aas
jmp
push
or
pop
test
movsb
ud0
jns
in
aam
mov
xor
pop
xor
xor
adc
mov
add
mov
jbe
iret
testl
mov
pop
clc
dec
mov
aas
movsl
fdivrl
rorb
rcrl
sbbb
xchg
mov
stc
icebp
movaps
jno
out
sbbb
and
mov
int
dec
mov
movsl
out
sub
int3
out
movsb
enter
stos
and
test
push
mov
mov
je
sub
xchg
ret
ffree
or
jbe
adc
sub
push
jp
testb
inc
or
movsl
fdivrl
dec
jnp
push
xor
push
repnz
mov
nop
or
mov
insb
cmp
sbb
sbb
adcb
pop
jbe
push
inc
xor
stos
ljmp
cmpsl
xor
push
fldcw
mov
dec
dec
lahf
icebp
dec
rcl
xchg
sbb
stc
xchg
or
movsl
fcmovne
sub
xchg
mov
out
and
cmp
mov
jnp
fidivrs
test
sbb
and
mov
pop
fcoml
mov
fisubl
dec
por
pop
repz
and
push
iret
int
nop
imull
inc
jbe
call
stos
lods
mov
jle
cmp
sbb
mov
push
shrl
andb
and
cs
aas
sbb
adc
jno
xlat
icebp
or
push
pop
jnp
or
xchg
mov
movsb
shlb
scas
fwait
cs
sbb
pop
adc
lret
stc
pop
xor
fadd
mov
dec
mov
lea
std
ret
mull
jnp
sub
jl
dec
mov
sub
inc
scas
les
shlb
insl
lcall
or
int
leave
mov
fnsave
push
xor
xor
jmp
push
jmp
cmp
movl
adc
push
das
mov
dec
out
jno
sbb
jecxz
bnd
popf
dec
in
jl
fdivrp
and
dec
test
mov
and
movsl
and
cli
push
in
sbb
inc
ss
mov
sbb
pushf
gs
mov
inc
mov
loop
adc
movsl
scas
or
loop
fcoml
fcmovnb
xchg
outsl
xchg
insl
push
push
fnsave
faddl
insb
pop
int3
inc
sarl
mov
jg
bnd
shl
cltd
aad
cmc
mov
dec
add
mov
movsb
cmpsb
int
inc
loope
cmp
popa
int
test
adc
mov
in
stos
js
icebp
sub
jb
add
or
dec
xlat
test
mov
jmp
jo
jmp
mov
in
mov
jle
jno
test
loop
pusha
cwtl
outsl
mov
call
sbb
xchg
or
mov
mov
fcoms
cmp
es
push
imul
and
pop
aas
mov
lock
das
rcrl
scas
sub
aad
pop
notb
adc
mov
mov
and
pop
inc
adc
cmpsb
rcrb
mov
cmpb
cmpps
push
fistps
scas
jo
ja
inc
sub
jg
mov
into
cmp
dec
push
sbb
push
xor
mov
movsl
shr
adc
cmc
clc
cmpsl
pop
push
jge
fstl
imul
cmp
xchg
outsb
and
adc
int3
pop
orl
mov
xor
cmpsb
fcoml
pop
xor
jno
dec
inc
mov
push
mov
sub
fcompl
test
jecxz
outsb
movsb
sbb
aad
adc
sbb
popf
sub
sahf
cmpsl
fisttpl
mov
jecxz
sti
inc
mov
mov
mov
divl
outsl
fwait
shlb
pop
aam
int3
push
mov
push
ja
dec
mov
sub
popl
nop
mov
or
jle
dec
cli
pop
movsb
mov
repz
data16
sub
in
test
xlat
ja
or
jo
add
pushf
mov
jl
adc
loopne
outsl
mov
sbbb
cld
addb
js
ds
movsl
gs
aam
add
fpatan
mov
xor
mov
mov
pop
mov
xor
adc
mov
dec
out
je
pop
xchg
das
inc
mov
data16
mov
or
in
xchg
add
into
xchg
les
rcr
or
divb
jb
pushf
sub
mov
pop
mov
add
cmp
jp
mov
rorl
lea
jb
pop
ret
sub
icebp
inc
mov
aaa
mov
push
sti
addr16
loopne
xor
lahf
fidivl
adc
jecxz
push
inc
mov
lahf
fidivl
and
imul
imul
cmp
fsubs
enter
inc
adc
sub
test
repnz
mov
ret
add
fnstsw
sub
popf
in
mov
loope
stos
mov
jo
rcll
cmc
dec
les
ret
pushf
in
and
xadd
push
adc
cmpsb
push
jb
jmp
add
and
xchg
cld
je
cmp
pop
adc
and
enter
inc
or
or
mov
and
std
loope
or
stos
cmp
and
xor
mov
xchg
add
sbb
or
call
pop
cmp
call
jp
push
ljmp
and
test
movsl
mov
repz
xchg
stos
or
divl
cmp
jno
inc
sbb
stc
and
cmp
decb
xchg
mov
popa
into
pop
add
cmp
cli
push
xor
insl
movsbl
in
pop
outsb
sbbb
ja
testl
pushf
rcrb
sub
xor
inc
arpl
or
push
xor
cmpsl
and
jmp
pop
arpl
mov
call
sub
pop
call
jp
sbbb
mov
gs
jae
shr
ss
inc
mov
push
shl
xor
add
mov
daa
dec
mov
sbb
mov
ljmp
ljmp
inc
ja
add
pop
lahf
sbb
out
sbb
aas
xchg
leave
fimull
cmpsl
xchg
push
inc
jl
daa
inc
and
roll
push
xor
stos
sbb
cmp
cmc
adc
out
cmp
or
cmc
dec
shr
xor
lds
push
sub
aam
cmpsl
mov
filds
scas
mov
mov
jle
loopne
sahf
mov
popa
lahf
out
or
adc
jns
xor
subl
pop
lds
and
loop
out
mov
clc
mov
xlat
push
outsb
test
push
jno
sbb
push
lods
cmc
scas
push
scas
push
jecxz
popf
icebp
or
dec
imul
and
jne
sbb
push
int
enter
mov
cmpl
mov
xchg
les
popf
adc
sbb
shl
in
mov
or
push
in
jnp
sahf
inc
push
sub
aaa
push
loopne
jae
loope
xchg
rorb
seto
inc
mov
ljmp
cmpsb
sub
ss
test
insb
dec
outsb
std
test
rcrb
mov
push
popf
or
adc
mov
mov
adc
in
or
lea
pop
jbe
sbb
xlat
inc
negl
dec
addr16
xor
inc
mov
adc
in
inc
jbe
lock
pop
pusha
xchg
aaa
into
sti
js
pushl
adc
sbbl
stc
loop
ret
outsb
jo
xor
push
or
js
movb
push
mov
sti
out
mov
loope
stos
aas
mov
adc
dec
fdivr
ss
nop
dec
mov
scas
pop
xchg
sub
ss
dec
clc
adc
sub
cmpsb
push
jge
enter
ja
or
outsb
arpl
sbb
xorl
mov
int
shlb
rorl
mov
psrlw
in
pop
mov
pop
in
call
mov
pop
movsl
rclb
mov
negb
xchg
std
pop
pop
add
clc
mov
sbb
bound
push
bound
mov
sbb
hlt
or
mov
es
and
in
insb
and
adc
dec
test
mov
mov
into
movsl
adc
and
lods
mov
xchg
or
scas
sub
fs
rorb
cmp
aaa
cli
xor
and
lret
lahf
inc
jnp
popa
aas
por
inc
sbb
stc
or
and
mov
imul
inc
jg
cmp
cmpl
je
and
outsl
cmpsb
sarb
adc
test
xor
push
lret
inc
mov
cli
push
inc
cltd
iret
mov
adc
in
ljmp
notb
inc
jbe
or
push
fwait
or
xchg
jnp
imul
icebp
imul
mov
xor
pop
xchg
fldt
subl
pop
out
daa
xlat
push
xor
into
xchg
sti
mov
mov
xchg
mov
and
push
lea
jp
call
mov
ja
fs
jae
or
int
lock
fidivs
mov
push
fiadds
lds
stc
jbe
push
cmp
push
jno
filds
test
or
or
stc
adc
ljmp
jnp
inc
mov
jae
shrl
xlat
xchg
pop
jbe
lea
sub
lahf
xchg
fmuls
xor
xchg
clc
repz
icebp
lret
scas
in
sbb
push
lods
push
movsl
fildl
repz
popf
xor
jecxz
cmp
inc
iret
pop
add
jmp
bsf
jne
int
sub
dec
xchg
sbb
mov
or
or
outsl
and
jbe
out
ret
fwait
lock
xchg
cmp
and
imul
jae
dec
mov
adcb
fcomps
cltd
in
inc
pop
or
mov
jne
jecxz
or
sbbb
or
leave
or
dec
lds
in
hlt
popfw
cld
insb
add
jns
inc
dec
int3
mov
iret
push
addb
cmpsb
pop
aam
repz
inc
fwait
shll
adc
xchg
xchg
imulb
mov
or
cmc
pop
inc
pop
sbb
inc
in
jg
je
mov
xchg
xor
or
cmp
lahf
sbb
fimuls
pop
scas
cmp
cmpsl
fdivrp
cmpsb
cmp
outsl
dec
cmc
out
cmpsb
mov
fists
and
dec
xchg
sub
aaa
loop
aas
push
shr
add
inc
je
lods
pop
mov
fndisi(8087
cmpsb
das
dec
pop
js
rolb
ljmp
inc
push
jg
stos
jbe
cmp
dec
inc
in
repz
popf
in
mov
mov
jp
jae
xorl
fcomp
jmp
push
and
sub
jb
clc
mov
push
outsl
mov
sub
cmpl
insb
lahf
jne
sarl
mov
daa
rcll
in
mov
add
xor
insb
in
das
jo
stc
add
inc
loope
mov
xor
sbb
loope
cltd
adc
push
pop
dec
pop
int3
inc
pop
pop
in
push
stos
sub
pop
les
scas
enter
jnp
and
xchg
adc
mov
or
adc
jo
ret
leave
fstps
mov
insl
mov
cmp
xchg
xchg
dec
popf
lahf
adc
jl
loopne
es
mov
adc
inc
sbb
fdivrs
aam
mov
lock
mov
icebp
popa
mov
lods
sub
hlt
popf
out
jo
js
and
adc
aad
andl
inc
arpl
daa
movsl
mov
jle
shl
cltd
cltd
nop
and
push
cmpsl
sti
addr16
neg
mov
ss
xchg
push
ja
enter
mov
sbb
add
imul
xchg
cmpsl
les
add
divb
or
stc
and
gs
mov
add
fisubrl
gs
or
pop
cltd
inc
sbb
pop
push
je
jae
pushf
shr
pop
sub
into
cmp
mov
sbb
jae
push
add
pop
add
push
fwait
ret
imul
inc
js
add
dec
mov
sahf
aad
and
or
lret
gs
lock
out
lock
sti
mov
and
xchg
jnp
test
pop
jbe
rcrb
movsb
pop
mov
mov
xor
loopne
push
lret
jns
xchg
mov
subl
cmp
fs
pop
mov
stc
out
pop
mov
jmp
out
cld
into
lret
xchg
cltd
mov
or
hlt
push
daa
mov
mov
fstl
cmpsb
das
mov
jb
sti
rcll
adc
dec
jno
in
push
mov
stos
test
inc
outsb
cmpsb
repz
mov
push
add
cltd
inc
paddq
test
dec
imul
and
test
mov
int3
cmp
sbbb
mov
mov
sub
inc
aam
xor
test
insl
imul
sbb
jbe
or
pop
sbbb
cmp
fidivrl
in
clc
jecxz
mov
adc
test
xor
xlat
sbbb
pop
leave
int
mov
test
xlat
xchg
cmpsl
or
arpl
push
push
mov
sub
cmpsl
pop
hlt
jno
adc
loope
ret
in
mov
sbb
lcall
popa
popf
mov
out
mov
loopne
cmp
ja
cmp
cmc
movswl
xchg
js
push
xchg
lods
lret
ret
adc
sbb
in
insb
xor
in
mov
dec
cli
xchg
mov
add
inc
mov
aas
and
sbb
mov
dec
xlat
xor
cmp
lret
repnz
roll
cs
adc
inc
outsb
fisubl
fsts
mov
cmp
addr16
sbb
into
jecxz
je
bound
push
pop
push
insb
movsl
sti
sbb
inc
inc
fs
and
in
repz
mov
hlt
adc
jno
mov
lock
adcl
pop
dec
lahf
aad
mov
xchg
or
dec
jge
cmpsl
sti
xor
and
out
out
mov
xchg
or
and
cmp
fcoml
stos
mov
cwtl
ja
pop
sbbl
mov
testl
adc
cs
xor
shrl
clc
popf
scas
js
xor
enter
lret
in
inc
daa
jo
ljmp
push
fwait
and
inc
fdivs
in
jp
addr16
sub
push
jp
sbb
xor
push
fisttpll
stos
pop
cmpsl
mov
test
shlb
cwtl
in
xchg
dec
ret
cli
xlat
subl
pop
out
inc
lock
or
ficoml
pop
pop
movsb
fwait
cmp
xor
xor
ret
and
movsl
mov
adc
add
outsl
mov
push
popa
and
cmpsl
rcrl
mov
and
push
mov
sub
add
psrlq
es
mov
and
or
lahf
inc
js
call
imul
sahf
mov
inc
pusha
inc
adc
fisubs
aam
inc
rorb
daa
push
sbb
mov
push
lahf
sbb
push
shl
test
fsubrl
outsb
fwait
sbb
pop
sbb
mov
mov
int3
mov
out
shrl
imul
and
les
xchg
fs
js
add
shll
adc
cld
les
xchg
xchg
pushf
push
sahf
xchg
cmc
dec
jno
adc
popa
mov
dec
inc
jmp
popf
pop
pop
and
rorl
and
adc
xor
pop
movsl
mov
enter
mov
push
sub
xor
insb
push
in
push
je
dec
sbb
add
xchg
test
int3
repz
into
add
test
lods
cmp
sahf
in
pop
lcall
pop
pop
pusha
mov
mov
rol
into
xchg
testb
inc
out
and
add
sub
xchg
clc
ljmp
cmpsl
mov
in
sbb
add
cmp
and
call
popf
aam
je
ret
sub
cwtl
cmp
arpl
call
mov
popa
push
sbb
adc
pop
pop
ja
inc
or
lock
ss
popf
adc
push
daa
lahf
mov
daa
add
inc
mov
or
push
push
mov
jnp
cmp
flds
or
leave
inc
mov
cmp
dec
cld
cmpsb
call
enter
das
in
push
mov
aad
adc
imul
lods
add
add
das
xchg
mov
pop
fdiv
adcl
scas
ljmp
in
daa
lret
xchg
cmp
into
divb
fldt
movb
pop
scas
enter
out
loop
inc
jmp
xchg
dec
ret
nop
cmp
or
aas
pop
add
mov
mov
cmp
xor
pop
test
test
ret
aam
push
sub
push
or
ss
mov
rol
add
add
mov
jns
scas
daa
push
insl
jno
mov
leave
inc
pop
pop
les
fistl
roll
jns
pushf
pop
or
mov
cmpsb
or
stos
pop
add
or
xlat
dec
cmp
xorl
cmp
and
jnp
out
sub
clc
cs
rol
aad
sbbb
mov
insb
rclb
or
and
cmpsb
push
push
ret
ds
add
mov
mov
fists
xchg
fildl
iret
xchg
mov
cltd
or
or
xchg
pmuludq
jp
dec
test
inc
xchg
aas
and
mov
pusha
sub
pop
cmc
mov
pop
je
jb
sbb
and
in
mov
pop
lret
in
sub
ja
xchg
mov
data16
jp
adcb
into
and
adc
jae
xchg
enter
bound
cmpsl
scas
in
pop
add
div
out
jbe
pop
adc
mov
mov
or
push
punpckhdq
lods
jmp
mov
jne
sub
xchg
hlt
add
lock
push
jge
shr
sahf
incl
jecxz
fldcw
push
jge
push
insl
imul
mov
dec
popa
pop
xchg
pop
daa
mov
cmpsb
gs
stos
ficoms
insl
sbb
scas
enter
inc
sbb
loop
dec
inc
dec
jae
cmp
data16
mov
stos
aaa
lret
add
or
cmp
sbbb
imul
and
fldl
mov
int3
cmp
test
dec
repz
dec
mov
sahf
add
xchg
clc
ljmp
push
mov
subl
std
mov
pop
push
dec
jno
popa
xor
pop
jnp
stos
inc
cmp
fstpl
dec
enter
sub
outsl
mov
dec
data16
jg
pusha
fdiv
pop
sub
xchg
pop
xor
sub
frstor
xchg
sub
stos
and
stos
bound
arpl
popl
dec
pop
jns
sbb
lcall
and
lods
dec
addr16
xor
outsb
dec
mov
outsl
js
dec
mov
leave
sbb
in
mov
cmp
js
or
dec
imul
push
xadd
jle
and
pop
sbb
cmp
inc
ljmp
ss
loopne
sbb
lret
jl
add
lock
stos
ja
mov
sbb
or
mov
loop
imul
jmp
push
mov
cmp
pop
insb
or
push
imul
sub
mov
pop
je
mov
stos
mov
repnz
xor
roll
shll
jo
repz
fwait
stos
and
mov
mov
cltd
mov
fwait
add
push
jae
int3
aad
push
lods
fsubrs
cmp
mov
fisubrs
leave
sub
mov
pop
in
and
or
dec
dec
imul
bound
pop
pop
and
jl
movsb
mov
fstps
data16
cmp
adc
rcrb
push
fcoms
repz
or
and
xor
cmp
and
xchg
adc
xor
inc
lea
sarl
ss
xchg
repz
cmp
adc
out
sbb
fisubrl
jmp
and
and
mov
dec
addr16
cld
adc
stos
test
cmp
aas
subl
jnp
jp
es
jne
xor
adc
loopne
dec
xor
ds
aaa
outsb
mov
test
mov
call
add
sbb
jb
in
push
mov
test
imul
and
cmpsl
std
dec
inc
aam
adc
add
dec
in
xchg
dec
rcrl
xor
inc
cwtl
mov
mov
fdivrl
cmp
xchg
dec
mov
aam
mov
movsl
fidivs
jno
inc
or
inc
jge
ss
popl
mov
adc
pop
outsl
movsl
mov
jbe
imulb
sbb
dec
xchg
pop
dec
addr16
pop
add
repnz
xor
popf
mov
mov
jns
fwait
stos
xlat
dec
xchg
jmp
jle
sarl
push
outsl
jo
adc
movsb
jmp
xchg
notb
cmp
xor
lret
cmp
std
pop
je
std
mov
lea
push
dec
loopne
icebp
outsl
orl
aaa
push
outsl
lret
sub
cmp
pop
and
sbb
out
pop
outsb
jb
dec
stc
and
sbb
jno
mov
loopne
push
fiadds
adc
arpl
and
and
sarl
and
retw
and
dec
loopne
stos
push
sub
sahf
aam
shll
sbbl
add
repz
stos
push
cmc
insl
and
push
sbbb
into
push
subb
cmp
je
push
pop
ds
insb
lret
outsl
xchg
lods
adc
ret
push
mov
adc
addr16
mov
mov
mov
cltd
and
std
mov
pusha
shl
add
adc
push
xlat
std
sbb
imul
int3
xchg
pusha
shrl
hlt
push
push
mov
and
sbb
mov
push
mov
fs
pop
mov
and
lret
cmp
sub
or
out
sahf
lret
or
cmpb
push
push
mov
in
into
bound
sbb
scas
add
icebp
movsb
mov
loope
xchg
pop
pop
and
pop
es
cmp
movsl
stc
das
or
ret
fiadds
int
pop
or
sub
pop
call
xchg
sbb
pusha
mov
movsb
dec
adc
int3
lret
movsl
xchg
cld
lds
sbb
mov
sub
jge
lods
fcompl
add
pushf
fimuls
andl
push
pop
js
cmp
xchg
lahf
std
push
xchg
lods
in
inc
push
jg
stc
cmp
cmp
scas
daa
inc
xor
adc
test
loop
mov
xchg
adc
cmc
pop
jl
aaa
imul
pop
ljmp
cld
jecxz
cmpsl
lea
lahf
mov
xchg
add
add
pop
ret
cli
adc
test
cmpsb
ljmp
int
sti
cmpb
lods
or
push
push
enter
xor
fdiv
adc
fiaddl
lea
jmp
sub
ffreep
aaa
or
daa
push
mov
shll
outsb
out
dec
mov
stos
and
js
mov
loop
xor
sbb
lahf
icebp
jle
push
vmwrite
sub
pop
mov
scas
mov
inc
frstor
push
clc
ret
stc
dec
mov
lcall
add
xchg
mov
pop
ret
inc
fwait
mov
clc
ljmp
imulb
pop
xchg
cs
clc
idiv
insl
bound
fisubs
jle
imull
je
lock
out
lock
mov
sub
sti
ret
ljmp
loope
push
mov
and
add
bound
add
enter
ljmp
and
inc
ror
adc
loop
fdivrp
mov
mov
mov
lock
loop
enter
cmp
pop
jnp
add
cmp
cmp
fdivs
or
sbb
mov
stos
int3
push
repz
int
sahf
sub
and
xchg
test
out
mov
pop
adc
add
cmp
orb
aam
das
add
loopne
stos
fwait
aam
daa
lahf
pop
imul
push
lock
jae
xchg
jmp
loope
fucomp
leave
sbb
aas
int3
add
push
jb
mov
lods
jecxz
jno
mov
sub
shrb
xor
mov
xchg
daa
andl
add
flds
sub
int3
ja
mov
xor
aad
imul
clc
xor
push
in
in
xchg
dec
mov
dec
mov
inc
orb
mov
add
mov
pop
iret
das
dec
loopne
pusha
xchg
aas
sub
add
xchg
lcall
mov
loopne
mov
cli
xor
pop
mov
and
or
fucomp
sbb
push
je
iret
xchg
negl
push
add
sub
in
popf
clc
ljmp
cs
mov
push
mov
fists
rcrl
outsb
dec
jno
cmp
xor
add
fwait
rcll
sbb
pusha
test
out
push
cld
mov
cwtl
mov
add
js
and
xchg
push
lret
rclb
sbb
lock
aas
addr16
outsb
std
imul
cli
xchg
pusha
cmp
push
jnp
flds
adc
aam
jl
inc
popa
cmp
mov
push
imul
or
push
jp
repz
mov
bound
jb
jecxz
inc
mov
mov
gs
orl
subl
fiaddl
xor
ds
rorb
sete
mov
int3
shr
rol
push
cmpsb
orb
sub
cmp
and
js
repnz
sahf
pop
or
sub
scas
pop
push
sarb
daa
inc
cltd
mov
push
sarb
push
in
lods
std
outsb
cmp
push
or
jbe
rorb
push
data16
cmp
rcll
insl
jb
lcall
cmp
mov
cmp
aam
mov
push
or
sahf
mov
or
pop
push
jp
repnz
mov
enter
cwtl
shr
xchg
and
popf
inc
add
and
push
in
cwtl
inc
lds
shll
aam
stos
dec
repz
sbb
loope
sub
push
out
lcall
shrl
lcall
push
je
loope
lahf
test
lea
inc
scas
xor
lock
inc
insl
rcr
arpl
outsb
cmc
sbb
xchg
inc
pop
imul
sub
imul
push
inc
jb
or
xchg
lret
adc
fdivs
sarb
add
mov
push
fldl
add
mov
inc
in
xchg
or
mov
aaa
outsb
sbb
mov
adc
push
pop
jns
aad
cs
je
sbb
arpl
push
cmp
dec
mov
stc
xchg
in
mov
jae
sbb
pop
pop
rorl
aad
sahf
mov
aad
pop
jle
js
sbb
cmp
insl
rorb
adc
test
xchg
cmp
add
jb
imul
jl
cli
jb
mov
push
mov
lret
mov
loopne
sarb
pop
outsl
das
ja
leave
gs
repnz
mov
lds
daa
stc
dec
jb
sub
fwait
stc
mov
fcmovnu
and
adc
test
jp,pt
jmp
sbb
fdivrl
testb
cmp
inc
mov
ja
loopne
inc
mov
into
daa
dec
lods
sub
mull
adc
cmp
cmpsl
jne
jmp
lock
mov
jg
mov
rcll
mov
aaa
mov
cs
dec
sub
pop
push
mov
cli
jb
jno
sahf
sub
mov
add
mov
jmp
jne
cmp
push
pushl
push
pop
inc
mov
out
push
lods
sbb
repz
or
aas
xchg
ds
push
push
outsl
cmp
insl
adc
idivb
mov
add
adc
movsl
mov
mov
dec
add
fcomps
xchg
hlt
popf
xor
push
outsb
loopne
mov
xlat
mov
mov
fdivl
mov
mull
cmp
jno
loopne
loope
jb
popaw
xchg
mov
nop
push
push
js
in
pop
mov
out
pop
jns
inc
jmp
push
insl
hlt
mov
push
aad
js
scas
xor
xchg
out
inc
aam
mov
add
imul
and
aaa
loop
or
push
or
sbb
jecxz
mov
push
loope
les
xchg
xor
xchg
cmpsb
add
pop
pop
mov
mov
sub
dec
mov
js
movsb
dec
adc
jecxz
mov
cmc
pop
fsubr
xorl
cmpsb
arpl
and
mov
inc
lods
dec
imul
sbb
lods
imul
mov
jmp
scas
pop
add
cmp
popa
jnp
leave
cmp
jmp
inc
sbb
push
jns
jg
aas
sub
dec
push
xchg
mov
add
cmp
int
pushf
aas
clc
jno
cmp
add
ljmp
xor
je
loop
clc
ljmp
and
inc
popa
jp
loop
sbb
ds
sahf
notl
xchg
push
enter
sub
or
mov
mov
imul
leave
xchg
aaa
stc
mov
adc
push
subl
pop
js
cmp
arpl
mov
ja
adc
inc
insl
xchg
mov
popa
mov
sub
mov
jo,pt
pop
mov
add
jae
dec
in
sbb
cmp
aad
mov
dec
jae
out
inc
out
negb
push
scas
push
push
or
fisubrs
push
fiadds
fwait
push
push
mov
jae
and
cmp
insl
xchg
test
sub
jb
sub
aas
pop
add
jmp
pop
xchg
sbb
cli
cmp
xlat
sbbb
cmp
cmp
addr16
sbb
loopne
test
fwait
mov
and
ret
or
cmpsb
or
icebp
or
push
ljmp
roll
movsb
outsl
stc
into
sbb
leave
push
mov
xor
sbb
aad
jno
lcall
xchg
loop
movsb
and
sub
adc
inc
popa
aad
xor
xchg
mov
jmp
add
push
mov
lock
das
push
scas
pop
add
adc
mov
sub
loopne
xchg
mov
dec
pushf
or
or
adc
ret
dec
imul
pop
push
sar
jecxz
push
add
test
imulb
movl
add
dec
xlat
xor
inc
jle
pop
or
add
fs
push
inc
pop
psubb
insl
jns
xlat
adc
dec
aad
xor
orb
pop
clc
ljmp
out
push
xor
and
xchg
enter
sbbb
pop
aad
jnp
mov
jnp
ficomps
shr
jbe
imul
imul
mov
into
pop
xor
ss
inc
add
or
fwait
out
and
testb
outsl
fwait
lock
aas
sahf
out
sahf
ljmp
add
icebp
sbb
lcall
gs
sub
fcmovb
mov
and
insb
shl
xchg
aad
scas
sbb
sub
sbb
test
pop
sti
dec
mov
sbb
std
pop
lcall
leavew
arpl
xor
inc
js
mov
fs
inc
mov
pop
adc
imul
sub
jns
inc
lock
and
cli
mov
call
das
fiaddl
cltd
mov
or
test
add
and
pushf
inc
sbb
loope
sbbb
adc
mov
rcrl
popf
push
loopne
out
aad
sbb
push
out
pop
and
jmp
jge
mov
push
and
mov
popa
jnp
int3
mull
mov
and
sahf
fsts
enter
jns
sbb
jbe
cmp
ret
int
fwait
ja
iret
jmp
mov
sbb
push
mov
or
and
insl
mov
jo
loop
add
rorb
sub
out
imul
insl
mov
cwtl
into
sbb
loope
xchg
xor
fisubrl
scas
xor
lds
adc
mov
dec
lds
dec
lcall
xorl
sbb
push
or
xchg
mov
mov
dec
out
cmp
add
int3
sub
lret
pop
lods
call
sti
pop
out
enter
movsl
je
or
xchg
mov
mov
loope
sbb
inc
sar
and
cmp
inc
in
cwtl
inc
rorl
movb
std
cmpsl
mov
sub
push
mov
xchg
out
dec
mov
xchg
repnz
leave
xlat
or
test
roll
cmc
fisttpll
cwtl
popf
test
fdiv
jo
cmp
stos
pop
pop
jmp
lahf
repz
popf
and
push
cmp
and
jmp
les
je
lret
adc
jg
mov
xor
dec
mov
mov
popfw
sbb
popf
icebp
jle
ss
fistps
mov
fisubrl
flds
shrl
add
shrl
mov
mov
clc
pop
cmp
mov
jo
dec
mov
xor
sbb
clc
mov
je
fists
cvtps2pi
xchg
mov
jge
ret
in
into
rol
jp
mov
movsl
cmp
add
fldcw
sbbl
or
and
adc
mov
mov
dec
insl
in
dec
xor
test
imul
mov
ds
test
scas
daa
inc
out
sbb
sahf
pop
data16
iret
imull
cmpsl
cmpsb
cmp
mov
add
sub
bound
fimuls
adc
bswap
pop
add
sub
scas
inc
fs
lock
test
and
cmp
stos
mov
adc
fadd
aaa
mulb
adcl
ret
mov
ss
xchg
lods
inc
jmp
pushf
push
cmp
js
mov
cmpsl
shr
in
fcompl
fbstp
mov
xchg
adc
add
fdivr
daa
mov
or
xchg
sub
mov
outsb
jno
add
and
lock
cld
cmc
dec
mov
out
out
push
jp
mov
sub
ljmp
fs
inc
sbb
add
xchg
inc
pop
imul
jmp
stc
je
ret
inc
aam
xor
test
inc
mov
lds
movsb
ljmp
pop
sbb
imul
mov
mov
sub
adc
js
sub
jb
sbb
cmpsb
adc
inc
xor
xchg
sahf
push
xor
dec
xorl
daa
pop
pop
jae
fcompl
fists
add
out
push
sub
adc
movsl
stc
gs
cmp
cmpsb
in
sub
pop
or
sahf
lds
cltd
shr
xchg
sub
incl
jmp
sub
out
ret
and
pop
pushl
mov
mov
rorl
mov
outsl
movsl
cmp
xlat
xchg
jmp
aas
stos
mov
xchg
into
in
push
mov
mov
gs
psrld
ret
ljmp
mov
in
xlat
cwtl
sub
mov
xchg
xchg
lock
ljmp
fbld
test
pop
inc
fcomi
fwait
das
sbb
dec
push
lret
notl
loope
pusha
xor
jp
cmp
repnz
and
fimuls
push
adc
sarl
push
jb
ret
sub
cwtl
push
dec
adc
push
insl
in
pop
test
sbb
out
bound
pop
sahf
fyl2xp1
stos
sbb
cmpsl
push
iret
dec
sarb
in
add
stos
xchg
mov
dec
mov
push
mov
fcoml
mov
and
jb
jno
cltd
es
test
xor
orb
pushf
test
jle
mov
fsubrs
cltd
ja
or
push
roll
cmp
popf
lret
mov
xlat
icebp
and
mov
int
sbb
int3
clc
push
xchg
pop
sbbb
mov
push
sub
mov
jae
fsubr
popa
mov
mov
ja
std
outsl
sarl
sub
movsl
std
test
rcrl
xlat
xor
out
dec
mov
repz
daa
dec
jne
rorb
leave
scas
rclb
pop
and
pop
mov
xchg
inc
sbb
push
or
movsl
mov
aam
push
jns
hlt
pusha
sub
mov
add
rcrl
fisttpll
xchg
jmp
pop
sbb
jle
dec
mov
pop
mov
sub
movsl
in
push
fimull
es
rcll
stc
fidivrs
in
out
xor
cmpsb
ficomps
pop
icebp
test
mov
push
out
inc
insb
xchg
nop
mov
cmp
fdiv
sbb
idivb
in
inc
test
mov
jno
add
cli
push
add
dec
ret
addr16
jmp
jne
jge
jnp
add
cmp
xlat
dec
imul
rcr
pop
dec
dec
hlt
adc
addb
mov
push
cmp
jbe
cmpsb
negl
xchg
jmp
mov
aam
je
jmp
push
leave
or
sbbl
mov
mov
aas
push
cmc
pinsrw
dec
sbbl
cmp
out
push
push
fmuls
sbb
int3
dec
sbb
flds
scas
mov
gs
cmp
in
sub
dec
fsts
aaa
loop
push
inc
mov
adc
pop
sub
add
lods
add
lret
daa
jno
xor
loopne
sub
data16
loope
sub
add
enter
cmp
add
mov
adc
je
loop
clc
ljmp
and
imul
add
repz
ljmp
sti
xor
xchg
out
lods
jbe
or
dec
test
xchg
scas
and
adc
pop
arpl
inc
popa
adc
cmp
push
mov
dec
adc
push
data16
mov
addl
jo
fwait
mov
scas
sbb
sbb
add
jmp
add
inc
ret
jno
fwait
pop
add
mov
enter
mov
and
push
cmpsb
int3
ljmp
std
xor
test
das
arpl
shr
fcompl
shr
cmpsl
sbb
out
shll
xchg
shrl
push
and
call
movsl
and
stos
in
repz
ss
dec
in
call
push
xchg
mov
pusha
or
xor
lock
addr16
jae
pusha
fsubrs
sti
inc
icebp
enter
sbb
xor
mov
mov
xchg
mov
imul
mov
or
pop
and
add
jg
jp
xchg
pop
xor
cmpl
push
in
mov
scas
sahf
and
cltd
mov
loop
jae
notb
ljmp
hlt
fidivs
fldl
cmp
push
sbb
inc
dec
adc
pusha
add
mov
dec
xor
cmc
outsb
mov
in
insl
stos
mov
out
and
inc
leave
testb
jecxz
xor
insb
sbb
push
out
adc
cmp
cwtl
into
negl
mull
in
pop
sahf
jg
push
cmpsl
push
montmul
jo
adc
pop
jns
sbb
mov
xchg
add
sbb
popf
mov
adc
sbb
rcrl
push
movsl
std
mov
mov
dec
movsl
push
pop
xchg
add
repz
or
js
or
xor
clc
sbb
inc
ja
push
add
sbbb
dec
jmp
sbb
out
sbb
add
inc
cmpsl
test
xor
mov
mov
inc
sbb
mov
sub
popf
add
push
movsl
push
or
pop
add
js
cmp
mov
jns
cmp
repnz
outsb
sti
dec
mov
cmp
xor
popa
inc
pop
pop
lcall
cmc
inc
cmc
cmp
shr
jmp
test
xchg
xor
mov
or
mov
xchg
adc
jecxz
popf
sbb
scas
mov
or
xor
repnz
mov
fs
sbb
lahf
jmp
sahf
cmp
xor
mov
pop
scas
in
pushf
xchg
sbb
mov
jo
sbb
cmc
dec
hlt
in
pop
lods
rorl
adc
mov
mov
lcall
data16
jne
and
dec
faddl
sub
and
xchg
and
lds
push
jge
xor
lret
push
insb
rcr
gs
sbb
faddl
sbbl
mov
cmpsl
gs
cmp
sub
hlt
inc
mov
inc
xor
aas
or
dec
pop
mov
push
push
outsb
test
cltd
inc
ret
out
dec
repnz
rep
mov
sub
mov
dec
cld
cmc
pop
jnp
add
mov
fsub
inc
dec
push
movsl
push
or
dec
faddl
cmp
stc
or
xchg
insb
cs
test
jl
sbb
sbb
push
xor
push
fnsave
shl
jnp
lret
jl
sbb
and
clc
xchg
out
ret
push
cmp
loopne
cmpsl
sbb
inc
sahf
fistl
lcall
scas
inc
std
mov
insb
into
mov
add
lds
cmpsb
gs
dec
mov
and
inc
xchg
call
lret
mov
xlat
jg
int3
repz
mov
loope
xchg
xor
stos
or
inc
xor
sbb
jp
cwtl
pop
or
inc
adc
mov
xor
or
jl
dec
xor
inc
imul
jg
subb
ficoms
xchg
dec
jge
push
pop
outsb
inc
xchg
int
and
call
mov
ds
jge
sbb
adc
mov
dec
mov
lds
inc
decl
mov
sbb
fs
jl
dec
or
xor
mov
test
rclb
js
repnz
and
dec
loope
scas
icebp
push
jg
add
mov
pop
scas
add
sub
scas
insb
xchg
sub
scas
mov
out
testl
jp
or
mov
mov
cmp
cwtl
xor
pusha
jp
jecxz
push
mov
sahf
xor
adc
iret
test
jmp
stos
dec
insl
vmovntps
jg
cs
add
enter
mov
cltd
loope
aas
xor
or
inc
fstpl
sahf
mov
mov
movsb
mov
out
push
push
pop
test
enter
mov
stos
ret
push
add
les
ret
pushf
in
and
xchg
jge
cmpsb
cli
xor
or
ror
sahf
jo
cmc
psllw
daa
push
pop
add
push
rorb
loope
mov
int3
aad
pop
lods
inc
sbb
sahf
mov
add
sub
pop
loop
and
loope
mov
pop
negl
iret
mov
aaa
dec
cwtl
arpl
cmc
shl
mov
gs
data16
dec
xor
lret
notl
mov
in
jb
leave
jecxz
add
inc
pusha
mov
adc
pop
mov
mov
ja
addr16
dec
js
dec
pop
pop
fbstp
push
fwait
stos
mov
pop
or
cmpsb
mov
test
push
movsb
ficompl
jle
clc
mov
test
cmpsl
mov
adc
mov
mov
icebp
lcall
jno
inc
mov
sub
ficoms
sub
cmp
cwtl
ret
bound
push
and
loop
push
cld
mov
lods
rorl
and
js
sub
iret
out
mov
ljmp
ss
bound
xchg
push
jbe
stos
push
jbe
xor
mov
mov
fildll
call
mov
jns
fstl
jno
sub
push
imul
jecxz
mov
icebp
lods
shr
or
ljmp
sub
mov
dec
data16
aad
fs
push
and
add
jge
jl
mov
or
sahf
movsl
push
push
movsl
and
mov
xchg
in
mov
das
dec
addr16
xlat
dec
add
jb
gs
ss
dec
add
fdivs
ja
notb
and
js
test
xchg
pop
xchg
mov
lds
in
fwait
and
xlat
aas
and
pop
pop
and
jl
xorl
sbb
fndisi(8087
fbstp
scas
int3
out
jno
lods
sub
fs
jl
aaa
rorl
sub
mov
inc
leave
rorb
mov
mov
ja
cs
pop
adc
push
xor
jo
negb
leave
xchg
mov
pusha
jl
adc
call
and
or
negb
fcoms
fsubrl
pop
jns
jmp
mov
cmp
xor
or
jbe
jb
inc
xor
push
jae
mov
mov
xchg
jl
dec
and
repnz
icebp
jmp
push
dec
push
jne
rolb
add
mov
mov
ds
adc
pushf
popf
xor
int3
insl
xor
pushf
add
add
mov
es
sbb
fsts
or
push
ljmp
jne
cmp
mov
out
movsl
mov
test
dec
addr16
inc
arpl
push
dec
jbe
add
xchg
push
jle
jae
ret
adc
ljmp
cmp
add
inc
insb
fcoms
xchg
js
sub
adc
in
adc
das
pop
jmp
ss
jne
sub
enter
loopne
fwait
add
xchg
pop
aad
xchg
push
hlt
je
xorl
into
int
test
mov
fnstenv
inc
cmpsl
lds
dec
jmp
call
shlb
xor
fs
sbb
pusha
jp
mov
in
xchg
mov
sbb
bnd
mov
test
xchg
fsubl
ficoml
gs
sti
fwait
jns
mov
or
imul
shll
cld
add
pop
ret
xchg
mov
imul
rcr
insb
fadds
loop
xchg
ljmp
jb
shr
pop
mov
outsl
clc
xchg
jno
out
pop
sti
push
dec
clc
push
sbb
insl
push
out
xchg
lret
inc
pop
lcall
jo
mov
xlat
xchg
or
or
lret
jmp
pop
xchg
mov
mov
push
xor
push
jg
sbb
jae
cmpsb
loopne
inc
subl
movsl
and
orl
mov
stc
xor
cmp
xlat
jle
adc
jp
call
adc
cmp
clc
movsb
mov
mov
jl
and
out
loope
jae
std
adc
push
lea
outsb
sbb
inc
jl
push
and
inc
outsl
stos
in
push
cmp
jmp
mov
int3
add
push
gs
push
lret
in
mov
daa
rcr
jge
push
mov
cmp
out
mov
mov
dec
lahf
dec
push
jb
es
mov
mov
dec
cmp
sub
repz
xchg
das
lods
test
std
push
cld
loop
mov
adc
pop
fbld
or
or
gs
xchg
lea
jecxz
push
mov
inc
push
push
iret
negb
dec
aad
jl
cmp
fs
xor
loope
sahf
mov
repz
jp
lods
dec
pushf
mov
mov
adc
shlb
sub
cmpsb
es
add
cli
data16
xor
fildll
fbstp
int3
loop
pop
xchg
cmp
movsb
lret
repnz
icebp
in
sbb
push
add
jl
inc
xchg
add
cmp
xchg
les
inc
in
lock
pop
or
add
fldt
mov
std
push
xchg
lahf
xchg
jb
gs
aas
dec
fwait
lods
lods
nopl
cmp
out
push
cmp
push
jns
mov
mov
mov
jl
test
aas
inc
push
push
mov
push
aad
jnp
xlat
mov
xchg
orb
fists
rclb
arpl
cs
into
and
inc
mov
mov
push
or
shrb
mov
inc
or
hlt
inc
jnp
popf
gs
mov
or
data16
pop
adc
jno
ret
adc
ljmp
mov
jle
adc
xorb
mov
mov
je
cmp
rcll
imul
or
cwtl
outsl
and
loop
jg
jne
pop
scas
lea
sbbb
js
les
mov
mov
test
bound
movsl
int
int3
xchg
imulb
jmp
shr
dec
cmp
pop
dec
inc
sub
repnz
sti
arpl
sbb
or
push
mov
pop
mov
add
stos
mov
inc
insl
movsb
mov
test
js
in
fs
out
mov
daa
pop
mov
sti
jo
iret
jmp
daa
inc
pop
push
stos
xor
pop
mov
test
xchg
shll
adc
std
pop
xchg
and
jae
inc
out
jbe
aas
mov
lcall
mov
rcrb
cmp
cmp
cli
mov
xchg
sbb
pop
cmp
movsb
and
adc
shll
lcall
add
mov
rorb
sub
mov
aaa
fwait
jmp
lds
imul
cs
xchg
or
pop
jns
or
xchg
mov
ja
iret
cmp
add
mov
push
add
xchg
mov
cmp
lds
int
sbb
xor
fistps
lret
xor
jge
ss
dec
mov
jmp
and
ds
and
gs
cld
jns
mov
lret
mov
testl
sub
es
pop
mov
rcl
in
les
les
add
inc
push
jb
cld
mov
test
ljmp
rorb
sahf
inc
lret
cwtl
dec
cwtl
icebp
mov
test
call
xchg
fsubrs
ficoml
mov
pop
sbb
lcall
or
pop
rcrl
loopne
repnz
test
cmpsb
push
jb
mov
leave
ret
jbe
cs
mov
iret
in
sbb
ret
cmp
xchg
cs
lock
jmp
mov
aaa
xchg
jnp
or
clc
jo
lret
pop
lock
mov
adc
mov
test
dec
sahf
aam
pop
inc
and
cmp
aam
or
and
ljmp
xchg
cld
mov
cmp
cmpsb
shlb
mov
sarl
jb
xchg
mov
cmpsb
cmpsb
ror
mov
cmp
xchg
bound
sbbl
mov
inc
out
lock
aaa
ds
popa
pop
mov
and
add
jle
cmp
jne
lahf
aad
int3
lret
daa
lret
mov
pop
lods
sbb
cmpsb
add
cmp
ja
or
mov
inc
adc
jp
sub
stc
adc
stos
lds
xchg
xor
inc
xchg
lret
jnp
jle
lret
xor
loop
pop
orb
jle
jge
test
pusha
mov
jle
pop
sbb
cmovbe
imul
or
xchg
sub
fiadds
push
in
dec
dec
mov
add
subl
inc
push
or
sbb
jge
mov
adcl
pop
insl
xchg
fwait
mov
cmp
fs
das
cmpsl
mov
dec
sub
sbbb
mov
leave
mov
pop
and
icebp
cmp
adc
nop
sahf
mov
sbb
es
or
pop
xchg
jbe
jle
movsl
and
push
or
sahf
stos
and
cmpsl
fucom
or
cmp
xchg
sbb
enter
cmp
jae
lcall
fdivrl
data16
push
outsl
xor
add
test
sbb
inc
and
mov
sub
adc
mov
cmp
mov
pop
jecxz
pop
xchg
ds
repnz
xor
push
dec
cmp
lret
rolb
lret
out
js
sub
jp
out
lock
adc
scas
fwait
movb
std
cmp
inc
pop
pop
mov
xorb
pop
pusha
ret
or
imul
xchg
dec
pushf
or
fcmovu
sahf
push
pop
dec
mov
xchg
mov
in
adc
shl
or
mov
clc
push
xor
xchg
xchg
stc
add
rolb
fiaddl
in
sub
add
dec
xchg
mov
cmc
xchg
movaps
jmp
sbb
std
mov
sti
aam
sub
cmc
add
pop
mov
mov
movsl
and
pop
add
adc
xchg
mov
loop
sub
loope
sub
js
cmpsl
sbb
movsl
xchg
push
cltd
or
cmp
cmp
jo
loop
dec
push
cmp
movsb
mov
xor
pushl
imul
dec
gs
jno
data16
addl
xchg
jae
and
test
pop
jb
pop
ret
jg
jp
lret
aaa
jecxz
xor
push
pop
daa
add
bound
sub
dec
adc
mov
das
pop
clc
dec
push
stc
in
mov
fiaddl
je
insb
rcr
je
jp
pop
xchg
je
ret
je
ds
ljmp
iret
testb
mulb
lds
sti
movsl
sarl
ljmp
pushf
lock
inc
ret
fisttpll
push
push
repnz
lcall
add
mov
pop
add
adc
pop
cld
push
mov
jg
pop
cwtl
je
pop
sbb
test
testl
stos
jnp
push
dec
addr16
out
lret
ss
or
pop
xchg
mov
jle
loop
test
loope
sub
stc
push
sub
adc
adc
jbe
aas
add
pop
mov
out
sar
jmp
adc
dec
cli
cmp
push
rcll
push
sbb
sbb
out
loope
fwait
push
xor
pop
and
mov
sbb
and
jmp
outsl
mov
sbbb
ja
xchg
insb
imul
jmp
jge
aad
or
rclb
loope
js
push
imul
and
or
mov
lea
lods
cmp
push
jge
fldt
adc
ficompl
mov
lahf
xchg
xor
cld
in
xor
test
jbe
std
push
sub
sub
mov
cmp
loopew
pusha
jp
enter
xchg
adc
pop
pop
test
pop
lock
mov
in
inc
xor
and
sub
divl
or
nop
mov
add
adc
psrld
mov
orl
inc
repz
add
test
jecxz
pop
mov
jp
add
or
icebp
inc
pop
or
add
loop
ljmp
cmp
cld
movsb
pop
pushf
sub
or
sbb
cld
int3
rcll
push
xor
pop
test
dec
dec
and
shr
ror
loopne
push
mov
inc
gs
es
clc
dec
rolb
push
inc
mov
mov
sub
jl
mov
outsb
ret
out
inc
imul
cmpsb
jg
mov
pop
imul
lds
frstor
lahf
std
pop
jecxz
test
stos
scas
sti
jecxz
popa
adc
movsb
cmpsb
jp
in
cmpsl
popl
jns
adc
int3
test
movq
ret
cmp
fcmovnb
mov
daa
cmp
xchg
and
adc
lea
pop
fldenv
movsb
mov
lcall
pop
fstps
fstpl
inc
or
aad
sub
lret
jecxz
push
outsl
call
cmp
xchg
ja
mov
mov
pushf
mov
dec
push
hlt
aad
mov
cmp
daa
testl
arpl
aad
mov
or
mov
push
fwait
cmpsb
or
sbb
sub
push
ss
sub
push
lock
cli
xor
sub
sub
xor
ds
mov
jb
inc
and
pop
add
popa
jg
adc
adc
push
push
sbb
pusha
xchg
fldt
lds
jae
mov
lock
pop
mov
in
pop
fyl2x
outsb
dec
ss
outsb
inc
enter
fildll
add
xchg
std
gs
mov
xchg
push
push
sbb
xchg
int3
pop
add
das
mov
inc
into
cmc
sbb
leave
add
inc
sbb
mov
add
mov
lahf
dec
adc
sub
mov
cmpsl
fldl
push
dec
fnstsw
add
push
jo
jmp
stc
daa
lahf
mov
pop
loop
pop
popf
push
int3
clc
adc
ja
sbbb
dec
rorl
lret
xchg
mov
xchg
sub
fisttpl
aad
rclb
jg
lock
int
clc
push
nop
daa
sbb
fwait
push
xchg
sti
ss
rcrb
mov
mov
cmc
fs
int3
test
mov
sbb
and
mov
movsl
sbb
inc
dec
push
or
mov
jmp
cld
xor
orb
cli
inc
cmp
xor
js
dec
out
inc
js
jle
dec
sub
xchg
mov
jne
jno
lret
in
aas
gs
sub
stos
leave
cmp
mov
cwtl
in
and
and
test
dec
and
outsb
jb
les
or
cmpsb
push
mov
lret
aas
inc
jle
cmp
inc
cwtl
dec
dec
scas
daa
scas
fidivrs
sti
enter
ret
jmp
movaps
lret
jbe
popa
movsl
pop
push
sbb
fdiv
mov
ret
fisttpll
jae
std
xchg
cmc
mov
push
and
int
jnp
sarl
lahf
pop
adc
fdivr
nop
fiaddl
ljmp
into
mov
add
jle
adc
rorb
mov
shrl
and
fisubrs
cld
insb
xor
outsl
mov
neg
mov
sbb
mov
shll
das
shll
mov
and
and
dec
je
jae
fwait
shlb
jnp
call
cmp
enter
movsl
rcll
cmp
cmp
and
xchg
in
sub
rorl
mov
mov
mov
repz
dec
push
stos
sub
jmp
insl
sub
pop
cmpb
add
pop
or
rorb
rcll
movsb
jmp
fstpl
xlat
push
shr
push
popf
xchg
mov
lret
xchg
cmpl
push
cmpsb
mov
movsb
mov
aad
aam
sub
adc
cmp
aam
imul
arpl
push
stos
add
pushf
inc
xchg
add
add
jb
jae
faddl
cmp
sbb
add
mov
scas
mov
push
pop
jns
mov
xchg
mov
inc
imul
in
mov
popa
mov
sbb
push
and
jbe
call
shlb
jb
scas
xor
into
push
adc
aaa
mov
popf
mov
mov
adc
clc
insl
ljmp
nop
repz
inc
or
and
mov
and
lock
wrmsr
xor
out
repnz
hlt
add
inc
or
ds
mov
lahf
adc
sbb
int3
out
mov
arpl
outsl
addr16
adc
jge
adc
scas
inc
addr16
lret
ljmp
les
das
mov
int3
xchg
stc
xchg
inc
loop
in
movsb
or
movb
jg
repnz
stos
cli
pop
mov
adc
xorl
sbb
imul
movd
int3
out
add
mov
sahf
dec
adc
inc
std
and
push
fistps
shlb
ret
ljmp
leave
xchg
lock
lret
in
mov
je
nop
inc
popa
lea
outsb
lcall
insl
mov
lea
aaa
scas
daa
push
insl
aam
push
mov
mov
fnstcw
iret
xor
mov
jae
pop
jg
cwtl
sub
fistps
cmp
repnz
jp
mov
sbb
and
sbb
mov
out
pop
imul
repz
inc
enter
pop
pop
into
jecxz
mov
stos
adc
sub
xchg
cmp
mov
dec
test
loop
cmp
xor
or
sti
shr
test
mov
cmc
stos
pop
sarb
loope
loope
cmp
jne
xchg
dec
addr16
aas
stos
gs
repz
test
dec
adcb
pop
inc
lock
xchg
andl
aaa
sub
xchg
cld
sbb
push
cmpsl
and
scas
mov
je
mov
dec
cmpsb
dec
xchg
mov
xor
pop
xchg
ret
ljmp
dec
stos
push
stc
adc
push
mov
add
movsb
cmp
daa
icebp
pop
icebp
faddl
cs
fisttpl
sbb
add
or
adc
sahf
aad
jne
cmpsl
movsb
jo
aad
idivb
mov
lret
out
add
push
jmp
push
aad
bound
mov
adc
cmc
push
mov
sbb
xor
bound
out
adc
jge
stos
cltd
out
popa
sbb
cmp
sbb
push
mov
jg
sbb
push
sbb
andl
repz
and
pop
add
in
fcmovu
pop
push
testb
lgdtl
sub
or
jbe
nop
hlt
adc
mov
adc
mov
xor
sti
add
pop
or
jp
cmpsb
adc
add
test
loopne
lods
cmc
push
jb
cwtl
outsb
mov
sub
cmpsb
movsb
movl
stos
adc
dec
popf
leave
push
inc
insl
int3
mov
xchg
movsb
std
lret
shll
inc
icebp
loop
sahf
pop
cmpb
test
dec
add
mov
outsb
dec
add
or
cmp
cli
jmp
in
lods
lret
add
pop
and
fldenv
jne
jecxz
mov
imul
int
test
pop
xchg
mov
xchg
push
add
scas
cmp
adc
roll
adc
gs
aas
imul
out
enter
das
fiaddl
jmp
adc
cmp
pop
in
inc
in
repnz
dec
mov
sub
mov
cmp
cmp
mov
mov
add
add
mov
fstl
fdivr
ss
stos
cmp
rcrl
sbb
fiaddl
push
outsl
std
fbstp
imul
xchg
fsts
in
mov
mov
lret
jle
and
xlat
xchg
repnz
dec
shr
or
xchg
gs
addl
ret
enter
inc
cli
xchg
lock
sub
loopne
ds
aaa
repz
lahf
stos
pop
sti
sbb
sbb
push
add
das
in
mov
jmp
test
jnp
jns
movsb
orb
xchg
push
adc
leave
sbb
xor
movsl
int3
add
cmp
es
rclb
loope
xor
mov
adc
jnp
sbb
add
fwait
adc
cld
mov
test
or
aad
decl
in
xchg
sbb
bound
mov
xor
in
push
push
scas
push
jg
mov
add
ljmp
sbb
lahf
enter
sbb
sbb
cmp
pop
lods
aam
xor
arpl
pop
and
andb
pop
mov
cltd
nop
cmc
shrb
pushf
jp
jbe
ja
xchg
adc
xchg
into
jle
lock
dec
int
xchg
cvtps2pi
ret
xor
push
mov
sbb
inc
imul
jno
add
mov
cli
inc
pushf
pop
mov
cmp
jecxz
addl
xchg
cs
mov
insl
fldcw
addr16
sti
mov
add
push
test
push
sar
push
outsl
push
mov
fistl
sub
jg
imul
sub
sub
push
in
inc
mov
jbe
mov
dec
dec
push
roll
sbb
sbb
adc
cltd
out
mov
out
and
xchg
sti
mov
xor
and
movsl
xor
adc
inc
push
sbb
repnz
leave
dec
mov
je
rorb
inc
repz
insl
pop
test
daa
imul
rcrl
pop
add
ja
jmp
aad
mov
mov
inc
ljmp
rorl
xor
mov
mov
mov
mov
lods
cmp
mov
dec
cli
sub
popl
mov
xor
and
aas
data16
outsb
je
push
enter
popf
loop
jne
mov
imull
pop
ja
push
mul
adc
fdivr
nop
push
hlt
mov
sbb
xlat
dec
stc
mov
jp
movsb
mov
adc
sbbl
into
and
mov
inc
inc
sub
sbb
ficoml
stos
jbe
sbb
fstps
fs
mov
arpl
aad
pop
mov
les
call
pop
lret
repz
pop
jae
xor
sahf
das
xchg
sbbb
adc
pop
xchg
dec
inc
mov
lds
lock
jp
mov
daa
out
sbb
sbb
rcll
jb
xchg
scas
pop
push
insb
mov
add
fmull
les
sahf
sbb
movsl
inc
fisubrl
pop
mov
jmp
mov
pushf
lock
inc
push
jnp
cmp
push
int
shl
flds
fs
dec
ss
hlt
lods
add
insl
sbb
scas
aad
es
and
inc
das
into
xor
pop
loopne
ljmp
xor
adc
pop
addr16
sub
pop
xchg
lods
popf
orb
inc
pop
adc
adc
ss
jle
inc
xchg
int
sub
adc
stos
adc
leave
jecxz
ss
loope
jb
xchg
sbb
sete
popf
push
bound
popf
sbb
jne
rcrl
and
jnp
aas
xchg
cmp
stc
shrl
rorb
lock
cmp
aad
mov
or
push
insb
test
mov
mov
js
push
insl
ret
dec
inc
mov
cltd
pusha
imul
fstpl
mov
adc
or
decb
pop
push
inc
pop
std
xchg
repz
and
xor
jge
ret
cmp
xlat
orb
or
fstpt
dec
or
cmpsb
pop
xchg
mov
out
mov
pushf
mov
fwait
mov
dec
int3
out
mov
arpl
rolb
arpl
mov
cld
push
loop
out
jae
hlt
dec
jo
shr
nop
stos
pop
lcall
mov
movb
inc
jmp
lcall
xchg
dec
shr
lods
add
js
cmp
fdivs
les
pop
fcomps
mov
jmp
push
inc
push
cwtl
dec
rcrl
xor
fsubl
lahf
test
jb
pop
dec
lahf
aad
cmp
cli
adc
pop
je
notl
lods
cmp
push
repz
dec
mov
gs
jg
lods
and
in
sbb
jnp
inc
pushf
lret
dec
push
leave
push
ret
cmp
jmp
ljmp
xchg
decb
and
xchg
cmc
popa
or
lret
jp
adc
mov
sub
dec
iret
fldcw
loopne
scas
fcompl
ret
add
aas
lea
push
iret
add
jbe
mov
mov
inc
cwtl
add
js
aaa
push
mov
fstps
lcall
mov
fdiv
fsub
mov
pop
js
pop
stos
scas
enter
pop
jb
loope
mov
imul
add
lret
xchg
inc
in
repnz
mov
ds
inc
lods
sbb
xchg
leave
out
dec
mov
sbb
insl
xchg
call
outsb
movsl
and
sbb
jp
ret
icebp
in
rorl
add
stc
outsb
mov
notb
add
dec
addb
xlat
or
mov
mov
and
mov
shll
leave
lea
push
rol
push
in
push
cmc
iret
dec
mov
pop
popf
sahf
sub
aas
mov
sub
lret
rolb
loop
push
dec
loope
stos
push
notb
lret
insl
fwait
mov
fucomi
or
aaa
insl
loopne
jns
fcoms
or
loope
pop
aam
dec
ficoms
inc
inc
out
adc
xchg
mov
sbb
les
fcompl
xchg
mov
cmc
dec
jg
jno
adc
ds
ss
shl
inc
jp
sub
mov
movsl
inc
ljmp
add
or
mov
repnz
into
lcall
mov
mov
lds
cmp
sub
fstl
outsl
mov
mov
js
ret
jl
push
cmc
mov
cmp
test
fmull
inc
std
jp
sub
test
mov
push
cwtl
in
xchg
dec
shrb
iret
in
inc
ja
clc
arpl
popa
jnp
cli
cmpsb
shlb
scas
adc
or
xor
scas
cmp
fistpll
dec
lds
test
repnz
mov
movsb
faddp
rcrl
int
test
lods
movsb
hlt
lret
call
pop
and
repnz
inc
or
jp
inc
stc
jno
sub
dec
leave
cmc
sysexit
mov
xchg
inc
add
loopne
lods
inc
mov
stc
xchg
mov
jl
push
pop
push
popf
sarl
mov
push
outsl
into
in
xchg
jno
test
shrl
push
test
pushf
lock
inc
dec
adc
xchg
into
jns
and
sbb
add
ja
xchg
xchg
adc
shlb
push
sub
push
test
imul
mov
dec
inc
test
and
cmpsl
mov
test
pop
xchg
bnd
add
adc
test
mov
rcrl
ja
sbb
jns
add
rolb
adc
sbb
rol
flds
jmp
adc
xchg
adc
dec
push
lahf
mov
sar
dec
test
jo
or
mov
add
int3
out
daa
adc
add
jmp
sbb
jo
or
cmp
xor
and
dec
subb
scas
stc
cmc
adc
insb
in
outsb
jae
fldenv
jb
cld
sbbl
sub
jge
clc
dec
clc
pop
aad
fst
cmp
std
inc
shlb
push
xchg
or
por
jp
sbbb
xor
fisubrs
fldenv
sub
test
adc
add
push
test
movsb
or
add
mov
jecxz
sub
pop
cmc
mov
lret
xchg
dec
mov
adc
push
icebp
pushf
inc
fs
mov
inc
scas
out
loopne
push
sub
push
cmpsl
jno
outsb
adc
push
mov
jns
in
sti
pop
pushfw
ds
ret
push
xchg
fnsave
add
push
dec
pop
adc
mov
cmp
lods
mov
ret
test
mov
ffreep
xchg
popa
add
jge
fldt
mov
pop
mov
inc
outsl
add
fsub
mov
stos
les
xchg
and
or
mov
jns
xchg
pop
xlat
sub
mov
pop
inc
subl
dec
popf
ror
dec
cwtl
push
jmp
cmpb
loope
inc
push
add
inc
jnp
xchg
or
mov
subb
push
mov
lea
stos
aas
imul
add
xchg
mov
push
adc
fildl
pop
adc
xor
mov
fcomi
aad
sti
sarb
movsb
clc
mov
or
push
in
push
mov
adc
cltd
es
je
jae
popf
icebp
or
dec
andl
pop
les
jge
int3
add
mov
and
movsb
cmp
stc
and
jns
divb
fwait
scas
enter
xchg
pop
adc
cmpb
shrl
mov
inc
sbb
sahf
xchg
lods
sbb
dec
int3
clc
adc
xor
ljmp
adc
cmp
cmp
push
je
xchg
jno
test
cmp
andl
sub
sub
stos
adcl
pop
jae
lahf
cmpsb
daa
loopne
jb
lret
dec
cmpsb
inc
lea
xor
xchg
ret
movsl
jbe
insl
movsb
pop
out
push
gs
movsb
or
cmovge
inc
movsb
subb
jbe
xor
add
pop
mov
cmpsl
sar
or
filds
cs
jle
cli
movsl
mov
out
or
or
repz
test
sahf
insb
cltd
and
das
sbb
in
cmp
or
xchg
in
aas
dec
addr16
and
loopne
sahf
mov
xchg
or
popf
cmovne
addr16
push
sbb
sub
aam
sahf
scas
jge
or
data16
enter
adc
xchg
iret
ds
es
and
and
pop
push
inc
stos
dec
mov
mov
xchg
das
pop
call
fbstp
dec
std
es
call
and
fcom
icebp
call
and
push
test
out
dec
mov
push
out
pop
inc
xchg
add
ficoms
aad
cltd
or
not
push
xchg
popa
mov
sbb
inc
pusha
mov
sbb
jns
pop
and
lret
mov
lahf
and
into
adc
jae
sahf
insb
cmp
sbb
ja
testb
xor
andb
pop
inc
jns
es
aas
call
rol
push
pop
jbe
ficomps
popf
xchg
scas
ds
mov
push
adc
fcoml
repnz
sbb
out
imul
out
mov
shlb
mov
ljmp
es
mov
loopne
sbb
xlat
lea
pop
and
xor
xchg
mov
movsb
and
lahf
and
shlb
mov
xchg
or
mov
inc
jl
loop
pop
lret
dec
adcb
jnp
cmc
jae
in
outsl
cmpsl
std
out
push
push
xchg
shr
and
std
jp,pn
mov
call
jl
cmp
popa
mov
push
cmp
pop
sub
daa
jae
subl
std
push
xor
cld
andl
int
xor
push
sbb
pop
mov
mov
dec
nop
pop
or
push
cmpsb
push
or
data16
in
pop
push
fldcw
mov
pop
add
sti
je
push
dec
adc
lock
inc
repz
mov
inc
lods
ja
xor
cmp
stc
or
sbbb
pop
out
xor
xchg
ja
sahf
sub
sub
insb
ds
push
push
jmp
repnz
mov
inc
mov
movsl
inc
lods
mov
idiv
cmc
in
repnz
inc
lret
mov
xchg
ljmp
inc
jl
dec
lahf
icebp
jl
mov
mov
lret
inc
pop
mov
aad
cs
int3
testb
dec
femms
into
push
js
fadds
mov
call
movd
xchg
aaa
out
jle
cmc
lods
loop
sbb
mov
sub
inc
lret
aas
pop
arpl
lcall
push
push
insl
fucomp
out
dec
xor
xor
fsub
adc
les
inc
sbb
hlt
sbb
shl
cs
and
mov
cmc
dec
popf
mov
and
ds
pop
mov
and
sub
dec
faddl
pop
aad
sbb
xchg
cmc
adc
inc
outsb
ret
je
xchg
fcomi
fsubrs
stos
mov
mov
leave
sbb
outsb
hlt
push
leave
ds
push
or
in
sahf
mov
jmp
gs
xchg
dec
repz
mov
in
pop
iret
sbb
and
fstpt
mov
je,pt
mov
add
sbb
mov
loope
pop
in
mov
test
mov
arpl
mov
out
jl
es
jg
daa
inc
icebp
shlb
cmpb
lret
daa
pop
mov
das
push
jo
and
mov
out
roll
adc
ds
sbb
mov
pop
sbb
sbb
imul
gs
bnd
push
mov
sub
out
mov
ficomps
jne
pusha
ret
mov
cmp
movb
ret
lret
mov
xchg
out
mov
add
sbb
push
arpl
add
out
xor
hlt
rcl
xchg
cwtl
sub
jb
fsubrs
adc
popf
cmp
in
lret
mov
lock
jecxz
and
and
sbb
test
jo
in
push
push
sub
pop
mov
mov
dec
jmp
add
mov
leave
mov
das
mov
into
mov
movsb
inc
jns
or
ret
stos
jge
jo
stc
dec
clc
in
lods
aam
bound
pop
leave
fdivl
in
xchg
testb
mov
in
cltd
sti
xchg
shrl
push
push
jl
psraw
sbb
sbb
outsb
sbb
int
je
xor
in
mov
push
inc
outsl
lea
mov
sbb
shr
clc
mov
leave
cmc
jno
lds
out
fistpl
dec
jge
xchg
or
cmp
imul
pop
in
addr16
pushf
aam
push
incl
in
movsb
mov
sahf
stc
lods
adc
jmp
dec
push
sbb
mov
mov
dec
mov
rcr
outsb
mov
cmc
sbb
fwait
out
jl
ficoml
dec
mov
fstpl
xchg
push
pusha
cmp
bound
xor
stos
loope
add
icebp
out
sub
mov
hlt
adc
inc
sub
shr
fwait
and
push
mov
push
mov
in
scas
and
pop
mov
loope
out
cmp
je
xchg
mov
or
jne
cmp
clc
cmc
push
daa
mov
push
mov
fldt
pop
adc
pop
jbe
in
pop
pushf
adc
cli
rcrl
out
data16
call
pop
out
aad
std
push
mov
stos
insl
movsb
mov
test
popf
pop
out
adc
fdiv
mov
mov
cmp
cld
xor
push
xchg
out
or
sub
movsl
jle
stos
or
cwtl
hlt
jnp
pop
out
mov
dec
push
stos
in
loope
xchg
adc
aas
popfw
adc
xor
xor
dec
jns
cmpl
mov
fcoml
lods
in
xchg
or
xchg
stos
fldt
mov
dec
outsb
sub
mov
fdivr
ss
mov
fstl
fldl
or
xlat
push
outsl
fiaddl
js
sbbl
fldcw
fs
mov
leave
inc
rcrb
mov
daa
cmp
sub
sub
sbb
dec
lret
pop
push
inc
xchg
sbb
stos
fsts
xlat
sub
jnp
call
ljmp
scas
outsl
push
pop
jg
or
shlb
mov
pop
adc
jmp
or
mov
pop
movsb
mov
movsl
ret
fucomp
les
pop
out
mov
ret
call
xor
orl
int3
mov
sbb
aad
loop
in
fwait
pop
sbb
sbb
ds
repnz
xchg
and
push
icebp
inc
sbb
int3
ljmp
cmp
test
imul
sbb
insb
aas
sub
test
hlt
or
popf
push
test
cs
jecxz
mov
std
xor
inc
push
or
dec
out
xor
dec
pop
movsb
ret
les
lcall
mov
xchg
cli
xor
inc
in
pop
pop
adc
or
notb
imul
jmp
lahf
mov
shlb
push
test
negl
inc
jg
int3
inc
push
in
or
add
jne
mov
sub
stc
movsb
mov
inc
fnsave
cmp
addb
dec
adc
mov
aaa
pop
notb
mov
flds
je
sub
and
adc
les
mov
mov
or
into
or
pusha
js
add
push
fcmovb
jmp
push
xchg
ja
notl
shll
sub
es
cmp
mov
mov
jo
loopne
orl
dec
mov
popa
dec
je
out
lods
dec
data16
xor
mov
push
pop
cmp
mull
jo
test
cmc
outsl
shr
orb
clc
aad
mov
fcoml
dec
ret
sbbl
divb
push
jg
lea
xchg
jmp
testl
push
push
adc
out
out
adc
loop
fimull
sub
jae
sub
jecxz
cmc
pop
sti
push
dec
push
and
fidivl
adc
insl
ljmp
stos
orb
push
mov
mov
add
fldpi
divb
loop
sarl
test
mov
mov
je
loop
clc
ljmp
dec
cld
idiv
insl
lea
idiv
insl
pop
cmpl
decb
or
fisttpl
lret
outsl
sbb
sbb
push
outsb
aad
sbb
pop
sub
out
or
pusha
sahf
add
repnz
fst
sub
sar
and
pushf
das
adc
clc
cmp
shl
dec
mov
pop
lods
pop
add
adc
inc
pop
push
decl
aas
fnstcw
sub
ljmp
sbb
rorl
fists
jns
iret
xchg
in
sbb
inc
xchg
mov
adc
sbb
shl
pushf
mov
jae
sbb
je
loopne
cwtl
movsl
pushl
mov
sub
add
fnstcw
mov
and
mov
add
std
test
rcrb
mov
xor
mov
xchg
and
adc
call
xchg
rclb
dec
popa
inc
add
arpl
mov
aas
fnstsw
jmp
dec
mov
mov
clc
pop
and
dec
insb
xchg
jo
cltd
outsb
jle
pop
dec
gs
lock
mov
fistpll
gs
ljmp
rcrl
dec
lcall
in
push
mov
push
into
mov
pop
add
and
loopne
mov
xchg
pop
xor
loope
jb
mov
insl
xchg
les
inc
sti
fiaddl
inc
sti
mov
push
stos
lds
xor
lahf
outsl
jne
adc
pop
mov
aaa
mov
mov
sub
push
shll
ds
push
mov
lock
mov
xlat
jae
stc
or
lret
cwtl
iret
jmp
lock
or
push
dec
insb
lcall
lahf
push
mov
in
add
ret
inc
jle
dec
mov
and
out
xor
inc
mov
add
aad
cmp
add
outsl
leave
jns
inc
popa
xchg
out
inc
cmc
cmp
add
push
imul
or
sub
xor
cmp
stos
popf
bound
mov
aas
jbe
iret
add
mov
out
ja
inc
aam
inc
pop
loop
xchg
push
into
and
push
rcl
repnz
enter
push
imul
cmp
push
jge
cmp
inc
jns
add
mov
lret
std
add
and
pop
jb
stc
gs
cmpsl
gs
in
cmp
push
push
fnstsw
jmp
mov
fildll
ljmpw
adc
dec
addl
jle
sbb
test
in
pop
shrb
lock
shl
xor
mov
dec
ret
fstpl
fwait
cld
jecxz
sbb
rcr
fimull
cwtl
fdivp
movsb
orl
test
repnz
xchg
rcll
mov
mull
add
movsl
int
sbb
cwtl
push
cmp
mov
je
sbb
dec
mov
in
pop
xchg
inc
sbb
repnz
mov
pop
push
jge
add
test
sar
xchg
gs
mov
cli
adc
cmpsb
movsb
cmpsl
into
dec
enter
and
jg
data16
mov
enter
subl
adc
loop
je
call
sarl
cmp
pop
add
pop
xor
xchg
mov
jb
mov
inc
jne
call
pushf
adc
jnp
add
jge
pop
std
sub
shll
xchg
push
pop
aas
inc
aad
dec
or
jmp
mov
mov
add
stos
fcomip
scas
sub
nop
or
jmp
sub
pop
popf
int3
fwait
sbb
sbb
fnstcw
test
mov
cmovle
test
jecxz
dec
out
mov
inc
sbb
mov
das
arpl
pop
pop
sbb
mov
pop
ljmp
lock
inc
xor
es
jns
mov
sub
loopne
sbb
bound
push
cmp
jno
lcall
xor
int
xchg
loopne
mov
pushf
lock
imul
loop
in
push
sbb
adc
jge
shrd
sti
jbe
scas
rol
adc
bound
ljmp
test
mov
pop
inc
int3
mov
test
cmpb
lcall
xchg
adc
lods
cmp
cmp
out
in
cmc
cmp
nop
mov
sbb
mov
mov
pop
fpatan
mov
pop
cwtl
faddl
jg
cmp
int3
jb
sbb
jp
orl
pop
aas
test
cmp
xchg
sarl
xchg
lods
xor
ljmp
xchg
scas
or
in
scas
repz
push
inc
ja
cmp
call
add
inc
repz
push
test
pop
aaa
jb
daa
xchg
push
xchg
adc
push
mov
outsl
add
sbb
imul
sbb
mov
aad
xor
xor
mov
clc
pop
outsb
xor
xchg
clc
out
sbb
in
push
cmpsl
pop
mov
mov
mov
add
mov
mov
xchg
cmp
and
push
or
mov
js
ret
outsb
jbe
sbb
dec
jbe
inc
and
pop
mov
mov
mov
addr16
xor
outsl
in
xchg
movaps
mov
mov
jae
add
faddl
sub
sbb
dec
jbe
cmp
sti
setl
je
sub
mov
mov
jmp
push
sarb
sbb
sub
sub
movsl
gs
shl
push
cmp
pop
insb
out
jns
loopne
bound
jl
ficoms
jno
adc
mov
and
dec
arpl
or
lret
or
jbe
sub
fidivrl
ds
cmp
add
in
and
test
sbb
mov
in
fs
mov
stos
pushl
dec
daa
ljmp
fsubl
ja
xchg
addb
mov
cmp
je
nop
pop
push
xor
ret
xor
pop
adc
dec
xchg
inc
xor
and
adc
rorb
pop
mov
cltd
shll
loopne
repnz
mov
jg
pop
or
xor
ja
daa
cmp
add
push
fnsave
add
add
mov
sti
lret
xchg
stc
xchg
sub
dec
mov
test
mov
fsubrl
int3
inc
int
data16
xchg
add
in
lds
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
push
mov
add
sub
mov
addl
pop
push
popl
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
imul
mov
add
jmp
jae
pushw
sub
inc
dec
push
adc
add
das
cmp
sub
mov
cli
popa
fistl
lds
das
imul
stos
jl
inc
inc
and
mov
add
ss
arpl
daa
aam
adc
adc
das
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
movsl
jo
pop
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pusha
je
jno
ret
popf
sbb
fwait
or
or
movl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
loope
and
sti
mov
sbb
call
and
pop
mov
addl
inc
push
ret
arpl
inc
ss
mov
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
out
out
outsb
xchg
mov
mov
mov
push
call
mov
jmp
jnp
lods
repz
push
push
pop
out
sub
mov
push
adc
rorl
cmp
sbb
les
sahf
dec
and
aaa
ror
xchg
fists
mov
cld
lret
loope
pop
cltd
mov
mov
stos
sbb
mov
subl
shlb
ffreep
lret
clc
dec
push
cmp
jae
xchg
pop
xor
sbb
out
add
popf
ror
pop
mov
and
mov
leave
xor
sarb
rclb
dec
pop
aas
out
and
push
mov
mov
sti
dec
je
inc
and
adc
pop
dec
aad
das
roll
ficoms
jno
pop
pop
dec
les
roll
xchg
rolb
xchg
ffreep
inc
sbb
push
mov
fucomip
mov
ret
mov
aas
fdivp
inc
addr16
dec
jle
cmc
pop
jge
mov
mov
pop
mov
std
adc
mov
mov
dec
andl
loop
in
nop
repz
dec
pop
lcall
std
adc
adc
mov
sbb
mov
mov
add
and
add
adc
ret
loope
mov
push
xor
test
pop
mov
sbb
or
add
mov
cwtl
fisttpll
and
out
add
mov
cmpsl
ret
cwtl
push
insb
jp
lea
mov
int3
cmp
sti
ja
push
not
fldenv
inc
mov
outsb
mov
bound
pusha
iret
stos
js
push
in
bound
imul
adcl
jmp
add
lea
push
pop
out
aaa
leave
xchg
jo
and
push
cli
jg
jl
imul
loope
hlt
xor
je
inc
mov
js
rcl
popf
and
mov
mov
jle
sbb
lea
clc
lea
clc
mov
leave
subl
mov
divb
adc
enter
push
push
sub
inc
loope
loopne
adcl
mov
sbb
jp
scas
jmp
or
cwtl
addr16
pop
loopne
fcomps
in
loope
push
add
in
add
inc
pop
loopne
rcrb
shr
xor
jmp
mov
popa
inc
sbb
mov
mov
loopne
jnp
insl
inc
cltd
frstor
sbb
fbld
sarb
mov
xor
pop
and
test
xor
cld
out
add
test
pop
into
xor
cs
sbb
cmp
jbe,pt
sub
sub
pop
lret
cmc
mov
sub
sbb
fnstsw
cmpsl
inc
nop
stos
adc
xlat
aas
mov
les
cmpsb
xchg
xor
inc
cmp
and
nop
jne
mov
or
lods
lea
shrb
mov
push
cwtl
cltd
psrad
cmp
sbbb
inc
lcall
fimuls
out
lret
ds
push
loopne
bound
imul
sbb
out
test
xorl
inc
in
push
lock
repnz
lret
lret
mov
sbb
ret
dec
movsb
xchg
dec
enter
mov
daa
mov
imul
roll
lcall
inc
fidivrs
cld
imul
jb
lret
push
jae
nop
inc
fdivp
enter
repnz
out
lret
jg
out
out
xchg
sub
sbb
ret
dec
movsb
xchg
dec
jb
out
out
lcall
sub
mov
cwtl
inc
dec
and
sti
cltd
ds
jo
lret
mov
push
push
cmpsb
mov
push
cli
shrb
gs
loope
cmc
xchg
sbb
stos
mov
dec
adc
xchg
call
rorl
cmpl
in
xchg
mov
jg
jns
mov
add
pop
aaa
adc
dec
sub
and
std
xor
testb
adc
xor
mov
je
int3
cld
bswap
cmpsb
nop
sub
mov
xchg
mov
out
je
dec
enter
ficoml
repnz
push
xor
rcrl
xor
cli
ss
push
pushf
jnp
cli
cmp
dec
dec
jmp
jae
mov
repnz
push
add
push
repnz
jno
pop
int
lret
fstl
inc
push
repnz
inc
xchg
xlat
cmp
mov
rclb
outsb
fidivrs
test
imul
stos
jnp
mov
cmc
inc
xor
jae
and
loope
mov
mov
sahf
das
lret
loope
xchg
call
icebp
mov
adc
insl
pushf
imul
shlb
ret
stc
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
inc
call
repnz
add
aam
cmp
ret
dec
inc
cmc
mov
dec
add
mov
dec
push
mov
jns
xchg
repnz
in
mov
inc
xlat
repz
or
fisubs
sub
add
mov
mov
jmp
xchg
dec
or
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
fstp
pop
add
fstpl
loopne
pop
add
jle
pop
inc
orb
pop
mov
or
scas
xchg
cmp
add
inc
jle
outsb
fadds
lea
gs
adc
mov
inc
lcall
or
scas
sahf
cmp
add
inc
xchg
dec
outsb
fadds
jecxz
or
scas
pop
cmp
add
inc
mov
outsb
fadds
movsl
scas
add
es
add
inc
out
dec
outsb
fadds
ss
add
bound
add
inc
or
fadds
add
out
cmp
add
inc
push
dec
outsb
fadds
mov
cmp
add
inc
and
fadds
sbb
add
ss
add
inc
push
dec
outsb
fdivs
mov
lcall
cld
jae
and
pop
dec
scas
mov
add
mov
test
std
or
dec
push
inc
movsb
sti
mov
shr
push
add
fcmovbe
mov
in
push
dec
jge
insl
xchg
pop
addr16
out
lds
dec
int
xchg
icebp
shll
sub
mov
lods
insb
dec
mov
adc
int3
stos
xlat
inc
cwtl
jno
shufps
das
jns
mov
mov
dec
les
outsb
sub
inc
jmp
jmp
push
je
inc
fisttpl
add
jge
repz
repnz
and
cmpsl
jmp
pop
lds
mov
out
cltd
pop
push
movsl
cwtl
rorl
cmp
insb
lret
mov
dec
jb
and
mov
inc
jnp
dec
mov
xchg
icebp
cmpsb
loop
shl
dec
pop
hlt
sbb
cld
push
add
inc
sbb
mov
mov
popa
xchg
mov
pop
push
mov
ret
adc
mov
and
out
scas
xchg
mov
popf
xor
sahf
xchg
pusha
out
scas
stos
xchg
daa
imul
out
push
pop
das
orb
mov
aaa
repnz
ds
inc
xor
adc
je
jmp
jle
mov
jae
cwtl
or
lock
jmp
xchg
popa
ljmp
divb
hlt
pusha
xor
lret
jnp
sub
pop
push
subl
aaa
push
addr16
or
and
scas
inc
mov
and
pop
aaa
lret
push
movsl
add
and
mov
loopne
xor
jp
jle
xlat
dec
mov
popf
mov
shlb
mov
push
into
pop
push
pusha
outsw
lods
mov
push
out
lds
jecxz
xchg
xchg
jno
movsl
in
loope
clc
sub
inc
add
mov
dec
dec
clc
movl
mov
loop
and
push
pop
dec
sarb
aaa
and
mov
jmp
outsb
out
fisttps
mov
jmp
arpl
mov
push
pop
cli
jg
or
push
xchg
test
pop
sti
jo
mov
cmpsb
lods
push
push
test
decl
mov
fbld
les
and
insl
stos
imul
ja
adc
int
push
shr
stos
sub
arpl
jb
mov
cld
adc
adc
shll
inc
mov
aam
call
sti
xor
orb
test
hlt
mov
sbb
push
je
frstor
jmp
mov
cwtl
fistl
imull
or
inc
cmp
pop
mov
jp
adcb
test
push
fnsave
inc
fsubrl
aad
xrelease
mov
mov
adc
add
xchg
lods
fcomp
outsb
jp
pop
arpl
push
xchg
cmp
cwtl
jp
lds
jp
pop
movsb
nop
aas
outsl
scas
test
sub
and
insb
mov
ja
cmc
mov
inc
xchg
std
jle
jp
mov
xor
xor
jmp
je
mov
push
arpl
jecxz
dec
pmuludq
jno
xor
push
ss
shlb
rclb
dec
aaa
pop
aas
sti
popa
push
cmp
int3
dec
push
sub
movsb
or
es
dec
adc
xor
mov
out
sub
jecxz
pop
pop
dec
adc
cmpsb
and
cmp
sbb
and
mov
fisttpll
int3
sbb
push
outsl
xor
pop
sbb
mov
frstor
sbb
cmp
outsl
lock
jle
mov
push
mov
cwtl
repnz
rolb
int
ret
pop
xor
ror
pop
push
loop
lds
xchg
cld
lret
fwait
xor
das
enter
dec
inc
inc
and
int3
mov
push
xchg
shl
orb
push
xor
mov
mov
push
pop
ficoml
push
and
inc
jno
daa
mov
das
xor
mov
and
shrb
cmp
inc
xlat
lds
xchg
lahf
cli
mov
sbb
add
test
int
xor
add
mov
insl
adc
daa
add
add
call
xor
lcall
outsl
mov
adc
jae
adc
or
mov
cld
push
add
dec
xor
outsl
sbb
decl
in
add
and
cmp
xchg
push
mov
and
jmp
imul
xchg
push
xor
inc
xchg
sub
in
enter
imul
sbb
cli
sbb
sub
in
arpl
add
and
rcrl
inc
mov
mov
mov
mov
mov
xchg
pushf
mov
mov
pop
pop
pop
sarb
and
rcll
pusha
jecxz
push
popf
dec
push
in
push
cld
add
sbb
std
popa
cmc
mov
lret
xor
xchg
outsl
add
pop
add
js
int3
sub
xchg
push
jnp
mov
shlb
pop
fs
xchg
stos
lahf
sarb
push
and
cs
fmull
dec
mov
test
sub
call
test
bound
xchg
cmp
mov
out
cmpsl
or
jecxz
aam
sti
stos
stos
add
adc
mov
push
jb
jo
jmp
sub
cwtl
std
sbb
or
push
push
sub
lcall
bound
mov
add
fstpl
shrb
mov
add
xchg
in
add
pop
xchg
lods
faddl
imul
aas
mov
flds
jp
or
push
xorb
add
nop
inc
mov
sti
mov
pop
call
adc
popa
dec
insb
pop
fdivrp
pop
xor
mov
push
or
shll
pop
mov
lods
hlt
and
into
or
sub
sub
cmpsl
dec
je
add
mulb
test
fcomi
loope
lret
sub
and
mov
mov
pop
sahf
lahf
jmp
aas
int3
dec
add
and
lret
jns
jecxz
inc
insl
push
jnp
gs
pop
stc
and
mov
aas
mov
aaa
cmp
push
xor
mov
jmp
and
repnz
test
mov
fwait
rcl
cmpsl
imul
aad
xchg
push
add
mov
mov
loop
sub
rcrb
popf
adc
fcoml
out
xchg
test
test
loopne
pop
fmuls
fdivrs
xchg
cmp
push
push
lahf
jle
int3
lahf
lret
push
and
mov
jnp
jae
inc
jl
out
sbb
and
xlat
mov
push
js
push
inc
sbb
pusha
stos
cs
mov
jl
out
test
stos
popf
or
aam
adc
push
into
test
shll
ds
jg
mov
test
adc
adc
xor
ljmp
je
jmp
pop
aas
mull
pop
aam
call
addb
lods
into
sub
sub
imul
sbb
jl
xlat
mov
pop
cmp
mov
mov
jle
mov
mov
jge
test
stos
shlb
fcmovu
bound
cs
cmovl
enter
jne
jge
cmp
add
in
xchg
arpl
out
mov
mov
cs
cli
movsb
lahf
jnp
push
test
cmc
aad
cmp
mov
call
sub
fiadds
jge
in
in
inc
fbld
outsl
add
sti
adc
std
pop
add
xchg
xchg
sbb
call
cmpsl
xor
xchg
mov
or
push
je
mov
or
pusha
xorl
mov
in
jge
fldenv
dec
lock
stos
popf
push
scas
inc
sahf
mov
pop
xorl
jns
mov
movsb
adcl
in
jae
aad
js
xchg
cli
mov
outsb
pop
jl
sbbb
sbb
les
lds
out
loope
xor
cltd
dec
mov
jns
fwait
inc
push
xchg
dec
jnp
mov
dec
ss
lret
jne
mov
xchg
add
mov
insl
xchg
add
push
add
repnz
movl
imul
stos
and
mov
mov
xorb
and
xor
gs
sti
lock
testl
das
sub
cmp
jle
in
movsl
inc
adc
mov
movsb
jno
cmp
fdivl
shll
movsb
sub
dec
push
xchg
sub
stos
mov
aas
xchg
jbe
out
aam
sbb
je
cmp
or
insb
mov
in
mov
adc
pop
inc
push
jae
jb
ja
cltd
cltd
adc
movsl
nop
mov
cmpb
shr
sub
pushf
mov
cmc
push
addr16
mov
jne
mov
scas
jecxz
cs
jg
jb
shlb
test
mov
test
rcll
jnp
mov
addr16
xchg
mov
xchg
pop
loop
or
inc
mov
and
or
jb
dec
jo
mov
add
and
or
xchg
push
insl
push
xor
mov
int
jae
daa
ss
jge
add
divb
mov
cld
jnp
add
loopne
arpl
iret
fwait
js
rclb
loope
push
iret
add
sbb
scas
cmp
pop
mov
in
cmp
inc
mov
scas
push
or
adc
insl
addr16
pop
sarb
cwtl
movsb
mov
jp
cmp
mov
ret
outsb
xor
push
xchg
sub
ja
lret
cmp
pop
dec
lods
push
adc
shrl
adc
cmp
jbe
dec
pop
enterw
jb
fdivrs
adc
stos
outsb
add
cmpsl
ljmp
sbb
adc
cwtl
sahf
cmc
addl
and
mov
pop
jne
shld
loopne
in
sub
sub
divl
and
sub
inc
inc
jno
cld
in
js
mov
push
push
mov
xchg
push
sbb
sub
mov
or
sbbl
sbb
xorps
sbb
and
mov
cld
popa
cmp
iret
jle,pn
inc
push
inc
adc
add
inc
shll
add
mov
pop
push
pop
mov
in
pop
inc
ss
dec
iret
cmp
xchg
cld
or
sub
push
mov
jl
xorb
add
cs
lcall
cli
or
lcall
jmp
ffree
shll
les
dec
cmpsl
sub
pop
das
sub
jo
in
jmp
sahf
test
xlat
sbb
inc
and
mull
movsb
je
or
dec
push
mov
iret
mov
aas
mov
mov
movl
rorb
pop
sahf
push
popa
test
sub
imul
shrb
pop
cwtl
mov
or
add
inc
sub
cmp
xor
lret
mov
jb
xor
fildll
pop
mov
push
ljmp
and
rclb
pop
loopne
adc
mov
jmp
es
aam
push
xor
add
bound
in
cmc
bound
and
std
and
popf
mov
ss
add
icebp
mov
lods
mov
jg
bound
shlb
icebp
xchg
cmp
into
xchg
pusha
push
popf
dec
inc
sub
dec
pop
cli
sahf
fbld
and
push
fcoms
jmp
test
push
push
and
xor
cmp
pop
das
mov
dec
cmp
iret
cmpsl
sbb
mov
push
pop
xor
mov
imul
ret
repz
cmc
outsb
xchg
lcall
and
cld
jecxz
sahf
mov
cmpsl
mov
in
cmp
mul
adc
in
sub
sub
popa
xchg
cmc
sbb
xchg
or
xorb
jns
jne
testb
add
add
push
out
rorb
les
idivb
push
aam
mov
push
lea
add
mov
mov
and
xchg
in
jae
xor
xchg
mov
lods
test
aaa
push
dec
xchg
xor
bound
push
rclb
cmpsb
jns
jecxz
jl
mov
sbb
call
sub
jge
dec
fadd
aam
push
or
sbb
or
and
sbb
and
repz
insl
addr16
xchg
xlat
divb
ret
mov
sub
add
adcb
jp
jge
or
out
push
and
dec
sarl
jle
sbb
mov
pop
pop
pop
mov
mov
loop
add
adc
icebp
or
cmp
fimuls
mov
pop
stos
mov
sbb
cmp
pop
cmp
mov
cltd
push
jno
insb
push
add
fsubl
mov
mov
stos
inc
popf
and
jge
arpl
std
insl
pop
lea
mov
xchg
sbb
xor
dec
push
out
ljmp
dec
xchg
iret
aam
lock
or
and
jmp
pop
jo
cwtl
push
subb
inc
sub
xchg
sbb
cmp
xchg
mov
cmp
pushf
cmpsl
arpl
addb
xchg
jbe
adc
imul
add
inc
jmp
push
and
js
rcrl
jne
loop
loope
js
dec
or
pop
iret
lds
stos
cmp
outsl
outsl
adc
lock
repz
ja
mov
daa
or
mov
pop
and
jge
sbb
xchg
xor
divl
aam
pop
in
mov
jb
jbe
xchg
mov
in
jmp
loope
cmp
inc
add
jge
or
push
lea
insl
lea
jnp
sub
mov
mov
adc
push
loopne
outsl
test
mov
roll
adc
and
decb
mov
fistps
add
mov
in
cs
mov
and
sub
ss
insb
dec
push
subb
cmc
sbb
pop
arpl
mov
xchg
cmpsl
loopne
xor
adc
push
loope
mov
push
ja
enter
and
mov
mov
cmp
hlt
dec
cmp
ret
xchg
push
pop
adcb
stos
in
mov
jl
jp
sbb
jg
fldenv
test
push
cltd
mov
stc
mov
jb
mov
dec
and
mov
ljmp
lret
sub
rcll
iret
dec
adc
xchg
ja
xchg
xchg
inc
dec
or
push
in
insb
out
cmp
in
ljmp
cmp
inc
in
int
push
cmc
imul
stc
addr16
cltd
pop
pop
sub
sub
jmp
and
iret
jecxz
push
inc
cld
sbb
fbstp
pop
xchg
xchg
pop
pop
inc
adcb
xor
std
push
fcom
lock
sbb
movsb
or
in
mov
push
lcall
inc
lock
sub
and
in
cmp
mov
xor
push
nop
pusha
xchg
in
lods
cmp
cmp
fmuls
mov
jge
test
lcall
repz
mov
pop
and
aam
movl
lods
sub
out
jge
xor
mov
lods
push
sahf
pop
fwait
inc
dec
add
fnstcw
shlb
and
dec
lcall
int
push
add
je
adc
inc
fcmovnu
in
leave
inc
sub
fndisi(8087
jl
and
hlt
ficoml
pop
lcall
out
enter
jecxz
pushf
inc
fbstp
lcall
push
stc
push
mov
xchg
fiadds
out
mul
pop
add
or
stc
sahf
int
jb
insl
mov
in
popa
in
xchg
push
pop
fdivs
das
push
add
push
add
sbb
dec
lcall
sub
shlb
or
sar
insl
jg
dec
outsl
dec
push
insl
repz
data16
xchg
int3
hlt
sub
aad
dec
gs
jnp
mov
sti
cmpsb
insl
insl
xor
cs
cmp
lea
xor
stos
mov
adc
or
fst
push
jno
imul
cs
iret
jne
and
xchg
push
repz
popa
fs
pop
clc
add
xchg
ret
adcb
jne
ja
jl
stos
and
adc
clc
or
jmp
add
lcall
mov
scas
add
dec
mov
dec
xor
popa
inc
xor
stc
outsb
mov
in
pop
lods
dec
sub
mov
fnstenv
cmpl
out
mov
or
lds
and
inc
dec
and
lods
fmull
xlat
scas
mov
or
std
mov
nop
and
movsb
idivb
pop
xorb
or
xchg
add
pop
mov
outsb
and
loopne
xchg
mov
movsb
shl
pusha
fbstp
pop
inc
add
mov
sub
fldl
lret
lcall
or
mov
xchg
cs
outsl
and
testb
adc
mov
add
pop
jns
iret
shlb
xor
cmpsl
insb
ret
mov
xorl
cwtl
std
sbb
int
cli
ret
add
pop
adc
sub
dec
cmp
push
adc
cmp
cmc
test
loop
inc
dec
dec
clc
movl
jle
inc
sarl
pop
push
xchg
push
ret
inc
lahf
aaa
jg
insb
subl
adc
pop
inc
sub
xor
sbb
mov
shrl
test
lea
xchg
sbbb
push
adc
popa
in
cs
movsl
mov
sbb
insb
sbb
fs
adc
jno
jne
stc
sub
add
aaa
and
mov
cltd
or
pop
inc
push
je
pusha
fisubrl
cmpsb
cmp
cmp
inc
xchg
aad
out
inc
aam
push
cmp
test
fwait
xor
xor
lret
or
fldl2e
cwtl
add
movsl
lock
adc
jecxz
iret
pop
mov
out
out
xchg
pop
xchg
and
dec
rcr
jle
pop
rdpmc
fwait
cmp
js
imul
inc
and
icebp
into
xor
imul
cli
inc
jecxz
xchg
into
mov
xchg
or
pop
jb
sbb
jbe
stc
mov
insb
sbb
out
mov
jbe
jl
add
mov
cwtl
orl
mov
int3
icebp
mov
enter
pop
jl
or
add
pop
cltd
sahf
push
outsl
mov
mov
jb
into
in
or
mov
inc
outsb
fs
mov
hlt
mov
mov
in
repz
out
repz
sbb
pushf
loopne
fsubl
push
mov
cli
bound
mov
cmpsb
mov
lcall
sarb
push
leave
dec
pop
jmp
pop
ss
adc
push
mov
imul
mov
jo
insb
loope
xchg
jge
jl
cmp
cli
push
pop
or
mov
sub
out
outsb
fstpt
xchg
hlt
out
aaa
ret
xchg
enter
push
inc
sub
xchg
sub
repz
push
orl
mov
in
aas
mov
sub
es
popa
call
out
xchg
add
sbb
test
lods
loope
and
sbb
sub
mov
jle
outsl
pop
adc
sub
test
stos
fadd
or
notb
in
dec
mov
mov
dec
stos
sub
lret
mov
int
je
clc
rclb
loope
out
xchg
or
fistpl
shrb
push
cmp
mov
orb
notb
mov
pop
and
add
addr16
in
and
adc
mov
jbe
push
mov
jmp
mulb
bound
jl
xor
aas
enter
jl
push
outsb
xchg
int3
push
xchg
adc
mov
in
mov
loope
data16
arpl
je
jns
lods
sahf
ja
pop
inc
addr16
lcall
xchg
push
arpl
adc
bound
fstl
mov
ret
dec
pop
mov
and
fnsave
gs
bound
rclb
add
cmc
insl
mov
lock
xchg
adc
loopne
fstps
test
dec
stos
xchg
inc
dec
mov
jo
bound
lds
fwait
or
xor
stos
mov
int
outsb
mov
adc
inc
repz
das
mov
and
cli
hlt
dec
sbb
pop
fiaddl
roll
inc
xor
or
fdivs
sub
hlt
daa
sbb
es
sub
clc
fstps
fnsave
out
inc
icebp
xchg
inc
adc
jns
aad
cltd
jp
fs
test
push
int3
mov
sbb
popf
dec
iret
xchg
in
js
jnp
dec
ficompl
mov
cltd
lret
out
sarb
mov
jnp
lods
pop
pop
push
gs
fs
adc
popa
lods
add
jb
cltd
xchg
cmp
cld
mov
add
push
inc
push
addb
dec
mul
es
ljmp
mov
fiaddl
and
pop
and
mov
cwtd
fnstcw
shrb
dec
mov
pop
xchg
sub
sbb
jb
jnp
in
jl
push
pop
mov
push
push
cs
lods
cmp
idiv
adc
scas
push
ror
ja
push
hlt
dec
mov
aaa
lret
xor
nop
push
daa
push
pop
adc
add
mov
in
stos
or
sbb
cld
inc
sub
int3
roll
sub
mov
push
fmull
sub
sub
dec
pop
mov
jne
jmp
scas
adc
cmp
ljmp
and
push
ret
mov
and
cwtl
into
jecxz
pop
mov
sbb
pop
repnz
inc
push
pusha
jecxz
enter
repnz
xor
jbe
out
int3
push
stos
js
rorl
repz
pop
or
xor
movsb
and
mov
mov
test
mov
fs
in
push
push
cmp
hlt
mov
stc
or
jns
pop
je
cwtl
inc
aas
std
fmuls
lods
cmp
push
push
xchg
sti
mov
push
cltd
add
jg
mov
xchg
outsl
in
xor
jb
xchg
and
or
mov
jmp
in
mov
jbe
push
xor
insl
cmp
pop
inc
imul
pop
cmc
mov
add
pop
pop
sbb
mov
nop
push
lds
sbb
arpl
cwtl
sub
lock
xor
bnd
push
inc
test
mov
dec
test
lods
js
sub
push
dec
sbb
imull
mov
std
push
enter
jnp
mov
mov
jns
jbe
sti
mov
mov
imul
imul
mov
insb
enter
shl
sarl
jge
rclb
sub
add
jg
out
bound
decb
shll
mov
iret
push
sub
arpl
nop
lea
mov
cmpl
daa
inc
pop
xor
data16
pop
xor
jb
jbe
lret
inc
lock
dec
jae
andb
popa
sbb
leave
int3
cmp
push
adc
push
test
in
xor
mov
push
outsl
jge
xchg
cmp
shll
out
or
sar
call
int
mov
shll
xchg
pop
lods
call
inc
icebp
xlat
dec
lods
push
aad
mov
sbb
adc
inc
sub
mov
push
and
mov
push
mov
adc
mov
insb
push
push
cltd
jmp
cmp
fcmovnbe
stc
and
movsb
add
in
add
popa
jnp
sbb
sbb
jo
mov
out
push
inc
addr16
in
pusha
adc
pop
push
dec
mov
dec
test
cmp
adc
sub
arpl
sbb
dec
in
popa
leave
aas
sti
cwtl
mov
add
xor
push
in
mov
adcl
aad
mov
rorb
or
dec
pop
sbb
jl
scas
movsl
xchg
inc
mov
add
add
addl
lcall
mov
repz
jmp
cmp
mov
lods
xor
mov
inc
out
jnp
pop
jo
and
test
or
mov
sbb
sub
pop
es
push
lods
mov
push
fistpll
pop
les
mov
cwtl
xchg
adc
lahf
ljmp
dec
mov
jno
sub
push
push
insb
or
popa
mov
inc
jae
cltd
dec
jns
mov
mov
ret
xor
sbb
insl
dec
test
imul
testb
repz
imul
pop
sahf
dec
lret
pop
fdivrl
addl
push
jns
push
sbb
pop
adc
out
and
jmp
xchg
addl
std
shll
jo
ret
ret
fs
mov
hlt
push
out
rolb
xor
and
xor
mov
xor
testl
inc
mov
xor
xlat
shll
les
or
lahf
and
gs
sti
insl
mov
shll
repz
jbe
js
jge
pop
pop
and
int3
and
sub
and
cld
ret
aaa
mov
push
and
loop
sub
cmpsb
js
in
inc
mov
sub
jp
imul
push
jo
bound
cmpsb
in
in
ret
lds
jge
jge
inc
cmp
adc
add
aas
clc
or
enter
fisttpll
movsl
shrl
sti
rorb
jle
sbb
frstor
xchg
adc
out
mov
and
xlat
jge
jmp
sbb
mov
pop
jmp
repz
xor
sub
sub
lcall
fildll
nop
inc
push
pop
and
ljmp
or
rdpmc
push
mov
pushf
lods
cli
movsb
cltd
mov
sub
adc
push
in
movsb
xchg
dec
mov
or
add
rcrl
movsb
scas
cwtl
movsl
int
aad
inc
xor
and
je
xchg
mov
pop
xchg
dec
cld
push
lahf
mov
sbb
pusha
ret
fwait
push
jl
pop
movsl
pop
xchg
adcb
xor
and
sbb
inc
arpl
dec
xchg
in
mov
ljmp
repnz
adc
lock
xchg
mov
jmp
mov
mov
mov
cs
fimuls
fmuls
xchg
stc
aam
movl
or
xorl
lret
loopne
jns
aad
and
and
stc
xchg
out
dec
mov
repz
aaa
out
jecxz
sbb
data16
pand
ljmp
addr16
roll
scas
and
outsb
or
push
lcall
insb
dec
sub
dec
or
push
fcoml
cmp
xor
mov
sbb
add
cmp
js
insl
dec
sbb
and
inc
jmp
sub
cmpsl
dec
or
cmp
mov
imul
iret
push
jo
roll
adc
lret
mov
mov
fadds
or
scas
addr16
xchg
mov
jno
out
inc
jg
add
lret
jle
test
and
jp
js
std
frstor
sbb
stos
push
xorl
test
xlat
jno
popa
cmp
pop
cmp
jno
ror
jle
or
adc
test
pop
popf
jp
push
sahf
dec
and
stos
cmp
mov
into
jecxz
fwait
pushf
mov
inc
mov
sub
jle
jae
xchg
fsubl
push
lods
push
xchg
dec
adc
lret
sbb
adc
adc
mov
adc
xchg
outsb
jnp
add
daa
sahf
movsl
fidivrs
push
out
lret
fistl
in
idivb
daa
imull
pop
repz
mov
aaa
out
sub
pop
jecxz
mov
shlb
inc
jnp
scas
jo
mov
xorb
add
hlt
jne
mov
add
addr16
rorb
lds
sbb
pushf
ds
xor
lock
sbb
xorl
mov
stos
mov
repz
jno
add
aam
mov
insb
pop
outsl
push
xor
jnp
popa
shrl
sbb
fcoms
inc
les
sbb
mov
xchg
push
dec
mov
scas
addl
ret
movsl
xchg
cmpl
or
out
mov
inc
jecxz
push
sbb
inc
cmp
mov
pop
lahf
mov
dec
ja
adc
mov
xor
mov
or
jns
les
call
movsl
push
leave
jno
push
popa
out
std
adc
dec
cmp
mov
shrl
lcall
lds
add
adc
mov
jge
jl
loopne
icebp
outsb
adc
jns
mov
out
jmp
loop
ljmp
and
push
jno
pop
movsl
lock
mov
add
xchg
pop
push
dec
adc
pop
int
ret
divb
mov
int
xchg
mov
inc
cltd
pop
out
cs
out
jge
lods
pop
enter
aam
cmp
outsb
sbb
mov
cmp
mov
cmp
fnstsw
addl
dec
xchg
push
fmull
xor
mov
out
cld
rcl
lcall
aad
add
out
mov
or
mov
add
jg
cld
or
gs
pop
mov
ja
dec
mov
outsb
cltd
and
xchg
push
test
cmp
and
outsb
or
nop
repnz
and
int3
rclb
fistl
popa
push
rcrb
push
push
daa
push
aam
jmp
ficompl
loop
push
jb
loopne
pop
adc
mov
jne
jecxz
adc
and
loop
dec
xchg
inc
insb
imulb
bound
sbb
fiaddl
sbb
fidivl
fists
loope
out
jg
out
jmp
sub
insb
and
mov
cmp
sbb
push
in
pop
cmp
fstpl
mov
or
loope
pop
fistl
dec
testl
mov
je
adc
pop
sbb
lds
cmp
std
aas
lea
xchg
ficompl
push
jle
les
or
gs
lcall
inc
mov
ret
imul
pop
xlat
mov
fisttps
dec
leave
into
mov
cltd
mov
adc
data16
sbb
inc
clc
aad
mov
iret
and
add
push
or
push
shl
imul
sub
sbb
repz
adc
cmp
fdiv
ja
rcll
test
cmp
and
lea
xor
and
mov
stos
repz
in
xchg
fiaddl
xchg
fiaddl
mov
mov
cmp
arpl
pop
outsl
fsts
nop
sahf
pop
das
fwait
imul
mov
jl
sub
orl
lret
mov
lea
mov
lea
xlat
data16
xchg
repz
into
cld
xor
popf
xor
pop
or
push
cmp
push
shll
xor
lock
pop
notl
xchg
outsb
je
xchg
in
leave
int
and
in
stos
mov
mov
fs
fwait
push
mov
lea
xchg
fs
adc
mov
cmpsl
dec
pop
sub
mov
aas
jmp
adc
push
es
ss
adc
sbb
inc
mov
cmp
sahf
or
cld
fisubs
shl
setge
add
adc
mov
fstl
sbb
cmpsb
ss
mov
sbb
xor
leave
sub
fists
sbb
int3
hlt
lods
adc
add
pop
clc
jp
aad
push
imulb
sub
jp
mov
lock
repnz
mov
ljmp
jg
xor
in
in
and
inc
jecxz
xor
out
mov
jo
out
call
add
add
sbb
add
arpl
pop
das
push
pop
jns
xchg
cmp
or
xchg
mov
jne
mov
cmp
pop
and
mov
mov
pop
xor
and
xor
lods
xor
inc
and
mov
iret
xor
xchg
xorl
imul
mov
int
into
lods
add
dec
push
sbb
push
out
fcmovnu
lret
or
mov
pop
cmpsb
mov
sahf
mov
bound
repnz
sbb
or
hlt
lea
mov
jl
nop
push
mov
out
repz
daa
cmp
mov
jl
test
inc
xor
movsb
dec
std
and
sbb
insb
rolb
mov
dec
aad
or
sub
jl
pause
nop
mov
mov
adc
cmp
mov
pop
cmp
and
fldt
jmp
sub
jne
sub
sahf
sub
out
dec
sbb
sub
mov
movsl
loopne
imul
jecxz
out
sub
push
push
cmpsb
ror
jmp
inc
mov
add
aam
push
sbb
popa
out
bound
dec
adc
xchg
xor
mov
inc
aam
or
imul
int3
xchg
cmp
lods
xchg
aam
mov
aam
insl
arpl
data16
inc
jbe
add
flds
sub
sbb
mov
jmp
and
clc
cmc
push
mov
not
inc
cli
shl
xchg
add
sbb
shlb
xchg
in
pop
mov
mov
jge
out
dec
lret
or
dec
mov
ror
lock
scas
dec
xchg
rorb
push
out
xchg
xor
fdiv
lods
imul
icebp
test
mov
imul
jae
push
rcrl
add
iret
dec
test
cmp
je
ss
mov
je
or
jle
in
dec
sbb
in
jne
idivb
jle
pusha
aad
hlt
mov
movsl
int3
pusha
pop
fucomp
and
movsl
popa
out
rorb
in
popf
inc
in
popa
push
ss
dec
adc
outsl
enter
pop
pop
inc
fsubrp
aad
fistpll
lahf
cmp
rcr
in
pop
sbb
or
inc
jns
lcall
adc
pop
int
xchg
cmc
stos
enter
insl
ret
and
ret
insb
cmpsb
mov
repnz
in
adc
in
repnz
mov
popa
or
xor
mov
outsl
xor
dec
fbld
sar
js
add
icebp
sub
pop
or
outsb
pop
and
mov
in
out
cmp
xchg
rclb
loope
mov
or
fwait
pushf
mov
scas
repz
add
pop
outsl
je
in
add
mov
xchg
lret
add
adc
add
adc
mov
movsb
sahf
push
inc
cmp
dec
cmpsb
stos
les
pop
sbb
mov
dec
sub
repz
add
rorl
mov
jne
lahf
cmp
jle
jnp
in
stos
xlat
inc
rol
push
mov
add
outsl
mov
mov
mov
inc
add
mov
clc
pusha
sub
inc
pop
cwtl
add
leave
imul
in
aaa
fdivs
add
cmp
cld
sub
sbb
cmp
jb
iret
cltd
mov
into
pop
stos
mov
cmp
outsb
push
adc
stc
jo
mov
add
adc
jb
push
adc
dec
call
push
hlt
pop
xchg
ss
addr16
pop
add
cld
cmp
ja
mov
loop
ret
pop
iret
fwait
mov
int
popa
out
dec
xlat
fists
mov
aaa
imulb
clc
subl
inc
and
mov
lahf
out
ror
mov
jno
mov
dec
repnz
lods
fimuls
xor
mov
push
leave
rcrl
shld
xchg
cmpsl
int3
add
xchg
lds
iret
fld
mov
dec
js
nop
xchg
add
dec
and
movsb
add
adc
dec
cmp
lcall
xchg
sahf
lret
mov
xlat
cs
mov
mov
mov
jae
sbb
cs
ret
add
scas
pop
cli
rcrl
push
push
fdivl
pop
pop
sbb
out
push
dec
xchg
icebp
mov
hlt
jmp
lods
and
in
mov
push
lods
mov
mov
test
push
data16
xchg
das
push
jne
fsts
inc
dec
popa
popa
lods
and
fisubs
lds
insl
sub
add
sahf
cli
sbb
shll
jno
lock
fidivl
adc
imul
lea
mov
jo
jp
xor
fistpl
or
adc
or
xchg
orb
rorb
scas
aad
and
daa
pop
inc
jno
mov
mov
sahf
cs
pop
dec
into
sti
pop
mov
push
pop
das
push
or
lds
mov
mov
or
rorl
roll
fs
mulb
enter
nop
inc
cmc
mov
inc
jg
adcb
pop
pop
stc
sub
test
jp
xor
or
std
pushf
in
xlat
in
out
in
pop
test
jno
lahf
lea
sbb
jle
jmp
and
lcall
ds
lahf
pop
and
and
xchg
bound
fmulp
mov
scas
inc
shrb
cmpsl
pop
sbb
mov
mov
lods
jecxz
mov
ret
sub
and
fdivs
cmc
outsb
jbe
and
and
and
ret
mov
nop
push
pusha
rolb
inc
jbe
inc
sub
sub
orb
lahf
popa
in
aam
mov
or
sahf
pop
add
shrb
adc
pop
xchg
in
and
push
fadd
jle
lret
jnp
idiv
mov
sahf
cli
pop
push
inc
jnp
hlt
ficoml
add
dec
push
pop
xchg
sub
sub
lock
shlb
out
sbb
xchg
cmp
jae
mulb
aam
dec
sbb
call
mov
push
dec
xchg
jae
int
js
pop
add
popf
dec
cwtl
dec
sub
pop
and
fsub
mov
js
arpl
pop
stos
jne
jg
cmpsl
dec
mov
adc
sahf
nop
add
shll
ljmp
cmc
sbb
xchg
fmull
inc
sub
adc
repnz
mov
mov
arpl
cmp
or
xchg
mov
outsl
loope
cltd
mov
out
dec
sbb
pop
xchg
lret
xor
or
jp
adc
sub
inc
insb
or
dec
or
jb
jmp
cs
roll
mov
mov
testb
mov
mov
repnz
cmpsl
push
sub
lock
aad
dec
pop
scas
enter
mov
icebp
sub
or
ja
jp
into
xchg
sub
xchg
ds
arpl
push
notb
adc
push
ljmp
inc
out
dec
movsb
cmp
adc
leave
lea
clc
pop
ss
xlat
dec
fistps
lea
adc
sbb
cmp
scas
imul
mov
mov
aaa
sub
dec
test
xchg
mov
cmp
adc
fadds
lods
fdivs
vmread
xchg
or
adc
fs
cmp
inc
shlb
arpl
mov
adc
mov
xchg
push
fdiv
mov
jnp
sub
aaa
xor
mov
ss
cli
negl
mov
push
push
test
test
rcrb
insb
jle
sub
pop
cmpsl
lret
xchg
out
test
or
pop
cmpsb
shlb
out
inc
sub
icebp
pop
dec
pop
push
sti
cmp
fwait
pusha
mov
shrl
movl
call
cs
lds
and
popf
out
mov
frstor
int
ja
mov
iret
push
dec
popf
mov
pushf
test
das
lar
enter
imul
ja
fsubrl
sbb
mov
adc
loope
mov
mov
les
stc
push
pop
cli
mov
pop
fucomip
sub
movsb
mov
add
or
sub
std
sbb
dec
sub
jbe
lds
pop
push
mov
arpl
mov
aam
push
test
cmovno
mov
xor
mov
add
sti
outsl
adc
loopne
xor
cwtl
repz
outsl
clc
xor
dec
pop
xor
cmp
cbtw
mov
movsl
repz
lods
faddl
pop
sarl
sub
enter
rcrl
clc
popa
mov
mov
lds
jmp
mov
lcall
push
and
stos
jbe
stos
addl
cmp
fisubl
jp
mov
es
and
lahf
scas
cs
cltd
push
xchg
or
pop
mov
and
push
sti
mov
inc
ficompl
mov
popf
stos
sti
sahf
push
dec
in
pop
or
mov
cmp
mov
addb
std
or
lret
mov
mov
cld
stc
int
inc
imul
outsl
mov
jns
rorb
jl
push
mov
in
outsl
mov
cltd
add
call
imul
repnz
xor
ret
sub
mov
jae
repz
test
inc
cltd
rorl
test
add
push
stos
cmp
ret
sbb
xor
sti
jb
loopne
adc
pop
cs
out
dec
xor
cmc
mov
mov
das
jae
js
sub
pop
movsb
leave
sbb
jg
sub
mov
or
lds
enter
fs
sbb
loopne
push
push
xlat
bound
add
out
adc
xchg
iret
add
inc
stos
in
sub
xlat
imul
in
mov
or
lahf
cli
push
mov
fwait
push
out
daa
pop
rcl
xorl
sti
xor
mov
popl
loop
inc
sti
jecxz
stc
cmp
out
push
fisubs
mov
jnp
fidivrs
mulb
mov
mov
subl
mov
add
cmpsb
call
fstps
mov
dec
popf
adc
cltd
cltd
imul
inc
ss
jmp
stc
nop
shl
insl
sub
adc
lods
inc
jno
stos
cmp
adc
add
sbb
mov
jns
and
stos
xor
cld
xchg
sbb
push
adc
call
popf
fwait
stc
dec
sub
xor
rclb
push
sbbl
enter
xlat
sysexit
std
mov
lods
pop
stos
inc
cmp
mov
and
or
scas
lret
mov
outsl
and
loopne
std
dec
xor
es
test
out
cmp
dec
jb
gs
or
dec
adc
into
xor
pop
popl
jecxz
push
mov
add
add
loopne
in
pop
pushf
jo
mov
adc
cmp
mov
and
jne
and
stos
shrl
aad
in
push
mov
nop
hlt
lret
mov
icebp
cmc
and
add
test
adc
out
es
add
mov
push
aas
xchg
or
je
inc
push
cmc
cmpsl
ret
push
in
pop
lds
or
jno
out
adc
sub
mov
push
subb
and
push
stc
lahf
jecxz
outsb
add
aad
mov
mov
mov
in
jmp
fstpt
hlt
mov
jno
icebp
pop
movsl
incl
adc
cmp
push
mov
pop
push
das
test
test
push
sbb
mov
pusha
and
xchg
data16
icebp
xchg
jmp
add
jb
in
jl
mov
pop
mov
sbb
repz
cmp
mov
or
sbb
or
xor
sub
xlat
stc
xchg
add
sbb
loop
call
and
mov
mov
rorl
xchg
fnstcw
jo
xchg
mov
lahf
insl
lcall
lcall
pop
add
out
out
sbb
test
push
dec
and
jl
xor
add
jns
sahf
fwait
mov
aas
push
enter
add
cmpsl
push
xchg
call
add
push
negl
fs
dec
inc
cmp
xchg
aam
mov
inc
ja
dec
ss
call
dec
cwtl
lock
out
test
shlb
lock
lcall
add
out
xchg
scas
das
dec
xchg
adc
push
xor
ja
sbb
cmp
and
inc
jecxz
dec
sbb
stos
insb
jbe
xchg
inc
xor
jl
xlat
mov
jmp
jns
in
jp
and
call
pop
faddl
sbb
sbb
or
test
fildl
or
out
and
clc
rolb
lret
stos
mov
daa
mov
pop
pop
xor
ljmp
dec
ror
leave
pop
lret
ja
xchg
pusha
push
cmp
adc
ljmp
xlat
mov
inc
mov
pop
aam
push
ret
pop
arpl
lods
dec
mov
fcomps
dec
mov
sbb
pop
dec
mov
movsl
sub
int3
data16
mov
push
incl
or
mov
loop
and
or
jnp
aaa
add
sti
cmpsb
mov
movsl
fistpll
or
dec
ss
rolb
pop
js
jp
enter
or
int3
sbb
int
movsb
ret
pushf
mov
enter
fldcw
adc
or
push
ja
lahf
in
js
mov
inc
xchg
outsl
in
data16
testb
icebp
mov
xchg
or
mov
pop
popa
test
inc
push
shll
in
or
shl
ss
sub
push
ja
stc
cmp
push
fldl
xor
cwtl
adc
nop
mov
cmp
dec
jmp
xchg
inc
adc
mov
jl
dec
mov
jmp
jae
sbb
adc
and
jns
or
std
movb
jecxz
and
push
outsl
aas
outsb
xchg
sbb
adc
mov
mov
test
xor
dec
cld
mov
and
mov
nop
cmp
daa
stos
cmp
rorl
insl
enter
pop
push
mov
inc
dec
sub
mov
add
xchg
pop
ja
icebp
ret
sbb
test
xchg
and
and
sarl
inc
aam
jge
test
dec
enter
shrl
insl
pop
sbb
dec
or
adc
inc
mov
bt
add
dec
cwtl
rcrb
xor
scas
loop
xchg
rorb
int
cmp
leave
das
shl
jnp
add
aas
int3
mov
pop
int
mov
test
cmp
les
fwait
pushf
mov
mov
and
jecxz
and
xchg
insl
mov
js
rol
inc
mov
mov
pcmpeqw
cli
popw
sbb
stos
lret
pop
cld
dec
fsubrl
cwtl
das
inc
lahf
jbe
imulb
test
ljmp
mov
lock
mov
lock
repnz
nop
sbb
sti
ret
jo
pop
fstl
mov
cmc
sbb
shrb
xlat
cmp
ficoms
cmp
insl
mov
jb
xor
cmpsb
faddp
or
imul
adc
push
cmpsb
outsl
fwait
aaa
cmp
mov
xchg
and
pushf
cmc
iret
dec
pop
lods
cmpsb
add
or
push
sbb
into
sbb
sbb
arpl
cmp
push
mov
aam
add
sti
stos
cmp
cmp
fsubrl
mov
inc
cmpsl
mov
jmp
imul
sbb
aaa
filds
ret
jno
dec
imul
or
mov
xor
sarl
mov
testb
mov
xor
sub
add
call
mov
mov
mov
pop
adc
add
imul
push
adc
push
xor
lret
cltd
xor
mov
dec
arpl
lds
cmp
mov
in
xlat
clc
lret
subl
aaa
sub
hlt
orl
adc
lods
mov
out
xor
mov
mov
jl
cwtl
incl
ret
xchg
xchg
insl
fdivrs
pop
mov
mov
arpl
lret
clc
ret
fwait
sbb
mov
arpl
and
les
imul
hlt
lds
mov
andl
inc
push
pop
adc
mov
push
insl
cmp
jns
sub
mov
cmp
data16
cmpsb
pop
pop
cli
sub
and
std
mov
or
pop
cmp
inc
lds
out
pusha
push
adc
cmp
nop
sbb
dec
sub
mov
iret
dec
xlat
jbe
xchg
clc
mov
jnp
cmc
jg
lods
mov
mov
daa
ds
sbb
adc
cli
test
mov
hlt
fwait
testb
dec
jmp
jno
xchg
je
les
mov
cwtl
int
dec
dec
and
mov
and
lea
leave
xor
mov
popf
out
jmp
adc
pop
and
rorl
jecxz
xchg
icebp
cmc
jb
jl
jno
addr16
loop
outsb
xor
inc
movsl
lahf
pop
fbstp
add
push
mov
fistpl
mov
int
cmpsl
xchg
add
ss
dec
inc
cmpsb
pop
cld
ret
scas
inc
mov
clc
mov
pop
pop
lret
mov
add
pop
or
shlb
repnz
pop
subl
push
add
sbb
sub
lret
js
inc
ds
cmc
jnp
dec
call
negl
sbb
rcrb
movsb
push
arpl
jmp
xchg
pop
cmp
clc
xchg
addps
popf
jne
das
push
xor
lcall
jg
and
xchg
movsl
mov
imul
rorl
rcll
pop
and
imul
xor
and
xchg
push
sbb
dec
inc
xor
out
out
movsl
cmpsl
adc
adc
inc
ljmp
adc
fwait
scas
sbb
rcr
lds
push
adc
push
dec
test
negb
inc
ret
into
movsb
rclb
or
pop
mov
cli
in
xor
ret
cmp
fcoml
out
std
pop
shl
pop
mov
jnp
mov
clc
xchg
sub
pop
imul
dec
xor
push
scas
xchg
mov
cmpsl
jp,pn
ja
mov
orb
sbbb
enter
aaa
cmp
xor
pop
pushf
and
popa
ljmp
inc
xchg
pop
jp
add
enter
sbb
add
movsb
sti
xor
iret
cs
ds
push
hlt
mov
and
and
jle
dec
cmp
cltd
xchg
push
clc
popa
mov
jg
std
sub
xchg
cmp
jne
ljmp
mov
adc
dec
mov
adc
or
and
inc
jle
xchg
add
sub
jecxz
cmpsl
push
push
in
or
inc
mul
scas
adc
out
or
lcall
movsb
pop
gs
add
push
mov
popa
pop
es
dec
add
sbb
add
pushl
leave
dec
and
fucom
aas
jo
fcomi
jbe
and
mov
imul
xchg
inc
loope
push
mov
pop
inc
lea
push
stos
fwait
pushf
xchg
shl
xor
sbb
clc
push
stc
sbb
bound
push
flds
xlat
xor
push
mov
fs
push
popf
shrl
lock
cli
sbb
out
xor
push
pop
jb
xor
outsl
pop
dec
cmp
jbe
or
inc
fsubs
cmc
adc
mov
cltd
jns
pop
mov
cmp
inc
outsl
mov
daa
mov
adc
mov
mov
or
push
test
inc
fmuls
sar
or
and
pop
mov
mov
sbb
inc
cmp
and
jns
rolb
sub
outsb
and
pop
rorl
cmp
xor
xchg
mov
ds
and
adcl
filds
jo
xchg
xorb
sbb
mov
xchg
insl
mov
int
add
data16
pop
cmc
jne
std
and
lods
inc
push
cwtl
mov
lods
mov
sub
push
gs
push
mov
movsl
jmp
or
xchg
mov
dec
jmp
dec
or
xor
cltd
insb
sarl
sbb
dec
sbb
jmp
test
sbb
push
mov
and
cs
fsubl
sbb
adc
jecxz
jo
cmp
push
ds
cwtl
sub
lret
push
inc
sub
ss
and
roll
stos
fnstenv
stos
call
pop
push
cmpsl
add
or
in
xchg
stc
inc
outsb
xchg
xchg
mov
push
xchg
into
out
das
dec
subl
ror
aam
adc
adc
adc
mov
aam
mov
iret
arpl
xor
jae
sbb
adc
bound
leave
cltd
aaa
or
hlt
mov
pop
insl
shlb
pop
int3
and
arpl
out
leave
pop
pop
mov
mov
jecxz
icebp
insb
fbstp
lods
adc
mov
add
push
rcrb
mov
icebp
fistps
pop
mov
or
shlb
mov
jo
mov
stos
push
loope
std
xchg
adc
push
mov
ret
xchg
fucomi
mov
dec
enter
mov
adc
adc
add
and
test
into
rclb
loopne
xchg
fwait
xlat
xchg
cs
jl
push
cli
shrl
test
sub
inc
jno
fwait
push
shl
add
dec
cmpsl
shlb
fdivl
je
and
cmpsl
les
xor
stos
inc
mov
xor
stos
outsb
mov
jmp
xor
adc
fcoms
xchg
int
xlat
and
lods
cmp
xchg
test
imul
jmp
add
push
mov
fcomps
and
in
subl
add
push
or
pop
mov
fstpt
flds
dec
xchg
dec
cltd
sbb
sub
dec
stos
xchg
or
xchg
subb
mov
pop
ret
shll
xchg
out
push
adc
mov
ss
or
jbe
loop
ret
scas
push
add
into
pop
cltd
pop
mov
cmp
inc
mov
imull
movsb
mov
iret
fstl
je
cld
aaa
pop
sbb
test
push
lret
mov
pushf
xor
sub
pop
fnstenv
lret
into
dec
addr16
ss
repnz
dec
aaa
jl
mov
imul
cmpsb
rolb
in
pushf
rolb
movl
dec
sub
sub
and
add
push
pop
sub
mov
in
jne
mov
sub
add
movsb
repz
mov
cltd
movsl
mov
and
pop
hlt
pop
mov
fs
cmp
int
mov
mov
jp
add
add
push
icebp
pop
bound
xchg
xchg
add
out
jno
and
dec
int
mov
ret
in
mov
cmp
add
jns
pop
out
in
mov
adc
cmp
adc
in
nop
std
movsl
mov
in
les
test
lock
fs
in
mov
fmull
xlat
push
jge
push
pop
out
outsb
sub
test
lods
inc
sbb
gs
lcall
dec
dec
xchg
daa
dec
jmp
cmp
sbbl
cmp
stos
dec
insl
je
mov
scas
jg
daa
mov
mov
and
push
fisubrs
data16
pop
sub
call
mov
movsl
sti
arpl
mov
dec
and
out
push
test
or
mov
fmuls
dec
pop
mov
cmp
cs
js
ljmp
push
jne
inc
xor
push
mov
xor
fdivs
mov
rcl
movsb
adc
aas
cmpl
imulb
aam
sbb
lods
sub
xor
sub
sahf
mov
outsl
pop
push
push
inc
xlat
cmp
std
mov
iret
mov
mov
loopne
jecxz
test
insb
inc
mov
icebp
and
xchg
or
mov
data16
test
jge
xor
jle
gs
je
mov
dec
cld
lcall
jg
hlt
sbb
dec
fidivrl
test
push
pop
daa
in
out
ficoml
test
aas
leave
pop
fucomip
cmp
iret
and
cli
push
jecxz
mov
lahf
cmpsl
cmp
inc
xor
jg
loopne
lcall
cmp
fwait
sahf
lret
add
adc
loopne
jmp
sti
cwtl
pop
ret
mov
cmpsb
dec
in
inc
mov
pusha
sbb
insl
mov
xor
inc
repz
mov
ret
jmp
bound
negl
int
and
mov
inc
xor
jmp
add
xchg
aaa
in
pop
pushf
mov
cmp
push
aam
dec
jns
je
outsb
and
xchg
bound
fidivs
cwtl
test
inc
scas
in
cmp
mov
repnz
sub
sub
lret
in
pop
adc
inc
ficoms
or
cmc
adc
mov
mov
or
ror
cwtl
add
shlb
or
loope
and
mov
lds
push
sahf
lock
inc
loopne
mov
jle
rcll
xor
lret
jmp
jbe
add
add
subl
and
xor
clc
out
inc
sbbl
lea
aam
xchg
or
loop
jbe
stos
adc
or
rorl
lock
idivb
jns
or
jge
and
pop
test
repz
add
inc
cmp
mov
push
int
repz
scas
and
dec
dec
jge
adc
incb
inc
inc
cwtl
fldt
mov
repnz
dec
test
pop
dec
dec
lods
fisubrs
popf
xchg
dec
adc
push
cmpsb
mov
subb
sbb
mov
pop
dec
jge
pop
xor
outsl
mov
ds
sbb
xor
push
shrb
xchg
nop
jl
push
orl
pop
sar
jge
insl
cli
sbb
xchg
xchg
mov
push
pop
cmp
sbb
jge
sbb
mov
ret
jo
stos
frstor
add
mov
cmp
cmp
fnstsw
jno
jns
negb
leave
mov
jae
or
fcom
push
pop
sahf
cmp
loopne
shlb
sahf
push
xchg
jns
pop
push
mov
xchg
push
pop
jge
adc
mov
rcr
lcall
ret
sub
pop
or
sbb
xor
add
add
movzwl
sub
adc
mov
cmpsb
sbb
and
push
movsl
push
mov
punpckhbw
int
xchg
clc
sbb
push
sub
rorb
or
sub
cmp
lret
pop
arpl
rorb
divb
faddl
pop
std
mov
xor
xor
sub
sub
cld
stos
stos
cmp
rolb
mov
mov
and
pop
lods
std
add
ja
xorb
test
arpl
out
push
xchg
xor
popf
add
test
xor
cld
dec
adc
test
cmp
test
stos
cmc
mov
add
mov
roll
mov
shrb
push
pushf
inc
pop
pop
fcmovne
or
and
or
out
push
mov
dec
or
rolb
cmpsb
loop
adc
cmpsb
cmp
lds
in
cmpsb
insl
js
push
outsl
outsb
jne
out
pop
stos
dec
or
or
jge
icebp
call
inc
jb
cli
out
leave
cmc
xchg
scas
or
xor
dec
loopne
dec
pop
int3
loop
mov
add
mov
sub
xor
mov
add
stc
xchg
fcoml
dec
sub
sub
mov
pop
fdiv
jle
cmp
iret
pop
arpl
add
dec
cltd
in
outsl
es
push
cwtl
xor
jl
js
inc
lahf
add
test
sahf
mov
mov
ja
mov
mov
ror
popf
inc
sti
repz
xchg
xchg
push
jb
add
cwtl
xchg
je
lret
or
cmpsl
clc
mov
ret
out
lcall
dec
test
jp
mov
push
cmpsb
repnz
dec
call
dec
push
into
xchg
sub
mov
xchg
inc
fnclex
enter
adc
xchg
cmp
pop
dec
movsb
and
jecxz
dec
daa
test
push
gs
stos
bound
test
jbe
and
mov
into
fiadds
rorb
add
subb
sbb
ljmp
push
sub
stc
mov
jmp
dec
out
sbb
into
int3
outsl
arpl
ret
push
and
mov
negb
adc
dec
out
mov
aaa
sub
push
add
xchg
mov
sbb
push
pop
mov
pop
jne
sbb
cmpsb
sbb
pop
or
outsl
push
sbb
adc
repnz
cmc
cwtl
out
pop
dec
or
and
xlat
dec
mov
repz
test
or
mov
shlb
mov
dec
out
inc
fldenv
jne
mov
rorl
ret
push
jnp
sbb
push
jmp
jb
mov
push
rolb
aad
movsl
cmpsl
ret
dec
lock
xor
jb
xchg
enter
push
sub
idivl
inc
push
loope
cmpsb
shlb
jb
mov
inc
imul
or
ljmp
cld
push
cltd
fs
push
adc
fwait
push
inc
popl
xchg
cmpsl
movsl
cmpsb
push
outsl
adc
jge
jne
mov
push
sbb
lods
pop
out
xchg
ljmp
xor
stos
or
dec
std
sub
fbstp
xchg
xchg
movsl
mov
test
and
and
or
xchg
lods
andl
sub
out
xchg
sub
lcall
xor
xchg
adc
rorb
test
xor
add
sbb
push
xor
push
insb
rol
cmc
mov
lcall
repnz
mov
outsl
jp
lahf
mov
mov
xchg
sub
push
mov
popf
lods
adc
jno
inc
fldln2
adc
out
jns
jbe
xchg
jnp
mov
shr
mov
leave
fwait
inc
mov
dec
fdivl
icebp
and
inc
shl
int3
test
xor
push
int3
hlt
mov
push
dec
cmpsl
cmp
into
mov
stos
movsl
jmp
cld
pushf
jmp
xchg
cmp
mov
loope
imul
inc
or
push
jnp
xor
aas
add
sub
dec
and
pop
xchg
jge
push
cltd
fwait
out
or
adc
stos
lods
sbb
cmp
loope
sbb
pop
dec
or
mov
ljmp
adc
movsb
jp
jp
hlt
mov
aas
mull
fisubs
push
and
shll
daa
mov
fs
mov
fstl
dec
add
xor
cmp
mov
mov
lods
pop
push
push
sbb
xchg
mov
push
pop
cmc
addb
dec
movl
lock
adc
sti
das
notb
push
in
mov
fwait
sub
xor
or
sub
fimull
cmp
insb
outsl
mov
dec
xor
les
mov
sbb
xchg
mov
sbb
mov
dec
ret
shl
into
sbb
jg
fisubl
mov
add
and
mov
mov
sub
in
mov
jne
fldl
xor
loopne
xchg
lds
add
gs
in
stos
jp
add
scas
pop
jno
repz
jge
je
fcmovb
icebp
xchg
gs
pop
adc
pop
cs
lods
aad
cmp
xchg
repz
mov
cmp
fbld
rcrl
insl
pop
mov
fdivrs
data16
xchg
popa
push
pop
daa
jae
jp
inc
mov
cmp
add
pusha
mov
cltd
cmp
push
mov
ret
sub
adc
orb
mov
ret
pop
lret
mov
push
cwtl
loop
jnp
and
mov
mov
in
stc
cmpsb
xchg
das
inc
stos
nop
int3
hlt
and
xchg
mov
nop
into
imul
or
scas
push
mov
ljmp
jns
push
inc
inc
mov
or
test
in
loope
xchg
aad
aam
sbb
push
imul
int3
and
insb
xchg
lock
xor
cmpsl
inc
push
outsl
ja
mov
or
out
xor
nop
jne
std
inc
or
gs
ret
adc
xlat
pop
cmpsb
mov
lret
addl
sub
insb
cltd
enter
jecxz
dec
mov
aaa
jno
lret
jb
cmp
pop
xor
daa
pop
ficomps
loopne
adc
ljmp
rol
cmpsb
adc
daa
mov
pop
popf
divb
fmuls
ret
popa
and
push
mov
lret
popf
and
and
out
mov
cmpsl
in
and
neg
int3
orb
or
rolb
jae
in
sub
insb
pop
sub
inc
jo
cs
pop
sub
mov
and
loopne
dec
sub
mov
xor
lds
push
jp
push
dec
dec
push
mov
or
add
les
mov
daa
pop
addr16
mov
sti
cmp
dec
and
mov
xchg
inc
rcll
adc
mov
ja
fmull
pop
std
out
push
scas
mov
jnp
test
jo
call
jmp
push
dec
sbb
imul
xchg
test
push
xlat
mov
jmp
inc
inc
pop
add
popa
loopne
ja
push
cmp
test
sbb
push
adc
pop
jecxz
pushf
dec
adc
movzbl
js
cmp
pushf
mov
lea
jo
lock
fmul
movsb
or
or
roll
rorl
inc
aam
jp
mov
xor
scas
aaa
mov
test
test
or
stos
ja
sti
or
clc
sbb
add
cmp
pop
push
mov
js
out
dec
popa
ja
mov
adc
popa
push
adc
ja
pop
stc
xchg
dec
mov
negl
add
fisubrl
xor
sbb
mov
push
jne
lahf
mov
in
test
mov
add
push
or
movsl
xchg
imul
fsubrs
sub
and
cmpb
fcompl
fscale
jae
jge
mov
aad
sbb
insl
into
negb
adc
or
std
xor
push
dec
inc
lahf
add
loopne
dec
in
loopne
push
jno
xchg
lock
pop
push
rol
cli
pop
pop
lods
push
jbe
loopne
movb
pushf
lods
dec
mov
lea
fisttps
jp
rcrb
gs
sti
nop
push
inc
lea
int3
jae
mov
shl
sbb
lret
or
jle
inc
data16
fcoms
xor
dec
addr16
and
pop
dec
out
xor
add
orl
hlt
sti
sbb
push
leave
jg
inc
sahf
rep
aas
inc
push
cmp
xchg
jno
jg
push
push
or
cltd
xchg
inc
lds
lds
fsts
fwait
add
dec
sbb
mov
xchg
mov
sub
out
mov
adc
push
test
push
or
inc
dec
insl
mov
cmp
cld
sbb
xchg
mov
jne
xlat
aaa
jecxz
in
icebp
or
enter
or
cltd
dec
scas
sbb
lcall
fnstsw
subb
shlb
fs
frstor
test
mov
sub
clc
add
clc
xor
xlat
scas
pop
sbb
adc
in
lahf
cmp
inc
lret
push
or
iret
ss
add
aad
addb
push
jecxz
das
mov
add
pop
mull
dec
adc
push
ja
push
or
out
rorb
jmp
push
xchg
movl
das
ret
xchg
shrl
cld
int
cmc
sahf
inc
icebp
outsl
mov
push
add
and
pop
pop
flds
inc
in
rclb
ss
out
call
sahf
inc
cs
adc
fiadds
push
es
and
iret
jne
imul
shlb
lods
clc
push
es
push
dec
in
add
and
es
movsb
aaa
dec
push
les
push
ja
fstpl
sub
out
pop
stos
sub
push
andl
adc
dec
insb
push
js
iret
ja
jns
iret
fisubs
mov
jle
mov
dec
test
ret
push
lds
sti
test
daa
or
cmp
or
mov
shlb
cmp
dec
mov
movsb
fwait
xor
jb
ret
sub
repnz
repz
lret
dec
mov
std
sub
ljmp
cmp
int
mov
xchg
mov
mov
test
in
popa
lea
out
loop
pop
pop
sahf
inc
es
cmpsb
cmp
inc
andnps
mov
sti
xor
out
pop
inc
out
ret
mov
pop
stos
mov
mov
fs
lret
or
cmpsb
loop
xchg
mov
ret
das
jl
push
mov
es
inc
scas
les
jmp
test
out
fcomps
rclb
hlt
add
dec
jbe
sbb
pusha
xor
cwtl
dec
mov
sub
xor
xor
shll
ja
inc
dec
inc
in
and
loop
clc
or
ret
or
sbb
rorl
xor
pop
xor
xor
inc
leave
mov
bnd
cmc
test
fwait
arpl
add
jge
sub
ret
dec
mov
into
jecxz
cmp
std
jle
jmp
shll
dec
repz
fisttpll
dec
sbb
int
sti
icebp
fcmovne
and
cli
imul
clc
xor
int3
jmp
cmp
ret
stos
sbb
gs
inc
cmpsl
shlb
xor
mov
mov
xchg
movsb
mov
mov
repnz
std
cli
outsl
xchg
in
mov
dec
dec
add
bound
popa
adc
xchg
in
scas
adc
inc
push
sbbb
lods
scas
push
out
xorb
imul
insl
jmp
es
ror
dec
int
into
inc
stos
mov
adc
pop
inc
push
sbb
std
sub
in
pop
lods
jmp
in
cmp
lcall
cld
int
rolb
fistpll
stos
jno
jno
push
mov
jae
mov
je
out
fistps
inc
adc
xor
sbb
dec
pop
and
inc
je
xchg
dec
cmpsb
push
cwtl
movsl
bound
lods
sbb
cmp
ljmp
jne
mov
in
repz
nop
inc
push
scas
xchg
fsub
or
or
pmaxub
push
add
add
popf
inc
xlat
lahf
ret
push
xlat
dec
pusha
lahf
xchg
inc
fisubrl
out
inc
xchg
xchg
test
and
xchg
sahf
mov
mov
lahf
int
aaa
jp
jl
rcr
sti
pop
add
or
pop
fwait
sub
pop
out
jb
ret
adcl
in
into
pop
cmc
mov
imul
adc
sbb
stos
push
sub
popf
inc
mov
mov
bound
lcall
adc
outsb
mov
cmpsb
pop
hlt
xchg
inc
movsl
stos
mov
dec
add
call
mov
cwtl
fldt
xchg
and
fwait
mov
outsl
testb
dec
in
rcrb
pop
flds
lret
and
test
push
lahf
in
and
or
in
andl
scas
mov
fucomp
add
cmp
mov
pop
pop
push
adc
cs
cwtl
lahf
cmc
sub
ret
inc
addb
sbb
pop
inc
test
mov
arpl
outsl
xchg
sbb
mov
cli
cwtl
jmp
push
cmp
xor
mull
scas
das
sub
jne
cmp
sarb
push
sbb
mov
jns
xorl
pop
nop
repnz
fwait
mov
ret
sbb
into
out
push
add
and
cld
xor
and
fnstenv
xchg
in
enter
in
cli
adc
shl
cmp
or
push
mov
cmp
push
or
dec
clc
imul
mov
loopne
sbb
fucomip
daa
rclb
frstor
jns
cmp
cmc
xchg
pop
adc
inc
inc
cwtl
mov
or
jae
andl
pop
push
pop
inc
push
jb
sbb
dec
jnp
inc
pop
das
inc
cwtl
movntq
xchg
outsb
pop
movsb
cmc
sub
popl
ljmp
xchg
mov
jne
out
sahf
sub
mov
add
inc
sahf
testb
or
sub
dec
aam
push
pop
addl
push
cwtl
mov
xchg
sbb
imul
pop
lods
jg
jmp
push
pop
cmc
mov
ljmp
out
push
out
shlb
popf
fisubl
scas
icebp
stos
bound
addr16
loope
shl
mov
xchg
push
iret
push
sub
jns
repnz
cs
ret
clc
xchg
clc
jns
xor
xchg
test
loopne
mov
in
cmp
mov
jle
push
mov
xchg
dec
sub
int3
sahf
out
and
jge
cmp
pusha
data16
inc
pop
stos
push
push
push
inc
lret
jnp
dec
adc
sbbb
call
xchg
push
outsl
testb
or
mov
gs
dec
adc
mov
sub
inc
cmp
pop
fsts
jmp
cltd
cmp
ds
in
fisttps
daa
sbb
mov
sti
dec
xor
pushf
in
mov
pusha
lret
cmpsb
cmp
xor
mov
decb
nop
jle
sti
push
mov
test
jp
ljmp
xchg
jo
test
jp
mov
jp
mov
mov
or
dec
por
and
movsb
cmp
mov
or
loope
mov
stos
sub
and
push
push
sbb
cltd
arpl
loope
xorl
sahf
sub
jb
test
xor
imul
bound
aad
jmp
pop
aad
xor
xchg
xlat
pop
test
imul
shr
pop
add
test
rcll
lahf
movsl
fcmovbe
scas
dec
int
push
mov
cltd
xor
xor
in
ja
inc
jecxz
cmpsl
pop
mov
mov
jp
fldcw
es
mov
insb
leave
xchg
mov
sbb
loope
mov
dec
mov
int
mov
cmpsb
jp
sahf
in
cs
jmp
and
out
push
in
ja
int
sub
clc
inc
push
jno
sbb
testb
and
mov
and
loopne
int3
pop
and
leave
lds
jno
arpl
in
sub
sub
movsb
lods
mov
rcll
cmc
add
das
mov
sbb
xor
mov
xorl
push
movsb
jo
inc
cwtl
enter
push
inc
data16
sub
push
cmp
loopne
test
fwait
cwtl
add
fdivrl
push
push
sbb
loope
push
mov
fidivrl
clc
pushf
dec
jb
inc
out
lahf
mov
testl
lret
test
iret
sub
lock
sbb
ss
mov
bound
sub
sub
mov
add
lahf
sbb
and
xchg
mov
mov
inc
fwait
fs
xchg
rol
test
xchg
out
mov
add
cld
mov
leave
stos
mov
push
es
stc
add
and
xor
mov
or
push
dec
dec
jecxz
or
inc
out
arpl
jne
mov
sbb
cmp
clc
test
rclb
xor
adc
shlb
dec
mov
mov
ja
jle
std
pop
and
mov
xor
mov
lods
mov
mov
mov
xchg
sarb
jl
out
and
pop
loope
fdivrs
jo
andl
and
inc
test
mov
inc
cmp
loope
sbbb
pushf
xchg
popf
sub
inc
movsb
out
inc
mov
xchg
xchg
mov
jno
cmpsb
int
sbb
jle
mov
push
mov
testl
dec
mov
lea
arpl
out
repnz
lods
popf
push
jge
dec
lret
popa
push
cs
test
mov
and
xchg
arpl
je
outsb
inc
xchg
scas
icebp
fsubp
repnz
into
insb
js
ss
pop
xor
cmpsb
aaa
fidivrs
inc
jge
cmp
ds
loopne
xor
pop
or
add
sti
push
scas
and
pushf
shl
add
iret
push
mov
imul
andl
out
loop
push
jb
out
fsubs
add
pop
ds
sbb
mov
xor
lret
outsb
and
negb
fdivrs
mov
dec
imul
xor
cmp
gs
sbb
or
xor
jbe
mov
pop
inc
cmp
gs
inc
shr
fmull
ds
sbb
addr16
dec
shlb
jbe
push
pop
into
cmp
sub
cltd
leave
add
or
call
lahf
insb
push
inc
and
adc
ret
jg
dec
mov
or
fcmovne
xlat
inc
out
call
hlt
xor
stos
push
stc
lea
push
out
push
sahf
jne
ret
jne
inc
loope
dec
and
fsubrl
cmp
mov
das
cmp
adcl
jne
test
aam
xchg
ret
loope
jg
insb
add
test
mov
xchg
bswap
pop
mov
fidivl
adcl
jno
inc
out
mov
addr16
xor
mov
ljmp
sub
clc
lods
enter
lcall
push
or
std
test
mov
push
clc
xor
xchg
outsl
jbe
cli
pop
cmp
and
push
in
dec
adc
das
mov
sbb
jno
cs
orl
inc
lret
xor
pushf
sub
mov
push
push
ret
add
xchg
push
fidivrs
sbb
mov
stc
xchg
adc
and
pusha
orb
jl
jae
int3
or
out
push
jg
outsl
fiadds
out
aaa
sbbb
xchg
sbb
cmpsl
insb
pop
mov
into
ja
mov
shll
out
lock
and
mov
push
in
in
push
nop
mov
loopne
jo
pop
xor
adc
jp
push
aam
outsl
shl
adc
rolb
loopne
sbb
notb
cltd
pop
popf
sub
incb
dec
sbb
shl
jne
mov
xchg
or
test
jge
and
stos
jmp
addr16
sarb
decl
lock
pushf
xchg
adc
mov
dec
test
sbbl
pop
sahf
mov
or
add
xor
jae
jnp,pn
mov
mov
les
mov
out
jp
fwait
mov
and
adc
mov
scas
addr16
scas
xchg
sub
js
mov
pop
inc
rolb
pop
sub
lret
mov
sti
push
jb
fstl
fcmove
xor
gs
push
dec
cmp
jo
push
fnstenv
nop
add
in
jl
or
mov
sti
cmp
movsb
sbb
mov
cmp
dec
fs
imul
fimull
cmp
in
lret
add
popf
cmp
add
add
scas
mov
xor
rolb
fisubrl
cmpsb
push
jne
inc
mov
xchg
rcll
loopne
sub
movsb
in
pop
fbstp
dec
test
stc
jmp
fdivl
imul
push
adc
negb
out
cmp
push
rcll
jne
push
mov
pop
and
sar
daa
jnp
insl
ljmp
repz
xchg
inc
mov
mov
cmp
add
or
inc
pop
jne
adc
dec
dec
xor
clc
push
xchg
lock
aaa
punpckhwd
cs
mov
mov
aas
das
jb
xorb
shl
in
xor
sti
stos
insb
xchg
ja
push
sahf
xlat
lock
xchg
add
cltd
loope
cmp
out
xchg
mov
xor
rclb
or
sbbb
sbbl
jno
and
arpl
xchg
pushf
xor
mov
stc
cmp
sbb
loopne
and
adc
repz
rcll
cmp
out
cmpsl
loope
je
mov
inc
dec
inc
cli
or
das
inc
test
sub
mov
xlat
add
sbb
mov
mov
push
jg
loop
dec
cmp
insb
sbb
loope
lret
adc
push
xor
or
add
subl
mov
jo
lods
dec
cmp
aas
sub
jmp
jle
popa
dec
lret
dec
cmpsl
test
addr16
mov
xlat
xchg
movsl
pop
iret
les
mov
cmp
add
imul
dec
inc
or
test
je
les
sbb
fsts
fs
xor
xchg
dec
icebp
js
add
imul
mov
enter
stos
mov
jne
pop
dec
add
out
xor
mov
pop
in
xor
out
push
inc
out
lds
mov
cwtl
inc
inc
xor
les
inc
xchg
pusha
outsl
cld
test
pop
shll
cwtl
mov
mov
cmpsl
sub
sub
mov
test
stos
push
xor
jecxz
rorl
out
and
cmpsb
fistpl
popa
pop
insb
mov
xchg
fsubrp
inc
loop
iret
les
mov
mov
pop
ds
push
mov
pop
sarb
mov
lea
mov
das
xchg
inc
or
cmp
iret
mov
popa
push
cmp
or
pop
vpsubq
and
insb
mov
mov
subb
xlat
sub
inc
sti
ds
enter
mov
std
mov
idivb
adc
out
adc
mov
xchg
sbb
xchg
push
mov
xchg
jnp
mov
outsb
xchg
push
sar
or
lahf
lret
cmp
push
not
mov
lahf
movsw
shl
inc
mov
xchg
push
shrl
fiadds
int
mov
lock
rcr
sbb
cmp
repnz
stos
jbe
dec
cmp
push
push
push
repnz
int
daa
es
inc
sbb
test
sti
xchg
push
test
das
inc
lret
sahf
iret
dec
cmp
loop
fisubl
pushf
aas
mov
cmc
in
jo
mov
xchg
sub
fsubs
sub
sub
push
inc
push
out
pushf
cmp
dec
imul
adc
and
ds
xlat
test
ret
call
mov
jecxz
cmpsb
leave
cwtl
cmp
xchg
mov
iret
das
dec
in
stos
divl
xor
jbe
mov
xsaves
or
shrb
xchg
push
hlt
pop
push
push
test
ds
mov
test
mov
lahf
inc
inc
aaa
movsl
sub
xchg
cwtl
lret
push
lods
lcall
pop
adc
or
mov
dec
dec
push
push
push
mov
je
sahf
test
push
sbb
das
push
addl
lahf
cs
xchg
dec
divb
and
push
sub
pusha
or
mov
pop
hlt
add
cmpl
jl
lods
jmp
push
dec
sbb
sub
test
icebp
fucom
fucomi
cmp
sbb
das
xchg
out
mov
mov
call
dec
inc
imul
popa
mov
in
jnp
lds
js
insb
xor
shll
testb
jl
jmp
mov
mov
mov
out
pop
aaa
xor
pop
out
cmc
pop
fldl
orl
jg
xchg
les
fstpl
jns
mov
ret
xchg
std
pop
cltd
push
or
xchg
mov
jmp
dec
dec
push
xorb
shl
addl
cmp
mov
xchg
js
push
and
adc
js
fldt
loopne
call
adc
out
push
cmpl
mov
add
lahf
fnsave
mov
ds
test
int3
and
adc
in
in
cli
mov
sbb
loopne
icebp
leave
mov
push
push
call
enter
fs
sti
mov
dec
sub
std
lahf
gs
push
adc
adc
or
cmp
scas
scas
sub
int3
jbe
aas
sub
xchg
push
mov
movsl
mov
fwait
lahf
sbb
pop
sub
lods
adc
stos
push
mov
cmpsl
lods
movsl
push
adc
push
andb
fsub
sarb
cmp
mov
fists
ljmp
sub
lods
mov
mov
in
inc
pop
scas
sbb
stc
sub
sarb
and
adc
xchg
inc
adc
popa
sbb
test
push
inc
out
movsb
and
sbb
pusha
push
jge
mov
pop
lret
jbe
adc
mov
mov
xor
push
sarl
rorl
imulb
jp
pop
daa
imul
jg
push
mov
iret
mov
push
mov
cmp
jnp
stos
dec
cmp
cmp
adc
jnp
mov
into
in
data16
mov
and
dec
pop
fldt
pop
in
cs
add
add
xor
add
mov
insl
sbb
ret
je
jnp
icebp
gs
or
inc
xchg
nop
scas
or
pop
mov
xchg
mov
pop
cmc
adc
mov
adc
shl
add
popa
sbb
push
xchg
sbb
movsl
xchg
pop
mov
mov
inc
mov
insb
std
stos
xchg
cmp
or
cmp
les
sbb
adc
xchg
movsb
mov
xchg
xor
fsubp
dec
jno
outsl
push
leave
push
clc
mov
xchg
add
mov
bound
cmp
bound
rcrb
pushf
push
mov
sub
int
add
movsb
xchg
cmpl
cmpsb
mov
mov
dec
jge
addr16
lock
setbe
icebp
iret
pop
outsb
shll
call
outsl
test
ja
and
xchg
ret
xor
push
imul
sarl
xlat
pop
mov
repz
cmp
rcrb
push
arpl
in
pushf
xor
lret
jmp
aam
inc
xor
daa
test
jmp
ret
int
fsts
popf
inc
mov
shlb
pop
enter
das
pop
adc
pusha
xchg
ret
cli
xor
in
es
jmp
nop
xchg
fisttps
xchg
dec
icebp
js
add
lods
push
data16
adc
aas
js
add
ret
xchg
int3
xor
mov
sub
push
sbb
int3
adc
inc
enter
jae
add
sbb
jno
pop
call
xor
adc
xchg
xchg
fists
mov
int3
pop
pop
inc
lock
jmp
or
pushf
je
sub
adc
pop
imul
mov
loopne
jno
dec
jge
cmp
lret
inc
mov
xor
add
xchg
ret
lret
or
mov
ljmp
and
fildll
push
add
pusha
jne
pop
dec
and
repz
loope
sbbl
aam
xchg
cmp
adc
imul
jg
pop
sub
leave
cmp
or
mov
xchg
pop
clc
inc
jp
xor
stc
jb
mov
pop
cmp
lahf
enter
xor
int3
xchg
sub
mov
and
gs
dec
and
fisubrl
sub
ljmp
push
mov
xchg
xchg
xchg
pop
xchg
mov
cmc
sub
xor
cmc
lods
insb
aaa
cmpsb
xor
adc
test
add
pop
or
inc
arpl
and
std
inc
in
cmp
aas
pop
push
add
cltd
movsb
loop
loop
pushf
ss
inc
mov
mov
sub
xor
ljmp
out
mov
and
inc
cwtl
in
cmpsb
push
xor
mov
mov
dec
jmp
inc
arpl
pop
xchg
add
jb
repz
packsswb
movb
xchg
xchg
mov
in
mov
int
inc
fsubl
jne
adcb
sub
stos
dec
mov
adc
push
lods
ja
push
pop
pushf
mov
enter
sbb
cld
icebp
in
fcmovb
cmp
sub
mov
imul
inc
pop
std
iret
add
mov
aaa
mov
scas
xor
push
mov
scas
add
outsb
inc
icebp
rclb
orl
aaa
stos
push
sbb
mov
aaa
mov
xchg
mov
movsl
repz
inc
sbb
jle
push
push
or
loop
mov
jl
push
dec
stos
push
sbb
push
out
cmp
pushf
lret
dec
push
pop
push
mov
dec
adc
pop
sub
jl
dec
orb
ret
pop
add
ror
pop
xchg
jecxz
sahf
repnz
mov
rorl
xlat
xchg
ret
mov
js
or
or
in
inc
hlt
mov
mov
lds
pop
mov
lret
jnp
pop
ss
mov
jp
loop
incb
or
sbb
fistpl
or
jecxz
inc
lret
cs
fiaddl
lock
sub
xor
inc
cs
stos
or
nop
scas
div
mov
imul
sub
push
xor
scas
dec
jg
addr16
mov
or
mov
xchg
fdivs
gs
ja
lea
push
mov
adc
sti
sti
inc
sbb
cmc
cld
dec
cmp
lret
fwait
movsl
int
mov
inc
movsb
shrb
cmp
fwait
cwtl
push
mov
out
dec
add
adc
fcomps
fsubrp
bound
and
dec
mov
or
ss
cmp
std
pusha
ds
popf
into
pop
imul
cmp
inc
cmp
fildl
inc
lcall
scas
std
jb
rcrb
inc
aaa
test
xchg
pushf
sarl
in
push
fwait
test
test
mov
lcall
mov
pop
sti
in
or
mov
dec
add
lahf
inc
enter
mov
in
inc
pop
std
sub
pop
fcmove
pop
mov
scas
xchg
xchg
rol
mov
or
aas
mov
dec
addr16
cmp
cmp
jnp
dec
adc
mulb
push
out
add
xor
cmpsb
xlat
lds
push
cld
sarb
pop
mov
stc
je
sarb
xchg
jge
daa
rorb
mov
mov
les
adc
mov
nop
xor
push
sarl
addl
rcll
mov
ret
jno
movsb
xchg
pop
inc
inc
lods
jecxz
repz
sub
ss
sahf
or
loop
cld
mov
fidivrl
in
xor
mov
add
les
lcall
push
fwait
mov
add
pop
rorl
test
inc
cli
pushf
hlt
pop
pop
mov
ror
fs
cmp
int3
jp
jp
andl
sti
sarl
or
mov
lods
imul
or
test
ss
xor
adc
mov
inc
jmp
push
mov
pop
xor
mov
dec
inc
xchg
aas
je
mov
dec
cmp
mov
aad
sarb
stos
sbb
xchg
stos
xchg
testl
mov
jg
jbe
cmp
lds
cmp
dec
mov
cli
dec
pop
out
push
jo
mov
jl
xchg
test
cmp
add
adc
addr16
js
mov
xchg
mov
xchg
or
aad
sbb
sub
pop
jp
pop
jmp
sub
rorl
in
ljmp
jge
ficomps
mov
sub
jp
inc
inc
out
push
fmuls
inc
es
mov
dec
sahf
jo
lahf
xor
inc
dec
dec
or
mov
jo
inc
xchg
or
pop
call
popw
cwtl
cmp
out
push
mov
jecxz
xchg
pop
mov
jle
fidivrs
cwtl
in
mov
xchg
cmc
stos
or
mov
fisttpll
jle,pt
lods
lock
mov
push
loop
jg
mov
xrelease
jnp
div
inc
xor
jl
outsb
imul
test
dec
cmp
jge
jb
lds
sti
mov
imul
and
lahf
sbb
pop
mov
xor
lock
sahf
cld
jae
aad
mov
inc
mov
push
pushf
xor
push
subl
mov
sub
in
incl
lret
push
jno
mov
cmp
fldt
insl
push
and
dec
stos
xor
aad
and
cmp
mov
cmc
fimuls
in
cmp
aam
pop
shr
cmp
or
xchg
xchg
out
adc
add
mov
xchg
mov
test
and
loopne
add
packuswb
xor
in
pop
stc
inc
mov
out
fwait
add
push
shr
jecxz
cld
test
call
push
mov
cld
inc
cmpsl
stos
pop
or
sbb
xor
adcb
jne
fcom
rorl
inc
fs
ss
xor
mov
pop
aad
aad
push
xchg
cwtl
jnp
loope
loope
and
jne
sub
push
push
mov
out
mov
inc
pop
scas
data16
sub
incb
pop
test
call
mov
repnz
jns
sbb
push
lret
daa
lcall
lret
push
mov
dec
test
es
mov
das
pusha
mov
xchg
xor
mov
jmp
lds
lahf
push
fcompl
fstpl
lret
mov
add
xchg
lahf
mov
mov
and
jnp
arpl
popf
daa
mov
movsl
pop
arpl
fs
popa
or
pop
sbb
pushf
add
test
push
scas
mov
or
mov
xchg
mov
push
enter
sti
fisttpll
out
inc
test
sub
loop
mov
mov
stos
sahf
inc
inc
fldenv
mov
inc
fbld
push
and
aaa
xchg
ret
mov
aad
and
hlt
lods
in
out
imul
cmpsb
sarb
aad
mov
in
cmp
mov
fistpll
xor
ds
test
bound
in
xor
sbb
and
pop
dec
mov
inc
mov
mov
mov
xchg
adc
daa
in
ret
adc
test
mov
mov
mov
dec
mov
repnz
mov
pop
or
pop
push
in
lea
cwtl
mov
shrl
movsl
cwtl
call
dec
jo
outsl
mov
push
xor
mov
sub
and
xchg
icebp
das
xor
push
enter
sub
xchg
ret
je
lock
cli
mov
jb
xchg
lea
shll
push
or
scas
lret
nop
pop
pop
pop
mov
xchg
out
int3
jp
das
mov
cltd
div
sbb
mov
lret
lock
dec
aas
pop
cwtl
inc
jnp
push
xchg
cmpsl
mov
popf
mov
cmp
nop
sarb
mov
and
mul
mov
hlt
lea
jnp
pop
or
popa
and
out
bound
push
je
test
jg
shrl
xchg
jg
jo
int
inc
jge
add
scas
dec
faddl
pusha
scas
mov
pusha
mov
cmpsb
lods
roll
dec
cmpsb
cmp
testb
addb
xor
xchg
mov
add
mov
and
or
xor
lret
sarb
es
or
push
dec
in
scas
pop
test
dec
js
cmp
orb
dec
lods
mov
cmp
faddl
int3
cmp
ds
ljmp
rclb
call
dec
insb
mov
mov
jmp
dec
sbb
push
daa
xor
push
fs
mov
pop
mov
inc
iret
test
cmp
mov
inc
iret
lahf
cmc
push
nop
cltd
jmp
fstl
loopne
out
mov
scas
push
call
fisubrl
or
fdivs
pusha
scas
fwait
xchg
repnz
mov
lcall
daa
jp
jp
sbb
xchg
jne
mov
push
fisubs
test
pop
lahf
adc
lock
in
std
pop
ds
push
out
xchg
mov
jnp
push
pushf
test
pop
aas
clc
jae
and
jmp
loopne
mov
loopne
pop
lea
dec
and
dec
cld
cmp
loopne
mov
xor
sub
stos
out
dec
shll
loopne
dec
fstl
daa
mov
stc
pop
rcrl
mov
jae
xchg
iret
and
and
dec
jo
add
push
repz
jns
or
shll
sbb
xor
mov
pop
lods
loopne
sarb
jmp
out
pop
loop
call
testb
xor
je
daa
jne
push
mov
push
mov
shll
in
jge
scas
pop
jo
pop
ss
addr16
ret
imul
sub
rclb
push
lahf
lods
mov
mov
out
dec
rorl
lahf
fdivrl
pusha
test
stos
mov
arpl
icebp
or
inc
outsb
sahf
jae
std
pop
jne
sub
fdivrl
push
and
testb
ja
sub
in
ret
pop
scas
or
add
jae
jge
mov
mov
mov
mov
icebp
dec
cmpsl
cli
dec
aad
enter
xorl
sbb
dec
mov
sbb
sub
jb
xor
fwait
sub
jl
mov
bound
lret
shll
popa
sub
xchg
mov
mov
aam
leave
sbb
leave
adc
daa
fdivr
andl
xchg
outsb
sbb
lcall
or
andl
xorb
push
and
cmp
imul
and
inc
push
mov
mov
popa
pop
cmp
xor
lock
jp
iret
push
fwait
in
jne
out
in
loopne
xor
cmp
push
jnp
clc
sub
xorb
shl
bound
repnz
enter
mov
addr16
jno
leave
mov
lcall
lcall
insl
sbb
push
dec
mov
dec
push
mov
in
mov
fisubl
sbb
mov
jg
push
repnz
cmp
das
outsl
cmpsl
mov
xlat
in
dec
mov
sub
inc
aam
mov
push
js
rcrl
pusha
pop
fcoml
stos
xor
xlat
pop
mov
popf
mov
aam
or
mov
arpl
pop
or
shll
ljmp
in
repnz
pop
pop
mov
cmp
cli
cmpsl
xlat
jae
dec
and
sub
shrl
shrb
fsubs
inc
enter
cmp
mov
faddl
fincstp
xchg
add
cmpsl
push
push
pop
fwait
icebp
push
rolb
jp
into
das
xchg
nop
sbb
push
outsb
cmp
stos
xor
cmp
sbb
dec
cs
and
inc
pop
sbb
sbb
mov
jae
sub
push
out
test
jo
cmp
adcb
ljmp
mov
inc
orb
aam
jmp
or
mov
xchg
lahf
cli
shlb
mov
mov
push
sbb
mov
mov
and
adc
or
inc
outsl
negl
sub
dec
push
dec
test
inc
jo
idiv
fcoms
addb
xor
dec
mov
in
ret
cli
or
xchg
in
jne
cli
or
sbb
push
jae
xchg
mov
fisttpll
hlt
dec
cld
cmp
add
add
push
mov
nop
out
leave
cltd
dec
lret
ficomps
mov
arpl
sti
jnp
sbb
mov
cli
mov
aam
leave
test
pop
dec
lods
dec
cmpsb
and
test
jmp
add
lock
mov
test
shlb
negl
insl
adc
insb
out
int
loopne
addr16
out
jmp
mov
out
es
mov
mov
aas
hlt
xor
ffree
cli
sbb
aam
movsb
out
push
push
mov
rclb
mov
cmpsl
dec
stos
cmp
cwtl
pop
sti
mov
inc
imul
sbb
adc
sub
in
jle
xchg
cmpsb
mov
divl
add
pop
loop
and
notl
lock
aad
cmp
or
pop
popa
xor
mov
pop
loope
pop
pop
loop
dec
sbb
int
aad
jge
shlb
cli
add
ljmp
cld
fnstenv
popf
sub
mov
out
adc
mov
dec
outsl
jo
je
xlat
or
or
out
mov
cmp
jl
test
sub
lcall
outsl
gs
test
sub
xlat
pop
push
jo
and
push
cmc
movhps
gs
clc
and
shlb
lret
cwtl
aad
jg
mov
add
rcrb
or
mov
mov
sbb
or
jmp
rolb
jae
jp
pop
xor
cmp
and
and
andl
aas
inc
xchg
mov
hlt
rorb
iret
out
les
push
fldcw
jae
jge
mov
aas
jl
adc
scas
xlat
cmpsb
push
mov
xlat
push
dec
fisubl
movsl
or
ret
xor
movsl
out
jbe
mov
test
sbb
xor
jb
sti
push
cmpb
jne
leave
daa
push
pop
hlt
jae
dec
and
dec
cld
test
push
je
push
das
repnz
iret
jae
jl
pusha
mov
dec
jle
and
push
int3
call
iret
and
pop
leave
clc
xchg
inc
rclb
mov
adc
push
cld
sbb
aad
add
out
call
xor
fbld
and
clc
push
repz
cmpsb
mov
mov
sub
push
ds
push
out
sbb
mov
inc
js
and
sbb
je
adc
or
xchg
mov
lods
or
in
mov
push
loopne
es
hlt
sub
jno
lock
popa
add
push
les
aad
mov
les
push
mov
addr16
popa
cmpsb
push
xchg
lcall
ljmp
jl
fstpt
mov
jae
jle
mov
cmp
mov
cld
cs
mov
cmp
jp
pusha
test
dec
inc
push
cmp
pusha
fs
push
pop
lahf
aaa
es
sub
push
push
mov
mov
dec
rcll
jae
roll
and
lret
mov
mov
mov
rcll
loop
testb
rclb
punpcklwd
mov
mov
scas
pusha
cld
adc
insl
ret
push
rcrb
aad
pop
bound
pop
dec
test
ds
push
push
fnsave
sub
xchg
test
sbb
mov
cs
or
jmp
push
pop
jb
jp
pop
cltd
xchg
lock
mov
cmp
mov
sbbl
mov
jp
xchg
ljmp
imul
mov
and
xor
and
insb
insb
dec
gs
hlt
nop
inc
push
rcrl
add
pop
out
jg
jecxz
inc
xchg
mov
lock
or
inc
add
xchg
xchg
mov
sbb
hlt
mov
insb
push
roll
jo
stos
cmp
push
popa
loopne
out
jbe
daa
aam
jge
ja
push
leave
push
cli
and
sub
cmp
xchg
movsb
icebp
inc
sbb
out
ja
scas
or
inc
xchg
jbe
stc
dec
mov
aaa
ja
int3
and
mov
andl
lock
out
mov
sub
fadds
inc
int
out
das
in
fistpll
mulb
dec
sahf
push
ret
xchg
cwtl
rcrl
jl
fildl
dec
mov
insl
cmc
jnp,pn
stc
xorb
into
testb
push
xchg
sahf
outsb
mov
dec
outsl
clc
adcb
add
in
mov
and
fildl
arpl
mov
mov
lods
jmp
and
icebp
pop
pop
ror
xor
xor
aaa
mov
popf
je
mov
add
fstpt
lock
int3
or
push
popa
inc
int3
ret
sbb
jb
sub
lock
subb
ja
dec
or
movb
js
or
out
jnp
jle
repnz
jno
jnp
popa
mov
add
pop
jle
into
mov
cmp
ret
dec
adc
aas
lcall
mov
or
subl
xchg
cmp
jbe
mov
sahf
fisubrs
push
cmp
add
jmp
in
ss
stos
jo
xor
int
xchg
xor
and
xchg
outsb
loope
mov
push
addr16
push
cmpsb
adc
mov
xchg
xchg
adc
or
and
push
js
mov
mov
out
stc
mov
and
mov
int3
pop
loopne
hlt
lahf
mov
outsl
negl
cwtl
loop
orb
inc
pop
jmp
pop
and
outsb
aam
sub
xchg
int3
xor
push
cld
cli
adc
dec
shrl
sarb
sub
mov
jo
out
out
and
jns
daa
inc
mov
sbbl
icebp
rclb
enter
adc
dec
shrl
lcall
xchg
lods
divb
cmp
sarl
fs
loop
ljmp
add
lods
pop
mov
xchg
rcrl
scas
test
add
scas
or
xor
jns
inc
out
pop
sub
jle
cmp
in
sub
sarl
inc
jo
loope
sbb
push
jge
inc
fs
and
in
mov
mov
cmp
lahf
je
mov
stc
ss
cmpsb
add
jge
jno
test
push
jne
mov
cltd
bound
fsubl
scas
or
adc
jmp
jg
xchg
movsb
push
addr16
adc
add
jae
xor
pop
cmp
cltd
mov
imul
mov
stos
sub
scas
arpl
pop
mov
lods
mov
pop
cmp
imul
and
xchg
sahf
shll
push
inc
push
je
jle
hlt
shlb
es
test
xchg
cmp
scas
or
test
dec
loopne
stc
test
mov
or
js
pop
or
aas
fisubl
iret
dec
or
roll
leave
lods
push
pop
mov
out
mov
adc
jl
movsl
fdivl
jno
pop
and
jae
xchg
add
lret
lcall
aaa
outsb
leave
or
or
jp
mov
adc
loop
push
iret
xchg
test
pop
xorb
dec
sub
mov
clc
xorb
repz
popf
inc
or
push
mov
shrb
jno
js
outsb
mov
adc
add
stos
fs
push
out
clc
in
in
loop
ljmp
dec
jnp
and
stos
mov
and
and
sti
add
fs
inc
imul
repnz
xchg
xor
fisttpl
mov
lcall
repnz
inc
iret
lahf
push
sub
or
jbe
xor
adc
shll
data16
adc
pop
ror
loope
aad
sub
inc
lcall
mov
fs
xor
orb
lods
pop
mov
mov
dec
aad
lods
pop
jnp
push
sbb
lret
and
or
push
adc
jns
pop
in
rclb
adc
xor
inc
inc
aas
mov
jg
int
cmp
int3
add
test
pop
jle
sti
mov
pop
jge
clc
pop
lds
sub
jne
cmp
jne
nop
test
cltd
cmp
stos
xor
lea
in
pop
pop
lahf
jg
test
push
test
cs
call
sti
and
dec
in
jp
sbb
cmpsl
push
popa
and
fsts
sbb
jbe
pop
inc
lret
mov
adc
imul
cmp
jle
cmp
mov
jle
or
mov
xchg
stos
adc
push
cmp
xor
sbb
daa
pop
shlb
push
jbe
sar
dec
mov
cmp
sub
arpl
aad
aaa
mov
scas
add
outsb
sbb
sbb
cmp
test
lock
xchg
ljmp
inc
jg
js
roll
test
adc
or
pop
push
mov
das
sub
stos
mov
popa
xor
lret
popa
mov
and
jp
mov
xchg
and
or
xchg
fwait
jmp
pushf
dec
jmp
clc
and
or
add
pop
scas
or
adc
and
pop
and
xlat
pop
jecxz
inc
insl
popa
stos
xor
stos
lcall
std
ret
cld
inc
jle
add
inc
push
pop
popa
inc
loop
lock
in
cmp
and
ss
nop
mov
mov
movsb
imul
dec
test
cli
aaa
dec
popa
mov
out
jnp
or
data16
jle
mov
cmp
stc
mov
cmp
divb
mov
mov
ja
mov
pop
faddl
pusha
fstpl
aam
mov
mov
mov
xor
push
frstor
scas
dec
sub
hlt
orl
mov
mov
jg
std
xor
popf
adc
or
test
push
cmpsb
jae
mov
mov
add
daa
xchg
mov
test
repnz
lea
jns
sarl
mov
into
fistpll
cmc
cs
ret
mov
adc
movsl
pusha
ficoml
and
xor
idiv
jo
arpl
pop
push
addr16
movsb
ljmp
lret
inc
sbb
addr16
and
incb
xlat
add
cltd
cmp
out
dec
cmp
pusha
mov
cmp
xchg
fcmovbe
lods
loope
imul
minps
and
xchg
cli
in
faddp
or
and
idivl
mov
loopne
arpl
std
sub
cli
addr16
fisubrl
xchg
add
cmp
mov
and
fimull
cs
incl
addr16
xchg
jg
nop
push
fisubrs
push
hlt
and
cmp
in
sbb
rorb
xlat
sub
jae
push
xchg
pushf
call
mov
test
cmp
mov
fistps
pop
mov
pop
in
sub
enter
fs
mov
imul
sti
mov
mov
jle
dec
pop
mov
and
bound
jg
and
mov
repnz
mov
pop
test
and
dec
push
sahf
push
in
sub
sbb
jo
lcall
lea
loope
in
mov
movsb
sub
in
xor
dec
fwait
and
test
pop
mov
punpckldq
cltd
in
dec
cmc
jge
or
xchg
movsb
inc
into
push
mov
imull
popa
jle
inc
inc
adc
cltd
xor
popl
xor
xchg
mov
pop
sti
adcl
arpl
add
test
dec
mov
inc
jns
pop
add
fisubs
outsl
cmp
aas
dec
mov
mov
push
dec
or
inc
ja
push
inc
push
and
jp
sub
jmp
pop
data16
insl
mov
cmpsl
pop
aaa
jl
int3
pop
jne
mov
adc
sbb
imul
mov
inc
insb
xchg
pop
jb
inc
rcl
push
andl
jns
inc
cmp
ss
mov
cmpl
xor
or
mov
dec
rorb
lea
or
inc
jle
jl
loope
pop
gs
enter
call
or
popf
mov
xchg
lret
push
sbb
sub
mov
jl
cmp
push
call
scas
enter
xchg
jecxz
jge
xor
mov
das
test
int
pop
jb
shll
sbbl
jb
test
xor
jb
push
mov
std
push
scas
pop
fwait
xchg
jmp
dec
mov
repnz
subl
hlt
insb
xor
les
aad
mov
rorb
out
lods
cmp
inc
int3
xchg
inc
cmp
cltd
pop
dec
jbe
xchg
ret
pop
jecxz
fstpt
lock
mov
cmpb
push
imul
out
push
adc
xor
jmp
mov
gs
out
mov
inc
cmp
fisubl
and
or
jo
fstpt
aas
lcall
cs
add
cmp
push
mov
fwait
cld
cwtl
adc
mov
mov
cs
adc
mov
pop
fisttpll
mov
add
sar
test
pop
pop
adcl
ret
pop
push
inc
mov
addr16
dec
stc
aas
jb
iret
out
push
mov
xchg
mov
imul
and
nop
sbb
lret
sub
xor
mov
mov
inc
fs
testl
adc
mov
adc
stos
add
nop
dec
jle
inc
rolb
pop
mov
mov
cmp
repnz
mov
fstps
cwtd
stc
std
pop
or
fnstcw
shrl
adc
sahf
in
out
adc
and
pop
xchg
bound
sub
outsl
mov
stos
mov
add
cltd
xchg
inc
test
je
add
repz
movsl
in
ds
nop
lcall
out
cmp
xor
cmpsl
insb
add
fldcw
arpl
xor
and
mov
or
mov
pop
mov
cmp
mov
lret
es
sti
lods
outsl
rcrb
mov
test
jp
push
out
jbe
out
dec
cld
cmp
sbb
pop
enter
mov
add
cmpsb
push
jp
pop
adc
imul
sahf
pop
inc
or
loope
mov
test
aam
enter
leave
loope
inc
iret
into
pusha
mov
fscale
mov
nop
sbb
cwtl
clc
cwtl
test
jp
lret
mov
cmp
shrb
shrl
fldt
xor
lahf
xorl
mov
mov
mov
adc
sbb
jnp
jne
movsl
add
sbb
iret
nop
xor
add
cmpsb
imul
fstps
pop
outsl
sbb
cmp
lods
lock
jg
frstor
loop
into
sahf
mov
in
cli
xchg
push
or
scas
jmp
sub
jbe
test
ss
ret
jns
push
aam
jmp
jmp
cltd
in
je
into
aam
sbb
xor
mov
lret
add
dec
jecxz
shrl
mov
sti
iret
psubsb
daa
pusha
dec
aam
movsl
and
es
and
cmc
and
and
jl
push
gs
fldcw
mov
pop
rcll
dec
rorl
cvtps2pi
push
jno
xor
push
cmpsl
fcmovb
mov
pop
dec
pushf
add
mov
out
xchg
inc
and
and
movsb
clc
sbb
lods
pop
test
cli
adc
mov
sub
ret
lahf
lret
push
pop
rcrb
jecxz
cmp
enter
testb
seta
movsb
testb
inc
mov
mov
cltd
les
loopne
aas
pop
and
daa
loopne
jmp
add
push
vphaddwd
in
and
sti
mov
mov
xlat
pop
and
cli
xchg
add
aas
jbe
dec
in
pusha
mov
icebp
mov
rcrb
sbb
sbb
aaa
loopne
inc
adc
iret
in
mov
imul
seta
into
fimull
jns
iret
push
xor
shlb
imul
cmc
inc
add
ja
outsl
jbe
shll
fisttpl
test
inc
and
mov
mov
inc
push
add
xchg
pusha
into
les
call
inc
xchg
sbb
mov
and
es
push
cmc
push
fsubrs
flds
xchg
sbb
jo
push
rcrl
sub
fs
int3
push
mov
xchg
and
out
flds
lret
lock
jg
mov
daa
scas
dec
jbe
jle
clc
pop
int
fldenv
mov
stos
aam
jns
stos
mov
jp
lods
inc
mov
sahf
sub
jns
loope
andb
enter
loope
notb
mov
fdivrs
loop
add
and
dec
cmpsl
fsubrl
lret
es
iret
shll
test
imul
stos
ljmp
sub
in
pop
shlb
cmp
in
lods
xor
add
xchg
cmp
mov
or
ja
mov
test
push
mov
imul
jle
inc
push
pop
stos
dec
mov
inc
sbb
pop
out
dec
push
or
cmpsl
dec
shrl
cmpsb
inc
inc
stos
or
or
rcrl
jle
xchg
sbb
mov
mov
xchg
outsb
aas
loop
cmp
mov
mov
aaa
ljmp
fsubrs
pop
and
out
cmp
mov
ja
and
push
into
add
subb
inc
test
mov
xor
xchg
pusha
sub
bound
sub
in
jne
xor
inc
pop
cmp
sub
jne
adc
shlb
negl
pop
sub
inc
outsl
sti
dec
subl
mov
sbb
enter
mov
int3
outsb
mul
push
mov
mov
xchg
pop
jno
mov
add
gs
mov
pop
xor
test
mov
mov
mov
hlt
stos
cs
loope
xchg
sarl
mov
aam
sarl
inc
loop
inc
xchg
outsb
roll
pop
mov
mov
xchg
sbb
iret
cmp
inc
lods
lret
and
sub
adc
loopne
inc
out
mov
mov
ret
jmp
jg
push
push
jge
xor
xor
jp
test
loopne,pt
cld
mov
test
sub
sbb
insb
xchg
pop
mov
stos
std
xor
aaa
lahf
push
roll
popa
into
les
mov
adc
pusha
test
ret
lret
xchg
arpl
mov
fcomip
movd
mov
xor
dec
mov
cmp
ret
lret
pop
inc
and
adc
lret
or
push
jb
jo
and
mov
cmp
mov
mov
movsl
xchg
insl
andl
ficomps
or
fldcw
push
rcll
loope
inc
shll
inc
leave
push
jecxz
mov
pop
adc
mov
jo
dec
fwait
into
scas
je
push
inc
mov
jnp
mov
out
in
xchg
push
aad
jnp
add
ret
pop
and
nop
rorb
ss
ret
pop
or
cmp
aam
lods
call
mov
add
sbb
sub
ret
stc
movsb
lea
sarb
add
and
subb
or
clc
and
stos
sub
fldt
xchg
fildl
jno
xchg
mov
push
and
or
add
test
jo
cmpsl
test
outsb
add
fists
inc
test
pushf
fcoml
xchg
sahf
xchg
cmc
pop
inc
int3
mov
pop
fwait
xchg
icebp
add
jnp
add
pusha
jae
dec
and
dec
popl
sub
adc
imul
pop
shll
sub
rclb
cwtl
jno
adc
lds
dec
jg
mov
mov
out
or
pop
cmp
jle
js
push
out
hlt
pusha
adc
fisttpll
sub
inc
insl
mov
pop
push
cld
mov
sbb
idivl
out
cmpsl
sbb
shll
arpl
jne
enter
outsl
mov
and
nop
nop
sbb
int3
fisubrs
pop
sub
or
fs
jo
and
push
push
js
push
mov
adc
mov
daa
in
and
aam
mov
dec
add
faddl
stos
inc
in
outsb
xor
clc
divl
test
movsl
cmpsb
ja
pop
rolb
adc
jbe
inc
and
js
mov
cmp
in
jne
loope
sbbl
mov
call
idivl
push
push
xchg
lret
dec
xchg
jae
and
ljmp
mov
mov
jne
jbe
mov
mov
ds
int
daa
in
popf
inc
sbb
pop
pop
loop
dec
sbb
mov
nop
sbb
sbb
jg
jg
jns
push
and
xchg
inc
xchg
leave
sub
out
push
negl
push
pop
and
jo
or
outsb
mov
mov
scas
ficoml
jecxz
cmp
adc
insb
ret
mov
adc
ds
dec
or
call
iret
jae
jae
pop
xchg
daa
cmp
xor
clc
mov
cmp
jo
xor
sub
cmc
or
cltd
cmpsl
inc
or
jb
and
sbb
adcb
adc
add
outsb
xchg
lea
mov
push
xchg
sbb
xchg
push
or
dec
push
mov
sbb
sub
xchg
or
mov
cltd
mov
mov
dec
iret
push
sbb
dec
sbb
inc
into
stc
inc
xchg
enter
cmp
mov
loop
idivb
push
cwtl
rcr
push
fs
popf
adc
clc
or
xor
and
test
dec
into
jo
notb
movsb
add
adc
cmp
movsb
adc
mov
fucomi
add
mov
and
lods
inc
or
scas
cltd
jns
pop
ss
push
jle
xor
clc
lcall
push
fcoml
mov
or
mov
inc
mov
test
push
add
mov
rorb
stos
push
mov
repnz
in
in
jge
mov
fisttps
test
xchg
movl
lahf
jl
insb
mov
stos
sub
jo
mov
and
enter
hlt
daa
pop
mov
inc
test
out
mov
jb
data16
sbb
bound
xchg
fs
clc
jo
or
je
fcoml
in
inc
in
sbb
hlt
dec
cld
cmp
in
sub
xchg
cld
mov
repnz
dec
mov
sub
cmp
sub
outsb
dec
lcall
in
jns
jg
dec
jns
sub
cwtl
push
insl
pop
mov
dec
xchg
cmp
dec
sahf
or
cmp
lds
dec
mov
sub
fs
xchg
cwtl
iret
inc
sub
xor
fistl
jge
sub
pop
lea
dec
fistl
imul
popf
and
lret
shll
pop
jb
mov
test
sub
push
inc
sbb
stc
cwtl
mov
mov
stos
add
orl
dec
push
ljmp
add
mov
sahf
dec
sbb
repz
mov
pop
sbb
pushf
out
or
cs
imul
dec
ja
iret
jo
adc
adc
addr16
int
push
adc
aas
stos
fld
mov
lcall
loop
aas
sbb
push
sbb
xlat
or
cmp
push
cmc
sub
pop
les
jecxz
cmp
jno
inc
xor
push
cmpsl
add
enter
mov
cmp
ficoml
xlat
hlt
adcb
int
stos
incb
sub
xor
cmp
addl
pushf
mov
add
lret
fwait
icebp
dec
stc
sub
jle
pop
mov
xchg
and
andl
fdivl
popa
jmp
stos
dec
aad
shl
adc
nop
and
jbe
or
movsb
iret
push
xchg
cld
lret
adc
or
xchg
call
jae
int
into
xor
xchg
lock
movsl
clc
adcb
subl
outsl
sbb
aad
xchg
repnz
mov
xchg
adc
test
xchg
mov
xchg
sbb
das
andl
jecxz
mov
dec
jmp
loopne
push
xchg
ljmp
int3
leave
popf
and
or
push
xchg
xor
mov
mov
dec
dec
xor
jb
stc
xor
dec
jns
and
sbb
mov
sbb
sbb
loopne
call
negb
sahf
stc
push
cmpsl
cli
sbbb
sbb
push
leave
jbe
pop
jb
add
xor
pop
sahf
xchg
notl
aas
notb
negb
adc
pop
negb
lcall
enter
scas
btsl
jo
insl
movsb
fldenv
call
adc
jb
sbb
adc
fidivrs
sbb
sbb
in
scas
sub
loop
ret
ljmp
rcrb
lock
addr16
in
jne
rclb
testb
out
mov
mov
push
fldl
aas
lret
in
jo
pop
xchg
ficoms
jb
lret
adc
push
adc
push
daa
or
notb
xchg
sub
es
cli
dec
nop
in
push
leave
pop
jp
pushw
fsubs
xchg
repz
movsb
adc
cmpl
rol
push
negb
push
aam
rclb
minps
out
cs
adc
js
inc
xchg
or
stos
push
call
or
cmc
cs
jb
and
lds
inc
jo
imulb
mov
sub
lds
sar
mov
and
inc
jno
in
dec
imul
jle
dec
inc
outsl
imul
scas
test
xchg
ljmp
addb
cmp
mov
adc
mov
jl
mov
daa
subl
cmp
add
pop
cmp
nop
and
dec
call
in
je
sbb
inc
jae
pop
lret
into
and
insl
cwtl
loope
iret
sub
lea
mov
cmp
out
jo
cs
hlt
pop
jb
dec
inc
inc
scas
xchg
clc
push
xchg
mov
addr16
jns
xor
icebp
adc
loopne
mov
cmovae
sbbb
test
out
cmpsl
mov
cmc
jge
and
aaa
or
pop
mov
push
xchg
dec
cmc
pusha
aas
loope
test
mov
or
notl
enter
jg
xchg
cmp
pop
lods
in
daa
inc
popf
clc
movsl
lock
push
cmp
add
push
shr
faddl
cmc
call
in
and
sbb
push
out
aam
mov
cmp
mov
push
mov
out
and
repnz
in
inc
scas
mov
repnz
int3
ret
movl
push
fwait
cs
rolb
mov
bound
or
ret
cld
daa
scas
popa
movb
push
mov
mov
pop
es
icebp
jge
cmp
add
in
cltd
adc
leave
add
cltd
in
inc
sahf
ficoms
jmp
push
daa
jb
and
push
push
test
insb
clc
pop
arpl
arpl
xchg
lret
xchg
lods
cmp
daa
jbe
xor
lcall
shl
adc
jo
into
fstpt
or
fwait
je
pop
or
dec
sahf
icebp
jns
mov
in
call
cmp
cmp
xchg
dec
pop
or
mov
sar
pop
scas
stos
fwait
pop
dec
das
test
cs
cwtl
adc
fisubl
sub
ja
stc
or
pop
lahf
jge
ret
mov
sbb
pop
inc
decl
cmp
fdivl
test
loop
ljmp
mov
mov
out
push
mov
mov
pop
xor
outsl
es
mov
leave
xchg
cli
pushf
and
sub
scas
sahf
es
cmp
repnz
inc
js
out
xor
mov
xor
pop
xchg
pop
jbe
push
lcall
mov
push
lds
out
in
sti
or
add
loop
ss
mov
lea
mov
mov
shll
sahf
nop
hlt
push
test
pusha
aaa
add
arpl
aaa
fldt
movsb
std
lcall
pop
enter
mov
add
sbb
arpl
mov
roll
add
mov
xor
dec
and
dec
cld
cmp
test
aaa
in
push
iret
and
fiadds
imul
adc
sbb
pop
mov
mov
mov
pop
mov
pop
cs
mov
or
fiaddl
dec
sti
add
arpl
out
cltd
aad
dec
and
cmpsl
pop
aam
mov
fisttps
dec
lods
adc
mov
add
dec
aam
loope
pop
movsb
inc
into
sub
test
sub
cmp
fisubrl
sbb
sahf
movsb
inc
cld
daa
scas
stos
jae
test
xor
push
dec
xlat
cmp
addr16
push
out
cmpsl
xor
adc
xlat
mov
push
sub
cmc
jge
xlat
mov
inc
lahf
mov
faddl
in
clc
mov
lret
insl
cmc
inc
mov
mov
jnp
lret
xor
leave
pop
jp
jb
pop
imul
or
push
int
cltd
leave
lret
or
sub
jno
inc
cltd
out
lea
das
and
mov
xchg
std
lahf
call
xchg
fisubrl
sti
xchg
xchg
adc
in
mov
fsub
sbb
mov
mov
int3
sub
lods
jl
inc
sbb
sahf
std
mov
sbb
jne
rcrl
dec
cmp
int3
shll
pop
incl
loope
or
fldl
repnz
and
push
fisubl
xor
xor
leave
add
inc
mov
out
gs
out
arpl
push
mov
inc
into
push
add
cli
imul
dec
sarb
pop
pushf
xchg
in
je
xor
daa
sbb
jge
sahf
cmpsb
jle
gs
daa
pop
pop
pusha
mov
add
inc
dec
rcr
add
lcall
scas
fs
loop
loope
mov
stc
inc
repz
inc
repnz
call
cmp
mov
dec
mov
cmc
jge
movsb
mov
js
jl
add
arpl
push
repnz
mov
addr16
mov
fisubs
dec
and
scas
pop
incb
out
insl
pop
js
in
adc
les
mov
sbb
pop
popa
add
leave
inc
sbb
ficompl
adc
dec
push
xor
mov
mov
test
inc
push
or
sbb
loop
or
lds
sub
sbb
dec
sti
cmp
jbe
dec
and
dec
stos
add
loope
js
nop
xor
aam
idiv
mov
push
scas
dec
dec
cmp
push
cmpsb
stc
sbbl
sbb
js
jbe
cmp
mov
and
fwait
cmp
int3
push
and
adc
addr16
xor
mov
jmp
jg
out
cmp
insb
push
ficomps
pop
mov
dec
mov
add
mov
cmp
fbstp
xchg
aad
sub
push
pop
xlat
mov
push
in
enter
sbb
sub
mov
mov
xchg
or
out
pop
xchg
ljmp
aam
xchg
and
inc
dec
inc
mov
lods
lods
fstl
sub
xor
repnz
pop
fs
mov
cltd
push
cmp
jb
lods
call
inc
pop
push
xor
fdiv
mov
orl
popa
clc
not
scas
sub
sti
int
mov
cmpsl
inc
sbb
scas
mov
out
cmp
cs
xorb
and
dec
shr
fcoms
xchg
sbb
ret
add
leave
sbb
sbb
call
clc
ret
sub
mov
jge
xchg
andb
mov
sub
shrb
jns
icebp
clc
les
jnp
push
cmpsb
xchg
fimuls
das
xor
daa
lods
fcomps
push
sub
and
daa
into
mov
mov
scas
pop
sub
and
dec
lods
cmp
lock
dec
or
dec
jl
mov
mov
pushf
add
fisttps
mov
dec
jo
sbb
push
fbstp
sti
or
shr
pop
mov
cli
sub
les
push
add
sti
push
in
or
push
xchg
lods
call
push
imul
rcrb
push
jmp
jge
or
or
cmp
jb
push
movsb
sub
outsl
xchg
mov
adc
insb
je
leave
idivb
dec
movsb
in
cmp
testl
jo
test
ficoml
xor
idivb
imul
xchg
xlat
pop
das
test
cmp
jo
push
and
repnz
xchg
sbb
jb
and
push
stc
lret
cli
or
loopne
jo
shll
js
sbb
fdivl
pusha
sub
out
iret
xchg
pop
inc
adcl
jl
push
ja
jg
push
mov
add
and
loopne
cmp
dec
testl
sub
roll
enter
jl
push
cs
mov
std
pop
cwtl
nop
lock
mov
cli
mov
cmp
jo
loopne
gs
mov
bound
adc
pop
sbb
pop
scas
out
and
hlt
mov
out
inc
pop
loope
xchg
mov
clc
clc
fs
cwtl
and
enter
test
xlat
xchg
les
clc
lcall
xor
pop
xchg
xchg
out
addr16
pushf
decl
js
mov
xchg
mov
lret
js
push
xor
sub
push
ficoms
mov
inc
and
aad
and
shlb
jecxz
scas
out
and
inc
xchg
pop
xor
sbb
data16
popa
sar
inc
outsl
sub
leave
mov
sbb
and
jle
aaa
cli
pop
jae
fisubrl
jbe
int3
clc
and
cld
in
cmp
pop
inc
aaa
test
or
out
dec
mov
repnz
sub
stc
jecxz
clc
inc
jmp
fimull
cltd
aas
mov
adc
outsb
xor
int3
test
push
test
inc
test
inc
orb
stos
insl
sbb
pop
popf
xchg
jmp
dec
stos
insl
sbb
mov
add
xor
bound
dec
sbb
mov
inc
xor
cmp
pop
cmpsl
xor
dec
xlat
gs
jecxz
into
xor
xchg
fisubs
clc
orb
dec
sarl
inc
addr16
cmp
mov
lock
or
popf
xchg
lea
jbe
pop
push
les
jle
aad
movsb
fs
dec
inc
into
pop
test
add
movsl
imul
mov
cmp
bound
ret
mov
stos
mov
jp
ja
and
mov
dec
fwait
and
or
and
mov
or
bound
cmc
push
cmp
mov
inc
es
sbb
js
lds
subb
and
inc
je
mov
enter
scas
ss
fstpt
into
cmp
mov
outsl
lret
je
imul
mov
cs
mull
test
lds
subl
pop
incl
in
push
aaa
jg
stos
add
rcl
mov
cld
sbb
sub
addb
fistps
pop
ja
sub
rclb
push
cmpsb
push
lahf
sbb
aad
orl
sub
add
lds
aaa
stos
loopne
aam
dec
andb
sub
sbb
es
aad
xor
std
push
lret
fnstenv
dec
sbb
jb
mov
ds
cwtl
into
addr16
ja
ljmp
cmp
sbb
call
aam
scas
xchg
xchg
cmp
pop
call
mov
xchg
cmp
push
jbe
jae
stc
loope
frstor
into
push
aad
pop
insb
jp
mov
add
daa
out
cltd
push
push
dec
bound
dec
sub
pop
out
popf
test
enter
nop
mov
or
or
add
inc
jb
lret
xchg
xor
mov
push
movsb
sub
jne
xchg
cs
pop
test
je
out
jbe
push
mov
sub
ss
mov
lds
mov
mov
lret
in
mov
mov
jmp
sbb
shlb
ss
dec
lret
dec
aam
jae
addl
sti
fdivrl
push
rorb
fnstsw
fs
fwait
push
ret
movsl
clc
adcb
cmp
subl
imul
push
mov
cli
or
rcrb
cmp
sub
pop
fadds
jge
mov
into
das
int3
pop
xchg
cmp
and
dec
aam
ret
ss
shlb
adc
out
add
fdivr
xchg
sub
mov
inc
or
rclw
pop
pop
aam
add
lock
mov
adc
loope
push
pop
loopne
cwtl
out
lcall
insl
mov
aam
mov
push
into
in
push
sub
mov
sub
insl
and
inc
inc
frstor
mov
std
cmp
sahf
cli
test
mov
aas
dec
in
das
mov
mov
cli
add
cmp
loope
pop
lods
loopne
pop
cltd
add
push
jl
sbb
and
fucomip
aad
dec
pop
adc
mov
cs
aaa
ja
mov
sarl
arpl
ja
mov
dec
xchg
popa
push
sbb
aaa
mov
popf
and
mov
data16
ljmp
mov
sbb
sbb
jnp
xchg
out
cmp
jo
int
inc
xchg
aad
sub
cs
cmpxchg
and
repz
mov
popa
iret
sub
frstor
ss
lods
pop
and
popa
out
inc
and
popa
adc
adc
add
pusha
mov
inc
int3
mov
ljmp
imul
cltd
mov
or
xchg
sbb
pop
mov
ds
and
sub
clc
push
sar
flds
and
aad
cmovb
mov
sbb
pop
aad
aam
mov
ss
popf
loop
rcll
sbb
cmpsb
stc
cmp
xchg
loopne,pt
call
adc
push
insl
icebp
fldenv
mov
xchg
call
xchg
mov
add
std
jmp
pushf
ja
rcrl
xor
dec
sbb
lock
lret
and
sub
fbstp
lods
xor
leave
jno
sti
popf
and
jl
inc
leave
mov
test
jb
xor
outsl
inc
clc
lcall
stos
cmc
mov
rolb
les
iret
ljmp
xor
adc
adc
dec
jnp
das
inc
cli
bound
stc
sbb
push
mov
jecxz
push
sub
jbe
mov
inc
test
outsb
pop
out
mov
sub
push
pop
xlat
scas
push
lods
pop
cltd
xchg
fsts
imul
ja
test
xor
and
xor
cs
lods
adc
outsl
test
cvttps2pi
and
xor
mov
xor
es
notb
sti
inc
and
in
xor
mov
in
inc
add
push
sbb
mov
sbb
fimull
sub
push
xorb
in
inc
gs
clc
adc
sub
jg
cmpsl
push
xchg
lahf
sbb
inc
push
cltd
cwtl
ja
ret
push
and
jg
push
and
and
mov
loope
push
dec
push
rcrb
xor
fsubs
xchg
add
adc
daa
in
shlb
shlb
xorb
xor
cmp
sub
into
fisttpll
test
cmp
sub
mov
movsb
in
cmp
xor
xor
movsl
outsb
add
push
fbld
popa
loopne
mov
popa
mov
add
loop
push
pop
ja
sub
test
outsb
mov
xlat
popf
sbb
nop
sub
or
mov
sbbb
sti
push
add
fcompl
jb
stos
insl
es
cmp
cld
imul
outsl
lds
jnp
jnp
push
xor
add
inc
add
arpl
fcmovnb
out
and
mov
lahf
push
jb
lods
add
push
dec
xchg
cmp
xor
movsb
idivl
push
cmp
and
outsl
std
mov
push
pusha
mov
cmp
movsb
push
cmp
jae
sub
lea
sarb
scas
push
push
movsb
mov
mov
jle
stos
inc
mov
movb
test
repz
scas
loop
pop
dec
mov
lret
push
pop
loope
mov
sub
mov
push
stc
std
jae
sahf
pop
mov
aam
test
aam
addr16
adc
cmp
notb
push
lcall
mov
sbb
mov
lds
lcall
push
cmp
cmc
sub
sub
mov
roll
jp
dec
sahf
jmp
mov
push
add
pusha
lods
mov
rclw
lret
cltd
inc
mov
arpl
cmc
popa
iret
jno
in
ret
ljmp
dec
jle
fwait
and
cmp
adc
mov
jge
in
jb
inc
jecxz
pop
lahf
or
das
or
xchg
adc
jg
cmpsb
rcrl
sbbb
cmpsl
das
rorb
leave
pusha
mov
mov
aas
inc
outsl
mov
shlb
arpl
add
push
sub
mov
or
and
xor
and
jae
setbe
inc
xor
push
sub
mov
ficompl
xchg
jbe
jle
shrb
lods
xor
adc
js
arpl
mov
out
imul
fmul
pop
mov
cmp
inc
int3
mov
xchg
stos
pop
mov
fstpl
push
fld
sbb
movsl
sub
lds
loop
test
jge
call
cmpsb
push
or
jge
push
hlt
add
in
sub
sbb
loope
nop
out
pushf
cmp
mov
idivl
dec
sti
dec
orl
gs
fnstenvs
cmpsb
out
and
jl
sub
repz
dec
mov
sbb
or
xchg
pop
out
inc
push
repnz
jle
inc
imul
pop
jecxz
int3
ret
mov
stc
mov
in
scas
pop
popf
addb
cmc
xor
jmp
push
outsl
inc
cli
fs
lret
sub
iret
lahf
jns
cmp
sub
add
sti
push
xchg
mov
xor
lahf
daa
in
data16
pop
leave
push
out
mov
sbb
repnz
lods
lock
es
insb
hlt
out
pushf
movsl
mov
sbb
nop
jecxz
cmpps
mov
xchg
xor
mov
dec
pop
xchg
mov
out
enter
cmc
int3
cmpsl
mov
push
cmpsl
mov
sub
js
jb
push
sub
insb
mov
sbb
repz
cmpsl
add
inc
jno
adc
insl
std
push
scas
pop
lcall
xchg
mov
cmp
pop
fnstcw
outsb
shl
push
dec
fistps
lahf
fisttps
dec
arpl
cltd
mov
and
arpl
pop
iret
jle
jnp
add
pop
xchg
adc
dec
cmp
aam
sbb
cmpsl
loop
push
sub
sar
pop
in
aam
stc
pusha
sub
add
lea
sub
jnp
cld
clc
ret
xchg
add
add
lods
push
jg
jecxz
cmp
xor
aam
mov
sahf
leave
push
out
xchg
insl
xchg
bound
push
adc
sbb
arpl
mov
jge
notl
nop
pop
fucomp
pop
lahf
mov
inc
lea
push
or
mov
pop
pop
sti
pop
daa
mov
popf
adc
dec
xor
dec
adc
outsb
sub
lret
push
fistpll
arpl
fildl
pop
dec
in
jne
clc
jecxz
ljmp
ret
fimuls
aad
dec
aam
dec
clc
adc
mov
ljmp
xchg
push
jl
push
xchg
daa
scas
jne
or
shr
repz
mov
xchg
stc
dec
pushf
and
std
push
xorl
push
repnz
into
mov
cmpsl
inc
pop
es
cmc
and
into
add
testl
mov
pop
xchg
xor
adc
mov
pusha
enter
lds
push
and
pop
and
sub
in
lods
mov
mov
jl
adc
pop
int
negl
aas
ret
push
test
cs
inc
cltd
or
dec
push
inc
test
jo
dec
push
outsl
jnp
lods
xor
int
aad
sbb
mov
mov
cmpsl
add
xchg
mov
push
xor
dec
jecxz
hlt
in
or
aad
cmpsb
jecxz
pop
mov
cmp
and
aad
mov
adc
and
lret
aam
scas
fsts
pop
xchg
out
sbb
ficoml
mov
cmp
shrb
testl
pop
mov
fistpll
lock
push
xchg
insl
jecxz
in
jno
shlb
pop
xchg
lahf
cli
cmp
xchg
out
xchg
and
rclb
push
pop
addr16
jae
and
verr
in
push
daa
call
sub
and
jp
or
mov
mov
add
arpl
sbb
call
int3
sar
fnsave
aaa
adc
pop
sbb
call
jg
mov
pop
mov
mov
mov
addr16
es
arpl
or
loope
mov
mov
add
mov
inc
mov
jge
lea
ljmp
mov
adc
push
cmpsb
jge
jo
ljmp
loopne,pn
fidivl
insl
mov
pop
enter
aad
jge
jbe
add
push
lods
or
in
iret
mov
xchg
pushf
adc
push
sbbl
icebp
psrlq
push
mov
les
int3
test
xchg
bnd
fsts
cmp
jg
outsb
notb
fwait
mov
push
les
inc
ret
jge
sbb
jae
mov
pop
add
scas
push
movsb
xlat
mov
ja
mov
add
ret
out
sub
jnp
dec
into
pop
and
scas
mov
xchg
mov
push
sub
jecxz
jne
cmp
mov
xor
add
enter
int3
xchg
movsb
push
nop
in
rcrl
adc
xor
pop
mov
fs
cld
imul
outsl
aas
dec
mov
lahf
jns
je
and
flds
sub
and
or
dec
jns
sub
lods
inc
mov
sub
xchg
icebp
xor
dec
sbb
jnp
mov
test
and
mov
pusha
sbb
or
mov
and
cmc
jecxz
mov
imul
and
sub
lods
inc
cltd
hlt
xor
mov
cmp
cmp
inc
ss
je
call
and
xor
test
das
sti
add
and
xchg
lret
push
xchg
xor
insb
push
pop
xor
jg
outsb
jecxz
sub
inc
cmpl
out
test
insl
shl
test
in
testb
test
dec
sbb
push
rorb
jle,pn
adc
mov
in
inc
mov
pop
fimuls
in
lods
or
mov
in
xor
inc
pop
xchg
jmp
punpckhbw
popa
add
fdivrs
loope
push
hlt
inc
jp
jne
aaa
leave
pop
inc
and
xchg
push
cmpsb
insb
jecxz
jns
cmpsb
arpl
xchg
sbb
xchg
scas
stos
in
mov
inc
xor
or
mov
adc
inc
cwtl
lret
fbstp
mov
xor
push
push
and
sub
or
movsl
inc
iret
sbb
add
adc
cmc
aaa
fidivrl
rcrl
daa
scas
ret
aaa
orl
data16
mov
icebp
dec
stc
imul
sub
push
das
divb
insl
out
pop
pusha
call
and
mov
jg
xor
sub
sahf
lcall
lcall
fsts
xchg
scas
aam
push
sbb
imul
aam
mov
cwtl
push
cmpsl
fisubl
dec
flds
push
lea
fwait
mov
push
fisubrl
jl
push
pop
or
fs
push
xchg
out
rcrl
pop
mov
in
fcmovbe
xchg
or
xchg
cmc
xor
in
sub
jns
jae
fwait
jb
lcall
sub
ss
repz
pushf
out
ja
jnp
and
jb
push
addr16
mov
add
ljmp
mov
mov
pop
sbb
lods
add
std
pop
fidivs
outsl
or
cs
loope
repnz
mov
adc
aas
flds
insl
sub
daa
jmp
xor
add
push
fwait
pusha
add
ja
sub
xlat
into
add
mov
mov
shl
icebp
dec
jp
outsl
repz
push
aas
xchg
in
inc
jae
sti
adc
mov
fadds
mov
sti
cwtl
lret
adc
adc
icebp
or
or
inc
bound
pop
pop
movsb
imul
dec
xchg
cmp
loopne
js
call
mov
xchg
push
adc
jo
movsl
jecxz
mov
mov
scas
mov
mov
cmp
in
in
dec
jmp
loop
xchg
cld
lea
dec
mov
fcoml
pop
lods
loopne
dec
lock
js
cmp
ja
int
dec
mov
xor
dec
sub
lods
pop
jmp
push
loop
mov
in
jmp
add
xor
mov
pop
gs
and
negl
lock
call
aas
loope
add
int
mov
push
sub
jp
push
enter
movsb
stos
out
add
dec
mov
cmp
push
incb
jl
and
push
stos
pop
loopne
lds
fdivl
push
stos
push
mov
xor
push
add
xor
jno
push
insl
enter
add
mov
mov
dec
movsl
add
cs
das
fdivl
test
pusha
loop
cmp
push
xchg
xchg
jno
pop
inc
orl
int
loope
lods
ljmp
dec
push
ljmp
cwtl
and
mov
inc
iret
lock
and
iret
cli
test
inc
add
cmp
lcall
ret
rolb
push
ret
sbb
mov
sldt
punpckldq
ror
mov
jecxz
inc
leave
or
je
pusha
lods
leave
inc
fisttps
imul
cmp
testl
mov
mov
xchg
psubsw
push
lds
int3
imull
mov
ret
sbb
dec
ror
sbb
fisubl
pop
ss
push
lods
negl
adc
jg
jge
stos
xchg
xchg
mov
in
mov
inc
and
pop
xor
adc
inc
int3
xchg
and
frstor
test
cs
cltd
mov
add
pushf
dec
push
and
adc
shrl
push
inc
lea
das
mull
pusha
stos
mov
rcll
lret
inc
popf
dec
mov
mov
sbb
cmpsl
mov
xchg
outsl
jg
add
in
sbb
inc
xor
sub
cltd
fmull
jmp
loopne
lcall
in
xchg
or
push
fmulp
or
jae
sbb
ret
pop
daa
leave
lock
shrl
mov
sbb
pop
or
and
mov
pusha
call
mov
xchg
pop
and
push
lods
sbb
mov
jb
mov
mov
jno
fidivrl
sbb
hlt
inc
rclb
and
cmpsb
jl
push
clc
jmp
out
cmp
xchg
pop
xchg
add
mov
sahf
fcom
ja
or
ret
int3
mov
add
and
xchg
push
jbe
sub
bound
lods
xor
or
sbb
and
loop
je
daa
cmp
rcrb
push
lods
flds
sub
xor
arpl
and
jp
sub
cs
pop
cmpsl
jle
mov
dec
test
xchg
sub
loop
pop
ret
ss
int3
and
add
ds
pop
icebp
add
adc
sub
es
aaa
ljmp
jno
cmpsl
aas
push
lock
out
cld
ret
in
push
push
das
or
mov
mov
add
mov
or
mov
add
bound
mov
pop
dec
stc
sub
mov
xor
ss
aad
jge
push
cmp
xor
aad
jge
jmp
push
movsl
in
ds
out
pushf
and
out
and
ljmp
inc
mulb
jae
ja
mov
xor
dec
test
ljmp
or
rclb
aam
cmp
jg
mov
mov
inc
fs
test
mov
ss
sub
ret
sbb
cmp
mov
and
stos
mov
ret
je
ss
inc
sahf
dec
xchg
out
mov
fsubrs
mov
mov
pop
mov
mov
pushf
lcall
inc
mov
ret
or
or
into
cwtl
repz
movsb
push
jl
syscall
imul
jmp
mov
mov
ds
push
call
xor
mov
push
test
shrl
ficomps
push
imul
bound
nop
clc
sub
and
das
cs
out
aam
dec
int3
sahf
les
movsb
iret
and
dec
xor
leave
jbe
jnp
mov
scas
push
iret
inc
sub
daa
scas
inc
pop
mov
jp
cwtl
ret
push
push
pop
pop
outsb
ds
nop
scas
ss
cmc
inc
and
loope
or
inc
jecxz
inc
mov
in
and
cmp
mov
int
dec
xchg
push
mov
jmp
int3
mov
push
lods
jo
cmpsb
gs
jp
sbb
sahf
jnp
pop
sub
pop
stos
xor
or
in
jae
mov
movsl
sub
repnz
jnp
mov
aam
popa
mov
das
pminub
cs
mov
sbb
imul
fwait
in
push
enter
jne
inc
and
sar
sub
ljmp
jbe
icebp
and
stos
pop
scas
push
inc
fnsave
js
addr16
cmp
fdivl
push
fnstenv
fidivl
or
or
fwait
loopne
jb
test
jns
cli
dec
pop
test
icebp
aad
mov
ds
sti
and
fidivl
push
xchg
lcall
adc
jae
mov
mov
in
jnp
push
cmpsl
ficoml
jno
scas
out
test
mov
jge
dec
inc
pop
cltd
adc
jmp
icebp
lahf
aam
cli
xor
cwtl
ljmp
mov
inc
lcall
and
jle
adc
cmp
or
cwtl
icebp
fldenv
push
pop
xchg
in
sbb
insl
lock
imul
add
jle
cli
cmp
xchg
out
ret
pop
fs
stc
cmp
mov
lea
adc
pop
mov
push
mov
imul
stos
add
in
inc
sahf
ficoms
and
data16
roll
add
xchg
push
stos
out
lcall
xor
and
or
xor
fiaddl
push
mov
fildl
mov
add
inc
enter
pop
jb
pop
jns
sbb
sub
das
mov
lea
mov
jbe
adc
or
out
sub
lcall
mov
inc
sbb
sbb
adc
mov
into
and
dec
mov
sbb
out
adc
cli
adc
mov
dec
and
insb
ror
sbb
orb
fistl
test
movsl
in
lret
imul
arpl
insl
in
lods
dec
xlat
sub
jnp
lock
mov
call
xchg
sub
ret
sbb
bound
cmp
jne
lret
gs
sahf
outsl
push
pusha
orb
dec
orb
jb
mov
sbb
cmp
movw
fs
cmp
ljmp
cmp
mov
cmpb
testl
daa
ljmp
loop
icebp
xor
mov
jbe
xor
imul
add
or
andl
mov
out
ja
pop
fwait
in
aam
shr
add
fisubl
out
mov
loopne
daa
popa
sub
xlat
into
lcall
mov
dec
pop
or
or
test
shll
pop
ss
shlb
in
cli
pushl
mov
sbb
subb
popf
lcall
in
out
into
mov
orb
mov
rcll
lret
xor
std
inc
into
inc
pop
or
mov
push
push
mov
inc
outsl
test
frstor
or
mov
inc
int
cmpsl
mov
or
repnz
xor
mov
sub
pop
sub
or
or
cmpb
xchg
sbb
sub
xor
or
push
sub
sbb
notl
cli
cmp
sub
dec
xor
cli
cmp
cmpsb
dec
fwait
into
push
and
pop
mov
sbb
mov
enter
push
xor
jnp
les
ss
adc
sbb
loop
and
adc
cli
xchg
mov
faddl
data16
cmp
add
mov
push
cmpsl
inc
insb
xchg
ljmp
xor
aad
push
mov
xchg
jge
and
mov
js
insl
mov
lds
inc
jne
fdivl
mov
mov
repz
insb
inc
out
push
aas
clc
cli
dec
fwait
into
jmp
mov
movsl
clc
dec
shrl
aam
scas
xchg
movsb
inc
push
mov
in
push
mov
mov
push
addr16
push
cmp
add
mov
or
negb
pop
and
mov
std
bound
pushf
jmp
hlt
pushf
cmp
xlat
add
mov
jb
inc
cmp
in
mov
add
inc
int3
cwtl
out
dec
idivb
repz
xchg
jns
ds
adc
xor
addr16
xchg
add
rorb
dec
mull
jne
cld
js
into
cwtl
out
dec
mov
mov
test
out
xchg
aam
sub
sub
arpl
mov
dec
popl
mov
pop
outsb
push
jnp
outsb
add
loop
insb
push
xchg
sub
mov
out
adc
adc
pop
in
dec
outsl
and
repz
negl
jns
mov
gs
xchg
aad
adc
insl
enter
gs
fidivrl
inc
jno
sti
fwait
and
movsl
jbe
std
jb
adc
jb
pop
rcll
insl
ss
mov
pop
lahf
les
in
jle
inc
scas
fimull
xchg
out
int
dec
in
in
mov
pop
in
jbe
or
lds
lcall
ljmp
and
roll
pop
in
fs
sub
sti
test
test
add
and
xorb
in
leave
aaa
lcall
mov
pop
addr16
iret
jl
mov
mov
jge
cmc
jge
fisttps
cmp
shlb
pop
icebp
lods
mov
adc
orl
jp
fmull
pushf
jle
pop
xor
pop
jle
and
jb
jp
mov
lods
in
es
cmp
jo
dec
pop
bound
add
nop
cmpsb
mov
sbb
loope
jmp
fisttpl
outsb
mov
cmp
dec
fmul
cmp
inc
pusha
imul
xlat
add
xor
lahf
cs
lahf
cs
pop
lret
push
pop
sbb
call
add
pushf
repnz
int
sbb
sub
pop
out
sbb
sub
inc
clc
cs
lods
ljmp
xor
add
push
cmp
push
push
or
in
adc
push
jns
mov
cmp
xor
adc
cmpsb
cltd
and
loope
cmp
and
xor
dec
out
jbe
adc
les
cltd
shrl
movl
dec
push
push
popa
jno
js
or
ret
dec
mov
or
cli
mov
mov
mov
push
pop
cmp
out
xor
addr16
scas
lret
mov
mov
mov
js
sub
out
dec
imul
sub
insl
idivb
imul
sbb
push
enter
es
je
sbb
cld
sahf
es
mov
mov
nop
xlat
test
out
fwait
daa
scas
pop
and
mov
sar
push
movsb
sub
stos
mov
jle
mov
xchg
sbb
dec
shll
cmp
mov
inc
mov
test
inc
xor
push
ds
fisubrs
in
and
add
mov
xchg
rcrl
xlat
sub
jge
into
lahf
xchg
cmc
dec
cmpsb
dec
mov
pop
sub
jnp
ficompl
xor
pop
testl
cmp
jb
mov
nop
sbb
addb
lret
or
fadd
mov
pop
gs
sbb
sahf
or
inc
outsl
divl
jo
ret
push
dec
dec
test
pop
insl
ret
dec
xlat
jae
and
leave
loope
mov
arpl
lea
out
aas
xchg
lock
call
pop
jno
cmp
imulb
xchg
sti
mov
sub
cli
sub
inc
xor
iret
jbe
rorl
jge
int3
incl
push
test
and
lret
imul
xchg
lds
in
fsubrl
lds
jbe
push
mov
lret
dec
aad
sub
imul
sbb
push
inc
les
std
and
punpckldq
xchg
add
sti
pextrw
bsf
inc
pop
int3
fs
rcll
adc
rcrl
sbb
or
lea
lods
add
test
cltd
push
or
adc
lods
jno
aas
xchg
lds
and
push
fwait
mov
push
insb
mov
jge
inc
lret
lea
push
insb
xor
cltd
sbb
imul
dec
js
or
fs
push
std
mov
in
in
incb
sahf
stc
dec
mov
in
dec
movsb
adc
lock
aaa
pop
add
stc
add
adc
xor
ror
push
cli
mov
cmp
sub
push
in
bound
aam
call
stc
rcrl
scas
mov
jo
out
ja
mov
mov
mov
push
cmp
lock
cs
hlt
or
mov
pop
add
pop
jns
stc
subl
adc
xor
cmp
cs
adc
shll
popa
xchg
sbb
rcl
mov
push
hlt
xchg
jmp
push
lret
lds
xchg
sbb
and
pop
mov
cmp
jmp
cmp
lahf
lea
xor
stos
scas
jns
mov
pop
test
imul
mov
inc
pop
int3
fidivs
test
dec
sbb
push
sub
add
ret
lcall
jb
and
test
pop
insb
push
add
rcrb
mov
xchg
mov
xchg
sub
int3
mov
sbb
adc
jecxz
and
orl
fisubs
sti
dec
shll
push
leave
sbb
aam
xchg
out
dec
mov
sbb
je
mov
roll
call
add
sbb
mov
ljmp
xlat
or
in
scas
clc
test
push
js
and
jnp
sbb
cld
sahf
and
repnz
push
sbbl
jmp
sahf
sub
mov
fisubrl
les
cmpl
sbb
add
fimuls
bound
xchg
outsb
pop
push
fsubrl
cmc
sahf
mov
loop
push
mov
sub
push
pusha
mov
cmp
xorb
mov
push
lods
or
add
or
inc
cwtl
repz
sub
flds
loopne
ljmp
push
pop
test
jo
pop
jl
xchg
mov
pusha
mov
jne
sub
negl
add
and
inc
xchg
aas
push
adc
ds
inc
call
mov
jnp
jae
imul
inc
sub
nop
sbb
stos
push
sub
inc
outsb
in
popf
sqrtps
cmpsb
mov
shll
scas
add
in
pop
lcall
out
adc
jle
fs
or
xchg
mov
imul
mov
pop
xchg
and
xchg
sbb
sahf
dec
aam
leave
push
pusha
pushf
sub
push
add
mov
mov
orl
xor
and
xchg
mov
out
addps
push
lock
xor
scas
jno
cmp
pop
scas
pop
shrb
xor
mov
sbb
lret
mov
sbb
rclb
popa
mov
adc
pop
dec
lahf
lret
cltd
cmpl
je
add
dec
fsubs
xchg
push
inc
cmc
and
adc
bound
inc
insl
enter
ret
xor
rcrl
pop
addr16
push
lods
or
punpckldq
and
sbb
mov
out
fwait
xchg
in
cltd
leave
pop
push
mov
sub
shrb
or
push
sbb
inc
icebp
jns
mov
outsb
std
cli
in
jne
jnp
mov
pushl
cmc
out
test
sub
gs
lock
scas
mov
sbb
mov
gs
les
add
sti
mov
push
fisubrs
jg
outsl
rcll
push
fcoms
xchg
aam
cs
dec
xor
push
punpckhbw
jb
aaa
pop
cwtl
pop
or
bnd
aad
outsl
shld
in
mov
ljmp
js
shlb
rcpps
cli
cmpsl
sub
pop
lea
inc
faddl
add
xchg
call
lfs
stos
jmp
inc
cwtl
repz
sti
sub
mov
cs
mov
add
nop
xchg
sbb
mov
insb
push
xchg
pop
sbb
fnstcw
mov
xlat
add
repz
outsl
or
jmp
pop
mov
push
add
cmp
sahf
xor
cmp
sbb
out
in
fsubl
icebp
aad
fsubl
out
push
outsb
pop
mov
subl
inc
mov
addb
mov
or
lea
jnp
mov
mov
js
lods
xor
dec
ljmp
push
xchg
test
mov
je
mov
lret
mov
lock
fwait
adc
inc
sub
ds
cwtl
inc
fwait
and
xchg
sub
roll
xchg
inc
jno
orl
sbb
out
inc
jb
clc
shr
xor
xchg
fisubl
jbe
sahf
leave
push
dec
jl
mov
jne
jmp
loope
and
dec
js
and
push
jne
loop
mov
mov
add
push
cmpsb
out
cmp
mov
jle
cmp
adc
ds
sbb
test
jne
les
push
fisubrl
mov
cltd
inc
scas
js
les
and
lods
xor
fisubl
add
ret
add
insl
mull
cli
pop
pop
adc
loope
fistpl
push
jo
xor
sti
movaps
dec
xor
call
fsubr
pop
add
ljmp
stc
out
loope
mov
push
dec
pusha
fcoms
pop
cwtl
or
jae
add
sub
push
aaa
jne
nop
dec
jae
mov
dec
jge
jmp
jo
sahf
adc
insb
pusha
cmc
popa
jmp
xlat
sub
pop
mov
add
pop
jno
xchg
imul
jae
rorb
sub
mov
sarb
mov
subl
inc
add
in
sahf
loop
mov
imul
enter
fdivrl
mov
fwait
test
adc
andb
push
rclb
add
seta
sub
mov
aas
movl
cmp
adc
jle
loope
lods
mov
mov
outsl
leave
xchg
mov
data16
call
outsb
call
lret
mov
jg
add
loopne
mov
movsl
popa
imul
loop
mov
cmc
xor
testl
test
cmp
pop
lds
negl
es
jbe
pop
shlb
cli
cmpsl
xlat
jae
cmp
xor
cli
xor
mov
jae
dec
and
xor
mov
cmp
push
jae
jl
dec
shll
xlat
testl
test
or
sbb
int
xchg
sahf
out
inc
lahf
cli
cmpsl
mov
adc
stos
mov
shll
dec
and
dec
cld
cmp
mov
je
imul
sahf
sti
shrl
cwtl
and
inc
and
add
ljmp
push
push
ret
ret
fstl
int
cmp
and
sar
xchg
push
mov
push
xchg
cmp
pop
scas
loop
fmuls
addr16
jg
push
push
fs
xchg
pop
scas
movsb
sbb
scas
jno
pop
xlat
xchg
dec
aad
or
sbb
repnz
mov
and
jp
test
icebp
push
loopne
rcl
cmp
xchg
sbb
ror
sbb
mov
jae
loope
les
push
lock
dec
cmp
jg
decl
div
jno
int3
iret
sahf
push
fnsave
fbstp
lods
loop
add
pop
pop
sbbl
mov
fistpll
aam
or
jae
dec
and
dec
cld
test
mov
xchg
push
fs
dec
cld
cmc
lock
into
and
bound
cld
popf
and
daa
push
popf
pop
in
or
and
inc
lret
sub
int3
pop
jb
shll
xchg
jge
jg
or
jne
orl
adc
js
xor
or
loopne
or
xchg
in
lcall
inc
cmovns
xor
pop
imul
in
cmpsl
dec
in
inc
dec
imul
mov
nop
popf
in
xchg
pop
xor
ret
dec
sbb
imul
movsl
mov
test
movsb
flds
lods
fisubrs
xchg
dec
fildl
mov
jecxz
bound
sahf
push
movsl
nop
fisttps
inc
mov
dec
enter
inc
enter
std
movsl
sar
push
nop
lahf
int3
inc
and
cs
pop
adc
daa
aam
jae
sbb
inc
xchg
cwtl
enter
and
inc
iret
cmpsb
jne
sub
sbb
push
fsubrs
ja
cmc
xchg
daa
jne
inc
cltd
int3
loope
fidivrs
lods
in
dec
inc
into
pop
lahf
mov
sbb
xlat
popa
push
orb
jmp
aas
out
cltd
scas
aas
mov
xchg
in
in
jl
pop
int3
cld
jae
out
and
clc
iret
das
enter
push
xchg
lahf
out
pushf
fnstenv
add
or
dec
and
dec
mov
sbb
sub
pop
data16
hlt
lret
lcall
sbb
and
and
in
insl
xchg
fldl
inc
dec
je
xor
xchg
mov
mov
xor
cwtl
scas
stos
pop
xor
and
xchg
pop
xor
mov
mov
mov
in
insl
dec
and
jno
rolb
outsl
inc
add
sbb
test
repnz
int
and
stc
jae
jnp
jae
cmp
pop
add
inc
and
jle
fadds
adc
dec
jl
jne
adc
mov
mov
sti
clc
push
ror
std
test
jg,pt
or
fsubrs
aas
mov
push
mov
dec
cmc
dec
jnp
adc
popf
mov
lods
out
out
mov
popa
adc
sub
aas
gs
push
aaa
ret
cmovb
sub
mov
inc
xchg
add
sbb
xlat
arpl
mov
add
cs
adc
das
mov
or
loope
arpl
add
xor
ja
xor
gs
mov
pop
iret
xchg
call
jno
pop
push
or
popa
jmp
xlat
pop
pop
hlt
inc
dec
into
and
js
in
push
jno
loopne
pushf
jae
dec
and
arpl
sub
cs
xor
pop
push
mov
mov
sahf
xchg
adc
mov
insl
lds
mov
mov
cld
mov
popa
scas
test
clc
mov
push
sahf
push
mov
int
out
cmpsl
jnp
sbb
and
pop
pushf
push
mov
mov
mov
punpckhdq
lods
push
or
mov
aad
xlat
pop
mov
pop
in
pushf
andl
ret
arpl
mov
inc
arpl
and
mov
mov
sarb
clc
imul
jle
lds
gs
push
stos
inc
sbb
mov
jecxz
ljmp
cs
scas
push
in
xor
adc
jle
add
dec
mov
and
mov
push
mov
cmp
loopne
xchg
jmp
sbb
jb
sbb
repz
mov
cmp
std
in
push
xchg
rcrl
stos
mov
add
mov
mov
sub
cmp
dec
mov
pusha
add
pop
mov
cmp
stos
xor
push
push
cs
das
mov
mov
shrb
int3
stos
mov
pop
mov
adc
stos
jmp
inc
xchg
icebp
sahf
sbb
sbb
mov
sbb
fisubrl
leave
es
lahf
push
add
pop
adc
pop
jo
out
insb
in
fcomp
lahf
sbb
cmp
out
ja
fidivs
xlat
mov
imul
dec
jge
jno
push
jg
pop
pop
sahf
cld
adc
call
pop
sahf
jnp
mov
sub
dec
mov
sub
fnstsw
sbb
jns
fisttpll
insl
mov
sbb
sti
sub
and
mov
test
mov
orl
dec
mov
inc
dec
fcomip
scas
in
push
sbb
and
sbb
push
dec
enter
inc
mov
outsl
or
loope
xchg
inc
movsl
in
jae
aad
mov
loope
test
lea
mov
xor
push
mov
jo
xor
leave
cld
inc
leave
cltd
sub
sarb
into
xchg
and
mov
adc
ds
inc
into
or
mov
jo
clc
xchg
ljmp
int
xor
stos
aaa
mov
enter
cmpsb
in
les
pop
mov
mov
popl
pop
out
out
shlb
into
sbb
std
das
bnd
rcr
data16
inc
test
sbb
cmp
push
rcrl
jp
mov
adc
jbe
lret
mov
into
sub
test
xchg
lcall
pop
and
in
popa
in
jne
pop
sub
adc
push
xchg
mov
pop
iret
xor
add
jae
cld
push
nop
push
orl
fsubrs
pop
and
add
clc
mov
lods
test
addl
in
imul
mov
mov
jg
xchg
call
adc
push
sbb
clc
jae
push
or
xchg
insb
cmp
mov
and
mov
pusha
add
mov
enter
pop
push
mov
or
sti
pop
xchg
lds
dec
jb
loopne
sub
xor
sub
adc
push
pop
xchg
sbb
lahf
inc
xlat
pop
ds
pop
cld
test
stos
xor
push
dec
cwtl
and
inc
movsl
push
or
jecxz
push
or
xchg
outsb
xor
pop
xchg
fcom
lock
pop
std
mov
jns
mov
cltd
les
push
lret
pavgb
vsubps
push
stc
or
int
in
push
test
into
pop
xchg
fcoml
outsb
test
jmp
mov
dec
mov
aas
orb
and
pop
sbb
mov
stos
jge
out
jbe
fnstcw
mov
jg
imul
xchg
add
inc
call
in
xchg
sbb
dec
aam
cmp
mov
rorl
sbb
out
imul
lret
inc
dec
in
inc
enter
fildll
jbe
ss
std
xor
ja
xchg
in
leave
pop
movsl
adc
out
mov
mov
jg
mov
hlt
xorl
test
jle
cli
and
repnz
andb
push
movsb
movsb
xlat
pop
iret
fimull
lock
sub
push
jg
adc
imul
in
inc
hlt
jl
mov
lahf
inc
cltd
and
aas
pop
movsb
and
push
dec
push
andl
test
inc
mov
jae
in
xorb
xor
xchg
aaa
in
pop
pop
or
sub
mov
sbb
or
xchg
pop
jb
dec
and
mov
popf
or
cmp
push
mov
insl
shrb
fsubrs
cmp
sub
sub
pop
xor
mov
xor
jecxz
iret
pushf
outsl
subb
jge
pop
insb
xor
aas
push
mov
lcall
adc
icebp
das
sbb
in
in
insb
mov
pop
lahf
mov
pop
in
sbb
cmp
pop
mov
adc
pop
shlb
sbb
ss
jecxz
jmp
lret
arpl
cwtl
sub
lock
pop
fists
insl
push
jb
inc
cmp
lar
fs
shrl
dec
lahf
push
lret
leave
jg
mov
adc
insb
add
outsl
mov
push
test
pop
mov
insb
sub
push
mov
mov
insb
xchg
rcrb
xor
mov
loopne
cmc
inc
xor
mov
scas
insb
jnp
stc
ss
fmull
dec
int
or
mov
enter
xchg
or
sbb
pusha
mov
xor
mov
adc
sbb
sub
jae
push
push
mov
loop
out
aad
pop
test
ds
nop
loope
sub
and
push
xchg
js
popf
dec
xor
and
xchg
mov
push
jge
pop
fidivs
jno
das
cmp
jnp
add
outsb
or
push
and
xchg
fldt
sub
fnstenv
nop
out
inc
jne
and
stos
andb
sbb
das
mov
fisubs
nop
cmp
loopne
hlt
push
std
loopne
out
jbe
pop
pop
aam
out
jmp
std
aaa
in
movsb
mov
push
jge
jb
inc
xor
test
inc
int
ficoms
test
jecxz
arpl
stc
push
xchg
lcall
xor
movsb
fisttpl
les
in
cltd
lret
dec
test
js
xor
in
fs
push
push
push
sub
mov
dec
cltd
roll
add
sbb
daa
insl
xorb
outsl
data16
xor
xlat
fs
mov
mov
jo
daa
jp
push
sub
mov
sti
push
add
mov
aam
leave
sbb
lret
xor
sarb
adc
xlat
loop
pop
pop
stos
inc
lahf
jmp
rclb
mov
mov
dec
ja
insl
addl
out
mov
and
stos
dec
mov
and
dec
decl
pop
scas
dec
jecxz
aaa
imul
cli
sbbb
aaa
sub
std
sub
adc
sbb
repnz
inc
leave
shl
leave
add
mov
xor
sub
fmul
out
mov
lret
jmp
jno
pop
mov
mov
outsl
idivl
scas
push
negl
and
les
mov
sub
clc
int3
cwtl
loope
sbb
inc
lock
pop
aad
mov
or
rolb
mov
and
jns
aaa
sahf
popa
xor
xor
orl
push
xchg
push
out
inc
je
loope
mov
les
xor
xor
push
xlat
dec
dec
mov
mov
insl
cmc
pop
jecxz
movsl
rcll
lahf
in
jmp
sub
shrb
out
ret
stos
lds
cli
adcl
xchg
xor
lods
pop
cmpsl
lret
inc
inc
sti
cmpsb
pop
std
push
subl
and
icebp
dec
dec
mov
stos
add
out
aaa
pusha
dec
fiaddl
cmc
fldenv
dec
mov
and
add
inc
enter
xchg
add
imulb
jle
lock
fistps
addr16
repz
or
ss
adc
and
xorb
dec
jge
lret
rcll
push
fwait
jp
fisttpll
jp
sbb
test
or
and
les
out
dec
out
pushf
fcoml
sbb
mov
or
or
mov
dec
or
call
pop
or
fldl
push
push
push
ds
xor
fs
aam
mov
stos
dec
aad
test
mov
testb
roll
fsub
lcall
dec
mov
xor
sbb
les
xlat
mov
cwtl
pop
jg
mov
sbb
call
xchg
pusha
aaa
inc
fwait
test
adc
loop
cwtl
jmp
loope
jecxz
dec
mov
pop
rorb
push
xchg
lahf
fbld
rcrb
dec
push
push
fstps
adc
addr16
sub
shrl
fistpl
adc
lcall
in
cmpsb
push
fadds
aaa
in
js
or
arpl
rclb
sbb
push
fld
sbb
adc
jmp
mov
inc
imul
and
rcrl
or
dec
mov
jge
adc
loopne
cmp
icebp
xchg
pop
movsl
and
or
sbb
insl
test
test
mov
imul
or
sbb
push
add
cmpsb
out
and
jns
sub
int3
jns
jae
js
mov
lcall
pop
andps
push
insb
dec
push
jns
dec
and
sub
cmp
int
mov
cwtl
out
pop
repz
aam
fcmove
testb
lods
icebp
jns
or
sub
push
mov
out
sti
mov
mov
mov
data16
jg
ljmp
ret
cmp
pop
jno
in
push
fistl
jnp
pop
daa
ret
mov
jb
enter
jle
aaa
and
in
icebp
sub
into
push
lods
aas
and
add
stos
bound
pop
mov
in
aas
jb
xor
jmp
insl
js
cmpsb
sub
mov
sub
or
mov
rol
stos
mov
jl
xchg
iret
jp
in
push
xchg
push
sahf
pop
imul
pushf
lods
addr16
popa
aam
jge
leave
cmp
jl
iret
addr16
imul
mov
insb
push
popa
xchg
addr16
repz
cmpsl
das
jns
mov
fbld
ficoms
mov
sbb
jnp
adc
lret
je
or
nop
sbb
cmpl
inc
lret
cld
cmp
inc
int3
xchg
mov
jno
xchg
hlt
lret
iret
out
clc
xor
lods
pop
xor
push
pop
cltd
xchg
add
lret
in
jae
push
jae
dec
and
dec
cld
dec
mov
sbb
jle
pop
xor
sbb
pop
pop
aaa
jae
jp
bound
or
sbb
inc
daa
jp
fstps
sbb
repz
sti
sub
sbb
inc
mov
sbb
adc
shrw
jmp
xor
mov
cmp
inc
pop
mov
push
clc
or
sarl
mov
ljmp
jle
push
inc
cmpsl
cmp
cmp
or
xor
inc
outsb
or
roll
mov
sbb
mov
or
ds
aas
in
sbb
dec
and
dec
cld
cmp
insl
xor
mov
dec
es
addr16
add
fsubs
andb
add
push
xchg
imul
and
sbb
je
sti
inc
loope
mov
into
dec
mov
xchg
aaa
cmpsb
jp
inc
lret
movsb
aam
mov
push
fs
fldcw
or
fldt
and
and
ja
lea
push
mov
mov
movsb
lret
je
jae
repnz
adc
push
add
jge
out
in
aas
sahf
addr16
jne
loopne
add
ficomps
push
jbe
push
pop
push
mov
mov
popa
xor
jne
xor
mov
shl
out
add
movsl
inc
imul
xor
xor
push
fs
lret
and
scas
mov
mov
pop
mov
test
xlat
mov
daa
sahf
popf
sub
movsl
xor
push
in
rol
adc
addr16
xor
popf
dec
in
lock
fists
subb
out
sbb
adc
push
cli
pop
out
rcll
add
xor
int3
adc
ret
sbb
pushf
sbb
lcall
jb
rorl
push
sbb
aam
push
outsb
mov
push
outsb
sub
xor
adc
scas
pop
std
insb
test
movsb
out
sbb
mov
ffree
dec
sub
xchg
sarl
lcall
sub
les
jne
jnp
mov
or
imul
push
sbb
nop
or
xchg
loopne
push
xchg
pop
cmpsb
hlt
add
std
jnp
pusha
pop
push
pushf
and
sbb
test
mulb
insb
add
xchg
inc
lcall
shll
adc
mov
cmpsb
addb
jp
or
mov
mov
or
shll
leave
lods
dec
mov
sub
jg
xor
or
mov
inc
lret
rep
enter
movsl
jg
push
shrl
push
xchg
adc
in
fimull
jle
daa
in
aam
cli
andb
sbb
in
mov
js
mov
jp
nop
push
jae
jns
mov
imul
sbb
xchg
inc
jb
mov
or
mov
add
cli
cmp
xchg
inc
jno
mov
or
jo
sbb
lcall
jns
pop
and
jns
mull
gs
ret
sbb
ror
adc
push
orb
jbe
mov
repnz
daa
popa
icebp
jl
ss
stos
xor
mov
xor
xor
adc
jp
bound
pop
push
mov
lds
pop
xchg
aad
sarl
dec
or
jmp
add
sbb
mov
jnp
add
imul
push
aam
es
push
push
add
lods
push
cmp
je
imul
jb
sub
inc
xor
les
push
leave
in
insl
dec
shrl
shlb
iret
add
sti
aad
scas
jbe
sbb
jb
movsb
out
xor
cmp
push
pop
ja
sub
subl
insl
sarl
ficomps
push
sbb
fmul
repz
loope
into
push
cmp
faddl
sbb
sub
dec
outsb
jb
sbb
jl
ds
mov
push
mov
jle
cld
cmp
xchg
call
je
push
dec
jnp
daa
and
rol
das
inc
cmp
decl
fmull
inc
rdmsr
je
xor
jge
mov
jae
dec
and
xor
in
fistl
ficomps
pop
pop
aad
xor
xchg
in
aas
scas
push
ficoms
xchg
cld
subb
jae
dec
and
fwait
jmp
int
and
mov
xor
pop
mov
sub
data16
pushl
xor
sub
inc
push
imul
and
ror
add
repnz
aam
das
test
cmp
sub
jbe
push
sub
sbb
push
fidivl
add
jbe
scas
xor
pop
imul
out
mov
cld
xchg
cmp
xchg
xor
push
or
mov
pushf
add
scas
clc
subb
notrack
loopew
pop
mov
xorl
jnp
out
call
jb
int
pop
es
fstps
sbb
ds
and
rorb
leave
or
sbbl
arpl
or
pop
popa
pusha
add
push
fwait
and
sti
jae
xchg
ret
or
stc
mov
aaa
arpl
std
stos
add
mov
sbb
int
cmp
jle
bound
add
xchg
cmpsb
xor
xchg
ffree
xor
push
mov
mov
imul
and
insl
cltd
in
lods
stos
data16
sub
fiadds
stc
dec
mov
push
sbb
adc
push
mov
add
push
lods
or
and
pushf
dec
cmc
sbb
ds
xor
adc
inc
repnz
inc
lret
or
adc
in
cmp
mov
push
imul
push
arpl
dec
mov
out
ja
mov
int3
mov
mov
push
in
xchg
lahf
fisubs
mov
das
adc
dec
fisttpll
push
push
fcoms
mov
or
repnz
jp
call
jecxz
fmuls
xchg
mov
inc
mov
jmp
jecxz
pop
xor
pop
or
add
push
cli
fwait
je
mov
jno
out
xchg
call
mov
jecxz
fnsave
mov
in
mov
es
inc
sti
pushf
sbb
scas
pop
push
xchg
sahf
call
shlb
orl
fcomi
pop
inc
or
addr16
mov
inc
cmp
jge
adc
inc
adc
iret
dec
fmuls
push
fstps
icebp
mov
xor
inc
adc
cmp
dec
inc
data16
sti
xchg
xor
mov
int
repz
sti
push
movsb
divl
clc
mov
aas
sahf
push
pusha
mov
mov
mov
subl
es
adc
idiv
mov
add
ss
sbb
std
lret
jle
mov
das
mov
xor
into
dec
cli
addb
jmp
scas
fisubl
sbb
in
std
add
mov
mov
cmp
lods
pop
push
bound
pop
mov
mov
push
adc
rcrb
shlb
cmp
push
xchg
xor
cmovg
stos
add
xchg
in
xchg
dec
fisubl
sbb
arpl
push
adc
sub
jp
mov
dec
fisttpl
js
mov
sub
add
or
repz
jmp
jge
pop
mov
dec
or
faddp
mull
fidivl
ds
inc
jb,pt
jl
int
dec
iret
cmpsl
mov
mov
sub
mov
inc
in
lahf
push
das
push
daa
leave
push
test
addl
inc
adc
mov
dec
addl
stos
xor
lods
mov
add
jae
sbb
pop
sub
push
mov
into
frstor
mov
ficoml
pop
xchg
lods
cwtl
adc
sub
sarl
jl
push
dec
jp
mov
popa
loope
adc
jns
jmp
jp
repnz
and
mov
jbe
hlt
xchg
pop
mov
mov
push
leave
cli
in
stc
xchg
mov
lods
or
xorb
sub
stos
incb
sub
mov
jnp
and
mov
popf
mov
leave
push
enter
jge
stc
nop
jns
aaa
mov
shrb
pop
stos
add
sarb
cmp
ss
mov
inc
js
sbb
ret
jae
shr
jne
xlat
mov
fcoms
movsb
jnp
cwtl
pop
dec
movsl
in
inc
in
sbb
pusha
push
pop
mov
push
pop
loope
arpl
out
loop
nop
das
cwtl
mov
lahf
pshufw
jnp
popa
ljmp
xor
es
xchg
aad
xchg
jo
pop
adc
outsl
mov
push
xor
or
ror
shll
cmpsl
popf
repz
dec
xchg
int3
mov
mov
and
mov
loop
into
enter
push
repz
aaa
dec
dec
mov
jecxz
fsts
and
adc
incl
add
push
xor
and
dec
fwait
into
inc
inc
pusha
sub
jns
addr16
daa
scas
mov
in
out
jp
lds
out
shl
mov
pop
pusha
mov
lock
sub
jge
dec
xor
rorb
out
cltd
fsubrs
rcrl
adc
push
push
pushf
adc
int
bound
push
jp
jns
sti
dec
mov
leave
loope
outsl
or
movsl
sub
nop
xchg
and
out
loope
mov
call
or
roll
mov
sahf
lods
jle
int
lock
inc
icebp
push
les
adc
cmp
xchg
or
sbb
push
or
mov
add
add
ja
add
fistps
sti
int3
add
rcrb
js
push
lea
fmul
cmp
push
sub
iret
stc
push
add
rcrl
jle
xchg
sub
lret
cmp
push
xlat
pop
mov
imull
jl
ss
test
iret
scas
add
xor
icebp
jo
xchg
test
pop
add
sti
dec
mov
jae
push
sub
mov
lods
mov
xor
mov
or
shlb
shll
add
push
out
sub
popf
js
mov
sar
imul
dec
jecxz
cmpsb
scas
fisubl
stos
mov
hlt
lock
bound
sub
nop
inc
les
sbb
ret
mov
sub
and
jle
daa
jp
aas
les
dec
mov
shr
xlat
xorb
rcrb
leave
or
pop
loope
mov
cmp
cmpsl
cmpsb
fwait
and
cmc
mov
ja
sub
adc
push
mov
mov
dec
ret
mov
iret
pop
les
test
add
inc
cmp
iret
out
inc
out
pushf
and
inc
clc
lcall
xorl
cltd
les
add
xchg
fiadds
push
xchg
int
mov
push
mov
fisubrl
xchg
dec
and
jle
sbb
jg
sbb
push
fnsave
fidivrl
jae
mov
mov
cmp
stos
xor
stc
aaa
mov
mov
cmp
lcall
mov
push
mov
adc
cwtl
jmp
loope
or
mov
mov
test
stos
adc
js
xchg
xchg
clc
das
loope
imul
adcb
loopne
xchg
pop
int
out
bound
sbb
mov
enter
clc
mov
jge
jae
xor
stc
call
sti
xchg
xchg
enter
push
fisttps
js
push
mov
adc
add
cmc
xchg
xlat
mov
in
ss
cld
loopne
cmpsb
jp
je
pop
sti
dec
sbbl
imul
aas
xchg
dec
jbe
mov
loope
mov
es
stc
stc
imulb
outsl
testl
leave
in
inc
jecxz
xchg
ljmp
sub
iret
and
dec
mov
arpl
sti
into
pop
mov
inc
mov
or
sahf
es
div
aas
push
ret
sbb
fisubrs
clc
cmc
aas
mov
cmp
pop
lods
into
lods
outsb
xchg
int
push
int3
shl
xchg
call
decl
mov
mov
gs
dec
daa
test
and
xchg
inc
orl
call
test
inc
lret
jecxz
sar
inc
into
xchg
sbb
push
sbb
jb
stos
xor
imull
mov
mov
or
cli
push
jne
push
ficoml
mov
outsb
fldcw
call
cmp
out
mov
in
or
dec
aam
mov
orl
jae
dec
xlat
lahf
mov
dec
adc
mov
sub
sub
mov
std
ds
pop
rcrb
repnz
push
dec
icebp
jns
ja
lods
lock
test
and
sbb
cmp
pop
mov
push
sbb
lock
mov
pop
sub
aad
adc
dec
sbb
jo
ds
insb
inc
outsb
pop
jne
ret
fldl
jecxz
and
jecxz
jne
sbb
xor
gs
inc
bound
cmp
pop
sahf
xchg
insb
push
popa
rcl
outsl
out
mov
enter
jno
shrb
xchg
lret
cmpsl
das
and
cmp
inc
lock
popa
ljmp
add
add
jnp
shrb
jb
sub
add
aad
or
cmp
pushf
testl
xchg
xor
push
mov
in
jmp
adc
pop
stos
fs
test
fisttps
jbe
or
mov
addr16
cmpsb
es
and
mov
adc
mov
lahf
arpl
out
jmp
lods
xor
cwtl
xlat
rol
fstl
adc
mov
dec
das
nop
cltd
into
inc
sub
xor
in
repz
push
mov
push
jle
movsl
lret
inc
fnstenv
movsl
inc
iret
nop
insb
je
jne
sub
lcall
jg
sbb
mov
shll
sbb
testl
add
jbe
aaa
lds
js
jecxz
or
mov
loopne
pop
xchg
mov
pop
mov
xchg
sbb
add
subl
pop
mov
mov
adcb
and
inc
icebp
adc
imul
loopne
aaa
mov
sti
inc
int3
xchg
jb
jmp
cmp
popa
xor
xchg
ret
dec
adc
arpl
add
outsl
sbb
sti
xchg
push
mov
sbb
ret
mov
pop
out
sahf
gs
mull
mov
daa
lds
and
icebp
call
das
cmp
and
jp
xlat
sub
pop
int3
and
add
dec
mov
and
xlat
inc
or
in
sub
int3
into
cmc
adc
lret
fwait
mov
pusha
dec
aam
xor
add
mov
mov
aam
test
sub
pop
mov
addr16
pop
adc
or
jl
cli
cld
jne
enter
mov
cmp
clc
mov
ficomps
shl
xor
push
fsubl
dec
xor
inc
pop
push
daa
aam
mov
dec
inc
dec
dec
sub
imul
and
cli
jl
xchg
fwait
mov
push
mov
test
sbb
xchg
xchg
lock
jne
cmp
inc
lahf
dec
out
jl
push
int
cmp
xor
add
jmp
mov
lea
aas
cli
imul
es
jae
popf
add
outsb
fisubs
mov
jl
jnp
push
sahf
stc
xchg
pusha
mov
insl
movsb
sbb
and
stos
mov
sub
pop
push
icebp
add
jle
lea
lret
and
into
push
add
sbb
repz
jbe
push
movl
insl
sbb
pop
outsl
in
imul
adc
push
jmp
xor
and
or
mov
xchg
in
sub
add
push
xor
mov
in
sub
push
xor
mov
in
popa
xchg
fwait
xchg
repnz
iret
lahf
mov
cmp
pop
cwtl
xchg
out
add
pop
xor
and
loop
jp
pushf
mov
xchg
sbb
lret
pop
cs
xchg
sbb
repnz
ja
jle
shlw
test
inc
or
push
dec
arpl
shrb
mov
or
push
mov
add
mov
cmpsl
arpl
dec
mov
inc
add
sbb
mov
dec
xchg
repnz
call
adc
mov
cmp
int
ljmp
xchg
in
jmp
sub
into
stc
dec
jg
in
sub
xor
or
cs
mov
mov
and
mov
cmp
mov
sub
imul
into
arpl
pop
loope
pop
mov
sub
mov
pop
clc
xor
add
inc
bnd
adc
cmpsl
insl
add
inc
fisubl
pusha
pushf
cmp
arpl
cs
call
in
stc
hlt
andl
mov
adc
lcall
jb
sbb
dec
jge
shll
xchg
arpl
xlat
dec
punpcklbw
scas
sbb
jns
subl
xor
je
and
movb
pop
and
rcl
shr
repz
cmp
xchg
mov
out
xchg
std
sbb
je
std
std
repnz
sbb
cmp
js
lcall
or
mov
shll
psubq
fistps
mov
test
dec
mov
add
nop
sub
mov
push
push
pop
xor
stos
and
sahf
jle
jge
xlat
xchg
ret
cwtl
cltd
mov
sbb
mov
cmpsb
push
pop
mov
js
mov
xor
fsubrp
inc
mov
xchg
bound
pop
mov
js
mov
mov
out
sarb
repz
push
mov
cmp
sbb
push
pop
xlat
mov
push
xchg
in
nop
aam
jnp
fs
mov
adc
and
mov
and
daa
scas
add
jecxz
mov
pop
in
pop
lcall
add
sbb
fucomi
mov
dec
repz
mov
aas
pop
shll
lods
ds
int
and
mov
lods
jp
xchg
in
in
bound
jbe
sti
jge
and
pop
or
jne
jl
in
mov
shrb
pop
add
push
sbb
jae
jl
mov
cmp
movsb
inc
sub
sbb
cmc
push
mov
repnz
shll
jp
ja
cs
jmp
fcoms
scas
xchg
enter
add
mov
popa
add
pop
push
sub
xchg
and
mov
leave
cld
or
sbb
repz
mov
jnp
shl
jnp
push
mov
mov
stos
xor
popa
jle
push
jg
mov
jne
in
lock
clc
test
jns
aam
xlat
sub
fmul
inc
mov
sub
shrb
fdivs
test
mov
inc
jbe
sub
xor
jo
mov
dec
push
fwait
movsb
jo
int
push
xchg
jbe
cmp
mov
inc
jmp
mov
popf
test
mov
inc
outsl
testl
insl
mov
ficoms
sahf
icebp
and
jno
push
addb
mov
int3
bound
adc
int3
testl
or
jl
ret
out
jp
and
dec
test
mov
mov
sti
stos
pop
pop
inc
cmp
cmpl
cmp
call
mov
push
cmpsb
mov
sahf
cld
dec
jae
pop
push
and
fstpl
int
aam
sbb
push
xchg
loope
call
scas
idivl
mov
mov
es
je
add
jl
sbb
jne
inc
sbb
das
out
mov
push
pop
scas
or
mov
push
sbb
xor
mov
icebp
jns
inc
xchg
daa
in
xor
int3
fwait
cmpsl
outsl
add
push
add
pop
sahf
nop
fsts
cltd
popf
lret
xorl
xor
je
int3
xor
or
mov
push
xor
pop
mov
popa
jmp
jp
mov
pushw
lret
jnp
jecxz
jb
pop
xor
jp
add
mov
insl
rolb
push
fbstp
loopne
int3
mov
jne
aam
sub
incb
sub
notb
mov
popa
dec
cwtl
pop
and
mov
mov
idiv
test
stc
push
and
push
cli
hlt
pop
mov
push
jae
es
je
push
repnz
insl
cmpsb
out
sub
movsb
enter
cmp
dec
jg
xor
sbb
mov
mov
popa
in
mov
ljmp
jne
mov
sbb
xlat
sbb
incb
sub
popf
mov
das
mov
xor
mov
xorb
sbb
xchg
int3
adc
adc
out
push
mov
jns
icebp
pop
lods
shlb
pop
lock
cmpsb
push
lea
into
xchg
loope
jl
out
repz
arpl
lret
leave
mov
push
out
inc
add
push
mov
adc
cmp
shlb
std
dec
sbb
cli
xchg
push
fcomip
ffree
clc
jo
pop
lds
cs
jmp
idivl
lods
sub
lods
xor
inc
sbb
and
xchg
xor
arpl
pop
add
call
test
mov
dec
lds
xor
inc
rcll
adc
aas
sbb
pop
cmc
insb
sbb
call
xchg
aad
adc
scas
int3
cwtl
cmp
test
hlt
loopne
and
or
mov
mov
xchg
sbb
stos
dec
xor
jns
mov
cmp
mov
dec
cmc
das
xor
outsb
hlt
push
fsubl
int
cmp
mov
push
minps
xchg
popa
cmp
xchg
push
cmpsl
mov
imul
lea
into
pusha
fbld
and
or
cwtl
and
leave
lods
lret
cmp
arpl
sub
movsb
dec
movsl
cmp
loopne
aas
fwait
push
cltd
push
imul
vpsubusw
cmc
rorl
cmpsl
inc
out
rorl
cmp
jb
movsb
out
xchg
xchg
lds
cmp
jge
shrl
cld
popa
mov
cmp
loopne
ss
inc
out
jnp
push
add
repz
cmp
xchg
ljmp
xchg
cmp
jl
jno
jl
and
push
mov
in
int
sbbb
cmp
jg
jecxz
mov
mov
gs
jecxz
es
or
psubusb
or
mov
daa
xchg
push
sti
mov
pop
out
lods
in
and
cwtl
in
and
inc
and
cmp
fs
pop
mov
repz
lds
jbe
sbb
push
lret
in
pop
addb
outsb
frstor
mov
std
jecxz
lcall
jae
incl
mov
out
xchg
sbb
pushl
int
bound
dec
ss
jno
movsb
pop
in
adc
or
mov
sahf
popf
ficoml
cmp
or
mov
lret
fldenv
lret
pop
sbb
inc
jb
pop
jne
je
lcall
dec
mov
mov
int
xlat
sbb
add
fiadds
imulb
jecxz
xchg
pop
rcll
insb
or
call
mov
sbb
icebp
lahf
imul
cmpsl
cwtl
jp
gs
dec
xchg
pop
mov
lods
scas
stc
cld
cld
inc
int
test
fnstsw
mov
inc
test
mov
fadds
and
jo
add
mov
xlat
mov
or
arpl
jge
pop
pop
shlb
mov
jnp
int
and
mov
ss
or
jae
es
push
lock
sub
mov
shl
sub
std
dec
and
add
sub
repz
xor
xchg
stc
push
mov
lods
xor
mov
mov
jbe
cmpb
dec
jmp
mov
xchg
jmp
call
fcomps
pusha
mov
rclb
mov
adc
movsl
sub
out
clc
adc
rcr
xor
sbb
mov
out
std
out
mov
inc
inc
and
dec
fcomi
mov
pop
insl
xor
mov
rolb
in
sbb
mov
adc
testb
add
in
push
pop
pop
jmp
mov
cmp
loope
xchg
jle,pt
call
sbb
mov
inc
int3
sahf
hlt
arpl
icebp
mov
mov
dec
shlb
xchg
in
jne
sbb
daa
orb
lret
cmp
adc
lret
bound
sbb
ret
test
or
loopne
shll
and
scas
dec
ret
adc
xor
jnp
pop
and
cltd
add
cmp
popf
scas
cmp
sbb
dec
push
jns
and
aam
popf
xchg
mov
es
orl
jg
mov
icebp
pop
jbe
gs
sbb
arpl
mov
in
pop
mov
movsl
xor
push
and
bound
outsl
lock
dec
out
enter
and
mov
xchg
jp
fmuls
sahf
mov
mov
icebp
sub
inc
and
nop
repnz
mov
ds
std
cmp
jg
fsubrs
pop
sbb
leave
mov
mov
fimuls
jg
xor
xor
imul
inc
mov
jmp
leave
add
fisttps
inc
lods
ret
jmp
push
sbb
dec
fwait
xor
jl
fcmovnu
repz
stos
add
xchg
out
pushf
and
sti
or
mov
roll
adc
mov
sti
xchg
pop
mov
jl
lds
inc
pop
lcall
lcall
hlt
push
sbb
mov
subl
stc
sbbl
or
out
leave
xchg
leave
push
cwtl
push
cwtl
adc
sti
mov
addr16
loopne
pop
sahf
xchg
repz
xchg
repz
push
sub
cli
push
add
and
mov
xor
mov
aad
movsb
iret
or
in
stos
pushf
pop
sub
inc
mov
push
out
sub
movsl
push
pop
xor
push
fldl
or
fistpll
mulb
test
pop
xor
lock
in
lret
pop
adc
lods
imul
jmp
inc
popf
repz
mov
dec
iret
sub
pop
sbb
les
dec
xchg
rcrl
sbb
sub
ds
int3
popf
and
jno
mul
popf
mov
inc
in
decl
outsl
mov
cmc
xchg
repnz
mov
xor
outsl
push
std
sub
cltd
inc
pop
stos
sbb
cmp
and
inc
pop
cmp
mov
sub
sub
inc
mov
repz
jmp
sbb
jb
pop
push
mov
in
xor
xchg
xor
sub
sbb
jbe
sbb
addr16
cmp
and
xchg
sbbl
xchg
sub
jmp
setle
cmp
iret
and
adc
lds
cmp
cmp
sarb
stos
xor
or
scas
jl
into
sub
out
outsb
push
pop
sub
enter
or
addr16
sbb
ss
add
mov
popa
lock
hlt
sub
daa
mov
loope
addr16
rcll
push
push
sub
shrb
jmp
pop
das
add
lods
negl
jne
jns
std
push
fsubrs
fstps
adc
lahf
bnd
jle
mov
jnp
lret
or
mov
jnp,pt
add
add
lods
mov
stos
pusha
add
push
fisubrs
imul
add
mov
imul
xlat
scas
fs
jge
fidivl
sbb
mov
sub
sbb
xchg
xchg
lcall
jb
and
scas
ss
aaa
xchg
aas
fxch
push
jge
adc
insl
lea
add
cs
xchg
sbbb
pop
push
repnz
cmp
adc
lods
dec
dec
das
adc
mov
cmp
nop
sahf
push
subb
mov
push
fsubs
sbb
dec
or
push
pusha
jle
test
cmp
dec
das
mov
pop
cmpsb
stc
sub
jb
push
inc
cmp
adc
xchg
out
in
subb
lods
in
and
or
xlat
sub
jp
cmpb
rol
loopne,pt
push
mov
inc
and
popf
adc
test
loopne
lahf
fs
cmp
movsb
mov
xchg
rcrl
xlat
test
ficompl
dec
or
aas
sahf
dec
lret
enter
es
push
fstpt
cwtl
adc
pop
mov
fisubl
cmpsb
mov
loopne
pop
nop
xchg
fisubl
or
cmp
adc
xor
add
xchg
aam
sub
fisttpll
in
lods
pop
mov
mov
mov
and
ja
and
movsb
enter
mov
adc
jp
jae
add
fwait
inc
cs
test
adc
adc
pop
cld
test
out
jge
xor
pop
pushf
aas
add
inc
jp
push
outsl
insl
sahf
repz
inc
nop
sbb
mov
and
pusha
mov
lahf
lock
dec
xlat
arpl
push
sbb
out
sub
cmp
shrl
out
fs
out
dec
in
cmp
andb
aaa
jl
cmpsb
fs
and
mov
imul
jmp
adc
mov
out
test
pop
push
aad
ret
data16
les
mov
lock
xor
xor
loope
mov
bound
mov
pop
stos
jmp
inc
orl
or
mov
sahf
lods
sbb
std
sub
lar
jbe
sub
push
xchg
inc
jb
loope
call
dec
mov
pop
mov
in
cld
sahf
es
fsubrl
test
shrb
repnz
bound
adc
push
fldt
mov
pop
push
mov
mov
sub
dec
push
int3
out
jne
xchg
outsb
mov
mov
mov
dec
or
pop
idivl
int
add
mov
and
lret
and
inc
test
cmpsl
outsb
add
icebp
aas
inc
hlt
inc
jp
add
mov
pop
loopne
aaa
aam
add
adc
mov
mov
sub
jb
jae
mov
js
xchg
or
out
ss
fs
add
mov
jo
or
push
and
int
and
xor
xchg
stos
cmp
fimuls
inc
aam
jecxz
in
pop
aam
push
imul
pop
xchg
sti
or
aaa
in
dec
fiaddl
clc
outsb
scas
pusha
sbb
cwtl
aad
dec
xchg
jle
xor
or
ds
dec
jmp
ss
inc
pop
pusha
mov
ss
fcmovu
mov
jg
aas
xor
int
and
fnstsw
cs
mov
pop
mov
das
mov
mov
gs
jmp
out
and
jp
sub
lds
int
jne
aaa
repz
fcoms
pushf
mov
gs
pop
and
cmp
adcb
data16
icebp
fiaddl
je
adcb
sahf
rcrb
sub
mov
add
out
sbb
xchg
sub
movsl
fisubs
pusha
mov
lea
fldt
popf
mov
jae
lods
cwtl
inc
test
jmp
pop
outsb
push
leave
and
fwait
cmpsl
sub
imul
or
push
mov
push
or
jo
cmp
mov
mov
cmc
push
std
push
cmpsb
adc
sub
inc
andb
scas
test
xchg
push
scas
pop
mov
xor
add
lods
sbb
sti
sbb
dec
stc
sub
mov
dec
les
loope
ljmp
pushl
push
lods
in
and
lcall
and
push
mov
add
sub
xor
xor
xor
pop
push
mov
push
mov
add
sub
xchg
pop
mov
push
mov
push
mov
and
pop
inc
neg
dec
neg
sub
mov
pop
sub
mov
addl
pop
push
mov
add
add
sub
mov
pop
mov
push
mov
add
add
xchg
pop
mov
push
mov
add
add
xchg
pop
jmp
mov
pushf
jnp
outsb
cmpsl
xor
mov
add
push
movb
push
pushl
lea
call
mov
lea
push
push
call
movb
push
pushl
lea
call
mov
cmpl
je
mov
jmp
mov
push
lea
push
push
call
lea
add
jmp
dec
cmpb
je
cmpb
jne
movb
lea
push
call
pop
jmp
dec
adc
sbb
test
cmpl
sub
sub
gs
sahf
jno
sbb
jp
pop
inc
xor
push
sbb
pop
das
ja
or
clc
adc
mov
pop
sbb
ss
inc
out
lea
dec
add
add
pushf
sbb
cld
test
fisubrl
pop
in
or
add
add
mov
add
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
stos
data16
xor
insl
cmpsb
fdiv
dec
mov
mov
test
dec
ret
sub
xchg
mov
push
js
fidivrl
fwait
lcall
push
fwait
insb
sub
mov
dec
jecxz
mov
cmp
xor
bound
sub
test
outsb
movsb
leave
inc
cmp
inc
and
lret
insb
rolb
lret
dec
xor
jmp
inc
mov
movsb
and
cmc
pop
mov
lret
pop
fsubrs
and
sbb
out
fwait
addr16
lahf
dec
xchg
lret
xor
ljmp
jns
fiadds
or
leave
lcall
fists
push
sbb
loopne
std
mull
sub
or
push
sarl
push
mov
sub
negb
mov
sub
xor
lret
sbb
out
pop
pop
mov
mov
dec
jno
and
mov
add
aaa
push
mulb
adc
into
mov
cmc
daa
inc
jl
jno
push
pop
and
cmpsb
inc
adc
enter
push
sbb
test
xchg
fiaddl
ds
mov
adc
cli
cli
pushw
mov
pushf
into
sbb
arpl
mov
shrb
dec
or
in
push
lret
loope
push
push
xchg
inc
sub
pop
adc
mov
scas
sbb
dec
fnstsw
push
cmc
lods
xchg
push
stc
test
in
push
push
clc
mov
inc
lock
daa
sbb
xor
notl
sbbl
xor
sbb
adc
or
adc
and
or
cmp
outsl
pop
std
xchg
pop
push
fildl
jno
jbe
addb
mov
pop
sti
fwait
dec
mov
clc
xchg
xchg
or
sti
sti
mov
push
mov
sub
incb
push
movsl
and
ret
mov
mov
xchg
nop
mov
mov
pop
jge
ja
pop
jo
xchg
mov
jge
xor
and
xor
cld
mov
jge
dec
adc
cmc
adc
mov
ja
data16
sub
stc
mov
lret
cmp
pop
pop
or
push
and
sbb
data16
adc
add
cmpsb
push
repz
add
add
pop
in
jo
cmpsl
or
in
scas
jp
mov
mov
mov
lret
cmp
aaa
adc
xor
cs
fists
jmp
test
pop
or
inc
stos
lret
lock
mov
mov
xlat
xchg
cmpsl
inc
in
call
xchg
inc
mov
shrb
jge
push
fs
jg
mov
mov
xor
shrl
nop
subb
or
scas
roll
bound
sti
push
push
jns
cmpsl
jb
add
fprem1
xchg
and
int3
inc
loope
repnz
cwtl
pop
enter
loop
test
add
dec
mov
clc
xchg
jp
gs
add
sbb
mov
xchg
xlat
adc
dec
jmp
jge
jp
je
addb
lcall
sub
jl
shll
jbe
mov
inc
rclb
mov
cmp
mov
mov
push
lods
pop
jmp
outsl
jne
mov
gs
dec
and
pop
out
cmp
push
mov
fistps
adc
out
jg
je
jle
sbb
int
xorb
mov
repz
sub
imul
shll
jcxz
outsb
fisubrl
or
stc
adc
popf
jp
jmp
mov
scas
pop
or
outsl
dec
out
pop
leave
inc
push
jbe
mov
cmp
iret
pop
sti
push
fisubrl
dec
test
cs
stc
lock
sub
repz
mov
repnz
jns
outsb
inc
loope
mov
sbbb
pushf
cmpsb
pop
fbld
aad
cmp
mov
mov
ficompl
das
iret
sub
cwtl
es
xor
lock
inc
push
mov
lods
dec
pusha
sarl
int
push
sbb
sbb
loop
mov
add
push
movsb
inc
adc
add
insl
mov
lods
rcrb
mov
push
loope
dec
addr16
cmp
jnp
jmp
outsb
and
sbb
pop
mov
dec
push
add
dec
ret
sahf
outsb
aaa
arpl
mov
fmull
sbb
cmc
or
xor
inc
scas
mov
es
mov
jge
xlat
addr16
cwtl
lods
and
in
je
push
xchg
inc
pop
nop
add
push
incl
mov
ss
cmp
das
xchg
std
fs
push
lds
aas
aas
push
ja
cmp
sbb
movsb
in
out
mov
mov
stos
rolb
icebp
cltd
loopne
push
inc
adc
cmc
push
aas
dec
dec
inc
cli
fdivr
hlt
insl
mov
mov
add
imul
insl
addl
add
mov
in
adc
sub
sahf
sub
fwait
cltd
lods
pop
jp
dec
mov
call
fs
jge
lock
shll
lahf
lock
lods
dec
mov
pop
inc
jne
lcall
leave
mov
ljmp
jl
repnz
pop
shlb
inc
cmp
mov
inc
out
leave
xor
jno
mov
fildl
pop
inc
push
dec
je
movsl
add
sbb
inc
test
mov
movsb
add
int
mov
sbb
mov
divb
mov
cmp
xor
pusha
adc
push
pop
leave
jae
xchg
in
pop
jo
inc
movsl
inc
in
push
leave
int3
mov
jnp
jge
les
mov
imul
pusha
pusha
test
pusha
scas
shrl
fwait
sub
jp
lret
int3
mov
in
xchg
fadds
adc
cli
pushf
sub
and
testb
pushf
sbb
cmp
loop
and
fdivrs
in
and
inc
pop
mov
add
roll
jmp
pop
nop
cli
outsl
pop
popf
inc
or
mov
xchg
push
mov
mov
xlat
cltd
adc
dec
cld
aaa
mul
stc
into
inc
repz
fs
js
lahf
sbb
xor
aam
sub
xchg
xchg
out
and
pop
iret
movsb
mov
add
insl
jo
das
inc
mov
mov
movsb
mov
insl
pop
sub
repz
cwtl
lret
iret
lcall
and
outsl
and
xchg
xchg
stc
and
insb
xchg
inc
sub
cmp
int
pop
or
sub
xorb
fnstenv
adc
sub
jl
sub
addr16
bound
inc
and
and
movsl
push
mov
mov
popf
mov
mov
sti
vpsrad
add
test
jbe
jo
or
out
xor
mov
stc
test
push
mov
pop
mov
push
jmp
xor
fistl
out
mov
or
xchg
xor
xchg
push
jo
jne
dec
push
sbb
in
pop
out
daa
xlat
dec
mov
test
cmp
xor
mov
aas
fisttps
sarb
inc
in
popf
xor
inc
inc
hlt
cmp
cmp
sti
out
fildll
mov
pop
stos
out
lahf
sahf
and
pop
call
xor
imul
cmp
mov
jbe
xchg
pop
add
pop
scas
inc
sub
add
push
mov
jne
inc
out
loopne
dec
pop
sahf
sub
icebp
leave
or
cltd
xor
inc
add
js
scas
xlat
fldl
das
push
push
iret
das
incb
mov
sub
dec
add
lods
out
ror
out
pop
mov
sbb
mov
pop
or
dec
sbb
dec
mov
dec
dec
inc
push
push
ret
mov
inc
or
movl
into
cmp
xor
inc
xor
pop
mov
movsl
loope
mov
lcall
stos
xchg
jnp
cld
js
mov
sbb
jle
cli
nop
and
ret
sbb
push
lods
inc
fsub
xor
xchg
inc
xchg
xlat
icebp
xchg
xor
dec
mov
cmpsb
dec
int3
sahf
lcall
negl
mov
dec
mov
clc
xor
xor
lret
jbe
xor
sub
and
adc
and
xor
gs
shl
std
add
add
lds
push
dec
lock
in
aas
inc
pop
fdivr
fsubrs
shrb
fistpll
dec
cmpb
sub
adc
mov
stos
push
pop
lods
leave
push
mov
or
cmp
push
mov
or
xchg
scas
push
dec
mov
cmpsl
icebp
cmp
sbb
loopne
push
cs
test
fisttpl
sbb
outsl
xchg
jle
shlb
pop
psubq
xchg
out
loop
in
insl
jnp
int3
rclb
pop
jbe
inc
push
push
adc
sbb
inc
xlat
pop
lahf
dec
mov
add
outsl
movswl
and
push
sbb
dec
lea
fsts
mov
dec
pusha
push
mov
bound
mov
pop
cltd
loopne
jmp
jle
mov
scas
out
enter
int
test
aam
mov
sbb
pop
fidivs
shll
popa
sbb
inc
cld
bound
outsb
push
imul
xor
fmuls
icebp
push
sbb
ds
push
mov
or
adc
sbb
jae
mov
stc
movswl
mov
icebp
imul
sbb
popa
xor
icebp
test
out
lahf
cmp
mov
in
iret
dec
mov
stos
dec
sti
jmp
std
jns
jb
push
cmpsb
adc
daa
push
or
dec
ljmp
pop
ret
dec
dec
cmp
dec
lret
popa
jno
push
shrb
pop
test
call
mov
push
mov
add
pop
or
in
and
jp
das
xor
rcrl
mov
mov
xchg
scas
shrb
bound
jmp
mov
adc
sub
add
and
inc
cmp
jp
cmp
mov
mov
outsb
adc
icebp
or
ss
xchg
movsl
push
adc
add
xor
int3
xor
out
lret
loope
add
push
add
ds
dec
ljmp
inc
aad
mov
and
push
aas
pop
jnp
cmp
sub
pop
sub
stos
jmp
out
pop
test
lock
hlt
pop
loopne
dec
xchg
xor
ror
mov
pop
flds
adc
hlt
push
cmp
and
cmp
inc
scas
xor
jp
outsl
rcl
aad
mov
inc
scas
and
add
xor
jo
sub
adc
or
and
sub
cs
mov
and
sub
insb
inc
sbb
jmp
stc
xchg
cwtl
sub
insb
shll
mov
mov
test
lock
push
dec
adc
pop
lods
stos
mov
outsl
dec
inc
push
mov
mov
jb
add
push
sub
push
das
insb
cmpsb
jbe
addb
std
xor
mov
sbb
cmp
xor
lods
sarl
int
push
scas
pusha
push
je
sub
aaa
ds
xchg
adc
hlt
lcall
in
sub
arpl
pop
or
fldcw
les
dec
call
fsubrl
fsts
fmull
icebp
stc
xor
push
fwait
push
cmpsb
push
xchg
sub
repnz
jecxz
xchg
add
js
ljmp
and
out
test
test
aad
add
xchg
inc
mov
negl
jge
scas
mov
inc
sub
test
in
insl
and
sti
fwait
dec
mov
clc
push
fnstcw
push
mov
js
or
fsubs
push
testl
int3
xchg
mov
arpl
stos
dec
lock
jae
push
loope
jmp
jo
mov
mov
shll
movsl
inc
jp
fimull
movsb
jmp
cld
cmp
inc
adc
fcoml
mov
cmp
cmp
aaa
std
mov
lods
dec
icebp
pop
lcall
push
mov
push
fstpt
pop
aas
cmp
in
dec
movsl
shrb
push
fs
add
xchg
add
inc
addr16
iret
xor
push
mov
sti
addr16
sbb
pop
sbb
repnz
sub
dec
cmp
cmp
or
dec
lock
mov
in
lret
mov
push
xor
int3
mov
push
repnz
inc
int3
es
out
sbb
adc
fldenv
xor
sub
rorl
sbb
cmpsb
insb
mov
jecxz
mov
or
jns
sbb
movsb
push
mov
enter
rolb
add
inc
iret
jg
jno
adc
stos
int
imul
pop
adc
push
adc
sbb
sub
lret
enter
mov
mov
or
out
push
pop
mov
pop
scas
xor
mov
cmc
stos
pop
into
mov
out
lods
rolb
imul
pop
into
add
jg
xchg
stos
sub
test
imul
hlt
adc
mov
testl
and
add
inc
ljmp
repz
dec
adc
fwait
dec
xchg
xor
cmp
loopne
je
mov
fsubrl
fdivrs
pop
inc
mov
shlb
pop
push
mov
int
scas
push
in
push
int
sub
call
or
dec
ret
lret
enter
aad
in
inc
push
enter
dec
in
cli
xchg
mov
jl
imul
mov
subl
xchg
out
and
mov
inc
mov
popa
dec
movsl
push
sub
or
dec
call
stos
pop
xchg
dec
jl
mov
push
testb
out
xchg
mov
xchg
enter
xchg
mov
outsl
vmwrite
lcall
loop
pop
iret
outsl
fxch
lret
imul
pushf
adc
mov
test
jmp
cmpsl
sub
push
repnz
push
and
add
pop
shll
shll
test
outsb
cld
pushf
push
xchg
clc
xorl
pop
clc
mov
aas
pushw
popa
scas
shrl
fwait
inc
xlat
sbb
dec
pop
out
outsb
jp
lcall
xchg
add
push
in
data16
loope
and
add
jp
lret
or
sarb
int3
inc
loope
cld
push
jp
push
add
cli
je
pop
push
mov
cmp
cli
and
sub
xchg
pop
mov
cmpl
cli
lret
jle
stos
adc
jg
pop
jo
call
push
or
push
add
movsl
inc
aad
lret
xchg
mov
sahf
inc
jns
loop
or
cmp
inc
mov
xchg
cs
scas
sbb
dec
mov
popf
leave
test
pop
cmp
ds
jno
sub
xor
xor
sbb
stos
or
push
xchg
ss
je
dec
jmp
pop
scas
mov
ja
ds
xchg
or
mov
cli
data16
in
dec
ret
or
mov
sub
enter
popf
or
test
lahf
jmp
dec
push
mov
rcr
mov
lods
fildl
cld
inc
pushw
jo
cmp
add
mov
push
jnp
dec
dec
insl
stos
int3
inc
loope
dec
in
pop
js
or
rolb
xlat
sbb
inc
fmulp
mov
int
pop
mov
pop
push
ja
mov
mov
pop
jno
dec
sbb
out
nop
push
and
add
in
mov
push
sbbb
inc
bound
xor
fcoml
bound
push
shlb
push
adc
aas
je
pusha
adc
mov
mulb
push
add
lds
add
data16
insl
mov
and
sub
pop
leave
xchg
sbb
in
testb
and
pop
push
cmp
cmc
sbb
pop
inc
shrl
iret
sub
fwait
stc
gs
sub
sub
adc
mov
pop
stc
arpl
push
int
data16
mov
sub
sarl
mov
sbb
pop
lds
es
mov
sub
mov
lods
pop
iret
cmp
imul
rorl
lcall
pop
jmp
in
push
insb
imul
cmp
mov
cmpsl
fisttpl
push
pushf
cmp
cmp
mov
xor
repz
andb
das
sbb
push
in
aad
xorb
out
test
xchg
cmc
sbb
pop
sbb
mov
fimuls
mov
sub
andl
jg
mov
movsb
push
movsl
xor
push
sub
adc
inc
mov
push
push
stc
gs
bound
mov
outsb
sbb
cmp
jg
push
rolb
dec
mov
sti
xor
enter
jae
mov
aam
adc
movsb
pushl
lds
popf
sub
shlb
adc
add
jns
mov
inc
in
dec
bound
bound
push
repnz
imul
mov
jae
inc
fisubs
jne
js
pop
inc
repnz
stos
pop
lds
pop
pushf
icebp
and
jns
jl
mov
adc
jmp
decb
mov
mov
mov
imul
mov
dec
mov
xchg
cmp
in
mov
lods
int
or
xchg
sub
sbb
or
addr16
pop
out
call
jl
push
cmp
in
mov
ja
shlb
addl
cmpsb
mov
mov
or
ret
bound
pushf
imul
xchg
push
fiaddl
mov
mov
xchg
aaa
icebp
mov
std
cmp
out
adc
fidivrs
lahf
cld
or
test
push
pop
push
push
dec
leave
jnp
test
dec
test
aaa
push
pop
movl
adc
movsb
push
mov
sub
cs
stc
push
cmp
es
ljmp
hlt
xchg
inc
mov
add
pop
adc
cmp
xor
pop
or
call
adcb
inc
stos
xlat
jg
dec
push
andl
lods
and
lahf
mov
ljmp
jge
mov
cmp
mov
outsl
mov
inc
repz
loope
fimull
test
xchg
ss
jbe
jno
aam
fidivs
inc
jmp
lods
cli
lret
inc
div
bnd
xchg
cmp
sub
ds
mov
adc
cmp
cwtl
sub
mov
pop
lds
adc
cmp
jmp
pop
mov
daa
mov
xchg
pushf
jge
ss
repz
push
add
sub
jg
stos
icebp
cmp
jge
aas
in
jl
imul
test
into
outsb
push
cs
lret
pop
mov
verw
lret
jae
cmp
cmp
out
adc
jge
ja
bound
and
insb
aad
ljmp
and
sub
mov
cmp
int
in
xchg
push
in
mov
fs
add
and
incl
stos
repnz
mov
jo
fisttpl
in
jbe
add
clc
push
fisubrl
push
fisubs
add
and
popa
int
adc
jg
adc
pushf
xchg
movsb
shlb
xorb
add
leave
sub
cli
lock
inc
or
push
jg
movsb
mov
cmc
or
fcoml
xor
mov
mov
mov
lret
xor
xchg
mov
lods
cli
stos
xchg
xchg
and
dec
mov
push
icebp
dec
mov
cmp
adc
mov
xlat
push
adc
inc
enter
ja
pop
inc
mov
in
fsubrl
mov
or
je
es
inc
stc
adc
mov
mov
cs
pop
mov
jno
inc
xor
xor
push
loopne
mov
cmp
cmp
push
dec
popl
lods
pop
in
adc
stc
add
cld
lods
cmp
lea
filds
leave
hlt
mov
xor
push
in
movlps
jle
jns
out
mov
mov
scas
pusha
push
je
ret
mov
movsl
xor
enter
jmp
cmp
daa
insl
xlat
sbb
xor
cmp
repnz
mov
enter
lds
pop
and
lods
data16
sbb
aas
or
and
mov
add
jae
push
js
sbb
sahf
cld
dec
xchg
add
mov
and
lcall
or
shr
dec
mov
sahf
add
mov
ret
rep
roll
push
enter
cwtl
or
sbb
xchg
push
fidivrs
repz
daa
mov
ss
mov
aam
fisttpl
push
push
dec
mov
jg
jbe
mov
inc
stos
int3
push
out
mov
sbb
mov
add
movsb
xor
pop
in
in
imul
call
or
in
sbb
or
add
add
cli
pop
adc
mov
push
cmc
pop
dec
test
outsb
aam
shlb
push
xchg
xor
into
adcb
mov
add
inc
ds
pop
pop
movsl
sar
addr16
inc
mov
fdivrp
jno
xor
dec
movsb
outsl
adc
inc
add
jg
dec
aad
sbb
push
or
insb
scas
dec
stos
data16
loope
pop
adc
aam
push
je
cmpsb
mov
or
aaa
in
gs
pop
gs
movsb
ret
sub
sub
ja
mov
aaa
test
dec
sub
aas
icebp
cmpsl
add
xor
cmp
cli
lahf
into
mov
and
hlt
cmp
es
sbb
cmp
or
mov
test
jne
inc
fcompl
pop
jp
add
leave
dec
es
std
cmp
and
mov
enter
aam
pop
ficoml
jmp
divl
xchg
fs
cmc
mov
mov
int
ret
rol
mov
aam
mov
loopne
loop
es
mov
shll
sbb
mov
call
loop
gs
sahf
scas
sub
push
add
add
cmp
pusha
adc
mov
xor
mov
jnp
into
aas
hlt
push
add
push
fiaddl
insl
adc
inc
pushf
push
cs
sub
decl
imul
sbb
dec
ss
inc
xchg
subb
in
mov
movsb
fdivp
xchg
in
and
push
and
or
xor
outsl
fldl
or
pop
cmp
test
jmp
sub
shlb
xchg
cmp
lods
push
xor
es
pop
call
int
iret
add
arpl
pop
vmread
push
dec
repnz
sub
repz
popf
dec
scas
mov
pcmpeqd
and
testb
imul
repnz
insb
mov
push
insb
arpl
pop
iret
jg
cmp
sub
adc
out
mov
xchg
ja
mov
fsubrs
mov
lret
aaa
mov
xchg
pop
sub
fwait
xlat
inc
shll
add
xchg
loop
sbb
std
cmp
mov
dec
jl
or
and
mov
loope
jge
ret
test
fcompl
push
lret
mov
js
loope
and
movsl
add
int
mov
pop
cmp
daa
jae
fisttpl
push
mov
adc
pop
jge
jnp
pop
sub
pop
ljmp
xor
push
jp
jle
jle
mov
push
test
push
into
fistpl
ja
jl
cmp
mov
dec
xchg
and
mov
adc
fidivrl
push
in
adc
jmp
push
stc
or
outsl
add
lret
add
inc
pusha
scas
hlt
movsb
jo
mov
fcmovne
hlt
sub
mov
push
mov
pop
xchg
cmp
xchg
aaa
shll
inc
xor
pusha
add
mov
lret
mov
mov
cli
or
sti
push
movsb
or
dec
xor
mull
xchg
mov
mov
mov
das
out
lcall
push
pop
jbe
loop
pop
dec
dec
cld
push
mov
fwait
adc
inc
xor
lahf
xchg
pushf
and
inc
sahf
xchg
or
bound
aaa
imul
xchg
mov
sub
pop
repnz
movsb
pop
mov
shlb
gs
mov
mov
push
scas
popa
pop
movsl
ljmp
inc
sbb
insl
ret
call
add
gs
inc
scas
sbb
call
cmp
add
stc
enter
sarb
jecxz
leave
cmp
sub
xchg
add
ja
push
add
inc
pop
and
lods
cltd
add
push
in
jb
adcb
sbb
into
aas
mov
jnp
pop
repz
mov
jl
imulb
fisttpl
mov
mov
sbb
adc
dec
int3
das
les
mov
clc
dec
mov
orb
push
pop
lock
les
jge
iret
cmp
inc
xchg
nop
notl
idivl
lahf
add
mov
aad
xchg
inc
push
sbb
popf
lods
and
cltd
add
and
adc
decb
in
push
scas
sbb
out
adc
mov
movsb
lahf
and
fidivl
sahf
jns
scas
inc
scas
fsubs
lds
and
sub
dec
and
jmp
in
imul
in
xor
xchg
pop
sahf
dec
sbb
aad
lods
pop
lahf
adc
stos
push
loop
push
or
scas
std
pop
rolb
sub
jp
les
mov
sarl
ljmp
xchg
add
sub
pop
cli
lcall
testl
push
pop
add
leave
daa
xchg
lcall
push
or
in
or
movb
shl
or
mov
sahf
sahf
sub
xchg
insl
and
pop
adc
sub
dec
ficompl
mov
enter
mov
and
push
sti
or
shrl
dec
cmp
jecxz
push
jmp
pop
mov
push
cld
sub
js
repnz
das
out
pop
cld
leave
fsubrl
push
add
mov
stos
inc
mov
mov
scas
sbb
adc
ss
lcall
lock
xchg
xchg
add
mov
jle
mov
xchg
ret
dec
ret
and
sub
adc
outsl
fstl
xchg
push
cmpsb
adc
and
xchg
rorb
or
popf
mov
push
popa
adc
outsb
or
enter
es
iret
sub
mov
cmp
sahf
cmp
fldt
pop
lret
arpl
xor
loop
fwait
mov
inc
in
test
icebp
push
in
dec
pop
or
addb
out
pop
push
arpl
loope
inc
mov
dec
imul
push
mov
mov
into
sub
dec
mov
scas
inc
mov
cmp
mov
adc
imul
ja
xor
inc
out
jmp
xor
pop
das
fildll
mov
js
cmp
outsl
jb
call
movsl
xlat
scas
movsb
lret
es
xchg
xor
dec
imul
scas
shrb
lcall
mov
push
push
lods
leave
fistps
sub
dec
adc
sarl
push
fdivrl
push
mov
test
loop
xlat
cmp
push
jo
les
mov
cmpsl
push
pop
pop
jb
lret
xor
adc
push
jns
dec
cmc
push
iret
pop
mov
popa
adc
aaa
cmpsb
fsubl
int
dec
fdiv
push
rcrb
cmp
popa
xor
std
adc
cmpsb
and
in
popa
xchg
fsts
add
jbe
shll
pusha
inc
cmp
adc
mov
jb
or
aam
cmpsl
push
daa
cmp
sub
dec
stos
imulb
add
or
js
out
and
int
cmp
sbb
xor
inc
aaa
push
scas
bound
mov
fdiv
cmp
mov
mov
jnp,pt
pop
inc
mov
imul
push
movsb
add
and
in
pop
lds
xor
xchg
cltd
ljmp
xor
sbb
cmpsl
push
shl
mov
push
mov
ja
mov
xchg
aad
popf
sub
inc
add
dec
cmp
mov
loope
aad
call
pop
movsl
pop
ja
mov
push
or
adc
mov
aad
data16
xchg
ret
jg
sub
inc
pop
andl
loope
mov
lods
pop
cli
sbb
fcom
inc
notb
xor
xchg
and
push
int
hlt
mov
push
and
sub
pop
inc
xchg
sub
push
int
sti
jo
test
test
imul
imull
pushf
bound
das
mov
in
mov
adcb
mov
fwait
xor
into
ds
mov
mov
ljmp
int3
cmpb
lods
data16
jo
push
cmc
movsl
push
xchg
or
mov
xchg
lret
test
xor
xorb
movsb
fnsave
sbb
fwait
jae
fs
push
push
ss
jne
ljmp
mov
xchg
fwait
idivb
shrb
in
sbb
lock
dec
mov
stc
test
mov
fiadds
xchg
push
add
shrb
pop
inc
push
fcompl
enter
adc
xchg
dec
lods
and
cmp
dec
daa
insb
sbb
ds
mov
sub
xchg
daa
adc
xchg
xor
in
inc
scas
cmc
mov
sti
pop
push
push
imul
lods
mov
jmp
ja
mov
pop
daa
xchg
and
or
jb
ficoms
push
scas
and
adc
or
xchg
add
and
inc
sbb
mov
movsb
mov
push
rolb
in
ret
mov
push
xchg
cli
push
dec
push
fnstcw
pop
inc
into
jle
addr16
dec
mov
fimuls
das
nop
mov
es
mov
jae
fcmovu
inc
dec
ret
pop
xchg
jns
in
add
add
pushl
push
xor
imul
lods
es
enter
mov
inc
scas
out
xchg
push
out
inc
and
pushf
rcrl
inc
lock
xor
ljmp
push
pushf
dec
das
out
xor
pusha
adc
mov
mov
cmc
pop
movsb
mov
into
jecxz
xchg
xor
mov
push
int3
repz
jno
push
xlat
or
loop
dec
mov
cld
lods
pop
and
data16
push
shll
and
push
add
pushf
and
fwait
daa
inc
ja
insb
xor
mov
stos
int3
popa
or
lock
cltd
arpl
adc
xchg
xchg
fldl
push
cmp
lahf
rcrl
mov
mov
xchg
add
pop
les
xchg
inc
dec
lods
aam
mov
out
push
test
mov
dec
cli
hlt
inc
and
loopne
aad
jp
cmpsl
push
js
mov
stc
push
fadd
push
add
rorl
mov
js
fstpl
mov
fsubr
push
icebp
pop
call
js
sbb
inc
repnz
ret
aad
jno
out
icebp
inc
pop
call
mov
into
cmc
push
jbe
sbb
sbb
mov
inc
sarb
addl
dec
repnz
jecxz
subb
fadds
mov
jl
xor
sbb
enter
mov
sbb
mov
ret
stos
adc
or
mov
sbb
mov
pop
cld
lods
sbb
pop
out
cld
push
ffree
and
popl
jnp
lds
call
or
fsubr
fninit
sub
shll
sub
inc
movsb
adc
dec
test
les
jno
inc
cmp
stos
or
dec
cltd
add
xor
push
pop
dec
stos
push
int3
jne
push
xor
or
jo
and
loope
sub
xchg
push
add
movsl
mov
scas
aad
jno
mov
shrb
pushf
adc
imul
adc
lret
mulb
repz
repnz
lea
jo
xchg
push
dec
rcrb
xchg
mov
cli
cmp
mov
lods
or
fdivrp
fsubs
sub
xchg
jge
sub
add
clc
testb
jno
outsl
pop
or
jo
test
outsl
imul
cwtl
scas
xlat
sbb
es
pop
dec
adc
outsl
sbb
push
loope
dec
pop
jp
mov
xchg
ja
lods
pop
popf
cmpb
mov
mov
dec
in
ret
rcll
dec
pushf
xor
push
in
cmp
mov
inc
sbb
and
pop
iret
mov
or
pop
iret
jg
lock
push
lods
adc
imul
je
jnp
jae
dec
das
movb
jl
and
addr16
add
cmp
rcr
xchg
pop
and
test
lods
cli
filds
rorl
sarl
mov
xor
mov
add
aaa
lods
pop
lret
adc
mov
rcrl
push
mov
and
js
daa
push
jns
dec
mov
or
cmpsl
inc
mov
adc
pop
out
cmp
cmpsb
shll
push
cwtl
fldt
das
iret
cmp
cmp
xchg
mov
daa
dec
pop
outsb
inc
idivb
jmp
into
inc
in
stos
jmp
xlat
mov
lds
dec
cs
xchg
cld
pop
mov
and
and
pop
xchg
xor
test
hlt
jge
lds
mov
jns
jl
mov
fdivrl
lea
bnd
repz
xor
ljmp
shll
push
xchg
pop
arpl
cmp
pushf
arpl
popf
dec
mov
cli
mov
or
aad
icebp
imul
enter
dec
mov
xor
push
push
sub
adc
mov
pop
sub
jno
jnp
jo
shlb
fistl
dec
shlb
xlat
add
adc
sub
cmpl
mov
jbe
idivb
jnp
adc
push
sbb
test
mov
imul
push
je
outsb
jecxz
and
inc
pop
push
or
and
mov
jg
fbld
punpckhdq
and
mov
mov
xor
push
adc
xchg
aaa
fdivrl
adc
dec
mov
in
lret
in
inc
enter
jne
mov
popa
jge
js
out
iret
inc
sub
xchg
inc
sub
jg
lcall
subb
stc
test
fistl
pop
imul
and
imul
pushf
in
iret
fnstcw
push
adc
daa
xchg
and
into
pop
push
add
fcoms
addr16
dec
stos
popa
pop
xor
mov
mov
xchg
add
push
popa
stos
int
das
iret
jg
roll
sar
shlb
add
mov
and
jnp
mov
notb
fimull
sub
cmpsl
test
and
enter
or
sarb
or
xchg
and
fldt
jo
inc
mov
insb
cld
jg
repnz
push
adc
ficoms
mulb
mov
lret
jnp
aaa
adc
pop
cmp
inc
movsb
inc
in
xor
aaa
adc
loope
add
adc
jecxz,pt
enter
jecxz
hlt
hlt
push
fnstcw
dec
and
test
cld
shrb
push
cmp
jnp
sub
cltd
adc
mov
cltd
mov
testb
lret
imul
movl
sbb
sbb
addr16
xchg
std
imul
mov
xchg
shrl
dec
mov
mov
mov
xchg
repz
lock
das
outsb
mov
adc
adc
and
jp
inc
lods
jecxz
mov
lods
std
push
scas
sbb
sub
and
mov
xchg
xor
or
fcomps
jne
and
add
aaa
sub
sbb
lods
push
fwait
aaa
sub
pop
or
aaa
sub
sti
adc
insl
mov
add
sub
pushf
ja
aas
dec
jae
mov
pop
fxch
dec
cmp
pop
ret
jl
mov
test
mov
test
push
cmp
or
sbb
mov
in
sbb
sar
in
jmp
pop
xor
es
pop
ds
sbb
and
cmpsb
cli
sub
adc
dec
mov
fwait
adc
gs
mov
push
pop
sbb
xchg
lods
sub
test
push
sbb
cmp
iret
push
jne
sbb
xor
and
push
add
pop
or
inc
sub
xor
cmp
or
aad
mov
fisttps
fstl
sub
pop
cmc
movsb
sbb
imul
sahf
or
mov
lret
mov
lods
popa
mov
in
pop
mov
jo
xchg
sbb
cwtl
lcall
adc
aaa
push
ljmp
mov
cmp
inc
or
xchg
jns
es
inc
aaa
addl
cltd
push
enter
mov
sti
enter
mov
outsb
or
sti
xchg
imul
ficoms
sub
pop
out
xor
ret
sbb
jo
test
cmpsb
sbb
ljmp
out
or
adcl
sbb
pop
fdivl
sbb
loopne
or
sub
or
test
or
aad
adc
push
inc
mov
cmpsb
jecxz
in
cmp
ret
outsb
adc
mov
or
pop
test
stos
loopne
aad
xchg
ljmp
push
dec
xchg
fldpi
xor
jle
ja
fsubl
shrl
inc
dec
push
cli
in
jne
dec
arpl
imul
rcl
mov
sub
cmp
jge
inc
inc
pop
cs
cld
pushf
cmp
pop
in
dec
sub
ljmp
cmp
push
sti
xor
pop
jb
xor
dec
cld
dec
dec
movsb
sub
mov
cmpsb
test
aaa
mov
clc
ja
rolb
outsl
mov
or
or
xor
jmp
xor
pop
xchg
clc
les
jge
in
sbb
sti
movsl
jge
jl
insb
cli
stos
imul
dec
sbb
inc
iret
fcmovnb
cs
dec
add
adc
xchg
lret
xchg
stos
xlat
jno
fldenv
mov
mov
jmp
cli
test
dec
addl
loope
rol
cmp
push
mov
push
stos
dec
cmpsb
insb
adc
subl
notb
arpl
mov
lock
push
in
test
jne
daa
and
addr16
lcall
fbld
imulb
es
sbb
data16
mov
in
insl
cs
into
and
sbb
xchg
jecxz
pop
ds
or
popf
cmp
hlt
mov
dec
pop
jo
aaa
push
repnz
mov
dec
ret
jae
test
mov
push
icebp
in
aaa
test
mov
js
and
andps
lret
pusha
lret
inc
sarl
lcall
add
inc
ds
or
and
dec
enter
mov
hlt
adc
push
notb
mov
shrl
ret
lret
cmpsb
in
xchg
imul
ffreep
lahf
aas
mov
cltd
inc
fsubp
sbb
js
dec
push
stos
sbb
jecxz
les
aam
jp
push
fcoms
rorw
push
sbb
in
rolb
push
sub
or
mov
jle
in
and
negl
adcl
call
pop
xlat
or
inc
shl
xor
add
dec
ss
mov
es
xchg
stos
loope
into
inc
repz
ss
add
pop
mov
cs
dec
test
cwtl
lcall
adc
xchg
add
inc
bound
lock
jb
test
popf
adc
lock
scas
pop
roll
mov
mov
mov
loop
add
pop
xor
lds
xchg
xor
jmp
test
or
inc
mov
sub
aam
sub
jns
fidivs
loopne
mov
xor
dec
lret
lret
outsb
push
sub
aaa
call
dec
dec
scas
jmp
pop
cmp
sbb
pop
add
dec
mov
lods
sbb
aad
jecxz
adc
add
cmpsb
adc
fdivs
mov
cmp
xchg
xor
clc
pop
fs
ficompl
push
add
jecxz
push
cmpsb
add
outsb
int3
jno
mov
pusha
popf
or
jle
ss
mov
mov
dec
cmp
adc
mov
mov
out
add
sub
in
push
stos
push
pop
cltd
mov
add
popf
cwtl
es
notl
das
aam
test
push
es
mulb
andl
dec
sahf
ds
std
pop
sbbl
sub
mov
nop
sbb
leave
ds
loop
sbb
sbb
sbb
xchg
sub
push
mov
aad
ss
movsl
adc
inc
mov
mov
jbe
mov
jmp
out
dec
stos
push
mov
xlat
popa
ss
cmpsl
adc
mov
and
mov
fwait
xchg
idivb
inc
cmp
test
aaa
mov
leave
mov
add
ss
inc
lods
sbb
dec
fnstenv
xlat
xor
pushf
sub
pop
call
jno
insb
sbb
fisttpll
iret
ss
ucomiss
and
mov
inc
cmpsl
in
das
push
outsl
nop
cld
arpl
jnp
cs
sbb
lcall
imul
js
cs
loop
loop
mov
imul
and
inc
xchg
xor
mov
adc
pop
sbb
lock
shll
movsb
jmp
mov
lods
push
jae
and
lret
and
mov
ja
dec
iret
js
out
mov
loope,pn
test
adcb
cltd
cmp
push
dec
addr16
scas
inc
adc
loope
shl
rcrl
std
add
push
add
or
iret
je
mov
adc
jo
lds
jge
cmp
lret
xor
inc
push
pushf
fdivs
push
push
or
daa
ja
insb
and
in
mov
outsl
jmp
push
add
and
ficompl
mov
aaa
subl
notb
insl
mov
mov
sub
pop
sbbl
mov
sub
xchg
mov
add
xchg
fdivrl
lret
insl
stos
loopne
gs
push
mov
imul
inc
lcall
in
loopne
xorl
jmp
dec
stos
push
movsb
inc
in
cmc
stos
cmp
inc
cmovae
jns
repz
sub
mov
punpckhdq
fistps
mov
pushl
push
add
ljmp
fisttpll
int
mov
mov
cmp
les
inc
in
cmc
stos
cmp
inc
push
jmp
mov
inc
out
pop
in
jge
xchg
notb
and
pop
xchg
add
sbb
inc
popf
sub
push
or
mov
lock
adc
les
fs
mov
pop
leave
imul
mov
mov
push
mov
dec
fidivl
je
and
xor
adc
jne
jne
mov
test
and
inc
cli
cltd
inc
xlat
or
push
insb
das
into
sbb
xchg
xor
mov
stos
fdivrl
hlt
add
lahf
adc
push
mov
xchg
mov
int3
jmp
cmc
or
loopne
call
xchg
push
ds
xchg
in
or
push
and
daa
xlat
out
push
sbb
or
mov
pop
popf
sar
adc
pushf
in
and
repnz
test
pop
iret
js
nop
cmp
lock
xor
das
lahf
adc
aad
jo
xchg
or
lret
sbb
out
stc
dec
pop
out
insb
mov
sbb
xor
xchg
xchg
test
hlt
mov
addl
sub
mov
test
arpl
lds
pop
sbb
mov
notb
push
fdivp
dec
mov
pop
stos
push
dec
mov
fimuls
push
js
mov
jl
mov
pop
jns
mov
cmp
es
pop
jnp
mov
cltd
stos
dec
nop
inc
call
into
or
mov
stos
icebp
data16
les
aas
pop
push
or
imul
mov
ja
ja
idivb
jnp
xorb
sahf
mov
push
sbbb
mov
es
xor
leave
lock
pop
jns
out
jge
jmp
sub
test
push
js
in
clc
pop
iret
mov
fdivs
and
leave
and
int
cmp
in
inc
sub
or
loopne
sahf
or
cmp
sti
or
sub
mov
jl
pop
insl
jne
jno
jnp
incl
inc
test
lret
dec
mov
repnz
push
loopne
pop
int
or
mov
add
les
fcoml
xor
fidivl
xchg
int3
cs
or
shlb
out
fdivs
push
filds
cld
data16
mov
imul
pusha
and
jnp
push
mov
in
nop
movsb
mov
xor
arpl
hlt
jbe
sbb
pop
inc
insl
or
pop
aas
in
insb
adc
xchg
in
and
mov
fidivl
enter
cli
movsl
lret
xlat
dec
cld
or
xchg
ds
xlat
js
pop
scas
das
mov
in
ja
or
mov
pop
cli
stos
sbb
in
addr16
notl
andb
shlb
xchg
or
mov
xchg
and
jno
psrld
and
outsl
std
pop
sar
js
push
lock
pop
mov
sbb
out
repnz
in
popf
push
and
mov
orb
in
leave
add
cltd
dec
jmp
sbb
in
jbe
xchg
les
jmp
dec
int
adc
fs
daa
xlat
dec
jg
mov
xor
cmp
insl
fiadds
test
or
test
nop
xor
push
adc
add
dec
enter
daa
mov
pop
xchg
add
cmp
rorl
in
enter
cmc
cmp
sbb
call
mov
hlt
movsb
adc
lock
out
jmp
fmull
andb
in
int
insl
sbb
pop
mov
pop
push
test
cmpsb
out
test
ss
mov
add
sarl
mov
sub
repnz
call
add
mov
inc
jle
pop
sahf
xor
adc
cmp
pusha
repnz
ss
pop
pop
cmp
sbb
mov
imul
sahf
dec
sahf
insb
ss
nop
add
ss
add
adc
iret
lahf
cmp
out
xor
xchg
jmp
out
shll
xchg
xor
scas
fdivrs
pop
sub
fwait
stc
shrl
fwait
sub
inc
iret
mov
inc
movsb
adc
ret
clc
push
mov
inc
loop
add
aad
aas
int
shlb
and
inc
jnp
add
andb
adc
fidivrl
movsb
xor
mov
inc
mov
dec
xor
adc
jl
xor
ffreep
pop
jp
out
mov
push
push
pop
add
sub
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
push
push
pop
sub
sub
push
mov
or
add
and
or
dec
add
and
pop
xor
mov
pop
push
mov
addl
pop
sub
mov
addl
popl
subl
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
mov
ret
repz
mov
add
jmp
dec
lret
pop
cmp
push
jnp
push
in
pop
dec
cltd
sub
imul
cmp
imul
and
nop
mov
or
call
dec
jns
sbb
push
hlt
or
scas
lods
inc
aaa
dec
lods
dec
push
mov
test
or
add
mov
gs
aad
in
jnp
jle
pusha
popa
pop
ja
jmp
add
jne
ds
es
xchg
jno
add
add
add
mov
adc
add
mov
add
mov
jne
ss
sbb
mov
mov
xor
mov
xor
movzwl
sub
add
push
call
push
add
sub
rolb
push
hlt
xchg
jl
addb
imul
mov
pop
push
mov
pop
sub
jmp
xchg
xor
xchg
outsl
pop
out
cli
call
test
stos
sarb
cmp
daa
mov
cmc
jae
cmp
jae
cmp
ret
cmc
aas
in
stc
daa
test
pop
das
cmpsl
dec
pop
jp
shrb
es
mov
int
pop
das
mov
push
and
js
pop
adc
or
popf
notl
xor
imul
mov
cmpsl
imul
pop
cltd
sbb
jae
les
pop
jae
enter
lret
in
xor
inc
inc
mov
or
cmp
sub
fistpll
daa
mov
cmp
push
xchg
dec
in
jle
stos
rcl
int3
sbb
pop
lea
mov
push
out
xchg
xchg
hlt
cmpsb
loope
imul
test
out
nop
fsubs
inc
daa
arpl
lcall
imul
call
loopne
and
mov
mov
add
mov
push
iret
and
and
jg
dec
aaa
test
inc
push
daa
push
int3
mov
mov
ja
popf
inc
fidivs
rorb
outsb
inc
or
mulb
in
jg
and
sbbb
fisubs
stos
out
mov
fs
fsubr
mov
adc
es
bound
push
or
pop
sbbb
insl
test
testb
loope
into
xchg
lahf
popf
outsb
fnstenv
mov
stos
adcb
and
xchg
adc
daa
pusha
shrb
mov
sub
andb
inc
push
mov
imul
sub
cmp
or
sbb
push
and
push
push
dec
rcll
rolb
movsl
cmp
mov
add
mov
dec
rorl
jno
mov
fisubs
lret
ret
inc
repz
jo
hlt
repz
pop
enter
dec
mov
push
mov
shlb
mov
mov
popf
nop
sbb
movsl
pop
scas
push
xchg
adc
jne
fisttps
cmp
mov
and
mov
mov
in
out
mov
pop
adc
es
lret
add
out
scas
or
test
movsb
sub
inc
clc
lds
cltd
add
pop
push
or
inc
jbe
addb
out
jg
mov
mov
ret
stos
es
pop
push
push
or
insl
lea
repnz
adc
jle
pop
or
adc
push
xorl
fisttps
fsubl
inc
jns
mov
add
lret
fldl
or
mov
fidivrl
xor
rclb
pusha
outsb
dec
mov
sbb
xchg
shl
mov
jns
xchg
jg
add
jmp
test
jae
mov
sub
lahf
into
mov
je
lret
inc
repnz
out
add
xor
inc
sub
outsb
lea
add
pop
mov
inc
movsl
test
mov
mov
mov
inc
jmp
and
std
lods
rol
mov
lahf
rcrl
mov
sub
aaa
aam
shrb
xor
fs
fbstp
les
int3
mov
aad
cmp
ja
pop
lock
sub
aaa
fsub
movsl
into
aam
mov
pop
dec
push
int3
jbe
xchg
sub
jmp
inc
gs
repz
push
adc
jmp
or
lds
push
sbb
or
xor
mov
sub
es
xor
int
test
sbb
shrl
je
mov
roll
popf
pop
loopw
int3
cmp
lcall
ss
mov
jl
faddl
aad
ret
mov
xchg
insb
adc
sti
jno
sbb
cmp
jno
jno
mov
cmp
paddusw
xor
push
jnp
pop
push
lea
out
data16
notb
push
or
and
repnz
aas
sub
into
jbe
iret
jbe
cmp
std
and
and
sub
std
pop
adcb
jp
shr
cmpb
test
je
ficomps
pop
scas
popa
enter
mov
sub
sub
or
inc
sar
inc
aas
push
cmp
addr16
cmp
fisubs
push
jp
fs
inc
mov
test
mov
addr16
xor
out
ret
inc
int
mov
sti
pop
dec
mov
cmp
xchg
sti
jbe
xchg
test
ja
jecxz
gs
shll
cmp
nop
lret
jae
cs
jle
into
jmp
in
mov
pop
fwait
pop
icebp
jnp
aad
xor
repz
mov
imul
es
or
enter
xchg
sub
das
pop
dec
add
xchg
int3
cmp
mov
shrl
ret
cld
ret
and
out
enter
lods
sbb
iret
pop
mov
xor
pop
and
cmpb
sahf
add
in
ds
xchg
fisubrl
cmp
loopne
jle
fs
mov
xor
scas
jb
data16
cwtl
stc
insb
popa
pop
mov
push
call
pop
xor
mov
stos
adc
sbb
addr16
scas
add
add
ds
divl
movsl
push
mov
out
xorl
xchg
push
fwait
add
inc
adc
scas
outsb
roll
sbb
adc
and
pop
mov
stos
mov
jle
or
mov
or
add
xor
and
xchg
xchg
rolb
xor
push
dec
aaa
ja
pop
xchg
je
addr16
xchg
inc
cld
mov
pop
dec
loope
sbb
bound
xor
in
pop
xor
xchg
scas
nop
mov
in
adc
mov
mov
test
stos
jge
mov
out
xorps
mov
pop
test
mov
movsl
push
dec
movsb
lods
insl
mov
negb
or
ljmp
push
inc
cmp
test
icebp
adc
mov
movsl
out
cmp
mov
into
cmpsl
movsl
movsb
sbb
sbb
mov
inc
inc
cmp
jmp
lcall
lret
aaa
fnsave
mov
cmp
push
inc
pop
fs
aam
test
jae
je
pushf
xor
xor
mov
xchg
or
push
jns
sbb
xor
push
push
outsb
xor
ds
mov
les
inc
shll
and
mov
lds
dec
shr
and
inc
cmp
arpl
xchg
dec
mov
push
popf
push
dec
jg
imul
dec
mov
js
imul
xchg
fs
ss
out
in
fadds
cli
xchg
icebp
push
nop
dec
mov
cwtl
mov
mov
or
loop
adc
push
fistps
pop
aam
mov
and
cmp
jns
popf
test
lahf
mov
jg
lods
cmpsl
loope
and
cmp
ja
mov
or
mov
int
pop
scas
out
or
js
aaa
fucom
push
movsl
pushf
out
mov
add
lock
test
jl
xor
addr16
pmaxub
sbb
sbb
push
push
je
add
daa
cltd
xchg
dec
ljmp
xchg
fdivl
sbb
sub
leave
test
inc
jo
jbe
fsubl
sbbl
push
cmpsl
adc
pop
test
jmp
je
jle
rolb
mov
imul
iret
aad
faddl
jo
jo
sahf
push
xchg
pushf
sti
xchg
cmc
pop
pop
fistl
lret
push
outsb
cmp
add
mov
fnstenv
mov
inc
and
mov
ja
dec
out
les
and
nop
xchg
pop
push
in
or
xor
test
inc
mov
pop
mov
pusha
test
movsb
aam
aam
or
or
sbb
adc
adc
cli
test
mov
in
in
pop
and
mov
jnp
jg
cwtl
pop
or
jae
jmp
mov
rcl
fiadds
mov
lcall
cmp
add
in
fisttpl
push
xchg
out
mov
mov
je
mov
push
jp
popa
sbb
jge
int
out
arpl
mov
lcall
dec
sub
cwtl
movsl
dec
jns
aas
xchg
repnz
cmpsl
and
nop
inc
std
lahf
inc
jbe
mov
add
test
nop
xchg
gs
and
loop
dec
out
ffree
sbb
add
or
lods
aad
aad
adc
in
mov
sub
add
daa
mov
stos
jmp
fcmovnu
loop
mov
lahf
mov
add
call
dec
cmp
mov
xor
and
add
repz
imul
adc
call
mov
addr16
jbe
daa
mov
adc
sbb
scas
lret
push
push
in
rcll
sbb
rclb
push
jno
push
and
xchg
fs
stos
xchg
dec
lret
iret
out
jg
icebp
xor
inc
and
xor
sub
sbb
push
hlt
dec
dec
out
nop
add
xchg
or
test
mov
and
sub
insl
dec
mov
adc
pop
lea
push
or
les
push
cmpsl
mov
mov
js
int3
xchg
andl
or
ret
add
mov
fidivrl
nop
adc
push
rol
push
xor
sarb
inc
test
jae
jo
or
ret
jecxz
std
push
xor
jb
clc
mov
or
mov
repnz
nop
cmp
ret
or
es
xchg
mov
outsl
in
mov
cmp
pop
push
lea
into
or
int3
dec
int
js
loope
push
je
pop
sub
cli
or
incb
push
xchg
push
jns
shlb
mov
mov
cltd
je
pop
shrl
jbe
sar
shlb
pop
leave
xor
negb
popa
dec
loop
mov
adc
or
fwait
dec
hlt
jp
je
push
cwtl
add
lahf
cmp
vsqrtps
pusha
mov
negb
jp
cltd
adc
bound
cltd
mov
ljmp
xchg
outsw
sarl
test
add
fwait
cmc
sbb
dec
fdivs
xor
fs
push
rcrl
cmp
addb
sub
in
adc
into
cmc
leave
pop
pop
outsl
repnz
cmp
int
nop
lret
loop
jbe
or
xchg
mov
out
aaa
dec
jb
xlat
scas
sub
rclb
xchg
into
jb
jl
jmp
xor
movsb
mov
cwtl
out
xchg
sbb
lcall
stc
jp
aas
mov
mov
cmp
cwtl
adc
sahf
inc
lea
mov
test
ficompl
sbb
pop
into
arpl
imul
xor
lods
mov
adc
add
jns
jmp
test
outsb
rclb
nop
stos
insb
jno
imul
xchg
ds
into
jg
xchg
loopne
add
ja
rdmsr
xchg
mov
push
stos
push
inc
push
cmp
or
xorb
int
mov
push
roll
fwait
inc
les
sbb
push
cmp
jle
push
cmpsb
test
insb
jbe,pn
and
pushf
xor
push
sbb
jno
inc
pop
and
test
les
mov
jo
jle
cmp
outsb
push
mov
pushf
test
movsb
jns
push
mov
jp
ds
sbb
into
mov
pop
aad
sbb
and
lret
adc
xchg
sbb
les
mov
mov
icebp
inc
mov
lahf
cltd
jno
int3
inc
insb
xchg
ret
lea
mull
fwait
sbb
jo
lcall
adc
or
outsb
out
pop
jmp
mov
stc
in
in
dec
lods
dec
rolb
test
cli
int3
cs
jge
sub
push
inc
idiv
loope
add
cld
jmp
jmp
xor
xchg
sub
fnstenv
loop
test
enter
sbb
insb
insl
dec
and
mov
call
inc
or
lods
jbe
shlb
sub
repz
fdivp
adc
lcall
mov
mov
ror
inc
repnz
jmp
xor
mov
mov
cmp
aaa
pop
jp
sbb
mov
cld
jb
cmp
rolb
enter
sbb
xorb
leave
ret
inc
xor
pop
jae
mov
mov
out
or
mov
mov
jle
mov
and
dec
mov
xor
mov
stos
scas
sbb
add
jnp
pop
add
mov
test
pop
jnp
push
mov
fmuls
fiaddl
ljmp
test
jmp
fs
push
and
push
sub
cmp
mov
jae
int
inc
pop
add
and
inc
ret
jl
push
and
test
or
jo
gs
adc
push
lds
mov
lahf
int
sbb
xor
push
or
ljmp
xor
dec
cmpsb
fs
out
cwtl
jg
jmp
xchg
enter
movsl
icebp
movl
lahf
and
imul
sbb
inc
jno
mov
das
outsb
adc
out
pop
repnz
clc
sbb
and
cmp
nop
mov
mov
pushf
xchg
xchg
dec
decb
mov
in
nop
fildll
inc
sub
mov
sbb
push
mov
xchg
fidivrs
in
leave
push
je
push
cmpsl
movsl
movsb
jl
jnp
scas
or
sub
popa
icebp
xor
mov
imul
lcall
popf
adc
popl
and
sbb
cmpsb
lret
dec
jb
aas
imul
fidivl
jp
jecxz
test
int
xor
rep
mov
mov
and
in
test
add
sub
mov
and
popa
incl
sbb
sub
in
out
sbb
mov
push
in
lcall
mov
loop
sbb
dec
int3
mov
push
jle
push
mov
jle
inc
out
mov
adc
or
inc
ret
jbe
mov
and
sbb
cmp
mov
test
push
movsb
pop
mov
int
push
les
sub
pop
jp
mov
or
fs
aas
stos
lret
xor
pop
ljmp
sti
adc
cmpsb
mov
inc
lock
fwait
call
push
aaa
pop
mov
push
lock
xchg
mov
int
jg
mov
inc
lea
hlt
sarl
jbe
shll
xor
dec
mov
leave
jne
sbb
into
xchg
rcrb
int
in
das
pop
repz
mov
cld
std
not
push
mov
add
aaa
xor
pop
jecxz
dec
lret
popa
mov
sbb
sbb
xchg
movsb
jle
es
and
sbb
loope
adc
xchg
dec
sbb
dec
lahf
stc
arpl
inc
cld
and
sarl
dec
adc
imul
test
xchg
jns
stos
xor
jnp
pop
lods
jecxz
sahf
imull
ret
dec
pop
add
sbb
push
fisubl
jnp
decl
stos
aas
adc
or
xor
cmp
cmc
push
sub
inc
ret
or
incb
insb
cmp
fcmovnb
lods
pop
jl
mov
lea
es
push
pop
add
xchg
in
ficoms
pop
mov
push
sbb
cs
lret
adc
frstor
jge
orl
mov
fninit
fistl
outsb
in
cs
scas
cmc
lock
dec
and
xchg
stc
mov
pop
scas
test
fmull
pop
lods
pop
aad
xor
int3
movsl
int3
cmpsl
movsl
xor
test
add
rol
fcomi
idivb
mov
cmc
push
into
adc
pop
data16
jl
bound
cmp
or
add
stc
dec
sbb
popa
push
pop
mov
jns
sub
jbe
orb
jo
mov
cmpsl
daa
pop
hlt
sti
les
pop
pop
jo
out
sti
jae
and
out
inc
cli
shll
sbb
lahf
loop
and
scas
adc
popa
pop
rcrl
ret
inc
mov
mov
adc
add
dec
movsl
pusha
or
push
pop
mov
pusha
adc
push
popa
inc
scas
rcrl
sbb
rclb
out
aaa
cmc
leave
jle
ss
pop
fisttps
mov
pushf
test
je
or
jg
adc
mov
cltd
pop
scas
rclb
xor
and
lahf
clc
into
jae
dec
insl
and
inc
fwait
andb
or
push
push
jnp
cmp
cli
jae
and
push
xor
add
gs
mov
stos
out
cltd
mov
gs
push
inc
icebp
and
dec
add
scas
push
and
xor
mov
jmp
jle
into
fsubrs
jg
pop
scas
lahf
call
mov
stc
jbe
pop
enter
idiv
mov
gs
sub
popa
imul
xchg
add
lret
or
mov
fnstsw
mov
mov
and
mov
xchg
clc
mov
push
ja
mov
loope
pop
mov
xor
cwtl
sbb
in
cmp
add
mov
jecxz
inc
pop
jl
ret
rorl
movsl
pop
mov
push
popa
scas
xorl
xchg
int
outsb
insb
orb
imul
int3
push
pop
ret
je
and
sbbl
pop
add
mov
cmp
add
or
mov
pop
divl
inc
pop
cmpsb
int
push
inc
cmp
insb
mov
push
or
js
and
jl
xchg
sbb
sub
fbstp
scas
cmp
pop
sbb
sub
insb
and
add
rcr
into
aad
popf
lret
jae
nop
cmpl
js
filds
adcb
fsubrl
scas
cmp
push
aas
add
sub
mov
add
sbb
pop
pop
inc
jg
dec
int
jbe
test
add
imul
sub
dec
mov
ret
pop
mov
lret
lods
insl
test
int3
xor
xor
sbb
mov
cs
daa
vucomiss
sbb
js
push
jne
mov
enter
jo
es
lret
repnz
stc
shrb
outsl
andl
pusha
mov
or
and
out
push
xchg
pop
daa
out
les
mov
jae
lds
xor
shl
sbb
jns
aad
shl
pop
dec
out
jmp
in
ljmp
cwtl
mov
jp
arpl
hlt
dec
pop
pop
inc
dec
inc
xchg
push
mov
scas
fmulp
xchg
and
ds
jno
test
and
fisubrs
inc
das
pop
ljmp
pop
mov
cmp
push
pop
xchg
xlat
into
and
hlt
xor
inc
mov
pusha
jmp
mov
mov
int3
int3
das
into
sbb
pop
jb
push
dec
push
push
pop
xor
pop
ss
mov
mov
pop
shrb
test
or
fistpll
in
cmp
out
fmuls
push
pop
lcall
xchg
mov
cmpsb
push
aas
or
clc
mov
mov
adc
jp
mov
mov
es
inc
das
data16
adc
int
dec
lock
add
dec
popa
bound
and
out
jbe
rorl
mov
xchg
aad
add
leave
lods
mov
push
je
inc
jmp
pop
arpl
mov
xchg
movsb
sbb
sarl
push
sub
push
jbe
mov
push
sbb
mov
dec
sub
push
add
imul
je
ja
pop
lret
testl
xor
in
or
mov
push
adc
repz
inc
stc
std
cmp
push
cmpsl
fadds
inc
rorl
hlt
scas
adc
stos
sar
jne
ljmp
lret
mov
arpl
pop
mov
rclb
add
cmpsl
push
dec
or
mulb
das
addr16
sub
jg
dec
mov
testb
push
add
idivl
in
subl
out
out
lods
lock
sub
fwait
std
mov
add
mov
pop
loope
icebp
call
pop
rcrl
fisubrs
mov
adc
aam
jae
das
outsl
pop
xchg
outsl
pop
add
gs
int3
xor
les
movsb
lds
fmul
push
fnstenv
hlt
test
and
xlat
sub
fs
dec
or
and
out
pop
stc
popa
xchg
jae
rcr
adc
arpl
int
dec
adc
jns
test
push
fdivrs
mov
xchg
mov
xchg
aaa
and
cld
ret
aam
shlb
scas
sub
mov
out
leave
push
or
cmp
or
stos
inc
sbb
push
loop
push
xor
push
mov
test
lods
push
pushf
add
and
mov
loopne
shll
jnp
sub
dec
fnsave
pcmpgtd
sub
mov
pop
cmpsb
je
mov
push
pop
in
sti
mov
fstps
xor
aam
xchg
add
test
aad
sbb
lahf
sub
dec
movsb
cmp
ret
movsb
test
lods
shrb
and
ljmp
jg
arpl
and
xlat
push
jae
enter
rolb
pop
mov
xlat
jl
lret
sub
out
xor
cmp
aam
cmp
sub
push
jae
subb
sbb
inc
dec
popf
or
xor
clc
mov
push
add
cmp
jmp
ja
filds
xchg
add
out
test
gs
sahf
shlb
jb
dec
mov
testb
jae
mov
decb
pop
push
mov
not
pop
adc
movsb
jg,pn
xor
push
shl
shr
lds
fildl
shrl
int3
js
push
shlb
pop
imul
cs
jecxz
jnp
xor
cltd
adc
pop
pusha
std
pop
hlt
repz
xor
push
aaa
pop
aaa
call
sub
clc
mov
cs
add
mov
jle
cwtl
sbb
pop
fadds
shll
lea
test
mov
mov
jmp
insb
inc
mov
fiaddl
das
adc
push
push
cs
pop
pop
xor
mov
sbb
dec
into
insb
cmpb
stc
std
outsl
xlat
test
mov
repz
stos
xor
addr16
jbe
inc
cmp
fwait
jo
out
iret
pop
cwtl
movsb
jne
mov
addl
jnp
sub
add
add
lret
fs
clc
aaa
sbb
daa
mov
data16
shlb
xchg
inc
movsb
or
jb
in
mov
movsb
xor
mov
lea
in
into
cmp
and
xchg
fwait
les
cmp
stc
adc
aad
aam
cmp
xor
fcmovnbe
lret
and
cmp
das
push
enter
cmp
ljmp
notl
loope
xor
popf
adc
xchg
repz
movsl
xchg
jnp
jmp
loopne
mov
stos
lahf
lret
outsl
clc
test
lods
inc
adc
scas
and
test
cli
push
or
not
pop
push
loopne
push
ljmp
bnd
push
pop
and
mov
lods
xchg
sarl
inc
or
adcl
fldt
into
cmp
pop
add
in
push
sub
xchg
stos
jb
cmp
mov
loopne
bound
adc
repnz
xchg
xchg
mov
cli
clc
ret
ja
ret
fistl
jg
movsl
xchg
daa
jns
dec
mov
lcall
pop
mov
fcompl
xlat
ficompl
mov
ret
xchg
or
int
std
insl
fstpt
push
push
fs
fiadds
xchg
popf
add
sub
mov
cmc
push
std
or
mov
push
out
adc
adc
sub
cli
mov
sbb
jg
js
cmc
jnp
fisubs
push
sbb
out
mov
movsb
insb
call
cmpsb
xor
call
ret
leave
or
fldenv
push
or
imul
add
xchg
mov
ret
pop
insl
xor
xchg
sbb
in
mov
outsb
and
mov
sub
repz
decl
dec
shrb
test
loope
mov
pop
sbbl
xchg
lods
xor
cld
into
aam
cmp
jb
pop
and
lcall
push
add
adc
pop
mov
mov
or
outsb
or
add
fwait
inc
fmulp
xchg
rcll
jnp
gs
sar
je
rorb
mov
jo
fnsave
ljmp
icebp
add
push
ret
test
ds
cli
inc
cmp
std
jg
cmp
push
fstl
nop
popf
dec
bnd
cmp
or
and
mov
cmc
sub
popf
cli
lock
stos
sbb
arpl
push
rep
cli
aas
sahf
mov
pop
pushf
jl
and
outsl
xchg
lret
xlat
fistps
inc
out
shl
and
xchg
push
gs
icebp
push
jmp
adc
gs
flds
mov
cmpsb
test
xchg
test
movsb
jno
sti
outsb
sub
insb
sbb
daa
mov
ds
mov
pusha
sub
sub
in
lds
rclb
lea
and
cmp
dec
push
or
out
xchg
or
clc
jbe
data16
inc
mov
cmp
mov
stos
mov
repnz
or
jmp
jns
sbb
or
pop
loopne
negl
outsb
dec
mov
daa
or
or
test
xor
cmp
decl
fwait
sub
xchg
stos
cmp
jge
test
fcmovu
in
or
sbb
mov
mov
push
mov
cmp
push
cmp
in
fadd
nop
addr16
in
mov
inc
nop
int3
shr
push
xchg
inc
notb
das
push
lahf
jmp
shlb
mov
movl
push
cltd
cmpsl
stc
xorl
loopne
and
push
push
dec
jecxz
jl
push
xorl
mov
out
lcall
push
cli
xchg
int
clc
aam
ljmp
lret
mov
jge
sub
orb
stc
sbb
mov
outsb
cltd
sub
mov
cmc
stos
cmpl
inc
idivl
aam
arpl
jne
ss
xlat
or
hlt
xor
and
in
adc
into
and
sub
dec
out
mov
test
out
mov
andl
mov
rorl
add
pop
call
jecxz
cli
xchg
in
repz
mov
orb
test
test
imul
mov
dec
outsb
mov
jbe
ret
pop
pop
movsl
or
inc
ja
div
stos
push
lahf
jo
mov
cld
mov
sub
dec
mov
movsb
cmp
pop
or
jmp
lret
jae
pop
out
leave
xchg
adc
out
jno
add
xchg
clc
mov
mov
int
movsb
sub
mov
push
lcall
mov
shrl
sbb
out
leave
sub
xor
inc
jnp
push
rcrb
pop
add
aad
add
sbb
iret
or
adcl
sahf
pushf
lods
push
ficomps
and
test
xchg
push
mov
ds
inc
add
dec
repz
filds
inc
adc
xor
iret
jns
or
jle
lock
add
adc
loop
push
jg
xor
test
mov
pop
pop
xchg
push
jno
jge
stos
das
push
inc
jge
orl
or
cmpsb
notb
jge
push
addr16
sbb
mov
sti
sbb
cmp
add
and
aad
lock
sbb
int3
sarl
jbe
in
setns
aaa
mov
jne
into
and
or
roll
je
mov
and
mov
cwtl
add
mov
inc
push
mov
ret
adc
mov
push
jmp
mov
xorl
mov
shrb
adc
cltd
mov
stos
aad
jo
in
cld
xchg
into
mov
ds
or
addr16
and
shrl
xor
fwait
mov
aas
pop
out
shrb
hlt
jns
std
mov
pop
pop
popa
mov
jmp
add
lcall
jno
xchg
pop
lock
pushf
push
icebp
jae
int
into
outsl
adc
adc
jmp
in
addr16
xor
sub
je
pop
pop
xor
aad
push
mov
dec
xlat
dec
cmc
es
sub
jmp
int
lret
sbb
pop
xchg
popf
bound
add
lods
mov
cmpl
jae
pop
lret
jno
adc
data16
loopew
insl
sbb
inc
push
xchg
or
cmpsl
jmp
pop
neg
pop
int
push
je
mov
xchg
add
xchg
pop
cmp
enter
int3
mov
xchg
test
mov
ret
aas
xchg
or
pushf
popf
adc
xchg
loope
jecxz
pop
adc
jle
fistpll
sbb
push
je
xchg
xor
lods
pop
add
xchg
repz
cmp
aam
or
nop
inc
cli
push
out
jg
jmp
movsl
add
adc
push
sbbl
sub
push
in
out
out
scas
lods
sbb
out
add
repz
movsl
fstpt
xchg
je
outsl
dec
jp
xchg
xchg
je
xchg
mov
push
or
fimull
cmp
mov
int3
pop
hlt
xlat
lock
jmp
xchg
dec
lds
lods
mov
jbe
into
xor
mov
ficoml
das
clc
lea
scas
repnz
sub
sbb
add
fistpl
rorl
mov
lret
jge
lock
adc
data16
and
or
repz
mov
into
mov
stos
dec
out
inc
dec
or
xor
ffree
or
cmpsb
mov
andl
lahf
pop
rcrb
xor
mov
jmp
repnz
shl
jae
cmp
cli
aam
sub
jmp
call
sbb
add
xor
insb
pop
mov
mov
addr16
mov
mov
xchg
popa
insb
inc
mov
scas
jb
or
comiss
xor
adc
add
push
aaa
into
jae
sti
out
negb
std
mov
pop
push
mov
test
stos
sbb
pushf
fstp
ret
xor
nop
pop
xor
bound
and
xorb
push
cmp
call
adc
and
pop
mov
cmp
rcrb
xor
xor
push
mov
icebp
into
adc
enter
mov
push
inc
adc
shlb
test
mov
fists
add
and
mov
xlat
mov
stos
pop
xor
aam
iret
mov
xchg
adc
and
dec
scas
test
cmc
mov
jbe
rcrb
int
and
cmp
xor
lret
outsb
out
cld
and
lret
insb
pop
mov
push
pusha
xlat
adcb
les
add
imul
inc
cmpl
inc
push
leave
jnp
insb
sbb
or
inc
scas
outsl
in
insb
jbe,pn
mov
mov
mov
dec
mov
imul
fwait
ss
jb
mov
sub
and
imul
fmul
cmp
jae
adc
bound
mov
and
jle
mov
push
mov
add
test
out
aaa
cld
xlat
test
sarb
nop
sbb
xlat
mov
sbb
iret
sub
cmp
mov
notl
jmp
cmc
sahf
adcl
cld
test
pushf
je
mov
int3
arpl
mov
sub
push
aad
fidivrs
call
pop
gs
mov
cmp
stos
loopne
lock
ljmp
lcall
mov
aaa
lret
or
mov
push
mov
sbb
shld
add
jle
pop
rolb
shll
hlt
enter
addb
mov
lret
lods
adc
inc
stos
mov
movsb
in
cmpb
push
mov
sub
dec
mov
adc
mov
cli
cmp
daa
dec
fstpl
push
xchg
xchg
pop
adc
movsl
inc
jecxz
outsl
mov
sbb
add
sbb
fnstsw
jns
stos
test
outsb
xor
fidivrl
jns
cltd
cmp
clc
arpl
cltd
cli
xor
mov
or
shlb
jp
imul
mov
in
pusha
jo
dec
fst
in
das
clc
push
inc
imul
test
aad
repz
pop
pop
pop
mov
add
push
ljmp
loop
adc
inc
cld
jl
cmp
sub
xchg
push
fistpl
cli
or
in
xor
jl
lret
fwait
dec
cli
xor
mov
hlt
cmp
jl
lret
fwait
jb
lret
cmpsl
inc
sub
cmp
jg
cmpsl
repz
jp
jo
lret
inc
mov
pop
test
stc
fldt
in
push
rcrl
xlat
aas
in
cs
jb
cmpl
jbe
cmp
cld
ret
jecxz
cli
or
in
imul
sarb
add
pop
xchg
fwait
cwtl
dec
push
cld
int3
jns
lods
cmpsb
sub
je
cmp
fnstcw
repz
repnz
or
jg
pop
add
loop
mov
lock
pop
leave
rcl
push
das
sahf
stc
xchg
jp
inc
pop
repnz
add
mov
lret
or
xor
jns
lcall
fwait
arpl
iret
mov
mov
leave
sub
push
or
pop
pop
fstpt
in
pop
pop
inc
pusha
dec
or
cmc
jge
pushf
jbe
mov
pop
lea
cmpl
mov
stos
in
mov
shl
call
in
cmpsb
mov
cli
sub
push
fstl
mov
repnz
mov
mov
jp,pn
dec
push
popa
rorb
pop
sub
int3
in
das
xchg
mov
int3
gs
dec
std
pop
ret
sti
dec
mov
hlt
jae
cmp
enter
cwtl
bound
inc
mov
jae
cmp
shr
inc
and
pushl
inc
fnsave
mov
xchg
mov
in
stos
inc
in
das
dec
les
lahf
push
sbb
aas
inc
addl
add
mov
mov
inc
aas
inc
cmpl
ljmp
cmp
push
stos
aas
inc
mov
and
aas
inc
cmpl
aas
xor
fidivs
std
out
sub
and
push
add
sbb
shrl
push
push
push
adcl
aas
sarl
imul
xchg
mov
push
adc
inc
subl
gs
add
xchg
push
aas
push
adc
inc
cmpl
or
lret
scas
inc
das
loop
lods
inc
add
cs
push
adcl
dec
test
dec
inc
clc
pop
mov
mov
adcl
xchg
push
adcl
js
pushf
test
and
push
adcl
inc
adcl
mov
and
push
pop
inc
adcl
movsl
out
cmp
aas
inc
lea
stos
xchg
push
aas
inc
fsubs
jno
int
fwait
xchg
out
inc
pop
cmp
mov
push
enter
inc
mov
and
push
sahf
inc
addl
add
mov
mov
dec
adcl
inc
loope
cmpsl
inc
adcl
inc
xorl
add
loope
sub
adcl
in
fmuls
jns
mov
repnz
push
inc
xorl
mov
mov
lea
stos
sahf
push
aas
inc
inc
jns
adc
adcb
pop
inc
aas
inc
xorl
sub
xchg
inc
out
aas
mov
push
inc
aas
inc
cmpl
lods
ja
push
mov
clc
out
aas
inc
loope
mov
stos
xchg
push
aas
inc
push
call
std
out
lds
mov
lret
int3
inc
pop
aas
sti
int
aaa
aas
inc
mov
push
sbb
inc
xorl
and
push
addr16
xchg
icebp
inc
addb
jge
and
aas
inc
jle
aas
inc
sbb
daa
mov
push
inc
cmpl
push
rorl
sbb
sbb
addl
out
aas
stos
popf
push
aas
inc
or
and
sub
xlat
inc
cmpl
neg
ja
nop
mov
loop
pop
shrl
adcl
inc
jle
aas
inc
orl
jge
cmp
int3
into
xchg
mov
mov
shrl
push
aas
mov
mov
leave
loopne
cmp
loopne
sub
push
mov
out
pushf
mov
push
movsb
aas
sarb
inc
pop
dec
aaa
aas
inc
jle
aas
inc
orl
ja
jb
mov
test
sahf
push
aas
inc
nop
fnstsw
inc
adcl
inc
adcl
in
push
lahf
mov
push
dec
aas
inc
addl
sahf
push
aas
inc
jb
or
adcl
addr16
sti
test
out
push
cmp
aad
imul
aas
inc
mov
aaa
aad
mov
aas
inc
nop
fisubl
adcl
inc
mov
and
cmpl
popa
aaa
aas
inc
nop
fnstsw
inc
adcl
inc
adcl
pop
adc
cmp
fnsave
iret
mov
push
aas
push
push
push
aas
inc
subl
aas
inc
addl
xchg
xlat
cmp
push
lahf
sub
sahf
inc
cmpl
mov
fwait
pop
xor
jp
cmpl
push
or
sar
inc
pop
pop
adcl
inc
cs
les
sbbb
nop
frstor
adcl
inc
mov
and
aas
inc
orl
fstp
mov
aaa
ficomps
xor
inc
adcl
xor
lods
push
cmpsl
xorl
inc
loope
and
push
popa
sar
stc
xchg
imulb
add
xor
inc
mov
and
aas
inc
xorl
jb
pop
xchg
inc
sbb
xchg
adc
ss
inc
jle
aas
inc
sbbl
mov
and
or
adcl
inc
nop
fbld
int3
xchg
inc
adcl
inc
jle
aas
inc
cmpl
aas
mov
adcl
mov
int3
ja
xchg
dec
fs
rorl
jbe
lds
ss
inc
nop
daa
inc
adcl
inc
loope
aas
inc
jle
aas
inc
xor
out
add
dec
popa
cwtl
mov
and
aas
inc
orl
and
push
mov
push
sbb
inc
adcl
inc
sbb
pushf
push
jmp
cmp
add
aas
inc
loope
cs
adcl
pop
sub
cmpsb
xor
jmp
sub
sahf
inc
subl
mov
inc
adcl
movsl
sub
sub
cltd
push
aas
inc
loope
je
sbb
mov
mov
stos
fwait
mov
inc
jle
aas
inc
adcl
dec
adcl
mov
sub
aas
inc
jle
aas
inc
andl
lea
out
push
enter
jo
fadd
cltd
rcll
push
push
dec
adcl
jp
mov
ds
nop
fsubs
inc
adcl
cmc
xor
sub
test
aas
inc
jle
aas
inc
adcl
inc
aaa
sub
push
je
dec
aas
inc
nop
ret
adcl
push
xlat
xor
and
aaa
sahf
and
aas
inc
addl
pop
lock
cmp
mov
xor
aas
aaa
aas
inc
loope
mov
int3
popa
aaa
aas
inc
jle
aas
inc
orl
dec
adcl
jo
into
push
faddp
stos
in
loopne
adc
nop
fisubrl
inc
adcl
or
repz
in
pusha
and
push
aas
inc
mov
and
test
jnp
test
imul
adc
int
mov
gs
imul
and
push
push
dec
adc
popf
adc
push
push
aas
and
stos
xchg
push
pop
pop
aas
inc
addl
adcl
enter
inc
inc
rorb
inc
cmpsb
dec
adcl
inc
addl
cmpl
inc
rclb
aam
inc
loope
test
cmpl
pushf
dec
iret
rol
leave
sub
aaa
sub
test
inc
loope
sahf
mov
push
push
dec
adcl
xchg
push
fistps
stos
xchg
push
aas
inc
inc
add
push
mov
jne
pop
nop
xchg
insb
and
mov
adc
wbinvd
jge
xor
negb
out
aas
and
push
aaa
inc
xorl
or
mov
mov
lods
imul
shrl
sub
push
push
push
adcl
cs
xor
pop
bound
inc
loope
pop
dec
adcl
cmpsl
cmp
popf
push
pop
push
aas
inc
xorl
aas
inc
nop
frstor
adcl
fsub
push
aas
stos
cwtl
push
aas
inc
push
fdiv
mov
int3
aas
inc
jle
aas
inc
adcl
and
sub
jl
jle
aas
inc
andl
sub
sub
or
aas
inc
jle
aas
inc
xorl
inc
xorl
dec
sbb
aas
inc
adc
orl
sub
jg
aas
inc
loope
add
push
xorl
repnz
fsubl
adcl
inc
lea
and
outsb
imulb
lea
out
aas
and
push
lahf
and
sahf
stos
xchg
push
aas
inc
xor
dec
and
sub
mov
sub
mov
out
out
sbb
mov
ja
xlat
fdivrl
push
dec
adcl
bound
pop
inc
subl
push
dec
adcl
mov
xor
aas
and
aas
inc
and
das
lret
mov
jecxz
cmpl
mov
push
ljmp
and
aas
inc
sbbl
les
imul
lods
inc
ficompl
push
adcl
aad
nop
repnz
mov
aas
push
sbb
inc
subl
aas
inc
out
pop
mov
inc
loope
nop
dec
orl
mov
xchg
shrb
out
aas
stos
xchg
push
aas
inc
test
jmp
push
mov
adc
pop
push
aas
and
aas
inc
adcl
insl
mov
adcl
sub
push
add
mov
pop
inc
fdivp
inc
inc
ds
aas
mov
adcl
inc
cmpl
test
dec
fwait
mov
ret
pop
mov
sbb
mov
mov
rcll
stos
xchg
push
aas
inc
mov
scas
dec
mov
push
xor
inc
movsl
inc
cmpl
dec
cmp
aas
inc
jle
aas
inc
andl
aas
inc
jle
aas
inc
orl
sub
mov
mov
push
lahf
repnz
inc
mov
push
push
push
aas
inc
xorl
ds
adcl
inc
loope
daa
inc
adcl
ss
mov
push
adcl
rclb
sub
adc
xchg
inc
mov
push
push
adcl
loope
inc
shlb
fwait
ret
aas
push
sbb
inc
addl
xchg
push
aas
inc
inc
dec
xor
mov
sbb
mov
aas
and
aaa
sahf
sbb
mov
and
pop
xor
xor
and
push
aas
and
xor
ret
aas
inc
sbb
sahf
inc
cmpl
xlat
ljmp
push
push
adcl
pop
mov
mov
sub
int
push
aas
inc
loope
sahf
and
ss
inc
mov
push
sbb
inc
xorl
adc
pop
sahf
inc
addl
nop
fnstcw
inc
adcl
jle
test
jl
xchg
in
out
aas
push
sbb
inc
addl
xchg
push
aas
inc
adc
loop
sbb
jno
jmp
je
inc
loope
sub
cwtl
push
push
jns
sub
cmc
pop
iret
aas
fwait
dec
dec
test
sub
fwait
push
aas
inc
sti
xlat
sbb
inc
loope
add
push
aas
stos
nop
push
aas
inc
cmp
fidivrl
cmp
das
mov
into
aas
inc
nop
fsubl
inc
adcl
inc
subl
aas
rcl
out
jns
lahf
cmp
aas
inc
jle
aas
inc
xorl
and
push
lods
test
adcl
mov
mov
fdivr
and
aas
inc
jle
aas
inc
xorl
pop
inc
jg
mov
inc
adcl
in
gs
inc
jle
aas
inc
orl
aas
inc
nop
inc
adcl
lds
imul
xchg
fcmove
inc
loopne
call
dec
lret
xchg
xchg
push
aas
inc
jle
aas
inc
cmpl
fidivrs
inc
mov
and
push
lahf
and
push
aas
stos
stos
push
aas
inc
jecxz
and
outsl
mov
lods
hlt
arpl
mov
popa
rolb
cmpsb
pop
adcl
dec
adcl
sahf
or
lcall
fildll
out
sub
and
push
pop
outsl
je
test
adcl
or
push
inc
mov
push
imul
adcl
push
pop
jecxz
cli
xchg
inc
addl
xchg
push
aas
inc
repz
int3
adc
mov
enter
mov
push
adcl
addr16
movsb
pop
dec
mov
movsb
push
iret
xchg
mov
lret
inc
subl
mov
jno
ja
xorl
aas
inc
leave
dec
nop
ret
clc
aaa
aas
inc
loope
add
pop
mov
sahf
inc
addl
xchg
push
aas
inc
jl
imul
insb
push
addr16
aas
inc
add
or
inc
loope
jl
clc
xchg
test
push
aas
stos
nop
push
aas
inc
shl
pop
stos
fidivrs
pop
sbb
aas
inc
loope
sub
insb
lcall
addr16
mov
int3
pop
aaa
aas
inc
jle
aas
inc
sbbl
shlb
enter
cmp
mov
mov
add
or
stos
pushf
nop
imul
pop
inc
ret
sbb
mov
cmp
inc
addl
xchg
enter
inc
loope
mov
lret
aas
and
pop
aas
inc
cmpl
and
adcl
inc
lea
stos
fwait
push
aas
inc
sbb
aas
inc
lea
mov
xchg
push
aas
inc
push
xlat
cmp
xor
xor
clc
mov
aas
stos
xchg
push
aas
inc
adc
int3
push
xor
and
cwtl
out
or
add
aas
inc
cmpl
add
out
enter
push
aas
stos
xchg
push
aas
inc
aaa
in
loop
jo
push
in
rorb
jecxz
push
mov
mov
addr16
push
sbb
lcall
add
or
incl
inc
subl
push
or
in
inc
xor
aaa
push
dec
adcl
add
popf
add
out
pop
dec
out
cmp
and
rcrb
push
lahf
mov
jecxz
xor
ss
inc
nop
xlat
daa
inc
adcl
orl
add
push
stos
rcrb
scas
aas
inc
jle
aas
inc
addl
int
ficompl
test
out
stos
xchg
push
aas
inc
cli
inc
and
pop
adc
sarb
fcmovb
inc
nop
cmp
scas
aas
inc
nop
fldenv
adcl
and
push
aas
stos
xchg
push
aas
inc
out
fs
mov
inc
jno
xchg
daa
inc
adcl
inc
loope
aas
inc
jle
aas
inc
sbbl
aam
inc
outsl
in
jmp
aas
mov
push
sub
sahf
push
aas
inc
nop
ret
cmp
push
lahf
and
scas
aas
inc
jle
aas
inc
addl
into
int3
xor
mov
pop
popa
call
jo
test
test
insl
outsl
or
call
aaa
sahf
inc
subl
jbe
push
sbbb
lahf
mov
push
out
aas
push
sbb
inc
addl
sbb
aas
inc
adcl
inc
orl
roll
cli
rolb
mov
mov
inc
pop
jecxz
xchg
ss
inc
nop
xlat
rolb
push
lahf
push
add
mov
push
insl
cmpsb
daa
aad
or
sub
push
mov
sbb
push
mov
xor
mov
xor
inc
jle
aas
inc
subl
outsl
andl
fs
lock
test
cmp
mov
sbb
clc
je
fcompl
jb
addb
inc
inc
mov
sub
push
add
nop
ds
jl
or
or
push
aas
mov
push
aas
and
ss
inc
loope
cmc
pop
or
sub
sahf
scas
mov
out
aas
inc
jle
aas
inc
addl
lock
out
ljmp
mov
aas
mov
push
sub
sahf
push
aas
inc
loope
pusha
cmp
add
inc
xorl
aas
cmpl
mov
mov
int
stos
in
sarb
cmpl
mov
adcl
xor
push
or
aaa
lahf
adc
ss
inc
idivb
mov
add
push
mov
ss
inc
mov
stos
lahf
push
aas
inc
imul
aas
mov
xchg
inc
mov
stos
xchg
push
aas
inc
fistpl
adc
dec
imul
jae
aad
mov
mov
nop
and
int
push
aas
inc
push
mov
clc
insb
inc
sahf
inc
addl
adc
inc
addl
subl
js
in
out
jl
test
sbb
test
ret
adcl
inc
adcl
sub
aaa
mov
out
aas
mov
adcl
lret
dec
aas
out
mov
aas
stos
nop
push
aas
inc
mov
sub
test
loope
ja
mov
push
or
inc
movsl
push
adcl
inc
mov
addr16
xor
popf
inc
xorl
aas
inc
adcl
cmp
rcrb
nop
frstor
inc
adcl
shl
sub
aas
inc
nop
fisubrs
inc
adcl
test
sbb
cltd
dec
inc
mov
out
xor
inc
nop
sarb
adcl
inc
cmpl
inc
sti
or
fs
cmp
aas
and
jae
mov
movsb
dec
adcl
jnp
ss
inc
jle
aas
inc
adcl
jl
and
aas
imul
inc
mov
sub
fadd
fs
push
aas
and
aas
inc
subl
push
aad
and
aas
inc
xorl
jne
ja
push
adcl
inc
adcl
push
sbb
inc
addl
pop
push
aas
inc
adcl
inc
addl
xchg
sub
push
ret
cmpsl
pusha
aaa
aas
inc
nop
fstpt
inc
adcl
inc
push
stos
xor
add
shlb
sbb
test
pop
mov
and
push
aas
stos
xchg
push
aas
inc
lcall
call
or
mov
adc
adc
and
in
inc
mov
push
aas
and
shll
adc
scas
aas
inc
loope
mov
xchg
out
aas
inc
jle
aas
inc
xorl
aad
push
push
dec
adcl
call
xchg
mov
push
lahf
sub
mov
add
adcl
inc
jle
aas
inc
sub
mov
xchg
dec
adcl
shl
xor
xchg
push
aas
inc
jle
aas
inc
sub
in
call
push
aas
stos
cltd
push
aas
inc
xchg
fisubrl
sbb
inc
addl
popf
push
aas
inc
dec
cmp
shrb
inc
inc
subl
lahf
stos
xchg
push
aas
inc
ret
in
out
cwtl
push
mov
cmp
push
xchg
xchg
push
aas
inc
orl
add
push
aas
and
or
stos
sahf
push
aas
inc
jno
xor
adc
movsl
push
mov
aas
push
adc
inc
xorl
sahf
inc
cmpl
mov
inc
jle
aas
inc
add
test
lahf
xlat
aas
inc
mov
push
add
inc
xorl
aas
inc
jle
aas
inc
sbbl
sarb
aas
inc
loope
test
gs
mov
push
xchg
stos
lock
mov
test
push
aas
inc
in
lahf
fcomps
fldl
jp
scas
mov
out
aas
and
xlat
jns
push
mov
jmp
fmull
cmpsb
orb
aaa
and
inc
movsl
dec
adcl
inc
addl
xchg
push
aas
inc
and
imul
fidivrs
inc
pop
adcl
or
movsl
fistps
in
or
aaa
push
push
adcl
js
pop
call
sub
aas
inc
jle
aas
inc
addl
push
dec
adcl
adc
je
push
push
aas
push
adc
inc
subl
and
cmpsl
out
mov
mov
xchg
push
aas
inc
fxch
andb
mov
cmpsl
fxch
push
inc
out
ss
inc
jle
aas
inc
adcl
call
pop
push
adcl
pop
scas
sahf
inc
addl
out
push
and
push
aas
inc
nop
fistpll
inc
adcl
lret
aas
inc
loope
cmpsb
inc
adcl
add
push
aas
mov
pushf
push
aas
inc
js
jae
out
pop
ret
aas
inc
nop
inc
adcl
and
adcb
jge
addb
ret
or
inc
adcl
rolb
mov
dec
notb
icebp
xor
addl
xchg
push
aas
inc
dec
lea
cmc
mov
cltd
sub
pop
push
out
fwait
inc
subl
mov
inc
loope
movsl
inc
adcl
inc
enter
adcl
inc
subl
mov
and
hlt
lea
jmp
imul
mov
xchg
push
aas
inc
jle
aas
inc
add
adc
push
pop
mov
ds
inc
mov
stos
xchg
push
aas
inc
lret
mov
xchg
aad
mov
push
lahf
and
aaa
lahf
sub
mov
xchg
aad
sahf
sub
mov
aas
and
push
test
pop
sbb
push
push
adcl
popa
sub
aam
pop
sbb
dec
xor
xorl
aas
test
xchg
jg
jo
jmp
push
mov
inc
adcl
inc
subl
test
out
aas
mov
push
push
push
adcl
lods
push
or
lea
stos
mov
aas
inc
loope
cs
adcl
xchg
adc
mov
cld
sub
cmp
lea
mov
adcl
or
sub
xchg
sbb
aaa
push
inc
adcl
pop
pop
test
inc
xorl
pop
push
jle
aas
inc
andl
aad
xor
andl
xchg
push
aas
inc
jle
aas
inc
addl
mov
movb
aas
push
push
pop
aas
inc
addl
xchg
inc
xorl
cmp
push
mov
mov
popf
push
aas
inc
jle
aas
inc
orl
cmp
inc
mov
stos
xchg
push
aas
inc
inc
aas
dec
push
jnp
jg
and
or
cmpl
call
inc
subl
xor
jle
aas
inc
addl
test
push
arpl
sbbl
push
push
dec
adcl
pop
jmp
les
dec
xchg
inc
xorl
dec
dec
mov
push
dec
adcl
ret
loopne
sbb
pop
test
cltd
stc
sahf
into
sbb
jnp
xchg
inc
movsb
dec
adcl
or
push
cltd
mov
xchg
dec
dec
inc
or
add
loope
xchg
mov
xchg
popa
frstor
rclb
inc
cmp
dec
inc
lahf
sbb
mov
cmc
push
imul
nop
fisubl
inc
adcl
inc
xorl
aas
and
movsl
std
push
or
notl
mov
mov
stos
cmp
sbb
jl
and
in
inc
xlat
aaa
sub
xchg
inc
xlat
or
cmpsl
lock
jle
aas
inc
sbbl
add
xlat
out
inc
cmp
sub
push
adc
dec
lret
orb
mov
nop
and
inc
lahf
int3
jne
mov
dec
nop
es
adcl
cmp
sahf
inc
push
inc
mov
stos
fwait
push
aas
inc
cwtl
jg
push
inc
movsl
dec
adcl
inc
addl
sbb
fcoml
pop
aas
inc
cmpl
inc
xchg
push
aas
and
inc
cmp
and
push
push
inc
adcl
xchg
cld
push
xor
inc
mov
push
add
inc
mov
sbb
aaa
push
dec
adcl
jp
lret
sub
test
push
fbld
sti
xlat
push
rcr
and
adcl
jb
test
lret
and
ret
nop
push
aas
inc
jle
aas
inc
sbb
push
cmp
in
lds
dec
dec
nop
frstor
inc
adcl
inc
nop
xlat
aas
inc
adcl
mov
pop
aas
inc
xorl
lahf
int3
je
cltd
je
stos
or
jg
aas
inc
orl
cmp
inc
adcl
fdivr
cmp
dec
aas
inc
cmpl
lock
std
sub
dec
imul
push
dec
out
inc
xchg
push
aas
push
adc
addl
out
aas
inc
adcl
inc
lods
inc
hlt
pop
flds
jne
test
aaa
xor
or
insl
sub
sub
xchg
inc
mov
sub
xchg
inc
mov
mov
push
add
mov
roll
adc
out
es
adcl
push
pop
and
and
inc
adcl
mov
fidivrl
rorb
aaa
push
dec
adcl
ret
stc
into
jmp
rolb
push
dec
adcl
fdivrl
hlt
pop
aaa
jbe
iret
ret
mov
inc
xchg
push
aas
push
push
jne
inc
addl
stos
push
aas
inc
xchg
test
insl
xchg
mov
std
xchg
scas
lret
int
dec
out
mov
clts
xchg
sbb
ficompl
adcl
xor
mov
daa
incl
test
inc
lods
lahf
mov
cwtl
ljmp
mov
stos
mov
pop
nop
and
cli
or
pop
xor
jmp
jle
aas
inc
andl
dec
cmpsb
movl
sub
loopne
aas
inc
nop
inc
adcl
inc
orl
les
inc
cmp
xor
inc
cmpl
add
add
sub
gs
mov
mov
int
stos
inc
icebp
and
jle
cmp
cmpl
das
das
or
shl
mov
test
aas
inc
subl
sub
cwtl
push
aas
inc
push
test
sahf
mov
inc
cmp
push
or
xorb
push
adcl
pushl
push
add
lods
stos
loop
fucom
cvttps2pi
adcl
push
pop
jecxz
test
aaa
ljmp
push
mov
sub
mov
xchg
push
aas
inc
int3
mov
ror
je
fsubs
add
push
xchg
ret
fcomi
xchg
aaa
push
dec
adcl
test
inc
mov
stos
xchg
push
aas
inc
mov
orl
rorl
ljmp
loope
mov
mov
add
inc
subl
cltd
stos
fwait
push
aas
inc
xor
stc
icebp
pop
lahf
push
dec
adcl
shr
xchg
or
jge
xchg
test
push
aas
js
test
ss
inc
push
cltd
and
push
aas
inc
push
lcall
out
aas
inc
adcl
notb
pop
aas
inc
adc
shrl
mov
and
adc
dec
inc
push
dec
adcl
push
mov
dec
dec
nop
inc
adcl
inc
cmp
lods
lret
push
mov
test
push
sahf
adc
shrl
sar
xchg
push
aas
inc
xchg
jae
cmp
cmp
sub
inc
jbe
sbb
push
push
adcl
shll
and
xchg
mov
push
dec
add
aas
inc
mov
jge
mov
and
data16
in
add
pop
adcl
sub
sahf
stos
scas
push
aas
inc
jle
aas
inc
adcl
and
scas
mov
mov
les
sahf
add
fisubs
adcl
inc
lea
bnd
or
sbbb
sub
xchg
inc
mov
mov
stos
xchg
push
aas
inc
add
mov
mov
lea
push
pop
push
aas
inc
cmpl
in
stos
fwait
push
aas
inc
outsb
cmp
push
sbb
inc
subl
mov
aaa
out
pop
inc
adcl
dec
mov
movsl
pop
insb
pop
hlt
jne
mov
mov
mov
sub
sub
fwait
push
aas
inc
loope
mov
inc
adcl
or
sahf
and
aas
inc
subl
pop
and
inc
outsl
jp
push
arpl
jg
aas
inc
subl
pop
insb
test
aaa
aaa
and
mov
jecxz
inc
add
dec
add
movsb
js
out
sub
cwtl
push
aas
inc
push
pushf
mov
lds
das
add
aas
inc
xorl
dec
dec
nop
ret
ds
adcl
dec
dec
inc
lahf
sub
pop
mov
adcl
dec
adcl
push
inc
xchg
sahf
mov
xor
sub
mov
insl
and
sarb
pop
ds
dec
inc
xor
adcl
cmp
dec
mov
mov
xchg
faddp
inc
adcl
inc
das
je
adc
or
neg
cmpsb
xadd
aas
inc
sbbl
fsubr
xor
sahf
and
push
xchg
ret
notb
push
ss
push
dec
out
pop
push
cltd
mov
fcmovnu
fcoml
push
aam
or
addl
test
push
arpl
sbbl
xor
int3
inc
or
dec
adcl
cli
sarl
dec
out
push
push
adcl
out
add
mov
xchg
rolb
dec
adcl
push
lods
es
fisttpl
ret
popf
and
inc
push
dec
adcl
scas
sbb
ret
mov
dec
imul
pop
xor
and
fsubrl
push
outsb
and
aas
inc
and
dec
push
fwait
lock
jle
aas
inc
adcl
and
scas
out
push
push
dec
aas
inc
cmpl
out
pop
pop
jg
push
outsb
test
call
push
aas
clc
dec
iret
fwait
insb
arpl
das
jns
pop
inc
mov
push
mov
js
stos
sahf
sub
and
mov
adcl
mov
push
dec
jmp
ljmp
push
cmc
test
cmp
scas
outsb
in
stos
loope
repz
loop
sub
inc
push
inc
mov
push
pop
push
aas
inc
adcl
dec
adcl
aam
xchg
cmp
outsb
xor
aas
les
xchg
outsb
sbb
aas
aas
rolb
aas
cmpl
lahf
iret
mov
and
out
add
and
stos
xchg
push
aas
inc
sub
or
dec
subb
cmp
notl
rcrb
out
cltd
push
add
scas
js
jle
aas
inc
orl
stc
out
push
cld
jmp
pop
int3
pop
aaa
ljmp
mov
add
adcl
lods
inc
mov
aas
sbb
mov
xor
push
aas
inc
subl
aas
inc
dec
ljmp
pop
push
sahf
mov
mov
push
dec
adcl
mov
rolb
ljmp
dec
jle
aas
inc
add
push
push
jle
aas
inc
add
and
cmpsb
xchg
sub
ss
inc
mov
push
push
push
aas
inc
adcl
and
out
aad
nop
ret
adcl
inc
out
lahf
sub
test
inc
dec
sahf
mov
dec
aas
inc
orl
or
jns
jl
pop
xor
mov
sub
xchg
inc
mov
cli
sub
aas
orl
test
sbb
add
jmp
test
jnp
jg
aas
inc
subl
dec
and
clc
aam
incb
call
push
cwtl
scas
push
xlat
sti
sbb
aaa
lahf
and
aas
inc
adcl
pusha
xchg
push
or
out
sub
inc
out
test
sti
xchg
mov
je
ss
adc
fcmovnbe
inc
adcl
xor
pop
outsl
es
outsb
pop
shl
mov
stos
xchg
inc
out
add
les
inc
adcl
and
fisubl
adcl
and
shlb
mov
mov
mov
out
sub
test
inc
aas
inc
andl
push
push
pop
push
mov
nop
lds
inc
adcl
inc
jle
aas
inc
adcl
sbb
cmpsl
pop
repz
sub
push
add
inc
mov
push
add
inc
mov
int
aaa
mov
jmp
xchg
push
aas
inc
nop
shlb
xchg
inc
or
dec
dec
inc
sub
cwtl
push
aas
inc
loope
jns
xor
xchg
stos
nop
push
aas
inc
add
ret
mull
mov
sbb
ret
jae
ss
inc
mov
stos
popf
push
aas
inc
loopne
sub
mov
cli
sti
sub
ss
jns
push
dec
adcl
mov
mov
inc
aas
inc
xorl
cmp
shll
jb
mov
in
imul
adcl
inc
jle
aas
inc
adc
aaa
jae
inc
mov
dec
adcl
inc
enter
js
adc
adcl
inc
jle
aas
inc
adc
sbb
xchg
stos
push
lea
push
aas
inc
xor
out
mov
hlt
sub
pop
cld
mov
lret
sahf
sub
xlat
stos
fwait
push
aas
inc
test
pop
pushf
mov
push
pop
aas
inc
addl
in
inc
mov
and
aas
inc
xorl
aas
inc
addl
loope
popf
stos
fwait
push
aas
inc
lock
sbb
mov
rclb
out
sub
stos
push
aas
inc
jle
aas
inc
andl
test
push
inc
andl
jle
aas
inc
cmp
shl
add
ljmp
int3
jne
es
adcl
add
or
dec
adcl
xor
jle
test
rclb
xchg
and
lahf
and
rcll
push
aas
inc
mov
popf
mov
mov
mov
mov
and
fwait
xor
test
pop
aaa
xchg
and
aas
inc
add
loope
repnz
repz
movsl
pop
sahf
sbb
aas
inc
xorl
push
dec
adcl
jb
or
mov
in
inc
aam
push
dec
adcl
push
xor
jecxz
or
fs
mov
inc
cmpl
outsb
inc
lds
aas
inc
nop
ret
adcl
inc
addl
sbb
rorb
adcl
repz
mov
and
mov
jmp
ljmp
cmpl
mov
or
cmp
ror
loope
sub
cltd
push
aas
inc
loope
js
call
inc
mov
push
sbb
aas
inc
cmpl
xlat
fcmove
pop
add
cmpsl
push
in
mov
mov
inc
mov
ret
stos
mov
aaa
sub
pop
push
cltd
lret
sub
fwait
push
aas
inc
loope
pusha
mov
nop
ret
and
push
push
dec
adcl
mov
mov
sahf
adc
jecxz
push
dec
adcl
frstor
mov
sbb
sub
xchg
inc
mov
mov
test
stos
xchg
push
aas
inc
test
mov
stos
imul
cltd
inc
adcl
inc
nop
lds
inc
adcl
rcrb
inc
loope
mov
push
or
mov
insb
test
push
add
addl
out
xor
push
lahf
push
adc
inc
cmpl
sub
sbbb
loope
test
jns
or
push
push
das
rclb
sub
stos
push
aas
inc
jle
aas
inc
cmpl
push
aaa
fcoml
push
cmc
mov
mov
xlat
sbb
nop
fldt
adcl
dec
adcl
scas
cmp
xorb
mov
push
lds
nop
mov
mov
xchg
mov
push
jbe
add
stos
mov
rolb
aas
inc
xorl
xlat
mov
xlat
std
outsb
nop
fildl
sub
push
jg
xlat
std
sub
push
xor
inc
aas
inc
addl
add
adcl
pop
pop
aas
inc
addl
clc
rcr
push
mov
mov
es
mov
mov
sub
push
mov
inc
adcl
shrl
mov
cmpl
inc
adcl
hlt
mov
fst
test
fwait
mov
add
add
out
jbe
test
sub
xchg
inc
out
ss
sub
push
mov
inc
adcl
sbb
outsl
fwait
fwait
mov
pop
or
test
sub
lahf
and
inc
lods
inc
adcl
push
loope
es
adcl
sbb
push
aas
inc
push
jno
test
mov
sbb
dec
dec
sahf
inc
adc
and
xchg
aaa
sub
push
push
pop
dec
adcl
imul
and
xor
jle
aas
inc
subl
outsb
inc
jb
cmpsb
push
lea
aas
inc
xorl
and
push
push
pop
and
add
into
add
push
lea
push
xchg
out
mov
xchg
xchg
push
pop
dec
aas
inc
xorl
aas
in
outsl
or
add
imul
mov
dec
loope
pushf
sub
mov
ret
inc
stos
fwait
push
aas
inc
sub
pushf
test
mov
dec
nop
inc
adcl
inc
jle
aas
inc
cmpl
lods
jge
inc
mov
inc
outsl
repz
and
adcl
inc
mov
out
push
adc
orl
xchg
push
pop
in
inc
subl
je
pop
xchg
test
adc
sahf
adc
push
ss
xchg
push
aas
inc
in
clc
push
gs
pop
add
sbb
mov
or
ljmp
add
aas
inc
adcl
inc
mov
sub
out
aas
inc
loope
je
xchg
shll
adcl
jle
pmovmskb
dec
mov
aas
inc
mov
inc
jle
aas
inc
sub
push
adcw
push
aas
inc
lea
mov
push
push
push
aas
inc
adcl
inc
addl
sbb
inc
lahf
push
inc
test
dec
adcl
sub
rcr
popf
mov
les
aas
inc
jle
aas
inc
andl
pop
jle
dec
insw
sbb
sbb
mov
jmp
aas
inc
mov
xchg
dec
loope
sub
push
icebp
call
push
sbb
mov
sbb
nop
sarb
adcl
mov
adcl
push
adc
inc
xorl
sahf
and
aas
inc
andl
dec
sbb
mov
fs
lea
das
xchg
push
aas
inc
loope
mov
inc
addl
ja
out
and
outsb
mov
xchg
sub
xchg
inc
mov
sub
test
inc
add
aas
inc
scas
in
pop
int3
icebp
jg
cs
push
sub
push
aas
push
push
push
aas
inc
subl
or
or
mov
sbb
jp
sti
rcr
xchg
push
aas
inc
pop
das
add
in
insb
in
icebp
pop
inc
pop
jle
sbb
mov
add
ret
lea
aas
inc
loope
jns
add
aas
inc
xchg
insb
int3
sbbb
call
push
mov
or
inc
cmpl
and
cwtl
jo
cwtl
aas
inc
subl
and
push
shlb
sub
leave
imul
fsts
inc
adcl
mov
scas
push
addb
aas
inc
addl
clc
popf
and
cltd
inc
cmpsl
push
adcl
inc
sbbl
ret
add
pop
jb
ret
gs
or
pop
aam
push
adcl
mov
and
and
test
in
aam
sbbb
ds
xlat
sbb
cmp
push
fidivs
pop
sbb
aas
and
aaa
sahf
and
ds
adcl
inc
adcl
mov
sbb
sahf
les
or
mov
sub
sub
aas
inc
nop
adcl
imul
add
mov
or
sbb
xchg
push
aas
inc
mov
out
sub
dec
pop
add
push
push
pop
aas
inc
addl
xchg
fidivrl
sahf
push
aas
inc
nop
ret
adcl
inc
push
les
int3
push
aas
inc
jle
aas
inc
xor
popf
pop
pop
add
stos
xchg
push
aas
inc
mov
sbbb
jb
arpl
shrb
nop
fsubs
inc
adcl
inc
loope
mov
inc
cmpl
mov
hlt
push
aas
inc
jle
aas
inc
cmpl
cmp
inc
stos
mov
mov
mov
push
adc
addl
xchg
push
aas
inc
xor
test
cltd
lods
jle
add
dec
adcl
sbb
imul
adcl
repz
mov
mull
dec
push
test
cwtl
ljmp
mov
aas
inc
nop
rcl
adcl
repz
add
mov
pop
sbb
or
xor
and
xchg
stos
push
sub
push
aas
inc
subl
aas
inc
fisttps
jg
ss
inc
sub
sahf
push
aas
inc
loope
je
clc
rorl
mov
ss
push
push
aaa
lcall
out
cltd
xor
outsb
or
sub
lea
and
add
insb
jns
push
imul
fdivs
into
xchg
stos
sahf
push
aas
inc
sbb
mov
push
dec
adcl
imull
cmpsl
push
mov
mov
adcl
mov
imul
inc
adcl
add
or
insl
mov
test
psubsb
sub
push
pop
dec
sub
push
sbb
xlat
xor
push
jbe
pop
fwait
scas
mov
rolb
xchg
xchg
jg
nop
in
in
loopne
movl
push
xor
nop
fimull
adcl
aam
push
mov
cmc
adc
mov
iret
adc
imul
mov
sahf
sub
sahf
push
aas
inc
loope
xchg
sbb
daa
ss
loope
dec
adcl
pop
pop
cmp
add
push
dec
sbb
jle
pop
test
mov
adc
cmp
or
push
aas
and
aas
inc
addl
mov
adc
fstps
xor
xor
sbb
xlat
fs
sbb
inc
mov
jle
inc
addl
stos
push
aas
inc
mov
orl
xlat
shrb
sbb
and
lods
sub
pop
aaa
sahf
int3
pop
xor
mov
adcl
inc
xorl
aaa
mov
pop
in
sub
out
xor
loope
add
jo
repz
cltd
daa
inc
mov
sub
xchg
inc
mov
add
jle
aas
inc
adc
jl
call
pop
push
sti
xchg
xchg
jg
xchg
xor
out
push
push
adcl
add
push
xchg
xor
pop
inc
adcl
jnp
inc
sub
popf
push
aas
inc
jle
aas
inc
sbbl
fbld
call
pop
aas
inc
orl
jg
dec
sub
sbb
daa
and
cmpsb
lds
inc
adcl
adc
dec
inc
push
jg
mov
testl
lds
pop
aas
inc
cmp
xchg
test
xor
popf
push
aas
inc
loope
je
xchg
fnstcw
inc
adcl
inc
cmpl
jp
xor
xor
jle
sarb
adcl
mov
sti
rcll
push
aaa
mov
mov
adcl
outsl
cwtl
outsb
push
push
mov
mov
stos
xchg
push
aas
inc
push
movsl
leave
dec
push
ljmp
lock
jo
pop
inc
adcl
jnp
inc
lahf
push
inc
lcall
jle
aas
inc
subl
push
les
aaa
inc
adcl
inc
adcl
inc
andl
inc
fsubrl
lea
ret
out
cli
mov
jle
aas
inc
subl
jp
jo
into
push
mov
aaa
sub
sub
sahf
push
aas
inc
loope
nop
sub
aam
pop
rorl
inc
ds
adcl
inc
nop
adcl
sbb
sti
mov
jecxz
test
inc
lods
mov
test
scas
push
sbb
inc
subl
aad
adcl
jo
mov
call
lock
push
in
push
push
push
push
add
mov
xchg
pop
stos
dec
inc
int3
lods
popf
scas
sub
add
and
movsl
loopne
mov
push
aas
inc
sti
xlat
xor
mov
cwtl
lcall
repnz
je
out
and
push
ja
xor
outsb
jne
es
push
stos
movsb
add
xlat
adc
out
xor
push
push
dec
adcl
fldcw
aaa
test
scas
jne
int3
pop
aaa
mov
inc
adcl
sahf
mov
sub
or
aas
inc
nop
fdivrl
inc
adcl
ret
push
dec
mov
push
push
adcl
imul
add
jbe
add
sbb
ret
lea
aas
inc
loope
sbb
mov
inc
cmpsb
inc
adcl
push
add
inc
mov
stos
xchg
push
aas
inc
push
and
add
cltd
lret
pop
aas
inc
addl
out
mov
les
aas
inc
loope
jno
ret
sarb
loope
and
push
pop
adc
xchg
sub
jae
and
xlat
xor
nop
fldt
adcl
ret
lods
push
push
adcl
int
in
and
fwait
neg
ja
nop
ret
out
sub
sub
inc
loope
jl
push
cltd
mov
push
add
scas
mov
cmp
scas
pop
dec
adcl
js
or
and
adc
inc
cmpl
sbbb
mov
std
outsb
mov
lea
jmp
inc
inc
insl
in
mov
pushf
push
sbb
aas
inc
adc
into
and
inc
sub
or
jns
lahf
sub
xlat
sbb
aas
inc
addl
sub
loope
sahf
sub
push
mov
inc
adcl
inc
nop
lds
roll
rcr
xchg
push
aas
inc
ss
pop
adc
pop
mov
cmp
cmp
les
add
sub
push
mov
inc
adcl
inc
jle
aas
inc
xorl
and
insb
mul
out
sub
push
sub
popf
imul
pop
dec
decb
lods
sbb
inc
mov
stos
xchg
push
aas
inc
cmp
or
push
sahf
mov
jae
inc
adc
and
xchg
aaa
mov
and
loop
daa
inc
adcl
inc
ret
iret
scas
push
aas
inc
nop
fildll
inc
adcl
lret
mov
aaa
ret
iret
out
mov
mov
adcl
mov
cwtl
push
aas
and
xlat
or
inc
adcl
mov
xlat
aas
inc
adcl
dec
sub
push
push
adcl
pop
and
mov
cmp
push
mov
dec
loope
sub
push
shll
je
in
out
xor
inc
add
mov
cwtl
out
or
paddsw
sub
roll
cld
fs
int3
xorb
jg
inc
movsb
inc
adcl
jns
push
aas
stos
xchg
push
aas
inc
loope
ljmp
mov
daa
fmull
imul
add
push
mov
fmulp
dec
imul
xchg
mov
dec
les
pop
xchg
vpsrld
add
stos
sahf
push
aas
inc
js
mov
mov
lods
pop
dec
dec
mov
jae
fcom
inc
adcl
enter
mov
test
sub
fnstenv
inc
lods
sbbl
loop
outsl
add
push
insl
mov
sub
dec
inc
cmpsb
push
daa
cmp
push
sahf
je
jno
cwtl
ljmp
push
pop
dec
dec
xchg
inc
mov
push
sbb
inc
lods
inc
adcl
dec
adcl
push
flds
les
pop
aaa
int3
add
notl
push
or
ss
inc
xchg
mov
adc
jle
aas
inc
orl
repnz
sbb
iret
and
cmpsl
xor
mov
cwtl
and
fldt
xchg
inc
in
ss
push
sbb
aas
inc
subl
aas
stos
xchg
push
aas
inc
add
push
out
sbb
push
pop
push
jp
movb
push
aas
push
sbb
inc
subl
cmpsl
pop
adcl
inc
roll
fwait
movsl
sbb
jle
push
ljmp
mull
stos
mov
pushf
cli
mov
loope
jl
call
ret
das
inc
adcl
pop
into
js
int3
arpl
pop
sbb
dec
dec
nop
and
push
lahf
push
adc
addl
jnp
dec
inc
sub
dec
jl
je
cmp
aaa
cmpsb
js
ds
adcl
les
push
aas
inc
jle
aas
inc
cmp
xor
aaa
mov
ss
andl
dec
dec
xchg
inc
jle
aas
inc
subl
leave
xlat
lea
test
jnp
jbe
push
imul
push
aas
stos
cltd
push
aas
inc
mov
mov
mov
pop
sub
leave
pop
aas
inc
nop
shll
adcl
inc
subl
aas
inc
xorl
aas
es
pop
push
scas
js
inc
repz
pop
or
adc
jl
out
jne
xchg
pop
push
adcl
push
push
mov
out
or
jne
xchg
jle
loope
mov
push
push
ret
inc
arpl
sbbl
jecxz
fs
shl
jb
pushf
jecxz
xor
inc
xor
pushf
fdivl
mov
xor
sbb
popa
dec
in
or
sbbl
insb
cmpsl
jecxz
andl
mov
or
lds
out
jl
lret
cmc
insb
mov
dec
mov
ret
out
xchg
sub
out
sbbl
sbbl
stos
cmpsl
dec
pop
jnp
mov
movsb
nop
stos
jno
sbbl
inc
test
xchg
daa
jecxz
sbbl
cmp
jo
jmp
mov
sbbl
cmp
jbe
pushf
jecxz
imul
pop
xor
test
jnp
push
ror
mov
push
push
in
fs
lahf
push
inc
setne
mov
in
movsb
nop
cwtl
sub
or
in
jmp
ss
subl
fmuls
mov
aad
xor
mov
fcoms
dec
bound
pop
sub
stos
jg
jnp
cmc
inc
sbb
lret
std
sbbl
jg
inc
adc
iret
xor
fildl
outsb
mov
std
fcmove
jns
mov
out
sbbl
jl
int3
int
and
xchg
inc
dec
add
mov
repz
cld
int3
testb
add
cwtl
inc
push
xchg
push
cmpsb
in
in
cld
sbbl
testl
mov
lret
movsb
inc
incl
bnd
pushf
jecxz
jmp
and
jecxz
adc
adc
test
pop
andl
stos
icebp
sbbl
xchg
sub
out
sbbl
sbbl
out
es
xchg
and
out
sbbl
test
out
xorl
and
std
xor
jne
test
gs
add
fiaddl
std
int3
std
sbbl
repz
push
loopne
fs
mov
out
orl
lock
xchg
inc
and
data16
insb
mov
mov
out
xorl
fstps
push
loop
cltd
cwtl
int3
js
mov
repnz
pop
jecxz
cmp
repnz
xchg
push
mov
dec
jno
test
push
sete
sahf
bnd
pushf
jecxz
xchg
and
int3
testl
je
mov
daa
in
sbbl
test
repz
lds
mov
dec
outsb
or
test
test
out
sbbl
rol
pushf
fldl
out
int3
xchg
test
out
addl
mov
mov
push
jle
fcmove
xchg
push
out
sbbl
push
push
cmpsb
test
xchg
ficomps
mov
in
loop
sbbl
in
dec
test
cmp
lahf
fucomip
or
lods
jecxz
sbbl
mov
push
outsb
lods
sub
stos
adc
cld
inc
dec
in
cmc
out
sbbl
pop
jl
fnstenv
inc
sbb
xchg
pushf
jecxz
or
out
push
out
loope
sbb
fucomi
in
lods
call
lods
jecxz
addl
repnz
pop
or
sbb
pushf
sbbb
cmpsb
cmpsb
jmp
sbbl
push
sub
out
sbbl
xchg
std
data16
std
inc
push
in
dec
jnp
sti
inc
fadds
int
push
out
fcoms
sub
imulb
out
ret
sub
out
gs
mov
pop
add
data16
test
jecxz
shld
std
int3
incl
push
int
cwtl
sub
push
pop
sahf
mov
inc
out
stc
test
out
stc
movsb
int3
testl
leave
int3
add
pushf
jecxz
aas
scas
jl
pop
scas
push
jecxz
and
test
add
out
sbbl
idiv
or
and
push
mov
stc
sahf
mov
insb
stos
in
out
subl
in
pop
bnd
pushf
jecxz
jecxz
push
dec
in
outsb
notl
pushf
bnd
pushf
jecxz
jl
hlt
out
sbbl
insl
ljmp
divps
cwtl
inc
push
pshufw
sbbl
testb
push
adcl
fmuls
add
jno
pushf
jecxz
jecxz
mov
xchg
push
loope
adcl
adc
int3
stc
sbbl
fs
ljmp
in
insb
pop
jmp
cmp
shl
out
out
sbbl
or
jl
sbb
out
scas
xchg
and
out
sbbl
sbbl
cmp
push
movd
cwtl
bnd
pushf
jecxz
jecxz
icebp
out
sbbl
cli
adc
popa
iret
and
xchg
faddl
outsb
loopne
aad
incb
xchg
loop
adcb
jae
pushf
jecxz
xchg
es
sbbl
notb
adc
in
and
nop
pushf
bnd
pushf
jecxz
jnp
pop
lock
insl
movsb
jecxz
sbbl
jmp
mov
arpl
pusha
test
out
sbbl
cltd
sub
add
xchg
outsb
jmp
sbb
out
sbbl
adcl
push
cmc
test
fiadds
add
add
in
mov
insl
pusha
loope
addl
inc
test
dec
or
lods
call
out
addl
jecxz
leave
sahf
pop
dec
mov
push
pop
jmp
sti
pop
bound
mov
jecxz
insl
mov
mov
cmpsl
fwait
bnd
pushf
jecxz
jmp
xchg
outsb
aaa
mov
int3
incl
popf
or
fwait
stc
xchg
test
add
cmp
jno
push
sbb
out
sbbl
daa
out
mov
sub
lcall
addl
lods
mov
mov
cmp
in
call
cmp
add
inc
inc
popf
jecxz
insb
movsl
jecxz
cmpl
mov
xchg
and
out
sbbl
fs
mov
adc
pop
push
sbb
into
pop
sub
jl
inc
clc
xchg
and
sahf
xchg
fcoms
sub
push
inc
insl
lods
jecxz
add
and
inc
sbb
shlb
decb
movsb
jecxz
subl
jmp
icebp
repz
jo
mov
dec
cmc
dec
lods
jmp
adc
mov
repnz
mov
out
sbbl
sbbl
xchg
loopne
scas
jbe
cli
sbbl
repz
add
pop
into
cmc
jg
int3
sti
sbbl
test
dec
int3
pop
test
out
xor
xorb
push
pop
fcmovnu
subb
shl
pmulhuw
out
cld
out
dec
xchg
sub
out
sbbl
in
push
dec
mov
int3
testl
lea
push
pop
mov
incb
stos
repnz
cmc
int3
jle
jecxz
imul
sbb
xlat
pmulhw
bound
xchg
jecxz
lds
jp
pop
jbe
div
mov
arpl
push
leave
jge
aas
icebp
test
js
sahf
jbe
clc
push
icebp
dec
loopne
leave
jl
mov
pop
add
fstpl
out
xchg
sub
out
sbbl
fwait
imul
sbbl
sahf
pushf
jecxz
xchg
sub
out
sbbl
clc
in
std
and
cmp
jle
aas
int3
sub
xchg
pushf
jecxz
jmp
xlat
pushl
jle
or
bnd
pushf
jecxz
xchg
daa
in
sbbl
add
std
inc
mov
pushf
filds
xchg
out
sbbl
fs
pop
jns
jecxz
js
cmpsl
in
jge
test
out
push
out
fmuls
sbb
fs
fistpll
inc
jmp
mov
test
push
inc
fnstsw
cmp
icebp
add
mull
xorl
nop
jno
mov
mov
lcall
pop
xchg
cmpsl
mov
inc
jae
pushf
bnd
mov
out
out
sbbl
xchg
pop
jecxz
sbbl
sbbl
lcall
cli
inc
outsl
test
stc
test
out
stc
movsb
int3
add
das
fwait
mov
ja
iret
insb
aas
pop
and
sbbl
lds
out
sbbl
sbbl
adc
push
insb
outsl
out
adcl
lock
and
int
push
fistl
icebp
sbbl
subl
fmuls
sbb
pop
mov
and
out
sbbl
stc
test
cld
sbbl
inc
or
sbb
pop
inc
out
stc
movsb
int3
incb
mov
dec
xchg
sahf
xchg
fstps
int3
add
pushf
jecxz
out
add
sub
cs
mov
push
hlt
xchg
cmc
popf
dec
in
fs
push
lret
and
pushf
jecxz
pop
bnd
pushf
jecxz
insb
test
out
add
ffree
and
enter
out
cmp
loope
std
outsb
xor
sbbl
das
test
scas
aad
incb
stos
fs
sbbl
adc
outsw
mov
out
jecxz
cwtl
sub
cwtl
inc
jae
test
jecxz
addl
xor
dec
dec
jecxz
jge
pushf
jecxz
cmp
loop
cmp
jns
pushf
jecxz
insb
movsb
jecxz
andl
enter
add
je
xchg
cmp
pop
push
repnz
test
xchg
and
lock
insb
mov
out
xorl
repz
cli
fdivs
sahf
xor
loop
xchg
pop
or
sbbl
xor
adc
push
push
or
stos
jecxz
sbb
es
push
in
das
gs
xor
push
pop
sbb
hlt
xchg
and
sbbl
or
jecxz
cmp
jo
pushf
jecxz
or
push
cmp
pop
dec
add
imul
lret
mov
lret
mov
bnd
pushf
jecxz
jecxz
dec
pop
nopl
jl
int3
repnz
out
fisubs
push
pop
push
pop
lea
jge
cltd
sub
outsb
aaa
mov
jecxz
jle
idivb
jl
stos
jnp
es
xor
test
in
push
jecxz
addl
xchg
adc
jecxz
sbbl
jne
pushf
jecxz
dec
test
cmc
inc
jnp
test
fsts
stos
and
repnz
out
int3
sti
sbbl
inc
test
or
push
in
mov
fcoms
mov
mov
movsb
pop
xchg
adc
aaa
xchg
lods
imul
jae
decl
popf
jecxz
xor
sbb
mov
fists
mov
call
sbbl
ljmp
add
pushf
jecxz
lea
in
jmp
fiadds
dec
cmp
aad
push
jp
push
cmpsl
inc
sbb
jmp
rcl
movsb
push
jl
aas
icebp
test
jecxz
or
outsb
lock
insl
cmpsl
jecxz
addl
xor
call
push
insl
movsl
jecxz
sub
adc
dec
and
ret
sub
pushf
cmc
sbbl
dec
xchg
pop
cmc
mov
lods
jecxz
addl
mov
lahf
pop
enter
mov
push
xchg
and
out
sbbl
sbbl
sbb
jo
add
pushf
jecxz
mov
or
adc
inc
mov
shl
push
in
hlt
out
sbbl
stc
leave
pop
mov
mov
pop
jmp
insb
scas
jecxz
cmpl
adc
mov
xor
mov
inc
jns
iret
decl
stos
jecxz
addl
add
push
xor
jae
cltd
inc
push
fists
xchg
outsb
xor
sbbl
leave
test
jno
pushf
jecxz
jecxz
dec
jnp
push
xor
test
out
sub
xchg
and
arpl
pop
sbb
aaa
dec
xor
mov
cwtl
jecxz
sbbl
insb
scas
jecxz
andl
aaa
stos
sbb
cmp
sbbb
add
jecxz
daa
and
fists
inc
lret
lds
imul
pushf
jecxz
mov
cmc
int3
inc
les
mov
bnd
pushf
jecxz
js
sub
insl
scas
jecxz
addl
out
clc
ljmp
jnp
xchg
icebp
out
jle
mov
cmp
sbb
xchg
inc
mov
pushf
inc
leave
xor
push
nop
push
flds
lea
dec
daa
bound
es
mov
jnp
xchg
out
sbbl
sahf
push
mov
jae
cltd
inc
fsts
add
test
xor
test
inc
inc
mov
jno
sbbl
subl
xlat
test
loop
push
out
dec
ljmp
push
ljmp
mov
sbbl
loope
mov
rclb
mov
cli
repnz
pop
dec
add
pushf
jecxz
xchg
mov
cmp
ret
addr16
mov
cli
xchg
pushf
jecxz
push
inc
cld
test
lods
xchg
pop
mov
or
inc
jmp
das
test
jecxz
xchg
pushf
jecxz
add
sub
sbb
sbb
or
je
pushf
jecxz
insb
movsb
jecxz
andl
pop
dec
cmp
fs
mov
jmp
sbbl
adcl
jae
pushf
jecxz
insb
movsb
jecxz
addl
pop
sbb
out
xchg
and
lock
xchg
pop
cld
out
sbbl
jp
inc
cld
lods
cmpb
pop
cmc
sbb
hlt
mov
fld
pushf
jecxz
jg
sub
in
lcall
pop
stos
add
sbb
out
sbbl
cmpsl
dec
xchg
pop
enter
push
fdivrs
jne
call
addl
ja
imul
pop
sbb
hlt
xchg
and
sbbl
rclb
cwtl
inc
in
out
out
sbbl
cld
inc
dec
push
adc
bound
mov
jecxz
mov
fcomps
or
insl
scas
jecxz
add
popa
shrb
sbb
adc
or
pop
sahf
xor
shl
arpl
add
outsb
aaa
mov
repnz
jl
imul
cmp
jnp
test
jnp
pushf
jecxz
xchg
and
out
sbbl
insb
mov
out
cmp
push
inc
out
push
pmulhuw
fcoms
mov
inc
sub
daa
cmpsl
hlt
mov
dec
clc
icebp
shlb
xchg
and
out
sbbl
and
push
test
dec
out
test
jecxz
cmp
dec
insb
movsb
jecxz
addl
fdivrp
outsb
aaa
mov
bnd
pushf
jecxz
xchg
push
jecxz
sbbl
insl
cmpsl
jecxz
or
aas
mov
js,pn
stc
and
jecxz
int3
incb
mov
lds
sub
cmc
jecxz
jo
sbbl
sbbl
cmpsl
and
outsb
imul
in
bound
xchg
jecxz
push
sahf
jecxz
adcl
out
cmp
aad
jl
sbb
add
lret
testl
xchg
inc
push
or
push
loop
sbbl
das
lea
cmp
xchg
fwait
xchg
daa
imul
sbbl
dec
mov
sub
push
mov
arpl
mov
pop
add
ret
aam
xor
std
bnd
pushf
jecxz
jecxz
lods
stos
je
fisubl
in
sub
in
inc
push
ljmp
in
xchg
xor
add
jecxz
subl
jmp
stos
arpl
sbbl
mov
stos
push
out
popf
jecxz
xor
fcmovbe
out
cwtl
cld
jecxz
fmuls
rorb
cmp
testb
add
sbb
cwtl
cld
jecxz
mov
push
xchg
and
out
sbbl
lret
mov
add
lock
fwait
push
test
out
cmp
jo
pushf
jecxz
in
out
out
sbbl
sbb
rcrl
fsubrl
jecxz
ljmp
push
push
int3
incl
movsb
pop
xchg
inc
ja
push
js
or
xchg
and
out
sbbl
test
push
in
cmc
out
sbbl
out
iret
xor
mov
mov
push
xchg
out
add
mov
push
push
inc
sub
mov
xchg
repz
adc
push
mov
push
sbb
sbbl
cs
jae
mov
pop
test
and
inc
sar
jp
pushf
jecxz
xchg
sub
out
sbbl
adcl
call
popf
jecxz
xor
fstps
jne
sbbl
insb
scas
jecxz
sbb
cwtl
rclb
mov
jmp
jge
pushl
stos
nop
test
out
sbbl
fstpl
jne
or
mov
xchg
pushf
jecxz
jl
xchg
fstl
dec
jmp
pop
test
movsl
clc
test
xor
arpl
sbbl
adc
imul
bnd
pushf
jecxz
xchg
push
in
sbbl
test
out
sbbl
mov
xor
aad
or
xchg
lret
cld
sbbl
cmpsl
scas
out
cmpsl
jnp
sub
xchg
pushf
jecxz
inc
repz
lahf
hlt
faddl
push
ja,pn
adc
std
shlb
dec
cmp
push
push
jp
dec
insl
mov
out
sbbl
or
mov
scas
and
pop
cmc
enter
icebp
sbbl
sbbl
adcl
sbbl
lret
xchg
fdivl
inc
mov
into
jmp
insb
popf
jecxz
xor
ficoml
icebp
cwtl
cld
xchg
es
sbbl
cmp
incl
fs
jl
xchg
lret
loop
popa
ja
mov
mov
cmp
cmpsb
inc
jo
sbb
cwtl
cld
insb
mov
scas
ds
push
jecxz
sti
xor
dec
in
inc
and
cmpsb
pop
aam
outsb
psrad
dec
insb
stos
jecxz
or
rol
loope
jb
xor
sbbl
loop
mov
mul
stos
mov
xor
test
out
and
mov
and
and
inc
jno
fbld
aaa
mov
xor
pop
popa
fdivrp
hlt
mov
sub
insl
cmpsb
jecxz
and
jg
pop
gs
ja
insb
aaa
nop
cld
dec
jnp
add
in
out
out
sbbl
pop
jecxz
pop
movsl
sub
inc
fcoms
and
mov
xchg
aas
int
jl
imul
insl
shl
std
insb
aaa
xchg
xchg
inc
fsts
sub
mov
je
push
dec
std
inc
fcoms
popf
repz
fisubrs
jmp
in
aaa
mov
imulb
in
inc
in
lods
jecxz
xchg
pushf
jecxz
xlat
nop
jg
push
popa
bound
les
roll
lods
xchg
and
out
sbbl
in
or
jecxz
xchg
mov
outsl
jns
sti
sub
sbb
mov
and
pop
test
push
pop
sub
inc
jo
or
int3
std
sbbl
inc
std
sub
std
loop
sub
stc
out
sbbl
subl
push
cltd
inc
and
cli
mov
adc
jl
das
test
jecxz
xchg
push
in
sbbl
sbbl
sbb
jbe
mov
jle
out
int3
add
jno,pn
mov
sti
adc
mov
jo
mov
stos
mov
jno
pushf
jecxz
insb
lods
jecxz
adc
dec
jmp
mov
subb
int3
incl
repz
lock
mov
dec
in
xchg
cmp
out
test
push
addr16
rcrb
std
dec
jnp
add
pop
inc
jge
shr
movsb
nop
stos
jb
sbbl
xchg
sub
out
sbbl
or
adc
jo
push
orb
dec
jno
lds
stos
push
call
xchg
pushf
jecxz
add
push
dec
ja
icebp
divb
neg
xor
repz
xchg
out
sbbl
lods
dec
fiaddl
insl
stos
jecxz
orl
in
xor
flds
ljmp
push
adc
sbbl
jl
fs
insl
mov
cli
xchg
cmpsb
decl
mov
out
cmp
jnp
xchg
out
sbbl
mov
pop
push
mov
inc
inc
insl
mov
lea
push
xor
out
sbbl
nop
stos
gs
sbbl
mov
outsb
ljmp
jecxz
adcl
jecxz
mov
jmp
push
cmp
stos
insl
or
pushf
jecxz
cmp
push
scas
out
test
out
sbbl
cmpsl
fistps
imull
inc
out
xchg
cmp
out
addl
pop
int3
inc
cmp
addr16
movsb
jnp
or
inc
lea
dec
call
fmuls
add
and
test
or
sbbl
cmp
testl
lods
int3
cli
sbbl
sbb
loopne
insb
jb
int
cld
insb
stos
jecxz
orl
xor
jo
mov
scas
dec
sub
out
addl
imul
adcl
sahf
jecxz
adcl
xchg
and
out
sbbl
fstpl
out
out
xchg
outsb
mov
sbbb
pushf
pushf
jecxz
insb
mov
out
xor
push
inc
test
notl
in
add
jnp
fdivrs
xchg
cmp
out
sbbl
out
sbbl
into
push
popf
cmp
mov
lods
inc
xor
mov
inc
lret
add
sbb
rolb
or
dec
pop
jge
ds
in
repnz
nop
pushf
jecxz
xchg
and
out
sbbl
push
pop
fdivrl
std
fcoml
sbb
test
jecxz
xchg
sub
out
sbbl
xchg
mov
movsl
fwait
mov
xchg
pushf
jecxz
push
pop
cmp
mov
adc
test
add
jge
push
call
lahf
aaa
out
fcomps
or
ds
cwtl
jns
mov
add
sub
dec
cmp
jecxz
insb
scas
jecxz
andl
popa
ficoml
fdivl
mov
jns
push
out
mov
pushf
hlt
dec
pushf
mov
shrb
sub
out
cmp
jnp
xchg
out
sbbl
repnz
cmp
call
in
mov
out
addl
adc
dec
mov
aad
sbb
jne
aaa
out
inc
jge
ret
inc
bnd
pushf
jecxz
xchg
and
out
sbbl
nop
xchg
jo
sbb
pushf
mov
aam
fcomp
pushf
jecxz
pop
stc
icebp
xor
insb
pop
push
adc
cmp
pop
test
jecxz
jg
inc
jo
push
lret
add
int
push
adc
jnp
push
xchg
insl
scas
jecxz
sub
pop
bound
sti
fnsave
jns
insl
push
dec
in
out
in
pushf
repz
subl
dec
insl
movsl
jecxz
and
mov
push
pop
adc
lods
jno
sbbl
push
test
inc
out
push
lods
jo
sbbl
push
test
lret
std
sbbl
mov
xor
int3
testb
cltd
dec
jmp
push
stos
call
xchg
pushf
jecxz
je
jb
imul
jae
mov
andb
aaa
test
jecxz
jecxz
jo
imul
outsb
repz
out
out
sbbl
push
push
push
jo
scas
inc
sti
inc
lods
sub
incb
test
testb
jecxz
andl
fcoms
jmp
pusha
dec
inc
inc
adc
int
cld
dec
daa
out
mov
jecxz
jnp
mov
adc
out
jo
repz
lea
or
insb
mov
inc
mov
and
daa
adc
mov
out
and
mov
or
loop
and
or
test
repnz
dec
fs
out
sbbl
pushf
jecxz
inc
das
dec
shll
ss
out
cmp
jecxz
insb
mov
cmp
frstor
daa
adc
mov
xor
stc
sub
add
loop
mov
pop
mov
out
sbb
adc
sbbl
popa
cmp
test
out
jp
mov
shrl
stc
shll
push
xor
xchg
xchg
cmp
mov
pop
aaa
fs
lods
fisttps
mov
pop
mov
jnp
xor
mov
and
mov
and
mov
and
cmpsb
mov
shrl
dec
mov
or
xor
mov
into
stc
bound
add
add
insl
mov
mov
outsb
decb
mov
insl
sbb
pop
sbb
jne
insb
imul
cmp
jne
adc
pop
rorb
cmp
cmpsl
jge
inc
popa
dec
inc
lock
mov
xchg
sahf
inc
lds
jo
add
inc
inc
cmp
lea
adc
cld
fldl
lea
ja
adc
xchg
pusha
loopne
std
das
in
ljmp
loop
jmp
jg
adc
push
and
test
push
les
xor
xchg
xchg
xchg
pop
pushf
int
lock
add
lret
sbb
pusha
cmp
int3
aad
pop
iret
stc
scas
sub
mov
icebp
mov
repnz
insl
jo
and
and
jg
mov
div
fcmovb
pushl
pop
dec
xor
jge
jp
adc
gs
mov
in
js
mov
jmp
inc
cmp
insb
adc
jne
aas
pop
mov
inc
dec
imul
xor
loop
ldmxcsr
sti
jb
pop
imul
sub
in
in
into
jbe
inc
outsl
sub
mov
shll
push
xlat
mov
movsb
xor
mov
xchg
xchg
std
lret
xorl
mov
or
fisubrl
mov
movsl
pop
pushf
sub
adc
in
sbb
push
add
lcall
test
adc
push
nop
push
adc
loop
std
push
mov
push
aad
sub
aaa
add
lea
lock
jns
cwtl
mov
add
mov
jge
lods
and
cmp
adc
sbb
dec
or
aas
push
push
es
xorb
addl
xchg
clc
loop
xchg
cmp
sbb
jbe
push
cli
inc
fisubrs
pop
sbb
xor
test
push
sbb
mov
pop
stc
push
or
fidivs
loop
sti
or
sbb
nop
les
mov
pop
mov
test
fstl
adcl
and
loopne
iret
xchg
pushf
arpl
and
ret
insl
sub
in
or
or
shll
shrl
add
push
lock
adc
loope
cs
aad
ljmp
mov
and
dec
mov
bound
mov
sbb
test
or
adc
mov
insl
jmp
stos
ret
adc
push
add
fcmovnu
xor
sub
les
adc
call
mov
cld
xchg
cld
popf
test
js
push
ljmp
andb
in
inc
icebp
push
fnstenv
decb
or
jmp
or
cwtl
jnp
dec
enter
lret
cmpsb
fimuls
or
pop
scas
stos
jae
inc
dec
push
pop
int3
pop
std
les
sahf
rcrb
mov
jb
aad
mov
xlat
cmp
adc
push
pop
mov
adc
iret
call
aam
rcll
mov
add
nop
shr
aam
mov
es
in
in
icebp
mov
cmc
xchg
aaa
int3
pop
xor
scas
insl
rol
lods
inc
loop
jmp
jmp
mov
sub
orb
push
pop
scas
or
jecxz
imul
leave
add
sbb
xchg
fstps
addr16
clc
pop
and
cs
xchg
enter
cwtl
in
imul
or
rolb
sub
ljmp
dec
adc
fadds
lds
lods
cli
addr16
mov
sub
orl
rclb
pop
or
jge
mov
lods
pop
pop
jno
inc
xor
ja
repnz
leave
pop
lods
imull
fsubl
pop
mov
dec
stos
in
lret
inc
pop
ficoml
lds
or
scas
and
pop
push
stos
call
inc
mov
repz
sub
daa
inc
cmp
pop
test
icebp
pop
flds
mov
mov
cmp
sub
lds
arpl
aas
pop
lds
stos
xlat
mov
test
repz
loope
movsb
outsb
or
inc
xor
jmp
lods
xchg
cmp
and
clc
rcr
cmp
mov
lret
jae
test
mov
dec
pop
lret
daa
dec
and
es
outsl
xor
and
mov
xor
movsb
push
out
jg
repnz
addr16
data16
jmp
call
jbe
lods
push
ret
xor
cwtl
xor
and
cld
aad
pop
fildl
mov
fidivl
shlb
test
jle
lea
out
jb
mov
fwait
ret
fldcw
dec
cmp
lods
jmp
mov
xchg
inc
fiaddl
jns
imul
jge
in
sub
clc
pop
mov
jnp
ret
lea
fwait
push
stc
push
mov
insl
incl
ret
aaa
loop
or
repz
outsl
movsl
rcr
push
paddq
dec
cld
fidivrs
add
dec
int
rorl
out
addl
sarb
filds
push
xchg
push
aas
aam
ljmp
scas
dec
mov
jg
mov
lcall
jmp
xchg
stc
xchg
and
cmp
sbb
dec
cmp
mov
movsl
scas
push
sbb
or
mov
push
fimuls
jle
pop
adc
jp
fcomip
push
pop
sbb
ss
mov
js
push
lgdtl
repz
sbb
cli
aaa
and
out
nop
jnp
mov
in
xchg
or
pop
outsl
push
add
fs
inc
mov
sbb
push
xor
sub
js
les
adc
jmp
sti
mov
aaa
inc
sub
insb
cmp
sbb
mov
xchg
test
ljmp
mov
dec
in
push
rcrb
aad
fwait
cmc
mov
sbb
push
mov
call
mov
loop
cwtl
lods
xor
sbb
rcll
iret
mov
jnp
jp
or
cmpsl
pop
jno
cmc
cmpsl
sahf
lahf
stc
sub
or
addl
cmc
fidivs
loop
lret
cmp
fldt
das
xchg
sbb
out
mov
scas
mov
add
fadd
ret
insb
test
sbb
fmuls
and
mov
jmp
cmp
xchg
mov
dec
lret
and
mov
push
scas
pop
inc
jg
fucomip
sets
sub
popf
jae
aas
or
ja
inc
insl
pop
push
add
cli
fwait
outsb
imul
pop
jb
sahf
lcall
jp
lods
scas
ja
sbb
loopne
inc
orb
test
popf
mov
ljmp
lock
es
add
jp
dec
mov
dec
in
sbb
insb
pop
pop
mov
or
pop
in
fistpl
adc
lock
daa
out
lahf
jge
xor
insb
sbb
call
and
addr16
xchg
push
pop
cmpsl
imul
outsb
and
out
adc
stos
push
idiv
imul
pop
push
xchg
and
sub
mov
arpl
fldt
xor
or
sar
fwait
test
popa
jne
jne
popf
pop
js
fsubs
mov
fdivs
cltd
in
test
pop
loopne
lret
out
shlb
shrb
push
les
add
inc
xchg
insb
jecxz
and
mov
aad
jmp
sarl
add
hlt
test
pop
dec
mov
xor
decl
and
shll
test
outsl
mov
ficomps
pop
push
dec
std
sbb
fs
jo
sti
call
or
cmp
adc
lods
mov
pushf
xchg
sub
or
call
call
enter
fnstcw
xchg
sbb
push
ret
sbb
pop
push
xchg
ret
lcall
fwait
loopne
add
xor
lods
mov
or
pushfw
stos
sub
data16
cmp
mov
sbb
sbb
push
lret
lret
lds
movb
pop
push
cmp
push
leave
jmp
add
std
inc
pop
push
arpl
mov
daa
orb
ljmp
call
je
sbb
aas
sbb
xchg
loope
hlt
nop
add
mov
out
out
mov
sbb
out
mov
dec
out
or
jae
add
pop
sub
jmp
push
loope
dec
je
aaa
and
sub
pop
xchg
adcl
imul
add
xorl
xor
jo
mov
divl
fstps
jl
jnp
pop
mov
xor
xor
jg
mov
and
and
push
lahf
adc
jne
and
mov
test
cld
lret
inc
pop
loope
sub
inc
mov
imul
repnz
push
xor
in
adc
fsubrs
outsb
pop
dec
or
add
sbb
test
jmp
insb
clc
aad
inc
pop
jmp
nop
inc
mov
sbb
inc
push
arpl
cmp
xor
push
sbb
xchg
inc
push
dec
test
jo
cmc
arpl
pushl
mov
dec
xchg
leave
xor
bound
push
inc
pop
outsb
or
xchg
cmc
fldl
xchg
push
lcall
sbb
cmp
das
fstl
adc
push
out
adc
add
jns
jle
orb
sub
loope
fdivr
mov
hlt
and
and
mov
aas
insb
jl
out
jbe
jnp
adc
dec
js
int
stc
movsl
jmp
ret
dec
fisttpll
jmp
push
popa
fs
imul
loopne
push
leave
jp
ret
in
pop
add
fnstcw
test
cs
dec
imul
aaa
inc
lds
pop
aam
mov
jb
mov
xchg
aas
ljmp
sbb
sarl
out
dec
lods
xchg
addr16
fsubr
scas
ds
dec
data16
push
push
sub
push
stos
sbb
rcl
pop
jl
sarl
ljmp
mov
movsl
mov
mov
inc
add
lret
jb
rcll
cmp
mov
xchg
mov
push
scas
loopne
pop
jno
pop
popf
jo
lcall
sbb
jecxz
popa
pushf
lods
push
loopne
push
ret
push
inc
popf
lods
in
mov
fwait
add
cmc
push
push
icebp
loopne
sub
sub
inc
cmp
push
xor
mov
in
ss
std
icebp
roll
lret
into
push
bound
jmp
or
pop
xor
adc
stc
icebp
fwait
pop
mov
mov
push
mov
inc
sbb
or
pop
jl
mov
cmp
iret
fnstenv
push
sub
jbe
xchg
mov
inc
gs
lods
movsb
outsl
loopne
mov
das
mov
clc
frstor
dec
js
stc
push
push
jno
cmp
jne
push
arpl
js
mov
gs
stc
scas
jns
ja
jnp
inc
pop
sbb
mov
vmovaps
not
call
test
sbb
mov
dec
repz
shlb
and
add
mov
stos
xor
dec
inc
repnz
xchg
push
sbbl
test
ljmp
pusha
adc
mov
in
cmc
mov
test
push
and
push
add
rcrl
inc
mov
mov
jp
and
jbe
enter
pusha
cmpl
and
fisubrs
adc
clc
cmp
add
xlat
inc
addb
pop
sub
push
in
jmp
subb
stos
dec
add
adc
lods
mov
mov
mov
push
xchg
cmpsb
clc
fcmove
dec
testb
scas
xor
iret
les
das
movsl
pop
out
push
sbb
cmp
arpl
ret
dec
fcomps
lahf
sbb
push
std
jecxz
test
jb
daa
inc
dec
popa
push
add
cmpl
xlat
mov
popf
cmp
xlat
or
push
add
jae
stos
inc
lds
fmull
mov
cltd
lds
lock
sub
jg
mov
sbb
xchg
and
and
sub
mov
cltd
jnp
pop
sub
jb
adc
jne
orb
sti
dec
adc
call
xor
jge
fnstsw
iret
ja
std
nop
pop
popa
cs
imul
mov
call
jp
jl
push
push
rcll
pusha
push
and
pop
xchg
scas
sbb
xchg
jbe
dec
leave
jne
lds
mov
cmp
sbb
xchg
sub
sarl
mov
pop
loopne
mov
icebp
mov
and
fcoms
sbb
adc
jp
mov
loop
test
inc
mov
lods
je
cmp
add
lea
popf
xchg
hlt
in
jmp
mov
push
dec
cmp
cmpsl
dec
jg
out
leave
test
fldenv
mov
mov
mov
adc
xor
ljmp
std
inc
mov
cmpsl
pop
pop
push
and
arpl
test
dec
repnz
not
js
or
push
fistpl
push
xchg
test
mov
divl
pop
jbe
mov
test
mov
jbe
xor
pop
fldenv
inc
loopne,pt
out
insl
jno
sbb
mov
les
jns
fstps
sbb
and
mov
lret
insl
sub
cmp
imul
and
insl
push
push
adc
add
mov
out
cmpl
fldenv
sub
xchg
ss
xor
mov
pop
sahf
pop
xor
adcb
inc
mov
cli
jl
and
cmp
add
scas
cmp
out
inc
pop
fstpt
cltd
mov
hlt
push
cld
es
insb
sub
sti
pop
and
fstps
push
ja
mov
sbbb
inc
mov
into
xor
xor
loopne
pop
cmp
hlt
add
mov
jb
push
test
divb
inc
add
xchg
xor
xlat
mov
dec
and
mov
mov
fwait
test
stc
pop
jge
jae
movb
enter
adc
xchg
cli
fisttpl
mov
cmpsl
ljmp
pusha
xchg
cmp
and
adc
jl
test
inc
or
or
les
rorl
cmp
iret
push
sub
ret
fidivrl
xchg
mov
push
sti
jo
mov
mov
push
mov
adc
andl
mov
cwtl
jnp
xor
xor
in
add
lret
les
mov
cld
jl
adc
fstpt
cltd
mov
sbb
jns
push
ret
inc
lock
xchg
lahf
add
loopne
hlt
jbe
sbb
mov
mov
lahf
jmp
je
cmpsb
pusha
cmp
std
mov
dec
fs
push
or
xor
add
or
sahf
xchg
xor
xchg
sahf
jbe
imul
movsb
das
in
movl
xchg
mov
cmp
fimull
lock
mov
dec
insb
jns
out
bnd
push
insb
jns
and
cmc
mov
inc
cmc
xlat
sarl
inc
sbb
mov
ret
jmp
ljmp
dec
shrl
imul
push
and
mov
xor
adc
xchg
leave
dec
andl
push
arpl
jl
add
je
inc
push
add
xchg
scas
mov
add
mov
loopne
ret
in
je
out
cli
movsb
int3
dec
gs
and
cwtl
mov
and
aaa
and
cltd
adcl
scas
add
out
pop
scas
jne
lock
lds
mov
pop
jo
sub
fldl
and
mov
ss
sbb
lods
jne
mov
push
jl
push
loope
mov
arpl
clc
or
insb
pushf
add
sub
jp
xor
loop
mov
mov
pop
sahf
sarb
pusha
xlat
rep
fiaddl
xlat
cwtl
mov
cs
lahf
pop
or
out
dec
js
fldenv
push
ja
sub
jl
shrl
test
lahf
add
imul
ds
and
xor
cmc
ljmp
mov
jg
dec
mov
ljmp
xchg
call
push
mov
pop
popl
jmp
les
pop
ja
sarl
rolb
lret
dec
mov
stos
cmp
mov
adc
stos
or
pop
push
ret
sbb
pushf
jmp
or
dec
dec
inc
mov
sub
cmpsl
inc
dec
cmp
jae
push
mov
stos
inc
jge
xchg
popf
stc
and
inc
data16
mov
pop
std
les
xor
cmpsb
mov
xchg
test
idiv
or
in
dec
aas
xor
enter
daa
or
jmp
mov
jg
push
lcall
push
movsb
repz
popa
fdivr
ds
inc
mov
jnp
mov
xor
dec
add
in
lret
push
fimuls
dec
mov
jg
ja
insl
dec
bound
mov
paddw
fwait
cld
push
push
mov
in
fwait
nop
in
mov
fidivl
mov
cmpsl
ljmp
xchg
xor
orl
cmp
or
mov
add
jecxz
mov
daa
inc
popl
je
lock
loope
inc
mov
sti
jnp
fdivl
pop
and
inc
or
notl
push
add
insl
sub
mov
lcall
int
data16
inc
mov
jns
lret
xchg
xor
aas
popa
fwait
cltd
mov
call
into
mov
in
jo
dec
out
arpl
adc
jecxz
mov
fiaddl
dec
fidivl
push
jno
aad
or
inc
pop
push
mov
jp
setns
sbb
dec
shll
adc
fisubrs
push
jo
fs
pop
rorl
sub
sbb
mov
mov
adc
es
lock
mov
cmova
dec
dec
in
xchg
and
mov
cli
cmpsb
cmp
jmp
sbb
jg
push
and
outsb
xchg
sub
jo
inc
dec
test
icebp
fs
ret
insb
sbb
sub
mov
mov
jns
out
jmp
push
test
jb
jne
lcall
mov
fsubs
out
mov
or
or
xchg
lahf
inc
jae
or
cmc
sbb
out
push
or
loopne
test
inc
add
inc
inc
cmc
aad
nop
mov
movsl
sbb
loopne
hlt
fiadds
mov
aas
xor
loop
dec
xchg
addr16
pop
movnti
sahf
shlb
and
lcall
scas
adc
mov
sub
fdivs
mov
mov
lods
call
nop
aaa
mov
addr16
fs
addr16
outsb
mov
sub
xchg
gs
sbb
add
xlat
push
lret
dec
add
inc
movsl
lock
adc
and
push
jmp
repz
mov
and
or
outsb
jmp
outsb
xchg
cltd
mov
adc
cld
popa
decl
fimuls
jmp
xor
clc
ss
loope
fwait
loopne
jle
setns
dec
add
mull
stos
fisttps
nop
jnp
lahf
xor
loop
cltd
ja
push
sbb
or
sbb
pop
sub
cmp
jl
movsb
adc
shrl
push
xchg
dec
ss
sub
or
cltd
lds
nop
pop
and
inc
lock
ret
js
push
xor
add
fbstp
test
stos
daa
cs
aam
or
push
call
sub
aam
sbb
or
dec
repz
add
pop
sarl
pop
dec
cmp
leave
add
lret
movl
aam
mov
nop
cmp
out
aaa
add
cmc
in
push
push
dec
xor
inc
ja
inc
cmc
adc
mov
out
inc
fsubs
std
sub
out
data16
mov
int
adc
fdivrs
mov
pop
cwtl
sarb
enter
gs
xchg
lret
stc
jp
stc
fistps
mov
or
out
adcl
js
testb
aad
aad
nop
mov
incl
lret
testb
in
loop
gs
cld
xchg
cmpsl
sbb
daa
hlt
or
adc
lds
cmc
ret
sub
sbb
pop
or
pop
pop
loope
mov
adc
or
jae
add
mov
arpl
cmp
pop
test
rol
stos
xchg
or
mov
dec
pop
sub
pop
imul
ja
shlb
clc
fidivrl
mov
imul
ds
hlt
add
mov
mov
gs
loopne
push
imul
subl
and
cmp
inc
sbb
loopne
inc
mov
and
stos
mov
scas
mov
push
or
or
xor
xchg
mov
lcall
lods
sub
jle
leave
divb
aas
push
in
inc
add
push
or
outsb
or
arpl
ds
cmpsl
mov
push
xor
arpl
sub
xchg
addl
insl
jbe
mov
call
sbb
in
xchg
jmp
cmp
jne
scas
lods
xchg
jmp
sub
testl
cltd
mov
sti
inc
bswap
dec
fsubrs
push
push
stos
cmc
cmp
lock
orl
dec
pop
into
xlat
int3
scas
sbb
testl
cmp
pop
jno
jp
sub
adc
adc
push
inc
stc
lods
lret
movsb
jo
add
insb
mov
add
mov
inc
push
fcmovnu
inc
loop
test
movsb
xor
sahf
adc
fcmovu
shrl
cs
cmpsl
jne
jno
scas
xorps
out
adc
fucom
cmp
inc
loope
call
lods
fiadds
inc
das
inc
push
lahf
mov
fstps
jecxz
nop
adc
add
hlt
mov
iret
cld
jne
fadd
inc
aas
test
aas
adc
in
add
mov
sub
push
dec
add
sahf
nop
cmp
sub
sub
fsts
std
mov
inc
ret
sub
push
push
leave
cmp
mov
ret
dec
dec
inc
out
in
imul
add
xor
add
xchg
stos
or
mov
or
add
lods
nopl
mov
hlt
adc
mov
imul
sub
push
xchg
mov
popa
hlt
out
mov
cmp
mov
test
or
jmp
shr
mov
ds
pop
xor
ljmp
icebp
mov
int
mov
add
in
or
mov
mov
ss
mov
aad
cmp
leave
add
and
mov
pop
test
data16
aas
subl
insl
les
cld
rol
push
out
lock
ss
pop
ss
repz
mov
mov
outsb
jae
xor
je
inc
ret
inc
push
cmpl
aas
fwait
lods
jl
jno
xchg
mov
xchg
fcomip
fnsave
idivb
add
dec
sbb
js
jae
jmp
std
inc
sti
in
in
aam
fiaddl
ds
mov
stos
cmp
adc
fmuls
pop
and
nop
inc
adc
jl
icebp
sbb
lods
mov
arpl
adc
movsb
jle
repnz
push
cmpsb
ret
out
shrl
mov
sbb
and
jbe
jo
jle
lret
cmp
xor
xchg
mov
pop
dec
sbbl
push
popa
aaa
cmpsb
fnstsw
or
or
add
inc
in
dec
out
jno
in
sahf
cli
fcoms
xor
sti
jb
adc
sub
inc
ja
push
es
xchg
or
iret
and
mov
and
fbstp
mov
sbb
in
popa
out
mov
push
cmc
iret
cmp
aad
xchg
lods
jmp
or
pop
pop
jae
mov
push
sub
mov
pop
cld
mov
test
lds
inc
insb
add
inc
out
push
imul
test
pushf
ds
out
shl
inc
ja
mov
pop
je
pop
push
cmpsb
cwtl
sbb
push
out
mov
sub
pop
das
xor
mov
cld
dec
dec
and
out
gs
adc
ficoml
lods
idiv
and
adc
aam
sarl
faddp
or
dec
out
fmull
movsl
mov
mov
mov
rolb
push
mov
in
xor
lahf
lret
hlt
jns
mov
popl
ljmp
dec
jg
mov
xlat
ret
sbb
xor
cld
inc
aas
loop
outsb
mov
clc
out
jno
push
xorb
fmul
loop
std
xor
mov
sub
mov
rol
pop
ja
inc
jae
and
arpl
stos
mov
mov
je
dec
and
jae
lret
xchg
jo
or
pusha
sarb
pop
adc
xchg
sub
call
dec
mov
or
aaa
popa
lods
int
push
ret
arpl
scas
ja
repz
into
addb
clc
adc
cmp
dec
repnz
movsl
dec
and
faddl
push
mov
pop
lahf
bound
shlb
push
aaa
outsb
sub
shlb
cmp
or
pop
xlat
cmpsb
movl
ret
dec
leave
outsb
call
push
sbb
scas
fbld
out
shrb
fbstp
dec
cmpsb
daa
pop
mov
jl
pop
mov
fistpll
push
out
cld
ret
pop
lcall
mov
xchg
cmp
add
fidivs
test
lods
sub
shll
pusha
ret
inc
mov
icebp
cmp
mov
push
mov
and
cmpsl
daa
xchg
mov
dec
xor
fiaddl
sbb
adc
popa
mov
lahf
ds
dec
cli
or
test
mov
arpl
add
sub
mov
xchg
out
arpl
sbb
xor
repnz
jne
mov
push
out
cvtpi2ps
movsb
dec
jae
pop
lock
imul
or
mov
xor
test
lods
xor
ret
dec
gs
jb
pop
xchg
enter
icebp
aaa
in
sbb
and
push
xchg
iret
dec
cmp
lret
mulb
sbb
jp
stos
dec
popf
mov
mov
in
xor
fs
and
rorl
xchg
mov
mov
iret
pusha
cld
movsl
xchg
cs
pop
cmp
mov
add
popf
pusha
dec
dec
dec
xchg
push
imul
sub
dec
negl
and
into
sub
mov
dec
loop
push
mov
push
xor
iret
jp
ffree
in
cmp
sti
fwait
lods
movb
inc
mov
xchg
dec
int
ljmp
jo
dec
mov
ret
cmpb
ljmp
add
fiaddl
mov
sub
add
mov
fsubr
and
lret
mov
jo
xor
pop
jo
fwait
ret
push
lds
sub
imul
dec
test
mov
repz
push
add
pop
cwtl
sbbb
mov
ja
adc
cwtl
movsl
or
mov
mov
push
mov
frstor
clc
add
repnz
pop
mov
sbb
insb
jo
adc
lods
lret
out
jno
adc
cmp
std
stos
and
fs
xchg
push
sub
xor
inc
into
cvtdq2ps
fscale
fsubs
pop
cmpsb
ljmp
js
jbe
stos
mov
in
sbb
sbb
inc
dec
inc
insb
imul
push
jle
enter
inc
imul
aas
fsub
stos
dec
add
imul
gs
push
dec
mov
popa
fistl
shr
lds
sar
pop
int
lret
inc
or
cmp
xchg
test
scas
and
mov
fsubrs
mov
pop
adc
mull
fcmovb
mov
push
mov
cmovl
in
cmp
xor
test
mov
xchg
add
lret
pushf
cmc
mov
mov
loopne
jnp
out
sbb
mov
and
sub
imul
cmp
jae
mov
into
repz
cmp
jp
cld
dec
push
idiv
inc
sti
pop
and
mov
sbb
testb
js
fadds
xor
dec
push
sarb
add
jg
ret
mov
and
ja
xchg
pop
xchg
mov
mov
loope
test
inc
jne
push
dec
aad
xor
adc
in
fdivl
loop
mov
adc
push
rolb
cmpb
jl
movsb
mov
sti
or
es
pop
out
ss
rcr
inc
mov
cmp
cmp
sbb
test
push
mov
bound
testl
sbb
or
cmc
lds
or
jl
mov
fildl
push
mov
add
out
dec
inc
cli
or
inc
cwtl
shlb
lods
clc
mov
xor
dec
loope
je
add
loop
fstpt
mov
sti
pop
imul
and
mov
cmp
stc
dec
es
dec
cwtl
scas
jns
ds
mov
test
push
xor
scas
jns
nop
inc
leave
aam
pushl
repz
shll
ss
nop
lock
pop
js
jmp
push
std
movsb
push
adc
dec
cli
add
xor
mov
sub
pop
js
and
mov
sar
insb
jns
cmp
lock
das
dec
movsl
xchg
sarl
shll
or
mov
stos
std
adc
mov
cmp
push
pop
adcl
mov
arpl
push
out
es
xorl
cmpsl
daa
sahf
jae
push
or
das
push
jo
aas
je
pop
loopne
clc
mov
cmp
add
bound
mov
adc
iret
cli
lods
in
fucom
clc
daa
sub
rol
mov
repz
imul
pop
sbb
pushl
cmpsb
icebp
ficoml
bound
rolb
jle
ds
mov
and
mov
push
test
xor
inc
out
insl
rcl
fadd
lcall
push
sub
in
dec
mov
bound
imul
mov
lret
out
mov
int
test
test
sbb
add
cli
pop
mov
or
mov
cmp
mov
out
mov
popf
std
cmpsl
stos
adc
mov
adc
jnp
pop
out
test
bound
lods
xchg
test
fildll
jecxz
orl
xor
js
jo
loopne
lods
push
sbb
mov
enter
xchg
ja
fistpl
pop
out
lret
ret
inc
fwait
adc
xchg
add
sub
dec
ljmp
dec
insl
js
fistpl
mov
js
inc
insb
addr16
sbb
xorl
lods
jmp
jge
jae
aam
loope
add
mov
cmp
push
fsubs
mov
jecxz
mov
mov
mov
add
jnp
stos
fs
enter
test
jbe
add
movsb
les
adc
jne
popa
xor
adc
xchg
pop
mov
xlat
mov
mov
orb
out
insl
mov
imul
mov
mov
and
adc
and
push
ds
int
leave
out
scas
jle
loopne
dec
xor
shlb
in
jno
fistpl
sbbb
int
pop
cmp
popf
cmc
mov
or
fisubrs
fcmovu
cmp
xchg
pop
imul
call
adc
test
pop
add
xchg
stos
sbb
cmpsb
mov
push
in
loope
inc
pop
aaa
add
xchg
js
push
pushf
mov
push
lock
cld
sub
push
out
shl
ret
stc
mov
fnstcw
xchg
arpl
test
mov
mov
dec
jl
mov
leave
iret
mov
mov
fs
mov
imul
add
sbb
push
fs
test
sbb
out
inc
pop
xor
cmp
mov
repnz
sub
aas
or
sti
mov
bound
or
cmc
mov
in
push
pop
mov
mov
cmp
lea
fidivl
pop
push
add
inc
cmp
scas
add
sub
daa
add
cld
loopne
outsb
mov
xchg
xor
in
clc
and
movsl
push
movsb
pop
adc
inc
imul
xchg
mov
mov
mov
fmull
push
inc
inc
jmp
sbb
jae
pusha
mov
xorb
mov
icebp
sbb
addl
stos
imul
cli
call
hlt
sarl
mov
or
sbb
xor
mov
lea
sti
imul
sub
scas
ds
push
push
xor
jl
movsb
sti
sub
cmpsl
push
xchg
aam
test
addr16
cmp
cmp
and
dec
lods
sahf
mov
loop
mov
xchg
lret
jno
lods
movsl
dec
mov
into
or
jmp
out
cmp
loopne
push
mov
pop
jae
push
int3
movsl
and
lcall
mov
fwait
stc
in
mov
and
pop
ret
ret
sbb
test
ds
out
mov
ljmp
jae
cwtl
das
xchg
ret
dec
sarl
mov
mov
lcall
shll
xor
test
or
push
lock
clc
inc
push
rorb
mov
pushf
shl
sub
push
mov
xchg
xchg
cmp
int
xchg
add
test
outsb
addr16
hlt
inc
int
shrb
jg
inc
imul
jg
test
xor
cmpb
push
cmp
cmpsl
ja
inc
ret
inc
lcall
push
sub
shrb
cmp
call
mov
sbb
push
and
xchg
dec
das
out
cmp
cmp
stc
dec
addl
dec
sbb
pop
mov
cmc
mov
mov
or
sbb
mov
sub
mov
xor
sbb
data16
jno
cmc
add
jnp
xchg
movsl
out
jp
out
lds
outsb
mov
push
mov
leave
shll
cltd
inc
dec
stos
andl
push
in
and
cwtl
add
push
cs
ss
popa
pusha
loope
pop
push
std
xchg
add
cmp
adc
push
or
lods
inc
lods
inc
xor
in
fdivl
lahf
enter
mov
lock
sbb
movsb
cwtl
push
mov
test
ret
imul
mov
decb
cmpsb
pop
out
lods
inc
shl
in
sbb
inc
test
pop
rcll
sub
out
ss
mov
std
push
and
js
push
mov
loope
frstpm(287
mov
lods
pop
sti
aas
pop
out
in
jge
es
scas
inc
sbb
std
adc
cmc
les
aad
jg
cmp
inc
push
imul
sti
xchg
inc
dec
xchg
loop
loopw
push
sarl
xchg
aam
or
pushf
cltd
push
mov
or
dec
iret
inc
push
fnstsw
bound
daa
mov
cli
lods
fildl
or
xor
dec
in
add
dec
mov
aam
cs
jl
aam
std
jo
mov
inc
dec
sub
sbb
divl
push
popf
and
je
cld
mov
xlat
fnstcw
lahf
xchg
jge
cmpsb
xor
fnstcw
out
xor
pop
push
mov
idivl
push
jmp
and
outsl
push
ret
fldt
dec
mov
xchg
xchg
add
in
xchg
jbe
xor
lods
in
jae
xor
leave
pop
fists
add
cltd
imul
push
mov
mul
add
ljmp
pop
and
dec
add
imul
and
pop
jge
sub
xor
inc
insb
or
insl
insl
sbb
adc
pushf
pop
adc
xor
aaa
inc
rorl
xchg
test
lret
in
mul
mov
sbb
imulb
jbe
fidivl
addl
fisubrs
xchg
or
stos
outsb
cs
adc
int3
bnd
mov
jl
lea
cs
sub
sub
ja
xchg
test
mov
or
push
dec
adc
ret
sbb
mov
std
pop
mov
sbb
push
jp
mov
or
xchg
mov
out
arpl
fcomp
scas
lds
dec
xorb
push
mov
fbstp
imul
xlat
in
scas
mov
mov
dec
mov
imul
xor
scas
adc
mov
xor
or
mov
cli
hlt
push
ret
jmp
movsl
xor
mov
pop
shrb
lret
sbb
jb
pusha
dec
test
enter
inc
mov
addr16
mov
xchg
das
loope
or
push
xchg
add
lea
mov
and
jno
and
lea
mov
insl
insl
push
dec
xchg
xchg
mov
mov
fcmovb
jmp
add
pop
testl
ds
xchg
loop
inc
fmuls
bnd
mov
shll
mov
xchg
outsl
mov
aam
pop
sbb
aas
xchg
push
pop
xor
aam
mov
call
inc
cmc
jle
cwtl
fsubrl
inc
cmc
jle
lcall
fcmovbe
push
or
and
ja
int
fwait
push
ret
aas
ret
shlb
adc
repnz
movsb
hlt
js
xor
cmp
cmpsb
pop
cli
xchg
push
lahf
dec
je
mov
push
dec
xchg
push
mov
outsb
jp
shl
mov
push
in
pop
xor
inc
out
addr16
xor
sbb
mov
jns
fxch
aad
or
test
and
repnz
jle
push
xchg
dec
popa
shr
push
loop
fistl
lods
out
popa
pusha
shll
lods
inc
fdivl
dec
mov
fistl
mov
lret
in
adc
or
enter
and
gs
outsb
add
inc
lret
and
adc
ja
stos
dec
mov
mov
shlb
mov
add
sbb
mov
mov
xor
xor
push
mov
adc
inc
out
cmpl
les
subb
and
call
outsb
mov
or
mov
and
mov
lods
fstpt
mov
xchg
push
mov
arpl
xor
lods
and
movb
xor
jo
xor
lods
xor
xchg
and
pop
or
out
scas
push
xor
xchg
ljmp
sbb
in
clc
mov
test
push
sarl
loope
loope
or
sub
sbb
mov
jbe
orl
jecxz
loopne
mov
push
jmp
in
pop
ficompl
in
cmp
push
xor
xlat
clc
addr16
int3
out
lock
loop
pop
aaa
loop
fstpt
out
jae
and
inc
xlat
xor
lods
fistpl
loop
fistl
outsl
cmpl
rcr
dec
loop
outsl
cmp
inc
pop
sahf
and
ret
roll
lods
mov
loope
ret
mov
pushl
imull
mov
dec
data16
sbb
lods
jecxz
push
add
ret
adc
loop
dec
scas
out
inc
xlat
mov
pop
popa
add
lret
jnp
dec
movsb
xor
rcll
xor
pop
pop
rolb
and
xchg
mov
loopne
add
mov
add
xchg
pop
repz
mov
pop
mov
sbb
mov
out
push
pop
ja
jg
dec
mov
out
hlt
jb
imul
dec
arpl
sub
popa
sub
xlat
popa
push
push
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
pop
add
das
sub
mov
imul
mov
test
push
jne
pop
sbb
pop
jne
jp
mov
push
mov
mov
fcoms
xor
xchg
cmpsb
movsb
cmp
jae
dec
mov
mov
roll
lahf
mov
dec
or
jno
and
data16
mov
nop
mov
sub
xchg
out
mov
add
out
pushf
movsb
xchg
loop
dec
cmpsb
in
pop
ret
ds
sub
mov
mov
movb
fiaddl
push
lret
mov
cmpsl
pop
lds
jecxz
loopne
and
mov
loope
add
cmp
in
roll
pop
or
mov
leave
push
test
push
stos
sub
or
pop
dec
xor
cmp
test
movsb
outsl
pop
fdivrl
or
xchg
jl
ljmp
and
std
mov
fstpt
mov
xorl
or
insb
jg
jl
mov
adc
sub
jecxz
mov
js
sbb
mov
dec
negb
mov
or
jne
loopne
cmp
dec
in
add
sub
std
aaa
enter
xchg
insl
xor
jb
push
sbb
ret
shl
shl
cld
jge
sti
in
mov
cmp
xchg
loopne
addr16
orl
cmc
jle
jno
gs
dec
shrd
lret
dec
sub
mov
or
test
and
dec
pop
or
gs
nop
or
test
and
add
cmpb
mov
daa
and
push
xchg
xchg
jnp
adcb
mov
jecxz
sub
shlb
mov
arpl
in
jo
rorl
ss
scas
or
cli
ja
adcb
pushf
cmpsl
hlt
imul
xchg
test
aas
mov
jns
add
add
dec
rcl
cmp
out
pop
ds
pop
fwait
in
sbb
push
push
dec
repz
aaa
mov
jno
jns
mov
icebp
testb
fnsave
jo
sbb
add
adc
icebp
js
scas
fidivl
aas
and
xor
cmc
mov
dec
dec
repnz
xchg
inc
psubsw
inc
jns
and
pop
aaa
inc
adc
frstor
xchg
mov
inc
dec
scas
jle
pop
test
inc
enter
inc
mov
outsl
clc
dec
sub
sbb
jge
faddl
dec
aad
pop
jle
mov
jne,pt
jmp
imul
pop
pop
xor
dec
mov
xchg
mul
stc
add
mov
add
push
jmp
xchg
jecxz
xor
xchg
pusha
dec
ja
adc
sbb
lea
mov
sub
jp
notl
fcoml
lahf
sbb
enter
or
mov
fcompl
jnp
das
pop
lret
cmc
xchg
in
leave
cli
out
jp
inc
stc
nop
and
in
pop
or
cmpsb
mov
aam
push
mov
mov
shl
out
sub
out
mov
xchg
xor
sbb
cmpsl
push
jge
xchg
test
pop
xor
push
mov
cmp
movsb
mov
nop
mov
xor
pop
int
sarb
popf
int
mov
cmp
mov
xlat
imul
test
testb
cwtl
dec
push
lods
ljmp
xchg
jne
pop
jecxz
sbb
cld
inc
es
xor
mov
mov
popa
adc
mov
lahf
xchg
sti
out
cwtl
aaa
je
inc
jne
pop
sbb
test
ret
imul
or
xor
mov
mov
cmpsl
or
xorb
test
test
scas
movsb
sub
pusha
rclb
mov
mov
sti
js
cld
stos
loope
jl
add
stos
insl
or
dec
testl
cmpsb
stos
jns
jb
add
std
out
or
movsb
popa
lds
adc
shlb
xlat
int
pop
pushf
in
addr16
lahf
clc
sti
mov
mov
fisttpll
sti
aaa
hlt
iret
ljmp
cmp
loop
cld
movb
sbbb
int
ja
mov
sbb
cmpsb
sbb
insl
or
lcall
and
or
dec
mov
sub
popa
cld
scas
fldcw
lea
sarb
insl
scas
fnstsw
push
aad
mov
in
push
rcr
pop
test
sub
xchg
xchg
les
sbb
fldcw
popa
lea
dec
jge
mov
xor
jge
movsb
outsl
dec
sbb
push
push
push
andl
lock
sahf
xchg
cltd
mov
movhps
lcall
sbb
jnp
ljmp
fwait
in
xchg
mov
in
out
mov
push
je
ret
or
and
andb
xchg
out
push
mov
adc
jmp
dec
adc
divl
outsl
adc
lret
push
mov
dec
add
or
push
mov
mov
mov
cmp
cmp
js
add
adc
push
xor
mov
add
push
push
sbb
push
mov
ljmp
test
inc
adc
outsl
test
fisubrs
xchg
sub
adc
inc
je
push
mov
and
shlb
cmpsl
jmp
orl
test
je
sbb
out
pop
push
pop
sub
out
mov
mov
inc
scas
shr
sbb
les
cld
into
sti
xchg
in
jmp
inc
in
mov
pop
ret
fstl
mov
dec
xchg
in
rorb
mov
xchg
pop
pusha
add
jecxz
adc
in
adc
in
xchg
add
adc
mov
pop
add
mov
mov
sub
mov
sbb
dec
add
push
repnz
lea
fisubs
pushf
xor
xchg
jecxz
sub
xchg
mov
lods
jmp
data16
inc
inc
test
fsubrl
cmp
sub
sub
or
sbb
cmc
repnz
out
ret
push
mov
dec
lcall
loopne
stc
fs
dec
out
sbb
movsl
jge
pop
lds
fiadds
add
xor
rcll
sub
fsub
jp
cmpsl
int3
cltd
cmpsb
outsb
std
addl
inc
push
and
push
xchg
loope
or
jp
stos
jmp
out
insb
jno
daa
cmp
fidivl
inc
add
jle
xor
hlt
push
out
call
imul
and
sub
or
lods
push
jb
or
or
icebp
sub
adc
in
aaa
inc
lcall
dec
icebp
mov
jbe
sub
aad
cmp
loop
outsb
adcb
ds
mov
stos
lea
mov
sub
aad
ror
std
mov
jnp
jge
insl
push
mov
cmpsb
xor
repnz
sub
sbbb
mov
rolb
or
jge
int3
in
je
and
mov
pop
jns
je
mov
orb
mov
mov
jne
and
mov
xor
out
scas
jne
push
sub
jo
jge
out
lea
inc
add
sahf
fdivrs
add
flds
add
fcompl
stos
adc
mov
ljmp
sbb
mov
push
dec
push
aas
movsb
pop
xor
xchg
movsb
iret
int3
insb
clc
out
push
pushf
sbb
movsl
daa
sub
fbstp
sub
fs
add
mov
push
inc
dec
dec
in
mov
mov
jb
pop
into
and
movsb
fnstsw
mov
or
popl
dec
lock
cmp
push
inc
mov
hlt
push
add
daa
aas
ret
subl
dec
lds
add
inc
notb
addr16
push
arpl
test
cld
sbb
cld
repz
es
push
pop
movsb
ss
out
mov
xchg
mov
mov
inc
xchg
or
xchg
popf
dec
test
xchg
in
push
lods
ljmp
dec
fildl
outsb
push
mov
das
je
push
ds
bound
popf
insb
fsubrp
outsb
aam
icebp
dec
inc
mov
dec
dec
fistps
inc
cmp
aas
dec
pop
mov
mov
scas
pop
mov
inc
aam
mov
push
or
xchg
jg
sbb
shlb
scas
or
hlt
pop
gs
pop
and
jge
scas
sub
mov
les
mov
xor
outsl
nop
push
mov
cmpsb
nop
incb
cmp
sbb
xchg
incl
cmp
cmp
cltd
fucomi
out
mov
push
pusha
or
adc
or
sub
xchg
in
xor
insb
pop
je
and
fs
inc
shll
inc
push
xor
cld
jle
xor
mov
loopne
sub
add
das
push
scas
adc
imul
scas
dec
js
and
mov
sahf
ret
aaa
jnp
xchg
std
insl
fnstcw
out
pop
jle
mov
loope
and
xor
mov
xchg
xor
leave
lea
mov
call
add
dec
mulb
sub
xor
mov
test
sub
inc
daa
push
mov
xor
cmp
notb
ror
outsb
xor
sbb
leave
sub
dec
fnstsw
mov
js
lret
adc
je
lcall
xchg
cltd
rolb
cmp
out
out
lret
mov
sbb
jmp
inc
rcrl
rcl
inc
in
test
inc
jmp
inc
cmc
dec
jno
push
dec
cmp
clc
jge
fcoms
and
pop
and
xchg
cli
mov
mov
push
cwtl
movsb
push
std
lahf
es
mov
jae
pop
fadd
push
aam
pop
mov
mov
xchg
movsl
jecxz
loopne
mov
movq
or
stos
lock
xchg
cmp
fwait
inc
push
xchg
pop
lea
inc
cmpsb
sbb
in
push
pop
js
mov
test
push
mov
mov
ja
xlat
mov
inc
push
lds
push
lret
cmp
mov
movsb
loope
sub
inc
jno
mov
addr16
imul
mov
ja
jne
out
aaa
mov
fisubrl
jnp
bound
daa
leave
subb
xor
in
lock
pop
sbb
jae
jp
es
mov
fdivrl
jno
dec
cmp
push
outsb
add
cmp
sub
jge
shlb
add
push
cmc
jno
cmp
dec
stos
adc
ret
adcl
push
in
xchg
inc
ret
and
jbe
mov
mov
dec
rol
cmp
inc
pushf
and
pop
cld
adc
popl
mov
pop
mov
negl
xor
movsl
cld
or
movsl
mov
pop
scas
cmp
lcall
enter
popa
sahf
inc
mov
int
jne
xor
mov
push
pop
and
fcomp
mov
or
loope
shlb
dec
cli
adc
mov
fiaddl
mov
or
rorb
leave
sub
mov
fistl
outsl
jle
mov
addl
and
inc
out
rcrb
inc
ds
mov
test
lods
cmp
dec
adc
out
cmpsb
push
jmp
call
lds
out
or
test
test
push
movsl
mov
xchg
inc
imull
pop
xchg
push
rcrl
insb
sbb
xchg
xor
in
icebp
add
mov
push
icebp
fcompl
dec
xor
inc
mov
iret
jo
dec
push
jmp
aad
jp
inc
in
jno
ret
orb
je
les
nop
mov
pushf
pushf
int3
jg
enter
fs
xorb
and
pop
and
pop
mov
js
iret
test
mov
and
mov
dec
jb
mov
loope
orb
sub
pop
movsb
adc
dec
adc
fdiv
xchg
jb
mov
aaa
mov
scas
and
repz
push
daa
call
add
ljmp
test
fisttps
pop
js
call
lock
movsl
pop
jne
jns
hlt
xor
hlt
sbb
xor
ss
subl
imul
aam
iret
push
decl
dec
stos
adc
das
mov
mov
sti
stos
stos
es
mov
sti
aas
dec
sbb
sbb
mov
mov
pushf
es
adc
cs
divb
ds
in
xchg
fistpll
out
cmp
xchg
scas
add
cmp
out
movsb
or
je
push
add
inc
inc
loope
xchg
mov
lods
jbe
loope
pop
out
xchg
jbe
fisubs
call
mov
xor
movsb
nop
loopne
dec
imul
pop
adc
sub
or
movsl
lret
lods
loopne
mov
rdpmc
push
sbb
mov
call
jae
cmpl
stc
jge
enter
jmp
pop
sub
scas
mov
fld
and
ss
xor
xchg
push
jnp
into
dec
jno
mov
mov
in
adcb
and
add
or
push
call
das
push
scas
mov
sbb
ret
loopne
pop
hlt
fwait
inc
pop
sub
jae
test
and
pushf
adc
inc
xchg
leave
pop
pop
hlt
add
out
lcall
je
push
lock
and
movsb
sbb
sub
icebp
sbb
out
add
sbb
pop
adc
nop
movsl
roll
adc
lock
cmp
cltd
fadds
cmp
popa
xor
fcoml
ja
xchg
das
pop
outsl
sbb
inc
sub
mov
insb
data16
pop
popa
hlt
dec
sarb
pop
les
out
lahf
lret
jns
fimuls
scas
pop
insb
pushf
nop
add
call
cmp
jp
addl
xor
jae
pop
and
das
adc
outsl
fcmovb
mov
fldl
lds
and
dec
ljmp
out
pop
xor
adc
adc
xor
fwait
sub
or
pop
cmp
mov
loop
mov
cmp
pop
andb
leave
scas
cmp
pop
pop
or
ljmp
jg
push
jg
mov
out
mov
pusha
jmp
pop
pop
idivl
mov
mov
outsb
adc
shl
addr16
xchg
loopne
xchg
std
pusha
push
cmpsb
and
jg
jo
movsl
cmpsl
fiaddl
push
push
xchg
dec
dec
inc
aaa
stc
jmp
lods
daa
xchg
adcb
push
lret
cmp
lret
mov
sbb
dec
mov
mov
dec
cld
xchg
pop
faddp
bound
cs
adc
xor
pushf
cmc
outsb
sbb
sub
adc
cld
aaa
call
movsl
xchg
fwait
or
arpl
out
mov
cld
lret
sbb
push
push
dec
jp
pop
pop
addr16
stos
mov
mov
orl
ret
shlb
adc
pushf
jae
cmp
mov
mov
push
adc
shlb
scas
lret
cmp
mov
hlt
rcrb
cmp
out
jb
adc
das
cmp
and
xor
inc
popf
movsl
add
nop
in
add
and
pop
sbb
sub
aad
cmp
mov
mov
es
mov
daa
movsb
pushf
xchg
out
insb
out
push
mov
imul
repz
sarb
mov
cmp
sbb
mov
pushf
jnp
adc
mov
pop
xor
push
mov
imul
sti
and
mov
or
loop
stos
les
ljmp
push
jo
mov
adc
cmpsl
repnz
pop
cli
mov
in
fsub
jne
hlt
fnstenv
stc
pushf
sarl
pop
push
test
mov
add
mov
pop
test
inc
jo
jl
jmp
lods
cwtl
cmp
cld
pop
out
push
push
clc
lcall
int
jns
es
push
loopne
std
cld
mov
call
inc
bound
imul
test
sub
pop
jo
fsubrl
fnstenv
lea
popf
aaa
mov
ret
scas
les
clc
fsubrl
inc
adc
fisubrl
mov
add
out
fidivl
push
das
adc
nop
stc
pminsw
repnz
stos
stos
les
jle,pn
and
scas
dec
or
popa
out
iret
lret
rcrl
sbb
mov
push
insl
add
mov
and
adc
jmp
imul
notb
adc
cwtl
outsl
arpl
ja,pt
inc
dec
insb
jns
sbb
loope
test
sbb
cmc
mov
es
pop
cmp
mov
pop
mov
repz
pcmpeqb
mov
roll
pop
jecxz
sub
push
decl
cli
or
ds
pop
inc
test
sub
int
inc
stos
ljmp
je
loope
or
jp
or
mov
xor
pop
mov
sbb
mov
mov
repnz
fldl
nop
leave
sub
jg
sub
imul
jmp
dec
push
adc
rcr
pop
mov
fidivrs
outsl
sbb
call
out
pop
mov
mov
shlb
and
cmpsl
pop
rcrb
add
mov
lock
mov
dec
gs
jmp
mov
jo
and
push
mov
sbb
popf
int3
out
mov
jl
loope
int
lods
test
push
pop
and
roll
aas
xchg
daa
jge
and
push
ret
pop
xchg
sarl
in
roll
xor
or
and
mov
sbb
cmp
inc
rorl
nop
pop
dec
dec
hlt
mov
xlat
jge
ffree
xchg
inc
sub
lods
sbb
repz
jbe
cli
cmp
adcb
scas
jg
add
xor
xor
add
push
movb
lcall
fcmovne
inc
dec
jmp
and
sbb
adc
pop
add
cwtl
ror
pop
lds
or
fadds
sub
into
shll
add
cmc
dec
orps
das
xchg
inc
jecxz
and
mov
mov
jecxz
add
inc
clc
daa
mov
xor
outsl
stos
je
sbb
pop
out
test
pop
pop
adc
stc
add
sti
mov
xor
pop
in
fs
addb
adc
adc
or
jmp
and
mov
mov
xchg
jecxz
shll
xchg
adc
out
es
push
mov
insl
ret
sbb
out
scas
ficomps
push
mov
test
cmp
insb
xor
das
add
ret
scas
cmp
xor
and
push
icebp
push
jnp
dec
imul
mov
cmp
out
movsl
sbb
lret
daa
cld
fisubs
mov
mov
and
rcll
mov
mov
in
in
repnz
mov
mov
jbe
push
pop
stos
lret
sub
daa
imul
sub
and
push
push
mov
xor
inc
mov
insb
xor
mov
fnstenv
pop
sub
sbb
jae
xor
daa
sub
shrl
xor
jmp
icebp
test
mov
mov
jle,pt
jl
and
dec
xchg
adc
xor
pop
jae
fistps
jnp
das
leavew
jg
cld
fisubrl
inc
adc
fbstp
cmp
cmpl
pop
mov
out
jmp
in
jb
sub
push
mov
sbb
int
pop
mov
movsbl
dec
sti
inc
ret
jns
sbb
and
xchg
dec
xlat
xchg
mov
fwait
inc
or
imul
les
dec
mov
jl
call
cs
pop
std
jmp
jecxz
or
mov
xchg
fcmovnb
js
xor
jl
test
cwtl
jecxz
mov
xchg
gs
pop
cld
jecxz
push
xchg
daa
inc
jp
dec
pop
push
outsb
mov
iret
xor
sbb
lcall
scas
mov
inc
fiadds
int3
scas
testl
es
std
outsb
mov
xchg
jmp
aaa
inc
pop
mov
dec
dec
push
insl
test
outsl
mov
shlb
pop
inc
js
notb
jge
int
sub
inc
stc
add
inc
fistps
incb
inc
cmp
fbstp
jmp
stc
inc
loopne
sti
test
fidivrl
xchg
aam
test
mov
dec
fs
inc
stos
les
mov
dec
dec
jl
aam
scas
inc
nop
filds
dec
xor
fimull
leave
aam
cmp
pop
mov
iret
nop
xchg
sbb
inc
add
outsl
sbb
ret
mov
jae
pop
sub
lea
pop
and
lcall
sub
inc
and
push
xor
aas
mov
and
jmp
add
sub
jmp
sti
add
scas
pop
add
mov
push
xchg
out
push
clc
xchg
push
push
mov
or
out
xor
xlat
cmc
xchg
jo
daa
jmp
xor
xor
sub
pop
nop
sub
rclb
dec
or
cwtl
jo
dec
lock
es
xchg
dec
or
push
xor
and
lcall
cld
test
dec
insl
mov
aaa
ja
add
sbb
cwtl
fsubrs
jmp
adc
cld
adc
clc
xchg
mov
test
out
outsb
jg
out
dec
mov
daa
lret
xchg
cmp
mov
jb
dec
loop
rcr
mov
stc
cmc
test
xor
mov
push
loop
and
mov
push
popf
and
lahf
lds
mov
inc
pop
jge
aam
popf
mov
addb
sbb
dec
sbb
inc
pop
xchg
idivb
lock
dec
jle
mov
and
loope
fwait
lret
jno
adc
sbb
das
pop
mov
jecxz
add
scas
or
insb
or
mov
and
in
in
shrb
sti
stos
mov
ret
mov
jne
push
add
xor
dec
mov
mov
or
lods
rol
jbe
jns
xchg
out
into
lods
mov
or
adc
mov
pop
adc
adc
xchg
jle
out
ja
dec
mov
test
mov
lds
fiaddl
sub
test
addl
and
shr
jle
push
lea
loopne
dec
mov
push
cld
inc
dec
aam
push
xor
je
push
imul
adc
mov
inc
in
cli
popa
xchg
xchg
jl
push
bound
mov
mov
cli
or
sub
rcrb
jns
dec
cld
jno
sub
mov
push
lcall
sti
mov
sbb
or
subl
jnp
add
notl
xor
adc
pop
stos
dec
and
lods
or
cmp
inc
jae
and
popa
xchg
cmc
fbld
das
cmp
out
pop
and
ret
inc
mov
insl
mov
and
or
daa
aad
xorb
sahf
mov
inc
daa
xlat
fdiv
test
mov
daa
xchg
lea
nop
pop
mov
repnz
mov
ljmp
jge
sbb
insl
xchg
pop
and
mov
push
cmpsb
sbb
and
mov
pop
push
cli
addr16
jge
dec
or
cmc
push
mov
lret
cmpsl
xchg
inc
dec
mov
js
jae
adc
stos
lret
out
rolb
int3
push
std
add
sbb
shlb
jnp
and
push
mov
pop
sbb
test
or
mov
cltd
sti
dec
jbe
mov
inc
or
ja
cltd
push
dec
cmp
cs
sub
popa
jge
or
shlb
dec
les
jl
and
push
mov
lret
dec
ret
mov
popl
pop
mov
loopne
repnz
mov
pop
imul
ds
jmp
mov
pop
popa
arpl
aas
or
loope
push
xchg
adc
and
cmpsl
xchg
ds
cmp
push
loopne
pushf
cli
adc
repz
cmp
xor
adc
pop
xchg
push
mov
or
mov
fidivl
lret
jne
loop
in
repnz
cmp
add
pop
push
jg
pop
les
cmp
sahf
push
loop
pusha
or
xor
xchg
xorb
mov
or
xchg
mov
jl
roll
and
ret
xchg
movsb
lods
jmp
aaa
mov
mov
insb
xor
push
pop
adc
dec
jl
push
out
xchg
nop
adc
out
aaa
test
adc
out
adc
add
mov
sti
push
xchg
cwtl
cs
jae
mov
inc
popa
mov
cmpsl
jns
jno
fld
jbe
cltd
mov
ljmp
inc
xchg
fucomp
push
push
dec
ljmp
aas
dec
test
sub
pop
dec
inc
inc
fimuls
loope
mov
jecxz
das
inc
insl
mov
add
add
add
or
adc
mov
hlt
cld
jns
pop
call
pusha
popa
sbb
enter
les
inc
lods
lock
out
cmp
mov
in
pop
into
sbb
add
dec
stc
pop
fistl
pop
sub
mov
ja
or
push
xchg
xchg
add
lea
daa
mov
les
sub
aam
mov
xor
pop
inc
stos
sub
add
into
xor
and
sub
dec
dec
je
cmp
arpl
test
sub
adc
stos
cmp
sbb
and
mov
or
jb
push
aam
or
xor
jl
adc
cmpsl
cmp
inc
pop
mull
push
xor
or
call
into
pop
jb
inc
das
in
in
mov
sub
sbb
negl
ficompl
addl
cmp
fs
lds
leave
sbb
into
jns
mov
jmp
dec
mov
xor
mov
cmp
pop
or
int
dec
test
push
loope
adc
bound
pop
cs
pop
jg
lods
mov
jnp
fs
lcall
stc
mov
loop
andb
add
test
pop
and
aad
rolb
lods
jg
jmp
loopne
mov
aad
or
push
pop
ja
jnp
add
shll
outsb
adcl
xor
test
sti
lock
clc
inc
add
lcall
in
xchg
imul
pusha
and
imul
jmp
shll
mov
ja
cmp
inc
inc
sti
lcall
mov
iret
popa
adc
aaa
bound
push
in
push
fbld
mov
int
nop
dec
leave
stc
and
mov
in
mov
push
in
fnstenv
jge
fsubrp
jne
repnz
nop
nopl
adc
iret
and
rcll
cmpsb
ffreep
cmp
mov
mov
int3
aas
insb
das
cmpl
mov
mov
test
pushf
pop
mov
pop
jno
cmp
hlt
imul
sbb
sbb
ficomps
shlb
jns
aam
mov
inc
psllq
das
out
push
mov
sbbl
ja
test
or
mov
sbb
out
mov
fcomps
inc
jle
mov
nop
mov
xor
inc
std
adc
jnp
mov
test
inc
loop
and
inc
xchg
jns
in
mov
add
or
xor
cmpl
mov
cli
popa
fnstsw
xlat
icebp
in
outsl
shll
das
insb
iret
inc
mov
sub
inc
popf
jbe
ljmp
in
adcl
dec
gs
fstps
xor
aam
cmp
std
xchg
and
jg
jbe
mov
or
in
mov
aad
lds
push
call
fnsave
dec
test
lods
sbb
scas
mov
and
jae
cmc
and
repz
xchg
lods
fmull
dec
aas
adc
inc
test
sbb
sbb
insl
xorl
rcrb
aaa
mov
adcb
hlt
mov
les
ja
outsb
inc
push
and
or
push
cmpsb
push
or
stos
daa
xchg
int
cmpsl
insl
imul
clc
add
cli
cmp
daa
push
push
in
or
ret
push
insb
cmc
jmp
test
xchg
cmc
loopne
inc
iret
loopne
adc
push
in
idiv
inc
leave
repnz
into
xchg
push
mov
xchg
movsl
and
loopne
nop
add
xchg
and
ljmp
shll
nop
mul
pop
lret
hlt
dec
or
jnp
inc
sahf
sbbb
lods
adc
add
lock
mov
rcll
cmc
push
test
cli
call
mov
xchg
popa
lea
sbbb
push
xlat
sarl
stc
nop
jae
pop
pop
adc
movsl
insb
jae
pop
cmp
mov
cs
inc
jae
mov
sarb
xchg
outsl
bnd
fbld
aad
push
outsl
xor
adcb
imul
push
ja
xor
iret
leave
jg
int
mov
leave
dec
fwait
inc
std
lock
imul
push
cmpsl
mov
jo
int3
dec
mov
or
je
adc
jge
push
xor
in
mov
arpl
pop
in
test
add
jecxz
push
pop
pop
sub
shlb
jmp
nop
dec
add
mulb
repnz
inc
rcr
mov
leave
xor
mov
sbb
mov
shlb
jl
or
popf
adc
cmp
mov
push
inc
jg
xor
jp
sub
xorb
stc
lahf
cmpl
fists
jmp
push
push
xchg
ret
jne
fisubrl
add
mov
push
ljmp
mov
inc
addr16
out
push
inc
not
push
das
test
lea
pop
add
in
xlat
pusha
data16
sub
into
daa
aas
dec
jg
rorl
sbb
int3
sbb
sub
xor
jle
std
lock
push
add
fisubrs
test
sub
adcl
jno
popf
sti
mov
adc
push
lea
xchg
lret
inc
jge
fnsave
fbstp
jns
pop
jmp
mov
cltd
leave
mov
push
xor
enter
jmp
mov
in
mov
sbb
mov
bnd
mov
or
jae
mov
int3
xor
lcall
sbb
aas
inc
pop
scas
ret
dec
jnp
rcrb
xor
js
or
imul
or
mov
push
add
add
lods
daa
les
dec
addr16
sbb
push
mov
sbb
sbb
mov
fisubl
outsb
data16
std
push
stc
mov
aam
push
int3
ret
mov
aad
and
scas
stc
subps
lods
pop
cmpb
sbb
inc
adc
sub
in
xchg
loop
out
push
cld
mov
adc
leave
cmp
rcrb
unpcklps
dec
fldenv
enter
lcall
out
xor
or
push
daa
pop
loop
sbb
add
jae
pop
rcrl
pop
mov
xor
adc
push
dec
push
test
es
pop
sub
mov
and
mov
in
sbbb
mov
push
das
sbb
push
mov
cmpsl
scas
call
xor
rclb
push
or
adc
pusha
lcall
push
das
xchg
cld
inc
hlt
sub
push
sbb
test
aam
xor
ds
mov
push
popf
and
notb
and
sub
scas
test
xchg
shl
shlb
and
dec
xor
out
or
mov
lahf
or
or
dec
mov
inc
jne
mov
jle
mov
jno
pop
mov
js
sbb
push
loopne
int3
jp
neg
push
mov
and
int3
mov
mov
jo
in
out
pushf
sarl
add
mov
add
clc
inc
mov
nop
sub
lods
scas
pop
pop
xchg
mov
cmc
add
bound
and
shlb
pop
scas
ret
sub
push
adc
mov
jp
fbstp
pop
aad
mov
popa
push
mov
rcr
cwtl
sahf
stc
mov
dec
push
ja
xchg
add
fsts
lahf
movsb
ljmp
push
fdivrl
jp
test
sti
jle
inc
xchg
orb
pop
stos
test
in
aad
jmp
push
aad
cmpsl
pusha
mov
iret
pop
out
xorb
pop
aad
mov
cmp
cmpsb
lcall
pop
notl
or
mov
pop
pushf
imul
fnstsw
mov
cmp
cmpsl
sbb
scas
in
mov
xchg
mov
xor
cwtl
test
dec
mov
pop
dec
adc
movsb
repnz
mov
push
cwtl
clc
stos
cmp
rcr
imul
lock
lea
stos
addb
and
sarb
cltd
xchg
clc
adc
incb
jno
fsub
jnp
ljmp
xchg
jne
out
mov
push
pop
ret
cli
in
addr16
add
cmp
sarl
pop
push
mov
push
inc
shll
out
in
mov
mov
jbe
mov
lods
jnp
mov
xchg
mov
jbe
mov
push
mov
pop
ret
dec
mov
cmp
or
scas
negb
data16
in
pop
adc
aaa
aad
ss
pop
test
mov
add
in
dec
or
or
jne
fdiv
cmpsl
push
loop
xchg
ljmp
push
mov
and
imul
push
pop
dec
mov
push
in
loop
stos
dec
sbb
fwait
aas
lock
mov
cwtl
sti
dec
stos
lods
sub
sar
lods
jnp
add
jnp
subl
ret
sub
aad
add
jo
lcall
sub
es
jb
cmp
mov
xor
aad
andl
test
inc
mov
into
add
inc
rcrl
push
pop
mov
sub
bound
fmull
pop
adc
aad
mov
dec
int
pop
fwait
loope
arpl
sub
xchg
shrb
inc
sbb
xchg
aad
jmp
mov
sbbb
xlat
inc
stos
cmp
testb
or
in
insl
push
das
cmpsb
rcl
adcb
add
cmp
cs
and
sub
stos
xchg
and
mov
dec
stos
xchg
fwait
xor
add
add
and
mov
std
push
cmp
and
mov
push
repz
adc
fsubr
jmp
and
cmc
dec
je
xchg
scas
aad
jge
push
popf
sbb
mov
add
dec
repnz
fldl
xchg
jne
dec
popa
ret
and
add
and
add
imul
sub
jle
push
neg
or
ja
xor
jecxz
cmc
fdiv
mov
jle
inc
mov
pushl
dec
movsb
xlat
add
in
hlt
inc
mov
inc
mov
icebp
ljmp
xchg
divb
xor
add
xor
pop
repz
mov
pop
out
sahf
sarb
pop
repz
cltd
ja
pushf
dec
pop
cltd
jb
ja
ja
roll
adc
sbb
xchg
ja
hlt
inc
mov
lret
stos
sub
data16
in
repz
repz
addb
inc
or
gs
cmc
add
cltd
loop
addb
fsubl
pop
repz
cmp
fisttpl
xchg
pop
inc
jb
add
cmc
fdiv
mov
mov
decb
movsb
xlat
add
out
hlt
inc
mov
inc
mov
lret
jb
cli
jno
icebp
jmp
jo
inc
clc
je
aad
mov
sbb
shlb
push
push
pop
cmpl
daa
sub
notb
aaa
push
sbb
add
scas
mov
es
add
mov
daa
clc
or
cmp
xchg
sub
in
sahf
push
sub
sub
or
mov
das
pop
fwait
test
mov
mov
push
and
mov
push
and
mov
push
and
mov
push
and
mov
push
and
mov
push
and
sbb
sub
xchg
aas
jp
pop
insl
int
and
pop
sbb
fnstsw
sbbl
xchg
aas
dec
cmp
int
cmp
pop
sbb
jp
subl
xchg
aas
adc
pop
insl
int
pusha
pop
sbb
fidivrl
orl
cmp
pop
out
push
shrb
jg
stc
add
stos
inc
scas
arpl
and
mov
sarb
cmc
pop
cmp
xlat
mov
push
outsl
pop
dec
imul
out
push
pop
inc
lret
into
aam
popa
lods
jecxz
or
mov
repnz
xor
mov
mov
add
out
pop
cmpsl
xor
out
mov
imulb
loopne
ret
inc
in
sbb
add
mov
call
sahf
inc
shll
jbe
adc
les
mov
inc
sbb
pop
fiadds
mov
jmp
sahf
iret
mov
outsl
push
mov
mov
jg
sahf
inc
and
xchg
pop
imul
dec
scas
hlt
xchg
inc
pusha
mov
cmpsb
int3
dec
mov
adc
mov
outsb
dec
add
int
cmp
adc
adcl
pop
lret
cmpsb
rcrl
es
lods
int3
cmp
jnp
les
jle
push
mov
lea
pop
shll
cwtl
sbb
iret
xor
cmp
sbb
xchg
xor
mov
dec
stos
out
inc
in
jge
mov
sub
imul
or
or
stos
lret
mov
xchg
sbb
sub
push
lret
repnz
shlb
dec
stos
pop
add
sbb
pop
jle
lret
xor
add
xchg
popf
sub
test
dec
pop
pop
lods
std
test
aam
int
test
xchg
call
jb
xchg
sub
adc
repnz
enter
xlat
daa
into
mov
dec
jge
xor
xor
pop
shrb
repz
add
xlat
dec
sub
in
inc
int
dec
cmpsb
fisttpl
jl
es
sbb
sub
xchg
test
lret
icebp
pop
mov
and
les
std
xchg
inc
dec
jo
js
push
jne
lea
cmp
clc
sti
sbb
jno
or
xorb
jg
fsubrs
jne
sbb
mov
push
stc
mov
dec
mov
sbb
cmpsl
into
sub
shll
fwait
notb
je
sti
cwtl
ljmp
in
push
fbstp
and
push
lds
movsl
xchg
jne
push
int3
sbb
cmp
shl
push
inc
cmc
push
jno
icebp
in
mov
outsl
xchg
jnp
mov
lcall
sub
push
loope
aad
stos
call
sub
jecxz
push
bndldx
lods
mov
pop
jmp
cmp
rcr
gs
pop
pop
xor
aas
mov
xchg
aaa
add
pop
fldcw
es
dec
jae
mov
popa
adc
mov
cmp
push
mov
jne
inc
mov
inc
pop
mov
mov
dec
push
adc
out
or
in
fistps
xchg
inc
sub
or
and
lock
fisttpll
test
sub
mov
fs
sbb
or
jmp
inc
cmp
jg
or
jg
inc
imull
and
mov
lods
push
and
rorb
repz
xor
cmp
iret
cmc
sarb
lcall
mov
lods
rolb
lcall
sbb
mov
enter
mov
or
push
clc
mov
or
repz
mov
push
xchg
fwait
enter
je
jle
outsl
fldt
and
and
das
dec
pop
call
xchg
pop
clc
rorl
outsl
push
shl
fsts
sbb
test
scas
clc
test
inc
push
jl
aad
std
sub
adc
das
pop
cwtl
hlt
push
jo
sbb
sub
mov
imull
and
pop
out
ljmp
ret
leave
loope
sub
push
sbb
fimull
mov
in
pop
in
or
xlat
push
jp
mov
inc
imul
mov
mov
push
imul
dec
push
hlt
sub
call
and
rcll
hlt
enter
pop
jg
adc
cld
fisttpl
mov
inc
aaa
inc
out
into
or
int3
or
jl
push
jae
data16
xor
adc
sahf
call
call
inc
mov
dec
pushf
sbb
ret
add
mov
pop
mov
aas
fstpl
and
cs
or
outsb
fdivl
repz
inc
and
mov
sub
fldt
les
xchg
mov
lea
pop
mov
dec
push
add
lcall
xor
bnd
popf
add
or
js
mov
mov
sub
pop
cld
add
sahf
push
jno,pn
sub
jne
rcl
sub
xor
in
cmp
mov
lds
dec
aam
mov
les
push
shl
stos
xchg
xor
and
xor
mov
xlat
dec
fcmovnb
sub
pop
add
mov
add
ret
mov
and
mov
jno
jno
rcrl
outsl
and
jb
lods
mov
shrl
sub
push
pop
jle
std
addr16
xchg
aam
xchg
adc
and
mov
dec
sub
sahf
push
sbb
cld
jl
push
inc
add
inc
stc
fldcw
cltd
testb
xchg
movsb
mov
mov
xchg
fwait
push
sbb
pop
lret
mov
add
or
mov
cmpsl
jp
cwtl
lret
aad
sahf
pop
insb
mov
popf
pop
adc
ror
push
add
jl
jns
movsb
shll
popf
lret
cmpsb
or
jbe
dec
xchg
cld
scas
push
loop
fwait
sub
cmp
sub
arpl
cs
pop
rcll
sbb
sub
or
xchg
adc
cmp
jnp
cmp
leave
std
pop
repnz
push
push
jl
movsl
ss
and
jo
dec
jl
jp
ficompl
rcl
in
fwait
xchg
push
dec
push
out
jecxz
es
enter
iret
add
lret
scas
mov
jns
jns
ljmp
push
mov
and
loopne
cmc
mov
mov
cmp
dec
jl
mov
rorl
xchg
jecxz
hlt
cmp
xor
aas
subl
mov
mov
mov
mov
adcb
jg
mov
jne
mov
jmp
aaa
popf
xchg
in
adc
inc
jo
stos
lods
sbb
xchg
incl
vmovaps
push
hlt
andb
scas
stos
push
inc
testl
scas
les
das
sub
rcll
hlt
dec
addr16
inc
popa
iret
sti
push
hlt
mov
dec
mov
movsb
jne
daa
sbb
mov
adc
lret
iret
mov
pushf
jmp
dec
jo
and
sub
jb
ljmp
xor
xor
arpl
mov
mov
test
sbb
test
jle
jp
dec
jl
inc
in
sti
mov
mov
addr16
out
sbb
enter
xchg
loope
dec
mov
shr
cmp
push
xor
ffree
inc
fdivrl
mov
pop
clc
shlb
jbe
inc
mov
jge
test
dec
push
mov
cmp
mov
lods
clc
xorl
xor
mov
mov
mov
xchg
pop
xor
add
dec
stos
rcrb
sub
jge
sub
or
scas
adc
and
pop
mov
cmc
in
pop
jnp
lods
lret
loop
sti
stos
mov
adc
mov
xchg
pushf
jl
ss
mov
pop
stc
mov
mov
pop
leave
sub
scas
icebp
xor
insl
dec
frstor
lret
mov
cli
sub
ret
loopne
in
push
pop
mov
mov
loop
and
or
repz
push
sbb
push
lock
mov
xchg
out
js
or
and
mov
insl
mov
mov
mov
pop
leave
sub
add
jl
in
cmp
xor
insb
add
fildl
and
mov
shl
sub
or
setg
int3
enter
pop
les
dec
mov
xchg
mov
or
ds
xchg
jbe,pn
shrl
adc
sti
bound
scas
inc
sti
mov
cltd
imulb
jle
repnz
aaa
sbb
out
mov
cmp
adc
pushf
cltd
mov
xchg
xchg
mov
mov
cmpl
iret
dec
add
and
sbb
cmp
cmpsl
jmp
arpl
jecxz
shlb
pop
cmpsb
dec
ret
jb
push
cmp
stc
jne
stos
pop
jb
and
fneni(8087
fucompp
xor
lahf
mov
mov
into
push
add
iret
aas
xchg
add
adc
mov
or
add
mov
inc
pop
sbb
enter
inc
mov
fwait
mov
and
repnz
xor
adc
pop
mov
jns
sub
mov
fmuls
jl
test
aaa
pop
cmpl
xor
add
xor
flds
xchg
ret
cmpsb
push
lahf
ja
jno
jne
int3
sub
or
out
inc
lret
lods
jmp
push
mov
je
pop
dec
cmp
or
cmp
push
xchg
mov
push
pushf
in
loopne
cmp
fidivrl
xlat
dec
insb
loope
imulb
mov
and
inc
popf
out
dec
outsb
jne
xchg
cli
inc
push
or
jp
cld
xchg
leave
xor
imul
cmp
jb
popf
inc
xchg
pop
inc
sbb
jb
cltd
bound
pop
cmp
mov
daa
pop
clc
add
ret
in
roll
enter
pop
xchg
ret
pop
sbb
and
or
xchg
jne
pushf
push
mov
test
shll
je
outsl
pop
fisttps
outsb
enter
push
inc
sti
push
xchg
push
or
cmp
dec
ficoml
or
outsl
xor
jno
mov
subb
or
inc
mov
mov
mov
leave
imul
mov
xor
popf
aam
cmp
pushf
ljmp
jle
repnz
in
xor
pop
or
int3
pop
dec
push
sbb
subl
xchg
fsubrp
ss
lds
lods
rol
sbb
adc
push
mov
jge
push
mov
mov
ret
pop
out
mov
adc
sbb
xchg
mov
jae
mov
add
movsl
jecxz
lock
out
xchg
arpl
or
stos
into
inc
or
mov
jl
jno
add
aam
jle
clc
lahf
rolb
mov
dec
pop
lret
out
daa
out
loop
imul
movsb
jbe
ja
push
jbe
sub
adc
call
jmp
mov
dec
iret
cs
xor
add
xchg
pop
cmp
ja
pop
ficomps
dec
bound
cmc
xchg
pop
movsl
and
pop
icebp
adc
fwait
jbe
and
pop
xchg
mov
mov
xor
pusha
loopne
aas
xlat
mov
iret
in
std
inc
lods
movq
scas
push
popa
mov
jbe
daa
add
les
or
mov
xor
jo
ljmp
into
or
mov
fwait
sbb
mov
ljmp
in
and
xor
and
rol
test
jne
inc
inc
ret
lds
pop
push
movsb
fdivl
mov
sub
adc
jge
or
loop
sahf
xlat
jecxz
repz
loopne
fwait
dec
daa
aad
test
cmp
jae
xchg
in
xlat
test
clc
dec
lods
or
xchg
lret
shl
das
pop
lds
cmc
jmp
int
mov
pop
cmp
and
push
jbe
bound
inc
and
ffree
mov
sbb
idivl
sahf
xor
je
mov
cli
cmp
mov
out
imul
push
ret
sub
in
test
aas
loopne
sub
push
jo
stos
imulb
push
push
inc
add
jle
andl
sahf
and
cmp
xchg
xchg
cld
mov
adc
push
add
sbb
imul
sbb
xchg
popa
add
xchg
or
shll
fnsave
inc
xchg
outsl
pop
sbb
and
inc
xor
push
sbb
xchg
shr
or
cmp
pop
jae
adc
sub
aaa
pop
xor
pop
mov
test
cmp
xor
fs
mov
aad
fldt
dec
or
addr16
imul
mov
cltd
out
stc
fimull
loop
pusha
leave
cmp
out
rcrb
dec
lds
adc
or
imul
ror
xchg
ss
adc
lea
pop
js
jge
add
xor
fistl
insb
popa
fldenv
fldenv
movsl
xor
gs
and
and
ljmp
enter
push
cmp
scas
jnp
cmp
cmp
cmp
in
rcl
movsl
hlt
mov
data16
clc
std
jno
cld
inc
jg
mov
pushf
dec
mov
jnp
adc
aad
mov
xchg
js
lret
cmp
out
or
add
andb
ja
das
stos
fsub
in
loop
jl
ror
sbb
mov
xchg
gs
xor
mov
stos
mov
stos
daa
es
sbb
pop
push
sarl
fwait
add
stos
addb
outsl
movsl
scas
pop
inc
scas
add
xor
sbb
push
iret
jg
movsl
xor
jmp
sahf
pop
cmp
xchg
sbb
or
push
sub
loop
and
cmpsb
jne
or
leave
mov
xchg
xchg
lea
cs
out
clc
sbb
js
lcall
lcall
inc
inc
icebp
dec
add
and
jl
rcr
and
inc
fwait
cmpb
daa
jae
xchg
mov
cmp
dec
mov
jp
sbb
adc
jl
gs
pop
cmp
sub
std
and
pushf
jnp
lret
inc
mov
or
xchg
inc
and
enter
cmpsb
mov
and
mov
push
test
test
stos
add
pop
std
je
imul
pop
lods
shl
pop
cltd
or
rcl
frstor
xchg
test
or
int3
fstpl
pop
jne
sbb
jb
dec
daa
loopne
push
outsb
test
adc
lock
sbb
popa
js
fwait
lds
mov
xchg
cmp
bound
mov
mov
mov
gs
sub
or
cmp
mov
mov
mov
jb
fdivrs
outsb
aam
lret
imul
mov
daa
mov
notl
add
cmp
xchg
jecxz
pop
sar
push
push
mov
in
ljmp
aaa
mov
or
dec
hlt
daa
or
adc
pop
scas
int3
test
stc
xlat
fcompl
sbb
sub
add
dec
leave
je
imul
adc
sbb
daa
ja
dec
mov
out
pop
leave
add
test
stos
lret
imul
mull
push
mov
stos
insb
sti
insl
push
push
ror
mov
mov
addr16
jecxz
cli
mov
arpl
and
sahf
xor
aad
push
pushf
fists
cvtdq2ps
push
mul
sub
jl
lock
out
inc
jns
mov
mov
lret
imulb
and
jo
loopne
push
loopne
or
in
stos
xlat
outsb
inc
xor
ja
bound
mov
ret
das
sahf
mov
push
aad
xchg
cmp
cmp
inc
scas
insl
insl
dec
xchg
cmpsl
fdivrl
push
pandn
dec
pop
hlt
and
sub
loopne
or
test
xor
into
in
ds
lret
or
mov
cmc
sub
sbbb
enter
icebp
movsb
or
mov
add
or
cmp
jl
push
inc
jae
fnstcw
jns
test
jle
dec
mov
insb
gs
shrb
repnz
jo
ds
or
rclb
cld
xchg
xlat
fsubr
imul
jae
cmp
das
mov
outsb
outsl
xchg
push
xchg
dec
cltd
in
arpl
xor
hlt
aas
pop
imul
mov
daa
pop
cmc
add
sbb
movsl
mov
fmull
pusha
jne
icebp
not
aas
xor
jp
push
pusha
outsl
push
push
out
rorl
push
push
das
inc
popa
xor
insl
jae
xchg
push
mov
jecxz
outsl
push
and
ficoml
xchg
daa
dec
mov
test
stos
sar
push
test
pop
sbb
pop
test
out
add
fwait
into
inc
lcall
sbb
aas
addr16
push
icebp
push
push
jp
and
negl
push
xor
ret
aas
bound
mov
cmp
pop
jae
sahf
fdivl
int
push
inc
cvtpi2ps
in
outsl
dec
fdivs
push
popa
in
mov
stos
jno
ja
mov
lahf
add
pop
mov
xchg
iret
xor
mov
push
xor
pop
jnp
push
inc
mov
sub
lahf
inc
push
cmp
outsl
mov
sahf
xchg
nop
gs
pop
or
inc
repnz
mov
mov
dec
inc
lods
insl
jmp
mov
bound
cs
push
in
stc
jmp
aas
and
add
push
xor
adc
or
call
pop
inc
and
and
cmc
rolb
mov
jbe
cmpsl
mov
dec
cli
jg
pop
mov
sbb
stos
pop
fcmovne
fs
aas
mov
jmp
add
aas
lds
push
pop
out
addr16
fcoml
je
sub
add
push
push
dec
push
jo
lock
dec
jb
mov
out
out
loop
stc
pop
lods
loope
scas
mov
mov
fmull
in
dec
ss
mov
mov
enter
sub
negl
and
dec
les
xor
pop
out
adcl
popa
aad
push
cmp
push
push
and
les
jecxz
mov
aaa
popa
mov
cmp
icebp
adcl
icebp
inc
pop
mov
lahf
mov
inc
xchg
rcll
pop
sub
pushf
dec
rcrl
mov
sbb
push
jmp
aam
push
jge
shrl
mov
push
orb
jnp
movsb
xor
lods
loop
push
pop
imul
loope
adc
mov
stos
sahf
pop
jp
loopne
cmp
or
push
pop
dec
xlat
push
fstl
jg
fdiv
imul
ja
ror
leave
fadd
mov
cwtl
lods
mov
pop
pusha
lret
pop
loope
mov
call
dec
push
jo
jp
in
and
std
push
subb
mov
fnstcw
imul
cmpsb
loopne
xchg
mov
jp
test
or
xchg
sarl
stos
mov
mov
xchg
imul
loopne
addb
push
dec
cmp
mov
sub
mov
outsb
shrl
inc
lods
aad
test
outsl
jne
mov
adcl
jecxz
repz
popa
mov
out
fwait
jno
sbb
add
stc
push
push
repnz
push
fs
dec
mov
hlt
inc
sub
out
in
dec
jge
mov
cmpsb
or
testl
jecxz
test
outsb
pop
cmp
xchg
add
sar
in
fcmovb
sarb
push
aam
push
fwait
andl
push
xchg
ret
shrl
lods
mov
jp
in
shll
lods
pop
mov
mov
or
dec
xor
add
jecxz
and
insl
add
mov
repz
or
ljmp
sub
and
cli
shlb
cmpsl
pop
or
lds
pusha
and
inc
pop
push
mov
or
test
jae
pop
cmpsl
repnz
jae
scas
test
outsb
mov
xchg
stc
rcll
mov
mov
push
push
icebp
jle
into
lahf
shrl
mov
push
xorb
xchg
jo
jns
not
push
push
stc
fs
shrb
loop
fldt
mov
and
int3
xchg
hlt
mov
push
push
std
sbb
inc
push
mov
dec
fistpll
jnp
stos
pop
pop
adc
bound
mov
fwait
sub
sbb
add
in
or
fnstenv
pusha
js
sti
sbb
jmp
movsl
dec
pushf
adc
ljmp
mov
iret
sbb
and
pop
inc
mov
xchg
aaa
pop
inc
or
ss
stc
push
pop
jecxz
dec
fsub
popf
movsl
shlb
mov
cmpsl
cltd
adc
addr16
scas
ss
test
push
sbb
loopne
mov
cmp
and
mov
cmp
iret
jo
lods
cmpl
cli
mov
and
lcall
ss
movsl
inc
inc
aas
sbb
push
fsubrp
clc
sbb
and
jae
jbe
sub
daa
pop
das
mov
fistl
sbb
aas
or
sahf
jecxz
adcl
pop
in
jbe
cmp
cmpsb
lods
push
popf
es
inc
dec
mov
icebp
dec
in
adc
test
das
sub
mov
push
mov
and
cli
jmp
out
mov
call
and
xchg
loope
mov
ja
leave
mov
fnstenv
cwtl
aad
fiaddl
movsb
insl
dec
xor
sbb
push
or
mov
mov
jmp
sbb
nop
sbb
xor
test
lahf
xchg
call
mov
xor
xchg
jmp
loop
int3
pop
es
fwait
adc
add
test
cmp
jbe
pop
fbstp
pop
cmp
enter
mov
push
xchg
sub
and
jnp
loop
jno
mov
or
js
cmpsb
out
aad
xchg
mov
and
loop
xchg
cs
leave
fadds
arpl
mov
fstpl
and
inc
mov
fwait
inc
fstps
mov
out
imul
inc
hlt
out
dec
mov
repz
jp
cmc
lret
jecxz
push
cwtl
fcmovu
cld
cmp
rcrb
or
jae
and
ja
mov
dec
outsb
fdiv
inc
mov
cmc
xor
int
jo
mov
dec
cwtl
pusha
sahf
pop
loope
and
loope
test
push
cmp
or
fadd
sbb
xchg
xchg
and
and
and
add
rorb
mov
mov
pop
push
xor
mov
cmpsl
xchg
xchg
and
cmp
stos
jmp
nop
add
mov
roll
cmpsl
inc
push
in
stc
pop
jbe
jnp
mov
sub
sub
push
clc
in
arpl
rcrl
sub
mov
xor
dec
pusha
pop
xor
push
mov
push
arpl
adc
dec
sub
in
out
and
fwait
ds
in
test
mov
insl
push
xor
inc
push
leave
push
adc
in
shll
sub
inc
cld
pop
cmp
aad
push
xchg
adcb
hlt
and
xlat
hlt
sub
pop
adc
pop
aad
out
pop
out
rolb
pop
inc
jmp
mov
rorb
sti
pop
xlat
imul
out
dec
addl
xor
hlt
movsl
xchg
pop
sbb
movsb
inc
outsb
leave
call
push
push
mov
adc
mov
fldenv
cld
pop
jns
dec
mov
pop
scas
int3
pop
dec
pop
sbb
cmp
fstps
mov
aam
inc
repnz
inc
lret
and
pop
lcall
int
jae
mov
in
adc
pop
js
pop
mov
enter
push
lahf
enter
xchg
leave
lock
pop
xor
clc
mov
enter
adc
jo
jnp
in
mov
aam
into
and
lret
daa
push
into
in
dec
jnp
sub
mov
adc
inc
push
inc
dec
cmpsl
mov
inc
or
int3
ljmp
inc
out
sbb
in
outsl
xchg
mov
dec
cmpsb
fstp
mov
push
icebp
push
je
pop
pop
and
gs
add
add
fmull
in
fsubrl
popf
popf
push
mov
js
mov
sub
or
call
jns
aaa
jge
and
jmp
out
sbb
mov
adc
outsb
mov
ret
push
adc
add
mov
mov
add
adc
jle
mov
jne
mov
jp
inc
mov
pop
shr
stc
popa
out
fwait
sub
xor
jo
gs
stos
pushl
in
pusha
inc
aaa
xor
fcoml
cmp
das
jns
jns
xchg
inc
jnp
xchg
lcall
mov
adc
lea
add
mov
inc
jno
fwait
add
cmp
or
and
fdivrs
jle
mov
xor
stos
imul
xchg
sub
pop
inc
jge
daa
mov
jb
into
jb
jmp
sub
adc
push
xor
and
std
cmp
pop
jnp
call
sub
cmp
cli
out
push
xchg
js
jle
pop
fidivs
insl
nop
mov
fisubs
and
pop
add
push
out
shrl
fadds
cwtl
enter
outsb
aas
mov
iret
ljmp
fwait
mov
mov
lret
mov
lahf
aad
popf
xor
cmpsl
outsl
pop
dec
mov
xchg
mov
mov
fidivrs
cs
pop
ret
loope
push
jecxz
stos
test
cmp
and
fs
movsb
clc
jns
sbb
or
movsb
and
outsl
stc
ret
clc
inc
es
cli
sbb
adc
and
mov
push
dec
dec
jle
jbe
mov
push
add
int3
in
add
jno
adc
sbb
xchg
popa
xchg
add
jo
outsb
lods
jb
sahf
dec
pop
inc
dec
lret
loopne
mov
sub
mov
add
inc
icebp
scas
xorb
flds
dec
cmp
and
add
mov
mov
popf
cmp
xchg
sbb
icebp
sbb
or
sub
sub
push
cmp
dec
inc
adcb
adc
and
mov
js
or
mov
inc
jmp
cwtl
lock
bound
jo
sbb
loopne
jnp
lahf
pop
and
shrb
std
or
jmp
outsb
cmp
inc
out
inc
sub
mov
jecxz
mov
int3
xchg
pop
cmpsb
xchg
inc
sbb
insb
mov
sbb
adc
mov
pop
push
aaa
sti
out
xor
dec
cmp
xor
mov
sbb
loope
mov
cmc
negb
js
pop
aad
cmp
hlt
dec
add
and
or
mov
xchg
hlt
jmp
loop
and
data16
test
mov
mov
mov
stos
fsub
out
in
xor
repz
dec
inc
inc
out
imul
cmp
into
inc
rclb
roll
std
sti
fldt
movsl
xorb
das
mov
pop
jl
rcrl
mov
xor
pop
iret
xor
daa
icebp
push
add
push
sbb
cli
add
arpl
fwait
cmp
dec
xchg
push
pop
mov
xchg
sbb
into
fdivl
arpl
fwait
add
mov
es
and
push
jno
xor
jl
mov
push
shrl
sub
mov
iret
mov
mov
cmp
xchg
push
jnp
pop
mov
mov
sub
fwait
icebp
shl
lret
scas
add
lahf
xor
lea
mov
fildl
mov
xchg
pop
insl
cmp
adc
xchg
sahf
cmp
scas
mov
dec
cwtl
xor
inc
xor
cli
es
outsb
add
loop
iret
shlb
pop
pop
cmp
mov
push
mov
jp
adc
cmp
mov
cmp
flds
push
adc
icebp
sbb
jb
pop
scas
xchg
xchg
not
loop
jmp
pop
call
fcomps
dec
repz
push
hlt
arpl
shll
pop
lods
cmc
sbb
test
out
jmp
mov
cli
in
lret
pop
pop
pop
test
push
rolb
ret
cmp
cmp
push
rorl
cs
adc
mov
jb
push
ss
cld
je
cmp
inc
jge
repz
cmpsb
push
stos
mov
arpl
xor
mov
xchg
outsl
mov
pop
outsl
and
inc
std
fnstsw
sbb
int
sahf
xor
ja
mov
jae
je
jb
and
sahf
mov
ficoml
iret
dec
pop
lods
test
mov
movsl
rcl
jl
jb
repz
rcr
and
add
pop
lahf
jg
and
sub
fmull
push
es
mov
cmpsb
ds
in
cltd
inc
dec
repnz
push
addr16
cmp
xchg
out
lds
mov
add
xor
and
negb
sti
adc
inc
fsubrp
adc
mov
cmpsb
and
inc
in
xchg
inc
loopne
push
xchg
and
and
lahf
adc
int
jl
mov
mov
pop
loopne
xor
and
sub
daa
dec
out
mov
inc
loope
aad
mov
pop
jno
push
dec
stos
andl
mov
orl
xchg
shlb
out
pop
stos
ja
pop
mov
push
int3
inc
jmp
adc
out
pop
mov
adc
mov
add
cltd
std
mov
scas
push
cmp
adc
inc
push
mov
lcall
pop
sti
nop
and
mov
dec
pusha
cmpsb
mov
adc
popf
adc
fsubrp
mov
dec
mov
js
push
loopne
andl
mov
aad
push
push
dec
and
xor
jae
inc
mov
cmp
inc
scas
fcmovnu
xor
cmp
lods
dec
cmp
in
in
andnps
dec
enter
sub
in
or
cvtdq2ps
lea
loop
in
dec
std
jge
nop
adc
repnz
ljmp
add
cmp
dec
sbb
xor
test
add
jg
sbb
inc
negb
repz
int3
mov
xor
mov
adc
fstps
pop
movsb
and
jecxz
scas
mov
test
dec
push
push
push
dec
mov
push
mov
pop
scas
int3
out
mov
cltd
aas
cmp
lods
sub
orl
adc
mov
mov
cmpsb
sbb
xor
addr16
loopne
xlat
xchg
push
bound
fimuls
adc
jg
int3
ljmp
shlb
fcompl
dec
mov
cmp
jae
pusha
xchg
xchg
mul
pop
cli
insl
and
rcrl
cs
popa
in
aam
push
mov
and
mov
loop
sub
cmp
adc
ds
adc
xor
cmp
pop
jmp
and
push
cld
fwait
and
fsubl
ror
in
je
clc
inc
dec
leave
adc
or
xor
stos
dec
sub
sub
push
and
test
lcall
mov
aas
lods
fsubrp
jb
cmp
inc
arpl
or
mov
mov
mov
loop
mov
mov
jg
stos
adc
rorb
sbb
dec
push
addl
sbb
cltd
leave
stc
dec
push
insb
sbb
push
inc
sbb
movsl
pushf
aas
jb
sub
addr16
lret
lret
les
test
stos
adc
ss
and
fyl2x
mov
aam
stc
jnp
cmp
jmp
cmp
push
jle
jo
push
mov
stos
and
jmp
lea
in
jl
adc
das
jmp
add
mov
in
mov
insb
adc
jecxz,pt
imul
push
xor
pop
enter
pop
push
in
aam
jnp
sub
cld
mov
stos
outsb
pop
adc
fsubl
imul
js
lret
xchg
mov
sub
fldcw
rcl
xor
mov
insb
xor
adc
jno
mov
xor
decl
mov
push
pop
mov
sbb
mov
scas
dec
mov
mov
xor
jbe
repnz
mov
lods
out
bound
jl
jmp
jg
in
xor
jbe
inc
fs
push
and
lret
in
int3
imul
push
jbe
ror
dec
mov
stos
dec
in
mov
lahf
add
mov
shlb
aas
xchg
mov
mov
shl
ret
and
into
repnz
push
fiadds
xchg
cmp
clc
or
imul
cmc
std
and
lods
and
pop
dec
mov
repz
xorb
xor
aad
jae
lret
ljmp
or
dec
incl
xchg
lcall
xor
mov
cs
scas
mov
jns
popa
push
test
mov
mov
inc
jnp
push
movsl
add
cmc
aam
loopne
lods
cltd
cmp
add
jnp
jne
xchg
mov
mov
rcrb
pushf
mov
out
mov
push
jge
fsubs
sar
xor
test
loope
mov
repnz
shlb
in
das
ret
lahf
dec
push
nop
mov
or
loop
shll
pop
push
dec
jp
cmp
lcall
cmpsl
aaa
pop
cmpsl
pop
xor
lods
or
xchg
sahf
push
mov
mov
in
inc
cwtl
mov
add
push
jno
cld
jl
push
sahf
jo
mov
fisubs
test
mov
xor
add
mov
pop
repz
pop
xchg
jo
cmpsb
fidivl
cld
adc
in
xchg
jbe
cmpsl
push
xor
dec
push
daa
fldt
push
push
clc
cs
jge
lods
pushf
mov
nop
mov
fsubrp
inc
pop
ljmp
int
sub
mov
pop
test
mov
bound
fidivrs
scas
sub
cli
cli
add
flds
push
pop
int
mov
fwait
adc
or
xchg
add
sbb
in
inc
mov
aam
fstp
and
mov
cmp
ljmp
push
jb
or
mov
rcrl
cltd
pop
xchg
negl
mov
popa
jae
jns
mov
pushf
lcall
fldl
push
mov
imul
mov
xchg
loope
pop
ljmp
rcr
fsubs
inc
push
mov
pushf
pop
push
jle
jae
mov
int3
push
push
sbb
cs
stc
enter
xor
inc
xor
fstl
popf
shll
outsl
mov
adcb
sbb
mov
insl
sarl
es
mov
ja
lret
scas
mov
mov
sbb
loop
aam
sub
jecxz
ja
xchg
nop
ljmp
cmp
sbb
xlat
ja
jp
cmp
cmpsl
push
push
xor
adc
in
cs
icebp
xor
lods
adc
sub
xchg
fmuls
add
leave
push
or
movsb
inc
xchg
adc
outsl
jl
inc
cld
inc
inc
cmp
push
xchg
xor
pop
negb
xlat
push
adc
sub
or
pop
aas
adc
insb
int3
adc
push
xchg
loopne
push
out
jg
cmp
in
push
stos
cmp
inc
sub
sub
mov
subl
pop
mov
ja
adc
or
and
dec
inc
sub
movsl
int3
dec
xchg
dec
xor
iret
jg
mov
dec
push
lret
mov
aaa
cli
call
fdivs
pop
push
addr16
xor
pusha
xor
and
push
aas
nop
pusha
dec
jmp
leave
in
xchg
sub
pop
sbbl
sbb
inc
insb
or
cmp
inc
sbb
stos
jns
cmp
add
cli
mov
add
xor
rol
pop
push
pop
arpl
push
add
repz
mov
pop
aas
xchg
sbb
push
fsubr
int3
fdivl
movsb
inc
mov
push
pop
push
sub
push
pop
sub
clc
push
inc
pop
mov
into
inc
pop
push
xor
js
mov
mov
cmpsl
or
mov
shll
sahf
int
test
or
xchg
sbb
push
gs
mov
loope
mov
jae
adc
fs
sbb
divl
aam
push
pop
sti
inc
rclb
cmpb
or
fdivrs
sti
inc
insb
stos
add
rcrl
lea
stos
sbb
push
lds
cltd
cmp
incb
or
pop
in
or
cwtl
cmp
mov
movsb
lahf
aas
lret
push
pop
mov
jg
or
lahf
mov
inc
sti
inc
push
mov
ret
mov
inc
lret
xor
xor
xor
leave
in
adc
or
inc
pop
dec
pop
and
push
lret
dec
mov
push
scas
ds
faddp
mov
dec
stos
dec
cmp
ret
pop
inc
or
jo
mov
comiss
inc
lods
xchg
mov
lods
test
mov
pop
fcomip
jg
xor
std
dec
arpl
or
fisttps
mov
add
mov
sbb
sub
call
fcompl
add
push
lret
cbtw
cmpsb
out
or
addr16
jle
enter
lds
jp
mov
and
stos
or
pushl
cmpsb
incb
sbb
pusha
dec
inc
jmp
in
push
mov
mov
outsb
loopne
jg
add
ja
pop
subb
sbb
insl
std
dec
mov
jecxz
outsl
xlat
punpckhwd
jge
cli
shll
cmp
jle
add
cltd
idiv
insl
popa
jecxz
inc
popa
daa
lods
sub
repnz
and
lods
mov
sub
mov
popa
enter
mov
dec
popf
addl
or
out
repnz
push
jmp
add
mov
scas
bound
or
add
hlt
aam
rcl
adc
mov
jecxz
xor
sbb
sti
mov
xchg
fisubrl
ljmp
jmp
or
out
addl
mov
bound
dec
push
addr16
ds
xor
pop
in
jns
icebp
ljmp
loope
repnz
and
das
insb
cwtl
jae
sbb
bound
rcrb
ret
sub
neg
adc
fcompl
rolb
cli
out
call
scas
fstps
xor
cltd
fsubr
jno
cmp
xchg
outsl
sub
xchg
mov
clc
xor
add
mov
rorl
sbb
dec
into
sbb
push
pop
xchg
imul
into
inc
sub
push
push
ficoml
fldcw
cmpsb
mov
sti
mov
cmp
ds
dec
mov
push
inc
cmc
dec
or
mov
mov
cld
or
clc
fwait
pop
dec
sub
popf
dec
je
addl
insb
mov
mov
in
int3
addb
lods
ja
mov
outsl
cmp
enter
icebp
rorl
ljmp
mov
fisubl
jne
es
add
mov
stos
out
sbb
mov
test
jmp
les
sub
out
int
sub
or
dec
cmp
mov
imull
pusha
push
in
or
pop
stos
pop
dec
add
xchg
int
mov
dec
insb
aad
repnz
sub
or
push
hlt
aam
push
inc
int3
out
sbb
scas
pop
dec
pop
pop
repz
out
scas
sbb
aad
jne
add
cmp
int
leave
adc
lea
cmp
mov
std
aas
mov
xchg
dec
pop
push
repz
push
inc
dec
enter
adc
jno
shlb
sbb
mov
mov
push
and
add
pop
arpl
cmp
xor
in
test
aad
dec
sahf
inc
dec
mov
flds
in
daa
sbb
or
jge
dec
jecxz
fnstsw
outsb
sahf
push
sub
mov
cld
fwait
adcb
inc
pop
cmpsb
das
xchg
iret
sbb
nop
mov
jo
mov
mov
dec
inc
xor
xchg
addr16
insb
cmp
mov
sub
or
add
outsb
pop
mov
fmul
in
adc
jg
lcall
mov
call
sar
int
bound
mov
mov
fs
aaa
xchg
lock
add
aam
push
lret
mov
xor
jnp
push
xchg
cmc
mov
or
arpl
xchg
dec
pusha
je
sbb
mov
testb
push
fildl
sbb
lea
pop
cs
cli
lahf
arpl
mov
adc
cmp
mov
mov
outsb
int
xor
addr16
and
movsl
pop
jbe
addl
mov
int3
cli
repnz
iret
ret
dec
les
xor
in
outsb
outsl
cs
imul
xor
pop
fimull
ffreep
mov
in
adc
inc
movsl
xchg
or
mov
loope
adc
adc
mov
cli
and
jno
daa
mov
sbb
cltd
push
xor
ret
pop
mov
mov
mov
ret
mov
pop
cmp
les
es
mov
stos
push
in
dec
mov
scas
shll
push
mov
test
cmp
adc
pop
pop
outsb
xchg
xor
fnstcw
stos
cwtl
call
int
loope
and
in
subl
pop
mov
aad
aaa
xchg
data16
push
cwtl
jle
dec
sarl
pop
xor
push
mov
pop
push
cmc
leave
pop
iret
inc
insb
fs
inc
arpl
push
jbe
sti
dec
jecxz
adcl
mov
andb
mov
adc
and
fidivrs
push
int
jno
xchg
jle
pop
movsl
xchg
filds
das
push
adc
pop
jmp
cmp
mov
lock
ljmp
mov
bound
mov
ljmp
adc
pusha
inc
pop
push
mov
in
ljmp
push
cmp
jbe
mov
rcrb
add
in
sarb
rcrb
bound
incb
jmp
jns
jmp
pop
mov
mov
mov
in
mov
push
pop
mov
push
push
mov
ljmp
les
mov
jne
fwait
out
popf
fwait
xor
bound
add
stc
inc
mov
cltd
outsl
mov
out
and
call
nop
les
rcrb
lcall
lcall
setg
test
mov
and
mov
clc
imulb
sub
pushf
mov
dec
mov
dec
dec
push
dec
xor
adc
into
fildl
in
inc
icebp
je
gs
and
jp
mov
inc
leave
pop
icebp
js
gs
xor
mov
leave
ljmp
xchg
adc
xor
lods
sbb
or
jg
or
or
adc
clc
cmc
cmpsl
cmp
mov
mov
pop
mov
jbe
sti
js
dec
out
xchg
pop
and
stos
pop
sbbb
cmp
push
call
mov
add
push
mov
ljmp
aas
xor
dec
ss
out
jnp
xchg
hlt
and
mov
push
mov
loopne
push
jle
cld
in
nop
sbb
rolb
dec
ljmp
repnz
cli
xchg
xorl
lds
mov
fs
mov
xchg
lods
hlt
das
scas
mov
pop
insb
jecxz
jbe
outsl
cmp
xchg
dec
call
ljmp
sub
adc
stos
cli
add
xchg
mov
stos
aas
roll
lds
push
mov
out
inc
jge
ds
mov
xor
inc
jmp
mov
add
adc
inc
or
adc
fcmovnb
push
push
jmp
xor
das
das
aam
outsl
sbb
add
pushf
imul
xor
das
pop
lds
push
movsl
orb
add
ret
jge
jo
pop
shl
lods
js
loop
fiaddl
jp
mov
jp
jae
dec
cmpsb
cmp
clc
test
fstpt
gs
not
xor
mov
neg
pop
add
cltd
ficoml
int
push
cmp
adc
call
jecxz
loop
mov
and
flds
inc
xor
push
push
cmp
xchg
imulb
push
cmp
bound
push
and
dec
jnp
sbb
cmp
jp
add
pop
sub
jge
pop
das
lea
ret
push
dec
popf
cwtl
imul
out
lret
lahf
or
pop
dec
cmp
xchg
sbb
xor
into
in
inc
lret
aaa
jns
bnd
pop
pop
repnz
jg
icebp
mov
mov
cmp
xor
mov
dec
fiaddl
lds
popa
cmp
shl
notb
sbb
mov
xchg
cmp
movb
jnp
ret
mov
mov
mov
lahf
mov
push
repnz
dec
pop
xor
aad
inc
cmp
sti
push
fsubs
add
shll
or
cmp
lea
sti
push
fldt
lahf
dec
mov
lea
add
push
jle
fwait
int3
xor
test
fdiv
insl
gs
sbb
sahf
hlt
push
jb
cmpsl
pop
xor
add
xchg
mov
pop
ret
pop
inc
or
fsts
lods
aam
js
mov
push
push
lahf
in
fisubrl
int
dec
pop
add
pop
jo
repz
adc
stc
jbe
jae
stos
mov
scas
xchg
and
rcrl
jo
cltd
jnp
xchg
add
ds
add
fwait
jg
lret
lea
rcll
adc
or
dec
fildll
cmpb
jge
int3
dec
jne
sub
sbb
or
adc
push
sub
aad
out
xor
lcall
lds
sbb
jb
sub
add
push
xchg
cmc
pop
push
push
pop
adc
jmp
outsl
push
mov
dec
loope
xchg
out
ret
in
call
xchg
out
mov
jp
mov
iret
scas
mov
stos
sub
insl
std
std
in
enter
push
and
scas
sub
and
std
xchg
mov
mov
das
scas
gs
pop
js
push
jbe
sahf
pop
rol
add
jle
int
adc
fidivs
adc
mov
cmc
shll
mov
and
jmp
test
out
mov
xchg
movsl
jmp
repz
xor
sub
add
mov
mov
sbb
sub
xchg
pushf
mov
out
je
sbb
cmc
mov
dec
push
loop
int
mov
dec
pop
pop
sbb
test
outsl
popf
in
jo
imul
mov
mov
jge
inc
bound
jp
shlb
push
subl
pop
push
in
dec
les
cltd
mov
das
mov
push
mov
push
cmc
repz
lret
fwait
test
push
inc
sbb
or
mov
dec
pop
lahf
push
sti
cmp
add
test
xchg
xchg
xchg
mov
bound
push
mov
adc
pusha
add
mov
xchg
fmull
pushf
ds
fcmovnbe
rcr
lahf
hlt
jno
dec
out
int3
mov
mov
stos
pop
call
pop
jp
mov
or
or
mov
pop
in
lahf
mov
or
mov
sbb
sub
loopne
test
pop
clc
mov
lcall
inc
push
xchg
inc
repz
and
test
adc
popa
sub
sbb
adc
popa
jle
movsl
sbb
inc
push
jmp
fidivrs
hlt
loope
jg
sbb
mov
leave
xlat
dec
movl
popa
imul
fwait
inc
jae
sbb
bound
and
push
push
shrb
mov
add
test
mov
rcl
lea
enter
test
sbb
mov
cmc
mov
mov
cmp
lret
inc
ds
xchg
xchg
adc
out
and
mov
in
iret
sti
dec
cmpsb
add
ret
push
aaa
sub
dec
in
mov
insb
daa
pop
and
stos
or
ficompl
dec
or
nop
mov
sbb
dec
jbe
mov
leave
push
movmskps
ljmp
sub
in
outsl
loopne
pop
mov
ficoms
mov
fwait
test
xchg
cs
stos
push
cltd
jecxz
ret
cld
mov
mov
dec
push
std
insl
sarl
scas
inc
int3
push
cmpsb
dec
lret
les
popa
mov
mov
out
lock
adc
cmp
cmp
mov
imul
cld
into
fistl
xor
mov
cld
jg
sub
jne
adc
mov
scas
testb
mov
cmp
adc
inc
adcl
mov
popf
mov
cltd
or
test
cld
lods
mov
xchg
scas
xor
sbb
and
mov
ljmp
int
xchg
dec
xor
gs
dec
ljmp
inc
adc
jl
bound
mov
adc
adc
sbb
pop
sbb
sub
mov
fstpt
into
adc
or
mov
dec
adc
xlat
xor
movsl
sub
jbe
cld
xchg
lock
pop
sub
inc
inc
pop
mov
and
jp
jo
sbb
and
popa
inc
mov
xchg
es
leave
push
mull
movsb
xchg
fld
aad
cmp
mov
xor
lret
test
adc
loop
cmp
xchg
lea
es
loop
mov
fimull
pushf
adc
jns
movsl
jp
xchg
push
nop
jo
xchg
data16
inc
in
push
sub
fsubr
jge
into
shrb
dec
gs
sub
mov
mov
xor
leave
popf
adc
jne
imul
fs
pop
mov
sbb
jmp
cmp
aam
or
imulb
adcl
sub
fwait
pop
lock
sbb
imul
push
jl
hlt
jge
jl
jb
inc
xlat
ffree
inc
pop
dec
and
cli
lods
mov
mov
pop
pop
into
mov
and
enter
testl
sbb
jae
ss
fsub
jo
mov
aas
loop
push
jp
push
hlt
xchg
fs
int
pop
into
pop
hlt
sub
std
pop
push
test
or
xor
jmp
sub
addr16
pop
fs
cmp
cmc
in
pop
pop
mov
xor
lods
mov
push
fs
imulb
sbb
iret
pop
mov
icebp
push
mov
test
mov
cmp
push
xor
jge
xchg
movsl
push
sbb
mov
mov
sbb
adc
jmp
cmp
stc
mov
inc
dec
and
mov
pop
in
cmp
xor
sti
es
sub
cld
mov
bound
je
ljmp
add
mov
pop
icebp
xchg
sub
addr16
aaa
cmp
aam
cmpsl
ss
sub
test
lret
cmp
and
nop
sub
bound
out
sub
push
into
es
lea
adc
mov
inc
add
push
shrb
xchg
mov
inc
sub
ret
push
push
adc
cmc
fisubrs
or
int
dec
mov
ljmp
mov
lea
ret
dec
andl
lock
mov
aad
outsb
movsb
mov
jle
lahf
lret
inc
mov
int3
fsub
push
fwait
fwait
mov
lods
notb
icebp
rorl
test
and
pushf
scas
push
pop
inc
mov
cmp
mov
mov
popf
mov
sbbl
sbb
jnp
fisubrl
dec
pop
loop
cltd
mov
pop
test
jle
jno
imul
mov
add
dec
into
jg
pop
mov
jecxz
cs
xor
cmp
pop
pop
ret
and
push
fwait
js
sbb
fcmovnb
mov
repz
add
mov
rcrb
lret
and
call
stos
sub
rorl
sbb
ret
xchg
sub
xchg
cmp
movsl
sbb
out
mov
mov
adc
loopne
jg
daa
mov
adc
mov
lods
js
jne
adc
pop
xchg
jmp
popa
std
and
int
aam
outsl
leave
sbb
outsb
in
outsl
xchg
das
pop
pop
lea
lods
mov
lret
jns
outsl
xchg
mov
cmpb
inc
dec
sub
jmp
push
push
sub
mov
jmp
jg
js
xchg
loop
cmpsl
pop
inc
mov
fsubp
ret
sbb
jge
and
out
jmp
leave
dec
push
int3
mov
loop
fstenv
mov
pusha
adc
arpl
pusha
gs
in
rcrb
push
inc
dec
sub
sub
xchg
sahf
in
sub
jl
jo
dec
pusha
sub
add
jo
in
and
rcrl
mov
xor
js
ror
dec
cmpsl
mov
lcall
xchg
mov
jns
movsb
push
mov
inc
cmp
cmp
sbb
fbstp
add
cmp
nop
mull
stc
inc
stc
or
dec
add
test
sarb
ss
pop
jae
inc
stos
js
negl
aas
repnz
stos
mov
jg
push
jb
mov
gs
outsb
clc
leave
sbb
sbb
mov
lahf
mov
leave
mov
fnstcw
popf
mov
and
fucomip
test
cmp
dec
movsb
sbb
das
mov
out
stc
rcl
cmp
sbb
es
xor
inc
and
pop
lcall
stos
adc
iret
jg
xor
imul
mov
push
rcr
or
loopne
push
in
enter
push
push
stc
xchg
cmp
or
lret
mulb
lock
mulb
dec
sahf
inc
mov
callw
pop
jne
in
es
mov
adc
bound
movsl
xchg
fcompl
xchg
or
dec
mov
test
nop
pop
data16
je
mov
loope
and
out
add
or
xchg
jle
rol
pop
shrl
stos
lds
dec
push
inc
xchg
mov
pop
out
je
sbb
push
in
in
test
out
push
scas
pop
push
xor
push
push
adc
dec
add
mov
out
inc
push
mov
ss
mov
in
sub
scas
test
sarb
orl
hlt
dec
ss
inc
jb,pt
sub
sbbl
inc
jae
stos
ret
push
or
mov
jge
cli
js
pop
mov
adc
int3
sbb
mov
stc
leave
inc
ret
mov
aad
cli
mov
mov
lea
bound
ljmp
mov
and
or
scas
push
mov
sahf
add
sbb
mov
add
insl
stos
mov
ss
enter
cs
adc
loopne
scas
inc
dec
ror
adc
enter
gs
jp
push
sarb
mov
mov
cltd
xor
cmpl
and
push
mov
jmp
xor
sbb
sub
adcb
or
cmpsb
and
mov
or
popf
or
mov
push
cltd
insl
jne
jnp
scas
jmp
lods
or
fnstsw
mov
push
movsb
or
and
jb
jge
push
cmp
inc
pop
push
insl
dec
jb
js
out
vpavgb
cmp
lock
cmpsb
push
ja
jb
int
adc
cmp
repnz
push
jbe
mull
in
mov
icebp
arpl
sbb
fisttps
sub
daa
sbb
pop
or
xchg
clc
mov
outsl
lahf
xchg
pusha
jne
movsb
jp
rorb
cmp
aad
or
insb
rcrb
add
jnp
insl
out
idivb
pop
out
dec
mov
cmc
cmpxchg
sbb
insb
sub
jg
xchg
dec
scas
je
rep
bound
gs
incb
nop
in
test
dec
cwtl
rolb
divb
cmc
xchg
jl
lret
ret
pop
mov
pop
vmovshdup
test
dec
jecxz
dec
dec
lret
xor
jb
cmc
mov
push
lahf
lods
sbb
hlt
and
mov
sbb
lods
mov
scas
or
rcr
in
orb
cmp
push
loop
jns
in
push
mov
or
ljmp
sbb
mov
mov
jae
aaa
sub
xor
shlb
rolb
jae
gs
insb
fstps
iret
jg
pop
fistpl
mov
sub
cmp
frstors
mov
scas
adc
push
cmpsb
cmpsl
add
lret
cmpsl
jge
out
das
jb
ret
or
inc
jge
popf
jb
pop
adc
sti
jb
inc
int3
mov
and
repz
mov
mov
mov
pop
call
dec
ds
sti
std
dec
stos
insl
fwait
shll
jae
out
or
cmp
xchg
cmp
jmp
cmp
fsts
lock
sbb
add
pop
iret
push
test
incl
cmc
mov
add
cmc
mov
sub
jle
rcrb
sbb
pushf
sub
xchg
js
adc
lods
ss
dec
dec
push
in
inc
addr16
cmp
dec
adcb
shll
ja
gs
add
iret
mov
mov
and
aad
rclb
dec
jecxz
jno
rcrl
enter
pop
mov
sub
lahf
cmp
shl
ss
repz
jae
call
gs
mov
daa
pop
je
sbb
pop
ss
or
sbb
popf
sub
xchg
mov
inc
adc
seta
jecxz
data16
mov
cmp
loope
stos
cs
adc
add
mov
mov
iret
push
seto
mov
idivb
mov
mov
orl
sbb
lds
push
mov
jmp
aaa
sbb
cmp
xor
ja
mov
fdivl
adc
push
lock
int
shrl
or
xor
aas
inc
test
xorl
test
mov
lret
mov
pop
lcall
pop
ret
inc
imul
add
cmp
inc
pop
fdivrs
imulb
pop
movsl
pop
push
xor
subl
and
cld
repnz
gs
xor
lds
adc
mov
pop
adc
xchg
add
mov
outsl
mov
in
lock
imul
cmp
dec
pop
out
orl
or
or
sbb
adc
push
insb
stos
push
into
lret
or
arpl
outsb
aam
push
cmp
jge
jmp
add
mov
outsb
lds
out
xchg
xchg
sbb
cmp
pop
push
jo
test
mov
cmp
dec
jb
loopne
cmp
add
jns
push
test
insb
xchg
rorb
cld
fdivrs
cmp
sub
xchg
lcall
add
data16
iret
lret
enter
add
shrl
loopne
and
pop
pop
enter
pop
add
aad
jnp
test
sbb
or
mov
cli
or
faddl
cwtl
loop
in
pop
iret
dec
mov
push
mov
int
out
sarl
xchg
xchg
mov
xor
dec
dec
popf
sbb
jno
clc
cmp
daa
push
int3
mov
iret
insl
mov
dec
inc
movsl
jb
dec
xlat
mov
imul
sbb
xor
js
pop
fadds
clc
mov
outsl
icebp
lahf
sub
add
push
subl
push
aad
les
popa
gs
inc
jmp
ss
stos
test
stos
les
xchg
pop
fs
stos
les
popf
sbb
dec
pushl
lahf
or
mov
shrb
shll
push
jmp
push
ljmp
jne
sbbb
cld
jb
push
push
lahf
vmread
lahf
jo
add
les
stos
je
pusha
cltd
fidivs
sarb
sub
jae
or
iret
add
cwtl
das
mov
push
mov
push
popa
into
js
xorb
cwtl
fsts
je
add
scas
loopne
pushf
push
repnz
test
jmp
mov
inc
scas
dec
mov
pop
addl
add
xchg
or
in
xor
and
jns
and
sub
lahf
orb
fimuls
mov
xchg
jecxz
cltd
mov
loopne
mov
sbb
jb
loopne
repz
das
push
leave
mov
cmp
rclb
jl
dec
mul
stos
xor
fstpt
add
add
xor
sbb
or
adc
mov
xor
mov
scas
repz
dec
push
pop
cli
adcl
adc
pusha
cld
add
cli
hlt
xchg
sbb
testb
mov
dec
inc
inc
mov
xor
scas
dec
push
outsb
outsb
ficomps
lea
insb
pushf
jp
clc
js
insl
stos
push
mov
lods
sahf
ja
cmp
stos
mov
int3
int
dec
and
pop
into
ret
insb
jo
adc
sbb
pop
divb
out
xor
ja
subb
bound
rorb
orl
xchg
pop
adc
sbb
lds
imul
inc
mov
jo
loop
xor
int
push
mov
sub
cmp
xor
jns
aaa
adc
and
bound
and
lea
insb
cmp
pop
cmpb
xchg
les
orb
push
scas
mov
jo
aaa
sbb
subl
mov
mov
fiadds
add
dec
imul
push
dec
mov
imull
data16
daa
ja
dec
jae
mov
insb
jle
or
arpl
sbb
mov
icebp
out
dec
ficoml
jno
mov
shrl
inc
xorl
sbb
dec
cmp
pushf
ret
jge
pushf
xchg
jl
and
mov
xchg
sub
inc
inc
daa
push
loopne
mov
cmp
push
pop
xchg
and
jo
lds
fcompl
and
add
dec
mov
inc
jl
stc
in
jb
nop
dec
xor
jmp
pushl
sbb
arpl
xor
jo
lea
sub
lods
cmp
mov
add
cltd
pop
mov
inc
fs
mov
fs
flds
sbb
cs
fwait
mov
mov
pop
xlat
sbbb
jg
xchg
mov
jne
les
jo
sub
dec
cmp
fmul
scas
jns
mov
test
push
outsl
pushf
jmp
fisubrs
adc
xchg
repnz
daa
jle
jecxz
mov
dec
xor
inc
outsb
jae
std
test
push
push
mov
mov
cmp
andb
cmpsb
jae
jbe
cmp
fmuls
in
mov
dec
clc
mov
or
outsb
pop
mov
outsl
aaa
add
in
fadds
sub
mov
test
push
pop
int
cmpsb
jae
sub
jge
or
popf
outsl
cmp
mov
enter
dec
push
ljmp
imul
jl
leave
xlat
adc
int3
daa
sbb
mov
push
daa
aas
sbb
fsubrl
xlat
jmp
xor
shlb
lock
xor
rorb
cmpsb
xor
mov
mov
add
mov
ret
popa
nop
dec
and
insb
es
add
lahf
jbe
adc
push
ss
xchg
sub
push
jmp
push
dec
outsl
mov
and
adc
pop
mov
cmp
xchg
out
je
mov
sub
out
imul
wbinvd
xchg
stos
daa
push
popa
mov
jp
js
xor
sub
push
std
add
mov
cwtl
jmp
lea
mov
sub
mov
pop
aas
push
sub
xor
inc
pop
mov
clc
or
aam
inc
pop
sbb
pop
pop
mov
imull
gs
xchg
jb
in
popa
xor
lods
sub
ds
mov
std
dec
mov
sub
and
mov
stos
sub
push
pop
stos
clc
into
push
push
inc
sahf
and
fstps
or
sub
mulps
sbbl
lds
pop
repnz
inc
out
dec
push
cmpsb
mov
sub
scas
aad
mov
or
mov
add
xchg
lds
sarb
mov
lea
hlt
xchg
mov
pushf
inc
mov
ljmp
push
xor
int3
punpckhbw
adc
aaa
loopne
idivl
es
orl
pusha
add
inc
mov
jl
adcl
sbb
mov
adc
lcall
push
loope
cli
stos
bnd
sub
pop
orl
add
pop
rcll
sub
lods
push
push
mov
xor
jbe
loope
dec
mov
mov
add
adc
cmp
ret
push
mov
mov
push
shrl
xor
inc
sub
nop
pop
mov
mov
pop
xchg
shrb
jecxz
cltd
sbbl
or
sub
iret
test
out
fisubl
fbld
mov
add
cld
pusha
aam
mov
fsubp
aaa
and
cmp
movsl
subl
sub
add
sub
push
mov
jmp
adc
cmpsl
dec
lods
fiaddl
mov
test
cli
cmp
inc
and
test
lods
dec
aam
jl
insl
enter
pop
push
stc
cli
pop
mov
sarl
out
cmp
lock
sub
test
and
cmp
pop
repz
sbb
sub
jle
push
inc
inc
push
push
dec
add
push
mov
js
bnd
mov
enter
lods
movsb
orb
fcomi
pop
sub
pop
ret
pop
adc
dec
scas
pop
dec
imul
fwait
mov
in
jecxz
ret
jmp
mov
lods
incl
inc
outsl
mov
push
xchg
cmp
jecxz
aad
jb
mov
adc
dec
pushf
mov
dec
xor
pop
xor
cmc
sbb
adc
fldcw
orl
popa
jo
add
pushf
lea
xor
cmp
mov
adc
push
and
and
push
pop
mov
xchg
mov
jns
test
jle
xor
xlat
insl
cmp
xchg
mov
sub
xchg
adc
pop
push
cld
push
or
and
rorb
mov
sbb
and
test
aam
pop
xchg
xor
dec
fildl
in
dec
inc
into
into
push
aaa
inc
mov
bound
imul
jg
xchg
repnz
inc
lret
or
int
add
pop
nop
mov
sbb
lea
sub
cltd
ss
clc
test
arpl
rdpmc
mov
repz
push
mov
pusha
mov
movsl
stos
imul
stos
loopne
iret
cld
add
and
xlat
repz
mov
les
es
cli
insb
jmp
add
pop
xchg
out
hlt
jnp
pop
out
iret
jbe
add
mov
dec
out
jnp
lock
mov
mov
cwtl
jg
dec
and
ss
popf
cli
sub
adc
xchg
lods
xor
sbb
inc
push
lods
js
or
out
lret
gs
icebp
leave
inc
out
into
sahf
sub
inc
jnp
jo
inc
dec
movsb
popf
and
xor
cmp
dec
enter
inc
cltd
cmp
popa
es
ss
push
sbb
fcompl
push
fsqrt
jno
cs
xor
hlt
mov
incl
jp
xchg
adc
pusha
addr16
outsb
or
adc
xchg
and
js
test
mov
jmp
je
loopne
adc
les
sub
xchg
lea
push
stos
or
icebp
int3
outsl
add
cmp
sbb
arpl
or
cmp
cmp
inc
inc
daa
and
arpl
les
loop
sbb
sarl
add
xchg
sub
inc
out
cltd
lock
sbb
fisubrs
ret
jbe
test
fildl
out
sub
es
shlb
loop
stos
mov
sti
dec
xor
fisttpll
push
arpl
popa
incl
mul
jmp
out
aaa
jge
sbb
scas
fcomp
call
into
shl
and
ret
imul
xor
movb
sub
add
or
mov
stc
adcl
in
add
div
aaa
test
arpl
pop
and
push
mov
dec
mov
add
sbb
sub
bndstx
push
enter
push
pop
test
fldt
pop
lods
mov
push
push
cld
push
jl
test
push
jbe
enter
jne
xchg
pusha
xor
fsubrs
push
negb
and
aad
ret
outsb
dec
mov
jle
bnd
add
cld
enter
dec
adc
mov
dec
jne
mov
out
xorb
mov
icebp
mov
dec
lods
mov
test
jp
xor
lahf
add
stos
and
pop
cli
pop
popa
lcall
test
mov
push
insl
push
dec
movsl
adc
bsr
sbb
fcomp
scas
mov
dec
dec
cmp
xchg
repnz
push
in
adc
xor
loop
sbb
outsb
bound
jb
push
mov
mov
test
push
imul
mov
and
jg
lret
mov
lods
out
dec
push
jae
fildll
scas
in
aas
push
pop
fstpt
lret
scas
and
ljmp
fistpll
mov
shrb
pop
cmc
xchg
lods
pusha
ljmp
fld
adc
and
push
int
fistpll
mov
jnp
call
cmp
adc
or
std
pop
repnz
pop
push
dec
aam
loope
jae
aas
test
xchg
adc
mov
and
and
les
pop
stos
or
push
push
mov
mov
xor
cmp
out
push
mov
cmpsb
cmp
cmp
cmp
imul
jns
mov
or
lret
mov
andl
cmpsb
stos
in
mov
jbe
or
out
pusha
inc
or
dec
inc
push
aam
sarb
lcall
pushf
pop
mov
ja
pop
test
mov
cltd
mov
loopne
adcb
es
pop
push
mov
mov
in
mov
lock
sbb
xor
inc
mov
sbb
jmp
test
subb
fistpll
adc
xchg
sbb
shrl
xchg
inc
rorb
xor
in
add
scas
rolb
jmp
movsl
jo
lret
add
rol
add
or
std
xchg
mov
dec
out
cmc
adc
loop
stos
repz
xchg
sub
mov
shlb
jno
xor
add
les
dec
loop
mov
insl
shr
lods
in
xor
cmp
mov
into
mov
xchg
popa
popf
mov
mulb
adc
int3
gs
iret
inc
jp
repz
or
cwtl
inc
and
les
loope
mov
call
imul
xor
cmp
mov
push
mov
mov
cmc
jo
or
lods
enter
sbb
incl
mov
rclb
sbb
or
pop
lock
pop
or
cmpsl
jecxz
shrl
mov
popf
sub
adc
jp
xchg
add
pop
psrlq
faddl
pop
arpl
shl
add
fs
and
std
cli
sub
mov
and
xchg
mov
or
sub
pop
add
outsb
call
scas
js
in
dec
pushf
data16
jecxz
fs
cmp
cmp
mov
pop
ret
fadds
bound
sub
loope
sbb
mov
test
test
push
sbb
adc
out
ss
popa
inc
in
jnp
adc
jns
stc
test
hlt
jae
loopne
es
push
mov
repnz
jae
aas
add
ret
loope
idivl
repnz
pop
mov
in
jnp
cs
cld
and
mulb
in
cld
test
cmpsl
lds
sti
or
sbb
jmp
and
cmpsb
aas
sbb
aaa
and
ret
subb
mov
or
dec
xchg
dec
shlb
sub
push
pop
stos
sub
dec
xchg
and
mov
ret
mov
jb
push
pop
ds
sbb
sub
dec
fidivs
xchg
adc
cmp
pop
inc
cltd
insb
addr16
lock
sti
add
mov
pop
jmp
inc
fcomps
js
jmp
and
in
sti
into
mov
mov
orb
inc
and
mov
cltd
les
jbe
jecxz
cmpsl
lock
ljmp
decb
pop
pushf
outsl
pop
out
pushf
lret
or
jl
imul
aas
sbb
xor
dec
insb
mov
pop
push
sarl
movsb
loopne
cltd
fistl
mov
xor
addl
dec
sar
and
insb
out
sub
push
jno
test
cmp
cs
hlt
xor
mov
and
scas
ljmp
add
push
jp
in
jb
stc
addb
xor
cmovns
mov
sahf
outsl
mov
add
and
push
add
sbbl
sar
lret
repz
lahf
jno
repz
and
or
xor
mov
cmc
mov
ja
xchg
adc
stc
mov
cld
movsl
cmp
xchg
pushf
popa
push
or
cmp
push
mov
push
pushf
les
fiaddl
inc
arpl
pop
dec
add
adc
test
sub
mov
test
fldl2t
pop
inc
lods
pop
cmpl
xchg
sub
jns
mov
int
lods
pop
mov
cmp
cli
dec
cmp
mov
and
adc
inc
test
in
pop
sbb
add
xchg
push
fistpl
cmpsl
sahf
push
jg
mov
push
mov
push
lret
leave
or
add
push
sub
loopne
or
or
fbstp
sbb
sub
out
cmpsb
jne
mov
push
in
sarb
movsl
fnsave
xor
cmc
fdiv
dec
andl
mov
iret
test
pop
aam
xchg
push
inc
xchg
pushf
call
pop
aam
outsb
test
mov
bound
jbe
lret
cmpsl
add
inc
addb
sbb
inc
insb
lea
mov
in
popa
nop
dec
xchg
jo
icebp
inc
cmpb
mov
js
inc
mov
shll
jmp
mov
push
jo
es
xor
jns
hlt
lret
push
repz
jno
push
push
jmp
cs
insb
gs
into
cwtl
dec
nop
int
fimuls
jmp
addr16
lods
add
push
xor
fbld
mov
dec
inc
outsl
leave
or
inc
dec
jecxz
inc
push
jecxz
test
loopne
inc
xchg
movsl
std
pop
xor
nop
sbb
pop
adc
inc
es
cmpsb
push
sub
xchg
sub
fimuls
xor
add
mov
fneni(8087
sbb
or
fiaddl
lock
fdivrs
call
fdivl
iret
mov
xor
addw
sti
pop
cmp
jne
movsb
fstpt
insl
je
pushf
xchg
push
int
adc
push
adc
stos
jnp
into
push
inc
jl
ds
add
cmp
mov
lods
inc
mov
lahf
nop
pop
in
push
push
insb
push
int3
adc
mov
shll
jle
enter
xor
cld
data16
push
or
xor
mov
popl
xchg
nop
mov
insl
daa
and
cwtl
leave
xlat
mov
sub
lods
add
ds
jno
punpcklwd
insl
pusha
addb
das
pop
jno
mov
cmpsl
xchg
jg
jne
clc
cmpsl
test
stos
fwait
repz
push
test
xor
xor
outsl
push
inc
inc
mov
cmp
cltd
std
stc
scas
sub
dec
out
add
sti
inc
dec
rcll
out
or
in
ficoml
sub
outsl
enter
and
or
cmp
mov
cmp
insl
and
pop
adc
cmp
test
enter
fimull
addr16
xchg
loope
test
sub
popa
out
into
out
push
adc
adcw
jbe
adc
insb
jmp
int
cmp
adc
xor
mov
cs
mov
push
mov
popf
or
loope
adc
in
push
dec
inc
loopne
sub
sbb
rcrb
sbb
xor
adc
xchg
adc
popf
mov
pusha
sub
xchg
xor
ljmp
add
jno
or
cmc
fdivr
lods
hlt
ds
xchg
mull
jle
pushf
test
call
pop
jmp
sahf
jo
inc
add
ret
jnp
xchg
in
pop
es
js
jle
sbbl
dec
out
dec
xor
cmpsl
nop
clc
pusha
mov
testl
jnp
insl
cmpsb
push
add
xchg
shlb
testl
adc
rcrb
push
sbb
sbb
jae
xor
mov
movsb
cmc
bound
orb
mov
sub
decl
jmp
mov
rolb
mov
rcll
test
mov
dec
cli
sbb
mov
lret
sub
adc
mov
xchg
aad
inc
das
and
shlb
outsl
mov
add
inc
stc
and
jmp
xor
loop
mov
nop
or
xchg
pop
and
inc
lea
mov
aam
dec
xchg
idivb
iret
add
cmpsb
cs
cmp
adc
xor
and
cli
push
lcall
mov
arpl
addr16
mov
add
je
rclb
push
xchg
cmpsb
iret
pushf
mov
popf
faddl
push
mov
push
push
cmp
push
cmp
ret
insb
js
sub
sbb
add
jbe
add
jne
inc
nop
mov
add
lahf
sub
test
sbb
lret
insb
imul
loop
jp
loopne
xchg
xor
cmp
rcrl
in
adcl
jg
sub
rorl
mov
xor
int3
stos
mov
pop
or
outsl
xor
mov
xchg
mov
pop
add
add
pop
inc
mov
rep
addr16
xchg
mov
bound
cmp
jbe
pop
xor
mov
dec
sbb
add
fwait
mov
mov
movsl
adc
mov
stos
test
icebp
cmpsl
cltd
cmp
rep
iret
pusha
mov
add
xor
dec
fnstenv
in
pop
pop
and
inc
sbb
ret
mov
fwait
subl
rcrb
cmp
jmp
add
addr16
into
mov
call
cmpsb
mov
mov
repz
insb
push
lods
xchg
and
mov
fdivl
lahf
out
sbb
int
das
xchg
stc
into
jle
ss
in
jno
fwait
test
mov
mov
cmp
inc
clc
jbe
adcb
inc
push
jne
jns
flds
adc
cltd
sub
pop
sub
clc
and
cmpsl
and
leave
mov
out
add
pop
mov
ja
imull
imulb
dec
das
push
sbb
loope,pt
jl
cmp
or
mov
clc
loope
and
pop
adc
pop
test
xchg
inc
mov
mov
inc
inc
pop
arpl
popf
inc
jmp
sbb
popf
sub
test
mov
sbb
push
xor
scas
jo
les
mov
cmc
es
mov
push
adc
ds
jno
and
add
xchg
iret
pop
cmpsl
pop
lahf
sub
popf
mov
fstps
mov
loope
mov
lock
daa
jbe
inc
xor
sub
jnp
data16
mov
daa
mov
mov
cmpsb
loopne
xor
adc
mov
add
ret
inc
out
pop
and
xchg
loope
dec
fwait
or
dec
jecxz
mov
lret
out
outsb
or
outsl
or
faddl
mov
sbb
pusha
mov
jb
lods
jmp
push
adc
or
scas
pop
mov
daa
add
pushf
mov
loope
bnd
sbb
das
ja
sbb
inc
sbbl
xchg
inc
ljmp
jecxz
pop
cmc
inc
sbb
jne
pop
mov
pop
cmpsb
mov
iret
pop
mov
push
push
movsl
dec
hlt
mov
dec
jge
add
sbb
sub
dec
add
rol
popa
sbbl
in
mov
jmp
cmp
cmp
xor
sbb
pusha
xchg
out
sti
pop
push
addr16
xor
jo
jnp
push
sahf
lods
pop
mov
and
jns
pusha
imul
push
lock
out
test
sbb
cmp
cltd
sbb
pop
fidivs
lahf
lods
movsl
jmp
push
xchg
das
xchg
dec
ret
xchg
out
xchg
sbb
fiadds
mov
mov
int
xchg
dec
ret
jo
add
mov
adc
push
xor
and
aam
pop
mov
xor
inc
insb
std
das
mov
mov
push
dec
faddl
dec
cmc
jno
enter
in
dec
mov
insl
idivl
pop
xchg
test
mov
das
in
sbb
jo
sbb
push
movsb
lock
std
inc
mov
jns
jecxz
xchg
xchg
add
inc
pop
rcl
test
fsubl
and
xorb
pop
pop
inc
test
arpl
cli
mov
mov
cmp
fldl
xchg
jcxz
and
scas
pop
ret
cmpsl
pop
mov
jno
xchg
test
out
or
out
xchg
pop
lret
sbb
inc
rcl
dec
adc
and
jae
pop
xor
fcomps
outsl
nop
test
add
mov
test
movl
xor
adc
inc
mov
dec
loop
push
arpl
dec
pop
cmc
sub
xor
fsts
mov
leave
jmp
or
adc
icebp
es
inc
fisttpll
cmp
inc
sub
out
lds
jecxz
sarl
inc
dec
in
std
dec
pop
xor
or
ret
in
rcrl
fldcw
shlb
pop
cwtl
add
loopne
push
movsl
int3
std
mov
test
pop
xlat
addr16
inc
stos
mov
push
rcrl
fiadds
and
in
fldcw
jno
test
test
jge
and
dec
imul
mov
jbe
sbb
or
mov
push
push
dec
jmp
dec
xor
jecxz
es
push
dec
in
cmc
cmpsl
outsb
cmp
scas
fs
scas
sbb
leave
imul
jnp
or
popl
sub
jle
push
mov
mov
jno
fistps
fwait
sbbb
dec
mov
adc
adcb
in
or
xchg
arpl
xor
mov
jnp
popf
xor
ja
mov
lods
frstor
xchg
rolb
sub
iret
mov
clc
or
xchg
pop
mov
or
stos
pop
nop
jbe
imul
mov
xchg
scas
xor
and
and
fwait
dec
stc
mov
adc
out
in
sbb
adc
cli
out
outsl
dec
mov
and
les
fistl
push
fadd
fidivl
pop
repnz
sub
in
scas
push
enter
fnstsw
sbb
sub
mov
mov
icebp
xchg
sbbb
pslld
pushf
add
fildl
push
push
mov
arpl
add
inc
enter
sub
lods
jmp
cmpsb
add
add
add
bound
ss
push
in
enter
push
add
xor
rorb
das
xor
je
out
xchg
xchg
imul
push
enter
aam
cmp
fsubs
ds
and
cltd
jae
stos
je
inc
divb
mov
aam
outsb
es
data16
dec
inc
sub
pop
outsb
loope
mov
cmp
aad
mov
jb
dec
sub
xor
push
fldenv
fstps
test
mov
mov
inc
pop
or
in
push
add
jge
or
xlat
pop
dec
xor
ja
mov
dec
lea
mov
clc
pop
dec
push
push
mov
xor
mov
shrb
xor
jl
push
mul
push
mov
xchg
pop
test
dec
jnp
push
loopne
fs
sbb
push
jmp
mov
push
jp
fidivrs
xchg
jae
stos
nop
sbb
adc
pushf
into
mov
mov
push
outsl
cmp
mov
cmc
push
stos
andl
adc
cmp
jge
decb
or
aaa
cmp
cld
mov
mov
sbb
jl
les
sti
das
add
xchg
lcall
imul
mov
sub
cmp
xchg
jecxz
xor
mov
cltd
je
xchg
lret
pop
cwtl
xor
xchg
out
lret
rcrb
movsl
and
sbb
ret
int3
arpl
or
cmp
jge
int
aas
mov
fcompl
pop
sti
mov
hlt
mov
dec
jl
mov
gs
jmp
or
pop
enter
xor
cmp
xor
xor
or
popf
push
push
jns
cltd
bnd
cmp
test
outsb
pusha
insb
jle
enter
out
dec
js
sbb
push
pop
ja
out
roll
repz
cmp
cmc
lcall
cmpsl
xor
lret
mov
xchg
mov
inc
push
and
fwait
cmp
shl
gs
add
pop
cmp
outsl
pop
dec
inc
shl
or
add
lcall
push
in
inc
push
dec
rorl
dec
push
ret
sub
xor
push
into
cmc
popf
mov
adc
test
hlt
outsb
gs
push
cmp
sbbb
add
mov
add
popa
sti
push
mov
cmp
jmp
repz
into
out
add
test
jmp
dec
cmovns
push
sbbl
aad
int3
mov
divb
clc
and
nop
stc
cmc
lret
pop
jg
or
call
dec
pushf
cmp
subl
mov
sbb
cmp
mov
scas
in
push
dec
cmpsl
mov
pop
shll
inc
mov
mov
mov
movsl
fdivs
rcrl
push
std
push
mov
xchg
dec
cmc
pop
addr16
adc
loope
in
lret
mov
repnz
xor
jns
jae
aad
add
orb
sbb
aas
xchg
ret
jmp
imul
into
mov
xor
ds
js
ficompl
dec
mov
or
xchg
sbb
cmp
or
imul
in
adc
pop
std
and
lret
xchg
sbb
mov
adc
xchg
out
xor
sub
call
jo
mov
mov
xorl
cmpl
stc
pop
fmull
pop
adc
imul
int3
daa
xchg
fcoms
mov
das
mov
cmp
jp
mov
pop
clc
dec
fisubl
int
cltd
lea
or
push
aad
inc
pop
into
pop
pop
push
mov
lret
xor
shrb
sbb
fsubs
jb
stos
xor
sbb
inc
xchg
pop
adc
add
addr16
mov
push
ja
lahf
or
lcall
pop
pop
cld
jecxz
cmp
rcll
mov
int
jno
mov
cwtl
insl
es
das
push
icebp
mov
repz
mov
push
and
pop
es
les
dec
sbb
stos
or
clc
jmp
bound
shll
mov
pop
prefetcht1
aaa
int3
jge
jns
push
or
mov
and
push
add
lods
push
or
sub
les
xchg
and
stos
jl
mov
or
fs
add
push
adc
adc
pop
addr16
adc
fwait
int3
rol
mov
push
or
test
sti
int3
loop
mov
jne
enter
mov
lods
push
or
sub
les
cmp
jb
push
or
sub
jge
push
roll
mov
or
jle
add
xor
push
xchg
inc
outsb
stos
jmp
cmc
xchg
jo
dec
cmp
push
cmp
scas
fsin
cmp
adc
arpl
pop
or
inc
mulb
decb
test
pusha
adc
jle
int
int
stos
call
mov
push
xchg
fldl
rorb
push
gs
mov
adc
xchg
clc
mov
mov
add
insl
test
lret
int3
pop
repz
pop
sub
insl
push
nop
lods
imul
les
cmpl
mov
or
mov
mov
push
mov
add
fdiv
xchg
push
imul
shl
push
pop
aam
add
mov
cli
inc
xchg
fwait
xchg
data16
jle
lock
mov
cmpsb
mov
mov
xchg
mov
jle
lret
ror
xchg
add
mov
pusha
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmpsl
ret
insb
fsts
jp
mov
sbb
inc
je
mov
sbb
fnstenv
cmp
mov
sbb
fldenv
cmp
mov
sbb
cmp
mov
sbb
fnstcw
mov
adcl
mov
fldenv
xchg
cmp
mov
sbb
fsts
call
insb
sbb
std
cwtl
outsb
add
pop
rcl
stos
xor
dec
add
in
or
adc
fidivrl
fldl
push
mov
aad
xor
fnstenv
push
out
test
dec
int
mov
rcl
sahf
dec
sbbl
mov
inc
push
int
pop
mov
lret
fldcw
xchg
inc
stos
jg
inc
cmpb
nop
mov
mov
or
dec
xchg
jne
icebp
sbbl
mov
jge
outsl
mov
xchg
les
dec
push
shl
mov
cmp
imul
jp
enter
cwtl
imul
repnz
mov
cwtl
add
movsb
sbb
pusha
dec
cwtl
pop
mov
in
and
mov
mov
sbb
sbb
cmpb
cmpsl
adc
cmc
shrb
fcmovnbe
pop
je
aam
imul
mov
into
xchg
scas
hlt
lretw
scas
cmp
sahf
xchg
mov
push
xchg
rorl
dec
hlt
out
aad
xchg
in
push
sub
ja
jns
in
mov
jge
lods
stos
sbb
jecxz
lcall
add
outsb
push
loope
jecxz
sahf
cmp
call
fsubr
inc
mov
gs
xchg
dec
roll
out
pop
dec
test
push
inc
mov
xor
add
xchg
lods
dec
inc
push
xor
cs
loop
ja
sbb
mov
cmp
repz
or
pop
out
mov
div
pop
out
pop
and
lret
outsl
mov
mov
ficoml
pop
pop
loopne
pusha
push
pusha
or
xchg
jnp
mov
push
out
int
xor
sbb
or
das
mov
aam
pop
lret
pop
cltd
mov
stos
sbb
cltd
pop
ja
sub
lds
push
mov
and
sbb
lea
lods
out
cwtl
push
lret
add
out
xor
pop
hlt
fists
or
inc
loop
adc
ret
cs
repz
jmp
pop
cmp
sub
movsl
pop
test
push
aam
jo
aad
sbb
jp
pop
leave
pop
sbb
xchg
jo
pop
shrb
movsbl
loop
adc
xchg
jbe
adc
sbb
cmpsb
sti
dec
iret
mov
lock
es
and
les
mov
sbb
pop
movsl
in
lcall
aas
lcall
dec
mov
pop
cmp
je
sbb
in
repz
xchg
xor
pop
btr
jnp
mov
cmp
adc
push
lods
dec
fisttps
loopne
scas
sbb
and
mov
jle
test
add
cmp
jo
adc
mov
mov
stos
add
lods
sub
mov
push
or
xor
sahf
adc
ret
jl
ret
pop
hlt
ljmp
sbbl
mov
mov
sub
jne
xchg
mov
out
xchg
in
scas
xor
movsl
jae
fwait
aad
mov
pushf
lds
sbb
mov
inc
pop
sub
sub
cmp
jo
les
lcall
jbe
aaa
cmp
add
xlat
in
xchg
push
mov
mov
out
add
test
movsl
inc
push
imul
ret
rorl
cld
mov
xlat
jae
inc
xor
loopne
pop
mov
jno
loop
inc
mov
jle
and
cli
lods
movb
nop
lock
mov
lods
cmpsb
sbb
repnz
cmpsb
je
out
pop
dec
sub
sahf
repz
fsts
stc
stos
add
nop
test
shrb
cmpsl
testl
or
mov
pop
insb
push
cmp
inc
stc
aas
int
cmp
mov
sbb
mov
xchg
jnp
inc
mov
arpl
add
lahf
nop
hlt
add
push
sar
jo
sub
flds
das
in
push
scas
mov
in
ds
and
jb
push
push
fldt
rolb
sbb
dec
aam
test
in
rcll
scas
add
push
or
cltd
pop
add
jae
mov
pop
addl
out
and
and
int
jmp
fs
outsl
cmpsb
xchg
into
cmp
loope
ljmp
adc
dec
push
mov
addr16
push
push
mov
cmp
lock
push
mov
mov
inc
into
push
xor
ret
inc
pop
movsb
add
rorl
mov
pop
push
mov
cmp
scas
in
out
or
push
iret
xchg
mov
idivl
inc
dec
rcrl
rcr
scas
jnp
pop
lea
rclb
jecxz
aaa
jecxz
inc
xor
fistpll
aam
divb
pop
jo
sub
xor
and
pop
nop
stc
aad
out
xlat
js
roll
aas
xchg
mov
cmc
fsubs
mov
inc
xor
mov
mov
lahf
cmpsl
std
push
push
gs
xchg
loop
add
cmp
stos
lret
mov
cmp
jo
mov
mov
test
je
xchg
or
fwait
stos
test
and
pop
sub
outsl
jo
push
pop
cmp
dec
fwait
push
mov
repnz
outsl
mov
je
push
stos
clc
add
cld
lods
sub
in
jns
adc
fxch
test
ffree
jo
cmp
cmp
mov
daa
mov
push
cmp
mov
insb
scas
fwait
add
stos
andl
repz
push
dec
xchg
pop
cmpl
cmp
mov
sbb
mov
sub
arpl
mov
xchg
lods
bound
neg
mov
and
adc
pop
push
loopne
jp
loopne
in
repz
imul
rolb
pusha
push
jns
xchg
lret
stc
sub
sub
sbb
jg
push
xor
and
loopne
ss
jb
idivb
jnp
mov
ss
shr
lret
nop
cmp
rcll
jle
dec
std
movsb
sbb
aam
popl
xor
mov
mov
test
xor
add
cmp
pop
xor
push
mov
cld
and
mov
fstp
pop
inc
jnp
mov
mov
stos
sbb
aas
insl
cmp
push
mov
pushf
fdivl
iret
test
jns
jne
aam
fwait
aad
dec
aas
loop
sub
jnp
lods
icebp
xor
add
mov
push
mov
xchg
jbe
aam
cmp
xor
and
push
mov
les
jae
test
pop
std
cmp
pushl
push
lods
mov
push
fisubl
mov
or
aam
push
fsubrs
fiaddl
sahf
in
dec
push
and
pop
xorb
aam
pop
add
enter
dec
call
in
mov
xor
aad
int
out
push
lret
push
rclb
and
and
enter
add
and
push
icebp
add
push
xchg
loopne
xor
adc
mov
shl
adc
jae
jbe
or
add
xor
rolb
movsl
xchg
pop
stos
xchg
adc
push
mov
xor
scas
dec
pushf
pushf
rorl
js
ret
xchg
push
push
clc
mov
mov
mov
dec
ja
les
es
mov
test
pop
lret
adc
sub
sub
stos
std
fwait
adc
and
sbb
jo
pusha
sbb
push
xor
mov
dec
loopne
ja
cld
shlb
jae
xor
scas
pop
shl
repz
xchg
mov
xchg
std
pop
test
out
push
pop
negl
jg
cmp
mov
cmp
decb
aaa
lret
stc
inc
mov
idiv
aam
aam
loopne
ja
cmp
pop
sub
and
add
lret
scas
jmp
dec
jg
inc
ret
mov
lcall
mov
cld
inc
push
je
mov
sbb
adc
or
mov
jmp
cmc
adc
xchg
sbb
mov
test
scas
hlt
pop
fisubs
jg
fimull
cmpsl
arpl
sbb
or
pop
mov
test
adc
sbb
lret
and
das
add
movsl
add
adc
sti
or
gs
repnz
push
add
out
inc
loopne
xchg
jns
xchg
fucomi
cmp
outsb
mov
int
enter
push
or
repz
lods
mov
inc
in
mov
lea
hlt
lcall
jae
sub
in
sub
mov
rcrb
push
lcall
sarb
dec
or
scas
pop
dec
ret
push
insb
out
mov
and
mov
mov
mov
ret
out
dec
or
sub
clc
push
test
jae
sub
xchg
lock
jp
or
push
outsl
jnp
inc
out
push
daa
cs
add
movsl
out
cmpsb
jmp
in
andl
mov
or
sbb
es
mov
test
cld
pop
les
mov
push
int
outsl
mov
adc
out
adc
push
pushf
call
jb
bound
or
sub
add
aaa
and
repnz
jno
call
inc
ja
dec
cmp
pop
mov
adc
lret
bound
adc
mov
or
inc
push
push
mov
cmpsl
jle
mov
push
sub
adc
stos
std
lahf
inc
mov
mov
addb
out
ror
cwtl
push
inc
insl
push
in
int3
xor
cli
xchg
pop
or
inc
xchg
jmp
insl
movsb
pop
xchg
test
js
mov
shrb
or
popf
sbb
adc
insb
out
cs
and
inc
xchg
and
lret
dec
xchg
or
adc
es
popa
mov
bound
push
in
cmc
cmp
js
add
shrb
fldpi
jecxz
jg
shl
push
fadds
scas
es
and
aad
jle
mov
add
adc
test
xchg
aad
subb
push
xchg
adc
xchg
in
mov
cmp
sahf
xlat
dec
sbb
hlt
mov
cmp
or
adc
int3
push
ret
dec
cmp
bound
inc
jno
pop
lcall
aaa
or
mov
inc
bound
mov
cmp
lea
inc
add
adc
std
ret
into
push
push
pusha
adc
in
and
insl
or
push
daa
adc
xchg
bndstx
push
inc
lock
pop
add
push
cltd
pushf
jp
mov
in
sub
xor
int
cmpsl
inc
movsb
cmp
xor
decb
cmp
jg
mov
cmp
pop
cmp
in
or
stos
into
push
int
int
xchg
xor
cmp
loope
hlt
mov
cld
mov
pop
and
fsubrs
test
ljmp
inc
lahf
pop
push
out
pop
xlat
mov
mov
or
outsb
cli
out
jmp
xchg
jmp
or
xor
jne
xchg
xchg
cmc
sub
insb
jne
xor
xchg
icebp
fstpt
cmp
adc
lock
ret
mov
cmp
mov
lds
mov
imul
in
ret
fcomp
inc
xchg
fstps
addb
mov
ljmp
ret
cli
sti
xor
hlt
xor
rolb
cmpl
sbb
inc
cs
mov
pop
mov
out
sub
push
pop
movsl
jecxz
int
jbe
repnz
mov
jp
data16
mov
inc
mov
hlt
cmp
xchg
sub
jnp
and
push
and
dec
outsb
xchg
aaa
cmp
jl
test
in
dec
lods
jnp
leave
lcall
es
pause
cli
repz
out
call
or
push
lea
cltd
cmc
es
mov
scas
dec
dec
pusha
jle
leave
mov
arpl
pop
imul
adc
jnp
test
div
aam
xchg
cs
sarb
mov
aad
and
bound
jno
neg
aas
fdivrs
movsb
addr16
sub
pop
mov
stos
aas
ja
psubd
jmp
mov
je
cwtl
jne
test
sbbb
mov
test
xlat
out
xchg
leave
fwait
sar
je
cld
std
stc
insl
mov
mov
xchg
xchg
cld
jecxz
pop
jbe
inc
cmp
in
repz
sbb
imul
movsb
or
adc
fs
mov
jb
outsb
push
sbb
daa
push
inc
jnp
je
rorl
jnp
cmp
fisttps
xchg
jle
xchg
out
orb
imul
insl
add
xlat
push
jmp
inc
adc
jo
sbb
fistpl
adc
stos
or
or
inc
xchg
int
aam
jae
pop
and
imul
xlat
or
jae
shrb
add
orb
push
fnstsw
sub
jb
sbb
jo
xchg
jns
mov
pop
int3
ret
and
insb
sarb
adc
out
icebp
adc
and
jle
sbb
movsb
lock
and
pusha
mov
iret
lea
mov
pop
loope
out
hlt
inc
jae
repnz
movsl
or
push
les
push
add
fadd
loope
ja
loop
int
loopne
imul
jno
push
sti
push
aam
xchg
jne
cmpsb
push
sub
sbbb
decb
rcrl
pop
popf
test
rcrl
push
fnstsw
sbb
loop
fstpl
xchg
jl
sarb
or
mov
push
jle
inc
fwait
addr16
popf
dec
cmpsb
movsl
or
jne
jmp
push
ljmp
mov
mov
loopne
mov
mov
xor
sti
jmp
jbe
xchg
fidivrl
cmp
lods
and
mov
out
mov
ja
ret
fucomi
es
iret
mov
sub
mov
nop
adc
xchg
inc
shrb
mov
movsb
cmpsb
pop
xchg
inc
mov
dec
shrl
dec
xchg
push
xor
int
pop
sub
or
cmpsb
mov
mulb
aaa
fists
ljmp
mov
mov
imul
push
pushw
mov
std
hlt
xor
mov
mov
idivl
dec
insl
mov
lds
std
and
mov
aam
test
adc
mov
xorb
inc
mov
gs
lret
cmpsl
cltd
xchg
in
lods
fisubs
sahf
jns
inc
ss
inc
incl
xor
lret
jne
jp
push
add
pop
xchg
push
pop
mov
arpl
imul
sbb
push
mov
push
aaa
mov
lods
fwait
adcl
xor
sub
cmp
das
pop
inc
jnp
mov
outsl
pop
inc
xchg
loop
adc
filds
js
data16
enter
add
or
repz
push
xor
pop
or
das
add
ss
or
mov
cmpsb
and
inc
push
jp
int
enter
and
xor
or
arpl
mov
lods
add
push
pop
or
pusha
pop
ret
rolb
or
sbb
mov
and
scas
shrb
jmp
sub
pop
ror
lahf
inc
cli
loopne
sbb
lods
xchg
inc
in
adc
rcll
je
mov
repnz
cltd
lock
inc
jns
gs
cmc
insl
push
mov
mov
sbb
or
stos
inc
and
das
mov
mulb
adc
adc
add
mov
xor
out
es
sub
push
inc
mov
shlb
fidivrl
or
mov
mov
lahf
aas
cmp
movsl
pop
aad
mov
pop
rol
adc
or
lcall
test
call
mov
pop
test
int
idivl
adc
sbb
outsl
xchg
push
jno
cwtl
dec
sbb
jno
scas
dec
or
data16
pop
fcoms
xchg
or
movl
cmpsl
mov
jp
xchg
cmc
dec
or
neg
xchg
xchg
sub
aam
mov
mov
mov
push
mov
cmp
std
mov
sub
clc
mov
xor
add
mov
inc
dec
mov
leave
and
loop
ds
jnp
dec
je
sub
xor
and
xchg
popl
rcrl
push
into
mov
inc
pop
in
add
imul
mov
jecxz
loope
cmpsl
das
gs
mov
enter
loop
adc
push
push
cmp
add
cmp
push
lcall
inc
ret
jne
adc
jae
fwait
dec
inc
fdivs
dec
inc
push
adc
mov
jb
and
mov
jmp
imul
xchg
dec
inc
fcoms
lds
pop
out
sbb
cmp
push
in
movsl
aad
in
fndisi(8087
pop
and
jno
jne
and
cmc
sahf
shl
sbb
or
sbb
mov
adc
aas
sbb
fs
adc
movsb
jg
ret
or
sahf
inc
out
mov
xchg
stc
out
scas
or
stos
pop
cmp
push
mov
and
pop
mov
add
clc
inc
jge
adc
idivb
fcoms
push
cmpsb
adc
aaa
jmp
dec
mov
jnp
sbb
mov
inc
push
call
sbb
insb
shrl
daa
xlat
lock
sub
sti
mov
cmp
or
loope
and
pop
pop
lock
push
arpl
insl
add
dec
out
addr16
mov
mov
mov
jne
daa
lret
mov
jb
ljmp
push
jl
loop
fldl
and
xchg
jp,pt
sub
sub
aad
mov
pusha
ja
or
mov
in
mov
or
lret
and
lods
jg
faddl
or
leave
popf
or
xor
dec
aam
dec
mov
ljmp
or
sbb
fbstp
lods
cmp
xlat
jge
movsb
xchg
and
mov
jmp
cs
cmpsl
cli
xor
mov
icebp
lods
xor
push
sub
mov
mov
outsb
out
sbb
movsb
adc
imul
inc
cli
rcrl
mov
mov
mov
sub
fdivrl
mov
jno
mov
adc
xchg
sahf
hlt
mov
aad
test
ljmp
xchg
mov
test
lcall
aaa
jo
mov
adc
arpl
mov
jbe
xchg
repnz
pop
lahf
inc
pop
rorb
call
idivb
mov
xorb
push
jbe
mull
sbb
mov
sbb
pusha
test
xor
sarb
insl
jb
push
push
jp
fs
aam
fwait
sub
call
enter
icebp
inc
pop
mov
jg
sbb
push
pop
push
dec
cli
enter
mov
push
jmp
popf
pushl
daa
cmc
xchg
or
repz
xor
inc
inc
mov
loop
pusha
out
icebp
xchg
mov
mov
sub
in
popa
mov
add
dec
fstps
xchg
dec
scas
jne
sbb
fcmovnu
inc
xor
mov
pop
xlat
gs
inc
mov
insl
pop
ljmp
lret
xchg
inc
pop
push
pushf
cmp
cmp
popf
pop
sbb
xlat
pushl
aaa
xchg
shl
or
lds
inc
repz
pop
in
xchg
dec
popf
movsl
repnz
add
pop
push
fisttpll
sbb
stos
xorb
xor
sarb
push
lahf
jb
fldl
add
cmp
rcr
mov
in
mov
out
cld
ds
pop
and
test
lods
out
nop
push
mov
aad
stc
ss
int
data16
es
jne
fstpt
mov
pop
inc
test
mov
imul
mov
push
popf
pop
adc
jge
jle
jl
imul
or
adc
test
xchg
pop
movsb
mov
adc
and
sahf
insb
decl
mov
pop
xchg
pushf
add
lock
adc
sub
clc
sub
mov
add
stos
cmpsb
outsl
lea
lea
push
push
and
sbb
ljmp
decb
popa
aas
mov
sahf
insb
test
clc
call
shrl
pop
loopne
pop
and
push
sub
jmp
imul
xor
xlat
les
or
push
push
and
rcll
push
mov
out
clc
aad
sub
loopne
inc
jae
or
aad
lcall
xor
sub
dec
leave
imul
push
shrl
and
ret
imul
jae
mov
mov
push
dec
in
pop
aad
in
push
add
pop
inc
mov
push
daa
sbb
xor
arpl
jno
sbbb
and
fs
push
add
repz
test
fs
aas
jp
lods
push
ret
sub
pop
xor
jmp
pop
mov
aaa
outsb
add
dec
adc
test
mov
mov
dec
xchg
loopne
stos
cltd
sub
xchg
push
lea
dec
incl
mov
fidivl
popa
outsl
lret
pusha
jge
inc
inc
enter
inc
dec
je
movsl
mov
jge
mull
jl
mov
xor
lds
jp
push
jge
lock
jno
cmp
js
mov
hlt
adc
cmp
mov
adc
mov
rcl
out
aas
ss
jo
sbb
add
out
adc
adc
icebp
dec
cmp
popf
ds
data16
sbb
xchg
fidivrl
sub
jg
int3
shl
and
in
ficoml
pop
inc
sbb
ss
rcrl
incl
popf
dec
outsl
adc
push
inc
lahf
scas
iret
xlat
test
mov
leave
add
adc
rep
inc
sbb
dec
jbe
nop
dec
outsb
sbbb
adc
movsl
mov
aad
mov
and
loope
jp
daa
loopne
loopne
jle
pmullw
push
xor
lods
xchg
mov
push
add
out
insb
daa
xchg
lods
pop
sbb
and
or
pop
add
les
adc
sub
xor
push
mov
repnz
mov
cwtl
jp
lock
in
mov
sbb
mov
pop
js
push
les
sbb
orb
mov
sub
xchg
mov
jns
adc
push
mov
mov
mov
lahf
xchg
sbb
fistpll
add
dec
test
pop
push
xchg
mov
in
mov
leave
fwait
pusha
sbb
ficomps
push
sbb
xlat
out
popa
mov
cmp
dec
inc
dec
xor
data16
mov
xchg
jne
pop
movsb
push
idivl
dec
mov
lods
cmpsl
push
jno
push
inc
dec
pop
inc
scas
jl
outsb
cmp
sub
mov
dec
cltd
lret
scas
ficompl
fldenv
push
dec
imul
fs
dec
cmc
in
push
xchg
iret
sub
push
xor
or
mov
in
enter
push
push
sbb
movq
lods
push
les
adc
mov
inc
add
cltd
fnstcw
xchg
inc
cmp
dec
xchg
scas
cmpb
mov
dec
pop
dec
movsb
cmp
sbb
push
lcall
repnz
lea
dec
sbb
ds
inc
mov
test
mov
ret
sbb
arpl
mov
xchg
jecxz
push
xchg
pushf
lret
icebp
stc
adc
mov
andb
cmp
adc
pushf
lahf
aas
jbe
push
pop
jne
mov
inc
or
push
in
das
stos
jns
sbb
cmp
or
inc
adc
and
cmp
inc
lcall
ret
lock
fcoml
cli
xor
fiadds
dec
jnp
call
jbe
sbb
clc
in
scas
mov
rorb
pop
or
pop
lock
call
mov
lcall
iret
adc
out
xor
or
xchg
mov
fsubrp
add
and
pop
dec
or
push
pop
ja
push
fldt
mov
repnz
out
fsubrs
mov
fldenv
sub
mov
push
mov
push
les
cmp
xor
or
lods
xor
push
rcll
scas
lahf
test
jne
imul
outsl
movsl
pop
cmpsl
loop
int
push
sarb
js
pop
cmp
mov
mov
scas
sbbb
icebp
mov
mov
and
insb
inc
lock
fdivrl
jg
dec
cltd
addr16
push
inc
das
xlat
lds
and
sahf
mov
fs
rorl
lcall
les
xchg
sti
and
xor
daa
mov
mov
jo
adc
fdivrl
rcll
repnz
pop
dec
scas
push
sub
sub
popf
xchg
pop
lock
mov
cwtl
bswap
xchg
xchg
test
int
and
idivl
cltd
push
std
loop
test
xchg
xor
movsl
pop
mov
aam
fistpl
jmp
jecxz
scas
scas
test
pop
loope
sub
sbb
repnz
inc
popa
add
insl
cmp
push
dec
ljmp
dec
ja
xor
jns
lahf
and
jecxz
jne
mov
inc
adc
dec
add
daa
xor
pop
mov
movsl
frstor
repz
daa
stos
scas
out
loope
js
orb
clc
and
xchg
fadd
test
pop
cmp
imul
adc
out
mov
subb
pop
lcall
std
mov
mov
push
outsb
sub
add
popa
sbb
fisttpll
imul
cmp
jae,pn
jg
out
pop
push
int
pop
rcl
cmpsb
sub
les
push
cmp
adc
jae
mov
pop
xchg
popf
daa
or
jno
adc
mov
loop
out
mov
or
mov
fsubs
dec
ljmp
add
rcrb
arpl
stc
jge
adc
insl
jbe
fsubs
aaa
and
add
xor
in
jp
out
pop
inc
inc
and
lahf
es
int
sahf
jno
in
push
mov
pop
test
outsb
loop
nop
sbb
cwtl
lea
or
pop
clc
std
adc
xorl
ds
and
fiadds
mov
push
inc
push
pop
xchg
mov
xchg
and
xchg
inc
aas
ficoms
push
or
popf
jb
dec
test
pop
or
mov
xchg
lcall
stos
xchg
and
mov
imul
cmp
cmp
fldt
cmp
scas
in
mov
fidivrs
les
ss
pop
repz
into
xchg
popa
and
sub
cmp
cmp
jmp
sti
add
insl
mov
adc
jae
jl
sahf
fstl
les
mov
in
add
lods
xchg
cmc
es
repz
cmp
rorb
sar
cmp
mov
ljmp
popf
lcall
jl
int3
sahf
or
pop
adc
stos
inc
mov
push
pop
push
cmp
sbb
jnp
dec
or
add
adcb
inc
adc
cmp
and
pop
mov
jmp
push
mov
into
pop
ja
notb
mov
mov
icebp
lahf
cwtl
and
add
daa
inc
push
add
xor
or
mov
mov
call
dec
and
mov
mov
pop
int
pop
push
and
icebp
mov
xor
orl
push
add
adc
popa
cmp
add
lock
mov
repnz
and
leave
jg
rcrb
add
mov
xor
mov
imull
fsubl
xor
mov
fstps
mov
insl
gs
xor
jle
mov
insb
push
repnz
and
loope
stos
lcall
js
xchg
fsubrs
fwait
inc
inc
call
pop
frstor
fbld
cs
sarb
jbe
lea
test
shll
insb
mov
div
jns
add
out
xlat
xor
push
dec
pop
xor
push
fildl
subl
adc
or
fs
mov
popf
jecxz
mov
adc
aas
aam
movsl
in
sub
sarl
pusha
fidivs
and
dec
pop
push
pop
ljmp
in
in
xchg
xchg
push
addb
cmpsb
and
jg
lock
ret
dec
ret
clc
add
jne
push
sbb
or
push
sar
or
sbb
cltd
out
or
test
xor
mov
sbb
arpl
sbb
sbb
add
iret
add
dec
add
jmp
imul
shrl
pop
mov
push
mov
inc
pop
or
sbb
aaa
scas
jno
and
shlb
loope
pop
xchg
std
cmp
xor
cmp
dec
leave
cmp
pop
test
std
mov
testb
fdivrs
xchg
repz
jb
sbb
in
lahf
or
fisubs
pop
dec
pusha
dec
push
adc
cmp
push
out
arpl
xchg
rolb
push
stos
push
mov
stos
arpl
mov
cli
int3
out
push
jg
mov
test
sub
push
stos
mov
leave
pop
push
inc
pop
mov
or
jb
lods
daa
mov
mov
pop
inc
lret
add
pop
jbe
insl
shr
aad
mov
and
inc
and
test
cmp
movl
adc
mov
aad
jbe
jns
sbb
push
scas
subb
add
sub
imul
inc
lret
adc
int3
nop
xchg
lods
loope
push
jg
and
jl
push
push
lahf
sub
pop
sub
sbb
sub
int
mov
push
jbe
pop
imul
outsl
aam
xor
mov
xor
mov
ret
mov
jb
mov
daa
pop
in
inc
inc
push
push
inc
fstpl
or
xor
push
pop
dec
mov
mov
push
sbb
and
test
add
dec
fldcw
leave
jns
fildll
subl
fsubrl
das
fisubrs
jmp
sbb
and
push
lods
in
or
jns
fsubrs
pop
mov
pop
arpl
roll
int3
mov
and
outsb
xor
inc
fsub
mov
popa
nop
jge
je
push
ss
test
filds
or
push
jl
jns
push
mov
or
sbb
cltd
mov
sub
mov
test
mov
xchg
or
cmc
pop
mov
shll
imul
pop
push
rcll
pop
repnz
sub
cmp
mov
sub
rcr
call
mov
mov
or
sub
adc
dec
xchg
xchg
loopne
js
scas
xchg
sub
rcl
andb
pop
jg
ljmp
jb
scas
arpl
lcall
push
xchg
imul
mov
adc
add
inc
sub
mov
or
xor
fidivrs
inc
mov
push
pop
lods
call
incb
xor
sbb
pop
cmpsl
loop
int
push
sarb
js
pop
cmp
mov
mov
scas
sbbb
icebp
mov
mov
and
mov
cmpsl
dec
mov
pushf
mov
sbb
sub
push
fisttpl
jb
aad
mov
stos
inc
les
and
incb
sub
lods
scas
adc
pop
shrb
sbb
daa
cmc
jbe
jbe
sbb
xor
fnstsw
cmp
xor
mov
int
lds
add
pop
mov
out
and
outsb
test
inc
scas
mov
sbb
mov
adc
mov
mov
mov
dec
jne
sub
jecxz
ret
push
inc
int
ret
lods
pop
dec
xchg
das
cmp
dec
notb
sub
aas
out
mov
arpl
push
dec
push
cmc
imul
adc
xor
and
mov
aam
inc
call
mov
push
insb
mov
call
dec
pop
sbb
mov
jb
push
jns
inc
xchg
adc
pop
rolb
dec
or
push
cld
outsl
jp
cwtl
xchg
sti
pop
fiaddl
fwait
mov
inc
decl
and
arpl
cld
mov
daa
xor
cmpsl
ficoml
std
pop
test
adc
ret
jge
jmp
mov
mov
sti
adc
mov
and
push
pop
cmp
push
bound
xor
js
cmp
cmpsl
imul
cwtl
out
enter
dec
rcl
sahf
stos
cmp
out
clc
or
dec
inc
xor
pop
out
push
dec
mov
mov
push
mov
sub
std
pop
pop
sub
push
fsubs
pop
jecxz
sbb
xor
cmp
cmpsb
jmp
lods
andb
pop
adc
push
fisubl
jmp
push
das
shlb
outsb
xchg
andb
add
inc
or
inc
lret
pop
pop
pop
xchg
pop
xor
cmpsl
push
lods
outsl
jo
out
push
out
mov
adc
fisttpl
pop
clc
xor
enter
ljmp
xor
aaa
mov
sub
mov
mov
xchg
ljmp
pop
shrb
dec
inc
repz
arpl
xchg
loop
out
mov
andl
hlt
ret
arpl
ljmp
and
mov
inc
xchg
cltd
xchg
mov
mov
jne
hlt
add
idivl
cmp
add
cltd
adc
push
into
and
jno
sub
or
cld
inc
inc
sahf
push
push
jne
and
or
mov
or
xchg
push
jne
test
ret
lahf
dec
stos
aaa
iret
sub
inc
rep
mov
xchg
jecxz
sbb
pusha
xor
sarl
orl
sbb
push
orl
cwtl
mov
or
pop
outsb
sub
cmc
mov
xor
fildll
or
xchg
stos
fs
adc
cltd
mov
cltd
scas
mov
call
mov
fnsave
ljmp
and
fdivrl
sub
xor
test
xor
pop
sbb
adc
push
ds
into
hlt
jnp
push
adc
insb
fisubrl
jo
movsl
jae
cmc
xor
dec
xchg
sbb
sub
mov
in
outsl
pop
mov
xor
sub
xor
mov
out
shll
cltd
xchg
imul
push
divl
sub
test
aas
in
fbstp
sub
cmp
push
and
push
mov
fidivl
and
mov
inc
jmp
mov
sarb
sub
loopne
repz
rorb
mov
sbb
cmp
adc
outsb
sub
pop
fcomps
arpl
lcall
call
jne
das
xchg
call
ss
fwait
sarl
jg
cmp
mov
cmp
in
sbb
out
ds
stc
jmp
fsubrl
adc
mov
xchg
adcb
or
jne
sub
jb
jne
scas
and
push
popf
cmp
mov
stos
cltd
xor
das
fs
pop
mov
push
std
add
xchg
int3
adc
call
js
push
les
ficomps
test
inc
jmp
or
pop
add
adc
ja
fsubs
adc
test
outsb
into
movsl
mov
inc
call
xchg
xor
add
lret
lods
push
sbb
lds
or
push
sub
pop
repnz
incb
dec
add
ffreep
shr
mov
xchg
sub
mov
push
xchg
popa
pop
mov
jmp
push
sbb
mov
daa
adc
lods
jecxz
inc
int3
test
xchg
clc
mov
loop
push
pop
sar
lock
sbb
in
pop
add
push
sub
test
pusha
xchg
jl
repnz
dec
movsl
push
xchg
jns
imul
pop
movl
lret
sbb
sbbl
mov
ret
or
flds
jge
leave
push
adc
sbb
nop
insb
and
repnz
arpl
cmp
repz
or
jg
insb
popa
lcall
jp
enter
adc
pop
xchg
jg
int
adc
jo
and
pop
xchg
mov
push
xor
pop
loope
xchg
inc
loopne
testl
sbb
in
dec
adc
pop
cmc
ds
dec
adc
ss
stc
and
aas
shlb
push
insl
bound
xor
xor
cmp
ror
jo
aaa
add
push
lcall
fsts
jge
sub
dec
cld
or
jnp
pop
and
repz
jl
ret
sbb
out
into
push
rol
jp
imul
jle
imul
or
repnz
lods
inc
leave
fs
jg
out
dec
test
gs
or
lea
jmp
movsb
dec
cmove
adcb
sbb
mov
mov
xor
dec
mov
arpl
adc
sub
mov
and
or
push
lods
pop
es
and
ret
jne
out
push
fcmovnbe
mov
in
mov
mov
fstl
push
cli
adc
xor
out
and
aas
lock
shlb
mov
cmp
dec
fnstsw
loopne
jecxz
add
pop
push
mov
stos
adc
pop
pop
and
mov
jns
ss
cmp
insb
mov
xchg
mov
and
jnp
mov
call
lcall
test
shrl
jl
cmp
pop
xlat
adc
jbe
mov
mov
out
pop
inc
and
jecxz
ds
pusha
mov
or
pop
xor
movsb
jecxz
shrl
push
dec
cmpsb
push
jae
jns
inc
xchg
in
icebp
or
sbb
pop
add
fwait
outsb
lahf
push
fmulp
sbb
jo
das
fs
push
jb
xchg
stos
or
push
adc
test
add
imulb
je
add
xchg
mov
sbb
ds
lods
dec
movsb
push
gs
mov
push
aam
mov
shll
test
ja
rcll
jmp
hlt
mov
pop
mov
mov
int
test
mov
push
lcall
sbb
leave
pop
inc
aaa
fdivrs
ficompl
jmp
xor
popf
lcall
repnz
dec
mov
shll
mov
add
push
js
fnstsw
push
into
pop
mov
sub
cmp
and
call
sbb
aad
test
mov
adc
pop
mov
jo
jg
mov
jecxz
mov
repz
xchg
sbb
and
and
das
in
testl
xor
sbbl
sub
jo
jnp
adc
fmuls
notb
push
iret
and
aas
call
test
pop
fimuls
add
or
cltd
cmpb
sub
xchg
pop
mov
fmuls
jge
data16
mov
mov
pop
call
scas
xor
mov
sbbb
sbb
jnp
push
xchg
jo
cld
adc
xchg
jle
adc
xor
cld
pop
dec
lods
jmp
imulb
in
repnz
xchg
and
idivl
sbbl
mov
leave
fld
dec
int3
fstpt
orb
mov
xor
scas
mov
pop
mov
xchg
mov
adc
sbb
sbb
jo
mov
fisubl
cmp
movl
jbe
and
or
sbb
add
sbb
into
stos
arpl
movsb
addl
and
lods
fists
adc
push
jb
lahf
inc
mov
sbb
add
outsl
je
xchg
imul
je
inc
cmp
enter
dec
loope,pn
popl
adcl
pop
mov
scas
leave
lods
or
sbbl
mov
cmpsl
xor
dec
adc
imul
popf
inc
pusha
adc
ds
xor
inc
adc
sbb
add
enter
testb
xchg
hlt
or
loope
repnz
jp
and
in
cmp
mov
pop
pusha
or
rcl
pop
lcall
stos
mov
adc
lea
aaa
jns
iret
pop
iret
sar
push
jb
and
int3
sar
inc
mov
and
inc
xchg
ljmp
mov
inc
xchg
dec
jecxz
insl
sbbl
sub
mov
xchg
testl
fdivr
pop
jmp
cmp
popa
and
les
jnp
fst
cld
mov
adc
xchg
out
mov
inc
push
jmp
lods
in
ds
jae
xor
xchg
xchg
aaa
push
xor
mov
cmp
add
push
sbb
pop
cmpsl
push
movsb
lcall
sbb
dec
and
cltd
hlt
adc
inc
add
sub
mov
xchg
popa
mov
nop
test
xor
fimull
outsb
clc
mov
test
add
and
lcall
dec
jmp
aam
xor
fwait
adc
movsb
push
mov
xor
xor
stc
sub
dec
xchg
iret
and
mov
xchg
xor
sub
jne
dec
out
ret
xor
in
lcall
pop
mov
mov
scas
mov
mov
loop
leave
mov
and
daa
insl
rclb
sub
out
stos
ss
sbbb
jnp
push
repz
je
daa
shlb
lds
xor
adc
or
dec
icebp
popf
xchg
push
bound
dec
cmp
sahf
jbe
sbb
add
push
add
adc
ja
xchg
jne
in
and
or
xor
popf
int
out
mov
sub
icebp
repnz
sub
imulb
or
sub
lahf
sti
jbe
aas
xchg
pop
loopne
pop
cmp
push
cld
add
xor
add
dec
xchg
jmp
stos
ficoms
or
mov
xor
movsl
push
scas
je
lea
sar
inc
mov
adc
jp
lret
in
push
incb
sbb
xor
xor
sbb
adc
inc
dec
hlt
test
xor
sbb
push
push
test
xor
scas
xor
movl
cld
xor
sub
subl
xor
fstpt
dec
sbb
fiadds
sbb
and
dec
jo
pop
push
or
lods
cs
mov
es
leave
insl
mov
inc
dec
mov
sti
mov
rcrb
cmpsl
lods
mov
or
push
ja
mov
xor
xor
adc
fildll
xchg
or
sbb
push
cmp
xchg
lret
push
mov
inc
std
push
shll
or
stc
scas
dec
sub
insl
xchg
je
insl
or
dec
mov
xor
add
bswap
out
xchg
insl
mov
and
pop
enter
scas
in
fwait
loope
pop
fnsave
out
push
jmp
adc
mov
mov
in
lock
addr16
add
fildl
mov
dec
aas
jg
pop
mov
jmp
out
mov
push
sbb
pop
cli
or
xchg
xor
pop
inc
in
push
popf
mov
push
xor
xchg
cmp
fmuls
pop
mov
inc
push
daa
enter
cli
adc
cmp
xor
jg
sbb
mov
jb
negb
jge
inc
test
in
fwait
movb
imul
mov
aad
rorb
or
lock
xchg
mov
xchg
pop
xor
stos
nop
out
xchg
push
jns
aas
fucompp
adc
xchg
in
cmc
dec
sarl
shlb
psubq
mov
and
push
mov
out
aas
test
mov
popf
icebp
sti
stc
stos
cld
stc
xchg
mov
mov
cs
inc
fs
mov
je
push
mov
xchg
cmp
fidivrl
jg
cmpsb
cltd
dec
mov
lods
sub
imul
andb
fldl
out
jg
test
xchg
jmp
pop
or
shll
lahf
pop
jne
mov
icebp
jnp
adc
inc
dec
inc
inc
mov
and
jmp
bound
cmp
repnz
xor
pop
dec
xchg
jl
test
in
fwait
rolb
push
or
pop
mov
stos
arpl
leave
mov
aad
into
mov
rcll
inc
pop
or
dec
and
add
fisubrl
cmc
jns
sbb
lahf
lds
les
leave
mov
pop
jg
xchg
pop
sub
shlb
fisubrs
push
pusha
add
ret
aas
mov
arpl
cmp
call
pop
dec
xchg
mov
cmp
testb
or
sbb
flds
stc
sub
push
cmp
xchg
jns
adc
xor
cld
cltd
in
cmc
repnz
mov
popa
popf
inc
cmp
das
pop
inc
fmull
cmp
das
repnz
outsb
roll
stos
xchg
hlt
and
add
ja
mov
pop
sbb
imul
loope
mov
jbe
xlat
and
mov
lock
push
call
subb
pop
pop
ret
mov
xor
std
repz
mov
les
dec
pop
hlt
insl
leave
adc
cmpsl
mov
cmp
divb
xor
stc
dec
loopne
fs
mov
or
or
test
loopne
notl
xor
jmp
gs
shlb
rorb
pop
mov
cld
cmp
sbb
mov
iret
push
popa
push
or
mov
iret
shll
mov
xor
pop
mov
aaa
rcrb
jg
jnp
push
ret
test
xchg
mov
aas
and
cwtl
push
pop
gs
xchg
rcrb
popa
scas
add
inc
mov
mov
jge
xlat
push
or
sbb
adc
sbb
mov
loope
cmp
cmpsb
pushl
js
lret
movsl
imul
std
pop
inc
cld
cwtl
and
push
nop
lret
fwait
scas
dec
dec
enter
enter
jl
push
repz
incl
lret
mov
test
add
lods
inc
popf
je
sbb
add
or
cmpsl
and
lods
mov
adc
arpl
mulb
or
dec
cwtl
mov
out
insb
jne
call
test
jns
jmp
xor
sub
cmp
mov
insb
jae
inc
hlt
or
jge
repnz
mov
rol
scas
pavgb
mov
jmp
int3
jle
xchg
stos
out
pop
xchg
daa
nop
xchg
jl
cmpps
imul
xchg
lret
inc
jl
add
loopne
lret
xchg
popf
inc
mov
loope
mov
sbb
xor
std
lock
and
push
jl
and
aad
dec
lcall
and
mov
les
les
or
add
repz
std
daa
fnstcw
cmpl
sbb
or
lds
jmp
pop
jmp
pop
fcmovbe
lds
xrelease
inc
inc
repnz
movsb
cmp
and
int
inc
lahf
jns
aam
add
jb
jnp
mov
pop
shl
pop
sbb
shlb
dec
out
xchg
dec
lret
rcrb
insl
jmp
hlt
pushw
int
repnz
mov
testb
xor
ret
js
dec
movsb
mov
jne
je
lcall
pop
xchg
sub
adc
les
lds
sti
pop
adc
xchg
mov
or
dec
xchg
xchg
rcrb
push
cwtl
in
addr16
scas
in
out
or
push
shrb
loope
ret
push
and
pop
sub
jl
inc
push
pop
popa
xor
leave
imul
movsb
js
in
jne
mov
cltd
insb
mov
sub
push
nop
jl
pop
mov
repnz
xchg
inc
sub
xchg
cmpsl
int3
push
push
test
lahf
jo
rcll
stos
add
insl
dec
dec
xor
push
add
sahf
scas
adc
and
add
pop
ss
mov
shll
es
into
cli
sub
lret
iret
stos
mov
jne
or
test
xchg
rorl
mov
lea
jbe
rcll
outsb
dec
inc
je
adc
adc
cmpsl
or
pushf
push
fwait
mov
popl
sub
ja
dec
cmp
push
in
pushf
sahf
mov
push
xchg
pop
cmpsl
mulb
inc
mov
std
cmp
sbb
cmp
pop
lahf
xchg
jmp
rorw
aas
xor
out
loope
pop
fs
push
jae
sub
adc
jae
lock
add
jbe
cmp
lds
call
gs
mov
cmp
divb
dec
pop
mov
adc
cmp
push
insb
or
sub
in
scas
or
mov
xchg
sub
pop
add
push
stos
lock
push
scas
or
adc
add
repnz
inc
mov
adc
jecxz
aas
fisubrs
add
repz
sub
aas
sbb
mov
push
pop
or
mov
xor
jnp
pop
repz
mov
sbb
out
cli
mov
xorb
inc
lock
mov
add
les
lds
cmpsl
rol
je
push
mov
cmpsl
pop
mov
stos
add
lods
sub
pop
adc
push
lods
imul
mov
push
mov
hlt
dec
cmp
sub
cmp
aas
mov
mov
ss
out
pusha
push
lea
icebp
adc
inc
sub
fldl
add
and
mov
movsl
dec
rorl
jmp
cld
and
inc
jb
mov
stos
ret
into
dec
mov
jbe
push
cli
clc
inc
mov
cmpl
jp
sahf
inc
or
mov
insl
jne
jne
pop
dec
and
xor
push
xchg
xchg
stos
out
fadd
jae
and
dec
nop
sbb
mov
popa
out
mov
shr
pop
or
mov
cli
test
sti
sarl
in
aad
push
call
repz
movsl
sbb
fcomps
in
lret
leave
mov
push
mov
xchg
mov
addr16
xor
mov
daa
lret
or
cltd
mov
push
aam
xor
mov
fcompl
ljmp
xchg
jae
or
jo
in
inc
sahf
cmp
popa
push
xchg
ds
xchg
mov
cmp
loopne
gs
dec
add
push
add
insl
arpl
loope
rcr
adc
push
aas
push
push
orl
mov
xor
add
orl
mov
cmp
cld
adc
inc
xchg
lock
ror
xchg
xchg
dec
add
xor
pop
mov
repnz
cltd
mov
jp
decl
adc
es
sbb
sub
mov
test
xchg
lcall
mov
adc
hlt
sub
sub
mov
push
arpl
loopne
sti
fiaddl
sbb
aad
fildl
jb
test
push
lods
mov
push
mov
out
push
mov
shrl
lods
adc
lods
rcll
and
jne
ss
push
sub
cmp
pop
les
cwtl
dec
imul
sub
das
push
xchg
cmp
ljmp
jns
imul
ljmp
fisubs
mov
mov
mov
pop
lds
lret
push
aad
push
fiadds
xchg
sbb
ljmp
enter
pop
lods
inc
fdivrs
xor
subb
call
call
cmp
test
in
fs
int
aam
shrb
xchg
frstor
loope
add
and
scas
xchg
adc
movsl
add
inc
test
aas
push
mov
enter
pop
outsl
cmpsl
ss
sbb
jmp
in
jmp
stos
cld
repz
call
mov
or
decb
mov
imul
add
xchg
movsl
sub
andl
int
mov
pop
mov
nop
mov
arpl
notl
mov
stos
into
in
push
mov
xchg
lahf
pop
sbb
mov
or
std
dec
cwtl
cmpsb
sub
cmp
outsl
lret
jne
dec
add
stos
lock
mov
test
scas
jle
jno
sbb
push
cmp
mov
pop
push
inc
sub
xor
add
aam
add
adc
lret
mov
mov
and
fs
add
inc
mov
fsubrp
mov
push
jecxz
dec
pop
call
sahf
cmp
dec
sbb
dec
je
fcomi
lds
cmpsb
ss
mov
sti
mov
xchg
xor
mov
mov
push
pop
pop
stos
mov
jmp
in
dec
es
test
repz
push
xorb
xchg
cli
inc
loop
into
jg
dec
stc
jp
dec
xor
inc
mov
sti
xor
out
fcompl
mov
out
pop
dec
js
mov
addr16
loope
cmp
test
add
mov
daa
lret
push
pop
push
enter
icebp
xchg
iret
sbb
out
movsl
jo
or
lret
les
sbb
lea
cmp
ss
xchg
cmp
push
push
mov
xchg
sbb
push
inc
insl
ds
dec
pushf
xlat
sarb
xchg
inc
mov
dec
lods
mov
scas
ss
push
out
movl
icebp
shll
push
hlt
sub
popa
popa
mov
repz
movb
shll
adc
sub
xor
dec
mov
mov
sbb
popf
dec
mov
add
fidivl
push
ja
push
popf
add
sub
and
push
sar
push
pop
mov
jecxz
mov
sbb
out
dec
rcrl
je
pop
rcll
sub
pop
addr16
mov
cli
or
addb
push
mov
jge
pop
sahf
jae
out
or
stos
jl
mov
call
pop
or
cmp
int
mov
sti
jp
pop
push
inc
mov
mov
dec
xor
jne
outsl
cmp
sub
mov
or
lock
push
addr16
jno
mov
push
push
into
mov
fs
rol
inc
pusha
mov
mov
enter
jno
or
or
fidivl
pusha
roll
mov
mov
lahf
sbb
jge
psubw
or
sub
dec
mov
mov
dec
scas
push
push
test
or
sti
out
xchg
cltd
cmpb
das
add
fidivrs
push
adc
jb
fwait
aas
adc
push
mov
dec
cli
mov
jp
std
mov
lret
or
and
pop
cmp
inc
jle
cs
bound
movsl
xlat
pop
pop
ljmp
jno
push
mov
flds
repz
jne
add
int3
add
gs
or
mov
addr16
push
jne
cwtl
mov
or
rcl
aam
xchg
icebp
and
and
das
xchg
lea
in
shr
ljmp
call
inc
imul
push
pop
cmp
add
mov
lahf
call
cmp
inc
xorl
lcall
and
mov
subb
mov
fisubs
in
pop
aad
sub
sahf
xchg
sub
jle
sarb
jl
mov
jl
add
lds
std
cmp
dec
inc
mov
fmull
out
pop
pop
xor
movsb
into
xchg
fadd
sub
insb
sahf
outsl
cwtl
mov
fistps
push
loope
push
cld
inc
lcall
push
repnz
push
test
jbe
aaa
push
mov
push
cld
inc
ljmp
call
je
pop
out
daa
jle
sarb
insl
pop
sbb
pop
test
mov
inc
push
mov
xor
or
xor
dec
fnstenv
or
rcrb
jb
pusha
in
pop
mov
fs
or
or
mov
lea
cmp
pop
bound
jo
dec
nop
pop
lds
cmp
fldenv
xor
and
es
fcoml
out
jl
jbe
out
and
movsl
mov
cmp
ljmp
sahf
stos
dec
insb
xchg
sub
and
test
mov
add
idivb
dec
mov
mov
mov
sbb
stos
xchg
dec
cmpsl
mov
push
and
xor
xchg
dec
movsb
or
addr16
repnz
or
jmp
jb
lods
testb
repz
test
lods
pop
mov
cltd
insl
shll
mov
push
or
fnstsw
sub
push
lods
leave
mov
adcb
ds
ret
stos
push
fs
mov
lcall
test
cmpsb
in
mov
out
dec
shrl
add
lret
in
push
in
scas
dec
gs
jns
cmp
in
xchg
pop
jo
ret
cmp
and
cwtl
push
jge
clc
subl
inc
scas
fsubrl
lea
subb
fimuls
aas
and
and
mov
adc
pop
negb
in
mov
movsb
dec
mov
lods
leave
lods
iret
les
jne
sbb
les
xchg
fcmovnb
dec
mov
js
xchg
cld
popa
mov
into
movsb
lret
pop
pop
push
mov
stos
jl
hlt
cmp
xchg
fstpl
dec
mov
cmp
fisubrs
and
pop
hlt
cltd
js
pop
addl
fnstenv
xchg
shrb
aas
push
movsb
imul
mov
out
es
mov
jbe,pt
dec
stos
fdivs
jns
enter
push
cmp
add
adc
fiaddl
mov
cs
dec
or
pushf
jge
fcoml
jg
xor
lcall
sbb
je
xchg
call
and
sub
push
xor
cmp
and
xchg
out
dec
mov
jecxz
lahf
xor
mov
mov
out
push
jge
xor
inc
gs
imul
xchg
and
xor
cmp
sbb
call
add
call
lods
outsb
fwait
leave
or
ds
jae
mov
loopne
mov
faddl
mov
into
mov
add
dec
or
jmp
inc
push
dec
shrb
jb
test
sub
xchg
rcrl
loope
out
sbb
sub
xor
bound
pop
fnsetpm(287
std
cmc
pop
push
es
and
out
ds
shll
test
bound
mov
mov
cmp
stos
push
mov
sbb
push
idivb
push
repz
and
ja
pop
js
jl
sbb
and
aaa
lea
sub
add
pop
cmp
sub
sbb
jmp
inc
les
cmpsb
cmp
cmpsb
dec
ret
cld
ss
repz
daa
data16
jl
icebp
out
movsb
scas
rcrb
adc
nop
cmpb
fcmovne
es
and
sub
outsl
jns
cmpsl
adc
fdiv
adc
inc
addr16
notb
cmp
jne
push
addr16
xorl
sub
ja
lahf
xor
push
inc
adc
filds
rcrl
add
pop
into
iret
inc
scas
xlat
lret
popa
cmp
fcoml
pop
xchg
lods
int
mov
and
jge
stc
inc
testb
in
jmp
fiaddl
cwtl
shll
sbb
jmp
sub
and
out
mov
shlb
sbb
mov
sub
adc
test
popa
pop
shl
adc
cli
jo
xchg
sub
fistps
sbb
push
fists
add
xlat
cltd
dec
inc
pushf
push
push
xchg
sub
and
lret
inc
xchg
mov
hlt
xchg
addl
repnz
rorl
in
mov
or
xor
stos
ljmp
mov
mov
aaa
sub
scas
sbb
loopne
dec
jge
or
xchg
mov
mov
adc
repz
mov
jae
stc
mov
xor
scas
sbb
pop
pushf
mov
lods
cmpsb
std
pushf
or
das
xchg
addb
sub
mov
mov
inc
imul
sarb
popf
js
push
cli
out
pop
mov
pushf
repnz
pop
or
sub
xchg
jecxz
repnz
lods
out
jecxz
cs
dec
pavgb
cld
pop
es
outsb
dec
push
es
outsl
sub
mov
push
add
jno
test
shrl
movsl
mov
cltd
or
adc
arpl
and
jecxz
adc
lock
shl
jle
pop
and
adc
nop
xchg
mov
or
mov
xor
mov
dec
mov
add
icebp
cwtl
sahf
and
fisttps
mov
mov
adc
xchg
js
mov
cli
out
mov
jle
scas
mov
out
cmp
daa
aam
mov
out
inc
fildll
test
out
loope
cmp
rcl
jbe
push
push
enter
inc
fwait
mov
or
in
fcompl
imul
in
test
je
movsl
fwait
je
mov
sub
pushl
adc
enter
pop
mov
push
lods
and
orb
fnstcw
cmp
in
add
xlat
and
rolb
lahf
push
lret
mov
inc
pop
lock
push
in
or
push
and
loopne
aam
inc
sbb
sbb
out
out
adc
and
in
cmc
daa
dec
sub
adc
lods
pop
sbbl
push
jg
or
sarb
out
ret
add
stos
rclb
shll
push
sarb
pop
mov
clc
stc
mov
imul
jne
ss
jg
int
lea
aaa
adc
and
xchg
insl
shll
push
and
outsb
dec
xchg
rorl
and
insl
jne
dec
outsl
pop
or
rcrb
xor
push
jge
cmp
mov
sbb
and
into
leave
or
or
pusha
sbb
inc
pusha
testb
daa
jb
pop
adc
dec
es
fnstcw
add
jnp
sub
test
inc
lock
icebp
cmp
jecxz
stos
enter
rolb
cltd
cmpsb
inc
ds
sbb
mov
in
xchg
mov
outsl
mov
and
test
mov
inc
shrl
jl
dec
push
mov
outsb
jp
push
xor
cmp
cmp
jne
jns
pop
dec
fisttpll
hlt
mov
lods
sbb
and
push
mov
fstps
sub
mov
daa
ret
stos
adc
fs
leave
mov
jmp
inc
repz
mov
jne
xor
out
inc
out
loopne
lods
ss
jl
xchg
push
lcall
int
fiadds
pop
stos
stc
ja
adc
and
dec
inc
sub
rorl
les
aaa
xchg
sbb
ja
inc
pop
fs
sub
or
push
mov
gs
push
mov
ret
push
jl
into
dec
mov
movsb
sub
push
and
insb
sbb
int3
cltd
mov
adc
decl
xor
nop
xor
clc
add
xor
dec
dec
xlat
in
ret
in
and
shlb
push
scas
pop
xchg
mov
pop
jl
cmpl
mov
mov
das
xchg
sub
and
cmp
iret
repnz
sbb
dec
inc
pop
hlt
sbbb
dec
fucomi
lret
push
jae
jmp
cmp
imul
aad
add
adc
mov
mov
mov
or
jl
dec
fsubrp
add
xor
insl
jge
mov
mov
cs
pop
in
jecxz
adc
mov
pop
adc
lcall
outsl
jnp
push
ljmp
cltd
ret
sub
stos
mov
jb
mov
aas
fadds
pop
sub
insb
mov
cmp
loope
int3
xor
xor
enter
rorl
cmp
cltd
hlt
sbb
std
lea
push
repz
adc
mov
mov
push
repz
aas
mov
mov
repnz
je
mov
sub
imul
mov
or
imul
arpl
mov
push
scas
mov
les
call
stc
inc
jle
adc
push
sub
out
jecxz
lods
fistpl
mov
cmp
in
cwtl
popf
shlb
rorl
push
dec
shrb
mov
cmp
out
in
and
mov
mov
add
cmc
xor
clc
mov
rcll
fwait
pop
fidivl
mov
or
insl
mov
mov
loop
xchg
xchg
mov
shr
fdiv
ficompl
loopne
push
stos
out
push
jns
sbb
and
stc
testl
adc
out
inc
lahf
rcrl
mov
push
test
fs
pop
lds
in
pop
sub
push
stos
xor
popf
popa
insb
test
rcrl
lock
push
mov
neg
lret
and
adc
ret
scas
enter
popa
and
or
push
dec
mov
push
xchg
leave
repnz
xchg
cli
mull
mov
ret
mov
lds
and
sub
insb
pop
outsl
cmp
cmp
icebp
add
mov
das
or
sub
sbbl
faddp
sbb
pushf
lret
into
adc
or
std
loopne
data16
jnp
cwtl
orb
flds
mov
pop
out
mov
sub
adc
imul
out
es
loopne
mov
daa
mov
inc
mov
fdivl
sub
jg
mov
add
fwait
cmp
inc
pushf
dec
rorl
pop
cmc
lds
or
mov
or
imul
or
test
sub
inc
inc
fidivrl
push
jge
dec
mov
shrl
js
cmc
xor
sub
loope
push
add
lds
shrb
pop
inc
shlb
mov
iret
test
sbb
pop
arpl
out
adc
dec
sbb
xor
aas
ss
aas
sbb
pop
sub
fidivrs
js
pop
imul
sbb
clc
push
pop
add
dec
xchg
xchg
cmp
xchg
lret
and
xlat
sbb
sbb
rcll
sub
jl
inc
cmp
adc
add
pop
and
dec
pop
mov
adc
cmp
cmp
xchg
jo
jp
rol
rclb
mov
dec
push
sub
cltd
inc
daa
sahf
and
and
mov
dec
repz
jmp
stos
into
loopne
mov
mov
aam
sub
leave
xor
dec
add
outsb
movsb
cwtl
push
xchg
xor
mov
cmp
xor
cmp
in
pop
daa
mov
fmuls
add
adc
mov
sbb
jne
cmpsb
add
sub
xchg
cmc
and
sub
inc
mov
bound
jle
sub
ret
mov
rorl
pop
adc
cmpsl
cmp
lods
pop
bswap
cmp
jle
les
add
adc
in
xor
cmp
cli
push
bound
push
test
mov
jae
or
xor
ljmp
xor
mov
fldenv
pop
lahf
or
out
sbb
or
rorb
outsb
int3
xorb
and
xor
sbb
add
cmp
sub
xor
inc
popf
inc
inc
leave
xor
xor
adc
dec
mov
push
mov
jnp
movsb
out
or
push
inc
push
fsubrs
stos
xor
paddb
nop
enter
push
sbb
aaa
cmc
pop
js
addr16
or
gs
hlt
jae,pn
sbbb
add
xor
pop
cmpb
xlat
xor
inc
sbbl
and
mov
lods
pop
mov
inc
lods
popa
push
in
cmp
xlat
xor
repnz
dec
ret
or
push
scas
push
mov
loopne
sbb
lods
mov
lock
jecxz
lret
xchg
lods
outsl
jo
sub
adc
icebp
adc
cmp
dec
enter
or
mov
cmp
or
pop
sbb
iret
test
mov
dec
popa
loop
loope
sbb
rcll
addr16
dec
mov
sub
fwait
adc
xor
in
jb
ja
aas
xor
fldt
fnstenv
jo
xchg
sbb
fidivl
pop
aam
push
out
pop
or
adc
scas
xorl
sub
std
int
cltd
jecxz
cli
push
or
pusha
subl
mov
push
dec
mov
push
and
and
cmp
or
pop
movsl
cli
jo
pop
and
iret
push
mov
ficoms
out
dec
sbb
repnz
dec
dec
sbb
test
sub
dec
mov
pop
mov
or
pop
jl
jecxz
int
ds
xchg
dec
jbe
mov
aam
pop
loop
jne
inc
xchg
cmp
jbe
push
shl
inc
lcall
imul
mov
negl
call
xorb
dec
and
and
movsl
adc
xor
cwtl
movsl
mov
sub
adc
lret
dec
and
xchg
insb
mov
stc
add
sub
stc
andl
ljmp
rcll
clc
imul
add
insl
xchg
push
and
push
push
push
or
fs
pushw
cltd
out
icebp
and
inc
stos
mov
mov
cmpsl
stos
subb
push
and
sti
loop
shll
jg
xchg
xchg
fisttps
repz
jp
sub
inc
add
sub
mov
decl
dec
xlat
xchg
lds
fsubr
cmp
dec
push
repnz
and
and
cmpsl
leave
jb
adc
les
test
mov
jb
sbb
shlb
mov
scas
lods
mov
fwait
dec
or
pop
scas
mov
mov
lahf
xlat
jnp
jo
fucomp
cmc
xchg
push
repz
or
pop
dec
push
jp
fistl
sbb
outsb
mov
popa
call
pop
mov
and
jge
inc
rclb
push
add
fwait
xchg
push
mov
mov
inc
sub
xchg
mov
jge
mov
push
call
sahf
sbb
insb
rcrl
cmp
mov
sbb
mov
pop
jmp
in
out
pop
add
pop
xor
xor
outsl
aam
mov
adc
cmpsb
roll
mov
cli
add
mov
mov
or
mov
out
call
icebp
or
lds
sub
inc
arpl
adc
lret
adc
adc
mov
popf
push
out
lock
adc
cli
jg
call
inc
ficompl
push
test
stc
mov
pusha
stc
fwait
inc
push
add
sbb
cmp
jge
dec
xlat
mov
loopne
xchg
add
jnp
pushl
jecxz
xor
inc
push
insb
loop
int3
or
testb
loop
push
popa
mov
pusha
daa
adc
sub
xor
jo
push
mov
xlat
scas
push
pop
fistl
adc
inc
add
ss
faddp
and
loope
cli
lock
popa
test
repnz
in
stos
and
rorl
cltd
aas
fmul
xchg
hlt
insb
lea
cmp
jo
pop
or
mov
aaa
lcall
cmp
cltd
cmp
inc
popa
outsb
push
mov
pushf
out
idivb
jp
jg
decb
test
jo
pusha
fisttpll
test
inc
adc
insl
into
repnz
aas
pop
or
repnz
imul
cli
jae
je
or
or
mov
sub
cli
mov
repnz
loop
adc
leave
cmp
inc
es
cmp
cwtl
adc
aaa
push
test
clc
inc
cmp
or
aam
out
cmp
out
insl
shll
aaa
sti
in
scas
loop
js
jecxz
cltd
fdiv
mov
mov
aaa
jbe
inc
lret
fs
sbb
pop
xchg
testl
repz
sti
mov
xchg
push
cmp
arpl
xor
add
pop
add
clc
outsb
pop
cwtl
ja
jae
xor
cltd
imul
js
out
ljmp
sub
mov
or
orb
add
dec
sbb
data16
sub
mul
sti
fsubrl
icebp
cmpsb
int
cmp
pop
mov
and
xor
sub
cmp
adc
xchg
popa
dec
xor
sub
or
jle
nop
jno
call
mov
aad
in
mov
loopne
adc
scas
mov
mov
dec
sbb
test
lea
jb
pop
mov
aad
mov
lds
sub
dec
mov
enter
mov
xchg
lahf
inc
add
je
out
into
imul
mov
mov
sub
test
push
jno
arpl
cmp
xchg
or
stc
cmp
pop
shufps
mov
aas
js
es
aaa
test
out
out
cmp
shlb
rclb
add
in
mov
dec
repnz
rcrl
push
inc
cmp
xlat
inc
loop
xorb
or
pop
dec
cmpsl
sti
or
stos
add
sbb
mov
pusha
fwait
dec
inc
fmul
xchg
xchg
push
add
icebp
sub
popa
pop
dec
mov
dec
std
inc
xchg
leave
xchg
mov
aam
add
cld
jbe
pop
pop
test
cmpsl
dec
int3
dec
repnz
jae
out
dec
adc
xlat
fbld
ret
cmpsb
jae
enter
mov
mov
cli
add
mov
out
out
push
shlb
adc
pop
fxch
sbb
imul
mov
xchg
push
arpl
inc
ret
push
mov
pop
or
call
iret
jbe
fiaddl
cmp
inc
cmp
pop
sub
xchg
cmp
xchg
ret
lods
xor
popa
cmpsb
dec
sbb
lret
or
ror
incb
pcmpeqb
xchg
mov
paddsb
arpl
dec
stos
fs
add
stos
imul
sub
sub
or
mov
leave
pop
jecxz
sub
pop
push
fucom
cmp
pop
dec
scas
in
adc
inc
repnz
add
aaa
jnp
or
into
shrb
mov
mov
mov
fs
ja
xchg
shll
scas
leave
xlat
in
daa
mov
add
mov
sbb
add
xchg
xchg
sbb
or
mov
xchg
lcall
push
jnp
mov
pop
movsb
mov
pop
dec
and
lcall
out
movsb
imul
adc
add
dec
push
clc
mov
cmp
sub
jmp
adc
hlt
and
cli
jp
aaa
fstps
mov
cltd
insl
jg
imul
and
add
ja
fstps
jne
adc
mov
jns
xchg
xor
mov
xor
cmc
insl
add
out
dec
movsl
lds
rcll
js
push
push
xor
leave
pop
or
cmp
lahf
mov
xor
pop
call
icebp
mov
cmp
fisttpl
loope
jg
std
mov
hlt
in
test
push
je
sbb
push
add
sbb
aam
cmp
mov
mov
daa
pop
sub
jbe
mov
iret
fwait
inc
lcall
sub
mov
or
insl
or
mov
out
mov
sub
loop
out
jnp
jge
shlb
out
outsb
test
cmp
cmp
bound
jb
sub
add
imul
inc
dec
pushaw
jae
xor
in
push
push
mov
cld
sbb
xor
cmc
test
sub
inc
push
mov
or
out
mov
vpcomud
cmc
jae
mov
or
imull
xlat
cmp
fwait
sub
sbb
arpl
sbb
jecxz
jl
push
xchg
movsl
daa
scas
mov
das
mov
sbb
push
pop
mov
sbb
rorl
stos
sub
and
xor
mov
insl
pop
cmp
ljmp
xchg
into
push
addl
push
subb
clc
int
ljmp
ss
jbe
js
leave
rcll
mov
xchg
loop
add
dec
cmp
sbb
xlat
inc
test
fadds
dec
xlat
push
mov
dec
or
adc
daa
sbbl
repz
imul
mov
loope
ret
or
movsb
decl
rol
je
imul
mov
or
fadds
mov
notb
dec
enter
xchg
mov
sub
xor
add
adc
adc
testb
arpl
pop
adc
push
and
mov
push
lahf
xor
fs
fs
or
stos
push
sub
inc
aas
push
jb
ret
data16
mov
xor
pushf
pop
daa
cmp
inc
and
xor
mov
sbb
rolb
popa
mov
add
aas
push
negl
insl
ja
xorl
cs
adc
push
push
outsb
jae
fwait
stos
jp
stos
xlat
jmp
sbb
mov
push
xor
push
mov
mov
les
mov
mov
popa
ret
mov
mov
cmpl
adc
inc
in
lea
pushf
dec
aas
mov
xchg
pusha
mov
out
cmp
addr16
add
mov
jae
repz
mov
bound
cmpsb
aam
mov
inc
cmp
mulb
xlat
data16
in
into
add
jge
and
sbb
shll
add
lret
cmp
and
lahf
adc
jns
dec
fisttps
fidivrs
and
lock
call
dec
repnz
jmp
adc
and
add
mov
and
scas
imul
add
cli
jg
dec
ja
mov
stos
adc
jmp
adc
test
in
cmp
push
je
lret
add
push
mov
jae
sub
xor
fisttpl
cmpsb
pop
pop
sub
mov
je
inc
test
fsubrl
aad
jae
fs
fdivrl
imul
jo
sbb
mov
fdivl
sub
jge
sbb
js
fwait
mov
in
mov
mov
dec
cld
jb
cltd
mov
sarb
aad
fidivs
xor
cmc
push
cs
mov
addr16
ss
mov
pop
add
aaa
sbb
lcall
cltd
add
pop
mov
jg
ret
mov
add
dec
push
scas
or
dec
add
roll
inc
cltd
push
pop
add
sti
pop
stos
ret
adc
ss
jmp
jns
mov
hlt
neg
xor
jmp
int
adc
shr
bound
icebp
sub
push
cli
add
or
shll
sbb
xchg
cmpsb
mov
mov
lods
push
mov
fimuls
push
out
or
outsb
and
outsl
or
push
imull
pop
pop
ret
push
xor
jg
fwait
cltd
movsb
or
dec
adc
xchg
xchg
mov
add
pop
arpl
push
movsl
insl
popfw
aas
pop
push
dec
lcall
mov
mov
pushf
pop
push
xlat
insl
stos
in
das
stos
pushl
insb
sub
jmp
ss
add
push
test
push
cmp
scas
adc
iret
je
hlt
outsb
add
leave
jge
or
out
lcall
mov
and
push
jno
loope
adc
sbb
pop
mov
push
pop
xchg
jb
add
cmpsl
mov
fbstp
mov
add
setge
ret
movsb
pop
or
sbb
out
push
jmp
and
mov
mov
loopne
jp
sbb
sbb
inc
repnz
xchg
push
push
dec
dec
sbb
fstpl
call
jp
shlb
sbb
push
insl
mov
negb
mov
ja
stos
outsb
pushf
icebp
inc
cli
xchg
or
sbb
jp
testl
iret
fnsave
jge
jne
adc
mov
cmp
jne
mov
jne
xor
mov
or
sbb
fwait
xor
xchg
lods
add
cltd
loopne
sub
mov
and
jg
adc
and
dec
pop
leave
xchg
negb
mov
mov
out
push
lret
sbb
test
sbb
insb
inc
mov
fwait
daa
lods
imul
aam
pop
lret
cmpsb
xor
pop
lret
jl
icebp
pop
test
lret
shll
lcall
imul
sub
stc
jb
pop
std
js
addr16
sub
js
and
jl
xor
lret
pusha
cmp
popf
dec
out
movsl
repnz
test
stos
xchg
inc
sub
fiaddl
ficompl
sub
mov
jge
ret
repnz
mov
inc
cwtl
out
push
or
xchg
fidivl
jmp
mov
lock
aam
aam
mov
mov
mov
outsl
push
adc
adc
imul
jae
popf
ja
inc
mov
test
cmp
pop
aam
sbb
jnp
lea
sub
push
pop
add
xchg
and
popa
mov
inc
loop
mov
and
fdiv
stos
test
adc
aad
int3
inc
iret
iret
cld
cmp
shrl
cmp
or
mov
popf
push
les
sti
xchg
adc
mov
cltd
mov
inc
mov
leave
lret
imul
stc
dec
inc
icebp
mov
mov
or
mov
out
add
es
mov
xor
jmp
xlat
jns
and
outsb
sbb
out
movsb
dec
icebp
inc
fwait
dec
out
pop
add
daa
pop
jbe
xlat
repnz
sti
xchg
xor
sbb
and
repz
mov
xchg
pop
subps
sbb
cli
fs
jne
cmp
jp
std
lret
mov
push
mov
pslld
mov
iret
push
aaa
rorb
cltd
push
or
and
push
inc
bound
into
lods
fwait
bound
mov
sti
adc
into
push
push
push
push
xor
mov
adc
inc
mov
push
or
adc
push
dec
mov
stos
pop
mov
dec
jns
pop
adc
lret
outsb
or
fwait
sbb
dec
cmc
mov
fwait
pusha
adc
sub
in
insl
and
push
and
xchg
sbb
test
sub
dec
pop
mov
ja
in
push
out
xorl
add
mov
xor
icebp
xlat
mov
mov
dec
mov
call
js
cwtl
movb
or
arpl
jae
lret
loop
mov
mov
fs
jnp
xchg
leave
mov
cs
and
hlt
daa
lret
inc
mov
rcll
test
add
in
or
arpl
xor
dec
sbb
mov
cwtl
and
pop
jle
cmpsb
dec
jg
mov
push
inc
push
in
repz
sub
jne
in
and
add
push
incl
mov
jno
lods
mov
push
xor
inc
lcall
xor
jbe
or
add
sbb
xchg
movsb
sub
sub
hlt
cmp
in
push
add
cmpl
stos
inc
adc
lret
pop
jae
add
cmpsb
fcmovnbe
sub
pop
aam
sbb
lea
push
or
lcall
in
push
hlt
dec
mov
sarl
inc
dec
mov
nop
iret
int3
jnp
into
mov
mov
jp
mov
jne
dec
mov
cmpsb
xchg
icebp
clc
scas
inc
stc
movsb
loope
inc
and
movsb
sbb
jns
inc
dec
dec
mov
push
sbb
rcrl
xor
add
ret
das
xchg
ret
xor
dec
dec
loop
stos
adc
aam
lret
mov
adc
jl
adc
mov
pop
cli
push
fidivs
mov
xchg
cmp
cmp
pop
nop
xchg
mov
inc
in
inc
mov
and
pop
repz
jb
mov
shlb
jnp
sbb
inc
dec
pusha
xor
pop
cmpsl
scas
cmpsb
or
pop
cmp
sbb
mov
data16
sub
rorb
pop
mov
ficoml
imul
or
sub
sub
aam
in
popl
add
in
pop
rorl
enter
mov
xchg
xlat
fs
adc
popa
aad
movsb
rcrb
push
hlt
test
sub
xlat
xor
in
adc
or
jmp
mov
cmpsb
int3
jnp
inc
inc
cli
inc
adc
xor
mov
xor
mov
lock
pop
or
lcall
pop
bound
xchg
cmpsb
add
clc
fcompl
repz
shll
adc
data16
mov
xchg
fbstp
jmp
sbb
inc
push
aaa
sub
or
jmp
repnz
jmp
dec
inc
xorb
pusha
or
sub
sbb
add
dec
xchg
xor
dec
call
rcll
xlat
jns
inc
push
fwait
xor
push
lahf
in
xchg
out
lock
pextrw
jo
cmp
fcmovb
shl
int
jne
cmp
movsb
es
add
loop
mov
xor
jecxz
mov
fwait
jne
aad
push
leave
push
xchg
lea
fnsave
clc
sbb
jbe
aad
jecxz
lods
adc
in
fmuls
jae
ds
ret
ret
in
mov
jge
xchg
push
or
pop
in
mov
out
mov
stos
psubw
mov
sub
outsl
push
jecxz
leave
xchg
or
ret
stc
sbb
ds
or
call
cmpsl
aad
mov
aaa
outsb
leave
push
or
imul
shll
rcrb
shll
pop
pop
lcall
int3
pop
enter
jmp
xchg
mov
jnp
inc
cmpsb
addr16
push
sub
scas
fsubr
mov
in
and
cltd
in
xorb
push
mov
mov
je
leave
push
adcb
inc
xlat
mov
ja
cmpsb
sti
scas
inc
sbb
jl
inc
xchg
in
mov
mov
mov
test
and
sub
sub
addr16
cmc
js
inc
xchg
or
push
mov
loop
cmp
sbbl
or
imul
hlt
xchg
jmp
mov
js
scas
fdiv
and
sub
inc
cli
mov
mov
adc
push
jns
ficomps
mov
hlt
push
xchg
mov
popf
xor
out
push
int
mov
mov
add
fiaddl
mov
les
stos
sbb
outsb
and
into
jno
adc
push
add
cmp
cmp
mov
enter
cmp
jne
inc
xchg
push
aad
push
sbb
pop
adc
cld
dec
sub
dec
sub
dec
data16
test
fcmove
arpl
repnz
repnz
pusha
fwait
dec
filds
mov
out
push
ss
stos
sub
dec
push
sbb
jnp
xor
int3
shll
ds
cmp
jge
inc
mov
mov
out
ud2
cmp
das
push
outsl
les
int
loope
lret
inc
stc
pop
adc
mov
add
inc
notb
sub
inc
in
mov
push
out
gs
sbb
add
fs
in
out
mov
sbb
add
test
pushf
push
mov
cmp
jl
inc
mov
push
ds
stos
dec
out
inc
mov
pop
addr16
test
adc
pop
dec
in
xor
push
inc
dec
or
stos
mov
sbb
inc
sbb
in
mov
cmpsl
filds
in
cmp
fistpll
inc
inc
sbb
pop
mov
ret
je
lods
pop
cmp
push
js
push
mov
fimuls
test
mov
and
fisubrl
xchg
cmc
jo
je
mov
sbb
test
and
mov
cmp
cmpsl
pop
xchg
into
pop
fidivs
shll
push
jns
enter
pop
scas
cmc
add
adc
mov
lds
ja
ret
push
fmuls
pop
test
lret
iret
lcall
xor
sbb
sar
into
push
push
popf
push
inc
cmc
sbb
inc
cld
pushf
cs
cmc
and
cmc
aaa
lods
xor
das
and
and
xor
xchg
fnstsw
lock
adc
sub
faddl
mov
fcmovbe
sbbl
sahf
and
add
add
pop
daa
mov
in
and
jne
xchg
rorl
arpl
lods
fucomi
mov
dec
test
mov
mov
lret
int
lret
scas
stc
stc
sub
adc
push
imul
insb
shll
sbb
sbb
xchg
mov
sahf
aaa
roll
adc
sub
push
dec
push
xchg
hlt
pop
arpl
fiadds
or
xchg
out
xor
jb
cmc
shll
and
push
dec
iret
xor
mov
pushf
dec
popa
mov
int3
mov
jp
roll
cmp
and
and
cli
movsl
cli
dec
mov
mov
inc
cmc
push
dec
imul
xchg
xor
addr16
orb
pop
adc
popa
adc
ljmp
pop
aam
rorl
cmp
mov
shlb
and
scas
fs
mov
pusha
jnp
test
mov
add
stos
gs
outsl
test
add
jp
addr16
xor
add
jl
mov
and
mov
pop
shlb
inc
xchg
or
sub
repz
fsts
outsb
lahf
les
repz
rorb
jl
gs
adc
pop
call
adc
xchg
cwtl
jne
lods
rclb
sahf
cmpb
jmp
mov
inc
test
in
or
mov
movsb
nop
or
jp
inc
inc
mov
dec
adc
les
in
mov
test
mov
out
in
popa
mov
sahf
faddl
xor
xchg
pop
adc
dec
pop
sub
je
xorl
or
rcll
xlat
jne,pn
scas
push
lods
and
and
add
jbe
loopne
cmp
jno
popa
adc
inc
mov
insl
cltd
push
shlb
inc
mov
int
sbb
sbb
push
jg
and
scas
inc
jg
sahf
push
push
jg
cld
ja
jmp
out
xor
pop
add
insl
movnti
mov
cmp
mov
js
hlt
int3
mov
jle
lods
cmp
cmpsl
inc
out
or
test
add
cmpsb
sarl
and
scas
mov
mov
pusha
xchg
push
rolb
jl
sub
cltd
xor
sub
xchg
dec
shlb
rcll
popf
push
and
lahf
and
jae
xor
mov
lods
or
mov
das
adc
leave
push
dec
jge
xchg
inc
sti
xchg
lods
leave
mov
sarb
inc
mov
cmp
in
sbb
inc
sbbl
lock
cmp
sbb
or
xorl
push
stos
or
mov
cmp
aaa
pop
pop
das
inc
es
adc
and
mov
mov
cmp
aaa
aaa
inc
out
push
pop
jmp
lahf
pop
ss
inc
ds
ret
test
add
mov
ljmp
adcb
inc
std
popf
out
loope
dec
sahf
adc
out
dec
dec
data16
add
xor
inc
inc
sbb
lds
or
test
dec
ret
inc
scas
out
in
inc
leave
jp
xor
jmp
jb
sti
jno
clc
gs
pushf
sub
or
fisubrs
in
pop
jnp
xchg
add
dec
popf
adc
and
fisttps
cmp
sbb
mov
jg
push
jp
jno
jp
mov
cli
sub
push
mov
sub
outsl
in
mov
mov
mov
add
cmp
cmpsb
sti
jno
sbb
xchg
inc
cmp
in
add
wrmsr
sub
mov
hlt
test
or
sbb
lahf
popa
fnstenv
adc
gs
pop
mov
mov
cmp
jbe
daa
stc
lods
inc
dec
bsf
repnz
dec
bsf
lret
mov
sbb
arpl
std
sub
mov
enter
mov
aas
dec
xchg
stos
mov
into
addb
lahf
pop
imul
pop
xor
fcmovb
imul
jge
lods
cld
or
push
outsl
popl
jne
push
fs
cwtl
movb
jns
lret
xchg
iret
lods
lds
cmpsb
sti
sub
insb
lea
aaa
cmp
jne
loope
mov
push
int
loop
sar
in
loop
lods
pop
std
xor
aam
lahf
adc
je
loopne
popf
out
and
mov
or
sbbl
hlt
cmp
push
sub
bound
add
pushf
xor
jmp
jge
pop
lods
psubusb
adc
or
jb
xchg
pop
add
iret
shrl
cmp
mov
adc
mov
push
clc
int
xor
xchg
mov
insl
jl
mov
icebp
inc
je
sub
xor
pop
outsb
or
mov
xor
lahf
mov
add
ret
fidivs
test
push
ljmp
push
test
cli
jnp
in
outsl
out
sbb
mov
stos
mov
sbb
std
mov
movsl
pop
dec
cli
fs
mov
lahf
inc
cmc
mov
push
loope
fcoml
dec
lcall
int3
popl
pop
jle
and
into
or
stos
lds
js
or
cmpl
mov
mov
mov
int3
divl
inc
inc
cmp
orb
add
jns
orl
xchg
aaa
fcomi
lods
jmp
adc
mov
out
inc
lcall
jmp
cmpsl
pop
imul
jl
jb
cmp
or
mov
xorl
in
mov
xor
ficoms
mov
adc
xor
dec
popf
jmp
xor
adc
fnstcw
ret
mov
jb
iret
or
add
cwtl
xor
xchg
add
ds
loop
cmp
lret
jmp
jae
ds
sar
cmp
push
inc
mov
movsl
lods
dec
movsb
stc
daa
movsb
fnsave
fdivl
cmp
aas
xacquire
cmp
scas
popf
decb
or
popa
or
icebp
inc
jo
push
inc
repnz
pop
stc
lahf
pop
dec
mov
push
mov
inc
stc
xchg
sti
test
lods
popa
xchg
ds
cmc
mov
cmp
les
ljmp
jne
inc
call
cmp
scas
arpl
and
dec
pop
dec
sbb
and
sti
cmpsb
adc
xchg
outsl
movsl
aaa
xor
ficoms
push
or
jnp
add
test
fadds
jecxz
and
pop
pushf
push
std
push
cmpsl
or
inc
push
or
loopne
mov
insb
pop
inc
xchg
mov
frstor
not
dec
fdivp
push
sti
nopl
pop
stos
iret
subl
or
dec
aaa
pop
inc
lcall
adc
sbb
jo
push
fdivrs
mov
mov
ret
hlt
cmpsl
mov
out
mov
inc
mov
lock
jae
and
lea
pop
loop
lods
xchg
cmp
add
das
mov
lcall
mov
xchg
add
cmpl
jmp
fwait
repz
jnp
dec
sahf
int3
sti
sbb
push
lock
pop
icebp
pop
lods
aam
pop
aad
fidivs
xchg
push
cmc
stos
push
jmp
outsb
pop
pop
mov
adc
or
xchg
push
mov
insb
xchg
add
inc
aaa
int3
cli
shrb
mov
or
xchg
pop
mov
movsb
std
popf
cmc
mov
or
cmp
sbb
mov
aaa
int3
add
mov
and
out
add
repz
xchg
xor
pop
jb
mov
xor
lock
jae
sub
push
hlt
push
push
pop
lods
cmpsl
jmp
outsl
loop
scas
lret
call
lret
pop
and
sub
lea
rclb
push
lcall
xor
cltd
ds
or
pop
xor
inc
addb
dec
subb
and
andb
pop
lcall
mov
insb
repnz
fs
jge
adc
pop
jae
and
mov
adc
add
dec
lods
cmpsb
sarl
rcl
roll
push
xor
jae
or
ret
push
ret
loop
mov
movsl
xor
lea
adc
outsl
and
dec
push
mov
cmp
jg
cmc
test
enter
je,pt
idivl
and
insb
and
je
leave
imul
divb
mov
sbb
fnstcw
in
adc
dec
adc
in
mov
or
mov
push
mov
sbb
lcall
lret
inc
ljmp
push
jp
dec
das
in
xor
aas
pop
push
mov
mov
cmp
push
in
inc
call
lcall
cltd
mov
push
mov
jnp
movsl
test
lfs
test
mov
push
and
and
fnstsw
dec
lods
jno
cmp
adc
mov
mov
push
sbb
test
mov
sub
int
xchg
jmp
mov
xlat
xchg
ja
adc
ds
add
popf
push
sub
mov
pop
adc
subl
mov
or
insl
jbe
cmp
xchg
add
loope
fdivr
fcmovnu
mov
jge
add
mov
cld
cmpsl
pop
es
jecxz
movb
mov
push
test
imul
add
push
xor
sub
sbb
testl
adc
push
jnp
sub
jns
jo
orb
jo
cmp
pop
testb
jl
out
sbb
xchg
aas
push
add
push
je
xchg
ret
pop
xor
and
in
mov
mov
popf
fsubrl
xor
fmull
ret
sahf
repz
ds
lret
push
jne
and
add
test
int
aaa
inc
loop
and
pop
arpl
mov
jl
and
lret
jmp
jecxz
push
cmp
jmp
mov
push
mov
or
lret
and
jo
mov
jl
les
aad
push
xchg
out
mov
pop
fidivl
inc
cmp
adc
mov
cmp
pop
test
mov
sub
dec
popf
fdiv
stos
or
sti
jno
adc
mov
pop
lods
cmp
mov
rorb
retw
cmp
arpl
jnp
mov
das
push
or
pop
xchg
sub
dec
out
inc
mov
mov
mov
push
mov
push
pop
stc
or
mov
add
mov
fimuls
adc
mov
std
mov
xor
jge
inc
adc
jo
sub
adc
lock
sahf
pop
pusha
popf
pop
mov
cltd
mov
sahf
mov
test
mov
fstpt
cmp
daa
popf
adc
mov
lock
mov
lcall
enter
popa
sbb
in
fnstsw
insl
pusha
and
out
sahf
add
mov
mov
jecxz
jecxz
jg
adc
push
hlt
test
cli
pop
push
mov
call
pop
int3
lods
enter
push
jecxz
mov
les
pop
add
mov
mov
test
jb
js
mov
push
gs
loop
mov
xchg
stos
ds
shrl
cmp
lods
jo
dec
jnp
fldcw
fiaddl
adc
jae
or
pusha
xchg
add
mov
pushf
jmp
sub
or
ret
xor
xor
movsb
and
xorl
add
in
dec
std
jp
push
lret
or
arpl
jp
jno
jp
push
mov
scas
mov
pop
shrb
sbb
sub
mov
mov
push
negl
scas
mov
shrb
xchg
xchg
adcl
fcompl
movl
orb
mov
lods
push
aas
push
pop
mov
jnp
add
iret
inc
or
push
call
ja
testb
mov
push
dec
push
stc
stc
aad
adc
jae
xor
adc
inc
jae
jmp
dec
addr16
add
out
jns
and
pusha
adc
pop
fwait
sub
xor
xchg
mov
jge
xchg
push
sbb
ja
insb
pop
movsl
enter
pop
movsl
xchg
dec
fs
cmp
ficoml
xchg
in
inc
testb
ja
in
push
scas
jo
add
xlat
test
mov
pushl
pop
test
shlb
jp
dec
icebp
insb
shll
adc
lcall
jmp
push
clc
lods
mov
ret
fstl
mov
mov
movsb
jecxz
sahf
mov
mov
hlt
jg
sub
sbb
add
enter
pop
and
loope
xchg
and
add
cmp
fdiv
mov
inc
mov
mov
lahf
push
ljmp
jne
sub
mov
cmc
test
push
lock
pop
je
repnz
xorb
daa
push
or
sbb
mov
in
in
lret
and
mov
data16
mov
addr16
adc
scas
push
int3
and
or
sahf
push
xchg
dec
push
or
pop
mov
mov
addr16
add
pop
icebp
or
adc
ret
mov
mov
popa
xchg
or
fxam
jmp
nop
lret
mov
jle
push
pop
push
xchg
arpl
cmp
pusha
rcr
popf
push
or
mov
mov
fs
mov
inc
dec
ss
ret
jg
xchg
addr16
pop
lret
mov
xchg
inc
inc
cltd
movl
adc
jae
lret
shr
and
mov
mov
outsb
in
lea
test
dec
lds
jo
cltd
pop
mov
sbb
pop
jae
mov
test
fiaddl
jge
mov
into
mov
into
mov
adc
shr
mov
andl
pop
jo
sahf
add
js
inc
or
js
sti
shll
loop
push
xor
dec
insb
js
adc
ljmp
xchg
xchg
cmp
test
adc
clc
inc
mov
orl
test
enter
xchg
inc
or
lret
sub
es
mov
push
pop
jb
dec
xchg
js
cmp
stos
test
pop
imul
movsb
sahf
fcoml
xorb
mov
lret
out
sbb
stos
or
inc
jecxz
ja
or
jo
hlt
push
pop
test
push
xor
sbb
pop
pop
shr
push
lock
or
jp
mov
push
ds
out
outsb
push
fidivl
xorl
push
in
dec
mov
testb
neg
pusha
push
test
inc
xchg
or
inc
dec
or
inc
push
push
inc
call
fildl
push
aas
movsl
xchg
fldz
push
xor
out
in
xor
add
es
repz
and
mov
ljmp
mov
or
mov
lahf
jecxz
rorl
xchg
sub
stos
popa
cmp
mov
lock
addl
clc
lods
loopne
test
movsl
inc
sti
das
into
cltd
les
xchg
es
pop
insl
inc
les
js
mov
and
jns
pcmpgtd
cmc
mov
mov
andb
and
jmp
mov
bsr
mov
test
xchg
in
in
or
dec
xchg
add
syscall
je
in
pushf
sbb
movl
popf
add
outsl
xchg
repz
aaa
jmp
sbb
in
adc
jno,pt
ret
sbb
jp
dec
xor
xchg
xor
cld
cli
lods
add
xchg
ljmp
sub
adc
jge
xchg
loope
cmp
mov
xlat
mov
inc
outsl
sbb
mov
call
or
and
ja
xchg
dec
add
inc
jae
xor
lret
pop
ja
jb
test
add
iret
push
stos
xchg
dec
pop
jge
clc
push
push
imul
in
shrb
test
jb
sahf
jnp
cmp
and
push
movsb
dec
sub
popf
dec
cld
aad
and
cmpxchg
or
clc
ss
xor
aas
jb
add
cltd
loopne
mov
xor
enter
jb
out
cmp
sub
in
adc
sti
subb
xor
pop
xor
xor
imul
mov
jb
ret
dec
loop
ds
add
in
or
aad
stos
jg
push
fidivrl
lock
fimull
cmc
stos
cmp
das
jecxz
js
and
cmp
jge
sbb
or
cmc
mov
jl
leave
add
std
std
add
add
sub
aad
push
xchg
jge
pop
push
daa
sbb
insb
add
push
flds
push
fnstcw
adc
jb
sub
data16
jo
adcb
bound
sbb
pop
sahf
mov
test
mov
push
xchg
xor
ficompl
jbe
cmp
mov
mov
insl
mov
push
push
sub
push
mov
fbstp
mov
rorb
ds
rcrl
out
jmp
int
inc
xchg
xchg
mov
sbb
dec
cwtl
dec
cmp
adc
cli
and
cmp
xor
jecxz
push
cltd
pop
xchg
and
ja
in
aaa
fdiv
push
jo
add
push
imull
dec
xlat
insb
incb
add
push
jne
xchg
rorl
push
xor
in
mov
mov
mov
sahf
fldt
xor
mov
cmp
icebp
sbb
push
cmc
andl
in
mov
sahf
adc
das
jmp
ret
clc
pop
mov
push
jge
adc
sbb
mov
lret
sbb
or
push
lahf
push
pop
inc
iret
ret
lods
push
and
aas
outsb
lret
stc
iret
stos
push
or
mov
mov
ljmp
jae
mov
cmp
cmp
adc
add
rcl
xchg
cmp
adc
mov
mov
imul
push
movsb
inc
imul
leave
pusha
in
push
add
push
mov
jl
fistpl
jne
push
push
fmuls
cltd
mov
int3
sbb
inc
jp
aad
push
jne
and
stos
or
adc
push
stc
into
stos
inc
imulb
adc
pusha
stc
sub
push
or
insb
call
sarl
movsl
add
adc
xor
gs
fisubrl
pop
outsl
adc
ja
push
int
hlt
xlat
mov
mov
repnz
xlat
inc
mov
repnz
jns
xor
ja
pop
ret
jbe
cmp
xor
xchg
inc
push
push
aas
mov
sub
mov
mov
sub
mov
sub
and
add
stos
dec
push
stc
sbb
xchg
inc
dec
jmp
test
sti
popf
xor
cmp
push
fs
inc
rcrl
in
mov
mov
mov
cli
pushf
icebp
addr16
stc
in
pop
bound
sarl
xorb
xchg
xor
xchg
or
data16
add
inc
cli
mov
data16
out
cmp
sub
addb
cmp
mov
and
xor
inc
xchg
js
push
cmc
and
mov
cld
ror
pusha
add
jmp
mov
sbb
aam
pop
push
xor
or
lea
loopne
insb
int3
test
lret
jl
xor
cmp
arpl
jnp
push
stc
mov
inc
das
sub
jne
push
aam
mov
cmp
and
nop
inc
loop
cmpl
dec
subl
je
call
dec
add
ret
jns
dec
push
xor
add
lds
insb
add
xor
adc
cmp
xchg
cmp
sbb
ja
fwait
inc
or
mov
iret
addl
mov
sub
scas
push
stos
mov
ja
adc
and
cmpsl
lahf
hlt
push
xor
adc
pop
jns
cwtl
ficoms
in
loopne
and
dec
stos
mov
sub
mov
and
and
jg
subb
orb
sbb
push
add
ljmp
stos
and
popa
xor
push
ljmp
push
mov
sti
jns
mov
push
sub
add
add
fwait
out
mov
jae
dec
adcb
fsubs
jae
lret
adc
dec
out
addb
jp
sub
mov
xchg
push
dec
add
adc
lret
cmp
jg
mov
lods
sbb
int
xchg
mov
test
push
and
out
and
imul
call
mov
movsb
mov
cwtl
dec
jecxz
arpl
iret
pop
mov
call
mov
mov
cli
sub
mov
ljmp
ret
ret
mov
das
fidivrl
push
or
xchg
and
dec
and
in
jne
es
pop
testl
or
je
cli
sub
sbb
call
out
cltd
cmp
push
out
std
adc
and
xchg
and
mov
fimuls
lea
pop
lods
popa
clc
sub
pop
adc
jp
sbb
jle
mov
arpl
roll
jmp
mov
lods
aaa
push
pop
jl
lahf
les
jnp
jbe
jmp
aaa
or
or
insl
ret
shrb
stos
cmpsb
ds
xor
shl
idivb
dec
jo
mov
xlat
xchg
js
jnp
and
movsb
dec
je
not
cmpsl
cmp
popf
ret
cltd
in
cmpsl
xchg
fcmove
mov
inc
mov
lret
lahf
clc
leave
imul
insb
clc
stos
shlb
out
cmp
pop
xchg
stc
aaa
scas
outsl
cwtl
mov
push
mov
jmp
popf
movsb
or
xchg
fnstsw
push
xor
sbb
stc
xor
mov
xchg
sbb
hlt
sbbb
aad
arpl
lods
xchg
and
pop
xchg
mov
adc
mov
adc
or
mov
add
jge
add
ficomps
sbb
xchg
lods
xchg
mov
call
test
subl
xor
fcom
stos
scas
es
outsb
ret
cmp
add
sbb
inc
loop
cmp
mov
jo
or
mov
aam
xchg
add
mov
adcb
mov
out
push
mov
sub
inc
pop
pop
adc
in
lea
fadds
push
add
push
ljmp
test
iret
addl
rorb
xor
pusha
push
popa
mov
adc
subb
jne
clc
aam
js
mov
mov
and
cli
jg
arpl
ret
push
mov
outsb
or
cmp
sub
inc
xor
mov
icebp
pop
xchg
pop
cmc
fistpl
mov
xor
mov
imul
int
xor
outsb
andb
scas
jns
icebp
iret
pop
push
jne
fwait
dec
int3
int
mov
xor
divl
mov
sub
mov
jnp
xchg
cmpsl
into
adcl
cli
loope
inc
lcall
je
lods
and
add
iret
sbb
ja
adc
push
aad
mov
cld
fnstcw
shrl
pop
aas
repnz
sti
jno
aad
jns
or
clc
cmpsl
pop
int
scas
pop
mov
push
add
cmpxchg
sub
adc
cmp
xor
filds
pop
xor
jne
mov
mov
push
rorb
pushf
sbb
jo
xchg
inc
xor
notl
mov
jo
inc
mov
bound
repz
cld
inc
lods
ds
cmp
push
mov
daa
sar
jne
sub
inc
testb
jns
mov
data16
ror
sub
push
or
loopne
ljmp
mov
dec
movsb
cmp
leave
jg
add
mov
mov
addl
aaa
jne
mov
mov
jl
pushf
sbb
push
or
cmp
mov
pop
mov
out
xchg
xchg
fcomp
push
pushf
xor
cmp
ret
push
mov
jo
lods
rolb
pop
js
dec
jmp
fwait
mov
sbb
adc
pop
je
jno
adc
aaa
jmp
sbb
dec
xchg
js,pt
push
jns
ljmp
sbb
fnstsw
dec
add
outsl
repz
and
repz
shll
mov
aaa
pop
xor
ficomps
repnz
inc
cwtl
xchg
les
jmp
xor
add
cmp
addr16
imulb
imul
outsl
shl
mov
popa
sub
lods
and
out
push
dec
mov
inc
repz
sahf
add
add
sahf
jecxz
mov
adc
addr16
xchg
sub
cltd
dec
mov
incl
add
das
dec
vmread
or
and
je
loop
jge
out
add
mov
cmpxchg
xor
out
lods
lea
ja
ret
push
dec
add
sbb
loop
sahf
ds
std
sub
jle
cli
sub
out
movsb
mov
insl
lods
mov
dec
data16
pop
lahf
lods
insl
in
adc
out
mov
inc
sahf
sbbb
gs
and
mov
xor
mov
add
push
jne
outsb
out
je
push
in
das
and
mov
sub
and
mov
idiv
int
pusha
imul
sbb
insb
sub
push
ret
push
and
cmp
add
cmp
cmp
cmc
mov
or
imul
das
arpl
mov
das
jecxz
cmp
push
xor
nop
jne
out
mov
inc
push
mov
fwait
lock
jecxz
bound
add
mov
pusha
sbb
mov
and
mov
sti
add
cmp
es
add
push
inc
mull
ret
test
push
push
daa
mov
inc
hlt
xchg
dec
daa
test
mov
stos
pop
inc
stc
pushf
aam
popa
test
pop
and
sti
jne
and
ljmp
sahf
sub
cltd
dec
cli
es
sub
mov
add
xor
imul
jne
pop
xchg
inc
adc
jg
pop
das
dec
aas
mov
pop
and
daa
shlb
mov
mov
jne
clc
iret
stos
aas
cmc
test
enter
ja
adc
stos
loopne
push
les
pusha
mov
inc
push
pop
mov
filds
dec
cmpsb
dec
popf
adc
mov
sbb
adc
sub
lahf
or
xchg
jbe
cs
inc
fs
mov
cld
fstl
dec
shlb
loop
aad
dec
sarl
les
or
or
jbe
xor
xor
sbb
sub
or
lds
cltd
mov
sti
inc
mov
out
push
cmpsl
or
add
lret
fbstp
dec
lcall
scas
sbb
jnp
sub
addb
movsb
mov
rorb
mov
ret
rcll
mov
hlt
test
pop
jnp
std
lahf
hlt
push
cmpsb
mov
push
add
mov
loopne
jmp
or
cs
mov
fsubr
xchg
dec
cld
inc
imul
test
orb
jo
and
xchg
xor
leave
aas
fists
ss
or
enter
push
sub
loopne
in
int
dec
sbb
sbb
xchg
or
xchg
xchg
inc
dec
scas
sub
shlb
leave
imul
xchg
jmp
mov
mov
sbb
mov
cwtl
inc
outsl
jne
and
jmp
mov
stc
xor
cld
push
mov
loop
jp
mov
xchg
call
sarb
jne
and
test
cli
sub
fiadds
xor
jecxz
lret
cli
sub
cmp
outsl
cmp
mov
sarb
push
add
add
xchg
ss
cwtl
mov
jns
push
jne
sub
mov
mov
cli
sub
mov
sub
jno,pt
scas
jmp
inc
rol
sub
mov
mov
ret
or
adcl
out
ret
xor
cmpsl
mov
mov
mov
cmp
pcmpeqw
pop
shrl
sub
xchg
jbe
xor
push
cs
inc
mov
loop
adc
pop
pusha
xor
sub
pop
or
xor
stos
scas
out
fistps
pusha
test
or
mov
xchg
and
mov
aaa
ret
xor
jae
mov
cmpsl
mov
fidivrs
gs
adc
mov
mov
mov
adc
add
sub
pop
imul
cmpl
xchg
xor
jnp
dec
daa
push
mov
fimuls
ret
mov
dec
add
adc
jae
xchg
clc
xor
mov
push
xor
mov
int3
sti
dec
repnz
xchg
inc
adc
lea
or
int3
orb
push
rolb
ret
ja
cmpb
push
mov
sub
jnp
lds
and
cmp
test
call
icebp
mov
mov
sar
test
pop
insl
mov
mov
insl
stos
jp
mov
pushf
ss
movl
mov
repnz
pop
or
or
jnp
mov
jle
ja
andl
lcall
and
ret
cmp
sub
cmp
rcrb
sub
mov
dec
xchg
imul
popa
scas
cmpsl
int3
mov
popa
push
push
mov
scas
xor
imul
add
test
sarb
adc
add
xchg
dec
loope
cs
push
jmp
or
add
sub
movsb
dec
loope
add
add
fs
pop
or
jne
sub
stc
adcb
clc
lea
movsb
lcall
stos
cli
sub
mov
mov
fmulp
bound
enter
pop
ds
test
pop
sti
scas
jne
xchg
dec
jle
dec
pop
outsl
divl
cmp
es
outsb
adc
cld
push
jae
lock
mov
pop
scas
and
inc
cmc
stos
jbe
cltd
lret
outsb
dec
ljmp
sub
xchg
ljmp
popa
rcrb
es
mov
outsb
outsb
adc
push
shrl
arpl
xchg
jmp
dec
ja
les
jnp
mov
das
xchg
out
clc
aas
jp
fstps
add
cmp
loop
fcmove
daa
ss
mov
pop
andnps
test
jmp
push
test
testl
std
mov
add
das
mov
pop
sbb
xchg
sbb
inc
adc
or
dec
push
repz
aam
ret
sbb
loop
notl
ret
pop
je
scas
ds
mov
jecxz
cmp
xchg
insb
cmp
ljmp
scas
and
jns
jle
push
cmp
jg
addb
adc
pop
fmuls
xchg
mov
aad
jp
and
in
mov
or
adc
or
cmp
adc
dec
sub
push
add
insl
dec
adc
out
lods
popa
insb
stos
mov
adc
loop
cmp
inc
into
test
jbe
cmp
popa
clc
pop
add
xorb
push
add
fdivs
test
aad
test
shlb
in
dec
add
loopne
loopne
inc
call
adc
es
adc
enter
mov
adc
cmp
dec
jno
adc
call
xchg
pop
sub
imul
xchg
in
rcrl
dec
cmc
mov
popf
leave
sub
pop
cmp
jle
out
repnz
fcompl
je
adc
sti
ret
fnsave
test
jno
lock
fs
popf
adc
scas
xchg
es
mov
mov
push
adc
pop
setae
jge
push
dec
jge
push
out
stc
sub
dec
add
fisubrl
fs
sbb
scas
cmp
ret
daa
adc
ljmp
mov
pop
push
insb
xchg
mov
cmp
lds
aad
int3
push
clc
popf
sahf
jae
mov
repnz
cmp
jae
dec
jne
and
out
inc
cltd
dec
in
sub
icebp
jne
jle
cli
sub
mov
xor
jge
sub
ficoms
xchg
jne
sub
pop
testl
and
inc
testb
dec
and
adc
lret
sbb
iret
test
push
ret
data16
arpl
roll
add
cltd
sub
mov
mov
fistps
stos
pop
sbb
icebp
movsl
gs
fnstcw
and
mov
jb
roll
sub
mov
dec
xchg
inc
filds
icebp
insl
ret
mov
xchg
stc
or
xacquire
cmp
ficoml
pushf
enter
cmp
mov
mov
jge
enter
push
push
mov
sbb
mov
mov
out
push
or
fistl
loopne
push
shlb
sti
out
js
fistl
mov
xlat
pusha
out
sbb
les
mov
rclb
repnz
sub
or
mov
mov
jmp
or
leave
dec
dec
pop
lcall
xchg
vmwrite
imul
data16
das
jmp
pop
or
mov
or
lods
cmp
das
movsl
fbstp
cwtl
xor
int3
jmp
loopne
add
or
jno
sahf
mov
ss
ljmp
test
add
mov
test
push
mov
lods
or
movsb
rolb
sahf
mov
mov
xchg
jb
mov
pop
cmpsl
lcall
and
popf
sbb
dec
in
in
mov
xor
rolb
loopne
jg
andl
push
jle
stos
scas
add
into
cld
int3
lods
inc
clc
scas
pop
call
mov
rcrl
xor
or
aam
int
or
int
sti
scas
pusha
pusha
out
gs
add
push
orb
sbb
cs
jnp
cmp
stos
dec
out
dec
sub
mov
jg
stc
stos
push
xchg
lods
popa
lcall
mov
sti
and
push
lea
cli
scas
sahf
stc
jmp
dec
in
mov
sahf
mov
lahf
in
mov
rclb
sub
inc
loope
hlt
test
push
sbb
popf
xchg
mov
mov
sbb
or
pcmpgtb
jp
movsb
or
dec
loope
fs
lods
bound
lea
push
mov
ja
daa
mov
push
adc
out
test
add
sarl
or
xchg
lea
or
int3
popa
pop
ret
xchg
push
repnz
push
pushl
test
insb
out
sarb
fadd
arpl
daa
xlat
sbb
mov
push
inc
mov
jmp
xor
inc
sbb
xchg
lock
icebp
xchg
fistps
int
jl
push
mov
or
push
jl
xchg
jmp
xchg
mov
jb
sub
push
sarl
mov
mov
fucomi
xchg
mov
sub
dec
jno
cmp
mov
addr16
xchg
daa
out
pop
jnp
add
test
push
rolb
jne
xor
mov
icebp
sub
add
test
xor
adc
mov
sbb
outsb
dec
lcall
rcr
popf
ja
dec
outsb
jbe
sbb
jo
and
pushf
xor
xchg
out
adc
add
repnz
mov
jecxz
data16
rcll
clc
stos
inc
mulb
into
sbbb
mov
mov
icebp
subb
cltd
cs
and
imul
add
xchg
out
xor
adc
jne
and
add
add
xchg
rorb
scas
sbb
and
loopne
mov
xor
not
lods
inc
xchg
in
mov
add
add
pop
sub
xchg
pop
push
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
xor
mov
add
push
mov
add
sub
mov
addl
popl
subl
mov
push
mov
add
add
xchg
pop
mov
push
mov
add
add
xchg
pop
jmp
add
insb
stos
mov
add
jmp
out
lds
inc
test
pop
inc
and
stos
push
xchg
push
insl
lea
out
fdivrl
shl
sbb
std
dec
pop
ds
add
push
adc
xor
inc
imul
out
push
dec
int
pop
push
jmp
cmp
adc
add
add
bound
add
aad
in
push
xor
stos
out
or
dec
aaa
data16
stc
ret
adc
and
mov
shr
adc
or
fwait
bnd
xor
mov
dec
outsl
adc
lock
cli
xchg
rcrl
xchg
insl
mov
mov
mov
or
movsb
ret
push
jl
cwtl
ds
xchg
inc
std
daa
sbb
out
cmpsb
leave
stc
mov
fldcw
pop
fildll
inc
sub
xchg
rcrl
test
cmpsl
jp
adc
int3
inc
add
sub
push
out
ret
aad
iret
xchg
pop
pop
xchg
jge
js
push
and
lock
shlb
or
pop
or
iret
push
mov
shll
and
push
loope
add
fdivrp
adc
mov
fstpt
adc
sbb
and
xchg
loope
outsl
mov
mov
fs
mov
pop
push
jle
pop
sbb
test
cld
sub
and
adc
in
lea
ret
adc
dec
mov
xchg
mov
jge
std
daa
sbb
xchg
mov
imul
xor
clc
sbb
push
ss
add
mov
pop
outsb
ficomps
xor
mov
mov
adc
mov
jnp
and
enter
test
repnz
lret
data16
stos
testl
mov
sbb
cmp
movsl
repnz
ljmp
sbb
mov
and
into
in
xchg
inc
cmp
add
sub
xorb
rcll
fld
in
or
jne
lods
and
pop
cmpsl
or
pop
fs
repnz
clc
inc
andb
push
or
xchg
jae
mov
stos
push
movsb
rcr
iret
sarl
xor
bound
sub
cwtl
cwtl
int
xchg
movsl
ret
dec
shll
jno
mov
and
mov
sub
inc
mov
popf
ljmp
pop
sbb
xchg
xor
push
mov
das
dec
cmc
inc
pop
jl
shlb
iret
sbb
sub
das
mov
mov
faddp
in
aas
mov
sbb
add
cld
sbb
jecxz
xchg
into
adc
mov
jno
mov
inc
xchg
add
sbb
pop
test
sub
xor
hlt
xchg
lret
mov
lds
jbe
lcall
fildll
jne
mov
push
jl
movsl
xchg
ret
aad
cmp
mov
arpl
scas
in
cmp
push
mov
mov
inc
sbb
inc
add
adc
lods
mov
and
xor
cli
inc
cld
aad
arpl
stc
or
lock
movsb
lahf
mov
stc
scas
cld
adc
jno
dec
mov
outsl
fs
test
ret
adc
xchg
cmc
stc
push
mov
scas
bound
sbb
adc
outsb
aam
inc
push
pop
loope
pop
pop
in
adc
arpl
and
mov
cmp
push
test
mulb
sbb
fisttps
and
stos
lea
test
adc
xor
cmc
int3
inc
lea
pusha
pop
jp
in
roll
cmp
push
inc
std
sti
nop
iret
sbb
out
test
leave
pop
aam
mov
int3
or
adc
xchg
rcrb
mov
push
xor
sar
call
insl
clc
dec
or
or
nop
in
mov
mov
ss
mov
repnz
mov
es
add
iret
in
lcall
add
mov
add
inc
gs
ja
inc
outsl
pop
mov
lds
popa
push
jge
jp
notb
out
addr16
pop
cltd
fsubr
lahf
mov
push
jp
mov
xchg
mov
sahf
addr16
rcrb
lahf
in
add
jo
xchg
mov
popf
into
adc
mov
mov
xchg
or
push
jecxz
or
es
ljmp
negb
dec
fwait
packuswb
call
dec
hlt
and
mov
fildll
jnp
cmpsb
stos
adc
fstl
popa
mov
adc
inc
xor
push
adc
cli
sbb
inc
jne
pop
fiadds
and
adc
push
data16
inc
mov
jns
pop
test
outsl
push
mov
fimull
sbb
sub
sti
sub
xchg
fcomip
add
leave
out
mov
test
dec
popf
mov
fdivr
xchg
ret
add
adc
add
mov
mov
shrl
outsb
mov
jns
popa
les
cmpl
lcall
mov
insb
mov
fnstcw
sbb
insb
adc
int3
sbb
jne
add
in
aas
jo
jnp
js
ret
add
mov
jo
out
push
dec
call
jno
stc
mov
push
fmull
cmp
xlat
and
mov
mov
out
insb
mov
xor
or
push
cmp
add
mov
imul
ds
and
sbb
out
pop
rcrl
sbb
mov
rorb
push
insl
lret
mov
or
and
orb
mov
sub
dec
out
sbb
xor
jl
xchg
cmp
xor
sbb
bound
aaa
imul
imul
mov
dec
pop
rorb
sbb
subl
dec
lcall
das
sbb
pop
and
out
ljmp
arpl
push
gs
andb
je
fs
sub
add
mov
popa
jns
cmp
or
les
sub
push
hlt
cmp
xchg
push
xor
jbe
add
xchg
sub
xchg
icebp
in
mov
in
jle
mov
cmpsb
in
and
daa
out
adc
jbe
rorb
and
fisttpll
js
es
or
sub
inc
sbb
pop
add
or
fs
jl
ret
inc
nop
xor
call
in
mov
int3
jb
fs
fdivr
mov
adc
inc
jne
mov
pop
dec
in
outsl
mov
sbbl
cmp
dec
pushf
mov
in
inc
insl
pop
xor
mov
or
inc
jae
je
sbb
fwait
rolb
test
mov
mov
sahf
jmp
sti
lods
and
xor
xor
sub
xor
scas
je
test
xor
sub
cmp
sbb
addr16
mov
imul
jae
dec
stos
add
mov
dec
test
xor
jecxz
arpl
pop
cmp
push
dec
mov
push
mov
ss
out
and
xlat
mov
jge
fmull
ds
inc
popf
dec
xchg
xor
addr16
inc
test
jmp
lret
lcall
push
icebp
pop
idivb
daa
sbb
pop
push
dec
cmp
cmp
popa
mov
or
xor
pushf
adc
mov
fincstp
jg
outsl
loope
xor
mov
mov
lcall
aam
adc
xchg
mov
daa
je
adc
popf
fsubrl
addr16
into
daa
push
cmc
adc
xchg
sub
idivl
lret
loop
frstor
insb
mov
jae
jge
fwait
dec
add
xor
push
push
daa
insb
or
stos
aam
icebp
xchg
mov
adc
loope
enter
xor
inc
xor
mov
in
jnp
insb
lea
rcl
mov
adc
clc
mov
mov
faddl
inc
inc
pop
sbb
lcall
out
fstp
xchg
adc
mov
inc
cmc
mov
ss
shlb
leave
jae
imul
fildl
cmpsb
and
std
shrb
xchg
rcrb
jbe
or
and
push
pop
cmp
pop
or
and
and
mov
jb
cmove
roll
cmp
mov
add
sbb
loopne
and
or
ss
add
dec
fcoms
push
loope
cli
xchg
mov
cmpsl
testb
push
loope
or
inc
xchg
ss
pop
sbb
dec
xchg
aaa
push
jae
push
loope
jno
icebp
mov
nop
mov
hlt
xor
iret
daa
das
mov
jo
cld
mov
and
test
dec
cmpsb
mov
mov
jnp
pop
das
dec
test
rcr
mov
dec
test
out
sbbb
addr16
inc
sbb
inc
xor
xchg
outsl
mov
jp
push
jle
gs
in
push
out
mov
jmp
mov
mov
push
movb
xchg
shlb
or
pop
jg
sahf
aam
mov
xor
xlat
mov
dec
and
hlt
xor
cmp
cltd
push
repnz
cmp
push
sarb
cmc
cltd
mov
sbb
sbb
or
jmp
imul
sub
xchg
out
pop
cmpsl
cmp
jge
cmp
mov
xor
push
nop
movsb
fstps
addr16
sbb
dec
test
mov
pop
or
inc
pop
insl
mov
or
imul
into
sbb
jp
jns
decl
inc
les
sub
pop
mov
bound
loop
pusha
sti
adc
aas
fdivl
push
jle
cltd
aas
pop
incb
notl
add
outsl
cltd
outsb
mov
jns
ds
aad
out
cmp
mov
xor
inc
pop
aas
fldt
test
movsb
pop
pop
mov
jnp
scas
xchg
jnp
out
lods
lea
inc
push
sbb
lock
loope
addl
sbb
out
push
repnz
fdivl
bound
xchg
into
ss
inc
nop
mov
mov
jle
sahf
mov
clts
mov
jp
xchg
mov
adc
push
and
inc
pop
or
lds
jmp
mov
push
inc
xor
shlb
pop
jb
repz
jle
pop
pop
vpunpckhwd
cltd
bound
pop
mov
dec
call
sarb
mov
sub
test
adc
popa
push
stos
pusha
and
loope
sti
add
sbb
into
test
add
jbe
out
ss
ljmp
clc
les
in
pop
dec
inc
xchg
push
xchg
jecxz
lea
jl
int
mov
ds
add
lods
fwait
enter
or
sbb
inc
xor
and
adc
push
and
sbb
mov
dec
fcoms
movsb
sahf
out
cmp
mov
sbb
cmc
push
daa
mov
sbb
dec
mov
scas
cld
outsb
int
sub
push
gs
test
and
lds
push
rorb
movsw
repnz
add
xchg
pop
mov
pop
test
cmc
test
lahf
mov
fcomps
rorb
cmp
sub
mov
addb
aad
int
xchg
sub
xchg
ss
jle
outsb
xchg
pop
mull
sbb
sarb
jne
jg
mov
jno
mov
sbbl
or
jb
stos
pop
movsl
cs
aad
addr16
popa
stos
or
stos
push
movsb
cmc
hlt
mov
mov
icebp
dec
inc
xchg
enter
out
movswl
dec
mov
pusha
mov
xchg
loopne
xchg
mov
aad
imul
jne
dec
cld
dec
mov
pop
cmc
es
xchg
fnsave
mov
iret
push
pop
outsb
inc
push
sahf
scas
dec
repnz
stos
insl
mov
lcall
into
mov
push
mov
jp
test
mov
mov
xchg
enter
push
outsb
or
or
push
in
mov
mov
iret
hlt
lcall
sarl
xor
loope
sub
insb
adc
lret
in
cmp
mov
imul
jg
cmp
add
mov
icebp
rol
lret
add
fisubl
lods
out
lahf
inc
fstpl
cltd
arpl
shlw
je
dec
imul
aam
movsb
popf
out
cmp
out
cmp
push
adcl
out
mov
dec
or
stc
out
jl
xor
mov
into
sbb
int
inc
sbb
int
cld
loopne
xor
xor
out
testl
cmp
sub
repz
sbb
push
cmp
xchg
jg
cmp
or
lahf
adc
in
pop
in
popa
scas
mov
push
jne
sub
push
sbb
loop
push
aas
cli
xor
mov
aaa
sub
arpl
xor
sub
lds
je
and
or
ja
mov
cltd
imul
inc
sbb
ljmp
lcall
aad
dec
out
outsl
mov
insb
mov
insl
xchg
repz
lock
popf
inc
stos
xor
pop
addr16
clc
sbb
insb
and
sub
inc
adc
in
jno
jl
dec
out
inc
aam
mov
movsb
sar
subb
sbb
mov
add
push
vfmadd231ss
sbb
mov
jbe
leave
pop
stos
inc
inc
xchg
loop
mov
div
push
ss
sbb
dec
inc
cli
mov
sub
push
out
cmp
mov
push
add
jo
inc
ljmp
leave
lret
ret
mov
lods
xor
ficompl
cmp
cmpsb
mov
xor
xor
mov
inc
push
aad
sub
scas
out
xchg
mov
xor
dec
mov
notl
sub
ds
mov
mov
jo
or
add
jmp
xchg
dec
jmp
jecxz
gs
out
stos
nop
inc
cltd
orb
sub
in
lea
sbb
std
and
and
mov
movb
aad
test
repz
movsl
mov
adc
cmpsb
repz
sub
scas
fimull
sbbl
xor
push
push
xchg
loop
add
xchg
addr16
jl
popa
jb
cmp
aaa
mov
inc
jmp
loope
lret
push
call
in
add
sbb
mov
and
mov
dec
fwait
mov
sbb
std
daa
adc
shl
mov
or
or
sbb
lods
pop
js
psubsb
bound
stos
lcall
pop
add
adc
out
sub
push
test
mov
lock
test
jnp
dec
fstl
sahf
gs
imul
xchg
loope
jge
popf
sbb
es
bound
sbb
notb
cld
push
ds
mov
mov
imul
stos
fisubl
jb
mov
lock
sub
int
xor
push
lcall
jns
popa
mov
lods
loope
fisttpll
adc
in
icebp
sbb
mov
xor
xorl
push
pop
mov
or
cmp
xchg
outsl
scas
dec
test
xor
subb
add
aam
movsl
iret
mov
sub
stc
loop
mov
sub
xchg
hlt
inc
pop
pop
or
push
xchg
loope
push
outsb
jmp
fldenv
or
test
lret
push
xor
dec
mov
int
int3
shrl
mov
repz
dec
lods
add
cmp
shlb
out
sahf
cmpsl
pop
nop
push
jb
xchg
in
xchg
inc
test
outsb
sbb
pop
dec
sub
jl
mov
mov
outsl
out
push
adc
jb
test
out
mov
and
sub
xchg
ds
repz
jmp
jecxz
fdiv
xchg
fiadds
and
flds
les
pop
cmp
pop
xchg
leave
outsl
lea
arpl
cmp
scas
fsubs
test
std
lds
mov
insl
sahf
cld
stos
test
cmp
dec
jp
lods
sti
add
push
xchg
les
jmp
sub
ret
adc
daa
mov
cmpsl
int3
xchg
fildll
loope
clc
hlt
jmp
pop
mov
call
mov
test
ljmp
cld
pop
mov
jle
adc
dec
shrl
pop
mov
cmp
rcr
pop
jl
jno
es
xor
mov
es
pop
jne
mov
inc
xchg
in
in
mov
rolb
sbb
pop
mov
inc
ret
mov
pop
lock
popa
pop
xor
jl
sbb
sbb
outsl
hlt
xchg
mov
arpl
add
push
jne
sbb
call
hlt
ficomps
jnp
inc
sub
out
cmp
ficompl
pop
add
inc
xchg
fbld
shll
std
outsl
roll
int3
inc
jne
gs
inc
cs
cmc
push
and
rolb
add
jae
push
mov
rcr
xchg
mov
out
sarb
add
imul
std
jmp
inc
xchg
xor
push
cmp
pop
movsl
inc
sti
mov
sbb
das
jae
pop
mov
loop
mov
clc
inc
push
outsb
popa
add
dec
rorb
popf
into
in
clc
sti
pop
jno
cmp
xchg
aam
shlb
or
cltd
cmpsl
jge
test
lds
fsub
bound
cmp
push
cli
mov
xor
stos
insb
push
xor
sbb
jp
dec
in
or
pop
and
rcll
pop
mov
and
mov
insb
leave
out
push
mov
dec
push
movsl
add
inc
jg
xchg
and
push
add
shl
mov
sbb
pusha
mov
and
inc
outsb
pop
mov
push
jmp
dec
cmp
or
xchg
dec
cmpsl
ss
dec
daa
cmpsb
fimull
and
jmp
loop
xlat
cmc
inc
pop
pop
stos
fucomip
or
popf
cld
or
roll
scas
inc
xchg
push
push
push
lods
test
fmuls
loopne
ficoml
sub
les
stc
cmp
push
imul
addr16
jmp
mov
xchg
cmp
xchg
inc
pusha
mov
mov
sarw
xlat
mov
jne
and
mov
adc
data16
scas
pop
adc
ret
adc
das
pop
inc
inc
ret
pusha
in
xor
pop
loop
stos
stc
xchg
or
mov
inc
or
push
xchg
loop
fisubs
adc
push
sub
push
lahf
in
mov
insl
into
push
add
pop
data16
add
idivb
sbb
pushf
mov
imulb
and
stc
or
shr
ja
xchg
pop
mov
xchg
lds
cmpsl
dec
imul
outsl
cltd
bound
or
aas
mov
aaa
xchg
cmp
ror
data16
ss
dec
push
rcrb
jp
and
out
pushf
jmp
fisttpll
test
adc
pop
rorl
cmovbe
test
adc
and
rcrb
out
sub
and
out
xor
ret
jae
add
in
jae
inc
push
inc
mov
stos
movsb
cmp
shll
sub
mov
test
cmp
in
pop
push
inc
lock
jo
aad
xor
cmp
shl
fcmovbe
mov
das
jl
sub
js
dec
cwtl
xor
iret
push
push
xchg
loop
xlat
push
ljmp
xchg
dec
xchg
sbb
shl
loopne
in
cmp
in
rol
dec
xchg
pop
notb
pusha
jno
cmp
data16
cmp
inc
loopne
mov
sti
sub
push
pop
push
jnp
xor
mov
adc
and
adc
shll
push
and
mov
iret
mov
inc
mov
fsts
addb
jb
push
lds
and
jp
rorb
outsb
jge
insl
inc
orl
jge
add
mov
mov
and
mov
jns
test
mov
repz
jae
jnp
jecxz
divl
ret
stc
jnp
pushl
pop
xor
in
rcll
int3
inc
in
hlt
jl
es
cmp
cmp
adc
das
xchg
and
outsl
sbb
dec
add
loope
iret
shll
xor
daa
je
leave
add
push
add
mov
imul
sub
in
inc
jbe
cmc
cli
rcrb
mov
loop
scas
mov
int3
sbb
pushl
jl
push
jge
faddl
and
icebp
push
mov
pop
adc
dec
cwtl
cmp
and
pop
jnp
inc
aaa
push
rcl
insb
sbb
cmp
movsb
inc
in
inc
mov
fcompl
push
dec
xchg
cmp
call
sub
mov
daa
push
and
cmp
cld
sbb
fincstp
std
out
sub
xchg
inc
xor
dec
jnp
pop
add
mov
das
rcrb
rol
pop
scas
mov
jb
testl
ljmp
xchg
add
jge
sbb
mov
push
std
sbb
out
out
shl
mov
aam
es
out
cmp
popf
mov
mov
cmp
push
cmp
sub
dec
sahf
sbb
sbb
adc
dec
out
test
daa
je
cmp
pop
stos
dec
shll
stc
orl
inc
imul
cmp
sub
test
xor
aad
lock
cmpl
or
call
push
add
int3
inc
xor
cmp
and
mov
jo
xor
xchg
sti
in
mov
mov
dec
in
mov
idivb
jb
repnz
in
adcl
sahf
rorl
xchg
jae
lds
mov
cmpsb
data16
and
lahf
stos
mov
sub
decl
das
xchg
out
cmp
cwtl
lret
jno
sub
dec
lcall
sbb
add
out
test
shl
addr16
subb
mov
orl
leave
xor
xchg
out
mov
sub
scas
add
inc
and
pop
sub
popa
mov
mov
outsb
jg
in
je
out
shlb
push
repnz
mov
gs
inc
lret
sbb
xor
push
adc
inc
pop
pop
sbb
adc
dec
jle
subb
in
push
jns
js
in
cmp
iret
mov
add
mov
push
ja
das
cli
push
sbb
push
add
sbb
in
sub
jbe
fnstcw
xchg
cmp
aam
aas
in
sub
cmp
sahf
cmp
lods
ds
or
add
adc
outsl
xchg
stos
loop
fisubrs
mov
mov
dec
movsb
nop
lods
lret
push
fsubrl
scas
data16
scas
push
jno
sub
sbbb
fdiv
inc
push
xor
mov
jnp
inc
mov
adc
pushf
insb
sub
in
ficoml
inc
mov
push
jns
mov
mov
shll
fdivrl
or
aad
into
scas
ss
inc
xorb
test
jl
push
dec
push
mov
iret
pop
icebp
ja
rol
push
es
dec
arpl
scas
push
in
mov
aad
lods
lret
xor
int
adc
sub
mov
and
cmp
cmp
std
sbb
jle
test
sti
sbb
mov
cli
dec
xchg
scas
sub
aas
imul
mov
mov
or
or
xchg
pop
or
jb
mov
cs
enter
cmp
fadds
fldcw
pop
dec
dec
lret
or
test
into
ljmp
mov
push
ja
fmull
fisttpll
mov
jg
into
mov
cmp
dec
xchg
scas
mov
aas
imul
sub
mov
orl
add
mov
sub
dec
out
or
sbb
mov
int3
outsl
adc
gs
pop
mov
dec
js
xchg
sub
xor
pop
sub
or
fnsave
insb
out
cmp
pop
ljmp
sarl
out
roll
aam
out
push
movl
sub
stos
jbe
mov
adc
pop
mov
addb
sub
inc
sbb
xchg
aad
jge
ja
stc
sbb
mov
lods
addb
and
push
negb
jmp
data16
or
or
mov
shlb
and
or
mov
cwtl
ret
adcl
imul
cmp
jno
and
cwtl
mov
outsl
stos
xchg
movb
cmpsl
push
into
int3
or
mov
inc
add
xchg
mov
lahf
aam
int
repnz
fldcw
pop
or
das
int3
mov
xchg
les
sub
aaa
jbe
gs
adc
jmp
fs
xor
mov
xor
ret
jo
or
cmp
mov
push
xchg
sub
bound
add
fwait
xor
pop
movsl
mov
insb
pop
push
xor
sub
adc
push
xor
jbe
mov
sarl
outsl
mov
inc
dec
cmpsb
mov
icebp
daa
jo
mov
out
pop
sub
xchg
mov
pop
cmpl
push
iret
pop
aad
pusha
jle
sbb
pop
aad
ret
loope
and
popa
xchg
pop
orl
aad
scas
int
mov
pop
in
lds
jns
dec
jmp
sub
adc
or
add
mov
aaa
adc
xor
jp
and
roll
adc
es
lock
loope
add
aas
sti
push
jns
push
popa
fs
push
mov
aad
push
mov
std
xor
out
out
jno
insl
xchg
outsb
mov
jne
pop
cmp
inc
push
out
jae
repz
in
push
fsts
xor
out
dec
nop
iret
rcrl
dec
mov
cli
ja
add
pushl
push
lret
or
push
in
std
ret
out
adc
mov
aas
ljmp
xor
jne
inc
mov
icebp
sub
jns
mov
mov
push
jl
xchg
ret
divl
push
fdivrl
add
xchg
arpl
xchg
stos
mov
adc
jne
cmp
or
xchg
outsl
lea
fdivl
or
es
ljmp
dec
mov
mov
pop
lods
fidivs
mov
out
test
jbe
mov
or
es
adc
inc
mov
ss
jo
xchg
sbb
adc
int
add
aad
jl
or
fstps
and
out
test
xchg
pop
test
and
adc
popa
mov
push
scas
in
cmp
pop
jg
inc
fisubrs
sub
repnz
scas
sbb
repnz
jne
lcall
pushf
das
xchg
xlat
push
out
or
cmove
mov
dec
pop
out
cmp
lcall
test
or
in
add
repz
push
push
aas
jbe
mov
ret
dec
inc
xchg
lds
mov
cwtl
gs
xchg
lret
cld
adc
sub
or
inc
xchg
fdivp
loop
sti
xchg
movsl
int
shlb
sarl
icebp
push
cmp
push
lods
pop
sub
insl
fdivl
jecxz
adc
mov
or
sbb
imul
int3
xchg
cltd
inc
xchg
lahf
jae
push
subps
mov
inc
adc
or
xchg
mov
sti
cmpsl
out
jmp
les
inc
popa
fisttps
jg
add
fsts
lock
push
cwtl
js
sub
jp
subb
add
ficompl
lret
cld
sbb
xor
loop
push
dec
lret
jb
pop
dec
adc
add
addr16
into
xchg
mov
xlat
nop
test
xchg
fsubs
dec
pop
adc
inc
leave
push
test
decl
dec
xchg
cmp
or
int
ljmp
xor
ljmp
out
addr16
dec
int
adc
cli
sbb
hlt
pop
cmp
mov
push
jg
loopne
cmp
adc
lods
sbb
inc
xlat
inc
subb
call
jo
pop
cmp
stos
cmp
lret
sbb
outsl
fmull
push
pushf
scas
test
dec
aaa
mov
mov
jnp
lods
cli
jnp
ret
lahf
into
jnp
inc
jmp
repz
pop
rol
sbb
cld
mov
jo
in
insl
int
inc
mov
mov
dec
gs
cmpsl
cld
dec
outsl
mov
or
sbb
int3
or
lcall
mov
insl
mov
adc
add
jbe
testb
jb
ficoml
cli
mov
lahf
aam
shrw
sarb
jb
jmp
xchg
out
sbb
testb
das
sub
fsubrs
mov
mov
test
addr16
aad
pop
xorl
pusha
imulb
fcompl
clc
mov
sbb
je
mulb
cmp
jmp
or
nop
int3
mov
jb
int3
in
or
sub
pop
cmp
je
push
sub
test
push
cld
sbb
mov
imulb
adc
cli
cmp
fwait
inc
mov
int
sbb
out
fwait
call
sub
push
push
xlat
jl
bound
xchg
mov
and
xchg
es
and
pop
scas
fsubs
jl
mov
add
aas
aam
pop
cmpsl
idivb
movsb
cmpsl
lds
mov
push
inc
inc
popf
ds
adc
ret
push
lock
subb
je
lods
push
out
adc
loop
aas
dec
inc
sub
scas
hlt
aad
ljmp
mov
sbb
cwtl
xchg
leave
pop
sub
int3
fwait
std
fiadds
or
add
addl
ljmp
jp
sub
inc
fisubrs
mov
sti
bound
in
cld
xchg
in
add
cmp
sub
inc
jmp
repnz
daa
clc
sbb
push
out
or
inc
jp
xchg
rorb
push
push
movsb
icebp
or
xchg
jbe
mov
stc
ret
push
out
push
cld
sbb
and
call
xchg
int
mov
xchg
fwait
and
das
xchg
xchg
dec
mov
out
xchg
push
rolb
mov
pop
or
lret
or
leave
andb
stos
addr16
mov
add
cmp
in
lock
ss
dec
inc
imul
add
add
jmp
daa
es
push
loopne
in
lret
mov
xchg
xchg
cmpsl
sub
sbb
xlat
lods
sti
ret
fincstp
xchg
inc
into
addr16
outsb
pop
push
add
push
mov
fnstenv
in
push
or
adc
mov
mov
lahf
sti
mov
pushf
xchg
push
jle
pop
jns
ret
loope
mov
cwtl
in
call
in
xchg
inc
jne
xchg
call
jb
fidivl
je
mov
add
xchg
mov
cmp
fsubrl
outsl
cmp
jns
add
inc
repnz
jb
lret
addb
shrb
out
or
xlat
fstpt
insl
ret
pop
dec
lcall
jl
push
movsl
iret
mov
mov
test
xchg
das
push
push
or
sysret
cmp
mov
iret
jo
out
xor
inc
xchg
mov
dec
xor
cmpsl
inc
icebp
jb
adc
add
out
or
jns
xchg
int3
mov
or
jno
cmp
les
outsb
add
fidivrs
adc
enter
jns
inc
jbe
inc
mov
xor
add
xchg
ss
or
add
aam
pusha
pop
fisubl
aas
mov
test
pop
xor
aam
push
roll
cmp
cmp
or
test
sub
and
ret
adc
das
outsb
mov
inc
in
adc
mov
xchg
dec
cwtl
fbstp
rclb
fldt
dec
lods
adc
mov
push
jno
cmpsl
ljmp
call
cmp
dec
xchg
sahf
imul
loope
adc
xor
sub
mov
bound
sub
jno
pop
lods
jae
sub
add
jo
loop
lahf
push
cli
and
inc
rcrl
dec
loop
enter
arpl
xchg
sbb
xchg
fisttpll
adc
lods
mov
sbb
or
push
cmp
hlt
xchg
cmpb
popf
cmp
or
and
repnz
dec
ret
iret
in
xchg
daa
pop
int3
jb
push
movsb
icebp
or
push
xchg
mov
jns
mov
adc
push
xor
sub
outsb
mov
scas
in
sub
sbb
out
xor
push
sahf
xchg
test
fadds
aaa
sbb
adc
mov
mov
sbb
push
sub
sbb
mov
sub
or
mov
add
mov
lods
mov
fisubrl
fadd
fists
outsb
popa
pop
push
mov
dec
test
and
cmpsb
sub
ja
inc
pop
mov
pop
imul
cmpsb
push
or
ss
stos
mov
xor
pop
pop
nop
filds
xchg
mov
fisubl
add
movsb
call
jbe
cs
iret
mov
movsl
push
jnp
xorl
mov
sbb
mov
or
or
bound
dec
fwait
cmc
enter
push
mov
xchg
mov
dec
inc
sub
jl
loop
jge
sahf
or
jno
add
out
push
cwtl
add
test
and
xchg
add
jg
lahf
lock
mov
lock
imul
aaa
mov
cltd
nop
push
jmp
add
fs
cmpl
sbb
dec
cmp
and
add
rorl
jb
pushf
daa
aam
bound
push
rcl
cli
mov
arpl
andl
in
push
push
in
push
cltd
insb
mov
push
push
xor
int
out
cmp
mov
pop
dec
xor
push
adc
clc
adc
sub
clc
inc
or
inc
jae
insl
test
ret
cmp
cltd
cmp
in
imul
jns
jnp
sti
pop
mov
daa
je
sbbb
mov
lret
pop
sub
test
pop
es
mov
jl
movsb
imull
enter
and
mov
rorb
jbe
fcmove
fwait
enter
inc
lahf
imul
pop
test
insb
loop
inc
insl
adc
xor
inc
outsb
pop
mov
push
xchg
sub
mov
push
mov
lret
xor
int
mov
pop
outsb
enter
mov
cmp
mov
int
adc
xor
dec
and
aad
scas
jb
dec
pop
add
sub
pop
xchg
addb
cmp
xor
in
mov
out
aad
lret
xchg
cli
bound
test
or
xchg
lret
mov
filds
push
xchg
les
push
icebp
roll
lcall
push
cmp
lock
mov
daa
insb
dec
mov
cmp
mov
inc
pop
pop
xor
hlt
adc
in
test
insl
scas
push
jb
orb
mov
loope
insl
lea
xor
xor
das
dec
jae
fwait
pusha
mov
ja
in
mov
movsb
mov
stos
inc
in
cmp
jle
dec
aaa
push
cmp
fisubrl
pop
xchg
fs
or
fisubrs
subb
pop
stc
fsts
add
loop
inc
inc
daa
mov
icebp
push
sub
xor
cmp
cli
cmp
bound
lcall
das
mov
dec
lds
sub
shll
or
jp
daa
aas
bound
mov
imul
jecxz,pn
in
aas
movsl
repnz
ja
xlat
outsb
cmpsl
les
adc
push
adc
mov
dec
cmc
push
adc
ss
icebp
in
movsb
push
mov
mov
push
jmp
ret
test
xchg
mov
ja
fwait
mov
pop
test
test
mov
mov
pop
jnp
aas
fiaddl
sub
inc
ljmp
sub
push
mov
mov
mov
sbb
ret
add
adc
cmc
inc
xchg
out
insl
dec
int3
imul
mov
std
sbb
add
call
pop
lods
xchg
xor
ficoms
out
int3
jecxz
loope
pop
cmpsb
jecxz
iret
cmp
movsl
cli
mov
fwait
call
cmpsb
in
gs
int3
hlt
pusha
test
adc
and
sub
in
cmp
inc
push
jp
dec
push
cmp
fadds
pop
xor
add
bound
daa
add
je
push
cmp
jge
xorb
mov
dec
mov
jg
or
cwtl
mov
push
std
cmp
mov
dec
in
xchg
fnsave
jne
dec
jbe
nop
ss
ljmp
push
mov
fwait
pushf
sti
or
rclb
xor
dec
popf
in
cmp
mov
loop
fwait
lds
rcrb
lret
pop
pop
sahf
jmp
mov
daa
push
mov
sbb
aad
sbb
jb
outsl
push
mov
leave
repz
aas
mov
shr
loope
addr16
mov
and
add
shrl
call
mov
push
sub
adc
loope
and
leave
je
lds
rcl
leave
cmp
jle
mov
push
aas
mov
test
cmp
add
inc
int
loopne
loop
outsb
stc
add
ss
push
xchg
xor
mov
add
mov
addr16
andl
cwtl
ret
daa
aas
mov
shr
mov
sub
data16
jne
sub
push
adc
or
adc
jae
cmc
xchg
dec
adc
or
dec
lods
cld
imul
push
add
roll
mov
pushf
mov
mov
cwtl
loopne
xor
movsl
jp
enter
pop
push
inc
pop
in
test
mov
mov
icebp
out
xor
adc
icebp
repnz
xor
out
test
in
sub
mov
cmp
cmpsl
shrl
lds
iret
in
sub
and
stos
fisubrl
push
sub
scas
decb
mov
stos
jno
in
rorl
or
add
add
dec
push
mov
movsl
stos
jno
jbe
mov
int3
xchg
movsl
mov
pop
cli
push
jecxz
add
xor
dec
repz
icebp
and
hlt
into
or
pushf
mov
leave
outsl
cltd
insb
mov
iret
push
push
pop
add
sub
xchg
pop
push
mov
push
mov
add
sub
xchg
pop
mov
push
push
pop
xor
push
subl
pop
add
pop
push
mov
add
sub
mov
popl
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
in
sbb
mov
add
jmp
xchg
add
xor
subl
and
push
adc
rclb
scas
movsl
imul
xchg
jbe
sbb
pop
lock
mov
cmpsl
aaa
jns
cltd
and
stos
aas
sub
dec
iret
push
pop
push
out
inc
stos
lcall
jge
mov
cmpsb
repz
lock
pop
xchg
shll
scas
pop
outsl
clc
aad
xor
mov
pusha
call
das
jp
repz
hlt
mov
mov
pop
clc
popa
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jae
sbb
fstps
mov
mov
and
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
movl
cld
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
rcll
xchg
xor
mov
push
call
mov
jmp
mov
clc
cmpb
cs
jg
repnz
cs
lea
push
xor
fistpl
and
adc
in
xchg
daa
adc
out
inc
mov
sub
dec
xchg
dec
lahf
xchg
jno
dec
push
fadd
push
test
test
jb
jecxz
pop
xor
add
mov
out
into
jmp
das
cwtl
icebp
nop
cmp
push
shll
addr16
pop
adc
insl
nop
pop
fistps
mov
and
je
pop
rcrb
outsb
aas
add
pop
rclb
into
pusha
aas
mov
xlat
mov
mov
ret
mov
mov
cmp
add
repnz
rcl
pop
push
fcom
pop
out
mov
adc
je
sbb
ss
pop
mov
sbb
pop
mov
pop
rcrb
xlat
push
mov
mov
rcrb
xor
cmp
sub
addr16
lds
pushf
pop
adc
xlat
out
mov
shl
and
int3
loopne
int3
dec
jnp
push
cmp
mov
dec
xchg
dec
push
pop
pop
pushf
stos
cmpsb
scas
xor
xchg
mov
int3
jp
fldl
cmc
lahf
bound
sahf
pop
mov
lods
icebp
jg
xchg
cwtl
sub
xchg
test
fstps
jmp
ret
stc
les
pop
cmp
mov
mov
fistps
cmp
ljmp
push
pusha
cmp
outsb
subb
pop
sbb
push
sarl
cmp
sub
add
stos
fistps
inc
fwait
cmp
xor
pop
sub
inc
movsb
fwait
loope
xchg
leave
repz
jp
addr16
ss
mov
fistps
or
xor
orl
mov
or
and
shll
dec
fwait
imul
test
outsb
out
pop
mov
lods
stos
and
repz
xchg
cld
js
xchg
xor
loop
push
mov
jo
add
std
mov
xchg
orl
push
aad
or
loopne
cld
js
std
bnd
xchg
insb
xchg
insl
fidivrl
loop
dec
xchg
adc
ljmp
xor
cld
js
mov
fimuls
insl
xchg
jno
pop
sar
pop
aad
lcall
js
stos
into
or
push
mov
in
data16
imull
cmp
out
sbb
testl
clc
sbbl
pushf
nop
jns
addl
popf
inc
sbb
ret
pushf
jb
and
mov
inc
out
jbe
test
mov
sbb
jge
mov
xchg
cmc
pop
and
fmull
xchg
sbb
mov
idivl
sub
sbb
jne
inc
pop
and
mov
roll
mov
push
sub
test
std
and
pop
rorb
stc
fs
and
aad
imulb
mov
cmp
mov
mov
mov
inc
sub
popf
sbb
push
outsb
cli
test
test
pushf
loopne
hlt
push
fs
and
xlat
gs
in
imul
cmpb
rolb
fistpl
pop
fisttpll
ja
and
mov
inc
call
dec
sub
sti
lret
pop
jne,pn
in
fucom
cmp
scas
rolb
mov
or
push
lahf
ficompl
call
mov
insl
inc
mov
cmp
xchg
test
or
push
lahf
adc
call
mov
test
data16
mov
or
ja
jecxz
inc
gs
lea
sbbb
std
dec
adc
cli
gs
cli
gs
mov
lcall
sub
jb
mov
out
lods
mov
push
jno
ret
inc
gs
pusha
lahf
imul
gs
insl
jb
or
push
jno
push
sub
mov
mov
mov
sbb
stos
pop
or
inc
sub
cli
test
outsb
sbbb
insl
adc
sub
push
shld
dec
pop
out
test
push
push
sbb
xchg
xlat
stos
dec
leave
xchg
mov
jno
or
ds
fmuls
dec
cmpl
xlat
dec
addl
mov
clc
cmp
sub
add
int3
mov
orb
mov
xchg
and
xor
inc
daa
daa
mov
jecxz
mov
in
movsb
inc
xchg
dec
stc
nop
fwait
rcpps
jo
sahf
dec
outsl
shll
test
mov
xor
dec
dec
dec
nop
pop
inc
mov
cmpsb
push
imul
cmpsl
mov
jp
xor
cmpsl
mov
push
sub
cwtl
mov
add
orb
imul
daa
in
jb
sub
cld
insb
ss
push
rclb
add
jmp
rclb
add
mov
ds
fadd
daa
adc
orb
inc
xor
aaa
aad
mov
rolb
int
dec
jns
clc
xchg
push
fwait
sbbb
in
lods
roll
sub
mov
xor
pushf
shl
rcll
fwait
pop
push
adc
or
stos
cmp
sbb
movsb
repz
fimuls
push
mov
cltd
pop
jae
pop
mov
push
fcmovnu
jle
jne
mov
sbb
fwait
pop
lock
push
sahf
pop
xor
cmpsl
subl
mov
xor
movsb
fmull
mov
xchg
dec
sub
lods
lock
fwait
cmpsb
xchg
test
xchg
xor
stos
ds
xor
scas
jp
pushf
pop
lock
call
mov
ret
mov
fwait
push
fisttpll
pop
push
dec
lcall
pop
dec
lea
into
mov
xor
pushf
pop
mov
fistl
mov
cmp
adc
adc
and
cmp
and
cmp
fsubp
adc
xchg
rorb
adc
mov
xlat
sbb
adc
rcll
in
push
pop
shrl
mov
jae
test
jmp
dec
xchg
mov
pop
clc
stos
movsb
insb
cmpsb
mov
xchg
adc
inc
in
popa
jp
adc
jmp
push
aaa
push
pop
sbb
push
repz
pop
daa
decb
xchg
hlt
imul
nop
adc
xchg
xchg
pop
std
add
pop
fsubp
adc
pop
push
pusha
jo
loope
test
pop
sar
mov
add
out
sarl
jo
inc
dec
das
scas
sbb
in
lock
fistl
fsubp
aad
mov
cli
sbb
or
sub
jae
lcall
cs
inc
in
inc
pop
rclb
fbstp
inc
push
aas
mov
xor
shrl
xor
daa
sub
out
sub
cmp
inc
push
mov
and
sub
aam
decb
shll
mov
cwtd
mul
sbb
mov
push
push
push
inc
or
mov
ja
jno
jnp
cmpsb
mov
test
lods
sbb
mov
and
push
ficoml
xor
aaa
pushl
jl
xlat
sbb
es
xchg
cmp
insl
scas
add
fildl
mov
inc
inc
jo
pop
sbb
jnp
cltd
lea
or
scas
out
test
icebp
xlat
pop
lcall
dec
js
adc
repnz
mov
xchg
adc
sub
hlt
rclb
cwtl
hlt
shrb
push
cmpsl
addl
or
push
leave
pop
jnp
test
rorl
scas
mov
mov
outsl
loopne
ret
enter
std
loope
dec
jmp
or
dec
ret
sbb
icebp
rcrl
shll
sbb
int3
sbbb
and
fs
push
or
es
jmp
adc
cmc
xor
push
or
decl
sub
iret
fsubl
scas
adc
outsl
mov
and
rclb
xchg
nop
insb
mov
stos
movsb
push
pushf
ljmp
nop
insb
push
adc
jge
inc
stos
stc
sarb
cltd
nop
push
mov
jno
or
insb
push
xchg
icebp
call
data16
roll
or
outsb
inc
xchg
jns
and
call
xor
jl
cmpsb
dec
out
lds
lret
aas
outsb
imul
popa
inc
mov
shrb
jle
add
sahf
add
and
movsl
jle
push
push
xor
mov
sbb
fcoms
ficoms
or
and
xchg
jmp
jl
daa
nop
insb
push
pop
mull
shrl
and
and
xchg
nop
adc
xchg
nop
insb
inc
daa
jmp
ja
mov
dec
and
and
jo
sbb
push
jge
push
mov
xor
push
inc
cmpsb
lea
ss
jecxz
je
cmp
fninit
lds
push
xchg
and
stos
fucom
lds
int
pusha
lcall
fwait
and
xor
xchg
push
mov
inc
jne
pop
lret
and
and
push
or
xchg
cmc
js
xor
jecxz
test
sub
mov
fucom
lds
cmp
testb
in
scas
lcall
scas
fucom
or
inc
loopne
mov
jecxz
push
sub
mov
mov
leave
fucom
lds
pushf
addb
add
mov
add
lea
inc
fcomps
int
sbb
fwait
cwtl
dec
jecxz
test
movb
xchg
enter
mov
std
xchg
icebp
sbb
or
push
aas
xchg
mov
and
inc
dec
lahf
pop
mov
xor
dec
or
stos
lahf
adc
push
std
insl
popa
xchg
xchg
jecxz
adc
mov
gs
pop
mov
jle
and
cmp
rcll
les
or
aad
and
fcmovu
mov
pop
fbstp
leave
mov
mov
pop
ljmp
mov
ljmp
fidivl
fwait
loop
jl
xchg
fcoml
cmp
mov
adc
addr16
xchg
cmp
cld
mov
iret
and
sahf
daa
or
cmpsb
fnstsw
lds
and
pop
xorb
fisubrl
out
mov
ljmp
add
mov
xchg
or
je
fstpl
mov
je
ljmp
xchg
fiadds
and
dec
xor
inc
mov
mov
icebp
in
ror
xor
cmp
sub
push
ret
fxch
js
fidivrs
push
stos
paddq
pop
ljmp
push
outsl
movsb
outsb
mov
int
pop
ljmp
int3
pop
stos
add
jbe
lcall
addr16
mov
ljmp
mov
ljmp
outsb
adc
stos
addr16
lret
stc
jbe
sub
ds
mov
lret
scas
rcr
out
cmp
xor
pop
ljmp
jns
cmp
or
mov
inc
xor
add
xchg
xchg
inc
add
stos
popw
shrb
push
add
mov
and
mull
fwait
inc
and
icebp
pushf
aaa
loopne
imul
xorb
jne
add
or
push
adc
xchg
arpl
loopne
mov
daa
lods
lods
mov
lods
mov
push
in
ja
push
rcrl
mov
inc
sahf
mov
fucomi
dec
and
push
daa
inc
js
fistpll
jb
sub
shrb
jle
lods
cmpsb
lock
inc
xchg
mov
in
cmpl
add
add
jmp
pop
jbe
outsl
dec
ret
iret
mov
cmp
mov
pop
lret
cmp
fisttps
outsl
mov
icebp
scas
paddsb
jb
icebp
dec
addr16
xchg
loope
dec
xchg
xchg
dec
call
aaa
call
pop
xor
out
mov
add
sarl
jbe
pushf
jns
jl
into
sar
push
sbb
adc
mov
divb
lret
imul
js
push
gs
shrl
lret
and
into
popf
lods
xor
dec
call
xchg
mov
mov
cmpsl
mov
in
aaa
ret
inc
pop
mov
std
addr16
test
in
enter
jmp
loop
push
lea
shl
and
cwtl
inc
mov
push
in
sub
xor
cmp
pushf
mov
divb
fisubs
inc
adc
jmp
mov
push
sbb
out
lret
call
sbb
push
hlt
arpl
fnstsw
fisttpll
cmp
push
ret
iret
pop
mov
sti
daa
fsubl
add
stos
pop
sub
imul
clc
test
imul
test
adc
jo
sahf
aas
mov
ljmp
xchg
mov
cld
or
mov
mov
dec
sbb
and
rcrl
in
jno
xor
aaa
fwait
xor
pop
and
rcrb
cmpb
and
out
inc
xchg
hlt
aas
repnz
fldl
pop
mov
push
push
roll
xchg
adcb
test
ret
jle
cwtl
mov
mov
mov
sub
dec
clc
or
stos
push
jnp
cld
cmpsl
aaa
xchg
aad
les
aam
push
jg
xchg
dec
js
mov
sti
js
pop
sarb
cwtl
inc
out
out
scas
xor
xor
scas
sbb
adc
in
push
cmpsl
gs
ds
rcl
inc
add
cmp
sbb
or
mov
sub
xor
pop
cld
push
lock
pop
sbb
inc
adc
popa
mov
jl
jbe
jo
iret
add
inc
js
and
pop
xor
enter
adc
std
fnsave
aad
mov
mov
sbb
pusha
mov
and
inc
add
xorb
or
cmp
jecxz
add
mov
push
mov
ss
mov
cmp
out
hlt
sbbl
sub
xchg
cmp
nop
inc
stc
rclb
sub
inc
loopne
push
clc
daa
or
in
not
bound
cmpsb
test
mov
push
adc
push
sbb
xlat
mov
push
lods
lahf
dec
in
dec
std
and
xchg
ret
or
jle
dec
sbb
enter
js,pt
adc
xchg
dec
in
sbb
push
xlat
lods
mov
out
push
sbb
aaa
xlat
jg
cmpsb
enter
outsb
jns
cmp
ret
jle
jmp
jmp
arpl
sarl
insb
jae
push
mov
mov
pop
push
lret
push
push
mov
mov
push
dec
push
or
and
fisubs
pop
xor
fsubrl
test
xor
push
sti
xor
orb
push
xor
sahf
pop
xor
ljmp
aam
movsb
jnp
jl
imul
lcall
sub
insl
je
scas
jecxz
ret
pop
mov
lret
jge
test
shll
adc
popf
out
fsubrs
pop
sbb
call
cltd
sbb
in
xchg
dec
and
ss
idivb
inc
push
mov
int3
xchg
xor
mov
push
and
loopne
mov
and
cmp
push
loop
call
adc
add
or
jne
push
xor
push
xchg
aas
jb
sbb
xchg
aad
mov
in
jmp
dec
mov
ljmp
pop
lock
in
into
sub
pushf
jno
movsl
inc
popa
sbb
bound
push
pushf
cmpsb
inc
pop
int
sub
je
leave
cld
pop
fiaddl
in
rcrl
inc
mov
bound
push
call
bound
mov
stos
dec
or
scas
sub
add
cmpsb
dec
mov
jae
xor
push
xchg
rolb
mov
sbb
xor
outsl
fcompl
xchg
fisttpl
dec
data16
fdivs
nop
dec
ret
xchg
push
cmpsb
or
sub
lock
aas
push
cmpsb
nop
push
repz
inc
inc
mov
dec
fsubs
jns
xchg
inc
push
mov
add
cli
aas
inc
sub
nop
aam
nop
aas
push
push
dec
gs
adc
mov
repnz
xchg
es
fisubs
dec
in
add
fisubrs
push
loop
arpl
pop
imulb
lcall
xor
jecxz
fwait
and
pop
or
mov
inc
je
xchg
fwait
es
sbb
jl
pop
or
xchg
std
daa
inc
inc
pop
or
cmpsl
imul
sbb
mov
mov
sub
mov
inc
inc
or
popa
je
push
inc
daa
shll
mov
aas
insl
das
into
xor
outsl
mov
repz
sbb
mov
push
ds
icebp
imul
icebp
ss
shll
xchg
out
loopne
push
shl
fdivs
sub
test
daa
test
mov
outsl
jne
loop
dec
inc
test
mov
cmp
std
in
movsb
ss
out
rcrb
mov
pop
dec
in
push
inc
andb
push
jl
cltd
xchg
movl
imul
dec
pop
mov
xchg
pop
jl
and
cmp
inc
jp
imul
jne
cmp
sub
pop
xchg
cs
add
inc
ret
sub
fs
cmpsl
push
sub
in
movsl
fsubs
testb
out
stc
ret
jb
sub
ret
pop
test
bound
mov
xchg
mov
or
fcomps
adc
cwtl
in
test
adc
mov
fsubrl
mov
mov
jnp
dec
popf
mov
add
dec
pop
sub
lea
ret
inc
loop
inc
cmp
add
je
fstps
xlat
sub
stos
or
cli
ffree
test
test
push
roll
mov
mov
testb
jecxz
cmp
mov
sbb
mov
out
inc
adc
xor
aad
aas
sbb
and
pop
cmpsb
cmp
clc
mov
movsb
cmpl
add
int
jmp
shrl
mov
aaa
jo
sub
xchg
mov
cmpsl
sbb
out
hlt
sbb
fs
add
push
ret
xchg
add
cld
mov
sub
push
outsl
jp
cmp
inc
ret
mov
rolw
out
dec
das
xor
add
ljmp
out
add
xchg
popf
stc
test
adc
movsb
fdivr
adc
scas
ss
ficoml
mov
inc
xchg
add
adc
sbb
daa
push
in
mov
mov
rorl
adc
xlat
insl
mov
movsl
mov
mov
jb
les
out
in
xchg
inc
insb
xor
jmp
sti
out
cmp
insb
cmp
pushf
xchg
test
or
adc
xchg
insl
outsl
test
fwait
dec
movsl
fisubrs
pop
or
xchg
popa
add
mov
in
add
mov
push
in
sbb
or
inc
pusha
ss
mov
int3
xor
add
lods
and
dec
mov
sbb
mov
je
and
insb
in
inc
loop
sbb
jnp
xor
fistpll
mov
add
add
inc
jp
lea
sub
cld
cs
lods
mov
pop
mov
and
cmpsl
cltd
test
testb
xor
inc
subb
jo
movsb
push
sahf
mov
push
dec
lcall
pop
loop
es
das
dec
jle
loope
outsl
mov
rcrl
cmc
dec
xchg
incl
ss
ja
and
or
mov
std
mov
push
sahf
stc
das
push
rclb
loope
jle
cltd
sbb
inc
repnz
mov
addr16
sub
jae
cmp
mov
test
mov
cwtl
jg
cmp
daa
and
add
adc
xor
out
mov
fimuls
das
push
inc
push
cmp
imul
and
sub
repnz
push
in
mov
mov
out
adc
inc
xor
mov
mov
xchg
push
cmc
add
sbb
cmp
fcomp
pop
or
insl
add
in
jle
imull
jg
add
rorb
sub
fnsave
negl
insl
cmp
dec
dec
popf
jne
dec
shl
adc
dec
xchg
out
sti
fistpll
out
movsb
in
mull
push
out
push
add
or
sahf
stos
cmp
ficomps
lea
lea
adc
fwait
mov
pop
ret
jnp
sub
pop
das
int3
ja
xchg
pop
orb
jae
adc
cmc
sbb
jge
outsl
movsb
mov
inc
outsb
ss
pop
dec
fsts
ret
add
hlt
sub
jmp
in
dec
cmp
mov
aam
lahf
in
and
je
inc
xor
lea
jns
inc
pusha
sahf
jg
cmpsl
mov
nop
fcoms
imul
fucomip
lret
lret
jne
and
loope
ret
push
ljmp
xchg
xor
jle
lock
adc
xorl
sub
adc
lret
cmpsl
pop
iret
repz
leave
pop
ja
icebp
leave
icebp
sbb
aam
mov
xchg
addb
js
fwait
xor
push
clc
jbe
inc
mov
or
in
cmpsb
nop
pop
mov
test
adc
fxch
adcl
or
jp
addr16
cmp
mov
cli
out
lds
gs
inc
aam
cmp
push
pop
icebp
or
sub
repnz
sbb
popf
loop
pop
movsbl
subb
rorb
fldt
sub
mov
mov
insb
sarl
xor
out
jg
outsb
in
shll
cmp
dec
dec
mov
hlt
insb
cwtl
push
pop
cmp
icebp
xor
outsl
addr16
loope
and
push
jp
sub
hlt
push
fyl2x
mov
adc
into
push
fildl
add
popf
mov
adc
xor
loope
scas
test
adc
add
lcall
dec
or
sbbb
dec
lret
icebp
push
ljmp
popa
int3
loopne
ds
popf
and
jl
fisttps
pop
and
ljmp
cmp
and
ja
mov
js
jno
jne
enter
pop
dec
movsb
push
sub
cmp
aam
adc
int
xlat
mov
out
stos
scas
or
stos
pop
pop
xchg
fidivs
mov
pop
sbb
ljmp
cwtl
mov
dec
enter
mov
inc
or
pop
cli
loop
inc
cli
sub
push
pop
and
fs
cmpsb
cld
mov
and
and
cltd
int3
xor
lds
pop
lret
int
sahf
clc
xor
sbb
or
je
int
push
movsl
push
loopne
mov
push
push
mov
or
popf
sbb
cld
rcrl
lret
xchg
jb
pop
cmpsb
std
xchg
nop
jo
mull
sub
xlat
addr16
loop
lahf
loopne
xchg
cmc
dec
jge
arpl
cld
jecxz
mov
add
mov
ss
sarl
add
ljmp
into
cld
inc
data16
pop
add
push
scas
fsts
inc
mov
jge
gs
movsl
data16
mov
bound
mov
pop
idivb
fsubr
mov
cmp
cld
inc
jl
mov
pop
insl
sbb
movsl
and
mov
cmp
add
xor
pop
ja
sbb
or
mov
gs
mov
movsb
fdivr
mov
and
xchg
lods
sub
adc
inc
adc
movb
mov
es
add
fcompl
dec
shrb
hlt
hlt
and
adc
sahf
push
sub
jg
mov
xchg
iret
enter
inc
jnp
cli
out
ljmp
mov
sahf
imul
inc
pop
ds
cmp
mov
pcmpeqw
popa
push
mov
mov
push
mov
cmp
dec
pop
sbb
xchg
lcall
movsb
aaa
jb
loop
bound
xor
jne
adc
fldt
sar
loopne
sbb
lea
pop
jnp
insl
push
adc
jge
leave
push
or
stc
cmc
mov
unpckhps
mov
pop
jecxz
scas
repz
sub
sub
sub
mov
mov
and
aad
dec
loope
cmp
ljmp
cwtl
push
adc
in
stos
add
dec
rcrl
ljmp
sbbl
push
shrl
inc
popf
jns
mov
scas
testb
es
enter
inc
pop
movsl
inc
fmull
pop
imul
cld
in
push
stc
in
mov
rolb
and
cmp
sub
aaa
out
fsubrs
push
pop
shl
pushf
scas
mov
lea
frstor
push
getsec
data16
jno
imul
push
clc
sti
cli
jbe
adc
cmp
mov
decb
sub
xor
pop
sti
imul
jp
mov
adc
sahf
mov
sub
ds
jns
into
sub
lock
or
dec
es
jge
stc
pushl
push
shrl
lds
dec
mov
insl
push
repnz
jmp
push
std
or
sahf
mov
fisubrs
out
mov
mov
ret
inc
adc
pop
mov
imul
out
or
mov
std
xchg
sahf
mov
mov
imul
popf
rol
in
cwtl
bound
push
loop
fld
pop
xchg
sub
jnp
pop
mov
orl
fdiv
dec
out
dec
outsl
clc
dec
sub
insl
inc
movsl
mov
rcrl
fsts
pop
sub
pop
sub
jecxz
pop
testl
js
jle
push
rcrb
cmpsb
pop
rcrb
xchg
sahf
xchg
ret
adc
jb
adc
leave
cmp
adc
out
movsl
mov
pushf
movsb
dec
inc
cltd
ret
pop
sub
add
push
pop
ffreep
jno
cmp
pushf
add
push
adc
mov
xchg
shrb
out
inc
pop
addr16
je
arpl
rcr
stos
data16
lret
or
dec
mov
arpl
mov
stos
mov
push
jns
mov
dec
movsl
sub
pop
mov
push
pop
rclb
arpl
cmpb
dec
mov
sbb
sub
inc
xchg
outsl
popf
lret
pop
mov
fisttpll
repz
mov
inc
sub
clc
out
mov
movsb
sbb
pushaw
out
in
add
jbe
outsb
xchg
movsl
push
test
popf
mov
and
xchg
fdivrp
mov
xor
or
fcomp
sub
sbb
fldt
inc
adc
add
xor
int3
aad
mov
pop
and
enter
loope,pt
fdivr
lods
xchg
leave
push
cltd
lret
inc
fstpl
jmp
mov
adc
or
test
mov
test
adcb
stos
movsb
data16
cld
and
loopne
mov
in
push
imul
ret
imul
mov
or
cmpsl
adc
sarl
inc
xor
ljmp
sub
add
icebp
test
mov
jl
xorl
lods
js
sub
push
fbld
dec
in
test
add
inc
pushf
mov
push
mov
sbb
sub
xchg
lahf
and
jl
loopne
xor
push
mov
sti
mov
inc
jne
rcrb
sub
addr16
cmc
cld
andl
test
pop
pop
lea
loopne
sub
xchg
push
mov
xchg
or
addr16
xchg
out
cmp
xchg
mov
push
fistpl
xchg
fistl
push
test
jae
xchg
jnp
data16
xchg
mov
inc
xchg
mov
xchg
loope
xchg
shl
pushf
pop
inc
mov
or
and
sbb
pop
xchg
cli
hlt
mov
in
das
jmp
fwait
dec
mov
sbb
adc
pop
mov
nop
sti
push
movsl
lds
int
loope
add
pop
mov
mov
mov
aaa
xor
dec
xchg
sbb
mov
xor
test
mov
bound
xor
inc
ljmp
rcrl
ljmp
pop
sub
sahf
add
push
subl
aaa
xchg
xchg
iret
add
xor
add
std
daa
jno
push
les
lods
sbb
sti
gs
aam
xor
icebp
mov
orl
and
cmp
add
xchg
add
sbbl
sbb
sbb
les
xchg
subl
or
aaa
mov
cmp
and
loop
ret
cmp
adc
xchg
push
jae
hlt
sbb
inc
push
sahf
xchg
xchg
or
sarl
jne
lahf
movsl
push
pusha
data16
call
cvtps2pi
xor
push
std
and
mov
mov
addr16
xor
dec
rcl
pop
fwait
or
xor
and
movsb
pushf
adc
push
fistl
into
insb
sub
fadd
jbe
mov
mov
cmpsb
ljmp
xchg
fldcw
popf
jae
scas
xchg
out
xchg
xor
fisttps
test
cmpsl
or
sti
loope
sub
ds
jg
inc
rcll
and
or
jno
fisttpl
test
mov
mov
scas
adc
add
aad
fisubrl
loopne
or
adc
or
clc
ror
pop
clc
pop
std
inc
int
aam
adc
movsb
sahf
hlt
cwtl
pop
stos
sub
mov
int3
adc
fidivrs
insl
push
pop
idivb
cmc
push
push
xchg
mov
sbb
fsubrl
arpl
jp
push
pop
cmp
test
push
xchg
jno
andb
xor
mov
cmpsl
out
xchg
cltd
roll
xor
mov
pop
ret
flds
jnp
shll
cmp
mov
andps
enter
pop
sbb
and
jle
dec
inc
fsubs
and
and
xchg
cmpsl
xchg
push
xchg
imul
addb
jb
lret
nop
dec
xchg
clc
shlb
jge
jg
sub
ljmp
mov
stos
sbbb
cmp
inc
clc
jp
or
lods
sarb
xchg
bound
mov
inc
repz
push
outsb
mov
sarb
jns
and
mov
cmp
jne
adc
mov
adc
inc
shr
aas
pushf
in
int3
xor
popa
xor
pop
mov
inc
popa
cmp
enter
lret
fildl
clc
xchg
pop
push
add
jp
xchg
or
cltd
mov
aaa
stos
push
ret
dec
push
outsl
lahf
mov
imul
lods
mov
inc
in
in
dec
jno
xor
mov
test
dec
sub
adc
stos
loope
mov
mov
inc
outsb
ss
cmp
mov
xchg
fnstcw
lret
mov
push
jecxz
cmpb
push
xchg
hlt
add
adc
arpl
jmp
loopne
jge
rorb
dec
pushf
and
cli
insb
aad
pop
lds
out
jp
push
fisubrl
pop
sbb
cmp
pop
mov
sbb
push
cmpsl
and
nop
es
fildll
into
cmp
das
ud1
push
in
leave
or
shl
pop
pop
loope
lcall
lods
xchg
rcrb
push
cmpsl
sub
push
gs
ss
xchg
test
and
dec
push
sarb
ljmp
and
jns
cmpsl
fwait
pop
mov
fs
lret
inc
cmpsb
mov
jbe
ss
xchg
mov
rcll
out
inc
sarl
addr16
je
arpl
dec
xor
mov
xchg
inc
xlat
bound
add
xor
je
jbe
xchg
or
mov
xor
push
pushl
or
js
popa
sbb
scas
dec
add
pop
inc
repz
stos
mov
icebp
mov
add
add
cs
mov
push
cmp
orl
or
repnz
pop
or
jno
mov
jge
ret
bound
iret
fcoml
repz
imul
cmc
out
rorl
mov
inc
insb
outsl
ss
inc
sub
mov
fnstenv
xchg
push
dec
lret
sub
dec
scas
in
iret
mov
popf
ss
in
xor
lea
mov
scas
xor
xor
int
mov
jecxz
jne
pop
jnp
adc
mov
ret
aad
pop
fdivrs
outsb
sahf
xchg
xchg
int
ja
sbb
cmp
mov
jne
jp
push
fistl
stos
mov
scas
lods
pop
mov
scas
mov
test
mov
cwtl
push
insl
xchg
and
int3
mov
test
sti
adc
mov
in
adc
inc
add
stos
arpl
or
sub
lret
imul
cs
jo
loope
xchg
xlat
cmpsb
test
jecxz
jmp
out
push
int3
sub
mov
cld
repz
bnd
lea
push
das
stc
jge
adc
aam
xor
mov
push
fbld
shll
stos
mov
popf
jmp
mov
outsl
lcall
inc
cmp
xchg
mov
mov
mov
mov
daa
adcl
dec
sbb
cmp
iret
mov
jp
jbe
mov
mov
xlat
aaa
xor
sti
iret
loopne
sub
inc
mov
hlt
enter
mov
dec
rorl
imul
dec
outsb
cwtl
gs
mov
out
jl
fidivrs
movsb
insl
inc
jecxz
push
sub
fs
lods
xchg
lods
jb
and
pop
sub
mov
and
in
cmp
popa
and
stos
arpl
xchg
lahf
pcmpeqb
or
lea
add
cmpb
jmp
dec
cltd
jl
ret
cld
aas
incb
lret
adc
stos
mov
push
sbb
cmpsb
or
inc
pop
movsb
mov
hlt
sub
in
pop
out
gs
call
jbe
or
insb
ljmp
sub
sub
mov
imul
jb
adc
xor
loopne
in
adc
jg
mov
push
sti
cmp
mov
xor
loope
pop
mov
test
add
adc
dec
mov
aas
inc
stos
push
dec
sbb
mov
out
add
mov
pop
mov
jb
xlat
mov
add
mov
insb
enter
lods
es
or
sbb
fcom
inc
fisubl
fildll
sti
jb
mov
xchg
xchg
push
add
faddl
mov
in
sbb
popf
cmp
mov
mov
lret
pop
jo
stos
dec
daa
mov
push
fmuls
lods
and
dec
xchg
cmc
add
xchg
call
imul
fcompl
mov
jg
inc
jmp
adc
pop
pusha
addb
dec
jns
mov
dec
adcl
mov
popa
gs
out
aam
and
ret
cmpsl
lea
or
mov
sbb
mov
mov
mov
xchg
loopne
jle
scas
insb
sbb
push
vmaxps
push
and
scas
addr16
inc
xor
adc
neg
dec
sub
mov
dec
test
loop
scas
fs
out
jp
scas
and
cmp
jg
enter
mov
mov
popa
sbb
mov
scas
jns
cwtl
pop
ret
cmp
adc
mov
lock
sahf
push
push
push
mov
push
outsl
out
setge
jp
mov
inc
jp
mov
test
push
xlat
fsubs
mov
mov
je
lods
xor
mov
mov
popf
and
xchg
push
test
insb
dec
inc
pop
lock
mov
jo
cmp
push
add
fidivl
dec
dec
pushf
fs
call
out
sbb
sti
mov
or
das
mov
mov
in
inc
or
stos
test
pushf
adc
or
dec
js
cmp
imul
cmp
pop
lods
fsubrs
and
mov
outsl
sub
cli
add
lods
fidivrl
mov
add
lods
mov
popf
push
outsb
lcall
or
pop
push
push
cmp
shlb
data16
bound
test
lds
cmpsl
fisubrs
stos
pop
out
pop
fwait
movsb
xchg
imul
mov
shlb
movswl
int
adc
mov
dec
xor
std
hlt
sub
imul
adc
push
jl
xor
mov
jbe
mov
shll
push
inc
push
mov
push
mov
out
pusha
mov
xor
scas
fildll
test
shlb
and
mov
sti
xor
or
add
push
std
sub
adc
lods
mov
pop
push
xlat
mov
pop
push
aas
xchg
and
add
dec
dec
dec
loopne
mov
jg
and
add
pushf
push
cmp
int
push
jle
js
pop
ljmp
inc
push
cmpsl
adc
push
and
cmp
fs
repnz
pop
mov
imul
andnps
push
sahf
imul
inc
bound
mov
mov
out
leave
shrb
pop
int3
pop
push
in
pop
out
cli
and
dec
aaa
scas
cmp
xlat
dec
pop
or
hlt
iret
mov
inc
into
ret
icebp
sbb
aaa
ret
test
mulb
ja
je
mov
iret
outsl
std
sub
mov
mov
push
ljmp
stos
cli
fsubrs
mov
adc
je
aam
jg
scas
fwait
sub
popa
xor
fwait
rorl
jle
movsl
pop
lods
lcall
dec
sbb
addb
and
ljmp
dec
fs
xor
fiaddl
repnz
push
lods
nop
aad
mov
test
sarl
pop
jle
add
pop
jle
or
testb
filds
pop
xchg
sti
sub
mov
and
outsb
or
lock
pop
repnz
aam
mov
daa
loop
mov
xchg
push
push
pop
mov
xchg
incb
rorb
mov
pop
jl
dec
adc
jae
shlb
outsb
lcall
jne
insb
adc
jae
bound
fwait
outsl
cmp
aas
mov
inc
or
push
and
fcmovnb
int
mov
std
sub
stc
push
adc
ffreep
add
push
jne
jmp
xor
mov
fs
fs
leave
sbb
adc
inc
enter
clc
es
mov
mov
call
add
add
stc
xor
fnsave
adc
xor
inc
dec
xlat
stc
cmpb
push
jecxz
push
jp
stos
out
ja
and
mov
lods
lret
pop
imul
mov
insl
jns
jle
outsb
adc
sahf
adc
xchg
lea
or
loop
inc
jmp
outsl
jmp
mov
mov
inc
xchg
inc
push
mov
push
imul
xor
outsl
mov
jmp
inc
push
pusha
push
sub
xor
inc
fwait
add
in
stos
data16
cmp
ret
or
xor
sub
popa
into
or
or
std
pusha
sbb
mov
cwtl
mov
jp
fdivrl
mov
cmp
pushf
lock
jge
push
aaa
sbb
mov
out
cli
out
mov
repnz
into
dec
ret
adc
icebp
xchg
pop
adc
xchg
push
xchg
push
ss
jle
inc
mov
jae
push
or
mov
into
lea
std
mov
imul
sahf
outsl
ss
xchg
and
adc
xchg
mov
pop
sahf
aad
mov
rcrl
jae
and
adc
jbe
and
into
dec
aaa
je
nop
xchg
lods
sarl
jge
andl
fnstenv
ret
ret
mov
xor
insb
pop
pusha
push
cmp
ja
mov
repnz
lods
call
std
cli
jo
rolb
mov
std
in
rolb
cmp
inc
mov
jl
fists
xlat
cmp
jb
adc
out
adc
sub
divl
imul
sahf
cld
dec
mov
jne
or
in
xor
jecxz
lcall
addr16
cmc
adc
fcmovnb
xchg
andl
cwtl
pop
ss
mov
insl
lods
mov
cmp
sbb
movsl
cld
daa
xor
or
pop
iret
rorl
inc
jae
or
cld
adc
jle
cmp
cltd
or
ss
lret
xor
and
or
dec
mov
mov
stos
popw
cmpsl
es
lods
aad
es
jp
sbb
xchg
dec
mov
es
das
decb
cmp
stos
xchg
sbb
add
adc
cmp
fildll
dec
movsb
sahf
arpl
xor
pop
lods
cmpl
shrb
mov
rclb
jl
or
cmp
dec
out
pop
mov
mov
jo
sbb
popa
ret
stc
cmp
sti
flds
test
loop
mov
add
popa
insl
jne
sbb
jnp
das
cmp
push
dec
fdivrl
in
mov
out
sti
jns
std
icebp
repnz
inc
mov
push
cmp
xor
mov
adc
stos
nop
mov
mov
jb
sbb
inc
je
adc
xor
push
push
and
scas
loop
or
pop
mov
jl
dec
inc
cltd
fldcw
push
ret
lds
or
lods
cmp
out
push
popa
and
in
adc
test
mov
jae
cmc
movsb
or
pop
mov
loop
es
jecxz
sbb
mov
xor
xchg
test
loop
scas
movsl
push
lret
pop
dec
jno
ss
jno
mov
xor
scas
data16
inc
stc
cmp
mov
jns
add
mov
jno
dec
inc
aad
out
sbb
sti
rclb
sbb
out
jmp
mov
movsl
dec
int
ret
add
and
push
xchg
mov
lret
pop
divb
mov
scas
idiv
out
push
xchg
loope
mov
jne
push
push
sbb
mov
push
sahf
mov
lea
sub
mov
push
aaa
pop
push
popa
jg
roll
cmp
or
xor
stos
jmp
mov
mov
fbld
cmc
inc
pop
jmp
jle
rep
mov
inc
fwait
stc
bound
inc
cwtl
aad
xor
mov
pusha
fdivrs
inc
pop
ja
mov
out
repz
pop
or
mov
std
push
inc
ret
shl
sbb
sub
bound
mov
fcmovnu
clc
scas
xchg
mov
xlat
shll
add
jecxz
mov
es
or
inc
ror
pop
mov
mov
icebp
inc
out
outsl
enter
sarb
bound
fmuls
or
arpl
aad
mov
jmp
jne
jecxz
arpl
cmpsb
out
mov
js
lret
pop
xor
sub
mov
pop
insl
add
es
push
outsl
sbb
clc
pop
or
call
fwait
push
adc
hlt
int
ret
je
cmp
fwait
sub
or
neg
xor
pop
adc
cmp
insl
repnz
xor
jno
pop
pop
repz
mov
jo
lods
push
cmp
inc
xchg
pop
mov
mov
stc
icebp
fstpl
push
mov
and
cs
aad
cmp
xchg
or
sbb
lcall
push
xchg
xchg
push
cs
arpl
shll
push
cld
sti
sti
ja
outsl
xchg
mov
hlt
add
aam
mov
lret
sub
dec
popa
jmp
arpl
insl
cmpsl
sbb
mov
jbe
xor
push
in
mov
outsb
pusha
and
test
lahf
popa
mov
pop
xor
dec
add
daa
aas
fnstcw
out
das
iret
or
test
inc
in
pop
out
pop
insb
arpl
test
inc
lock
jno
cmp
pop
mov
add
inc
add
add
out
outsl
popa
call
mov
adc
jno
push
pop
cld
and
xor
and
pop
fistpl
out
jns
mov
jne
ret
test
mov
test
cmp
jnp
mov
push
aad
mov
std
xchg
idivl
mov
loop
add
xor
dec
cmp
inc
in
loopne
mov
xlat
xor
test
mov
montmul
cmpsb
enter
mov
repnz
xchg
push
xor
lret
gs
cmp
divl
push
cwtl
inc
xlat
cmp
push
rcl
cmp
lds
push
not
cmp
movsb
shlb
adc
xor
leave
pop
pop
loop
cmp
mov
pop
xor
adcl
xor
mov
mov
enter
mov
xor
sbb
push
shll
push
pusha
insl
out
ret
addb
jl
orb
daa
test
clc
daa
jae
imul
push
inc
dec
sub
fmull
test
jno
jmp
in
daa
test
cmpsb
ret
je
or
xor
mov
fistl
cmp
ficoml
pop
mov
imul
or
xchg
inc
sub
out
push
pop
adc
imulb
or
or
pop
or
sbb
jmp
xor
mov
inc
mull
pop
xchg
pop
stos
push
test
dec
idivb
lea
dec
push
shrl
mov
or
mov
js
inc
fucomi
addr16
lret
xor
popa
decb
sti
into
xchg
aas
cltd
sbb
xchg
lret
add
push
mov
mov
pop
cld
hlt
sub
xchg
mov
aam
mov
aaa
cs
xor
shll
mov
lea
stos
lock
fldenv
cmp
call
call
mov
push
sbb
fdivrs
mov
ret
dec
push
ret
or
sbb
and
js
adc
into
sbb
jb
cmc
bound
test
pop
ret
lret
sub
mov
popf
into
mov
rcl
sbb
dec
xchg
pop
jbe
dec
mov
sbb
cmp
cmp
xor
jae
std
mov
jecxz
lret
test
out
mov
cmpsb
aaa
adc
push
sbbl
les
lcall
dec
int
mov
hlt
inc
mov
icebp
jg
sti
xor
sbb
scas
fisttps
xor
jle
xchg
cltd
xchg
fists
lock
mov
xchg
adc
jmp
rol
push
push
repz
lods
and
and
dec
lea
adc
cmp
jp
xchg
js
dec
jns
push
pop
mov
sub
js
mov
mov
lcall
fs
decl
push
bswap
dec
movsl
push
loope
sbb
pop
sub
pop
outsb
or
sbb
mov
cmp
inc
mov
mov
sbb
std
fildll
xchg
es
jmp
es
cs
ljmp
sbb
add
mov
out
stc
cmp
add
xor
int3
out
nop
mov
clc
or
fmull
cmp
loopne
jp
jns
mov
ds
adc
add
lds
mov
push
in
js
int3
add
add
syscall
sarb
fnstcw
add
mov
cld
repz
scas
inc
adc
loopne
and
cmp
outsb
ftst
sub
rcll
shrl
and
pop
loop
es
das
add
push
inc
dec
test
sbb
pop
jo
add
pop
sub
bound
mov
jecxz
mov
jmp
btr
shrb
cmc
addr16
stos
add
jb
jg
mov
sub
push
xchg
nop
jno
sbb
push
fisubl
cmp
sbb
icebp
lods
inc
mov
sub
push
xchg
pop
pop
lock
cltd
pop
cwtl
and
shll
jno
mov
add
sti
scas
aaa
push
lcall
mov
sub
fidivs
call
jle
cli
ret
mov
out
std
movl
sbb
iret
dec
dec
fsubl
clc
push
into
push
ss
loopne
mov
inc
aam
inc
mov
or
testb
mov
icebp
push
aad
repnz
jnp
or
push
push
xor
adc
sbb
mov
inc
lahf
fwait
and
adc
xchg
dec
sub
repnz
mov
sbb
stos
mov
cwtl
mov
pop
ret
mov
andb
xor
xchg
out
mov
nop
pop
aam
inc
lods
jo
cmp
mov
cltd
cmpsl
loop
mov
fadds
add
jo
fadd
pop
sub
stos
mov
inc
or
stc
into
das
mov
jge
adc
ficomps
mov
adc
mov
pop
cmp
repz
jecxz
les
loop
mov
clc
or
sbbb
es
pop
sbb
dec
pusha
add
inc
out
jno
mov
jns
cmp
outsl
das
into
xor
outsl
mov
jmp
mov
outsb
pop
and
into
cmp
cmp
mov
push
shrb
xlat
dec
mov
mov
loop
ficoms
pop
aaa
rcr
test
sbb
push
js
outsb
outsl
mov
das
adc
fpatan
push
dec
cmp
sub
nop
mov
sbb
enter
inc
jp
cli
push
dec
int3
jg
mov
jmp
inc
push
int3
scas
pop
mov
dec
dec
pop
mov
mov
leave
fs
inc
and
and
pop
mov
mov
cwtl
data16
adc
and
test
xchg
insb
push
sti
xchg
imul
xorl
mov
ret
divl
and
addr16
data16
push
aam
push
clc
cmc
xlat
sub
add
pushf
xchg
inc
inc
aam
roll
and
lahf
outsb
push
mov
cs
out
aaa
mov
nop
in
cmc
retw
xor
lds
jnp
and
rcr
jl
mov
fisttpll
es
pop
scas
add
dec
pusha
cld
addb
inc
xor
inc
in
call
imull
fisttpll
cmp
aas
sbb
add
pop
pop
fstps
add
scas
scas
push
divl
add
popa
and
scas
mov
idivl
inc
sub
push
or
loop
scas
loope
sbb
push
lea
and
sub
call
xor
int
icebp
mov
sbb
pop
fdivs
into
xchg
out
cmp
fisttps
or
or
cmp
xchg
cmp
push
mov
idivb
scas
pop
adc
push
into
pop
loop
add
add
aas
icebp
imul
pop
push
adc
or
jb
aam
xor
mov
mov
into
xor
outsl
mov
repz
sbb
mov
xchg
jae
xor
mov
mov
jae
stc
ss
adc
xchg
inc
js
xchg
xlat
push
rcll
xchg
sbb
dec
jle
xor
shr
and
sbb
dec
and
idivb
mov
fstpt
out
testl
js
pop
mov
popa
out
int
std
hlt
je
add
add
insl
stos
movsb
push
mov
mov
sub
stos
inc
push
cli
sub
lahf
lock
rolb
xchg
sbb
pop
movsl
push
bound
sub
xor
in
mov
cmp
loope
insl
inc
movsb
mov
aas
stos
enter
pop
xor
sub
push
sub
cli
inc
xchg
mov
dec
push
fisubl
ljmp
cmp
or
icebp
adc
mov
push
stos
add
pop
sbb
mov
dec
push
cmp
cmpsl
xchg
mov
insb
lock
mov
inc
imul
mov
push
mov
cld
xchg
in
movsb
pop
xchg
inc
shll
xchg
mov
xchg
inc
stc
cmp
mov
jae
orb
ljmp
mov
ds
rclb
sbbb
out
lods
js
and
sahf
aad
aam
shlb
jmp
push
and
rcr
jo
cmp
andl
push
addr16
cmp
or
push
fnsave
arpl
adc
or
adc
iret
adc
mov
insl
repz
push
pusha
push
mov
jo
fcmovnbe
adc
sbb
mov
xchg
test
push
rcll
enter
xchg
sub
xchg
xchg
jo
jne
mov
inc
fwait
push
inc
fadds
mov
negb
aaa
push
test
int
shr
rdmsr
sarl
popf
pop
adc
sbb
mov
pop
icebp
pop
xchg
sahf
mov
pop
pop
mov
cli
sub
bound
or
fnstcw
dec
jg
fsts
cmpsb
stc
xor
inc
fidivs
jp
sub
bound
test
adc
push
and
mov
sub
push
push
xchg
pop
mov
sahf
cmp
adc
xor
mov
cli
mov
push
xchg
xchg
add
add
jae
mov
xchg
push
fldl
push
jo
dec
testl
les
fmull
xlat
or
fistpl
cmp
and
aas
jmp
sub
outsb
pop
mov
inc
sub
das
popa
mov
push
mov
cmp
mov
push
inc
sbb
sub
outsb
push
lret
adc
push
hlt
mov
jnp
stos
add
mov
sar
pop
mov
fcmovne
sbb
mov
shrb
loope
sub
ss
pop
xchg
je
fnstsw
lret
sub
js
outsb
push
in
ljmp
loopne
mov
lcall
xor
cld
xchg
pop
ja
mov
scas
popf
scas
pop
cmp
xor
mov
inc
fldt
loopne
inc
mov
mov
inc
cld
and
sti
cld
xchg
sub
jecxz
mov
into
imul
jg
pop
add
iret
notb
jne
inc
jns
aad
shll
xchg
pop
gs
inc
loope,pt
scas
jns
push
stos
data16
adc
out
mov
cs
or
outsb
cmp
inc
test
mov
mov
mov
imulb
test
fsubs
sbb
repz
sahf
mov
add
sahf
cwtl
push
pavgb
je
lcall
and
mov
aam
cmp
cmp
pop
cmp
or
into
cmpsl
movsb
aad
pop
xchg
in
cmpl
in
or
xor
dec
mov
xor
aad
adc
jne
aaa
dec
lea
test
push
cmp
out
jo
mov
push
addr16
adc
data16
dec
add
push
mov
into
mov
push
sbb
lock
cmp
out
les
push
shrb
imul
cmpsl
inc
pushf
out
fldcw
pop
sub
mov
push
test
push
sub
sbbl
rclb
mov
call
jne
xchg
jp
stc
inc
dec
data16
mov
xchg
int
jge
pushf
and
lret
pop
mov
jns
sbb
sub
fnsave
filds
aas
mov
sbb
dec
int
push
lahf
jno
xchg
and
mov
lds
icebp
adc
push
out
mov
push
sub
mov
pop
aad
sub
sbb
icebp
push
sub
and
mov
out
dec
rorb
xchg
cli
or
sbb
sub
mov
hlt
cmp
xchg
jb
out
cmpsl
mov
outsb
mov
and
mov
data16
imul
lds
mov
test
or
lods
xor
ja
mov
cmp
repz
icebp
out
pop
fldt
add
inc
sbb
sub
jb
jnp
arpl
inc
in
pop
cmp
push
pop
jns
xchg
pop
push
jns
jno
sbb
jo
pop
daa
addr16
pop
xchg
pop
std
sub
mov
int
jns
cmpsb
ljmp
popa
addb
pop
xor
fistps
andl
push
das
out
adcl
cmp
xor
lods
popf
test
mov
or
mov
cmp
movsl
add
push
cmp
lock
dec
dec
aaa
out
mov
xchg
call
mov
ret
leave
jmp
movsb
das
incl
fcmovnu
mov
jp
mov
ljmp
inc
pusha
in
mov
idivl
int3
outsl
scas
jns
and
into
xor
outsl
mov
jmp
add
cmp
jo
sub
mov
dec
js
sbb
out
pop
lret
cmp
out
mov
dec
cli
add
add
pop
movsb
sbb
loopne
mov
lods
push
das
into
xor
outsl
mov
jmp
jne
loopne
push
int
adc
pop
ret
add
cmp
xchg
gs
loope
fmull
xor
and
rcl
inc
xchg
stos
push
pop
mov
test
mov
add
lret
add
pop
mov
lcall
aam
lods
mov
xchg
test
add
jne
mov
test
inc
in
sbbl
fsubrs
sahf
xchg
roll
and
cwtl
cli
push
mov
aam
inc
in
jg
jns
hlt
xchg
mov
dec
mov
push
cltd
js
fcompl
mov
mov
cmp
insb
nop
fldt
pop
jno
jmp
cltd
out
into
ret
outsl
xor
push
mov
std
ljmp
stos
pop
imul
adc
out
ret
loope
insb
push
in
sbb
fadd
mov
pop
xor
push
shrb
xor
repz
sub
cmp
pop
mov
cmp
rclb
push
out
loope
cmc
mov
loop
add
add
aas
icebp
push
sbb
mov
xor
and
jb
jae
or
cmp
lcall
lods
or
pop
or
int3
in
dec
mov
addr16
pop
std
mov
cmp
outsl
jnp
push
xchg
sbb
outsl
mov
andb
inc
clc
pop
ss
outsl
leave
jo
jp
jge
pop
shlb
into
push
in
repnz
mov
cs
imul
in
fwait
push
mov
mov
mov
lahf
xchg
leave
fs
and
mov
push
popl
dec
ds
jle
mov
pop
xor
xor
push
out
mov
dec
push
rorb
ss
mull
sti
pop
js
aad
jnp
lods
out
adc
sub
sub
push
or
outsb
sarl
push
jp
push
sahf
mov
loope
or
stc
into
bound
into
cmp
fldenv
add
in
xchg
lods
es
dec
insb
nop
push
enter
sti
faddl
int3
call
dec
mov
nop
out
jl
or
adc
push
iret
adc
adc
add
dec
pop
mov
mov
wbinvd
mov
jae
lret
arpl
sbb
add
frstor
pop
shrl
aas
iret
sbb
iret
and
std
pop
xor
or
andl
jb
daa
shll
and
mov
cmp
cli
jp
pop
push
xlat
or
dec
imul
lds
xchg
pop
mov
int
data16
inc
int
int
es
out
push
out
sahf
xor
jb
or
sbb
filds
and
lds
out
or
sbb
xchg
movsl
mov
movsb
ret
hlt
lret
nop
test
xor
jmp
add
and
shrb
insb
dec
movsl
imul
mov
jae
pop
dec
push
inc
bound
fistpl
cmp
divb
adc
adc
stc
mov
jae
das
adc
lret
out
mov
lahf
faddp
jb
mov
pop
xchg
or
jp
bound
dec
fs
stos
cwtl
hlt
dec
mov
dec
pop
cmp
xchg
cmc
mov
mov
in
or
push
clc
adc
inc
orl
cmp
lahf
adc
xchg
mov
cld
int
repz
mov
jl
xchg
sub
mov
out
lret
rclb
mov
dec
sti
xlat
fwait
adc
ficompl
mov
push
cmp
jge
pop
fmul
out
mov
mov
push
xor
push
xor
pusha
adc
adc
sbb
pop
add
and
push
xchg
orl
ljmp
xorb
dec
inc
into
pop
push
pusha
std
push
dec
fsubs
cmp
or
inc
arpl
test
nop
leave
jle
in
sub
std
aam
inc
stc
cmpsb
xchg
cmpb
dec
jl
psraw
aaa
call
hlt
sahf
mov
rolb
les
mov
cmpsl
lcall
xor
mov
mov
cmp
rcrl
cmpsl
adc
in
and
mov
sbb
mov
arpl
xor
sub
push
cli
mov
aam
jp
cmpl
push
lahf
jmp
or
xchg
decl
les
jl
leave
popa
and
add
ljmp
push
jns
push
daa
mov
cli
cltd
and
push
add
pop
push
std
inc
les
and
sub
repnz
xchg
test
push
lea
lods
fmuls
jb
jmp
cmp
push
test
push
mov
mov
pop
std
ja
je
dec
and
dec
mov
es
sar
rcrl
xor
lahf
and
mov
loope
imul
cmc
or
inc
xchg
jmp
ret
mov
cmp
ss
lahf
pop
sbb
fnstsw
lret
pop
sub
xchg
test
in
adc
dec
movsl
mov
bound
enter
adc
push
ficoml
int3
std
iret
adc
xor
jp
sarl
xor
adc
pop
sub
nop
mov
ds
dec
and
push
test
sbb
jno
pop
fcmovu
dec
fptan
jo
outsl
dec
xchg
fsubrs
cmp
in
xchg
xor
fwait
inc
ret
outsb
or
push
pop
test
loop
daa
jns
dec
lret
dec
stos
repnz
add
ret
outsb
xchg
shl
mov
push
mov
aad
repnz
aaa
imul
dec
jmp
cmc
ss
mov
dec
mov
push
jmp
push
xorl
mov
pop
aam
arpl
pop
jg
pusha
mov
xor
jb
push
add
pop
pop
push
dec
fmuls
adcb
pop
mov
dec
jmp
fistpl
add
outsb
dec
sub
xchg
aas
xchg
pusha
outsb
test
inc
cmp
jbe
and
aaa
std
int
sbb
mov
lods
test
ja
lods
cltd
push
pusha
mov
scas
arpl
mov
insl
insl
in
cwtl
in
pcmpgtw
jne
ss
aam
cmpb
imul
add
sbb
ds
push
pop
pop
fs
inc
cmp
jmp
push
jp
pop
jo
add
pop
sub
les
add
sarl
cmp
inc
in
push
outsl
xchg
cmp
roll
sbb
cmp
dec
es
adc
outsl
and
loopne
xchg
fs
jno
xchg
movsl
lds
mov
push
cmp
insb
dec
icebp
ss
adc
dec
imul
stc
gs
add
mov
leave
and
inc
dec
and
movsb
cltd
sub
xchg
inc
sbbb
cmp
addb
cmp
out
scas
adc
jmp
mov
loopne
cs
fisubrs
jle
ret
or
mov
xchg
popf
mov
enter
xor
cmp
lahf
or
sbb
mov
or
cmpsl
scas
mov
push
sub
pop
fsub
rorb
andb
aam
popa
push
jae
nop
repnz
stos
mov
adc
push
daa
shll
lret
in
jg
jmp
pop
out
dec
je
add
jmp
movsb
and
stc
dec
std
add
push
cmpsb
jge
pusha
stos
out
enter
jae
pop
fwait
push
pop
imul
adc
and
pop
xchg
mov
adc
jae
aam
loope
adc
push
pop
jg
ja
sub
mov
xchg
push
mov
sar
scas
push
xchg
movsb
mov
jb
add
sbb
imul
gs
cmp
arpl
add
and
push
cwtl
dec
lcall
or
aam
movsl
sti
lret
movsb
jbe
sbb
lcall
rcrb
and
fsubrl
lret
dec
jge
pop
inc
jle
adc
ret
popa
pop
add
sbb
cmc
push
xchg
push
mov
sbb
cmp
or
pop
inc
sub
or
jae
ds
adc
mov
mov
test
cwtl
add
movsb
sub
dec
call
fs
inc
and
andl
ds
jge
lahf
andb
add
jp
pop
jge
cld
mov
jb
push
dec
test
push
sbb
cmp
jb
jnp
int3
mov
sti
jle
test
call
push
out
and
adc
dec
add
dec
xor
rcrb
and
pop
push
outsl
mov
out
out
loop
mov
shrb
out
or
rorb
push
leave
jne
xchg
add
pop
js
xchg
into
jns
xor
pop
movsb
cmp
pop
call
lea
test
mov
jbe
xchg
push
mov
movsb
sbb
jecxz
sbbb
pop
pop
stc
jns
and
roll
jo
scas
or
fucomp
push
fiaddl
cmpb
test
adc
and
shlb
imul
ja
lock
out
xor
jb
lret
cmp
xor
jle
mov
jecxz
ret
sub
scas
mov
outsb
hlt
sub
cmp
mov
out
xlat
jno
cmp
flds
or
mov
or
cli
and
aam
sub
std
nop
decl
popl
in
sbb
in
inc
adc
mov
cs
addl
cmpsl
adc
cs
add
sub
daa
xor
or
pop
iret
rorl
inc
test
add
jb
jbe
push
bound
xor
imul
ss
inc
jnp
mov
pop
jecxz
fcompl
in
dec
ret
or
xor
sub
movsl
repnz
pop
xor
out
test
sbb
xchg
mov
dec
jmp
repnz
xor
movsl
popf
cmp
cs
and
mov
push
or
lea
mov
fs
fs
fdiv
lods
inc
push
push
dec
mov
xlat
pop
repz
mov
lods
jle
inc
cli
dec
ja
fisttps
decb
or
cmp
push
and
jnp
jle
mov
mov
pop
rcrl
fadds
call
rclb
shl
mov
push
cmp
jae
sub
inc
xchg
xchg
popf
mov
adc
jno
mov
mov
pusha
cmp
movsl
aaa
mulb
dec
and
cltd
push
idiv
ljmp
cli
ljmp
adc
or
pop
frstor
xchg
int
and
xchg
lea
hlt
bts
jbe
scas
out
pop
std
dec
xchg
mov
insb
popf
mov
shll
filds
and
shlb
jbe
mov
xchg
inc
cmp
xorl
orl
and
rorl
pusha
fists
in
xlat
xor
jnp
hlt
xlat
aas
test
incl
mov
orb
pop
inc
push
mov
lea
divb
sbb
jle
popf
sbb
fidivs
push
fdivrl
or
bound
fistl
dec
cs
repnz
icebp
insb
inc
fidivl
je
xor
aad
xchg
ret
inc
jmp
aas
test
fimuls
mov
repnz
jl
stos
mov
faddl
mov
jae
mov
mov
int3
inc
adc
inc
sbb
add
mov
ljmp
out
sub
test
mov
sbb
div
and
outsb
xor
shrb
sahf
mov
test
addb
in
stos
call
loop
mov
sub
ss
mov
dec
add
pop
dec
stos
lods
aam
and
jecxz
leave
xor
sub
lock
or
stos
arpl
inc
out
loopne
xor
xchg
mov
mov
mov
adc
test
pop
add
sahf
mov
repnz
sti
xor
or
add
mov
arpl
mov
rorb
pop
cmp
pushl
cmpsb
lahf
repnz
mov
push
movsl
push
iret
sbb
mov
test
cwtl
arpl
mulb
or
out
fisttps
nop
push
cmp
imul
sbb
ss
adc
pop
or
dec
or
jns
inc
cmc
jp
sub
insl
and
enter
mov
jecxz
nop
in
fiaddl
inc
idiv
inc
mov
test
cmp
mov
jne
ljmp
cmpl
adc
dec
addb
jo
push
lock
xlat
stos
mov
int
xor
bound
sti
xchg
lret
es
enter
xlat
and
xchg
movsb
cmp
loopne
mov
jno
inc
xchg
xorb
cmp
std
mov
and
mov
xchg
xor
fiaddl
call
dec
insl
and
test
jnp
jl
not
mov
xchg
test
scas
mov
fldln2
xchg
fwait
and
mov
out
mov
fdivr
popf
cmpsl
js
test
aas
cli
push
and
outsb
mov
jecxz
shr
std
lcall
imul
stc
pop
stos
lea
icebp
scas
sbb
xchg
das
jne
add
dec
or
cmc
stos
mov
js
pop
jbe
nop
fistpll
mov
add
test
push
lcall
jmp
mov
fisubl
pop
or
or
adc
mov
jecxz
sbbb
pop
clc
mov
clc
jge
or
xor
fst
dec
fdivl
mov
jb
lds
sbb
aad
cmpsl
lret
dec
movsl
push
add
sub
rep
mov
test
push
sub
in
dec
ret
test
test
test
lock
sub
pop
fcompl
movsb
lods
fdivrs
fs
in
dec
scas
aad
out
test
jle
pop
xor
pusha
and
pop
jb
mov
push
sub
pusha
xchg
dec
sbb
mov
fwait
mov
jmp
imul
cli
ret
dec
push
push
jb
push
mov
ret
pop
mov
shl
xor
push
jno
jae
push
inc
shl
add
jl
mov
movsl
and
and
aad
sbb
pop
dec
add
jmp
stos
cmpsb
cmp
pop
jns
repnz
xlat
ljmp
or
mulb
xchg
cmpl
popa
lret
aaa
jmp
movsb
mov
mov
xor
jns
jne
pop
add
and
jg
data16
jmp
mov
lods
les
testl
out
dec
pop
ds
aaa
xor
pop
cli
xlat
jmp
mov
fcoms
dec
loopne
loop
dec
adc
scas
xor
sti
xchg
xchg
xchg
outsb
xchg
nop
js
mov
loope
enter
hlt
sbb
xchg
xor
pusha
push
jno
test
jae
xchg
lahf
nop
sbb
jmp
ds
dec
jge
daa
aam
jnp
xor
test
popf
adc
pop
adc
jno
fstps
xchg
das
sbb
faddl
mov
sarl
loopne
movsl
nop
or
out
jge
jns
sub
mov
or
jecxz
lcall
ret
fmull
jl
push
inc
lahf
jne
int3
ret
inc
jmp
and
push
cmp
pop
out
push
cs
sub
jge
push
mov
std
pop
push
jae
jge
add
idivl
andps
daa
or
test
inc
sha256msg2
pusha
xlat
jl
hlt
jbe
sbb
outsb
dec
add
inc
jmp
push
push
imul
movsb
popf
adc
sti
popa
popf
mov
repz
dec
mov
inc
xchg
dec
xor
add
push
test
icebp
xor
nop
push
loope
pop
push
repnz
jmp
stc
arpl
cltd
repnz
mov
push
outsl
and
mov
or
push
and
mull
in
pop
loop
addr16
imul
lret
jl
xchg
adc
pusha
push
jg
jecxz
loop
fmull
imul
or
fbld
insl
lock
jns
dec
rcr
lret
xor
lret
sahf
mov
shrb
scas
add
fstps
jno
insl
int3
fwait
mov
ds
sbb
pop
in
out
ljmp
cmp
push
pushf
mov
out
shrb
push
sahf
fwait
dec
xor
leave
dec
push
cmp
ret
dec
add
bound
rcl
mov
gs
gs
dec
addr16
gs
rol
mov
gs
pop
bound
shrb
stc
and
aad
mov
mov
and
mov
sarl
cmp
add
stos
push
negl
cmp
in
in
cmp
sub
gs
xlat
mov
gs
gs
push
aas
data16
imul
mov
cmp
push
mov
adc
push
flds
dec
xchg
adc
dec
cli
adc
xchg
jmp
sti
xchg
arpl
xor
movsl
or
inc
stos
push
push
and
mov
shr
icebp
sub
int3
pop
nop
push
test
push
fcompl
jnp
add
or
sub
and
mov
push
sub
ljmp
icebp
jecxz
add
leave
inc
fildl
stc
mov
push
add
stos
mov
stos
pop
ss
ja
loope
popf
push
outsl
stos
dec
inc
addl
sub
or
inc
in
addr16
jo
add
rclb
les
and
jge
add
sub
lods
or
inc
xchg
jbe
hlt
int3
add
jo
jbe
mov
xchg
jbe
adc
inc
dec
in
cmpsb
shl
scas
mov
dec
pusha
mov
xor
cli
nop
loopne
sub
adc
sbbb
xchg
pop
data16
push
enter
cld
stos
inc
stos
ret
icebp
mov
sub
add
push
jge
sub
mov
sub
cmp
movsb
mov
adc
leave
lahf
mov
lahf
cmp
jmp
push
add
leave
jge
insb
mov
mov
mov
je
leave
mov
xor
mov
jno
sbb
pop
lret
sbb
pop
and
pushf
lcall
insl
loopne
mov
xchg
popf
push
add
fcoms
sbb
xchg
dec
jmp
cwtl
nop
lods
push
loop
call
mov
movsl
rorl
nop
add
cmc
jg
and
mov
ja
mov
add
sbb
mov
pop
pushf
sti
fxch
or
push
or
mov
sbb
shll
outsb
nop
mov
adc
stos
arpl
sbbl
inc
xchg
adc
or
xlat
call
adc
push
push
jge
stos
lods
test
mov
xchg
and
jmp
inc
bound
fcos
stos
arpl
sbbl
and
js
or
push
cmp
fwait
pop
xchg
or
arpl
jge
ds
popf
cld
inc
bound
outsb
rolb
mov
ljmp
into
inc
jae
hlt
mov
lcall
in
sahf
push
cmp
outsb
ficoml
push
bound
addr16
add
lock
lcall
xchg
and
xorl
test
aas
xchg
xor
push
data16
lahf
xchg
mov
out
ljmp
pushf
dec
xor
xor
push
xor
sbb
jbe
inc
lock
scas
mov
inc
pop
enter
cmp
sbb
mov
or
cmp
arpl
mov
adc
xchg
popa
push
movsl
mov
or
jmp
mov
jno
into
inc
mov
mov
out
testl
pop
push
cmp
cwtl
cmpsb
scas
mov
gs
pop
or
repz
cld
pop
in
rorb
jle
xchg
jne
add
inc
mov
out
push
adc
clc
enter
sbb
mov
sub
xchg
cmpl
inc
adc
push
push
jns
inc
jecxz
and
mov
push
test
xlat
popa
adc
enter
mov
jecxz
mov
js
int
push
or
or
mov
popa
stos
dec
leave
xchg
xchg
adc
ss
inc
mov
mov
fstps
clc
daa
int
test
outsb
stos
adc
loope
sub
data16
outsl
cli
mov
adc
pop
int3
push
pop
push
es
xchg
adc
xchg
imul
sbb
jno
add
scas
sbb
sti
sbb
test
fimull
into
cwtl
xchg
sub
cld
add
and
pop
ret
sti
pop
js
pop
mov
ja
sbb
jg
and
cmp
adc
call
aam
ds
loop
gs
out
ss
xor
add
add
stos
or
mov
xor
in
inc
js
pop
sub
ja
dec
mov
adc
int3
push
cmp
dec
pop
lcall
out
clc
in
addr16
stos
cld
daa
enter
dec
dec
lods
sbb
and
dec
adc
mov
jno
mov
je
dec
xchg
adc
scas
cmpsb
nop
adc
sbb
push
push
test
orb
pop
push
test
cmc
aas
dec
push
shll
test
mov
and
xchg
outsb
leave
xchg
push
and
adc
push
push
mov
insb
xchg
test
mov
push
mov
shr
lret
or
and
mov
xchg
push
pmuludq
mov
loope
or
pop
out
das
sub
nop
scas
adcl
stc
jl
movsl
insl
test
xchg
iret
cs
rclb
inc
aas
leave
pusha
mov
call
or
nop
or
push
and
jmp
xor
jnp
and
scas
movsb
mov
sbbb
cmp
outsl
int
xchg
pop
mul
in
sbb
mov
in
fnstcw
nop
icebp
sbb
xchg
mov
rol
or
dec
or
rcl
cmp
cltd
mov
xchg
xor
or
mov
mov
and
or
dec
inc
lcall
in
cltd
xchg
mov
das
mov
add
cmp
push
sub
nop
xchg
mov
add
inc
lods
mov
stos
pop
leave
xor
or
cwtl
cmp
sti
stos
popf
into
inc
pop
leave
data16
fwait
sub
mov
ret
mov
mov
ret
dec
scas
cmp
data16
ss
test
adc
lock
fwait
and
popa
fwait
sub
sbb
in
arpl
sbbl
in
mov
or
incl
xor
mov
sub
movsb
mov
shrl
out
cld
addl
push
jne
fdivl
push
in
outsb
xchg
fistpll
pop
imul
push
xchg
fucomip
jle
pop
add
adc
gs
push
icebp
adc
ljmp
sar
into
adc
xchg
mov
les
fstps
insl
xchg
gs
aad
xor
bnd
cli
or
or
adc
xchg
or
jo
xchg
lods
pop
pop
xchg
test
sbb
and
xor
mov
sbb
mov
cs
pop
cltd
xchg
push
in
add
or
enter
dec
cmp
rcll
enter
aas
mov
rclb
adc
jecxz
mov
sub
mov
xchg
cmp
insb
imull
pop
loopne
push
dec
arpl
xchg
add
shr
sub
mov
inc
pop
adc
pop
cmp
icebp
popf
mov
mov
std
jl
mov
mov
mov
mov
ds
push
sbb
es
fldcw
mov
pop
push
mov
dec
out
lock
in
rorb
xchg
and
xchg
mov
ficomps
xor
gs
imul
sbb
jg
pop
and
pop
imul
sbb
bound
cmpsb
gs
adc
xchg
cmp
mov
mov
icebp
les
jecxz
stos
loopne
push
push
addr16
pop
cwtl
in
data16
mov
sbb
push
icebp
xchg
loop
pop
popa
xchg
lahf
lcall
loopne
mov
add
sbb
jg
pop
sub
add
ljmp
push
addr16
lock
iret
cmp
pusha
inc
insb
mov
pop
out
push
pop
stos
lea
mov
shlb
lret
mov
cmp
adc
hlt
jl
inc
popf
inc
sar
mov
pop
in
aam
or
and
and
sbb
ja
push
add
add
mov
push
test
jne
xchg
lods
out
or
mov
scas
mov
popf
and
mov
mov
mov
mov
adc
popa
jmp
ja
sbb
pop
leave
mov
popl
fdivs
adc
sbb
js
and
inc
aad
hlt
mov
insl
cmpsl
cmp
ss
xchg
fcomp
ret
lods
test
push
and
pop
pop
jp
push
jb
inc
lret
mulb
aam
loopne
pop
je
mov
aam
jl
mov
and
mov
imul
aam
sbb
xor
mov
inc
sub
jno
xor
xchg
movsl
sbb
stos
inc
mov
sbb
inc
aam
sbb
fildl
jp
lock
push
scas
cli
ss
dec
out
push
jbe
mov
icebp
bound
cltd
jl
inc
aam
mov
xlat
icebp
lret
scas
int3
popf
bound
fnstenv
jbe
test
fs
push
incl
jae
popa
mov
andb
jl
inc
int3
cmp
mov
fadds
inc
out
out
sub
xcrypt-ecb
cmpsl
dec
push
movl
push
lods
xchg
or
sarl
aam
mull
out
sub
test
movsl
xchg
test
scas
insl
mov
mov
pop
adc
sub
xlat
aaa
scas
popa
mov
and
and
pop
imul
adc
push
mov
lret
nop
loope
jns
sti
xchg
out
lahf
push
pusha
or
cmp
xlat
popf
lret
aas
stos
jg
js
add
and
adc
fcomip
and
mov
pop
test
xchg
cs
adc
cmp
stos
pushf
insl
mov
lock
repz
xchg
push
out
xlat
sbb
and
aaa
adc
mov
mulb
mov
adc
pop
aas
cmp
xlat
aaa
adc
xchg
push
mov
mov
and
adc
mov
fisubs
jecxz
adc
aaa
adc
pop
aas
ss
aaa
adc
xchg
push
pop
adc
dec
fcomps
and
xor
or
popa
adc
pushf
and
ret
and
aaa
adc
xchg
push
arpl
or
sbb
and
cmp
or
popa
adc
xchg
push
cmp
xlat
aaa
xor
push
loop
imull
push
inc
cmp
pop
cmc
out
pop
clc
jns
xchg
pop
xor
xlat
ss
mov
dec
icebp
cs
lcallw
enter
icebp
das
xchg
in
out
adc
ficomps
cmp
add
xor
adc
aaa
pushf
cs
add
or
xor
ljmp
ret
pop
sbb
xlat
sub
aaa
adc
dec
outsl
add
inc
add
inc
cs
cmp
or
shrl
xchg
pop
pop
sbb
sbb
mov
push
push
mov
pause
sbb
inc
std
cmpsb
pop
mov
adc
incl
aaa
cmpb
sub
imul
iret
in
adc
inc
cltd
xor
xlat
aaa
adc
mov
adc
xchg
jae
faddp
stos
popf
pop
add
sbb
cmp
aaa
adc
addr16
rcrb
aaa
sahf
arpl
mov
outsb
sub
xchg
arpl
pop
decb
cmp
jecxz
rcr
mov
push
push
dec
xlat
dec
movsb
imul
sub
add
in
sub
xchg
sub
icebp
push
jl
orl
stos
cmp
sbb
sbb
push
aad
xor
inc
jno
sub
in
cltd
dec
mov
mov
inc
ss
nop
dec
loopne
xchg
pop
adc
pop
jae,pn
dec
nop
adc
int
jne
cmpl
jl
adc
je
stc
push
pop
aam
ss
std
mov
mov
lods
lret
icebp
adc
xchg
lock
in
xor
mov
xchg
out
subl
add
jg
push
cmpl
fnstsw
out
inc
xchg
jbe
jno
push
mov
shll
inc
stos
mov
sbbb
add
jg
add
add
ficomps
mov
loope
mulb
cli
inc
sub
inc
add
dec
pop
sahf
adc
push
int
stc
fsubl
dec
orl
jge
movsl
shrb
push
mov
popf
nop
mov
mov
pop
push
mov
adc
fisttpl
jne
jns
push
lock
push
and
aam
sub
pop
xor
sbb
mov
pushf
cmpsb
mov
jmp
sbb
ret
xchg
fsub
mov
jl
adc
scas
cmpsl
jmp
xchg
mov
add
pop
sbb
mov
and
rorl
dec
xchg
in
push
jl
push
clc
cmp
out
push
gs
repnz
or
dec
fdivr
sbb
cmp
xchg
mov
pop
out
push
dec
je,pt
aam
xchg
loopne
mov
into
jge
or
mov
adc
push
or
lret
adc
lahf
cmpsb
enter
lahf
push
inc
add
sub
dec
fldenv
data16
dec
setno
and
data16
add
iret
aam
js
push
jmp
pusha
inc
jb
bound
inc
add
dec
push
sbb
pop
jmp
addr16
aaa
outsb
mov
mov
stos
jb
notb
outsb
rorb
test
cld
loop
add
mov
pop
movntq
pop
adc
pop
mov
push
lds
dec
push
xchg
fmul
les
daa
stc
dec
pop
xchg
fwait
dec
jbe
mov
out
sbb
outsl
xor
divps
or
jge
mov
scas
mov
push
sahf
pop
sub
and
adc
and
jo
stos
mov
and
ficompl
pop
mov
pusha
notb
and
xchg
dec
insb
fldenv
sbb
and
sub
sub
xchg
repz
bound
sbb
push
push
xor
sbb
pop
xchg
insl
xor
es
clc
outsl
subb
jo
mov
mov
push
in
lock
cmpsl
ja
jno
push
rcr
xor
repz
mov
push
fldl
adcb
fs
and
pop
das
pushf
nop
push
decl
mov
adc
sub
xchg
dec
dec
ret
sbbb
mov
fwait
aad
push
imul
fs
push
scas
add
cmp
stos
aas
stos
mov
or
jno
call
and
je
gs
aaa
mov
inc
sub
pop
xor
jp
adcl
push
ret
or
push
dec
movsb
jmp
or
leave
call
push
inc
mov
adc
bound
or
xor
push
fldcw
mov
lret
sbb
test
push
push
test
int
test
xor
push
mov
xlat
adc
pop
mov
repnz
sarl
mov
into
sahf
mov
out
sbb
xorb
ret
addr16
insl
jb
xor
in
and
or
push
ja
xor
movsb
cmpsl
dec
cmp
ljmp
shl
rclb
jecxz
in
pop
or
daa
xchg
test
icebp
into
ret
xchg
negb
mov
pushl
inc
test
add
mov
adc
addr16
add
stos
inc
or
fsin
sub
lea
ljmp
cmp
movsl
test
xchg
push
or
jl
test
mov
js
pop
push
lahf
imul
mov
dec
ret
mov
adc
pushf
inc
divl
add
cs
nop
xchg
test
push
cmp
cmp
stos
sahf
sbb
push
add
rorb
arpl
jg
mov
or
mov
inc
push
imul
out
mov
xor
add
bound
or
sbb
sahf
mov
leave
gs
fnstsw
cmp
stc
add
fidivs
shrb
add
inc
mov
dec
popf
ss
xchg
push
xchg
cmp
and
sahf
test
mov
cld
or
sbb
cmp
add
mov
pop
xor
xchg
sbb
aaa
push
mov
xchg
xchg
push
mov
xor
imul
clc
xchg
xchg
pusha
push
clc
ja
adc
int3
popf
dec
imul
lds
sti
inc
fmul
lock
xchg
inc
mov
bound
ret
jecxz
sub
lods
test
imul
dec
xor
hlt
jp
push
or
mov
jne
loop
lods
or
rcl
xor
jo
add
sbb
into
aas
lcall
icebp
adc
push
jl
testb
xchg
push
in
xchg
stos
sbb
xor
xor
inc
mov
mov
cmc
or
das
test
aam
cltd
les
xor
xlat
add
push
vphadduwd
xchg
or
push
aad
ljmp
aas
adc
push
out
popa
cmp
rcr
movsb
and
ret
cmp
and
ja
jne
jle
mov
add
sahf
or
and
mov
or
mov
pop
outsb
out
push
pop
push
mov
pop
pop
push
cld
cld
sub
cmpsl
or
mov
test
lods
out
aas
jp
adc
xchg
loop
call
xchg
inc
stc
push
mov
mov
orb
ja
out
fmuls
jle
push
mov
pushf
mov
hlt
ljmp
fs
xor
cmp
jne
lock
in
fimuls
mov
mov
cwtl
and
mov
sarb
hlt
movsl
jnp
shrl
sub
jecxz
outsb
nop
add
das
or
jbe
cli
push
mov
fs
daa
mov
xchg
and
popa
mov
sub
lods
mov
cmp
push
cmp
pushf
add
xchg
mov
jne
xor
push
dec
jbe
pop
jg
dec
pop
int
sub
inc
mov
nop
jl
std
lcall
ret
inc
stos
leave
add
mov
push
mov
lret
jecxz
aas
daa
subl
popf
push
sub
push
test
cmp
lcall
inc
mov
mov
lods
xor
dec
push
inc
mov
mov
pop
adc
sarb
pop
lock
dec
mov
scas
jbe
rcl
sti
dec
push
pop
shl
sub
push
fwait
lock
fists
adcb
lret
inc
mov
xchg
scas
in
and
mov
into
mulb
and
insb
inc
xchg
imul
adc
pop
lods
ja
xchg
out
push
add
cltd
sahf
adc
adc
sub
rcll
jb
jmp
das
aad
outsl
into
cmpsb
xlat
fs
cmp
jge
es
mov
jnp
sahf
cmc
mov
jle
adc
and
insl
add
cmc
or
pop
ret
adc
test
test
inc
scas
push
in
jg
sub
cmp
aaa
bound
jecxz
jecxz
jmp
scas
dec
shlb
xchg
lock
adc
sub
aas
sub
and
aas
fucomip
add
das
mov
das
ds
mov
outsb
lea
push
mov
xor
dec
hlt
scas
lret
jg
cwtl
push
or
out
and
xchg
out
imul
insb
notl
adc
pop
mov
scas
sbb
aas
sub
in
ficompl
dec
xlat
out
ret
lret
sbb
jmp
mov
lahf
sbb
and
sbb
add
nop
lcall
add
dec
dec
aam
xchg
icebp
and
jl
sub
idivb
jl
sbb
adc
mov
add
cli
pop
cmpsb
mov
popa
push
mov
xchg
rolb
inc
mov
add
mov
imul
lods
sbb
out
pop
mov
aaa
cli
cmpb
dec
bsf
cmc
insb
ret
cli
sub
dec
xchg
mov
mov
xchg
lret
sub
mov
adc
cmp
sbb
dec
int
imul
push
mov
lcall
jo
dec
imul
cli
out
ds
aad
pop
push
push
xor
xchg
in
jnp
jle
inc
decl
cvttps2pi
daa
xor
arpl
push
or
pop
add
daa
out
xchg
push
or
sbb
out
sub
inc
add
shl
push
out
sub
lock
data16
and
imul
and
cwtl
fdiv
xor
mov
fnstenv
adc
cmp
cmp
icebp
aad
fistpll
insl
aaa
mov
out
or
mov
insb
cmp
xlat
dec
and
int3
ljmp
mov
and
sub
xor
xor
xor
push
mov
stos
sbbl
shrl
xor
push
mov
aaa
pop
outsb
ficoms
sbb
mov
xchg
or
mov
add
xor
aaa
into
and
fdivl
loopne
cmpsb
jg
leave
xchg
or
dec
add
and
loop
je
rcll
popa
lahf
dec
push
xor
mov
or
repnz
xchg
lcall
sbb
push
mov
or
jne
out
and
shl
mov
xchg
xor
je
cld
push
enter
test
sbb
or
and
aad
loopne
aam
fsubp
sub
in
sarb
popf
push
outsb
adc
int
nop
mov
in
dec
sub
popf
or
push
xchg
xlat
pop
pop
int
mov
sbb
xor
and
roll
cmpb
push
add
imul
scas
fnsave
dec
sbb
icebp
clc
and
inc
ja
mov
push
pop
into
or
hlt
ficoms
inc
mov
add
vpsubsw
mov
add
pop
test
cmp
adc
xor
sbb
pop
movsb
mov
xor
js
dec
in
lahf
call
int3
fmull
pusha
lods
cmpsb
push
test
xor
sbb
pusha
popa
xor
and
or
mov
shll
scas
inc
sbb
popa
rolb
sti
and
cs
xor
stos
fdivrs
fucom
pop
or
and
cmp
lods
cmc
mov
push
mov
xor
and
clc
adc
shll
xchg
xor
mov
fnstsw
cmp
xchg
movsb
mov
adc
mov
dec
inc
dec
icebp
cmp
aam
add
lea
roll
lcall
stc
test
repnz
or
xchg
test
cmp
or
cmp
sarb
mov
ss
test
mov
cmp
and
xchg
inc
in
cwtl
ret
aam
int
popa
lret
test
pop
je
inc
pushf
and
mov
push
xchg
dec
inc
xchg
pop
jns
pop
and
out
std
adc
push
jmp
sub
pop
mov
mov
sub
js
push
shll
in
jecxz
or
hlt
mov
mov
jb
xor
jbe
mov
in
mov
into
in
orb
popf
mov
test
dec
jae
lahf
fcmovnbe
es
fcompl
mov
stos
push
lock
mov
sbb
inc
cltd
icebp
dec
mov
in
jge
or
cmpsl
in
sahf
and
lret
dec
cmpsl
fwait
push
xor
lret
incl
adc
pop
out
scas
adc
xchg
jge
sahf
lret
cmp
sub
jg
inc
push
mov
push
cmpsb
leave
out
outsl
mov
shr
xor
fmuls
push
xchg
gs
stos
pop
add
lods
jno
js
clc
add
fwait
add
dec
nop
or
or
popf
hlt
sub
push
jge
xorl
cmp
cmp
cmpsl
xchg
test
add
lret
and
fneni(8087
pushf
mov
inc
xchg
mov
sbb
or
or
dec
xchg
and
add
outsl
repz
inc
insl
inc
xchg
pusha
les
daa
clc
fwait
xor
mov
in
dec
jbe
cmp
shr
xor
mov
adc
les
cmp
shrl
shr
scas
xchg
out
xlat
adc
popf
mov
sbb
adc
mov
inc
aad
pop
addr16
adcb
into
adc
push
xorb
jo
loop
cmp
or
lods
inc
test
daa
mov
sub
push
mov
test
inc
xchg
fistps
push
inc
bound
out
fidivs
cmc
fs
jmp
cmp
stos
in
or
loope
mov
dec
add
sbb
xchg
inc
jns
sti
clc
add
insl
xchg
dec
dec
mov
mov
adc
rclb
les
pop
je
mov
mov
ljmp
adc
outsl
daa
jnp,pt
mov
lods
call
stos
mov
inc
cmp
jp
push
mov
xchg
add
fadd
out
dec
mov
xchg
cmpsb
adc
jne
mov
cs
mov
aas
lret
adc
dec
sbb
mov
insl
sub
jae,pt
lds
push
negl
jl
jnp
push
test
lock
sub
xor
or
ss
out
pop
xchg
stos
popf
test
xlat
nop
jl
addr16
fnstsw
fnstcw
ljmp
adc
sub
shll
jecxz
mov
and
xor
ret
or
mov
outsl
push
sbb
icebp
pop
cmc
negl
mov
imul
cmc
in
out
mov
scas
fisubl
pop
xchg
xor
jle
adc
mov
icebp
cmc
fwait
push
pop
lret
std
push
leave
aas
push
pushf
cmp
add
adc
imul
xor
pop
and
repz
mov
cmp
xor
leave
cmc
or
mov
fistpl
lret
aam
pop
lea
jl
pop
or
xchg
and
adc
add
mov
jle
xor
imul
xchg
inc
adc
dec
xchg
mov
test
jne
incb
sar
ret
push
pop
out
in
mov
inc
aad
jno
dec
imul
mov
xchg
aad
inc
cmp
mov
push
inc
cmc
mov
jnp
aas
sbb
xor
loope
ljmp
lods
mov
inc
lods
add
pushf
cli
sub
push
andl
enter
or
pop
cmpl
pop
jo
cli
xorl
cmc
mov
rcl
and
mov
lahf
movsb
jl
inc
repnz
xchg
sbb
aaa
stos
lea
xchg
scas
cmp
cwtl
stc
stos
add
sub
pushf
pushf
mov
movsb
sub
cmp
sub
jg
add
aam
cmp
lret
lock
popa
mov
fcmovne
mov
mov
jnp
fwait
mov
jne
fsubl
daa
add
pop
movsb
insb
loopne
leave
inc
jb
pop
lea
xchg
mov
cmc
mov
cs
dec
outsl
mov
mov
lret
jb
ret
in
fimull
lock
push
nop
and
stc
aas
cli
cld
fsubrs
dec
fistpll
xor
mov
inc
push
push
mov
and
pop
test
pop
js
dec
int3
jecxz
xchg
test
fisubs
push
test
ret
dec
cld
fwait
mov
push
jmp
gs
jb
and
pop
mov
cli
xor
xchg
ljmp
cmp
js
ss
dec
push
mov
idiv
push
std
outsl
sub
dec
mov
inc
in
test
cmpsb
icebp
jo
and
loope
les
insl
pop
cmc
xchg
roll
out
lret
and
in
mov
sub
sub
daa
int
js
lods
mov
sbb
jae
and
mov
fldcw
movsb
sub
aad
push
inc
addb
dec
pop
aad
xlat
rorl
inc
pop
and
fistpl
lret
inc
outsb
add
jno
add
inc
movsb
mov
dec
lods
scas
nop
les
js
adc
fwait
loop
rcll
in
cmp
mov
pop
sub
cmpsl
rol
add
push
lret
push
sub
jmp
sti
ss
mov
sub
lret
and
mov
loope
pop
call
sbb
pop
jecxz
mov
push
jecxz
push
mov
loop
ja
wrmsr
push
jp
int3
push
jnp
jmp
inc
leave
inc
ljmp
mov
lds
sub
outsb
sbb
sbb
mov
xor
jecxz
jmp
inc
sbb
testb
mov
movsb
test
sub
insb
call
jae
sbb
outsb
fwait
xchg
push
push
adc
add
stos
adc
in
push
push
out
es
idivb
adc
cmp
enter
or
mov
and
pusha
jmp
xor
popa
dec
decl
push
xor
aad
hlt
push
lock
aad
add
ja
je
and
jg
add
mov
add
xchg
add
repz
jne
dec
fldl
pop
push
daa
out
pop
lcall
ja
shll
std
add
dec
das
cmpsb
fildl
pop
jnp
adc
aam
sub
repz
cmpsl
lcall
adc
scas
add
lret
xor
int
inc
lret
movsb
inc
cmpsb
pop
jl
jg
clc
stos
outsb
mov
pushf
out
scas
cmp
jmp
outsl
mov
push
stos
mov
xor
inc
sbbb
adc
dec
out
sub
lock
cmc
mov
mov
and
jge
xor
scas
pop
dec
jmp
mov
ror
es
inc
mov
int
add
scas
sbb
mov
xchg
repz
cld
pop
inc
sbb
ja
lcall
fs
sub
fucomp
xorb
mov
mov
mov
lret
scas
lahf
gs
fdivrs
mov
jge
mov
pushf
pop
in
sbb
fsubrl
outsl
pop
fs
fsubrl
dec
cmpsl
mov
mov
js
iret
cli
sub
fstpl
mov
jne
in
jno
mov
mov
mov
cli
inc
adc
mov
or
in
and
dec
inc
adcl
xor
mov
popf
leave
fsubs
out
or
out
xchg
sti
dec
jg
ds
pop
hlt
pop
pop
mov
pop
in
add
es
inc
pop
cmpsl
out
sub
iret
mov
ds
dec
inc
add
lods
sbb
push
das
insb
dec
sahf
pusha
push
ljmp
into
cmp
mov
out
pop
push
int
dec
mov
mov
popa
fwait
jge
or
sub
lahf
frstor
cmpb
push
js
stc
jl
mov
out
negl
hlt
scas
fmuls
cwtl
add
hlt
aam
and
push
jmp
cwtl
pop
repnz
add
lods
xchg
int
xchg
shr
push
scas
sub
mov
pop
lock
outsb
leavew
int3
push
aas
sub
sbb
repz
push
sub
stos
push
push
adcb
pop
adc
fs
into
insb
xchg
sub
test
xor
mov
dec
das
or
fstpt
icebp
and
add
cmp
add
clc
pop
cmp
add
stos
flds
testl
lahf
notl
scas
pushf
add
add
ret
or
mov
ljmp
icebp
addr16
adc
xor
adc
cmp
sub
loope
daa
ret
xchg
fcmovu
scas
arpl
fcmovu
xchg
or
mov
js
call
adc
lcall
mov
imul
subb
outsb
insb
ret
arpl
ret
add
in
inc
jno
pop
lret
mov
dec
pop
inc
inc
push
rolb
ds
xchg
mov
ror
movsl
data16
push
lcall
dec
jns
mov
mov
push
sbb
xchg
insb
mov
jbe
cwtl
mov
mov
arpl
addl
nop
outsl
insl
add
mov
lock
iret
and
ret
fldl
dec
iret
lods
lcall
push
loop
sarb
sbb
fsubrl
sbbl
orb
loope
jbe
push
mov
idivl
pop
lods
out
in
jae
push
repz
push
add
clc
jle
xchg
lock
mov
jbe
imul
in
loopne
in
testl
push
dec
push
js
mov
icebp
mov
push
enter
subb
jecxz
and
into
lahf
sub
fiadds
lock
rclb
jmp
push
loop
mov
push
roll
stos
mov
fwait
scas
lcall
and
adc
jae
ret
stos
es
fs
sti
add
iret
inc
add
jmp
xor
sbb
or
sub
cmpsb
scas
push
rclb
jmp
sahf
in
pop
insb
mov
hlt
movsl
popl
out
mov
imul
mov
xchg
sarl
int3
cwtl
pop
shrl
cmp
cmp
mov
cltd
or
adc
or
mov
sbb
pop
and
jmp
sub
mov
repz
testl
mov
lret
mov
decl
aad
out
inc
cld
mov
sub
rcrb
dec
push
adc
xchg
fdivl
sbb
cli
pop
and
fildl
icebp
enter
and
pop
test
repnz
pop
lcall
daa
inc
and
popa
mov
xor
inc
push
jg
or
test
jg
jg
sbb
pop
inc
and
outsb
shll
cmp
sub
xchg
mov
sub
cs
sbb
aas
mov
or
lods
add
insb
sub
xchg
icebp
lcall
xchg
ds
xchg
or
test
pop
lods
test
cmpb
mov
fwait
mov
mov
outsb
and
mov
sbb
imul
fs
cltd
es
mov
int
fidivl
sbb
imul
imul
iret
mov
nop
lods
lock
fucomip
sbb
mov
sbb
push
sub
js
pop
fstpl
jne
inc
xor
pop
xchg
loope
testb
push
xchg
dec
mov
cld
adc
jnp
xchg
mov
dec
ret
sbb
mov
dec
pusha
sbb
scas
push
ss
xor
pop
and
inc
pop
out
rorb
inc
scas
mov
mov
out
sti
stc
mov
fidivl
and
cmc
stos
cmp
adc
testl
jno
repnz
insb
or
cmc
int
lds
je
sahf
or
mov
or
rorl
mov
mov
mov
imul
stos
mov
push
or
popa
adc
imul
sub
sbb
mov
aaa
adc
xlat
cmp
inc
fwait
shrb
jno
lret
mov
jg
icebp
push
into
jb
push
repnz
cmp
pop
dec
jns
out
movsl
jno
movsl
call
cli
hlt
push
idivb
jne
fisubs
lcall
sub
push
xor
hlt
shl
je
ja
repz
cmpsl
push
xorb
jecxz
mov
dec
mov
rcrb
stc
xor
push
icebp
sbbb
ror
add
push
outsb
mov
push
and
dec
in
in
aaa
pop
push
or
pop
imul
adc
loop
xchg
cltd
call
mov
out
mov
jmp
or
sub
lcall
jno
cmp
xchg
cmpsb
aaa
inc
push
jo
sub
imull
jne
gs
hlt
gs
sub
lcall
cmpsb
gs
pop
sub
div
xor
ljmp
lods
out
fisubl
sbb
cmp
sub
hlt
rep
mov
cli
out
inc
adc
jmp
xor
jb
push
out
fnstcw
rcl
jns
dec
pushw
lret
je
cmpl
pmaxsw
popa
cmpl
hlt
lea
imul
or
ss
imul
sub
int3
push
push
xchg
out
push
pop
inc
rcr
xchg
ret
sub
push
inc
cltd
outsl
dec
push
and
nop
adc
icebp
xchg
pop
stos
xchg
mov
loope
inc
addb
mov
mov
fwait
jle
xor
lret
mov
and
out
mov
mov
out
inc
xlat
xchg
inc
pop
insb
dec
mov
aad
out
sub
sbb
mov
outsl
enter
jb
clc
es
ret
jg
cmp
je
dec
push
aas
adc
adc
rorb
and
outsb
xlat
fimuls
scas
cmp
das
jb
inc
pop
jp
mov
xor
push
inc
js
stos
and
sub
xchg
call
dec
mov
push
in
xchg
jbe
adc
dec
mov
fwait
cs
mov
inc
enter
fisubs
popa
addl
dec
add
xor
xchg
in
enter
lods
das
mov
aam
jp
cs
mov
add
sub
xchg
and
add
xlat
iret
lods
xchg
mov
sbb
ja
dec
jae
cmp
es
repnz
xchg
xchg
xor
add
mov
shrb
sub
les
int
jge
jae
sbb
movsb
cwtl
xchg
into
rol
sahf
mov
sahf
shll
and
xor
icebp
mov
dec
mov
push
pop
sub
insb
pop
clc
push
add
scas
cmpsl
mov
pushf
xor
mov
dec
jp
int3
fstpt
jns
movsl
cmpsb
icebp
sub
shr
ret
sub
arpl
stos
movsl
sub
mov
fs
sbb
sbb
sti
cmpsl
jge
ret
cltd
in
daa
cmp
cmpl
pushf
pop
pop
and
sqrtps
int3
xchg
push
mov
cmp
xor
lds
aas
pop
or
fsubl
adc
mov
pop
ret
bound
and
popa
into
cmp
sub
xchg
inc
sub
mov
inc
js
and
xor
imul
test
or
dec
shll
add
gs
pop
cld
sbbb
aaa
sbb
push
mov
fisttpl
imul
arpl
sbb
push
int
mov
lahf
inc
push
lods
lahf
or
rolb
sub
mov
nop
test
in
les
clc
enter
sbb
jmp
push
inc
mov
inc
lds
cmp
xchg
pop
into
pop
aad
into
sbb
mov
out
gs
and
mov
lcall
pushf
mov
in
fimull
dec
outsb
popa
inc
int3
out
push
addr16
pop
into
clc
insb
jmp
xchg
xchg
ss
push
orl
and
faddl
out
xchg
mov
enter
cmp
adc
aaa
pop
dec
pop
jo
xchg
orb
lcall
icebp
mov
pushf
sti
inc
mov
cmpsb
out
aas
cmp
out
mov
in
mov
adc
and
fbld
gs
pop
dec
mov
xchg
xchg
add
cltd
adc
xchg
mov
or
mov
pusha
add
jo
mov
mov
or
jp
push
inc
adc
pop
mov
or
xchg
mov
leave
and
cmp
dec
pop
mov
push
out
or
mov
neg
xor
ljmp
push
out
call
enter
je
mov
mov
xlat
or
push
mov
cmp
xor
fxrstor
stos
fcmovnbe
fcoms
mov
and
sub
subl
pushf
rorb
dec
sbb
movsb
ret
add
mov
popl
xchg
dec
cli
imul
push
and
iret
mov
xor
mov
out
pop
inc
test
movsl
aaa
cmp
mov
push
cmc
jns
ja
fs
imul
dec
loope
shlb
mov
adc
pop
test
arpl
rolb
push
cmp
out
cmp
xchg
cmp
jle
in
sbb
sub
or
cmp
xchg
incb
in
nop
adc
push
sbb
popa
add
sbb
test
mov
jmp
arpl
enter
lcall
mov
cltd
pop
jge
sahf
jmp
jecxz
std
pop
lret
push
lret
and
mov
dec
addr16
cmp
outsb
fcmovbe
loopne
inc
adc
jne
in
mul
ret
popa
scas
call
adc
or
and
cmp
push
and
pop
dec
xchg
cltd
scas
imul
mov
lahf
add
mov
and
roll
xchg
insl
lods
push
pop
add
push
stc
aad
fsubp
dec
mov
outsl
out
and
inc
jg
addr16
decl
callw
loop
mov
mov
je
rorl
fmuls
cld
jge
dec
mov
jge
test
fldl
ljmp
pop
addl
xchg
lcall
ds
and
test
loope
mov
sub
cltd
sahf
mov
jle
mov
dec
push
jp
cld
mov
out
inc
adc
fstpt
sbb
ljmp
mov
mov
loopne
stos
jno
leave
sti
adc
jge
rcrl
inc
movsb
add
ds
add
xchg
ljmp
test
add
stos
lds
sub
daa
xor
xor
stos
xor
imul
adc
int3
dec
daa
mov
mov
xor
mov
int3
ret
or
std
xorb
mov
enter
inc
pushf
dec
jno
cmp
enter
outsb
jne
insb
mov
mov
call
popa
mov
or
mov
lret
out
out
sbbl
pop
pop
xchg
in
aad
dec
lds
mov
xchg
pop
nop
ret
lock
adc
fisttps
add
ljmp
stos
shlb
lret
inc
inc
mov
cmpxchg
adc
inc
jo
stos
jns
push
ljmp
aad
test
jge
xor
stos
aam
push
icebp
jb
test
nop
xchg
insb
leave
cmp
addl
cmpsb
xchg
dec
sarl
inc
and
mov
and
arpl
adc
cltd
sbb
sbb
dec
lock
xchg
sbb
inc
neg
mov
adc
sahf
pop
mov
rol
int
roll
or
aas
jb
inc
cmp
repz
inc
or
cmp
in
dec
xchg
add
ret
scas
subl
mov
into
cmp
jmp
stc
jb
loopne
push
adc
mov
inc
adc
xor
je
aas
cmp
loope
lret
loop
dec
jnp
sub
call
rolb
movsb
divl
and
stos
xor
shlb
lret
pop
scas
jno
shlb
push
add
lahf
xor
divl
mov
lahf
and
add
jl
lds
jne
cmpsl
mov
push
les
mov
fnstenv
mov
sub
push
mov
aaa
test
push
rcrl
lock
adc
test
or
inc
sbb
ds
enter
jmp
dec
je
movsl
cltd
jb
or
push
test
sbb
xor
cmpsl
iret
cmp
add
add
cvtps2dq
mov
loope
push
lds
add
sub
cmpsl
dec
in
jns
mov
xchg
jmp
xchg
sbb
les
cwtl
int3
mov
xchg
adc
push
loop
xchg
mov
int
shlb
sub
xchg
fisttpll
sub
adcl
pop
ljmp
out
push
push
adc
xor
imul
fbstp
jmp
pop
hlt
adc
movsl
mov
mov
aad
sub
pusha
dec
fimull
push
push
js
jo
cmc
addr16
fcompl
jl
xorb
adc
fisubs
aaa
push
sub
and
fisttpll
sub
jne
xor
aad
cmp
lds
sub
sbb
insb
enter
lods
inc
loop
outsl
int
add
mov
sub
mov
jmp
mov
dec
sbb
lahf
inc
fcmovnb
insl
cmc
scas
mov
out
pop
jnp
xchg
imul
push
sub
xchg
lret
je
xchg
scas
scas
pushf
vcvttsd2si
pushf
cmpsb
fcmovb
insl
cmc
lods
mov
stc
mov
jg
mov
fldcw
sub
xchg
shll
add
lds
adc
insl
cmc
push
mov
xor
lahf
inc
fcmovnb
insl
cmc
test
xchg
scas
cltd
vcvttsd2si
je
xchg
mov
push
mov
movsb
push
adc
movsl
jno
jo
fprem1
add
push
adc
lret
push
mov
notl
push
mov
and
data16
jecxz
lock
test
adc
cmpb
out
jp
mov
test
and
or
lds
int3
int
pop
push
sbb
push
scas
sbb
push
xchg
insl
cmc
insb
cmc
pop
jl
shll
pop
xchg
nop
jnp
popa
jbe
push
imull
addl
insl
daa
sub
inc
imulb
rorb
stc
fdivr
sub
insl
ret
sub
pop
aad
insb
cmp
pushf
imul
scas
xchg
stc
inc
pop
das
lds
mov
ret
or
lds
int3
rclb
sar
scas
sbb
push
add
cmc
adc
pop
push
xchg
add
ljmp
push
repnz
pop
in
dec
sub
push
hlt
repnz
mov
or
jnp
fstps
sub
sub
mov
push
hlt
repnz
add
push
jmp
subb
ds
je
xchg
divl
adc
dec
jmp
sub
int
pop
xchg
lods
shl
pushl
sbb
ret
sbb
mov
hlt
sbb
and
jecxz
push
repnz
sbbb
xchg
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
or
mov
and
pop
in
enter
or
sub
mov
sbb
stos
jo
or
push
dec
andb
ror
jbe
xchg
jae
arpl
sub
mov
shlb
pusha
inc
sbb
enter
sub
jmp
jge
and
aam
test
stc
loope
rcrb
inc
xchg
flds
add
xchg
mov
sub
vmaxss
adc
lahf
mov
mov
jmp
push
jle
adc
fdivr
dec
xor
lahf
outsl
xchg
ljmp
pop
mov
pop
cmp
js
jle
imull
dec
mov
push
pop
mov
outsl
mov
lea
cmp
xor
dec
mov
adc
xor
mov
test
stc
xor
jne
inc
adc
push
push
movsb
das
mov
push
push
icebp
mov
mov
or
jecxz
mov
test
cmpsb
jno
idivl
cli
in
call
adc
push
mov
fadd
enter
mov
mov
sbb
testl
cmp
jno
or
scas
jbe
add
xor
or
and
add
push
pushw
add
fsubl
inc
xor
xor
out
xor
popa
dec
xchg
lea
rcrb
pop
test
lahf
or
push
adc
fstpl
sub
mov
push
lods
pusha
sahf
lods
add
clc
and
test
mov
adc
cmp
xchg
jmp
add
push
data16
roll
dec
pusha
cli
scas
bnd
popl
dec
rclb
inc
fcomi
push
or
xor
lahf
mov
cmp
aad
out
mov
fidivrl
pop
xchg
fdivrl
and
mov
sub
add
arpl
mov
jo
cmpb
lcall
cmp
fildl
or
and
dec
mov
adc
pop
shrb
in
lret
out
push
cli
loope
adc
test
fmuls
dec
xchg
cmp
pop
hlt
inc
push
js
cs
stos
jl
rorl
lods
jle
out
leave
sbb
dec
ret
jl
imul
stos
dec
mov
push
push
push
cmc
jecxz
and
lods
stos
xor
mov
cs
int
mov
lods
outsb
cmc
mov
insb
sbb
xchg
cmpl
push
cmpsl
divl
sbb
adc
push
adc
mov
xchg
cli
test
pop
mov
push
xchg
ljmp
rclb
test
xorw
add
pop
xchg
ss
jg
pop
aad
lret
jb
mov
push
test
js
or
mov
push
orb
add
stc
test
cmp
mov
aas
cmc
pushfw
roll
sbb
jns
jae
repz
push
insb
sub
jae
sbb
inc
roll
ffreep
pop
jl
xchg
hlt
aam
mov
jnp
pop
mov
jecxz
movsl
add
cmpsb
rcl
ljmp
imul
and
push
gs
jns
add
imul
jle
adc
outsb
test
push
push
mov
imul
jno
addr16
xchg
dec
imul
mov
ds
xor
rol
data16
fcoml
xchg
push
pop
into
insb
dec
inc
pushf
mov
test
test
sti
inc
adc
dec
sub
push
out
out
outsb
movl
mov
sbb
pusha
repz
lds
push
loopne
xorb
sbbb
cmp
push
jo
dec
repnz
xchg
dec
lcall
sarl
loope
jmp
xchg
cmp
mov
jge
sbb
roll
mov
sub
jg
jg
jg
inc
mov
insl
outsb
xchg
mov
sahf
xorl
jbe
or
push
push
btr
push
mov
fld
mov
stos
sbb
pop
inc
shl
fsubrl
xchg
addb
mov
hlt
inc
cmpsb
imul
mov
xchg
xchg
test
mov
fistps
imul
pop
push
ret
push
repnz
adc
lea
in
ja
xchg
push
dec
fisubrl
mov
xor
mov
push
arpl
sbb
xchg
popf
pushf
movl
cli
mov
leave
test
movsb
xor
sbb
nop
int
movsww
dec
test
aad
in
inc
nop
pop
dec
adc
pop
stos
ret
lcall
or
jno
xor
shl
nop
cmp
dec
xchg
movsl
sub
xchg
fisubrs
xchg
enter
or
xor
xor
jp
das
ljmp
push
add
jne
mov
loope
or
bound
sub
adc
sub
or
lret
xchg
ret
or
jge
sub
lret
je
test
adc
pop
leave
adc
pop
fwait
in
imul
xor
shrb
xor
xchg
mov
or
jbe
mov
loope
adc
movsl
testb
sub
fdivl
pop
cmp
nop
cmp
jecxz
or
shll
xchg
cmp
dec
mov
pusha
dec
and
dec
sub
cmc
nop
cmp
and
popf
jp
mov
dec
and
das
movsb
fadds
int
fists
mov
stos
xchg
add
push
sbb
andb
repz
stc
insb
cmpsb
pop
stc
dec
add
int3
mov
mov
push
pop
ljmp
les
lret
mov
cwtl
push
cmc
es
or
mov
into
std
push
pop
inc
dec
mov
ret
lret
push
or
mov
mov
sahf
sahf
shll
mov
push
or
push
leave
cld
adc
loope
data16
and
ja
cmp
jno
in
popf
cwtl
cltd
ds
sub
je
mov
jmp
imul
xchg
and
nop
pop
mov
lcall
adc
lret
add
jns
mov
adc
jge
push
xorl
js
jbe
push
repz
dec
push
xlat
testb
add
cltd
push
idivb
lahf
xchg
add
imul
fsubl
mov
inc
sub
xor
in
sbb
and
pop
pop
push
outsl
pop
push
out
jne
aad
pusha
xor
lods
cmpsb
push
flds
shl
pop
int3
inc
sbb
pop
sub
jns
pop
mov
loopne
stos
std
push
jle
xchg
jno
cld
lods
vmovntpd
push
and
jae
repnz
add
and
aad
dec
add
mov
cmp
aas
lods
mov
dec
xchg
mov
xor
addr16
clc
add
iret
jmp
outsl
or
pop
pop
or
fcoml
popl
outsl
pusha
lods
fxch
pop
xchg
aas
jg
aaa
loope
loop
mov
mov
fidivrl
icebp
lea
pop
jo
sbb
inc
or
push
and
lahf
cmp
int
sbb
add
pop
ss
xchg
sbb
scas
push
mov
popf
fldt
hlt
add
insb
sub
mov
xlat
enter
cwtl
jl
cmp
shll
outsl
fwait
testl
out
sahf
repnz
lahf
push
sti
repz
mov
leave
mov
aad
jg
test
fnstsw
aaa
xor
popl
sub
ret
xchg
jl
or
jp
mov
cmp
repz
rcll
pusha
cwtl
inc
aas
mov
pop
xor
xchg
push
mov
cli
jge
xor
inc
aam
out
fsubs
pop
pop
jae
pop
pop
inc
sub
gs
in
lock
popa
andb
xor
int3
lahf
sahf
cld
mov
push
or
lahf
adc
lret
xchg
mov
mov
sub
scas
xor
sahf
cmpb
outsl
stos
or
arpl
and
cmpsb
jb
fidivl
ret
pushf
scas
xchg
rcl
sahf
push
in
xor
mov
nop
int
add
adc
sbb
cmp
jl
arpl
add
popf
xor
mov
fstpl
aam
les
mov
pop
xchg
push
push
pop
add
ret
xchg
xchg
pop
push
jp
mov
cmp
xchg
int
hlt
mov
and
mov
push
cmp
or
das
pxor
push
fdivl
lret
pop
mul
mov
imul
adc
push
pop
aad
mov
arpl
lret
sbb
roll
outsb
mov
jg
lcall
stos
ja
dec
cmp
push
pop
jns
fldt
inc
ss
mov
mov
outsl
data16
adc
sbb
and
out
mov
lahf
je
outsl
rcll
ja
adc
mov
sub
dec
insl
mov
leave
mov
out
cs
xchg
mov
sbb
cmpsb
sbb
adc
pop
and
inc
lock
push
icebp
dec
add
mov
scas
ja
add
mov
inc
xchg
enter
jge
mov
mov
insl
into
rcll
sbb
cs
cld
fisttps
ja
jnp
fidivrs
or
and
or
out
mov
gs
lock
push
pop
jle
xor
and
out
sub
movsl
sub
mov
pop
pop
popa
push
mov
sti
mov
test
cmpsl
fmuls
jl
in
inc
jae
bound
jp
mov
sahf
sbb
inc
or
sub
jge
or
xor
cmc
fldenv
mov
jnp
cs
mov
rcl
cmp
jg
mov
jmp
aam
and
iret
jbe
dec
xchg
in
out
lods
jb
pop
xor
in
popa
jne
stc
and
out
daa
sub
or
inc
fbld
enter
shlb
jge
jecxz
push
adc
aas
adc
mov
cli
insb
inc
jmp
cmp
test
call
cmpsl
sub
sbb
mov
dec
or
sub
pop
mov
insl
mov
cmp
pop
enter
dec
gs
or
sbb
popa
mov
dec
popa
push
sbb
aas
lods
out
enter
xchg
movsl
incl
pop
dec
clc
test
dec
dec
jne
mov
inc
das
add
cmc
push
or
imul
into
fs
pop
xor
mov
push
xchg
in
mov
jg
test
movsb
out
mov
insl
jb
dec
sbb
push
lods
jns
popf
or
cmp
adc
sar
add
jge
xchg
lcall
dec
cs
pop
sub
ljmp
rorb
insl
dec
cld
push
add
push
mov
xchg
push
inc
js
inc
xor
adc
loopne
adc
cmp
movsl
cmpsb
das
jnp
mov
cmpsb
xchg
loope
xlat
add
xchg
test
dec
xor
cmp
into
mov
inc
or
dec
and
cmp
jb
in
loopne
iret
inc
mov
sbb
adc
dec
inc
push
xor
sub
mov
pop
jns
gs
lret
mov
xor
notb
pop
pop
fimuls
je
in
dec
aas
jecxz
arpl
push
ljmp
dec
push
leave
xor
jnp
push
jle
mov
xchg
fs
cmp
ficompl
adc
clc
xchg
push
mov
pop
xchg
or
mov
jge
cmc
push
pop
push
lret
fwait
xlat
adc
xchg
xchg
push
testb
ret
imul
push
cmp
loope
mov
jbe
cmp
sub
dec
mov
jg
xor
ja
enter
mov
adc
sbb
fistpll
inc
fnsave
jle
fs
and
call
and
sub
dec
mov
and
sahf
xor
sbb
sub
dec
sahf
push
es
sub
lahf
inc
adc
add
roll
pusha
mov
or
xchg
cmp
inc
jle
popf
mov
aas
xor
insb
cld
or
scas
pop
jl
stos
or
cs
mov
push
ljmp
fsubl
flds
xor
cld
repnz
sti
adc
ja
bound
dec
shlb
jge
je
xlat
or
mov
ror
pop
scas
mov
inc
mov
cmpsb
sbb
inc
sbb
cmc
cmp
add
and
loop
js
mov
mov
sub
mov
dec
push
imulb
aam
int3
inc
mov
jbe
sbb
rcr
xor
ja
cmpsl
jge
mov
sbb
rcl
xchg
test
stc
push
and
push
addl
aad
pop
and
sbb
mov
xchg
jne
pop
insl
and
pop
cmpsl
and
nop
sbb
ja
bound
adcb
xchg
lea
mov
mov
inc
or
lret
inc
insb
xchg
and
or
aad
mov
mov
add
repnz
repz
mov
lds
das
aaa
mov
pop
lock
fisubrs
xor
test
iret
add
scas
mov
push
xlat
faddl
mov
jne
and
mov
testl
push
mov
clc
push
jl
out
adc
dec
adc
inc
sbb
aam
enter
lods
xchg
mov
movsb
in
sbb
sbb
mov
jmp
test
ds
inc
inc
fnstenv
aas
aad
dec
mov
or
xlat
pop
negl
adc
jns
test
mov
push
xchg
lret
dec
repz
mov
mov
mov
fidivrl
jg
and
call
adc
jne,pn
repz
xorl
sub
adc
sub
insl
push
adc
cmpsl
fwait
call
pop
je
jge
pop
push
dec
xchg
mov
rcrb
aam
xchg
sbb
adc
add
jo
jecxz
mov
cld
pop
out
movl
mov
mov
cltd
sub
call
dec
shl
fldt
sub
neg
fidivl
push
sti
mov
repnz
in
das
popf
leave
xchg
jle
fmuls
sarl
jmp
pop
add
aam
cltd
mov
xor
insb
aad
pop
out
cmp
aas
adc
add
xchg
test
mov
daa
or
dec
sbb
mov
push
jb
mov
int
xchg
add
mov
test
xlat
fidivrl
inc
or
xor
mov
mov
shlb
shll
push
jge
xchg
dec
into
and
std
in
xor
lods
inc
pop
cmp
jnp
sahf
push
sub
insb
inc
xor
int3
pop
nop
pop
lods
push
pop
jecxz
pop
rcl
mov
sub
pusha
pushf
stc
test
jmp
lret
mov
stc
js
jle
push
dec
daa
xor
rcrl
jg
sub
sbb
push
in
and
test
cld
pop
adc
mov
push
out
dec
push
push
xlat
cmp
sahf
jmp
cmp
mov
std
mov
jns
mov
cmp
dec
add
sbb
ljmp
pop
dec
cmpl
xchg
sub
mov
sbb
mov
add
xchg
dec
ja
sub
loop
mov
jge,pn
mov
pop
push
jnp
add
dec
or
sbb
xor
add
or
push
adc
ret
jge
into
sbb
cmp
push
dec
out
lcall
out
sub
mov
mov
or
or
mov
sbb
add
mov
bound
cmc
mov
sub
fincstp
or
lret
out
sbb
mov
and
dec
push
pushf
pop
lahf
jecxz
iret
faddl
data16
pop
push
inc
push
push
aaa
xchg
push
ljmp
loopne
test
inc
mov
movsl
cmpsb
inc
andb
inc
lret
xor
push
pop
mov
xchg
cld
pop
or
int
mov
dec
scas
mov
rol
mov
inc
fbstp
pop
xchg
pushf
sbb
jg
mov
ret
mov
js
testl
mov
sub
cmp
loopne
daa
mov
add
dec
jo
adc
movsl
pop
and
jmp
cwtl
loop
mov
loop
or
clc
mov
in
push
mov
aaa
in
and
xor
inc
sbbb
inc
ret
pop
lods
push
fsubrl
sbbb
incl
scas
add
mov
xor
pop
add
mov
jne
outsb
pop
mov
sahf
out
or
cltd
and
dec
jp
icebp
aas
mov
aaa
jp
jo
and
xchg
out
aas
cld
fnstsw
and
xchg
fmul
aas
sqrtps
scas
xchg
xor
dec
ljmp
fmull
add
test
scas
cmp
adc
aas
jle
xchg
lock
jbe
xlat
mov
adc
addr16
xchg
cwtl
repnz
dec
cmpsb
insb
jle
insl
sbb
repnz
in
lret
fiadds
outsb
dec
lds
imul
mov
mov
popf
cmp
mov
scas
addb
pop
jb
jmp
movsl
pop
dec
and
dec
fsubs
mov
add
jbe
std
sbb
jle
cld
xchg
jnp
mov
add
test
mov
imul
bound
lds
cld
sbb
sub
scas
dec
pop
fsubr
pop
xorb
mov
and
inc
fcmovne
sub
and
dec
out
mov
push
ljmp
mov
or
mov
cwtl
push
xchg
arpl
push
loop
test
xchg
test
test
stos
mov
xchg
test
pop
clc
xor
xchg
test
and
add
movsl
mov
incl
int
mov
inc
xor
call
xchg
scas
outsl
cwtl
xor
test
leave
jl
fidivrs
shlb
in
mov
mov
adc
jge,pn
je
dec
or
add
in
xor
inc
mov
fs
in
push
adc
cmp
inc
mov
jne
mov
xchg
sub
jecxz
sbb
in
inc
loope
mov
and
sbb
popa
loope
jns
popa
dec
xchg
repz
cmc
push
aaa
mov
je
pop
sub
in
mov
cmpsb
mov
sbb
fidivs
aas
sbb
mov
fwait
add
jle
xchg
rcll
add
repz
mov
sti
es
mov
insl
sub
pushf
xchg
call
jne
xchg
cmp
sbb
cmp
icebp
sti
push
gs
sub
lret
sbb
pop
fnstcw
xchg
and
mov
cmc
pop
cwtl
pop
xchg
roll
mov
or
dec
loopne
sub
rcrb
mov
cmpb
inc
rorb
xlat
hlt
sti
scas
mov
sbb
repz
sub
sbb
mov
push
insb
mov
adc
pop
lret
mulb
idiv
les
loop
pusha
in
je
loop
out
jle
in
sbb
in
test
dec
sub
ja
adc
and
insb
repnz
stc
loopw
loope
movsl
xchg
ss
es
lret
xchg
and
fnstenv
xchg
push
jne
loop
pop
insl
mov
pop
and
in
sbb
dec
mov
mov
jp
mov
ss
cmpsl
iret
cmp
or
dec
jb
xchg
jg
xchg
lods
lahf
mov
push
cmp
daa
les
repnz
lcall
lock
jp
jp
stc
push
andb
sub
es
adc
int
push
sahf
imul
adc
pop
cltd
mov
loop
mov
in
push
test
mov
mov
jo
lret
repz
add
clc
cmp
push
sbb
jmp
fdivs
mov
xchg
mov
mov
adc
mov
dec
in
sbb
sbb
dec
jp
jbe
mov
in
and
scas
fdivrl
lods
gs
adc
filds
cmp
adc
jecxz
movsb
xchg
sahf
mov
mov
movsl
clc
and
lock
test
into
dec
xlat
dec
and
mov
and
test
mov
xlat
add
mov
into
xchg
fnstenv
push
mov
scas
cwtl
dec
mov
arpl
push
out
mov
in
xor
iret
clc
jecxz
stc
add
sbbb
sbb
push
pop
dec
cli
shrl
push
mov
clc
imul
orl
cmp
add
jns
leave
pop
xor
adc
mov
dec
rcrl
pop
mov
es
clc
xchg
pop
sahf
outsb
test
loopne
xchg
es
sub
jl
xchg
cmpsl
dec
adc
pop
jb
stc
inc
xor
xchg
outsl
lret
imul
ret
pusha
jno
jbe
mov
in
jg
xchg
mov
or
ds
cwtl
fcmovnbe
add
sti
inc
sub
jnp
test
out
xchg
and
inc
add
jbe
les
xchg
insl
loopne
lods
mov
je
in
iret
xchg
or
pushf
add
hlt
xchg
mov
xchg
pop
mov
in
dec
jl
std
mov
ljmp
sysexit
cmpsb
xchg
lock
lods
push
push
adc
and
push
scas
push
nop
ret
icebp
inc
xchg
xor
sbb
cmp
rcrb
in
mov
mov
ss
jl
orl
call
shll
loop
cmc
adc
sbb
mov
mov
call
fwait
and
in
push
fisttps
fistps
ret
or
cld
mov
outsl
push
scas
ss
mov
fsubrs
test
bound
jmp
pusha
movsb
lret
out
lds
or
pop
call
inc
in
aas
sbb
pushf
repnz
sbb
fnsave
std
inc
jno
fiadds
cwtl
outsl
adc
in
cmpsb
ret
mov
adc
call
scas
xlat
fistps
js
jne
insl
fisttpl
jno
xor
lret
rorb
cld
jae
mov
jecxz
push
pop
mov
mov
out
jg
pop
xor
pop
call
inc
sarl
cli
pop
jg
test
push
das
add
sbb
pop
fstps
jmp
xor
xor
pop
loopne
fildll
test
ja
xor
inc
push
pop
add
sub
lret
mov
cmc
add
aam
lods
fs
repz
mov
and
xchg
push
sahf
mov
out
in
inc
ficompl
sbb
shl
sbb
fsts
xor
mov
add
mov
lret
mov
jbe
jmp
adc
mov
and
xchg
les
ljmp
imul
xor
fistpl
fwait
push
xor
mov
and
push
cmpsl
jo
scas
pop
xchg
sbb
jl
es
fmuls
xchg
pop
mov
sub
subb
bound
adc
shlb
and
fcmovnb
ljmp
mov
jg
sub
mov
jne
push
or
jno
adc
sbb
cmpsb
test
xchg
sub
and
call
push
add
dec
lret
mov
stc
shrl
mov
mov
adc
push
pop
std
insb
pop
in
sbb
sub
inc
pop
cwtl
mov
ret
xor
in
outsb
push
or
jge
lret
rorl
stc
lret
fcoml
mov
nop
lods
lds
lahf
das
popf
fldt
cli
mov
cmp
cmp
mov
xchg
add
pop
stos
rcll
in
jmp
jno
bound
xor
mov
rorl
push
aam
aas
push
ret
movsl
xlat
mov
loope
adc
shll
ja
xchg
mov
and
test
mov
sub
imul
cmpsb
shlb
jnp
bound
fiadds
jecxz
jae
cwtl
and
and
call
mov
mov
out
xchg
movl
and
or
jo
jge
loop
cmp
sub
testb
in
in
call
in
repnz
outsl
xchg
les
aaa
or
push
cmpsl
mov
cwtl
stos
push
mov
jmp
adc
imull
or
rcr
sub
push
ret
ficoml
add
mov
je,pt
rcll
dec
into
sahf
mov
push
cld
mov
das
xchg
mov
push
add
mov
and
pop
int3
mov
jb
jbe
dec
jle
cmpsb
enter
cmp
popa
cmpsb
or
jg
mov
adc
int
mov
mov
mov
inc
cld
xchg
mov
push
dec
fisubrl
lcall
jle
dec
sbb
aaa
je
scas
imul
repnz
pop
and
sub
pop
mov
roll
push
xchg
insl
pop
sbb
push
pop
sbb
sbb
int
or
push
ret
sbb
cmp
dec
ja
push
mov
out
adc
movsb
mov
adcb
test
fisubs
sti
jmp
fdivl
mov
or
sbb
cmpsb
or
lods
shll
dec
push
popf
test
or
push
cmp
lret
in
fdivr
ret
sub
ljmp
clc
dec
mov
push
fnstenv
pop
pop
inc
daa
sbb
jmp
sub
push
xlat
in
sub
xchg
popf
stc
in
jbe
ret
xor
sbb
or
inc
call
push
sbb
dec
mov
or
mov
arpl
jns
subb
out
dec
mov
or
jo
and
fs
sbb
lock
sbb
push
jl
adc
iret
out
push
and
inc
sbb
inc
stc
nop
add
jl
int3
sub
push
cmp
or
imul
in
mov
pop
push
shlb
xchg
cmc
pop
xlat
js
sub
leave
fwait
cltd
lcall
jnp
mov
inc
arpl
push
test
js
sub
inc
and
loopne
scas
pop
ret
inc
cmpsl
iret
mov
lahf
subb
mov
movsb
xlat
inc
xor
iret
js
mov
in
inc
jne
add
add
mov
cmp
pop
mov
sbbl
shr
pop
jne
mov
mov
mov
lahf
cmpsl
sbb
dec
sbbb
popa
scas
push
pop
add
scas
push
dec
out
and
jl
scas
jo
xlat
loope
insl
cmpsl
jb,pt
rcll
sub
xor
fwait
xchg
xchg
lahf
pop
xor
xchg
xor
or
push
xor
jp
sub
or
push
inc
cs
rcrb
pop
cld
imul
popa
lahf
into
les
push
push
dec
cmp
loop
pop
inc
mov
inc
mov
enter
lods
aam
rcl
cs
repz
mov
push
test
and
insl
jmp
xorb
subl
fcom
push
mov
jo
xor
and
or
mov
inc
add
and
out
out
adc
std
cmp
ficompl
pusha
cmpsl
pop
std
fcoms
xchg
das
ss
adc
sbb
out
mov
sub
xchg
into
lcall
mov
stc
shl
int
mov
ret
pop
adc
xlat
push
mov
pop
sbb
xor
gs
jge
loope
ja
or
cmc
mov
lcall
push
mov
or
xor
xor
xor
sub
icebp
repnz
sbb
mulb
cmpb
data16
aaa
xchg
test
test
mov
jle
mov
int3
xor
cmc
xlat
dec
dec
js
xor
adc
fnstsw
shlb
or
cmc
cmp
mov
xchg
popf
cmp
mov
mov
popa
xchg
xchg
cltd
arpl
scas
mov
out
pusha
mov
and
enter
dec
arpl
mov
ret
popa
mov
adc
les
out
cmc
sbb
dec
fistpll
jb
imul
insl
aas
aaa
daa
mov
jge
xor
test
pop
inc
in
dec
inc
jns
stos
fmuls
dec
rcl
rcl
mov
mov
sbb
pop
and
hlt
cld
cwtl
pop
sbb
pop
inc
push
mov
push
or
inc
daa
addr16
mov
lcall
cmp
jo
mov
scas
popf
add
inc
xchg
pop
and
dec
mov
or
dec
sbb
adc
jae
insl
pop
dec
ss
dec
and
sbb
pop
hlt
cmpsl
jne
or
sbb
loope
dec
sarb
lods
mov
mov
lds
sbb
adc
inc
rorl
push
shl
in
and
fs
pop
cmp
mov
lahf
test
jl
lret
jo
jp
iret
psraw
xchg
mov
adc
cmp
shl
push
lods
add
jp
adc
cs
paddusb
xchg
movsl
dec
jge
and
xor
mov
push
aaa
testl
into
insl
mov
shrb
addr16
xor
mov
bound
cmpsb
sbb
push
pop
aas
xor
mov
xor
xchg
rol
cmc
cld
loop
ljmp
pusha
jbe
movsl
cmp
mov
outsl
jecxz
dec
adc
push
fldl
mov
cs
jo
jns
fdivrs
popa
xor
or
adc
lock
mov
test
ret
loopne
mov
call
popf
loop
mov
das
mov
in
cmp
cmp
add
adc
nop
push
cmc
insb
or
push
fdiv
call
dec
ret
and
outsb
pusha
testl
push
repz
lock
xlat
fildll
and
and
arpl
mov
mov
fdivr
and
lods
xor
int3
out
push
lods
mov
sti
cs
or
imul
xor
mov
fmull
leave
subb
loopne
cmp
mov
pusha
push
dec
adc
inc
cmp
push
jbe
cmp
dec
lods
xor
mov
mov
lcall
add
push
or
clc
pop
fldt
or
mov
mov
mov
or
popl
outsl
push
jmp
ret
cmp
jle
imul
movb
mov
gs
cmpsb
fstp
movsl
adcb
jo
rcrl
or
cmpsl
mov
adc
pop
cmp
les
mov
fimull
mov
mov
inc
ds
ljmp
cmc
call
dec
mov
mov
push
jno
daa
inc
sub
test
mov
iret
ds
loop
idivl
and
cmc
aas
ss
xor
mov
push
mov
ficomps
std
push
sbb
xor
call
push
loop
mov
sti
insb
imul
pop
dec
insl
dec
push
sbb
movsl
xor
adc
xchg
sbb
fwait
call
push
sbbb
cmpsl
cltd
inc
or
arpl
pop
sub
jl
fistpll
call
rcrb
mov
mov
pop
stc
push
scas
xor
test
sbb
add
mov
lret
ret
mov
mov
and
sub
loope
dec
adc
add
mov
jecxz
outsb
mov
pusha
mov
and
cmpsb
outsb
pop
or
mov
jecxz
fistps
xor
loop
call
jnp
mov
cmp
push
fidivrl
mov
push
movsl
cli
xchg
ror
les
enter
int3
mov
imul
mov
rorl
lds
pop
in
push
mov
and
mov
adc
inc
push
xchg
xor
rcrb
ds
mov
dec
mov
mov
lods
out
das
jnp
cwtl
fs
ret
and
and
ss
mov
jmp
xor
enter
sub
mov
inc
arpl
or
push
jmp
inc
insb
xor
sarb
into
ficompl
sub
jp
out
push
pop
inc
adc
and
mov
aam
jne
inc
dec
or
and
ret
jbe
repz
or
fildl
push
out
add
lds
lret
push
pushf
out
lret
dec
in
in
fdivs
mov
loop
adc
loopne
inc
js
repz
or
ss
cmp
cmpsl
loope
pop
mov
arpl
test
lret
test
jo
add
icebp
ds
pop
cli
addl
icebp
std
faddl
sub
jne
sbb
sbb
mov
push
outsb
pop
loopne
xchg
imull
cmp
daa
fldcw
dec
lahf
mov
or
stc
jbe
dec
pop
jl
mov
cmpsl
std
cmp
or
fildll
xor
and
cmpsb
sub
ss
rep
and
in
cmp
mov
dec
push
and
out
mov
loop
sti
or
or
xlat
das
aaa
lods
popa
imul
rorl
mov
lret
dec
into
jb
sbb
inc
bound
xchg
mov
xor
mov
dec
cmpsb
or
mov
sbb
cltd
fstl
cltd
cmp
add
adc
mov
out
sahf
repnz
addr16
repnz
fldl
xchg
int
aam
int3
push
jae
bnd
or
mov
in
cmpsb
lret
and
jae
into
adc
jp
shlb
mov
push
leave
and
arpl
pop
fdivrl
push
mov
mov
mov
sahf
ret
and
aad
mov
and
faddl
pop
cli
cmp
mov
repz
fists
mov
bnd
add
push
mov
outsl
cmpsb
outsb
pop
rclb
add
mov
add
shlb
push
pop
data16
cmp
jns
aam
and
jbe
cld
std
daa
xchg
sahf
pop
push
add
sarb
lahf
fcoml
les
lcall
dec
lods
cmp
and
rcll
int
adc
rorb
jecxz
movsl
int
cmp
fisttps
xor
add
cmp
lock
orl
lods
outsl
pusha
dec
insl
mov
lock
adc
mov
inc
and
cs
je
cmpl
pop
inc
pop
cmp
mov
add
jmp
stc
imul
xchg
frstor
dec
mov
sarl
loopne
jl
mov
out
inc
repz
inc
outsb
mov
mov
popf
loopne
pop
jne
rcr
mov
cld
cmp
cmp
aad
push
and
sub
push
in
mov
pop
nop
icebp
jno
cmp
leave
adc
adc
rclb
outsl
pop
jle
sbb
lds
cmc
sub
xchg
fcmovnb
dec
inc
insl
jbe
call
cmpsb
js
es
sub
cmpsb
jbe
xor
cmpsb
pop
les
xchg
lahf
jae
mov
or
xor
cli
push
dec
adc
push
jecxz
pop
sbbb
push
repz
sub
mov
popl
cli
lods
lret
out
dec
mov
pop
shlb
jl
aas
sbb
xchg
lcall
sub
jg
push
stc
pop
and
cmpl
add
mov
push
adc
or
jb
repz
xor
inc
push
pop
jb
lret
int
mov
ja
adc
xchg
fucomp
sbb
inc
mov
sbbb
jno
pop
bound
and
outsb
or
mov
and
add
mov
pop
dec
sahf
pop
inc
add
adc
xchg
xchg
in
iret
adc
addr16
mov
ficoms
lods
test
or
jg
adc
push
pop
mov
sub
fidivrl
aas
outsb
push
dec
cli
cmp
in
rorl
xchg
or
repnz
xor
and
xchg
add
xchg
aam
mov
add
scas
nop
mov
xchg
ficomps
cs
cmp
dec
xor
xor
push
xchg
dec
and
add
pusha
adc
sbb
cmp
add
and
pusha
clc
shrb
push
std
sti
pop
lods
mov
mov
cltd
adc
push
add
mov
jne
sti
int
rorb
mov
imul
sbb
ficompl
pop
icebp
mov
push
xchg
dec
sbb
out
sbb
xchg
jb
cmp
xlat
or
xchg
dec
and
cltd
clc
jl
in
xchg
sub
and
and
xor
or
stos
gs
pop
jb
mov
mov
mov
je
jg
pop
fstps
push
jg
out
adc
call
push
xchg
dec
call
push
addl
add
cmc
and
cmp
subb
cmp
inc
sbb
inc
mov
push
xchg
dec
and
fwait
and
add
push
dec
aas
adc
mov
faddl
mov
arpl
shll
pop
dec
xchg
and
xlat
cs
push
xor
push
cmc
mov
imul
mov
jecxz
xchg
movsb
xor
test
cwtl
jmp
mov
and
hlt
insb
test
test
dec
sti
adc
mov
test
or
test
bound
bound
sub
mov
in
sti
inc
add
test
pop
into
add
shrl
lods
mov
movsl
cmpl
jmp
scas
mov
andl
js
pusha
cmp
fsubl
dec
lret
aad
add
lahf
or
test
fsubrl
insl
dec
cli
cmp
popa
cmpsb
sub
sbb
ds
pusha
test
loopne
testb
outsl
fnstcw
mov
clc
push
push
mov
push
aas
mov
cmpsl
pop
pusha
test
mov
push
cwtl
xchg
push
dec
jge
rolb
dec
bound
test
adc
es
loopew
xchg
cmp
mov
cmp
in
es
and
call
cwtl
xchg
test
pop
cmp
cli
sbb
mov
aas
sbb
aaa
jns
xchg
cmp
sbb
mov
push
xor
and
add
mov
and
add
mov
mov
add
pop
jmp
jp
js
leave
dec
sbb
cmp
cmp
ja
jo
out
aas
xchg
test
call
inc
aad
out
push
add
mov
inc
test
mov
inc
cli
add
inc
in
pcmpgtd
pop
cmovo
sbb
inc
test
lods
jae
push
jbe
lcall
clc
jne
xchg
and
nop
sahf
jo
lcall
jo
scas
hlt
lret
push
ss
js
xlat
xor
jnp
mov
cld
cmp
cmp
xchg
out
mov
jp
call
je
test
fists
loop
jno
test
push
mov
mov
xchg
repnz
leave
or
fldt
push
imul
xchg
mov
jecxz
je
cmp
adc
or
iret
mov
pop
imul
ja
xchg
xor
sbb
lds
add
inc
mov
lds
cmpsb
iret
xor
nop
aad
mov
pusha
mov
cmpsb
call
jle
mov
outsb
mov
jecxz
enter
and
add
xor
lock
std
bound
push
sub
movups
mov
cmp
fld
cmc
lds
popa
in
fucomi
ds
xor
outsl
js
lds
sbb
xorb
rol
cmc
jle
jge
outsb
mov
sub
inc
jo
lods
mov
jg
mov
test
mov
jge
xor
movsl
pop
popa
sahf
dec
pop
mov
fsubl
mov
lcall
push
adc
mov
lcall
mov
jge
push
testb
or
bound
in
jge
and
inc
xchg
jmp
xchg
or
inc
cs
xchg
mov
inc
loopne
jno
bound
in
jge
dec
lret
inc
dec
pushw
imul
inc
cs
test
mov
and
jnp
adc
mov
sbb
sbbl
in
mov
adc
mov
loop
enter
popa
jle
pusha
mov
mov
jg
lret
mov
in
mov
pusha
jg
loop
sub
cmp
sub
mov
in
mov
aaa
pop
add
clc
shlb
push
pop
and
mov
fsts
push
aad
cmpsl
aaa
cmp
mov
or
lcall
mov
lret
jl
mov
jo
xchg
popf
adc
fsts
inc
push
inc
aaa
fisttpl
dec
outsl
ret
test
ja
xor
mov
enter
jb
jno
test
adc
xchg
or
popa
out
loopne
mov
xchg
popa
cmp
pop
sub
imul
mov
movsb
call
inc
or
dec
outsl
xchg
cmpsb
ror
addb
ja
push
ja
fsubrs
std
into
sbb
repz
and
es
rcrb
iret
aaa
sub
sahf
inc
add
mov
mov
scas
inc
mov
dec
sub
repz
je
ror
das
enter
int
add
or
xorb
ja
ret
int
sbb
mov
xchg
cmpsl
mov
repz
mov
or
cmp
daa
aad
jbe
or
sbb
hlt
je
cmp
sbbb
push
lods
imul
test
shr
inc
mov
pop
andb
push
out
mov
leave
xor
cmp
data16
sbb
mov
iret
xlat
sub
jbe
xchg
je
inc
cmp
add
xchg
aaa
adc
fistpll
insl
mov
push
jae
push
imul
add
sub
addr16
testl
jo
jb
lahf
jle
cmpsl
mov
pop
lds
mov
das
adc
adc
fs
ljmp
add
lds
fcmovbe
lret
sahf
scas
dec
mov
pop
std
mov
int
lret
mov
stos
cmc
pop
bound
pop
clc
adc
aaa
aam
xchg
dec
imul
loopne
pop
adc
mov
inc
xor
mov
pushf
cmp
cltd
mov
pop
push
out
cmp
mov
jbe
ret
cli
sti
add
shl
jge
sub
fwait
mov
sbb
sbb
hlt
xlat
push
fistl
cli
popa
ffree
xchg
xchg
push
nop
cltd
xchg
hlt
dec
cwtl
mov
add
jle
jae
mov
and
aas
iret
pop
pop
and
js
popa
imul
stos
sub
stos
xchg
ss
and
or
fildll
xor
jae
or
out
bound
jnp
shll
pop
je
std
cmc
test
popa
arpl
sti
pop
jmp
add
out
sahf
stos
pop
mov
std
sub
ja
out
fdivrs
sbb
inc
mov
sbb
mov
add
lret
push
and
fsubrs
iret
cmpl
loop
jg
xchg
mov
test
push
pop
push
jne
scas
std
imul
out
aad
jns
loop
jbe
push
sbb
dec
popf
jmp
test
std
mov
sti
lods
jnp
scas
adc
int
push
loopne
push
dec
jecxz
mov
test
mov
movsl
jp
cmp
sbb
roll
or
jo
add
mov
pop
ss
imull
jle
mov
bound
pop
mov
adc
or
mov
sbb
stc
or
dec
outsl
inc
imul
pusha
dec
shll
daa
xchg
jge
cmp
pop
pop
add
adc
fstl
jle
into
aad
sub
or
mov
ret
push
or
es
mov
es
outsl
in
dec
out
mov
xchg
xor
imul
fstpt
cmp
fnstsw
repnz
sub
add
pop
cmpsl
ljmp
ret
xor
in
inc
out
xor
cmp
mov
dec
jg
mov
xchg
scas
mov
out
imul
mov
jle
in
mov
in
pop
ret
push
loope
pop
cmp
adc
sahf
adc
adc
mov
and
scas
xchg
ja
sti
mull
rorl
icebp
out
sbb
fwait
shr
add
mov
rolb
arpl
sti
sub
mov
sub
stos
sarb
aas
inc
jecxz
stc
es
in
in
in
imulb
adc
xor
hlt
ja
jae
outsl
cmp
fwait
subl
pop
das
adc
insl
dec
sti
shlb
sbb
dec
sub
push
enter
test
call
mov
mov
sub
push
int3
inc
cmp
xor
jbe
out
repz
inc
shrl
out
mov
push
jae
xlat
push
aad
fnsave
jne
fwait
stos
shll
shl
mov
cmp
adc
mov
fnstcw
repz
loop
adc
pop
es
movsl
andl
mov
cmp
cmp
sub
jnp
lea
add
sub
xchg
popf
jl
mov
mov
jecxz
sub
sub
fisttps
pmovmskb
sub
jecxz
cmpsb
addr16
xor
pop
adc
mov
sbb
notb
pusha
xchg
xchg
pop
iret
lods
ret
leave
inc
jnp
data16
shlb
xchg
or
adc
sarb
ljmp
pusha
xor
ret
jmp
xchg
and
lret
jns
cmpsl
inc
imul
decl
popf
sub
push
xchg
xchg
sub
movsb
push
cmp
or
jae
push
das
out
adc
test
sbb
outsb
into
xchg
popf
jl
sub
pop
pop
hlt
cmp
scas
push
fstpt
cmp
mov
push
add
sbb
daa
xchg
sti
cmc
in
mov
xor
xor
lret
cmp
or
and
mov
lds
test
adc
aad
sub
xchg
stos
cmp
ljmp
xchg
loopne
aam
mov
popf
sub
xchg
shrb
loope
into
push
xchg
aad
fucomi
fs
insl
and
hlt
pop
scas
mov
mov
sub
push
cmp
xor
push
dec
mov
lcall
sbb
sub
sbb
shl
hlt
jo
arpl
test
or
testb
sbb
mov
sbb
out
mov
push
xor
cmp
cwtl
std
and
dec
inc
hlt
into
or
into
cli
pop
and
fcompl
mov
and
mov
ret
dec
std
aas
pop
fisubl
or
js
push
roll
push
outsl
sub
iret
add
ret
data16
add
test
js
lock
cmp
iret
or
pushf
ss
inc
sub
push
xor
sbb
lret
xlat
rcr
lea
push
jae
loopne
int
stos
adc
sti
inc
cmc
and
insb
cwtl
add
mov
movsl
loope
lcall
inc
cmp
push
jl
xor
adc
out
mov
movsl
mov
push
loope
inc
sbb
mov
testl
je
outsb
rcrl
or
cmpsb
stos
xchg
and
mov
int3
xorl
pop
mov
pop
mov
insl
push
fdivs
inc
push
and
addr16
inc
out
xor
aaa
add
dec
dec
mov
fst
cli
push
or
divb
stos
fdivrl
add
clc
int
in
sub
add
int
js
adcb
dec
jns
jno
xchg
or
add
cmp
gs
mov
pop
push
push
jb
stos
sbb
adc
nop
cmc
ja
mov
fadds
gs
mov
cmp
out
xlat
jb
gs
mov
add
pop
ljmp
pop
add
inc
cli
xor
xchg
mov
pop
fsubr
fnstcw
sarl
stc
sbb
add
jmp
adc
pop
xchg
mov
aas
inc
lea
and
mov
lcall
loop
adc
dec
mov
mov
and
insb
jg
ret
mov
call
mov
and
xor
mull
enter
or
inc
into
dec
and
es
sbb
sbb
aad
push
mov
mov
pop
mov
or
pop
stos
push
jmp
ret
add
pop
jne
div
out
arpl
addr16
inc
mov
repz
pop
imul
into
andl
push
add
lods
dec
push
adcl
aas
sub
dec
sub
jb
mov
mov
sbb
cmp
ljmp
je
repnz
mov
pop
xchg
sub
in
pushf
jge
arpl
xor
in
je
test
stos
daa
xchg
cmpl
loope
fadd
mov
mov
movsb
cmp
jae
fimuls
xchg
test
cs
pop
xor
pop
sub
shl
int
fs
in
mov
sub
daa
mov
gs
scas
sub
push
jl
sbb
mov
and
jo
mov
adc
jne
dec
js
lea
repnz
cmp
mov
cld
pop
mov
rorb
push
sbb
insl
movsb
xchg
mov
and
cwtl
pop
push
hlt
idiv
out
xor
jg
jecxz
je
loop
ret
rcl
jg
jae
testl
or
sbb
pop
inc
jmp
fwait
sbb
xchg
stc
mov
mov
sub
push
xlat
mov
sub
cwtl
mov
or
test
movsb
pop
fucomi
dec
cmp
push
push
sbb
push
sub
ret
mov
mov
fdivrl
and
xchg
sar
mov
or
and
push
imul
xor
enter
sbb
push
push
and
or
movsb
in
nop
ret
sub
cld
pop
adc
cs
push
add
out
dec
popf
xor
fbld
mov
lods
je
fwait
scas
fcomps
push
test
out
in
mov
mov
mov
ret
mov
ja
mov
and
inc
lret
fwait
jle
in
adc
mov
jmp
es
pop
push
pop
or
mov
cltd
xchg
fcmovne
add
inc
scas
or
test
popf
icebp
lcall
push
fildl
push
inc
jge
mov
pusha
pop
aas
dec
mov
inc
into
xchg
inc
pop
repz
leave
mov
ret
orl
jno
jmp
insb
xchg
xchg
xchg
movsb
mov
mov
std
push
das
add
aaa
push
push
aas
mov
sub
dec
jp
adc
mov
adc
mov
lahf
arpl
mov
shlb
int3
push
aad
mov
pop
push
mov
pop
fsubr
jmp
cmp
stc
jbe
gs
sbb
cmc
push
sbb
mov
push
jb
add
push
push
inc
popa
out
xchg
lahf
jmp
cmp
add
dec
in
out
inc
in
jle
mov
test
xlat
sbb
cmp
dec
loope
mov
xchg
js
fmuls
mov
xlat
out
lcall
movhps
cmp
clc
xchg
rcr
mov
add
out
add
mov
jo
inc
inc
sub
scas
out
push
xchg
pusha
leave
call
testl
pop
add
daa
mov
add
jnp
pop
mov
rolb
js
iret
cld
xor
dec
cmp
outsl
or
sub
incb
ret
or
lods
lods
aaa
mov
sbb
into
addl
cmp
adc
aad
xor
cmp
dec
loop
adc
pop
sbb
notl
xor
scas
popf
andb
and
jp
imul
insb
insl
and
add
ret
repnz
dec
outsb
dec
icebp
pusha
cs
in
into
xor
test
movsb
sti
sar
sub
pop
mov
stos
and
sbb
or
icebp
sub
xor
mov
jg
sub
adc
std
clc
imulb
test
scas
fisubrs
and
dec
or
cli
push
mov
ja
dec
push
cmp
mov
push
icebp
push
mov
xlat
ljmp
dec
pushf
pop
or
xor
fdivl
loop
es
cmp
jnp
fldcw
sbb
pop
mov
outsl
mov
gs
out
sub
lea
pop
mov
xchg
out
adc
insb
stc
jecxz
int3
pop
cmc
xchg
dec
lahf
insl
loopne
cmpl
or
mov
jne
mov
fcmovne
popa
ror
mov
cld
ret
sbb
or
adc
jecxz
mov
lds
test
test
push
xchg
xor
jne
mov
insl
in
or
das
cmp
or
clc
repnz
sbb
jne
sub
dec
mov
cmp
push
inc
shlb
cmp
bnd
lret
mov
pushf
mov
in
popa
xor
sbb
pop
add
in
rcrb
fcomi
pop
xchg
add
ljmp
push
adcb
and
stos
add
insb
stos
cmp
pop
pusha
test
add
scas
ret
fistpl
mov
psadbw
sahf
aas
imul
dec
fs
stos
movsl
scas
and
add
int
add
push
ljmp
int3
mov
push
dec
fistps
mov
cmp
cli
and
sarb
push
cmpsl
loop
pop
test
mov
sbbb
xchg
das
out
loopne
pop
push
push
test
sub
cwtl
ret
inc
cs
inc
jb
mov
push
jo
xor
lods
stos
aam
xor
jp
pop
add
push
mov
or
nop
jbe
cmpsl
add
cmp
int
es
inc
xchg
pop
mov
xchg
pop
jmp
sub
mov
movsl
jl
jno
jp
fld1
scas
push
mov
addr16
imul
push
dec
jbe
sub
jo
adc
sub
mov
dec
pop
jg
sub
lret
xor
dec
or
add
xor
mov
clc
dec
mov
nop
add
mov
in
mov
push
fwait
lods
sarl
mov
jae
lea
sub
daa
stc
jo
cld
adc
pop
lret
sbb
sub
jg
popf
fisubs
pop
adc
clc
mov
xchg
in
bound
cmp
lds
cmpsb
adc
xchg
das
pop
push
test
test
arpl
inc
frstor
mov
xchg
xchg
andl
xchg
add
dec
sbb
sub
lods
popa
xor
stos
nop
mov
and
pushf
mov
out
es
mov
test
cmc
mov
movsl
mov
dec
out
mov
xor
inc
xor
stos
popa
dec
mov
cmp
rorb
mov
cmpsl
cltd
cltd
mov
test
loopne
ljmp
inc
js
push
imul
lret
and
cltd
xchg
pop
pop
or
pop
out
pop
in
das
lret
push
sbb
movsb
jle
lret
pusha
out
push
aad
dec
dec
cltd
pop
mov
mov
xchg
popf
pop
sub
mov
xchg
insl
ljmp
jmp
sub
adc
adc
dec
aam
daa
sbb
adc
add
mov
mov
les
ss
dec
test
xor
and
dec
stos
neg
dec
js
lea
add
imul
pop
sbbb
int3
xchg
push
out
repnz
mov
fucomp
insl
mov
fidivl
outsb
out
push
jo
jmp
jecxz
aas
loopne
loope
jp
add
cld
insl
push
sbb
std
in
inc
js
ds
add
cmp
das
or
int3
pop
loope
push
pop
mov
cli
dec
test
stos
fisubrs
lret
repz
jae
xor
insl
aaa
jp
and
cmpsl
mov
movsb
sbb
sbbb
jo
daa
dec
pop
mov
and
xor
xor
ljmp
icebp
mov
inc
pop
adc
jo
roll
adc
and
out
adc
lcall
iret
xor
rolb
mov
mov
sbb
fstl
mov
pop
mov
subl
xor
sbb
addr16
daa
jns
cmp
dec
cmp
test
sub
push
mov
pushf
lahf
sub
mov
mov
shrb
cmp
xchg
cld
sti
outsl
cmpsb
cmp
jecxz
xchg
inc
pushf
or
mov
leave
sub
pop
cli
stos
sub
inc
push
sub
pop
pop
fwait
pop
hlt
stos
mov
pop
ja
dec
jge
addr16
hlt
stos
inc
xchg
adc
mov
inc
addr16
mov
stos
mov
push
jno
pop
hlt
stos
pop
insl
lds
xchg
sahf
jge
push
adc
insl
pop
addr16
xchg
sbb
out
jmp
hlt
mov
add
sub
fsub
sub
mov
stos
nop
sub
sbb
inc
xor
shrl
cmp
paddusw
lea
mov
mov
icebp
or
loop
xor
and
imul
and
bound
dec
inc
adc
xor
mov
cmp
push
or
iret
adc
cmp
push
mov
and
inc
sahf
xor
in
aam
cwtl
dec
int
insb
push
or
sub
gs
lcall
dec
stos
stos
fbstp
push
outsl
adc
mov
sbb
push
sub
push
push
imul
cmp
or
mov
repnz
sub
stos
loope
dec
mov
mov
mov
and
push
je
pop
mov
and
jmp
xchg
sub
jg
jp
test
stos
fldenvs
adc
idivl
ds
push
push
jle
fldt
ja
clc
xor
ja
cmp
aad
jle
xlat
in
loope
stc
sub
shll
std
into
sbb
mov
or
mov
or
call
or
mov
inc
addr16
cmp
inc
aaa
lock
repz
jne
fstp
jg
ds
cltd
rcl
dec
add
mov
shll
ret
fcoms
rolb
in
inc
fwait
and
mov
addr16
dec
xchg
adc
clc
ljmp
push
mov
rolb
shlb
pusha
lret
pop
cmp
clc
mov
jae
int3
insl
inc
push
mov
in
lea
cmp
and
push
dec
cld
or
inc
fbstp
add
jno
jmp
mov
shrb
mov
xchg
bound
and
pop
sub
sti
pop
popa
bound
sbb
dec
popf
mov
daa
lods
xor
or
jg
push
push
aad
fdivrs
sbb
mov
test
jmp
ds
rorb
sub
mov
mov
jge
rcll
arpl
cmp
mov
jae
nop
popa
decl
xor
int3
dec
cli
xchg
imul
xor
out
movsl
cld
xchg
sbb
int3
clc
sub
data16
mov
in
cli
mov
lret
loope
jb
insl
loope
out
mov
mov
dec
dec
sti
lods
rcrb
push
mov
sbb
out
mov
adc
lods
jp
mov
movsb
xor
lcall
mov
jnp
test
stos
and
mov
cmc
dec
mov
jo
repnz
push
jl
add
add
add
push
mov
lea
dec
loope
daa
mov
mov
and
or
sub
fnstenv
arpl
push
test
ja
xor
leave
and
cmp
inc
sbb
xchg
data16
jb
or
imul
imul
int3
mov
mov
xor
in
ret
add
insl
pushf
xchg
cmp
cwtl
jp
repnz
pop
and
lcall
stc
xchg
shr
adc
insl
xchg
sub
pop
adc
std
mov
es
rcll
push
jl
ret
sbb
insb
rorb
faddl
push
cmc
inc
mov
clc
insb
mov
test
push
pushf
push
iret
sarl
pop
inc
adcb
ret
inc
mov
incb
mov
sbb
add
jmp
xor
std
movsb
cltd
sub
xlat
inc
push
cmp
xor
mov
loope
or
pop
add
or
push
sahf
pop
ljmp
jns
js
pop
dec
hlt
std
gs
inc
jb
mov
sub
aas
mov
je
loop
imul
dec
outsl
cmp
roll
cmp
dec
clc
lcall
stos
sbb
andb
mov
loop
pop
adc
lea
addr16
pop
inc
fcmovnb
mov
push
mov
push
into
or
xor
ret
addr16
xor
cmp
push
and
test
and
jns
adcb
inc
jns
arpl
lret
outsl
or
mov
and
aad
test
mov
mov
cmp
push
les
sub
lret
test
pop
icebp
xchg
test
hlt
push
or
jmp
jg
inc
xlat
lcall
sub
movl
bound
gs
adc
adc
jp
sbb
jne
push
int3
xchg
mov
aas
and
test
mov
ret
push
jg
lret
dec
test
adc
or
lods
xchg
pop
in
push
xor
addr16
dec
inc
mov
pop
push
mov
push
push
data16
fsubr
sbb
jp
repnz
mov
int3
lods
cmp
jp
movsl
fstl
pop
inc
push
ret
lods
adc
add
ret
xor
andb
push
mov
cwtl
pop
data16
test
enter
mov
aas
data16
lds
ror
sbb
ljmp
loopne
jbe
test
add
into
xor
negl
movntps
jecxz
gs
mov
lock
incb
inc
test
out
fs
dec
int3
pop
pop
mov
mov
int3
add
ss
clc
cltd
jbe
pop
repz
out
out
sbb
lret
mov
cwtl
mov
aaa
lea
cmp
rorw
rolb
movsb
mov
les
aam
mov
jl,pn
lret
and
and
mov
hlt
ret
int
pop
js
cwtl
ficoml
or
mov
loope
cli
lods
out
mov
dec
lods
sub
adc
pop
mov
and
mov
fstl
pusha
sub
fildl
push
fs
loope
xor
adc
js
lret
add
fnstsw
push
or
sbb
scas
mov
sbb
mov
or
adc
leave
mov
mov
stos
ja
add
fcomp
pushf
sub
fstps
mov
hlt
hlt
dec
pop
jae
dec
cmp
xchg
adc
call
jecxz
cmp
int
cwtl
and
adc
jbe
xchg
cmp
push
cltd
jle
popf
inc
test
jge
push
cmp
mov
inc
add
jnp
xchg
add
in
hlt
inc
jne
cmc
sub
fists
out
lret
clc
mov
dec
add
inc
pop
jmp
adc
sub
jp
out
adc
les
xor
sub
hlt
push
mov
cmp
stos
jp
push
pop
cmp
lret
and
push
repz
cmp
lock
ret
cmp
mov
sbb
jle
mov
sbbb
out
lahf
adcl
fneni(8087
mov
mov
shl
repz
lds
pop
addr16
mov
lret
inc
outsl
jl
mov
in
lret
push
or
pop
lods
push
fstp
mov
std
xchg
or
jle
mov
out
push
mov
add
out
lret
push
xor
xchg
loop
cmpsb
mov
jo
or
jle
jbe
outsb
sbb
ret
cltd
rol
in
push
mov
leave
or
mov
push
fbstp
cltd
and
hlt
pop
add
and
pop
cli
insl
dec
call
call
adc
xchg
pop
int
sub
jmp
dec
stos
test
popf
xor
lods
aas
dec
and
rcrl
cmp
or
shlb
fcoml
js
out
popa
int3
enter
int3
in
movsl
mov
push
subl
adc
out
mov
outsl
mov
dec
jns
fistpll
dec
push
mov
mov
stos
add
out
popa
jnp
outsb
xor
andb
out
push
insl
mov
data16
rcl
daa
adc
add
in
fldt
repnz
stc
shrb
leave
dec
outsl
push
jecxz
xchg
lahf
jg
push
fiadds
xchg
fsubrl
fists
fsubrl
bound
arpl
rcr
aad
adc
mov
sbb
fnstenv
jge
popa
and
ss
dec
jae
inc
push
xchg
or
int3
lock
in
mov
stos
push
sub
sbb
dec
lods
xor
fdivrs
xchg
push
add
inc
xchg
fistpl
dec
push
mov
and
lret
popa
sbb
mov
pusha
js
fimuls
testl
mov
in
push
pop
pop
cmp
rol
lahf
sbbb
push
jecxz
es
loope
ftst
cli
pop
fisubs
fiadds
icebp
cmp
mov
aam
mov
gs
sahf
xchg
movl
notb
xor
ret
pop
push
cmp
dec
outsl
mov
pop
addr16
mov
cmp
repnz
cmc
jns
mov
lds
scas
push
mov
aam
mov
fld
aad
movsb
jbe
pop
scas
mov
jmp
and
icebp
cmp
sbb
jnp
cmp
pop
inc
inc
fisttpll
cmp
scas
outsb
adc
dec
les
and
cmp
fists
push
mov
rolb
and
add
mov
stc
cld
dec
mov
pop
push
cmp
call
add
cmp
clc
push
xor
push
mov
out
fistpl
sub
sub
inc
add
pop
pop
or
sbb
call
mov
push
movsl
inc
and
test
insb
dec
pop
mov
sbb
outsb
pop
inc
pop
lock
in
adc
aas
leave
sbb
pop
inc
mov
and
cmpb
xchg
iret
pop
cld
xor
loopne
push
sti
mov
sub
dec
dec
outsb
scas
add
andl
pushf
scas
jnp
jecxz
loopne
insl
jae
ss
push
and
sub
call
add
pop
iret
mov
scas
and
pop
cmp
cmp
push
adc
mov
adc
test
jbe
fistpl
frstor
lea
xchg
mov
das
push
rclb
movsl
enter
jp
mov
jnp
add
loopne
push
jno
rcll
mov
hlt
push
xor
cmc
cmpsl
nop
mov
test
cmp
mov
sbbb
jg
mov
xor
fnstcw
test
add
in
popf
je
mov
lods
mov
sbb
dec
fistpll
hlt
mov
cmp
pop
inc
addb
pop
or
cmpsb
add
cmp
repz
jno
pop
lds
sbb
xor
lods
idivl
popa
jl
fsubp
sbb
aad
arpl
movsb
mov
adc
cwtl
addr16
popa
lods
fisubl
or
pop
int3
jo
mov
adcl
jg
cwtl
ret
xor
movsb
das
mov
cltd
leave
push
pushf
flds
push
dec
data16
inc
cmp
js
cmp
imul
dec
data16
adc
pop
lret
inc
into
cltd
xlat
lods
enter
jo
negl
or
aaa
arpl
dec
pop
adc
xor
add
ficoml
mov
add
pop
or
pop
and
enter
fstpl
inc
jp
fwait
dec
lds
mov
out
dec
data16
rcll
sbb
sarl
repnz
fldenv
mov
pop
aaa
in
test
adc
xor
jns
into
jo
aas
inc
push
cmp
sbb
add
cmc
addb
xchg
xchg
rcrb
test
jnp
test
adc
outsl
dec
insl
and
push
inc
outsb
lret
adc
clc
fs
cltd
pop
push
in
jne
dec
lock
cmp
or
cltd
cmp
adc
orl
leave
cmp
mov
es
insl
pop
or
insl
cld
xor
sbb
cmpsl
and
jo
imul
add
stos
test
es
inc
adc
xor
jns
xchg
push
push
pushf
xchg
stc
cmp
jae
jecxz
add
repz
mov
imul
mov
cmp
stos
stc
dec
lods
or
push
mov
into
iret
cmpsb
inc
push
mov
inc
in
cs
rcr
mov
outsb
dec
imul
sub
in
pop
adc
mov
popa
idivb
push
shr
fdivrs
cmc
repnz
sbb
lahf
mov
lock
in
jo
and
push
cmp
das
xchg
sbb
mov
out
sub
sbb
test
stos
push
cmc
dec
push
movsb
mov
or
popa
test
int3
mov
adc
mov
sub
xchg
push
cwtl
mov
lret
movsb
subl
jg
jbe
test
hlt
in
mov
aaa
xchg
pop
jmp
rclb
repnz
rolb
jnp
xchg
fdivl
xchg
mov
xchg
push
and
cs
mov
pop
loop
vpmacswd
xchg
or
int
insb
or
xchg
cwtl
shl
aas
cmp
orl
sahf
std
jl
push
insb
pop
notl
mov
adc
into
jmp
out
inc
or
push
adc
xor
lcall
jg
fs
xchg
push
stc
xor
add
mov
jns
xor
rcr
stc
popa
inc
xchg
jle
aas
or
mov
test
lcall
jns
testl
popf
jne
xor
das
bound
dec
push
int3
int3
insb
xchg
aad
ret
in
cmp
cmp
cmp
pop
les
cs
daa
and
sahf
ficomps
pop
adc
dec
rcrb
xor
es
repz
in
inc
mov
imul
or
dec
fistpll
pop
mov
mov
inc
lods
and
sbb
push
mov
stos
mov
dec
xchg
mov
in
push
sub
ficoms
xor
or
jbe
popf
sbb
jle
mov
loop
insl
sub
testb
pop
sub
cmpsl
pop
dec
cmpsb
negl
lds
fnsave
dec
subl
dec
jns
mov
and
int
dec
pop
push
pushf
scas
out
add
and
mov
stos
ret
push
mov
jmp
cmp
xor
dec
xchg
cmp
inc
sbb
mull
push
dec
out
push
jp
pop
and
dec
insb
pop
push
adc
ljmp
dec
imul
or
dec
cmpsl
aam
lcall
and
mov
push
pop
xor
repz
iret
shr
icebp
adc
lret
insl
jl
repz
pop
mov
iret
lret
and
lock
js
jmp
add
jae
push
lahf
ds
jns
ja
packuswb
mov
adc
out
fdivrs
xchg
jns
push
xchg
ljmp
adc
ficomps
dec
lock
mov
shlb
out
cmp
aas
stc
dec
xchg
mov
cmc
mov
push
lcall
pop
sbb
mov
fnstsw
inc
or
scas
xorl
cwtl
addr16
inc
clc
push
mov
add
addr16
roll
dec
shl
testl
sti
xor
pop
jmp
fmuls
dec
fs
das
dec
push
sbb
xor
mov
mov
push
nop
and
subb
test
xchg
adc
lret
xchg
std
push
sarl
js
adc
cli
ljmp
stc
jns
lds
xlat
pop
cltd
adc
xchg
test
push
outsb
dec
pop
pop
pop
cmpsb
fists
or
mov
and
dec
sub
sub
and
mov
lods
sub
ret
cmp
and
jbe
jle
cmpb
push
add
sub
mov
in
pop
mov
mov
or
ret
adc
shrb
dec
cmp
sub
outsl
cmpb
mov
ja
fisttpl
mov
addr16
in
cwtl
es
xor
mov
test
ret
sbb
xchg
xor
add
nop
shl
pop
cmp
adc
lcall
mov
sbb
rcll
xor
mov
imul
in
sub
push
divl
loop
cmp
dec
jp
xor
xchg
addr16
or
mov
inc
add
push
mov
xchg
sub
cmpsb
inc
out
mov
mov
and
xlat
mov
xchg
js
sub
mov
dec
add
outsl
jnp
mov
cld
mov
dec
mov
lods
cli
imul
mov
scas
or
adc
addr16
push
sahf
adc
ficomps
out
bnd
cmpsl
fnstsw
stos
sbb
lock
out
pop
pop
cmc
shrb
and
idiv
adc
addr16
frstor
mov
imul
inc
idivl
xor
loop
xor
add
clc
lret
fistpll
xrelease
subb
pusha
sbb
scas
subl
mov
mov
fsubl
or
enter
scas
and
xchg
xchg
fwait
inc
inc
push
idivb
daa
mov
adc
add
add
test
or
xchg
call
out
mov
inc
mov
ds
xchg
mov
or
push
lods
mov
xchg
mov
gs
push
push
loopne
insb
xor
in
or
pop
fldenv
push
test
test
push
and
push
or
inc
sub
or
cmp
add
notb
rcl
rcrb
hlt
mov
f2xm1
mov
mov
fstpt
in
jnp
scas
notl
hlt
mov
cmp
xor
pop
mov
js
mov
cmp
fsubrs
sbb
loopne
idivb
loop
daa
add
rolb
sub
xor
cld
test
xchg
out
cs
pop
pop
sbb
mov
cmp
test
lret
jle,pt
cmp
cli
push
mov
cmc
cmpsb
cmc
into
inc
pusha
mov
repnz
aad
pusha
andb
and
sub
inc
dec
idivb
jge
imul
fs
dec
icebp
mov
rolb
jmp
mov
jmp
or
popf
popa
lcall
dec
inc
ja
loopne
xchg
and
imul
cli
rclb
cmp
or
sub
stc
mov
sub
or
arpl
or
add
imul
in
int
xor
dec
les
mov
es
pop
rolb
aas
pop
pop
push
dec
add
xor
inc
in
hlt
outsb
pop
lahf
mov
repz
ja
jp
js
dec
leave
jmp
push
or
mov
push
mov
xor
wrmsr
iret
adc
pop
xchg
and
pop
pop
inc
push
fs
mov
push
incl
aad
hlt
mov
add
push
and
mov
pop
adc
jecxz
loopne
cli
or
fiaddl
fidivl
movsb
out
lods
scas
add
xor
hlt
jmp
xchg
lcall
scas
mov
fnstcw
ret
enter
jne
lods
xchg
push
hlt
and
push
add
mov
jb
in
jmp
mov
test
jno
xorb
mov
incl
incl
adc
xor
mov
jp
fs
and
add
nop
das
out
mov
mov
and
popf
jmp
int3
dec
jp
aas
xor
fdivrp
xor
add
das
arpl
lcall
into
das
mov
xor
sahf
rorl
ds
inc
popa
or
xlat
mov
jl
in
ljmp
je
sbb
pop
stos
out
jge
adc
mov
and
adc
into
sub
test
add
mov
ds
shll
jmp
push
jnp
jo
lret
jbe
lret
jecxz
insl
jno
mov
push
imul
push
lea
sub
add
sti
dec
pop
or
mov
jbe
repnz
adc
inc
out
push
mov
shr
scas
xor
repz
add
sub
popf
leave
mov
xchg
mov
push
lock
insl
test
lea
push
ret
dec
mov
adc
push
sub
test
cs
pop
xor
ja
add
loope
inc
adc
mov
scas
xchg
in
mov
pop
add
push
ficoml
popf
dec
cmp
cmc
dec
scas
imul
fs
bound
gs
or
mov
inc
mov
and
mov
inc
lahf
mov
and
outsb
push
pop
js
dec
out
dec
sbb
push
jno
and
clc
and
leave
bound
mov
cld
imul
sbb
ljmp
sbb
imul
roll
inc
xor
sbb
adc
push
roll
sbbl
push
xchg
in
xor
arpl
std
mov
or
add
fs
dec
xchg
pop
pusha
sbb
mov
inc
cs
and
sahf
jbe
shl
pop
xchg
sbb
mov
cmc
dec
cltd
dec
jae
pop
movsl
imul
int
push
mov
js
sahf
push
imul
popf
jo
mov
add
sbb
sbb
jg
mov
cmpsl
pop
pop
or
flds
sqrtps
jne
insb
out
fdivrl
pop
movsl
in
lea
les
cwtl
xchg
fisttps
or
movsl
sbb
lods
xchg
pusha
aas
xchg
mov
pop
mov
xor
lea
and
fs
cmc
scas
fimuls
push
sarl
push
sub
cmc
into
cmp
ret
clc
fs
shl
subps
cmp
int3
inc
rcll
int
insb
stos
dec
das
outsl
nop
clc
jmp
cs
dec
lret
adc
ret
cmc
lret
fidivl
scas
xchg
unpckhps
ficomps
sbb
sub
push
jne
push
xchg
push
add
or
cli
mov
mov
mov
inc
ss
add
jl
adc
std
inc
fdivrl
adc
and
mov
scas
mov
or
loop
push
pushf
ror
sbb
jno
in
ret
mov
inc
out
cwtl
push
outsb
xchg
lds
adc
int3
jno
lds
pop
adc
push
mov
cli
sti
imul
sbb
rcrl
stos
push
mov
mov
push
in
and
imul
cmp
insw
jle
mov
pop
cmpb
ss
pop
mov
lods
mov
std
fsts
inc
adc
or
pop
das
dec
cld
push
in
ja
xlat
inc
mov
sub
les
sub
jg
stos
ss
out
push
pop
cltd
shlb
mov
jb
decl
xchg
or
arpl
or
setg
inc
leave
or
in
addr16
orb
pop
mov
mov
hlt
sbb
pop
insl
imul
fnstsw
popf
sti
out
sub
jbe
and
mov
adc
in
clc
lcall
clc
lcall
dec
fwait
iret
sbb
xor
jg
inc
mov
xchg
repz
mov
add
jmp
data16
repz
jge
push
xchg
lock
xor
repnz
mov
and
cmpb
mov
fildl
cmp
fldl
jp
aaa
mov
cmpsl
les
inc
mov
scas
lahf
mov
lds
mov
push
xlat
and
or
inc
dec
imul
sbb
xchg
and
push
ret
ja
xchg
clc
sub
xor
xor
push
or
iret
push
xlat
sbb
jb
nop
div
jmp
push
mov
pop
cmp
add
aad
sarb
stc
popf
pop
arpl
repz
decb
decb
lock
mov
mov
sbb
outsb
hlt
sub
call
jl
lods
xchg
jg
pop
rcll
into
inc
fs
pop
icebp
adc
mov
dec
sbb
in
jge
loope
adc
in
mov
fnstcw
sbb
or
iret
mov
roll
leave
addb
jnp
fcmovu
movsl
sub
popf
mov
sbb
mov
xor
addr16
jl
mov
lcall
jle
xlat
les
repnz
in
cmp
adc
notl
pop
int3
push
push
or
std
xchg
imul
xor
punpckldq
arpl
push
insb
mov
fdivl
xchg
ficoms
pop
jnp
pusha
xchg
add
jg
daa
cld
adc
lea
jmp
dec
icebp
sahf
stos
cmp
jge
mov
mov
in
inc
jmp
lcall
pop
in
xor
int
inc
ss
loope
inc
mov
pusha
or
xchg
mov
mov
xor
lds
pop
xlat
mov
dec
pop
es
and
enter
mov
ja
mov
mov
daa
fstps
std
mov
jae
add
push
pop
xchg
push
scas
insl
clc
dec
in
mov
inc
cmc
and
pop
mov
dec
fsubr
mov
sbb
xor
push
popa
daa
inc
jl
add
inc
xor
mov
ds
lret
mov
mov
mov
cli
cmpsl
fistpl
mov
dec
dec
add
ret
dec
add
push
jbe
or
pop
or
cmp
jp
sahf
mov
inc
or
and
gs
or
stc
aad
loopne
pop
sbb
outsb
push
out
cmp
xorl
pusha
nop
mov
stos
shr
mov
subl
xchg
xchg
adc
mov
fidivs
aad
mov
xchg
pop
push
push
sub
and
and
jb
stos
stos
xchg
pusha
mov
lods
jmp
orl
xchg
xchg
cli
mov
push
sbb
mov
rorl
pop
shlb
cmp
rorl
loop
and
stos
mov
cmp
cwtl
rcrb
jo
xlat
jb
jge
insl
aad
aam
out
inc
sub
add
jl
mov
cmp
cmp
xor
sub
adc
jo
lcall
xor
enter
lret
and
repnz
xchg
adc
outsl
fmuls
rcrl
and
jno
lds
jl
sti
cmc
loopne
jo
xchg
xchg
jnp
ljmp
ror
pusha
or
outsl
mov
fisubrs
fiaddl
loope
mov
sbb
gs
mov
mov
jae
cmp
xchg
inc
lret
inc
cmpsb
push
adc
mov
rcrl
and
push
pop
push
in
mov
mov
out
jg
mov
out
gs
xor
ljmp
push
sbb
dec
sbb
add
push
xchg
mov
mov
mov
test
popf
add
sar
pop
pop
orl
mov
add
cltd
stos
das
enter
mov
sub
pop
sub
cmp
call
cltd
mov
test
push
pop
inc
cmp
fsubl
icebp
add
push
sub
icebp
push
cmpsb
sbb
enter
sbb
jno
push
adc
add
push
xchg
jno
movsb
mov
rorl
push
pop
ret
stc
adc
pop
push
jle
sub
jo
pop
lret
pop
cltd
xor
daa
jecxz
out
sbb
and
jbe
mov
push
cmpsb
ja
inc
push
add
adc
lock
mov
mov
pop
insb
insl
sbb
leave
lods
and
cmpsl
mov
mov
sub
int3
scas
fisubs
rcll
aas
lahf
das
push
test
adc
sbb
cmpsl
inc
mov
inc
mov
sbb
aam
fnstsw
mov
cmpsl
scas
sub
mov
test
dec
daa
or
lock
nop
fdiv
jp
mov
cwtl
in
mov
and
inc
imul
out
pushf
lret
jae
stc
and
xlat
daa
das
jnp
sti
aas
out
cwtl
jae
xorb
ja
or
gs
cmp
cmp
shlb
push
out
imul
sbb
mov
out
jbe
and
mov
adc
mov
sarb
xor
adc
aas
mov
je
jecxz
dec
addr16
xchg
incb
mov
push
mov
ret
sbb
sub
dec
js
mov
push
aad
ds
repz
das
mov
mov
ss
aaa
stc
and
push
or
cli
dec
cmp
adc
pop
dec
mov
into
fisubrl
pushf
jno
push
xlat
pushf
push
mov
call
movsl
std
pop
lds
pop
and
pop
and
hlt
mov
xorb
pop
add
lods
in
test
or
and
xchg
push
lret
fwait
inc
xor
inc
sbb
sbb
mov
jecxz
inc
mov
adc
sti
dec
mov
inc
mov
jmp
mov
lcall
xchg
in
outsl
fiadds
sbb
inc
and
cmp
inc
fldl
pop
fidivrl
cltd
sub
sbb
jmp
or
or
hlt
fbld
ficoml
mov
cmpsb
xor
push
dec
push
cltd
bound
ret
xor
ss
xchg
testb
fsubr
shrb
pop
movsl
sub
dec
sbb
push
movsb
cwtl
adc
cmpsb
cltd
sub
pop
test
push
cltd
sub
push
movsl
sub
dec
and
dec
jnp
mov
repnz
insb
cmp
xchg
sbb
push
cltd
sub
arpl
sub
dec
ds
jecxz
test
es
xor
xor
sbb
dec
lret
adc
sub
cltd
sub
or
and
dec
jnp
xor
and
dec
sbb
int3
insb
cwtl
and
iret
cltd
inc
add
or
xchg
scas
fiadds
out
fdivrs
and
dec
push
adc
jl
inc
mov
dec
xor
dec
cmc
adc
push
movsb
push
xor
jb
jmp
cmp
pop
rorb
add
es
dec
scas
lret
sahf
es
and
ja
xchg
fadds
xchg
xchg
das
sbb
push
sbb
inc
lcall
push
xchg
out
mov
sub
into
je
push
imul
sbb
mov
aaa
pop
test
into
je
sub
fisttpll
pop
xor
adc
cmp
adc
aaa
jno
sub
xor
sbb
mov
dec
add
mov
out
rcll
repz
sbb
inc
xor
out
or
pop
cld
fwait
sub
and
add
negl
jmp
pop
adc
aad
or
xorb
outsl
sarb
sbb
dec
frstor
cmpsl
ljmp
repnz
arpl
outsl
pop
int
mov
imul
data16
sbb
pushf
mov
call
mov
ss
dec
mov
je
fisubl
and
push
scas
inc
push
cmp
push
lret
or
inc
push
cmp
je
dec
cs
fiaddl
mov
jns
jmp
outsl
mov
ds
dec
test
gs
mov
adc
xchg
int3
std
frstor
cmc
pop
dec
mov
cmp
mov
xor
sub
les
addr16
int
dec
inc
ret
sub
clc
xchg
das
data16
adc
xchg
push
or
iret
jmp
fbstp
rclb
mov
xor
pop
or
sbb
imul
sub
negb
pop
out
cltd
cmp
imul
movsb
stos
sbb
dec
lea
ss
pop
stc
push
hlt
pop
cwtl
sbb
iret
pop
jg
testb
push
sbb
subb
mov
scas
test
out
cmp
scas
rcll
inc
add
lahf
sub
lret
mov
data16
test
stc
sbb
insl
add
jbe
ficompl
cwtl
enter
pop
test
add
test
sbb
decl
inc
xor
mov
jge
mov
push
sub
dec
mov
std
dec
or
test
xchg
inc
ret
dec
outsl
push
cwtl
xor
pop
mov
daa
mov
mov
cs
andl
push
add
jb
pop
adc
dec
dec
mov
sahf
lea
jg
mov
mov
push
cmp
sbb
xor
mov
pusha
aas
aaa
rorl
dec
sbb
out
mov
and
mov
mov
outsb
fidivs
and
jecxz
mov
push
push
loopne
idiv
push
adc
jnp
mov
loope
adc
inc
mov
mov
into
xchg
inc
push
out
cmpsb
jle
sub
cli
iret
je
sbb
mov
test
pop
stc
mov
lahf
lret
cmpsl
mov
ret
push
movb
lret
add
mov
mov
popa
inc
add
jno
and
es
mov
arpl
out
int3
sbb
dec
sub
into
imul
ret
sub
leave
fcmovnb
push
dec
pop
xor
adc
gs
jle
stos
cmp
sbb
dec
and
add
icebp
xor
mov
xchg
in
hlt
mov
push
imul
or
cmpl
enter
je
inc
sbb
mov
mov
arpl
call
shrl
cmp
pop
ljmp
iret
and
sbb
int
in
cwtl
test
gs
dec
stos
aad
lds
orl
push
push
adc
rorb
push
aam
pop
sub
xchg
outsb
cmp
dec
push
into
fisttps
sbb
cmpsl
and
arpl
inc
es
xchg
push
shl
clc
or
push
adc
pop
mov
in
jb
and
pop
fwait
outsl
push
repz
sti
sub
dec
ds
cmp
into
xor
jge
fs
testb
mov
dec
adc
push
xor
ja
sub
in
or
mov
clc
push
aam
or
push
imul
pop
aad
push
clc
mov
mov
in
js
dec
sbb
xchg
adc
and
ljmp
js
inc
cmp
lcall
or
movsl
addr16
lods
js
lods
int3
sbb
jp
aaa
mov
fiaddl
adc
and
aas
movsb
aas
ficoml
rorb
jecxz
ja
mov
sbb
pusha
cwtl
mov
lods
add
and
fldenv
pushf
mov
addr16
pop
push
mov
xor
and
fsubl
out
je
lahf
shrb
and
jno
cmpsl
popa
or
imul
test
xor
inc
xor
fistps
lcall
aaa
in
mov
pushf
cli
gs
mov
divb
cmp
jo
xchg
mov
dec
into
sbb
adc
push
and
insb
xor
pop
insl
sahf
mov
xchg
mov
insl
cltd
jb
sub
mov
aam
iret
jbe
idivb
cmp
das
imul
mov
mov
dec
xchg
daa
xchg
adc
sti
pop
cld
es
call
fmull
arpl
xchg
fdivs
jmp
push
xchg
mov
push
in
push
icebp
fstpt
sti
cmp
xchg
push
sub
out
clc
adc
subl
jno
or
xchg
and
js
imul
inc
inc
inc
cltd
les
popf
cmp
inc
jb
fst
ja
insb
mov
jge
pop
inc
mov
out
cs
sbb
cmpsb
adc
cmpsb
outsl
ds
cmpsb
bound
fnstsw
push
ret
add
adc
mov
pushf
movsb
add
push
cmp
mov
les
cmpsb
pop
pusha
jp
adc
test
dec
mov
mov
or
jo
dec
adc
adc
xchg
sbb
inc
push
stos
cmp
jb
pusha
push
mov
jb
outsl
pop
mov
jo
cwtl
dec
pop
stc
pop
add
xchg
push
addr16
push
stc
test
outsl
cmp
or
sahf
imul
insb
sti
cmp
je
cld
arpl
out
stc
roll
inc
pop
or
xchg
movsb
stc
andl
movsb
sub
cmc
adc
pop
push
imul
mov
scas
xor
adc
movsb
and
movsb
imul
setne
lret
fimuls
or
imul
arpl
push
sbb
or
and
test
and
movsbl
mov
and
loop
and
cmp
xor
cltd
inc
mov
es
mov
mov
inc
movsl
xchg
enter
push
scas
jp
lret
ficoml
rclb
sub
add
or
icebp
push
jmp
enter
insl
dec
ds
xchg
divl
push
aaa
sbb
imul
aam
mov
das
cmp
js
les
or
lods
lret
setge
cmp
enter
mov
sub
pop
int
faddl
out
lods
jg
aaa
dec
dec
sbb
cwtl
add
and
test
mov
out
adcb
mov
add
jb
insl
sub
sub
mov
test
jne
leave
dec
adc
mov
shlb
enter
std
jl
mov
fldcw
fisubrs
cmpsb
xchg
push
ret
xor
aaa
rolb
add
xchg
sti
fiaddl
pop
jle
call
inc
sub
stos
loopne
repz
sar
mov
cs
jp
cmc
xlat
andb
out
imul
or
mov
mov
frstor
jle
data16
hlt
popf
scas
push
or
fdivs
push
cmp
sub
std
dec
jns
cmp
mov
add
aas
fidivl
cmp
sbb
pop
or
cmp
cmp
pushf
jecxz,pt
fwait
mov
ret
arpl
lret
push
mov
inc
xor
cmpsb
lfs
in
jg
cmp
jl
fcomps
outsb
push
pop
hlt
inc
jo
psubusb
pop
les
insl
in
add
pop
cld
push
scas
or
inc
jo
addl
xor
adc
icebp
mov
jo
pop
dec
shll
fnstcw
test
lret
ret
xor
in
pop
cmc
xor
out
cmpsl
mov
pop
jp
dec
enter
leave
lds
scas
inc
into
sbb
cwtl
xor
mov
pop
les
orl
in
inc
aam
jle
rorb
mov
fwait
xchg
mov
jmp
out
inc
in
push
ret
leave
sbb
popa
adc
pop
testb
or
pusha
ficompl
fldt
push
cmp
dec
xor
test
movsl
mov
int3
lret
and
imul
xchg
aaa
cmpsl
enter
jmp
mul
xlat
dec
lock
pop
das
mov
mov
ret
fistpl
lahf
hlt
bound
add
pushl
pop
icebp
outsb
sub
lret
rolb
movsl
xor
sub
frstor
into
mov
icebp
into
mov
mov
loope
lods
inc
push
jge
or
push
sbb
add
xchg
mov
cmp
aad
cmp
xor
mov
nop
mov
add
pop
ret
xchg
stos
mov
jo
hlt
jne
adc
stc
repz
xor
pop
jge
cmp
outsb
loopne
xchg
in
ja
mov
jmp
insl
xor
dec
fisttpl
adc
dec
cli
push
xor
pop
imul
cs
inc
adc
pop
dec
loop
in
sbb
mulb
or
adc
repnz
mov
xchg
pop
pop
sbb
test
addr16
pop
or
decl
pusha
imul
pop
call
aas
int3
inc
sub
inc
stc
jnp
cmpsb
or
sbb
jns
add
ds
lcall
mov
xchg
xor
popl
mov
popf
roll
jns
xor
daa
roll
cltd
stos
outsb
outsl
or
insb
inc
fisubl
inc
push
push
jge
jno
lret
cli
pop
out
mov
and
loop
test
clc
mov
addb
jp
push
push
insl
rcll
jg
ret
or
mov
add
in
xchg
mov
ror
or
aas
sahf
sub
pop
std
ret
and
out
cmpsl
sub
xchg
adc
push
inc
fcom
push
push
cwtl
mov
negb
dec
xlat
dec
jno
es
sub
xor
arpl
xchg
inc
out
mov
iret
daa
fnstenv
fiaddl
ja
das
mov
aaa
lods
dec
mov
sub
shll
cltd
leave
push
inc
or
mov
and
filds
stos
jge
imul
xchg
loopne
addr16
add
mov
push
push
or
stc
arpl
mov
mov
fwait
shr
out
xchg
adcl
out
or
frstor
in
lock
add
insb
rclb
and
ret
fisubrs
cmpsl
lahf
jecxz
xchg
enter
mov
hlt
jne
repz
sub
mov
aad
mov
sub
sbb
mov
stos
lret
add
dec
or
or
mov
ljmp
sbb
fisttpl
xchg
loopne
fwait
cli
mov
jl
nop
in
vcvtdq2ps
xor
or
sub
xchg
in
jno
cmp
jge
sub
fildll
push
push
mov
jle
xchg
and
aas
out
loope
psubusb
mov
lret
cmpsl
jl
in
mov
les
dec
aaa
mov
imul
popa
dec
out
adc
pushf
add
out
je
jp
pop
jne
and
jmp
cli
adc
mov
insb
push
aam
sbb
test
les
add
test
add
jg
rorl
in
dec
pmaxsw
inc
jl
jl
in
jbe
jl
mov
jl
fnstcw
jl
add
or
add
sbb
xchg
push
mov
loopne
inc
push
push
cs
punpckhdq
stc
add
fidivl
std
dec
adc
pop
std
push
mov
cltd
ljmp
outsl
mov
lret
lods
fmul
shll
fsubrs
pop
jmp
dec
cmp
loope
leave
out
movsl
std
pop
xor
shll
mov
cmp
pop
leave
test
mov
xchg
cmpsl
mov
sahf
insl
scas
dec
dec
mov
fwait
xor
imul
xchg
jecxz
shlb
jle
mov
pop
and
in
mov
call
add
push
sti
xor
lock
out
fldcw
pop
sbbl
shlb
iret
pop
pop
ss
dec
xor
sbb
mov
das
jle
push
mov
mov
call
test
enter
loopne
mov
je
scas
rclb
add
xchg
movl
pop
pop
test
scas
inc
cs
mov
aas
xchg
sbb
outsl
mov
sti
arpl
imull
in
mov
adc
push
decl
outsl
sbb
jmp
and
cmpsb
mov
mov
pop
outsb
scas
aaa
push
cmp
mov
cmp
xor
or
and
lods
mov
pushf
test
mov
fs
push
pusha
push
nop
fistpl
movsb
nop
inc
mov
imul
sbb
sub
roll
sbb
jle,pt
scas
jnp
cltd
loopne
inc
pop
xchg
shr
imul
add
pop
cmp
out
push
push
imul
test
dec
dec
dec
dec
xchg
ljmp
mov
jle
outsb
cmp
push
into
sub
xchg
cltd
push
ret
mov
mov
and
inc
aam
es
fisttpl
and
mov
dec
mov
jmp
pop
and
stos
in
sbb
pop
inc
adc
push
into
test
lods
sub
push
in
xor
jle
jno
xrelease
adc
sub
dec
addb
fistl
xchg
insb
imul
push
xchg
in
dec
lret
lea
xor
fldenv
mov
inc
push
daa
pop
jb
pop
cld
fucomip
mov
push
cli
xchg
out
lods
jne
adc
movsb
inc
in
stos
int
cmp
or
cwtl
fldt
jl
lds
cmp
adc
lds
sub
popf
xchg
call
imul
mov
ljmp
push
icebp
dec
dec
dec
adc
cli
mov
push
xchg
ret
shlb
insl
jecxz
daa
xor
cmp
mov
jnp
mov
mov
mov
push
cld
mov
or
es
loopne
jb
dec
adc
xchg
mov
xor
fisttpl
aam
sub
das
push
loop
out
addr16
aas
out
or
outsl
fisubrs
inc
fcomi
addr16
hlt
outsb
pop
fabs
fwait
sbb
dec
stos
movl
sub
pop
jno
out
cli
fdiv
addr16
ret
mov
dec
mov
sub
movsb
in
mov
int3
pushf
push
mov
mov
push
pop
cmp
adc
or
out
aad
xorb
nop
xor
loopne
arpl
pop
lret
shr
cld
dec
pop
shlb
push
cli
aam
insb
mov
jmp
pop
pusha
mov
loope
xor
push
lret
mov
add
push
rcr
sbb
jo
push
cmp
push
xchg
into
es
or
mov
cwtl
sub
das
loope
sub
bound
sub
xor
test
pop
push
in
mov
add
cmp
aaa
adc
cwtl
inc
push
scas
jl
popf
mov
mov
cltd
decl
stos
rcr
dec
cli
mov
add
mov
cmpb
inc
int
and
push
jg
enter
jns
fstps
add
sahf
mov
or
inc
push
cmp
je
sub
test
mov
dec
inc
mov
mov
add
shld
inc
movsl
dec
xchg
xor
cmc
bound
adc
repz
test
cmpsl
pop
and
xchg
subb
stc
sub
mov
test
adc
ret
pop
test
push
into
cmp
sbb
cld
inc
adc
movsb
add
xorl
fsts
aam
in
loopne
fsubrs
jl
in
outsl
inc
xorl
lcall
cs
enter
jnp
leave
fildll
inc
cmp
mov
andb
push
or
mov
popa
insl
inc
outsb
sub
stos
xchg
xchg
das
fidivrs
cltd
cmp
pop
es
adc
test
shll
mov
sbbl
fdivr
dec
out
fiadds
imul
push
add
ret
jl
cmp
push
xor
insb
xchg
jmp
sbb
jae
aaa
mov
fisubrs
and
movsl
inc
mov
mulb
in
call
xor
cmp
add
cmp
gs
sbb
push
stos
sbb
push
jmp
aad
roll
rcll
pop
sbb
aad
pushf
lods
inc
or
fwait
mov
nop
xchg
outsl
pop
push
adc
xor
dec
loop
mov
jecxz
jle
dec
cmp
dec
mov
iret
loopne
sub
aaa
rclb
add
xor
pushl
sub
stos
xchg
or
jo
mov
xchg
xchg
push
and
sahf
rcrl
push
and
sub
leave
subb
clc
push
jb
cwtl
or
jbe
jp
inc
push
or
add
int3
fimuls
push
inc
mov
int3
ficomps
mov
hlt
sbb
or
xor
push
pop
ret
cmpl
xchg
mov
es
jns
or
icebp
cmp
movsl
cmc
mov
cmpsl
int3
pop
and
stos
stos
into
test
adc
adc
push
sub
add
pop
sub
or
out
push
sub
push
mov
sbb
mov
shll
repnz
mov
call
jg
fiadds
sub
outsl
adc
dec
shrl
test
sub
in
std
mov
dec
or
sbb
std
mov
add
lods
cmp
push
mov
jecxz
adc
mov
adcl
cmp
add
inc
pop
insb
xchg
or
imul
lods
xor
inc
sub
jbe,pt
loop
inc
pusha
stos
insb
inc
push
push
repnz
lret
add
sbb
insb
xchg
xor
mov
cmovg
ficoms
cmp
pop
cmpb
fstpt
xor
mov
cmp
sbb
ret
and
or
leave
daa
movsb
outsb
rcll
dec
or
lods
loope
addl
cmp
ja
out
cli
loopne
int
xchg
cli
lahf
push
in
aas
mov
fucomip
popa
jecxz
sub
cmp
mov
jb
stos
jg
in
clc
test
add
out
scas
pop
push
out
imul
aad
insl
imul
cli
cmp
xchg
shlb
ret
sbb
and
mov
sub
adc
inc
scas
cmp
push
sub
ss
repnz
sbb
sub
sbb
or
sub
test
daa
jae
or
fcoml
rcrb
jge
fmull
out
xor
inc
xor
in
popf
test
sub
push
jecxz
in
push
in
popf
call
daa
jae
mov
jne
mov
dec
inc
shll
cmc
iret
mov
jbe
dec
cs
in
push
dec
fldenv
dec
mov
mov
popa
xor
test
or
and
js
lods
lea
out
mov
mov
pop
pop
inc
rcr
mov
cmpb
mov
inc
jb
lahf
cmp
cmp
or
pop
cmpsl
mov
and
rorl
rcrl
jmp
scas
pop
lcall
xchg
or
insl
push
add
pop
push
push
adc
xor
rcrl
fwait
icebp
or
int
xchg
push
daa
imul
mov
aas
pop
daa
sbb
dec
jno
sub
push
pop
xor
pop
outsl
aam
lcall
ja
push
out
mov
movl
test
sti
and
scas
xor
aad
enter
adc
pop
add
sub
jg
push
pop
js
in
jo
outsb
jne
sbb
pop
outsl
clc
fwait
mov
movsl
dec
jmp
mov
cmc
aad
fnstsw
cmp
iret
mov
cltd
inc
lret
inc
lret
xchg
mov
mov
dec
sub
outsb
lods
iret
decl
inc
mov
mov
in
loope
xor
xchg
test
mov
adc
in
lea
arpl
nop
or
adc
inc
fldenv
xchg
inc
int
cmp
lahf
fcom
mov
sub
inc
or
stc
aam
cmp
aas
jmp
fucom
das
jmp
cmpsl
iret
mov
insl
icebp
sbb
pop
jno
and
xor
mov
nop
mov
jp
mov
mov
test
and
fstps
or
lods
cmp
mov
outsb
dec
not
mov
cmp
pop
fldcw
add
mov
adc
call
pop
cmp
push
mov
cli
push
test
mov
dec
enter
ss
jge
jnp
xchg
jnp
fisubl
push
js
and
mov
xchg
lret
inc
arpl
push
add
xchg
rol
aaa
negb
add
pop
sahf
rclb
sbb
repz
adc
add
test
jno
pusha
notb
loope
pushf
sub
adc
popa
mov
out
cmpsb
pop
or
sahf
pushf
rcrl
mov
std
jnp
pop
mov
push
cltd
leave
add
inc
test
sub
and
sbbb
sub
sahf
dec
lret
into
mov
inc
adc
leave
and
inc
and
xchg
inc
fstps
push
shl
frstor
in
dec
ds
push
std
aam
or
mov
mov
add
add
scas
fldcw
dec
xchg
call
and
mov
adc
xchg
scas
jecxz
jle
pop
dec
fwait
repz
add
mov
inc
inc
jecxz
stos
outsl
xchg
outsb
out
push
ret
push
rcr
mov
dec
cmp
xchg
aas
jae
inc
rolb
enter
aam
std
fstl
sub
fwait
stc
es
stos
cmp
pop
xchg
mov
notb
fwait
inc
add
mov
pop
into
mov
js
jecxz
jge
dec
sbb
sub
cmpsb
call
lea
and
sbb
inc
mov
cmpsl
bnd
pushf
leave
js
jecxz
repnz
loope
push
push
or
cld
adc
loopne
stos
insl
jecxz
dec
fimuls
sbb
push
test
shll
sbb
lcall
xchg
cmpsb
stos
xchg
or
pop
fisubs
jle
shll
ret
lods
sub
stos
push
inc
mov
insb
or
cmp
lods
and
and
dec
pop
push
daa
xchg
xor
pop
fisubrs
dec
xor
dec
ljmp
jo
jno
cmpsl
or
je
jne
scas
pop
mov
dec
cmpl
cmc
and
add
and
addr16
mov
jo
enter
shlb
and
mov
mov
jae
mov
jne
add
pop
push
ret
or
aam
rcl
mov
lods
inc
lods
cld
jmp
sub
jns
pop
jecxz
fbld
insl
mov
cmp
jmp
or
incb
test
sub
sti
mov
outsb
bound
mov
jo
mov
mov
cs
call
add
mov
or
jbe
sub
std
ljmp
out
test
data16
addl
pop
xchg
movsb
addr16
push
push
pop
mov
mov
in
add
sahf
adc
lods
add
lret
call
cmpsb
jns
push
test
fiaddl
ret
cli
pop
add
mov
inc
pop
sub
subl
int
out
pop
ja
lods
enter
aas
imul
xlat
xchg
jecxz
pop
shl
sbb
loope
orl
es
stc
add
leave
nop
scas
cli
add
scas
ja
add
xchg
add
xchg
and
pop
call
lods
out
mov
mov
adc
jne
sub
inc
repnz
hlt
add
orb
lret
inc
dec
mov
cwtl
pusha
push
sub
add
jo
into
mov
push
sbb
loop
sub
nop
out
frstor
or
das
rol
xchg
xor
dec
pop
shll
jne
add
add
sti
push
mov
pop
jno
imul
jne
popf
sub
mov
nop
es
fisubrl
jle
sbb
jecxz
adcb
leave
jo
es
mov
out
mov
or
inc
in
lods
insb
xchg
fsubrs
mov
pop
rcr
pushf
mov
xchg
lods
movsl
inc
jecxz
scas
inc
jno
cmp
mov
dec
cmc
fistps
mov
push
aaa
mov
test
popf
mov
inc
xor
hlt
and
xor
cmc
xchg
jge
repnz
xchg
jle
sub
cltd
sub
std
daa
add
adc
mov
adc
jge
mov
jb
jbe
fldcw
hlt
mov
xor
mov
jbe
ss
or
dec
cld
jecxz
jp
das
push
icebp
std
push
subb
mov
mov
cltd
pop
aam
fistpll
jno
inc
orb
loopne
xlat
jno
ja
jo
adc
or
aaa
jl
pop
dec
xchg
aam
cmp
mov
push
ficomps
inc
fnstcw
lahf
data16
lret
aad
xchg
pop
hlt
scas
lods
jge
mov
add
imul
sbb
test
mov
bound
cmp
pop
sbb
add
dec
cli
fdivl
in
adcb
adc
jge
push
mov
mov
inc
mov
cld
inc
ss
rclb
adc
pop
int3
sti
mov
jno
inc
in
aad
xchg
and
sbb
test
jg
sarl
or
sti
cwtl
xchg
and
lahf
cmc
sub
jb
xorl
cmp
adc
stos
stc
loope
bound
mov
pop
dec
or
jg
adc
aad
fwait
add
push
sbb
jbe
and
mov
fsub
insl
mov
fadds
xchg
test
lahf
pop
pop
or
stos
fisubrs
push
sub
pushf
pop
ja
lods
xor
lods
and
jg
sub
add
lret
leave
test
gs
mov
mov
sub
xchg
mov
adc
idivb
pop
scas
in
pushf
test
addr16
push
lea
xchg
push
inc
pop
lcall
jmp
cmp
sub
js
setne
adc
push
out
pop
sbb
push
lds
cmp
mov
mov
jecxz
xchg
mov
in
mov
pop
insl
xchg
push
cmp
push
cltd
jns
cs
mov
pop
pop
repnz
and
cmc
push
mov
nop
rolb
stos
adc
int
dec
clc
mov
or
call
rcr
xlat
inc
mov
jb
jg
cs
roll
cli
aad
and
dec
pop
pop
xor
xor
pop
iret
shlb
fsts
xchg
jmp
pop
cltd
jmp
dec
xchg
pop
movsl
enter
movsl
cmpsl
es
stos
lods
jne
and
mov
scas
shlb
movsl
inc
sbb
xchg
push
dec
outsl
sbb
mov
sbb
into
sub
sub
addr16
sbb
loopne
pop
lret
mov
inc
imul
mov
cmp
sti
bsf
lock
pop
dec
sub
mov
rorl
fnstenv
xchg
ds
popa
and
pop
sarl
fimull
ss
jb
mov
jp
lock
jge
pop
lods
pop
push
shll
xor
lds
ja
sbb
adc
aad
inc
fs
mov
push
xor
inc
inc
sahf
testb
inc
adc
or
fiadds
xchg
ljmp
jnp
xor
pusha
xchg
push
lret
jb
or
adc
icebp
aam
jb
nop
in
vcvtps2dq
rolb
in
mov
popf
lret
popf
adc
pop
test
and
mov
or
aas
lock
stc
int
lcall
cmpl
lcall
stc
mov
cli
adc
addr16
xchg
mov
xlat
push
loop
lret
aas
int
add
inc
loope
or
mov
data16
mov
push
adc
out
lahf
lret
push
out
clc
idivl
stc
pop
mov
leave
es
sbb
push
sub
add
je
fidivs
xor
fildl
sbb
test
mov
mov
jecxz
ret
out
xor
dec
sbb
pushf
sub
gs
xchg
cld
pop
call
mov
push
icebp
mov
sub
inc
or
rclb
data16
dec
lock
iret
pusha
fwait
or
push
fdivr
adc
lods
mov
dec
xchg
xor
popa
sbb
mov
mov
mov
mov
jb
rcrb
sub
loopne
mov
sbb
jecxz
aas
or
jne
push
inc
je
fidivrl
mov
in
mov
pop
loopne
icebp
mov
xor
xor
jge
add
sub
js
push
movsb
pop
outsl
dec
dec
sub
mov
add
mov
stos
addr16
sbb
pop
adc
and
adc
scas
call
clc
mov
adc
xchg
aam
cmp
cmp
adc
or
leave
ret
xor
mov
pop
pushf
fnstenv
loope
ret
andb
mov
js
jl
cmp
int3
cmp
xchg
mov
aad
add
into
cmpsb
fwait
xor
enter
daa
cmp
sub
and
sbb
jl
gs
mov
andb
rcl
adc
pop
add
stos
push
arpl
fcmovnu
cmp
add
cli
mov
jmp
mov
xchg
enter
movsb
orb
mov
mov
jecxz
negb
lcall
or
inc
movsb
xchg
or
fstl
sub
stos
xor
into
add
lret
cmp
dec
int3
mov
loopne
int
mov
mov
enter
sub
out
sbb
rolb
and
out
nop
inc
in
leave
mov
xchg
lret
mov
mov
pop
repnz
jl
inc
lock
push
push
sbb
nop
lcall
sbb
repz
inc
data16
lahf
es
lcall
pop
in
xor
mov
aaa
push
jb
push
cmp
gs
mov
imull
sub
mov
xchg
in
insl
rcr
in
cmp
sbb
pop
mov
and
lods
jb
xchg
enter
jp
jecxz
add
jae
jno
out
ss
adc
rclb
and
adc
pop
pop
aas
xor
push
mov
scas
pusha
push
mov
cs
scas
clc
xchg
pop
xor
push
lea
inc
outsl
pop
popl
test
sbb
mov
test
xchg
dec
adc
xor
fs
test
inc
pop
movsb
cmpsl
in
sub
in
aam
ljmp
aam
pop
inc
repz
fisubs
jle
addr16
or
rclb
aam
adc
xchg
shll
mov
sub
in
and
dec
adc
pop
je
dec
pop
fwait
cmp
inc
xchg
mov
fwait
aad
mov
jns
test
imul
dec
in
stos
leave
scas
mov
pop
incb
fcomi
xchg
xchg
xchg
cs
mov
inc
push
jne
repz
ret
push
jo
push
push
out
mov
sub
dec
mov
shl
js
push
mov
in
jnp
sub
repnz
scas
push
dec
popa
cmp
xchg
jmp
jp
push
cmpsl
leave
dec
lcall
jl
adc
in
lods
add
es
and
dec
cmpsb
mov
movsl
cmpsb
stos
test
lods
in
jb
pop
cmc
call
scas
sub
jecxz
out
test
sbb
sbb
inc
push
jns
cmp
push
or
add
add
sub
sbb
inc
cwtl
mov
sub
arpl
bound
fs
mov
add
hlt
fadds
sub
dec
lods
inc
lock
and
insl
cld
dec
fsubs
jae
mov
dec
mov
ds
jp
fld1
stc
sbbl
mov
lret
mov
or
fcom
push
out
clc
mov
ret
in
jo
sbb
inc
add
inc
pushf
call
fisubl
adc
sarb
push
xor
sub
add
xchg
or
xchg
mov
xchg
cmp
push
mov
push
lret
in
lea
push
jg
jg
insl
sub
or
add
sbb
push
pop
inc
add
sahf
dec
lock
xchg
cmp
ficoml
dec
push
jbe
sbb
or
sti
fldl
sbb
jmp
xchg
xor
lret
sub
fcmovnu
call
mov
adc
out
add
pop
test
mov
jmp
cli
push
mov
das
leave
push
push
mov
ja
daa
sti
repnz
out
aad
shl
mov
mov
call
divl
xchg
ficompl
mov
add
pushf
jnp
jae
xor
dec
xor
push
mov
adc
or
das
lret
mov
out
cmp
pusha
iret
cmp
pop
cli
mov
shrb
mov
insl
int
aaa
sub
mov
xchg
sbb
mov
add
mov
mov
cmp
adc
jnp
cmp
mov
cld
push
int3
add
cmp
roll
in
pop
ja
mov
clc
das
mov
cmp
fdivp
popa
jmp
mov
jno
xor
push
jbe
ds
sub
and
xor
daa
dec
frstor
ljmp
jl
mov
fldl
aaa
icebp
dec
fldl
jmp
pushf
div
mov
loopne
inc
roll
fsubrl
loope
or
addb
insl
pop
out
sub
iret
xchg
xor
mov
test
adc
cmpps
in
popl
push
jmp
pop
je
int3
mov
fnstcw
test
enter
fnstcw
enter
xchg
arpl
outsb
push
hlt
orb
mov
jge
and
push
div
push
pop
push
dec
mov
push
cmp
xor
cltd
xchg
aad
testl
xor
mov
in
fdivs
enter
das
rcrb
aas
inc
insb
outsb
add
jle
mov
pop
les
adc
mov
mov
adc
fisubrs
stos
cltd
ljmp
mov
sbb
outsl
mov
pushf
iret
mov
pop
mov
in
push
mov
test
dec
aam
and
mov
fcomi
stc
dec
icebp
mov
mov
imul
or
ja
sub
add
mov
or
loope
das
cmpb
xchg
notl
out
and
push
cmp
iret
add
xchg
loop
inc
pop
cwtl
cs
xchg
jmp
mov
xlat
push
adc
add
push
test
inc
out
aam
mov
pop
xor
dec
and
orl
or
ret
or
cmp
jns
addr16
mov
lods
pop
mov
add
subb
mov
cmp
push
je
stos
adc
test
aam
jmp
gs
cmp
add
std
jmp
pop
add
out
mov
push
sub
mov
ror
or
push
aas
in
jmp
sub
cwtl
mov
mov
and
lods
test
pop
xchg
add
xor
add
inc
mov
lret
sbb
aam
mov
dec
setnp
xchg
dec
fsubrl
out
mov
ficoml
jae
faddl
cmc
pop
or
mov
sbb
jb
std
das
ja
in
and
mov
cmpl
cmp
adc
adcl
rcrb
push
scas
jg
push
mov
inc
leave
dec
shl
xchg
test
xchg
movl
push
nop
int3
xor
sub
xchg
adc
cs
adc
jle
adc
dec
dec
icebp
mov
dec
int3
mov
hlt
sti
xor
pusha
shll
sbb
int3
sbb
aam
daa
mov
jae
jmp
dec
xchg
cmc
sbb
dec
jae
daa
lods
mov
jns
das
popf
repz
dec
pop
inc
adc
popa
in
bound
call
add
inc
lea
push
cmp
mov
lock
imul
ss
fcmovnu
mov
aaa
rolb
ffree
cmp
daa
dec
out
in
pop
enter
fildll
pop
popf
popa
xrelease
nop
sar
inc
push
or
jbe
dec
mov
mov
add
jecxz
push
push
test
iret
mov
cs
cmp
xchg
mov
ror
pusha
rorl
mov
fstps
mov
and
mov
cmpl
into
xchg
enter
jg
push
mov
idivl
inc
sbb
cld
lret
stc
xchg
movsb
out
and
jb
add
xor
mov
lret
stc
addb
leave
add
mov
xor
pop
cmp
jae
aad
clc
mov
out
jb
pop
es
lds
jmp
xor
pushf
sub
popf
ja
subb
je
inc
sub
movsl
lea
and
adc
int
xor
in
xor
and
sarl
xor
ret
xor
dec
sub
sub
addr16
and
cmp
into
or
std
sub
test
rol
jo
lock
cmp
ja
pop
je
test
ficomps
cmp
loope
scas
xor
and
icebp
mov
arpl
or
cmp
jae
lds
shll
inc
add
sbb
mov
repnz
cltd
stos
cwtl
in
pop
ljmp
xchg
jmp
out
fisttps
movsb
out
fcoms
ds
lds
sbb
jno
push
ret
or
dec
popa
add
call
pop
add
xchg
dec
enter
jno
inc
dec
or
ds
test
jno
xchg
lods
push
in
mov
jge
ret
test
push
mov
and
cltd
inc
lods
daa
pop
mov
into
mov
aad
cs
lods
lods
jno,pn
cmp
imul
popa
add
dec
loopne
es
fs
out
ret
jno
inc
sbbb
or
sbb
in
cmp
in
std
mov
rep
stc
jo
dec
jecxz
xchg
lret
ret
sub
popa
clc
mov
xchg
out
iret
dec
mov
mov
or
shlb
dec
outsb
xchg
loope
sbb
fdivr
mulb
inc
lock
mov
adc
mov
mov
sti
das
imul
mov
ss
sbb
iret
push
push
pop
dec
mov
jl
adc
add
and
dec
pop
dec
faddl
mov
or
je
cmp
int3
mov
in
sbb
mov
jns
int3
jbe
adc
gs
pop
es
gs
rcrb
notl
out
add
ja
or
mov
inc
fiaddl
insb
inc
push
fisubs
mov
push
pushf
data16
fwait
mov
loop
pslld
cwtl
jno
orl
mov
mov
mov
rorb
pop
cmp
xlat
test
jmp
inc
mov
fmull
push
sbb
cmp
sub
das
aaa
hlt
insb
xlat
testl
sarb
jg
stos
mov
lods
xchg
adc
in
pop
push
aad
aad
pusha
rcr
mov
inc
inc
add
push
iret
fs
jle
jbe
ss
getsec
sbb
jns
ffreep
add
leave
cmp
sbb
xor
mov
mov
jns
je
rclb
jl
lods
out
add
movsl
jge
push
out
mov
sti
pushf
inc
pop
jae
sarl
add
xor
mov
aas
scas
dec
xor
aaa
fbld
push
mov
sbbb
jbe
icebp
jbe
and
movsl
jbe
cltd
mov
pop
or
inc
out
ret
rclb
mov
int3
mov
push
mov
pop
sbbl
nop
test
imul
cmp
and
movsb
mov
or
and
scas
pop
lea
mov
push
adc
pop
mov
xchg
pop
mov
sub
and
aad
lahf
lea
inc
sub
incb
push
or
lret
xor
rcrl
int3
adc
decb
cmp
and
ljmp
dec
mov
xor
jne
add
test
mov
jp
lds
cli
dec
out
sub
sbb
mov
cltd
pop
sbb
mov
fmull
rorb
jecxz
addr16
imul
jns
jbe
and
daa
das
roll
add
lea
popl
inc
mov
lods
add
popf
fnsave
pop
cld
jb
cltd
cmp
out
pop
push
push
cmp
mov
push
sub
bound
inc
int
jo
jb
inc
cltd
sub
sub
mov
adc
pop
repnz
sub
popf
fsub
mov
xchg
cli
mov
mov
in
inc
cmp
int
mov
fistpll
dec
mov
push
or
sub
jne
xchg
ret
xchg
inc
vunpcklps
and
xor
mov
ja
jb
jecxz
sbb
lret
mov
push
adc
outsl
popf
aas
cs
lods
das
push
arpl
pop
or
jge
jmp
push
aas
lods
repnz
daa
or
inc
repz
push
cmp
fnstsw
inc
iret
scas
fisttps
fistpl
pop
adc
sahf
stos
gs
jnp
cwtl
xchg
add
mov
mov
add
cmp
jge
mov
insl
xchg
jo
out
xor
pop
inc
inc
imul
mov
push
sbb
jb
inc
xor
mov
das
and
mov
mov
inc
in
aas
sarb
adc
enter
mov
mov
mov
pop
dec
hlt
lods
movsl
mov
xor
adcb
push
cwtl
sarb
cmpsb
xor
scas
and
clc
cmpl
lcall
out
ss
sub
inc
cmpsb
and
lods
mov
xchg
cmc
repz
ljmp
sub
mov
shl
jns
shll
aaa
scas
repnz
fbstp
push
data16
dec
lret
repnz
popa
lock
adc
or
sti
lcall
xchg
mov
xor
dec
jb
das
add
call
mov
inc
pop
dec
pop
cmp
and
and
std
cmp
adc
inc
or
push
push
negb
mov
or
sub
cmpsb
dec
cmp
jo
ror
push
das
gs
leave
lds
lock
filds
dec
cmpsb
push
dec
pop
xor
add
lcall
je
or
sahf
rorb
shrl
mov
or
nop
cmp
pusha
scas
ljmp
jge
stos
icebp
and
push
testl
xchg
int
pop
pushf
ret
movsl
push
mov
aam
xor
push
jne
cmp
lock
je
lret
push
dec
cltd
adc
cmpsb
or
fdivs
lock
out
ds
jmp
ret
rcr
daa
insl
pop
dec
fstps
sub
cli
fisttps
bndldx
mov
fs
push
mov
daa
dec
sbb
jbe
icebp
in
jmp
push
xchg
dec
push
imul
ret
in
xor
jmp
int3
into
in
adc
insb
fmuls
je
mov
push
cmc
mov
inc
test
fisttpll
adcl
sub
pop
dec
ficoml
pop
shlb
shr
repz
repz
cli
and
dec
jp
xchg
fcom
dec
mov
mov
xchg
jmp
sub
xlat
pusha
fcomps
mov
adc
push
andb
in
cs
or
sub
mov
sahf
subb
add
rep
shl
mov
mov
into
movsb
jl
or
mov
jp
mov
repz
es
lds
mov
adc
pop
xchg
jg
sar
movsl
mov
cmp
test
daa
mov
dec
loope
cmpsl
sub
int3
fldt
xchg
in
pop
in
aad
mov
mov
adc
scas
stos
push
sbb
ret
fwait
adc
mov
push
cld
xlat
lcall
xchg
xchg
mov
rcrb
dec
push
mov
mov
mov
inc
in
rcrb
gs
xchg
and
pop
inc
lea
fidivrl
mov
loop
jle
ret
lods
mov
jmp
pop
and
dec
mov
ljmp
adc
mov
sti
imul
je
inc
mov
mov
imul
inc
pushf
mov
fst
dec
xchg
dec
std
js
iret
mov
aas
push
test
cmpsl
movsl
xor
test
mov
mov
push
sbb
cmp
cmc
sub
adc
xlat
lock
mov
jnp
jg
das
das
jo
xchg
pop
fstps
into
xchg
rolb
insl
xor
mov
insl
jmp
push
inc
jno
call
sahf
sbb
dec
ret
inc
push
sarb
mov
setnp
std
outsb
mov
mov
fstl
push
xor
lcall
or
xchg
xchg
outsl
cmpsl
mov
mov
hlt
dec
inc
jle
mov
clc
out
add
sarl
add
adc
push
idivl
jae
push
push
loop
sub
nop
insb
loop
jl
mov
jo
ljmp
sub
out
xor
mov
sub
out
jmp
xchg
test
outsl
sbb
inc
lea
andb
shlb
into
push
mov
or
hlt
mov
into
push
mov
ds
insl
jecxz
inc
adc
roll
and
lods
cmp
shrl
or
imul
adc
jle
imulb
add
insl
sti
push
fcomps
imul
fstpt
or
adc
sub
sbb
sbb
mov
add
jo
clc
push
fdivl
int
ja
pop
sub
fcompl
inc
mov
arpl
imul
xor
lcall
ja
stos
je
pop
or
bswap
or
inc
xor
jns
insb
pop
mov
insb
out
sti
jecxz
sbb
inc
std
inc
dec
aad
push
inc
or
push
cwtl
popf
outsb
cwtl
mov
andb
sbb
imul
outsb
cmp
mov
push
mov
das
xchg
pop
push
in
jo
inc
cmp
imul
iret
outsl
out
outsb
std
xchg
ror
xchg
icebp
nop
movsb
pop
paddb
add
push
add
subb
jb
jns
icebp
sub
in
mov
ss
rol
repnz
cmp
shlb
adc
fwait
clc
fmuls
aam
mov
xlat
inc
adc
push
imul
aam
aaa
mov
repz
clc
rclb
mov
daa
arpl
mov
adc
xchg
dec
shlb
arpl
popl
adc
xor
rcr
adc
cli
ds
fbstp
sbb
movsb
das
sarl
dec
ret
lret
xchg
adc
mov
stos
addr16
test
mov
push
xchg
inc
pushf
xchg
aam
popf
dec
sbb
lock
adc
pop
scas
mov
jg
les
push
mov
adc
int
or
lods
or
std
out
repnz
js
pop
gs
sub
and
int
cwtl
paddb
cmc
aas
movsl
add
cld
dec
test
imul
sub
xchg
popa
push
stc
ljmp
xchg
xchg
and
jne
sbb
aaa
xchg
jg
xchg
cmp
adc
push
push
iret
cltd
mov
test
jle
jne
jecxz
jmp
std
jecxz
add
mov
xor
clc
dec
push
fisttpl
popa
or
cli
inc
adcl
sahf
sar
daa
jb
xor
or
das
sarl
dec
ret
pop
pop
mov
mov
incl
cld
inc
mov
add
loop
xchg
scas
cmpsb
jbe,pt
jb
cmc
testl
stos
adc
xchg
mov
add
mov
lods
xchg
mov
aas
fistps
pop
das
xchg
lret
cmc
inc
int
cmc
lret
or
in
dec
shlb
clc
cmpsl
lods
int
adc
inc
mov
out
xchg
mov
mov
fwait
xor
xchg
jb
xchg
mov
lahf
data16
mov
notl
movsl
xchg
rcr
sbb
mov
dec
jmp
pop
push
std
movsl
outsl
rcrl
jge
insb
movl
add
mov
test
sbb
pop
sub
jns
mov
mov
insl
cmp
pushf
in
cld
daa
sbb
sahf
add
cmpsb
sub
daa
dec
notb
iret
cmp
loopne
int3
mov
jnp
dec
sbb
cmpl
stos
filds
mov
out
push
mov
and
adc
or
orb
faddl
and
lods
push
test
out
mov
fcoml
pop
je
bound
jle
dec
cli
ds
dec
into
inc
cmpl
js
in
xchg
shlb
js
inc
into
fnsave
cwtl
fwait
cmp
mov
xlat
dec
xchg
stc
or
pop
lods
add
icebp
addr16
fdivs
std
add
jp
stos
in
jno
mov
cli
fiadds
std
call
mov
xchg
mov
push
pop
xchg
mov
xchg
add
nop
push
jae
fdivs
add
aaa
incl
das
mov
push
inc
xchg
jo
jp
cmc
ficoml
jae
sub
jno
pop
aad
jns
int3
jle
mov
jnp
sbb
sbb
popf
mov
mov
lea
out
jg
setbe
jp
aad
cmpl
dec
divl
inc
cmp
lea
pop
sahf
lock
and
popa
jl
mov
mov
add
in
pop
test
mov
dec
pop
loope
inc
ja
or
and
jns
push
insb
mov
xchg
mov
push
gs
sub
ret
shll
std
aas
out
pop
sti
outsl
xor
das
repz
and
das
stos
aaa
fbld
cs
fistps
inc
cs
inc
push
idiv
cmp
das
cmpsl
outsl
test
mov
pop
enter
loope
in
insb
dec
mov
inc
int
iret
cmp
testl
outsb
ret
daa
jae
out
cmp
pop
lret
sub
sub
mov
call
pop
loop
lahf
js
into
loopne
pop
cmpsb
out
mov
rcrb
movsl
pop
cwtl
sbb
dec
xor
mov
shl
incl
adc
out
xor
xor
push
outsb
mov
rol
sub
push
mov
lahf
iret
mov
push
mov
outsl
push
mov
test
jmp
sbb
add
loope
jns
adc
sbb
adc
cli
and
daa
stos
das
mov
jg
repz
in
xor
data16
push
jae
pop
pop
cltd
dec
int3
std
pop
xlat
jo
add
idivb
test
dec
jne
sub
xor
outsb
xchg
scas
push
ret
mov
xchg
dec
out
sub
lret
add
jno
fcmovne
mov
adc
minps
cli
stos
mov
stos
adc
addr16
xchg
aas
inc
fcoml
stos
xchg
jg
and
lds
sbb
adc
sub
idivl
xchg
inc
jnp
sar
cmc
cwtl
and
mov
shll
inc
sub
mov
aas
ljmp
shll
dec
mov
xchg
stos
lds
pop
cltd
imul
fistps
pop
adcl
xchg
fldt
or
int3
pop
test
in
lods
sub
lahf
mov
decl
sub
popa
fucomi
and
stos
lret
std
bnd
out
in
ljmp
or
mov
sahf
mov
adc
xor
fstl
inc
fs
sub
dec
test
iret
in
xchg
pushf
jle
into
mov
sub
dec
pop
je,pt
jmp
repnz
test
out
pop
insl
in
rorb
cmp
sti
inc
mov
lcall
sbb
popf
sti
jge
cmc
lret
add
stos
test
icebp
inc
sbb
imul
lcall
ja
inc
cmpl
hlt
sub
adc
insl
xchg
or
mov
push
push
aam
lock
orl
mov
inc
add
push
outsb
sub
inc
lcall
push
xrelease
push
xchg
sub
div
clc
loopne
stc
nop
test
nop
mov
push
cmp
cmpsb
fimull
inc
dec
das
push
xor
out
sarb
fst
sub
push
aaa
or
ljmp
fwait
dec
sub
filds
mov
in
lcall
sbb
dec
inc
pusha
aaa
inc
jbe
jg
pop
pusha
jecxz
sti
rorl
cmp
pushf
lahf
or
cli
jmp
repz
adc
and
das
push
ja
stos
xchg
mov
loop
je
sbb
enter
nop
sub
xchg
mov
scas
pop
repz
sbb
pop
jp
enter
pop
pop
insb
sbb
lret
push
push
push
pop
jns
mov
inc
int
je
shl
inc
repz
pop
and
push
int
out
push
push
push
aaa
add
push
inc
aad
xchg
mov
dec
pop
jns
aas
les
ljmp
mov
mov
es
pop
loope
sub
inc
andl
and
iret
jbe
jnp
hlt
into
push
pop
arpl
xor
shlb
pop
pop
rorb
ljmp
popf
inc
test
lcall
cltd
add
in
dec
dec
pop
sbb
mov
arpl
dec
js
aas
leave
sbb
mov
into
add
jmp
loopne
cmc
aaa
aaa
mov
inc
imul
mov
sub
ror
ljmp
inc
xor
and
test
popf
rcll
push
hlt
pop
push
test
leave
jecxz
js
loop
xor
sub
inc
pop
jae,pt
addb
enter
js
mov
mov
movsl
jns
movl
jge
xchg
mov
out
fstpl
enter
xchg
leave
out
and
add
fdivl
add
inc
jo
pop
xor
out
xchg
jmp
jl
sub
cmpsb
ficompl
pop
jmp
jg
out
in
ljmp
jnp
rorb
mov
dec
jb
inc
sbb
dec
addr16
push
dec
int3
inc
inc
add
pusha
mov
popf
jo
jnp
jns
imul
add
ret
aam
out
jmp
sahf
shrl
call
add
mov
mov
out
int3
push
imul
inc
das
bound
test
jne
lods
xchg
pop
push
sub
imul
sub
ds
adc
les
or
cmp
xchg
add
mov
jmp
jecxz
jbe
lcall
dec
and
mov
lret
jp
and
cli
mov
mov
jns,pt
cmpsb
mov
out
ja
scas
or
loopne
sub
sbb
popa
aaa
mov
adc
fwait
lret
mov
mov
incl
fisubrl
ljmp
cmp
xor
push
mov
insl
dec
mov
popa
jns
and
pusha
stos
in
xchg
test
ficompl
ds
das
dec
pop
xor
jb
cld
pop
xchg
or
or
mov
xchg
mov
pop
fsubs
out
mov
xor
shll
pop
popa
test
push
mov
add
mov
aaa
stc
inc
out
mov
popf
xchg
movsb
push
out
push
fstps
inc
imul
mov
mov
sub
and
dec
lret
ds
mov
sbb
outsl
jp
cld
xor
dec
xchg
es
and
sub
xor
aas
adc
ja
inc
push
jg
addr16
popa
adc
sbb
call
mov
stos
sbb
push
pop
dec
push
sub
add
inc
data16
shll
in
in
add
and
inc
stos
jo
stos
jmp
js
and
inc
pushf
aaa
ja
in
mov
addl
adc
mov
ja
dec
mov
pop
mov
and
loop
jge
push
ja
mov
jmp
nop
shl
xlat
and
jmp
add
push
aaa
mov
jp
popf
int3
jmp
pop
xor
pop
mov
int
sub
fstl
inc
push
ds
pushf
fwait
push
cli
cmp
jae
push
fucom
cmp
ret
xor
mov
shl
rclb
and
in
int3
add
jo
sbb
je
jg
test
incl
or
int
js
sbb
inc
outsb
jmp
inc
pop
aad
cwtl
mov
xchg
movsb
lret
jecxz
xchg
div
lcall
mov
mov
mov
or
inc
push
mov
push
and
inc
jno
pusha
cmpsl
xor
inc
not
rcrl
push
nop
jmp
addr16
fs
mov
jle
or
mov
jae
mov
test
cld
sti
mov
pop
inc
push
cmp
push
jmp
adc
lret
repz
sub
call
push
ja
pop
mov
lahf
ds
xor
gs
xchg
les
in
jns
aas
add
insl
aas
mov
rorl
in
scas
nop
cmpl
call
cld
and
in
sub
mov
inc
xchg
outsl
aam
pop
xchg
lds
push
jge
xchg
sbb
testl
sub
shlb
xor
fadds
pop
mov
lods
rclb
fiaddl
fdiv
xchg
xor
pusha
mov
test
push
or
int3
add
inc
xchg
gs
mov
jecxz
out
or
scas
xor
lods
loopne
icebp
lret
push
notl
jb
out
lret
jmp
popa
ja
scas
data16
mov
inc
fwait
cmp
imulb
pop
push
fistl
jl
xchg
mov
add
pop
es
je
movsl
sub
aad
je
or
jbe
or
push
mov
imul
cwtl
dec
xor
es
adc
incb
gs
lds
aas
mov
std
pop
cmp
mov
xchg
subb
lahf
mov
sbb
mov
pop
mov
fwait
test
clc
stc
push
sti
pusha
test
and
mov
sarl
push
fistpl
xchg
inc
add
out
inc
mov
lock
gs
outsb
cmpsb
leave
inc
xor
ret
sbb
movsl
daa
imul
and
mov
and
inc
pop
sbb
dec
insl
mov
dec
fmull
int3
xor
pop
call
sahf
mov
sbb
sahf
xlat
xchg
xor
adc
mov
pop
cmp
lods
adc
popf
mov
aam
insb
xchg
cld
test
sarl
xorb
aad
pop
lcall
push
les
inc
rcrb
jle
imul
loope
lcall
xorb
add
call
jl
nop
jae
cmp
sbb
adcb
sub
push
sub
andl
xchg
sahf
xchg
lret
mov
push
jge
mov
es
cmp
cmp
repz
push
sbb
jmp
enter
fidivrs
lret
arpl
mov
pop
dec
std
test
mov
xchg
mov
jne
ljmp
ret
add
add
aam
test
das
sub
cmpsl
pop
jecxz
int
pop
xchg
sahf
adcb
lods
cmp
pop
pop
ret
mov
testb
jge
push
push
xlat
pop
pop
insb
aaa
adc
push
push
notb
scas
loop
and
push
fmuls
mov
mov
dec
push
push
lcall
scas
call
mov
icebp
jae
icebp
mov
out
mov
xchg
pop
push
mov
test
lods
cmpsl
loopne
push
xor
push
stos
sar
mov
mov
flds
notl
leave
inc
rcl
cli
lahf
sbb
inc
cmpsb
repz
xchg
mov
inc
sbb
mov
ret
sub
mov
jg
fistpll
aas
lahf
in
add
jecxz
push
xor
inc
bound
push
jl
call
call
sub
xlat
and
push
call
scas
fsubrp
iret
add
inc
ss
push
in
arpl
fbld
test
add
lret
mov
xchg
pop
and
jecxz
mov
jnp
test
jecxz
in
insb
ja
mov
movsb
in
mov
adc
imul
mov
lret
xchg
insl
movsl
mov
faddl
fistpl
cltd
test
fcmove
add
pop
fisubs
data16
sub
inc
xchg
divb
jnp
jnp
push
movsl
ret
xchg
stos
popf
xchg
push
add
mov
ss
das
movsl
lcall
int
mov
dec
cli
push
stos
jne
test
pop
xchg
rcrb
in
adc
mov
fsubl
imul
arpl
js
test
test
add
jns
mov
xchg
xor
jecxz
sub
mov
sub
push
sarb
cli
test
add
stc
in
jbe
mov
ficomps
or
jle
jnp
sbb
cwtl
ficoms
adc
push
in
lock
out
cs
cmp
cld
scas
vpmacsww
iret
cmp
ljmp
jne
inc
es
les
sahf
mov
cld
icebp
je
inc
fidivrs
iret
inc
dec
mov
call
cs
mov
dec
xor
insb
imul
xchg
enter
mov
lea
mov
movups
jne
push
mov
sbb
std
jne
sub
pushf
and
xlat
lret
leave
add
pop
xor
out
fs
repnz
out
or
xchg
jmp
fs
sahf
jecxz
sbb
cmp
adc
mov
push
sahf
lret
adc
lods
mov
xor
push
sub
pop
es
test
out
sahf
dec
add
lret
add
add
pop
push
jge
pop
xchg
lahf
rcrl
push
test
xlat
add
hlt
jmp
sbb
fwait
mov
orl
int3
addr16
mov
data16
out
and
jnp
in
adc
pop
jbe
mov
subb
es
outsl
xchg
dec
lret
in
pop
leave
imul
lock
in
pusha
jbe
popa
outsl
jb
or
inc
jb
bound
cmp
jb
cmp
lahf
jno
shlb
arpl
xchg
pop
adc
pop
aam
fldcw
outsb
sub
pusha
inc
pop
mov
jge
sbb
roll
push
ret
or
stos
fisubs
xor
dec
pop
inc
jne
inc
and
jae
insb
sbb
and
add
sbb
jnp
jle
jo
cmc
jb
xor
outsl
test
mov
movsb
fs
xchg
lret
jg
mov
xchg
nop
fabs
repz
add
popa
mov
cs
dec
outsb
inc
popf
jno
bound
push
cmp
pusha
mov
sub
lret
xor
test
add
pop
mov
adc
popf
dec
ja
sub
mov
jno
mov
pusha
fwait
rorb
ljmp
sbb
movsl
cs
int
lea
lock
inc
push
clc
pop
stc
in
not
icebp
push
test
jp
xchg
and
daa
addb
push
mov
iret
jl
adc
pop
jle
add
fnstenv
pop
xchg
leave
xchg
inc
movsb
cmp
mov
loop
jnp
or
fwait
std
lcall
loopne
lahf
fdivs
mov
jl
dec
xchg
xor
jb
decl
ja
adc
leave
std
sbb
nop
test
adc
xorl
loopne
push
cs
push
js
pop
inc
fs
iret
add
add
hlt
push
and
popa
nop
rolb
sub
imul
xchg
xchg
xlat
in
xchg
mov
inc
or
shlb
push
shr
and
mov
aas
out
aaa
inc
sbb
outsb
rcr
std
pop
adcb
jo
mov
xchg
in
push
and
mov
ja
and
popa
int3
mov
mov
push
dec
sbb
cmp
iret
in
inc
dec
inc
pusha
xor
int
sub
roll
pop
push
out
addl
pop
xchg
inc
jl
subl
cwtl
lcall
push
mov
lcall
mov
lret
cltd
lock
mov
mov
arpl
bound
dec
jecxz
pop
ja
cmpsb
jno
out
jmp
xor
ret
add
ds
xchg
in
jae
mov
into
stos
xor
pop
rcl
testb
pop
mov
jl
aam
mov
cvtpi2ps
arpl
jo
push
push
and
push
pop
mov
inc
push
faddl
aam
int
jp
shl
pop
adc
ds
das
fistpll
xor
xor
add
jae
mov
push
sub
addb
lcall
fwait
ret
xchg
fcomp
fnstcw
push
push
dec
xor
inc
jecxz
push
ds
jnp
stos
hlt
xchg
aas
sti
ljmp
cmpsb
cmp
test
mov
push
and
ljmp
sub
scas
adc
xchg
insl
js
mov
push
out
mov
dec
mov
mov
sbb
lahf
push
shl
push
std
out
cmp
and
cld
and
mov
ljmp
mov
bnd
cmp
xchg
popa
imul
mov
xchg
flds
mov
mov
fsubrs
into
push
and
jg
les
fcoms
ja
add
movsl
jmp
sub
mov
jnp
ret
lods
dec
push
lods
cli
mov
and
sub
mov
add
stc
jbe
mov
adc
test
xor
adc
pop
in
sbb
out
push
iret
movsl
cli
pop
and
push
dec
fldenv
leave
cli
fcompl
fdivrl
pop
dec
cmp
imul
insb
sub
imul
or
or
adc
out
in
and
mov
jne
fdecstp
aad
insb
push
incl
mov
in
mov
xchg
inc
das
lods
pop
xchg
pop
pop
shlb
jns
jp
sub
inc
xchg
mov
jnp
dec
xchg
test
mov
inc
inc
jecxz
es
cmpsb
lahf
push
adc
sub
xchg
test
cmc
dec
lahf
inc
int3
xchg
imul
push
stos
movsb
xlat
push
xchg
sbb
int
shlb
out
loop
xchg
sub
dec
mov
dec
sti
pop
scas
rcll
cmpsb
xor
outsl
inc
xchg
aad
cmc
sbb
push
push
pop
lcall
and
dec
mov
push
jnp
mov
shll
mov
aas
imul
xchg
sbb
ret
repz
sbb
stc
fisubl
repz
fs
into
jnp
sahf
into
jno
aaa
sub
in
enter
into
mov
dec
sahf
jae
xchg
sub
scas
enter
rcrb
loope
lea
xor
adc
sub
lahf
neg
sti
rcr
iret
lds
mov
xor
out
and
lcall
test
cltd
xchg
stos
mov
inc
mov
iret
in
inc
dec
inc
pusha
xor
mov
pop
sub
lods
sbb
iret
cwtl
and
push
add
ss
mov
sbb
xchg
dec
pop
xor
sbb
in
mov
cltd
stc
and
mov
pop
push
int3
dec
lcall
or
jmp
mov
in
cmp
ret
mov
in
jmp
dec
jo
xchg
loop
jbe
je,pt
xor
bound
or
xchg
mov
ja
mov
enter
jmp
jno
cld
out
loope
adc
ja
dec
cmp
add
sarb
mov
sbb
pop
mov
add
repnz
imul
adc
pushf
clc
icebp
sbb
je
xchg
pushf
shlb
popf
mov
add
xor
dec
int3
out
fcmovnb
test
loop
mov
fists
adc
fisttpl
faddp
xchg
in
in
jbe
addl
cmc
out
es
adcb
jmp
push
hlt
inc
xor
inc
push
into
lret
in
mov
inc
fwait
jbe
mov
shll
mov
jl
xor
xor
push
jp
in
adcl
les
stos
fisubs
xchg
lret
or
movsb
aad
fnstcw
cmp
pop
insb
inc
mov
mov
jns
jo
add
inc
and
inc
js
sti
popf
aad
or
shrl
dec
mov
shl
cmpsl
pop
outsb
mov
xchg
jmp
aas
xor
xorb
into
fdivrl
outsb
ret
cmp
aam
lods
pop
and
clc
jne
out
cmp
int3
js
xchg
imul
ror
sarb
std
repz
loope
mov
mov
imul
add
lds
jg
pop
popa
push
fisttpl
sub
shrl
negl
pushf
or
loope
clc
or
outsl
outsb
sbb
mov
jmp
in
js
add
jmp
aad
cmp
sarl
fstpl
out
movsb
adc
mov
lock
xsaves
into
push
mov
pop
fstp
ljmp
cwtl
cli
xlat
loop
std
sub
outsb
xchg
cmp
mov
dec
mov
mov
pop
imul
adc
ret
mov
add
fwait
add
sbb
in
jnp
cwtl
es
andl
xchg
popa
cmp
push
lcall
stos
sbb
mov
push
xor
jo
add
enter
dec
mov
or
loope
push
int
push
xchg
test
inc
bswap
sbb
cmp
loope
sbb
iret
out
inc
dec
das
movsl
repnz
imul
cmp
or
in
pop
inc
push
in
jbe
push
cmp
gs
out
loop
pop
call
in
fwait
adc
pop
and
in
cmp
rorb
mov
pushl
xor
jg
es
mov
xchg
js
aas
xchg
lahf
jne
leave
enter
aad
out
out
inc
mov
insb
mov
dec
mov
jmp
cmp
ljmp
cmp
inc
dec
jg
jo
mov
repz
add
es
pop
in
and
inc
jne
lahf
dec
mov
stc
cmp
cwtl
mov
lret
mov
or
ret
mov
daa
dec
and
add
sbb
sahf
xchg
jle
lods
inc
jns
bound
nop
mov
mov
mov
repnz
or
mov
mov
je
and
lcall
arpl
lods
mov
xchg
out
loop
adc
or
mov
jbe
lds
jmp
sbb
xor
adc
mov
xlat
add
sub
mov
sub
xor
notl
mov
adc
aam
in
inc
test
or
sti
adc
xor
imul
jge
out
rcrb
add
loop
sarl
cs
sub
xchg
movsb
in
push
push
sub
sbb
pushf
mov
adc
mov
and
mov
pop
cmp
fsts
inc
pusha
sub
addb
sahf
mov
dec
mov
mov
pop
dec
scas
mov
add
nop
fs
inc
or
iret
in
movaps
jg
mov
inc
std
push
push
scas
lret
ret
mov
add
jl
in
clc
ret
cltd
shr
call
sahf
scas
fmul
in
aam
rorb
jnp
or
xchg
mov
cltd
cwtl
jne
jne
loope
cmp
cmp
sub
sar
mov
stos
pop
mov
and
sub
pop
and
ret
and
and
jmp
mov
mov
dec
ss
or
fists
dec
push
dec
bound
xchg
xchg
mov
sub
clc
jnp
out
cmpsb
add
mov
dec
je
lret
mov
out
inc
lods
sarb
movsb
add
movsb
arpl
pop
jg
xchg
or
push
inc
xchg
pop
xor
sub
add
dec
or
std
mov
jecxz
push
sti
out
mov
mov
int3
fdivrl
add
sbb
mov
cwtl
mov
xor
mov
jmp
jbe
and
inc
cwtl
repnz
int3
in
movsl
sbb
fs
xchg
mov
xchg
inc
and
lea
popl
and
insl
xchg
sti
pop
les
jbe
mov
pusha
push
add
dec
test
arpl
loop
add
xor
mov
xchg
xor
sarb
cmp
jle
js
fadds
push
stos
imul
fldcw
hlt
cmp
iret
in
inc
rcrl
push
popl
dec
shlb
adcb
push
fs
pusha
add
jge
sti
pop
test
stc
jnp
stc
sbb
sbb
jo
sbb
adc
jp
or
fwait
ljmp
mov
repnz
mov
sbb
mov
and
pushl
popa
or
scas
xchg
dec
fucom
and
gs
jns
fisubl
cltd
pop
pop
cmp
stos
imul
inc
into
mulb
inc
sbb
lds
hlt
adc
repz
sub
xor
das
in
or
pusha
in
cmpl
add
jl
mov
cmpsl
enter
lcall
add
xlat
fisttpl
sub
adc
call
adc
cmp
lea
nop
mov
xlat
and
xor
push
dec
les
adc
daa
jmp
mov
adc
sti
icebp
dec
sbb
xor
enter
adc
xchg
jp
mov
dec
sbb
inc
cs
in
and
add
cld
push
shl
jp
mov
clc
int
popf
and
mov
cmp
mov
mov
in
sub
mulb
dec
into
lahf
pop
int
sub
std
adc
sub
fnstenv
les
andl
lret
fdivrs
sbb
cmp
mov
inc
adcb
out
inc
inc
mov
add
xchg
rcrb
stc
push
aas
mov
jge
adc
std
xchg
enter
aad
arpl
mov
pop
in
xchg
cmp
jno
jnp
jle
rolb
sbb
lock
push
in
pop
mov
sub
jbe
fucomip
int3
cmp
mov
inc
in
sahf
mov
js
fs
pop
sbb
mov
cwtl
jo
aas
sub
in
dec
pushf
loope
inc
mov
dec
daa
add
jecxz
sub
mov
scas
shrl
pop
nop
std
or
pop
mov
arpl
aad
xlat
out
iret
fcomps
fiadds
fcmovbe
out
ja
sub
and
rolb
ja
fstp
gs
and
sbb
je
sub
in
inc
jle
outsb
xchg
pop
mov
icebp
loope
mov
es
mov
inc
js
adc
negl
andl
sbb
xchg
push
and
jnp
sarl
mov
rcl
in
push
mov
repnz
adc
adc
sub
sub
dec
sub
cwtl
hlt
ds
sahf
divl
cltd
scas
mov
push
add
jnp
in
imul
inc
in
outsl
push
mov
add
inc
adcl
jge
ja
or
mov
loop
jne
psllq
cwtl
and
xor
pushl
pop
adcl
push
mov
add
dec
xchg
pop
insb
jne
ljmp
pushf
test
mov
ds
jmp
pusha
scas
cld
xchg
js
in
clc
movsl
shrl
xchg
stc
out
adc
outsb
jno
jmp
and
jmp
or
push
cmp
movsb
pop
mov
push
dec
ret
out
es
mov
jp
xchg
xchg
cmp
pop
shrl
les
sub
and
mov
test
mov
xor
push
test
lret
incb
out
mov
push
lea
test
shlb
ja
mov
stos
rorl
dec
push
cmpsl
lret
movsl
bound
scas
and
int
sbb
insb
scas
mov
push
sbb
std
lret
mov
cli
int3
xor
lahf
push
mov
jns
push
and
push
xchg
fcoml
mov
das
sbb
xchg
movsb
aas
add
xor
cwtl
mov
outsl
inc
sub
movsl
loope
or
enter
sbb
fists
mov
pop
hlt
out
or
push
xchg
fmuls
aad
add
scas
out
fs
and
sbb
mov
out
imul
leave
push
rolb
cmp
outsl
jnp
int
cs
stos
mov
ret
add
shll
xor
or
rcrl
mov
xor
dec
lret
repnz
scas
or
decl
adc
inc
or
jne
jle
gs
clc
loope
inc
stos
shr
mov
pop
movq
rcll
js
dec
ret
jae
mov
and
cmp
mov
dec
jbe
jg
push
mov
lcall
sub
mov
gs
outsb
mov
icebp
loop
cmp
or
rcrl
daa
stc
or
jne
adc
xchg
fs
mov
jp
enter
sbb
xchg
mov
out
sbb
push
xchg
xchg
inc
xchg
inc
cmp
jns
out
mov
mov
aaa
js
inc
jge
outsl
stc
xchg
add
inc
je
fsubrs
jecxz
xchg
push
pop
mov
xor
incb
pop
inc
mov
cli
cmp
pop
adc
js
dec
pop
nop
mov
loopne
fsubrs
call
cmp
sub
mov
cmp
mov
mov
push
insl
dec
add
xor
pop
jle
popa
inc
jl
or
cmp
fsubl
jp
mov
and
inc
inc
push
je
pop
xor
inc
test
rcr
xor
xchg
dec
mov
add
xorl
fidivs
std
rorb
sbb
and
pop
dec
pusha
decl
jnp
mov
xorl
ds
jg
pop
mov
test
mov
imul
jno
sub
or
lcall
jle,pn
ret
xor
push
cmp
inc
cmpsb
inc
sahf
push
mov
or
aam
les
rol
clc
cmp
push
jmp
adc
push
mov
mov
and
adc
mov
clc
sub
call
lods
in
xor
stos
and
jno
faddl
dec
repnz
fdivrl
mov
dec
xor
xor
and
pop
aas
lahf
sahf
and
dec
out
lock
fs
out
push
dec
icebp
cmp
shl
mov
xchg
fstp
mov
fsub
fisubrl
pop
xchg
rol
sti
sub
loope
aad
shl
loope
sbb
or
fcoms
lret
fistpll
les
loope
or
in
in
jge
sbb
test
or
or
loopne
sbb
adc
push
push
and
aaa
sarb
push
inc
add
xor
fsubrp
bound
shl
sbb
shlb
mov
out
fcompl
leave
outsl
and
jno
idiv
cmpl
mov
lret
paddd
add
mov
in
cmp
call
cli
lcall
mov
sbb
cmp
mov
sahf
cltd
in
inc
mov
in
sbb
inc
rcr
call
hlt
pop
mov
pop
inc
mov
outsb
push
ret
dec
inc
cmp
jg
jnp
xchg
ret
dec
das
imul
dec
adc
or
sbb
xor
mov
xor
dec
jnp
mov
sbb
adc
lahf
add
inc
sub
sub
jb
inc
pop
cmp
push
stos
inc
data16
xor
adc
xchg
lret
push
pop
xchg
mov
and
daa
push
outsl
inc
ds
push
test
test
nop
pusha
mov
inc
imul
xchg
inc
xor
lahf
ja
cmp
pop
push
out
dec
inc
imul
dec
into
or
dec
adc
pop
loope
add
stc
cmpsb
jmp
push
jns
xor
fucomip
inc
aaa
sub
insb
pop
mov
adc
shll
jmp
lods
inc
push
pop
mov
mov
test
sbb
push
test
jae
lret
fnstcw
mov
aam
in
sub
sbb
push
sub
or
inc
pop
movsl
sub
cmp
cmp
mov
nop
enter
lods
xchg
xchg
cmpl
add
inc
sub
cmp
jle
in
lahf
shlb
sub
sub
insl
mov
movaps
mov
inc
pop
adc
rcll
push
xor
inc
out
xlat
sbb
pop
in
jg
jge
add
xorb
ffreep
stc
sub
jp
mov
je
inc
or
leave
mov
ds
cmp
hlt
and
or
out
and
pop
jl
jno
bound
sti
mov
iret
in
inc
dec
inc
jnp
mov
push
fcoml
cmp
xchg
xchg
push
rorb
pop
xchg
ret
ret
mov
cwtl
icebp
sahf
ret
mov
aam
rcrb
xor
inc
fmuls
dec
mov
add
leave
iret
xchg
addr16
pop
sub
test
enter
dec
mov
cs
dec
inc
sub
fwait
and
or
aas
in
inc
sarl
push
fnstcw
mov
pop
loope
pop
call
ret
fistl
jl
inc
jb
cmp
lahf
add
add
jne
jecxz
in
cmp
inc
gs
sbb
cmp
mov
popf
push
push
xlat
jl
std
xor
mov
pop
mov
out
out
fisubs
push
cmp
push
jns
jno
cmp
pop
cmp
fcomip
test
pop
mov
ret
dec
sub
adc
inc
inc
imul
and
adc
add
jno
out
ss
dec
inc
push
vcvtpd2psy
xor
inc
xor
andl
scas
lret
out
daa
mov
push
xor
mov
xor
aas
dec
cmp
or
inc
shr
inc
dec
and
mov
pop
mov
aam
cmp
cmp
and
sub
mov
lret
add
mov
je
std
cwtl
fucom
adc
roll
repz
scas
pop
cmp
nop
sub
or
add
hlt
sbbb
sub
pop
cmpsl
push
fdivl
push
pop
sub
mov
jbe
mov
dec
je
psllq
in
stos
pusha
shlb
js
les
cmp
movsl
stc
les
inc
jmp
push
popf
adc
enterw
sbb
or
xchg
pop
les
or
cli
push
cmp
mov
mov
push
repnz
div
adc
or
mov
mov
outsl
pop
mov
cmp
add
int
push
lods
or
sahf
inc
and
xchg
mov
inc
mov
push
jbe
sbb
cmp
push
idiv
cmp
dec
mov
xchg
sar
pushf
das
ds
test
inc
movsb
clc
fiaddl
adc
jb
mov
jmp
pop
add
ror
adc
mov
in
and
jle
and
mov
xchg
nop
fcoms
jbe
jne
repz
pop
aad
cli
loopne
cmpsb
sbb
imul
mov
xchg
fwait
cwtl
sub
cmc
hlt
lahf
sbb
mov
or
push
sti
fiadds
xor
scas
test
cmpsl
cmp
sub
mov
out
popf
inc
rorl
inc
arpl
cmp
jge
mov
pop
jnp
jp
xchg
in
jecxz
adc
jb
fsub
sub
mov
push
aam
pop
addr16
movsl
push
insl
xchg
adc
addb
shrb
jb
sbb
mov
in
fwait
insb
jle
jb
test
push
or
stc
xorl
pop
sarl
inc
popa
and
test
push
sti
add
or
inc
int3
push
push
mov
shll
jle
add
int3
adc
test
in
cmp
arpl
and
and
xor
inc
aas
mov
xchg
xchg
rolb
std
bound
inc
push
jge
inc
pop
fistpll
and
and
mov
xchg
adc
jbe
mov
jl
sub
inc
fcomps
inc
outsl
cmc
loope
cmpsb
sbb
enter
xor
scas
add
test
call
stos
mov
push
ja
inc
repz
pop
or
test
mov
mov
mov
imul
jg
sbb
sub
push
mov
ret
inc
std
jmp
dec
mov
scas
jp
mov
add
in
or
xor
xor
popa
nop
lods
cmpsl
loopne
inc
ja
push
mov
add
mov
inc
scas
adcl
int
pop
mov
dec
test
and
inc
movsl
cmpsb
adc
fildl
adc
mov
iret
mov
mov
stc
and
repz
xchg
mov
fmul
add
push
lods
and
xchg
pop
xchg
ret
aaa
jle
jecxz
lcall
loop
insl
fidivrs
or
rcrl
out
pop
push
jno
fcmovnb
jmp
das
lods
pop
fidivrl
shrb
clc
mov
cmpsb
leave
ss
movsl
and
sub
jmp
icebp
scas
jb
int
xchg
mov
test
dec
js
mov
in
xlat
loop
std
sub
pop
aas
mov
mov
jecxz
inc
and
pushf
sub
xchg
or
or
stos
add
and
setae
decl
lock
std
test
inc
pushf
js
mov
mov
sbb
mov
sub
inc
subb
movsb
arpl
and
inc
pusha
xor
popa
mov
xor
dec
push
inc
mov
bound
pop
idiv
lods
cli
push
xchg
xor
int
idiv
test
addr16
ds
sbb
addr16
cmpsl
in
xor
hlt
sbb
mov
lret
aas
mov
or
inc
mov
sbb
inc
mov
in
mov
fldcw
ljmp
scas
out
dec
in
xor
movsl
and
mov
inc
lods
iret
add
in
fcomip
adc
in
mov
xchg
push
aad
std
and
mov
test
jnp
std
das
das
and
lds
cmp
enter
adc
lcall
add
movsl
mov
cli
jmp
sub
mov
decl
ss
cmp
sub
int3
fisttpll
pop
out
imul
sub
lea
in
imul
pusha
add
test
or
jg
sub
loop
dec
pop
fisubs
push
stos
iret
stos
insb
fwait
inc
fsubrs
loopne
sub
in
cmp
xor
mov
add
stos
sub
jmp
mov
and
jmp
adc
cli
fdivrl
cmp
rorl
repz
imul
bound
inc
sub
fstpt
xchg
test
jmp
add
lret
pop
gs
jp
rorb
test
ss
jge
push
push
pop
mov
inc
or
mov
std
mov
cmpsl
jl
roll
mov
rolb
dec
jnp
mov
dec
mov
mov
popf
test
lods
adcb
jge
pusha
inc
gs
sub
xor
adc
loop
aam
int
cltd
xchg
add
mov
es
xlat
in
sbb
push
mov
sbb
push
xchg
mov
xchg
and
mov
rorl
iret
and
leave
jmp
inc
jae
std
mov
xchg
ret
inc
xor
imul
mov
out
in
std
insl
push
inc
xchg
mov
xchg
sbb
lea
rcl
pop
lock
sub
iret
orb
pop
decl
ja
cltd
cmp
data16
mov
or
mul
mov
fstpl
inc
ja
test
push
inc
inc
nop
add
jae
mul
mov
xor
cmp
mov
or
mul
mov
pop
sub
pop
cmp
data16
add
jae
mul
mov
ja
inc
ja
dec
cmp
data16
popf
add
jae
mul
mov
and
inc
ja
xor
lahf
add
jae
mul
mov
ljmp
push
inc
imul
sarl
or
cmpsl
add
jae
mul
mov
cltd
cmp
stc
cmp
data16
add
jae
cmc
in
inc
lcall
adc
repz
xlat
jmp
stos
in
jg
mov
popa
pop
push
inc
cmp
push
dec
sbb
sbb
push
cmp
xchg
pushf
mov
mov
push
xchg
lods
xor
je
cwtl
add
xchg
jb
sub
addl
sbb
and
les
dec
cmp
sbb
push
dec
loop
dec
mov
push
push
fldl
into
cmp
fstl
xor
lret
dec
and
cmpsb
pop
enter
call
pop
int
fs
ret
mov
mov
fldt
pop
jnp
out
push
push
push
testb
ja
mov
pop
xor
add
pop
xchg
call
add
cmc
arpl
mov
and
cmp
pop
imul
jg
lret
pushf
mov
ret
xchg
ss
dec
inc
enter
xor
std
int3
cmp
movsl
jle
loop
mov
popa
adc
xor
sub
sbbb
lods
jecxz
mov
mov
ljmp
dec
push
fistps
jmp
mov
dec
mov
xchg
mov
xor
mov
stc
pcmpgtd
loope
push
test
sub
aad
xor
add
or
js
jbe
mov
sbb
xor
stos
fsubl
push
cmp
pop
movsb
pop
fsts
lods
xor
mov
xchg
mov
xchg
cmp
add
push
fisttpll
jl
fistps
int
xor
push
push
pop
xor
enter
jl
sub
sub
out
je
push
cmp
inc
aaa
test
jg
pop
xor
jnp
fs
inc
int
push
inc
mov
cltd
add
bound
xchg
pop
dec
push
and
jge
pop
sqrtps
push
mov
negl
pop
call
dec
sarb
mov
loope
sub
push
cwtl
mov
sub
dec
xchg
add
mov
fisttpll
sbb
sbb
mov
sub
add
daa
xchg
mov
jle
dec
int3
sbb
xor
add
hlt
les
and
test
jge
xor
dec
aaa
xor
xlat
jo
lock
xchg
cld
dec
cltd
es
jo
xchg
repz
test
movsb
fldl
aas
dec
pop
shrl
popf
sbb
xchg
sbb
sbb
adc
or
xchg
push
in
cmpsb
mov
insl
pop
repnz
inc
bound
rcll
bound
pop
out
push
cmpsl
fcoms
shll
xchg
sub
sbb
and
mov
add
jge
sub
fwait
adc
cmp
push
std
adc
mov
movsl
leave
dec
xchg
ret
cltd
cmp
negb
repz
mov
gs
frndint
mov
cmp
movb
std
pop
cs
sbb
fiaddl
arpl
push
mov
fildl
fcmovnbe
push
mov
cmp
rclb
mov
outsb
dec
jno
test
clc
loope
dec
fadds
jle
dec
ror
add
pop
repnz
fnsave
ret
cmp
xchg
adc
jbe
jl
dec
cltd
add
dec
lret
push
jle
mov
lret
rcrb
jb
adc
sub
fldenv
pop
xchg
hlt
arpl
cmp
jnp
divb
push
or
jne
sub
adc
sti
loop
mov
lea
test
int3
push
mov
xor
xchg
jecxz
in
sub
fs
pop
cmp
in
xor
xchg
jmp
jne
or
pop
add
notb
test
push
cltd
pop
aaa
cmp
dec
mov
in
repnz
cmp
dec
into
push
adc
add
sbb
out
and
and
cmp
add
lods
rcrl
sub
xchg
sub
push
jge
cmp
je
jp
fwait
push
sti
es
xor
addl
mov
sub
push
jl
movb
sub
pop
pop
add
mov
dec
and
std
in
or
and
outsb
sbb
cmpsl
fcmovnbe
fdivrp
data16
mov
and
adc
push
adc
xor
sub
in
sub
mov
fadds
je
lods
inc
jg
subb
push
dec
lret
push
jle
mov
in
insb
mov
int3
lds
outsb
jae
rsm
pop
xor
inc
sbb
lds
test
stc
ss
jmp
data16
sbb
dec
jmp
jb
push
fistps
mov
xorb
fstps
stos
call
hlt
aam
pop
bnd
lret
jle
jmp
and
add
nop
int
jg
sbb
pop
ja
cs
jmp
lock
dec
add
sub
in
out
fistps
mov
and
adc
mov
fmuls
stc
mov
sbb
ja
test
mov
ds
lock
xchg
into
mov
pop
orl
stc
jns
insb
data16
or
cmp
xchg
inc
xchg
and
or
ljmp
and
stos
enter
jbe
mov
cmp
mov
mov
shrb
into
aad
aad
fldenv
test
jae
push
dec
inc
sbbb
shl
or
and
dec
lret
push
jle
mov
push
jnp
mov
in
inc
jo
mov
or
mov
dec
mov
mov
scas
in
test
inc
test
gs
add
lock
jge
daa
sub
jecxz
adc
outsl
hlt
das
xchg
sub
push
arpl
and
stos
fwait
data16
mov
fdivrp
shrb
fs
push
inc
pop
retw
test
add
cli
ficomps
xchg
nop
sbb
jo
add
sarl
shrl
int3
xchg
subl
aad
mov
dec
fisubrs
loope
pop
cmc
les
loop
push
and
jne
jb
filds
and
push
insb
in
and
adc
popa
sub
adc
and
xor
dec
xor
movsl
jl
inc
rclb
push
mov
jo
mov
add
or
test
movb
jbe
push
add
into
into
xchg
adc
lcall
fwait
mov
lcall
mov
or
adc
lret
jne
and
xchg
jns
lahf
in
pop
and
xchg
ret
push
xchg
repnz
push
fwait
jmp
xor
les
and
pop
int
iret
test
mov
or
rcl
or
push
cmpsb
mov
loop
dec
mov
mov
mov
add
cmp
mov
sub
dec
addb
les
pop
add
push
test
outsb
mov
sub
adc
or
sub
andb
or
outsb
out
pop
mov
and
sbb
and
push
mov
cmpsb
imul
enter
xchg
in
out
add
sbb
testb
cmp
repz
dec
inc
loop
sbb
ds
jns
xor
pop
movsl
movsl
imul
aam
nop
fsubr
repz
cmc
jmp
jns
aaa
insl
jmp
and
mov
int
aam
or
dec
xchg
mov
cmp
iret
pop
sub
insl
pop
dec
xchg
mov
mov
mov
xchg
cli
dec
sti
orb
lret
in
adc
xchg
rolb
adc
mov
in
pop
call
aad
push
pop
sbb
dec
mov
or
movsb
mov
xor
lahf
push
imull
jbe
adc
cmp
sbb
cmp
scas
ljmp
or
xor
pop
lahf
xor
decl
bound
fwait
push
sahf
stc
cmc
xor
mov
xchg
ret
adc
sub
and
pop
outsl
push
jmp
movsb
loope
xchg
int3
mov
xor
sahf
ret
dec
and
pop
int
mov
jb
rorb
dec
insl
adc
add
and
mov
or
inc
xor
jo
mov
inc
ds
andl
or
sahf
inc
cmp
cmpsl
mov
lds
mov
loopne
add
cmp
leave
dec
lds
push
icebp
in
inc
sar
and
xor
ljmp
mov
hlt
gs
dec
fwait
loop
lock
outsl
mov
inc
sub
push
sbb
xor
test
shl
lods
cmpsb
adc
or
outsb
add
add
xchg
xchg
insb
or
sarl
jge
clc
hlt
stos
add
xchg
fwait
dec
push
ret
sbb
dec
xchg
mov
inc
xor
sub
mov
adc
dec
imul
mov
fldt
movsl
pop
jle
or
or
xchg
add
pop
sbbl
pop
mov
sub
adc
out
jne
dec
mov
xchg
sub
add
daa
xchg
cmpsb
rorl
scas
aas
jl
cmp
popf
in
repz
test
jo
in
xor
cltd
pop
xchg
add
cmp
loope
pop
outsl
icebp
xor
ret
jmp
or
xor
xchg
movsb
and
sub
into
sti
inc
jno
pop
test
adc
xchg
or
sar
in
xchg
dec
add
sbb
adc
adc
dec
ljmp
sbb
negb
inc
cld
push
adcb
cmc
ss
xchg
cmpb
stos
xchg
mov
stc
aas
loop
inc
mov
roll
cmp
out
sub
dec
lret
mov
cltd
xchg
loope
jge
mov
test
jns
leave
add
add
cld
mov
fcmovu
mov
inc
jle
push
lret
lcall
test
dec
iret
adc
jno
jmp
mov
js
sarl
jg
out
dec
xchg
fdivp
and
int
jmp
mov
frndint
outsb
loop
mov
in
xlat
fidivl
jnp
sub
in
mov
je
iret
pusha
mov
lods
pop
jo
aam
push
mov
enter
sbb
shl
fimuls
and
inc
pop
push
lahf
sbb
js
push
sbb
or
fldt
dec
fs
jl
cmp
bound
cld
and
data16
jnp
in
loope
popf
cmp
mov
push
mov
dec
sub
mov
xchg
push
lds
cltd
fdivrs
sbb
and
outsl
roll
xchg
dec
mov
jp
pop
push
ret
push
sahf
mov
clc
or
add
js
jge
dec
jo
movsl
aaa
movsl
mov
out
sub
lret
pop
mov
add
in
xchg
ljmp
dec
add
xchg
andb
sub
inc
shlb
dec
xchg
adc
push
and
pop
mov
sbb
lods
clc
bound
pop
xor
aam
push
mov
push
hlt
and
test
or
sub
and
xor
loope
xchg
sti
sub
cmp
faddl
adc
mov
xchg
cmp
ffree
pop
fcompl
popa
shll
inc
push
jp
and
and
pop
mov
adc
dec
push
pop
push
jge
mov
jno
xchg
fimull
sub
popa
push
adc
test
rolb
popf
js
xchg
roll
and
outsb
repz
inc
mov
test
in
jbe
cmp
icebp
test
sbb
jo
jne
int
pusha
sbb
cmp
sti
xor
popl
insl
add
mov
cmpsb
jne
jno
inc
mov
xor
fstpl
andl
lock
xchg
rolb
cmpsl
loopne
pop
js
push
arpl
lret
add
daa
xchg
int3
mov
sub
movsl
loopne
loopne
push
subb
mov
mov
aas
fcoml
stc
rcrb
dec
and
outsb
pop
push
arpl
cmc
mov
in
ljmp
cs
fsqrt
popa
adc
in
ds
test
and
mov
pusha
dec
mov
xchg
in
lea
xor
mov
push
dec
or
xchg
pushf
inc
and
sbbb
aaa
in
mov
dec
jb
xor
in
sub
mov
loope
out
sbb
sub
ds
mov
cmp
nop
jecxz
adc
add
xor
out
ljmp
das
sub
xchg
or
lea
cmp
xchg
fcmovnu
jb
pop
jne
outsl
scas
mov
test
xor
mov
pushf
icebp
jge
mov
mov
sar
sub
mov
mov
jl
repnz
pop
push
xchg
jp
ljmp
movsb
mov
pop
mov
packuswb
gs
and
out
lea
fdivr
out
orb
add
push
adc
push
push
fmull
inc
xchg
jl
dec
shl
lcall
add
pop
add
mov
cli
cmp
bnd
int
movsl
outsb
push
xchg
dec
rcrb
adc
dec
xchg
fcoms
ss
sti
mov
imul
mov
sub
sbb
or
fldt
dec
frstor
xchg
arpl
xchg
add
jle
or
sub
adc
aad
shr
jle
rorb
ljmp
mov
inc
aad
mov
xchg
ljmp
shll
sbb
jmp
adcl
enter
out
mov
mov
add
jecxz
inc
stc
rcr
out
aaa
pop
lods
add
adc
sub
scas
push
xor
adc
int
sub
pop
sbbb
fistpll
push
add
pop
sub
jl
in
pop
inc
fldt
mov
cmp
dec
shlb
inc
mov
xchg
cmp
call
les
and
sub
leave
mov
addb
jno
aas
jo
xchg
aaa
cmpsb
mov
movsl
jg
insl
push
xchg
add
xchg
adc
sub
pop
int3
dec
fadds
jle
dec
ror
pop
testw
test
test
mov
mov
rorb
out
push
jno
daa
dec
scas
xchg
and
push
cli
mov
sahf
jecxz
arpl
xlat
pop
sahf
repz
inc
cmp
mov
xchg
mov
rolb
sti
pusha
sub
fdivrs
fdivl
mov
not
mov
push
iret
inc
std
mov
jmp
inc
jb
call
cli
fisttpl
and
adc
push
jle
mov
out
inc
fsts
pop
mov
xchg
jo
js
lea
test
jmp
mull
pusha
mov
sbb
xchg
dec
nop
push
enter
arpl
pop
ljmp
ret
int
dec
dec
js
mov
cltd
sbb
and
and
mov
ret
into
pop
movl
arpl
mov
mov
ljmp
int
or
sbb
cld
aaa
clc
xor
mov
mov
jns
sahf
sahf
mov
ds
mov
int
xchg
jmp
xor
data16
icebp
ret
sahf
rorb
int3
mov
inc
xchg
or
fdivrl
xchg
loop
mov
add
dec
xor
dec
add
inc
mov
add
shrl
fidivl
leave
jb
loop
cmp
or
je
mov
dec
iret
lods
add
xchg
cmp
bound
adc
mov
lret
rorb
mov
leave
mov
lock
and
mov
int3
sub
in
sub
inc
icebp
inc
test
stos
lods
push
scas
lods
add
mov
xor
cmpsb
xchg
je
and
cmp
fimull
lock
adc
lock
cmp
or
cli
mov
fsubr
xchg
jns
rol
mov
push
mov
out
inc
pushw
shll
int
cmp
test
sbb
mov
add
stos
cwtl
sbb
lods
mov
call
or
lcall
mov
fdivs
push
in
adc
outsb
sub
fisubs
rcll
pop
jmp
mov
inc
push
mov
and
pop
sbb
popa
mov
dec
mov
pop
fldenv
sub
pusha
lods
push
jle
mov
xchg
ret
xor
dec
cmpsb
jp
out
js
loope
imul
les
mov
out
ret
cs
int3
fidivs
scas
call
mov
lods
stc
push
fsubrl
in
in
fs
clc
or
leave
xchg
dec
into
adc
lret
xchg
dec
push
loop
pop
test
jae
jnp
scas
test
mov
inc
push
or
xchg
sub
sti
mov
push
push
jp
mov
sbb
or
lods
fisubs
stc
mov
pop
xchg
add
daa
pop
adc
lcall
mov
mov
ffreep
mov
in
in
sbb
outsb
divb
sub
aad
xchg
jecxz
inc
sbb
sti
jb
push
jmp
mov
sub
mov
push
sub
adc
lret
movsb
inc
cmp
es
test
ja
fisttpll
nop
push
push
jmp
mov
andl
xor
test
sbb
jecxz
pusha
push
orb
xor
mov
out
pop
pusha
fcomi
inc
pop
stc
or
pop
jns
mov
push
adc
stos
mov
add
add
pop
push
lea
das
daa
xchg
mov
cmp
xchg
pop
mov
ficomps
pop
adc
dec
les
push
das
popa
sub
xor
and
repnz
aam
xorl
lahf
lock
fcoml
inc
jns
adc
mov
outsl
sub
add
daa
xchg
in
xchg
push
inc
jle
dec
push
cmovnp
xor
lret
push
jle
mov
pusha
sbbl
pusha
fadds
stc
loop
or
add
or
loope
mov
cmp
mov
jecxz
cmp
jns
ljmp
mov
fldt
mov
pop
fisttps
test
popa
push
adc
dec
xor
push
inc
cs
clc
inc
push
cmp
or
dec
fldl
mov
xchg
mov
inc
aam
push
jg
test
jns
pop
repnz
mov
pusha
stos
and
insl
cld
xchg
pop
jae
and
popf
fsubr
rorl
and
push
push
loopne
sbb
mov
xchg
sbb
push
lret
and
push
jne
sub
sbb
cmp
mov
xorl
out
testb
into
shrl
and
flds
xchg
rcll
xorl
into
scas
inc
jnp
cltd
fucomip
xchg
jno
mov
pop
in
or
jle
fisttpl
lock
out
jge
jnp
push
mov
insb
shll
lahf
adc
jae
jno
nop
in
jge
cmp
pusha
adc
lahf
sub
in
and
xchg
or
inc
pushf
dec
inc
ja
jb
mov
mov
idivb
sub
mov
or
jl
xor
out
cwtl
ljmp
loop
inc
loopne
call
loopne
sti
xor
es
cmp
stc
cld
stos
add
jge
je
cmp
shl
cmc
lds
mov
test
mov
ljmp
add
mov
cmp
leave
fnstcw
jle
dec
in
in
fs
xlat
cmp
cmpsl
dec
mov
dec
mov
lret
cwtl
add
fucomp
daa
or
adc
jno
bts
mov
pop
data16
lds
sbb
rcll
and
aas
int3
sbb
pop
dec
movsl
xlat
jb
scas
shlb
fwait
jnp
mov
sbb
mov
loope
cmp
jb
jge
dec
push
shl
mov
fisttpll
lock
pusha
mov
dec
pop
inc
in
test
testl
sub
hlt
push
push
je
and
sar
es
enter
lock
sub
jnp
nop
push
mov
dec
and
movsb
pop
and
and
xchg
cmp
xchg
dec
dec
push
sbb
dec
dec
pushf
in
out
test
addr16
push
aas
out
push
sahf
outsl
fmulp
jne
lds
add
test
fsts
inc
cltd
lcall
sub
push
imul
pushf
loope
sbbb
mov
shrl
sub
jmp
inc
pushf
std
add
or
pop
mov
das
adc
lds
movsb
aas
out
test
imul
not
negl
out
pop
cmc
fidivl
sub
les
dec
fdivrp
and
addl
mov
mov
jae
enter
add
add
cltd
pop
jbe
ror
dec
xlat
jmp
ss
in
sbb
test
adc
loop
xchg
cmp
std
sub
popf
cmp
fs
jne
mov
adc
int
jg
and
pop
xchg
or
push
mov
and
push
in
cld
js
loope
out
push
jp
and
fildl
or
out
stos
xor
scas
add
gs
out
or
loopne
inc
sbb
call
stc
pushf
add
out
sbb
dec
ret
and
in
mov
insl
daa
add
mov
push
and
push
sti
adc
or
add
pushw
and
imul
add
imul
adc
push
cltd
faddp
pop
and
pop
movsb
adc
pop
clc
in
ds
pop
pop
lods
out
or
enter
jnp
je
push
lods
xchg
inc
movsl
adc
sub
js
jp
mov
in
insb
jbe
mov
lea
push
lret
in
mov
or
adc
sub
push
sbb
in
call
hlt
orb
mov
jp
icebp
fldt
mov
test
cmp
stc
or
dec
mov
cmp
mov
jae
addb
sbb
lret
lret
std
pop
cs
pop
lcall
dec
push
fcomps
mov
clc
add
add
or
popa
test
or
xchg
mov
cltd
jecxz
and
scas
sbb
jb
adc
push
jge
jb
lahf
shrl
jnp
dec
push
cwtl
adc
mov
and
sbb
lcall
repz
sub
test
loop
in
xchg
and
xchg
or
adc
repz
xchg
loope
xor
mov
push
int3
test
sub
mov
inc
aam
icebp
fldt
adc
xchg
xlat
ret
mov
mov
out
xchg
pop
push
jl
sbb
cmp
push
outsl
jno
aaa
xchg
enter
leave
cmpb
and
push
mov
push
push
stos
rcll
lcall
pop
cwtl
out
inc
les
cmp
pusha
repz
pop
mov
sub
adc
jp
sahf
insl
gs
movsb
inc
bound
js
pop
fldt
aaa
jae
lock
dec
lret
stos
sbb
cmp
xor
mov
mov
push
sbb
fists
icebp
fldt
xchg
lods
ret
mov
outsb
push
jae
fldl2t
sub
shlb
lret
push
jp
nop
out
aas
pop
and
aas
cmp
adc
jno
rcrb
adc
jbe
push
jb
pop
sub
in
test
lods
lods
cmp
xchg
push
jnp,pt
xor
pusha
or
pushf
mov
ret
adc
xchg
outsb
rolb
addb
insl
sub
mov
sbb
cmp
dec
rcrb
js
push
dec
dec
mov
push
inc
pop
cwtl
sub
add
mov
imul
rcrl
icebp
fldt
adc
dec
xchg
in
loope
inc
pop
xchg
add
push
outsb
dec
inc
mov
mov
clc
or
dec
mov
outsl
fadd
dec
xchg
jno
daa
add
mov
xor
cld
xchg
lods
add
cmp
push
adc
imul
stc
test
jge
sub
test
orb
cmp
cmp
push
mov
add
loop
add
fs
outsb
bound
fs
sub
in
pop
ret
cld
jmp
imul
insl
pop
mov
sbb
negb
jle
dec
out
out
icebp
fldt
mov
or
or
pop
in
cmp
fldt
sub
sbb
xchg
mov
cmpsb
vpaddd
mov
fcmovb
push
shl
add
fiadds
dec
jo
scas
mov
es
stos
lods
cmp
cltd
fcom
mov
sbb
fsubr
sub
imul
inc
rcrl
filds
mov
xchg
data16
mov
out
jnp
add
or
bound
pop
xchg
cmp
outsl
mov
push
fdivl
xchg
loope
hlt
adc
ljmp
es
ficompl
xchg
stos
inc
clc
hlt
cmp
mov
jae
nop
in
aas
jno
mov
gs
pop
cmp
pop
mov
je
subb
loopne
mov
std
push
xchg
rcrl
fiaddl
aad
shlb
pusha
lcall
pop
push
cmpsl
push
xchg
loope
mov
jp
je
js
or
pop
mov
outsl
bound
repz
xor
mov
dec
fwait
push
pop
imul
clc
popa
xchg
push
leave
aaa
outsb
in
out
cmp
xor
jo
jns
je
dec
loop
adc
push
out
push
push
aas
cmpsl
add
push
lods
sub
or
fs
ret
mov
sahf
ja
mov
loop
lds
xor
or
jl
fwait
sbb
fld
outsb
lret
in
fwait
dec
mov
push
test
jns
outsb
dec
xchg
outsb
mov
lret
xor
loop
popa
lods
pop
mov
add
movsl
movb
mov
bound
js
mov
out
repz
movsl
dec
enter
lahf
or
cltd
lret
adc
mov
inc
imul
xor
orl
mov
imul
sbb
test
sbb
ljmp
xlat
adc
mov
add
sub
mov
jne
test
xchg
into
inc
jb
jle
push
add
in
fmull
je
fmull
fcoml
fdivs
je
xchg
pop
pop
in
adcl
xor
js
jmp
xorb
push
cmp
pop
sbb
mov
cmp
mov
lret
inc
or
push
out
hlt
call
dec
data16
outsb
mov
dec
fisubrs
xor
jmp
int
cli
pop
jbe
sbb
fs
test
sbb
mov
lds
fwait
mov
adc
cmpsl
and
test
sbb
xlat
lods
pop
sub
aad
fldenv
lods
cmpsb
jecxz
push
xchg
ds
or
and
cmp
fwait
pushf
cmpsb
and
pop
cmp
xlat
pop
gs
push
dec
xchg
fld
push
jp
jl
push
sub
sbb
mov
shrb
nop
loopne
sbb
xor
lods
into
mov
push
mov
rclb
lahf
aaa
mov
jne
mov
add
or
jo
js
orl
cmpb
xchg
aad
pop
ljmp
lahf
cmc
cmp
adc
jle
mov
jle
dec
dec
inc
mov
insb
iret
pop
lods
icebp
fldt
lahf
int3
push
int3
imul
mov
sub
imul
xchg
out
cmpsb
mov
leave
ret
mov
mov
xchg
call
mov
sarl
jmp
dec
mov
sub
aas
mov
xchg
and
mov
cltd
mov
dec
nop
dec
imul
cld
fistpl
or
mov
pop
pmaddwd
mov
xchg
push
adc
arpl
in
lea
fnstenv
daa
into
mov
dec
jb
ss
pop
sahf
sbb
xor
insl
or
jns
or
insl
and
inc
subb
test
das
ret
les
push
shl
mov
andl
sbb
aam
cmp
xchg
mov
aas
jp
fisubl
pop
fwait
push
xchg
daa
adc
movsl
out
jo
sub
dec
jmp
out
dec
pop
test
les
jnp
dec
lret
inc
lods
stos
pop
xchg
add
push
jnp
mov
in
fadds
pop
xchg
add
test
ljmp
arpl
jnp
leave
lret
add
or
lock
push
outsl
cmpsb
inc
jbe
out
pop
insl
mov
fistps
rcrb
ret
aad
cli
invd
ja
mov
test
mov
mov
or
dec
push
test
ret
jg
cmp
mov
mov
adc
jbe
add
lret
cli
imul
sahf
das
sti
mov
cmp
out
lret
add
adc
mov
push
add
js
cmpsl
aas
bound
xchg
or
stos
shrd
sar
push
jae
dec
loop
cmp
sub
sub
test
cld
loope
sub
pop
ffreep
int3
or
dec
jp
lods
frstor
fwait
shll
mov
fsubs
jmp
sbb
icebp
add
das
xor
xor
cmp
test
mov
sbb
mov
mov
test
mov
and
inc
cld
ja
adc
lret
sti
imul
xchg
outsl
cwtl
add
adc
jbe
shr
pop
test
add
outsb
out
sub
dec
out
ret
cmp
aad
repz
dec
mov
icebp
fs
popa
je
pusha
ret
insl
mov
mov
pop
or
jo
hlt
cmc
cmp
adc
leave
pop
inc
aam
sbb
stos
fldenv
mov
fldt
stos
pop
pushf
jecxz
fadds
movsl
pop
jns
add
ja
pusha
mov
mov
xor
and
lahf
sub
inc
lds
fdiv
out
cld
jl
mov
out
xchg
xlat
jb
fs
xchg
inc
dec
mov
xor
loopne
push
add
cmp
fstpt
push
pop
popf
jbe
add
xor
fwait
cmp
push
call
add
and
lds
lcall
movsb
mov
ljmp
pop
push
pop
xchg
add
je
mov
mov
fcmovnbe
inc
mov
fwait
in
icebp
push
shrl
rorl
dec
mov
fnsave
ret
cmp
xchg
push
jbe
pop
xchg
add
xlat
sbb
sub
adc
or
jno
push
cmp
lds
int3
in
adc
mov
scas
push
sub
cwtl
inc
fdiv
outsl
ret
nop
imul
out
fcompl
push
sbb
mov
lret
shlb
mov
loopne
cmp
es
mov
mov
mov
pop
int3
lahf
mov
test
lods
mov
add
loope
adc
daa
and
pop
shl
stos
mov
sub
dec
add
js
mov
push
insb
data16
push
daa
sbb
xlat
leave
mov
add
jno
call
pop
jg
fwait
xchg
std
adc
jno
push
cmc
inc
in
dec
sahf
jo
jbe
push
adc
xchg
fists
cli
aaa
adc
sbb
cwtl
xchg
mov
popa
test
jl
pop
adc
inc
int3
add
test
add
cmp
jle
out
xchg
cwtl
adc
test
insb
and
sbb
cmpsb
pusha
fwait
stos
cmp
inc
add
clc
shl
test
add
xchg
sbb
lret
mov
ret
push
in
rcrl
jmp
loope
and
inc
fs
inc
pop
inc
imul
and
push
shll
into
mov
scas
cmp
repz
aad
mov
jbe
mov
cltd
sub
dec
pop
push
jne
sbb
mov
mov
popa
adc
jg,pn
xchg
daa
adc
inc
lock
iret
adcl
addr16
mov
fldt
mov
into
scas
sub
mov
daa
test
dec
xchg
ja
es
jl
and
inc
jno
dec
icebp
fldt
inc
sub
dec
pusha
sub
inc
das
icebp
das
ja
jle
stos
pop
jg
sbbb
pop
fs
inc
lods
adc
lahf
xchg
cmp
jb
add
jns
or
mov
cwtl
ss
mov
shrl
lahf
sahf
cs
sub
mov
je
lea
sub
sahf
inc
outsb
movsl
jnp
jns
jbe
xor
mov
xchg
and
or
sub
mov
inc
dec
fsubrl
cmp
mov
fs
loope
mov
jno
negl
add
sub
test
mov
inc
or
xchg
mov
je
sub
sarl
mov
cli
cmp
aad
sub
clc
jnp
sbb
es
sarl
ljmp
daa
sti
xor
es
movsl
mov
mov
xchg
mov
icebp
fldt
out
sub
dec
mov
rorb
decb
sub
popf
jmp
mov
xchg
xchg
fst
data16
fldt
pushf
add
or
scas
repz
stos
sbb
mov
adc
inc
push
dec
rcrb
and
test
and
adc
movsl
aam
xchg
fstps
loopne
popa
adc
jle
mov
adc
daa
insl
cs
loop
or
add
dec
stc
out
push
ficomps
fwait
sbb
and
push
je
movsb
push
arpl
sarl
shrl
cwtl
add
adc
pop
mov
addb
rorb
outsb
fdivr
sbb
push
addb
push
jo
or
fwait
leave
mov
and
stos
pushf
mov
push
fbld
or
test
sti
xchg
dec
dec
xchg
aaa
popl
dec
xor
sub
pop
sbb
popa
adc
sub
cmp
xorl
icebp
fldt
stc
and
mov
pop
stos
xchg
pop
cmp
add
negl
cmpsl
xlat
repnz
xchg
mov
out
add
in
xor
xor
lahf
rorb
sbbb
testl
mov
repnz
into
shr
add
inc
mov
push
insb
jge
movsl
jl
inc
subb
xchg
lods
scas
jl
mov
mul
iret
or
aam
lret
loopne
aaa
mov
xor
cwtl
add
sbb
mov
mov
fldt
sbbl
mov
out
pop
xchg
add
iret
pusha
movsl
sub
adc
adc
popa
js
mov
iret
aas
rolb
shr
lods
sete
xchg
cli
push
jmp
xor
or
mov
pop
mov
mov
or
in
add
pop
rcll
pop
lock
jbe
cld
aas
adc
jge
out
jae
loopne
arpl
xchg
and
or
add
fs
xor
test
mov
jmp
mov
dec
fisttpll
cld
jl
pop
aaa
adc
stc
mov
das
imul
nop
loopne
jno
jne
sbb
out
jp
cmp
dec
cmc
testl
or
enter
ret
fwait
xchg
fistpl
xchg
popf
roll
test
addl
lcall
adc
dec
int3
sbb
or
sahf
push
lahf
cmc
das
push
insl
out
xor
les
sbb
icebp
cmpsb
addr16
data16
jmp
mov
nop
sbb
stc
adc
ret
xlat
xor
hlt
ret
xor
jecxz
mov
mov
mov
shlb
in
push
in
dec
xchg
add
imul
pop
mov
xchg
cs
fsubs
xchg
sub
mov
aad
adc
inc
push
dec
mov
int3
adc
push
pop
je
out
adc
mov
ret
xor
stos
leave
sub
stc
andb
dec
jae
les
fldcw
scas
movsl
scas
pop
adc
mov
daa
mov
cmp
pop
mov
sub
lcall
push
mov
inc
test
sbb
push
xchg
sub
mov
cs
fdivr
out
ss
mov
fistl
push
push
sub
adc
stos
xorb
push
jg
scas
jle
sbb
mov
js
xchg
dec
sbbb
and
pop
popf
pop
out
daa
xor
hlt
push
das
sbb
cmp
int3
sbb
subb
xor
xchg
mov
test
jmp
lea
fldt
lods
enter
test
inc
repz
push
sbb
xchg
into
fwait
inc
inc
aaa
mov
orb
and
sub
sbb
clc
daa
fwait
pop
std
dec
sub
inc
push
lods
shl
imul
mov
push
fwait
pop
jmp
jns
es
aaa
loop
jecxz
cmp
push
push
sbb
mov
push
mov
in
add
int3
fsubs
stos
pop
leave
rcrl
scas
cmp
mull
test
mov
fcompl
popa
sub
add
daa
pop
adc
lcall
pop
xchg
add
shl
add
lret
push
jle
mov
pop
subl
std
out
mov
jg
rcll
xor
out
adcb
sbb
fcoms
mov
nop
outsb
sbb
sbb
rcrl
xchg
cmp
dec
testl
popf
mov
arpl
add
xchg
or
scas
test
push
xchg
fisttpl
or
mov
pop
jge
mov
das
jne
sub
adc
in
sub
mov
fadd
jle
or
imul
push
test
call
mov
mov
xchg
mov
das
jb
test
bound
dec
lcall
adc
lret
jg
mov
gs
xchg
inc
jns
and
sub
idivb
repnz
repnz
lock
loope
dec
aaa
rcrb
sub
sti
insb
and
insb
mov
lahf
jo
jle
out
sub
imul
in
repz
push
push
aam
push
mov
in
cld
insl
push
jge
adc
push
or
inc
jns
sub
imull
adc
xor
dec
lret
rol
stos
push
fstps
lock
lods
pop
lret
push
add
jg
cld
pop
push
stos
loope
xchg
fstpl
sub
xchg
dec
ror
mov
mov
mov
mov
loope
mov
fldt
mov
aaa
nop
cld
pavgb
std
jns
ja
test
je
dec
push
fiadds
xor
nop
jmp
testl
nop
lea
sub
mov
dec
xchg
sub
pop
movsb
or
scas
cmpsb
lds
pop
imul
jg
dec
mov
cli
push
jno
xchg
call
mul
daa
jle
in
lds
xor
insl
jb
fcomp
cs
cmpsb
popf
mov
insl
pop
lret
cmp
aas
cmpsl
sarl
icebp
mov
cmp
sub
or
or
jecxz
dec
xchg
movsl
sub
push
pop
and
imul
inc
mov
mov
sti
jnp
xor
sub
mov
flds
lock
inc
icebp
fldt
xor
lods
jecxz
enter
xchg
outsb
ljmp
lret
inc
lods
stos
pop
xchg
add
push
jnp
mov
push
js
mov
jmp
xchg
push
sub
xor
jg
adc
pop
imul
inc
and
fsubrl
mov
cmp
mov
mov
inc
xor
pop
out
mov
nop
fists
xor
or
fcoms
stos
inc
xor
ja
nop
dec
adcl
std
movsl
add
and
ficompl
cltd
int3
enter
cmp
pusha
jg
sti
push
imul
and
stc
pop
xchg
mov
push
dec
xchg
mov
dec
or
add
mov
dec
aad
mov
pushf
cltd
add
push
ja
clc
test
dec
daa
cmp
and
in
repz
in
sub
sbb
pop
xlat
or
sub
xchg
mov
mov
cmp
inc
stos
out
daa
mov
or
jbe
push
sub
sahf
mov
mov
stc
sbb
inc
xchg
xor
mov
push
jns
roll
xchg
mov
xchg
leave
and
or
dec
mov
and
and
or
add
pop
xlat
mov
fldt
mov
cmp
mov
push
jne
push
nop
mov
xor
movsb
out
sub
mov
fildll
ret
in
jns
sbb
inc
xlat
sub
mov
mov
adc
fisubrs
int3
repnz
mov
sarl
outsb
es
pop
add
dec
push
pop
push
test
pop
or
pop
ret
data16
and
cmp
divb
movsl
lock
sub
rcll
not
adc
mov
fldenv
inc
mov
popf
xchg
inc
jnp
mov
out
sub
mov
sub
adc
ja
pushf
in
mov
mov
inc
int3
out
int
cmp
mull
add
aas
sar
pop
pop
xor
xchg
sub
cs
sbb
push
arpl
add
or
push
mov
lahf
mov
sbb
in
bound
pop
lcall
pusha
pushf
or
testb
popf
push
jne
add
in
loop
or
push
icebp
add
pop
jno
mov
pop
aas
in
ja
fucomip
lret
or
and
mov
imul
loop
xor
or
dec
mov
mov
pop
ja
gs
xchg
popf
push
adc
jl
fcomip
out
and
or
adc
je
mov
jmp
ja
aam
add
flds
xchg
jecxz
fldt
test
cli
repz
jb
out
mov
push
or
push
cmp
inc
bound
rclb
sbb
and
stos
lock
adc
sub
iret
lods
das
shlb
gs
bound
clc
sbb
dec
outsb
stc
cmpsb
or
inc
push
es
fadds
xchg
cld
fidivs
mov
lret
movsb
inc
and
orl
into
inc
push
int3
sahf
cmp
mov
inc
mov
hlt
sub
pop
dec
mov
gs
loop
xchg
push
xchg
out
dec
xor
xor
stos
pop
dec
loop
insb
cltd
mov
cmpsb
adc
jno
cmp
adc
stos
daa
idiv
test
mov
add
lret
es
xor
int
jle
lods
test
fsubrp
shr
sub
insb
lock
jl
push
or
popf
push
testl
adc
rol
and
es
fstpl
adc
and
mov
lret
fldcw
pop
and
sti
inc
mov
cmpsb
or
ss
adc
fldt
push
fsubs
mov
jmp
orb
mov
jno
sbb
stos
out
in
jns
jmp
xor
xor
imul
add
fimull
mov
mov
adc
scas
ss
mov
jo
adc
push
push
xchg
mov
dec
add
jns
lret
scas
stos
jg
int
lods
aam
jl
or
cld
in
lock
xor
imul
cmp
fisubrs
mov
mov
jp
imul
pop
inc
addl
addr16
push
mov
shlb
sub
sti
push
xchg
adc
pop
adc
fnstsw
arpl
add
add
aad
int3
daa
stos
sub
scas
test
daa
mov
cld
es
jge
sti
rep
sti
sar
sti
orb
jb
mov
push
movups
in
and
add
dec
jne
cmp
add
mov
je
xchg
fld
inc
lds
les
icebp
adc
and
les
jbe
stc
rcll
clc
or
xor
xchg
int
retw
popf
fsubr
xlat
ret
in
jle
ror
iret
inc
and
xor
fs
jg
inc
jl
sub
add
jecxz
adc
inc
lret
xchg
add
cmpsb
add
fdivrl
fsubs
test
jl
xor
sti
sbb
or
xchg
mov
imul
dec
subl
cmpsb
pop
sbb
push
cmp
pop
scas
ds
jno
cmpsb
das
inc
jl
cltd
mov
sub
dec
cs
mov
mov
pop
insb
or
arpl
jl
iret
push
cld
sti
xchg
popa
sub
les
test
xor
cli
pop
sbb
leave
xchg
jl
cli
sbb
lcall
lahf
pushf
pop
xchg
add
inc
xor
sbb
imul
cltd
mov
fldt
mov
dec
xchg
insl
mov
sar
jge
dec
lret
sub
inc
aaa
sbb
sub
test
mov
xor
and
in
add
jle
arpl
mov
sub
cmc
mov
popa
femms
jge
lret
std
xchg
repnz
out
fistps
pop
movsb
loop
push
arpl
xchg
ds
das
add
sub
out
das
and
xor
out
adc
divb
push
push
sbb
test
loope
push
push
in
cmp
ret
push
sahf
push
dec
bound
and
push
repnz
add
mov
lds
jl
xchg
aaa
mov
add
dec
cld
or
mov
jge
push
rcll
clc
mov
and
stos
add
ja
mov
lds
js
mov
jno
leave
jmp
adc
out
clc
xchg
xchg
jmp
loop
dec
cmp
fwait
xor
push
add
mov
fisttps
push
jle
mov
out
inc
jae
push
icebp
fldt
js
add
sbb
sbb
movsb
ss
and
cli
aaa
mov
dec
mov
ret
stos
push
shl
loopne
lea
inc
es
jmp
cwtl
push
mov
lcall
xchg
mov
es
push
cmp
inc
mov
xor
lret
mov
xor
cmp
add
xchg
ret
pop
mov
push
pusha
ds
mov
pop
jmp
les
sahf
mov
sbb
stos
ret
les
movsl
push
fcomi
nop
iret
and
rorl
mov
aas
mov
mov
jge
mov
xchg
jns
es
mov
outsl
fcomps
mov
mov
pop
ret
loope
jbe
rorb
xchg
mov
sahf
add
pop
or
sub
sub
std
les
add
mov
ss
add
fcompl
jecxz
insb
mov
mov
mov
loop
pop
lcall
dec
xor
mov
lcall
or
xor
imul
cld
add
adc
pop
dec
mov
insb
mov
mov
cmp
sbb
cmp
xor
ljmp
mov
stos
enter
out
add
dec
xchg
cwtl
call
mov
jno
sub
pusha
lods
jecxz
int
inc
jbe
xor
icebp
fldt
mov
cmp
shl
int
jmp
mov
jno
sbb
sbb
movsl
jg
push
daa
sbb
or
cmp
adc
cmp
test
jmp
lock
rorl
inc
rorl
xrelease
dec
fbstp
xchg
sbb
mov
flds
add
not
adc
enter
xchg
mov
pop
ljmp
dec
scas
sub
aad
or
fsubl
xor
out
pushf
mov
xchg
cmp
repz
movsb
sub
stos
xor
push
pop
lcall
dec
xor
mov
mov
adc
sub
mov
daa
movups
cld
sub
add
sbb
aad
sbb
movsl
insl
jno
jmp
popa
cmp
cmp
daa
cmp
mov
decb
cmpsl
sub
frstor
mov
outsb
in
icebp
out
sub
ret
enter
test
inc
push
mov
test
mov
fadds
pop
dec
xchg
insl
mov
push
subl
fadd
inc
jle
xor
mov
xor
xor
bound
mov
fidivrl
arpl
xor
lods
pop
bound
push
outsb
mov
pop
ja
jmp
sbb
dec
jp
pop
mov
xchg
or
inc
mov
dec
dec
xor
pop
jb
mov
sbb
enter
mov
push
push
cmp
ljmp
data16
cs
repnz
test
sti
xlat
fsubrl
jns
es
rol
cli
jle
pop
and
popa
push
adc
sti
and
dec
repz
pop
imul
mov
xchg
cld
jl
cmp
test
loope
cmp
xor
and
jmp
je
xchg
daa
sbb
cwtl
inc
es
pushf
sub
pop
sbb
enter
fsubs
aaa
jle
dec
add
mov
imul
xchg
xchg
lret
pop
cmc
sbb
sub
adc
and
or
cmpsl
das
imul
jecxz
dec
outsl
dec
addr16
sbb
lret
xchg
dec
xchg
insb
mov
lret
clc
jecxz
stos
int3
lret
lock
add
out
jnp
hlt
in
sub
adc
ds
cmc
fisttpll
imull
inc
fildll
aaa
xchg
flds
fadds
and
dec
cmp
inc
inc
mov
ja
mov
movsl
dec
sbb
adc
mov
cmp
lock
xchg
mov
jp
mov
in
ret
imul
dec
xor
jecxz
das
pop
loopne
outsl
xorl
jne
test
jns
add
pop
pop
jmp
fists
enter
arpl
dec
ljmp
push
sub
outsb
enter
loopne
xor
ljmp
mov
push
negb
sahf
push
rorl
pop
dec
xchg
mov
in
mov
jecxz
aam
xchg
jb
sub
jle
fdivrl
xor
push
test
mov
jbe
out
or
rep
nop
inc
inc
push
cmp
pop
testb
aad
and
inc
or
scas
mov
xchg
addb
aam
aam
pop
and
enter
movl
fldl
cld
dec
mov
jg
arpl
xchg
rorl
cmp
sbb
sarb
xchg
xchg
pop
push
dec
scas
dec
fildll
loopne
or
leave
jp
pop
cmp
mov
repz
ja
push
out
mov
mov
gs
into
mov
lock
pop
adc
inc
shrl
mov
aas
shrb
loope
shrl
dec
cmpl
sbb
adc
dec
clc
mov
sahf
jne
filds
stos
sub
loope
and
cmp
mov
inc
jbe
pop
ja
daa
push
push
mov
mov
bound
xor
pop
stos
loopne
jno
fidivl
jl
insb
jae
out
into
mov
mov
out
stc
jns
roll
mov
sub
jle
mov
pop
icebp
fldt
dec
inc
mov
inc
jo
jl
jge
dec
je
decb
fldt
ds
outsb
push
pop
lcall
dec
xor
xchg
mov
pop
iret
jns
push
int
popa
mov
dec
mov
popa
adc
mov
mov
data16
out
in
or
mov
dec
pop
pusha
xor
jle
dec
xor
jae
push
or
add
int3
or
sub
add
daa
xchg
mov
jge
mov
lods
jmp
pop
test
subb
pop
jle
das
add
mull
xchg
xchg
mov
andb
jb
rcl
xor
push
jecxz
mov
sbb
mov
movb
pop
cmpsb
ror
out
jbe
ret
std
inc
xchg
fsubl
jecxz
jo
dec
jae
pop
mov
dec
leave
stos
lods
inc
in
jae
lcall
imul
test
adc
out
adc
xchg
jb
sub
jle
fldl
icebp
cmp
jl
inc
jns
sub
enter
add
pop
pusha
xchg
icebp
std
push
insl
addr16
mov
out
pop
es
mov
pushf
test
cli
arpl
icebp
and
xchg
pusha
mov
test
mov
xorb
arpl
int3
jmp
fisubs
sub
xchg
leave
and
and
ja
sub
push
jge
mov
mov
push
stos
call
pop
les
dec
xchg
hlt
inc
cmp
adc
push
mov
inc
mov
fisttpl
push
test
mov
dec
icebp
fldt
inc
pop
jo
pop
lcall
dec
xor
dec
mov
sub
xchg
pop
xchg
add
pop
add
xchg
lahf
pop
clc
dec
jge
dec
popa
and
pop
sbb
adc
shrl
jmp
lret
push
jle
mov
in
imul
rcll
cmp
repz
sub
sbb
pushf
stos
push
enter
cmpsb
arpl
cmpsl
sbb
inc
mov
into
cmpsl
dec
inc
adc
push
push
add
push
imul
dec
lret
push
jle
mov
lods
add
adc
sub
lahf
mov
fldt
mov
cmp
jle
pop
xchg
jbe
aas
cli
popa
mov
cmp
mov
rcr
inc
or
pop
sbb
jmp
and
dec
pslld
pop
sbb
mov
jp
or
jae
pop
bndstx
adc
mov
adc
cwtl
imul
cmp
flds
in
cmp
sbbl
push
cwtl
pop
out
sbb
push
stc
mov
aas
cwtl
aaa
lods
lahf
or
lret
pop
insl
mov
push
aad
or
fs
cli
dec
insb
or
popf
sub
cs
xor
aam
and
adc
push
pusha
xor
jb
shrl
repz
cmp
jnp
mov
int
mov
cmp
cmp
stos
js
mov
mov
les
aaa
mov
sub
cmovle
mov
cli
and
inc
mov
xchg
adc
xchg
test
inc
rcrb
test
push
es
xchg
or
fiaddl
inc
push
or
add
clc
std
add
jb
scas
dec
inc
push
ror
and
xchg
and
jecxz
cmp
loop
dec
es
cmpsl
adc
scas
mov
fisttpll
sbb
and
ja
out
and
std
lcall
pusha
push
add
mov
adc
xor
dec
dec
xchg
xchg
xor
out
hlt
jo
xchg
xchg
sub
pop
test
mov
aas
or
shrl
lret
cmp
std
cmp
mov
dec
pusha
xor
mov
mov
movsl
jnp
adc
jge
mov
ljmp
mov
mov
lods
loop
std
push
mov
outsb
mov
imul
jne
cmp
test
xchg
popf
fsubr
or
mov
cmp
pop
xlat
jmp
dec
shlb
or
adc
xchg
insl
and
test
ss
push
mov
dec
mov
inc
cwtl
add
idivl
test
mul
into
or
add
pop
nop
jmp
inc
push
mov
fimull
sub
ss
in
xchg
inc
mov
push
add
out
jge
rcrb
xchg
cmpsb
dec
xor
xor
rcrl
mov
lret
mov
icebp
cld
push
les
in
or
dec
mov
std
mov
push
dec
aas
push
xlat
dec
aas
dec
les
aaa
out
push
sub
xchg
inc
mov
daa
add
xor
and
clc
out
add
push
sbb
stc
test
xlat
stc
inc
pop
or
jnp
jbe
jecxz
cmpsb
jle
jns
jmp
movsb
push
rolb
rcrb
jae
fimuls
adc
std
aaa
popf
pop
pop
sub
mov
inc
cmpsl
push
xchg
jbe
pop
cmp
or
loopne
cwtl
jmp
hlt
cmp
inc
mov
inc
call
into
sbb
repz
lahf
add
mov
add
jmp
cmc
movsb
adc
xchg
jmp
inc
test
repz
mov
inc
hlt
cmp
dec
rcr
hlt
int
mov
pop
xchg
dec
mov
punpckhbw
add
lcall
pop
fcmovnu
repnz
push
adc
stos
cmp
pusha
adc
mov
lret
int3
sbb
xor
push
add
das
fwait
sub
mov
inc
mov
push
div
movsl
push
hlt
push
add
push
mov
push
push
flds
or
gs
sbb
jecxz
subb
enter
popa
scas
xor
lock
rcrl
lcall
movups
mov
jg
loopne
push
nop
inc
testb
lods
fs
xchg
xor
aaa
icebp
imul
repnz
push
xchg
and
xor
and
ret
jl
fistps
add
rcrb
test
les
repz
dec
cmp
cmp
sbb
inc
rolb
rcrb
mov
push
mov
and
int3
jl
mov
cmpsl
ds
repz
pop
or
ja
ja
pushf
sti
lahf
xlat
mov
loope
mov
les
cmp
mov
sub
pushf
dec
outsl
pop
lods
shr
xor
cmp
mov
mov
cmp
push
movsl
add
in
ret
xor
lahf
mov
shrb
push
daa
js
iret
ss
cmp
xchg
enter
mov
push
add
push
jo
mov
pop
or
xchg
fldenv
rcrb
mov
je
adc
sahf
loope
out
pop
sbb
or
cmp
mov
aas
out
aaa
icebp
or
mov
add
inc
div
inc
xor
sbb
imul
dec
xchg
inc
lcall
sti
lock
test
fbld
and
fnstcw
pop
jl
loop
test
lret
jbe
adc
cmp
lds
rorb
sbb
mov
ja
sbb
mov
add
push
and
fidivrl
fdivs
stc
lahf
sub
ljmp
inc
push
add
adcl
mov
sub
mov
xor
mov
cs
cmpsl
fwait
cmp
idiv
loope
add
push
shlb
add
dec
jo
outsl
mov
scas
mov
es
data16
insb
sub
or
fdivl
inc
jns
gs
xchg
and
pop
inc
loope
aad
mov
inc
push
js
lock
xlat
loop
inc
out
xchg
aaa
xor
cmpsb
lods
adcb
rcrb
mov
push
jecxz
cmp
mov
inc
sahf
xchg
or
das
jecxz
repz
ret
ss
xchg
repz
add
xor
test
repz
aad
pop
lods
pop
std
popf
dec
mov
fimuls
push
add
mov
test
es
inc
hlt
push
add
adcl
mov
xchg
gs
pop
andl
aas
shlb
hlt
push
add
lods
arpl
roll
sbb
add
jp
sbb
rcrb
mov
jne
and
repnz
adc
shlb
ljmp
mov
rolb
fnstsw
cmpsl
xor
lods
in
lods
ror
pop
mov
mulb
out
scas
mov
xchg
and
pop
inc
scas
jecxz
pusha
mov
movsl
push
hlt
push
add
push
loopne
fidivrs
cmc
stos
push
or
add
push
sub
cld
xor
test
inc
sarb
and
and
jb
push
cmp
mov
pop
xchg
pop
push
rcrb
mov
push
loope
repz
lcall
mov
inc
mov
mov
lret
xor
ljmp
add
mov
std
inc
jb
cld
add
and
test
cmpsb
push
mov
add
xor
rcrb
mov
push
loop
mul
lock
fcomps
mov
pop
ja
sahf
pop
adc
inc
xchg
inc
loope
js
jne
pop
subb
popa
out
xor
cmpsb
push
mov
cmpsb
push
mov
fmull
mov
ss
int
jne
jmp
mov
pop
pop
or
idiv
shlb
sub
and
lahf
inc
mov
rcrb
mov
ja
mov
pop
js
push
add
mov
aad
push
add
adc
pushf
mov
xchg
cltd
out
and
dec
xor
test
adc
icebp
mov
loop
mov
sbb
ds
xchg
sahf
add
ss
jbe
xchg
repz
add
shll
shlb
hlt
push
add
mov
cltd
or
push
add
inc
aam
jnp
jmp
movsb
push
push
ret
xor
rcrb
mov
push
loop
xor
orl
push
pop
mov
sbb
int3
inc
cmp
mov
gs
loopne
push
scas
sbb
add
add
or
ja
out
outsb
scas
sti
fcompl
dec
mov
stc
xchg
icebp
ret
mov
fcoml
std
mov
push
xchg
dec
cmp
push
add
hlt
xorb
cmp
xor
mov
shlb
hlt
push
add
mov
push
add
mov
test
mov
lods
and
ret
insb
sbb
mov
ret
push
mulb
lahf
aas
sub
data16
cmp
in
ja
insb
mov
fistpll
inc
shrb
movb
aam
or
cmpsb
push
ja
pop
push
notl
mov
fbstp
lods
enter
not
jbe
inc
daa
jge
lahf
in
and
xchg
cmp
fcoms
mov
xchg
out
rolb
adc
sbb
mov
fcoml
and
outsb
fildl
mov
jmp
loopne
imul
fwait
xor
repz
jp
mov
push
add
icebp
adc
push
mov
mov
dec
mov
ja
jmp
adc
add
and
cmpsb
int3
hlt
movsb
adc
push
testb
inc
iret
mov
xor
lahf
or
mov
xchg
push
out
insl
les
movsl
push
dec
outsl
pop
test
push
fisttpll
sbb
add
imul
mov
cld
cltd
rcr
jle
repnz
movsl
pushf
in
inc
mov
out
roll
pop
or
add
scas
mov
sahf
dec
fwait
popf
inc
push
ja
pushf
jmp
leave
pop
adc
pop
cli
popl
push
inc
stos
pop
loope
xorl
sbb
sbb
xor
sbb
loopne
jb
or
stos
insb
xchg
cmp
arpl
cmp
inc
pop
cmpsb
inc
mov
mov
jno
mov
mov
mov
inc
jnp
sbb
lods
sbb
rcl
fbstp
daa
test
mov
movsb
pop
sbb
cmp
and
aaa
xchg
xor
rorl
jmp
cmp
inc
pop
push
ds
aaa
jecxz
pop
movswl
xor
add
and
gs
mov
sar
mov
movsb
mov
sub
mov
xchg
dec
ret
mov
js
sbb
mov
push
fistpll
cmp
pusha
adc
mov
xor
xor
outsb
fcomip
push
add
sbb
sbb
adc
sbb
sbb
jo
jnp
in
popf
xchg
hlt
cmp
shrb
sub
jnp
insl
or
cs
fs
rcrb
test
dec
fmull
out
repz
add
sub
xchg
ja
pop
shll
scas
jl
lret
inc
mov
mov
gs
fsts
lods
push
fidivrl
mov
gs
leave
push
movsb
into
mov
cmp
mov
add
jmp
adc
xor
shlb
shlb
push
add
insl
sti
xor
sbb
mov
push
repz
in
fidivrs
aaa
cld
mov
jnp
pop
aas
out
sbb
add
sub
in
into
add
adc
orl
rcrb
test
inc
cmp
clc
popf
jae
pushf
push
daa
mov
fcoms
push
add
adc
push
inc
rcrb
mov
push
loop
xor
orl
adc
ja
pop
cmp
cmp
pop
hlt
push
add
xchg
add
sbb
xchg
cs
scas
sbb
repz
add
add
push
fsubs
shlb
imul
xchg
sahf
frstor
dec
push
arpl
pop
mov
rcrl
in
test
gs
stc
repz
shrb
sub
cltd
hlt
aas
lcall
nop
xor
xor
push
add
popa
adc
mov
clc
in
test
imul
adc
mov
insl
adc
imul
test
dec
fmull
adc
ljmp
fsubrs
fiaddl
xchg
pop
loop
add
inc
scas
dec
out
lahf
adc
push
add
dec
fimull
rcrb
mov
sub
sbb
out
push
call
sti
andl
shlb
push
or
test
push
or
push
inc
rorl
shlb
test
mov
fidivrl
lret
inc
inc
iret
mov
jnp
jnp,pt
fsts
cmpsl
adc
les
fwait
and
mov
dec
rcrb
mov
ss
fldenv
cli
rcrb
mov
xor
jb
and
xor
cmp
xchg
lock
inc
xor
jmp
xchg
jecxz
mov
jmp
es
mov
adc
movsl
cmpsb
mov
imul
push
inc
rclb
mov
pop
js
xchg
les
insb
xchg
add
aas
popa
fnstcw
into
mov
es
test
repnz
out
stos
push
mov
xchg
mov
xor
lret
ljmp
jbe
jnp
aam
inc
mov
cli
pushf
cli
xor
addl
mov
fdivl
push
mov
gs
jns
enter
fdivrl
cmpsb
xor
test
shlb
hlt
push
add
mov
inc
pop
and
pop
ss
out
gs
ljmp
xlat
sbb
add
test
es
in
loope
icebp
sahf
pop
dec
xlat
xchg
jge
jmp
xchg
xchg
imul
movsb
mov
inc
es
mov
and
adc
push
inc
shlb
hlt
push
add
mov
inc
push
xchg
or
and
fldenv
shlb
hlt
push
add
pop
shlb
adc
orl
loopne
sbb
mov
hlt
pop
fcoms
mov
inc
mov
loope
mov
ja
ret
addr16
jae
fisttps
sbb
lock
or
sbb
sub
div
sub
mov
pop
ret
in
mov
xchg
mov
mov
cmp
sbb
lds
jbe
outsl
xor
cwtl
rcrb
test
dec
fmull
xor
mov
push
gs
int3
sub
fucomi
les
push
add
into
mov
and
cli
call
fucomip
jb
daa
xlat
xchg
push
pushf
lods
mov
aad
jge
insl
add
pop
push
dec
mov
mov
add
sbb
xchg
inc
mov
sbb
fimuls
pop
pop
push
and
cmp
es
lods
imul
fmuls
cmp
cmp
outsl
idivl
ljmp
push
mov
add
cmp
loop
faddp
add
cmp
cs
into
xchg
and
pop
or
movsl
out
lock
stos
mov
cltd
dec
sbb
loopne
add
lret
fs
jno
pop
ret
jae
mov
shlb
hlt
push
add
lods
arpl
sub
mov
lds
and
jno
inc
imul
ret
mov
dec
call
ss
es
daa
insb
in
and
pusha
adc
mov
mov
hlt
push
add
imul
sub
push
add
push
push
imul
push
into
add
data16
icebp
pushf
dec
cmpsb
stos
rolb
dec
in
ljmp
arpl
jne
pop
dec
jbe
not
mov
aas
and
mov
inc
mov
jbe
push
mov
add
sbb
mov
pop
daa
mov
rolb
cld
fcomip
fs
mov
mov
das
pop
push
pop
xorb
adc
mov
sub
jnp
pop
insb
js
dec
insl
and
cmpsb
sub
jne
cmp
pushf
add
mov
out
out
and
adc
out
dec
and
in
xorl
fstpl
sub
je
dec
mov
scas
adc
or
and
mov
mov
inc
mov
stos
imulb
sahf
dec
mov
sti
addr16
cmp
jg
dec
aas
sbb
les
and
aad
jmp
repnz
lds
in
and
ficoms
ret
adc
and
movsl
or
movsb
mov
mov
inc
in
rep
push
or
popa
int
loopne
and
nop
jmp
pop
mov
dec
mov
rcr
jne
push
das
xor
fchs
mov
nop
out
inc
push
add
and
mov
xor
xor
ljmp
inc
ss
xchg
shll
add
in
mov
jge
stos
adc
add
test
and
aam
popf
dec
jg
adcl
out
lahf
jns
and
cmp
jg
add
cmp
sub
incb
jbe
adcb
loop
adcl
xchg
sbb
pusha
adc
mov
das
inc
lret
jbe
pop
aas
popf
or
loope
sub
shlb
imul
cld
xchg
loop
mov
sahf
leave
test
jle
in
stos
bound
fisubrs
mov
inc
mov
ss
mov
daa
xchg
je
fisttps
int
push
dec
xor
sbb
cltd
hlt
cmp
daa
mov
shlb
hlt
push
add
mov
lahf
lret
int3
cmpsb
or
fimuls
push
add
mov
xchg
repnz
out
and
sbb
mov
push
lods
loope
gs
jne
mov
sub
add
add
ds
or
int
xchg
add
scas
pop
rorb
add
jg
data16
shlb
inc
cli
or
mov
loopne
cmp
test
sub
and
scas
icebp
pop
inc
add
sbb
mov
sti
or
sarb
sub
mov
add
lods
into
xchg
jbe
stos
xorb
cmp
and
mov
mov
lahf
int
je
addr16
mov
push
xor
pop
rorl
test
jle
xchg
out
es
out
cmp
add
filds
andb
jp
dec
in
dec
ret
movsb
push
mov
pop
mov
into
jnp
jmp
movsb
outsl
adc
inc
xor
mov
or
mov
pop
or
push
add
mov
jl
ljmp
xchg
lret
mov
sub
lods
scas
repnz
mov
mov
jmp
sub
dec
mov
in
dec
mov
lea
sub
cli
lret
clc
and
inc
push
repnz
icebp
pop
push
adcb
clc
sub
pop
shl
arpl
or
dec
xor
cmc
rcrb
xchg
push
fistpll
mov
ljmp
dec
xor
ret
adc
sub
sub
and
jecxz
cmpsb
lahf
aas
lcall
rcrb
mov
les
shlb
hlt
push
add
mov
push
loop
neg
inc
jne
es
xor
adc
pop
or
mov
cmpsb
dec
mov
mov
jae
sub
movsb
mov
fcoms
mov
and
xchg
lcall
jmp
sub
pusha
adc
and
adc
fisttpl
int3
cmp
ss
or
je
mov
mov
or
inc
and
cltd
add
jb
mov
in
jae
mov
mov
and
cmp
testb
push
add
test
movsb
jle
cmpsl
jno
mov
mov
jo
ljmp
pop
sub
jge
xchg
mov
sbb
xor
dec
fbld
adc
cs
call
pop
leave
push
faddl
test
aam
icebp
push
jo
gs
mov
add
enter
rclb
mov
xlat
out
adc
mov
fs
inc
mov
lds
out
sti
cmp
cwtl
xor
pop
push
xchg
inc
push
adc
sbb
bound
call
cmpsl
pop
das
push
outsl
nop
cld
arpl
xor
test
xor
mov
int
int3
sbb
rcrb
test
outsb
movsb
push
js
jle
mov
mov
insl
xchg
pop
and
adc
insl
insb
mov
mov
add
lods
pop
test
scas
sbb
stc
cmpsl
sbb
test
and
xor
movsb
dec
push
lock
push
lods
sbb
add
inc
sarl
imul
addr16
sbb
sub
sarb
mov
scas
push
push
add
jmp
scas
shlb
jbe
sbb
pop
pop
add
push
add
or
inc
rorl
rcrb
js
out
mov
stos
push
or
mov
and
add
add
sbb
rorl
test
adc
shlb
hlt
push
add
mov
jo
mov
mov
shlb
shlb
jae
js
iret
sub
test
sbb
push
rcr
mov
ret
jae
pushf
leave
outsl
xchg
pop
mov
pop
clc
insb
sub
push
jns
jne
cwtl
cmp
sbb
pop
xor
test
adcl
mov
or
mov
or
inc
test
shlb
sub
arpl
out
mov
stos
or
neg
je
inc
xor
out
lahf
xchg
or
mov
shlb
xchg
pop
xchg
popa
out
pushf
inc
cmp
mov
enter
cmp
sti
shlb
adc
xchg
les
mov
inc
mov
push
add
out
pop
jmp
rclb
jbe
adc
cmp
imul
sub
jmp
subl
andl
xorl
je
and
outsl
jb
call
cwtl
repz
dec
lds
scas
mov
xchg
add
hlt
push
xor
pop
inc
insl
mov
movd
andb
cmc
popf
dec
aaa
out
xor
push
sub
add
jp
push
les
push
xchg
inc
sbb
inc
fstpt
pop
and
adc
lods
pop
xlat
mov
and
scas
mov
cmp
lcall
cli
xor
lret
mov
push
mov
push
out
stc
imul
inc
sbb
jge
push
adc
scas
dec
cmp
jne
loopne
shlb
xchg
cwtl
mov
into
mov
pushw
cmpsb
push
push
push
add
add
addr16
mov
daa
sbb
pop
cs
call
out
mull
add
in
xor
repz
add
test
inc
lods
cmp
mov
inc
popf
xchg
or
dec
icebp
mov
fistpll
hlt
stos
or
shlb
mov
cmp
pop
rol
push
add
push
add
movsb
xor
sbb
test
dec
fdivl
std
xchg
sahf
add
jp
adc
fisubrs
test
ds
pop
mov
ret
pop
sarl
clc
mov
add
mov
cwtl
jb
iret
cs
inc
sub
loope
call
fistl
fwait
popf
or
inc
mov
mov
fldenv
std
and
shl
xchg
push
movsb
inc
add
rcrb
out
popa
mov
mov
addr16
pop
popa
xor
jg
shlb
xchg
cwtl
pop
enter
rorl
int3
inc
cmp
inc
sbb
mov
push
loope
repnz
leave
outsb
stos
add
mov
clc
fs
imul
in
sub
call
mov
mov
add
sub
shlb
mov
or
xchg
and
dec
mov
std
lods
mov
inc
movsl
push
push
aas
data16
fnstcw
jmp
inc
popa
rcrl
mov
jl
xchg
outsl
and
cltd
into
shlb
es
mov
inc
aad
subb
add
aaa
lds
pop
sbb
mov
inc
xor
jnp
in
popf
xchg
add
daa
xchg
xor
pop
cmp
adc
loopne
fiaddl
adc
mov
add
sbb
fsubrl
shlb
mov
mov
nop
push
jb
addl
hlt
push
add
mov
push
add
mov
repz
push
add
mov
das
cwtl
scas
and
cmc
nop
fbld
ja
icebp
cwtl
mov
shrl
add
pop
lods
and
xchg
out
sub
push
jne
das
loopne
cwtl
add
clc
notb
flds
pushf
pop
aad
jae
mov
mov
leave
or
dec
cmp
jg
movsl
jae
outsb
push
add
stos
std
cmp
sub
inc
mov
incl
or
test
cmp
push
adc
pop
je
ja
jmp
push
xlat
int
lods
dec
mov
stos
mov
cmp
clc
cmp
jmp
cmp
add
adc
mov
out
sahf
add
loopne
scas
sbb
mov
fsubs
gs
in
cmp
cmp
pop
mov
stos
loopne
pusha
adc
mov
popf
xchg
add
and
add
push
add
lods
repnz
push
dec
pop
pop
leave
lret
movsb
xchg
xchg
inc
out
dec
dec
loopne
sbb
mov
mov
and
dec
fidivrs
mov
mov
roll
aaa
xor
test
dec
mov
xchg
pop
test
mov
jmp
sbb
dec
and
push
sub
inc
push
dec
or
ret
jmp
dec
xchg
and
or
enter
repnz
or
jne
lret
mov
mov
add
mov
add
sbb
fcomps
lret
imul
ljmp
xchg
mov
jmp
mov
mov
cli
mov
fisubrl
sti
jnp
jmp
insb
adc
adc
cltd
pop
or
sarl
rcrb
mov
test
fisttpl
in
and
pusha
xchg
rcrb
test
dec
fdivl
std
out
pop
test
mov
mov
lods
into
test
fiaddl
mov
inc
imul
stos
rcrl
movsl
in
outsb
push
inc
in
jb
sub
cmpsl
jns
repnz
lret
sbb
test
mov
cmp
jl
pop
ds
pop
hlt
push
add
fwait
sub
gs
roll
aaa
xor
jnp
sub
aaa
in
andl
inc
int
add
orb
shlb
hlt
push
add
mov
push
jo
cmp
in
rcrl
imul
leave
bound
ficoms
mov
fists
jo
movsb
popa
loope
mov
inc
rcrb
test
dec
fdivrl
cmp
pop
hlt
push
add
cmp
in
iret
and
push
add
ds
add
rcrb
mov
add
sbb
mov
shlb
cmpsb
negl
jg
pop
mov
and
sub
mov
and
cmc
xchg
ljmp
aaa
imul
aas
pusha
add
cltd
inc
mov
sti
aaa
lods
and
data16
mov
ljmp
push
dec
and
add
mov
les
xchg
push
xor
sarb
cs
inc
pandn
pop
in
fists
mov
push
in
pop
out
int3
jno
stos
mov
cwtl
iret
scas
mov
xor
iret
xor
mov
sbb
cwtl
das
or
pop
ret
add
je
push
leave
stos
jae
add
popa
adc
shlb
cmp
repnz
std
popf
clc
xor
mov
mov
jae
rcrb
lahf
or
inc
imul
sub
sti
mov
sahf
out
push
fwait
les
cld
inc
mov
xor
fldcw
mov
loopne
aad
cmpsl
loopne
mov
mov
out
sbb
mov
sub
insb
push
pop
sti
stos
xchg
vpmaxub
popf
fisttpl
test
lret
xchg
inc
cmp
sbb
repnz
xchg
push
repz
out
std
jb
jl
xchg
mov
pop
push
es
lret
xor
sub
in
mov
pop
arpl
test
mov
movsl
aaa
jecxz
in
mov
cmpsl
add
mov
lret
xor
xchg
jge
dec
add
insb
mov
stc
fcoms
movsl
imul
rcrb
test
sub
cmp
xor
push
sub
push
add
sbb
push
mov
gs
imul
and
pop
mov
xlat
cmp
and
sbb
xor
mov
ljmp
mov
and
stos
int
xchg
repnz
sub
pop
mov
shll
jle
push
icebp
dec
mov
dec
ficompl
mov
imul
ja
scas
sub
fwait
andl
xchg
rol
orl
sahf
sub
lods
or
fs
push
mov
test
xor
mov
movsl
mov
push
out
push
and
mov
xchg
movsl
dec
mov
jp
sbb
xchg
push
stos
pusha
push
je
outsb
push
js
xor
mov
scas
ja
icebp
rclb
nop
dec
mov
jb
push
rcl
fucomip
addb
lret
xor
sbb
mov
shlb
shl
ss
sahf
add
xor
scas
loope
adc
clc
pop
pop
pop
test
jbe
or
xchg
inc
cs
int3
movsl
mov
test
adc
add
movsb
or
mov
pop
shlb
imul
fistpll
sbbl
subb
lock
shlb
jno
sub
jp
fisubs
shll
std
scas
pusha
cmpb
push
jmp
ja
adc
mov
sub
xchg
repnz
aaa
or
ret
and
push
mov
add
dec
xor
jo
gs
ljmp
cmp
imul
test
in
fistpll
cmc
out
ss
mov
loop
fnstenv
scas
add
xor
cwtl
aam
in
adc
pop
mov
push
hlt
stc
and
inc
xor
adc
mov
xchg
fdiv
sbb
ja
bound
and
push
push
loopne
pop
push
sbb
shlb
and
push
add
pop
or
dec
mov
jno
fidivrs
dec
sub
mov
push
int3
jl
test
jns
rolb
mov
xchg
or
dec
shlb
sbb
test
dec
fdivl
call
repz
loopne
push
and
inc
inc
jg
inc
mov
pop
push
repz
dec
pushf
nop
push
cmp
mov
movsl
and
shl
lods
sub
sbb
test
dec
hlt
shlb
jmp
adc
push
sub
jno
push
out
adc
dec
or
push
inc
ds
insl
jo
xchg
mov
xor
scas
mov
jmp
sti
xchg
clc
adc
cmc
push
pushf
mov
cmc
movhps
stos
jge
daa
or
dec
xorl
iret
loop
lret
inc
lock
pop
xchg
push
pushf
jg
push
ljmp
jnp
ficompl
mov
pop
in
xor
sub
xchg
and
mov
mov
lret
rolb
cmpsb
sbb
lret
icebp
pop
cli
fcmovu
das
iret
je
add
sub
xchg
popf
add
pop
nop
shlb
inc
xchg
mov
ss
add
lahf
dec
mov
cld
push
xor
pslld
mov
jbe
sub
add
ljmp
int
pop
ljmp
fmuls
dec
notrack
pop
mov
mov
dec
sbb
daa
mov
daa
xor
pop
cmp
adc
test
mov
popa
test
call
movsb
into
inc
repz
or
push
cs
repnz
movsb
cld
add
adc
mov
lds
sub
ljmp
stos
aam
ror
das
jecxz
mov
sub
imul
lods
pop
lds
repnz
add
outsb
int3
insb
sbb
leave
mov
ret
clc
shlb
add
dec
xlat
repz
sbb
xchg
xor
push
add
push
jg
push
add
mov
rcrl
sahf
xchg
or
popa
xchg
shlb
test
jno
insb
movsl
fldt
shlb
xchg
push
in
imul
shlb
xchg
test
pop
nop
shrb
add
xchg
add
mov
xorl
stc
outsb
push
js
out
mov
xchg
adc
lock
inc
fidivrs
loopne
out
scas
pusha
push
adcb
jnp
sub
jle
sbb
shlb
and
xor
add
mov
testl
add
mov
lds
push
jecxz
sub
dec
in
ret
sbb
in
ret
sub
mov
sbb
js
in
scas
sbb
jb
jo
inc
cmp
sarb
out
aas
dec
fstl
shlb
and
imul
clc
push
inc
xchg
fimull
jno
arpl
cmp
push
movsb
push
imul
bound
mov
clc
pop
xchg
inc
pop
iret
mov
aam
fidivrs
sub
loop
dec
jbe
fwait
cmpsb
repnz
sahf
clc
insl
xlat
cmp
inc
jae
pop
or
mov
xchg
test
into
mov
push
js
jnp
popf
push
test
jg
xchg
out
daa
pop
out
sbb
pushf
push
jae
lea
push
hlt
ret
clc
cwtl
cmp
adc
pop
shlb
inc
cmp
mov
inc
jecxz
add
push
add
inc
fwait
xchg
or
shll
push
stos
inc
mov
or
pusha
adc
mov
cli
xor
imul
adc
pop
cmp
adc
mov
leave
sbb
fcomps
cld
push
mov
into
jle
sti
pop
test
gs
adc
push
jecxz
imulb
clc
add
in
push
fists
sbb
xchg
aam
sahf
sub
dec
out
dec
mov
dec
fimull
int
push
dec
sub
aad
lret
dec
fdiv
xchg
xor
push
aas
push
add
xchg
in
daa
pop
out
shlb
and
push
add
pop
or
dec
mov
inc
or
dec
jl
subl
and
ds
mov
cmp
dec
sbb
adc
addl
push
popf
push
sbb
outsb
mov
dec
or
or
adc
out
pop
mov
dec
push
negl
rorb
cli
mov
outsl
loopne
push
add
sbb
push
je
mov
aad
push
add
add
outsb
fidivl
hlt
sub
sbb
mov
add
sbb
and
jbe
lret
sub
fs
adc
inc
or
cmpsb
lcall
xchg
fs
sti
imul
xchg
call
adc
inc
adc
mov
pop
xorl
sub
lret
inc
out
test
movsl
push
adc
sbb
push
loope
jnp
jmp
movsb
outsl
adc
push
clc
mov
mov
jge
sbb
jbe
loopne
cmpsl
push
out
mov
scas
repz
add
fnstcw
push
jp
cmp
aad
test
ds
xchg
idivb
pop
mov
push
mov
subl
mov
ds
inc
aas
insb
mov
jg
jp
jmp
mov
js
sbb
call
fdivs
sti
popf
sti
addr16
mov
push
add
les
test
pop
xchg
mov
rclb
add
add
cmpsl
add
fnstenv
xchg
out
hlt
mov
push
addr16
mov
fisubrl
pushf
insb
loope
or
arpl
clc
cmp
hlt
dec
xchg
cs
cmc
andb
jecxz
lods
cmp
pusha
adc
scas
rcll
jno
fisttps
fwait
or
push
add
dec
xor
je
xchg
repz
add
rcrl
jnp
aam
inc
mov
sbb
sub
xchg
and
mov
das
push
fistpll
repz
add
fisubrl
jnp
pop
inc
sahf
or
das
in
xchg
push
ret
das
lea
out
dec
andl
test
pusha
adc
icebp
mov
loop
mov
in
and
add
aas
je
gs
bound
inc
jo
pop
mov
push
and
pop
push
inc
or
sbb
testb
sub
push
jnp
push
adc
rclb
dec
std
pop
movsb
push
enter
mov
mov
mov
mov
mov
xor
jae
aam
xor
loop
add
push
add
jae
xchg
mov
cmp
jnp
push
pop
data16
clc
cmpsb
inc
mov
imul
repnz
xchg
xchg
cmpsl
jb
scas
mov
insb
scas
dec
mov
xchg
or
cmp
xchg
mov
jle
mov
out
out
xchg
push
push
push
cltd
dec
dec
xor
mov
jnp
cmp
icebp
arpl
es
clc
sbb
fisubrs
fists
add
test
cmp
push
cwtl
cwtl
push
es
add
imul
add
ret
in
xor
loop
rclb
daa
push
lods
and
dec
jne
jg
xchg
stos
push
sub
inc
cmp
cld
lods
dec
in
dec
shlb
cmpsl
adc
mov
popf
mov
lea
mov
jmp
mov
clc
push
data16
mov
jecxz
mov
sahf
pop
adcl
mov
push
outsl
aam
mov
test
in
xchg
out
push
sub
sar
insl
or
fidivl
push
loop
fcomip
leave
fs
ret
fnstsw
lahf
icebp
adcb
cmp
mov
jl
xor
scas
cli
jg
pop
jp
call
and
outsl
xchg
jo
xchg
add
jne
aam
into
jle
mov
cmpsb
pop
mov
mov
push
ficoms
jnp
jmp
xor
jmp
cmpsl
in
xor
ret
fadd
addr16
push
jne
cmp
sbb
popa
mov
lea
push
mov
push
add
mov
mov
hlt
push
add
and
into
adc
push
nop
cld
lods
mov
movsb
repnz
sbb
movsb
inc
pop
cwtl
test
jae,pn
jge
mov
ss
lcall
inc
pushf
or
sub
and
subl
lock
xchg
cmpsl
add
outsb
int3
daa
out
xchg
out
pop
push
mov
mov
add
dec
sub
mov
sbb
cmp
jns
cmp
mov
sub
inc
lds
sti
push
or
mov
pop
into
loopne
rcl
in
mov
mov
xchg
fdivrl
cmp
jns
mov
inc
sub
das
loope
cmc
popa
int
xchg
repnz
pushf
pop
add
pushw
xchg
cmc
leave
push
ret
push
xchg
ss
fwait
ss
cltd
movsl
mov
xchg
repz
mov
jg
push
dec
hlt
inc
pop
mov
out
rcl
mov
lock
pop
testb
mov
adc
fidivrl
movsb
xor
push
jp
subps
call
test
pop
mov
dec
into
daa
ljmp
jle
xor
daa
and
sbbl
scas
stc
add
test
xor
or
lea
call
ret
jne
clc
sbb
cmpsb
inc
jmp
inc
sahf
cli
ret
fimuls
iret
cmp
inc
gs
sub
dec
lock
add
test
sub
mov
addr16
mov
cwtl
dec
mov
cmc
xorl
xlat
jp
mov
sub
lock
xor
push
cmp
and
xchg
aas
cmpb
lcall
insl
loop
fsubl
push
push
or
push
jg
das
mov
or
popf
cmp
push
inc
js
sub
push
arpl
pop
lret
shlb
jno
ja
rcrl
mov
sbb
imul
in
sahf
ds
or
sub
mov
aad
or
mov
les
sbb
jl
mov
fidivl
rcrb
mov
push
add
xchg
shlb
xchg
repz
add
int
nop
jnp
and
push
add
iret
je
sbb
cmp
mov
xchg
inc
leave
inc
jmp
test
stos
iret
insl
test
dec
outsb
push
js
imul
mov
imul
or
xchg
jnp
jbe
daa
in
popa
adc
dec
addr16
pushf
pop
sbb
pusha
lock
loop
push
out
fisubrs
insb
sbb
dec
or
pop
leave
push
mov
sbb
mov
add
adc
mov
mov
mov
iret
cmp
inc
pusha
adc
mov
ja
out
or
add
inc
jmp
mov
cmp
in
sub
xchg
rcrb
mov
jbe
jnp
out
lahf
xchg
or
xchg
aaa
cmp
sub
sub
adc
sbb
imul
cmpl
pop
ljmp
int
fsubs
adc
or
jae
inc
inc
movsl
outsb
inc
lea
in
lea
out
sbb
adc
mov
inc
xchg
sub
imul
and
pop
adc
sub
repz
fucomi
ss
aad
push
and
loope
sahf
mov
mov
cmp
cld
pop
mov
mov
popf
or
pop
scas
add
or
lahf
mov
pusha
adc
xor
mul
mov
addr16
std
inc
xchg
cli
lock
xchg
bound
xchg
mov
test
pop
cmpsl
adc
sti
add
pop
inc
mov
test
xor
mov
stos
lret
int
push
adc
and
lret
pushf
xor
std
or
hlt
movsb
mov
pop
subl
jnp
sub
je
jge
test
jbe
das
in
push
xchg
leave
rcrb
jae
fdivrl
cmpsb
adc
adc
mov
inc
cmp
aaa
std
mov
adc
out
mov
mov
sub
enter
data16
out
fcoml
and
jmp
pop
fmull
jmp
scas
and
sub
cmp
sub
cwtl
xor
addl
int3
or
add
fimull
adc
sbb
push
add
xchg
or
ljmp
test
sub
cmp
mov
sbb
inc
loope
xor
fisubrs
push
stos
mov
jnp
adc
test
test
dec
fdivrl
mov
out
push
mov
xchg
inc
test
inc
scas
jne
rclb
or
and
iret
rcll
nop
jp
push
daa
orb
hlt
fwait
jg
jns
mov
fmul
pop
mov
cmpsl
xor
xchg
xchg
stos
ds
or
sub
sub
jbe
daa
push
inc
inc
movsb
fstp
mov
popf
mov
imul
into
inc
arpl
ficoml
fcmovb
pop
mov
call
sub
xor
int
mov
in
jg
mov
inc
std
movsl
nop
mov
xchg
inc
fsubl
fdivp
xchg
adc
adc
xchg
inc
add
sbb
les
pop
pusha
out
add
scas
call
add
sahf
pop
imul
and
and
push
add
jg
mov
aaa
into
daa
pushf
dec
imul
pop
mov
pop
adc
scas
int
out
shll
in
subl
adc
mov
inc
dec
jne
push
out
aas
push
jo
out
out
jl
cmp
mov
or
dec
mov
sub
lock
ret
mov
jg
inc
shlb
and
out
sahf
pmuludq
fisttps
aaa
xlat
xor
fcmovnu
add
clc
mov
std
mov
shlb
hlt
push
add
mov
xor
ffree
stc
lods
pop
sbb
push
pop
jl
sti
call
sarb
fildl
std
shlb
mov
sbb
stos
pop
adc
push
xor
cltd
fbstp
cltd
fidivrs
mov
in
mov
jnp
mov
jb
inc
inc
movsb
mov
es
xor
testb
lahf
inc
fnstenv
jne
adc
cmpsb
jo
or
cmp
pop
les
pusha
shlb
ds
push
mov
push
popa
test
pop
xchg
shlb
aas
sbb
decb
aas
out
fimull
cld
js
cmp
dec
es
push
loope
cltd
mov
or
test
add
pop
in
sub
or
xchg
push
pop
or
jo
gs
lods
xchg
jecxz
pop
iret
aam
xor
mov
dec
dec
sbb
jp
pop
mov
or
adc
dec
enter
fs
ljmp
or
adc
cs
or
pop
mov
mov
sahf
or
ljmp
dec
loopne
call
lret
fbstp
or
add
cmpsl
cltd
sub
iret
das
iret
sub
mov
mov
lcall
xor
outsb
movsl
push
lds
fiaddl
and
cmp
pop
imul
mov
inc
jge
arpl
js
jge
out
cli
shlb
push
inc
mov
pop
pop
lret
xor
xor
call
loope
pushw
xchg
arpl
test
dec
xchg
cmp
repz
cmpsl
push
daa
shlb
xchg
xlat
xchg
and
dec
mov
loopne
xor
movl
or
cmp
or
xorl
xchg
in
mov
mov
in
cmp
int
ds
xor
pusha
sets
arpl
ret
dec
pop
pcmpgtw
dec
mov
mov
xchg
pushw
ljmp
push
push
push
add
mov
push
loop
mull
dec
adc
cmpsl
clts
inc
daa
in
sahf
ds
mov
movsl
xchg
fucomip
mov
pop
jnp
mov
pushf
sub
pop
xor
jge
sahf
rcrb
sub
mov
stos
xor
or
dec
mov
xor
pusha
loopne
and
mov
sub
fadd
and
xchg
push
fistpll
lock
int3
insb
sti
and
mov
jmp
pop
jp
outsl
and
adc
push
lret
imul
lds
cmp
and
xor
into
std
add
fcompl
jl
cmpb
mov
inc
mov
jnp
test
mov
or
fnstenv
addl
repz
xchg
cmp
pcmpeqd
jno
jecxz
cmpsb
jle
pushw
popa
lods
shll
popf
sub
sbb
mov
push
loope
and
jno
repz
add
or
stos
cmp
fnstenv
sbb
add
icebp
xor
mov
jae
scas
cmpsl
inc
in
ljmp
mov
xor
jp
popa
push
xor
adc
add
mov
adc
jns
lods
jle
pop
xchg
mov
push
js
xchg
cmp
fimull
mov
cld
pushf
idivl
popa
mov
sub
insb
sbb
and
jnp
lret
aaa
mov
out
pop
add
sub
imul
popa
lods
sarl
out
xor
imul
xlat
xchg
fcomps
lea
and
dec
pushf
jle
fcomp
sub
adc
pop
sub
jmp
inc
xchg
push
mov
adc
ficompl
outsb
fsubrs
or
inc
fdiv
add
hlt
imul
and
cmp
xchg
dec
stos
mov
and
cmp
push
dec
mov
jge
push
inc
movsb
adc
mov
enter
clc
mov
add
add
pop
inc
mov
fisttps
inc
call
stos
xor
jae
xlat
mov
cmp
sahf
jecxz
sbb
shlb
clc
dec
mov
xor
adc
xchg
je
or
lret
negl
xchg
sbb
inc
std
ret
bound
ljmp
or
in
or
add
mov
sbb
imul
rolb
cmp
cld
rcrb
xchg
cmpsb
or
sub
imul
pushf
inc
jae
in
cmpsl
mov
shlb
push
add
sbb
pop
jl
js
mov
pop
xchg
and
adcb
push
scas
pop
iret
and
mov
and
pusha
jnp
out
int3
jno
ds
fmuls
pusha
adc
mov
xchg
pop
xor
jne
imul
pop
inc
les
je
pop
lods
pop
cmp
movsl
sbb
jnp
xchg
lret
imul
adc
sbb
jo
mov
jb
loop
lods
push
out
jle
fisttpll
push
xchg
inc
mov
adc
iretw
hlt
rcrl
in
xlat
jnp
add
stc
test
jo
lock
xor
and
push
mov
in
mov
xor
imul
inc
adc
fstl
cld
loop
fldenv
dec
xchg
or
idivb
jmp
lods
mov
push
mov
mov
jge
repnz
adc
syscall
jnp
inc
roll
or
shlb
daa
ja
jb
sbb
and
notl
ret
out
push
scas
sbb
jl
rcrb
test
dec
fmull
loop
insb
fdivrs
in
in
aam
mov
mov
cmpsl
outsl
pop
sbb
ret
mov
flds
popf
cmp
gs
subps
xchg
or
mov
ss
sbb
in
pushf
or
dec
xlat
xor
incl
jns
sub
mov
sarl
sar
push
ds
add
fwait
movswl
and
fisubl
jmp
cmp
jno
inc
sbb
dec
mov
jmp
pop
jae
pop
pop
or
cmp
call
and
call
pop
pop
or
jb
into
mov
sub
xchg
xchg
or
sub
ret
mov
sti
loope
stc
outsb
push
mov
test
shll
adc
cmp
xlat
cs
jne
jmp
jne
es
pushf
cmp
in
or
icebp
pushf
movsl
jb
or
xlat
mov
rolb
pop
or
xchg
cmc
loope
fidivl
sub
pop
divb
movsl
mov
test
stos
stos
out
mov
mov
jne
xchg
lock
popa
mov
test
jle
xchg
ja
aad
inc
lahf
or
adc
jecxz
and
pop
sub
out
ret
mov
std
push
push
out
push
xor
leave
mov
jp
jmp
or
fwait
adc
cmpsb
adc
leave
add
aad
xor
jo
gs
lds
movsl
sbb
xchg
ljmp
aas
cmpsb
inc
mov
aad
cwtl
push
out
ss
paddsb
dec
mov
sub
aas
fisttps
push
aam
aas
adc
add
xorb
ljmp
sub
inc
lret
iret
outsl
jg
cmp
adc
movsb
popl
imul
mov
rclb
and
cmp
mov
shll
lret
je
add
xorl
pop
cmp
mov
call
out
insl
add
mov
inc
in
mov
bound
orl
test
push
negl
sub
jle
repz
cltd
inc
or
mov
jle
ss
mov
gs
xchg
notl
test
pop
into
jle
or
sbb
or
iret
mulb
imul
loope
cld
push
ffreep
dec
xchg
xor
inc
add
scas
pop
lods
repnz
ret
mov
add
inc
mov
or
add
jmpw
xchg
inc
xchg
or
scas
clc
dec
inc
jbe
xchg
mov
aas
int
shlb
add
xor
test
inc
shlb
push
add
or
jne
cmp
stos
or
lock
hlt
push
add
mov
fisttpl
icebp
dec
test
stos
lock
cmp
in
mov
shlb
sub
push
add
inc
iret
mov
jnp
jne
jae
mov
push
adc
sub
xor
dec
cmpsb
insb
push
mov
je,pt
cmpsb
and
insl
pop
mov
pop
pushf
and
ret
cmp
imul
mov
or
insb
cmp
inc
insl
cmp
pop
pop
mov
pop
xchg
rcl
dec
mov
mov
pusha
cwtl
lcall
mov
jecxz
in
xor
xchg
cli
cmp
jecxz
and
mov
repz
inc
pop
mov
inc
mov
pop
movsb
inc
scas
or
repnz
es
dec
mov
fwait
xchg
clc
pop
mov
mov
xor
jecxz
into
jle
popa
sbb
mov
or
push
hlt
dec
cmpsl
imul
cmp
aaa
sti
popf
clc
xor
xor
mov
push
repz
out
or
rcrb
lahf
cli
xor
xchg
push
test
sbb
call
js
jb
test
add
sti
clc
bound
in
xor
lahf
aas
lcall
pop
out
add
aaa
cld
in
or
cwtd
mov
mov
lret
xorb
cli
xchg
enter
cmp
sbb
jb
cmp
out
or
xchg
outsb
insl
xlat
and
pop
xor
popf
dec
ss
jnp
lea
sub
dec
xchg
push
hlt
xchg
inc
mov
push
add
icebp
jg
rcrb
mov
push
shlb
hlt
push
add
mov
jl
jge
in
test
sbb
jbe
fdivrl
cmpsb
adc
push
gs
int
pop
sbb
daa
int3
les
call
out
mov
dec
shll
test
mov
push
test
sbb
insb
adc
dec
push
aaa
xlat
inc
xchg
sarl
into
mov
xchg
push
popf
adc
mov
data16
cld
mov
dec
jge
andb
rolb
xchg
cmpsl
fisubl
xlat
xor
lret
push
add
ja
out
inc
xor
add
add
cmp
xor
mov
cmp
jne
pop
cmp
adc
mov
jne
push
add
ret
gs
test
lret
leave
push
notl
adc
lods
cmp
inc
lea
xor
leave
ja
in
dec
xor
pop
pushf
or
pop
shlb
xlat
aaa
push
mov
add
or
sbb
sub
push
or
inc
cs
iret
lds
dec
das
call
mov
jnp
arpl
and
jl
ficompl
into
in
int
pop
roll
fwait
negb
and
adc
xchg
or
gs
insl
push
jecxz
enter
in
pop
out
inc
mov
ljmp
into
inc
cmp
cli
stos
sbb
in
xchg
fistl
cmp
fwait
xor
cmc
rcrb
test
xor
mov
faddl
xor
pushw
mov
and
mov
arpl
lods
loop
sbb
test
outsb
movsl
adc
inc
pop
movsl
les
shlb
add
ja
fsubrp
adc
sub
int3
aam
lods
jmp
imul
or
fadd
and
sarl
mov
jnp,pn
aad
inc
icebp
js
lahf
or
fwait
push
cmc
xor
mov
push
sub
addr16
fnstcw
addr16
bound
pop
shlb
pop
jp
loopne
push
data16
ffree
sbb
test
dec
hlt
int
lock
jb
lret
imul
ja
mov
fs
bound
mov
insb
sbb
enter
mov
xchg
iret
dec
sbb
xlat
cli
cmpsb
jmp
testb
enter
push
dec
mov
das
iret
sub
xchg
and
bound
insb
cmp
mov
clc
jbe
loop
xchg
cs
icebp
js
or
pop
stc
push
fdivrs
sti
push
fadd
push
test
mov
int
push
mov
adc
jl
inc
mov
push
faddp
dec
add
adc
fucomi
rcrb
shlb
movsl
adc
pushf
addr16
roll
out
pushf
rcrb
test
insl
cmpsb
dec
cs
shl
add
cld
mov
call
jecxz
and
inc
out
pop
and
orl
inc
xor
decb
hlt
push
add
mov
cmp
fsubrl
je
inc
addb
hlt
fs
cmp
cwtl
fisttpll
xor
int3
jo
mov
xchg
xor
mov
fwait
sub
push
mov
adc
sbb
mov
lods
icebp
sub
ljmp
push
leave
mov
xor
cwtl
add
push
pop
xor
and
movsl
jnp
mov
jnp
mov
xor
int
shrl
jecxz
xchg
std
std
inc
orb
movsl
insb
dec
movsb
mov
pop
out
mov
clc
push
push
cmpsb
adc
test
stos
ja
mov
sub
loopne
lds
in
xchg
and
mov
inc
popf
xchg
add
lcall
rolb
push
add
jge
inc
shlb
orl
fsubl
daa
ja
rclb
mov
push
add
jo
fistpll
mov
lret
add
pusha
adc
lods
pusha
push
je
dec
fidivl
push
mov
and
sbb
push
add
push
ret
gs
insl
daa
cmp
stc
cltd
ds
lcall
jo
repz
add
sbb
repz
add
add
xchg
xor
inc
push
xor
pop
mov
sub
loopne
rcrb
xchg
ss
add
cwtl
mov
loope
xchg
daa
jns
inc
aam
push
push
test
test
cltd
add
aas
sub
sbb
pop
aam
mov
aad
sbb
mov
inc
mov
push
nop
pop
fsubrs
notl
dec
or
mov
push
jecxz
and
mov
sbb
mov
stos
outsb
push
sbb
sbb
dec
mov
mov
jle
jns
call
outsl
pushw
stos
inc
xchg
out
sbb
outsl
adc
xchg
aas
arpl
mov
dec
iret
jl
orl
dec
push
push
jne
add
popa
cmpsb
push
es
pop
je
and
std
mov
inc
arpl
test
fcmovnb
mov
movsb
fimull
mov
aad
movsb
out
mov
inc
in
aaa
jl
rcrl
xor
mull
or
sub
std
jg
jp
xchg
enter
cld
and
inc
sbb
test
push
popf
pop
or
xor
test
ss
cltd
decl
leave
push
mov
pop
jp
out
ljmp
adc
arpl
lcall
dec
repz
fimuls
mov
shl
jae
mov
loope
in
das
movsb
push
js
or
clc
cmp
jo
and
rclb
loopne
adc
and
inc
push
pushf
ret
loop
in
cmp
xchg
fnstsw
xchg
imul
ret
icebp
jle
inc
jmp
xchg
fxch
enter
push
add
dec
cwtl
fwait
cmpsl
dec
mov
add
jl
sti
jmp
ljmp
inc
hlt
inc
adc
jbe
pop
push
je
mov
cmpsl
cmp
lahf
shrb
jl
jbe
xor
sub
addr16
mov
es
movsb
clc
fs
shlb
xor
lahf
sub
pop
inc
xchg
daa
lahf
inc
cli
aas
out
inc
popf
cmp
xor
imul
or
xor
pop
les
mov
and
mov
cmpsl
enter
cwtl
mulb
cmp
xor
std
adc
sub
mov
push
add
mov
js
sbb
xchg
push
fwait
cmp
pop
hlt
push
add
cwtl
es
lea
les
rcrb
test
xorl
repz
add
loopne
rcrl
pop
fisttpl
vmwrite
je
mov
ss
movsl
fxam
or
push
fidivs
sub
out
lea
jnp
add
and
ret
cs
icebp
dec
add
pop
out
out
jbe
xchg
nop
cmp
gs
push
dec
shll
pop
or
dec
mov
gs
das
cmp
rorl
add
jno
int
pop
sub
jl
or
in
iret
jmp
sarb
jmp
es
mov
and
loopne
out
dec
pop
mov
inc
hlt
addl
test
xchg
hlt
mov
dec
pushf
loope
hlt
xchg
aas
add
lcall
cmc
jo
cli
popa
enter
sub
testb
push
dec
mov
ja
push
stos
cmp
cmp
fldt
shlb
hlt
push
add
mov
push
cmp
test
add
cmp
loope
pop
cmp
inc
mov
mov
mov
rorw
sub
xor
add
fcomps
or
jl
jno
lahf
cmc
fwait
mov
inc
inc
scas
mov
rorb
adc
push
repz
inc
mov
mov
ret
arpl
test
mov
adc
push
mov
pop
cmc
mov
xor
xor
fimull
add
sbb
movsb
push
leave
je
add
lcall
jno
jg
insb
jno
inc
aam
loope
lds
mov
testl
out
adc
xchg
push
adc
stc
es
insl
jmp
nop
mov
popa
aam
jecxz
mov
sbb
test
rcrb
pushf
or
xor
jno
xor
mov
icebp
mov
pop
rorb
add
jo
shlb
hlt
push
add
mov
lods
int3
inc
out
and
lock
cmpsb
push
aam
push
inc
jmp
int3
mov
jl
pop
aas
popf
or
jno
cmp
imul
fstpl
icebp
xchg
rol
fwait
js
mov
scas
cmpsb
aaa
inc
idivl
mov
lcall
loope
je
add
vmwrite
dec
jmp
cld
mov
int
xor
lahf
std
imul
mov
xor
cmc
rcrb
mov
cmpsl
int
and
shlb
push
add
sbb
mov
jl
pop
inc
sub
iret
xor
xor
mov
mov
xor
or
push
and
call
jmp
int3
shlb
hlt
push
add
lods
rcrl
test
mov
and
in
push
dec
jmp
and
jbe
pop
or
add
fs
push
fcoml
sbbl
jp
jne
adc
gs
push
mov
adc
fdivrl
adc
out
mov
mov
add
lahf
dec
cmp
insl
pop
test
popf
or
cmpsl
repnz
push
shlb
int3
rorw
cli
mov
jo
test
xchg
loop
fdivl
jmp
cwtl
int
pusha
add
and
bound
push
add
sahf
sub
sub
dec
jle
add
jno
lds
mov
test
pop
sar
and
and
aaa
sbb
enter
ror
in
jecxz
jecxz
pop
pop
and
dec
cmc
cmp
jge
inc
hlt
mov
pop
test
inc
repnz
leave
sti
xor
xchg
xor
jmp
pop
sarl
fcom
pop
in
add
cmpsl
iret
outsl
test
hlt
movsb
and
push
mov
mov
mov
shll
sub
xchg
sbb
add
icebp
push
testl
lds
pushf
or
repz
add
push
add
push
add
scas
sbb
pop
xlat
leave
daa
xchg
and
sbb
stos
repz
add
out
loopne
fidivrs
lahf
repz
add
fildl
daa
rorl
mov
pop
inc
sahf
stc
xor
jno
nop
mov
mov
dec
fdivl
inc
or
mov
xchg
das
std
inc
scas
hlt
movsb
sar
push
inc
repz
inc
jb
les
out
adc
outsb
mov
mov
lods
inc
mov
push
addr16
mov
fwait
mov
rcr
and
jb
cmp
cmp
xor
pop
xor
sahf
or
or
into
push
test
mov
in
pushf
xchg
fisttpl
lret
adc
je
xor
sbb
xor
stc
je
mov
out
jns
inc
lock
mov
xlat
xchg
outsb
lea
out
aas
mov
jae
sub
scas
rcrb
js
call
fbstp
cmp
mov
push
imul
mov
dec
fisttpll
and
push
cld
mov
fmulp
adc
inc
loope
hlt
stos
or
rclb
mov
dec
xchg
std
mov
xchg
int3
cs
xor
arpl
xor
adc
imul
popa
xchg
jne
push
jbe
fwait
ret
ret
out
xchg
or
inc
jle
xor
pusha
divb
jnp
mov
or
xor
scas
movsl
stos
adc
bound
pop
push
lock
lods
push
out
xchg
cwtl
out
pop
call
push
cld
adc
mov
jae
fdivl
js
adc
lmsw
inc
iret
add
mov
mov
sub
adc
sbb
inc
loope
hlt
stos
or
jnp
jmp
mov
fwait
idivb
xchg
dec
shll
mov
je
pusha
adc
mov
xchg
jle
insl
sbb
loope
sbb
inc
out
pop
pop
or
pop
dec
in
push
mov
pop
sbb
or
out
inc
repz
adc
ret
movsb
adc
inc
lods
mov
lcall
jmp
mov
sbb
fwait
pop
mov
mov
inc
push
dec
lock
cli
inc
inc
pop
sbb
in
sub
jae
in
mov
jl
mov
jge
push
dec
cmpsl
adc
inc
fisttpll
mov
aad
mov
fisttps
out
cld
xchg
mov
xor
dec
call
push
add
incl
push
dec
cltd
shlb
jbe
fstpt
das
mov
fsubrl
jg
inc
je
sahf
xchg
mov
lcall
shrl
shlb
and
int
xchg
xchg
nop
in
fisubs
mov
adc
mov
jns
jae
cmp
int3
sub
cld
jmp
loopne
gs
xchg
or
cld
push
add
cli
cmc
pop
or
cwtl
or
xchg
mov
test
ret
jo
leave
push
mov
ds
or
fs
enter
inc
jno
jo
or
xor
imull
clc
js
dec
stc
mov
out
or
mov
mov
cwtl
orb
sbb
dec
or
pusha
add
icebp
pop
or
dec
mov
fstps
xchg
sahf
or
and
jo
cld
xorb
stos
loopne
dec
in
popf
push
hlt
push
add
cmp
push
pushf
rol
sbb
mov
jb
jecxz
sub
test
mov
cltd
ds
aaa
imul
adc
mov
gs
and
orl
jl
mov
jle
rcrb
mov
push
loope
jmp
push
nop
pusha
shlb
shrb
hlt
iret
mov
aad
nop
int
dec
or
mov
sar
jae
cmp
mov
add
fcoml
cmp
lods
aas
int
pusha
mov
mov
fstpt
ret
gs
jne
lahf
jp
outsl
fs
ret
lea
fwait
int
lea
inc
fistpl
push
ja
pop
mov
push
jl
jbe
test
nop
out
push
dec
jnp
in
sahf
xchg
or
dec
icebp
mov
pop
rcrb
xchg
push
fisttps
xor
dec
cmpsb
imul
outsb
leave
inc
cmp
lcall
and
fwait
inc
aad
out
push
out
push
das
pop
or
mov
dec
jg
mov
mov
outsl
add
mov
mov
jno
fisttpll
mulb
or
in
stos
fs
pusha
xchg
dec
pop
inc
sti
and
add
pop
roll
insb
loope
push
dec
sbb
sbb
push
or
iret
xchg
decl
mov
pop
fstl
or
cltd
or
das
loope
movsl
fisubrs
fistl
out
mov
pop
xor
rcrl
iret
xchg
xor
int
out
sahf
pusha
sbb
loope
jmp
pop
xor
xor
cltd
rcr
push
imul
cld
sbb
adc
or
ret
cmp
push
lret
jnp
and
outsb
sub
dec
fimull
pop
leave
push
cmc
ret
cmp
adc
cltd
add
pop
aad
xlat
jl
sbb
sbb
sbb
das
in
clc
fs
rcrb
xchg
push
stos
bound
fisubrs
jae
sub
cmpsl
pop
imul
xchg
sahf
add
push
cmp
gs
push
ret
ljmp
ss
std
repz
cmp
or
jp
dec
adc
mov
and
jne
jbe
dec
jmp
daa
cmpb
cmp
jecxz
cmpsb
rcrb
mov
ja
mov
sbb
loopne
cld
insl
hlt
push
add
test
adc
sbb
cmp
or
scas
add
xchg
and
lahf
xchg
lds
jbe,pt
stc
mov
sub
or
cmpsl
xchg
sub
jno
setae
shll
lret
mov
push
popf
cmp
or
out
das
aam
xchg
ljmp
repz
repnz
in
pop
inc
aam
loopne
cli
fs
cmp
stos
dec
inc
cs
fiadds
aas
cmc
into
les
fimull
scas
out
add
sbb
cmp
cwtl
scas
pop
sbb
imul
pop
out
lods
or
aad
inc
rolb
or
jle
push
add
mov
stos
pop
int3
dec
push
add
or
into
sub
add
rcrb
xchg
push
fdivrp
lcall
hlt
xorb
push
cmc
movsl
push
hlt
push
add
push
loopne
hlt
jecxz
mov
fmuls
push
add
test
cltd
imul
repnz
push
stc
jae
push
lods
pop
push
popa
xor
sub
aam
cmpsb
sbb
dec
rcrb
push
mov
fs
mov
dec
adc
jmp
adc
sub
cmpsb
jae
sahf
stos
push
or
imul
sbb
dec
pop
pop
std
sbb
or
sub
or
sarl
jmp
pop
out
test
loope
imul
hlt
sub
gs
popa
cwtl
test
mov
dec
mov
add
inc
mov
jne
sbb
mov
add
adc
push
mov
ljmp
dec
subb
and
fstpt
nop
gs
mov
cmp
push
mov
rorb
cmpsb
fadds
and
mov
hlt
mov
jb
repz
imul
inc
lods
dec
icebp
loope
into
xchg
jp
cmp
in
test
mov
pop
inc
scas
or
add
or
mov
shlb
bound
adc
shrl
fldenv
mov
jl
jno
add
leave
scas
or
fdivl
jmp
je
sub
call
jns
stc
xchg
sub
pop
add
rcll
movsl
int
adc
bound
mov
lock
mov
jno
push
cmpsb
push
repz
add
add
subb
adcl
imul
int3
push
add
inc
int3
add
icebp
rcrb
mov
jae
test
xorl
add
outsb
fsubs
mov
adc
sbb
mov
sbb
stos
enter
mov
adc
shlb
hlt
push
add
mov
outsb
adc
push
mov
mov
sub
jno
fisubrs
sbb
mov
mov
mull
call
or
icebp
lret
jnp
jmp
pop
pop
xchg
popa
addr16
adc
sbb
imul
daa
orb
fsubs
shll
ds
not
pushf
and
negl
xchg
xor
cld
lods
sbb
pop
out
mov
loop
xor
mov
call
hlt
sbb
mov
js
mov
pop
test
lds
roll
lods
shll
popf
clc
xor
jo
scas
mov
push
jae
lea
xchg
xor
call
mov
test
push
push
daa
out
fdivl
dec
call
ret
mov
movsb
aas
lahf
mov
sahf
dec
shlb
sbb
mov
or
and
sub
cld
and
pusha
aas
jo
faddl
xchg
in
push
pop
popf
cmp
xor
daa
and
sbb
push
rcrb
mov
push
scas
data16
sub
sbb
je
fidivrs
adc
fs
push
add
adc
shl
add
cld
push
xor
mov
mov
loope
fcomi
xchg
cmp
lret
inc
add
xchg
ljmp
adc
repz
fwait
std
mov
in
clc
fs
push
add
cmp
inc
jne
mov
stos
loopne
sbb
test
push
dec
xor
je
xchg
repz
add
and
xchg
xlat
xor
mov
cltd
shrb
or
jecxz
mov
mov
je
mov
push
or
out
jns
popa
add
loopne
test
sbbb
or
push
js
mov
fistps
enter
out
int
adc
mov
daa
addr16
mov
push
sub
test
sub
xor
adc
dec
fstpt
push
dec
pushf
mov
inc
inc
addr16
adc
insl
sbb
push
das
sbb
andl
sahf
test
pop
jno
mov
cmp
jb
pop
or
mov
pop
jg
nop
repnz
nop
mov
lods
or
js
inc
scas
cmp
cwtl
jnp
out
mov
aaa
std
mov
push
in
and
sbb
test
dec
fmull
loop
repnz
push
jg
push
add
mov
adc
lods
shll
popf
loop
fcoml
lods
mov
hlt
xchg
inc
mov
push
add
icebp
jg
adc
inc
aaa
sbb
xchg
add
mov
dec
fdivr
dec
add
mov
or
push
dec
sti
insb
test
mov
into
jg
or
jbe
fnstcw
jge
andl
jae
sub
loope
dec
fs
test
ljmp
cli
aam
push
out
sbb
add
adc
insb
xor
pop
pop
in
shl
inc
mov
test
mov
push
jb
xchg
int
mov
mov
xchg
ss
xchg
stos
lock
xor
jno
scas
scas
andb
out
rorl
push
aaa
inc
xchg
and
jae
in
in
xchg
stos
aaa
lds
aas
jnp
ljmp
les
cltd
imull
fdivrs
imul
xor
pop
out
shlb
hlt
push
add
test
std
gs
ficoml
jmp
or
push
add
dec
or
repz
add
sub
mov
je
fdivrl
js
sub
add
lds
shlb
hlt
push
add
in
push
mov
xlat
sbb
call
scas
or
push
cmp
cmpsb
push
repz
add
add
je
pop
inc
mov
out
mov
insb
pusha
mov
xchg
lret
mov
call
dec
lret
rolb
mov
dec
clc
push
int3
cmp
and
push
int3
jg
xchg
mov
add
lret
xor
push
out
sbb
xchg
ret
mov
cmp
dec
bswap
in
mov
fcoml
and
mov
repz
cmc
push
mov
inc
test
or
add
leave
add
sahf
sarl
out
arpl
in
xlat
mov
gs
out
and
mov
cmp
repz
test
and
sbb
add
push
in
lods
jg
push
int
in
subl
inc
out
xor
mov
inc
rolb
hlt
push
add
mov
push
xor
pusha
adc
aaa
xlat
ja
cwtl
and
jns
pop
dec
xchg
and
sbb
jo
imul
add
data16
shrb
xor
insb
or
sti
mov
pop
je
pop
sahf
mov
jno
dec
iret
sti
mov
shll
inc
push
sub
and
jge
cwtl
out
lahf
repnz
xor
fcomi
loop
push
add
cmp
sub
fidivrl
jle
rclb
arpl
xchg
outsb
clc
xchg
sahf
dec
dec
mov
mov
test
addr16
bound
insl
or
fistpl
or
xchg
outsb
push
mov
pusha
jne
fistpll
cmp
pop
sub
cwtl
fwait
cmpsl
cwtl
cwtl
push
loopne
jnp
ljmp
push
clc
mov
adc
mov
shlb
cmpsb
out
push
adc
xlat
xor
pusha
adc
mov
jns
jge
mov
adcl
rcrb
je
loop
out
sahf
pmuludq
fisttps
xor
rolb
ret
das
fildll
jne
outsl
xchg
xchg
rcrb
sub
nop
xor
lret
mov
adc
ds
ds
sahf
push
add
aas
out
mov
notb
mov
ss
test
mov
dec
mov
bound
out
mov
jg
cmpsl
jne
stos
adc
mov
aas
stos
push
movsb
fld
gs
fisttpll
mov
jle
push
dec
xlat
or
push
cmpsb
push
repz
add
add
xchg
push
fimuls
push
lods
jnp
lods
fisttpll
pop
loop
fadds
xchg
mov
es
mulb
das
mov
or
lock
int
repnz
imul
out
sub
cli
lcall
dec
push
scas
push
mov
fwait
rcr
and
stos
mov
out
mov
xor
fiadds
push
adc
pop
aaa
jl
push
daa
and
int3
ss
nop
mov
push
stos
add
adcb
dec
orb
sbb
mov
cld
xchg
sbb
js
mov
je
jge
js
jae
fnstsw
cmpsl
xor
movlps
fmull
scas
pop
shlb
and
mov
or
fadds
cmpl
fsubl
adc
cmc
out
sahf
fisubs
cs
insl
sbb
jecxz
add
enter
push
rcrb
mov
push
loope
mov
movsb
cld
xchg
xlat
dec
push
pop
or
test
ret
imul
xor
pop
adc
mov
aad
fnstsw
push
inc
sub
stc
jnp
jo
push
shr
test
test
cmp
sub
xor
push
dec
aas
les
or
push
cmp
gs
jbe
jno
out
lods
push
shr
insb
cli
push
fpatan
mov
in
cmc
stos
or
sub
lods
daa
jge
fisttpll
jne
xchg
imul
pand
dec
outsl
pop
adc
xchg
rolb
pop
mov
mov
cmp
mov
cmpsb
adc
add
cmc
dec
jae
lds
sbb
inc
repnz
das
mov
bound
cmp
xchg
jg
jecxz
stos
lods
mov
std
adc
stos
mov
pusha
lret
mov
addr16
addl
sub
ja
iret
pop
in
ss
enter
xor
sbb
outsb
push
inc
lock
xchg
insb
loope
mov
cmpsl
pop
xor
push
inc
in
xor
push
mov
dec
scas
push
or
mov
mov
jo
and
sahf
ds
sub
or
std
loopne
test
int3
mov
dec
outsb
xchg
add
mov
xchg
lock
out
and
sbb
mov
sub
mov
je
pop
push
jo
dec
repz
adc
popa
shl
push
add
push
jp
cmp
adc
adc
es
xor
push
cmp
xorl
pop
out
xor
xchg
and
or
stc
gs
gs
in
push
pop
rcrb
icebp
shlb
imul
push
pop
stc
aas
stos
cmp
and
cmc
push
and
mov
sar
cmpsb
sbb
imul
or
arpl
popa
xorb
repz
imul
and
lret
xor
cltd
xor
push
mov
outsl
inc
jp
ja
rolb
or
enter
repnz
ljmp
push
sbb
sbb
ffreep
pusha
adc
mov
dec
sub
loope
sbb
imul
mov
or
fnstsw
fiaddl
push
and
call
mov
addl
mov
add
xchg
into
mov
and
jnp
fcoms
push
popf
out
mov
test
loopne
ljmp
dec
scas
fisttpl
add
push
mov
dec
je
cltd
sbb
ret
mull
cmp
nop
inc
shlw
mov
mov
mov
mov
push
insl
and
mov
inc
repnz
sahf
je
mov
pop
xchg
add
dec
push
xchg
xor
mov
pusha
adc
mov
and
cmp
inc
mov
in
repz
push
fists
pusha
mov
hlt
push
add
xchg
movsl
movswl
hlt
push
add
insb
fdivrs
pop
inc
roll
shlb
lea
push
jne
popa
add
add
mov
inc
pop
out
shrb
xlat
add
das
loop
jge
xchg
cld
jg
add
shr
dec
shrb
pushf
ret
sub
sub
pop
stos
ljmp
js
shrb
pop
adc
ds
inc
or
xchg
jbe
je
aam
pop
push
mov
test
cwtl
mov
lods
imul
lods
dec
mov
inc
jmp
adc
mov
mov
mov
adc
push
pop
call
jnp
dec
out
dec
lds
stc
lds
mov
loopne
xchg
dec
mov
mov
imul
sbb
mov
push
fnstcw
push
loop
test
ss
out
mov
push
clc
scas
popa
pop
jne
dec
xorl
hlt
push
add
les
mov
mov
cmp
push
add
js
xorb
sbb
push
mov
aaa
xor
inc
iret
xor
popf
mov
mov
cmp
inc
add
mov
sub
es
popf
mov
and
inc
push
lds
cld
xor
sbb
lcall
jecxz
push
fistl
mov
gs
enter
imul
sbb
jl
mov
cwtl
mov
jp
and
cmp
ret
loopne
xchg
sub
imul
aas
rcrb
xchg
pop
scas
and
xlat
xor
popf
dec
or
addr16
inc
sub
cmp
out
data16
adc
push
adc
and
cwtl
lcall
movsl
adc
test
dec
mov
sub
cwtl
xchg
or
aas
int
shlb
sub
push
add
push
fidivrs
neg
repz
add
cmp
imul
lcall
push
xchg
push
add
nop
xor
jge
ja
jne
fidivs
ret
fcoms
cmpsl
adc
cmp
movsl
add
call
mov
or
push
gs
shrl
fwait
dec
mov
clc
xchg
hlt
push
add
mov
decb
fidivrs
lret
mov
mov
push
mov
mov
int
in
repnz
xlat
mov
dec
cmp
cltd
cli
sbb
cmpsb
xchg
pop
push
shlb
hlt
push
add
mov
push
enter
cwtl
add
mov
xlat
push
popa
out
dec
shlb
rcll
mov
jae
outsl
mov
push
inc
hlt
cmp
ja
cmp
adcb
pop
cs
std
xchg
xchg
mov
imull
jns
leave
jmp
mov
dec
pop
rorb
stc
sahf
loop
testb
jo
imul
adc
pop
popa
or
aam
pop
movsb
in
scas
jbe
pop
pause
inc
xchg
cmp
cmp
in
or
imul
shlb
je
xchg
movsb
les
fists
and
popl
inc
scas
and
daa
sub
adc
push
out
push
cmp
add
lret
inc
aaa
lds
aad
es
test
cmp
lret
test
push
sbb
in
sahf
xchg
or
xchg
add
clc
jae
lcall
adc
loope
stos
pop
jne
pop
inc
lods
cmp
mov
push
add
jge
inc
rcrb
mov
push
jecxz
hlt
jecxz
jo
push
les
inc
popf
enter
lret
cmp
ret
insb
ret
xchg
data16
mov
mov
leave
xor
jle
loope
and
xor
sub
fwait
stc
gs
add
lock
hlt
push
add
mov
jb
shlb
hlt
push
add
lods
shlb
pushf
loope
clc
shrb
repz
add
notb
mov
outsl
mov
mov
xor
lods
inc
dec
ljmp
popf
mov
xchg
mov
xor
es
fsts
push
mulb
into
cmp
cwtl
inc
mov
xor
popa
push
push
add
pushf
push
xor
adcl
push
cmp
add
icebp
enter
mov
aad
jmp
or
mov
in
xchg
enter
ficoms
cmc
outsl
adc
ret
test
push
add
inc
mov
jne
faddl
sub
push
add
addr16
aam
mov
shlb
pop
push
dec
cs
mov
xchg
shlb
sarl
fimuls
stc
popf
dec
xorb
aaa
in
or
jne
shlb
pop
inc
xchg
xchg
cmpsl
mov
xchg
inc
stc
mov
or
js
mov
dec
jmp
dec
loop
xchg
mov
sahf
pop
mov
inc
ss
les
cmpsb
xchg
hlt
imul
jnp
jo
inc
jmp
fnstcw
stos
push
add
dec
mov
shrl
mov
cmp
push
push
sub
movsl
out
mov
adc
aas
cmpsl
test
jp
adc
sub
movsb
and
adc
cmpsl
leave
push
or
inc
fxch
push
xchg
inc
jae
in
xchg
or
lods
pop
push
inc
nop
push
cmp
xor
xchg
ljmp
test
rcrb
test
jno
insb
mov
arpl
sbb
test
lahf
aas
fisttps
sarb
inc
sbb
and
stos
cmp
xor
jecxz
xor
lea
xor
lcall
inc
aad
jno
pop
xor
xchg
insl
or
cmp
xor
add
mov
jns
add
mov
xchg
mov
and
pop
movsb
pop
inc
loopne
xlat
xchg
mov
sbb
icebp
add
call
mov
jb
sub
dec
outsb
push
sub
xor
xor
aaa
lods
sbb
add
shlb
cmp
xchg
and
subb
cwtl
lcall
pop
scas
dec
clc
adc
jne
iret
xchg
shll
jge
sti
push
pushf
or
shrl
into
push
je
inc
push
cmp
mov
push
loope
shlb
hlt
push
add
mov
lods
ret
shll
push
cmc
movsl
test
rclb
adc
js
pusha
adc
push
loope
sbb
aas
sbb
fwait
out
mov
fbld
add
add
or
dec
fdivl
cmp
lret
mov
insl
jbe
adc
xor
ret
scas
push
sbb
fistpll
outsl
adc
inc
test
jle
sub
jnp
imul
xor
mov
jno
sbbl
mov
daa
xchg
mov
aad
ljmp
cs
dec
bound
loop
into
fiaddl
xor
in
loope
enter
dec
or
daa
xor
test
pop
enter
aad
jbe
or
loope
push
pop
add
push
jmp
pop
aam
fsubl
pop
mov
dec
mov
dec
shlb
hlt
push
add
div
cmp
aaa
repz
jae
pop
lcall
add
cld
mov
sub
test
int
leave
jns
lahf
cmpsb
sbb
adc
jno
std
mov
mov
mov
orb
mov
jmp
andl
mov
dec
jmp
out
hlt
insb
adc
dec
outsl
es
adc
shll
mov
xor
out
lock
mov
jl
and
inc
fmul
push
xchg
inc
loope
sbb
arpl
call
sti
jo
sub
push
mov
add
stos
add
lds
fidivrl
call
dec
jle
mov
inc
mov
push
hlt
ret
notl
pop
jo
mov
aaa
xor
push
sub
lret
fidivs
lret
cmpsb
fcmovnb
sbb
mov
push
loop
repz
lahf
add
push
lcall
jmp
fdivrl
repz
add
fldenv
shlb
popl
je
xor
xorl
pop
xchg
and
sbb
add
push
push
push
add
add
xor
mov
add
or
jne
outsl
movsb
shlb
hlt
push
add
test
sub
fisttpll
xchg
lods
shll
or
lahf
pushf
popa
adc
data16
fildll
outsb
sbb
inc
and
shrl
stc
pushw
inc
push
cmp
mov
in
cld
jge
and
je
mov
jnp
jg
xorb
aam
xor
movsb
insl
adc
jg
dec
xlat
or
mov
dec
jmp
add
inc
mov
push
hlt
ret
notl
and
jno
lds
mov
test
mov
int3
inc
push
ffree
xchg
inc
mov
jecxz
dec
stos
pop
andl
aaa
xlat
aas
fidivrs
inc
and
inc
test
ljmp
lahf
mov
imul
sub
push
mov
aad
mov
jnp
jo
mov
into
jnp
ja
movsb
add
xchg
dec
outsb
bound
sub
push
dec
xchg
mov
lcall
jge
rcrb
mov
add
sbb
scas
lds
cld
pop
das
mov
cmp
cltd
adc
or
xlat
adc
out
lahf
add
sarl
outsb
pop
je
inc
fistps
sub
push
repnz
out
dec
fmuls
xor
int3
insb
adc
pusha
out
and
gs
int
xor
fdivs
xor
popf
sti
push
fdivrs
sbb
sbb
sbb
jne
jg
gs
into
lcall
sub
mov
lret
pop
aam
int3
inc
ss
adc
add
mov
js
jecxz
insl
loop
push
push
mov
mov
shrb
xor
movsl
jne
popf
adc
loope
ljmp
push
push
add
loop
sbb
dec
shll
imul
idiv
inc
repnz
sbb
daa
cs
jno
push
rclb
jb
sub
sbb
fnstcw
int
js
addb
mov
fisttps
or
mov
cmpl
rclb
adc
enter
fmulp
or
imul
adc
iret
or
jnp
jo
sub
add
popf
mov
xchg
insl
mov
ss
aaa
adc
or
repz
cli
lcall
xor
loopne
lods
inc
mov
jne
sbb
call
jl
jbe
or
in
scas
cmc
xchg
lock
mov
shlb
push
sub
mov
mov
or
imul
cmp
pop
inc
into
cmc
xchg
lock
sub
mov
mov
aaa
xlat
xchg
xor
jb
jmp
mov
insb
jbe
sbb
add
jno
cmp
jo
mov
cmc
sahf
cmc
pop
jae
and
sub
mov
pop
mov
jle
mov
xor
fwait
mov
inc
repnz
pop
pop
stos
insb
sbb
sbb
inc
mov
lods
lahf
lret
in
dec
xchg
xor
lods
imulb
cmp
sbb
sbb
fists
mov
xchg
mov
mov
and
sbb
test
inc
shlb
mov
mov
xor
add
cmp
and
jnp
out
mov
pop
cmp
cli
stos
daa
repz
cld
leave
xor
lea
adc
leave
stos
pop
dec
cld
lods
mov
shll
cmp
movsl
sbb
xchg
js
cmc
jmp
das
iret
jg
push
divl
rcrb
mov
test
mov
pop
les
cli
and
mov
cs
ficoms
rcrb
mov
add
adc
and
lds
xchg
push
add
ret
rcrb
test
dec
fnstsw
repnz
lahf
add
add
sub
xchg
cld
cmp
insl
xor
filds
daa
inc
sarl
jmp
enter
shlb
shlb
movsb
inc
lahf
xchg
or
mov
push
scas
sbb
cmp
ds
sbb
or
arpl
pusha
xor
adc
negb
sub
sbb
push
push
sbbb
enter
jnp
sub
push
dec
push
xor
repz
sub
cs
add
sbb
push
clc
loop
jecxz
xchg
outsb
push
imul
sub
addr16
cmp
push
jp
je
jns
xor
lret
push
push
add
daa
xchg
and
gs
rcrl
sub
sbb
fiaddl
and
xor
add
sbb
xchg
das
push
scas
sbb
gs
cli
mov
cmp
mov
jnp
je
fidivrl
push
lods
sbb
das
push
mov
xchg
cmp
insl
fidivrs
jl
popf
iret
mov
fldenv
mov
sahf
test
push
movsl
fcoml
pop
cmc
xor
orps
sub
fiadds
xchg
lds
mov
sub
jns
pusha
pop
pop
mov
enter
gs
push
cli
loopne
jnp
sti
pop
iret
aas
xchg
in
les
mov
repnz
xlat
ja
mov
push
jmp
cmp
xor
sbb
cmpsb
dec
fmul
movsl
fs
insl
fldenv
jl
pop
inc
iret
add
pusha
mov
mov
in
fidivrs
imul
nop
push
add
sub
jle
pusha
aad
repz
push
pop
ja
or
pop
cmpsb
cmp
not
sbbb
pop
inc
xchg
or
jo
outsb
pop
cmp
flds
jle
jns
jmp
shlb
push
add
sbb
and
push
push
shlb
insl
add
cmp
push
add
je
mov
push
test
push
mov
into
pusha
int
out
mov
sub
jns
sahf
sub
mov
push
std
sub
push
insl
or
sbb
sub
xchg
cmc
popa
push
std
fsubrs
scas
mov
pop
sub
rolb
xchg
push
mov
mov
pop
data16
aaa
mov
jge
xor
mov
pop
sar
lcall
jp
xlat
lahf
sti
mov
xlat
pop
inc
lahf
or
test
mov
jns
call
inc
push
cmc
adc
mov
sub
stc
adc
fsts
fwait
mov
pop
mov
cmpsb
sbb
xorb
adc
jg
mov
fsubrl
jg
iret
inc
push
xorl
xor
inc
mov
lds
xor
push
jns
insl
les
mov
icebp
jae
mov
cmp
xchg
insb
in
cwtl
out
jnp
test
fstp
cli
fildl
and
sbb
aam
mov
sub
mov
or
inc
das
push
cwtl
subl
push
in
sub
jbe
or
rclb
mov
sbb
pcmpeqd
jge
push
dec
ljmp
inc
aad
shlb
repz
dec
out
mov
out
and
inc
icebp
jg
push
cld
fldl
fstpt
lret
popa
insb
lods
dec
xor
ret
mov
dec
stc
orl
cmp
dec
std
jp
push
inc
lahf
or
je
test
stos
lea
cmp
sahf
imul
test
xor
sbb
rcrb
ret
iret
add
movsl
add
lods
xor
test
arpl
shll
mov
xchg
lock
sbb
sub
lods
dec
cld
insl
mov
sbb
sahf
ds
pop
mov
sbb
fwait
dec
mov
clc
xchg
rorb
jnp
fsts
divl
testl
loope
das
mov
hlt
pop
int3
sbb
addr16
sub
or
stos
pop
pop
mov
pop
lcall
lock
jmp
jno
push
mov
sti
jb
push
popf
or
loop
jnp
mov
add
ret
xchg
fcmovnu
int
aad
adc
mov
cmpsl
rcrb
mov
push
loop
xor
push
into
aas
hlt
push
add
jmp
shlb
rolb
xchg
mov
and
add
add
mov
jae
or
fwait
mov
lock
or
notl
mov
imul
push
jns
in
out
sbb
loopne
mov
js
stos
cmp
pop
cltd
mov
lods
sbb
push
pop
add
lcall
jg
popa
jo
mov
push
test
xchg
mov
fdivrp
xchg
push
mov
ret
dec
mov
adc
and
dec
xor
xchg
inc
sti
jns
inc
mov
xchg
jnp,pn
in
inc
lock
aaa
sbb
and
adc
xlat
xchg
das
mov
fwait
push
push
add
jnp
and
jnp
jmp
movsb
push
cmp
jp
mov
adc
push
xor
pushf
or
dec
out
aad
mov
shlb
hlt
push
add
mov
pop
inc
adc
loope
idivl
movntq
mov
add
mov
mov
push
loope
decl
cmpsl
mov
cmpsl
mov
cmpsb
xchg
dec
mov
out
in
jmp
xor
cmp
fbstp
mov
imul
pop
out
xchg
test
scas
int
cmp
js
push
pop
enter
adc
insl
jne
mov
and
flds
push
push
mov
int
pop
mov
fisttpl
in
xor
lea
push
sub
xchg
and
ret
sbb
or
xchg
or
in
popf
insb
inc
fdivp
shll
int
jne
cs
outsb
sti
bound
jmp
stos
add
pushf
rcrb
mov
add
sbb
fwait
inc
test
js
shlb
stc
das
icebp
pop
in
dec
std
xor
stos
or
ja
jg
and
mov
int
data16
in
fwait
cmp
lods
push
out
das
pop
sbbb
inc
push
xchg
push
xchg
xlat
xchg
and
cmpsl
mov
sub
xor
xchg
imul
fidivl
and
into
xor
sub
xor
int3
pop
pop
sbb
test
jo
mov
shl
push
add
or
adc
sahf
cmp
mov
sbb
test
mov
adc
push
mov
and
lods
gs
sbb
fisttpll
fs
fcoml
flds
mov
xchg
shr
adc
addr16
inc
mov
xlat
fwait
enter
leave
adc
mov
sbb
xchg
push
in
mov
jmp
movsb
imul
imul
ktestb
cmp
pop
or
hlt
push
add
mov
pusha
mov
hlt
push
add
mov
adc
sbb
dec
dec
cmpsl
outsb
adc
mov
inc
lret
lods
sbb
iret
orb
stos
pop
sbb
sbb
and
icebp
adc
push
mov
mov
cli
in
cmp
inc
dec
xchg
inc
mov
fimull
std
inc
repnz
gs
pop
adc
xchg
stos
mov
dec
jae
xor
pop
pop
jno
or
inc
aam
fiaddl
aaa
dec
lahf
mov
lcall
mov
stos
jl,pt
push
inc
mov
inc
scas
sbb
pop
add
std
inc
imul
jne
lods
and
mov
sub
ja
jno
shlb
out
pop
adc
xlat
inc
call
push
mov
xor
in
lea
cltd
lret
ss
aaa
movsb
sub
inc
pop
ljmp
mov
ficomps
shlb
push
shrl
mov
pop
cld
push
cmpsl
sbb
add
push
rorb
sbb
sub
dec
hlt
push
add
xchg
xlat
xor
sbb
test
mov
in
pop
repz
dec
sub
or
xor
jl
sti
js
test
mov
dec
fcomip
push
negb
and
cltd
mov
lods
mov
fidivrs
stos
dec
fisubs
pop
push
ljmp
xor
arpl
test
jno
xor
jecxz
hlt
stos
pop
mov
dec
pop
std
popf
dec
mov
cli
mov
loope
push
mov
stos
pop
cld
jmp
cld
mov
mov
jle
out
sub
sub
inc
sbb
adc
idiv
mov
dec
fisttpl
jno
push
pusha
xchg
cmp
jns
decl
in
mov
js
mov
pop
or
sub
sbb
mov
add
sbb
neg
mov
repz
add
sub
out
and
jno
in
imul
xchg
inc
ljmp
pop
jl
add
das
cs
sub
test
xor
jae
xchg
lret
ret
add
jge
mov
jp
out
lds
or
push
pop
ret
sub
push
mov
cmc
pop
push
mov
jns
in
test
sbb
test
dec
ljmp
lret
push
add
ja
cmp
pusha
adc
testb
adc
fwait
cmp
mov
sbb
xchg
push
fistpll
cmc
lcall
aaa
std
mov
shlb
cwtl
xchg
pushf
cli
lcall
cmp
sbb
or
imul
sub
add
xor
push
xchg
cli
push
imull
xchg
test
inc
and
pop
lods
dec
icebp
test
movsb
pushl
gs
das
mov
or
arpl
clc
test
repnz
jmp
or
inc
mov
pop
inc
shll
add
imul
cmp
insl
jmp
pop
inc
add
jne
xchg
daa
adc
push
sub
imul
dec
test
jno
add
andl
les
pop
xchg
daa
pop
mov
mov
fiaddl
xor
int
push
add
or
jle
cmp
lock
inc
cmp
int
jl
jmp
mov
adcl
pop
inc
out
ret
sub
dec
jg
sbb
dec
dec
data16
jae
dec
pop
stos
cmpsb
fwait
jb
pop
clc
bound
xchg
mov
lock
es
movsl
rolb
pop
jne
outsl
pop
shll
pop
scas
sbb
sub
mov
lods
fcompl
mov
inc
hlt
rcll
dec
sbb
addr16
xchg
aad
test
adc
lcall
xchg
insb
fiaddl
shrb
inc
mov
cmp
sub
mov
mov
adc
cltd
imul
adc
js
jmp
je
xorb
jae
sbb
xchg
push
fisttps
jl
mov
arpl
sbb
dec
shlb
pop
test
shll
jae
or
push
add
mov
sarb
mov
lods
fbld
les
jo
rcll
shll
cmpsl
push
mov
mov
xor
cmp
cli
sti
and
mov
xchg
xchg
sbb
cmp
sbbl
mov
push
ss
mov
pop
xchg
xor
pop
cmp
jbe
aad
xor
xchg
jecxz
fsub
js
stos
inc
mov
shll
xchg
loope
mov
or
leave
xchg
push
or
mov
xchg
mov
lods
cwtl
test
inc
icebp
lods
xchg
push
lret
sar
jmp
dec
nop
mov
shlb
xchg
movsb
dec
mov
popa
mov
adc
mov
insl
and
ja
jno
mov
and
inc
dec
push
fcompl
sub
test
aad
rcrb
lahf
aas
out
pusha
mov
or
out
mov
push
ja
movsl
sbb
je
movsl
sbb
push
scas
popw
or
cmp
mov
out
aam
call
shr
ss
loopne
jnp
out
mov
push
hlt
ret
inc
jbe
sbb
nop
xor
shlb
hlt
push
add
mov
xor
xor
push
add
sub
xchg
add
push
mov
sbb
jge
push
and
or
dec
push
sub
push
lahf
lret
sub
add
scas
ret
xchg
and
gs
sub
fwait
shll
jbe
push
andb
jne
fmull
sti
dec
and
xor
cmp
xchg
jl
inc
nop
shlb
xchg
ds
jmp
jp
xor
jno
imul
xor
mov
xchg
clc
cli
dec
gs
xchg
repnz
jmp
adc
mov
fsubr
imul
xor
arpl
mov
inc
hlt
popa
mov
or
dec
clc
mov
xorb
dec
cld
inc
icebp
in
sahf
adc
push
dec
push
mov
mov
mov
mov
pop
jns
dec
outsb
inc
out
jb
sbb
cmp
lcall
rcrb
mov
jne
jnp
push
mov
call
movb
inc
lock
in
xchg
xchg
out
scas
dec
push
inc
fwait
adc
andb
test
pop
inc
or
dec
insl
or
mov
sub
push
fs
daa
push
ja
dec
scas
inc
test
lcall
and
popf
jge
inc
push
je
jg
push
jb
dec
jmp
scas
in
faddp
insb
stc
dec
scas
pop
shr
jbe
mov
dec
in
xchg
sub
pop
or
sbb
xchg
adc
push
loop
rcpps
shll
popf
sub
mov
inc
in
dec
and
stos
push
stos
bound
scas
pop
add
sti
fwait
inc
in
and
sbb
jno
adc
xchg
imul
push
mov
mov
push
add
xchg
rcrb
mov
jae
into
inc
aaa
mov
ds
int3
pop
pop
outsb
cmp
sbb
test
mov
push
popa
mov
sti
lret
dec
cmpb
inc
scas
hlt
xchg
out
and
and
xor
int
push
add
or
dec
cmpsb
inc
mov
shlb
push
add
sbb
adc
add
pop
and
fstpt
fnstenv
mov
rcrb
test
insl
mov
clc
fs
push
vsqrtsd
pusha
adc
mov
pusha
adc
mov
push
add
mov
lds
hlt
push
add
pop
mov
cmp
std
rcrb
xchg
pop
mov
jns
insb
mov
scas
sti
mov
mov
repz
in
movsl
mov
mov
xchg
aaa
lcall
scas
xor
ret
and
in
sub
cltd
push
testl
cmpsl
into
outsb
leave
inc
sub
xchg
add
pop
sahf
dec
js
cmc
adc
imul
sub
pusha
sub
or
mov
fildll
pop
std
aaa
or
mov
test
xor
jg
xlat
xchg
push
gs
int
nop
jnp
jmp
movsb
imul
jmp
shlb
fidivs
outsb
int3
cmp
jae
adc
fs
push
add
adc
mov
push
loope
add
ret
dec
fiadds
into
push
cli
into
mov
push
fnstsw
push
dec
cmpsb
adc
push
xorl
jg
sub
mov
dec
mov
xchg
mov
inc
lods
jecxz
and
inc
out
jmp
sbb
inc
rolb
int
enter
decb
mov
js
loop
jl
cmp
dec
out
dec
shll
test
outsl
cmpsb
fsubs
jnp
lret
cmp
xor
xor
add
jnp
in
sahf
xchg
add
push
mov
pushf
dec
mov
stc
xchg
push
add
mov
inc
cld
fwait
popa
xchg
cwtl
push
mov
gs
lret
or
jg
je
xorb
add
adc
jns
jae
pushf
push
stos
adc
or
imul
jne
xor
sub
lock
jg
add
orb
mov
xchg
out
jmp
sarb
in
and
jno
pop
xchg
pop
mov
lods
pop
cmp
pop
mov
mov
pushf
bound
jnp
das
dec
sub
cltd
and
dec
int3
cs
mull
jo
pushl
aas
out
sti
mov
dec
pop
add
xchg
mov
lods
cmpsl
inc
jns
dec
cmp
push
popl
cmp
jl
jle
stc
outsb
xchg
out
cmc
out
or
inc
inc
inc
push
inc
lds
ds
test
xchg
and
jb
mov
inc
mov
imull
leave
ja
fwait
mov
test
dec
repnz
idivb
inc
imul
rcrb
mov
add
sbb
arpl
repz
add
adc
aam
xchg
jnp
jmp
rcrb
xchg
push
filds
xchg
divb
stos
icebp
pushl
mov
jne
lock
stos
pop
cmpl
sub
cmpsl
mov
repz
aad
lret
cmp
ljmp
cwtl
jle
sti
cli
dec
cmp
sahf
leave
sub
xchg
and
aam
sbb
pop
repnz
daa
int3
int
push
mov
ljmp
test
icebp
xchg
inc
mov
mov
sub
sub
mov
int
push
jl
xchg
inc
addr16
fistps
inc
rolb
repnz
xor
inc
ss
cmp
sub
sarb
or
iret
jo
popa
xchg
lret
lret
imulb
mov
xor
std
faddl
inc
xor
stc
gs
das
mov
or
stos
or
dec
mov
hlt
movsb
adc
push
fists
sub
dec
ret
lods
idivl
mov
fwait
adc
and
int3
mov
push
imul
test
dec
jmp
mov
jnp
mov
pusha
adc
mov
and
js
jg
movsb
jno
dec
cld
mov
jbe
jbe
pop
mov
fisttpll
bsf
mov
fmuls
stos
subb
cmp
or
xlat
dec
add
test
add
push
fwait
dec
jo
into
insb
mov
lcall
int
repnz
fwait
addl
lock
cld
loopne
daa
xlat
jne
mov
sarl
lock
movb
movsl
out
shlb
hlt
push
add
mov
push
lcall
ret
xchg
test
sbb
pop
or
pop
jno
adc
push
add
jge
mov
repz
push
ret
and
mov
mov
subb
mov
movswl
dec
mov
sbb
cmpsl
xor
ss
dec
jmp
or
add
fmull
clc
int
pop
lea
int
jge
stc
or
sub
xor
mov
push
sub
xchg
mov
sub
stc
xor
push
push
jo
loopne
je
cmp
cmpsb
add
outsl
int
ja
jb
push
jb
stc
dec
or
movsb
push
fwait
jnp
pop
inc
xor
cs
cmc
cmp
xor
pop
imul
push
pop
rolb
xchg
jnp
mov
xor
push
jbe
adc
int3
roll
cwtl
cmp
push
inc
and
xchg
mov
out
mov
sbb
inc
mov
idivb
ucomiss
and
jbe
mov
insl
popa
rorl
push
cli
add
or
mov
enter
repz
mov
test
jb
xor
jae
push
loop
iret
ret
neg
fsubrs
hlt
movsb
dec
jmp
pop
mov
negl
dec
dec
mov
and
lock
pop
cmp
dec
in
pushf
or
dec
xlat
mov
or
lock
popa
lret
lock
pop
jmp
nop
lret
jnp
lock
xchg
std
popf
inc
add
test
das
je
and
in
and
mov
sarl
fs
cwtl
cmc
out
aaa
pop
adc
movsl
pop
dec
loop
cmp
mov
cmp
sbbb
add
add
jnp
and
leave
imul
outsb
int3
cmp
adc
aad
sub
mov
mov
dec
fiadds
aas
shlb
leave
movb
shr
mov
mov
arpl
test
pushf
stos
shl
scas
aad
xchg
dec
sub
loopne
bound
hlt
fsub
fists
xchg
jecxz
jns
outsb
push
in
stc
outsb
push
jg
mov
inc
jl
and
andb
in
push
fnstcw
xor
push
xor
mov
dec
std
pop
inc
push
mov
jne
lcall
lcall
shlb
jae
sahf
insl
insl
xchg
faddp
mov
ja
xor
cmp
test
in
cli
fs
mov
sub
inc
mov
push
stc
outsl
lret
fcomps
cwtd
jb
iret
push
inc
pushf
add
or
sarb
das
in
adc
sub
out
cmp
jl
popf
repz
add
fldenv
shlb
hlt
push
add
lods
shll
popf
loop
fdivl
stc
roll
les
mov
lret
add
clc
into
push
fnstsw
mov
std
or
mov
mov
jge
mov
popf
mov
pop
iret
xchg
inc
add
rclb
stos
adc
fwait
push
sbb
jmp
xor
cmp
arpl
gs
addr16
ss
stos
mov
sbb
imul
pushf
dec
mov
jb
inc
jecxz
dec
aaa
pop
test
jge
xchg
into
jl
lods
mov
inc
pop
sahf
adc
ljmp
or
and
push
loop
inc
xor
sbb
aad
jle
lods
mov
stc
cltd
add
inc
dec
js
push
xor
mov
push
xchg
inc
inc
push
cmpsl
lcall
bound
xchg
aaa
inc
sbb
dec
mov
dec
rcrb
mov
push
scas
sbb
jae
cmp
lret
shlb
hlt
push
add
lods
rclb
adcl
cmpsl
or
add
push
popa
ss
test
ror
lock
dec
lea
jmp
loopne
inc
pop
add
das
cltd
call
xchg
fdivl
cld
dec
shl
ljmp
inc
pop
movsb
cwtl
dec
inc
in
cmpsb
insb
inc
cmc
pop
dec
and
in
std
pop
xor
adc
imul
bound
mov
pop
jmp
push
cmp
out
call
pop
inc
mov
sti
outsb
nop
xor
bound
addl
fldl
jg
fmull
jbe
ljmp
aam
sbb
les
addl
fists
fimuls
push
add
repnz
xchg
fmull
repz
shrl
insl
dec
pcmpgtw
cwtl
int
gs
and
ds
mov
adc
jl
aas
jnp
jmp
insl
mov
shrl
loop
js
repz
add
and
pusha
adc
mov
les
mov
shlb
sbb
test
inc
int3
scas
cmp
mov
push
push
add
cmp
pop
push
push
add
xor
jbe
daa
xchg
inc
xchg
mov
pop
clc
jmp
shlb
and
dec
lds
repz
push
shlb
inc
out
or
or
scas
in
gs
insb
cli
lcall
mov
subb
sar
subb
lds
roll
out
mov
mov
or
movsl
ret
loopne
cld
or
into
arpl
loope
mov
int
inc
push
fbld
pop
mov
mov
jno
xlat
dec
hlt
push
add
test
push
dec
xor
rolb
shrl
mov
hlt
in
mov
add
sbb
cmp
dec
ret
jae
in
pop
movsl
ljmp
push
push
pusha
dec
enter
xchg
cwtl
cmp
mov
repz
fmul
mov
mov
mov
mov
cmp
fsubrl
or
and
sbb
xchg
test
jecxz
enter
rolb
mov
inc
dec
jno
xchg
mov
mov
call
adcb
sub
pop
pop
or
lret
dec
int
aam
lods
mov
jae
outsl
push
cmc
xchg
inc
mov
mov
mov
pusha
adc
pop
int
push
add
or
dec
clc
jg
mov
dec
scas
add
jo
inc
and
xchg
lock
enter
and
jl
pop
shlb
jbe
in
jl
pop
loope,pn
cmc
popa
int
adc
lock
dec
rclb
sbb
enter
pop
inc
mov
jae
sbb
xchg
adc
aad
lahf
sub
mov
push
lock
jno
mov
mov
jnp
rcrb
mov
sub
sbb
and
push
add
pusha
add
icebp
pop
jmp
rcrb
mov
push
cmc
movsl
push
hlt
push
add
push
loopne
icebp
fisttpl
int3
cmp
adc
sbb
jbe
jnp
iret
inc
dec
outsl
in
out
cmpsl
pop
dec
jns
fdivl
mov
std
lods
repnz
xor
in
add
sbb
daa
orb
shlb
hlt
push
add
mov
movl
adc
jp
and
cli
int
pop
shll
cli
inc
fisttpl
ret
jne
cmp
fsub
loopne
inc
dec
mov
sbb
stc
push
mov
push
jae
std
mov
daa
insb
sbb
fnstcw
pop
or
sbb
push
shrl
cwtl
fildl
rcrl
test
imul
in
popa
cmpsb
fxch
faddl
push
pop
sahf
or
push
and
or
pop
sub
xor
adc
mov
cmp
pushf
add
pop
andl
test
fidivl
scas
and
shll
adc
insl
or
pop
cmp
fwait
mov
shlb
aad
insl
push
in
mov
xor
mov
jae
adc
xor
push
add
pop
xlat
leave
daa
xchg
ljmp
xchg
inc
clc
lds
pusha
sti
test
call
fsts
mov
sbb
mov
add
insl
mov
repnz
or
mov
idivl
dec
sub
shrb
into
outsb
push
cs
add
lret
pop
mov
sbb
test
outsb
mov
and
mov
pop
std
jo
iret
sbb
and
mov
ret
ljmp
scas
xchg
cmp
lods
shl
push
push
add
and
arpl
push
into
mov
hlt
mov
xchg
shrb
fldl
mov
pop
rcrl
out
dec
aas
test
push
xor
cmp
pusha
adc
mov
imul
or
test
shlb
gs
adc
xchg
pop
in
inc
int
xchg
or
push
add
inc
lahf
xchg
add
pop
mov
in
or
dec
mov
daa
pop
js
xchg
xor
dec
fists
inc
dec
pop
arpl
mov
cmp
mov
push
shrl
rcrb
mov
xor
das
fs
fcoms
imulb
fwait
pop
js
test
xchg
in
fmuls
mov
iret
notl
mov
sbb
inc
aaa
out
movsb
jmp
inc
hlt
mov
add
push
lcall
add
orb
xor
xchg
sbb
push
je
lret
ss
repz
sbb
lds
push
dec
decl
nop
in
mov
out
popf
insl
pop
test
xchg
xchg
in
pop
inc
and
popl
jae
insl
loop
dec
pop
fists
icebp
add
dec
mov
xchg
inc
inc
add
sub
repnz
int
dec
mov
imul
jmp
mov
cmp
sti
mov
ljmp
jb
sbb
lds
mov
inc
lods
adc
inc
into
add
sbb
test
je
mov
popf
xchg
and
aaa
hlt
cmp
scas
push
jl
add
cmp
inc
sbb
xchg
push
fistpll
mul
mov
shll
mov
pop
cli
cmp
and
cmp
sahf
popa
xlat
dec
cld
xor
je
push
mov
loopne
mov
dec
imul
add
lods
pusha
push
je
outsb
mov
lock
xchg
notl
mov
pop
mov
loope
pusha
adc
lods
sbb
push
fimuls
inc
pushf
sti
fbstp
mov
and
pop
dec
cld
adc
imul
leave
inc
pusha
adc
mov
or
jns
gs
cmpsl
push
enter
cwtl
add
inc
jp
add
insb
lret
stc
shlb
hlt
push
add
mov
push
fwait
shlb
movsl
fiadds
cmp
insb
adc
jge
mov
lahf
cli
ss
fcomip
movsl
push
lahf
push
add
push
mov
out
es
out
jle
jns
in
cmpsl
rcrb
xchg
push
fistpll
lock
loope
dec
xchg
add
push
pop
sbbb
imul
sbb
cld
add
xchg
and
adc
add
add
mov
iret
les
xchg
int
dec
lcall
fcoms
hlt
sub
shll
add
pusha
out
andl
out
imul
dec
shlb
jo
mulb
mov
sub
or
and
inc
inc
scas
push
jnp
add
xor
test
adc
mov
add
cld
mov
xor
lcall
hlt
push
add
pop
int
push
add
or
out
and
mov
fwait
xchg
inc
add
cli
ss
stc
movsl
popa
adc
mov
enter
fadd
jnp
push
into
mov
ret
repz
shrb
push
test
sub
cmp
inc
xchg
jl
movsb
fnstcw
rcrb
xchg
xchg
gs
pop
imul
repnz
add
xor
push
scas
xor
mov
push
adc
dec
xlat
les
xor
cwtl
ds
test
daa
in
jbe
push
mov
and
mov
mov
inc
loope
hlt
stos
cmp
xor
pop
decl
add
out
adc
inc
lock
out
adc
popf
sub
mov
inc
mov
xor
xchg
popf
add
cmp
out
nop
out
pop
movb
jno
lds
adc
mov
or
jnp
aas
je
gs
push
inc
xor
sub
add
repnz
ss
mov
cmpsl
ret
mov
fimull
cld
jno
das
in
pushf
test
pop
pop
dec
mov
clc
enter
jae
xchg
jae
xchg
mov
jge
xchg
mov
push
jbe
fsubs
pop
jnp
xchg
pop
sub
pop
and
sti
push
push
cwtl
cmp
mov
and
das
sahf
sarl
sbb
mov
rcrl
loop
fcoml
shlb
add
xchg
and
inc
in
rep
add
xor
gs
in
sarb
xor
xorl
fstpl
sti
xor
test
sbb
ret
push
and
add
icebp
pop
or
dec
mov
clc
adc
jne
jecxz
movsb
cltd
rolb
test
subb
and
pop
rcrl
push
mov
adc
xor
mov
xor
ss
jbe
xchg
xchg
jne
jge
insl
fsubp
ds
add
jg
cltd
cmp
pop
mov
ss
mov
and
fstl
lock
mov
sbb
mov
jb
rcrl
in
clc
sarb
cmpl
sbb
gs
mov
adc
addr16
mov
dec
push
add
sub
add
fs
test
dec
xchg
inc
pop
cmpsl
pop
sti
lret
adc
mov
mov
xor
push
lods
loope
mov
lret
dec
add
xchg
mov
pop
add
push
pop
xchg
lret
in
push
les
pusha
adc
sahf
and
mov
mov
push
push
psubusb
outsl
jg
and
icebp
pop
les
cli
jg
add
in
fistpll
add
xor
sbb
outsb
fcomip
push
add
sbb
and
pusha
cmp
popa
pop
scas
scas
sti
dec
mov
pop
rorb
jnp
mov
pusha
pop
dec
shll
sbb
pop
aam
jnp
push
cmp
insb
inc
enter
inc
in
cmp
xlat
inc
inc
popl
sub
dec
call
pop
and
dec
outsb
aaa
mulb
pushf
adc
pop
mov
xchg
or
pop
sbb
loope
mov
jg
sbb
sarb
or
lret
mov
aad
xchg
cmp
xor
cmp
mov
filds
and
notb
sbb
xor
xchg
pop
cmpsl
nop
shrb
xchg
or
fsubs
call
in
pusha
les
mov
sahf
dec
xlat
xchg
mov
sub
js
icebp
sysenter
in
stc
cmpsl
sbb
jae
add
in
pop
loopne
sub
es
sbb
xchg
push
fistpll
repz
add
fisubrl
jnp
ljmp
push
test
fistpll
notb
ss
stc
shlb
cltd
sti
repz
mov
dec
stc
push
push
add
cmpsb
xor
shlb
pop
insl
sbb
jae
inc
jae
aas
orl
xchg
out
ret
add
mov
pop
xor
mov
cmp
mov
sub
xchg
insl
or
mov
cltd
add
and
fsubr
es
insb
or
mov
arpl
cli
inc
cmp
push
loop
pop
mov
std
lods
hlt
dec
push
jne
movsl
inc
scas
push
imul
jle
incb
adc
xor
cmp
add
jno
and
gs
jae
daa
pop
fldt
mov
test
pusha
adc
pop
int
push
add
or
pop
inc
sbb
outsl
sub
jecxz
mov
dec
jmp
jne
pop
ds
add
sbb
xchg
push
fiadds
jo
dec
jae
dec
jmp
cltd
lret
inc
int3
pop
cld
data16
xchg
fdivl
inc
cmp
js
cltd
mov
xlat
jg
jmp
pushf
sub
mov
adc
mov
rolb
push
add
jg
push
inc
mov
stc
addr16
lahf
fs
sar
push
sar
int3
nop
cld
sbb
arpl
and
les
mov
add
mov
test
push
cmp
insb
cld
jno
xor
int3
pop
ret
cs
dec
sbb
lock
rcl
sbb
in
scas
cmp
shlb
xchg
pop
add
add
lock
ljmp
rcll
cld
xchg
lret
cmp
xchg
and
out
pusha
adc
mov
in
stc
xchg
sarl
sbb
cmpsb
mov
mov
rcrb
xchg
shlb
xchg
repz
add
int
nop
rcrb
mov
fs
mov
aaa
imul
add
dec
in
out
lret
xor
fists
enter
in
and
imull
loopne
dec
and
jne
lds
into
aaa
xchg
push
jb
xor
adc
xlat
xor
sbb
call
ja
jno
dec
sbb
imul
insl
das
add
adc
pop
fwait
mov
pop
out
jg
cmp
dec
jmp
lcall
xor
or
xor
pop
push
xor
or
shl
fists
out
sti
pop
push
adc
add
fwait
adc
imul
add
les
mov
es
out
lret
jo
loope
mov
call
mov
clc
and
dec
shll
xchg
or
cmp
cmp
shlb
inc
sub
xchg
repz
lret
sub
out
mov
push
stc
mov
ret
rolb
ret
das
aam
cmp
adc
popa
add
repnz
in
and
pusha
adc
mov
or
inc
cmp
mov
mov
sub
push
inc
hlt
mov
dec
sub
pop
mov
ja
lea
pop
ja
mov
test
hlt
sub
sbb
mov
jge
jne
adc
subl
mov
push
and
xchg
mov
rcrb
xchg
clc
and
jb
cmp
or
scas
int
pop
ds
xor
jns
mov
jne
shlb
hlt
push
add
lods
pusha
push
adcb
mov
dec
mov
in
flds
xchg
fcmovbe
adc
jno
imul
bound
js
mov
enter
inc
adc
push
jg
popa
adc
pop
or
xorl
enter
pop
adcb
ret
jae
out
sbb
call
jb
outsl
stos
xchg
lahf
or
mov
inc
insb
out
or
leave
aad
inc
sahf
or
cmp
ret
push
mov
xchg
jg
inc
aad
shrb
jns
cmp
add
cmpsl
xor
xor
pop
add
sbb
dec
mov
cs
sbb
shr
lock
push
jns
es
jne
adc
cmp
icebp
outsl
jbe
loope
cltd
test
mov
out
scas
fs
out
sbb
dec
shrl
out
add
mov
stos
push
or
inc
loop
mov
add
xlat
or
jge
mov
lret
rorb
mov
popf
ds
dec
out
lods
out
push
repnz
pop
int3
jl
aam
or
pop
cmp
int3
scas
add
and
mov
jl
mov
imul
aam
lods
pop
test
in
cmc
movsl
pop
inc
movsb
push
mov
test
rolb
and
leave
data16
mov
lret
sub
dec
xchg
xor
push
jmp
out
and
sbb
jae
fistpll
insl
mov
test
jns
gs
mov
lea
sbb
out
pop
cli
push
ffree
and
mov
add
sbb
fs
mov
leave
jns
jo
add
pop
or
push
add
mov
mov
rcrb
jae
fmull
imul
xchg
ja
repz
add
and
jo
testl
shlb
pop
dec
femms
mov
xchg
sahf
testl
and
mov
pop
mov
outsl
fistl
mov
inc
pop
fmulp
loop
sbb
cmp
cwtl
jae
dec
mov
xor
in
xor
fsts
test
sbb
call
push
add
in
icebp
mov
loop
fdivrl
fidivrl
xchg
cli
rcrb
mov
mov
push
mov
into
jle
enter
sub
xor
int
push
add
or
dec
call
mov
sub
loope
rolb
xorb
jl
mov
lahf
inc
xor
outsl
scas
shll
pop
inc
lock
jo
mov
in
imul
jle
cmp
js
shlb
hlt
push
add
or
push
shrl
mov
mov
pop
mov
push
jl
jbe
shlb
jns
mov
xchg
fwait
std
mov
jecxz
js
rcrb
test
dec
fisttpll
stos
dec
sti
insb
hlt
push
add
test
imul
adc
mov
cli
xor
xor
mov
inc
iret
mov
jnp
jne
jg
push
push
insl
mov
imull
inc
lock
leave
mov
je
test
loop
xchg
outsb
sub
fnstsw
push
inc
mov
gs
iret
inc
popl
fwait
sub
cmp
iret
push
lods
popa
fcomi
cmpsl
lret
push
repnz
cmp
sbb
sub
dec
sbb
cmpl
outsl
scas
int
push
and
divl
orb
ds
leave
fcoml
sub
lahf
push
sub
clc
push
fnstcw
dec
outsw
test
xchg
rcrb
xchg
cmpsl
rcrb
jae
fidivrs
adc
fisubrs
push
cmp
mov
jecxz
test
cmp
jbe
xor
push
loopne
add
fsts
fstps
mov
imul
sbb
inc
aam
fwait
inc
out
movsb
data16
cmc
cmpl
push
lock
hlt
push
add
popf
or
push
cmc
ret
cli
xor
clc
int
push
dec
xor
sbb
xchg
push
fistpll
repz
fwait
xor
push
hlt
push
add
mov
pop
les
in
sbb
fwait
adc
sbb
in
fstl
or
hlt
push
add
mov
pop
push
stc
outsb
push
xor
jno
insb
cmpsl
fldenv
rcrb
mov
je
sbb
movsl
xchg
adc
pop
fistpll
iret
inc
xchg
push
xor
xor
push
inc
and
add
stc
mov
aad
pop
cmp
mov
inc
pusha
adc
movsb
sub
push
or
lods
clc
mov
imul
les
add
insl
mov
dec
ret
and
cmp
mov
imul
mov
test
adc
pop
scas
sbb
push
fidivrs
xorl
hlt
xorb
push
add
mov
dec
rcrl
jecxz
fnstenv
add
add
jb
xchg
inc
push
add
iret
cmp
inc
sbb
je
fmull
xor
jns
sub
fiaddl
mov
mov
jnp
out
lahf
xchg
or
dec
sub
push
mov
jle
scas
jecxz
sbb
xchg
push
fimuls
inc
aaa
mov
les
sub
mov
push
mov
push
jl
jbe
pop
cmp
push
dec
je
ret
inc
xchg
ss
je
cld
loopne
xor
dec
and
xor
cltd
add
daa
sarb
mov
add
push
add
sahf
sub
cmp
aaa
std
xlat
xchg
repz
add
xor
sti
xor
enter
shlb
aad
sbb
out
sbb
mov
imul
or
sub
imul
xchg
push
add
enter
pusha
adc
mov
in
xor
push
fs
cwtl
shlb
hlt
push
add
mov
or
dec
repz
xor
add
adc
shll
or
insl
mov
cmpsb
adc
or
cmpsb
cmc
adc
adc
in
cld
xchg
enter
push
pop
jle
sbb
pop
mov
cmp
sub
imul
loop
popf
pop
xor
push
insl
cmp
imul
std
lods
add
sbb
xchg
sti
out
roll
sub
add
mov
mov
cmpsb
push
leave
stos
cli
fldl
test
bound
push
arpl
sbb
push
dec
imul
push
add
inc
lods
adc
fisubs
mov
imul
adc
fistl
xlat
xor
mov
jecxz
push
pop
xor
cmpsb
xor
rcrb
mov
push
add
xchg
or
js
pop
ret
xor
mov
sub
dec
hlt
push
add
mov
dec
rcrb
xchg
push
cmc
push
push
push
sub
jns
add
sub
mov
adc
ds
jno
or
mov
lods
ja
mov
mov
xor
stc
pop
jns
aaa
jmp
adc
mov
mov
imul
pop
mov
dec
ss
je
mov
sub
jbe
pushf
leave
outsb
rcll
xchg
push
std
jae
pop
cwtl
cltd
mov
push
clc
sbb
loopne
loopne
cmpsb
lds
mov
sahf
ja
inc
adc
adc
test
jb
lea
adcb
in
inc
movsb
les
sbb
repz
mov
subl
or
xchg
mov
fimuls
outsl
jl
mov
dec
jle
jns
in
cmpsl
rolb
mov
inc
xor
cmpsb
push
mov
or
rcll
stos
dec
dec
add
push
mov
in
imul
cmp
push
repnz
inc
mov
jne
cltd
xchg
add
into
adc
mov
pop
lahf
dec
lds
cld
fcmove
insl
and
xor
mov
test
sarb
sbb
adc
or
jo
inc
adc
scas
add
imull
xchg
sub
push
push
je
adc
pop
pop
mov
jl
aas
add
mov
and
inc
lahf
xchg
add
jmp
jae
inc
ss
add
ficoml
mov
imul
add
push
cmp
rcrl
lret
stc
shlb
push
dec
cmpb
pop
push
repnz
jecxz
fstl
rcrb
xchg
inc
iret
mov
stos
push
or
les
mov
std
sub
mov
xor
shl
mov
andb
mov
mov
sub
fimuls
adc
out
jle
rorl
xor
in
xor
cmp
jmp
sub
sbb
adc
inc
sub
mov
das
int3
jb
pop
mov
fimull
in
popf
jmp
js
push
movsl
nop
mov
or
xchg
adc
popf
jne
pop
clc
mov
sti
ss
sbb
jo
rcrb
xlat
mov
fdiv
sub
gs
add
das
sti
dec
fisttpll
push
mov
or
xor
mov
pushf
mov
xor
dec
ret
outsl
dec
dec
aas
mov
add
cli
stos
or
fadds
jns
je
loopne
stos
cmp
sbb
mov
es
mov
stos
fsubp
imul
insl
mov
adc
lock
popf
add
sub
ficoms
cltd
ret
leave
lock
imul
xchg
or
pusha
bound
jg
ljmp
pop
mov
xor
mov
fiaddl
add
jbe
and
outsb
push
popl
pop
lret
pop
mov
sbb
je
jecxz
fnstsw
jo
sbb
scas
sbb
jae
inc
and
rorw
icebp
rcrb
xchg
push
fidivrs
aaa
stc
lahf
std
imul
inc
mov
push
stos
dec
cmpsb
push
popa
xchg
int
push
mov
sti
addr16
sub
sbb
mov
jb
adc
xor
push
add
outsl
pop
jecxz
and
xchg
inc
pop
adc
jge
rorl
fstpl
lods
jns,pt
clc
lea
adc
addr16
jno
fs
and
mov
lcall
aas
stos
adc
xor
bound
xchg
dec
in
dec
jmp
fldcw
mov
xchg
dec
jmp
sbb
movsb
lahf
bt
jl
xor
sbb
xchg
cmp
repz
mov
dec
mov
jns
lahf
sub
and
adc
mov
sbb
pushf
imull
sbb
sub
push
jne
pop
mov
push
ds
pop
dec
and
fnsave
lret
std
cmp
scas
push
out
xchg
daa
jns
mov
inc
and
mov
push
loop
cmpsl
shlb
inc
jo
dec
push
into
and
bound
cs
push
jns
cltd
ds
dec
push
aam
rcr
insl
sbb
pop
lret
shlb
hlt
push
add
lods
pusha
push
je
dec
fisubl
into
cmp
add
imul
pop
nop
rcrb
mov
push
loope
jmp
mov
bsr
xor
pop
dec
push
js
inc
call
xor
push
in
stos
dec
sti
insb
sub
pop
push
faddp
add
arpl
divb
divb
iret
fwait
scas
out
sbb
pop
push
sbb
std
pop
mov
pop
jno
mov
je
gs
sub
jl
mov
mov
lods
inc
inc
or
rolb
push
mov
rolb
adc
sub
gs
aad
daa
fdivr
es
pushw
xchg
cli
adcb
js
shlb
hlt
push
add
mov
dec
add
ljmp
sub
lods
loope
push
mov
add
sbb
inc
scas
push
jl
jmp
cmp
stos
or
testl
push
add
mov
enter
xchg
into
scas
add
cltd
pop
push
cmp
out
test
push
insb
loope
lods
sub
fstps
popl
jae
or
cmp
mov
jecxz
cs
sub
inc
stos
outsl
adc
in
push
hlt
pop
pop
out
cmp
cmp
imul
sbb
test
ret
sbb
iret
inc
cmp
cmp
inc
movsl
and
movsl
mov
push
mov
popl
adc
rcrl
sbb
lret
shrb
mov
jae
dec
push
pop
out
popl
mov
or
sbbl
jle
popf
nop
and
sbb
insb
fldl
cmpsl
sbb
pop
sbb
mov
notl
mov
pop
stc
push
fadd
push
xchg
lock
shrb
repnz
mov
loop
lret
sub
pop
xchg
jae
pop
or
adc
mov
pop
dec
ret
clc
lret
adc
push
sti
sbb
or
push
push
arpl
or
mov
clc
lea
push
cmp
and
sbb
xchg
push
fidivrs
mov
aad
cmpsl
je
pusha
mov
pop
in
xchg
mov
pop
fdivrs
pop
rolb
dec
jp
lret
loopne
cld
fisubs
xor
dec
cmpl
xchg
repz
add
int
xchg
repnz
int3
cmp
push
ret
sub
repnz
adc
sbb
call
in
push
inc
adc
test
adc
cmp
fs
sahf
fsubrl
leave
jns
lret
jnp
out
xchg
fiadds
lahf
enter
inc
jmp
mov
cwtl
js
pop
arpl
mov
pop
jmp
xchg
adc
aad
cwtl
shlb
hlt
push
add
mov
xor
xor
cmp
iret
lcall
sub
xor
int
inc
dec
and
or
outsb
mov
add
gs
sbb
repnz
sar
jo
push
out
jae
add
rcrb
mov
push
loope
inc
in
jnp
add
push
in
scas
and
add
xor
add
push
scas
test
inc
pop
and
stos
cmpsb
pushf
jo
cmp
shl
test
add
adc
arpl
xchg
pop
repnz
sbb
aad
mov
sub
lods
int
adc
cld
pushf
push
push
movd
mov
test
xor
adc
push
scas
adc
insl
or
sub
xlat
gs
xchg
mov
lahf
mov
shll
iret
subl
pop
leave
xchg
mov
inc
std
dec
inc
push
add
push
inc
ljmp
jecxz
sub
lret
outsl
xchg
mov
mov
and
repnz
add
xor
sbb
test
insl
mov
ja
mov
fwait
add
xor
out
pop
repnz
out
adc
clc
lods
sbb
test
fsubp
dec
repnz
add
fstpl
pop
std
pop
rol
jbe
jg
mov
shlb
hlt
push
add
mov
stos
int3
pop
shl
mov
dec
push
pop
adc
sbb
dec
shll
cld
push
add
lcall
fwait
push
cltd
cmp
out
sub
ljmp
movsl
jnp
popf
inc
pop
clc
bound
mov
mov
gs
xchg
and
sahf
shlb
hlt
push
add
lods
shll
popf
loop
fdivl
cld
out
sub
ds
inc
sub
idivb
jmp
push
out
sarl
cld
xor
nop
into
sbb
inc
out
fistl
pop
imul
inc
dec
add
inc
sti
stos
mov
icebp
sbb
adc
mov
add
mov
adc
jne
loope
stos
cmp
sbb
xchg
outsl
leave
cld
divl
sahf
sub
dec
in
inc
into
mov
jae
pusha
mov
hlt
push
add
jno
fidivrs
adc
std
ss
fnstcw
xor
add
orl
adc
jb
loop
lods
cmp
mov
push
xor
fnstenv
mov
and
jp
test
mov
dec
repnz
pop
xchg
aad
add
test
jb
pop
jns
lahf
dec
xchg
mov
inc
andl
les
mov
xor
in
pop
push
imulb
pop
sub
gs
cmpsb
push
mov
mov
fcoms
fnstenv
xlat
xor
xchg
xchg
xor
jnp
ficoml
test
imulb
dec
mov
into
lods
out
lds
shlb
xchg
daa
ret
fmuls
push
add
test
shlb
lods
mov
jl
sbb
xchg
inc
ljmp
pop
movsl
int3
jl
cmp
push
jge
pushl
jp
xchg
jp
sub
sbb
test
dec
rcrb
test
ret
xchg
sub
xchg
inc
loope
subl
stos
xchg
imul
sub
xchg
add
push
adc
call
cmpsl
fadd
sbb
jbe
fidivrs
adc
fisubrs
mov
shll
pop
mov
in
daa
test
inc
jg
scas
cs
sub
cwtl
es
shlb
lods
mov
aad
aaa
xchg
fwait
std
mov
pushf
fstpt
mov
pop
xor
fcmovne
idivb
jge
pop
xor
pop
adc
stc
outsb
push
imul
jl
jbe
add
jle
push
jne
xchg
hlt
das
insl
xchg
mov
repnz
cs
xchg
fstps
cs
dec
mov
stos
iret
aaa
sbb
pop
mov
insl
pushf
fisttpll
push
aad
jno
mov
sarb
jmp
mov
and
popf
int3
push
fidivrl
call
mov
push
dec
movsb
mov
loopne
add
or
jge
js
pop
cmp
push
stos
cmp
frstor
ret
cmp
jp
mov
adc
mov
mov
add
push
add
sahf
xchg
or
cmp
sbb
xchg
in
adc
dec
xchg
inc
xchg
or
add
add
repnz
hlt
mov
push
shlb
imul
scas
cli
mov
add
mov
rol
add
pop
mov
jl
xor
sbb
xchg
movsl
movswl
hlt
push
add
insb
mov
sub
shrl
add
cli
lods
cmp
insl
into
xchg
fs
stc
aaa
inc
pop
mov
and
in
mov
xchg
push
mov
shl
in
test
pop
lahf
mov
mov
push
fstl
and
out
clc
add
shrb
pop
cs
inc
test
inc
jae
cwtl
xchg
mov
jp
int3
inc
xchg
or
add
cs
mov
xor
pop
scas
repz
add
iret
in
push
mov
inc
mov
pop
xchg
inc
pushf
mov
notb
sub
test
scas
pop
ret
scas
dec
test
cmp
rcrb
mov
push
loop
loopne
lock
add
xor
gs
jp
popf
xor
xor
cli
mov
jg
inc
test
int3
loope
xlat
sbb
or
std
mov
dec
scas
cmc
xchg
decl
push
mov
xlat
xchg
bound
and
mov
mov
jle
and
subb
adc
movsb
mov
mov
or
mov
push
loop
loopne
repnz
xor
mov
inc
sahf
xchg
or
shll
fsubr
popa
test
mov
jecxz
test
xchg
adc
icebp
mov
loop
mov
aaa
cmpsl
mov
into
add
gs
hlt
add
test
mov
xchg
push
add
pop
jnp
adc
icebp
push
popl
je
insb
flds
mov
sbb
je
imul
icebp
repz
jae
fiaddl
out
sahf
sub
inc
lcall
pop
mov
mov
shlb
dec
aam
cmpsb
mov
insl
lcall
push
outsl
sbb
fs
xchg
lods
pusha
lret
xlat
adc
fildll
xor
arpl
sbb
cmp
lahf
pop
and
push
add
xor
in
sti
sbb
cmpsl
push
jne
pshufw
inc
sbb
popf
repz
add
mov
mov
mov
sub
lea
jb
or
cmp
xchg
popa
push
jbe
mov
mov
push
inc
sarl
ds
jno
jmp
gs
nop
fld
jl
pop
dec
mov
mov
sub
data16
ds
jg
push
inc
jle
daa
or
dec
cli
imul
mov
xchg
push
add
push
add
scas
hlt
xchg
out
and
sbb
sbb
xchg
pop
arpl
not
rolb
cmpsb
adc
lret
pop
jecxz
xor
ror
testb
push
mov
mov
mov
outsb
xor
push
add
fistl
sbb
testl
pop
mov
sbb
adc
xchg
mov
xchg
insl
adc
xor
xchg
inc
shufps
cmp
in
shll
ja
adc
push
adc
fdivs
jmp
lahf
push
or
pop
daa
xchg
inc
aam
test
mov
nop
push
inc
in
xor
jg
add
sub
jnp
pushf
or
pushw
movq
dec
in
popf
push
mov
fimuls
inc
mov
test
lret
mov
pop
test
xor
sbb
xlat
inc
das
push
pop
cmp
xchg
xchg
fidivs
fistpl
and
sahf
mov
sahf
inc
jno
jmp
mov
sub
push
xchg
movsl
fnstsw
out
ljmp
cmpsl
bound
mov
std
pop
adc
and
negl
sub
pop
scas
push
and
jb
rorw
xchg
xchg
inc
mov
int
test
jle
rcrb
xchg
push
cmc
mov
push
jmp
pop
mov
pop
aas
xchg
dec
inc
pop
repz
in
and
sbb
test
dec
repz
cmp
test
xor
aad
cmp
pop
les
adc
shlb
sbb
or
je
mov
push
test
test
jno
fiaddl
jne
push
mov
mov
leave
in
jmp
sahf
dec
mov
ljmp
into
xlat
jae
lret
add
jns
pop
iret
inc
arpl
inc
mov
loopne
insl
and
xor
mov
shl
ds
ja
mov
xor
xchg
xchg
pop
imul
inc
mov
push
inc
popf
xchg
or
shll
fisttpll
mov
fdiv
push
add
add
sarb
ss
push
dec
xor
xor
push
add
das
mov
repz
add
sbb
fwait
dec
add
jmp
mov
pop
in
pushf
jp
daa
inc
rcll
movsb
xchg
mov
sub
stc
push
lods
adc
fstpt
in
shll
iret
test
mov
iret
aad
mov
xchg
mov
adc
sbb
sarb
scas
and
sub
rcl
adc
test
or
push
xchg
sbb
lcall
je
test
add
xchg
cmp
out
mov
jp
addl
scas
sahf
decl
mov
addr16
push
ja
adc
push
mov
negl
sbb
loop
or
lods
cld
inc
icebp
in
push
push
xchg
cld
aam
je
mov
ret
into
jae
xchg
mov
sbb
mov
dec
les
cmpb
sahf
inc
stos
pop
ss
int
in
dec
jmp
int3
lcall
xor
ljmp
sti
imul
jp
sub
pop
mov
pop
js
fildl
push
mov
pop
lods
repnz
les
mov
mov
add
adc
push
xchg
adc
shlb
out
shll
sub
shll
shlb
iret
and
out
sub
or
xchg
jle
cmp
nop
pop
outsb
pusha
and
push
ret
ja
dec
ja
scas
mov
gs
mov
aad
xchg
divl
and
jl
and
inc
fisubrl
cmp
xchg
or
push
add
std
jb
mov
insl
iret
push
scas
or
jns
inc
roll
rcrb
xchg
push
fidivrs
inc
fbld
inc
jmp
pop
and
test
cmp
inc
loope
push
sahf
dec
push
inc
idivb
lds
xor
out
fldt
push
fadd
and
push
cmc
and
sti
gs
add
lahf
mov
out
dec
mov
xor
mov
sbb
cwtl
dec
sub
jae
push
push
mov
sbb
or
cltd
icebp
xchg
aas
mov
mulb
stos
cmp
fidivrl
js
push
cli
lcall
das
iret
outsl
pop
nop
jns
inc
pusha
int3
pop
or
fwait
imul
adc
sub
sub
ljmp
inc
out
or
test
pop
mov
pop
js
test
xchg
clc
push
int
jae
scas
fidivrs
in
mov
jge
addr16
cmpsl
mov
popf
aad
fidivrs
lret
pop
push
adc
fmuls
and
lock
xor
pop
mov
fmull
cmp
dec
pop
ud0
pop
into
ljmp
stos
add
sbb
cwtl
int
in
push
add
pusha
adc
testb
push
and
mov
fcmovbe
sub
insb
ss
test
insl
adc
imul
add
out
jge
aad
icebp
pop
mov
repnz
add
inc
into
add
sbb
xchg
mov
or
and
repnz
daa
insb
fdivs
cld
mov
cmpsb
and
icebp
rcl
aaa
dec
aam
es
and
adc
inc
sub
adc
sub
lea
inc
push
cltd
dec
or
mov
cli
fs
pop
cmpb
xchg
inc
sub
aad
push
roll
insl
lcall
mov
lar
lret
and
ds
sub
in
pop
xchg
mov
and
push
push
mov
inc
into
mov
stos
shll
shll
sti
inc
add
lods
sbb
call
push
flds
cli
lcall
sub
mov
push
add
jno
lods
js
push
cmp
push
arpl
mov
sub
sub
xor
mov
dec
jb
fildl
pop
loope
adc
mov
in
cmc
push
pop
aam
sbb
jne
popa
andb
cli
pusha
pop
std
pop
rol
push
mov
pusha
adc
icebp
mov
loop
mov
xchg
pop
hlt
push
add
inc
roll
rcrb
test
inc
hlt
push
add
orl
sub
notb
xchg
hlt
inc
scas
jge
mov
adc
dec
cld
dec
pop
ret
push
or
loopne
add
cmp
enter
sbb
fildll
pop
addr16
jnp
adc
pushf
pop
sbb
xchg
pusha
cmpsb
das
sub
sbb
jl
dec
mov
sbbb
je
inc
adc
cmpsl
pushl
data16
xor
je
add
ss
xor
mov
shlb
hlt
push
add
mov
jae
mov
aam
push
add
adc
inc
mov
push
add
icebp
jg
int
inc
jo
repz
add
sbb
jp
cmp
ficoms
rcrb
les
xchg
push
mov
test
xor
mov
call
xorl
loope
sbb
cwtl
aam
leave
loope
in
pop
inc
jecxz
jge
out
lods
xchg
ds
fistpll
and
sub
pop
inc
jmp
ss
iret
fcmove
xchg
fistps
pop
ljmp
popf
adc
cltd
jle
fisttpll
mov
fisttpl
aad
jo
mov
sbb
outsl
fisttpll
and
push
cmp
insl
shl
adc
filds
mov
sub
dec
push
hlt
and
xor
ljmp
outsb
push
mov
xor
std
imul
movsb
push
xchg
aaa
mov
and
xor
add
jne
cwtl
cmp
jb
mov
rcll
stos
hlt
mov
stos
hlt
add
sub
rcll
hlt
xchg
std
lods
jns
les
in
and
rorl
inc
rcl
cmc
mov
ja
in
dec
fnstsw
sbb
cmp
push
and
push
adc
in
mov
mov
cmpsl
into
inc
jecxz
hlt
stos
or
aaa
xchg
add
adc
test
jmp
push
fdivrs
pop
add
orb
sahf
loopne
pop
mov
fwait
xchg
pop
dec
mov
test
mov
cwtl
lods
repnz
xor
push
xchg
shrl
jmp
stos
repz
sub
into
adc
cld
dec
sub
lcall
pop
mov
jne
test
insb
into
xor
bound
xor
push
rcrl
fdiv
in
mov
lds
fiaddl
sbb
jns
sub
mov
std
pop
aam
mov
sbb
lahf
pop
or
add
dec
jmp
loopne
scas
ljmp
mov
pop
sbb
mov
pop
in
iret
icebp
jl
std
cs
mov
jl
enter
xchg
xorb
ss
sahf
and
sbb
data16
ds
into
inc
push
mov
lea
jp
sbb
sbb
rcrl
jns
jo
sub
cli
mov
jecxz
ljmp
mov
mov
cmp
jb
jb
mov
xchg
cltd
popf
push
shrb
jp
in
xlat
or
sub
dec
shlb
push
xchg
or
push
add
mov
dec
jnp
sbb
lret
cmp
mov
insb
xor
fisubs
or
mov
xlat
mov
sub
or
negb
add
les
add
shll
fs
pop
push
mov
and
adc
flds
xchg
fcmovbe
xchg
sbb
ficomps
shrb
sbb
or
in
sub
lcall
push
xor
jo
rorb
idivl
sub
fmuls
cmp
fldt
jae
js
lcall
push
xchg
jmp
and
add
inc
scas
push
jge
popf
scas
loopne
and
arpl
test
dec
add
adc
call
test
fcmovu
mov
jp
add
cmp
inc
and
cmpsl
fadd
sbb
xchg
mov
jl
and
cmp
mov
push
rcrb
test
jno
insb
cmpsl
fldenv
rorb
xor
bound
mov
mov
sti
repz
in
sahf
fs
cs
adc
fdivs
pop
iret
scas
outsb
repz
popa
adc
imull
out
push
mov
arpl
push
sbb
mov
mov
mov
jmp
sub
inc
into
inc
jecxz
hlt
stos
or
add
jecxz
es
pop
or
cmc
pop
dec
mov
adc
and
xor
jo
xchg
outsb
ja
mov
bound
and
push
push
shlb
hlt
push
add
mov
mov
add
jno
pusha
adc
mov
imull
push
add
fldl
cmpsb
lock
mov
add
test
dec
cli
add
xchg
or
sbb
cmc
push
mov
sub
repnz
or
push
push
jae
and
and
sbb
lock
fmull
sbb
inc
cmp
xor
and
arpl
jmp
cmp
es
scas
mov
lock
bound
lods
aam
fisubrs
push
loop
sbb
inc
popa
test
dec
cmc
sbb
add
mov
adc
pop
or
xor
imul
call
dec
pushf
or
push
mov
adcl
add
inc
cmp
push
pop
mov
and
adc
xor
nop
xchg
jbe
int3
insb
or
sub
or
add
dec
mov
data16
sub
sbb
test
dec
fdivrl
outsl
jnp
sbb
lock
pop
inc
mov
scas
outsb
or
cmc
std
lods
das
xor
fisubs
rorl
xor
jp
sti
push
cld
and
es
shll
mov
cmpsb
push
test
popf
iret
arpl
mov
es
push
and
mov
pop
out
je
mov
cli
decb
adc
shlb
xchg
shrl
fs
rcrb
test
insl
cmpsb
or
scas
shrb
lcall
notl
add
hlt
pusha
add
mov
push
rcrb
mov
push
loope
popf
inc
jp
fbld
ss
stc
jnp
in
lret
nop
out
pop
call
xor
dec
jle
in
mov
cmc
mov
ret
insb
push
imul
sbb
in
bound
inc
jo
popa
shll
out
sbb
xchg
fcmove
nop
icebp
or
cmp
push
sub
xor
sub
in
mov
xchg
mov
mov
pop
cmp
repz
daa
mov
inc
adc
stc
jo
xchg
jne
cmpsb
cwtl
jne
mov
mov
das
repnz
or
mov
fidivrl
sub
pushf
jecxz
pusha
nop
pop
cmpsl
or
jg
daa
push
mov
push
loope
adc
cs
subl
xorl
sbb
adc
mov
daa
sbb
sbb
jle
jl
mov
xor
dec
aaa
lods
and
popa
adc
mov
cmpsl
fldenv
jno
sub
mov
movsl
xor
pop
dec
xchg
pop
outsl
lcall
push
jno
cmp
xchg
sub
imul
jl
sbbb
test
call
repz
fdivs
shl
ficomps
bound
sub
inc
outsb
push
imul
fmuls
leave
xor
adc
jb
loopne
stos
cmp
pusha
adc
mov
push
xchg
xchg
jb
jbe
fsubl
repnz
push
mov
enter
std
add
insb
and
or
pushl
sbb
or
movsl
mov
pop
or
jb
rcl
sbb
outsl
pop
xacquire
movsb
adc
rclb
mov
std
mov
jl
nop
mov
mov
push
sub
fcomip
push
add
dec
pushl
push
add
lods
sbb
dec
movsb
outsb
adc
mov
ljmp
push
hlt
mull
call
xor
push
hlt
push
add
xchg
pop
push
int
push
dec
xor
outsl
mov
nop
lds
rcrl
stos
icebp
xchg
in
daa
pop
out
shlb
adc
sub
scas
push
add
adc
mov
xchg
and
mov
add
and
mov
mov
data16
bound
push
mov
data16
outsl
pop
push
mov
mov
adc
pop
inc
test
xchg
fdivl
push
dec
xchg
mov
dec
std
jp
push
mov
push
inc
icebp
cmp
inc
mov
xchg
testb
adc
xchg
inc
mov
sbb
mov
ret
cmp
loope
and
push
hlt
xchg
out
es
mov
mov
push
mov
loop
and
xor
mov
mov
xor
out
push
mov
aaa
leave
xor
adc
decb
jge
push
inc
test
push
mov
and
cmp
test
jg
cld
xchg
js
sti
sbb
mov
pop
jle
in
icebp
adc
insb
adc
mov
lea
dec
out
mov
test
and
inc
ljmp
ja
mov
dec
adc
dec
jbe
jno
adc
movl
or
jns
inc
repz
icebp
lahf
adc
rcll
ret
cltd
mov
pop
or
fsubp
leave
jnp
dec
inc
sbb
sub
fdivrl
das
cltd
dec
or
shrl
rcrl
mov
jo
je
insb
or
dec
adc
rclb
pusha
popa
cmp
orb
test
scas
and
aas
mov
push
lods
dec
pop
dec
mov
jge
cmp
mov
aaa
mov
mov
js
lock
pop
mov
ds
xor
idivb
dec
and
fsubrl
mov
cld
mov
stos
std
dec
pop
enter
sub
xchg
push
cmc
push
fstpt
rcrb
mov
push
loop
lds
cmpsb
mov
lret
divb
cmp
jo
pop
psrlw
sbb
lret
movsb
push
ljmp
mov
inc
pop
mov
and
xor
fs
jmp
xor
pusha
inc
add
lea
mov
xchg
scas
pusha
lahf
sub
iret
cli
stos
sbb
adc
je
push
xorb
enter
jb
dec
rcr
aaa
dec
mov
fmulp
mov
push
out
les
mov
xchg
repz
in
adc
syscall
jnp
xor
mov
sub
aad
adc
outsl
pop
mov
inc
xor
jb
xor
rcrb
jmp
inc
mov
adc
es
inc
jecxz
and
sub
imul
sbb
aad
jmp
adc
cmp
aad
mov
sbb
lcall
inc
repz
push
mov
cld
int
loop
and
outsb
sbb
sub
jno
lds
mov
aas
mov
scas
in
inc
loopne
repnz
xor
pusha
adc
mov
out
adcb
stc
sbb
cmp
lcall
ljmp
pop
xor
pop
popa
inc
insb
leave
push
mov
das
dec
frstor
stos
mov
or
sarl
jmp
adc
lock
loope
test
sbb
mov
setae
jne
jae
sbb
out
push
add
repz
or
dec
mov
jns
push
popa
test
sub
lods
add
inc
xor
adc
pop
ss
add
fwait
sub
mov
pop
cmp
aas
inc
movsl
adc
push
mov
mov
mov
dec
mov
jp
and
push
js
inc
shr
mov
dec
dec
push
add
mov
dec
lods
loop
fadds
mov
and
in
mov
jb
scas
sbb
xchg
leave
pop
sbb
and
les
dec
mov
negl
dec
pop
cmp
ret
shlb
mov
push
cmp
data16
shrb
testb
fsubl
cmc
xor
push
xchg
inc
adc
js
fisttpll
sub
xlat
and
jae
loop
xor
xchg
test
xor
cs
mulb
jne
mov
or
sbb
mov
in
mov
xchg
pop
in
popa
xchg
jnp
in
sahf
nop
push
adc
lcall
testl
sbb
inc
movsl
adc
int3
mov
jl
aas
rcrb
test
dec
fisttpll
inc
lret
outsl
lds
mov
jb
call
push
daa
dec
mov
jnp
addr16
bound
out
add
daa
xchg
and
jo
repz
add
sbb
xlat
pop
idivb
lock
xor
adc
popf
add
hlt
pusha
out
and
gs
leave
pop
std
xchg
cmp
pop
xchg
sbb
mov
sbb
mov
es
icebp
gs
xor
repz
movsb
lea
dec
push
add
das
cltd
popf
lret
cmp
les
inc
stos
push
push
xorb
xchg
ds
stos
cmp
cmp
push
mov
pop
xor
push
test
inc
xlat
jnp
loop
mov
fcoml
icebp
int
adc
cmp
movsl
sub
adc
cmp
stc
xor
dec
test
sbb
rcrl
popf
or
lods
xchg
mov
push
cmpsl
es
aam
xlat
or
lds
ljmp
call
jb
xor
sbb
dec
xchg
and
jb
cmp
jg
ljmp
sbb
jno
fdivl
clc
sahf
cld
push
pop
and
push
iret
pop
ljmp
jns
mov
lret
jo
mov
xchg
mov
adc
notb
pop
or
push
sbb
sbbl
cwtl
out
xchg
jp
loop
xlat
outsl
in
bound
inc
testb
out
jle
jae
push
xchg
sbb
fadds
cwtl
mov
add
jge
lret
sbb
aas
clc
rclb
jnp
sti
stos
xor
or
bound
add
jle
jae
ja
ja
cmpsl
mov
mov
lahf
dec
imul
adc
call
add
mov
mov
daa
mov
mov
cli
mov
adc
rcrb
xchg
movsb
leave
inc
cmp
mov
jg
rcrb
push
fs
mov
movsb
pop
and
sub
pop
sub
pop
pop
cmp
repz
cwtl
cli
loope
dec
add
lods
fld
pop
adc
call
out
sbb
push
fists
pusha
adc
mov
in
int
jbe
xchg
xchg
push
add
sarl
int
rcrb
test
dec
fmull
mov
mov
mov
sbb
out
cmp
cmc
jb
sbb
mov
fstl
adc
xlat
cmpsb
inc
das
mov
jg
push
cmp
test
test
sbb
sub
cmp
inc
cmp
mov
mov
int3
jno
in
push
shl
jmp
push
xchg
test
add
pop
cmpsl
adc
pop
sub
push
imul
imul
cmpsb
xlat
xchg
xchg
int
jmp
je
pop
mov
xor
mov
je
rcrb
sahf
or
inc
into
cmc
xchg
lock
lock
adc
xor
lret
inc
push
in
sbb
mov
jne
jne
loopne
imul
stc
loop
fwait
adc
mov
add
lock
lea
mov
xchg
pop
push
or
roll
cmp
push
push
add
sti
jno
lcall
xchg
pusha
dec
jmp
ds
cld
and
and
lds
scas
dec
sub
mov
stos
pop
xchg
pop
xchg
movsl
push
dec
jmp
xchg
rolb
mov
lret
push
jo
mov
test
jecxz
fstpt
dec
pop
jl
add
ja
loopne
add
or
std
out
sub
or
dec
jge
push
ret
push
mov
cmp
mov
int
jbe
mov
xor
mov
dec
shlb
sub
or
iret
cmp
adc
movsl
fidivrl
aaa
std
mov
jnp
sbb
cmp
push
add
push
xchg
push
add
ret
or
arpl
jno
nop
popa
mov
cltd
jo
and
inc
rorl
rcrb
mov
ja
jb
fisubrs
pusha
add
icebp
pop
or
dec
mov
pop
pop
ja
insb
add
dec
cld
jb
sbb
adc
or
sbb
loop
add
adc
and
fists
in
add
inc
sbb
cmc
int3
jns
mov
or
das
and
fs
pop
sbb
in
pop
test
shr
insb
inc
fisttpll
xchg
pop
xlat
mov
pop
fwait
imul
jg
jno
dec
stos
jne
mov
sub
movsb
push
out
sbb
or
jmp
outsb
ret
addr16
pop
jle
cmpsl
outsb
or
mov
cmc
sbb
sub
sbb
fs
cs
test
pop
lds
roll
ret
add
jnp
jmp
imul
cmp
test
hlt
push
add
pop
fdivp
sbb
inc
lods
cmp
gs
and
inc
pop
push
add
andb
ret
out
into
mov
jp
mov
out
sbb
xchg
inc
hlt
push
add
adcl
cmpsl
enter
pop
daa
mov
jo
jb
out
enter
sub
xorb
jmp
xor
mov
pop
lret
roll
push
push
push
cmp
pushl
movsb
and
lcall
pop
pop
das
iret
or
aad
pop
dec
std
movl
sub
sub
popf
into
pop
push
xor
ret
jae
pop
add
ja
xchg
xchg
fmuls
inc
in
je
mov
inc
mov
fs
rcrl
mov
shlb
hlt
push
add
mov
sub
popf
mov
mov
mov
pushf
shlb
hlt
push
add
lods
pusha
push
adcb
mov
push
add
rorl
shlb
hlt
push
add
mov
push
add
mov
pusha
adc
mov
test
cmp
jae
outsb
movsl
fldt
and
pop
ljmp
sbb
sbb
lds
fisttpll
mov
sbb
idivl
cmp
mov
jo
sbb
xor
rcrb
adc
clts
js
xor
pushf
cli
data16
jnp
sub
dec
fmuls
mov
push
cmc
ret
cmp
pop
jmp
mov
push
jecxz
xor
xchg
lcall
xor
dec
cmpsb
insl
add
insl
lret
es
xchg
lock
enter
in
stc
rorb
sti
mov
adc
shrb
loope
cmp
or
xchg
pop
jmp
fstpt
movsl
outsb
push
push
mov
imul
aad
add
push
repnz
addb
into
cmp
subl
pop
xorl
adc
jp
cmpsb
add
push
shlb
dec
lock
sub
daa
in
xchg
lock
inc
mov
push
add
in
pop
out
shlb
repz
cmpsl
push
push
jo
stos
add
inc
ds
insb
xchg
cmc
sub
imul
add
and
mov
fnstenv
xor
mov
cltd
lcall
push
int3
add
rcrl
mov
std
mov
push
imull
sbb
xchg
push
fimuls
sub
xchg
push
push
in
pushf
sbb
jg
mov
mov
out
dec
push
gs
mov
pop
cmp
mov
jbe
push
nop
cmp
cmc
insl
mov
icebp
data16
rcrb
test
repnz
add
push
scas
push
ret
ds
hlt
mov
int3
in
xchg
clc
insl
or
cli
sub
aas
sahf
adc
sub
cmp
push
pop
mov
inc
pop
shld
adc
lcall
adc
xchg
daa
stos
ljmp
lock
lcall
mov
call
rcrb
xchg
push
filds
outsl
cmp
popa
adc
mov
sti
push
cmpb
inc
jecxz
mov
insb
inc
cmpsl
imul
xchg
inc
lcall
lock
jmp
pop
mov
dec
mov
loop
out
cmp
adc
push
jne
push
repnz
insl
test
fdivl
lret
sti
xchg
inc
sub
ret
inc
out
mov
push
movsb
lret
imul
das
stc
xchg
icebp
adc
jno
std
lods
addr16
sarl
daa
inc
cmpsl
in
pop
mov
or
push
scas
popa
pop
jne
pop
inc
scas
or
jne
cmp
out
mov
cltd
cmp
mov
dec
mov
jp
gs
inc
push
add
loop
out
ret
push
mov
mov
gs
addr16
fildll
inc
xor
cli
xor
enter
rcrb
xchg
pop
mov
jae
mov
xor
int3
leave
icebp
and
fadds
pop
mov
xor
es
dec
jle
xchg
addr16
insb
or
jb
adc
in
pop
push
call
addr16
addr16
loope
rcrb
mov
je
rcrb
popf
or
movsb
scas
push
sub
imul
jecxz
enter
dec
xor
xchg
push
sub
xchg
lds
jg
mov
cmp
lret
jl
popa
lret
xor
push
push
add
mov
inc
das
cmp
add
das
push
ja
mov
mov
fs
pop
cld
pushf
cmp
pop
pop
in
or
sbb
mov
push
loope
fistpll
mov
fsubrl
shlb
hlt
push
add
mov
add
push
sub
xor
mov
scas
mov
mov
push
push
xor
iret
pusha
ds
sub
rolb
xchg
inc
xorl
repnz
loop
mull
pop
call
std
std
xor
and
cmc
cmp
lds
mov
fcoml
movl
cld
lcall
daa
test
pop
mov
inc
mov
loopne
out
sbb
sbb
es
mov
ret
movsl
pop
cmpsb
mov
lods
aam
iret
inc
cmp
pop
cmpsb
sub
cs
pop
push
push
clc
popf
mov
mov
stc
dec
sub
mov
daa
push
cmp
dec
loop
aaa
xor
pop
andb
mov
inc
mov
je
mov
dec
movsb
push
cmp
jns
je
fdivrl
xchg
lcall
shlb
and
out
sahf
pmuludq
fistpll
mov
fmull
andl
les
adc
jbe
push
add
mov
jne
mov
lods
fildl
inc
mov
mov
js
cwtl
fisttpll
jge
dec
mov
xor
out
ret
addb
pushw
mov
xchg
pop
aas
fwait
cltd
repnz
cltd
push
adc
xor
push
jnp
pop
ss
gs
mov
andl
adc
or
push
add
jnp
ret
popf
add
ljmp
xor
into
sub
fisttpll
repz
sbb
mov
jle
fldt
dec
gs
push
ret
fbstp
push
movl
fld
out
out
xchg
pop
test
xchg
and
cli
cli
idiv
sbb
lods
inc
out
std
inc
hlt
std
test
out
or
sahf
push
mov
sub
jbe
dec
push
push
pop
out
in
pushf
xchg
mov
jp
mov
pop
add
sbb
mov
lock
ret
sub
les
daa
push
dec
das
stc
push
ffree
push
xchg
push
gs
sub
mov
push
mov
repnz
popa
adc
adc
rcrb
lock
lds
aad
sub
fdivrs
leave
scas
hlt
movsb
scas
sahf
pop
push
or
popf
rclb
add
rorl
mov
mov
into
ds
daa
rcl
test
fdivrs
push
and
jno
jg
jmp
out
sub
mov
and
test
add
dec
xchg
in
es
les
aaa
xchg
pushf
cmp
and
outsb
adc
pop
call
inc
mov
xchg
cmp
cmp
ss
mov
pop
outsl
sbb
sbb
xor
dec
clc
pushf
lahf
inc
push
add
mov
jnp
aad
cmp
sbb
mov
out
insl
mov
jnp
or
adc
in
lcall
xor
mov
xor
sar
sbb
mov
adc
outsl
jno
pop
and
cmc
lret
int
insb
stos
ljmp
fldenv
xchg
icebp
lcall
test
hlt
das
loopne
ficoml
mov
cmpb
imul
jmp
xor
dec
cmpsb
insl
dec
xchg
mov
push
es
xchg
jp
push
add
jae
out
sbbl
in
popa
adc
jo
mov
mov
cmp
mulb
aas
mov
popa
jbe
cmp
mov
movsl
xchg
lea
data16
mov
pop
jge
ds
jne
or
sub
push
ret
aas
rcrb
les
mov
lock
adc
jmp
fidivrl
inc
dec
scas
dec
inc
repnz
xor
xchg
sti
push
sbb
popf
enter
push
in
icebp
loop
sti
mov
lods
cltd
mov
xchg
fmull
das
cltd
mov
cmpl
lea
clc
ret
fldl
lahf
adc
rorl
sub
sub
sub
xchg
push
mov
sarb
sub
mov
dec
idivb
adcl
sahf
ds
add
sbbl
xchg
js
out
fwait
cmp
or
test
loope
adc
jo
mov
rcrb
mov
push
hlt
movsb
adc
push
fistpll
icebp
jmp
pop
mov
outsb
scas
xchg
cs
lock
dec
icebp
push
scas
or
mov
loopne
add
mov
mov
jne
push
mov
or
scas
std
addr16
fnstenv
in
pop
es
xor
movsb
sub
push
adc
or
adcl
and
or
cld
stos
pop
out
or
mov
pop
cmp
pop
and
jnp
xor
jg
and
mov
mov
out
out
sbb
mov
push
in
mov
outsb
outsb
lods
and
adc
fcomip
iret
out
movsb
and
cmp
inc
hlt
mov
cmpsl
xchg
push
and
es
inc
not
jge
subl
es
jbe
pop
fistps
mov
mov
jne
ljmp
xor
sub
lock
sldt
mov
push
out
cld
pop
out
adc
leave
popa
cmp
call
test
sub
or
mov
je
rcrb
mov
add
sbb
inc
xor
sahf
or
jae
roll
ss
rolb
test
pop
cmp
in
push
pushf
mov
popa
repz
mov
and
inc
mov
jne
sbb
mov
jne
jo
loopne
stos
cmp
sbb
adc
repz
add
cmp
inc
das
cmp
or
jp
outsl
add
dec
stc
xchg
ret
jle
mull
or
cmp
sti
rcll
ret
sub
aam
add
sbb
aas
jo
gs
addr16
mov
jbe
sbbl
dec
lods
xlat
dec
mov
shlb
hlt
push
add
mov
cltd
or
push
add
inc
aam
jnp
in
sahf
nop
push
fs
and
popa
sahf
dec
out
mov
out
lcall
rorb
icebp
jg
rcrb
test
dec
fmull
out
repz
add
sub
xor
int
push
add
or
arpl
or
leave
out
pop
cli
push
ffree
and
adc
call
stc
ss
adc
xchg
lcall
ja
int
mov
test
imul
clc
insl
sbb
sub
lret
mov
pop
add
stos
in
daa
lds
pop
mov
shlb
test
cmp
in
sub
dec
fcoml
jnp
sbb
or
mov
jg
jae
push
cmp
sub
pop
andl
ss
dec
sub
movsl
xchg
xor
aad
cmpsl
incb
das
les
inc
xor
out
insb
pop
out
addr16
andl
insb
js
lahf
shr
and
rcrb
sub
dec
ljmp
dec
bound
loope
mov
push
pushf
mov
sbb
add
sbb
sbb
cmp
cmp
lahf
je
lahf
sbb
mov
pop
mov
jb
into
inc
ss
loope
add
sti
xlat
inc
and
xchg
add
mov
push
add
sbb
pop
push
mov
adc
ds
mov
cmpsl
call
subb
and
lcall
jo
inc
sub
cltd
mull
sub
pusha
adc
lods
bound
fimuls
ss
xor
rolb
ret
das
fwait
idivb
pop
mov
hlt
dec
mov
adc
cs
sub
fwait
stc
gs
insb
cmpsl
fstps
mov
dec
shlb
fistpll
adc
mov
ret
out
ljmp
decl
add
mov
mov
shlb
hlt
push
add
lods
arpl
hlt
push
add
jle
sub
and
jge
jmp
loop
mov
mov
icebp
and
pop
or
mov
insl
test
out
push
out
add
jl
mov
mov
jmp
dec
mov
mov
push
iret
jg
loope
fwait
inc
mov
cs
rcrl
mov
movsl
jns
jne
xor
jmp
in
nop
sub
mov
outsb
mov
cwtl
dec
cmp
jne
lods
pop
int3
and
int3
jl
hlt
mov
jge
add
pop
or
cmovg
int3
daa
call
sbb
jns
jmp
int3
mov
jl
aas
shlb
aaa
dec
insl
mov
push
add
adc
jmp
inc
and
inc
flds
mov
mov
push
ds
jl
sub
sbb
inc
loopne
rep
xor
cltd
and
iret
cli
add
mov
arpl
sbb
and
fdivrl
jbe
xchg
fdivp
mov
aas
int
inc
data16
xor
jle
sbb
add
orb
xchg
ret
mov
fiaddl
lcall
pop
andl
mov
mov
mov
push
divb
icebp
int
inc
pusha
adc
mov
push
loop
cmc
in
hlt
add
arpl
push
gs
pushw
add
adc
mov
pop
sbbl
imulb
cld
mov
rolb
dec
mov
inc
cmp
jbe
jecxz
or
xchg
dec
push
sti
inc
lock
xchg
aad
adc
test
jnp
and
into
adc
inc
cmp
sbbl
xchg
fs
shlb
hlt
push
add
scas
shrl
fwait
loopne
fidivl
repz
add
xor
xor
dec
xchg
mov
outsb
push
sub
jmp
in
mov
sub
das
fmulp
mov
dec
mov
fsubl
insl
push
nop
xor
imul
or
and
movsl
ljmp
loop
or
cltd
icebp
movsb
jmp
loope
sbb
cs
scas
dec
outsl
iret
fld
aas
stos
pop
movsl
fcmovb
pusha
adc
sbb
frstor
mov
fdivrs
mov
xor
mov
sub
inc
insl
aad
xor
lcall
jnp
fadds
pop
xchg
mov
negb
inc
int
mov
dec
cli
ljmp
jnp
lock
sub
popa
enter
xchg
loopne
shlb
and
inc
hlt
push
add
orl
fdivs
mov
adc
mov
lods
lret
call
arpl
mov
imul
daa
pop
mov
sbb
push
add
iret
jbe
std
cli
xchg
mov
jns
mov
enter
add
jne
aas
lcall
out
cmp
dec
rclb
jg
add
inc
mov
jl
jbe
shlb
pusha
jb
ljmp
mov
dec
rcrb
test
dec
fnstsw
lock
cltd
lcall
lret
jnp
subl
scas
cmp
cltd
push
aas
repz
pop
xor
mov
je
test
xchg
mov
sbb
fimuls
rolb
xchg
pushf
push
sbb
adc
adc
xor
or
mov
mov
jo
mulb
xor
cmp
dec
fsubrp
push
mov
out
repnz
add
roll
js
popl
into
sub
or
mov
ss
push
shrl
push
cltd
ficomps
mov
std
mov
sarl
in
sahf
xchg
add
into
cmp
loopne
je
je
add
and
enter
mov
fstpt
xchg
push
xorl
insb
dec
cs
xchg
hlt
push
add
mov
push
add
mov
ss
cmp
es
gs
cmp
es
and
push
rorb
icebp
inc
addr16
in
xchg
lock
add
shlb
push
aaa
lods
jno
xchg
push
push
add
into
adc
push
scas
sbb
xchg
push
push
push
add
inc
rolb
hlt
push
add
mov
shrb
cmpsb
fs
and
inc
add
mov
or
aam
adc
xor
jno
inc
ss
add
loope,pt
cmp
jle
aas
out
das
shll
and
cmp
jnp
int3
push
pop
jns
sbb
mov
push
shll
loope
fldl
add
loopne
mov
cli
in
js
sub
popf
pop
push
cmp
loope
pop
xorl
rcrb
lods
dec
in
pushf
or
dec
xlat
or
jnp
dec
push
and
or
mov
loope
cmpsb
loopne
push
inc
inc
lods
loopne
fcmove
and
cmp
movsl
ljmp
push
pop
and
jno
aas
in
mov
jmp
ret
arpl
call
mov
lods
loope
mov
pop
cmp
dec
in
mov
insl
dec
repnz
cli
aas
out
sub
or
insb
sbb
fidivrs
cmp
lods
clc
int
jmp
mov
in
sub
sbb
addr16
xchg
leave
or
adc
pop
movsl
pop
repnz
imul
outsl
in
push
outsb
jecxz
mov
dec
mov
inc
adc
mov
and
jns
rcrb
test
xorb
push
add
mov
jle
xchg
pop
add
shlb
and
push
add
pop
or
dec
mov
insb
mov
xor
push
lcall
add
xchg
je
shr
scas
ror
dec
adc
fcompl
push
push
jnp
repnz
sbbl
jo
mov
mov
jge
js
in
cmpsl
jnp
jmp
out
jne
cmp
mulb
clc
movsl
dec
push
inc
loop
rep
xor
sbb
xchg
rorw
testb
in
dec
sbb
jbe
push
add
jmp
and
lock
mov
dec
shlb
hlt
push
add
lods
shlb
pushf
loope
clc
lea
rol
and
sbb
mov
push
loope
fistpll
rep
add
xor
gs
ljmp
aam
cmc
push
push
add
xor
lods
sti
lea
jl
jo
cs
enter
lret
jnp
mov
pop
inc
mov
mov
sti
ja
mov
es
cmc
test
nop
icebp
xor
imul
in
pop
mov
leave
cmp
adc
xchg
xchg
mov
push
into
jle
insb
mov
sbb
lret
jb
popa
cld
je
inc
loopne
cmc
fisttps
sarb
push
jb
xor
adc
shlb
hlt
push
add
lods
shll
popf
loop
fdivl
stc
mov
in
mov
mov
cmpsl
pushf
mov
lcall
sbb
loop
mov
mov
test
in
mov
rolb
dec
cwtl
inc
push
pop
add
xchg
test
jno
imul
movsb
dec
mov
push
dec
or
xor
jae
fstl
cmp
jmp
jle
inc
fs
pop
sub
xor
jle
nop
insl
in
mov
gs
sbb
sarb
dec
xchg
or
push
push
mov
push
jbe
icebp
push
fdivrs
mov
call
in
xchg
xchg
fisubl
insb
outsl
std
xor
sbb
test
insl
mov
push
add
data16
cmp
sbb
inc
scas
into
sti
sub
pop
push
mov
stc
in
dec
hlt
jge
out
aaa
dec
xchg
mov
mov
cmp
loop
mov
leave
pusha
add
pop
or
cmp
js
shlb
mov
arpl
dec
jg
jns
or
sbb
mov
jb
rcrb
jecxz
add
lods
pop
into
repz
add
ds
pop
hlt
push
add
fwait
pop
xchg
lret
adc
iret
xchg
mov
push
ffree
push
scas
dec
hlt
pushf
add
pop
mov
adc
icebp
mov
loop
mov
push
ja
push
ffreep
sbb
mov
push
loope
jmp
pop
mov
jae
jo
jp
push
mull
cmp
scas
fstpt
push
fcmovu
dec
jns
xor
dec
fadds
into
sub
cwtl
mulb
mov
pop
rolb
adc
sub
enter
jb
mov
sub
ret
ja
xchg
xorl
movsl
fstpt
fldt
push
shll
daa
lret
sub
xchg
cmp
xchg
mov
pop
or
pop
add
imul
sub
jl
lock
lods
pop
out
imul
pushf
dec
fisttps
inc
push
lahf
inc
lcall
or
fstps
mov
cld
mov
cwtl
fisttpll
lods
icebp
xchg
sti
testb
push
xor
sub
xchg
fisubrl
stos
pop
iret
mov
pop
jno
adc
lea
mov
ret
repz
shll
call
mov
out
mov
inc
pusha
add
les
shlb
push
add
pusha
mov
jnp
sub
and
pusha
adc
mov
sub
xor
in
lcall
push
in
sbb
test
or
ja
and
xchg
aaa
mov
mov
dec
ret
je
mov
call
and
sub
jno
xor
test
jle
sub
cli
outsl
pop
push
hlt
xchg
cmp
push
cmp
jle
out
xchg
xor
and
jnp
pop
mov
pop
jp
ljmp
mov
jnp
push
aaa
xchg
jbe
gs
jno
cmp
hlt
loop
push
lock
shll
sarl
jmp
mov
sahf
ds
pop
pop
add
fwait
sub
lret
out
xorl
scas
or
add
mov
jo
lds
push
or
push
hlt
pop
inc
add
jg
test
int
or
adc
push
sbb
mov
ret
imul
cwtl
mov
mov
imul
shl
mov
mov
push
push
shrl
shlb
hlt
push
add
lods
sbb
adc
aaa
fcoml
cmp
xor
rcrb
mov
jb
sbb
mov
iret
call
sbb
add
push
cld
arpl
ljmp
bound
aaa
out
aad
xchg
xor
insl
int
dec
mov
xor
xchg
mov
ja
adc
repnz
jle
js
nop
lret
xor
jp
insb
lret
dec
std
mov
sbb
pop
mov
dec
xor
xchg
aas
test
into
and
cld
stc
pop
scas
jge
addr16
dec
jne
nop
pop
popf
loop
mov
pop
sti
gs
lret
jo
test
out
xor
ds
xbegin
sub
cmp
push
adc
xchg
imull
jge
pop
sbb
mov
fwait
sub
push
ret
insb
std
out
roll
xor
jmp
sub
ret
push
xchg
pusha
adc
mov
aas
out
pusha
hlt
push
add
rolb
shrl
jmp
shll
xchg
repz
add
into
jae
outsb
test
xor
xor
dec
cld
outsl
aaa
push
mov
pop
subb
or
lods
and
sub
out
leave
and
mov
push
or
mov
jle
inc
loopne
aam
add
shll
mov
adc
push
je
cmp
shll
mov
fmuls
pushf
loope
mov
adc
inc
sub
daa
cmpsb
jne
push
imul
sub
mov
dec
mov
clc
ds
fisttpll
mov
xchg
xchg
pop
jle
pop
inc
rolb
call
or
testl
push
or
mov
jo
dec
xor
jbe
je
adc
lahf
aas
fisttps
shrb
loope
add
adc
jmp
enter
ljmp
bound
loope
repz
je
or
repz
call
push
and
sbb
mov
fidivrs
lahf
mov
imul
pop
mov
das
clc
fwait
xlat
mov
stos
pop
rcll
gs
imul
xchg
ja
sbb
xchg
cld
stos
iret
test
rolb
xchg
fs
cmpsb
push
dec
xor
xor
test
and
mov
jg
negl
iret
jg
or
add
xchg
push
fcomps
dec
ja
repnz
push
mov
scas
jne
mov
sahf
and
mov
mov
mov
in
add
and
dec
data16
insb
adc
cmp
sub
fidivrs
pop
pop
pop
jbe
inc
mov
loop
push
movsb
out
cwtl
cmp
pop
popl
or
xchg
iret
jae
aam
push
movsl
or
insl
fisubl
jnp
mov
mov
sbb
sub
or
jo
mov
inc
stos
and
sbb
mov
in
popa
lret
shl
add
push
daa
push
mov
push
and
fidivrl
int
cmpb
mov
jg
mov
xor
jl
int
or
xchg
adc
add
mov
repz
jl
mov
in
stos
sbb
sbb
dec
pop
xchg
add
jbe
cltd
mov
pusha
mov
pop
push
push
cmp
mov
mulb
out
loope
and
xchg
icebp
pop
jmp
sbb
sbb
add
fisttpll
in
out
xchg
xlat
jle
sbb
daa
push
jmp
jl
fsubrs
cli
inc
mov
repz
fdivrs
and
imul
pop
shll
cmp
out
scas
xor
sahf
or
icebp
xor
jne
fdivrl
cmpsb
adc
sbb
rcrb
xchg
push
fdivrp
das
jnp
out
mov
xchg
icebp
ds
mov
jnp
rcrb
mov
push
loope
filds
mov
adc
lods
arpl
xor
pop
adc
jmp
cmc
xchg
inc
mov
push
add
repnz
fsub
mov
and
dec
dec
ret
cmp
xchg
push
cmp
or
jbe
pop
lds
popf
mov
fldlg2
inc
jnp
divb
adcl
sbb
lahf
mov
push
repz
sahf
sbb
call
movl
popf
add
rcrb
mov
jmp
repnz
sub
ss
xchg
mov
mov
lret
shrb
xchg
cwtl
inc
cwtl
aad
cli
pop
mov
cld
test
stos
or
imul
dec
mov
test
sbb
jb
shlb
push
mov
cltd
daa
xor
and
mov
in
sbb
mov
mov
test
pop
call
scas
inc
test
orl
pop
push
xor
push
leave
and
xchg
in
and
and
lea
mov
mov
xchg
or
dec
cltd
cmp
into
inc
cmp
mov
or
sti
jnp
sbb
cmp
push
add
jbe
inc
fwait
xchg
or
dec
in
test
dec
jle
mov
add
sbb
or
push
push
ja
push
add
mov
fs
shlb
hlt
push
add
mov
jp
stos
ffreep
gs
and
pushf
sub
pop
addl
insl
mov
inc
mov
mov
pusha
mov
repz
xchg
aad
sbb
andb
or
dec
mov
adc
lods
rcrl
mov
add
adc
int3
ss
cmp
mov
mov
cmp
mov
stc
aam
stc
xor
ror
dec
mov
push
cli
xchg
push
icebp
and
push
cltd
dec
dec
lods
int3
hlt
inc
enter
test
push
scas
sbb
adc
and
sbb
add
sbb
loope
pop
repz
adc
fwait
sbb
push
adc
and
mov
sbb
or
icebp
cmpsl
xor
adc
mov
jo
cltd
ljmp
test
mov
xchg
int3
fwait
adc
adc
movsl
int3
insb
dec
xor
mov
jne
jg
mov
daa
les
inc
nop
cmc
repz
add
push
out
aad
dec
jmp
xchg
leave
test
ljmp
fwait
add
jns
outsb
push
xchg
clc
sub
dec
clc
std
int3
arpl
inc
loop
xor
fildll
rcrb
xchg
sbb
jae
fmull
pop
pop
cld
lods
sbb
pop
lds
bound
ljmp
dec
shlb
mov
jb
popa
xchg
sub
jg
aad
cmpsl
andl
fs
scas
fisttps
int
negl
pop
inc
sub
mov
mov
xor
hlt
mov
mov
bt
push
xchg
or
stos
inc
aaa
lds
push
das
in
pop
cli
stos
sbb
out
jmp
in
pop
adc
sub
sub
pop
out
jle
pop
es
out
dec
shll
dec
in
bound
hlt
gs
aaa
ss
gs
push
mov
adc
mov
xchg
stos
fbld
jnp
add
test
mov
jae
dec
mov
mov
movsl
movsl
je
mov
js
mov
shrl
lock
inc
xor
aam
xchg
push
pusha
outsl
dec
clc
ljmp
repnz
mov
jl
sahf
aad
movsb
mov
imul
lahf
or
mov
sbbl
rcrb
mov
push
jecxz
jbe
xchg
iret
xor
push
push
iret
add
scas
cmp
push
jns
pop
adc
xlat
xor
mov
fistpll
repnz
xor
cmp
lods
mov
mov
int3
ljmp
ljmp
test
int3
insb
or
sub
imul
mov
push
loope
jnp
ljmp
enter
punpckhdq
add
xor
sbb
test
mov
push
arpl
xchg
mov
dec
mov
je
icebp
repz
cmpsb
fildll
and
rolb
xchg
loop
aad
imul
inc
out
xchg
fmuls
push
addr16
es
cld
inc
icebp
mov
jmp
sbb
add
mov
dec
mov
iret
icebp
fwait
mov
pop
das
mov
cmc
pop
cmpsl
cltd
es
dec
jle
xor
xorb
and
mov
loopne
andb
xor
pop
adc
xor
and
push
add
xorb
int
rorl
pop
mov
rclb
pusha
mov
xorb
add
insb
inc
sub
pop
aam
aad
lret
add
cmp
aam
jnp
popa
loop
xor
push
aad
lret
mov
pop
movzwl
inc
mov
ja
inc
addr16
stc
daa
or
ret
pop
cmp
notl
ret
lock
outsl
and
pop
lds
sbb
xlat
or
xchg
std
push
adc
out
lahf
adc
xlat
loopne
add
fstpt
bound
test
shlb
hlt
push
add
test
cli
push
fiadds
pop
les
jnp
out
int
loop
out
and
sbb
mov
add
sbb
jle
mov
mov
jae
and
mov
sarb
inc
and
sbb
add
subl
icebp
or
call
cmp
mull
pop
dec
es
jle
gs
mov
xor
arpl
out
xchg
pop
aas
icebp
mov
sub
adc
or
pop
pop
pop
push
iret
lock
insl
sbb
mov
fmul
andb
js
outsb
popl
inc
push
cmp
add
cmp
or
icebp
push
fdivrs
sbb
inc
mov
scas
push
mov
sbb
leave
add
cmp
sbb
lock
mov
lahf
daa
fnstcw
mov
adc
xlat
xlat
add
xor
sti
iret
dec
out
xchg
or
cmc
sahf
je
pop
inc
mov
cmp
stos
leave
or
cmp
jbe
jo
shlb
hlt
push
add
mov
mov
arpl
and
call
loop
roll
or
cs
mov
push
sub
inc
lds
jmp
popf
addb
scas
rcrb
xor
jl
out
inc
inc
cmp
popf
xchg
mov
idivl
popa
out
xor
das
jecxz
repz
mov
jle
jnp
out
lahf
xchg
stc
ss
add
cli
lcall
sub
adc
mov
cli
xor
fs
hlt
push
add
shrl
rcrb
mov
push
jecxz
test
imul
mov
in
add
inc
fcmovu
mov
push
mov
add
outsb
cld
and
push
adc
push
adc
mov
add
xchg
or
insl
mov
sbb
pop
add
push
fwait
pop
mov
testb
aas
mov
loop
out
popa
and
cwtl
ficoms
pop
adc
movsb
pushf
adc
inc
insl
xchg
mov
lods
aam
adc
xor
jno
xor
pusha
adc
mov
mulb
push
add
mov
insb
mov
lock
jg
sub
out
fs
add
call
mov
lahf
xor
jg
std
mov
out
sub
loope
sti
roll
popf
or
shr
jecxz
jp
adc
and
mov
fsubrl
mov
mov
or
cli
xchg
pusha
mov
outsl
inc
mov
fcoml
movsl
push
push
fstpt
sti
jle
xor
mov
push
ja
pushf
pop
mov
lret
es
fwait
dec
jge
inc
nop
movsl
ljmp
outsl
pop
sub
ss
cmpsb
sbb
fiaddl
sbb
enter
nop
popa
jbe
sti
stos
sbb
dec
mov
xchg
iret
in
mov
jbe
adcb
pop
test
andl
add
lahf
push
cmpsb
dec
or
sbb
mov
ja
pushw
popa
test
pop
xchg
shlb
hlt
push
add
mov
sub
repz
mov
mov
xchg
in
and
pop
lods
loopne
cmp
shlb
scas
sub
cmp
sbb
jne
add
pusha
xchg
pop
mov
iret
outsb
xchg
xchg
ret
sbb
adc
ret
into
fldcw
push
lret
imul
pop
adc
xchg
inc
ret
jbe
pop
adcl
jge
out
sub
jo
andb
daa
rcrb
ficoms
lahf
xlat
xchg
inc
ljmp
lods
popa
mov
sbb
add
xchg
or
mov
mov
mov
xor
xlat
inc
adc
xchg
fwait
xorb
in
or
and
lods
mov
pop
lret
lea
fstps
xchg
lods
push
adcl
dec
sub
sahf
std
es
xlat
or
jp
test
lods
hlt
mov
std
shlb
mov
arpl
test
or
clc
cmp
pop
pop
jle
mov
jmp
clc
arpl
add
shl
hlt
xorb
push
loope
ja
testl
push
add
cmpsl
inc
in
xchg
inc
push
or
stos
bound
fimuls
or
iret
mov
xchg
repnz
sbb
inc
insb
adc
add
or
pusha
mov
mov
rcrb
mov
sub
cmpsb
inc
mov
bound
out
rcrb
xchg
mov
jnp
fsts
mov
hlt
movsb
adc
push
fists
pusha
adc
mov
gs
mov
mov
pop
mov
and
mov
push
dec
test
addl
pop
aaa
push
lcall
mov
pop
stc
arpl
rcrb
sub
sbb
or
out
stos
stos
sarl
cmc
inc
jl
idivl
mov
ljmp
mov
push
mov
adc
cmp
mov
imul
xlat
dec
cld
add
xchg
rolb
mov
pop
inc
mov
xchg
movsb
mov
push
cmp
into
jl
lahf
cmp
cltd
shll
insb
xor
in
jno
or
das
cmp
mov
popa
mov
lods
mov
stos
mov
std
cmp
andl
pusha
adc
lods
arpl
ret
dec
sub
fldt
or
inc
fiaddl
imul
push
dec
rolb
gs
cmpsb
out
push
xchg
fisubs
fcompl
daa
xlat
xchg
cli
mov
add
pop
shrl
mov
xor
xchg
std
fs
imul
fs
mov
mov
out
dec
mov
adc
icebp
mov
loop
mov
sbb
xchg
fwait
shll
testl
sahf
stos
pop
pop
mov
pop
jmp
and
das
pop
lods
dec
mov
imul
dec
jbe
pop
ficompl
cmp
cmp
test
subb
inc
pushf
xchg
or
sub
lods
sbb
jno
push
mulb
out
loope
mov
and
in
push
movb
push
xchg
dec
xchg
or
sarb
jmp
andb
das
mov
xchg
xor
mov
mov
test
cmp
cmc
ds
int3
cmp
jge
subb
orl
adc
inc
fisubrl
pop
sarl
jge
ja
xor
popa
pop
jne
dec
fistl
jnp
sbb
cmp
push
add
jbe
cwtl
jl
and
pushf
movsl
sub
mov
jbe
sbb
mov
fnstsw
and
jne
and
pop
jge
cld
adc
rolb
loope
dec
inc
or
adc
fcomps
adc
mov
mov
repnz
push
cmp
and
xchg
fstpt
xor
clc
scas
test
push
gs
jl
stc
fdivrp
lods
movlps
fbstp
push
mov
pop
jp
pop
outsb
aad
pop
mov
adc
mov
and
rcrb
jns
in
negb
movsl
push
clc
sbb
jae
dec
xor
inc
das
cmp
xchg
push
nop
pop
mov
sub
add
adc
hlt
xchg
mov
push
test
add
mov
jp
stos
dec
xchg
insl
std
loopne
lahf
outsl
in
jns
mov
pop
mov
xor
sti
fwait
dec
mov
clc
xchg
test
rcrb
pextrw
mov
sti
adc
les
pop
out
pushf
cwtl
je
gs
mov
jp
adc
test
in
inc
push
and
jns
dec
sahf
mov
push
js
bnd
in
sahf
xchg
pop
gs
add
bound
mov
movsl
push
repz
add
ss
hlt
push
add
xchg
decl
and
pop
add
or
out
mull
pop
xchg
rcrb
mov
je
rcrl
fldl
xchg
push
enter
jae
movsl
ljmp
ret
movsl
mov
repz
aas
stos
int
mov
arpl
or
cmp
jns
in
scas
cmp
rcrb
mov
xor
std
imul
jp
in
scas
sbb
lret
int3
mov
ja
push
lock
push
data16
ja
xchg
sarl
mov
ja
or
inc
gs
xor
and
lods
cmpsl
arpl
jg
mov
scas
pop
das
xchg
ret
rcll
lds
cli
sbb
xor
mov
scas
jecxz
push
mov
add
sbb
jnp
in
popf
xchg
idivb
into
sub
push
sti
stos
sbb
push
shll
xlat
leave
orl
outsb
rcrb
mov
lds
pop
enter
inc
sahf
or
pop
rcrb
xchg
push
stos
bound
std
xor
sbb
dec
add
xor
inc
xchg
in
adc
add
push
sub
in
fistpll
std
loopne
scas
call
out
das
ret
push
pushf
dec
push
movswl
test
cmp
jl
dec
mov
mov
sbb
xchg
mov
gs
loopne
in
lcall
cmp
inc
imul
das
cmp
arpl
ja
loope
in
pop
lret
popf
les
lods
icebp
jno
rcrb
test
insl
movsl
punpckhdq
ret
repz
add
ljmp
lods
shll
jle
jns
in
test
gs
sbb
mov
jae
mov
add
popf
std
cmpsb
adc
sbb
adc
dec
push
xchg
movsb
jb
add
jge
push
dec
iret
inc
or
sub
mov
lret
push
icebp
sbb
jb
inc
insl
loop
daa
pop
add
repnz
jo
aaa
xchg
cwtl
decb
xchg
inc
mov
adc
dec
mov
ficoml
movsl
adc
ss
pushf
cli
cmpsb
push
test
adc
nop
xor
fadd
stos
lea
fwait
sub
pusha
adc
test
cld
sbb
jp
xchg
cmpsl
fsts
ja
jno
inc
outsb
push
ficoml
pop
lret
aaa
xlat
xor
mov
aaa
stc
lahf
sub
jge
call
lret
push
add
mov
sub
int
int3
push
add
jp
test
mov
adc
andl
sbb
xor
lahf
sub
mov
jbe
jno
int
cmp
leave
inc
sbb
test
mov
push
roll
jle
fldcw
gs
add
mov
dec
in
pop
sub
dec
pop
cmp
mov
xlat
lcall
outsb
dec
mov
inc
mov
fisttps
pop
push
xchg
pop
stos
enter
int3
cmp
pop
jp
aam
push
jp
sarl
sbb
pop
scas
mov
xor
jbe
sub
add
cmp
gs
lret
in
test
cmp
xor
mov
int
xorb
int
cmp
notl
fisttpl
push
mov
sbb
roll
inc
lret
loope
add
sbb
ds
or
pop
jb
fsubrl
sahf
ror
jno
lds
adc
mov
sbb
jbe
jecxz
lods
sbb
add
push
movsb
pushl
pop
rol
and
inc
nop
cli
push
outsl
or
inc
fisttpll
ss
movsl
xorb
mov
es
and
adc
inc
adc
test
lahf
dec
or
aaa
gs
jg
outsb
out
arpl
mov
adc
rolb
int
mov
movsl
xchg
arpl
inc
add
inc
mov
sbb
mov
mov
fisubrs
sbb
mov
push
loope
xor
cmpsb
mov
in
loop
sbb
pop
mov
adc
jg
mov
imul
fisubs
mov
out
cmp
inc
repz
sbb
xchg
sbb
xchg
loop
cmp
les
fucomi
movsb
sbb
or
xchg
inc
int3
xor
push
mov
dec
sub
popa
int
fwait
cmp
push
mov
mov
sbb
lret
rcrb
xchg
push
fistpll
lahf
add
xor
pusha
adc
mov
mov
add
inc
iret
add
pusha
mov
hlt
push
add
adcb
push
scas
push
add
jnp
repz
xchg
inc
push
add
rcrl
jnp
ljmp
lds
bound
pop
aam
sub
jne
fmull
andl
les
push
add
adc
jl
inc
mov
jne
sbb
call
xchg
pushf
add
xor
xchg
pop
pop
lret
jnp
jbe
adc
aaa
arpl
das
cld
test
jo
mov
ja
adc
sub
add
cmpsb
sub
mov
push
js
popf
es
bound
pop
das
sub
adc
insb
in
adc
sarl
stc
cmp
sti
mov
lahf
call
aam
cltd
xor
orl
jae
jle
arpl
test
movsl
xchg
nop
sbb
sbb
mov
push
lds
add
dec
popf
fwait
pushf
mov
lea
imul
adc
inc
call
ffree
adc
adc
jbe
or
dec
mov
cmp
rorb
cmp
gs
mov
test
arpl
sub
xchg
and
shlb
xor
cmp
rcr
pop
in
jle
lea
out
fldt
cwtl
mov
inc
dec
push
lods
xor
cmpsl
cmp
push
mov
pushf
cmpsl
xchg
aam
into
mov
call
mov
imul
jae
shrl
cmpsl
inc
mov
shlb
mov
add
iret
repz
cmp
pop
iret
or
dec
mov
rcrb
ret
inc
sub
mull
mov
and
mov
push
scas
sbb
loop
lods
dec
cld
insl
xchg
lret
ss
sub
push
sbb
pop
scas
jle,pt
xchg
aad
cmp
loope
insl
dec
jae
sub
xorl
sub
mov
push
lcall
pop
mov
pusha
adc
mov
jae
pop
xchg
lock
mov
push
sbb
in
je
fcoml
roll
xor
rorb
shll
leave
mov
sti
dec
and
adc
mov
cmpsl
pop
pop
mov
enter
insl
push
sub
xchg
inc
adc
xchg
jg
clc
sub
lock
idivb
xorb
gs
mov
sahf
pop
jg
lods
push
inc
sarb
inc
pop
dec
pop
inc
cmc
push
mov
out
inc
negl
lret
jg
orb
repz
call
mov
fidivrs
mov
ret
loop
popf
mov
cmc
cmp
cmc
push
aad
push
mov
sbb
test
jo
shlb
push
add
sbb
adc
ja
jecxz
lods
or
jne
mov
lahf
orl
xchg
inc
mov
push
push
jl
pop
xor
mov
mov
mov
aad
push
popf
mov
mov
jns
enter
je
adc
mov
mov
in
lock
loope
push
jnp
jne
stos
cmp
in
repz
hlt
mov
jb
push
sarl
dec
or
xchg
adc
jnp
push
aas
push
cmc
movsl
pop
mov
mov
fs
mov
or
jg
setno
jge
adc
popf
sub
cmpl
mov
in
xchg
out
leave
cld
je
jo
lcall
ds
cmp
pop
mov
push
inc
test
mov
jb
stc
sub
jnp
bound
jae
mov
sub
mov
jb
and
imull
jecxz
aas
mov
pop
xor
pop
dec
jg
arpl
test
xchg
cmp
aas
cmp
cltd
sub
insl
sbb
pop
mov
mov
push
ret
fmull
sub
or
outsb
mov
sub
dec
hlt
push
add
mov
xor
sub
lock
subb
subb
add
xchg
fldt
fcoml
mov
push
orb
adc
xchg
sub
mov
fsubl
lock
jae
insb
lret
cmp
mov
xchg
xchg
sub
cmp
daa
mov
mov
pusha
mov
mov
jmp
pop
jmp
arpl
inc
out
iret
jb
inc
fisubrl
jge
push
inc
mov
test
fmull
cmp
and
rcrl
loop
outsl
and
push
fidivrl
packssdw
lods
xor
push
cld
mov
sbb
test
pop
xor
pop
dec
sbb
into
dec
insl
sbb
xchg
fmuls
add
inc
sarl
lahf
push
adc
sub
jbe
jo
shlb
hlt
push
add
mov
lods
shlb
pushf
sub
sbb
mov
les
je
pop
shlb
push
xchg
sbb
mov
push
loope
je
sbb
mov
jb
int3
inc
sub
xchg
add
imul
ret
sahf
inc
cmp
jmp
lcall
push
das
fwait
stc
movsl
push
idiv
or
mov
jecxz
ficoms
movsb
adc
mov
push
jecxz
xor
fcoml
cmp
int
icebp
sub
sub
add
mov
push
loope
repz
pop
ficomps
es
out
sbb
mov
or
push
jae
add
push
adc
in
jp
shlb
hlt
push
add
mov
andb
mov
jl
arpl
add
pop
pop
cmpl
lcall
push
hlt
rcll
bound
push
or
cmp
shlb
hlt
push
add
mov
cmc
data16
push
add
push
add
lods
pop
imul
and
jmp
das
inc
add
pusha
add
add
shrl
xor
das
mov
sbb
push
mov
push
sbb
mov
shlb
hlt
push
add
lods
bound
fimuls
hlt
xchg
out
and
sbb
bound
les
and
add
push
add
lods
repnz
in
and
ret
das
mov
cmp
jnp
sbb
sbb
repz
cmp
adc
ljmp
and
add
cld
add
je
push
dec
and
xor
add
pop
adcl
in
adc
mov
xchg
push
dec
mov
leave
dec
loop
sbb
cmp
adc
lahf
cs
dec
pop
mov
test
push
xchg
xchg
add
jns
jge
jmp
adc
out
mov
fwait
add
pop
lock
mov
cmc
xchg
pushl
stos
fstpt
sbb
dec
pop
mov
or
imul
mov
add
adc
mov
or
stos
in
sbb
jo
lods
sti
jo
fisubrl
ds
fmull
xor
sbb
shlb
cmpsl
fnstenv
mov
nop
fnsave
cs
and
pop
sbb
inc
call
icebp
idivb
pop
lret
jnp
sbb
cmp
push
add
jbe
sub
push
add
lds
rcrb
test
dec
fnstsw
js
out
into
mov
jp
test
loop
or
pop
call
pop
rol
and
xchg
and
xor
loop
out
mov
xor
sbb
repz
loopne
cwtl
push
int3
clc
jbe
insl
jmp
mov
shlb
and
sbb
add
jg
sahf
insl
sbb
and
mov
and
ret
xchg
xor
pop
xor
lea
ljmp
test
push
add
push
push
cmp
or
dec
sub
and
jge
ljmp
imul
shlb
orb
mov
mov
leave
push
pushf
inc
aad
addb
inc
mov
pop
movb
dec
mov
dec
leave
pop
sbb
shlb
xor
fsubs
xchg
je
adc
jp
test
mov
pop
movsl
push
xor
andl
sbb
dec
aaa
pop
ficoms
rcrb
test
cmp
dec
push
loop
mov
or
mov
mov
jmp
xor
lahf
push
mov
clc
and
icebp
les
mov
je
mov
xlat
ja
rcrb
jnp
sbb
xchg
fisttpl
outsl
pop
mov
nop
inc
imul
adc
lods
fsts
in
sbb
test
nop
xchg
or
arpl
sbbb
mov
rorb
cli
outsl
in
aas
pop
ret
sbb
jbe
jmp
cmpsb
je
insl
icebp
pop
or
adc
xor
cwtl
call
inc
imull
and
or
fsubrp
cmp
pop
lock
imul
cmp
jl
popf
repz
add
mov
dec
mov
rcrb
xchg
push
fisttps
enter
push
cmp
gs
xor
test
xchg
xchg
cmp
xchg
sbb
mov
xchg
xor
sbb
dec
fstl
rcrb
mov
push
loop
and
ljmp
or
fmuls
inc
adc
mov
aad
bound
call
imul
cld
data16
pushf
add
inc
sub
popa
test
mov
sbbl
repz
lret
sub
sub
jl
sub
cmp
sbb
jge
ja
sbbl
and
xor
mov
and
jnp
inc
sub
xchg
pop
sbb
mov
enter
dec
movsl
mov
dec
movsl
dec
mov
jge
ljmp
in
cmp
push
mov
out
int
push
inc
adc
or
mov
out
and
adc
notl
rcrb
cmp
cmp
push
jp
enter
cmp
sbb
inc
loope
xor
fisubrs
mov
push
inc
movsb
adc
add
jne,pn
xchg
lret
push
add
shrb
shlb
dec
xor
lret
push
mov
pop
ds
repz
data16
rcrb
xchg
push
fidivrs
aaa
clc
sahf
sub
shlb
mov
movsl
nop
cwtl
pop
enter
pop
mov
aam
jge
pop
pop
xorl
test
jbe
je
imul
shll
xchg
in
mov
int3
loop
stos
rolb
sub
enter
int3
repz
stos
jp
into
or
inc
mov
mov
leave
test
cmp
adc
aaa
fucomip
xor
jg
jbe
dec
cld
fwait
lock
insb
xchg
nop
data16
sub
cltd
hlt
mov
cmc
lcall
adc
cmp
test
jp
xor
pusha
int
add
dec
aad
mov
out
adc
dec
insb
push
cmp
xlat
sub
push
into
add
clc
fisubs
cmpsl
inc
out
aaa
test
sbb
add
inc
loope
add
add
gs
adc
push
hlt
pop
out
push
add
xor
arpl
xor
ret
sub
sub
mov
rcrb
mov
je
adc
xor
push
add
insl
or
repnz
cli
mov
jmp
jmp
sbb
and
out
or
es
jae
mov
aas
pop
scas
repz
les
mov
lock
mov
jecxz
mov
iret
add
fiadds
stos
pop
dec
lods
call
int3
jl
out
arpl
sbb
xchg
push
fistpll
nop
punpckhbw
push
add
jecxz
add
push
add
inc
lods
cmp
sbb
xchg
add
push
add
aas
int
rcrb
mov
jb
rcrl
mov
cmp
test
imul
nop
pusha
pop
in
cmpsl
nop
inc
mov
push
add
mov
xchg
cmc
mov
jns
data16
aad
mov
test
std
inc
repnz
push
call
xchg
insl
cld
jbe
fwait
test
test
xchg
inc
test
xchg
aam
mov
ror
subl
jecxz
ficoms
xlat
or
gs
xor
adc
xchg
and
xchg
push
fidivrs
repz
pushf
add
jno
add
lret
add
mov
add
sbb
mov
push
loope
sub
cwtl
insl
je
pop
clc
bound
dec
pop
mov
ss
nop
pop
xchg
pop
leave
scas
push
mov
insl
xor
aas
enter
mov
mov
call
fbstp
mov
cmpsl
sbb
pop
test
lret
xor
cmpsl
dec
movsl
imul
ja
xchg
xorl
dec
jmp
or
jmp
fmull
dec
add
mov
mov
cmpb
push
mov
push
add
ja
sbbl
lds
cmc
movsl
push
rorl
push
sub
xchg
out
insl
les
jns
adc
pop
mov
push
cmpsl
push
adc
pop
aam
cmpsl
inc
mov
outsl
sub
sti
xor
pusha
adc
mov
add
jo
xchg
repz
add
int
nop
shlb
ds
pop
push
push
add
fwait
inc
js
movsb
xor
les
cli
or
push
add
sbb
push
add
adcb
rcrb
test
xchg
adcb
rcrb
test
dec
fnstsw
inc
mov
jbe
xchg
scas
in
adc
pop
mov
enter
imulb
stos
fists
out
das
es
or
lock
jmp
lea
jle
push
in
std
mov
mov
and
repz
clc
insl
sbb
loope
jmp
out
loope
sbbb
fimull
fwait
out
int3
popa
mov
les
jg
mov
scas
and
jnp
out
mov
hlt
push
add
lahf
or
iret
mov
scas
mov
outsb
sbb
dec
gs
push
cltd
pop
inc
outsl
fstpt
xchg
fwait
std
imul
lds
mov
test
outsb
fcomip
push
add
sbb
adcb
mov
sbb
pusha
pop
sar
mov
pop
lock
stc
ja
stos
in
stos
pop
lds
push
mov
iret
outsl
fsts
js
sbb
xor
or
jecxz
hlt
ss
sub
shl
push
jb
int
xor
je
ss
ds
outsb
cwtl
add
xlat
lret
or
jg
arpl
xor
dec
or
jb
outsb
cmp
mov
jno
sub
fsubrl
mov
movsl
inc
scas
xchg
cmpsl
int3
pop
std
out
push
add
inc
pop
movsb
cmpsl
sub
inc
jecxz
popa
adc
jmp
mov
pop
popa
lret
mov
mov
aas
mov
lock
faddl
mov
adc
insl
mov
dec
icebp
xchg
inc
iret
sub
lret
push
push
add
pusha
push
xchg
das
fwait
pop
cmpsl
dec
xor
shl
sbb
call
jnp
jne
jae
ret
fwait
inc
or
dec
clc
imul
adc
push
mov
int3
push
adc
testb
dec
mov
push
loop
jmp
cmc
mov
dec
ds
mov
mov
mov
push
xchg
mov
or
pushf
jns
std
imul
and
jg
sbb
mov
hlt
shr
ljmp
daa
ror
mov
push
mov
std
movsb
inc
lahf
xchg
or
pusha
xchg
orb
fisttpll
or
mov
inc
popf
xchg
cli
xor
lods
pop
std
lret
lea
jnp
shlb
sub
jl
mov
push
stos
arpl
adc
jno
imul
and
mov
popf
mov
cmp
cmp
dec
or
sub
lds
icebp
xchg
jne
push
mov
es
mov
cs
imulb
sahf
cmp
pusha
adc
mov
stos
int3
pop
pop
sbb
mov
push
clc
mov
pop
in
inc
int
outsb
adc
fistpll
pop
mov
and
out
imul
sub
or
test
aaa
xor
and
or
add
idivl
inc
shr
cli
mov
adcl
nop
imul
mov
fwait
pop
cmp
fwait
inc
out
cmp
and
adc
call
test
mov
pop
mov
scas
sbb
cli
fsubrs
push
cld
mov
jae
ds
loope
cmp
pop
xchg
dec
lock
adc
push
dec
mov
sub
mov
fnsave
loop
mov
sahf
adc
call
lcall
stc
cmp
outsb
sbb
cwtl
mov
fstpt
pushf
mov
stos
dec
jmp
or
repnz
fdivl
stc
lahf
std
imul
daa
sub
scas
pop
in
mov
ja
icebp
xchg
xor
cmp
inc
jl
movsb
adc
sbb
inc
mov
lcall
ja
addr16
ljmp
inc
sahf
xchg
or
dec
out
mov
pusha
mov
dec
mov
push
xchg
pop
popa
jae
jmp
scas
jnp
pop
js
leave
and
shrb
lcall
or
scas
pop
mov
adc
data16
push
sub
out
lahf
push
pop
mov
jns
outsb
and
enter
inc
enter
into
adc
fadds
inc
cmc
xchg
mov
ljmp
add
mov
jne
inc
and
mov
pop
hlt
or
adc
fs
lret
inc
mov
lret
jne
das
movsl
popf
lret
dec
inc
sub
inc
je
lcall
lret
repnz
xor
fs
jge
scas
ja
insl
movsb
push
jbe
insl
sbb
test
rolb
testl
inc
push
jl
dec
adc
pop
or
enter
dec
nop
add
mov
jl
sbb
std
lods
lahf
dec
stos
adc
cmp
cmp
mov
mov
ret
scas
shrl
fwait
loopne
fimull
shlb
hlt
push
add
mov
shll
mov
cmp
sub
mov
cmp
in
sti
pop
mov
cmpsl
sbb
rol
gs
and
sub
sbb
ss
xchg
cwtl
pop
enter
fwait
xchg
cli
xor
fs
jle
ret
xchg
inc
shll
push
add
push
ret
cmp
or
jns
cmp
cmp
out
fwait
out
inc
and
sub
add
adc
inc
scas
sbb
mov
push
loope
lcall
sbb
dec
ljmp
cli
fiadds
xor
dec
dec
ljmp
xor
data16
sub
in
sahf
nop
push
adc
shlb
lret
mov
cmp
fwait
or
push
jnp
out
daa
orb
repz
add
pop
movsl
fcmovb
sbb
mov
cmp
xor
adc
lahf
xchg
or
lret
cmp
push
add
lods
pop
int
push
add
or
jae
stc
sbb
and
mull
adc
mov
cwtl
movsb
pusha
cmp
mov
xor
pop
dec
cmpsb
cmp
outsb
push
mov
in
lock
cli
mov
inc
inc
std
ret
or
fwait
aaa
jl
push
jl
jl
mov
popa
pop
rolb
loop
and
push
jge
test
push
dec
test
pusha
adc
shl
addr16
xor
push
ret
push
scas
dec
stos
popa
pop
jne
outsl
movsb
rcrb
mov
fisttpl
add
mov
scas
sbb
leave
and
xchg
out
pop
jmp
push
fisttpl
push
mov
jp
lods
inc
cld
roll
push
push
icebp
mov
pop
aam
sub
daa
cwtl
out
ljmp
ljmp
js
or
insb
lcall
jmp
add
imul
mov
sub
out
cmp
fistpll
pop
jl
ja
fistpll
ds
xchg
add
pop
js
ljmp
lahf
lock
sub
js
repz
add
and
fisubrl
dec
mov
testb
mov
jne
pusha
adc
scas
shrl
fwait
loopne
fimull
mov
clc
pushf
mov
sub
jo
mov
lock
out
sub
sub
ja
adc
mov
mov
and
gs
xchg
adc
notl
mov
aas
stos
pop
movsl
fcmovb
sbb
and
mov
roll
fistl
add
lret
repnz
mov
aas
sbb
lcall
rorl
jmp
lds
and
repnz
cmp
gs
ds
push
jp
jbe
je
es
adc
rcrb
xchg
sub
pop
movsl
add
movsl
xor
lret
fldenv
mov
pop
push
push
dec
jns,pt
jp
jl
sbbl
push
loopne
out
mov
mov
aad
xlat
pop
inc
xor
pop
int
repnz
lds
ljmp
stc
popf
xor
ret
dec
sub
testb
shll
fisttps
aaa
xlat
jl
sub
cltd
lea
pop
xor
xlat
push
hlt
dec
shlb
sbb
xchg
push
fimuls
in
repz
add
sub
xchg
push
fistpll
hlt
jecxz
jne
xchg
push
ret
arpl
rorw
jle
lret
push
add
sub
xchg
push
cmc
push
cmpsl
outsl
fs
movsb
shlb
daa
mov
shlb
es
mov
loope
cld
imul
fadds
push
movsb
cs
dec
xchg
scas
or
stos
or
and
pusha
ds
enter
int3
inc
icebp
fcompl
lea
adc
pop
leave
cld
pop
lret
jae
cltd
shlb
cmp
pop
out
out
iret
aad
cli
push
sarl
lods
pop
xchg
lock
sahf
add
inc
popf
xchg
or
cmp
jmp
jle
jns
call
hlt
push
add
inc
scas
push
jp
add
mov
pusha
adc
lods
arpl
mov
inc
fcoml
add
les
lods
sbb
jno
vpor
sbb
je
inc
ss
add
mov
in
ret
loopne
jo
cmc
cmpsb
daa
loopne
pop
rolb
xor
add
mov
jl
lock
xchg
sti
loop
push
inc
add
shll
and
js
repnz
lds
cmc
ds
shll
jnp
aad
cmp
push
popa
stos
int3
sub
xchg
xor
push
hlt
push
add
das
fists
push
add
mov
dec
int
inc
sbb
mov
jb
push
aaa
hlt
push
add
adc
mov
xor
cmp
aaa
sti
mov
mov
xchg
cwtl
mov
cmp
inc
lahf
xchg
pop
rcrl
rcrb
mov
add
sbb
jb
or
mov
fidivrl
movsb
push
push
bound
imul
mov
push
add
in
ljmp
out
aam
daa
orb
jnp
shlb
daa
jb
mov
mov
or
cld
push
add
icebp
pop
jmp
pushw
popa
scas
or
int
mov
inc
rorl
shlb
sarb
cmpsb
dec
mov
jle
aas
xchg
imul
scas
dec
mov
in
dec
push
ja
dec
shrl
ljmp
ret
arpl
xorb
adc
jbe
ljmp
xor
clc
sub
dec
mov
xchg
or
inc
loop
imulb
sub
test
jne
cli
mov
push
xchg
inc
push
out
mov
mov
enter
and
add
insb
adc
shlb
fstp
adc
fst
inc
sahf
xchg
or
bound
ret
in
sub
cltd
mull
add
stos
add
shlb
hlt
push
add
mov
mov
jno
xchg
inc
push
add
into
cmp
and
insb
dec
xor
ss
fmuls
push
add
test
rolb
sub
insb
mov
push
xchg
leave
lea
sub
sub
mov
mov
jnp
sub
es
test
je
sbb
push
xor
jg
mov
jge
mov
out
xchg
out
cmp
fwait
dec
bound
push
adc
aas
pop
jg
push
mov
cmp
cwtl
rcrb
test
jno
mov
pusha
and
mov
jns
sbb
xchg
inc
loope
add
push
add
fisttpll
push
add
mov
cmp
jnp
in
sub
cltd
cli
add
out
push
insb
fldenv
mov
daa
jg
xlat
imul
inc
cmp
jns
cld
lods
pop
dec
daa
xor
jnp
and
popf
cmpb
ficoms
push
decb
divb
mov
mov
gs
lds
xor
add
outsl
fldt
dec
and
in
pop
lds
dec
cs
xchg
adc
fsubs
shlb
inc
cmp
mov
pop
dec
fisttpll
lret
cmpsl
adc
push
lock
and
in
das
adc
rol
mov
imul
aas
mov
stos
pop
pop
movsl
pop
pop
sbb
rcr
cmp
dec
pavgb
mov
push
icebp
pop
jecxz
jecxz
adc
and
pop
pop
rol
jbe
xchg
cmc
nop
mov
mov
xor
sti
xor
mov
enter
xor
cmc
jnp
jmp
push
xor
rolb
shrl
push
xchg
jbe
repz
add
and
ljmp
mov
mov
pop
call
sbb
xchg
cmpsl
enter
lcall
jecxz
and
sbb
xchg
push
fdivrp
lcall
shll
fidivrs
imull
adc
testb
pusha
out
dec
shll
mov
mov
push
add
inc
into
add
sbb
xchg
push
fidivrs
inc
or
and
inc
add
sub
loope
xchg
lds
repnz
imul
arpl
mov
in
dec
stos
push
or
clc
sahf
sub
pushl
dec
aas
lds
inc
fsubrl
addr16
mov
repnz
cltd
pop
movsl
xor
outsl
popa
add
mov
dec
sub
mov
push
pop
std
addr16
cld
inc
push
les
js
jb
pushf
push
mov
sub
sahf
inc
mov
outsl
std
scas
repnz
pop
ja
jge
dec
xlat
ret
cmp
jne
and
mov
adc
mov
jno
daa
and
ljmp
bound
or
xchg
sbb
xchg
js
mov
jo
jbe
sub
mov
inc
jno
xor
adc
xor
mov
jo
push
jnp
in
popf
xchg
or
push
test
adc
imul
mov
loope
fistl
rcrb
mov
push
loop
cmc
lcall
dec
jne
movsb
icebp
repz
into
mov
insb
sbb
dec
ljmp
push
into
pusha
mov
mov
or
inc
mov
in
leave
add
xor
sub
pop
cld
xor
repz
popf
mov
jge
xor
add
ds
cmp
flds
dec
int3
sbb
int3
push
movb
push
and
lahf
sar
xchg
inc
std
fisttpll
sub
mov
mov
lcall
fildl
mov
dec
push
mov
enter
pop
sbb
inc
jmp
add
push
push
add
jb
xchg
aaa
jg
mov
out
mov
rorl
jo
repz
add
sbb
and
out
xorb
imul
popa
rcrb
mov
push
loop
loopne
imull
jnp
sbb
cmp
push
add
jbe
cmp
push
cld
sub
mov
lahf
add
xor
pop
cltd
jle
sub
imull
out
sbb
es
rcr
cltd
sahf
push
fs
out
bound
sub
xchg
lods
or
and
clc
fs
iret
cmp
daa
and
nop
push
push
jnp
ficoml
mov
insl
mov
orl
ja
adc
notb
adc
push
mov
icebp
mov
adc
out
lods
sbb
mov
shlb
ret
jb
outsl
std
lods
lret
les
inc
lret
lods
cmp
push
clc
test
repz
adc
lcall
into
cmp
out
jmp
imul
insb
or
sub
imul
rcr
dec
test
mov
mov
add
test
mov
stos
insb
cmpsl
push
xchg
aam
popf
js
aaa
xlat
inc
push
xor
adc
xorw
fcomps
pop
push
pushf
dec
dec
popa
loope
jb
nop
dec
shrl
or
loop
xor
cmp
cli
filds
imul
mov
sbb
inc
arpl
insl
inc
jge
loope
mov
or
repnz
mov
dec
in
roll
lcall
or
mov
jo
fisubs
xchg
fisttpl
or
mov
sti
inc
imul
pop
nop
repnz
jl
jno
divb
cmp
xchg
xchg
loop
inc
arpl
insl
pop
iret
lcall
pusha
pop
fisubrl
and
outsb
mov
jmp
xchg
or
xor
adc
add
mov
mov
mov
mov
mov
in
fnstenv
rcrl
xchg
add
push
insl
aam
adc
xor
jno
xor
pusha
adc
mov
shlb
hlt
push
add
mov
ss
cltd
xchg
or
popa
xchg
shlb
incl
jb
push
add
scas
cmp
mov
addl
mov
xchg
aas
data16
es
inc
cmp
mov
in
fistpll
icebp
cmpsl
adc
daa
arpl
shlb
hlt
push
add
mov
mov
fsubrl
rcrb
xchg
push
fisttps
movsb
inc
hlt
gs
clc
nop
inc
mov
adc
sub
les
xor
test
or
inc
jmp
in
jge
stos
adc
shrl
hlt
roll
lods
pop
imul
leave
push
mov
mull
xchg
cs
inc
js
pop
lret
ret
jae
mov
jp
pop
cmp
cld
pop
mov
mov
push
jno
xlat
rorb
adc
push
ret
arpl
fmul
lods
add
mov
cmc
push
sub
mov
cltd
cmpsb
inc
mulb
stos
and
mov
add
icebp
pop
or
scas
jge
mov
or
push
lods
or
xor
lods
loopne
add
inc
jecxz
aas
cmpsl
cmpsb
push
movsb
shlb
rcrb
mov
add
sbb
add
orl
inc
adc
hlt
insb
push
add
scas
in
rcr
mov
rclb
jns
or
inc
andb
sbb
fstl
inc
pop
bound
jge
xchg
and
and
xchg
int3
test
call
mov
jl
in
out
dec
jle
out
sti
fwait
into
jmp
or
and
cmp
jno
or
and
insb
or
sti
std
jno
pop
mov
jns
shl
pusha
subl
outsb
sar
jb
jl
movsb
into
xor
ret
cmp
inc
adc
imul
test
xor
mov
sub
jo
pop
cli
push
ffree
push
icebp
pop
ret
jae
imul
cs
dec
mov
dec
cmp
jmp
out
mov
daa
fiaddl
sub
push
push
jbe
mov
in
or
pop
call
push
daa
mov
xchg
sahf
add
adc
adc
push
cmp
push
cs
cmpsb
xchg
dec
fisttps
and
sbb
daa
orb
stos
mov
rcrb
mov
jb
lret
inc
aaa
xchg
add
je
mov
ja
adcl
out
mov
stos
pop
inc
inc
jmp
addl
fldcw
xchg
xchg
pop
or
sti
js
les
fcoms
mov
xchg
jmp
pop
mov
movsb
push
sbb
outsl
mov
loope
loopne
iret
arpl
ljmp
ret
mov
xchg
test
stos
pop
iret
pop
fdivs
add
xchg
rorb
leave
cmp
add
rcrb
jne
fisttps
adc
push
add
adc
imul
rcrb
test
dec
fdivrl
and
mov
inc
xlat
out
mov
mov
icebp
sub
pusha
les
jmp
xchg
sti
lret
adc
fdivrs
sbb
repz
insb
testl
pop
push
cmp
add
arpl
pop
inc
hlt
gs
scas
cwtl
xor
outsl
mov
loopne
jge
int
push
add
imul
pop
cli
rorw
sti
mov
loop
fdivl
call
jbe
push
and
cld
xor
adc
in
aam
mov
push
cwtl
lret
jle
mov
jg
pop
dec
mov
scas
mov
jle
arpl
inc
stos
mov
popf
fwait
aam
push
pop
cmpsb
dec
push
incb
xchg
outsb
roll
mov
iret
inc
hlt
pop
mov
icebp
pop
les
xchg
mov
dec
fdivr
xchg
repnz
popf
dec
rorl
xchg
adc
inc
rolb
shlb
in
imul
test
and
ret
lds
xchg
push
stos
sbb
jno
adc
or
je
fimull
jge
das
mov
inc
popf
xchg
or
xchg
xor
movsl
lret
xchg
add
stc
shlb
hlt
push
add
mov
aas
in
mov
stc
push
push
add
cmpsb
xor
rcrb
jp
call
in
cmp
mov
xchg
iret
cmp
dec
dec
call
in
cmp
sub
jg
leavew
xor
mov
and
mov
repnz
stos
mov
fistps
gs
mov
sahf
aaa
jno
jne
out
ficomps
cwtl
dec
out
inc
xchg
inc
mov
lods
lret
packuswb
shlb
cmp
pop
enter
xchg
cmp
out
sahf
stc
xor
add
clc
fs
rol
push
mov
gs
xchg
push
scas
adcl
xchg
jmp
dec
dec
pop
or
dec
es
int
jge
push
or
add
dec
xor
mov
adc
ljmp
test
sub
repz
popa
add
adc
andl
mov
mov
out
lahf
lret
mov
inc
stos
mov
xlat
lcall
lret
mov
pop
leave
ljmp
cwtl
add
push
push
andb
out
push
loopne
cmc
push
ffreep
dec
test
in
sahf
xchg
inc
cld
pushf
pop
mov
int3
cmp
andb
jb
rcll
inc
xor
incb
cmp
loopne
cmc
movsl
xchg
and
mov
push
loope
hlt
jecxz
das
mov
xchg
jo
in
insl
loop
xor
sbb
ficoms
adc
pushf
adc
ds
repz
pop
jnp
dec
jmp
bound
mov
inc
aam
rolb
rcrb
jns
call
pop
rolb
sti
mov
pop
push
cltd
dec
loopne
in
popf
nop
jecxz
mov
subl
sub
mov
inc
iret
add
sub
jge
aaa
xchg
lcall
add
mov
jnp
rolb
sbb
xor
cmc
orl
mov
mov
aaa
shrl
push
mov
xchg
dec
sub
jmp
inc
rorl
sbb
inc
jbe
cwtl
popa
jmp
or
pop
pushf
aaa
daa
xlat
enter
cwtl
add
scas
sbb
mov
and
loope
inc
sub
pop
inc
add
int3
cmp
jae
sbbb
movl
iret
jg
inc
enter
outsl
imul
and
cmp
mov
adc
or
out
xchg
movsl
ljmp
jecxz
sbb
push
js
inc
mov
test
jbe
rcrl
insl
loop
in
les
jno
sahf
mov
leave
xor
dec
sub
es
out
push
sub
mov
popa
bound
test
cmp
push
mov
and
cmp
pop
mov
dec
jle
shrb
dec
pop
pop
xor
test
xor
dec
scas
aad
fbld
mov
mov
cs
fidivrs
ljmp
dec
shll
sub
mov
add
fbstp
mov
sub
dec
mov
roll
jl
mov
lcall
push
inc
jne
mov
std
outsb
enter
stos
push
movsb
movb
in
jle
mov
leave
xchg
pop
movsb
push
test
dec
repnz
mov
push
loope
test
clc
imul
xor
mov
inc
sahf
xchg
pop
rorb
cmp
mov
and
into
aas
hlt
push
add
jnp
xchg
test
push
add
in
cmpsl
rcrb
test
dec
fisttpll
adc
fisttpll
xor
rolb
shll
inc
not
sub
inc
xchg
inc
mov
lea
pop
std
and
data16
push
mov
or
cmp
inc
adc
and
dec
sbbl
inc
push
pop
xor
sahf
fnstcw
test
sbb
dec
stos
lahf
jmp
negl
nop
pop
mov
sbb
cmp
adcl
push
add
sbb
mov
lahf
push
ljmp
xor
sbb
xchg
xlat
dec
hlt
push
add
test
insl
movsl
lret
xchg
add
mov
das
pop
and
jmp
ret
repz
adc
lahf
cld
mov
jmp
pop
push
pusha
lret
sub
loop
cmp
or
call
jle
jns
in
popf
xchg
or
cmp
sbb
test
insl
mov
xor
add
mov
xchg
shlb
out
dec
lods
sbb
lods
dec
repnz
adc
sbb
mov
xor
and
inc
repnz
xchg
inc
cld
jno
add
xchg
jge
sbb
or
xchg
sub
std
and
push
mov
mov
outsl
fstps
cmp
jmp
mov
sbb
inc
loopne
adc
pop
xchg
and
push
loope
jne
jg
sub
push
mov
fists
pop
mull
dec
ja
adc
dec
imul
dec
xchg
ret
sub
rclb
imul
out
sahf
es
mov
dec
adc
inc
sbb
push
stos
add
stc
scas
outsb
mov
xlat
add
popf
dec
mov
cli
mov
hlt
push
add
mov
shlb
pop
andl
add
aas
mov
push
add
in
pop
out
lret
hlt
cmp
daa
xchg
inc
jecxz
xchg
pop
mov
andl
sar
push
mov
std
jecxz
add
cltd
dec
xor
pop
pop
and
push
xchg
or
jnp
test
mov
aas
fidivl
imul
ret
jae
xchg
mov
andl
adc
gs
lret
xchg
outsb
xor
jns
daa
and
push
jge
dec
test
cld
push
inc
mov
sbb
jno
push
rolb
jo
or
pop
sbb
jno
pop
or
fadds
mov
lds
mov
aam
cmp
mov
mov
loop
lods
sbb
jo
shlb
hlt
push
add
mov
cltd
or
push
add
inc
aam
shlb
add
cli
mov
lcall
das
mov
mov
ss
scas
pop
fdiv
add
adcb
sub
ds
and
inc
mov
mov
test
mov
pop
adc
jecxz
iret
mov
and
jmp
mov
js
gs
out
repz
add
dec
popf
sub
adc
mov
push
mov
fidivrs
outsb
sub
inc
hlt
jno
xor
mov
sub
push
add
jne
iret
xor
movsl
lret
xchg
add
cmp
jbe
dec
stc
data16
hlt
fists
xor
dec
shll
es
cltd
hlt
cmp
scas
pop
mov
out
pop
jmp
lret
jnp
mov
adc
xchg
lret
gs
mov
lock
sbbl
out
lahf
aad
into
test
sbb
mov
or
lahf
inc
jo
push
xor
adc
sbb
test
mov
jle
arpl
push
fwait
sub
das
inc
and
xor
sbb
int
stos
inc
add
xlat
in
or
filds
in
out
xchg
std
int
fdiv
and
xchg
lds
je
mov
xor
sahf
imul
stc
push
mov
stc
push
adc
sbb
imul
mov
xchg
mov
lret
dec
cmp
adc
sbb
push
loopne
fmull
lea
sub
pop
sahf
fadds
pop
pop
and
fwait
sbb
inc
rcrb
test
insl
cmpsl
fnstcw
stos
test
pusha
in
pop
push
loopne
popf
xor
test
push
scas
bound
add
in
fists
and
push
cmp
cld
popf
testl
xorl
jge
jbe
scas
sbb
stc
cmp
dec
or
repnz
cld
lret
add
in
adc
and
push
sub
in
sti
cli
inc
pop
ret
jae
xchg
jae
jbe
cli
inc
test
jge
mov
and
or
xlat
sahf
stc
xor
sbb
dec
jmp
push
fiaddl
je
push
dec
outsl
shrb
loopne
fdivl
subl
ljmp
sbb
mov
and
out
cwtl
add
out
dec
adc
fnstenv
mov
mov
enter
pop
mov
and
jns
rcrb
mov
les
mov
push
sbb
lock
pop
jl
xchg
mov
jno
cmp
and
aam
push
clc
dec
call
push
pushf
dec
push
push
mov
push
cwtl
loope
imul
gs
or
ret
cmp
pop
enter
lock
lock
jno
hlt
imul
adc
mov
test
mov
hlt
push
add
pop
lret
pop
mov
pusha
adc
lods
sbb
dec
out
lahf
adc
push
add
dec
fidivl
cmc
cmp
xchg
or
dec
aas
cmpsb
inc
or
pop
or
inc
sub
outsl
jae
push
sub
dec
sbb
push
lret
shlb
push
xchg
mov
inc
dec
in
cmp
push
push
mov
adc
dec
xor
cmp
shl
mov
jno
push
out
and
insl
jg
dec
gs
mov
rcrb
mov
jne
mov
in
dec
test
ficoms
sarl
das
shrl
mov
cld
push
testl
inc
mov
and
mov
and
arpl
mov
dec
push
add
pusha
out
and
sbb
adc
mul
cmp
in
xor
jl
xchg
xor
aaa
jl
xchg
push
cwtl
fmuls
mov
sbb
leave
jmp
mov
pop
sub
xchg
ficompl
iret
sub
pop
mov
push
test
adc
test
push
loop
mov
push
sbb
pop
js
loop
mov
rolb
pop
sti
gs
mov
gs
xchg
adc
pusha
adc
mov
mov
insb
push
fldl
mov
ret
in
or
cltd
add
scas
jmp
sbb
xchg
xchg
xchg
fwait
std
mov
rcrb
mov
ja
mov
push
xor
xor
cs
xchg
push
fimuls
mov
mov
pop
jns
jbe
mov
cs
imul
das
movsb
push
sbb
add
cs
add
imull
xchg
pushw
dec
sti
or
cli
push
add
jl
pop
insl
push
adc
sub
jmp
xchg
xor
push
xor
int3
jmp
xor
fs
push
icebp
jne
add
lods
cmp
or
push
stc
jb
daa
xchg
jmp
hlt
sbb
scas
and
adc
sti
lods
cmp
mov
inc
lahf
xchg
or
dec
das
addr16
jg
call
hlt
push
add
mov
cli
xor
sub
pusha
adc
mov
or
adc
mov
ljmp
adc
add
daa
lds
mov
lods
cmpsb
add
xor
adc
lcall
dec
aas
repnz
add
push
mov
in
push
sub
scas
dec
test
push
outsb
xchg
mov
mov
sar
adc
pop
sti
gs
dec
xchg
cmp
scas
pop
movsl
mov
pop
xchg
or
in
adc
dec
mov
loop
xor
out
andl
sbb
pop
outsl
in
mov
sbb
mul
cwtl
in
xor
inc
ljmp
add
das
stc
gs
xor
loope,pn
mov
pop
mov
gs
ljmp
mov
hlt
push
int
xchg
jecxz
push
mov
xor
cli
push
fstpt
shlb
out
es
std
out
mov
cltd
xchg
cmp
pop
notl
inc
into
mov
jp
fs
pushf
lahf
sub
jp
imul
cmp
or
push
cltd
or
push
pop
std
test
fwait
into
xor
pop
dec
jb
xchg
stc
jbe
sbb
gs
and
adc
mov
setbe
jae
out
push
add
mov
mov
dec
popa
test
jne
push
jno
aam
lahf
pop
push
notb
xor
in
xchg
inc
or
add
inc
sub
dec
jo
gs
cmpb
mov
ret
push
inc
cmp
cltd
jp
sub
mov
jl
les
sbb
xlat
cld
test
je
arpl
jp
hlt
sbb
add
gs
push
fnstenv
jle
sub
pusha
sub
ret
and
out
sarl
fdivs
cld
mov
rcrb
jbe
jecxz
lods
sbb
jno
inc
jb
push
sbb
pop
inc
lock
jbe
add
sahf
xor
inc
or
jae
mov
dec
lea
dec
dec
dec
sub
sarb
movsb
insb
pop
xchg
xchg
add
clc
sub
mov
and
mov
push
loop
neg
cmp
movsl
push
repz
add
add
mov
mov
fs
decl
fwait
add
insb
add
and
push
mov
adc
inc
int3
adc
aas
repz
adc
push
repnz
cli
push
xchg
cmpsb
adc
adc
sarb
aaa
mov
js
sbb
pop
xor
scas
mov
pop
imul
iret
rcll
mov
xor
push
mov
xor
or
jne
mov
sbb
mov
push
repz
in
fdivrp
lcall
sbb
test
dec
fdivl
sti
roll
ret
cmp
or
leave
adc
cmp
adc
lods
lods
cmp
mov
sub
jo
and
gs
add
call
add
or
loopne
mov
sbb
sub
dec
outsl
mov
cli
hlt
pop
icebp
xchg
lcall
faddp
inc
jo
insb
pop
nop
cltd
shlb
insb
lods
add
pop
mov
stos
pop
leave
cmp
xchg
sub
lcall
inc
xchg
mov
stos
rolb
shlb
inc
icebp
cmp
add
xchg
sahf
jmp
inc
out
xchg
add
fidivrs
lock
add
xor
sbb
xchg
inc
lret
cmpsb
add
dec
rorb
pusha
out
test
push
test
inc
hlt
push
add
jle
lods
shlb
ret
push
add
outsl
std
xor
sbb
mov
js
fsubs
or
jge
rorl
pusha
adc
mov
aas
out
pusha
hlt
push
add
pushf
cmp
pop
hlt
push
add
cltd
daa
pop
shlb
sbb
ret
clc
xchg
sub
mov
push
add
xchg
add
cmp
rcrb
sarb
inc
mov
sahf
xchg
sbb
cmp
jp
outsl
mov
call
cwtl
push
in
popf
and
mov
inc
dec
or
mov
popa
sub
sti
les
lret
push
mov
idivb
mov
pusha
movsl
jg
sbb
sub
sub
es
les
push
in
mov
lea
push
rcrb
je
jecxz
lods
sbb
push
inc
sbb
pop
clc
ror
push
xlat
add
ret
sar
or
mov
fcmovu
lock
sub
dec
dec
arpl
inc
aam
shlb
hlt
push
add
mov
xor
imul
rclb
sbb
jne
adc
in
and
andb
sub
dec
out
mov
popf
dec
cld
bound
lcall
repz
loop
ljmp
push
je
add
pop
hlt
aas
sbb
jl
inc
notb
sarl
jb
adcl
call
subb
push
mov
mov
mov
mov
and
pop
mov
mov
fcompl
jb
js
adc
mov
scas
call
lods
loop
gs
in
xchg
xchg
mov
into
popa
sbb
movsb
sbb
dec
loop
test
shlb
sbb
mov
pop
mov
pop
nop
sar
xchg
aas
add
sub
lcall
pop
xor
addr16
xor
push
mov
scas
jecxz
mov
push
ljmp
adc
pop
sbb
mov
xor
aad
dec
mov
es
and
mov
jb
jle
push
int
ret
xchg
and
mov
mov
sbb
loope
adc
sti
xor
lahf
addr16
ljmp
adc
lock
mov
sbb
mov
mov
hlt
shlb
call
int3
aam
mov
stos
lock
scas
sbb
insl
xor
jo
aaa
cmp
shll
mov
push
mov
gs
sbb
call
push
cmc
in
jmp
mov
inc
scas
sbb
inc
mov
push
add
icebp
jg
rcrb
mov
add
sbb
out
loopne
xor
iret
push
ja
sbb
sti
inc
adcb
bound
xor
sbb
xchg
inc
lods
dec
in
popf
push
hlt
push
add
dec
fmuls
adc
mov
push
mov
ljmp
mov
sub
add
ficoms
and
lea
jmp
cld
and
mov
fildl
jge
test
and
cld
pushf
std
jb
jmp
pop
insl
sbb
ljmp
or
add
mov
jns
andb
shlb
and
add
xchg
rcrb
pop
cld
lods
sbb
pop
out
rcrb
push
clc
xchg
dec
pop
jecxz
and
mov
sbb
idivl
and
mov
stos
lock
sti
icebp
inc
jo
sub
cmp
lods
pandn
movsl
or
cmp
cmp
sbb
stc
es
cmp
dec
jmp
ret
sbb
jnp
fst
decl
out
jmp
xor
popa
xchg
jnp
in
sahf
xchg
aas
out
pusha
hlt
push
add
pushf
or
fmull
paddsb
and
xchg
lret
cli
or
insl
push
push
repz
aas
out
pusha
xchg
push
add
pushf
loope
fistl
shlb
hlt
push
add
mov
fcmovnb
fbld
mov
cmpsl
xor
adc
ret
mov
jbe
add
pop
push
ss
lret
inc
or
std
jb
aad
je
mov
sahf
adc
or
jbe
icebp
cwtl
frstor
rcrl
or
dec
cmp
scas
inc
cmp
les
lods
lahf
shll
out
xor
cwtl
xchg
adc
jbe
in
or
mov
sbbb
bound
pop
out
lea
add
mov
sbb
les
inc
mov
out
push
mov
imul
loope
fcomps
adcl
aaa
shlb
or
sbb
out
push
push
pushf
aam
sbb
mov
adc
inc
sbb
push
cwtl
out
stos
jp
outsl
xchg
pmaxsw
mov
repz
shrl
and
sbb
fsubrl
mov
test
enter
sub
push
add
gs
push
ret
jnp
and
jns
leave
cmp
add
jbe
orb
rcll
aaa
addr16
out
push
sub
adc
mov
adc
xchg
ss
test
sbb
xchg
and
pusha
adc
mov
cmpsb
dec
das
jae
push
ljmp
inc
mov
dec
lods
pop
bound
cwtl
jge
push
cld
jge
fmull
insb
shll
mov
dec
sbb
adc
xchg
mov
sti
or
insb
cmp
or
cmc
cmpl
push
nop
or
pop
mov
jmp
aad
shll
sub
inc
mov
push
clc
mov
push
hlt
push
add
nop
push
push
rcrb
mov
lds
mov
rcrb
test
dec
fnstsw
repnz
inc
fdivrs
ret
inc
push
cmp
out
jp
push
enter
loope
mov
pop
cmp
out
mov
fadds
or
adc
xchg
js
outsb
sub
sub
enter
inc
add
mov
cmp
out
jp
sbb
cmp
imul
dec
loop
ficoms
pop
cmp
dec
out
mov
mov
sub
push
shrl
mov
dec
cmp
fwait
xchg
addr16
xor
in
out
xor
fidivl
jno
cmc
movsl
mov
je
cmpsb
scas
xchg
inc
mov
iret
jg
pop
jnp
sub
and
jb
leave
or
jp
add
arpl
pop
out
xchg
add
cltd
cmp
out
stos
stos
ja
rorl
shlb
hlt
push
add
mov
inc
movsl
dec
out
pop
xor
jnp
and
jle
xor
mov
mov
imull
jnp
sbb
cmp
push
add
jbe
inc
lods
repnz
xor
push
hlt
push
add
sbb
test
dec
fdivrl
fidivrl
fwait
repz
add
jbe
repz
add
and
bound
hlt
push
add
lods
shll
popf
loop
movsb
icebp
aas
in
lcall
nop
xor
push
lcall
shlb
mov
push
filds
add
cmp
das
xchg
dec
sub
xor
aaa
xlat
xor
pushf
sub
dec
test
add
outsb
int3
cmp
fidivl
lds
loopne
xor
jne
sbb
xlat
xor
std
in
out
lds
int
fs
sti
xor
lahf
cmp
inc
ss
adc
lea
clc
cwtl
cmp
push
dec
pushl
mov
jmp
and
imul
mulb
push
hlt
pop
jae
cmpsb
aaa
mov
mov
inc
ret
dec
repz
scas
sar
sub
les
dec
cmpsl
xlat
je
imul
loope
xor
dec
or
dec
xor
mov
loopne
inc
imul
adc
xchg
jbe
pop
or
sbb
xchg
cmc
fstl
dec
movsb
insl
adc
icebp
int3
loopne
push
loop
jnp
out
lahf
xchg
or
dec
sub
addb
rcrb
mov
push
loope
xor
test
pop
adcl
ret
xor
inc
out
add
jp
push
add
mov
loope
jno
xor
sbb
xchg
mov
push
add
lods
push
inc
dec
add
and
jne
sbb
movsl
jae
mov
push
mov
jl
mov
mov
pop
xchg
xor
mov
ss
xor
sahf
cld
push
ffree
and
lahf
inc
cmpsb
inc
jmp
sbb
pop
sti
sbb
popa
adc
jbe
sahf
stc
xor
xor
dec
insb
dec
sub
and
pusha
mov
xlat
lods
lret
inc
pushf
xchg
or
sub
into
sub
icebp
dec
mov
fisubrs
dec
test
sbb
xor
imul
idivb
cmpsl
inc
imull
nop
idivb
movsb
xor
push
mov
cs
outsb
push
cmp
pop
lret
pop
mov
sbb
pop
jge
jge
movsl
xchg
jge
and
mov
sbb
mov
xor
test
leave
pushl
or
cmp
aaa
jmp
cs
mov
mov
or
fistl
cwtl
shl
pop
orl
in
sub
popa
inc
cmp
ret
insl
xchg
fnstcw
leave
cmp
nop
or
mov
cmp
in
fistpll
icebp
cmpsl
add
insb
lret
cmp
xor
popf
sti
addr16
sub
in
sahf
xchg
or
shlb
int
push
dec
and
mov
mov
outsb
fcomip
push
add
sbb
push
out
mov
hlt
xchg
inc
mov
push
add
nop
push
rclb
dec
add
lcall
push
mov
sbb
test
push
dec
popa
pop
call
push
add
jp
es
xchg
pop
ja
inc
in
jmp
sub
mov
inc
idivb
stos
shlb
push
dec
xor
mov
mov
or
test
daa
inc
mov
cmpsb
mov
daa
outsb
aas
stos
cmp
inc
push
xchg
xor
arpl
leave
xor
cmpsw
push
xlat
adc
or
and
jae
pop
clc
test
daa
repz
push
cli
jmp
push
add
add
pop
mov
insl
mov
ljmp
sub
push
loopne
mov
ret
rorb
jmp
adc
dec
mov
les
adc
scas
cmp
jnp
pop
inc
scas
in
push
jns
rcrl
popf
or
aas
int
jnp
out
mov
sub
sbb
test
ret
fistpl
sub
ja
insb
xchg
sbb
xor
imul
adc
push
iret
sbb
movsb
aam
std
lods
sbb
sbb
add
jecxz
lock
mov
sub
cmp
aaa
sti
popf
clc
xor
add
dec
repnz
std
and
xor
cmp
fsubrl
fs
push
xorl
lea
cwtl
or
xchg
mov
inc
bound
cmp
testb
leave
ljmp
in
add
inc
out
int3
mov
insb
or
pop
int
je
popf
or
stos
xchg
dec
jb
mov
inc
imul
daa
dec
out
pop
mov
jns
push
jp
das
mov
fcmovnbe
pop
mov
scas
jbe
pop
cmp
lfs
mov
dec
xor
scas
ja
jg
aam
pop
shrb
mov
mov
imul
in
xchg
in
push
xor
movsl
int3
jl
in
jae
push
outsl
nop
cld
arpl
pop
mov
les
push
mov
fisubrl
xor
loopne
aad
or
mov
xor
clc
jmp
imul
cwtl
out
xchg
cs
insl
loop
add
lret
jnp
in
lret
imul
hlt
push
add
enter
pusha
mov
hlt
push
add
xchg
popa
stos
int
nop
jle
jns
out
mov
inc
mov
rcrb
test
outsb
movsl
lret
mov
orl
sbb
mov
mov
ljmp
and
adc
jb
shll
sti
add
mov
imul
mov
shlb
hlt
push
add
icebp
mov
loop
mov
lds
hlt
push
add
jb
xor
push
roll
shlb
add
sbbl
push
push
dec
adc
scas
and
and
in
push
mov
xor
ret
sub
inc
loope
add
xchg
ret
int3
jl
push
adc
jne
loop
in
loopne
push
fistpll
cltd
and
inc
divl
push
cs
cmp
jg
movsb
clc
imulb
stos
pop
int3
add
sbb
sub
xor
add
pop
lret
jnp
jmp
insl
mov
rolb
mov
mov
stos
repz
add
out
loopne
xor
lret
repz
add
daa
int3
lcall
ja
sbb
sti
mov
mov
xlat
shlb
ret
push
add
outsl
movswl
call
cli
das
shlb
hlt
push
add
mov
dec
fnstsw
icebp
fisttpl
loop
push
mov
popa
int
xlat
or
std
das
push
mov
jmp
cmc
adc
pop
xchg
popf
movsb
pop
xchg
jnp
cmp
inc
push
pop
or
stc
popf
sub
cmc
sbb
jecxz
or
iret
xorb
sti
test
pop
jge
mov
mov
sbbb
mov
shlb
hlt
push
add
test
adc
imul
test
pop
xchg
rcrb
jbe
fistpll
insl
cli
das
rcrb
mov
jae
lret
inc
cmp
mov
mov
fisttpl
inc
int
push
mov
and
dec
or
sub
jl
stc
outsb
push
mov
mov
ret
jne
int3
mov
push
mov
imul
out
sarl
add
cli
pushf
ja
adc
aaa
xchg
and
add
loopne
mov
fs
and
sbb
pusha
xchg
imul
inc
xor
push
fisttpl
stos
pusha
filds
dec
sti
loope,pt
outsb
mov
mov
jnp
popf
or
imul
ds
stos
ffreep
gs
jmp
mov
xchg
mov
ljmp
pushf
add
stc
ds
popf
mov
mov
mov
jno
xchg
xor
push
push
bound
xchg
jecxz
data16
sub
sbb
jbe
fimuls
dec
mov
fidivrs
lock
inc
mov
addr16
rcrb
jae
jecxz
lods
sbb
pop
ds
or
add
and
xchg
or
cld
push
fdivrs
dec
stos
pop
movsl
fs
aam
and
xor
lock
pusha
adc
mov
xchg
inc
cmp
shrb
imul
adc
pop
lods
jns
add
aam
stc
lds
xor
mov
lds
ja
call
insl
jns
jae
pop
std
pop
xchg
ja
cmp
jnp
out
mov
jae
mov
inc
sahf
xchg
clc
xor
xor
js
jae
fnstsw
cmpsl
xor
mov
push
mov
shlb
inc
rorl
nop
fwait
test
inc
mov
hlt
ds
subb
popa
or
xchg
enter
xor
dec
sti
in
rcrl
pop
mov
xchg
adc
in
xlat
out
popa
fsubl
push
hlt
xchg
cmp
cltd
pop
and
cmp
in
push
cs
jo
xor
mov
mov
negl
sahf
rol
sbb
test
dec
fdivl
sti
roll
ret
jle
repz
add
sub
int3
in
imul
mov
inc
sub
push
mov
fsubs
and
neg
and
loope
sub
inc
mov
xor
repnz
jle
lahf
mov
mov
loop
sub
sarl
jge
dec
pop
out
incb
sub
xchg
push
xor
add
clc
inc
xor
inc
push
cmp
mov
mov
jle
lock
jmp
sbb
movsb
pop
cmp
mov
dec
pop
xchg
or
mov
mov
dec
push
nop
js
imul
sbb
xchg
cs
fiadds
adc
jg
cli
cli
and
movsb
mov
loope
mov
xor
inc
push
push
lods
outsl
ljmp
mov
enter
dec
test
pop
or
shrb
lods
cmp
ja
pushf
xchg
test
mov
rorl
fistpll
mov
fsubrl
jg
iret
inc
or
test
call
jge
mov
add
dec
pusha
adc
mov
test
in
lahf
arpl
xchg
ret
daa
orb
adc
mov
push
add
mov
or
cmp
shr
sbb
sbb
or
int3
movswl
insb
out
mov
pushw
and
mov
or
mov
push
add
ret
outsb
jmp
mov
loopne
lahf
or
mov
aam
test
hlt
repz
leave
fistpll
dec
cld
cmpsb
in
and
shrb
enter
jg
push
pushl
fmull
outsb
lret
aaa
sbb
add
and
xchg
jmp
pushw
popa
stos
add
icebp
pop
leave
push
mov
movsl
daa
cli
insl
jb
mov
mov
inc
in
enter
pop
mov
sti
stos
lds
ss
or
jge
jle
mov
in
scas
sbb
mov
jae
adc
lcall
mov
mov
mov
jae
out
xor
je
repz
flds
xor
jbe
aam
aas
out
adcl
pusha
adc
xchg
rcll
out
and
sub
mov
xchg
in
and
call
mov
inc
loop
add
push
add
aas
stos
cmp
pusha
adc
mov
xor
jno
fwait
sub
in
add
lea
dec
jle
movsb
push
push
xlat
sub
sub
and
push
sbb
clc
add
out
mov
cmp
xor
push
cltd
cmp
xorl
iret
adc
mov
fnstsw
loope
enter
add
mov
sub
jge
or
xchg
shll
push
push
mov
pop
or
stos
adc
mov
int3
stos
push
movsb
fnstcw
mov
add
sbb
dec
movsb
outsl
adc
stc
or
lods
jnp
dec
stos
bound
or
cmp
mov
add
sbb
shlb
hlt
push
add
mov
cmpsl
lret
jle
sub
out
or
push
add
add
or
shll
mov
stos
shl
adc
lahf
push
mov
adc
movsl
mov
and
sbb
sbb
xchg
shrb
in
clc
fs
rcrb
xchg
push
fistpll
mul
sub
add
xchg
and
fwait
jno
aas
mov
lods
clc
ja
push
int3
scas
mov
mov
icebp
addps
or
pop
jg
bound
fmull
jmp
adc
fcmovnb
sbb
lcall
imul
pop
data16
jle
ret
or
mov
sbb
mov
push
loope
cmc
lcall
push
push
add
and
adc
xor
adc
stos
add
ret
jae
mov
and
mov
dec
pop
lea
lods
ljmp
inc
or
inc
hlt
shl
arpl
and
sbb
js
mov
js
cmpb
ljmp
ljmp
fistl
xchg
and
push
shrl
daa
ret
xor
jo
std
stc
sub
mov
mov
testl
adc
stos
int
jle
push
lods
shlb
pushf
cmp
pop
hlt
push
add
cltd
daa
pop
pushw
popa
lods
ret
nop
cld
push
adc
dec
xchg
js
stc
orb
push
mov
cmova
cmp
icebp
fisttpl
jge
sbb
lcall
inc
inc
sahf
xchg
or
jg
ljmp
sbb
scas
xchg
int3
or
test
enter
mov
rclb
hlt
mov
or
ret
les
pusha
add
xchg
cmpsl
push
mov
sub
and
sbb
call
push
dec
adc
xor
jno
pop
add
mov
fs
loopne
mov
rcrb
push
testl
rolb
pop
jno
mov
outsl
ljmp
lcall
andl
incl
add
sbb
add
push
sub
cmp
inc
jbe
jle
jnp
test
pop
push
mov
xor
sbb
mov
out
inc
xchg
mov
mov
cltd
xor
or
andl
xor
test
push
imul
mov
fistps
adc
inc
stc
sbb
lea
and
sub
pusha
adc
icebp
mov
loop
mov
xor
lret
inc
jo
and
inc
cmp
xor
dec
addr16
lods
xchg
sub
pusha
adc
scas
rcll
adcb
sbb
imull
shlb
aam
movl
xchg
out
jno
push
fcomip
das
pop
lret
js
mov
lods
mov
xchg
pop
jl
add
aad
popa
adc
mov
cmc
jno
and
pop
mov
rcrb
test
sub
sbb
and
or
ret
inc
leave
mov
rorb
push
or
mov
lcall
lds
loop
test
xorb
cmpsb
xor
ds
xchg
test
dec
mov
inc
push
repnz
loop
push
pop
pop
dec
cmpsl
fiadds
jbe
xlat
mov
cwtl
fistpll
movsl
inc
movsb
xchg
enter
adc
sbb
test
mov
push
mov
pop
scas
das
sbb
cmp
cmpsb
add
jae
outsb
cmpsl
fnstenv
mov
adc
jnp
stos
push
or
scas
add
add
into
outsb
fadds
scas
mov
cs
push
xchg
jecxz
insl
mov
outsl
push
cmpsl
loope
add
mov
jmp
fwait
cmp
inc
jl,pt
in
pop
movl
pop
iret
adc
fwait
movhps
fnsave
adc
sub
add
cmp
xchg
lret
adc
call
hlt
push
add
push
fistpll
or
or
js
jne
inc
in
xor
cs
jge
lret
mov
add
icebp
pop
jmp
shlb
hlt
push
add
pop
int
push
add
or
arpl
jns
je
jecxz
and
mov
out
loop
push
mov
int
xorl
mov
pop
jle
jnp
dec
xchg
jne
xchg
inc
sbb
cltd
sub
push
mov
test
push
fidivs
outsb
push
scas
or
jbe
xchg
js
xor
rcrb
ret
mov
loope
cmc
popa
out
stc
add
and
test
pop
das
mov
addb
rcrb
movsl
test
pop
test
push
das
mov
pop
adc
mov
pusha
dec
and
in
push
inc
sbb
in
cmpsl
jmp
pop
test
xchg
std
pop
pop
pop
iret
cmp
and
mov
shrb
and
test
push
inc
aam
je
int3
inc
xor
std
outsb
shrb
int
popf
ljmp
ret
jnp
pop
or
add
mov
bound
xchg
push
xchg
leave
shlb
hlt
push
add
mov
adcb
stc
mov
pop
and
xchg
ss
outsb
loope
ja
test
push
test
mov
push
mov
sbb
xor
loop
inc
shlb
and
jle
lret
int
mov
cmpsb
dec
sub
out
fimull
pop
jl
ret
sti
jle
jae
ret
push
shlb
and
mov
inc
hlt
bound
cmp
adc
testl
cmp
pusha
daa
in
insl
outsb
or
je
mov
mov
insb
inc
jge
mov
in
mov
shrb
pop
outsb
fwait
into
sub
lcall
and
jb
xor
jo
xchg
iret
lods
jge
push
sub
lret
ljmp
sbb
xchg
movsl
movswl
hlt
push
add
insb
sbb
dec
loopne
negb
leave
xor
cmpsl
out
xor
ds
scas
rcr
mov
dec
inc
xor
cmp
xchg
inc
imul
je
push
clc
subl
fisttpl
int3
cmp
sti
cmp
aaa
jmp
adc
mov
mov
test
mov
movsl
dec
xchg
xchg
adc
dec
xchg
popa
icebp
inc
int
add
mov
or
xchg
and
add
pop
lahf
aas
lcall
loope
sti
or
movsb
dec
popa
adcl
addr16
scas
inc
mov
mov
and
cmp
cmpsl
mov
and
in
andb
mov
je
pop
stc
test
ljmp
inc
int3
mov
jl
bound
mov
xor
ret
pop
add
test
mov
xor
adc
mov
pusha
mov
mov
loop
fdivl
std
xchg
cltd
out
daa
pop
mov
in
lea
jle
push
mov
pop
jge
cltd
mov
xchg
or
repnz
out
insl
jbe
push
lret
xrelease
dec
out
pop
push
imul
xorl
cmp
leave
xchg
or
outsb
jecxz
scas
sub
pop
or
adc
jne
clc
test
ljmp
pop
cmp
leave
fstl
das
shlb
subl
mov
mov
inc
lahf
xchg
or
das
out
notb
sar
dec
or
sub
jo
sub
ret
mov
pop
in
and
sbb
test
xchg
fsubl
xor
pop
xchg
mov
icebp
shlb
mov
incl
in
dec
xchg
in
daa
pop
lds
inc
shlb
hlt
push
add
mov
mov
xor
sbb
push
or
mov
popa
jnp
pop
pusha
push
jl
std
sbb
jecxz,pn
pusha
and
loop
bound
push
jle
mov
mov
std
inc
scas
or
ja
inc
iret
jg
lret
xchg
loope
mov
into
add
cli
test
fldl
dec
jg
call
ret
in
xchg
insl
sbb
test
push
mulb
cmp
in
add
cwtl
add
stc
rcll
sub
loope
fs
mov
frstor
cs
push
xchg
sub
jl
stos
and
cmp
cli
mov
sub
xor
pop
mov
and
pushf
fcoms
test
cmc
xchg
cmp
lods
push
mov
jge
ja
pop
or
or
dec
mov
lea
push
rcrb
xchg
loope
and
pop
enter
sbb
lock
push
mov
xchg
loopne
aad
movsl
cmp
jnp
sar
popf
les
gs
sub
or
pop
adc
xor
shll
ret
xor
push
add
jo
shlb
push
add
insl
sti
xor
pop
dec
push
jge
add
stos
lret
out
xor
shlb
shlb
push
add
push
add
mov
xor
dec
cmpsb
insb
add
jo
inc
xor
aad
xchg
sbb
test
pop
jne
clc
pop
xchg
xor
sub
xchg
fnstsw
mov
cmp
inc
sti
sub
push
jno
push
mov
movsb
adcb
sahf
out
sbb
pushf
pushf
imull
cs
inc
add
mov
push
loope
mov
das
roll
lea
jg
out
movsl
out
aam
lcall
mov
cld
mov
in
fistpll
lcall
mov
sysret
jns
inc
scas
cmp
xchg
push
ret
push
mov
mov
shlb
daa
test
and
sub
mov
repnz
loop
mul
jbe
push
into
aas
repz
add
jnp
aas
rcrb
jo
inc
cmp
gs
sti
push
inc
push
mov
data16
bound
subl
push
mov
add
sbb
ffreep
gs
mov
ds
add
xchg
decb
pusha
sahf
outsb
ds
inc
push
je
lock
and
add
scas
jo
rcrb
mov
push
mov
sbb
or
push
add
movsl
xor
sbb
test
mov
jg
and
lods
mov
mov
push
add
pusha
mov
pop
push
jg
inc
sbb
daa
mov
lret
xchg
out
dec
ret
mov
jg
jns
sbbl
cmpsl
ja
insb
mov
mov
loop
pop
sahf
dec
jns
daa
insb
xchg
add
pop
sub
adc
cmp
or
sub
adc
dec
cld
sub
movsb
push
shlb
jmp
sub
pop
cs
push
loopne
xor
cmp
cld
jbe
cmp
test
cmp
or
inc
mov
shlb
push
add
insl
sbb
push
popa
add
int
mov
jno
or
sti
push
ffree
das
mov
enter
or
jbe
jo
inc
es
xchg
xor
push
jecxz
add
mov
repnz
lods
pop
lahf
sbb
jb
rep
jg
fwait
pop
iret
inc
hlt
xchg
sahf
sub
loop
jo
imulb
push
sub
rcrb
mov
cmp
mov
xor
lahf
in
lods
in
lea
jle
js
shlb
hlt
push
add
testb
mov
fisubrs
out
in
push
mov
scas
pop
mov
data16
or
loop
dec
mov
inc
push
sub
mov
fiaddl
adc
repnz
cmc
subb
outsl
pop
inc
push
adc
dec
push
jmp
out
xchg
inc
xchg
cmp
outsl
mov
cmpsb
xor
mov
xor
xchg
cmp
sbb
sub
cmp
lods
cmp
xor
fwait
das
xchg
rcrb
test
xorb
repz
add
fisttps
aaa
xlat
jl
data16
xor
or
sti
shll
jnp
pop
sub
lret
pop
loopne
add
scas
mov
mov
adc
jns
pop
pushf
loope
idivb
mov
sub
je
xor
xchg
sub
dec
mov
adc
scas
dec
adc
xlat
dec
cld
mov
mov
fnstcw
sub
inc
jp
je,pt
cltd
dec
mov
aam
movswl
out
rcrl
mov
push
pop
or
xchg
mov
repnz
push
stc
test
push
xchg
aaa
mov
pop
cli
ss
cmpl
xchg
dec
jbe
out
adc
nop
add
divb
push
push
jo
jns
pop
pop
inc
testb
adc
nop
decl
pop
jae
int3
insl
call
cmp
sti
lea
push
rcrb
mov
jbe
push
hlt
xchg
inc
mov
push
add
icebp
jg
shlb
stos
xor
mov
clc
ss
ffreep
pop
mov
push
mov
and
and
jns
rcrb
mov
jb
adc
xor
push
add
jo
xchg
add
mov
hlt
xor
es
cmp
mov
mov
xchg
inc
mov
sbb
ret
jae
mov
rcrb
inc
inc
out
es
mov
insl
or
inc
mov
dec
divl
and
xchg
adc
push
add
xchg
leave
ret
sahf
mov
rclb
mov
xchg
test
aad
cwtl
push
add
jo
shlb
mov
inc
xor
in
or
mov
insl
cmp
mov
gs
cmpsb
nop
sbb
pop
mov
push
js
lods
rclb
adcl
shll
push
jle
pop
divl
shll
sub
rcrl
add
lahf
sub
pusha
adc
mov
jbe
mov
lcall
pop
cs
mulb
sub
dec
push
dec
gs
push
dec
mov
xchg
mov
xchg
xchg
lcall
lea
pop
mov
push
sub
or
sub
xor
leave
add
pusha
loop
push
mov
pop
insl
test
popf
cmpsb
fldt
cmp
cmp
popa
and
testl
lock
dec
pop
mov
lret
sbb
test
xor
xor
fisttpl
mov
jmp
dec
cwtl
dec
pop
sbb
imul
sbb
mov
push
scas
sbb
jb
cs
jae
push
and
push
add
nop
push
push
rcrb
mov
cmpsb
inc
mov
imul
inc
sahf
nop
cmc
cmp
hlt
cmp
fcoml
hlt
inc
mov
js
push
sti
inc
insl
sub
push
sbb
push
aas
mov
filds
aam
sub
lret
xor
mov
sbbb
add
sub
jbe
cmp
jge
and
bound
mov
push
popa
add
add
pop
enter
gs
mov
js
in
pop
mov
add
mov
push
cmc
insb
mov
xchg
lock
hlt
push
add
scas
rcll
sbb
dec
test
or
sbb
mov
jb
sbb
inc
in
push
mov
dec
mov
cli
cmpsl
mov
mov
loopne
jl
and
das
pop
inc
inc
fs
push
add
frstor
rol
popa
cltd
enter
loope
movsl
sbb
les
mov
or
and
mov
sub
inc
mov
lods
data16
lea
xchg
sub
cmp
shl
fcomip
aaa
out
dec
add
in
jns
pop
clc
bound
mov
loop,pt
jb
out
lods
pop
stos
sbb
es
jg
push
test
adc
jg
cmpsb
sbb
mov
cli
or
fwait
mov
aad
test
lret
das
out
in
shlb
sbb
out
fildl
cmp
xor
faddl
adc
aas
int
shlb
hlt
push
add
scas
rclb
hlt
push
add
jle
push
gs
int
nop
rcrb
mov
jb
int
es
xchg
lock
enter
sbb
mov
repnz
dec
enter
pusha
movsl
push
rorb
cltd
jp
mov
mov
incl
sbb
mov
fs
add
sbb
dec
mov
inc
mov
movsl
movsb
dec
xchg
inc
scas
fwait
out
push
xchg
xor
aam
inc
pop
jne
scas
aad
sbb
stos
or
push
fsubrs
cwtl
push
ret
lahf
adc
cld
push
cmp
inc
mov
imul
push
add
mov
insb
adc
inc
mov
push
add
icebp
jg
shlb
hlt
push
add
mov
shlb
adc
mov
imull
push
add
fmuls
leave
xor
fdivs
fsub
add
mov
daa
xchg
pop
mov
fcomp
cld
add
pop
enter
call
cli
mov
pop
cwtl
jl
sti
inc
lock
mov
fstl
sub
cmp
scas
sub
mov
int
adc
add
jae
call
rcl
daa
sbb
inc
mov
jle
mov
out
sbb
fistpll
pusha
adc
icebp
mov
loop
mov
gs
xchg
stos
test
mov
jmp
add
mov
jge
cltd
pop
jmp
stc
add
pop
jmp
or
pop
popf
nop
add
rcrb
test
dec
fdivrl
fidivl
imull
gs
pop
scas
movsl
push
mov
xchg
mov
pop
jl
cmc
xchg
xlat
push
add
ret
jnp
leave
ds
sbb
scas
pop
pop
call
lcall
fnstenv
syscall
jnp
pushf
fimuls
push
jl
xchg
pusha
mov
mov
xchg
xchg
mov
inc
push
sbb
sahf
fwait
loop
cld
lea
push
jle
and
mov
sti
gs
sub
test
cmp
popf
inc
in
popf
push
stos
fdivrs
sub
mov
xchg
xor
add
cmp
mov
mov
in
stc
outsl
adc
pusha
and
jae
xor
ds
add
loop
in
cmp
xor
pop
out
cli
leave
and
dec
jb
das
sbb
ficoml
mov
ds
lahf
aas
in
xchg
inc
push
mov
movsb
fld
sbb
xchg
push
fidivrs
repz
fwait
std
pop
shrl
leave
data16
fdivrl
bound
insl
sbb
scas
pop
aam
pushf
out
aam
leave
sarl
mov
adc
test
xor
mov
inc
loop
aas
test
call
jl
sbb
out
test
push
sti
xchg
cmc
fxch
negb
dec
inc
sbb
sub
sub
push
jge
jb
and
xor
movsb
icebp
lret
into
out
call
das
cltd
lds
sub
in
enter
push
loopne
jg
adc
xchg
xchg
ret
jno
test
xchg
inc
mov
out
sub
mov
sub
inc
aad
aad
xchg
ss
push
cmp
sahf
rol
sbb
xchg
inc
lret
cmpsb
add
cmpsb
leave
lahf
pop
stc
addr16
repz
xor
add
cwtl
pop
pop
adc
xorb
mov
jo
lret
dec
jle
mov
add
sbb
test
dec
test
insb
sbb
xlat
data16
mov
push
js
pop
inc
shl
lock
jl
outsb
fisttps
adc
xchg
pop
push
mov
loope
movswl
pop
fidivrs
addr16
and
iret
outsl
fstps
sub
mov
es
xor
or
jmp
add
cwtl
lcall
jno
xchg
lea
mov
xchg
inc
loop
mov
popf
dec
gs
push
xor
or
sub
loope
imul
mov
popf
xchg
or
push
test
movsb
xor
jno
lds
mov
test
cmp
push
popa
test
outsb
fmul
addl
add
loopne
inc
mov
sbb
cmp
ret
leave
mull
sarb
test
fs
mov
das
in
or
mov
jno
xchg
or
lock
addr16
xchg
inc
int
in
das
dec
incb
out
sub
arpl
pop
fsqrt
sbb
cmpsb
or
gs
mov
sbb
sub
adc
pop
decb
ljmp
pop
cmp
cld
lret
mov
stos
pop
fld
jnp
jne
shlb
sbb
mov
jae
adc
xor
push
add
jo
sub
test
ds
hlt
movsb
mov
xlat
xchg
pusha
aad
fistps
iret
repnz
aas
cli
sbb
fisttpl
lea
jecxz
or
fsubrs
mov
and
imul
mov
jge
mov
stc
push
mov
pop
mov
inc
gs
pop
mov
lahf
stc
push
fistpll
push
dec
fmuls
jecxz
fnstsw
jo
inc
mov
negl
in
hlt
insl
sti
sbb
inc
into
add
shlb
jbe
pusha
adc
xchg
sahf
mov
xchg
add
add
sbb
push
jle
sub
mov
cmp
out
fdivrp
flds
mov
adc
adc
out
inc
imul
arpl
mov
out
cmp
dec
jo
imul
push
mov
rorl
push
mov
push
mov
xchg
rclb
adc
jge
inc
jnp
in
popf
xchg
add
lcall
inc
mov
push
add
out
jge
rcrb
xchg
gs
out
cmp
js
cltd
push
push
add
aad
pushf
xchg
or
pusha
xchg
shlb
loopne
mov
aaa
imul
mov
lods
ror
js
cmp
enter
popl
insb
xor
sbb
outsb
mov
or
jne
jbe
pop
mov
xchg
lahf
inc
fildll
add
enter
mov
sarb
mov
out
add
xchg
push
jne
mov
scas
dec
stos
pusha
push
movsb
fnstcw
jl
popf
repz
add
fldenv
shlb
and
push
add
pop
or
dec
mov
lods
mov
xchg
lock
xor
je
mov
mov
aad
sub
jbe
pushf
cmp
mov
or
push
xchg
push
js
mov
cwtl
dec
fildl
xchg
fmull
int3
cli
add
clc
adc
xor
jb
mov
mov
rcll
shrb
dec
mov
andl
scas
rcrb
xchg
push
fidivrs
rcrl
adc
stos
ja
xchg
mov
jne
jnp
jecxz
mov
add
cmpsl
push
jnp
jnp
lods
and
js
pop
in
movsl
mov
rcrl
push
mov
mov
sti
mov
pop
jae
std
loopw
xchg
pop
fcomps
xor
sbb
jno
imul
mov
xorb
xorl
jnp
cmp
jecxz
ret
lcall
pop
lcall
seto
mov
adc
pop
mov
mov
xchg
outsb
jge
cmp
pop
push
js
dec
repnz
mov
je
negl
iret
jne
scas
fildll
cmp
or
adc
std
enter
lock
test
adc
mov
and
adc
rorb
add
xchg
ss
mov
and
jnp
in
popf
xchg
or
dec
in
mov
pop
hlt
push
add
xchg
and
pusha
adc
mov
cli
xor
clc
rcrb
jne
fnstsw
cmpsl
adc
imul
and
xchg
xor
sub
jne
scas
les
mov
int3
ficoms
dec
insl
dec
test
aaa
push
mov
and
mov
push
loope
enter
bound
subl
loop
inc
mov
pop
cmc
mov
mov
cmp
mov
cmp
aaa
stos
cmpsl
jecxz
sbb
xchg
xor
jnp
sbb
cmp
push
add
out
nop
out
pop
lahf
or
mov
xchg
fxch
jl
bound
sahf
jae
arpl
mov
xchg
add
test
and
xorb
shl
cwtl
fisttpll
out
arpl
mov
daa
outsl
jmp
cld
sbb
xchg
aas
sahf
push
std
test
leave
add
inc
sbb
xor
pop
ljmp
out
mov
xchg
dec
les
xchg
lret
and
enter
cli
out
test
shlb
les
sub
int
roll
mov
jge
mov
decb
push
mov
xchg
icebp
mov
aam
xor
mov
mov
negb
std
mov
mov
jg
fisttpll
pop
xchg
inc
loop,pn
cli
pop
inc
aad
insl
dec
shl
xchg
flds
and
ljmp
cmp
or
sarb
pushf
subl
add
call
aas
filds
jmp
and
jp
fwait
stos
outsl
and
xlat
inc
shll
and
clc
or
or
cmpsl
mov
xor
jl
mov
xchg
in
sub
adc
push
adc
jno
rclb
mov
push
or
rorb
push
int3
imul
mov
ret
aad
and
mov
stos
xchg
jnp
jne
pop
call
or
inc
mov
pop
mov
rorb
clc
cwtl
dec
mov
cmc
cmpl
shll
mov
hlt
push
add
pushf
ljmp
xchg
int3
shlb
daa
mov
adc
add
sbb
lds
inc
outsb
nop
add
repnz
icebp
std
outsb
xchg
inc
adc
jbe
negb
das
ljmp
xchg
fimull
and
sub
mov
out
dec
mov
adc
adc
push
add
dec
xchg
icebp
cmp
and
rcrb
mov
add
sbb
mov
ljmp
ja
pop
ds
idivl
pop
mov
shlb
repnz
push
add
out
scas
sbb
outsb
int3
cmp
sti
shlb
hlt
push
add
icebp
mov
loop
mov
xor
test
repz
add
xor
mov
ljmp
into
cmp
sbb
mov
add
adc
adc
and
sbbb
fldt
rcrb
xchg
out
lahf
xchg
hlt
cmp
sub
ss
xor
popf
sub
gs
add
pushf
add
test
movnti
filds
sahf
or
mov
jb
fistpll
inc
rcl
leave
push
jg
inc
rcrb
mov
movl
int3
shlb
fimull
ljmp
mov
repnz
daa
mov
setge
jnp
aad
aas
popf
or
popl
repz
sti
pop
leave
pop
sbb
push
int
lcall
out
daa
mov
int3
lds
add
mov
jne
iret
in
mov
cmp
push
inc
mov
xchg
sub
mov
dec
jle
push
mov
dec
pushl
push
add
lods
cmp
gs
mov
xchg
fidivrs
popa
pop
cmp
sbb
pop
or
xchg
sbb
cmp
xchg
jbe
aaa
dec
and
adc
mov
data16
jns
cmpsb
jecxz
mov
and
fimull
sahf
fimuls
das
jns
mov
jns
cmp
jno
rcrb
test
insl
cmpsb
or
sub
imul
jnp
ret
andb
adc
push
pop
testl
jp
aad
xchg
push
xchg
pop
dec
jo
cmp
jge
jb
aad
scas
mov
test
dec
std
mov
pop
mov
adc
inc
mov
test
push
dec
fcoms
adc
adc
addps
je
mov
imul
fnstcw
fnstcw
and
sub
repz
add
fnstenv
mov
rcrb
xchg
push
fidivrs
repz
lret
mov
movswl
pop
jae
dec
inc
pusha
mov
stos
xchg
aam
loopne
imul
push
sub
test
mov
jle
dec
dec
inc
mov
loopne
xor
xchg
inc
mov
mov
rcrb
mov
xor
das
in
sub
pusha
adc
mov
or
int
cmp
fwait
and
inc
xchg
jmp
addl
xor
lcall
xchg
cld
xor
test
mov
pop
das
mov
mov
add
pop
adcl
imul
repz
add
stos
sbb
push
add
pop
popf
or
mov
and
lods
dec
mov
fnstcw
lret
xchg
mov
leave
rcll
decb
dec
jmp
fmuls
insl
rcll
cmp
sti
push
dec
je
adc
daa
orb
pop
sub
test
sbb
dec
fisttpll
inc
or
or
xorl
dec
aas
mov
ret
in
inc
dec
xchg
mov
inc
pop
bound
mov
push
icebp
push
push
jecxz
enter
add
sub
cld
push
xchg
inc
dec
mov
mov
and
aaa
sbb
lret
daa
movsl
push
and
xor
aam
hlt
imul
js
mov
movb
mov
pop
cmp
inc
lret
xlat
xchg
push
cmc
and
adc
xchg
dec
sahf
add
xor
add
dec
inc
lock
cmpb
pop
adc
daa
fbstp
inc
jns
pop
call
pop
push
ret
push
cmp
fistl
pusha
stos
add
aam
dec
add
mov
pop
xchg
js
dec
adcl
push
movsl
imul
xchg
add
out
data16
mov
cmp
pop
and
mov
mov
shlb
movsl
loope
xchg
jnp
dec
push
add
sub
loop
or
mov
stos
rorw
out
push
mov
mov
dec
jnp
ljmp
lcall
or
mov
dec
rcrb
test
dec
fnstsw
clc
lea
mov
push
jmp
mov
outsb
enter
and
or
mov
adc
daa
xchg
xor
fcomi
push
mov
or
mov
scas
arpl
lahf
clc
in
cmpsb
mov
push
jg
sub
push
xchg
cld
arpl
je,pn
js
ljmp
ss
and
jmp
sbb
popa
std
outsl
mov
inc
out
xchg
sbb
je
mov
sbb
sbb
fmull
jbe
psadbw
cmp
cmc
mull
imul
leave
out
arpl
mov
adc
xor
ds
push
and
pop
daa
in
and
mov
adc
dec
xor
jb
xchg
cs
rep
adc
cli
dec
and
dec
lock
int3
inc
push
pop
add
cmc
out
sahf
mov
test
jmp
and
dec
out
or
pop
xchg
je
sbb
or
lret
pmulhuw
jge
scas
mov
xchg
cmc
push
stos
jne
jle
push
jp
mov
jle
lock
xor
loope
pop
loope
jg
adc
call
and
mov
lret
mov
enter
inc
sahf
out
fisttps
dec
pop
out
push
dec
mov
lret
sti
mov
sti
inc
test
inc
sahf
adc
mov
imul
adc
mov
pushf
push
mov
aaa
rcrb
mov
mov
in
push
in
xor
sbb
out
addl
pushf
testb
fwait
inc
xchg
addr16
lds
ljmp
push
aas
stos
adc
inc
pop
out
negl
rcrb
test
dec
hlt
out
mov
dec
std
lea
insl
mov
int
mov
xchg
fsubrl
outsl
pop
shlb
or
push
pop
inc
ds
add
shlb
push
add
or
jns
inc
scas
cmc
xchg
xor
enter
push
add
and
mov
js
pop
inc
rolb
lods
pop
int
mov
fwait
sub
cli
xchg
aam
mov
add
push
std
aaa
and
xchg
aam
fwait
add
push
fwait
push
loopne
xchg
or
sti
mov
cmp
lds
out
shrb
out
pop
mov
scas
cli
into
adc
outsl
aam
ss
push
sub
pop
push
aas
jmp
jge
mov
and
mov
cmpsb
push
add
xchg
pop
jno
sub
enter
push
repz
imul
pop
push
add
push
mov
inc
mov
stos
pop
pop
rorb
je
mov
or
int
jnp
xor
sbb
fisubrs
test
jne
jo
adc
xor
jno
cmp
jnp
pushf
inc
ds
push
into
pusha
jae
mov
cmp
lahf
cmc
gs
test
lods
lods
sti
das
mov
call
fimuls
iret
cmp
outsb
xchg
out
jl
xchg
xor
push
cli
mov
and
and
jmp
xchg
out
adc
add
shll
add
lahf
inc
mov
dec
clc
sahf
mov
scas
cmp
xchg
push
xchg
outsb
or
dec
pop
sub
sbbb
cmp
dec
and
cli
jl
negb
cmp
mov
imul
mov
scas
jp
lods
stos
or
rolb
shld
std
lods
mov
mov
dec
jnp
push
mov
fldlg2
dec
lods
test
add
sub
idivl
adc
imul
sub
add
leave
jns
add
insb
sbb
pusha
push
int3
insb
into
stos
nop
int
xor
or
inc
mov
rcl
jno
xchg
xchg
mov
repnz
mov
mov
add
sub
pusha
adc
mov
imul
xor
dec
cmpsb
imul
xor
test
repz
add
xor
push
pop
jl
jg
dec
add
and
cli
cwtl
inc
mov
fisttpl
jnp
push
dec
repnz
xchg
imul
xlat
aam
stc
xor
pop
cmpsb
mov
mov
imul
xchg
jmp
loop
dec
fmuls
mov
aam
fiadds
arpl
dec
pop
test
mov
jae
test
mov
inc
clc
jns
add
mov
lret
repz
mov
push
jns
jmp
jnp
out
lahf
xchg
or
xchg
add
jp
ljmp
adc
mov
xchg
jmp
test
pusha
das
pop
sub
rorl
push
popa
test
sub
xchg
and
add
es
lret
push
add
ret
lcall
clc
js
lret
nop
cli
arpl
and
lret
sbb
in
xchg
sbb
adc
jnp
xchg
or
add
sub
jge
cli
out
out
loope
mov
arpl
insb
dec
mov
daa
jns
outsb
loop
insb
lret
repnz
xorb
loope
hlt
jno
imul
out
jns
out
push
mov
inc
or
pop
mov
sbb
pop
inc
fisttpll
push
orb
in
adc
dec
or
cltd
inc
sbb
out
fimull
inc
jmp
cli
outsl
arpl
aad
dec
lret
cs
add
mov
ret
jae
sbb
mov
scas
dec
mov
out
movsb
inc
scas
add
sub
mov
lahf
scas
mov
test
mov
lds
call
mov
lods
fwait
mov
scas
xor
cld
data16
adc
cltd
dec
ja
push
mov
aam
mov
add
xchg
repnz
cmp
popa
mov
mov
loop
jnp
loopne
les
fidivrl
and
sub
repz
lcall
stos
int3
ss
sti
sub
in
xor
cmp
pusha
mov
or
xchg
or
arpl
xor
sub
jb
pop
cmp
out
frstor
sub
aas
mov
push
pop
cmp
in
popa
adc
popf
or
in
or
imul
push
enter
jae
arpl
int
mov
adc
pop
fbstp
scas
dec
out
sahf
cvtps2pd
mov
shlb
hlt
push
add
mov
cmp
pop
xor
add
stos
mov
test
sub
aam
cmp
test
mov
xor
inc
sbb
or
jo
mov
xchg
nop
ret
and
popf
les
sub
mov
adc
cmp
xchg
cmpsb
popa
out
and
test
jne
repz
cmp
mov
or
mov
loope
aas
mov
movsl
jl
pop
or
es
jae
mov
lret
dec
dec
in
push
mov
outsb
jecxz
mov
sbb
dec
cbtw
mov
setge
jb
cmp
jnp
push
and
fmull
cmp
add
cmp
insb
and
push
mov
cmp
pop
fbld
mov
mov
cmp
scas
inc
pop
xor
out
fidivs
fisubrl
xor
sti
push
cmpsl
sbb
dec
mov
mov
pop
std
lods
push
out
pop
or
mov
test
cmc
jnp
add
add
mov
out
fildl
out
pop
dec
and
dec
pop
addr16
sbb
out
mov
ja
adc
out
into
out
push
scas
pop
push
adc
mov
data16
and
jmp
imul
push
xchg
pop
or
or
inc
mov
or
sbb
sbb
sarl
sub
fwait
ret
inc
push
cmpsb
pop
xchg
jae
scas
loope
push
mov
mov
inc
mov
mov
xchg
jmp
stos
ret
push
js
loopne
les
push
pop
in
and
scas
or
mov
jmp
shlb
hlt
push
add
test
dec
fdiv
xchg
out
and
jnp
stos
loopne
mov
sub
daa
jmp
mov
lods
loop
push
mov
add
dec
pushl
push
add
lods
sbb
dec
das
mov
ja
xchg
mov
in
fidivrs
mul
inc
orb
jbe
mov
xchg
cmc
lea
fdivs
insb
jbe
jmp
gs
dec
xlat
jae
jge
int3
push
cli
int
inc
loop
add
aam
cmp
mov
daa
lds
dec
xor
shlb
loop
enter
ja
sbb
xchg
push
stos
pusha
push
movsb
xor
jbe
xchg
lahf
or
cwtl
inc
out
or
scas
iret
add
pusha
jg
cs
mov
inc
mov
shlb
dec
xchg
mov
push
test
aaa
jno
ds
pop
xchg
lock
mov
clc
pop
push
dec
push
out
mov
cmp
jns
inc
leave
scas
or
and
mov
lahf
aas
test
mov
pop
xchg
inc
dec
out
call
in
std
jb
insl
mov
jno
mov
shrl
in
adc
les
mov
in
fnsave
fnstsw
cmp
cmpsb
insl
push
fnstenv
movsb
pop
push
cmp
xor
mov
mov
call
in
and
xchg
icebp
sub
jp
jno
insb
mov
mov
push
shlb
and
push
add
pop
or
dec
mov
in
es
out
rcrb
xchg
push
fimuls
mov
fisttpl
add
mov
test
in
test
mov
xor
jo
xchg
repz
add
int
nop
shlb
movsl
push
xchg
ss
addr16
add
xchg
and
add
ret
adc
jmp
jge
pushf
adc
adc
inc
sub
mov
push
mov
mov
rcll
lods
fst
cmpsl
mov
icebp
mov
clc
aaa
imul
inc
mov
dec
aas
data16
in
dec
mov
xchg
xor
and
or
mov
mov
push
daa
in
cli
pop
sub
cwtl
mov
cmp
and
clc
int3
inc
lcall
sbb
jbe
jno
xchg
scas
fcoms
sub
lods
xor
outsb
sub
out
mov
fimuls
mov
loopne
xor
and
jbe
outsb
jecxz
mov
in
pop
out
int3
daa
call
and
mov
add
ljmp
mov
mov
xchg
xor
pushf
cmp
cmpsb
add
mov
scas
in
sbb
mov
dec
fisubrl
shlb
hlt
push
add
mov
push
add
mov
xor
sbb
inc
ljmp
roll
add
and
imulb
nop
popa
or
dec
fdivr
and
sub
aas
and
xchg
adcl
or
fstps
push
aas
pop
inc
cli
popa
fsubr
sub
mov
lahf
mov
mov
lcall
push
insl
xchg
rolb
or
add
jmp
xchg
mov
inc
aad
rcrb
xchg
adc
fsubs
push
hlt
dec
test
adc
outsb
adc
push
xor
pop
or
dec
mov
in
and
jnp
out
mov
sub
sbb
xchg
data16
rcr
and
pop
test
ret
ror
push
jecxz
jp
stos
push
daa
inc
fdivs
lods
and
mov
push
stos
push
jmp
xlat
inc
es
inc
push
add
or
pcmpeqb
repnz
push
sbb
and
mov
sbb
inc
roll
push
mov
sbb
mov
jno
adc
mov
or
fldt
iret
mov
push
decb
jg
les
dec
cmpsl
push
stos
pop
xor
and
dec
mov
ljmpw
sub
leave
inc
into
inc
jecxz
es
xor
rol
pushf
and
addl
jnp
inc
popf
xchg
add
pop
cmpsl
add
jo
inc
sahf
xchg
or
mov
cmp
inc
loop
lret
cmp
iret
je
mov
pop
sti
fdivl
jecxz
mov
jno
rorb
test
jp
mov
inc
xchg
sbb
fidivrl
out
or
jne
stc
pusha
xchg
jae
sbb
ret
sbb
lcall
dec
in
sub
mov
aam
xchg
mov
push
cmpl
push
mov
sbb
jl
mull
sbb
cmp
xchg
js
xor
xor
gs
sbb
pop
xchg
rcrb
mov
dec
pop
xchg
movl
fcoms
andb
jmp
mov
cmp
inc
add
out
imulb
ja
mov
pop
shrl
jns
dec
mov
sahf
out
mov
push
xchg
scas
sbb
pop
and
out
fnstcw
leave
cmp
xchg
jbe
aaa
pop
pushf
xor
out
addr16
out
in
lods
imul
popf
inc
dec
lcall
gs
push
ret
jecxz
and
inc
hlt
fwait
test
jns,pn
cli
push
aam
into
outsb
fdivrs
push
sahf
sub
xchg
jb
or
mov
pop
mov
imul
adc
shrb
lahf
aas
out
pusha
jge,pt
xor
das
mov
jmp
mov
cld
jp
into
cmp
xchg
scas
das
inc
xchg
or
pop
roll
jbe
inc
nop
adc
lods
pop
test
addb
loop
xor
es
mov
ljmp
mov
push
loope
dec
testl
pop
stc
push
ffree
and
fsts
or
shll
popf
dec
jo
stc
outsb
daa
sbb
int3
adc
stos
add
pusha
cmc
test
sahf
mov
add
int3
push
mov
push
push
dec
das
fwait
sub
sbb
inc
loope
xor
fisubrs
sbb
test
dec
out
sahf
pmuludq
fisttps
mov
lcall
daa
xchg
imul
jbe
movsb
add
jecxz
ret
arpl
pop
scas
andb
mov
dec
lock
fwait
test
push
dec
cmp
sub
and
pop
adc
aaa
or
sub
cmp
shlb
hlt
push
add
mov
repz
push
add
shlb
ret
ds
sub
ss
gs
iret
xor
push
jnp
push
mov
arpl
in
mov
pop
mov
push
loope
xor
push
add
sub
int3
ljmp
fwait
or
dec
cmpsb
jns
test
sbb
dec
mov
ja
call
xchg
rolb
xor
dec
andl
sub
sar
ljmp
idivl
jmp
xchg
or
test
test
repnz
pop
scas
icebp
mov
mov
pop
cs
xchg
inc
pushl
mov
xchg
mov
shl
and
into
adc
aam
push
lods
inc
neg
fbstp
movsl
setno
dec
push
lea
and
dec
mov
ss
inc
fisttps
sarb
ss
inc
xorb
or
sub
add
push
das
fbld
pop
pushf
roll
cmp
scas
jle
xchg
ljmp
xchg
push
mov
cmpsb
mov
inc
pusha
sbb
dec
adc
push
inc
push
xchg
cltd
sub
mov
xlat
jbe
andl
scas
hlt
cltd
ds
leave
jge
mov
mov
adc
arpl
js
imul
push
push
cwtl
dec
mov
sti
inc
jns
dec
shr
test
jae
mov
aam
loop
pusha
xor
sub
insl
dec
adc
mov
mov
jbe
shlb
sbb
loop
xchg
cmpsl
stos
push
add
jecxz
adc
mov
jle
lea
pop
pop
add
jp
subl
int
js
mov
or
add
push
loope
mov
add
mov
fnstsw
xchg
pop
fs
sbb
in
cmpsb
dec
lods
sarl
push
pop
cmp
mov
imul
out
lahf
nop
aas
loope
jb
loope
or
ret
notl
push
add
xchg
and
gs
and
xchg
pop
int3
jo
or
cld
push
testb
jg
fidivs
out
outsb
mov
testb
aad
inc
push
add
adcb
sbb
xlat
xor
mov
std
imul
ss
hlt
dec
mov
dec
mov
fwait
pop
imul
lea
cmpsb
addr16
out
xor
xor
sub
movsl
in
inc
xor
cwtl
sbb
es
inc
pushf
and
cmpl
jg
out
inc
mov
jbe
and
mov
sar
sub
rcrb
mov
mov
mov
mov
mov
or
jae
sti
sahf
add
dec
mov
fs
lcall
dec
push
push
loopne
mov
mov
fucomp
lcall
or
scas
pop
orb
mov
aam
jbe
cmp
and
xchg
pushf
add
jno
insb
movsb
fidivrl
movsb
xor
cmp
mul
or
ja
jno
mov
adc
and
outsb
hlt
pop
lods
stos
lret
repnz
and
xchg
data16
cmp
jmp
movsb
push
stc
int
cmp
mov
repz
sub
icebp
jg
pop
adc
lahf
xorb
js
bound
cmpb
clc
sub
sub
fwait
popa
stos
pop
ret
nop
adc
aaa
fldenv
jecxz
loopne
push
jle
mov
sar
jo
popa
inc
in
js
xor
or
and
lea
adc
dec
cmpsb
push
push
fs
shlb
in
and
or
scas
inc
mov
and
or
sbb
pop
adc
pop
push
jb
push
pop
js
sbb
dec
mov
scas
jecxz
cmp
fistl
movsl
adc
in
shlb
hlt
push
add
mov
dec
fnstsw
cwtl
sub
outsl
adc
sbb
stos
ljmp
or
rcr
sahf
dec
cmpsl
xlat
adcb
nop
or
add
outsl
inc
jecxz
xchg
xchg
xlat
dec
leave
movsb
sbb
fistpll
enter
adc
pop
aad
out
inc
xor
fcompl
xchg
scas
stc
and
add
insb
les
andl
adc
scas
hlt
xchg
out
and
test
jg
mov
arpl
dec
in
push
shll
and
addr16
push
subb
fistps
cmp
sub
inc
mov
xor
les
xlat
mov
jo
cmp
dec
sub
hlt
movsb
adc
push
fists
test
sbb
xor
jnp
push
into
aas
hlt
push
add
push
jg
or
pushw
popa
stos
int3
sub
and
mov
hlt
dec
shll
lds
mov
test
pop
mov
mov
rorb
inc
lea
fmull
push
je
mov
adc
cmpsl
and
xor
jle
aam
mov
cmc
cmp
cltd
mov
leave
sarb
dec
lds
cli
insl
sbb
loop
sbb
fdivs
shll
sub
stos
jge
add
and
and
jno
fsubrl
xor
xor
push
dec
call
cwtl
cmp
pop
cmpsl
in
jae
xchg
add
xor
adc
mov
xchg
pop
insb
pop
cmc
addb
scas
arpl
jge
xchg
cld
sub
sbb
inc
mov
jecxz
js
sub
out
mov
ret
or
sarb
mov
xchg
mov
jmp
daa
cwtl
pop
push
movsl
push
fmuls
cs
pushf
xchg
add
mov
loop
icebp
cmpsl
add
and
mov
lret
out
notb
mov
sub
mov
cld
lods
sbb
pop
lds
movsl
push
and
xchg
xchg
add
repz
in
and
pusha
mov
sahf
pmuludq
cmc
cmp
sub
push
in
push
add
and
test
dec
outsl
hlt
push
add
ffreep
pop
mov
sub
xchg
add
mov
test
in
test
pusha
add
mov
push
add
add
xorb
outsb
inc
dec
dec
jnp
test
loop
mov
mov
add
lcall
gs
sbb
pop
int3
push
mov
cwtl
jo
sbb
mov
rol
sub
dec
les
or
dec
mov
insb
or
lods
shlb
popf
fidivrs
sub
sbb
cmpsl
fsubrl
xor
loopne
hlt
dec
ret
mov
jg
fwait
xchg
add
lds
cmp
sbb
xchg
lock
mov
jle
shlb
imul
xor
cmpsb
test
inc
cmc
mov
jl
int3
ss
xor
adc
mov
pusha
jge
pop
push
inc
or
inc
cmp
pop
syscall
shrb
xchg
and
sub
lret
dec
mov
rcl
js
outsl
sarb
je
mov
xorb
fsts
shlb
inc
xor
jmp
mov
lahf
adc
inc
dec
es
icebp
xor
addr16
sub
and
lret
inc
loopne
xor
fldl
sbb
nop
lds
out
mov
xchg
cmp
jnp
rcrb
mov
push
loope
xor
test
mov
inc
mov
push
js
pop
scas
pop
hlt
push
add
or
mov
mov
shlb
jmp
or
lods
sbb
pop
out
mov
add
sti
inc
mov
jno
out
xchg
arpl
imul
xor
sbb
int
jnp
mov
jp
dec
out
out
mov
mov
ds
fwait
sub
dec
and
pop
mov
lods
cltd
loope
fiadds
push
into
dec
xchg
jo
xor
popa
test
mov
push
lcall
lock
fdivrp
cld
es
push
scas
dec
pushl
sbb
inc
lods
sbb
xor
dec
jmp
xor
cmp
jecxz
minps
cmpsb
or
inc
and
push
xchg
sarb
xorb
jne
pop
outsb
xor
mov
stos
cmp
xor
je
int3
popa
test
dec
test
adc
cmpsb
sbb
push
cs
fucom
rcrl
pop
mov
ret
movsb
mov
pop
lods
pop
aam
mov
sti
push
fidivrl
adc
fisttpl
int3
fstpt
rorb
push
fbstp
push
mov
stos
shll
shll
in
add
lods
or
jno
aaa
fsubl
test
push
jle
mov
subb
push
jle
xchg
jae
dec
inc
rolb
or
je
cld
sahf
mov
mov
mov
dec
sarb
fwait
dec
cmp
inc
cmp
xlat
jge,pt
mov
sub
fdivrl
cmp
stos
push
int3
jmp
cmc
cs
rolb
rclb
roll
and
hlt
shll
dec
mov
lods
pop
shl
test
or
sarb
cld
or
pop
popf
mov
lds
xchg
ds
mov
mov
jle
mov
or
mov
jbe
pop
mov
push
add
add
sbb
out
ret
or
enter
ss
jb
adc
or
shlb
js
in
scas
push
sbb
adc
addr16
mov
sbb
mov
push
add
notb
cmp
jno
push
roll
shlb
lea
and
fistl
pop
jecxz
cltd
add
int3
decb
mov
xchg
mov
sub
jg
mov
cmp
lds
cmp
std
xchg
mov
sbb
inc
add
fsubrl
pop
notb
clc
popf
dec
jne
mov
rcll
addb
mov
outsl
mov
in
dec
scas
push
pushf
dec
pop
insl
inc
or
inc
loop
fwait
xchg
adc
xchg
loopne
ljmp
xor
nop
in
xchg
fwait
xlat
xchg
jae
cmp
nop
leave
lds
dec
shlb
hlt
push
add
mov
and
stos
jno
das
inc
and
jl
dec
cli
stos
lods
outsl
fcompl
push
mov
lods
mov
out
mov
mov
mov
inc
insb
lock
call
jg
out
fld
pusha
adc
mov
push
popa
lods
sarl
in
jae
sbb
xor
dec
test
hlt
push
add
stc
push
sub
jl
dec
outsl
mov
rcrb
xchg
push
fistpll
icebp
jmp
stos
mov
out
fisttpl
into
inc
repz
arpl
sub
fnstcw
push
jle
dec
enter
out
outsb
stc
loopne
or
cmp
out
sahf
pop
jne
notl
dec
aam
test
lret
dec
decb
xlat
mov
sub
jge
aad
clc
sahf
cld
push
pop
cmp
shr
out
or
movsb
adc
push
negb
jo
jnp
cmpsb
out
mov
rcrb
mov
sub
movsb
xor
jno
xchg
repz
add
into
pop
xchg
shlb
hlt
push
add
mov
adc
hlt
xor
jno
fs
sbbb
lds
stos
out
pop
and
jp
cwtl
xor
je
bndldx
push
notl
mov
in
decb
into
sbb
and
sub
jnp
test
cs
scas
sbb
loop
sub
out
jge
push
hlt
xchg
inc
mov
push
add
loopne
push
scas
sbb
mov
mov
loope
fisttpl
lock
add
sub
out
shlb
pop
fdivs
jbe
jno
insb
movsb
push
mov
ljmp
gs
notb
inc
rcrl
mov
jne
jnp
sbb
cmp
push
add
jne
shll
and
cld
or
js
int
xchg
int
out
pop
or
mov
pop
pushf
mov
adc
in
mov
xor
test
mov
adc
andb
rcrb
test
xor
std
and
dec
mov
mov
cmp
inc
mov
call
aaa
cmp
push
cmp
inc
mov
jns
mov
sub
repnz
push
jg
xorl
mov
dec
xlat
xchg
cltd
mov
add
lock
jmp
in
popf
sub
xor
cmc
outsl
inc
pop
aad
and
out
in
xchg
rcrl
fisttps
idivl
jnp
push
popa
push
jge
mov
jmp
call
jnp
jmp
movsb
outsl
adc
pop
std
mov
scas
push
adc
aad
shlb
push
lahf
fisubs
loop
push
loope
ret
pop
call
bound
imul
push
and
cld
mov
mov
out
scas
sti
dec
mov
popa
je
test
jecxz
in
pop
xchg
push
sub
cmp
jl
mov
int
addr16
dec
mov
int3
ss
cmp
in
outsl
jae
cwtl
sub
or
jbe
pop
pop
add
iret
out
pop
cwtl
rorl
pop
jno
xor
xor
cli
ret
jg
pusha
call
jns
adc
or
hlt
imul
push
arpl
pop
inc
add
cmp
lcall
inc
daa
lods
and
xchg
fs
cli
jg
je
mov
inc
divb
adc
jg
loope
mov
aad
mov
out
pusha
test
into
xor
adc
adc
add
popa
mov
push
stos
pushf
mov
add
test
inc
stc
mov
jb
rcrb
pop
loop
dec
mov
scas
add
clc
inc
lods
inc
iret
aaa
rorb
pop
imul
adc
dec
stc
inc
dec
aad
and
cmpsb
cs
rol
fidivrl
fwait
divl
adc
shrb
loopne
and
or
cs
cmpsl
inc
imull
and
pop
mov
fsubs
and
loopne
adc
xor
fisubrl
adc
test
mov
aaa
stos
pop
jl
push
fcompl
dec
and
popf
inc
jecxz
xchg
mov
out
jne
pop
incl
dec
mov
popf
loop
sbb
orl
aam
aas
insb
push
push
dec
mov
add
xor
mov
aaa
loopne
mov
push
ss
out
loop
pop
in
push
mov
inc
inc
repnz
pop
xor
mov
xor
inc
mov
cmp
insl
sbb
movsl
lret
xchg
aad
outsb
inc
stos
push
movb
pop
stos
and
and
repnz
mov
les
aam
orl
pop
enter
cmp
gs
shlb
hlt
push
add
mov
dec
test
pop
jne
outsl
movsb
shlb
xchg
mov
jp
sbb
cmp
push
add
ja
inc
lods
sbb
fsubl
in
mov
cld
cmp
aaa
stc
lahf
sub
and
stc
mov
sti
addr16
jno
int3
lock
jmp
pop
ljmp
xchg
jle
mov
pushf
imul
ljmp
jnp
aad
cmp
shlb
daa
xlat
dec
hlt
push
add
test
jo
mov
shl
push
add
or
adc
cmp
call
and
xor
sahf
adc
je
fisubs
shll
aad
shlb
int3
cltd
sbb
dec
inc
call
adc
xlat
dec
mov
push
sbb
cmc
stos
or
mov
push
jle
sti
stos
push
mov
test
sti
stos
iret
mov
loope
mov
mov
js
mov
lock
cmp
ret
jge
outsl
out
movsl
xchg
dec
mov
cmc
movsb
dec
xor
pusha
jg
xchg
pop
sti
cmp
inc
repnz
out
xchg
das
mov
lods
adc
out
sub
in
cli
lahf
inc
push
int
sbb
sbb
scas
shlb
movsb
fldt
shlb
hlt
push
add
xchg
mov
and
jbe
dec
add
jo
xchg
mov
add
int
stc
push
lods
popf
insb
gs
dec
cli
push
scas
mov
std
icebp
stc
and
mov
pop
jb
xchg
sarl
out
dec
lret
lahf
insb
push
enter
push
add
cs
leave
cmp
sahf
mov
push
lods
sub
test
cli
stos
xchg
sbb
aam
and
fcmovbe
mov
inc
pop
leave
push
mov
fisubs
movsl
inc
mov
fidivrl
fwait
pop
push
add
xlat
gs
movsl
vmwrite
std
cmp
ja
not
je
leave
jns
sub
and
lahf
mov
pop
stos
shl
nop
cli
rolb
mov
bound
xchg
pop
push
out
cld
jno
mov
movsb
inc
scas
into
cmp
mov
adc
mov
mulb
pop
mov
shlb
loopne
rcrb
add
and
shl
mov
sub
mov
gs
and
neg
xchg
cmpsl
out
push
add
jecxz
out
lahf
adc
push
add
dec
fidivl
push
ret
jae
xor
lret
test
pop
sti
int
pop
jb
cmpsl
push
sub
xor
cmpsl
add
dec
mov
dec
mov
test
fcmovu
and
sub
js
mov
lahf
jmp
stos
and
or
loop
std
arpl
pop
fiaddl
lock
adc
out
mov
push
test
xchg
lock
mov
repz
add
daa
mov
rcrb
jp
in
scas
sbb
ret
ja
pusha
adc
mov
and
dec
mov
movsb
cmp
loope
sub
inc
push
mov
jmp
push
pop
movsl
iret
adc
push
loope
sub
enter
jo
push
dec
imul
or
nop
insb
dec
ret
cmp
and
xchg
cs
jmp
xor
cmp
movsl
movb
lds
adc
stos
lods
insl
or
dec
lar
jbe
cmpb
scas
push
jne
mov
cmp
scas
adc
mov
dec
int3
hlt
pop
clc
mov
pop
or
cmp
add
mov
leave
imul
inc
xchg
lea
out
sbb
xchg
pop
mov
add
sbb
cltd
repz
add
aad
div
push
add
xor
cmc
rcrb
mov
push
loope
repz
lahf
add
jo
test
pop
or
jecxz
cmp
mov
out
sbb
xor
mov
inc
mov
lret
cld
jb
xchg
cli
mov
notb
outsb
sbb
inc
cmpb
in
or
xchg
add
xchg
rcrb
mov
add
sbb
sbb
mov
dec
cmpl
cli
jge
mov
shll
jge
int3
lret
jb,pn
xchg
insb
testb
xchg
pop
mov
xor
int3
mov
mov
popa
les
lahf
sub
xor
or
or
pop
cld
push
fnstcw
add
sbb
cmp
mov
dec
jbe
jmp
rol
jno
pop
arpl
mov
pop
iret
or
xor
pusha
xor
lods
mov
loope
int3
in
or
cltd
add
push
call
xchg
push
iret
dec
addr16
call
xor
mov
push
mov
add
sbb
lods
dec
adc
adc
mov
repz
data16
je
mov
push
mov
mov
out
pop
xchg
push
subb
sub
leave
loopne
nop
mov
adc
push
jno
mov
scas
cld
inc
pop
sub
push
mov
jecxz
clc
cwtl
repz
shrb
icebp
jns
sbb
jle
lahf
lock
outsl
fstpt
pushf
lock
insb
fsubs
ret
in
mov
enter
push
fsubr
mov
sbb
xchg
aaa
xchg
lcall
inc
clc
int
xor
cmpsl
jb
clc
ja
jno
xchg
sub
adc
xor
gs
xchg
movsl
xor
mov
popf
xchg
stc
aaa
imul
inc
subl
push
sbb
in
gs
lcall
cmpsb
fimull
push
shll
repz
std
test
pusha
and
stos
add
or
and
mov
push
lret
ljmp
fwait
sbb
shll
sbb
icebp
out
and
mov
mov
arpl
pop
leave
pop
xchg
jl
sahf
decl
cs
lcall
lock
pop
sub
rolb
mov
mov
xchg
test
popl
and
hlt
adcb
push
mov
sbb
pcmpeqb
test
pop
rolb
mov
pcmpgtd
jb
pop
test
jno
loopne
fistl
inc
lods
adc
je
jnp
ljmp
rol
pop
mov
xor
pusha
adc
mov
or
cmp
dec
push
or
mov
jg
add
pop
in
dec
ljmp
jecxz
mull
out
movsb
sahf
aam
xchg
shlb
hlt
push
add
mov
or
or
pop
mov
mov
mov
pop
and
lock
add
fsubrl
jle
jns
call
in
popf
xchg
add
cmp
sarb
pop
mov
ja
add
addr16
sub
jmp
mov
add
push
ffreep
pop
mov
dec
rcrb
test
insl
cmpsl
adc
cld
mov
sbb
fcoms
add
adc
fiadds
out
in
ficoms
shlb
hlt
push
add
icebp
mov
loop
mov
enter
pusha
adc
mov
cmc
data16
push
add
lds
shr
sbb
cmp
sbb
das
cld
dec
mov
cmp
add
sahf
add
stc
and
sbb
into
lea
push
das
dec
outsl
fildl
fcompl
shlb
hlt
push
add
mov
les
xchg
inc
cmpsb
xchg
scas
add
or
iret
sub
gs
mov
aam
iret
inc
cmp
inc
pusha
adc
mov
dec
fdivl
std
xchg
cwtl
push
gs
pop
rcrb
mov
push
hlt
movsb
adc
push
fistpll
xor
push
stos
shr
pop
adc
cmp
inc
xor
outsb
adc
xor
xor
outsl
lock
inc
jno
mov
data16
and
cmc
sbb
add
or
mov
repz
sub
cmpsb
out
push
xchg
lret
js
dec
cld
mov
xor
out
inc
and
cs
lods
pop
cmpsl
add
push
dec
mov
ljmp
adc
mov
mov
jp
out
and
lds
xor
imul
in
out
jbe
pop
jle
jg
dec
ret
mov
pop
mov
add
sarl
fnsave
rcll
movb
loope
and
js
xchg
lods
movsb
sbb
insl
loop
cmp
or
push
pop
push
stos
mov
cmp
arpl
jg
das
pop
lret
rclb
fiadds
invd
jmp
daa
mov
rcrb
mov
xor
shlb
in
mov
mov
sub
mul
aaa
fbstp
in
dec
lock
add
pop
jbe
popa
sub
nop
mov
scas
sub
cmp
xchg
inc
or
and
sahf
dec
inc
leave
ss
pop
leave
bound
mov
stos
jecxz
sbb
mov
add
std
in
adc
les
scas
pop
dec
les
mov
pop
add
cld
jno
mov
jmp
fld
jae
and
sub
jge
loop
add
inc
sub
xor
insb
dec
lea
cmpsb
sbb
out
dec
cmp
push
dec
mov
or
pop
aas
mov
das
and
test
or
or
loop
and
mov
repnz
cli
cmc
adc
scas
push
dec
mov
mov
movsl
xchg
sub
aaa
out
fidivrl
inc
lds
loop
mov
aam
addr16
bound
repnz
in
and
test
rclb
dec
push
stos
pop
lret
ljmp
shlb
add
int3
cmp
jns
lcall
cltd
jnp
jmp
mov
fwait
cmp
pop
hlt
push
add
cwtl
es
shlb
pop
jg
int
mov
shll
mov
push
or
and
xchg
xor
xor
push
add
xor
xor
push
add
sub
pop
mov
push
scas
data16
imul
sbb
sbb
into
inc
sub
cltd
add
ss
xchg
repz
add
xor
shlb
insl
ficomps
xchg
mov
mov
push
xchg
pusha
adc
lods
sbb
dec
gs
mov
push
fists
nopl
icebp
pop
pop
xchg
xchg
lock
mov
or
jmp
sbb
cmp
fcoml
sbb
div
add
cld
lods
sbb
inc
cmpsl
inc
movsb
mov
mov
push
repz
mov
push
xchg
mov
stos
pop
mov
pop
or
sahf
sub
jne
mov
lret
or
inc
xchg
data16
std
xlat
loop
andl
daa
test
in
int
divl
test
lcall
mov
aaa
jno
cmpsl
pusha
adc
mov
mov
call
in
int3
inc
lods
inc
cmpsb
les
inc
cmc
iret
sub
adc
mov
xchg
adc
jbe
inc
into
inc
jecxz
notb
test
shlb
push
hlt
xchg
inc
mov
push
add
icebp
jg
int
push
data16
cmp
in
leave
push
out
into
mov
jp
cmp
out
inc
and
xor
loop,pn
repnz
mov
rcrb
mov
sub
loopne
push
jae
and
ss
lahf
or
dec
stos
xchg
decb
or
xchg
add
loop
test
mov
pop
dec
mov
xchg
bound
inc
pop
test
cwtl
sti
cmp
mov
test
scas
pop
cmp
decb
pop
xor
movsl
or
sub
xor
popa
out
push
adc
test
lahf
shll
dec
stc
adc
push
orl
xor
pop
or
dec
mov
sahf
dec
or
sbb
int3
ljmp
inc
dec
or
jg
movsb
push
mov
mov
aam
inc
cltd
pop
cmc
dec
outsl
mov
cwtl
out
mov
lea
repz
mov
xor
bound
cmpsl
nopl
sbb
icebp
mov
or
inc
arpl
out
icebp
and
aad
scas
add
ja
mov
pop
dec
fcoml
pushw
popa
test
hlt
push
add
int3
pop
pop
gs
and
in
pop
out
daa
ja
std
push
add
and
bound
push
insb
mov
inc
mov
jg
push
mov
push
add
shl
loop
sub
sub
sub
aad
sti
popf
sub
xor
cs
jge
out
pushf
and
fchs
mov
mov
or
enter
dec
and
push
mov
sti
addr16
cmpsb
in
jae
sub
enter
repnz
xor
out
lret
sbb
aad
lahf
or
int3
pop
lahf
inc
aas
cltd
push
ds
dec
inc
enter
cli
fwait
jge
call
or
into
subb
jecxz
cmp
pop
jnp
aas
add
cmp
scas
mov
in
or
adc
bound
test
aad
scas
or
jmp
sbb
shlb
hlt
push
add
mov
push
enter
cwtl
add
mov
push
add
lods
pusha
push
adcb
cmp
push
add
cmp
std
rcrb
mov
inc
into
mov
jp
je
inc
outsl
pop
nop
hlt
push
add
int3
jge
negb
cmp
sti
xor
insl
push
pop
push
cmpl
adc
xor
push
and
and
xchg
mov
repnz
lds
and
pushf
outsb
cmp
or
xor
and
sbb
mov
push
loope
add
popa
inc
sbb
pop
xor
icebp
and
inc
pop
and
mov
adc
or
sbb
xchg
push
lods
data16
jo
inc
and
xchg
xchg
shlb
pushf
cwtl
popf
xor
test
pop
inc
mov
mov
cs
cmp
in
add
sar
cmp
out
jns
lcall
dec
std
popf
or
push
sbb
dec
mov
lret
mov
cmp
or
loop
shl
shl
pusha
adc
mov
outsl
adc
imul
mov
push
pop
mov
roll
clc
mov
xor
pushf
gs
push
in
stc
cltd
cmp
pop
in
in
and
test
sbb
test
loope
xor
fisubrs
es
movsl
sbb
jnp
mov
movsb
xor
sbb
call
push
xor
je
pop
or
sti
jl
and
lds
cld
lret
add
mov
in
pop
xchg
or
sbb
cmp
ficoml
mov
mov
sbb
dec
mov
pop
jmp
outsl
add
scas
mov
sti
and
dec
aad
pop
adcb
add
in
out
mov
pop
lret
clc
cmp
jns
jo
jp
adc
shl
ret
stos
pop
std
cmp
xor
lock
stos
sar
test
inc
mov
jbe
xchg
or
cmp
jl
popf
repz
add
fnstenv
mov
add
call
loopne
ret
out
sbb
mov
pusha
adc
mov
push
jo
inc
xor
movsb
ja
jno
movsb
mov
push
mov
cmp
outsl
mov
pushf
add
mov
inc
cmc
adc
mov
outsb
jp
scas
xlat
dec
sbb
cmp
jo
icebp
add
mov
push
into
jge
cmp
shlb
repz
push
add
xchg
fimull
mov
aas
jbe
pop
pop
pop
or
fbstp
leave
call
nop
sbb
and
mulb
xor
fisubl
xor
cmc
rcrb
xchg
aam
push
add
adc
jno
lds
mov
xor
dec
cmpsb
insb
add
jo
outsb
push
hlt
push
add
lret
aaa
mov
hlt
push
add
inc
into
add
shlb
mov
push
fisubrl
dec
in
inc
into
mov
jae
sbb
outsb
fcomip
push
add
sbb
jo
cmp
in
shlb
hlt
push
add
scas
shrl
fwait
loopne
fidivl
pop
rol
xor
jb
xchg
repz
add
iret
pop
xchg
shlb
leave
adc
shlb
hlt
push
add
mov
stos
sub
mov
imul
aad
xor
dec
shlb
icebp
mov
mov
mov
mov
mov
xor
je
out
loope
dec
stos
pop
movsl
push
outsl
add
filds
loope
lret
fildl
xchg
int
push
cltd
into
push
hlt
xchg
inc
mov
push
add
icebp
dec
les
rcrb
mov
mov
test
in
fisttps
cltd
inc
int3
mov
dec
rcrb
xchg
aas
hlt
stos
push
movsb
pushl
into
sub
jl
repz
add
sub
xor
xlat
cwtl
popf
sub
rcrb
mov
push
loop
imul
xchg
mov
sub
sbb
scas
xor
fstl
fnstenv
mov
in
sbb
lret
movsb
sbbl
adc
dec
sar
outsb
push
js
fistpll
mov
inc
mov
in
sub
clc
loopne,pt
dec
fcoms
cmp
out
jo
push
das
push
mov
jns
out
test
mov
sub
xor
sti
dec
inc
cmp
lods
shll
dec
cltd
sbbl
filds
mov
xorl
mov
aad
xor
mov
inc
insl
or
mov
inc
call
fldenv
dec
out
packssdw
mov
jmp
jae
js
lret
inc
loopne
icebp
cmpsl
inc
imull
popf
test
movsb
xor
push
sbb
lds
imul
jmp
testl
dec
mov
push
pop
aas
stos
mov
mov
aad
pop
xorb
bswap
mov
push
leave
jp
out
fdiv
mov
lahf
or
sub
push
push
xchg
mov
jp
je
pop
repz
fisubs
loop
push
mov
pop
les
sub
mov
push
loope
filds
xchg
and
mov
dec
jmp
add
inc
mov
pop
std
lret
add
pop
aam
sub
rcrb
mov
add
sbb
sbb
rcrb
xchg
cmp
out
daa
push
mov
pusha
adc
pop
int
push
add
or
popa
pop
adcl
psllq
movsb
mov
jmp
fidivrs
mov
mov
cld
enter
cld
jl
ja
loope
movsb
jnp
ljmp
pop
rcrb
test
dec
fnstsw
fildl
daa
and
sbb
mov
lcall
push
loopne
adc
mov
add
inc
or
mov
fcompl
cmp
in
xor
cmp
mov
mov
lcall
sahf
ds
sbb
sbb
mov
sahf
lock
mov
iret
out
inc
push
movsl
faddp
jno
scas
add
imul
icebp
lods
std
dec
jmp
pop
jecxz
jb
mov
enter
mov
insl
pmulhuw
jno
fstps
mov
shrw
sbb
push
mov
arpl
dec
cld
inc
loop
mov
cld
mov
xor
pushf
inc
pop
ds
mov
push
jb
pop
mov
mov
out
in
push
hlt
push
add
inc
popf
xchg
add
sub
dec
hlt
push
add
xchg
das
iret
sub
cwtl
es
int
push
dec
xor
idivb
sbb
cmpsl
mov
addr16
bound
pusha
shlb
sub
add
fstpl
sbb
or
andb
adc
imul
xorb
test
push
notl
mov
into
push
sar
dec
decb
shl
movsl
inc
mov
mov
std
jge
sub
dec
jge
sbb
fnstenv
popl
mov
inc
out
hlt
push
hlt
jle
inc
rcrb
mov
dec
pop
jecxz
xchg
sub
ret
movsl
stc
xchg
fcomp
stos
out
sahf
imul
addr16
push
lock
mov
addr16
cmpsl
push
enter
repz
in
xchg
add
lret
cmp
push
add
js
mov
aam
cltd
or
incb
push
sahf
add
cmp
and
fmull
ret
sub
xchg
fprem
cwtl
add
jo
cmpsl
xor
cld
sub
or
les
dec
mov
cmp
cltd
xchg
mov
pushl
or
mov
scas
mov
loope
scas
dec
mov
push
push
adc
pop
ds
mov
std
and
inc
ret
jns
imull
mov
ljmp
rcrb
mov
push
cmc
movsl
push
hlt
push
add
push
loopne
fidivrs
lahf
repz
add
fldt
shlb
push
add
sbb
adc
mov
jle
cmp
movsb
sbb
cltd
ss
push
es
js
add
push
xor
out
cli
pop
das
or
cld
and
sub
addr16
mov
fwait
jbe
in
mov
or
xchg
adc
xchg
or
icebp
pop
mov
stos
xor
pop
xchg
xor
xor
bound
push
inc
sub
cmp
pop
mov
and
mov
scas
ja
orl
enter
iret
clc
aam
dec
mov
leave
or
sti
xor
pop
adc
shlb
jg
push
loop
xchg
mov
jge
leave
pop
fnstsw
sarl
sub
fs
out
ret
cmp
js
fs
add
int
xor
aam
cmp
mov
out
xchg
call
jnp
jmp
insb
dec
das
stc
ss
push
lea
rorl
jno
lds
mov
lcall
testl
test
push
je
outsb
leave
inc
outsb
pop
lock
or
stos
loopne
sbb
jne
loope
fcomi
xchg
repnz
mov
ljmp
pusha
adc
test
sub
fldl
mov
jmp
push
dec
cmpsl
inc
imull
push
add
movsb
adc
add
xor
mov
add
adc
adc
adc
pop
sahf
ds
pop
mov
dec
mov
clc
popf
enter
sub
mov
inc
mov
cltd
cmp
pop
hlt
push
add
xchg
and
shlb
scas
adcb
add
jmp
gs
test
mov
pusha
adc
notb
fiaddl
das
jecxz
xor
cltd
sub
pop
mov
aas
and
out
shrb
dec
int3
jmp
xchg
fs
cmpb
pop
push
outsb
insb
and
and
jnp
rdmsr
cld
push
sbb
xchg
out
pop
mov
mov
test
inc
in
xor
pop
mov
inc
repnz
inc
jg
bound
mov
mov
xchg
and
mov
push
loop
repnz
popf
add
mov
addr16
push
mov
gs
iret
cld
inc
iret
sub
or
pop
lret
jmp
in
rcrb
test
lahf
aas
fistpll
imulb
add
add
adc
test
adc
add
adc
stos
add
xor
das
iret
outsl
pop
nop
xor
pusha
int3
pop
pop
gs
sbb
lea
rorl
rcrb
mov
jae
rcrl
lahf
or
les
call
das
cmp
push
test
push
cmp
push
mov
push
ja
mov
adc
icebp
std
aaa
ljmp
cmpsb
jmp
cmp
js
cwtl
fisttpll
fstl
into
add
dec
imul
lock
ret
mov
js
sbb
ret
or
cmpsb
aam
into
sub
daa
in
xchg
lock
ret
mov
jg
jns
rcrb
mov
cwtl
add
rol
push
cmc
pop
dec
in
icebp
ljmp
int
mov
imul
in
push
mov
and
inc
sub
xchg
add
pop
jnp
jl
mov
movsl
cmp
aas
les
aas
shll
inc
and
sub
jg
add
inc
mov
lods
icebp
xchg
in
and
mov
sub
popf
inc
pushf
xchg
inc
and
cmp
or
xchg
push
dec
mov
out
mov
hlt
push
add
lahf
or
xchg
cmp
xor
cs
notb
add
repz
in
and
sbb
test
inc
out
rolb
cmp
fdivl
std
xchg
fwait
std
imul
sbb
test
dec
fdivl
clc
rolb
ret
das
fisttps
pop
pop
jno
cmp
loopne
hlt
imul
lods
and
lret
fsubl
lret
mov
jge
loope
rcrb
adc
mov
ficompl
dec
jbe
inc
in
push
cmc
mov
test
fcompl
jge
es
pop
add
sbb
xchg
xor
push
addr16
jae
push
jns
outsb
dec
pop
sarb
mov
xchg
inc
dec
xchg
nopl
rcrl
and
xchg
in
dec
std
outsl
ljmp
fnstcw
dec
sub
adc
push
rcrb
sub
dec
bound
sbb
aaa
mov
popa
xchg
pop
jmp
jnp
cs
and
es
dec
mov
mov
pop
stc
rcrl
lcall
and
repz
add
mov
dec
add
sbb
mov
push
clc
sub
pop
mov
into
push
add
pop
mov
jno
xor
sbb
xchg
std
push
stos
push
test
cmpsb
sbb
mov
lahf
cmpsb
adc
in
mov
cmp
loopne
movsl
repnz
int3
pop
andl
imull
mov
test
lods
jnp
out
in
add
inc
pushf
xchg
stc
xor
bound
mov
test
in
push
inc
pop
in
xchg
insl
sti
xor
jno
cmovne
pop
xchg
addr16
shlb
hlt
push
add
mov
outsl
mov
aas
fdivl
data16
hlt
je
add
jmp
push
lret
call
sarl
cli
shll
cmp
mov
int
out
xor
cmp
ja
xchg
in
sbb
cmp
aam
or
cmp
gs
pop
push
jno
adc
lret
mov
mov
and
js
jnp
push
lret
push
push
inc
movsb
adc
rcrb
test
dec
fdivrl
fidivrl
sbb
and
mov
add
std
imul
mov
push
cmc
movsl
push
hlt
push
add
push
loopne
hlt
jecxz
lds
xchg
or
add
push
adc
je
mov
push
sysexit
or
mov
lret
movsl
adc
push
or
rcll
das
loope
cmc
xchg
inc
mov
mov
repnz
in
and
sbb
mov
jne
jo
loope
repnz
xor
jo
repz
add
sbb
and
mov
mov
lea
cmc
xor
add
mov
sbb
push
shll
loop
pop
call
or
inc
pop
fwait
lret
mov
inc
add
aas
and
lahf
push
adc
pop
stos
push
add
ret
aad
mul
dec
pushf
push
fstpt
add
dec
repnz
inc
in
jo
sarb
mov
sahf
jecxz,pt
sti
push
movsl
push
sbb
loope
mov
push
js
inc
scas
jecxz
gs
rcll
inc
cli
mov
inc
mov
push
add
mov
fs
gs
andb
mov
jb
rcrl
bound
dec
jns
mov
test
and
mov
pop
inc
push
roll
adc
enter
dec
pusha
fcoms
movsl
pop
cli
enter
xchg
inc
out
inc
mov
xchg
mov
inc
jno
scas
inc
imul
mov
lods
pop
mov
jg
jbe
adc
pusha
mov
dec
aad
loopne
inc
or
jno
pop
cmc
and
jae
jge
lahf
adc
fs
in
fldenv
and
push
mov
mov
mov
xor
iret
and
adcb
add
xchg
mov
ljmp
adc
cwtl
subl
sahf
dec
imul
add
mov
jg
mov
andl
mov
js
sbb
xchg
push
fidivrs
aaa
stc
mov
push
jg
push
add
mov
sbb
mov
add
sbb
mov
pop
mov
fcoms
in
mov
aam
faddp
movsl
sub
jmp
sbb
pop
jmp
jo
test
sub
sub
cmpsb
into
rcrb
mov
and
sbb
test
dec
fistl
shrb
inc
inc
mov
add
mov
mov
in
mov
and
mov
dec
jnp
and
movsb
adc
pusha
adc
mov
sbb
test
dec
out
lahf
adc
push
add
dec
fimull
insb
aas
dec
outsb
adcb
ficomps
leave
cmp
add
lret
es
out
ret
loope
or
cli
xor
sub
scas
push
and
lahf
add
pushl
enter
cmp
mov
dec
movsb
outsl
adc
push
clc
mov
icebp
imul
jnp
jmp
mov
jl
in
cmpsl
rcrb
xchg
rorw
testl
cmp
and
add
xor
jae
loop
out
ret
push
xchg
sbb
test
dec
fdivr
cwtl
cmp
pop
hlt
push
add
xchg
and
mov
push
inc
movsl
adc
and
mov
mov
pop
jno
jmp
xchg
jo
leave
ds
jmp
insl
fisttpll
push
into
mov
leave
jns
lods
dec
jae
cwtl
cmp
imul
push
mov
jl
jg
lds
or
xor
gs
imul
and
loopne
rcll
roll
mov
test
roll
and
out
cmp
mov
pop
fwait
lret
sbb
xchg
mov
js
pop
push
xchg
js
stc
out
add
pop
or
fisubrl
pusha
add
fldt
out
les
aam
in
movsb
push
mov
leave
hlt
mov
movsl
push
fists
in
jl
mov
je
adc
or
push
cmp
dec
repnz
je
mov
dec
imul
aam
pusha
adc
pop
int
push
add
or
arpl
aaa
xlat
jl
jne
cmp
in
loopne
add
xchg
std
mov
shlb
hlt
push
add
mov
aaa
and
mov
inc
data16
shrl
dec
push
push
dec
push
out
sbb
sbb
mov
loope
push
lahf
pop
loopne
pushw
mov
and
cwtl
notl
ret
das
mov
leave
hlt
xchg
inc
mov
jae
test
dec
mov
es
jbe
lea
mov
enter
lahf
fidivs
push
mov
daa
xlat
sub
rcrl
inc
int
mov
cmp
mov
adc
out
mov
ret
das
fwait
stc
ja
enter
add
hlt
cltd
sub
fnsave
mov
rcrb
xchg
rorw
out
and
xor
les
mov
das
mov
xchg
pop
jp
xlat
pop
inc
rep
push
push
fs
jl
testl
test
cmpsb
dec
jl
pusha
movsl
push
out
nop
adc
outsb
lea
in
mov
out
xchg
xor
push
mov
pop
push
ror
mov
and
xchg
gs
mov
and
inc
test
jge
popf
cmp
fdivrs
xchg
add
xor
mov
gs
fmuls
xchg
push
movsb
adc
lret
js
loopne
add
and
in
pop
loope
add
lcall
jmp
shrl
cltd
hlt
ds
out
and
sbb
sbb
mulb
sub
inc
dec
test
outsb
fdivrs
pop
sarb
push
call
add
out
gs
push
dec
es
dec
xor
push
imul
add
std
mov
pop
push
cmp
cmp
pop
pusha
adc
mov
pushf
mov
sbb
inc
jno
fs
imul
dec
inc
lods
sub
icebp
xchg
hlt
imul
add
cs
jp
fs
scas
adc
cltd
push
ret
pop
inc
and
and
scas
pop
shlb
and
sti
pop
lds
mov
xchg
mov
jmp
pushf
inc
pushf
dec
mov
inc
popa
cmpsb
sti
add
fldcw
jnp
testl
sbb
call
xchg
ljmp
sahf
in
sub
iret
sti
jnp
push
daa
in
adc
xchg
mov
adc
push
lods
sbb
mov
jp
rcrb
mov
jbe
mov
sbb
outsb
hlt
push
add
dec
mov
idivb
cmpsl
xor
std
pop
sbb
mov
cmp
ljmp
xor
jbe
dec
fcoml
shlb
hlt
push
add
mov
dec
fmull
adc
rolb
jmp
fmuls
leave
xor
inc
rolb
mov
loope
add
jmp
out
xchg
mov
inc
nop
xchg
mov
and
sbb
and
mov
jno
or
dec
xchg
xor
fs
adc
loop
sarb
sbb
and
fbstp
icebp
mov
pop
mov
cmp
mov
xchg
jge
aas
test
xchg
push
mov
cmpsb
notl
pop
or
or
push
into
outsb
lahf
test
xor
in
std
xchg
inc
adc
or
fadds
sub
aaa
fsubrl
lret
xchg
lock
ljmp
out
cld
and
jno
xchg
inc
push
add
jae
out
xchg
cmp
jns
pushw
popa
scas
shrl
sub
pusha
add
icebp
pop
or
dec
mov
dec
dec
adc
jle
push
out
fsubrl
rcrb
mov
je
pop
in
into
push
ds
mov
xchg
mov
ljmp
sbb
lret
xor
dec
shll
xor
xor
sbb
out
test
rcrl
addr16
push
mov
das
je
test
pusha
adc
jmp
xor
lahf
std
daa
cmp
nop
inc
pop
pop
and
loope
and
inc
add
adc
inc
jle
jns
out
mov
jae
mov
dec
movsb
push
push
push
clc
mov
arpl
rcrb
mov
les
pushw
stos
inc
jle
inc
jne
scas
in
sbb
mov
add
push
and
fidivrl
push
fdivs
hlt
jp
out
and
push
or
stos
jmp
adc
int
xchg
cld
ljmp
xchg
test
xchg
or
jnp
and
push
push
pushf
ja
cmp
cmp
sbb
in
stos
arpl
outsl
jae
faddl
popf
and
xchg
dec
jb
in
cmp
mov
mov
ja
das
sarl
int
xchg
out
es
out
test
rcll
xchg
xchg
int3
daa
mov
fs
outsb
inc
subl
pop
js
fstp
and
sahf
jecxz
ficoms
in
xor
jle
pop
push
cmp
or
test
int3
cmp
adc
jno
jnp
push
or
stc
xor
fsubl
jecxz
imull
sbb
out
add
fstl
dec
pop
js
decb
shlb
or
xchg
mull
scas
and
inc
mov
aas
xor
xor
mov
inc
mov
fimull
out
xchg
lods
cmp
sbb
repz
inc
mov
jg
lcall
adc
sbb
test
dec
fdivl
sti
mov
int3
insb
sbb
hlt
push
add
leave
outsb
ret
adc
push
ret
or
dec
and
dec
xor
mov
data16
lds
adc
fwait
in
xor
sbb
outsb
fcomip
push
add
sbb
jnp
jnp
jne
jg
fisttpll
mov
jno,pt
jne
dec
lock
mov
dec
fidivrl
sub
xchg
and
enter
roll
add
jb
cmp
push
mov
icebp
mov
cmp
and
lcall
aaa
imul
cmpl
mov
in
sub
and
das
fildll
push
mov
sti
push
jnp
test
xor
jb
movsl
push
or
lahf
ret
stc
adcl
pop
mov
stos
jbe
cmp
data16
mov
aad
cli
pushf
cli
data16
cmp
jns
lcall
idiv
nop
xor
xor
je
adc
outsl
pop
fwait
test
push
mov
into
lods
sub
ret
mov
xor
mov
push
mov
cwtl
fisttpll
insl
mov
xchg
ret
stos
fildl
mov
and
mov
sahf
xor
sbb
rcrl
cwtl
sub
loope
mov
sub
roll
in
sbb
jmp
xchg
push
shrb
pop
jg
inc
stc
repz
sub
das
or
das
popf
pop
stc
scas
repz
out
jbe
pop
or
les
sbb
jmp
pop
enter
push
jno
mov
sbb
or
fwait
cwtl
rolb
adc
in
push
bound
and
push
add
mov
js
jae
loope
stos
cmp
mov
dec
movsb
push
xor
xor
movsb
pushl
sbb
mov
push
loope
xor
test
cmpb
int
hlt
push
add
jp
add
shrb
pop
clc
push
ffree
push
xchg
gs
xor
add
daa
mov
pop
popa
loope
out
or
pushf
push
fistps
ror
lods
pusha
leave
notl
push
aam
test
enter
sbb
pusha
adc
mov
add
lret
push
fisubrs
stc
cltd
ds
repnz
pop
lea
jle
js
shlb
hlt
push
add
test
imul
xor
sub
fwait
stc
gs
icebp
xchg
inc
mov
push
add
out
jl
test
pop
aad
jo
test
mov
rolb
mov
pop
xor
std
mov
mov
jl
je
cwtl
jg
dec
loop
aas
adc
jae
inc
mov
call
bound
movb
decl
in
cmp
jno
xchg
inc
fldenv
lahf
xor
or
push
enter
adc
push
jb
xchg
cmc
fisttps
and
mov
jo
pop
mov
sbb
loopne
fisubl
bound
in
mull
sub
jg
jns
outsb
movsl
fstpt
movsl
xor
adc
or
sbb
cmpsl
adc
push
cmp
daa
mov
addl
cmp
pop
icebp
sub
dec
inc
push
push
outsb
or
popf
pop
repz
xchg
cwtl
orb
mov
mov
pop
jge
ja
ss
xor
xchg
in
push
int3
test
mov
popa
xchg
jmp
scas
shrb
lcall
arpl
test
sbb
mov
xchg
inc
in
out
daa
xlat
dec
xchg
pop
push
sbb
fistpll
hlt
notl
push
mov
sub
dec
mov
cmc
movsl
push
xchg
pop
push
out
loopne
cmc
lcall
test
pop
std
addr16
aad
ss
fistps
ret
adc
aad
nop
shrb
leave
xor
insb
pop
mov
add
aas
int
lret
es
xchg
and
aad
aas
popf
or
adc
cs
inc
lock
inc
mov
jnp
shll
push
add
lds
sbb
xchg
dec
pop
sub
mov
pop
out
imul
outsl
ret
pop
pop
stos
inc
daa
pop
cmc
lret
aaa
lds
ret
arpl
test
dec
out
pop
mov
rorb
add
mov
cmpsb
push
adc
test
sub
repz
push
add
daa
xlat
repz
cmp
fimuls
flds
sar
and
into
inc
cmp
mov
packsswb
in
and
popf
pop
sahf
int3
stos
mov
cld
push
fnstcw
sub
mov
dec
mov
les
mov
pop
js
lods
ret
dec
push
cmp
xor
mov
inc
aam
in
jg
jp
ret
enter
pusha
movsl
adc
inc
rcl
inc
js
lea
sub
inc
hlt
xor
jo
mov
mov
lea
fsubr
outsl
in
inc
pusha
adc
loope
cwtl
jb
aas
loop
mov
dec
pop
mov
imull
pop
movsb
xchg
add
add
das
daa
xor
fstpt
mov
cwtl
xchg
and
dec
mov
pop
fimull
fcomip
imul
into
cmc
iret
and
cmpsb
fldcw
testl
outsb
and
push
scas
sbb
pop
inc
mov
cltd
adc
push
push
xchg
pop
stc
pop
stos
pop
fldt
adc
test
jmp
dec
mov
in
mov
inc
pop
adc
xor
fistpl
hlt
cmp
lcall
push
push
xchg
pop
enter
and
sbb
fcoml
xchg
ljmp
pop
imul
popf
cmp
movsb
sti
ja
fimuls
insl
dec
cmp
xlat
fildll
outsl
cvtdq2ps
cmp
dec
addr16
dec
cmpsb
outsl
adc
jae
rcrb
pop
mov
sbb
push
jns
in
inc
out
or
or
fcoms
dec
rol
popa
lds
dec
lds
push
scas
sbb
fnstsw
cmpsl
xor
aaa
rorb
jmp
shrb
jns
cltd
in
lods
pop
inc
lods
xchg
mov
sbb
push
and
dec
repz
dec
mov
lcall
pop
orl
mov
add
xchg
or
xchg
into
cmp
out
dec
shr
or
ljmp
fisubrs
fwait
mov
hlt
std
repnz
sub
inc
sub
xchg
nop
fisttpll
movswl
stos
rolb
push
adc
mov
imul
push
testl
sub
sahf
jp
hlt
push
or
incl
sub
test
jge
cmp
xor
daa
andb
or
cmp
jmp
push
jecxz,pt
mov
xchg
mov
les
in
pushf
push
or
data16
es
inc
xor
jb
xchg
xor
arpl
adc
push
imul
idivl
add
mov
in
mov
adc
adc
mull
and
hlt
push
mov
xchg
mov
pop
repnz
lods
icebp
mov
mov
jae
movq
pop
data16
jb
lea
ret
jae
and
dec
sbbb
sbb
mov
inc
or
add
inc
scas
push
jge
inc
popf
xchg
clc
xor
jnp
cmc
popa
mov
lcall
fwait
xchg
lods
ds
sub
outsl
adc
pop
std
lret
dec
pop
daa
adc
jae
cmp
jle
push
in
xor
push
sub
xor
sbb
mov
orl
mov
xor
into
mov
jp
xchg
cld
pop
mov
inc
sbb
wrmsr
dec
jo
inc
hlt
pop
inc
stc
les
insl
lret
and
bound
cmp
cs
mov
lock
sub
sbb
popf
outsb
jecxz
aam
pop
xchg
adc
ds
fists
addl
push
mov
ss
fldpi
dec
sub
out
ss
adc
jbe
inc
into
inc
jecxz
imull
loopne
sbb
sbb
pop
or
aas
shlb
shlb
les
in
xchg
lock
cld
data16
imul
lods
inc
out
sbb
xor
nop
aad
jb
jb,pt
xor
cmp
push
sbb
out
push
imul
add
cmp
and
mov
sub
test
xchg
loop
repz
mov
test
or
jne
aas
int
lcall
enter
out
push
mov
loop
imul
mov
jg
or
sbb
push
cmc
lcall
adc
push
fnstsw
icebp
cmpsl
adc
or
outsb
mov
getsec
mov
loop
outsl
dec
sbb
pop
xorb
insb
gs
iret
cmp
psraw
insl
xchg
xor
pop
xchg
or
xchg
add
hlt
andb
push
fldt
mov
jecxz
lods
cmp
cmpsl
inc
mov
inc
add
dec
ret
loope
xchg
xor
lahf
scas
sub
push
xor
cmp
movhps
fcmovbe
repnz
out
imul
push
icebp
pop
mov
or
mov
orb
dec
aaa
loope
fstpt
cmp
add
sti
jl
cwtl
adc
mov
or
sub
test
adc
xchg
cmp
fidivl
cmpsl
sub
loopne
int3
lea
add
sbb
jae
ljmp
push
mov
and
and
ss
popa
mov
imul
adc
adc
jae,pt
loop
jns
leave
outsb
xchg
pusha
sbb
shl
xorb
push
subb
jns
dec
and
out
jge
bound
mov
dec
and
xchg
sbb
in
test
daa
clc
shlb
pop
into
std
iret
jg
cmp
xor
dec
sti
mov
shl
daa
insb
or
pop
and
jmp
sub
movsb
jecxz
shl
iret
push
lret
inc
addr16
xor
mov
mov
repnz
jecxz
fldl
shll
ds
or
iret
cmp
out
daa
data16
stos
pop
jnp
enter
push
sub
xchg
shlb
inc
mov
lds
into
inc
bound
dec
fs
pushl
xor
jecxz
call
inc
idivb
aas
fisttps
xchg
mov
xor
cmpsl
into
jle
cmpsl
mov
push
or
enter
int3
enter
adc
ret
das
xchg
std
xor
xchg
add
add
xchg
cmp
xor
in
xor
lcall
out
sub
xchg
lahf
add
adc
pop
sub
xor
iret
jecxz
lcall
outsl
lahf
imul
test
mov
adc
pop
lds
mov
aam
cmp
or
mov
jp
fsubl
cmc
fxch
pop
paddb
or
pop
jno
fwait
add
lock
inc
shlb
insb
cli
aas
out
test
aas
das
sbb
fnstsw
cmpsl
push
jmp
sbb
ret
cmp
mov
movsb
push
xchg
out
xor
in
mov
jne
and
add
pop
sbbl
les
dec
stos
sbb
xchg
cs
jle
push
dec
addr16
dec
mov
adc
xor
or
add
rcrb
mov
mov
out
push
or
mov
outsb
mov
xor
mov
and
xor
xor
push
add
int3
cmp
jns
sub
mov
loope
adc
cmp
pop
pop
or
fldl
cld
pusha
xchg
push
xchg
adc
mov
sbb
loopne
push
scas
or
js
inc
rolb
lods
dec
in
popf
push
cmp
fmuls
ss
xor
mov
outsl
cmpsl
imul
test
push
negl
aas
push
loop
pop
mov
pop
push
test
fwait
in
outsl
imul
ret
out
sbb
inc
and
push
lock
bound
in
push
add
fsubrl
adc
popl
shll
test
or
cwtl
or
push
ja
pop
pop
movsb
dec
mov
pop
sbb
pop
movsb
call
in
xor
jb
and
push
into
jle
ret
cmp
mov
cmp
notb
xlat
push
negl
roll
rolb
int
cmc
push
jno
sbb
dec
xchg
inc
sbb
int3
inc
cmpsb
shrl
xor
push
test
push
or
lds
loop
lods
add
push
push
add
pushf
cmpl
sti
addr16
push
scas
bound
leave
xor
mov
lahf
inc
std
mov
mov
das
outsb
jle
push
ja
or
push
fstpt
and
push
repz
mov
outsb
and
jnp
pop
sub
fs
pop
and
mov
pusha
adc
ss
cmpsb
pop
mov
jns
popf
mov
cwtl
aas
jbe
mov
dec
pop
out
rolb
scas
repnz
fsubl
adc
cli
sbb
pop
cs
xchg
cmp
movsb
fidivrl
xchg
lahf
add
aaa
and
mov
cmp
pop
out
sbb
add
xor
cld
dec
repz
mov
push
arpl
xchg
pop
ljmp
les
mov
sbb
fcomp
jno
dec
incl
sbb
adc
test
rcrb
mov
ljmp
popf
dec
movsb
cmp
xchg
cld
movsb
adc
mov
lret
imul
lock
cli
xchg
out
add
mov
pop
inc
mov
imul
inc
stos
mov
leave
dec
pop
jge
call
stos
repnz
pop
orb
dec
jne
cli
jae
cld
cmp
cli
ljmp
add
arpl
bound
xor
mov
movsb
pushl
xchg
sub
lds
dec
test
add
sub
lds
dec
stos
pusha
push
xor
enter
adc
inc
jl
sbb
mov
push
loope
into
imul
shlb
aas
out
movsb
add
xchg
pop
fld1
jno
ja
adc
mov
add
out
cmpsl
test
or
jne,pt
repz
or
push
dec
sbb
addb
pop
lcall
or
jmp
rep
pop
lds
std
xchg
push
aam
jnp
adc
rcrb
jge
add
fisttps
je
mov
xchg
dec
fcmovnu
out
adc
jmp
inc
sbb
push
pop
sub
pop
bswap
pop
push
shrb
repz
and
jb
stc
mov
mov
add
xchg
xor
pop
mov
jmp
add
inc
icebp
or
push
mov
cmp
daa
jb
cmpsl
adc
xchg
adc
enter
mov
sub
icebp
pop
cli
popf
adc
xor
ficompl
or
pop
cmpb
mov
jo
xchg
shr
xchg
mov
mov
sahf
pop
cltd
ljmp
inc
bnd
inc
popf
and
push
sub
cmp
mov
lock
and
push
and
pusha
fucomip
push
and
lret
pop
mov
and
jecxz
sbb
sub
xchg
call
mov
lock
push
aas
pusha
out
sahf
sbb
xor
mov
cmpsl
fldenv
xor
scas
ret
sti
xchg
mov
sbb
movsl
or
aas
xor
jmp
js
daa
push
repnz
pop
jg
push
dec
sti
mov
cli
jl
pop
cmc
in
dec
or
push
sbb
ret
mov
pop
pop
lret
hlt
fwait
scas
icebp
xchg
pop
jl
inc
ds
push
mov
test
cmp
xchg
inc
mov
daa
adc
movsl
fcomi
push
ffree
fistpll
icebp
cmpsl
ret
push
pop
mov
jmp
dec
mov
mov
add
xchg
icebp
cmp
mov
or
push
mov
jnp
sbb
out
cmpsl
jne
lret
stos
pop
push
lahf
xchg
loopne
iret
lahf
mov
jge
and
inc
mov
jae
sbb
repnz
stos
roll
push
push
outsb
into
or
mov
out
pusha
inc
mov
xchg
or
push
xchg
dec
out
xchg
inc
leave
lahf
cmp
mov
scas
push
sub
mov
sbb
or
mov
bound
cltd
aaa
lods
push
sub
mov
and
adc
jbe
push
in
jo
gs
inc
jns
dec
jmp
sti
cs
pop
in
out
lahf
push
int
xor
push
repnz
pop
rolb
insl
jno
insb
movsb
jecxz
negb
jbe
loopne
cmp
clc
cmp
mov
in
lret
mov
sbb
xor
lret
in
or
jmp
xor
das
in
clc
popf
dec
jg
repz
xchg
and
aaa
dec
cwtl
je
xchg
sub
cmp
out
loop
add
out
jns
sub
pop
subl
out
jns
outsb
cmp
pop
mov
je
pop
lods
icebp
mov
push
nop
push
out
sahf
ds
pop
lahf
shl
fs
adc
and
or
sub
adc
jnp
lds
lods
pop
cmp
xchg
push
pop
sti
gs
clc
mov
pusha
loope
test
jl
in
jecxz
push
int
fldt
dec
gs
js
cld
insl
ret
shrl
mov
cmc
mov
loopne
mov
leave
ja
cmp
fimull
out
sti
gs
push
ret
out
ret
mov
pop
dec
scas
push
sbb
es
loop
out
sub
push
pop
cmc
mov
mov
cmp
andb
out
or
cmp
data16
popl
and
int3
dec
jo
jns
jnp
jle
jns
xlat
pop
inc
mov
rorb
mov
push
shlb
and
icebp
pop
jmp
cmpsl
inc
imull
cmpsb
pop
cmp
ja
cmpsb
pop
inc
mov
mov
push
mov
pop
leave
lahf
loop
ja
adc
leave
int
sbb
cmp
cwtl
and
cltd
sub
sub
hlt
dec
push
rolb
xor
ret
jne
in
xchg
pop
es
in
decb
lret
outsb
mov
ljmp
cmc
sbb
popa
cmpsb
push
fcmovnu
gs
push
or
in
mov
cwtl
out
pop
ljmp
push
mov
pop
xorl
push
xor
ja
negb
pop
mov
dec
pop
jbe
shl
adc
popf
add
jo
jecxz
mov
sbb
pop
lock
mov
lahf
xchg
clc
xor
daa
test
xchg
sti
cmp
pop
lock
bound
les
add
mov
daa
push
add
imul
cmp
es
dec
xor
je
loop
int3
jl
mov
mov
sbb
xor
and
shr
lods
ss
mov
aad
mov
mov
es
lcall
sub
cltd
add
xchg
mov
scas
pop
adc
add
inc
mov
je
jle
std
fsub
cmp
jb
fnstcw
punpcklwd
aam
inc
pop
and
test
fisubs
out
push
loopne
adc
or
and
push
enter
cwtl
add
scas
dec
out
sahf
pop
fsubs
les
cli
or
mov
push
loop
pop
cmp
inc
push
push
xor
jg
fcomps
dec
jg
pop
outsb
lcall
mov
cwtl
pop
enter
xor
jnp
out
daa
lret
inc
lock
xor
or
adcb
inc
xor
jmp
mov
test
aaa
adcl
imul
inc
popa
fldcw
das
jno
test
adc
leave
mov
dec
insb
ljmp
loopne
add
mov
sbb
loopne
repz
xchg
and
mov
sub
sarb
adc
daa
dec
icebp
inc
dec
and
leave
and
mov
das
fists
cmpsb
jl
shlb
cmpsb
jl
sbb
in
push
loop
jnp
pop
pop
dec
push
lods
dec
mov
sarl
hlt
add
dec
aam
jnp
data16
xchg
fadds
cld
arpl
cmc
cmp
popa
cmp
and
sub
mov
test
fbld
sbb
dec
andps
jb
xor
jg
mov
dec
test
xor
daa
xlat
fwait
dec
jnp
movsl
cmp
cmp
pushf
mov
repnz
int3
stc
icebp
or
aad
mov
pop
bound
push
add
scas
arpl
adc
cmc
push
fnstcw
mov
fdivrp
push
fnstcw
mov
in
xor
jbe
jmp
call
xor
jge
xor
mov
pop
insb
sub
sub
sbb
pushf
adc
or
sbb
pop
inc
lahf
jae
mov
pop
js
dec
out
dec
mov
scas
pop
popf
and
add
adc
xchg
enter
sbbl
xor
aaa
xlat
jl
in
jnp
jecxz
and
push
jb
repz
test
sbb
inc
mov
sbb
jae
fimuls
dec
repnz
lods
push
ret
mov
test
mov
add
movsb
push
fidivrl
adc
pop
aad
out
into
mov
daa
out
xchg
lods
or
je
jbe
xchg
and
movsl
fcmovb
sbb
stc
pop
fnstenv
mov
hlt
jbe
push
pushf
dec
pushf
lea
xchg
cwtl
and
stos
cmp
jb
lahf
bound
xor
xor
jno
nop
cltd
dec
jns
fidivrs
pop
sbb
dec
test
iret
cmp
xchg
jnp
inc
popa
outsb
xor
adc
cmpsl
push
xor
outsl
int
enter
ljmp
in
data16
in
insl
xchg
jbe
std
arpl
adc
push
inc
mov
or
mov
scas
mov
int
push
mov
dec
sahf
or
jle
jp
mov
outsl
mov
outsl
mov
mov
mov
repz
cmp
stos
and
nop
lods
pop
call
push
push
ja
or
inc
test
jmp
jecxz
fmull
sbb
lock
jne
xchg
cli
mov
icebp
mov
clc
xor
jae
insl
push
mov
pop
jno
mov
xor
inc
lea
dec
outsb
loop
cli
loope
in
inc
fldl
jg
mov
push
mov
xor
stos
dec
out
jns
cmp
mov
dec
movsl
outsl
add
insl
or
inc
dec
push
enter
cmp
cmpsl
insb
clc
test
cmc
stos
sarb
mov
pop
dec
sub
xor
mov
movsb
lret
inc
popa
andb
ret
hlt
mov
loopne
in
dec
mov
arpl
and
cmpsl
or
jle
xchg
sub
lcall
xchg
cld
add
and
jp
in
popf
push
inc
test
and
add
or
pop
mov
inc
aas
out
dec
ds
dec
mov
or
jecxz
ljmp
sbb
push
cli
aas
fisttps
je
mov
xorl
jno
roll
mov
std
jno
dec
sti
ljmp
xchg
and
ja
jle
push
adc
jmp
push
or
testl
and
xchg
fwait
cmp
mov
mov
adc
cmpsl
mov
lret
push
mov
sbb
add
jno
xchg
inc
inc
ss
es
loope
or
jb
lahf
enter
int3
jl
mov
dec
jnp
mov
pusha
mov
stos
mov
outsb
inc
adc
push
idivb
jbe
or
xlat
ficompl
inc
mov
dec
mov
cmovnp
mov
push
add
mov
adc
ficoms
es
mov
sub
pop
adc
mov
std
inc
lret
mull
or
iret
cmp
mov
mov
nop
xchg
inc
lcall
cli
stos
dec
adc
jnp
aas
filds
xor
call
mov
cmc
cmpsl
sahf
mov
cmpsb
aas
lock
insl
stos
sub
out
popf
in
popa
adc
stc
xchg
int3
pop
repnz
clc
pop
popf
push
and
loope
fs
xor
pop
lret
mov
jno
aad
adc
std
add
jnp
into
jle
or
push
sub
movsb
lret
jnp
adc
clc
mov
xor
cmp
xlat
in
out
adc
jne
push
dec
test
jb
loop
lods
pop
or
sarb
push
sarb
push
add
int
sahf
inc
movsb
xchg
adc
mov
mov
push
repnz
jecxz
xchg
in
pushf
or
data16
cmpsl
pop
mov
stc
adc
add
notl
outsb
movsl
fcomi
push
fstpt
mov
fdivr
push
ffreep
fnstsw
lock
ret
mov
and
out
shlb
hlt
push
add
icebp
mov
loop
mov
push
add
mov
cmc
dec
fcom
mov
dec
pushl
lret
push
inc
lods
cmp
xor
js
jl
mov
pop
cmp
push
mov
cs
jb
push
out
enter
sbb
sbb
adcb
mov
add
and
repz
jp
push
xor
xchg
shlb
jnp
push
xor
dec
fisttpll
lahf
or
int
push
xchg
adc
fmuls
leave
xor
stc
fwait
int
leave
and
xchg
std
imul
adc
add
mov
pop
bound
mov
sub
cwtl
mov
test
mov
mov
mov
out
aaa
test
or
js
jmp
gs
sub
lcall
and
xchg
mov
frstor
das
inc
mov
mov
add
cmc
data16
out
ss
xchg
outsl
loop
xor
add
aad
testb
and
xchg
icebp
pop
leave
push
jle
jns
call
sbb
outsl
mov
fsubl
add
cltd
add
xchg
in
xchg
fnstsw
cs
mov
dec
stc
out
stc
mov
es
lea
pop
xor
xchg
rolb
xchg
xchg
xor
and
dec
adc
add
lret
out
int
iret
sub
xchg
mov
pop
jns
lock
jl
loopne
imulb
mov
loope
dec
imul
mov
mov
xor
or
dec
lds
mov
hlt
gs
push
add
mov
jns
inc
sahf
xchg
add
scas
dec
out
sahf
pmuludq
fisttps
arpl
add
or
pop
mov
sub
cmc
test
imul
sbb
pop
pandn
aas
cmovnp
jle
inc
imulb
test
gs
stc
lds
loop
xchg
or
roll
dec
insl
jb
dec
in
lea
jle
js
and
inc
int
es
mov
and
sub
dec
mov
mov
fmuls
jmp
imulb
stos
pop
int3
lret
pushf
or
sbb
xchg
jl
sarb
sub
lret
lods
cmp
adc
lahf
pop
mov
sti
xchg
mov
push
add
jmp
sldt
orb
notl
mov
mov
add
inc
lret
lods
leave
and
xchg
scas
or
jne
xlat
ja
cwtl
sub
push
cltd
xchg
push
enter
leave
inc
imul
pop
jbe
or
sti
add
std
cmpsl
mov
cltd
fimuls
sub
cmp
pop
lods
imul
jae
in
push
outsb
roll
mov
jmp
push
stos
dec
cmp
cli
stos
scas
sbb
inc
cmp
inc
add
rcr
int3
and
inc
test
test
rcl
pop
and
mov
pusha
add
lds
sbb
fsubl
add
inc
jp
mov
dec
clc
mov
lahf
add
dec
push
xchg
sub
xor
xchg
inc
ficoml
mov
lea
and
or
lcall
pop
push
in
aas
idiv
push
fprem
xchg
xor
call
ret
stc
xchg
xchg
jmp
push
in
cmp
scas
dec
mov
push
test
xor
jae
inc
cmp
pop
adc
and
xchg
and
mov
pop
dec
pop
in
cli
mov
test
cmp
lcall
mov
dec
inc
dec
pop
xor
mov
mov
cmpsl
sbb
fdiv
call
int
les
popa
jb
jge
out
pop
dec
mov
fimull
sub
mov
xchg
inc
pusha
mov
xchg
dec
loopne
xor
jl
popf
xlat
sub
jl
pop
ds
or
mov
scas
mov
sbb
cmp
in
and
or
jbe
mov
sub
outsb
cld
and
ljmp
mov
pop
enter
fldcw
ds
rcrb
xchg
xor
pop
inc
xchg
call
cmp
mov
popf
dec
or
addr16
bnd
in
adc
mov
fwait
lods
test
sbb
mov
faddl
jne
mov
or
shrl
fists
adc
jge
pushf
cmp
and
xor
dec
pusha
movsl
add
outsb
int3
cmp
inc
in
push
mov
jo
int3
imul
adc
ljmp
icebp
adc
shlb
inc
sti
movsb
mov
jle
push
mov
add
pop
adc
loope
dec
push
mov
xor
rcrb
pop
mov
and
pushw
mov
sub
divl
mov
add
sbb
cmp
jns
test
add
sbb
inc
shlb
shlb
xchg
filds
addr16
call
int3
mov
jl
popf
test
orl
insb
repz
mov
addr16
ret
xor
cltd
fimuls
jecxz
pop
mov
sbb
flds
push
add
push
shll
movsb
out
pusha
inc
jge
mov
enter
repnz
repz
aam
arpl
test
fadd
and
daa
je
std
xor
jnp
mov
imul
and
cmc
push
je
movsl
dec
lahf
mov
mov
mov
cmp
pop
xor
inc
pop
add
iret
push
pushf
dec
std
inc
pop
loopne
pop
call
andb
jne
movsb
cwtl
mov
jge
push
mov
lods
sbb
dec
out
sahf
sete
filds
cmp
pop
icebp
sub
fcompl
jnp
test
xchg
mov
dec
sub
cwtl
cmp
movsb
push
rcrl
test
jp
aaa
repz
mov
xor
nop
mov
lret
insl
mov
pop
jb
jle
cmp
xor
add
jnp
jmp
mov
push
mov
mov
mov
iret
flds
in
or
xchg
sub
xchg
shlb
das
xchg
dec
jmp
cmp
mov
jno
fmull
inc
push
or
add
insb
and
jecxz
js
dec
aam
jnp
stos
lock
mov
in
sub
aad
cwtl
popf
les
sbb
testb
add
mov
loop
into
dec
or
add
leave
in
iret
mov
sub
xchg
mov
add
bound
out
hlt
stos
and
xchg
scas
or
je
jmp
push
jae
pop
or
or
dec
mov
call
dec
out
sub
push
inc
cmc
ja
nop
add
jge
sbb
cmp
xlat
notb
jns
mov
dec
pop
aaa
add
mov
cmpsb
mov
add
sarb
inc
mov
and
adc
add
inc
icebp
js
xchg
mov
scas
jno
jns
sbb
imul
pop
xor
or
sub
imul
pop
push
mov
mull
xor
and
pop
inc
lahf
or
mov
inc
dec
fdivrl
int
add
fwait
sahf
ds
xchg
mov
xorb
lcall
mov
push
int3
repz
clc
push
jl
jno
call
cs
jle
out
cmpb
mov
insb
mov
and
les
xchg
imul
xor
inc
out
fwait
jl
fistpll
adc
pop
ret
nop
add
cmp
je
fsubrl
jg
push
dec
pop
jno
cvtdq2ps
es
or
mov
adc
je
mov
xor
lahf
dec
shr
jnp
cld
push
orb
add
ds
jl
pop
ds
mov
and
sahf
add
mov
mov
pop
cmp
mov
rcr
ret
cs
mov
rcrb
mov
inc
leave
scas
sbb
add
sbb
dec
lret
ja
test
stos
cli
or
mov
fnstcw
xchg
mulb
inc
lea
jne
inc
test
push
call
aaa
xchg
add
ret
loopne
aad
push
sub
std
cmpsb
movsl
inc
push
sbb
jmp
loope
push
adcb
es
in
dec
shll
hlt
pop
clc
mov
movsl
jnp
in
cmp
inc
pusha
fdivr
push
sub
push
xor
add
push
sub
dec
mov
stos
and
adc
stos
push
add
push
sti
sahf
sbbl
cmpsl
shlb
jmp
sbb
xchg
lahf
add
outsb
leave
inc
aaa
xlat
inc
sub
into
stos
mov
cmp
aas
inc
sbb
jmp
adc
arpl
je
stos
iret
notb
inc
and
pop
in
jp
xchg
inc
xlat
mov
lods
push
fimuls
sub
inc
insl
loop
fwait
pop
mov
orl
sahf
and
xor
add
push
fstpt
mov
clc
xor
ficoms
cli
push
adc
sbb
dec
fs
sub
adc
pop
xchg
rcrb
test
outsb
mov
add
je
mov
jle
lods
or
ljmp
xchg
int3
sarl
jg
jo
sti
in
pusha
repnz
xor
xor
dec
sar
sbb
call
mull
fadds
stc
push
mov
or
xor
lcall
sbb
xchg
enter
jmp
jecxz
xor
outsb
push
xor
fcoms
jb
fidivrs
ss
mov
add
or
add
lret
mov
cmc
gs
and
xor
das
jne
mov
cld
inc
scas
in
push
lods
shlb
pushf
sub
dec
ret
mov
jg
pop
xchg
mov
pop
test
in
pop
cmpsl
dec
add
cmp
cmp
leave
dec
cmp
cmp
sahf
bound
sbb
dec
jecxz
fcoms
jecxz
outsl
sub
pop
popf
inc
lods
inc
subl
and
stos
stc
fwait
and
ret
mov
popf
or
cli
call
in
icebp
cmp
sub
jns
outsb
mov
pop
xlat
add
xor
xor
push
fdivrs
cwtl
sbb
push
faddp
fdivl
std
mov
xor
xchg
aam
shlb
push
mov
xchg
sbb
mov
add
adc
cmp
or
push
fdivs
outsl
mov
add
xor
xchg
add
fimull
and
jns
pop
inc
sahf
xchg
or
pusha
movsl
inc
ljmp
mov
lods
int
bound
cwtl
jne
mov
and
roll
or
arpl
pop
dec
push
cmpsl
in
push
fs
jmp
fwait
and
add
xor
xor
es
inc
insl
repz
mov
enter
sahf
xor
cmp
pop
sahf
sarl
pop
cmpsl
sub
inc
stos
and
pusha
adc
mov
pop
mov
fdivrs
ror
adc
and
push
dec
test
jp
jge
sbb
sti
fwait
add
sbbl
lcall
mov
sbb
mov
outsl
add
dec
es
sbb
xchg
mov
mov
sti
fwait
out
add
add
sub
dec
cs
movsl
insb
adc
mov
rcrl
pop
mov
imul
push
push
hlt
movsb
adc
and
gs
in
sbb
ljmp
jp
dec
jb
sahf
sub
adc
push
mov
call
test
add
stc
outsl
mov
addr16
push
incl
test
outsb
fiaddl
pop
rcll
andb
jbe
shll
mov
jb
jo
inc
sub
xchg
repz
lret
es
xchg
out
pop
jmp
pop
jae
outsb
mov
mov
sub
push
or
pop
pop
pop
sbb
xor
push
shlb
shll
jge
in
scas
sbb
loopne
stos
cmp
mov
mov
mov
mov
mov
sbb
and
push
cmp
ret
cmp
insl
aas
lahf
insb
sub
cltd
mov
aad
out
into
or
sbb
cmp
cmc
xchg
lcall
cld
lods
cmp
stos
add
inc
mov
and
jbe
fwait
xlat
mulb
cmpsl
sbb
popa
or
hlt
pop
jge
mov
jecxz
repz
in
bswap
pop
das
xor
mov
adc
pop
cld
pop
ljmp
inc
iret
mov
jnp
pop
aas
popf
or
mov
movsl
mov
fldenv
dec
mov
mov
push
loope
addl
stos
out
xchg
push
jno
icebp
scas
imul
sbb
mov
xlat
xor
mov
sub
inc
jno
dec
cmpsl
adc
inc
movsb
adc
test
jge
dec
movsl
inc
mov
lahf
nop
push
jb
sbb
popa
in
mov
ja
pop
aas
jmp
cmp
sahf
movsl
inc
and
push
das
cltd
add
imul
cmp
aaa
mov
popf
lods
psubq
sbb
mov
or
xor
jl
popa
lret
outsl
xchg
pop
mov
mov
andb
ljmp
arpl
mov
xor
daa
test
lret
or
sbb
sub
leave
ds
mov
xor
repz
outsb
ja
pop
je
cli
pop
sub
pop
cmpsl
cmp
push
adc
lds
mov
arpl
push
jns
in
stos
out
sti
gs
rcll
mov
bound
int3
dec
jmp
push
repnz
aaa
pop
mov
les
imul
fbstp
cmp
popf
dec
lahf
push
xchg
and
enter
mov
fistps
scas
sbb
in
mov
lret
adc
std
rorl
push
lcall
or
pop
jg
pop
jl
mov
lcall
gs
loop
decl
mov
mov
sub
loopne
fidivrs
lahf
pop
scas
shrl
mov
fcom
lods
jge
jns
test
push
fcomi
insb
mov
std
jns
sbb
enter
pop
xchg
inc
cld
jno
inc
stos
adc
arpl
pusha
mov
lods
cmp
shrb
fistpll
int3
mov
fwait
cltd
add
inc
xchg
mov
int
pop
lods
xor
stc
push
mov
int3
out
cmp
pop
out
test
lahf
xchg
pop
or
mov
daa
jge
inc
mull
jo
mov
arpl
xlat
out
push
pusha
shl
data16
push
fcmovnu
movl
bound
imul
test
jge
mov
sbb
push
fsubrp
ljmp
push
pop
arpl
xlat
mov
into
pop
jp
insb
mov
icebp
mov
loop
cmpl
jnp
mov
sbb
or
loope
paddusw
lods
imul
add
js
call
pop
shrl
push
xor
in
fdivr
scas
leave
int
add
xor
leave
xor
daa
enter
jne
pop
cmp
push
xchg
mov
mov
clc
test
mov
jecxz
in
in
or
insl
push
dec
cmp
lahf
or
inc
in
jg
push
add
sbb
sarl
int
sldt
add
inc
rcrb
mov
push
loop
jnp,pn
call
imul
xor
adc
jl
xor
ffreep
pop
jp
out
mov
push
jmp
pop
pop
cmp
and
or
add
add
add
and
pop
mov
addl
inc
push
ret
jae
aam
push
add
mov
mov
jae
movswl
movl
jmp
sub
push
stc
xor
movl
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
pop
pushf
jg
dec
jae
lea
fwait
or
xchg
xor
mov
push
call
mov
jmp
repz
xor
cmpsl
pop
mov
insl
push
in
mov
jmp
mov
not
xlat
loope
push
xchg
xor
cli
fsubl
jmp
aas
xor
stos
inc
xchg
push
bound
repz
daa
jnp
mov
mov
test
int3
ret
dec
ja
nop
jmp
lahf
push
dec
push
xchg
add
cmc
dec
arpl
fmull
pushf
push
rcrb
pop
rcrb
mov
rcrb
mov
rcrb
mov
rcrb
pop
rcrb
pop
shll
mov
sbb
mov
in
adc
push
sbb
mov
in
adc
cmp
es
in
adc
loop
es
in
adc
dec
sbb
mov
in
adc
sbb
mov
in
adc
repnz
mov
in
adc
stos
sbb
mov
in
adc
push
push
ds
ficoms
sub
es
in
adc
out
es
in
adc
scas
sbb
mov
in
std
lcall
jo
lcall
mov
push
jbe
sbb
mov
rclb
es
add
xchg
xor
pop
push
pop
mov
shlb
pop
pop
mov
dec
xchg
dec
push
xchg
jl
pop
pop
xchg
mov
loop
es
rorl
sbb
push
jae
ror
cmp
push
pop
lods
ds
jmp
js
into
pushf
mov
rcr
imul
jge
cmp
sub
hlt
pop
push
adc
mov
cmc
jp
aaa
ds
iret
imul
pop
out
pushf
pop
cmc
pop
push
adc
mov
ds
iret
imul
popa
push
jl
cs
pop
loope
aas
pop
fldcw
or
xor
into
cld
cltd
pop
rcrb
sbb
cs
cltd
fldcw
sbb
push
mov
xchg
pop
jne
punpcklwd
jl
pop
maxps
adc
sub
hlt
cmp
cmc
std
loope
xlat
dec
pusha
adc
pop
pusha
jp
ficompl
mov
rcrb
in
pop
es
pop
loope
cltd
pop
pusha
mov
rcrb
mov
pop
push
pop
insl
xchg
punpcklwd
jl
pop
maxps
adc
sub
hlt
cmp
cmc
std
loope
xlat
dec
pusha
adc
pop
pusha
jp
ficompl
mov
pop
loope
cltd
pop
pusha
mov
rcrb
insl
movsb
scas
jno
pop
inc
ficomps
into
arpl
pushf
mov
mov
mov
push
rcrb
lahf
popf
xchg
pop
aad
cli
pop
jne
nop
cmp
into
std
cmp
into
push
jae
ror
cmp
push
pop
lods
ds
jmp
js
into
pushf
mov
shlb
inc
lahf
mov
in
add
mov
pop
rcrb
inc
rcrb
pop
leave
insl
ss
sbb
out
push
aaa
lahf
jl
jno
std
loope
xlat
dec
pusha
adc
pop
pusha
jp
ficompl
mov
pop
loope
cltd
pop
pusha
mov
rcrb
push
push
push
inc
aam
ss
iret
imul
popa
push
jl
cmp
push
je
std
loope
xlat
dec
pusha
adc
pop
pusha
jp
ficompl
mov
pop
loope
cltd
pop
pusha
mov
rcrb
mov
ficoms
adc
adcb
push
cmp
ss
jp
mov
push
pop
loope
aas
pop
fldcw
or
xor
into
cld
cmp
ficoml
cs
cltd
fldcw
bnd
inc
push
out
pop
mov
popf
jl
cmp
cli
imul
xchg
fsubl
ficoms
mulb
daa
pop
popf
fstl
xchg
cmp
ficomps
mov
jle
mov
filds
pop
mov
iret
imul
pop
out
push
pop
cmc
pop
pop
pop
jne
nop
cmp
into
std
cmp
into
push
jae
ror
cmp
push
pop
lods
ds
jmp
js
into
pushf
mov
shlb
pop
mov
ficoms
jns
add
pop
shrl
in
arpl
jge
jb
std
loope
xlat
dec
pusha
adc
pop
pusha
jp
ficompl
mov
pop
loope
cltd
pop
pusha
mov
rcrb
cmc
pop
push
adc
cmp
lahf
cmp
pop
bnd
cs
pop
loope
aas
pop
fldcw
or
xor
into
cld
cmp
ficoml
cs
cltd
fldcw
cmp
adc
and
sub
hlt
sbb
pop
shrl
in
arpl
jge
cs
pop
loope
aas
pop
fldcw
or
xor
into
cld
cltd
pop
rcrb
adc
nop
js
into
pushf
mov
rclb
es
pop
loope
repnz
scas
rcr
pushf
mov
push
mov
ficoml
mov
push
hlt
rcr
pushf
mov
push
sub
mov
push
int3
rcr
pushf
mov
push
rcr
pushf
mov
mov
arpl
push
shr
mov
in
iret
les
fisubrl
rorl
sbb
jne
pop
rcrb
push
pop
push
aaa
sbb
mul
fisubs
xlat
pop
pusha
lcall
nop
mov
ficoml
dec
int3
pop
es
sbb
lods
mov
pushf
mov
shr
mov
les
imul
dec
adc
es
mov
sar
cmp
into
push
jae
shlb
cmc
outsb
rcrb
xchg
lds
fistpll
scas
xchg
cltd
jge
or
sub
sbb
cmc
add
xchg
pop
sbb
pop
rcrb
inc
mov
pushf
mov
mov
or
or
in
push
js
add
pop
mov
xor
pop
loop
dec
scas
cltd
push
rcrb
cmp
popa
addl
inc
dec
or
shrl
jbe
jne
pop
rcrb
inc
loopne
jp
in
dec
or
popf
mov
shlb
pop
mov
adc
dec
sbb
or
pop
sarb
negl
adc
sbb
jne
pop
rcrb
push
sub
add
or
pop
rclb
mov
loop
mov
sub
mov
push
xchg
cmp
inc
imul
mov
sbb
dec
out
js
cli
xor
shll
push
adc
add
dec
loopne
cmp
aad
call
fmuls
ret
ja
push
and
fucomp
scas
call
adc
mov
xor
iret
ss
xor
lock
push
sbb
das
dec
lret
inc
testl
rcl
aam
xor
push
jle
xor
scas
js
mov
xchg
sub
push
leave
adc
addl
jbe
push
push
mov
jb
rcl
or
mov
adc
ja
and
icebp
jbe
mov
cmp
sub
xchg
lret
sub
lods
imul
out
sbb
test
add
dec
dec
or
sarl
cmp
xor
scas
call
mov
leave
stc
xchg
scas
sub
xor
nop
mov
lahf
cli
add
insb
dec
scas
mov
inc
xchg
adc
push
data16
push
push
dec
push
push
ss
lcall
arpl
mov
test
or
fwait
inc
rcrb
gs
cmp
xor
aaa
cmpsb
add
outsb
cmpsb
push
mov
mov
push
ss
cmp
ret
int3
cmpsb
add
dec
movsl
push
mov
mov
push
ss
cmp
inc
mov
les
push
sub
ss
cmp
push
sbb
mov
mov
jge
or
fwait
inc
rcrb
gs
cmp
add
out
sub
push
inc
sub
ss
cmp
inc
and
gs
mov
jle
or
fwait
inc
rcrb
gs
cmp
movsb
pop
cmpxchg
mov
jle
or
fwait
inc
rcrb
gs
cmp
iret
arpl
mov
push
sub
inc
rcrb
gs
cmp
lods
pusha
mov
jge
or
fwait
inc
rcrb
gs
cmp
xor
stos
mov
push
out
mov
push
ss
cmp
out
fdivs
mov
push
daa
sub
ss
cmp
xor
lret
mov
jno
or
fwait
inc
rcrb
gs
cmp
jg
pop
shll
push
sub
inc
rcrb
gs
cmp
repz
sbb
jb
or
fwait
inc
rcrb
gs
cmp
pusha
or
mov
push
out
mov
push
ss
cmp
inc
mov
icebp
jb
or
fwait
inc
rcrb
gs
cmp
loope
imul
jae
or
fwait
inc
rcrb
gs
cmp
sub
rorl
push
sub
ss
cmp
rorl
loope
push
mov
ja
or
fwait
inc
rcrb
gs
cmp
sub
stc
mov
push
cmpsl
sub
ss
cmp
mov
push
mov
subb
sub
ss
cmp
sti
nop/reserved
push
sub
ss
cmp
inc
addr16
mov
push
sub
inc
rcrb
gs
cmp
push
repz
cmp
mov
push
mov
cmp
sub
ss
cmp
jge
clc
jae
push
mov
ja
or
fwait
inc
rcrb
gs
cmp
stos
inc
repz
ja
or
fwait
inc
rcrb
gs
cmp
push
repz
cmp
pop
cmp
mov
push
sub
inc
rcrb
gs
cmp
call
push
mov
jno
or
fwait
inc
rcrb
gs
cmp
inc
and
mov
push
out
mov
push
ss
cmp
push
repz
cmp
push
sti
pushf
pop
mov
outsl
or
fwait
inc
rcrb
gs
cmp
gs
add
or
fwait
inc
rcrb
gs
cmp
icebp
xor
pop
lods
push
mov
test
out
mov
push
ss
cmp
dec
fsubl
cmp
or
fwait
inc
rcrb
gs
cmp
push
repz
cmp
push
sti
outsl
lods
push
mov
xchg
outsl
or
fwait
inc
rcrb
gs
cmp
mov
push
sbb
stos
outsl
or
fwait
inc
rcrb
gs
cmp
enter
lods
push
mov
stos
outsl
or
fwait
inc
rcrb
gs
cmp
xchg
lods
push
mov
xchg
outsl
or
fwait
inc
rcrb
gs
cmp
out
jnp
js
push
mov
stos
outsl
or
fwait
inc
rcrb
gs
cmp
fwait
stos
aas
xchg
lods
push
mov
xchg
outsl
or
fwait
inc
rcrb
gs
cmp
jmp
push
mov
xchg
outsl
or
fwait
inc
rcrb
gs
cmp
mov
inc
lods
push
mov
xchg
outsl
or
fwait
inc
rcrb
gs
cmp
xor
push
mov
xchg
outsl
or
fwait
inc
rcrb
gs
cmp
pop
jmp
cmc
lods
push
mov
test
mov
push
ss
cmp
pop
mov
mov
test
mov
push
ss
cmp
fistps
pop
lahf
lods
add
outsb
push
sbb
sub
ss
cmp
fsubs
test
mov
push
ss
cmp
push
repz
cmp
push
int
ss
int
ss
push
inc
xor
adc
push
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ss
int
ficoms
repnz
add
jnp
push
xor
inc
int
ss
add
push
xor
push
cmp
sbb
inc
int
ss
int
ss
int
ss
int
xor
push
ss
int
ss
int
ss
int
ss
int
ss
lds
inc
sub
fadd
mov
push
int
gs
fadd
mov
push
int
cmp
fadd
mov
push
int
fistl
lds
push
int
lcall
add
push
int
sub
lds
push
int
push
fadd
mov
push
int
push
push
fadd
mov
push
int
jnp
fadd
mov
push
int
scas
push
fadd
mov
push
int
mov
lds
push
int
jnp
fadd
mov
push
int
mov
inc
add
push
int
sbb
fadd
mov
push
int
call
lds
push
int
mov
fadd
mov
push
int
jg
fadd
mov
push
int
push
push
fadd
mov
push
ret
mov
mov
push
ret
mov
mov
push
shl
pushf
imul
int
ss
push
push
lret
mov
dec
push
or
inc
int
or
outsl
int
ss
mov
lds
faddl
sbb
sahf
hlt
add
je
cmpsl
push
adc
icebp
dec
lea
add
push
pop
mov
inc
int
aaa
mov
sahf
shl
orb
fsts
pop
xor
push
aaa
mov
sahf
shl
orb
add
inc
clc
inc
sahf
fldl
sbb
mov
or
cli
shll
inc
int
test
mov
mov
push
ss
mov
test
inc
xchg
push
add
push
in
add
jmp
jb
add
push
add
push
mov
mov
das
in
addr16
add
repnz
adc
ss
push
sub
push
or
in
fldl
xorb
mov
push
ss
jge
inc
int
sub
jbe
mov
pop
scas
push
ss
lret
xorb
jbe
add
ret
inc
das
adc
push
add
xchg
adc
in
fldl
xorb
shl
jno
dec
or
out
adc
sbb
das
xchg
sub
popa
xor
cs
cli
or
inc
int
or
push
fwait
outsl
and
inc
mov
sti
fwait
outsl
loop
ss
jnp
pop
sarb
fldcw
ret
push
outsl
or
ss
jnp
push
ss
outsl
sub
pop
outsb
sub
inc
int
outsl
lcall
dec
jbe
cmpsb
mov
push
cwtl
cmpsb
inc
ds
shrb
int
cmpsb
and
loopne
dec
int
ss
xchg
pop
add
push
int
inc
push
fadd
inc
std
sub
dec
lahf
push
fadd
add
jns
inc
int
add
sub
xchg
ret
push
ss
or
ss
mov
loopne
ja
das
add
cli
jge
inc
sarb
outsl
adc
inc
mov
sub
pop
cli
and
sub
jo
inc
int
mov
outsl
ror
outsl
repnz
inc
in
xor
or
sub
inc
inc
aad
sbb
sahf
hlt
sbb
fadd
push
jbe
inc
int3
cmp
into
inc
int
ficomps
sub
push
iret
push
ss
mov
ss
mov
rolb
sbb
sahf
hlt
sbb
fadd
inc
jbe
inc
int3
cmp
fwait
push
int
repz
push
ss
shl
jno
dec
inc
and
mov
dec
lahf
inc
into
sub
and
jmp
push
ss
add
add
ds
or
sbb
push
mov
pop
sub
push
aaa
inc
int
ret
jns
and
les
dec
sub
inc
xchg
push
add
push
sahf
fnsave
dec
add
jle
addr16
inc
rcrb
lret
icebp
ret
mov
inc
int
aaa
mov
sahf
cli
lret
dec
inc
cmp
test
inc
xchg
pop
add
push
fwait
icebp
dec
pushf
pop
xor
sbb
sub
pop
test
inc
rcrb
add
xor
test
outsl
jmp
ss
ja
repz
lret
jge
imul
int
ss
push
mov
sahf
push
fadd
inc
adc
dec
inc
int
scas
dec
int
ss
xchg
pop
add
push
pop
mov
dec
pushf
pop
inc
adc
stos
dec
ror
jno
dec
mov
enter
inc
les
jbe
insb
mov
repnz
lcall
inc
enter
dec
inc
adc
dec
hlt
and
ss
ror
jno
dec
mov
rcll
inc
int
ds
xor
incl
push
ss
add
push
ss
add
push
ss
add
push
ss
add
sbb
inc
lcall
or
push
cmpsl
push
pop
pop
mov
loope
xchg
rolb
mov
shll
hlt
inc
int
ss
int
ss
int
mov
inc
int
or
cld
lcall
push
fadd
lret
test
push
popa
sar
push
add
sahf
jne
ret
jp
push
jp
add
inc
fsts
push
ss
push
inc
adc
nop
test
enter
inc
hlt
and
ss
fidivrl
dec
and
mov
inc
int
pushf
lock
test
push
ret
dec
inc
xchg
cmp
fadd
sbb
inc
cmc
shl
lahf
fidivrl
dec
scas
push
int
ss
inc
hlt
and
popf
fistpll
jno
dec
aaa
add
push
ss
fiaddl
shrl
ret
mov
fdivrl
inc
int
subl
loopne
ss
jno
inc
shlb
inc
sbb
push
int
mov
and
mov
inc
int
js
or
ss
int
ss
int
ss
pop
xchg
xor
inc
pop
sbb
imul
jae
lds
test
imul
mov
fadd
pop
out
rolb
js
sbb
imul
int
fld
pop
adc
test
push
imul
mov
outsl
xchg
aas
mov
lret
xor
fstpl
jp
add
mov
ss
push
cmp
or
test
push
cmc
xchg
dec
lock
dec
bound
mov
jo
and
mov
jmp
and
rcll
cmp
xor
xchg
xor
xor
ret
pop
mov
mov
cltd
in
mov
es
inc
lods
idivb
fcom
aam
xchg
sahf
push
inc
fiaddl
js
sub
mov
imul
fsubl
dec
push
add
int3
pop
mov
push
aaa
add
xor
sahf
rcr
add
pop
add
pop
cmp
fs
repz
out
inc
sti
scas
or
inc
stos
jo
adc
stos
divl
ror
test
pop
pop
icebp
pop
mov
stos
arpl
das
xlat
lea
inc
dec
mov
adc
subl
icebp
xor
in
push
data16
sbb
cmp
mov
out
popa
les
mov
test
outsl
cmp
mov
sub
test
out
inc
sti
cs
or
mov
scas
cmp
mov
or
cmp
xor
mov
pop
adc
sbb
push
call
insb
pop
int3
jge
cmp
test
int
pop
mov
call
into
mov
jecxz
xor
sbb
lcall
and
idivb
xchg
mov
nop
rclb
aad
push
cmp
pop
sahf
xor
mov
xor
and
mov
push
je
cmp
iret
mov
mov
sti
mov
cmp
or
xchg
xor
push
jno
push
add
jecxz
inc
jno
sub
and
icebp
test
outsb
inc
mov
mov
sub
js
insb
push
rcll
xchg
popa
rorb
icebp
mov
idiv
inc
movsb
jo
cmpsb
jp
ret
sar
push
adc
lds
fs
and
pop
mov
xchg
xchg
adc
adc
sbb
sti
fldcw
movsb
xchg
sub
xor
rorb
cmp
imul
inc
mov
xchg
mov
cwtl
mov
sub
jb
inc
repnz
mov
or
mov
push
outsl
stc
sub
fwait
divl
repz
clc
loope
arpl
push
daa
push
test
addl
icebp
cltd
je
mov
into
cmp
jno
xor
hlt
xchg
and
fstpt
mov
jp
push
mov
fsub
xchg
inc
mov
pop
and
inc
mov
bnd
pop
aad
mov
addb
pop
cli
add
adc
cmp
lahf
idivb
das
hlt
push
fldl
daa
add
xor
jae
sub
scas
pop
add
out
in
insb
jnp
incb
out
fildll
inc
ljmp
mov
sbb
repnz
sub
sub
sahf
pop
pop
adc
xor
add
lahf
inc
jp
jmp
data16
outsb
rcll
rcrl
mov
xor
adc
bnd
lods
faddl
xorb
fwait
stos
jnp
cmp
mov
or
jne
lcall
cmp
xor
fdivrs
cwtl
outsb
stc
outsb
aam
sub
dec
repnz
xchg
aaa
inc
testb
sub
sub
xorl
popa
nop
xchg
lods
icebp
fs
jno
fisubrs
pushf
cmovl
bound
push
sti
sub
data16
das
aad
push
sub
xchg
mov
jecxz
or
mov
xchg
lahf
xchg
ret
mov
pop
sub
jmp
mov
lods
loop
xchg
cmp
and
sub
shll
scas
cmp
mov
fimuls
mov
loope
add
cltd
popa
cmp
inc
test
and
js
adc
adc
or
xor
mov
popa
test
std
lret
sbb
cmp
inc
loopne
mov
loop
adc
sbb
cs
hlt
das
leave
in
add
ret
push
push
cmp
adc
jbe
inc
or
pushf
jmp
call
inc
dec
and
inc
inc
pop
inc
lret
aas
sub
mov
lods
lahf
or
lock
aas
outsl
subl
xor
idivb
insl
xor
jae
ss
out
lds
scas
cmp
stos
mov
enter
fs
ss
stc
ljmp
xor
mov
negb
cmpsl
stos
push
dec
pop
adc
jns
sub
data16
and
push
mov
adc
jnp
stos
add
pop
jo
adc
leave
add
jp
icebp
int3
sbb
daa
fsubrl
cmpsb
dec
fwait
es
stos
andl
ret
xor
xchg
push
int
mov
and
fstpl
fwait
mov
push
adc
pop
cmc
sub
jae
jle
pop
inc
jns
inc
daa
add
xchg
jnp
jp
add
xor
sbb
test
stos
orb
mov
stos
jge
cmp
xchg
and
cmp
scas
xor
repz
sub
dec
lret
and
jmp
out
xlat
add
leave
int3
imul
lds
push
xchg
pop
sysexit
outsb
or
add
fsubrs
sahf
je
fisubs
xor
mov
lcall
loopne
xor
push
call
jno
xor
and
push
adc
fdivrs
aas
cs
mov
loopne
jno
dec
mov
ds
dec
inc
cmpl
mov
es
cltd
mov
pusha
jmp
daa
cwtl
adc
fyl2x
mov
cmpsb
sahf
fnstsw
or
mov
and
fisubs
jmp
stos
push
je
adc
fldcw
jo
push
repz
or
mov
or
push
xor
jge
shll
ljmp
aam
mov
mov
jmp
aam
scas
fcomps
decl
jmp
xor
test
incl
aas
shl
int
or
mov
movsl
jecxz
add
sub
sbb
xchg
je
mov
xlat
xchg
cmpsl
popa
xchg
dec
pop
sbb
jg
xchg
or
fsubrl
cmp
xchg
xchg
subl
fisttps
out
cmp
sbb
push
aad
adc
push
ds
push
ja
mov
xchg
lods
out
rorb
pop
out
and
adc
mov
roll
popa
cmp
ds
sub
cwtl
rolb
push
sub
bound
pop
bound
in
out
jle
mov
fadd
or
pop
sub
imul
mov
inc
push
rcrl
imul
js
sub
push
mov
xchg
dec
inc
adc
out
sub
fidivs
fisubrs
jle
rorl
pop
sub
mov
ds
aad
jns
ja
sti
mov
ss
inc
shll
pop
pop
sbb
jg
adc
adc
push
mov
dec
fcompl
shll
mov
xor
cmpsb
add
push
call
ljmp
add
shlb
movsl
mov
mov
push
mov
push
xor
jp
in
lods
sarb
and
aad
aad
je
add
xor
push
jo
insl
sbb
lds
iret
jmp
ljmp
sbb
jo
fdivp
fldpi
in
rsm
mov
cmp
out
add
les
xchg
popa
outsb
and
dec
pop
inc
mul
call
add
add
sbb
std
push
cmp
xor
cwtl
xchg
test
and
sbb
sub
mov
push
inc
lds
sti
bound
mov
icebp
lret
sub
or
outsb
sahf
mov
mov
jle
add
jae
hlt
mov
mov
push
cmpsb
xchg
clc
jmp
jb
and
std
je
dec
popa
sbb
imull
pop
loop
xchg
notb
cwtl
jae
xchg
lds
pop
adc
add
sub
setg
inc
dec
xchg
mov
stc
cmp
push
fildll
insl
nop
cmp
cs
gs
cmp
or
mov
xchg
and
lret
push
and
jae
aam
loopne
push
push
sub
loop
jge
insb
mov
pop
mov
lea
jno
dec
daa
in
inc
ret
andl
jno
js
inc
mov
jmp
xchg
pcmpeqd
sbbl
adc
mov
lock
inc
dec
out
add
mov
xor
push
aam
imul
ds
pop
push
push
push
stos
jp
pushf
xorl
push
dec
fistps
sbb
idivb
mov
je
int3
xchg
lea
mov
jg,pn
movsl
scas
inc
pop
bswap
sub
push
lahf
mov
add
jnp
and
mov
inc
clc
jb
mov
mov
push
xor
pop
movsb
mov
cli
in
xchg
dec
ja
push
dec
mov
or
dec
pop
sub
out
mov
pop
push
sub
or
mov
out
cwtl
or
and
push
sahf
mov
jp
adc
and
out
add
pop
mov
sbb
outsb
movsb
mov
or
pop
fbstp
movsb
mov
lock
ds
and
jle
in
sub
add
aad
pop
mov
mov
pop
mov
test
int3
push
insb
in
repz
unpcklps
sbb
sub
movsl
lret
mov
daa
or
push
lret
lret
push
mov
or
add
int
sub
jbe
adc
pop
mov
cmpb
shll
xchg
add
xchg
mov
add
xchg
mov
arpl
imul
roll
inc
sub
pop
mov
adc
cmpsb
sbbl
dec
out
popa
mov
addr16
mov
dec
push
lahf
daa
movsl
adc
mov
ror
dec
adc
inc
mov
lret
inc
imul
xchg
sbb
lods
fisttpl
popa
test
in
adc
xchg
push
or
mov
dec
cli
cmp
adc
lret
push
mov
loope
out
mov
jno
cmpsb
fcmovnb
or
sub
hlt
test
movsl
movsb
mov
cmp
or
xchg
scas
nop
mov
arpl
daa
add
outsb
mull
in
dec
mov
es
or
icebp
js
dec
sub
push
stos
mov
pop
mov
hlt
mov
popf
push
jbe
jae
hlt
sti
lret
cli
dec
mov
out
stc
cmpsb
popa
imul
sub
pop
add
lahf
in
pop
xchg
xchg
xchg
fildll
icebp
jns
push
adc
ljmp
stos
mov
je
cmp
pusha
push
aad
cmp
cltd
leave
mov
push
jb
leave
popa
mov
repz
jge
xchg
cs
mov
sbb
sbb
mov
cmp
pop
shr
mov
ljmp
loop
and
add
aad
xchg
bound
movsb
loop
push
mov
ret
jmp
outsl
fnstcw
addb
fwait
mov
adc
push
int3
decl
lahf
mov
movl
sahf
sbb
daa
cltd
adc
test
xor
jo
xor
in
dec
or
sub
out
cli
cltd
fnstenv
sbb
cmpb
lahf
and
inc
scas
sbb
arpl
pop
xchg
adc
sbb
mov
push
and
aas
adc
pop
icebp
jmp
dec
sbb
mov
into
sub
jp
movsb
push
lea
pop
daa
and
adcb
sub
or
jecxz
inc
mov
hlt
and
adc
xlat
std
dec
mov
test
mov
clc
pop
mov
xchg
sbb
hlt
pop
pop
pop
and
jbe
sub
pop
jp
fcoms
cmp
jns
dec
hlt
loope
popa
pop
add
lods
cli
fdivs
add
in
sub
xor
push
and
dec
cmp
test
inc
imul
xchg
and
dec
cwtl
jae
xchg
mov
sahf
push
roll
std
dec
xor
sub
popf
lock
jbe
cmpsl
jp
cmp
bound
mov
shll
aaa
setno
out
nop
sbb
fildl
out
mov
iret
sbb
fdivs
xor
pop
scas
lret
xorb
mov
cmp
push
dec
enter
sub
sbb
stc
leave
aam
pop
daa
in
add
in
mov
cmp
xor
lock
add
mov
sbb
in
orl
cli
sub
lds
loop
repnz
mov
ret
pop
mov
pop
inc
std
loop
ss
iret
mov
fsubrl
subps
pushf
push
adc
pop
js
test
sub
xlat
pushf
jmp
and
lods
push
push
and
sbb
lods
imul
shrl
idiv
pop
sbb
jg
dec
stos
sbb
xchg
shll
pusha
mov
mov
jl
or
dec
addr16
pop
arpl
cmpsl
mov
jae
rcll
pop
xor
call
arpl
imul
stos
add
movhpd
addb
and
pop
test
push
and
inc
pand
sub
pusha
adc
fisubl
movsb
xchg
stos
repz
or
nop
add
push
inc
and
push
inc
fildl
mov
lods
out
cmp
push
sbb
ss
data16
pusha
mov
cli
jo
sub
pop
and
repz
aaa
or
xlat
notl
test
add
xor
mov
dec
cmc
sub
dec
mov
test
xor
xchg
add
sbb
push
xor
jl
cmp
xchg
scas
sbb
or
call
aaa
xchg
sbb
jp
adc
or
cmc
jecxz
stos
mov
mov
add
pop
je
sub
pop
add
shll
push
push
insb
jne
push
xchg
aas
aam
fsts
bound
push
std
xor
cmpsl
jnp
bound
sub
pop
je
mov
fwait
mov
into
gs
sub
sbb
sbb
xchg
xchg
stos
aad
xchg
jecxz
jns
fimuls
mov
xor
push
cmpsl
xchg
adc
popf
lods
pop
leave
jns
gs
cmp
sbb
inc
pusha
loop
or
imul
shlb
add
xor
mov
mov
arpl
fsts
pop
cmp
insl
fs
int
loop
jbe
iret
out
lret
jge
dec
out
sub
test
pushf
inc
mov
push
pop
adc
inc
jne
mov
sar
ss
iret
add
jae
outsl
dec
incl
lods
sbb
rcll
in
mov
push
in
rolb
iret
iret
mov
daa
ficoms
xor
or
lcall
ficompl
push
testb
loop
lea
daa
or
dec
pop
and
push
sahf
mov
adc
jg
xchg
js
dec
lds
js
stos
sub
out
dec
pop
dec
nop
cmp
fwait
loop
push
or
into
test
loopne
mov
fidivrl
or
sub
dec
fildl
mov
out
pop
out
leave
lds
fcoml
data16
push
negb
jl
jnp
xchg
dec
nop
add
scas
andb
insb
aas
xlat
fcmovne
int
sub
pop
imul
pop
pushf
int
dec
and
fcoms
into
cmp
cwtl
xchg
jmp
push
aad
push
clc
jge
push
xchg
lods
push
fnstcw
es
mov
into
push
jae
test
inc
je
jne
into
push
shrl
mov
loop
mov
fisubrl
repz
dec
cli
popf
lock
or
out
sbb
dec
dec
xchg
in
repnz
vminpd
movsb
jns
mov
pop
icebp
mov
lret
ret
push
mov
cs
loop
mov
imul
mov
jb
dec
int
jp
fldt
or
push
daa
call
adc
inc
cld
jecxz
add
push
jns
fcmovb
mov
sub
jmp
repnz
dec
jl
pop
push
sbb
cwtl
lcall
cmp
xchg
mov
out
cmc
jno
adc
cld
and
adc
or
inc
cmp
jmp
fstpl
shl
add
xor
stc
or
push
cld
or
rorl
cmp
add
adc
loope
mov
mov
dec
jg
or
popa
and
out
inc
imul
mov
adc
sbb
pop
andl
add
lods
inc
scas
in
add
lods
jg
jb
popa
mov
lea
cli
std
bound
dec
jnp
insb
je
push
or
xchg
stos
mov
pop
sbb
in
cmp
ffree
mov
push
test
jns
jp
shlb
pop
dec
repz
fs
negb
je
insl
jecxz
pop
rcrb
xchg
icebp
mov
cmp
addl
or
xchg
mov
mov
add
outsl
cs
idiv
mov
cmpsb
adc
mov
and
icebp
rcl
cmp
lret
push
push
mov
push
mov
xor
adc
dec
inc
push
adc
xor
lock
and
sub
mov
in
mov
mov
pop
hlt
shll
ds
jo
shll
mov
or
add
arpl
push
shll
scas
push
test
cltd
bound
stos
xchg
mov
ljmp
lcall
jmp
and
jo
xor
fcmovu
add
jecxz
nop
jle
rcll
push
cmp
adc
pop
shl
les
mov
push
js
stos
out
test
lcall
mov
and
inc
ljmp
mov
sub
int3
mov
pop
mov
sub
push
stos
dec
jb
jns
jle
cmc
repnz
cwtl
psubq
mov
pop
sub
inc
cltd
mov
stos
fwait
ret
pop
xor
nop
adc
mov
mov
jo
movsl
es
push
or
cmpsl
push
pop
xchg
stos
scas
cmp
fdivs
xor
jl
lods
enter
orl
repz
xchg
mov
sbb
int3
lret
movsl
mov
shll
test
fmull
fsubrl
push
push
push
cltd
pop
and
cmpsb
mov
mov
mov
pop
push
xorl
mov
sahf
adc
inc
fdivr
mov
mov
cmp
sub
pop
pop
and
mov
lods
pop
xchg
cmp
insb
pop
inc
fsubrs
sbb
adc
add
sub
leave
inc
hlt
call
into
mov
jecxz
mov
sbb
mov
out
addr16
shl
mov
repnz
or
data16
pop
pop
pop
mov
pusha
fnop
std
jns
jo
jge
pop
mov
sbb
adc
outsb
xor
or
push
jae
cs
dec
or
out
loopne
repnz
dec
cmp
repz
bound
not
cmp
es
pushf
jle
int
out
outsb
or
data16
adc
popa
movsl
cli
inc
jle
lret
ja
push
les
iret
jp
je
sarb
and
cmp
jb
push
inc
cltd
aaa
sub
loopne
adc
xor
lock
jg
iret
adc
pop
cltd
mov
lret
sahf
cld
test
jmp
ja
je
xor
jmp
jo
pop
cmp
sahf
cmp
dec
js
push
ds
add
leave
adc
pop
sub
add
cmp
sub
push
xchg
shrl
add
jmp
into
dec
fisubrl
mov
jns
scas
lods
inc
imul
xor
lahf
bound
mov
ja
aaa
popa
mov
aam
fnsave
imul
mov
cmp
mov
push
mulb
sbb
sub
loope
cmp
sbb
cmp
cmp
scas
mov
adc
jnp
addr16
rcrl
and
subl
sbbl
adc
dec
pusha
mov
fistl
lods
in
aad
loope
mov
jmp
dec
push
jnp
cwtl
cmp
pop
cmp
push
leave
jge
cmp
scas
jns
fwait
iret
ret
jne
push
call
cmp
test
dec
push
dec
or
adc
into
cmp
imul
and
mov
adc
xchg
adc
leave
pusha
xor
stc
int
mov
mov
fxch
mov
rolb
ret
mov
push
cmp
mov
xchg
pop
sbb
and
xor
ss
jb
shrl
push
mov
xchg
sub
mov
jnp
in
inc
gs
and
dec
addr16
xor
xor
es
stc
lcall
loop
add
stc
gs
mov
repz
sub
pop
xor
mov
jmp
rorb
jae
int3
mov
jae
call
jae
mov
and
jo
push
icebp
in
pop
mov
jo
nop
cmp
loop
std
push
add
cli
cld
mov
lds
inc
jnp
dec
loop
adc
pop
mov
out
or
mov
jns
rorb
inc
cltd
jmp
xor
in
lods
pandn
xchg
xor
in
lods
rcrl
clc
orl
insl
mov
pop
stos
jae
push
out
repnz
sub
hlt
mov
jns
xchg
inc
int
jae
sbb
pop
inc
xor
hlt
mov
dec
push
mov
sbb
push
fwait
addl
xor
es
shrb
je
mov
stc
push
sarb
cmpsb
cmp
mov
xchg
mov
out
xor
sbb
inc
int
sub
repnz
movsb
add
int
mov
xchg
mov
sbb
loop
inc
sbbl
inc
mov
nop
cmp
or
or
sbb
mov
cli
xor
pop
cmp
add
xorl
xor
push
mov
push
or
das
jle
sahf
rcrb
jns
or
iret
sub
xor
ss
adc
fiadds
insl
cltd
popa
pop
ljmp
stos
cli
sbb
xchg
stc
test
stc
xchg
pop
ret
and
clc
lds
lret
loopne
sub
mov
inc
aas
mov
movsb
js
iret
adc
jmp
stc
jle
mov
cld
xorl
pop
xchg
mov
fdivs
sarl
jnp
mov
leave
not
popa
mov
aas
and
in
jnp
xor
dec
testb
cwtl
mov
jl
out
inc
cmp
arpl
sbb
mov
xchg
stc
shrl
xlat
fwait
stc
jg
cmp
push
cs
push
pop
fsts
dec
sbb
jl
lcall
xor
jle
inc
stc
pop
mov
mov
xor
and
mov
ja
inc
sub
adc
jge
shll
bound
fistl
pop
test
sub
pop
stos
mov
mov
dec
xlat
addl
jns
imul
call
dec
sahf
ret
pusha
mov
aaa
add
fdivs
jle
pop
inc
pop
mov
inc
push
or
test
sbb
test
cmpsl
loopne
cmp
xchg
mov
xor
aas
and
bnd
arpl
sbb
loopne
push
cli
push
ds
mov
inc
loopne
mov
lea
clc
in
popf
sub
arpl
pop
idivl
xchg
inc
push
rorb
sbb
lret
out
jnp
xchg
pop
jns
call
fsts
sbb
imul
jl
inc
rcll
lock
adc
xchg
sbbl
enter
adcl
fldl
into
andl
shll
jl
adc
test
jno
jbe
sbb
add
dec
mov
inc
out
test
shrb
jae
adc
jb
cltd
sarb
int
outsl
dec
inc
or
test
in
fnstcw
dec
pop
lahf
data16
mov
adc
mov
sub
decb
jne
cmc
pop
int
cmp
or
jns
frstor
jle
pop
enter
mov
test
or
dec
mov
add
push
mov
pop
ficoms
push
jmp
mov
sub
dec
xchg
scas
test
ret
or
lcall
xor
mov
leave
ds
in
shl
aam
and
mov
std
push
loop
xor
sub
jns
enter
sti
mov
add
iret
scas
xchg
xor
pop
roll
push
or
sbb
cmpsl
pop
xor
push
pop
stos
mov
jno
les
int3
push
popf
xchg
iret
int3
lock
imul
sbb
dec
push
ret
inc
arpl
lock
std
js
outsl
sti
enter
fadds
xchg
sbb
sub
dec
dec
js
movsl
dec
jns
out
xor
inc
insl
ja
mov
insb
mov
ds
addl
iret
pop
adc
in
jmp
push
sti
adc
sbb
mov
jge
bound
sbb
jae
in
cwtl
frstor
cmp
in
xor
adc
or
xchg
cltd
and
push
or
lods
jb
mov
push
or
fdivs
aad
dec
fs
mov
pop
push
cmpsl
faddl
stos
fld
lret
mov
stos
mov
das
outsb
mov
push
jnp
nop
sub
sbb
ds
outsw
imul
push
cmpsb
mov
loop
push
shlb
outsl
cld
or
pop
push
push
aam
rorb
mov
push
lock
les
mov
cmp
mov
or
mov
jle
popf
fidivrs
mov
mov
jnp
in
es
push
inc
fucomip
std
push
mov
je
inc
push
or
adc
scas
push
sub
lret
int3
mov
dec
mov
imul
cmovns
loope
sub
lods
add
cmp
adc
mov
push
subl
push
pop
push
inc
mov
xor
pop
cmp
je
pop
int3
sub
das
cmc
adc
incb
lcall
xchg
or
std
push
xlat
add
or
mov
jae
test
out
mov
out
shrb
mov
adc
dec
rorb
push
mov
pop
mov
mov
jbe
les
daa
add
lock
push
fcoml
inc
aam
mov
jmp
push
adc
mov
fucomp
jb,pt
mov
lock
mov
jne
and
addb
or
sbb
adc
xchg
push
and
fistl
jnp,pt
data16
lods
out
xchg
cs
dec
sahf
sbbl
sbb
dec
add
or
sub
pop
into
sbb
aam
pop
and
out
repnz
xchg
add
fstps
mov
subl
insb
mov
mov
lods
out
lods
dec
pop
sbb
xor
adc
inc
sbb
add
pop
rolb
dec
mov
dec
push
cmp
or
clc
jns
push
sbb
popf
fisttps
xchg
mov
scas
dec
xchg
mov
push
cld
push
xor
mov
dec
xlat
and
cmpsb
jnp
mov
lret
or
mov
test
mov
add
mov
sbb
fistpl
inc
jno
add
dec
test
pop
mov
mull
and
lcall
in
js
inc
cwtl
lcall
jo
decl
add
cmp
sbb
popl
ss
jecxz
cwtl
xchg
adc
bound
mov
pop
push
into
cs
xor
cmpsb
scas
stos
daa
xchg
fstp
test
inc
sub
mov
pushf
xchg
mov
jg
and
xchg
iret
stc
xor
pop
incb
mov
cmp
mov
inc
adc
xchg
lret
pop
sbb
fiaddl
lods
mov
xchg
test
punpcklbw
stc
nop
flds
sub
loope
stc
mov
add
mov
loop
popf
out
push
out
cmp
sub
aas
into
xor
push
cmp
xchg
push
ret
mov
cmpsl
pop
mov
add
xchg
jnp
into
xchg
fs
imull
adc
mov
fiadds
lret
push
mov
pop
outsb
sbb
bound
inc
cmp
and
jg
and
outsb
inc
repnz
scas
inc
insl
cwtl
mov
adc
sub
dec
pop
push
push
push
dec
loope
xor
int3
sti
dec
mov
add
mov
mov
xchg
mov
xchg
push
leave
push
xchg
jne
gs
call
cmp
inc
add
sub
xor
loopne
push
int
xchg
insl
cwtl
adc
push
xchg
lret
adc
repnz
mov
mov
es
js
call
adc
xchg
stos
popa
cmp
ds
and
loop
lds
popf
mov
ficompl
cmp
inc
pop
mov
hlt
pop
addr16
mov
ret
xor
and
mov
adc
fadd
mov
push
jp
jmp
sahf
lcall
mov
seta
jns
fsubr
or
fmul
addr16
sbb
sarl
mov
sub
sbb
lds
push
pop
rcll
and
sub
pop
in
pmullw
mov
mov
xchg
or
pop
xchg
in
insb
push
sub
mov
in
add
push
pop
movl
lret
inc
hlt
iret
fisttpl
mov
mov
mov
arpl
push
ss
xlat
xchg
dec
push
mov
loope
pop
xor
repz
clc
jo
mov
push
jns
and
add
sub
ljmp
jg
xor
lea
xchg
inc
std
pop
cwtl
not
adc
cmp
sbb
push
dec
mov
mov
sbb
popf
xor
cltd
add
adc
std
enter
cld
in
inc
push
or
cmc
enter
bound
ss
mov
ficoms
xor
cmc
popf
aad
insl
test
stos
inc
shrb
xchg
lea
jmp
mov
cwtl
lret
aaa
jno
dec
sahf
outsl
sbb
sti
and
call
sbb
push
call
insb
pop
lret
cli
lock
pop
ljmp
push
pop
and
pop
mov
movsl
xor
jg
test
pushf
mov
mov
sarl
pop
cmp
dec
push
mov
inc
pop
call
pop
lods
xchg
dec
std
mov
jne
ss
outsl
mov
jp
mov
xor
sbb
loop
sbb
lret
addb
cmpsl
jae
mov
sub
cmp
stos
pop
mov
jecxz
rcrl
movsb
andl
imul
int3
cmp
sub
int3
sbb
loop
push
cmc
sbb
pop
pop
sub
mov
push
sbb
fcmovnbe
aad
mov
dec
jb
call
addr16
dec
dec
ss
push
hlt
dec
mov
mov
aad
fwait
leave
in
xsavec
insl
xor
xchg
push
daa
mov
lods
es
xchg
mov
pushf
push
and
xchg
jmp
lcall
adc
push
or
cmp
cltd
pop
jbe
pop
dec
pusha
cltd
idivb
jae
loope
lea
pop
mov
sub
out
addb
pop
loopne
flds
and
jmp
stos
scas
test
cwtl
ret
and
shrl
fdivrl
dec
call
ficoml
pop
xor
imul
loopne
movsl
insl
dec
test
imul
push
add
pop
mov
push
push
hlt
aam
rcr
insb
rorb
push
mov
xchg
mov
mov
dec
jmp
pop
popa
rorb
clc
adc
lret
jo
out
cmp
cmc
mov
cltd
inc
incl
lcall
xchg
sbb
mov
dec
movb
ret
jle
and
adc
shrl
mov
or
mov
into
inc
cld
or
mov
xor
sbb
inc
test
insb
cmpb
xchg
mov
add
jl
mov
sub
inc
cmp
mov
das
push
push
lods
push
mov
movsb
sub
outsb
scas
loop
jbe
jbe
notl
orb
cltd
shl
rcrb
adc
rolb
fidivs
dec
gs
dec
in
mov
inc
dec
cli
addr16
cld
adc
mov
push
dec
add
dec
fbstp
mov
addb
iret
popa
inc
inc
lahf
test
add
jp
mov
pop
fdivl
xchg
mov
mov
sbb
lock
push
mov
cli
popf
hlt
jp
sbbb
popa
add
push
mov
xorl
push
and
iret
ret
loop
hlt
mov
inc
int
inc
dec
or
test
js
les
test
or
xchg
mov
popf
movsl
xorl
aaa
pop
ret
push
mov
xor
emms
arpl
leave
in
fisttpll
or
imul
push
jnp
push
mov
and
sbbl
add
cmp
add
test
push
push
dec
xchg
inc
push
cwtl
cmpsl
out
sbb
or
test
iret
insb
mov
lret
pop
mov
jl
mov
pop
lahf
inc
iret
and
outsl
ljmp
push
or
push
rorb
push
or
std
push
cmpsl
pop
push
enter
jecxz
fisttpll
pop
fs
sahf
inc
inc
pop
int3
fs
and
std
ljmp
xchg
xchg
pop
pop
dec
out
mov
pop
inc
insb
aas
stc
lods
fwait
mov
or
and
mov
add
ret
inc
lret
mov
pop
into
mov
movsb
jl
mov
lock
sbb
sbb
or
mov
or
fmull
xor
dec
imul
inc
mov
xor
andb
lea
ret
sub
lock
jnp
test
movsb
mov
repnz
pop
mov
mov
cmp
mov
mov
bsr
and
stc
or
xor
jbe
sub
mov
xor
rcll
jb
sbb
data16
mov
aas
add
stos
ret
jns
ljmp
cmpsb
mov
das
leave
rcll
subl
loopne
rclb
and
pop
mov
inc
cmp
mov
out
sub
jge
popa
lods
inc
push
aaa
inc
and
iret
mov
dec
xor
inc
and
and
sbb
fisubl
es
mov
ja
push
mov
xchg
pushf
jle
mov
lret
test
dec
dec
or
incl
jge
stos
sbbb
dec
mov
fnstsw
rclb
push
leave
rcrl
and
jbe
pusha
and
jmp
out
inc
jg
enter
icebp
mov
jmp
fsubrl
inc
and
push
inc
lds
int
pop
iret
pop
mov
call
inc
push
push
les
xchg
jl
popa
xchg
sti
mov
push
dec
or
xor
cmp
inc
aam
and
mov
sub
dec
dec
adc
add
cwtl
lods
aas
mov
stos
ret
insl
mov
xlat
les
mov
test
xchg
insb
pop
mov
inc
and
mov
es
fcomip
in
loope
xor
loopne
jb
aad
loop
fucomi
and
inc
xchg
push
bound
jecxz
jbe
xchg
xor
adc
mov
sbb
repnz
sbb
jae
jbe
inc
and
sub
movsb
mov
out
add
dec
lock
scas
shrl
fcmovne
fsin
int3
cld
fisubrs
jmp
mov
or
xchg
adc
stos
lods
jmp
iret
clc
sbb
xor
fdivr
cmp
mov
jecxz
adc
loopne
mov
push
repnz
inc
jecxz
xor
lds
dec
xchg
gs
xchg
add
sahf
cmp
pop
fcmovb
xchg
adc
fisttps
mov
popf
outsb
ss
mov
jge
mov
out
mov
sub
pop
adc
add
pop
mov
xchg
xchg
inc
push
lret
jge
and
mov
arpl
icebp
hlt
push
xor
push
jae
jecxz
lahf
lahf
or
loop
lods
inc
dec
jg
fcompl
mov
jno
adc
inc
mov
imul
sbb
cli
add
fildll
xlat
sbb
pop
push
push
sub
pop
adc
in
xlat
push
mov
push
andb
loop
in
xchg
cltd
sbb
sbb
jmp
js
jae
incb
les
repz
push
testl
pop
mov
cwtl
ss
cmp
dec
leave
fiadds
lods
push
test
cmp
xor
jmp
lret
xor
jo
clc
das
or
dec
mov
pop
in
mov
jno
aam
cld
mov
cli
dec
xchg
js
fnsave
iret
mov
daa
mov
stos
dec
aam
outsb
pop
hlt
and
add
mov
fs
push
stos
push
xchg
popa
adc
bnd
push
into
cmc
sub
ss
pop
fwait
jnp
adc
cltd
xchg
xchg
adc
sub
scas
inc
jmp
popa
out
mov
dec
insb
pusha
push
jb
xchg
orl
adc
push
outsl
push
jo
insl
pusha
inc
mov
in
sti
xor
push
lret
out
insl
jb
dec
aaa
adc
mov
mov
or
jmp
adc
add
in
enter
mov
ss
mov
fidivs
dec
inc
out
sub
push
jns
sub
push
xlat
punpcklwd
and
arpl
pop
mov
cwtl
push
stc
les
je
jp
loop
jecxz
outsl
outsb
pop
mov
mov
xor
adc
adc
xor
jb
in
dec
push
mov
xorl
mov
jle
and
fdivp
xchg
test
fmull
lret
movsb
lret
fcoms
dec
jo
jle
adc
mov
pusha
push
xor
mov
adc
jne
jmp
lahf
cmp
call
add
les
push
movsb
fstps
out
test
stos
add
mov
out
xchg
cmp
cmpsb
arpl
ljmp
sti
push
lret
xchg
xchg
xor
lea
pop
xchg
loop
jp
sub
int
orl
incl
cltd
fimull
pop
push
push
mov
inc
test
add
inc
sub
push
and
pop
sub
adc
sbb
or
push
pop
int3
xchg
mov
dec
mov
or
pop
xchg
scas
je
sub
ret
sub
and
mov
push
and
js
xchg
arpl
lock
in
cmpsb
jle
sub
mov
cmpb
popf
xchg
xor
adc
insb
push
push
aaa
push
ret
push
push
dec
mov
mov
cmp
fmull
cs
or
mov
cwtl
push
outsl
xchg
mov
xchg
add
mov
push
scas
mov
sbb
add
out
push
push
adc
daa
push
xor
push
mov
pusha
add
or
jmp
sahf
ret
adc
js
test
movsl
push
mov
int
cmc
push
div
xor
mov
stos
std
inc
or
clc
cwtl
sahf
or
inc
xchg
push
imull
ljmp
jmp
adc
mov
cltd
jp
arpl
in
mov
and
out
andl
clc
mov
adcb
jne
and
leave
pop
ffree
inc
in
ss
mov
lods
cmpsb
out
xchg
lds
repz
mov
sbb
notl
mov
dec
and
sub
inc
xchg
outsb
sbb
popf
mov
xchg
jns
inc
ja
pop
mov
pop
mov
in
mov
mov
aam
jge
xchg
enter
xchg
and
cs
in
adc
dec
inc
inc
jmp
sarl
inc
xor
test
xchg
adc
adc
jge
iret
ljmp
push
repnz
lea
adc
in
push
inc
flds
lods
ja
pop
sub
movsb
test
mov
fdivl
cmp
lahf
and
dec
cmp
lcall
mov
xor
scas
dec
ds
sub
sbb
add
cmp
in
push
dec
push
icebp
dec
int3
insl
gs
mov
loopne
mov
dec
xor
sbb
jo
cmpl
mov
call
dec
sub
in
insl
test
outsb
loop
into
scas
jp
fsts
mov
pop
and
loope
jge
jge
movsb
jmp
in
dec
fildll
dec
je
popf
push
jae
cs
xor
push
mov
nop
push
add
pop
lcall
sbb
insl
mov
arpl
mov
or
in
lock
inc
je
pop
mov
std
loop
mov
nop
outsb
shll
pop
mov
rcrb
out
ret
imul
stos
sub
mov
add
dec
dec
aaa
ror
rcrb
push
imul
mov
or
mov
bound
arpl
sti
mov
lret
jecxz
add
jecxz
dec
xorl
xchg
cmc
mov
test
cltd
mov
ja
cltd
adc
sub
xor
popa
imul
jbe
sub
outsl
or
rcrb
fmul
xchg
xchg
fnstsw
fldl
out
sarb
or
daa
ficoms
cmp
dec
lea
pusha
push
xor
jns
push
jmp
rol
sahf
iret
int
mov
loopne
repnz
stos
fmul
cs
add
pop
mov
jb
loop
in
repnz
or
ret
xchg
dec
jo
add
negl
lcall
pop
cs
mov
push
cmp
scas
test
inc
call
cmpsb
xchg
iret
out
xchg
in
push
out
out
daa
ljmp
or
inc
add
mov
faddl
cmc
in
ds
int
popf
cltd
adc
ret
pop
sbb
fnsave
imul
loopne
dec
mov
movsl
push
mov
jne
das
iret
jp
aad
sbb
loopne
fildll
mov
cmpsb
mov
ss
cmp
pop
and
fnop
and
mov
sbbb
sub
mov
lahf
jecxz
hlt
mov
enter
leave
cmp
mov
adc
push
lret
jnp
xchg
gs
mov
and
sbb
lods
jp
push
push
sub
mov
add
outsl
sbb
jo
and
mov
cli
roll
fmulp
clc
jno
test
jno
cld
cmp
mov
adc
cli
enter
enter
pop
ja
outsl
dec
addr16
cmp
jle
call
jmp
adc
jg
push
shll
xor
inc
xor
and
lods
mov
mov
loop
xchg
ret
xchg
mov
in
xchg
or
dec
outsb
fs
jle
mov
mov
icebp
sbb
lahf
iret
xchg
pop
push
ss
push
jns
or
inc
cld
jecxz
add
fbld
fstpt
sub
jp
xor
sub
inc
push
sbb
push
mov
arpl
repz
repnz
mov
jecxz
push
mov
push
pop
pop
xor
cmpsl
out
data16
bnd
dec
sbb
ret
mov
mov
sahf
insb
sub
mov
adc
nop
cs
jp
imul
mov
xchg
push
pop
insl
mov
in
jnp
pop
std
xor
xor
mov
imul
std
cmp
pushl
es
sub
pushf
add
nop
adc
adc
xor
rcll
push
pop
pusha
es
cmp
pop
shll
mov
imul
xchg
push
or
test
push
jg
jns
std
sub
cmpsb
mov
jmp
test
aam
sti
fistps
sti
and
cmp
adc
jbe
test
sub
and
pop
dec
stos
jge
push
mov
add
ret
shr
mov
arpl
jle
pushf
or
aaa
lock
sar
in
fistpl
add
mov
push
loope
jmp
jmp
push
pusha
xor
lock
xorl
xchg
into
mov
sbb
scas
int
push
jg
inc
sub
mov
cmp
cmp
lods
mov
push
adc
push
ret
xchg
testl
lods
arpl
cltd
mov
negb
sub
lahf
xor
int3
xchg
movsb
ja
mov
int3
cmpsb
push
scas
sbb
pop
cmpsb
sub
lea
inc
fs
lods
pop
test
scas
mov
jo
insb
xor
mov
mov
daa
mov
dec
mov
fdivrl
outsb
scas
outsb
adc
and
mov
arpl
or
cltd
lds
dec
insb
push
aas
fisubrs
adc
repnz
call
jo
jl
pop
xchg
cmc
inc
xlat
cmpsb
leave
pusha
iret
ficomps
and
fwait
xor
mov
jecxz
inc
jge
sahf
clc
out
add
xchg
dec
add
imul
mov
inc
sub
xlat
and
filds
sub
mov
sti
outsl
scas
push
cmp
adc
mov
xchg
cmc
xor
into
jbe
shrl
cmovo
lods
out
jg
ficoml
sbb
mov
pop
and
ret
cmp
xchg
lcall
int
add
fsubr
and
lahf
and
hlt
mov
test
push
and
imul
aam
mov
in
sbb
add
mov
inc
andl
mov
sahf
push
loope
jmp
fstl
add
cs
setne
inc
lcall
add
jae
or
gs
movsl
out
push
xlat
shrb
popf
test
test
jge
sahf
inc
rcrl
xchg
inc
stos
pop
ret
fidivrl
mov
test
int3
lret
sahf
jo
ud0
stos
bound
lret
iret
aam
pop
dec
pop
xor
es
add
add
dec
pop
mov
dec
pop
cs
faddl
iret
pop
mov
adc
pushf
push
xor
add
test
lods
xchg
frstor
notb
sub
xor
gs
popl
scas
outsb
xchg
and
stos
pushf
aas
sub
lea
addr16
mov
pop
dec
xchg
sbb
out
scas
and
and
lret
fcom
xchg
fimuls
dec
pop
and
cmpsb
dec
call
mov
shlb
gs
adc
imul
jg
or
sbb
and
sbbb
dec
loope
push
sbb
lcall
movl
stos
js
enter
jle
imul
and
xchg
xchg
lret
or
in
and
add
jmp
scas
ficoml
mov
xchg
cmp
insl
adc
stc
xor
push
cli
out
xor
pop
test
sti
mov
or
adc
daa
xchg
repnz
mov
jmp
test
mov
sub
popf
arpl
jecxz
and
lds
and
push
dec
or
mov
xchg
xchg
inc
jno
mov
mull
add
adc
sbb
sub
and
in
in
pop
lods
inc
inc
push
xor
dec
and
loope
mov
cmp
pause
mov
or
lcall
sub
sub
add
adc
imul
dec
daa
and
sub
addr16
in
flds
push
cld
loope
je
cmpsb
stos
lods
adc
sub
cmpl
or
jge
xchg
sarb
shl
mov
mov
out
bound
out
mov
rcl
decl
repz
les
ds
xor
ret
sub
dec
pop
aam
push
repz
popa
jb
je
jns
test
insl
ds
test
sub
iret
test
outsl
mov
xchg
mov
movsl
mov
shlb
dec
mov
push
out
stos
mov
xchg
mov
xor
mov
loope
enter
inc
mov
js
inc
movsb
push
popa
inc
sti
imull
lock
cli
shlb
out
mov
sub
or
add
push
inc
lret
jp
out
pop
dec
pop
leave
lahf
mov
adc
xchg
leave
fisubs
add
sti
inc
push
aaa
loop
mov
and
inc
or
add
mov
cltd
outsl
sbb
mov
pop
out
pop
mov
xlat
inc
lret
inc
shr
xor
filds
icebp
adc
gs
stos
enter
push
adc
jne
jns
mov
xor
testb
add
js,pn
sbb
xor
xchg
outsl
adc
adc
hlt
jmp
or
outsb
into
repnz
pop
sub
cwtl
jle
add
sub
cmp
mov
imul
xchg
into
and
xor
push
js
mov
das
pop
loop
repz
sarl
dec
sub
mov
mov
out
stos
andl
clc
stos
jmp
xchg
incl
cmpsb
popa
push
xchg
xor
sbb
sbb
adc
push
pop
push
sub
pop
sub
adc
fnstenv
sbb
or
stc
and
mov
cmc
cmp
cmp
pop
push
sahf
mov
pushf
repz
sti
xor
mov
addb
lds
ja
xor
cmp
adc
add
dec
bound
adc
cld
cmp
fwait
or
stc
outsl
push
pop
mov
mov
ficomps
lods
pop
cmc
mov
dec
sbb
mov
jle
xchg
push
adc
cmpsl
pop
or
cmc
cmp
flds
adc
adc
enter
sbb
add
inc
mov
jg
es
das
mov
fstl
lods
loop
inc
bound
or
shll
insb
nop
push
es
sahf
lods
mov
sub
sub
movsl
push
fwait
hlt
or
test
fsubr
stos
stc
adc
inc
pop
pop
fiadds
je
push
ss
ret
fistpl
xchg
dec
jae
pop
pushf
sbb
test
inc
int
outsb
out
in
aaa
add
sbb
addr16
add
or
sbb
pop
xchg
xchg
out
stos
pop
arpl
jge
idivl
mov
repz
sub
push
ret
cmp
iret
xchg
das
pop
movsl
shl
data16
sbb
ja
test
mov
sbb
cmpb
add
enter
push
xor
cmp
and
insb
inc
daa
adc
dec
jo
sbbb
movb
arpl
lahf
inc
hlt
pop
imul
push
push
cmp
mov
cli
out
pop
cmp
stos
fildll
pop
jp
loope
int3
in
data16
pop
lods
repz
push
hlt
icebp
add
repnz
lcall
jns
fcoml
mov
mov
inc
mov
sub
std
xor
xorl
xor
jae
dec
mov
xchg
xor
inc
xchg
cltd
out
xchg
cmpsb
cmc
inc
sub
and
mov
sahf
xor
xchg
mov
pop
dec
and
pop
push
push
jge
and
xchg
xchg
stos
push
lea
pop
popa
jbe
stc
ret
mov
loopne
adc
sbb
mov
fildl
pop
adc
js
adc
inc
insl
cmp
or
inc
add
mov
xlat
jg
cld
pop
dec
addr16
negl
mov
rclb
adc
insb
cld
cmp
icebp
lret
pop
jl
mov
leave
in
push
push
invd
sub
sub
out
xor
sbbl
scas
les
test
shll
dec
int3
out
jg
add
or
mov
xchg
xor
or
or
aaa
xor
addb
ret
out
and
jmp
rcrb
push
ss
sub
mov
fstpt
cmp
push
cmpsl
mov
mov
jnp
cmp
fisubrl
mov
in
push
mov
ret
out
clc
mov
cmp
ret
ret
je
subb
fisttpll
mov
fstl
aaa
insb
lea
jge
std
stos
lret
iret
mov
mov
mov
add
clc
xor
cs
dec
push
out
sub
sti
lcall
nop
cmp
jne
dec
aaa
mov
dec
push
inc
mov
lahf
or
push
cld
mov
movsb
ja
dec
data16
loopne
jecxz
shll
cmp
inc
mov
jo
mov
push
out
leave
push
test
ja
jg
stos
mov
pop
pop
inc
cmp
lock
cld
jnp
mov
push
sbb
ss
xor
mov
dec
fcomps
xchg
enter
les
and
out
fsubrp
sub
ljmp
inc
nop
cmc
lret
pop
dec
add
cltd
mov
out
ret
mul
jmp
stos
stos
lret
or
call
lret
adc
cmp
jae
fwait
dec
xsha256
cmpsb
xchg
cmc
xor
push
ficompl
pop
aam
xor
dec
rcrl
dec
cmp
loop
jl
les
jae
addb
leave
test
iret
pop
fiaddl
lods
mov
adc
dec
cmc
lods
jg
es
ja
push
sub
mov
cmp
movsb
jae
loope
sbb
pop
cltd
fistl
and
and
push
and
pop
push
popa
sahf
cld
adc
aad
mov
mov
or
fs
lods
out
push
pop
cs
pop
xchg
repz
test
aaa
pop
sahf
insb
ljmp
push
decb
enter
inc
xor
adc
sahf
dec
mov
shrb
adc
push
xchg
sub
jne
dec
xor
sub
mov
mov
jp
popa
mov
aaa
mov
mov
push
stc
mov
lcall
cmp
adc
mov
push
decb
jmp
push
xchg
test
sbb
hlt
ds
pop
ss
jg
fmuls
lods
aad
cld
je
fstl
or
fisubrs
imulb
cmpsb
xchg
mov
jne
jnp
lds
loopne
and
clc
or
in
test
shlb
into
mov
push
mov
movsl
subb
mov
test
fs
aas
and
icebp
sbb
inc
dec
nop
insb
add
or
leave
dec
addr16
push
stc
pushf
js
pop
xchg
cmpsl
orl
daa
mov
leave
push
jg
inc
and
push
icebp
inc
popl
and
mov
jo
inc
test
push
cmp
mov
xchg
mov
mov
inc
pusha
fcompl
out
fwait
add
ret
rorb
out
mov
inc
sbb
sub
pop
int
lahf
push
cmp
pop
xchg
loop
jge
xor
jnp
add
popa
cli
cmp
xor
cmp
hlt
insl
dec
imul
in
mov
fsub
add
leave
bound
fdivrs
fbld
mov
push
push
jg
dec
pop
outsl
mov
clc
adc
arpl
or
cmpb
bswap
mov
or
shrl
jecxz
stc
ds
into
jp
scas
movb
dec
jbe
dec
movsb
mov
add
popa
leave
dec
out
add
jp
aas
push
sbbl
sub
xor
rolb
sbb
adc
pop
xchg
cmp
ficomps
addr16
push
ret
lret
xchg
idivl
rcrb
bnd
rcr
push
jecxz
mov
xchg
mov
jo
popa
lods
inc
pusha
dec
xor
movsl
dec
sbb
dec
xor
mov
sub
lret
stos
dec
fimuls
stc
arpl
xorl
sahf
pop
jne
inc
jns
popa
mov
adc
fnstsw
loop
cmp
xchg
xor
mov
push
cmpsb
pop
aaa
cmp
in
sub
shll
shrb
adc
sub
xchg
mov
popa
sbb
cli
cmp
fxam
scas
add
insb
mov
jecxz
les
pop
cmp
cmc
jge
sub
xor
pop
add
mov
mov
xor
mov
shr
outsb
std
sarl
addr16
mov
fistpll
or
rcrb
popf
or
outsl
fdivrl
or
dec
mov
mov
clc
xor
mov
in
fucom
jg
mov
insl
adc
sbb
push
add
pop
out
or
out
mov
in
subl
inc
movsl
dec
xchg
push
jg
clc
xchg
add
sub
sbb
pop
movsl
sahf
push
mov
leave
mov
sub
lcall
pusha
mov
out
cmc
cmp
jnp
push
imul
dec
mov
fstpt
jle
fldl
call
shl
or
je
push
imul
inc
movsl
inc
jbe
add
daa
mov
mov
push
out
repnz
rolb
dec
imul
jg
rcl
pop
cmp
mov
fisttpl
loope
inc
mov
inc
cli
dec
pop
pop
cs
sahf
adc
and
movsb
lods
cmp
and
cmp
inc
or
aas
push
lock
mov
imul
jmp
dec
ja
insl
cltd
cmp
aaa
enter
dec
in
push
inc
pop
adc
sub
inc
ss
js
loope
jnp
mov
jp
aam
in
push
mov
faddp
mov
rclb
std
scas
and
pop
loop
aas
stos
leave
sub
jb
popf
jae
adc
inc
bound
sbb
sub
push
jg
loop
mov
inc
in
mov
jbe
mov
enter
notb
mov
and
imul
xor
jg
sbb
mov
dec
add
mov
cmp
outsb
repnz
xchg
sub
lods
sahf
addr16
aam
xlat
call
call
cmp
mov
or
cs
repnz
clc
out
test
jo
movsl
daa
cld
scas
mov
sub
stc
push
add
pushf
aaa
dec
pusha
bound
icebp
sub
addr16
js
subl
mov
inc
lock
mov
add
inc
nop
dec
cmpsb
out
fwait
xor
addr16
mov
mov
inc
sbb
dec
insl
imulb
xor
jp
and
add
and
adc
push
jp
movsb
cmpsb
mov
sbb
sub
mov
pop
hlt
in
orb
adc
sti
sub
mov
cmp
nop
cltd
lahf
push
xchg
inc
and
and
leave
ss
push
sbb
mov
jle
and
sahf
repz
mov
sbb
and
and
push
or
sub
mov
cli
test
sbb
test
cs
std
push
stos
adcl
call
jl
adc
mov
pop
cltd
jg
aaa
and
popa
push
pop
push
or
imul
hlt
js
jl
in
fcomps
bound
imul
incl
shll
jno
cli
add
mov
mov
shrb
fcomip
adc
push
mov
scas
xchg
add
stos
mov
std
mov
pop
aam
push
push
roll
hlt
loope
and
mov
fstl
xchg
cld
dec
repnz
push
pop
cltd
sub
or
movsb
xchg
ja
dec
sbb
pop
test
adc
shll
cmp
test
rol
xor
adc
sub
pop
loope
cmp
push
xchg
dec
xlat
sub
call
lret
jnp
and
dec
adc
cmc
xor
xor
mov
aam
sti
test
xor
sub
imul
sub
test
aas
sub
and
aam
cmp
into
push
cmp
popf
add
push
std
not
inc
enter
cld
mov
cmc
ret
dec
cbtw
jmp
sbb
or
shll
jno
push
cwtl
cmp
sub
mov
xor
aad
mull
jno
push
or
stos
popf
cmp
das
insl
dec
pusha
push
mov
or
outsb
and
and
jle
inc
or
mov
push
and
in
xchg
in
jl
mov
mov
mov
out
dec
sbb
push
jne
call
jne
mov
fcom
inc
push
lcall
xchg
roll
jle
jecxz
les
popf
mov
inc
push
xchg
scas
push
cmp
cltd
insl
inc
adc
add
adc
out
xchg
shll
jmp
lods
rorl
xchg
pop
les
je
pop
test
sti
fcompl
mov
loope
les
sub
mov
sarl
xor
mov
in
mov
jecxz
insl
mov
outsl
ds
ss
xor
and
shl
rorl
js
mov
insb
cli
out
stos
dec
scas
shlb
jmp
int
mov
push
adc
inc
xor
xchg
fstp
and
repnz
arpl
daa
sbb
xor
cmp
cmp
insb
dec
dec
sub
xor
xchg
jmp
mov
pinsrw
and
stc
in
pop
inc
dec
popa
mov
sbb
pushf
push
mov
and
div
aaa
mov
and
xchg
mov
arpl
or
pushfw
shl
dec
dec
add
push
scas
xor
add
and
stc
arpl
jno
sbb
clc
sub
or
stc
icebp
adcl
pop
aaa
fwait
scas
aam
or
fs
mov
imul
pushf
push
aam
sbbl
fsubl
subl
cld
add
mov
outsl
mov
test
outsl
mov
add
mov
mov
dec
hlt
jmp
jne
add
mov
dec
in
jmp
mov
mov
xor
vpsrlw
xchg
andb
dec
or
das
lcall
jle
clc
lods
fidivrs
mov
enter
cmp
sub
xchg
loopne
pop
xchg
inc
jge
dec
add
adc
test
fdivrl
dec
pop
inc
lahf
ret
pushf
imul
divb
dec
outsb
inc
int
stos
shlb
negb
gs
pop
enter
test
inc
sub
aad
jns
push
mov
mov
cmp
mov
das
add
sbb
push
sub
and
sbb
pop
outsl
pop
xchg
test
ret
imul
mov
lret
add
xchg
pop
and
jmp
aad
ret
sbbl
xchg
lcall
adc
int
into
pop
shrb
sub
jb
pop
decb
jle
mov
test
xchg
lds
mov
mov
xor
add
leave
scas
and
ret
push
mov
and
cmp
test
es
fwait
mov
push
in
xor
sub
sub
cs
in
mov
and
mull
pop
push
mov
xchg
sahf
ret
or
dec
and
fidivs
and
out
popa
das
mov
dec
arpl
or
dec
push
lcall
inc
ds
add
push
push
into
flds
xchg
test
push
loopne
bound
mov
pop
push
push
pop
xchg
adc
insl
mov
xor
inc
lcall
repnz
push
mov
cmp
add
cmp
test
adc
mov
cmp
fcoml
out
sbb
mov
cmp
daa
cld
jmp
xchg
aaa
mov
pop
insl
cmpsl
mov
dec
or
cmp
xchg
faddp
mov
add
xchg
sbb
repz
lds
or
mov
dec
xchg
dec
test
ljmp
leave
fs
data16
ret
push
push
gs
push
adc
out
andl
jge
movsb
bound
xchg
cmc
xlat
push
std
loop
push
xor
gs
mov
push
sahf
popa
idivb
inc
cmpsb
mov
nop
lea
xorl
xchg
inc
sbb
xchg
test
ja
rorl
pop
sbb
filds
lcall
push
inc
inc
popaw
sbb
inc
xchg
dec
insb
out
ss
jo
cwtl
pop
xor
test
mov
roll
lret
fldt
lret
cmp
adc
not
repnz
cmpsl
xchg
xorl
inc
int
xchg
sahf
js
cld
in
mov
jbe
scas
icebp
jg
sbb
mov
push
sub
rolb
ss
test
out
movntps
inc
cld
jecxz
add
fadds
inc
jb
pop
add
jle
mov
in
rcrl
and
rolb
outsb
pop
and
pop
fnstcw
idivl
inc
jns
push
loop
or
fs
cmp
jle
push
xorl
fisttpll
dec
dec
shrl
in
jns
jo
faddp
push
inc
mov
cmpsl
sbb
jnp
push
jae
aam
bnd
movsl
pusha
outsb
out
add
mov
pop
out
std
mov
and
dec
sub
loop
mov
push
push
out
int
cwtl
cmpb
jge
inc
int3
mov
push
push
mov
mov
ret
push
pop
mov
adc
mov
lock
or
nop
jecxz
es
icebp
sub
insb
dec
popf
imul
pushf
adc
subl
in
test
mov
std
ljmp
mov
repz
adc
xor
movsb
arpl
add
es
dec
lods
pop
xchg
inc
sahf
add
xchg
addb
mov
jne
hlt
or
into
push
fs
out
pop
std
rorl
roll
inc
jg
ret
in
mov
cmp
and
dec
inc
mov
cmpsb
js
fcmovu
adc
popa
movsl
stos
fistps
aam
sbb
lret
mov
sti
push
mov
nop
dec
jl
jnp
mov
idivl
adc
mov
add
mul
sub
cwtl
test
cmp
les
icebp
pop
popf
shr
mov
add
xchg
insl
add
into
or
jp
mov
mov
pop
shl
xchg
roll
into
stc
xor
and
mov
ret
jne
push
inc
ja
dec
push
sti
jecxz
leave
jecxz
xchg
pop
pop
fiadds
jns
out
cmp
mov
movsb
sarl
jmp
cmp
dec
cmpsb
into
mov
lds
mov
pop
mov
out
sub
xor
orl
movsl
lret
std
in
push
cli
out
xchg
adc
mov
shlb
and
ficompl
ljmp
sbb
and
mov
aad
ret
into
jbe
or
adc
pusha
sbb
dec
mov
enter
movsl
mov
adc
stc
xor
std
mov
gs
xor
pop
push
xor
in
ss
out
adc
aad
mov
push
gs
fildl
testl
and
cmp
xor
stos
inc
mov
test
and
arpl
test
mov
fldcw
xorl
notb
jmp
out
jns
mov
aas
stos
int3
divb
dec
and
jae
fwait
shrb
and
lods
int
movsb
pop
or
negb
fs
dec
std
imul
ljmp
scas
std
lcall
sub
pop
sub
sbb
lods
inc
call
mov
fs
mov
mov
sub
cmp
nop
test
sub
ret
add
pop
cmp
cmp
cmpsl
dec
push
sub
lds
push
pop
shr
xor
push
daa
ja
cltd
iret
mov
iret
aam
sahf
bound
iret
add
sbb
dec
jae
sub
int
fisubs
push
adc
sbb
loop
cmc
cs
xor
xlat
or
jp
xchg
cmp
lods
xor
push
fnstsw
jo
scas
push
ds
push
loop
rcrb
les
insl
push
dec
popl
and
in
xor
aam
and
ljmp
xchg
insb
imul
lret
cmp
pushw
aas
fdivrl
aad
push
pop
sbb
ljmp
lea
lret
iret
cmp
pop
jecxz
lahf
pusha
or
sbb
jns
jl
lods
lods
jl
leave
adc
out
cs
lods
out
ds
mov
int
stos
jl
mov
dec
inc
ljmp
sub
test
mov
rcr
mov
scas
pop
adc
rcr
jl
mov
mov
pop
xchg
adc
shrl
pop
sub
push
jg
dec
cmp
popa
mull
jge
or
mov
mov
mov
dec
cmp
aas
mov
xchg
dec
sub
jmp
das
ficompl
out
mov
jb
subb
fs
xor
sub
popf
std
pop
sub
dec
repz
push
mov
or
les
icebp
push
lret
push
jecxz
es
das
incl
mov
pmullw
leave
or
jno
sahf
mov
push
and
out
pop
negl
pop
lea
or
sarl
pushf
in
push
mov
jno
inc
test
add
lcall
lret
xchg
or
fs
shll
cmp
aam
cs
loop
cmc
loop
mov
sti
mov
xchg
mov
aas
push
popf
jae
loope
pause
scas
inc
or
dec
in
add
cld
cmpsl
lods
cld
jmp
dec
add
jl
xor
cli
push
stos
push
fcomp
mov
lds
push
mov
stos
mov
mov
andl
or
ljmp
je
push
bound
adc
fnstsw
out
nop
js
adc
lcall
xchg
lahf
push
lahf
daa
or
and
cmp
dec
mov
mov
loopne
cmp
shld
lea
in
notl
mov
and
jnp
inc
push
addr16
cmp
lods
lods
andl
ss
mov
mov
repz
pop
add
sub
jl
mov
mov
dec
pusha
mov
jmp
push
sub
or
out
adc
movsb
push
arpl
xorb
insb
adc
pop
xchg
dec
push
leave
xchg
dec
adc
adcl
cmp
xchg
mov
shll
cmp
cmpsl
int
leave
aas
jg,pn
and
jl
in
lcall
mov
cli
loope
je
pop
mov
sbb
test
pop
frstor
inc
mov
aad
das
sahf
lcall
mov
mov
lea
mov
mov
pop
jb
mov
pushf
sub
and
pop
mov
pop
cmp
inc
push
in
sub
pop
lahf
or
fcmovbe
hlt
adc
xchg
inc
test
gs
push
mov
adc
add
mov
ss
pop
mov
xchg
jecxz
xchg
aad
popf
movsb
cltd
mov
gs
bound
push
mov
sub
clc
pop
inc
push
push
cwtl
loop
dec
ds
push
push
outsl
sub
cmpsb
test
jge
fdivrs
daa
cmpsl
xor
or
rcr
je
std
add
jp
or
push
cmp
leave
cwtl
int3
jbe
popa
and
dec
add
outsl
mov
les
pusha
cmp
xchg
mov
add
aas
cmp
xchg
xchg
adc
jns
inc
cmp
clc
fadds
and
add
iret
add
outsb
inc
jle
mov
mov
jmp
adc
pop
aaa
subb
push
iret
fcmovnb
fnstcw
lret
pop
aaa
int
hlt
jg
sbb
xchg
int3
in
inc
push
outsl
out
out
ds
loopne
xor
sub
cmp
ds
and
popl
pop
aaa
sbb
pop
push
stc
and
cmpsb
cmpl
xchg
mov
pop
xor
mov
adc
test
lcall
outsl
ds
aad
test
mov
bound
mov
pop
arpl
adc
add
jp
in
outsb
xor
jns
rcr
add
jle
sahf
into
bound
sbb
lret
adc
scas
xchg
push
cmpl
jge
jnp
push
add
movsb
imul
xor
cs
adc
stos
movsl
and
xor
mov
aas
and
lods
stc
ja
xchg
sbb
mov
je
pop
shl
add
loop
inc
out
inc
out
or
aas
imul
push
movsl
xor
repnz
and
sub
jge
sbb
loop
ret
addr16
mov
mov
push
mov
inc
push
or
pop
leave
imul
jae
xchg
mov
rolb
lods
and
fstl
or
xor
sub
aad
test
cmc
outsb
cmp
cli
imul
xchg
fwait
dec
mov
add
mov
push
add
pop
loopne
inc
int
int
dec
sbb
push
mov
sub
mov
into
in
xor
xchg
lds
pusha
test
cltd
dec
idivl
and
movsl
pop
iret
and
cld
es
pop
aam
inc
add
outsl
inc
fdivrs
cmp
sbb
clc
shl
mov
pop
mov
mov
fwait
pop
mov
mov
in
ds
cmpsl
iret
cmpb
sbb
cmp
or
int3
sub
xchg
lock
mov
pop
inc
add
pop
hlt
loopne
pop
ja
cld
and
and
out
and
iret
or
int
mov
cmp
cmp
hlt
mov
pop
mov
or
idivb
cld
in
test
sub
pop
and
test
je
int3
cld
ds
frstor
sub
mov
sbb
pop
mov
push
ret
pminub
pop
test
outsb
mov
das
insl
shl
or
pop
lret
xchg
jno
or
mov
ss
jnp
orl
push
test
mov
jmp
dec
pop
fisubs
scas
imul
lret
dec
mov
fwait
xchg
scas
pop
xor
push
out
push
dec
push
inc
pop
pushf
loopne
xchg
addl
jne
sub
xor
loop
and
mov
dec
repnz
push
xchg
jbe
hlt
test
jge
xchg
mov
pop
adc
lahf
xor
xor
add
dec
or
xchg
jg
xchg
js
into
pop
pop
fwait
pushf
xchg
adc
mov
pop
or
ret
jno
call
ficomps
fstl
inc
fucomi
js
bnd
jge
pushf
setl
loopne
xchg
inc
inc
jg
sub
jecxz
push
jo
dec
fsubs
in
and
ja
mov
adc
lods
loope
out
push
push
mov
xchg
lea
data16
loopne
fwait
push
jae
out
jg
je
ret
cmp
fdivrp
pushf
repz
aad
and
jbe
std
add
in
mov
rcr
cmc
jae
add
fucomip
or
scas
pop
shrb
clc
cmpsb
pop
mov
or
xor
fistl
cmp
dec
icebp
xchg
fstpl
cmp
prefetch
or
notl
mov
je
aaa
jge
add
fcompl
aaa
push
clc
idivl
enter
addb
pop
push
popf
mov
sbb
and
xchg
push
hlt
es
je
mov
ret
fisttpll
mov
negl
scas
or
frstor
mul
data16
clc
add
in
pop
or
lahf
iret
nop
pop
jns
fimuls
mov
ja
pushf
inc
jb
adc
inc
xlat
aas
insl
xchg
jecxz
add
icebp
popf
adc
jae
into
mov
or
out
cmp
in
jno
sbbb
out
xchg
ja
sbb
push
mov
into
jl
cmpsl
mov
in
fdivrl
mov
insl
ss
sbb
divb
jle
and
addl
lahf
rcl
mov
ljmp
push
div
cmp
jo
cmc
inc
nop
xor
scas
or
adc
pop
fwait
mov
fisubrs
pop
jae
jecxz
shrb
fistl
aam
push
pop
pop
and
mov
inc
lods
fimuls
nop
fwait
sarl
jb
inc
mov
lahf
mov
repz
aaa
gs
les
enter
js
cwtl
pop
push
negb
andl
xchg
add
add
dec
lock
and
int
dec
scas
stos
xchg
cli
out
sarl
lods
fucomi
scas
lret
test
sahf
rolb
imull
mov
sub
sbb
inc
insl
sbb
hlt
in
inc
lret
mov
and
or
enter
mov
adcl
outsl
push
xchg
xchg
into
gs
lret
add
shr
jl
dec
mov
or
ret
aaa
mov
xchg
mov
dec
cld
inc
stc
adc
addb
lock
mov
mov
and
lea
mov
pop
in
jmp
mov
fsubrs
push
popa
rol
jo
stos
sbb
adc
cli
inc
insl
pop
dec
push
daa
jns
adc
sti
hlt
cmpsb
int3
jp
dec
jp
outsb
push
mov
mov
sbb
rcrl
not
repnz
ja
xchg
add
lret
cmp
inc
and
roll
inc
insl
push
cli
ss
jle
push
bound
pushf
sbb
or
push
addr16
lds
iret
pusha
cwtl
adc
mov
sbb
adc
imul
or
jle
hlt
inc
movsl
test
loopne
add
xor
jbe
lret
out
test
or
ret
sbb
rclb
jne
icebp
cmp
enter
fiaddl
xchg
jl
pop
addr16
aad
xchg
aas
push
insl
fucomi
pop
push
push
dec
mov
sub
jb
out
popa
mov
dec
insb
out
mov
movsb
ljmp
outsb
add
jno
adc
jb
cmpsb
lret
outsl
lods
test
push
js
pusha
mov
xor
ja
aad
or
pop
sub
ja
add
push
gs
call
push
sbb
orb
cmp
xor
stc
out
mov
lret
cli
imul
or
inc
push
lock
mov
adc
cmc
arpl
ss
fnsave
sbb
iret
les
fwait
inc
fnsave
inc
sbb
lea
cmpsl
jns
in
call
aad
sbb
xor
pop
or
imul
in
shrl
jl
ja
cmp
xchg
cmp
ljmp
hlt
cmc
popf
mov
test
das
sub
outsb
mov
xchg
outsl
mov
clc
repz
mov
fimull
mov
das
and
adc
aad
insl
je
imul
test
lods
lock
sbb
jbe
inc
dec
movsb
jno
cmpsb
xchg
test
ror
pop
pushf
imul
mov
xor
lea
leave
pop
test
pop
iret
and
lret
push
or
xlat
inc
mov
inc
mov
cmp
xchg
xorb
cltd
mov
repnz
arpl
int3
test
mov
push
mov
pop
lret
mov
push
mov
cmc
test
ret
inc
mov
call
sub
addr16
pop
movl
les
mov
lds
sub
jecxz
sbb
cltd
cmp
pop
out
and
xchg
clc
clc
sub
test
and
cmp
pop
cs
mov
push
out
enter
jp
sbb
insb
into
cmp
dec
sbb
pop
clc
jl
test
mov
insl
lcall
cmp
cmp
dec
lcall
mov
es
push
ja
xchg
lahf
push
cwtl
stos
fnstsw
sarl
mov
loopne
movsw
xchg
dec
je
cld
es
sub
xchg
shrb
push
stos
jne
lods
xor
cs
in
call
outsl
popf
jne
test
in
sub
clc
test
cmp
xlat
sbb
int3
icebp
fists
insb
or
jl
xchg
add
add
mov
xor
lret
mov
or
xor
ss
jns
into
sub
xchg
mov
shl
mov
xchg
imul
push
je
mov
adc
cmp
scas
inc
call
addr16
push
xchg
lahf
repz
aad
lahf
xlat
dec
jge
jg
and
repnz
bound
aam
sti
inc
sub
mov
mov
bound
mov
adc
scas
shlb
or
jge
push
push
or
lret
repz
pop
push
dec
fiadds
mov
lods
lret
xor
jp
in
cmp
imul
and
inc
nop
idiv
pop
or
repnz
loope
xor
mov
aad
das
xor
ss
add
xor
xchg
sti
pop
fld1
dec
je
mov
movsb
andl
out
pop
fdivrl
lret
mov
aaa
push
or
add
pop
sbb
aam
addl
rclb
mov
sti
adc
mov
sub
xchg
fimull
pusha
jne
add
sub
pop
jmp
fucom
mov
out
out
in
pop
cmp
roll
adc
jg
sbb
incb
das
arpl
lds
shll
and
add
mov
orb
icebp
arpl
push
sub
inc
rcr
inc
pusha
int3
mov
cmpsl
popf
arpl
repnz
adc
mov
rcl
daa
sub
pop
xor
jle
jmp
jg
sbb
aam
ds
xchg
push
pop
pusha
das
ror
jo
mulps
xchg
clc
jbe
xchg
leave
rorb
lods
add
push
fidivrl
push
mov
mov
mov
insb
repnz
mov
mov
out
pop
dec
add
mov
push
int3
inc
repnz
cmp
mov
insb
movsl
into
pop
ret
mov
mov
mov
roll
cmc
lahf
mov
sub
fs
push
aas
je
xlat
add
cli
imul
int
adc
aas
ret
inc
or
outsb
jb
cmp
imul
ds
pop
addl
sti
xchg
testb
fidivl
ret
sub
int
outsb
rcrl
jle
mov
jno
ret
cs
mov
mov
pop
lock
xchg
in
loop
cmpb
es
adc
test
gs
or
and
sbb
dec
xchg
rolb
dec
popa
mov
je
push
cld
pusha
push
mov
int
out
push
iret
icebp
push
ret
or
lea
cli
adc
jg
out
dec
andb
adc
or
nop
call
adc
pop
js
sub
adc
pop
and
push
mov
ret
notb
mov
pop
mov
in
xor
or
and
mov
pop
and
inc
cmpsb
or
clc
popa
xor
cmp
iret
inc
mov
repz
loop
int3
hlt
sub
mov
xchg
or
sbb
ja
mov
pop
stos
push
xchg
pop
nop
fisubs
mov
idivb
out
and
mov
movsl
mov
jp
mov
sbb
call
jo
or
loope
or
jo
jbe
js
out
inc
xchg
fsubs
xchg
jae
lock
sub
jbe,pt
cmp
leave
sub
in
push
push
add
xchg
pop
stc
jb
xor
rorl
inc
xlat
mov
aas
loop
mov
mov
fists
cmpsb
fsubp
xchg
push
lret
pop
mov
jb
mov
jg
sub
int3
xchg
pop
push
inc
inc
push
int3
adc
push
mov
mov
lods
shll
xchg
fcmovnbe
arpl
sbb
aad
aad
cltd
sbb
test
hlt
scas
cmp
mov
xchg
mov
add
test
mov
xchg
xlat
cwtl
int
sbb
sub
mov
xor
in
add
fcoml
fmull
push
in
dec
andb
sub
and
jle
out
xor
lock
das
xor
fcoms
adc
fsubs
ja
je
and
adc
repnz
ficomps
jno
add
mov
out
xor
push
push
mov
fcompl
mov
ljmp
xor
scas
add
popf
xchg
mov
add
test
jle
popa
test
ss
jecxz
in
cwtl
or
mov
scas
xchg
cltd
rcr
mov
xorb
xchg
jp
loopne
dec
sub
xchg
lret
lods
pusha
fisubrs
or
rcrb
fsubs
rorb
inc
scas
aaa
jl
mov
mov
mov
pop
dec
std
inc
call
mov
nop
mov
mov
add
pop
xor
stos
cmp
push
push
aad
sbb
outsl
adc
pop
mov
stc
inc
push
add
mov
inc
lock
rcr
sub
push
and
pop
or
cmp
repnz
push
xchg
cmpl
mov
loop
mov
fstps
add
cltd
fstpt
add
out
add
push
stos
mov
dec
jle
into
ds
bound
test
cmp
popa
fidivrs
arpl
pusha
cmpsl
xchg
stos
incl
mov
and
jae
mov
xchg
clc
rcr
gs
fdivrl
fists
cmp
mov
int
insb
push
int
in
fisttpl
outsb
ror
dec
mov
add
enter
jp
dec
add
lods
push
sub
jae
xor
add
mov
sbb
insb
mov
push
es
dec
xchg
sub
push
pushf
sbb
addr16
inc
jecxz
xchg
hlt
rcrb
mov
dec
cmp
or
aam
add
add
push
std
bnd
scas
xlat
out
out
movsl
test
or
ljmp
in
cli
xor
out
icebp
xchg
scas
inc
xchg
or
xor
jp
out
add
rol
xor
xor
adcb
fidivs
mov
shrb
xlat
and
fs
call
test
jge
xor
or
adc
or
syscall
push
fwait
ret
loope
pop
xchg
jecxz
jae
ja
lahf
into
mov
int
int
push
inc
fsubrl
std
leave
cwtl
insl
cld
test
inc
into
cs
sub
stos
dec
enter
pop
sahf
int3
inc
mov
jg
insb
bound
fildll
outsb
pusha
sub
cmp
mov
cld
xchg
leave
jo
cwtl
out
fisttps
xchg
adc
je
inc
sbb
mov
enter
in
sti
mov
dec
fsubrs
inc
pop
shl
test
in
cmp
call
cmp
cld
xchg
fs
pop
out
fmull
arpl
enter
jge
lods
insl
or
outsb
push
sbb
test
adc
loop
and
cmp
dec
imul
mov
lock
xor
push
push
mov
xchg
cmp
push
xchg
loopne
cmpl
and
daa
pop
nop
aad
aas
pushf
cmpsl
and
inc
ret
mov
xor
sub
push
bound
loope
add
push
add
push
mov
xlat
in
mov
adc
fildll
xchg
icebp
push
lcall
into
sub
icebp
push
lcall
xor
adc
mov
adc
add
and
in
int
cmp
test
sub
out
orb
pop
popa
test
and
sub
jb
xor
aas
sub
mov
pop
xchg
add
repz
rcrl
sbb
mov
test
dec
or
fidivs
dec
repz
pop
icebp
dec
leave
lea
mov
xchg
xlat
fcomp
inc
jae
jae
dec
xchg
mov
dec
loopne
out
int
daa
insb
jbe
cltd
outsl
inc
or
cli
xchg
fists
test
jo
jge
cmp
sub
mov
addr16
in
xchg
push
dec
cmp
icebp
outsb
add
sub
xor
xor
mov
shr
pop
jns
xor
push
mov
jne
addr16
aam
enter
jns
pop
sbb
inc
mov
je
cmp
cli
icebp
adc
scas
js
das
loope
cltd
fimuls
mov
push
adc
cmc
mov
pop
testb
scas
cmp
sub
mov
push
push
dec
mov
xchg
arpl
je
or
fistl
pop
sarl
inc
outsb
outsb
cmc
dec
cmp
adc
sbb
repz
xor
inc
popa
cmpsb
pushf
or
mov
js
test
mov
jle
stos
and
cwtl
loopne
out
popa
mov
es
xchg
fistpl
push
scas
push
sub
imul
mov
stc
in
sub
cmpsl
add
cmc
leave
pop
xchg
cmp
rcr
xor
enter
jns
add
aam
mov
mov
jae
sbb
mov
and
jg
xor
sub
mov
cltd
ljmp
das
jecxz
adcl
insb
movsb
jmp
aaa
xchg
fcoml
insl
ficoml
das
aad
pushf
or
jne
jle
mov
mov
lds
or
out
stc
ret
je
les
dec
mov
mov
lret
cmpsb
push
jge
inc
dec
mov
xor
sub
mov
pop
push
aam
aaa
mov
push
mov
xchg
pusha
stc
and
cmpsb
lds
movsl
fldl
push
or
adc
inc
cltd
push
add
outsl
rorl
nop
or
pop
and
inc
out
inc
aam
xchg
and
sar
cmpl
dec
scas
adc
test
pop
bound
pop
cmc
cli
andb
adc
sub
sub
loop
in
jp
pop
les
stos
inc
push
loopne
add
subb
int
inc
andl
cmpsl
fbld
popa
cld
dec
jb
xor
lds
rorb
pop
mov
push
hlt
pusha
cld
dec
inc
ljmp
out
jae
sub
mov
mulps
push
stos
lock
out
ret
in
loope
and
lds
mov
leave
mov
dec
lea
mov
ss
popa
out
mov
jae
mov
les
push
js
loope
jmp
je
mov
daa
insb
push
jb
mov
jo
xchg
or
xor
stos
sahf
push
ss
push
leave
push
mov
pop
pand
shlb
jmp
pop
xchg
push
pop
callw
js
call
mulb
or
sub
addr16
mov
pop
es
test
stos
jmp
cwtl
and
nop
aad
testb
adc
les
sbb
cmp
push
cmp
xorb
fdivrl
stc
sub
dec
rcrb
jae
imul
adc
ret
xor
sub
mov
jo
mov
ja
jnp
xchg
fcmovnu
and
cltd
ficomps
enter
rolb
adc
or
fiadds
movsb
xchg
testl
cld
xor
inc
jns
adc
sbb
fistps
or
jae
lea
jge
adc
add
mov
cli
nop
imul
dec
fisubrs
pusha
push
jge
push
mov
sbb
lods
inc
je
das
je
inc
xchg
pop
sbb
fsubrs
rcrb
sbb
pusha
add
in
test
or
scas
cmp
and
outsl
cld
mov
sbb
add
dec
andb
inc
fnstsw
les
in
pop
nop
cmp
pop
jnp
loop
xchg
bound
loop
mov
ret
mov
xchg
idivl
int3
xor
pusha
pop
pop
in
lahf
jbe
ljmp
inc
mov
push
daa
in
js
lcall
and
std
popa
out
pop
out
fsts
test
cld
test
dec
push
lahf
mov
aaa
shlb
ljmp
or
and
xor
or
mov
add
mov
stos
sub
inc
mov
imul
pop
lret
loopne,pt
add
lds
sub
jns
mov
cld
inc
scas
fwait
jl
xor
mov
dec
aam
dec
sub
push
es
out
sbb
outsl
mov
std
xor
sbb
mov
fidivs
mov
in
aaa
jl
cmpsb
and
cmp
jg
icebp
aad
fs
test
pop
mov
xchg
xchg
sbb
mulb
xchg
xchg
and
ficomps
pusha
imulb
xor
dec
and
jmp
jmp
inc
inc
dec
bound
jmp
incb
es
mov
mov
pusha
pop
inc
pop
xor
ficoms
cli
jmp
shrb
xchg
fstpt
sub
popa
xchg
add
xor
xlat
xchg
loopne
fisttps
push
adc
inc
and
xchg
int3
adc
fnsave
pop
mov
add
mov
jmp
mov
push
xchg
adc
and
adc
xchg
sub
mov
out
cs
sbb
sbb
test
ds
mov
inc
pop
arpl
mov
add
fs
lea
add
cltd
inc
jle
fstps
pop
xchg
inc
sbb
lahf
nop
cmp
icebp
xor
test
out
jbe
pop
jnp
les
mov
inc
mov
xor
push
outsb
add
cmpsb
mov
mov
fwait
xor
xchg
imul
pop
out
stos
hlt
sub
int
repnz
sub
aad
in
pop
push
ss
dec
popa
jnp
imul
in
cs
aas
pop
aas
pop
mov
cmc
pushf
mov
cmp
test
add
arpl
xorb
imull
push
mov
fldt
pusha
test
loopne
movsb
in
sbb
pop
fldt
sub
std
cli
cmpsb
jae
sbb
rorl
add
lcall
aas
rep
sbb
out
sub
mov
cs
adc
mov
scas
test
jl
pop
into
sbb
mov
shll
nop
out
pop
mov
or
jmp
popf
fsts
cmp
mov
shlb
push
ret
cmp
dec
jae
test
jp
fs
xchg
cmp
nop
xchg
scas
inc
xchg
pop
sub
inc
jp
cli
push
data16
or
adcb
stos
push
mov
mov
data16
jg
push
stos
icebp
and
call
cmpsl
cmp
xor
sub
mov
sbb
xchg
push
xchg
mov
mov
inc
mov
pop
sahf
int3
lahf
aaa
or
dec
xchg
sub
fnsave
shr
in
and
mov
out
dec
mov
dec
jg
cld
jl
sbb
out
aaa
xchg
in
js
stos
jecxz
dec
fsubl
sub
sub
mov
jae
ret
pushf
shll
xchg
sub
rcrl
xlat
scas
cmp
add
and
jmp
xrelease
ja
hlt
insl
int
cld
popf
or
rcr
out
jne
in
mov
or
rcll
lret
push
cltd
sti
sti
stos
add
sub
shlb
fbstp
test
pop
sbbl
movsl
jmp
loop
frstor
or
inc
pop
ds
mov
sbb
jecxz
insb
mov
sub
pop
clc
add
cmp
movsl
xor
push
daa
mov
push
xchg
popa
pop
clc
add
push
rcrl
popf
mov
or
pop
repnz
ljmp
xchg
sbb
in
mov
pop
fists
push
lods
das
js
into
sbb
adc
sub
fdivl
pushl
mov
movsb
sti
movsl
cmc
mov
aas
aam
subb
cli
inc
mov
adc
pop
sbb
lds
das
mov
xchg
jo
in
mov
inc
clc
inc
xchg
ds
jge
pop
sub
xor
pop
mov
push
je
lcall
clc
cmp
cmp
lods
fdivs
mov
mov
inc
les
or
dec
hlt
xor
pop
mov
push
fprem
mov
mov
aam
mov
in
pop
jecxz
push
gs
cld
movsl
mov
sub
push
fs
cmp
adc
insb
iret
sbb
cli
pop
pop
add
fmull
faddl
cmpsl
icebp
dec
xchg
xor
lods
sbb
fisttpl
pop
add
mov
testb
js
xor
pop
jge
mulb
mov
jl
pop
adc
mov
mov
int
shlb
push
sbb
outsb
testb
insl
test
sub
add
pop
sub
ret
or
push
notb
xchg
sub
push
or
dec
xchg
fcompl
lahf
xchg
sub
mov
cmpl
int
imul
lret
fcmovnu
add
jae
add
jae
aam
xchg
lret
je
in
push
push
xor
stos
sahf
pop
sub
mov
gs
jae
mov
inc
pop
jne
push
call
xchg
and
or
pusha
sbb
adc
mov
shrl
pop
lcall
popf
leave
test
mov
loop
mov
adc
es
jle
in
test
dec
arpl
fstpt
mov
push
and
out
dec
aam
jns
aaa
rclb
inc
pusha
cwtl
aas
repz
call
outsl
dec
pop
jno
rclb
pop
fs
xorl
mov
stc
dec
mov
jg
inc
lea
mov
rcl
js
cmpsb
cmpsb
scas
sbb
add
and
inc
in
out
mov
mov
inc
mov
dec
xchg
cmp
stos
mov
popa
stc
push
xlat
jo
dec
mov
daa
xor
les
gs
mov
shlb
pop
mov
dec
sub
scas
mov
jp
lods
ds
mov
mov
es
fsubrs
out
add
xor
stos
mov
stos
dec
in
xchg
iret
gs
dec
gs
dec
scas
adc
cmc
shl
jno
int
xor
pop
ljmp
scas
mov
pop
push
mov
stc
and
fcmovne
cmc
push
xchg
jae
fnstcw
xlat
sbb
cmp
pop
sahf
pop
popf
jae
hlt
orl
lds
lods
push
jmp
inc
xchg
outsl
add
jecxz
stos
jmp
dec
xchg
inc
call
sbb
or
dec
lods
xchg
movsb
pop
pop
dec
mov
pop
addr16
push
sub
pop
sbb
xor
adc
push
insl
jl
mov
mov
pop
mov
pop
xchg
inc
or
push
lods
jno
lret
cmpsb
pop
lods
icebp
mov
inc
mov
mov
pop
push
push
jne
mov
jbe
xchg
xchg
iret
sti
xchg
cmp
stos
cmp
jge
xor
pop
jae
xchg
sbb
dec
jne
mov
ficompl
movsl
ja
imul
cli
inc
xchg
xchg
daa
pop
test
hlt
sub
push
cmc
data16
stc
and
cmp
cmc
aaa
jl
mov
jmp
add
outsb
mov
push
cmpsl
pop
imul
cld
xor
jge
and
popa
push
or
adc
jecxz
sub
nop
arpl
cmp
arpl
daa
jno
icebp
push
push
xchg
sahf
fisubs
les
add
in
adc
or
lcall
call
leave
push
sub
pminsw
jne
cmp
aaa
xchg
lea
push
pushf
setb
mov
xlat
flds
adc
adc
push
std
iret
aad
stos
pop
adc
sahf
push
daa
adc
push
or
dec
in
mov
pop
push
inc
ficompl
pushf
and
mov
jl
mov
int
jmp
insb
dec
daa
hlt
xor
pusha
inc
jl
in
add
or
ja
hlt
jno
mov
mov
jne
subl
fnstcw
jg
aaa
jl
adc
cli
jb
imul
shrl
xor
adc
jp
sub
aam
test
lcall
ss
add
dec
gs
adc
mov
cmpsb
add
fstl
push
push
mov
pop
movsb
aaa
jl
xchg
adc
pop
dec
aas
js
imul
test
call
sub
fsubp
ja
push
je
or
or
lret
scas
cwtl
mov
outsl
jg
mov
ret
lcall
lret
test
xchg
cld
xchg
imul
in
fsubrs
outsb
mov
push
add
push
jle
push
mov
fs
stos
cltd
loop
lcall
sbb
pop
or
into
dec
rclb
sbb
push
mov
out
scas
push
into
mov
pop
xor
das
xchg
popa
fdivrs
lea
adc
cmp
gs
mov
out
mov
add
cmp
mov
stc
jbe
pop
mov
pop
inc
pop
sub
hlt
mov
mov
pop
inc
jae
ss
pop
pop
movsl
pop
out
ficoml
dec
cmp
rorl
rol
cmpsb
cmp
or
pop
pop
call
lahf
popa
inc
lret
scas
js
xchg
popa
stos
lock
fs
shl
ret
loope
sub
data16
xchg
mov
mov
lahf
push
cmpsl
ret
dec
mov
and
xchg
mov
mov
out
stc
test
pop
adc
or
popf
lods
cmc
xlat
jne
cld
inc
rcrl
call
jb
push
les
pop
xchg
fcomps
inc
or
jae
jmp
ficoms
lods
fwait
push
xchg
negl
push
das
rclb
dec
dec
cmpsl
insl
cmp
jno
repz
or
lock
add
mov
js
in
sbb
into
aas
sahf
insb
pop
iret
pop
stc
test
and
push
pop
stc
imul
or
push
pop
mov
push
fidivrl
jb
aas
rcll
gs
les
lods
repnz
addl
cltd
ja
xor
xchg
push
lcall
and
clc
fisubrs
mov
mull
shll
push
xchg
fcoml
add
fsubl
push
adc
jl
aaa
jl
mov
scas
dec
pop
mov
jg
jb
jb
cmc
and
pop
and
test
or
jle
les
push
dec
out
out
jnp
loopne
hlt
adcl
adc
and
pop
sub
les
jg
dec
and
push
mov
pop
fldl
add
jo
inc
cmp
mulb
inc
dec
mov
pusha
in
dec
xchg
push
aad
fistps
mov
lock
mov
in
xor
cmp
add
jle
insb
and
mov
frstor
jno
mov
xor
sub
cwtl
or
ds
adc
pop
mov
fs
sbb
std
xchg
testw
clc
lret
xchg
popa
clc
and
shr
ss
mov
or
in
pop
lahf
or
mov
xor
and
iret
mov
jo
out
das
sbb
out
push
lds
loop
pusha
sub
pop
adc
mov
daa
lock
mov
int3
cmp
loopne
sbb
stos
push
pop
mov
pop
in
jg
mov
inc
frstor
es
add
cmp
push
pushf
or
add
jge
add
pop
out
js
and
sbb
or
pop
movsb
push
push
pushf
repnz
mov
scas
or
lret
jmp
jns
inc
mov
mov
pop
mov
sub
insl
sbb
push
mov
add
push
mov
xchg
push
hlt
inc
jb
dec
repnz
adc
pop
xor
popa
scas
hlt
jae
push
sar
and
mov
jmp
pop
mov
das
xor
xor
mov
and
hlt
mov
je
icebp
add
lahf
jmp
in
int3
or
rcll
rcrb
pop
xchg
or
movsl
ljmp
jecxz
jmp
lods
xchg
fxch
jp
dec
pop
push
mov
bound
pop
and
push
mov
xor
adc
mov
sbb
mov
or
jmp
cmp
jns
sahf
cltd
std
adc
adc
lods
mov
mov
jge
or
mov
add
xchg
fstp
xor
inc
or
loopne
rcrb
jl
and
lret
popa
je
jbe
mov
fnsave
imul
jmp
pop
clc
mov
xor
push
idiv
pop
pop
sti
mov
stc
xor
dec
mov
aad
pop
mov
out
dec
xchg
sub
fidivs
push
jae
xor
in
mov
aad
lods
or
jl
xor
outsl
rcrl
adc
into
loope
xor
ss
inc
lock
js
scas
es
xor
repnz
lods
pop
sbb
repz
or
sub
fidivrl
pop
aam
or
and
outsb
mov
clc
ficoms
lret
sub
arpl
in
test
and
add
mov
clc
xchg
icebp
in
repnz
ljmp
in
outsl
sbb
adc
nop
fistl
test
jp
fildll
pop
out
jle
flds
aas
aad
cmp
fwait
push
jb
sti
inc
mov
adc
cmp
xor
inc
dec
ficompl
inc
loope
rol
mov
cs
stos
pop
rcrl
shrl
mov
mov
pop
mov
pop
mov
add
xor
test
dec
dec
and
xor
pop
xchg
cmp
inc
dec
insb
jp
sub
adc
frstor
int
cltd
sbb
outsl
add
aaa
fildll
pushf
out
lds
icebp
adc
mov
pop
push
leave
hlt
mov
cmp
mov
cltd
push
xchg
xor
fistl
inc
fdivrs
mov
nop
sub
add
inc
movsb
or
jo
repz
ret
pop
mov
loope
sar
xor
int3
bound
mov
aas
stos
loop
inc
fsubs
and
xor
or
xchg
sub
mov
outsb
scas
add
mov
test
sahf
call
mov
add
mov
xchg
cmp
scas
loop
mov
sbb
pushf
out
xchg
scas
or
push
cmp
int
push
push
mov
push
xchg
cli
das
sub
leave
add
jne
loop
mov
sbb
sti
push
or
aad
mov
and
jns
push
mov
aas
call
jbe
jbe
xor
mov
push
dec
not
sarb
or
xor
and
xlat
jmp
xor
int3
lahf
les
mov
jmp
and
add
or
mov
adc
push
fisubrl
or
out
fimull
xor
xor
cpuid
sub
mov
scas
inc
xor
mov
ds
cmp
mov
scas
cmp
mov
mov
add
sub
xchg
mov
push
mov
push
mov
push
mov
add
push
mov
add
push
push
mov
xor
pop
popl
xorl
pushl
pop
add
pushl
pop
add
jmp
or
mov
cltd
cmp
xchg
cmp
popa
sarl
loopne
jnp
sbb
popf
ja
cld
fldt
cmpsl
or
xor
cmc
xchg
adc
push
pop
xor
dec
data16
sbb
cmp
lods
mov
xorl
inc
inc
icebp
jecxz
daa
cwtl
mov
cmpsl
jmp
dec
sbb
inc
fistps
jae
bound
mov
jo
mov
or
gs
popa
call
test
sub
js
stc
pop
cmc
add
jl
push
adc
pop
mov
pusha
mov
popa
mov
mov
sub
mov
add
mov
xor
push
mov
pop
mov
jb
mov
jo
sbb
sub
jle
mov
add
or
cmp
jne
push
mov
pop
jb
inc
pop
cltd
cmp
test
adc
inc
pop
cltd
adc
inc
pop
cltd
adc
inc
pop
cltd
adc
inc
pop
cltd
adc
inc
pop
cltd
adc
push
scas
adc
cmp
pop
xor
jmp
scas
les
std
pop
pop
mov
xchg
ror
test
shlb
jb
sahf
ret
or
adc
xor
out
call
adc
xor
inc
sbb
jecxz,pt
fdivrl
out
loopne
jle
mov
lods
in
pop
mov
mov
dec
add
mov
fldenv
popf
or
inc
push
aas
int
mov
jo
mov
and
inc
xchg
les
jp
aad
adc
jns
ror
mov
mov
xchg
cli
adc
out
test
inc
jae
inc
iret
dec
mov
mov
roll
cmpsl
enter
ret
sub
iret
imul
adc
stc
stos
enter
shrb
mov
cmp
jb
test
mov
xor
add
add
jp
iret
xor
shrb
mov
imul
scas
rcl
mov
sbb
dec
adc
shl
lds
aaa
fwait
loop
or
enter
jmp
mov
cmp
pop
out
js
xchg
andb
mov
xchg
fldcw
pop
mov
mov
outsl
loope
mov
jl
mov
cmp
je
iret
outsb
jmp
sub
ret
jle
xchg
inc
sahf
mov
stos
out
inc
and
and
lmsw
insb
jge
mov
in
xchg
bound
pop
dec
popa
sarb
xlat
pop
jb
movsl
and
aaa
out
sbb
cmp
mov
pop
pusha
mov
mov
xchg
mov
aas
sub
sbb
stos
mov
rdpmc
rcrb
movsl
filds
stos
mov
ja
mov
lods
fmul
out
dec
push
ljmp
sbb
xchg
stc
mov
mov
scas
cmpsb
push
inc
adc
or
mov
nop
push
hlt
push
sbb
and
cmpl
and
cmp
fnstcw
pop
mov
pushf
sub
test
imul
test
leave
pop
adc
cs
inc
cmp
insl
inc
adc
ret
mov
jecxz
notl
xchg
test
fwait
sbbb
pop
jle
jg
mov
add
cmc
pop
lcall
divl
mov
dec
loope
scas
jmp
les
xchg
enter
jno
jno
jns
and
stc
mov
inc
lods
fldcw
icebp
xor
pop
sub
mov
xchg
mov
iret
xor
mov
inc
outsl
and
data16
test
adc
and
xchg
and
ljmp
or
daa
sbb
adc
lods
test
jb
shl
dec
or
sbb
rep
out
push
iret
mov
mov
repz
shll
jmp
daa
xchg
xor
iret
inc
xchg
mov
cmpsb
push
push
loop
dec
cs
mov
pop
or
jecxz
pop
mov
int
mov
sarl
adc
outsb
and
cmc
xor
mov
mov
fsts
inc
cltd
lahf
cmp
into
jne
mov
inc
sarl
jno
data16
jae
fnstcw
lea
or
mov
xor
ret
flds
push
xor
test
mov
xlat
popf
mov
and
stc
pop
xchg
enter
add
jae
xchg
sub
mov
pop
xchg
mov
and
inc
mov
insl
xor
push
adc
data16
in
out
xchg
popf
into
mov
cmc
cli
xor
xorb
xchg
cmp
sti
mov
mov
iret
mov
mov
scas
iret
outsl
dec
add
shll
mov
es
sbb
adc
dec
scas
pop
dec
cmp
aas
adc
jge
jmp
stos
pop
sahf
movsb
scas
xor
cmpsb
cmpb
cmp
pop
shll
push
pop
mov
outsb
push
in
lods
jg
ja
mov
aaa
add
adcl
cs
addb
mov
xchg
das
or
mov
mov
insl
xor
sub
mov
jecxz
imul
pop
std
push
mov
aaa
into
pop
cld
fsts
cmp
jbe
or
xor
mov
cmpsl
sti
cli
test
aas
popf
mov
xchg
nop
insb
addr16
insb
adc
dec
ret
mov
aam
xor
mov
testl
out
lret
jo
sub
sbb
sub
sbb
add
and
pop
sahf
mov
in
mov
fcmovu
nop
jge
xchg
imul
imul
fcmovnbe
jmp
loop
push
repz
push
pop
incl
jmp
jg
addb
addps
adc
mov
sbb
cwtl
push
enter
mov
xor
outsb
fsubr
and
adc
call
lret
mov
cvtpi2ps
rcrl
xchg
adc
aaa
insw
add
mov
xor
out
lods
imul
mull
imul
lahf
in
dec
or
add
fstp
dec
adc
pop
mov
aam
sub
sahf
stos
lret
pop
mov
xor
je
push
adc
cmpsb
jmp
add
nop
and
pop
js
jle
stos
lods
addr16
push
repz
xchg
test
add
jge
cmp
in
xor
pop
fdivrp
mov
mov
inc
pop
fdivr
clc
xchg
call
mov
xchg
cmp
cmpsl
sub
arpl
push
insb
hlt
xor
jle
cwtl
add
push
sbb
test
pushf
int3
test
movsb
sub
adc
push
pusha
in
cmpsl
sub
ds
scas
xchg
mov
movsb
and
sub
jbe
pop
pop
pop
add
cmp
lret
mov
stos
add
ja
mov
add
roll
xlat
outsb
aam
hlt
xchg
xchg
lret
movsb
in
xchg
decb
fcmovu
sub
jle
mov
es
sbb
adc
lds
rclb
fcmovne
pop
push
shlb
dec
lock
xor
int
push
push
adc
leave
push
movsl
mov
jg
int3
es
xchg
fmuls
ljmp
hlt
jp
lret
fcomps
pop
daa
push
js
std
pop
aas
add
xchg
push
sti
pop
sahf
faddp
sub
add
inc
mov
pop
out
mov
mov
xor
hlt
rcrb
xchg
sub
pop
inc
pop
xorl
outsl
scas
xchg
out
adc
gs
mov
push
sub
mov
mov
ss
sub
stos
daa
ja
ret
pop
pop
jmp
repnz
jns
sbb
dec
xor
cmc
cmp
data16
sbb
xchg
ja
repnz
xchg
scas
sbb
or
cmc
shll
arpl
mov
jo
cmp
pop
jns
jb
enter
aad
dec
ds
dec
sub
pop
pop
mov
sti
dec
push
out
aas
push
mov
scas
dec
xlat
call
cltd
adc
jne
xor
out
int
mov
xor
mov
pop
cld
cmp
rcrl
pop
shrb
xchg
inc
sbb
push
inc
cmp
push
stos
out
bound
test
bnd
sarl
es
orl
rcrl
fcmovnu
or
shl
orb
jno
push
inc
pop
sti
push
jecxz
jo
mov
sbb
xchg
mov
stc
int3
bound
pop
sub
mov
ret
int3
dec
fcom
mov
jo
jne
mov
movsl
loop
add
in
mov
out
push
push
clc
cmp
xchg
inc
xchg
sbb
cmc
aaa
jo
mov
fldt
push
mov
inc
sbb
and
sub
out
and
lods
arpl
sti
mov
jmp
jle
loopne
xor
pop
test
mov
lds
dec
int
mov
mov
push
enter
ljmp
lock
popa
mov
cld
xor
test
lret
cmpl
or
sub
fwait
or
sub
inc
jecxz
fidivrl
test
inc
mov
xchg
inc
imul
outsl
adc
imul
and
mov
shrb
jecxz
jmp
jmp
dec
push
je
push
mov
loopne
inc
sahf
xor
xor
mov
cmpsb
insb
mov
aas
nop
lock
arpl
cmc
cltd
push
dec
jl
sahf
xor
jae
pop
out
push
xor
jecxz
sbb
cmpsb
insb
cmc
dec
mov
arpl
mov
jl
jg
push
out
int
xor
xchg
aaa
mov
cmpsb
add
cli
fsts
leave
and
add
lcall
dec
jge
cmp
sbb
roll
jmp
pushf
jnp
scas
loope
cmpsl
xchg
pop
call
fwait
dec
inc
and
pop
cmpsl
je
insb
sbb
sti
cmovo
cmp
or
lods
popf
mov
call
sahf
and
pop
adc
int
adc
mov
mov
das
scas
cmpsb
mov
lret
loope
nop
scas
imul
or
jbe
mov
mov
dec
sub
cmp
pop
into
sti
dec
inc
lods
adc
shll
mov
xor
lods
es
jmp
jecxz
test
lods
sub
fisttpl
jb
dec
sarl
sub
and
mov
xor
xchg
sti
inc
not
lea
dec
sub
inc
cmp
stos
adc
push
and
repnz
aam
bound
sbbl
lock
push
mov
scas
lds
int3
xorb
pop
fstps
jne
lods
sub
push
fwait
mov
add
jbe
push
int3
sbb
mov
and
bound
pop
xor
xchg
or
push
ljmp
ss
test
sahf
test
mov
and
dec
mov
stos
push
cmp
push
cmp
mov
testl
test
std
dec
pop
fisttpll
mov
cli
aas
cmpsb
xchg
cmpsl
sti
sahf
and
sbb
addr16
cmp
xchg
call
mov
push
cmpsb
lret
xchg
mov
cwtl
or
jnp
add
xor
mov
push
lock
inc
jne
out
sbb
mov
jae
test
or
iret
mov
mov
xchg
sub
int
pusha
in
mov
and
repz
dec
jns
cmpsl
addr16
mov
jmp
aas
imul
xor
data16
mov
imul
ret
rorl
add
sub
int
nop
pop
jb
notb
mov
push
out
and
or
mov
or
fmulp
inc
dec
ret
push
jp
enter
or
es
jno
cld
gs
cmpsl
cmpb
mov
sub
jl
mov
shlb
iret
xor
mov
cld
mov
mov
fisubrs
xor
popl
daa
cld
jecxz
and
leave
dec
lret
adc
stos
cmpsb
pushf
jnp
fisubrs
sub
sub
daa
xchg
lcall
mov
popa
add
test
mov
pop
xor
mov
in
insl
jecxz
xor
addb
or
ja
inc
imul
aad
pop
mov
jo
andl
pop
dec
lds
mov
xor
ret
sub
pop
jo
in
sub
cmovno
mov
xchg
xchg
shrb
rcrl
rcll
bound
inc
sbb
andl
inc
fwait
xor
and
xlat
insl
cmp
fisubrs
push
dec
xchg
xchg
in
cmp
cs
mov
jp
jmp
add
add
dec
xchg
imul
clc
lahf
jmp
and
stc
es
push
and
fsts
cmpsl
dec
andb
jno
sub
dec
adc
dec
sub
imul
push
mov
js
test
xor
add
loope
mov
push
shrl
mov
fs
adc
xor
jmp
pop
jns
jle
jmp
mov
imul
enter
leave
mov
push
mov
sbb
xchg
xlat
pushf
mov
sub
xchg
mov
mov
sub
es
jnp
loop
pop
inc
or
dec
and
mov
push
aaa
cmp
push
fnstenv
or
and
aad
mov
dec
push
pop
mov
fwait
jno
xor
mov
jo
insl
ret
popa
mov
lock
push
add
ret
out
or
cltd
jno
xchg
into
push
pushf
push
bound
jmp
aas
pop
sbb
dec
or
mov
pop
dec
xchg
dec
jmp
aaa
push
mov
pop
adc
cmp
into
in
mulb
push
and
test
rorb
cwtl
lock
into
dec
xor
mov
and
imul
lock
jbe
xor
daa
rcl
inc
nop
and
movb
push
mov
cmp
test
repz
test
test
pushf
pop
imul
inc
mov
es
ljmp
lret
pop
test
jnp
cwtl
fwait
adcb
rcll
dec
fnsave
pop
fiadds
movsl
addb
addb
fisttpll
ficompl
into
in
aam
adc
push
xchg
pop
fwait
jl
cli
imul
and
leave
mov
or
pop
lahf
mov
jae
cmpl
push
jnp
add
xchg
jg
add
push
mov
orb
arpl
adc
pop
fsubs
pusha
decl
xor
jecxz
fs
mov
fstps
or
push
cmp
insl
addr16
cs
pushf
sub
lret
xchg
movsb
jnp
adc
xlat
test
mov
mov
ret
xchg
dec
cmc
insl
dec
faddl
jle
int3
jp
rorl
pop
aad
sub
xlat
xchg
jnp
leave
icebp
outsb
ja
xchg
mov
mov
pop
push
mov
aas
push
cwtl
adc
sub
sub
dec
sbb
test
xchg
inc
insb
les
iret
xor
sub
cmp
imul
idivb
jno
das
fsqrt
xor
inc
sub
call
pop
mov
out
lahf
pop
call
sub
rclb
jbe
sar
and
adc
xchg
and
mov
outsl
cld
fucomp
out
in
test
test
ret
pop
push
lea
dec
outsb
and
test
int
mov
inc
stc
push
shll
xor
daa
sub
ljmp
xchg
mov
fisubs
outsb
mov
or
push
jnp
cmpsl
gs
testb
xchg
jb
mov
jecxz
pop
sti
iret
mov
dec
mov
sub
xchg
pop
clc
ret
pushf
sub
mov
lods
push
dec
or
cs
dec
and
xor
xor
push
add
mov
lods
adc
movsl
mov
jnp
and
adc
adc
sub
cmp
or
push
add
sbb
push
in
lods
inc
in
lahf
cmp
xor
push
or
add
into
mov
movsb
and
add
add
pop
add
add
jns
jle
and
adc
cltd
cmp
or
jne
push
test
dec
loopne
pop
mov
dec
adc
cld
cld
dec
paddq
test
movsb
int3
push
xchg
dec
mov
jbe
sub
fsubrl
cld
fidivl
mov
decl
dec
cmpsl
mov
fs
xchg
arpl
ss
lret
jp
call
out
mov
test
dec
gs
dec
xchg
add
push
sbb
nop
into
push
cmp
loopne
cld
out
mov
push
mov
sbb
stc
mov
sub
das
lds
andb
xchg
push
jge
shr
les
and
inc
aam
fmull
fdivrl
inc
jge
dec
pop
stos
dec
repz
push
popf
imul
fiadds
xchg
jbe
arpl
add
ret
xchg
mov
push
ja
inc
shrl
orl
dec
xchg
xchg
jmp
lcall
sub
inc
and
stos
mov
ljmp
mov
lret
xchg
les
and
mov
sub
ret
out
push
stc
es
imul
xchg
popa
aad
jo
aaa
bound
jnp
popf
xorl
scas
cmp
jns
int
sbb
rcll
dec
push
out
lock
sbb
mov
jnp
sti
int3
mov
mov
push
sbb
mov
fcoml
add
insb
xor
das
pusha
inc
xor
outsb
repnz
clc
test
sub
ret
xchg
orl
sub
nopl
not
outsb
push
hlt
sbb
inc
push
push
add
filds
xor
cmpsl
decl
cmp
and
call
mov
pushf
inc
stos
into
imulb
inc
nop
in
mov
mov
test
shlb
shrl
jbe
pop
mov
jns
jae
mov
xor
lret
sub
fucom
lds
dec
inc
mov
cmp
daa
lods
loope
fidivrs
mov
popa
mov
out
jo
mov
pusha
fsubrs
mov
lods
fisttpl
jns
xor
inc
jmp
xor
shl
sbb
dec
inc
into
insb
ret
popa
mov
lock
les
xchg
popf
into
aaa
fbstp
loopne
mov
jae
pop
pop
dec
sub
xchg
rcrb
push
jno
popa
adc
int3
loop
dec
in
sub
dec
ljmp
fidivs
xor
iret
xor
pop
lods
in
mov
fldt
mov
clc
jle
fsubl
sbb
sbb
test
mov
and
fmul
or
push
or
jge
test
jne
sub
fidivrs
mov
aad
cmp
icebp
out
mov
pusha
push
sti
shlb
imul
mov
inc
cld
and
mov
test
jmp
jns
or
out
addb
push
lods
jbe
pushf
sub
in
mov
or
sbb
rep
fsub
push
sbb
cwtl
loopne
mov
sub
jmp
out
adc
jp
xor
mov
roll
push
sti
fistps
and
bound
jne
ret
add
dec
push
sbb
jge
mov
fsubrs
arpl
and
mov
pop
or
mov
out
jno
push
push
ret
push
and
fdivrl
xor
mov
dec
xchg
jmp
rcrl
mov
dec
jbe
xchg
push
ja
xor
js
lahf
inc
inc
jne
das
lods
stos
mov
cmp
lret
jecxz
repnz
cmc
jle
fdiv
movsl
andl
fldenv
les
lds
adc
dec
arpl
ss
mov
xchg
mov
add
dec
dec
adc
adc
xchg
xchg
xorb
add
jmp
sbb
xchg
in
sub
fistps
ret
mov
mov
out
ss
lret
xchg
jge
imul
inc
insl
inc
push
dec
inc
negl
sub
sbb
fidivrl
arpl
and
daa
lcall
mov
push
fmul
shl
push
mov
out
push
call
push
in
pop
mov
xor
sub
in
jne
mov
pop
mov
push
cwtl
push
fdivl
pop
stc
sbb
out
cmp
dec
mov
out
mov
xchg
icebp
jle
popl
sar
outsl
sub
mov
dec
sub
sahf
ret
jo
dec
adc
movsl
lods
xchg
cmp
push
push
pusha
cmpsb
pop
sar
xor
push
data16
or
pop
jb
clc
ds
aam
data16
push
xor
mov
outsb
in
jmp
mov
xchg
mov
std
outsl
xor
jl
sbb
mov
add
mov
repz
out
aad
mov
push
push
and
sbb
int3
inc
dec
and
add
icebp
int3
push
push
pop
fwait
pop
mov
divl
repz
in
idivb
out
sbb
int3
pushf
test
sub
icebp
js
scas
inc
wbinvd
mov
outsl
mov
pop
cmp
pushf
sbb
pop
cli
push
movsb
push
add
add
mov
dec
pmulhw
push
lea
in
mov
mov
test
jno
in
in
hlt
shrl
aas
js
cltd
jecxz
shlb
jb
inc
add
jnp
clc
inc
jecxz
outsl
mov
inc
mov
jo
call
mov
fildll
inc
lret
dec
xor
jg
push
push
sbb
outsl
dec
mov
stc
pop
test
pop
ret
mov
add
stos
sbb
sbb
xchg
imull
fisubs
fs
ds
dec
jecxz
stc
les
inc
lock
in
test
sub
or
ss
xchg
adc
out
test
mov
test
mov
inc
sub
and
or
sbb
es
dec
cmp
dec
pop
dec
or
hlt
dec
iret
cmp
fsubrs
rolb
push
daa
cmp
sti
int
cmp
fcoms
and
bound
add
leave
ror
inc
mov
jge
inc
sbb
sarl
cltd
adc
fistpl
lea
je
popa
pop
enter
jo
xor
and
sub
inc
adc
ret
sbb
outsb
stc
or
push
loope
pop
dec
sbb
aas
std
outsl
xor
stos
mov
adc
mov
cmp
pusha
push
repz
mov
in
daa
fiadds
fs
or
jecxz
ss
jp
or
and
dec
sbb
pop
mov
or
jbe
ljmp
pop
mov
push
fidivrl
xor
mov
int
loope
jo
out
inc
sarl
xchg
aas
fnstenv
aaa
mov
xchg
lcall
push
fcmovne
pushf
mov
das
cmc
mov
std
dec
lock
aaa
push
and
out
jecxz
sub
cmp
popa
pop
or
cltd
sub
mov
sti
stos
cmp
pop
mov
xchg
mov
inc
inc
sub
jle
movsb
mov
jecxz
xor
mov
inc
hlt
cmpsb
push
rcrl
jecxz
pop
push
or
mov
lret
mov
sbb
push
mov
ret
scas
dec
jge
pop
rcll
xor
mov
lods
lcall
pushf
lods
lcall
sub
cmp
js
stc
test
push
jp
sub
xchg
cwtl
sbb
lcall
setns
loop
jno
adc
cli
lods
mov
stos
xor
pushf
pop
dec
divb
out
adc
xchg
mov
shr
cmpsb
xchg
pop
daa
sub
in
test
jecxz
mov
pop
repnz
or
mov
ret
rcrb
in
mov
push
test
data16
sub
adc
and
sbb
cmpsb
inc
lret
xchg
andl
stos
ja
out
push
idivl
andl
or
xor
dec
mov
mull
inc
lea
push
dec
jg
pop
incb
lret
xchg
outsb
adc
into
inc
push
orl
and
jecxz
sub
aad
rcrl
adc
mov
pop
sbb
mov
cmp
xchg
or
arpl
or
dec
or
divb
dec
clc
stos
test
sub
or
test
inc
iret
sahf
jae
cmp
mull
test
push
jl
divb
aaa
fdivr
mov
cmp
fdivp
flds
lea
sti
dec
or
mov
sahf
jmp
mov
cmp
inc
dec
xchg
sub
mov
or
mov
and
cmc
mov
je
xchg
xchg
enter
arpl
push
add
repz
cli
jge
lahf
lret
push
jbe
addr16
xor
adc
jmp
cli
or
mov
sub
ret
repnz
mov
hlt
or
cs
shll
xor
js
insl
xor
int
lock
dec
adc
inc
lods
negl
mov
mov
flds
or
stc
insb
inc
mov
add
inc
sub
xchg
cmp
mov
ss
dec
jle
push
cli
lods
popf
mov
push
lret
mov
clc
int
loopne
rcrl
call
fiaddl
loopne
cmc
les
lcall
and
or
xor
lds
add
push
fsubl
inc
push
push
and
jg
mov
mov
rcll
loop
mov
sub
popf
das
xchg
pusha
adc
daa
in
std
jl
or
cmp
cs
in
arpl
or
cmpsl
test
pop
cld
adc
dec
cld
das
and
sahf
cmpl
mov
add
push
mov
movsb
mov
jne
mov
jecxz
and
lret
push
daa
in
push
shr
xchg
call
sub
imul
mov
sub
add
test
repnz
add
fucomi
lea
fdivrs
sbb
std
xor
jge
in
mov
or
fwait
loop
adc
and
outsb
xor
push
icebp
ss
addr16
mov
stos
sbb
and
mov
jl
out
aad
movsb
jp
aaa
fnsave
cwtl
xor
test
sbb
push
nop
mov
movsb
push
push
sbb
aam
sub
out
sub
sbb
sbb
mov
mov
es
xor
dec
pop
and
xchg
in
inc
mov
loopne
addr16
decl
sub
popa
out
dec
sbb
out
fnstsw
loop
int
xor
shrb
lret
imul
subb
inc
leave
xchg
nop
fwait
lods
push
ret
ja
cltd
pop
lds
rcr
test
out
mov
mov
jl
out
mov
ss
test
fwait
imul
xchg
test
mov
jo
xchg
fwait
shl
xchg
push
sbb
mov
cli
imul
push
addb
shrl
add
data16
aaa
mov
test
es
gs
rcr
ss
mov
inc
adc
pop
jb
fs
mov
ret
mov
pop
lea
iret
xor
scas
lahf
insl
pop
jmp
pusha
adc
cmp
xlat
shll
loope
add
stc
dec
jmp
inc
insl
out
adc
pusha
daa
sbbl
sti
inc
xlat
cmc
popa
xchg
cmpsl
inc
rol
mov
std
xchg
jecxz
mulb
push
pushf
insb
xchg
test
int
out
xchg
sub
cmc
inc
jb
xchg
out
aad
jbe
iret
stc
lahf
push
mov
push
jl
test
mov
jno
pop
sub
push
xchg
test
nop
adc
mov
int
fwait
mov
push
cmp
mov
jecxz
fstpl
xchg
dec
fmull
sti
out
idivb
pop
outsb
mov
sbb
lea
std
lret
jl
icebp
sub
ja
mov
into
pushf
jg
mov
cwtl
cmp
fildll
fldcw
cmp
loop
dec
adc
cmpl
sahf
sub
push
mov
mov
aaa
xchg
test
negb
jmp
push
into
push
shr
add
in
fcmovbe
jns
dec
add
mov
aas
mov
mov
pop
or
inc
ja
cmp
nop
fisubrl
pusha
cltd
adc
es
xchg
mov
mov
mov
cli
aam
dec
xchg
insb
xchg
dec
push
lcall
les
lds
mov
mov
mov
popl
je
jae
push
popa
sbb
es
sbb
fsubrl
test
add
jmp
jb
addr16
fbld
xor
jbe
ret
stos
into
movsb
add
arpl
add
sbb
adc
jl
jmp
dec
pop
or
and
push
pop
addr16
inc
mov
je
outsl
bound
jnp
or
add
jp
xchg
sbb
cli
and
xchg
adc
adc
out
lods
das
icebp
lret
lea
out
loopne
mov
pop
ss
clc
adcw
stos
mov
jl
cs
cmp
lret
test
cs
imul
dec
xchg
mov
iret
xlat
addr16
xchg
into
jns
int
inc
pop
lods
push
push
mov
stos
dec
mov
xchg
jno
pop
push
js
les
shlb
cwtl
ja
ss
fsubr
cmpb
mov
sti
or
sbb
lods
mov
pop
xchg
lret
add
movb
test
mov
lods
pusha
mov
out
or
mov
sub
aad
inc
test
shl
mov
pop
mov
popf
mov
dec
rcll
das
xor
push
pop
mov
push
repnz
xorl
mov
sti
push
and
lods
cmp
and
fnsave
inc
arpl
aas
fistl
inc
mov
lods
lds
mov
neg
jge
int3
outsl
mov
scas
fstpt
lret
ljmp
inc
dec
je
js
scas
mov
pop
or
push
sub
fnstcw
cmp
fldt
fs
test
es
adc
pop
sbb
aam
ja
xchg
jne
in
mov
xlat
js
cltd
pop
call
test
jae
inc
outsl
and
add
callw
pop
pushf
xchg
pop
pop
in
scas
xchg
fldenv
ficomps
xchg
test
int
repnz
jo
cmpsl
iret
gs
push
and
jmp
mov
aas
out
sbb
xchg
fsubrs
xor
mov
ss
push
imul
jo
mov
push
mov
sub
sbb
hlt
ret
lret
mov
cmp
adcb
decb
push
sbb
sahf
fs
mov
ret
sbb
aad
xlat
mov
adc
insb
incl
ja
enter
mov
call
cmpsb
jl
lahf
lahf
loop
cmp
mov
adc
sub
fiadds
or
out
popf
roll
sbb
test
js
mov
scas
mull
xchg
aas
fmuls
mov
mov
rcll
pop
outsl
js
inc
inc
leave
loop
or
xor
in
mov
pusha
popf
pop
push
lret
mov
adc
cmpl
repz
sbb
in
sahf
mov
adc
jno
mov
ds
push
push
dec
mov
test
dec
cmp
add
fs
sub
nop
mov
outsb
ss
mov
jns
mov
mov
jle
add
shlb
adc
in
cmp
inc
lods
cmp
dec
jae
test
jnp
outsb
jns
call
repz
jnp
push
jae
and
in
insb
cmc
mov
sbb
subl
pop
aas
popf
cltd
loope
fwait
adc
shlb
lods
data16
stos
idivb
inc
in
xor
inc
sub
inc
add
push
out
fsts
dec
frstor
adc
lahf
cmp
stc
dec
lret
inc
mov
inc
xchg
cmp
shrb
push
test
mov
ret
push
jmp
jle
and
dec
je
inc
and
stos
imul
push
cmp
or
and
imul
lods
imul
jg
adc
popf
or
add
xchg
pop
in
pop
adc
stos
repnz
fisubrl
arpl
jno
mov
dec
sahf
sar
mov
insl
adcb
mov
inc
push
jge
pop
cli
sub
jbe
push
or
es
adc
mov
cmpsl
loopne
push
loopne
pop
cld
cmp
ljmp
mov
sbb
push
ss
cmp
and
or
pop
mov
sub
sub
es
jp
leave
fwait
popa
out
sbb
or
rolb
push
aas
push
cmp
scas
popf
scas
fdivs
loop
dec
push
psubusw
fdivs
enter
jl
and
mov
or
icebp
rcrl
xchg
mov
jg
xchg
sti
lcall
pop
es
roll
lcall
fcoms
sub
cmp
cmp
jmp
daa
jge
push
dec
adc
xchg
sbb
mov
addb
sbb
bound
sbbb
in
push
push
add
popa
xor
sbb
xchg
xor
sahf
and
andl
mov
xlat
movsl
lret
mov
clc
popf
lods
test
fists
dec
adc
jo
mov
ds
push
mov
shrl
pushf
pop
add
push
adc
cmpsb
pop
dec
shlb
out
dec
sahf
je
shlb
and
sbb
push
push
push
fsubl
shll
and
fwait
sbb
inc
sbb
cs
inc
pop
addr16
mov
and
jl
cmp
or
mov
fistl
inc
push
push
fidivl
lret
decl
mov
cli
xchg
xor
popa
xor
shrl
je
repz
xchg
loop
xor
add
mov
lret
sub
jg
inc
ds
mov
insb
pop
loopne
sahf
add
sti
inc
sub
xor
aam
fdiv
xchg
xchg
xor
fs
sbb
pop
ffreep
and
inc
sbb
mov
pop
cmp
ja
enter
lods
jae
ficomps
xor
arpl
inc
inc
add
mov
push
pop
enter
sahf
mov
mov
or
divb
loop
or
je
insb
xchg
test
sbb
in
mov
lock
lds
clc
jle
out
mov
mov
or
push
aas
movsb
or
daa
jmp
xchg
mov
cmp
add
cmpsb
jp
add
data16
ljmp
adc
add
sub
addr16
aas
jno
sbb
sbb
es
jle
repnz
mov
das
inc
jmp
jmp
mov
popa
sahf
pop
jae
sbb
dec
rorl
movl
xchg
and
inc
cmp
dec
fwait
and
mov
in
jl
jmp
xor
jl
filds
pop
lea
icebp
cmp
loopne
add
hlt
jae
mov
or
addr16
into
xchg
lcall
imul
push
jge
cmp
or
xchg
xchg
adc
add
jmp
negb
sahf
aam
lock
fcomps
dec
push
fldt
sub
mov
les
dec
add
push
ja
aad
add
fidivl
sbb
mov
sub
aas
push
inc
inc
aaa
sbb
sub
mov
push
mov
aas
jl
mov
adc
push
adc
test
lret
push
lahf
and
or
lock
in
mov
mov
test
ljmp
loope
sbb
icebp
gs
mov
mov
les
rcll
xchg
mov
dec
lods
mov
add
ljmp
filds
aaa
xchg
out
dec
pop
cmp
rolb
cld
pop
dec
clc
dec
push
popa
iret
clc
mov
mov
popl
lret
lcall
outsl
xlat
pop
push
cmp
cmc
xchg
out
push
dec
adcl
adc
adc
std
jp
and
and
ljmp
cmc
mov
adcb
les
icebp
sbb
inc
xor
or
pop
gs
iret
ficoml
bnd
adc
aas
xor
out
jg
std
push
add
sbb
push
adc
or
hlt
dec
and
add
pop
pop
in
dec
cli
mov
cmp
jae
aam
leave
push
mov
sub
out
pop
xor
inc
push
jo
adc
repz
jno
adc
pop
inc
jno
arpl
mov
stc
sub
test
ret
sub
pop
fimuls
das
call
in
cld
mov
dec
aaa
insl
push
into
lock
inc
xchg
jbe
pushf
iret
int
cmp
cli
mov
push
fwait
aas
shl
add
mov
dec
xor
sbb
pop
insl
jl
cmp
stos
lret
or
pop
mov
jno
ss
add
ja
loop
add
pushf
popa
sbb
sti
pop
xchg
push
add
xor
test
or
pop
rcrb
add
cmp
jae
fsts
dec
int
add
xchg
nop
jbe
arpl
mov
jecxz
aaa
sub
rcr
insb
stos
jns
push
mov
daa
pop
sub
jae
testl
out
cmp
xchg
mov
hlt
ja
in
rcl
scas
inc
pop
popf
cmp
hlt
dec
sub
add
enter
icebp
xchg
int
pop
scas
dec
pop
cs
push
sub
inc
push
jmp
jmp
adc
push
cmp
add
mov
xlat
data16
push
or
stos
ret
adc
and
ljmp
mov
and
push
std
xchg
int3
mov
push
sub
and
ret
cmc
inc
cmpsl
fistl
xor
test
cld
stos
adc
test
in
in
inc
mov
rorl
cmp
mov
jg
sbb
xor
cmp
jl
jge
sbb
push
addr16
mov
repz
sub
mov
cmp
iret
jne
mov
or
fldl
mov
xlat
ret
test
sub
xchg
cwtl
add
idivb
popf
jns
fwait
mov
push
and
sub
and
mov
pop
aaa
cs
pop
or
out
push
xchg
nop
mov
push
pop
roll
enter
insl
mov
leave
mov
mov
cmc
fcom
inc
push
sub
dec
aaa
cmp
arpl
cli
cmp
es
out
inc
je
adc
pop
push
ret
loopne
and
ret
std
mov
push
repnz
sbb
lock
sbb
std
xchg
movsb
pop
fstpt
push
lret
mov
jmp
loop
dec
or
sbb
aam
pand
mov
hlt
movsl
push
add
cwtl
or
xchg
aaa
xchg
jnp
cwtl
xor
xor
fadd
jae
jl
add
shrl
and
lds
rcll
push
mov
sbb
ret
cmp
and
imul
sbb
cwtl
jl
out
jns
sub
add
out
or
icebp
sub
jae
lcall
jl
in
test
popa
push
cmc
popa
cs
lea
fdivrs
sbb
es
push
cli
je
in
in
push
or
enter
jmp
flds
sbb
xchg
inc
xlat
repnz
cs
cmp
pusha
xor
cmpsl
out
jno
sahf
jae
cld
push
push
adc
cltd
fwait
xor
out
xchg
out
popa
fistps
dec
rorb
mov
rcrb
hlt
xchg
imul
scas
shll
xchg
test
test
not
leave
mov
pop
push
xchg
test
sub
insl
cmp
jle
stos
lds
push
pop
sbb
loopne
insl
sbb
push
mov
fists
inc
pop
cltd
xchg
insl
bound
daa
sbb
daa
pop
pop
cltd
pushf
aaa
inc
icebp
jge
pop
cltd
pushf
pop
inc
lret
out
sbb
cmpsl
xor
adc
push
jg
inc
pop
adc
daa
fists
adc
inc
pop
adc
daa
out
popf
cld
gs
pushf
imul
cltd
xchg
mov
adc
pop
jns
cmp
fstl
push
inc
jne
xlat
and
dec
pop
in
fidivl
cwtl
pop
cmpb
jecxz
js
arpl
aad
mov
or
inc
push
jnp
hlt
dec
push
or
sub
mov
imul
push
and
clc
hlt
jg
into
and
adc
push
or
and
arpl
ds
add
mov
loopne
imul
pop
ss
dec
repz
test
or
mov
inc
pop
cltd
fildl
or
xor
lods
cwtl
test
jno
push
or
push
cltd
push
loop
andb
pop
mov
dec
pop
cltd
adc
jl
mov
outsl
ret
cmp
sbb
ret
mov
xchg
test
push
add
xchg
incb
cld
mov
loopne
fbld
push
add
pushf
push
in
xchg
push
or
push
ret
mov
sbb
cltd
adc
inc
pop
jb
inc
pop
cltd
inc
leave
loop
push
fsubrs
insl
jle
jb
inc
pop
cltd
add
imul
cmpsb
shl
cwtl
aad
jno
inc
pop
cltd
ss
jmp
imul
inc
mov
cmp
orb
xlat
arpl
sbb
jg
pop
inc
cmp
mov
pop
fldl
pop
daa
dec
test
sub
mov
xchg
push
mov
shlb
lock
xchg
hlt
aam
inc
aam
subl
dec
shlb
clc
mov
shlb
enter
outsl
mov
add
pusha
popf
mov
data16
cmp
dec
lds
mov
shl
mov
popa
cld
mov
and
pushl
clc
dec
ret
ret
stc
mov
push
mov
push
cltd
sub
pop
pop
je
inc
pop
add
dec
cmp
mov
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
scas
pop
loop
mov
cmpsb
mov
cs
xlat
dec
adc
xlat
dec
adc
xlat
dec
adc
xlat
shl
out
dec
inc
aad
sarl
iret
push
icebp
fcom
dec
xchg
sbb
cmp
leave
testl
push
fldenv
imul
out
jmp
movsl
dec
xchg
cld
lds
cltd
adc
fcom
mov
mov
sahf
push
movsl
sub
cmp
leave
sbb
add
and
sbb
fcom
mov
mov
ficoml
sub
cmp
lea
fmuls
call
xlat
jmp
adc
dec
sub
in
dec
loop
repnz
sbb
dec
and
adc
jns
jp
mov
fwait
int
xchg
daa
pop
loop
or
insl
and
fisubl
bound
and
adc
xlat
jmp
adc
pushl
xor
ret
sub
fwait
movsl
dec
notl
adc
add
adc
xlat
or
ljmp
inc
push
lret
mov
rcl
js
inc
dec
adc
pop
cmp
xlat
lret
in
jmp
loopew
adc
ja
mov
jg
xchg
fmuls
pushf
mov
daa
jp
fld
sub
push
enter
xchg
notb
mov
add
push
mov
sarb
leave
dec
sbb
xchg
xor
dec
adc
aad
jne
pop
mov
jnp
in
fmuls
xor
xchg
sar
mov
dec
adc
rorl
push
stos
cmpb
cmp
xchg
sbb
outsb
add
pop
testb
mov
add
rcr
mov
nop
mov
cld
aas
sub
dec
adc
es
xlat
sub
out
add
cld
mov
xlat
dec
adc
mov
clc
aas
clc
daa
inc
cmp
mov
pop
mov
sub
add
call
xlat
push
icebp
fcom
dec
mov
mov
inc
fisubrl
movsl
scas
call
jns
push
loop
cs
es
sbb
fcom
dec
icebp
lret
loopne
aad
mov
sarl
jae
data16
dec
jb
fiadds
adc
cli
xchg
xchg
and
inc
aaa
shrl
ss
xlat
out
adc
jnp
inc
pop
lods
cmpb
add
push
mov
or
push
out
inc
dec
mov
jnp
cli
in
fmuls
mov
mov
sbb
testb
and
cs
pop
daa
sbb
xlat
dec
adc
cmpsl
mov
dec
lret
hlt
cmc
xor
xor
in
xlat
dec
adc
push
xor
inc
inc
ljmp
mov
sbb
add
fnstenv
cmp
jno
pop
aad
jp
fmuls
cmp
pop
jmp
xchg
into
inc
mov
adc
js
xor
pop
fistpll
ror
sub
cwtl
lds
xchg
jbe
leave
sbb
cmpsb
mov
in
fmuls
adc
jns
ja
jg
pop
sub
popf
push
ret
fcom
dec
adc
jge
xchg
shrl
mov
not
sbb
dec
adc
cmpsl
jge
dec
in
xlat
dec
adc
shrb
int3
out
iret
ja
ret
xchg
addl
jmp
fcom
dec
and
repz
outsb
jbe
cmpsl
add
test
mov
fcom
dec
hlt
pop
scas
fdivr
push
orl
shl
fstps
jno
das
xor
ljmp
movsb
dec
adc
xchg
js
and
and
pop
iret
les
xlat
dec
jae
imul
mov
mov
mov
into
je
mov
cmpb
jmp
xchg
jmp
dec
adc
add
movsb
imul
jmp
lods
xor
cmpsb
sub
jl
cld
inc
xor
dec
adc
pop
pop
lret
xor
xlat
dec
xor
push
dec
int3
test
outsl
xchg
xor
rclb
adc
ja
lea
cld
mov
iret
js
inc
fsubl
out
pop
adc
xlat
push
mov
cli
jle
das
push
fisttps
or
adc
mov
dec
adc
jle
mov
sub
cs
mov
jnp
fistl
adc
pop
xlat
out
inc
mov
rcl
aas
mov
ljmp
iret
xor
mov
fldenv
dec
or
pop
arpl
push
rcr
dec
std
and
roll
mov
lods
mov
xchg
xchg
sub
loopne
mov
aad
add
call
pop
popa
mov
jns
push
add
ss
mov
jnp
pushf
test
dec
testl
out
or
ds
or
xchg
in
fmuls
sub
push
and
addr16
iret
xor
sbb
arpl
cld
cmp
xlat
dec
adc
pop
add
neg
xlat
dec
jbe
iret
pop
fimuls
test
jmp
ds
sub
dec
adc
dec
jmp
mov
cmp
sub
lret
or
jmp
mov
jnp
call
xlat
cld
jns
xlat
dec
adc
adcb
rcrb
inc
out
dec
adc
rcr
push
jp
data16
lcall
cmp
adc
cmpsb
mov
dec
sub
jl
sub
repz
dec
divl
add
adc
xlat
cmp
sub
mov
inc
stos
cmpb
movsl
xlat
mov
xlat
dec
adc
popf
and
jns
push
inc
mov
cli
jns
or
mov
mov
divb
add
fnstenv
pop
out
das
decb
adc
repnz
mov
fnstenv
jg
cmpsl
dec
adc
sub
pusha
test
dec
ljmp
ja
aam
sarb
mov
mov
sbb
add
fldenv
dec
mull
dec
adc
ds
fmuls
mov
aam
rcrb
mov
fildll
add
adc
xlat
xchg
jae
sub
fidivrl
into
xchg
sub
js
sub
adc
sbb
fcom
dec
lcall
imul
jle
lahf
scas
or
fmuls
sub
imul
movsb
push
out
leave
imul
je
das
daa
and
sbb
inc
adc
cld
bound
sub
lret
shrb
adc
add
lcall
popa
jne
test
repnz
mov
call
fmuls
xchg
inc
xor
sbb
mov
divb
add
fiadds
int
rolb
imul
cmpsl
pop
or
js
cmp
add
xor
dec
adc
loope
xchg
ljmp
shrb
adc
xlat
addps
push
sbb
add
add
shlb
mov
or
inc
cs
dec
adc
pop
repnz
fadds
inc
jmp
mov
jnp
hlt
xor
and
adc
xlat
arpl
lods
hlt
ljmp
jle
xor
cmpsl
scas
mov
sub
dec
adc
jl
mov
cmpsl
dec
adc
add
adc
xlat
cli
call
stos
mov
cpuid
inc
packssdw
nop
cmpb
cld
cmp
fmuls
call
xlat
sub
fsubl
mov
add
add
jnp
hlt
in
xlat
dec
adc
roll
das
arpl
into
mov
mov
add
adc
xlat
sub
sbb
jg
sahf
nop
cmpb
out
mov
dec
jmp
adc
push
mov
adc
mov
rcll
add
in
dec
adc
jge
int3
and
jecxz
mov
mov
int
add
push
adc
pop
jl
dec
notl
adc
shll
mov
mov
fcom
dec
notl
adc
ja
push
cmp
dec
in
xlat
dec
adc
push
xorl
xor
scas
mov
push
cli
fcom
dec
repz
pop
adc
mov
jbe
xlat
addr16
xor
stos
fmuls
fldenv
mov
sbb
add
push
jecxz
hlt
mov
call
fdivs
rcll
jge
sub
xlat
ds
push
dec
mov
mov
inc
and
mov
rcll
add
call
sbb
insb
ss
mov
divb
add
lea
sbb
mov
enter
pop
inc
push
cltd
lock
cmpl
in
dec
adc
dec
and
xor
xor
ficoml
jmp
pop
mov
add
adc
xlat
ss
or
arpl
jmp
lea
jns
jge
loopne
adc
jb
cmp
and
xchg
pop
mov
decb
pop
push
push
sub
aam
xlat
jns
inc
mov
cmpb
dec
imull
dec
adc
ja
push
out
aaa
adc
xlat
jmp
cpuid
inc
packssdw
jns
inc
sahf
nop
cmpb
dec
adc
int3
and
dec
cmp
sub
je
mov
cmpb
dec
adc
and
adc
xlat
into
push
cmp
dec
or
adc
lcall
pop
out
xlat
dec
adc
roll
in
xor
push
mov
xchg
mov
jns
push
in
imul
jecxz
sub
movsl
jne
or
movsl
push
ret
fcom
dec
incl
dec
pop
cmp
mov
divb
add
fldl
sbb
xlat
dec
adc
xlat
addr16
dec
adc
sarl
sahf
nop
cmpb
push
mov
loop
fcmovb
push
mov
adc
jmp
or
movsl
es
fnstenv
adc
in
lret
jecxz
push
adc
ss
mov
divb
add
call
xlat
jmp
push
cmpsl
jecxz
push
aaa
push
cmp
jo
cs
addr16
arpl
push
dec
or
dec
sbb
test
frstor
cmp
xor
dec
cld
add
sub
and
and
in
jnp
hlt
mov
fldenv
dec
xor
andb
into
bound
or
push
mov
add
push
sbb
or
rcll
cmpb
dec
adc
js
jge
and
mov
fxch
into
iret
dec
sub
xor
mov
into
xorb
sbb
ffree
cld
adc
xlat
dec
movsl
aad
imul
and
push
inc
cmp
lods
adc
nop
jbe
xor
popa
dec
and
xlat
addr16
dec
adc
shlb
rol
adc
push
stc
movsb
dec
insl
xchg
jp
mov
dec
adc
cmpsb
mov
imull
and
aad
xor
adc
call
mov
inc
push
pusha
stc
out
dec
adc
xlat
sub
imul
dec
adc
jle
xchg
movsb
fs
cmpb
xchg
adc
jp
fmuls
call
xlat
sub
mov
sarb
sahf
nop
cmpb
and
lahf
cli
mov
adc
xlat
dec
in
xlat
dec
adc
pop
aaa
insb
cli
or
add
adc
mov
flds
sbb
and
pop
dec
xor
mov
adcl
xchg
push
adc
mov
mov
cs
add
adc
xlat
cmp
rolb
xor
fisttps
mov
ss
mov
divb
add
cmp
jge
ror
bound
fs
or
out
fmuls
mov
push
and
or
push
dec
or
mov
dec
adc
repnz
inc
adcb
mov
inc
mov
mov
rcrl
push
rolb
xor
mov
into
jns
push
in
imul
dec
adc
cltd
or
movsl
pop
movsb
jl
dec
or
pop
xchg
fwait
movsl
sub
pop
sub
lahf
es
adc
rorb
dec
mov
mov
fsts
adc
push
adc
mov
inc
sahf
nop
cmpb
gs
js
pusha
jb
ljmp
push
push
xchg
aam
or
movsl
push
enter
adc
push
and
es
je
mov
cmpb
adc
xlat
or
or
mov
dec
mov
mov
cmpsl
dec
outsb
xor
ss
xlat
xchg
cmc
sbb
mov
sub
dec
adc
jns
stos
jle
or
or
jmp
adc
fildl
xchg
mov
mov
imul
shrl
movsl
sub
inc
jp
pusha
stc
fcompl
mov
divb
add
out
xor
cld
inc
xlat
dec
adc
sbbb
out
dec
adc
cmp
jns
sbb
in
cli
addr16
xor
mov
fxch
into
bound
test
inc
sahf
nop
cmpb
or
fwait
movsl
jmp
adc
inc
pushf
ret
shll
xchg
movsb
insb
cmovno
aaa
adc
xlat
pop
test
cmpsl
sub
jnp
cmc
adc
add
inc
adc
inc
cli
xlat
dec
adc
pop
add
push
mov
popf
jge
test
dec
in
fistpl
push
pop
jbe
xlat
addr16
dec
adc
cmpsb
scas
push
dec
xor
and
add
jmp
sub
dec
adc
sbb
jne
jb
jge
pop
sbb
push
stc
fcom
dec
arpl
data16
jae
jl
test
pop
sub
xchg
push
neg
xlat
dec
and
aas
adc
outsl
leave
mov
int3
xchg
jbe
cmp
frstor
cmp
adc
xlat
add
lret
int3
pop
add
jb
call
aam
inc
mov
cmpb
jb
mov
fsubl
fwait
adc
lret
insb
cpuid
inc
packssdw
xlat
dec
or
or
fisttpl
fldenv
mov
jl
cld
aas
xlat
dec
adc
xlat
shlb
mov
push
jmp
into
inc
mov
cmp
sub
je
mov
cmpb
jle
add
push
adc
in
shr
dec
rorb
cmpb
sub
push
in
imul
dec
adc
xlat
sub
ds
sub
push
cli
fcom
dec
data16
stc
lea
repz
dec
sbb
pop
cs
xlat
ret
mov
flds
xor
outsb
jae
jmp
cli
xor
xor
adc
pop
push
or
xlat
and
pop
sub
sahf
push
ret
fcom
dec
popa
pop
jle
sbb
jo
pop
ds
jp
daa
adc
cmpsl
mov
fcom
dec
imull
add
adc
xlat
jmp
mov
in
imul
dec
or
call
cmp
sub
mov
adc
push
icebp
mov
mov
popl
fisubrl
call
xlat
mov
xor
xor
add
pop
dec
adc
xlat
sub
xchg
xchg
or
mov
rcl
xor
pushf
bound
dec
rorb
cmpb
jmp
adc
std
out
jne
add
gs
in
loop
outsb
jae
out
jns
push
in
imul
dec
adc
xlat
sub
shrl
cld
adc
xlat
insb
lods
test
jnp
inc
shlb
flds
fucomp
pop
mov
jnp
mul
sub
xor
jb
subl
fcom
dec
push
xor
call
xlat
or
cld
jp
fmuls
cmp
out
es
inc
sahf
nop
cmpb
popa
and
movsl
das
stc
hlt
cmp
xor
and
adc
pop
mov
jnp
mul
xlat
dec
adc
push
addr16
decb
and
lds
hlt
dec
data16
and
aas
sti
loopne
xor
xor
in
fmuls
clc
dec
jo
jp
mov
sbb
add
flds
adc
xlat
and
bound
fwait
push
fisubl
xlat
jecxz
repz
data16
loop
into
mov
mov
cmp
sub
je
mov
cmpb
jecxz
push
shrl
test
fmuls
cmp
lods
jg
jae
lea
or
push
cli
fcom
dec
mov
pop
in
and
pop
arpl
cld
out
dec
adc
fbstp
in
pop
mov
adc
popa
mov
xor
add
sub
dec
adc
in
jae
mov
cmpb
jmp
dec
dec
lock
mov
stos
fldcw
jge
jbe
dec
inc
mov
dec
adc
rorb
dec
mov
mov
push
mov
shlb
fnstsw
cmc
jle
sahf
nop
cmpb
imul
popa
mov
xor
add
pop
push
push
popf
leave
jmp
xorb
and
ret
fst
addr16
dec
adc
imul
pushf
filds
mov
scas
pop
sbb
fwait
movsl
jmp
adc
cmpsb
fs
jmp
xor
into
inc
lcall
inc
aaa
fmuls
call
xlat
sub
pop
sub
imul
out
dec
adc
jno
inc
imul
fmulp
sub
mov
xlat
mov
nop
in
jbe
mov
mov
mov
int
inc
sahf
nop
cmpb
sub
inc
mov
cmp
sub
je
mov
cmpb
dec
jp
shl
xchg
add
dec
jbe
inc
xor
jno
fmuls
push
cli
fcom
dec
and
sub
add
imul
mov
fldenv
dec
inc
mov
dec
jge
pop
inc
mov
add
adc
xlat
loope
enter
lahf
mov
jnp
fwait
movsl
jmp
mov
in
add
es
pop
mov
mov
leave
insl
movsb
cmpb
dec
adc
divb
add
cmp
xor
add
xorb
xor
inc
packssdw
xlat
icebp
or
cmp
aaa
call
xor
adc
jmp
mov
fsubr
push
icebp
fcom
dec
cs
xlat
mov
adc
xchg
outsb
shlb
inc
mov
cmp
sub
mov
cs
mov
jnp
or
sub
dec
adc
mov
loop
adc
xor
fcom
dec
notl
dec
adc
ja
cpuid
inc
packssdw
nop
cmpb
popa
jecxz
dec
mov
test
xlat
dec
adc
fwait
movsl
push
ret
dec
je
stos
daa
push
jmp
mov
jnp
or
das
fmuls
mov
dec
push
cmp
fisttpll
pop
inc
ja
jns
rorb
cmpb
add
mov
shll
stc
out
dec
adc
xlat
es
lcall
inc
sub
dec
adc
pop
add
cld
jns
fmuls
call
xlat
ja
mov
cmpb
dec
adc
lods
jns
mov
xlat
dec
xor
pushl
adc
dec
rorb
cmpb
dec
adc
fstpt
push
push
and
ss
add
fldenv
dec
xor
xlat
adc
movsl
push
fcom
dec
add
loopne
xchg
cs
pop
mov
jnp
or
flds
xor
outsb
lods
push
ja
cmp
push
mov
cltd
inc
testl
dec
mov
lcall
dec
adc
ja
pop
pushf
inc
sub
jl
push
cli
fcom
dec
mov
inc
lret
and
cmpsb
xlat
call
dec
adc
and
cld
jns
xlat
dec
adc
movsl
push
stc
fcom
dec
xlat
and
mov
mov
pop
jg
pop
sub
fwait
sub
out
mov
dec
imul
lds
rorb
cmpb
add
out
dec
adc
or
adc
sub
mov
fimull
fnstcw
adc
fcom
dec
sub
loop
inc
scas
pop
cld
add
pop
jae
fwait
movsl
cld
inc
xor
dec
adc
and
sub
jmp
mov
jnp
or
flds
call
pop
addr16
shll
adc
cmp
xlat
addr16
dec
adc
mov
dec
mov
lods
int3
js
fnstcw
fnstenv
xchg
lock
lds
jns
push
in
imul
dec
xor
jle
xchg
and
mov
fnstenv
rclb
sub
addr16
bound
dec
adc
out
mov
sbb
cmpsb
pushf
shlb
xchg
cmp
jmp
mov
in
imul
dec
adc
fwait
add
inc
dec
adc
jns
inc
cmpsb
frstor
out
dec
adc
xlat
and
pop
sub
sbb
fmuls
call
xlat
jmp
lcall
dec
rcr
sbb
ds
or
jmp
adc
push
cmp
push
arpl
push
mov
icebp
mov
mov
xor
pop
mov
jge
pop
ss
xlat
cld
inc
das
fmuls
cmp
inc
ret
stc
fcompl
mov
divb
add
mov
dec
adc
sbb
std
and
jno
or
lret
cmpsb
mov
dec
xor
dec
rorb
cmpb
cmp
inc
dec
shl
out
push
jns
push
in
imul
dec
cs
xlat
push
mov
pop
push
xor
enter
stc
icebp
pop
decb
adc
xlat
xchg
fwait
xchg
cli
lcall
pop
push
mov
jb
push
mov
pop
adc
bound
pusha
stc
lea
jmp
sarl
loopne
push
mov
divb
add
loop
mov
loopne
and
imul
add
popa
popf
gs
xchg
sub
outsl
jne
lock
test
push
in
imul
dec
xor
dec
adc
jbe
inc
mulb
js
ljmp
xor
pop
inc
rcrl
dec
sub
in
and
push
sbb
imul
sbb
sub
fmuls
call
xlat
jmp
jmp
movsb
jge
fcom
dec
imull
add
paddusw
ja
mov
and
pop
js
addr16
arpl
jmp
mov
xlat
ds
fwait
movsl
cld
inc
into
xlat
dec
adc
add
adc
xlat
pop
btc
pop
clc
es
pop
nop
and
mov
addr16
fnstenv
cmovle
push
shr
leave
fnsave
add
adc
xlat
xor
rorl
xorb
es
cltd
jbe
es
in
push
out
fmuls
gs
ja
outsb
cmp
clc
xor
xor
dec
test
fs
and
add
fxch
dec
jge
add
arpl
mov
aas
jne
hlt
insl
and
mov
dec
xor
jns
nop
shl
inc
mov
cmp
sub
push
mov
cmp
dec
pop
stos
in
arpl
std
pop
add
shr
xorb
and
fidivrl
iret
pop
addb
jns
rorb
cmpb
and
mov
dec
adc
sarb
sahf
nop
cmpb
dec
adc
push
mov
out
inc
mov
sbb
js
nop
sahf
ret
jmp
mov
jnp
hlt
mov
fxch
jne
xor
mov
mov
push
push
push
dec
xor
pop
sbb
jnp
push
mov
push
int
fstl
pop
jbe
clc
and
push
in
imul
dec
sbb
xlat
ds
fmuls
lods
pop
xchg
and
dec
adc
ja
enter
das
ret
sti
pop
into
sub
aam
add
jnp
hlt
xor
das
sahf
out
xor
cld
jp
xlat
dec
adc
xlat
addr16
arpl
push
cli
fcom
dec
push
lahf
adc
or
or
fcom
dec
jl
mov
ret
pop
mov
aad
add
sub
dec
adc
cmpsl
push
dec
xor
inc
sub
imul
dec
adc
pop
xor
cld
nop
xlat
xlat
dec
adc
lods
das
lahf
mov
dec
rorb
cmpb
xor
sahf
nop
cmpb
sub
test
xlat
int3
push
mov
cld
xor
not
and
cli
sub
cmp
sub
jge
cmp
push
cli
cld
mov
ljmp
push
rclb
fisttpll
or
inc
mov
out
cld
sbb
sub
push
mov
divb
add
mov
mov
hlt
inc
mov
fcoms
lret
test
mov
mov
adc
xor
cmp
push
fstl
mov
sarl
sahf
nop
cmpb
push
stc
fcom
dec
mov
and
inc
adc
xlat
dec
xor
es
xlat
jnp
xor
xlat
pop
or
jp
mov
lods
pop
daa
rcrl
dec
adc
cmp
lahf
pop
add
cmpsl
sub
cli
sbb
add
lea
cmp
cwtl
xchg
sbbl
mov
fadds
je
xor
xchg
adc
adc
into
leave
test
push
sbb
addr16
arpl
push
rcr
dec
lahf
lods
push
xor
mov
andl
mov
xor
add
sub
dec
adc
jecxz
test
push
jmp
mov
jnp
hlt
mov
flds
aaa
adc
xlat
xchg
push
adc
int
cmp
lret
sbb
xlat
dec
adc
xlat
addr16
and
dec
jl
cld
inc
aad
dec
adc
and
cs
shrb
mov
rcr
pusha
stc
out
sbb
jmp
adc
out
aad
fdivl
sub
jnp
hlt
in
fmuls
fcoml
icebp
adc
push
or
dec
or
movsl
dec
adc
cmp
sbb
call
cltd
aam
lcall
push
xorb
add
jecxz
dec
adc
push
jno
mov
int
into
pop
push
mov
test
mov
test
jns
inc
push
frstor
fcompl
mov
divb
add
call
xlat
push
icebp
fcom
dec
pushf
inc
iret
scas
scas
sub
lods
loope
sti
adcl
xchg
stos
push
fimuls
fstps
ret
into
lret
rorb
cmpb
add
xor
dec
adc
add
mov
call
dec
jo
jp
repz
lock
shlb
lds
inc
into
fsubl
out
std
adc
xlat
push
mov
insl
xchg
insb
adc
pop
mov
divb
add
mov
dec
adc
xchg
push
mov
jb
adc
or
jmp
adc
push
sbb
and
dec
inc
xor
addl
mov
sbb
add
fnstenv
ret
fcom
dec
mov
and
leave
mov
ja
stos
xor
fmuls
cmp
mov
faddl
frstor
je
mov
cmpb
push
mov
sbb
aas
sub
sbb
rorl
dec
mov
mov
push
sahf
nop
cmpb
mov
xor
add
fldenv
dec
xor
push
mov
divb
add
call
xlat
cld
inc
sub
fmull
fnstcw
cltd
cmpb
pop
inc
adc
iret
jge
mov
dec
adc
jnp
jmp
sub
mov
mov
into
in
xlat
dec
adc
mov
sub
addl
xor
inc
jg
sahf
nop
cmpb
dec
adc
push
cmp
sub
pop
xor
add
cmpsl
mov
sub
jnp
int3
mov
fnstenv
in
jge
loop
or
adc
int
movsb
xor
adc
sbb
rorb
cmpb
lods
adcb
lods
lods
cmpsb
into
jg
sahf
nop
cmpb
loop
mov
incl
push
jmp
ds
fmuls
mov
adc
punpcklwd
mov
fldenv
dec
mull
sbb
add
mov
nop
out
push
clc
nop
mov
testl
xlat
jnp
loop
repnz
mov
pop
cmpl
idivl
daa
fmuls
cld
mov
xlat
dec
adc
xchg
inc
jns
inc
cmp
adc
fmuls
cmp
fcoms
and
add
das
fmuls
arpl
xchg
test
test
xlat
daa
and
out
jecxz
lods
pop
das
rcrl
dec
xor
imulb
les
mov
sub
ja
mov
ja
inc
mov
xor
shlb
pop
loop
lcall
es
xlat
cld
inc
das
fmuls
cmp
rorb
cmpb
add
out
dec
adc
xor
sub
jl
cld
sub
test
xlat
dec
negl
dec
adc
cmpsb
adcb
xlat
dec
imull
ja
fcomps
repz
xor
adc
mov
fldenv
dec
adc
fdivr
mov
xlat
dec
adc
jle
incl
rclb
adc
loop
mov
addb
adc
xlat
dec
imull
add
adc
xlat
sub
enter
push
cmp
jl
jg
mov
jns
enter
xorl
into
data16
sbb
fwait
sub
iret
adc
cmp
sbb
sub
jmp
rcr
dec
xor
jl
imul
add
addr16
mov
sub
mov
inc
adc
xor
jbe
jge
pop
ss
xlat
jmp
sbb
fimuls
sahf
je
xor
popf
adc
xlat
dec
sbb
fsubrs
adc
ja
aas
aam
dec
adc
and
stos
fmuls
fnstcw
mov
inc
cs
xlat
dec
adc
xchg
es
or
xchg
mov
jnp
xor
movsl
test
mov
jg
or
popa
mov
in
add
mov
gs
ret
sti
mov
sub
dec
cmp
xor
xor
push
jne
and
ja
inc
mov
add
aam
push
mov
dec
adc
dec
ficoms
ficomps
adc
sbb
fxch
adc
fmuls
mov
dec
adc
ja
lods
lahf
lock
fiadds
adc
movsl
add
in
inc
jg
push
enter
push
adc
jnp
cld
inc
add
dec
adc
mov
push
push
mov
push
sub
pusha
addr16
xor
xor
and
in
dec
adc
jg
clc
mov
flds
xorl
mov
ret
or
cld
xor
mov
cltd
cli
sahf
mov
fldl
addb
sub
mov
mov
insl
sarl
jmp
cmp
jno
xor
push
jl
cld
jns
xlat
dec
adc
push
dec
or
aad
enter
aam
xchg
adc
add
fdivr
inc
and
ss
xlat
jmp
adc
js
inc
mov
fcom
dec
leave
fmull
fstps
and
popa
cmp
jle
fbld
sub
xorb
add
adc
xlat
xor
in
adcl
fcom
dec
pop
mov
inc
lea
fstps
rcll
mov
push
mov
and
popf
addr16
pushf
push
cli
andl
pop
pop
cmpsl
xor
mov
lret
mov
les
adc
mov
adc
dec
adc
fs
stc
cmpsb
or
aad
into
push
mov
sbb
fcom
dec
in
xlat
dec
adc
stc
adc
scas
cld
hlt
mov
nop
add
lods
repz
adc
xlat
fisttpl
mov
int3
loope
in
stos
or
mov
std
mov
and
push
loope
cwtl
adc
popf
ja
lret
out
jo
bound
xlat
dec
adc
lret
test
cld
xchg
cmc
mov
mov
mov
rcl
ljmp
lea
mov
ljmp
leave
jns
repnz
leave
fidivrl
cmpsl
lea
iret
inc
mov
sub
into
xchg
fildll
push
into
inc
mov
mov
lcall
and
fistpl
aaa
push
aad
mov
push
push
jecxz
mov
and
jl
dec
scas
shlb
mov
fnstenv
cmp
cmpsl
mov
adc
rcll
xor
dec
in
xlat
dec
adc
dec
inc
inc
mov
clc
cld
adc
stc
mov
lods
push
push
cmp
enter
add
jle
mov
fnsave
dec
out
dec
adc
add
adc
xlat
xor
mov
inc
xor
inc
pop
sarl
insb
add
lods
leave
jmp
sub
dec
adc
lret
xchg
push
cli
out
mov
fnstenv
in
xlat
dec
adc
push
loopne
dec
clc
push
sbb
inc
cmp
imul
dec
imull
add
adc
xlat
add
mov
dec
into
rol
out
dec
adc
xlat
es
dec
adc
lods
sub
push
fadds
push
mov
fcom
dec
lea
pop
or
inc
notl
dec
adc
iret
dec
jb
fiadds
adc
xlat
push
hlt
fcom
dec
lcall
daa
dec
js
in
or
aas
and
cmpb
dec
inc
add
lret
int3
xor
loop
adc
mov
sub
mov
push
push
cmp
enter
add
xlat
dec
jno
jns
and
aam
mov
mov
in
xlat
dec
adc
inc
push
test
sbb
xchg
repz
lea
jnp
adc
cmpsb
mov
fcom
dec
in
fmuls
add
negb
inc
repnz
sbb
pop
loop
cmp
add
dec
adc
and
adc
xlat
cmp
pop
and
repz
adc
push
sbb
mov
push
sbb
sti
mov
fcomi
and
test
or
mov
hlt
sbb
xor
outsb
cmp
sarl
adcb
mov
hlt
outsb
das
mov
dec
adc
xchg
fidivl
test
push
mov
andl
dec
ljmp
jae
inc
pop
ljmp
mov
inc
xchg
sub
shll
xlat
sbb
mov
inc
adc
and
fmull
flds
and
xlat
popa
rcrb
inc
repz
dec
adc
add
adc
xlat
and
shll
xchg
push
xchg
add
jno
les
mov
adc
fisttpll
fldenv
dec
adc
pop
sub
push
adc
ficoml
mov
add
mov
xchg
sub
dec
adc
cltd
imul
pop
test
scas
lods
adc
adc
adc
jne
cltd
cli
iret
mov
pop
dec
in
cmp
cmp
mov
jmp
and
lret
xor
in
xlat
dec
adc
dec
push
inc
sub
push
sarb
lret
lds
adc
sar
fcoms
repz
pop
xchg
xchg
repnz
cmpsl
imul
fmuls
call
xlat
cld
inc
dec
adc
sbb
xor
fmuls
fnstenv
and
fcom
dec
jae
adc
lcall
or
lahf
jmp
mov
aad
enter
mov
xor
xor
mov
fcomps
cmp
xor
outsb
rcr
iret
sub
xlat
xlat
dec
sub
fcom
dec
push
xchg
test
shlb
sbb
sub
hlt
movsl
aad
inc
jae
out
jnp
pop
scas
jmp
dec
adc
outsl
mov
fdivr
arpl
xchg
addr16
pop
cmp
xor
into
inc
dec
std
mov
dec
adc
ja
xorb
ss
or
and
adc
adc
jmp
pop
fcom
mov
adc
xlat
and
insb
adc
pop
clc
sub
mov
cmp
dec
adc
je
out
int
aaa
call
push
dec
adc
test
hlt
jae
hlt
hlt
rorb
adc
jge
adc
dec
adc
xlat
es
push
sub
cld
inc
push
and
push
hlt
fcom
dec
xor
stos
pop
dec
mov
dec
incb
pop
ret
cmpb
insl
mov
push
pop
cmp
enter
ljmp
jne
test
add
cmp
mov
dec
adc
je
jmp
shr
popf
fisttpll
fstps
push
sub
hlt
or
sub
hlt
xor
cld
inc
xlat
dec
adc
aam
xlat
dec
out
xlat
dec
adc
adc
mov
repnz
faddl
syscall
mov
dec
adc
sarb
cmc
imul
into
aam
or
fwait
ja
xchg
fmull
fldcw
push
adc
ss
mov
mov
pop
aas
and
js
mov
mov
add
popa
push
mov
fmull
fstps
les
cmpsb
dec
adc
jnp
adc
loope
or
and
aad
mov
hlt
insl
mov
push
pop
cmp
enter
ljmp
mov
mov
lock
mov
adc
xlat
enter
pusha
stc
fmuls
jns
rclb
sub
inc
adc
add
adc
xlat
rcrl
sub
lods
out
arpl
adc
cmp
push
stc
fcom
dec
lock
test
sbb
push
adc
pop
jl
aad
scas
mov
adc
int3
jno
loop
cmpb
addr16
xor
add
cmp
lret
sub
das
cmp
pusha
outsl
cmp
xor
aad
xlat
dec
adc
mov
push
sbb
cmp
pop
mov
xor
jge
fucomip
int
or
movsb
push
es
add
js
jne
xchg
int
xor
and
cmp
shlb
aam
sti
mov
xor
cmpsl
mov
fcom
dec
imull
cmpsb
lret
ret
dec
imull
rol
leave
pminub
sti
scas
rcr
inc
ficompl
inc
push
push
sbb
and
sub
jle
loope
or
sub
sbb
dec
adc
pop
mov
xor
or
xchg
mov
fcompl
mov
test
lea
test
adc
das
mov
je
in
mov
dec
out
mov
pop
imul
mov
mov
iret
aas
flds
xchg
jo
iret
aas
jae
hlt
fcom
dec
mov
xlat
add
xor
jp
mov
imul
in
insl
arpl
mov
xlat
dec
adc
shl
lret
sbb
rorb
add
out
js
cmp
adc
xlat
mov
jnp
loope
mov
mov
push
lock
cmc
jb
aaa
cwtl
lock
xchg
or
mov
loopne
lret
andl
shr
lds
mov
push
decb
adc
xlat
sahf
dec
jmp
adc
mov
xchg
mov
shrb
adc
xlat
add
les
and
and
or
stc
jnp
cld
inc
aad
dec
adc
shll
cs
cld
adc
pusha
or
insb
xor
or
fcmovnb
xchg
add
xor
call
xlat
cld
inc
xlat
dec
adc
xchg
pop
pop
ret
sbb
fmuls
call
xlat
mov
cmc
dec
stos
mov
xlat
dec
mull
dec
adc
ja
mov
adc
ss
fisubrs
rcrb
jge
jne
cmp
jns
call
xlat
adc
aas
dec
adc
add
adc
xlat
dec
outsl
nop
inc
mov
or
pop
imul
insl
jmp
popf
popf
pop
xor
push
jae
push
push
ss
xchg
mov
jo
cmp
xor
adc
or
xchg
or
mov
sbb
cmp
xlat
insl
jge
imul
adc
pusha
repnz
fisttpll
das
xor
pop
dec
adc
xlat
and
addb
sub
xlat
cs
les
push
add
push
and
stos
dec
adc
iret
push
dec
rcl
dec
out
xlat
dec
adc
sbb
inc
push
xchg
pushf
pop
outsb
insb
dec
xor
sbb
xlat
dec
adc
add
adc
xlat
xor
sbb
pop
jb
outsb
jmp
adc
pusha
loop
scas
sbb
inc
pop
lods
cmpb
shlb
adc
add
adc
xlat
lret
cmpsb
or
dec
pusha
dec
push
jbe
out
dec
adc
xlat
and
cwtl
and
adc
pop
cmp
out
and
loope
adc
inc
rorl
rcr
dec
in
fmuls
aas
mov
movsl
das
pop
mov
add
xlat
dec
mull
dec
adc
shll
mov
fcom
dec
bound
cs
pop
cmp
mov
adc
fwait
movsb
mov
or
fidivrs
and
fildl
xlat
fisubrs
dec
push
fbld
jmp
sub
and
jae
cli
cmp
xlat
cmpsb
aas
sbb
addr16
xchg
push
roll
xor
daa
addr16
jo
dec
mov
inc
mov
popa
inc
xor
jmp
out
clc
ror
xchg
xlat
lods
addr16
addr16
ljmp
adc
mov
mov
jl
cld
inc
in
dec
adc
pop
aaa
movb
pop
push
lock
imul
xchg
inc
cmp
and
and
sbb
dec
adc
jbe
cmp
jae
pop
push
sub
add
adc
xlat
mov
cmc
and
in
adc
lret
sbb
xlat
sbb
ja
xchg
mov
jmp
adc
cmpsb
leave
push
dec
xor
cmpl
dec
adc
rorb
inc
push
mov
les
lods
lea
adc
ja
cmp
movsb
mov
dec
inc
fidivrs
or
push
fsubrp
cmp
pop
sbb
loopne
mov
add
daa
test
repz
rcr
dec
insb
loope
mov
jnp
adc
inc
outsl
mov
shlb
xor
cmc
shlb
pop
decb
xor
add
mov
dec
adc
clc
lcall
xlat
dec
xor
and
xchg
dec
call
aam
mov
shrl
dec
adc
ja
xlat
out
mov
in
xlat
dec
adc
or
push
push
out
and
inc
mov
inc
add
cld
aas
xlat
dec
adc
jns
leave
add
lea
fmuls
call
xlat
mov
sub
orb
xlat
mov
hlt
adc
adc
xlat
cs
lods
xchg
ret
mov
fxch
sbb
xlat
dec
adc
add
adc
xlat
xchg
cmpsl
mov
and
inc
pop
cmc
or
sub
push
cli
dec
ss
jb
shlb
add
fldenv
dec
or
adc
cld
inc
rcl
dec
adc
and
adc
xlat
push
stc
fcom
dec
cld
sbb
lock
sbb
sub
sbb
lahf
jmp
iret
xlat
dec
adc
push
mov
xor
add
fldenv
popa
out
daa
xor
sbb
adc
ljmp
xlat
dec
adc
imul
ret
aad
xor
fnsave
out
aaa
xor
dec
in
xlat
dec
adc
lahf
rcrl
add
aaa
add
and
push
mov
pop
sbb
aas
std
mov
cld
inc
xlat
dec
adc
imul
in
pop
add
adc
out
adc
mov
pop
cmp
jmp
jno
mov
notl
adc
ja
orb
inc
imul
ror
xlat
dec
adc
sarl
cmc
pop
jp
fcom
dec
adc
adc
cs
aam
jns
addl
mov
fldenv
dec
mov
movsb
stc
xor
xlat
dec
inc
std
mov
dec
inc
shll
fcom
dec
push
inc
lods
xor
sub
jge
and
sub
add
jecxz
dec
adc
test
das
inc
loopne
cmp
inc
ret
push
dec
stos
movzbl
sbb
in
xlat
inc
jg
cmpsb
inc
fisttpl
mov
add
fcom
dec
xor
jns
sbb
pusha
stc
fcomps
mov
xor
add
dec
aad
xlat
dec
adc
stos
cld
stos
and
push
jl
mov
sbb
movsl
rcrb
pop
lock
movsl
enter
jmp
jmp
test
subb
sub
jg
xor
add
jecxz
dec
xchg
sub
mov
xor
add
das
pop
mov
sbb
mov
stos
sbb
inc
jecxz
dec
adc
cli
mov
out
test
mov
sub
push
je
fcom
dec
mov
fdivl
lods
test
aam
dec
adc
aas
sub
mov
in
sub
xlat
dec
imull
cmpsb
mov
dec
pop
add
loop
or
sbb
movsl
adc
adc
pop
mov
or
loop
lods
pop
xlat
repz
push
rcr
dec
sbb
or
pop
inc
jns
adc
mov
pop
cmp
jmp
sbb
lods
out
push
insb
push
lahf
adc
cmc
test
mov
dec
sbb
add
adc
xlat
push
faddl
out
jg
xchg
push
fimull
outsl
dec
push
into
push
mov
sti
cmpsb
jle
lahf
and
mov
iret
test
loopne
enter
enter
xlat
dec
sbb
popa
push
add
cmp
xlat
pop
fidivrs
fbstp
repnz
insb
sbb
loop
xor
mov
cld
inc
das
fmuls
cmp
loopne
push
sti
loopne
and
mov
in
xlat
dec
adc
push
clc
flds
mov
lret
pop
xchg
aam
int3
or
movsb
push
into
sub
cld
inc
or
dec
adc
inc
mov
pusha
lret
pop
and
xchg
xorb
xlat
push
mov
lret
stc
stc
dec
xchg
lretw
and
cld
inc
fcomp
dec
adc
outsl
sbb
xlat
dec
adc
jmp
lea
adc
or
rcrl
dec
adc
cmpb
mov
hlt
adc
adc
xlat
cs
ficoml
cmp
dec
cs
jp
add
mov
mov
aam
ds
js
sbb
dec
adc
add
adc
xlat
pop
stos
data16
jecxz
inc
push
stc
inc
push
mov
sbb
xor
sti
pop
pop
jo
pop
or
out
rorl
out
lods
sbb
or
mov
out
push
stc
fcom
dec
sbb
inc
clc
aam
mov
lods
cmp
cmpsl
lret
mov
cmpsb
fisttps
fldenv
dec
adc
add
cmpsb
leave
fcom
dec
xor
jbe
inc
pop
frstor
xor
xor
adc
add
lret
push
ja
fcom
dec
mov
fdivl
cwtl
movsb
mov
xlat
dec
in
xlat
dec
adc
cmp
xchg
pop
cld
fbld
mov
dec
add
mov
adc
ja
iret
and
loop
cmpsb
les
sahf
gs
xlat
sub
lods
test
aam
dec
adc
aas
sub
mov
iret
and
ljmp
cs
and
outsb
in
push
in
sub
test
fisubrs
int3
or
stos
dec
adc
rol
inc
xchg
push
ja
fcom
dec
mov
fdivl
hlt
cmpsb
mov
dec
adc
xchg
fisttpll
fstps
rcr
dec
aas
in
int
sub
xlat
dec
sub
cmpsl
popl
notb
sbb
mov
adcb
imul
loopne
pop
call
jl
hlt
push
cmp
scas
int
xlat
dec
adc
and
cld
jp
xlat
dec
adc
and
and
popa
push
mov
fmull
fstps
fcom
dec
aas
add
xlat
dec
adc
inc
jg
dec
into
in
and
andl
repz
xor
cmpsl
mov
fcom
dec
bound
leave
xor
cmp
xchg
cmp
jns
cmp
packssdw
xlat
dec
adc
addl
pop
cs
add
or
push
test
jbe
test
xor
sub
xor
in
fmuls
mov
rol
jb
sub
sbb
movsb
mov
xlat
xlat
dec
adc
es
mov
fnsave
jmp
and
jns
imul
movsl
dec
adc
lahf
cltd
jno
test
and
inc
out
fmuls
xchg
fsubl
fnstcw
sahf
sub
addps
or
cmp
adc
xor
jl
push
fcom
dec
mov
test
dec
jae
shll
xlat
sub
lret
sub
daa
cmp
jns
mov
cmpsl
insb
mov
mov
mov
fcom
dec
in
xlat
dec
adc
mov
insb
xor
sub
xor
iret
ja
int
iret
sbb
and
inc
cmc
xlat
dec
adc
and
and
add
cmpsl
mov
or
xor
jmp
loopne
and
mov
fdivrs
lret
das
fwait
cld
inc
aam
dec
adc
gs
rclb
fldenv
and
fldenv
cmp
and
sub
sbb
call
xlat
cmp
cmp
lret
jmp
dec
adc
pop
xor
jmp
adc
xlat
dec
sub
or
inc
cs
xchg
es
cld
inc
push
dec
adc
pop
sub
jmp
adc
jbe
adcb
cmp
sub
ja
ljmp
pop
mov
inc
lcall
inc
and
dec
adc
push
cmpsb
stc
mov
leave
dec
out
cmp
das
mov
outsl
lret
rep
int
std
and
je
xchg
das
mov
push
hlt
fimull
push
mov
xor
add
mov
repnz
jb
mov
sarb
ror
mov
pop
inc
push
push
sbb
and
add
mov
bound
cmp
add
dec
into
mov
movsb
mov
je
xchg
das
mov
push
or
adc
fsubs
mov
inc
xchg
stos
and
mov
test
out
cmp
sub
adc
jne
xchg
das
mov
adc
jmp
pushf
push
dec
mov
jne
xchg
das
mov
jmp
xor
push
dec
mov
mov
push
mov
das
mov
mov
int3
adc
in
nop
lret
fidivrs
stos
dec
inc
xchg
das
mov
xchg
orl
leave
push
mov
das
mov
xchg
ret
xchg
push
inc
jnp
aas
dec
mov
cmp
sbbb
test
iret
in
stos
stos
es
dec
adc
and
inc
xchg
das
bnd
xor
iret
aas
xchg
add
lea
sub
inc
call
fwait
enter
loopne
das
xorb
xorl
mov
das
mov
adc
xor
mov
bound
shll
or
mov
fcomps
das
mov
mov
je
xchg
das
mov
jmp
das
mov
push
fists
push
and
cmc
jae
enter
jbe
orb
fisttpll
cmp
stos
shlb
loop
lods
and
int
out
movsb
cwtl
lahf
das
mov
hlt
fstl
int
imul
mov
mov
das
mov
mov
int
negl
cmp
das
mov
push
sbb
js
pop
loope
xchg
das
mov
mul
fsubr
mov
popf
stos
sub
mov
jae
xchg
das
mov
lahf
movsb
jecxz
outsb
dec
scas
and
mov
pushf
sahf
pop
cmp
jb
pusha
imul
stos
mov
or
push
fs
mov
movsb
loope
inc
xchg
das
je
xchg
das
mov
pop
jns
push
fnsave
pushf
popa
inc
popf
pop
mov
xor
xchg
push
adc
xchg
out
aad
dec
mov
xchg
iret
inc
cld
pop
cmp
sub
mov
pop
mov
mov
inc
xchg
das
mov
push
pop
xor
xchg
das
mov
stos
push
inc
xchg
das
mov
xchg
stos
mov
inc
aam
out
lods
xor
jae
mov
sbb
inc
xchg
fidivrs
xchg
das
mov
pop
fidivrs
mov
test
mov
sbb
xchg
das
bound
jno
insl
mov
leave
mov
mov
lea
cli
mov
inc
push
fs
mov
jle
mov
push
ret
inc
js
call
and
mov
pop
mov
movsb
lods
lea
das
stos
and
push
lea
das
mov
and
mov
je
xchg
das
mov
arpl
cli
dec
sbb
mov
mov
mov
das
cmp
mov
adc
cld
cwtl
popf
das
mov
mov
test
inc
xchg
das
mov
movsl
je
xchg
das
mov
inc
pop
lea
cmp
mov
xchg
pop
pop
mov
jle
mov
sbbb
xchg
in
ds
mov
movsb
mov
stos
jbe
cmp
inc
xchg
das
mov
mov
out
cmp
mov
data16
pop
orl
lahf
inc
inc
xchg
das
mov
test
lds
jae
in
lcall
inc
xchg
sbb
xchg
das
add
dec
addl
icebp
mov
pop
inc
movsb
mov
stos
sbb
sub
or
out
cmp
das
mov
test
mov
jle
mov
xor
es
scas
push
adc
out
inc
movsb
mov
bound
jle
mov
inc
ja
push
stc
pop
dec
inc
adc
adc
ficoms
cmp
fs
mov
movsb
mov
bound
testl
mov
inc
subb
nop
pop
mov
jmp
repnz
das
mov
nop
cmp
test
out
cmp
das
mov
xchg
das
stos
and
mov
pop
inc
movsb
mov
je
xchg
das
mov
mov
pusha
add
push
pusha
jbe
outsl
mov
popl
xchg
xchg
rcrb
sub
rcr
and
mul
fmuls
pop
jbe
sub
test
push
sub
mov
xchg
nop
pop
negb
lods
jne
mov
and
mov
pop
mov
movsb
scas
push
inc
xchg
das
stos
and
loop
lods
dec
and
stos
xor
xchg
das
mov
fmull
mov
and
cwtl
movsb
das
mov
sbb
push
rolb
adc
cmp
cmp
bound
jle
mov
lock
jno
mov
out
cmp
mov
clc
pop
xor
gs
cld
js
aaa
addb
and
pop
push
insl
ljmp
jp
xchg
nop
mov
cmc
jae
push
sbb
loope
xchg
das
mov
xor
fidivrs
add
stc
rcrb
and
mov
and
pushf
popf
and
mov
sub
movsl
mov
in
lea
das
mov
nop
adc
jnp
mov
sub
jo
push
fs
mov
movsb
scas
pop
inc
xchg
das
stos
cwtl
popf
das
mov
add
mov
inc
scas
cmp
movsb
and
mov
stos
cwtl
movsb
das
mov
movsl
adc
lds
inc
mov
mov
push
jp
divl
mov
cmp
fs
mov
jle
mov
cltd
jo
lea
out
pop
mov
push
xchg
enter
mov
popf
mov
mov
je
xchg
das
mov
sub
fwait
and
push
ljmp
adc
je
mov
adc
lea
test
test
or
and
adc
je
inc
mov
mov
xchg
outsl
cmp
inc
cmp
notb
jecxz
call
cmpsb
das
mov
aaa
outsb
cltd
fnstenv
mov
inc
cmp
xchg
das
mov
in
adc
and
leave
cmpsb
dec
jmp
push
loopne
fisubrl
out
cmp
das
mov
arpl
sbb
xor
xchg
jle
mov
pop
mov
notl
pop
test
mov
lods
mov
mov
adc
shlb
inc
xchg
lea
sub
fsubrl
cmp
and
dec
sarl
mov
adc
fs
ljmp
mov
std
mov
mov
push
mov
das
mov
lock
or
call
in
inc
xchg
das
bound
xor
mov
cmpl
stc
addl
rolb
mov
das
mov
nop
je
xchg
das
mov
jbe
cmc
js
xor
movsl
mov
popf
popf
das
mov
push
aam
ficoms
addr16
pop
fadds
das
mov
divb
fcompl
jbe
inc
xchg
stos
sbb
and
push
sbb
fimuls
nop
inc
ss
push
inc
fldl
mov
mov
mov
je
xchg
das
mov
das
or
lea
or
ljmp
push
cmc
nop
lods
or
aad
mov
das
mov
xchg
das
stos
das
mov
pop
mov
pop
lods
push
aaa
ret
xorb
push
nop
rolb
and
stos
jbe
dec
lods
xor
mov
push
sub
movsb
mov
negb
mov
das
mov
movsb
mov
bound
movsb
mov
inc
xchg
das
add
jne
ljmp
mov
lcall
and
movsl
and
mov
stos
shlb
stos
cltd
fisubrs
js
repz
icebp
mov
das
mov
cmc
nop
stc
xchg
stc
mov
inc
cmp
cmp
mov
mov
das
mov
mov
or
pop
fdivs
adc
mov
pop
fidivrl
xchg
das
mov
jecxz,pn
and
mov
pop
mov
movsb
mov
je
xchg
das
mov
cld
sub
sub
jg
inc
out
cmpsb
aad
push
clc
mov
mov
lds
pusha
mov
cmc
jo
out
push
or
clc
movsl
xchg
lea
repz
mov
pop
daa
xlat
jg
mov
mov
stc
shlb
cwtl
cltd
das
mov
ret
and
into
mov
movsb
mov
inc
xchg
jecxz
and
inc
test
dec
sbb
push
das
mov
push
andb
lcall
push
cmp
cmp
test
mov
das
mov
and
inc
xchg
sbb
das
dec
add
hlt
sbb
out
mov
dec
mov
into
mov
movsb
mov
mov
push
jne
ljmp
mov
mov
fcomp
pop
pop
jge
sahf
pop
daa
stc
cwtl
movsb
das
mov
mov
movb
stos
cltd
pop
fistpll
dec
cli
shlb
ljmp
push
cmc
pop
fdivs
das
mov
jmp
mov
lods
repnz
pop
into
mov
movsb
mov
stos
xchg
push
lods
idivb
pop
inc
movsb
mov
je
xchg
das
mov
out
lahf
rorb
push
add
shll
mov
repz
pushf
int3
cwtl
jbe
mov
xchg
movsb
out
cwtl
movsb
das
mov
xchg
cld
sar
orb
mov
stos
adcl
mov
popf
das
mov
and
imul
adc
jae
js
push
pusha
jbe
les
imul
push
pop
xchg
das
mov
xlat
inc
inc
pop
insl
outsb
lcall
out
and
xchg
test
mov
pop
fsubrp
popf
fs
movsb
and
or
inc
cs
xorb
fwait
cmp
cli
mov
inc
xchg
fwait
sub
mov
orb
dec
mov
fwait
xchg
call
lcall
inc
xchg
sbb
das
movsl
add
sbb
je
das
mov
sub
mov
dec
and
stos
mov
xchg
das
mov
and
inc
xchg
das
fcmovnu
stos
pop
psubusw
jae
mov
push
pusha
jbe
jns
inc
xchg
xlat
cmp
cmp
inc
xchg
das
mov
mov
jnp
push
stc
popf
inc
inc
xchg
das
mov
movsl
stos
jbe
pusha
mov
sbb
xchg
das
adc
pusha
js
cmp
into
mov
movsb
mov
test
mov
xchg
cwtl
mov
xchg
das
mov
mov
sbb
xchg
das
lock
jl
add
ds
jns
ljmp
inc
push
fs
mov
jle
mov
or
fistpll
out
rorb
into
xchg
jp
or
inc
fistpll
stos
push
inc
xchg
das
mov
xchg
mov
xchg
push
sbb
clc
dec
cmp
add
mov
mov
das
mov
inc
sub
cmp
lods
jecxz
mov
cli
jbe
mov
or
sub
xor
fs
mov
testl
or
sub
jg
cmc
adc
add
mov
shll
cli
and
xchg
inc
loop
insl
sub
cmpsb
daa
mul
fmul
xchg
out
and
mov
lea
inc
mov
mov
cmpsb
xor
test
or
or
fdivs
xchg
das
mov
push
mov
je
xchg
das
mov
mov
repnz
lret
adc
xlat
dec
mov
xchg
and
mov
pop
rcll
xchg
push
xchg
das
aam
mov
adc
push
or
adc
mov
dec
and
xchg
mov
rolb
jbe
test
inc
xchg
das
cmp
call
ret
enter
shll
mov
inc
xchg
das
xchg
insb
push
cmp
jge
add
lock
mov
das
mov
out
dec
iret
mov
movsb
mov
je
xchg
das
mov
aaa
cld
inc
push
mov
das
push
das
mov
push
and
jle
mov
int
add
and
add
popa
insl
lods
imul
adc
fsubrs
das
mov
and
pop
rcll
push
inc
xchg
das
mov
xchg
mov
sbb
mov
das
mov
mov
sbb
xchg
das
ret
mov
fidivrs
scas
push
inc
xchg
das
or
sarl
cmp
das
mov
popf
sub
jg
mov
dec
sbb
xor
sbb
inc
xchg
dec
fistpll
stos
dec
sti
cmc
mov
lods
jmp
jo
add
dec
lcall
addl
das
mov
adc
icebp
lea
fsts
dec
add
inc
cmp
je
xchg
das
mov
in
fcomps
cmp
sub
adc
and
jo
test
cmp
cmp
das
mov
cmpsl
das
mov
xchg
dec
movsb
in
fsubrl
add
sbb
xor
sbb
cwtl
arpl
mov
push
stc
shlb
mov
nop
fidivrs
out
inc
xchg
das
mov
lea
pop
lcall
inc
xchg
stos
cwtl
fwait
das
mov
inc
cmpsl
push
adc
cld
jbe
sbb
mov
loopne
xchg
das
mov
sbb
sarb
mov
push
mov
inc
xchg
das
mov
cwtl
arpl
mov
jg
inc
xchg
sbb
das
pop
jae
sbb
xor
mov
jle
mov
fidivrs
xor
scas
pop
xchg
aaa
xor
loop
jle
jecxz
sarl
mov
negl
bound
das
pusha
cmp
xchg
mov
cmp
sub
mov
das
mov
jns
test
cmp
cmp
das
mov
or
das
mov
testl
arpl
mov
jp
inc
xchg
dec
push
or
das
mov
mov
pop
lods
xlat
daa
lods
mov
mov
das
mov
cmp
inc
xchg
das
mov
adcb
jge
jbe
mov
sbb
xchg
das
fldt
sbb
mov
das
mov
icebp
sarb
mov
pop
mov
filds
das
mov
icebp
cwtl
arpl
mov
jo
inc
xchg
sbb
xchg
das
push
pop
sub
test
jecxz
mov
out
and
xchg
das
cmpsl
out
inc
dec
lock
cmp
stos
mov
mov
dec
push
andb
jae
adc
push
pusha
jbe
enter
xor
test
cmp
cmp
das
mov
xchg
push
pop
inc
out
jae
outsl
sbb
inc
rclb
lods
ret
jno
mov
xor
push
iret
push
lods
mov
mov
das
mov
in
cmpsb
jb
aaa
mov
xchg
movsb
cmp
icebp
mov
and
repz
das
mov
out
nop
fidivrs
cmp
sbb
loope
or
xchg
cwtl
sub
jae
push
lcall
inc
xchg
fidivs
lods
push
sub
imul
jecxz
mov
cmpsl
das
mov
xchg
xor
or
add
jne
imul
push
das
mov
push
andb
jae
push
lcall
inc
xchg
sbb
xchg
das
add
cmp
push
mov
mov
popf
movsb
das
mov
push
mov
shlb
dec
hlt
mov
mov
fs
xchg
das
mov
sbbl
inc
xchg
das
mov
xchg
pop
mov
das
mov
scas
lea
das
stos
and
mov
pop
mov
movsb
mov
inc
xchg
das
bound
jle
mov
lods
mov
mov
sub
insl
mov
mov
pop
dec
mul
sub
xchg
das
stos
sub
lea
inc
xchg
das
stos
jbe
imul
xchg
das
test
mov
sbb
out
iret
mov
pop
mov
testl
lods
mov
mov
das
xor
or
mov
cmp
or
clc
and
or
push
sbb
adc
pushf
ret
inc
pop
cwtl
cmp
mov
inc
pop
test
outsl
xchg
das
mov
push
pop
or
dec
pop
in
xor
iret
mov
movsb
mov
mov
mov
das
mov
cli
mov
cmp
fs
mov
movsb
mov
stos
jbe
sti
lods
cwtl
mov
add
mov
mov
pushf
movsb
xchg
sbb
sbb
addr16
and
lock
loopne
xchg
das
mov
push
orb
xchg
das
mov
cli
mov
inc
sbb
js
pop
sarb
xchg
das
mov
and
pop
inc
cmpsl
mov
stos
xchg
pop
aad
xchg
das
mov
push
daa
out
cmc
lea
das
mov
or
dec
imul
cmpsl
hlt
jge
adc
nop
insl
stc
xorb
fs
mov
loope
pop
iret
or
cmpl
mov
in
test
outsb
les
int
addr16
xchg
mov
jge
fs
ljmp
ljmp
mov
xchg
outsb
xchg
out
jbe
cmpsb
push
or
pop
xlat
inc
xchg
das
mov
and
mov
mov
das
mov
dec
pop
sar
mov
mov
inc
xchg
das
stos
jbe
lods
inc
int3
mov
popa
push
cld
push
inc
xchg
das
orl
pop
fdivr
xchg
das
mov
aaa
mov
inc
xchg
das
mov
mov
mov
das
je
xchg
das
mov
jne
stos
testl
ljmp
mov
xchg
das
mov
jle
mov
popa
pop
idivl
shlb
idivb
pusha
inc
movsb
mov
negb
mov
and
mov
sbbl
nop
pop
mov
std
push
cs
jae
and
push
pusha
jbe
mov
dec
iret
mov
movsb
mov
stos
jbe
mov
stos
mov
inc
xchg
adc
mov
jb
dec
xchg
mov
sbb
lcall
inc
xchg
das
mov
xchg
das
stc
rorb
test
sbb
outsl
mov
rorb
andl
pop
mov
repz
inc
rol
cld
sbb
xchg
cmc
mov
data16
stc
arpl
inc
xchg
fidivrs
xchg
das
mov
sub
jne
xchg
das
mov
jae
cld
iret
adc
cmp
adc
lods
dec
stc
mov
cwtl
jge
xchg
pushf
mov
mov
cltd
mov
in
jnp
mov
in
xor
mov
xor
dec
push
xchg
out
lock
dec
sub
arpl
movsb
aad
jp
xor
rsqrtps
jge
sub
bound
movsb
in
inc
xchg
das
push
inc
cmpsl
mov
stos
jbe
cmp
push
out
lods
pop
mov
notl
push
jp
add
call
sahf
inc
inc
xchg
das
mov
jecxz
mov
lcall
inc
xchg
das
lds
lea
push
nop
mov
test
nop
mov
jbe
pusha
mov
sbb
xchg
das
cli
push
test
xor
jl
mov
adc
ja
shlb
imul
sbb
in
in
xchg
call
in
mov
mov
sbb
mov
dec
xlat
cltd
lcall
inc
xchg
xor
sub
bound
testl
mov
xchg
das
je
xchg
das
mov
sub
hlt
aaa
mov
pop
fldcw
das
mov
inc
sub
xchg
sahf
xchg
das
pop
ret
mov
lcall
cmpsl
das
mov
lcall
mov
lods
mov
das
test
mov
das
push
add
jno
lahf
ret
sub
out
cmp
nop
popf
and
xchg
das
mov
and
xlat
xchg
add
dec
or
in
ja
subl
das
fists
dec
gs
ljmp
dec
cmp
out
pop
ror
mov
or
cwtl
cmpsb
das
mov
xchg
inc
jl
jns
and
inc
pop
add
cmc
adc
je
xchg
das
mov
jno
mov
pop
inc
fs
pop
in
lock
pusha
jbe
cmp
aas
xchg
das
mov
xchg
das
mov
je
shrb
mov
das
test
mov
das
mov
or
xor
sbb
xchg
das
loop
push
fdivrl
inc
xchg
das
push
pop
mov
mov
and
xor
xchg
loope
pop
mov
or
mov
lea
xchg
test
sub
out
and
icebp
aam
lods
dec
out
cmp
pop
or
xchg
das
mov
and
jne
xchg
das
mov
ljmp
xor
and
cwtl
das
mov
lea
add
pop
fcomp
xchg
das
mov
push
jns
stos
or
ds
xchg
fsubp
jmp
sbb
mov
jbe
mov
cmpsl
mov
mov
call
cmpsb
scas
dec
inc
dec
hlt
test
das
mov
sahf
das
mov
es
daa
arpl
aad
mov
pop
and
pushf
xchg
shll
popf
pushf
jbe
mov
or
xchg
icebp
xchg
and
adc
inc
xchg
pop
sbb
lcall
dec
notb
vpacksswb
push
nop
orl
bound
loope
pop
or
pop
cwtl
mov
or
bound
sub
lahf
into
or
sub
mov
mov
lret
cs
lods
das
mov
insb
mov
loop
pop
jl
adc
mov
sbb
dec
into
cltd
test
lock
repz
jbe
cmp
lods
cld
repz
jb
das
mov
add
test
mov
push
cmp
and
imul
inc
movsb
scas
mov
das
lods
and
xchg
pop
cmpsb
cmc
cmp
push
mov
jmp
js
dec
mov
mov
lods
and
das
mov
or
cwtl
popf
das
mov
fdivrs
loopne
movsl
mov
das
mov
popf
das
mov
pop
into
dec
jge
cmp
fisttps
out
cmp
das
leave
inc
and
mov
mov
test
xor
loope
mov
test
jbe
sbb
pop
test
das
je
xchg
das
mov
es
jmp
adc
stos
cwtl
movsl
das
mov
xorb
fwait
inc
ljmp
das
mov
mov
push
cmp
inc
xchg
xor
lret
sbbl
cmp
inc
xchg
das
mov
jo
jnp
notb
stos
mov
pop
sarb
xchg
das
mov
scas
lea
pusha
dec
lods
hlt
xor
flds
das
mov
imul
xchg
das
mov
jecxz
push
pop
clc
inc
sbb
sub
adc
xchg
das
mov
or
mov
les
mov
insl
ljmp
mov
adc
outsl
jmp
cmpsb
aad
push
sti
je
mov
push
sbb
xchg
inc
dec
xor
dec
xor
xchg
das
insl
andl
sbb
lds
sbb
or
lahf
enter
mov
inc
xchg
das
test
push
cli
sub
or
inc
jbe
sbb
jbe
sbb
inc
sub
mov
pop
mov
jle
mov
jne
push
and
adc
jne
mov
stc
push
cmp
inc
test
adc
jne
xchg
das
mov
mov
fimuls
out
loope
dec
mov
sub
mov
xchg
das
mov
ret
mov
je
xchg
das
mov
ret
and
call
mov
or
out
jbe
cmp
scas
push
pop
dec
mov
jecxz
call
movsb
mov
bound
and
das
push
push
or
inc
sbb
pop
mov
rcrb
mov
jle
mov
inc
popf
mov
mov
sti
dec
mov
mov
cmp
jbe
cmp
mov
loope
mov
das
shl
imul
or
rcl
insb
sbb
repnz
das
sbb
push
testl
aam
adc
das
or
lcall
sub
cmp
dec
pusha
std
inc
xchg
mov
rorb
out
cmp
mov
push
mov
inc
xchg
das
mov
cmpl
mov
dec
loope
repnz
dec
cmp
dec
lods
jbe
and
mov
imulb
sbb
ds
repnz
out
addr16
push
cld
push
inc
xchg
das
stos
jbe
cmp
inc
xchg
das
mov
pushf
stos
or
cmp
adc
test
test
ret
aam
mov
cmpsb
pop
and
popa
ljmp
and
icebp
int3
bound
mov
fimull
inc
xchg
das
dec
or
jb
pop
aam
loope
ljmp
or
fadds
out
cwtl
test
mov
inc
stos
in
fimull
push
lret
movl
pop
inc
xchg
das
insb
shrl
lret
push
pop
fldcw
and
pop
mov
jle
mov
adc
sahf
int3
inc
movsb
sbb
or
jns
fcom
pop
pop
aad
mov
stos
lds
dec
jae
mov
pusha
adc
sbbl
sbb
or
insb
xor
loope
ret
mov
mov
xchg
das
sbb
push
fs
stos
das
mov
lcall
push
pop
dec
inc
jnp
mov
lods
ret
out
movhps
xchg
das
aam
mov
test
and
mov
sub
push
das
mov
sub
inc
lods
loope
insb
sub
rcrl
mov
jge
sahf
pop
cmpsb
cwtl
cmpsb
das
mov
sahf
sub
test
sbb
jg
adc
sub
das
out
cmpsb
test
mov
das
xchg
out
popa
loop
inc
sbb
pop
ljmp
and
and
jb
pop
mov
nop
mov
jle
insl
mov
mov
xor
add
test
repz
cmpsl
das
mov
mov
rcrb
inc
xchg
mov
inc
xchg
das
mov
mov
rcrl
cwtl
das
mov
lea
mov
xor
imul
cmp
cld
scas
je
cmpb
and
adcl
and
lods
cs
lea
cmp
das
mov
inc
mov
xchg
stos
sahf
cmpsl
das
cmp
das
jmp
and
movsb
pop
outsl
xor
mov
mov
push
dec
stc
stos
je
xchg
das
mov
add
js
xchg
mov
aam
mov
das
enter
pop
inc
xchg
das
mov
or
xor
cltd
das
mov
fisubl
ret
or
and
jae
xchg
das
mov
cmc
sub
lret
in
punpcklbw
insl
icebp
lea
cmp
je
xchg
das
mov
xor
inc
insb
mov
lea
stos
aam
adc
das
or
lcall
sub
je
cwtl
cltd
das
mov
push
popl
dec
call
jle
mov
add
aaa
adc
cwtl
inc
lods
hlt
sbb
xchg
mov
das
mov
xchg
das
pushf
and
das
sbb
cltd
in
bound
fs
xchg
das
mov
mov
pusha
adc
fs
xchg
das
mov
popa
cs
rorb
fcoml
out
cwtl
lahf
das
mov
out
mov
adc
add
sub
adc
mov
aaa
test
pop
into
sahf
rclb
in
pop
mov
jle
mov
movsl
andb
xchg
pop
inc
fisttps
arpl
sarb
dec
sbb
pop
xchg
inc
pop
cmp
cmp
inc
xchg
das
mov
in
mov
mov
or
xlat
imul
push
ret
mov
lea
xor
aam
push
inc
xchg
orl
das
push
mov
mov
or
lcall
inc
xchg
lret
jno
ss
inc
jmp
sub
lahf
clc
pop
mov
jle
mov
sbb
btr
aad
mov
sbb
pop
mov
mov
das
je
xchg
das
mov
mov
std
xor
outsl
dec
jl
mov
notb
mov
cld
cltd
push
pusha
inc
movsb
mov
stos
jbe
cmp
inc
xchg
das
mov
add
xor
jge
lods
movsb
pop
xor
cmc
mov
pusha
inc
movsb
mov
negb
pop
dec
jle
repnz
notb
int
pop
jle
hlt
inc
xorl
sub
inc
sbb
or
xchg
das
mov
xor
cwtl
jge
mov
loop
inc
xchg
das
cwtl
das
mov
lea
das
mov
inc
cmp
and
push
cmp
mov
pop
sbbl
pushf
loope
cmc
mov
pop
xor
mov
mov
loopne
out
and
mov
push
xchg
inc
xchg
mov
je
xchg
das
mov
dec
outsl
add
mov
push
incl
or
inc
push
fs
xchg
das
mov
inc
adc
das
mov
adc
out
les
aaa
inc
data16
outsl
push
or
je
fs
sbb
divl
das
mov
int
lods
ret
pop
mov
movsb
loop
inc
xchg
das
je
xchg
das
mov
mov
or
movsb
jno
pop
mov
cwtl
adc
das
aam
mov
push
or
mov
push
adc
or
and
sbb
push
je
xchg
xor
inc
in
jmp
dec
mov
inc
dec
pop
loope
xchg
das
mov
or
je
mov
xchg
in
dec
inc
movsb
mov
stos
rolb
pop
inc
xchg
das
stos
mov
cwtl
mov
pop
mov
jle
mov
sti
popa
push
std
pop
out
cmp
das
mov
push
scas
cmp
push
jb
xlat
inc
pop
mov
movsb
mov
mov
dec
cmp
inc
xchg
xor
mov
lcall
inc
xchg
das
mov
xchg
test
and
pushf
das
mov
jl
in
test
stc
rolb
adcl
jge
and
xchg
imul
pop
adc
mov
sahf
dec
mov
test
aam
lock
data16
cwtl
leave
das
mov
mov
or
lcall
inc
xchg
das
je
inc
mov
sahf
divb
pop
mov
and
lds
or
push
dec
scas
daa
mov
aam
mov
dec
sahf
and
test
push
out
cmp
das
mov
xchg
das
or
xchg
xor
rcrb
inc
xchg
dec
xlat
test
cmp
cmp
das
mov
shll
sub
xchg
das
mov
and
fbld
jno
sbb
out
jle
inc
xchg
sub
rcr
mov
mov
bound
sahf
inc
cmp
das
mov
jecxz
popa
sbb
push
cwtl
movsl
das
mov
xchg
jge
pop
test
jl
and
aas
xchg
das
je
xchg
das
mov
aad
fiaddl
cmp
test
inc
cmp
das
mov
sub
cli
lea
mov
pop
stc
je
test
or
fwait
stc
cmp
adc
mov
lcall
loope
int3
int3
cmp
mov
inc
out
out
inc
cld
jecxz
je
out
jbe
mov
bound
xchg
das
mov
cld
roll
fiadds
addl
mov
mov
in
inc
xchg
das
je
xchg
das
mov
jb
in
add
mov
scas
hlt
enter
test
and
sbb
pop
mov
fbstp
xchg
das
mov
xchg
das
mov
adc
bound
jle
mov
scas
into
pop
shlb
neg
clc
insl
or
jg
in
push
or
pop
call
clc
and
adc
aam
in
nop
je
xchg
das
mov
mov
mov
jnp
pop
inc
dec
stc
arpl
jbe
orb
xchg
das
mov
xchg
adc
cmp
mov
lods
cwtl
pop
xor
inc
xchg
sbbb
test
pop
mov
cwtl
mov
xchg
das
aam
mov
mov
ficomps
sbb
inc
movsb
mov
aaa
mov
loop
inc
xchg
das
test
jnp
adc
das
mov
pop
cmp
or
das
mov
mov
inc
xchg
das
je
xchg
das
mov
and
lret
cmc
repnz
adc
sub
cmp
sbb
mov
lods
and
xchg
mov
cmc
je
adc
je
xchg
das
mov
jmp
in
inc
out
repz
and
insl
imul
and
mov
sbb
xchg
das
in
imulb
test
test
xor
popa
out
lods
pop
inc
xchg
das
mov
and
push
sub
xchg
das
or
call
stos
sbb
cmp
or
pop
fadds
xchg
das
mov
jle
in
lods
je
test
cmp
cmp
das
mov
mov
sbb
xchg
das
insl
out
enter
loope
movsb
jmp
pusha
dec
xchg
sub
mov
lcall
mov
mov
das
lahf
xchg
sub
gs
daa
lcall
adc
test
lcall
inc
xchg
das
jmp
movsb
cmp
rorb
ljmp
dec
or
push
hlt
outsl
in
xor
inc
xchg
das
mov
stos
sbb
dec
sbb
lock
int3
cmc
pop
aad
xchg
das
mov
fnstenv
das
mov
gs
movsl
xchg
std
xchg
inc
and
xchg
mov
andl
inc
xchg
xchg
sub
jmp
sbb
iret
cwtl
ret
jb
imul
mov
subb
xchg
lods
or
imul
xor
push
inc
push
inc
push
xorb
jnp
fwait
roll
sti
cmpsb
jne
xchg
leave
dec
xchg
xchg
mov
jp
rorb
ss
lret
mov
imul
jno
dec
cli
fistl
jmp
or
and
test
nop
je
xchg
das
mov
jg
leave
repnz
aaa
mov
xor
dec
add
xchg
and
je
fs
mov
imull
xor
incl
mov
popa
notl
xchg
scas
pop
sub
std
lret
cli
xlat
imul
sbb
mov
mov
xlat
ret
mov
xchg
shrb
or
idivb
lods
sbb
movsb
loope
inc
xchg
das
je
xchg
das
mov
mov
rorl
cmp
jns
rcll
push
inc
xchg
das
bound
testl
jmp
cwtl
cmpsl
das
mov
pop
push
lret
lcall
jl
add
dec
mov
inc
xchg
mov
inc
xchg
cmpsl
lods
jbe
sub
mov
mov
das
mov
in
inc
xchg
das
bound
jle
mov
pop
lcall
mov
insb
lret
out
jbe
pusha
mov
cwtl
sahf
das
mov
and
mov
imulb
xchg
jle
iret
int
loope
mov
sbbb
push
inc
xchg
das
stos
mov
lcall
adc
test
adc
scas
cwtl
mov
aas
xor
mov
loope
adc
fs
xchg
das
mov
push
dec
imul
add
flds
test
das
mov
push
mov
jo
das
mov
mov
out
pop
dec
lods
stos
and
in
mov
adc
mov
xchg
out
lods
mov
push
rcrb
push
lds
mov
inc
xchg
das
je
xchg
das
mov
fcoml
lret
push
xor
and
or
ja
pusha
mov
sbb
xchg
das
iret
cwtl
push
lahf
xlat
and
adc
sahf
ljmp
sbbl
psraw
mov
mov
out
sbb
fs
and
mov
sub
mov
push
mov
mov
negl
pop
inc
xchg
das
popa
mov
aas
stos
adc
lea
dec
cmpsl
or
and
lods
add
sbbb
xor
inc
xchg
das
bound
testl
xor
stos
fwait
sbb
out
in
sub
fldcw
sub
and
fistpll
lods
jns
sbb
mov
jns
shr
es
jo,pt
mov
nop
lcall
xchg
lods
and
xchg
daa
stos
jmp
in
mov
insl
dec
push
in
fidivrs
adc
negb
mov
inc
xchg
das
stos
and
lods
push
popa
lock
add
cmc
test
add
orl
inc
xchg
das
stos
cwtl
fwait
das
mov
in
fwait
sbb
sbb
and
cmc
mov
add
popa
sbb
push
rorb
addr16
xchg
das
jb
adc
mov
sbb
jge
cwtl
fwait
das
mov
add
fdecstp
lcall
movsb
mov
vpcompressq
mov
dec
cld
add
shlb
mov
pop
shrb
mov
std
mov
push
xor
loope
dec
pushf
mov
sarl
inc
movsb
lods
pop
inc
xchg
das
je
xchg
das
mov
or
sbb
xchg
je
xchg
das
mov
aaa
sub
repnz
rorl
mov
je
jbe
xor
xchg
je
xchg
das
mov
mov
int3
mov
mov
xor
cmpsl
push
cwtl
pop
jne
scas
iret
daa
movsb
mov
lods
jbe
mov
lods
insl
iret
movsb
mov
nop
dec
rclb
mov
je
ja
push
mov
dec
jne
lcall
inc
dec
enter
and
fcoms
mov
das
mov
and
mov
out
jp
mov
sub
sbb
dec
cmpsl
mov
bound
negl
sub
or
mov
xor
mov
xchg
je
xchg
das
mov
outsl
mov
xlat
jmp
das
mov
icebp
dec
jne
xchg
das
mov
sbb
fisubrl
cmp
xchg
das
mov
cmc
pop
shrl
mov
loopne
xchg
cli
or
mov
loopne
movsl
gs
cmp
je
xchg
das
mov
lds
movsl
pop
je
xchg
das
mov
xchg
test
and
sahf
or
mov
test
lea
jo
rcr
xor
cmp
xor
mov
cmp
das
mov
xchg
and
pop
cmp
inc
xchg
or
inc
pop
push
mov
xchg
clc
mov
mov
lods
das
mov
sbb
xchg
das
xchg
scas
push
push
add
iret
adc
cld
xchg
fimuls
dec
inc
int3
xchg
adc
xor
test
in
xor
scas
inc
mov
mov
xchg
out
test
push
lret
stc
xchg
out
je
sahf
pushf
mov
inc
dec
daa
inc
lcall
xorl
cmp
cld
push
cwtl
mov
mov
movsb
imul
sub
pop
mov
mov
fs
inc
jae
cmpsb
mov
adc
jbe
push
cli
or
or
sub
jecxz
popa
push
cld
push
inc
xchg
das
bound
dec
cmp
pop
cmp
and
add
lea
sub
sbbl
das
mov
mov
sbb
addb
mov
call
cwtl
sahf
das
mov
cltd
in
nop
jbe
icebp
pop
mov
pop
rcrb
mov
das
cmpl
mov
imul
xchg
das
mov
cmp
lcall
fsubs
fs
cwtl
mov
enter
pop
outsl
fsubs
arpl
out
dec
mov
scas
popa
inc
xchg
das
stos
jbe
xor
xor
les
mov
je
xchg
das
mov
inc
mov
mov
test
mov
sub
sub
addr16
cmp
sbb
push
insb
mov
pushf
das
mov
movsl
repnz
sbb
mov
xchg
das
mov
jg
fisubrl
xchg
aam
mov
das
mov
lods
xor
mov
sahf
das
mov
mov
lods
test
jecxz
popa
out
sub
das
mov
cmp
popa
repz
aam
xchg
das
mov
xchg
ja
rcrb
and
lock
mov
negl
inc
xchg
das
mov
cli
fiadds
jecxz
xor
out
jbe
mov
bound
jbe
xor
jbe
jl
inc
xchg
dec
sbb
pop
fnstcw
xchg
das
mov
cmp
inc
xchg
das
mov
mov
das
addl
push
mov
notl
dec
insb
mov
lea
inc
push
insb
mov
and
inc
xchg
fldcw
das
mov
inc
shll
mov
sbb
jbe
rolb
mov
cld
add
dec
jbe
dec
mov
loopne
xchg
das
mov
mov
test
negl
dec
cmpsl
loope
inc
xchg
das
stc
mov
stc
cmp
cmp
in
push
inc
xchg
das
or
lcall
sub
cmp
dec
out
mov
rcrb
inc
xchg
scas
jp
sbb
mov
push
mov
clc
aas
addl
push
inc
xchg
das
arpl
adc
dec
cmpsb
jge
mov
enter
nop
nop
inc
mov
das
mov
adc
stos
cwtl
sahf
das
mov
testl
andl
je
xchg
das
mov
push
xlat
mov
pop
ret
mov
dec
aam
mov
das
mov
aad
test
adc
aad
xchg
das
mov
and
aad
cmc
nop
push
movsl
pmaxub
inc
push
cmpsb
je
xchg
das
mov
pop
lock
pop
stos
and
xor
hlt
stc
cmp
cmp
mov
test
sti
sbb
inc
add
cmp
jmp
sbb
mov
inc
xor
or
pop
cmc
repz
das
mov
imul
dec
out
mov
cs
test
sub
movsl
xchg
stos
jbe
mov
std
xor
shrb
xlat
in
or
rolb
pushf
mov
das
mov
lock
mov
notb
lock
je
xchg
das
mov
enter
lea
xor
mov
xor
xor
mov
pushf
das
mov
inc
pop
push
lods
dec
out
cmp
das
push
and
subb
jge
mov
insb
insl
push
lret
cli
pop
out
adc
jne
imull
addl
fidivs
mov
inc
xchg
das
mov
jmp
test
jne
dec
inc
xchg
das
mov
push
cmp
inc
xchg
mov
mov
mov
mov
inc
xchg
das
mov
cmp
aas
xchg
das
mov
scas
lret
pop
pop
andl
aam
ja
and
push
mov
inc
jb
fs
mov
movsb
mov
stos
popf
stos
das
mov
jae
sbb
scas
push
lods
sub
dec
dec
out
iret
repz
xchg
das
mov
pop
add
repz
gs
mov
das
mov
adc
call
lds
iret
repnz
js
cmp
dec
xchg
lea
aaa
scas
jle
pop
mov
lahf
inc
stc
pop
inc
fistpl
jle
mov
add
aad
pop
pop
cmp
mov
arpl
call
lret
jne
mov
pop
mov
movsl
push
push
in
out
inc
aad
in
mov
popa
lahf
movsl
pop
rcll
stos
xor
idivb
add
add
jnp
jp
rcrb
mov
bound
das
je
xchg
das
mov
in
out
add
in
push
adc
out
pop
dec
xchg
or
mov
dec
dec
div
sbb
add
mov
nop
fidivs
mov
inc
xchg
das
popf
sub
fwait
das
mov
jecxz
inc
xchg
das
mov
dec
xor
aaa
int3
and
inc
xchg
lcall
das
mov
outsl
dec
xor
out
cmp
repnz
fsubrs
xchg
push
iret
cwtl
mov
das
bound
mov
sbb
lea
xor
jbe
mov
orl
pop
xlat
adc
push
pop
rcll
inc
negl
push
inc
xchg
das
addr16
mov
lods
and
jbe
mov
and
nop
pop
mov
movsb
repnz
stos
insl
call
andb
das
push
sub
jge
mov
addr16
push
cld
push
inc
xchg
das
stos
cwtl
movsb
das
mov
cmpsb
cmp
cmp
dec
lods
xor
jns
xchg
jl
sbb
sahf
scas
mov
cmc
push
push
sub
je
movsl
and
mov
shll
xchg
adc
cmc
mov
lds
das
pop
mov
jle
mov
push
or
sbb
repz
push
mov
pop
sbb
cmpsb
rolb
push
inc
mov
adc
fs
xchg
and
sub
insb
xchg
and
stos
push
cmp
mov
jle
jg
lret
ljmp
mov
nop
jae
xchg
das
mov
adc
fwait
and
sub
or
lock
je
xchg
das
mov
aas
scas
fmull
xor
mov
es
inc
mov
gs
movsb
mov
inc
xchg
das
stos
sbb
and
xchg
das
mov
stos
cltd
or
push
sbb
sahf
mov
xchg
jb
xchg
mov
lock
or
xchg
jb
lods
mov
das
test
xor
xchg
xor
inc
xchg
das
stos
xor
or
and
adc
fs
inc
inc
push
mov
inc
xchg
adc
push
jno
je
pop
adc
negb
movsl
and
push
jno
xorl
mov
scas
lea
das
stos
jl
cmp
cmpsl
sbb
scas
ljmp
scas
ljmp
xchg
es
std
push
push
rclb
push
icebp
inc
test
push
dec
xlat
push
icebp
inc
test
dec
nop
es
in
and
int3
xchg
inc
shll
add
add
adc
xchg
mov
lret
in
xor
int3
xchg
and
fldenv
sub
dec
out
dec
loop
jmp
adc
jbe
loop
xchg
aas
jnp
push
daa
fcmovne
xchg
xchg
bswap
int3
xchg
es
cmpsb
es
in
xor
int3
xchg
and
test
jbe
loop
xchg
es
std
xchg
dec
jl
jne
xchg
lret
add
pop
cmp
or
adc
sbb
fcmovne
xchg
ljmp
xchg
fisttpl
and
mov
sub
fcmovnbe
adc
fcmovne
xchg
cli
lods
push
cmc
cmpsl
sbb
xchg
fisttpl
and
int3
xchg
movsl
fbstp
or
jmp
jmp
pop
repz
mov
lods
fmulp
xchg
es
jne
lods
push
cmc
cmpsl
sbb
xchg
fisttpl
and
int3
xchg
movsl
fbstp
xchg
lods
out
int3
xchg
es
not
add
xchg
es
pop
mov
and
mull
mov
mov
add
jecxz
xchg
es
cwtl
es
jbe
jnp
mov
fcmovne
dec
dec
daa
leave
daa
pop
push
test
adc
stos
push
repnz
incb
es
adc
fcmovne
xchg
lods
pop
sub
and
adc
or
push
repnz
ret
fildl
pop
inc
push
test
icebp
vpcmpeqd
jbe
push
lds
int3
jbe
xor
adc
fcmovne
xchg
xchg
aad
mov
jnp
out
push
rcll
mov
add
xchg
fstpt
xor
bound
sub
int3
xchg
pand
xchg
es
sub
push
fwait
push
cmp
sbb
int3
xchg
test
loope
sub
iret
dec
jge
imull
fcomi
xchg
es
data16
pop
in
and
fildll
ret
push
add
inc
mov
test
loope
xchg
es
xor
push
popf
add
fidivl
mov
fisubl
fcmovne
xchg
sub
fcomi
mov
fcmovne
in
cmp
inc
xchg
xor
xor
int3
xchg
es
xchg
fistpl
push
adc
je
mov
xchg
adc
lcall
or
in
outsl
cltd
rcr
xchg
fldt
jge
push
and
fsts
adc
jae
int3
loopne
aad
daa
fcmovne
xchg
pop
jl
insb
mov
fsubl
push
popf
pop
loop
sahf
es
in
sbb
int3
xchg
lock
dec
xlat
push
insl
lret
push
fcmovne
xchg
les
mov
or
add
mov
lods
xlat
test
mov
es
pushf
es
mov
loope
loop
cs
roll
adc
xor
int3
xchg
stc
sbb
sub
pop
daa
fcmovne
xchg
xchg
xchg
es
lsl
shll
xchg
shl
nop
xchg
fucomp
adc
int3
lods
cld
mov
or
xchg
dec
xchg
es
dec
cmp
push
in
xchg
xchg
out
das
fcmovne
xchg
mov
or
test
mov
mov
xor
out
push
jae
jmp
mov
pusha
jl
sub
into
inc
xchg
xchg
and
setp
xchg
scas
mov
xor
adcl
es
in
sub
dec
xchg
dec
push
std
push
mov
push
lret
test
int3
xchg
es
rdpmc
mov
fisubl
add
xchg
adc
in
imul
and
js
sbb
sub
int3
xchg
cmpsl
sbb
lret
or
enter
jnp
out
in
int3
xchg
es
fld
push
xor
lods
add
aad
mov
xchg
es
sbb
fcmovne
xchg
cli
jnp
out
sbb
cmpsl
sub
loopne
dec
adc
in
sub
int3
xchg
xchg
mov
or
dec
and
fsubrs
push
jg
mov
aad
add
dec
or
call
xchg
out
xchg
es
mov
jnp
aam
mov
int3
xchg
es
xchg
xchg
mov
roll
mov
outsb
movsb
movsb
int3
xchg
scas
iret
mov
and
push
xchg
es
xchg
fisttpl
into
add
roll
test
test
ds
cmp
sbb
jl
jnp
sbb
fcmovne
xchg
test
xchg
lods
xchg
es
jne
scas
test
sbb
int3
xchg
incl
cmpsb
es
sub
xchg
in
pop
out
push
xor
repnz
es
addps
popf
insb
xchg
aam
negl
popf
insb
pusha
jmp
sub
fcmovnbe
push
and
pusha
int
fistl
inc
nop
int3
xchg
pxor
xchg
es
add
and
inc
lret
mov
bound
fcomip
xchg
es
sbb
or
pusha
xor
mov
or
es
adc
es
test
xchg
es
or
clc
dec
fldenv
fcmovne
xchg
test
mov
in
das
fcmovne
xchg
and
push
out
shll
mov
pop
adc
lahf
mov
jl
lret
push
cld
cmpsl
sbb
xchg
fisttpl
and
int3
xchg
movsl
mov
sub
fnsetpm(287
scas
decb
and
int3
xchg
pop
push
rcll
pusha
pop
leave
mov
fistl
out
out
outsl
cltd
rcr
xchg
fldt
xchg
es
push
out
inc
insb
insb
mov
mov
jecxz
int3
xchg
es
xchg
es
add
dec
xlat
jbe
data16
cmpsb
adc
xchg
test
loop
xchg
es
in
cs
xchg
fnsave
sub
orl
int3
xchg
es
sbb
pop
repnz
mov
ljmp
ljmp
int3
xchg
es
lcall
mov
pop
jp
mov
add
es
data16
mov
mov
cmove
xchg
es
pop
dec
xchg
ret
or
cld
outsb
pop
cli
or
mov
push
push
sahf
fs
mov
mov
xchg
add
fucom
cmpsl
clc
and
mov
mov
jecxz
xchg
cmp
ljmp
cs
cmp
rcll
xchg
xchg
aas
pop
inc
sti
or
jno
mov
ds
sbb
fmul
xchg
es
xlat
js
pop
jo
push
nop
mov
push
nop
mov
jns
jo
loopne
xchg
es
add
sarl
or
push
imul
in
int3
xchg
es
push
inc
enter
mov
dec
lret
mull
jbe
or
xchg
mov
or
lea
fcmovne
jg
dec
mov
inc
push
sbb
fmul
xchg
sub
fcmovnbe
or
pavgw
xchg
es
pop
inc
sbb
jo
sub
cs
sbb
out
cs
xchg
es
in
xlat
int3
xchg
sub
fldt
push
add
lea
out
outsl
cltd
rcr
xchg
es
cmpsb
es
sub
shl
pop
sbb
call
sub
cmpsl
xlat
mov
ds
bndstx
int3
xchg
cmpsl
push
cmpl
fcmovne
xchg
mov
xchg
mov
xchg
mov
xlat
cmpsb
adc
xchg
test
loop
cmpsl
es
jbe
push
xchg
xor
repz
es
lea
das
add
dec
xlat
fxch
and
addb
ss
sbb
add
orb
sbb
das
fcmovne
xchg
sub
fldt
push
int3
xchg
es
xlat
pop
jnp
stos
es
sti
xchg
jecxz
inc
sbb
cld
stos
mov
inc
mov
cmpsl
or
xchg
es
lea
fcmovne
jp
add
cmpsb
adc
jle
dec
jmp
adc
or
and
xor
mov
psubusw
xchg
es
xchg
jne
es
lods
sub
adc
scas
out
inc
add
cs
mov
cmc
xor
mov
sbb
dec
lock
addl
std
cmpsl
push
xchg
pop
push
push
sub
test
stc
and
adc
andb
adc
int3
xchg
sub
fldt
push
imul
fcmovne
xchg
inc
iret
divl
cmp
xchg
mov
int3
xchg
es
push
daa
fcmovne
xchg
push
out
int3
xchg
es
pop
pushl
dec
and
mov
push
aas
mov
mov
xchg
loope
jbe
xchg
sub
fcmovnbe
sbb
int3
xchg
xchg
xchg
es
mov
jno
jne
pop
in
xchg
pop
push
aad
add
test
int3
xchg
es
adc
pop
mov
jne
cs
sbb
adc
add
scas
and
fcoms
out
aas
mov
mov
ficompl
fildll
pop
xchg
fdivl
push
out
pop
or
add
mov
int3
xchg
es
xchg
stos
fcmove
xchg
es
xchg
es
pop
test
int3
or
mov
sub
mov
cli
adcb
jg
std
mov
or
xchg
sub
fninit
addr16
pop
or
movsb
fsubrp
movsb
out
cmpsb
inc
push
adc
fisubs
mov
inc
shr
stos
adcl
icebp
repnz
lds
push
imul
xchg
fsubp
cmpsb
or
or
fs
hlt
sub
cltd
out
lret
mov
int3
xchg
es
mov
jnp
xchg
es
inc
addr16
xchg
mov
add
std
in
sub
es
movsl
push
sahf
cld
jecxz
dec
pushf
fwait
pop
jl
xor
push
fsts
and
pop
int
fisttpl
jo
dec
outsb
cmpsl
push
fbld
push
fbld
les
xchg
mul
jl
aam
fcmovne
or
es
lods
fnstenv
int3
xchg
sub
fucomi
or
fidivrs
xchg
fldt
rolb
xchg
fistpl
dec
cli
sub
dec
clc
lret
xchg
fcoml
movntps
int3
xchg
xchg
and
je
pop
xchg
stos
es
cmp
xor
pop
dec
insb
lea
jb
jg
xor
out
xchg
es
and
and
jne
dec
les
es
sti
in
add
xor
sbb
in
sbb
mov
es
sbb
fcmovne
xchg
psraw
xchg
es
test
mov
jge
add
pop
or
es
pop
call
mov
pop
lods
xlat
mov
xchg
lock
xchg
es
std
mov
mov
scas
sti
iret
lcall
int3
xchg
movsl
xlat
mov
sub
fldt
fcmovne
xchg
mov
pop
mov
mov
ror
dec
inc
movsl
and
data16
and
int3
xchg
and
int3
xchg
es
sarl
es
jbe
fcmove
xchg
es
cltd
jl
and
pop
mov
xchg
jle
mov
ss
mov
aad
fisttps
imul
mov
fimull
push
mov
and
out
dec
ret
insb
in
sbb
int3
xchg
xchg
popa
xchg
push
out
aaa
xchg
in
and
mov
mov
lcall
dec
lcall
int3
ljmp
hlt
xchg
aam
out
push
push
jo
imulb
int
cmpsl
cld
adc
in
arpl
int3
data16
and
es
lcall
sub
jp
mov
int3
xchg
es
in
and
int3
xchg
idivb
in
scas
sub
inc
pop
adc
mov
xchg
fistl
sbb
xorl
dec
repnz
int3
xchg
scas
mov
xor
test
xchg
int3
push
mov
loop
xchg
es
sub
lock
in
cmpsb
out
jecxz
push
or
mov
pop
in
sbb
pusha
imul
call
xchg
scas
out
mov
and
int3
xchg
dec
xor
in
adc
int3
xchg
or
fmul
lret
orb
lcall
aad
fldt
aam
dec
int3
pop
popa
xor
es
and
movsl
jne
call
mov
dec
daa
scas
adc
mov
js
std
and
pop
pop
stc
lcall
setp
fcmovne
pop
in
dec
lret
in
sbb
or
jmp
scas
repz
es
pop
push
sbb
add
mov
pop
jecxz
insb
push
jmp
mov
or
es
pop
jmp
scas
insb
inc
adc
lock
mov
fcmovne
dec
mov
jbe
int
fldt
jl
or
es
mov
xchg
fmull
pop
movsl
mov
xchg
cmpsw
and
gs
xchg
pop
incb
loop
es
xchg
cmpsl
fmul
xchg
es
in
sbb
int3
xchg
xchg
fs
dec
in
sarl
iret
scas
xchg
jbe
sub
sti
sbb
xchg
stos
fmulp
xchg
es
xlat
xchg
push
jl
push
fstps
mov
adc
repnz
int3
xchg
scas
mov
decb
jge
and
int3
xchg
cmpsl
push
jne
aas
mov
xlat
cmpsl
push
jne
aas
mov
out
xchg
lock
mov
shll
push
jne
insb
fcmovne
or
es
xchg
neg
les
call
xor
icebp
mov
dec
movsl
dec
movlhps
lds
push
imul
fcmovne
xchg
jns
out
out
mov
and
jecxz
inc
aad
jbe
jbe
loopne
xchg
es
lods
push
pop
pop
jle
cmp
fidivrs
imul
jae
inc
or
aad
fimuls
and
lock
xchg
das
fcmovne
xchg
xchg
inc
xchg
adc
dec
cmp
sub
sub
fcmovnbe
push
sub
int3
xchg
call
add
test
int3
xchg
es
xchg
fldt
sub
mov
subb
sub
cmp
mov
dec
movsl
es
xchg
test
int3
xchg
es
xchg
xchg
mov
sbb
fmul
xchg
sub
fnsetpm(287
or
sub
xchg
fstpt
call
push
dec
jl
push
fsts
es
xchg
fstpt
xor
mov
mov
xchg
lahf
xchg
pop
in
sub
push
fstpl
sub
cmp
sub
pop
sub
pop
xchg
mov
xchg
sub
cmp
xchg
fstpt
pushf
adc
movsl
fwait
into
pop
xchg
in
int3
xchg
pxor
xchg
es
popa
dec
fnstenv
mov
je
iret
push
add
iret
mov
scas
decb
and
int3
xchg
cmpsl
push
rcll
inc
scas
in
mov
fmul
xchg
es
lidtl
xlat
mov
mov
cmpsl
pop
rcll
es
cmc
and
fistpll
cmp
ss
push
mov
jns
or
adc
or
es
pop
out
dec
ret
insb
dec
inc
loop
aad
adc
lcall
rcll
and
mov
es
xchg
stos
xchg
es
in
add
rclb
mov
ss
sti
mov
jne
push
or
mov
loop
xchg
es
or
orb
fcmovne
xchg
cli
or
mov
pop
les
es
add
push
sub
pop
out
mov
shr
jbe
adc
adc
add
cmp
pusha
cli
loop
test
fcmovne
jbe
imul
inc
mov
mov
xchg
into
adc
pop
or
or
pop
or
cli
sahf
popf
jmp
dec
adc
aad
cltd
imul
es
dec
fstl
jnp
shr
add
rcr
xchg
les
bndstx
int3
xchg
sub
fnsetpm(287
outsb
dec
test
xchg
scas
out
mov
sub
fidivs
movsb
mov
es
sbb
in
cmpsl
inc
lds
jb
pop
cmp
inc
insl
adc
add
xchg
fistl
fcomi
stos
add
insb
fistl
and
es
push
movsb
cmp
jmp
das
adc
int3
xchg
es
rol
cmc
pop
call
or
lcall
cltd
xchg
inc
int3
fdivrs
xchg
iret
xchg
fistl
rcrb
mov
lcall
hlt
and
imul
mov
pop
jecxz
call
pop
jecxz
jecxz
scas
clc
dec
fldenv
fcmovne
xchg
test
xchg
mov
es
lahf
je
push
push
loope
test
das
fs
inc
mul
in
push
test
sub
int3
xchg
mov
adc
sbb
pop
push
test
mov
inc
outsl
adc
xchg
xchg
fildl
pop
jb,pn
fucomp
jmp
sbb
jns
sub
jns
fildl
push
fstps
stos
jmp
push
cmpsb
es
in
xor
int3
xchg
repz
es
fcoms
or
push
lret
in
mov
fists
add
mov
int3
xchg
cli
pop
repnz
icebp
lods
and
fnstenv
int3
xchg
int3
xchg
es
mov
or
or
xor
test
fimull
repz
rcrl
mov
mov
cltd
es
adc
sub
jnp
insb
in
cmpsl
fcmovne
xchg
xchg
ds
sahf
push
adc
sbb
push
dec
mov
mov
mov
jecxz
fisttps
fcomps
adc
jbe
data16
pop
push
jns
in
pop
add
rclb
inc
push
out
fldt
es
jbe
or
dec
out
mov
jle
mov
xchg
loopne
adc
xchg
sbb
xchg
fisttpl
orb
or
imul
fmul
xchg
or
call
popa
rclb
fcmovne
bound
fisttpl
les
mov
and
out
adc
int3
xchg
es
in
rol
mov
fiaddl
pop
outsl
cltd
rcr
xchg
es
pop
das
fcmovne
xchg
xchg
pop
sub
leavew
mov
fldt
sub
sub
fcmovne
xchg
lret
adc
or
fsubl
sub
or
mov
pop
ja
es
adc
pop
fcoml
mov
fnstsw
int3
pop
aad
fxch
mov
xchg
push
and
mov
pop
sub
fldt
push
pop
pop
and
pop
inc
jns
pop
push
outsb
pusha
mov
pop
add
xchg
fistpl
rol
mov
pop
pusha
hlt
dec
daa
fcmovne
xchg
stos
loop
xchg
es
xchg
fisttpl
push
outsl
push
pop
lret
mov
jnp
hlt
inc
rol
ljmp
adc
pmaxsw
xchg
rolb
push
mov
push
clc
and
enter
es
xchg
dec
fbstp
fisubl
add
xchg
fldt
outsl
mov
or
sub
test
cmp
pop
lods
or
dec
cld
mov
sbb
add
loop
xchg
es
cmpsl
push
mov
iret
push
push
mov
pop
pop
jnp
in
xor
int3
xchg
inc
adc
push
fldenv
andl
aad
daa
fcmovne
xchg
xchg
imul
jecxz
xchg
es
je
movl
sub
jne
push
aad
sub
int3
xchg
cli
pop
sub
sbb
xchg
sub
adc
mov
es
xchg
mov
int3
xchg
es
jl
out
pop
imul
adc
adc
fcmovne
xchg
pxor
xchg
es
xchg
das
pop
popa
loop
push
jg
dec
out
inc
imul
push
out
adc
in
pusha
or
fcmovne
xchg
scas
mov
sub
fcmovnbe
or
sub
fldt
fmul
xchg
es
fadds
push
out
insb
out
sub
int3
xchg
rclb
jp
inc
mov
out
pop
jnp
jne
pop
or
jbe
arpl
addr16
cmc
mov
clc
jbe
arpl
adc
int3
xchg
push
mov
lods
mov
xorl
call
or
es
lods
xlat
mov
add
jl
repnz
mov
push
into
pop
add
xchg
fistpl
cmc
adcb
cmp
in
xor
fxch
xchg
es
cmp
jbe
jecxz
pop
loop
xchg
es
pusha
xchg
mov
jecxz
repz
es
cmpsb
or
cmpsb
sahf
shrl
push
and
xor
es
or
adc
jbe
adc
mov
and
clc
scas
and
fldenv
pop
pusha
add
xchg
fistpl
inc
cld
out
cmp
sbb
int3
xchg
xchg
push
cltd
es
jl
sbb
and
es
testl
mov
in
and
push
scas
dec
aad
in
scas
push
mov
decb
hlt
lret
loop
xchg
es
jbe
or
test
in
insb
scas
stc
dec
fsubl
fcmovne
xchg
cmpsl
add
xchg
fisttpl
inc
scas
push
mov
es
in
sub
int3
xchg
pop
mov
inc
ds
aas
push
jo
int3
subb
std
cmp
jg
fsubrp
push
mov
add
out
pop
ds
int3
xchg
daa
or
fcmovne
xchg
daa
sbb
popf
pop
mov
outsb
orb
inc
and
int3
xchg
daa
push
xchg
push
fcmovne
xchg
add
ret
and
or
fucomp
and
xchg
fldt
fcmovne
xchg
ret
pusha
fmuls
push
dec
mov
push
dec
push
shlb
int3
sub
orb
mov
scas
sbb
push
out
dec
repz
test
pushl
int3
xchg
xchg
ja
ret
push
cmp
fcmovne
xchg
scas
out
int3
xchg
es
xchg
mov
negb
push
sarb
cltd
es
test
test
sbb
aad
jns
dec
test
xor
fcmovne
xchg
les
lods
inc
stos
in
nop
xchg
mov
outsl
arpl
cmp
scas
and
fldenv
mov
fldt
xchg
adc
cli
jne
loop
xchg
es
adc
lock
int
push
jle
pop
or
push
lcall
mov
xchg
es
mull
cwtl
inc
push
pop
mov
insl
push
adc
outsl
adc
paddsw
xchg
xor
out
jle
dec
push
imul
jge
push
mov
cmpsl
sbb
xchg
fisttpl
and
int3
xchg
movsl
fbstp
xchg
fstpt
test
pop
dec
pop
scas
filds
jne
call
or
es
xchg
in
mov
or
sub
fldt
jle
mov
or
aad
ficoms
add
cltd
ret
add
pop
insl
addr16
dec
jne
push
outsl
xchg
es
test
mov
push
fcmove
xchg
es
test
div
fisubl
mov
aad
iret
or
es
es
xchg
movsb
fmul
xchg
adc
xchg
es
push
and
int3
xchg
xchg
jne
sbb
int3
xchg
dec
adc
es
into
dec
jns
cwtl
xchg
mov
jnp
pmulhw
rcll
mulb
inc
sbb
js
and
daa
fcmovne
xchg
pusha
jl
sar
aad
xchg
fmulp
xchg
xchg
push
cwtl
es
dec
adc
insb
incb
mov
jecxz
int3
xchg
es
cmpsb
es
fbld
mov
test
sub
jl
and
sti
mov
outsb
adc
inc
xor
mov
xchg
dec
lcall
in
out
pop
fcmovne
xchg
testb
sub
fsubrp
dec
test
mov
fsts
and
pop
xor
add
xorl
in
pop
jecxz
in
fcmovne
in
sub
int3
xchg
outsb
mov
push
ja
jp
stos
jmp
movsl
cli
jns
std
std
mov
int3
xchg
xchg
lock
xchg
fistpl
aas
jnp
jle
pop
stos
adc
mov
jne
pop
in
loop
adc
fcmovne
in
xor
int3
xchg
enter
mov
inc
stc
jl
adc
jp
push
pop
xchg
fldt
jns
sti
insb
jl
adc
mov
adc
inc
xchg
cltd
push
push
jecxz
xchg
es
aaa
out
mov
xchg
xchg
lret
jl
jne
pop
in
ret
loop
leave
es
jbe
jns
iret
test
xchg
xchg
push
cwtl
es
paddsw
add
mov
mov
loop
movsl
es
in
sub
int3
xchg
jmp
insl
push
adc
adc
cmp
and
push
push
pop
sarl
pop
pop
hlt
mov
add
repz
xchg
fistpl
out
jb
fwait
pop
mov
xor
clc
ja
dec
test
inc
fsts
es
jne
push
cmp
ljmp
mov
xor
jno
repnz
cmp
pop
testl
out
xchg
in
les
adc
adc
cmovb
fmul
xchg
es
dec
jno
and
mov
jl
xchg
cmpsl
hlt
int3
xchg
es
in
pop
fcmovne
xchg
in
and
adc
call
ret
and
jl
adc
and
es
jl
shl
mov
jnp
cmc
bnd
jnp
pop
lret
xchg
fistl
xchg
int3
pusha
daa
or
in
sub
fldt
fcmovne
xchg
es
xchg
fisttpl
mov
imul
out
cmpsb
sbb
out
lods
push
shll
or
ret
push
daa
fcmovne
jbe
sbb
iret
push
stos
outsb
adc
sub
fcmovnbe
sbb
fcmovne
xchg
xchg
inc
test
stc
cmpsl
sbb
xchg
fisttpl
and
int3
xchg
movsl
mov
aad
es
adc
fcmovne
xchg
xchg
es
mov
dec
fisubl
fcmovne
xchg
loop
popf
es
in
adc
int3
xchg
gs
sub
xchg
push
arpl
dec
hlt
hlt
xor
pop
fwait
jae
adc
jnp
xchg
es
xchg
fistpl
sbb
and
int
test
xchg
es
xchg
cmpxchg
or
cmpsb
cli
xorl
loop
test
fcmovne
xchg
cmpsb
xchg
es
xchg
fistl
adc
fcmovne
add
xchg
es
or
pop
jnp
adc
aad
repz
fcmovne
xchg
test
add
xchg
es
test
xor
jo
inc
add
dec
or
push
sbb
scas
or
lret
adc
es
xor
jle
jle
fldt
fcmovne
xchg
and
pop
gs
inc
xchg
in
fsts
jge
push
icebp
pop
mov
popa
pop
cld
imul
int3
xchg
mov
mov
jecxz
insb
out
sub
int3
xchg
and
xlat
mov
test
call
hlt
xchg
es
out
loop
xor
cmpsb
cmpsb
lock
arpl
and
jbe
sub
jne
pusha
or
mov
fcmovne
xchg
sub
fucomi
sbb
loop
xchg
es
add
adc
jmp
mov
jmp
pop
or
pmulhuw
xchg
es
repz
jecxz
into
inc
aam
and
inc
rorl
inc
pop
adc
xchg
jne
pushw
add
xchg
fistl
push
dec
dec
test
in
test
sub
jl
leave
outsb
adc
test
pop
jl
push
bnd
test
add
push
xchg
test
sub
jl
push
sub
xchg
push
cwtl
es
dec
sub
sub
fcmovnbe
pop
sub
int3
xchg
cli
lods
jns
out
jecxz
scas
orl
dec
xor
scas
sbb
push
clc
icebp
lods
iret
pop
loop
es
xchg
mov
or
jbe
push
sahf
and
int3
jbe
jns
out
add
sbb
add
xchg
or
imul
es
jne
push
sbb
dec
xor
mov
dec
or
pop
mov
adc
loop
xchg
es
adc
jl,pn
inc
inc
mov
push
mov
test
jne
scas
lret
loop
nop
es
in
and
int3
xchg
lea
stos
iret
or
es
iret
sub
fldt
add
xchg
fisttpl
sub
mov
pop
insb
jl
adc
xchg
es
xchg
fistpl
cltd
popf
sbb
xor
and
int3
xchg
sbbb
shrb
fldt
mov
xchg
es
xchg
clc
jns
enter
mov
test
pusha
mov
xchg
es
mov
loopne
pushf
adc
jp
or
imul
jl
jns
xchg
fildl
xchg
jl
or
xlat
pop
jns
lcall
push
es
xchg
mov
int3
xchg
adc
add
in
xchg
mov
adc
adc
mov
movq
mov
jnp
xchg
test
xchg
jl
adc
mov
loop
test
push
fcmovne
xchg
loopne
xchg
xchg
incb
nop
or
inc
lods
fs
negl
in
int3
xchg
es
sahf
and
fs
mov
outsb
adc
mov
jnp
push
clc
push
insb
jl
push
out
cs
mov
es
adc
fcmovne
xchg
jns
std
mov
sbb
int3
xchg
xchg
loopne
xchg
repz
es
adc
sbb
pop
nop
scas
sbb
jae
xchg
xchg
fldt
popa
testb
push
fldl
cmc
leave
xchg
es
xchg
fistpl
stc
pop
mov
cmpsl
mov
loop
jg
fcmovne
or
and
ljmp
push
sbb
fimull
cli
adc
xchg
daa
or
xchg
pop
add
xchg
fistpl
inc
sbb
popf
jle
aam
xor
sbb
scas
sbb
add
adc
or
dec
in
push
mov
int3
xchg
es
ret
push
push
es
xchg
mov
int3
xchg
es
xchg
out
xor
loope
xor
sub
xchg
inc
or
fcmovne
xchg
scas
out
mov
daa
fcmovne
xchg
scas
xor
loopne
dec
jne
mov
xchg
es
xchg
es
xchg
scas
fxch
xchg
es
xchg
es
or
sub
xchg
fldt
shr
sub
in
pushf
mov
aad
fsts
xchg
les
push
xchg
es
add
sbbb
lret
cmc
sub
cltd
push
cltd
popf
addl
adc
sbb
cwtl
cmpsl
add
mov
es
xchg
push
sbb
fcmovne
xchg
pand
xchg
es
cmpl
push
fs
cltd
and
int3
xchg
test
mov
or
sbb
int3
xchg
sub
fcomi
movsl
es
push
data16
mov
adc
ret
std
mov
add
iret
cli
popa
hlt
popa
repz
or
mov
test
push
leave
xchg
fisttpl
adc
dec
fcoml
xchg
lock
pop
add
xchg
fildl
sub
enter
sbb
es
sub
test
fistps
repnz
fstpt
add
dec
jbe
std
lret
loop
es
xchg
scas
fmul
xchg
es
adc
mov
gs
les
es
cwtl
movsb
jecxz
in
cltd
xchg
inc
dec
and
jnp
fsts
and
mov
xchg
es
in
das
fcmovne
xchg
adc
jmp
std
push
push
add
in
out
pop
ficoms
ret
repz
es
fisubs
mov
subl
int3
xchg
scas
xlat
mov
mov
int3
xchg
adc
jbe
std
imul
int3
xchg
es
outsl
xchg
aaa
js
mov
in
fisubs
sub
cli
push
inc
jl
inc
and
xchg
xchg
lea
fcmovne
and
jo
lret
loop
cwtl
es
imul
xchg
mov
jnp
es
inc
adc
jg
ret
leave
call
mov
mov
pop
inc
ret
jge
in
add
dec
adc
xchg
es
adc
lods
cmp
jmp
adc
adc
lret
dec
fisubl
fcmovne
xchg
psubsb
xchg
es
outsb
sbb
lret
faddl
push
dec
jno
ss
testb
in
or
int3
xchg
es
xchg
es
adc
out
sub
fcmovnbe
sbb
fcmovne
xchg
incl
sbb
fcmovne
xchg
xchg
insb
pop
mov
fcmovnbe
sbb
int3
xchg
pmaxsw
xchg
es
add
or
in
mov
inc
inc
jb
fbld
mov
scas
dec
sub
xchg
es
subps
test
hlt
std
sub
cmpsb
es
jne
xchg
mov
sub
lock
xor
pop
int
xchg
sbb
jo
jnp
adc
fcmovne
xchg
push
lods
test
adc
sbb
sbb
int3
xchg
pop
push
inc
sti
and
ror
add
int3
cwtl
pop
sarb
sub
xchg
fisttpl
imul
pop
test
call
xchg
es
xchg
fstpt
jne
inc
xchg
fcomi
mov
fcmovne
mov
pop
mov
add
dec
mov
fcmovne
xchg
cmpsb
xchg
es
in
sub
subl
jbe
mov
pop
gs
mov
xchg
mov
sbb
push
or
xchg
es
cmpsb
es
xchg
mov
int3
xchg
es
xchg
es
cmpsb
mov
out
insb
mov
inc
push
dec
jbe
xchg
mov
adc
adc
dec
jmp
gs
xchg
ficoml
loopne
pop
adc
jne
jns
testl
jl
test
test
jbe
or
xchg
mov
insb
jne
add
jne
enter
push
sub
enter
loop
xchg
es
in
xor
int3
xchg
jne
mov
fidivs
and
dec
inc
nop
xlat
and
daa
fcmovne
and
mov
adc
and
jo
fsts
lods
jle
aas
sub
adc
cmp
fstps
xchg
stos
pusha
or
fbld
push
int
scas
in
sbb
cwtl
aaa
into
test
or
test
xchg
stos
dec
xchg
fists
popf
jne
xchg
push
and
and
xor
mov
pusha
pop
mov
push
fnstcw
mov
and
out
pop
push
lcall
inc
aas
sub
pop
pop
push
fsts
lods
sub
sub
adc
cmp
fsubs
xchg
stos
pusha
xor
ret
pop
test
lcall
into
test
or
loop
aaa
ret
push
xchg
es
add
or
popa
push
mov
dec
lcall
dec
lock
or
scas
sub
mov
mov
pop
sub
and
xchg
jb
jl
mov
and
or
sub
fwait
mov
mov
pop
mov
push
scas
and
and
int3
or
sub
inc
int
flds
fidivl
int3
xchg
pmuludq
mov
and
mov
fcomi
nop
es
push
pop
repz
cmpsl
jle
movsb
outsl
shrb
lcall
pop
and
scas
hlt
xchg
es
mov
push
orb
mov
popf
es
push
pop
push
cmp
sbb
loopne
xchg
rcrb
flds
fs
and
pushf
fs
sub
push
mov
pusha
fcmovne
jo
stos
hlt
xchg
es
mov
push
test
arpl
int3
push
push
push
aam
and
jbe
pop
add
mov
jo
mov
clc
mov
xchg
es
xchg
cli
adc
std
sbb
jo
test
int3
mov
push
xchg
arpl
int3
pop
push
push
dec
mov
mov
out
int3
xchg
cmp
frstor
arpl
adc
pushf
adc
sub
push
jb
pop
add
xchg
fldt
inc
xlat
dec
pop
inc
xlat
rclb
pop
jae
std
push
push
adc
daa
insb
into
popf
pop
fimuls
popf
lret
adcb
mov
and
int3
outsl
insb
jmp
enter
jns
and
sub
mov
iret
nop
clc
lret
adc
xor
mov
fistps
xchg
adc
loopne
sbb
dec
idivb
out
lret
jns
frstor
sub
jl
clc
lret
ja
mov
sub
sbb
arpl
push
sbb
dec
enter
add
clc
xchg
sub
sbb
mov
loop
pop
cwtl
mov
mov
loopne
lods
outsl
add
int
clc
lret
and
scas
inc
mov
fadds
stc
mov
sbb
mulb
cmc
enter
jb
mov
jnp
mov
mov
sub
pusha
jmp
cltd
pop
jmp
sbb
stos
jno
jmp
sbb
cmp
sub
cli
push
lcall
ds
lds
or
push
cmp
sub
or
test
mov
jae
pushf
scas
jno
xor
or
mov
icebp
mov
or
pop
aad
ljmp
shl
aaa
out
ljmp
xchg
pop
test
sbb
push
lret
adc
cmp
rcll
xor
mov
andl
mov
cmp
jae
jb
sub
add
in
in
loopne
ja
or
and
sbb
push
sti
xchg
in
insb
jno
jo
rcrl
inc
xchg
and
insl
lahf
jg
out
pop
sbb
cmovg
std
add
push
test
sti
add
in
push
fwait
shll
mov
add
dec
int3
ljmp
stos
push
clc
mov
xor
dec
inc
inc
push
add
out
adc
mov
sbb
stos
xor
adc
stc
mov
pop
hlt
lea
jnp
mov
icebp
gs
lahf
xchg
loopne
push
fldenv
hlt
xchg
and
std
fwait
into
adc
pushf
xor
test
push
push
mov
xchg
cld
enter
fiadds
int
jnp
cmc
mov
cmpsl
icebp
xchg
or
pushf
adc
stos
dec
xchg
xchg
add
lcall
pop
mov
out
imul
mov
pop
sub
jge
add
and
adc
sub
xor
orl
xor
pop
jecxz
jmp
jl
imul
mov
xor
dec
mov
notb
cmp
pop
pop
pop
or
stos
in
lea
fldl
mov
fdivp
cmp
fisubrs
js
cmp
pop
dec
lret
mov
sub
fimuls
mov
adc
mov
rolb
push
std
movsb
jmp
lret
arpl
into
mov
fisubrs
inc
popw
orl
sub
dec
mov
ret
in
mov
pop
adc
subb
jo
in
lea
fcoms
cmp
push
jno
or
hlt
fwait
leave
gs
insb
stos
xchg
je
jo
mov
stc
mov
and
cmp
pop
insl
psrld
es
xchg
push
sbb
into
out
dec
sbb
leave
dec
mov
xorl
stc
cmpl
mov
xor
test
mov
mov
stos
std
mov
jno
xor
addr16
xchg
adc
fstpt
xchg
adc
pop
jne
or
fisttpll
mov
jmp
dec
mov
shlb
jo
xchg
mov
js
ret
pop
mov
inc
into
data16
xchg
sub
test
addl
dec
fstpl
push
xchg
hlt
adc
mov
dec
xor
mov
add
xor
cltd
sub
fcmovb
mov
adc
test
inc
dec
pop
inc
lock
lds
mov
andl
fnstenv
shlb
mov
in
inc
and
aas
push
push
test
comiss
stos
icebp
lcall
or
lahf
aad
adc
sbb
jno
xor
xlat
mov
outsb
lods
mov
mov
adc
pop
sbb
mov
enter
and
int3
js
pop
fidivs
xor
sub
repnz
and
mov
inc
push
clc
mov
pop
xorb
adc
inc
mov
popa
mov
push
addr16
lods
cli
adc
pop
mov
cmc
and
out
stos
sbb
out
push
pusha
ja
testb
push
andl
ja
pop
popl
or
xchg
dec
out
dec
test
add
jne
xor
adc
iret
adc
cli
gs
lods
leave
pop
ret
inc
mov
mov
ret
lret
mov
lods
popf
dec
xor
mov
pop
rcrl
ret
sbb
cld
iret
xchg
scas
inc
popf
jbe
sub
popa
sbb
hlt
and
pop
popa
pop
frstor
jae
push
clc
cmp
cmp
pop
adc
sti
cmp
inc
outsb
popa
and
or
imulb
cmp
dec
shrb
jo
into
jo
into
jge
lods
jno
insl
mov
std
jb
fistl
adc
cmp
cld
orb
stc
fistl
fmull
jae
daa
loop
lods
adc
lods
orl
cmp
dec
jmp
mov
dec
sahf
cmp
imul
fwait
in
push
inc
fnsave
add
adc
adc
orb
loopne
dec
sahf
xchg
fiadds
add
xor
inc
mov
popa
pop
popf
mov
sub
cmpl
dec
mov
and
stc
shr
push
repz
loope
add
shl
cli
jge
ja
loop
pop
push
clc
xchg
outsb
mov
mov
ja
jnp
cmc
jl
arpl
test
dec
dec
jg
gs
push
shl
lcall
test
mov
pop
es
std
clc
xor
cmpsl
shrl
imul
enter
mov
dec
sahf
xchg
push
icebp
insb
or
lret
inc
cmp
outsl
int
sbb
ja
mov
cld
pop
jmp
imulb
jg
and
sbb
sbb
dec
add
out
gs
pop
arpl
add
hlt
pop
sub
push
loop
imul
inc
mov
sbb
lcall
or
and
cli
mov
xchg
stc
icebp
int
cmp
mov
dec
add
pop
cmp
fsubrl
pop
in
or
xchg
dec
mov
jmp
sbb
fs
leave
fdivp
in
int3
inc
cmpb
icebp
shrl
cmpsb
dec
sbb
xor
push
ret
sti
jb
sbb
test
adc
jo
leave
cmc
test
mov
adc
or
dec
fscale
push
jbe
mov
lcall
js
inc
arpl
cmp
xorb
outsl
sbb
xor
xchg
adc
cmp
outsl
cmp
or
adc
inc
jg
lcall
popa
ljmp
inc
js
pop
xchg
into
ljmp
punpckhwd
xchg
jmp
movsb
addr16
sub
fwait
rolb
out
ret
ret
out
stos
mov
or
inc
fidivrs
add
push
data16
push
lea
jge
ror
mov
sbb
cmp
test
loopne
into
push
aaa
stos
test
mov
roll
xor
fistl
ror
cmpsl
dec
cwtl
repz
jg
ljmp
fsubrs
pop
cmp
jnp
dec
jno
push
in
leave
cs
and
sub
mov
orl
jb
lds
rorl
int3
arpl
loope
jnp
out
mov
or
incl
xchg
sbb
inc
mov
loope
es
out
inc
int
inc
pop
pop
enter
inc
add
jo
inc
data16
xor
inc
call
stc
bound
mov
js
cmp
or
and
jo
push
ss
fucom
mov
jnp
sbb
fwait
mov
xrelease
enter
or
iret
or
push
cmpl
jbe
cld
cmpsb
std
cmp
push
and
movsb
jge
and
scas
cmp
xchg
call
scas
stos
setp
xchg
dec
dec
loope
fwait
icebp
aas
xor
lcall
out
adc
scas
fcomi
sar
add
add
clc
xchg
and
test
movsl
push
jp
cld
mov
mov
fdivl
and
sub
push
push
mov
mov
clc
push
imul
cmp
mov
cmp
sbb
push
adc
sar
stc
mov
std
movsb
lea
aad
push
jo
div
out
mov
popf
lret
popa
jne
fsubr
lods
pop
jmp
cmp
pop
leave
divl
mov
loopne
pushf
adc
mov
inc
movsl
xchg
xchg
dec
and
out
outsb
hlt
repz
movsl
addr16
adc
pop
adc
adc
fucom
fists
lea
inc
dec
mov
and
mov
xchg
jb
xchg
jns
and
xorl
mov
gs
lahf
push
ret
clc
dec
cmp
cld
xor
clc
fmul
xchg
in
xor
scas
adc
mov
imul
cmp
inc
sarb
hlt
mov
gs
dec
push
icebp
ja
inc
mov
push
sbb
pusha
dec
test
dec
clc
std
imul
psubq
xchg
je
sub
cmp
and
inc
jl
cmp
jne
jmp
pop
in
push
sbb
mov
adc
call
sti
in
cmp
push
mov
pop
pusha
cmp
and
pop
std
sarl
call
cmp
xorl
dec
mov
iret
nop
adc
push
insb
out
jmp
cmpsl
sbbb
movsl
push
sti
leave
pop
inc
jle
sti
cwtl
adc
arpl
enter
mov
pop
pop
bound
mov
mov
mov
xor
push
jns
shlb
xchg
inc
sbb
rorb
mov
pushf
jmp
mov
mov
sbbb
mov
lock
jl
mov
mov
lcall
adc
cmpb
xchg
adcl
dec
movsb
adcb
pop
jno
adc
int3
aad
cmp
dec
fwait
pusha
jg
dec
rclb
pusha
mov
addl
aas
testl
sbb
push
pop
mov
stos
fsubl
xchg
jge
lods
xor
mov
mulb
je
aad
jge
add
mov
insl
mov
fwait
xchg
ficompl
lods
in
dec
fsubp
js
sahf
test
cltd
nop
cltd
push
cmpb
pop
mov
add
mov
push
ret
arpl
inc
pop
inc
dec
scas
loope
xchg
mov
mov
cli
xor
push
push
js
shll
xchg
mulb
int
aaa
insb
add
ds
and
fcmovnu
push
test
scas
xchg
jne
xchg
bound
arpl
std
lods
sbb
mov
xlat
test
daa
mov
adc
pop
xchg
das
ja
fisttpl
xchg
push
xor
addr16
enter
arpl
pop
pusha
mov
jg
jns
push
mov
pop
lcall
add
jb
popf
mov
stos
scas
inc
std
sahf
or
in
jg
xlat
pop
xchg
sbb
mov
dec
test
addr16
cmc
inc
imul
popf
lcall
int3
test
daa
iret
mov
sub
movsb
addr16
xchg
dec
es
clc
inc
mov
iret
lret
xchg
mov
jnp
adc
jns
out
add
push
fdivp
stc
add
fldl
lahf
call
mov
repz
les
mov
mov
rcrl
mov
cltd
push
shl
shl
inc
je
cmp
insl
aas
imul
jb
out
cmp
scas
ret
add
push
pusha
jp
adc
dec
lods
mov
mov
es
xor
cltd
test
add
test
or
cmp
es
sahf
mov
push
lods
xchg
mov
jp
out
insl
mov
add
mov
inc
movsl
jg
sbb
mov
insb
push
cmp
std
xor
cli
lea
in
xor
test
jle
cmp
or
in
jo
and
out
rcl
iret
rclb
add
inc
dec
jae
cmp
push
jecxz
repnz
fsubs
xchg
rolb
sbb
insb
or
in
or
pop
fwait
fwait
pop
fnstsw
xor
fwait
sti
cmp
movsl
xchg
jp
pop
hlt
test
xchg
and
imul
pop
dec
je
dec
int
xor
aas
sbb
mov
mov
subb
xor
mov
jge
ljmp
xor
js
inc
add
mov
testl
push
add
pop
cmp
stos
loopne
insl
add
push
lods
and
aam
lahf
sub
out
xchg
push
shrl
shll
or
cmp
fdivrl
sbb
cs
jecxz
xchg
jae
jp
dec
add
inc
mov
lods
inc
pop
cltd
lds
or
and
inc
cltd
adc
fwait
pop
xchg
mov
mov
dec
xchg
in
enter
pop
mov
lcall
cmpsl
or
fwait
add
xchg
jmp
pop
call
sub
push
sub
dec
xchg
mov
jno
fsubs
pop
scas
mov
sti
fsubr
inc
aas
popa
ds
adc
jle
sub
lock
adc
in
pop
cmovnp
mov
and
sar
aam
leave
test
shlb
push
pop
enter
push
jo
pop
arpl
cmp
inc
jb
cmp
shrl
lcall
mov
rorl
jle
push
insb
adc
fbstp
xor
mov
loope
add
insl
xchg
mov
push
mov
and
xchg
test
fistpll
cmp
sbb
xor
sti
repnz
lods
aas
pusha
jbe
enter
gs
push
divb
push
pop
mov
mov
mov
dec
lea
pop
cld
lds
sbb
mov
push
pop
pinsrw
mov
das
test
js
xor
and
call
lds
pop
sarb
xor
pop
adc
mov
push
test
jg,pt
test
imul
jmp
push
mov
pop
bound
clc
cmp
push
lret
test
rorb
std
scas
and
dec
mov
jo
enter
jmp
inc
dec
mov
push
and
leave
dec
lods
sub
aad
cmp
xor
daa
scas
nop
mov
aaa
add
testl
mov
xor
lea
add
les
arpl
shl
sbb
xorl
jbe
rcrb
cmp
ss
cmp
fwait
sub
cld
mov
mov
scas
push
mov
js
inc
or
pop
push
add
push
cltd
pop
xchg
ljmp
fdiv
inc
js
cld
test
sbb
or
xor
xchg
out
dec
fldl
stos
fwait
xor
movsl
dec
inc
push
dec
sarb
and
xchg
ljmp
dec
data16
xchg
std
mov
daa
fs
icebp
ljmp
dec
out
pushf
inc
dec
aaa
jo
push
pop
push
fcomp
push
xchg
push
dec
inc
dec
push
xor
pop
pop
in
aaa
push
out
clc
adc
push
pop
sarb
arpl
add
mov
cltd
je
aam
das
scas
dec
sbb
sbb
das
lahf
jp
pushl
pop
or
sbb
or
jb
loop
int
data16
imul
nop
popl
dec
insb
iret
cmpsl
imul
jno
icebp
mov
sbb
or
nop
outsb
stos
add
dec
jnp
loop
sub
out
sahf
inc
mov
push
popa
xor
push
xor
ljmp
mov
cmp
jge
sbbl
mov
cmp
fcmovne
inc
rorb
jo
adc
push
cmpb
or
lods
stos
push
mov
ret
cmp
rclb
orl
icebp
fdivrs
jb
test
push
add
daa
loopne
aam
imul
call
mov
adc
loop
inc
push
dec
mov
ret
push
adc
cmp
pop
sbb
mov
jns
test
arpl
push
pop
dec
dec
ds
pop
xchg
adc
jg
sub
adc
aaa
verw
cmp
addb
sbb
dec
dec
fadd
lcall
jbe
ljmp
testb
outsb
int
ficomps
dec
jg
out
jb
mov
sbb
shlb
gs
fbld
xchg
inc
lock
divb
dec
arpl
push
jecxz
iret
xlat
gs
dec
subb
fcoml
xor
or
mov
mov
add
aaa
xchg
scas
xor
pushf
stos
cld
call
add
imul
push
fiaddl
mov
popl
xchg
sub
outsb
mov
or
sub
dec
repnz
pop
xor
incl
mov
or
cmp
push
xchg
bound
lret
push
mov
cmp
sbb
xor
mov
dec
add
gs
adc
lcall
pop
jl
push
or
scas
sbb
push
aad
aad
cs
cs
xlat
push
mov
push
hlt
mov
rcr
add
imul
int
movsl
push
dec
push
push
pushf
jo
lds
adc
sbb
add
outsl
les
ret
outsb
sub
jb
push
shrl
xlat
movsb
adc
mov
add
loopne
jmp
or
or
cmpsb
in
and
dec
dec
xchg
xor
ficoml
push
mov
mov
mov
jmp
test
push
and
and
xchg
adc
jl
int3
jne
mov
inc
jg
into
xchg
push
xchg
cmp
loope
fcoms
xor
cmc
mul
and
xchg
loope
and
dec
shrl
adc
imull
dec
mov
gs
imul
and
pushf
push
mov
jmp
cwtl
outsl
xor
aad
mov
rol
sub
pop
int3
add
or
cmp
popa
les
dec
jmp
pop
jl
inc
xchg
popf
inc
mov
bound
xchg
ficoml
mov
pop
out
xchg
sbb
or
pop
sub
adc
jmp
outsl
push
push
push
stos
rolb
call
xor
ret
sbb
xor
pop
jl
xchg
add
xor
in
aam
test
cwtl
enter
inc
in
sbb
ret
out
and
outsl
rolb
cld
xor
sahf
test
push
push
xchg
inc
dec
loop
lds
and
xchg
inc
push
cmp
es
lcall
push
cmp
les
lods
mov
pusha
lahf
clc
push
outsl
push
mov
or
mov
out
cwtl
sbb
outsl
adc
rcll
addr16
jbe
push
shll
pop
cltd
adc
iret
pop
outsb
jae
lock
dec
and
or
or
in
lret
adc
fwait
rolb
loope
lret
adcl
push
inc
negl
hlt
or
jmp
push
repz
pop
mov
je
cmp
daa
adcb
cli
push
andl
js
fdivr
scas
pusha
test
mov
pop
enter
in
mov
xlat
mov
out
icebp
fcoms
pop
fiadds
insb
insb
cld
fstpt
shlb
jp
mov
roll
xor
inc
in
add
mov
add
out
das
adc
or
push
push
roll
dec
pop
cmc
loop
mov
andb
xor
out
aaa
inc
shrl
aam
insl
cltd
out
mov
btr
std
xchg
jmp
jbe
push
bound
cmpsb
push
xchg
pop
xchg
jb
idivl
ret
push
or
jbe
mov
aam
pop
or
dec
flds
and
add
jno
dec
std
mov
and
mull
rcrb
fwait
dec
movsb
out
test
xor
inc
sbb
dec
jl
push
lahf
xchg
add
in
and
ds
mov
cld
jo
adc
push
dec
mov
pusha
cmp
rclb
adc
fsubrl
mov
dec
jp
mov
fsubs
gs
mov
in
testb
faddp
or
clc
rorl
hlt
in
dec
add
imul
sarb
mov
pop
roll
mov
xlat
aam
pop
mov
or
xor
dec
pop
pop
and
outsb
insl
out
sbb
adc
lea
into
mov
push
imul
into
push
xor
es
xchg
cmc
cmp
sbb
pusha
cmp
call
jl
mov
sahf
icebp
inc
mov
fistpl
test
into
xor
and
inc
mov
push
xchg
sbb
push
xlat
and
or
inc
test
daa
mov
cwtl
cld
xor
gs
pop
test
shll
cs
sub
xor
push
jb
add
lea
dec
cmp
pop
xchg
in
dec
popa
and
mov
mov
mov
aaa
cwtl
sbb
jle
scas
xchg
sbb
mov
or
jl
out
and
push
pop
jmp
popf
addr16
in
lods
jecxz
cltd
jl
shl
orb
xor
mov
mov
inc
dec
jge
xchg
cmpsl
xchg
bound
jle
sbbb
xor
or
lods
mov
xor
cli
xchg
imul
mov
cmpsl
or
scas
out
push
aaa
cli
subl
and
push
popw
or
pop
jl
lret
push
rcrb
xchg
ror
aam
mov
push
jne
xor
rdtsc
inc
sub
cmp
dec
xorl
cli
push
mov
xchg
imul
out
add
movsb
xor
in
push
dec
sbb
sbb
push
pop
fwait
jge
mov
shlb
es
sbb
and
lock
dec
pop
inc
fwait
push
lods
inc
dec
sub
dec
mov
fiadds
imul
inc
dec
xor
sbb
hlt
stos
inc
loop
in
mov
movsl
js
add
add
cmc
pop
inc
dec
lods
cmp
icebp
das
fwait
out
pop
pop
mov
jmp
xorb
mov
pop
sti
cwtl
pop
add
mov
xor
popf
inc
in
mov
pop
jle
lret
sub
sbb
or
sub
add
or
pushw
jb
aas
push
call
xlat
inc
cmp
push
lock
xlat
xchg
cwtl
mov
das
cmp
push
in
stc
idivb
js
pop
jp
fldt
mov
xor
mov
ficoml
inc
arpl
inc
xor
mov
stos
imul
jns
icebp
and
sbb
mov
mov
xor
loope
punpckldq
sub
add
insb
in
insl
mov
xchg
xchg
push
lret
push
jbe
in
inc
push
jg
fwait
mov
outsb
incb
outsl
in
mov
es
and
xor
lcall
out
cmp
cwtl
add
dec
lcall
inc
adc
jo
inc
sahf
inc
movsl
sub
subl
leave
out
mov
mov
repnz
filds
pop
sub
xchg
dec
std
imul
or
rcrl
fs
inc
dec
jns
fsubr
es
sarl
pop
ret
dec
dec
les
mov
inc
push
popa
call
das
rcll
jmp
stc
push
jno
mov
mov
cltd
jne
fs
rolb
inc
push
cmp
call
sbb
in
sahf
push
in
or
imul
imul
fadd
add
loopne
pushf
xchg
adc
xchg
lcall
loop
xchg
mov
mov
aaa
bound
movsl
cs
fsubl
jmp
fs
push
std
xlat
xor
or
cld
xor
clc
pop
push
inc
andnps
outsl
das
push
pop
mov
lahf
mov
push
clc
inc
ror
out
sub
fisubl
mov
pop
int
pop
daa
xchg
or
scas
js
loopne
test
loopne
movsl
cmp
cmp
loopne
sub
cs
mov
les
jle
or
ficoml
aam
jle
jmp
cmp
fstpl
push
jne
mov
xchg
adcb
jnp
mov
mov
lcall
add
xchg
push
push
outsb
push
pop
inc
lcall
xchg
out
xchg
lock
in
xchg
xchg
or
fisttpll
ja
cmp
jae
xor
adc
scas
lods
push
sub
insl
mov
repnz
fcomi
and
test
or
dec
cmpl
jp
push
xor
hlt
ret
add
jmp
xlat
xchg
mov
pushf
pop
cwtl
mov
jecxz
shll
aam
es
adcb
sahf
inc
je
push
cmpsl
inc
insb
pop
lods
arpl
shlb
push
sbb
jno
inc
imul
cltd
out
int3
push
ljmp
xor
xchg
or
outsl
clc
enter
mov
scas
and
movsl
ret
imul
jne
out
das
sbb
pop
les
cmc
mov
fsubrs
jns
sub
xchg
sbb
ds
or
cmpsb
pop
adc
aaa
cmc
cmpb
pusha
xor
jmp
test
fcoms
jbe
cwtl
mov
mov
pop
loope
or
cmc
mov
push
fsubs
pop
adc
aam
cmp
lcall
rclb
or
sub
cmp
js
push
mov
add
repz
ss
sub
add
fwait
jns
pop
pushl
mov
sub
cwtl
and
xchg
dec
idivl
cwtl
pop
jge
sub
xlat
mov
and
dec
gs
cmovg
int
roll
push
push
mov
pop
fucomp
bound
stos
add
mov
xor
aad
xchg
mov
adc
push
pop
aam
fnsave
xchg
mov
cmp
cmpsl
fld
leave
or
push
scas
out
jne
rclb
in
xchg
loop
imul
loop
outsb
push
arpl
cmp
dec
fldl
push
sub
dec
loop
out
sbb
and
js
mov
outsb
ret
aam
cmc
aam
push
mov
fdivr
and
jo
pop
in
addl
test
imul
pusha
jo
scas
out
push
push
fimull
inc
jne
mov
mov
sbb
pop
or
aas
mov
mov
cltd
rcrb
js
jp
mov
inc
aas
dec
push
inc
test
xor
cmp
xor
xor
mov
jb
xor
cmp
stc
mov
call
outsl
inc
mov
ja
jbe
je
push
mov
fwait
decl
add
fldcw
jno
cli
add
mov
sbb
in
xchg
leave
ret
fiaddl
arpl
arpl
mov
jb
jmp
add
das
in
adc
and
test
movsb
scas
sarb
test
add
call
test
adc
add
or
test
pop
popa
sub
sub
loop
mov
je
push
lahf
ret
push
jg
inc
xchg
mov
movsb
lods
xor
in
jo
pop
ret
cmpsb
aam
inc
add
push
cmc
sarl
mov
mov
sbb
push
and
lcall
out
mov
xor
mov
mov
cld
rorb
pop
sub
inc
pop
push
mov
xor
mov
mov
inc
cmc
mov
jno
pop
subl
inc
cmp
mov
adcl
sub
sub
mov
out
fmul
sub
out
mov
mov
and
pop
icebp
sbb
cmp
mov
ja
or
ss
mov
loope
cmc
loope
mov
xchg
cltd
stos
and
push
jmp
cwtl
test
cmp
ja
repz
repz
sahf
cmp
jno
pop
and
push
push
mov
les
jno
xor
xchg
push
and
arpl
cmc
xchg
inc
or
xchg
mov
xchg
mov
sub
idivl
jge
and
jge
icebp
fwait
push
movsb
lds
test
lahf
sbb
or
nop
into
mov
pop
mov
push
add
das
aam
repz
jb
dec
inc
push
sub
xchg
adc
leave
repz
dec
sbb
aam
inc
pop
adc
mov
shl
fsubl
push
in
adc
push
lcall
and
test
xchg
repnz
cmp
insb
jne
xchg
loope
mov
mov
push
out
or
ja
outsl
mov
xor
push
stos
dec
and
mov
les
rclb
imul
popf
xor
dec
sbb
out
jg
ret
in
cmp
jbe
nop
inc
cmp
push
inc
fdivr
mov
add
jno
lds
mov
jg
push
dec
sbb
lret
pop
xchg
add
push
and
cld
cmp
push
jmp
stos
mov
adc
icebp
mov
out
loop
cmpb
aam
pop
addr16
cmp
pop
jmp
outsl
call
mov
loopne
idivb
xchg
and
aas
lahf
aad
xchg
out
mov
fidivrl
cs
or
or
mov
call
mov
xchg
mov
mov
mov
xor
sub
jp
mov
js
or
jecxz
inc
jnp
or
sub
fldt
and
jns
jg
imul
shll
push
stc
mov
bound
jne
je
add
sbb
idivl
shll
fidivrl
dec
in
loop
sub
push
pusha
adc
push
jmp
inc
or
mov
push
cmpsl
hlt
push
hlt
xor
xchg
push
aam
add
mov
mov
arpl
test
cmpsl
ja
enter
mov
aaa
je
adc
pop
xor
xchg
shr
pop
and
pop
into
push
iret
into
xor
pop
and
mov
xchg
xchg
rorl
repnz
adc
push
jo
xchg
pop
xchg
mov
enter
sbb
or
mov
xor
push
add
shl
in
je
pop
or
push
inc
sti
mov
mov
sbb
sarl
inc
bound
sub
or
cmp
jb
repnz
cmp
xchg
ret
mov
movsl
sub
ja
ret
shrb
and
std
inc
scas
mov
jmp
mov
jp
stos
xor
aaa
into
mov
jno
fnstsw
lret
pop
jp
jg
out
imulb
enter
pop
fsubrs
ss
jns
inc
outsl
gs
sbb
jbe
xchg
gs
arpl
jge
enter
inc
bound
jg
in
pop
sahf
add
fstpl
stos
sarb
iret
das
ret
adc
fidivl
add
and
jnp
test
or
sbb
push
mov
in
pop
fwait
push
call
dec
push
les
and
iret
loop
ljmp
stos
out
pop
rclb
mov
aam
dec
mov
xchg
jg
shr
add
repnz
popa
lret
sub
sbb
aam
mov
mov
insb
xchg
mov
fwait
mov
ljmp
js
inc
cltd
push
dec
inc
mov
aas
pop
rolb
adc
imul
mov
add
mov
daa
fcmove
gs
jnp
jne
add
hlt
popl
sub
js
mov
add
mov
adc
push
in
xor
jmp
or
jmp
adc
lahf
jne
sbb
xchg
xor
sub
add
pop
jae
jmp
sbb
jo
xchg
push
dec
xor
mov
pop
out
imul
push
adc
arpl
loopne
xchg
in
jne
mov
jne
mov
ja
jmp
rcll
in
and
ret
cltd
xor
sbb
mov
scas
lret
cmpsl
adcb
xor
sbb
lock
cwtl
jp
arpl
loope
xchg
out
xor
cmpsl
push
dec
push
mov
test
and
sbb
adc
daa
sbb
cmp
mov
lcall
cmp
jp
inc
test
test
ds
mov
movb
jbe
clc
lret
xchg
insl
sbbl
inc
push
into
cmp
jle
push
dec
int
fistpl
mov
mov
xchg
pop
nop
stos
push
push
and
xchg
or
cltd
jnp
stos
mov
pop
cltd
xchg
xor
mulb
test
dec
cmp
pop
repnz
ljmp
fcmovne
cmc
mov
jp
mov
icebp
fldln2
jnp
outsl
cltd
mov
mov
mov
jmp
and
pop
enter
push
cld
dec
pop
bound
push
jmp
add
aas
out
push
sbb
test
fcmovu
gs
nop
int
cmpsb
out
pop
rcr
int3
mov
popa
mov
sbb
clc
gs
dec
pop
adc
cmpsl
aaa
enter
pop
ss
inc
insl
sbb
xchg
dec
mov
push
cmp
pop
jno
outsb
ds
jb
jmp
mov
frstor
fidivrs
pop
jge
fcmovne
cltd
lahf
cmc
fstps
ja
scas
and
pop
dec
pop
jo
out
push
sbb
test
fcmovu
gs
nop
int
cmpsb
add
popf
icebp
adc
loop
int3
inc
jl
jmp
shll
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
inc
xchg
dec
ljmp
push
scas
inc
pop
rep
or
clc
shl
rolb
xor
jno
sub
pop
pop
xchg
jecxz
jnp
ja
mov
enter
addr16
fstpt
and
flds
in
mov
ds
stos
and
jge
popf
sbb
push
mov
imull
jle
push
xor
mov
push
xor
inc
gs
out
mov
addr16
negb
mov
fmul
xchg
mov
xchg
fadds
xchg
cmp
jae
in
mov
test
sub
lds
mov
add
aad
loop
xchg
pop
cmp
call
sbb
insl
mov
push
cld
jecxz
sbb
fnstcw
inc
push
adc
inc
lcall
fcompl
lock
sub
jno
loop
xchg
push
mov
leave
into
sbbb
cmp
push
lock
out
je
cltd
xor
in
mov
push
shrl
fdivl
cmpsb
fsubl
and
add
bound
inc
addr16
fdivrp
and
sbb
ficoml
mov
rolb
imul
dec
stos
mov
xchg
add
cmp
xor
cmp
aaa
mov
in
fists
adc
jns
mov
insb
adc
fisttps
xchg
pop
loopne
repz
jge
cmpsl
cli
stos
pop
pop
or
lret
les
dec
ljmp
mov
mov
jecxz
add
js
dec
mov
dec
mov
scas
nop
push
jo
push
dec
in
outsl
mov
lds
mov
cmpsl
xor
lods
inc
out
push
dec
repnz
push
jmp
in
arpl
push
adc
sti
test
xchg
jl
movsl
and
sbb
push
leave
std
ret
push
popf
xor
pop
sbb
iret
push
fs
pop
inc
cmc
fidivrs
fidivrl
inc
outsl
fsubrs
pop
es
or
test
loope
in
jno
mov
xchg
mov
cli
sub
add
pop
jae
sub
loop
cmp
or
pop
adc
inc
es
ret
repz
inc
cltd
and
cmp
ljmp
pop
lods
mov
or
fiaddl
xor
mov
push
jp
pop
into
cli
and
jnp
pushf
pop
pop
push
push
pop
and
jbe
and
lea
fidivrs
xor
push
aas
loop
rcr
dec
das
cwtl
mov
mov
imul
push
test
mov
inc
notl
xorb
jnp
xchg
imul
dec
jb
addr16
outsb
lea
test
add
popa
sbb
adc
in
add
push
cmp
call
test
out
jp,pt
in
in
mov
cmpsb
adc
sub
mov
mov
popa
add
push
sbb
bound
testl
mov
test
jge
sti
xor
inc
je
dec
cmp
inc
aaa
cmp
mov
js
movsl
mov
sub
or
mov
dec
movsb
test
out
inc
or
test
adc
frstor
popf
andl
test
enter
cli
and
xor
push
in
out
adc
cmpsl
movsb
sub
fwait
pushf
xchg
sbb
mov
inc
movsb
xchg
hlt
mov
aaa
andl
jmp
cmp
cs
adc
push
test
mov
leave
pop
data16
add
jp
lds
in
mov
and
ret
mov
inc
inc
xchg
into
dec
adc
lds
xor
cmpsb
int
inc
adc
add
sbb
in
sub
je
icebp
rolb
ljmp
mov
sub
fsts
lods
mov
cwtl
cmp
jge
es
mov
icebp
jns
shlb
jmp
mov
sub
movsb
aas
cmpsb
jmp
lret
scas
mov
lods
adc
sbb
fisubl
aaa
dec
test
in
cmp
iret
mulb
arpl
jg
and
lcall
push
jl
mov
bound
push
jo
jmp
add
stc
xchg
nop
add
xchg
int3
ljmp
daa
sbb
xor
popl
push
je
inc
add
jge
sbb
in
inc
and
stos
mov
xor
nop
outsb
imul
mov
lods
mov
lods
xor
les
jns
dec
mov
lahf
adc
cmp
sbb
les
testl
and
jl
mov
mov
pop
push
sub
lsl
es
cmp
je
push
leave
cmp
pop
xor
test
divl
clc
mov
jo
add
mov
mov
mov
es
mov
mov
inc
dec
pop
adc
pop
sarb
mov
xor
daa
daa
test
cmc
xor
gs
mov
dec
test
push
push
inc
rcll
add
outsb
jno
xchg
daa
fcompl
stc
pop
xor
or
out
fnstsw
leave
lods
dec
jecxz
mov
xor
mov
push
pop
daa
lock
pop
stos
shr
rol
mov
ljmp
sub
outsl
cmp
outsb
or
push
lret
pop
jg
xor
daa
repnz
mov
pop
dec
lock
lcall
jmp
or
mov
cmp
or
loope
rcrl
shll
adc
fisubrl
mov
jne
xor
sub
mov
dec
movsb
into
shl
cmp
cmpsl
sub
xor
mov
adc
out
sbb
sarl
xchg
xchg
fldt
in
push
mov
imul
int3
dec
lret
dec
sbb
movl
rol
xor
imul
gs
cld
xchg
dec
mov
pop
and
stos
push
rol
xchg
ds
fists
cli
mov
pop
outsb
inc
scas
movsb
jecxz
ja
and
dec
ds
stos
and
addb
arpl
or
int3
adc
push
subb
adc
mov
inc
jmp
scas
rorb
scas
push
ret
data16
mov
pop
cwtl
inc
add
inc
jno,pn
inc
inc
fidivs
sbb
fnstsw
popf
jbe
dec
in
jbe
mov
mov
xchg
pusha
lods
aaa
xchg
cmp
pop
push
stos
lea
cmp
and
test
jns
movsb
dec
dec
jg
inc
pop
or
enter
int3
push
outsl
inc
out
or
cmp
arpl
inc
xchg
sub
jno
mov
clc
inc
jl
mov
ds
jp
icebp
and
xchg
fidivs
push
cli
and
xlat
fstl
pop
je
xchg
cmp
mov
inc
cmc
mov
cmp
push
das
loope
and
pusha
push
pusha
icebp
dec
dec
and
aam
movsb
sbb
sub
sub
cmp
in
mov
outsl
div
xchg
inc
mov
mov
mov
sbb
cmp
lret
scas
or
or
cmp
test
ljmp
leave
pop
lods
push
sbb
and
pop
sbb
mov
and
pushl
xlat
gs
xchg
sub
sub
xor
movd
ret
and
cmpsl
xchg
cmp
movsl
xchg
add
cmpsb
popa
mov
jle
pop
sbb
mov
mov
lods
jge
mov
shlb
aaa
xchg
sub
mov
imul
scas
insb
test
push
mov
mov
push
test
xor
mov
mov
cmpsl
adc
dec
or
mov
pop
aas
stos
jp
mov
icebp
divb
pop
mov
movsb
in
shrb
and
pop
shrb
cmp
movsl
and
jp
push
into
stc
mov
subsd
inc
stos
lea
bound
pop
mov
xorl
add
sub
xor
into
xchg
adc
mov
test
pop
arpl
jp
in
mov
adc
cltd
fs
cwtl
aad
mov
xchg
xor
add
xor
jge
adc
leave
icebp
mov
jae
in
mov
mov
dec
fcoml
lock
xor
and
mov
dec
lods
imul
stos
cmp
pop
sahf
xchg
push
outsl
pop
enter
inc
cmpsl
clc
push
outsl
into
repnz
es
loop
mov
and
push
ret
shll
mov
inc
and
or
pop
std
lods
fldl2t
hlt
ljmp
js
or
lods
imul
and
jae
je
int3
lret
xlat
sub
push
xor
cmp
sahf
sub
jnp
jo
aaa
xor
lods
popa
add
lock
cld
lock
xor
test
pusha
cs
xlat
dec
ljmp
imul
lcall
pop
call
xlat
aad
xlat
xchg
add
mov
scas
outsb
and
std
out
call
and
mov
xor
xor
cmp
aam
jl
xchg
dec
jbe
push
and
les
cmp
mov
ffree
cld
lds
cli
mov
push
test
mov
loop
nop
jbe
out
adc
rcrl
dec
pop
fdivl
dec
xchg
das
addb
inc
dec
xchg
lret
mov
jno
adc
out
and
sub
mov
ss
outsl
adc
push
sbb
inc
and
jg
in
mov
sub
out
jnp
dec
adc
ja
std
push
push
xchg
aad
shlb
mov
push
test
popa
into
fxch
les
loop
push
add
pop
sbb
bound
aam
add
aas
mov
xchg
sbb
inc
dec
addb
xchg
stos
test
fwait
mov
mov
lret
int3
mov
std
jmp
rorb
mov
mov
clc
xchg
scas
pop
lds
rcrl
dec
dec
jnp
leave
imul
sub
xor
scas
mov
or
pop
das
dec
jmp
jo
daa
aad
gs
pop
xor
add
mov
in
xchg
push
push
enter
imul
fwait
stos
outsb
cli
lahf
jg
pusha
ljmp
push
mov
jge
xor
push
in
pusha
pop
xchg
cmp
repz
add
and
dec
or
push
into
stc
cmpsb
ret
pop
pop
sbb
stos
outsl
adc
inc
les
outsl
leave
mov
mov
pop
add
hlt
pusha
mov
dec
rcrl
cs
cmp
sub
jno
lea
iret
mov
jbe
xchg
jb
into
mov
insl
leave
test
jecxz
mov
sti
adc
mov
sbb
add
push
fnstcw
scas
andb
sub
pop
lret
aam
jne
push
mov
inc
aaa
sbb
jp
sub
mov
jbe
cmp
adc
xchg
test
push
dec
dec
mov
push
test
aaa
xchg
xor
fidivrs
inc
jae
xlat
and
jno
pop
les
jmp
inc
subl
icebp
xchg
and
scas
xorl
out
push
push
pop
and
fmuls
fnstenv
jle
or
add
and
xchg
out
cmp
dec
test
lret
inc
clc
adc
fs
mov
push
sub
pop
iret
cmpsb
mov
xchg
sbb
sub
cvttps2pi
push
sbb
out
test
lock
add
jnp
pushf
mov
mov
mov
ljmp
ja
mov
out
es
cltd
stc
fcom
cld
cs
mov
fists
mov
enter
sbb
lock
or
xchg
add
mov
jo
mov
aam
cs
mov
add
sub
enter
leave
mov
mov
dec
adc
sar
jb
aam
jle
dec
test
daa
lock
ret
sar
mov
jnp
push
mov
rolb
adc
lods
int
ret
push
inc
mov
mov
jge
and
adc
jecxz
fcoms
pushf
inc
cld
mov
pop
cld
mov
stos
adcb
sub
lock
les
test
movsb
dec
jne
mov
and
ja
push
shlb
add
es
add
jb
leave
dec
fsubrl
dec
fdivrl
arpl
stc
xor
mov
scas
and
cmp
and
fdiv
mov
mov
adcb
lahf
dec
pop
and
clc
mov
in
xchg
jmp
xchg
or
out
dec
push
pusha
call
jg
jno
sub
mov
in
insl
nop
in
fstpt
fs
lahf
push
mov
fnstsw
cmp
jo
adc
xlat
mull
dec
mov
fiaddl
add
adc
mov
jecxz
cltd
inc
cmp
inc
sbb
sbb
movsl
sub
push
push
lret
das
out
add
cmp
inc
das
gs
jbe
fwait
ret
and
jmp
adc
fdivrl
or
push
push
mov
lahf
bound
daa
out
aaa
btc
inc
ror
push
xlat
xchg
jl
push
in
aam
xor
out
pushf
xchg
mov
inc
dec
sbb
inc
pop
inc
pop
adc
mov
push
mov
pop
icebp
stos
sub
gs
jg
push
adc
mov
decb
cmpsb
repnz
sbb
scas
mov
gs
push
jne
add
xchg
push
popa
add
lret
adc
sub
jno
movsl
scas
xchg
fisubs
lock
sbb
lcall
lds
fscale
stos
orb
inc
adc
lcall
lds
or
mov
pusha
and
movsb
or
sbb
cmp
mov
cmp
ret
in
sub
mov
mov
pop
mov
mov
arpl
jae
in
sub
dec
pop
es
aam
xor
repnz
andb
pop
outsb
pop
gs
out
test
lods
test
push
and
jb
sub
rolb
mov
pop
sub
lret
jnp
pusha
pop
dec
sub
or
mov
xor
jnp
push
mov
daa
and
dec
ds
js
adc
ror
adc
ret
xchg
loope
xchg
outsl
test
jmp
ret
push
subl
push
into
and
dec
repz
lock
xor
ja
push
pop
test
dec
ss
mov
out
jmp
dec
lea
mov
int3
xchg
xchg
xchg
sbb
and
mov
lret
and
inc
js
inc
inc
sub
xchg
dec
push
adc
cmpsb
addr16
cs
repz
call
into
out
pop
sbb
push
cmp
dec
and
jnp
pop
xchg
iret
mov
pop
xor
dec
xchg
out
call
aaa
add
fcompl
pop
xor
mov
pop
outsb
dec
stos
mov
lahf
aaa
xchg
inc
mov
and
inc
stc
gs
pusha
cli
jmp
xor
imul
mov
ss
rorb
mov
jnp
cmpsl
pop
sbb
mov
out
movsl
js
enter
or
inc
cltd
adc
ss
into
lock
arpl
insl
xor
dec
dec
cli
lret
mov
push
adc
in
cmpsl
push
cwtl
mov
xchg
xor
xchg
cltd
in
add
movsb
pushf
mov
ljmp
movl
xchg
mov
scas
sbb
mov
inc
or
iret
xor
pop
mov
dec
arpl
sub
or
mov
xchg
movsb
cld
pmaddwd
mov
xor
pop
arpl
cmpsl
mov
xor
add
mov
xor
push
ljmp
jmp
shrl
test
dec
pop
inc
lahf
or
mov
movsl
icebp
jg
lea
sbb
jecxz
scas
pop
pushl
cld
scas
adc
add
rcr
pop
jns
iret
mull
mov
inc
mov
orl
and
lock
push
xor
and
imul
mov
xor
fwait
inc
mov
push
out
push
sbb
movsb
add
pop
and
clc
cmp
test
fidivs
push
insb
ret
jl
stos
or
mov
xchg
and
roll
call
lahf
std
and
fistps
data16
rcrb
repnz
and
sub
inc
xchg
loope
push
cmp
lock
outsb
mov
xchg
xor
cltd
hlt
cld
sbb
xchg
jle
fdivr
push
insl
dec
fs
push
cmc
icebp
cmp
dec
add
lock
dec
and
xchg
sub
jno
push
test
mov
clc
rcl
adc
ljmp
js
in
stos
mov
cmpsb
js
pop
inc
addl
in
and
sbb
cmp
pop
sbb
mov
test
icebp
sbb
pop
popf
xchg
insb
mov
das
mov
lea
lcall
lcall
mov
add
aam
jne
mov
aad
add
mov
icebp
ja
jnp
pop
dec
dec
jns
push
add
int
push
add
add
mov
push
fbld
mov
or
or
adc
cmpsb
adc
ja
add
sub
dec
cmp
or
inc
xchg
sub
cli
int3
ljmp
out
lcall
cmp
xor
js
test
adc
lock
pop
sbb
ror
sub
insb
add
mov
cwtl
push
popf
rcr
stc
sahf
sbb
int
mov
loop
mov
push
orl
sbb
bnd
stc
xchg
inc
test
test
in
aam
in
adc
orb
jp
int
shlb
sarb
add
scas
in
xlat
imulb
or
mov
sbb
mov
hlt
add
pushf
mov
lret
dec
jge
lret
test
rep
adc
push
cmp
pop
gs
inc
js
pop
out
xor
mov
push
lods
jl
jb
rcll
mov
inc
int
dec
lods
lods
cmp
xorl
xchg
inc
cmp
dec
lds
stos
jae
aas
sbb
popf
push
cs
push
pop
popf
out
jmp
dec
enter
mov
les
or
stos
xchg
mov
loope
imul
enter
sbb
jb
dec
lcall
xor
mov
xchg
mov
mov
sub
jp
mov
xchg
add
loope
xchg
and
mov
in
sbb
fisttpll
mov
mov
aaa
call
mov
in
aas
scas
es
push
jecxz
mov
jge
movsb
cli
lods
mov
sahf
outsb
or
stos
push
into
les
jg
pop
inc
inc
jmp
cmp
jle
scas
sbb
mov
inc
inc
jmp
pop
dec
in
sub
mov
mov
jge
cmp
mov
test
icebp
push
or
lods
sub
lret
mov
mull
lret
push
gs
push
inc
cmp
leave
cli
pop
pop
xchg
xor
xchg
adc
repz
shrb
xchg
dec
sbb
pop
scas
std
ss
in
aas
mov
xchg
and
cmpsl
and
dec
mov
push
jl
jbe
push
subb
dec
xchg
inc
mov
cs
aaa
mov
and
cltd
cmp
push
popf
adcb
fimuls
pop
jmp
notb
xchg
in
inc
nop
leave
das
mov
pop
cmp
mov
icebp
xchg
push
dec
insb
out
popa
adc
mov
xchg
dec
hlt
jns
cwtl
mov
ds
in
inc
mov
fisttpl
pop
xor
jmp
in
movsl
mov
cli
push
mov
push
iret
shrb
inc
cmp
enter
mov
jecxz
es
cmpsl
xor
ret
mov
mov
or
jo
inc
cmpsb
iret
cli
fisttpll
outsl
push
rcr
jl
push
cmp
movsb
fstpl
sbbb
iret
out
loope
pop
xchg
xlat
jns
mov
js
mov
xchg
dec
and
loop
shll
jns
cwtl
push
dec
test
pop
adc
lods
jnp
xchg
decb
stos
adc
je
push
movb
inc
dec
and
jg
ljmp
jg
int
mov
push
mov
mov
fs
inc
mov
jnp
mov
loop
cmp
mov
or
sub
test
lcall
or
mov
fnstenv
jg
add
pop
or
lret
cmp
xchg
jl
ret
pop
imul
jg
lods
sub
sub
add
dec
push
insb
mov
daa
out
imul
adc
and
repnz
and
sub
ror
mov
mov
inc
sub
pushf
mov
pop
push
bound
hlt
mov
cmp
jge
sbb
iret
in
lret
in
mov
pop
mov
mov
orl
scas
out
inc
sub
fcoml
xchg
notb
dec
inc
sub
pop
pop
mov
jno
sbb
jae
into
imul
int3
fstpl
loope
addr16
mov
mov
xchg
cmpsl
mov
lret
adc
dec
out
lret
popf
and
int3
ret
push
xlat
dec
sti
mov
xor
mov
pop
testb
inc
bound
aad
xor
orl
fadds
test
xchg
cs
inc
cmpsl
mov
in
ficomps
ljmp
sbb
mov
in
push
movsl
adc
and
pop
push
jmp
lods
jae
and
push
mov
test
into
stos
je
add
pusha
jnp
inc
addr16
out
icebp
sub
cs
loop
in
inc
add
xor
mov
imul
js
into
xchg
nop
push
sbb
pop
xor
cmpsb
arpl
and
pop
push
pop
andps
pop
jl
stos
jno
sub
push
mov
xchg
pop
sub
mov
lods
sti
sbbl
stc
addr16
mov
inc
push
cmp
push
sub
xchg
mov
pop
insb
lahf
add
cmc
in
mov
enter
and
in
mov
dec
in
or
lret
push
jbe
and
adcl
pop
mov
add
sub
stos
or
in
js
shrb
push
pop
and
cld
in
lds
daa
pop
clc
movups
or
leave
repnz
xor
scas
imul
dec
xchg
adc
pop
ret
cld
jecxz
rcrl
lret
pushf
lds
andb
mov
stc
and
mov
sub
cmp
mov
stos
lods
hlt
clc
imul
pusha
movsb
adc
mov
sbb
add
jae
cwtl
lea
test
decb
ds
je
pop
push
mov
cmp
xchg
testl
daa
lret
lcall
push
into
add
cmpsl
pushf
and
xchg
sbb
jp
stos
cwtl
leave
xchg
sub
xchg
sahf
pop
xchg
push
pop
ret
negl
dec
and
dec
cli
jne
shl
xchg
pop
xor
xlat
aas
xchg
mov
mov
adc
sti
in
jecxz
push
idivl
into
fisttps
push
dec
pop
rolb
lahf
xlat
add
adc
fisubrl
sti
imul
decb
inc
cmp
int3
inc
push
mov
fidivl
test
movsb
pop
cmc
sbb
cmp
lods
imul
imul
shrb
stos
hlt
lods
fdivs
js
jbe
jmp
outsb
adc
mov
negb
add
ja
inc
pushf
imul
data16
test
sbb
lds
lahf
mov
cwtl
in
lock
popa
scas
insb
sub
jg
and
test
push
clc
add
insl
jo
push
jg
dec
mov
out
clc
je
pop
ret
push
arpl
imul
and
mov
jno
xchg
xchg
push
mov
loope
sti
adc
add
xchg
xor
mov
std
adc
pushf
cltd
gs
dec
push
adc
in
inc
sti
xor
call
imul
outsl
xor
xchg
adc
or
daa
inc
mov
stos
add
mov
mov
adc
add
sbb
inc
mov
movsl
xchg
add
int3
call
xchg
xchg
xor
jecxz
mov
cmc
fbstp
jbe
mov
inc
mov
sbb
inc
cmp
cli
vandpd
xchg
mov
push
push
mov
mov
and
xlat
std
pop
sar
mov
cwtl
shlb
mov
pop
mov
out
cmp
imul
sbb
leave
cmp
mov
dec
ret
inc
add
sbb
aas
stos
jne
call
mov
mov
or
cmc
int3
int
and
roll
fdivrl
inc
mov
xor
ret
cmc
fs
add
inc
pop
ds
call
movsb
loope
jo
push
sbb
sarb
jle
cltd
ret
dec
mov
adc
test
aad
cltd
mov
cwtl
mov
decl
add
insl
sub
pop
pop
jecxz
inc
jmp
add
loop
in
lods
sub
dec
jl
in
push
cmp
mov
cmc
enter
xchg
scas
insb
fidivrl
dec
stos
push
lahf
adc
inc
pushf
idiv
sbb
push
addl
repz
int
sti
mov
rolb
xor
jecxz
cmp
les
push
lods
cmp
xor
and
jecxz
mov
std
xor
dec
sbb
fiaddl
movsl
test
in
or
outsb
dec
testb
out
cltd
in
imul
cmpsb
hlt
adc
jecxz
inc
in
repnz
fistpl
int3
mov
and
sbb
push
adc
dec
cmc
pop
ret
inc
call
cmp
dec
sbb
xor
push
dec
xor
das
sub
movsl
in
mov
scas
inc
enter
inc
pushf
inc
sub
mov
or
and
and
ss
and
pop
add
loopne
lods
fs
sahf
and
ret
insl
pop
mov
and
inc
mov
mov
sub
dec
pop
cmp
std
aaa
mov
mov
icebp
ficompl
mov
dec
inc
jns
imul
dec
cmpsl
ja
lock
add
sbb
lret
add
adc
sub
pushf
fcom
fs
bound
rcll
add
inc
xchg
rorb
cmp
aad
cmp
jge
mov
imul
xor
xlat
sub
repnz
loop
stos
movsl
mov
into
mov
js
loop
cmp
pop
xor
jb
and
bound
push
cld
sub
xor
test
imul
or
fs
pop
pop
sub
cmp
dec
sub
xchg
test
arpl
out
faddp
pop
test
inc
pop
icebp
push
arpl
notb
xor
inc
add
cltd
gs
movsb
test
shlb
loop
xchg
xor
xchg
mov
das
push
mov
mov
pop
push
faddl
gs
push
mov
cmc
mov
xor
xchg
and
andb
or
dec
cmp
daa
xor
push
mov
and
popf
or
add
sbb
stc
xor
fisttps
lods
xor
and
push
lea
mov
enter
clc
rcrl
sub
jb
nop
and
cltd
fdivs
mov
mov
push
pop
cmp
mov
cli
jl
mov
loop
mov
jo
add
dec
aas
jle
jnp
fdivs
ret
jno
lea
xchg
or
xor
mov
push
test
in
mov
sub
add
or
icebp
push
push
push
icebp
aaa
jge,pn
mov
mov
adc
sbb
test
xchg
jmp
add
fidivrs
mov
push
jno
inc
add
pop
in
mov
aad
mov
data16
jns
std
mov
mov
pop
and
adc
sub
les
inc
movsb
cwtl
int
xor
dec
insb
xchg
mov
and
insb
jmp
jbe
dec
iret
adc
shlb
dec
jg
xor
push
inc
js
pop
xor
lcall
fs
fcmovnb
insl
jl
lret
push
rcl
addr16
xchg
addr16
lea
cld
ja
adc
iret
out
jmp
add
jg
inc
mov
icebp
leave
mov
cmc
in
jb
out
push
push
fcmovne
cltd
ret
fisubl
cmp
mov
push
leave
add
lods
dec
imul
cmpsl
sub
jno
popa
jle
lods
out
loope
push
repz
mov
and
push
mov
mov
pop
cmpl
push
adc
stc
mov
mov
loopne
jmp
xor
sub
adc
inc
or
dec
aam
hlt
jne
pop
or
sub
nop
mov
sahf
or
dec
mov
add
fldcw
cmpsb
adc
cmp
and
adc
xchg
out
jbe
imul
fnstsw
sub
cwtl
pop
not
add
push
pop
adc
cld
outsb
fildl
insb
mov
mov
clc
out
xchg
sbb
mov
push
xor
clc
push
pop
int
lods
and
and
ljmp
lds
test
pop
mov
cwtl
sbb
push
sbb
in
subl
push
in
inc
and
gs
icebp
pop
push
or
repnz
lcall
mov
mull
arpl
js
fwait
jb
mov
adc
ja
or
xchg
xchg
adc
xor
jnp
pop
sti
daa
fisttps
test
out
or
bound
fcomip
sub
std
mov
rcrl
push
les
ja
or
dec
pop
push
or
arpl
ficomps
xchg
movsl
outsb
fcomp
xor
shlb
sbb
and
xor
jg
dec
xchg
dec
push
push
in
sbb
cmp
in
orl
rep
ljmp
xlat
fmuls
mov
push
sub
mov
lods
imul
test
mov
cltd
pushf
xchg
ja
sub
mov
lods
cmp
sub
mov
xor
sbb
xor
add
jmp
pop
sbb
mov
nop
xchg
sbb
jne
lret
ret
sahf
fnstsw
psadbw
clc
cs
jbe
loopne
adc
adc
mov
jne
fdivs
enter
add
lcall
inc
cmpsb
jecxz
jno
inc
push
je
rcr
popa
test
jno
sbb
dec
pop
hlt
cli
jno
and
mov
mov
ds
push
cmp
test
pop
add
or
shlb
bnd
cli
and
sahf
cmp
pop
sbb
push
jmp
sbb
inc
and
lock
cli
rcll
inc
stos
stc
cmpsb
fisttps
fwait
imul
sub
mov
add
dec
int3
into
pop
fs
xor
subb
ljmp
negb
cmpsl
push
jg
xor
stc
dec
out
arpl
fidivs
imul
cmp
jmp
int
xchg
leave
cwtl
inc
test
pop
arpl
xchg
incl
cmp
push
push
cmp
shrd
push
sahf
jecxz
in
leave
stos
adc
pop
cmpsb
sbb
dec
ds
sub
and
div
xchg
jl
push
sub
mov
imul
aaa
out
stc
xchg
ds
pop
pop
incb
cmpsl
jbe
add
mov
xchg
mov
sbb
pusha
or
jle
cmpsl
das
cld
daa
mov
cmp
adc
sbb
push
jb,pt
dec
jnp
fwait
int
les
pop
xlat
fnstenv
dec
and
shll
cmp
inc
sub
mov
shll
nop
les
xchg
push
popf
xchg
in
cmp
ljmp
dec
into
repz
stos
sahf
scas
shl
fiaddl
data16
out
xchg
enter
pop
adc
dec
pop
xchg
ss
jmp
xchg
js
xor
push
lods
out
mov
je
data16
lcall
or
fs
xchg
xchg
lahf
pop
mov
ja
ja
or
daa
aaa
andb
psubd
or
jp
cmp
popf
push
cmp
gs
test
jo
mov
push
push
and
psllw
push
cmc
push
test
jmp
or
jae
push
jno
or
stc
shll
sbb
mov
cmp
xchg
lea
sub
imul
fstps
mov
jle
fcoml
insb
and
push
dec
cmp
mov
mov
repz
mov
sub
mov
pop
sub
cmc
rclb
or
jae
xor
adc
push
pop
aad
hlt
hlt
in
int3
out
ja
fistl
mov
scas
ret
xchg
or
jl
std
subb
pop
jmp
scas
mov
rolb
repnz
stos
cmp
jne
aaa
into
cmpsl
cs
in
in
mov
in
and
loope
push
rol
repnz
test
sub
mov
mov
cwtl
mov
xchg
lock
in
or
addl
data16
sarl
cmp
stc
adc
dec
repnz
fsubs
fstl
outsb
bound
aam
push
and
lcall
mov
cmp
push
stos
and
mov
and
pop
sbb
int
imulb
jp
xchg
out
xchg
into
mov
jae
mov
sahf
and
jl
inc
mov
das
xchg
add
or
rol
push
pop
mov
xor
aaa
mov
and
test
nop
cmc
xchg
ljmp
jnp
jnp
fisubrl
adc
pop
lea
xchg
sti
or
fdivrp
fnstsw
pop
ret
adc
lret
pop
dec
scas
adc
mov
mov
fisttps
pop
and
jecxz
xchg
cmpl
push
cli
and
lret
push
fisttps
pop
and
int
pusha
cmp
movsb
hlt
ja
add
in
clc
fbld
lock
push
mov
xchg
mov
pop
mov
inc
iret
jns
push
mov
cmp
sbb
pop
sbb
repz
jns
pop
cmp
aad
loop
inc
test
mov
enter
ja
cmpsb
hlt
cmp
fs
mov
sbb
push
sbb
bound
shll
push
cltd
dec
daa
fdivl
add
hlt
push
sbb
dec
push
mov
fldenv
repnz
jle
xor
sahf
into
mov
inc
popf
arpl
mov
movsb
adc
imul
out
int
jle
push
std
pop
xor
pop
loope
pusha
das
ljmp
pop
bound
adc
lods
dec
pop
jl
fdiv
pop
popa
dec
jge
pushf
call
filds
push
cmp
movsb
ret
push
int
imul
xchg
lds
inc
mov
mov
jae
sbb
mov
mov
int3
cltd
rcrb
fdivs
dec
or
enter
dec
pop
cli
test
aaa
sbb
lahf
mov
or
idivb
fcompl
inc
and
and
push
cmp
inc
sti
lret
or
sbb
mov
js
aas
cld
mov
and
lahf
mov
pop
sub
sbb
jl
cmp
inc
int3
ret
xchg
test
jl
push
and
inc
xchg
scas
adc
gs
mov
push
addb
fldl
and
iret
scas
xlat
fmuls
push
repz
test
rclb
imul
xor
mov
dec
mov
loopne
push
add
rcr
ret
mov
add
dec
inc
orb
jl
mov
decl
cmpsl
sysexit
loop
adc
sub
mov
cli
outsb
pop
ret
das
outsb
jae
mov
xchg
or
and
adc
out
sbb
mov
rorl
ds
fnstenv
adc
fsub
mov
loopne
xor
arpl
scas
push
lods
das
into
imul
mov
popf
xor
rcrb
out
and
lds
inc
mov
dec
pusha
add
decl
ja
inc
lcall
mov
dec
mov
dec
xchg
sub
out
and
lds
inc
mov
ret
stc
mov
pop
decb
adcb
cli
inc
inc
cltd
push
test
outsb
pop
sub
dec
fildl
out
and
lds
cs
dec
lea
out
sbb
inc
xchg
ret
lds
out
xchg
mov
roll
and
mov
lods
jge
mov
outsb
mov
fldl
icebp
pop
stos
dec
lods
add
sub
push
fs
inc
push
mov
xchg
outsb
xor
mov
fxtract
mov
inc
mov
sub
shlb
arpl
xchg
inc
cmp
pop
shll
jecxz
pop
sub
jg
rcrl
adc
lds
xchg
ja
out
out
mov
ret
lds
mov
femms
jne
lds
adcl
clc
les
loop
idivl
cltd
mov
and
sarb
cli
or
scas
movsl
and
jnp
ret
aad
jle
scas
pushf
jmp
out
repnz
ret
lds
ret
or
mov
ss
push
push
stc
push
ret
lds
sbb
psubd
jle
scas
das
outsb
lea
in
pop
cld
dec
mov
movl
pop
ret
push
mov
shl
xchg
sbbl
lds
jecxz
test
pusha
inc
sbb
mov
or
xorb
xor
les
rcrb
ret
test
cs
rcrb
js
xchg
push
jns
cmpsb
in
cs
fwait
pusha
mov
cmp
orb
pop
jne
psubsw
dec
mov
pop
mov
ret
out
rorb
cld
mov
pop
shll
sbb
and
and
cwtl
jae
and
mov
cmp
sub
fcoml
stc
sahf
or
sbb
push
add
mov
or
sub
or
sub
or
sub
adc
dec
mov
mov
jnp
add
cmp
outsl
cld
jmp
scas
call
cwtl
add
cmp
adc
rcr
scas
call
cwtl
add
test
les
rorl
outsl
cld
scas
add
call
cwtl
add
push
les
xchg
outsl
cld
mov
cltd
stos
jnp
add
std
pop
les
jmp
jg
cld
dec
add
jnp
add
pop
pop
les
pop
dec
jg
cld
push
and
jnp
idivl
inc
jge
xchg
jns
test
inc
jle
xchg
push
in
xchg
mov
addl
jle
je
adc
sbb
mov
in
jo
fstps
pop
cmp
fdivs
pop
push
xchg
cltd
scas
jmp
dec
add
aaa
arpl
aad
shll
jnp
lods
sbb
inc
and
mov
rcrl
int3
push
push
enter
shrb
loope
jns
lea
addb
cwtl
adc
daa
mov
cs
inc
pop
data16
sub
xchg
daa
mov
xchg
lret
testb
aad
sub
das
push
cmp
pusha
lock
ja
sbb
aaa
aas
das
pop
movsl
xor
mov
test
mov
pop
mov
push
notb
out
lret
into
andb
idivl
cmpsb
add
cltd
cs
and
adc
fwait
mov
adc
jmp
pusha
insl
add
and
lret
sbb
cmp
test
mov
and
in
adc
lods
dec
push
lods
cli
lret
mov
mov
int
daa
gs
es
xor
or
inc
fs
rolb
mov
out
dec
xor
call
jle
xor
or
jp
insb
push
out
cmc
test
xchg
mov
sbb
jne
or
xor
jae
push
xchg
movsb
outsb
xor
sub
lock
pop
and
es
xchg
or
adc
mov
sbb
cltd
sbb
cld
mov
notb
mov
dec
cmp
enter
mov
into
dec
and
cli
je
push
adc
pushf
cltd
insl
add
jns
inc
fistpll
dec
test
inc
sub
jp
pop
hlt
lods
push
or
aad
jmp
je
mov
out
scas
push
out
add
insb
dec
loope
icebp
loop
lcall
popa
pop
xor
daa
call
out
addr16
lds
mov
out
mov
out
pushf
mov
mov
addr16
in
lods
pop
lcall
dec
jmp
pop
mov
adc
sub
test
push
jmp
sahf
fbld
int3
imull
movsl
je
xor
in
insb
cmp
mov
loope
adc
ds
adc
into
pop
mov
in
lret
packsswb
xorl
jo
jns
pop
jge
int3
out
mov
and
andb
or
stos
xchg
xor
ds
cmp
insb
push
fldl2t
ret
dec
iret
xor
in
dec
mov
mov
jo
ds
mov
sarb
xchg
idivb
in
mov
lods
stos
fs
push
xor
in
and
out
push
mov
dec
nop
dec
jb
dec
mov
pushf
mov
lret
mov
mov
xchg
jo
push
movsl
cmp
fwait
stos
out
push
cld
arpl
and
out
dec
les
pushf
and
fs
mov
xchg
sub
pop
rcrb
mov
int
lret
ret
mov
xor
push
stos
outsb
sbb
xchg
loop
jne
xchg
fwait
sbb
push
out
and
sub
sbb
mov
xchg
sbb
mov
pop
sbb
pop
jle
clc
popf
imul
cli
jns
shld
and
hlt
cs
lcall
pop
mov
test
pusha
lods
movsl
mov
mov
push
and
push
dec
xor
jle
lcall
jecxz
leave
pop
mov
data16
ljmp
xor
icebp
xchg
inc
pusha
push
fmul
lret
xchg
mov
movsb
add
lods
stos
addr16
imul
movsb
movsb
in
jne
mov
cld
out
mov
or
sbb
push
cmpl
xor
fimull
dec
mov
adc
sub
mov
outsb
push
mov
ljmp
in
sbb
push
enter
test
movb
shl
ja
shl
sbb
jb
aad
pop
outsb
pop
and
lea
push
arpl
sub
movsb
push
jmp
sbb
lods
mov
adc
leave
mov
outsl
filds
jo
cmp
pop
inc
cmp
pusha
sub
ss
jno
aad
nop
icebp
mov
inc
mov
jg
dec
insb
test
lret
push
lds
lret
aas
and
dec
std
mov
mov
mov
jbe
lahf
cmpsb
mov
pop
pop
mov
sub
cmp
addb
mov
jecxz
int3
into
in
int3
test
adc
sbb
iret
sub
adc
leave
cld
or
cwtl
push
xor
xchg
inc
cli
jne
nop
push
out
pop
testb
sub
mov
notl
test
add
aad
out
ret
lcall
or
inc
sbb
jle
in
dec
mov
or
jnp
pop
loope
push
sbb
pushf
js
mov
jae
jp
daa
cmp
mov
push
out
out
dec
or
mov
push
jbe
xchg
xor
jle
sub
jo
and
jl
push
ret
mov
out
or
cltd
sbb
cli
xor
inc
jecxz
sub
dec
dec
fisubrs
jnp
arpl
aad
orl
lea
push
fildll
mov
dec
repnz
int3
inc
hlt
negl
cmp
dec
jmp
movsb
xchg
test
jmp
push
sub
outsb
sbb
and
mov
sbbl
mov
xchg
test
ret
mov
movsl
mov
inc
mov
mov
aam
loope
rclb
leave
divl
inc
and
jp
cli
or
sub
jae
xor
cmpsb
rcl
jns
jg
push
jp
mov
push
js
int3
push
ret
xchg
clc
mov
aaa
cmpsl
inc
xchg
test
dec
sbb
rorl
pop
cmc
cltd
sbb
or
dec
cld
xor
jecxz
sbb
iret
mov
and
pusha
inc
and
mov
test
and
mov
insl
push
inc
adc
fwait
int
jb
jo
aaa
mov
or
movsl
and
jo
lock
xchg
pop
stos
mov
test
mov
inc
insl
fisubl
inc
js
fstps
cmpsb
popa
jno
sub
lock
dec
mov
stos
pop
ljmp
fwait
cmpsl
push
ror
cmp
dec
lock
xor
outsl
mov
dec
jmp
lret
xor
mov
mov
xchg
jno
mov
jnp
pop
mov
jns
xchg
enter
jnp
push
lret
call
insl
arpl
mov
xchg
lcall
pop
xchg
enter
add
lahf
xchg
js
test
xor
mov
lock
fistl
xadd
or
xchg
mov
cmpsb
mov
and
ret
pop
mov
sub
shll
cmp
dec
addr16
cltd
inc
xchg
mov
out
leave
jo
cld
fs
mov
jg
das
in
into
sbb
fwait
and
and
push
mov
sub
jne
or
inc
cmpsb
or
xor
sub
popf
test
enter
push
and
ficompl
rol
mov
scas
jmp
or
mov
js
imul
xchg
int3
ja
xchg
stos
and
gs
mov
scas
js
xor
mov
lods
movsl
fnstcw
enter
dec
test
je
ret
pop
push
nop
fsubs
lcall
in
mov
fldenv
icebp
push
in
loop
pop
shl
push
lcall
cmp
and
loop
ss
mov
lea
arpl
hlt
xchg
and
shll
push
pop
loopne
es
aaa
orl
fldenv
mov
popf
or
mov
aam
cs
jg
sbb
push
or
mov
cmpsl
inc
outsb
cmp
das
cmpsl
push
sbb
ja
mov
mov
fcmovnu
insb
mov
imulb
adc
aam
inc
jecxz
cmpsl
daa
popa
push
mov
xor
mov
addr16
cs
fdivl
test
leave
std
in
sbb
sbb
les
inc
into
mov
xchg
add
xorb
movsl
daa
fistl
aaa
mov
xchg
hlt
xor
dec
sbb
ja
data16
inc
mov
jge
fisttpl
scas
movsb
insl
mov
xchg
mov
lods
mov
lock
mov
xchg
jmp
lsl
ret
out
ficompl
shlb
xchg
pop
xchg
shlb
push
cmp
cmc
ror
sbbb
mov
jnp
and
mov
loop
std
repz
inc
clc
jle
stos
pop
pushf
sub
dec
mov
repnz
sbb
mov
xor
std
ret
adc
repnz
jo
adc
sarl
or
push
aad
xchg
and
and
cmc
add
mov
call
in
xor
shlb
inc
add
lret
mov
gs
push
jae
movsl
and
fmull
cld
lds
movsl
jbe
gs
gs
das
pop
dec
loope
xchg
pusha
mov
shrb
dec
imul
loope
outsl
ret
push
notl
cltd
push
lret
jne
divl
adc
or
xchg
mov
xchg
jge
rcrb
test
lock
int3
les
in
fidivs
xor
adc
mov
sarl
mov
fsts
mov
push
loopne
leave
mov
ret
mov
outsl
aam
idivb
aaa
pusha
mov
jne
mov
cmp
mov
ret
cld
stc
pop
xchg
int
addr16
jg
adc
aam
rorl
movsb
fdiv
inc
or
cmp
inc
inc
or
std
pop
pop
add
push
addr16
cmp
mov
inc
push
xor
loop
lcall
fiaddl
iret
or
int3
fcoml
sbb
scas
mov
jl
inc
mov
lea
inc
or
jbe
lret
je
call
adc
cmpb
mov
fimull
insl
out
dec
insl
rorb
mov
ljmp
insb
dec
xor
jmp
jmp
dec
push
pop
xor
out
shlb
and
xchg
icebp
pop
add
stos
and
dec
fwait
mov
cwtl
push
fisttpl
and
loopne
in
sti
mov
fisubrl
imul
or
call
std
adc
mov
jg
mov
pop
jmp
sti
movsl
dec
jmp
cltd
test
mov
je
imul
inc
jge
mov
dec
pop
xchg
inc
sub
sub
inc
je
mov
psubw
add
mov
sahf
mov
dec
lret
mov
in
fwait
mov
adc
pop
popaw
pop
rolb
sar
idivb
jno
in
mov
xchg
cmp
cmc
sti
and
or
mov
or
ret
in
sbb
stc
lahf
enter
jle
scas
icebp
cmp
lods
sub
mov
inc
xor
xchg
and
stc
mov
rcll
xchg
jp
hlt
sub
stos
xchg
lds
cmpsb
mov
jnp
dec
pop
out
cmpsl
daa
fldl
lea
jmp
fisubrl
mov
add
fcomps
popf
leave
jp
jge
fnstenv
adc
cmp
add
xchg
mov
push
imul
dec
ret
jl
iret
mov
jbe
jge
movsl
fucomi
xor
dec
fldt
and
or
movsb
cmp
pop
sub
mov
daa
test
mov
xchg
in
add
mov
insb
mov
sub
push
addl
popf
test
inc
shrb
stos
jo
cmovns
inc
int
or
or
push
mov
loopne
insb
neg
aas
sbb
adc
stc
test
hlt
or
mov
imul
repnz
imul
test
aam
push
pop
mov
push
dec
mov
jne
nop
ficoml
xchg
jb
sbb
mov
mov
mov
or
adc
mov
lock
mov
xchg
ss
cmp
enter
inc
mov
dec
int
add
bound
rorl
es
stos
add
cmp
mov
mov
fildl
hlt
xlat
pop
jg
add
fs
ljmp
lods
jnp
aaa
pop
mov
xor
lock
lcall
ljmp
mov
pop
sub
push
jecxz
mov
xor
test
cmpsb
xor
jmp
test
inc
in
pop
lahf
pop
push
pop
cmc
xlat
dec
rolb
xor
movsl
out
inc
mov
and
jb
mov
loope
in
sahf
xchg
shll
in
mov
dec
mov
mov
pop
mov
jns
stos
pop
sbb
or
sti
pop
cmp
pop
sti
orb
cmp
insb
in
aaa
xchg
dec
jge
mov
xchg
push
and
sbb
popf
ja
das
test
sub
push
popf
loopne
test
sub
jmp
loope
inc
pop
mov
ljmp
xor
sub
push
xchg
fwait
aad
dec
inc
call
jne
adc
xor
add
loopne
xchg
jmp
subl
sbb
les
xor
add
rorb
or
lods
js
ret
cmp
mov
out
lret
cmpsl
jl
jg
adc
adc
dec
pushf
inc
aam
jl
sub
in
mov
lea
jle
inc
push
aaa
cmp
and
ret
cmp
lcall
jne
jo
mov
dec
testb
movsl
xor
rolb
cmp
popa
push
jno
sub
scas
add
cmc
insl
cli
and
arpl
jg
and
push
pushf
xorl
shll
fstps
out
adc
arpl
insl
xchg
into
shrb
out
dec
ja
sub
sbb
stos
rcrl
in
pop
xchg
sub
wrmsr
inc
fstpl
cmc
mov
ljmp
sbb
in
mov
mov
mov
out
testb
orl
bound
and
loope
xor
push
scas
stc
pop
outsl
cwtl
ss
sbb
jle
fldt
ja
jo
pop
cld
jle
or
insb
fimull
sbb
loop
dec
mov
adc
enter
jb
and
movsb
inc
aad
sub
cmp
push
lcall
sbb
jb
rorl
aas
fwait
dec
loop
ret
movsl
mov
jge
cwtl
inc
add
dec
jns
xor
and
dec
mov
push
sbb
jns
sub
mov
xchg
imull
jnp
test
int3
mov
mov
jl
dec
stc
or
pop
sbb
xor
lret
sbb
xchg
lcall
cmp
lock
cld
inc
dec
inc
cli
push
push
xor
xchg
mov
inc
int3
push
jl
aam
les
cmpsl
add
inc
ds
fidivs
mov
imul
orl
std
lret
push
push
xchg
jle
les
and
std
mov
or
hlt
mov
cmp
add
sub
ljmp
push
push
scas
mov
jge
lret
cmp
mov
xchg
and
aad
or
ds
insl
adc
loopne
pop
mov
pop
call
xlat
push
lret
and
and
cltd
loope
pop
out
inc
fwait
mov
fdivrs
pop
mov
cld
mov
jg
xor
pop
mull
push
add
xchg
es
daa
iret
push
push
clc
cld
xchg
push
fisubs
push
push
icebp
mov
inc
dec
stc
mov
sbb
ljmp
lahf
insb
mov
lea
push
movsl
imul
mov
xlat
cmp
xchg
push
dec
stc
mov
push
loopne
inc
outsl
xacquire
outsb
pushfw
sub
pop
push
jae
ljmp
xchg
mov
test
mov
mov
jnp
arpl
adc
jb
mov
jb
lret
cmp
cmp
lret
xchg
insb
mov
adc
test
insb
mov
out
sub
ds
jo
pop
jp
mov
dec
adc
ja
sub
jge
jmp
inc
cmpsb
jl
lcall
ret
enter
js
add
repz
iret
shlb
or
push
mov
bound
cwtl
lock
pusha
stc
les
jb
insl
mov
jmp
js
outsb
lret
popa
sarl
pop
pop
insl
mov
jo
enter
scas
fwait
shll
in
jno
data16
iret
loope
popa
out
adc
les
fs
test
mov
or
or
xchg
in
popf
outsb
flds
dec
mov
les
arpl
or
xor
lods
push
and
adc
xor
pop
mov
stos
out
icebp
stc
xor
jle
shll
int
add
push
inc
jl
mov
arpl
inc
mov
sahf
andb
mov
sahf
cmpsl
cld
or
rclb
arpl
aaa
in
mov
xor
lret
notb
xor
fwait
out
rorl
in
scas
pop
mov
push
aad
dec
std
aaa
jl
nop
iret
jo
xchg
or
orb
orb
pop
xchg
mov
out
or
lock
cmp
mov
aad
add
pop
rorl
or
orl
test
lret
cli
arpl
sub
sub
sti
scas
dec
and
xchg
jb
mov
push
pop
fnstsw
mov
dec
pop
adc
pushf
push
push
loope
pop
lahf
pop
dec
ljmp
mov
adc
add
push
aaa
lret
dec
fistps
pop
lods
mov
adc
cltd
dec
xchg
lods
pop
loopne
add
loopne
pop
pop
mov
mov
testl
xchg
imull
decl
cmp
dec
outsl
push
sub
add
and
ret
loop
loopne
xor
xchg
test
bound
idiv
or
pop
rorl
push
fiadds
xchg
stc
mov
jle
add
pushf
in
stos
jg
or
xor
cmp
sub
enter
pushf
flds
and
pusha
and
cmp
clc
pushf
pop
sbb
fists
imul
push
popf
xlat
int
mov
cmp
movsl
mov
xchg
jno
inc
push
mov
std
pop
data16
subb
cmpl
mov
lcall
or
push
inc
fstl
xor
loopne
test
shrb
mov
pop
push
mov
push
add
pop
out
jge
mov
fwait
xor
push
mov
js
into
leave
mov
and
xor
gs
inc
in
clc
out
xor
ds
loopne
xor
or
inc
movb
dec
mov
xchg
loop
mov
jl
dec
sub
sub
cmc
fistps
out
fnstsw
sbb
cmp
test
push
xor
in
aaa
jge
mov
xor
imul
cmpsb
cmp
popf
xchg
cmp
mov
or
popf
fdivs
push
mov
adc
pop
lea
mov
into
mov
and
xor
push
push
outsb
pop
inc
fnstcw
jl
and
xor
les
pop
daa
cltd
jnp
fisubs
mov
sbb
push
aad
fidivl
pop
hlt
jle
into
adc
push
aaa
and
rorl
mov
int
and
cmpsb
stc
inc
jmp
sbb
addr16
mov
fdiv
fcmovnu
mov
push
popf
xchg
lea
int
icebp
shrl
pop
test
and
jl
push
xchg
inc
pop
xchg
mov
or
cmp
stos
lds
aas
out
inc
xor
cwtl
mov
push
pop
clrssbsy
mov
shlb
cs
inc
and
xsaveopt
mov
ret
push
addr16
add
ljmp
lcall
xchg
shrb
and
push
imul
test
jecxz
xchg
and
push
xchg
cmpb
pusha
rorb
out
fstl
fisttpl
mov
xor
xchg
pop
push
mov
xchg
or
mov
rolb
sahf
cs
sub
push
pushf
jae
aas
pop
fwait
or
addr16
gs
push
int3
test
lret
pop
movsb
lods
out
mov
jne
icebp
fstl
fiaddl
loopne
add
int
pushf
inc
loopne
je
mov
outsb
hlt
jmp
xchg
out
ret
insb
adc
lahf
sub
inc
push
or
sbb
push
outsb
mov
repnz
lret
fs
repz
mov
or
gs
xchg
lret
dec
mov
or
mov
mov
mov
xchg
ja
aaa
jb
popa
inc
out
inc
fwait
xchg
pop
cmp
push
sti
bound
arpl
packsswb
test
push
pop
mov
mov
and
xchg
xor
repz
lcall
pop
cmp
hlt
lret
sub
mov
shll
ljmp
jecxz
jg
int3
mov
cmpsb
out
ss
movsb
cmp
shlb
call
sbb
ss
mov
pop
push
lahf
leave
push
pop
arpl
test
jle
sbb
stc
lds
sub
sbb
adc
popl
mov
jb
cwtl
jmp
adc
jge
lcall
ja
dec
inc
lock
dec
xchg
inc
lret
jmp
mov
fisttps
push
jg
dec
es
pop
mov
cli
repz
out
test
repz
jno
mov
xchg
inc
xchg
cmp
add
push
rcrb
or
mov
cs
sahf
lods
xchg
iret
mov
cmp
fst
push
mov
mov
jnp
je
gs
dec
push
aaa
mov
rclb
enter
jg
mov
shll
sub
mov
xor
dec
sahf
push
dec
lea
cld
jno
or
jne
in
add
jmp
hlt
lods
mov
data16
inc
cld
loop
push
inc
xchg
inc
popf
rcrb
adc
mov
pop
ja
arpl
daa
mov
leave
mov
test
ja
and
lods
test
cs
sbb
sub
shll
jle
sub
mov
inc
pop
ficoms
xchg
mov
in
ds
testl
lret
mov
outsl
insb
adc
idivl
loopne
inc
cwtl
incl
dec
sub
sub
mov
ljmp
ds
movsl
addr16
jbe
gs
daa
addr16
push
scas
inc
mov
bound
jecxz
mov
in
dec
ljmp
aaa
jne
pop
cmp
dec
movsl
inc
push
pop
inc
fwait
cmp
pop
daa
and
cmpsb
or
mov
add
sbb
int3
inc
out
and
movsb
test
push
int
rcrb
sub
cmp
mov
stc
stos
rep
add
xor
stos
push
or
xor
add
sbb
xor
xor
fs
adc
pop
sub
add
fdivrp
cmc
adc
xlat
ja
mov
mov
jp
jmp
gs
js
push
inc
imull
xchg
jp
xor
loop
ja
imul
mov
repnz
cmp
stc
pop
dec
out
nop
andl
add
daa
mov
not
xchg
xchg
jge
leave
mov
dec
sub
mov
jge
jae
push
gs
imul
cmp
cmpsb
leave
insb
xor
sbb
xchg
enter
pop
sub
pop
xor
test
jno
les
inc
xchg
add
lock
jmp
xchg
fstpt
mov
ds
mov
test
add
adc
mov
xchg
loope
out
rorb
rcrl
mov
pop
push
call
jp
iret
adc
int3
mov
sbb
call
aad
mov
aas
xchg
inc
sbb
adc
ret
or
pop
sbb
outsl
std
sub
lea
aaa
nop
push
or
mov
leave
add
je
jo
jmp
xor
xchg
push
add
jnp
fidivs
clc
pop
int3
andb
pop
cwtl
addl
xchg
ss
shrl
mov
xor
pushf
mov
and
mov
mov
in
cmp
sahf
shlb
lahf
decb
lods
enter
mov
mov
mov
jbe
inc
leave
repz
dec
mov
ljmp
loopne
add
jp
lods
shll
add
jo
mov
mov
or
xor
cmp
push
orl
ret
dec
ret
std
flds
into
arpl
stos
inc
jle
jp
je
popf
shlb
dec
xchg
cmp
xchg
repz
cmp
and
cmpsl
imul
cmp
jl
dec
in
insl
xor
inc
cs
mov
inc
out
sub
fidivrl
push
adc
or
aam
rcr
outsl
push
scas
sub
mov
loop
cmc
cli
or
stos
push
push
mov
sbb
in
inc
aaa
xor
int
mov
or
add
mov
rolb
stos
xchg
insl
xchg
sub
lsl
clc
ffree
and
cmpl
add
mov
ret
add
lods
jb
inc
scas
aam
or
and
outsb
das
mov
push
sub
mov
sarb
fwait
test
ljmp
jmp
cwtl
lods
xchg
xchg
cwtl
mov
push
std
pop
mov
loopne
fistps
dec
imul
out
andb
fldt
ja
mov
lods
call
bound
mov
push
iret
adc
adc
fs
sub
xor
mov
in
ret
xchg
sbb
push
das
ja
ljmp
jg
mov
push
cmpsl
cmpsl
and
pop
imulb
pop
push
pusha
imul
adc
inc
sub
fildll
loop
or
pop
rcrl
fcmovne
push
cltd
int3
and
lret
xor
out
test
mov
fwait
imul
rorb
sbb
cli
add
add
push
add
jns
mov
lea
mov
jmp
clc
and
push
jmp
scas
mov
fiadds
or
ds
lcall
pushf
rcl
ds
xchg
inc
jnp
pop
in
aaa
in
rcr
inc
mov
adc
insl
pushf
add
mov
or
mov
and
pop
cmp
xchg
sarb
pusha
loope
mov
jno
inc
int3
mov
daa
mov
aam
and
movsb
and
jle
dec
insb
and
jnp
fcmovbe
mov
xor
mov
inc
cwtl
add
dec
cli
sbb
ljmp
pop
xchg
pop
ret
or
pop
arpl
dec
pop
sbb
scas
xchg
imul
jl
push
dec
xchg
adc
in
into
and
test
rcl
repz
push
out
push
fsubrs
daa
pop
out
aad
mov
dec
pop
fs
loop
cs
mov
sbb
and
pop
into
lock
cmp
push
mov
sbb
push
cmpsb
sti
movsl
cld
les
jg
mov
dec
outsb
or
imul
fsubl
cmpsl
test
nop
mov
rcrb
and
inc
inc
add
sbb
enter
push
cmp
inc
sub
lret
dec
xchg
mull
into
pushf
mov
outsb
icebp
movsl
fwait
sbb
jmp
pop
mov
int3
inc
xchg
addr16
xchg
aad
inc
shrl
in
jl
inc
and
mov
sub
jg
sbb
pushf
imul
enter
rol
and
aad
je
dec
sub
mov
nop
pushf
mov
rorb
in
in
subl
push
rcrl
pop
cmpsl
and
addb
in
push
cmp
jmp
dec
leave
lret
mov
mov
xor
mov
lds
scas
sarl
test
ja
cmp
ret
or
dec
sbb
cmpsb
test
ss
push
push
add
aas
stc
fstpt
cmp
sarb
or
sub
mov
rclb
negl
cli
jne
into
test
push
sbb
enter
loope
mov
loop
mov
push
cli
nop
mov
jns
xchg
or
lods
ret
mov
imul
in
xchg
jo
push
sbb
cmp
stc
stc
lea
pop
mov
pop
or
daa
jns
adc
mov
mov
mov
sub
int
bound
cmp
inc
jbe
shlb
fwait
xchg
add
jb
int
mov
xor
and
sbb
push
fdivrp
popa
push
mov
adc
sbb
sub
jl
ror
rcrl
push
gs
iret
inc
dec
jp
mov
and
mov
nop
mov
inc
inc
and
mov
aaa
mov
lock
mov
xchg
je
and
imul
cwtl
dec
jb
adcl
dec
in
movsl
mov
xchg
pusha
push
shrl
pushf
adc
mov
dec
pop
sub
push
mov
imul
rorl
jecxz
cmp
push
ret
sub
scas
popf
xor
xchg
dec
mov
sub
dec
nop
cmp
enter
bound
jbe
leave
in
push
mov
clc
mov
fsubr
ss
popf
fs
xchg
cli
jle
mov
jp
pop
or
fwait
mov
push
xchg
notb
adc
es
filds
sbb
sub
mov
aaa
shll
push
pop
int
daa
add
jnp
insb
shll
scas
rol
lea
ja
arpl
cmc
neg
sahf
ds
pop
gs
dec
and
jbe
sarl
sub
dec
movsb
mov
movsb
xchg
and
mov
and
push
ss
mov
out
adc
mov
insl
mov
mov
data16
mov
push
mov
or
outsl
mov
leave
add
pop
lods
mov
and
outsb
mov
push
and
push
or
inc
dec
jmp
cmp
movsb
inc
or
mov
dec
aaa
out
pop
ja
sub
loop
xor
stos
push
inc
push
or
sbb
or
jmp
sbb
cmp
clc
and
dec
adc
sbb
sbb
pop
mov
loopne
sbbb
imul
std
xor
int3
pop
add
dec
imul
mov
cmp
mov
jl
inc
add
fists
pop
and
or
jecxz
sti
push
fcmove
lret
sub
jmp
leave
test
and
loop
or
xchg
lods
push
push
fidivl
dec
push
dec
sbb
in
mov
mov
and
mov
cs
mov
pop
or
mov
outsb
test
shlb
leave
es
stos
fwait
outsl
mov
push
andnps
mov
rcrl
lcall
sub
int
hlt
sub
das
xchg
pop
jnp
cld
lret
mov
pushf
and
imul
rcrb
adc
popf
arpl
jp
adc
xchg
mov
sbb
fidivrl
inc
pop
cld
jns
add
push
ret
mov
aas
lea
xchg
adcl
xchg
inc
sbb
push
push
pusha
push
xor
scas
mov
push
roll
pop
cli
insl
cmpsb
mov
ja,pn
imul
shlb
leave
jbe
xor
ss
stc
fs
lods
test
cmp
add
clc
push
call
mov
adc
mov
xchg
fistps
inc
icebp
mov
dec
dec
cs
into
xor
and
out
shl
xor
aad
mov
xchg
scas
push
add
add
jp
ret
mov
mov
jp
ja
lahf
ss
mov
insb
mov
inc
loope
mov
mov
les
ret
imul
fbld
shll
cltd
lds
jae
es
out
aam
mov
aas
or
jbe
popf
sub
xor
mov
ss
mov
rcl
notb
enter
nop
enter
mov
cwtl
add
and
mov
and
pop
leave
or
add
add
aas
xchg
lock
jp
mov
inc
mov
cmp
dec
sti
mov
aam
cli
xchg
rorb
out
jae
or
outsl
cli
inc
nop
jbe
fsts
push
xchg
out
jne
cmp
sbbl
scas
mov
test
sahf
comiss
imul
mov
icebp
stos
jae
or
push
add
testb
pop
cmpl
out
andl
popl
or
repz
jno
xchg
loope
dec
clc
mov
mov
add
not
mov
addb
xchg
rcrl
pop
jmp
mov
mov
push
ds
mov
out
jo
inc
loop
mul
and
outsb
add
add
inc
clc
cmc
xor
inc
icebp
xchg
xchg
xor
xlat
push
or
inc
or
test
cmpsl
lret
sbb
xchg
mull
mov
adc
pop
push
inc
and
lret
decb
jg
and
mov
add
lods
cmp
add
in
pop
inc
dec
push
mov
and
push
ljmp
stos
sub
mov
pushf
subb
sahf
fimuls
lods
and
lret
dec
rolb
mov
push
and
jp
repnz
dec
mov
push
dec
insl
sbb
lods
inc
outsb
push
jnp
mov
mov
jl
pop
fnstsw
or
pop
cmp
or
xor
cmc
lods
iret
lods
add
xor
adc
and
pop
arpl
xchg
or
mov
sub
or
adc
add
xor
in
xor
mov
cmp
rcll
iret
lahf
cmp
cmp
push
cmp
mov
subb
gs
or
jmp
cmp
pop
js
mov
das
pop
fdiv
lahf
rcrb
ljmp
adc
xchg
mov
jg
imul
lods
fwait
sub
and
daa
push
imul
sti
mov
or
imul
sbb
aaa
push
ss
aas
cmpsb
mov
out
dec
call
ss
addr16
xchg
cmpsb
dec
cli
dec
addb
pop
movsb
sub
les
insl
push
fisttpll
in
mov
pop
lods
xchg
jb
and
adc
sahf
mov
fisttpll
xor
outsl
or
mov
movsb
iret
push
cmp
lock
bound
jb
push
push
sub
fdivp
fs
ret
push
lret
in
int
iret
movsl
daa
jno
mov
dec
and
jno
or
ror
dec
cltd
add
jl
enter
shrb
out
mov
nop
dec
dec
inc
cld
stos
repz
mov
push
test
setle
ficoms
xor
aam
xchg
xchg
cmp
cmpsb
sbb
sbb
sub
cwtl
jmp
dec
dec
lods
cmp
and
and
inc
mov
mov
fadds
dec
outsl
cmp
fimuls
cmp
mov
test
lea
pop
sbb
lcall
inc
or
popf
inc
cli
or
mov
in
fsubs
mov
inc
mov
addr16
push
inc
popa
sub
or
pop
mov
push
daa
in
ret
loopne
push
aad
jmp
popa
mov
sbb
pop
lret
or
fmuls
pop
les
mov
sbb
adc
mov
dec
sbb
lcall
in
ljmp
leave
pop
cmp
xor
mov
inc
cmp
lahf
dec
xchg
push
dec
test
pop
daa
jo
mov
cmpsl
jno
push
clc
push
sahf
mov
cltd
mov
pusha
pop
add
outsb
sbb
add
popf
loopne
jg
ret
jl
loop
xlat
int3
movsl
mov
inc
cmpb
or
mov
sub
xchg
test
test
xchg
add
rorb
enter
cmp
shl
push
or
sbb
push
or
xchg
fists
lcall
add
rorl
jnp
add
xor
aas
pop
fdecstp
add
sub
in
stos
push
or
inc
cmpsb
add
sbb
mov
mov
xchg
adc
icebp
int3
push
andl
xchg
add
stos
aaa
shlb
dec
xchg
xlat
stos
mov
mov
icebp
shll
cltd
js
jno
or
ja
mov
mov
add
mov
and
cmp
cmp
adc
mov
jmp
cmpsl
int
sub
orl
push
pop
fwait
imul
test
add
out
xchg
test
adcl
jg
and
stos
fs
xchg
sub
rcr
inc
aam
fs
pop
pop
movsl
xor
jns
and
push
call
xor
pushf
int3
jp
cmc
into
aam
lods
jg
sarb
push
int3
popa
fsubrs
fwait
jnp
mov
mov
lcall
sub
xor
jae
insl
jb
push
jmp
sbb
roll
arpl
xor
jns
lret
sbb
cmp
sub
sub
cli
mov
mov
mov
pop
and
rcl
pushf
mov
and
sti
mov
or
cmpb
jno
sarb
push
push
in
in
cwtl
add
and
fidivrl
jge
lods
jae
mov
roll
or
sub
stos
jg
aaa
mov
loope
fcompl
loope
mov
mov
ljmp
mov
xor
cmp
mov
bound
loop
sbb
push
jecxz
and
mov
loope
jne
cltd
dec
xchg
je
js
add
jnp
mov
icebp
addr16
add
push
mov
inc
sub
add
popa
scas
mov
mov
fsubrs
mov
pop
daa
icebp
ljmp
cmp
cmp
dec
mov
cmpsb
push
aam
testb
loope
push
cmp
sbb
jae
jo
push
in
pop
lods
popa
dec
sbb
hlt
add
sti
and
xchg
addr16
hlt
idivl
or
outsb
adc
cs
mov
push
add
or
pop
mov
out
lret
int3
out
mov
jns
add
ljmp
cmp
sarl
and
outsb
jle
dec
lock
sub
enter
bound
fs
stc
scas
xchg
jle
dec
push
hlt
jns
sbb
pusha
sbb
sete
movsl
dec
mov
mov
into
adc
dec
or
add
je
mov
into
lahf
lock
pop
movb
fldt
xchg
aam
jl
add
cmp
cmp
imul
mov
sub
pusha
push
and
xor
imul
es
push
nop
xchg
cs
cmp
lods
out
or
in
sub
je
xchg
sub
and
push
in
adc
pop
mov
mov
popl
shrb
xor
pushf
inc
aas
add
mov
add
push
hlt
inc
cmp
sbb
push
add
and
xchg
add
mov
loope
sub
lret
mov
mov
int3
scas
lret
or
xchg
repz
xor
cmpl
rolb
jmp
sbb
ljmp
pop
fnstcw
sbb
test
mov
in
mov
stos
negb
jle
gs
insb
mov
sub
pop
cltd
mov
in
mov
xor
aaa
and
inc
ja
repz
fwait
add
adc
out
in
mov
mull
mov
and
sti
and
push
pop
loop
sbb
dec
clc
mov
iret
mov
loope
xchg
daa
mov
test
and
jns
es
pop
sub
dec
mov
cmc
loopne
sub
enter
xor
dec
cmp
popf
add
data16
scas
push
xor
lcall
mov
clc
idivl
push
cld
addr16
inc
lock
and
int
xchg
fldl
pop
fnstsw
mov
mov
lcall
cltd
iret
lret
in
lds
stc
cmp
pop
enter
lods
in
cmp
cmp
jb
push
inc
dec
cwtl
sbb
or
lea
mov
std
lds
loop
cli
gs
mov
jnp
adc
leave
add
cmp
mov
pop
in
ret
push
xchg
cltd
pushf
adc
add
mov
adc
int
in
push
mov
mov
add
incl
in
aaa
cltd
out
lock
imul
test
pushf
mov
out
pop
ds
push
add
std
dec
outsb
push
jbe
push
push
std
imul
mov
mov
filds
enter
mov
ds
mov
hlt
out
xchg
pop
clc
xchg
std
int3
lcall
hlt
cld
fsubrl
stos
test
imul
leave
fisttps
repz
mov
xchg
icebp
mov
dec
out
sub
and
rcrb
push
push
aaa
arpl
sbb
or
orl
jecxz
in
call
push
push
xor
nop
mov
out
js
aam
cltd
ret
repnz
subb
lock
orl
cmpl
pop
mov
mov
fnstsw
or
cmpb
xor
cmpsb
xor
icebp
jae
aaa
pop
add
dec
adc
or
addr16
sub
addr16
sub
repz
out
xchg
xor
push
ret
je
jo
inc
xor
aam
sbb
xor
dec
sbb
adc
movsl
idivb
mov
pop
and
ljmp
outsl
mov
stos
in
js
sub
and
pop
inc
cwtl
lds
leave
or
adc
movsl
xchg
or
subl
pushf
inc
xchg
pop
loope
stos
inc
jg
jne
dec
adc
push
imul
xchg
lods
mov
mov
mov
jnp
pop
ljmp
bound
rolb
mov
imul
pop
ret
or
push
aaa
jecxz
add
dec
dec
sbb
mov
aam
xchg
lods
push
insl
sbb
pop
add
cmp
sbb
sbb
mov
ret
xchg
in
add
cmc
int3
mov
mov
cltd
out
pop
test
clc
xchg
fs
lret
repnz
pop
mov
mov
push
arpl
adc
stc
rorb
leave
stos
cs
clc
daa
dec
dec
inc
mov
pop
addr16
stc
in
es
orb
ror
and
test
andl
xor
popa
jecxz
ds
adc
js
sub
jge
xor
leave
aas
dec
sub
in
xor
shll
xchg
int
dec
dec
jne
mov
lds
push
pop
lret
imul
and
and
ja
aas
sub
jno
mov
mov
mov
xchg
jmp
mov
pop
sub
and
add
push
popa
mov
rolb
call
mov
mov
ja
xchg
fisubrl
aaa
dec
imul
jne
pushf
es
fisubl
repnz
aam
aaa
mov
mull
push
in
je
pop
push
test
cmp
jae
cmp
loopne
dec
addr16
cmp
and
aas
or
pop
mov
mov
dec
lea
loope
xchg
idivl
xorl
mov
or
or
push
popa
jl
lea
call
mov
scas
dec
mov
cmp
push
inc
fnop
pop
jo
inc
mov
icebp
sbb
inc
fnop
mov
dec
imul
dec
xor
pop
jmp
xchg
movsl
mov
mov
push
scas
arpl
and
lret
sti
shrl
mov
scas
xor
pusha
fmull
inc
push
orb
fisubl
xchg
mov
dec
lret
sti
jns
mov
imul
ss
lock
jo
enter
movsb
in
addr16
sbb
xchg
mov
and
mov
mov
decb
push
lret
xor
add
xlat
push
sub
test
adc
dec
and
push
imul
push
sahf
pop
stos
inc
dec
pop
jl
pop
pop
and
insb
push
addr16
jo
inc
jns
out
push
mov
mov
or
fisubrl
and
sub
inc
popf
pop
arpl
repz
nop
pop
xor
xor
pop
icebp
and
and
in
inc
xor
or
outsb
mov
data16
mov
loop
pop
push
aaa
outsb
testl
lods
mov
xlat
xlat
into
es
xchg
mov
aaa
cwtl
int3
test
divl
jl
mov
mov
xor
add
into
mov
and
leave
ja
mov
popl
repz
out
sbb
jp
mov
cmp
divb
push
xchg
sub
je
popf
test
arpl
out
push
mov
or
pop
sub
xchg
mov
shr
mov
xor
fimull
dec
mov
mov
fnsave
repz
mov
inc
adc
push
pop
loop
sbb
push
push
pusha
call
xlat
rorl
sbb
jge
pop
in
fildll
ficoms
pop
or
jo
jno
xor
inc
or
in
cmc
cmp
test
cmp
test
mov
js
mov
mov
stos
pop
idivl
mov
scas
mov
stos
pop
fstpt
dec
sahf
jns
dec
cmp
sbb
loopne
in
iret
sbb
fcomps
shll
imul
pop
add
or
inc
and
push
outsl
add
xchg
outsb
hlt
cmpsl
sbbb
repnz
pop
adc
push
mov
mov
cwtl
push
imul
ss
dec
xchg
repz
subb
dec
lea
gs
xchg
movsl
sarb
xchg
aad
cs
pusha
push
stos
push
imul
push
sub
std
loop
mov
out
push
dec
popf
or
pop
outsl
popa
iret
inc
out
xlat
pop
mov
test
aas
sbb
aaa
pop
push
aaa
dec
loop
repnz
test
xlat
push
or
and
into
sub
or
xlat
mov
push
xchg
movsl
fstpt
aas
dec
fcmovbe
lcall
jg
dec
fcmovnbe
xchg
xchg
test
popf
sarb
pusha
jecxz
xchg
xor
aaa
xlat
cmp
push
adc
cmc
iret
mov
mov
leave
je
dec
and
je
lods
add
int3
cmpsb
rolb
adc
or
jle
mov
movsl
inc
push
cmp
xchg
aas
stc
dec
or
mov
imull
cmp
push
out
pop
call
xor
stc
adc
cmp
ljmp
les
imul
cs
inc
and
bound
inc
and
push
or
sub
fdivrs
lock
es
jle
fwait
out
jne
add
rolb
push
push
sub
mov
xor
iret
adc
sub
cld
iret
idivb
cmpl
in
pop
fsub
js
ss
sbb
lock
ret
cmp
push
cmc
into
lcall
and
jmp
and
test
movsl
stc
sbb
ds
or
jbe
xor
push
cmp
clc
mov
lcall
mov
xor
xor
mov
xlat
mov
jnp
jae
jbe
mov
loopne
jns
xchg
or
jmp
jp
xchg
ljmp
mov
je
fisubs
shll
daa
jnp
divl
mov
pop
sub
fcmove
jmp
sub
jmp
lea
xor
and
mov
dec
mov
dec
mov
aaa
xlat
test
push
and
xlat
push
jns
inc
js
jmp
fiadds
test
push
sbb
cmp
mov
ja
lret
add
fwait
pushf
aaa
int
sbb
pop
imul
lret
push
fisttpl
and
scas
pop
mov
jns
cmp
fimull
pop
jo
push
shlb
adc
jns
pop
fs
mov
jmp
ret
lret
stos
push
push
add
js
int
mov
adc
sahf
lds
jge
leave
stos
gs
mov
push
jmp
jno
inc
idivl
sbb
repnz
mov
call
dec
dec
inc
xchg
outsb
lock
jle
push
mov
jns
xor
movsl
insl
enter
cmpsl
mov
inc
andl
mov
test
fstl
jnp
enter
jb
jl
mov
pop
jb
aam
push
shrl
xor
inc
inc
jo
mov
or
fwait
outsb
push
insl
les
rol
scas
outsb
and
xor
jo
out
les
pop
pop
hlt
pop
xor
movsl
jle
jl
mov
cmovbe
jmp
daa
xchg
pop
mov
lock
and
push
sub
xorl
mov
fcompl
and
rcr
mov
mov
mov
fidivs
gs
cwtl
mov
or
cmc
mov
fwait
sbb
les
push
iret
cmpsb
loope
dec
lds
or
jnp
xchg
sbb
mov
inc
mov
mov
adc
popa
sbb
jns
xlat
xor
xchg
test
inc
inc
lock
and
mov
jl
adc
cmp
mov
mov
fs
xor
lock
in
push
aas
jb
cld
or
jns
cli
ret
add
jne
out
popa
movsb
ss
pop
pop
add
xlat
sub
mov
sti
push
insb
add
inc
lret
and
jge
lcall
std
mov
repz
inc
mov
inc
push
addr16
in
dec
xor
inc
outsl
xorb
ret
mov
mov
xchg
cmc
jo
push
push
pop
pop
jecxz
popf
push
cmp
es
or
sbb
rorl
out
jmp
sub
ds
cmp
and
arpl
pop
aad
push
das
nop
lea
aas
fisubl
or
or
in
pop
sub
lahf
push
pushf
sub
cli
dec
or
in
fwait
lret
notl
out
or
xchg
idiv
outsb
cmp
mov
loop
mov
cmc
fnstsw
or
cmp
sbb
xlat
arpl
lods
push
ss
scas
mov
inc
ret
pop
inc
enter
mov
xor
setle
dec
inc
cmpsb
xor
adc
ljmp
rclb
mov
add
dec
adc
ror
rcrb
cmp
pop
adc
sbb
jecxz
dec
mov
jno
mov
push
pop
in
mov
iret
or
aad
insl
adc
push
mov
lret
les
mov
and
and
inc
inc
neg
mov
and
xchg
ds
jnp
in
inc
or
stos
call
xor
or
pop
inc
imul
push
cs
jmp
adcb
lock
aaa
and
push
lock
mov
or
adc
orb
lgdtl
and
shll
in
mov
mov
std
jns
stos
or
jb
fsubl
push
xor
cltd
mov
push
movsl
add
fcmovu
or
test
mov
pusha
pop
xor
scas
jne
xchg
jae
or
or
xchg
fcoml
add
push
fsubrp
jmp
in
mov
inc
int
or
aad
rcrl
xchg
jbe
jecxz
or
add
dec
sub
sbb
sbb
inc
dec
xchg
jl
imul
or
pop
and
in
fisubrl
adc
ss
das
sub
xchg
pop
addl
add
xchg
jnp
jle
scas
xor
cmp
jmp
adc
inc
dec
in
pop
lds
adc
imul
push
je
bound
mov
cwtl
or
fstpl
pop
or
inc
inc
jnp
testl
test
cmp
repnz
stos
xchg
xchg
sahf
add
cmp
mov
aad
push
push
mov
pop
xchg
adc
mov
ja
std
fiadds
and
lds
negb
pop
in
les
mov
mov
and
push
xchg
mov
inc
addr16
inc
lea
push
mov
xor
scas
push
in
xchg
stc
cmp
mov
dec
sbb
inc
pusha
xchg
mov
mov
stos
sub
jo
push
aaa
add
outsl
xchg
adc
cmp
cli
push
fs
pop
pop
mov
cmpsb
loop
sahf
rcll
jne
leave
outsl
adc
and
xchg
mov
mov
lcall
insb
lahf
mov
dec
inc
clc
mov
add
cwtl
xchg
test
add
sbb
adc
and
mov
mov
popf
xor
xor
or
sub
inc
sub
mov
cmpl
mull
cwtl
insb
adc
cmc
jecxz
out
mov
ss
jno
ljmp
adc
in
push
scas
in
lds
or
sub
les
ss
sub
jge
mov
mov
pop
sub
lock
movsl
test
adc
jecxz
jecxz
ret
fnstcw
push
xchg
cltd
out
push
int3
push
adc
xor
cwtl
mov
mov
sub
xor
insb
push
push
je
push
jmp
mov
ljmp
and
mov
or
lock
ljmp
jns
add
fcmovnbe
ficoml
cmpsb
les
jo
adc
out
insb
lahf
stos
adc
inc
jae
iret
mov
aam
rcll
xchg
aaa
mov
xchg
inc
mov
xor
sub
scas
mov
test
sbb
loope
xor
xchg
mov
mov
mov
lock
loopne
sti
outsl
stos
inc
dec
fldcw
mov
incb
fwait
movsb
and
push
mov
repnz
add
jp
in
push
push
jle
scas
fs
lds
lgs
or
mov
and
add
and
popa
lret
adc
mov
push
cmp
pop
test
inc
pop
sbb
fbld
mov
and
dec
jle
jge
cmp
cmp
mov
jb
loope
mov
cmp
mov
paddq
pop
iret
dec
dec
ss
or
out
out
rcrl
out
pop
stc
or
jbe
aaa
inc
and
into
and
jle
xchg
sbb
jb
dec
push
add
push
out
ljmp
inc
push
mov
xor
call
inc
mov
iret
xor
push
loopne
addb
xchg
xor
int
xor
outsb
mov
fld
push
mov
sub
test
mov
adc
push
shlb
mov
jbe
sbb
addr16
push
test
lock
or
add
jb
lret
jo
add
daa
adc
sub
pop
stos
cmp
mov
sbb
push
les
in
fisttpl
stc
dec
xchg
push
mov
cmc
sub
popf
inc
es
lea
in
jg
out
cmpsb
add
in
xchg
inc
and
loopne
push
test
sub
mov
mov
repz
retw
adc
mov
jl
cmp
aad
adc
push
imul
push
adc
jnp
dec
enter
clc
bound
sbb
jae
cmp
adc
jmp
inc
xchg
and
or
shll
push
xchg
in
stc
xlat
call
jne
insb
int3
out
jle
movsb
mov
cmp
push
sub
add
push
inc
js
mov
lea
int3
stc
or
es
call
sbb
rclb
or
sbb
or
mov
inc
mov
out
inc
and
inc
and
imul
fldl
fwait
mov
sub
mov
pusha
jno
stc
in
cmp
ss
xor
in
sbb
gs
and
test
pusha
jmp
jb
pop
js
pop
in
pusha
cmp
mov
lcall
insl
mov
test
lods
out
xchg
and
pop
cmp
pop
pop
push
push
and
mov
das
xor
aad
cmc
arpl
add
dec
mov
sub
pop
inc
mov
adc
jno
mov
es
stos
bound
and
rorb
les
sbbl
jae
dec
es
stc
xor
mov
fwait
ror
aaa
mov
push
inc
and
fdivs
or
sbb
cmp
aam
jg
mov
int3
shlb
jmp
shrb
cmp
inc
xchg
mov
add
add
pop
stos
jge
cli
movsl
lret
pop
sub
orl
inc
imul
pop
adc
xor
adcb
inc
push
icebp
int3
or
cs
jbe
cmpsb
mov
cli
divl
lea
je
ljmp
dec
mov
lret
outsl
dec
sbb
jmp
inc
in
sahf
dec
int3
dec
cmp
mov
mov
lods
shrl
inc
das
or
or
mov
push
pushf
xor
jmp
jle
fisttpll
subl
pop
mov
into
adc
mov
mov
and
push
jp
and
jp
pop
or
xlat
pushf
push
and
in
mov
sbb
mov
mov
inc
iret
enter
enter
mov
mov
enter
loopne
dec
sti
or
jne
pop
addr16
ja
shrb
push
jmp
sbb
shlb
push
sbb
ss
inc
pop
adc
shll
lahf
nop
fs
out
into
rcll
jp
dec
or
mov
push
lock
add
outsl
sbb
pop
add
push
movsb
mov
test
sbb
mov
test
cmp
mov
fnop
jnp
pop
mov
adc
xor
xchg
clc
mov
into
dec
ror
je
pop
xor
stos
add
inc
xchg
sub
ss
dec
inc
mov
pop
pop
js
mov
out
mov
test
adc
push
jge
addr16
push
mov
movb
les
ljmp
xchg
hlt
out
fwait
sub
mov
sbbl
in
sbb
test
jae,pn
and
fldt
xchg
dec
mov
adc
push
fsub
add
ficoms
or
sbb
out
mov
xor
lds
xor
enter
fsubp
pushf
mov
dec
sub
push
pop
and
or
jg
dec
mov
push
or
cmpb
adc
inc
std
mov
sbb
scas
push
fnstsw
in
jo
scas
jae
mov
sub
jne
sbbb
dec
test
xchg
hlt
mov
inc
test
xor
mov
leave
dec
jge
jne
adc
fistpl
jae
fists
mov
xchg
mov
cmp
inc
inc
aam
cmp
imul
mov
mov
in
add
gs
dec
inc
sahf
bound
xor
rcl
js
fistpl
mov
mov
js
fadds
dec
psubq
jbe
out
test
jmp
cs
stos
mov
lea
dec
sub
or
or
test
jmp
addr16
add
push
add
lret
stos
or
iret
sarb
jb
clc
aam
nop
jp
movsl
sub
clc
lcall
pushf
jmp
into
mov
push
out
mov
push
jl
cltd
fcompl
mov
add
iret
in
mov
xchg
lods
pop
xchg
sbb
mov
mov
or
sub
or
in
add
orb
arpl
xlat
push
mov
in
imul
daa
outsl
outsl
jne
scas
sbb
xchg
popa
xchg
arpl
lods
cmp
ficoms
sahf
pop
xchg
push
jo
aas
mov
xor
out
out
sbb
pop
push
dec
jae
cmp
mov
dec
cmp
stos
repz
in
setle
pop
out
sbb
ds
jns
mov
mov
cwtl
push
shl
fldl
pop
xor
fnstcw
dec
outsb
fwait
mov
enter
sbb
fnstenv
pop
cs
mov
mov
mov
aam
mov
lods
sub
arpl
mov
mov
add
aaa
jbe
pop
pop
mov
jg
andb
mov
push
adc
jle
adc
pop
mov
filds
jmp
lock
and
inc
push
lock
and
or
nop
sbb
push
lret
cmp
stos
adc
jns
jecxz
or
addb
sbb
aam
loopne
xchg
mov
rolb
mov
xchg
cmpsb
push
jecxz
sbb
jnp
push
negl
rorl
xchg
movsb
bnd
adc
sub
imul
cmp
into
xchg
xor
or
pop
cmp
jbe
mov
ljmp
mov
xchg
fsubs
cmp
mov
adc
push
push
inc
addr16
mov
cmp
test
cs
sti
pop
xor
xchg
adc
mov
mov
push
out
inc
ret
je
fs
sbb
vpaddb
cmpsb
pop
addl
dec
and
adc
push
inc
lock
test
out
je
sub
subb
int
repz
lcall
or
sub
sbb
fisttpll
mov
sub
les
push
leave
dec
mov
stos
icebp
or
xchg
clc
addl
mov
push
outsl
pop
gs
mov
aaa
imul
outsb
sub
add
ret
mov
add
test
scas
pop
sti
out
sbbl
pop
sahf
jae
loop
mov
sbbl
loop
mov
lret
cs
jae
mov
cwtl
xchg
xor
xlat
gs
xor
mov
hlt
push
push
and
lret
jmp
inc
pop
inc
icebp
push
pop
out
xchg
sbb
or
xor
dec
jne
jge
jo
sbb
nop
jbe
pop
fstpt
js
hlt
dec
cmc
es
or
cli
mov
push
jbe
cmp
pusha
pop
movsl
fdivl
cmpsl
or
mov
daa
out
or
push
push
out
divl
jo
jo
cmp
inc
gs
sub
push
inc
xor
les
mov
loopne
mov
cs
mov
xchg
lods
loope
sti
mov
cmp
cmpsb
int
push
sub
push
in
iret
mov
cmp
loope
cmpsl
cmpb
mov
add
jb
mov
gs
and
jnp
pop
mov
fisubrl
dec
fwait
mov
js
mov
xchg
out
sbb
sbb
mov
int
clc
add
iret
xchg
rolb
jmp
inc
movsb
popf
dec
cli
test
jge
sub
lea
mov
or
addr16
test
ror
cmp
cmp
or
xor
or
sub
pushf
xor
inc
push
es
inc
insl
mov
xchg
cltd
int
pop
fsts
mov
ds
jmp
or
into
adc
into
push
xor
scas
sti
add
scas
fdivrl
pushf
test
mov
mov
enter
icebp
shl
mov
shrb
cld
mov
push
test
pop
addr16
sbb
lods
in
cmp
add
int3
popa
iret
shll
xchg
into
stc
cli
or
cmp
cmp
inc
mov
xchg
xchg
fisttps
sti
sbb
imul
je,pt
imul
out
lds
mov
stos
cmpsb
cmp
fcoms
shl
pop
cwtl
daa
adc
cwtl
dec
scas
xor
dec
xchg
or
lds
ljmp
sub
xor
sahf
jae
lods
sbbl
xor
sti
push
jp
adc
xor
and
into
adc
xor
dec
and
in
test
divl
out
mov
lods
xor
lret
clc
jae
or
adc
inc
add
jae
pusha
mov
lret
xor
mov
je
jecxz
add
movsl
cli
mov
fmuls
or
aaa
jmp
sbb
cmp
xor
push
mov
insl
sbb
arpl
loop
push
inc
or
and
add
ljmp
adc
xor
or
push
xchg
in
and
sbb
and
scas
jo
adcl
xorl
test
mov
mov
xchg
insb
jb
add
or
clc
cmpsl
ret
daa
ss
mov
out
test
hlt
repnz
xor
push
jecxz
add
mov
xor
dec
push
mov
mov
add
int3
jg
pop
cs
xchg
and
xchg
xchg
jnp
pop
gs
jns
dec
push
aad
jb
jp
subl
sbb
data16
stc
popf
adc
push
js
add
movsl
sub
aam
mov
in
pop
xor
mov
pop
and
roll
and
fucomp
push
mov
fsubr
incb
fsubrl
or
jae
xchg
arpl
insl
sti
adc
jle
cmp
out
cmp
testb
lock
rol
imul
outsb
pusha
dec
jp
add
xor
dec
fmulp
dec
faddl
sub
adc
jo
ret
add
xchg
clc
pop
movsl
ret
fwait
inc
inc
xor
sub
fwait
rcrl
cmc
ja
or
aad
sbb
xchg
mov
mov
clc
mov
inc
dec
push
hlt
mov
test
or
sbb
and
sbb
inc
cmp
push
cld
rorb
sbb
int
pop
mov
test
aad
out
repz
scas
xor
lcall
jp
cli
stos
jecxz
dec
sbb
push
bound
xor
loope
je
mov
loop
jne
imull
inc
sarb
inc
mov
lock
nop
les
dec
test
push
jbe
test
jg
push
cmp
sahf
sub
lcall
outsl
push
mul
cmp
aaa
out
sbb
mov
add
xlat
fcomps
mov
das
into
adc
lock
test
mov
dec
xchg
adc
and
inc
in
int
and
adc
adc
imul
std
mov
inc
lock
xchg
das
lds
xchg
xchg
jb
mov
lret
sbbb
xor
and
sti
out
call
jecxz
cmc
mov
test
idivl
jl
dec
jne
int
hlt
push
mov
pop
sub
addr16
je
or
cmp
clc
adc
mov
and
mov
add
xchg
clc
and
scas
adc
jb
repz
mov
inc
scas
mov
xchg
scas
xor
cmpb
movsb
push
cmp
movsb
mov
cmc
scas
testb
icebp
rcll
push
push
jb
lods
mov
cmpsb
aas
xor
outsb
mov
lahf
xor
je
xor
cmp
pop
xchg
and
and
pop
repz
mov
rorl
in
sbb
jl
das
jecxz
xor
xchg
jg
or
jb
imul
dec
push
out
jbe
movsl
stc
inc
jne
sbb
xchg
jnp
xor
jmp
mov
xor
mov
add
es
cmpsl
je
jmp
sub
decb
cmp
or
sbb
or
or
in
mov
das
cmp
jl
xor
lock
pop
sub
dec
or
pop
inc
aad
lock
or
icebp
sbb
loop
mov
or
sub
jmp
pop
push
test
not
mov
insb
and
push
xor
sub
stos
clc
repz
adc
adc
adc
sar
jbe
mov
adc
push
cmpsb
mov
enter
cmpl
lret
pop
iret
clc
cmp
or
sub
test
xchg
jle
ja
adc
mov
fisttpll
adc
insb
in
mov
pop
addr16
jp
loopne
in
sti
icebp
or
lock
popa
mov
sub
lret
pop
mov
popa
mov
arpl
add
shrb
push
xor
out
mov
je
adc
clc
das
dec
stos
or
shrb
imul
sti
and
jg
and
insb
negl
out
add
in
dec
repnz
mov
sub
leave
or
sahf
orb
xchg
lds
fwait
out
lret
in
out
cmc
mov
subl
shrl
cmp
cmp
inc
xor
insl
pop
xchg
enter
or
ljmp
fcomps
sbbb
stos
fistpll
es
jp
fnsave
and
mov
in
jnp
mov
cs
adc
xchg
mov
jecxz
dec
add
aas
gs
or
inc
pop
das
dec
das
pusha
outsl
icebp
xchg
cmpsb
loope
jge
xchg
test
mov
popa
dec
sbb
mov
pop
movsb
shl
out
xor
jg
pop
xorb
icebp
in
rcl
popf
pop
sbb
hlt
pop
adc
sub
icebp
in
sbb
or
xor
add
jmp
pop
adc
push
loopne
out
std
push
dec
mov
pop
sub
or
mov
pop
pop
mov
testb
jecxz
mov
add
jecxz
fwait
and
sahf
and
out
lock
pusha
dec
sahf
xchg
xchg
mov
mov
xor
pop
xchg
clc
or
pop
pusha
mov
int
int3
push
sbbl
mov
and
jnp
loopne
sub
mov
sahf
inc
sbb
cmpsl
rol
xchg
mov
js
dec
jne
or
cmc
cmpsb
sahf
orb
or
test
mov
xchg
sub
xchg
add
mov
pop
inc
or
sti
or
daa
inc
adc
and
pusha
xchg
bound
push
or
sub
int
xchg
les
dec
jns
ljmp
insl
cmpsl
repnz
inc
arpl
or
shlb
xchg
mov
adc
test
jmp
add
int
sbb
lock
aas
mov
or
loopne
add
mov
inc
rcr
push
inc
xchg
cmp
push
shrb
int
push
idivb
xchg
sub
mov
mov
shll
popl
push
jl
cld
mov
dec
adc
jbe
mov
shl
stos
fcomps
xor
cs
push
enter
cmp
xor
shr
sbb
jmp
dec
pop
lahf
repz
insb
xchg
mov
xchg
jl
jo
jp
xchg
jp
fld
sti
mov
and
mov
pop
cltd
sub
das
fisttpl
fdivl
bound
lea
std
subl
rorb
pop
popa
mov
scas
std
mov
sub
xor
lcall
sub
pop
aas
push
jge
pushf
cs
js
xor
push
out
ss
jo
pop
push
xchg
repz
mov
push
aas
rcll
mov
mov
sbb
add
sti
mov
fisubrs
jb
ljmp
push
int
cmp
lods
in
insb
xchg
mov
in
add
ret
mov
fldcw
cli
pop
pop
lock
je
cmp
test
jp
xchg
adc
sbb
push
cmp
sub
fs
gs
test
fists
mov
aaa
xlat
mov
or
and
int3
lret
aaa
push
test
jg
sub
jmp
cli
jle
sbb
ficompl
popa
lods
or
xchg
mov
push
pop
pop
mov
fidivl
rol
sbb
mov
loope
lods
inc
inc
jo
pusha
and
lods
sbb
mov
xchg
push
dec
and
das
mov
in
add
or
sbb
cmp
fdivrs
and
add
les
int3
icebp
ljmp
inc
testl
pusha
ret
mov
shr
cmp
jns
lods
cmp
cmpsl
mov
sub
or
int3
insb
test
xor
sbb
sbb
scas
fsubr
jns
dec
jnp
xlat
sbb
loop
mov
mov
in
fadds
in
adc
clc
jno
movsb
cmp
xchg
adc
push
pop
and
aad
jbe
adc
inc
cmp
cmp
xchg
jo
add
lcall
mov
pop
aaa
enter
xor
adc
xchg
notl
xchg
call
and
call
add
in
push
push
lds
test
pusha
adc
jbe
sub
ljmp
sub
xor
repnz
jg
scas
xor
or
mov
or
or
cmp
sbb
aaa
out
mov
pusha
dec
mov
inc
cmp
incb
hlt
scas
push
cwtl
mov
jmp
testb
lret
int3
hlt
push
xor
in
xor
out
iret
popf
movsl
push
iret
mov
repz
sti
pushf
cltd
mov
xor
test
xor
pop
adc
stos
pop
jmp
adc
push
xchg
lds
test
push
imul
jne
mov
mov
rclb
pop
dec
sbb
mov
mov
and
aas
lock
add
repnz
add
or
inc
mov
mov
or
and
clc
movsl
pop
adc
xor
scas
mov
lods
cmp
roll
in
jge
mov
test
daa
add
out
test
dec
shr
push
cmc
jne
cli
fdivrl
sbb
mov
push
out
xlat
shrl
ss
bound
jb
mov
addr16
mov
adc
mov
lahf
ficomps
in
xchg
shrl
or
ret
mov
stc
lods
rclb
addr16
test
lret
add
lods
pusha
xchg
lcall
xor
cmc
adc
subb
outsl
xchg
cmc
xor
xchg
hlt
cwtl
add
cmp
jg
imul
insl
and
popf
scas
sbb
inc
cmp
add
bound
mov
cld
cmp
jae
add
mov
sub
jbe
pusha
mov
insl
popa
cmp
sbb
hlt
lds
and
dec
data16
lret
dec
data16
or
stos
cmp
fstpl
mov
add
in
in
push
dec
and
inc
std
or
pop
btr
sub
mov
ret
lcall
xor
xchg
ss
mov
mul
xchg
imul
jge
sbb
test
push
xchg
add
popa
rorb
pop
xor
mov
pop
shl
cmp
pushl
push
ret
fmull
mov
jl
out
loop
push
lods
xor
arpl
push
sub
add
filds
lret
das
jbe
sahf
adc
dec
ret
ja
jne
stos
mov
fists
lahf
test
movsb
insb
jae
lods
dec
pop
lock
pop
xor
push
xor
test
push
add
mov
enter
cmp
repnz
sbb
dec
cld
mov
push
and
mov
sarl
loop
bound
jnp
testb
and
lock
pop
scas
pop
pop
or
sub
or
mov
sbbb
std
jmp
lods
icebp
add
xchg
adc
pop
push
adc
push
add
nop
mov
mul
jg
lret
les
sub
push
inc
aam
stc
xchg
jp
scas
pop
add
dec
sbb
push
fwait
jnp
jge
daa
fs
fwait
cmp
xor
loopne
into
in
push
push
mov
mov
lahf
dec
rol
dec
fcoml
jbe
inc
lret
fstpl
push
jns
es
js
int
stos
mov
sbb
data16
pop
out
pushf
mov
scas
xor
xor
lcall
int
xor
ss
das
stc
aad
mov
or
aam
stc
mov
cmp
mov
and
loopne
mov
pop
fidivs
jnp
scas
xchg
fldcw
mov
and
or
lcall
repnz
lss
imul
ds
sarb
push
loope
loop
xor
mov
inc
inc
cmc
jp
lret
lcall
or
xorl
cmpsl
sbb
xchg
outsl
mov
mov
adc
test
in
pop
mov
stos
mov
divl
jns
data16
je
mov
mov
xchg
in
arpl
adc
arpl
aam
adc
jmp
and
dec
inc
stos
xor
in
inc
mov
ret
dec
lret
xlat
mov
mov
aas
daa
fcmovnu
or
cli
lcall
xchg
push
inc
dec
push
cmp
inc
and
mov
dec
jp
lods
das
out
mov
jle
mov
repz
and
aad
popf
sub
inc
inc
addr16
rclb
mov
out
push
outsb
cli
sbb
jle
push
int3
jl
out
das
fstpt
rep
ffree
ret
xor
loopne
rorl
ja
sub
movsb
arpl
push
mov
adc
int
add
lahf
out
pop
mov
imul
mov
subb
aam
jnp
daa
or
or
and
shll
pop
inc
mov
mov
lcall
aaa
inc
idivb
ja
shlb
insl
cmp
mov
es
lods
test
nop
jo
fisubrl
sub
enter
dec
push
out
mov
pop
mov
test
jae
aas
repnz
sar
mov
enter
mov
and
sbb
stos
cmp
xchg
ret
xor
aad
mov
inc
sbb
loopne
push
mov
int3
movsb
jg
jmp
xor
inc
ror
mov
ds
into
rorl
clc
add
call
jns
push
xor
imul
into
jno
push
cmp
imul
pushf
mov
add
mov
out
cmp
lods
inc
arpl
pop
push
xchg
loope
stc
test
scas
lods
loop
and
jns
cmc
cmc
aas
mov
mov
popf
cmc
filds
pop
sub
jl
enter
hlt
xchg
dec
fdivr
gs
mov
scas
mov
sahf
cmp
test
cwtl
out
mov
in
mov
incl
adc
or
push
aad
adc
jge
cmp
sti
fistpl
ds
scas
cld
jg
ljmp
fimull
pop
loop
inc
insl
adc
sub
fbld
sub
cli
aam
sbb
sub
pop
loopne
cmp
or
dec
dec
scas
cmp
adc
and
subb
mov
mov
mull
in
cmpb
mov
adc
les
fisubl
fnstsw
lds
cmp
test
jae
ds
mov
fwait
lods
in
jns
aas
repnz
ret
cmpsl
outsl
adc
movsb
repnz
push
pop
sbb
cs
or
addr16
lea
or
jbe
cwtl
or
or
jb
sub
push
mov
mov
jle
shll
push
das
and
pop
mov
cmovns
mov
jae
dec
decl
cmpsl
popf
arpl
adc
lcall
mov
popa
mov
repnz
adc
xchg
xchg
mov
cmp
inc
inc
pushf
ja
ljmp
adc
sbb
scas
lods
loope
pop
lock
sbb
lods
js
fistpl
sub
gs
rcr
lahf
out
jp
xchg
jae
lods
jns
jp
push
es
ret
ficompl
and
xchg
insb
cwtl
mov
push
pop
pop
add
xchg
mov
pop
push
sbb
add
mov
adc
mov
call
mov
cmp
pop
push
iret
mov
and
insl
dec
les
or
jmp
dec
push
cmp
mov
add
in
fwait
and
jno
repnz
dec
lret
icebp
scas
mov
out
push
jns
pop
rcll
fwait
imul
or
dec
inc
faddl
push
std
sub
mov
sub
mov
xchg
fstps
aad
test
dec
inc
lret
and
pushf
idiv
gs
mov
mov
mov
insl
sub
pusha
popa
sbb
add
push
push
jle
push
int3
sbb
inc
fsub
sar
sub
push
push
loop
inc
add
popl
push
or
mov
inc
fsts
movsl
pop
in
stos
mov
and
sub
mov
jne
lahf
stos
push
sub
cltd
into
notl
push
and
dec
adc
pop
or
out
scas
xor
mov
mov
xchg
jecxz
adc
add
jne
inc
out
jo
pop
cld
and
cmp
std
lds
sbb
xor
inc
inc
jnp
mov
xor
xor
mov
xchg
jg
mov
cmp
or
movsb
stos
sub
imul
mov
lret
mov
push
push
faddp
sub
ficompl
icebp
cmp
div
adc
inc
push
push
aam
lret
scas
cltd
aad
imul
cmpsl
pop
push
jae
popf
cltd
add
cmc
mov
cmp
pop
ret
pop
test
ja
xchg
push
fsubrl
push
push
xchg
lcall
jno
adc
cmp
push
and
sbb
fstpl
pop
rcrl
add
and
inc
push
adc
lahf
das
adc
adc
pop
jo
dec
sub
mov
or
adc
add
xchg
ret
lds
jp
xor
sbb
fdiv
dec
jge
andb
aad
cmp
cmp
int
xor
cmp
iret
arpl
ret
or
mov
movsb
test
sarb
sbb
popa
pusha
ss
cmp
mov
jecxz
lret
mov
roll
int3
sti
scas
cmpsl
repz
sub
xchg
les
or
sbb
inc
cmpl
inc
sub
insb
xor
sahf
add
mov
dec
pop
lea
in
outsb
push
andb
fldenv
cltd
mov
out
rorb
shrl
push
adc
loop
adc
sarb
mov
fwait
inc
jae
cmpb
fistpl
dec
push
push
mov
xor
jb
aam
sub
adc
xchg
rorb
dec
dec
push
adc
sub
sbb
dec
icebp
scas
push
xchg
mov
daa
out
insl
lock
test
xchg
sub
mov
sub
stos
and
loopne
jmp
and
cmpsl
aaa
arpl
sub
lcall
push
push
les
cld
cwtl
mov
mov
pop
inc
jge
xor
sub
enter
inc
and
inc
jmp
mov
idivl
adc
push
pushf
fcmovu
push
jne
mov
push
push
das
loopne
add
ja
stos
add
dec
dec
or
ja
pop
push
rcrl
push
test
cli
mov
inc
int
push
cmp
rclb
cli
adc
popf
or
fimuls
add
es
sbb
mov
outsb
in
sbb
sbb
and
popa
test
fildl
leave
popf
ja
mov
xor
dec
lcall
jno
repz
adc
lods
jb
cmp
push
in
pop
pop
mov
out
das
adc
lret
mov
xor
test
imul
xchg
dec
inc
test
xchg
cmp
arpl
xchg
imul
sti
fs
loope
inc
jne
lahf
leave
sub
mov
cld
pusha
cmpsb
and
xchg
je
mov
addb
call
mov
scas
xor
inc
xchg
push
inc
dec
push
cmp
sti
rcrl
je
push
iret
call
std
inc
mov
cltd
fildll
xlat
or
das
dec
or
cld
jmp
mov
shlb
das
jnp
arpl
lcall
in
xor
mov
leave
out
fistl
mov
mov
addr16
sub
push
inc
mov
clc
sbb
sbb
scas
add
test
mov
pop
adc
xor
pop
cs
and
pop
and
sti
push
fcomps
clc
cmp
and
lds
cmp
sbb
inc
outsb
dec
push
outsb
lods
fisubrs
or
inc
fidivl
sbb
dec
jo
push
dec
rcr
jle
cli
pop
fwait
insb
cltd
or
gs
add
push
fisttps
jae
push
mov
outsl
into
mov
ror
data16
mov
scas
and
sub
jl
pop
add
mov
xchg
imul
in
add
cmp
push
or
aam
adcl
clc
sub
call
add
aaa
jmp
sahf
loope
call
add
js
pop
mov
mov
jmp
pop
mov
mov
cmp
xchg
inc
pop
adc
adc
ret
cld
seto
fadd
js
hlt
xchg
es
les
imul
shr
add
sub
and
rcl
push
xchg
jno
mov
mov
ljmp
cmp
in
rolb
lahf
ficompl
dec
sbb
xchg
and
shl
or
lret
mov
out
shrb
mov
sub
xor
outsl
out
sub
xchg
mov
cltd
inc
pop
fs
mov
dec
lcall
rorb
cmp
mov
mul
and
loopne
fistps
imul
cmp
xor
xchg
rolb
clc
in
shll
inc
in
test
push
aaa
rorl
enter
inc
inc
lds
mov
jp
popf
lea
xchg
pushf
lret
sub
popf
mov
mov
inc
int3
pop
pusha
call
lret
sub
subb
loope
dec
or
int
mov
jbe
rol
xlat
nop
pop
pop
sub
fidivrs
cli
sub
xor
or
pop
jl
stc
push
lea
add
pusha
ljmp
fsts
mov
pushf
jp
and
inc
jge
aaa
pusha
aam
add
sub
or
pop
test
add
push
pop
cmp
jns
mov
dec
lods
sub
not
mov
xchg
add
pop
fcmovnb
jmp
xor
mov
icebp
xchg
into
fistpl
push
mov
jo
pop
lcall
jmp
and
xor
cmc
and
cmc
cld
bound
mov
inc
test
call
out
and
je
push
clc
lock
mov
push
add
mov
ret
cmpsl
ljmp
ss
sbb
sbb
mov
lods
fwait
jns
outsb
and
jae
lea
pushf
daa
inc
mov
fisubrs
je
push
mov
cmp
adc
add
pop
scas
cmp
imul
mov
movsb
adc
jns
jb
aad
mov
popl
in
sub
sbb
bound
nop
push
outsb
sbb
push
mov
fwait
pop
add
fdivl
sub
pop
les
xchg
int
gs
mov
bound
cmp
je
lods
mov
fidivrs
and
push
and
loope
sub
popa
inc
into
sbb
in
pop
adc
mov
dec
decl
or
add
lret
cmpsl
mov
dec
aaa
test
fs
inc
subl
nop
filds
jmp
xor
xor
xchg
xchg
pop
lock
sub
bnd
inc
sub
dec
fldl
dec
cmp
sub
daa
jmp
push
jl
xchg
je
add
lds
fildl
mov
lock
inc
imul
dec
fdiv
mov
sbb
dec
lcall
pop
pop
icebp
push
shr
sbb
dec
loopne
push
or
movlps
jle
sub
pusha
outsl
cmc
xchg
loope
pop
outsb
lcall
mov
addr16
add
add
std
repnz
xor
es
jecxz
loope
and
je
testl
data16
adc
sub
and
inc
push
dec
arpl
or
sarb
fidivrs
push
fisttpl
jle
andb
jle
sbb
push
scas
inc
or
adc
js
pushf
mov
xchg
mov
mov
cmp
psubsb
cmp
pop
adc
mov
jno
jecxz
in
mov
push
orb
insb
push
mov
cmp
int3
mov
xchg
lahf
addr16
jns
xchg
add
insb
xlat
popf
int
mov
mov
xorb
push
xchg
dec
inc
test
xchg
shl
sbb
inc
xor
pop
sbb
aaa
pushf
shlb
fs
add
sub
cmp
jnp
jge
ss
mov
ljmp
jle
and
or
push
in
and
cmc
jg
sub
lods
push
jns
in
movsb
xchg
lret
xchg
push
xchg
push
cltd
flds
clc
cmpsl
push
mov
push
xchg
mov
jne
inc
jbe
imul
fs
mov
mov
cmp
movsb
into
mov
out
jb
aam
xor
sar
sub
xor
ret
jb
mov
push
dec
mov
mov
in
in
loope
mov
ljmp
xchg
sbb
shll
jg
repnz
mov
call
pop
or
pop
in
lcall
int3
popa
mov
fcmovne
les
mov
inc
sbb
ror
or
add
bound
loop
sub
and
bnd
vunpcklps
dec
dec
insl
sbb
xor
outsb
stc
push
mov
adc
imul
mov
dec
scas
sub
pushf
push
sub
out
rcrl
sub
or
push
add
jno
adc
pop
mov
push
loope
in
inc
jo
and
hlt
stc
lods
out
xchg
fwait
es
add
out
sahf
stc
pusha
lock
push
sub
std
and
pop
push
cmp
or
repnz
sub
nop
sbb
int3
vmulpd
mov
ret
dec
push
imul
push
fwait
dec
and
aad
sub
jge
repz
into
jp
cwtl
or
push
nop
jl
inc
fsub
shrb
adc
mov
add
push
inc
push
inc
leave
xlat
mov
and
jg
and
out
mov
jmp
or
fisubrl
mov
adc
data16
mov
dec
movsb
cltd
orb
mov
daa
imul
aad
cmc
or
fildl
add
fdivr
add
arpl
addl
stos
filds
insb
dec
and
jecxz
fists
sub
push
shrb
out
inc
in
xor
mov
daa
sbb
shlb
fstpl
mov
aam
and
mov
aad
cmc
lds
lahf
mov
lea
fmuls
jbe
and
je
sub
in
call
les
jns
testl
add
ficoml
xor
sub
movsl
pusha
xchg
and
sbb
jle
js
shrb
lock
push
sahf
and
in
cmp
data16
xchg
mov
shl
and
mov
mov
dec
out
test
xor
xchg
mov
xchg
sub
nop
dec
sub
in
sbb
sbb
fisubl
inc
imul
adcb
stc
pop
xchg
std
jp
aad
cmpsb
adc
and
jecxz
jle
pop
pop
or
sbb
xchg
xchg
fs
pop
fistpll
add
pop
cltd
gs
ds
outsl
sbb
cmpb
rcrl
fucomp
call
cmc
loopne
mov
mov
js
jb
push
jnp
xor
out
sbb
push
inc
fnsave
movsb
mov
enter
nop
movsl
aam
sub
push
sub
inc
scas
jo
and
sbb
dec
jg
addr16
outsl
pop
push
ljmp
xchg
adc
in
es
aam
arpl
adc
in
fwait
add
or
lods
mov
add
out
test
mov
inc
sbb
loopne
push
imul
pop
sti
jns
scas
add
cmpb
dec
mov
sub
icebp
arpl
test
xchg
nop
leave
lret
sub
push
mov
shl
mov
mov
fucompp
xchg
enter
std
mov
call
mov
popa
cltd
mov
cmc
or
in
pop
cld
adc
mov
fsubrp
pop
mov
stos
or
dec
fcmovnbe
xchg
xchg
subb
sbbl
jo
adc
popl
dec
jmp
test
aam
sub
adc
std
jne
out
or
adc
stos
popf
push
mov
enter
repnz
mov
ret
jae
es
sbb
mov
shl
cld
adcb
adc
xchg
sbb
roll
push
lsl
inc
es
and
adc
or
add
gs
sahf
sti
or
fsubrp
xorb
dec
adc
lahf
aad
popl
int
jbe
sarb
cmpsb
js
das
mov
ja
adc
loopne
outsl
test
je
mov
cmc
jo
mov
lea
aas
mov
rorl
sub
test
or
jle
js
ficoms
icebp
dec
inc
les
pusha
pop
mov
cmc
sub
jne
out
adc
mov
jno
dec
pop
and
pop
cmc
add
dec
pop
cmpsl
hlt
jp
in
fcmove
mov
pop
adc
xor
xchg
push
aam
outsl
xorb
jae
data16
mov
loopne
dec
int
es
popf
setp
mov
jg
inc
jl
mov
fsubrl
scas
push
cmc
xchg
pop
sahf
mov
push
add
test
cli
mov
sub
add
jb
int3
push
cs
xchg
rcrl
insb
pop
or
dec
mov
jmp
cmpsl
xor
mov
rcll
pop
pop
cmpsl
or
leave
and
dec
push
outsl
fisubs
pop
inc
cmp
mov
cld
lcall
mov
cmpb
dec
scas
popf
xchg
repz
pop
mov
shll
xorb
mov
cli
sub
cmp
and
pop
and
fidivrs
jg
je
in
aad
jle
fisttpll
xchg
ja
lods
lea
xchg
test
push
pop
mov
jmp
orb
jecxz
push
fcoml
mov
fidivl
cmc
test
test
sbb
loopne
in
fwait
sbb
out
shll
out
push
sarl
adc
pop
inc
popa
mov
sub
cwtl
sub
cli
cmpsb
hlt
jo
sahf
cld
addr16
xor
mov
repz
fcmovu
jmp
lret
lret
sub
imul
lea
enter
push
xor
pop
mov
dec
push
and
xor
pop
aas
pop
push
fs
cmp
inc
sbbl
mov
ss
addl
push
push
dec
adc
or
andb
jae
and
xchg
fs
mov
js
jl,pt
negb
jg
lret
scas
imul
movsb
and
mov
jbe
stos
adc
mov
daa
pop
lahf
pop
arpl
add
xchg
sub
mov
jle
repnz
nop
dec
mov
mov
add
cmpb
mov
xchg
dec
scas
inc
xor
dec
aas
or
fwait
test
outsl
xor
daa
imul
xchg
dec
sahf
push
lret
out
jmp
jne
pop
cltd
neg
cmp
repz
lds
push
nop
loope
dec
mov
daa
shr
in
call
and
add
in
les
cmp
cmp
push
jae
sub
pop
popa
push
fsubp
hlt
adc
mov
scas
mov
dec
add
jo
fwait
xor
xchg
rolb
fdivrs
in
adc
sti
push
jecxz
mov
push
clc
lock
jmp
pushf
cwtl
mov
sarl
adc
or
adc
fiadds
push
in
cltd
jns
addl
sbb
stos
add
je
mov
push
in
psllw
jl
lods
xor
js
lcall
in
mov
mov
push
jo
cli
iret
hlt
jb
lret
clc
pop
cmpsb
cmp
push
jb
add
insl
stc
in
inc
filds
inc
sbb
cmp
jno
mov
fisttpl
pop
scas
mov
xor
xor
push
insl
xchg
std
adcl
pop
cmpsl
iret
or
pop
mov
xchg
addr16
lods
xor
insb
outsb
subl
sub
pmaxsw
addl
mov
or
fbld
pop
orb
hlt
jp
gs
jae
sbb
cmp
aad
push
xor
enter
push
int
test
sub
add
sub
ljmp
inc
jne
xor
es
mov
inc
cmc
sti
std
sbb
les
jge
or
scas
imul
jnp
pop
pop
add
cmp
inc
addr16
sub
lret
aad
out
std
pop
dec
pop
push
pop
lret
or
or
out
shlb
insb
xchg
sub
shl
ljmp
and
pop
test
jg
and
dec
inc
bound
aas
arpl
pop
test
sahf
out
sub
mov
or
push
push
fbstp
dec
es
bound
jmp
xchg
lock
mov
xor
add
jno
shlb
fbld
gs
int
jnp
stos
outsb
leave
xor
repnz
dec
sbb
mov
out
add
fadd
repnz
shll
xchg
mov
cmc
shll
fistpll
aas
mov
aaa
gs
xchg
mov
ror
push
sbb
pop
and
ret
ret
push
fwait
outsl
push
xchg
cli
es
movl
stos
bound
mov
cmpsl
pop
push
fdivrl
pusha
popf
xchg
pop
or
leave
pop
pop
ss
mov
xor
or
inc
dec
adc
lret
js
dec
mov
loopne
fsubs
out
add
stc
mov
sarb
into
in
xchg
push
dec
cmpsl
cltd
scas
xor
bnd
jnp
ja
mov
or
fisubrl
test
int
push
call
sub
ljmp
lock
cli
dec
subb
jnp
push
outsl
std
out
jo
repz
sub
or
lods
pop
mov
ret
cltd
mov
repz
sub
cmpsb
mov
push
in
inc
mov
fbstp
mov
sub
clc
pop
add
push
pop
pop
daa
xor
cwtl
ret
adcl
rcrl
es
pushf
or
je
jl
pop
xlat
mov
push
xor
int
shll
mov
push
in
in
scas
fldenv
loopne
cld
jmp
adc
pushl
sbb
mov
leave
pop
ret
out
mov
dec
mov
push
xor
andb
or
sahf
lods
push
ja
mov
cmpsl
outsb
add
das
into
push
nop
scas
and
and
movsb
stc
lret
inc
xchg
add
in
cmp
or
mov
push
lahf
dec
stc
mov
mov
push
mov
ss
pop
sarb
xchg
aas
xchg
lds
cmc
xor
cmpsb
xor
iret
mov
out
jae
mov
jne
push
clc
addb
int3
and
cmp
mov
and
lret
mov
or
mov
jno
dec
or
js
xor
jg
mov
push
mov
xor
lret
and
cmpsb
movsl
push
dec
cmp
dec
call
xchg
dec
shll
pop
and
pop
ficomps
mov
popf
pushf
ds
pop
ja
shlb
lret
push
mov
xchg
lods
cmpsl
lock
lcall
or
mov
insl
cmc
and
ja
lcall
mov
test
pushf
xchg
lret
in
mov
pop
imul
push
mov
loopne
mov
mov
mov
popf
mov
fnstenv
test
jg
sar
scas
cmp
cs
stc
nop
add
stc
ret
cmp
xchg
out
out
add
push
cli
cmp
mov
sub
pop
sbb
mov
sub
xchg
xchg
cmp
aam
dec
dec
add
addr16
adcb
sub
pushf
sbb
insb
dec
es
push
sbb
cmpsb
shll
sbb
sbb
jo
jae
xor
daa
stos
ljmp
cmp
mov
mov
pop
add
into
xchg
add
fistl
jae
mov
cmp
out
inc
leave
mov
fistps
or
incb
sub
xor
outsl
inc
push
xchg
xor
cmp
test
xor
cmpsl
fnsave
out
aaa
mov
in
popa
cmp
push
push
dec
aad
mov
lret
adcl
rol
les
jne
jb
or
out
pop
out
dec
cmp
xchg
aas
mov
push
jb
mov
inc
adc
call
lret
setne
sbb
add
stos
mov
add
jl
jne
xchg
insb
test
cmp
xlat
lret
rolb
mov
ss
data16
xor
test
sbb
pop
xor
movsl
jl
xlat
aam
aas
push
repz
xchg
lds
pop
scas
add
int
repz
test
fistps
test
mov
xor
xor
bound
jl
ds
popf
arpl
insb
je
leave
ds
lock
mov
or
cmp
cmc
and
push
fwait
and
insb
in
enter
popa
or
fnstcw
xchg
mov
sub
sbb
mov
sub
xchg
orb
and
jge
ret
test
test
xchg
loop
lods
out
and
fldcw
fs
xchg
inc
jecxz
push
jle
cmpsl
sti
and
cmp
dec
jo
mov
pop
ret
hlt
fistpll
sti
loope
int3
das
sahf
cmpsb
mov
aaa
sbb
enter
sbb
rol
cmp
scas
loop
into
fisttps
and
es
mov
pop
jae
pop
mov
in
in
arpl
push
lea
lret
out
xlat
xor
or
cmp
dec
xlat
fidivrs
mov
dec
xlat
mov
pop
xchg
jo
mov
cmp
cs
pop
jne
les
ret
or
test
imul
and
int3
repz
jmp
and
jnp
sub
jnp
pop
rcrb
cld
push
lods
xor
rcrb
mov
call
in
iret
fldt
jb
mov
shll
js
cmp
cli
icebp
mov
into
lds
xchg
int
push
cmp
dec
dec
fdiv
xor
mov
jbe
lret
mov
push
jge
or
mov
cmp
testl
push
dec
and
sub
dec
std
pop
add
fidivs
pop
sahf
fists
adcb
gs
mov
sub
fisttps
ds
les
rolb
fildll
stos
add
xchg
jmp
inc
lret
xchg
sub
and
jo
add
loope
je
int
jle
mov
cmp
cmp
enter
adc
aas
mov
aad
or
inc
int
mov
out
xchg
mov
jb
and
jnp
cs
inc
clc
repnz
jb
pushf
mov
jmp
cltd
es
lods
rclb
seta
add
jae
sbb
mov
sub
push
leave
cmpsb
cmpsl
cli
sub
mov
push
subl
xlat
pop
mov
test
xor
and
jno
xor
mov
jl
dec
sub
adc
adc
xor
imul
xor
call
jmp
xchg
sbb
mov
aaa
push
lods
or
stos
or
pop
dec
fsubl
cmp
jecxz
and
pop
and
aaa
pop
dec
jp
pop
shlb
mov
jbe
sub
adc
mov
add
shll
lods
pop
mov
sbb
jnp
xor
and
sub
add
add
mov
or
lret
or
arpl
jp
push
xchg
pusha
int
and
jbe
shl
and
js
lret
xor
test
loop
lds
jnp,pt
sbb
pop
xchg
inc
repz
push
insl
inc
pop
and
adc
mov
pop
pop
dec
in
test
enter
mov
insb
iret
cli
xor
mov
xor
jb
stos
lds
iret
sysret
addr16
mov
ret
adc
or
mov
xor
pop
mov
test
inc
out
das
loopne
movsl
rcll
jge
jb
cmp
fdivrs
xor
insl
cmc
ja
xchg
mov
and
stos
pop
shl
adc
dec
add
sbb
scas
dec
bound
xchg
loope
and
test
test
xor
insb
daa
pop
add
jno
popa
cmp
lcall
orb
in
loop
pop
pusha
call
std
lahf
daa
out
emms
pop
insl
fisubrl
sub
imull
and
push
cmp
cltd
les
scas
outsl
fwait
adc
aad
pop
shrb
rcrb
mov
and
sbb
ljmp
jbe
dec
and
daa
sub
clc
xor
add
dec
jns
and
repnz
dec
push
fsubrl
jp
shll
xor
aaa
xchg
mov
rolb
inc
enter
xor
je
jg
loop
xchg
ja
mov
rcrb
sbb
mov
cmp
sbb
push
bound
pop
mov
adc
loop
loope
pop
inc
pop
cli
and
rcrb
or
mov
cmpsl
xor
cmp
push
in
mov
bound
lock
clc
and
sub
inc
sbb
cmp
dec
andb
pusha
pop
mov
sub
mov
adc
in
je
fsubrp
mov
jno
pop
xlat
jns
ss
cli
adc
pop
fwait
jne
pop
test
aam
xchg
mov
adc
add
iret
xor
mov
jno
inc
icebp
leave
hlt
daa
mov
and
outsl
inc
sbb
pushw
pop
mov
push
pop
enter
into
mov
popf
xlat
lret
lahf
inc
addr16
call
sbb
xchg
add
jg
xchg
int3
cmp
push
jp
and
jle
leave
or
or
or
sub
sub
out
sarb
cmp
mov
or
addr16
or
and
aas
icebp
ret
adc
cmp
inc
into
inc
mov
pcmpeqw
ljmp
push
movsb
xlat
je
fstps
cmp
out
cwtl
cmp
fcmovb
aam
xchg
xor
dec
shll
inc
enter
jns
inc
int
dec
mov
push
dec
adc
sub
mov
inc
shrl
dec
mov
add
push
xchg
popf
loope
add
ss
lahf
daa
xchg
shrl
shrl
mov
add
xchg
mov
stos
dec
mov
lret
test
jnp
in
sti
fdivs
cli
push
dec
sbb
mov
loop
pusha
xchg
adc
cmp
inc
fmul
inc
rclb
shl
mov
fisubs
inc
in
inc
push
mov
dec
test
lds
test
push
xchg
fstp
sub
fildll
push
in
ret
mov
imull
stc
and
stos
xchg
fidivrl
popa
aad
xchg
sub
sbb
pop
mov
mov
push
cmpsl
cli
cmp
nop
out
out
jbe
mov
push
in
mov
les
cmp
jbe
or
fs
cli
sbb
add
inc
int3
jns
aad
add
cmpsl
int3
in
int
scas
gs
aaa
xchg
subl
push
test
mov
jl
aam
push
roll
pop
scas
cmp
and
xchg
insl
repnz
cmp
inc
sti
sub
aas
lcall
loopne
dec
push
cmp
add
jne
imul
out
in
inc
stos
mov
adc
sbb
cli
orb
adc
jno
push
ret
lods
push
mov
sahf
into
add
movsl
sub
lds
xchg
mov
push
decb
and
pop
inc
jle
sub
adc
in
cmp
outsb
cmpsb
aas
pushf
in
pop
mov
add
in
data16
cli
es
jle
adc
imul
xchg
adc
mov
icebp
loopne
push
pop
dec
fwait
dec
cmc
mov
push
insl
cmc
lds
push
mov
in
and
dec
pushf
iret
cmpb
outsb
sub
sub
add
pop
or
jp
clc
sub
arpl
jns
cld
daa
pop
lea
xchg
cmpsl
jo
cltd
lods
outsb
mov
in
fistps
cmpsl
aas
movsb
jle
pop
out
into
pushl
adc
pop
adc
jge
mov
push
stos
test
jmp
push
add
cmpsb
mov
mov
ret
add
pop
mov
mov
dec
mov
rorl
dec
aad
pop
insl
cmpsl
cltd
and
push
lods
negl
cli
xchg
mov
or
push
add
and
icebp
lock
sub
and
mov
jo
mov
adc
out
and
dec
sti
push
xchg
sahf
int
es
push
cld
outsl
rorb
mov
adc
ret
sub
lock
out
ja
fwait
mov
movsb
push
fsubl
dec
mov
and
std
mov
leave
and
insb
push
xchg
into
ja
adc
out
jbe
lods
test
gs
out
mov
jb
test
jno
fwait
daa
jo
jb
jns
and
add
and
int
xchg
js
mov
imul
adc
xor
mov
loope
jbe
and
ljmp
push
daa
imulb
imul
cli
ss
ss
in
jp
sarb
jae
fs
xchg
sbb
sbb
enter
int
repz
mov
ja
lcall
add
cwtl
stos
vpunpckhbw
popa
add
or
outsl
leave
add
dec
add
mov
jle,pt
fmull
daa
popa
stc
fcomps
jbe
sbb
jge
outsb
lods
out
repnz
mov
andb
sub
cmp
mov
popf
mov
jae
stc
mov
cmpsb
mov
pop
inc
sbb
repz
push
mov
test
lret
xor
enter
filds
pop
hlt
sbb
rorl
lods
fs
pop
jne
cli
xchg
out
pop
or
dec
mov
push
dec
and
dec
mov
push
jl
xchg
loopne
lods
pushl
sub
int3
mov
lcall
xchg
push
mov
xchg
in
sbb
testb
mov
pavgw
pop
int
scas
pop
cli
dec
sbb
inc
cmp
fprem1
and
add
jmp
rcrb
sti
sub
cmp
jecxz
leave
popa
add
add
cs
mov
nop
cmpsb
inc
jmp
ljmp
inc
pop
mov
dec
daa
adc
repnz
xchg
mov
movsl
lds
test
pop
xchg
shlb
xchg
fstps
mov
adc
outsb
divb
push
ficoml
pop
cltd
xchg
call
cmp
imul
or
dec
out
lods
icebp
in
and
out
inc
push
or
leave
insb
nop
dec
add
pushf
and
dec
pop
test
jns
gs
call
enter
push
lea
push
nop
hlt
jl
cmp
adc
add
or
ss
fs
mov
movsb
pop
icebp
jecxz
into
sub
jo
insb
lods
bound
pop
add
movsl
fisubl
cwtl
mov
inc
int
xchg
icebp
jecxz
into
jnp
je
gs
jecxz
inc
out
sub
mov
sbb
leave
aas
xchg
in
inc
and
sbb
xchg
cwtl
out
dec
pushf
out
ja
and
mov
insb
ret
test
add
cmp
and
jp
shrl
test
jo
loop
sarl
ss
scas
inc
jo
dec
mov
sbb
icebp
cltd
adc
adc
or
xor
mov
inc
lods
fcmovu
orl
and
fnstsw
fs
fistl
hlt
xchg
lret
loop
movsl
clc
push
add
jp
imul
mov
popa
mov
outsl
ret
pop
or
pop
popf
xchg
testb
xor
mov
or
pop
les
xor
sbb
add
in
and
push
push
xchg
fsubrp
jae
sub
xor
dec
fsubrs
pop
mov
movsl
int
push
cld
daa
jp
push
sub
and
movsl
clc
cmp
xchg
aas
loope
out
js
sub
rcll
int
jae
sarb
mov
xor
cmp
popf
jl
cmp
lret
mov
daa
stos
incb
sub
jl
cmp
sub
mov
cmc
mov
sbb
loop
nop
cmpsl
add
jmp
jge
orb
mulb
test
jb
loopne
int3
sar
sub
and
js
outsb
pop
sbb
in
pop
jns
das
adc
sub
sbb
and
mov
push
fimull
or
lods
or
xchg
xchg
or
pop
int3
mov
push
mov
mov
test
cmp
mov
mov
xor
or
aaa
xchg
in
lcall
fadd
mov
cmp
mov
in
cmp
hlt
call
adc
insl
shl
jecxz
adc
mov
mov
jbe
int
add
adc
adc
lahf
mov
mov
push
adc
lahf
pop
jp
scas
jae
xchg
pusha
dec
es
scas
jl
mov
add
call
cmp
adc
push
push
mov
xchg
cmp
fnstsw
jns
cld
mov
mov
adc
lea
mov
testl
test
ret
loope
xor
ret
addr16
add
divl
std
xchg
out
inc
rcrl
gs
jp
push
xor
jno
pop
shlb
dec
xchg
push
mov
ficompl
sub
mov
jge
leave
push
sub
in
sbb
push
sahf
xor
mov
pushf
addr16
mov
je
sbb
stc
sbbl
and
mov
or
push
fsubl
insb
mov
jo
and
pcmpgtw
insl
lods
rcrb
arpl
mov
xchg
add
jae
cmp
push
cmpsb
fiaddl
aam
shl
lahf
sub
into
icebp
xor
jae
mov
fs
stc
cmp
xchg
stos
and
mov
aam
jle,pt
xchg
ret
push
push
cmpl
fisttpll
iret
pop
movsb
sub
outsl
aaa
lret
ljmp
xor
imul
mov
cli
subb
inc
insb
std
pushf
or
xor
insb
jbe
das
mov
les
mov
push
out
arpl
aam
cmpsb
cmc
sub
dec
daa
mov
out
dec
jecxz
pushf
and
adc
and
xchg
imul
pusha
push
lods
mov
aad
loop
inc
flds
jmp
adc
fs
rcrl
in
outsb
push
jge
jp
push
mov
add
push
rolb
mov
loopne
jmp
sub
push
aad
push
clc
iret
loopne
test
loopne
test
or
mov
pop
pop
std
test
das
mov
or
fmull
test
enter
push
xor
or
mov
adc
inc
sbb
out
ja
test
mov
aad
mov
adc
cmpsb
add
jmp
pushf
dec
xchg
sbb
and
push
pop
gs
push
jmp
add
cwtl
in
cltd
leave
jae
jns
arpl
sub
shl
sarl
gs
pop
and
pusha
call
scas
fldcw
psubsw
inc
and
push
mov
push
popa
mov
insb
jge
dec
aam
push
sarl
mov
es
loope
cmp
push
xchg
xchg
cwtl
mov
xor
mov
cld
inc
jle
adc
or
test
call
out
rcll
lock
imul
push
dec
add
insl
cwtl
and
inc
mov
adc
movsl
sub
inc
out
mov
xchg
leave
xchg
mov
mov
roll
popf
cmc
in
cpuid
mov
sub
dec
mov
pop
insb
aad
ljmp
push
mull
out
ja
jl
aaa
mov
push
cs
jmp
adc
out
sbb
mov
push
dec
mov
cmc
fnstsw
test
xor
das
addr16
push
inc
xchg
pop
mov
mov
cmc
and
push
pop
ficomps
negb
mov
fldenv
adc
sub
fwait
into
jg
cwtl
sub
out
jne
lods
push
loope
sbb
sbb
sub
std
sti
add
outsb
push
cmc
jge
push
mov
add
sahf
mov
inc
lret
mov
out
jns
sarb
push
dec
pushl
or
adc
int
dec
push
jp
inc
je
aad
jnp
inc
xchg
jbe
ds
jecxz
lcall
sbb
sub
jl
mov
adc
ja
xorb
dec
in
mov
repz
cltd
or
iret
dec
addl
cmp
ds
jno
jle
dec
std
mov
sub
cmp
call
arpl
jae
sbb
mov
pop
das
or
push
jno
mov
dec
lea
dec
push
aas
cmc
cltd
inc
call
sub
in
jmp
xchg
bound
and
outsl
or
stos
xchg
add
movb
dec
scas
scas
sub
push
dec
fisttpll
cmp
or
cmc
sub
lahf
cmp
xor
xor
mov
ret
pop
mov
arpl
inc
xchg
push
ret
jne
cmp
cltd
test
push
popl
cltd
int3
and
orl
lret
idivb
iret
lock
gs
and
xor
mov
orb
push
movsb
pop
xchg
pop
jb
dec
and
es
cmp
jl
adc
cltd
pop
imul
fstl
mov
nop
inc
rcll
imul
inc
imul
es
adc
add
xchg
int3
dec
lds
push
xchg
jl
pusha
mov
adc
sbb
cmp
push
fwait
repz
cltd
fsubs
scas
ds
out
inc
jne
pop
xor
xlat
sub
xchg
sbb
fsubs
xor
push
jmp
js
inc
int3
add
jb
xchg
pop
push
pop
in
mov
pop
mov
loopne
xchg
out
inc
in
mov
inc
pop
int3
pop
mov
in
add
lret
lcall
mov
add
sub
cmova
pop
pop
mull
jne
loopne
push
pushf
pop
aaa
fstps
mov
insl
fdivl
lods
shrl
subl
pop
in
nop
stc
pushf
add
or
mov
lar
fidivrs
out
inc
or
inc
sbb
sub
sbb
mov
ret
outsb
push
mov
sahf
hlt
xor
in
fwait
dec
jae
push
or
lods
in
es
mov
aaa
loopne
jmp
shrl
popa
inc
push
data16
pop
icebp
idivl
pushf
icebp
lds
daa
data16
push
data16
shrb
cmp
xor
xchg
dec
call
mov
pusha
mov
and
cli
cmp
xchg
ljmp
jo
xchg
sbb
jb
inc
and
lret
stos
pusha
mov
push
fmull
mov
pop
add
push
pusha
scas
lret
push
clc
sub
jnp
push
add
test
xchg
mov
dec
xchg
mov
outsb
leave
jbe
jns
cmp
dec
xchg
test
xchg
in
aaa
mov
test
out
ja
inc
enter
je
pop
sub
sub
sub
lret
aaa
testb
adcl
fnstsw
add
xchg
rorl
mov
pop
adc
lds
jecxz
loopne
call
ds
call
dec
mov
insb
incl
repnz
push
movsl
fcoms
push
dec
test
adc
mov
mov
inc
jle
add
rclb
lret
push
mov
push
fidivs
fisttps
ljmp
rcrb
fs
inc
jp
movsb
mov
stos
fisubs
push
fstpt
sub
div
pusha
push
jle
cmpsl
out
int3
sub
inc
insl
cltd
in
jmp
dec
xor
pop
rolb
lahf
mov
iret
and
mov
pushf
mov
xor
push
repz
out
mov
sub
dec
cmpsl
and
lods
mov
and
lret
roll
shll
imul
sbb
add
ljmp
xchg
es
mov
adc
jg
adc
xor
pop
lahf
xchg
hlt
dec
movsl
push
hlt
inc
mov
andl
push
mov
jno
pop
cmp
imul
jge
mov
mov
loop
mov
add
in
shll
jp
ja
fs
stos
lahf
mov
ss
daa
pop
aam
insb
xchg
cmp
enter
icebp
loope
fbld
cmp
arpl
lea
jmp
adc
pop
test
or
or
movsl
xor
push
test
xor
cmp
ret
dec
cwtl
jmp
dec
xor
add
icebp
sbb
bound
pop
mov
dec
xlat
xchg
imul
lock
sbb
mov
pop
xchg
mov
cwtl
mov
or
into
pop
cld
test
add
dec
add
cmpsb
or
xchg
shrb
jbe
lea
mov
sub
rol
scas
loopne
pop
mov
mov
and
sahf
rorl
and
in
bound
sti
test
es
in
inc
jl
imul
sbb
add
pop
or
xchg
cli
test
jne
and
and
adc
in
dec
jmp
mov
mov
and
pop
aad
aas
xor
and
movsb
xor
cld
adc
cmpsb
mov
jo
or
cmp
in
mov
pop
sbb
xchg
ljmp
jns
arpl
dec
test
jmp
call
movsl
or
push
fwait
aaa
ficomps
pop
add
xchg
cmp
movd
mov
loopne
aam
jb
aaa
andl
or
sbb
xor
inc
in
xchg
sbb
sbb
leave
add
pop
rcr
daa
cmp
cwtl
inc
cmp
mov
rorl
aaa
pop
xchg
daa
mov
xchg
push
cmpsb
xchg
lret
pusha
sub
mov
or
and
push
cmp
into
mov
jb
and
mov
enter
das
lcall
pop
out
inc
stos
imul
addr16
cld
jnp
sbb
jo
mov
pushf
popl
lret
add
dec
imul
adc
push
imul
mov
out
jmp
mov
cmpsb
pop
xor
xchg
aaa
mov
out
xchg
in
adc
hlt
cmp
sub
and
xor
lret
xor
pusha
mov
dec
jae
enter
lcall
pushf
xor
shrl
push
ffree
xchg
scas
hlt
inc
enter
mov
mov
xchg
out
inc
dec
scas
xor
outsl
sbb
mov
or
and
xchg
out
cs
loopne
and
inc
es
jo
ss
push
or
dec
loop
and
ja
xchg
sarb
rcr
sbb
std
mov
or
lret
add
push
subb
outsb
cmp
add
xchg
stos
aad
mov
rorl
icebp
ret
dec
repz
lahf
sub
pushf
out
mov
jle
add
sub
pop
cmp
mov
pushf
mull
lret
popa
mov
cmp
pop
push
xchg
in
jnp
scas
loope
aad
or
enter
lock
cli
dec
aad
sub
add
js
jbe
mov
in
arpl
mov
or
in
ljmp
or
int3
cwtl
lods
test
imul
sub
pop
movsb
jmp
sti
add
and
inc
add
jle
in
aaa
jnp
pop
jl
mov
lods
aad
insl
outsb
imulb
inc
decb
mov
pop
add
pop
lret
idivb
movsb
nop
mov
cmp
push
dec
inc
icebp
xor
sbb
pop
mov
push
push
fcoms
scas
out
mov
add
xchg
enter
call
jecxz
jl
and
fwait
jecxz
cmpsl
cli
cmp
xchg
sbb
ret
push
lret
push
xchg
out
ret
bound
push
aas
notl
fldenv
jbe
sbb
repnz
xor
sub
fbstp
xor
dec
cmp
lcall
or
lods
inc
mov
out
pusha
scas
lahf
iret
outsl
xlat
adc
or
addb
fcomps
sahf
aad
push
inc
mov
adc
push
mov
data16
into
sti
int3
idivl
xor
dec
jg
mov
mov
out
sub
jg
loope
scas
js
xchg
bound
xor
xchg
daa
dec
jae
shrb
adc
add
mov
pop
sbb
mov
add
pop
jo
js
sbb
mov
cmp
sbb
jbe
enter
outsl
mov
xor
inc
test
loop
sub
and
hlt
mov
jne
mov
mov
xor
pop
adc
add
out
push
mov
call
mov
sti
xor
call
or
pop
mov
ljmp
dec
in
mov
les
je
sub
jmp
loopne
aas
add
and
and
jl
pop
jae
and
mov
jbe
bound
mov
sbb
cmp
jae
leave
imul
and
xchg
push
sahf
inc
test
test
sbb
mov
addb
fnstenv
or
xchg
pop
negb
shrl
popa
push
nop
mov
insb
and
lahf
add
fldt
jge
jl
add
or
push
mov
or
sbb
sar
test
stc
insb
daa
push
jb
sbb
pushf
and
outsb
adc
add
xorb
addr16
jl
ds
pop
push
imul
insb
sar
adc
test
ss
call
pushf
call
sub
std
push
add
das
dec
int
push
pop
xchg
inc
fisttpll
nop
mov
sahf
imul
call
cmp
bound
sub
test
dec
inc
cmpsb
sti
jp
cmp
pop
jb
rcrl
push
aam
fists
jl
loop
fisttps
movsl
ds
sub
ja
jp
pop
xchg
cmp
stos
adc
and
xor
jns
testl
and
jl
push
pop
xchg
push
mov
sbb
jge
add
fwait
dec
inc
jmp
fisttps
incl
cmc
dec
std
mov
jg
cmp
xchg
push
xchg
lahf
out
inc
xor
mov
ficoml
adc
mov
aas
cmp
int
push
xchg
fwait
jecxz
inc
xchg
sbb
cmpsb
fsubs
sbb
dec
mov
stos
rolb
mov
sbb
sbb
push
adc
pop
mov
aas
inc
popf
clc
movsl
inc
lcall
cmc
insb
add
pop
mov
sahf
mov
add
lods
dec
xlat
enter
lea
xchg
lds
andb
lahf
push
sub
adc
stc
sarb
aad
lahf
cli
cmp
xchg
out
out
jae
xor
pop
add
leave
or
dec
pop
in
cmp
add
push
xchg
sahf
int
daa
jge
xor
push
jle
jo
jae
insb
mov
seta
sbb
rorb
leave
sbb
jnp
sbb
and
lret
es
jb
and
imul
pop
das
test
push
sbb
imul
out
js
adc
mov
addr16
xor
cld
fucom
push
jmp
inc
lret
aad
mov
xor
cs
and
nop
sbb
out
ret
push
lock
test
or
jo
and
leave
mov
shrb
fsubrs
xor
inc
mov
in
inc
mov
sbb
pop
pop
xor
in
lds
and
pop
inc
adc
push
jno
notl
or
fildl
adc
sbbb
out
inc
mov
mov
inc
outsl
ret
pop
mov
mov
test
inc
pop
ja
pop
jbe
bound
adc
mov
fldenv
xor
pusha
jg
push
cwtl
and
popa
sub
clc
sahf
add
jns
je
jbe
loop
xchg
or
jecxz
or
test
daa
pop
les
jg
add
sub
cmc
jge
pop
test
push
fldenv
fiadds
lahf
inc
leave
pop
les
loop
or
dec
pop
pop
repz
mov
gs
test
push
xchg
into
pop
push
stos
xlat
adc
fwait
leave
ja
out
out
daa
inc
hlt
push
pop
cltd
nop
push
pop
fwait
shlb
xchg
ja
jg
jno
xor
push
popa
mov
jle
je
adc
jns
or
adc
xchg
fwait
jmp
pushf
out
and
loope
mov
stos
jb
ret
adc
sub
bound
cmp
inc
and
xor
mov
inc
int
ds
inc
aaa
xor
aam
xchg
jge
mov
and
bound
push
cwtl
or
mov
cmpsl
sti
popa
jmp
ret
cmc
sub
pop
mov
push
inc
jmp
ret
shl
inc
adc
push
dec
push
jg
pop
mov
scas
push
scas
loope
fildl
fstpl
mov
inc
bound
je
mov
xchg
sahf
es
cs
pop
cltd
les
sahf
jno
push
fstpt
clc
jp
and
icebp
mov
push
je,pt
cmp
xchg
fdivs
daa
push
mov
cmpsb
flds
jns
sub
and
mov
add
pop
test
flds
mov
pop
ljmp
inc
jno
leave
sbb
test
clc
movsl
clc
dec
sahf
es
ja
daa
scas
mov
roll
mov
mov
lret
mov
lods
xor
loop
sub
adc
cmovb
jl
in
aaa
jnp
xorl
pusha
call
mov
xchg
cmp
xchg
hlt
dec
movsl
adc
or
dec
and
push
cmpsb
repnz
test
mov
mov
imul
out
je
shrl
outsl
movsb
test
out
into
pop
lods
loopne
stc
adc
pop
data16
icebp
add
mov
sbb
lds
push
lret
ljmp
jno
fwait
mov
push
xchg
test
pop
mov
dec
pop
jmp
mov
mov
lods
mov
notl
jmp
sbbl
aad
xor
in
pop
add
dec
xor
pop
into
sub
nop
addr16
and
test
cmp
dec
icebp
stc
xlat
mov
loope
movsb
xor
lods
sub
mov
cmc
add
outsl
lret
push
add
das
js
dec
add
lods
sbb
jmp
xchg
dec
aam
mov
mov
lods
outsl
leave
xchg
lods
out
xchg
in
fnstcw
mov
cmc
jge
aaa
in
pushf
push
test
adc
and
and
xor
in
out
xchg
cmc
xor
lea
add
insl
cwtl
and
inc
sbb
cmp
idivb
mov
addr16
mov
adc
lea
in
xchg
add
cs
ja
jmp
add
shrb
lea
je
pop
push
pusha
or
and
fcmovb
cmpsb
ret
xor
mov
lock
pop
xchg
mov
cmpsb
pushf
cmp
ja
sub
jge
stc
iret
mov
mov
and
sbb
mov
inc
out
out
ja
mov
movsl
add
jp
cmpsl
lret
dec
jo
and
mov
cltd
loop
inc
jecxz
add
add
mov
out
mov
loopne
pop
shlb
lret
fwait
icebp
dec
stc
cmp
movsb
sub
cld
sbb
sbb
jne
sbb
mov
int
les
jbe
push
stos
fisttpll
cmp
fwait
mov
adc
fs
mov
cmp
lret
xchg
sub
mov
pop
pop
jno
js
sbb
mov
or
pusha
jb
jge
sbb
xor
into
loopne
in
jne
dec
sbb
pusha
dec
test
mov
add
cs
xchg
rcrl
ret
aam
mov
xor
dec
das
pop
loop
mov
fwait
or
fisubl
pop
fsubrl
push
arpl
push
mov
jae
push
repz
iret
cli
xorb
sbb
lds
jo
push
seta
cs
mov
sbb
xchg
shr
imul
lock
mov
xor
aad
jb
dec
jbe
adc
aad
mov
stc
and
fildl
pop
mov
adc
lahf
and
pop
test
jecxz
add
mov
cmp
mov
in
rcrl
cmpsl
jle
imul
lea
cmc
push
imul
pop
jp
or
push
fnsave
or
cmp
scas
ss
sbb
jbe
sub
mov
jbe
pop
jb
rol
sbb
jmp
insb
cmpsl
and
data16
fcmove
mov
dec
push
push
sbb
adc
or
ja
sbb
sti
push
test
mov
lahf
mov
jge
lahf
pop
in
loop
sbb
jmp
mov
pop
xlat
je
and
in
jge
shll
pop
out
cmpsb
ret
jae
movsb
pop
xchg
sbb
push
fldcw
push
popa
add
adc
jno
outsb
shl
pop
scas
inc
jmp
xlat
jge
mov
sub
dec
ss
push
stos
fstpl
cmp
push
orl
test
iret
cwtd
dec
push
mov
cmp
mov
jbe
jae
call
inc
xchg
arpl
adc
fildll
sbb
mov
lock
dec
adc
sar
cmp
mov
aam
sbb
cs
cmpsb
nop
filds
aas
lcall
sti
xor
aas
lcall
sbb
lds
fcoms
xchg
lret
push
sub
fwait
aaa
fidivrs
pop
js
gs
dec
subb
les
dec
jae
add
sub
subl
pop
adc
pop
dec
daa
cmp
shlb
in
rcrb
lods
loop
mov
jecxz
xchg
pop
xlat
movmskps
mov
push
stc
shrb
flds
mov
push
fsub
xor
jge
inc
dec
cmpl
mov
shlb
lcall
adc
jg
jmp
fisttpl
lret
push
mov
bound
lods
pop
lret
imul
subb
pop
lahf
adc
cmp
aad
mov
imul
add
stos
push
pop
inc
in
cld
sub
jo
insb
mov
inc
in
dec
mov
hlt
mov
jnp
in
push
gs
std
push
scas
add
sti
dec
pop
mov
filds
xor
inc
test
ljmp
inc
sub
gs
stos
lods
jl
cmpsb
fisubrs
out
xchg
fisubs
pop
jae
cmp
mov
jg
ret
pop
icebp
sbb
mov
out
lds
mov
cs
loope
ret
pop
fsubs
xor
cwtl
cmpsl
inc
movsb
inc
into
scas
fdivl
fs
sbb
add
in
jb
sbb
repz
mov
cmp
stos
mov
pop
out
imul
clc
arpl
sbb
sti
xor
cmc
jge
pop
adc
jbe
inc
jne
pop
notb
jmp
arpl
out
cmp
mov
punpckldq
movsb
sti
stos
cmpsb
in
cmp
jae
fbstp
rcrl
cli
addb
mov
cmp
les
or
pop
adc
sti
bound
out
inc
fdivrl
enter
movsl
jl
mov
scas
adc
enter
or
mov
inc
iret
mov
rol
vpsllw
stos
xor
test
mov
stc
push
mov
mull
sub
sub
cmp
roll
and
xchg
aam
sub
sub
pop
xor
xchg
aam
sub
sbb
cwtd
inc
sub
pushf
movsl
add
out
ja
mov
sub
push
lea
loop
or
mov
aam
into
push
pop
orl
lock
push
jns
andb
xchg
dec
lock
sub
sub
push
jle
sbb
pop
xor
add
iret
cmp
dec
add
sbb
pop
in
or
mov
xchg
add
nop
ljmp
sub
xchg
es
jbe
fistps
sahf
es
push
pop
or
mov
into
add
roll
nop
dec
ficoml
pop
xchg
lock
gs
mov
aaa
mov
gs
cli
rorb
adc
mov
pop
jb
testb
sti
push
push
dec
xor
in
out
sbb
shlb
fwait
dec
shll
mov
dec
jnp
out
fldl
mov
mov
pop
sti
out
push
fdivs
inc
iret
pop
movsb
sub
jecxz
mov
fimuls
sub
xchg
mov
ss
sub
pop
scas
pop
lds
idivl
push
cmp
shrl
pop
loopne
jne
dec
dec
xor
adc
in
shrl
aas
in
sbb
inc
andb
push
fwait
inc
xchg
add
add
mov
mov
adc
shlb
mov
rcrl
mov
es
fldl2t
imul
scas
mov
mov
push
std
mov
insb
sub
jnp
sbb
inc
and
dec
in
je
pop
lret
inc
mulb
test
ss
dec
xor
rcrl
test
idiv
xchg
sti
add
mov
mov
hlt
adc
fistpll
xor
gs
mov
ljmp
loope
imul
outsb
fstpl
mov
int3
sahf
hlt
xor
in
sub
insl
cmpsl
sbb
out
in
jbe
mov
xchg
mov
nop
sahf
out
xchg
inc
sti
sub
xchg
xlat
pop
inc
in
cmc
sbb
mov
arpl
scas
or
dec
sbb
pop
pop
lea
or
div
fisttpll
arpl
adc
and
hlt
mov
scas
mov
xchg
call
es
cltd
js
insl
mov
cwtl
decb
es
sub
nop
negb
pop
mov
bound
or
sub
sbb
mov
mov
jge
cltd
sbb
jne
mov
mov
jg
push
pop
ret
mov
fsubrs
inc
into
mov
pop
shll
jo
repnz
jns
mov
xchg
mov
sbb
pop
inc
and
jae
jnp
popa
mov
add
jae
jae
out
jecxz
xor
aas
lcall
and
sbb
sbb
and
lods
mov
dec
les
loope
ljmp
pushl
push
lods
in
and
lcall
and
push
mov
add
sub
xchg
pop
mov
push
mov
push
mov
add
sub
xchg
pop
mov
push
push
pop
not
xor
push
addl
pop
sub
pop
push
mov
addl
pop
sub
mov
mov
add
mov
pop
pushl
pop
add
pushl
pop
add
jmp
sub
pop
inc
in
mov
add
jmp
mov
insb
and
and
add
cmp
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
movl
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jb
pop
xchg
mov
pushl
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
call
mov
jmp
addl
push
movsl
and
or
add
fidivrl
fwait
shr
ret
leave
push
push
cmp
rcll
ret
jge
int
sti
xor
add
pop
rol
push
push
push
jecxz
inc
into
rcl
inc
insb
jae
movsb
imul
out
mov
int
loopne
pop
xchg
adc
push
xor
push
inc
call
mov
je
cmpsl
push
daa
imul
xor
xchg
cltd
xchg
out
xchg
inc
push
lret
mov
call
pop
push
in
jecxz
rcll
cmp
xchg
out
push
cwtl
pop
mov
lea
jmp
rcll
inc
pop
ja
andb
inc
inc
dec
fwait
out
xor
lock
xor
push
out
int
in
rcll
or
stos
xchg
jp
icebp
xor
lahf
shr
cmp
xchg
out
push
pushf
pop
mov
lods
mov
jmp
rcll
add
push
bound
aam
jecxz
inc
test
mov
push
add
or
loope
ret
rcr
int
pop
inc
add
pop
add
clc
lods
adcb
pop
insl
mov
imul
inc
fdivrl
ret
sbb
jmp
sub
sbb
imul
mov
das
stos
sbb
cld
jl
adc
jns
out
mov
mov
inc
pop
push
sbbb
div
call
adc
xchg
stc
jne
ljmp
lods
out
rol
dec
cmp
jo
sbb
or
adc
push
shll
std
add
jnp
jg
lds
enter
cmp
idiv
sbb
repz
sbb
or
cmp
lock
movsl
lds
sahf
mov
cld
enter
notl
add
push
lods
shll
push
dec
jne
cmp
dec
cmpsl
dec
jl
jbe
arpl
add
repz
test
adc
sbb
repz
sbb
add
cmp
das
adc
out
pop
jg
add
jbe
insb
jno
call
mov
ds
call
push
popf
repz
xchg
mov
inc
lods
cmp
cmp
insb
addr16
ss
dec
scas
ficompl
sub
aaa
xor
test
xor
test
xor
test
xor
test
test
nop
sbb
enter
lcall
mov
subb
test
mov
inc
sub
and
loopne
and
sub
popf
inc
sub
add
xor
mov
sbb
dec
loopne
and
sub
shrb
xor
test
pop
lds
pusha
lods
cmpsb
jo
lods
ret
xor
test
lds
mov
sbbl
jp
test
or
test
xor
pop
push
xor
insb
lret
xor
xor
push
push
fnstcw
jbe
enter
mov
mov
icebp
das
das
repz
test
jmp
test
div
cwtl
nop
enter
bound
pushf
sub
xor
mov
xchg
ret
mov
daa
and
inc
xor
test
xor
shrb
xor
test
pop
lds
pop
lods
cmpsb
jo
lods
cmp
popa
shlb
mov
loope
sub
daa
mov
test
push
cs
stos
push
mov
mov
mov
sbb
push
in
icebp
add
xor
cltd
sub
xor
test
mov
ds
or
test
xor
bound
pop
cmp
xor
insb
lret
xor
pop
push
fcompl
mov
sub
test
and
mov
loope
jno
jbe
testl
pop
sbb
and
mull
add
ret
push
in
mov
or
and
push
movl
jo
aaa
daa
xor
sahf
test
xor
push
cld
push
cltd
ja
pop
cs
cmpsb
inc
fs
int
popl
jnp
xor
repz
cltd
pushf
iret
xor
mov
pop
scas
ret
lret
inc
sub
xor
test
xor
pop
cli
jmp
cmpsl
inc
mov
fists
cmp
iret
ja
sub
scas
stos
outsl
lcall
arpl
mov
icebp
das
das
repz
test
jmp
test
div
push
cs
cmp
out
push
inc
popa
jbe
pop
lcall
mov
std
ret
push
in
mov
mov
test
push
cs
stos
push
mov
mov
mov
sbb
in
out
sub
daa
xor
mov
orb
shrb
xor
test
mov
xor
subb
xor
test
pop
pop
mov
and
test
or
pop
pop
mov
fmuls
test
add
daa
xor
dec
stc
pop
mov
and
add
mov
pop
leave
cltd
cmpsl
repnz
sub
cmp
test
sub
test
xchg
cmc
mov
jbe
movsb
xorl
pop
stc
and
cs
scas
jo
lods
xor
cwtl
test
xor
lods
daa
xor
fwait
testl
cmpsl
push
dec
daa
pop
mov
mov
test
jmp
test
cld
icebp
cs
jnp
jae
pop
iret
xchg
sbb
rdtsc
mov
test
inc
mov
sbb
in
dec
mov
cmc
mov
or
rdtsc
mov
subl
mov
sub
adc
movsl
mov
xchg
pushf
sub
xor
pushl
sub
sub
push
in
mov
cmpsl
mov
mov
push
in
mov
imul
in
add
fistpl
mov
stos
mov
xor
test
stos
repz
cltd
pushf
das
mov
xchg
sbb
xlat
cltd
pushf
sub
xor
in
daa
xor
sub
xor
pushf
test
mov
test
xor
sub
sub
mov
scas
pop
mov
sub
pop
fwait
gs
daa
xor
inc
mov
mov
sub
sti
aaa
dec
test
nop
dec
add
outsl
ficompl
jnp
push
and
mov
lods
cmpl
or
insl
mov
pop
mov
pop
xchg
inc
sub
mov
and
mov
xor
test
add
clc
into
popf
fdiv
dec
push
repnz
mov
test
sub
ljmp
and
add
add
inc
arpl
dec
xchg
inc
mov
mov
add
lahf
daa
mov
dec
pop
in
mov
cmpsl
mov
inc
sub
sub
xchg
pop
pushf
inc
sub
add
or
in
mov
popw
pusha
xor
popf
test
xor
stos
daa
xor
fmul
pop
mov
dec
xchg
pop
dec
push
and
push
std
pop
cmp
sub
fdivs
xchg
xchg
pop
lds
mov
mov
icebp
push
das
jmp
test
jmp
test
div
pop
out
stos
sbbl
or
mov
bound
pop
test
xchg
test
xor
std
inc
jg
stc
stos
loop
pop
dec
add
test
ret
das
xor
test
or
test
xor
pusha
push
xor
insb
lret
xor
pop
push
and
mov
xor
pushf
dec
sub
mov
xor
fisttpl
shll
sub
fmuls
ds
or
test
xor
arpl
pop
push
lret
xor
insb
lret
xor
pop
push
cmc
repz
cltd
pushf
dec
daa
bound
mov
push
test
jmp
test
stc
icebp
inc
popf
insb
mov
sti
cmp
in
mov
daa
mov
in
into
xor
xchg
jb
push
or
call
and
mov
xor
test
test
pushf
push
pop
pop
pop
jmp
insb
insl
mov
xor
dec
daa
pop
mov
mov
test
jmp
test
cld
icebp
fildll
inc
add
mov
and
mov
xor
add
aaa
fistpl
ds
mov
mov
subb
mov
sbb
in
xchg
out
lcall
daa
in
inc
lods
xchg
push
shrb
xor
test
pop
lds
push
lods
aas
xor
test
arpl
int
lea
nop
sub
xor
pop
imul
xor
in
stos
pop
mov
mov
mov
pop
mov
jmp
repz
push
sbb
mov
xor
shrb
xor
test
pop
lds
pop
lods
cmpsb
jo
lods
ret
xor
test
popa
xor
mov
gs
xor
mov
add
test
xor
push
pop
cmp
inc
xchg
xchg
test
or
test
xor
pop
push
xor
insb
lret
xor
daa
xor
push
push
dec
jecxz
iret
or
dec
mov
xor
xor
test
scas
aaa
xchg
inc
sub
mov
mov
mov
movsb
lcall
xchg
pop
imul
inc
in
mov
test
pushf
sub
xor
mov
sub
mov
mov
jns
in
sub
dec
daa
pop
mov
mov
test
jmp
test
cld
icebp
mov
mov
in
cmp
pushf
pop
jg
sbb
enter
daa
pop
mov
mov
push
test
jmp
test
icebp
inc
sub
xor
mov
xor
pop
push
xor
cs
sbbl
daa
cwtl
jecxz
pushf
ljmp
dec
lcall
sub
cmp
xor
test
gs
movsb
mov
push
dec
cmpsl
xchg
pop
sub
xor
repz
lds
mov
mov
test
jmp
test
cld
icebp
mov
in
ja
int3
sbbl
in
mov
xor
test
xchg
sub
daa
bound
inc
xchg
pop
push
iret
sub
int3
adc
add
daa
inc
mull
mov
xor
test
push
das
sub
lods
sub
test
pop
pop
push
xor
cs
test
mov
and
mov
jmp
test
sub
mov
mov
sub
gs
dec
sahf
mov
and
cltd
pushf
bound
iret
scas
inc
sub
or
je
ja
lock
xor
dec
daa
arpl
mov
icebp
das
das
repz
test
jmp
test
div
or
inc
ss
sub
popf
call
daa
xor
test
or
test
xor
pop
push
xor
insb
lret
xor
push
push
sub
adc
jb
mov
repz
cltd
pushf
sub
xlat
cltd
pushf
mov
inc
sub
test
sub
jecxz
cltd
pushf
jne
mov
mov
or
in
mov
xor
shrb
xor
test
push
lds
mov
jo
lods
cmp
test
pop
lods
test
sbb
add
daa
xor
iret
sub
mov
enter
stos
jmp
cltd
pushf
and
xor
scas
test
dec
popf
inc
sub
sub
daa
xor
sub
dec
in
mov
xchg
xor
sbbb
sbb
mov
adcb
daa
xor
sub
dec
in
mov
xchg
lret
sub
sti
outsb
dec
in
mov
cmpsl
fwait
pushf
inc
sub
jl
sub
test
xor
movsb
xchg
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
iret
xchg
dec
mov
mov
cltd
push
mov
dec
sub
cmp
nop
pop
imul
inc
xor
push
xlat
pusha
push
jl
cld
jp
add
push
adc
sbb
aaa
stos
ljmp
jno
xor
jmp
or
fwait
int3
pop
sub
cs
inc
cmc
loope
nop
adc
adc
xor
dec
into
aad
call
scas
lods
faddl
jno
fdivrs
lds
in
or
adc
xchg
inc
scas
lock
frstor
in
or
data16
mov
xor
imul
add
cli
ss
adc
jnp
pusha
xchg
push
push
shl
xor
cmp
xor
lahf
dec
adc
sub
negl
movsl
loope
or
dec
out
fnstsw
leave
fcompl
cltd
xor
push
sub
fsubrs
popa
sbb
mov
outsl
pop
push
stos
imul
lcall
daa
pop
fbstp
and
xchg
adc
test
or
jmp
push
test
ret
sbb
gs
mov
cmp
xor
add
mov
push
rcl
loop
insb
mov
fnstenv
dec
fstps
sbb
aaa
mov
lock
jge
das
sbb
jg
outsb
inc
jle
ficomps
and
in
mov
sbb
sub
imul
repnz
fwait
pop
clc
aam
and
adc
adc
add
add
orl
imul
add
xorb
xchg
pop
or
mov
sbb
add
push
std
std
lds
data16
je
lahf
repz
dec
sbbl
pop
sbb
lcall
mov
adc
sbbb
mov
int3
enter
mov
insl
or
cmp
adc
mov
adc
pop
dec
in
xchg
in
ss
test
sub
pop
fstpt
fs
jbe
enter
xchg
lret
lahf
xchg
shlb
push
jno
in
mov
subb
in
fistpl
cli
mov
in
mov
int
in
jae
mov
sahf
shl
jle
jge
mov
pop
lock
lret
roll
mov
incl
lahf
cmp
xchg
jp
not
xchg
movsl
sbb
stos
add
fcmovnb
mov
cmp
aad
ret
popf
hlt
sbb
lods
xor
dec
mov
in
outsl
lock
push
inc
jnp
adc
and
pop
stc
ds
pop
pop
lods
add
lods
mov
arpl
mov
sub
jecxz
jne
push
mov
popf
hlt
xor
ret
xchg
cltd
dec
push
cwtl
add
inc
pop
sbbb
dec
leave
subb
add
es
push
xor
test
add
jns
enter
js
repz
lcall
lods
xchg
inc
fists
mov
ret
sub
rcrl
aam
cwtl
adc
mov
inc
jp
push
test
jo
orb
ljmp
cmp
fwait
rcrb
xor
imul
rcr
jg
imul
addb
fldenv
int
inc
popa
push
cmp
cmc
test
sbb
aaa
jle
movsb
mov
mov
pop
cmpl
jp
repnz
lret
imul
or
fs
insb
push
andb
gs
movsl
nop
jno
in
pop
sub
mov
xlat
lods
lea
out
pop
cmp
and
jbe
add
and
inc
sbb
sbb
repz
stos
mov
ret
adc
mov
xchg
mov
pop
push
adc
dec
int3
jg
cmp
mov
sub
xchg
sahf
push
ljmp
fs
cmc
inc
imul
mov
mov
cmpsb
mov
je
bound
ret
sar
jecxz
push
push
xor
je
addr16
loop
ret
loope
push
mov
in
out
mov
fidivrs
mov
or
sahf
fst
aam
jg
push
mov
insl
push
push
inc
push
mov
sbb
mov
sub
mov
out
popf
push
hlt
fsubrl
push
popa
aad
xchg
dec
dec
push
cmp
pusha
add
cmc
outsb
adc
inc
push
movsl
jno
cmc
neg
test
fs
rolb
lock
inc
dec
stos
enter
xchg
jae
dec
scas
lcall
jne
push
inc
cmp
shrl
xorl
or
mov
dec
fsub
cmp
and
push
dec
fsub
inc
jecxz
into
jecxz
and
push
lods
and
loopne
ds
out
pop
push
pop
sbb
xchg
mov
out
dec
jne
and
or
ds
dec
fcoml
or
push
outsl
push
stc
in
or
int3
icebp
jle
pop
aas
mov
lahf
push
insl
sti
mov
nop
cld
xchg
xchg
shr
xchg
rcrb
lds
mov
mov
dec
out
pop
mov
jbe
je
sub
imul
dec
daa
pop
and
or
or
sub
and
cmpsl
fisttpll
mov
cmpsb
ret
cmp
mov
sub
jmp
mov
stc
fistpl
mov
iret
mov
out
repz
sbb
mov
bound
xor
ret
test
popa
scas
cmpsl
movsb
fadds
sti
mov
mov
pop
and
cmp
jbe
dec
adc
adcl
inc
jecxz
mov
cmp
insb
xchg
lahf
add
jns
xchg
jne
sub
leave
jp
popf
jo
add
sbb
notl
cli
inc
aaa
push
dec
sbb
xor
lret
xchg
mov
mov
lahf
aas
xor
mov
les
xor
pop
mov
dec
cmp
lods
cltd
jge
jg
aas
fdivr
jge
lea
xchg
jne
or
mov
mov
sub
xchg
pop
or
flds
inc
aad
lds
inc
xor
mov
mov
insb
in
xchg
shrl
lcall
scas
and
lock
out
mov
lret
shrb
call
push
pop
adc
dec
jb
mov
cmp
cmp
cmp
jmp
jle
inc
icebp
andb
jecxz
daa
out
pop
jg
leave
frstor
jno
mov
daa
adc
mov
or
hlt
repz
std
call
mov
insb
sub
dec
dec
push
sbb
ret
pop
out
jbe
fcmovnu
mov
pop
daa
out
add
sti
in
negl
mov
and
rclb
cmp
in
xchg
add
push
xor
dec
ss
xor
jno
dec
sub
aaa
shrl
call
mov
mov
add
lods
xor
test
sbb
lds
mov
imulb
push
cmp
enter
out
mov
in
mov
ret
in
fcmovne
stos
mov
jo
stc
sbb
shll
and
pop
and
xor
or
mov
orps
jge
xchg
pop
dec
scas
and
stos
cmpsb
jl
push
or
or
cmc
dec
icebp
js
mov
and
pop
loopne
push
mov
xor
jnp
lods
sbb
imul
insl
jbe
sbbw
sbb
xchg
or
pop
fs
mov
xlat
mov
enter
inc
rol
popf
in
sti
into
movb
fnstenv
fistl
xlat
jge
bound
push
or
jo
pop
sub
jl
jge
and
movsl
mov
adc
bnd
pop
push
stos
sti
mov
sbb
add
and
and
mov
mov
add
fdivrs
fstpl
fs
popa
psubd
fcomp
mov
and
aaa
jb
push
loopne
loop
push
push
adc
or
popf
in
cli
lcall
dec
or
repnz
or
inc
dec
dec
xchg
shrb
addl
inc
mov
push
mov
push
jp
lods
popf
andl
into
loope
or
jmp
mull
inc
push
mov
mov
mul
pop
clc
mov
push
or
add
xchg
lcall
push
addr16
push
dec
test
cmpsb
push
pop
imul
fucomp
repz
shll
adc
sub
fidivrs
cli
in
mov
inc
sahf
jb
imulb
stos
fdivrs
xchg
jb
pop
lahf
add
rcll
cmp
xchg
xor
jl
dec
test
and
inc
mov
dec
pop
mov
jae
mov
or
jp
sub
cs
mov
adc
imul
dec
in
push
and
mov
dec
int3
nop
popf
arpl
sub
cmp
dec
pop
repnz
and
and
xchg
push
sbb
ss
into
lret
push
and
insb
mov
mov
shl
pop
mov
dec
jbe
sub
imul
xchg
xchg
pop
pop
ljmp
ds
xor
push
mov
add
sbb
add
repz
fbld
rcrb
and
jbe
fildll
lret
mov
fidivrl
cmc
mov
cmpl
mov
arpl
adc
inc
es
repz
adc
add
sbbb
mov
xor
jae
imul
mov
fiaddl
adc
fldcw
and
stos
cmp
cmc
fbld
popa
or
sub
xlat
xchg
stos
xchg
xchg
dec
sbb
inc
scas
aam
in
mov
mov
or
popf
mov
loopne
pop
fs
pop
sub
outsb
lock
cmp
pop
xlat
xor
stos
mov
stos
cltd
int
dec
inc
add
mov
add
daa
push
les
sub
sbb
arpl
dec
mov
mov
ljmp
jecxz
mov
inc
mov
fs
add
or
test
mov
es
scas
dec
ret
push
push
lods
sub
mov
arpl
ds
cs
cmp
sub
js
adc
shll
in
movsb
jnp
mov
pusha
das
sbb
pushf
mov
inc
xor
out
mov
mov
les
add
or
adc
pop
push
std
jmp
jg
ror
xchg
mov
pop
int3
xor
xor
int3
pop
std
xchg
inc
mov
xlat
xor
add
cmp
xchg
js
lds
outsb
mov
js
dec
pop
fsubrs
mov
arpl
inc
fstpt
adc
test
mov
daa
adcb
jo
stc
jb
aaa
sahf
lahf
xchg
test
repnz
aam
outsb
cmpsb
into
mov
in
gs
outsl
inc
sbb
mov
sub
jl
pop
xor
or
push
push
mov
or
lret
into
inc
mov
repz
mov
inc
daa
inc
pop
aaa
push
mov
cmp
xchg
leave
mov
xchg
sbb
enter
push
push
dec
outsb
xchg
stc
and
mov
xchg
out
lock
sbb
loop
aas
mov
test
arpl
es
and
and
push
outsb
loope
xchg
movsl
stos
sub
or
divb
in
xor
js
jle
cmpsl
lcall
in
aam
jmp
outsl
jmp
add
and
int
dec
loop
sbbb
pop
int3
mov
mov
push
mov
lcall
ficoms
cmp
sbb
or
int
hlt
mov
xchg
mov
outsb
test
jmp
div
ja
sti
sub
cmp
fstpl
dec
adc
xor
mov
scas
xchg
shrb
les
testl
cmp
pop
and
insl
xor
aaa
subb
xorb
xor
nop
imull
mov
mov
and
imul
jns
fsubrs
mov
jne
push
mov
sbb
rcl
push
loope
aas
sub
ljmp
aas
mov
xor
sbb
bound
jb
xor
jge
insb
mov
cmp
out
inc
gs
cmpsl
lods
lds
dec
inc
rolb
daa
shlb
pop
xchg
adc
add
sub
jno
dec
add
mov
lods
xchg
mulb
adcb
dec
shlb
out
push
pop
cmpsl
mov
icebp
in
xor
ds
ds
sbb
sub
inc
lret
in
loope
sub
push
add
jb
push
or
das
push
test
shrb
xchg
jmp
pusha
cli
cmp
mov
adc
lahf
loopne
and
push
xchg
push
daa
xlat
xlat
aad
lret
pop
mov
or
icebp
popf
cmp
or
mov
fistl
jmp
shlb
enter
and
shlb
xor
adc
test
cwtl
inc
test
jb
repz
inc
mov
into
imulb
cmp
es
dec
lods
nop
gs
dec
js
add
xlat
add
dec
dec
mul
jnp
jae
sahf
lods
test
test
mov
cmp
adc
jge
pop
dec
aad
mov
sbb
out
and
inc
popa
dec
sbb
inc
jo
sbb
xor
add
fbstp
pop
jp
fmul
outsb
cld
dec
mov
pop
pushf
imul
pop
clc
pusha
hlt
inc
mov
popf
cltd
sahf
ret
jmp
push
xchg
cmp
or
mov
push
add
daa
and
add
xchg
lahf
sub
out
adc
dec
xchg
mov
call
push
ret
ds
ds
push
divb
inc
imul
arpl
cmpsb
and
cmp
mov
mov
cltd
and
xor
or
dec
clc
dec
lcall
adc
mov
pop
adcl
daa
sub
adc
ret
les
or
popa
fcmovbe
xor
inc
pop
add
jb
inc
adc
and
rcl
mov
mov
inc
mov
nop
dec
mov
push
lcall
sub
imul
mov
jp
js
add
or
test
outsb
mov
dec
movsb
mov
sti
mov
jge
inc
imul
push
pop
cmp
ret
mov
sbb
iret
sbb
ficompl
or
push
test
mov
mov
scas
xchg
dec
add
addr16
pop
int3
pop
and
ljmp
push
pop
mov
nop
dec
cmp
cmp
mov
pop
add
push
jmp
lcall
pop
xchg
adc
xor
cmpsb
dec
xchg
jl
mov
pop
inc
test
inc
lret
adc
or
out
xor
xor
sti
call
int
test
xchg
mov
daa
pop
mov
adc
add
pop
int3
push
or
dec
or
out
xor
scas
adc
sub
sub
clc
xchg
inc
fadds
push
xchg
movsb
mov
sub
shrb
fcoml
and
aam
loop
cmp
fndisi(8087
sbb
fstps
inc
and
lahf
test
mov
repnz
mov
jb
dec
int
dec
mov
cs
and
psllw
scas
lds
imul
xor
and
push
inc
aaa
fnstsw
jns
jecxz
mov
xchg
in
cs
fadds
dec
inc
and
pop
sub
jmp
pop
adc
cmp
push
movsl
dec
xor
notb
sub
stc
or
lret
cmp
enter
fcmovnbe
push
daa
sbb
sub
add
enter
popa
int
add
out
ret
sub
push
cmp
mov
mov
mov
es
mov
iret
jmp
shll
insb
stos
test
test
sub
pushf
jae
pop
mov
clc
insb
mov
test
jbe
fadds
icebp
outsl
popa
ja
movsb
mov
jmp
cwtl
jge
cmpsl
mov
mov
cmpsb
adc
adc
adc
adcl
or
dec
adc
push
dec
imul
daa
push
pop
pushf
lods
jnp
stos
iret
xlat
mov
mov
jl
dec
in
es
push
cmc
and
sbb
imull
fildl
push
add
push
mov
insl
pop
xlat
lods
mov
or
mov
rorb
add
call
pop
pop
add
or
xchg
out
and
mov
jecxz
pop
add
adc
sarb
shl
or
popf
pop
hlt
aaa
out
test
repnz
sub
movsb
rolb
and
inc
sbb
cltd
data16
push
rclb
hlt
mov
xchg
jnp
add
push
cmp
sbb
sbb
js
mov
dec
testl
mov
xchg
push
add
in
pop
pop
push
scas
outsl
pop
test
mov
daa
jo
sub
idivb
mov
or
adc
push
outsb
cs
adc
cmp
xlat
pop
div
cmp
fnstcw
adc
xchg
mov
jle
movsb
or
subb
fnsave
pusha
inc
dec
subb
test
xor
je
popa
into
cmp
cmp
dec
jecxz
lahf
mov
xchg
pop
cmpl
mov
test
inc
jne
jmp
movsb
push
jecxz
jg
fnstsw
jge
mov
dec
cld
repnz
xchg
int3
enter
clc
fisttps
scas
je
cli
ja
or
xchg
push
sub
xchg
jae
push
fldl
mov
cld
xor
mov
repnz
adc
mov
pop
cmp
jmp
addr16
test
dec
or
es
stos
adc
test
insl
fisubrl
fidivrs
je
fcoms
inc
mov
pop
jae
sub
iret
jp
add
jecxz
ja
adc
outsl
inc
pop
aas
sbb
pop
psubusb
dec
jg
or
in
pop
in
mov
inc
xor
in
mov
lea
imul
xor
mov
mov
movl
mov
mov
mov
mov
ret
dec
and
sbb
test
js
mov
gs
inc
cmp
cmp
call
stos
ss
mov
mov
dec
xor
notl
xchg
adc
dec
dec
dec
pop
test
out
mov
into
adc
mov
or
push
movsb
push
jmp
xchg
and
sub
jbe
inc
fdivl
jns
or
pop
das
test
aam
daa
mov
addb
sbb
cmp
adc
mov
rcll
outsb
out
dec
insb
mov
pop
sub
jae
movaps
push
add
xchg
lock
mov
fcoms
mov
push
jg
add
out
andl
bound
mov
sti
xor
sub
aam
pushf
subl
cmp
lods
jg
mov
sarb
loop
cmc
callw
lcall
testl
int
push
mov
cmp
mov
add
les
mov
adc
pop
aad
xor
jmp
sbb
fwait
push
dec
mov
xchg
loope
jbe
pop
mov
cmp
add
xchg
jp
lods
push
xor
daa
inc
push
push
mov
inc
mov
push
fidivrs
aad
call
adc
int3
scas
sbb
imul
fcomip
ret
movsl
stos
adcb
fwait
xchg
mov
jne
fs
and
sahf
xchg
cmp
mov
test
mov
xchg
jne
pop
pop
test
xor
pop
and
fs
rorl
mov
mov
out
mov
push
mov
rcl
roll
leave
movb
sbb
adcl
xchg
pop
sub
and
xor
int3
scas
pop
or
mov
push
lea
jnp
fidivs
push
push
das
or
mov
jbe
adc
ret
dec
bound
sbb
cwtl
rorl
ror
jle
mov
popa
lods
popa
and
lock
imul
inc
cmp
inc
xchg
pop
loope
repz
loope
mov
or
mov
pop
adc
fisttps
and
data16
movsb
jle
stc
imul
mov
or
insb
add
mov
pop
mov
sub
sahf
in
xchg
adc
dec
inc
dec
push
iret
jne
xor
push
insb
jnp
in
sbb
sub
das
xor
mov
rcrl
cmpsb
aad
mov
xchg
insl
sbb
push
daa
jmp
cld
call
mov
inc
jp
mov
clc
std
cmpsb
insl
dec
xlat
dec
adc
jg
sub
push
icebp
into
mov
or
fsubl
ljmp
adc
xor
mov
loopne
mov
cmp
insb
rcrb
aad
out
imulb
imul
mov
cs
mov
je
scas
jp
xor
call
cmp
mov
jns
andl
jo
push
cmpsb
sti
sbbb
mov
xchg
popa
std
or
pop
pushf
fistpl
mov
dec
xor
mov
mov
aaa
and
adc
syscall
xchg
xorb
mov
mov
xchg
repnz
push
mov
test
mov
out
inc
cwtl
mov
jecxz
fdivrp
cmp
ret
out
ret
or
lds
jl
outsb
movsl
push
jae
adc
mov
icebp
std
xlat
lahf
aas
jecxz
popa
jmp
pop
faddl
jo
xchg
add
sub
mov
mov
mov
adc
test
loope
jg
sbb
fsubrs
imul
mov
xchg
stos
mov
cmpsl
push
mov
aaa
rol
xchg
imul
in
fists
pushf
mov
out
pop
jl
mov
adc
imul
push
cmp
inc
pusha
in
lods
fistpl
or
iret
xchg
subb
out
mov
lods
shll
or
sub
xchg
sub
dec
mov
clc
rcl
repz
push
fs
add
sti
imul
xor
rcr
jne
or
clc
cmp
sbb
ja
daa
imul
push
dec
adc
xchg
mov
cmp
test
jo
cmc
push
lret
loopne
incl
and
sbb
jns
mov
ret
dec
out
fstp
pminsw
ret
arpl
or
daa
dec
subl
push
jne
leave
test
cmc
iret
or
les
pop
sub
and
push
cmp
insb
jmp
push
push
xrelease
outsb
into
into
push
dec
int3
push
xor
pop
mov
push
push
push
ret
push
out
mov
cmp
jp
jnp
icebp
add
mov
sub
lcall
xor
adc
in
push
gs
jl
nop
add
leave
pop
push
arpl
fdiv
fsubp
or
shrl
in
fisttpll
pop
cwtl
imul
pop
adc
xchg
jbe
mov
lock
clc
mov
into
push
adc
mov
or
aas
cmpsb
mov
and
sahf
sub
insl
dec
xchg
leave
jmp
or
mov
movsl
shr
fistpll
inc
cltd
ja
mov
sbb
and
aas
jg
push
repz
jbe
push
imul
cmp
mov
push
shr
daa
imul
mov
in
xor
sbb
enter
push
inc
jo
rolb
mov
fsts
add
je
or
push
jmp
xor
add
xchg
dec
ss
ss
aam
les
sub
in
out
gs
or
cmp
jmp
rorl
iret
sahf
stos
inc
jb
cmpsl
inc
add
mov
aaa
jae
sub
dec
push
out
pushf
testb
mov
pop
xor
mov
daa
mov
insb
or
dec
cmp
leave
popa
push
scas
leave
fisubrl
sti
fldenv
call
mov
test
pop
in
inc
sub
xchg
aad
cmp
bound
insl
pushf
pop
mov
mov
cmp
xlat
fcmovne
sahf
imul
xchg
and
push
cmp
push
push
sub
mov
cld
out
test
fdivrl
test
cltd
pop
pop
test
xchg
into
cmp
into
push
mov
out
rol
lret
xchg
pop
daa
xchg
out
and
mov
neg
dec
fcoms
jp
sbb
xchg
mov
ja
mov
out
xlat
xchg
addr16
push
mov
inc
jmp
pop
cltd
xor
rolb
in
mov
sbb
gs
jg
push
into
data16
fcom
fistpll
out
fdivs
mov
and
jae
mov
sbb
lds
lret
stos
dec
inc
xor
out
insb
xchg
popf
cli
pushf
out
push
stos
rcrb
into
xchg
int3
sbb
xchg
lds
push
es
outsl
int3
popa
jne
xor
fidivs
adc
xor
xor
ja
lret
stos
cmc
iret
fs
aas
mov
pop
or
xor
into
hlt
clc
jne
sbbl
jmp
fldl
and
jecxz
jnp
sub
cmp
int
add
fiaddl
addr16
dec
gs
test
daa
fnstenv
pop
stos
dec
cmp
xor
ret
adc
in
fldl
adc
shrb
jle
jnp
jb
insb
jno
pop
test
clc
in
mov
es
std
cs
mov
ds
jns
notl
scas
cmpsl
das
pop
sub
xchg
adc
pop
xor
mov
or
push
bound
nop
dec
lea
jb
repz
movsl
ljmp
or
ja
add
pushf
stc
lea
fmull
ficoms
pusha
adc
jl
jle
fnstcw
push
out
xchg
xor
pop
mov
test
aaa
or
and
and
cli
enter
out
xor
add
pushf
les
pusha
xchg
adc
ja
push
arpl
mov
mov
int
pop
orl
fwait
inc
cmp
aam
popf
sbb
faddl
inc
cltd
inc
inc
je
test
fsubp
sub
pop
push
jnp
into
shl
xor
loop
dec
movsb
mov
icebp
adc
movsb
push
mov
xchg
cmpsb
mov
loop
adc
or
mov
jno
mov
or
aas
rclw
and
jecxz
adc
push
dec
sub
dec
mov
cmp
sub
jns
leave
mov
into
push
xchg
mov
pop
cmc
pop
pop
cld
mov
jl
and
sbb
loope
loop
pause
push
movsl
insl
mov
iret
mov
insb
mov
insb
in
jns
xlat
pusha
mov
mov
lret
jecxz
mov
mov
loope
xchg
out
sub
mov
and
enter
cmp
pop
in
insl
dec
outsl
or
mov
stc
test
mov
sub
adc
pop
pusha
jb
and
pop
inc
sti
fsts
cmpsl
inc
mov
jae
imul
fsubs
cwtl
cmpsb
cmp
out
mov
lcall
fldcw
and
das
aas
jp
mov
je
lods
out
jae
into
fists
add
pop
push
jmp
into
aam
cmp
pop
adc
shrb
inc
clc
scas
outsl
sbb
sti
xor
sar
cmp
sahf
mov
mov
rcr
ss
pop
sbb
pushf
xor
mov
in
loopne
arpl
out
dec
dec
in
imul
stos
adc
pop
cmc
insb
daa
loope
pop
xor
stc
adc
std
movsb
or
inc
repnz
outsb
fldz
shl
lahf
testb
adc
in
in
cmc
adcb
popf
outsl
jg
ficoms
divl
in
fstps
or
jo
push
mov
fwait
imull
std
jae
mov
jns
mov
adc
push
inc
popa
cli
repz
mov
ss
jb
lods
vcvtdq2pd
adc
mov
or
and
xor
cmp
push
cmp
push
and
in
pop
cmp
mov
jns
test
pop
lock
std
idivb
icebp
pop
les
inc
loop
test
aaa
loop
insl
aas
call
popa
sub
xchg
out
mull
adc
jle
cld
lret
xchg
lret
pop
jge
aam
jbe
in
pop
mov
aas
aam
lcall
jmp
daa
loopw
lods
jne
inc
aas
insb
aas
repnz
into
add
rorb
pop
jg
add
ds
cmc
sub
adc
cmp
test
push
cmp
mov
std
in
cmp
lahf
push
repnz
mov
xchg
ficompl
fmuls
lea
fisttpll
fcmovnbe
sub
mov
sbb
pop
outsb
jp
int
xchg
cs
mov
push
fists
xchg
cmp
aaa
test
dec
or
and
stos
pop
sub
pop
mov
cmpsl
push
ja
xor
pop
scas
lahf
sub
inc
cwtl
cs
int3
or
inc
lds
push
into
cwtl
pop
ds
sub
inc
xchg
adc
push
std
fisttps
pushf
bound
mov
pop
sbb
dec
lods
dec
js
jbe
fwait
inc
loope
cmpsb
pop
mov
pop
movsl
xchg
jae
data16
ljmp
cmp
add
mov
out
mov
sbb
sbb
aaa
mov
push
sub
cmpsl
rclb
mov
lock
cmc
loope
test
mov
jbe
stos
and
loope
xor
movsl
idivb
cmp
jle
jo
pop
pop
lock
dec
inc
es
movsb
adc
add
lcall
stos
ret
cwtl
dec
sbb
adc
cli
pop
add
ljmpw
mov
add
ss
xchg
call
lods
stos
outsl
and
dec
addr16
movsl
jg
inc
iret
cwtl
lds
loope
clc
lahf
fdivrl
pop
and
cltd
sti
push
outsl
jp
test
pushf
sub
sti
scas
mov
sahf
sbb
daa
loopne
rcll
out
jmp
jp
sahf
mov
imul
subb
sbb
sahf
in
cmc
jecxz
xchg
stos
inc
ljmp
imul
xlat
lods
aam
aad
addr16
jmp
or
xlat
push
push
or
mov
je
pop
sub
es
addr16
dec
cmc
sub
cmc
bound
cmc
mov
stos
inc
pop
in
mov
aam
push
pop
in
sub
js,pn
adcl
xor
adc
data16
int3
das
enter
or
pushf
push
outsl
andb
sbb
mov
fldl
inc
and
je
subb
fistpl
leave
jnp
gs
int
push
fs
add
sahf
mov
dec
sbb
pop
sbb
loop
dec
popf
js
cwtl
sub
jb
dec
push
jb
loop
jae
xchg
add
dec
clc
jns
cmc
addr16
cmp
in
mov
rcr
jl
sub
out
and
jae
scas
mov
enter
mov
hlt
lock
inc
or
mov
test
adc
les
test
or
cltd
movsb
pushf
out
cld
or
pop
pop
push
in
outsb
insl
repz
push
repz
outsl
lret
ret
adc
out
inc
pop
xchg
push
jbe
fildll
ficoms
lock
and
push
mov
stc
jbe
fs
in
pusha
xlat
pop
xorb
xor
jmp
rol
cmpsb
out
jo
shl
adc
adc
inc
cmp
repz
mov
mov
dec
mov
pop
dec
insb
cld
pop
gs
adc
sahf
add
or
clc
push
in
imul
shrl
scas
stos
xor
jb
daa
movsb
cmp
cwtl
mov
push
push
inc
xor
mov
mov
cltd
fildl
shrb
pop
insb
cmc
sti
test
lahf
sbb
dec
int
lahf
shrb
mov
test
imul
scas
xor
push
in
adc
sahf
pop
lods
dec
xchg
jnp
je
push
stos
lret
cmp
sbb
sahf
imul
ds
std
lods
push
jnp
mov
scas
xor
testb
rolb
dec
addr16
ljmp
imul
pop
cmp
adc
test
lahf
mov
mov
pop
mov
xor
call
lds
sti
sbb
loope
out
sti
sbb
push
stos
jnp
cmp
rcll
sbb
mov
mov
jg
ja
push
enter
xor
imul
and
sub
repz
scas
cltd
stc
lods
lock
mov
clc
dec
xor
bound
mov
iret
dec
lea
lret
add
pusha
jno
xor
jb
adc
xor
aam
inc
stc
mov
xchg
and
inc
push
add
daa
sbb
jmp
and
mov
shrl
sub
test
sahf
dec
out
jle
loope
push
mov
data16
xchg
imul
or
flds
push
sub
das
add
xchg
push
das
push
mov
lods
daa
xor
pop
xor
popa
lods
sub
mov
test
stos
dec
mov
stos
cmpsl
daa
data16
lods
lods
sub
dec
fs
pusha
std
or
imul
sti
mov
cmpsb
add
loope
sbb
xor
mov
mov
lods
daa
xor
das
jecxz
sbb
cmc
je
xorb
rcr
sub
ss
insb
xchg
dec
mov
call
push
dec
jecxz
lock
test
dec
jecxz
sti
movsb
mov
or
add
movb
push
sbbb
mov
mov
arpl
ret
cmp
jl
inc
jmp
jge
in
dec
stc
sub
xchg
test
das
xor
test
aam
fsub
mov
lea
mov
push
xchg
push
aam
xlat
inc
xor
mov
cld
stos
mov
and
mov
daa
push
push
sbb
decb
and
sub
pop
mov
push
cltd
add
roll
sbb
mov
cmp
sbb
jmp
xor
test
movsb
incl
shll
mov
pop
push
sbb
xor
subb
xor
test
repz
jb
mov
mov
daa
xor
sti
and
outsl
test
xor
push
jns
push
jp
mov
mov
and
mov
test
test
arpl
push
insl
jge
movsl
loop
lds
mov
mov
das
sbb
and
cmpsb
and
jmp
push
out
addl
leave
or
dec
incb
int3
push
sub
popf
and
and
cltd
jmp
push
cmpsb
cmpl
push
cmpsb
lret
fistpl
mov
repz
cmpsb
test
cltd
cmp
sub
push
cmpsb
jmp
sbb
ficoml
fbld
adc
inc
xchg
int3
pop
in
xchg
out
xchg
jo
movsl
mov
je,pt
sub
fists
movl
cmpsb
jmp
push
adc
int
mov
data16
sub
aas
ljmp
hlt
mov
mov
xor
and
cmpsb
and
jmp
push
in
andl
aas
ljmp
dec
dec
aam
jecxz
popf
pop
jge
popa
dec
xor
insl
jp
pop
mov
das
xchg
pop
dec
std
ljmp
jne
or
xchg
insl
or
in
jnp
fucom
push
movsl
sub
in
movsb
adc
lcall
mov
jnp
aaa
push
notb
out
push
lods
mov
into
xlat
add
cmpl
cld
mov
xor
mov
mov
mov
fistps
mov
jns
test
insl
adc
cwtl
cmp
jmp
movsl
cmp
inc
jmp
inc
push
xchg
pop
mov
push
jo
in
das
sub
jns
fnstenv
adc
mov
test
mov
xchg
xor
mov
sub
add
fmul
or
sbb
das
nop
xchg
mov
jecxz
pushf
cmp
nop
xchg
enter
mov
shrl
pop
push
xlat
push
leave
addr16
sub
aad
rcrl
hlt
daa
sub
cld
adc
inc
mov
out
push
pop
push
mov
in
bound
inc
push
sub
jnp
sub
jnp
cld
sub
cmp
lahf
or
sub
inc
sub
or
sub
sbb
mov
test
call
test
sub
aas
fidivrl
test
cld
sub
dec
imul
in
ret
test
addr16
mov
lds
fnstcw
daa
stc
mov
or
nop
scas
fcomip
jp
addr16
mov
lods
pop
nop
scas
sti
sub
outsb
outsb
ss
sbb
cld
mov
js
dec
iret
mov
pop
push
xor
outsl
push
sbb
xchg
scas
inc
sub
or
sub
sbb
mov
test
call
test
sub
cmp
popa
push
stos
les
outsl
movsb
cld
jo
gs
js
aaa
xorb
je
lahf
adcl
ljmp
test
test
and
ret
fldcw
call
scas
sub
cld
or
and
pop
lret
cs
movsb
in
sbb
and
and
scas
scas
imul
sbb
add
fcomip
xor
adc
mov
inc
loop
ficoml
xchg
stos
inc
mov
aas
cmp
lods
movsl
push
xchg
int3
add
cwtl
bound
dec
in
mov
pop
inc
loope
fcomps
hlt
scas
inc
xor
push
pop
fwait
sub
test
inc
cld
rcrl
sub
push
jg
movsl
adc
xchg
lea
sbb
lret
ja
enter
loopne
ret
xchg
fmull
mov
movsb
inc
jae
jge
jbe
fucom
scas
je
dec
mov
add
rcrl
cmp
inc
andb
enter
lods
leave
add
xor
loopne
push
pusha
pop
shl
xor
or
mov
mov
push
add
dec
jns
pop
adc
ret
add
add
mov
dec
or
pop
push
cld
inc
mov
or
xor
push
scas
pop
shlb
loop
cmc
push
sahf
out
push
jecxz
lods
imul
outsl
xchg
adc
pop
inc
les
imul
loopne
lahf
leave
push
push
es
movsb
adc
rorb
call
push
into
movsb
enter
daa
dec
test
aaa
movl
xorl
cmp
lods
in
in
pusha
mov
or
imul
insb
dec
xchg
mov
push
pop
test
sub
fwait
rolb
ljmp
shrb
les
inc
mov
push
mov
stc
mov
arpl
jle
adc
ss
in
and
mov
jae
ss
cmpsb
sbbb
sbb
rorl
dec
orl
adc
mov
pop
mov
adc
cmpsl
rcr
sbb
lods
test
pop
frndint
arpl
cs
dec
std
mov
shrb
xchg
lahf
popf
cwtl
out
leave
orl
jbe
call
xchg
imul
xchg
push
in
rcll
adc
mov
xlat
inc
rcrl
inc
fidivrs
xchg
loope
jg
sub
adc
mov
mov
xchg
cmpsb
cmpl
jae
loope
cld
adc
in
and
scas
and
test
mov
inc
inc
jo
ljmp
xchg
mov
dec
inc
dec
and
dec
add
mov
xor
push
jno
imul
or
pop
mov
daa
int
cmpsb
aas
mov
pop
fadds
and
into
sbb
jne
sub
cmc
jp
loope
sub
cs
pop
sbbl
adc
sbb
cmp
push
lods
adcl
ss
mov
pusha
cmc
icebp
push
jp
sahf
int3
pop
lea
iret
pop
cltd
pop
push
dec
mov
push
sahf
sbb
in
inc
mov
insl
insl
scas
xor
movsb
mov
mov
jl
adc
pop
daa
jl
sub
es
outsb
loopne
ret
popa
xor
inc
loope
js
fcompl
pop
lods
insl
outsl
push
fwait
push
shll
loope
fwait
xchg
je
int
ljmp
and
jmp
and
outsb
pop
arpl
xchg
cmpsl
mov
stos
stc
into
jecxz
mov
stos
push
push
pop
dec
sbb
scas
push
mov
add
cmpsb
mov
cmc
sbb
and
and
lret
loope
or
add
cwtl
stos
sbb
and
orb
frndint
shlb
rsqrtps
lds
mov
sub
push
sbb
dec
mov
lret
and
rcl
rcrl
mov
jmp
std
xor
and
nop
insl
enter
iret
fs
cli
push
jb
dec
cli
jns
stos
loope
int3
pop
scas
movsb
lcall
sbb
pushf
push
adc
jbe
sti
jnp
loope
xor
bound
cmp
mov
fldenv
rclb
out
iret
andb
and
out
lods
dec
test
daa
and
out
jno
mov
pop
mov
lds
sahf
cmpb
push
pop
test
mov
loop
lods
dec
aaa
jg
mov
mov
pushf
pop
mov
xor
fsub
cmc
mov
in
ss
pop
mov
xchg
mov
mov
jo
daa
dec
add
in
aaa
cltd
fldt
sbb
mov
xor
movsb
cmp
ror
push
add
movsb
mov
das
inc
and
mov
push
clc
sbb
xor
add
sbb
fdivrs
mov
push
stos
fisttps
jns
fldenv
cmpsb
jecxz
push
lock
pusha
dec
addr16
shlb
aad
push
inc
adc
add
fmuls
les
inc
int
fmuls
dec
xchg
ljmp
lock
push
and
mov
mov
xor
mov
xchg
jecxz
add
and
fnstsw
jmp
ljmp
stos
xchg
mov
pop
cmpb
das
xorl
dec
fldenv
inc
mov
pop
mov
add
cmpsl
push
pushf
mov
mov
test
jle
xor
dec
fbld
or
aam
add
jb
hlt
out
adc
ret
dec
mov
mov
movsl
fnstcw
mov
lret
jbe
sbb
stos
lret
popa
cmpsl
xchg
imul
roll
cld
insl
pop
jns
or
mov
test
lcall
xor
stc
fcompl
push
scas
lods
xor
leave
mov
mov
cltd
ja
or
add
push
jle
cmpsb
sub
lods
out
stc
pusha
push
lods
fldcw
stos
mov
jle
dec
fstpl
mov
push
add
add
add
jae
xlat
jns
mov
inc
repz
rcr
pop
jmp
mov
aad
shl
push
aad
add
inc
les
mov
xor
lods
gs
pop
test
add
pop
leave
addr16
add
sbb
cmpb
outsl
test
ficoms
xchg
adc
mov
inc
adc
pop
insb
add
and
mov
sar
sbb
adc
mov
mov
popa
push
cmp
sbb
jmp
movsb
fdiv
inc
xchg
pop
fwait
xchg
pop
dec
nop
sbb
rclb
leave
xchg
cmpsb
jne
mov
ja
pop
scas
push
iret
nop
xchg
scas
push
shrb
pop
cmp
lock
sub
testb
out
popa
dec
push
jl
fnstsw
jno
inc
and
into
push
push
mov
cmpsb
dec
mov
arpl
popa
xchg
movsb
cwtl
enter
push
ja
push
jmp
mov
addl
pop
movsl
lds
adc
nop
sub
pushf
aam
and
mov
les
push
pop
jnp
ret
imul
pop
sti
push
hlt
ljmp
jge
ja
push
jp
inc
push
cmpsb
and
stc
daa
test
sti
push
mov
ret
jbe
pushl
adc
popa
das
lret
push
test
and
push
mov
pop
mov
int3
inc
lods
shll
movsl
xchg
int3
jle
xor
dec
dec
outsl
rcrl
mov
jg
jg
cmp
adc
push
jmp
mov
add
mov
pop
mov
cs
jo
adc
inc
lock
call
repnz
scas
and
insb
jp
and
fimuls
inc
push
jb
dec
leave
test
xor
mov
xor
inc
pop
sahf
rclb
movsb
daa
in
or
push
mov
push
inc
adc
je
xchg
sub
arpl
nop
cmpsb
xchg
idivl
jmp
les
lods
adc
mov
sub
mov
adc
in
xorb
roll
stos
repnz
out
jae
aas
js
outsl
mov
loope
mov
dec
cmp
lret
adc
jns
lahf
hlt
popf
sub
nop
inc
mov
sub
les
ja
adc
mov
push
push
inc
mov
inc
mov
hlt
pop
xlat
gs
testl
push
inc
mov
sarb
fdivl
dec
mov
add
addl
hlt
iret
test
arpl
pop
push
ror
add
xor
mov
pop
ret
cmp
inc
ja
in
sbb
push
inc
int3
pop
mov
loopne
add
mov
inc
jno
mov
out
xor
and
jb
or
mov
jb
hlt
jno
xor
fcmovne
xchg
out
fstl
push
ret
adc
jb
andb
cli
mov
jecxz
jl
mov
xchg
xlat
sub
scas
or
insl
enter
dec
popf
rclb
lods
in
or
mov
roll
mov
xor
rcrb
sti
popf
ja
adc
movlps
popa
or
lss
ds
or
and
fwait
daa
add
insb
cmpsb
mov
mov
dec
roll
sub
and
pop
pop
fdivs
pop
mov
test
addr16
loop
rorb
call
jp
ja
test
scas
mov
pop
xlat
xchg
pop
fs
push
loop
pop
scas
mov
stos
addr16
dec
sbb
mov
in
scas
mov
icebp
xchg
xlat
push
sbb
out
gs
leave
or
push
stos
out
mov
imul
sbb
stc
sbb
add
sub
inc
mov
mov
popa
mov
rcll
cwtl
les
xchg
mov
pop
divb
lods
hlt
jb
lods
iret
idivl
cmp
sbb
lock
push
xor
aaa
in
adc
popf
xor
divb
mov
in
les
fdivrl
jo
mov
mov
clc
push
sarl
add
pop
hlt
jae
out
dec
rorl
andl
mov
sbbl
xor
inc
mov
cli
fistps
daa
pop
lahf
and
push
pushl
sbb
mov
lret
cs
adc
xlat
xor
mov
sub
or
adcl
mov
sbb
inc
adc
or
sbbb
push
out
push
lret
lea
jbe
or
cmpsb
or
les
pop
mov
xchg
push
aam
push
inc
mov
mov
insb
xchg
inc
pushf
test
test
xchg
std
sbb
fdivp
push
jle
data16
movsb
add
cltd
sub
or
dec
pop
les
and
sbb
out
inc
mov
sbb
jns
pop
fsubp
mov
add
fs
notb
les
lret
cli
es
cli
cmpl
mov
nop
sbb
mov
cmpsb
xchg
lods
mov
pop
jno
mov
iret
adc
mov
jp
push
mov
add
lret
pop
out
arpl
dec
dec
je
pushf
xchg
xchg
ljmp
lret
das
scas
add
imul
outsl
mov
aaa
jno
ljmp
test
push
xchg
insb
sub
and
push
pop
test
sbb
or
xor
in
lcall
mov
fcmovne
inc
nop
das
jns
add
test
loopne
imul
pop
mov
adc
sub
rcl
inc
cwtl
pop
lret
jmp
mov
push
lcall
push
mov
and
dec
frndint
testl
and
adc
ret
add
decb
leave
in
js
xchg
sub
adc
outsb
or
mov
mov
jecxz
xchg
push
jbe
mov
add
out
faddl
and
and
xchg
mov
data16
and
out
mov
test
pushf
fdivs
imul
loop
xchg
mov
nop
push
cmpsb
sbb
add
addb
inc
ljmp
push
hlt
adc
sbb
jbe
imul
das
pushf
ja
inc
mov
dec
popf
cltd
xlat
int
sub
push
push
sbb
in
pop
stos
sbb
fmul
out
push
cmp
aas
lcall
dec
sbb
or
call
pop
es
testb
bound
mov
or
icebp
push
mov
mov
mov
test
push
lods
cmp
jmp
jbe
lret
and
mov
out
repnz
add
jl
mov
enter
and
pushf
aad
in
movsb
inc
dec
mov
and
inc
sbb
jne
mov
popf
out
dec
inc
fldt
lods
and
dec
push
pop
push
mov
adc
inc
cmpsb
enter
in
ljmp
aas
int3
out
mov
add
push
jp
mov
dec
lcall
jmp
enter
rclb
adc
or
mov
inc
movsl
dec
imul
mov
ficoml
outsb
leave
jb
or
bound
or
push
xor
rorb
fwait
mov
and
in
jg
pop
jns
in
loop
daa
ljmp
bound
jae
xchg
popf
icebp
andb
jecxz
jnp
fisttpl
out
inc
pop
outsl
mov
jg
js
push
lret
xchg
adc
mov
loopne
xchg
stos
movsl
loopne
lret
mov
push
adc
stos
push
push
lock
push
pop
push
xchg
test
lret
adc
nopl
fcoms
sbb
push
push
inc
xchg
inc
sub
mov
stc
or
cmp
cmpsb
pop
xchg
scas
xlat
xlat
dec
aaa
push
add
push
cmpsb
xchg
mov
ja
push
inc
xchg
mov
fcomi
dec
sbb
xor
cltd
js
and
pop
ficoms
sub
movsb
data16
cmp
sti
pop
pusha
sbb
movsb
ret
cmpsb
or
sub
and
xor
mov
cltd
xchg
repz
sub
jle
push
data16
xchg
cmpb
shrl
dec
rcr
imul
lcall
push
jbe
jp
sbb
test
lret
jmp
adc
scas
mov
xor
and
and
int
lcall
push
jp
mov
shlb
xchg
gs
inc
jb,pt
std
pop
adc
push
dec
xchg
xor
lds
test
mov
mov
cwtl
arpl
inc
pop
inc
lea
add
add
loop
std
mov
dec
daa
and
repnz
push
rcrb
data16
shrl
mov
push
cmp
mov
pop
aam
subb
mov
adc
in
dec
xchg
cmp
ret
mov
push
fsubl
push
jge
cmpb
shlb
lock
xchg
idivb
pop
pop
jle
aas
mov
inc
xchg
mov
add
add
pushf
lock
roll
ds
jns
mov
lock
hlt
push
mov
add
enter
std
shr
xor
imul
js
scas
cwtl
int
push
cmp
fldln2
insb
xchg
mov
stos
push
mov
aad
daa
jg
adcl
push
xchg
inc
jge
or
pop
ret
mov
inc
mov
jnp
sbb
scas
push
fistpl
mov
loope
jl
jns
xor
and
sahf
out
and
repnz
dec
mov
pop
out
xchg
ljmp
hlt
dec
jbe
lods
in
dec
cld
stos
lret
pop
push
cmp
mov
daa
xor
cmp
inc
scas
iret
sub
sahf
ds
cmp
mov
outsl
xlat
mov
or
aam
pop
femms
in
jno
pop
jecxz
adc
pop
add
inc
testb
push
fstps
pop
in
dec
mov
or
cmpsb
test
mov
xorb
popa
or
mov
test
scas
filds
push
insb
xchg
insb
jl
push
enter
frstor
dec
dec
add
mov
mov
adc
push
sahf
outsl
aad
mov
inc
xchg
popa
xchg
lods
fwait
gs
inc
xchg
ret
push
mov
ret
outsl
push
clc
adc
and
fwait
mov
push
sbb
test
or
add
mov
out
stos
aas
xchg
jp
div
loope
inc
xor
repz
jbe
xlat
cs
jl
addb
sub
loopne
inc
mov
add
dec
add
xchg
fisttps
rcl
mov
xchg
mov
mov
mov
xchg
adc
mov
add
pusha
mov
fcomps
lret
mov
fadds
stos
mov
mov
es
adcb
fwait
icebp
gs
flds
push
xchg
adc
inc
jne
int3
imul
and
jnp
fnstenv
xor
mov
push
pop
mov
movsl
int
imul
pop
pop
loope
pop
rcr
dec
in
testb
lods
mov
xchg
mov
sub
fcomip
mov
out
mov
pop
das
leave
cmp
and
jnp
shll
pop
or
jge
cmp
in
xchg
andb
fdiv
cmpsl
jb
push
insl
mov
cli
inc
cmp
ret
or
daa
adc
ficompl
aas
and
push
cwtl
les
jl
popf
push
addr16
mov
stc
push
inc
jns
mov
insl
or
mov
lahf
rcll
cmpsl
insb
icebp
out
jnp
lahf
ja
pusha
pusha
xor
and
cmc
loopne
push
cmp
aad
daa
xor
or
xor
jle
sub
data16
mov
popf
jae
call
mov
and
ds
testl
xchg
mov
fidivs
xor
ret
test
push
jne
es
inc
sub
or
lods
add
mov
dec
stc
repz
in
mov
ret
pop
or
mov
cltd
ja
out
std
ljmp
inc
jo
hlt
inc
fdivrs
and
dec
inc
mulb
out
jmp
nop
mov
adc
cmc
pop
gs
mov
pusha
adc
mov
xor
ds
mov
pushf
xchg
scas
scas
xchg
xchg
fcomi
je
add
je
xchg
sbb
into
and
inc
leave
test
push
and
mul
andl
jecxz
push
mov
jb
pop
movsl
sub
xor
jae
pop
stc
mov
inc
loopne
cltd
pop
cmovnp
ljmp
pop
es
ds
xchg
sbb
imul
push
ja
les
sub
mov
ljmp
inc
je
cmp
leave
es
lahf
in
pop
xorb
call
jo
out
std
mov
ss
aam
xchg
fidivrs
mov
inc
clc
jnp
push
xchg
das
outsb
ret
adc
dec
push
mov
ljmp
xorl
cmp
and
daa
into
fildl
add
or
arpl
insl
popf
adc
pop
adc
or
inc
sub
and
repz
xor
ljmp
and
push
scas
pminsw
push
push
sbb
mov
mov
jne
ds
jno
in
mov
xorb
dec
subb
inc
jae
lea
in
mov
and
aad
and
cmp
mov
loop
insl
jno
adc
dec
das
daa
jmp
inc
fstps
jnp
sbb
xlat
iret
push
js
push
xor
dec
lock
mov
jl
lret
inc
sti
and
pop
fnsave
sbb
adcb
cltd
loop
in
add
cltd
push
xor
ljmp
rol
pop
sub
ficoml
xchg
or
sbb
movsb
cmp
daa
pop
add
mov
enter
pop
das
cmpsb
adc
movsl
sub
addr16
sub
imul
sti
jecxz
mov
pop
in
mov
xor
lahf
mov
arpl
mov
dec
pusha
jg
scas
ds
push
push
jge
fistl
inc
mov
inc
cwtl
out
adc
sbb
push
cmc
aaa
mov
clc
adc
into
dec
fwait
mov
and
jecxz
pop
popf
adc
in
lods
mov
das
fstps
sbb
jnp
mov
clc
das
testl
mov
xchg
add
lods
lret
bound
lock
jae
ds
fnstcw
xor
sbb
jg
add
sbb
in
andl
pop
movsl
sub
mov
xchg
test
leave
jno
mov
cmp
cmp
fmull
aad
dec
and
xchg
or
nop
leave
lret
mov
add
or
xchg
mov
dec
sahf
sub
jno
les
jne
sbb
je
and
xchg
nop
cmp
testb
popa
addb
cld
enter
or
repz
loop
add
into
sub
aam
sub
mov
pop
aaa
and
in
xchg
lahf
jns
negb
cmp
jg
xor
jg
xor
dec
xchg
and
jge
mov
scas
daa
mov
pop
imul
popf
in
jno
imul
addl
pop
pop
cmp
rolb
cmp
lods
and
mov
lret
mov
mov
mov
inc
lahf
loop
daa
mov
mov
inc
xchg
fsubs
es
js
int3
and
jb
xor
cmovae
daa
mov
loop
xchg
xchg
int
dec
int3
cmp
imul
fwait
cmpsb
xchg
std
xchg
adc
bound
aas
nop
pop
pop
push
add
mulb
into
jno
mov
jae
aas
ja
sysret
mov
fstpl
not
sub
sbb
jl
sysret
xchg
add
pop
dec
into
mov
int
add
int
daa
ss
in
ds
pop
jae
sbb
gs
ret
cmpsb
cmpsb
test
sbb
imul
mov
iret
xchg
in
insb
sub
lcall
loope
in
subb
pop
push
xor
fstpl
aad
push
xchg
pop
add
inc
mov
inc
rcl
rorb
dec
insb
fmull
insb
sti
push
hlt
jno
and
push
add
or
xor
hlt
push
call
rorb
mov
icebp
fcoms
mov
sbbb
jns
stos
cmp
jb
je
inc
icebp
push
mov
push
jge
fs
inc
aam
jmp
mov
adc
jmp
mov
and
sbb
xchg
adc
insb
or
stc
inc
cs
mov
push
addr16
sti
ja
in
imul
pop
ss
loop
cmp
dec
stos
dec
test
push
shrl
mov
sbb
sub
aad
xor
sarl
enter
adc
mov
loopne
jp
push
into
jge
jns
push
inc
sbb
fwait
add
jae
push
into
dec
stos
stos
ljmp
xchg
aaa
scas
mov
mov
adc
gs
das
xchg
sub
xchg
stc
adc
or
into
movsb
and
sub
mov
and
push
in
sarb
inc
leave
sbb
add
push
sbb
dec
push
in
in
out
jge
stc
jl
sbb
mov
jae
inc
addr16
mov
sub
inc
inc
cmpb
inc
dec
push
outsl
lahf
sti
sub
xchg
shrb
in
mov
sub
mov
push
movsb
dec
sahf
cmp
cmp
push
imul
sbb
test
xchg
cltd
xchg
pushf
icebp
pop
faddl
jo
lcall
mov
xchg
rolb
sbb
xchg
push
stos
push
frstor
mov
push
dec
fs
mov
pop
subb
iret
in
sarb
lods
lret
or
imul
cmp
jno
xor
sahf
mov
aad
outsl
rcrb
adc
ds
fstl
out
pusha
add
stos
fiadds
xor
das
cs
cli
sbb
jecxz
push
sbb
sub
outsb
pop
xchg
lea
loop
loop
iret
and
bound
inc
cltd
jns
push
test
imul
adc
cmp
dec
mov
xchg
jmp
mov
ffree
cld
jecxz
sbb
sbb
cmp
mov
adc
mov
and
sub
or
push
nop
notl
mov
loopne
dec
fnstsw
ret
arpl
stos
cli
les
mov
mov
sbb
out
xchg
test
sub
js
or
ret
push
and
jnp
test
push
pushf
out
sahf
push
push
adc
mov
add
mov
jle
inc
and
fdivrl
jno
add
sahf
loop
arpl
xlat
les
cmpsl
dec
clc
lret
and
mov
sete
mov
cmp
push
or
xor
nop
jno
lret
or
inc
lret
mov
stos
push
or
jecxz
mov
inc
lods
jae
pop
ret
dec
lods
aam
fsubrl
xchg
sarl
je
xorb
inc
jnp
pop
sbb
data16
mov
lahf
fwait
mov
xchg
pop
cmp
or
insl
mov
xchg
into
ljmp
movsl
jge
arpl
pop
lods
repz
inc
out
push
dec
daa
shll
gs
push
push
cmp
and
xor
in
inc
orl
arpl
jno
mov
mov
roll
nop
inc
lret
jecxz
scas
add
pop
sbb
rcrb
pop
adc
imul
inc
vcvtpd2ps
mov
movsb
imul
or
cmp
repz
xchg
in
mov
mov
cld
lods
or
addr16
xor
in
or
adc
stos
sub
leave
test
push
pop
push
test
mov
sbb
hlt
mov
imul
out
xlat
dec
mov
xchg
inc
sahf
inc
lods
push
jg
in
cmpsb
out
push
add
add
mov
mov
imul
push
cli
jno
and
sti
xchg
cld
jge
adc
or
xchg
jns
fcmovne
push
jp
jg
movsb
rolw
push
mov
sub
aad
movsb
cmpb
mov
mov
xchg
jecxz
std
or
jecxz
lods
das
enter
shlb
cli
sub
rcll
rol
jb
xchg
xor
mov
add
sub
push
push
aad
inc
mov
xchg
out
addr16
xchg
inc
xor
cmp
cmp
add
or
mov
push
push
into
lahf
sbb
cmpsb
jmp
jle
cmp
mov
mov
aaa
jg
fxch
lret
cmpsb
pop
mov
roll
sbb
xchg
pusha
in
out
cmp
daa
into
aaa
loope
ljmp
ja
ss
out
jns
and
pushf
loop
mov
icebp
xchg
cmpsl
inc
pop
jo
mov
sub
push
stos
push
movsl
push
adc
testl
ret
shrl
scas
in
add
aas
mov
xchg
fists
sub
aam
mov
lcall
test
pop
stc
inc
int3
out
clc
out
mov
push
cmpsl
stc
je
mov
out
bound
sub
inc
xor
pop
cmp
xor
mov
cmpsl
cmp
scas
clc
rdtsc
inc
xchg
dec
or
push
mov
jmp
insb
fisttpll
sahf
jge
shrl
xor
or
mov
mov
mov
inc
sbb
and
push
rol
pop
addr16
bound
dec
gs
clc
and
adc
jne
js
xchg
jae
sub
cli
orl
inc
lahf
pop
mov
push
loop
aad
push
outsb
mov
xor
clts
sbb
push
xor
mov
or
cld
daa
jo
push
cmp
pop
or
pop
fists
insb
adc
mov
or
mov
movsb
inc
imull
popa
pop
movsb
std
cwtl
push
and
or
cmp
loop
call
fdecstp
shlb
sti
inc
cmpsb
cld
icebp
das
outsb
ret
or
pop
pushf
rcrl
jp
mov
sbb
push
jno
inc
push
imul
hlt
mov
icebp
pop
in
movsb
popa
jecxz
sbb
jge
pop
push
in
in
cmp
push
pop
ss
xlat
push
cmp
push
orb
cmpsl
push
cli
inc
orb
sbb
cli
repz
inc
es
push
test
stos
bound
popa
dec
cld
mov
cmpb
push
daa
loope
xchg
sbb
push
mov
push
popl
cmc
js
or
mov
inc
jne
imul
jmp
push
xchg
jg
test
mov
inc
cmpsb
dec
cmp
aam
cmpl
daa
test
push
insl
pop
push
es
xchg
pop
cli
lcall
lds
inc
lahf
fidivrs
mov
aas
xlat
jmp
or
lcall
aam
sti
loop
cli
mov
sarl
mov
jb
dec
jae
popa
ja
xor
outsb
xorl
lds
adc
test
cld
lods
push
mov
cli
mov
mov
mov
push
xchg
adc
out
insb
daa
rol
cmp
repz
mov
inc
fwait
cwtl
and
out
ret
xor
pop
jle
pushf
and
loope
mov
mov
and
xor
mov
lock
call
mov
cmp
shl
push
in
or
jbe
mov
or
in
notb
ss
aam
lea
insb
add
jne
dec
std
xchg
into
sub
jbe
ret
rolb
cld
or
xchg
xchg
scas
cmp
pusha
sub
cmp
mov
jno
xchg
aad
pop
mov
movsl
mov
fmuls
clc
das
sarb
mov
pop
iret
mov
ret
popa
mov
cmp
stos
pop
leave
test
xchg
mov
aas
cmp
cld
int
lds
sub
xor
loopne
xor
repnz
fimull
arpl
xchg
scas
lea
addb
insl
daa
jmp
mov
sub
shlb
xchg
cmpsb
lret
movsb
in
mov
mov
lea
dec
push
cmpsl
push
jge
std
jle
mov
lods
iret
int
fcoms
add
sub
jmp
cld
cmp
sub
sahf
and
xchg
movsl
adc
push
xlat
aas
clc
mov
mov
push
lods
ret
add
fwait
lcall
call
testb
test
sbb
and
dec
cmp
push
adc
and
call
cld
mov
mov
jae
adc
mov
jnp
xor
inc
xor
adc
cmp
and
test
stc
lcall
mov
and
cmp
stos
mov
and
push
mov
xor
adc
movsl
cmpsl
je
dec
sub
lds
lods
push
sbb
lahf
pop
pop
mov
clc
nop
arpl
test
sbb
ss
mov
and
and
cmpb
lea
in
or
pop
sbb
or
sbb
add
add
in
icebp
lahf
inc
cld
aam
mov
add
addr16
gs
das
repz
jmp
push
jno
mov
jb
fidivrs
jle
push
dec
mov
and
cmp
jno
dec
bound
test
clc
add
mov
mov
mov
jb
cmp
mov
out
jl
cmp
in
lock
xchg
repnz
add
and
insb
out
dec
test
stos
stc
and
push
int
sar
leave
stc
into
pop
cmc
jbe
js
ror
inc
adc
ficoms
mov
jl
int
icebp
pop
popa
adc
mov
movsb
mov
pop
or
mov
lea
pop
dec
pusha
jg
mov
iret
jp
adc
je
mov
fisubl
pop
sub
xlat
popf
xchg
adc
jmp
loope
imul
cltd
dec
imul
out
sahf
insl
xor
sub
gs
fucomp
push
stc
movsb
pop
push
mov
sbb
cmp
pushf
mov
pop
mov
xor
loope
dec
loope
fldl
sbb
mov
iret
mov
sbb
add
cmp
and
dec
aaa
clc
lcall
mov
aam
std
lcall
movsb
pop
xor
jge
mov
lret
mov
sbbb
jnp
icebp
jnp
xor
jmp
pop
push
je
jp
mov
or
adc
mov
je
aad
clc
lcall
pop
mov
jne
cli
mov
mov
ljmp
adc
das
out
hlt
out
push
inc
mov
out
lcall
jne
sub
mov
ds
sbb
add
pop
in
cmp
aas
adc
dec
inc
jb
inc
lods
mov
out
pop
xchg
pop
fiaddl
push
jo
jns
dec
pop
push
push
popf
mov
ficomps
ret
ret
jmp
pop
in
nop
inc
xchg
arpl
jmp
popa
scas
add
int
imul
pop
addr16
scas
cwtl
push
mov
jne
pusha
and
add
lret
aas
push
cmp
add
into
lahf
add
repnz
iret
pop
addr16
add
xchg
jbe
mov
adc
popa
push
cmc
out
push
pop
stos
rolb
lods
mov
into
mov
jp
andb
mov
dec
mov
sbb
mov
dec
add
ljmp
sbb
mov
loopne
jp
ficomps
inc
sbb
call
adc
cmp
sbb
shlb
repz
movsl
inc
mov
ljmp
mov
and
xchg
call
jo
and
shll
push
pop
addb
jns
out
jbe
aaa
xor
and
roll
mov
cmc
shl
cmp
pop
mov
push
in
std
shl
xchg
test
dec
int3
add
cs
push
test
into
loope,pt
xchg
and
test
ror
or
lock
in
cwtl
cmpsl
movsb
adc
xchg
insl
mov
adc
mov
fbld
add
cmpsl
jbe
pop
inc
test
jo
mov
lods
inc
xchg
inc
mov
xlat
bound
jle
fnstsw
add
pop
insl
inc
mov
inc
inc
jg
jmp
cmc
jo
inc
test
cmc
mov
popw
pop
icebp
lret
mov
mov
insb
dec
mov
mov
rolb
xchg
and
mov
movsl
imull
jo
out
cmpsb
dec
enter
in
imul
xchg
ja
inc
fadds
loope
loop
and
lcall
test
xchg
popa
jg
jecxz
filds
lods
hlt
sub
pop
addr16
dec
js
fyl2x
insb
mov
gs
cwtl
sahf
lock
mov
pop
cmp
pop
out
ret
fisubl
dec
sbb
cmp
insl
stc
dec
mov
jmp
ret
into
and
lds
xor
fisubrl
mov
in
push
mov
add
xor
mov
lret
aam
mov
or
mov
add
xor
jge
stos
stc
ja,pn
mov
or
ja
dec
stos
ss
stos
cmp
lret
out
dec
int3
and
mov
jp
ds
mov
jle
jmp
popa
out
mov
jg
stos
cmp
pop
ss
push
xchg
jnp
mov
int3
push
mov
hlt
add
inc
push
pop
call
sar
cmpsb
sbb
xchg
and
sub
in
jecxz
sub
push
jae
mov
xchg
loop
addb
rclb
dec
sub
imul
pop
gs
scas
insl
sahf
add
daa
mov
pop
loope
outsw
outsb
mov
fsubl
push
subl
and
mov
xchg
scas
in
shlb
mov
dec
jp
adc
inc
push
idivl
dec
jle
pusha
jl
push
cmp
jnp
mov
inc
push
add
std
in
movsl
xchg
xlat
je
sarb
out
rorb
push
les
lock
mov
xor
jne
push
or
jg
arpl
loope
xchg
enter
xor
dec
xchg
nop
int3
hlt
arpl
mov
mov
js
shrl
sbb
xchg
loope
mov
jmp
es
outsb
inc
mov
jbe
jg
jle
addr16
jns
aas
aas
add
movsb
xchg
dec
mov
lock
and
shl
leave
es
mov
pop
push
mov
inc
inc
hlt
shrl
orl
xor
sbb
hlt
push
adc
sub
add
xchg
lahf
jge
jb
xorb
int
lods
std
add
or
lcall
repnz
notl
inc
fimuls
and
testl
add
je
cmpb
xor
std
stc
cmp
mov
sub
adc
xchg
add
inc
jae
sub
lret
lods
dec
inc
jg
mov
scas
xchg
fildll
and
push
jg
int3
mov
add
ror
adc
mov
jb
mov
shrb
inc
push
mov
test
loop
or
pop
stos
mov
movsl
lods
xchg
jge
cltd
mov
xchg
mov
imull
jge
jo
ljmp
push
popa
call
mov
dec
sahf
xchg
inc
sub
cli
push
lcall
movsl
out
push
or
insl
jnp
mov
lock
sub
lods
popa
xchg
dec
cmp
mov
mov
xor
or
bound
arpl
and
leave
and
sub
xor
mov
notb
ljmp
ret
ss
add
pop
outsb
in
daa
fisubrl
sub
push
pop
stos
rcr
and
into
push
cmc
xchg
mov
repz
adc
mov
fldenv
xchg
mov
adc
lret
cmp
xchg
int
roll
xor
jmp
or
ficoms
jg
jo
xorl
sbb
adc
lods
lea
pop
ja
jmp
xchg
je
sub
add
jns
jae
cli
inc
push
mov
cmc
cmp
or
ss
lock
mov
jp
inc
filds
or
fistl
shl
mov
fisubs
sbb
cwtl
xor
das
push
fs
lea
dec
lcall
test
jge
jae
sti
xor
push
push
stos
arpl
cwtl
mov
mov
or
test
inc
xchg
and
out
shlb
jnp
jo
iret
or
les
dec
and
xor
ds
cwtl
lea
adc
lcall
jns
jae
jns
adc
sbb
loope
dec
mov
imul
and
pusha
hlt
rcr
xchg
cmpsb
sti
cli
es
mov
shll
push
adc
nop
or
sbb
popa
dec
mov
add
in
out
sbb
loopne
or
adc
push
std
sub
fldenv
rcrb
mov
rclb
out
ror
xor
rcr
bound
sub
or
out
xor
test
filds
mov
and
dec
inc
stos
sbb
push
lcall
add
sub
pushf
jo
mov
cwtl
pop
jnp
xlat
bound
mov
pop
sbb
loopne
and
int
bound
inc
cwtl
pop
repz
sub
sbb
mov
mov
add
das
lret
add
lret
jne
sub
cmc
lds
push
mov
jle
dec
nop
je
int
add
inc
std
xchg
sub
bound
push
mov
testb
rcr
mov
jo
incb
add
jno
lret
stos
rcr
fcmovne
adc
cmp
adc
rcr
bound
inc
enter
and
repz
stos
dec
hlt
imul
insl
pop
stos
rcr
jnp
andl
stos
rcr
push
enter
repz
stos
sbb
jl
aaa
jb
cmc
xchg
inc
xchg
filds
cmp
stos
and
push
rcr
bound
sarb
dec
popa
aaa
subl
bound
test
lret
fbld
lea
mov
mov
insb
xchg
leave
inc
gs
bound
jg
jmp
dec
xchg
aad
add
out
xchg
lcall
pop
lret
sub
add
mov
cmpsl
sub
lods
or
push
movsb
cld
xor
pushf
dec
fnsave
jo
je
cmpsb
fwait
mov
repz
cmp
cs
and
in
jae
inc
jns
jo
mov
push
mov
stos
rcr
mov
in
movsl
jb
ret
fwait
sub
mov
jg
icebp
outsl
xchg
dec
sbb
lret
adc
nop
add
rcr
ljmp
loopne
cmp
mov
test
push
movsl
dec
repz
bound
movsb
aam
out
in
mov
rclb
pop
push
rcr
bound
jno
xchg
xor
loopne
fs
jle
aam
orl
jp,pt
and
dec
dec
push
and
insl
push
sub
mov
enter
pop
stos
rcr
jnp
leave
pop
pop
stos
rcr
orb
bound
repnz
ror
mov
ret
xor
sub
bound
cmp
ror
es
call
xor
lret
daa
jp
in
bound
jne
test
cmp
mov
jnp
lock
pop
adcl
xchg
push
shll
pop
stos
rcr
add
mov
f2xm1
repz
and
stos
rolb
sahf
xor
nop
andl
xchg
sbb
dec
push
int
and
cmp
loope
addr16
jne
jp
lcall
imul
inc
scas
ljmp
scas
pop
dec
sti
in
in
fsubrl
cmp
fbld
mov
sub
frstpm(287
mov
adc
push
xchg
in
jbe
ds
xchg
push
iret
fbld
push
xchg
sub
push
xchg
add
addl
xchg
outsl
test
cmp
sub
bound
movsl
movsl
out
dec
jg
mov
rolb
adc
sbb
mov
rcrb
pushf
popf
xor
stos
shr
fsts
push
pop
stos
rcr
jmp
push
lods
gs
stos
cmpsl
sahf
fwait
cmp
xchg
jp
es
sahf
in
loope
sub
bound
xor
jg
and
jg
add
test
leave
pushf
inc
je
xchg
loop
mov
fbld
sbb
cld
rcl
call
sub
rolb
stos
shr
or
lret
fbld
lcall
push
xor
inc
mov
shlb
bound
pop
movsl
dec
add
pop
sub
rcrl
sbb
lods
xor
and
adc
add
dec
jbe
cmp
xchg
mov
rorl
add
sarb
lock
fbld
jg
imul
movsl
cmp
and
out
push
daa
mov
stos
rcr
std
pop
lcall
rorl
in
sub
jo
je
leave
cmp
dec
leave
jb
stos
rcr
and
out
call
cmp
aas
and
rcr
bound
and
pop
cmc
in
bound
in
les
xlat
hlt
hlt
mov
pop
xor
and
sarb
loope
xchg
mov
jnp
or
fbld
cli
test
into
push
rcrb
int
insl
mov
les
sbb
das
push
les
in
loope
scas
pop
xor
sbb
icebp
sub
bound
hlt
xor
repz
fbld
sbb
in
mov
mov
shr
pop
test
fbld
fwait
in
fchs
sub
bound
loopne
daa
andb
in
sbbl
repz
stos
je
cmp
sbb
push
jle
pusha
mov
stos
rcr
std
pop
scas
cmpsl
mov
or
push
cld
dec
xchg
and
push
mov
sarb
jp
cmp
les
in
jns
jp
js
cli
push
adc
sub
div
int3
fbld
push
lds
mov
in
and
stos
movl
test
fbld
adc
data16
repz
bound
in
adc
add
push
popa
xor
lods
mov
mov
in
mov
fisttps
sbb
push
jbe
mov
cld
mov
in
add
mov
dec
sub
in
push
test
fbld
and
arpl
add
jecxz
cmp
insb
subl
in
fwait
cmp
jmp
and
rorb
cmpsl
loop
sub
jo
repnz
bound
mov
dec
pushf
cltd
mov
xchg
bound
mov
stos
rcr
adc
adc
sahf
clc
xchg
cmp
adc
popf
rorl
sub
jp
scas
jo
pusha
push
into
jle
mov
loop
and
fbld
dec
mov
bound
leave
push
xchg
mov
shll
push
lret
mov
mov
push
mov
shlb
int3
push
fidivrs
inc
js
pop
mov
in
adc
sub
bound
sbb
jge
push
shr
cwtl
add
push
inc
fwait
xlat
js
out
stos
ror
jg
add
lods
cmp
inc
icebp
jae
fwait
shlb
dec
sub
bound
mov
lret
cmp
aad
in
je
leave
jnp
push
xchg
inc
repz
rcr
bound
fcompl
push
ss
bound
mov
dec
xchg
in
cmp
loop
rcr
jecxz
bound
dec
fldt
or
dec
mov
sbb
in
sub
cmp
adc
sub
sub
rcrl
jmp
mov
mov
stos
rcr
loopne
ret
inc
insl
nop
and
test
push
pop
cmp
dec
stos
loopne
jl
dec
js
jnp
xchg
xchg
sub
and
rolb
cmpsl
rcr
adc
in
fwait
popf
and
xor
int3
fdivrs
push
lcall
rorb
dec
or
into
mov
loopne
push
mov
insb
in
rcr
bound
adc
and
es
ds
bound
dec
movsb
test
or
loop
push
cmp
pushf
dec
mov
shlb
addr16
or
push
sarl
imul
ffreep
dec
leave
insl
mov
rcr
bound
rcr
bound
sub
stos
filds
out
inc
push
es
mov
mov
pop
test
sbb
test
rcr
int
iret
fisubs
fbld
sub
bound
es
adc
outsl
xchg
push
pop
mov
nop
push
bound
rorb
dec
pop
mov
sbb
decb
pop
dec
jl
mov
mov
sub
bound
cmp
jle
addl
mov
or
das
ja
push
popf
repnz
cmpsl
in
in
jmp
bound
or
cld
je
cmp
lea
cmpsl
sub
icebp
cld
arpl
mov
add
mov
xchg
xchg
fildll
in
and
push
push
cmp
ficomps
jmp
pop
push
and
loopne
cwtl
in
fsts
push
mov
and
dec
mov
dec
mov
sub
bound
mov
mov
stos
rcr
popa
repz
jp
push
nop
sbb
add
jo
je
or
and
rcr
pop
push
jb
js
or
sub
bound
or
rorb
cmp
sub
rcr
bound
bound
shrl
mov
mov
cwtl
dec
xlat
nop
push
jle
cmc
leave
imul
ss
dec
dec
mov
outsb
sub
insl
in
mov
jbe
addr16
fbld
clc
insl
and
dec
lods
loope
add
aaa
scas
pop
xor
roll
mov
aam
gs
stos
rcr
jp
jge
ja
xorl
inc
je
lods
cmp
ds
fldl
mov
inc
jnp
xlat
bound
js
mov
je
push
repnz
or
mov
or
out
mov
jl
lcall
xor
test
cwtl
xchg
stos
mov
cmp
sarb
and
rcr
bound
push
sub
xlat
cmp
mov
xorb
stc
paddsw
cmpl
push
or
sub
js
mov
outsl
int3
loope
mov
out
stos
rcl
gs
cmpl
xchg
cmc
loop
fcompl
sbb
mov
lfs
bound
scas
or
sub
inc
xor
mov
xor
and
rcr
bound
adcb
and
or
add
aam
loop
add
push
test
and
popf
xchg
dec
jnp
cmc
cmp
pop
and
mov
loope
mov
xor
rcl
push
stos
sbb
je
loope
aad
fbld
pop
lret
int
add
test
jg
fistl
and
mov
jo
stos
rcr
pop
sub
cmpsl
add
fbld
mov
jp
js
pop
dec
mov
lock
xlat
inc
icebp
adc
lods
mov
dec
cwtl
xor
inc
push
ds
ja
fcmovne
push
in
mov
mov
in
loope
sub
bound
push
cmpsl
push
mov
pop
inc
pop
ja
mov
in
adc
mov
fbld
daa
mov
ret
adc
loop
mov
pop
cmp
push
inc
xor
sub
mov
xor
sub
std
fldcw
sub
jnp
mov
dec
std
mov
xor
shl
arpl
add
push
mov
fs
bound
pop
xchg
repz
mov
imul
jne
int
xor
aaa
jge
rclb
sub
bound
pop
ret
cmp
clc
or
aam
ja
inc
lret
inc
mov
repz
fbld
push
roll
or
test
pop
mov
or
pop
stos
rcr
test
and
add
dec
xchg
test
mov
cmpsl
sub
adc
test
sarl
sub
jecxz
je
mov
repz
bound
test
sbb
loopne
repnz
add
repz
fbld
sti
push
and
dec
in
mov
add
and
xchg
test
cmp
mov
fsubs
sarb
mov
aas
rcr
bound
ss
loope
mov
xorl
jp
dec
fsubl
sarb
jp
dec
jecxz
sub
fbld
pushf
cmp
pop
sub
lret
ja
mov
mov
divl
lcall
ret
push
ret
or
jnp
sbb
sbb
xchg
mov
ret
lret
dec
jl
out
xchg
mov
stos
stos
pop
gs
cmp
or
lret
push
xchg
push
pushf
cmp
rcr
bound
iret
fbld
push
pop
stos
rcr
mov
push
pushf
xor
pop
pop
stos
rcr
out
in
xchg
subl
bound
in
jne
xlat
pop
outsb
aaa
mov
subl
push
xchg
jg
add
sbb
les
sbb
pushf
add
cmp
int3
and
nop
sub
fadds
int
bound
sub
bound
xchg
jbe
dec
loopne
aam
mov
dec
repnz
bound
sbb
mov
stos
rcr
mov
or
test
dec
lods
test
hlt
push
cmpsl
sub
jge
mov
shlb
push
xchg
imul
adc
fimuls
ret
in
sti
jbe
loopne
pop
shlb
fbld
cmp
sbb
push
fdivs
fbstp
pop
rorb
ja
fldt
cld
lahf
push
or
fwait
int3
imul
fldenv
rcrb
fwait
cmpb
mov
shr
fldt
sub
bound
mulps
ret
push
nop
push
rcr
bound
rclb
sbb
jp
adc
xor
and
mov
enter
fbld
mov
dec
sub
push
shll
repz
cli
inc
cmp
call
cltd
ds
rcr
bound
xchg
pop
sbb
push
fildll
dec
jmp
stos
shlb
mov
lds
call
sub
jbe
cmpb
aas
jp
mov
add
rcr
bound
shlb
in
iret
sub
cwtl
cmp
roll
movsl
rclb
repz
fbld
lods
xor
xchg
mov
dec
sbb
mov
stos
rcr
lea
add
sbb
ljmp
fbld
inc
adc
mov
mov
pop
sub
ret
and
mov
out
adc
cli
push
inc
clc
leave
das
sub
bound
dec
cmpsb
and
scas
jo
xchg
imulb
int
popf
inc
das
cmp
cld
mov
mov
imul
repnz
popf
push
ficoml
sub
add
push
int
loopne
add
xchg
xchg
mov
mov
sahf
lea
push
ds
cmp
inc
popf
push
lret
push
mov
cmp
add
int
je
enter
fdivrp
rcrl
addr16
inc
movsb
mov
push
sub
imulb
int
popf
hlt
cmp
and
stos
jno
pushf
stos
mov
hlt
add
jne
inc
popf
push
popf
jne
add
cmp
stc
lcall
xchg
mov
popf
push
aas
popa
jge
push
kxorw
mov
hlt
sbb
inc
popf
js
add
and
sbb
mov
sbb
inc
xchg
lods
repnz
popf
push
adc
cli
or
enter
cld
ljmp
loop
addr16
mov
push
mov
and
push
int
popf
jnp
dec
dec
aaa
xorb
imul
ja
inc
popf
push
in
testl
add
int3
inc
push
jmp
sahf
lods
daa
cmc
cs
popf
mov
movsl
dec
pop
mov
inc
cli
push
xchg
jb
xchg
std
mov
pushf
inc
loope
sbb
inc
jg
outsl
pop
jmp
bnd
mov
jbe
inc
popf
push
arpl
addr16
inc
popf
push
daa
jl
cli
movsl
dec
pop
sub
test
iret
popf
fisttpll
push
jne
xchg
out
inc
popf
push
in
push
inc
and
fisubrs
xchg
push
popf
push
int
and
subb
cmp
adc
push
int
push
push
jp
adc
std
jno
mov
xchg
arpl
sub
pop
cs
jmp
cld
sti
ljmp
int
pop
pop
int
popf
mov
repz
xchg
hlt
inc
and
lcall
stc
cs
push
popf
push
int
sub
pop
stos
push
out
cwtl
movsb
stc
push
pop
sbb
inc
popf
lahf
sbbl
lds
push
cld
mov
cmc
push
int
popf
out
gs
inc
js
aad
sbb
std
xchg
aam
mov
mov
test
out
movsl
inc
icebp
in
ret
std
in
jns
nop
cli
jnp
sti
les
sub
inc
popf
inc
roll
std
mov
jmp
data16
xchg
and
cmp
pop
inc
aaa
push
jl
add
adc
fistpl
add
sti
dec
jmp
aam
sbb
lea
int
xchg
popa
insb
jge
call
xchg
hlt
adc
mov
inc
popf
push
int
aam
jecxz
pop
into
dec
cld
into
mov
mov
std
popa
in
fwait
push
addr16
inc
add
adc
or
js
sbb
mov
outsl
cli
insl
out
adc
sub
push
int
push
push
int
popf
push
cld
mov
xchg
pop
mov
push
int
stos
insl
test
jbe
jmp
adc
fwait
jle
js
sub
test
popf
push
inc
xchg
iret
orb
push
rep
movl
sti
ljmp
inc
push
test
ljmp
int
cmc
jnp
sub
enter
dec
add
adc
int
popf
lahf
sahf
addr16
mov
ljmp
push
inc
insb
mov
push
int
leave
push
cmpsl
jl
leave
push
sbb
shl
insb
popf
enter
jb
popf
push
int
push
pop
dec
add
or
add
dec
mov
jns
data16
cld
lea
popf
push
int
pop
lock
addr16
push
int
xchg
xchg
movl
pop
adc
test
add
sbb
std
adc
mov
jl
pop
adc
adc
jo
popf
push
int
fistpl
push
sbb
push
int
sbb
sahf
popf
and
stc
test
hlt
pushf
xchg
sub
mov
sbb
push
int
clc
sub
int
test
jns
pop
out
mov
loope
inc
and
cmc
sbb
inc
popf
inc
jmp
push
dec
push
push
push
dec
outsl
outsl
xor
inc
xor
movsb
mov
xchg
bound
cmp
or
enter
adc
popf
push
jae
loope
adc
sahf
push
int
dec
shr
jmp
fsqrt
inc
push
push
in
adc
popf
push
rorb
imul
push
pop
inc
ljmp
push
int
cmp
cmp
add
ss
dec
scas
add
mov
and
xchg
push
int
mov
push
mov
xor
aaa
lea
pop
mov
das
int
popf
dec
fldcw
movsl
das
xchg
mov
inc
popf
push
cld
lds
call
aad
pop
sbb
push
int
in
outsb
push
pop
cli
ja
insb
ficomps
daa
xchg
dec
jge
mov
push
adc
int
popf
sub
int
push
mov
add
ljmp
mov
imul
test
sub
repz
inc
popf
jbe
xchg
ffreep
cmp
pusha
aas
cmpsb
subb
or
mov
xor
inc
popf
push
cmp
pushf
cmp
lahf
test
inc
fnstsw
adc
int
popf
jbe
inc
popf
push
mov
rorb
lea
push
cwtl
ljmp
int
lahf
insl
jmp
ljmp
int
popf
sub
int
inc
mov
negb
fisubrs
push
add
inc
std
out
fildll
sbb
sbb
inc
popf
hlt
outsl
sub
xlat
xchg
mov
inc
popf
push
mov
push
int
push
dec
sub
data16
sbb
jl
cmp
push
filds
adc
int3
cld
add
repz
inc
popf
cmp
movsb
insb
rolb
xor
popf
push
cmp
in
stos
push
movsl
xchg
mov
inc
popf
push
jo
jl
adc
out
bound
inc
pop
movsb
jnp
lea
iret
rep
or
call
dec
dec
adc
icebp
les
push
gs
mov
ja
inc
popf
push
mov
out
aaa
das
rcl
mov
dec
inc
popf
push
int
jle
xchg
push
pop
cmpsb
xchg
pop
adcl
push
adc
pushf
mov
sbb
push
int
push
lods
push
push
popa
or
std
ljmp
int
popf
fadds
or
scas
xor
mov
sub
popf
push
int
popa
sti
rclb
mov
inc
popf
push
cld
rcrb
movsl
rcrb
jae
fistpll
sbbl
cmp
les
inc
xchg
dec
addl
lret
cmpsb
ja
inc
popf
push
mov
sbb
push
int
xlat
add
in
insl
dec
add
cld
out
jnp
xchg
popf
push
es
ret
sub
popf
and
inc
popf
in
pusha
popa
out
out
pop
adc
add
mov
popf
push
int
sbb
int
popf
jbe
inc
popf
push
xchg
imul
push
mov
sbb
inc
popf
hlt
outsl
adc
mov
dec
add
sti
aas
inc
negb
ljmp
jle
dec
sbb
inc
popf
hlt
inc
adc
fsincos
add
dec
stos
xchg
or
fwait
or
and
lahf
fldl
push
mov
push
int
and
push
ss
jo
nop
mov
sbb
fnstsw
or
jnp
xor
fsubrl
sti
add
std
adc
popf
push
push
pop
mov
mov
lret
mov
jnp
les
loope
jl
push
mov
popf
push
int
mov
adc
roll
jne
inc
popf
push
mov
rcll
sbb
push
int
and
or
xchg
or
add
mov
popf
push
xchg
sub
jnp
test
hlt
inc
cld
out
xor
repnz
in
push
popf
push
int
int3
sbb
pop
lret
pop
sbb
ret
mov
jp
jg
or
outsl
adc
push
adcb
int
popf
sub
int
popf
cltd
rclb
or
pushf
push
sbb
int
popf
sti
mov
sbb
jbe
inc
popf
push
xor
mov
sbb
jge
mov
popf
push
int
push
cmpsl
mov
movsb
push
pop
aaa
fbld
push
int
adc
negl
das
lds
inc
pop
stos
cmp
xor
sbb
inc
popf
lahf
xchg
std
inc
dec
and
sahf
push
int
jge
adc
push
inc
adc
icebp
stos
rcrl
push
int
mov
adc
repnz
or
and
and
gs
int
adc
outsl
cs
je
or
in
mov
popf
mov
xchg
dec
xchg
and
sbb
lods
aad
je
shlb
popf
mov
je
jnp
sbb
arpl
push
fwait
or
jnp
outsl
sub
pop
hlt
cs
popf
movsb
sarb
loopne
cmpsl
inc
nop
divb
mov
sbb
inc
popf
sahf
test
mov
sbb
push
int
xchg
imul
xlat
movsl
pusha
sbb
push
int
aad
xchg
mov
popfw
cld
rcrl
inc
out
jnp
push
inc
push
fisubl
pop
mov
xor
sti
add
jne
inc
popf
push
mov
cld
xor
sub
dec
hlt
xor
inc
popf
gs
and
inc
popa
lret
cs
sub
popf
mov
sbb
iret
sbb
push
int
fidivs
enter
dec
cwtl
movsl
shll
sub
push
hlt
push
adc
shrl
adc
popf
push
shrl
nop
shrl
popf
push
int
or
sti
adc
jne
push
scas
xchg
cwtl
icebp
inc
popf
push
adc
mov
adc
enter
inc
sbb
lea
sti
inc
popf
push
in
test
sbb
push
jbe
call
sub
inc
popf
push
mov
add
and
fidivl
push
int
adc
enter
push
mov
sub
sbb
mov
pop
mov
sti
ljmp
int
sbb
int
popf
inc
cs
jns
xor
popa
hlt
inc
xor
inc
adc
adc
out
in
mov
inc
popf
sub
int
inc
aad
sbb
sahf
lods
mov
cmp
adc
inc
xchg
push
xchg
push
pop
pop
shrl
push
adc
int
popf
outsl
adc
rcr
in
repz
inc
popf
cmc
neg
stc
aaa
icebp
mov
shll
push
dec
xchg
dec
clc
les
xchg
push
int
adc
pop
jbe
jae
xor
push
sbb
int
popf
mov
sub
lods
in
popf
push
mov
push
int
test
sub
push
ljmp
dec
push
loopne
or
xchg
push
int
add
pop
out
mov
fwait
or
inc
popf
lahf
scas
mov
and
jmp
incl
inc
adc
mov
adc
add
hlt
adc
insl
jb
adc
fcmovnb
imul
jecxz
mov
jnp
mov
push
popf
push
int
scas
sub
sti
into
adc
pop
or
orb
lret
push
in
out
outsb
iret
xor
andb
int
xchg
pop
mov
add
jne
inc
popf
push
push
push
cmp
xchg
xchg
pop
test
xor
jge
or
test
jbe
inc
popf
push
mov
push
in
push
xlat
xchg
pop
out
jge
add
rcrl
out
fwait
push
sysret
dec
xchg
mov
inc
popf
push
cld
rcll
sbb
inc
popf
pop
mov
push
ret
sub
jge
mov
movsl
jle
lea
push
int
loope
cltd
into
dec
test
clc
repz
cli
mov
cld
cmpsl
push
int
cmc
xor
inc
popf
xchg
inc
loopne
push
xchg
sti
out
adc
outsl
adc
xor
inc
popf
and
stc
sub
ss
int
inc
outsb
xchg
push
popf
push
int
cmp
xchg
add
xchg
loopne
mov
sub
notb
int
popf
add
fistps
push
int
std
inc
and
popa
jne
add
ds
push
popf
push
int
das
scas
lret
shrl
inc
daa
sbb
push
adc
int
popf
sub
int
popa
call
fimull
movsl
sbb
push
int
out
jns
ljmp
push
push
mov
mov
popf
push
int
sbb
int
popf
mov
fwait
push
jnp
mov
jp
and
popf
adc
rcll
popa
mov
push
int
lock
lea
divb
xorl
dec
cmc
sbb
pop
mov
sub
and
sbb
out
int
push
imul
cmp
push
mov
push
int
test
int
cmpsl
push
cmp
sbb
inc
popf
sub
adc
sub
inc
popf
push
int
jnp
sahf
sbb
or
add
xchg
lahf
enter
cld
ljmp
xchg
mov
pop
adc
arpl
int
xchg
xchg
sti
inc
popf
push
mov
scas
cs
dec
movsl
jnp
add
int
sbb
jnp
pop
imul
les
dec
adc
jecxz
shlb
jmp
or
jbe
mov
cmc
das
int
popf
sarb
std
xchg
pop
add
in
outsb
xor
inc
popf
push
int
outsl
or
cs
popf
adc
mov
mov
mov
mov
ret
sbb
inc
popf
sub
sbb
popf
push
adc
push
xchg
jo
xchg
inc
mov
repz
xchg
shl
push
aaa
dec
test
or
push
pop
add
std
in
movsl
insb
add
stos
cmp
mov
lods
movsb
cmp
pop
int
popf
call
cld
inc
popf
push
xchg
cmp
into
aaa
sbb
cli
outsl
and
jne
popf
push
int
inc
add
int
mov
mov
xor
push
cld
xchg
push
int
inc
std
cmc
mov
popf
push
ds
inc
stos
mov
je
jle
jns
mov
inc
popf
push
sbb
jns
sahf
stos
clc
dec
sahf
ljmp
push
inc
cmp
sbb
call
add
or
mov
popf
ljmp
fs
add
cli
outsl
xor
lcall
popf
push
int
addr16
push
fs
enter
repnz
popf
push
cmp
xchg
negb
int
popf
je
dec
add
popl
sub
dec
popf
push
int
imulb
int
popf
clc
mov
outsl
push
push
ljmp
adc
cmpb
add
sbb
push
int
cmc
jne
xchg
lret
jmp
mov
jp
xchg
inc
inc
popf
push
int
jl
mov
xchg
lods
loop
popf
push
mov
push
int
aam
nop
mov
icebp
add
movsl
pushf
fimuls
fwait
or
adc
mov
mov
push
int
inc
jbe
cmp
out
insl
push
dec
adc
dec
push
xchg
xchg
enter
cld
ljmp
cmp
addr16
and
stos
push
int
hlt
xor
inc
popf
dec
and
idiv
fidivs
mov
mov
or
cmp
std
aam
test
ret
dec
pop
mov
mov
ljmp
cmp
cmc
cs
popf
fwait
xor
push
sbb
jmp
test
pop
mov
rolb
movl
xor
inc
popf
call
xchg
mul
fdivrl
hlt
sub
ja
inc
popf
push
in
shlb
mov
fiaddl
xchg
lods
lds
push
adc
jl
inc
cli
push
pop
xchg
push
popf
push
int
push
pop
ds
stc
in
pop
push
push
sub
lds
pop
jae
sub
sub
int
aam
ss
jle
adc
push
out
sbb
notb
sub
scas
shlb
loop
inc
loope
imul
mov
pop
rclb
pop
dec
loope
mov
inc
popf
add
add
push
push
mov
sub
int
sbb
int
popf
out
sbb
push
int
inc
xlat
adc
shl
and
add
sub
popf
push
int
pop
pop
int
popf
mov
fwait
push
add
mov
mov
inc
popf
push
pop
or
popf
push
cld
lds
sbb
inc
popf
ret
dec
and
or
inc
popf
push
int
or
push
fidivs
xchg
mov
sbb
pop
jp
negb
mov
sub
mov
push
jnp
dec
repz
sub
hlt
inc
popf
push
lahf
or
push
pusha
jae
jl
pop
push
adc
int
popf
sub
int
push
jne
jp
stos
sbb
outsl
jg
ss
lahf
leave
test
je
jne
dec
mov
popf
push
cmp
ret
dec
sahf
adc
cwtl
pusha
out
fidivl
mov
popf
push
iret
mov
inc
std
scas
xchg
adc
sbb
push
int
stos
mov
pop
push
xchg
and
pusha
mov
xchg
imulb
int
popf
cli
mov
and
jmp
mov
fs
inc
adc
test
hlt
xor
inc
popf
loopne
mov
clc
nop
out
push
gs
stc
push
sub
jge
inc
call
push
int
xchg
pop
test
dec
lds
ja
inc
popf
push
notb
jle
lods
in
adc
int
popf
adc
outsl
pusha
stos
jnp
outsb
hlt
adc
mulb
out
jo
xchg
mov
inc
popf
push
xchg
cmp
iret
out
in
addr16
lea
popf
push
int
nop
pop
xor
ljmp
inc
popf
push
int
fisubrs
mov
popf
push
int
fwait
jg
mov
inc
cwtl
xor
in
cmp
rcll
adc
lahf
movl
sub
sbbb
int
mov
pop
jmp
out
outsb
mov
test
inc
add
insb
push
fwait
mov
std
add
or
ljmp
xor
hlt
sub
inc
popf
jno
lds
jg
test
ficoml
pop
xor
xchg
lahf
stc
inc
popf
push
cld
mov
xchg
sahf
lds
push
cld
test
int
hlt
sub
inc
popf
out
or
hlt
arpl
rolb
sahf
pushl
popf
push
fistpll
sub
das
out
mov
sbb
hlt
outsl
add
sub
int
inc
push
pop
fnstsw
mov
je
mul
or
push
sbb
int
popf
hlt
cmp
pop
lahf
jbe
inc
popf
push
cmp
add
int
popf
hlt
mov
rep
inc
push
push
mov
inc
in
cmp
in
sbb
cwtl
push
int
mov
sub
inc
popf
push
int
pop
bound
jnp
popf
fwait
or
int
pop
stos
js
pushf
dec
adc
mov
sub
int
pop
and
inc
popf
ja
inc
popf
push
sub
js
imul
sub
mov
cmp
inc
loop
ds
push
int
or
inc
fstl
adc
dec
and
das
xlat
fwait
or
adc
xchg
inc
mov
popf
push
int
divl
repnz
push
int
outsb
xor
adc
or
sub
mov
sbb
enter
mov
push
pop
movsb
sub
push
test
and
add
cli
addr16
lea
inc
pop
test
mov
push
int
pop
dec
mov
sub
popf
push
int
inc
in
sub
or
out
inc
sub
out
push
popf
push
int
scas
dec
push
outsb
stos
adc
aaa
cmp
daa
test
cwtl
fwait
inc
xchg
dec
xchg
data16
inc
popf
push
mov
sbb
pusha
push
imul
push
or
cmc
bound
clc
movsl
dec
fstpt
inc
movsl
push
ljmp
push
adc
popf
push
xchg
sbb
mov
xchg
pop
lahf
movsl
negb
int
popf
cmp
ficoms
in
bnd
test
popf
push
int
push
push
pop
lds
add
popf
push
int
jns
mov
xchg
jmp
int
decl
jae
outsl
and
in
push
sbb
ja
inc
popf
push
or
fs
pop
jp
clc
fidivrs
inc
push
out
dec
jge
movsl
jns
sub
call
in
mov
shlb
leave
sub
inc
gs
movsb
popf
repz
int
popf
sahf
xchg
and
sarl
fwait
inc
in
and
jge
std
rcrl
inc
mov
jnp
mov
out
in
scas
shll
imul
int
dec
gs
add
dec
jecxz
jns
in
jl
cli
inc
popf
push
mov
add
out
loopne
add
jmp
clc
mov
popf
push
int
push
jle
ljmp
cld
inc
popf
push
cmpsl
or
loop
push
xchg
rorb
aas
push
out
stc
xor
mov
popf
push
int
sbb
int
popf
pusha
mov
popf
int3
inc
xor
sub
aam
sti
add
out
in
push
fs
pop
xlat
dec
pop
sbb
push
int
mov
in
icebp
mov
xor
bound
cmc
sbb
inc
popf
call
jo
gs
inc
popf
push
daa
and
jmp
add
push
int
popf
push
cld
mov
sbb
sbb
inc
popf
sahf
xchg
out
sbb
cld
rcrb
pop
mov
shlb
lock
popf
push
ficomps
cmp
in
fimuls
xchg
adc
std
cli
outsl
std
sbb
rcr
push
popf
push
int
push
cmc
sarb
xor
test
sub
sahf
xchg
mov
insl
ja
inc
popf
push
cmpsb
and
dec
sahf
xchg
jne
inc
xchg
mov
cld
ljmp
test
push
push
add
push
int
mov
loope
in
in
mov
popf
push
int
add
sub
jp
lret
lods
iret
mov
add
int
popf
aaa
mov
push
repnz
jmp
pop
cmp
shll
add
aaa
mov
fwait
inc
dec
push
mov
enter
push
pop
mov
lret
fistpl
fwait
push
push
adc
jp
mov
inc
sbb
fadds
pop
sbb
inc
popf
hlt
outsl
xor
sbb
andl
popf
push
int
or
pop
int
inc
pop
adcl
popw
lds
sub
pop
sbb
jl
or
add
or
repz
and
movsl
dec
call
out
scas
mov
inc
mov
mov
inc
popf
cmp
pop
mov
lahf
mov
movsl
divb
int
popf
lret
xchg
mov
ja
sbb
dec
xchg
mov
fs
adc
xchg
popf
mov
popf
push
int
mov
std
pop
inc
push
fucom
movsl
adc
push
int
xchg
pop
mov
jnp
cli
inc
popf
push
sub
cltd
ret
xor
xor
adc
imulb
int
popf
out
mov
push
mov
cmp
sbb
push
int
lods
dec
xor
sbb
xor
leave
sbb
fisubl
jge
jp
popf
push
int
push
add
xchg
jle
adc
stc
sub
test
or
sub
popf
push
int
dec
rcl
xchg
xchg
test
xchg
sub
push
int
inc
mov
sub
lock
popf
push
int
or
inc
inc
popf
push
int
fnsave
inc
popf
push
push
sub
and
adc
sub
push
int
jnp
sti
ljmp
int
test
popa
inc
je
sub
or
les
mov
int
popf
ja
inc
popf
push
push
xor
push
jne
or
dec
stos
in
cmp
popf
push
int
or
rorl
hlt
inc
push
movsb
aam
shrb
xor
inc
popf
out
mov
mov
imul
cmp
push
int
mov
push
add
push
int
popf
adc
insl
sbb
mov
int
popf
test
aam
movsb
test
mov
add
jns
pushf
fdivr
inc
xor
mov
dec
pop
and
xchg
repz
inc
popf
inc
mov
repnz
push
mov
sti
shrb
xor
inc
popf
pop
aam
aam
or
pop
ret
in
add
lret
lea
popf
push
int
cld
pop
imul
or
daa
mov
xchg
pop
mov
shll
inc
popf
push
call
mov
aaa
mov
jecxz
and
sbb
int
popf
hlt
outsl
push
arpl
outsl
pop
sbb
xor
push
fsub
sbb
push
int
loopne
jae
push
fnstcw
sub
mov
inc
popf
push
cld
rcll
mov
jae
popf
push
int
push
push
enter
mov
inc
popf
push
add
sbb
cmp
sub
popf
push
int
jmp
scas
mov
inc
call
out
push
inc
mov
jno
inc
jae
dec
jbe
inc
popf
push
adc
sbb
jl
imul
mov
sbb
push
int
enter
mov
xchg
mov
ljmp
lret
sbb
loop
push
sar
sar
jge
repz
int
popf
inc
xor
loopne
ret
inc
gs
mov
xchg
cwtl
repnz
popf
push
adc
rcrl
lret
leave
jnp
inc
es
lret
inc
and
leave
test
das
int
popf
into
outsb
adc
rorl
ss
xchg
xchg
xchg
icebp
inc
popf
push
adc
mov
sbb
inc
popf
sahf
sbb
adc
mov
sub
pop
outsb
call
inc
cmp
and
xchg
sbb
inc
popf
sub
dec
sbb
test
lea
push
sbb
int
popf
and
lret
in
daa
lahf
inc
data16
inc
mov
mov
add
lcall
jecxz
vpsubusw
mov
test
jp
test
aas
pop
xchg
pop
movsl
lea
ds
sub
int
or
add
outsl
aaa
cmc
das
int
popf
lret
push
pop
sbb
test
shlb
inc
xchg
adc
mov
xchg
add
shll
in
leave
jo
outsl
add
leave
aaa
lcall
sub
xchg
inc
sub
lcall
outsl
or
lahf
cmp
sub
xchg
add
adcb
push
fadd
push
ja
fadd
sti
xchg
mov
sbb
cltd
ss
lods
testl
adc
xlat
push
pushf
xchg
push
std
stos
jo
push
pushf
imull
push
dec
aad
mov
jl
xchg
jp
xchg
sbb
push
xor
mov
pop
loope
push
pushf
psrad
cmpsb
push
leave
push
mov
jmp
jns
lcall
daa
push
xchg
es
nop/reserved
scas
stos
insb
xlat
push
pushf
notl
rcrb
push
push
jle
jmp
and
call
mov
enter
cmc
ljmp
aaa
adc
or
loope
pop
jae
shll
or
int
imul
cmp
xor
mov
add
cmp
sbb
stos
jb
push
pushf
imull
and
popa
xor
or
xlat
icebp
clc
push
mov
push
mov
jae
dec
jae
in
cld
out
dec
lods
push
push
pushf
imull
inc
pushf
not
insl
inc
xchg
aas
xor
mov
ljmp
dec
dec
pushf
not
out
sbb
call
xlat
push
pushf
sbb
ljmp
and
xchg
ja
xchg
not
push
mov
xchg
repnz
sahf
movsl
add
rolb
jmp
push
or
movzbl
adc
in
sti
out
dec
pushf
not
out
sbb
mov
add
add
xlat
push
pushf
js
fadds
inc
ljmp
ss
movzbl
enter
push
dec
enter
xchg
jle
leave
loope
sbb
pop
sub
ljmp
or
add
into
xchg
xchg
pand
push
bound
pop
in
out
test
sbb
xor
push
pushf
fstl
cmc
sub
cs
mov
xlat
push
pushf
push
sahf
cmc
les
push
push
js
xchg
inc
call
xlat
inc
adc
xlat
push
pushf
ljmp
sbb
xlat
push
pushf
ja
jnp
shlb
sbb
repnz
insb
xchg
not
push
popf
cs
mov
aam
in
in
and
xlat
push
pushf
and
int
pushf
notl
dec
push
lret
rolb
cmc
in
xlat
push
pushf
inc
mov
enter
push
adcb
jb
ja
push
pushf
notl
dec
cmp
xchg
stos
jbe
push
pushf
mul
int
not
push
prefetcht0
push
pushf
push
pop
add
pop
scas
add
jge
sbb
in
cmpl
loope
dec
jl
into
push
pushf
testl
rolb
xlat
push
call
fnsave
xchg
or
ljmp
nop
inc
pmaddwd
push
pushf
xchg
jg
push
call
xlat
out
sbb
xchg
push
pop
lods
mov
dec
push
mul
xlat
push
pushf
stc
mov
int3
je
testb
imul
inc
pushf
not
lret
and
ss
icebp
aam
mov
in
sbb
ret
adc
xlat
push
pushf
ljmp
mov
andl
jmp
pushf
lret
cmp
lods
xor
cltd
push
arpl
ret
out
aad
cwtl
roll
xlat
push
pushf
add
sar
mov
jl
loop
pushf
imul
cli
jl
add
fdivrs
push
and
outsb
cltd
jmp
add
popf
jge
fistl
mov
lods
cmp
add
inc
scas
inc
pushf
not
dec
mov
jo
inc
jno
mov
pop
mov
lret
xlat
push
jp
mov
mov
sub
sbb
xchg
push
or
repnz
push
pushf
outsb
test
add
lret
dec
pop
mov
loop
cltd
in
in
in
pushf
not
push
jp
mov
in
insb
popf
lret
ss
xchg
xchg
push
push
out
rcl
call
lea
sar
cmp
scas
insl
jbe
shr
sbb
xlat
push
pushf
xchg
push
gs
in
xchg
not
push
psubq
shrb
xlat
push
pushf
ror
dec
inc
lods
xchg
mov
call
mov
rorl
push
pushf
testl
leave
call
push
fisttps
lret
pushf
not
push
verr
int3
mov
xchg
push
hlt
hlt
in
push
pushf
adc
pushf
sub
push
cmc
mov
xchg
push
jmp
sahf
scas
add
aaa
add
inc
cmc
in
push
pushf
mov
mov
mov
adc
lock
cltd
mov
not
mov
or
in
cld
xchg
xchg
pushf
mov
xor
pop
xchg
mov
or
mov
push
mulb
cmp
mov
in
cmp
sbb
lds
dec
pushf
not
push
movzbl
stos
not
push
push
iret
jbe
test
sub
out
aaa
jmp
pushf
sub
ds
not
inc
adc
xlat
push
pushf
bswap
push
pushf
div
es
roll
xor
sbb
xlat
push
pushf
adc
push
pushf
negl
pusha
psubusb
or
sub
or
leave
xor
pop
pusha
xchg
push
repnz
into
push
pushf
mull
shl
dec
cmp
push
xchg
mov
sbb
popa
shlb
sbbb
idivb
or
jmp
push
pushf
mov
inc
mov
sub
pop
xchg
stos
mov
dec
fidivrs
cmc
mov
enter
in
xlat
add
arpl
pop
jne
jo
scas
daa
jge
fistl
xorl
push
pop
data16
pop
imul
sub
jae
ljmp
mov
and
xor
adc
test
dec
jp
push
jge
jl
jle
xchg
cli
aas
lret
or
movnti
inc
inc
jp
mov
gs
xchg
mov
pushf
imull
lret
push
std
push
inc
pusha
xor
cmpsl
and
push
cmc
jmp
clc
lds
lods
sub
sbb
inc
sbb
xlat
push
pushf
cwtl
in
xchg
not
push
pop
ss
sbb
js
cmc
adc
clc
out
shld
lods
jo
push
pushf
mul
into
pushf
not
push
stos
ja
push
pushf
imull
inc
pushf
not
push
in
cmp
js
lds
or
scas
dec
pushf
not
pusha
dec
fs
push
cmp
in
xchg
not
push
stos
imul
pushf
imull
inc
inc
mov
pop
orb
push
pushf
negl
sbb
xchg
and
addr16
cmpsb
fs
scas
not
push
negb
inc
cmpsl
mov
les
test
je
and
jnp
add
fs
inc
or
insl
insb
outsl
stos
outsl
fcoms
push
stc
lret
and
lret
sub
inc
pushf
not
inc
stos
fs
xor
idivl
xchg
sub
fisttps
stos
pop
test
addr16
push
xor
aaa
and
push
jne
mov
xlat
push
pushf
dec
divl
pop
xor
or
int
mov
sub
sbb
xchg
xchg
mulb
and
lret
in
pushf
not
push
jge
sub
adc
mov
in
xchg
sub
mov
pushf
testl
mov
push
mov
mov
cwtl
adc
push
pushf
notl
inc
sbb
add
adc
push
imul
xlat
push
pushf
js
cwtl
ret
das
in
hlt
out
push
pushf
push
test
jge
xchg
pushf
testb
jl
rclb
addr16
icebp
adc
cwtl
pop
js
mov
xor
push
pushf
js
shl
add
arpl
mov
aaa
inc
push
ljmp
pushf
testl
add
scas
cmp
jo
ja
xchg
sti
repz
mov
and
arpl
push
mov
inc
pop
and
cltd
push
push
sbb
ret
pusha
cmc
in
xlat
push
pushf
xor
cli
cli
cmp
add
adc
cmp
pushf
not
cwtl
xor
xor
test
into
lea
cmpsb
pop
lods
jno
push
pushf
imull
mov
leave
inc
mov
xchg
sbb
loopne
cld
mov
imul
push
xchg
jmp
push
lahf
push
dec
mov
xlat
push
arpl
pop
lret
in
xchg
ljmp
push
lahf
insb
cwtl
dec
ljmp
cmpsl
js
popf
mov
jnp
cli
mov
not
push
hlt
icebp
xlat
push
pushf
mov
sub
arpl
arpl
jmp
jp
jbe
ret
and
into
sub
xor
jmp
or
dec
sti
push
add
in
xlat
push
pushf
das
xchg
imul
xchg
inc
and
cmpsb
mov
je
insb
cmpsb
inc
sub
xlat
push
pushf
ljmp
adc
xlat
push
pushf
ljmp
jge
add
adc
nop
inc
hlt
in
xlat
push
pushf
mov
sbb
lret
lcall
div
xlat
push
pushf
je
mov
lds
adc
ja
dec
fs
mov
push
pushf
xchg
push
push
mul
xlat
push
pushf
cwtl
add
rep
inc
sbb
fnstcw
jne
sub
sub
inc
push
not
push
pushf
ret
pop
inc
fildl
scas
aaa
pushf
not
cmp
cmp
sub
sahf
push
xchg
jnp
xorl
add
repz
ret
inc
adcb
pushf
bswap
push
pushf
imull
push
not
push
mov
fdivrl
mov
adc
scas
sbb
out
je
jo
push
pushf
divl
jmp
leave
pop
lahf
cwtl
sbb
jnp
mov
bound
in
cltd
not
push
jp
mov
jb
mov
add
scas
inc
pushf
not
aaa
fldenv
mov
rcl
push
bound
cmc
fdivs
sub
mov
mov
test
push
pushf
push
jg
pop
adcb
add
xor
rcr
in
pushf
imul
repz
jno
lea
cmp
cmc
jl
jl
inc
fnstenv
inc
sbb
xlat
push
pushf
psrad
rolb
mov
lods
cmpsl
pop
jl
push
xor
lret
out
inc
bound
pop
int
sbb
mov
mov
scas
bound
xchg
ljmp
xchg
dec
addr16
xlat
inc
push
stc
xlat
push
pushf
pop
scas
dec
pushf
not
mov
mov
push
pop
push
cmpsl
outsb
insb
dec
xor
inc
sbb
xlat
push
pushf
add
add
jmp
je
push
pushf
mull
bound
imul
push
and
xchg
not
push
imul
and
or
inc
adc
xlat
push
pushf
jmp
adc
xchg
mov
ja
out
xlat
push
pushf
in
movb
xlat
out
add
pop
inc
inc
mov
xlat
mov
idivl
jp
jg
pop
sbb
not
push
add
or
lea
inc
adcb
pop
push
imul
adc
jl
cli
and
sbb
stos
in
not
push
stos
jb
push
pushf
imull
arpl
aas
push
jo
sbb
arpl
std
jo
sbb
mov
xlat
push
pushf
xchg
jle
xchg
xchg
mov
les
mov
push
imulb
mov
aas
and
int3
es
out
cmpsb
loop
push
dec
mov
adc
xchg
jle
mov
aad
adc
mov
sbb
sbb
scas
cmp
loopne
adc
sbb
xor
fdivrl
imul
sbb
xchg
jle
shlb
and
not
push
movsl
add
repz
sti
xlat
jbe
das
stos
ljmp
jo
mov
xlat
push
pushf
icebp
ja
les
sbbl
jg
dec
dec
mov
jb
neg
hlt
in
xlat
push
pushf
push
push
mov
push
sub
out
fwait
scas
dec
pushf
not
push
or
push
fs
hlt
cmc
icebp
xlat
push
pushf
push
stos
pop
sub
scas
cmp
jo
sti
xchg
mov
mov
xchg
aas
out
mov
test
sbb
test
lcall
dec
fldl
mov
fcom
fsubrp
aaa
in
fistl
sti
jmp
add
jmp
mov
push
or
push
adc
sbb
dec
jle
xchg
sub
mulb
jg
fcom
repnz
push
repnz
push
pushf
xchg
push
icebp
or
inc
pushf
not
test
pop
inc
stc
rol
bound
fiaddl
test
ss
xlat
push
pushf
cmp
or
jns
fs
pop
add
inc
sbb
xlat
push
pushf
xchg
xchg
in
out
dec
pushf
not
pop
lock
xlat
push
add
scas
inc
pushf
not
sbb
shll
cmc
popa
in
pop
das
sbb
pushf
not
pushf
lret
std
popa
mov
nop
jne
mov
icebp
xlat
push
pushf
push
fwait
xchg
cli
sub
mov
xchg
push
cli
repz
scas
inc
pushf
not
cmp
xchg
cmc
cmp
mov
into
cwtl
not
push
jp
movsl
pop
call
sub
mov
in
pushf
xchg
push
repnz
not
fwait
and
scas
movsl
mov
cwtl
sbb
pushf
imull
dec
pushf
not
sbb
mov
gs
sub
lret
out
and
rorb
or
pushf
not
dec
jnp
out
das
stc
push
ret
flds
inc
popa
xchg
push
pop
cmc
repnz
push
pushf
add
cmc
ret
in
xchg
not
push
dec
inc
in
popf
not
push
add
xchg
pop
lods
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
mov
adc
nop
add
