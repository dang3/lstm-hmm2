and
hlt
jo
adc
dec
push
xor
call
jo
leave
xchg
daa
add
jo
and
int3
push
cmp
enter
adc
enter
jo
push
add
mov
out
outsb
add
pop
testb
je
movzwl
mov
sbb
fs
out
inc
pop
ret
arpl
pop
mov
lods
jo
jo
jle
enter
mov
add
jmp
repnz
push
push
mov
jne
xor
pop
mov
int3
and
xor
mov
add
lea
mov
mov
mov
inc
insl
incl
mov
mov
push
sub
add
push
mov
pop
in
out
repnz
dec
clc
test
dec
mov
mov
mov
add
or
adc
add
mov
sbb
divb
or
push
mov
ljmp
push
push
push
mov
mov
mov
mov
mov
imul
ja
or
push
or
ret
adc
insl
jnp
orb
add
jmp
add
pmaxub
dec
jbe
or
cmp
jne
mov
mov
push
test
pop
xchg
insl
loope
pop
clc
mov
dec
cmp
jb
mov
add
xor
int
bound
jne
mov
xlat
sbb
or
dec
popa
insl
sarl
aas
sub
jp
add
cs
sub
jmp
mov
inc
mov
jnp
stc
daa
jnp
decl
lock
aam
test
or
fldt
or
push
sbb
sti
jne
or
sti
in
ja
mov
mov
cmp
pop
mov
decl
and
push
push
dec
pop
push
mov
cmp
sarl
jbe
arpl
and
jecxz
add
fdivp
popa
fst
clc
add
mov
mov
movl
pusha
push
dec
push
insl
cmp
dec
and
in
cmpl
jbe
outsl
mov
mov
loop
incl
jbe
sti
xchg
push
and
mov
add
mov
or
dec
jmp
bnd
out
lods
mov
mov
add
sbb
cmp
int3
mov
mov
jbe
add
sbb
rorb
movl
adc
cmp
das
add
in
fcmovnu
xchg
or
sbb
mov
dec
jns
sub
in
scas
stos
adc
hlt
mov
mov
mov
and
or
ret
pop
loop
imul
push
cmp
or
lds
mov
sbb
nop
or
jle
add
mov
cmp
xchg
xchg
push
adc
sti
push
push
ror
ss
fmuls
jmp
ss
mov
popf
into
or
sub
addr16
xor
jmp
jne
and
sub
inc
mov
cmp
jae
mov
out
jae
es
mov
std
sbbb
inc
popf
xor
movsl
lea
or
sub
inc
clc
mov
lcall
das
mov
add
jns
jmp
cmp
jg
jbe
cmpsb
sub
xlat
pop
push
add
jbe
push
xchg
mov
inc
ds
or
jne
stos
add
movsb
int3
mov
sub
movsb
shrl
enter
rcl
arpl
cli
ds
outsb
sub
add
cmp
fwait
mov
mov
fldcw
pop
pop
stos
push
pop
add
xor
xchg
add
sbb
clc
jle
jne
adc
mov
jmp
ds
push
lods
lahf
inc
xor
test
jne
cmp
dec
jmp
imul
test
mov
mov
cmpl
sub
lock
inc
dec
or
xor
pusha
xchg
dec
movb
loope
and
sbb
ljmp
inc
xor
cmp
jae
mov
in
fcomps
sub
inc
add
lret
mov
fdivrs
ret
xor
cmp
pop
ds
popf
cmc
adc
cmp
or
jp
insl
jmp
pop
lea
sbb
std
mov
pushl
mov
push
cmpb
and
loopne
dec
mov
addl
or
pushw
lret
mov
jbe
cmpl
adc
shlb
leave
mov
add
les
jo
mov
movb
sub
pop
pop
pop
mov
push
jge
sub
ret
fistps
push
jmp
mov
mov
or
test
and
and
add
nop
sbb
add
adc
sbb
inc
mov
adc
xchg
push
stos
xor
movsl
dec
sub
mov
pop
in
pusha
mov
xor
jmp
pushf
sub
jecxz
mov
outsl
pop
fistpl
push
cmp
cld
cli
adc
adc
cmp
rcll
mov
cmp
roll
stc
add
pop
aam
mov
jmp
push
sub
mov
mov
add
cltd
lods
or
ret
outsb
mov
mov
pop
dec
in
shll
or
cmp
notl
repz
test
in
mov
mov
sub
lea
andl
mov
sti
jl
movl
mov
je
outsl
adc
or
or
or
incl
ljmp
ja
jecxz
or
adc
xor
or
push
or
sub
orl
cmp
dec
dec
or
ret
incb
mov
sbb
or
add
add
push
arpl
jae
jmp
adc
ret
pop
add
testb
and
jb
hlt
addr16
sti
cmp
sbb
add
push
arpl
xor
add
pop
add
add
adc
push
addr16
arpl
dec
pusha
push
loopne
or
scas
cmp
jp
or
add
and
lea
cmpsb
andb
out
lea
sub
jg
xor
sub
or
adc
add
sbb
outsb
jae
clc
jmp
adc
pop
subl
mov
cmp
test
fimull
mov
xchg
add
adc
rcrb
or
mov
popf
lods
lea
add
xchg
add
ret
inc
jmp
sub
add
sub
insl
arpl
aaa
mov
es
ret
nop
hlt
rcll
sbb
mov
sbb
cmp
mov
inc
pop
inc
or
test
mov
orl
or
xor
mov
add
int3
ds
ss
inc
or
or
jle
daa
lcall
enter
shll
pop
cmp
push
iret
cmp
loope
pusha
addl
mov
fnstenv
dec
or
or
data16
push
mov
cmp
xor
cmp
pop
add
or
add
popa
mov
sbb
mov
mov
out
subl
orl
adc
rcrl
dec
add
mov
mov
pushf
inc
or
dec
and
fcoms
xor
xor
xor
dec
mov
cltd
mov
mov
xchg
jg
adc
or
or
rcrb
ret
xor
mov
clc
cli
pop
ret
mov
xchg
xchg
or
pop
jg
jo
mov
pop
inc
adc
je
pop
jmp
idivl
pusha
adc
jne
or
push
imul
and
in
jbe
sub
jge
jge
or
loope
cmp
add
addr16
inc
lock
imul
scas
mov
adc
add
xchg
fs
push
sub
cmp
pop
popl
lods
sbb
dec
and
add
jmp
int
sub
or
push
mov
test
mov
je
sti
clc
aad
or
mov
inc
lock
xor
add
gs
rcr
fildl
or
inc
adc
xchg
xorl
in
je
mov
ret
scas
inc
push
shlb
sbb
or
das
jo
cmpl
inc
mov
ret
outsb
lret
add
notb
stc
jmp
sbb
sbb
iret
cmp
pop
popa
dec
out
and
add
xor
sbb
in
loope
mov
negl
arpl
mov
mov
mov
pop
scas
dec
cs
ret
push
lea
sbb
jne
testl
cmp
cwtl
adc
or
clc
mov
test
mov
add
cmp
or
fidivrl
iret
and
push
inc
mov
pop
jbe
cmc
orl
or
out
fiaddl
xchg
lcall
lret
sub
jbe
dec
cmp
insb
jo
sub
pusha
orl
les
mov
iret
popa
cmp
aaa
inc
scas
pop
clc
orl
jmp
inc
cmpl
jl
fwait
mov
push
or
or
adc
lea
cmpsl
xchg
cmp
nop
sub
sbb
movsl
popf
and
scas
and
mov
cmpsb
push
xor
mov
sub
jge
dec
pop
cmp
jno
cmp
clc
mov
fldcw
add
ja
dec
orl
out
or
push
bound
or
jge
add
sete
enter
adc
dec
pop
out
mov
pop
testb
push
fldl
dec
mov
or
fimuls
test
fimull
lcall
push
ret
insb
ss
mov
mov
andl
adc
jnp
push
in
or
and
adc
xor
das
dec
add
daa
add
cli
or
mov
clc
aam
push
ret
xlat
xchg
fbstp
add
mov
push
add
les
lods
xchg
jo
inc
popf
fbstp
sbb
mull
test
ret
rorb
dec
xlat
ljmp
add
enter
push
jmp
andb
in
mov
fiaddl
ret
or
adc
sbb
stos
jg
xchg
pusha
gs
in
daa
addl
and
aas
adc
add
sbb
cld
jmp
ja
jo
ret
arpl
pusha
dec
lea
push
jge
ja
push
mov
lret
xchg
and
mov
inc
adc
sahf
cmp
adc
nop
and
cmp
jo,pt
jle
call
or
push
jmp
pop
xor
pop
in
je
sbb
outsl
loopne
stc
leave
je
xchg
sbb
enter
mov
fistpl
xor
mov
ret
sub
pop
fldcw
sbb
jne
adc
dec
adc
jns
out
lock
push
scas
and
pop
jecxz
or
sub
call
test
cwtl
add
fcomip
dec
mov
cmp
ja
mov
mov
and
fisubrl
and
adc
lods
mov
loopne
push
cmp
sbb
xlat
movsl
cmp
ja
je
outsl
test
cmp
sub
movsl
mov
and
rep
sub
adc
testl
add
xor
test
in
or
mov
lret
and
cmpb
sub
and
jnp
add
out
in
mov
fdecstp
sti
jmp
cmp
xor
xor
shrb
popf
ljmp
test
sbb
pop
ja
fstp
push
and
jmp
aaa
cmp
leave
xor
mov
mov
fnstenv
fldln2
inc
inc
or
pusha
loope
sub
addr16
stos
xor
dec
pop
pushl
jp
mov
divb
push
push
sub
add
push
aaa
daa
sbb
aas
and
push
adc
ret
push
mov
in
adc
jne
popa
outsb
jnp
dec
jmp
push
or
into
in
ja
mulb
cmp
jb
add
and
mov
inc
imul
push
call
jns
cli
mov
sbb
adc
push
aam
cmp
and
fsubp
mov
push
loop
imul
int
loopne
add
notrack
or
stos
mov
stos
pop
das
add
aaa
mov
xor
xor
mov
push
inc
push
and
in
in
clc
mov
push
sub
je
and
je
xchg
xchg
xchg
pop
pop
je
xor
daa
adc
inc
xchg
je
in
sub
fucomi
xor
or
cmp
ja
lea
add
add
sub
out
int
imul
push
neg
jle
js
pop
sub
arpl
jo
jmp
inc
and
pushf
mov
sub
mov
filds
jb
dec
and
fcom
std
adc
or
into
add
nop
cli
in
jb
jne
dec
pop
xor
mov
das
xchg
and
pushl
das
stos
jle
and
sbb
add
and
pop
push
out
je
and
je
in
ds
rclb
aas
clc
movzwl
lea
push
xor
cmp
hlt
sub
push
mov
pop
mov
sub
jbe
insl
mov
fs
push
das
hlt
push
xor
out
lret
clc
add
sub
pop
jbe
mov
xchg
inc
test
out
mov
call
and
callw
testl
mov
lods
stos
dec
inc
push
push
inc
push
inc
lcall
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
js
mov
add
jecxz
fldcw
jle
aad
mov
or
push
cld
ret
push
adc
jbe
mov
mov
cli
in
push
push
adc
jmp
fcoms
push
push
push
push
sbb
and
or
pop
add
mov
loopne
push
pop
push
sbb
js
push
int
je
sbb
call
cmpb
je
add
jne
mov
in
xor
xchg
xor
fstl
xor
push
pop
loope
xchg
mov
in
pop
pop
xchg
daa
adc
loop
in
mov
pop
ret
cmp
adc
test
inc
add
rol
fnsave
adc
cmp
and
cmp
das
arpl
je
cld
ja
pusha
das
lods
add
or
incl
or
jl
je
cmp
mov
std
into
cli
out
push
je
sub
and
adc
pop
push
rcrl
inc
pusha
add
stos
mov
jp
stc
sub
arpl
or
add
xchg
unpckhps
or
push
cmp
inc
jmp
orl
push
test
mov
push
insl
sti
sbb
sub
push
push
fmull
jno
pushl
jge
mov
pop
add
inc
add
sub
jecxz
add
scas
mov
jecxz
loope
arpl
mov
adc
stos
inc
adc
mov
xor
inc
das
sbb
test
and
push
mov
fsubs
xor
ljmp
insl
fdivp
test
or
pusha
add
ja
or
lods
push
imul
mov
out
adc
xor
mov
inc
orl
call
shrb
fsubl
gs
mov
pop
add
jg
je
cmp
push
sub
ljmp
je
pusha
add
out
incl
jb
je
jmp
cmp
cmp
adc
and
sub
cmp
decl
xorb
jmp
mov
jmp
mov
ljmp
mov
jmp
mov
lea
mov
jo
or
push
incl
dec
cld
enter
pop
ret
add
adc
cwtl
icebp
dec
pop
je
sub
or
movsb
cmp
js
arpl
push
adc
sbb
pop
pushf
mov
cli
lods
mov
aam
mov
jl
sbb
or
loop
xchg
mov
mov
and
popa
xchg
pusha
inc
shll
enter
inc
outsl
adc
mov
or
sub
and
add
jns
in
pop
jp
cmp
or
add
adc
sti
sbbb
fimull
cs
call
pop
jo
sbb
sub
pusha
jle
dec
mov
inc
fiadds
jnp
fdivl
cltd
rclb
jg
xor
fscale
test
fstps
fdivl
pop
mov
mov
xor
and
sbb
cmp
jle
ja
mov
mov
repz
insb
in
xlat
add
add
or
dec
push
adc
out
rcrb
xor
sub
movb
or
push
or
mov
sub
mov
filds
cld
cltd
idiv
add
lods
rcr
adc
mov
cmp
add
loop
testb
xchg
je
fisttpl
ret
pop
or
out
test
xchg
bound
fistpll
pop
fisubrs
pushl
add
mov
mov
fdivs
xchg
lea
call
sbbl
pop
fs
or
jo
push
and
mov
cmc
call
xchg
xchg
pop
ss
add
das
imul
sbb
ja
sbb
sbb
lret
mov
negl
mov
sarl
inc
insb
outsl
cmp
cmpl
adc
shlb
pop
mov
aad
jne
movsl
adc
jl
fcompl
movsb
push
pop
cmp
fnsave
pop
loope
scas
jp
lds
test
insl
add
sub
push
and
add
aaa
adc
cmp
test
lods
sahf
mov
pusha
movsl
out
sbb
push
jo
mov
sub
add
sti
popa
outsl
mov
sub
jl
les
popl
xchg
movsl
mov
rol
add
dec
clc
dec
jl
lock
std
mov
or
adc
pop
jb
aam
mov
sub
movl
push
or
fistpll
dec
jne
and
inc
jg
insl
lock
xor
dec
jae
mov
dec
cld
and
add
fistpl
xchg
dec
out
ret
inc
sarb
rolb
fscale
add
adc
pop
movw
pop
mov
inc
scas
or
clc
lcall
mov
imul
push
sub
test
jae
lock
icebp
outsb
xor
leave
ja
push
cmp
pop
fimuls
outsl
pop
cmp
mov
add
mov
pop
pop
addl
call
sub
jne
sub
jmp
push
sbb
scas
rcl
pop
sub
ret
in
pop
pop
sbb
dec
inc
out
jle
cmp
rorb
sti
ljmp
imul
sub
ja
add
push
shr
mov
adc
das
push
pop
cmp
jne
dec
je
mov
sbb
lods
rclb
jne
xchg
or
fisttpl
add
pop
pop
mov
sub
push
stos
fistl
jne
je
push
mov
and
jmp
pusha
ja
into
sbb
adc
or
jmp
adc
jmp
or
cmp
outsl
fs
inc
jle
cmp
push
mov
mov
xchg
xchg
lea
push
dec
mov
pushf
rorb
loope
adc
pop
or
repnz
adc
adc
pop
adc
xchg
and
outsb
icebp
insl
mov
xor
pop
cld
dec
jl
mov
movsl
mov
and
icebp
cmp
jle
and
stc
add
xchg
push
mov
sbb
lahf
inc
cmp
adc
jg
pop
mov
push
mov
dec
js
mov
inc
lcall
jecxz
sbb
repz
or
pop
test
iret
mov
in
pop
mov
mov
adc
clc
or
and
jle
add
cmpl
lea
jne
jbe,pn
or
loopne
mov
pop
push
mov
jo
cli
jmp
bound
mov
roll
xor
cmp
fsubrs
cmp
jl
icebp
dec
mov
add
aad
xchg
mov
cmpl
fs
pop
clc
imul
call
fcmovnu
sbb
cmp
adc
rcll
jo
loopne
jmp
push
aam
stos
add
xchg
xchg
insb
fldenv
add
xor
jmp
mov
ljmp
mov
push
negl
push
and
ljmp
jg
cmp
push
mov
sub
xor
aas
pop
enter
push
adc
lock
arpl
lea
push
push
roll
mov
pop
or
cvtdq2ps
dec
pop
fs
ret
mov
mov
fsubl
xor
pmaxsw
push
fistps
jae
mov
scas
cli
nop
xor
and
vmovlhps
xor
shlb
cltd
leave
jbe
or
mov
outsl
adc
sub
lds
outsb
or
add
ss
cwtl
xchg
pusha
add
sbb
insl
test
inc
sub
pop
adc
sub
cltd
cmp
or
aam
mov
pushf
arpl
cmpsb
mov
inc
out
or
movsl
mov
adc
push
jnp
sub
test
jmp
sbb
loope
mov
bound
mov
push
sbb
or
and
and
jbe
inc
sub
daa
mov
lea
push
test
decl
loop
add
inc
mov
pop
or
jmp
push
mov
pop
cli
sbb
or
leave
jne
mov
xchg
pop
and
xor
cmp
nop
jecxz
les
mov
jl
xchg
sbb
mov
inc
loop
or
dec
test
es
mov
mov
out
mov
nop
push
xchg
xor
dec
mov
push
inc
lods
insb
add
shll
in
mov
aaa
or
fiadds
sub
dec
push
enter
cmp
enter
addr16
pop
enter
insb
push
xor
pop
orl
push
push
dec
dec
or
enter
cmp
enter
xor
enter
xchg
nop
mov
orl
test
jl
in
xorl
in
xchg
movsb
sub
or
pusha
and
movups
pusha
ret
push
mov
fidivrl
push
div
shll
mov
or
outsb
mov
pop
jae
cmp
and
xchg
js
adc
mov
pop
push
js
ljmp
out
mov
lea
movzwl
add
add
outsl
rcr
movsb
jb
inc
popf
inc
mov
pand
add
add
jne
cmpsb
out
outsb
adc
lret
add
push
mov
dec
fistpll
pop
add
dec
xchg
add
fsubr
or
mov
xchg
jg
sbb
std
push
mov
in
in
xor
lea
mov
xchg
int
scas
push
repnz
dec
add
jg
pop
inc
xor
lea
cmp
jbe
fwait
pop
fiaddl
dec
add
cmpb
aaa
sti
in
pop
sub
inc
push
cmp
sbb
pop
inc
js
cmp
ret
jbe
push
or
fdivs
push
add
push
sbb
outsb
sub
jmp
sbb
lods
adc
and
xchg
xchg
lea
clc
sub
mulps
jae
dec
or
xor
mov
add
lea
push
mov
mov
or
in
mov
adc
fidivs
test
rcll
and
mov
clc
sbb
mov
dec
insb
enter
or
mov
xor
xchg
push
sub
xor
mov
sbb
insl
outsb
sbbb
pop
sbb
mov
nop
xor
add
sbb
fwait
push
mov
and
jno
fcompl
xor
and
out
push
inc
lea
les
sbb
in
pop
pop
and
jno
fs
and
cmp
pushf
pcmpgtb
dec
dec
mov
push
test
push
rcll
aaa
fcoms
jb
cmp
add
hlt
aaa
cltd
sub
mov
inc
inc
dec
jne
out
sub
cmp
xor
and
and
or
push
add
mov
dec
xor
mov
sub
adc
and
shrb
xor
adc
sbb
jae
lods
jl
iret
cmpl
sbb
jae
mov
mov
add
add
nop
adc
cmp
xor
inc
mov
inc
movsb
pusha
test
jns
in
lods
adcb
test
inc
cmp
pop
mov
mov
imul
gs
xor
cs
insb
xchg
inc
jb
popa
je
sti
outsl
add
insb
push
popa
jo
push
divb
dec
sbb
dec
imul
mov
pop
dec
gs
pop
sbb
jg
insb
dec
push
adc
arpl
jae
gs
outsl
jb
mov
pop
mov
or
inc
xchg
push
pop
mov
leave
mov
insb
mov
outsl
pop
dec
outsl
fs
nopl
push
sbb
insb
push
push
push
mov
add
inc
iret
inc
nop
pop
inc
xchg
xchg
add
adc
and
sbb
insb
divb
std
adc
enter
in
lock
mov
cld
xor
insl
in
rolb
xchg
xor
cli
mov
das
jb
out
fsts
push
push
adc
test
outsb
testb
mov
in
xchg
mov
sub
mov
clc
cltd
in
jae
es
clc
xchg
mov
leave
enter
and
lock
repnz
xor
imul
and
inc
inc
call
call
cmp
push
mov
pop
cmc
push
xadd
in
pushf
add
or
mov
stc
ljmp
adc
or
out
incl
push
cs
jne
je
outsb
adc
lret
and
xchg
cld
sbb
int3
clc
mov
enter
fistps
movsb
mov
pushf
pop
mov
mov
jb
jnp
sub
adc
pusha
lock
adc
inc
mov
push
and
or
sub
mov
lods
das
cltd
xchg
cmp
pop
dec
sub
imul
pop
rcrl
push
jb
inc
imul
call
cld
loop
aas
sahf
and
mov
shr
mov
jae
xor
inc
movsb
mov
and
pop
and
orl
inc
lcall
pop
adc
das
dec
pop
jns
xor
das
aaa
repz
enter
add
enter
ror
out
lret
into
enter
aam
add
jo
notb
mov
mov
sub
pop
arpl
mov
mov
icebp
push
dec
lea
clc
push
and
add
add
jcxz
xchg
pop
adc
fmul
mov
mov
jge
mov
push
inc
add
shlb
or
dec
mov
or
mov
mov
mov
dec
arpl
mov
icebp
push
movl
pop
mov
int3
ret
jae
inc
xor
or
xor
ret
mov
or
push
popa
out
lahf
jge
ja
mov
mov
mov
sahf
or
dec
inc
mov
ret
mov
fwait
dec
inc
add
push
inc
pop
dec
xchg
dec
push
cmpl
jb
outsb
imul
out
jno
rcl
add
mov
mov
das
inc
sbb
rol
leave
mov
mov
ret
mov
out
dec
aaa
aaa
xor
subb
popa
jbe
and
adc
repz
mov
adc
shl
push
mov
inc
jbe
jp
sub
mov
lcallw
dec
in
arpl
jae
inc
ss
popa
push
je
int3
aaa
add
pop
insb
add
paddq
or
fwait
insl
mov
jl
add
pop
fsubl
inc
ret
sub
pusha
add
inc
mov
insb
inc
cmp
pop
stc
cmpsb
inc
push
cld
rcrl
sbb
push
das
sbb
and
add
jo
imul
inc
setae
mov
dec
add
idivb
call
dec
inc
inc
push
push
add
inc
pop
adc
add
sub
pop
push
pop
add
aaa
xchg
or
and
sti
dec
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
das
inc
jb
outsl
jb
out
sti
sbb
push
iret
je
insl
and
and
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
and
roll
cmpsl
xor
loopne
mov
dec
pop
push
add
add
add
or
add
jl
orb
add
mov
inc
add
add
or
push
add
add
fbstp
adc
inc
add
xor
mov
out
dec
add
arpl
outsl
add
hlt
decl
es
aaa
mov
pop
fwait
cmp
or
lldt
and
mov
jmp
fildl
add
adc
push
pop
mov
int
mov
push
push
xchg
mov
addr16
insl
and
jae
and
and
add
jb
push
imul
aaa
jo
stc
outsl
push
inc
in
dec
add
add
add
stc
popl
adc
popa
xlat
rorb
add
faddl
pusha
add
xor
jbe
inc
inc
pop
pop
fbstp
add
lock
xor
fldl
or
xchg
sbb
or
push
pop
xor
add
xor
test
and
nop
fistps
rorb
push
jbe
data16
and
testb
push
mov
xor
out
or
inc
test
jns
xchg
out
ret
fwait
dec
mov
rcr
jb
std
fildll
call
add
pop
cs
lret
jns
and
push
jnp
data16
in
mov
push
ljmp
add
mov
pop
push
aas
or
add
xchg
sbb
fstpt
dec
out
or
xchg
and
fldt
stos
inc
addr16
jbe
pushl
shll
fwait
lahf
lret
jo
jecxz
ja
jne
xlat
fdivl
and
sub
lahf
pushl
pop
dec
dec
push
and
into
test
pop
idiv
mov
mov
jp
xchg
mov
xor
mov
mov
mov
jecxz
popa
jg
fildll
xor
outsl
pop
jne
jae
add
bsr
cwtl
mov
dec
bound
stc
lret
pop
cs
mov
bound
push
fdivs
jb
test
gs
mov
imul
pop
mov
xchg
fistl
ss
es
shll
dec
fwait
insl
mov
iret
stc
outsb
mov
sti
mov
adc
sti
inc
mov
stos
push
mov
lret
jecxz
dec
ret
push
jg
movsl
dec
xor
or
ret
test
fcompl
das
pop
sarb
idivb
out
cmc
jae
sbb
movsb
shlb
mov
pop
lds
insl
xchg
pop
xchg
jne
cmp
push
mov
fwait
rclb
in
mov
pop
js
fwait
and
sub
or
scas
fs
push
dec
in
xchg
ljmp
sub
pop
xchg
or
call
fcomps
jbe
lret
lret
outsl
outsl
in
frstor
sahf
fimuls
adcl
mov
pop
mov
pop
sti
pop
nop
mov
jg
ljmp
aas
sidtl
int
int3
sub
push
jns
jle
ret
push
cmp
ret
insb
xlat
mov
xlat
test
outsl
ljmp
shll
fmull
mov
mov
divl
imul
dec
outsl
decb
orb
xchg
ljmp
xor
xchg
jg
clc
les
pusha
fildl
pop
dec
mov
fwait
aaa
mov
mov
std
enter
mov
push
movsl
xchg
mov
adc
pop
jmp
and
and
cmp
jnp
ror
pop
imul
lret
jmp
sub
idivl
xchg
sbb
adc
push
jg
or
add
in
addl
cmp
inc
push
sbb
lock
dec
push
pop
cmp
addb
jl
popf
push
adc
sub
call
mov
sbb
sahf
sbb
jmp
sahf
sbb
nop
loopne
fadds
daa
dec
rolb
jg
adcb
jb
insb
jno
mov
mov
cmp
mov
push
inc
sti
pop
xor
add
sub
aas
sub
mov
outsl
push
mov
jg
lock
dec
test
dec
insl
sti
negb
out
sub
push
or
fistps
push
push
mov
jg
fs
adc
nop
push
mov
ljmp
mov
mov
mov
and
sub
ja
fstpt
or
pop
adc
mov
inc
inc
push
add
sbb
xchg
xchg
jg
cmp
jne
sbb
icebp
jle
das
push
push
jo
add
sbb
ret
gs
lods
mov
rolb
mov
mov
xor
sbb
jg
mov
fistl
mov
push
cmpl
push
decl
cmp
aas
fbstp
cs
sub
loop
mov
aas
lcall
jbe
mov
jnp
ud0
ret
sub
loope
mov
cmp
incb
insb
cld
jg
icebp
sti
insl
jmp
cmp
fstp
das
cld
push
les
inc
ss
push
pushl
fisubrl
add
dec
sub
das
lea
lods
int3
fmuls
push
mov
outsl
les
lods
jbe
loope
cmp
clc
incl
insb
arpl
and
jecxz
mov
std
rcr
es
sub
clc
add
inc
jle
mov
mov
add
push
fwait
sbb
leave
push
jne
aaa
add
or
outsl
data16
cmc
das
adc
std
xchg
fldt
inc
inc
loope
adc
sub
jmp
or
pop
rorb
sbb
das
xor
fisubrs
sbb
jae
outsl
push
lock
mov
outsb
loope
jp
sbb
inc
adc
xor
mov
push
out
adc
fwait
cmp
jbe
add
jl
call
inc
add
inc
adc
push
insl
jg
or
pop
push
les
sarl
mov
push
mov
dec
jns
sub
rcr
adc
hlt
mov
les
mov
mov
push
andb
data16
or
jae
cmp
cltd
inc
aaa
mov
adc
cmp
xchg
sbb
or
loopne
in
adc
jnp
mov
push
mov
or
adc
jg
push
adc
shlb
in
jmp
ss
mov
mov
jmp
mov
pop
xor
jmp
mov
incl
pop
mov
xor
imull
push
inc
test
fisttpl
cmp
pop
sub
add
mov
adc
mov
sbbb
lods
sti
adc
inc
popf
jno
cmp
orb
or
or
inc
rcrb
aaa
sbb
outsl
adc
pop
imul
jg
mov
xlat
pop
call
push
mov
inc
ds
sti
outsl
mov
sub
sti
leave
stos
call
scas
aaa
sbb
mov
mov
and
movsl
adc
jmp
call
lods
hlt
hlt
cwtl
paddb
push
lcall
cli
ds
sbb
mov
push
jne
call
push
mov
lock
mov
aam
jle
icebp
fstpt
push
or
xchg
pop
push
aaa
clc
pop
incb
adc
inc
mov
adc
cld
decl
nop
add
xor
xchg
adc
jl
jg
decb
cld
push
pusha
arpl
ficompl
cmc
test
dec
sbb
xlat
cmp
imul
js
push
fcoms
pop
inc
dec
or
adc
shll
movb
jg
mov
les
cwtl
sbb
xor
mov
out
mov
mov
inc
cltd
in
dec
int3
imul
dec
mov
push
mov
leave
mov
scas
cmp
lods
jmp
adc
cmc
adc
out
js
cmp
mov
push
push
mov
cld
daa
cmp
jmp
je
adc
out
into
xor
mov
in
cmp
aaa
int
jbe
push
adc
pushl
cmp
adc
or
call
adc
icebp
ffree
cmpl
jnp
dec
inc
faddl
fstpl
pop
test
or
ret
jmp
icebp
pop
inc
or
in
sti
sub
sub
xchg
imul
mov
add
sar
lcall
lods
fdivs
push
sbb
push
push
mov
jns
adc
out
mov
jg
xchg
and
push
jne
das
cmc
mov
pop
rcrl
adc
push
ret
push
jb
inc
jmp
sub
lock
cmp
mull
les
sbb
fildll
adcb
pop
or
stc
lods
jg
mov
inc
in
aaa
pop
jns
jno
inc
adc
int3
icebp
or
adc
xor
sti
lcall
lods
shrb
sbb
lahf
loope
pushf
ret
jmp
dec
in
sarl
ljmp
les
cmp
xchg
cmp
cmc
jne
test
mov
loop
ret
pusha
and
loop
pop
sbb
jno
mov
test
call
sub
jne
push
adc
and
das
add
jmp
pop
sarb
xchg
mov
fists
push
loop
jg
outsl
scas
in
mov
outsl
add
filds
cmp
push
cwtl
imul
add
dec
xor
jg
or
sar
adc
inc
rclb
sbb
or
in
sub
aas
adc
call
sub
cmp
std
xor
pop
add
jge
in
sub
jb
fidivl
incl
cmpsl
das
add
arpl
loope
add
idivl
push
and
pop
adc
sub
ss
sbb
pop
adcb
cmp
or
sbb
jmp
mov
std
out
dec
out
jg
mov
fistpl
mov
pop
call
inc
or
add
jae
sahf
jbe
mov
adc
sar
mov
mov
mov
outsl
fstl
test
repnz
fisttpl
mov
lcall
dec
je
inc
pop
sbb
add
sub
add
dec
cmp
mov
pop
push
xchg
clc
mov
es
insl
aaa
mov
xchg
arpl
inc
call
test
pop
sbb
cli
inc
or
test
push
sub
cmp
or
sbb
adc
icebp
or
add
xchg
inc
outsl
pushl
add
inc
cmp
sub
xlat
or
arpl
mov
pop
loop
rclb
mov
push
fsubs
faddl
and
or
ss
orb
mov
and
adc
or
test
and
pop
adc
dec
lds
decl
jbe
or
add
ja
mov
call
mov
and
mov
lea
sbb
lods
pop
jg
pop
jle
pop
xor
lock
pushl
and
gs
and
push
dec
and
sbb
sbbb
mov
xor
push
cmp
mov
shlb
inc
daa
push
jg
adc
test
mov
xchg
xor
mov
mov
decl
xor
mov
cmc
lcall
loope
push
pop
inc
adc
je
leave
mov
mov
or
jecxz
clc
call
or
cltd
pop
jmp
popa
mov
jg
jge
mov
and
pop
jp
add
insb
cmp
sub
xor
and
sti
jmp
hlt
add
scas
xchg
sub
call
insb
test
mov
popa
int
call
push
dec
xchg
and
dec
pop
jmp
int
or
test
push
call
sbb
or
ljmp
adc
add
pop
sahf
dec
leave
outsb
and
and
inc
ret
pop
mov
jmp
repnz
inc
gs
inc
aas
xor
pushf
in
inc
jg
mov
xchg
in
jnp
sub
mov
xlat
push
clc
pop
mov
xor
scas
inc
push
jg
pop
add
or
mov
das
mov
outsb
xchg
inc
orb
dec
outsl
icebp
or
xchg
jl
or
mov
and
or
decl
pop
sbb
cmp
call
or
sbb
xor
lcall
sbb
push
inc
mov
ret
pop
mov
and
lock
or
incl
js
sub
push
lea
ret
fists
rcrb
inc
push
testl
outsl
std
test
cld
push
jmp
mov
repz
sbb
ja
ret
fcmovu
jge
inc
or
xor
std
or
push
jp
sub
pop
aaa
push
inc
mov
dec
mov
mov
inc
mul
popf
or
mov
repz
ret
pop
insb
xor
cltd
sahf
add
xchg
clc
pop
cmp
mov
cmp
or
sub
pusha
add
cmp
add
cmp
jmp
pusha
test
aas
xchg
pusha
std
and
imul
pop
loopne
sub
pop
jl
outsb
outsb
ret
inc
outsb
or
and
rorl
sbb
nop
daa
icebp
mov
sbb
call
dec
push
ds
pop
iret
cli
lea
add
out
xchg
cli
movsl
mov
cld
test
aad
jge
test
ljmp
lock
jmp
lods
decb
into
out
aam
inc
or
shr
inc
pop
jge
xchg
xchg
xor
pop
fwait
cmpb
sbb
xor
and
bound
push
adc
call
lcall
sti
test
adc
mov
lcall
pop
xchg
cli
jmp
pop
cmp
mov
adc
push
mov
adc
in
pop
sarb
or
sbb
and
xor
inc
mov
ss
mov
pop
or
adc
inc
xlat
fprem
mov
fildll
incl
or
jl
dec
add
push
xor
push
fwait
add
les
lods
loop
call
pop
movsb
popf
fbstp
pop
leave
xchg
loope
xor
rcll
cmp
insb
icebp
dec
dec
add
andb
dec
jne
popa
fdivr
xchg
clc
cli
add
stc
fmuls
jbe
or
and
cli
pop
xchg
xchg
pop
xchg
andl
mov
add
jmp
xchg
pop
ja
sbb
mov
push
jmp
cli
aas
ja
cli
sbb
arpl
sbb
insl
push
jge
pop
addb
sub
xor
fiaddl
das
cld
repz
jge
inc
ja,pt
daa
mov
pop
loopne
push
cmp
cld
ljmp
add
fimull
jae
pop
or
sbb
and
in
sub
aaa
subb
or
call
mov
out
or
xchg
in
daa
sub
or
cmp
and
sub
xor
sbb
pushl
fbstp
jo
adc
jns
push
into
jl
out
lahf
add
call
mov
decl
jge
xor
lret
sub
or
fstpt
adc
cwtl
mov
adc
add
mov
cmp
and
inc
or
test
aaa
aaa
mov
push
test
jmp
sbb
js
mulb
mov
or
sti
std
pop
mov
xchg
icebp
lcall
scas
sbb
std
sbb
sub
dec
lahf
clc
test
mov
add
aaa
sbbb
mov
xchg
adc
shrb
out
mov
pushl
sub
icebp
shrb
popf
ljmp
and
push
sbb
cmp
outsb
or
mov
aad
clc
push
push
cmp
mov
cmp
push
das
inc
mov
mov
les
inc
es
cld
ljmp
or
pusha
loope
sbb
jnp
sub
add
jbe
orl
das
adc
and
ret
and
lret
inc
mov
xchg
adc
push
hlt
pop
jge
jmp
cli
jg
mov
cmp
in
dec
shll
sbb
or
pop
ljmp
fldcw
inc
dec
pop
iret
fucomi
bound
out
data16
mov
inc
adc
mov
adc
and
add
pop
hlt
sbb
push
sbb
mov
and
das
cld
lcall
pop
mov
in
pop
cmp
lcall
inc
iret
clc
xor
cmp
in
and
xchg
mov
fisttps
mov
and
push
pop
pop
jle
mov
ljmp
dec
inc
je
call
out
call
add
adc
sbb
add
int
imul
or
addb
or
pop
lcall
in
in
je
inc
cld
dec
sbb
mov
and
ja
flds
adc
push
and
sbb
frstpm(287
aad
add
clc
xchg
daa
sbb
hlt
je
push
mov
mov
mov
das
in
cld
out
loop
pop
call
test
pop
add
dec
pop
test
mov
lret
sbb
cmp
mov
mov
inc
push
and
out
dec
pop
rorl
sub
inc
sub
and
cmp
dec
xor
hlt
push
leave
add
fildl
shlb
cltd
dec
adc
lods
pop
fmulp
scas
fiadds
inc
imul
cmp
shll
or
fimull
test
mov
jo
incl
cmp
fbstp
mov
cmp
add
add
aad
mov
scas
ja
outsb
imul
add
push
adc
pushf
sahf
or
incl
lods
push
dec
adc
sbb
xchg
cli
pop
movsb
cs
outsb
push
push
sbb
dec
mov
push
pop
add
adc
das
sbb
jmp
mov
fcomps
daa
add
push
push
adc
sub
push
incl
rcl
cmp
xchg
dec
mov
jnp
arpl
leave
pop
push
sti
sub
repz
mov
lcall
loop
ret
lret
into
push
imul
adc
dec
mov
or
cmpsb
lea
and
adc
inc
and
sbb
sub
jl
jno
outsl
outsl
pop
push
xchg
mov
ljmp
inc
ret
ss
icebp
enter
outsl
insb
cld
jmp
cmp
sub
adc
sub
ret
ja,pn
push
push
shr
in
mov
lcall
sub
pop
cmp
and
or
les
sbb
sub
std
pop
dec
inc
jmp
loop
adc
test
sbb
dec
ljmp
adc
jbe
xor
push
cltd
insl
push
fcoml
sub
arpl
lods
push
mov
mov
ss
decb
adc
jmp
mov
mov
and
ss
mov
xchg
les
pop
std
loopne
mov
sar
add
push
daa
cmp
add
fildl
sbb
inc
add
fiaddl
sahf
insl
imul
mov
call
roll
jae
cmp
xor
xor
inc
rorb
mov
xor
insl
or
jb
mov
mov
pop
inc
cld
decl
call
add
fistps
imul
lret
das
and
call
pop
dec
ja
dec
xchg
xor
or
adc
std
inc
xchg
pop
call
or
icebp
aas
mov
inc
pop
int3
jg
test
inc
insb
movsb
inc
mov
add
fisttpll
es
pushf
xchg
mov
aas
popf
sub
call
adc
and
add
sub
inc
insb
add
incl
add
dec
pop
xchg
pop
loopne
or
cmpxchg
mov
mov
filds
loop
out
lret
lret
jg
je
enter
pop
ret
ljmp
lahf
mov
sbb
inc
pop
xor
jne
jl
push
xor
lods
add
sbb
push
adc
loope
ficomps
sar
outsl
add
cli
scas
mov
hlt
mov
pushf
aam
in
push
mov
jo
sti
popa
mov
lcall
gs
shll
sub
mov
pop
inc
in
in
jg
dec
rcrb
pop
xlat
cmp
call
cmpl
sub
orl
mov
add
inc
push
mov
and
or
dec
test
nop
pop
pop
pop
jo
adc
out
mov
call
cltd
rclb
xchg
cmpb
das
sub
mov
inc
pop
shr
add
std
xor
fistpll
sub
std
test
sbb
or
mov
out
mov
int
xchg
clc
sti
pop
daa
jns
push
daa
jbe
add
mov
aam
decl
adc
mov
mov
fisubrl
rcrb
sbb
and
jmp
mov
sbb
mov
add
loopne
rol
mov
loop
jg
ret
mov
push
adc
sti
jecxz
xor
pop
add
cmp
and
loop
xchg
je
xchg
mov
das
add
sub
roll
jle
mov
mov
or
pop
daa
mov
faddp
add
rolb
clc
adc
filds
shrb
adcl
adc
push
jb
test
jb
clc
call
adc
push
mov
mov
nop
mov
lret
jae
xchg
test
add
cmp
push
add
xchg
add
sbb
dec
or
push
scas
lds
pop
add
mov
incl
mov
sarl
xchg
and
dec
mov
jle
dec
rolb
std
adc
aad
mov
stos
popa
call
test
decl
add
push
dec
or
mov
adc
lcall
decl
push
inc
adc
dec
cmpsb
icebp
sbb
rolb
inc
test
lods
movsl
ss
decl
adc
mov
fistpll
push
dec
xor
shlb
adc
in
cs
inc
lds
sbb
fstpl
push
jo
xor
pop
insb
cld
adc
cmovb
inc
pop
rcll
std
sub
nop
mov
call
sti
mov
icebp
sbb
cs
mov
mov
push
rcll
into
jecxz
add
mov
xchg
loope
sub
push
mov
fwait
cmp
sub
xor
ja
daa
and
or
sub
fistpl
insb
and
jl
decl
dec
sub
outsl
imul
xchg
cwtl
cmp
or
and
fs
repnz
cld
xlat
ffree
test
sub
insb
loopne
add
ffreep
or
adc
inc
cld
adc
clc
repz
mov
int3
filds
dec
adc
les
setno
cmc
jmp
sbb
jmp
mov
lcall
inc
lahf
lret
push
mov
sub
and
movsl
ret
mov
xor
mov
mov
or
sub
outsl
loopne
or
bound
cmp
fldt
inc
adc
sub
or
pop
jno
sti
push
dec
inc
mov
out
or
mov
imul
aas
stos
or
dec
icebp
xor
pop
call
jbe
fsubl
mov
fwait
mov
adc
pop
call
aas
xlat
ficomps
or
mov
inc
popa
inc
test
inc
in
int3
jl
or
jmp
lcall
rorl
add
lret
loopne
jbe
mov
pop
ljmp
bound
push
push
sbb
bswap
ja
mov
or
loope
cld
pushl
lret
ss
dec
lock
jbe
aas
push
jb
jno
xchg
cmp
cli
idivb
or
mov
cmp
xchg
push
ret
pop
orl
ljmp
mov
dec
jne
push
pop
jae
cltd
pusha
jmp
ja
fsubrl
mov
pop
mov
shl
clc
aaa
push
dec
cld
cmp
inc
in
cmp
mov
repnz
sub
into
call
insl
add
dec
jne
lds
or
xchg
or
pushl
xchg
dec
popf
jae
pop
lea
push
sub
rolb
pushl
push
aas
or
pop
clc
mov
clc
pop
add
mov
jge
fdivrl
dec
andl
or
call
or
pop
das
lret
mov
and
cmp
adc
ljmp
push
push
adc
mov
in
cmp
cs
ljmp
out
out
mov
xor
sub
out
or
add
mov
call
cmp
mov
in
jns
stos
ret
test
cld
das
je
insl
jmp
fists
push
cmp
mov
or
ds
mov
imul
inc
stc
out
out
adc
mov
mov
mov
pop
sub
call
adc
jl
mov
cld
sbb
fidivrl
sub
sub
adc
insb
clc
cld
insl
icebp
adc
mov
jmp
cwtl
and
add
pop
xchg
inc
mov
xor
mov
decl
lods
fstpl
enter
incl
fcoms
testb
test
xchg
test
add
jae
add
dec
clc
dec
jle
shl
rcrb
lahf
xchg
cmpsb
loop
cld
ljmp
pop
mov
loopne
pop
mov
push
pop
add
push
mov
push
and
icebp
call
mov
and
inc
xor
cmp
jg
and
pop
sbb
dec
jge
cmp
imul
pop
add
or
in
les
or
insb
hlt
jg
pop
stos
xor
testl
sbb
inc
push
jl
int
pop
mov
enter
adc
xchg
call
inc
pop
sti
push
leave
cmp
ja
mov
add
push
or
pop
push
clc
cmp
jp
icebp
jg
incb
jl
push
mov
mov
cmc
sbb
ret
lock
test
je
addl
cmp
fldl
aad
incl
adc
pop
lods
test
cmp
mov
cld
out
imul
cmp
mov
mov
hlt
aaa
pop
inc
cmp
fdivs
mov
fdiv
push
loopne
les
adc
and
incl
push
shl
daa
xchg
or
out
shlb
fwait
sbb
ljmp
fdivrl
sub
pop
enter
xchg
idivb
lcall
jo
ljmp
sub
out
push
ljmp
aad
or
mov
popf
fst
std
or
cmpsb
or
outsl
cmc
sub
adc
lret
out
ss
pop
stc
data16
jbe
mov
jmp
lcall
mov
int
cmp
psubsb
fcomps
mov
pop
ljmp
dec
pop
dec
inc
push
sub
jg
loopne
loopne
mov
xchg
popa
mov
push
je
ret
test
fnstenv
incb
adc
gs
fadd
or
adc
loop
lea
mov
mov
stc
incl
filds
jecxz
pop
rclb
inc
mov
adc
jge
add
cmp
sub
push
sbb
pop
mov
jg
das
or
std
push
negl
push
sub
push
pop
add
cltd
call
jg
sbb
push
xchg
xor
mov
mov
jmp
and
cmp
fnstsw
aas
xor
sahf
cmp
repnz
sub
in
orl
div
or
addr16
pop
mov
rolb
sbb
stos
les
fnsave
lods
test
mov
nop
and
out
jl
and
sti
aas
out
fidivs
pushf
clc
hlt
lock
call
enter
fcompl
mov
mov
mov
call
cmp
lock
cmpsb
imul
xor
ljmp
in
mov
jmp
xchg
lock
sbb
jns
aam
lock
sbb
inc
push
mov
push
cmp
pop
sub
add
out
adc
ljmp
addr16
lods
cmp
dec
xor
sahf
jo
pop
call
cltd
jns
or
iret
xor
sarl
andb
test
repnz
mov
and
shlb
ja
inc
jmp
in
cmp
add
pushf
adc
pop
mov
and
dec
js
jns
xor
mov
andl
push
pop
in
or
mov
lahf
cli
cmc
mov
clc
lahf
int
xlat
mov
add
popf
sbb
adc
add
fwait
add
add
pop
lret
add
sbb
dec
add
adc
ja
enter
lods
push
lock
pop
push
ss
xchg
pop
sar
arpl
sbb
dec
nopl
push
cwtl
or
jns
push
aas
inc
stc
test
inc
mov
adc
sbb
pop
or
add
test
mov
addl
into
inc
in
fs
outsl
std
and
inc
xchg
mov
sahf
fwait
js
mov
lods
or
jg
daa
sub
inc
mov
shll
mov
fildll
leave
push
inc
mov
xchg
pop
jnp
rolb
or
inc
pop
mov
ret
fucomip
out
shlb
rorb
les
push
jnp
ds
jmp
out
mov
fdivrs
repnz
ljmp
push
cmc
in
jg
jmp
mov
dec
adc
jmp
mov
fiaddl
pop
mov
sbb
and
insb
rcll
outsb
std
das
aam
add
jge
xchg
and
clc
rclb
sbb
icebp
pop
add
mov
ljmp
adc
adc
iret
dec
enter
test
jmp
bound
ds
sub
imul
inc
lret
andb
aam
push
imul
inc
or
sbb
je
data16
jbe
mov
insb
jg
mov
insl
movzbl
ds
pop
pop
mov
push
repnz
incl
jbe
call
cmp
inc
dec
jne
cwtl
lret
sbb
cmp
hlt
call
call
push
sbb
call
or
mov
xchg
or
cmp
mov
or
mov
cmp
and
sub
lods
enter
xor
pop
call
repz
leave
fs
add
push
jae
nop
jo
in
lcall
cmp
sub
jmp
cmp
add
or
das
sub
or
cmpb
cld
incl
out
ret
aas
jl
jae
add
scas
mull
pop
sub
daa
push
jmp
cld
aam
mov
xor
std
xchg
pop
adc
and
imul
call
push
mov
xor
sbb
and
dec
jg
inc
call
jecxz
fstpl
mov
negl
mul
loop
call
call
outsl
push
icebp
test
cmc
push
out
fwait
mov
mov
inc
sub
cld
and
lds
bound
or
mov
jg
mov
movb
fldenv
aaa
cwtl
inc
xor
arpl
cmc
pop
xacquire
mov
sub
test
int
js
mov
push
adc
sub
xchg
cmc
jg
push
hlt
aas
hlt
aam
xchg
lock
lods
sarb
ljmp
cmpsl
pop
inc
fwait
pop
imul
test
ljmp
jl
sbb
sbbl
fucomi
lcall
dec
lods
push
mov
push
aad
dec
jmp
mov
in
cld
and
fisubrl
xchg
or
std
inc
adc
clc
aad
pusha
lea
mov
cmc
lret
std
inc
cmovae
cmp
dec
add
fiadds
xor
mov
or
in
pop
aaa
pusha
insb
cli
ret
mov
out
push
add
add
das
jnp
or
outsb
cmpsb
jmp
xlat
xor
outsl
cmp
icebp
out
pusha
dec
cld
jae
inc
outsl
lcall
ljmp
outsb
or
imul
jae
data16
push
push
dec
dec
inc
lea
mov
dec
aas
clc
icebp
incl
or
clc
push
add
push
jle
int
je
sbb
push
ss
cmc
sbb
test
push
cltd
pop
hlt
inc
addr16
iret
or
add
pop
pop
popa
or
lcall
mov
and
or
mov
loopne
js
loop
aas
pop
cld
lcall
sahf
bound
and
mov
data16
inc
sbb
or
fucomip
xor
shrl
and
mov
sbb
sub
leave
add
push
pushl
popa
dec
aad
fistps
cmpb
jno
inc
xor
incl
pushl
xor
inc
aaa
xor
sub
inc
cmp
inc
inc
xor
and
mov
add
add
imul
or
call
mov
jae
je
lods
shrb
pop
xchg
jae
xchg
pop
inc
test
mov
sub
rcrb
insb
or
dec
lock
mov
dec
sub
dec
jo
add
aaa
psrlw
outsb
dec
push
pop
jbe
or
ljmp
jle
ficomps
or
xor
ljmp
push
outsl
movl
xlat
jmp
call
setne
sbb
jg
imul
std
mov
decl
lret
sub
repnz
jle
iret
push
test
push
icebp
call
in
sbb
dec
inc
inc
cmpb
mov
push
das
pop
push
push
pushf
out
mov
scas
in
fcmove
lods
pusha
or
ja
add
fildll
dec
mov
add
dec
popa
into
push
jmp
xor
xchg
outsl
add
jle
xor
ljmp
out
pop
push
cmp
and
mov
orb
icebp
pushl
leave
push
add
in
push
xchg
aaa
dec
mov
mov
xchg
clc
ficoms
dec
sbb
dec
and
push
or
mov
clc
fbld
lods
or
in
pop
cli
in
xchg
enter
clc
mov
jp
clc
movsb
sbb
mov
xor
incl
push
subl
jl
mov
push
notb
addr16
scas
xchg
dec
clc
add
es
div
mov
xlat
ds
call
cmp
aaa
stc
mov
std
inc
push
cs
inc
push
adc
or
xor
mov
and
add
aam
popa
out
daa
or
and
out
pop
xor
call
or
addr16
outsl
and
and
mov
int3
mov
popf
clc
jge
or
stc
sbb
mov
push
rcrb
mov
sbb
jns
clc
add
call
adc
mov
call
pushl
mov
decb
mov
push
dec
js
mul
je
mov
jmp
js
mov
mov
adc
add
daa
hlt
nop
out
adc
jg
outsl
push
loope
add
ds
in
ja
dec
popa
jae
sbb
ret
or
or
mov
sub
lcall
movsb
aaa
xor
jo
add
push
pop
sti
pop
decl
push
outsl
mov
or
iret
xchg
cld
call
in
mov
or
cltd
sbb
sbb
fwait
in
in
pop
aas
mov
xchg
jmp
adc
in
into
dec
sbb
dec
lods
xor
xlat
popf
ljmp
sbb
push
adc
mov
xchg
pushf
test
pop
fs
jg
inc
dec
push
lahf
mov
outsl
outsl
cld
dec
in
jne
ret
jmp
or
shll
das
cld
mov
decl
mov
enter
fstpt
jns
ljmp
sbb
sbb
add
mov
daa
and
mov
add
pop
cld
mov
mov
xor
das
test
and
pop
stos
loopne
mov
push
xor
dec
push
movsl
call
push
lock
jns
pop
cmp
out
test
mov
sbb
jmp
int
int
pushl
in
movsb
cmpsl
hlt
fdivrp
mov
shlb
repz
sti
bound
das
icebp
xchg
icebp
pop
call
push
mov
inc
std
ljmp
repnz
into
mov
test
jg
push
push
mov
add
jmp
push
nop
lock
sbb
and
xor
decl
or
pop
dec
sti
scas
push
sahf
hlt
cmpl
add
pop
in
sbb
fisubrs
xchg
mov
add
incl
add
xor
cmp
sbb
fisubl
sbb
add
push
add
mov
test
dec
or
roll
pop
or
pop
sub
or
cmp
sub
cli
mov
in
add
or
sub
sbb
insl
call
push
je
movsb
and
fadds
sub
add
incl
xor
xor
inc
mov
iret
leave
sti
push
into
jg
insb
mov
or
mov
cmp
sbb
cmp
mov
jmp
cmpsb
jae
rolb
add
inc
sbb
pop
dec
sarl
data16
sahf
xchg
out
ljmp
aam
out
dec
dec
jg
sbb
add
push
fwait
jmp
mov
jne
ss
ret
adc
jmp
shld
and
jg
ljmp
call
int3
and
push
in
mov
xchg
in
sahf
jbe
test
call
std
add
mov
push
in
aas
in
cld
jl
dec
ljmp
les
add
frndint
stc
fcomi
loopne
add
jecxz
call
idivl
fdivrl
mov
jg
mov
out
add
fwait
pop
fdivrs
mov
cld
outsl
fwait
xchg
jne
sbb
push
mov
jns
dec
mov
call
xor
xchg
out
sarb
mov
jb
int3
mov
test
dec
xor
data16
mov
mov
xlat
les
inc
les
push
dec
je
fwait
mov
mov
or
pop
adc
or
dec
add
cmpsb
shrb
outsl
icebp
ljmp
iret
icebp
aad
call
jecxz
cli
sub
jge
data16
lcall
bound
loopne
push
mov
mov
int3
xchg
cli
dec
lds
cmpsl
mov
jb
in
sahf
fs
call
mov
dec
or
icebp
mov
pop
jbe
push
mov
loop
and
icebp
mov
loop
into
leave
lods
add
lods
std
loope
jb
loop
test
loope
movsb
ret
mov
sbb
sbb
pushf
mov
cwtl
jg
xchg
mov
jb
pop
lock
push
loope
ret
mov
and
and
fucomip
mov
int
stc
push
in
loope
fidivrl
mov
jnp
sbb
jmp
cld
xor
loop
cwtl
lock
and
sbb
add
mov
nop
aad
mov
ja
and
insb
out
out
mov
in
outsl
decl
loopne
iret
xchg
xchg
out
jp
test
inc
sahf
loopne
sbbb
cmp
mov
incl
pop
cmpsb
xchg
jl
in
test
pushf
xorb
jge
cmpb
mov
sti
xor
and
push
or
and
cmpsl
pop
inc
or
loop
ljmp
pop
jl
imul
jo
shr
jo
insb
iret
repz
sbb
mov
repz
test
pop
adc
xchg
loop
lods
aad
lcall
mov
sub
movsl
out
lock
inc
je
out
add
pop
mov
cli
scas
add
out
or
daa
pop
call
call
push
lock
incl
adc
out
jns
cmp
ud1
fistpll
dec
add
and
movswl
faddp
es
inc
lcall
jnp
dec
pusha
or
ljmp
arpl
dec
pushl
in
pop
add
daa
jns
dec
fadds
pop
mov
std
sbb
roll
shlb
in
push
pop
fimuls
pop
in
push
aaa
ja
mov
push
mov
dec
pushf
imul
or
dec
negb
pop
clc
inc
jp
xor
in
inc
xlat
push
jmp
fs
call
clc
dec
mov
sbb
lods
dec
fsubl
ja
jno
dec
repnz
mov
shl
mov
or
ficoms
mov
jmp
cmp
jo
shl
add
mov
sbb
fidivrl
and
call
incl
cmpsl
decl
loopne
xchg
inc
cmp
les
mov
mov
aaa
xchg
rol
mov
incl
push
out
lret
fildl
add
mov
sbb
in
leave
call
clc
iret
sbb
pop
adc
ficoms
mov
add
mov
mov
shlb
mov
aad
pop
movsl
jne
arpl
lcall
divb
adc
insb
popa
push
jg
xchg
add
sarl
push
mov
test
imul
jae
add
push
jg
pushl
shlb
xchg
lahf
push
mov
decl
dec
dec
leave
mov
inc
add
jo
dec
data16
ljmp
add
pop
das
add
xor
mov
jno
bswap
push
sbb
sbb
add
incb
cmp
call
aaa
and
icebp
movsl
xchg
repnz
andb
mov
clc
mov
jge
ljmp
mov
das
mov
mov
mov
out
mov
nop
jg
mov
and
incl
xchg
push
dec
inc
movsb
push
push
mov
mov
incl
or
adcb
add
stos
add
add
outsb
decb
push
sbb
inc
stos
add
jmp
movq
inc
sub
inc
add
pop
or
test
aas
xor
sub
inc
les
int
push
inc
add
or
mov
roll
test
add
adc
mov
leave
orb
jmp
dec
mov
push
hlt
pop
test
test
std
pop
mov
add
add
icebp
xchg
mov
dec
jge
cli
sub
or
popa
aam
dec
inc
scas
out
mov
loopne
mov
inc
fucomp
cmp
mov
mov
inc
jbe
jns
mov
aam
xchg
jge
add
add
jbe
repz
jb
sbb
mov
enter
cmp
add
dec
ss
pushl
xlat
cli
loopne
fs
push
daa
push
subb
add
std
mov
or
out
lods
mov
add
ret
es
inc
rolb
mov
pop
das
mov
inc
push
xor
scas
jecxz
outsl
cld
add
jg
sub
cmp
mov
mov
dec
inc
dec
jae
pop
call
outsl
popa
fs
stos
jp
dec
imul
gs
jg
je
add
fs
adc
mov
jne
decl
sub
mov
es
inc
cs
call
imul
jl
imul
icebp
in
or
xchg
test
and
pusha
call
push
pop
sub
lea
pop
add
je
push
in
orb
movsb
sbb
or
pop
out
aaa
out
add
sbb
outsb
push
call
lods
push
sub
add
push
xchg
cmp
insb
in
decl
pop
jae
mov
pop
mov
xchg
push
adc
out
mov
mov
sub
std
add
cld
sub
push
jmp
mov
icebp
lea
xor
out
jg
jmp
add
incl
pushl
push
mov
pop
jnp
testb
loope
lcall
pop
cmp
add
mov
imul
and
mov
mov
push
adc
aas
mov
sub
lods
mov
in
ja
jno
leave
cmpb
adc
sbb
incl
pop
add
shr
rol
xchg
cmp
jg
arpl
or
add
mov
test
ffreep
or
add
cmp
or
mov
repnz
je
mov
mov
es
outsb
lea
mov
outsl
lock
cmp
cli
add
mov
jmp
or
shlb
in
test
jae
out
ja
add
or
lret
push
and
adc
aaa
fbstp
sbb
or
mov
push
gs
clc
fisttps
out
je
lods
das
or
add
dec
pop
or
push
jmp
mov
add
add
push
push
push
int
out
xor
cmp
adc
mov
in
lcall
adc
or
cld
jg
adcl
pushl
sub
xchg
push
pop
lret
and
fmuls
inc
mov
cwtl
push
incl
jae
fisttps
addr16
push
ret
pop
popl
loop
xor
ljmp
adc
outsb
out
lods
inc
rcrl
dec
fdivrl
cld
sahf
test
mov
inc
or
xor
incl
repnz
in
or
jle
add
mov
add
jp
pop
pop
fisubl
mov
sbb
pop
lods
or
xor
push
imulb
lods
cmp
ljmp
bound
lock
jmp
mov
xchg
pop
mov
out
push
or
xor
shufps
push
loope
insb
incl
pop
pop
inc
adc
cli
stos
cli
int
popl
jle
mov
ret
jmp
jle
jmp
inc
mov
cld
mov
movsb
call
pushw
mov
sbb
call
addr16
call
iret
call
shlb
inc
stos
jmp
jg
mov
inc
call
jmp
lods
shr
je
adc
mov
jmp
call
or
sbb
mov
jge
or
add
jg
inc
icebp
mov
mov
sub
pop
jmp
add
mov
rol
fstpt
sbb
inc
popa
adc
call
cmp
jb
ret
inc
js
call
je
push
add
fimuls
loope
sub
add
decl
ret
pop
mov
inc
mov
pusha
sbb
popa
insl
or
mov
add
inc
dec
or
push
jmp
decl
pop
pop
call
or
cld
ljmp
data16
shl
or
dec
mov
jne
pop
push
add
or
or
pusha
test
push
adcb
sub
push
sbb
shr
jg
fldl
jb
sub
ja
pusha
jae
shl
or
add
mov
fsubs
movsl
mov
jmp
bound
jp
sbb
pop
mov
repnz
dec
popa
push
mov
fadd
sarl
cmc
ljmp
lock
push
scas
movl
jae
xor
data16
add
ja
mov
mov
pop
rol
add
cmp
lcall
adc
call
fs
cmp
jb
push
jmp
sub
dec
clc
push
push
mov
outsl
mov
shl
rcll
ret
mov
fists
rol
adc
ficoml
add
sbb
inc
out
pushl
test
sbb
call
dec
enter
jnp
inc
test
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
in
sbb
incl
jge
mov
sti
test
jle
push
js
add
push
fsubl
mov
sar
lcall
add
pop
loopne
inc
cld
inc
cmp
dec
jl
sbb
dec
out
jle
repnz
in
inc
dec
mov
in
call
cmp
cmp
mov
sub
xor
cld
xchg
push
inc
les
paddb
ds
cli
lods
xchg
shlb
xchg
push
arpl
iret
mov
ret
cli
lcall
cld
jbe
jg
mov
add
fadds
fwait
sbb
sti
mov
sbb
mov
mov
and
jbe
pop
mov
cltd
sbb
mov
divl
cli
inc
icebp
call
jl
test
or
std
lods
add
jg
ret
xor
xor
cmp
dec
lret
xlat
clc
xor
mov
jg
pop
pusha
jmp
dec
adc
and
or
je
push
adc
pop
pop
movsb
std
pushl
add
shlb
mov
or
icebp
inc
stos
aaa
fbstp
pop
add
and
inc
jo
icebp
movsb
push
scas
sub
fdivr
sarl
jg
hlt
enter
in
sub
mov
dec
and
lea
mov
add
out
pop
add
add
add
dec
pusha
push
pusha
adc
fdivl
push
add
mov
jg
jecxz
pop
dec
enter
test
das
and
rep
mov
fistps
xchg
sub
je
imul
mov
jbe
mov
pop
mov
cmp
and
mov
pusha
sbb
hlt
inc
ret
lock
popa
and
lcall
push
fs
std
ljmp
cs
inc
inc
andb
cmc
fistpll
ret
nop
movsl
mov
aas
jmp
nop
add
in
mov
push
xchg
add
adc
movsl
cmp
sahf
out
add
movsl
hlt
into
xor
dec
and
jg
and
jg
sub
add
adc
gs
or
jg
fiadds
out
fcoms
xchg
push
repnz
jle
add
ret
inc
push
bound
jecxz
push
sbb
cwtl
and
sahf
push
das
cmpsb
mov
jne
movsb
inc
js
setb
rol
add
jne
cmp
pushl
push
adc
lock
incl
pop
popf
shrb
clc
add
pushl
hlt
cmp
mov
add
idiv
xor
adc
dec
into
movsb
pop
mov
inc
ret
dec
in
jmp
sub
enter
cs
lret
lock
mov
xchg
jg
pushl
sbb
addl
jl
jmp
ret
ljmp
fnstenv
ljmp
lock
sbb
fcmovnbe
or
test
pop
and
ljmp
inc
decl
xor
or
arpl
mov
add
pop
fcoms
ljmp
and
adcl
lcall
jmp
xchg
and
dec
stc
js
iret
xor
sub
pop
sub
inc
pop
pop
dec
pop
pop
loopne
cmp
jo
cmp
cli
ffree
out
jg
psubq
push
push
xchg
testb
sti
mov
cmp
mov
test
mov
xor
cmpsb
cmpb
mov
aas
cmp
rcl
inc
inc
add
mov
inc
inc
rolb
das
hlt
mov
mov
aam
dec
in
icebp
js
loopne
adcb
jg
aad
shrb
outsb
sbb
jno
js
shl
arpl
jg
adc
push
pop
test
or
add
pop
inc
jmp
push
call
cs
subb
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
adc
negl
xor
icebp
addb
mov
pushl
jecxz
push
jl
lock
sbb
popf
int
and
inc
pushl
decb
mov
lret
mov
push
mov
lock
ljmp
addb
faddl
add
ret
pop
push
rolb
test
or
mov
xchg
pop
add
push
dec
cmp
dec
mov
mov
fistps
jecxz
add
push
mov
jmp
xor
arpl
xchg
inc
popa
outsb
push
outsb
insb
lcall
push
das
je
out
dec
outsl
ja
repz
lds
test
inc
loop
push
gs
aaa
repz
ficoml
xor
cmp
cld
push
inc
xor
mov
mov
cmc
mov
dec
cld
mov
pop
sub
jmp
mov
mov
in
aaa
cli
stc
xor
mov
jns
push
jo
mov
xor
decl
dec
int3
fcoms
div
cli
jmp
mov
shrl
dec
rcrl
pop
outsb
xchg
sarb
mov
and
add
sbb
pushl
pop
scas
dec
mov
cld
pop
mov
mov
gs
fisubl
out
sbbl
dec
jbe
inc
in
clc
js
dec
sub
pusha
sbb
scas
in
fs
jg
cmp
fstpl
and
jbe
add
ret
jne
sub
repnz
inc
aas
lock
int
cld
incl
dec
ljmp
sar
or
sub
push
divb
addr16
stos
cmp
pop
sub
iret
adc
scas
hlt
mov
je
shrl
add
pop
push
add
adc
mov
mov
out
dec
mov
mov
mov
mov
mov
jb
popf
movsl
add
xchg
and
mov
insl
dec
movsl
mov
push
and
fstpl
inc
sbb
or
mov
ret
ljmp
jg
xor
out
out
lods
movsl
push
aaa
mov
in
scas
mov
jge
cmc
pop
stos
xlat
cmp
cld
jg
cmp
push
outsb
iret
pop
mov
pop
enter
sbb
insl
push
inc
jle
pushl
arpl
push
or
xor
sbb
lahf
mov
repz
jg
outsl
arpl
xor
mov
negb
jmp
aad
repnz
repnz
divl
sub
push
and
adcb
adc
js
mov
shlb
dec
cmp
dec
and
outsl
cmc
pop
adc
xchg
mov
aad
push
mov
int
inc
jecxz
mov
sub
push
movsl
sbb
push
addr16
sub
hlt
stos
sub
sti
inc
cmp
in
jp
cmpsb
idiv
rcll
dec
pushf
mov
icebp
inc
xchg
sub
xchg
cmpsl
sub
pushl
je
jmp
leave
push
aad
test
adc
nop
ds
mov
incl
pop
pop
loope
jbe
mov
dec
nop
ret
sahf
mov
mov
jle
jg
movsl
call
dec
addr16
in
inc
cmpsl
pop
and
cmc
sub
add
push
inc
test
call
push
dec
xchg
jno
push
mov
out
fisttpl
mov
insb
fs
cmpsb
sar
pop
xor
lods
mov
imul
or
cmp
cmp
popf
in
mov
inc
sub
push
and
pushl
xor
sub
enter
shl
xchg
mov
pop
push
push
out
xor
pop
lds
fs
mov
pushl
lods
lahf
mov
xchg
iret
sahf
pop
or
mov
lcall
stos
jg
das
push
call
ss
pop
ds
in
or
rcrb
inc
sarb
out
add
ficomps
pop
cltd
loope
mov
insl
and
jo
cmp
aaa
lods
fs
cmp
mov
pop
hlt
lcall
mov
mov
xor
pop
orb
jmp
jg
insl
inc
jbe
or
xor
inc
xchg
pop
repnz
push
or
sbb
cmp
fwait
cli
decl
xchg
xchg
dec
stos
stos
cmp
icebp
lods
popf
lock
addl
aaa
std
push
mov
jns
cmp
stc
decl
push
movsb
lock
fldenv
pop
lcall
mov
adc
mov
mov
fistpll
and
cld
lcall
mov
inc
sbb
dec
mov
lods
daa
test
in
je
xchg
sub
mov
inc
and
xlat
dec
scas
push
push
xorl
xchg
jmp
dec
push
lea
and
inc
cmpsl
jmp
mov
xchg
ds
jg
pop
outsb
adc
sub
jecxz
cmpsl
mov
inc
jmp
cmc
ret
lahf
cs
lret
ret
mov
movb
std
mov
adc
xlat
xor
ljmp
aaa
cli
loope
repnz
push
jnp
adc
xor
or
mov
mov
push
bound
xor
arpl
test
mov
cmp
pop
je
ss
adc
in
fs
fidivs
sub
adcl
sbb
jg,pn
movsb
pop
xchg
imul
decl
mov
xchg
jno
mov
rol
in
push
outsl
adc
movsl
scas
push
lret
mov
xor
ret
xchg
mov
rorl
call
jbe
lcall
mov
push
int
xor
xchg
xchg
jns
inc
push
xorl
in
jmp
xchg
xchg
cmp
add
cmp
imul
in
clc
cwtl
mov
cmpsl
addb
or
outsl
pop
pusha
scas
or
fidivrl
arpl
rorb
scas
cld
cld
pushl
sti
test
pusha
pop
sub
je
iret
test
insl
push
inc
xor
test
movsb
ljmp
or
add
push
cmpsb
push
sbb
sbb
test
std
in
sbb
andb
lock
jb
fidivrs
inc
jg
std
sub
dec
js
adc
bound
sub
push
mov
icebp
add
mov
cld
sbb
addb
inc
test
mov
test
cld
movsb
push
in
mov
mov
lea
leave
repz
cmp
mov
leave
dec
in
adc
or
outsl
icebp
ljmp
popf
add
scas
out
cmp
xor
cmc
pop
sbb
ljmp
mov
pop
mov
mov
ljmp
mov
aaa
ss
mov
sub
sbb
aad
jle
xchg
lcall
cld
pop
call
push
jg
arpl
and
pop
and
rcl
pushl
inc
cmc
test
add
test
popf
jmp
bnd
sti
test
mov
lcall
repnz
scas
mov
dec
lret
bound
inc
scas
stc
pop
lcall
jnp
sahf
sub
jge
xchg
jecxz
std
cmp
repnz
data16
ret
out
rcrb
pushl
clc
and
sbb
inc
scas
pop
add
bound
insl
inc
push
jg
mov
mov
testb
lods
pop
push
mov
fbstp
adc
mov
xchg
mov
mov
sarl
inc
fidivs
cld
pop
and
in
sub
and
cmp
inc
sarl
jne
in
jmp
adc
lahf
xor
movsl
movsb
cld
repz
push
mov
push
mov
cld
pushl
jle
dec
sahf
out
add
rclb
in
mov
nop
mov
scas
jo
cmp
leave
pop
mov
sar
sbb
adc
fcos
mov
xchg
sub
stos
mov
xchg
mov
movsb
mov
push
sbb
mov
jg
loope
push
cltd
inc
stos
imul
pop
popf
pop
push
sub
dec
test
mov
mov
test
sub
leave
subb
sti
fcoml
cwtl
xor
sbb
jle
xor
xchg
mov
push
aas
or
ret
repnz
ljmp
cmp
jb
sub
pop
dec
pop
pop
jne
jae
outsb
into
or
aad
dec
xchg
outsb
mov
pushf
sub
dec
adc
dec
call
outsb
in
dec
fsubs
shl
movsb
lahf
icebp
pop
sbb
orb
mov
test
mov
bound
fiaddl
cli
dec
enter
cld
cs
jmp
in
xchg
jb
in
inc
test
sbb
nop
lods
pop
sbb
pop
sub
call
loopne
jbe
ja
ja,pt
push
and
es
dec
sahf
outsl
lcall
pop
adc
outsl
adc
ja
or
subb
mov
and
movsb
mov
addl
fsubrl
ja
inc
mov
add
into
sbb
sub
cmp
jg
mov
push
and
xchg
inc
add
fwait
sbb
pusha
sub
sub
sub
lahf
push
cld
xchg
pushl
call
xchg
jecxz
sub
dec
sbb
xchg
in
inc
test
ljmp
test
mov
dec
push
stos
sbb
shlb
xchg
adc
aad
cmc
dec
aam
test
jmp
sbb
push
clc
cltd
ret
popa
sbb
leave
mov
push
mov
incl
stos
loop
pop
cld
and
xchg
lock
rcrl
movsb
fnstsw
mov
xchg
cmp
push
adc
std
stos
push
sub
in
pushl
lret
pop
aaa
sbb
js
pop
hlt
mov
iret
dec
mov
call
xchg
aam
orb
xchg
sbb
test
dec
std
jne
pop
jae
jle
and
dec
jp
scas
decl
sbb
cli
icebp
jge
sub
push
mov
mov
ljmp
xchg
jns
jbe
jge
addr16
cmpsl
nop
xor
mov
inc
decb
das
push
ljmp
xor
ret
pop
sbb
pop
and
insl
sbb
jno
mov
xchg
jmp
adc
cmp
into
shrb
rclb
and
xor
rcrl
mov
and
cmc
cltd
xchg
dec
aas
decl
mov
es
leave
orl
shl
mov
addr16
sub
mov
and
xchg
aad
mov
fstpl
pusha
pop
lret
ljmp
decl
in
sbbb
sbb
mov
js
jmp
xorl
xchg
adc
mov
add
jo
push
call
roll
dec
adc
mov
imul
adc
insb
pop
std
adc
jno
cmp
decl
ret
movsl
out
cmc
jl
jae
push
pusha
mov
xor
add
sub
testl
mov
adc
add
ljmp
push
call
loope
mov
push
xlat
push
nop
sub
sar
push
hlt
clc
cld
mov
das
adc
sub
sbb
in
sbb
jmp
cld
xchg
jg
rol
repz
xor
inc
rcrl
inc
cs
int
mov
inc
outsl
xchg
pushl
push
inc
pop
hlt
mov
add
add
or
pop
ljmp
jmp
mov
rolb
dec
mov
xchg
lcall
test
push
mov
xchg
in
xchg
dec
and
mov
mov
cs
sti
jb
or
jbe
inc
pop
pop
sbbl
push
leave
nop
incb
sahf
negl
jns
outsl
push
lock
pusha
mov
lret
adc
aad
push
jae
jmp
lcall
mov
sub
xor
jns
lcall
fstps
lcall
cmc
insb
filds
jne
inc
pop
or
mov
push
fsubrl
aaa
out
cmpsb
push
enter
jg
pop
cli
sub
sbb
roll
into
and
lods
inc
xorb
mov
xor
push
daa
xlat
xlat
inc
fs
lret
roll
std
pushl
jecxz
fimull
das
mov
jge
fstpt
aad
sti
xchg
das
lcall
pusha
pop
test
jecxz
inc
divps
mov
xchg
imul
loopne
ret
adc
push
aaa
cmpsb
rcl
daa
call
rorb
or
sbb
rcll
ja
lock
sbb
ljmp
dec
pop
popl
jne
in
cmp
push
push
mov
adc
mov
lret
mov
mov
pop
test
sub
sbb
das
roll
mov
lods
lods
dec
xchg
cltd
mov
mov
and
sbb
add
incl
das
adc
or
jp
out
push
lahf
xchg
gs
xchg
jl
mov
mov
lock
mov
cmp
jne
lds
fs
jecxz
out
mov
mov
pop
popa
out
add
or
das
cld
ds
outsl
xchg
jmp
xchg
sub
imul
test
pop
add
inc
call
sbbb
xorb
mov
stc
roll
cld
js
push
mov
push
lcall
mov
fcompl
xchg
aaa
dec
test
movsl
aas
mov
incl
negl
leave
iret
out
lcall
fistl
imul
mov
xor
in
inc
xor
insl
add
push
push
mov
sarb
push
xor
jne
aas
hlt
jecxz
inc
cmc
loope
pop
inc
int3
outsb
pushf
mov
ljmp
subl
xor
js
jmp
jo
add
cmp
pushl
xchg
xlat
push
lret
push
inc
mov
loope
repnz
shr
inc
mov
xchg
aas
icebp
ljmp
sbb
cmpsl
repz
dec
out
xchg
lret
cmpl
out
incl
pop
imulb
mov
imul
mov
mov
cmp
call
cmpb
fmuls
es
cmp
inc
orb
mov
cmpsb
xor
xor
testl
add
pop
lds
movsl
dec
rcrb
sub
lock
out
fwait
mov
or
pop
hlt
add
ljmp
std
fstl
std
mov
or
adc
jg
das
push
out
std
lcall
lea
sqrtps
roll
lahf
test
aam
push
fstpt
jmp
mov
jp
pop
jnp
xchg
cmp
mov
dec
pop
jecxz
call
std
ljmp
push
lret
test
arpl
daa
dec
sti
or
popf
and
lcall
mov
dec
in
loope
fucom
cmp
in
xor
cmc
clc
loopne
jp
sbb
jle
mov
jo
out
sbb
loope
insl
sahf
pop
imul
decl
xchg
icebp
add
pop
push
cmpsb
xchg
xor
jno
movsl
pop
iret
jmp
fistps
leave
cmp
sbb
fucom
or
sub
inc
mov
sti
scas
das
clc
jg
out
inc
add
pop
sbbb
mov
fwait
or
decl
xchg
jae
notb
cmp
iret
fidivs
mov
aas
and
ds
add
fucomip
inc
scas
pop
xchg
lock
xchg
pusha
imul
pop
mov
mov
clc
ljmp
and
mov
std
sbb
test
jge
fidivs
icebp
incl
xor
in
sub
jne
xchg
pop
fucomip
mov
ss
dec
jmp
mov
aaa
fwait
push
inc
xchg
jno
or
sub
inc
shr
dec
jmp
imulb
dec
mov
std
mov
aas
mov
icebp
cmp
test
ss
pop
mov
add
stos
leave
jle
push
ljmp
lcall
inc
aam
cmpl
push
push
je
add
dec
sbb
ja
push
sar
std
jbe
fwait
and
mov
mov
jge
leave
and
jmp
dec
test
stc
xlat
lcall
std
adc
inc
cmpsl
or
xchg
mov
push
ljmp
inc
pop
sub
mulb
in
add
pop
push
dec
out
sti
dec
push
cli
jmp
add
push
into
inc
outsb
xchg
and
ss
stos
mov
test
fld
mov
aas
push
cmp
and
push
out
fiaddl
xor
mov
mov
lds
xchg
mov
pop
adc
push
mov
outsb
add
decl
pop
movsb
jg
mov
loopne
jl
mov
lret
divb
int
daa
sar
mov
pushf
call
fistl
and
pushl
adc
dec
pop
or
sub
divb
xor
jg
jge
xor
push
push
push
mov
mov
stos
or
pop
pop
popf
adc
insl
cmp
or
mov
xor
push
clc
sbb
call
mov
aad
lret
mov
mov
repnz
lcall
and
xorl
loop
sbb
insl
dec
fnstenv
enter
ljmp
mov
aad
jo
add
cli
popf
std
mov
cld
call
jle
addb
sbb
pop
hlt
mov
pop
jb
mov
stos
or
ljmp
and
in
pop
xor
cld
or
mov
insl
jb
adc
repnz
inc
lret
outsl
cmpsb
data16
shlb
sub
sbb
ffreep
add
mov
mov
dec
pusha
pop
mov
popf
jae
push
adc
out
or
div
call
loopne
sub
mov
popf
or
pusha
cld
out
jge
jg
cwtl
idivl
mov
addr16
pop
pop
adc
daa
sbb
cmp
mov
aaa
repnz
mov
dec
lods
push
jecxz
sub
mov
push
aaa
mov
into
nop
push
test
insb
push
imul
pop
scas
lea
mov
cmp
decl
hlt
and
push
xor
sub
ret
insl
pop
std
int
incl
fs
mov
mov
movsl
hlt
adc
jbe
ror
cltd
ljmp
std
mov
mov
sub
movsb
dec
push
pop
inc
nop
mov
mov
and
mov
push
mov
adc
xchg
inc
mov
pop
sub
xchg
ucomiss
lds
das
cld
dec
aam
lds
pop
cli
out
xor
and
aaa
cmp
aas
adc
add
ret
pushl
mov
lahf
sbb
out
pushf
mov
xorb
xchg
jl
imul
jge
cld
cmp
xchg
subl
arpl
fcmovb
jns
sbb
imul
fs
in
ret
insl
lods
mov
decl
fnstcw
cmpl
mov
fsts
xchg
and
jbe
rorl
cmp
pop
push
jmp
test
xchg
xor
das
cld
cmp
shll
aam
imul
mov
repz
inc
mov
pop
fucomp
ss
fistpll
mov
shl
clc
sub
outsb
idiv
cmp
loop
jecxz
jg
fxam
out
dec
in
rcrb
push
addr16
pop
dec
lret
dec
cmpsb
cwtl
iret
or
mov
pmulhw
push
leave
or
xor
xor
sar
in
add
jne
psrlw
out
lret
xchg
loope
ret
dec
pop
mov
inc
aad
out
xchg
repz
or
faddl
jg
mov
mov
sbb
sub
sub
mov
out
jg
pop
lds
pop
jmp
lea
mov
pop
ret
in
lods
or
daa
cmpsb
jl
cwtl
pushf
jae
cmp
or
fs
mov
pop
inc
data16
ljmp
dec
sbbb
pop
push
mov
cld
icebp
sub
pop
pusha
mov
int3
stos
call
pop
loop
jle
jg
rcrb
push
cmpsb
cs
or
std
pop
ss
add
lock
pop
pop
xor
mov
data16
incl
iret
pop
mov
aaa
xor
lcall
add
lahf
sbb
fistpll
jmp
cli
mov
add
ljmp
xor
cmp
inc
sbb
insl
mov
fs
mov
mov
jl
cli
mov
sbb
mov
mov
fsubrl
mov
ljmp
lret
inc
fcoml
or
out
popa
jge
jg
sbb
push
je
mov
loop
out
cmp
mov
dec
insb
xlat
in
enter
fistps
xor
sahf
cwtl
std
nop
push
fcos
dec
or
sbb
dec
imul
xor
lret
mov
pop
ljmp
mov
xor
cmp
popa
pop
shr
repnz
pop
mov
lods
ljmp
add
or
in
bound
inc
mov
sti
pushl
and
or
mov
dec
orl
aam
into
cltd
fsubs
std
hlt
call
lds
cmpsl
and
sbb
stos
xchg
sub
lods
pop
int
mov
ljmp
and
inc
adc
and
sbb
pop
jg
cmp
jle
lods
jge
sarl
dec
loope
push
or
in
sub
fidivs
sbb
popa
lods
and
mov
popl
arpl
dec
lcall
dec
hlt
inc
xchg
pop
mov
sub
mov
jne
mov
mov
std
jg
fwait
ret
or
daa
sahf
pop
iret
and
outsl
dec
sub
popa
insl
outsl
sub
fistps
sbb
mov
ret
xor
lret
add
faddp
mov
cmpsb
lret
lcall
ljmp
pop
bound
sbb
jnp
push
jle
lock
ljmp
inc
pop
or
add
xchg
lret
js
sub
jmp
flds
cmpl
xchg
pop
push
dec
lcall
iret
gs
lea
bnd
jnp
out
mov
test
pop
jg
ljmp
orl
sub
iret
adc
jp
dec
nop
gs
pushl
lds
inc
movsb
xchg
xlat
inc
fldcw
adc
js
int3
mov
mov
fdivrs
fnsave
or
cmp
inc
jns
inc
sub
test
add
in
jbe
call
clc
daa
cmp
rorb
sbb
aam
mov
imul
jnp
fistpl
insb
jg
push
dec
pop
jae
fmuls
jge
jp
outsw
movsl
jg
lock
das
mov
pop
add
sarl
repz
and
test
outsl
xchg
stos
push
sub
roll
and
jbe
mov
jnp
jae
bound
mov
pop
jne
roll
jl
sbb
je
test
xor
or
mov
in
pushl
xchg
cmp
jne
xchg
sub
fsubrs
dec
mov
incl
in
mov
dec
add
shll
fnsave
add
cmc
out
shlb
mov
xor
sar
sbb
repz
mov
inc
pop
cwtl
or
aas
pop
sti
roll
js
lock
pushl
xor
xor
in
mov
shlb
add
jne
push
push
outsl
xchg
sub
lds
jne
leave
pop
scas
outsb
pop
jp
mov
mov
pop
filds
popa
icebp
repnz
adc
aam
fildl
bound
in
adc
js
mov
sti
icebp
insb
pop
bound
mov
in
pop
xchg
fistps
lock
lcall
imul
mov
rol
xchg
adc
icebp
pushl
xchg
ss
fnstenv
add
test
xor
xchg
add
fcmovnu
ljmp
cli
sbb
dec
loop
fnop
sti
xchg
decl
xor
orb
xor
outsb
pop
test
xchg
addl
dec
sbb
decb
js
test
sbb
leave
or
jmp
sub
inc
xchg
or
dec
rclb
int3
dec
fisubs
push
sub
mov
jne
mov
mov
jg
call
sarb
push
adc
push
jg
jl
inc
cli
push
push
cmp
pop
add
bound
icebp
cmp
lahf
outsl
add
mov
stc
pmaddwd
pop
daa
dec
mov
pop
ja
das
insb
hlt
mov
mov
mov
ja
add
aaa
je
stos
inc
and
daa
and
inc
std
pushl
push
insb
ss
xchg
rcl
aas
sarl
mov
sti
add
push
insl
ja
mov
imul
dec
lock
push
inc
loope
push
mov
mov
decl
ss
repnz
adc
inc
mov
enter
xchg
jp
bnd
dec
fsubs
cld
jg
scas
mov
cmp
clc
sub
loop
push
aaa
ljmp
pop
aas
pushl
pop
fwait
icebp
adc
mov
and
dec
or
pop
mov
sar
outsl
hlt
arpl
dec
test
std
cmp
jmp
mov
or
cmp
imul
cmpl
jp
scas
insl
inc
mov
xchg
pop
call
inc
aas
out
mov
mov
int
adc
cmpsb
xchg
in
or
mov
call
mov
mov
pusha
sti
push
or
jg
fmull
addr16
mov
dec
xor
loopne
pop
jbe
lahf
jg
mov
xchg
incl
test
insb
xor
stc
shl
aad
push
jg
ds
shrb
test
popa
shrb
pop
gs
js
jmp
std
out
cmp
popa
ljmp
in
inc
mov
out
push
ficoms
cmp
mov
stc
inc
adcb
js
jne
inc
out
sti
and
jne
stos
mov
out
clc
addr16
in
je
int3
push
aad
inc
stc
adc
out
xchg
adc
mov
inc
decl
std
sub
fisubrs
dec
lahf
pop
pop
jmp
add
pop
clc
push
shll
clc
adc
xchg
call
pop
push
or
insl
jmp
movsl
push
scas
sbb
loope
mov
pop
cli
adc
roll
mov
rcl
repz
xor
nop
jbe
sbb
std
lcall
sbb
mov
push
jnp
lahf
add
push
mov
jg
mov
aaa
int
jb
divb
in
cwtl
in
cwtl
scas
je
aas
cli
ljmp
cmpsl
inc
sbb
xchg
push
inc
jns
enter
and
jg
lcall
pop
aam
enter
adc
imul
adc
aaa
cli
decl
decl
mov
mov
pop
out
mov
cld
mov
test
cmp
aaa
pop
mov
lcall
fptan
test
flds
push
movsb
insb
les
incl
mov
sar
cli
fmuls
mov
xorb
aaa
cli
sbb
lcall
push
jl
push
mov
xchg
sbb
jg
mov
pop
mov
push
mov
test
mov
ss
mov
loopne
cltd
mov
hlt
andl
les
add
pop
mov
icebp
xchg
jecxz
add
outsl
out
call
psllw
js
push
or
and
int
sbb
mov
mov
call
cmp
xchg
fwait
mov
aas
pop
sbb
mov
pop
push
or
lcall
loop
sarb
adc
in
shlb
dec
jo
push
cli
jmp
repz
xchg
lds
test
xor
pushl
xchg
cmpsl
or
push
fwait
enter
insb
fidivl
loopne
mov
fstpt
js
mov
ret
sub
sbb
lds
std
jg
or
repnz
push
cwtl
sub
dec
pop
lcall
ljmp
ficoms
inc
lods
mov
cmpsb
xor
pop
or
and
add
je
lcall
in
shrb
cmp
pop
jno
mov
clc
pop
ljmp
jns
loop
hlt
mov
cmp
ss
test
fists
aam
sahf
push
sub
inc
cltd
cltd
dec
inc
mov
pop
fsubrs
lock
out
push
incl
adc
xor
xchg
addr16
xor
push
sbb
pushl
or
mov
arpl
jg
and
pop
mov
jmp
ljmp
cmpsl
jg
pop
loopne
scas
push
hlt
arpl
sbb
nop
and
lock
sub
cli
pop
push
sub
ficoms
sbb
das
loopne
jg
hlt
fildll
xchg
cs
mov
jge
sbb
mov
inc
lcall
mov
pop
cmpb
aas
cmp
aas
cld
incl
mov
or
cmp
add
adc
push
std
incl
inc
push
repz
push
xor
lock
fsubl
sarl
mov
std
inc
daa
loop
daa
ret
popa
add
jmp
add
popf
test
inc
js
xor
mov
mov
mov
push
and
adc
dec
lock
stos
out
pop
or
in
aam
xchg
xlat
lcall
sarl
xor
dec
pop
and
pop
cmp
pop
ds
mov
adcl
push
rcrl
jnp
cmpsb
mov
add
ljmp
jg
call
jnp
inc
into
cmc
mov
loopne
inc
aam
pushf
xor
decl
xor
cld
bound
push
cltd
ret
je
cmp
enter
pop
jp
call
das
rol
pop
xchg
pop
inc
sub
jl
hlt
call
dec
leave
lods
movsl
push
cltd
shlb
or
mov
decl
xor
mov
int3
pop
or
pop
mov
fsubr
mov
dec
pushl
addr16
pop
aaa
shll
icebp
clc
lods
jmp
call
jmp
fsubrl
push
js
enter
bound
dec
or
adc
pop
mov
pop
mov
inc
incl
mov
push
bnd
lods
out
pop
clc
xchg
mov
push
fnstsw
icebp
jl
fbstp
ja
outsl
mov
incl
push
fstps
jns
mov
subl
in
das
jg
dec
cmc
sti
sub
pop
ficoml
std
jmp
les
aam
push
mov
mov
pop
inc
mov
lds
notl
out
nop
mov
fisttps
add
popa
inc
mov
jbe
sbb
aaa
cli
call
dec
sbb
sub
inc
andl
pop
sti
ljmp
subl
in
leave
or
stos
lock
jl
outsb
and
push
subb
adc
push
mov
aad
pop
js
outsl
in
mov
mov
mov
push
lahf
push
mov
dec
mov
lcall
subb
push
add
push
push
addr16
fcoms
decl
mov
shll
popa
sub
addr16
add
mov
imul
pushl
hlt
xor
mov
pop
rol
popf
sub
mov
mov
jg
jmp
mov
add
xor
dec
incl
cmp
ficomps
mov
inc
fcmove
mov
sbb
scas
mov
test
add
ret
mov
xor
mov
das
incb
inc
mov
mov
or
cwtl
and
clc
sub
das
dec
std
decl
movsl
pop
cmpsl
int
rcll
jo
or
or
mov
test
or
rcrl
nop
outsb
or
ret
leave
push
clc
sub
stos
shlb
mov
scas
mov
das
icebp
aaa
cld
mov
lahf
in
lods
jbe
out
push
adcl
mov
ljmp
mov
mov
outsb
enter
and
adc
mov
movsb
sub
jp
idiv
cli
pop
add
loopne
add
jns
rorb
pop
pop
mov
pop
call
decb
frstor
sahf
aad
scas
mov
push
int3
adc
pop
xchg
pushl
call
insl
xchg
mov
iret
xchg
popl
mov
clc
ss
cltd
inc
push
test
mov
sbb
cmp
adc
cmpsb
pop
fisubrs
rclb
xchg
out
lds
aas
push
add
jnp
jg
xchg
and
add
xchg
insl
insb
stos
mov
ret
jg
pushl
jbe
pusha
pop
xor
das
mov
les
pop
mov
lcall
inc
gs
stos
sub
xchg
mov
lret
pop
ljmp
ret
jne
jg
cmpsl
idiv
sbb
repz
inc
pop
mov
dec
dec
hlt
push
mov
jbe
sar
mov
cmp
pop
xchg
adc
aad
shrl
xchg
hlt
sbb
mov
std
mov
push
jb
test
cmp
push
das
dec
dec
popa
sub
notl
dec
mov
jge
inc
pusha
mov
das
push
repnz
mov
adc
out
push
mov
mov
test
and
gs
push
pop
jns
jmp
jno
dec
and
dec
iret
ret
pusha
pop
xlat
add
inc
clc
decl
xor
les
in
fldt
je
iret
push
mov
cmp
cmc
adc
jg
cld
jmp
imul
mov
cltd
push
add
lret
cmc
and
mov
jmp
aad
dec
ret
and
loope
cld
jg
loopne
or
mov
lock
mov
incl
stos
call
push
and
orb
lds
and
adc
das
adc
loope
cmp
pop
jmp
dec
jno
inc
cmpb
and
inc
mov
fmulp
mov
sub
stc
jbe
aas
cmp
push
and
aas
add
icebp
stc
data16
push
or
scas
mov
fistpll
decl
pop
loop
das
inc
jae
repz
jecxz
ljmp
pop
jg
adc
enter
shr
movsb
xchg
int
mov
mov
call
lock
outsl
pusha
jle
rclb
push
push
lds
mov
sarb
pop
insl
filds
test
popa
pop
lods
into
clc
push
enter
test
jbe
cld
push
fistpl
rcrb
aas
jno
sahf
scas
add
pop
mov
sub
outsl
adc
cs
mov
or
mov
inc
imul
pushf
pushl
ret
lods
cs
mov
jge
push
push
xor
pushl
cld
mov
loopne
sbb
mov
shll
jne
mov
lahf
or
lock
pusha
xabort
out
push
mov
test
rol
repnz
hlt
pop
cmp
loope
or
test
popf
dec
jecxz
xor
cld
add
lcall
cwtl
scas
stos
or
stos
and
cld
xchg
outsb
scas
mov
fcompl
mov
mov
sti
test
or
or
incl
cmc
adc
scas
fbld
test
cmpl
mov
test
repnz
xor
stos
fisubrs
out
jo
sub
loop
outsb
call
dec
clc
pop
cli
jmp
out
and
cld
pop
std
in
loop
fisttpll
push
outsl
ja
icebp
mov
mov
push
int3
add
and
movsb
adc
icebp
cmpsl
sbb
adc
std
xchg
daa
mov
cmp
jg
mov
mov
jecxz
mov
xchg
xlat
and
pop
pop
cs
xor
scas
dec
mov
fiadds
sub
leave
mov
call
aaa
sbbb
in
lods
push
sub
push
loop
add
out
mov
adc
fsubrp
jp
sbb
fsin
ljmp
pop
mov
lahf
mov
cmp
fstpt
dec
scas
xor
sub
fists
xchg
out
mov
inc
mov
lret
fsub
push
jb
and
adc
mov
ljmp
popa
adc
inc
jmp
movsl
movsb
aaa
clc
pop
ret
mov
in
outsb
xlat
shl
xor
xor
ss
add
mov
std
decl
pop
sbb
fmull
add
push
sub
in
add
shll
out
pushl
cli
jp
inc
pop
ds
std
adc
sub
sub
mov
lret
and
push
dec
xor
outsl
rorb
shrl
roll
lods
sbb
test
into
jg
sub
mov
push
fwait
in
ss
lret
out
inc
movsl
jge
pop
xor
lods
enter
aas
cmc
rcl
stc
loop
int
sub
or
mov
fdivrl
inc
btr
push
cmpsl
mov
xor
lahf
or
loope
dec
movb
insb
je
aaa
hlt
incl
adc
test
ss
mov
mov
cmp
call
mov
jmp
inc
jg
int3
xchg
pop
and
push
movsb
outsb
ds
mov
cmc
cmp
stos
je
xlat
push
or
mov
sub
dec
xor
adc
scas
arpl
jno
mov
adc
clc
push
mov
inc
in
pop
mov
or
ljmp
cmp
movsb
pushf
or
lea
or
out
ljmp
jae
js
jmp
sub
xor
rclb
int
push
sar
mov
mov
mov
call
cld
ret
rcrb
movsb
rcll
jecxz
cmp
inc
or
mov
ret
mov
mov
dec
sbb
mov
inc
dec
push
inc
xchg
dec
pop
cmc
cmp
test
mov
mov
mov
call
out
inc
sbb
jne
or
mov
mov
int
add
mov
fldt
es
dec
arpl
adc
fucomip
repz
mov
in
jg
pop
jnp
mov
ja
dec
decl
clc
push
pusha
pop
inc
sub
bnd
outsb
mov
lods
leave
jbe
jle
incl
pop
fucomp
sub
push
xchg
in
out
jno
jne
mov
idiv
jg
incl
or
loope
or
dec
out
inc
cmp
mov
jl
add
fdivl
add
andb
ljmp
lock
in
fistpl
lock
sub
lret
ds
mov
repnz
ffreep
mov
jmp
jo
fwait
sub
out
aas
or
stos
xchg
push
mov
pusha
mov
mov
ljmp
push
push
sbb
push
push
sahf
add
sub
loopne
sar
ljmp
mov
pop
xchg
push
scas
iret
or
xchg
ret
mov
lock
lcall
jg
mov
stc
mov
push
out
jg
hlt
push
adc
mov
incl
dec
mov
out
jl
pushf
mov
dec
sbb
jmp
fiadds
pop
mov
pop
mov
adc
rcrl
sub
and
lret
cwtl
pusha
out
aam
inc
in
sahf
sbb
movsl
pop
jmp
outsb
dec
mov
jg
push
xchg
js
and
pop
adc
fcmovu
stc
incl
mov
mov
mov
adc
loopne
fimull
rcr
lcall
jmp
in
jmp
mov
cld
clc
sub
adc
leave
das
pop
mov
add
decl
aad
fwait
popf
orl
mov
pop
pop
push
mov
mov
cmp
or
push
mov
clc
lret
lods
js
fwait
aam
push
in
inc
or
pop
cmp
jmp
hlt
jecxz
das
lcall
cwtl
add
pop
jae
pxor
push
je
pop
call
in
sar
jg
mov
rol
xchg
inc
adcl
decl
lock
mov
push
xor
jnp
jbe
sub
jg
mov
hlt
xor
hlt
jne
push
pop
push
dec
fwait
xor
jne
incl
jns
dec
aas
ret
stos
and
and
xor
add
test
adc
add
dec
scas
fcoml
jno
and
cmp
aas
fwait
aam
mov
mov
mov
pop
mov
add
mov
into
mov
sti
call
and
loopne
jp
jo
addb
lea
or
sti
mov
decl
lahf
in
pop
sub
adc
leave
fdivp
bound
std
mov
sub
jb
and
test
jge
movsb
in
aaa
call
and
clc
aaa
sub
jae
daa
inc
fmull
jp
movsl
loop
lcall
xchg
inc
mov
dec
mov
movsb
inc
lds
push
xchg
out
cli
mov
xor
ss
fisubs
addr16
loopne
mov
call
mov
jl
xor
scas
sbb
push
insl
lods
dec
std
jg
xor
inc
adc
adc
popf
jo
lods
and
mov
aam
xchg
push
xchg
sub
enter
hlt
std
lcall
sbbb
pushf
push
into
enter
stos
mov
call
ret
sbb
das
loop
mov
mov
mov
popf
ljmp
call
and
fbld
xchg
fst
aas
fstpt
repz
daa
pop
mov
pop
cmc
pop
mov
lea
push
jg
jg
les
mov
gs
outsl
ljmp
shll
out
in
test
jno
add
sti
inc
adc
push
cmc
lret
jo
cmpsl
mov
ljmp
out
sbb
test
or
js
sbb
jno
mov
add
fildll
inc
lods
cmp
cli
pop
test
in
lock
ljmp
int3
arpl
mov
lock
pop
or
lcall
xchg
mov
mov
lret
in
cmp
rdtsc
push
out
mov
mov
xchg
bound
ss
roll
sbb
ffreep
pop
clc
cmpsb
lock
ss
push
addr16
mov
push
decl
fstpl
fisubrl
sbb
mov
pop
stos
mov
cmpsl
lcall
psubb
fsubs
mov
push
in
mov
adc
cmc
out
ljmp
roll
jle
ficomps
sbb
xchg
cltd
sub
int3
sbbb
cltd
scas
xchg
sub
lcall
loop
test
repnz
bnd
popa
ds
push
mov
decl
push
sbb
xchg
mov
add
les
test
insl
fcomps
les
cmp
dec
stos
nop
arpl
mov
mov
dec
dec
sbb
jnp
sbb
sub
jns
and
xchg
cmp
out
jae
mulb
or
sbb
pop
je
lea
test
jp
stos
xor
jg
fcomip
test
out
mov
ljmp
in
int3
xorb
push
jp
push
cli
ds
push
movb
push
mov
push
mov
pop
xchg
in
leave
xchg
in
sbb
push
test
xchg
or
decl
adc
cmp
pop
mov
sbb
cmp
out
stc
lcall
fidivs
popl
ljmp
frstor
jmp
in
fcomip
jg
and
inc
pop
or
mov
int
lea
pop
lahf
pusha
fidivrl
movsl
or
in
pop
adc
xor
mov
jmp
mov
lret
lods
lods
adc
push
arpl
lock
incl
and
outsl
pop
inc
jnp
cli
jcxz
xor
adc
ret
mov
fistpl
dec
inc
in
out
adc
mov
js
sbb
xchg
mov
or
in
inc
pop
aaa
in
inc
mov
loopne
sbb
adc
jg
pop
add
pop
sub
jne
cmpsl
loopne
popa
cmp
and
jecxz
cmc
call
push
daa
mov
imul
orb
cwtl
add
lcall
pusha
in
dec
mov
dec
mov
push
adc
ljmp
cmpsl
xor
imull
push
je
push
shl
dec
cmpxchg
push
sarb
add
xor
rolb
ja
loope
push
mov
mov
ret
in
jp
in
dec
ficomps
ds
in
imul
es
inc
cltd
mov
pop
icebp
jmp
lods
or
inc
or
xchg
jnp
push
pushf
fldt
inc
inc
pop
pushl
js
data16
cmc
negb
pushf
aaa
mov
je
sub
xchg
inc
es
mov
sub
lea
mov
mov
clc
jmp
sbb
dec
pop
xchg
cli
add
and
loop
test
into
arpl
mov
cmp
fisubs
pop
and
push
shll
add
xor
add
push
loope
call
arpl
stos
mov
mov
lds
push
sbb
jmp
in
add
loope
test
mov
xchg
jns
sbb
mov
pop
ret
sbb
jg
cmp
out
es
dec
cmpsb
and
in
cmpsb
xor
fiadds
push
in
scas
sbb
or
daa
mov
mov
stos
pop
jecxz
lret
stos
dec
jmp
adc
out
jno
stos
mov
or
inc
outsl
sti
and
xor
mov
jo
mov
aaa
fbld
leave
push
mov
js
xchg
pop
cmp
mov
in
ljmp
ficoml
inc
mov
scas
cmpsl
cmc
iret
pop
sbb
fcompl
mov
jne
jmp
mov
rorb
cld
decl
push
arpl
fwait
jg
arpl
add
arpl
mov
ljmp
inc
sub
inc
cs
stc
roll
push
jo
and
subb
loope
jg
pop
clc
daa
push
lcall
test
stc
fcmovbe
test
out
pop
out
aas
pop
xchg
test
jecxz
jl
lds
les
xchg
dec
and
decl
or
mov
push
xchg
nop
ret
jle
mov
push
add
aas
test
jg
lock
aaa
inc
fisubs
mov
add
cli
pop
clc
ljmp
sub
sti
jecxz
push
mov
mov
cmp
jg
pop
xor
ret
pop
cmp
sub
dec
mov
add
pop
cli
push
fsubr
cwtl
dec
sub
cmpsb
lcall
dec
push
xchg
jae
and
adc
mov
xchg
mov
fcomip
ljmp
int
sbb
cs
mov
decb
jnp
js
das
add
mov
fisttpl
les
negb
incl
add
rcrb
test
jno
jge
fs
stos
jne
jne
xchg
and
rcrl
push
decl
or
sahf
mov
jbe
xor
jg
adc
jno
test
mov
andb
popf
call
jp
jbe
pop
jb
leave
and
cmp
aas
push
cwtl
pushf
cmp
pop
add
or
jl
leave
ja
aas
adc
fildll
sbb
insb
ds
sub
pushl
mov
sbb
ficoml
mov
enter
jmp
push
mov
data16
pop
mov
jl
insl
ror
addr16
mov
sbb
jmp
dec
pop
or
pop
imulb
push
lods
xchg
stos
xchg
std
lcall
out
popa
lods
inc
addl
mov
stc
pop
leave
nop
pop
xchg
js
pop
sahf
xchg
xor
mov
jns
mov
pop
iret
daa
push
pop
mov
ljmp
mov
mov
inc
push
das
sti
fstpt
jg
jae
into
xchg
pop
cmc
sbb
adc
movsb
ret
sub
enter
adc
and
outsb
sbb
cwtl
dec
dec
mov
or
jmp
xchg
lea
cmpsl
insb
imul
outsb
and
jmp
dec
mov
inc
ja
lahf
mov
es
xor
lcall
mov
std
iret
jecxz
mov
mov
mov
dec
fdivrp
pop
mov
sub
test
js
push
adc
jg
sbbl
pop
cli
pop
jmp
push
adc
push
out
test
xchg
push
out
and
jb
sbb
jnp
stc
push
adc
decl
std
xor
add
push
pop
mov
out
cmpb
pushf
jle
sbb
test
popf
mov
fisubrs
call
iret
inc
mov
mov
stos
aas
movsb
je
sbb
adc
aaa
mov
insl
push
popa
jge
cmp
fistpll
call
je
loop
in
jl
inc
out
in
ret
ret
fdiv
jb
jg
pop
dec
test
lret
push
out
test
mov
xlat
int3
inc
push
outsb
faddl
jg
loopne
addl
or
mov
jg
inc
out
sahf
push
dec
enter
mov
dec
rcrl
cmc
inc
out
mov
decl
in
loopne
ret
ret
inc
adc
ljmp
ret
mov
iret
xor
fsub
push
test
mov
lcall
inc
or
cwtl
and
cmpsl
sub
inc
cmpsl
outsl
xor
decl
ret
popf
jmp
mov
xor
inc
sbb
inc
jbe
dec
mov
jnp
inc
mov
out
in
xor
mov
adc
xchg
push
xlat
mov
xchg
mov
dec
xor
inc
push
mov
std
sub
mov
mov
add
xchg
mov
mov
dec
mov
daa
inc
inc
xchg
dec
gs
shlb
and
add
repz
div
out
lahf
add
jge
test
pop
lcall
filds
push
jne
sbb
push
push
push
icebp
mov
cwtl
cmp
push
pushl
push
adcl
scas
mov
add
xchg
fstpt
mov
mov
add
icebp
sbb
adc
dec
pusha
cmp
aad
mov
xor
lcall
add
lods
inc
stc
xchg
add
or
aaa
pop
call
jno
mov
and
xchg
lcall
sub
adc
jo
jge
addl
sahf
popf
lock
cmc
jle
jge
icebp
decl
adc
mov
addr16
jl
arpl
cld
or
enter
jg
dec
sbb
pop
cmpsb
loopne
inc
popa
adc
jle
xchg
nop
roll
push
or
ljmp
jno
call
shrl
cmp
out
push
or
out
sti
adc
imul
out
aam
ja
or
inc
or
mov
xlat
inc
and
ljmp
mov
adc
cmp
xchg
sbbl
adc
push
mov
push
push
les
add
ret
outsl
in
call
out
fs
imul
mov
xor
pop
mov
add
cwtl
insb
and
lds
leave
sbbl
pop
ss
ret
test
push
jecxz
shll
insb
push
imul
push
aad
negl
lcall
cmpsb
mov
dec
mov
lds
fs
jg
incl
je
mov
pop
dec
cli
int
lret
mov
or
aas
mov
sub
mov
inc
pusha
in
push
or
xchg
sub
jae
sti
pushl
in
jbe
stc
sbbl
pop
out
mov
xor
jg
jnp
cmpsl
push
movb
push
add
cmp
pop
jmp
mov
adc
dec
sbb
pop
xchg
pop
push
xlat
xor
cli
mov
test
stos
or
sbb
movsl
lcall
push
xor
xchg
jg
dec
dec
in
cs
sub
fwait
dec
aad
pop
ud0
stos
fmulp
ds
cld
andb
xchg
fidivrs
jg
aas
std
lcall
lret
mov
out
fsubrs
mov
cwtl
mov
push
out
or
addr16
add
sbb
xor
add
cltd
mov
dec
ret
cmp
and
cld
test
pop
lcall
dec
and
out
or
and
fwait
cmpl
add
lcall
jmp
pop
adcl
push
and
jg
mov
ficompl
and
push
xor
mov
mov
mov
andl
mov
sub
xlat
ja
mov
mov
repnz
out
std
insb
xor
jge
mov
outsl
icebp
out
call
cmp
mov
xor
mov
mov
outsl
and
mov
mov
enter
stos
pop
call
inc
pop
mov
sub
pusha
xor
cltd
and
sti
mov
sub
lahf
lcall
pushl
test
dec
aas
js
orb
pushf
daa
adc
adc
incl
ljmp
adc
test
in
lds
push
jmp
icebp
aas
in
ds
fdivrp
sbbl
mov
or
pop
cli
cs
xchg
lea
dec
mov
xor
pushl
std
xchg
pop
pop
inc
lret
or
xchg
mov
int
stc
out
in
dec
or
addb
lcall
daa
outsl
cmc
fisubl
cmovs
das
mov
adc
adc
adc
loop
fildl
xchg
cmp
fwait
adcb
int3
cmp
jno
sar
jmp
cmp
cmp
aad
pop
cld
mov
scas
test
mov
decl
xor
pop
dec
lcall
lcall
add
in
xchg
pushf
mov
aad
cld
xor
mov
mov
mov
imul
mov
incl
xchg
adc
pop
pop
cmp
pop
aaa
test
or
lods
bound
leave
loop
xor
add
push
push
mov
mov
mov
hlt
add
scas
das
lahf
lcall
outsl
xor
enter
in
enter
sbb
mov
loop
ljmp
mov
aaa
das
rorl
call
jmp
std
mov
shr
adc
cld
xlat
sub
xchg
movsl
mov
add
inc
and
lcall
rclb
mul
xor
testl
lds
sti
adcl
add
adc
push
xorl
and
jg
jmp
scas
arpl
mov
or
shll
mov
movl
jmp
push
in
leave
jbe
cmp
fnstsw
mov
pop
pop
test
cld
in
movb
xchg
daa
inc
sbb
add
ljmp
mov
or
or
movsl
jo
xor
jne
test
out
inc
add
clc
mov
fbld
arpl
push
dec
je
repnz
shr
push
jmp
les
loop
jge
es
mov
test
push
push
dec
orl
jl
sete
ljmp
mov
mov
ljmp
jmp
dec
pop
or
xchg
int3
dec
lcall
mov
sub
push
fildll
out
and
imul
jge
mov
loope
arpl
push
mov
addb
fcmovnu
dec
sti
mov
push
jns
lea
sar
xchg
xchg
cmp
lahf
sar
and
testb
out
mov
or
jne
int3
movsb
mov
inc
and
sbb
jg
dec
aad
mov
cld
js
pop
jno
and
aas
jle
ljmp
mov
sub
movsb
addb
mov
sub
push
in
pop
movsl
cli
dec
push
imull
inc
lock
cmpsl
fistpl
jg
sbb
or
and
aam
and
movb
out
fbstp
lea
mov
cmc
lds
inc
lods
fdivrl
loope
in
outsb
outsb
loop
lcall
jmp
pop
cltd
mov
and
and
or
ret
push
jl
jo
lcall
mov
push
das
fs
rcrb
loope
push
add
pushl
repnz
insb
cwtl
or
pop
sbb
mov
mov
out
sbb
inc
push
inc
sbb
aas
inc
stos
xlat
cmovo
stos
cld
imul
push
pop
xchg
test
mov
jecxz
sar
xchg
stos
pop
rcrb
mov
dec
loope
jg
xchg
mov
sbb
scas
push
inc
pop
shll
das
test
je
xor
dec
notl
ss
cmpsl
dec
jns
push
lahf
test
and
int3
push
test
or
mov
roll
mov
sarb
ja
cwtl
push
adc
lahf
xor
mov
ljmp
ret
daa
push
fbstp
lock
dec
addr16
jbe
push
loop
cmc
jno
call
cmp
dec
jecxz
dec
add
fwait
and
jl
and
pushf
imul
add
xchg
fbld
xor
add
xchg
sub
ss
and
and
mov
adcl
dec
addr16
clc
jg
mov
mov
rcrl
jle
nop
cmc
push
fisubrs
movsb
pop
jb
xchg
decl
mov
push
mov
scas
int3
jmp
movsl
add
pushl
decl
jl
inc
mov
pop
dec
movsb
pop
push
or
imul
jp
push
xchg
outsb
dec
test
push
dec
fldl
pop
push
dec
mov
shr
repnz
jb
imul
aaa
adc
xlat
pushl
loopne
sar
sar
lods
leave
sub
insl
fwait
in
fistl
mov
xor
push
inc
pushf
mov
cmp
pusha
les
cli
push
and
add
ljmp
test
jns
xchg
jmp
icebp
push
jecxz
lea
pop
in
inc
xchg
cmp
mov
outsl
icebp
outsl
push
jmp
xor
lea
push
cmc
mov
push
int3
inc
pushl
es
stos
jecxz
nop
hlt
out
xchg
and
dec
jg
sbb
mov
jbe
subb
clc
flds
inc
mov
into
mov
and
ffreep
subl
and
ja
or
fld
aam
lret
mov
add
ljmp
cld
loope
ret
push
xlat
xchg
.byte
.byte
out
.byte
and
hlt
jo
adc
dec
push
xor
call
jo
leave
xchg
daa
add
jo
and
int3
push
cmp
enter
adc
enter
jo
push
add
mov
out
outsb
add
pop
testb
je
movzwl
mov
sbb
fs
out
inc
pop
ret
arpl
pop
mov
lods
jo
jo
jle
enter
mov
add
jmp
repnz
push
push
mov
jne
xor
pop
mov
int3
and
xor
mov
add
lea
mov
mov
mov
inc
insl
incl
mov
mov
push
sub
add
push
mov
pop
in
out
repnz
dec
clc
test
dec
mov
mov
mov
add
or
adc
add
mov
sbb
divb
or
push
mov
ljmp
push
push
push
mov
mov
mov
mov
mov
imul
ja
or
push
or
ret
adc
insl
jnp
orb
add
jmp
add
pmaxub
dec
jbe
or
cmp
jne
mov
mov
push
test
pop
xchg
insl
loope
pop
clc
mov
dec
cmp
jb
mov
add
xor
int
bound
jne
mov
xlat
sbb
or
dec
popa
insl
sarl
aas
sub
jp
add
cs
sub
jmp
mov
inc
mov
jnp
stc
daa
jnp
decl
lock
aam
test
or
fldt
or
push
sbb
sti
jne
or
sti
in
ja
mov
mov
cmp
pop
mov
decl
and
push
push
dec
pop
push
mov
cmp
sarl
jbe
arpl
and
jecxz
add
fdivp
popa
fst
clc
add
mov
mov
movl
pusha
push
dec
push
insl
cmp
dec
and
in
cmpl
jbe
outsl
mov
mov
loop
incl
jbe
sti
xchg
push
and
mov
add
mov
or
dec
jmp
bnd
out
lods
mov
mov
add
sbb
cmp
int3
mov
mov
jbe
add
sbb
rorb
movl
adc
cmp
das
add
in
fcmovnu
xchg
or
sbb
mov
dec
jns
sub
in
scas
stos
adc
hlt
mov
mov
mov
and
or
ret
pop
loop
imul
push
cmp
or
lds
mov
sbb
nop
or
jle
add
mov
cmp
xchg
xchg
push
adc
sti
push
push
ror
ss
fmuls
jmp
ss
mov
popf
into
or
sub
addr16
xor
jmp
jne
and
sub
inc
mov
cmp
jae
mov
out
jae
es
mov
std
sbbb
inc
popf
xor
movsl
lea
or
sub
inc
clc
mov
lcall
das
mov
add
jns
jmp
cmp
jg
jbe
cmpsb
sub
xlat
pop
push
add
jbe
push
xchg
mov
inc
ds
or
jne
stos
add
movsb
int3
mov
sub
movsb
shrl
enter
rcl
arpl
cli
ds
outsb
sub
add
cmp
fwait
mov
mov
fldcw
pop
pop
stos
push
pop
add
xor
xchg
add
sbb
clc
jle
jne
adc
mov
jmp
ds
push
lods
lahf
inc
xor
test
jne
cmp
dec
jmp
imul
test
mov
mov
cmpl
sub
lock
inc
dec
or
xor
pusha
xchg
dec
movb
loope
and
sbb
ljmp
inc
xor
cmp
jae
mov
in
fcomps
sub
inc
add
lret
mov
fdivrs
ret
xor
cmp
pop
ds
popf
cmc
adc
cmp
or
jp
insl
jmp
pop
lea
sbb
std
mov
pushl
mov
push
cmpb
and
loopne
dec
mov
addl
or
pushw
lret
mov
jbe
cmpl
adc
shlb
leave
mov
add
les
jo
mov
movb
sub
pop
pop
pop
mov
push
jge
sub
ret
fistps
push
jmp
mov
mov
or
test
and
and
add
nop
sbb
add
adc
sbb
inc
mov
adc
xchg
push
stos
xor
movsl
dec
sub
mov
pop
in
pusha
mov
xor
jmp
pushf
sub
jecxz
mov
outsl
pop
fistpl
push
cmp
cld
cli
adc
adc
cmp
rcll
mov
cmp
roll
stc
add
pop
aam
mov
jmp
push
sub
mov
mov
add
cltd
lods
or
ret
outsb
mov
mov
pop
dec
in
shll
or
cmp
notl
repz
test
in
mov
mov
sub
lea
andl
mov
sti
jl
movl
mov
je
outsl
adc
or
or
or
incl
ljmp
ja
jecxz
or
adc
xor
or
push
or
sub
orl
cmp
dec
dec
or
ret
incb
mov
sbb
or
add
add
push
arpl
jae
jmp
adc
ret
pop
add
testb
and
jb
hlt
addr16
sti
cmp
sbb
add
push
arpl
xor
add
pop
add
add
adc
push
addr16
arpl
dec
pusha
push
loopne
or
scas
cmp
jp
or
add
and
lea
cmpsb
andb
out
lea
sub
jg
xor
sub
or
adc
add
sbb
outsb
jae
clc
jmp
adc
pop
subl
mov
cmp
test
fimull
mov
xchg
add
adc
rcrb
or
mov
popf
lods
lea
add
xchg
add
ret
inc
jmp
sub
add
sub
insl
arpl
aaa
mov
es
ret
nop
hlt
rcll
sbb
mov
sbb
cmp
mov
inc
pop
inc
or
test
mov
orl
or
xor
mov
add
int3
ds
ss
inc
or
or
jle
daa
lcall
enter
shll
pop
cmp
push
iret
cmp
loope
pusha
addl
mov
fnstenv
dec
or
or
data16
push
mov
cmp
xor
cmp
pop
add
or
add
popa
mov
sbb
mov
mov
out
subl
orl
adc
rcrl
dec
add
mov
mov
pushf
inc
or
dec
and
fcoms
xor
xor
xor
dec
mov
cltd
mov
mov
xchg
jg
adc
or
or
rcrb
ret
xor
mov
clc
cli
pop
ret
mov
xchg
xchg
or
pop
jg
jo
mov
pop
inc
adc
je
pop
jmp
idivl
pusha
adc
jne
or
push
imul
and
in
jbe
sub
jge
jge
or
loope
cmp
add
addr16
inc
lock
imul
scas
mov
adc
add
xchg
fs
push
sub
cmp
pop
popl
lods
sbb
dec
and
add
jmp
int
sub
or
push
mov
test
mov
je
sti
clc
aad
or
mov
inc
lock
xor
add
gs
rcr
fildl
or
inc
adc
xchg
xorl
in
je
mov
ret
scas
inc
push
shlb
sbb
or
das
jo
cmpl
inc
mov
ret
outsb
lret
add
notb
stc
jmp
sbb
sbb
iret
cmp
pop
popa
dec
out
and
add
xor
sbb
in
loope
mov
negl
arpl
mov
mov
mov
pop
scas
dec
cs
ret
push
lea
sbb
jne
testl
cmp
cwtl
adc
or
clc
mov
test
mov
add
cmp
or
fidivrl
iret
and
push
inc
mov
pop
jbe
cmc
orl
or
out
fiaddl
xchg
lcall
lret
sub
jbe
dec
cmp
insb
jo
sub
pusha
orl
les
mov
iret
popa
cmp
aaa
inc
scas
pop
clc
orl
jmp
inc
cmpl
jl
fwait
mov
push
or
or
adc
lea
cmpsl
xchg
cmp
nop
sub
sbb
movsl
popf
and
scas
and
mov
cmpsb
push
xor
mov
sub
jge
dec
pop
cmp
jno
cmp
clc
mov
fldcw
add
ja
dec
orl
out
or
push
bound
or
jge
add
sete
enter
adc
dec
pop
out
mov
pop
testb
push
fldl
dec
mov
or
fimuls
test
fimull
lcall
push
ret
insb
ss
mov
mov
andl
adc
jnp
push
in
or
and
adc
xor
das
dec
add
daa
add
cli
or
mov
clc
aam
push
ret
xlat
xchg
fbstp
add
mov
push
add
les
lods
xchg
jo
inc
popf
fbstp
sbb
mull
test
ret
rorb
dec
xlat
ljmp
add
enter
push
jmp
andb
in
mov
fiaddl
ret
or
adc
sbb
stos
jg
xchg
pusha
gs
in
daa
addl
and
aas
adc
add
sbb
cld
jmp
ja
jo
ret
arpl
pusha
dec
lea
push
jge
ja
push
mov
lret
xchg
and
mov
inc
adc
sahf
cmp
adc
nop
and
cmp
jo,pt
jle
call
or
push
jmp
pop
xor
pop
in
je
sbb
outsl
loopne
stc
leave
je
xchg
sbb
enter
mov
fistpl
xor
mov
ret
sub
pop
fldcw
sbb
jne
adc
dec
adc
jns
out
lock
push
scas
and
pop
jecxz
or
sub
call
test
cwtl
add
fcomip
dec
mov
cmp
ja
mov
mov
and
fisubrl
and
adc
lods
mov
loopne
push
cmp
sbb
xlat
movsl
cmp
ja
je
outsl
test
cmp
sub
movsl
mov
and
rep
sub
adc
testl
add
xor
test
in
or
mov
lret
and
cmpb
sub
and
jnp
add
out
in
mov
fdecstp
sti
jmp
cmp
xor
xor
shrb
popf
ljmp
test
sbb
pop
ja
fstp
push
and
jmp
aaa
cmp
leave
xor
mov
mov
fnstenv
fldln2
inc
inc
or
pusha
loope
sub
addr16
stos
xor
dec
pop
pushl
jp
mov
divb
push
push
sub
add
push
aaa
daa
sbb
aas
and
push
adc
ret
push
mov
in
adc
jne
popa
outsb
jnp
dec
jmp
push
or
into
in
ja
mulb
cmp
jb
add
and
mov
inc
imul
push
call
jns
cli
mov
sbb
adc
push
aam
cmp
and
fsubp
mov
push
loop
imul
int
loopne
add
notrack
or
stos
mov
stos
pop
das
add
aaa
mov
xor
xor
mov
push
inc
push
and
in
in
clc
mov
push
sub
je
and
je
xchg
xchg
xchg
pop
pop
je
xor
daa
adc
inc
xchg
je
in
sub
fucomi
xor
or
cmp
ja
lea
add
add
sub
out
int
imul
push
neg
jle
js
pop
sub
arpl
jo
jmp
inc
and
pushf
mov
sub
mov
filds
jb
dec
and
fcom
std
adc
or
into
add
nop
cli
in
jb
jne
dec
pop
xor
mov
das
xchg
and
pushl
das
stos
jle
and
sbb
add
and
pop
push
out
je
and
je
in
ds
rclb
aas
clc
movzwl
lea
push
xor
cmp
hlt
sub
push
mov
pop
mov
sub
jbe
insl
mov
fs
push
das
hlt
push
xor
out
lret
clc
add
sub
pop
jbe
mov
xchg
inc
test
out
mov
call
and
callw
testl
mov
lods
stos
dec
inc
push
push
inc
push
inc
lcall
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
js
mov
add
jecxz
fldcw
jle
aad
mov
or
push
cld
ret
push
adc
jbe
mov
mov
cli
in
push
push
adc
jmp
fcoms
push
push
push
push
sbb
and
or
pop
add
mov
loopne
push
pop
push
sbb
js
push
int
je
sbb
call
cmpb
je
add
jne
mov
in
xor
xchg
xor
fstl
xor
push
pop
loope
xchg
mov
in
pop
pop
xchg
daa
adc
loop
in
mov
pop
ret
cmp
adc
test
inc
add
rol
fnsave
adc
cmp
and
cmp
das
arpl
je
cld
ja
pusha
das
lods
add
or
incl
or
jl
je
cmp
mov
std
into
cli
out
push
je
sub
and
adc
pop
push
rcrl
inc
pusha
add
stos
mov
jp
stc
sub
arpl
or
add
xchg
unpckhps
or
push
cmp
inc
jmp
orl
push
test
mov
push
insl
sti
sbb
sub
push
push
fmull
jno
pushl
jge
mov
pop
add
inc
add
sub
jecxz
add
scas
mov
jecxz
loope
arpl
mov
adc
stos
inc
adc
mov
xor
inc
das
sbb
test
and
push
mov
fsubs
xor
ljmp
insl
fdivp
test
or
pusha
add
ja
or
lods
push
imul
mov
out
adc
xor
mov
inc
orl
call
shrb
fsubl
gs
mov
pop
add
jg
je
cmp
push
sub
ljmp
je
pusha
add
out
incl
jb
je
jmp
cmp
cmp
adc
and
sub
cmp
decl
xorb
jmp
mov
jmp
mov
ljmp
mov
jmp
mov
lea
mov
jo
or
push
incl
dec
cld
enter
pop
ret
add
adc
cwtl
icebp
dec
pop
je
sub
or
movsb
cmp
js
arpl
push
adc
sbb
pop
pushf
mov
cli
lods
mov
aam
mov
jl
sbb
or
loop
xchg
mov
mov
and
popa
xchg
pusha
inc
shll
enter
inc
outsl
adc
mov
or
sub
and
add
jns
in
pop
jp
cmp
or
add
adc
sti
sbbb
fimull
cs
call
pop
jo
sbb
sub
pusha
jle
dec
mov
inc
fiadds
jnp
fdivl
cltd
rclb
jg
xor
fscale
test
fstps
fdivl
pop
mov
mov
xor
and
sbb
cmp
jle
ja
mov
mov
repz
insb
in
xlat
add
add
or
dec
push
adc
out
rcrb
xor
sub
movb
or
push
or
mov
sub
mov
filds
cld
cltd
idiv
add
lods
rcr
adc
mov
cmp
add
loop
testb
xchg
je
fisttpl
ret
pop
or
out
test
xchg
bound
fistpll
pop
fisubrs
pushl
add
mov
mov
fdivs
xchg
lea
call
sbbl
pop
fs
or
jo
push
and
mov
cmc
call
xchg
xchg
pop
ss
add
das
imul
sbb
ja
sbb
sbb
lret
mov
negl
mov
sarl
inc
insb
outsl
cmp
cmpl
adc
shlb
pop
mov
aad
jne
movsl
adc
jl
fcompl
movsb
push
pop
cmp
fnsave
pop
loope
scas
jp
lds
test
insl
add
sub
push
and
add
aaa
adc
cmp
test
lods
sahf
mov
pusha
movsl
out
sbb
push
jo
mov
sub
add
sti
popa
outsl
mov
sub
jl
les
popl
xchg
movsl
mov
rol
add
dec
clc
dec
jl
lock
std
mov
or
adc
pop
jb
aam
mov
sub
movl
push
or
fistpll
dec
jne
and
inc
jg
insl
lock
xor
dec
jae
mov
dec
cld
and
add
fistpl
xchg
dec
out
ret
inc
sarb
rolb
fscale
add
adc
pop
movw
pop
mov
inc
scas
or
clc
lcall
mov
imul
push
sub
test
jae
lock
icebp
outsb
xor
leave
ja
push
cmp
pop
fimuls
outsl
pop
cmp
mov
add
mov
pop
pop
addl
call
sub
jne
sub
jmp
push
sbb
scas
rcl
pop
sub
ret
in
pop
pop
sbb
dec
inc
out
jle
cmp
rorb
sti
ljmp
imul
sub
ja
add
push
shr
mov
adc
das
push
pop
cmp
jne
dec
je
mov
sbb
lods
rclb
jne
xchg
or
fisttpl
add
pop
pop
mov
sub
push
stos
fistl
jne
je
push
mov
and
jmp
pusha
ja
into
sbb
adc
or
jmp
adc
jmp
or
cmp
outsl
fs
inc
jle
cmp
push
mov
mov
xchg
xchg
lea
push
dec
mov
pushf
rorb
loope
adc
pop
or
repnz
adc
adc
pop
adc
xchg
and
outsb
icebp
insl
mov
xor
pop
cld
dec
jl
mov
movsl
mov
and
icebp
cmp
jle
and
stc
add
xchg
push
mov
sbb
lahf
inc
cmp
adc
jg
pop
mov
push
mov
dec
js
mov
inc
lcall
jecxz
sbb
repz
or
pop
test
iret
mov
in
pop
mov
mov
adc
clc
or
and
jle
add
cmpl
lea
jne
jbe,pn
or
loopne
mov
pop
push
mov
jo
cli
jmp
bound
mov
roll
xor
cmp
fsubrs
cmp
jl
icebp
dec
mov
add
aad
xchg
mov
cmpl
fs
pop
clc
imul
call
fcmovnu
sbb
cmp
adc
rcll
jo
loopne
jmp
push
aam
stos
add
xchg
xchg
insb
fldenv
add
xor
jmp
mov
ljmp
mov
push
negl
push
and
ljmp
jg
cmp
push
mov
sub
xor
aas
pop
enter
push
adc
lock
arpl
lea
push
push
roll
mov
pop
or
cvtdq2ps
dec
pop
fs
ret
mov
mov
fsubl
xor
pmaxsw
push
fistps
jae
mov
scas
cli
nop
xor
and
vmovlhps
xor
shlb
cltd
leave
jbe
or
mov
outsl
adc
sub
lds
outsb
or
add
ss
cwtl
xchg
pusha
add
sbb
insl
test
inc
sub
pop
adc
sub
cltd
cmp
or
aam
mov
pushf
arpl
cmpsb
mov
inc
out
or
movsl
mov
adc
push
jnp
sub
test
jmp
sbb
loope
mov
bound
mov
push
sbb
or
and
and
jbe
inc
sub
daa
mov
lea
push
test
decl
loop
add
inc
mov
pop
or
jmp
push
mov
pop
cli
sbb
or
leave
jne
mov
xchg
pop
and
xor
cmp
nop
jecxz
les
mov
jl
xchg
sbb
mov
inc
loop
or
dec
test
es
mov
mov
out
mov
nop
push
xchg
xor
dec
mov
push
inc
lods
insb
add
shll
in
mov
aaa
or
fiadds
sub
dec
push
enter
cmp
enter
addr16
pop
enter
insb
push
xor
pop
orl
push
push
dec
dec
or
enter
cmp
enter
xor
enter
xchg
nop
mov
orl
test
jl
in
xorl
in
xchg
movsb
sub
or
pusha
and
movups
pusha
ret
push
mov
fidivrl
push
div
shll
mov
or
outsb
mov
pop
jae
cmp
and
xchg
js
adc
mov
pop
push
js
ljmp
out
mov
lea
movzwl
add
add
outsl
rcr
movsb
jb
inc
popf
inc
mov
pand
add
add
jne
cmpsb
out
outsb
adc
lret
add
push
mov
dec
fistpll
pop
add
dec
xchg
add
fsubr
or
mov
xchg
jg
sbb
std
push
mov
in
in
xor
lea
mov
xchg
int
scas
push
repnz
dec
add
jg
pop
inc
xor
lea
cmp
jbe
fwait
pop
fiaddl
dec
add
cmpb
aaa
sti
in
pop
sub
inc
push
cmp
sbb
pop
inc
js
cmp
ret
jbe
push
or
fdivs
push
add
push
sbb
outsb
sub
jmp
sbb
lods
adc
and
xchg
xchg
lea
clc
sub
mulps
jae
dec
or
xor
mov
add
lea
push
mov
mov
or
in
mov
adc
fidivs
test
rcll
and
mov
clc
sbb
mov
dec
insb
enter
or
mov
xor
xchg
push
sub
xor
mov
sbb
insl
outsb
sbbb
pop
sbb
mov
nop
xor
add
sbb
fwait
push
mov
and
jno
fcompl
xor
and
out
push
inc
lea
les
sbb
in
pop
pop
and
jno
fs
and
cmp
pushf
pcmpgtb
dec
dec
mov
push
test
push
rcll
aaa
fcoms
jb
cmp
add
hlt
aaa
cltd
sub
mov
inc
inc
dec
jne
out
sub
cmp
xor
and
and
or
push
add
mov
dec
xor
mov
sub
adc
and
shrb
xor
adc
sbb
jae
lods
jl
iret
cmpl
sbb
jae
mov
mov
add
add
nop
adc
cmp
xor
inc
mov
inc
movsb
pusha
test
jns
in
lods
adcb
test
inc
cmp
pop
mov
mov
imul
gs
xor
cs
insb
xchg
inc
jb
popa
je
sti
outsl
add
insb
push
popa
jo
push
divb
dec
sbb
dec
imul
mov
pop
dec
gs
pop
sbb
jg
insb
dec
push
adc
arpl
jae
gs
outsl
jb
mov
pop
mov
or
inc
xchg
push
pop
mov
leave
mov
insb
mov
outsl
pop
dec
outsl
fs
nopl
push
sbb
insb
push
push
push
mov
add
inc
iret
inc
nop
pop
inc
xchg
xchg
add
adc
and
sbb
insb
divb
std
adc
enter
in
lock
mov
cld
xor
insl
in
rolb
xchg
xor
cli
mov
das
jb
out
fsts
push
push
adc
test
outsb
testb
mov
in
xchg
mov
sub
mov
clc
cltd
in
jae
es
clc
xchg
mov
leave
enter
and
lock
repnz
xor
imul
and
inc
inc
call
call
cmp
push
mov
pop
cmc
push
xadd
in
pushf
add
or
mov
stc
ljmp
adc
or
out
incl
push
cs
jne
je
outsb
adc
lret
and
xchg
cld
sbb
int3
clc
mov
enter
fistps
movsb
mov
pushf
pop
mov
mov
jb
jnp
sub
adc
pusha
lock
adc
inc
mov
push
and
or
sub
mov
lods
das
cltd
xchg
cmp
pop
dec
sub
imul
pop
rcrl
push
jb
inc
imul
call
cld
loop
aas
sahf
and
mov
shr
mov
jae
xor
inc
movsb
mov
and
pop
and
orl
inc
lcall
pop
adc
das
dec
pop
jns
xor
das
aaa
repz
enter
add
enter
ror
out
lret
into
enter
aam
add
jo
notb
mov
mov
sub
pop
arpl
mov
mov
icebp
push
dec
lea
clc
push
and
add
add
jcxz
xchg
pop
adc
fmul
mov
mov
jge
mov
push
inc
add
shlb
or
dec
mov
or
mov
mov
mov
dec
arpl
mov
icebp
push
movl
pop
mov
int3
ret
jae
inc
xor
or
xor
ret
mov
or
push
popa
out
lahf
jge
ja
mov
mov
mov
sahf
or
dec
inc
mov
ret
mov
fwait
dec
inc
add
push
inc
pop
dec
xchg
dec
push
cmpl
jb
outsb
imul
out
jno
rcl
add
mov
mov
das
inc
sbb
rol
leave
mov
mov
ret
mov
out
dec
aaa
aaa
xor
subb
popa
jbe
and
adc
repz
mov
adc
shl
push
mov
inc
jbe
jp
sub
mov
lcallw
dec
in
arpl
jae
inc
ss
popa
push
je
int3
aaa
add
pop
insb
add
paddq
or
fwait
insl
mov
jl
add
pop
fsubl
inc
ret
sub
pusha
add
inc
mov
insb
inc
cmp
pop
stc
cmpsb
inc
push
cld
rcrl
sbb
push
das
sbb
and
add
jo
imul
inc
setae
mov
dec
add
idivb
call
dec
inc
inc
push
push
add
inc
pop
adc
add
sub
pop
push
pop
add
aaa
xchg
or
and
sti
dec
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
das
inc
jb
outsl
jb
out
sti
sbb
push
iret
je
insl
and
and
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
and
roll
cmpsl
xor
loopne
mov
dec
pop
push
add
add
add
or
add
jl
orb
add
mov
inc
add
add
or
push
add
add
fbstp
adc
inc
add
xor
mov
out
dec
add
arpl
outsl
add
hlt
decl
es
aaa
mov
pop
fwait
cmp
or
lldt
and
mov
jmp
fildl
add
adc
push
pop
mov
int
mov
push
push
xchg
mov
addr16
insl
and
jae
and
and
add
jb
push
imul
aaa
jo
stc
outsl
push
inc
in
dec
add
add
add
stc
popl
adc
popa
xlat
rorb
add
faddl
pusha
add
xor
jbe
inc
inc
pop
pop
fbstp
add
lock
xor
fldl
or
xchg
sbb
or
push
pop
xor
add
xor
test
and
nop
fistps
rorb
push
jbe
data16
and
testb
push
mov
xor
out
or
inc
test
jns
xchg
out
ret
fwait
dec
mov
rcr
jb
std
fildll
call
add
pop
cs
lret
jns
and
push
jnp
data16
in
mov
push
ljmp
add
mov
pop
push
aas
or
add
xchg
sbb
fstpt
dec
out
or
xchg
and
fldt
stos
inc
addr16
jbe
pushl
shll
fwait
lahf
lret
jo
jecxz
ja
jne
xlat
fdivl
and
sub
lahf
pushl
pop
dec
dec
push
and
into
test
pop
idiv
mov
mov
jp
xchg
mov
xor
mov
mov
mov
jecxz
popa
jg
fildll
xor
outsl
pop
jne
jae
add
bsr
cwtl
mov
dec
bound
stc
lret
pop
cs
mov
bound
push
fdivs
jb
test
gs
mov
imul
pop
mov
xchg
fistl
ss
es
shll
dec
fwait
insl
mov
iret
stc
outsb
mov
sti
mov
adc
sti
inc
mov
stos
push
mov
lret
jecxz
dec
ret
push
jg
movsl
dec
xor
or
ret
test
fcompl
das
pop
sarb
idivb
out
cmc
jae
sbb
movsb
shlb
mov
pop
lds
insl
xchg
pop
xchg
jne
cmp
push
mov
fwait
rclb
in
mov
pop
js
fwait
and
sub
or
scas
fs
push
dec
in
xchg
ljmp
sub
pop
xchg
or
call
fcomps
jbe
lret
lret
outsl
outsl
in
frstor
sahf
fimuls
adcl
mov
pop
mov
pop
sti
pop
nop
mov
jg
ljmp
aas
sidtl
int
int3
sub
push
jns
jle
ret
push
cmp
ret
insb
xlat
mov
xlat
test
outsl
ljmp
shll
fmull
mov
mov
divl
imul
dec
outsl
decb
orb
xchg
ljmp
xor
xchg
jg
clc
les
pusha
fildl
pop
dec
mov
fwait
aaa
mov
mov
std
enter
mov
push
movsl
xchg
mov
adc
pop
jmp
and
and
cmp
jnp
ror
pop
imul
lret
jmp
sub
idivl
xchg
sbb
adc
push
jg
or
add
in
addl
cmp
inc
push
sbb
lock
dec
push
pop
cmp
addb
jl
popf
push
adc
sub
call
mov
sbb
sahf
sbb
jmp
sahf
sbb
nop
loopne
fadds
daa
dec
rolb
jg
adcb
jb
insb
jno
mov
mov
cmp
mov
push
inc
sti
pop
xor
add
sub
aas
sub
mov
outsl
push
mov
jg
lock
dec
test
dec
insl
sti
negb
out
sub
push
or
fistps
push
push
mov
jg
fs
adc
nop
push
mov
ljmp
mov
mov
mov
and
sub
ja
fstpt
or
pop
adc
mov
inc
inc
push
add
sbb
xchg
xchg
jg
cmp
jne
sbb
icebp
jle
das
push
push
jo
add
sbb
ret
gs
lods
mov
rolb
mov
mov
xor
sbb
jg
mov
fistl
mov
push
cmpl
push
decl
cmp
aas
fbstp
cs
sub
loop
mov
aas
lcall
jbe
mov
jnp
ud0
ret
sub
loope
mov
cmp
incb
insb
cld
jg
icebp
sti
insl
jmp
cmp
fstp
das
cld
push
les
inc
ss
push
pushl
fisubrl
add
dec
sub
das
lea
lods
int3
fmuls
push
mov
outsl
les
lods
jbe
loope
cmp
clc
incl
insb
arpl
and
jecxz
mov
std
rcr
es
sub
clc
add
inc
jle
mov
mov
add
push
fwait
sbb
leave
push
jne
aaa
add
or
outsl
data16
cmc
das
adc
std
xchg
fldt
inc
inc
loope
adc
sub
jmp
or
pop
rorb
sbb
das
xor
fisubrs
sbb
jae
outsl
push
lock
mov
outsb
loope
jp
sbb
inc
adc
xor
mov
push
out
adc
fwait
cmp
jbe
add
jl
call
inc
add
inc
adc
push
insl
jg
or
pop
push
les
sarl
mov
push
mov
dec
jns
sub
rcr
adc
hlt
mov
les
mov
mov
push
andb
data16
or
jae
cmp
cltd
inc
aaa
mov
adc
cmp
xchg
sbb
or
loopne
in
adc
jnp
mov
push
mov
or
adc
jg
push
adc
shlb
in
jmp
ss
mov
mov
jmp
mov
pop
xor
jmp
mov
incl
pop
mov
xor
imull
push
inc
test
fisttpl
cmp
pop
sub
add
mov
adc
mov
sbbb
lods
sti
adc
inc
popf
jno
cmp
orb
or
or
inc
rcrb
aaa
sbb
outsl
adc
pop
imul
jg
mov
xlat
pop
call
push
mov
inc
ds
sti
outsl
mov
sub
sti
leave
stos
call
scas
aaa
sbb
mov
mov
and
movsl
adc
jmp
call
lods
hlt
hlt
cwtl
paddb
push
lcall
cli
ds
sbb
mov
push
jne
call
push
mov
lock
mov
aam
jle
icebp
fstpt
push
or
xchg
pop
push
aaa
clc
pop
incb
adc
inc
mov
adc
cld
decl
nop
add
xor
xchg
adc
jl
jg
decb
cld
push
pusha
arpl
ficompl
cmc
test
dec
sbb
xlat
cmp
imul
js
push
fcoms
pop
inc
dec
or
adc
shll
movb
jg
mov
les
cwtl
sbb
xor
mov
out
mov
mov
inc
cltd
in
dec
int3
imul
dec
mov
push
mov
leave
mov
scas
cmp
lods
jmp
adc
cmc
adc
out
js
cmp
mov
push
push
mov
cld
daa
cmp
jmp
je
adc
out
into
xor
mov
in
cmp
aaa
int
jbe
push
adc
pushl
cmp
adc
or
call
adc
icebp
ffree
cmpl
jnp
dec
inc
faddl
fstpl
pop
test
or
ret
jmp
icebp
pop
inc
or
in
sti
sub
sub
xchg
imul
mov
add
sar
lcall
lods
fdivs
push
sbb
push
push
mov
jns
adc
out
mov
jg
xchg
and
push
jne
das
cmc
mov
pop
rcrl
adc
push
ret
push
jb
inc
jmp
sub
lock
cmp
mull
les
sbb
fildll
adcb
pop
or
stc
lods
jg
mov
inc
in
aaa
pop
jns
jno
inc
adc
int3
icebp
or
adc
xor
sti
lcall
lods
shrb
sbb
lahf
loope
pushf
ret
jmp
dec
in
sarl
ljmp
les
cmp
xchg
cmp
cmc
jne
test
mov
loop
ret
pusha
and
loop
pop
sbb
jno
mov
test
call
sub
jne
push
adc
and
das
add
jmp
pop
sarb
xchg
mov
fists
push
loop
jg
outsl
scas
in
mov
outsl
add
filds
cmp
push
cwtl
imul
add
dec
xor
jg
or
sar
adc
inc
rclb
sbb
or
in
sub
aas
adc
call
sub
cmp
std
xor
pop
add
jge
in
sub
jb
fidivl
incl
cmpsl
das
add
arpl
loope
add
idivl
push
and
pop
adc
sub
ss
sbb
pop
adcb
cmp
or
sbb
jmp
mov
std
out
dec
out
jg
mov
fistpl
mov
pop
call
inc
or
add
jae
sahf
jbe
mov
adc
sar
mov
mov
mov
outsl
fstl
test
repnz
fisttpl
mov
lcall
dec
je
inc
pop
sbb
add
sub
add
dec
cmp
mov
pop
push
xchg
clc
mov
es
insl
aaa
mov
xchg
arpl
inc
call
test
pop
sbb
cli
inc
or
test
push
sub
cmp
or
sbb
adc
icebp
or
add
xchg
inc
outsl
pushl
add
inc
cmp
sub
xlat
or
arpl
mov
pop
loop
rclb
mov
push
fsubs
faddl
and
or
ss
orb
mov
and
adc
or
test
and
pop
adc
dec
lds
decl
jbe
or
add
ja
mov
call
mov
and
mov
lea
sbb
lods
pop
jg
pop
jle
pop
xor
lock
pushl
and
gs
and
push
dec
and
sbb
sbbb
mov
xor
push
cmp
mov
shlb
inc
daa
push
jg
adc
test
mov
xchg
xor
mov
mov
decl
xor
mov
cmc
lcall
loope
push
pop
inc
adc
je
leave
mov
mov
or
jecxz
clc
call
or
cltd
pop
jmp
popa
mov
jg
jge
mov
and
pop
jp
add
insb
cmp
sub
xor
and
sti
jmp
hlt
add
scas
xchg
sub
call
insb
test
mov
popa
int
call
push
dec
xchg
and
dec
pop
jmp
int
or
test
push
call
sbb
or
ljmp
adc
add
pop
sahf
dec
leave
outsb
and
and
inc
ret
pop
mov
jmp
repnz
inc
gs
inc
aas
xor
pushf
in
inc
jg
mov
xchg
in
jnp
sub
mov
xlat
push
clc
pop
mov
xor
scas
inc
push
jg
pop
add
or
mov
das
mov
outsb
xchg
inc
orb
dec
outsl
icebp
or
xchg
jl
or
mov
and
or
decl
pop
sbb
cmp
call
or
sbb
xor
lcall
sbb
push
inc
mov
ret
pop
mov
and
lock
or
incl
js
sub
push
lea
ret
fists
rcrb
inc
push
testl
outsl
std
test
cld
push
jmp
mov
repz
sbb
ja
ret
fcmovu
jge
inc
or
xor
std
or
push
jp
sub
pop
aaa
push
inc
mov
dec
mov
mov
inc
mul
popf
or
mov
repz
ret
pop
insb
xor
cltd
sahf
add
xchg
clc
pop
cmp
mov
cmp
or
sub
pusha
add
cmp
add
cmp
jmp
pusha
test
aas
xchg
pusha
std
and
imul
pop
loopne
sub
pop
jl
outsb
outsb
ret
inc
outsb
or
and
rorl
sbb
nop
daa
icebp
mov
sbb
call
dec
push
ds
pop
iret
cli
lea
add
out
xchg
cli
movsl
mov
cld
test
aad
jge
test
ljmp
lock
jmp
lods
decb
into
out
aam
inc
or
shr
inc
pop
jge
xchg
xchg
xor
pop
fwait
cmpb
sbb
xor
and
bound
push
adc
call
lcall
sti
test
adc
mov
lcall
pop
xchg
cli
jmp
pop
cmp
mov
adc
push
mov
adc
in
pop
sarb
or
sbb
and
xor
inc
mov
ss
mov
pop
or
adc
inc
xlat
fprem
mov
fildll
incl
or
jl
dec
add
push
xor
push
fwait
add
les
lods
loop
call
pop
movsb
popf
fbstp
pop
leave
xchg
loope
xor
rcll
cmp
insb
icebp
dec
dec
add
andb
dec
jne
popa
fdivr
xchg
clc
cli
add
stc
fmuls
jbe
or
and
cli
pop
xchg
xchg
pop
xchg
andl
mov
add
jmp
xchg
pop
ja
sbb
mov
push
jmp
cli
aas
ja
cli
sbb
arpl
sbb
insl
push
jge
pop
addb
sub
xor
fiaddl
das
cld
repz
jge
inc
ja,pt
daa
mov
pop
loopne
push
cmp
cld
ljmp
add
fimull
jae
pop
or
sbb
and
in
sub
aaa
subb
or
call
mov
out
or
xchg
in
daa
sub
or
cmp
and
sub
xor
sbb
pushl
fbstp
jo
adc
jns
push
into
jl
out
lahf
add
call
mov
decl
jge
xor
lret
sub
or
fstpt
adc
cwtl
mov
adc
add
mov
cmp
and
inc
or
test
aaa
aaa
mov
push
test
jmp
sbb
js
mulb
mov
or
sti
std
pop
mov
xchg
icebp
lcall
scas
sbb
std
sbb
sub
dec
lahf
clc
test
mov
add
aaa
sbbb
mov
xchg
adc
shrb
out
mov
pushl
sub
icebp
shrb
popf
ljmp
and
push
sbb
cmp
outsb
or
mov
aad
clc
push
push
cmp
mov
cmp
push
das
inc
mov
mov
les
inc
es
cld
ljmp
or
pusha
loope
sbb
jnp
sub
add
jbe
orl
das
adc
and
ret
and
lret
inc
mov
xchg
adc
push
hlt
pop
jge
jmp
cli
jg
mov
cmp
in
dec
shll
sbb
or
pop
ljmp
fldcw
inc
dec
pop
iret
fucomi
bound
out
data16
mov
inc
adc
mov
adc
and
add
pop
hlt
sbb
push
sbb
mov
and
das
cld
lcall
pop
mov
in
pop
cmp
lcall
inc
iret
clc
xor
cmp
in
and
xchg
mov
fisttps
mov
and
push
pop
pop
jle
mov
ljmp
dec
inc
je
call
out
call
add
adc
sbb
add
int
imul
or
addb
or
pop
lcall
in
in
je
inc
cld
dec
sbb
mov
and
ja
flds
adc
push
and
sbb
frstpm(287
aad
add
clc
xchg
daa
sbb
hlt
je
push
mov
mov
mov
das
in
cld
out
loop
pop
call
test
pop
add
dec
pop
test
mov
lret
sbb
cmp
mov
mov
inc
push
and
out
dec
pop
rorl
sub
inc
sub
and
cmp
dec
xor
hlt
push
leave
add
fildl
shlb
cltd
dec
adc
lods
pop
fmulp
scas
fiadds
inc
imul
cmp
shll
or
fimull
test
mov
jo
incl
cmp
fbstp
mov
cmp
add
add
aad
mov
scas
ja
outsb
imul
add
push
adc
pushf
sahf
or
incl
lods
push
dec
adc
sbb
xchg
cli
pop
movsb
cs
outsb
push
push
sbb
dec
mov
push
pop
add
adc
das
sbb
jmp
mov
fcomps
daa
add
push
push
adc
sub
push
incl
rcl
cmp
xchg
dec
mov
jnp
arpl
leave
pop
push
sti
sub
repz
mov
lcall
loop
ret
lret
into
push
imul
adc
dec
mov
or
cmpsb
lea
and
adc
inc
and
sbb
sub
jl
jno
outsl
outsl
pop
push
xchg
mov
ljmp
inc
ret
ss
icebp
enter
outsl
insb
cld
jmp
cmp
sub
adc
sub
ret
ja,pn
push
push
shr
in
mov
lcall
sub
pop
cmp
and
or
les
sbb
sub
std
pop
dec
inc
jmp
loop
adc
test
sbb
dec
ljmp
adc
jbe
xor
push
cltd
insl
push
fcoml
sub
arpl
lods
push
mov
mov
ss
decb
adc
jmp
mov
mov
and
ss
mov
xchg
les
pop
std
loopne
mov
sar
add
push
daa
cmp
add
fildl
sbb
inc
add
fiaddl
sahf
insl
imul
mov
call
roll
jae
cmp
xor
xor
inc
rorb
mov
xor
insl
or
jb
mov
mov
pop
inc
cld
decl
call
add
fistps
imul
lret
das
and
call
pop
dec
ja
dec
xchg
xor
or
adc
std
inc
xchg
pop
call
or
icebp
aas
mov
inc
pop
int3
jg
test
inc
insb
movsb
inc
mov
add
fisttpll
es
pushf
xchg
mov
aas
popf
sub
call
adc
and
add
sub
inc
insb
add
incl
add
dec
pop
xchg
pop
loopne
or
cmpxchg
mov
mov
filds
loop
out
lret
lret
jg
je
enter
pop
ret
ljmp
lahf
mov
sbb
inc
pop
xor
jne
jl
push
xor
lods
add
sbb
push
adc
loope
ficomps
sar
outsl
add
cli
scas
mov
hlt
mov
pushf
aam
in
push
mov
jo
sti
popa
mov
lcall
gs
shll
sub
mov
pop
inc
in
in
jg
dec
rcrb
pop
xlat
cmp
call
cmpl
sub
orl
mov
add
inc
push
mov
and
or
dec
test
nop
pop
pop
pop
jo
adc
out
mov
call
cltd
rclb
xchg
cmpb
das
sub
mov
inc
pop
shr
add
std
xor
fistpll
sub
std
test
sbb
or
mov
out
mov
int
xchg
clc
sti
pop
daa
jns
push
daa
jbe
add
mov
aam
decl
adc
mov
mov
fisubrl
rcrb
sbb
and
jmp
mov
sbb
mov
add
loopne
rol
mov
loop
jg
ret
mov
push
adc
sti
jecxz
xor
pop
add
cmp
and
loop
xchg
je
xchg
mov
das
add
sub
roll
jle
mov
mov
or
pop
daa
mov
faddp
add
rolb
clc
adc
filds
shrb
adcl
adc
push
jb
test
jb
clc
call
adc
push
mov
mov
nop
mov
lret
jae
xchg
test
add
cmp
push
add
xchg
add
sbb
dec
or
push
scas
lds
pop
add
mov
incl
mov
sarl
xchg
and
dec
mov
jle
dec
rolb
std
adc
aad
mov
stos
popa
call
test
decl
add
push
dec
or
mov
adc
lcall
decl
push
inc
adc
dec
cmpsb
icebp
sbb
rolb
inc
test
lods
movsl
ss
decl
adc
mov
fistpll
push
dec
xor
shlb
adc
in
cs
inc
lds
sbb
fstpl
push
jo
xor
pop
insb
cld
adc
cmovb
inc
pop
rcll
std
sub
nop
mov
call
sti
mov
icebp
sbb
cs
mov
mov
push
rcll
into
jecxz
add
mov
xchg
loope
sub
push
mov
fwait
cmp
sub
xor
ja
daa
and
or
sub
fistpl
insb
and
jl
decl
dec
sub
outsl
imul
xchg
cwtl
cmp
or
and
fs
repnz
cld
xlat
ffree
test
sub
insb
loopne
add
ffreep
or
adc
inc
cld
adc
clc
repz
mov
int3
filds
dec
adc
les
setno
cmc
jmp
sbb
jmp
mov
lcall
inc
lahf
lret
push
mov
sub
and
movsl
ret
mov
xor
mov
mov
or
sub
outsl
loopne
or
bound
cmp
fldt
inc
adc
sub
or
pop
jno
sti
push
dec
inc
mov
out
or
mov
imul
aas
stos
or
dec
icebp
xor
pop
call
jbe
fsubl
mov
fwait
mov
adc
pop
call
aas
xlat
ficomps
or
mov
inc
popa
inc
test
inc
in
int3
jl
or
jmp
lcall
rorl
add
lret
loopne
jbe
mov
pop
ljmp
bound
push
push
sbb
bswap
ja
mov
or
loope
cld
pushl
lret
ss
dec
lock
jbe
aas
push
jb
jno
xchg
cmp
cli
idivb
or
mov
cmp
xchg
push
ret
pop
orl
ljmp
mov
dec
jne
push
pop
jae
cltd
pusha
jmp
ja
fsubrl
mov
pop
mov
shl
clc
aaa
push
dec
cld
cmp
inc
in
cmp
mov
repnz
sub
into
call
insl
add
dec
jne
lds
or
xchg
or
pushl
xchg
dec
popf
jae
pop
lea
push
sub
rolb
pushl
push
aas
or
pop
clc
mov
clc
pop
add
mov
jge
fdivrl
dec
andl
or
call
or
pop
das
lret
mov
and
cmp
adc
ljmp
push
push
adc
mov
in
cmp
cs
ljmp
out
out
mov
xor
sub
out
or
add
mov
call
cmp
mov
in
jns
stos
ret
test
cld
das
je
insl
jmp
fists
push
cmp
mov
or
ds
mov
imul
inc
stc
out
out
adc
mov
mov
mov
pop
sub
call
adc
jl
mov
cld
sbb
fidivrl
sub
sub
adc
insb
clc
cld
insl
icebp
adc
mov
jmp
cwtl
and
add
pop
xchg
inc
mov
xor
mov
decl
lods
fstpl
enter
incl
fcoms
testb
test
xchg
test
add
jae
add
dec
clc
dec
jle
shl
rcrb
lahf
xchg
cmpsb
loop
cld
ljmp
pop
mov
loopne
pop
mov
push
pop
add
push
mov
push
and
icebp
call
mov
and
inc
xor
cmp
jg
and
pop
sbb
dec
jge
cmp
imul
pop
add
or
in
les
or
insb
hlt
jg
pop
stos
xor
testl
sbb
inc
push
jl
int
pop
mov
enter
adc
xchg
call
inc
pop
sti
push
leave
cmp
ja
mov
add
push
or
pop
push
clc
cmp
jp
icebp
jg
incb
jl
push
mov
mov
cmc
sbb
ret
lock
test
je
addl
cmp
fldl
aad
incl
adc
pop
lods
test
cmp
mov
cld
out
imul
cmp
mov
mov
hlt
aaa
pop
inc
cmp
fdivs
mov
fdiv
push
loopne
les
adc
and
incl
push
shl
daa
xchg
or
out
shlb
fwait
sbb
ljmp
fdivrl
sub
pop
enter
xchg
idivb
lcall
jo
ljmp
sub
out
push
ljmp
aad
or
mov
popf
fst
std
or
cmpsb
or
outsl
cmc
sub
adc
lret
out
ss
pop
stc
data16
jbe
mov
jmp
lcall
mov
int
cmp
psubsb
fcomps
mov
pop
ljmp
dec
pop
dec
inc
push
sub
jg
loopne
loopne
mov
xchg
popa
mov
push
je
ret
test
fnstenv
incb
adc
gs
fadd
or
adc
loop
lea
mov
mov
stc
incl
filds
jecxz
pop
rclb
inc
mov
adc
jge
add
cmp
sub
push
sbb
pop
mov
jg
das
or
std
push
negl
push
sub
push
pop
add
cltd
call
jg
sbb
push
xchg
xor
mov
mov
jmp
and
cmp
fnstsw
aas
xor
sahf
cmp
repnz
sub
in
orl
div
or
addr16
pop
mov
rolb
sbb
stos
les
fnsave
lods
test
mov
nop
and
out
jl
and
sti
aas
out
fidivs
pushf
clc
hlt
lock
call
enter
fcompl
mov
mov
mov
call
cmp
lock
cmpsb
imul
xor
ljmp
in
mov
jmp
xchg
lock
sbb
jns
aam
lock
sbb
inc
push
mov
push
cmp
pop
sub
add
out
adc
ljmp
addr16
lods
cmp
dec
xor
sahf
jo
pop
call
cltd
jns
or
iret
xor
sarl
andb
test
repnz
mov
and
shlb
ja
inc
jmp
in
cmp
add
pushf
adc
pop
mov
and
dec
js
jns
xor
mov
andl
push
pop
in
or
mov
lahf
cli
cmc
mov
clc
lahf
int
xlat
mov
add
popf
sbb
adc
add
fwait
add
add
pop
lret
add
sbb
dec
add
adc
ja
enter
lods
push
lock
pop
push
ss
xchg
pop
sar
arpl
sbb
dec
nopl
push
cwtl
or
jns
push
aas
inc
stc
test
inc
mov
adc
sbb
pop
or
add
test
mov
addl
into
inc
in
fs
outsl
std
and
inc
xchg
mov
sahf
fwait
js
mov
lods
or
jg
daa
sub
inc
mov
shll
mov
fildll
leave
push
inc
mov
xchg
pop
jnp
rolb
or
inc
pop
mov
ret
fucomip
out
shlb
rorb
les
push
jnp
ds
jmp
out
mov
fdivrs
repnz
ljmp
push
cmc
in
jg
jmp
mov
dec
adc
jmp
mov
fiaddl
pop
mov
sbb
and
insb
rcll
outsb
std
das
aam
add
jge
xchg
and
clc
rclb
sbb
icebp
pop
add
mov
ljmp
adc
adc
iret
dec
enter
test
jmp
bound
ds
sub
imul
inc
lret
andb
aam
push
imul
inc
or
sbb
je
data16
jbe
mov
insb
jg
mov
insl
movzbl
ds
pop
pop
mov
push
repnz
incl
jbe
call
cmp
inc
dec
jne
cwtl
lret
sbb
cmp
hlt
call
call
push
sbb
call
or
mov
xchg
or
cmp
mov
or
mov
cmp
and
sub
lods
enter
xor
pop
call
repz
leave
fs
add
push
jae
nop
jo
in
lcall
cmp
sub
jmp
cmp
add
or
das
sub
or
cmpb
cld
incl
out
ret
aas
jl
jae
add
scas
mull
pop
sub
daa
push
jmp
cld
aam
mov
xor
std
xchg
pop
adc
and
imul
call
push
mov
xor
sbb
and
dec
jg
inc
call
jecxz
fstpl
mov
negl
mul
loop
call
call
outsl
push
icebp
test
cmc
push
out
fwait
mov
mov
inc
sub
cld
and
lds
bound
or
mov
jg
mov
movb
fldenv
aaa
cwtl
inc
xor
arpl
cmc
pop
xacquire
mov
sub
test
int
js
mov
push
adc
sub
xchg
cmc
jg
push
hlt
aas
hlt
aam
xchg
lock
lods
sarb
ljmp
cmpsl
pop
inc
fwait
pop
imul
test
ljmp
jl
sbb
sbbl
fucomi
lcall
dec
lods
push
mov
push
aad
dec
jmp
mov
in
cld
and
fisubrl
xchg
or
std
inc
adc
clc
aad
pusha
lea
mov
cmc
lret
std
inc
cmovae
cmp
dec
add
fiadds
xor
mov
or
in
pop
aaa
pusha
insb
cli
ret
mov
out
push
add
add
das
jnp
or
outsb
cmpsb
jmp
xlat
xor
outsl
cmp
icebp
out
pusha
dec
cld
jae
inc
outsl
lcall
ljmp
outsb
or
imul
jae
data16
push
push
dec
dec
inc
lea
mov
dec
aas
clc
icebp
incl
or
clc
push
add
push
jle
int
je
sbb
push
ss
cmc
sbb
test
push
cltd
pop
hlt
inc
addr16
iret
or
add
pop
pop
popa
or
lcall
mov
and
or
mov
loopne
js
loop
aas
pop
cld
lcall
sahf
bound
and
mov
data16
inc
sbb
or
fucomip
xor
shrl
and
mov
sbb
sub
leave
add
push
pushl
popa
dec
aad
fistps
cmpb
jno
inc
xor
incl
pushl
xor
inc
aaa
xor
sub
inc
cmp
inc
inc
xor
and
mov
add
add
imul
or
call
mov
jae
je
lods
shrb
pop
xchg
jae
xchg
pop
inc
test
mov
sub
rcrb
insb
or
dec
lock
mov
dec
sub
dec
jo
add
aaa
psrlw
outsb
dec
push
pop
jbe
or
ljmp
jle
ficomps
or
xor
ljmp
push
outsl
movl
xlat
jmp
call
setne
sbb
jg
imul
std
mov
decl
lret
sub
repnz
jle
iret
push
test
push
icebp
call
in
sbb
dec
inc
inc
cmpb
mov
push
das
pop
push
push
pushf
out
mov
scas
in
fcmove
lods
pusha
or
ja
add
fildll
dec
mov
add
dec
popa
into
push
jmp
xor
xchg
outsl
add
jle
xor
ljmp
out
pop
push
cmp
and
mov
orb
icebp
pushl
leave
push
add
in
push
xchg
aaa
dec
mov
mov
xchg
clc
ficoms
dec
sbb
dec
and
push
or
mov
clc
fbld
lods
or
in
pop
cli
in
xchg
enter
clc
mov
jp
clc
movsb
sbb
mov
xor
incl
push
subl
jl
mov
push
notb
addr16
scas
xchg
dec
clc
add
es
div
mov
xlat
ds
call
cmp
aaa
stc
mov
std
inc
push
cs
inc
push
adc
or
xor
mov
and
add
aam
popa
out
daa
or
and
out
pop
xor
call
or
addr16
outsl
and
and
mov
int3
mov
popf
clc
jge
or
stc
sbb
mov
push
rcrb
mov
sbb
jns
clc
add
call
adc
mov
call
pushl
mov
decb
mov
push
dec
js
mul
je
mov
jmp
js
mov
mov
adc
add
daa
hlt
nop
out
adc
jg
outsl
push
loope
add
ds
in
ja
dec
popa
jae
sbb
ret
or
or
mov
sub
lcall
movsb
aaa
xor
jo
add
push
pop
sti
pop
decl
push
outsl
mov
or
iret
xchg
cld
call
in
mov
or
cltd
sbb
sbb
fwait
in
in
pop
aas
mov
xchg
jmp
adc
in
into
dec
sbb
dec
lods
xor
xlat
popf
ljmp
sbb
push
adc
mov
xchg
pushf
test
pop
fs
jg
inc
dec
push
lahf
mov
outsl
outsl
cld
dec
in
jne
ret
jmp
or
shll
das
cld
mov
decl
mov
enter
fstpt
jns
ljmp
sbb
sbb
add
mov
daa
and
mov
add
pop
cld
mov
mov
xor
das
test
and
pop
stos
loopne
mov
push
xor
dec
push
movsl
call
push
lock
jns
pop
cmp
out
test
mov
sbb
jmp
int
int
pushl
in
movsb
cmpsl
hlt
fdivrp
mov
shlb
repz
sti
bound
das
icebp
xchg
icebp
pop
call
push
mov
inc
std
ljmp
repnz
into
mov
test
jg
push
push
mov
add
jmp
push
nop
lock
sbb
and
xor
decl
or
pop
dec
sti
scas
push
sahf
hlt
cmpl
add
pop
in
sbb
fisubrs
xchg
mov
add
incl
add
xor
cmp
sbb
fisubl
sbb
add
push
add
mov
test
dec
or
roll
pop
or
pop
sub
or
cmp
sub
cli
mov
in
add
or
sub
sbb
insl
call
push
je
movsb
and
fadds
sub
add
incl
xor
xor
inc
mov
iret
leave
sti
push
into
jg
insb
mov
or
mov
cmp
sbb
cmp
mov
jmp
cmpsb
jae
rolb
add
inc
sbb
pop
dec
sarl
data16
sahf
xchg
out
ljmp
aam
out
dec
dec
jg
sbb
add
push
fwait
jmp
mov
jne
ss
ret
adc
jmp
shld
and
jg
ljmp
call
int3
and
push
in
mov
xchg
in
sahf
jbe
test
call
std
add
mov
push
in
aas
in
cld
jl
dec
ljmp
les
add
frndint
stc
fcomi
loopne
add
jecxz
call
idivl
fdivrl
mov
jg
mov
out
add
fwait
pop
fdivrs
mov
cld
outsl
fwait
xchg
jne
sbb
push
mov
jns
dec
mov
call
xor
xchg
out
sarb
mov
jb
int3
mov
test
dec
xor
data16
mov
mov
xlat
les
inc
les
push
dec
je
fwait
mov
mov
or
pop
adc
or
dec
add
cmpsb
shrb
outsl
icebp
ljmp
iret
icebp
aad
call
jecxz
cli
sub
jge
data16
lcall
bound
loopne
push
mov
mov
int3
xchg
cli
dec
lds
cmpsl
mov
jb
in
sahf
fs
call
mov
dec
or
icebp
mov
pop
jbe
push
mov
loop
and
icebp
mov
loop
into
leave
lods
add
lods
std
loope
jb
loop
test
loope
movsb
ret
mov
sbb
sbb
pushf
mov
cwtl
jg
xchg
mov
jb
pop
lock
push
loope
ret
mov
and
and
fucomip
mov
int
stc
push
in
loope
fidivrl
mov
jnp
sbb
jmp
cld
xor
loop
cwtl
lock
and
sbb
add
mov
nop
aad
mov
ja
and
insb
out
out
mov
in
outsl
decl
loopne
iret
xchg
xchg
out
jp
test
inc
sahf
loopne
sbbb
cmp
mov
incl
pop
cmpsb
xchg
jl
in
test
pushf
xorb
jge
cmpb
mov
sti
xor
and
push
or
and
cmpsl
pop
inc
or
loop
ljmp
pop
jl
imul
jo
shr
jo
insb
iret
repz
sbb
mov
repz
test
pop
adc
xchg
loop
lods
aad
lcall
mov
sub
movsl
out
lock
inc
je
out
add
pop
mov
cli
scas
add
out
or
daa
pop
call
call
push
lock
incl
adc
out
jns
cmp
ud1
fistpll
dec
add
and
movswl
faddp
es
inc
lcall
jnp
dec
pusha
or
ljmp
arpl
dec
pushl
in
pop
add
daa
jns
dec
fadds
pop
mov
std
sbb
roll
shlb
in
push
pop
fimuls
pop
in
push
aaa
ja
mov
push
mov
dec
pushf
imul
or
dec
negb
pop
clc
inc
jp
xor
in
inc
xlat
push
jmp
fs
call
clc
dec
mov
sbb
lods
dec
fsubl
ja
jno
dec
repnz
mov
shl
mov
or
ficoms
mov
jmp
cmp
jo
shl
add
mov
sbb
fidivrl
and
call
incl
cmpsl
decl
loopne
xchg
inc
cmp
les
mov
mov
aaa
xchg
rol
mov
incl
push
out
lret
fildl
add
mov
sbb
in
leave
call
clc
iret
sbb
pop
adc
ficoms
mov
add
mov
mov
shlb
mov
aad
pop
movsl
jne
arpl
lcall
divb
adc
insb
popa
push
jg
xchg
add
sarl
push
mov
test
imul
jae
add
push
jg
pushl
shlb
xchg
lahf
push
mov
decl
dec
dec
leave
mov
inc
add
jo
dec
data16
ljmp
add
pop
das
add
xor
mov
jno
bswap
push
sbb
sbb
add
incb
cmp
call
aaa
and
icebp
movsl
xchg
repnz
andb
mov
clc
mov
jge
ljmp
mov
das
mov
mov
mov
out
mov
nop
jg
mov
and
incl
xchg
push
dec
inc
movsb
push
push
mov
mov
incl
or
adcb
add
stos
add
add
outsb
decb
push
sbb
inc
stos
add
jmp
movq
inc
sub
inc
add
pop
or
test
aas
xor
sub
inc
les
int
push
inc
add
or
mov
roll
test
add
adc
mov
leave
orb
jmp
dec
mov
push
hlt
pop
test
test
std
pop
mov
add
add
icebp
xchg
mov
dec
jge
cli
sub
or
popa
aam
dec
inc
scas
out
mov
loopne
mov
inc
fucomp
cmp
mov
mov
inc
jbe
jns
mov
aam
xchg
jge
add
add
jbe
repz
jb
sbb
mov
enter
cmp
add
dec
ss
pushl
xlat
cli
loopne
fs
push
daa
push
subb
add
std
mov
or
out
lods
mov
add
ret
es
inc
rolb
mov
pop
das
mov
inc
push
xor
scas
jecxz
outsl
cld
add
jg
sub
cmp
mov
mov
dec
inc
dec
jae
pop
call
outsl
popa
fs
stos
jp
dec
imul
gs
jg
je
add
fs
adc
mov
jne
decl
sub
mov
es
inc
cs
call
imul
jl
imul
icebp
in
or
xchg
test
and
pusha
call
push
pop
sub
lea
pop
add
je
push
in
orb
movsb
sbb
or
pop
out
aaa
out
add
sbb
outsb
push
call
lods
push
sub
add
push
xchg
cmp
insb
in
decl
pop
jae
mov
pop
mov
xchg
push
adc
out
mov
mov
sub
std
add
cld
sub
push
jmp
mov
icebp
lea
xor
out
jg
jmp
add
incl
pushl
push
mov
pop
jnp
testb
loope
lcall
pop
cmp
add
mov
imul
and
mov
mov
push
adc
aas
mov
sub
lods
mov
in
ja
jno
leave
cmpb
adc
sbb
incl
pop
add
shr
rol
xchg
cmp
jg
arpl
or
add
mov
test
ffreep
or
add
cmp
or
mov
repnz
je
mov
mov
es
outsb
lea
mov
outsl
lock
cmp
cli
add
mov
jmp
or
shlb
in
test
jae
out
ja
add
or
lret
push
and
adc
aaa
fbstp
sbb
or
mov
push
gs
clc
fisttps
out
je
lods
das
or
add
dec
pop
or
push
jmp
mov
add
add
push
push
push
int
out
xor
cmp
adc
mov
in
lcall
adc
or
cld
jg
adcl
pushl
sub
xchg
push
pop
lret
and
fmuls
inc
mov
cwtl
push
incl
jae
fisttps
addr16
push
ret
pop
popl
loop
xor
ljmp
adc
outsb
out
lods
inc
rcrl
dec
fdivrl
cld
sahf
test
mov
inc
or
xor
incl
repnz
in
or
jle
add
mov
add
jp
pop
pop
fisubl
mov
sbb
pop
lods
or
xor
push
imulb
lods
cmp
ljmp
bound
lock
jmp
mov
xchg
pop
mov
out
push
or
xor
shufps
push
loope
insb
incl
pop
pop
inc
adc
cli
stos
cli
int
popl
jle
mov
ret
jmp
jle
jmp
inc
mov
cld
mov
movsb
call
pushw
mov
sbb
call
addr16
call
iret
call
shlb
inc
stos
jmp
jg
mov
inc
call
jmp
lods
shr
je
adc
mov
jmp
call
or
sbb
mov
jge
or
add
jg
inc
icebp
mov
mov
sub
pop
jmp
add
mov
rol
fstpt
sbb
inc
popa
adc
call
cmp
jb
ret
inc
js
call
je
push
add
fimuls
loope
sub
add
decl
ret
pop
mov
inc
mov
pusha
sbb
popa
insl
or
mov
add
inc
dec
or
push
jmp
decl
pop
pop
call
or
cld
ljmp
data16
shl
or
dec
mov
jne
pop
push
add
or
or
pusha
test
push
adcb
sub
push
sbb
shr
jg
fldl
jb
sub
ja
pusha
jae
shl
or
add
mov
fsubs
movsl
mov
jmp
bound
jp
sbb
pop
mov
repnz
dec
popa
push
mov
fadd
sarl
cmc
ljmp
lock
push
scas
movl
jae
xor
data16
add
ja
mov
mov
pop
rol
add
cmp
lcall
adc
call
fs
cmp
jb
push
jmp
sub
dec
clc
push
push
mov
outsl
mov
shl
rcll
ret
mov
fists
rol
adc
ficoml
add
sbb
inc
out
pushl
test
sbb
call
dec
enter
jnp
inc
test
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
in
sbb
incl
jge
mov
sti
test
jle
push
js
add
push
fsubl
mov
sar
lcall
add
pop
loopne
inc
cld
inc
cmp
dec
jl
sbb
dec
out
jle
repnz
in
inc
dec
mov
in
call
cmp
cmp
mov
sub
xor
cld
xchg
push
inc
les
paddb
ds
cli
lods
xchg
shlb
xchg
push
arpl
iret
mov
ret
cli
lcall
cld
jbe
jg
mov
add
fadds
fwait
sbb
sti
mov
sbb
mov
mov
and
jbe
pop
mov
cltd
sbb
mov
divl
cli
inc
icebp
call
jl
test
or
std
lods
add
jg
ret
xor
xor
cmp
dec
lret
xlat
clc
xor
mov
jg
pop
pusha
jmp
dec
adc
and
or
je
push
adc
pop
pop
movsb
std
pushl
add
shlb
mov
or
icebp
inc
stos
aaa
fbstp
pop
add
and
inc
jo
icebp
movsb
push
scas
sub
fdivr
sarl
jg
hlt
enter
in
sub
mov
dec
and
lea
mov
add
out
pop
add
add
add
dec
pusha
push
pusha
adc
fdivl
push
add
mov
jg
jecxz
pop
dec
enter
test
das
and
rep
mov
fistps
xchg
sub
je
imul
mov
jbe
mov
pop
mov
cmp
and
mov
pusha
sbb
hlt
inc
ret
lock
popa
and
lcall
push
fs
std
ljmp
cs
inc
inc
andb
cmc
fistpll
ret
nop
movsl
mov
aas
jmp
nop
add
in
mov
push
xchg
add
adc
movsl
cmp
sahf
out
add
movsl
hlt
into
xor
dec
and
jg
and
jg
sub
add
adc
gs
or
jg
fiadds
out
fcoms
xchg
push
repnz
jle
add
ret
inc
push
bound
jecxz
push
sbb
cwtl
and
sahf
push
das
cmpsb
mov
jne
movsb
inc
js
setb
rol
add
jne
cmp
pushl
push
adc
lock
incl
pop
popf
shrb
clc
add
pushl
hlt
cmp
mov
add
idiv
xor
adc
dec
into
movsb
pop
mov
inc
ret
dec
in
jmp
sub
enter
cs
lret
lock
mov
xchg
jg
pushl
sbb
addl
jl
jmp
ret
ljmp
fnstenv
ljmp
lock
sbb
fcmovnbe
or
test
pop
and
ljmp
inc
decl
xor
or
arpl
mov
add
pop
fcoms
ljmp
and
adcl
lcall
jmp
xchg
and
dec
stc
js
iret
xor
sub
pop
sub
inc
pop
pop
dec
pop
pop
loopne
cmp
jo
cmp
cli
ffree
out
jg
psubq
push
push
xchg
testb
sti
mov
cmp
mov
test
mov
xor
cmpsb
cmpb
mov
aas
cmp
rcl
inc
inc
add
mov
inc
inc
rolb
das
hlt
mov
mov
aam
dec
in
icebp
js
loopne
adcb
jg
aad
shrb
outsb
sbb
jno
js
shl
arpl
jg
adc
push
pop
test
or
add
pop
inc
jmp
push
call
cs
subb
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
adc
negl
xor
icebp
addb
mov
pushl
jecxz
push
jl
lock
sbb
popf
int
and
inc
pushl
decb
mov
lret
mov
push
mov
lock
ljmp
addb
faddl
add
ret
pop
push
rolb
test
or
mov
xchg
pop
add
push
dec
cmp
dec
mov
mov
fistps
jecxz
add
push
mov
jmp
xor
arpl
xchg
inc
popa
outsb
push
outsb
insb
lcall
push
das
je
out
dec
outsl
ja
repz
lds
test
inc
loop
push
gs
aaa
repz
ficoml
xor
cmp
cld
push
inc
xor
mov
mov
cmc
mov
dec
cld
mov
pop
sub
jmp
mov
mov
in
aaa
cli
stc
xor
mov
jns
push
jo
mov
xor
decl
dec
int3
fcoms
div
cli
jmp
mov
shrl
dec
rcrl
pop
outsb
xchg
sarb
mov
and
add
sbb
pushl
pop
scas
dec
mov
cld
pop
mov
mov
gs
fisubl
out
sbbl
dec
jbe
inc
in
clc
js
dec
sub
pusha
sbb
scas
in
fs
jg
cmp
fstpl
and
jbe
add
ret
jne
sub
repnz
inc
aas
lock
int
cld
incl
dec
ljmp
sar
or
sub
push
divb
addr16
stos
cmp
pop
sub
iret
adc
scas
hlt
mov
je
shrl
add
pop
push
add
adc
mov
mov
out
dec
mov
mov
mov
mov
mov
jb
popf
movsl
add
xchg
and
mov
insl
dec
movsl
mov
push
and
fstpl
inc
sbb
or
mov
ret
ljmp
jg
xor
out
out
lods
movsl
push
aaa
mov
in
scas
mov
jge
cmc
pop
stos
xlat
cmp
cld
jg
cmp
push
outsb
iret
pop
mov
pop
enter
sbb
insl
push
inc
jle
pushl
arpl
push
or
xor
sbb
lahf
mov
repz
jg
outsl
arpl
xor
mov
negb
jmp
aad
repnz
repnz
divl
sub
push
and
adcb
adc
js
mov
shlb
dec
cmp
dec
and
outsl
cmc
pop
adc
xchg
mov
aad
push
mov
int
inc
jecxz
mov
sub
push
movsl
sbb
push
addr16
sub
hlt
stos
sub
sti
inc
cmp
in
jp
cmpsb
idiv
rcll
dec
pushf
mov
icebp
inc
xchg
sub
xchg
cmpsl
sub
pushl
je
jmp
leave
push
aad
test
adc
nop
ds
mov
incl
pop
pop
loope
jbe
mov
dec
nop
ret
sahf
mov
mov
jle
jg
movsl
call
dec
addr16
in
inc
cmpsl
pop
and
cmc
sub
add
push
inc
test
call
push
dec
xchg
jno
push
mov
out
fisttpl
mov
insb
fs
cmpsb
sar
pop
xor
lods
mov
imul
or
cmp
cmp
popf
in
mov
inc
sub
push
and
pushl
xor
sub
enter
shl
xchg
mov
pop
push
push
out
xor
pop
lds
fs
mov
pushl
lods
lahf
mov
xchg
iret
sahf
pop
or
mov
lcall
stos
jg
das
push
call
ss
pop
ds
in
or
rcrb
inc
sarb
out
add
ficomps
pop
cltd
loope
mov
insl
and
jo
cmp
aaa
lods
fs
cmp
mov
pop
hlt
lcall
mov
mov
xor
pop
orb
jmp
jg
insl
inc
jbe
or
xor
inc
xchg
pop
repnz
push
or
sbb
cmp
fwait
cli
decl
xchg
xchg
dec
stos
stos
cmp
icebp
lods
popf
lock
addl
aaa
std
push
mov
jns
cmp
stc
decl
push
movsb
lock
fldenv
pop
lcall
mov
adc
mov
mov
fistpll
and
cld
lcall
mov
inc
sbb
dec
mov
lods
daa
test
in
je
xchg
sub
mov
inc
and
xlat
dec
scas
push
push
xorl
xchg
jmp
dec
push
lea
and
inc
cmpsl
jmp
mov
xchg
ds
jg
pop
outsb
adc
sub
jecxz
cmpsl
mov
inc
jmp
cmc
ret
lahf
cs
lret
ret
mov
movb
std
mov
adc
xlat
xor
ljmp
aaa
cli
loope
repnz
push
jnp
adc
xor
or
mov
mov
push
bound
xor
arpl
test
mov
cmp
pop
je
ss
adc
in
fs
fidivs
sub
adcl
sbb
jg,pn
movsb
pop
xchg
imul
decl
mov
xchg
jno
mov
rol
in
push
outsl
adc
movsl
scas
push
lret
mov
xor
ret
xchg
mov
rorl
call
jbe
lcall
mov
push
int
xor
xchg
xchg
jns
inc
push
xorl
in
jmp
xchg
xchg
cmp
add
cmp
imul
in
clc
cwtl
mov
cmpsl
addb
or
outsl
pop
pusha
scas
or
fidivrl
arpl
rorb
scas
cld
cld
pushl
sti
test
pusha
pop
sub
je
iret
test
insl
push
inc
xor
test
movsb
ljmp
or
add
push
cmpsb
push
sbb
sbb
test
std
in
sbb
andb
lock
jb
fidivrs
inc
jg
std
sub
dec
js
adc
bound
sub
push
mov
icebp
add
mov
cld
sbb
addb
inc
test
mov
test
cld
movsb
push
in
mov
mov
lea
leave
repz
cmp
mov
leave
dec
in
adc
or
outsl
icebp
ljmp
popf
add
scas
out
cmp
xor
cmc
pop
sbb
ljmp
mov
pop
mov
mov
ljmp
mov
aaa
ss
mov
sub
sbb
aad
jle
xchg
lcall
cld
pop
call
push
jg
arpl
and
pop
and
rcl
pushl
inc
cmc
test
add
test
popf
jmp
bnd
sti
test
mov
lcall
repnz
scas
mov
dec
lret
bound
inc
scas
stc
pop
lcall
jnp
sahf
sub
jge
xchg
jecxz
std
cmp
repnz
data16
ret
out
rcrb
pushl
clc
and
sbb
inc
scas
pop
add
bound
insl
inc
push
jg
mov
mov
testb
lods
pop
push
mov
fbstp
adc
mov
xchg
mov
mov
sarl
inc
fidivs
cld
pop
and
in
sub
and
cmp
inc
sarl
jne
in
jmp
adc
lahf
xor
movsl
movsb
cld
repz
push
mov
push
mov
cld
pushl
jle
dec
sahf
out
add
rclb
in
mov
nop
mov
scas
jo
cmp
leave
pop
mov
sar
sbb
adc
fcos
mov
xchg
sub
stos
mov
xchg
mov
movsb
mov
push
sbb
mov
jg
loope
push
cltd
inc
stos
imul
pop
popf
pop
push
sub
dec
test
mov
mov
test
sub
leave
subb
sti
fcoml
cwtl
xor
sbb
jle
xor
xchg
mov
push
aas
or
ret
repnz
ljmp
cmp
jb
sub
pop
dec
pop
pop
jne
jae
outsb
into
or
aad
dec
xchg
outsb
mov
pushf
sub
dec
adc
dec
call
outsb
in
dec
fsubs
shl
movsb
lahf
icebp
pop
sbb
orb
mov
test
mov
bound
fiaddl
cli
dec
enter
cld
cs
jmp
in
xchg
jb
in
inc
test
sbb
nop
lods
pop
sbb
pop
sub
call
loopne
jbe
ja
ja,pt
push
and
es
dec
sahf
outsl
lcall
pop
adc
outsl
adc
ja
or
subb
mov
and
movsb
mov
addl
fsubrl
ja
inc
mov
add
into
sbb
sub
cmp
jg
mov
push
and
xchg
inc
add
fwait
sbb
pusha
sub
sub
sub
lahf
push
cld
xchg
pushl
call
xchg
jecxz
sub
dec
sbb
xchg
in
inc
test
ljmp
test
mov
dec
push
stos
sbb
shlb
xchg
adc
aad
cmc
dec
aam
test
jmp
sbb
push
clc
cltd
ret
popa
sbb
leave
mov
push
mov
incl
stos
loop
pop
cld
and
xchg
lock
rcrl
movsb
fnstsw
mov
xchg
cmp
push
adc
std
stos
push
sub
in
pushl
lret
pop
aaa
sbb
js
pop
hlt
mov
iret
dec
mov
call
xchg
aam
orb
xchg
sbb
test
dec
std
jne
pop
jae
jle
and
dec
jp
scas
decl
sbb
cli
icebp
jge
sub
push
mov
mov
ljmp
xchg
jns
jbe
jge
addr16
cmpsl
nop
xor
mov
inc
decb
das
push
ljmp
xor
ret
pop
sbb
pop
and
insl
sbb
jno
mov
xchg
jmp
adc
cmp
into
shrb
rclb
and
xor
rcrl
mov
and
cmc
cltd
xchg
dec
aas
decl
mov
es
leave
orl
shl
mov
addr16
sub
mov
and
xchg
aad
mov
fstpl
pusha
pop
lret
ljmp
decl
in
sbbb
sbb
mov
js
jmp
xorl
xchg
adc
mov
add
jo
push
call
roll
dec
adc
mov
imul
adc
insb
pop
std
adc
jno
cmp
decl
ret
movsl
out
cmc
jl
jae
push
pusha
mov
xor
add
sub
testl
mov
adc
add
ljmp
push
call
loope
mov
push
xlat
push
nop
sub
sar
push
hlt
clc
cld
mov
das
adc
sub
sbb
in
sbb
jmp
cld
xchg
jg
rol
repz
xor
inc
rcrl
inc
cs
int
mov
inc
outsl
xchg
pushl
push
inc
pop
hlt
mov
add
add
or
pop
ljmp
jmp
mov
rolb
dec
mov
xchg
lcall
test
push
mov
xchg
in
xchg
dec
and
mov
mov
cs
sti
jb
or
jbe
inc
pop
pop
sbbl
push
leave
nop
incb
sahf
negl
jns
outsl
push
lock
pusha
mov
lret
adc
aad
push
jae
jmp
lcall
mov
sub
xor
jns
lcall
fstps
lcall
cmc
insb
filds
jne
inc
pop
or
mov
push
fsubrl
aaa
out
cmpsb
push
enter
jg
pop
cli
sub
sbb
roll
into
and
lods
inc
xorb
mov
xor
push
daa
xlat
xlat
inc
fs
lret
roll
std
pushl
jecxz
fimull
das
mov
jge
fstpt
aad
sti
xchg
das
lcall
pusha
pop
test
jecxz
inc
divps
mov
xchg
imul
loopne
ret
adc
push
aaa
cmpsb
rcl
daa
call
rorb
or
sbb
rcll
ja
lock
sbb
ljmp
dec
pop
popl
jne
in
cmp
push
push
mov
adc
mov
lret
mov
mov
pop
test
sub
sbb
das
roll
mov
lods
lods
dec
xchg
cltd
mov
mov
and
sbb
add
incl
das
adc
or
jp
out
push
lahf
xchg
gs
xchg
jl
mov
mov
lock
mov
cmp
jne
lds
fs
jecxz
out
mov
mov
pop
popa
out
add
or
das
cld
ds
outsl
xchg
jmp
xchg
sub
imul
test
pop
add
inc
call
sbbb
xorb
mov
stc
roll
cld
js
push
mov
push
lcall
mov
fcompl
xchg
aaa
dec
test
movsl
aas
mov
incl
negl
leave
iret
out
lcall
fistl
imul
mov
xor
in
inc
xor
insl
add
push
push
mov
sarb
push
xor
jne
aas
hlt
jecxz
inc
cmc
loope
pop
inc
int3
outsb
pushf
mov
ljmp
subl
xor
js
jmp
jo
add
cmp
pushl
xchg
xlat
push
lret
push
inc
mov
loope
repnz
shr
inc
mov
xchg
aas
icebp
ljmp
sbb
cmpsl
repz
dec
out
xchg
lret
cmpl
out
incl
pop
imulb
mov
imul
mov
mov
cmp
call
cmpb
fmuls
es
cmp
inc
orb
mov
cmpsb
xor
xor
testl
add
pop
lds
movsl
dec
rcrb
sub
lock
out
fwait
mov
or
pop
hlt
add
ljmp
std
fstl
std
mov
or
adc
jg
das
push
out
std
lcall
lea
sqrtps
roll
lahf
test
aam
push
fstpt
jmp
mov
jp
pop
jnp
xchg
cmp
mov
dec
pop
jecxz
call
std
ljmp
push
lret
test
arpl
daa
dec
sti
or
popf
and
lcall
mov
dec
in
loope
fucom
cmp
in
xor
cmc
clc
loopne
jp
sbb
jle
mov
jo
out
sbb
loope
insl
sahf
pop
imul
decl
xchg
icebp
add
pop
push
cmpsb
xchg
xor
jno
movsl
pop
iret
jmp
fistps
leave
cmp
sbb
fucom
or
sub
inc
mov
sti
scas
das
clc
jg
out
inc
add
pop
sbbb
mov
fwait
or
decl
xchg
jae
notb
cmp
iret
fidivs
mov
aas
and
ds
add
fucomip
inc
scas
pop
xchg
lock
xchg
pusha
imul
pop
mov
mov
clc
ljmp
and
mov
std
sbb
test
jge
fidivs
icebp
incl
xor
in
sub
jne
xchg
pop
fucomip
mov
ss
dec
jmp
mov
aaa
fwait
push
inc
xchg
jno
or
sub
inc
shr
dec
jmp
imulb
dec
mov
std
mov
aas
mov
icebp
cmp
test
ss
pop
mov
add
stos
leave
jle
push
ljmp
lcall
inc
aam
cmpl
push
push
je
add
dec
sbb
ja
push
sar
std
jbe
fwait
and
mov
mov
jge
leave
and
jmp
dec
test
stc
xlat
lcall
std
adc
inc
cmpsl
or
xchg
mov
push
ljmp
inc
pop
sub
mulb
in
add
pop
push
dec
out
sti
dec
push
cli
jmp
add
push
into
inc
outsb
xchg
and
ss
stos
mov
test
fld
mov
aas
push
cmp
and
push
out
fiaddl
xor
mov
mov
lds
xchg
mov
pop
adc
push
mov
outsb
add
decl
pop
movsb
jg
mov
loopne
jl
mov
lret
divb
int
daa
sar
mov
pushf
call
fistl
and
pushl
adc
dec
pop
or
sub
divb
xor
jg
jge
xor
push
push
push
mov
mov
stos
or
pop
pop
popf
adc
insl
cmp
or
mov
xor
push
clc
sbb
call
mov
aad
lret
mov
mov
repnz
lcall
and
xorl
loop
sbb
insl
dec
fnstenv
enter
ljmp
mov
aad
jo
add
cli
popf
std
mov
cld
call
jle
addb
sbb
pop
hlt
mov
pop
jb
mov
stos
or
ljmp
and
in
pop
xor
cld
or
mov
insl
jb
adc
repnz
inc
lret
outsl
cmpsb
data16
shlb
sub
sbb
ffreep
add
mov
mov
dec
pusha
pop
mov
popf
jae
push
adc
out
or
div
call
loopne
sub
mov
popf
or
pusha
cld
out
jge
jg
cwtl
idivl
mov
addr16
pop
pop
adc
daa
sbb
cmp
mov
aaa
repnz
mov
dec
lods
push
jecxz
sub
mov
push
aaa
mov
into
nop
push
test
insb
push
imul
pop
scas
lea
mov
cmp
decl
hlt
and
push
xor
sub
ret
insl
pop
std
int
incl
fs
mov
mov
movsl
hlt
adc
jbe
ror
cltd
ljmp
std
mov
mov
sub
movsb
dec
push
pop
inc
nop
mov
mov
and
mov
push
mov
adc
xchg
inc
mov
pop
sub
xchg
ucomiss
lds
das
cld
dec
aam
lds
pop
cli
out
xor
and
aaa
cmp
aas
adc
add
ret
pushl
mov
lahf
sbb
out
pushf
mov
xorb
xchg
jl
imul
jge
cld
cmp
xchg
subl
arpl
fcmovb
jns
sbb
imul
fs
in
ret
insl
lods
mov
decl
fnstcw
cmpl
mov
fsts
xchg
and
jbe
rorl
cmp
pop
push
jmp
test
xchg
xor
das
cld
cmp
shll
aam
imul
mov
repz
inc
mov
pop
fucomp
ss
fistpll
mov
shl
clc
sub
outsb
idiv
cmp
loop
jecxz
jg
fxam
out
dec
in
rcrb
push
addr16
pop
dec
lret
dec
cmpsb
cwtl
iret
or
mov
pmulhw
push
leave
or
xor
xor
sar
in
add
jne
psrlw
out
lret
xchg
loope
ret
dec
pop
mov
inc
aad
out
xchg
repz
or
faddl
jg
mov
mov
sbb
sub
sub
mov
out
jg
pop
lds
pop
jmp
lea
mov
pop
ret
in
lods
or
daa
cmpsb
jl
cwtl
pushf
jae
cmp
or
fs
mov
pop
inc
data16
ljmp
dec
sbbb
pop
push
mov
cld
icebp
sub
pop
pusha
mov
int3
stos
call
pop
loop
jle
jg
rcrb
push
cmpsb
cs
or
std
pop
ss
add
lock
pop
pop
xor
mov
data16
incl
iret
pop
mov
aaa
xor
lcall
add
lahf
sbb
fistpll
jmp
cli
mov
add
ljmp
xor
cmp
inc
sbb
insl
mov
fs
mov
mov
jl
cli
mov
sbb
mov
mov
fsubrl
mov
ljmp
lret
inc
fcoml
or
out
popa
jge
jg
sbb
push
je
mov
loop
out
cmp
mov
dec
insb
xlat
in
enter
fistps
xor
sahf
cwtl
std
nop
push
fcos
dec
or
sbb
dec
imul
xor
lret
mov
pop
ljmp
mov
xor
cmp
popa
pop
shr
repnz
pop
mov
lods
ljmp
add
or
in
bound
inc
mov
sti
pushl
and
or
mov
dec
orl
aam
into
cltd
fsubs
std
hlt
call
lds
cmpsl
and
sbb
stos
xchg
sub
lods
pop
int
mov
ljmp
and
inc
adc
and
sbb
pop
jg
cmp
jle
lods
jge
sarl
dec
loope
push
or
in
sub
fidivs
sbb
popa
lods
and
mov
popl
arpl
dec
lcall
dec
hlt
inc
xchg
pop
mov
sub
mov
jne
mov
mov
std
jg
fwait
ret
or
daa
sahf
pop
iret
and
outsl
dec
sub
popa
insl
outsl
sub
fistps
sbb
mov
ret
xor
lret
add
faddp
mov
cmpsb
lret
lcall
ljmp
pop
bound
sbb
jnp
push
jle
lock
ljmp
inc
pop
or
add
xchg
lret
js
sub
jmp
flds
cmpl
xchg
pop
push
dec
lcall
iret
gs
lea
bnd
jnp
out
mov
test
pop
jg
ljmp
orl
sub
iret
adc
jp
dec
nop
gs
pushl
lds
inc
movsb
xchg
xlat
inc
fldcw
adc
js
int3
mov
mov
fdivrs
fnsave
or
cmp
inc
jns
inc
sub
test
add
in
jbe
call
clc
daa
cmp
rorb
sbb
aam
mov
imul
jnp
fistpl
insb
jg
push
dec
pop
jae
fmuls
jge
jp
outsw
movsl
jg
lock
das
mov
pop
add
sarl
repz
and
test
outsl
xchg
stos
push
sub
roll
and
jbe
mov
jnp
jae
bound
mov
pop
jne
roll
jl
sbb
je
test
xor
or
mov
in
pushl
xchg
cmp
jne
xchg
sub
fsubrs
dec
mov
incl
in
mov
dec
add
shll
fnsave
add
cmc
out
shlb
mov
xor
sar
sbb
repz
mov
inc
pop
cwtl
or
aas
pop
sti
roll
js
lock
pushl
xor
xor
in
mov
shlb
add
jne
push
push
outsl
xchg
sub
lds
jne
leave
pop
scas
outsb
pop
jp
mov
mov
pop
filds
popa
icebp
repnz
adc
aam
fildl
bound
in
adc
js
mov
sti
icebp
insb
pop
bound
mov
in
pop
xchg
fistps
lock
lcall
imul
mov
rol
xchg
adc
icebp
pushl
xchg
ss
fnstenv
add
test
xor
xchg
add
fcmovnu
ljmp
cli
sbb
dec
loop
fnop
sti
xchg
decl
xor
orb
xor
outsb
pop
test
xchg
addl
dec
sbb
decb
js
test
sbb
leave
or
jmp
sub
inc
xchg
or
dec
rclb
int3
dec
fisubs
push
sub
mov
jne
mov
mov
jg
call
sarb
push
adc
push
jg
jl
inc
cli
push
push
cmp
pop
add
bound
icebp
cmp
lahf
outsl
add
mov
stc
pmaddwd
pop
daa
dec
mov
pop
ja
das
insb
hlt
mov
mov
mov
ja
add
aaa
je
stos
inc
and
daa
and
inc
std
pushl
push
insb
ss
xchg
rcl
aas
sarl
mov
sti
add
push
insl
ja
mov
imul
dec
lock
push
inc
loope
push
mov
mov
decl
ss
repnz
adc
inc
mov
enter
xchg
jp
bnd
dec
fsubs
cld
jg
scas
mov
cmp
clc
sub
loop
push
aaa
ljmp
pop
aas
pushl
pop
fwait
icebp
adc
mov
and
dec
or
pop
mov
sar
outsl
hlt
arpl
dec
test
std
cmp
jmp
mov
or
cmp
imul
cmpl
jp
scas
insl
inc
mov
xchg
pop
call
inc
aas
out
mov
mov
int
adc
cmpsb
xchg
in
or
mov
call
mov
mov
pusha
sti
push
or
jg
fmull
addr16
mov
dec
xor
loopne
pop
jbe
lahf
jg
mov
xchg
incl
test
insb
xor
stc
shl
aad
push
jg
ds
shrb
test
popa
shrb
pop
gs
js
jmp
std
out
cmp
popa
ljmp
in
inc
mov
out
push
ficoms
cmp
mov
stc
inc
adcb
js
jne
inc
out
sti
and
jne
stos
mov
out
clc
addr16
in
je
int3
push
aad
inc
stc
adc
out
xchg
adc
mov
inc
decl
std
sub
fisubrs
dec
lahf
pop
pop
jmp
add
pop
clc
push
shll
clc
adc
xchg
call
pop
push
or
insl
jmp
movsl
push
scas
sbb
loope
mov
pop
cli
adc
roll
mov
rcl
repz
xor
nop
jbe
sbb
std
lcall
sbb
mov
push
jnp
lahf
add
push
mov
jg
mov
aaa
int
jb
divb
in
cwtl
in
cwtl
scas
je
aas
cli
ljmp
cmpsl
inc
sbb
xchg
push
inc
jns
enter
and
jg
lcall
pop
aam
enter
adc
imul
adc
aaa
cli
decl
decl
mov
mov
pop
out
mov
cld
mov
test
cmp
aaa
pop
mov
lcall
fptan
test
flds
push
movsb
insb
les
incl
mov
sar
cli
fmuls
mov
xorb
aaa
cli
sbb
lcall
push
jl
push
mov
xchg
sbb
jg
mov
pop
mov
push
mov
test
mov
ss
mov
loopne
cltd
mov
hlt
andl
les
add
pop
mov
icebp
xchg
jecxz
add
outsl
out
call
psllw
js
push
or
and
int
sbb
mov
mov
call
cmp
xchg
fwait
mov
aas
pop
sbb
mov
pop
push
or
lcall
loop
sarb
adc
in
shlb
dec
jo
push
cli
jmp
repz
xchg
lds
test
xor
pushl
xchg
cmpsl
or
push
fwait
enter
insb
fidivl
loopne
mov
fstpt
js
mov
ret
sub
sbb
lds
std
jg
or
repnz
push
cwtl
sub
dec
pop
lcall
ljmp
ficoms
inc
lods
mov
cmpsb
xor
pop
or
and
add
je
lcall
in
shrb
cmp
pop
jno
mov
clc
pop
ljmp
jns
loop
hlt
mov
cmp
ss
test
fists
aam
sahf
push
sub
inc
cltd
cltd
dec
inc
mov
pop
fsubrs
lock
out
push
incl
adc
xor
xchg
addr16
xor
push
sbb
pushl
or
mov
arpl
jg
and
pop
mov
jmp
ljmp
cmpsl
jg
pop
loopne
scas
push
hlt
arpl
sbb
nop
and
lock
sub
cli
pop
push
sub
ficoms
sbb
das
loopne
jg
hlt
fildll
xchg
cs
mov
jge
sbb
mov
inc
lcall
mov
pop
cmpb
aas
cmp
aas
cld
incl
mov
or
cmp
add
adc
push
std
incl
inc
push
repz
push
xor
lock
fsubl
sarl
mov
std
inc
daa
loop
daa
ret
popa
add
jmp
add
popf
test
inc
js
xor
mov
mov
mov
push
and
adc
dec
lock
stos
out
pop
or
in
aam
xchg
xlat
lcall
sarl
xor
dec
pop
and
pop
cmp
pop
ds
mov
adcl
push
rcrl
jnp
cmpsb
mov
add
ljmp
jg
call
jnp
inc
into
cmc
mov
loopne
inc
aam
pushf
xor
decl
xor
cld
bound
push
cltd
ret
je
cmp
enter
pop
jp
call
das
rol
pop
xchg
pop
inc
sub
jl
hlt
call
dec
leave
lods
movsl
push
cltd
shlb
or
mov
decl
xor
mov
int3
pop
or
pop
mov
fsubr
mov
dec
pushl
addr16
pop
aaa
shll
icebp
clc
lods
jmp
call
jmp
fsubrl
push
js
enter
bound
dec
or
adc
pop
mov
pop
mov
inc
incl
mov
push
bnd
lods
out
pop
clc
xchg
mov
push
fnstsw
icebp
jl
fbstp
ja
outsl
mov
incl
push
fstps
jns
mov
subl
in
das
jg
dec
cmc
sti
sub
pop
ficoml
std
jmp
les
aam
push
mov
mov
pop
inc
mov
lds
notl
out
nop
mov
fisttps
add
popa
inc
mov
jbe
sbb
aaa
cli
call
dec
sbb
sub
inc
andl
pop
sti
ljmp
subl
in
leave
or
stos
lock
jl
outsb
and
push
subb
adc
push
mov
aad
pop
js
outsl
in
mov
mov
mov
push
lahf
push
mov
dec
mov
lcall
subb
push
add
push
push
addr16
fcoms
decl
mov
shll
popa
sub
addr16
add
mov
imul
pushl
hlt
xor
mov
pop
rol
popf
sub
mov
mov
jg
jmp
mov
add
xor
dec
incl
cmp
ficomps
mov
inc
fcmove
mov
sbb
scas
mov
test
add
ret
mov
xor
mov
das
incb
inc
mov
mov
or
cwtl
and
clc
sub
das
dec
std
decl
movsl
pop
cmpsl
int
rcll
jo
or
or
mov
test
or
rcrl
nop
outsb
or
ret
leave
push
clc
sub
stos
shlb
mov
scas
mov
das
icebp
aaa
cld
mov
lahf
in
lods
jbe
out
push
adcl
mov
ljmp
mov
mov
outsb
enter
and
adc
mov
movsb
sub
jp
idiv
cli
pop
add
loopne
add
jns
rorb
pop
pop
mov
pop
call
decb
frstor
sahf
aad
scas
mov
push
int3
adc
pop
xchg
pushl
call
insl
xchg
mov
iret
xchg
popl
mov
clc
ss
cltd
inc
push
test
mov
sbb
cmp
adc
cmpsb
pop
fisubrs
rclb
xchg
out
lds
aas
push
add
jnp
jg
xchg
and
add
xchg
insl
insb
stos
mov
ret
jg
pushl
jbe
pusha
pop
xor
das
mov
les
pop
mov
lcall
inc
gs
stos
sub
xchg
mov
lret
pop
ljmp
ret
jne
jg
cmpsl
idiv
sbb
repz
inc
pop
mov
dec
dec
hlt
push
mov
jbe
sar
mov
cmp
pop
xchg
adc
aad
shrl
xchg
hlt
sbb
mov
std
mov
push
jb
test
cmp
push
das
dec
dec
popa
sub
notl
dec
mov
jge
inc
pusha
mov
das
push
repnz
mov
adc
out
push
mov
mov
test
and
gs
push
pop
jns
jmp
jno
dec
and
dec
iret
ret
pusha
pop
xlat
add
inc
clc
decl
xor
les
in
fldt
je
iret
push
mov
cmp
cmc
adc
jg
cld
jmp
imul
mov
cltd
push
add
lret
cmc
and
mov
jmp
aad
dec
ret
and
loope
cld
jg
loopne
or
mov
lock
mov
incl
stos
call
push
and
orb
lds
and
adc
das
adc
loope
cmp
pop
jmp
dec
jno
inc
cmpb
and
inc
mov
fmulp
mov
sub
stc
jbe
aas
cmp
push
and
aas
add
icebp
stc
data16
push
or
scas
mov
fistpll
decl
pop
loop
das
inc
jae
repz
jecxz
ljmp
pop
jg
adc
enter
shr
movsb
xchg
int
mov
mov
call
lock
outsl
pusha
jle
rclb
push
push
lds
mov
sarb
pop
insl
filds
test
popa
pop
lods
into
clc
push
enter
test
jbe
cld
push
fistpl
rcrb
aas
jno
sahf
scas
add
pop
mov
sub
outsl
adc
cs
mov
or
mov
inc
imul
pushf
pushl
ret
lods
cs
mov
jge
push
push
xor
pushl
cld
mov
loopne
sbb
mov
shll
jne
mov
lahf
or
lock
pusha
xabort
out
push
mov
test
rol
repnz
hlt
pop
cmp
loope
or
test
popf
dec
jecxz
xor
cld
add
lcall
cwtl
scas
stos
or
stos
and
cld
xchg
outsb
scas
mov
fcompl
mov
mov
sti
test
or
or
incl
cmc
adc
scas
fbld
test
cmpl
mov
test
repnz
xor
stos
fisubrs
out
jo
sub
loop
outsb
call
dec
clc
pop
cli
jmp
out
and
cld
pop
std
in
loop
fisttpll
push
outsl
ja
icebp
mov
mov
push
int3
add
and
movsb
adc
icebp
cmpsl
sbb
adc
std
xchg
daa
mov
cmp
jg
mov
mov
jecxz
mov
xchg
xlat
and
pop
pop
cs
xor
scas
dec
mov
fiadds
sub
leave
mov
call
aaa
sbbb
in
lods
push
sub
push
loop
add
out
mov
adc
fsubrp
jp
sbb
fsin
ljmp
pop
mov
lahf
mov
cmp
fstpt
dec
scas
xor
sub
fists
xchg
out
mov
inc
mov
lret
fsub
push
jb
and
adc
mov
ljmp
popa
adc
inc
jmp
movsl
movsb
aaa
clc
pop
ret
mov
in
outsb
xlat
shl
xor
xor
ss
add
mov
std
decl
pop
sbb
fmull
add
push
sub
in
add
shll
out
pushl
cli
jp
inc
pop
ds
std
adc
sub
sub
mov
lret
and
push
dec
xor
outsl
rorb
shrl
roll
lods
sbb
test
into
jg
sub
mov
push
fwait
in
ss
lret
out
inc
movsl
jge
pop
xor
lods
enter
aas
cmc
rcl
stc
loop
int
sub
or
mov
fdivrl
inc
btr
push
cmpsl
mov
xor
lahf
or
loope
dec
movb
insb
je
aaa
hlt
incl
adc
test
ss
mov
mov
cmp
call
mov
jmp
inc
jg
int3
xchg
pop
and
push
movsb
outsb
ds
mov
cmc
cmp
stos
je
xlat
push
or
mov
sub
dec
xor
adc
scas
arpl
jno
mov
adc
clc
push
mov
inc
in
pop
mov
or
ljmp
cmp
movsb
pushf
or
lea
or
out
ljmp
jae
js
jmp
sub
xor
rclb
int
push
sar
mov
mov
mov
call
cld
ret
rcrb
movsb
rcll
jecxz
cmp
inc
or
mov
ret
mov
mov
dec
sbb
mov
inc
dec
push
inc
xchg
dec
pop
cmc
cmp
test
mov
mov
mov
call
out
inc
sbb
jne
or
mov
mov
int
add
mov
fldt
es
dec
arpl
adc
fucomip
repz
mov
in
jg
pop
jnp
mov
ja
dec
decl
clc
push
pusha
pop
inc
sub
bnd
outsb
mov
lods
leave
jbe
jle
incl
pop
fucomp
sub
push
xchg
in
out
jno
jne
mov
idiv
jg
incl
or
loope
or
dec
out
inc
cmp
mov
jl
add
fdivl
add
andb
ljmp
lock
in
fistpl
lock
sub
lret
ds
mov
repnz
ffreep
mov
jmp
jo
fwait
sub
out
aas
or
stos
xchg
push
mov
pusha
mov
mov
ljmp
push
push
sbb
push
push
sahf
add
sub
loopne
sar
ljmp
mov
pop
xchg
push
scas
iret
or
xchg
ret
mov
lock
lcall
jg
mov
stc
mov
push
out
jg
hlt
push
adc
mov
incl
dec
mov
out
jl
pushf
mov
dec
sbb
jmp
fiadds
pop
mov
pop
mov
adc
rcrl
sub
and
lret
cwtl
pusha
out
aam
inc
in
sahf
sbb
movsl
pop
jmp
outsb
dec
mov
jg
push
xchg
js
and
pop
adc
fcmovu
stc
incl
mov
mov
mov
adc
loopne
fimull
rcr
lcall
jmp
in
jmp
mov
cld
clc
sub
adc
leave
das
pop
mov
add
decl
aad
fwait
popf
orl
mov
pop
pop
push
mov
mov
cmp
or
push
mov
clc
lret
lods
js
fwait
aam
push
in
inc
or
pop
cmp
jmp
hlt
jecxz
das
lcall
cwtl
add
pop
jae
pxor
push
je
pop
call
in
sar
jg
mov
rol
xchg
inc
adcl
decl
lock
mov
push
xor
jnp
jbe
sub
jg
mov
hlt
xor
hlt
jne
push
pop
push
dec
fwait
xor
jne
incl
jns
dec
aas
ret
stos
and
and
xor
add
test
adc
add
dec
scas
fcoml
jno
and
cmp
aas
fwait
aam
mov
mov
mov
pop
mov
add
mov
into
mov
sti
call
and
loopne
jp
jo
addb
lea
or
sti
mov
decl
lahf
in
pop
sub
adc
leave
fdivp
bound
std
mov
sub
jb
and
test
jge
movsb
in
aaa
call
and
clc
aaa
sub
jae
daa
inc
fmull
jp
movsl
loop
lcall
xchg
inc
mov
dec
mov
movsb
inc
lds
push
xchg
out
cli
mov
xor
ss
fisubs
addr16
loopne
mov
call
mov
jl
xor
scas
sbb
push
insl
lods
dec
std
jg
xor
inc
adc
adc
popf
jo
lods
and
mov
aam
xchg
push
xchg
sub
enter
hlt
std
lcall
sbbb
pushf
push
into
enter
stos
mov
call
ret
sbb
das
loop
mov
mov
mov
popf
ljmp
call
and
fbld
xchg
fst
aas
fstpt
repz
daa
pop
mov
pop
cmc
pop
mov
lea
push
jg
jg
les
mov
gs
outsl
ljmp
shll
out
in
test
jno
add
sti
inc
adc
push
cmc
lret
jo
cmpsl
mov
ljmp
out
sbb
test
or
js
sbb
jno
mov
add
fildll
inc
lods
cmp
cli
pop
test
in
lock
ljmp
int3
arpl
mov
lock
pop
or
lcall
xchg
mov
mov
lret
in
cmp
rdtsc
push
out
mov
mov
xchg
bound
ss
roll
sbb
ffreep
pop
clc
cmpsb
lock
ss
push
addr16
mov
push
decl
fstpl
fisubrl
sbb
mov
pop
stos
mov
cmpsl
lcall
psubb
fsubs
mov
push
in
mov
adc
cmc
out
ljmp
roll
jle
ficomps
sbb
xchg
cltd
sub
int3
sbbb
cltd
scas
xchg
sub
lcall
loop
test
repnz
bnd
popa
ds
push
mov
decl
push
sbb
xchg
mov
add
les
test
insl
fcomps
les
cmp
dec
stos
nop
arpl
mov
mov
dec
dec
sbb
jnp
sbb
sub
jns
and
xchg
cmp
out
jae
mulb
or
sbb
pop
je
lea
test
jp
stos
xor
jg
fcomip
test
out
mov
ljmp
in
int3
xorb
push
jp
push
cli
ds
push
movb
push
mov
push
mov
pop
xchg
in
leave
xchg
in
sbb
push
test
xchg
or
decl
adc
cmp
pop
mov
sbb
cmp
out
stc
lcall
fidivs
popl
ljmp
frstor
jmp
in
fcomip
jg
and
inc
pop
or
mov
int
lea
pop
lahf
pusha
fidivrl
movsl
or
in
pop
adc
xor
mov
jmp
mov
lret
lods
lods
adc
push
arpl
lock
incl
and
outsl
pop
inc
jnp
cli
jcxz
xor
adc
ret
mov
fistpl
dec
inc
in
out
adc
mov
js
sbb
xchg
mov
or
in
inc
pop
aaa
in
inc
mov
loopne
sbb
adc
jg
pop
add
pop
sub
jne
cmpsl
loopne
popa
cmp
and
jecxz
cmc
call
push
daa
mov
imul
orb
cwtl
add
lcall
pusha
in
dec
mov
dec
mov
push
adc
ljmp
cmpsl
xor
imull
push
je
push
shl
dec
cmpxchg
push
sarb
add
xor
rolb
ja
loope
push
mov
mov
ret
in
jp
in
dec
ficomps
ds
in
imul
es
inc
cltd
mov
pop
icebp
jmp
lods
or
inc
or
xchg
jnp
push
pushf
fldt
inc
inc
pop
pushl
js
data16
cmc
negb
pushf
aaa
mov
je
sub
xchg
inc
es
mov
sub
lea
mov
mov
clc
jmp
sbb
dec
pop
xchg
cli
add
and
loop
test
into
arpl
mov
cmp
fisubs
pop
and
push
shll
add
xor
add
push
loope
call
arpl
stos
mov
mov
lds
push
sbb
jmp
in
add
loope
test
mov
xchg
jns
sbb
mov
pop
ret
sbb
jg
cmp
out
es
dec
cmpsb
and
in
cmpsb
xor
fiadds
push
in
scas
sbb
or
daa
mov
mov
stos
pop
jecxz
lret
stos
dec
jmp
adc
out
jno
stos
mov
or
inc
outsl
sti
and
xor
mov
jo
mov
aaa
fbld
leave
push
mov
js
xchg
pop
cmp
mov
in
ljmp
ficoml
inc
mov
scas
cmpsl
cmc
iret
pop
sbb
fcompl
mov
jne
jmp
mov
rorb
cld
decl
push
arpl
fwait
jg
arpl
add
arpl
mov
ljmp
inc
sub
inc
cs
stc
roll
push
jo
and
subb
loope
jg
pop
clc
daa
push
lcall
test
stc
fcmovbe
test
out
pop
out
aas
pop
xchg
test
jecxz
jl
lds
les
xchg
dec
and
decl
or
mov
push
xchg
nop
ret
jle
mov
push
add
aas
test
jg
lock
aaa
inc
fisubs
mov
add
cli
pop
clc
ljmp
sub
sti
jecxz
push
mov
mov
cmp
jg
pop
xor
ret
pop
cmp
sub
dec
mov
add
pop
cli
push
fsubr
cwtl
dec
sub
cmpsb
lcall
dec
push
xchg
jae
and
adc
mov
xchg
mov
fcomip
ljmp
int
sbb
cs
mov
decb
jnp
js
das
add
mov
fisttpl
les
negb
incl
add
rcrb
test
jno
jge
fs
stos
jne
jne
xchg
and
rcrl
push
decl
or
sahf
mov
jbe
xor
jg
adc
jno
test
mov
andb
popf
call
jp
jbe
pop
jb
leave
and
cmp
aas
push
cwtl
pushf
cmp
pop
add
or
jl
leave
ja
aas
adc
fildll
sbb
insb
ds
sub
pushl
mov
sbb
ficoml
mov
enter
jmp
push
mov
data16
pop
mov
jl
insl
ror
addr16
mov
sbb
jmp
dec
pop
or
pop
imulb
push
lods
xchg
stos
xchg
std
lcall
out
popa
lods
inc
addl
mov
stc
pop
leave
nop
pop
xchg
js
pop
sahf
xchg
xor
mov
jns
mov
pop
iret
daa
push
pop
mov
ljmp
mov
mov
inc
push
das
sti
fstpt
jg
jae
into
xchg
pop
cmc
sbb
adc
movsb
ret
sub
enter
adc
and
outsb
sbb
cwtl
dec
dec
mov
or
jmp
xchg
lea
cmpsl
insb
imul
outsb
and
jmp
dec
mov
inc
ja
lahf
mov
es
xor
lcall
mov
std
iret
jecxz
mov
mov
mov
dec
fdivrp
pop
mov
sub
test
js
push
adc
jg
sbbl
pop
cli
pop
jmp
push
adc
push
out
test
xchg
push
out
and
jb
sbb
jnp
stc
push
adc
decl
std
xor
add
push
pop
mov
out
cmpb
pushf
jle
sbb
test
popf
mov
fisubrs
call
iret
inc
mov
mov
stos
aas
movsb
je
sbb
adc
aaa
mov
insl
push
popa
jge
cmp
fistpll
call
je
loop
in
jl
inc
out
in
ret
ret
fdiv
jb
jg
pop
dec
test
lret
push
out
test
mov
xlat
int3
inc
push
outsb
faddl
jg
loopne
addl
or
mov
jg
inc
out
sahf
push
dec
enter
mov
dec
rcrl
cmc
inc
out
mov
decl
in
loopne
ret
ret
inc
adc
ljmp
ret
mov
iret
xor
fsub
push
test
mov
lcall
inc
or
cwtl
and
cmpsl
sub
inc
cmpsl
outsl
xor
decl
ret
popf
jmp
mov
xor
inc
sbb
inc
jbe
dec
mov
jnp
inc
mov
out
in
xor
mov
adc
xchg
push
xlat
mov
xchg
mov
dec
xor
inc
push
mov
std
sub
mov
mov
add
xchg
mov
mov
dec
mov
daa
inc
inc
xchg
dec
gs
shlb
and
add
repz
div
out
lahf
add
jge
test
pop
lcall
filds
push
jne
sbb
push
push
push
icebp
mov
cwtl
cmp
push
pushl
push
adcl
scas
mov
add
xchg
fstpt
mov
mov
add
icebp
sbb
adc
dec
pusha
cmp
aad
mov
xor
lcall
add
lods
inc
stc
xchg
add
or
aaa
pop
call
jno
mov
and
xchg
lcall
sub
adc
jo
jge
addl
sahf
popf
lock
cmc
jle
jge
icebp
decl
adc
mov
addr16
jl
arpl
cld
or
enter
jg
dec
sbb
pop
cmpsb
loopne
inc
popa
adc
jle
xchg
nop
roll
push
or
ljmp
jno
call
shrl
cmp
out
push
or
out
sti
adc
imul
out
aam
ja
or
inc
or
mov
xlat
inc
and
ljmp
mov
adc
cmp
xchg
sbbl
adc
push
mov
push
push
les
add
ret
outsl
in
call
out
fs
imul
mov
xor
pop
mov
add
cwtl
insb
and
lds
leave
sbbl
pop
ss
ret
test
push
jecxz
shll
insb
push
imul
push
aad
negl
lcall
cmpsb
mov
dec
mov
lds
fs
jg
incl
je
mov
pop
dec
cli
int
lret
mov
or
aas
mov
sub
mov
inc
pusha
in
push
or
xchg
sub
jae
sti
pushl
in
jbe
stc
sbbl
pop
out
mov
xor
jg
jnp
cmpsl
push
movb
push
add
cmp
pop
jmp
mov
adc
dec
sbb
pop
xchg
pop
push
xlat
xor
cli
mov
test
stos
or
sbb
movsl
lcall
push
xor
xchg
jg
dec
dec
in
cs
sub
fwait
dec
aad
pop
ud0
stos
fmulp
ds
cld
andb
xchg
fidivrs
jg
aas
std
lcall
lret
mov
out
fsubrs
mov
cwtl
mov
push
out
or
addr16
add
sbb
xor
add
cltd
mov
dec
ret
cmp
and
cld
test
pop
lcall
dec
and
out
or
and
fwait
cmpl
add
lcall
jmp
pop
adcl
push
and
jg
mov
ficompl
and
push
xor
mov
mov
mov
andl
mov
sub
xlat
ja
mov
mov
repnz
out
std
insb
xor
jge
mov
outsl
icebp
out
call
cmp
mov
xor
mov
mov
outsl
and
mov
mov
enter
stos
pop
call
inc
pop
mov
sub
pusha
xor
cltd
and
sti
mov
sub
lahf
lcall
pushl
test
dec
aas
js
orb
pushf
daa
adc
adc
incl
ljmp
adc
test
in
lds
push
jmp
icebp
aas
in
ds
fdivrp
sbbl
mov
or
pop
cli
cs
xchg
lea
dec
mov
xor
pushl
std
xchg
pop
pop
inc
lret
or
xchg
mov
int
stc
out
in
dec
or
addb
lcall
daa
outsl
cmc
fisubl
cmovs
das
mov
adc
adc
adc
loop
fildl
xchg
cmp
fwait
adcb
int3
cmp
jno
sar
jmp
cmp
cmp
aad
pop
cld
mov
scas
test
mov
decl
xor
pop
dec
lcall
lcall
add
in
xchg
pushf
mov
aad
cld
xor
mov
mov
mov
imul
mov
incl
xchg
adc
pop
pop
cmp
pop
aaa
test
or
lods
bound
leave
loop
xor
add
push
push
mov
mov
mov
hlt
add
scas
das
lahf
lcall
outsl
xor
enter
in
enter
sbb
mov
loop
ljmp
mov
aaa
das
rorl
call
jmp
std
mov
shr
adc
cld
xlat
sub
xchg
movsl
mov
add
inc
and
lcall
rclb
mul
xor
testl
lds
sti
adcl
add
adc
push
xorl
and
jg
jmp
scas
arpl
mov
or
shll
mov
movl
jmp
push
in
leave
jbe
cmp
fnstsw
mov
pop
pop
test
cld
in
movb
xchg
daa
inc
sbb
add
ljmp
mov
or
or
movsl
jo
xor
jne
test
out
inc
add
clc
mov
fbld
arpl
push
dec
je
repnz
shr
push
jmp
les
loop
jge
es
mov
test
push
push
dec
orl
jl
sete
ljmp
mov
mov
ljmp
jmp
dec
pop
or
xchg
int3
dec
lcall
mov
sub
push
fildll
out
and
imul
jge
mov
loope
arpl
push
mov
addb
fcmovnu
dec
sti
mov
push
jns
lea
sar
xchg
xchg
cmp
lahf
sar
and
testb
out
mov
or
jne
int3
movsb
mov
inc
and
sbb
jg
dec
aad
mov
cld
js
pop
jno
and
aas
jle
ljmp
mov
sub
movsb
addb
mov
sub
push
in
pop
movsl
cli
dec
push
imull
inc
lock
cmpsl
fistpl
jg
sbb
or
and
aam
and
movb
out
fbstp
lea
mov
cmc
lds
inc
lods
fdivrl
loope
in
outsb
outsb
loop
lcall
jmp
pop
cltd
mov
and
and
or
ret
push
jl
jo
lcall
mov
push
das
fs
rcrb
loope
push
add
pushl
repnz
insb
cwtl
or
pop
sbb
mov
mov
out
sbb
inc
push
inc
sbb
aas
inc
stos
xlat
cmovo
stos
cld
imul
push
pop
xchg
test
mov
jecxz
sar
xchg
stos
pop
rcrb
mov
dec
loope
jg
xchg
mov
sbb
scas
push
inc
pop
shll
das
test
je
xor
dec
notl
ss
cmpsl
dec
jns
push
lahf
test
and
int3
push
test
or
mov
roll
mov
sarb
ja
cwtl
push
adc
lahf
xor
mov
ljmp
ret
daa
push
fbstp
lock
dec
addr16
jbe
push
loop
cmc
jno
call
cmp
dec
jecxz
dec
add
fwait
and
jl
and
pushf
imul
add
xchg
fbld
xor
add
xchg
sub
ss
and
and
mov
adcl
dec
addr16
clc
jg
mov
mov
rcrl
jle
nop
cmc
push
fisubrs
movsb
pop
jb
xchg
decl
mov
push
mov
scas
int3
jmp
movsl
add
pushl
decl
jl
inc
mov
pop
dec
movsb
pop
push
or
imul
jp
push
xchg
outsb
dec
test
push
dec
fldl
pop
push
dec
mov
shr
repnz
jb
imul
aaa
adc
xlat
pushl
loopne
sar
sar
lods
leave
sub
insl
fwait
in
fistl
mov
xor
push
inc
pushf
mov
cmp
pusha
les
cli
push
and
add
ljmp
test
jns
xchg
jmp
icebp
push
jecxz
lea
pop
in
inc
xchg
cmp
mov
outsl
icebp
outsl
push
jmp
xor
lea
push
cmc
mov
push
int3
inc
pushl
es
stos
jecxz
nop
hlt
out
xchg
and
dec
jg
sbb
mov
jbe
subb
clc
flds
inc
mov
into
mov
and
ffreep
subl
and
ja
or
fld
aam
lret
mov
add
ljmp
cld
loope
ret
push
xlat
xchg
xor
or
pop
movsl
ljmp
inc
lret
xchg
les
and
test
and
popf
jbe
fsub
xchg
rorb
add
fildl
and
decl
lds
loopne
push
insb
std
fcoml
lret
movsl
push
jl
lret
decl
std
jmp
fcomi
out
and
add
sub
or
mov
js
lcall
jbe
stos
lock
adc
dec
and
mov
ljmp
in
lcall
call
add
insl
into
pushl
gs
cmpsb
pusha
lcall
movsl
mov
test
lods
cmpsb
sub
ljmp
jecxz
push
les
add
and
dec
mov
cmp
mov
mov
mov
lret
mov
push
mov
jg
icebp
cmp
icebp
ja
adc
scas
loopne
std
and
incb
filds
incl
pusha
xchg
lahf
shll
mov
imul
xchg
loopne
lcall
mov
in
test
je
mov
push
inc
push
xchg
ljmp
lods
decl
imul
shrb
in
es
repnz
imul
lcall
or
imul
lock
fildll
xor
incl
ret
adc
cs
outsb
in
add
jp
test
cmp
cs
inc
aas
incl
jl
sbb
lods
lret
push
mov
insb
int3
insl
or
sbb
dec
cmp
mov
add
xchg
test
mov
dec
inc
cmp
fldcw
mov
lcall
in
popf
dec
fwait
sbb
cld
adc
sarl
sbb
mov
test
push
lret
sbb
push
sub
dec
rcll
ljmp
jmp
adc
ja
xchg
sbb
dec
and
movb
pusha
mov
incl
aas
stc
cmp
jb
or
push
decb
std
jmp
rcrl
rep
add
in
sbb
imul
push
cwtl
insl
pushf
and
ljmp
hlt
jecxz
mov
jbe
push
fst
push
loop
or
mov
jg
mov
or
js
mov
dec
adc
dec
nop
cmpsl
lock
mov
out
and
push
mov
jge
cltd
scas
mov
or
pushl
pop
cmpsl
xchg
subb
jne
inc
or
scas
mov
lret
jnp
push
push
outsl
decl
repnz
and
aas
jbe
aam
into
pop
mov
inc
out
lock
lock
fisttpll
mov
rclb
sarb
call
js
push
incl
sub
push
pop
mov
bound
incl
dec
pop
cld
rclb
push
fldl
pop
inc
pop
and
push
cld
pushl
and
jo
out
sub
adc
into
rcr
sub
pusha
xchg
imul
push
leave
sti
idiv
pop
mov
ljmp
movsl
syscall
and
adc
pop
jg
loop
cmp
mov
mov
loopne
into
arpl
pushl
loopne
stos
push
xlat
mov
js
test
dec
arpl
outsl
mov
cmpsb
pusha
inc
loope
sbb
cmp
sub
mov
incl
movsl
pusha
jecxz
das
loopw
popa
jmp
sahf
loop
jae
ds
fst
pop
call
inc
in
or
or
cmp
cmpsl
xchg
imul
mov
jne
out
dec
insl
cwtl
jns
pop
or
ja
dec
inc
test
mov
repz
dec
test
inc
test
adc
inc
stos
pop
iret
xchg
lock
leave
mov
iret
iret
in
call
loopne
call
fsts
jnp
cmp
push
orl
jmp
aam
sub
adc
xor
dec
mov
or
mov
loope
ljmp
arpl
shl
xchg
dec
call
jns
mov
pushl
inc
adc
mov
sbb
add
loope
repnz
inc
aas
add
bound
les
sub
pop
add
inc
push
xchg
mov
les
mov
ret
cld
sub
popf
mov
aas
pushf
fucomip
xchg
fwait
push
movsb
sysenter
pop
jbe
dec
inc
xchg
xchg
cmpsl
cld
cld
mov
shl
mov
jg
pop
jg
fisubl
add
xchg
in
pop
testl
sub
stos
mov
and
sahf
sti
xchg
ficomps
mov
jns
repnz
mov
ret
or
and
aaa
lret
xchg
imul
sub
xchg
adc
sbb
mov
cmc
jge
push
int3
mov
inc
mov
cltd
jnp
jl
jne
ret
add
shlb
cmp
or
clc
and
sar
cli
cmp
sahf
movsb
pusha
xor
movsl
mov
or
stos
bound
jmp
add
lock
inc
xor
aad
scas
mov
arpl
cmp
nop
jmp
sub
outsl
fsubr
fldt
or
push
jbe
sub
xchg
andb
mov
pushl
arpl
and
or
mov
inc
cmpsl
clc
lods
pop
xchg
add
insb
repnz
adc
mov
in
ljmp
std
xchg
stc
movsl
xchg
out
ret
pop
and
mov
or
adc
dec
mov
outsl
hlt
mov
in
sub
cld
lcall
jb
push
jecxz
dec
imul
scas
and
fnstsw
mov
jne
ret
clc
aas
and
les
mov
sbb
mul
ds
or
and
jg
jp
icebp
js
inc
cmpl
fwait
add
pop
sub
pop
xchg
pushf
into
loop
ljmp
cmc
cmp
cltd
mov
punpckhbw
in
leave
push
mov
fists
aam
and
push
outsb
pusha
mov
push
das
mov
pushf
pushl
or
and
inc
push
repz
jno
movsb
add
push
inc
xchg
mov
outsl
cmc
incl
sub
dec
inc
popf
pop
push
sub
or
mov
jae
in
or
xchg
scas
data16
xchg
pop
inc
repz
pop
add
fadds
incl
loope
les
divb
lock
mov
add
clc
jp
pop
pop
sbbl
cmpsb
jne
pop
inc
je
sbb
push
std
pushl
ja
rcl
aam
in
sub
mov
into
xor
sub
ljmp
shlb
je
out
dec
and
pop
loop
pop
sbb
aaa
std
jmp
pop
mov
mov
and
hlt
sbb
adcl
pushl
inc
pop
and
add
push
jnp
cmpsl
mov
jg
jp
cmp
scas
in
adc
pushl
ljmp
sbb
outsl
mov
xor
movsl
nop
pop
loopne
ds
pop
arpl
rclb
pop
mov
mov
sbb
cli
outsl
pop
clc
xlat
fs
das
mov
jg
jmp
fwait
shrb
das
or
jbe
cmp
int3
in
cmp
inc
movsl
scas
call
call
mov
cltd
mov
mov
mov
mov
hlt
mov
fsts
mov
insb
aad
test
jmp
pop
cmc
dec
into
pushf
jg
mov
in
inc
xor
and
mov
loop
cmp
lret
mov
adc
leave
adc
or
jns
push
push
xchg
sbb
inc
xchg
lret
fcompl
mov
int3
pop
clc
sbb
push
pop
xchg
lcall
mov
ss
sbb
cmp
ret
xor
mov
call
mov
iret
das
call
pop
fidivrs
cld
push
inc
jo
fnstsw
xchg
adc
out
into
cld
cmpsl
pop
adc
push
cmpsl
mov
gs
dec
sbb
xchg
nop
jecxz
ljmp
xchg
mov
roll
orb
mov
fdiv
or
inc
pop
std
jno
add
mov
test
data16
mov
popf
sbb
je
aaa
fcmovnb
mov
xchg
lret
cmc
jg
push
cmp
mov
jg
decl
cmpsb
out
jbe
adc
sub
cwtl
lret
push
push
pop
rorb
inc
psllw
jge
js
push
orl
mov
xchg
sti
aam
jb
ret
cmp
xor
fcomip
call
pusha
xchg
jmp
sub
hlt
rorb
push
shll
nop
lods
xor
cmp
mov
push
mov
xchg
pop
xchg
xor
aam
pushf
inc
fsubr
mov
mov
popa
int
test
lret
cmpsl
xor
xchg
push
push
test
inc
mov
pop
mov
sbbl
jge
punpckhwd
and
aas
adc
out
xorb
push
and
std
xor
xor
addb
jg
inc
ljmp
test
and
sub
pop
imul
jmp
das
loop
outsb
std
lock
adc
cmp
jg
inc
sub
add
mov
popf
call
shr
adc
jg
es
decl
fmuls
push
pop
call
incl
notl
inc
addr16
push
aam
mov
adc
xchg
mov
ud0
sbb
gs
add
sub
sbb
dec
or
mov
call
into
sbb
adc
adc
xchg
repnz
xlat
les
sub
add
or
ljmp
ret
push
sbb
xchg
push
cmp
sub
pop
lds
push
add
sbb
dec
aas
sbb
mov
mov
mov
ljmp
cmpsb
jo
sub
jmp
pop
aaa
or
pushf
outsb
fcmovnu
xchg
decl
bound
inc
mov
frstor
push
or
sbb
test
lcall
jns
loop
flds
xor
xchg
fbld
ja
lcall
clc
jg
mov
roll
dec
mov
cmp
bound
cmp
dec
jg
ljmp
repnz
adc
iret
mov
pop
push
out
fwait
xlat
sahf
daa
rorl
sbb
xchg
inc
dec
mov
fwait
insb
push
fwait
jmp
cmp
sbb
jge
icebp
aam
push
loop
mov
mov
pushl
push
daa
mov
xor
mov
cmpsl
imul
aam
test
xchg
leave
fildll
cmp
clc
rorb
xchg
pop
and
and
pop
sbb
fisubrs
addr16
and
das
or
incl
nop
push
xor
dec
inc
pusha
ja
mov
inc
cmp
inc
nop
push
mov
lcall
add
pop
add
push
faddl
in
fwait
adc
push
test
push
mov
shrl
pcmpeqd
sbb
iret
xchg
fcomip
call
cwtl
and
pop
das
jmp
adc
sbb
add
push
xchg
fsubr
inc
xchg
pushl
pushl
iret
stos
mul
lea
cmpsb
pop
dec
mov
jne
push
jg
jmp
iret
jno
jmp
xor
dec
push
insb
neg
jg
xorb
sahf
lret
or
cmp
lds
loope
mov
inc
ror
mov
jg
call
fidivl
pop
sub
insl
fisubs
xchg
mov
dec
or
mov
inc
pushl
sub
mov
sub
mov
or
pop
leave
loop
ret
dec
call
sar
cmp
sub
ljmp
mov
cli
decl
ficompl
cwtl
aam
cmp
hlt
and
les
lcall
incl
xor
bound
adc
std
xchg
jecxz
call
xchg
mov
mov
add
not
repz
test
push
insl
rolb
popf
dec
add
aaa
cld
incl
ss
test
sub
jg
call
mov
ret
aaa
jp
sub
in
testl
cmpsl
mov
pop
or
sub
or
add
mov
outsb
adc
sbb
push
jb
xor
in
in
dec
outsl
outsb
adc
push
jns
gs
or
loopne
push
shlb
je
dec
mov
add
incl
jae
arpl
gs
aaa
xor
add
popa
addr16
sub
inc
std
not
ficoml
cmp
in
incl
addr16
push
insb
dec
cltd
fisttps
adc
push
mov
add
adc
ljmp
or
aas
enter
mov
repnz
sbb
movzbl
add
loopne
add
ss
ljmp
test
fcomp
cmp
and
fsubl
hlt
pop
pusha
push
push
adc
push
push
fstpt
mov
or
push
push
add
push
push
add
push
and
cmpsb
decl
xlat
outsl
pop
push
test
push
push
or
sbb
sbb
push
pop
pop
scas
lcall
mov
add
enter
pop
and
pop
test
pop
pop
and
ret
or
xor
pop
sti
pushl
rcrl
sub
sub
pop
sbb
fcmovnbe
mov
jg
pop
add
pusha
call
inc
bnd
mov
inc
call
fists
add
mov
cmp
push
and
incl
aad
enter
mov
lea
movsl
adc
dec
repz
jmp
icebp
arpl
sarb
sbb
int
call
aas
insb
pop
repnz
bound
pop
xor
cwtl
cmp
sbb
fsts
jae
in
mov
mov
lock
js
jp
lods
movsl
push
sbb
mov
out
xor
test
fcmovnu
pop
jge
out
xchg
lods
xchg
or
enter
adc
je
inc
jb
outsl
lcall
insb
push
gs
xchg
std
inc
roll
dec
gs
jbe
inc
outsb
sbb
jmp
clc
das
lock
repnz
popf
shrb
mov
mov
jp
sbb
push
inc
gs
pop
xor
lea
cli
mov
xor
inc
data16
adc
jg
jmp
jo
push
outsw
inc
adc
cmpsb
push
insb
push
jmp
lcall
cld
das
and
mov
inc
imul
mov
out
neg
lret
out
push
incl
push
rorl
push
outsb
push
or
loope
out
lret
mov
push
je
sbb
imul
and
sbb
incl
mov
popf
dec
xchg
jae
ljmp
stc
or
or
lret
aas
inc
inc
push
xor
outsb
inc
mov
hlt
jmp
outsl
int
push
outsl
stos
jno
outsb
cmp
push
test
adc
ficoml
jmp
lods
push
movsl
push
mov
arpl
sub
mov
inc
push
outsl
cmp
ss
sbb
fisttpll
inc
call
or
or
pop
mov
jbe
inc
scas
mov
fwait
or
dec
mov
test
cmp
cmp
jg
sbb
xor
push
in
sub
pusha
adc
fdivrp
decl
nop
dec
mov
mov
and
stos
inc
int3
sarl
inc
test
mov
mov
mov
pop
sbb
pop
mov
dec
xor
cmp
ss
lods
or
jg
add
fsubs
pop
ss
lret
sub
inc
loope
pop
sub
pop
adc
mov
jae
fisubrs
pop
or
jbe
stos
pop
fmull
mov
std
inc
decl
sahf
or
repnz
or
jb
push
ss
jo
inc
lcall
push
bound
mov
or
imul
and
scas
sbb
jo
arpl
outsb
xchg
arpl
xor
mov
icebp
bound
fs
lds
inc
outsl
mov
stc
gs
icebp
or
decl
jne
into
dec
iret
popl
xor
pusha
decl
std
add
cli
fisubs
or
add
inc
xchg
push
lret
sub
mov
jl
incl
rclb
and
mov
add
inc
inc
mov
loop
call
push
mov
push
popa
fistpll
sub
cmp
outsl
cld
push
outsb
faddp
inc
push
push
jbe
pop
jo
lock
imul
lcall
andb
inc
je
ret
and
push
nop
dec
mov
jb
lahf
mov
mov
fildl
cmp
lcall
mov
or
testl
loop
mov
in
xlat
loope
cmp
inc
pop
test
push
aam
decl
sbb
pop
add
lds
mov
add
inc
pusha
mov
outsb
icebp
push
mov
add
lods
adc
add
mov
add
sarb
out
push
sub
adc
jb
fildl
jnp
and
adc
or
incb
pop
in
out
jne
push
jae
xor
and
jb
shl
mov
mov
cmp
lds
test
or
leave
or
and
mov
icebp
test
add
repz
scas
inc
icebp
incl
das
cmp
jbe
dec
xchg
adc
imul
arpl
mov
inc
test
fstpl
mov
add
jmp
fdivrl
mov
pusha
je
mov
lea
repz
sub
call
fidivs
xchg
mov
sbb
dec
repnz
push
adc
mov
mov
add
loope
je
or
outsb
mov
mov
daa
push
push
push
push
push
call
lea
insl
incl
sub
adc
aas
cld
jmp
cmp
jne
sub
jmp
enter
sub
test
ret
add
push
sbb
jmp
stc
in
adc
cmpb
add
or
xlat
je
pushf
addb
mov
xor
enter
daa
add
pop
add
shrb
or
mov
cmp
cs
sbb
or
add
test
cmp
add
or
inc
sub
fistpl
or
pushf
push
push
push
cwtl
adc
nop
xor
ret
mov
xor
xchg
add
pop
pusha
daa
mov
and
push
adc
orb
and
inc
mov
adc
fsub
mov
popa
mov
popf
lods
jge
mov
or
sbb
jne
jb
add
add
popa
or
mov
adc
adc
push
imul
adc
lods
and
jmp
mov
inc
inc
insb
outsl
dec
inc
or
fcmovnu
and
jne
dec
pop
popa
je
scas
inc
mov
cli
xor
jae
adc
sub
lret
dec
mov
incl
cmp
ds
js
jl
and
insl
cmp
cmp
cmp
jnp
dec
xor
and
sub
ljmp
inc
insl
cmp
mov
bound
push
in
gs
sub
add
jg
dec
and
mov
fnstenv
add
push
inc
ss
int3
or
fs
andl
push
xchg
push
push
shll
gs
or
add
add
fisttpll
popa
daa
in
sbb
ljmp
add
fstl
movsb
and
ds
ja
jg
push
push
and
xor
inc
gs
adc
fimull
mov
push
push
insb
andps
and
popa
daa
adc
shr
test
push
imul
push
adc
jb
jg
sbb
xchg
data16
js
adc
jne
gs
popa
fs
mov
nop
imul
push
dec
xchg
cmp
dec
dec
pop
inc
pop
enter
jae
dec
sub
pop
add
int
push
mov
mov
sbb
cmp
pop
sbb
xor
and
sub
orb
jp
inc
cwtl
addr16
mov
add
mov
adc
mov
pop
xchg
imul
insl
adc
mov
fstps
arpl
xorl
and
dec
dec
mov
js
sarl
xchg
push
clc
push
shr
dec
popa
ficoms
mov
insb
das
and
pop
mov
andl
arpl
pusha
push
out
addl
insl
insl
and
jo
pop
adc
dec
rcrl
dec
sbb
into
or
dec
data16
lahf
fs
popf
out
mov
mov
rorb
cmpsb
insl
lods
cs
adc
mov
push
insl
pop
jns
in
jecxz
xchg
insb
cmpsb
ss
imul
jb
push
dec
mov
adc
jae
push
jnp
sbb
or
dec
popa
or
push
icebp
jo
shlb
mov
jae
cld
sbb
lods
cmp
out
mov
push
in
insl
in
sbb
pop
dec
insb
popf
xchg
je
mov
and
adc
add
pop
inc
sub
add
stos
adc
inc
add
push
adc
add
imul
pop
push
nop
dec
mov
cltd
mov
xor
mov
aaa
nop
jmp
movsl
sbb
aaa
or
aam
daa
sbb
test
mov
loope
mov
or
popa
repz
push
mov
cmp
mov
jo
and
jb
or
popf
sbb
dec
fistl
gs
adc
in
inc
daa
adc
out
test
cmpb
fiaddl
movsb
jno
inc
add
add
add
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
sub
add
xor
add
test
adc
