cmp
push
or
dec
push
or
pop
push
or
outsb
push
or
adcb
add
add
or
gs
gs
xor
cs
insb
add
add
push
inc
gs
jb
arpl
fs
jae
add
add
outsl
popa
fs
imul
add
add
push
imul
jb
je
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jbe
add
int3
or
scas
or
add
add
adc
add
adc
add
add
add
push
xor
jcxz
nop
nop
nop
nop
nop
nop
nop
call
add
call
call
jmp
call
jmp
call
add
add
call
push
xor
jcxz
call
ret
lock
incl
rdtsc
mov
mov
rdtsc
sub
sub
neg
xor
shr
mov
pop
pop
dec
lea
pushl
lea
pushl
lea
pushl
lea
pushl
push
ret
nop
push
mov
add
push
push
push
mov
mov
mov
movb
movb
xor
mov
mov
inc
inc
test
jne
movb
xor
mov
mov
cmp
jge
mov
mov
jmp
xor
inc
cmp
jl
xor
add
add
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
inc
dec
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
push
mov
dec
test
jl
inc
mov
mov
incb
xor
mov
mov
add
xor
mov
mov
push
xor
mov
lea
pop
mov
xor
mov
mov
xor
mov
add
and
mov
xor
mov
inc
inc
decl
jne
pop
pop
pop
pop
pop
ret
push
mov
add
push
mov
mov
lea
mov
call
mov
push
mov
mov
mov
lea
call
pop
mov
pop
ret
lea
push
push
push
mov
dec
test
jl
inc
xor
mov
add
mov
mov
add
mov
inc
dec
jne
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
jmp
mov
add
push
mov
mov
call
mov
mov
add
mov
cmpl
jne
mov
add
jmp
lea
push
push
push
push
mov
mov
call
test
je
testb
je
mov
and
push
mov
push
mov
mov
call
mov
jmp
mov
add
add
push
mov
push
mov
mov
call
mov
lea
push
mov
push
push
push
mov
mov
call
add
add
cmpl
jne
add
cmpl
je
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
cmpw
jne
mov
add
cmpl
jne
mov
mov
add
add
sub
mov
add
add
mov
add
add
sub
add
mov
lea
push
push
push
mov
add
push
call
push
mov
add
add
sub
mov
mov
call
lea
push
mov
push
push
mov
add
push
call
mov
cmpw
jne
mov
add
cmpl
jne
mov
add
movzwl
dec
test
jl
inc
mov
lea
push
push
mov
push
mov
add
push
call
mov
mov
add
mov
add
call
lea
push
mov
push
mov
push
mov
add
push
call
add
decl
jne
mov
test
je
cmpl
je
lea
push
push
mov
push
add
push
call
push
mov
add
push
push
call
pop
lea
push
mov
push
mov
push
mov
add
push
call
add
mov
jmp
pop
pop
pop
mov
pop
ret
mov
add
add
add
add
add
add
sub
add
inc
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
clc
add
andb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
or
add
add
add
roll
test
add
in
add
add
add
mov
add
in
or
in
add
add
add
cwtl
xor
add
in
add
add
add
pop
add
add
push
add
inc
add
add
jns
dec
add
outsl
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
sbb
pop
insb
cmp
dec
sub
dec
sub
dec
es
push
adc
sbb
daa
or
push
or
pop
or
and
push
sub
xor
test
dec
daa
or
push
add
jp
push
pop
xor
pop
xor
pop
or
daa
adc
arpl
dec
and
push
and
and
push
xchg
sbb
add
add
mov
sbb
sbb
push
or
pop
adc
sbb
test
xchg
pop
sub
sub
popf
pop
and
sbb
and
andnps
add
sbb
adc
jge
and
popa
xor
xor
lods
push
mov
sbb
dec
push
cmpb
jp
adc
adc
sbb
adc
aaa
sbb
add
dec
sub
outsl
ss
aaa
mov
xor
sub
pop
xchg
push
sbb
adc
adc
das
cs
das
push
jge
pop
xchg
push
sbb
add
sbb
xor
xor
daa
mov
sbb
adc
jl
sbb
lcall
ss
imul
jnp
sbb
or
and
push
sub
add
sbb
sub
bound
sahf
pop
and
pop
test
mov
xchg
push
and
mov
das
mov
xor
sbb
dec
push
imul
jnp
pop
test
cmp
and
add
and
xchg
push
pop
xchg
push
sbb
dec
sbb
dec
pop
fwait
push
and
pop
es
sub
das
mov
xor
xor
sub
jp
adc
aas
sbb
or
sbb
sbb
mov
and
pop
es
pusha
daa
lods
bound
scas
sub
cs
das
mov
xor
xor
jne
mov
adc
cmp
cmp
jbe
push
cmpb
inc
and
dec
sub
add
cwtl
push
sub
and
pop
and
es
pusha
daa
lods
bound
scas
gs
addr16
imul
insl
xor
xor
jne
mov
adc
adc
punpckhdq
push
xchg
jo
adc
aaa
add
sbb
popa
sub
scas
data16
sub
xor
mov
xor
jb
mov
xor
xor
ss
cmp
adc
adc
adc
sbb
push
adc
pop
js
add
sbb
pop
sub
mov
das
mov
xor
mov
xor
jbe
mov
cmp
mov
cmp
cmp
push
bound
xchg
dec
cmpsb
pop
pop
mov
cmp
add
and
push
and
sub
das
mov
xor
mov
xor
jne
mov
cmp
jle
roll
addb
inc
movb
das
das
mov
sub
push
jbe
add
daa
xchg
push
pop
cwtl
push
sub
mov
das
mov
xor
xor
jo
mov
cmp
cmp
jnp
mov
inc
ret
les
movb
push
aaa
mov
and
mov
add
xor
pusha
and
lods
addr16
imul
outsb
xor
mov
ss
cmp
mov
inc
roll
mov
mov
movsl
imul
jno
mov
sub
sbb
add
imul
push
sub
aaa
test
movsb
bound
cltd
push
sub
cmp
lea
pop
das
mov
xor
and
adc
or
outsl
cwtl
outsl
push
jge
mov
sub
and
aaa
mov
sahf
jo
fwait
and
sbb
jl
xchg
inc
pcmpgtb
and
sub
jno
jp
jmp
lret
pusha
scas
push
xchg
cmp
xor
jnp
or
imul
cmpsl
jnp
mov
daa
test
es
push
inc
lcall
add
add
aas
mov
sahf
ja
lahf
je
or
push
xor
rcr
ror
fcmove
pop
outsb
and
jp
sub
inc
xor
dec
xor
cld
sti
icebp
stc
hlt
mov
push
xor
sbb
test
loop
test
push
movsb
pop
sbb
dec
fwait
insb
add
popa
fs
jge
lahf
jns
inc
xor
aas
div
test
and
ss
mov
fnstsw
lock
sti
std
cld
mov
mov
mov
xor
cmp
mov
push
push
or
js
fwait
jno
add
add
xchg
ds
cld
std
mov
mov
jl
push
sahf
dec
enterw
repz
push
cli
imul
clc
lock
icebp
fptan
in
mov
and
aam
outsl
jo
sbb
xchg
push
mov
andl
imul
std
popf
mov
push
test
stos
jecxz
dec
out
frstor
xchg
push
mov
mov
jg
test
mov
mov
fstp
test
fs
jp
mov
add
add
pop
addl
xchg
dec
sbb
sub
jnp
clc
lock
call
repnz
mov
mov
sbb
test
mov
out
mov
jb
addl
add
push
insb
pop
addl
fwait
push
adc
jae
sarl
js
fnsave
call
repz
rcrb
mov
scas
iret
mov
es
mov
add
push
insl
pusha
jns
jns
std
lods
int
pop
popf
pop
adc
adc
sbbb
xchg
jmp
bnd
repnz
mov
mov
call
xor
je
addb
fxch
add
jae
mov
adc
jle
mov
cltd
inc
iret
cltd
inc
into
cltd
inc
int
inc
int3
xchg
dec
lret
xchg
pop
mov
and
aad
in
jbe
jbe
jle
add
pop
outsb
data16
cld
cld
icebp
repnz
xchg
les
mov
sbb
adc
adc
ud1
mov
sbb
mov
lock
ficoms
push
add
cmp
mov
cli
cli
lock
fsubrl
xchg
es
or
or
jl
mov
jmp
icebp
repz
sti
cld
std
cld
cld
rol
sub
sub
add
add
data16
xchg
clc
stc
cld
clc
stc
call
mov
fcmove
in
out
in
std
cli
cld
cld
sti
cld
out
out
rol
xchg
push
scas
lcall
imul
mov
out
std
std
std
stc
idiv
div
cmc
cli
clc
clc
cld
sti
cld
out
out
out
cmpsl
cmpsl
cmpsl
outsl
push
cwtl
mov
addb
add
dec
jge
adc
mul
jecxz
lcall
fwait
mov
add
outsb
lcall
imul
add
incl
jg
add
jg
add
aas
lock
aas
lock
aas
lock
pop
lock
pop
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
pop
rolb
pop
rolb
add
add
add
add
add
add
add
add
add
add
pop
lock
pop
lock
pop
clc
add
aas
clc
add
aas
cld
add
aas
incl
add
push
ud0
clc
aas
lcall
int3
int
movsl
lock
add
add
lea
cmp
movsb
lret
js
mov
cld
xchg
clc
sbb
push
or
or
xor
scas
gs
pop
shl
scas
push
or
out
scas
dec
aas
das
jnp
xor
push
or
pop
mov
pop
jne
fimull
aam
add
or
xchg
xchg
fistps
xor
push
inc
dec
rorb
rolb
dec
mov
mov
mov
ret
fstpt
icebp
xchg
jl
inc
pop
leave
sbb
repz
inc
cmp
cmpsb
xor
and
insb
pop
xchg
daa
nop
lahf
push
adc
pusha
mull
mov
iret
ss
dec
fcomi
mov
scas
and
leave
mov
shrd
hlt
fnsave
and
push
lea
or
inc
mov
xor
pushf
rorl
xchg
lahf
cmpb
ljmp
push
mov
mov
gs
mov
add
lret
mov
sbb
fsubrs
scas
ss
call
in
insl
or
aam
scas
lds
mov
bound
rorb
push
push
cmp
out
mov
jle
movsb
ficoml
adc
out
xor
adc
pop
jge
dec
movsb
mov
rcll
sti
pop
fwait
shll
cmpsb
movsb
jle
repnz
or
test
push
pop
mull
pusha
xchg
push
pop
imul
cmp
jb
xchg
mov
in
and
xchg
push
inc
mov
dec
ss
ljmp
push
cmp
out
popf
xor
outsb
addr16
andb
pop
pusha
mov
mov
mov
cltd
std
mov
lds
push
mov
lret
dec
xor
jae
and
jecxz
xor
sbb
call
push
cs
xchg
mov
scas
push
in
orl
gs
mov
add
daa
scas
cmp
icebp
popa
cli
outsb
cmp
popf
adc
or
outsl
jnp
add
mov
xor
ja
adc
in
fcmovne
push
jb
popf
ljmp
out
or
rclb
sbb
fisubl
sub
sbb
ja
mov
xchg
push
jne
adcl
or
mov
dec
cmpsl
push
xchg
add
test
out
movd
loopne
jb
outsb
or
cmc
je
xor
pop
or
pop
xor
stc
cld
mov
cltd
mov
jmp
adc
and
push
adc
clc
enter
std
fstl
fwait
ljmp
sbb
dec
xchg
fs
xor
add
stos
mov
stos
lahf
push
xor
mov
sbb
repz
imul
push
mov
jno
lds
push
addr16
jne
js
xchg
test
mov
aaa
hlt
mov
sbb
pop
test
sbb
lods
stos
jmp
out
stos
pop
test
cwtl
daa
lcall
fldenv
sbb
pushf
sub
xlat
aam
lcall
add
pop
sbb
or
inc
xor
aam
js
je
mov
pop
push
cld
mov
cmp
mov
stos
mov
xor
lds
cwtl
enter
and
ret
daa
cmp
jmp
js
stos
ret
inc
test
in
cmp
pop
out
rcrb
jge
sub
aaa
imul
dec
push
pop
xchg
cltd
push
pop
in
dec
mov
incl
fidivs
mov
add
in
push
insl
je
shl
add
sub
cwtl
inc
mov
data16
xor
fcoml
pop
xor
adc
sub
xlat
mov
adc
aad
rclb
or
push
push
pop
mov
pop
jae
cmpsb
or
mov
and
cmp
cmpxchg
orl
in
call
adc
nop
sbb
ljmp
jmp
inc
or
push
jne
ljmp
das
push
fisttpl
push
fs
mov
xor
std
movsb
cmp
xor
jecxz
loopne
sbb
or
stc
dec
add
mov
inc
xor
mov
fisubl
fcmovbe
cmp
add
mov
cltd
sub
loopne
hlt
pushf
push
dec
ss
push
mov
xchg
sbb
add
cli
or
mov
stos
call
fidivs
push
xchg
insl
jne
ljmp
dec
shrl
sub
sub
loope
mov
pop
jb
sub
pop
loopne
dec
sbb
ret
xlat
mov
pop
out
xchg
arpl
mov
addl
adc
mov
lds
push
and
div
mov
pop
adc
xor
sbb
dec
push
andl
jne
or
pop
xchg
outsl
dec
sub
pop
mov
and
mov
mov
inc
sbb
mov
push
sub
iret
das
or
pusha
cmpsb
adc
dec
dec
iret
arpl
jecxz
add
add
or
mov
pop
psubq
push
xchg
pop
loopne
and
or
jge
fs
repnz
mov
fcom
call
loopne
pop
adc
jle
mov
idiv
adc
outsl
fimuls
adc
imul
fsubl
scas
sub
into
dec
inc
jae
std
dec
adc
push
std
xchg
xchg
cmp
push
cltd
scas
cli
push
lock
push
add
rcrb
rclb
jl
hlt
jo
inc
stos
adc
popf
fstps
mov
push
es
cmp
inc
pushf
dec
or
dec
inc
lods
mov
mov
push
lcall
ret
jl
fnstcw
cmc
sub
stos
aad
push
inc
rol
lods
pop
fiaddl
js
mov
lds
ret
xchg
mov
in
push
mov
and
mov
gs
notb
and
mov
xchg
pop
cltd
add
jns
scas
sti
outsb
daa
lock
push
xchg
adc
xor
jecxz
sub
sahf
mov
movsl
lock
and
cmpsl
mov
jns
vmwrite
rolb
dec
cmp
xchg
sbb
inc
and
ja
cmpsl
jnp
xabort
xlat
hlt
add
flds
stos
xchg
xchg
out
out
ret
adc
cmc
ss
test
mov
addr16
mov
loope
shll
inc
push
mov
jl
aas
or
ja
jno
out
mov
outsl
dec
fists
test
fldt
test
shll
es
cli
sub
xchg
aaa
mov
jo
mov
push
divb
add
jnp
int
dec
mov
inc
out
orb
push
sub
adc
xchg
imul
jns
in
push
enter
mov
dec
jge
inc
jmp
inc
mov
adc
enter
and
pop
and
jge
xchg
in
sub
stc
jbe
pop
jmp
xchg
xor
sbb
cmp
cwtl
xchg
idivb
fld
push
das
pop
icebp
and
movsl
mov
xchg
mov
adc
ljmp
adc
push
lcall
fstp
in
jae
nop
lods
and
push
lods
movsb
aam
ficomps
jmp
adc
iret
jnp
pop
daa
sub
cmp
xchg
add
push
ficompl
ja,pt
push
push
in
xor
mov
daa
jmp
lret
cmp
mov
pop
in
push
ss
mov
mov
adc
scas
daa
fst
cmpsb
push
rcrb
mov
es
push
jp
inc
into
ret
adc
movsl
out
cli
pop
sub
das
jbe
int3
add
les
sub
inc
stos
and
xchg
and
bswap
cmc
in
in
in
sbb
pop
dec
or
xchg
repnz
insb
dec
movsl
mull
pop
sbb
sbb
push
xor
mov
push
outsb
out
cmp
dec
xlat
ret
adc
aam
pop
or
dec
mov
jmp
jo
xor
ds
jmp
gs
movsl
or
sahf
push
popa
add
es
mov
cld
les
and
mov
or
jl
xchg
repz
xchg
loope
xor
je
movsb
ss
dec
fucomi
inc
hlt
scas
inc
mulb
sahf
rorl
xchg
xchg
out
or
out
imul
lods
fistpll
addr16
int
js
das
jg
push
or
mov
xchg
sub
aaa
mov
in
shr
cmp
int
inc
dec
hlt
cmp
ljmp
push
mov
aam
and
adc
cmp
jecxz
cmpsb
mov
adc
add
mov
ss
mov
in
int3
mov
sti
in
movsb
jno
add
cmpsb
std
xchg
adc
push
adc
dec
mov
out
in
mov
xchg
jl
dec
cmpsl
sahf
lret
add
mov
popf
mov
mov
adc
call
pop
inc
test
loopne
and
fmul
test
add
sub
movsb
int
dec
xor
lods
inc
inc
sub
or
or
jbe
and
and
jecxz
pop
fdivr
sub
inc
jge
pop
dec
inc
adc
ja
xlat
jns
xlat
stos
out
andb
popa
aaa
jne
mov
mov
mov
sbb
lahf
or
sahf
pop
cmp
xchg
int3
stc
mov
loope
enter
inc
test
xchg
mov
popf
lock
outsl
fs
adc
push
icebp
cmp
cmpsl
shlb
or
test
fs
jnp
pop
or
icebp
insb
jne
ret
pop
repz
xor
and
dec
aaa
inc
out
xchg
lods
loope
cmpl
mov
pop
cwtl
push
mov
test
fdivrs
inc
in
push
jge
cld
adc
sbb
cmp
adc
les
xor
je
imul
sbb
inc
icebp
or
aad
adc
xor
or
out
das
mov
cmp
push
ret
int3
ljmp
or
xchg
stos
ret
mov
jo
jl
jnp
pop
mov
jmp
pop
out
dec
repnz
cmp
add
add
or
sbb
pop
mov
or
sub
in
jl
repnz
cltd
hlt
pop
mov
add
out
mov
push
popa
rcll
fwait
clc
push
dec
addr16
stos
mov
hlt
addr16
sbb
pop
jae
cli
imul
push
and
outsl
hlt
test
fimull
push
cli
cwtl
mov
xorb
stos
sub
xchg
test
fisubrl
mov
cmpsb
pop
pusha
das
mov
scas
std
insb
hlt
das
js
mov
in
pop
dec
stc
pop
fildl
jge
ret
pop
add
repz
xchg
data16
out
cmp
inc
fistpll
test
sti
inc
call
repz
dec
lahf
jge
fs
lcall
mov
in
and
sub
stos
into
negl
jle
popl
mov
mov
std
aas
jne
andb
sub
pop
add
xor
cmp
mov
mov
mov
add
into
jl
lret
outsb
push
pop
mov
es
dec
jo
xor
jae
lea
pop
fldl
jle
cwtl
jno
cmp
jp
aam
andl
add
call
or
in
cmc
iret
or
push
or
test
mov
dec
mov
or
rolb
mov
out
or
fwait
clc
pop
andl
jns
cmpsl
aas
xlat
cmp
dec
lds
scas
cmpsb
iret
cltd
dec
dec
pop
jle
or
testb
jb
push
push
das
jg
movsb
stc
in
mov
testb
pop
cmp
xchg
filds
mov
outsl
nop
push
jmp
loopne
sub
ljmp
jo
leave
out
inc
out
mov
sbb
pop
andl
test
sub
fs
test
fimuls
adc
adc
daa
pop
cmpsb
lea
pop
orl
out
pop
subb
mov
mov
pop
mov
cmpsb
mov
jp
out
jns
fs
pushf
lods
ret
mov
push
mov
xchg
mov
push
push
pop
dec
jns
push
stos
psraw
and
jne
pop
loop
mov
lahf
loope
adc
mov
ficompl
nop
push
cmpsl
push
pop
cmc
nop
cmp
sahf
ficomps
imul
cmp
add
addr16
ror
stc
and
cltd
cmp
imull
dec
fcmovnbe
or
scas
imul
lock
push
xor
adcl
in
aaa
arpl
mov
iret
inc
xchg
iret
add
shlb
inc
sub
cmp
jp
jnp
jmp
xlat
sbb
rolb
cmp
sti
and
cwtl
inc
imul
enter
les
mov
xlat
out
cmp
mov
mov
mov
push
sub
mov
lret
inc
stc
jne
add
xorl
xchg
ficompl
iret
adc
and
movsb
mov
xchg
jl
adc
jl
adc
sbb
loop
push
lret
push
and
out
out
jle
or
pop
xchg
inc
push
xlat
cmpl
adc
push
ja
inc
push
shl
shrb
inc
subl
testl
xchg
jl
cmp
pop
pandn
mov
fistl
fidivs
stos
sbb
xor
push
push
imulb
es
jl
insb
cmp
inc
pop
test
ss
inc
push
fs
stos
or
sbb
in
shlb
cld
sub
add
enter
sbb
dec
xchg
ror
icebp
cld
rcrl
pop
inc
xor
pushf
inc
call
fdivs
test
inc
sbb
jo
sbb
in
jecxz
adc
scas
jne
iret
jecxz
je
adc
mov
xlat
mov
cmpl
vpaddsb
divl
cmp
jle
mov
aad
iret
lea
cmp
dec
cltd
loope
pop
mov
outsb
pop
outsb
xor
fisubs
pop
xchg
mov
jmp
mov
loopne
add
call
pop
daa
pop
xlat
push
mov
adc
lret
dec
xor
js
bound
test
es
rcrb
cmpsl
cmp
lods
mov
mov
subb
cwtl
aas
inc
cli
adc
mov
push
stos
mov
pop
jb
mov
xor
and
in
add
jae
cmpsb
fadd
or
cmc
fnstcw
xor
negl
mov
leave
mov
aad
imul
orb
xor
daa
sbb
loop
add
ret
shr
xor
pop
and
pop
in
dec
inc
mov
repnz
mov
inc
mov
mov
pusha
xlat
shlb
jge
fldcw
pop
aas
sub
bound
ds
pushf
arpl
lcall
sbb
outsb
xchg
push
sti
mov
jns
lock
mov
out
adc
jb
and
int3
jmp
pop
dec
xor
daa
fs
pop
insb
cltd
data16
ror
push
hlt
push
cmp
in
push
mov
les
cmp
js
cmpsl
popa
inc
out
pop
decb
out
rorl
icebp
fmuls
dec
pushf
push
pop
pop
jmp
xchg
inc
mov
xchg
sub
sbb
fcompl
jecxz
and
sbb
out
adc
lret
es
repz
ret
hlt
xchg
jge
cli
lea
push
and
movsb
inc
inc
movsl
aad
leave
push
shll
ret
bound
sub
xchg
inc
xchg
mov
push
pop
fsubrs
add
repz
das
sbb
push
movntq
push
aad
xor
in
insl
movl
das
stos
sub
bound
cmp
test
pop
ror
jne
or
mov
cmpsb
ds
push
cmp
shl
cmp
sbb
rolb
insb
ja
hlt
cwtl
mov
add
sbb
jmp
pop
add
lcall
mov
fsubs
cmp
cmc
add
aas
sbb
push
xchg
ja
std
mov
sahf
mov
outsl
sahf
pop
jo
adc
in
mov
popa
jg
out
mov
cli
fmul
xchg
and
shrb
lcall
add
and
stc
pop
adc
xor
sub
xchg
mov
or
jo
and
push
sti
loope
add
and
popa
addr16
xor
pop
inc
addl
int
push
mov
xchg
inc
sub
xchg
out
sbb
sbb
cmp
mov
jecxz
push
pop
cwtl
pusha
jmp
je
ss
negb
push
in
jne
les
jle
cld
mull
sbb
mov
aas
mov
dec
cli
cmc
inc
fnsave
enter
push
jno
sub
shrb
fisubs
fldenv
dec
das
adc
mov
inc
rcrb
xchg
or
je
sub
jno
pop
pop
or
mov
mov
and
inc
in
jo
mov
cmp
dec
and
mov
rol
adc
cmp
xor
les
xchg
or
ret
dec
ret
dec
in
jle
lods
cld
lods
push
push
mov
mov
mov
mov
xor
dec
pusha
adc
pop
lds
test
and
loop
pop
lods
pop
adc
cmp
mov
xchg
mov
ja
and
push
mov
ljmp
out
loop
pop
iret
cltd
cs
sub
sbb
xchg
lret
adc
cli
js
add
inc
xchg
jne
loop
lret
out
inc
jge
test
cmp
fs
test
jge
push
in
pop
jmp
xlat
stos
nop
xchg
or
mov
inc
pop
dec
mov
mov
dec
mov
fstpl
test
xlat
push
xchg
jmp
mov
cwtl
xchg
lret
adc
sahf
mov
pop
push
andps
cmp
or
fdivrp
pop
add
mov
pop
jge
into
inc
adc
mov
push
outsl
pop
mov
enter
into
sbb
sbb
adc
and
mov
and
movb
pop
or
adc
or
lock
ds
mov
pop
aad
lret
in
pop
jbe
mov
popf
pop
xor
jb
repz
test
cmpl
scas
adc
jecxz
std
xchg
in
rcl
pusha
ds
pop
inc
xlat
inc
in
mov
push
sub
std
dec
xor
jno
scas
ds
inc
sbb
aam
loope
adc
sarl
xchg
jp
loope
pop
dec
mov
adc
imul
dec
jp
enter
cmpsl
idivb
outsb
mov
mov
loope
icebp
and
sahf
mov
out
and
push
gs
icebp
int3
push
mov
stos
in
inc
lret
xor
mov
ret
in
out
shlb
mov
pop
add
cmp
dec
ret
mov
cmc
sub
dec
push
mov
imul
pop
int3
movsb
inc
inc
test
leave
xchg
pop
mov
js
cmp
inc
lret
sarl
mov
cmpsl
aaa
and
fnsetpm(287
outsl
imul
pop
test
push
or
sub
in
mov
je
addr16
inc
jne
fildl
mov
add
mov
jnp
jnp
in
lret
lods
rclb
loopne
xorb
les
xchg
fnstenv
shlb
jae
leave
popf
inc
xlat
or
xchg
fsubl
aas
mov
sub
mov
pusha
cld
mov
outsb
jno
dec
ror
out
bound
adc
int
aam
sub
xchg
jge
or
enter
aam
pop
test
cmp
scas
jno
sub
xchg
mov
mov
test
loopne
inc
in
cmp
mov
xchg
xor
ret
pushf
lss
je
movsl
imul
pop
mov
ret
inc
call
adc
jno
push
and
push
lcall
pop
mov
arpl
and
mov
xor
out
adc
or
movb
jmp
dec
fs
dec
nop
enter
imul
jmp
sub
jnp
aas
nop
in
push
dec
daa
or
fs
pushf
mov
inc
rcrb
imul
or
inc
xchg
mov
or
and
cmp
xor
mov
mov
pop
cmpsb
stos
inc
add
iret
push
mov
loopne
mov
or
insb
out
jg
inc
xchg
ftst
mov
cwtl
inc
mov
sarl
sbb
scas
arpl
adc
cmpsb
lret
cmc
push
or
cwtl
arpl
mov
ficompl
ret
mov
test
adc
pusha
mov
or
push
pop
pop
negb
sub
adcb
jns
loopne
push
icebp
mov
std
or
icebp
xchg
xchg
movsl
popf
out
inc
xlat
movsb
sbbb
adc
xchg
pop
adc
lods
out
push
dec
ds
sub
loopne
lea
sbb
pop
cltd
nop
pop
imul
fdivs
mov
pusha
into
mov
int3
iret
arpl
mov
jge
mov
fwait
leave
dec
inc
into
rclb
repz
sbb
cli
loopne
mov
jns
jae
punpckldq
sub
sbb
push
mulb
stc
dec
stos
pop
in
notb
pop
es
scas
fnsave
add
repz
mov
sub
mov
and
sub
int3
pop
and
xchg
iret
dec
mov
call
jle
inc
mov
adc
incb
mov
mov
push
add
sbb
mov
imul
and
xchg
pop
xor
add
inc
mov
adc
arpl
add
std
int3
sbb
out
cmp
fs
loope
ds
das
fnstenv
mov
popf
cld
dec
inc
xor
pop
jg
loope
popf
in
mov
cmpsb
out
insb
aad
stos
scas
outsb
shrb
and
jmp
les
cmc
push
xor
adc
js,pn
cmp
bound
dec
push
ljmp
cmc
lods
lods
testb
test
shl
adc
xor
push
int
enter
es
xor
mov
outsb
in
dec
pop
repnz
imul
xor
pop
int3
out
add
adc
pop
dec
adc
jecxz
and
js
popa
out
mov
outsb
bound
or
adc
add
iret
out
int
inc
push
ss
rcrl
jne
mov
xchg
jp
adc
hlt
pop
pop
cmp
stos
and
jae
aam
add
loop
cmp
inc
cmpsl
ss
gs
lcall
in
stos
xchg
inc
mov
aad
cmpsb
mov
lock
jle
outsb
rcrl
mov
or
shll
js
enter
or
lds
hlt
sub
divb
push
fstpl
es
aam
push
and
gs
jno
fmul
stos
pop
sub
mov
xchg
fdivr
ss
aaa
push
cmp
hlt
and
shl
add
push
out
insb
mov
mov
into
add
xchg
sbb
je
cmc
inc
pop
pop
lods
test
lea
mov
cmp
lret
inc
dec
inc
daa
add
jo
lods
dec
jbe
aad
out
mov
xlat
or
repz
fwait
aaa
mov
mov
cli
data16
and
in
adc
in
jle
sub
sahf
xchg
dec
push
jge
cmp
mov
loop
dec
test
mov
push
negb
jo
pop
addb
aad
sbbb
push
pop
leave
faddl
jmp
sub
adc
xor
loop
enter
and
sbb
out
cmp
or
cmp
xor
pop
call
pop
add
fdivs
cmp
xor
pop
mov
lock
mov
insb
mov
mov
inc
in
dec
and
xlat
jp
sbb
xchg
push
fs
es
xchg
sub
mov
push
movsl
sub
xor
rol
fsubrs
dec
repnz
inc
mov
cmpsb
loopne
call
mov
pushl
jb
call
pop
sahf
js
fadds
jmp
cmc
es
sar
adc
mov
pushf
sub
in
mov
ljmp
stos
cmpsb
inc
out
add
and
dec
mov
jno
add
sbbb
stos
test
push
sbb
bound
mov
mov
call
shll
ss
push
pop
cld
sbb
jecxz
adc
cwtl
mov
push
iret
sbb
aas
or
test
stc
or
mov
ficoml
mov
fsub
daa
sub
mov
sti
push
loopne
movsb
ja
sbb
out
cmp
mov
in
std
out
jne
imul
gs
xlat
mov
xlat
mov
xor
add
sbb
xchg
scas
pushf
fstps
mov
inc
cli
cmp
jmp
in
xor
adc
jecxz
xor
sarl
xchg
mov
in
add
fistps
daa
movsl
into
or
pusha
xchg
pop
push
lret
mov
push
je
mov
jmp
sub
aam
xchg
lret
push
mov
daa
movhps
add
push
mov
arpl
sbb
mov
pop
ficomps
and
outsb
icebp
insb
imul
js
xchg
and
and
add
dec
pop
sti
jb
lret
or
sub
mov
sbb
dec
push
imul
cli
hlt
mov
add
xchg
imul
and
stos
cmp
xchg
cli
bound
cltd
int
push
pop
aas
mov
test
ret
mov
xchg
insb
adc
mov
xchg
xor
add
adc
rolb
in
sti
cmpsb
push
inc
mov
inc
and
mov
mov
sub
jle
mov
lahf
dec
lods
nop
clc
cmp
dec
push
outsb
xchg
sbb
sub
ja
jae
jno
loop
stos
push
mov
movsl
rcll
rol
push
cmc
dec
std
inc
add
sbb
loop
cmp
cmp
leave
roll
lds
repz
mov
outsb
rcr
xchg
adc
ficoml
cmpsl
ss
push
out
pop
lcall
popa
lds
pop
and
xchg
into
inc
psubsw
les
int3
pop
hlt
cmpsb
cmp
xchg
mov
ljmp
inc
arpl
shr
inc
mov
mov
or
jns
dec
mov
sti
pop
jmp
mov
add
cmc
jecxz
rcr
push
fadd
stos
cmp
mov
dec
jmp
outsb
lea
inc
cmc
sbb
xor
aad
ror
add
mov
test
inc
pop
subb
inc
test
dec
inc
mov
shr
or
adc
sarl
sub
mov
sub
cmp
adc
mov
pop
roll
les
xchg
ret
in
aad
out
dec
xor
cmp
mov
clc
pusha
outsl
fisttps
rcr
mov
or
daa
xchg
rclb
adc
orl
fisttpl
mov
fiaddl
xor
rcrl
inc
push
insl
test
std
jno
out
pusha
rep
jae
lods
inc
test
es
dec
inc
insb
decb
dec
xchg
repz
mov
pop
lret
popa
and
mov
push
mov
sub
das
mov
sub
mov
dec
pusha
repz
xchg
xor
push
nop
jle
sub
fcmove
scas
fildl
rcll
out
mov
xchg
movsb
jmp
inc
jns
and
dec
sbb
out
pop
clc
adc
mov
fsubrs
pushf
mov
mov
shlb
loope
pop
repnz
mov
xlat
rcrb
sti
aad
jle
adc
fs
pop
add
in
std
out
dec
movsl
cmp
sub
dec
mov
mov
adc
sub
or
mov
push
jmp
loop
lret
pop
pavgw
add
and
push
dec
cmpsb
push
pop
pop
je
pop
jno
pop
jmp
xchg
das
sahf
les
cld
sti
jmp
in
pop
xchg
insl
dec
add
out
mov
mov
inc
push
cmp
xchg
ds
xchg
shrb
adc
ret
fistpl
sahf
adc
xor
cmp
test
mov
push
mov
jnp
mov
iret
mov
inc
lret
in
jb
das
imull
sbb
mov
mov
dec
dec
dec
fistpll
notb
fildl
cli
mov
or
ret
repz
hlt
jl
mov
int3
sahf
roll
xchg
mul
inc
jns
mov
inc
xchg
aaa
inc
idivb
arpl
inc
dec
int3
ret
jmp
in
mov
dec
and
adc
stos
ljmp
sti
leave
pushf
cwtl
stc
sar
push
pop
pop
cmp
dec
imul
or
jno
mov
ret
and
mov
adc
add
loopne
sub
shlb
inc
or
xor
shll
and
clc
and
dec
mov
cmp
mov
test
push
cmp
addr16
cld
cmp
mov
repnz
xor
add
into
push
push
or
cltd
cmp
xor
mov
adc
mov
xchg
sub
cmpsl
stc
loope
mov
ret
sub
les
fwait
add
adc
test
loop
xor
dec
repz
insl
les
mov
lret
arpl
mov
das
dec
out
test
rcrb
sbb
cli
push
push
imul
xchg
cwtl
or
repnz
pop
or
enter
xchg
stc
mov
pop
mov
outsl
pop
and
lret
or
in
dec
pop
inc
dec
jl
pop
outsb
inc
inc
out
sub
jmp
push
inc
lea
ret
cmpsb
add
mov
dec
mov
das
popf
jo
fidivrs
mov
enter
push
cmp
mov
sbb
lea
lahf
hlt
scas
iret
fistpl
ret
sbb
cmc
popa
xchg
pusha
sub
jl
sahf
xchg
inc
pop
fucomip
fdivrp
in
scas
cmp
popa
sbb
sarl
out
ds
push
xchg
jb
in
and
hlt
mov
std
aaa
sub
jno
cmp
cs
xor
or
or
dec
inc
cmp
hlt
js
inc
addr16
fwait
pusha
mov
mov
cmpsl
test
or
ret
mov
and
aas
scas
xchg
push
lea
int
insl
loope
cmp
cmc
pop
out
push
mov
adc
imul
es
stc
mov
push
jb
adc
or
loopne
dec
cli
jle
mov
cwtl
nop
add
dec
nop
jae
pop
add
adc
das
cmp
jne
jecxz
movsb
inc
jno
mov
hlt
repz
sbb
and
xor
jmp
add
in
pop
push
paddd
mov
fwait
test
testb
mov
push
movsl
mov
mov
xchg
fs
xor
xchg
leave
aaa
dec
add
pop
aaa
pop
orb
rcrl
xlat
add
add
fadd
outsb
pop
xor
ja
popf
sahf
jg
cmpsb
lret
arpl
aaa
in
add
or
outsb
je
push
mull
stos
xor
inc
push
aam
dec
call
xchg
incl
mov
in
clc
jbe
push
mov
push
sbb
into
inc
mov
aas
jns
pusha
pop
out
inc
mov
int3
dec
lea
xor
loope
dec
inc
push
sbb
stos
test
lods
jmp
sbb
mov
cmpsl
xlat
mov
mov
out
jo
loop
repnz
sbb
jno
ror
gs
sbb
and
cmp
mov
lock
stc
jno
push
into
and
and
cmp
test
pusha
addb
stos
imul
inc
and
das
cltd
inc
push
fdivs
adc
pop
stc
lahf
movsl
scas
dec
jmp
sub
loop
mov
push
movsb
dec
ficoms
xor
je
pop
dec
fsub
push
stos
inc
pop
nop
call
insb
test
outsb
mov
mov
fbld
inc
sub
jecxz
sub
xchg
xchg
push
mov
sti
sub
arpl
ljmp
cmp
mov
cld
and
scas
xor
out
mov
shlb
and
fs
xor
ret
inc
mov
sub
lods
and
xor
or
jae
mov
jb
fisubrl
out
mov
in
cmp
test
popf
scas
push
in
cltd
push
cmp
js
daa
cmpsb
sub
xor
mov
fwait
cltd
stos
mov
ficoml
lea
movsl
inc
mov
xchg
pop
cmp
repz
push
lahf
outsb
mov
pop
inc
aaa
mull
cmp
int3
xor
pop
imull
in
xlat
lret
aam
jg
mov
loopne
lock
decb
jg
jbe
mov
subl
out
mov
jno
popf
int
push
daa
aaa
push
fnstcw
fsubrs
xor
mov
mov
clc
mov
imul
pop
pop
ljmp
and
ja
pop
adc
push
sub
and
or
mov
inc
or
lcall
xchg
jns
lods
push
mov
and
ljmp
xchg
pop
mov
in
fxch
pop
flds
mov
addr16
insl
dec
sbb
jge
pop
jecxz
arpl
pop
clc
das
flds
mov
movsb
mov
jmp
ljmp
subl
fcomps
addr16
pop
jo
mov
aam
test
out
ret
pop
adc
add
dec
inc
jle
and
out
es
jmp
into
or
sarl
push
inc
fwait
out
xchg
test
xor
lea
sbb
movsl
movlps
aas
adc
ret
mov
cltd
jns
stos
lcall
lods
jecxz
xlat
addl
cmpsb
mov
xor
or
pop
lcall
xor
mov
sbb
jne
outsb
in
testb
int
sub
in
mov
or
jb
mov
mov
in
ret
xchg
adc
out
cmp
loope
mov
jo
mov
aas
xlat
xor
movsb
push
jno
sti
mov
test
mov
mov
mov
push
lods
loope
and
cmp
ret
lret
sub
out
push
sub
cmpsl
jbe
jns
fstpt
xor
add
xor
mov
and
sub
sbb
std
cmp
push
ljmp
xor
sbb
scas
jae
leave
mov
pop
and
sti
cmpsl
mov
shrb
xchg
mov
jle
lret
pop
push
test
lds
mov
jp
push
inc
adc
aam
pop
sti
xlat
pop
loopne
inc
lcall
orl
jnp
pop
insb
inc
xchg
pop
enter
cs
cwtl
fisubs
das
and
ljmp
add
in
mov
fisttps
js
xchg
jg
sub
ljmp
cmp
mov
sbb
mov
in
lret
jo
push
adc
into
arpl
inc
adc
jp
int3
inc
pop
scas
xchg
inc
jg,pt
lods
shrb
or
outsl
jns
xchg
stc
ficoms
fdivrs
inc
fbstp
xchg
xchg
movsl
mov
mov
cltd
jg
insb
ja
mov
xchg
adc
decb
sbb
mov
or
xor
inc
lahf
mov
xlat
sti
dec
adc
test
clc
imul
sbb
inc
dec
mov
jge
pop
in
push
dec
adcb
test
arpl
test
pop
jle
jmp
das
mov
add
xlat
shll
int
enter
push
rolb
xchg
jae
jp
xchg
pop
xchg
jo
cli
sti
mov
cmp
aam
adcb
sti
lcall
dec
push
jns
fs
mov
rol
fcmovbe
aam
cltd
and
pop
sbb
scas
add
sbb
das
jge
rcrl
sbb
ljmp
jmp
mov
scas
inc
add
pushf
fs
push
pop
sti
stos
cmp
out
adc
push
mov
mov
data16
or
jmp
into
fidivrl
int
test
push
aad
fcoml
enter
cmp
pop
sub
shrl
or
jnp
and
push
aad
fadds
cmp
or
nop
sub
outsl
in
call
inc
sbb
in
imul
cmp
mov
out
loope
push
test
xchg
stos
push
add
sar
pop
mov
lds
imul
fisubrl
sub
movsl
lahf
fucom
mov
or
stc
out
mov
ja
dec
jmp
outsl
test
dec
sub
imul
mov
mov
sbb
pop
mov
cmp
add
sub
movsl
or
jnp
push
sub
inc
andl
pusha
inc
test
nop
xchg
jge
pop
mov
out
jmp
test
xor
adc
stc
push
push
inc
mov
aaa
lcall
mov
pop
out
fists
test
jecxz
add
cmpsb
or
push
dec
aad
int3
sub
out
ljmp
cmp
sarb
int
orl
gs
mov
xchg
repz
fcompl
mov
jo
insb
in
sbb
js
int
in
pop
jecxz
adc
xor
dec
xchg
pop
aad
lret
aad
lods
inc
daa
and
sub
jmp
adc
lahf
movsw
xlat
adc
iret
inc
clc
out
shll
cs
mov
xor
int
sbb
xchg
lock
xor
and
adc
xchg
loop
inc
mov
xor
mov
mul
jnp
in
pop
adc
ja
dec
aad
xchg
ds
jbe
out
scas
xchg
sbb
inc
sub
out
pusha
mov
xchg
movsb
sub
pop
cli
and
mov
ret
adc
clc
ja
call
pop
xchg
cmpsl
xchg
data16
inc
jecxz
jbe
stos
sahf
std
push
outsl
xor
xchg
lahf
das
mov
leave
ficompl
dec
sub
fs
sbb
or
inc
repnz
adc
or
call
xorl
cbtw
push
test
mov
mov
bound
fsubl
xchg
push
outsl
mov
mov
scas
xchg
leave
or
cmc
mov
dec
push
add
push
cmp
jg
lods
sarl
mov
decb
jns
cld
xor
sub
xchg
and
jge
in
pop
insl
and
pop
iret
jp
dec
test
sbb
out
mov
hlt
jle
xchg
inc
movsb
push
mov
jg
sbb
mov
aad
xchg
out
pop
rolb
shl
cmp
and
mov
ds
sbb
mov
ljmp
fidivs
cwtl
sub
jne
jle
sbb
dec
pop
ja
and
push
mov
jbe
in
or
mov
dec
xor
xchg
mov
cltd
sbb
cwtl
jge
sti
mov
sub
push
je
add
ret
or
inc
mov
loope
dec
inc
and
loope
mov
push
rcr
xor
repnz
testl
xor
fdivrs
out
test
xchg
or
cmp
das
clc
mov
arpl
hlt
mov
rcr
cmp
ficoml
mov
stos
adc
push
jmp
push
ficoml
icebp
cs
sub
movsl
dec
inc
sbb
jb
lcall
add
cmp
jle
nop
ja
mov
out
cltd
rcrl
fcomps
mov
sbb
and
sub
inc
sbb
cmp
cld
clc
clc
sub
in
stos
mov
cmpsl
jbe
xor
lods
mov
jb
jmp
lea
inc
test
inc
movsl
iret
rolb
push
adc
das
jmp
adc
mov
movsl
test
xchg
cld
dec
movsl
sub
das
int
addr16
ficoms
mov
test
loopne
fisubrs
cmc
cmp
ljmp
dec
in
les
sbb
mov
xlat
addr16
repnz
adcl
add
or
cmp
bnd
shlb
adc
cmpxchg
jmp
push
jns
rol
mov
push
lods
cmp
adc
cs
divl
cmp
cwtl
cmp
cmp
xor
fstpl
dec
cwtl
cs
seta
ds
jl,pn
rorl
mov
xchg
lods
lods
rcrl
dec
pop
xchg
aaa
push
xchg
in
xchg
cmp
jne
lcall
fldcw
mov
pop
pushw
movsb
mov
fs
cmp
enter
jbe
ds
fst
mov
mov
shll
xlat
or
mov
xchg
fwait
jmp
outsl
add
into
int
div
dec
mov
sti
in
in
repz
jb
insl
inc
stc
xchg
pop
rcrl
pop
adc
int3
test
xor
xor
sub
adc
mov
mov
arpl
out
popf
dec
sbb
adc
dec
jb
jmp
insl
mov
dec
mov
cmpsb
loopne
dec
lds
pop
sbb
stos
call
xchg
jnp
popf
lods
inc
ret
jne
pop
cli
cld
mov
bound
addr16
sub
mov
in
fs
in
cmp
mov
xchg
inc
push
mov
lods
test
jns
and
leave
jmp
and
mov
push
sarb
frstor
loopne
aam
pusha
or
fisubrl
pop
ss
jge,pn
js
push
or
jb
and
stos
lods
sbb
jo
pushf
push
lods
inc
mov
sub
sub
cmpsl
into
test
lcall
shl
cmp
in
rorb
repz
xor
xor
mov
cli
lcall
cmp
add
mov
push
mov
pop
mov
mov
lahf
sub
bound
inc
adc
push
ss
inc
inc
jae
adc
lret
ret
add
aad
pop
je
scas
int
arpl
xchg
mov
mov
pop
mov
leave
addb
push
mov
mov
jge
mov
xor
fisttps
lods
jmp
icebp
xlat
out
call
xchg
daa
pop
lock
imul
movsb
fwait
lcall
and
xor
decb
addl
mov
pop
inc
xchg
test
push
push
xchg
imul
addl
lds
inc
push
clc
loopne
mov
sbbl
ds
inc
mov
cli
call
ljmp
push
push
dec
ja
dec
icebp
subb
jo
adc
fucompp
clc
pop
out
xchg
ja
aas
cmc
mov
iret
sub
aad
repz
mov
xchg
daa
add
sub
in
in
xchg
sub
lahf
mov
mov
outsl
xlat
mov
mov
push
outsl
sbb
jl
sti
mov
and
stc
ret
les
xor
xor
mov
xchg
cmpsb
push
push
rorl
ret
xor
insl
nop
push
sti
enter
idivl
jne
gs
stos
pop
int
sub
mov
es
pop
daa
enter
mov
cmp
push
push
sub
dec
aam
jnp
ret
les
pop
cmpsb
daa
push
add
outsl
ja
cltd
sub
in
mov
cltd
adc
xchg
outsb
movl
test
ja
btr
into
call
jmp
inc
cmpsl
lds
leave
mov
jg
lds
cld
xchg
cwtl
popa
pop
push
xchg
push
lahf
sub
cwtl
ja
sar
adc
in
xchg
mov
or
bound
mov
enter
xchg
out
aaa
sarl
das
flds
lea
repnz
fidivrl
fcoms
repnz
arpl
push
notb
jbe
jbe
xorl
lea
pop
pop
or
cmp
cli
outsl
dec
dec
inc
lret
into
cmpsb
fimuls
inc
inc
call
xchg
mov
cmpsb
in
mov
inc
dec
jbe
xor
xor
hlt
fildll
test
and
adcb
mov
jp
mov
arpl
or
xchg
mov
jle
fs
aam
lock
in
xor
dec
and
jnp
inc
or
popa
dec
clc
stos
mov
mov
out
leave
cmc
sbb
mov
dec
push
mov
ret
out
push
in
ret
js
fsubrs
lret
push
aas
adc
into
add
sbb
sub
aaa
mov
cltd
mov
mov
xor
xor
xchg
in
or
jl
push
dec
mov
test
cwtl
mov
leave
mov
lret
mov
das
cmc
into
fs
dec
cmpsb
xchg
outsb
pop
out
iret
mov
sti
ret
testl
stc
push
or
ret
das
lcall
xor
sub
xchg
mov
fmuls
pop
xlat
xchg
xor
cmp
dec
scas
lds
mov
loop
outsb
dec
pop
js
push
cmp
ss
lods
insl
es
mov
jl
push
leave
nop
mov
jge
adc
in
jnp
sub
test
xchg
stos
cltd
popa
jg
js
mov
aas
fwait
out
call
mov
mov
je
sub
sti
bound
push
xchg
jne
xor
push
fimuls
mov
mov
movsb
test
adc
jbe
adc
sub
pusha
jle
mov
stc
push
lods
cmp
inc
adc
xor
sub
push
fmull
test
loop
sub
in
mov
cs
and
xchg
xchg
pusha
xchg
pop
movsb
xorb
push
add
jge
mov
xchg
ds
pop
cmp
mov
int3
inc
mov
lret
push
iret
outsl
gs
leave
popa
pusha
js
nop
mov
sub
shlb
inc
jae
imul
add
call
nop
jmp
fwait
scas
cmp
push
test
sbb
push
test
gs
in
movsb
xchg
test
inc
or
push
test
push
int
js
jge
and
jp
push
movsl
roll
push
cmp
je
scas
call
add
sbb
mov
rcr
ret
outsb
stos
adc
jge
and
in
jle
sub
pop
inc
fisttps
popf
xchg
ss
pop
es
xorl
imul
mov
test
and
xchg
cmc
in
fists
mov
sub
inc
cwtl
fcoms
jns
inc
dec
and
and
imul
push
jnp
popa
addr16
cmp
call
movsb
and
mov
pop
or
add
fisubs
dec
push
jns
pushl
lret
out
fsts
nop
push
shr
cs
xchg
movsb
mov
or
mov
cmp
fdivrl
dec
cwtl
aas
test
fwait
out
iret
mov
mov
jne
or
jge
or
cmpsb
push
or
sbb
pop
jmp
mov
pop
clc
mov
lock
ret
outsb
inc
pop
mov
cmp
cmp
mov
sub
mov
mov
mov
and
lods
jb
xchg
pop
cmpb
add
fistpll
shlb
push
and
imul
out
cmp
popf
sbb
repnz
sub
inc
mov
push
fimull
mov
rolb
ficoms
mov
stc
pop
cmp
outsb
inc
mov
je
or
sbb
add
outsl
aad
jmp
inc
and
fdivl
sub
sbb
lds
jne
scas
fmul
inc
test
inc
lock
xlat
mov
push
sti
xchg
mov
int3
iret
lret
ret
mov
imulb
outsl
pop
or
shll
cli
inc
in
add
cmpsb
cld
imul
dec
and
insl
inc
cli
mov
lock
and
xchg
fldenv
sub
int
aaa
rclb
jg
ret
imul
fbld
ja
loop
jg
add
shrb
shrl
dec
pop
jecxz
mov
jnp
orl
push
cmc
ljmp
aam
test
sahf
add
popa
outsb
outsb
negb
sub
stos
cmp
sahf
int3
sbbb
std
xchg
pop
xor
aas
mov
or
push
jae
push
lock
mov
and
inc
cltd
aas
sar
jge
adc
jmp
pop
lcall
dec
mov
sarl
pop
sub
les
dec
mov
imul
mov
adc
addl
jae
mov
sub
test
loopne
cmp
mov
scas
or
lods
ja
sub
pop
enter
xor
and
push
xchg
insl
cs
shr
pop
and
push
xchg
dec
xor
fld
dec
call
inc
add
or
fdivrp
pop
xchg
adc
sahf
ficoml
mov
scas
stos
adc
xor
test
adcl
sbb
push
imul
xchg
nop
stc
movsb
xchg
outsl
stc
repz
lahf
pop
mov
mov
jo
mov
adc
in
mov
test
jns
lock
push
xchg
mov
or
pushf
mov
repz
daa
sbb
add
inc
orb
and
pop
push
mov
outsb
pop
std
or
mov
and
clc
sub
and
push
adc
inc
pop
out
dec
mov
dec
fildl
fnstenv
lds
in
mov
in
inc
stos
pop
xchg
or
inc
mov
call
xchg
cmpl
js
pop
es
sub
and
leave
hlt
lods
and
in
push
repnz
dec
dec
fwait
pop
call
adc
jg
fwait
jecxz
pop
sbb
sub
add
sub
pushf
loop
pop
mov
push
cmp
shl
aas
sub
dec
add
js
add
imul
fs
cmpsl
shrl
xchg
ds
xchg
pop
push
pop
jl
lahf
mov
roll
pushf
scas
aaa
scas
inc
jge
mov
fstl
aas
insl
loope
addl
shll
aaa
mov
adc
lock
fisubrl
loopne
fs
popa
aad
mov
xchg
xor
or
call
das
adc
mov
mov
cltd
adc
cmp
jl
sub
jge
xor
push
popf
mov
repnz
push
adc
lods
xchg
or
mov
jle,pn
dec
pop
jb
fadd
hlt
scas
ss
mov
xchg
fldln2
mov
xchg
mov
pushf
mov
xchg
mov
or
clc
mov
loope
push
adc
xorl
pushl
bound
repz
adc
jnp
adc
mov
idivl
or
int3
xchg
stos
cwtl
mov
sbb
adc
sahf
xchg
outsl
xor
sti
lock
cmpsl
inc
mov
and
pop
popa
hlt
mov
insl
inc
pop
fdivl
fnstenv
or
jae
mov
ja
insb
mov
fidivrl
nop
js
xchg
aas
xor
sbb
leave
roll
in
ja
xchg
shll
mov
inc
and
test
inc
fs
sub
cmpl
cld
mov
out
and
fisubrs
add
or
cmp
jae
movsb
and
sub
ja,pt
lret
pop
jae
lods
adc
mov
add
call
pop
mov
pop
inc
cmp
push
pop
mov
dec
rorl
dec
and
cmp
dec
in
cld
and
imul
stc
add
xor
fs
test
mov
push
sbb
xchg
mov
xor
push
or
movl
gs
mov
xor
xchg
test
sbb
mov
mov
jo
in
imul
jecxz
pushf
jp
xlat
movsb
repz
mov
and
dec
mov
xor
mov
pop
add
pop
or
insl
and
push
pusha
fwait
clc
es
push
jne
data16
out
sbb
test
sahf
xor
sbb
lret
fimull
sti
add
fsubl
inc
jg
pop
xchg
jns
enter
mov
clc
ljmp
push
addb
imul
lcall
xchg
repnz
mov
cmp
mov
xor
ljmp
sbb
cmp
fistpl
pop
and
int3
aam
fwait
cmp
push
sbb
inc
shrl
sub
ss
fwait
scas
dec
popa
mov
into
popf
mov
add
sbb
inc
fldl2t
stc
push
lods
sub
loope
sbb
sub
xchg
push
mov
sub
pop
aam
inc
rolb
cli
sub
stos
in
jae
shl
mov
mov
dec
icebp
and
dec
hlt
inc
fmulp
aam
insl
xchg
ja
in
push
ja
xchg
pop
add
je
dec
lea
add
jge
xchg
push
mov
iret
pop
cwtl
aam
mov
push
add
jge
shll
lods
push
push
cli
cmpsl
clc
leave
adc
dec
mov
xchg
pop
sub
mov
mov
xchg
pop
pop
jae
xchg
pop
inc
inc
ret
daa
pop
push
fwait
cmp
lret
imul
mov
push
test
gs
pop
mov
ret
in
add
lods
sbb
pop
sbb
mov
mov
mov
sbb
cmpsb
or
xor
jg
pusha
js
mov
xor
sbb
adc
cmp
shrb
aad
imul
pusha
out
cmp
cmp
ret
sub
shufps
adc
lods
pop
outsb
jge
jno
dec
mov
and
xlat
loop
lods
mov
cld
sahf
aaa
mov
sets
mov
cltd
xchg
push
cmc
cmpsb
outsl
sub
pop
inc
or
ret
iret
popa
idivl
cmpsl
push
dec
insl
xor
push
xor
sub
push
into
mov
cwtl
inc
fwait
data16
popf
mov
jl
adc
sub
enter
add
in
popa
pop
lods
inc
aad
imul
in
int3
in
roll
mov
pop
orb
jno
inc
test
lds
repnz
sub
cmpsb
daa
add
pop
inc
fisubl
mov
push
lods
mov
in
dec
jnp
das
mov
lret
lock
sub
dec
in
repz
pop
jg
xor
pop
or
push
outsb
sarb
inc
sub
inc
std
push
add
xchg
test
insb
and
inc
mov
mov
xor
or
xchg
mov
xor
outsl
pusha
pop
bound
ret
stos
jle
sub
stos
out
xchg
sbb
jo
out
push
dec
icebp
and
push
orl
jae
fst
or
mov
mov
bound
adc
fstps
pop
fldl
mov
mov
fdiv
xor
mov
pop
loopne
lea
sbb
sbbb
es
movsl
pushf
aam
dec
rolb
daa
or
int
and
cs
outsl
ja
lcall
or
loope
js
stos
inc
mov
mull
fsubl
data16
xchg
and
and
pop
loop
mov
js
jp
add
bnd
jecxz
lea
mov
mov
inc
mov
lahf
cmpsl
inc
sub
xchg
lcall
int
sub
lcall
ljmp
nop
int
shrl
mov
daa
push
xchg
movsb
adc
xor
repnz
shll
mov
inc
insl
in
std
mov
pop
or
pop
pushf
sub
jmp
hlt
inc
adc
push
jl
mov
add
and
mov
inc
cs
and
push
punpckhwd
frstor
nop
cli
bound
popa
pop
pushf
fcompl
repnz
inc
dec
adc
and
fisubs
jge
inc
stos
arpl
movl
adc
mov
push
xor
fidivrs
xchg
daa
aaa
push
enter
cmpsl
scas
fnstsw
dec
cmp
cli
dec
mov
mov
rcr
fs
pop
out
scas
mov
pop
mov
ds
and
in
outsb
jo
cwtl
clc
frndint
push
pminub
loopne
out
xchg
mov
ret
xor
subb
inc
insb
imull
mov
or
or
ss
jge
stos
in
andb
inc
cld
adc
jge
fdivr
mov
imul
dec
xor
sbb
adc
mov
jg
xchg
sub
sub
push
mov
jp,pn
jmp
clc
inc
xor
shll
cwtl
sbb
dec
sub
sbb
inc
jl
pop
enter
mov
push
sbb
xor
push
cmp
sbb
pop
push
mov
jp
xor
xchg
fcom
pop
loopne
sbb
in
mov
repnz
sbb
and
stos
ljmp
dec
inc
orb
dec
sbb
cmpsl
push
sub
mov
or
mov
arpl
testl
pop
lret
movsb
arpl
loopne
sub
cmp
dec
notl
dec
iret
mov
fcmovu
je
test
pusha
popa
pop
dec
mov
dec
pop
out
mov
mov
mov
dec
popa
into
mov
pop
mov
xor
mov
and
subb
sub
test
xlat
push
jnp
push
mov
push
cmp
push
and
jge
insb
mov
cmp
ja
outsl
cmp
or
mov
in
or
push
roll
movsl
jnp
xchg
test
out
lock
jg
insb
pop
shll
xchg
jae
sti
pop
dec
int3
mov
push
push
ss
xor
fcmovnbe
nop
test
jecxz
or
pop
mov
xor
adc
ficoms
pop
jle
jo
les
in
push
jo
sbb
js
inc
lods
imul
pop
push
lods
stc
jno
jbe
dec
add
xchg
xor
mov
cltd
mov
frstor
ret
push
cmp
out
lea
mov
cmp
sti
jecxz
daa
push
mov
mov
cmp
adc
add
push
and
testb
iret
lcall
xchg
inc
lret
and
repnz
test
add
dec
daa
push
inc
mov
lds
jg
mov
js
fidivs
pop
xchg
repnz
stc
stos
es
adcl
cmp
xor
in
fsts
cmp
adc
loopne
andl
pop
dec
and
fs
or
push
adc
bound
mov
data16
cld
clc
cwtl
mov
xchg
xchg
xor
shll
in
enterw
add
loopne
add
cmp
and
jns
cmp
xor
ret
mov
lock
cltd
rcr
push
lcall
pop
inc
paddusw
inc
in
xor
pop
mov
pop
lock
das
in
mov
sbb
mov
lea
hlt
insl
sti
insb
pop
jge
mov
mov
lods
add
adc
mov
sub
cmpsl
cmp
outsb
mov
mov
jmp
popa
roll
or
mov
jbe
add
inc
out
pop
repz
inc
cli
pop
outsb
lods
jae
rcr
push
jae
bound
mov
icebp
pusha
icebp
pop
mov
push
hlt
pushf
jmp
inc
pusha
in
test
scas
call
adc
lahf
or
mov
pop
sbb
rcrb
stc
stc
jge
add
movl
xchg
inc
pop
into
sbb
and
cmpsb
sahf
adc
aaa
aaa
shll
mov
pop
notl
imul
mov
and
pushf
mov
rorl
aaa
adc
pop
sub
fsubrl
sub
mov
or
scas
cmp
aaa
lock
sbb
lock
jmp
mov
or
xchg
dec
test
ss
sbb
jo
xchg
loope
ret
inc
jns
gs
pushf
xor
fimuls
inc
cmp
mov
jp
dec
mov
fucom
icebp
mov
adcl
rolb
cmc
cmp
jne
imul
fisubrs
pop
adcl
dec
mov
push
xchg
mov
xor
movsb
mov
jg
out
scas
jg
inc
lret
and
jecxz
data16
popf
addb
testb
in
popa
daa
adc
pop
jae
xchg
cmp
lods
adc
cmp
int3
cltd
jne
nop
jge
decb
fisubrs
xor
enter
adc
jno
into
push
lret
jmp
pop
xchg
push
fwait
out
stos
out
clc
mov
push
xor
add
das
sub
pop
test
loopne
cmc
and
pop
notl
and
adc
adc
or
adc
lret
mov
adc
cmp
aaa
mov
iret
and
loope
fiaddl
je
fdivrl
push
jecxz
pusha
cmp
sub
lret
pop
dec
rolb
fnsave
mov
mov
jle
cmp
pop
mov
inc
inc
pushf
sbb
pop
sub
aam
dec
inc
sbb
jle
repnz
sub
or
push
jb
mov
or
aas
mov
stos
xchg
mov
dec
dec
add
andl
dec
jl
pusha
jns
cmp
stc
cmc
lahf
jnp
test
int3
cmp
jl
inc
cmp
jae
mov
mov
pop
movsb
and
lods
fiaddl
cmpsl
dec
fldl2e
jns
inc
jp
jns
mov
mov
xchg
sbb
stos
inc
out
adc
push
and
add
repz
xor
in
jne
sbb
mov
jno
icebp
xchg
pop
cmp
shr
lods
int3
enter
outsl
outsb
inc
cmp
cmp
pop
int
testl
inc
aaa
lret
call
jne
dec
mov
pusha
jb
xchg
dec
or
hlt
dec
fcoml
and
xor
adc
xor
push
jo
or
add
pushf
es
push
push
jecxz
add
loop
outsl
pop
mov
pop
add
xchg
fidivrs
cmp
dec
sahf
mov
arpl
jg
mov
jl
jnp
pushf
push
mov
xchg
jno
in
xor
out
divl
push
fnstcw
mov
hlt
add
xor
xor
jge
icebp
jmp
and
pop
dec
arpl
push
outsl
test
ret
test
jg
mov
cli
leave
rolb
xchg
inc
xor
fists
inc
dec
mov
dec
mov
jle
ljmp
loopne
imul
jae,pn
dec
sbb
push
lret
mov
and
add
or
std
cmc
mov
adc
test
jb
dec
sbbb
std
addr16
lods
mov
jbe
and
cwtl
mov
decb
add
jb
jge
pop
out
adc
push
or
sbb
sub
mov
cmp
jmp
jb
gs
mov
xchg
xlat
push
dec
push
ret
ret
les
and
mov
lcall
lea
fcoml
push
movsl
push
sub
loop
out
mov
outsb
lret
inc
jp
cmp
add
push
xor
je
mov
xor
mov
test
push
cltd
in
aas
ds
inc
mov
add
mov
or
sarb
push
jle
inc
cwtl
cs
jl
sub
add
jl
and
sbb
mov
push
sbb
push
dec
incb
or
adc
repnz
ja
out
into
mov
mov
push
pop
inc
repz
sub
push
jnp
mov
jbe
or
xchg
fiadds
or
stos
filds
pop
cltd
ja
xor
inc
push
inc
scas
divb
lods
aas
out
inc
xchg
scas
lods
ss
lea
lcall
iret
mov
femms
add
jae
cmp
sar
jne
inc
xor
inc
stos
dec
cltd
dec
imulb
mov
mov
addl
xor
rcl
out
scas
lds
jae
notl
mov
orb
jne
inc
pop
insb
xchg
jne
mov
mov
sarl
ret
push
xchg
or
dec
jo
lea
in
lods
mov
popa
fcmovu
push
mov
icebp
call
in
and
or
mov
dec
hlt
aam
imul
inc
aad
movsb
inc
mov
out
dec
jo
jp
mov
cmc
sbb
cmpsl
mov
xor
addr16
fstp
cs
jnp
subl
sbb
pusha
int3
stc
test
sub
push
call
mov
ljmp
fadds
roll
sbb
cli
pop
adc
mov
std
dec
add
pop
mov
xor
dec
mov
inc
insw
popa
inc
add
lret
or
sbb
push
in
mov
movb
cmp
sarb
sbb
in
pop
dec
out
cli
push
or
inc
fwait
mov
pop
js
aad
jbe
cmp
and
cmp
and
mov
mov
jbe
inc
addr16
hlt
movsl
jbe
dec
lds
ja
out
and
out
xor
mov
and
or
adc
adc
popa
cltd
fadd
loopne
shlb
roll
push
movsb
in
xor
add
addr16
clc
xchg
aad
fwait
rorb
int
mov
mov
sub
movsb
mov
mov
cmp
sti
pop
pop
nop
jmp
xchg
ss
cmpl
mov
test
adc
push
sbb
scas
das
fnstsw
ljmp
test
mov
fnstenv
les
aad
insl
int
daa
sbb
mov
cmpsb
test
jg
push
sub
and
dec
test
pop
or
mov
adc
pop
adc
mov
es
cmc
mov
and
ffreep
lret
xchg
sbb
mov
rcrl
sbb
popa
inc
push
jge
jl
and
mov
push
mov
loopne
lcall
pop
adc
mov
mov
das
or
pop
das
inc
and
int
out
dec
xchg
mov
lods
test
jno
xchg
fs
sti
aam
int
sub
pop
sarl
xorb
out
xorb
pusha
jbe
into
lret
inc
testb
pop
and
xlat
int3
shll
mov
jp
jmp
daa
outsb
into
mov
pop
fwait
add
inc
jecxz
mov
fcmovb
shl
jns
in
xchg
fxch
xchg
sub
push
scas
dec
stc
xchg
fadds
add
add
mov
push
sub
movsl
sub
dec
repz
add
mov
mov
out
mov
bound
aam
jo
sti
xor
inc
lock
repz
cs
pop
cmp
mov
mov
arpl
sub
jmp
test
cmp
mov
adc
fldt
inc
cmp
in
add
pop
sub
adc
xchg
mov
not
mov
jae
scas
stc
cmp
repz
or
enter
in
push
stos
scas
and
movsb
xchg
push
xchg
or
cmp
les
add
add
push
push
dec
lahf
in
out
push
inc
lods
in
fldenv
pop
adc
pop
or
and
mov
inc
cmp
jg
ret
in
jl
mov
call
add
daa
pop
repz
mov
jb
cmp
pusha
adc
ret
pusha
inc
push
jo
out
mov
inc
and
xchg
adc
xor
mov
inc
jae
jb
mov
dec
icebp
dec
imull
test
push
lds
nop
dec
scas
daa
movsb
mov
faddp
jbe
insb
or
mov
pop
jae
orl
add
push
pop
adc
mov
shlb
inc
ds
sbb
jle,pn
mov
mov
pop
pop
mov
rolb
loopne
xchg
dec
lods
push
loop
stos
bound
pop
bound
xlat
xor
stos
aam
in
or
mov
in
pop
addl
rol
xor
mov
pop
shrb
mov
push
push
mov
pop
pop
sub
dec
movsl
jne
in
xor
insl
aad
push
sbbl
push
lods
adc
push
lcall
shl
in
lahf
jmp
xorb
js
lcall
and
adc
xchg
pop
popa
in
fnstcw
dec
lods
enter
jle
adc
xor
dec
and
and
add
mov
and
pop
add
mov
leave
lea
sub
pushf
das
pop
jg
xlat
cwtl
call
test
mov
push
or
out
xor
popa
push
mov
test
sbb
cwtl
lahf
cmp
aaa
in
ret
xor
outsb
arpl
bnd
push
idivb
int3
xchg
fcoml
dec
or
jle
in
faddl
out
push
rclb
jg
repnz
mov
loopew
stc
orl
xor
or
and
andl
or
lods
jnp
stc
jno
push
xor
fisttps
aad
adc
push
fidivrs
inc
sub
out
movsl
mov
mov
cmp
dec
xor
repnz
repnz
pop
dec
jno
push
mov
push
xchg
hlt
mov
mov
movsl
in
in
out
dec
adc
or
ds
push
shr
xor
push
out
mov
std
mov
xchg
bound
or
je
mov
repz
cld
or
push
xchg
les
lds
or
lods
jno
mov
add
loope
cli
in
mov
ror
cmp
pop
dec
adc
or
or
sub
out
push
push
flds
xchg
push
pusha
push
sub
push
clc
shlb
sub
rcr
push
std
xchg
mov
mov
addl
popa
push
mov
mov
fsubp
filds
or
je
mov
sub
andb
xor
bound
mov
dec
bound
aas
in
sbb
dec
pop
std
jno
cltd
mov
out
mov
mov
pop
dec
mov
jns
imul
negb
mov
inc
pop
in
cmp
inc
pop
add
add
xchg
mov
mov
inc
cmp
mov
scas
cmpsb
and
pop
pushw
dec
mov
subl
popf
mov
in
out
pusha
mov
leave
movl
jg
xor
cltd
aas
lods
loopne
aam
xor
xor
rorl
push
mov
xchg
jl
cli
push
mov
popf
nop
pop
sbb
daa
mov
mov
mov
ret
test
out
jp
fwait
or
mov
jp
push
inc
ds
lahf
subl
lret
pop
xor
sti
aas
cmp
add
xor
cli
mov
push
inc
adc
fs
mov
fbld
aas
dec
lret
pop
clc
pop
dec
popf
sub
loop
and
dec
sub
sbb
jecxz
xchg
ljmp
cmpsb
push
dec
mov
aaa
pop
push
sbb
xchg
push
fldenv
lea
jns
mov
and
mov
cmp
stc
add
sbb
fsubs
call
scas
sbb
mov
xor
or
ret
mov
js
popf
mov
mov
cltd
cmpsl
scas
leave
pusha
dec
call
ljmp
and
subl
push
fs
mov
mov
push
add
or
sub
int
pop
orl
les
shlb
push
pop
fsubrl
imulb
push
imul
std
js
push
xchg
lock
cmp
jns
insb
imul
ja
pusha
jmp
addr16
push
cwtl
jns
mov
arpl
in
mov
out
cld
jmp
pop
mov
les
jge
mov
arpl
cs
in
or
mov
pop
je
sbbl
testb
add
sbb
in
ret
jo
jmp
fcomps
push
mov
fnsave
gs
lods
pusha
inc
jmp
sub
es
or
lret
leave
es
out
dec
and
aaa
xchg
fimuls
ret
pop
stos
std
sbb
mov
jo
std
or
out
jecxz
or
mov
loop
das
adc
mov
pushf
pop
xor
imul
scas
sti
lret
mov
loop
xchg
push
pop
cwtl
sbb
or
cmpsb
mov
pop
testb
cmp
negl
mov
cli
inc
or
call
nop
test
fnstenv
sbb
pusha
xor
mov
cmp
xchg
test
incb
movsb
xor
pusha
fs
add
push
pop
mov
test
mov
stos
in
jmp
mov
mov
fcoml
mov
pop
stos
push
leave
xor
out
pop
outsb
sub
outsl
cmp
mov
jae
xor
jns
or
iret
jo
arpl
fstpt
shr
mov
decl
daa
mov
or
pop
add
inc
pushf
xchg
adc
mov
pushf
jl
int3
in
jns
in
push
enter
or
pop
or
shrb
stos
mov
sbb
ljmp
insl
mov
aaa
lcall
aad
cwtl
lahf
repz
lcall
rcll
sbb
add
loop
sbb
movsb
data16
aaa
xlat
mov
jmp
lahf
les
andl
stc
inc
push
cmp
ret
pop
sahf
aaa
and
jns
or
aad
cmp
jne
jp
cmpsb
pushf
push
scas
inc
lahf
mov
popa
icebp
push
sbb
mov
sbb
mov
test
sbb
jmp
add
pusha
insl
pop
adc
jne
jb
or
test
cmp
push
push
and
imul
sub
cmp
mov
int3
or
fisubrl
xor
pop
cltd
xchg
fmuls
dec
mov
add
dec
call
decl
mov
fadd
pop
push
loope
lcall
jns
mov
mov
inc
imul
pop
iret
int3
xchg
mov
push
bound
popa
loope
xlat
lods
pop
sbb
push
cmp
mov
lcall
in
test
xor
bound
dec
xchg
mov
insb
push
and
int3
loope
jno
mov
jne
aad
jmp
dec
mov
repnz
jle
shl
leave
notl
les
ja
pop
icebp
cmpsb
pop
jns
fwait
dec
dec
mov
out
fistpll
jge
ss
jnp
fdivr
loop
out
daa
arpl
or
and
das
es
sbb
jge
or
push
outsb
js
push
adcl
push
rcll
cmc
add
jnp
lock
cmpsb
or
dec
pop
rcll
rorl
and
imul
push
push
ss
sti
fdivrs
pop
adc
test
or
daa
mov
mov
jae
scas
jge
push
cli
pop
dec
icebp
repnz
add
inc
fwait
out
sbb
lock
mov
mov
pop
lds
jle
push
outsl
jmp
call
jno
lret
dec
std
sbb
pop
sbb
aam
lds
cmp
test
test
int
mov
ljmp
jle
outsl
sub
stc
pop
aam
stc
mov
jae
scas
jae
adc
mov
jge
rcrl
inc
xchg
inc
or
and
test
mov
repnz
incl
fwait
out
jne
popf
mov
push
pop
mov
cmc
inc
jg
inc
cmp
rclb
xchg
mov
icebp
lea
or
ficoms
subl
lret
or
test
jge
nop
bnd
orl
and
je
lahf
dec
loop
add
add
decl
sbb
pop
in
negl
sbbb
pop
jbe
movsb
into
orl
jecxz
out
adc
push
lods
loop
fs
adc
cmp
decl
sti
xor
and
leave
mov
scas
mov
fisttpl
and
jnp
jecxz
aas
decl
divb
push
xchg
cltd
dec
shl
mov
adc
sub
rol
popa
add
mov
mov
cmp
loope
insb
into
int
mov
xchg
adc
int3
cltd
dec
daa
aaa
mov
jmp
sbb
pushl
sahf
dec
push
push
mov
xchg
sbb
pop
mov
dec
xchg
daa
sub
ret
pop
sbb
and
ret
cmp
ror
xchg
cmpsb
enter
add
cld
imul
into
out
call
sub
jle
xchg
pop
lret
jle
repnz
inc
fnstenv
xor
sbb
loop
add
aad
movsb
add
pop
xlat
sub
into
pop
or
dec
sbb
xchg
mov
pop
out
inc
mov
sbb
dec
lahf
pop
sub
sbb
in
fcomps
int3
lret
lods
dec
sub
inc
sub
push
scas
add
in
data16
sbb
mov
adc
les
fucompp
jle
fisubrl
xor
punpckhdq
mov
sbb
pop
or
aam
ror
roll
popa
dec
in
xchg
sub
push
cltd
mov
test
dec
mov
cmp
push
sahf
int3
addr16
cmc
aam
inc
and
sub
fdivr
mov
lret
adcb
hlt
ja
push
xlat
inc
push
rcrl
pop
inc
cld
out
sysenter
pop
stc
and
clc
in
xchg
cwtl
lods
add
or
jne
pop
call
shl
jg
xor
xchg
test
sbb
fisubl
addr16
cld
mov
gs
pop
rcrl
pop
fdivl
ja
dec
int
lods
push
and
jns
mov
jmp
loope
in
mov
push
push
jb
out
xchg
lret
pusha
mov
mov
aaa
fmull
js
scas
icebp
push
jle
pop
adc
or
xchg
add
sbb
loope
xchg
js
int
in
and
add
das
cmp
inc
dec
mov
lock
or
fdivrs
ror
push
push
stos
in
lods
cld
pop
into
and
lds
fstps
test
fstps
sti
mov
sub
test
jp
or
pop
push
mov
and
leave
inc
or
ja
mov
fwait
arpl
in
mov
xchg
inc
lods
inc
shll
and
sbb
cmp
aaa
sbb
repz
out
outsl
iret
sub
jnp
mov
sbb
dec
xlat
addb
scas
sahf
and
lock
mov
pop
sbb
adc
adc
xor
dec
xchg
push
sti
pop
xlat
xchg
pop
js
pop
cld
inc
xchg
mov
adc
cmpl
sub
jb
js
mov
or
add
xchg
add
jno
repz
mov
cs
lods
pop
outsl
jns
sbb
pusha
leave
mov
xor
adc
pop
push
xchg
rcrb
clc
mov
jge
nopl
out
push
sahf
cmp
stos
decl
push
daa
movq
popf
adc
in
testb
mov
lock
pop
or
sbb
push
xor
dec
cli
jae
loopne
movsl
pop
and
mov
in
jl,pt
and
adc
fwait
nop
dec
das
pop
movsl
and
pop
fs
xchg
les
lcall
loop
sbb
mov
and
aas
popf
bound
loopne
imul
pop
lea
decl
push
xchg
fistpl
sbb
push
mov
inc
fs
mov
ret
test
or
in
pushw
mov
pop
test
cltd
jmp
test
pop
dec
lea
out
mov
and
mov
js
addr16
sbb
dec
shrb
mov
insb
cmpl
movsb
xchg
jno
cmpsl
insb
insl
sbb
jmp
ret
mov
inc
dec
mov
mov
popa
cwtl
jp
shll
xor
stos
iret
or
push
prefetch
sub
add
dec
or
enter
fbld
cmp
iret
jb
imul
fninit
jmp
push
scas
jo
jo
pop
imul
outsl
fbld
push
aas
enter
shrb
jns
xor
and
in
or
sbb
push
mov
mov
inc
jbe
add
and
adc
sub
xchg
lret
popa
je
daa
sub
sub
cmp
call
jp
sub
cld
push
sub
cwtl
fbld
cmpsb
jmp
or
xchg
test
jb
lods
jne
mov
mov
stc
or
mov
jmp
fwait
jmp
pop
out
mov
or
incb
sahf
insl
push
filds
push
cmp
sbb
dec
mov
ljmp
sbb
adc
fiadds
inc
out
inc
mov
cld
sbb
jmp
aam
adc
rcr
test
adc
mov
shrl
pushf
xor
push
jne
jmp
lret
push
stos
cmp
lcall
inc
mov
nop
icebp
mov
mov
je
jle
mov
mov
mov
cltd
push
in
cmp
push
js
inc
sub
xchg
daa
or
or
xchg
jnp
mov
stc
jmp
pop
stc
in
stos
xchg
mov
addb
add
jle
and
les
rol
push
pop
adc
sub
pop
inc
cmpb
stos
mov
pop
out
pop
add
pop
sbb
out
lret
rcrb
in
repnz
dec
imul
sbb
mov
add
inc
std
sbb
loop
movsl
add
test
outsl
inc
jg
or
add
xacquire
std
pop
cmp
push
add
clc
pusha
std
aas
push
mov
fsubrl
nop
cwtl
fbld
aas
add
iret
in
scas
fs
cmp
popl
aaa
fimuls
and
clc
and
cmp
mov
add
out
sub
pusha
sahf
add
lock
stos
orb
inc
xor
rcrl
mov
in
fistps
int3
pushf
fistpl
pop
ljmp
or
ljmp
jae
inc
cmp
pop
loopne
sti
out
xor
sub
scas
loopne
in
sahf
out
add
mov
push
fisttps
lds
lea
aad
dec
loop
mov
jp
or
mov
icebp
jnp
cmp
je
mov
jmp
jge
add
in
pusha
jecxz
loop
or
sbb
xor
cmp
out
shll
or
sbb
add
and
jp
push
lahf
add
icebp
xor
mov
jmp
lods
cmpsl
lretw
push
clc
mov
jg
clc
cmp
aam
lock
pop
cmp
gs
dec
call
pop
mov
mov
js
fidivl
inc
dec
inc
daa
jecxz
cwtl
mov
mov
frstor
bnd
fwait
lahf
aas
out
sub
stos
movsl
ds
push
sbb
cmp
mov
inc
outsl
popa
inc
popa
jl
popa
dec
leave
stc
or
pop
cmpl
sub
fsubr
test
push
mov
out
insl
push
and
pushf
je
sahf
scas
inc
inc
cmp
mov
sbb
pop
mov
hlt
or
adc
mov
push
inc
xchg
pusha
in
adc
pop
mov
test
fs
sub
dec
cmp
in
loope
cmp
sbb
shrl
inc
sub
pop
mov
inc
push
lods
cmp
adc
xor
lods
inc
test
aam
mov
outsb
or
rclb
mov
lds
hlt
mov
das
scas
ja
sarl
mov
arpl
adc
mov
sub
fisubl
mov
inc
cmpsb
orb
jecxz
out
loopne
movsl
addr16
jae
inc
movsb
mov
jns
adc
add
push
mov
lret
ja
fmull
aam
das
lcall
gs
xor
outsb
out
in
in
or
cmpl
mov
in
fnsave
mov
out
aad
and
ja
xor
xchg
xchg
dec
jno
or
inc
cmpsb
xor
in
mov
jmp
sub
dec
out
jno
lahf
mov
out
js
pop
dec
out
fldcw
lea
adc
or
cli
jbe
dec
stos
cmp
sbb
mov
pop
mov
xor
pop
dec
mov
fwait
scas
and
adc
sbb
mov
inc
jle
in
xchg
es
in
mov
jecxz
js
imul
and
jbe
cmc
push
movsb
mov
xchg
addr16
fadds
inc
fadd
jno
jg
in
imul
aad
rcll
outsb
and
ljmp
adc
pop
mov
jno
or
test
and
push
cwtl
xchg
repnz
rcll
pop
and
cmp
dec
adc
addr16
mov
mov
jmp
int3
cmp
adc
dec
ja
add
dec
in
add
in
add
pop
sbb
ds
cmp
sub
gs
adc
jge
xchg
xchg
mov
shrl
fcomps
pop
fwait
fwait
repz
aas
cmp
lret
mov
mov
mov
mov
icebp
test
iret
jge
cmp
into
es
pop
js
aas
orb
dec
imull
loope
mov
sbb
mov
jecxz
jmp
cltd
mov
adc
incb
and
adc
push
xchg
test
fists
ss
mov
js
insl
push
stc
mov
mov
ja
je
mov
int3
xchg
repnz
call
push
fistpl
ja
out
push
test
stos
imul
fsubr
repz
sub
mov
xchg
inc
rorl
dec
fucom
sub
pop
pop
hlt
xor
inc
mov
dec
test
fstpl
ret
jl
data16
arpl
jmp
jo
xor
les
inc
pushf
dec
and
mov
scas
adc
in
jmp
cmpb
or
addb
add
sub
popf
leave
lret
loope
iret
addr16
out
rep
add
fstl
popa
mov
mov
fists
and
or
push
fidivs
mov
loop
je
jl
in
ja
inc
push
cmp
inc
aam
sbb
or
sarb
ret
mov
jo
push
lret
xor
mov
lahf
mov
aas
addb
test
pinsrw
xchg
cmpb
sbb
mov
lahf
loope
in
lea
sbb
dec
push
in
cmc
lea
cmc
jbe
pop
cltd
imul
aaa
addr16
mov
andb
mov
cmpsb
cmp
inc
ret
out
lcall
jge
shr
mov
cltd
push
mov
dec
testl
je
aam
xor
lcall
movsl
ret
sub
jno
jnp
lock
xor
inc
enter
imul
decl
or
push
cltd
insb
adc
scas
out
mov
jecxz
fidivl
mov
mov
xor
fistl
dec
adc
add
cld
push
jle
enter
xlat
arpl
jbe
mov
push
rcll
or
mov
mov
push
sbb
rol
outsb
add
enter
pop
scas
in
loop
xor
in
sub
push
and
andl
fmuls
jmp
fs
fisubs
xor
push
pop
aaa
lock
fcoms
pop
push
adc
push
cmp
mov
xchg
cmpsl
inc
jg
cmp
clc
mov
movsb
sti
lods
xchg
call
in
stos
lcall
ret
dec
xchg
leave
inc
imul
or
fwait
pop
in
or
mov
xor
xchg
xchg
xchg
mov
aaa
insl
scas
rcll
es
sub
mov
and
mov
mov
mov
jmp
push
add
popa
mov
inc
es
sbb
test
daa
inc
push
jbe
sti
nop
cwtl
sbb
lods
lock
lds
dec
push
jno
fs
repz
icebp
or
stos
and
and
dec
pusha
jp
xor
mov
xchg
mov
pop
icebp
mov
addb
shlb
pop
scas
or
imul
jp
pop
test
daa
and
cmp
sbb
mov
inc
or
fmuls
std
rcrl
add
inc
pusha
mov
push
repnz
xor
cwtl
push
sub
jge
mov
int
add
out
je
in
iret
shl
lea
ljmp
adc
xchg
mov
dec
cmp
and
lret
dec
jmp
fwait
lea
or
push
nop
stos
dec
xor
imul
and
xchg
nop
hlt
pop
pop
inc
or
inc
test
dec
cmp
jp
pop
xchg
sub
push
jl
mov
aaa
inc
sahf
data16
adc
stos
jnp
sub
xor
mov
leave
scas
sti
cmp
xchg
fsubs
dec
xor
jne
scas
outsl
ret
cld
ja
dec
inc
loopne
scas
pop
sbb
push
mov
cmpsb
arpl
add
jl
fldcw
xchg
outsb
mov
xor
xchg
inc
outsl
mov
lods
jmp
sbb
sbb
jo
jo
mov
cmpsb
std
xorb
fsubs
and
adc
enter
inc
pop
pop
das
sbb
xor
xor
lock
addr16
jb
jle
push
lods
addr16
xor
aas
dec
fdivr
popa
mov
insl
shlb
jmp
sub
cmp
cmc
out
fsubl
adc
ss
js
data16
shrb
mov
lds
fimull
data16
call
scas
dec
imul
xchg
inc
pop
aam
test
enter
mov
sub
sbb
popa
cmp
add
cmp
and
rorl
adcl
xor
mov
dec
lds
loopne
mov
rclb
pushf
aas
ljmp
adc
xchg
mov
mov
jg
pop
mov
inc
ret
aas
mov
and
mov
adc
mov
push
loopne
mov
sbb
je
lcall
add
shlb
pushf
jle
inc
cwtl
and
pusha
enter
pop
or
dec
lahf
mov
icebp
mov
pop
icebp
pop
cld
cmpsl
adc
mov
xchg
or
shlb
push
jmp
add
push
inc
ret
sahf
push
add
adc
push
inc
out
lahf
mov
sbb
jge
xor
mov
in
adc
shlb
mov
add
addr16
or
mov
pop
cmp
icebp
mov
out
mov
out
mov
jae
loopne
aaa
or
jno
mov
cmp
inc
cmp
or
jo
cmpsb
push
aas
or
insl
inc
ds
mov
es
sbb
and
or
inc
into
or
out
jnp
add
repnz
mov
fstpl
mov
inc
push
enter
sbb
addr16
lret
mov
pushf
lret
pop
mov
test
pusha
dec
aas
in
stc
cwtl
sbb
lea
adc
push
push
jg
addr16
sti
add
and
mov
mov
pop
movsb
mov
out
adc
std
mov
leave
aas
jg
cld
mov
xchg
push
popl
subb
arpl
xlat
imul
movsb
cmp
inc
frstor
mov
stc
addb
int3
inc
stos
lret
lret
lods
std
out
ret
fcompl
xchg
imul
pop
cmpsl
adc
pop
sbb
cmp
test
jb
xchg
cmp
cmp
push
aas
dec
cwtl
jnp
sbb
mov
aas
cmp
xchg
mov
leave
outsb
insb
mov
insl
test
jmp
add
xchg
or
addr16
movsl
loopne
jbe
mov
or
int3
lret
mov
inc
jne
mov
jb
ret
sub
and
cltd
cmp
mov
lea
pop
jp
mov
sbb
adc
lcall
in
loope
imul
rorb
pop
mov
hlt
arpl
or
fists
jle
pop
mov
mov
mov
push
jle
inc
adc
or
arpl
push
push
push
pop
or
and
xchg
shlb
mov
bound
mov
mov
outsb
leave
push
mov
rolb
mov
cs
push
pop
jg
ljmp
aam
sbb
dec
push
stc
fstps
scas
pusha
push
nop
jmp
nop
mov
popa
cmpsb
enter
pop
arpl
xchg
add
push
mov
mov
xchg
dec
jo,pn
and
jbe
mov
cld
push
test
scas
jae
push
popf
or
and
dec
adc
testl
mov
lea
aad
or
mov
mov
shl
hlt
jmp
rorl
xor
sbb
push
jno
lods
push
movzwl
icebp
or
adc
lret
outsl
adc
pop
cld
test
push
mov
insb
fisubl
mov
pop
mov
or
fs
out
xlat
and
in
lock
mov
mov
or
pop
dec
mov
cmpsl
insb
cld
adc
jge
mov
inc
mov
shl
cld
dec
or
sub
fwait
lret
aas
fcmovbe
jl,pn
ficompl
lret
arpl
add
inc
push
outsb
pop
push
mov
adc
add
sbb
pop
lods
lea
inc
inc
jb
mov
loope
adc
mov
fwait
cs
jne
xor
inc
bound
adc
add
cli
cmp
mov
fwait
gs
sub
pop
sub
icebp
addr16
mov
push
inc
sidtl
std
les
mov
jl
pop
xchg
push
adc
cmp
flds
xor
sbb
pop
sbb
xlat
sbb
and
and
andb
adc
sahf
xlat
ljmp
sub
aaa
rclb
or
cltd
push
out
push
sarb
xor
inc
fsubl
mov
in
pop
sbb
enter
add
jo
test
mov
repnz
movsb
xorb
lcall
lcall
jne
cwtl
dec
jbe
scas
cltd
les
xchg
pop
into
insl
sbb
scas
mov
sahf
adc
cmp
aaa
push
jg
add
repnz
sahf
int
jb,pn
test
sbb
dec
mov
jge
testb
mov
sub
or
xchg
sub
push
and
scas
fldl2t
jle
sbb
pop
fimull
addr16
bound
cmpsl
jmp
jns
ja
lret
lcall
xchg
lret
sub
mov
inc
xor
pcmpgtd
subb
fistpll
inc
insb
push
and
mov
sti
inc
jmp
fwait
ret
xor
sub
sahf
or
addl
dec
xor
lock
push
data16
mov
insb
cmp
addr16
mov
shlb
sbb
test
jmp
enter
jae
lret
stos
repnz
data16
gs
push
pop
pop
mov
addr16
push
loopne
mov
lret
rcl
add
push
mov
push
lret
or
xchg
cmp
out
iret
or
mov
sar
mov
int3
jp
lds
mov
out
in
push
pusha
cmp
adc
mov
gs
sub
jae
cwtl
jge
out
insl
jo
shrl
xor
int3
cmpsb
cmp
movsl
jge
clc
mov
xor
add
adc
jb
xchg
pop
outsl
test
add
xchg
lds
cmp
cwtl
test
xchg
inc
xchg
dec
sub
jle
and
sbb
mov
or
clc
or
jmp
jp
xchg
add
xchg
imul
inc
sti
sub
or
cmpl
xor
xchg
or
inc
inc
vpaddd
pop
jle
push
cltd
pusha
daa
jge
cmp
xchg
xchg
movsb
inc
rolb
xor
cmp
jl
idivb
dec
out
aas
pop
outsl
mull
or
test
add
mov
out
inc
jbe
and
jmp
push
cltd
mov
mov
mov
xor
push
out
sub
bound
adc
test
lds
adc
mov
mov
scas
mov
jl
scas
cli
das
mov
jae
add
inc
jnp
ds
jge
sbb
mov
cs
push
sbb
add
ficomps
js
shll
fmuls
adc
cmp
loop
loopne
rcrb
xchg
mov
jbe,pt
cmpsb
mov
in
arpl
inc
orb
sub
fcom
daa
cmp
popf
add
in
leave
int
shl
sbb
xchg
push
push
mov
lret
push
add
sahf
fsubrs
push
imull
or
push
fistpl
hlt
je
sbb
pusha
mov
push
push
das
adc
das
repz
or
bound
std
es
fbstp
shll
pop
pop
inc
dec
sub
fwait
movsl
loop
gs
pop
test
cmpb
ret
xor
fmuls
sub
push
in
hlt
cmp
movsb
aaa
or
lods
and
out
and
fbld
or
shrb
mov
fs
jecxz
lret
xchg
xlat
mov
inc
or
push
dec
imul
daa
das
push
dec
adc
int
fnstcw
orl
adc
dec
inc
inc
push
cmp
mov
mov
mov
pop
jmp
shll
out
clc
imul
adc
in
jmp
and
mov
sarb
les
xchg
shlb
xor
push
cmc
ds
push
stc
adc
daa
imul
xchg
jge
xchg
popf
dec
fcomps
loope
sbb
xchg
jbe
int
cmpsb
in
aad
into
popf
jmp
and
clc
mov
cmp
adc
jge
adcb
mov
jge
mov
mov
or
gs
mov
push
mov
in
test
lret
sub
loop
push
sub
hlt
add
push
bound
push
in
repnz
and
es
xor
push
sbb
mov
xchg
dec
inc
jg
push
int
cmpsb
aam
imul
xchg
mov
mov
ds
imul
xchg
push
std
mov
ds
inc
or
add
inc
lock
cltd
daa
or
lret
and
and
out
jae
push
inc
mov
jmp
push
xchg
loope
and
ss
out
adc
xchg
xor
sahf
in
or
and
inc
cli
lock
icebp
roll
pop
mov
out
fs
stos
call
iret
int3
jnp
mov
sbb
sub
dec
add
xchg
mov
fs
mov
xor
je
push
loopne
jnp
test
leave
jle,pt
pop
sti
add
mov
out
xor
fsubp
int3
pop
or
mov
mov
mov
test
mov
ds
rorb
dec
jno
mov
sarl
lcall
insb
push
lds
rorl
daa
add
pop
dec
xchg
loope
enter
imul
pop
push
popa
mov
rolb
dec
jb
aad
ja
jge
sub
adc
xor
sahf
ljmp
gs
and
pop
loop
in
mov
jne
xor
fistl
cmpsl
mov
stos
xor
imul
sub
into
cs
sti
push
icebp
subl
es
pop
add
and
dec
popa
fcoml
out
or
inc
xor
cmpl
cmp
push
fs
cmc
aas
out
cli
add
adc
mov
lahf
aaa
dec
shlb
popf
jne
cmp
outsb
mov
int3
adc
rcll
adc
das
movq
push
aas
ja
dec
repz
loope
add
rcr
push
xor
inc
mov
adc
xchg
lret
mov
pop
adc
lahf
stos
sub
dec
jp
jae
ret
mov
xchg
lret
and
cltd
outsb
or
fs
xchg
testb
dec
sub
xchg
outsl
xchg
outsb
mov
xchg
push
adc
mov
mov
jmp
pop
adc
or
negl
stos
fisubrl
push
add
insb
mov
jmp
aad
xor
scas
jno
adc
fldenv
adc
fsubrl
adc
ss
inc
xchg
jbe
cli
sti
out
popf
cwtl
mov
mov
push
sbb
dec
mov
inc
ret
les
sbb
scas
sub
xchg
pop
jno
cli
adc
cld
stos
sbb
out
inc
lods
inc
dec
pop
icebp
xchg
push
inc
in
adc
daa
mov
js
movsb
loopne
inc
mov
inc
arpl
and
aaa
es
fsubr
sbb
sahf
or
jp
test
xchg
in
aaa
xor
mov
push
inc
adc
and
faddl
xchg
push
dec
mov
mov
outsb
cmpl
lret
push
sub
jae
jb
pushf
adc
dec
imul
imul
mov
inc
fnstenv
fcomi
jmp
enter
pusha
lret
test
add
and
clc
sbb
push
mov
addr16
mov
xor
into
jno
repz
mov
roll
push
iret
mov
xchg
xchg
ja
cli
adc
lods
push
mov
jnp
jmp
ret
jns
insb
rorb
lret
aam
xor
sbb
push
pop
inc
bound
jnp
sti
jbe
pop
pusha
loop
fwait
xchg
in
gs
ficoms
pusha
clc
sbb
shrb
shll
mov
sahf
lock
add
push
jge
cmp
int
sub
pop
sbb
push
xor
mov
push
iret
sbb
movsl
and
or
jl
outsb
fistpl
clc
stos
out
sub
mov
icebp
jo
in
xchg
or
xor
or
fstpt
jle
cli
mov
cmpsb
shlb
mov
orb
add
push
icebp
jnp
cwtl
dec
lea
je
xchg
push
dec
sar
inc
ss
inc
cmp
fistl
dec
int3
mov
inc
mov
orb
adc
out
or
mov
andl
setne
pop
jo
mov
push
xchg
scas
xor
jge
sti
aad
inc
cmpsb
pop
push
in
arpl
dec
adc
sub
roll
pop
addl
mov
pop
test
aaa
mov
repz
stc
adc
repnz
sub
in
xchg
movsb
adc
mov
xchg
pop
fwait
insb
or
aam
cmp
or
xchg
dec
test
push
inc
cmp
pop
push
outsl
lock
pop
sbb
and
subb
pop
arpl
pop
cmpb
leave
dec
jmp
jge
addr16
add
and
ror
push
or
int3
adc
sub
push
cmpsl
jnp
jno
jg
sbb
pop
mov
push
adc
jmp
sbb
inc
dec
stos
ss
sbb
cmpsb
in
pop
and
andl
cmp
sub
test
xchg
and
sub
cltd
jb
rorl
mov
outsl
test
les
pop
mov
int3
cltd
mov
mov
push
mov
gs
icebp
call
test
sti
ja
repz
xor
xchg
sbb
add
int
adc
adc
add
sub
push
daa
fadds
nop
add
adc
cmp
test
add
sub
adc
mov
loopne
pop
mov
sbb
cli
push
and
out
aad
pop
xor
pop
mov
rcll
jns
fisubrs
mov
gs
fisubs
adc
imul
mov
scas
jae
pop
push
insl
adc
leave
push
mov
mov
ljmp
stos
and
ficompl
ja
or
lret
ss
xchg
lcall
pop
adc
loop
repnz
jo
mov
inc
iret
test
xor
stc
xchg
in
fsubrs
jb
iret
pushf
movsl
nop
lret
out
fsubl
fidivrl
add
inc
jge
inc
rcrb
xchg
mov
or
sbb
test
xor
and
test
xor
dec
sub
out
add
xor
cli
subl
sbb
mov
out
test
mov
and
inc
mov
xchg
mov
xor
subb
xchg
cs
push
shll
jecxz
mov
jge
lock
fisttpl
dec
aaa
dec
je
xchg
cmpsl
mov
dec
ret
hlt
mov
mov
mov
mov
div
mov
pop
daa
xor
xchg
mov
adc
jnp
pop
fsub
cmpsb
add
xor
in
inc
std
and
loopne
mov
aam
dec
adc
loope
pop
or
mov
adc
inc
or
clc
sub
push
mov
sbb
andb
mov
dec
lcall
ror
mov
sub
icebp
movsl
bound
idiv
fwait
and
fs
and
fs
insl
fs
inc
cmp
fdivr
scas
addr16
adc
push
or
mov
subb
mov
push
pop
inc
push
jge
adc
cltd
mov
adc
test
mov
lea
sbb
jecxz
jecxz
dec
lahf
inc
sbb
push
shl
je
pop
imul
cmpsl
jmp
jb,pn
repz
cwtl
cwtl
insb
mov
movsb
push
mov
test
pop
sbb
mov
xlat
add
inc
imul
sub
ljmp
push
push
mov
mov
mov
pop
lock
and
cld
nop
mov
and
das
cmpsl
sbb
aad
fcomip
orb
rcr
xor
rcll
adc
or
cmpb
jo
cmp
inc
cmp
jns
push
add
fwait
cmpsl
sbb
cmp
imul
cwtl
fwait
mov
adc
inc
and
xor
adc
mov
rcrl
jmp
push
cmpsl
dec
and
sbb
jecxz
inc
mov
push
pop
shr
mov
ret
stos
xchg
sub
iret
ret
fisubl
fimull
fdivr
jb
stos
int3
pop
dec
add
sahf
call
jne
adc
out
add
cs
adc
pop
sbb
movsb
mov
hlt
adc
dec
and
nop
push
fidivrs
and
outsb
push
xor
push
out
out
xchg
push
fisubs
test
scas
fwait
inc
xchg
ret
js
addr16
loop
or
loopne
cmp
jecxz
pop
jmp
loope
insb
rcrb
leave
nop
iret
push
mov
lret
add
stos
dec
or
clc
mov
xchg
or
sub
mov
pop
dec
aad
inc
scas
adc
add
jp
mov
scas
rorl
cld
mov
inc
cmp
cmp
sbb
sub
fisttpl
mov
ds
xchg
cld
insb
popa
daa
push
sbb
cs
mov
mov
mov
ds
jmp
popa
outsl
scas
clc
inc
repz
xor
push
dec
sbb
and
pop
jne
mov
rorl
mov
xchg
fildl
mov
rcll
fdivl
scas
or
das
sbb
stc
out
jno
out
insb
fidivrl
cli
or
sub
imul
adc
and
dec
mov
ljmp
movsl
orb
insl
cwtl
imul
jbe
pop
pop
scas
aas
aad
test
divl
es
xchg
adc
and
pop
jp
das
and
mov
cmc
clc
add
fildll
mov
test
test
mov
into
sbb
fnsave
jb
rcl
inc
cld
out
mov
xchg
sbb
mov
jo
lcall
xor
scas
mov
add
and
sbb
pusha
mov
cld
data16
inc
and
cmp
bound
jg
inc
repnz
cwtl
addr16
jge
ja
push
ficoms
adc
xor
push
inc
add
and
data16
in
sbb
jbe
cltd
enter
sbb
out
out
lret
inc
cmp
xor
je
adc
jp
fcmovu
ds
sti
sbb
js
xor
mov
and
cmpsl
hlt
mov
pop
ljmp
dec
sbb
adc
mull
cld
fcompl
pusha
cmpsl
outsl
loope
std
dec
mov
mov
dec
in
cmp
sub
sbb
sbb
loopne
mov
pop
in
sbbl
jmp
out
sarl
fnstsw
xchg
cmp
daa
insb
mov
in
push
push
shlb
je
lock
inc
insl
jg
sarl
jp
cmc
fidivl
push
test
mov
das
xchg
xor
xor
rolb
lret
mov
pop
add
dec
fidivl
aad
cltd
lods
push
fsubl
sahf
pushf
movsb
outsl
cmpsl
imul
cmp
add
test
shl
xlat
aam
insb
in
sub
fnstcw
or
fmull
inc
pusha
xchg
cmpsb
out
inc
mov
dec
cmp
push
cmp
lea
and
cmp
push
adc
mov
adc
js
cli
loope
out
adc
push
fiadds
push
cmp
pusha
test
inc
das
pop
sub
adc
cmp
jne
dec
cmpsb
lods
pop
sbb
cmp
call
in
cmc
sub
mov
push
repz
cmpsl
in
stos
push
jbe
subb
in
jb
add
int
sbb
pop
fs
rolb
mov
adc
jp
mov
push
lahf
arpl
mov
mov
iret
dec
inc
repz
imul
xor
out
sbb
jle
mov
or
out
mov
dec
scas
jmp
outsb
pop
or
mov
lock
clc
jo
xlat
fildl
shr
lods
in
mov
inc
fstpl
jnp
xchg
ss
jae
xchg
sbb
cmp
mov
add
mov
out
push
punpckldq
mov
pushf
ja
cli
or
sbb
adc
les
shlb
mov
push
dec
mov
das
cltd
xor
push
mov
or
ret
xchg
ds
addb
sbb
aas
sub
ss
and
fwait
dec
xor
push
pop
rcl
ja
lock
and
ljmp
jnp
xor
sub
push
stos
jns
rcr
jge
shl
stos
orl
inc
xorb
mov
fcoms
out
ret
mov
cmp
lock
inc
pop
pusha
test
push
fisubl
mov
shl
jbe
dec
cmpsl
and
out
outsb
filds
into
push
fsubrl
hlt
mov
mov
or
add
pop
popa
push
inc
outsl
or
push
or
inc
xorl
mov
aad
aad
out
repnz
xor
mov
es
shr
mov
repnz
movsl
add
out
mov
loope
push
jge
movsb
je
cmp
repz
enter
inc
fidivrl
xor
pop
inc
pusha
and
leave
scas
daa
pusha
cmpsb
insl
call
pop
xchg
pop
mov
iret
dec
jbe
inc
arpl
jp
jo
int3
mov
mov
mov
push
jp
mov
sbb
xchg
das
sub
mov
dec
negl
dec
adc
push
jp
cmp
leave
mov
les
sub
and
or
jp
pop
outsb
jl
or
xchg
sub
mov
inc
iret
xchg
scas
pop
cmp
lods
shlb
int3
sub
sbb
jg
cwtl
test
lea
adc
pop
push
sub
mov
xchg
movsb
arpl
imul
add
and
and
addr16
jbe
sbb
sbb
dec
int3
dec
int3
ds
push
mov
xor
xorb
adc
insb
loope
mov
data16
jb
rol
and
gs
lret
std
or
insl
xor
mov
mov
xchg
mov
inc
in
pop
cmp
lret
lahf
out
xor
scas
cmpl
fisttpl
add
loope,pt
pop
and
dec
jae
aam
sub
fistps
dec
fdiv
jbe
xchg
iret
pop
repnz
jns
inc
or
adc
cmp
lret
pushf
jo
mov
add
repnz
fwait
lds
aad
into
adc
mov
ljmp
enter
xchg
xor
cmp
mov
in
jo
sti
sbb
test
or
sub
mov
aas
mov
lds
outsb
mov
pop
fnstcw
mov
adc
divl
sub
and
pop
repz
test
jns
test
stc
sub
push
pop
aas
jge
das
leave
es
adc
add
pop
jmp
fs
int3
lret
cmp
jnp
popf
bound
mov
inc
adc
orl
mov
jmp
sub
pop
aam
into
mov
mov
shlb
xor
pop
mov
cmc
clc
mov
aas
insl
scas
mov
fs
xchg
xchg
push
aam
lret
scas
aas
or
or
lret
adc
mov
xor
idivb
cmc
enter
loop
out
jno
in
sti
push
aaa
inc
jae
mov
clc
push
cli
ds
mov
inc
sbb
jmp
iret
dec
jmp
aad
sbb
mov
cmp
iret
cs
inc
ror
lcall
pop
notb
arpl
lahf
nop
ret
iret
mov
loope
and
dec
add
cmp
and
hlt
adc
or
mov
jecxz
nop
dec
or
imulb
pop
dec
jnp
add
out
mov
mov
popa
adc
int
cwtl
sti
test
dec
pop
mov
scas
mov
stos
nop
xchg
push
in
das
dec
cmp
rorl
add
negb
xchg
int
movsb
mov
cs
mov
popa
lahf
ret
lods
mov
xchg
and
push
or
jmp
bound
mov
sub
push
jmp
inc
aaa
movsl
cltd
nop
add
push
sahf
fisttpl
xor
mov
pushl
cmp
pop
pop
inc
in
sbb
dec
insl
fs
mov
mov
xor
jo
popf
mov
insl
ljmp
in
add
xchg
in
sti
and
insb
inc
fisttps
jbe
xor
jbe
pop
push
imul
push
fs
cmp
mov
pop
repz
mov
subb
icebp
shld
push
popf
inc
cmpsl
push
push
add
mov
in
add
add
fnstsw
xchg
or
ljmp
lret
mov
xor
push
cmp
mov
sbb
xor
ds
rorl
ljmp
cmpsb
mov
das
das
flds
pop
mov
mov
scas
or
popf
cmpsl
movsl
jne
sbb
mov
test
repnz
ss
rclb
test
stos
dec
in
stos
adc
fcoml
and
cmp
push
sbb
inc
in
or
jnp
iret
repnz
ds
jno
sub
inc
ja
xchg
mov
inc
push
push
lods
jmp
inc
outsb
int3
dec
insb
jnp
or
mov
dec
lahf
leave
repnz
cld
and
jbe
add
cmp
jnp
push
rolb
push
cmpl
loope
int
hlt
cwtl
cmpsb
imul
scas
lcall
jle
std
movsb
xchg
mov
repz
shr
rcrb
fidivl
pushf
dec
push
pop
dec
pusha
out
xlat
movsb
xor
adc
pop
lods
or
rcll
mov
addr16
rolb
js
push
ffree
imul
or
sbbl
mov
jbe
loop
push
les
call
adc
or
sub
jge
lds
pop
sbb
test
xchg
and
mov
push
lods
mov
and
ja
fidivl
inc
sbb
aaa
mov
aaa
dec
cltd
dec
mov
pushf
popa
or
mov
sub
fmuls
ja
stos
lods
loop
fcoml
les
ja
imul
xchg
movsb
gs
iret
jno
je
fsubl
push
jae
pop
std
lcall
nop
arpl
aam
xor
dec
test
aam
popf
cwtl
jae
roll
mov
fwait
out
push
adc
push
push
cltd
mov
nop
ret
enter
mov
nop
push
adc
xchg
mov
dec
stos
fildl
dec
imul
and
xchg
stos
lds
xchg
sahf
cmp
dec
push
push
or
push
add
sbb
out
ss
cmpsb
movsb
push
adcb
test
fs
jecxz
leave
addb
xorb
lods
dec
mov
movsl
das
gs
push
sub
mov
dec
dec
mov
xor
fs
gs
or
test
rol
stos
sarb
divb
jnp
out
std
js
pop
mov
mov
sbb
out
pusha
fucomip
aam
js
xchg
jg
jg
push
jo
sti
lods
cmc
mov
cmpsl
lods
adc
cli
dec
xlat
out
in
mov
pop
int3
pusha
imul
mov
and
adc
enter
pop
in
jl
icebp
jecxz
xor
cmp
mov
and
pop
or
jbe
xchg
xlat
not
dec
icebp
ja
push
ds
cwtl
cmc
inc
pop
cmp
jmp
mov
fcoml
push
outsb
dec
mov
pop
xor
ds
xor
and
popa
mov
xlat
mov
fidivs
mov
popf
inc
sbb
imul
out
cmp
sbb
call
cmp
inc
loopne
jno
test
pop
pop
cmp
incl
or
fstpl
in
jne
dec
push
sub
jne
ja
scas
scas
jl
and
cmpsb
fimull
lods
mov
push
mov
scas
loope
lods
sbb
in
stos
fisttpl
movsl
enter
and
xor
pop
cmc
in
mov
inc
push
add
xchg
or
cld
or
outsl
es
mov
mov
sub
mov
mov
sub
stos
jle
mov
orb
insb
popf
fistpl
aas
addb
xchg
sbbl
dec
xor
sbb
cmp
inc
pusha
addr16
push
or
inc
out
jp
pusha
adc
push
xchg
fldl
mov
call
int3
mov
push
je
push
icebp
fidivl
sbb
mov
mov
dec
dec
dec
fldt
pop
mov
xchg
xchg
sti
mov
sub
out
rcrl
lods
sbb
mov
or
jg
push
mov
mov
ret
inc
cli
arpl
pop
aam
adc
jns
xor
inc
in
lahf
pop
movsb
imul
lret
push
dec
pop
jns
outsb
dec
pushf
adc
dec
outsb
shlb
inc
fcomps
sahf
add
push
mov
jb
pop
mov
iret
popf
ret
mov
stc
stos
adc
pusha
xlat
in
mov
repnz
int3
or
bound
jo
jne
and
cmp
shrl
jae
movsl
fst
movsl
xchg
add
aam
push
mov
or
fimuls
mov
stc
push
lods
jns
out
and
pop
sti
fldcw
jo
or
arpl
repz
ds
mov
out
sbb
inc
cmp
subb
sarl
dec
inc
mov
dec
std
aaa
push
cli
mov
adcl
xchg
std
push
fbstp
pop
lods
and
call
adc
outsl
xchg
add
cmpsb
insb
out
or
inc
test
xchg
xchg
or
xchg
in
fistpl
into
loopne
mov
mov
mov
cmp
xchg
and
push
es
push
stos
jg
sub
scas
shlb
pop
stos
repnz
sub
and
mov
imul
aas
into
hlt
int
sbb
inc
cmpsb
out
out
mov
enter
push
clc
push
loope
in
or
dec
cmp
scas
xchg
es
call
xchg
pop
xor
xor
cmp
rorl
test
xor
pop
scas
adc
jmp
push
movsl
je
mov
stc
enter
in
shlb
pop
push
jae
cld
xchg
mov
into
test
mov
mov
cmc
out
push
cmpb
and
push
mov
push
out
out
push
scas
enter
push
arpl
sub
popa
out
std
add
xchg
out
nop
mov
stos
pop
xchg
lret
jmp
inc
loopne
lods
imul
sbb
arpl
inc
add
lds
iret
xor
rcll
lds
push
add
in
lret
mov
aam
dec
mov
mov
and
sbb
mov
mov
adcl
or
std
mov
jg
dec
xchg
pop
adc
addr16
loope
cwtl
push
xchg
subb
dec
or
and
cli
call
cmpsl
int
add
shr
daa
sub
imul
inc
cld
xor
xor
das
ror
ja
inc
lods
loope
int3
mov
pop
sbb
mov
sub
sbb
in
jo
push
cmpsl
pop
pop
and
imul
push
mov
mov
mov
pop
bound
mull
ja
jo
scas
in
repz
js
jne
xchg
xchg
nop
mov
xor
cmpsb
out
adc
sub
pop
sbb
loopne
jbe
inc
ja
jae
movsl
add
push
ljmp
in
in
iret
mov
add
xchg
jne
lret
cmp
aas
jb
lahf
das
dec
hlt
cmpsl
sub
popa
and
cs
mov
nop
mov
mov
popf
pop
sbb
mov
push
push
mov
inc
xor
in
adc
adc
xchg
rolb
xchg
es
mov
ss
in
add
cmc
add
sarb
ret
filds
jno
mov
pusha
mov
and
add
fisttpll
cmp
push
ds
and
ja
dec
jbe
addr16
mov
sbb
add
out
stos
int3
sbb
mov
push
addr16
in
in
mov
fs
adc
enter
mov
lret
dec
push
aaa
test
jns
faddl
stc
adc
dec
mov
in
lahf
adc
push
out
ljmp
sub
test
insl
out
xor
mov
daa
jae
adc
dec
push
cmp
mov
mov
jg
pusha
push
out
inc
cs
addl
in
mov
loopne
cli
xchg
and
loopne
mov
xor
dec
dec
cwtl
sti
pop
aam
sahf
push
jo
push
movsl
mov
add
adc
jle
xchg
test
mov
fmuls
js
movsl
rol
and
inc
sub
or
pop
pop
cmp
addr16
insb
shlb
fdiv
or
mov
xchg
lods
movsb
daa
outsb
jnp
sub
mov
or
mov
sar
pusha
pop
xor
das
sub
mov
stc
jle
enter
xchg
push
aam
jnp
movsl
sub
imul
out
sbb
movsl
mov
mov
arpl
mov
js
pop
popa
cmpsb
lret
into
add
outsl
cmp
pushw
movl
mov
mov
lcall
cmp
cmp
jnp
ss
jne
or
test
mov
cmp
add
scas
or
hlt
fnstenv
fadds
rcrl
nop
mov
std
adc
sahf
xor
push
sti
jno
fsubrs
adc
push
roll
push
mov
jg
adc
bound
cmpsl
orl
out
add
lret
xchg
dec
std
in
push
nop
call
fisubl
dec
jo
and
loop
sub
jl
ja
lods
mov
adc
fs
mov
cmpsb
adc
add
push
xchg
xchg
mov
cwtl
fistpl
leave
cmp
inc
dec
add
mov
push
inc
lods
and
lods
iret
nop
mov
mov
out
mov
inc
movnti
mov
icebp
daa
sbbb
mov
sbb
sub
and
pushl
ds
jl
aaa
popa
aaa
dec
divl
xchg
test
lods
inc
adc
sbb
call
outsl
and
mov
sub
icebp
mov
mov
bound
sarl
jmp
dec
xor
orl
ret
gs
out
loopne
jmp
and
imul
sahf
push
aas
adc
sbb
jg
dec
and
push
pop
fidivs
mov
outsb
iret
and
inc
imull
add
jmp
ss
mov
call
inc
pop
sub
adc
addr16
ja
push
mov
push
dec
aaa
xchg
cwtl
mov
or
mov
xor
mov
shr
lds
inc
adc
shl
jbe
je
ret
and
cmpl
push
ret
fwait
push
push
jns
fcomps
mov
popa
cmp
fisttps
outsl
cmpsl
adc
fldt
fwait
push
mov
adc
clc
push
jbe
pusha
mov
iret
addr16
lods
rorb
push
xorl
pop
add
sbb
xor
ja
pushf
rclb
xchg
mov
xor
stos
xchg
clc
scas
fsubs
icebp
out
pop
inc
ds
fs
outsl
pop
nop
and
arpl
rcrb
mov
ss
xchg
lret
out
jmp
jne
push
gs
out
lods
out
inc
inc
mov
and
clc
push
pop
push
fwait
sbb
loope
mov
dec
dec
lcall
cmp
mov
mov
xorb
dec
repnz
sbb
pop
and
jg
hlt
es
or
addr16
mov
add
pop
repnz
mov
bound
lahf
lods
pop
cltd
mov
push
push
sbb
mov
mov
adc
xor
dec
adc
sub
std
inc
hlt
cmp
inc
into
mov
xchg
sbb
loop
mov
sbb
or
push
sub
cld
pop
aaa
jb
jle
sub
test
aas
or
push
mov
inc
adc
jne
xor
adc
lcall
rcrl
mov
cmp
cmp
or
in
mov
jb
iret
and
mov
pushf
out
push
je
fidivrs
ja
imul
aas
icebp
jno
jecxz
add
or
mov
sub
rcr
cli
or
pusha
insl
ja
lcall
push
mov
and
push
loopne
mov
pusha
push
push
daa
mov
test
jmp
push
dec
inc
test
xchg
mov
adc
adc
mov
mov
mov
std
sub
stos
icebp
cmp
scas
mov
je
cmp
jb
in
es
out
sub
fstps
dec
xchg
dec
lcall
mov
enter
jl
xchg
scas
mov
stc
lods
data16
push
adc
fldl
daa
jno
rorb
add
out
cld
call
dec
pusha
and
cmp
and
xor
mov
xor
and
add
mov
jo
ja
hlt
jnp
mov
add
mov
push
lock
and
lret
mov
repz
in
xor
mov
fstl
fcoms
insb
psrlq
dec
loop
sbb
sbb
std
xorb
arpl
or
cli
xchg
scas
mov
push
sub
cmc
pop
addr16
xchg
testl
inc
test
les
xlat
add
out
cmp
gs
sbb
hlt
push
pushf
push
pop
movsl
push
rorb
push
cmp
leave
pop
fsts
loopne
out
je
xchg
fimuls
mov
inc
in
movsb
out
inc
mov
dec
push
scas
ja
add
movsl
inc
repz
mov
mov
notl
mov
fs
jp
cwtl
fucomi
inc
adc
pusha
sub
aad
stos
ds
out
or
dec
pop
mov
mov
in
cmc
cwtl
sahf
xor
jg
push
pop
push
mov
andl
xor
test
inc
pop
jl
in
icebp
aaa
mov
dec
in
xor
loop
pop
or
mov
jmp
in
mov
addl
pushf
and
roll
andb
subb
pushf
xchg
jns
cmp
lods
cmp
sbb
insb
andl
mov
rcr
add
inc
incb
sti
sahf
cmp
pop
and
xchg
jg
dec
mov
ljmp
or
mov
in
mov
xchg
adc
adc
aas
sbb
xchg
dec
cmp
pop
out
inc
sub
test
ret
fadds
xchg
mov
sti
into
jmp
gs
lcall
sub
jle
jne
xchg
fcmovnu
insb
mov
pop
jmp
inc
mov
ficoml
int
lea
push
out
addr16
psrlq
cs
test
cmp
cwtl
push
daa
sbb
jmp
mov
inc
scas
and
std
jno
jne
xor
push
in
addr16
sub
or
dec
div
mov
adc
mov
cmp
icebp
loop
xor
jb
rclb
icebp
xor
pop
or
mov
or
mov
data16
jle
mov
push
inc
aaa
lea
daa
in
fwait
das
movsb
mov
popf
pminsw
stos
imul
add
mov
xchg
ss
mov
shrl
aam
add
mov
xchg
and
lods
outsb
cli
add
xor
arpl
arpl
movsl
sbb
in
out
mov
pop
cltd
imul
je
test
lods
jmp
sbb
mov
and
pop
or
adc
imul
xor
leave
repnz
rorl
leave
out
cmc
sbb
push
mov
test
or
aam
outsb
jl
sub
clc
cmp
hlt
or
inc
xor
xlat
outsl
or
fldt
lods
inc
xor
xor
cmpsl
mov
dec
lods
fwait
xor
lea
cmp
mov
stc
and
jp
cmc
add
add
enter
dec
adc
insl
sbb
std
xchg
adc
or
js
fwait
pop
sbb
dec
jnp
adc
mov
xchg
mov
fnstsw
mov
stos
adc
scas
sbb
push
sub
cmp
cli
mov
insl
jne
loop
jg
adc
pop
cmp
mov
or
pop
xchg
jo
cld
into
cmp
stc
lcall
and
repz
fnstsw
imul
adc
in
int
lods
xorl
fadds
sub
test
xor
mov
sub
push
fstpl
jmp
stc
popf
or
das
ds
and
inc
pop
mov
dec
mov
mov
xchg
ret
fdivrs
jp
cltd
fwait
insl
mov
sarb
xchg
inc
push
xchg
dec
inc
in
cmc
mov
dec
inc
popa
hlt
jnp
or
popa
mov
mov
xorb
mov
pop
dec
mov
cmp
loopne
and
mov
sub
mov
pop
xchg
mov
jo
and
test
adcb
dec
or
xchg
decl
ds
aaa
fwait
lret
iret
dec
jmp
mov
sti
pop
xor
push
and
imul
mov
pop
adc
inc
xlat
cltd
dec
mov
imul
xchg
and
dec
mov
add
push
frstor
stc
mov
adc
mov
mov
lahf
repz
test
xor
dec
sub
test
sbb
les
jecxz
adc
arpl
inc
into
in
add
jno
sbb
xchg
mov
xchg
push
dec
mov
pop
iret
int
mov
add
jg
jmp
ret
adc
arpl
rcrb
mov
fiaddl
out
loop
jmp
mov
lcall
sbb
cmp
xchg
stc
push
mov
mov
add
cwtl
and
jno
lock
and
xchg
imul
jae
movsb
inc
daa
adc
popw
xchg
out
popf
enter
jns
lahf
xchg
scas
inc
dec
out
xchg
aaa
sbb
lahf
inc
jb
and
loop
or
xor
ficoms
jns
adc
dec
out
pop
je
mov
arpl
or
dec
mov
xchg
sahf
sbb
push
bound
in
mov
adc
imul
in
cs
mov
sahf
or
jbe
js
xchg
enter
ds
jle
pop
xor
icebp
imul
addr16
cmp
sbb
pop
icebp
mov
jmp
sub
mov
push
add
pusha
cmpl
out
cmp
xchg
cmp
pop
inc
dec
call
xchg
lds
jge
mov
repz
push
xchg
dec
adc
xor
inc
les
xlat
shll
dec
sbb
jp
dec
jmp
jecxz
icebp
fisubl
fstl
rcll
dec
adc
push
enter
pop
push
call
dec
mov
push
push
cmc
fwait
fwait
je
rcrb
scas
rolb
data16
adc
dec
ret
jle
cld
lcall
insl
cmpsb
testb
clc
adc
test
add
or
js
mov
test
loope
add
sub
and
jbe
or
cmp
rol
xorps
outsb
xor
movsl
ja
or
fsubrs
ret
jl
push
out
into
imul
ja
mov
or
lcall
push
mov
shlb
mov
insl
mov
clc
sbb
test
imul
rorl
scas
inc
in
subl
mov
xor
cmpsl
xorb
pop
push
push
sub
ret
push
call
pop
xchg
and
push
emms
inc
outsb
outsl
xchg
cld
pop
mov
mov
jb
sbb
inc
lock
mov
lret
sbb
bound
jb
cmp
test
fstpl
mov
mov
in
in
dec
mov
in
xor
dec
jg
imul
and
lds
int3
mov
out
sub
fldt
mov
inc
mov
pushf
push
fwait
mov
insb
sbb
pop
or
sahf
jns
std
seto
outsl
pop
aaa
addr16
dec
imul
or
rol
lock
lret
sbb
fisubrs
sti
pop
and
not
fistl
lds
popf
mov
adc
mov
mov
jne
aas
mov
mov
inc
mov
daa
xor
mov
test
and
shll
sub
cmpl
mov
rorb
pushf
test
mulb
cmp
ja
xor
sub
pusha
fcmovb
pop
sub
jne
pop
bound
jno
xor
testb
mulb
in
pop
in
test
push
lock
dec
mov
ja
scas
mov
jl
ja
filds
ffree
lods
lods
add
dec
xor
xchg
add
jg
add
mov
sub
ja
leave
pop
sahf
inc
inc
scas
pop
fstpt
nop
sub
and
xchg
testl
xchg
loopne
negl
sbb
jne
sub
pop
lds
sub
and
inc
mov
rcrb
sub
daa
rcr
test
lret
push
pop
lea
jno
jle
hlt
xchg
add
lods
enter
pop
ret
popf
mov
hlt
and
scas
ljmp
pusha
mov
ret
sub
or
cmp
jl
es
repnz
xor
test
mov
jg
dec
adc
out
inc
jne
jp
inc
xor
pop
mov
ret
dec
xchg
pop
out
xchg
adc
testl
dec
or
or
jl
insl
lret
pop
popf
mov
stos
fnstenv
sbb
and
pop
xor
pushf
mov
das
loopne
cmpl
dec
into
push
bound
push
aaa
sbb
mov
cwtl
mov
or
scas
sbb
gs
jno
mov
call
es
xchg
int
cmp
cmp
iret
jae
hlt
mov
push
les
xchg
xchg
cmp
fidivs
mov
jo
dec
imull
cwtl
adcb
bnd
cmp
pusha
pusha
push
sub
repz
sub
mov
lea
sbb
xor
stc
xor
std
outsb
dec
pop
icebp
sub
push
mov
clc
outsb
sbb
mov
mov
addr16
sahf
jns
frstor
mov
jp
xor
outsl
jns
xor
mov
test
jp
push
jne
adc
fs
xchg
mov
mov
mov
xchg
daa
rolb
shl
ja
fadd
repnz
sbb
inc
cmc
cmpsl
jmp
test
pop
cld
in
adc
imul
xchg
lods
adc
push
push
jg
or
push
and
sarb
aas
enter
cmp
pop
or
adc
push
mov
jmp
sub
rolb
cwtl
xchg
fisttpll
icebp
add
push
adc
jecxz
mov
mov
xchg
push
das
mov
fnstenv
jnp
clc
add
rcll
xor
push
inc
test
sub
ss
jae
cmpsb
movsl
dec
pusha
jae
mov
pop
xor
dec
fildl
sarl
lock
test
cltd
mov
and
cmp
int3
mov
mov
xor
adc
movsb
mov
pop
cmp
sub
add
lock
xchg
dec
dec
mov
xchg
push
test
cmpsl
xchg
and
movb
mov
popf
imul
pop
dec
test
push
sub
xchg
xor
scas
jge
xchg
xor
sub
mov
scas
adc
pop
cmp
sti
xchg
fnstcw
and
jp
mov
jmp
mov
or
mov
push
movsb
hlt
push
jmp
xchg
inc
out
cwtl
jnp
or
cmp
lcall
rcr
adc
dec
repnz
into
dec
mov
jns
ja
clc
clc
pop
fcomip
pop
enter
imul
bound
jmp
inc
adc
mov
push
loopne
mov
movsb
add
xor
and
adc
cld
push
cmpsb
push
pop
mov
cmp
nop
xor
add
mov
fstpt
repnz
add
movsb
rclb
dec
cld
inc
jecxz
scas
sub
ret
enter
stos
pop
sbb
sbbl
in
ss
pop
jae
xchg
cmp
sub
mov
lret
ss
test
mov
div
inc
mov
out
mov
add
int
cmpsb
out
mov
and
int
mov
outsl
pop
mov
shlb
loope
out
mov
mov
add
test
adc
fldz
pusha
mov
inc
jge
test
inc
pop
jecxz
cmpsb
out
in
push
pop
loope
lods
lods
jmp
pop
shl
and
arpl
sub
aam
mov
lock
rcl
in
call
or
mov
xor
jmp
xor
cmp
lret
fs
outsl
pop
into
push
sbb
stos
jo
mov
push
aaa
or
xchg
xchg
in
rcll
cli
shll
outsb
jb
add
cmpsl
pop
dec
hlt
leave
jb
jp
xchg
inc
call
xchg
pushf
xor
out
jnp
fsts
fucomp
daa
dec
pop
inc
in
loope
mov
icebp
sub
mov
cwtl
movsl
or
sub
outsl
pop
and
out
ss
out
or
pop
loope
movsb
dec
inc
inc
dec
movhps
lock
lret
add
rcl
mov
leave
sub
xchg
outsb
mov
push
push
add
ficompl
cmp
adc
cmp
imul
enter
pop
outsb
dec
inc
inc
jne
int
sbb
std
scas
sub
dec
cmpsb
xchg
add
cwtl
mov
push
and
xchg
push
adc
aam
sahf
xlat
test
cmp
dec
pop
mov
das
sahf
inc
lods
out
or
push
test
pop
and
jnp
jae
aaa
and
out
loopne
inc
aam
mov
mov
adc
inc
fnstcw
xor
sbb
inc
mov
icebp
mov
out
xchg
sbb
dec
jp
sti
scas
xor
sbb
mov
inc
push
aad
mov
sub
push
incb
xchg
in
into
imul
arpl
repz
jo
xor
gs
in
decb
push
leave
cmp
push
mov
je
shlb
mov
shll
sbb
lock
mov
adc
inc
enter
fidivs
dec
jno
xchg
popa
add
ret
lods
mov
cli
sbb
cld
jmp
mov
or
clc
aaa
fbstp
jl
and
repz
jo
loopne
insb
push
shrb
dec
or
fcmovne
clc
cli
leave
sti
outsl
mov
sar
insl
repz
ljmp
inc
inc
and
sbb
int3
test
or
std
pusha
mov
popl
sbb
outsl
repz
mov
mov
or
jb
test
jge
cwtl
jp
xchg
int3
test
test
sti
xor
cmpsl
shlb
push
es
sahf
call
jge
and
xor
push
push
push
mull
rcl
stos
xchg
sbb
cmp
clc
je
cmpsb
push
leave
pop
cwtl
ret
sbb
adcl
mov
imul
outsb
jge
inc
dec
pop
xor
cmpsb
and
push
or
mov
rcll
in
shl
lahf
aaa
xor
or
rcr
insl
insl
or
inc
adc
jno
stc
push
outsb
mov
lods
lcall
pushf
loop
sti
jns
sbb
cmpsl
xchg
or
test
xchg
out
sub
xor
or
aas
push
in
cmp
leave
dec
stos
jp
jo
cmpsb
adc
xor
mov
nop
shlb
pop
popa
loopne
mov
and
lcall
lret
mov
mov
push
push
add
dec
inc
jb
adc
repz
out
enter
adc
pop
inc
cmp
extrq
xor
insb
push
or
test
int3
push
rcr
sub
bound
inc
or
repnz
outsl
xor
mov
out
cli
add
clc
loopne
adc
les
movsb
aad
push
in
repz
in
and
push
mov
aaa
or
mov
push
mov
xlat
dec
inc
cmp
nop
pop
test
mov
ja
in
maxps
dec
cmp
pop
fnstsw
push
subl
js
insl
insl
out
rolb
outsb
mov
divb
xchg
cmpsb
cmp
jmp
mov
out
mov
and
push
imul
push
pushf
pop
cwtl
lahf
loope
imul
cltd
int3
data16
xchg
adc
sub
lcall
out
cs
dec
xor
and
fisttps
lea
les
jp
arpl
xchg
repnz
ds
jmp
push
adc
push
test
outsl
push
enter
repnz
cmpsb
std
jge,pt
xor
imul
out
push
nop
sbb
ret
add
pop
sub
cmp
loope
shl
push
and
cmpsl
fildll
cltd
mov
outsl
insl
mov
mov
ret
xor
add
repnz
mov
cs
push
bound
inc
jbe
rcrb
mov
mov
mov
test
daa
loope
in
xor
les
mov
xor
inc
mov
sbb
fnstenv
pop
mov
pushf
inc
leave
ficomps
dec
dec
xor
or
lahf
cs
stos
cmp
adc
arpl
or
sarb
arpl
cmpsb
in
and
jmp
push
addr16
push
xchg
push
mov
leave
lock
cmpsb
pop
xchg
push
cwtl
in
jmp
call
adc
stos
mov
mov
adc
fwait
push
add
nop
in
test
icebp
cmpsl
jns
sub
outsb
sub
fisttpl
lahf
mov
in
sub
or
scas
jnp
mov
js
fwait
dec
divl
or
addr16
sti
push
test
or
repnz
shl
es
fisttpll
or
cmp
xchg
ds
ficomps
les
not
jmp
and
rcll
xlat
mov
loop
xchg
pop
stos
pop
imul
les
mov
and
dec
mov
xchg
ret
loop
jae
xor
dec
ljmp
cwtl
cwtl
xchg
mov
aas
lea
scas
add
stos
sbb
xor
adc
mov
out
and
or
adcl
pop
jl
mov
sub
ret
rcrb
popf
sbb
xor
pop
ljmp
push
aaa
repnz
das
punpckhwd
cmc
jbe
push
xchg
mov
xor
dec
adc
insb
adc
or
inc
push
sbb
aaa
imul
mov
jecxz
pop
jp
ds
ror
hlt
enter
lret
dec
lds
cmc
push
adc
jo
enter
and
shl
mov
in
sub
push
add
out
fisubrs
imul
mov
ljmp
repnz
inc
xor
mov
pop
frstor
dec
into
dec
cmpsb
cltd
add
in
rorb
movsl
shlb
shlb
insb
aad
xor
dec
add
xor
dec
enter
stos
in
cli
shr
test
xchg
fyl2x
cmp
in
stos
mov
pop
dec
scas
cmpl
inc
les
dec
adc
das
adc
cmpb
cmp
pushf
aam
daa
jae
lock
ljmp
mov
mov
popa
popf
imul
loope
repz
sahf
push
push
cmp
pop
fdivr
mov
cli
stos
dec
sbb
xchg
addr16
mov
fwait
sti
xchg
jmp
fstl
inc
dec
lahf
mov
or
lods
push
lock
push
subl
xor
inc
sbb
lahf
push
lods
stc
leave
shlb
sbb
adc
popf
sbb
push
loop
xor
lea
and
into
xchg
enter
dec
movsb
fistpll
pop
jmp
sub
lods
sahf
add
cltd
outsb
jl
test
adc
test
movsb
sbb
mov
xor
dec
jnp
mov
push
dec
aam
test
lock
hlt
insb
mov
or
sbb
sub
rcr
dec
nop
xor
jns
arpl
test
push
push
inc
sub
sub
bound
rcrb
shrl
xor
mov
dec
pop
adc
into
xchg
pop
xchg
jno
test
inc
dec
adc
push
xchg
sbb
mov
inc
xchg
xor
sbb
fiadds
cmc
insb
adc
adc
shrb
cmp
cld
pushf
das
dec
shlb
cmp
addr16
dec
cmpsl
pop
sti
addr16
dec
iret
out
xor
sbb
les
xchg
sbb
push
js
mov
jno
xchg
nop
iret
scas
sbb
cld
xchg
in
inc
jnp
daa
push
adc
pop
ljmp
xchg
popf
mov
push
xchg
mov
loopne
sub
pop
inc
push
lds
push
cltd
cwtl
mov
mov
nop
sub
xor
out
sub
adc
push
dec
mov
mov
inc
push
jo
xor
popa
xor
jne
ljmp
dec
mov
lea
xchg
scas
fwait
mov
lret
lahf
lret
gs
mov
sbb
xchg
repnz
out
lret
rolb
aam
decb
push
je
ret
cltd
inc
dec
icebp
stc
lock
mov
mov
jmp
mov
das
pop
xor
in
jns
push
jb
fsubr
jg
adc
xchg
loop
xchg
pop
lock
movsl
ja
pop
in
js
or
cli
mov
jbe
loope
sub
fisttps
jecxz
cmp
imulb
fsubr
pop
hlt
mov
xchg
insb
mov
lret
icebp
in
dec
shll
pop
mov
inc
inc
xor
lcall
loop
test
push
shll
lret
pop
add
jbe
jg
adc
clc
divb
cltd
sub
dec
les
movsl
add
aam
mov
bound
pushf
cmp
mov
sbb
sbbb
daa
dec
jae
inc
pop
lods
dec
pop
cmp
out
mov
xchg
xor
sbb
push
push
out
scas
xor
addr16
out
lret
sahf
scas
add
popf
push
fists
jle
insl
pop
and
cmp
mov
je
lcall
jns
adc
fists
aas
fidivrs
pusha
outsl
xchg
fcoms
ds
push
push
imul
divl
imulb
frstor
outsl
insb
dec
sarl
mov
push
aad
test
xor
xchg
lahf
and
jg
lret
out
fdiv
mov
je
and
scas
jl
push
pop
fmul
dec
mov
lahf
mov
mov
mov
lea
movsb
es
xor
andl
imul
jg
inc
dec
daa
lcall
repz
dec
cli
pop
fisttps
into
dec
xchg
mov
rclb
and
sahf
jle
inc
add
lock
mov
mov
adc
arpl
add
fsincos
adc
loopne
clc
outsb
jb
and
push
in
push
call
xor
dec
xlat
pushf
imul
aam
mov
outsl
mov
xchg
movsl
and
mov
fcomp
dec
fsubl
data16
xor
and
sub
addl
push
aam
notl
jne
push
or
mov
push
mov
mov
popa
dec
loopne
inc
push
not
xchg
ja
jae
jo
cwtl
sbb
test
push
popa
imul
mov
inc
mov
shlb
cld
xchg
call
push
add
inc
mov
push
test
cli
lcall
stc
push
fistps
nop
mov
xchg
shlb
hlt
outsb
nop
outsb
and
lds
adc
jno
clc
fld
xor
aad
cmp
mov
xchg
xchg
xchg
clc
inc
loopne
jne
and
pop
jo
sbb
cwtl
leave
cltd
imul
adc
je
leave
inc
lods
sub
dec
std
je
cmp
xchg
push
fstpt
jp
testb
test
ljmp
sbb
sub
inc
pop
mov
loope
lret
lods
xchg
xor
mov
das
pushf
dec
fdivrs
and
jae
scas
jge
insl
scas
jl
mov
in
das
loope
enter
fs
notb
stos
dec
fmuls
test
inc
and
pusha
add
cmp
sub
cmp
jmp
outsb
leave
sub
mov
mov
aas
cmpsb
sbb
inc
aaa
shlb
lea
test
scas
lds
mov
dec
bound
lock
jbe
stos
cli
adc
scas
sbb
dec
mov
mov
pop
or
xchg
jo
enter
out
mov
es
into
pop
jle
loope
or
inc
les
push
push
push
call
repnz
cmp
scas
leave
jg
pop
or
pop
cmp
and
push
std
fidivrl
fstpt
call
inc
enter
pop
test
mov
nop
cmpsl
into
into
js
aam
jp
push
pushf
arpl
call
fnop
push
jmp
push
xchg
inc
scas
sub
add
push
xchg
or
mov
out
xchg
mov
jle
add
stos
cmp
lahf
xor
scas
jns
mov
mov
sub
jle
aad
push
mov
shlb
leave
sub
jb
mov
lods
pop
sbb
cltd
loop
or
jge
iret
sub
rolb
mov
jo
dec
out
ljmp
jle
test
cmc
sahf
mov
push
mov
std
mov
mov
sub
sti
mov
mov
leave
addr16
inc
push
clc
add
xchg
xchg
xor
int3
xor
xor
jle
or
lret
aas
mov
rol
sbb
mov
fiaddl
jg
test
dec
mov
cmpsl
dec
adc
mov
decb
cmp
aam
cli
sbb
je
pop
popf
jb
int
xchg
push
rcrl
leave
push
decl
pop
push
pushf
gs
fstps
iret
ds
jecxz
cltd
les
cld
cwtl
xchg
xchg
mov
xor
int3
enter
mov
jne
scas
xor
dec
jae
aad
daa
inc
xchg
aad
cmpb
lock
jl
xchg
adc
fsubrl
mov
cmp
add
fwait
cli
dec
dec
push
sbbb
mov
pop
enter
out
or
inc
jno
cmp
nop
sti
cmpsb
sbb
pop
loop
adc
je
enter
pop
ret
fldenv
sub
dec
out
lret
das
jecxz
sbb
or
sub
inc
insb
inc
loope
add
test
imul
mov
cmpsl
cmp
dec
inc
mov
repz
add
push
mov
jmp
mov
jbe
adcb
fnstenv
inc
loop
adc
mov
xor
pop
inc
into
out
mov
xor
sbb
ret
jno
mov
pop
push
jl
sbb
or
mov
mov
push
mov
filds
cmp
jne
push
inc
movsl
inc
push
jge
cmp
lods
xchg
aas
lret
push
int
mov
mov
pop
jl
pop
not
cmp
ret
cmp
outsl
pushf
mov
dec
les
push
inc
pop
data16
insl
mov
mov
mov
and
lods
lods
repnz
imull
gs
lret
shll
cmp
lock
or
xor
xchg
outsl
nop
or
push
jne
fwait
and
adc
lret
adc
js
repz
ret
loope
iret
cmpsb
dec
push
sub
add
inc
jo
stos
jb
ret
mov
lahf
das
sbb
cld
lcall
inc
or
pop
insb
cmc
imul
popa
adc
movsl
cmp
jge
mov
sarb
sub
xor
notb
out
inc
in
enter
std
scas
into
xor
and
addr16
add
js
cmpsb
inc
mov
mov
lret
nop
adc
jmp
movl
inc
jno
inc
cmp
mov
jle
jge
xchg
enter
xchg
jae
popa
inc
ja
imul
addr16
aam
sti
lds
bound
mov
mov
mov
xchg
pop
outsb
les
cmp
xchg
mov
sarl
int
mov
xchg
cltd
popf
mov
fsts
add
cmp
scas
iret
jge
fnstenv
nop
mov
mov
add
dec
adc
push
xor
adc
std
loopne,pn
fwait
test
push
xlat
aas
adc
mov
shrb
inc
mov
inc
xchg
sub
adc
aam
sahf
imul
addr16
int3
mov
jo
cmp
arpl
jmp
push
out
dec
pop
stc
xor
dec
insl
dec
mov
cmpsl
movsb
adc
fwait
jae
jmp
loop
mov
rolb
shl
xchg
cmp
mov
jae
inc
xor
mov
in
push
mov
mov
inc
or
aas
sub
popf
cwtl
pop
in
int
stc
or
xor
out
ret
out
cmp
das
jge
xor
xchg
fstl
ror
xchg
push
sub
and
stos
loope
out
in
sbb
or
dec
shrl
outsb
xor
das
sti
scas
int
sti
or
orb
imul
and
inc
cmpsl
rorl
scas
sub
push
sbb
lods
pop
jmp
inc
push
cmp
dec
int
in
inc
mulb
popf
xchg
inc
iret
mov
pop
out
movsb
jne
nop
jge
in
outsl
je
inc
es
leave
inc
fimull
loopne
push
inc
loop
enter
lcall
jmp
icebp
movsb
sub
adc
pop
dec
fs
loopne
xchg
inc
arpl
int3
out
jae
mov
sahf
jecxz
inc
lock
dec
mov
jl
and
mov
stos
test
ret
push
sbbl
les
fistps
fisubrl
daa
sarb
insl
mov
sub
in
rcll
in
in
jo
lahf
je
adc
inc
mov
xor
fs
repnz
insl
or
lahf
test
or
xchg
inc
push
lret
imul
fs
loop
or
inc
rol
mov
xor
stc
mov
rcll
sbb
mov
dec
push
out
movl
dec
jmp
dec
mov
repnz
nop
xchg
popf
push
mov
stc
cmpsb
sbb
cmpsl
iret
fnsave
je
in
pop
roll
js
push
pop
pop
shlb
out
hlt
out
fs
push
sub
in
xchg
test
das
jecxz
mov
es
outsb
rcrb
addb
adc
xlat
fs
shrb
mov
xor
test
fcoml
fidivrs
stos
xor
test
dec
add
das
inc
adc
push
cmc
push
push
or
jmp
sarb
or
push
aaa
fstl
and
push
flds
pushf
xchg
and
lret
push
aaa
fs
xor
mov
ret
movsl
and
cld
xchg
ret
and
mov
mov
xor
add
dec
add
js
and
aam
inc
scas
or
xor
pushf
sbb
xor
add
mov
add
pop
mov
cmp
add
mov
fidivrl
stos
sbb
xchg
or
pop
pop
js
fiaddl
adc
rcll
and
iret
mov
aas
push
ds
loopne
shll
pusha
sub
push
stc
cmpsb
loopne
mov
or
aam
jns
mov
int
jnp
mov
ja
lds
pusha
adc
push
xor
adc
loope
pop
adc
aad
xchg
mov
or
xor
ljmp
orl
sub
jge
icebp
sub
aaa
ljmp
and
jecxz
jno
sub
pop
lods
cltd
fcmovne
cmpsl
and
jge
dec
mov
push
nop
lcall
in
insb
ja
push
inc
xchg
sub
dec
fidivrs
push
pop
mov
scas
pop
mov
out
mov
dec
dec
jmp
pop
scas
add
jnp
mov
mov
dec
jg
sbb
andb
roll
icebp
cmp
jo
idivl
or
fwait
ret
je
cltd
mov
jmp
test
push
inc
mov
mov
icebp
cmp
loopne
movsl
xchg
jle
xor
push
adc
and
push
push
cmp
ja,pn
loopne
sbb
mov
add
mov
push
mov
adc
testb
cmpsb
rol
dec
jmp
mov
mov
int
jne
sbb
mov
shll
cmp
daa
push
add
pop
pop
xor
sbb
dec
mov
shll
std
adc
shll
xor
pop
dec
xor
push
jg
push
sbb
call
mov
cmc
mov
mov
mov
push
inc
mov
add
push
into
pusha
dec
data16
outsl
repz
dec
ret
aas
mov
aam
jl
fildl
pop
sbb
shrb
sbb
xlat
inc
xchg
int3
cmp
sub
outsl
jg
pop
jmp
sbb
jno
mov
jl
out
jnp
pop
inc
mov
out
jbe
mov
pop
ss
dec
cmc
fstps
xchg
ret
adcl
ret
in
scas
gs
push
sub
or
xchg
out
dec
stc
cmpsb
mov
xchg
dec
jg
rcrb
leave
neg
mov
and
mov
dec
fs
pop
out
mov
mov
inc
ds
into
cmp
pop
repz
push
sub
enter
pop
and
les
outsb
mov
push
jge
mov
dec
xchg
xor
or
mov
sbb
jnp
cmp
addr16
inc
fists
inc
ds
mov
pop
bound
adc
or
mov
das
lds
lahf
pop
mov
pop
mov
clc
ja
or
or
add
mov
out
jnp
or
jge
inc
adc
lock
mov
pop
inc
add
mull
xor
cmc
sbb
pop
pop
stc
xlat
iret
movnti
lods
mov
lods
push
mov
pop
or
sub
cmpsl
pop
dec
rorb
push
negl
hlt
es
add
inc
cwtl
jle
shl
clc
push
and
sub
inc
ja
aad
into
xchg
negl
push
clc
stc
lcall
movsl
lcall
cmp
dec
cwtl
imul
in
sti
cmp
mov
sbb
cwtl
sub
mov
data16
mov
mov
xchg
outsl
jg
add
das
stos
daa
js
adc
adc
loop
ds
fldl
adc
push
cmp
sti
dec
sub
and
cwtl
mov
dec
imul
xor
push
rorb
je
add
mov
cltd
cmp
jg
add
nopw
popf
jg
dec
test
cld
stos
dec
in
jno
cld
or
sti
out
sbbl
pushf
cmp
mov
in
fimuls
mov
stos
mov
add
add
and
mov
insl
or
imul
xchg
mov
jb
adc
pop
xor
add
inc
xchg
fsubs
adc
jnp
mov
std
cmp
les
out
adcl
and
cmp
roll
lahf
jl
adc
repnz
clc
sbb
mov
inc
dec
jns
gs
cmpsl
cld
inc
lret
and
dec
adc
into
mov
pop
or
shl
scas
out
mov
xchg
int
mov
imul
sarb
adc
push
ds
cld
push
add
mov
nop
push
popl
xchg
scas
cmpl
push
mov
adc
fwait
mov
sbb
daa
sub
mov
lock
dec
das
push
mov
jbe
push
mov
dec
mov
mov
jnp
insb
cmc
fcoml
int3
clc
mov
shll
or
jle
inc
fimull
jp
fnstsw
xchg
inc
mov
cmc
mov
sub
cvtps2pi
mov
xchg
xlat
xlat
or
mov
mov
cmp
jnp
addl
mov
or
and
adcl
test
pop
sti
inc
or
ss
pop
xlat
sub
pop
imul
das
pushf
movsl
adc
sbb
sbb
cwtl
add
call
inc
push
add
int
jp
mov
jg
xchg
and
xorb
inc
loop
iret
mov
mov
and
test
nop
loope
or
mov
xchg
aam
cmp
jle
daa
adc
lret
loop
xor
lods
or
hlt
popf
scas
push
mov
bnd
frstor
push
addr16
out
adc
xchg
sub
movsl
js
int
sbb
push
out
xchg
adc
pop
push
scas
xchg
fsubl
mov
dec
xchg
jns
ret
lods
insb
pop
cmpsl
data16
dec
inc
popf
arpl
dec
fadds
mov
pushf
dec
dec
addl
movsl
mov
ret
mov
jecxz
sbb
outsb
lret
jbe
cmp
add
mov
fs
pusha
test
rcrb
jb
fidivrl
pop
dec
rolb
jl
jg
fs
out
call
lea
cmpb
pop
pop
and
add
pop
sbb
cmp
shlb
mov
mov
cltd
inc
pusha
xlat
lock
pop
stos
les
xor
cmpb
clc
mov
mov
dec
xorl
mull
cmp
loop
test
bt
sysret
popf
dec
mov
sarb
mov
mov
fcoml
std
sub
inc
jp
xchg
into
mov
pop
stos
cmp
sub
addb
fcomps
jb
mov
xchg
stos
pop
xchg
in
sbb
add
sbb
outsb
or
enter
inc
push
dec
test
or
adcl
enter
cmp
xor
jp
loopne
or
ss
pop
mov
add
xorl
inc
inc
xor
cmp
icebp
jo
jle
push
lods
jae
or
das
dec
rcl
jnp
push
push
mov
ficomps
pop
or
pushf
popf
test
daa
es
or
cpuid
nop
push
call
insb
dec
inc
insb
stos
daa
mov
rcll
pop
mov
mov
sti
aaa
lds
aaa
xor
pop
mov
adc
add
push
les
sub
xbegin
push
xor
hlt
loope
pop
pop
imul
mov
inc
fldt
std
in
sub
dec
or
es
scas
mov
out
and
cmc
sbb
xchg
xchg
mov
test
mov
insb
push
xor
movl
aam
shrl
insl
inc
push
cmp
jno
insb
outsl
insb
nop
cltd
js
pop
test
int
stos
inc
pop
or
sbbl
mov
fdivrs
cmp
xchg
push
lods
adc
add
xor
aaa
imul
mov
sahf
ret
mov
ds
and
and
mov
icebp
or
pop
pop
loopew
sub
ss
test
xchg
mov
pop
int3
shl
inc
adc
movsb
popa
jb
push
mov
test
hlt
ret
sar
mov
pop
sbb
out
sub
push
or
or
das
rorb
cmc
push
sub
test
and
ss
lret
js
mov
pop
es
movsb
add
jns
mov
leave
and
imul
fstl
xlat
ljmp
jb
pop
cli
mov
ljmp
fucomip
movsb
sti
outsb
dec
sahf
lds
fistps
outsl
into
mov
cld
negb
loope
xor
pop
sbb
mov
pop
mov
add
ljmp
int
cmp
mov
xchg
inc
testl
inc
insb
or
xor
xchg
jne
inc
lahf
nop
mov
lahf
cli
adc
loope
inc
push
cmc
and
or
cmpsb
and
cmp
std
jo
xchg
xor
jmp
lahf
mov
js
sbb
imulb
add
mov
ds
stos
cmpsl
mov
or
test
cmpb
mov
lods
pop
inc
sub
call
xchg
push
ficompl
mov
lds
test
inc
lds
or
cmc
jbe
jmp
insl
push
adc
xchg
jge
int3
loope
cmpl
cmc
push
xchg
imul
hlt
pop
inc
cmp
inc
addr16
add
mov
jmp
sbb
sahf
add
and
js
jnp
mov
lds
and
and
test
push
add
clc
into
sub
xchg
mov
mov
cmc
cmp
out
fmul
jmp
icebp
jno
cmp
loop
xchg
jne
ret
imul
mov
mov
ret
aad
cmc
push
mov
sbb
jecxz
shrl
push
or
sbb
aad
fcompl
cmp
out
adc
adc
pushf
mov
mov
xor
out
call
sbb
xor
incb
enter
aas
sub
enter
adc
and
mov
stos
lret
push
inc
rcr
pop
hlt
mov
popa
mov
scas
rclb
loope
jg
xlat
inc
leave
sbb
dec
mov
sbb
cli
int
push
movsl
lods
test
test
aad
sbb
mov
adc
fisubrs
or
scas
mov
mov
arpl
sbb
arpl
notl
mov
test
std
and
add
dec
inc
out
push
pop
jmp
xor
fisubrl
loop
adc
enter
xor
dec
xchg
sbb
ja
hlt
xchg
mov
mov
push
aam
jmp
shlb
add
dec
push
pop
inc
jg
outsb
mov
adc
sbb
adcb
and
pop
out
ljmp
outsl
es
push
sub
jle
fldl
inc
pushf
mov
lock
and
dec
dec
out
mov
and
inc
push
movsw
pop
pop
cwtl
shlb
jge
or
popa
outsb
insl
imul
dec
mov
push
imul
pop
and
jne
movb
mov
pop
daa
pop
push
ss
or
jb
xchg
fdivl
pop
xchg
stos
push
rcl
arpl
pusha
cwtl
push
out
inc
shll
mov
add
mov
xor
fisubl
call
cwtl
ljmp
in
push
add
cmp
or
imul
es
scas
rclb
cmp
jns
mov
popf
es
popf
jecxz
in
sub
xor
popa
push
jne
outsl
aad
xchg
sub
std
nop
xor
or
int3
inc
cwtl
jo
in
xchg
lret
or
pop
stc
pop
sub
ljmp
cld
jecxz
leave
sbb
mov
mov
cmp
in
dec
add
rclb
rcl
decl
inc
dec
add
int
push
data16
lods
fsubrs
loopne
pop
xchg
mov
jns
pop
mov
pop
mov
fstl
jno
loope
pop
inc
adc
stc
push
pop
dec
mov
stc
sbb
jbe
xor
mov
sahf
popl
jbe
push
push
mov
std
dec
pop
or
fs
add
lahf
std
enter
sbb
lock
in
cmp
or
and
cmp
in
add
lret
dec
xor
xorl
jbe
es
cmpsb
xor
bound
cmp
mov
ljmp
adc
in
adc
adc
nop
std
mov
sub
es
lods
inc
cmp
push
mov
popf
movsl
cmp
fstl
add
fldenv
jmp
mov
loop
lahf
jne
dec
jecxz
inc
adc
js
mov
inc
mov
test
push
fbld
dec
js
nop
mov
js
dec
insl
jmp
and
adc
cwtl
sub
je
jns
ds
mov
pop
mov
stc
lods
jecxz
sub
rorb
mov
inc
or
push
negb
out
fists
inc
dec
fisubs
mov
xor
loop
adc
insb
ja
sub
aas
cltd
dec
xchg
aad
lcall
sub
iret
outsb
or
cwtl
push
gs
mov
sub
dec
cmp
jmp
mov
xor
jmp
mov
jbe
jmp
lret
xchg
add
pop
dec
imull
jo
loope
neg
in
xlat
in
xchg
adc
xchg
xor
push
bound
pop
std
lret
inc
fld1
mov
jl
lea
mov
xchg
mov
scas
popf
fwait
gs
sbb
push
insl
fisttpll
in
sarb
in
sub
mov
jg
adc
add
mov
imul
ljmp
mov
scas
je
dec
and
or
es
outsl
lods
int3
push
push
mov
lods
jmp
add
mov
cs
mov
pop
orb
loopne
xor
cli
push
stos
insb
adcb
cmc
mov
jmp
add
mov
in
je
jg,pt
dec
int
sub
push
adc
fisttps
outsl
fisttpl
pop
sub
cltd
fadds
loopne
push
mov
jle
jae
adc
test
sbb
xchg
jp
add
cld
out
js
mov
outsl
sbb
pop
xchg
lret
lods
xor
out
into
ljmp
xchg
adc
add
arpl
push
and
mov
bound
pop
sub
rcl
xor
cmpsb
ret
lea
pop
mov
sub
fimuls
xchg
mov
mov
rolb
xor
pushf
movsl
test
mov
xchg
into
mov
les
in
xorl
jecxz
xchg
mov
ret
add
mov
cmp
sbb
dec
or
pop
mov
add
jae
mov
xchg
in
gs
lcall
ss
dec
gs
aas
fldl
push
fwait
imul
aaa
hlt
in
and
and
std
xor
arpl
lods
sahf
xchg
cmp
pop
loop
sbb
jnp
test
add
push
testb
jns
jne
xchg
and
jg
pop
insl
mov
sbb
mull
fwait
lret
cmp
scas
mov
aas
xor
sahf
stos
loopne
rol
adc
push
pop
inc
scas
outsb
jno
sub
std
pop
add
mov
pop
or
out
or
mov
adc
sarb
add
xchg
int
push
sub
sub
aas
data16
or
aad
jle
fsubl
jo
jmp
test
fsubr
pop
rcl
scas
fcmovnu
inc
out
mov
dec
xor
xorl
mov
mov
jge
push
mov
movsb
cwtl
out
addr16
inc
sub
sarb
int
and
in
and
imul
mov
jmp
pop
pusha
inc
shrb
sub
push
in
lds
mov
push
xchg
out
lock
mov
cmp
mov
mov
les
mov
and
stos
pop
pop
dec
cld
jle
cmp
lods
insb
repz
xlat
dec
adc
cld
dec
loopne
and
in
jnp
mov
xor
ja
int
cmpsl
add
cmp
jg
cmp
xchg
lcall
sub
adc
cmp
xchg
cs
mov
subl
scas
mov
fmuls
sbb
jns
jp
icebp
in
gs
jge
es
pushf
add
iret
fildl
sbb
add
mov
xchg
push
xchg
fstps
adc
cmp
pop
pop
or
and
fisttps
popf
ret
or
out
mov
mov
lods
and
jl
les
and
cmp
decb
sbb
sub
movsb
jne
out
decl
adc
repz
sub
xor
filds
or
xchg
jmp
scas
mov
mov
js
add
jns
dec
hlt
pushf
mov
fcmovne
ljmp
mov
pop
loope
adc
fs
mov
dec
fs
mov
pop
lret
push
aas
loope
inc
jns
ret
or
lahf
and
aaa
pop
and
xor
xchg
pop
sbb
sbb
inc
push
adc
jecxz
jecxz
jle
les
pop
in
je
mov
xchg
xchg
sbb
inc
sti
stos
call
ficoml
out
cmp
scas
ds
out
inc
mov
and
push
or
sub
icebp
and
push
cmpb
ds
cmp
jae
dec
in
ret
ds
mov
fadds
sbb
xacquire
daa
cli
cmp
sub
imul
addr16
sbb
and
stos
pop
jae
icebp
mov
bound
ja
push
jnp
or
xchg
repz
mov
push
push
sub
push
loop
push
out
push
and
xchg
out
xchg
mov
and
cld
orb
pop
xchg
adc
out
negb
mov
test
into
cmp
jo,pn
rol
in
out
out
xorb
inc
clc
xor
jecxz
rorl
adc
std
adc
mov
fcmovbe
test
xor
dec
add
and
addr16
iret
add
sarw
xchg
faddl
push
cmp
shrb
adc
mov
mov
or
fidivl
pop
inc
je
add
add
xor
xor
xor
outsb
adc
adc
pop
int3
mov
xchg
in
cwtl
insb
cmp
cmp
pop
add
cmp
insb
mov
mov
or
shlb
sub
or
mov
outsl
call
sahf
add
pusha
push
aad
popa
lods
aas
pop
orl
cmp
fdivp
mov
push
dec
mulb
jmp
and
pushf
xor
cmp
inc
mov
fbstp
in
xor
mov
dec
movsl
jae
js
aam
leave
shl
mov
in
jbe
and
mov
ret
dec
adc
loopne
sbb
sub
push
mov
aad
pop
and
pushf
rcll
or
scas
pop
nop
out
push
dec
std
jmp
fisttpl
xchg
pop
mov
or
lods
adc
adc
lea
xchg
mov
test
sahf
fidivrs
push
xchg
and
pop
rcll
push
push
lcall
out
enter
pop
hlt
add
xor
mov
pop
cmp
pop
mov
pop
shll
jno
sub
add
mov
subl
mov
aas
rorl
jg
and
jmp
aad
lret
ja
adc
shrl
push
and
cmpb
push
xchg
rcll
cld
or
push
rorb
enter
ljmp
daa
lods
fwait
adc
pop
dec
jl
mov
cmp
shll
xlat
push
insb
cmpsl
xchg
iret
lret
lret
mov
shll
xchg
pop
push
pop
negb
pushf
je
jno
inc
push
push
fiadds
cmp
and
xor
repnz
les
loop
lret
mov
jae
xor
mov
pop
sub
scas
icebp
dec
fadds
pop
pop
sbb
aad
imul
icebp
lods
mov
loopne
and
pop
ret
loope
mov
sbb
and
adc
in
mov
push
stos
xchg
sub
cmpb
add
mov
dec
jo
int
sbb
mov
faddl
mov
scas
mov
cmp
aad
push
jo
xorl
ja
insb
xchg
ret
repnz
mov
adc
hlt
pop
cmp
mov
lret
lret
call
popa
ret
mov
je
dec
fstl
jmp
inc
push
in
pusha
xchg
aad
outsl
mov
imul
xor
sub
lcall
inc
or
adc
sub
idivb
sub
movsl
xlat
cli
push
jo
xor
xchg
outsl
mov
xor
loopne
fistpll
mov
call
add
es
sti
pop
mov
sub
and
push
and
int3
mov
mov
push
cmp
push
in
or
sub
data16
movsb
subl
mov
test
pop
cmp
inc
repnz
xor
int
and
push
pop
mov
rcl
ret
leave
loop
test
cmpb
inc
mov
dec
jl
xchg
scas
xor
imul
stos
mov
cmp
mov
rcrb
jno
ficompl
mov
xchg
repz
adc
mov
aam
and
sub
out
pop
cwtl
or
das
lods
sbb
mov
divb
dec
jge
lds
mov
in
rcr
enter
negl
sti
std
mov
hlt
push
stos
jge
enter
xor
stc
out
xchg
mov
sub
dec
ret
lahf
sbb
int3
js
xchg
mov
xchg
mov
pop
popa
cs
dec
push
jns
add
lods
jl
jl
cmp
outsl
push
test
dec
or
aam
mov
clc
mov
push
jne
les
mov
mov
inc
mov
cmp
insl
inc
pop
cmc
mov
pop
adc
inc
je
push
or
sahf
loope
xchg
mov
hlt
pop
cmp
ret
or
je
xchg
inc
and
leave
imul
lret
aad
inc
cltd
mov
rorb
dec
jbe
and
movb
inc
gs
in
cli
enter
dec
ja
out
cmp
xchg
or
aad
cmp
iret
xlat
xor
shl
jbe
lret
mov
insl
mov
movsb
pop
test
cli
pop
or
fadds
adc
inc
stos
lock
push
adc
xchg
mov
xchg
mov
jne
into
test
jns
mov
cmp
cld
cmpsl
mov
int
sub
or
int
pop
cli
or
das
inc
xor
fimull
lock
xchg
pop
xchg
adc
jnp
mov
xchg
sbb
cli
xlat
inc
hlt
jg
jo
repz
pcmpgtb
mov
shlb
imul
ret
stc
ficoms
outsb
test
sbb
pop
add
loop
push
inc
and
jle
sbb
dec
push
insl
jbe
jl
popf
leave
and
jb
aad
jecxz
divl
daa
fimuls
ret
das
nop
pusha
fcoml
or
lds
rcrb
sub
lock
and
gs
imul
outsl
stc
jp
fisttpll
test
or
sub
mov
repz
test
add
fdivrs
repz
imul
xor
and
add
movsl
cs
and
movsl
pop
adc
add
push
sbb
pusha
stos
push
pushf
orl
cwtl
cld
fisttpl
cmpsb
jg
in
pusha
xchg
sbb
mov
mov
inc
aaa
add
sbb
aas
popa
sub
adc
les
dec
into
int
nop
xchg
mov
jg
pop
in
sbb
jge
stos
dec
xor
lret
movsl
mov
ja
xor
iret
cmpsl
lret
nop
push
xor
pop
insb
mov
sbb
pop
icebp
mov
filds
add
lock
push
cs
paddd
in
iret
pushf
into
pop
aas
adc
fnstenv
push
das
xchg
push
sub
dec
sub
test
push
lods
mov
mov
ljmp
push
shlb
movsl
enter
cmp
popa
loop
xor
jae
and
and
push
or
orl
icebp
xor
or
jo
add
outsl
insb
ret
daa
es
adc
add
sbb
movsb
dec
pop
jge
inc
xchg
jnp
push
stos
push
aas
loope
dec
jmp
rcrl
jl
das
sbb
insl
jle
out
pop
or
test
pop
or
fnstenv
inc
and
add
inc
fdivs
into
lret
xlat
ficoml
call
stc
cmc
adc
inc
loop
popf
je
and
sti
out
sarb
jg
jns
xor
xor
nop
lods
jmp
out
adcb
pop
xor
xor
in
aad
aas
in
cmpsl
aam
cltd
mov
leave
xchg
mov
rcl
testb
mov
es
jmp
daa
cld
dec
and
mov
jmp
jnp
test
and
enter
inc
xchg
cmc
mov
loope
repnz
fnsave
or
pop
shl
mov
sub
aas
out
sbb
push
jnp
and
test
loop
out
xor
shlb
jno
pop
call
loopne
mov
jecxz
inc
scas
lock
mov
pop
push
ret
notb
mov
les
jmp
sbbl
mov
loop
incl
stc
hlt
loop
test
or
negb
cli
rcrb
sub
sbb
inc
sbb
pop
inc
bound
inc
test
pop
or
test
mov
cltd
cmp
rorl
mov
divb
jno
xchg
xchg
out
shll
and
push
imul
xor
test
push
push
pop
xlat
mov
cmp
or
je
or
lret
fisubrs
aad
repz
or
lret
jbe
mov
mov
push
cltd
mov
dec
jmp
shll
sbb
es
cld
jg
into
pop
jb
shll
cld
sbb
add
or
xchg
mov
cld
rcl
sbb
repnz
add
clc
mov
xchg
ret
mov
stos
inc
dec
jmp
jl
or
jle
pop
test
repnz
jo
inc
lcall
push
dec
out
jmp
push
dec
inc
subb
push
push
dec
fisubl
cmp
mov
push
lods
xor
test
imul
sbb
pushf
mov
ret
sub
push
and
xchg
rcrl
add
mov
outsb
adc
inc
lret
xor
cmp
xchg
pop
inc
or
roll
sbb
into
cs
mov
movsb
pop
inc
ss
test
xchg
scas
ret
xor
xor
mov
and
mov
push
jge
xchg
or
rolb
fstps
shlb
in
push
jp
dec
movsb
sbb
orb
or
jmp
sbb
into
arpl
test
test
call
ljmp
cli
filds
pop
loopne
xorl
mov
cltd
popa
cmc
inc
lock
icebp
or
and
jns
test
mov
dec
jns
and
sub
aad
shll
xor
test
gs
dec
js
xor
movsb
or
push
jb
enter
or
out
rolb
sub
dec
je
jecxz
sbb
xchg
push
pop
fldt
scas
xchg
movsl
adc
push
into
mov
mov
pop
stos
add
pop
dec
mov
int
mov
jne
cwtl
mov
enter
cwtl
push
jae
and
dec
mov
lds
pop
rorb
mov
das
mov
or
in
mov
adc
outsl
stos
shl
aam
jge
xor
dec
push
inc
out
pop
push
in
scas
clc
pop
push
sahf
sahf
movsb
dec
xor
xchg
cmp
or
shl
ss
xlat
int3
pop
filds
test
je
dec
mov
outsl
repnz
cmp
push
jb
lahf
clc
mov
mov
dec
aam
hlt
cmp
int3
push
jp
push
adc
mov
into
or
xchg
rcrl
movsl
pop
fstpt
jle
mov
mov
pop
ret
or
popf
add
adc
mov
or
and
lcall
xor
addl
push
popf
roll
imul
add
daa
clc
sub
and
sbb
sub
popl
fimuls
loope
popf
cmp
push
in
rcr
jns
jmp
je
stos
jmp
add
fildll
mov
jl
fstpt
sbb
xchg
les
dec
pusha
loopne
aas
popa
ret
push
mov
aad
cwtl
enter
clc
mov
scas
push
in
lds
subl
into
dec
mov
mov
xor
imul
in
pop
dec
push
jle
xchg
out
sub
mov
mov
push
mov
lods
popf
jmp
popl
or
lods
cli
cwtl
std
into
inc
cld
cltd
jp
xchg
popa
jne
ret
mov
mov
jmp
aad
stc
adc
imul
mov
dec
mov
cmp
jmp
xlat
stc
out
das
cmpsl
fadds
dec
add
lcall
ret
scas
mov
ljmp
jle
add
aad
mov
jo
shlb
or
push
rclb
cmp
nop
pop
pop
jmp
push
xchg
fwait
push
xchg
cmpsb
das
imul
jno
lds
jns
in
mov
xchg
dec
inc
ds
out
xchg
xchg
push
and
jbe
lods
push
dec
and
xchg
xchg
aaa
cmp
xor
movsb
imul
movsl
gs
popa
gs
sbb
add
xor
mov
std
mov
inc
xor
lcall
dec
ss
xlat
int
sbb
sbb
mov
xchg
rcrb
test
mov
stos
jo
mov
dec
jae
pop
push
jo
jb
pushf
inc
outsb
or
clc
push
sbbb
add
xchg
mov
cli
subb
adc
push
in
add
jmp
jp
aas
out
ljmp
jo
shr
xchg
inc
imul
xchg
xchg
popf
sar
inc
xchg
cmc
cli
dec
addr16
inc
sub
arpl
pop
dec
adc
dec
lea
jo
or
test
xchg
xor
iret
xlat
mov
mov
pop
lea
push
popf
movsl
jg
es
sbb
add
repnz
out
or
cmpsb
sub
sub
out
jnp
aas
jnp
cmp
cli
mov
pop
movsl
insl
hlt
fldcw
icebp
jmp
hlt
cmp
cmp
inc
aam
das
paddusw
jp
dec
fnstenv
cmp
mov
push
inc
fcomip
lret
dec
pop
and
mov
sti
lret
jbe
jp
add
and
mov
shrl
in
xor
rorl
das
xcrypt-ctr
cmpsl
pop
fstl
dec
mov
and
test
outsl
push
nop
pop
xchg
insb
cld
jmp
mov
cmc
xchg
test
and
pop
jle
stos
xor
push
mov
fbld
mov
mov
int3
scas
sbb
mov
add
mov
and
testl
cld
adc
stos
jl
jge
fsubs
fsubs
push
test
ja
insb
iret
jae
rorb
ja
dec
xchg
das
push
les
jmp
push
dec
shll
out
test
mov
out
xchg
xchg
inc
pop
ds
push
push
mov
xor
mov
push
cmpsb
mov
int3
xchg
call
mov
pop
outsl
cmc
push
mov
in
testb
fwait
pushf
sbb
mov
mov
mov
aam
push
sbb
idivb
cmpsb
inc
int3
cwtl
add
shl
sahf
push
shrl
lret
pushf
cmp
jae
and
add
mov
push
aad
test
fbstp
xchg
push
inc
aaa
shlb
aam
int
mov
xor
add
bound
lcall
in
into
mov
inc
nop
sbb
pop
popa
popf
add
addr16
cli
jno
adc
xchg
push
movsb
addr16
outsb
dec
lds
subb
stos
iret
out
xchg
xor
cmp
call
or
std
cmpsb
call
push
mov
mov
add
adcl
xchg
scas
pop
icebp
mov
out
icebp
mov
out
icebp
mov
shlb
divb
push
push
or
xor
inc
mov
out
out
popa
push
movsl
std
cmp
aad
outsl
movsb
push
cmp
and
fs
dec
mov
scas
mov
sub
mov
out
enter
mov
ljmp
rcr
rcr
aaa
mov
cmp
iret
stos
mov
inc
adc
repz
in
repz
es
xchg
test
inc
lods
xchg
push
jge
repnz
push
lahf
jp
jecxz
jae
inc
dec
adc
mov
jnp
scas
into
mov
into
lds
leave
fildl
cmpsl
call
outsl
cld
xchg
addr16
xchg
or
daa
xchg
jae
pop
mov
fwait
lahf
stos
push
cmp
and
add
std
push
xchg
xor
scas
insl
dec
ljmp
imul
sti
push
push
xor
scas
fisubrs
cmp
addr16
lcall
cmp
jp
push
cmpsl
insl
sbb
jl
int
xchg
cmp
dec
mov
inc
aam
xor
inc
fcmovbe
ja
stos
fs
sbb
add
sub
mov
mov
addr16
cwtl
insl
lret
push
fimull
mov
adc
mov
xor
stc
lock
push
ret
cmpsl
int3
cmpsb
jg
popa
add
dec
mov
lea
pop
jp
pop
orl
hlt
fdivr
jo
dec
push
icebp
dec
xor
cmp
xorb
xchg
push
push
incl
or
sub
adc
ljmp
out
enter
jbe
inc
lods
jnp
lds
gs
add
hlt
test
out
ret
jecxz
xchg
xchg
insb
ss
out
mov
add
jl
arpl
leave
icebp
leave
fwait
push
cmp
pop
sub
jnp
push
xor
int3
adc
mov
dec
das
jmp
out
adc
push
enter
aam
sbb
fcmovne
inc
and
xchg
xchg
cmp
push
or
lea
es
or
xchg
ret
addl
push
dec
mov
test
lret
or
mov
lods
ljmp
fwait
pop
dec
sbb
jnp
lahf
cmp
insb
addr16
in
aaa
dec
lret
and
adc
repnz
ja
arpl
call
or
js
movsb
push
sti
pop
jae
or
ficompl
repz
inc
int
jns
pusha
ret
fistl
cmp
into
xor
mov
and
cmp
jg
fidivl
inc
jb
lret
cmpsl
mov
aam
pop
imul
push
add
mov
jg
adc
dec
je
ljmp
pop
cwtl
jbe
jnp
test
add
mov
add
push
push
stos
mov
mov
aas
inc
sub
jne
and
test
pop
push
test
test
adc
sub
orl
mov
sti
sti
cmp
mov
orl
shrb
fstpt
out
cwtl
inc
ja
pusha
ljmp
jbe
and
in
mov
ret
cwtl
sarl
hlt
into
xlat
into
pop
test
stos
push
inc
sbb
sti
cli
cmp
lahf
cmpsb
or
jmp
lods
dec
imul
cmc
mov
test
fcmovnu
inc
in
aad
cld
add
test
jle
in
cmp
pop
stos
or
cmp
and
aaa
push
mov
icebp
cmc
push
loop
fnsave
jae
push
sbb
pusha
js
fs
jmp
xor
stos
push
xor
add
loop
mov
js
dec
sbb
or
jns
pushf
xchg
testb
cltd
cmp
sub
xchg
fsubrl
int3
jae
push
or
jge
add
push
aam
test
lods
sbb
jae
lods
sarl
jae
mov
insb
add
daa
push
movsl
sbb
lahf
cld
stos
mov
loope
repz
xor
lock
stos
pop
mov
addb
loop
push
jg
adcb
inc
test
cmpb
stc
cmp
imul
divb
les
in
hlt
movsl
ja
inc
mov
pop
aam
xor
pushf
scas
inc
dec
rcr
jbe
and
lret
pop
popa
mov
mov
inc
test
aad
dec
inc
and
pop
inc
hlt
push
jmp
cmp
fistl
fadds
dec
or
xchg
out
movaps
dec
addr16
cmp
inc
lret
loop
xchg
inc
lds
mov
dec
cmpsb
inc
ljmp
xor
xchg
call
inc
repnz
jle
mov
fdivs
sbb
imul
and
aas
or
imul
popa
pop
mov
jo
orl
fistps
adc
mov
data16
in
aas
mov
jnp
inc
test
test
inc
xor
imul
mov
std
inc
roll
push
push
push
sub
xchg
jmp
cli
outsb
mov
pop
xor
lcall
fstpl
sarl
xor
lods
js
sti
adcb
mov
shl
out
fisubrs
out
add
test
gs
mov
icebp
pop
fcmovnu
test
inc
add
bswap
les
test
xlat
rol
and
jae
lock
mov
pop
movsl
cmp
shll
out
mov
mov
je
adc
add
mov
add
cmp
jne
sub
mov
inc
rcrl
mov
xchg
inc
incb
inc
xor
repz
dec
aam
jmp
inc
cmp
add
loop
pop
scas
repz
and
pop
pop
and
mov
cltd
sub
js
jg
shlb
jae
xchg
pop
enter
test
jb
repz
jb
cmpb
arpl
loop
test
daa
out
inc
push
mov
in
jae
fdivl
push
and
fs
mov
sub
fwait
fwait
adc
lea
jecxz
mov
jns
out
rorb
push
outsl
test
cmp
cmp
push
xchg
cmp
insb
jle
push
xchg
into
lret
repz
xchg
iret
pop
in
out
cmc
aas
sbbb
xchg
sub
lods
es
sbb
xchg
in
loopne
in
dec
pop
mov
lcall
pop
xor
pop
notb
mov
pop
lea
mov
jae
pop
and
mov
aam
mov
xor
push
dec
mov
gs
shrl
std
aas
popf
inc
cmp
xor
or
jnp
aas
lahf
jb
mov
std
addr16
pop
adc
loopne
jl
rorb
in
shrl
loopne,pn
mov
fcmovnbe
data16
and
xor
xor
push
mov
push
push
ljmp
mov
popf
inc
jnp
xor
lahf
out
cld
pop
mov
sbb
pop
cs
xchg
mov
mov
cmpb
and
lock
mov
push
add
loope
xlat
mov
or
ret
cmp
pop
mov
xor
or
call
xor
test
mov
faddl
jge
outsl
out
xor
adcb
pop
scas
inc
roll
xor
sahf
cmpsl
inc
mov
aas
call
lods
xor
std
or
pop
loope
lahf
shl
inc
fdiv
xor
in
or
lret
cli
dec
xchg
xor
adc
int3
push
push
adc
mov
jno
and
adc
push
ss
cmp
add
or
dec
ljmp
xor
inc
movsb
jl
int3
push
sahf
mov
jno
addr16
mov
mov
mov
gs
test
sahf
pop
fimuls
cmp
pushfw
mov
shrb
adc
pop
aad
cli
lods
arpl
mov
inc
out
addr16
cli
in
xor
or
in
faddl
lea
adc
mov
popa
movsb
cmp
call
cmp
enter
and
add
and
pop
push
and
jns
push
stos
in
les
cmp
push
ja
mov
xchg
xlat
lret
arpl
mov
or
jg
ss
adc
cmp
sbb
dec
bound
inc
loop
nop
or
in
xchg
mov
movsl
xchg
popa
outsl
jb
scas
mov
push
xchg
jne
cmpsb
in
js
lahf
das
lcall
sub
dec
jecxz
inc
and
dec
xchg
sbb
mov
fstpl
jp
out
in
mov
rcrl
mov
inc
call
xor
sub
es
and
add
pop
jns
or
sbb
jno
jle
push
cwtl
jbe
cs
mov
movsb
or
and
mov
xor
jecxz
pop
sbb
adc
ficoms
xor
mov
sahf
inc
xor
insb
insb
loop
fnsave
cmc
push
movsl
inc
mov
push
jg
sbbl
repnz
fldcw
pop
inc
xchg
ret
fsubrs
cmp
fisubs
dec
cs
or
arpl
insb
cmpsl
aaa
aad
add
sahf
and
movsl
in
sti
fldcw
mov
xchg
adc
shrl
pop
push
je
bound
pushf
clc
cmpsb
xchg
pop
loopne
jg
addl
shrb
sti
fisubrl
mov
fcomi
adc
sbb
aaa
shrd
loopne
jl
lcall
clc
ljmp
in
sub
imulb
das
ret
movsb
cld
sub
xchg
jecxz
insl
cltd
adc
shll
push
outsl
popa
imul
out
mov
arpl
daa
cmp
mov
imul
adc
pop
xchg
es
add
ret
ljmp
and
jecxz
sub
mov
adc
scas
mov
call
out
cld
aad
jmp
mov
in
int3
xor
and
xchg
dec
mov
or
ret
xchg
sbb
movsb
sub
add
cmp
das
mov
enter
add
fidivs
fstpt
icebp
bswap
outsb
jae
hlt
aad
scas
jae
xchg
rorl
enter
adc
repz
pop
sub
mov
sbb
cmpsb
imul
add
fiadds
test
push
cmp
cltd
push
push
lods
push
sub
jo
movsb
addl
push
loope
faddl
jmp
dec
sbb
sti
push
notl
push
es
in
jl
repnz
xchg
mov
push
sbb
lods
rol
mov
xchg
xchg
aad
inc
jnp
push
jb
xor
sub
xchg
test
sbb
int
and
gs
adc
bound
dec
inc
jne
mov
mov
fimuls
ficoms
sbb
lret
mov
pop
jne
call
inc
adc
cmp
and
scas
js
jae
cmpsl
mov
fcomps
std
es
fisttps
mov
out
arpl
idivl
int
mov
pushf
push
mov
dec
fiadds
stos
adc
and
out
fistps
gs
cli
cmp
push
sbb
fwait
mov
stos
es
cmpsb
add
lods
cli
in
xchg
xor
aad
pushl
lods
scas
add
push
maskmovq
imull
mov
testb
mov
shll
cmp
rolb
jge
pop
mov
inc
rol
sbb
xor
jae
mov
dec
test
in
aaa
mov
inc
push
je
xchg
movsb
cmpsl
lret
mov
mov
jp
and
pop
int3
in
mov
inc
mov
cli
fadds
cmp
jg
push
jp
push
pop
frstor
add
outsb
scas
movsl
fldt
push
imull
test
outsb
fdivs
push
jae
popf
cli
ffree
add
mov
repnz
xlat
hlt
mov
shlb
sbbl
test
adc
repz
xchg
xchg
outsl
jb
sbb
nop
pop
mov
jb
loope
cwtl
nop
inc
mov
pop
pop
xabort
and
pop
mov
outsb
xchg
sub
inc
cli
bound
mov
test
and
sbb
mov
push
lret
ss
sbb
iret
fidivrs
outsb
lret
andl
into
inc
test
out
roll
aam
mov
sub
addl
sti
lahf
mov
xor
add
imulb
insl
movsl
fsqrt
cmpl
enter
inc
pop
pusha
mov
sbb
leave
lock
mov
or
or
mov
and
dec
adc
stc
aas
push
push
aad
int
inc
pushf
dec
jne
in
fstps
inc
aad
ret
mov
inc
dec
mov
stos
test
mov
xchg
mov
cmpsb
add
test
pop
scas
jp
cltd
xchg
push
hlt
popa
adc
test
stos
dec
mov
xchg
jmp
xor
loopne
ja
shrb
sahf
add
dec
push
lcall
mov
add
cmp
cmp
push
push
testb
xor
int
and
nop
add
mov
mov
in
add
cmpsb
push
lock
dec
sbb
mov
imul
xor
cltd
jmp
pop
lret
jmp
dec
inc
push
mov
pop
push
push
stc
rorl
enter
or
fmuls
int
mov
xchg
lods
pop
fmul
pop
and
mov
add
and
dec
jl
push
repz
jl
stos
mov
loop
outsb
leave
aas
popf
mov
mov
loop
dec
xchg
mov
mov
int3
js
and
shrl
jnp
stc
call
mov
incl
pop
aam
rclb
mov
mov
out
xor
in
add
lods
pushf
aas
pop
dec
loope
jge
sub
mov
movsb
dec
int
insb
cmc
cmpsb
outsb
inc
mov
push
and
xchg
add
cmp
dec
push
mov
cmp
sub
je
mov
mov
xchg
fistl
in
in
mov
loopne
cmp
inc
fisubrl
or
mov
jmp
dec
jmp
mov
mov
aad
xchg
ffreep
pop
movsb
jecxz
test
stos
mov
fdivrs
xor
cwtl
add
xchg
mov
or
imul
xchg
jbe
mov
mov
push
test
out
and
lahf
or
in
cmp
or
and
or
mov
mov
push
sbb
or
in
xchg
int
sbb
je
pop
dec
test
cmpsl
lods
pop
push
mov
je
div
add
inc
add
mov
push
push
test
xchg
cs
insb
mov
xor
push
pop
shlb
sub
mov
cli
mov
cmp
mov
pop
loopne
daa
mov
lcall
jle
repnz
add
insl
scas
sub
addr16
daa
xchg
xor
arpl
cmpsl
xor
test
push
mov
and
ret
arpl
nop
outsb
enter
insl
outsl
movsb
sbb
adc
out
inc
test
lds
ljmp
mulb
out
add
inc
mov
push
dec
add
sbb
loop
xchg
push
cmp
iret
mov
jp
mov
lahf
or
mov
adc
add
out
fldl
inc
les
push
lods
adc
mov
pop
or
xchg
lods
fdivrs
cld
push
stos
shrb
cltd
iret
jne
ljmp
mov
pop
fdivrs
scas
daa
je
lcall
cmp
ds
fisttpl
mov
jns
stos
lahf
aaa
inc
insb
jge
roll
sbb
aam
imul
push
sub
xchg
mov
adc
fistl
cld
dec
ret
into
push
mov
inc
fcomps
sub
xchg
mov
out
xchg
mov
iret
xchg
ljmp
addr16
xlat
cmpsb
movsb
mov
sbb
cwtl
lods
in
xchg
fsts
les
fcomps
stos
cmp
xor
jl
pop
sub
fwait
sahf
divb
arpl
sti
fwait
inc
add
mov
mov
ljmp
int
stos
add
mov
or
test
ss
xchg
pop
push
push
jnp
sbb
aam
pop
cltd
mov
cmp
ret
insl
enter
add
xchg
add
inc
ret
out
subb
fsts
sbb
rol
pop
or
mov
test
sbb
cmp
cmp
jmp
and
push
adc
adc
scas
test
leave
jl
ret
mov
mov
cltd
cmp
sub
pop
cmpsb
inc
mov
jecxz
jb
mov
repnz
pop
cmpsl
pop
mov
add
xchg
in
push
sahf
mov
add
inc
out
std
fcmovbe
cmpsl
jecxz
mov
xchg
test
jg
fcompl
outsb
cmp
repnz
xor
push
xor
test
jg
gs
ja
ljmp
push
out
in
mov
testb
jo
cmpsb
push
jne
loopne
int
dec
push
addl
nop
loopne
add
es
mov
dec
xor
adc
jecxz
jp
push
dec
dec
sub
and
ds
mov
jne
stc
mov
into
inc
cld
jg
jp
fs
idivb
fistl
or
jmp
pop
cli
addr16
std
pop
push
aaa
and
popa
pop
orb
adc
orb
cmpsb
dec
inc
or
jge
gs
fwait
stc
fcomps
ja
cwtl
jg
hlt
es
adc
fcoms
sub
dec
mov
nop
and
and
dec
jmp
scas
daa
inc
fldlg2
fiadds
xor
arpl
in
xchg
loope
fwait
sub
das
cmp
push
ja,pt
clc
int3
mov
test
xor
into
sub
addr16
cmp
xor
loop
jo
xlat
inc
push
or
push
test
or
add
sub
movl
mov
out
and
jno
bnd
xchg
mov
arpl
pop
enter
cmpsb
push
mov
lods
lahf
fmull
daa
movsl
fnstenv
lret
and
ds
pusha
in
sub
jns
not
aas
mov
test
dec
xlat
inc
jno
jbe
mov
imul
cli
pop
xchg
sub
dec
mov
inc
and
sbb
jle
adc
inc
sti
scas
bound
ds
mov
popf
test
jl
sub
scas
scas
jno
leave
adc
or
dec
in
leave
sbbb
cmpsl
out
pusha
cmp
faddl
idivl
repz
push
inc
jl
sar
push
dec
xchg
jg
jecxz
ficompl
mov
sahf
test
mov
fsubrl
jge
jb
mov
and
cmp
mov
cmpsl
dec
inc
pop
ds
hlt
int3
or
jecxz
stos
daa
enter
jge
mov
stos
mov
ss
test
les
jmp
sub
sahf
mov
inc
stc
movsb
xchg
adc
js
fs
jle
pop
mov
inc
rcrl
and
push
ret
sub
or
into
mov
popf
movsl
aam
push
jnp
dec
pop
xchg
movsl
fimuls
imul
enter
lock
loope
add
cmpl
aas
aas
mov
sub
inc
ret
rorl
repz
push
pop
pop
test
rorb
test
aad
push
sbbl
adc
ret
jbe
nop
ds
and
iret
leave
orl
daa
pop
mov
jo
push
push
adc
mov
lahf
gs
adc
sub
adc
into
inc
pop
fwait
cld
mov
pusha
fidivs
leave
cmp
jg
enter
outsl
pop
outsl
xlat
adc
pop
pusha
into
imul
inc
es
xor
lea
xor
lret
fstl
adcb
push
pop
arpl
sbbb
clc
jmp
inc
mov
rcr
sub
fiaddl
jp
sub
shll
shlb
sbb
movsl
fcmovbe
lcall
pusha
stos
push
aaa
cmp
add
pop
pop
xor
jae
push
repz
pop
in
cmp
aad
xchg
xor
lds
stc
js
add
loop
inc
aam
adc
mov
sbb
pop
lahf
sub
leave
loop
inc
inc
mov
sub
adc
mov
cmpsl
out
pop
movsl
adc
mov
loop
push
mov
mov
call
xor
in
nop
xchg
add
mov
inc
adc
icebp
mov
mov
or
push
loope
stc
mov
shrl
or
xlat
sbb
mov
xchg
xor
add
push
adc
test
or
cmpsb
test
jne
and
push
mov
jae
jns
loop
in
xor
push
mov
sbbl
sub
repz
dec
xlat
sub
out
je
jno
push
mov
sub
orb
shr
cmp
ds
jge
mov
push
inc
and
push
insl
mov
hlt
sbb
and
inc
stc
xor
shll
cmp
insb
push
xor
xor
decl
rcrl
insb
add
inc
jmp
ja
inc
frstor
int
jmp
pop
mov
adc
cmp
les
stos
push
les
and
sbb
and
in
or
adc
call
popf
imul
aad
pop
xchg
xor
aas
call
int
add
dec
lea
pop
dec
and
jecxz
jb
lea
jbe
hlt
lods
out
adcl
xor
test
frstor
or
push
int3
mov
mov
cwtl
xor
inc
pop
xchg
jmp
rolb
inc
shlb
stc
xchg
sub
sti
mov
xchg
jp
lret
shl
push
fnstenv
pop
mov
testb
mov
testb
std
fstl
or
xchg
push
cwtl
push
xor
inc
ja
imul
dec
pop
rolb
imul
fwait
call
and
sti
por
pop
lds
xorl
mov
pop
lock
pop
push
fnsave
gs
sbb
adc
cmpl
enter
adc
mov
mov
adc
fisttpl
push
mov
lret
lock
rorb
and
negl
and
pop
jecxz
ja
inc
pop
outsl
jecxz
pop
lods
pusha
mov
repz
xor
inc
mov
pop
out
push
lret
adc
sbb
repnz
pop
pusha
xchg
sub
push
mov
cmovne
push
loop
adc
mov
rcll
lea
testb
add
dec
loope
fxtract
xor
cmc
xor
cmp
push
jge
rcr
pop
imulb
jle
enter
pop
jne
xor
shl
faddl
aas
adc
dec
xchg
mov
out
and
cmp
js
push
jmp
jge
scas
pop
push
bound
aas
pop
inc
jmp
outsl
or
fcompl
push
sbb
lcall
cmpsb
xor
das
jl
nop
adc
add
jo
xchg
jecxz
cli
xlat
mov
cmc
cmp
loopne
pushf
mov
fwait
jnp
xchg
xor
jnp
xchg
test
loop
mov
push
fs
insb
fnstsw
psrlw
shlb
pusha
hlt
scas
mov
out
divl
scas
sbb
pop
mov
push
inc
or
pop
icebp
test
aaa
add
cltd
mov
push
xorb
mov
aad
aad
dec
rcrb
jecxz
mov
sqrtps
push
sbb
into
cmp
repz
cmp
cmp
sbb
xor
sbb
outsl
adc
sub
clc
lret
xor
or
jns
clc
sub
clc
add
dec
gs
aaa
vmread
pop
int3
jnp
jg
notb
adc
mov
push
xchg
mov
call
jmp
jp
fwait
call
loope
stos
xor
or
push
push
cmc
sub
scas
push
in
popa
xchg
fwait
clc
pop
add
sbb
xor
dec
bound
cmp
mov
jno
aas
bound
es
test
movsl
gs
or
pusha
sub
or
lret
fsubs
sub
pusha
push
fnsave
pop
jg
lahf
mov
inc
pop
ds
sahf
out
or
jno
jle
mov
aam
mov
fiaddl
push
ds
xor
dec
pop
jmp
pop
mov
loop
test
mov
fisubrl
cmp
int3
insb
outsb
cld
pop
imulb
pusha
sbb
sbb
mov
jl
adc
iret
js
popl
jno
lods
push
push
or
cltd
xor
add
and
les
mov
sbb
cs
clc
icebp
lcall
push
imul
mov
scas
aas
aam
lret
rcrl
sub
and
adc
push
pop
mov
push
push
add
mov
scas
stos
es
xlat
inc
jmp
dec
adc
and
jnp
mov
outsb
sbb
repnz
icebp
mov
xchg
push
std
sub
mov
mov
adc
enter
rclb
dec
stos
jmp
jg
iret
icebp
lret
xlat
adc
push
xchg
dec
je
inc
int
dec
mov
xchg
in
push
mov
adc
call
clc
ss
inc
out
cmp
dec
dec
xchg
insl
int3
leave
inc
mov
mov
test
inc
mov
jno
enter
mov
jns
mov
xor
adcb
and
lods
push
test
dec
sahf
dec
mov
push
sub
imul
je
sbb
lcall
xor
cld
aad
xor
mov
push
jno
clc
xor
push
sbb
xor
cltd
dec
rcrl
pushw
arpl
das
adc
mov
adc
negb
pop
icebp
cltd
push
xchg
add
lea
or
mov
jl
push
mov
lea
inc
shlb
mov
mov
jge
xorl
mov
fdivl
clc
cmp
adc
lock
aam
push
cltd
and
xchg
pop
mov
aam
out
dec
es
iret
aad
xchg
clc
pop
nop
and
movsl
xor
lcall
aam
and
dec
mov
or
out
stos
mov
mov
ljmp
das
mov
or
add
mov
adc
adc
popf
stc
sbb
add
popa
push
int3
das
inc
ror
and
out
xchg
cmp
call
lcall
push
dec
sbb
sahf
xor
mov
rcrl
and
ds
int3
xchg
ret
pusha
fldenv
adc
fucomip
inc
push
sbb
xor
mov
mov
inc
sub
stos
pop
lahf
add
les
mov
decl
add
lahf
mull
shr
ret
dec
shrl
shl
pusha
push
pop
adc
into
lret
scas
sahf
mov
lock
mov
ljmp
xor
and
mov
jp
repz
cmp
mov
cmp
sbbb
pop
jge
mov
shll
das
negl
popl
loop
fisubrs
das
xor
sbb
addl
lods
ret
jle
dec
mov
jmp
idivl
enter
and
and
stos
mov
out
loope
lcall
xor
pop
hlt
and
adc
ja
push
pop
xor
scas
dec
inc
xchg
insb
rep
shlb
in
and
nop
shll
test
mov
scas
cwtl
arpl
popa
les
mov
or
xlat
jne
jl
fildll
inc
call
pop
cmpsl
in
shlb
test
pop
jp
mov
nopl
insb
jbe
lret
fisttpl
scas
clc
mov
popf
add
xchg
iret
fsubs
cmp
add
jb
jl
ret
pushf
ret
shrl
cmc
and
push
adc
pop
lea
rcrl
lret
in
test
lds
or
std
jmp
xor
int3
pushf
cmp
sub
insb
sbb
mov
push
pop
sub
xor
push
xchg
movsl
loop
xchg
clc
loope
jno
xchg
test
call
daa
orl
xor
cmp
push
insb
fmull
mov
xor
lret
jbe
inc
sub
insb
push
and
dec
cmp
arpl
push
nop
jecxz
orb
or
lret
mov
das
mov
lret
lds
std
mov
fnstsw
insb
stc
cmp
jne
mov
inc
pushf
inc
xor
call
into
jb
subb
push
jb
mov
cmp
inc
gs
mov
test
pop
pop
mov
insb
popa
imul
clc
fisubrs
sbb
popa
int
out
out
xchg
adc
cmpsb
sti
popl
xchg
mov
mov
iret
add
mov
dec
inc
popa
push
jmp
xchg
sbb
out
ret
les
or
hlt
cli
add
in
call
insb
jbe
dec
ljmp
ret
jmp
repnz
movsl
push
xor
mov
and
mov
data16
xchg
cmp
movb
scas
mov
incb
lret
dec
or
es
cmpsb
lcall
pushf
dec
lahf
inc
mov
push
clc
inc
sbbb
jae
hlt
iret
dec
inc
jae
pop
sbb
jae
ficoms
cmp
scas
out
jb
adc
in
add
cwtl
outsl
dec
or
sbbl
inc
mov
divl
push
fsubrl
lods
pop
pop
sti
lods
dec
inc
sub
lret
mov
mov
mov
xchg
out
out
loop
rcrb
mov
adc
fisttpl
pushf
xchg
fs
mov
inc
leave
dec
jns
mov
mov
outsl
adc
je
ds
add
inc
stos
out
sub
push
or
pop
jl
jno
inc
out
mov
mov
iret
mov
and
bound
push
int
ljmp
fnstsw
xchg
or
or
leave
pop
sbb
cmp
pop
push
daa
push
movsb
mov
sub
pop
pop
mov
mov
mov
fstpt
inc
jb
pushf
or
mov
out
mov
fiaddl
into
jns
push
mov
fdivrs
sbb
adc
mov
push
jae
jmp
js
jo
adc
icebp
jl
push
mov
push
out
and
test
nop
das
push
mov
xchg
ret
sbb
cmpsb
cmp
mov
fisttps
cmc
aad
jecxz
call
jno
xor
sbb
sarb
fmulp
hlt
rcrl
xchg
xchg
cmpl
jb
mov
push
out
xchg
sub
ret
dec
jno
or
xor
dec
mov
test
cli
inc
dec
mov
mov
xchg
adc
inc
dec
loop
in
and
jno
adc
cmpsl
inc
sub
pop
fsubrp
stos
fisubrl
sbb
in
and
cmpb
jge
mov
or
loop
mov
dec
ficomps
push
add
mov
xor
ljmp
push
or
jae
sbb
pop
lret
adc
aaa
or
das
test
int3
pop
sbb
push
pop
sub
lods
imul
movsl
bnd
pop
adc
negb
xor
hlt
pop
add
push
push
movsb
add
ret
pushf
push
mov
cmc
dec
cmp
add
or
rol
sti
das
xchg
ret
insb
mov
sub
lods
fwait
sbb
inc
push
in
cli
jmp
lods
cmp
pop
push
daa
shl
ret
push
pop
xchg
in
cmp
dec
in
mov
aas
jecxz
aam
data16
jg
add
imul
arpl
ss
pop
push
jne
mov
xor
xchg
mov
jo
js
icebp
out
fisubrl
or
call
fadds
add
icebp
in
sub
push
mov
repz
and
adc
mov
gs
int3
jle
mov
int
pop
adc
jns
ljmp
aad
icebp
sti
into
lods
push
add
push
and
jp
pusha
push
int
sbb
pop
int3
inc
jo
enter
pop
add
pop
xchg
jmp
pop
push
mov
sbb
add
lock
push
jb
sub
mov
xor
je
sub
setne
out
lods
pop
cmp
or
xchg
pop
insl
pop
sub
out
inc
add
icebp
mov
inc
cmp
push
jne
in
pop
lahf
or
mull
movsb
add
mov
test
mov
icebp
pop
jae
stos
mov
sti
xchg
mov
push
insl
outsb
test
pop
mov
int
lret
sti
das
hlt
fs
repnz
pop
shlb
xor
sti
jns
out
neg
push
mov
mov
jns
lcall
jg
and
out
in
xchg
scas
xchg
shr
xchg
adc
cmp
mov
jp
and
push
pop
mov
daa
mov
rorl
lret
movl
mov
inc
pop
rcr
xchg
sbb
add
mov
pop
faddp
hlt
arpl
pop
ljmp
lret
int
cmp
jge
inc
pop
adc
ret
sbb
jg
adc
lds
loopne
cs
and
ret
pop
dec
lret
jo
jnp
fidivrs
jno
std
mov
insb
sbb
mov
mov
mov
rolb
fimull
pop
mov
sbb
pop
out
ret
insl
and
pop
inc
icebp
ret
pop
mov
lds
in
dec
mov
dec
mov
iret
or
js
mov
aas
push
xchg
mov
sub
mov
rcrb
push
in
mov
ret
icebp
mov
inc
jg
push
cmpsl
push
pop
sub
adc
repz
push
or
out
inc
dec
movsb
inc
mov
jl
stos
xchg
push
dec
subb
ss
add
adc
ja
enter
mov
mov
ret
out
adc
clc
fdiv
dec
outsl
in
hlt
imull
and
cmp
sub
mov
cli
inc
aam
imulb
inc
or
aam
xchg
sbb
xor
xchg
lods
inc
bound
mov
adc
dec
arpl
stc
out
dec
sbb
mov
pop
sbb
ret
lea
cltd
notl
xchg
mov
mov
or
ja
sub
sbb
aaa
and
subb
lods
sub
mov
insb
ret
movl
vandps
out
and
dec
cmp
and
rcr
lea
orb
sarb
and
push
fisttpll
xor
push
xchg
ret
das
pop
sub
je
loop
notb
insl
ret
insl
pop
and
in
mov
and
movsb
sub
jne
push
out
gs
and
and
ficomps
jp
cmp
xchg
or
xchg
dec
fucom
bound
lret
pop
jne
mov
daa
cmp
into
movsl
test
sub
mov
pop
sbb
xlat
pusha
add
rorl
popa
xchg
mov
pop
sarl
sub
lcall
inc
fld
push
jb
loope
in
and
push
mov
aad
lock
nop
call
pop
inc
pop
shrl
pop
mov
ret
hlt
dec
adc
or
fcmovnb
repz
mov
subl
das
repz
xchg
push
lods
hlt
cmpsb
int
mov
in
xchg
jbe
jmp
sbbl
pop
fs
fcmove
fs
cmpsb
inc
cmp
xor
sub
cmc
repz
cmpsl
add
outsl
inc
mov
movsb
stos
jg
jo
test
mov
je
es
jne
insb
adc
stc
movsb
rcll
out
xor
and
cmp
cmp
or
divb
mov
notl
dec
imul
lcall
les
mov
mov
xchg
jle
aas
jnp
outsb
imul
mov
mov
xor
or
stos
push
adc
pop
pop
in
js
pop
mov
movhps
jbe
xor
and
xchg
mov
arpl
inc
pop
fstl
out
cmp
or
jecxz
data16
clc
jp
inc
and
cmp
pop
mov
ds
cld
push
scas
aad
faddp
and
or
push
std
sub
es
fistpl
lret
icebp
adc
ror
fwait
jmp
cmp
loop
stos
pop
mov
adc
pop
ljmp
dec
pop
push
push
loope
outsb
adc
xchg
cld
lds
and
outsl
addl
jnp
inc
sbb
cmp
je
dec
dec
or
jecxz
adc
iret
fldcw
or
jo
xchg
imul
clc
repz
je
sar
xchg
xlat
fisubrl
iret
mov
adc
push
roll
sbb
cmp
pop
or
out
aaa
pop
push
cltd
push
push
dec
aad
dec
xchg
cli
adc
mov
cltd
xchg
inc
mov
mov
push
sarb
mov
inc
add
jge
cmp
xchg
push
jp
push
mov
push
pop
mov
pop
inc
imul
xor
xor
lods
les
inc
pop
cmp
in
mov
mov
add
add
ret
int3
dec
push
mov
cmp
ds
pusha
pop
scas
jno
dec
mov
jmp
sub
jae
push
inc
or
repz
xor
imul
mov
jne
in
mov
jbe
fcompl
mov
loopne
enter
iret
xor
cmp
or
mov
sbb
mov
mov
repnz
xor
xor
mov
in
outsl
jge
xchg
iret
cmc
mov
dec
fdivrp
xor
push
adc
push
ljmp
out
sahf
adc
cli
dec
aaa
xchg
cmc
in
sub
mov
fldl
test
inc
dec
stos
fists
xchg
xchg
mov
mov
out
adc
inc
adc
pop
or
imul
mov
lcall
loope
mov
es
out
in
push
sahf
orb
mov
mov
neg
push
sub
mov
sub
jp
or
inc
mov
in
pop
xchg
xchg
data16
xchg
push
fnsave
fwait
adc
push
sub
xchg
daa
push
push
add
jp
mov
mov
lods
sub
shlb
xchg
lods
mov
and
xorl
lods
mov
lret
mov
lods
and
pop
add
pushf
stc
mov
lods
push
fstpl
sahf
adc
stos
push
clc
call
decb
aas
loope
xchg
mov
cmc
mov
adc
mov
sbbb
add
sbb
cmp
dec
clc
popa
jnp
inc
enter
sub
cmpsl
sub
cmpl
mov
cmp
cli
idivl
push
pop
add
repnz
xchg
xor
push
pop
cmp
xchg
pop
and
inc
dec
je
xor
inc
xor
data16
fadds
imul
sub
fstp
sbb
mov
adc
or
scas
cmpsb
stos
imul
jnp
ret
arpl
push
sub
fisubs
dec
and
clc
mov
inc
addl
sub
add
popf
jg
ror
mov
shll
lods
cwtl
mov
fsub
xchg
mov
jg
jecxz
pop
ljmp
mov
leave
add
aam
enter
sbb
add
jle
call
and
fisubrl
icebp
fisubrs
add
repz
cmc
movsl
sbb
mov
mov
adc
mov
in
movl
lds
arpl
adc
orb
loope
mov
pop
cmp
je
mov
or
loop
cmpsb
mov
test
into
xchg
in
ret
and
mov
testl
ret
cmp
gs
xchg
xor
cli
stc
push
inc
mov
or
jo
out
mov
je
outsl
fstl
outsb
outsl
or
into
or
and
or
mov
daa
das
aad
lds
or
ret
adc
jecxz
cmpsb
push
xchg
mov
jmp
adc
push
jae
cmp
pop
jae
jle
pop
mov
push
or
insb
imul
pushf
sar
cmp
or
das
adc
call
jl
stc
nop
sbb
and
mov
mov
push
jl
inc
aad
push
push
cmp
call
cli
fstpl
or
aaa
add
cwtl
rolb
add
mov
xchg
add
pusha
les
andl
filds
mov
dec
add
jle
in
mov
jne
cmp
sub
xor
js
pop
sahf
clc
aad
cld
xchg
mov
xchg
imul
aam
out
or
icebp
inc
jo
pop
sbb
pop
push
jl
or
sbb
movsb
mov
stos
int3
pop
mov
sarb
fnstenv
push
adc
loope
testl
jp
fbstp
mov
pop
pop
cmp
test
pop
fucomp
jo
lea
movsb
adc
jb
pop
in
lds
sti
adc
das
fwait
push
pop
mov
pop
lds
mov
push
cmp
daa
push
mov
sbb
mov
xchg
jne
jle
es
lock
jo
mov
pop
cwtl
mov
ja
xlat
cs
jg
inc
jp
sub
jns
and
mov
in
ljmp
in
mov
daa
jle
adc
and
xlat
mov
imul
push
mov
daa
jmp
and
xchg
lds
jmp
ja
mov
imulb
lahf
cmp
adc
sti
cmp
std
dec
jno
outsl
pop
filds
push
cwtl
inc
xorb
mov
cmp
push
imul
xor
fsubrs
mov
mov
std
bound
bound
cwtl
cs
mov
jmp
jecxz
movsl
pop
lahf
cmp
mov
aad
and
cld
repnz
in
jbe
stos
imul
or
cmp
mov
aam
insb
fcoms
cwtl
xor
add
dec
push
cltd
rolb
xor
decb
inc
sub
addr16
and
dec
mov
bound
outsl
lds
popa
cmpsb
xor
jecxz
out
mov
mov
or
or
lret
mov
daa
pushf
mov
imul
push
adc
push
iret
andl
lock
push
cmpl
pop
cmp
fistl
lea
test
hlt
sarb
push
push
scas
sbbl
lock
or
aas
xchg
and
cmpsb
inc
loop
or
adc
pop
add
or
mov
jnp
outsb
mov
mov
dec
xchg
flds
mov
sti
mov
frstor
pop
test
sti
mov
arpl
ljmp
cmp
ds
imulb
cmp
mov
push
nop
std
ljmp
lcall
xchg
cmp
and
ss
notl
iret
in
insl
sub
jl
and
insb
clc
or
pop
mov
daa
mov
inc
push
mov
and
std
imul
mov
mov
mov
test
adc
push
std
sub
sub
xor
stos
push
dec
inc
xchg
andb
mov
fwait
aaa
jmp
outsb
push
addl
repz
and
out
push
jg
out
fwait
lret
icebp
inc
aam
inc
pop
rcr
sbb
pop
cmp
add
das
lods
jmp
je
mov
insl
ret
jge
movsb
mov
nop
xorl
adc
daa
xchg
and
das
adc
imul
add
add
fwait
test
sub
lea
pop
xchg
lret
popa
imul
fcmovnb
test
push
jae
push
adc
int
or
loop
enter
or
dec
pop
push
int
add
sub
mov
xchg
adcb
aam
push
push
jge
xchg
xchg
xor
xchg
js
xor
in
stos
js
and
scas
push
sbb
stos
pop
clc
sub
add
or
int3
and
and
stos
xchg
loope
cltd
fldl
aas
jns
jbe
xchg
dec
mov
fs
pushf
xorl
jmp
dec
data16
daa
sbb
repnz
fmull
jle
sbb
ret
sbb
cwtl
jg
js
and
push
jp
pop
dec
dec
arpl
mov
cmp
fcmovbe
or
push
pop
shr
xchg
jb
dec
sub
cmpsl
xor
mov
sbb
and
fdivr
pop
test
pop
push
stos
out
in
sbb
adc
sar
stos
add
or
rcrl
xchg
call
leave
data16
out
mov
add
dec
mov
mov
cmc
std
xor
ljmp
sbb
popf
ja
jl
add
pop
mov
shlb
or
xor
pop
push
std
or
mov
daa
repnz
push
cmc
movsb
or
add
imul
shll
lahf
jo
sub
add
aas
lcall
sbb
add
sub
into
mov
mov
xchg
sbb
or
jle
pop
loop
lret
sub
jp
cmp
data16
in
pop
and
lret
ss
jmp
scas
loop
mov
cmp
add
in
mov
pop
icebp
lods
stos
fs
outsl
add
lea
out
cmp
mov
popf
cmp
and
test
cli
je
cmp
inc
out
and
xorb
mov
jbe
jb
adc
dec
jne
push
mov
xor
mov
mov
and
es
fsubs
scas
mov
lret
scas
jnp
enter
mov
jmp
lods
sub
js
push
mov
jnp
out
lods
push
sbbb
sub
jno
stos
in
or
mov
fsubs
jo
data16
sbb
pusha
adc
aam
mov
add
lds
xchg
cwtl
dec
movsb
cmpsl
and
dec
cmp
sarl
hlt
mov
clc
add
dec
daa
adc
and
xor
aam
dec
inc
mov
xchg
fistpll
loope
sbb
loopne
xchg
xor
add
jo
jmp
mov
jb
jmp
andl
or
test
in
sub
cvtps2pd
int
xchg
inc
mov
and
mov
in
les
and
or
mov
add
xor
add
cmp
mov
test
ja
jno
insl
lret
loopne
mov
fmull
sbb
and
fdivrl
mov
sub
mov
jg
cmp
sub
mov
push
jecxz
je
std
mov
mov
shll
clc
push
or
popf
sar
sbb
fnstenv
mov
xchg
sub
pop
mov
jg
in
sti
push
mov
loope
and
flds
or
dec
sbb
ss
mov
inc
sbb
les
js
adc
insl
jbe
mov
pushl
nop
adc
jmp
out
out
push
cs
adc
les
cmp
mov
les
xor
mov
push
in
test
leave
xor
dec
sub
mov
mov
dec
jns
stos
cmp
call
repnz
xchg
sub
das
mov
movsl
sarl
lret
and
pop
leave
mov
repz
jne
daa
cmpsb
xchg
mov
dec
rolb
jnp
xlat
std
test
fcomip
pop
stos
into
push
pop
arpl
loop
rolb
cmp
pusha
cmp
imul
cmpsb
mov
xor
mov
fwait
jbe
das
and
xchg
mov
insb
xor
push
dec
or
pop
xchg
pop
mov
out
shrb
repz
imul
stos
or
add
push
adc
mov
adc
xchg
sub
loop
jg
inc
incb
jmp
gs
cmp
subb
or
xor
js
xor
sub
andnps
inc
jae
lds
cwtl
push
pop
imul
jnp
imul
mov
sbb
lret
jns
sbb
mov
or
mov
adc
dec
shrl
jns
mov
lret
cmpsl
adc
fs
sbb
cld
mov
mov
xchg
out
bound
rolb
jecxz
mov
sbb
bnd
sub
daa
mov
enter
jle
push
sbb
inc
cmp
in
arpl
push
jo
aad
pop
add
sbb
movsb
dec
in
jbe
mov
jne
inc
jne
fbstp
lods
lea
push
movsb
ss
iret
xor
hlt
and
sarb
adc
add
std
pop
cmp
cmp
jg
sbb
movsb
xchg
xor
pop
repz
xorb
aaa
test
pop
jle
sub
lods
jbe
rorl
aaa
jns
rolb
lahf
adc
cltd
jns
jecxz
inc
ficompl
cli
pop
or
pushf
repnz
pop
into
in
movsl
int
mov
aaa
mov
pop
lock
inc
xor
push
lret
dec
mov
jbe
je
in
int3
call
inc
add
lds
stos
mov
jb
xor
adc
xchg
jnp
mov
add
mov
jne
not
out
ret
in
dec
xchg
lret
loop
ret
push
jne
bound
pop
les
stc
call
xor
jbe
das
mov
loopne
inc
xlat
mov
lea
in
sbb
push
xchg
cltd
call
jo
in
push
aam
sbb
in
testl
mov
rcll
sbb
repnz
lret
lds
inc
mov
outsb
xchg
scas
sbb
and
sub
jg
lcall
mov
out
sbb
pop
inc
inc
addb
jae
int3
jbe
decb
and
jbe
lcall
loopne
adc
or
sub
popf
mov
repz
loop
das
push
sub
jbe
jno
cmc
pop
push
sbb
pop
mov
fcoms
push
aas
leave
cmp
mov
sub
ror
xchg
and
fisttps
insb
filds
push
pop
dec
flds
jl
xor
sub
out
clc
dec
jne
std
cmp
push
sub
cmp
jge
out
inc
lea
loop
inc
xlat
dec
movsb
dec
movsl
mov
xorl
stos
int
xchg
inc
cmpsb
ret
gs
jae
ljmp
jns
inc
ret
mov
xchg
and
ja
scas
mov
icebp
outsl
stos
insb
jle
xor
fisubrs
out
adc
mov
movsb
test
lods
sub
cli
xchg
int3
into
or
je
xlat
push
fwait
call
xlat
and
ds
shrb
insb
out
dec
or
jnp
adc
repz
rcrb
inc
ret
or
pop
inc
xor
mov
cmp
arpl
or
add
dec
jbe
mov
inc
inc
inc
outsb
and
dec
sbb
int
mov
add
mov
inc
adc
inc
aam
xor
sub
test
or
adc
jno
ror
fdivs
add
pop
push
sub
test
inc
xor
push
das
out
mov
fdiv
sub
mov
cmp
pushf
loop
ja
mov
jg
xor
dec
repz
sub
frstor
xor
leave
ss
mov
loope
dec
lret
xorb
jb
aad
scas
aam
pushf
cmp
inc
pop
pop
vpsraw
test
and
inc
hlt
mov
fistl
xchg
shr
inc
das
pop
outsb
fimull
sbb
cs
mov
xor
out
aas
mov
sbb
xchg
mov
add
nopl
dec
jbe
test
mov
je
adc
test
adc
dec
sbb
dec
mov
adc
jo
push
out
cmp
sbb
mov
cmp
outsb
addr16
pop
dec
enter
mov
fxch
pop
fidivrl
pushf
mov
dec
mov
push
negb
stc
pusha
sti
xor
shrl
lods
dec
and
add
xlat
xchg
xor
stos
repnz
aad
pusha
mov
or
pusha
xchg
or
adc
mov
pop
insl
pop
xor
and
int3
insl
into
and
cmp
jmp
mov
or
iret
xor
ds
std
aas
and
shll
dec
mov
divb
sbb
loop
and
imul
adcl
add
rol
jecxz
cmp
xchg
push
loopne
cmp
jne
fwait
pop
fstpl
mov
out
xchg
add
mov
dec
iret
mov
jmp
in
cltd
fbstp
into
cltd
mov
xchg
jns
jb
sahf
mov
dec
notl
mov
rorl
fs
cmp
jnp
andl
adc
jns
fistpl
ja
enter
fiaddl
dec
ret
adc
movsl
fadds
dec
cld
dec
sbb
movlps
imul
cmp
adc
sbb
insb
mov
test
cmp
xorl
test
xor
data16
dec
in
cmpsb
clc
iret
add
add
test
xchg
jl
mov
pop
or
jecxz
mov
add
xor
outsb
aad
aaa
outsl
insb
push
or
ret
and
jo
ljmp
mov
imul
jecxz
mov
movsl
popf
mov
xor
xchg
pop
cmp
ret
sti
popf
or
inc
fcompl
cmp
icebp
inc
xchg
movsb
lods
repnz
sbb
lds
aaa
loope
jmp
push
sbb
mov
mov
cmp
pop
inc
cwtl
xchg
jo
scas
das
adc
shrl
push
adc
push
mov
test
popa
and
aad
lds
iret
loopne
jecxz
inc
je
cmp
in
fcompl
std
push
sub
xchg
push
inc
in
push
sub
inc
cmp
cmpsb
mov
and
ja
ror
and
pop
js
or
popf
jo
xlat
pop
xchg
enter
xchg
lahf
insl
xchg
jl
sbb
add
jp
sub
scas
popa
sar
clc
fistl
fists
sub
je
lods
mov
pop
sti
mov
inc
dec
jmp
mov
mov
pop
and
cmpl
lret
mov
mov
ret
je
xor
fwait
mov
push
xorl
pop
aaa
icebp
push
lahf
fsubr
push
mov
xor
lods
xchg
xchg
fsubl
je
int3
inc
dec
jmp
call
leave
aas
jmp
adc
cli
sub
mov
iret
mov
fsubrl
jl
cwtl
test
and
stos
pop
mov
aaa
mov
call
hlt
push
sub
arpl
push
shll
shr
inc
fildl
mov
mov
adc
les
inc
mov
push
sub
dec
dec
fisttps
cmpsb
pop
inc
xchg
lds
clc
insl
ret
test
dec
ss
pop
xchg
add
mov
es
pop
bound
bound
mov
xor
fldcw
mov
test
call
push
ffreep
stos
xchg
adc
cmpsb
sti
push
push
push
das
movsb
lcall
loopne
xor
xchg
jl
repnz
push
lret
insb
jnp
add
dec
mov
popa
inc
inc
jg
fistpll
call
testb
inc
mov
loopne
enter
xor
aam
dec
sub
fwait
xchg
fnsave
pminsw
or
jl
mov
pop
imul
or
dec
push
add
repnz
mov
lahf
jmp
xchg
sbb
push
cmpsl
push
das
out
push
rcrl
mov
jnp
mov
fidivrs
cld
fimull
and
push
pop
inc
xchg
outsb
add
repz
enter
push
adc
cs
mov
fistl
push
mov
xchg
dec
arpl
enter
mov
cmp
mov
in
addr16
mov
daa
mov
sahf
mov
out
cmp
sbb
sbb
mov
pop
lcall
lock
xor
popa
pop
ret
push
aam
mov
sub
into
arpl
jle
and
loop
lods
shlb
sbb
xor
fldenv
mov
jle
or
icebp
cltd
ffree
add
je
mov
mov
popf
mov
mov
xchg
pop
sbb
out
in
xor
insb
loopne
cld
not
lods
stos
fdivs
inc
push
adc
push
loop
aad
jp
jbe
sarb
or
movsb
mov
mulb
jae
imul
push
mov
sbb
mov
sbb
cmpsb
es
test
add
orb
out
pusha
xchg
out
iret
push
pop
ret
hlt
jnp
mov
xor
lret
mov
jg
loopne
push
adc
out
pop
in
stos
or
xor
pop
dec
icebp
lds
xor
sbb
xor
loopne
and
sahf
jo
pop
addr16
mov
dec
add
les
dec
pop
bswap
lcall
dec
mov
or
negl
ja
ficompl
popa
pop
out
popf
dec
repnz
hlt
xchg
mov
mov
mov
insb
mov
ret
add
test
js
loop
data16
jg
inc
and
mov
adc
cmpl
sbb
mov
jbe
fsin
int3
icebp
mov
aam
cld
lret
add
aam
mov
xchg
mov
inc
popa
repz
sbb
call
das
add
fs
push
mov
arpl
jg
pop
mov
stos
pop
xlat
or
dec
mov
cmp
xchg
xor
test
lahf
cld
jmp
add
in
or
sti
lea
lret
adc
dec
fs
shrb
insl
dec
xor
mov
mov
sub
and
pop
es
and
pop
xchg
setl
add
or
out
sahf
je
mov
sbb
jp
fsubrp
adc
mov
in
daa
inc
xchg
sub
loope
das
push
lds
mov
arpl
dec
cmp
xor
pop
in
dec
or
inc
adc
jns
jne
stos
push
add
add
into
and
inc
xchg
xor
xchg
dec
or
jp,pt
stos
inc
test
jg
jae
xchg
lods
jle
pop
clc
imul
lahf
fisttps
repz
ret
sub
push
cli
sbb
xchg
call
pop
jp
gs
fldenv
mov
lods
pushaw
sti
jo
sbb
adc
jbe
jp
pop
out
mov
movsb
loopne
aam
adc
icebp
xchg
dec
aam
pop
lock
outsb
pop
imulb
sub
hlt
or
inc
sub
cmpsb
push
cmp
adc
xor
push
pop
insb
rolb
mov
int
inc
xlat
xor
mov
add
cmp
or
push
dec
movsl
in
outsl
push
push
pushf
xchg
inc
cmpsb
dec
pop
imul
ret
sub
std
push
pop
icebp
jb
nop
dec
nop
add
push
jno
mov
jl
xchg
lds
enter
scas
jo
adc
adc
hlt
or
pop
xor
xor
cmp
fldl
outsb
inc
xor
jp
aam
mov
jle
and
into
por
rcrb
icebp
jb
adc
cmp
ret
cltd
stos
fucomp
adc
cmp
mov
or
mov
out
je
cmp
jns
rcr
mov
ror
add
loope
insb
push
aaa
scas
in
test
dec
je
dec
push
xchg
lock
sbb
and
je
in
cmc
les
fs
and
lahf
insb
cmpsb
jne
xor
sbb
mov
movl
iret
pop
gs
xchg
dec
daa
adc
pop
int
fstp
and
ficomps
pop
ret
push
push
or
sub
xchg
or
mov
jb
sub
stos
push
jnp
daa
xor
sub
sub
mov
sarl
inc
jecxz
fwait
and
inc
test
imul
and
leave
in
fstpt
shlb
xchg
in
stc
lds
or
movsl
push
jbe
jb
dec
js
ret
pushf
jbe
fxch
inc
fs
pusha
and
imul
push
stc
push
insl
lods
sbb
dec
dec
cwtl
scas
pusha
insb
arpl
gs
jp
and
outsl
nop
icebp
std
xchg
sarb
inc
and
push
mov
push
mov
xor
xor
repnz
inc
dec
pop
or
xor
insb
xchg
cmpsl
mov
sub
clc
mov
cmc
dec
aam
test
mov
or
popa
mov
dec
inc
xchg
sarl
and
repz
loopne
and
sbb
jg
adc
in
xchg
mov
jecxz
ds
jmp
mov
sti
sti
dec
andl
mov
or
adc
fidivs
sbb
repnz
inc
clc
cmp
pop
cltd
jl
loopne
inc
in
call
jmp
dec
xchg
lds
push
fstl
gs
imul
push
popf
filds
fs
and
push
pop
xor
mov
loopne
mov
lret
into
nop
sub
sub
pop
xchg
arpl
test
pop
cli
sub
jno
dec
int
mov
fstpt
pop
adc
rclb
loope
dec
mov
rcll
xor
pop
popf
mov
int3
in
sbb
aad
mov
inc
fistpll
push
icebp
jno
pop
cmpl
sahf
insb
shl
loope
stos
sub
into
gs
pop
dec
insb
jmp
nop
hlt
add
xor
cmpsb
add
pop
pop
outsl
and
sub
mov
int3
jo
in
pop
cld
xchg
mov
pop
push
xor
xchg
sbb
jns
or
cmp
mov
push
in
ss
fsubl
xchg
clc
shll
loopne
imul
clc
testb
inc
and
jp
pop
push
inc
test
hlt
jl
testb
cmpsl
imul
add
fldlg2
lretw
and
divl
fcoml
mov
push
ja
jae
cltd
dec
mov
jge
test
mov
pop
adc
pop
in
sarb
and
inc
xor
mov
cmc
nop
adc
cli
mov
pop
mov
stos
cmpsb
push
data16
aas
fmull
push
insb
and
mov
inc
mov
loop
fisubs
and
push
inc
push
lcall
mov
mov
push
cmp
xchg
lret
mov
mov
jno
sub
inc
sbb
repnz
in
push
xchg
les
fwait
sub
incb
insl
lret
mov
xor
into
fcom
loop
cmp
outsb
inc
hlt
xchg
int
pop
ds
outsl
dec
xor
pushf
pop
repnz
sbb
jmp
and
mov
leave
test
arpl
adc
xlat
jle
out
lret
and
aam
add
ret
in
mov
mov
popa
mov
ds
push
push
xor
setp
enter
popf
cmp
jle
in
js
scas
and
aaa
mov
sahf
push
pop
ljmp
mov
lea
cmp
lea
das
das
cmpsb
addl
rcl
or
push
pop
hlt
mov
pop
leave
pop
ss
divb
scas
sbb
int3
push
jb
insl
mov
inc
lods
xchg
fists
sub
push
and
push
mov
aaa
push
movsb
aam
xchg
std
and
je
or
mov
je
inc
out
sub
xchg
pop
and
push
jb
xchg
je
and
xor
hlt
filds
popf
fldcw
sti
movsl
add
and
sbb
pusha
arpl
inc
gs
mov
sub
stos
imul
jns
push
icebp
inc
and
sub
ljmp
mov
mov
xlat
lods
dec
ret
add
xor
and
sti
mov
sub
jmp
xchg
cmp
rcl
cmp
rol
and
in
jns
xor
outsb
or
lcall
jl
push
lods
fcmovnb
pusha
adc
ficomps
out
or
mov
fistpl
js
mov
adcl
dec
xchg
loop
popf
ret
xchg
jl
fldl
push
mov
int3
or
pop
adc
shlb
into
lahf
repz
lods
mov
add
and
lock
adc
xor
add
popf
mov
pop
pop
sbb
dec
jbe
xchg
cmp
subb
mov
mov
popf
mov
mov
xchg
stos
and
inc
cmp
push
je
dec
mov
mov
xchg
xor
pop
das
call
sbb
out
jns
and
in
scas
movsb
fcomps
mov
fists
and
lock
lods
jmp
pop
std
pop
out
les
and
fcomps
mov
mov
mov
lcall
xor
mov
aam
dec
pop
and
ss
loope
outsb
jo
dec
pusha
inc
scas
aaa
stos
sub
add
in
popa
cmp
mov
vmovhps
imul
shll
sub
das
pushl
outsb
add
loope
outsb
xchg
adc
adc
mov
test
aaa
xchg
call
push
dec
enter
xchg
in
jge
cmp
push
or
xchg
sub
std
adc
inc
int3
cmp
ljmp
and
int
mov
stos
or
xor
test
add
iret
in
jmp
fildl
dec
adc
push
mov
daa
addr16
cltd
cmp
adc
ljmp
lods
in
jno
push
push
pop
xor
mov
insb
mull
inc
jo
inc
test
inc
push
lret
int
add
push
stos
pop
inc
pop
sbb
fdivp
mov
jp,pt
insb
cmpsl
vmovntps
sarl
repz
out
push
sbb
fiaddl
mov
jnp
fwait
shll
or
inc
mov
std
movsl
cmc
mov
xchg
adc
xchg
cmpsl
mov
movsb
lea
aam
shrb
mov
xor
jo
xor
fcmovne
push
mov
imul
sbb
dec
ffreep
or
sbb
mov
mov
jo
pop
lret
loop
fcmovnb
inc
pop
test
shrb
aaa
push
fmuls
mov
inc
aad
icebp
or
ss
xchg
push
lret
std
jae
fwait
sub
lods
fldcw
out
and
fstps
mov
test
sub
pop
int
mov
jp
subl
add
mov
loopne
sub
dec
jge
pop
lods
ret
test
sbbb
lods
or
ss
inc
popf
sub
icebp
pop
sbb
shl
imul
pop
jl
cltd
add
lret
add
or
scas
add
inc
mov
ret
xchg
add
add
sahf
mov
mov
and
mov
adc
rolb
xchg
pop
push
ret
mov
sahf
or
pop
movsl
outsl
aas
jns
push
jecxz
daa
fisubrl
scas
dec
stos
sbb
adc
fsincos
jae
imul
dec
roll
adc
movsb
imul
push
mov
mov
adc
or
cli
mov
lock
flds
jecxz
xlat
adc
xor
ret
mov
pop
and
push
cmpsb
lods
vunpcklps
adc
xchg
sbb
cltd
mov
daa
pusha
je
fwait
xchg
lods
xlat
int3
mov
in
jle
fisubrl
pop
sarb
orl
cs
std
in
loopne
or
lret
cs
enter
ret
gs
mov
lcall
sub
jno
sbb
repz
push
aam
mov
sbb
rclb
repz
cmc
sbb
inc
push
and
xchg
push
das
pushf
jmp
lods
jge
leave
fcompl
jno
enter
push
sub
out
out
pop
das
dec
sub
sbb
push
dec
movsb
test
fstpl
mov
lods
hlt
adc
pop
xor
jg
mov
gs
filds
stc
subl
sbb
iret
sti
mov
movups
jmp
xchg
aam
mov
pop
ret
inc
outsb
pop
fwait
inc
shrl
or
inc
insb
mov
punpcklbw
mov
pop
test
ret
clc
jge
aam
sti
add
pop
jmp
sbb
int3
pop
mov
jmp
ds
fistpll
in
sarl
pop
dec
icebp
std
xor
into
dec
xor
push
mov
loop
leave
out
xchg
sar
xchg
xchg
sbb
cwtl
mov
call
push
jecxz
repnz
push
mov
dec
adc
lods
adc
xchg
pop
mov
lods
adc
pushf
inc
incl
pop
mov
sbb
movsb
push
jmp
and
gs
sbb
es
scas
pop
adc
xor
ficompl
je
nop
scas
pop
jp
ljmp
xchg
lcall
add
lods
sub
or
dec
push
mov
sub
sti
repz
movl
pop
imul
js
mov
daa
aaa
aam
jg
sub
imul
sarb
ljmp
push
out
rcrb
lea
pop
xor
xchg
xor
dec
mov
aaa
push
sbb
das
in
jbe
loope
xlat
lret
out
daa
ljmp
dec
xchg
addb
push
or
lcall
xchg
inc
cmp
in
cmp
ret
jge
mov
sbb
jmp
fs
lret
imul
xchg
jne
stc
ror
je
adc
sbb
mov
out
mov
push
rcll
xchg
or
leave
cmp
je
inc
sbb
test
jge
mov
imul
mov
inc
vmovss
and
clc
iret
out
pop
jne
pushf
add
out
inc
sub
sbb
in
ss
jmp
inc
lods
or
enter
jge
pushf
sahf
sub
cmp
data16
insl
jbe
mov
cmp
xor
xchg
repnz
cmpsb
outsb
sub
mov
or
dec
cs
insl
test
sbb
cmp
sub
add
mov
xor
call
push
in
pmuludq
aas
inc
mov
cmpsl
pop
in
popf
xchg
into
fiaddl
or
test
icebp
cld
cmp
adc
push
mov
jmp
shr
and
sub
push
and
into
nop
bound
jae
cvtpi2ps
jnp
jnp
and
add
add
or
sbb
loop
fcomip
gs
aaa
jno
fwait
mov
ret
in
jbe
mov
je
pushf
das
repz
pushf
mov
imul
rorl
rcrl
sar
ret
imul
inc
lds
packssdw
cmp
jecxz
xchg
lea
pusha
jbe
adc
jbe
add
mov
sub
les
fnstcw
jmp
adc
mov
fadds
into
scas
mov
movsb
adcb
fdivrp
mov
xchg
sbbb
jmp
test
test
aas
cmpsl
rcr
fistpll
and
lods
dec
pop
dec
call
lock
clc
push
jl
movsl
dec
push
add
mov
lret
adc
scas
jecxz
mov
cmpb
outsb
addr16
aam
imul
dec
push
out
loope
je
repz
enter
roll
add
mov
imul
add
ja
xor
rorl
dec
push
inc
dec
xchg
fs
loope
loopne
sub
pop
jnp
cmpsl
ja
lret
mov
hlt
aad
add
fwait
test
inc
sub
loop
in
jns
mov
xchg
mov
fnstsw
pop
out
and
scas
mov
pop
inc
inc
mulb
mov
inc
cmpsl
push
and
jp
mov
stos
leave
mov
push
popa
outsl
mov
mov
add
aaa
fwait
push
adc
in
cmp
rorl
sti
xor
mulb
and
xor
insl
sub
mov
inc
arpl
mov
fsubr
pop
enter
fstps
pop
lds
pop
insb
icebp
mov
and
stos
xlat
fsubl
jp
lcall
pop
sbb
sub
xchg
dec
mov
mov
outsl
mov
pushf
cmp
xchg
mov
or
add
jl
scas
xor
adc
push
rclb
sub
inc
add
stos
jbe
jns
leave
push
scas
xor
scas
add
jp
dec
dec
cmp
pop
sbb
fdivr
dec
enter
mov
cs
jns
jae
mov
xor
insb
cld
mov
jns
fdiv
iret
jo
lock
push
inc
loop
and
enter
cmp
mov
aas
sub
pop
pop
xor
sub
cwtl
int
push
test
loopne
inc
and
jbe
je
mov
push
out
loopne
jb
inc
inc
mov
fdivs
sub
jno
or
adc
mov
aad
lock
les
shl
dec
mov
sub
jb
pop
call
decb
push
jo
dec
jmp
jl
stos
add
adc
int3
std
in
nop
pushl
sub
stos
jns
imul
or
pop
cmp
outsb
jae
xor
sub
mov
rclb
leave
fildll
mov
mov
dec
rcrl
add
jb
aas
and
xchg
in
mov
clc
scas
shrl
mov
xchg
push
cltd
insl
dec
jg
lea
pop
mov
jg
imul
and
inc
or
fdivrs
sbb
xchg
lcall
jb
pop
bound
push
imul
shll
inc
stos
loopne
add
cmpl
lods
mov
fucomp
bound
lods
push
js
and
xchg
cmpsl
int3
add
leave
jno
in
orl
sub
pushf
test
inc
imul
or
cmp
dec
repnz
mov
or
test
call
add
imul
cmp
lock
inc
mov
sahf
dec
lods
imul
jb
xor
inc
sbb
loop
fcomi
mov
lea
test
out
sub
mov
adc
in
rol
popf
xchg
sbb
or
or
dec
mov
mov
xor
adc
pop
and
xchg
or
mull
and
scas
dec
xchg
fstpl
xlat
cmp
pop
iret
cli
add
pusha
dec
cld
icebp
xchg
add
fsubl
scas
inc
fnstcw
aaa
repnz
lods
xor
shl
dec
ljmp
out
call
jns
call
test
sbb
arpl
loopne
outsl
or
insb
sbb
xchg
fdivrl
lahf
cmpsb
sar
dec
mov
mov
movsb
jno
imul
sahf
ret
push
mov
in
nop
cmpsb
mov
jg
jmp
pop
push
push
push
cmc
push
sbb
gs
test
jae
xchg
fimull
pop
push
loopne
frstor
jnp
ja
push
push
jge
call
mov
sbb
enter
adc
mov
es
xor
sti
fwait
nop
movsb
subl
pop
pop
mov
notl
ja
mov
lcall
cmpsb
mov
mov
dec
mov
xor
lods
or
loope
and
xlat
fdivl
add
pop
mov
aas
push
movsl
outsl
sub
adc
sarl
in
push
adc
or
dec
xor
push
scas
cmp
inc
and
call
cmp
mov
flds
data16
dec
mov
cmp
xchg
sub
aas
jle
fisubrs
inc
sbb
lods
fcomps
ljmp
fs
sub
clc
ret
or
out
daa
and
int
dec
and
jbe
dec
cmp
add
popf
aam
sti
jb
xchg
data16
pop
pop
cmp
push
ss
out
lea
xchg
dec
inc
popf
std
in
int3
push
jp
adc
aaa
xor
adcb
or
jl
mov
mov
test
push
sub
cmp
fcoml
je
imul
mov
mov
mov
cmp
addb
xchg
add
pop
cmp
sahf
test
jbe
sub
jne
popf
lock
imul
ret
out
out
xorb
stc
xor
cmp
fnstsw
adc
es
cmpsl
ret
xor
sbb
xchg
popa
xchg
add
dec
mov
repnz
dec
xchg
addr16
ds
lret
stos
sbb
mov
repz
xchg
mov
push
stc
pop
and
push
adc
cwtl
add
rcrb
lcall
sub
adc
ds
ja
sbb
sbb
ret
ret
insl
or
lcall
jl
and
movsb
and
stc
loop
orl
jno
and
nop
mov
lods
pushf
inc
test
arpl
push
mov
data16
sbb
jnp
popa
out
in
xor
cltd
sbb
pop
jne
js
push
shlb
shrb
xchg
push
xor
jb
mov
cmpsl
or
imul
sbb
push
pusha
cs
add
stos
outsb
cwtl
pop
imul
imul
jp
sub
jle
imul
adc
daa
pop
xchg
xor
in
ret
loope
adc
mov
pop
jns
sti
mov
jle
cmpsb
cs
insb
cmp
pop
loop
in
push
add
loope
inc
inc
dec
cmc
lds
xchg
repz
lahf
mov
popf
rorl
jnp
repnz
or
arpl
gs
sbb
pop
test
insl
loop
xchg
lret
test
push
addr16
daa
mov
push
xor
mov
fstps
xchg
sarb
insl
js
jno
lods
in
add
jl
mov
lods
dec
outsb
mov
and
lret
mov
mov
sbb
sarl
ljmp
push
cmpsl
and
ljmp
int
popf
mov
fdiv
dec
and
mov
cmp
test
dec
push
sub
inc
scas
inc
ret
iret
or
daa
ds
daa
sub
dec
out
mov
out
mov
cmp
push
mov
cli
jl
lret
std
mov
mov
mov
pop
jmp
dec
outsb
aaa
push
lock
test
imul
push
lods
cmp
fisubs
add
out
jle
dec
jns
push
stos
mov
repz
dec
jns
cli
jle
bound
js
adc
leave
push
fadd
or
ret
xchg
add
les
stos
dec
ret
jmp
shlb
or
jnp
and
jmp
xor
fistl
repz
js
fstl
xchg
call
repz
push
fcoml
es
imull
ja
push
mov
sbb
adc
js
push
shl
scas
push
mov
test
inc
dec
bound
insl
add
imul
roll
orb
outsl
shrl
out
or
jb
rcl
cld
sub
jb
sahf
mulb
test
incb
sub
jmp
or
sub
ret
lea
inc
loope
add
stos
fbld
mov
not
inc
xchg
inc
mov
leave
push
lret
loope
mov
sub
test
adc
jg
sbb
sub
xchg
and
cmc
cld
sarb
push
push
sti
lret
push
divl
sarl
data16
sub
shrb
pusha
stos
shll
xchg
adc
es
fwait
loope
rclb
insl
call
out
cli
dec
xchg
xlat
movsl
push
fiaddl
jle
xor
leave
sbb
shlb
xor
add
inc
sub
jae
sti
lods
or
pusha
push
lret
cmp
daa
xchg
xor
imul
icebp
test
lahf
xchg
addl
xlat
lret
add
iret
lock
insl
push
lcall
sub
push
and
into
lret
notl
out
sbb
cmp
movl
fildl
push
fwait
pop
je
jecxz
insl
xchg
scas
fsubr
inc
loopne
pushf
dec
mov
add
sbb
inc
int
rcr
push
data16
mov
rcrb
dec
cltd
ret
movsl
popf
add
scas
or
call
xor
xchg
jbe
imul
icebp
movsl
outsb
xchg
insl
aas
push
out
mov
or
ud1
mov
push
mov
sarb
call
cmpb
cmp
pusha
imul
push
pushf
pop
std
cwtl
jbe
mov
dec
mov
mov
push
cmp
mov
out
mov
jl
mov
ds
lock
ret
lret
lret
inc
sbb
pop
xchg
or
or
out
adc
mov
push
mov
movsb
add
mov
aas
jbe
xchg
stc
bound
jnp
je
pushf
es
loop
jmp
data16
std
dec
push
daa
bound
xchg
xchg
insl
jg
mov
aam
mov
rol
push
lea
fcmovbe
dec
stos
iret
xlat
push
pop
popf
gs
rorl
cmp
popl
pusha
mov
std
fidivs
sarl
xor
mov
hlt
movsl
mov
mov
sbb
pop
inc
cmpsl
push
cwtl
xchg
xlat
add
out
mov
jmp
or
clc
cwtl
pop
aas
add
sub
sbb
fwait
cmpsl
push
fistpll
push
mov
sbb
int
mov
test
xchg
mov
shr
dec
pop
aam
pop
movsl
sub
dec
loope
mov
dec
xchg
xor
jae
lret
cmp
test
out
mov
hlt
or
std
repnz
add
rcr
into
xor
add
sbb
repnz
addr16
lds
cmp
cld
mov
jbe,pt
cld
pop
js
jge
cmp
fdivrl
mov
dec
lea
jmp
xlat
pop
push
adc
ja
lcall
aas
in
int
cmp
jb
adc
push
cmp
fsubp
arpl
pop
out
insl
stos
pop
jmp
sub
push
movaps
orl
iret
decl
mov
pop
cmpsb
pop
negl
mov
lds
addl
sahf
jne
jl
out
shll
cmpsl
lock
adc
inc
and
xor
and
xlat
gs
mov
loopne
test
pop
nop
or
mov
int3
test
cmpsl
inc
push
arpl
xchg
lods
xchg
push
push
adc
or
dec
xchg
add
mov
jp
test
xchg
xchg
cmp
jp
push
sbb
data16
wbinvd
in
push
push
jno
dec
aam
or
icebp
es
imul
push
xchg
pop
jne
lods
leave
test
fdivrs
in
popa
out
ja
mov
test
arpl
inc
sub
xor
add
pop
jmp
or
dec
jl
and
mov
in
sbb
int
fdivrp
pop
test
lret
and
popa
inc
ja
xor
or
sbb
mov
aas
out
mov
xchg
cltd
addb
fs
xor
outsl
stos
int3
daa
push
xchg
pop
lcall
jecxz
inc
dec
xor
movsb
push
sbb
dec
push
inc
cmpsb
adc
insl
mov
cmp
aam
loop
fistpl
lahf
ret
std
pop
fistpll
andl
repnz
adc
adc
adc
xchg
cmpsl
cli
xchg
jno
outsb
push
xor
out
xor
push
insb
fisubrs
mov
out
cwtl
leave
jno
rol
das
out
mov
adc
lahf
and
pop
inc
push
out
fs
inc
fists
pop
movsl
mov
jmp
pop
and
cwtl
pushw
mov
sbbl
xor
loope
mov
arpl
cmc
daa
sbb
dec
sub
cli
loop
outsb
in
iret
sub
xor
mov
pushf
pusha
jmp
inc
inc
pop
xchg
es
jnp
mov
lret
sbb
loope
pop
jne
xchg
out
repz
test
mov
xor
and
lds
leave
cmp
dec
in
inc
lret
cmc
jbe
mov
xchg
push
jae
jo
mov
push
mov
push
mov
pop
cltd
pop
cmpsb
cmp
ds
pusha
stos
jle
shlb
lcall
add
shrb
cmp
aad
push
sbb
jmp
mov
aad
jge
inc
cmp
sbb
xchg
push
jge
mov
dec
jnp
fdivrl
loopne
adc
jne
sarl
xchg
push
push
ds
icebp
ja
dec
sbb
loope
int
xorb
push
xor
ljmp
push
and
into
lea
loopne
push
dec
mov
pop
cltd
and
mov
xor
int3
sbb
or
rorb
bswap
mov
mov
mov
mov
das
gs
mov
cld
pop
out
adcb
xorl
mov
in
dec
sbb
inc
or
xchg
or
test
data16
inc
lods
lds
xor
pop
adc
sub
int
lea
popf
jne
loop
jno
out
adc
out
pop
mov
insl
inc
dec
cmpsl
jo
cmp
sahf
hlt
mov
xor
les
scas
xor
sub
cmpsb
movsb
movsl
das
movsl
divl
mov
add
enter
and
dec
mov
shrb
popa
jns
test
lret
jno
cwtl
jge
pop
hlt
in
xor
incb
xchg
adc
gs
adc
in
xor
xchg
mov
jp
lcall
es
jno
inc
dec
sub
rcrb
mov
and
adc
pop
pusha
je
fisttpll
sbb
sub
cmp
ret
rcrb
repz
fucom
sub
shlb
xchg
push
mov
scas
fldl
push
loopne
out
aad
mov
pusha
sti
pop
ja
mov
andb
xchg
sbb
mov
sbb
sbb
shrb
sbb
dec
jge
in
inc
bound
scas
mov
enter
lcall
enter
ja
pop
mov
aaa
add
punpckldq
push
sarl
das
and
push
ss
repz
or
shll
inc
pop
jne
icebp
xchg
data16
add
test
xchg
rclb
cmc
in
fsub
and
or
push
mov
add
insl
cs
mov
fildll
scas
fcomps
movsb
xlat
jecxz
cmp
flds
xchg
inc
fsts
int
lret
in
mov
bound
mov
hlt
pop
aas
iret
push
daa
dec
insb
jmp
inc
and
xor
sbb
lahf
pop
in
pop
or
loopne
push
imul
xor
push
ficomps
sbb
std
les
sub
or
les
jo
movsl
push
jmp
sti
inc
mov
insb
leave
jne
dec
push
repz
jge
aad
mov
jp
push
nop
mov
out
adc
inc
and
sub
mov
fidivs
dec
mov
adc
jg
or
push
xor
rcr
add
add
enter
mov
xor
add
cld
rcrb
shl
xchg
and
adc
xchg
daa
add
or
cmc
loopne
pop
clc
out
push
dec
dec
repnz
out
cmp
je
push
in
inc
inc
add
push
rcrb
adc
sub
and
clc
js
jns
out
fcoms
in
cwtl
jge
shrl
jno
insl
jge
inc
xor
jne
xor
or
mov
jp
jmp
xchg
pop
popf
addb
xchg
jne
popa
mov
pop
jle
and
insb
pop
add
sbb
sub
aas
mov
xchg
xchg
ds
fisubl
lds
pinsrw
cli
xor
mov
inc
imul
popa
hlt
shrl
xchg
pop
subl
xor
mov
mov
in
xchg
mov
addr16
cmp
add
cmp
rolb
pop
xchg
test
mov
hlt
test
nop
loope
add
adc
pop
testb
jns
orb
jmp
pop
push
in
cltd
mov
fistpll
scas
adc
fcoms
pop
pop
push
inc
cmpsl
or
call
aas
lds
fs
insl
cli
sbb
lahf
pop
xor
xor
test
cmc
push
mul
jo
jecxz
xor
loopne
xor
ret
xor
popa
test
and
cmp
push
repz
mov
push
leave
stos
hlt
fildl
scas
hlt
and
and
aam
outsl
pop
orb
icebp
sub
dec
mov
ljmp
mov
add
mov
fstps
int3
in
imul
mov
das
insb
add
xchg
add
mov
outsl
and
daa
xchg
es
or
sahf
mov
loopne
cmp
notl
cmp
mov
jge
mov
js
cmpsl
mov
dec
xchg
and
dec
add
fs
fistps
sahf
cwtl
aas
jecxz
dec
arpl
jo
or
jl
pop
cmc
mov
jmp
adc
mov
movsb
lret
ljmp
fimull
lock
fdivr
mov
lds
ljmp
mov
pop
lret
mov
call
testb
cmpsl
lret
leave
pusha
add
scas
add
ret
scas
sbb
and
push
aad
pop
mull
nop
or
stc
cli
mov
pushf
pop
jp
xor
adc
lret
adc
cs
cmp
hlt
outsl
insb
dec
enter
int3
clc
out
std
sbb
xchg
dec
in
cmp
iret
cmp
mov
out
or
std
push
jecxz
add
sahf
xchg
scas
push
mov
call
mov
out
fcmovb
push
adcb
lods
jne
sub
jb
adc
fcompl
push
dec
cld
mov
iret
sub
or
aad
imull
adc
push
pusha
push
and
inc
xor
sahf
push
jno
clc
sub
adc
out
xchg
inc
xlat
clc
jp
loope
dec
stos
jae
testb
jnp
lods
test
ret
inc
xchg
pop
mov
mov
mov
add
loop
add
mov
mov
xor
push
fwait
jbe
add
dec
icebp
dec
jle
cmp
and
sbb
insb
cwtl
pushf
mov
dec
jge
xchg
cmpl
loope
jno
dec
iret
xchg
or
jns
inc
push
mov
ljmp
mov
addr16
xchg
hlt
mov
xchg
std
mov
mov
cli
add
int
inc
pop
loopne
jbe
cmpsl
jne
mov
mov
repz
lahf
jg
cli
imul
push
lcall
in
cmpsb
in
add
insb
les
jns
jp
jp
mov
out
ja
scas
lcall
sahf
inc
iret
loop
icebp
push
or
sti
ds
int3
mov
loope
sub
jge
outsb
daa
push
movsb
subb
xor
inc
jmp
cmp
ljmp
fwait
add
mov
or
mov
or
cmp
xlat
or
in
rcrb
add
jo
inc
jo
loope
mov
mov
je
and
pop
jle
adc
xor
int
and
dec
pop
push
jae
loop
sub
outsb
nop
push
xchg
push
xchg
pop
mov
pop
cmp
mov
xor
xchg
adc
cwtl
add
dec
cmp
fwait
jl
xor
in
in
movsl
dec
add
add
push
and
dec
into
jb
mov
or
std
aad
stos
or
dec
add
cs
test
mov
mov
daa
mov
mov
or
fldt
jmp
xor
or
stos
icebp
xchg
jbe
mov
test
sbb
pop
or
ficoml
push
aam
sysexit
xor
fs
mov
push
push
mov
shlb
push
outsl
dec
inc
sbb
pop
fstpl
dec
xchg
inc
cmc
pusha
sub
xchg
data16
cltd
test
push
pop
jo
sub
xchg
lods
movl
pop
push
loope
mov
mov
jle
int
inc
add
mov
mov
insl
fildll
hlt
dec
clc
pop
pusha
dec
clc
mov
mov
nop
pop
mov
fstpl
pop
add
or
clc
imul
mov
and
cmp
shlb
cld
xor
sarl
sbb
dec
jnp
mov
xchg
pop
dec
cmpb
sbb
movsl
cmpb
es
outsl
std
rcl
mov
cmpsl
pop
mov
in
leave
pop
mov
add
imul
in
sar
fcomi
lret
dec
scas
popa
cwtl
and
jb
inc
inc
in
movsb
adc
rorl
arpl
lahf
pop
movsb
push
lock
iret
insl
jb
pop
stc
xchg
adcl
stos
and
pop
jo
ljmp
mov
sbb
bound
jle
ljmp
jp
xchg
adc
jne
in
mov
cmp
movsb
push
and
add
mov
pushf
xor
push
xor
hlt
andb
or
lods
inc
aaa
inc
xor
lret
lahf
dec
cmpb
cs
push
pop
add
pushf
iret
jmp
mov
push
cmpsl
in
mov
mov
mov
loopne
mov
adc
cmc
cmpsb
xchg
fwait
stos
mov
xchg
enter
add
sub
gs
or
test
inc
test
iret
dec
xlat
lods
cmp
test
jb
inc
aad
repz
sub
rcrb
and
sbb
popf
mov
xchg
mov
mov
adc
loopne
mov
movsl
pop
push
aaa
push
mov
leave
outsb
push
mov
sub
rorb
test
sbb
stos
movsb
jmp
sbbb
dec
loope
mov
test
mov
pop
pusha
out
mov
sbb
cld
gs
jae
pop
pop
or
fisttpl
ds
loop
xor
ja
int3
frstor
mov
pop
pop
mov
in
aas
inc
jmp
push
lcall
mov
push
stos
mov
loop
and
cwtl
mov
hlt
loopne
pop
xor
stos
cmp
jae
fbstp
and
jl
push
inc
dec
mov
pop
lods
cmp
cltd
xor
adc
xor
out
jbe
subb
idiv
std
dec
es
leave
adc
sbb
negl
fwait
ljmp
sub
or
dec
insl
xchg
mov
jae
sbb
sahf
mov
pop
imull
outsb
jecxz
ret
in
push
jno
mov
mov
hlt
xchg
pop
mov
in
and
inc
pop
idivl
pop
fs
dec
lcall
adc
and
fisttpll
mull
iret
cmp
jne
jl
push
pop
adc
cmp
aam
pop
hlt
test
lds
dec
push
and
xor
mov
test
jp
sub
inc
rclb
cli
cmovae
in
cmp
dec
in
fdiv
mov
loop
mov
enter
xlat
sub
pop
mov
ja
jmp
push
add
in
jle
out
sub
das
dec
or
lahf
push
xchg
adc
xchg
lret
test
pushf
sbb
mov
fstl
xchg
mov
call
inc
or
add
vunpcklps
dec
popf
cmp
adc
or
lea
sub
mov
push
sti
rclb
fwait
ret
aaa
daa
cmp
jno
mov
roll
xor
bound
mov
inc
int3
insb
mov
movsl
lock
or
ret
adc
mov
sti
mov
roll
hlt
pop
cmp
daa
adc
dec
inc
ljmp
jne
sub
sub
fadd
mov
and
gs
jl
ret
cltd
sti
ja
jge
fldln2
mov
stos
push
lock
rolb
out
imul
cmovp
lcall
sbb
cmpsb
dec
jnp
in
jp
std
int3
push
mov
adc
lea
jne
movsb
mov
fstps
push
sub
dec
pop
xorb
and
sub
pop
pop
xchg
inc
shl
pop
add
push
xchg
pop
ljmp
xor
mov
inc
mov
cmc
add
es
sti
aas
xor
xchg
cltd
mov
jecxz
mov
cmp
mov
jnp
lret
stos
dec
pop
and
subl
test
fxch
sbb
aad
ret
sti
into
mov
sbb
popf
mov
fadds
imul
push
xchg
inc
or
repnz
ljmp
stos
clc
sbb
loope
out
jl
lock
mov
and
cli
repnz
or
mov
push
les
jnp
sbb
mov
out
mov
hlt
push
data16
dec
xchg
mov
push
inc
scas
das
arpl
ja
je
movsb
sbb
fistl
nop
js
xor
sbb
jmp
push
iret
test
push
movsb
stos
sub
rcr
mov
je
mov
pop
push
inc
xchg
xchg
iret
mov
push
push
mov
inc
jp
insb
mov
add
dec
push
push
xor
or
loop
push
xor
mov
sbbl
jecxz
nop
jb
xchg
mov
sti
cmp
push
sub
loope
aaa
and
adc
aas
jbe
cli
mov
movsl
push
push
std
das
or
shlb
pop
aaa
repnz
imul
cld
aad
inc
pop
xor
aam
es
push
out
call
push
repz
push
shlb
or
push
ss
dec
hlt
outsb
fidivs
subl
push
jp
iret
int
lcall
mov
push
dec
sbb
xor
hlt
jmp
mov
xchg
adc
and
aad
gs
addr16
sar
cmpsl
pop
sub
cmp
ds
jge
in
stos
pop
cmpb
aas
lcall
insb
sarl
out
lahf
mov
ljmp
into
sbb
adc
std
or
push
xchg
out
filds
push
add
cs
imul
je
pop
jl
and
jle
add
xor
aas
out
mov
test
adc
das
icebp
scas
push
and
push
loope
sbb
inc
sbb
pop
divb
rcl
cmp
push
ss
mov
imulb
pushf
xor
or
leave
arpl
insl
aas
push
lock
dec
push
aam
xor
test
iret
mov
lret
nop
jae
fisubl
sbbb
mov
inc
aam
out
in
into
sbb
mov
adc
dec
xchg
cli
rclb
call
and
loop
loope
jns
mov
adc
lcall
inc
and
sarb
inc
mov
jnp
out
repnz
dec
lods
stc
or
enter
inc
shll
out
mov
push
pop
test
loope
and
jb
fadd
pushf
add
test
mov
cmpsb
jge
xchg
sbb
push
jae
test
data16
cs
and
mov
xchg
jb
jg
ret
lock
xchg
sahf
add
pop
xor
push
inc
sbb
pop
xchg
setae
mov
and
frstor
ljmp
sarb
ja
inc
mov
mov
dec
adc
cmp
lret
xor
nop
jle
jns
test
add
addr16
mov
pop
pop
push
sahf
mov
loope
dec
dec
repnz
jl
leave
fwait
icebp
pop
push
dec
and
add
jecxz
inc
push
lret
fildl
add
add
ss
cli
es
pop
sbb
jle
mov
xchg
and
fbstp
into
push
jae
or
shl
jae
jbe
nop
mov
jge
pop
cmp
lock
jbe
cli
inc
xchg
push
test
inc
push
lea
jl
test
fwait
push
push
mov
or
xchg
aad
ss
mov
pop
dec
mov
add
mov
and
lods
add
jno
pushf
jg
lcall
fs
sbb
pop
stos
in
push
fistpll
xchg
out
mov
nop
outsl
fadd
mov
imull
cmp
adc
add
push
shlb
fwait
xor
mov
and
int3
mov
sub
iret
jnp
or
std
aaa
sub
sbb
mov
stos
mov
mov
jp
inc
inc
ret
outsb
outsl
repz
std
and
sti
sub
les
inc
stos
jp
pop
aam
lahf
je
add
movb
outsb
or
xchg
xchg
mov
das
mov
imul
add
lret
add
push
xchg
or
out
cld
bound
xchg
sub
sbb
pop
xchg
das
pushf
idiv
sbbb
lods
clc
fimuls
jge
out
test
jne
mov
test
test
ds
outsl
jge
xchg
and
xchg
and
lea
fwait
stos
pop
jecxz
dec
and
out
repz
sbb
addr16
mov
outsb
outsl
subl
adc
sub
ret
pusha
orb
and
xchg
sub
ja
adc
cmp
cli
lods
mov
and
jbe
jmp
icebp
stc
out
fcomip
inc
lcall
or
hlt
enter
mov
mov
xchg
mov
sbb
or
mov
flds
shrl
repz
mov
inc
rcr
rcll
jge
hlt
pop
adc
jle
mov
mov
inc
or
mov
imul
xor
xchg
das
mov
scas
or
ret
pop
mov
pushf
xor
inc
testl
push
cmp
arpl
ss
fadds
sub
and
mov
fcmove
adc
test
pusha
jns
mov
filds
xchg
pop
popf
sub
sub
sub
pop
addr16
aad
faddl
int3
dec
movsl
addr16
inc
xor
and
cmp
dec
inc
ret
jl
inc
xchg
in
add
cld
cli
rolb
xchg
lods
fiadds
popf
scas
jno
xor
aad
pop
in
xchg
je
rorl
scas
js
sbb
inc
ss
fnstenv
sub
movb
xchg
xchg
mov
dec
lock
adc
inc
rdmsr
lods
mov
sar
cs
inc
std
sbb
cli
inc
notb
xor
add
cmp
add
and
hlt
frstor
in
lea
cwtl
push
adc
jmp
cmp
pop
dec
lods
gs
outsl
mov
js
xchg
insl
movsb
cmpl
ljmp
cmp
in
push
ds
rol
pop
idiv
and
mov
lahf
lcall
iret
shr
or
jecxz
call
or
adc
add
iret
sbb
sub
filds
aad
sub
cmp
jecxz
cmc
sub
pop
mov
stc
pop
in
jne
adc
xor
sub
lods
xlat
rcll
movsb
inc
aas
imul
int
fwait
xor
xchg
jp
add
mov
bound
add
bound
pop
popa
mov
inc
xchg
shlb
xor
stos
ficoml
sub
mov
out
push
mov
inc
jne
jbe
mov
sarl
mov
dec
add
jns
mov
scas
dec
pusha
mov
push
xchg
js
pop
mov
cmp
ret
popf
aaa
xchg
int
iret
pop
stos
fs
fs
nop
repz
sub
mov
xchg
lock
sub
popl
fs
add
mov
or
xchg
pop
cld
mov
push
orl
pop
loope
push
arpl
inc
out
jl
test
pop
popa
push
dec
cs
adc
iret
inc
cmp
jne
adc
push
cmp
mov
daa
jg
and
xchg
andb
sbb
out
adc
aaa
cmp
jecxz
and
idivb
cs
sbb
mov
inc
push
out
pop
dec
in
lock
scas
cs
es
mov
jl
in
cmp
sbb
jns
lods
dec
add
aas
mov
pushf
repz
mov
and
mov
mov
pop
add
ss
xchg
push
mov
sbb
fsubs
jnp
sbb
push
push
dec
ret
test
mov
lea
and
or
fisttps
mov
pop
out
jecxz
xorl
shrl
out
addr16
and
inc
inc
in
ret
mov
inc
mov
xlat
sti
mov
clc
js
inc
jbe
aad
nop
je
outsl
sbb
lret
jmp
lahf
push
cmp
jmp
cmp
cmp
cmp
out
sub
je
add
jno
push
out
and
inc
dec
aad
rol
adc
add
je,pt
inc
cltd
cmp
push
mov
adc
sbb
cwtl
jno
outsl
inc
daa
cmp
jo
push
in
stc
loopne
fsub
push
jp
inc
push
out
adc
je
jns
mov
jmp
mov
sbb
rcr
out
imul
out
inc
stc
mov
inc
xchg
mov
dec
pop
sbb
lds
sbbl
add
jns
mov
jle
dec
fwait
mov
xchg
add
push
xchg
scas
xchg
cmp
int3
loopne
pushf
add
cmp
mov
stc
ljmp
cmp
scas
in
sub
fistl
fwait
aaa
mov
loopne
repnz
repz
or
fxsave
mov
mov
sarl
push
mov
jg
mov
inc
jno
add
test
leave
jo
call
sub
sbb
mov
push
stos
fwait
adc
jnp
add
add
jns
hlt
cmp
lret
int
popf
scas
add
fisubrl
dec
dec
cli
in
lods
loopne
sbb
pop
adc
adcb
stc
sbbl
call
int3
mov
sbb
shl
cld
or
push
je
adc
popf
push
dec
lds
and
or
cmp
cmp
mov
sarb
daa
fs
pusha
cmpsb
outsl
add
push
xorl
lods
sub
pop
fcmovu
ret
aam
js
movsl
jge
lock
jp
mov
xor
push
repz
jmp
ja
in
cs
adc
cmc
mov
dec
adc
or
call
fidivrl
in
push
stos
ret
mov
push
mov
push
es
lcall
cmpl
dec
mov
loope
xor
sub
adc
lods
fdivl
or
and
repnz
and
scas
and
loop
adc
ja
inc
jne
or
mov
insb
jl
pop
mov
sbbl
push
call
iret
pop
std
dec
jae
inc
fcmovne
iret
mov
js
mov
cmp
fwait
outsb
out
ret
rcr
test
sbb
jecxz
enter
jns
jno
cmp
out
inc
jb
sarl
fisubrl
fidivrs
fcompl
ret
cmp
xchg
int
scas
adc
or
imul
daa
cmc
nop
popl
outsb
pop
and
or
mov
in
sbb
gs
or
scas
or
jmp
sarl
add
cwtl
xchg
aas
addl
repz
jg
shlb
setae
test
cmpsl
or
xlat
add
imul
mov
push
inc
repnz
or
cltd
movsb
jnp
je
std
pop
jecxz
jno,pt
movsl
repz
add
jp
ficoms
movsb
loope
cmpsb
cmp
xchg
sbbb
lds
lods
lea
push
test
test
jl
pop
xchg
into
rcll
repz
mov
fstl
faddl
ljmp
imul
das
scas
pop
sub
stos
push
cld
pop
mov
scas
stos
cmp
daa
scas
adc
add
and
sbb
jbe
and
inc
and
xlat
add
cmpsb
lock
sahf
loope
fs
std
xchg
add
pop
fcompl
popf
push
sub
enter
in
lahf
sti
out
lahf
ds
pop
rcr
outsl
ret
test
jae
jo
andb
xor
iret
mov
ffree
xor
inc
std
xor
cmp
imul
cwtl
dec
scas
packuswb
xor
sub
iret
cmp
stos
pop
sub
ja
add
in
data16
xchg
cmp
loop
mov
pop
or
outsl
mov
inc
lods
repz
add
jmp
call
loopne
fidivrl
xor
dec
test
mov
adc
sbb
jae
lret
insl
inc
and
rorb
mov
int
daa
scas
mov
loope
xchg
stc
in
fidivrl
out
jl
int
andb
lahf
fisubl
out
xrelease
sub
icebp
aam
ret
push
cmp
jb
push
mov
movsb
push
decb
xchg
mull
or
xchg
sbb
daa
aas
cmp
sub
gs
popf
or
or
outsb
jo
aas
dec
jb
xchg
dec
gs
cmpsb
sahf
mov
jb
stc
fnsave
in
test
clc
sub
jae
jge
mov
test
jae
xchg
mov
lahf
out
mov
dec
loopne
or
mov
lcall
sbb
and
dec
jl
add
data16
dec
orl
pop
cs
lahf
in
cmp
mov
xchg
mov
lods
std
pop
lahf
icebp
pushf
and
xchg
lret
adcb
mov
jp
adc
ds
subb
dec
in
cmp
push
bound
xor
mov
inc
add
mov
inc
cmp
aam
clc
je
ret
mov
dec
xchg
dec
fsts
add
and
mov
adc
outsb
popf
dec
pop
xor
adc
jmp
gs
lret
sti
pop
fxch
cmp
out
data16
frstpm(287
sbb
mov
cmp
pop
xchg
sbb
pop
mov
sbb
inc
dec
mov
cli
jb
comiss
outsl
out
and
jp
and
jmp
in
add
or
jmp
cmc
add
int3
popa
mov
sbb
insl
sub
imul
jne
xchg
cltd
jl
flds
test
jge
stc
jp
loope
pop
sti
insl
loopne
pop
xchg
sbb
sahf
cmpsb
mov
ja
push
pop
std
test
push
outsl
sbb
in
xchg
mov
in
xchg
call
mov
addl
pop
lahf
jmp
xchg
enter
icebp
inc
out
push
testb
pop
mov
push
push
imul
popl
jle
inc
pop
adc
sub
cmpsb
lcall
sub
ljmp
stc
mov
fwait
mov
xor
inc
ja
xchg
dec
mov
dec
sbb
adc
add
mov
out
stc
sbb
and
inc
mov
xorl
xrelease
pop
outsl
shrb
outsl
mov
jmp
adc
pop
cmpsl
call
ret
push
call
sub
insl
xor
jmp
hlt
mov
aas
iret
push
mov
mov
push
scas
insb
mov
lods
int
pusha
out
push
sbb
jge
mov
into
testb
loopne
xor
jle
adc
call
dec
mov
inc
mov
and
lret
enter
clc
fimuls
in
adc
push
idivb
push
inc
mov
sub
data16
mov
jns
adc
mov
mov
sub
bnd
push
mov
xor
push
cmpsl
xor
pushf
lods
inc
div
inc
push
cmp
mov
or
inc
in
ficoms
or
filds
mov
jo
mov
imul
test
scas
decb
push
ds
pop
adc
push
repnz
dec
sbb
les
push
push
outsb
mov
lahf
arpl
icebp
rol
sub
sbbb
popa
or
scas
sbb
push
loopne
cmp
movsl
les
and
das
imul
gs
jle
dec
cld
or
dec
imul
or
pop
mov
xor
mov
popf
cltd
push
xchg
loope
scas
dec
or
push
cmp
xor
push
dec
icebp
or
mov
xchg
movsl
adc
push
or
lret
outsb
hlt
ficompl
inc
mov
push
ja
test
mov
lahf
ret
jnp
jb
push
adc
sahf
clc
mov
je
xor
in
test
jae
lret
xlat
sbbb
punpcklbw
jnp
scas
sahf
hlt
in
scas
add
mov
pop
das
inc
lret
int
dec
xchg
lret
loop
mov
mov
cmp
dec
push
xlat
aad
fsubp
int3
mov
into
jecxz
sbb
xchg
or
xor
sahf
pop
popa
pop
adc
pop
jb
rorb
bound
popa
mov
push
push
add
push
call
daa
jg
sbb
cmpsl
and
sti
cmp
push
cmpsl
cmpsb
in
xchg
imull
sbb
call
and
xchg
inc
or
pop
pmaddwd
pop
add
scas
push
test
push
je
jae
xchg
outsl
out
cmpsl
frstor
mov
pushl
in
popa
jle
loop
mull
dec
lods
or
cli
push
jle
pop
mov
inc
inc
lods
stos
ret
cmp
dec
es
adc
xor
sub
push
fmuls
out
pop
jmp
inc
push
ds
call
lcall
or
lret
cwtl
add
scas
leave
mov
arpl
outsl
rolb
ss
inc
cld
rorl
lods
in
push
lea
ss
xchg
call
pop
sbbb
xor
mov
xor
sbb
aad
sub
sbb
mov
inc
imul
repnz
pop
sbb
fs
xchg
mov
dec
inc
ret
mov
dec
lahf
rcll
sub
repnz
sahf
fcoml
adc
mov
in
cmp
sub
outsl
push
xlat
sarb
sub
add
jno
sub
sbb
jmp
xchg
int
sbb
xor
ljmp
xchg
pop
adc
pop
jb
cmp
push
ja
repz
push
mov
mov
and
add
scas
and
and
lods
xchg
cmp
stos
stos
and
fwait
pop
sub
push
jne
popf
out
push
cmp
enter
sbb
out
inc
enter
icebp
mov
ds
pop
adcl
sar
fbld
xchg
movsb
addb
jnp
js
les
dec
in
mov
or
mov
addr16
gs
pop
or
mov
jnp
jmp
adc
imul
insl
mov
sub
scas
inc
das
push
test
test
popa
rolb
clc
xchg
in
jle
fildl
fstpl
cmpsl
add
out
repz
mov
aad
dec
bound
jb
aas
adc
lods
insb
incl
out
ss
xor
js
inc
dec
out
lods
lods
add
dec
jae
test
adc
scas
mov
mov
dec
movsb
cmp
lahf
mov
dec
ret
daa
pop
push
in
xchg
jnp
movsl
shll
push
loop
fwait
push
leave
jecxz
inc
and
in
bound
pop
jno
jmp
out
sbb
insb
cs
inc
fwait
pop
add
mov
sub
mov
lds
dec
stos
xor
lea
jg
sbb
clc
push
sbb
nop
inc
xor
xor
push
daa
stos
insl
flds
pop
out
inc
fistpll
outsl
pop
jmp
cmpsl
jbe
lret
mov
mov
cmp
incl
jno
repz
das
pop
test
ret
incl
adc
scas
sub
mov
in
stos
jns
loop
mov
in
xor
aad
push
fldcw
lock
inc
or
popa
aam
cwtl
jnp
dec
arpl
push
js
jg
mov
pop
mov
std
inc
or
mov
int
sahf
stc
dec
cmpsl
fidivrl
mov
ja
jle
xor
push
adc
nop
cmp
dec
aas
or
idiv
aas
push
repnz
jp
xor
jle
lret
icebp
sar
inc
pop
adc
pusha
and
shlb
pop
add
setl
or
push
fs
sti
movsl
sbb
xchg
repnz
data16
outsl
dec
cmp
adc
sbb
adc
jbe
xor
insb
adc
loopne
stos
pushf
pop
xchg
fnstenv
nopl
test
ret
add
mov
dec
sarl
int3
jecxz
bound
enter
push
test
push
int
dec
push
xor
xchg
cmpl
push
jge
movsb
mov
push
aad
loope
pop
add
pop
popa
in
pop
call
sbb
outsb
jl
sbb
cs
lret
dec
mov
inc
stos
fwait
shrb
orl
inc
dec
push
xor
loope
inc
sub
sbb
es
push
inc
les
clc
cmp
mov
stos
xchg
lahf
in
push
and
mov
dec
fdivrs
mov
mov
xchg
inc
dec
add
lock
lods
cld
jle
dec
cmp
cmovle
push
das
sub
pop
and
mov
shl
cmpsl
popa
cwtl
frstor
mov
cli
sub
ss
dec
int3
iret
fisubrl
daa
dec
out
shlb
stc
ljmp
push
adc
cmp
xor
aad
das
das
aam
cltd
into
add
pop
push
fwait
push
ljmp
clc
and
mov
cmp
mov
xchg
pop
xor
adc
dec
xchg
sbb
mov
xor
mov
push
shl
cmp
or
sbb
push
sub
imul
enter
xchg
or
cs
loopne
inc
negb
loop
sub
call
mov
mov
jp
pop
clc
mov
call
cmc
sub
test
jge
test
movsb
addr16
mov
sub
cmp
setl
push
pop
push
fists
negb
inc
xor
pop
jmp
sbb
rclb
enter
or
push
push
xchg
je
ficomps
notb
cwtl
mov
adc
xor
mov
addr16
xor
mov
xor
inc
sbb
pop
mov
add
push
xor
lods
inc
mov
mov
lea
mov
mov
add
push
aaa
inc
inc
cmpsb
push
inc
mov
imul
mov
pop
out
adc
dec
leave
popf
pop
push
pop
cmpsb
or
dec
cmp
mov
rorl
adc
jns
dec
fwait
push
rorl
xor
in
or
ja
leave
fimull
es
inc
icebp
pop
subb
cmp
mov
pop
adcb
fimull
mov
dec
outsl
or
mov
js
pusha
inc
sbb
cmp
jne
sarl
fs
in
lds
adc
push
test
gs
call
fidivrs
aad
in
push
fdivrl
mov
and
scas
jmp
ds
std
andl
arpl
mov
clc
insl
lds
mov
or
shrb
pop
add
add
push
fiaddl
jp
mulb
pop
push
mov
push
aaa
rol
scas
inc
xchg
sub
idivb
push
dec
and
mov
js
loop
cmp
mov
lds
mov
fld1
mov
push
pushf
rcl
pop
xchg
aad
jge
xor
test
leave
ljmp
or
scas
lea
insl
icebp
jge
outsb
ds
insl
cmp
adc
add
xorl
sbb
ss
cld
pop
imul
enter
xchg
xor
subb
orb
dec
xor
shrb
pusha
mov
dec
xchg
mov
sub
jns
lret
xchg
jecxz
jnp
xor
movsl
roll
pop
mov
fcoml
pop
imul
mov
mov
mov
cltd
mov
and
xchg
fiaddl
mov
xor
cli
push
push
xchg
adc
fnclex
ja
sbb
lahf
into
iret
jecxz
push
and
int
cmp
mov
adc
inc
mov
mov
stc
dec
les
push
cmpsl
dec
pop
push
mov
insb
push
xor
mov
shl
add
sarb
insl
out
cld
xchg
push
jnp
jbe
mov
in
mov
pop
in
cli
push
add
dec
jecxz
inc
inc
sbb
push
dec
negl
enter
add
cli
pop
mov
in
repnz
adc
icebp
cltd
jae
stos
dec
out
pop
pop
lds
pop
pop
sbbb
or
pusha
cwtl
xchg
add
jecxz
xor
mov
and
jg
dec
pop
leave
notl
pop
test
inc
lret
les
push
out
fs
dec
cmp
adc
adc
enter
test
or
mov
clc
inc
popf
movsb
push
pusha
lret
xchg
fisubs
out
mov
adc
ja
jmp
mov
fwait
dec
lea
arpl
pop
push
dec
outsb
mov
mov
cmp
popf
adc
pop
loope
stos
xor
enter
js
pop
pop
lock
push
ljmp
shlb
inc
jae
ja
mov
popf
cld
loop
cmp
mov
add
addr16
sbb
imul
pop
cmp
outsb
jp
mov
lret
mov
cld
bound
les
lea
mov
fisttps
int3
inc
and
test
mov
fistps
addr16
jno
nop
enter
mov
das
dec
mov
sbb
btr
imull
lret
lcall
sbb
bound
add
outsl
ret
fdivrs
loop
imul
cs
mov
cwtl
add
loop
mov
les
jne
in
repnz
out
stc
repnz
loope
lea
sub
xor
mov
xchg
mov
cmp
ss
icebp
sbb
push
xor
mov
jo
jbe
sbb
mov
dec
loop
adc
mov
adc
mov
shr
mov
test
jecxz
aaa
mov
jle
cmp
jbe
call
ss
aaa
sahf
xchg
sbb
in
loop
xor
outsb
stos
out
into
test
jp
out
sub
push
mov
mov
andb
sub
sub
push
loopne
fisubl
mov
push
cwtl
popf
mov
jecxz
adc
out
xchg
mov
cmp
fisubrs
int
and
jns
ja
xor
cmp
jl
or
xor
ss
pop
pop
lret
insb
pop
ljmp
std
jmp
jbe
pop
xor
add
jne
mov
popa
pop
and
xchg
mov
sub
xor
jo
xchg
sub
jle
cmp
jmp
push
or
and
test
mov
pop
out
clc
test
int
test
arpl
mov
cmp
notl
or
scas
sub
arpl
xchg
stos
cmp
jge
lret
inc
fiadds
fcoml
push
mov
inc
sbb
mov
cmp
push
scas
mov
mov
cmp
dec
lods
pop
jns
imul
repz
popf
dec
mov
xor
loop
xlat
add
jl
push
push
pop
mov
push
mov
adcb
in
gs
mov
jmp
adc
or
repnz
in
out
int
bound
xor
movsb
dec
push
rcr
pop
into
sub
shl
stc
xchg
js
shlb
jb
dec
hlt
add
mov
xor
mov
sub
fildl
jl
aam
fbld
mov
xor
jne
push
cmpsl
loope
jnp
dec
fucom
cmp
shll
cmpl
mov
or
push
push
cmpsb
mov
scas
dec
lret
pop
and
in
cmpsl
sub
push
mov
xchg
lods
sub
ljmp
pop
subb
imul
add
or
les
jb
pushf
dec
jl
imul
mov
rcll
aad
fwait
scas
ds
mov
sbb
ljmp
ret
sahf
jae
pop
mov
push
je
fnsave
cs
sub
xor
sub
mov
cld
sub
fbstp
mov
inc
lahf
xchg
inc
fldcw
push
lods
popa
lods
xchg
std
pop
test
test
fsubs
or
scas
inc
lods
aam
xchg
gs
out
ficomps
xlat
push
xor
sbb
daa
lahf
xchg
shrb
hlt
mov
sbb
pop
dec
aam
cmp
cmc
outsl
xor
sbb
bnd
sub
and
les
cld
jnp
test
sbb
fstps
dec
lret
sub
lds
lea
dec
cmp
loop
loopne
push
add
data16
int
mov
sbb
enter
das
cs
int
xorb
ret
sub
lock
andl
jne
lret
fld
psllw
out
jb
popa
sbb
stc
lods
mov
out
mov
add
cwtl
jl
mov
movsb
fcmovnbe
and
xor
pop
scas
mov
pop
call
and
insb
adc
adc
into
mov
jg
cmp
xlat
fcomps
scas
pop
stc
cmc
out
das
fsubp
dec
jo
cmpsl
pop
leave
mov
jo
test
cli
dec
add
mov
push
xchg
rcrb
lret
inc
xchg
sub
cmpsb
xchg
jae
insb
pop
int
dec
fistpl
lods
and
cmp
out
pusha
push
out
and
add
mov
pop
inc
nop
call
push
movsb
cmpsb
pop
xchg
lds
xchg
or
ficoml
cmp
bound
fimull
neg
rclb
cmpb
ficoms
mov
xchg
out
inc
mov
mov
scas
mov
imul
dec
ljmp
je
push
pop
sub
inc
jbe
mov
out
stos
jp
ret
mov
sbb
movsl
sti
ret
jl
push
arpl
cwtl
cmc
pop
cmpsb
fwait
out
loope
movsb
push
sub
jle
jp
ret
jno
hlt
dec
push
or
pop
maxps
in
out
das
cmovl
sub
fsubs
lds
lods
aaa
pop
inc
push
mov
insb
sub
pop
call
mov
ret
push
je
adc
sub
jp
xor
xchg
test
or
mov
fcomps
xor
mov
pop
sub
jmp
push
add
fists
bound
mov
or
pop
lds
mov
or
test
pop
stos
mov
dec
shr
ret
ljmp
cld
push
mov
pop
push
sbb
jmp
jae
jbe
aaa
inc
sub
out
loopne
mov
arpl
push
in
adc
jne
jg
insl
gs
cltd
mov
xchg
jno
ds
fstps
mov
outsl
mov
push
mov
push
xchg
jb
lcall
movsb
scas
out
sub
xor
sub
jmp
je
inc
mov
bound
call
push
inc
cmpsl
push
repz
sub
loopne
mov
std
imul
jb
les
cmp
scas
dec
ret
fadds
lret
or
stos
push
je
popf
mov
sub
or
pop
ss
mov
cmpsb
add
repz
ljmp
enter
test
adc
sbb
imul
out
imull
sbb
or
rorb
xchg
sub
sbbb
sub
cwtl
adc
clc
pop
bound
mov
loope
addb
mov
arpl
lret
test
mov
movsl
insb
xchg
cmpl
xor
push
inc
imul
jp
testb
mov
jb
xor
shrb
pop
inc
or
icebp
xchg
fsubrs
into
in
arpl
xor
call
sahf
xchg
inc
cli
push
sets
orl
stos
mov
adc
mov
das
mov
add
lods
mov
cmp
pop
cmp
gs
push
mov
out
out
mov
cmp
and
fsts
int
test
sub
int3
jo
jge
ja
bound
and
int
and
mov
mov
inc
inc
adcl
cwtl
leave
imul
repz
dec
fdiv
fcmovnb
pop
shll
lcall
xor
sub
mov
jl
stc
sub
jne
inc
inc
mov
jg
dec
push
lahf
cmp
push
sbb
mov
ljmp
jae
mov
pop
sub
nop
popa
test
push
gs
add
mov
pushf
es
ljmp
cmp
add
scas
rcll
out
scas
xchg
xor
jne
mov
scas
cmpsl
xchg
or
fwait
push
insl
xchg
xor
pop
xchg
loopne
xor
je
sahf
mov
call
jp
jb
sahf
scas
xchg
jle
jo
enter
push
mov
add
test
int
jge
jb
sbb
sbb
insl
jge
inc
push
mov
lret
aam
out
push
outsb
repnz
stos
jns
xchg
aam
and
aaa
loop
add
add
shrl
mov
sahf
xchg
dec
jns
or
mov
subb
pusha
loopne
sti
cmpsb
and
jle
pop
push
fidivs
jmp
and
sub
scas
fucompp
jnp
xor
pop
jo
xchg
xchg
stc
js
loop
bound
js
and
rolb
adcb
mov
mov
jno
sub
ja
pop
lds
fistpl
jmp
pop
cmp
or
push
pop
iret
fsubl
sub
fs
mov
sbb
insb
stos
mov
dec
lock
sub
das
addb
mov
andb
and
movsb
adc
in
jle
negl
jno
daa
ljmp
dec
aas
sub
and
jl
sub
cmp
jmp
and
sbb
sbb
mov
jne
mov
imul
and
js
lods
jne
das
call
fldt
and
repz
mov
mov
pop
mov
jo
jbe
data16
add
ss
in
mov
add
xor
mov
adc
jnp
adc
imul
mov
push
mov
rolb
pop
loopne
loope
into
repnz
inc
pop
jae
int
ficoms
or
imul
jnp
fwait
rcr
xchg
cltd
mov
push
daa
das
addb
cmp
push
jo
test
sub
push
ret
jbe
hlt
mov
mov
mov
pop
jmp
roll
cwtl
in
fs
fnsave
into
jbe
dec
rclb
in
aas
addb
daa
dec
repnz
xchg
aas
jae
xor
add
or
push
jno
insl
cld
jp
sti
jnp
mov
fstpt
lds
mov
addl
pop
jnp
push
divb
xchg
lahf
dec
stos
insb
addb
cmpsl
mov
lods
adc
jo
mov
jns
ds
sub
jns
mov
aaa
es
lds
jne
push
lea
enter
lret
or
cmpl
xor
sbb
xor
loop
jae
jae
jae
and
lea
cmp
push
outsb
sti
stc
or
or
wbinvd
sbb
int3
add
aam
rolb
ja
mov
mov
lock
jno
mov
adc
fcompl
pop
fnsetpm(287
cltd
xchg
push
shl
push
clc
hlt
cltd
inc
push
loope
rcr
gs
ljmp
mov
jecxz
inc
mov
out
pop
aad
repnz
jmp
mov
add
mov
mov
imul
mov
bound
pushf
fdivl
xor
push
pop
stos
mov
dec
fldcw
ljmp
xor
cmpsb
std
sbb
push
mov
std
mov
inc
leave
push
lods
movsl
adc
insb
and
cmpsb
mov
cltd
call
fucomi
leave
dec
mov
inc
insb
mov
xor
mov
pusha
adc
mov
ja
inc
pushf
pop
out
jno
test
and
mov
fwait
mov
fcmovnu
push
cmc
std
sbb
cmp
insl
and
fdiv
jae
popa
clc
push
jp
jge
dec
sbb
std
jge
and
mov
fildl
xchg
daa
adc
dec
mov
popa
xor
cmp
adc
lods
jae
out
es
repnz
cld
fdivr
adc
lret
sub
cs
repz
sub
adc
pusha
fnstenv
jb
dec
and
cwtl
add
ljmp
sarl
mov
scas
sar
dec
xchg
pop
xor
adc
jb
testl
pop
neg
ss
add
pop
cmp
mov
int
push
sub
fucompp
mov
adc
ljmp
jg
jne,pn
andl
push
and
ds
sbb
in
jecxz
insl
xor
fucom
pop
adc
lret
orb
sbb
imul
jg
push
pop
out
push
out
sahf
sarl
call
gs
or
pop
lcall
pop
das
pop
inc
fdivrs
js
imul
fwait
xchg
aas
mov
sub
addr16
cmp
rorl
xor
cmc
sub
sbb
mov
sub
bswap
xlat
push
adcb
rep
jbe
jo
xchg
ret
push
add
ficomps
dec
in
inc
xchg
decl
imul
pop
sbb
loop
or
andl
mov
repnz
dec
ret
push
lock
movsl
stc
idivb
or
test
nop
cli
arpl
in
mov
dec
lds
inc
loope
ret
dec
scas
mov
push
add
into
and
test
lods
jmp
mov
insl
jle
fisttpll
pop
and
and
sti
or
stos
mov
or
pushf
or
cmp
mov
sub
mov
xchg
mov
jp
movl
or
sub
dec
pop
jnp
aam
add
xchg
mov
in
loope
in
mov
mov
pop
mov
sbb
cmp
out
lock
sbb
mov
mov
sub
mov
fmuls
cli
inc
imull
dec
inc
mov
std
push
dec
or
and
hlt
cmc
fwait
cmpsb
dec
rorl
and
movb
mov
dec
cli
shlb
jmp
push
repnz
pop
aad
pop
push
add
addb
popa
mov
shrl
or
hlt
leave
cmpsl
ss
lret
outsl
int3
dec
pop
inc
push
ja
ror
mov
sub
ror
mov
sub
or
pop
or
and
add
sub
in
jl
or
and
sbb
mov
cli
hlt
mov
jecxz
add
lock
lods
dec
test
sbb
and
ja
sbb
pop
mov
cmp
or
mov
add
lret
gs
lret
push
push
xor
lahf
jmp
pop
mov
inc
stc
push
das
sbb
jg
add
pop
fidivrs
xor
stos
add
xlat
jae
fistl
xchg
mov
mov
and
mov
lahf
mov
push
lahf
ss
insb
lds
rolb
into
inc
xor
inc
cli
push
push
and
mov
xchg
pusha
jmp
jae
sti
or
fisttpl
jnp
lcall
add
insl
xor
dec
cmp
mov
jb
cld
pop
dec
outsl
add
dec
mov
xchg
mov
scas
aas
fisubl
mov
int
pop
jg
cmp
push
adc
and
popf
mov
es
into
lcall
arpl
jbe
pop
loope
sub
sahf
stc
out
test
andb
std
loope
dec
or
push
sub
jb
inc
psrld
push
push
lods
add
movsb
pusha
add
and
and
cmp
push
xchg
dec
mov
int
rorl
or
add
xchg
std
add
lcall
xorb
stos
dec
mov
test
in
push
cmp
adc
out
xor
xor
jmp
ss
dec
call
scas
xor
ljmp
xchg
xor
xchg
stos
mulb
mov
adc
je
cmp
scas
das
cmp
int
addr16
stc
lahf
andl
jg
jmp
cmp
pop
pushf
jmp
pop
push
nop
jecxz
jp
jnp
rcr
jl
cmp
push
add
sub
lret
cmp
mov
imul
mov
dec
xor
and
cld
push
xchg
int3
cmp
add
or
add
mov
add
add
imull
pop
cmp
or
xchg
pop
sbb
adc
pop
and
mov
les
add
fsubrs
int
or
scas
or
mov
lds
sahf
sbb
dec
push
cld
test
xchg
push
cmp
xchg
je
adc
mov
ss
popf
mov
adc
xchg
jno
mov
ds
inc
rcrb
dec
push
je
xlat
cltd
sbb
dec
mov
fists
pop
cmp
push
iret
lahf
das
cmp
loope
insb
inc
dec
test
dec
iret
cmp
js
incl
test
push
fsts
fwait
int
mov
ret
mov
sbb
mov
iret
mov
mov
push
arpl
dec
xchg
dec
cmpb
loope
sbb
bound
or
jge
xor
test
sbb
lret
cmp
xchg
cmp
lods
pusha
sbb
push
loope
pop
jb
or
sbb
mov
sub
jno
shlb
inc
mov
or
sub
inc
and
mov
inc
das
nop
test
push
pusha
orb
mov
iretw
in
cmpb
lret
lret
mov
fildl
xchg
sbb
mov
inc
seta
jo
mov
jae
xor
imul
sarl
xor
push
jb
fimuls
xorb
gs
stos
mov
cmp
mov
mov
inc
xor
lock
add
test
dec
mov
cmp
push
push
push
rcll
pop
sub
jo
pop
mov
push
into
adc
sbb
imul
xchg
push
mov
push
inc
pop
mov
int3
xchg
jg
lret
add
fs
mov
mov
sbb
rclb
sub
lret
out
mov
mov
or
jge
int3
popf
inc
rol
xor
push
loopne
jno
jecxz
repz
lods
mov
xchg
test
lea
jbe
pop
mov
lret
stc
fldt
lds
andl
xor
jb
sbbl
mov
stc
lret
addb
mov
icebp
dec
fistpll
inc
xchg
pop
cwtl
mov
cltd
dec
jae
test
jns
das
enter
pusha
sbb
inc
add
jbe
sbbb
orb
mov
repnz
in
outsb
mov
inc
jg
jge
data16
add
daa
cli
mov
inc
push
movq
pop
mov
flds
fdivl
sbb
cld
sub
call
mov
mov
scas
and
push
inc
stc
dec
jmp
mov
pop
int3
mov
test
cmpsb
jae,pt
das
test
pop
stos
jg
iret
mulb
xor
int
cmp
push
test
mov
and
pop
adc
push
xchg
or
sbb
add
sub
lea
add
repz
sbbb
mov
mov
add
leave
push
imul
rcrb
outsb
xchg
incb
push
xor
dec
iret
sbb
lsl
int
dec
or
mov
daa
movups
adc
out
mov
aaa
enter
sub
js
lods
shll
test
jne
andl
or
xchg
jp
mov
mov
js
jp
mov
pop
jb
sub
xchg
mov
std
loopne
or
fists
push
mov
subl
ja
mov
xor
cmp
or
int
push
mov
wbinvd
xchg
hlt
lahf
dec
les
fiadds
and
icebp
ja
mov
stos
mov
jmp
rcrl
cmp
cld
push
cli
pop
fists
test
fs
push
inc
cmc
or
push
mov
mov
mov
and
xor
cmp
or
popa
call
pushf
sbb
pop
aam
push
jecxz
iret
lods
cmp
cmp
pop
in
dec
push
cs
mov
lods
shlb
dec
jle
inc
xchg
mov
mov
add
mov
test
mov
lea
sbb
ljmp
loope
xor
scas
jecxz
or
iret
adcb
inc
dec
mov
les
sahf
movsl
xchg
pop
pop
fcompl
rorb
rorl
sbb
fists
xchg
iret
xchg
clc
and
inc
fwait
mov
cltd
or
dec
test
mov
mov
stos
push
add
ss
dec
push
popf
jne
lret
push
stc
sti
or
loopne
sar
jbe
fwait
leave
mov
inc
sub
dec
push
mov
adc
jo
push
adc
push
repz
xchg
test
mov
lods
test
scas
jbe
mov
flds
pop
aad
mov
lahf
inc
push
mov
mov
dec
jae
adc
jp
cmp
xor
sbb
cltd
xchg
je
xor
fstpt
jns
aad
and
sti
cli
lea
out
push
leave
mov
shl
into
mov
cltd
jo
imul
xchg
xchg
sahf
js
jle
aaa
iret
fistl
jmp
ljmp
dec
divl
cmp
fs
pop
mov
into
bound
icebp
jmp
mov
cltd
pop
scas
das
inc
mov
sbb
and
dec
aaa
stc
inc
filds
jo
dec
add
push
stos
sar
push
xor
cmp
mov
gs
adc
mov
aas
sub
mov
shl
nop
gs
adc
jo
add
jmp
cmc
sahf
add
dec
fildll
fists
ss
xchg
and
dec
dec
push
shrb
insl
inc
inc
shlb
test
cli
mov
fwait
sub
dec
inc
sub
mov
int3
mov
cmp
ss
jns
cmpb
fisubrl
mov
push
mov
frstor
dec
imul
mov
fdivl
mov
push
cwtl
dec
push
add
dec
or
stc
sbb
dec
xchg
iret
add
inc
xchg
rolb
xchg
mov
std
pop
jp
insb
mov
jae
sbbl
inc
pop
pop
mov
roll
push
hlt
lret
dec
std
inc
inc
lcall
inc
loop
out
aad
sub
ljmp
in
insb
out
hlt
negb
cmpsb
sti
jl
jmp
aas
aaa
xor
fimull
imul
sbb
inc
adc
mov
jno
cmp
add
or
mov
inc
flds
pop
sbb
xchg
jo
iret
mov
add
adc
in
imul
cld
add
gs
pop
jge
adc
arpl
mov
cmc
push
adcl
mov
pusha
jp
lahf
dec
ds
out
sbb
clc
sarb
sub
push
popa
and
or
stos
cld
cmp
insb
mov
scas
repnz
push
shr
sbb
sub
js
jne
add
fisubrl
shll
cmp
repnz
cmp
leave
popa
mov
pop
pushf
adc
movsl
jae
int
mov
test
dec
inc
icebp
js
xor
sahf
int
addr16
fcmovu
int
dec
xor
lcall
or
shrl
aam
sub
add
push
insl
icebp
cld
test
jns
and
lock
out
mov
aam
cmp
fsubs
data16
jne
mov
ret
xlat
sub
iret
sarl
and
add
mov
mov
pop
subl
lods
in
stos
data16
and
pop
and
push
mov
sbb
jne
fs
or
mov
roll
adc
jo
push
mov
push
mov
push
jecxz
pop
ds
xor
popf
push
or
cld
bound
jecxz
rcr
call
mov
mov
jg
mov
sub
xor
xchg
in
pop
and
daa
mov
jno
imulb
push
out
punpckhdq
stos
jb
sti
leave
repnz
arpl
outsb
cli
sbb
enter
sub
std
jmp
adc
xchg
cwtl
shll
inc
out
mov
icebp
in
mov
or
mov
cmp
push
decl
mov
scas
or
mov
sbb
push
jg
out
pop
repz
mov
cltd
imul
stos
pushf
lret
mov
outsb
mov
outsl
arpl
inc
les
sbb
test
and
ret
sub
cmp
cmp
push
in
js
fidivrl
and
add
pop
push
sti
push
xor
mov
push
xchg
sbb
xor
repz
mov
push
arpl
sbb
add
sbb
scas
push
xor
push
clc
movsl
cs
mov
call
loopne
xchg
add
in
adc
loope
stos
push
add
sub
lock
dec
mov
imul
cmp
out
ret
fistps
fwait
jg
ret
fidivrs
inc
cmp
shlb
int
fimuls
mov
pop
mov
dec
pusha
cmpb
xchg
ret
adc
shll
add
pop
mov
or
sub
sbb
xchg
shlb
dec
cmc
pop
xchg
push
xor
mov
add
sbb
mov
imul
sub
sub
aad
pop
mov
insb
xor
xchg
sub
popf
sahf
adc
push
xchg
aas
xor
mov
inc
cmpsb
jmp
jnp
ja
or
imul
mov
fbld
mov
scas
mov
jecxz
ja
cs
push
andl
aaa
dec
push
mov
cmp
outsl
sbb
jp
loope
push
lea
ffreep
add
push
and
add
and
xchg
ds
fcmovnb
jo
mov
mov
mov
cwtl
mov
inc
insl
loope
dec
add
adc
mov
cmc
ficoms
mov
sub
jnp
ja
xor
or
mov
jl
cmpsw
mov
cmpsb
mov
loope,pn
movsl
daa
movsb
pop
jns
xchg
add
mov
adc
push
out
xchg
mov
sub
xchg
cltd
std
or
or
cmp
mov
ds
sti
into
inc
sarl
jae
dec
mov
jns
lcall
and
nop
jbe
mov
sbb
push
imul
fistps
or
dec
repz
mov
les
cmc
lds
xchg
sbb
js
xor
call
fdivl
lcall
jnp
add
dec
lret
jle
xor
in
adc
mov
out
aas
mov
call
gs
insb
aas
nop
jl
aad
adc
inc
mov
jp
in
dec
int
push
popa
cmpsl
test
add
into
sbb
mov
push
int3
adcl
push
je
pop
adc
jmp
and
and
inc
push
in
in
add
xchg
ficoms
outsb
xchg
mul
inc
jnp
inc
mov
xchg
adc
add
jo
jns
lahf
subb
hlt
inc
lcall
inc
push
shrl
jb
aaa
sub
mov
rorl
mov
cli
iret
jp
out
lcall
ret
popa
sysexit
sarb
arpl
mov
xchg
sub
xchg
sbb
sub
lods
push
lret
int
insl
ds
in
add
ljmp
and
sbb
mov
push
test
icebp
mov
add
pop
pop
jle
add
lods
add
sbb
out
les
dec
push
dec
inc
fs
inc
adc
test
cmp
or
push
inc
push
shll
imul
xchg
push
aas
shr
das
adc
sahf
loope
sbbb
cmp
pop
and
movsl
xchg
cli
mov
sub
adcb
fistpl
inc
fdivs
loopne
cmpb
mov
jge
jmp
dec
xchg
in
sub
add
test
lock
and
dec
dec
test
jmp
rcrb
js
pop
dec
mov
mov
mov
orb
in
into
cwtl
mov
mov
mov
mov
jae
or
nop
fdivrs
mov
pop
hlt
std
push
inc
cmp
or
stc
std
mov
push
dec
add
dec
andl
push
andb
out
sub
insb
jge
cmp
fldenv
iret
rclb
lcall
stos
or
mov
scas
pop
pop
inc
in
inc
push
ret
xor
mov
or
sbb
mov
out
repnz
push
push
push
pop
inc
push
inc
add
movsb
fsub
xlat
insb
lods
js
adc
fisubs
into
sbb
insb
sbb
pop
jbe
cli
dec
int3
sub
movsl
mov
mov
scas
jno
xor
xchg
push
bound
xor
ljmp
pusha
loopne
cwtl
push
push
and
insb
pop
cmp
xchg
cmp
inc
std
sti
lret
imulb
sub
inc
in
aas
in
pop
lock
addr16
je
mov
je
xor
fstl
add
jmp
or
jb
adc
sbb
loop
adc
fmuls
inc
xchg
push
add
mov
push
cmpsb
inc
pusha
xor
jnp
jae
cmp
loope
add
je
out
pop
divb
movsb
loopne
les
and
in
or
movsb
xchg
jp
cmp
pushf
hlt
sbb
push
lods
pop
fwait
pop
addl
xchg
jb
push
inc
pop
int3
jmp
xchg
pop
fwait
das
cli
jecxz
add
adc
push
es
mov
push
mov
pop
insb
jmp
xchg
fidivl
mov
aam
in
iret
xor
mov
rcl
pop
repnz
cmp
mov
cmp
fiaddl
mov
out
data16
popf
out
or
icebp
jecxz
loop
add
movsl
jp
sub
pop
add
cld
in
mov
push
xchg
call
sbb
sbb
imul
push
lahf
add
lcall
rorl
push
lods
repnz
mov
xchg
idivl
mov
das
das
jecxz
cmc
xchg
cltd
mov
mov
sbbl
jnp
mov
cmpsb
in
cli
xor
out
mov
mov
adc
jp
ja
sbb
mov
loope
or
xor
pop
sbb
mov
fmull
adc
xchg
sub
sub
mov
lcall
or
or
loop
mov
inc
es
movsb
movsl
imul
mov
jnp
mov
fdiv
cmp
xor
or
xchg
adc
mov
andb
sti
jmp
cltd
or
dec
xlat
mov
and
movsb
test
dec
pop
fidivs
sbb
hlt
jnp
aas
sub
cli
sbb
adc
dec
test
jnp
cli
sbb
cwtl
pushf
fcmovb
cmpsl
jg
inc
testb
inc
jmp
mov
pushf
push
push
mov
fs
pop
inc
mov
mov
sti
add
ljmp
fidivrs
std
jns
mov
loop
into
fwait
insb
mov
xorb
sti
mov
jb
mov
into
loopne
notl
sub
mov
mov
faddl
and
inc
lock
leave
mov
pop
cmpsl
lods
cmp
inc
xchg
pop
or
adcb
in
imul
test
mov
inc
sarb
jp
jo
dec
test
pop
mov
loopne
inc
push
and
add
out
inc
push
frndint
sbb
repnz
ss
mov
adc
mov
sub
outsl
stos
jmp
mov
or
mov
mov
testb
lods
movl
divl
mov
adc
push
gs
shlb
sub
and
mov
es
jo
xor
clc
jb
addl
sbb
add
mov
inc
cmp
lods
outsb
push
jo
sub
mov
mulb
leave
mull
daa
movsb
test
loop
cmc
ret
adc
pop
movsb
cmp
orb
sti
xorl
fmull
dec
adc
xor
adc
mov
mov
lret
jp
iret
es
arpl
lret
xor
inc
stos
cli
push
jae
repnz
push
jecxz
or
icebp
dec
and
sub
cmc
outsl
lods
mov
inc
insb
imul
rorl
pop
lods
je
les
xchg
push
imul
out
cmp
sbbl
cmpsl
pop
xor
sub
ljmp
negb
lds
push
loop,pn
insb
clc
cmp
jo
orb
xchg
sbbl
jl
jecxz
jns
pop
and
push
aad
lahf
xchg
fcoml
pop
cmp
pop
jne
in
enter
xlat
das
push
and
test
push
xchg
cs
gs
mov
ds
add
pop
ret
mov
and
lods
jae
std
lea
test
lods
pusha
mov
test
cmp
sub
push
cmc
addr16
cmpsl
lcall
jno
pop
call
sarb
rcll
xor
xchg
dec
cs
out
cmpsb
pop
nop
cmp
pop
shrb
nop
inc
cmp
outsb
daa
cmp
lea
inc
call
pop
inc
mov
jo
jg
arpl
and
cli
cmp
in
aaa
mov
inc
repz
jmp
test
clc
int3
push
xor
push
jmp
movsb
push
subb
mov
out
and
mov
dec
lret
fnstcw
ret
xchg
hlt
dec
fimull
aam
or
adc
xchg
and
cmp
movsl
iret
mov
xor
sub
js
repnz
pop
dec
inc
xor
xchg
cmp
jns
push
lahf
dec
cld
es
movsb
test
xlat
jmp
test
iret
lret
pop
lret
xor
sbb
nop
pop
xchg
xchg
mov
ret
ficomps
and
push
cmpl
xor
push
xchg
xchg
dec
aad
fwait
push
mov
sbb
dec
js
lock
scas
shlb
dec
jb
cwtl
inc
outsl
push
or
inc
lods
xor
in
inc
leave
jns
pop
dec
mov
cmp
into
in
add
xorl
popf
ret
cli
pop
and
push
add
dec
lret
jg
dec
cld
std
push
fwait
sub
mov
mov
and
sub
mov
das
in
addr16
cmpsb
aaa
dec
negb
and
mov
aas
popf
hlt
loop
mov
aam
xchg
rcrb
mov
sbb
fxch
sub
neg
cmp
xor
orb
ret
xchg
enter
and
je
dec
pop
push
sbb
insl
pop
in
xor
aam
lods
and
xlat
or
ss
shll
jnp
pop
push
inc
add
mov
adc
pop
daa
shlb
test
mov
cmpb
xchg
mull
cmp
hlt
sbb
bound
addr16
popa
jg
into
xchg
cmp
bound
add
dec
jbe
imul
test
shll
mov
decb
jae
mov
dec
out
mov
mov
enter
and
mov
pop
insb
add
xor
adc
inc
add
lds
mov
add
ret
pop
cmpsb
jnp
hlt
fildll
stos
loope
fldl
xor
lahf
shl
fldcw
frstor
push
jb
cltd
and
pusha
push
ljmp
fnsetpm(287
cld
stos
fwait
stos
and
push
inc
or
mov
js
cld
push
sbb
mov
xchg
xchg
cwtl
outsl
shrl
mov
inc
jo
fsubs
insb
je
inc
mov
mov
mov
mov
jle
jmp
jmp
stos
jmp
mov
jae
shrb
jecxz
push
lods
test
pop
and
pusha
clc
xlat
lret
adc
mov
rolb
mov
sahf
icebp
or
lds
mov
sbb
mov
pop
dec
jecxz
jge
jle
out
add
loop
pop
fs
iret
movsl
dec
inc
cmp
test
xor
push
in
aas
adc
insl
test
xor
and
or
js
lods
xorb
outsl
or
mov
cmpb
inc
xor
sbbl
mov
mov
insl
mov
push
or
and
leave
les
sbb
dec
shl
pop
imul
or
adc
lods
stos
adc
icebp
lods
in
add
dec
ja
pop
mov
mov
inc
outsb
mov
aam
xchg
cwtl
cmp
inc
repz
jne
inc
movsl
adc
bound
ljmp
cmp
icebp
cwtl
rcl
dec
mov
ficoml
cmpsl
pop
enter
push
fldcw
mov
cmp
dec
jmp
sub
aam
fadds
inc
pushf
out
iret
pop
jae
push
xchg
insb
popf
push
cmc
test
dec
cmpsl
mov
xor
icebp
out
in
and
mov
inc
in
push
dec
mov
in
inc
fmul
adc
mov
adc
push
cmp
dec
xor
in
notb
daa
mov
int
mov
fwait
adc
and
inc
clc
sbb
data16
mov
repz
mov
lcall
mov
xchg
dec
in
mov
mov
or
ret
faddp
jne
cmp
test
pop
jnp
pop
out
mov
in
jmp
pop
loope
xchg
decb
sub
fwait
pop
mov
stos
icebp
mov
add
ljmp
fnstcw
scas
and
sub
xor
cmpsb
call
test
or
cs
stc
into
jmp
add
enter
cwtl
mov
outsb
int
js
push
icebp
pop
pop
loopne
jecxz
popf
xchg
jge
jbe
test
stos
mov
outsl
jmp
jne
stc
addl
mov
jp
popa
call
mov
aas
stos
outsb
loopne
insl
mov
and
dec
cmpsb
mov
nop
std
aam
mov
orl
mov
xchg
out
sub
orl
int
jne
fcoms
call
adc
xchg
repz
jecxz
xchg
or
mov
sub
xor
inc
pop
rolb
outsl
mov
lahf
test
fildll
mov
sbb
test
jl
call
mov
sahf
jmp
adcl
mov
xor
sahf
popf
xor
xchg
aam
hlt
push
mov
les
aas
shrb
lahf
ret
stc
inc
fcom
xor
notb
mov
std
add
loope
jge
mov
into
cmp
dec
loopne
adc
inc
cmpsl
push
mov
aaa
ss
aad
out
add
pop
adc
ja
popf
cmp
repnz
je
mov
mov
fdivrl
inc
movl
mov
adc
jmp
stc
cmp
or
sub
ret
fcmovnbe
pop
sub
sbb
push
pop
aad
popl
mov
clc
ds
add
adcl
aas
test
divb
jmp
cmp
mov
inc
les
leave
popf
cmp
std
out
jnp
jns
aaa
inc
scas
cmpsl
push
sub
cmpsl
mov
inc
scas
mov
add
mov
or
insb
and
lock
add
mov
push
xor
sbb
dec
adc
mov
pop
and
shll
ss
subb
nop
stos
loopne
pop
push
xchg
push
dec
out
inc
push
fadds
xchg
mov
sbb
dec
bound
lods
jmp
scas
xchg
fiadds
clc
popf
mov
xor
inc
hlt
inc
dec
aad
adc
pop
inc
repnz
xor
cmp
out
jmp
dec
test
es
in
pop
jecxz
in
mov
roll
jp
sub
lcall
jge
and
dec
repz
xlat
inc
faddp
xor
pop
add
cmp
xchg
and
aas
lret
xlat
inc
cmp
jecxz
lock
push
pop
cwtl
jb
ljmp
lea
push
pusha
or
xchg
pop
repz
test
filds
lahf
pusha
sub
inc
aam
fstps
xor
rcrb
loopne
xor
bound
mov
dec
insb
cmp
mov
mov
cmpl
mov
cmp
loopne
clc
inc
mov
xor
insb
jae
and
test
ds
pop
daa
dec
add
mov
mov
adc
dec
loopne
fimull
loop
fcoms
mov
stc
fs
adc
dec
pop
cmp
out
in
mov
gs
in
mov
iret
imul
pop
sbb
cld
mov
push
mov
popf
inc
push
cwtl
fscale
das
fdivr
stos
je
in
sar
scas
mov
lds
or
out
outsl
leave
mov
ja
or
push
mov
xor
pop
mov
in
test
xchg
lods
cmp
popa
lods
pop
cmp
cmp
and
sbb
pop
mov
stos
dec
dec
xor
subl
pop
fidivrl
shl
stos
pusha
sahf
lahf
adc
xor
fnstenv
fidivrs
aad
test
cmp
icebp
mov
sti
inc
repz
push
rcrl
pop
arpl
cld
sub
push
aaa
xchg
test
add
movsl
repnz
add
inc
pop
int3
out
fists
xchg
pop
pop
jno
jle
hlt
test
mov
movswl
xchg
mov
sbb
mov
in
iret
xchg
xor
pop
dec
cmp
repnz
mov
in
xor
xchg
in
mov
out
cmpsb
inc
jge
stos
cmpb
cmp
cmc
pop
cmp
xchg
inc
out
sub
cli
pop
es
int3
das
pop
cmp
push
fisttpll
out
jbe
ret
insb
ret
xor
ret
pop
add
mov
push
mov
pop
inc
add
test
movsb
jno
mov
mov
add
xor
xor
pop
push
lea
cmpsb
push
imul
lods
mov
xor
sub
aaa
lock
mov
leave
and
push
mov
adc
sbbl
sahf
mov
mul
outsb
popl
jbe
adcl
loope
adc
sub
inc
fstl
jge
movsl
inc
mov
sub
cmpsl
dec
lds
mov
jne
std
mov
or
xor
xchg
mov
dec
shll
or
sbb
in
cmp
bound
or
dec
mov
clc
cmp
fistpll
mov
dec
stos
mov
push
aad
ja
pop
into
loopne,pn
xor
popa
bound
sbb
mov
faddl
movsl
call
jmp
xor
push
cltd
cs
jno
xchg
in
sbb
mov
fimuls
jns
sub
mov
push
roll
push
jo
aaa
sahf
add
outsl
xlat
adc
adcb
add
xchg
fsubl
fs
xor
pop
jnp
mov
leave
adc
roll
outsl
push
lods
sub
mov
sahf
xchg
mov
xor
xor
stos
call
mov
nop
lret
clc
sbb
pop
cmpsb
add
sti
outsl
inc
sbb
dec
pop
pushf
cs
outsl
andb
sbb
xchg
int
inc
pop
pop
sbb
jbe
repz
daa
add
jno
jae
idiv
inc
loope
out
or
sti
inc
bound
cmp
test
dec
xor
xchg
int3
or
insl
inc
sbb
or
cmp
sbb
aas
lret
stos
notb
pusha
mov
aas
pop
into
adc
push
cmc
sbb
fidivs
adc
push
add
xchg
out
or
push
orps
cmpl
imul
mov
rcll
fbstp
in
xor
mov
sub
fprem
inc
cmp
adc
hlt
shlb
ljmp
je
xlat
pop
mov
inc
push
xlat
mov
mov
mov
subl
std
mov
es
in
iret
in
adc
mov
push
mov
adcl
pop
mov
pop
pop
xorl
mov
scas
sub
addr16
mov
pop
in
cltd
lret
push
add
add
iret
in
movsl
pop
dec
ss
shlb
fnstenv
push
or
or
mov
gs
sub
loope
insl
sub
push
mov
aaa
xchg
cmp
mov
jo
shr
int
mov
push
inc
shll
sub
lock
ds
test
repz
divl
cld
push
push
popf
lahf
add
test
xor
filds
sti
adc
push
mov
testl
stc
stos
jmp
xchg
cmpsb
or
ja
popf
shll
cmpsb
lea
add
fs
rol
xchg
cmpsl
test
lahf
push
repnz
cld
gs
popa
faddl
sub
add
fs
inc
arpl
sbb
in
mov
pop
inc
mov
mov
xor
aad
lock
ficoms
xchg
test
jb
cs
cmc
pushf
add
out
fisubs
sbb
jge
mov
sahf
dec
jp
mov
ret
jg
mov
das
iret
mov
into
mov
xchg
fwait
loop
lods
shrb
gs
bound
mov
dec
inc
adc
mov
pop
adc
sub
xchg
xor
cmp
cld
or
xor
test
into
sbb
ss
pusha
jg
ds
mov
mov
in
adc
mov
negb
xchg
shlb
mov
dec
scas
pusha
mov
scas
mov
inc
dec
and
jne
adc
xor
je
das
dec
push
inc
xchg
pop
dec
fdiv
daa
jno
popa
xor
pushl
xor
insb
dec
cmpsb
aas
xorb
std
pop
cltd
fsts
hlt
ds
mov
sahf
pop
cmp
mov
scas
imul
lock
nop
clc
loopne
mov
cmp
fadds
cld
dec
enter
out
adc
in
or
or
outsl
pusha
repnz
mov
add
subl
mov
cmpsl
std
add
mov
inc
and
cmp
ficoml
mov
imul
pop
mov
push
rcrb
add
add
sub
dec
xor
scas
pop
scas
sub
pop
push
adc
or
shl
push
hlt
sbb
xor
xor
movsl
fwait
int3
xor
jne
std
dec
outsl
ja
mov
rorb
xchg
pop
out
test
ret
fidivl
scas
push
sbb
or
sub
pop
mov
push
outsb
test
cmpsl
rorl
stc
adc
dec
inc
xor
xchg
inc
pop
das
nop
pop
push
clc
out
sbb
add
jbe
jae
pop
xlat
dec
jmp
inc
lods
cmc
sbb
mov
jmp
in
loope
mov
into
jo
cmp
fdivs
xor
loope
dec
addr16
pushf
adc
jg
fildl
ret
fstp
cmp
or
aaa
adc
or
cmp
mov
cld
ret
mov
mov
lahf
sub
les
jp
lea
mov
push
cmp
add
add
sarl
fstpt
pushf
cmp
iret
repnz
bound
jbe
je
adcb
adc
in
out
jl
pusha
adc
jno
hlt
dec
inc
xchg
xchg
call
stc
sub
sahf
and
jae
repz
stos
push
out
fcmovbe
mov
or
ss
or
push
and
xchg
cmp
xchg
pop
and
imul
insl
dec
pushf
push
pusha
push
mov
dec
sti
and
stos
sub
imul
pop
insl
lea
sbb
test
push
sub
dec
mov
ss
les
inc
pushl
jp
inc
cmp
test
ljmp
lock
or
cmp
aad
sbb
les
fidivrl
xor
mov
sbb
lds
out
mov
imul
loope
or
xchg
jl
pop
push
push
scas
ljmp
sbb
xorb
mov
sbb
in
outsb
jae
dec
xor
inc
sub
mov
inc
xor
jno
clc
in
daa
mov
ds
mov
andb
jns
test
lret
xchg
out
xchg
test
daa
ret
iret
mov
out
add
insb
call
jl
fcoml
or
xor
mov
lahf
jmp
sub
mov
les
fsubs
sub
lret
inc
mov
dec
mov
mov
sbb
adc
sub
inc
and
into
mov
leave
inc
jns
jl
imul
rolb
mov
fldl
mov
xor
cmp
ljmp
shl
mov
imul
jecxz
or
lock
mov
cmp
dec
popa
or
xchg
aam
xor
jb
ret
cmp
pop
adc
dec
ja
gs
gs
jg
repnz
pop
mov
lret
jl
js
clc
mov
fidivrl
dec
loopne
test
sub
mov
test
jmp
mov
mov
lea
and
inc
adc
or
mov
sahf
fistps
fiaddl
jo
add
ret
mov
mov
sbb
loope
sub
push
inc
inc
stc
sbb
sti
leave
and
test
jp
xor
push
loope
or
fucomi
mov
jo
jl
sahf
and
or
ret
dec
mov
sbb
inc
xor
imul
adc
out
or
push
mov
stos
cmp
mov
lret
std
gs
sub
cltd
aad
mov
orb
xor
xchg
shlb
push
pusha
lock
sbb
cs
sti
cld
or
movsb
sbb
jmp
fs
dec
fildl
push
mov
jns
jg
pop
and
cmc
jg
xchg
add
push
test
or
fiaddl
xchg
roll
fadds
jle
movsb
sub
shrl
rcl
arpl
sub
inc
cmp
popl
push
lret
rorb
xor
sub
mov
movsb
ja
stos
shrb
pop
jno
cmc
sbb
dec
add
or
je
jecxz
mov
add
mov
inc
adc
inc
lds
pop
rorl
xchg
loope
push
sbb
cli
sub
mov
ret
sahf
cmp
pop
sar
jbe
repnz
sub
gs
jge
xchg
aam
mov
loopne
cmp
push
ljmp
xchg
and
jp
ror
test
stos
mov
and
adc
outsl
xor
jp
cmp
add
hlt
fiadds
sbb
mov
stos
push
ja
dec
int3
cli
push
std
cmp
mov
and
ds
leave
in
leave
ret
rcl
inc
cmp
jae
push
sub
and
mov
add
fisubrl
sub
push
adc
cmpsl
xor
pushf
sub
ljmp
pop
xorb
adc
jbe
cmp
loope
fimuls
pop
pop
out
imul
notl
adc
addl
pusha
leave
mov
mov
dec
mov
das
inc
push
xchg
into
ljmp
insb
sub
subl
push
loope
xchg
aad
mov
icebp
mov
xorb
arpl
cld
inc
push
fwait
xor
xor
adc
das
xor
adc
xchg
nop
sahf
rcrb
adc
std
xlat
ljmp
xor
test
lret
shll
jp
cmp
or
sti
outsb
push
mov
add
les
xchg
sub
outsl
pop
arpl
hlt
or
insl
daa
xchg
sub
lods
movsb
or
sahf
push
fnstcw
fs
das
fs
mov
pmaxub
push
bound
and
fs
push
mov
jno
insb
hlt
lahf
adc
adc
mov
cmp
subb
jo
divb
insb
mov
push
out
add
lret
inc
imul
sbb
cmp
nop
icebp
ret
inc
cli
cmp
icebp
sub
push
xor
or
pop
insb
movsl
push
push
rorl
push
dec
aad
into
mov
clc
pushf
cmp
loope
fwait
inc
test
imul
ret
call
jnp
inc
fxch
mov
movsbl
sti
cmp
and
aad
sbb
int
or
adc
rcr
mov
insb
fdivrl
dec
mov
dec
xchg
jg
mov
jle
daa
in
out
nop
sahf
push
popf
jne
cmp
mov
leave
test
sbb
iret
push
lock
inc
outsl
sub
pop
scas
pop
in
test
xlat
inc
xchg
outsl
lcall
xchg
mov
pop
divps
lea
es
or
out
inc
and
das
roll
lret
and
fcoml
mov
movsb
mov
pop
sub
mov
cmp
or
dec
xor
int3
inc
fmull
stc
test
out
sub
mov
outsb
popf
in
cmp
imul
mov
aaa
and
and
fwait
sbb
out
mov
mov
push
aas
pop
push
xchg
orl
test
jmp
xor
loope
sar
aam
add
leave
into
fdivrs
ja
mov
shlb
xchg
das
push
xor
rcrl
filds
mov
out
test
mov
ss
push
movsb
adc
leave
nop
push
xor
cmp
and
adcl
add
jns
test
ljmp
sub
inc
loopne
leave
adc
sbb
sub
imul
shll
inc
and
repnz
and
sahf
stos
mov
add
dec
sbb
jne
mov
test
sbb
lcall
jecxz
adc
in
jno
lea
pop
xor
push
mov
lret
notl
mov
inc
pop
js
push
push
xchg
bound
pop
or
je
loope
inc
lahf
inc
mov
js
sub
mov
leave
inc
aam
insl
mov
sbb
andl
jl
cli
mov
cmp
push
fmull
push
dec
dec
pop
mov
or
ret
push
xor
jnp
int
lcall
dec
jle
enter
inc
pushf
adc
movsb
fwait
add
jns
cmc
popa
mov
movsb
sbb
pop
scas
add
sbb
out
dec
push
push
clc
lods
imulb
int3
insl
enter
adc
imul
mov
dec
mov
dec
add
mov
insl
shrb
mov
test
or
repz
in
push
mov
add
sbb
inc
adc
insb
sbb
imul
mov
movsl
les
rorl
inc
pop
cmpsb
mov
inc
lods
push
scas
or
dec
bound
xor
popa
push
test
loop
dec
push
lcall
fisubs
popf
std
mov
jo
pusha
mov
hlt
cmp
adc
enter
fsub
lmsw
and
pop
xor
adc
je
jns
add
push
push
mov
sub
sbb
fcmovnbe
or
jns
mov
mov
std
xor
mov
jne
dec
mov
mov
in
lahf
or
mov
or
arpl
addr16
jg
sub
xchg
and
lahf
jnp
mov
sub
daa
call
incl
ljmp
inc
xor
in
call
jecxz
sbb
loop
push
test
mov
mov
adc
sbb
lods
pushf
fidivs
jnp
scas
jecxz
mov
xor
loop
push
jnp
int
push
mov
loop
mov
mov
and
cld
test
cmpsb
mov
jl
jo
mov
imul
add
pop
jp
sbb
mov
pop
fmuls
lcall
pop
sbb
mov
push
out
aaa
jno
sahf
inc
pushf
and
int3
and
or
jl
sbb
xor
adc
or
stc
lock
jecxz
jb
jecxz
xor
cltd
xchg
sbb
mov
js
xor
xchg
sbb
in
xchg
lods
xchg
push
mov
mov
xlat
rep
in
xor
xchg
jg
sahf
nop
mov
dec
mov
jge
std
xchg
push
mov
scas
xor
lods
jbe
insl
lahf
mov
inc
sahf
or
jle
in
shll
cmc
cmp
arpl
fmuls
push
call
cs
int3
imul
hlt
pop
xchg
lea
fstp
gs
add
cli
jns
jg
xchg
les
pop
adc
scas
sarb
xchg
cltd
insb
pop
jae
pushf
das
jl
and
or
jl
mov
sbb
add
imul
sub
adc
cwtl
sbb
out
cmp
dec
clc
inc
lea
daa
xlat
inc
xchg
inc
sub
sub
les
test
push
or
lret
xor
sub
mov
je
in
mov
les
icebp
data16
dec
mov
daa
std
inc
dec
cmc
out
push
popa
and
jp
stc
adc
dec
iret
scas
pop
in
aam
mov
fbstp
cltd
shll
lret
insb
mov
mov
sbbl
sbbb
movb
lock
push
fsubr
push
mov
mov
mov
int3
mov
ret
in
pop
pop
lcall
loopne
cmpsl
outsl
pop
xor
or
cmp
sbb
xor
or
push
and
push
fst
dec
jg
daa
jle
jmp
out
jae
test
jns
sub
push
jnp
repnz
xor
aad
mov
scas
fs
stc
mov
xor
clc
js
mov
push
inc
jne
outsb
jne
pop
sbb
les
sbb
jo
ja
xchg
xchg
sub
cmp
in
das
adc
and
fs
cmpsb
xor
jne
mov
mov
aad
push
test
pop
push
xchg
test
mov
jge
xor
cmp
rcll
push
test
movsb
aad
arpl
lds
pop
add
sub
ret
jnp
out
pop
pop
sarb
cmp
xchg
xor
or
outsb
cmp
mov
jecxz
insb
cmp
xchg
rcrb
mov
push
repnz
lock
add
mov
cmpsb
lret
inc
sbb
addl
push
inc
pusha
cmp
in
and
stos
jmp
sbb
idiv
pop
inc
jl
mov
popa
inc
cs
jmp
std
inc
or
sahf
sarb
jmp
jns
inc
lea
cmpsb
int
add
xchg
xor
dec
lock
addl
dec
pushf
pop
adc
movsl
jecxz
mov
inc
lds
xchg
data16
cwtl
mov
cwtl
adc
clc
dec
dec
out
dec
sarb
icebp
lret
jge
mov
les
pushf
push
test
adcb
inc
insb
jp
test
addr16
push
lea
outsl
inc
data16
sti
dec
mov
sbb
or
xchg
and
in
xchg
mov
cmp
adc
nop
xchg
xchg
loopne
scas
xchg
insb
mov
or
fadds
cmp
fcomps
ja
mov
popf
and
cli
push
adc
addr16
gs
out
enter
popa
pop
cli
mov
sub
mov
fisttps
lods
incb
leave
mov
imul
and
lea
lcall
jp
dec
mov
sbb
sti
inc
cmp
mov
fldcw
lcall
repz
and
push
pop
sar
out
pop
adcl
push
sbb
ret
mov
mov
orl
and
jbe
nop
mov
shrb
xor
jl
mov
adc
cmp
lods
cmp
arpl
push
xor
in
push
test
cmpsb
cmc
pop
ja
mov
jmp
cmp
mov
xlat
or
das
daa
jle
inc
popf
ds
mov
lea
xchg
call
inc
xchg
fmul
hlt
repz
sub
jp
add
rcll
cmc
jmp
iret
lods
test
imul
xor
push
pop
mov
cmc
push
nop
or
pusha
stos
fs
lock
inc
insb
mov
sub
aas
sti
mov
cmp
test
popa
loope
lret
mov
inc
adc
adc
lcall
ss
mov
mov
stos
icebp
and
pop
xlat
ret
push
sarb
fisttpl
xchg
push
or
xchg
or
push
jp
push
ss
addb
push
sub
into
jg
out
xor
mov
jae
movsb
sbb
mov
adc
aad
aas
loop
addr16
push
mov
mov
sar
cwtl
xor
addl
jns
test
sub
cmp
pusha
push
loope
push
xchg
ss
or
in
or
es
hlt
dec
xlat
mov
mov
rdmsr
cmp
aam
mov
fistpll
adc
mov
arpl
adc
sbb
inc
mov
mov
add
data16
ljmp
cmp
sti
jnp
movsl
arpl
rcr
push
mov
js
xor
xchg
stos
lods
movsb
aas
xchg
xlat
jne
cmc
loopne
push
cmp
adc
repnz
xor
cmc
rcll
push
adc
ret
movsl
int3
xorl
out
fisubrs
dec
mov
inc
push
jne
data16
ss
cltd
or
rclb
hlt
mov
cwtl
fxch
and
inc
add
cmp
daa
test
dec
in
fidivrs
in
sti
mov
push
fwait
jns
cltd
in
or
inc
and
push
in
imul
pop
push
repnz
pop
cmp
in
fbstp
pop
fmul
rcll
fstps
adc
pop
aad
leave
lods
loop
sub
outsb
das
cmpsl
sbb
sbb
push
in
insb
push
xchg
test
push
inc
push
pop
pop
repz
loopne
gs
adc
pop
xchg
cmp
scas
mov
xor
sbb
push
jp
roll
pop
in
dec
test
xor
add
inc
sub
das
inc
in
scas
sub
jl
ss
cmp
and
gs
xchg
outsl
mov
inc
iret
mov
mov
imul
dec
int
mov
or
pop
push
test
jnp
or
shrb
pop
cmp
imul
jns
jg
push
jae
fcoml
outsl
xor
mov
out
mov
popf
pop
jns
test
dec
add
addl
nop
icebp
add
and
mov
test
xor
pop
adc
jecxz
or
adc
dec
scas
insl
inc
sub
lock
push
nop
add
loop
in
inc
inc
hlt
xchg
mov
pop
xchg
test
arpl
leave
ret
and
xchg
and
push
imul
out
pop
ja
xchg
sub
sbb
mov
out
adc
jo
jmp
out
notl
adc
cld
fildll
jle
rorl
adc
push
and
xor
sbb
jno
jle
imul
mov
inc
push
shlb
in
jno
push
loop
inc
xchg
lods
adc
jae
jmp
cmpb
mov
mov
inc
loopne
leave
iret
in
movsl
jg
ss
cmp
push
dec
jne
dec
pop
pop
mov
mov
inc
repz
inc
cltd
push
popa
int
aad
pop
mov
outsl
mov
mov
add
sahf
mov
dec
mov
insl
jmp
mov
mov
jl
ss
xchg
mov
call
ds
sti
or
pop
test
das
cltd
jle
push
jns
test
gs
or
aas
iret
rcrl
xchg
mov
aam
je
fisubrs
movsb
push
xor
das
adc
inc
mov
fisttpll
sbb
xchg
gs
xor
adc
test
jb
repnz
mov
pop
sbb
push
mov
xchg
inc
int
or
pop
inc
pop
addb
mov
inc
dec
add
scas
pop
push
add
lret
sbb
mov
and
pinsrw
cmpsl
mov
mov
ret
je
xor
xchg
out
insb
mov
addr16
ss
into
cmp
push
pop
push
stos
add
cmp
mov
xlat
das
in
mov
sub
xor
push
je
hlt
lock
in
inc
das
fidivl
xchg
push
sub
jl
rolb
pop
roll
mov
push
xchg
ret
jns
and
cltd
inc
mov
and
popf
lods
jp
sbb
out
je
xchg
das
inc
fnstenv
jne
cmp
sbbl
ficompl
push
orl
stc
mov
jp
cmp
inc
in
jae
xor
cmpl
push
mov
add
inc
pop
mov
pop
or
push
mov
cmp
dec
xchg
jmp
and
les
shrl
fldl
mov
in
lcall
gs
jns
cs
mov
shrl
incb
imul
jg
inc
sbb
ret
push
jmp
or
bound
pop
cmc
push
adc
out
and
iret
adc
mov
mov
jmp
cmp
addr16
ret
adc
adc
std
adc
in
pusha
daa
xor
int3
push
inc
or
js
mov
in
cmp
xchg
outsl
inc
lock
fdivr
loop
enter
stos
loop
int
aad
sub
enter
out
xchg
inc
mov
mov
inc
stos
mov
notb
dec
jl
xor
xchg
jns
test
iret
sbb
jle
insb
hlt
push
scas
xor
xor
call
sar
xchg
jl
fwait
xor
je
sub
fwait
jle
jmp
jecxz
jno
mov
stc
xchg
inc
and
mov
lret
loopne
fiadds
repnz
imul
xlat
mov
fiaddl
test
iret
lret
out
fwait
dec
or
dec
shlb
pop
mov
sti
add
test
mov
shlb
push
mov
mov
adc
adc
cmp
fisttpl
dec
in
add
jl
inc
icebp
call
and
pop
or
stc
lock
adc
and
inc
stos
pushf
jecxz
dec
push
mov
pop
frstor
push
xchg
fistpl
and
adc
lds
fcompl
sub
aas
pop
dec
gs
ds
das
lret
sub
nop
fcoms
fisttpl
ror
cmp
repnz
je
xor
pop
addr16
jo
sahf
shlb
mov
mov
ja
dec
mov
jo
fwait
sbb
cld
mov
addr16
add
insb
data16
adc
push
or
jg
inc
push
lahf
mov
in
mov
mov
setb
call
daa
sub
sub
fsubp
cmp
test
jg
jae
movsb
inc
gs
adc
insl
or
imul
das
pop
stos
jmp
sbb
lea
mov
push
jle
ret
lock
pop
sti
push
pop
pusha
push
sub
inc
insl
push
shll
inc
fs
mov
and
sub
stc
mov
icebp
sbb
xchg
hlt
push
mov
mov
jle
sub
ja
dec
jl
ret
iret
std
sar
sub
and
and
sbb
mov
loope
mov
mov
ss
inc
stos
xchg
es
sbb
cld
insl
mov
or
cmp
mov
das
pushf
dec
or
or
pop
test
loopne
sahf
imul
push
repnz
jne
in
mov
jae
cs
out
jbe
scas
cmp
add
adc
and
pusha
das
js
jne
fidivs
adc
inc
aas
cmp
mov
sub
and
inc
xchg
sbb
into
addr16
inc
jecxz
test
dec
fcoml
jne
pusha
jp
jmp
push
arpl
push
sub
fiaddl
jbe
dec
imul
test
push
adc
sbb
repnz
xor
fwait
xchg
lahf
lret
and
add
out
sub
mov
adc
and
cwtl
add
in
bound
or
dec
scas
divl
test
lea
dec
imul
lcall
aas
out
lock
xor
xor
sbb
repz
divb
negb
inc
test
icebp
cmp
adc
push
push
mov
hlt
aad
mov
data16
xor
test
andl
mov
cmp
push
cmp
aad
popf
movsb
jno
shl
mov
jp
leave
xor
xor
mov
sarl
jne
adc
addr16
das
shrl
mov
sbb
or
push
push
loope
test
aas
pop
adc
mov
jg
rcr
push
pop
lods
push
loop
mov
mov
das
xor
popf
jae
addl
out
dec
mov
push
addr16
ja
inc
jns
sbb
jnp
mov
jg
hlt
lret
aam
sarl
bound
mov
push
pop
arpl
jno
pop
sub
xor
add
inc
mov
mov
mov
popa
xchg
cmp
call
jecxz
mov
in
mov
shlb
insl
push
lcall
jp
mov
sbb
std
or
in
shll
fadds
imull
adc
lock
addl
jp
mov
mov
inc
push
ret
and
cmp
add
dec
icebp
arpl
scas
jp
out
mov
or
cld
cmc
iret
lahf
int
out
push
call
in
mov
xchg
cmp
push
insl
sub
cwtl
xchg
mov
inc
cmc
insb
loopne
mov
fimull
add
sub
push
ret
repz
arpl
dec
sbb
outsl
push
idivl
and
out
subb
push
jns
xchg
jg
loope
bound
dec
adc
repnz
xchg
das
fnstcw
pop
add
mov
mov
movd
rcr
mov
aas
in
arpl
cwtl
imul
or
inc
and
pop
aaa
stos
push
jmp
xlat
rol
xchg
cwtl
mov
outsb
xchg
outsl
xchg
fsubp
pop
mov
enter
leave
int3
xor
pusha
jns
xor
in
jnp
lea
pop
fistpll
pop
shlb
fmuls
fwait
cmpsl
mov
popf
mov
das
leave
mov
add
push
pop
fisttpll
inc
and
and
fldenv
push
stos
cmp
cmpsb
mov
push
xor
leave
mov
test
jae
les
jecxz
and
add
adc
rcl
in
out
mov
xor
mov
out
mov
jae
stos
jecxz
pop
pusha
xor
lea
fstp
xor
jbe
arpl
fisubrs
jbe
pop
imul
sub
jmp
jne
cwtl
popf
in
in
pop
push
jmp
and
and
add
roll
out
andb
test
cli
shl
lret
in
sar
jno
das
mov
xor
push
aam
daa
pushf
jns
sub
popf
push
dec
hlt
aaa
addr16
inc
outsb
push
cmp
ret
add
je
cld
repnz
xchg
push
lock
repnz
ja
mov
cltd
addl
insl
fldcw
sbb
adc
inc
rcrb
push
push
dec
mov
lcall
pushf
loope
adc
in
outsl
xor
nop
push
cld
adc
mov
add
iretw
inc
fcmovnbe
pop
ret
and
sub
dec
gs
call
nop
mov
mov
into
push
mov
xchg
sub
fwait
xchg
fwait
xor
inc
aam
fldt
shlb
or
and
fwait
or
daa
jecxz
call
movsl
adc
int3
push
rol
push
push
push
ss
fmull
out
fnstsw
ja
das
scas
fdivs
xor
add
inc
out
cmp
nop
or
fprem1
add
xchg
popa
xor
loopne
bt
es
insb
paddq
and
sub
xlat
aaa
mov
sbb
cmc
inc
dec
ret
in
cmc
pop
dec
xlat
das
mov
popf
push
pop
xor
data16
and
into
and
mov
or
loopne
hlt
pop
mov
test
add
icebp
jecxz
jnp
xchg
push
orl
icebp
std
push
inc
jge
aad
jecxz
idivl
add
jge
and
mulb
or
xchg
scas
scas
imul
xor
aam
nop
mov
sbb
adc
mov
and
mov
ljmp
add
and
pop
cwtl
cmp
fsub
inc
xchg
es
jno
pusha
adc
pop
pop
mov
inc
cmpsl
ret
inc
ja
in
popa
jg
es
jmp
inc
jbe
jge
or
pop
dec
lahf
int3
sbb
je
pushf
xchg
out
shll
pop
stos
insl
lret
es
int
add
gs
mov
sbb
ret
loopne
lea
xor
inc
cmp
cltd
xchg
or
or
sbb
scas
lret
loope
sub
cmp
fisttpl
cmp
ret
out
pop
xchg
xchg
mov
adc
inc
sbb
xlat
cld
loopne
adcb
xchg
cmp
not
lods
pop
ret
mov
inc
insl
bound
in
xchg
pushf
adcb
leave
in
lea
in
enter
jbe
cmc
adcl
test
cmp
inc
xorl
test
push
sub
cmpsl
jb
push
movsb
xchg
or
xchg
test
or
jmp
shl
insl
test
fildll
xchg
lcall
pop
in
mov
frstor
idiv
dec
push
add
movsl
pop
test
inc
ds
pushl
xchg
sbb
and
lahf
adc
movsl
pop
clc
sbb
dec
cs
fsubs
scas
repz
jp
adc
pop
mov
or
js
rcr
in
push
jns
push
movsl
sub
roll
xchg
insb
xchg
fucom
fmul
and
mov
or
push
inc
std
jge
test
gs
stos
into
aas
push
xor
push
outsb
je
pop
jle
add
dec
xchg
mov
or
fs
jns
lods
xchg
sbb
mov
outsb
test
aam
sbb
lahf
clc
fildll
mov
mov
imul
inc
xor
xchg
pop
add
sahf
push
je
decb
sbb
je
ds
sub
orl
jp
add
je
int3
jecxz
pushl
or
inc
int
inc
fdiv
dec
insb
mov
mov
fisubrs
push
scas
inc
movb
push
pop
or
inc
rcr
sbb
lds
push
mov
sbb
xchg
pop
mov
xchg
leave
das
scas
xor
mov
xor
dec
mov
loopne
pop
inc
dec
fmuls
add
inc
pop
add
clc
cmp
int3
cmp
push
xchg
xchg
mov
mov
or
sbb
outsb
pusha
mov
aas
addr16
jp
xor
mov
test
xchg
xchg
stos
cs
jle
int3
repnz
jno
incb
jo
aas
xor
xchg
mov
dec
dec
pushf
test
mov
dec
adc
jbe
jle
jp
add
xchg
sub
or
xor
mov
xchg
or
or
out
dec
xchg
mov
mov
pop
xor
inc
ss
dec
sbb
aam
fists
das
jne
ss
inc
xor
or
jbe
mov
test
pushf
aaa
push
sub
cld
mov
sbbl
dec
push
xchg
sarl
pop
push
add
dec
dec
jbe
jg
add
mov
aad
inc
or
or
out
andb
outsl
repz
dec
test
inc
mov
or
pop
popf
rcl
cmc
dec
stc
cmp
adc
fwait
cli
or
mov
mov
pushf
pop
pop
aaa
inc
fs
scas
or
xchg
and
in
adc
push
sbb
in
jno
add
mov
in
rcll
sub
mov
movsb
dec
jmp
clc
adc
loopne
xchg
shll
add
sub
xchg
daa
scas
shrl
xchg
xor
out
dec
adc
out
inc
jge
into
xor
scas
mov
icebp
add
mov
and
inc
int3
jg
dec
call
out
mov
shrb
std
int
stc
leave
push
mov
adc
sub
mov
ffree
lods
xor
shlb
popf
test
mov
pop
shlb
cltd
jns
dec
mov
or
mov
fdivr
lcall
cltd
movsl
push
mov
inc
sub
lahf
iret
fwait
shll
xorl
jge
imull
addr16
pop
cmpsb
cmp
or
or
loopne
pop
sub
jmp
mov
outsb
mov
or
pushf
xchg
push
push
push
aaa
dec
pop
sub
adc
dec
xchg
lds
adc
pop
loope
lahf
push
movsl
setge
scas
cmp
mov
dec
add
pushf
jo
add
mov
lods
jne
mov
ds
imul
add
push
sbb
jle
rclb
and
add
sbb
mov
aad
add
pusha
aad
add
xchg
popf
mov
mov
ficomps
xchg
imul
into
add
stc
cli
jnp
sbb
mov
lcall
pop
pop
inc
pop
push
enter
push
fcmovb
inc
aas
ret
cmc
movsb
mov
inc
fisttpl
mov
push
and
iret
cli
mov
adc
out
aad
popa
jns
cli
and
out
fidivl
sarl
test
sub
data16
adc
cmp
adc
push
cmp
out
or
fldenv
push
test
out
fnstsw
call
mov
imul
mov
fiadds
loope
ds
dec
test
cwtl
loope
sbb
mov
pop
call
push
add
addr16
icebp
mov
out
push
pop
cmp
loop
cmc
notl
jge
pop
dec
mov
inc
gs
push
pop
xlat
pushf
hlt
mov
pop
cmpsb
mov
repz
lea
mov
mov
cmp
rol
into
not
mov
lock
dec
test
cld
push
outsb
mov
xchg
movl
sbbb
bnd
jmp
pop
push
xchg
loope
aam
fscale
add
gs
cmp
arpl
repnz
inc
push
rcll
in
imul
popf
hlt
into
fldcw
and
xor
mov
jg
inc
jns
jne
clc
and
sub
fbstp
dec
lret
cmc
cmp
jb
dec
les
cmp
xchg
push
lahf
xor
or
inc
xor
fnstcw
inc
xor
js
gs
sub
addr16
scas
fnsave
mov
mov
stc
insl
test
test
iret
xchg
mov
push
test
mov
sub
mov
scas
cltd
jp
pop
sbb
lds
mov
adc
mov
cwtl
sbb
adc
jo
lods
fsubrl
dec
or
clc
jns
inc
mov
adc
mov
or
rcrb
xor
dec
cmpsb
hlt
nop
fldt
shl
sbb
ss
pop
clc
pop
fs
sarb
test
gs
ja
mov
or
push
inc
fwait
jmp
and
cmpb
negb
mov
mov
shr
fadds
xchg
dec
xchg
ja
in
pop
and
jb
test
jmp
cmp
sar
dec
repnz
rorl
or
fldcw
xor
xor
jp
outsl
andb
cmc
inc
xor
sti
lds
sub
push
mov
sbb
rcrl
and
hlt
jle
push
mov
orl
push
inc
out
push
mov
cmp
mov
xchg
or
test
cmp
inc
mov
sub
mov
es
mov
fldpi
xchg
cmp
int3
addr16
jge
loop
jp
sarb
jbe
add
or
stos
push
cmp
sub
in
adc
pop
mov
add
loopne
cmpsb
jmp
push
js
in
aad
into
pop
lahf
push
cwtl
aas
mov
add
mov
das
pop
mov
imul
int
sbb
pop
push
sbb
shrb
aas
push
mov
jne
movsb
leave
cs
jo
adc
aaa
inc
popa
push
adc
scas
push
or
out
push
xchg
pop
add
fwait
cmpsb
mov
or
dec
xchg
mov
add
daa
scas
popf
adc
aam
mov
imul
in
clc
in
dec
shr
adc
jo
sbb
add
push
sub
mov
mov
and
or
jne
push
adc
in
mov
aam
xchg
lea
inc
pop
test
sub
pop
and
leave
cs
aaa
or
aas
inc
rorl
xor
pop
jp
arpl
cld
cmc
push
mov
jmp
mov
or
mov
lods
jnp
aam
imul
mov
pop
jl
mov
loopne
jae
pop
pop
imul
and
rcrl
push
add
mov
lods
sub
xchg
int3
jnp
out
dec
mov
into
mov
cmp
inc
bnd
xor
sub
mov
stos
clc
rolb
mov
or
leave
test
nop
push
mov
aaa
data16
push
aad
pop
mov
jbe
jne
lds
jns
lcall
xchg
lret
leave
cmpsb
jo
add
nop
mov
repz
xor
jg
and
inc
xorb
xchg
mov
xchg
dec
imul
xor
cld
lret
je
and
leave
in
mov
loopne
and
leave
push
stc
std
jb
inc
xor
aas
dec
out
xchg
mov
sarb
fidivs
mov
repz
ljmp
ljmp
dec
xchg
test
loope
fisttpll
push
inc
es
ds
lret
out
push
mov
xor
inc
mov
aad
out
xor
xor
ret
in
ja
repnz
cmp
mov
mov
pushf
sbb
add
insb
decb
mov
stos
xor
mov
jge
aad
scas
inc
dec
mov
mov
stos
inc
inc
mov
mov
jb
into
outsb
clc
divb
fidivl
aas
arpl
jmp
les
xorb
xor
pop
xor
and
inc
mov
shl
push
xor
lret
arpl
add
mov
dec
add
std
mov
daa
lahf
dec
pop
stos
push
roll
pop
mov
jle
fs
testl
out
stos
mov
xchg
in
xor
jns
mov
inc
test
dec
add
cmp
out
fisttpll
push
dec
sbb
fnstcw
xchg
inc
push
pop
and
std
les
cmp
sbb
lods
stos
push
mov
iret
popl
pop
adc
aad
xor
jle
xor
insl
xor
add
and
inc
fistpl
lock
jge
sbb
pop
pop
mov
mov
xor
and
inc
cld
ficoml
subb
add
int
mov
jne
imul
sbb
in
mov
add
mov
dec
add
mov
aam
inc
sub
add
push
pop
mov
cmpsb
addr16
sbb
adc
je
lds
dec
mov
mov
outsb
decb
icebp
push
imul
repnz
outsb
ret
imulb
mov
frstor
in
addl
jmp
xchg
stc
add
js
insb
sub
dec
dec
add
test
pop
movsb
cmp
pop
xchg
push
sti
cltd
outsb
test
rcr
adc
or
nop
and
roll
aas
loopne
cmpsb
inc
enter
repnz
test
sub
pop
cmc
mov
xchg
mov
pop
sbb
lret
std
inc
mov
push
fidivrl
cmp
jno
push
xor
xlat
push
fidivrl
sbb
or
scas
test
iret
popa
mov
sbb
dec
sbb
and
jmp
sar
xchg
cmp
nopl
int3
mov
mov
sbb
mov
je
jo
andb
dec
sub
adc
loopne
pop
fmul
cmpsb
scas
mov
repnz
in
aam
inc
das
mov
mov
mov
jne
sub
mov
ja
mov
cwtl
ficoms
jp
push
cmpsb
jle
hlt
loopne
jmp
push
xor
out
and
fmul
int
push
and
fwait
cmpsl
jp
lret
mov
xchg
dec
lcall
fisttpll
mov
fcoms
mov
popf
inc
jge
loope
int3
test
aad
inc
ja
fldcw
ljmp
pop
sbb
add
inc
adc
push
ret
cmp
addr16
jp
repnz
aad
sbb
repz
pop
lea
xorl
test
push
stos
inc
adc
add
je
dec
jl
xor
lock
and
repnz
jbe
lret
adc
mov
adc
push
sahf
into
aaa
loop
xchg
and
imull
inc
dec
into
push
sub
lea
xchg
lock
jnp
int3
mov
mov
and
mov
rorb
mov
sbb
mov
ret
jb
out
ret
popf
jbe
or
js
mov
xchg
cmpsb
icebp
sub
sub
xchg
bound
lret
mov
inc
xor
push
test
inc
sahf
mov
push
inc
cltd
aad
ret
dec
xchg
lock
pushf
dec
dec
sub
add
push
and
xor
icebp
sbbl
jle
frstors
mov
xor
das
sahf
data16
fcmovnu
jnp
outsl
mov
int
mov
xor
push
aam
cmpsb
fisubrl
mov
arpl
cmp
loope
pusha
mulb
cltd
xor
popf
icebp
scas
mov
in
cmp
cmp
dec
in
mov
cmp
cwtl
sub
adc
push
cmc
pop
sbb
and
or
mov
mov
jl
or
sbb
scas
xchg
or
cmpsb
sbb
gs
mov
lods
jge,pt
dec
cmp
mov
inc
push
and
cld
andb
xor
mov
add
and
sub
push
and
jp
icebp
call
rorb
mov
jno
push
in
aam
dec
add
cmc
lds
xor
mov
dec
lret
and
adc
mov
adc
push
or
push
pop
and
shrb
inc
faddl
inc
sbbb
jl
mov
decb
repnz
lods
shlb
rcrb
iret
repz
cld
jge
aaa
sub
and
leave
dec
jnp
mov
inc
arpl
fnsave
xchg
jae
call
mov
clc
ror
inc
daa
xchg
cmp
imul
dec
sub
push
sub
lcall
push
and
push
mov
test
adc
cmpsl
jge
std
icebp
rorl
bound
push
mov
push
pop
mov
dec
imul
nop
sbbb
ss
fisubrs
mov
outsb
rclb
imul
enter
sbbl
mov
mov
jle
push
mov
int
inc
and
xchg
dec
cmp
lcall
call
mov
into
insl
sqrtps
cltd
push
hlt
cmp
xor
push
jl
sub
negb
les
or
int
call
adc
mov
jge
insb
fsubs
jne
mov
push
adc
jo
adc
xchg
fsubrp
pop
mov
out
mov
bound
cwtl
aas
mov
divl
sub
leave
jmp
in
out
lcall
data16
pusha
lock
mov
jmp
xor
in
lds
adc
xor
movsb
jge
jecxz
dec
outsl
mov
or
jne
add
mov
sub
aam
cmp
jae
retw
mov
scas
adc
or
pop
das
pop
or
xor
jbe
iret
mov
movsb
in
pushf
nop
mov
adc
xchg
adc
std
inc
sub
sub
gs
xor
into
jns
repz
xor
lds
pop
outsb
mov
inc
cmp
mov
push
mov
les
fsubrp
adc
cmp
faddl
xchg
push
rcr
icebp
jle
sarl
dec
lods
addr16
mov
dec
xor
cmc
mov
xchg
xor
inc
sbb
xor
mov
xchg
es
imul
roll
jg
mov
lcall
scas
ja
jae
dec
lods
lahf
jb
int
adc
fnstsw
pop
pop
pop
pop
cmp
pushw
ljmp
push
push
fstl
out
dec
mov
outsb
and
das
imul
xchg
and
mov
xlat
mov
xchg
cld
xchg
or
repz
cmp
sahf
sub
cmpsb
jmp
mov
pop
dec
jl
ds
pop
sub
jbe
repnz
mov
xchg
inc
loop
ja
leave
or
in
loopne
popf
add
scas
lahf
mov
mov
adc
sub
jns
test
stc
fdivl
jne
dec
adc
stos
es
sub
jo
sbb
inc
arpl
aas
aaa
popa
mov
daa
test
jge
jno
mov
in
inc
lret
out
js
push
xor
rcrb
and
daa
aad
aad
scas
pop
lock
fildl
out
adcb
mov
xorb
cmpsb
adc
dec
or
aas
adcl
icebp
mov
lods
push
icebp
hlt
add
jne
jne
push
push
cmp
daa
sbb
in
insl
xor
sbb
xor
xor
fldt
or
push
cs
cmpsb
sahf
fcompl
or
shlb
xchg
sub
push
mov
mov
out
mov
add
mov
std
push
outsb
stos
sub
loop
es
xchg
xchg
cmp
loope
movsb
lret
mov
xchg
fcoms
push
or
adc
or
pop
outsl
sbb
lock
call
mov
mov
cmp
clc
out
lock
lods
dec
xchg
stos
inc
sub
cmp
aam
sbb
addl
push
and
or
movsb
push
fsubl
cltd
ret
adc
andl
mov
mov
pop
loope,pn
adc
cwtl
cmp
xor
clc
cmp
sti
xor
xorb
pusha
mov
pop
test
sub
lods
pop
lret
daa
sbb
xchg
fdivl
cmpsl
mov
cmp
xchg
pop
rorb
das
arpl
mov
cmp
inc
mov
sub
fbld
repnz
pushf
inc
daa
jne
pop
rcll
cmpsb
popa
mov
icebp
sbb
orb
push
movsb
or
xchg
sub
cmpsl
fisttpl
stos
push
sbb
mov
fiadds
xchg
pushf
jo
clc
fldenv
out
cs
mov
dec
ficompl
out
or
rcrl
fistl
out
aas
push
xchg
inc
inc
ljmp
hlt
pushf
and
pop
fmull
dec
jne
xchg
push
add
adc
xchg
call
imul
aad
movsl
pop
or
daa
push
add
jle
and
pop
push
mov
dec
repnz
sbb
arpl
loop
rclb
mov
pop
sahf
int3
scas
sub
adc
and
pop
pop
subb
test
dec
and
mov
jns
je
ja
add
and
daa
jns
fisubs
adc
fwait
mov
shl
bnd
ret
xchg
dec
outsb
xchg
aaa
lret
mov
mov
ss
jns
xorl
int
insl
lock
mov
fcompl
xor
aas
jle
lahf
std
fst
pop
std
xor
lock
rcrb
outsb
xor
add
add
mov
jae
cmpsb
cmp
xchg
adc
inc
outsb
cmovns
push
fwait
mov
adc
mov
pop
lea
dec
aas
imul
in
jae
in
stc
push
and
das
hlt
out
dec
jl
xor
movsl
dec
jb
shll
cmp
adc
imul
mov
sahf
cli
sbb
push
data16
out
jp
dec
into
lods
cmp
mov
ret
adc
cli
cs
mov
mov
repnz
cmp
out
filds
cwtl
sbb
cmpsl
repz
orl
jg
and
sub
mov
sbb
sti
xchg
daa
test
inc
faddl
sub
xor
dec
test
cli
ret
pop
sub
pop
pop
ljmp
lahf
jmp
mov
out
mov
xlat
ffreep
int
add
push
imul
mov
lret
outsl
nop
loope
or
je
popf
pop
jbe
and
rorb
cmp
adc
push
adc
insl
sbb
sahf
adc
inc
fimuls
and
outsl
mov
jmp
imul
mov
cltd
and
dec
out
dec
loope
sub
jp
xor
aam
push
es
mov
sbb
in
add
or
aaa
adc
push
push
push
cs
xchg
mov
test
push
xor
and
pop
cmp
loope
jne
jo
fsubs
stc
loopne
das
movsl
mov
xchg
cli
popf
or
scas
testl
out
xor
sbb
popa
mov
cwtl
outsb
or
repnz
cmp
inc
popa
lds
mov
inc
xchg
pop
pop
add
mov
pop
stc
lds
jp
mov
mov
mov
loop
jno
cmc
mov
negl
push
lods
jne
xchg
scas
imul
jno
xor
dec
inc
jnp
adc
pop
cld
inc
add
cmp
mov
jmp
xchg
clc
stc
and
mov
sub
in
xor
add
int3
jbe
ljmp
adc
sub
cmp
ret
mov
mov
cmp
dec
in
popf
and
or
jle,pn
push
movsl
sub
test
daa
aam
sbb
pop
lret
sti
roll
loop
addl
nop
ret
iret
iret
xchg
hlt
sbb
cmp
ds
popa
inc
inc
pop
dec
cltd
nop
sub
repnz
je
cltd
icebp
xlat
xlat
jmp
ss
les
and
bts
cmc
fmul
gs
cmp
test
sub
iret
loopne
mov
pop
movsl
push
jecxz
mov
iret
fisubs
lods
insl
insl
mov
imul
sub
clc
test
inc
test
cmp
pop
ss
or
mov
ljmp
cs
jl
loope
insb
add
stc
enter
sub
cs
fbld
inc
mov
fsubr
mov
shll
cmp
roll
sarl
dec
sbb
or
sarl
cwtl
sbb
jnp
dec
inc
sub
imul
mov
gs
gs
mov
mov
outsb
sbb
test
sub
aas
or
add
addb
pop
mov
nop
test
in
lret
outsb
std
out
cltd
sbb
mov
mov
inc
lods
inc
out
nop
jbe
sti
adc
adc
mov
sahf
push
loopne
bound
push
fnstcw
daa
adc
ret
int3
mov
rcl
jbe
cmp
je
nop
and
fadd
inc
add
cmp
psrlw
enter
ljmp
adc
jg
aaa
add
imul
xor
sahf
dec
xor
fsubl
les
hlt
outsl
push
dec
adc
mov
ss
inc
mov
sbb
rcrl
jmp
mov
pop
leave
xor
fidivs
cmc
fnstenv
cli
mov
mov
cmp
pushf
add
and
out
lret
testb
dec
imul
jnp
out
cmpsb
out
mov
mov
push
clc
lods
cmp
lcall
and
and
jno
pop
les
add
adc
and
or
cwtl
adcb
mov
imul
or
sahf
adc
xor
add
jnp
icebp
dec
mov
inc
mov
scas
mov
dec
outsb
scas
dec
mov
add
xor
cld
fistpl
in
mov
mov
sahf
adc
dec
xor
sbb
scas
xchg
loopne
cmpb
and
outsl
sub
cmp
das
inc
xlat
data16
push
loope
loopne
push
cmp
inc
push
and
outsl
inc
and
sub
adcb
clc
adc
lret
mov
test
pop
in
ljmp
sub
mov
nop
sar
out
stc
fwait
bound
movsl
shrl
loopne
aaa
adc
fbstp
mov
aad
imul
push
int3
test
testb
pop
adc
fimuls
daa
loop
pop
outsl
jl
fdiv
inc
test
dec
jbe
iret
rcrl
dec
mov
xchg
clc
pop
inc
mov
vmovdqu
rcll
cmp
imul
fidivl
out
and
xlat
aam
addr16
jecxz
aaa
arpl
repnz
movsb
xchg
add
in
jno
push
push
aas
movsb
mov
enter
mov
cmpsb
ljmp
jo
fnstcw
leave
jae
adcl
test
fstpl
push
mov
jecxz
sub
add
gs
call
fcomi
test
cltd
push
icebp
testb
lods
movb
mov
dec
fsubrl
sbb
loop
arpl
testb
ja
add
mov
data16
jle
je
xchg
jmp
pop
mov
gs
loop
lds
shrl
sub
mov
jl
in
fldl
test
ss
jnp
ljmp
jle
mov
andb
push
sbb
add
pop
jb
clc
loop
lahf
imul
cmc
mov
sub
int
pop
jmp
and
cwtl
push
and
iret
fistps
cli
adcb
adc
cmc
push
imul
test
iret
xchg
rcll
add
pop
mov
fimuls
icebp
outsb
repnz
imul
push
cmp
push
push
cmp
adc
or
mov
or
dec
jo
xchg
sub
enter
outsb
and
push
movb
imul
and
xchg
out
pop
mov
jnp
ret
js
je
adc
xchg
sbb
imulb
int3
lock
rolb
out
dec
cld
mov
imul
xor
es
pop
push
dec
dec
out
push
mov
push
fistpll
cmpsl
loopne
out
dec
push
loopne
adc
repz
mov
cs
sbb
std
or
lret
push
mov
lahf
enter
adc
ja
or
lea
pusha
out
mov
mov
sub
mov
mov
xchg
inc
xchg
or
enter
xchg
sbb
cmp
dec
sub
jmp
sub
xor
mov
inc
pop
stos
fmuls
cmpsl
push
mov
jne
cwtl
movsb
out
inc
sti
cmp
das
and
movsl
or
and
jbe
sahf
add
scas
loopne
inc
push
jnp
add
mov
add
push
int3
xchg
cmp
stos
int3
rcrl
jge
outsb
jnp
popf
inc
shlb
xchg
add
iret
ja
dec
arpl
rsm
repnz
cli
and
add
xor
int
sbb
pop
je
inc
mov
enter
aam
insl
in
mov
mov
mov
or
pop
ret
das
mov
lds
scas
jg
scas
lcall
sub
stos
fwait
lahf
scas
mov
pop
mov
insb
cwtl
incb
pop
push
test
dec
fmuls
push
or
filds
mov
and
push
roll
iret
or
repnz
imul
sbb
daa
iret
jne
mov
test
add
movsl
js
mov
aaa
xchg
test
mov
scas
mov
mov
push
popa
mov
mov
jle
sar
and
jmp
cmp
sub
push
mov
and
mov
jbe
and
lret
or
loopne
shrb
mov
dec
pop
sbb
jle
test
push
std
push
sbb
inc
or
mov
xchg
push
pop
sahf
pop
mov
hlt
in
mov
shll
ret
sbb
shlb
jl
shl
insl
rcl
test
int
cwtl
lret
push
ret
push
sahf
jg
push
xchg
sbb
int
clc
mov
jge
mov
push
je
cmp
jb
sbb
pop
pop
push
cmc
sub
aaa
xchg
and
jbe
insl
lock
mov
pminub
or
or
cmc
cmp
or
dec
jb
mov
cmpsl
lcall
cmc
incl
adc
stos
add
and
adc
popa
and
mov
sbb
jg
add
adc
and
stos
enter
arpl
pusha
adc
xor
fldl
test
cmp
sbb
into
daa
cmpsb
cmp
les
cmp
jo
out
rcrl
and
pop
jae
pop
sub
jnp
sbb
rorl
pop
xor
les
test
ret
in
sti
and
test
pop
shll
add
stc
mov
mov
lret
mov
test
mov
fstps
mov
rcr
jne
or
les
jge
pop
inc
inc
outsl
cmp
sbb
xchg
addr16
mov
stos
push
pusha
ja
jg
into
mov
xlat
jmp
mov
inc
or
test
push
mov
insl
pop
loop
cmpsl
xchg
sub
or
dec
shrl
or
push
push
pop
push
cmp
call
in
mov
jecxz
outsl
cmp
xor
incl
stos
fsubrs
test
and
sarb
jo
sub
jne
call
scas
fistps
cwtl
mov
addr16
cli
in
rcll
inc
cltd
ficoml
cmp
icebp
add
imulb
call
pop
adc
iret
mov
push
push
and
ljmp
cmp
inc
stos
arpl
fwait
shrl
test
clc
test
sbb
lea
call
sbb
or
fcmovb
sahf
ljmp
shl
push
mov
inc
pop
in
mov
add
xor
test
mov
add
inc
arpl
push
sbb
stc
cmp
js
dec
cmpsb
cld
xchg
xor
nop
scas
mov
adc
push
lret
in
movsl
jecxz
pop
into
mov
insb
dec
test
and
icebp
fsubrs
outsl
in
pop
ja
adc
xor
mov
mov
xlat
ret
sub
jle
outsl
ffreep
fiaddl
and
sub
rcrl
sbbl
push
push
adc
xor
mov
push
xor
dec
mov
push
cmp
ja
push
mov
lods
dec
jp
dec
add
dec
out
sahf
outsl
sbb
imul
mov
mov
xor
xchg
jmp
daa
sub
pushf
lea
loop
subl
add
loope,pt
movsb
jle
repnz
test
repnz
or
mov
int3
add
jno
les
popf
fidivrl
push
push
and
xchg
aas
cmpsl
jmp
aaa
leave
test
mov
cmp
add
std
or
xor
xor
stc
ss
int3
mov
lods
iret
mov
mov
cmc
ficoms
jecxz
cmpsl
mov
sbb
jb
sbb
addr16
mov
push
fstpl
pop
loope
or
mov
hlt
jmp
jb
mov
mov
sahf
scas
data16
es
pop
mov
jbe
xchg
lea
sub
adc
in
inc
in
mov
ss
cs
inc
adc
or
test
lret
add
arpl
pop
les
or
and
mov
pop
insb
pop
scas
pushf
cld
add
arpl
sbb
push
insl
nop
imulb
xchg
adc
mov
scas
iret
out
xor
pop
cwtl
cmpsl
jmp
mov
mov
mov
xchg
sub
xor
sbb
lahf
call
jg
pop
mov
cmpsl
scas
inc
or
inc
aad
cmp
jnp
fstpl
jge
xchg
jae
sbbb
cwtl
es
addb
lret
or
pop
and
mov
js
popf
stos
stos
cld
pavgb
lahf
jg
push
insb
mov
sbb
mov
cli
in
lods
mov
jno
mov
xor
outsl
xchg
bound
jmp
out
stos
sub
faddl
and
and
data16
jmp
or
ljmp
stc
add
mov
cmp
jo
stos
lds
dec
loop
rclb
sub
xorl
fadds
fisttpll
dec
push
es
rcr
jg
jp
fimuls
lock
adc
insl
rolb
add
mov
sub
dec
mov
js
add
ficoms
sbb
jns
mov
push
mov
sti
lds
scas
jnp
cld
aam
cmp
jl
movl
leave
mov
mov
sbb
pop
mul
or
pusha
fsubrl
pop
and
loopne
and
jae
adc
testl
cmc
xchg
adc
sub
xor
mov
sarb
xor
adc
shl
popa
repz
xchg
add
in
jnp
js
push
test
data16
jne
mov
and
mov
bound
jo
aaa
inc
in
and
push
mov
lcall
mov
cmp
out
add
mov
cmc
lea
jbe
loope
adc
inc
inc
cmp
or
inc
aas
inc
cmp
hlt
popa
sub
jle
or
dec
and
xlat
dec
cwtl
cmp
movsl
push
icebp
mov
arpl
faddp
popw
hlt
rol
nop
mov
xor
out
push
ret
dec
inc
jmp
xchg
clc
rcll
jp
cs
mov
cs
sbb
add
out
loope
cwtl
adc
cmp
cwtl
jnp
adc
xchg
jo
xor
test
inc
and
mov
aas
push
sar
add
or
daa
sub
or
cmp
nop
fs
les
mov
push
hlt
sub
mov
pop
dec
xchg
cmp
xchg
mov
or
cmp
ds
sahf
inc
mov
jecxz
out
pop
pop
push
rcrb
subb
leave
sub
iret
jmp
iret
bound
outsl
ret
inc
int3
inc
inc
inc
xor
add
jb
gs
insl
xor
stc
and
lods
in
push
push
and
mov
xor
frstpm(287
ljmp
in
and
mov
mov
pop
out
bound
aas
jle
pop
fbld
mov
pop
movsl
mov
cmp
sbb
inc
xlat
dec
xchg
mov
test
push
faddl
insl
push
push
and
aad
aas
cmp
movb
and
adc
inc
dec
mov
cmp
mov
lods
sbb
push
mov
test
xchg
cmpsb
jmp
roll
push
dec
xlat
ja
or
xor
mov
incl
push
mov
jns
iret
dec
jb
or
cmpb
mov
inc
xchg
mov
cli
push
aaa
sbb
mov
cmp
pushf
leave
jg
data16
cs
mov
push
les
aaa
stos
scas
lods
lock
cli
popa
mov
or
cwtl
pushf
lfs
mov
xlat
and
lds
jle
dec
out
shrl
xor
in
jb
or
lret
es
push
xlat
pushaw
jnp,pn
rol
cld
adc
faddl
dec
xor
mov
xchg
shl
fs
push
fucomip
lahf
lahf
cmp
cs
addr16
test
fs
mov
push
xor
test
ja
and
ljmp
adc
dec
push
or
dec
ljmp
pushf
adc
fmul
repz
lods
mov
or
lods
in
mov
or
cld
mov
scas
push
out
sarb
pop
push
fdivs
xor
cmp
pop
aaa
jg
data16
cwtl
jbe
or
cld
jno
push
push
icebp
idivb
and
je
mov
sahf
push
sbb
or
out
jno
sbb
and
ljmp
int
out
jp
jae
sbb
notl
negl
push
fistpl
and
sbb
nop
inc
stos
xchg
aam
popa
mov
loop
or
sbb
ja
cwtl
push
loop
imul
adc
int3
inc
jle
jae
lret
mov
mov
dec
and
stos
test
inc
or
and
xorl
jnp
mov
jl
or
mov
cmp
pusha
jb
fidivs
fidivrs
cmp
loope
dec
add
insb
xchg
aas
imul
sub
cs
outsb
cmp
add
ja
aad
add
fwait
xchg
mov
insb
and
push
mov
or
daa
xchg
rclb
scas
mov
or
and
test
xor
adc
inc
mov
mov
cmp
imul
jp
hlt
add
imul
jbe
push
daa
sbb
popf
orb
inc
pop
dec
mov
cmp
xor
xor
or
in
pop
adc
adc
push
mov
in
xor
xchg
jns
icebp
ljmp
jle
fdivrp
push
loope
fcomip
sbb
js
fbld
sti
out
in
icebp
or
clc
sub
in
test
fisttpl
fcompl
leave
dec
cld
sub
adc
jg
pushf
add
mov
sub
sti
incl
xchg
xchg
out
jnp,pt
mov
xor
fadd
dec
lret
movsb
inc
cmpsb
iret
cltd
xchg
jmp
es
xchg
dec
clc
sbb
fs
push
leave
cmp
jmp
inc
mov
cmp
into
fidivl
fxch
ds
daa
sbb
std
inc
std
gs
cmp
jmp
mov
adc
jae,pn
xor
sti
sub
fisttpl
dec
lret
inc
ret
adc
pop
sub
ret
dec
jnp
lds
jo
mov
and
test
jge
decb
insl
aam
movsl
testb
jge
xor
das
jbe
add
movsb
ret
mov
sbb
add
sbb
or
sub
or
andb
cmp
mov
mov
rol
jge
and
jl
je
jl
imul
mov
les
pop
adc
dec
mov
fwait
fwait
inc
addr16
pop
fldenv
and
stos
outsl
lret
push
mov
popf
jns
adcb
lcall
dec
sbb
aad
mov
lods
fcmovnu
mov
aad
cmpsl
mov
lea
test
and
cmp
repnz
lcall
sbb
inc
mov
ret
sub
add
adc
nopl
jo
test
repnz
add
cmp
or
xor
inc
jbe
and
push
cmpsl
push
enter
out
sbb
in
rcl
jns
dec
leave
inc
mov
lret
aad
test
out
mov
out
lret
and
in
add
sahf
or
jnp
xor
cmp
stos
dec
fcomps
sbbl
xor
inc
inc
jno
pop
adc
out
mov
dec
sbb
inc
xchg
daa
mov
imul
xchg
pop
adc
lahf
test
lods
or
dec
lods
inc
mov
cmp
gs
push
inc
je
int3
cmp
mov
in
enter
cmc
jnp
ds
push
aaa
adc
cmp
lods
ds
mov
mov
xlat
imul
sbb
cwtl
sbb
push
or
and
sub
orb
and
and
movsl
xchg
lods
je
fiaddl
pop
loop
int3
mov
push
sub
dec
pop
repnz
adc
aad
xchg
xchg
jno
jmp
xchg
xor
xchg
out
adcb
cmp
xchg
sub
roll
jle
xor
cld
jo
dec
mov
add
pop
or
pusha
out
push
push
aam
scas
int3
imul
rol
push
add
inc
outsb
mov
xor
clc
out
shll
pop
mov
mov
sub
pushw
or
bound
xor
insb
sbb
mov
andb
out
aas
dec
fwait
pop
push
mov
lea
sub
and
insl
mov
and
inc
in
stos
ficompl
inc
xchg
loop
add
imul
sub
fisubrs
add
push
add
movsb
es
push
or
mov
sbb
dec
aad
push
cmc
test
jmp
sbb
xchg
iret
ret
mov
inc
fildl
add
xor
das
mov
dec
cltd
xchg
popa
nop
sahf
mov
test
inc
sbb
ret
lret
pop
mov
in
sbb
sbb
cs
dec
mov
arpl
mov
push
and
push
sar
pop
mov
dec
adc
sbb
jbe
mov
mov
das
pop
cli
mov
aaa
inc
mov
mov
sahf
push
jnp
out
push
cli
imul
push
pushf
jp
orl
fisubl
pop
push
cwtl
mov
push
fnstcw
jge
inc
das
into
xor
cmp
sub
cmp
daa
push
out
xor
cwtl
sbb
shll
xchg
mov
mov
xchg
adc
enter
inc
out
loop
mov
in
adc
mov
xor
in
add
and
mov
in
push
xor
sbb
inc
push
hlt
cli
std
mov
pop
lea
sub
in
push
inc
scas
lods
mov
addl
push
xlat
push
push
xor
xchg
and
push
mov
lods
dec
std
mov
jp
in
sub
fs
mov
in
mov
sbb
mov
xor
fldt
sti
shl
js
push
cmovo
data16
sub
mov
pop
adc
push
xor
into
sub
sbb
dec
mov
dec
mov
fwait
pop
fimull
adc
movsl
fistl
xor
mov
test
dec
rclb
outsb
and
stc
loope
popa
mov
mov
insl
aaa
xor
dec
popa
and
inc
pop
jl
dec
jle,pn
dec
xchg
pop
jae
jae
inc
xlat
sbb
push
push
cmc
pusha
inc
adc
clc
jbe
and
in
jle
out
aaa
mov
sbb
popa
insl
xor
sysret
hlt
das
loope
sbb
test
std
jnp
sahf
into
or
dec
pop
test
mov
leave
xchg
mov
int3
es
adc
out
out
div
mov
sbb
ljmp
cmp
xchg
mov
inc
icebp
fiadds
cmpb
mov
popf
cmp
or
in
jmp
outsb
dec
ljmp
xchg
xchg
jl
xchg
insb
scas
dec
sub
pop
xchg
adc
dec
jae
xor
xor
push
jae
xchg
loope
imul
dec
and
push
xchg
cld
inc
fistps
gs
aaa
mov
xor
jge
mov
jo
xor
leave
fisubs
mov
aas
push
mov
sbb
mov
pop
inc
cmpsb
or
gs
xlat
pop
fwait
movsb
inc
xor
lahf
or
fstpl
xchg
xchg
add
or
cmp
movsb
ds
jmp
leave
cmp
cmpsl
push
mov
stos
movsb
pop
cmp
cmp
cmp
sub
bound
xchg
push
inc
in
sahf
stos
jbe
add
leave
iret
mov
jbe
fnstenv
cmp
cltd
xchg
mov
pushf
pushf
and
aam
adc
mov
mov
adc
cmp
sbb
scas
jnp
fnstenv
mov
pushf
or
lcall
outsl
lock
int3
repnz
scas
xchg
in
dec
jge,pn
or
push
add
or
mov
sbb
sub
inc
fldt
outsl
loope
enter
sti
std
inc
stos
inc
xlat
inc
adc
mull
inc
loop
dec
push
push
lret
lcall
test
outsl
stos
mov
int
fs
repnz
repz
mov
adc
dec
nop
inc
nop
roll
faddl
and
adc
sub
cmpsb
mov
sbb
cmp
or
jae
add
sub
fs
out
movsb
xchg
ficomps
cld
dec
pop
xor
jae
subl
xor
imul
cld
jge
sub
out
mov
xchg
clc
fistps
ds
cmpsl
scas
dec
mulb
mov
in
outsl
sub
xor
jl
ret
add
inc
cltd
dec
int3
inc
push
and
push
lahf
int
push
fildll
and
pop
ret
xor
and
dec
mov
test
int3
cmp
cmp
or
dec
cmp
inc
iret
es
leave
pop
xchg
and
dec
push
jo
cmp
inc
dec
aad
dec
daa
push
outsl
push
xchg
stos
pop
sub
call
roll
test
or
xchg
loop
mov
push
push
cmpb
mov
push
rorl
inc
sub
cs
or
mov
clc
testb
xorl
repz
mov
pop
pop
pushl
pop
xchg
jl
cmp
push
push
addr16
sub
icebp
sub
jge
out
jb
jae
aas
cmp
adc
or
shl
jb
lods
icebp
sbb
mov
pop
fwait
ja
sbb
jp
shl
imul
push
sub
dec
out
and
mov
aaa
aad
jb
add
xor
xchg
outsl
inc
lea
xchg
push
ret
jne
lret
scas
mov
xchg
lret
pop
imul
stos
push
mov
jmp
xchg
push
jg
pop
add
dec
xor
sbb
shl
mov
adc
pop
or
ds
sbb
lods
push
fldcw
in
shlb
xchg
add
gs
jle
shrb
pop
pop
cmp
inc
insb
or
mov
addr16
dec
das
push
xor
cwtl
loope
pop
outsb
gs
outsb
cld
aas
movsb
sub
imul
jle
mov
inc
sbb
ficoml
stos
xchg
mov
pop
xlat
mov
cmp
arpl
negb
pop
dec
out
int3
xchg
inc
imul
or
ds
into
mov
xor
inc
xchg
mov
leave
lahf
dec
fwait
sub
lods
adc
mov
cmc
jb
loope
pusha
nop
adcl
cmp
orl
outsl
add
int3
mov
int3
outsb
add
inc
sarb
mov
adc
sub
pushf
mov
cmp
inc
mov
push
dec
clc
mov
cltd
pop
push
mov
inc
and
mov
xchg
fsubrs
pop
xchg
pop
loope
mov
push
clc
dec
adc
sub
pop
psubd
xor
cmpb
dec
or
out
aas
xchg
int3
imul
sbb
add
cmp
cmove
mov
repnz
inc
ds
add
add
ficoml
iret
movsl
in
lods
daa
cmpsl
cmpl
ljmp
jp
in
mov
adc
pusha
call
mul
vpsrld
mov
xchg
ficompl
jo
loop
jo
mov
je
mov
mov
in
mov
dec
xlat
scas
imul
mov
sbb
xor
dec
fcom
scas
mov
stc
jbe
mov
cld
mov
jbe
add
out
inc
cmp
lahf
clc
adc
inc
cmpsl
push
pop
push
sbb
mov
test
daa
cmp
outsl
dec
outsb
and
jne
insb
xchg
pop
dec
stos
jnp
scas
and
xor
sub
js
or
mov
mov
push
dec
js
and
sbb
jecxz
sahf
jb
mov
and
outsl
jg
mov
pop
push
mov
cmp
mov
mov
push
popf
mov
or
insl
inc
add
lock
xor
inc
xor
pop
dec
or
les
jp
push
ljmp
cmpb
push
sti
dec
mov
fisubs
mov
cld
mov
jbe
sub
ret
imul
test
push
push
lahf
sahf
jl
mov
mov
aad
mov
aam
ss
insl
jno
or
loop
lods
push
cmc
lret
sti
jmp
and
jnp
jb
subl
adc
fs
pop
pop
pop
mov
loopne
jle
adc
sti
pushf
arpl
icebp
push
aaa
insl
mov
sub
sbb
mov
push
test
sbbl
add
inc
mov
sbb
push
lahf
mov
push
scas
dec
ret
outsl
dec
pop
push
sub
and
stos
lret
and
pusha
rcrl
pop
mov
fidivrl
jns
mov
andb
or
adc
sub
ficomps
xor
lret
xchg
xchg
jns
xor
and
or
push
mov
mov
mov
pop
xchg
cli
iret
pop
inc
daa
xchg
cmp
fnsave
inc
xor
add
and
pop
test
pop
cmp
push
clc
in
mov
scas
sarl
popf
push
lcall
dec
and
xor
pushf
fwait
cmpsl
out
or
push
out
scas
jno
pop
cmp
mov
and
jne
test
jmp
jne
xor
lea
sahf
cmpsb
shl
out
adc
out
into
daa
cmp
sbb
push
sub
out
loopne
pop
pop
mov
lods
fiaddl
mov
loope
out
dec
es
lcall
jmp
imul
pop
add
inc
jno
aaa
pop
add
sbb
sub
clc
adc
std
push
aam
inc
aaa
scas
and
cs
iret
inc
jge
sbb
mov
iret
cmpl
push
xor
insb
xchg
xchg
popa
test
movsb
xchg
movsl
fsubs
fcmovne
xor
sti
jg
xorl
or
ss
push
fistps
or
movsb
inc
rcrl
gs
sub
push
mov
mov
pop
mov
fdivrs
sbb
inc
mov
movsb
leave
daa
jecxz
xchg
pop
stos
push
shrb
mov
mov
cmp
cmpsl
cmp
push
xchg
jns
int
or
inc
daa
add
jno
dec
or
pop
inc
insb
cmpsl
inc
mull
outsb
test
lret
cmp
push
pushf
cmp
jb
test
jo
sbb
and
jae
cltd
outsl
pop
adc
and
and
mov
bnd
jl
inc
add
cld
fbld
sbbb
out
outsl
mov
xorb
ss
add
sbb
pusha
sbb
icebp
pop
lret
cmpsl
icebp
js
xchg
lods
xor
cmpsl
push
mov
dec
push
iret
les
outsb
pop
divl
movsb
mov
or
xor
or
inc
mov
cmp
jle
jo
mov
mov
les
out
cmp
movsb
aad
mov
dec
adc
pop
jno
pop
cs
adc
mov
fidivs
aas
inc
test
jge
adc
jp
and
mov
inc
jmp
and
sbb
jg
hlt
sbb
push
inc
nop
outsb
add
jne
aad
adc
arpl
cmpl
inc
ss
sub
xchg
jbe
mov
jmp
cltd
adc
sti
xor
jg
cltd
push
add
aas
mov
cmpsl
rorl
push
fcoms
mov
jbe
xor
hlt
lock
xchg
mov
or
inc
mov
sub
es
aam
mov
sbb
ljmp
add
lret
hlt
pop
xor
sub
popa
jns
in
sbb
cmp
jg
out
jmp
jge,pn
xor
mov
pop
add
fiadds
in
ja
sar
mov
jp
mov
iret
in
jb
lahf
xor
scas
iret
jbe
pop
inc
inc
mov
nop
mov
cmp
mov
push
jnp
sti
jo
pusha
sbb
push
in
fdivrl
or
shll
aad
sbb
out
cli
adc
mov
jle
xor
jbe
dec
enter
xor
dec
cs
and
aam
cld
inc
pop
adc
mov
add
data16
cmp
cmp
adcl
lea
test
push
into
scas
inc
cmp
jae
pop
out
sub
ret
call
or
pusha
iret
ret
outsb
cltd
insb
shll
inc
pushf
xchg
push
je
cs
push
and
jo
adc
or
pop
test
cli
push
inc
stos
sbb
push
jle
dec
loop
mov
cmpsl
xchg
jle
xchg
cld
mov
and
ss
sub
shrb
push
jge
inc
insb
xor
cli
out
sbb
push
push
hlt
and
shll
call
xchg
push
dec
mov
test
imul
sub
xchg
popf
mov
xchg
js
jbe
lcall
loope
jae
mov
mov
xchg
inc
jp
imul
pop
dec
std
test
sub
imul
rcll
or
push
int
mov
and
xor
xchg
mov
mov
test
push
jecxz
sub
shlb
push
daa
mov
lock
and
inc
pop
dec
dec
mov
das
sarb
cmp
sahf
scas
sub
ret
xchg
pusha
ja
bound
test
xchg
sbb
jne
sti
add
in
xor
iret
insl
adc
movsb
jmp
aad
sarb
cmp
je
xchg
mov
mov
push
out
sbb
xor
enter
cmc
xchg
loop,pn
adc
int3
mov
push
mov
xor
ret
fs
icebp
inc
and
sbb
cmp
add
lret
mov
imul
push
jge
cmp
xchg
ss
pop
idiv
mov
push
popa
mov
mov
mov
add
sbb
insb
or
into
jle
and
and
scas
mov
ja
adc
xchg
mov
cmp
add
into
ret
mov
loopne
jg
mov
sub
scas
pop
sub
jo
pop
popa
inc
mov
sub
mov
movsb
mov
inc
aad
test
and
push
mov
ret
push
jg
in
cmp
mov
inc
dec
fdivl
push
xor
dec
popa
scas
pop
sbb
mov
fwait
icebp
cmpsb
sbb
adcl
push
jae
xchg
neg
jge
push
lgdtl
xchg
dec
mov
fildll
pop
stos
sbb
lock
jne
lea
xor
mov
dec
aaa
movsl
pop
inc
test
adc
int3
push
push
pushw
mov
inc
mov
sub
lcall
mov
insl
movsl
xchg
mov
shl
in
pop
nop
icebp
inc
push
mov
push
cld
imul
jle
stos
dec
pop
mov
lock
and
sub
icebp
jmp
dec
xorl
mull
sbb
adc
fnstenv
lock
je
jae
insb
cmc
test
pop
push
notb
adc
popf
mov
in
sbbb
xchg
test
rorb
inc
jmp
and
cmc
aas
pop
fmulp
pop
add
jae
pop
mov
or
sbb
xlat
jbe
call
jo
mov
dec
call
pop
or
adc
or
aam
aaa
mov
je
repnz
or
and
mov
jg
or
popf
js
ret
push
or
loope
mov
out
cmp
repnz
or
insl
xchg
testl
sbb
bound
mov
push
cli
push
aam
xor
xchg
push
xlat
pop
cmpsb
mulb
les
mov
out
cs
leave
fdivrl
inc
sbb
insb
add
mov
adc
flds
push
mov
sbb
rcrb
test
test
shll
ja
pop
push
push
inc
jle
sarb
xchg
sbb
push
inc
std
cmp
add
mov
adc
add
repz
jnp
cltd
ja
out
jno
mov
test
sbb
orb
and
jns
cmp
ds
and
int
int
pop
pop
add
sub
aas
mov
imul
dec
xor
mov
je
nop
cs
bound
dec
nopl
mov
test
cmpsb
sbb
out
xor
sbb
jae
xchg
lret
sub
sub
mov
xor
push
xchg
add
or
test
jl
jbe
fcmovbe
ljmp
sbb
ja
xor
adc
int
int
aaa
push
inc
fs
fstps
pop
cld
aad
mov
mov
add
addw
push
xchg
data16
in
daa
gs
imul
mov
adc
dec
dec
or
jnp
and
cmp
xor
mov
int3
cwtl
push
shl
je
arpl
lods
aad
sub
aam
jmp
pusha
repnz
data16
adc
or
mov
mov
pop
frstor
push
push
push
or
inc
ja
fidivrs
adc
mov
mov
popa
push
cmpsb
add
hlt
pop
sbbl
ss
in
xchg
mov
jg
cmp
mov
mov
enter
cmpl
xchg
std
fnstenv
lds
dec
js
pop
nop
andl
jo
jecxz
mov
sbb
jbe
and
mov
out
sysenter
sbb
jp
mov
push
inc
imul
dec
iret
cmp
xchg
dec
xchg
jl
push
sbbl
dec
cmp
sub
add
jno
out
imul
nop
push
inc
pop
mov
sub
sub
cwtl
jno
pop
xor
xlat
pusha
fs
or
aaa
decb
movsb
nop
inc
mov
jne
idiv
and
mov
daa
into
push
in
scas
adc
jb
nop
push
cmpsl
cmp
clc
fmuls
pop
sbb
jp
cmp
les
ljmp
outsl
pop
pop
cmp
sbb
pop
les
jb
sub
and
cli
fs
cmp
lds
pop
dec
xor
push
jl
stos
xor
mov
xor
mov
fisttpll
adc
jb
mov
cli
insb
dec
and
das
out
int
movsb
pusha
stos
push
mov
sbb
push
mov
divl
fidivl
mov
outsl
mov
add
inc
jg
out
fwait
xor
sarb
dec
sub
test
mov
fs
cs
int
and
imul
and
lcall
cld
movsb
inc
aas
sub
call
push
push
int3
mov
stos
adc
push
push
icebp
cmp
stos
scas
lret
sahf
dec
pop
pop
loopnew
xchg
rcl
mov
pusha
dec
jne
pop
scas
in
test
xchg
test
hlt
mov
mov
faddl
movsl
mov
add
pop
mov
fistps
int
jg
in
daa
pop
out
das
mov
shrb
mov
call
mov
jno
lahf
int
fmull
sahf
xor
and
sarl
lcall
jno
inc
mov
jmp
ljmp
icebp
outsl
stos
mov
repz
insb
cmp
pop
xchg
sbb
mov
push
pushf
or
ret
shlb
dec
jno
js
fisttpll
int3
scas
sahf
leave
fucomi
sbb
push
scas
fucomp
pushf
imul
mov
testl
scas
inc
mov
int
jne
es
stos
xchg
sbb
paddb
test
lods
mov
call
xchg
jnp
mull
loop
pop
jae
xchg
movsl
mov
fimull
xchg
dec
mov
les
sub
ds
addb
cs
jle
and
int
lock
or
cmpsl
or
pusha
mov
je
mov
gs
push
inc
stos
jg
fcmovnbe
jne
out
sahf
jle
jne
sahf
or
cs
mov
rcrl
xchg
loope
sub
scas
xor
ret
insl
pushf
push
pop
inc
imul
mov
jbe
push
test
lahf
das
xchg
push
dec
or
jl
aam
xchg
scas
xchg
dec
jecxz
fcomip
inc
bound
mov
mov
cmpsb
mov
xchg
sub
mov
jnp
mov
xor
clc
pop
xchg
insl
sub
or
xor
mov
sub
jge
and
fidivrl
or
jo
mov
stc
loope
int
mov
inc
add
xor
out
jmp
lods
pop
js
jle
jo
dec
xor
cmp
mov
and
push
cmp
xor
and
dec
outsl
je
rcrl
sbb
xchg
push
adc
in
in
xor
jne
outsl
jne
mov
lret
sub
leave
xor
in
mov
imul
fcomps
aaa
sub
xchg
mov
xchg
enter
repz
or
sbb
adc
pop
daa
std
sub
scas
out
jecxz
inc
sarl
push
imul
jae
call
jnp
push
jo
loop
cs
mov
sub
cmp
pushf
dec
dec
push
int
xchg
and
xor
icebp
stos
das
outsb
leave
pop
insb
jmp
mov
icebp
test
jecxz
cmp
inc
std
js
daa
mov
in
ds
daa
dec
lods
sbb
adc
mov
cltd
mov
dec
and
cli
pop
sbb
sbb
shll
dec
push
mov
and
mov
xor
imul
imul
and
insl
in
inc
cmp
aam
dec
mov
cmp
cmp
inc
xchg
pusha
gs
and
push
stc
stos
inc
popf
je
lea
and
push
push
mov
push
les
xchg
stos
aaa
cltd
xlat
ljmp
cmp
popa
ss
mov
lcall
fsubrp
cmp
call
dec
mov
fidivl
jns
xchg
inc
pop
in
mov
and
ljmp
in
cmpsb
xchg
loop
cmp
cld
push
xchg
insl
mov
or
jmp
ss
clc
adc
add
inc
sub
imul
rorl
testl
out
repnz
js
mov
push
fdivs
repnz
fldenv
xchg
adc
jbe
push
roll
ljmp
sbb
mov
arpl
aas
jmp
lea
bound
adc
popf
cmpsb
adc
pop
mov
push
mov
daa
flds
hlt
lcall
outsb
and
jle
jne
mov
xchg
cmpsl
into
jbe
imul
cld
push
shlb
jmp
lret
sahf
inc
es
cmp
lds
insl
and
scas
movsl
aad
mov
ret
or
daa
test
js
roll
mov
cmc
ffreep
rolb
adc
xlat
cmpsl
xor
xchg
fstpt
mov
push
loopne
enter
mov
hlt
in
jg
into
idivb
lods
mov
rcr
pop
ss
cmp
fistpl
mov
jp
jb
xor
adc
mov
dec
cmp
jp
shlb
push
andl
sub
inc
imul
icebp
xlat
sarl
in
fmulp
add
xchg
cmc
in
popa
test
mov
out
imul
jb
movsb
out
loopne
mov
sub
sbb
sbb
aaa
lods
mov
int
out
out
loop
outsb
enter
inc
inc
das
xchg
popf
adc
cli
mov
cmc
xor
loopne
adc
ficompl
mov
fisttps
cltd
add
jge
mov
jp
pop
or
xchg
dec
mov
int3
dec
sub
mov
mov
popf
mov
cmp
cmpsb
or
popf
mov
fwait
loope
sub
add
and
mov
xchg
lds
xchg
mov
push
jbe
cmp
add
aam
pop
out
or
jns
push
lods
frstor
cmp
mov
sti
addr16
lock
pop
xchg
push
decb
scas
adc
cwtl
xchg
sbb
mov
dec
gs
std
sub
jg
push
push
and
nop
jne
mov
in
push
cmpsl
push
mov
pop
adc
les
sti
xor
push
push
repnz
and
call
scas
xchg
mov
insb
xchg
adc
mov
mov
xchg
xor
sub
and
rcrb
sbb
icebp
test
cmpsb
clc
jne
gs
mov
scas
lcall
push
in
mov
clc
lret
inc
add
ds
mov
xor
or
mov
or
bound
dec
sbbb
lock
sbbb
mov
jecxz
pusha
add
pop
mov
loope
int3
inc
decl
fcoml
leave
xchg
js
int3
and
jecxz
aad
mov
sbb
xorb
scas
push
or
repz
mov
fmuls
out
sarl
sub
cmp
xchg
and
dec
popl
xchg
in
mov
mov
ucomiss
imul
push
jbe
cmp
pop
xchg
mov
push
sahf
and
idivb
pop
mov
sub
out
and
or
mov
imul
ss
cli
daa
in
push
adc
pop
sub
mov
popa
fcmovnb
inc
pop
jmp
and
int3
mov
mov
xchg
call
pushf
mov
or
in
mov
mov
test
push
clc
call
xor
mov
sarl
fwait
int
pop
ja
xchg
or
stos
sub
mov
ljmp
repnz
imul
stc
pushf
mov
ja
jl
enter
mov
inc
inc
dec
or
pop
movsb
mov
imul
push
xchg
les
inc
dec
cmp
sarb
stc
or
jbe
cwtl
test
ret
test
cltd
mov
divb
push
xchg
imul
and
insb
addl
and
out
mov
push
sti
jnp
push
andl
mov
jl
bound
lret
cld
pop
xchg
fst
imul
cs
push
shr
sub
pop
scas
fstl
pop
mov
and
lcall
repz
mov
jbe
sub
jg
mov
out
fiaddl
sbb
out
adc
inc
inc
stos
lcall
mov
or
sbb
insl
push
lea
push
lods
dec
bound
fldl
xor
lock
loopne
repz
push
jecxz
mov
popf
pop
mov
lods
flds
dec
jle
cmp
cmc
jne
stc
add
dec
aad
jno
bt
mov
push
loope
xor
inc
sub
adc
mov
mov
pushf
fldt
lds
ret
jle
mov
xor
xchg
aas
andb
and
inc
enter
push
jecxz
xlat
pop
fs
and
std
xchg
and
jne
mov
fimuls
cltd
mov
pop
ficomps
lcall
sub
lcall
shlb
inc
lahf
std
add
pop
pop
dec
fnstsw
jcxz
adc
and
inc
lds
jmp
scas
pop
xchg
pop
int3
xchg
fs
push
pop
aad
pusha
imul
in
cmp
add
pop
or
pusha
outsb
xchg
jmp
mov
std
sub
xchg
dec
outsl
pop
add
xor
enter
fdivs
fcmove
test
rolb
push
pop
loope
pop
in
ret
or
pop
data16
cmpsb
pop
idivb
push
int
lret
loope
mov
xor
test
fsubrs
stos
ljmp
sub
add
fildl
sub
out
hlt
jo
cmp
repz
inc
into
push
jle
fadd
les
loopne
add
cmp
xchg
cmp
pop
xchg
mov
jmp
lcall
and
dec
adcb
inc
jl
lods
or
sbb
push
lret
jb
fcmovnb
lods
outsb
ja
das
in
pop
mov
sbb
jns
or
inc
leave
mov
lahf
movsl
xchg
dec
ficomps
mov
jb
pop
pop
and
sub
jge
sbb
lret
ja
mov
addr16
xor
lds
loopne
mov
out
insl
add
sbb
cmpl
add
into
sub
cmp
jne
sub
data16
xchg
arpl
adc
xchg
adc
or
scas
fidivl
xor
dec
iret
pop
addr16
add
mov
int
stos
neg
pop
cli
push
lahf
adc
popa
lods
adc
lcall
dec
lcall
inc
out
fstpl
shl
test
xchg
pop
hlt
jg
das
xchg
xchg
mov
rorb
dec
and
mov
in
int3
stc
dec
inc
jns
sbb
and
jmp
divb
dec
out
add
mov
imul
dec
sbb
push
gs
nop
mov
bound
mov
clc
ds
pop
daa
ret
pushf
xchg
outsb
sarl
jns
sahf
fldenv
mov
pop
add
xchg
call
push
or
add
cmp
mov
repnz
ret
dec
stos
shrb
pushf
mov
pop
imul
ret
data16
fdivrs
sbbl
sub
hlt
push
cli
test
fiaddl
sbb
and
add
add
and
inc
in
pop
ljmp
frstor
ret
out
sbb
in
sub
dec
mov
pop
je
xchg
cmc
add
daa
dec
sbb
and
sbb
and
jge
pushf
mov
addr16
sbb
iret
orl
std
dec
movsb
cmp
adc
mov
xchg
push
ja
jbe
push
out
imul
jp
in
add
cmpb
pop
int3
mov
std
lods
inc
dec
in
adc
data16
jne
sahf
jp
sbb
and
aaa
add
mov
popa
out
push
push
int
popa
pop
lods
pop
call
dec
jecxz,pt
mov
jnp
lods
loop
mov
je
mov
cwtl
mov
cmp
mov
andl
xchg
out
inc
adc
or
outsb
inc
sti
or
ljmp
aad
aaa
loopne
daa
sbbb
push
mov
dec
repz
xor
inc
fstl
jno
int3
ss
mov
lcall
inc
adc
sbb
pop
lcall
adc
xchg
inc
insl
ret
in
in
mov
cmc
enter
pop
inc
push
cld
xchg
mov
mov
dec
cli
popf
dec
inc
stc
loop
push
and
mov
sbb
push
mov
jg,pt
push
cld
shl
xchg
sub
test
jnp
cli
sub
push
push
negb
ljmp
scas
ds
sarl
stos
add
push
pop
hlt
mov
pop
dec
adc
jne
jmp
ja
dec
stos
jo
mov
jp
cmpsl
mov
xchg
jns
pop
sub
repnz
xchg
mov
push
mov
push
fs
lods
xchg
cmp
cmp
aaa
adc
sti
pushf
repnz
xchg
xchg
push
hlt
inc
js
mov
xchg
dec
sbb
and
xchg
jb
dec
pop
in
add
test
test
ljmp
aas
shl
mov
dec
cmpsb
and
mov
inc
mov
outsb
sarb
pop
push
das
sbb
in
jecxz
mov
xor
mov
into
mov
lret
ja
cli
mov
pop
aas
fsubrs
sarl
imul
roll
and
inc
jl
sub
mov
mov
into
cmpsb
dec
in
rorl
subb
sbb
xchg
es
dec
xchg
cltd
cmpsb
mov
js
or
inc
inc
test
mov
rol
ss
out
push
scas
imul
push
adc
sbb
cmpsl
sbb
aaa
dec
and
dec
jle
xchg
cmp
sbb
out
and
push
mov
repz
mov
lahf
clc
clc
pop
pop
add
arpl
xchg
jno
mov
cmp
insl
loopne
fmul
push
xor
in
push
jle
in
inc
sub
inc
mov
jno
push
adc
sub
add
addr16
inc
jno
xchg
outsl
jecxz
mov
and
jns
add
jno
and
cmpsl
mov
ret
orb
sub
in
push
and
icebp
and
mov
cmp
mov
fisubl
out
mov
push
or
adc
cmpb
mov
fidivrl
mov
lods
sbb
ljmp
int
inc
mov
movsb
mov
out
xor
in
ss
adc
sti
mov
mov
xchg
adc
xor
cmpl
jl
push
movsb
jp
and
enter
shll
fdivrs
stos
out
push
lret
or
jae
fidivs
outsl
cmp
mov
fiadds
jne
and
lods
mov
stos
mov
popf
xchg
or
outsl
mov
fisttpl
push
pop
loopne
inc
call
in
push
pop
cmp
push
push
sbb
inc
adc
jmp
rcr
sar
inc
aaa
xor
nop
sbb
test
movsb
pop
dec
sbb
enter
and
popf
out
pop
shlb
sub
inc
sub
lret
push
inc
dec
cld
daa
push
pop
stc
mov
sbb
jp
nop
rcll
xor
lods
inc
std
push
lcall
scas
insl
jecxz
daa
push
sub
enter
clc
lods
jne
mov
fimull
push
call
pop
or
ret
outsb
ss
icebp
negb
xchg
inc
fsubrp
jge
sbb
push
jmp
in
sub
xor
call
add
out
ja
pop
sbb
outsl
rcll
xor
push
rol
clc
aaa
jecxz
dec
and
cmpsb
int3
stc
fstp
hlt
cmp
sbbb
outsl
and
adc
fiaddl
outsl
jbe
add
and
lds
cmp
cld
inc
fsubl
xchg
mov
mov
mov
pcmpgtw
xor
out
and
test
jno
stos
out
nop
inc
cmpsb
push
ss
setne
cltd
repnz
sbb
adc
mov
mov
loop
inc
scas
fsubrs
push
fimull
imul
inc
mov
test
jle
mov
dec
cmpsb
jno
mov
shl
js
xor
mull
in
imul
mov
cmpsl
jg
pextrw
mov
xchg
xor
leave
mov
mov
sub
leave
mov
mov
aam
adcl
ja
add
aas
cltd
mov
lods
repz
and
fiadds
mov
addr16
or
mov
test
mov
repz
mov
popa
pop
mov
insb
sub
xor
movsw
mov
inc
mov
sub
mov
xor
mov
dec
adc
dec
sub
cmp
decl
repnz
notl
inc
dec
add
leave
out
lret
hlt
push
stos
ljmp
nop
in
ftst
leave
xchg
mov
or
pushf
cmp
dec
and
pop
movsb
int3
int3
dec
or
xchg
arpl
addr16
add
jae
jle
insl
mov
sub
push
fisubrl
or
int
xlat
xchg
in
bound
lcall
pushf
push
movsl
xchg
sbb
dec
push
jmp
jmp
xchg
dec
ss
and
sarb
xor
xlat
mov
push
test
mov
scas
mov
popa
jge
arpl
sbb
fsubr
adc
jecxz
mov
add
cmp
pop
add
jne
in
dec
imul
ds
dec
iret
lea
lret
sahf
in
outsl
or
or
sarb
or
jp
dec
call
jmp
fsubrl
xor
add
mov
and
cli
mov
mov
in
pand
mov
push
mov
bound
inc
pop
frstor
shll
jg
ret
mov
mov
mov
mov
pusha
or
mov
push
dec
sub
dec
add
cs
push
cmp
stc
jno
pop
fyl2x
adc
push
xorl
push
arpl
iret
jo
jne
loope,pn
push
addr16
sbb
jg
sbb
jmp
add
xchg
ret
xlat
sub
daa
and
and
test
shll
sub
wrmsr
jge
or
addb
inc
pop
inc
inc
addr16
cmp
ret
data16
push
fnstenv
push
nop
mov
loop
out
xor
fstpt
mov
cmp
adc
hlt
and
insb
clc
arpl
enter
add
clc
movsl
sti
out
dec
cmpsl
cmp
and
stc
cmp
adc
push
je
repz
mov
xchg
xor
rol
pushf
cld
cld
pop
pusha
movsl
mov
or
int3
incl
xor
sbb
insl
jl
cmpsb
fcomip
lods
pushf
int
jno
add
rcrb
and
stc
aaa
cmpsb
jns
movsl
or
stos
mov
add
fcmovne
dec
adc
adc
dec
cmp
add
sub
jg
jecxz
mov
jae
pushl
pop
fwait
clc
repz
mov
adcl
clc
mov
shr
and
add
or
cmp
cmpl
jge
out
ss
and
scas
loopne
push
pop
mov
ss
js
sahf
or
xchg
inc
popa
mov
jno
and
cld
les
std
dec
xchg
mov
mov
push
fldenv
push
shr
jno
mov
jnp
cmp
xlat
fwait
jo
ss
sarl
iret
dec
inc
sar
mov
loopne
sbb
pop
mov
and
andb
sub
ficomps
xor
sbb
cmp
jmp
mov
ja
jle
add
pop
ficoms
pushf
icebp
bt
aaa
mov
mov
pop
jl
xor
fnstsw
stos
dec
mov
arpl
jns
fistps
lea
cmp
in
pushf
rorb
imul
std
scas
lahf
fbld
xchg
jbe
das
and
cltd
mov
lcall
jne
dec
dec
jnp
ficomps
and
cwtl
mov
shlb
es
shll
shl
cmp
rcl
clc
xor
sbb
jle
mov
or
pop
push
xorl
test
cmp
pop
aad
psrlw
push
push
mov
pop
mov
rcrb
adc
push
data16
loope
push
xchg
pop
test
sbb
lahf
adc
jo
or
div
in
test
out
cmpsl
loope
ss
add
inc
mov
mov
cmp
sub
aam
mov
stc
shll
dec
mov
cmp
ljmp
movsb
fisttps
insl
sub
mov
arpl
pop
adc
xchg
pop
add
mov
and
xchg
jmp
sbb
divl
sub
das
stos
outsl
cmp
gs
sub
and
xor
fiadds
push
push
test
and
insl
lds
nop
adc
and
in
stc
in
aas
sbb
fcmovbe
push
sahf
out
jno
data16
leave
jo
in
jp
cld
ret
adcl
xchg
data16
aaa
dec
adc
sbb
push
fcomp
je
xchg
pop
lret
jge
aam
cmpsb
jno
add
inc
in
jno
addr16
hlt
and
pop
cltd
das
clc
sbb
mov
lret
je
mov
aaa
insb
pop
ljmp
popa
jg
jg
xchg
cmp
and
lahf
es
xor
sbbl
adc
inc
or
cmp
jl
mov
dec
ds
xor
repz
arpl
and
lds
sub
addb
test
in
inc
arpl
jnp
mov
xchg
jmp
insl
xchg
fdivrs
pop
adc
add
adc
xchg
xor
es
sbb
lret
cmp
dec
lds
push
mov
pop
cs
int3
in
leave
test
shrl
jbe
and
sbb
jb
mov
cmpsl
imul
test
ret
shll
popa
hlt
xchg
pusha
addl
popf
xchg
push
fimull
or
mov
repz
pop
and
lods
pop
daa
cs
xor
movsb
mov
push
out
loope
pop
loopne
mov
sbb
fildll
cmpsb
clc
adc
add
les
xchg
scas
shlb
mov
sub
mov
insl
negb
clc
inc
or
push
sub
ret
ja
sti
and
push
cltd
out
xor
dec
push
ret
les
test
mov
xchg
add
mov
cmpsb
cmp
into
mov
xchg
popa
es
pop
cs
stos
lret
adc
fcompl
popa
push
adc
xor
add
bound
rcrb
addl
daa
push
inc
sub
push
jp
jbe
jge
or
fldt
cmp
pop
aam
js
lahf
sub
aas
sbbb
in
movsl
jbe
cmp
inc
xor
mov
aas
ja
or
fcomp
mov
add
pop
xchg
xchg
add
push
arpl
mov
shrb
and
and
cltd
fcomp
stc
xor
pop
scas
or
cwtl
mov
lods
xor
add
pop
mov
adc
movsb
in
mov
mov
and
out
sub
sub
mov
cmpsl
stc
mov
xor
std
mov
mov
bound
push
jae
push
mov
cld
mov
xchg
xchg
jp
std
es
adc
icebp
decl
pop
ds
jecxz
cmp
in
inc
subl
xor
clc
inc
cld
jmp
stos
sbb
jl
nop
out
fldcw
fsts
cmc
testb
inc
mov
mov
dec
xchg
jae
daa
mov
jmp
icebp
out
pop
repz
or
lret
xchg
pushf
divb
dec
pop
imul
xchg
dec
fbstp
add
ret
lods
jmp
test
movsb
sub
roll
sub
jecxz
and
ret
push
fucomip
jb
divl
test
popl
daa
mov
push
push
mov
jbe
hlt
ss
insl
jb
outsb
mov
in
in
cmp
jb
outsb
imul
repz
jge
push
pop
pop
imul
mov
mov
and
xchg
mov
add
jl
jno
add
xchg
inc
sbb
mov
int
dec
aaa
pushf
aam
jnp
xlat
pop
or
fcmove
scas
xor
stc
lea
xor
testl
js
fnsave
mov
stos
dec
das
out
mov
sbb
jno
jecxz
pop
xor
mov
xlat
addr16
mov
jmp
ja
imull
sbb
movlps
adc
fwait
pushf
xchg
dec
fnstsw
push
shl
xor
pop
inc
repz
fdivs
bound
sbb
repz
movsl
sti
dec
cwtl
leave
nop
out
ss
mov
std
lret
and
adc
pop
mov
inc
mov
adc
and
movq
int3
add
pop
adc
adc
push
push
in
adc
jbe
mov
cmpsb
jns
cmpsl
or
push
push
data16
push
jne
pop
subl
popf
cs
dec
adc
fadds
dec
inc
js
inc
gs
fsubl
mov
ljmp
xlat
inc
pop
aaa
lea
mov
and
out
add
ss
cmpsb
jae
into
addr16
pop
lret
jo
movsb
fildl
adc
add
ret
insl
lret
loop
mov
loope
push
arpl
iret
or
sbb
push
je
push
hlt
add
xchg
in
mov
mov
and
push
dec
jecxz
pop
int
pop
inc
call
mov
shlb
ja
push
cmp
mov
aas
inc
adc
cwtl
push
jb
shlb
dec
lret
xchg
jecxz
inc
push
mov
push
mov
pushf
aas
das
mov
enter
xchg
and
ret
adc
mov
sbb
xchg
push
mov
repz
lret
push
pop
lcall
adc
jecxz
nop
mov
shl
or
lret
insb
frstpm(287
aas
push
pop
pop
xlat
mov
or
aas
popl
in
dec
lahf
cmp
pop
or
jle
test
test
add
fldenv
mov
cli
out
popa
cmc
sbb
inc
sub
inc
dec
add
jle
ret
out
rorb
push
dec
in
jecxz
cmpsl
leave
clc
fisubs
inc
arpl
fdivrl
std
push
test
xor
jle
mov
addr16
fisubrs
or
mov
lahf
popa
scas
nop
jo
outsb
cmc
jnp
pop
repz
lods
jp
adc
addr16
xchg
iret
jp
test
push
push
hlt
rcrl
sbb
cmp
dec
testb
in
fnclex
in
or
mov
and
inc
ja
jnp
and
push
dec
lret
pop
inc
or
and
push
xor
pusha
cmp
add
std
sbb
push
or
das
ror
pop
mov
mov
pusha
or
mov
fisubrs
fmul
loop
jne
cltd
dec
xorb
mull
bound
dec
push
sub
push
and
mov
xchg
jbe
dec
pop
into
imul
hlt
rorl
lock
or
ds
xchg
pop
add
inc
mov
pop
mov
jbe
lods
jecxz
cli
repnz
push
add
lods
es
test
mov
add
and
stc
ds
into
xchg
ret
mov
pop
jne
pop
and
in
mov
rorl
arpl
movsl
pop
cmpsl
sub
into
xor
fisubs
mov
ljmp
xchg
sub
mov
sbb
push
dec
push
ret
sbb
aaa
and
mov
cmpsb
jbe
add
sbb
test
ds
fistpl
mov
push
repnz
add
out
je
inc
fiaddl
mov
xchg
mov
out
pop
mull
aad
ja
outsl
fstpt
lds
xor
mov
movsl
inc
std
or
repnz
fwait
cltd
inc
xor
xchg
in
das
pop
push
inc
dec
shlb
ljmp
cmp
test
inc
cmpsl
fdivrl
cmpsb
adc
jecxz
test
shl
popf
int
lret
lock
loopne
cmp
pop
aad
cmp
and
mov
xor
or
pop
add
aas
mov
jb
push
outsb
jmp
jns
sbbb
or
das
mov
mov
cmp
nop
into
negb
jb
aaa
mov
fbstp
mov
push
xchg
sbb
dec
addr16
fmull
sahf
jmp
xchg
hlt
xlat
sub
dec
je
dec
or
pop
xchg
or
jae
dec
xlat
lods
in
je
xchg
jb
xchg
add
mov
pop
lock
leave
pop
rorb
dec
leave
js
push
jb
sbb
sbb
mov
mov
cmp
sub
cwtl
dec
jae
mov
jbe
inc
and
aad
in
aaa
div
jle
or
loope
roll
push
aam
leave
or
cltd
jmp
popf
mov
and
lcall
cmc
mov
leave
push
stos
imul
xlat
add
out
jns
hlt
dec
xchg
lock
jge
add
mov
outsl
lret
mov
loopne
mov
mov
xchg
add
lret
mov
cmc
roll
stc
movsb
scas
sbb
dec
scas
aam
fnstsw
cmp
xor
rclb
xchg
adc
fwait
ret
jl
xor
cmp
cwtl
lret
test
jl
cld
mov
cltd
inc
mov
bound
repz
dec
xlat
sbb
inc
push
push
cmc
jg
insl
adc
or
lret
mov
adc
mov
bound
arpl
inc
xchg
dec
aas
outsl
fcmovnb
adc
jle
repnz
cwtl
shrl
adc
lods
or
xor
popa
int
push
popf
call
pop
sahf
popa
sarb
or
cwtl
movsb
movsb
imulb
push
pushf
jge
ja
sbb
arpl
rcll
xor
stos
icebp
jne
outsl
jno
xchg
out
sbb
push
inc
into
mov
stos
inc
popa
out
mov
aad
js
bound
test
cs
mov
test
das
pop
xor
xchg
mov
hlt
fstps
lock
jge
pop
push
andb
xchg
jle
jnp
scas
daa
cmc
into
out
sbb
rolb
test
mov
add
cli
mov
jg
xchg
pop
pop
mov
cmp
lds
popf
sbb
push
push
xor
les
pop
xchg
sub
dec
add
insb
daa
sub
push
xchg
push
test
xor
xchg
xchg
adc
dec
mov
loop
aas
mov
dec
jae
jecxz
xchg
jle
cmp
lods
cmp
pop
pop
jmp
sbb
jns
movsb
mov
fs
in
sub
xchg
cmpsl
shrl
push
mov
mov
push
jl
jg
dec
mov
xor
ror
lock
mov
or
and
adc
lock
fistl
inc
das
add
test
ss
mov
and
push
outsl
int
pop
add
sub
lahf
jle
mov
fsts
shll
push
inc
mov
int3
jo
pop
mov
loope
inc
inc
scas
rorl
cmp
fs
dec
popa
and
in
mov
fidivrs
push
sbb
les
loope
cwtl
xor
repz
pushf
jl
xchg
mov
adc
outsb
jle
jae
fbstp
loope
inc
cmp
inc
cltd
dec
movsb
hlt
mov
cld
push
push
cmc
dec
sub
rorl
inc
or
rcl
mov
or
and
insb
xlat
scas
push
push
mov
cmp
movsb
sarb
sub
rolb
mov
jge
hlt
movsl
sbbb
cli
pop
push
in
movsb
cld
xchg
sub
movzwl
pop
cmp
mov
cmp
rolb
stos
sbb
ret
cmp
hlt
jns
faddl
rcll
out
xchg
xor
xlat
cli
cmpb
fdivrl
sbb
test
js,pn
out
iret
rcrl
sub
push
adc
jp
inc
pop
adc
jmp
pop
movsb
test
outsl
push
mov
lods
cwtl
cmpb
fcmove
inc
dec
arpl
subw
enter
mov
aam
push
pop
in
add
push
add
mov
enter
mov
fsubl
lods
bound
xchg
sub
in
imul
mov
cmc
dec
mov
jne
or
xor
iret
pop
outsl
and
inc
outsb
push
rcrb
sub
dec
add
int
pop
cmp
push
push
outsb
inc
or
mov
xchg
xchg
and
push
shlb
cmpsl
cmpsb
into
xchg
dec
mov
int
add
mov
xchg
push
xchg
cwtl
xchg
mov
cld
jo
ja
sti
jecxz
les
int3
test
xchg
sub
dec
add
loop
enter
clc
aam
push
pop
loope
pop
cmp
loope
lods
xchg
xor
cmovle
mov
test
in
pop
pop
loope
jne
xor
js
daa
sbb
gs
mov
add
mov
xchg
ja
test
dec
add
fs
pop
mov
inc
loope
pop
mov
loope
mov
lock
js
adcb
sbb
and
sbb
mov
adc
pop
ss
scas
outsb
mov
or
xchg
lock
jb
push
cli
sub
popl
pop
cmp
jle
sub
std
pop
shr
hlt
inc
xchg
dec
hlt
xchg
dec
cmc
xchg
lcall
mov
mov
or
aam
outsb
xchg
je
push
in
adc
cld
stos
test
xor
xchg
dec
or
jmp
fisubl
dec
xchg
arpl
test
or
clc
sar
sbb
rolb
mov
mov
nop
push
loopne
cs
pop
xor
mov
loopne
and
push
add
mov
inc
adc
incl
or
add
push
insb
test
loopne
mov
out
jmp
pop
fldl
add
jne
mov
mov
and
imul
inc
icebp
push
sbb
cmc
daa
mov
ja
std
sub
sbb
sub
xchg
dec
xchg
repnz
push
das
pop
cli
jp
xchg
pusha
push
test
cld
mov
test
and
jmp
out
pop
icebp
adc
fcoms
sub
cmp
pop
cmp
jmp
les
adc
add
insl
sub
adc
imul
cli
push
or
icebp
or
shl
and
xor
jmp
outsb
xchg
out
mov
lock
adc
jmp
cwtl
push
rorb
out
sbb
stos
mov
inc
nop
xchg
jg
or
push
out
xchg
mov
sahf
mov
test
popf
pop
xchg
gs
rcl
cmpb
push
out
sbb
arpl
scas
add
mov
dec
insb
cmp
jl
mov
lock
mov
test
outsl
pop
and
sar
shlb
shlb
leave
jo
stos
ljmp
mov
and
imull
or
call
daa
jno
jmp
push
jg
or
fs
ret
loope
xor
mov
popf
pop
std
inc
xchg
xor
movsl
adc
fwait
test
and
sub
cs
fs
pop
les
sti
dec
adc
push
push
in
shlb
push
push
repz
loope
loopne
std
sub
cmp
mov
sub
xor
push
test
xor
mov
mov
andb
int3
xor
stos
pushf
insb
subw
jno
inc
rcrl
aas
add
cmc
mov
xchg
sbb
pusha
pop
int
fdivrl
movsb
jmp
xchg
lds
cltd
jecxz
lock
and
inc
dec
lods
dec
sbb
adcl
imul
mov
dec
adc
cmp
pop
sub
into
popa
scas
adc
cwtl
mov
pop
mov
insl
daa
cmp
fnsave
insl
gs
divl
hlt
sub
leave
or
cmpsl
pushf
mov
and
repz
jno
add
fimull
stc
pop
xor
addr16
sbb
sbb
dec
and
ljmp
insl
imul
xchg
es
and
add
xorl
sbbl
mov
movsl
push
decb
insl
inc
fstpl
jl
ret
dec
add
orb
and
cmp
pop
fistpl
outsl
call
fwait
or
inc
mov
lret
pop
ret
mov
repnz
sub
xorl
cmc
rol
jecxz
stos
xorb
sub
mov
mov
dec
cmp
std
or
pushf
xchg
inc
push
fistl
clc
loope
int3
test
add
test
sub
add
sahf
mov
pusha
adc
je
js
push
mov
mov
call
daa
aaa
xor
cmp
mov
mov
pop
jno
loope
in
cwtl
out
or
mov
xchg
lahf
cld
sub
clc
push
dec
jnp
push
stos
int
xchg
mov
pop
rcr
scas
aam
es
test
pop
iret
or
pop
inc
lods
mov
push
cmpsl
xchg
fmull
xor
and
rcl
push
jge
adcl
lret
cmp
decl
jmp
or
cld
jnp
xlat
ficoms
ja
xchg
and
sbb
loop
ret
sub
int3
aam
imulb
lret
test
push
xchg
sbb
jbe
mov
insb
dec
adc
in
xchg
xor
adc
mov
jae
sub
mov
adc
xchg
xchg
xor
add
and
ret
jno
lds
mov
inc
mov
sti
inc
mov
pop
lahf
push
xchg
push
ffreep
mov
and
ds
loopne
mov
insb
stc
mov
into
dec
fs
fwait
insl
test
bound
or
jo
bound
repz
int3
jge
cwtl
lcall
repz
stos
in
pop
pusha
jge
leave
scas
push
add
dec
inc
xlat
pslld
movsb
fnsave
cli
test
push
pop
stos
cs
xchg
sbb
pop
inc
mov
push
cwtl
lods
jno
xlat
stos
lret
into
ret
dec
mov
into
pop
jg
ds
popa
dec
aaa
insl
dec
push
outsb
cmpsb
repz
and
filds
adc
in
enter
push
pop
sub
adc
pop
divb
insl
ljmp
imul
dec
push
js
inc
je
lock
sbb
pop
xchg
add
imul
pop
aad
jns
sar
movsl
movsb
out
aad
insl
inc
lret
push
leave
mov
iret
pop
pop
mov
int3
push
leavew
pop
ret
sbb
jbe
cmp
mov
in
xchg
add
push
sbb
xor
out
int
pop
xor
or
mov
in
rcrl
notl
push
hlt
ljmp
adc
test
into
dec
mov
call
ret
add
testl
popf
xchg
inc
out
jmp
mov
icebp
enter
rclb
or
das
jns
das
pop
loope
sub
mov
aaa
je
adc
shll
lods
adc
push
dec
repz
adc
jge
out
stos
mov
loope
dec
int3
xor
sahf
sbb
fisubs
leave
scas
shlb
daa
inc
pop
adc
dec
push
shlb
lds
add
and
add
xlat
data16
movsb
sbb
xor
xchg
lret
out
xor
xchg
mov
adc
lods
jge
ja
dec
movl
inc
sti
push
xor
in
mov
or
imul
pop
imul
insl
cmp
fmull
jns
in
sbb
sti
mov
das
dec
into
mov
cmp
jl
xchg
data16
in
ret
hlt
lret
pop
cmp
mov
pop
stc
mov
enterw
mov
out
sbb
in
pusha
sahf
mov
cwtl
test
lea
fiadds
xchg
in
mov
dec
test
and
mov
pop
or
lret
xchg
iret
inc
loopne
xor
sbb
jge
push
cs
scas
in
push
jmp
xchg
divb
xchg
fisttps
icebp
sub
fisubl
push
inc
jle
cmc
rcr
mov
sub
jns
jg
dec
add
xchg
or
inc
inc
sbb
dec
cmp
cmp
xchg
lods
mov
pop
xchg
cmovae
push
fildll
pushf
xor
int3
int
push
or
pop
push
or
and
pop
cmpsl
daa
rcrb
test
xor
cli
inc
lahf
mov
xchg
add
and
outsb
mov
jp
inc
add
cmp
mov
lret
mov
mov
xchg
add
lods
pop
sbb
popa
sti
sti
cltd
sbb
lods
pop
imul
cmp
inc
std
inc
movsb
mov
mov
xor
addr16
rcrb
loop
ljmp
dec
mov
test
shrl
fstps
xchg
cltd
mov
push
add
movsl
add
sub
rolb
ret
xor
add
out
lock
sbb
dec
shlb
pop
sub
cmp
adc
mov
ss
fistl
test
mov
jno
in
or
hlt
in
jge
xchg
xchg
daa
popf
int
stos
xchg
mov
xchg
ds
pop
lock
push
test
sub
ss
push
sub
fsts
in
dec
ljmp
rclb
dec
push
ss
push
jne
push
jns
jae
inc
into
push
in
mov
in
push
clc
bound
cmpsb
ja
in
sub
js
mov
cld
hlt
roll
and
rolb
call
mov
enter
andb
dec
sub
sbb
rcrb
inc
minps
in
jle
faddl
movsb
imul
pavgb
jae
rclb
mov
jle
add
cld
jle
enter
and
or
jo
pop
test
and
sbb
dec
sub
jl
pop
sub
mov
sti
xchg
test
push
and
je
adc
pop
add
insb
pop
pop
push
cmp
or
xor
xor
pop
push
sbbb
bound
jle
mov
pushf
push
add
cmc
subb
cmp
cmp
mov
movsb
dec
mov
push
ja
mov
loope
int3
and
add
or
dec
test
clc
insl
ds
mov
pop
mov
imul
adc
into
cld
stc
add
dec
cmp
pop
test
dec
inc
pop
push
sahf
repz
fldenv
inc
aaa
cmp
sub
mov
icebp
push
arpl
pop
pop
lock
loop
jg
adc
outsb
mov
pop
jle
insl
lock
jo
jns
cmp
mov
mov
andb
mov
inc
mov
or
add
xor
fnstcw
add
loopne
ret
pop
cltd
pop
mov
scas
mov
xchg
add
lahf
stc
fstps
sbb
insl
jmp
sbb
inc
outsb
mov
pop
push
outsb
jle
cmp
gs
repnz
movsb
test
xor
mov
and
xor
mov
jae
in
sub
int3
pushf
xchg
es
xor
sub
cmpsl
dec
repz
xlat
xor
jne
nop
das
mov
push
mov
lea
repnz
cltd
sbb
out
scas
pop
js
mov
add
fnsave
sub
mov
out
add
push
sbb
inc
lcall
lcall
cli
jp
cmp
jge
aad
lock
pop
aas
call
into
scas
pcmpgtw
pop
jnp
and
xchg
inc
into
sahf
enter
push
pop
jnp
or
popa
repnz
shll
cmpsb
stos
js
push
jnp
iret
outsl
imul
push
sbbb
je
or
xchg
jecxz
xchg
cmpsb
popf
mov
roll
ljmp
and
adc
pop
adc
xchg
dec
adc
iret
cmp
mov
stos
stc
cwtl
bnd
pusha
lods
cmp
push
int3
insl
xchg
lret
loopne
mov
and
push
sub
push
daa
lds
mov
push
fwait
cmpsb
out
test
adc
pop
inc
es
dec
inc
in
sbb
jns
adcb
fisubrs
jnp
leave
and
jp
push
xchg
xor
std
mov
ja
sub
jp
ss
and
dec
mov
mov
jmp
fwait
or
lea
xor
sarb
inc
and
inc
add
test
mov
imul
adcl
cltd
sbb
jnp
test
jmp
inc
add
xor
shrb
aad
outsl
pushf
fwait
mov
andl
jb
test
arpl
hlt
sub
mov
push
sbb
push
lret
jle
loopne
inc
pop
insl
cmp
mov
ror
ss
xor
shr
mov
lods
clc
xor
pop
cmp
jle
outsl
pop
xchg
mov
pop
ss
lods
popl
add
dec
dec
cwtl
fsubr
fs
sub
push
sub
or
daa
ss
lret
adc
jmp
cmp
scas
push
mov
popa
test
mov
data16
mov
mov
shrl
sub
stc
pop
dec
inc
daa
push
cmp
rcrl
in
push
fucomp
inc
dec
push
cld
popf
out
mov
pop
fs
mov
rcrb
daa
sub
into
ljmp
fwait
mov
js
shrb
iret
push
dec
xchg
rcrl
outsl
insb
loop
mov
lcall
cs
imul
outsl
fwait
aas
inc
cmpsl
movsl
mov
repz
pop
js
sbb
test
clc
push
incb
cmpb
mov
pop
dec
sub
lods
gs
fldl
pop
les
cmp
xor
dec
mov
mov
add
movl
push
sbb
or
jge
pop
std
test
dec
sti
xchg
dec
xchg
loop
movsb
push
in
imul
push
jnp
in
xchg
adc
cli
adc
sub
xor
xchg
adc
pop
sub
imul
ss
dec
popf
je
test
cmc
aaa
and
pushf
jno
jmp
adc
push
mov
jbe
mov
arpl
and
or
dec
stc
xor
add
or
test
orl
jle
in
js
cli
inc
adc
pop
jmp
sub
jb
xor
enter
repnz
ja
mov
push
cmpsl
fcomps
aaa
sub
in
mov
or
call
int3
movsb
je
idivl
bound
lds
stos
idivl
pop
cmp
fdiv
and
test
dec
sub
arpl
sbb
sarl
pop
pop
jnp
pop
fsts
dec
pop
sub
rcl
out
icebp
mov
out
ret
ds
sti
push
test
mov
add
adc
outsb
shll
push
repz
xchg
dec
fstpt
dec
test
mov
decb
je
pushf
nop
mov
cli
shrl
les
shr
cmc
sbb
or
add
fildll
mov
out
mov
mov
push
xor
push
add
jns
mov
pop
and
cmpl
pop
pop
push
lahf
fidivs
sub
std
push
lret
mov
fistl
mov
sbb
cs
filds
mov
sbb
stos
jnp
sbb
sub
loop
cmp
push
push
scas
subb
xor
xor
clc
loope
inc
pop
test
ljmp
inc
xor
push
jg
in
mov
dec
fs
mov
mov
lcall
and
int
mov
push
jns
push
dec
scas
jbe
lods
std
cmc
dec
cmp
sahf
ljmp
sbb
insl
jo
jo
popa
adc
scas
add
and
sbb
nop
jl
into
xchg
and
mov
icebp
or
xrelease
lods
les
daa
xchg
and
inc
cmp
pop
lret
inc
cmpsb
repz
loope
sub
in
js
aas
lcall
xor
ljmp
ds
cmp
sbb
out
or
repnz
out
or
adc
shll
test
xchg
push
adc
add
iret
cwtl
cmp
daa
jmp
scas
mov
dec
pushf
pop
sti
pop
std
js
ljmp
xor
lock
jg
adc
aas
mov
sbb
scas
sbb
cs
push
shrl
and
mov
mov
pushf
dec
inc
jecxz
or
outsb
aaa
shr
outsb
adc
sub
rcrb
pushf
fnsave
lods
jp
push
push
push
scas
ret
push
xchg
xlat
ficoms
jbe
mov
cmpsb
fiaddl
pop
and
add
jg
fisubrs
pop
ja
imul
ficomps
xchg
inc
lods
sbb
out
and
xchg
mov
mov
orb
in
inc
push
add
jbe
hlt
aas
sub
sub
inc
mov
push
pop
inc
push
ret
sbbl
rcl
mov
dec
int3
xor
cmc
pop
int3
fxch
xchg
in
push
in
and
fcompl
in
xor
push
lea
lahf
ljmp
xchg
stos
mov
sub
mov
test
cs
mov
call
insb
add
xchg
int
push
mov
clc
dec
mov
sub
jne
cmpsl
repz
push
push
lods
daa
pop
orb
cmpb
sub
jp
cmp
test
add
cmpsl
mul
jmp
pop
cmp
jp
xor
cmp
xchg
cmp
enter
cmp
sbb
aad
in
cmpsl
mov
mov
mov
je
nop
popa
iret
test
jbe
pop
loope
movsb
add
xchg
mov
pop
xlat
cmp
push
addb
inc
rorb
adc
sub
sahf
inc
nop
jl
sti
cmp
dec
cltd
stos
push
and
push
jae
imul
test
ss
mov
mov
pushf
dec
test
xchg
fsubrl
stc
mov
sub
addl
xchg
or
mov
push
mov
and
jecxz
mov
in
fsub
in
cmc
cwtl
push
int3
data16
pop
cmpsl
fidivrl
subb
adc
cmpsl
aam
repnz
add
cli
or
test
sub
ljmp
mov
subl
gs
sti
push
mov
lcall
jb
jecxz
jecxz
mov
aam
std
ficoml
shl
add
push
loopne
pop
pushf
arpl
rcr
test
and
inc
dec
mov
mov
pusha
mov
mov
cmc
push
mov
add
inc
push
notl
jne
pop
mov
jmp
mov
jbe
mov
mov
sub
int3
das
js
push
xchg
dec
daa
mov
cld
pop
sarb
shrl
jbe
mov
jl
push
ror
mov
pop
cmpl
scas
ljmp
push
scas
or
adc
mov
test
mov
dec
xchg
xchg
testb
lods
push
jo
sub
mov
and
pop
loopne
adc
movb
pop
or
rclb
sbb
pop
ljmp
xor
dec
mov
bound
mov
adc
push
jo
cltd
push
jae
or
push
dec
lods
jne
rcrl
test
or
add
jmp
ss
lahf
add
jno
call
mov
mov
xor
mov
pop
xorb
cmpsb
sbb
imul
popa
xchg
xor
adc
mov
inc
pop
mov
popl
pop
xor
leave
pop
jmp
in
lcall
cmpsl
pushf
push
push
mov
push
pusha
pop
or
lahf
repnz
nop
jno
addl
mov
les
mov
mov
mov
and
or
jl
mov
push
push
aaa
adc
cmp
ficoml
mov
mov
stos
nop
inc
imul
xor
out
dec
fistl
mov
mov
or
addb
scas
in
ret
pop
ficoml
push
jno
rclb
out
addr16
aad
psubq
hlt
adc
js
push
notb
call
cmp
pop
xor
jb
jecxz
mov
sbb
mov
sub
push
fdiv
sbb
movsl
out
jl
leave
mov
cmp
aad
dec
pop
push
in
std
lods
enter
cmp
ljmp
fistps
scas
sahf
add
popa
sub
add
inc
pop
mov
imul
int
mov
push
and
pop
pusha
rolb
xor
and
pop
imul
arpl
icebp
ret
mov
adc
xor
push
push
and
daa
push
pop
fmuls
sub
loop
hlt
jecxz
sbb
pushw
fistpl
sub
insb
cmp
add
and
daa
sbb
loopne
movsb
out
inc
mov
jns
dec
cltd
cmpsb
sbb
jns
pop
test
or
sbb
push
adc
insb
ret
roll
stc
sbb
and
adc
cmp
loope
jnp
pop
mov
clc
les
or
je
in
or
std
in
fisubl
jmp
repz
jno
lea
loopne
mov
sub
jno
lahf
fwait
loopne
inc
sahf
sub
cmp
pop
adc
sub
pop
dec
inc
mov
fsubl
cltd
lock
mov
pop
lret
imul
inc
and
jle
fcoml
ds
and
or
out
sub
pusha
pop
cmp
iret
xor
int3
dec
push
int3
and
jecxz
sbb
aam
nop
sbb
lcall
lret
in
xchg
inc
test
fsub
scas
call
movsl
cs
cmp
mov
push
sub
daa
mov
pusha
lds
sbb
in
jecxz
xchg
xor
xor
jbe
roll
mov
das
jge
call
test
add
pop
adc
ret
dec
add
push
jl
dec
cmp
cmp
les
jp
mov
mov
stos
push
pusha
outsb
jbe
scas
or
mov
aaa
mov
mov
movsl
mov
sub
xor
fsubs
or
divl
out
xor
ja
lcall
or
jb
in
movsl
loope
xlat
nop
loop
scas
in
sbb
mov
movsb
dec
lds
stc
out
jne
sbb
es
nop
and
repz
xor
cmpsb
push
xorl
test
jg
jmp
mov
sahf
inc
and
cmpsb
jmp
imul
gs
test
sbb
mov
sub
pop
add
shlb
add
xchg
xor
jmp
mov
rol
sbb
pop
icebp
push
repnz
shrb
loopne
xchg
xor
jns
adc
imul
inc
push
push
call
sbb
sti
pop
jne
lret
dec
mov
stos
or
sub
fnstcw
add
ficompl
loop
movsb
addl
insb
mov
mov
jg
jae
les
jae
dec
movsl
xchg
jl
push
sub
insb
dec
movsl
adc
mov
and
std
orl
sub
dec
jg
cltd
roll
dec
sub
inc
jmp
pop
psrlq
mov
jle
jg
xor
push
cmp
sub
jnp
enter
xor
and
add
aaa
pop
lahf
iret
dec
or
jge
add
call
and
sbb
add
gs
sub
ret
cmpsl
mov
mov
adc
push
addr16
and
rcrl
rcl
or
faddp
cs
jbe
aaa
sub
decl
mov
push
pop
adc
mov
cs
pushf
cmp
mov
scas
xchg
test
out
out
mov
outsb
mov
push
aam
andl
out
jp
les
repz
mov
insl
cmp
push
fs
sbb
push
add
xchg
inc
pop
sbb
scas
pop
mov
sub
test
loop
xchg
or
adc
jg
aad
pusha
imulb
lods
cmc
xor
push
cltd
and
andb
sub
test
enter
push
dec
roll
lods
leave
stos
sarl
imul
ja
push
xchg
rcl
bound
pushl
bound
es
cli
lret
aad
in
adc
das
or
arpl
ret
pop
into
and
adc
ficoms
jo
xchg
xor
pop
push
cli
int
insb
dec
inc
aaa
mov
imul
cmc
shl
ret
cmpl
cmp
or
jns
pop
and
inc
jecxz
shrb
repnz
push
insb
mov
push
clc
loopne
cld
fsubrl
pop
enter
pop
scas
adc
fistps
sti
stc
decb
je
int3
int
dec
into
pop
es
dec
inc
xchg
fcmovnbe
mov
incl
gs
xor
xor
iret
js
jg
insb
cltd
jg
je
cltd
insb
xchg
cmp
cwtl
insl
mov
enter
or
mov
hlt
jl
ljmp
pusha
cld
xchg
mov
or
and
mov
mov
cs
xchg
outsb
fimuls
inc
lock
movsb
jne
clc
fnstcw
xchg
test
and
enter
add
loop
sub
mov
jae
dec
dec
sub
and
pop
test
lea
das
dec
ficompl
scas
daa
xor
lods
mov
loop
pop
mov
cmc
andl
int3
mov
loop
pop
inc
sbb
or
pusha
push
pop
push
jl
mov
and
mov
jne
jmp
dec
xor
ss
mov
cmp
pusha
xor
lds
mov
es
push
fnstsw
add
pop
icebp
dec
jmp
and
dec
xor
cmp
enter
fistps
pop
aad
push
add
push
xchg
fstp
push
mov
orb
pop
add
pop
mov
mov
cmp
mov
inc
je
inc
sub
test
mov
ss
sbb
add
sbb
inc
mov
repz
mov
inc
daa
aas
mov
gs
mov
or
or
jl
dec
push
imull
movsl
jge
mov
test
add
fidivrs
jecxz
push
ljmp
or
out
mov
int3
dec
fwait
inc
mov
jnp
out
stos
imul
sti
jne
idiv
inc
repnz
fsubrs
imul
clc
inc
repz
imul
sbb
pop
push
xchg
sub
mov
fstl
cmp
mov
lea
jnp
rorl
adc
mov
pop
inc
pushf
mov
popf
sub
aas
jb
jecxz
sub
push
sub
stc
outsl
fninit
data16
inc
shl
out
jmp
sbb
sbb
or
jmp
mov
sub
addr16
lahf
out
mov
mov
data16
outsb
xor
stos
dec
inc
inc
bound
dec
mov
popa
lcall
xchg
inc
fnstsw
stos
xchg
into
leave
add
inc
and
cld
jge
adc
rorl
shlb
push
push
daa
and
xorb
iret
fdivrl
sti
sub
call
jne
outsl
out
push
mov
sbb
in
sbb
hlt
pop
inc
leave
data16
push
in
lds
loope
push
adcl
xor
cmp
jns
push
pushf
out
in
mov
inc
jb
xchg
popa
lea
pop
in
cwtl
mov
xor
rcrl
or
push
xor
add
mov
mov
scas
int
add
adc
insb
mov
push
mov
mov
xchg
divl
or
insb
jne
call
fistpll
xlat
aas
ret
enter
enter
fadds
fsubs
arpl
mov
push
and
movsl
jb
cmpsl
lret
inc
and
in
out
out
xchg
cmp
jp
pop
outsb
aam
and
xchg
outsl
sbb
sbb
ja
aas
insb
xor
adc
xchg
mov
stos
stos
lret
xchg
push
imul
idivb
jae
xlat
test
ljmp
mov
push
inc
out
outsl
fdiv
push
fisubrl
mov
pop
lcall
sub
fdivs
pop
testl
into
inc
inc
add
fimuls
por
lods
pop
pop
inc
inc
cltd
pop
int3
ds
jbe
cld
xlat
inc
addr16
xor
cmpsb
adc
xchg
int
test
mov
roll
inc
fidivl
add
shl
sarl
mov
mov
jle
jg
mov
jae
aaa
or
cld
push
or
nop
outsb
pop
add
bnd
and
test
adc
inc
or
aad
dec
mov
stc
jne
sbb
ret
cmp
outsb
sti
adc
es
insb
scas
adc
jb
jno
aas
js
mov
lcall
ret
outsb
pushf
insb
int3
int
stos
sbb
lret
shlb
mov
shrb
fldl
jl
or
rolb
fdivr
ror
outsb
xchg
cli
xor
mov
dec
adc
push
mov
xchg
push
gs
or
cmpsl
pop
jge
cmp
xchg
imul
hlt
mov
push
add
inc
mov
shr
mov
das
outsb
aaa
js
cltd
xor
jp
pusha
std
shrb
bound
jl
xchg
popa
add
pop
testb
and
insl
mov
mov
imul
adc
andl
fimull
ffreep
daa
mov
dec
mov
push
iret
mov
fs
push
cmpsb
sbb
cmp
fisubrs
js
jae
and
inc
mov
push
pop
fisttps
and
lock
cmpb
mov
and
lods
outsl
cmp
arpl
sub
sti
imul
test
xor
addr16
aaa
sbb
test
fcmovnu
mov
lret
sbb
pushf
loop
cmp
cld
jp
cmp
loop
pop
aam
inc
mov
sbb
mov
xchg
popa
fwait
mov
cmpsb
pop
pop
pusha
mov
add
ret
das
out
jae
add
in
in
out
adc
outsb
push
push
in
int3
loope
mov
fildl
xchg
pop
vmovapd
dec
cmp
negl
mov
mov
outsl
movsl
outsl
sbb
cmp
adc
daa
jae
jno
dec
xor
pop
jmp
out
mov
cli
mov
xchg
mov
dec
pop
push
ror
or
push
mov
hlt
fcomps
frstor
fcomps
lock
adc
mov
push
mov
mov
sub
repnz
add
xor
mov
sub
dec
popf
loop
fildll
jae
scas
jno
fstps
pop
mov
mov
push
dec
mov
sub
cmc
unpcklps
lahf
flds
popl
sbb
mov
aam
test
insb
nop
lods
gs
out
cmpsl
jge
rolb
cmp
mov
and
push
rorl
sbb
push
pop
test
ficoms
sbb
lds
test
fldcw
mov
dec
mov
out
adc
shlb
in
xor
mov
fstps
ss
cmp
push
jbe
push
pop
push
push
pop
or
insb
cltd
or
imul
clc
xchg
mov
push
inc
pop
insl
xor
add
dec
cmp
lret
insl
add
pop
mov
popf
xor
push
mov
mov
ja
pop
in
sub
insb
mov
sub
btr
pushf
cs
push
lret
adc
sbb
loopne
fld1
dec
mov
jmp
dec
shr
mov
lahf
sbb
lea
fs
das
dec
sti
stc
xchg
pop
mov
in
das
mov
push
jg
sub
jecxz
out
mov
sub
adc
call
flds
cli
flds
das
mov
xorl
aas
mov
adc
dec
sub
dec
push
inc
fistps
cmp
loop
sub
jo
mov
dec
and
mov
mov
cmp
gs
inc
push
push
loopne
mov
push
adc
push
pop
fcoml
dec
pop
arpl
sbb
push
stos
stos
das
icebp
push
pop
xchg
aad
bound
call
das
insl
push
and
push
pop
js
pop
jmp
mov
out
cmpsl
xor
adc
jae
pop
xor
push
std
dec
mov
testl
movsl
test
lods
mov
ja
shrb
ret
sbb
mov
mov
cmp
lret
adc
push
into
fwait
jb
sub
fs
mov
add
mov
xor
push
push
pop
jmp
fdivl
scas
stc
adc
fsubs
sbb
inc
or
insb
fnsave
sbb
jnp
jnp
jno
mov
jp
stos
xor
jmp
sbb
test
fiadds
scas
jmp
cli
lods
push
jl
nop
sbb
jnp
push
lea
ljmp
mov
push
rolb
sbb
mov
incl
addb
jb
cld
std
das
fdivr
repnz
js
fidivl
popf
sbb
stc
outsl
es
inc
insl
cmp
pop
mov
mov
push
mov
cli
sub
adc
scas
shll
sbbl
scas
cltd
pop
or
mov
pop
aas
dec
xor
js
jb
dec
jo
pop
aad
mov
push
and
push
push
mov
add
aaa
rcll
jge
mov
mov
scas
and
lods
das
shr
inc
or
clc
mov
dec
inc
and
mov
sbb
loop
mov
data16
pop
fcmovnb
inc
jb
insl
subb
pop
aam
pop
mov
mov
inc
sub
rcll
enter
fbld
stc
jae
arpl
push
lahf
fildll
and
repnz
pop
mov
test
mov
sbb
dec
xchg
dec
push
ret
sub
test
insb
pop
push
cli
dec
mov
das
cmp
loop
shrl
mov
ret
mov
xchg
adc
out
clc
jbe
test
fucomp
lahf
jb
mov
in
mov
cmp
dec
arpl
push
in
lret
repnz
pop
addr16
jmp
cmp
imul
dec
push
jno
cltd
repnz
and
es
xlat
ds
jmp
inc
add
dec
imul
pop
lds
int
xchg
clc
addr16
cmpsb
jg
xchg
faddl
cld
pop
js
in
pop
push
test
iret
outsb
inc
sbb
xlat
notb
fstps
out
mov
lods
jg
std
dec
dec
push
xor
outsl
inc
push
icebp
out
inc
adc
repnz
cmp
add
xor
pop
outsl
mov
sahf
cmp
pop
sbb
popl
imul
xchg
aaa
dec
jl
jp
sub
vmaxss
sub
in
movsb
fldenv
mov
inc
sbb
xchg
cwtl
insl
pop
sbb
mov
scas
stos
adc
out
jle
scas
push
mov
imull
nop
pop
addr16
loope
loop
sub
clc
cmc
mov
sbb
popa
dec
imul
add
jmp
cmp
ja
int
adc
fisubrs
or
movsl
add
sub
add
fdivrl
dec
sti
subb
es
push
popf
jecxz
es
sub
out
nop
cmpsl
mov
aaa
enter
popf
push
sbb
pop
jae
cmp
push
shrl
cltd
sub
adc
mov
iret
bound
lods
xor
sub
sbb
out
shrl
cmp
lcall
scas
mov
jl
dec
mov
fs
test
sete
lea
jnp
outsl
outsb
arpl
sarl
outsb
testl
test
repnz
jb
xchg
or
fdivrs
and
out
in
pop
push
and
orb
xchg
mov
fsubp
addl
sahf
xor
sub
xlat
xchg
xor
out
inc
xlat
cwtl
daa
cwtl
jmp
push
mov
lcall
mov
ljmp
or
dec
adc
sbb
aaa
sub
pusha
cmp
xchg
in
xchg
jnp
int3
ljmp
lcall
popf
jg
jg
mov
push
push
mov
leave
and
movsl
movsl
outsl
or
test
mov
inc
cmp
nop
or
and
push
mov
cmp
jae
movsl
and
dec
pusha
jb
jl
test
iret
bound
out
jb
aas
test
ficompl
scas
pop
clc
aas
xor
mov
testb
xchg
xlat
lods
pushf
adc
adc
insl
and
sbb
sub
outsb
call
dec
or
ss
or
or
imul
addl
clc
mov
push
jne
fistpll
imul
mov
jns
push
pop
jns
jmp
es
mov
sbb
sbb
ret
jmp
insb
ficoms
adc
mov
fcoms
mov
cmp
popf
ret
xchg
sbb
and
fdivs
inc
pop
mov
in
inc
push
sti
imul
loop
mov
into
pop
xor
pop
mov
pop
push
pop
popf
mov
insl
pop
sub
mov
xchg
sarb
movsb
adc
mov
jp
call
outsl
shl
add
mov
inc
inc
mov
int
inc
je
and
adc
gs
popf
shlb
dec
xor
push
xor
test
pop
pop
add
cmpsl
cmp
in
fucomip
cwtl
idivb
jp
sub
xchg
stc
mov
mov
and
testb
in
mov
or
sbb
lahf
push
adc
xchg
lret
adc
loop
pusha
aad
cmp
push
jae
outsl
push
inc
scas
cld
stos
out
xor
xchg
push
adc
ror
xor
mov
pop
movsb
pop
mov
add
fs
or
fs
repz
insb
xchg
sti
js
cmpsl
bound
jns
scas
lods
jecxz
jmp
js
xchg
inc
inc
in
sub
jne
push
dec
int3
sbb
xchg
push
hlt
push
ja
hlt
in
ret
jbe
shlb
movsl
adc
sub
push
inc
cltd
push
xor
leave
adc
hlt
inc
sub
hlt
fisubs
arpl
xchg
dec
inc
pushw
call
cmpsw
icebp
xchg
enter
or
loop
push
lea
fwait
add
push
cmp
jge
leave
out
ss
sub
mov
je
outsb
xchg
push
push
cwtl
add
jae
fbstp
sbb
test
jp
into
cmp
lret
js
cmp
sub
jno
cmp
pop
xor
je
inc
jp
cmp
add
or
and
xchg
std
inc
insl
xchg
sbb
das
inc
add
add
das
dec
dec
sub
pop
pusha
les
sbb
testb
adc
mov
cmp
xchg
mov
aaa
dec
mov
sbb
and
jp
arpl
stos
aaa
inc
mov
ret
or
or
ljmp
aam
ret
mov
icebp
aaa
push
adc
sarb
mov
in
sub
xor
push
rclb
pop
sbb
adc
inc
and
cmp
out
pop
add
mov
add
xchg
fnsave
adc
inc
adc
inc
popa
mov
fidivs
mov
add
in
out
subb
in
arpl
and
aas
adc
inc
or
das
loopne
pop
fstl
and
popa
scas
inc
sub
or
push
loope
js
or
mov
jb
fnstcw
ljmp
ds
loopne
inc
adc
jp
clc
jns
cmpl
lods
test
cltd
lcall
lea
sub
flds
call
and
test
nop
dec
pop
push
xchg
xchg
sahf
xchg
xchg
into
or
jecxz
sub
nop
into
in
push
pop
ret
mov
mov
cmpsb
mov
lret
jne
mov
or
inc
cwtl
cld
hlt
adc
out
jp
mov
sarb
stc
cmp
inc
xchg
lcall
nop
cld
mov
lret
jmp
sub
mov
shll
es
int
sbb
inc
xor
pop
mov
xchg
dec
je
in
imul
mov
orb
movsb
jg
stos
sub
fistps
jnp
icebp
push
in
sahf
icebp
or
add
repnz
xchg
sbb
aad
inc
cld
aam
or
jbe
nop
mov
push
ja
aaa
popa
jbe
sbb
stos
xchg
jle
push
add
push
insl
js
inc
push
call
push
mov
xchg
push
add
inc
or
sub
jecxz
shrl
mov
lock
fists
jg
pop
jnp
sti
cltd
dec
jecxz
test
arpl
sub
or
imul
aas
sbb
imul
dec
lods
das
add
ss
adc
cld
shrb
int
imul
adc
jnp
jno
and
shlb
repz
sti
push
dec
scas
adc
push
into
add
cwtl
into
dec
pushf
mov
or
mov
gs
pop
mov
jmp
inc
mov
inc
ljmp
push
add
out
sub
aaa
imul
imul
std
addr16
sbb
pushaw
push
out
mov
push
add
mov
cmpsb
testl
in
out
push
insl
xchg
jo
inc
mov
jp
pop
adc
xchg
popa
popf
mov
cmp
out
loope
fadd
inc
scas
cmp
int3
cmpl
dec
dec
orl
test
xor
xor
mov
ljmp
and
xor
or
jp
adc
xor
imul
mov
xor
pcmpeqb
lret
lcall
lods
inc
push
imul
xchg
xor
dec
negl
icebp
test
insl
or
xor
and
or
lods
mov
int
arpl
adc
out
imulb
loop
or
ret
sub
or
shll
mov
enter
int
imul
fucom
push
and
jecxz
cmpsl
sub
addr16
lret
sbb
xchg
ljmp
xor
inc
insl
cltd
xchg
mov
mov
dec
fstpt
rcll
jae
scas
leave
or
imul
cmc
jl
out
push
nop
lods
dec
test
mov
xchg
fistps
psubq
mov
push
scas
rcrl
push
testl
popa
lret
pushf
popa
in
add
sub
js
cmc
out
call
cltd
lret
shl
rorl
lea
push
sbbb
lcall
adc
fsubr
cld
or
xchg
mov
cmp
cmp
mov
arpl
inc
xchg
es
ficoml
lret
sbb
cmp
dec
lcall
pop
daa
rcr
mov
imul
sub
pop
mov
inc
fwait
jns
or
sti
xlat
dec
inc
or
movhps
xchg
jmp
shlb
sarb
mov
cli
ljmp
dec
lock
addr16
scas
or
fs
in
les
aad
js
sub
push
dec
jns
negl
push
cltd
test
ror
dec
addr16
add
xchg
jp
test
xor
cmpsb
lea
and
fisubrl
std
fstps
pop
sti
and
jmp
inc
subl
scas
and
daa
xor
sub
lret
shrl
dec
dec
icebp
arpl
cmp
popf
pop
clc
fidivs
add
popa
or
xor
test
aas
jno
dec
pop
inc
jbe
test
aaa
roll
inc
mov
adc
test
cs
lods
adc
icebp
adcl
fyl2xp1
inc
data16
sbb
fldl2e
cmp
and
push
js
and
or
or
sub
adc
repnz
pop
ljmp
stos
shrb
std
les
inc
xorb
dec
jbe
inc
sub
sbb
dec
test
loopne
sub
stc
imul
xor
mov
hlt
jbe
das
xor
pushf
outsb
push
mov
jmp
movzwl
push
stos
outsl
xchg
mov
cmp
fisttpll
sub
add
jb
push
pop
mov
fisttpl
test
fldenv
mov
cmp
mov
sbb
sub
fisttpl
jecxz
mov
push
inc
mov
sti
jne
movsl
cli
sub
push
out
jmp
lret
in
out
js
push
rdtsc
outsb
in
and
loope
hlt
lods
movsb
aas
aad
pushf
push
inc
push
frstor
push
outsl
call
call
and
sahf
and
jl
fcoml
insb
jmp
add
add
cmp
sbb
xchg
in
rcrl
cli
xor
pop
mov
cmp
jg
jo
into
aam
orb
jg
insb
cltd
fs
in
add
push
lods
insb
stos
pop
ret
daa
shlb
in
int3
pop
adc
sbb
idivb
mov
mov
dec
adc
dec
lods
scas
cmp
push
mov
jg
and
cmpsb
jmp
push
dec
in
xor
aam
sahf
jle
push
dec
xor
mov
mov
mov
jg
inc
mov
mov
jl
scas
sub
jle
and
popa
mov
sar
mov
cmp
rclb
dec
cld
jmpw
daa
das
jnp
or
fdivl
mov
jae
dec
cmp
dec
sahf
jg
aam
in
lods
dec
mov
mov
jmp
dec
loope
xchg
mov
dec
sbb
mov
lret
cli
andb
in
into
fwait
mov
xchg
movsb
adc
mov
and
bts
sbb
adc
sbb
and
fimuls
mov
loopne
and
ret
cwtl
xor
add
pop
xchg
imul
pop
xchg
sbb
and
mov
jns
push
cmp
mov
mov
scas
rcl
aam
pop
mov
fdivrl
cmpsl
shll
cmp
push
xor
fcomps
mov
mov
sahf
out
mov
cmp
mov
push
or
fdivrl
fdivl
repnz
inc
mov
mov
outsb
jmp
cli
jbe
lcall
xor
addr16
negb
xor
aad
push
xchg
lods
or
outsb
pop
adc
testb
negl
scas
mov
aas
cmp
movsb
jecxz
fidivs
scas
popa
inc
ss
sbb
add
fcomps
into
push
aas
mov
inc
xchg
lock
mov
test
testl
jno
cmp
aas
lahf
mov
incl
jb
int
add
jmp
xchg
out
adcb
test
mov
je
pop
rcll
add
mov
jl
mov
in
lock
xchg
xchg
outsb
mov
rorb
les
mov
fcmovu
inc
cmpsl
push
xchg
fnstsw
and
lcall
jmp
rclb
inc
scas
test
pop
loopne
mov
cmp
mov
inc
and
inc
out
mov
cmp
jno
push
lret
out
adc
add
xchg
scas
in
xor
push
xchg
inc
fidivs
icebp
push
push
and
xor
arpl
mov
test
mov
enter
jg,pn
mov
inc
xor
loopne
fdivr
pusha
repnz
jecxz
lods
xchg
ret
inc
xor
mov
sbb
xchg
mov
mov
divl
cli
jb
adc
fwait
daa
loopne
fidivl
cwtl
mov
incb
int
data16
dec
insl
cmp
sub
sub
adc
sbb
adc
sarl
cmpsb
jmp
ds
mov
into
shrl
daa
mov
push
loop
test
jae
int
xchg
mov
push
jns
mov
push
push
lods
or
test
jg
adc
dec
add
add
cwtl
in
mov
cmp
aaa
stos
jno
test
int3
sbb
jle
test
inc
or
mov
insl
mov
cmp
sub
push
out
pop
inc
sbb
mov
daa
sbb
cmp
test
or
popa
jb
aad
push
and
out
or
or
and
mov
or
pusha
lods
xor
ret
dec
add
xchg
mov
clc
pop
imul
lcall
xchg
pop
add
lods
sti
mov
int3
call
arpl
xchg
mov
dec
cmp
jge
out
les
out
cmp
xor
mov
xchg
push
les
jge
sub
fisubrl
int3
adc
call
cmp
jae
mov
mov
dec
icebp
rcrb
fmull
stos
push
dec
das
push
mov
out
sub
arpl
daa
int3
gs
test
add
sub
out
out
add
arpl
dec
mov
xor
sub
in
mov
mov
mov
or
cmpsl
repnz
mov
push
es
fmul
mov
daa
cmp
in
adc
xchg
mov
aas
mov
jb
bound
lret
mov
fisttpll
xor
into
movsb
test
jg
in
leave
dec
leave
jno
fucomp
testl
mov
das
sbb
cmpsb
mov
mov
jnp
iret
pop
fs
das
aas
popl
pop
insl
or
xor
out
xlat
bound
sbb
cwtl
dec
adc
imul
rcll
inc
add
enter
icebp
jmp
aam
jge
mov
bnd
add
mov
ljmp
add
push
movnti
fwait
std
add
cmp
push
popf
ficoml
cmc
shl
cmc
inc
shlb
inc
pop
clc
or
out
add
add
or
js
jo
jle
adc
decb
xor
mov
cld
cmpb
hlt
sbb
mov
cs
in
sub
jnp
cmp
dec
xchg
adc
pusha
pop
adc
xchg
int
test
into
xchg
stc
xor
iret
mov
push
jle
mov
icebp
adc
mov
rcrb
mov
test
stc
xor
je
mov
add
fs
or
and
out
inc
fs
pop
add
push
mov
out
rclb
cmpsb
pop
cmp
xchg
cs
sbb
dec
leave
testb
test
test
fsubr
imull
scas
dec
or
xchg
je
push
xchg
pop
stc
sar
sub
lds
pop
int
mov
shl
bound
lods
mov
mov
incb
cmpsl
push
jecxz
mov
dec
add
and
mov
into
mov
and
sbb
hlt
std
and
sahf
mov
outsb
lods
dec
pop
cmp
add
jno
mov
addr16
pop
sti
xlat
lock
loopne
cmpsb
insb
push
in
sub
ds
adc
hlt
not
testl
ret
lods
jno
loope
sbb
imul
test
aaa
xchg
adc
mov
rclb
insb
xchg
rclb
stos
inc
lods
mov
push
outsb
xor
sbb
and
sti
inc
jecxz
xchg
je
push
or
sbb
stos
cmp
js
fildl
ret
jo
enter
xor
imul
mov
push
jmp
mov
mov
or
inc
xor
cmp
pop
enter
dec
add
ret
lahf
lods
inc
repnz
push
mov
pop
je
sub
shrl
jo
in
sbb
daa
nop
jmp
daa
mov
mov
sbb
mul
jae
mov
mov
or
and
hlt
lcall
test
adc
bound
in
adc
jecxz
sub
lds
dec
add
ds
loopne
mov
cmp
mov
test
xchg
inc
sbb
add
dec
lcall
test
movsb
push
jecxz
data16
mov
rcrl
fistl
movsl
jne
ret
imul
popf
aam
arpl
in
fldl
lods
test
ja
lcall
inc
mov
mov
sbbb
and
das
out
xchg
jg
cmp
sbb
gs
mov
sbb
push
xchg
cltd
test
rorl
stos
add
cmp
push
data16
and
jbe
push
add
xchg
mov
mov
and
rclb
push
sarl
cs
das
stos
cmp
adc
orb
out
lds
in
or
fnstsw
mov
scas
and
push
push
pop
sbb
xchg
scas
shll
cmp
pop
pop
dec
out
insl
test
cs
das
lock
mov
iret
add
sbbl
add
gs
xchg
pop
inc
mov
fcmovnu
loopne
mov
inc
lods
push
cli
push
insl
xchg
stos
or
stos
push
push
fldenv
daa
loopne
std
gs
stos
aaa
push
mov
int
add
ja
cltd
fcmovnbe
fcmovu
push
pop
loopne
popf
lods
inc
cmpsb
mov
sti
push
movsl
negb
mov
inc
cmpsl
in
xlat
dec
scas
pop
scas
mov
pushl
and
sub
adc
dec
mov
ret
stos
push
pop
pop
mov
adc
popf
jp
mov
movsb
pop
and
test
lods
mov
icebp
jb
or
stos
popl
fisubrs
ja
push
arpl
sub
aam
sbb
cmp
lret
rcrl
imul
dec
and
repnz
pop
mov
jl
push
inc
lret
testb
popa
imul
outsl
shrl
outsb
jmp
xchg
cmp
sub
mov
cld
dec
data16
test
jb
js
das
mov
jge
mov
int
cs
mov
or
mov
sahf
sub
xor
jmp
sub
test
in
sarl
and
jnp
cld
cmp
and
cmc
into
mov
ss
adc
mov
je
aaa
aas
rcll
scas
xchg
xchg
xchg
sti
xchg
lods
fsubs
adcb
mov
jne
push
mov
push
out
push
push
rol
pop
lods
loopne
nop
jecxz
loop
sub
xchg
jl
loopne
icebp
push
divb
lock
incb
outsl
loopne
hlt
pop
xor
cmp
mov
repz
or
negb
movsl
push
aad
cmc
push
imul
dec
ss
push
lret
mov
repnz
xchg
adc
jmp
cmp
out
push
xchg
mov
add
loopne
js
ret
add
or
insl
and
hlt
jne
adc
cmp
push
fcmovnu
aas
call
imul
xchg
inc
mov
xlat
inc
sub
aad
jns
clc
rol
mov
sub
leave
icebp
xlat
push
jno
jp
dec
scas
adc
xor
int3
xor
roll
daa
shl
mov
pop
sbb
lahf
pusha
call
sbb
lods
ret
popa
add
sahf
add
sahf
push
xchg
mov
inc
imul
out
dec
sbb
icebp
out
ret
inc
cmp
inc
mov
clc
int
clc
xchg
cltd
test
or
cmpsl
lcall
cltd
mov
sub
add
sub
jl
xchg
movsb
cmp
movsl
cli
je
push
add
sub
add
mov
mov
jmp
fisttpl
pop
ficoms
ret
call
jae,pt
ret
mov
sub
ja
mov
jo
push
outsb
fdivr
sbb
mov
add
dec
sti
fs
mov
inc
mov
xor
pop
jg
jl
test
sbb
cmpsb
jno
cwtl
push
adc
sub
fmuls
adc
in
insb
mov
ds
pop
test
sti
mov
iret
cmc
stos
fildl
int
pop
and
pop
push
inc
imul
mov
jp
lret
pop
rorb
ss
loopne
mov
inc
pushf
add
pop
popf
cmp
pop
jae
xchg
jmp
cwtl
inc
movsl
xchg
ffree
hlt
inc
ja
cwtl
dec
xorb
mov
mov
and
je
js
cmp
loope
mov
add
inc
jnp
and
dec
fsubrl
mov
negb
je
push
outsb
mov
mov
insl
mov
out
sub
lahf
inc
add
add
mov
pop
push
mov
pop
fnstsw
test
cld
mov
jg
imul
xchg
loop
fnstenv
sbb
fs
imul
minps
mov
push
ljmp
sub
sbb
adc
notb
testl
mov
xor
push
adc
fildl
sbb
mov
and
pop
into
xor
push
les
or
mov
jp
inc
insl
adc
mov
cmp
popl
fcomps
mov
sbb
out
in
adc
in
imul
pop
mov
and
roll
je
push
push
repz
mov
mov
mov
mov
or
sbb
cmpsb
inc
cmpsl
ret
mov
clc
mov
adc
push
arpl
push
pop
ret
out
arpl
cmp
cld
bound
fimull
nop
jno
shll
lea
lods
outsl
cs
mov
sub
or
les
sbb
push
out
push
sub
shlb
add
negb
dec
or
arpl
popa
mov
arpl
outsl
jmp
xor
push
sbb
adc
insb
mov
outsb
push
fs
jns
cmp
fwait
sbb
inc
into
pushl
dec
push
mov
in
mov
popa
nop
aaa
sti
cwtl
ss
add
cld
cs
repnz
mov
pop
cmp
mov
mov
pushf
icebp
out
mov
lret
xor
imul
test
out
jo,pn
jns
leave
push
sti
or
push
idivl
mov
int
jnp
lret
out
xchg
movups
mov
insb
jmp
ljmp
outsl
push
in
daa
ret
jbe
fadds
mov
add
mov
or
pop
push
and
inc
or
dec
dec
jecxz
cmp
mov
mov
int3
and
rcrl
add
jg
mov
jne
rcrb
push
pop
cmp
es
cmp
outsl
stc
jge
mov
push
popa
pop
inc
stos
int3
movsb
mov
pop
mov
or
or
and
dec
sbb
out
jecxz
test
js
pop
inc
mov
ret
loope
daa
rcl
add
insl
push
sbb
cwtl
dec
sub
jg
push
ss
jae
push
psubd
sbb
aam
addr16
hlt
xor
lea
imul
adc
lock
sub
adc
mov
mov
lahf
cltd
loop
aaa
mov
jmp
jg
mov
mov
movsl
mov
aas
test
cmp
mov
add
mov
or
and
sub
in
mov
sti
lahf
push
arpl
rolb
les
add
sbb
jne
pushl
ret
imul
xor
or
movsl
mov
cmp
lret
mov
sub
mov
pop
xor
andb
jnp
sub
cli
popf
sbb
xchg
adc
fldcw
jecxz
lock
pop
jns
push
fidivrl
cltd
sub
lds
pushf
mov
push
xchg
pop
mov
jno
cmc
dec
mov
and
lcall
push
push
mov
mov
mov
or
mov
fimull
push
stos
dec
jecxz
push
cs
add
cmp
popf
adc
int
adc
stos
mov
test
outsl
push
loopne
sar
mov
mov
int
lcall
icebp
dec
lret
push
fcoms
testl
inc
rol
push
inc
je
jnp
pushf
addr16
xchg
inc
and
mov
mov
add
jecxz
push
jl
scas
cwtl
sub
nop
add
fidivrs
shrl
rcl
imul
jmp
pushw
cmp
popa
mov
sarl
pop
pop
sbb
push
sub
fldenv
lods
jecxz
pop
xchg
adc
adc
loopne
mov
add
outsl
call
testl
out
aaa
sub
xor
mov
lock
fstpt
ret
sub
dec
xor
inc
ljmp
ficoms
arpl
cmp
loop
or
sub
pushf
sarl
xor
fstl
jne
jne
repnz
and
or
adc
jl
mov
outsl
sbb
sti
pop
inc
arpl
adcl
jecxz
fsubl
stos
xor
outsl
mov
sbb
dec
jb
inc
aaa
sbb
into
pop
cli
scas
and
dec
outsl
lods
ja
aam
mov
pop
outsl
push
adc
sub
out
pop
je
aas
adc
pop
push
pop
loope
ret
shll
inc
mov
dec
outsl
fsubs
adc
imul
popa
sub
dec
push
xchg
ss
pushf
mov
jbe
dec
or
mov
cmp
mov
pop
jmp
dec
je
iret
xor
mov
xchg
inc
call
adc
mov
pop
shlb
adc
xchg
in
repnz
or
cmp
mov
mov
loop
push
into
loope
sub
rorl
call
push
mov
cli
cmp
mov
jns
push
sbb
and
inc
pop
call
pop
mov
push
decl
out
mov
xchg
mov
inc
adc
je
subb
jnp
hlt
mov
test
sub
test
sbb
dec
fistpll
loopne
mov
push
cli
out
testl
rorl
sahf
push
cmc
jns
push
add
inc
outsl
xchg
mov
add
fsts
add
das
push
inc
push
mov
shl
add
mov
movsb
out
mov
jg
dec
fwait
inc
leave
pop
dec
scas
mov
out
xor
push
push
inc
outsb
sbb
lahf
loope
dec
sub
lods
movsl
or
fisttpl
inc
and
outsb
add
xchg
pop
gs
adc
mov
dec
test
addr16
sub
adcl
add
mov
pusha
sti
and
inc
or
dec
or
push
fnstenv
jno
pushf
aad
or
jecxz
xor
es
call
xor
or
and
push
stos
fs
and
cmp
pop
pop
sub
mov
ret
pop
flds
push
mov
sub
cmp
out
testl
test
mov
inc
sarl
xor
or
cmpsl
ficompl
dec
push
dec
repnz
gs
add
inc
mov
xlat
in
pop
sub
fmulp
dec
fnsave
xchg
pop
addr16
cld
and
pop
int3
sbb
jo
sub
lahf
idivl
sbb
fs
in
push
dec
int3
js
push
or
test
sub
sub
pop
sbb
aam
cmp
pop
flds
sbb
jae
ljmp
xchg
mov
stc
cmp
sub
stos
pop
stos
cld
aas
imull
sub
in
adc
decb
add
cmc
test
dec
mov
lods
xor
icebp
push
or
scas
jmp
lcall
adc
sbb
movsl
jae
sub
call
mov
push
lock
add
and
push
sbb
arpl
pop
push
mov
std
mov
mov
sub
pop
ret
imul
add
or
dec
push
sar
mov
je
xchg
int3
push
sub
jp
and
rcrb
test
fldenv
sub
mov
fisubs
int
jl
mov
xchg
ljmp
push
dec
or
scas
rcll
outsb
fadds
int3
daa
popl
or
arpl
or
in
jae
insl
popa
inc
ds
add
cwtl
jb
xchg
test
subl
pop
or
mov
cmpsl
or
xor
dec
fwait
sbb
nop
lcall
pusha
pop
enter
ja
stos
inc
cmpsl
stos
sahf
push
adc
mov
stc
ret
cmpsl
stos
test
push
cmp
lods
push
mov
addl
push
std
cmp
outsb
pop
xchg
lcall
cli
push
adc
sbb
ds
test
cmp
addr16
add
jecxz
sarl
aam
jno
add
xorb
dec
jns
test
jns
cmp
xor
std
or
dec
out
std
icebp
cmp
mov
out
nop
fistpl
aas
xor
icebp
mov
out
adc
test
or
int
pop
iret
jp
xor
jg
fnstsw
fldt
push
mov
mov
xchg
or
pushf
dec
out
sbb
cmc
mov
jae
mov
jecxz
sub
push
push
push
rcrb
or
mull
mov
popf
shll
shr
addr16
mov
cmp
jne
push
jno
cwtl
lcall
push
jp
pop
outsl
sub
xor
sub
mov
push
mov
out
dec
sarl
xor
add
push
mov
jecxz
xlat
inc
adc
cmp
outsb
xlat
lret
jmp
fistl
fnstenv
cmp
shlb
outsl
fbstp
adc
rolb
inc
xchg
stos
or
dec
fstps
xchg
or
daa
cmp
fiadds
dec
or
pusha
std
xchg
push
rorl
mov
cmp
sbb
jno
mulb
cld
mov
aaa
idivb
andb
or
jnp
nop
ret
push
or
xchg
icebp
shrb
hlt
or
es
mov
add
or
mov
mov
sbb
mov
fsincos
xchg
fnsave
inc
pop
aad
xchg
pop
movsb
nop
js
mov
and
xchg
and
pushf
pop
mov
push
xor
lret
add
cmp
gs
sbb
ss
out
jecxz
divl
out
pushf
repz
ret
out
mov
ret
jns
loop
sbb
ljmp
rcll
xchg
xchg
loop
cli
into
stos
cmp
fldenv
fs
je
xchg
inc
or
inc
bound
xchg
cmc
jle
addb
lods
fcompl
xchg
pusha
push
or
mov
gs
cmp
lret
dec
mov
dec
stos
push
mov
sub
pusha
fisubrs
faddl
pcmpgtb
dec
inc
jle
std
shlb
or
outsb
fcoml
and
pop
and
inc
cmc
jg
adcb
xchg
or
jo
mov
lret
push
scas
jle
sbb
mov
inc
xchg
and
lock
int
outsl
scas
pushf
lret
mov
test
pop
or
ffree
mov
fsubrl
xchg
mulb
xchg
stc
cmpsb
xor
push
push
xor
cmpsb
jl
notl
and
xchg
adc
popa
hlt
mov
loop,pt
dec
or
fdivr
hlt
add
in
and
mov
xor
sub
xor
adc
in
stos
sub
push
pop
notl
cwtl
push
outsb
pop
gs
or
std
ja
mov
xor
leave
adc
pop
shlb
xchg
mov
jnp
fsubp
mov
in
addl
mov
enter
cmp
jno
ret
push
test
scas
add
dec
and
je
aaa
mov
cmpb
movsb
dec
cmpsb
push
dec
pop
dec
gs
push
popa
cld
pop
adc
sti
cmpsl
pop
xor
jo
pop
and
pop
adc
add
shr
sbb
push
mov
repz
pop
movsl
out
mov
dec
cltd
push
cmp
push
mov
das
loope
testb
sub
or
jg
pop
repnz
dec
movsb
sbb
xchg
scas
out
mov
roll
cmp
xor
pop
sub
mov
fiadds
push
push
xchg
mov
cmp
pop
ljmp
jbe
sbb
adc
inc
xor
testb
jo
mov
dec
fidivs
dec
cmp
loopne
pop
sbbl
jecxz
call
lret
and
mov
roll
xchg
insl
out
dec
and
mov
dec
sbb
sbb
adc
loopne
xchg
fimull
dec
fwait
sub
sub
in
lods
inc
inc
aam
jbe
cmc
rorl
imul
test
or
jne
sbb
mov
shl
sbb
cmp
shrl
xchg
out
push
push
or
fdivrl
push
subb
inc
fwait
popf
jns
sti
gs
aas
lock
aaa
inc
mov
fiadds
in
insb
lret
test
aaa
add
mov
cmp
jmp
int
adc
dec
sbb
lods
test
dec
push
std
pop
jae
pop
adc
xchg
cld
pop
adc
in
mov
aas
daa
shl
cld
jbe
lods
sbb
iret
add
les
mov
inc
push
out
xorb
dec
cs
xor
movsb
inc
adc
pop
sbb
jns
mov
stc
aad
out
inc
aas
push
xor
aad
sub
std
popl
inc
push
jne
popa
push
jno
inc
inc
jge
and
inc
mov
es
push
lods
iret
test
pusha
movsl
xlat
fmuls
add
aad
add
arpl
dec
lahf
mov
jle
dec
int
mov
sti
call
in
mov
imul
or
ucomiss
lea
sbb
mov
xchg
sti
cmpsl
cmp
push
xor
xchg
inc
dec
and
cmp
lret
popf
inc
call
push
stos
cmc
or
test
fdivrl
stos
mov
inc
fsubr
mov
pop
xchg
and
jl
xor
push
push
adc
dec
and
scas
stos
and
std
cmp
sub
inc
pop
and
mov
repnz
pop
and
jg
mov
mov
repnz
push
mov
mov
xchg
lcall
add
call
push
stc
and
xor
or
shrb
inc
cli
out
mov
fisubs
fwait
dec
push
mov
addr16
scas
pusha
sahf
mov
xchg
sti
rep
xor
sub
jo
push
sbb
adc
pushf
sbb
mov
cmp
clc
mov
sub
sbb
or
std
mov
fdivp
arpl
lret
and
in
stos
imul
or
lahf
mov
cmpsl
les
sbb
cli
stos
js
addl
pop
insb
mov
je
clc
call
addr16
imul
xchg
scas
adc
push
out
jae
add
clc
into
mov
xchg
cmpb
add
and
roll
stc
xchg
popa
mov
lods
pop
pop
sbb
inc
xor
add
sbb
xor
pop
insl
icebp
xchg
mov
cltd
xchg
push
pushf
icebp
pop
sub
add
pop
sub
fmull
jnp
jl
cmpsl
int3
push
jg
ret
cmpb
fs
stc
push
inc
lret
add
adc
repz
or
xchg
nop
in
jge
sbb
xchg
xor
mov
adc
cmp
into
dec
mov
imul
sub
bound
scas
hlt
jle
xor
mov
sub
fsubr
lock
sub
fdivr
mov
sub
push
out
add
mov
mov
aad
cmpsb
fadds
jecxz
shrb
popf
ss
and
fmul
mov
xchg
mov
jecxz
sti
div
les
push
mov
out
cmp
and
lods
and
and
pop
mov
xor
aad
add
inc
movsb
repz
jae
jecxz
popa
pop
mov
adcb
outsb
xor
aam
fisubs
sub
cmp
adc
sub
mov
or
pop
call
sbb
sbb
pop
adcl
setl
finit
xchg
or
ljmp
ljmp
inc
inc
ds
ja
test
ds
push
xchg
pop
mov
orb
adcl
inc
fbld
jne
je
mov
sub
stc
ret
addr16
push
mov
arpl
cmpsl
lods
sub
sub
movsl
xchg
jno
push
call
mov
ret
mov
push
addl
mov
mov
int3
xor
rolb
in
or
push
fcoms
inc
adc
jmp
test
sub
test
push
bound
cmp
add
dec
mov
outsb
cmpb
shrb
mov
dec
inc
aad
sub
sub
ret
cmp
rcrl
int
in
push
add
aam
or
popf
hlt
sbb
inc
les
fldcw
stos
sbb
jae
out
hlt
leave
pusha
out
popa
cmp
mov
ror
adc
dec
cwtl
int
xchg
xchg
adc
and
rcr
and
sbb
dec
adc
xor
dec
mov
ljmp
pop
pusha
dec
loop
adc
fdivrl
in
add
sub
cwtl
pop
inc
jp
cwtl
ficomps
std
repnz
cld
popa
frstor
jo
daa
xor
and
push
icebp
imul
sbb
fldenv
jp
mov
sti
call
mov
xchg
loop
cmpsb
mov
ror
repnz
mov
xor
imul
mov
xchg
stc
inc
leave
jae,pn
lret
xor
pop
call
jb
mov
jg
jmp
rcl
xor
push
lahf
add
outsb
dec
cmp
roll
mov
dec
mov
out
pop
sub
imull
and
mov
ffreep
and
mov
aas
icebp
sti
or
mov
xor
lods
sbb
mov
and
inc
pop
dec
frstor
xor
cmpsl
sub
loopne
pushf
inc
inc
shll
sbb
mov
add
jle
popa
shr
dec
daa
test
arpl
imul
mov
pop
jecxz
loopne
mov
stos
push
scas
ret
imul
xchg
push
xor
and
les
fstps
pop
iret
cmc
add
mov
or
lcall
lods
dec
dec
test
cs
xchg
jp
push
andnps
lahf
dec
daa
pushf
and
sub
jge
push
stos
leave
sbb
inc
xchg
fdivl
ljmp
in
loop
add
mov
int
scas
dec
cld
mov
aam
inc
xchg
inc
sub
pop
pushf
pcmpgtd
push
sbb
dec
outsb
clc
sub
fidivs
test
xchg
icebp
lcall
adc
cs
cmp
xchg
inc
and
push
scas
lock
outsl
push
mov
cmp
xchg
hlt
pop
test
in
cltd
or
insl
jmp
push
pushf
push
mov
xchg
add
sub
sub
hlt
lret
jecxz
loop
lods
arpl
movsb
add
jo
xor
xor
or
and
aam
push
dec
popf
sub
push
cmp
and
adc
or
mov
sti
add
mov
push
pushf
fcomi
sbb
push
mov
mull
loop
add
imul
sub
and
leave
mov
pop
pop
iret
xchg
mov
add
cmovno
test
sub
repz
pop
lea
adc
or
adc
les
or
lret
fidivrl
fldl2t
lea
jns
leave
out
mov
sbb
sbb
lock
sub
adc
push
in
or
jecxz
mov
push
stos
pop
adc
fcoms
stos
sarb
popf
aaa
mov
rcl
xchg
xchg
es
movsb
inc
sti
sub
int3
mov
push
hlt
dec
ret
std
and
add
or
mov
js
xchg
mov
leave
mov
divb
push
inc
push
cmc
sub
std
ljmp
pop
sbb
aad
rcll
push
mov
cmp
mov
call
fstpt
mov
sti
sti
mov
loope
jmp
lods
mov
push
adc
inc
adc
outsl
pop
sbb
or
loopne
sti
jae
loope
arpl
lods
pop
lock
pop
sbb
ret
test
sub
lods
mov
fs
rcl
into
sbb
sub
sbb
xchg
jns
pop
enter
mov
xchg
ljmp
cmp
ss
cmp
test
pop
push
pop
sti
scas
mov
push
nop
data16
inc
mov
cwtl
inc
fdiv
mov
or
xor
outsb
popa
lods
clc
test
and
pmuludq
jo
out
mov
mov
sub
iret
push
adc
leave
aad
fstpt
sti
jb
insl
out
sub
mov
jle
mov
lds
mov
jb
pop
jne
mov
es
fmull
push
xchg
leave
int3
pusha
xchg
adc
add
ret
call
lods
enter
aad
ja
xlat
dec
sti
das
shl
int
fs
mov
pop
outsb
sahf
add
adc
int3
or
sbb
lods
xchg
jl
arpl
mov
dec
rol
xchg
scas
pop
sar
mov
cmp
ds
mov
xchg
lcall
int3
sbb
ret
jae
test
jmp
enter
xlat
mov
movsb
or
mov
pusha
jge
xchg
xchg
xchg
or
adc
insb
push
sbb
scas
dec
add
mov
dec
movsl
scas
push
sub
stc
shl
ret
int
cli
fildll
add
ds
xor
adc
repnz
pop
cld
jmp
test
lahf
gs
lahf
or
lcall
add
pop
jbe
push
lret
dec
lods
mov
imulb
jle
lahf
insb
pop
mov
sub
mov
fstpl
iret
cmp
adc
lcall
mov
fs
daa
negb
and
cmp
sahf
addr16
pop
mov
jae
clc
insl
jge
push
pop
pop
mov
jne
ret
fidivrl
out
pop
push
xchg
cmpsb
repz
fs
lea
xchg
fwait
jl
cltd
call
in
rol
push
xor
fisubrs
aas
pop
or
xorl
jns
jecxz
popa
jo
aad
jns
jmp
sub
shll
push
sbb
test
jns
ljmp
cli
dec
ljmp
mov
fsubs
push
adc
loop
xchg
push
stos
ret
call
push
sub
sub
clc
pop
pushf
out
in
jne
pop
mov
out
fwait
mov
jno
popf
fildll
cmp
push
cltd
inc
lods
arpl
in
and
nop
pop
pop
aad
inc
push
jmp
outsb
xor
lods
push
lret
cmp
push
es
mov
and
dec
je
cli
loopne
push
jge
int3
loop
xchg
mov
sbb
push
ss
sbb
cld
test
add
fldl
aas
sbb
add
inc
nop
pop
sbb
loopne
orl
imul
xchg
mov
jge
faddp
push
lock
mov
inc
xor
dec
test
mov
data16
mov
sub
mov
ficomps
imul
mov
mov
push
out
icebp
mov
arpl
movsb
mov
ja
daa
xor
jl
ret
sub
int3
insb
icebp
jl
daa
and
push
cs
ror
pop
sub
sti
mov
lods
inc
test
aad
pop
sbb
mov
out
out
push
bound
fadds
add
or
xchg
pop
or
and
jmp
insl
bound
ds
loope
jo
jo
jl
add
mov
xchg
and
add
dec
insb
test
faddl
mov
or
xchg
xchg
loopne
outsb
repz
loopne
shlb
push
movl
cmp
pusha
xor
cmc
fxch
les
cmc
jmp
pmulhuw
lea
std
in
dec
lret
cmc
in
jbe
iret
popa
es
aad
das
xlat
mov
xchg
sub
aas
pop
push
mov
or
mov
movsb
mov
out
and
aam
rcrl
cmpsb
cmp
push
jnp
dec
adcb
lahf
cli
xchg
stos
mov
stos
jo
add
clc
add
push
xchg
stos
xchg
mov
inc
xorl
mov
jp
out
jo
mov
icebp
mov
popf
push
xchg
loop
es
sahf
movsl
insl
jle
stc
fbstp
push
push
mov
dec
popf
pop
xchg
incb
dec
add
mov
dec
dec
lret
sbb
scas
dec
sbb
sbb
movsl
adc
pushf
aas
clc
jp
repz
fwait
xchg
push
xchg
fs
and
add
inc
push
ss
in
icebp
lahf
ficomps
sub
or
and
in
and
sub
pop
lods
push
out
rolb
daa
les
lret
mov
jecxz
stos
out
jge
inc
je
mov
lock
mov
test
scas
jmp
std
push
mov
add
test
lock
in
sbb
xchg
pop
mov
jns
in
dec
mov
loop
mov
mov
rcr
pop
pop
mov
jge
mov
jae
loop
jge
in
sbb
jg
xor
xor
mov
in
and
ss
push
xor
sub
aam
mov
cltd
cwtl
mov
xor
cmp
or
sbb
pop
adc
mov
xor
lock
inc
icebp
pushf
movsl
es
sarl
lock
mov
flds
lods
enter
jg
sbb
dec
jae
xor
xchg
fcomi
pop
fwait
push
xchg
shll
inc
ja
stos
push
fnsave
shll
pop
ficomps
outsl
cwtl
adcb
push
xorl
and
dec
in
out
cltd
jo
shl
sub
cmp
cmp
mov
cmp
dec
das
inc
outsl
aam
and
movl
pop
jns
pop
insb
in
pop
cmpsb
int3
jmp
cld
jg
mul
mov
sarb
inc
andb
mov
xchg
mov
fwait
mov
rolb
mov
ret
test
inc
and
outsb
mov
rorl
fisttps
fimuls
imul
push
push
pop
test
mov
push
sbb
nop
into
and
ja
insl
divl
mov
xchg
outsb
ljmp
cwtl
addr16
cmpsb
mov
adc
add
int
rcrl
fiadds
inc
add
imul
rcrl
clc
lods
lea
in
enter
in
js
dec
xor
add
rcrb
xchg
outsb
js
push
push
xor
mov
sub
add
push
mov
leave
ss
nop
cmpsl
sbb
int3
call
leave
cli
push
loopne
cwtl
imul
mov
jmp
pop
fwait
enter
out
mov
faddl
sbb
icebp
and
cmp
add
jb
or
add
dec
pusha
lea
incl
shlb
mov
sub
mov
out
pop
jo
fdivs
mull
or
stos
in
fxch
adcb
mov
push
or
mov
sub
xchg
pop
xchg
push
fldl
pop
lret
sbbb
xor
jo
ljmp
ret
pop
mov
lods
arpl
insb
xor
jp
mov
cltd
mov
jno
add
in
dec
sbb
mov
adcb
jbe
testb
pop
add
repnz
jmp
push
jecxz
daa
arpl
xlat
inc
or
nop
inc
mov
cmp
sub
enter
xchg
pop
xchg
aas
clc
mov
xor
push
pop
rol
xlat
cltd
mov
stos
pop
inc
pop
cmc
mov
jg
outsl
lock
in
push
xor
aad
sub
mov
sbbl
inc
push
mov
xchg
and
xchg
aam
add
add
add
xor
test
or
andb
sub
and
scas
mov
cmpsl
cmp
xor
repz
cmp
mov
fs
test
dec
pop
imul
adc
mov
xchg
sbb
cmp
rorl
lock
xchg
popa
adc
inc
fiaddl
xor
cmp
out
fwait
pushf
xor
jns
cmp
jno
sub
pop
mov
arpl
es
aaa
pop
outsb
mov
sbb
push
jge
and
iret
notb
test
and
clc
xchg
jl
adc
jne
mov
jg
les
lock
jo
out
push
sahf
notl
daa
stc
imul
sti
arpl
movb
push
dec
push
mov
xchg
mov
add
jnp
sbb
loop
xchg
or
pop
fdivrl
inc
pop
dec
fcom
idivl
lea
inc
mov
decl
out
xchg
cmpxchg
cmp
repnz
fcoms
or
into
sar
cmpsb
daa
popf
mov
mov
mov
mov
sti
cli
jle
mov
cmpsb
mov
ret
rcrb
ja
loop
mov
daa
and
push
ja
gs
sbbb
inc
cmp
fs
pop
subl
fldt
mov
jns
test
xchg
neg
push
fwait
or
xchg
mov
inc
test
dec
push
lahf
mov
fdivs
mov
jbe
and
lret
mov
pop
pop
xor
jnp
pusha
scas
test
mov
test
xchg
mov
add
mov
xchg
jl
test
and
xchg
push
shr
mov
jns
cmp
lock
test
mov
lea
xchg
xchg
icebp
or
dec
pop
or
repnz
pop
ja
push
sbb
fisttpll
pop
rclb
lret
nop
add
mov
iret
adc
scas
js
in
pop
jmp
xchg
cmp
stos
sub
loopne
lods
jne
xor
dec
push
jnp
inc
inc
cmp
aaa
mov
imul
pop
jl
cld
mov
mov
lds
ja
pushf
in
mov
jae
xchg
cld
xchg
pop
or
enter
addl
dec
jp
jl
pop
xchg
xlat
lock
or
cmp
mov
dec
aam
push
hlt
and
test
jbe
xchg
adc
mov
mov
fisttps
mov
pop
rolb
xchg
repnz
filds
neg
push
in
xor
arpl
fiaddl
fwait
sbb
adc
push
push
shrl
ss
nop
mov
cmp
mov
push
cmpsl
dec
adc
je
pushf
scas
push
fists
mov
insl
jno
mov
rol
movsl
fists
mov
call
icebp
test
or
dec
xchg
pop
pop
sbb
hlt
movsb
or
fistl
cmp
orl
je
ljmp
cld
in
push
inc
push
inc
into
push
repz
xchg
adc
push
sub
aad
jbe
loop
stos
es
pop
aaa
xchg
adc
out
mov
mov
cmpsb
aam
popf
mov
in
adc
clc
pop
dec
cmp
roll
repnz
aas
mov
dec
cli
mov
push
shll
push
js
mov
cmpsl
mov
sub
test
test
inc
or
lods
and
sbb
adc
lcall
test
stos
divb
fwait
enter
or
imul
mov
imul
mov
mov
jo
inc
mov
mov
adc
mov
jb
sti
stos
lods
es
test
mov
mov
pushf
cmp
in
pushf
cltd
dec
pushf
imul
insb
mov
inc
mov
fidivrs
insb
xor
pop
je
cmp
mov
add
xchg
iret
push
push
repz
imul
lcall
mov
lret
xchg
popf
mov
dec
sub
sbb
push
mov
ljmp
std
pop
dec
mul
push
cs
data16
cwtl
mov
dec
cmpsl
xchg
sbb
std
lods
notb
popa
sub
leave
mov
mov
push
insb
mov
xor
push
xor
decl
in
les
jae
test
bound
xchg
pushl
sbb
mov
popf
or
push
lods
pushf
push
cmc
in
xchg
sub
scas
push
shlb
mov
pop
inc
add
inc
in
mov
add
push
lahf
push
inc
scas
adc
mov
mov
xor
stc
cmp
outsl
adc
ss
push
xor
inc
push
push
aaa
xchg
sbb
in
ds
sarb
mov
lods
add
jl
adc
test
and
mov
cmp
cmp
pushf
shrl
pusha
mov
mov
sub
js
js
push
add
xor
popf
lahf
scas
shll
inc
jno
mov
in
fsubrs
test
sarl
dec
ret
mov
call
in
push
fiaddl
lods
add
mov
inc
outsb
scas
xorb
lret
popa
loope
rorl
add
push
out
in
sub
ret
fsubl
aas
insb
inc
repz
sti
pop
sub
xchg
pop
lods
and
dec
sub
or
push
pop
fimuls
imul
jp
dec
popa
adc
add
cmp
es
shlb
or
das
in
icebp
jle
iret
mov
movsb
ret
enter
pop
inc
fcmovne
adc
xchg
pop
lods
aad
and
cmp
std
mov
aas
stos
dec
or
scas
fs
adcb
fidivl
leave
and
insb
lods
lods
jne
add
mov
jnp
inc
jp
into
cs
xor
sbb
adc
fstps
mov
push
and
out
rcl
lret
adc
fcoms
fcoml
dec
jge
add
adc
push
sbb
je
add
jp
inc
fcomps
scas
push
test
mov
inc
push
add
rolb
aas
filds
adc
lock
mov
xchg
in
lea
and
dec
lods
cld
sub
cmp
xchg
dec
in
fstpt
into
xchg
cmp
adc
call
in
pop
inc
or
add
pop
mov
mov
scas
push
push
sarb
loopne
movsl
mov
jne
out
xchg
adc
add
adc
and
cld
in
test
daa
lods
out
sub
arpl
xchg
pop
iret
mov
out
xchg
jb
mov
mov
xor
cmpsl
rclb
test
aas
stos
inc
ret
sarl
or
push
xor
stos
xchg
mov
jno
mov
add
xchg
jne
popf
imul
mov
pop
pop
push
pop
imul
inc
jne
adc
jbe
mov
test
pusha
int3
mov
pushf
popf
sbb
dec
adc
pop
xchg
das
and
xor
std
push
mov
jae
pop
nop
push
push
sub
es
lods
xchg
mov
cmp
scas
test
dec
stos
insb
test
ret
je
add
outsb
push
enter
stos
es
dec
movsl
push
test
addr16
xor
or
daa
push
jnp
insl
lahf
jmp
lahf
std
test
mov
cmp
out
mov
int
inc
ror
iret
idivl
es
cmp
push
test
call
ja
push
xchg
iret
mov
and
fs
mov
sub
fstl
fildl
xchg
mov
mov
pushf
outsl
lahf
dec
pop
xchg
insb
push
push
iret
sarb
xor
pop
xchg
ja
addl
and
adc
fs
ds
adc
dec
pop
or
or
sub
mov
arpl
mov
shl
mov
push
dec
push
mov
jle
mov
and
xor
inc
sarb
testl
inc
dec
xchg
dec
jb
inc
testb
imul
mov
adc
jg
cs
imul
lret
lcall
mov
cwtl
test
sub
xor
sbb
mov
outsb
pop
pop
addr16
xor
lds
pop
lods
xchg
pusha
fsubrl
je
aaa
push
jecxz
adc
inc
inc
imul
pop
pop
cwtl
add
adc
xchg
in
test
inc
loopne
movsb
scas
enter
push
pop
test
or
xlat
cmp
mov
push
scas
jl
test
test
sub
jle
addb
rcrl
in
je
fmull
cwtl
jecxz
dec
int
xchg
movsl
dec
fists
xchg
mov
iret
mov
scas
mov
and
sub
mov
cltd
lret
jno
jno
or
int3
and
test
lahf
xor
scas
xchg
int3
arpl
mov
pop
fists
sub
movsb
bound
stos
cmc
xor
and
mov
add
sbb
dec
jl
dec
pop
adcb
int
fs
pop
loope
shlb
xchg
les
cmp
shr
adc
add
pop
sti
cs
data16
jns
test
dec
into
fidivl
lret
cmp
dec
mov
pop
sbb
jbe
ljmp
cmp
or
jno
push
mov
out
pushf
cmp
dec
jmp
xchg
adc
lock
jg
sahf
stos
xorb
pop
jmp
cmp
shrl
add
sub
fcmovbe
mov
add
call
in
cmc
lahf
inc
adc
xor
push
fsubrl
mov
loopw
or
and
leave
pusha
rcpps
pop
or
sbb
cmp
or
test
inc
out
movl
lods
add
sub
and
jmp
dec
adc
mov
push
loopne
pop
ds
lods
int3
enter
int
outsl
mov
sub
cmp
test
xchg
cmpsb
push
mov
xlat
cmp
iret
xor
fxch
push
pop
push
fsubl
cmpsl
sarl
mov
xchg
jle
mov
and
and
or
pushf
adc
fwait
iret
cli
xchg
xor
rcr
sbbb
test
shlb
xor
sbb
cs
sbb
sub
jl
std
inc
push
and
fwait
cmpsl
fisubrl
aad
movsb
dec
mov
xchg
push
pop
inc
cmp
stos
stos
add
inc
in
std
sar
movl
mov
sbb
mov
mov
icebp
sub
sti
fisubrs
int3
cmc
pop
icebp
stos
gs
hlt
pop
jne
add
mov
xchg
fstl
aas
push
sub
push
cmp
dec
popa
jo
ja
mov
fs
adc
fucomi
pop
pop
or
lret
nop
lea
push
ret
aaa
dec
lods
ficoml
xchg
hlt
xchg
add
outsl
inc
and
loope
sbb
jb
xchg
add
aas
pushf
pop
out
mov
aaa
test
sub
pop
mov
add
jmp
aaa
xlat
ljmp
es
cltd
jnp
sbb
adc
lcall
stc
xor
cwtl
dec
loop
imul
mov
stos
cmpsb
lods
les
cmp
dec
stc
mov
pop
jae
pop
xchg
push
sub
pushf
imul
ror
outsb
cltd
cmp
ret
mov
pcmpeqw
sbb
shll
insl
jg
in
sbb
cs
out
add
jmp
jb
outsl
xor
test
test
in
mov
or
cmpsl
or
ja
int
je
mov
xchg
inc
dec
push
fidivrs
ret
cmpb
dec
xchg
aad
or
in
or
jnp
popf
fsub
push
and
pop
jo
push
xchg
clc
xor
repnz
aaa
pop
test
dec
mov
sbb
lock
mov
push
enter
mov
mov
pop
mov
xor
xchg
xor
add
inc
addr16
gs
adc
repnz
sbb
inc
fucom
and
jb
push
mov
mov
les
aas
push
cmp
jb
stos
pop
cmp
push
push
mov
lock
lock
je
into
sub
ljmp
stos
sti
pop
push
xor
data16
lret
bnd
xor
xor
stc
ss
inc
lock
sub
pop
leave
xchg
dec
addr16
cs
loop
repz
push
sub
jae
in
cmp
out
or
pop
call
lds
push
hlt
outsl
lock
fwait
push
js
lods
lret
xor
push
sbb
lock
sbb
mov
xor
in
popf
gs
imul
sbb
and
xchg
and
aas
imull
pop
push
ficoms
mov
std
or
scas
movsl
cwtl
jns
cs
divb
cmpsb
call
aad
cmpsb
outsl
xchg
jbe
lods
push
or
mov
sbbb
addr16
pop
nop
add
bound
mov
and
jg
fcos
mov
sbb
ret
imul
mov
sbbb
pop
xchg
push
jmp
ret
dec
mov
shll
rcrl
subl
sub
add
push
test
mov
fnstcw
stos
fwait
mov
and
xchg
popa
imulb
dec
inc
in
stos
mov
push
xor
cltd
adc
fistl
ror
sbb
pop
fimuls
fwait
mov
incl
fs
test
mov
pushf
cmp
aam
out
jb
leave
mov
pop
push
adc
adc
push
lcall
out
jp
xchg
insl
and
xchg
loop
jl
out
dec
mov
inc
aaa
psubusb
addr16
inc
mov
popa
mov
dec
xchg
mov
cwtl
adc
xlat
and
mov
and
xchg
jg
ds
je
push
mov
or
icebp
mov
or
jmp
push
jb
sarb
fisttps
push
add
aas
lret
push
pushf
pop
gs
aad
loopne
mov
shl
fdivr
xor
mov
lea
pop
roll
sbb
or
dec
rcrl
aad
gs
cmpsl
in
adc
sbb
add
push
in
cwtl
push
mov
mov
push
or
je
shlb
sub
pop
push
jno
sti
jg
or
xor
dec
sbb
cmp
xlat
inc
nop
jnp
std
cltd
jmp
fbstp
mov
mov
fucom
adc
mov
mov
sbb
into
cmp
cmpsl
sbb
out
out
lods
imul
inc
ljmp
rcrl
fcomps
inc
mov
xchg
shlb
jo
stos
insb
aas
sbb
imulb
fidivrs
arpl
enter
int3
sbb
xor
rclb
ss
jge
pop
xor
lret
stc
enter
int
repz
jbe
pusha
shll
xchg
fwait
out
std
lcall
test
xor
dec
or
push
sub
in
or
dec
or
inc
lcall
sub
das
fcompl
sbb
add
or
in
pop
mov
push
cmp
xor
mov
movsb
sahf
inc
imull
xchg
push
mov
inc
sub
cmp
xchg
insb
scas
and
shll
scas
cmp
dec
imul
and
mov
jg
inc
int3
push
mov
lret
pop
movsl
loopne
addr16
pop
ss
mov
into
dec
negb
movsb
negb
and
daa
xchg
mov
mov
push
adc
push
add
mov
cmpsl
cmpsl
ja
icebp
fiaddl
lock
out
xchg
inc
cmp
lret
fwait
icebp
popa
scas
popa
and
cmpb
cmp
pop
fwait
mov
stc
repz
push
cmp
inc
mov
inc
xor
sub
mov
aaa
inc
leave
popl
mov
dec
pop
jmp
push
andl
sbb
call
dec
mov
rcl
push
xor
pushl
sbb
dec
clc
out
sbb
or
cmc
cmp
push
fsubr
movsb
cmc
pusha
lea
and
iret
ja
add
hlt
insb
aaa
or
push
ja
xor
jo
mov
fsts
cmp
jmp
sbb
aas
cmpsl
jmp
je
lret
mov
xchg
cmp
xor
pushf
cmp
sub
inc
xchg
add
sub
sub
in
mov
mov
mov
pop
mov
jg
xchg
js
sahf
push
push
cmp
mov
js
or
inc
mov
xor
fldcw
pusha
jecxz
out
mov
adc
add
push
loopne
repz
ljmp
cmp
cmp
lds
or
ds
pop
stos
lock
lock
loop
mov
int3
xchg
dec
jb
add
mov
add
cmpl
cs
out
into
push
cmp
loop
pop
ret
dec
pop
sub
mov
xor
push
cmp
cmc
out
mov
mov
sbb
cmp
sub
mov
sub
cli
scas
sub
pop
xchg
jmp
cmp
pop
call
arpl
and
jmp
xchg
lahf
aad
mov
xorl
orb
fs
jo
int3
shlb
mov
ret
xor
jmp
mov
ljmp
aad
xor
scas
das
xlat
aam
pop
mov
cmpsb
arpl
stos
and
in
addb
in
lcall
mov
out
mov
int3
mov
adc
and
js
xchg
push
sbb
and
sbb
jp
enter
jle
lret
pushl
repz
mov
sahf
insb
outsl
aas
sub
adc
movsb
fnsave
pop
pop
cld
int
jnp
je
jno
je
mov
sub
and
adc
inc
lds
into
push
and
pushf
and
push
iret
mov
nop
lcall
stc
pop
cmp
aam
mov
je
cs
push
out
fmul
or
xor
sbb
pop
int
idivb
jg
add
jo
xchg
or
enter
fisttpl
push
lcall
lods
xor
sub
scas
and
arpl
popa
xchg
out
mov
jecxz
inc
mov
dec
adcb
mov
push
mov
xchg
pusha
imul
dec
push
sbb
mov
scas
jns
lcall
lods
jmp
inc
inc
fwait
push
rol
xchg
push
xor
fwait
inc
sbb
mov
idivl
js
nop
mov
stc
mov
mov
ss
sbb
nop
sub
inc
jge
clc
popa
mov
rclb
jge
cmp
sbb
cwtl
clc
ficoms
dec
mov
mov
pop
sbb
xor
pop
push
push
dec
pop
inc
and
aas
cmpl
sub
stc
xor
outsb
repz
inc
mov
lcall
and
lret
nop
ja
loopne
movsb
xchg
mov
mov
lret
adc
pushf
xchg
gs
sub
lret
mov
xchg
pop
mov
mov
mov
loopne
stos
xchg
mov
pop
int
inc
jo
daa
aam
cmp
lock
cmp
lds
ret
dec
fbld
rorb
sbb
jmp
push
cltd
adc
int3
jmp
dec
or
mov
xor
data16
cli
add
outsb
ss
pop
mov
adc
stos
jns
fdivrs
out
imul
inc
pop
sub
jo
pop
mov
lea
push
push
icebp
push
shrl
xor
shll
in
add
cmpsb
jns
cmc
mov
and
dec
xchg
stos
outsb
push
rcll
sbb
mov
test
es
dec
cmp
loopne
les
sub
or
mov
shrl
add
pop
mov
push
xor
repz
and
lods
mov
shll
push
mov
sbb
in
aaa
add
sbb
stos
cmp
and
int3
and
jno
test
xchg
out
in
cmp
mov
or
lock
hlt
xchg
insb
call
push
rcl
mov
fisubrl
xchg
jnp
sub
xor
xor
movsl
test
ficompl
or
ss
mov
xor
outsb
in
add
ret
outsb
sbb
cmpsb
inc
mov
sbb
cmp
sub
xor
push
js
call
inc
mov
and
out
sbb
cmp
ror
xor
test
inc
ss
imul
int
pop
or
sahf
xchg
iret
lret
shrl
dec
cmpsl
in
test
xchg
pop
in
pop
xchg
xchg
arpl
popf
mov
fnsave
jae
call
std
int
test
adc
push
sub
lcall
lock
loopne
lods
sbb
mov
int
inc
jo
dec
dec
sub
in
mov
add
inc
mov
jg
cwtl
les
int3
add
push
jae
test
xor
outsl
mov
nop
jmp
pop
loope
sub
and
xor
and
jecxz
in
push
sub
jle
push
or
adcl
mov
cmp
out
push
aaa
xor
pop
mov
insb
sbb
and
mov
jo
shll
push
mov
dec
mov
ret
mov
lea
andb
inc
ror
js
ja
std
jnp
dec
xchg
jl
and
sbb
ds
sub
sub
dec
dec
and
sti
xchg
mov
mov
out
ljmp
lcall
ja
adc
push
xlat
test
imul
xchg
xchg
pop
rorb
pop
dec
pop
in
mov
cmpsb
loop,pn
jns
mov
shlb
aam
test
out
inc
imul
cmp
aam
push
mov
add
xchg
pop
dec
cltd
inc
data16
out
cmpsb
cmpsb
in
and
mov
adc
dec
fnsave
repz
insb
in
mov
insl
and
add
aad
push
sub
jae
les
scas
sbb
xchg
rclb
push
das
pop
test
xchg
aam
sbb
outsb
mov
push
dec
int
and
lcall
mov
popa
mov
out
pop
ret
inc
pushf
fidivrl
mov
dec
mov
leave
je
lcall
stc
bound
shlb
xorl
jecxz
cmp
mov
out
cmp
push
cmp
popa
add
xchg
movsl
fisttpl
lret
popa
aam
jo
mov
idivb
xor
shll
add
lods
xacquire
mov
in
jbe
jno
mov
adc
pop
daa
bound
movsl
adc
mov
fcoml
sbb
jns
sub
fildl
mov
outsl
loop
outsl
cmpsb
les
jg
jg
jb
test
popa
into
cli
xor
pop
popa
mov
xchg
cwtl
dec
dec
pop
pop
scas
mov
jecxz
dec
fnstenv
stc
int
xor
repnz
mov
cmp
cli
xor
orl
mov
sti
ficoms
sub
lods
xor
xor
ljmp
push
cmp
js
fadd
in
pop
push
decl
push
lods
inc
stc
sub
inc
aad
or
iret
lods
fildll
dec
cld
stos
xchg
pop
xchg
xchg
cwtl
lret
sub
cmpsl
xor
jb
xchg
pop
into
lea
cmc
repnz
push
jno
mov
imulb
mov
fidivrl
mov
out
pop
and
cmp
repnz
jecxz
mov
call
cmpsb
mov
cld
ret
inc
or
into
mov
mov
inc
sub
insl
jecxz
mov
ja
roll
and
lock
mov
mov
inc
mov
test
adc
sbb
dec
push
negl
into
ja
ud1
jae
dec
mov
in
imul
aam
lahf
push
test
and
cmp
dec
sbb
cwtl
outsl
and
pusha
movsl
mov
fldl
loop
cmpsb
loop
testb
pop
pop
lahf
xlat
jl
pop
inc
stc
jno
push
outsl
push
sub
push
add
jns
or
je
fwait
adc
inc
dec
and
xor
stos
mov
ja
xor
scas
cld
jmp
and
jl
mov
ss
sbbb
enter
lods
sbb
cmpsb
inc
rcll
adc
pop
xchg
jae
jp
lret
and
pop
or
shlb
pusha
xor
dec
stos
rclb
mov
dec
jge
inc
push
mov
jmp
ret
jmp
lds
mov
lret
mov
test
mov
imul
pushf
push
push
xor
mov
daa
pop
push
xor
pop
daa
dec
aaa
push
fwait
push
ret
int3
add
jb
daa
jo
mov
ja
pop
stos
jmp
data16
sbb
aam
mov
clc
inc
pop
inc
les
cmpsl
jnp
es
movsl
jecxz
ja
mov
add
inc
sub
pop
test
hlt
lea
ds
xchg
ljmp
sbbl
loop
inc
pop
and
adc
add
pop
mov
fsubrs
lods
scas
cld
or
jns
clc
or
pop
add
out
cmp
jb
cmp
jb
and
pop
scas
fstpl
test
sub
mov
fisttpl
mov
int
or
mov
flds
or
sub
cmc
aas
lods
movsb
xchg
push
int
pop
scas
or
mov
test
mov
test
inc
push
pop
sbb
dec
cmp
xchg
aad
movsl
cmp
mov
mov
or
cmpsl
sub
sub
sub
mov
cltd
jae
daa
mov
xlat
repnz
es
iret
mov
mov
pop
jge
jecxz
mov
and
lret
fisubrs
cli
xor
call
jae
xchg
pusha
jp
adc
inc
lds
test
dec
jns
dec
push
push
push
pop
cmc
lcall
imul
rcr
or
xor
popf
mov
inc
mov
bnd
fcoms
push
or
sub
hlt
lock
mov
cmpsl
insl
cmove
fisttpll
mov
aas
pusha
sbb
jp
xor
sub
jmp
dec
mov
sub
inc
sbb
xor
or
push
out
push
cmp
jp
jge
xor
jmp
dec
icebp
or
push
repnz
push
loope
fst
testl
mov
movsl
push
and
cwtl
jle
lods
pop
movsb
in
mov
insb
orb
fdivs
mov
xchg
stos
ja
mov
ss
pop
aad
cmp
mov
popa
mov
outsl
sbb
aam
add
cs
jecxz
xchg
std
imul
imulb
add
daa
pop
jo
xor
in
push
das
add
or
jbe
mov
and
push
daa
cmpsl
mov
mov
push
cltd
dec
dec
and
testb
arpl
xor
addr16
push
xchg
jp
cwtl
fmuls
jbe
loopne
cmpsl
lea
sub
push
jnp
jns
pop
imul
aas
nop
inc
cld
mov
push
lret
mov
jnp
jbe
push
data16
jne
push
mov
sarl
imul
jp
sbb
sahf
in
inc
subl
dec
sbb
es
mov
and
shrl
cs
sub
and
out
imul
iret
test
lahf
das
and
mov
xlat
clc
jmp
sub
mov
inc
push
mov
and
rorl
aas
sub
or
popf
fldl
aas
xor
add
fistpll
gs
insl
xor
ds
mov
cmc
dec
mov
pushf
movsl
sub
mov
jno
shll
cmp
cwtl
stos
add
mov
mov
sahf
fildll
call
out
pop
es
repnz
movsl
lock
shrl
or
sbb
or
pop
hlt
jnp
inc
jg
dec
ret
xchg
xchg
fists
inc
jge
pop
mov
enter
pop
jnp
lods
andb
les
pop
cmp
cmp
mov
aas
and
dec
push
idivl
and
or
inc
sub
movsb
push
sti
outsl
fistpl
cwtl
cld
js
roll
divl
sub
orb
sub
jno
call
sub
mov
xchg
push
imul
call
out
ror
imul
movsb
dec
sbbl
sbb
movsb
adc
xor
xchg
imul
int3
xchg
add
push
mov
xchg
jns
stos
push
sub
mov
fisttpl
jl
and
lds
repz
push
jno
fucomip
ss
inc
movsb
rcrl
jns
shr
pop
fsubs
adc
mov
cmp
push
xor
mov
adc
push
sub
sbb
mov
adc
cmp
js
mov
xor
push
or
cmp
insl
ret
aas
shr
adc
cmpsb
dec
pop
mov
imul
sub
cmpsl
nop
insl
sub
mov
aam
mov
add
xor
adc
dec
and
movsb
mov
mov
jle
dec
sbb
mov
adc
hlt
jb
dec
lret
enter
test
ret
shll
ljmp
xchg
dec
add
cmp
repz
fcoms
jns
enter
adc
repnz
mov
out
cmp
xor
and
mov
and
aad
inc
adc
fs
jno
sbb
pop
sti
popa
dec
lods
sbb
cwtl
push
xor
xchg
and
jae
and
fcoms
pop
sbbb
stc
test
arpl
xchg
aad
xor
sbb
sbb
and
fwait
mov
loope
mov
imul
lret
push
lods
push
inc
or
jnp
jbe
jo
icebp
push
pop
cmpsl
inc
push
and
sahf
and
mov
movnti
xchg
test
xchg
cld
dec
jbe
hlt
add
rorl
mov
xor
lock
sub
xor
mov
call
and
pusha
inc
adc
ja
movsb
xor
fbld
inc
and
scas
fsub
pop
sbb
or
sbb
pop
sahf
mov
adc
mov
cmpl
dec
xor
inc
adc
xor
daa
dec
sbb
js
insb
mov
add
push
outsl
aas
sahf
arpl
aam
leave
les
xchg
xchg
xlat
aas
dec
xor
les
fbstp
mov
popa
add
inc
jp
daa
mov
or
jbe
aas
push
mov
shll
inc
cmp
call
sub
dec
inc
fwait
leave
arpl
pop
es
bound
adc
fnsave
xlat
lcall
push
mov
gs
loope
mov
xchg
pusha
fnstenv
pop
clc
inc
xor
test
hlt
cmp
xor
rcrb
into
divb
pop
addb
cld
sti
icebp
push
aam
xor
pusha
int3
rclb
xor
addr16
mov
sub
and
test
dec
insl
scas
dec
xor
mov
decl
push
leave
stos
push
add
packssdw
mov
mov
mov
mov
push
nop
sub
push
cmp
sub
mov
add
cmp
out
sbb
add
cmp
sub
pop
xchg
pop
add
mov
scas
pop
lods
pusha
and
fadds
pop
sub
push
mov
push
out
arpl
scas
mov
and
or
into
adc
mov
rcrl
dec
gs
fadd
or
push
and
or
iret
mov
mov
cmpsb
enter
arpl
ret
mov
push
ja
in
aas
jns
loope
dec
dec
and
sbb
pop
jge
push
addb
in
lret
cmp
push
notb
pop
sbb
dec
push
lret
leave
sbb
or
pop
dec
adc
xor
adc
jo
sbb
mov
dec
mov
add
sub
loopne
outsl
adc
and
inc
dec
or
push
clts
jge
bound
lock
mov
scas
add
ljmp
push
arpl
into
xor
imul
out
scas
sbb
cmp
out
lcall
push
dec
mov
sbb
fnstcw
ret
in
cld
ret
orl
add
loopne
icebp
mov
dec
jg
loop
inc
out
add
int3
sbb
cmp
jle
mov
daa
inc
cmpsb
push
push
sub
fstpl
add
hlt
or
lods
out
gs
scas
outsb
cmp
arpl
sbb
adc
add
push
and
push
in
xchg
adc
mov
inc
popa
and
mov
fwait
lahf
lods
inc
inc
xor
lea
lahf
int
test
dec
sbb
push
cmp
stc
sub
sbb
fldcw
jnp
shlb
cmp
push
das
mov
mov
xor
jnp
xor
push
std
inc
aaa
testl
jp
mov
sbb
pop
mov
pop
inc
inc
test
inc
mov
mov
and
fildll
aam
xorb
sbb
stc
jae
pop
sub
sbb
inc
lods
negl
outsb
iret
int3
inc
lock
rorb
sbbb
test
xchg
cmp
mov
xchg
call
jnp
test
mov
push
aad
inc
fwait
mov
push
xchg
mov
mov
or
mov
adc
xlat
pusha
js
das
ljmp
sub
icebp
jge
sbb
mov
in
push
sub
out
scas
mov
xchg
into
inc
ret
jno
insb
and
mov
xor
mov
xchg
mov
adc
test
pop
lods
mov
adc
mov
jae
mov
dec
dec
add
scas
lods
movsl
es
stc
lahf
mov
in
js
into
inc
mov
and
punpckhbw
xchg
inc
mov
addr16
scas
jp
xchg
rorb
xor
aad
int3
frstor
movsl
pop
stos
ss
mov
pop
bswap
xor
lahf
bound
cmp
cmp
or
inc
cld
jb
adc
neg
je
insb
lods
mov
cmp
sub
jae
sti
cmp
daa
and
lods
arpl
mov
in
xchg
pushl
adc
jmp
push
mov
mov
adc
mov
jnp
fcompl
cmc
fwait
lds
pop
popa
mov
sbb
scas
mov
pop
stc
pushf
lahf
je
mov
pop
pusha
aaa
cmc
outsb
sti
aam
imul
add
iret
lret
jns
ja
subl
pop
rcrb
mov
nop
outsb
xchg
jle
mov
cmp
push
xor
test
pushf
rol
jbe
cltd
mov
daa
sbb
sar
xchg
pop
bound
mov
jno
iret
inc
in
xor
cltd
pop
adc
add
scas
pushf
rorb
call
sub
insl
or
xchg
outsb
sub
je
mov
sbb
lods
push
lcall
test
out
repz
sub
push
rcrl
loopne
inc
popa
mov
lds
adc
jmp
mov
mov
fwait
push
arpl
into
test
popf
mov
lds
sbb
sbb
aas
sbb
aaa
mulb
sbb
sub
fcmovnb
fld
cmp
inc
or
lcall
mov
mov
outsl
mov
push
push
test
inc
mov
or
fcomi
sub
fistps
mov
cmc
sbb
cs
pusha
movsl
das
xchg
add
push
pop
xchg
sub
xchg
jle
or
shll
push
mov
jecxz
add
pop
mov
in
stos
cmp
lcall
fists
fistpl
mov
push
sti
cmp
insb
out
push
lcall
arpl
inc
push
sbb
inc
fucomi
test
sbb
mov
sbb
pop
cmpsl
in
out
rol
lock
xchg
rcrb
ljmp
iret
sub
ret
xchg
mov
push
leave
cmp
sbb
mov
mov
das
adc
mov
lods
sbb
lock
inc
add
adc
je
add
pushf
icebp
xor
std
in
push
je
push
shl
cmp
rorb
jne
imul
movswl
ret
ret
jns
add
mov
mov
or
and
cld
push
popf
mov
inc
jl
sbb
insb
int
push
add
ret
push
addr16
mov
js
inc
and
and
jmp
addr16
jmp
in
jnp
mov
arpl
in
cmp
lock
push
rorb
in
dec
subb
mov
push
mov
call
push
xchg
int
in
aam
in
xchg
pop
addr16
jl
dec
pushf
push
mov
mov
mov
fmuls
and
shlb
cmp
ret
inc
mov
outsb
lock
fdivrl
out
jp
dec
xchg
push
repnz
outsl
push
lcall
addr16
fbld
dec
xorb
xchg
pop
pop
scas
test
dec
jno
mov
out
scas
fmuls
push
cmp
mov
xchg
popf
pop
fisubl
or
inc
jl
outsb
es
call
jecxz
leave
push
test
icebp
out
call
pop
dec
push
imul
cmp
or
popl
jle
sub
mulb
pushf
mov
cmp
scas
xchg
pop
loopne
inc
or
movsb
xchg
jne
cld
push
aad
xor
xor
sub
callw
or
test
test
hlt
sbbl
lret
push
movsl
and
cmpsb
sbb
xchg
push
bound
pop
sub
in
ficomps
pop
sarl
dec
jns
enter
sbb
insb
outsb
in
loopne
leave
fnstsw
pop
rorb
inc
jp
repnz
ja
or
pop
aam
mov
fbstp
cli
mov
mov
or
std
fbstp
cmp
sbb
cmp
dec
out
popa
hlt
in
loop
leave
out
int
in
xchg
jg
sub
lcall
pop
mov
ds
add
andl
test
fimull
ret
hlt
std
gs
adc
mov
cli
pop
dec
call
pop
popa
xor
jmp
mov
dec
iret
cmpb
jnp
and
packuswb
sub
fistps
fmul
cmp
sti
insb
scas
mov
and
push
inc
mov
shll
out
icebp
sbb
sbb
outsl
leave
mov
inc
push
in
jbe
into
mov
pop
popa
insb
mov
dec
add
mov
dec
mov
loop
dec
xchg
mov
pop
dec
sbb
xchg
cmp
sub
jb
cmc
imul
pop
push
daa
xchg
sbb
out
jne
sahf
je
mov
mov
mov
lahf
cs
outsb
xchg
xor
out
mov
loop
adc
xchg
dec
fstpl
sbb
test
inc
aaa
pop
out
int
sarl
xchg
pop
dec
adc
fsincos
jns
adc
cli
push
movsb
mov
fwait
xchg
add
ja
lret
addl
fs
inc
decl
sbb
and
cmp
sbb
sar
ds
int3
mov
in
adc
xchg
clc
cmp
js
dec
sbb
jb
lahf
cmpsl
sahf
adc
lock
sbb
cmp
mov
pushf
pushf
call
ds
addb
dec
rcll
repnz
icebp
mov
jle
out
mov
xchg
popa
pop
and
test
pop
movsb
mov
mov
dec
sub
cmpsb
pop
loopne
fwait
sub
mov
je
icebp
xchg
mov
dec
out
pusha
fidivrs
ja
sbbb
fstpt
push
loop
jg
pushf
jecxz
add
push
in
out
shlb
and
scas
and
dec
daa
inc
fwait
bound
cld
mov
mov
xchg
pusha
and
mov
ret
mov
jb
inc
dec
mov
sti
sbb
adc
push
mov
or
jno
pop
or
in
push
jns
fs
dec
xor
movsl
test
xlat
scas
sub
and
xor
stos
inc
and
adc
icebp
cmp
insb
mov
jmp
pop
into
adc
mov
cld
mov
outsl
mov
ret
leave
in
cmp
sbb
jb
int
push
dec
pop
cltd
xchg
sbb
shrl
lret
sub
cld
sbb
mov
out
mov
out
les
mov
or
out
jo
mov
jge
cmp
in
adc
jl
xchg
adc
clc
inc
xor
sub
and
lret
adc
push
xchg
add
dec
int3
jbe
add
jae
subl
sbb
or
decl
mov
outsl
ss
dec
inc
cmp
ja
mov
ret
mov
or
mov
lea
loopne
add
mov
test
out
add
push
mov
loopw
repz
cltd
or
pop
xor
sbb
sbb
mov
ret
sbb
dec
mov
outsb
and
inc
pop
xchg
repz
mov
cs
jne
cmpl
add
jne
je
lds
stc
fcmove
data16
int
clc
sbb
mov
push
pop
rep
push
adc
jl
ret
dec
dec
repnz
dec
xchg
or
sbb
sub
mov
add
xchg
add
adc
rorl
push
mov
pop
lods
jle
dec
or
adc
fdivrl
xor
adcl
mov
pop
mov
movl
ret
jo
or
xchg
adc
into
lea
sub
repz
xchg
test
sub
fisubrs
cmp
mov
pop
cmp
aaa
lods
or
outsb
mov
test
cli
inc
prefetcht2
leave
std
in
rol
pop
dec
or
adc
ret
or
mov
and
mov
jg
fstps
adc
in
cmpsb
inc
pop
push
mov
jg
testl
mov
and
je
ret
pop
popa
cmpsl
xorl
mov
or
and
ss
test
sbb
sub
xorl
push
sub
dec
aam
popf
cmp
int3
or
cld
inc
mov
testl
gs
les
dec
push
loope
addb
mov
xchg
test
mov
mov
xchg
js
sahf
callw
pop
push
xor
mov
jle
in
in
jmp
dec
iret
cmc
outsl
rorb
loopne
pop
cmp
int
xor
das
loope
mov
movsl
ss
into
xor
int
pop
jbe
fimull
insl
pushf
mov
cltd
jbe
sbb
mov
scas
outsl
out
xchg
mov
jle
int3
push
daa
and
movl
insl
daa
xlat
cmp
or
stc
jno
pop
jns
pop
lret
inc
mov
gs
outsl
dec
mov
xor
sbb
loope
push
fildll
rorb
movsl
cmp
enter
arpl
test
or
fiaddl
outsl
adc
cmp
cltd
cmp
sbb
out
pop
mov
outsb
es
inc
and
cmp
sbbb
loop
jno
movsb
fldl
xor
ret
mov
test
pop
adc
repnz
adc
and
add
repnz
gs
add
inc
rcll
je
cmc
jbe
ret
xchg
rcrl
les
ficomps
mov
dec
push
int
push
sub
sub
mov
jge
push
sbb
test
lock
ds
test
mov
adc
mov
shll
push
out
xchg
jecxz
js
pop
insb
sub
xor
fdivr
adc
mov
popl
jle
mov
clc
notb
test
ds
pop
xor
int
add
inc
pop
sbb
adc
mov
popf
sarl
fistpl
adc
pop
stc
adc
notl
push
push
lret
in
mov
popf
cmpsl
lods
and
cmc
push
add
adc
scas
and
fsubl
insl
in
sub
pop
mov
add
push
repnz
cld
lret
adc
inc
inc
sti
fcompl
push
jb
adcl
pop
add
and
aam
dec
in
push
push
xchg
and
or
lret
jb
pop
enter
xor
scas
push
adc
shlb
xlat
jo
jp
sub
xchg
call
stos
jmp
xchg
pop
fidivrl
sub
push
mov
mov
mov
rol
lcall
jmp
loopne
add
xor
mov
lret
cmpsl
lods
pop
and
add
pop
xlat
xchg
xor
jge
pop
sahf
shlb
sub
sub
cwtl
mov
ss
dec
push
adc
mov
nop
ds
pop
ss
addb
push
jle
bound
fwait
pop
les
cmp
mov
adcl
inc
in
sub
or
stos
inc
add
or
clc
jecxz
lret
add
adc
addr16
pusha
in
imul
jp
inc
or
fcoms
cmp
js
aad
in
mov
cmp
pop
sub
ficoml
pop
push
add
int3
pop
es
xor
dec
leave
or
sbb
or
popa
adc
cld
movsb
mov
xor
and
dec
pop
cmpsb
xor
out
lret
mov
stc
cmpsl
and
in
sub
sub
repz
push
test
out
jl
mov
dec
out
imul
inc
mov
es
pop
pop
movb
out
ja
into
fwait
push
pusha
sti
notb
or
ljmp
loopne
jmp
sbb
mov
mov
aam
lahf
outsl
mov
testb
repnz
pop
into
adc
pop
into
xchg
ss
mov
insb
add
push
aas
popf
rolb
cltd
xlat
hlt
cs
test
jns
mov
stos
add
jbe
aaa
test
or
ds
mov
and
jl
inc
mov
inc
jb
insb
dec
sarl
ss
adcb
dec
loope
icebp
jb
insl
loopne
push
dec
push
aaa
loope
mov
cld
xchg
xchg
inc
loop
sbb
int
lods
ret
aaa
dec
es
popa
inc
and
adcl
outsl
add
fcmovne
aam
inc
fstpt
das
mov
mov
repnz
jnp
add
push
hlt
cmp
jmp
outsl
pop
mul
mov
loop
push
adc
xor
cmp
mov
sub
pop
std
in
jle
xor
push
inc
cmp
jne
cmc
insb
or
sbb
movsb
pushf
pusha
andl
mov
fmull
lods
push
popa
sbb
cmpsl
push
arpl
mov
data16
ret
insl
js
jg
xor
mov
dec
ror
int
scas
or
je
mov
adc
pop
jp
mov
xor
or
rcll
pop
jb
jg
insb
ja
mov
sbbl
dec
in
cmc
and
fwait
xchg
mov
jns
push
xor
and
lds
pop
fldcw
es
ret
in
mov
mov
push
ss
pusha
sbbb
popa
lock
loop
push
movl
cld
jo
jmp
adc
inc
adc
mov
in
sub
jbe
stos
or
jmp
frstor
inc
jo
iret
imul
jmp
lret
cmc
out
and
lret
scas
pop
scas
mov
out
aas
ret
pop
lock
pop
bound
cmp
and
sbb
or
adcb
insl
xor
sbb
push
xchg
ret
cs
out
jl
sahf
dec
loopne
out
push
jno
outsb
sub
add
mov
dec
mov
pop
fwait
gs
pop
js
pop
data16
daa
jne
push
test
mov
xchg
sub
mov
cs
sahf
ds
mov
sbb
in
pop
dec
adc
mov
dec
push
sub
dec
lret
add
xor
into
pop
fs
bound
xor
cld
daa
adc
cli
mov
mov
pop
pop
xchg
jbe
arpl
lahf
jge
mov
arpl
pop
mov
roll
pusha
rolb
pusha
pmaxsw
insb
sti
daa
gs
call
insb
xchg
nop
cwtl
shlb
push
push
mov
bound
scas
adc
imul
aas
or
lock
dec
mov
adcl
jp
jo
stc
mov
mov
mov
sar
push
into
cmp
dec
ret
fldl
into
mov
xchg
aas
hlt
mov
push
mov
sbb
sub
sbb
adcl
loope
dec
test
test
arpl
out
add
mov
or
adc
jecxz
push
call
dec
mov
in
sarb
mov
adc
jge
out
aaa
xchg
in
das
jl
scas
jg
stos
arpl
sub
inc
add
mov
push
in
sbb
addr16
adc
lcall
inc
call
imul
imull
stc
dec
sahf
add
mov
fldl
sub
sub
cmp
and
lds
push
xchg
fmulp
push
mov
push
xchg
mov
mov
pop
lods
fidivrs
inc
arpl
mov
or
fcomip
daa
pushf
loopne
dec
xor
xchg
movsl
sub
pusha
into
jno
jmp
popf
outsb
and
xor
push
mov
sbb
sar
dec
add
cmp
popa
sub
movsl
dec
mov
jp
popa
test
loop
ficoms
mov
shr
and
pop
in
movsl
leave
das
pusha
clc
aad
ds
push
xchg
dec
hlt
sub
shlb
jns
in
pop
and
sbb
loopne
and
ljmp
mov
xor
mov
es
jae
dec
into
lods
push
and
imulb
mov
sbb
mov
mov
lret
cwtl
ret
mov
je
ljmp
push
popf
fildll
pop
clc
cmp
jecxz
pop
leave
mov
iret
fldl
and
repnz
add
sub
adc
popf
lds
fucomp
sahf
adc
int3
lods
nop
xor
mov
jg
sub
jp
xor
in
fisttpl
lds
lds
cmc
pop
jmp
je
sbb
gs
cmc
cmpsl
and
sub
loop,pt
outsl
pop
xchg
sub
xchg
push
hlt
imul
cmpsl
fwait
mov
loope
cmp
fidivs
fidivrs
lods
jmp
mov
pop
int3
xlat
loop
mov
xor
fimull
cmp
sbbb
add
imul
mov
rolb
cmpsl
sbbb
icebp
ret
sbb
pushf
repz
dec
xchg
add
iret
mov
insl
pop
es
out
lret
pop
icebp
xchg
push
arpl
in
gs
roll
les
test
adc
insb
or
push
sbb
test
hlt
iret
js
adc
add
mov
daa
lahf
dec
add
ret
mov
sbb
iret
imul
xor
jl
push
hlt
sarl
inc
xor
stc
call
in
out
mov
das
shll
dec
mov
test
fcompl
ss
dec
inc
pop
jb
push
andb
repnz
jnp
push
nop
in
inc
dec
mov
shl
dec
daa
movsb
cmc
push
and
push
inc
notl
pop
jmp
hlt
and
es
xor
adc
mov
roll
push
clc
jg
or
xchg
mov
sub
adc
out
mov
xchg
gs
int3
imulb
int3
pop
dec
adc
ss
psrlw
in
and
and
test
sbb
loop
popa
mov
jnp
xor
out
push
cmp
dec
addr16
subl
mov
lods
addr16
mov
loope
out
jo
jae
mov
clc
cmp
mov
jmp
jl
aam
pop
and
iret
js
add
cmpsb
push
sbb
cs
mov
call
cs
mov
xor
xchg
ret
sbb
fnstsw
jmp
inc
jmp
data16
mov
or
imul
pop
fisubl
jmp
bound
xor
or
out
or
mov
inc
pop
icebp
ret
xor
movsb
inc
sub
and
lahf
dec
addr16
call
inc
jmp
xchg
mov
sub
int
fldt
lds
and
push
fnstcw
enter
mov
sbb
xor
lds
jae
test
call
pop
mov
imul
mov
and
pop
bound
arpl
cwtl
add
cltd
mov
stc
in
pop
push
jns
mov
rclb
testl
inc
mov
sbb
je
inc
mov
enter
inc
sbb
arpl
sbb
aaa
in
cltd
and
xchg
mov
fbstp
push
mov
idivl
das
jo
lods
scas
fcoml
mov
fldl2t
cmpl
pusha
xor
mov
jge
cmp
in
test
jnp
push
insl
xchg
xor
push
dec
rcr
mov
jne
sti
mov
lods
aam
data16
insb
lcall
int
mov
inc
iret
and
jbe
mov
mov
stc
mov
adc
rolb
jmp
xor
out
clc
filds
fadds
jp
lret
int3
jae
push
mov
insb
pop
les
mov
gs
mov
cmp
pushf
jb
shr
push
or
stos
xor
mov
and
sub
xor
inc
jecxz
gs
adc
ja
xor
cmp
cmp
cltd
clc
andb
or
pop
out
cwtl
mov
sbb
inc
fwait
sub
xor
dec
imul
movsb
push
sub
sbb
ret
ljmp
test
insl
into
nop
push
inc
ds
lret
std
adc
push
out
mov
repnz
jo
negb
push
cld
push
cli
mov
aaa
dec
test
les
addr16
cmp
mov
adc
sti
inc
and
xchg
mov
loopnew
enter
lods
pusha
andl
in
xchg
adcl
ror
mov
adc
cmp
dec
cmp
fcmovne
mov
inc
xchg
idivb
mov
mov
sub
mov
jbe
add
lods
mov
clc
in
push
push
add
push
fimull
jl
sub
and
lret
das
and
push
stos
mov
rcrb
mov
out
fnsave
mov
sub
flds
in
and
ljmp
cmpsl
and
xchg
cmp
scas
out
jbe
fcmovnbe
xor
cmp
insb
adc
out
dec
sbb
daa
insb
push
sti
push
fiadds
testb
jecxz
sub
test
mov
fwait
xchg
dec
aaa
pop
xorl
scas
or
les
cwtl
xchg
std
add
pushf
mov
gs
xor
jg
jns
pop
adc
dec
mov
imul
cli
dec
out
add
xor
adc
xor
cwtl
int
pop
push
mov
pop
sub
test
push
add
cs
cwtl
mov
add
mov
push
outsl
or
sbb
sbb
ret
inc
add
fnsave
clc
xchg
push
jl
and
int
inc
mov
cmp
testb
orb
mov
cmp
mov
add
push
shll
loop
dec
into
mov
mov
fnstcw
daa
mov
push
or
inc
lods
xorb
xchg
push
mov
jle
xor
out
pop
mov
jbe
pop
das
lea
lret
xchg
push
mov
and
nop
rcr
dec
and
mov
mov
adc
fisttpll
mov
test
cs
pop
push
xchg
cs
and
xchg
cltd
push
aad
cmpsb
xor
xor
dec
cmpsl
xor
popa
cmp
xchg
out
push
hlt
push
testb
inc
sub
test
sbb
jmp
arpl
mov
xchg
scas
push
or
lcall
loopne
int
push
mov
je
lret
pop
jg
dec
mov
sbb
test
aaa
sarl
jp
lret
jb
add
fucomi
int3
mov
push
mov
push
push
pushf
jge
in
mov
cwtl
repz
repnz
mov
call
movnti
test
sub
jecxz
or
inc
movsb
mov
or
test
xchg
mov
cmp
dec
dec
jne
pop
or
fsubs
cld
mov
xchg
adc
mov
mov
stos
ljmp
aas
aas
iret
jno
or
das
jo
roll
outsb
cmpsb
data16
inc
xchg
sbb
jns
mov
sub
sub
sti
cmc
clc
mov
mov
adc
sub
push
pop
scas
cmp
fnsave
adc
or
push
or
in
mov
mov
push
and
clc
inc
js
adc
aaa
cmp
repz
popf
add
pop
dec
jecxz
xchg
dec
rorb
ret
pushf
jno
pushf
cmp
test
fs
jae
cmp
dec
jae
popf
testb
insb
and
insb
dec
adcl
aad
loopne
flds
lods
sbb
xchg
cmpsl
mov
out
fnstsw
rcr
or
sub
or
aam
adc
mov
sahf
aas
jl
clc
roll
mov
add
pop
jns
outsb
push
dec
inc
test
push
icebp
xor
add
xchg
test
jecxz
cmpsb
xchg
xlat
gs
mov
es
lret
mov
loopne
sub
mov
xchg
cmpsl
movsb
xchg
mov
mov
nop
sti
sbb
xchg
xor
pop
jnp
fcmove
inc
aas
das
pushf
cwtl
daa
cmpsb
outsb
dec
xor
and
sub
out
add
bound
xchg
shlb
jg
mov
jno
lds
stc
lcall
cmp
mov
adc
xchg
mov
push
shrb
sbb
mov
jp
mov
test
push
xchg
cmp
and
lods
orb
mov
pop
mov
test
roll
add
outsl
ret
cmp
pop
icebp
or
push
mov
aad
xor
add
ss
pop
lock
mov
jno
mov
jo
mov
sbb
xchg
jbe
sbb
outsl
lret
ret
cmc
push
aad
fnstenv
push
pop
add
inc
testl
ss
loope
and
cmc
cmp
leave
testl
jl
ljmp
mov
stos
orb
sub
cmpsl
mov
pop
cmp
dec
sbb
cmp
mov
add
xchg
mov
lcall
cmp
addr16
fcmovnb
insb
int3
cwtl
push
mov
jns
sbb
mov
jb
imul
push
dec
mov
aas
fxtract
mov
mov
nop
xor
xchg
ljmp
adc
mov
je
lret
in
arpl
in
inc
pop
enter
adc
mov
xchg
mov
pop
test
mov
push
pop
call
iret
fwait
jmp
push
sbb
mov
xlat
cs
dec
xchg
jae
negl
into
cli
xchg
dec
xchg
xchg
xchg
dec
pop
jnp
sub
imul
sbb
or
aad
mov
lahf
push
fildl
sbb
ja
mov
js
stos
into
aaa
xor
lahf
push
loop
pusha
sub
fwait
rcll
cmp
sub
aaa
loop
xor
out
xor
repz
jnp
push
sub
cmp
cmc
xor
jg
inc
mov
icebp
xchg
es
or
pop
mov
push
jnp
pop
leave
aam
lahf
les
add
mov
cmpsb
inc
or
xchg
call
cmc
lahf
mov
xchg
ss
mov
dec
sbb
hlt
add
daa
cmp
ret
mov
sbb
push
and
jae
and
jae
iret
adc
xchg
loopne
addr16
or
iret
or
or
sub
mov
fwait
sub
mov
xor
sbb
jne
stos
pusha
cmc
cs
sbb
pop
movsb
mov
pop
aam
cli
insl
xchg
rolb
in
jns
test
stos
es
std
or
cld
testb
test
mov
xchg
mov
xlat
js
mov
mov
sahf
fs
xlat
shll
mov
pop
dec
jecxz
fdivrs
and
cwtl
inc
js
pop
sbb
in
data16
ret
sahf
or
or
rorl
and
pop
fidivl
pop
out
in
add
push
stc
cli
out
xor
lcall
lret
fsubrs
daa
aad
cwtl
jle
xor
mov
arpl
push
jns
out
add
clc
test
divl
mov
out
add
dec
mov
pop
and
mov
pop
add
sbb
and
add
test
imul
jg
bound
mov
jl
pop
into
icebp
dec
dec
sbb
mov
outsb
cmc
dec
ret
aaa
imul
lcall
leave
and
inc
pop
leave
xor
stos
ja
out
mov
push
cld
xor
push
adc
filds
sti
adc
notl
xchg
mov
add
mov
lods
aas
dec
rorl
in
push
or
fisubs
fcoml
cmpb
scas
push
push
icebp
fistl
test
mov
notl
inc
scas
inc
dec
iret
mov
jne
sub
fs
int3
sub
fxtract
dec
jecxz
lret
or
mov
or
test
xchg
add
or
lods
jae
call
sbb
roll
sarb
stos
jl
fnstcw
sub
pop
xor
and
pop
xor
adc
in
je
icebp
enter
jns
cmpsl
out
shlb
push
sub
lods
neg
lods
cmp
aaa
mul
dec
and
cs
push
js
incl
dec
cmp
push
insb
pushf
mov
rclb
inc
inc
pop
jge
ror
inc
mov
leave
stc
fucomi
arpl
int3
pusha
cmp
pop
sbb
cmp
hlt
fsts
repz
jnp
fcoms
stos
push
nop
cltd
push
adc
jb
cwtl
cmp
mov
rcrb
and
sbb
stos
add
inc
cmp
sub
stc
adc
jne
cli
mov
push
push
out
jle
sbb
test
cmp
mov
leave
push
mov
jmp
push
ret
dec
out
fs
call
push
sbb
inc
bound
adc
pop
repnz
mov
cmp
mov
add
popa
mov
inc
jecxz
ds
mov
pop
and
in
stos
repz
call
lcall
xchg
aam
cld
rolb
movsl
enter
lods
pop
mov
addr16
mov
inc
in
cli
mov
adc
bts
xchg
cld
popa
les
fwait
jge
orl
jo
lahf
fadds
gs
sbb
jbe
loop
mov
inc
cmp
jns
int3
mov
inc
shlb
jp
jmp
test
mov
and
out
mov
fisttpl
imul
scas
ficoml
cmp
shll
mov
inc
out
and
mov
sub
ja
inc
mov
xchg
inc
cmp
leave
pop
rcll
xchg
xor
movsl
push
mov
data16
inc
jns
rorb
adc
fwait
aas
cmp
dec
xor
push
sub
je
in
data16
inc
jae
jnp
movsb
clc
xor
pushf
out
add
les
pop
hlt
sbb
lods
sbb
mov
shrl
stos
mov
cmp
cmp
sub
shr
mov
ss
mov
xor
dec
cmp
das
aad
mov
mov
fwait
xor
adc
xor
out
mov
shlb
sub
shlb
sarb
fwait
push
push
outsb
rcrb
cmpsl
bound
rorb
fidivs
mov
repnz
das
sahf
out
push
push
ret
ljmp
rcr
cld
mov
ja
xchg
dec
sub
insw
jnp
pop
pop
insl
dec
xchg
dec
daa
clc
aaa
cmc
xor
sbb
jae
adc
outsl
inc
movsb
inc
int
jne
lret
shrl
jnp
movsb
testl
ja
fndisi(8087
sbb
int3
mov
xchg
mov
aaa
mov
in
and
out
sub
insl
mov
pushf
rorl
data16
add
jmp
adcb
bound
outsb
dec
push
xor
icebp
ss
lods
adc
les
adc
add
push
sub
pop
xchg
lret
lahf
fwait
inc
mov
jbe
lods
mov
mov
push
movsl
filds
xchg
stc
insl
lds
inc
insb
rorl
rclb
add
sbb
pop
addr16
add
fstpt
fimuls
mov
fimull
cltd
out
xchg
cmp
and
add
js
push
or
flds
sub
mov
sub
mov
add
adc
les
int
push
jne
mov
leave
incb
cmc
ret
lock
adc
sub
add
mov
loopne
imul
inc
jo
mov
xor
jecxz
in
mov
insl
ss
out
in
orb
fisubrl
push
outsl
or
pop
addr16
gs
pop
dec
dec
cmc
sub
movsl
inc
cmpsb
lds
push
inc
jbe
dec
adc
nop
and
fstl
sbb
mov
sarb
arpl
mov
cmpsb
and
push
pop
xchg
or
jmp
adc
mov
mov
es
ret
add
push
test
cmp
cld
aad
ds
and
mov
insb
jge
jne
int
cmp
cld
sub
cltd
sbb
xor
jbe
std
popa
into
ss
sub
sti
cs
push
mov
movsl
adc
dec
cmpsl
sbbb
stc
sbbb
pop
inc
and
sub
fs
pushf
or
imul
loop
movsl
xor
dec
cltd
stos
rolb
pop
jg
sub
sub
mov
mov
mov
scas
movsl
andl
hlt
xor
decl
sti
xchg
dec
outsl
cmc
cs
mov
fbstp
insb
icebp
je
jbe
dec
ror
inc
sbb
mov
mov
fidivrs
mov
cmp
pop
stc
xchg
in
lods
and
neg
addr16
or
sbb
or
sarb
mov
out
adc
jge
and
test
int3
jecxz
fidivrs
mov
mov
xchg
sbb
dec
aam
xchg
pop
sbb
pop
loopne
xchg
jle
fsqrt
js
pop
ja
jp
rolb
icebp
add
mov
push
test
sub
push
or
xorl
and
jb
or
mov
enter
mov
enter
push
out
or
jp
dec
and
cmpsl
mov
jg
pusha
sti
fwait
lcall
fucomi
push
pop
lds
pop
and
aas
xchg
decb
mov
cmp
cmp
es
leave
hlt
in
jo
ljmp
add
jl
dec
adc
cli
test
dec
mov
fiadds
xchg
mov
jae
and
stc
jg
sub
or
push
roll
add
pop
ret
dec
sbb
scas
xor
in
shl
push
jle
pushf
jg
mov
push
push
fs
sub
inc
pop
mov
imul
bound
mov
adc
ret
jp
out
clc
mov
jnp
dec
test
fisubrs
and
mov
push
push
rcl
fdivl
adc
cmc
loop
or
clc
in
je
movsl
jmp
std
pop
cmc
in
add
negb
cmp
sub
outsl
mov
mov
sysenter
inc
sub
test
jle
xchg
mulb
jae
pop
jl
pop
rorb
dec
mov
jns
cld
fwait
outsl
pop
insb
in
mov
in
jb
and
dec
or
inc
mov
aad
and
int3
sub
mov
xchg
test
mov
movsb
sbb
pop
xor
outsb
sbb
mov
es
cmp
mulb
jb
or
pop
je
adc
add
test
incl
cmp
mov
mov
call
mov
sub
test
or
mov
std
std
jbe
out
shr
pop
sbb
adc
mov
popa
testb
lret
rol
mov
xor
negl
push
movsb
mov
cmpsl
sbb
inc
xchg
lret
jmp
outsb
xchg
cmp
fidivrl
mov
sub
jns
je
xor
add
or
or
sub
pop
clc
por
jno
in
lods
sub
xchg
and
out
movb
sti
icebp
xor
cmp
mov
repnz
mov
jb
aam
mov
rcl
mov
lock
push
test
mov
popf
adc
iret
sahf
xchg
xor
and
out
mov
rolb
adc
ret
icebp
sbb
and
cs
mov
int
pop
xor
jge
push
rcll
xchg
ljmp
mov
or
xchg
jmp
and
push
das
mov
mov
jecxz
push
pop
adc
jmp
sbb
mov
and
mov
js
pop
mov
lret
rorl
mov
addr16
into
dec
daa
adc
add
fs
insl
pop
mov
cltd
fcoms
mov
xchg
repz
repnz
shlb
mov
xchg
cmp
add
sbbl
scas
sbb
addr16
jl
jno
mov
push
stos
mov
jg
pop
pop
cmp
xor
imul
push
es
imul
ret
push
aad
pop
out
popf
pop
sub
int3
jb
or
mov
mov
ret
pop
sub
or
pop
test
push
icebp
sbb
mov
mov
jb
sub
mov
mov
adc
ja
sub
mov
es
std
fimuls
sbb
mulb
and
mov
mov
dec
int3
sbb
out
pop
xorl
dec
out
sub
out
and
or
push
ficomps
pop
adc
and
sub
sub
lds
into
pop
icebp
push
mov
dec
mov
push
push
adc
xchg
sar
mov
lret
rorl
cmp
xchg
jp
xor
jp
fistpl
out
sbb
push
int3
cld
ljmp
xor
add
mov
ljmp
push
rcll
clc
xor
in
and
mov
adc
adc
scas
add
xchg
mov
int3
rolb
sub
ficoml
mov
popf
push
pop
int
mov
mov
shll
xor
test
mov
xchg
xor
mov
inc
pop
nop
jmp
xor
fiadds
inc
or
add
jp
and
pop
nop
scas
inc
mov
sbb
sbb
ficoms
push
mov
test
clc
xchg
sbb
ret
ret
push
ret
cltd
adc
sub
jne
out
aam
jae
in
leave
dec
jns
ret
jo
ds
sbb
add
cld
sub
push
or
inc
xorb
or
xorb
iret
fprem
sbb
lods
es
mull
imul
mov
mul
mov
mov
int
jns
cmp
mov
or
movsb
fidivrs
std
sahf
inc
and
fnsave
push
repnz
or
cmp
iret
fisubs
pop
sti
mov
sbb
test
push
arpl
aaa
dec
cmp
int
pop
fcoms
sbb
call
out
cmpsb
int3
test
cmpsl
or
mov
dec
xchg
adc
popf
ljmp
push
inc
insb
sub
cmp
pop
das
cmc
data16
dec
xchg
sbb
push
cmpsl
cli
or
mov
xor
mov
xchg
push
jne
ret
xchg
rcrb
insb
ss
mov
in
sub
das
addr16
or
fildl
xchg
jne
aas
push
cmp
test
xor
shr
sahf
mov
cmc
cmp
ljmp
push
and
aam
lds
dec
xchg
js
push
or
imul
movsb
inc
jne
jl
inc
inc
pop
jnp
test
rcrl
mov
outsl
cmp
mov
mov
or
and
js
pop
add
in
pushf
js
es
lock
inc
xchg
mov
jae
inc
pop
insl
int
stc
jno
or
fnstcw
inc
lock
and
gs
or
cmp
test
es
shlb
xor
or
pop
in
ror
cmp
push
aaa
cmp
inc
pushf
jnp
sub
or
inc
pop
sbb
adcl
or
ror
ds
sub
or
inc
stos
pop
lahf
inc
ds
xchg
pop
mov
adc
mov
cmp
imul
sub
ret
int3
out
jb
imul
pop
adc
or
in
mov
cli
pop
xchg
in
jecxz
sbb
or
in
es
jg
int
dec
mov
packuswb
sahf
jp
imull
out
addr16
or
sub
dec
mov
shrl
lods
pop
xchg
xchg
rcrl
jns
movsb
or
jmp
mov
aad
adc
fwait
mov
enter
jp
push
cmp
out
inc
cmp
leave
subb
sbb
fsubp
mov
cs
pop
mov
inc
mov
push
flds
out
rcll
cli
cwtl
fildll
std
out
fstl
test
push
sbb
push
sub
cmpl
int3
fstpt
mov
mov
pop
sbb
mov
pop
add
jnp
dec
push
out
jnp
sbb
mov
xchg
outsl
mov
insb
fimull
mov
jb
push
sub
sub
xor
adc
fs
mov
push
inc
fwait
adc
xchg
mov
addl
aas
lods
shlb
insl
adcb
jg
fsub
xchg
pop
mov
test
stc
mov
arpl
mov
mov
test
lods
cwtl
push
push
les
push
mov
cli
icebp
out
mov
sub
addr16
les
addb
fldenv
jbe
sbb
and
aas
pop
repnz
jns
mov
lea
sti
insl
lods
ret
and
call
jbe
test
dec
sbb
leave
insl
lcall
aad
inc
sub
push
aad
xchg
xor
shrl
ficoms
lahf
ficompl
sbb
je
dec
cmpsl
push
xchg
subb
in
rcr
outsl
inc
daa
bound
lret
xchg
adc
lods
movsb
xchg
orb
and
xor
lods
movsb
adc
mov
add
xchg
into
bound
and
mulb
sbb
and
pop
sub
jmp
arpl
and
inc
mov
push
enter
push
adcl
loopne
int3
call
cmp
sub
pop
imul
cmp
outsl
outsb
lea
mov
les
nop
roll
jb
lahf
push
idivb
test
imul
das
std
jnp
and
inc
mov
or
sub
adc
and
pop
xchg
push
jno
shrl
mov
sub
mov
popa
or
push
mov
jg
cmp
pop
rcl
inc
ds
hlt
xor
in
pop
in
cmp
push
popl
sbb
imul
push
jae
mov
push
and
or
mov
andb
shr
fcoml
cld
in
cmp
adc
xchg
pop
stc
test
fs
cmpsb
rorb
add
pop
jbe
inc
add
into
mov
mov
les
dec
pushf
hlt
cld
mov
mov
cmp
cmp
and
dec
push
in
cmpsl
add
mov
sub
sar
fwait
std
imul
das
mov
daa
int3
jle
jbe
gs
stos
and
mov
mov
mov
stc
shll
pop
stos
sub
adc
dec
xchg
int3
cmp
les
insb
cmp
in
add
addl
and
pop
cwtl
stc
mov
aam
xchg
fs
pop
and
roll
xor
rorl
aaa
adcb
frstor
pop
jbe
mov
sub
xor
shlb
push
and
call
jno
dec
and
and
adc
cltd
sbb
idivb
cmp
sti
jge
aam
jl
ja
shll
jne
mov
push
shrl
movsl
jo
mov
jb
pop
dec
dec
insb
call
lea
imul
adcl
in
imul
xchg
add
cmp
pop
ret
xor
rcrb
rcrb
loopne
std
jle
mov
jnp
jl
cs
add
add
leave
icebp
dec
jae
push
and
mov
test
jmp
mov
xor
fucomp
inc
xor
pop
adc
xchg
inc
stos
call
xchg
xor
inc
sti
pusha
cmp
adc
gs
dec
loopne
push
mov
imul
loop
imul
stc
mov
lds
popf
or
add
add
jmp
popf
jle
scas
mov
pop
bound
hlt
test
inc
mov
scas
add
paddq
sbb
inc
push
movsb
scas
jle
sbb
xor
aas
sti
sub
loopne
sti
les
sbb
mov
inc
mov
mov
cmp
mov
or
std
imul
xor
mov
rcl
mov
mov
xchg
mov
std
and
leave
or
jp
xor
nop
adcl
xchg
pop
cltd
push
fwait
jae
orb
cmc
lea
xchg
in
add
aad
fcmovnu
cmp
inc
push
mov
push
xlat
sbb
into
push
sbb
outsb
popf
xchg
incb
shrb
mov
pusha
jmp
or
dec
dec
add
push
loop
not
addr16
add
jno
push
mulb
cmp
mov
dec
cltd
jbe
arpl
inc
mov
fstl
push
test
xor
and
pop
gs
mov
dec
adc
jmp
adc
fstl
stos
je
mov
sti
cmc
les
push
sbb
rcrl
inc
out
out
aas
add
fldl
scas
sbb
mov
fiadds
flds
mov
and
repz
xlat
mov
xorl
sti
outsb
sub
inc
in
or
jge
mov
adcl
push
xlat
xchg
inc
mov
enter
popf
xor
sub
out
sbb
cmp
loope
lret
ja
ds
lods
les
xor
jl
cmp
xor
jae
cmp
sub
ljmp
pop
fwait
xor
push
jmp
pop
mov
scas
pusha
mov
addb
adc
div
pop
icebp
jge
pop
mov
cmp
movsl
out
xchg
dec
add
mov
mov
arpl
xchg
push
int
scas
sub
adcl
dec
dec
lret
or
or
sub
lds
or
test
testb
add
xchg
out
aaa
mov
les
push
fadds
test
repnz
xchg
cmpsb
and
insl
inc
jecxz
cmp
add
jle
testb
xchg
push
or
je
jnp
sub
aas
lea
inc
sub
jl
insb
loope
add
sbb
xor
cli
test
fdivrs
sysret
dec
rclb
aas
and
ja
sub
add
mov
cli
push
ds
push
and
loopne
shll
pop
pop
in
int
push
jg
jmp
pop
add
sub
cmp
pop
ljmp
pop
jb
jg
xor
mov
sbb
fdivrs
jge
test
add
or
shl
roll
call
mov
pop
aaa
repz
call
mov
rolb
popa
dec
daa
push
inc
pop
xchg
outsl
movl
xor
jnp
outsl
push
sahf
and
cltd
adc
fdivr
test
jb
stos
ficoms
imul
insb
nop
mov
es
jae
sub
mov
les
add
fcoms
push
or
add
sub
leave
lcall
xor
mov
lea
jb
xlat
mov
mov
bswap
mov
jo
jl
pop
or
xchg
jno
mov
lret
or
pushf
add
nop
cli
or
mov
push
cld
or
cmp
dec
cmp
test
xchg
mov
dec
shrb
and
subb
sahf
out
cmp
int3
xor
test
jmp
cmpsb
fdivl
push
imul
adc
test
or
fwait
aaa
sub
sbb
push
scas
xor
loope
bound
fcomps
xchg
cmp
and
les
lret
pushf
pop
rcrl
ds
inc
out
or
add
ret
stos
clc
add
xor
sbb
pop
mov
add
mov
lcall
mov
mov
bound
mov
mov
pop
dec
sbb
sub
fisttpl
push
loopne
dec
imul
out
jae
pop
cmp
sahf
test
cmp
cmp
pop
loopne
out
adc
aad
fcompl
xchg
clc
push
lcall
repnz
out
mov
das
cmpsb
push
lock
jg
xchg
mov
inc
push
xchg
push
jbe
xor
adc
adcl
aad
and
xor
add
push
push
mov
ds
shrb
icebp
pop
sub
out
cmpsl
xchg
out
std
mov
jns
pop
lods
fcmovbe
pop
mov
data16
into
pushf
and
mov
add
js
bound
inc
fdivrl
mov
nop
inc
dec
in
stc
or
dec
ret
xchg
imul
sbb
lds
int
out
jecxz
push
dec
aas
cmpsb
jmp
das
push
das
mov
mov
sbb
out
mov
pop
jae
int3
xor
dec
mov
jae
daa
sub
jmp
addr16
xlat
rcrl
call
xor
jnp
sub
not
inc
adc
dec
or
inc
arpl
les
stos
sti
sub
ret
rclb
shlb
mov
test
inc
and
outsb
mov
push
sub
jbe
int
insl
jmp
lds
out
dec
imul
ds
lcall
mov
mov
ss
push
fidivrs
stos
mov
inc
add
addl
lock
idiv
mov
sbb
inc
test
jg
test
nop
xor
pop
pop
rorb
jbe
outsl
jb
and
cwtl
add
dec
cmpl
push
rolb
clc
lods
mov
mov
das
aad
movsl
push
mov
scas
sbb
mov
or
jg
sbb
mov
repz
dec
test
cs
dec
xor
jl
xchg
in
pop
cwtl
sbb
js
orb
ret
mov
leave
out
rcrl
in
rclb
lods
into
add
aas
inc
and
pop
mov
scas
push
pop
lahf
pusha
jg
movzwl
jge
daa
lea
ss
jl
pop
push
out
cli
dec
jp
shll
sbb
and
push
or
sub
pusha
dec
enter
inc
movsb
jg
xchg
sbb
push
arpl
pop
gs
iret
dec
inc
jae
int
inc
lret
ds
push
xorl
jns
fwait
aam
cli
push
lea
pushf
loop
xor
xchg
cmp
jnp
or
repz
mov
idivb
adcb
cmp
xchg
mov
test
ret
pop
mov
cwtl
out
hlt
fidivs
pop
cmp
ret
cwtl
lcall
in
loop
arpl
out
and
adc
aad
cmpsb
sbb
mov
ss
mov
out
sbb
push
pop
aaa
fbld
test
cs
aas
ja
aas
cmp
enter
add
xchg
and
scas
lods
mov
shlb
cmc
js
pcmpgtw
pop
adc
and
outsl
xor
jmp
lret
mov
popf
mov
cmp
xchg
hlt
add
or
lea
fstpt
das
xchg
test
mov
les
fsubrs
jne
inc
dec
sub
adc
adcb
inc
jb
aam
bound
pushf
cwtl
dec
ss
cmp
jmp
repz
cld
repnz
jge
in
addb
test
lcall
pop
fisubl
pop
pop
outsl
push
add
jne
push
and
addb
jnp
aaa
cli
pop
jno
dec
lea
outsb
test
out
lods
mov
pop
frstor
nop
ret
mov
push
cmp
pop
insl
add
mov
jo
jp
push
jle
mov
cmpsl
inc
nop
jg
xchg
mov
sbb
nopl
jbe
imul
sub
shl
fdivrl
adc
aas
mov
dec
add
dec
sbb
mov
stos
imul
das
sub
add
inc
addr16
ret
xor
add
adc
out
mov
test
int
inc
mov
pop
enter
mov
jns
inc
stos
push
aad
xchg
imul
stc
xor
pushf
or
or
or
sbb
daa
subl
mov
pop
insb
testb
mov
lahf
mov
insl
pushf
ret
leave
or
scas
mov
and
or
fucomi
xchg
add
xchg
and
es
dec
popf
pop
pop
mov
pop
cmpsb
cmp
dec
adc
fbld
mov
mov
mov
or
gs
test
adc
and
fs
push
mov
jo
mov
cli
add
aam
fwait
adc
pop
or
sti
pop
lods
xchg
and
cmp
jno
loop
mov
test
aad
xor
fimuls
jl
push
fs
fstpl
sbb
cmp
das
arpl
int3
aad
ror
mov
xchg
pop
mov
das
out
dec
outsl
int
in
sbb
xchg
call
push
jae
ja
aas
cmp
in
adc
shrb
push
or
int
clc
push
push
mov
out
sub
add
es
push
negb
enter
rclb
push
popf
test
rcrl
inc
lahf
mov
pop
mov
cli
xchg
pop
dec
aad
das
add
idiv
xchg
pop
cmp
xor
mov
shrl
repnz
sbb
xchg
mov
xor
enter
ret
ja
scas
adc
jmp
sub
xchg
push
dec
in
dec
pop
pop
jnp
jbe
sti
jmp
and
stc
sub
mov
imul
enter
adcb
addr16
and
pop
push
pop
lock
sahf
shl
out
dec
mov
ja
jp
outsb
push
les
and
jbe
imul
or
cs
push
ficompl
fstpl
sbb
adc
xchg
int
lods
jmp
idivl
rorb
pusha
dec
mov
loopne
jne
lcall
adc
fstps
xor
dec
push
outsl
sarb
lock
sub
jge
xor
xchg
adc
xchg
out
out
subl
repz
ljmp
mov
arpl
adcl
popf
xchg
and
xchg
fsubrl
stos
addr16
adc
inc
mov
and
cmp
ret
xor
mov
loopne
sahf
inc
jbe
nop
sti
mov
rcl
je
cli
jge
dec
das
mov
mov
mov
sub
je
loopne
add
test
movb
and
mov
sar
ss
push
out
fcoms
jmp
addr16
mov
pop
popf
jb
repz
mov
repnz
addr16
test
sub
loop
clc
mov
mov
fstpl
pop
mov
subl
sbb
cs
mov
xchg
or
scas
or
movaps
stc
sub
xor
or
push
scas
jl
xchg
sbb
add
xlat
jb
pop
inc
cmp
and
dec
cmpb
push
fs
mov
addr16
sbb
and
in
mov
sub
xor
sysexit
or
arpl
ja
xchg
inc
sbb
sbb
xchg
out
pushf
cld
icebp
mov
xor
fcomp
sahf
sub
mov
subb
clc
cmpsb
ret
iret
nop
xchg
iret
clc
or
addr16
ret
stos
scas
leave
mov
xor
lret
jno
cmc
mov
scas
test
mov
pop
fstl
dec
les
push
insb
sbb
or
or
mov
inc
xor
out
add
hlt
loopne
mov
mov
iret
cmp
jp
mov
mov
adc
or
call
adc
pop
mov
pop
test
and
pop
add
insl
push
mov
xor
out
push
push
cmp
mov
dec
cmpsb
into
xlat
inc
inc
push
mov
hlt
lea
add
add
test
push
mov
add
add
clc
mov
mov
lock
icebp
int
hlt
movsb
ja
mov
inc
sub
pushf
xchg
outsb
cmc
dec
cmc
lods
mov
mov
sbb
adc
mov
clc
push
rorl
lret
lret
adc
mov
inc
cmpsl
xchg
pop
movsb
sbb
movsb
sbb
fbstp
ds
push
jno
fwait
test
inc
lea
fstps
or
jecxz
ss
pop
sub
sbb
cmc
sub
sbb
jmp
imul
fsubrl
cmp
sahf
stos
xchg
jp
push
imul
mov
sahf
call
dec
out
xchg
sbb
cmp
inc
minps
or
das
pop
outsb
or
and
jge
sub
jecxz
lret
xlat
cmp
pusha
and
fstpt
adc
mov
out
push
movsl
pop
sub
lahf
pusha
dec
ljmp
aas
cmp
mov
imulb
insb
inc
aaa
dec
dec
or
popa
ret
adc
shll
add
pop
inc
nop
jb
stos
cmpb
lcall
enter
int3
stos
cltd
insl
dec
xchg
push
les
mov
movsb
dec
fdivrs
mov
mov
aaa
sub
fsubrs
lret
add
ljmp
idivb
pop
fsubl
mov
inc
insl
jp
test
fistl
ficompl
shlb
cwtl
cmpsl
mov
adc
aaa
test
and
lahf
test
es
fldenv
leave
imul
fs
ret
adc
push
mov
jno,pn
imul
sbb
out
pop
mov
pop
pop
dec
inc
imul
jb
push
dec
jnp
lcall
ret
fwait
xchg
inc
and
push
repz
ret
or
stc
jbe
hlt
dec
dec
jmp
or
loop
inc
aam
inc
inc
ret
xor
sub
jmp
and
repnz
mov
ja
sub
jbe
data16
lods
mov
lock
mov
hlt
fnstsw
push
mov
adc
scas
xchg
mov
test
aad
xchg
jns
mov
jnp
and
out
pop
jnp
es
xor
push
sub
lock
mov
jge
lret
imul
nop
push
dec
in
loope
repz
sahf
inc
mov
or
inc
mov
mov
mov
jno
pop
stos
push
rorb
push
mov
inc
das
imul
pushf
ja
ja
lcall
push
dec
add
mov
push
stc
xchg
adc
rorb
pop
movsl
xchg
das
mov
push
inc
mov
lods
std
adc
scas
adc
or
and
sbb
fcmovne
movsl
out
and
cmp
les
gs
in
inc
xchg
orb
repnz
fdivrl
dec
ljmp
ja
in
mov
and
mov
rcrl
sti
sti
mov
jmp
jmp
xor
xchg
pop
rclb
xchg
repz
fsubrs
leave
ret
push
adc
mov
push
sbb
subl
xchg
add
mov
dec
dec
repz
push
int
dec
js
mov
outsl
xchg
mov
out
mov
shlb
jne
xor
ds
jecxz
dec
scas
std
pop
xorl
mov
fdivrs
and
test
lods
cmpsl
inc
cld
jne
wbinvd
stc
add
cld
inc
cli
push
in
xchg
enter
nop
lock
aas
mov
jge
inc
xchg
xor
push
daa
and
jno
mov
stc
push
adc
loope
mov
imul
lods
push
xchg
shlb
pusha
jnp
xor
ds
leave
push
pop
push
stc
cmpsb
jbe
xor
xor
je
sbb
xor
adc
into
pop
iret
pop
push
push
mov
mov
mov
xchg
jbe
xchg
inc
fwait
inc
das
push
lcall
mov
js
leave
lods
pushf
mov
testb
jbe
call
xchg
pop
mov
xor
movsl
je
sub
hlt
sahf
mov
icebp
insl
insb
jg
stos
mov
pop
cmp
out
add
mov
test
sbb
filds
push
lret
fdivrl
push
add
popa
outsl
jmp
aaa
aaa
mov
inc
pushf
faddp
iret
stos
sub
into
push
adc
aam
cmp
ds
pusha
mov
movb
add
push
ljmp
xchg
lods
mov
sbb
jge
ret
pop
xchg
ljmp
icebp
cwtl
or
mov
imul
inc
jge
lds
mov
inc
or
mov
rolb
xor
lret
sub
mov
jmp
xchg
mov
add
mov
ljmp
das
popf
dec
cmc
or
in
pop
cwtl
insb
shlb
and
ret
dec
fsubrs
iret
or
lret
repnz
fiadds
sti
dec
fs
aam
data16
lahf
rclb
jo
ljmp
inc
pop
inc
outsl
sub
push
mov
test
mov
psubusw
lods
fmuls
data16
outsl
inc
mov
or
cli
pop
push
xor
jb
int3
push
cmp
imul
fcomip
movb
mov
lds
sub
imul
test
mov
call
enter
adc
adc
mov
or
scas
jg
jnp
and
ds
push
aad
loope
xchg
push
adc
cmpsb
jb
movsl
sbb
lahf
jp
or
mov
ja
lcall
clc
in
mov
notb
pop
data16
repz
pop
aad
sbb
aaa
jnp
dec
xchg
push
jns
push
mulb
outsl
push
jecxz
jbe
fwait
clc
lcall
insb
mov
std
cmp
or
dec
fimuls
ret
ljmp
test
test
jnp
jle
mov
mov
test
lret
or
xchg
and
clc
push
fisttpl
mov
ss
test
jle
inc
inc
xchg
imul
sbb
das
sub
pop
pop
stos
and
push
fdivs
fmul
jl
and
mov
fs
sub
cmp
aad
sub
cmp
cli
lcall
mov
push
push
imul
iret
push
adc
loop
fdivl
cmp
fcompl
fcmovb
or
sub
cmpsb
adc
xchg
sahf
shll
stos
push
addl
xor
test
cmp
in
lods
leave
xor
repz
mov
sbb
fisubrl
cmc
imul
rcll
js
cmp
and
fsubs
mov
scas
mov
pop
lods
pop
scas
lret
mov
mov
dec
add
out
data16
test
cmp
and
xchg
test
idivb
addr16
pop
push
ja
xorl
lcall
dec
sub
std
jb
sahf
outsl
loopne
les
ja
jecxz
aad
and
movsb
and
mov
push
inc
stc
ljmp
clc
add
xor
repz
xor
mov
sti
nop
add
dec
fnstenv
mov
fisttpl
push
push
sub
mov
rcrb
cmpsl
scas
es
dec
std
stos
xor
repnz
lods
stos
shlb
mov
mov
and
aas
sti
jp
sbb
jge
imul
lret
push
cmpl
ret
push
dec
cwtl
mov
aas
mov
push
xchg
cmp
mov
les
push
icebp
mov
sahf
and
sub
mov
sar
sar
sahf
enter
in
ret
jb
insb
push
mov
cmc
jecxz
cmp
push
test
cmpsb
insb
mov
fld
or
adc
movsb
push
mov
and
addr16
mov
pop
sbb
insl
cmp
xchg
pop
shrl
push
addb
call
cmc
pop
mov
jecxz
test
jns
leave
add
dec
push
and
mov
fnstcw
push
leave
pusha
mov
mov
test
incb
nop
shlb
xchg
mov
shr
add
xchg
sbb
inc
das
movb
ljmp
mov
sbb
aam
push
mov
dec
aaa
loop
popf
fisttpl
mov
lods
xchg
and
dec
mov
mov
cs
test
jbe
insb
push
rorb
mov
pop
ss
scas
xor
mov
xorb
mov
xchg
rorl
sbb
repz
test
cmp
jmp
pop
xlat
insb
popa
dec
test
xchg
sub
testb
inc
das
push
xor
or
sbb
xor
mov
push
scas
pop
xor
ficompl
jb
es
jnp
add
push
jecxz
push
inc
mov
lods
sbb
jbe
aam
and
stos
inc
mov
insl
and
inc
pop
add
push
in
ss
popf
roll
or
nop
xchg
sti
clc
sbb
popa
ds
xor
nop
rolb
cmp
inc
adc
or
pop
mov
pop
push
and
out
mov
push
xchg
repnz
sbb
stos
rcr
cmc
push
je
jae
xor
fimull
jmp
out
jge
pop
int
sbb
pop
es
clc
in
sti
ret
add
lret
cwtl
pop
nop
lds
jge
inc
sahf
pop
inc
scas
pop
jno
xchg
sbb
pushf
fwait
nop
frstor
mov
stos
shrb
addr16
aas
sub
fsqrt
or
mov
leave
push
sbb
mov
push
mov
add
sub
into
lods
push
cmpsl
outsl
repz
rcrb
dec
cmp
mov
pushf
sbb
fbld
and
test
in
fidivrs
lock
push
test
mov
lret
dec
insl
mov
add
addb
fidivs
ds
test
pushf
in
pop
mov
movsl
cmp
movsb
scas
inc
mov
pop
rcll
fsubrs
lock
push
xorl
inc
mov
lret
jno
aas
rorb
mov
insb
mov
sbb
xchg
and
inc
js
ficompl
setb
in
inc
or
sbb
adc
dec
xor
scas
sub
outsb
out
add
sbb
cmp
nop
mov
cmp
mov
testl
cmp
orl
mov
fimuls
inc
xor
sbb
or
jnp
dec
clc
fdiv
inc
lahf
outsb
scas
ss
lock
test
xchg
daa
jne
inc
sub
push
push
decl
cmp
inc
insb
outsl
jnp
lcall
bt
addl
mov
dec
pop
cmp
js
xchg
daa
fimull
inc
pop
shll
stc
pop
int3
inc
add
jmp
cmp
xor
xchg
sbb
or
sub
mov
lret
in
enter
push
mov
pop
sbb
inc
push
cmp
sar
push
loopne
test
ficomps
cmp
or
dec
push
dec
and
jle
push
fcmovnb
lods
mov
cmp
mov
mov
mov
lds
rolb
and
sub
cs
mov
subb
cwtl
or
testb
add
xchg
pop
in
cmp
add
insl
lods
mov
shrb
jl
repnz
push
imul
jne
fsubl
lcall
dec
in
dec
xchg
cli
xchg
or
xchg
push
iret
imul
fidivs
andl
cmpsb
xchg
enter
jp
jnp
jne
stos
mov
sub
pop
sub
sub
xor
push
and
lahf
sub
inc
fs
push
cmpps
jns
shlb
std
loop
push
bswap
pop
sbb
add
jae
pop
mov
aas
and
adc
stc
xchg
pop
ficoms
xor
dec
mov
movsb
rorb
cmp
sarb
or
dec
insl
add
push
mov
filds
movsb
out
cmp
mov
or
xchg
mov
pop
dec
sub
sahf
xchg
fsubr
sbb
shll
and
xor
and
lret
sbb
loopne
fs
fwait
or
imul
into
xor
jo
mov
ficoms
jno
mov
ret
cmc
fnsave
shlb
adc
push
mov
pop
adc
in
mov
bound
lock
mov
cmc
into
int
or
ss
in
faddl
and
jno
js
dec
inc
mov
icebp
es
aad
lcall
fists
jo
fidivl
sub
cmp
mov
psubb
and
mov
xor
call
sub
in
mov
sti
movsbl
mov
cmc
jno
es
push
sub
pop
mov
or
pop
fisttps
mov
lea
pop
ficoml
into
push
in
add
pop
std
addr16
in
popf
adc
or
or
lahf
pop
or
dec
mov
lret
or
test
std
mov
cmp
mov
and
loop
xchg
or
sub
data16
nop
and
in
ret
out
and
mov
or
dec
out
xchg
bound
mov
ret
clc
dec
xlat
loopne
push
or
mov
mov
and
and
scas
add
adc
jl
lds
in
and
pop
push
jmp
stc
arpl
jbe
hlt
push
out
mov
cmc
arpl
xchg
aaa
mov
loop
pop
fucomp
iret
lods
in
inc
inc
js
jo
jecxz
push
scas
lahf
out
rorl
xchg
rolb
adc
inc
rol
jb
jb
ret
stc
testb
and
and
in
add
cmp
bound
lock
push
jge
push
outsl
mov
mov
fwait
pop
xor
lahf
cmp
imul
and
stc
out
sti
cmp
mov
jb
test
jmp
sbb
dec
xchg
lods
xor
std
xchg
popf
adc
mov
rorb
movsl
jno
push
outsl
jmp
push
cld
bound
adc
repnz
aas
mov
mov
and
cmp
lret
push
fsub
push
mov
sub
faddp
fs
fcompl
stos
daa
cltd
add
mov
and
jmp
ljmp
sbb
stos
add
lods
xor
jb
add
xchg
cli
loopne
push
inc
sub
loopne,pn
sub
sbb
cld
inc
pusha
imul
push
lea
adc
movl
sub
lret
popf
mov
rolb
dec
cmp
adc
pop
cmp
and
inc
sbb
and
mov
loopne
sub
dec
fstl
fs
add
ficomps
into
sub
dec
push
mov
push
in
cmp
int
cmpsb
or
fstps
loop
scas
aas
push
and
jle
mov
pop
and
lods
rdpmc
pusha
cli
pushf
addr16
bound
fisubrl
jnp
loopne
mov
out
push
inc
adc
adc
jle
xchg
fmul
shlb
dec
sub
jg
sub
push
into
imul
xchg
pop
add
jne
mov
dec
add
jbe
sub
rorb
ficoms
fcmovne
jl
cmpsl
push
pop
int
jle
and
xchg
sbb
mov
insl
sub
je
pushl
aad
es
frndint
or
arpl
xchg
mov
sbb
pop
mov
xor
lahf
pop
out
fnsave
sbbb
scas
jp
push
push
inc
mov
vmwrite
arpl
idivl
inc
jbe
dec
sub
pushf
and
jne
push
or
inc
stos
mov
xchg
aaa
movsl
mov
mov
xorl
clc
xor
jnp
add
nopl
rcrb
decb
xchg
cmp
jge
jecxz
jp
lods
daa
push
clc
lret
mov
nop
mov
dec
add
dec
pop
cltd
outsl
aas
add
subb
mov
dec
in
cmp
and
pop
das
add
out
sbb
push
shl
adc
lods
cs
push
daa
add
stos
dec
mov
add
or
push
mov
cs
cld
add
arpl
insb
scas
and
fiaddl
jle
pop
adcb
dec
cmp
shll
mov
cmc
mov
mov
push
jbe
push
xchg
lcall
mov
jae
cmp
mov
in
sbb
sahf
mov
mov
dec
cltd
fadd
fstpl
stc
lret
push
int
cmpsb
mov
jle
add
sub
je
popw
pop
pop
lea
cld
inc
repz
call
mov
popf
add
xor
repnz
outsb
es
enter
loop
mov
into
mov
pop
pop
dec
fwait
in
jne
inc
fisubs
cmp
jmp
pop
mov
push
mov
lea
or
cmp
lea
xor
xchg
jno
pop
xor
mov
cmp
mov
sbb
mov
pushf
sub
fmulp
inc
jmp
lods
push
xlat
xchg
push
pop
push
enter
fwait
jle
mov
adcl
addl
add
push
jg
aas
lock
stos
add
xchg
insb
int3
leave
pop
mov
inc
jno
push
adc
jb
js
std
add
lret
mov
fstl
pop
aad
fwait
inc
iret
jle
fisttpl
sbbb
dec
mov
je
hlt
cmp
jl
movsb
lock
inc
dec
inc
inc
push
je
xchg
clc
adc
mov
repnz
xchg
add
mov
xor
jp
mov
arpl
test
cmpsb
ret
lahf
das
mov
sbb
add
jne
clc
ret
jp
inc
cmp
in
insb
jnp
outsb
xor
and
fsqrt
inc
jle
mov
inc
dec
int
jge
mov
je
adc
popa
sub
or
ret
push
shl
adc
roll
inc
notb
cmc
or
or
sbb
fsubl
cmpsb
mov
jns
inc
inc
outsb
loop
xlat
adc
dec
push
mov
aas
cmpsl
stos
xor
sti
lods
and
mov
add
xchg
stos
or
enter
sbb
lods
jbe
mov
in
sbb
inc
fstl
sbb
cs
sub
mov
mov
xor
stc
sub
push
xlat
mov
pop
ja
or
inc
mov
cmc
push
aaa
mov
ja
loope
xchg
rolb
std
mov
daa
fdivrl
divl
jl
scas
mov
int
inc
scas
or
clc
daa
push
mov
rcr
jp
std
das
pop
inc
xchg
xor
xor
fdivs
mov
cld
mov
out
mov
inc
rol
xchg
clc
sbb
push
ret
jmp
loope
cmpsb
sub
ljmp
test
mov
or
inc
xchg
cmpsl
sahf
add
test
and
cmp
dec
sub
cmpsl
hlt
sbb
outsb
fidivs
sbb
cli
repz
out
xor
cmp
cmpsl
gs
mov
sbb
sbb
test
mov
out
sub
fidivl
add
jg
cli
lahf
pushf
in
and
xlat
mov
push
imulb
mov
xor
lret
mov
ja
mul
lds
test
mov
out
or
mov
js
or
pop
fwait
xchg
mov
clc
cmc
mov
mov
daa
sub
inc
adc
test
fcmovne
pop
rcll
mov
lret
mov
mov
mov
mov
incb
and
pop
stos
mov
xchg
jle
mov
jb
js
aaa
movsb
dec
jbe
call
jl
ja
fidivs
ss
ljmp
push
aam
stc
mov
in
mov
lea
in
stos
out
movsb
mov
out
rorb
adc
mov
mov
add
cwtl
and
inc
in
jo
dec
inc
cmpsl
testl
mov
mov
mov
into
mov
dec
dec
lcall
fneni(8087
and
push
fiaddl
mov
or
nop
leave
and
imul
movsb
pop
lock
int3
push
fsubl
call
push
add
loopne
mov
inc
inc
push
sbbb
fists
pop
sbb
xor
fistpll
pop
push
idivb
pushf
aas
jle
icebp
add
sbb
adc
orb
imul
xchg
sub
inc
mov
sahf
in
arpl
leave
mov
push
push
movb
not
sbb
and
cmp
in
pushf
and
icebp
dec
sahf
and
inc
push
mov
and
and
push
test
daa
icebp
insb
jl
insl
lds
mov
nop
icebp
and
outsb
cmp
mov
cmp
push
mov
data16
icebp
data16
cmc
outsl
and
das
jno
add
or
outsb
push
ds
fnsetpm(287
mov
inc
mov
inc
push
xor
lret
mov
sub
mov
push
js
das
rorl
icebp
jle
dec
xchg
shl
mov
xor
mov
cltd
pop
or
scas
nop
fwait
clc
nop
and
sbb
mov
xchg
insb
sub
adc
es
cld
leave
lcall
sub
test
outsb
clc
loop
cmpsb
movsb
cmc
adc
and
adcb
outsb
jbe
sub
int
sub
jnp,pn
movsb
xchg
add
dec
adc
sub
mov
test
lock
xor
cmp
xlat
ret
sub
lahf
imul
push
rolb
cmp
jg
les
mov
into
rorl
sbb
outsl
push
daa
loopne
lret
or
aad
adc
xchg
ja
aad
adc
mov
scas
xchg
mov
pushf
jl
pop
lcall
aam
test
inc
push
mov
sub
mov
xchg
mov
out
es
ret
sbb
pop
sbb
sti
clc
cmpsb
jl
xchg
imul
mov
pop
xchg
jo
into
sti
jb
mov
xorb
scas
jl
shll
ror
aad
xchg
mov
rcrb
aad
add
adc
ds
leave
rcl
pushf
lock
outsb
lea
mov
loopne
hlt
mov
push
sahf
or
cmp
lea
xchg
gs
pop
in
and
and
pop
jp
sub
pop
mov
clc
in
jmp
xchg
push
jmp
mov
push
and
in
ja
push
imul
jg
leave
out
inc
mov
push
mov
push
shrb
cmpsl
jo
xchg
repz
pop
shrb
jge
insb
hlt
lods
pop
outsl
add
mov
fsts
loop
inc
xchg
jmp
aad
adc
adc
lret
cmpsl
mov
lret
adc
or
sbb
xor
adc
cmpsb
xor
pop
imul
sti
xchg
stc
insb
push
nop
mov
sti
in
jg
or
sahf
cli
mov
jb
clc
lcall
mov
aam
jecxz
lret
mov
sub
ret
lods
push
dec
sbb
push
push
orl
mov
out
adc
arpl
mov
gs
fisttpl
add
cmp
xchg
lock
pop
jns
out
sar
inc
pop
xor
lds
movsw
pop
add
sbb
sbb
cmp
loop
push
addr16
add
mov
insb
inc
mov
ljmp
cli
pushf
stos
add
mov
pop
mov
and
xor
mov
notb
sub
cmc
mov
stos
mov
std
add
cli
add
call
pop
mov
and
jnp
xlat
mov
repz
or
pop
xchg
mov
cmp
lahf
or
mov
int
add
push
mov
test
xor
adc
aaa
pop
inc
sbb
pop
pop
imul
dec
xor
stc
mov
fsubl
pop
push
add
or
dec
movsl
push
xchg
jbe
stc
out
push
out
xor
xchg
aas
cmc
ret
adc
or
lahf
sub
mov
fs
xor
mov
jge
dec
inc
pop
dec
inc
sub
adc
push
jne
movhps
stc
inc
push
aas
sbb
xor
mov
imul
fldt
dec
subb
in
push
aaa
leave
push
adc
test
cmpsb
or
mov
fwait
js
sbb
xchg
pop
cmp
orl
cltd
mov
std
mov
lret
jl
js
mov
testl
bound
push
fiadds
test
rcr
mov
xchg
stos
out
adc
and
in
add
lret
popf
xor
daa
mov
popf
cmc
out
inc
pop
in
jbe
add
lret
pop
hlt
jcxz
or
jbe
test
call
pop
fwait
mov
jnp
adc
rcl
mov
fxch
sub
dec
mov
fs
call
enter
and
in
xor
jmp
ljmp
jns
iret
mov
jl
lret
mov
nop
xchg
xor
imul
jbe
pop
push
fcoms
jmp
sbb
dec
arpl
sbb
or
iret
sbbb
cli
arpl
movsb
mov
ror
test
mov
push
into
imul
jmp
sbb
fistpl
gs
loopne
xchg
xchg
lret
dec
in
in
adc
fst
jecxz
sbb
aaa
mov
or
pop
mov
cwtl
adc
scas
cmc
or
inc
gs
out
adc
shlb
mov
xchg
into
pop
xchg
xor
arpl
rcll
and
lds
or
mov
outsb
mov
rcl
mov
bound
dec
push
imul
int
movsb
jbe
xor
iret
jge
cmpsl
inc
sub
aas
cmp
cwtl
dec
sbb
push
xlat
enter
push
or
mov
pop
popf
xchg
pop
jns
daa
push
mov
addr16
int
movsb
in
and
aas
xor
je
pop
in
cmp
shl
dec
lahf
stos
jno
adc
cmp
dec
pushf
daa
movsl
add
xchg
ret
add
mov
mov
and
stc
mov
movsl
xor
inc
xchg
fcmovne
push
or
and
out
out
cwtl
aam
sbb
dec
popf
mov
inc
push
push
cmp
sarb
bound
cmp
scas
aad
rclb
stc
jae
ljmp
out
iret
xchg
jecxz
add
dec
stc
mov
gs
int
rolb
xchg
or
add
aam
sub
insb
pop
xor
push
add
hlt
push
inc
xor
jbe
aaa
pusha
pusha
repnz
jbe
mov
push
stc
sub
cmp
stos
ds
sbb
loop
sub
hlt
xor
test
add
ja
mov
xchg
xchg
dec
adc
sbb
outsb
ret
cmp
jp
pop
push
in
xor
sub
les
jmp
int3
out
mov
sbb
hlt
scas
or
jl
jle
lret
movsb
clc
mov
mov
bound
sbb
and
xchg
in
rcll
mov
and
add
or
sub
es
das
and
int3
and
movsb
xchg
test
and
pop
mov
cmp
cli
sti
cmp
sbb
inc
sub
repz
les
mov
inc
in
mulb
cmp
sub
pop
sub
lret
sub
pop
add
add
je
idiv
iret
inc
stos
add
in
or
or
rclb
in
lods
jmp
jle
mov
sbb
lahf
sbb
sarb
lcall
adcb
adc
adc
xor
mov
incb
call
xchg
mov
cltd
jno
and
add
fmul
les
dec
test
or
mov
int3
add
lock
cmp
push
mov
sbb
sahf
int3
jnp
xlat
xchg
das
pop
adc
sbb
cmp
jg
or
sbb
mov
leave
xor
sub
mov
out
or
pop
pushf
mov
sbb
repz
jne
mov
dec
push
mov
jnp
lahf
lods
lods
pop
add
stc
pop
mov
cmp
push
out
cmp
pop
mov
call
lea
test
sub
dec
mulb
push
std
push
mov
mov
out
stc
in
adc
ja
mov
inc
mov
movsl
repz
push
dec
mov
in
jns
shll
sub
push
out
pop
jge
out
clc
pop
push
in
dec
inc
cmp
ds
mov
and
and
imul
fldt
fdivrs
negb
push
push
call
in
cmp
pushf
mov
mov
pop
xor
insb
mov
aas
sbb
add
ret
mov
pushl
mov
xchg
add
dec
outsb
ret
sahf
ds
pop
jns
and
jmp
pop
scas
out
std
pop
pop
push
stos
and
and
in
lea
call
repnz
adc
fisubl
leave
ret
outsl
mov
lock
jl
addr16
pop
lcall
mov
jne
xchg
mov
ret
pushf
mov
xchg
into
adcl
icebp
shl
xor
rcl
fisubl
rcrb
fsts
cmp
in
mov
sub
or
xchg
xor
jnp
in
xor
sbb
cmp
stos
sub
fdivl
ror
and
cmp
pop
jge
dec
test
push
mov
xchg
pop
in
stos
aaa
mov
sub
ficompl
jbe
cli
in
icebp
mov
xchg
jmp
pushf
rcr
mov
shll
pop
mov
std
fs
sub
es
cli
xchg
or
inc
roll
cmp
mov
in
and
in
mov
sahf
jl
js
das
fbld
negl
mov
sbb
test
cmc
push
enter
jno
adc
add
inc
or
push
mov
xor
add
mov
inc
lods
cld
mov
add
add
add
inc
jge
jo
pusha
sbb
xor
xchg
mov
mov
xchg
and
mov
lods
mov
push
adcb
fstl
push
ds
xchg
out
stos
dec
and
adc
rorb
xchg
adc
or
sbb
sbb
xor
fwait
lock
das
into
xchg
sbb
jmp
sub
jnp
sub
ret
data16
cli
sbb
adc
cmp
and
inc
cmp
xor
imul
push
add
add
popa
sbb
nop
daa
xchg
vpaddq
inc
lret
and
aam
lock
push
imul
inc
popa
out
fwait
int3
xchg
or
push
fs
adc
mov
mov
mov
adc
int
bound
cld
xchg
xchg
push
loope
out
xchg
lods
cmp
mov
adc
sbb
add
mov
pop
or
call
test
mov
daa
adcl
push
dec
push
stos
sti
pop
andl
shl
int
scas
mov
ja
push
movsb
out
add
mov
xor
insb
jne
mov
cmp
push
fsub
repz
cltd
sarb
push
dec
push
jbe
jnp
add
pop
fucomi
xchg
cmc
andb
mov
outsl
sub
pusha
xor
xor
sub
clc
loope
in
xchg
sub
xor
pop
push
push
nop
lock
stc
push
sub
mov
mov
pop
dec
mov
push
inc
jmp
aaa
fcompl
push
sub
add
push
insl
cmp
sarb
inc
sbb
mov
xor
add
mov
xchg
dec
inc
or
movsl
cmp
call
test
dec
into
mov
icebp
insb
and
andl
and
addr16
push
xchg
sbb
push
int3
jle
xlat
and
push
cmp
or
dec
sub
out
arpl
sarb
pop
aad
test
sbb
ljmp
jge
jge
and
es
into
and
pusha
mov
inc
inc
aam
shll
test
cmpsb
icebp
stos
mov
ljmp
dec
inc
xorl
or
fimuls
sbb
mov
inc
mov
push
push
dec
insb
and
sbb
add
and
sbbb
push
movsb
insl
sub
cmp
out
outsl
call
mov
hlt
jb
pop
xor
and
stc
out
mov
xor
testl
iret
adc
dec
pop
mov
push
sahf
ljmp
bound
mov
ja
rcrb
test
scas
aad
xchg
mov
mulb
jecxz
nop
mov
ret
cmp
stc
dec
stc
push
cmp
xor
push
inc
mov
cld
jp
mov
inc
or
cs
dec
aad
pop
fwait
insl
es
rcll
mov
repnz
xor
notl
xchg
pop
inc
inc
and
cwtl
fwait
pop
pop
es
mov
test
mov
mov
in
dec
adc
sbb
push
adc
in
shlb
sub
mov
out
dec
lods
lcall
les
and
incb
ss
xor
adc
rolb
push
pop
jp
mov
push
cmc
out
ror
fsubl
mov
mulb
movsb
das
inc
add
call
inc
je
mov
push
or
sbb
clc
mov
and
popf
fsubl
out
xchg
aam
mov
icebp
sub
cmpsb
setle
mov
test
fnstenv
arpl
lcall
xchg
dec
dec
xor
sub
pusha
adcb
in
sti
andb
stos
push
and
outsl
cs
mov
push
lret
mov
cmpsb
dec
inc
sbb
pop
int
cmp
sub
lock
mov
ja
sti
popa
jne
imul
popa
xlat
jecxz
push
test
sbb
stos
stos
jae
inc
imul
adcl
fsincos
into
ficompl
cltd
push
xor
sbb
xor
sbb
inc
sub
cmpsl
fstl
lds
jb
lock
jno
mov
sbb
mov
xchg
xchg
or
pop
pop
dec
mov
adc
out
xchg
mov
inc
sbb
std
mov
ror
sar
mov
loope
add
cmp
clc
data16
into
or
mov
adc
stc
push
popf
jle
bound
rorl
inc
xor
adc
cld
jge
hlt
fstpt
movsl
xchg
adc
lret
mov
jnp
fucomp
clc
std
lock
jmpw
add
scas
or
imul
popf
fistps
rcrb
mov
inc
in
rclb
shll
fstpl
std
mov
mov
push
stos
sti
mov
mov
bound
and
mov
in
lret
lods
sbb
lcall
inc
gs
push
fists
in
orl
xor
int
hlt
stos
popl
scas
and
xlat
out
imul
cmp
mov
addl
test
out
mull
lea
ret
xchg
std
pop
and
std
jb
mov
sahf
jge
popa
aam
mov
or
jnp
xchg
testl
cwtl
rol
mov
jne
sbb
xchg
xchg
inc
nop
mov
xchg
push
in
xor
es
inc
adc
sub
in
clc
popf
mov
inc
pop
rclb
icebp
daa
aaa
dec
xor
xlat
loope
pop
or
sbb
xor
inc
xchg
jg
enter
subl
notb
in
js
add
leave
pop
aas
mov
cmp
mov
das
push
es
imul
add
adc
addr16
outsl
sub
jne
fadd
and
xchg
adc
add
fidivs
sbb
mov
mov
and
sub
or
pop
jbe
dec
sbb
leave
jno
int
mov
dec
data16
xchg
mov
jl
add
and
jge
rcll
sti
insb
pusha
sbbl
in
push
rorl
or
and
mov
cwtl
xor
xor
mov
insb
popa
ja
xor
sub
fldenv
cmp
repz
mov
imul
ja
stos
xchg
pop
jno
fsubrs
or
mov
fildll
push
adc
shll
test
imul
cmp
imul
sbb
cli
mul
mov
lcall
mov
push
aam
push
mov
mov
sub
adc
cmpsb
push
xor
xchg
icebp
sub
loope
insl
sbb
decb
in
jle
pop
xor
push
adc
out
pop
leave
mov
xor
and
int3
jbe
repnz
dec
pop
ja
mov
pop
jecxz
in
fs
cmp
jle
dec
stos
xchg
cmp
jmp
outsb
gs
lcall
test
mov
mov
arpl
push
sub
pop
daa
aad
and
jns
sbb
scas
push
push
stos
test
leave
sub
and
popf
decl
lds
xor
or
mov
movnti
in
and
add
andb
inc
xchg
cmp
sub
and
daa
sbb
jge
and
cmp
stos
lods
and
stos
adcl
insb
lret
out
incb
stos
push
lock
orb
or
cmp
xor
subb
aam
mov
adc
xchg
mov
mov
pop
je
cltd
xchg
sub
sarb
mov
cmc
pop
out
push
repz
add
mul
scas
mov
in
int3
xchg
xchg
jle
lahf
fidivrs
in
es
mov
add
int
xchg
push
imul
rorb
pop
rcr
cmp
pop
add
jle
sub
lret
adc
outsb
dec
js
dec
in
or
in
mov
mov
pop
or
xor
or
out
inc
into
mov
cmp
push
add
pop
adc
mov
fwait
mov
fstl
pop
mov
xor
pop
insl
icebp
inc
pop
cmpsl
fisubl
and
lea
fisubrl
test
push
jae
pushw
in
lahf
sbb
jne
stos
ficompl
push
mov
test
lods
in
dec
inc
xchg
add
insb
orb
mov
pop
push
xor
add
sbb
fdivr
sub
xor
xchg
sti
shll
insl
mov
push
inc
mull
and
dec
inc
shrl
arpl
mov
das
adc
cld
aaa
int
std
imul
cmp
in
out
mov
jns
cmpsb
mov
mov
iret
shlb
aad
in
jo
push
jle
movsb
arpl
xchg
xchg
lret
xchg
cltd
aaa
push
scas
scas
bound
jp
movb
mov
xor
or
inc
aad
int
test
fcmovbe
cmc
xchg
pop
enter
ret
nop
in
iret
mov
or
cmpsl
push
adc
dec
or
mov
lds
jmp
mov
cmp
loope
subl
sbb
mov
negb
and
xor
cmpsb
fisttps
pop
lcall
lcall
xchg
xor
dec
cmp
xchg
xor
sub
lea
mov
shlb
dec
dec
and
jmp
negb
sbb
insb
and
fsubs
adc
sub
jb
cld
in
int3
fwait
jnp
das
iret
mov
mov
cmpl
icebp
sar
mov
push
mov
loopw
sarb
loop
shll
push
lcall
popf
mov
mov
in
pushf
icebp
and
or
push
iret
xchg
inc
xchg
dec
pop
mov
mov
push
mov
jecxz
mov
sbb
gs
std
mov
orl
cmp
cld
int3
adc
jle
push
jg
jp
xchg
xlat
call
data16
sbb
mov
subl
jno
sbb
cmp
sub
xchg
jo
pushl
xor
jp
or
loope
shlb
cmp
xchg
iret
nop
xlat
adc
loope
add
xchg
insl
or
pop
out
es
insl
push
rcr
orb
and
sbb
or
push
push
in
sbb
stos
imul
mov
cmc
and
stos
mov
cld
lahf
stc
pop
jne
xor
inc
mov
lds
int3
adc
test
or
add
add
cld
jg
and
stos
mov
out
movsl
test
test
adc
sbb
push
add
push
ficoms
jl
xor
mov
divl
pop
sbb
popf
arpl
push
jae
mov
push
cwtl
enter
and
test
repz
in
sub
inc
xchg
jecxz
mov
int3
pop
jno
rolb
imul
dec
push
mov
mov
and
out
icebp
inc
repz
mov
xchg
ret
mov
dec
xorb
and
bound
pop
inc
out
xor
mov
or
out
rcrb
cmpsl
pop
jg
inc
rep
sub
push
iret
add
enter
and
dec
mov
inc
push
mov
jo
jl
stos
or
and
mov
adc
inc
fs
jecxz
das
lock
stos
adc
xor
cmp
push
out
mov
shrl
cmp
ret
sub
push
test
shlb
fmul
popf
add
push
jae
scas
and
outsl
shrb
inc
lods
or
add
fadd
xor
cmc
push
ds
mov
leave
sti
ja
mov
out
cwtl
inc
stos
mov
insb
ret
nop
push
ret
add
push
pop
ss
mull
pop
sbb
sbb
jl
adc
outsb
nop
std
pop
sub
icebp
repnz
iret
jo
aaa
call
xchg
jbe
test
jnp
push
stos
mov
mov
sbb
pop
daa
jno
test
arpl
les
xchg
add
subl
mov
mov
jmp
cld
repnz
js
enter
add
inc
or
fcoml
pop
sub
sti
jge
xchg
add
es
scas
cmp
cmpsb
leave
in
int
pushf
imul
call
int3
lret
pop
outsb
add
lret
add
or
push
shrl
hlt
fsubrl
mov
jo
pusha
sbb
into
push
xchg
jae
push
sbb
cmc
push
add
imul
jns
xlat
inc
fildl
fwait
xchg
nop
or
pop
aad
daa
jno
xchg
mov
rclb
out
iret
int3
adc
or
std
into
orb
mov
mov
mov
rclb
lock
cmpsb
jle
lods
inc
stos
movsb
loopne
push
orb
and
loop
jmp
lret
push
bound
bound
cmpsl
jmp
or
mov
mov
in
mov
inc
mov
out
mov
mov
adc
inc
pop
or
loope
push
xchg
mov
xchg
bsf
and
push
daa
fdivs
ja
ret
dec
inc
mov
push
je
into
decb
cld
insl
cltd
insb
xchg
in
xchg
cltd
mov
daa
cmpsl
jns
push
pop
xchg
rclb
jmp
or
adc
scas
pop
insb
inc
jne
int3
icebp
push
out
out
icebp
sub
nop
mov
imul
repnz
bound
push
xor
popa
adc
mov
vhaddpd
jle
cli
xchg
into
inc
dec
mov
inc
js
lock
and
push
pop
mov
and
ja
cs
in
sbb
loope
inc
pop
cmp
mov
out
ret
bnd
push
pop
fdivr
in
fcomi
mov
xchg
mov
arpl
push
outsl
cwtl
cmp
jl
loopne
int3
leave
or
clc
shrl
cmpsl
outsl
aaa
ret
lahf
xor
inc
fcomps
inc
leave
pop
cmpsb
xchg
cmp
jle
cmp
push
mov
addr16
sub
jg
mov
or
cld
dec
xchg
xchg
jg
jecxz
push
je
mov
or
xor
xchg
xchg
push
loope
es
mov
mov
dec
rolb
in
insl
push
mov
ret
aad
icebp
sahf
push
and
and
ss
sub
dec
sbb
cmpsl
fcmovnb
and
push
push
push
arpl
push
js
lcall
aaa
push
xchg
in
cmpsb
fwait
pop
pop
bound
sbb
jl
sbb
xor
pop
sub
shll
cmpsl
and
in
mov
sti
aaa
mov
fld1
sbb
nop
mov
cwtl
mov
jmp
nop
mov
outsb
icebp
in
fisubl
jno
push
pop
leave
jecxz
jp
adc
adc
ds
int
jg
lret
pop
arpl
popa
push
out
in
jne
loope
jno
add
xor
sbb
mov
mov
jno
insl
jns
pslld
lahf
test
stc
adc
xor
test
mov
inc
and
push
mov
add
pop
mov
mov
aam
scas
gs
pop
ds
or
and
imul
and
packssdw
or
xchg
jo
cmc
leave
in
jl
jnp
lods
sbb
xor
fsubl
jl
lds
call
mov
pop
ret
cwtl
call
dec
cli
imul
push
sbb
pushf
cld
and
or
and
xlat
test
addb
xchg
stos
lret
inc
aaa
push
push
mov
pop
out
mov
imul
fwait
xor
gs
mov
mov
js
sub
aas
mov
fs
test
rcll
data16
xchg
leave
sub
xchg
arpl
into
jg
add
and
in
cmp
inc
cli
hlt
lods
ficompl
hlt
into
imul
or
in
loopne
cwtl
mov
mov
movsl
mov
pop
inc
xor
addr16
adc
insb
sub
in
mov
lds
push
jmp
outsb
inc
call
add
dec
jp
xor
mov
adc
cli
jg
mull
enter
inc
dec
imul
xor
mov
adc
mov
idiv
cmpsb
testb
dec
xor
jecxz
lcall
xor
inc
jecxz
inc
hlt
shll
nop
in
shlb
dec
mov
lods
push
or
push
adc
adc
aam
rorl
mov
jno
push
ds
mov
and
pushl
mov
std
or
push
loopne
popf
movsb
cmp
jo
mov
and
daa
dec
add
xor
push
addb
insl
into
jo
adc
push
and
push
cwtl
movsl
push
adc
mov
into
ljmp
and
sbb
arpl
xchg
repz
divl
ss
cmp
dec
inc
jne
repz
out
hlt
loopne
enter
stc
sbb
dec
push
mov
cmp
mov
or
cmp
sub
mov
fwait
test
stc
sub
jns
int3
stos
pop
imul
stos
xor
arpl
push
sahf
dec
scas
leave
pop
pushf
lods
xchg
mov
sbbl
repnz
add
and
loope
icebp
pop
jns
fldcw
rcll
loopne
fistpl
stc
stc
ret
pop
scas
sbb
pop
rcll
mov
dec
xor
clc
inc
mov
xchg
pushf
and
jb
xor
fildl
mov
loope
mov
scas
andb
push
je
test
dec
sti
arpl
rorb
mov
inc
dec
dec
gs
mov
test
xor
sbb
ja
shlb
lock
test
aaa
or
outsl
mov
dec
cs
ss
data16
adc
outsl
mov
push
out
xor
cmpsb
cltd
add
test
invlpg
cmp
repnz
cmp
xchg
xor
aas
cmp
jp
ss
dec
repz
enter
test
mov
mov
inc
insl
jb
fs
cltd
xchg
cmp
mov
scas
add
mov
repnz
or
sub
insl
loopne
out
xchg
movsb
push
xor
sbb
stos
scas
aam
push
jno
inc
jnp
ss
xlat
lods
adc
dec
add
mov
cmp
or
je
sub
lods
sub
inc
out
je
sub
das
pop
mov
xchg
icebp
repz
or
jl
aam
ret
pop
sarb
dec
and
push
jo
test
sbb
jge
inc
cmpl
inc
add
pop
or
pushf
sub
xchg
sahf
rclb
gs
movsb
fisubrs
and
xor
lahf
xchg
and
cmpsb
pop
jns
mov
sub
cmpsb
loope
pop
pop
mov
leave
jl
stos
das
faddl
mov
rcrl
mov
scas
popa
cwtl
sub
adc
fmul
insl
test
lods
fimuls
sub
or
inc
in
pusha
xorb
mov
adc
sarl
inc
inc
sub
in
out
dec
mov
pop
aam
imul
jno
push
lods
psrad
idivb
add
or
xor
cmp
pop
repz
cmp
lahf
xlat
mov
sub
cmp
xor
xchg
cmp
adc
mov
fldl
ss
mov
clc
push
mov
xchg
mov
or
add
push
cmp
fadd
mov
or
dec
pushf
orb
idiv
pop
in
flds
insb
or
test
ja
cmp
push
stc
addr16
nop
xchg
lahf
rolb
gs
adc
and
test
jb
cmp
out
ds
int
mov
syscall
loope
test
xor
call
mov
leave
cwtl
mov
add
js
fdivrl
repnz
jg
insb
jae
outsl
pop
movsl
or
movsl
or
fs
les
cmpsb
inc
jecxz
xor
fld
roll
sbb
cmp
xchg
loopne
das
xchg
or
fdivrl
loopne
inc
loope
push
mov
sub
sti
inc
lret
fidivl
cmp
enter
int3
bnd
cmp
and
gs
pop
or
and
push
scas
mov
xor
rcll
pop
sarl
mov
fs
jbe
popf
fs
push
idivl
movsl
adc
fsubrp
mov
fsubrl
and
inc
insl
mov
fs
mov
insl
or
jnp
sarl
sti
fsubrl
adcl
jne
bound
stos
push
aas
ja
or
and
pop
repz
add
ds
out
fwait
push
jo
pop
cmp
cmp
or
mov
dec
movsl
sub
xor
sbb
leave
fisubs
icebp
ficomps
int3
sub
cmp
sbb
or
jmp
ljmp
ljmp
icebp
shrb
lret
fsts
test
stos
sub
mov
push
test
es
ficoml
in
push
jae
jno
fxtract
lret
xchg
sbb
add
adc
aad
pop
pop
and
stc
ret
lods
push
mov
iret
shll
xchg
pop
je,pt
inc
push
arpl
roll
pop
mov
sbb
and
push
sub
arpl
jg
iret
push
sbb
lahf
sahf
adc
divb
nop
or
mov
pop
jp
aas
stc
mov
push
out
mov
inc
mov
fiaddl
repz
push
mov
jg
movsb
sarl
xor
cli
mov
jle
mov
pop
popa
leave
mov
cmp
mov
cli
das
push
xor
inc
lcall
lahf
jnp
push
out
inc
outsb
add
jnp
jnp
pop
adc
jp
roll
adc
adc
testb
push
sub
xor
xor
hlt
mov
std
test
jnp
adc
imul
into
mov
cmp
jp
stos
xchg
add
dec
xorl
mov
out
adc
push
pop
gs
std
mov
push
fbstp
and
repnz
sarl
xchg
sbbb
jg
scas
out
nop
cmp
and
sub
call
lods
popa
cli
push
dec
in
xchg
ljmp
push
icebp
repnz
sahf
or
cmp
push
mov
mov
and
cmp
and
enter
mov
nop
lahf
xorb
adc
inc
je
test
movsl
xor
lret
leave
icebp
push
jecxz
cmpsl
into
xchg
out
ds
jns
loop
push
dec
mov
les
sub
test
inc
adc
out
jb
aad
inc
mov
stos
push
xchg
jnp
cli
in
jp
lret
pop
imul
xchg
imul
inc
cmp
cmp
daa
xchg
xor
mov
or
push
cs
adc
orb
or
xchg
sub
cmpsb
fnstcw
jnp
std
cwtl
fistpl
jl
mov
loop
sar
mov
push
push
imul
fdivl
fsubs
jp
fisubl
adc
cmp
jle
subl
push
aad
es
cmp
faddl
rolb
loopne
and
adc
and
mov
jns
xor
pop
dec
xchg
pop
into
fnstenv
dec
lods
sbb
or
xlat
imul
pop
jge
adc
repnz
sbb
jnp
in
pop
adc
shll
fistpl
push
aad
mov
popa
clc
cmp
sbbl
sub
mov
insb
rcll
pop
xchg
adc
mov
outsl
xchg
lret
hlt
mov
repz
dec
in
into
add
and
fistl
push
sahf
xchg
rcll
daa
or
xor
xchg
mov
movsl
incl
sti
cmp
das
lcall
sub
mov
rcll
out
adc
jnp
sti
cmpl
and
outsb
inc
lea
mov
fiaddl
aad
mov
mov
nop
sbb
fstp
mov
push
pop
dec
push
jge
mov
mov
call
mov
mov
std
test
stos
or
or
dec
mov
push
add
stos
dec
stc
subl
rorb
push
push
scas
mov
shlb
xchg
shl
mov
xchg
test
jne
adc
std
and
jmp
push
jg
out
xchg
jno
adc
cmp
sbb
cmp
mov
fs
mov
pop
lock
call
jg
and
fisubl
scas
mov
add
jne
sub
lret
cmp
sub
int
dec
lcall
sbb
dec
cmp
or
sbb
mov
jle
pop
mov
sar
fs
in
arpl
sub
aad
xchg
je
pmuludq
mov
ljmp
popa
mov
sbb
xchg
add
test
xchg
cmp
in
add
icebp
xchg
mov
inc
or
aam
sbbb
push
or
pushf
ret
das
jle
outsl
inc
cmpsb
daa
adc
je
std
popf
lcall
into
pusha
or
clc
jnp
fs
mov
push
lods
jl
sub
bswap
stos
adc
sbb
addr16
mov
inc
dec
out
js
jnp
fnstenv
pusha
popf
test
je
scas
stc
popf
stc
fadd
int3
ret
aad
mov
cltd
les
sbb
cltd
push
fldcw
aam
sbb
push
das
fstpl
adc
mov
jmp
out
fwait
movsl
mov
or
adc
jns
sahf
xchg
jae
cmc
mov
lods
mov
cltd
or
add
jno
push
push
inc
jge
xchg
push
push
lret
adc
fsts
sub
pop
mov
jmp
ljmp
in
mov
fisubrl
cltd
adc
jge
push
push
sub
cmp
dec
popa
xchg
jne
ljmp
scas
mov
jp
mov
pop
aaa
dec
pop
dec
pop
incb
fdivrl
push
int3
jl
xchg
sbb
jg
mov
cmpsl
bound
out
jle
adc
adc
pop
mulb
dec
and
cltd
mov
or
dec
inc
insl
fs
mov
push
lea
mov
mov
or
negb
fs
lods
inc
push
adc
or
test
and
xchg
ss
imul
xchg
inc
fidivrs
push
mov
dec
ficoms
cmc
cmp
pop
lahf
jb
inc
enter
pop
lock
mov
xchg
or
or
cwtl
mov
pop
jp
fldcw
cmpsb
loope
insl
stos
sub
out
shr
ret
cmp
cld
cmpsl
fisubrl
pop
sbbl
iret
stc
int
and
cmp
cmp
enter
aas
lods
dec
lret
idivb
fists
sbbl
out
mov
andl
les
mov
int
outsb
jecxz
jns
pop
sub
ret
sub
or
shll
push
xor
cld
inc
mov
sbb
inc
dec
push
xchg
pop
test
sub
and
into
call
clc
push
jmp
cmovnp
mov
test
nop
je
xchg
mov
int3
adc
xchg
mov
mov
imul
ja
ffree
cmp
fbstp
jl
add
addr16
inc
repnz
xchg
shrb
addb
mov
jo
bound
jl
mov
sub
cmpsl
inc
pop
inc
add
sub
sub
inc
dec
mov
pop
sbb
je
int
sbb
pop
filds
pop
or
iret
mov
jp
ja
sub
mov
or
aaa
adc
nop
cld
fs
leave
es
cmp
enter
lods
cwtl
push
xlat
rcpps
sub
iret
cli
jnp
iret
cld
dec
mov
or
stos
sbb
dec
aam
mov
dec
pop
mov
lods
pop
jae
mov
pop
pop
sbbb
dec
mov
sbb
mov
and
adc
lret
sub
shrl
lcall
mov
xor
mov
ljmp
pop
push
sbb
sbb
popa
fiaddl
icebp
mov
in
in
sbb
icebp
inc
insb
mov
out
xor
push
rcrb
jo
loopne
clc
pop
leave
out
sbb
lods
loop
mov
jnp
inc
push
fstp
adc
sub
xchg
ds
imul
inc
and
cmp
cwtl
pushf
daa
sub
jae
lea
or
pop
das
lea
arpl
mov
lret
push
imul
mov
imul
das
out
xor
or
dec
pop
pop
sahf
cmp
dec
daa
shrl
adc
sub
aas
ret
lods
andl
loope
mov
and
mov
cmp
movsl
test
fmuls
pushf
imul
test
loop
or
push
pop
or
jl
xchg
or
out
addr16
je
push
addr16
fdivrs
sbb
in
mov
sub
jmp
push
test
xor
mov
or
pop
mov
loop
xlat
insb
jno
add
cmp
pop
mov
xor
cmc
mov
lret
fnsave
stos
iret
bound
cmp
int3
xchg
or
inc
adc
lods
jle
mov
repz
add
mov
nop
mov
icebp
or
push
push
dec
push
ds
push
cmpsb
lcall
mov
cmp
jno
push
mov
cmp
mov
les
add
mov
aam
add
sub
add
stos
fs
cld
or
aas
and
cmpsl
mov
scas
and
and
sub
adc
xor
fidivrs
or
lea
cmp
pop
test
inc
jle
inc
gs
sbb
insl
sub
pop
into
inc
pop
and
iret
shl
pop
loop
mov
das
inc
adc
int3
push
mov
jo
rcrl
and
out
scas
popf
sub
sahf
out
push
cmp
test
add
mov
add
jbe
pop
cmp
shlb
adc
inc
jmp
jl
inc
mov
push
fidivrl
inc
ret
lahf
inc
fwait
mov
push
dec
int
test
mov
sahf
popf
adcb
orl
cmp
cmp
push
xchg
mov
add
imul
dec
lea
inc
loop
lods
pop
arpl
inc
lods
mul
add
and
shrb
mov
push
or
jns
cmpsb
jbe
or
jge
push
clc
and
mov
mov
xchg
lea
clc
jnp
dec
call
test
pushf
xor
adc
mov
sub
adc
cmp
jno
popa
movsb
cs
sbb
adc
cld
int
mov
xor
push
pop
or
xchg
aam
pushf
add
repz
dec
mov
jle
mov
jbe
add
xchg
popl
out
xor
add
mov
arpl
xor
mov
mov
xor
pop
or
add
pop
into
enter
in
or
addl
dec
xchg
fmulp
das
xor
jno
add
dec
pusha
pop
mov
fidivl
sub
ret
push
out
std
sbb
mov
mov
ficoml
xchg
shlb
loop
movl
sahf
pusha
mov
dec
cmp
and
lret
jno
repz
fimuls
or
cmc
test
insb
inc
in
jl
scas
xlat
push
mov
inc
pop
mov
mov
push
jb
xchg
aam
lret
xchg
fcmovnb
or
decl
adc
ret
mov
or
call
fmull
fs
sar
add
push
mov
imul
xchg
rclb
movzwl
fbld
cmp
in
lock
decb
sbb
and
push
add
loop
dec
mov
subb
ret
add
lret
xchg
ficoms
push
mov
into
pop
mov
add
push
push
mov
in
out
jno
pop
loopne
cmp
adc
push
pop
popa
inc
push
mov
out
rcrb
mov
fdivs
adc
pop
cmp
jmp
sub
flds
pop
pop
sub
pushf
dec
out
add
jmp
or
add
not
stos
jb
ljmp
or
fnstcw
dec
jne
inc
cmp
inc
js
push
inc
in
xchg
out
xchg
call
xchg
cmc
xchg
lea
mov
sti
int
mov
add
cmp
sarb
lods
mov
fadds
xchg
cmp
mov
xor
add
fnstcw
out
jge
movsb
add
cwtl
test
and
pop
in
orb
cmc
and
cmp
stos
das
test
and
or
fst
inc
aaa
mov
jbe
aam
clc
lds
mov
jno
sub
cmc
std
outsl
add
add
pop
dec
and
sub
int3
adc
inc
cmp
or
and
xor
cs
iret
enter
fidivs
mov
movsb
adc
jae
xchg
loope
xor
movsb
or
push
mov
sarl
outsl
shlb
adc
hlt
shrb
lods
inc
inc
ljmp
mov
jge
jno
xchg
sbb
mov
inc
cmc
cmpl
aad
inc
mov
cmp
inc
outsb
mov
jno
pop
inc
inc
test
push
cli
xchg
shlb
sti
sub
jecxz
lret
push
aaa
xchg
std
inc
ret
sub
pop
stc
aaa
push
mov
scas
rcrb
aaa
pop
mov
or
lods
xlat
pop
repz
fcmovne
clc
stos
xchg
or
pop
and
xchg
dec
add
adc
lcall
inc
cmp
inc
fmuls
and
push
out
loope
dec
xchg
or
jns
and
mov
push
pop
sbb
add
push
mov
pop
cmp
jae
adc
cld
add
shrl
test
in
dec
fwait
sbb
sub
xchg
sub
out
fucomip
add
bound
out
out
sub
adc
or
xor
adc
in
lahf
cs
push
in
jp
push
push
movsb
adc
xchg
xor
mov
inc
test
pop
pusha
shr
mov
test
push
clc
or
scas
fsubr
push
cmp
test
cmpsb
out
push
lock
xchg
jle
data16
dec
sar
or
jb
dec
mov
dec
dec
ss
xor
out
adc
fisttps
xor
mov
jbe
sub
xchg
decl
fimuls
pop
out
mov
and
jl
movsl
pop
and
jne
sub
int3
add
jmp
dec
popa
ret
pop
jo
fwait
sbbl
inc
push
ret
or
ds
addb
nop
pop
mov
lds
pop
xor
subb
aad
subl
fistps
mov
nop
fisubl
cli
push
mov
loope
pop
sbb
jb
mov
inc
xchg
popa
lret
push
xlat
ljmp
jg
lcall
adc
incl
push
ja
pop
cmp
filds
cmp
dec
add
lock
adc
mov
xchg
xor
ja
daa
cmc
pop
imul
loopne
cmp
and
popa
aas
dec
and
dec
ret
stos
dec
push
inc
or
xor
sub
jno
mov
lds
inc
lcall
mov
and
subb
and
jge
lret
lcall
dec
jmp
mov
enter
aaa
pop
pop
adc
in
cld
outsl
push
je
and
xchg
mov
push
mov
pop
inc
pop
pop
in
mov
adc
push
jle
adc
pushf
sub
or
pop
jb
push
testb
enter
sahf
mov
jle
cmovl
xchg
scas
into
or
cmpsb
fidivrs
sahf
jb
ja
push
outsl
pop
fisubrs
xor
sub
shlb
sbb
lea
cld
or
lods
mov
repz
add
jo
test
add
sub
jbe
push
sbb
fs
dec
push
push
push
int
mov
es
dec
ficompl
inc
std
lds
les
fisubs
out
adcb
and
imull
or
xor
stc
jl
rcrb
test
mov
int
ficoms
pop
add
cmp
pop
out
xor
cmp
pop
fistps
jmp
data16
inc
movsl
jmp
xor
shlb
pop
ds
jns
sub
inc
popa
jge
fwait
pop
xchg
cmp
ljmp
scas
adc
into
xor
ss
aad
into
xor
insl
dec
pop
push
ljmp
mov
ror
pop
push
push
push
xchg
daa
stc
stc
xor
movsl
addb
adc
push
das
pop
push
test
ljmp
mov
in
adc
std
jmp
push
mov
mov
mov
lcall
cmpsl
or
mov
adc
out
sahf
pop
xchg
dec
mov
pop
inc
adcl
sbb
imul
dec
adc
std
dec
into
lea
hlt
and
jg
jns
dec
mov
jg
and
cmpsl
arpl
jbe
stos
cmp
pop
lea
xchg
pop
dec
or
ds
mov
push
sub
call
push
ja
nop
fwait
mov
dec
and
rcrb
pop
inc
mov
push
test
xchg
mov
leave
cmpsb
adc
or
hlt
pop
lea
fcoms
mov
shlb
dec
mov
xchg
mov
mov
mov
jmp
and
imul
sub
mov
mov
inc
inc
out
add
sbb
xchg
sarl
jbe
idiv
ja
sub
popa
lea
std
addb
mov
inc
or
ja
mov
pushf
mov
xchg
sahf
sbb
sbb
pop
mov
movsl
cmc
jle
add
cs
fscale
adc
call
jnp
nop
fwait
test
mov
popa
outsl
lahf
mov
les
inc
loopne
icebp
out
pop
sub
jnp
jl
into
push
repz
adc
fwait
inc
adc
mov
out
ds
push
stos
leave
fstl
mov
fs
jge
loope
icebp
cmpsb
pop
fsubr
adcl
movsl
outsl
nop
add
cmp
icebp
jl
out
lcall
lods
outsl
and
xchg
mov
fucomip
xchg
adc
sahf
nop
outsb
and
aam
outsl
mov
xchg
xchg
cmc
cmp
pop
mov
mov
cmpl
xchg
push
dec
mov
adc
mov
xchg
sbb
mov
mov
jle
jge
ret
addr16
rorb
je
pop
ja
and
pushf
pop
pop
xor
dec
out
mov
stos
cmpsb
sub
mov
test
mov
cltd
popa
fs
pop
sbb
mov
pop
jecxz
gs
cmpb
test
cmpsb
test
adc
lods
dec
dec
pop
fadds
test
outsb
push
aad
ds
icebp
cmp
mulb
filds
sbbb
cmpl
mov
test
addr16
dec
jl
out
push
sub
aaa
or
mov
ret
pop
lea
cmc
mov
mov
and
aas
leave
xchg
inc
push
outsl
jg
cld
out
push
add
sbb
andl
and
out
fisttpl
adc
inc
rorl
enter
xor
push
std
mov
cmpb
popf
rcr
ljmp
jge
jecxz
mov
jge
int3
test
xchg
fwait
movsl
mov
fwait
mov
inc
scas
mov
mov
adc
dec
mov
sbb
lods
add
das
ret
cli
cmovns
or
xchg
and
push
ljmp
pushf
dec
pop
jb
jmp
lret
ds
ror
cld
mov
lods
sub
fwait
cwtl
and
es
inc
pop
sub
icebp
adc
or
mov
aad
xchg
nop
push
push
popl
fcmovne
out
movsb
jl
repz
push
std
scas
int3
fnstenv
fistpll
lods
dec
push
and
addr16
inc
sbb
cmp
clc
cmp
mov
sbb
lods
pop
mov
add
xchg
push
cmp
mov
inc
jb
mov
sahf
or
sbb
fiaddl
sub
mov
mov
adc
mov
rclb
push
movsl
xchg
mov
cltd
cmp
out
adc
icebp
jo
and
mov
repnz
out
push
and
push
xchg
mov
push
fwait
sbb
divl
sarb
jbe
outsb
lea
inc
pop
xor
psubsw
lods
int3
push
dec
xchg
sub
jb
scas
ja
in
test
outsl
mov
jge
out
lods
sub
hlt
dec
push
sub
or
cmp
addb
out
pop
ljmp
fists
add
cmp
notb
aas
mov
ret
cld
mov
sbb
push
pop
xchg
mov
popf
push
sarb
arpl
rol
movzbl
lcall
popa
xor
fcoms
jle
xchg
xor
xchg
leave
mov
sub
xchg
mov
mov
fmulp
mov
shl
fists
jb
add
xor
xor
sub
imul
hlt
jbe
cmp
xchg
cmc
mov
dec
xchg
or
pushf
movsl
dec
in
jnp
dec
cmpsb
lea
push
xor
mov
cmp
js
test
pop
push
gs
jl
xchg
cmp
sbb
push
int3
and
cmp
push
and
subl
jb
mov
xchg
fbld
imul
in
loope
jae
insl
cmpsb
fisttpll
add
jge
and
and
test
leave
outsb
int3
ja
inc
xor
shrb
cmp
mov
mov
lods
cmc
in
fld
ret
sbb
or
fwait
or
inc
lods
sub
xlat
filds
push
jne
sub
cmc
mov
xchg
adc
cmpb
dec
cli
gs
stos
mov
test
movsb
and
push
jmp
pop
add
cmp
movsb
repz
jo
mov
mov
fsubrl
ja
or
mov
outsb
and
pusha
neg
lods
and
dec
aaa
xchg
out
push
addr16
movsb
pop
lods
aas
stos
cmpl
jle
mov
loop
ret
rolb
or
cmp
pop
inc
jl
jae
stos
push
mov
xor
push
shrb
or
pop
mov
pusha
sub
mov
sbb
jnp
mov
rcrb
push
das
cmc
movsl
sub
jg
in
push
ret
test
push
in
cmp
stc
int
push
or
fcom
mov
in
and
rorb
fcoml
dec
mov
cmc
xchg
mov
in
notl
shll
enter
jne
inc
xchg
les
sti
xchg
jp
xchg
jge
in
ljmp
xchg
in
or
fwait
imul
movb
mov
pusha
testl
jns
dec
mov
nop
inc
in
cld
hlt
mov
mov
scas
insb
and
or
ror
stc
cwtl
sbb
sbb
pushf
jno
shll
mov
aam
push
xor
push
pop
xchg
adc
mov
xchg
adc
mov
loope
inc
push
or
push
adc
push
dec
stos
int3
test
push
xor
xchg
int3
hlt
arpl
push
shl
data16
push
popf
inc
test
push
xor
mov
lret
shr
and
jb
push
mov
sub
jns
and
addr16
loop
fs
in
inc
cmp
stos
sub
mov
xor
cwtl
push
imul
and
sub
imul
sarl
into
pop
jo
dec
mov
lcall
mov
pop
inc
adcb
adc
insb
sbb
movl
mov
hlt
cmc
outsb
lock
mov
xor
out
lds
or
pop
fiadds
int3
pushf
adc
into
int3
mull
xor
xchg
fcmovnb
pop
adc
sbb
push
in
mov
xchg
loop
xlat
mov
push
sub
push
or
frstor
ret
sub
sub
sbb
cmp
jbe
lahf
add
sub
lahf
into
and
shlb
into
xchg
mov
sub
adc
lods
adc
xchg
mov
std
das
mov
shrl
xchg
rcrb
loopne
dec
jmp
in
dec
push
pop
adc
add
mov
jno
pusha
aad
rcl
mov
mov
adc
stos
add
jno
aaa
adc
xor
inc
data16
sahf
mov
adc
jge
imul
loope
dec
dec
pop
daa
xchg
aaa
sbb
mov
iret
xor
ud2
mov
mov
mov
jns
fisubrl
imul
push
mov
jbe
frstor
psrld
int3
jb
mov
inc
push
fcoms
or
and
add
add
insb
xchg
test
lahf
pop
sbb
test
jp
xor
inc
je
insl
push
mov
imul
sbbl
out
mov
call
jp
jno
sbbl
inc
mov
inc
push
sbb
mov
mov
push
jo
dec
inc
rolb
out
mov
inc
or
mov
adcb
inc
sub
or
and
cmp
mov
mov
adc
out
dec
loope
mov
aad
push
inc
mov
fldl
pusha
arpl
sar
ljmp
push
mov
sub
inc
add
add
or
adc
inc
repnz
rorl
dec
insl
xor
popa
fcom
push
je
mov
cwtl
xor
mov
out
add
test
pop
and
xchg
sbb
stc
add
cli
sbb
iret
adc
das
pop
mov
fcoms
addl
mov
pop
adc
inc
jp
add
addr16
xor
cwtl
lcall
in
xchg
xor
cmc
aas
stos
test
leave
rclb
pop
jb
or
lock
cmc
movsl
insb
orb
or
and
popf
jae
xchg
clc
mull
cmpsb
cmp
jno
aas
fucom
pushf
dec
add
or
ljmp
mov
xchg
xchg
lods
push
movsl
sarl
add
fs
out
jbe
les
xlat
sbb
fucomp
nop
icebp
das
inc
add
repz
daa
push
jnp
ror
xor
jne
fcomps
mov
movsl
arpl
nop
mov
dec
dec
mov
lock
sub
in
sahf
flds
inc
outsl
ja
out
mov
adc
fistps
sbb
popl
in
insb
aam
jmp
rcl
dec
mov
jmp
mov
mov
pop
jo
sbb
ja
and
cmpsl
mov
jecxz
into
mov
cld
inc
aad
in
xchg
xor
xchg
add
sti
out
sbb
mov
inc
jmp
xor
mov
dec
jne
cmp
shrb
or
cmp
jp
xchg
adc
add
jb
lahf
lods
iret
fcmovu
xor
inc
mov
pop
or
push
gs
dec
mov
add
inc
out
rcrb
mov
lods
add
sbb
mov
xor
ret
jne
jnp
and
mov
cwtl
pop
push
psraw
push
fstl
in
in
xor
adc
scas
push
in
xlat
mov
jl
xlat
add
addb
bound
xchg
cltd
pop
dec
inc
or
xor
testl
cltd
fdivrl
and
fistl
pop
bound
push
jo
out
mov
sbb
xchg
xchg
push
push
lahf
addr16
jle
cli
xchg
ret
xlat
stc
scas
addr16
popf
pop
iret
addr16
je
fsubrs
fdivs
and
test
shlb
leave
out
adc
scas
push
add
adc
cld
ret
bound
mov
insb
sbb
cmp
inc
out
sbbl
mov
jmp
loope
push
sub
mov
xchg
push
rorb
test
inc
movsb
lods
in
jo
adc
and
cli
scas
fisubs
rcr
std
lods
pop
sub
push
enter
add
repnz
lret
adc
into
arpl
jecxz
mov
cwtl
and
mov
adc
push
dec
mov
cli
adc
xchg
add
imull
ret
sub
loop
xchg
adc
xchg
sub
mov
mov
xlat
fstps
outsb
pop
cmp
iret
add
and
pause
out
sbb
lods
sti
or
cwtl
outsb
xchg
imulb
dec
in
cmpsb
rcl
call
scas
and
jnp
enter
inc
addb
pop
xor
mov
sub
cmp
sbb
adc
fcom
mov
sbb
lea
and
mov
xchg
sahf
or
jle
pop
inc
in
or
insb
test
aas
dec
mov
out
shl
cmp
and
inc
test
rcrb
inc
in
in
mov
dec
or
ja
inc
fsts
jle
mov
xor
lods
push
sbb
lahf
sub
pop
fadds
mov
lret
mov
and
inc
cmp
mov
and
hlt
adc
outsb
adc
loope
fwait
jge
decb
pop
push
popf
frstor
lea
dec
js
gs
dec
sbb
xchg
outsb
lds
sbb
data16
test
push
push
ja
xor
lods
daa
cltd
ljmp
iret
mov
lea
shrl
in
cld
aas
sub
mov
sbb
push
sbb
cmp
ss
movsl
mov
dec
fsubl
and
dec
and
fidivl
or
and
jb
adc
lret
adc
xchg
mov
add
jbe
xchg
out
jge
das
fcomi
push
xchg
sub
jp
add
fsts
cmp
mov
xor
es
mov
fldl2t
sub
sub
pop
mov
xlat
pop
push
push
mov
add
jg
inc
jbe
mov
lods
lods
and
fsubrs
aas
mov
mov
jne
test
ljmp
negb
mov
pop
add
sbbl
push
icebp
pop
pop
dec
cmp
push
rcrl
scas
je
xchg
lods
mov
rol
push
and
cli
dec
sbb
ds
shll
ss
cmpsl
sbb
xchg
icebp
std
aaa
mov
int
sahf
inc
aad
jns
fcompl
jle
stos
add
jne
mov
cli
nop
lock
clc
xchg
mov
jge
push
fidivl
push
icebp
mov
add
mov
pop
sub
mov
leave
jp
dec
popf
adc
shrb
nop
fs
adc
lods
out
jle
sbb
push
das
xchg
mov
or
int3
lds
cmpsb
sub
stos
arpl
fisubrl
sahf
leave
push
jmp
xchg
fdivrl
out
push
jnp
imul
sub
inc
outsb
xchg
sbb
sub
ljmp
inc
xchg
push
mov
jp
aaa
ja
pop
pop
call
rorb
fsubs
ds
cmp
mov
inc
xor
lock
test
fcoms
adcb
or
jecxz
mov
xor
xchg
fsubl
std
andl
shrb
das
lds
outsl
notw
dec
push
pop
jo
push
mov
and
dec
addr16
js
mov
mov
xchg
cli
cmp
lods
fsubrp
cmp
push
push
cmpsl
push
pop
in
xor
insb
xchg
mov
scas
flds
sbb
jno
ljmp
mov
sti
mov
add
out
repz
movsb
hlt
cwtl
repnz
xchg
mov
push
mov
xlat
je
gs
jnp
mov
addl
lds
loop
mov
cld
push
outsl
bound
push
and
lret
pop
xchg
insb
cltd
iret
dec
xchg
xor
in
out
mov
mov
fisttpl
jg
jnp
sahf
sti
adc
adc
fiadds
jge
pop
int3
lods
adc
push
cmp
push
stos
pushl
lahf
mov
cwtl
dec
push
bound
inc
into
jns
dec
and
xchg
push
push
das
inc
data16
cmp
adc
mov
jg
xchg
xor
stos
jb
jle
out
jmp
mov
mov
mov
arpl
or
testb
lcall
sbb
or
fcmovnb
popf
mov
lahf
xor
sub
xor
pop
or
dec
jmp
jnp
sub
cwtl
repz
fadds
test
mov
test
jg
push
aam
ljmp
jns
cmpsl
ja
mov
mov
cwtl
idivl
jl
sti
fistl
loope
fs
enter
aam
add
cmp
daa
sub
xchg
fcmovnbe
les
fdiv
jle
loopne
push
dec
lods
scas
or
and
mov
gs
int3
dec
inc
add
cmp
lret
not
mov
inc
aas
out
and
or
xchg
prefetcht2
mov
cmp
adc
ss
sub
clc
dec
adc
adc
sub
dec
xchg
push
and
mov
lret
divl
jl
pushf
push
dec
pop
jecxz
sub
ja
add
mov
push
dec
adc
xchg
jae
cmp
jp
jle
loop
add
out
cmp
xchg
pop
cmp
mov
loopne
sub
repz
jae
push
sbb
shll
incl
pop
sbb
cmpsb
jne
clc
das
lea
jp
adc
movsb
ds
xchg
dec
xor
jl
and
pushf
pusha
pop
or
or
aam
fistpl
xchg
lock
iret
inc
push
insb
jmp
jl
mov
or
in
sbb
aad
aaa
jge
adc
jne
xlat
add
push
mov
mov
xorl
push
in
movsb
call
aas
xchg
and
jle
sbb
pop
xchg
mov
stos
push
sub
push
mov
dec
cmc
data16
fwait
cmp
fidivrl
xlat
sub
and
out
mov
xorl
or
add
jmp
subb
sub
push
movsl
imul
es
mov
movsl
rclb
mov
add
push
push
jb
cmc
loope
mov
subb
out
cmc
std
cmp
mov
cld
mov
cmp
mov
lret
xchg
mov
adc
cmpsl
scas
pop
lret
add
fnsave
call
insl
clc
mov
aam
ljmp
in
mov
mov
jnp
fwait
jae
das
jmp
dec
and
sub
pop
jne
nop
popa
test
mov
insb
inc
cmpsb
sbb
lret
and
cld
push
dec
fdivl
out
xor
jmp
iret
jge
mov
inc
or
leave
orl
push
pop
fsts
jne
outsl
jne
sti
jge
nop
and
das
or
mov
ss
sub
xchg
ret
or
mov
and
ljmp
dec
cmp
lcall
jns
mov
sbb
dec
adc
xor
mov
xlat
mov
aam
jne
pop
jmp
xchg
stos
jle
add
out
jmp
push
adc
mov
push
sub
inc
mov
test
xchg
mov
push
shr
loopne
out
push
sbb
pusha
add
les
enter
xor
inc
ficoms
jp
in
mov
sub
outsb
loope
jg
imul
sub
and
push
outsl
shrl
add
pushf
jmp
pop
dec
mov
das
or
jae
pop
fimuls
ret
shlb
inc
xchg
ret
and
pop
jecxz
push
mov
lea
adc
cmpsb
or
adc
sbb
stc
cmpsl
popf
xor
es
test
outsb
xor
mov
push
or
mov
mov
mov
in
jl
cmpsl
cmpsl
inc
inc
xchg
ret
mov
cmc
sub
addl
xor
jne
add
inc
xchg
xor
fisubrl
stc
jecxz
add
push
xchg
les
in
jl
sbbb
divl
cld
ret
inc
jl
adc
fwait
dec
sti
add
pop
movsb
push
sti
xchg
imull
icebp
aad
loop
add
movsb
cmc
outsl
cmp
outsl
clc
cmpsl
lret
pop
xor
cmp
stos
outsb
mov
push
clc
aad
mov
inc
jbe
dec
ficompl
mov
dec
outsb
cwtl
loopne
mov
sub
fwait
dec
fldl
mov
fsubrp
jmp
cmp
jmp
sub
mov
mov
lods
mov
add
inc
xchg
ret
inc
adc
xchg
or
nop
negb
push
andb
cmpsb
push
arpl
cmp
pop
lock
cmp
insl
pop
xchg
lret
pop
add
iret
jle
sub
mov
cmp
jecxz
push
push
xchg
push
xchg
cltd
nop
lcall
push
adc
cmp
into
mov
rcll
mov
pop
dec
add
cmpsb
lods
aam
mov
daa
dec
sarb
push
sbbl
or
or
mov
push
add
sti
add
xor
sub
jecxz
dec
lcall
sbb
repz
and
addr16
ja
sbb
repnz
sbb
pop
out
sub
inc
cwtl
sbb
nop
daa
inc
das
adc
jne
jge
sbb
fcompl
lock
inc
pop
insb
mov
mov
lock
andl
add
and
es
pop
mov
adc
rorb
int
xor
pusha
inc
stc
mov
lret
or
pop
pop
xor
inc
and
imul
scas
xchg
outsb
sahf
push
jge
adc
dec
arpl
mov
pop
gs
mov
cmp
repnz
mov
out
icebp
mov
out
mov
test
in
inc
xor
push
xchg
push
mov
int
push
mov
push
lods
pop
push
ljmp
mov
xchg
mov
ret
ret
push
xlat
or
loope
xor
ljmp
adc
lea
or
jno
sti
lods
into
jecxz
mov
jmp
loop
cmpsl
stos
add
pop
cs
imul
test
push
xor
xchg
add
mov
in
cmpsl
jne
cmpb
imul
fisttpll
sub
dec
les
xchg
out
mov
lcall
fiadds
mov
adc
mov
xlat
jp
repnz
push
dec
lcall
and
dec
fstpl
int3
cmp
movsl
test
shlb
fstps
or
sahf
cli
xor
leave
mov
mov
sub
mov
lods
mov
add
int3
rclb
pop
and
mov
adc
cmp
hlt
or
in
les
mov
int3
fldenv
xchg
mov
cld
je
mov
jg
jbe
mov
pop
vdivsd
shl
sbb
adc
shrl
loopne
jmp
fdivr
push
pop
jp
in
popa
sti
fwait
mov
repz
ljmp
push
je
inc
enter
adc
fsincos
lods
scas
lret
push
inc
sbbl
mov
xchg
or
push
sub
xor
mov
outsl
pop
inc
stos
dec
fstpl
lea
pop
loopne
outsl
sub
mov
push
mov
cmpsb
adc
call
repz
test
xor
xor
add
inc
and
xchg
in
in
xchg
stc
lret
and
add
fs
int3
xchg
movsb
inc
pop
mov
xor
add
daa
popa
loopne
aam
out
xchg
daa
add
and
test
cltd
push
pop
out
dec
sahf
push
mov
outsl
lahf
pop
and
ja
jo
jno
and
mov
cs
push
cli
setle
add
ljmp
idivl
sbb
ficompl
lahf
int
stc
insb
aad
jmp
sbb
or
sub
mov
popa
cmp
dec
mov
orl
scas
add
repnz
push
jbe
lds
jns
jge
popa
fsubrl
or
aas
pop
outsb
jne
dec
js
mov
xchg
push
pop
lret
stc
rolb
test
out
pop
jne
and
inc
cmpsb
mov
jg
ss
jg
lods
lret
orl
mov
xchg
or
roll
cmpsl
orb
pop
movsb
out
jno
test
add
insl
cmp
jmp
sub
aaa
xchg
push
pop
andb
push
movsl
neg
stos
fsubrl
adc
ror
push
int3
xchg
push
ret
inc
mov
xor
push
push
idivb
gs
into
pop
or
ljmp
dec
dec
mov
mov
enter
mov
adc
xchg
cld
push
lods
pop
scas
js
pop
js
mov
subb
pop
addr16
in
pop
arpl
into
pop
lock
stos
jo
stos
out
inc
and
stc
lock
je
add
xor
jecxz
sbb
push
sub
loope
push
jg
inc
add
adc
push
and
bound
and
sbb
push
push
loopne
cmp
out
and
mov
ja
imul
pop
and
iret
scas
std
sub
sbb
lods
pop
stos
int3
in
xchg
jmp
cmp
inc
js
sub
add
lret
mov
mov
xor
sub
pop
xchg
cmp
lret
jmp
sub
pop
mov
mov
dec
push
fmuls
les
xchg
mov
test
aam
pop
popa
or
inc
cmp
jnp
repnz
lret
cmp
das
dec
push
test
xchg
or
push
mov
in
loopne
in
repz
cmp
dec
sbb
or
push
pop
pusha
sbb
jp
test
fisttpll
insl
dec
fs
fwait
pop
xor
jecxz
icebp
mov
mov
mov
in
out
and
and
mov
mov
jl
mov
lahf
insb
outsl
test
push
sub
cmp
leave
dec
mov
adc
inc
cltd
cmc
jl
mov
das
add
and
jnp
xor
mov
xor
jecxz
dec
jno
lods
adc
and
lea
push
loop
pop
inc
mov
or
adc
add
sbb
adc
aad
cltd
lret
xchg
xor
add
cmp
pop
dec
adc
outsb
mov
xor
and
adc
jg
fnstenv
into
out
push
push
mov
and
test
jo
pop
pop
lds
lahf
xchg
mov
gs
mov
inc
jbe
jno
dec
js
xor
jnp
xorb
inc
popa
sub
push
xor
cli
and
out
sbb
jg
cmpsl
lret
jns
xor
mov
push
loop
and
out
ret
xchg
mov
adc
mov
lahf
imul
push
adc
jbe
adc
hlt
mov
mov
adc
cmp
imul
sub
lret
lcall
push
or
adc
arpl
pop
sbb
xchg
jge
cwtl
cld
jle
push
rol
addl
and
jecxz
std
xor
das
sbb
push
out
sub
xor
mov
fstl
xchg
jle
jb
fildl
push
into
test
fstpt
jne
push
subl
das
xchg
cs
mov
inc
or
cmc
arpl
and
sub
push
fistpll
adc
scas
mov
xor
rorb
xor
cld
divl
cmp
in
outsb
js
and
cli
jno
subl
les
mov
push
inc
pop
mov
add
jns
and
push
add
jbe
movsb
mov
adcl
adc
insb
xchg
mov
xchg
or
aaa
pusha
addr16
pusha
mov
dec
cld
xchg
scas
rol
sbb
std
mov
loopne
mov
ja
inc
xor
lds
dec
clc
pusha
sbb
push
push
sbb
sbb
dec
mov
daa
push
jnp
pop
movb
jo
scas
rcll
jl
mov
inc
lret
ret
sbb
scas
or
mov
jmp
scas
or
xor
je
dec
adc
dec
outsb
stos
pop
adc
cmp
fnstcw
dec
mov
dec
fcomps
pop
stc
mov
mov
xchg
inc
mov
rol
inc
roll
subl
in
pop
or
push
int
iret
cs
rclb
cmpsl
push
jb
fildl
inc
xchg
inc
lcall
xchg
or
or
mov
xchg
mov
in
cmp
fwait
inc
insl
inc
cld
scas
cmp
cmp
daa
enter
xor
xor
mov
adc
testb
mov
repz
cs
and
clc
jp
rcrb
mov
cltd
lods
and
nop
xchg
and
push
insb
push
loop
bound
aas
bsf
imul
cld
mov
cmp
pop
inc
scas
mov
pop
pop
pop
pushf
fucomip
lea
inc
lods
add
mov
fdivrl
mov
jae
xchg
xchg
in
pop
xor
fsts
dec
xchg
push
mov
pop
cmp
and
xor
mov
lcall
jg
sbb
mov
cwtl
adc
cli
and
cs
fdivs
test
mov
jbe
mov
cmp
fnsave
aad
sub
xor
fidivl
inc
fs
shl
jl
xor
mov
adcl
test
ret
pop
pop
mov
in
xor
mov
in
inc
and
sub
ljmp
push
fstps
enter
in
mov
in
xlat
lock
sbb
lds
xchg
daa
in
fstpl
int3
dec
in
mov
mov
cmp
inc
pusha
sahf
bts
ret
xchg
mov
cmp
bound
je
cs
iret
stos
adc
mov
jg
out
jns
xlat
mov
pop
test
sub
loopne
xlat
push
popf
pop
dec
in
mov
popf
pop
mov
inc
sarb
arpl
enter
and
adc
and
dec
xchg
cltd
lods
repnz
psllw
ret
popa
xor
gs
cltd
clc
bound
push
jno
dec
in
jne
add
push
mov
xchg
pop
jge
adc
mov
out
or
or
aam
add
repz
popf
push
jle
xchg
mov
dec
inc
fdiv
xorl
dec
mov
xlat
and
popf
pop
lods
sbb
xor
mov
shrl
ret
jbe
jl
jmp
xor
sub
or
insb
pushf
out
punpckhdq
out
leave
int
pop
mov
jmp
ret
les
pop
jns
test
loope
pop
push
push
push
jmp
into
subl
mov
push
and
repz
insb
mov
out
push
inc
lret
cs
bound
pop
mov
cmp
pcmpeqd
dec
sti
rcrb
add
mov
call
ds
imul
fnstsw
or
xchg
fwait
mov
mov
mov
xchg
sbb
cmp
sub
mov
xchg
mulb
jmp
pop
fidivrs
or
stos
loop
dec
inc
xor
pop
jno
adc
xorb
lock
pop
jl
ss
scas
enter
int
stos
cmpsl
ficompl
jecxz
inc
fiadds
cld
pusha
loop
cmp
lds
orb
cmpsl
stos
aas
sti
outsl
inc
movsl
fwait
dec
pop
xchg
and
in
lods
mov
pop
clc
pop
stc
scas
cmp
fldenv
or
and
and
clc
ss
push
les
pop
xchg
addb
cmp
mov
movsl
pusha
mov
gs
cltd
std
mov
fmuls
repz
push
aaa
jg
jbe
aad
mov
adc
and
outsb
mov
out
lds
fnstsw
adc
loope
mov
xor
mov
adc
jns
push
outsb
aas
lcall
pop
inc
adc
rcll
insb
inc
repnz
push
dec
adc
pop
aas
mov
or
repnz
and
xchg
in
daa
repnz
dec
in
xchg
loope
out
sub
bound
pushf
push
cmp
test
stos
into
xor
mov
inc
adc
jns
std
sub
rolb
xor
call
outsb
das
mov
movsb
stc
inc
pop
sbb
lret
sarb
ds
push
outsb
sbb
pushf
jnp
dec
dec
or
in
adc
sbb
cmp
cmp
cmp
fildll
sahf
sub
mov
adc
insl
mov
outsb
inc
sbb
pop
je
loop
add
es
inc
sub
into
mov
jmp
or
pusha
xchg
dec
or
lret
push
mov
outsb
xchg
std
mov
idivb
mov
rorl
and
xchg
out
mov
call
xor
xor
xchg
stos
push
iret
push
mov
gs
cltd
xchg
in
stos
sbb
mov
and
push
xor
and
lret
hlt
adc
ret
inc
movsb
mov
sub
stos
mov
jo
mov
sbb
imul
jecxz
cmp
sub
or
loope
lock
adc
pusha
out
lods
fcomip
lods
fidivrs
push
mov
add
dec
outsl
arpl
or
add
adc
jmp
cmp
push
jg
mov
mov
pushf
mov
push
xor
sub
xlat
repnz
or
pop
cmp
in
xchg
and
cli
jbe
pop
xchg
sub
pop
pop
or
les
scas
or
jns
xchg
pop
lea
adc
js
sbb
mov
lret
mov
and
aad
ja
into
sbb
cmc
fnstsw
sbb
sti
enter
pop
lds
mov
or
xchg
popa
xchg
mov
fsubrs
push
popa
or
and
pop
pop
and
adc
enter
mov
mov
add
xor
sarl
xchg
pop
and
in
mov
sbb
push
call
outsb
dec
fsubrs
mov
das
cli
or
add
in
inc
sbb
in
ret
sbb
outsl
and
xlat
aam
in
fcmovne
mov
cmpsl
sbb
call
push
in
sbb
jns
add
lcall
dec
imul
mov
xorb
aas
popa
add
rclb
xchg
and
and
and
fwait
into
fidivrs
mov
dec
inc
jb
rorl
jecxz
dec
outsl
imul
scas
cld
fwait
xor
sbb
sahf
mov
jb
mov
fmull
pop
mov
sbb
add
inc
sub
sti
add
call
addr16
out
jecxz
and
outsl
shlb
inc
pop
pusha
fistl
callw
outsl
cmp
divl
mov
outsb
xor
xchg
adc
push
lcall
outsb
das
adc
js
js
jp
mov
cmp
adcl
jae
push
fcmovnbe
ret
inc
and
or
loopne
dec
aam
push
into
call
ret
add
mov
lock
fists
adc
mov
xchg
imul
sbb
sub
pop
cmp
ds
sbbb
daa
call
jge
pushf
test
sbb
popa
lahf
mov
dec
jo
hlt
mov
mov
out
mov
sbb
lds
ljmp
ljmp
ja
inc
inc
adc
jae
mov
call
leave
daa
arpl
xchg
and
popa
sub
jecxz
in
push
iret
xchg
jmp
sbb
das
push
loopne
mov
in
xchg
pop
jns,pn
mov
or
cmpb
repnz
inc
add
adc
mov
jle
or
mov
jecxz
push
in
and
iret
insb
js
jp
pusha
jb
xor
inc
sub
std
dec
bound
leave
lahf
or
and
cmp
mov
ret
mov
push
stc
xchg
pop
inc
ds
mov
cld
xchg
stos
inc
mov
fisttpl
je
scas
mov
mov
aas
dec
pop
dec
xchg
lret
lock
lret
lods
cmpsl
mov
or
jle
idiv
inc
xor
push
cmp
in
out
mov
jne
push
jne
lds
sbb
mov
mov
cli
or
xor
push
aad
pop
mov
fs
ljmp
sub
clc
std
sbb
mov
movsl
push
dec
aam
inc
fstpl
lcall
add
ds
or
cmp
gs
int3
push
movsl
loopne
dec
xor
out
test
jo
lret
or
push
pop
fisttps
dec
mov
mov
inc
pop
cli
mov
cli
cmc
push
ss
dec
pop
cmp
rolb
or
outsb
xor
push
decl
mov
cmp
mov
dec
iret
cmp
in
dec
iret
mov
fnstsw
inc
inc
repnz
ss
jmp
shlb
pushf
mov
in
jae,pt
pusha
mov
ss
mov
push
sub
cmp
inc
xchg
add
insl
shlb
ja
mov
std
in
xor
ljmp
mov
rcl
aas
pop
pop
leave
je
cli
popf
shlb
mov
cmpl
sub
push
inc
mov
aaa
aaa
sbb
adc
cltd
stc
xor
adc
xchg
lcall
add
adc
xchg
pop
pop
pop
cld
or
xchg
push
xchg
xchg
je
push
jecxz
in
xor
jg
dec
out
das
ret
in
mov
repz
addr16
jbe
or
jb
in
aaa
fwait
cmpsb
mov
xchg
xor
sbb
inc
mov
adc
fwait
int
pop
out
sub
inc
add
and
xchg
movsb
movsb
clc
das
xchg
cmp
sbb
adc
lds
adc
int3
mov
aas
lcall
jp
shll
jp
pop
mov
adc
sub
sbbl
jmp
mov
and
inc
pop
ss
ljmp
and
add
mov
add
jnp
add
lret
es
push
dec
ljmp
ds
movsb
or
fildl
and
ds
test
mov
or
mov
push
sub
mov
imul
scas
mov
into
int3
je
pop
and
test
adcb
cmpsb
fmull
popf
pop
xor
fistl
mov
pop
rcrb
pop
jmp
cmp
nop
add
inc
insb
inc
pop
outsb
push
dec
inc
jo
and
mov
dec
dec
adc
mov
cli
adc
push
andl
push
fcomps
pop
mov
cvtps2pi
imul
leave
add
jge
shr
lds
out
pusha
cmc
mov
push
popf
lahf
lods
icebp
mov
xor
rcrb
lahf
inc
sub
add
out
leave
jnp
lock
and
shl
mov
mov
outsb
addl
inc
xchg
addl
ret
pop
xor
jecxz
insb
std
lock
fbld
mov
idivb
fdivl
into
stos
add
mov
test
aaa
dec
adc
loope
pop
dec
cmc
aas
repz
movsb
add
fdivs
sub
dec
fsubs
push
inc
mov
dec
imul
popa
or
dec
int3
rorb
jl
outsb
push
popf
mov
or
mov
xor
vmovsd
loopne
sbb
dec
or
lods
icebp
pop
and
scas
pop
inc
lods
jecxz
jle
mov
lods
leave
dec
icebp
push
js
fwait
cmp
aaa
dec
jnp
iret
mov
adcl
iret
rorl
inc
jcxz
sbb
adc
adc
add
lds
clc
aad
or
xchg
adc
jno
addl
and
aad
jp
dec
inc
sub
xchg
imul
xchg
adc
frstor
cli
adc
xchg
adc
pusha
or
imull
or
sub
jne
lea
mov
cld
std
movhlps
add
idivb
xchg
xchg
mov
jns
repnz
js
pop
clc
in
lcall
jle
add
jae
dec
or
aas
mov
or
cmp
sti
sbb
lods
lret
mov
shll
out
jg
fucomp
fists
data16
lods
add
jp
stos
pop
movsl
cs
movsl
and
jecxz
stos
test
lret
mov
cmp
sub
pop
mov
int3
insb
cld
frstor
adcl
cwtl
les
popa
dec
gs
jmp
mov
push
xchg
cmp
mov
mov
jl
loope
cmc
mov
xor
xchg
mov
push
je
lret
out
xlat
je
cmp
movsb
and
add
dec
bound
cmp
inc
xchg
xor
pop
movsb
jae
cli
mov
lret
lods
pop
fmull
aad
pop
or
jnp
outsl
cmp
jmp
xorl
leave
sub
cld
mov
loop
pop
shll
mov
pusha
cmp
test
mov
dec
sub
cmpsb
daa
cmp
imul
fisttps
and
adc
fwait
sbb
xchg
sbb
jmp
xlat
addb
xor
cmp
rorl
xchg
andb
mov
std
mov
insl
ss
adc
ja
pop
scas
data16
lods
or
sub
loope
xor
neg
push
scas
in
ret
iret
lret
subb
push
or
jp
cmpsl
cmpsl
icebp
fwait
cmp
pop
lahf
push
outsb
fists
cmp
daa
stc
and
inc
sub
ror
or
pop
fadds
imul
cmpl
ljmp
cmpsb
inc
or
fcomps
add
fdivs
arpl
bound
jmp
bound
xor
pop
fildll
aaa
jno
vpminub
das
or
mov
mov
inc
push
xchg
xlat
cmp
vdivpd
add
push
fwait
mov
les
adc
lods
adcb
adc
xchg
cmp
push
pop
outsl
push
xchg
sbb
movsl
pop
mov
out
mov
add
pop
inc
movsb
fbstp
daa
dec
or
icebp
push
scas
cmp
sti
sub
out
push
shl
inc
dec
test
mov
sahf
jmp
repz
jno
inc
lret
test
xlat
jns
and
mov
xchg
pop
imul
idiv
pop
in
push
xor
and
sub
add
mov
or
inc
jno
dec
dec
loopne
push
cmp
push
jg
cld
popf
sub
pop
ja
into
shl
sub
jmp
icebp
shll
std
jg
repz
sbb
outsb
and
sbb
stos
sbb
std
jb
add
test
sub
lods
dec
pop
push
fstpt
out
or
xorb
rcl
stc
pop
fwait
subb
dec
lret
test
ret
cmpsl
xchg
cmp
pushf
inc
sti
lods
adc
orb
push
mov
dec
movsb
test
mov
mov
jge
aas
xchg
enter
lcall
data16
sti
dec
imull
out
cmpl
aas
xor
mov
or
push
sbb
arpl
pop
mov
mov
aas
sub
lret
pop
hlt
movsl
adc
pusha
jnp
popa
imul
loopne
lea
or
nop
loope
leave
ja
js
push
dec
mov
dec
jne
imul
add
mov
jg
mov
clc
lcall
add
push
addl
push
and
cmp
mov
arpl
and
mov
push
popa
aad
out
sbb
xor
das
outsb
das
sahf
stc
mov
xlat
sub
mov
cwtl
fsubrp
repz
enter
push
test
pop
xchg
test
pushf
pop
stos
jp
das
xlat
jbe
sahf
bnd
jle
pushl
repnz
inc
std
inc
pop
mov
push
dec
pusha
or
iret
int
jg
lods
or
repnz
loope
add
dec
xor
in
fldt
mov
or
sub
mov
or
enter
sahf
sbb
inc
jecxz
lcall
sar
xchg
inc
ret
insb
cmc
mov
jbe
je
pop
push
nop
push
push
test
add
pop
test
pop
repnz
sub
sub
sub
testb
pop
sarl
lds
sbb
or
into
fsubr
push
or
cmpsl
int
xchg
push
aas
loopne
jns
test
and
dec
jle
adc
dec
sbb
lahf
dec
and
call
inc
out
cmp
fistpll
aad
sub
push
push
and
test
xchg
xchg
repnz
push
sub
je
inc
adc
jns
mov
incb
add
popf
movsb
les
arpl
filds
mov
loope
jo
lahf
sub
daa
out
and
add
jmp
cmp
imul
pop
add
outsb
dec
in
insl
stc
xchg
iret
aad
push
cs
movsb
mov
stos
repz
cmc
in
push
flds
outsl
jnp
mov
outsl
es
push
xor
jbe
cli
mov
jnp
add
aaa
xor
push
cmp
test
lock
pop
cmpsl
xlat
jo
inc
sub
sbb
imul
lock
rcrl
cld
mov
stos
push
pop
mov
mov
out
xor
std
xor
rorl
or
mov
lahf
shl
push
arpl
push
sbb
hlt
daa
mov
add
cmpsb
mov
push
lods
clc
jmp
and
dec
inc
dec
mov
fsts
add
jg
dec
lcall
push
pop
cs
gs
negl
jl
sub
sbb
sub
dec
and
mov
adc
xchg
les
insl
xor
aas
rorl
sbb
cmp
imul
dec
or
stos
or
mov
or
mov
and
jmp
dec
mov
lock
adc
push
loopne
jmp
mov
int3
stc
push
ljmp
xchg
fld
add
jno
pop
stos
mov
imul
in
push
xchg
mov
imul
leave
lds
mov
sbbl
sbb
jnp
xchg
sub
mov
int3
push
or
ja
inc
aaa
jbe
fs
bound
aaa
cmp
xchg
push
in
into
mov
jge
pop
fs
in
in
addr16
testb
jge
ljmp
lea
add
pop
xor
jns
add
push
dec
ficoml
xor
adc
and
fstps
jns
adc
movsb
cmp
fsubr
aas
aaa
mov
mov
jb
cli
test
out
jle
adc
addb
xchg
fstpl
in
loope
call
fdivl
je
add
test
pop
mov
insl
pushf
ljmp
ret
mov
add
push
addr16
lahf
movsb
push
adc
fdivl
pop
xor
ret
lea
fisttpl
sbb
mov
pop
push
sbb
pop
stos
xlat
out
inc
mov
xor
arpl
aaa
ljmp
xor
outsl
and
add
fmul
inc
shl
orb
lahf
mov
mov
arpl
jg
mov
dec
dec
xlat
lcall
and
xchg
sbb
cmp
and
jae
xchg
pop
or
idiv
xchg
lret
aad
testl
pop
mov
xchg
or
hlt
movsl
shl
out
xor
into
mov
or
shrb
xchg
pop
in
xor
and
insl
sbb
stc
cltd
mov
enter
cmp
insl
ret
shl
pop
fildll
loopne
adc
push
fmuls
notl
dec
je
jo
and
cmp
loop
ja
xchg
lahf
push
lahf
adc
aaa
inc
dec
lahf
jecxz
lret
mov
cmp
cmp
shll
dec
loopne
mov
dec
cltd
daa
jl
xorb
sarb
jne
aaa
dec
push
mov
mov
test
into
xchg
pop
das
dec
lods
xchg
mov
es
movsl
mov
loop
bound
inc
mov
rcrb
popf
imul
int3
fcom
xlat
outsb
mov
xcrypt-ecb
cmpsl
mov
orl
pop
fwait
imul
inc
loope
das
sahf
insb
insl
sub
push
jge
outsl
push
mov
jp
mov
cs
adc
ret
push
mov
scas
jnp
and
push
hlt
adc
test
pop
cmp
and
imulb
or
sbb
jg
add
add
sbb
out
nop
xor
sub
stc
inc
adc
jge
jmp
inc
cld
push
aaa
jmp
push
sarb
cmp
fbld
sbb
inc
fldt
jbe
sbb
push
lret
cltd
andb
fs
adc
aas
dec
lahf
adc
xor
push
lcall
xor
push
sub
or
addr16
cmp
ss
xchg
pop
sbb
inc
push
xchg
pop
add
xchg
push
jno
push
mul
fwait
add
das
sbb
push
adc
shrl
fmul
and
les
or
movsl
push
pop
push
mov
xchg
loop
fwait
mov
sub
testb
jle
in
xchg
push
mov
loope
jmp
jb
push
iret
sub
mov
mov
push
and
dec
andb
pop
mov
inc
inc
in
test
xchg
adc
fisubrs
mov
mov
add
mov
cmpsb
xchg
push
aad
xor
not
dec
nop
dec
dec
pop
cmp
cmpsb
movsb
push
leave
and
jno
inc
or
test
inc
addr16
lock
shll
scas
pop
ss
mov
out
test
mov
int3
pop
das
push
ss
repnz
aas
loope
les
sub
push
je
das
dec
mov
adc
mov
jmp
test
mov
mov
xor
dec
mov
int
shll
pop
pop
stos
outsl
sti
mov
icebp
jae
or
pop
sarb
jno
std
and
mov
gs
jnp
mov
orl
outsb
cmp
xchg
xchg
mov
in
pop
mov
iret
punpcklwd
roll
nop
push
inc
xor
mov
fstps
data16
sbb
jbe
aam
add
mov
movsb
cs
mov
cli
aaa
inc
iret
dec
sub
push
push
rcll
push
testb
inc
jnp
mov
fmuls
outsl
les
push
in
pop
dec
and
ret
insl
sbb
inc
xchg
daa
cmp
pop
adc
lods
cli
jbe
mov
aaa
push
mov
jb
dec
jae
outsb
jg
lret
mov
ds
mov
or
sub
mov
push
in
or
mov
lcall
cltd
dec
adc
sub
and
aad
lea
lcall
dec
cs
pop
fs
mov
mov
mov
or
mov
and
movsb
lds
cld
aas
rcrb
test
fimuls
push
sub
out
movl
jb
push
xchg
ljmp
dec
pop
jnp
and
pop
mov
das
lcall
jge
jo
shr
push
push
clc
pop
leave
imul
and
mov
mov
enter
sub
loopne
scas
ret
mov
mov
pop
jle
test
test
cmp
mov
sbb
jg
pop
ljmp
mov
scas
push
xchg
fstpl
jb
popa
mov
xor
mov
xchg
cld
loopne
js
jmp
mov
and
xor
aad
cltd
jnp,pt
fists
daa
das
xor
out
add
sarb
ja
stos
pusha
mov
pop
dec
pop
mulb
adc
out
sti
jp
mov
cltd
adc
shrl
jge
jg
enter
xor
arpl
mov
mov
push
stc
fcmovnbe
out
ljmp
out
cltd
lret
outsb
inc
push
adc
xchg
je
loope
xlat
mov
mov
cmp
mov
bound
pop
shrl
inc
aaa
mov
test
adc
sbb
repnz
mov
pop
xor
mov
insb
dec
das
cmc
testl
fsubl
xorb
pop
in
or
xor
mov
rorl
pop
fxch
or
stos
mov
rol
movsl
pop
sbb
add
mov
jnp
jmp
add
repz
mov
popf
xchg
adc
ret
jne
rcl
push
push
push
inc
push
add
lds
sbb
jp
adc
loopne
cwtl
push
cli
repz
dec
testb
dec
lds
lret
aas
push
xchg
pop
stos
push
ss
fistpl
loope
cmp
mov
stc
pop
inc
jl
mov
jecxz
sub
xchg
cs
out
dec
xor
pop
cwtl
lcall
pop
movsl
ficompl
mov
enter
ljmp
push
xlat
lret
hlt
std
daa
insl
or
jo
hlt
fcoms
sbb
scas
sub
mov
sub
jno
xchg
out
data16
jno
lods
xor
outsb
or
stc
jmp
pop
dec
mov
scas
jecxz
or
cmp
stos
xlat
add
out
adc
loop
sarb
pop
stos
fadds
rolb
mov
mov
mov
int
stos
xor
push
mov
jg
in
mov
mov
xlat
pxor
movd
outsb
push
loop
adc
dec
pop
clc
jg
shlb
mov
cld
sub
hlt
int
data16
mov
fwait
mov
imul
sbb
mov
xor
fildll
jnp
shlb
push
sarl
or
mov
push
cmp
ss
aas
imul
pop
pop
shl
sub
loope
fs
dec
outsb
mov
ljmp
mov
sti
sub
fyl2xp1
outsb
je
js
inc
pop
out
in
lret
and
fisubrl
sbb
mov
movsb
ds
adc
fdivrs
jl
bound
out
das
push
mov
mov
mov
in
outsl
cvtpi2ps
mov
pop
adc
cmp
mov
inc
jbe
push
push
cmpsb
xchg
test
pop
mov
cmp
data16
adc
js
mov
mov
shl
cmp
jno
jg
nop
imul
adc
inc
sbb
cwtl
push
and
sbb
mov
adc
push
insl
mov
mov
ja
rcrb
jmp
lock
mov
jnp
or
xor
inc
popl
test
pop
or
dec
pop
test
sub
test
mov
and
pusha
mov
xor
inc
adc
pop
idivl
lods
push
std
dec
cmp
loope
mov
mov
iret
sbb
pop
ljmp
pop
cmpb
repnz
ss
jle
dec
xlat
sbb
mov
movsb
outsl
cmpsl
xchg
adc
and
aas
mov
clc
mov
cli
lret
pusha
push
xor
pop
stos
imul
movsb
call
inc
sbb
shll
mov
data16
sbb
mov
lcall
and
ret
and
adc
mov
sbb
arpl
or
aam
push
add
pop
fnstsw
inc
sub
loopne
pop
jns
jno
out
lods
sbb
cmp
call
icebp
fucomp
ds
sahf
adc
cwtl
mov
test
js
insl
fildl
pop
jbe
sbb
addr16
and
sbb
sub
jnp
xchg
push
pop
push
cs
push
loopne
sub
inc
dec
loop
ds
xor
push
add
sysexit
cld
pusha
ss
pop
sbb
pop
sbb
scas
enter
adc
pop
cmp
sbb
push
cmp
mov
adc
pop
push
mov
sbb
jmp
fisttpll
inc
ss
mov
in
lret
ja
adc
enter
loopne
cld
sbb
mov
and
test
add
sub
stc
pushf
jg
cmp
cs
scas
push
shl
jg
push
mov
movsl
rcll
je
xchg
fcomip
add
ret
sbb
push
hlt
les
leave
pop
dec
inc
or
xor
push
jle
jl
push
xor
mov
inc
lods
popf
cmp
roll
mov
lret
nop
pop
ds
dec
mov
out
xor
cmp
mov
std
insb
fisubrl
mov
mov
or
std
push
lock
jb
aas
clc
push
push
xchg
fstps
sub
sub
sub
jbe
out
jl
push
jnp
and
sar
inc
ficompl
in
add
pushf
ret
rorb
aad
sub
pop
mov
pop
enter
mov
or
add
xchg
jle
insb
rorl
pop
pop
and
cmpsl
push
cltd
jnp
jecxz
fnstsw
inc
pop
rorl
jl
push
jmp
xor
gs
js
imul
fbstp
scas
push
clc
addb
sub
test
dec
adc
mov
cmpsb
testl
outsb
aam
mov
lock
mov
xor
je
push
pusha
mov
pop
xchg
mov
icebp
xor
outsb
sahf
loop
cmp
jno
jae
xor
push
aad
iret
mov
out
xchg
aam
or
sub
cmp
lea
or
mov
xor
in
dec
mov
sbb
fists
jne
push
rorb
sbb
ficoml
add
xchg
xchg
ret
scas
out
pop
je
or
jbe
cli
inc
or
ret
int
push
jo
lea
jae
jg
gs
out
fsubl
jns
pop
xchg
js
jge
adc
pop
xchg
mov
test
mov
ret
inc
sub
push
arpl
jp
cmp
data16
mov
rcr
lret
cli
pop
adc
aam
push
lret
test
daa
out
push
stc
dec
scas
cmp
outsl
sbb
push
adc
mov
fsubl
lods
dec
sub
push
mov
sahf
mov
sti
mov
adc
mov
mov
test
test
and
xor
into
adc
sti
fcmovu
dec
jbe
in
in
inc
jl
push
cmp
sbb
mov
xlat
mov
adc
xchg
sub
gs
mov
push
dec
inc
das
arpl
rol
xchg
cmp
pop
aad
pop
stos
lods
mov
dec
lret
ficompl
jmp
mov
jo
xchg
lahf
adc
mov
nop
ficoms
pop
add
std
movsl
ljmp
out
mov
bswap
int
jecxz
and
push
mov
mov
into
add
test
push
sti
fcoms
jecxz
adc
shufps
cmpsl
sub
and
out
sbb
jl
arpl
xor
in
subl
push
paddb
and
xchg
dec
data16
push
push
imul
loop
imul
imul
fnstcw
rclb
call
inc
test
hlt
jle
shl
in
or
lret
mov
add
roll
mov
or
adc
scas
push
arpl
pop
cmp
inc
adc
mov
ret
dec
loopne
and
imul
scas
imul
pop
popa
and
jbe
std
mov
fnstsw
push
jmp
scas
flds
xchg
sbb
repz
pop
int3
jo
mov
xor
push
jg
pusha
or
mov
push
sub
mov
xchg
ret
pop
ret
mov
pop
iret
rolb
inc
outsb
and
add
inc
push
jns
inc
push
fdivrs
neg
cwtl
pop
sub
adc
inc
subb
sub
xor
in
xchg
ljmp
iret
lds
push
orb
cmc
xchg
decl
pop
cmp
inc
shrl
test
movsb
push
fdivr
shrl
scas
dec
cmp
arpl
dec
push
loop
mov
dec
sti
sub
std
cmp
adc
and
loop
fidivl
mov
sti
lahf
aas
fdivs
sahf
hlt
mov
mov
inc
lods
sub
inc
xchg
in
daa
lods
pop
hlt
int3
mov
negl
inc
lea
sbb
add
xor
push
and
inc
daa
cmpsb
pop
mov
pushaw
scas
lahf
cmc
pop
dec
cmpl
cld
test
jmp
sbb
sbb
mov
mov
inc
stos
mov
adc
push
daa
xchg
rcrl
push
pushf
dec
cmpsb
pop
bound
dec
lret
pop
sbb
push
lahf
test
adc
inc
sarb
fisubrs
add
sub
repnz
gs
mov
sahf
fs
and
jo
data16
xor
pop
imul
or
or
enter
push
sti
pop
inc
and
push
dec
dec
imull
out
adcb
cltd
data16
inc
lahf
jmp
sub
test
inc
idiv
shrl
mov
jnp
xchg
jl
sub
fildl
mov
xchg
add
cmp
pop
rcrb
dec
ret
mov
adc
subb
fiadds
rcrb
jg
outsb
or
sub
ja
jp
cmpsb
fstpl
inc
xchg
mov
sbb
mov
lret
fs
add
mov
shll
lea
fdiv
jl
sti
pop
js
xor
inc
dec
cmc
ja
jns
bound
testb
loopne
sbb
dec
pop
push
out
inc
jmp
or
lret
adc
std
imul
push
aam
push
mov
push
push
lods
jmp
sbb
xchg
adcl
ja
in
mov
xor
push
mov
jbe
pop
or
scas
mov
pushf
cltd
ret
and
iret
mov
or
push
testl
pop
in
mov
ret
sub
hlt
popa
clc
fbld
jno
jle
adc
jnp
je
sub
int3
hlt
decl
xor
sbb
jmp
lods
xor
push
shll
push
icebp
daa
push
add
push
mov
addr16
test
mov
clc
or
inc
test
sbb
bound
push
and
pop
stc
mov
push
xchg
push
ja
mov
mov
inc
popf
icebp
test
xchg
jp
into
ror
pop
insb
inc
mov
enter
bound
push
icebp
inc
stos
dec
push
cmpb
cwtl
sub
cmpsb
loopne
test
pop
movsb
shl
adc
in
insb
pop
orl
sbbl
cmovno
jg
and
mov
fcmovnbe
clc
addr16
pop
xor
pop
subl
push
out
and
in
dec
mov
xor
push
mov
hlt
in
dec
scas
repnz
sub
fidivs
xchg
and
xchg
xor
cltd
ret
mov
fsubrl
movsb
or
adcl
fadd
mov
cmc
adc
push
ret
pop
sub
pop
pop
lds
adc
cmp
inc
sub
cmc
hlt
pop
inc
xor
cltd
scas
and
xchg
cmc
pop
cld
dec
arpl
insl
out
inc
xor
repnz
mov
mov
ss
out
outsl
pop
movsb
xor
pop
dec
sarl
adc
jmp
inc
shr
and
xor
cmpsb
out
cmpsb
lods
jne,pt
je
fidivrs
xchg
push
add
push
sar
dec
dec
insl
dec
xchg
popa
inc
add
push
imul
int
inc
lea
fcmovbe
in
jb
popf
sub
mov
mov
cli
sahf
popf
std
mov
xor
add
iret
call
mov
dec
xchg
mov
push
xchg
mov
jge
xchg
adc
ds
fs
outsb
pop
mov
mov
jae
insl
in
fsub
xchg
icebp
push
fcoml
mov
cmp
repz
jmp
in
cmp
cmp
push
orb
movsl
js
aad
xor
mov
push
mov
fnstsw
jp
fcmovne
addb
or
sbb
in
xchg
imul
pop
cmp
push
sbb
add
outsb
jo
rcl
xor
jmp
std
test
in
dec
push
nop
scas
sbb
ret
nop
cmpb
aas
clc
icebp
sbb
outsl
push
inc
sbb
add
and
dec
cld
sub
add
push
jl
dec
xor
neg
daa
fisttpl
adc
push
push
push
add
or
in
int3
sbb
xor
shr
cmp
push
jge
xchg
outsb
out
cld
cld
cmp
lcall
out
popf
orl
test
es
clc
out
adc
pop
and
bnd
xorl
hlt
scas
adc
and
or
das
sbb
dec
mov
jo
enter
das
sahf
sarl
icebp
scas
push
sbb
and
testl
ds
pusha
mov
sub
jb
mov
jnp
dec
and
inc
pop
shl
movsl
push
movsl
push
pop
mov
lret
aaa
push
xchg
ljmp
sbb
sbb
xor
mov
add
or
dec
mov
shlb
gs
inc
cltd
xlat
in
push
mov
mov
fmuls
jns
ss
sbb
push
loope
mov
mov
mov
leave
adc
out
popa
cmpsl
mov
pop
xlat
mov
mov
jo
movsb
mov
jge
cmp
mov
mov
cmpsb
or
dec
fnsave
inc
ljmp
sbb
shll
inc
xchg
pusha
adc
movsb
bound
mov
mov
add
mov
mov
xor
iret
pop
inc
jns
lea
scas
mov
xadd
cmp
push
add
xor
repnz
stos
or
adc
stos
push
mov
mov
stos
push
ljmp
pushf
xor
inc
pop
mov
or
dec
les
pop
lahf
fsubp
or
sbb
enter
fisubrl
addr16
push
sarl
sbb
mov
outsl
sub
inc
mov
mov
and
xor
xor
pop
push
loope
nop
mull
movsl
in
lock
je
data16
push
sub
test
or
mov
push
aam
pushf
push
into
adc
dec
and
cmp
xchg
nop
xchg
ret
fisttps
sti
jmp
sub
dec
mov
and
nop
jbe
mov
mov
out
scas
adc
and
aas
xor
insl
sub
cmp
and
ret
inc
xor
jl
push
mov
test
inc
test
sub
loope
dec
xchg
push
xchg
sti
aas
pushf
add
pop
pop
mov
pop
arpl
cmpsl
mov
dec
and
jecxz
lods
mov
cli
leave
pop
gs
xor
int3
cld
and
insb
mov
lcall
outsl
push
lahf
enter
mov
mov
mov
pop
cmp
sahf
cld
aam
mov
rorl
mov
sarl
and
xchg
push
xchg
jbe
cmpsb
out
clc
in
sub
or
cmp
gs
out
int3
lods
or
pop
jnp
or
xor
inc
push
sbb
xor
xchg
int
adc
test
pop
shlb
lret
pop
jl
data16
xor
push
rcrl
insl
cmp
sbb
insb
daa
mov
push
data16
cmp
insb
rcl
lds
test
test
bound
lea
fdiv
aad
xor
pop
mov
shr
jecxz
pop
hlt
mov
ss
sbb
out
pop
stos
xchg
cwtl
lods
sarb
decb
ffreep
popf
lea
mov
xlat
call
add
mov
sub
push
cmp
push
adc
add
or
push
sub
cwtl
mov
sub
mov
mov
ja
push
jnp
mov
adc
jns
jns
mov
mov
mov
inc
cld
inc
or
gs
dec
pop
arpl
push
mov
sub
inc
and
mov
jne
mov
rolb
nop
stos
mov
mov
inc
ret
je
xchg
jae
aad
jle
ret
pop
mov
out
xor
dec
sbb
rcll
xor
bound
xchg
sub
xchg
stos
add
xchg
jns
and
movsl
ror
cmp
push
movsl
cmpsb
and
xchg
xor
mov
inc
push
data16
les
std
in
adc
std
and
test
xchg
ljmp
sub
out
lea
mov
je
fisubl
les
xor
jno
iret
call
sbb
push
orl
cmp
fwait
popw
gs
inc
xchg
add
rcrb
addb
xor
jne
pop
arpl
and
pop
mov
daa
cltd
mov
sbbb
xchg
fwait
outsb
cli
jo
repnz
cmp
orl
popf
inc
push
jg
mov
insb
mov
push
push
push
xchg
cmp
dec
addr16
gs
imul
nop
testl
data16
dec
mov
orl
pop
sahf
pop
dec
les
mov
mov
call
jno
pop
into
mov
movsb
test
sbb
sbbb
cwtl
test
fisubs
pop
mov
jl
int3
push
out
mov
pop
add
pop
lret
jg
adc
dec
sbb
lret
inc
cltd
fcoms
mov
or
imul
pop
push
lock
out
cmp
jecxz
sbb
iret
xchg
xor
test
mov
mov
or
inc
jne
repnz
xor
nop
incb
out
cmp
sub
cwtl
mov
sub
lret
fnsave
xor
mov
mov
aam
lret
xchg
add
or
pop
incb
ret
inc
jbe
test
repz
sub
push
add
fcmovne
imul
sahf
mov
mov
sarb
dec
inc
out
mov
imul
pushf
das
push
and
dec
loope
xchg
jmp
jmp
add
cmpsl
mov
lahf
fldt
insl
mov
shlb
mov
in
push
aad
cwtl
push
push
xchg
scas
xchg
sbb
push
pop
into
ds
pop
imulb
mov
das
pop
sub
mov
add
ret
popf
test
add
loop
cmpsb
mov
inc
repnz
sub
mov
mov
lcall
insb
shrl
mov
xlat
aas
push
fisttpl
js
sar
xor
shrd
mov
je
push
adc
cmp
cmpsb
sbb
mov
popf
out
leave
mov
mov
xlat
lahf
xor
je
jl
fildl
bound
in
dec
scas
cs
adc
and
cld
fcoml
pushf
and
pop
mov
mov
cmp
inc
xchg
popf
les
jl
rorl
pop
and
call
push
or
lods
in
pop
push
mov
mov
xlat
xlat
xor
mov
jnp
sub
inc
cmp
push
mov
sarb
ss
divb
dec
mov
ds
ffree
jle
jmp
nop
leave
jl
mov
or
lods
inc
test
jno
add
into
push
cmp
sbb
cmp
mov
mov
js
loope
mov
shrl
icebp
push
jno
adc
jg
jo
mov
mov
or
loope
pop
loop
xor
jae
mov
jecxz
sbbb
inc
push
ds
xor
push
popf
js
push
push
add
mov
push
cli
and
imul
bnd
push
mov
jbe
jnp
and
lret
test
hlt
addr16
add
dec
aad
jp
icebp
or
test
push
das
cmc
push
mov
and
fdivr
leave
out
std
sub
sub
push
xor
addr16
testb
imul
inc
and
lds
popf
divl
lock
push
cmp
fs
cmc
mov
mov
jmp
mov
xor
les
gs
or
orb
iret
add
fsub
in
test
push
xor
sbb
push
fnstcw
and
add
aad
fsubrl
shrl
movb
lret
lods
add
pop
insb
sub
cmp
pop
cltd
push
jne
nop
xchg
mov
xchg
fdivrs
sub
or
add
into
int
ds
inc
hlt
aas
fpatan
mov
movsl
je
sbb
cld
lret
xor
xor
addr16
mov
cmp
pop
mov
jbe
push
cs
adc
xchg
fdivrl
mov
jmp
fsts
mov
call
stos
and
adc
mov
dec
gs
shrb
ljmp
and
insb
sbb
mov
sbb
xchg
stc
and
and
int
dec
test
mov
es
mov
mov
icebp
xchg
repz
aas
lock
out
test
inc
or
fstsw
std
cli
or
push
lods
or
sbb
jle
jo
arpl
xor
imul
or
jle
imul
shlb
mov
icebp
jg
cmp
dec
sub
sub
jmp
jo
repnz
lret
and
fucomp
neg
jp
ds
fstl
pop
ds
mov
fistps
xlat
out
adc
adc
aas
mov
mov
push
bound
inc
jl
or
push
sbb
lcall
inc
inc
jle
push
push
or
lock
mov
sti
and
lahf
rorl
iret
or
sti
ja
clc
call
daa
push
mov
lock
pop
out
sbb
xchg
sbb
pop
popa
fistps
data16
iret
icebp
cs
rorb
cld
loopne
mov
std
daa
lcall
adc
clc
int
push
jnp
inc
lds
fdivl
lds
ljmp
jg
and
je
mov
cld
push
in
ja
rcrl
cmpsb
lds
sbb
xchg
data16
mov
cmpsl
fadds
pushf
or
inc
push
xchg
int
xor
jb
push
das
into
mov
cmp
int3
test
into
lahf
je
xchg
ret
fldcw
rcrb
clc
mov
cmpsb
enter
in
push
push
add
mov
lock
roll
xlat
mov
jb
and
mov
mov
inc
mov
push
cmpsl
stos
inc
dec
inc
ss
outsl
or
dec
xchg
xchg
adc
push
repz
gs
cmp
test
mov
sbb
lahf
jnp
bound
insl
xchg
aas
int
add
mov
mov
mov
sub
dec
mov
mov
cltd
jl
popa
ficomps
mov
lahf
mov
push
imul
mov
pop
scas
mov
lcall
sub
sub
push
inc
jl
sub
xor
or
aam
sar
mov
push
imul
cmp
sbb
xchg
cld
and
cmc
jns
sbb
sbb
jmp
add
sub
and
movsb
lahf
lods
clc
scas
jge
mov
inc
push
jp
cmp
arpl
and
cmova
pop
and
xor
push
push
pushf
nop
scas
dec
ss
cmpsb
fistpll
mov
test
and
xchg
stos
xor
jne
adc
inc
inc
in
jne
stc
pop
xchg
test
jnp
mov
neg
mov
ja
push
jae
aad
mov
mov
adc
orb
mov
or
pop
sub
aaa
sbb
mov
jbe
incb
rcrb
xor
mov
inc
ret
stc
lods
push
sbb
pop
jmp
push
cmpsl
lahf
aas
into
xchg
push
sbb
mov
fisubrl
call
push
jae
sub
push
hlt
aas
ss
mov
pop
dec
cmp
mov
push
push
xchg
test
inc
fmull
push
xor
cmc
cmpsl
xchg
fwait
rol
hlt
xor
aad
xchg
add
pop
data16
mov
fisttpl
cmp
nop
mov
lret
adc
lock
jno
decl
out
xchg
adc
pop
pop
pop
xchg
insl
int3
mov
test
data16
fsubrs
test
test
rcrl
ss
aas
js
push
imul
movsl
test
xchg
jle
clc
flds
mov
stc
loope
rcl
mov
jecxz
jp
xchg
pushf
sbbl
dec
das
dec
or
outsb
pop
sahf
cltd
lcall
test
inc
sbb
addl
dec
das
les
fwait
inc
push
jno
lcall
mov
mov
push
pop
sbb
pop
je
mov
jecxz
mov
cli
js
mov
out
icebp
aaa
fxch
mov
add
sbb
xchg
xchg
mov
cmp
push
mov
fwait
addr16
cmc
add
lret
mov
or
mov
sub
mov
leave
or
push
inc
sbb
orb
xchg
and
imul
pop
pop
aam
cmpsb
jge
inc
xor
pop
mov
add
add
scas
orb
cmc
xchg
push
jp
push
xchg
aaa
les
in
mov
das
inc
mov
js
mov
mov
push
xlat
add
or
mov
mov
popf
test
ret
pushf
out
lock
xor
jl
shlb
and
rclb
lds
enter
push
icebp
xchg
push
sbb
mov
in
add
test
lea
or
mov
ljmp
lcall
pushl
jl,pn
cmp
fidivrs
push
and
or
mov
test
cmpb
int
inc
jb
outsl
aas
cmpl
fistl
xchg
mov
cmpsl
iret
sahf
pop
lock
add
test
out
stc
adc
mov
addl
push
dec
or
jmp
fmull
cmp
shll
repz
mov
push
ljmp
sarb
jbe
mov
and
into
xor
scas
jmp
dec
sub
movsl
xor
pop
sub
add
aam
push
pop
push
out
mov
pop
sbb
pushf
dec
ja
movsb
das
mov
sub
and
mov
sub
adc
pop
mov
inc
or
pop
out
bound
fldt
sub
push
ja
sbb
mov
leave
dec
cmpsl
add
pop
andb
pop
in
das
sarb
cmpsb
lods
test
mov
and
int3
or
mov
xchg
sub
jne
mov
imul
mov
daa
adc
jmp
bnd
ljmp
jns
adc
pop
lds
mov
xor
in
push
lods
adc
dec
jge
mov
loope
dec
test
in
xchg
pop
jo
cmp
mov
xorb
push
inc
dec
pop
pusha
mov
fnstcw
in
ret
scas
aam
or
mov
pop
pop
add
push
cmp
adc
inc
iret
push
mov
mov
mov
jg
xor
imul
push
repz
dec
adc
sbb
sub
adc
dec
adc
mov
push
push
std
es
xor
outsl
icebp
rorl
or
xor
rcrb
sar
inc
xor
lahf
and
jnp
sbb
sahf
addb
mov
xchg
jne
pop
int
fcmovnu
cmp
mov
xchg
or
mov
shrl
cmp
das
or
and
loope
mov
out
jecxz
div
in
pusha
mulb
imulb
lds
ficoms
loop
es
shll
add
pop
ret
push
adc
mov
dec
pop
ret
dec
pop
mov
jno
cltd
mov
push
mov
sub
jno
imul
cmp
cmpsb
xchg
cmp
add
xchg
and
sbbb
inc
aaa
mov
mov
inc
jge
jp
and
decl
imul
aad
mov
inc
stc
jle
push
ljmp
lcall
jmp
mov
add
dec
js
into
das
mov
fs
xor
sbb
sub
fistpll
sub
arpl
pusha
cmp
cmp
hlt
imul
in
adc
add
ja
nop
outsb
test
mov
mov
mov
test
sahf
pop
cld
insl
in
fwait
cs
dec
jo
jl
cmpsl
pop
outsb
push
repz
xor
xchg
leave
hlt
ljmp
pop
nop
fs
dec
ret
inc
xor
pop
dec
mov
cmpsl
jno
scas
dec
icebp
mov
cmpsl
scas
jns
fstpt
sub
inc
pusha
or
lahf
and
fs
pop
pop
adc
cwtl
pop
mov
dec
mov
cld
cltd
repnz
into
cmp
ss
lea
inc
xlat
jmp
xor
xchg
test
shrl
xor
add
sbb
pushf
push
fmuls
pop
js
jecxz
imul
sahf
es
stos
xor
aas
sub
shl
cs
fiaddl
lods
cmp
out
arpl
xor
pop
enter
add
loop
leave
jmp
pop
mov
push
fmulp
pushl
sbb
and
xchg
popf
call
data16
and
mov
out
xchg
rcl
negb
pop
popa
inc
push
pop
rcll
pop
push
inc
xchg
rcrl
insb
and
xorb
mov
leave
loop
mov
xor
mov
sub
idivb
clc
pop
fmuls
dec
sbb
notb
or
ljmp
icebp
cmp
cld
enter
lea
cmp
shll
sbbb
insl
mov
mov
sti
or
addr16
push
aaa
in
aad
out
xor
call
les
mov
mov
or
ljmp
xlat
xchg
adc
je
enter
mov
inc
mov
lock
iret
shl
lds
pop
mov
cli
cmp
pop
fisubl
and
rorl
int3
sbb
in
and
shrl
sub
pop
clc
dec
imul
lret
mov
cmp
jp
out
in
adc
lods
mov
pop
arpl
lds
adc
adc
or
stos
adc
in
pop
jbe
mov
xor
popf
lcall
jbe
les
rcll
arpl
mov
mov
xchg
push
cmpl
xor
jne
push
sbb
addr16
cli
nop
test
shr
cmp
xor
mov
cmp
mov
cmp
or
xlat
jl
xor
loope
xchg
loop
xor
xchg
and
add
mov
repz
sti
das
mov
shr
jge
or
push
sub
stc
pushf
in
jecxz
and
stos
sti
ret
fcoms
in
cmp
repnz
js
lds
jnp
scas
out
cwtl
fdivl
push
mov
push
out
jo
xchg
mov
jle
dec
dec
lret
in
mov
sbbl
lods
js
inc
orl
rcrl
cmp
inc
push
pusha
clc
adc
push
test
push
adc
or
loop
mov
mov
add
jmp
leave
mov
fwait
mov
push
inc
leave
insl
cwtl
xchg
cld
lods
inc
adc
mov
mov
cli
inc
xor
sub
cmc
push
pop
adc
pop
ds
mov
xor
mov
add
out
decb
push
jl
in
es
pop
mov
jne
inc
lahf
iret
lret
dec
xor
daa
jnp
ljmp
mov
dec
dec
popa
push
stc
xchg
stc
loopne
inc
jns
jno
sbb
fisubrs
and
icebp
push
fldcw
std
sbb
and
inc
sub
dec
sti
push
in
or
fdivl
rorb
inc
ds
sub
dec
imul
mov
mov
and
mov
push
subl
negl
shrb
aam
inc
movsb
cmp
cmp
out
or
aas
dec
mov
and
lret
fs
add
dec
scas
fs
and
test
popf
incl
mov
and
cmpsl
fdivrs
enter
pop
pop
xchg
or
cmp
imul
push
daa
aas
aad
pop
xor
jmp
xchg
iret
pop
add
add
inc
repnz
inc
xchg
push
push
inc
add
adc
lea
mov
mov
xor
loopne
mov
pusha
xchg
in
imul
xor
jmp
xor
insb
shrb
icebp
push
adc
push
ss
jae
mov
or
adc
out
mov
repz
movsb
arpl
pop
stos
shlb
fcoml
dec
lret
sbb
mov
lret
dec
nop
sbb
push
test
push
push
jecxz
jge
in
jl
or
sub
loope
sub
mov
push
and
leave
push
in
xchg
ret
sbb
mov
lds
fstl
xlat
lret
js
mov
or
xor
sbb
lds
loope
lods
aam
dec
mov
fdivrs
movsb
dec
and
push
shlb
mov
movsb
lcall
int3
add
xchg
popa
xchg
pusha
int
mov
inc
ljmp
mov
aad
aam
aaa
call
cmp
mov
lea
les
dec
xlat
dec
or
mov
mov
ja
jo
xchg
push
or
cmp
dec
sbb
lods
cs
ds
or
into
mov
stc
cmpsl
or
dec
inc
imul
xor
mov
fdivp
icebp
bound
aad
ljmp
sti
jo
adcl
bound
pop
xchg
dec
pop
test
mov
jge
mov
push
clc
xchg
push
fidivl
movsl
sahf
loopne
lods
insl
jnp
mov
xor
or
mov
or
sub
or
aam
adc
and
flds
bound
add
data16
inc
data16
xchg
loope
add
lods
sub
mov
push
or
popf
or
hlt
xchg
mov
xchg
stc
add
mov
int
jno
lock
dec
jg
mov
cli
xchg
jecxz
icebp
push
cmp
sti
gs
mov
in
outsb
inc
mov
lcall
jle
stc
gs
dec
pusha
and
mov
mov
dec
or
repz
xor
rclb
jge
mov
fs
sbb
cltd
fsts
dec
jbe
xor
add
pop
and
sbb
sahf
jns
ror
out
pusha
cmp
les
mov
push
lret
iret
mov
xchg
ror
push
incl
inc
lcall
enter
push
ret
or
jge
jg
adc
pushf
gs
lods
loope
jle
xor
mov
push
clc
insl
mov
pop
push
ret
inc
in
cmp
push
rcll
push
aad
in
mov
cmpl
outsl
cmpsl
es
aas
sbb
aas
lods
iret
xchg
cwtl
or
rcr
mov
faddl
in
mov
into
hlt
mov
lret
cmpl
arpl
sub
pop
shlb
iret
shll
adc
out
adc
pop
insb
dec
repnz
sbb
into
xlat
mov
cmp
fldenv
and
icebp
aas
outsb
je
adc
in
cmpsl
movsb
sbb
mov
pop
les
aad
gs
or
cwtl
xor
mov
imul
bound
sbb
push
push
xchg
pop
adc
sbb
repnz
inc
fcomps
rcrb
negl
shr
leave
jns
push
leave
adc
xchg
sub
scas
lock
cld
or
jns
lods
pop
sarb
cmp
mov
push
mov
pop
lahf
dec
loope
out
iret
aad
notl
xchg
pop
or
addr16
jl
test
dec
mov
xchg
addr16
mov
xchg
shl
pop
imul
or
pop
jnp
pop
sar
lock
xor
sub
test
inc
stc
icebp
or
jnp
fldt
je
inc
push
gs
cmc
or
or
std
or
sti
dec
adc
sbb
lods
loop
enter
xor
ret
add
mov
mov
sub
ss
lret
push
es
movsb
sub
repz
pop
loop
lret
daa
dec
into
rcrl
xor
push
sbb
xor
add
push
sub
movsb
xchg
jge
xchg
push
test
enter
cmp
mov
xlat
iret
cmp
jp
push
mov
scas
dec
jo,pt
outsl
repnz
clc
jl
popa
mov
jmp
xchg
hlt
lcall
scas
cmp
je
mov
addr16
sub
jns
pop
test
gs
push
mov
xor
imull
out
mov
mov
mov
movsl
mull
xor
add
dec
popf
sbb
sub
js
cmp
outsb
jge
out
adc
int3
push
pop
lock
dec
pusha
cli
sub
dec
xchg
mov
xchg
mov
jne
ljmp
adc
aaa
pop
sbb
lock
fwait
sbb
aas
idiv
pushf
loope
mov
lret
inc
rorl
mov
dec
pop
aam
pop
and
xor
shlb
xchg
cmp
pop
fnsave
push
imul
mov
jmp
cmp
icebp
inc
cmp
push
mov
cli
shrl
jl
addl
pop
cmp
das
nop
test
aam
fcos
inc
dec
ds
cld
dec
mov
or
daa
dec
jmp
push
decb
setne
mov
dec
sbb
pop
rcrl
addr16
mov
jae
xlat
mov
aaa
pusha
dec
imul
ret
cmpsl
les
imul
imul
lea
jle
pop
mov
cmp
gs
cmp
movsb
pop
xchg
jb
sub
pop
xlat
clc
popl
push
ret
xchg
xor
mov
pop
out
xor
pop
push
les
cmp
push
lret
lods
addr16
or
data16
mov
push
xchg
mov
lret
pop
cmp
shld
push
jb,pt
or
inc
in
mov
sbb
push
sbb
add
add
jne
add
shll
xchg
fstpl
rcll
sbb
mov
int3
test
xchg
jge
push
mul
out
test
push
mov
inc
das
loop
clc
sub
aam
jb
in
pop
jle
lret
cmp
lahf
xor
or
push
push
jecxz
rorl
int3
mov
fcompl
push
pop
pop
cmp
push
pop
ret
jge
add
xchg
aad
pop
xchg
mov
jle
stos
adc
roll
mov
sbb
cmp
in
loop
or
mov
cmpsl
fisubrs
out
into
scas
sub
xor
push
cmp
mov
test
sahf
mov
and
inc
cld
xchg
in
adc
xor
test
pop
cmp
mov
movsb
pushf
pop
mov
decb
insl
mov
dec
xchg
lds
in
fcoml
shl
xchg
lret
jne
inc
imul
mov
negl
jbe
je
andl
xor
jmp
mov
inc
imul
mov
xor
push
mov
add
popa
jo
loopne
jb
call
pop
mov
iret
mov
fnsave
into
mov
sti
test
push
sarb
xor
not
das
jns
cmp
jbe
push
insl
and
in
adc
in
pusha
inc
bound
jmp
mov
fprem1
movsb
and
out
out
push
popa
add
sub
push
push
sub
jb
mov
stc
scas
sar
pop
ret
jbe
mov
repz
js
mov
mov
or
mov
mov
pop
mov
outsb
add
sar
sbb
dec
shll
and
enter
iret
clc
cmp
dec
call
enter
js
inc
xchg
add
jp
jle
jmp
data16
pop
and
push
push
cmp
jge
push
jne
inc
and
fildl
sbb
xchg
loop
mov
aam
nop
movzwl
ss
es
sti
or
or
xchg
aas
xchg
dec
in
int3
lods
lods
stc
mov
sub
shr
sbbb
cmp
out
test
inc
dec
filds
hlt
loop
outsb
and
shlb
rolb
mov
cmpsb
or
xchg
jns
mulb
daa
mov
push
scas
cli
inc
fcoms
out
xchg
test
out
xchg
mov
loop
add
in
xchg
add
xchg
push
jg
cmpsb
aad
lcall
mov
xchg
xorl
cli
xlat
push
push
dec
int3
sbb
aad
into
push
stos
rorl
ds
rcr
subb
and
nop
inc
rcr
mov
pusha
cmp
fimull
outsb
scas
cld
call
enter
shlb
mov
fs
lods
dec
pop
add
sub
jecxz
jle
int
cli
lds
jo
add
cmp
push
mov
in
ret
add
lret
or
pop
ret
inc
xchg
dec
jge
insb
mov
lods
cltd
outsl
scas
shr
inc
ret
pop
mov
pop
mov
add
sbb
ljmp
mov
leave
call
dec
or
imull
subl
push
add
pop
jmp
outsb
xchg
std
dec
cmp
stos
push
call
inc
cmp
mov
xchg
daa
rorl
xchg
int
and
sbbb
sub
dec
movq
sbb
jno
lcall
or
test
outsl
mov
or
int3
std
jno
xchg
shrb
cmpsl
mov
xchg
mov
xor
jnp
mov
inc
in
into
movsl
fistl
iret
xor
clc
or
sub
jmp
stos
inc
push
jmp
popf
nop
cwtl
dec
sub
xchg
pop
cmpl
in
scas
xor
sbb
inc
stos
mov
call
les
int
pop
mov
adc
dec
rcll
les
mov
push
outsb
outsb
loope
pushf
push
adc
in
or
bound
mov
sub
subb
cmpsl
aad
negb
imulb
sub
xchg
inc
pop
or
mov
lods
lock
jne
punpcklwd
sbb
jg
in
pop
push
fwait
mov
lcall
fmul
jp
cmp
jbe
fildl
add
outsb
fnsave
popf
pop
test
loop
lcall
rorl
ja
xor
or
mov
and
mov
je
and
jg
lds
fisttpl
outsb
lcall
mov
mov
fldcw
add
sub
ret
loopne
ret
mov
roll
add
lret
pop
fdivrl
rclb
sub
sahf
lods
lods
jp
dec
jb
and
into
shll
lret
imul
cli
pop
pop
movsl
mov
push
cli
dec
sarl
fsubrl
shlb
outsb
lods
ljmp
outsb
inc
cld
and
fstp
pop
jmp
push
cmp
or
adc
pop
jns
xchg
outsl
lds
or
pop
ljmp
or
lea
fmull
xlat
sahf
faddp
movsl
and
aam
mov
je
xchg
pop
insl
iret
inc
xchg
add
loop
pop
in
add
pop
mov
mov
das
lret
and
mov
and
add
mov
jmp
xchg
lods
test
sbb
push
loopne,pn
arpl
inc
addr16
mull
mov
shll
push
mov
adc
mov
jne
pop
dec
lods
int3
sar
mov
in
ret
lcall
and
push
add
and
inc
mov
test
xor
dec
and
mov
jmp
mov
add
jg
xchg
jnp
out
inc
xchg
sahf
cltd
jo
sbb
sub
sbb
jge
lret
pop
mov
or
jmp
or
hlt
inc
repz
popa
fidivrs
test
jbe
inc
sarb
pop
mov
mov
data16
xor
xchg
add
mov
and
ret
stos
shl
fdivrs
imul
xor
out
ss
ficoms
enter
popf
pop
or
test
add
insl
gs
mov
adc
iret
lcall
dec
inc
jnp
adc
sbb
jo
daa
fsubp
int3
jbe
inc
sub
jmp
push
sub
loopne
xor
mov
out
and
das
adc
sub
fwait
aam
test
dec
mov
pop
scas
jg
pop
pop
inc
xor
xchg
pusha
push
inc
lods
lock
add
insl
loope
and
mov
test
lea
mov
aas
in
jns
push
out
sahf
stc
pop
cmp
push
notl
mov
mov
push
pop
outsl
cmp
jne
imulb
push
mov
mov
std
les
xor
xor
shlb
sub
xchg
cld
jle
pop
xlat
mov
notb
outsl
jnp
loopne
jmp
fisubrs
xor
mov
nop
pop
push
mov
lcall
mov
jne
add
mov
mov
decw
push
mov
push
pusha
clc
cmp
push
hlt
dec
pusha
idivb
xor
arpl
xchg
dec
jbe
xchg
ljmp
out
mov
jg
iret
sbb
jge
pushf
std
fbstp
inc
push
and
and
das
insl
add
mov
sub
dec
dec
ret
shrb
gs
arpl
push
cmpsb
popa
pop
add
mov
out
adc
int
mov
scas
lds
and
push
xchg
aad
shlb
test
notb
out
dec
stos
test
xchg
cmp
inc
cmc
dec
out
sbb
insb
dec
jg
and
mov
pop
iret
and
out
out
out
loopne
xlat
cmpsb
dec
add
dec
push
adc
je
dec
stos
inc
fcompl
xchg
or
and
fbld
vcmpss
dec
mov
js
xchg
rol
loopne
rolb
mov
lret
lea
pop
mov
jg
mov
nop
int
test
lods
test
lds
aaa
es
mov
aaa
xor
xchg
cmpsb
xor
dec
pop
sbb
mov
fwait
dec
or
or
jns
aas
adcl
adc
mov
test
dec
adc
push
in
out
das
pushf
cmp
cmp
fnstenv
shl
mov
pop
inc
push
mov
xchg
std
jecxz
scas
ret
push
sub
mov
dec
push
bound
mov
push
mov
mov
or
jge
lods
pop
scas
test
negl
lahf
stos
leave
pop
inc
loop
leave
dec
mov
lret
cmpsb
adc
or
xchg
neg
adc
sub
xlat
roll
xor
rcrl
pop
aad
jl
and
aam
in
imulb
jp
dec
jge
pop
jbe
and
adc
dec
dec
mov
stos
scas
pop
hlt
sbb
push
push
and
test
pop
lret
jge
xor
test
xchg
rclb
and
ja
icebp
popa
xor
cmp
imul
adc
pop
add
int3
or
dec
inc
mov
popf
push
out
sbb
sub
cld
pop
sbb
mov
jno
sub
sbb
or
repz
push
in
inc
adc
sbb
clc
mov
out
push
xor
fsubrs
imul
cmp
scas
pop
lahf
mov
pop
jno
and
or
push
fsubp
in
jecxz
pop
sbbb
mov
mov
sub
pop
sbb
popa
std
fidivrl
xor
insl
pop
shlb
pop
rol
aaa
cmp
add
lock
mov
fs
pop
mov
ret
movsb
out
rorl
pop
ret
inc
cmp
pop
mov
push
jecxz
pop
inc
sbb
js
into
into
in
dec
ficoms
int3
stos
aas
sbb
pop
and
mov
fidivrs
in
leave
push
icebp
xor
and
es
in
mov
xchg
mov
mov
push
pop
or
dec
icebp
aas
lea
and
mov
subl
mov
loope
repz
mov
or
clc
jo
inc
push
push
adc
mov
pop
addr16
dec
scas
mov
fbld
xchg
mov
mul
and
lods
lods
hlt
jne
push
xlat
cltd
dec
xchg
xchg
stos
shr
add
test
xor
jmp
sbb
pop
rcl
sahf
test
add
mov
jle
fwait
sbb
call
adc
add
sub
pushf
jno
add
leave
cmpsl
test
push
jae
sbb
jg
push
aam
jae
sub
mov
sbb
cmpsb
testl
lret
mov
sbb
movsl
jge
punpcklwd
repz
addb
test
or
push
adc
out
out
out
test
lcall
addr16
fstps
sub
pop
jbe
sbb
mov
mov
ljmp
stos
pusha
inc
out
sbb
lret
scas
inc
hlt
mov
loope
mov
inc
jecxz
mov
add
sbb
out
ja
cmp
ret
dec
and
pop
shrl
pop
cmp
mov
pop
pushf
mov
cmp
sub
push
imul
xchg
inc
stos
leave
push
push
enter
mov
int3
mov
adc
pusha
add
shr
lock
jae
adc
dec
push
ljmp
xlat
ljmp
and
push
ret
mov
xor
jb
movsb
imul
aas
push
mov
pop
xchg
mov
int3
adc
push
push
pop
lret
sbb
mov
imul
xchg
sub
inc
mulb
test
sub
inc
and
pop
je
enter
aas
sbb
sarb
fs
lock
movl
aam
push
sbb
jl
and
adc
mov
loop
inc
inc
jae
xchg
xchg
lret
push
inc
dec
sub
adc
arpl
add
popa
sub
aad
sbb
js
rcrl
ja
lret
cwtl
push
pushf
jbe
xchg
subb
es
clc
push
xlat
pop
xlat
loope
mov
xchg
push
jg
inc
std
fldenv
and
push
cmp
mov
je,pn
pop
testl
push
adc
aam
dec
xor
sbb
sbb
xchg
push
lret
stos
and
or
dec
orb
add
pop
in
mov
rorb
cmove
add
mov
mov
xchg
or
je
dec
in
xchg
andl
subb
mov
sub
dec
aaa
in
jno
ljmp
imull
jecxz
int
sbb
sub
sbb
mov
int3
pop
adc
test
decl
ljmp
out
adc
adc
dec
cld
in
divb
loopne
inc
std
and
xchg
cmpsl
add
lcall
xchg
imul
sbb
and
fcoml
fbld
mov
out
outsb
sub
jle
iret
clc
sub
mov
outsb
adc
movsl
mov
xchg
popf
sbbl
fbstp
jne
popf
mov
mov
ficompl
adc
pop
or
bound
jno
mov
sub
mov
ja
pop
in
mov
mov
out
je
push
mov
jge
jmp
cmpb
sbb
cmp
fidivs
pop
add
cmc
in
mov
add
pop
sti
pop
mov
xchg
cmp
and
inc
mov
lods
lods
push
out
pop
nop
fstpt
mov
cmc
lahf
dec
loope
and
jne
inc
cli
cmp
mov
xor
test
dec
push
shll
jno
inc
mov
loop
sub
jl
sub
les
push
push
mov
adc
mov
scas
jecxz
dec
mov
push
xor
sbb
adc
lds
movsl
shll
mov
fldcw
jne
push
fldt
fucomi
dec
fs
mov
xor
out
popf
sbb
xor
xor
ja
or
adc
and
adc
mov
aam
cmpsl
xchg
mov
inc
mov
filds
inc
loopne
xor
jnp
in
adc
jle
pop
incb
mov
decl
lret
movsb
sbb
pop
clc
push
ret
loopne
or
inc
in
in
in
imul
subb
or
sti
fdivl
mov
jae
pop
mov
cmp
sarb
jne
add
in
adc
jb
fnsave
jne
sbb
jmp
fmul
mov
mov
aad
test
arpl
mov
or
movsb
mov
pop
mov
dec
lock
nop
sub
fsubl
add
cs
or
adc
mov
cmc
mov
push
lcall
cld
cmpsb
push
sub
sub
into
xchg
jae
sbb
xchg
fidivl
es
subl
ss
cli
mov
aam
xor
enter
push
adc
std
cld
sub
es
jnp
push
dec
leave
fs
in
dec
dec
and
sub
or
loope
and
jb
mov
mov
mull
add
mov
xchg
pop
ljmp
push
loopne
pop
xchg
data16
push
mov
and
xor
mov
pop
or
mov
or
icebp
and
pop
fsubl
shrl
xor
dec
dec
adc
into
outsb
or
xchg
sti
mov
test
test
or
leave
popa
in
and
je
inc
push
pop
cmp
jne
ret
xor
pop
sti
lret
cwtl
mov
sbb
mov
lret
pusha
adcl
je
push
clc
shlb
scas
leave
icebp
inc
jmp
push
ret
cmp
imul
xchg
push
cli
ja
ljmp
mov
mov
es
push
repz
ljmp
sub
pop
pop
pop
mov
xchg
jns
sub
stos
loopne
xor
mov
leave
inc
push
mov
test
les
js
subb
mov
cmp
pop
push
pop
adc
ja
nop
mov
xor
and
mov
add
ret
cli
and
pop
xchg
dec
dec
pusha
adc
pusha
mov
adc
or
lea
sbb
xchg
ficompl
mov
sbb
jecxz
outsl
mov
bnd
loope
dec
outsb
sbb
bound
add
fs
aam
stos
aam
mov
loopne
je
lea
lods
or
jns
xor
test
les
push
push
push
mov
mov
xchg
int3
repz
mov
dec
addr16
movsb
push
cli
dec
aaa
mov
or
into
andps
lahf
inc
bnd
push
sbbl
imul
into
push
int3
xchg
dec
inc
mov
clc
xchg
cmpsb
test
inc
pop
in
adc
jp
xchg
hlt
fstl
rcrl
mov
xchg
adc
fldt
xor
cli
push
pop
add
inc
mov
dec
lock
and
push
adc
pushw
cmp
jmp
sub
adc
repz
mov
xor
xor
sbb
fdivs
shlb
xor
mov
adc
mov
outsb
in
push
or
loop
jmp
packssdw
clc
inc
fadds
in
xchg
inc
sub
inc
adc
outsl
xchg
sbbl
mov
inc
test
mov
lock
mov
enter
inc
xchg
loopne
push
xlat
test
push
mov
inc
test
push
cmp
loop
test
cmp
loope
into
std
lds
inc
pmuludq
ss
mov
dec
adc
mov
cli
adc
dec
add
rcl
out
push
cmc
insb
call
aas
xchg
iret
adc
rclb
rep
imul
dec
or
or
mov
lods
push
adc
xlat
aad
sti
inc
into
loope
mov
push
mov
pop
or
call
sub
inc
add
scas
ss
inc
push
dec
jne
pop
loop
sub
mov
jle
mov
sub
bound
pop
movsb
adc
cwtl
fdivs
or
call
dec
shr
popf
or
mov
jbe
loope
sub
fsubl
hlt
inc
push
gs
cltd
addr16
cld
push
stc
mov
clc
mov
inc
pop
test
cmp
scas
sbb
xchg
add
inc
fdiv
ror
rorb
push
cmp
dec
jae
cmp
nopl
add
sbb
xor
mov
jmp
es
mov
adc
leave
and
cmp
adc
jne
mov
lods
sub
test
and
jp
ds
lret
adc
test
mov
push
pop
scas
decl
scas
mov
mov
inc
ss
cmpl
jl
frstor
jge
mov
pushl
mov
lahf
mov
and
sbb
sbb
cltd
and
jb
repz
add
fisttps
dec
fldcw
stos
inc
sub
or
jp
push
or
cmpsl
sbb
ret
sbb
loope
jle
add
mov
lea
loope
jl
jmp
cltd
outsb
pop
aaa
dec
mov
jnp
mov
loope
jnp
dec
inc
aas
lret
xor
jmp
xchg
call
sbb
lods
out
nop
iret
shr
fs
xor
mov
imul
mov
pusha
loope
push
lahf
fwait
shlb
loope
cld
sahf
ss
mov
aad
cmp
cmp
xor
call
cmp
mov
jmp
cmc
push
add
push
or
repz
xor
jmp
call
imul
ror
rclb
xchg
insl
mov
aam
out
popa
mov
mov
push
push
cli
xchg
out
add
fisubs
ja
int3
push
mov
pop
fildl
loop
data16
adc
mov
dec
sub
imull
mov
bound
push
lahf
sub
or
sub
and
fwait
dec
cmpsb
dec
dec
scas
adc
fldt
jmp
jne
rcll
pop
das
xor
xor
nop
call
or
jno
sarl
jbe
and
pushf
dec
sub
mov
roll
arpl
hlt
scas
mov
test
push
and
adc
xor
mov
or
inc
adc
shl
iret
xchg
jmp
call
or
insl
inc
sbb
lret
dec
xor
ret
jnp
and
sbb
jbe
mov
ljmp
ret
mov
clc
sbb
push
mov
pop
repz
je
and
addr16
and
lret
aaa
test
push
out
arpl
and
jb
jno
cltd
dec
pop
and
and
ljmp
das
sub
sbb
sahf
js
xchg
cmpsb
subb
test
or
dec
or
pop
inc
aad
and
mov
cmp
dec
cld
fisttpll
jg
mov
or
pop
mov
jecxz
data16
mov
jg
cs
sub
les
push
test
xchg
pop
fs
sahf
sahf
pop
icebp
mov
dec
cmp
ret
lret
cmp
jo
ret
sub
mov
lds
adc
dec
mov
sub
sbb
mov
add
std
add
xor
aas
xchg
outsb
dec
aam
movb
rcl
in
jecxz
movd
and
pop
mov
cltd
jb
mov
and
or
repz
mov
notb
je
inc
xchg
pusha
add
in
pop
ja
test
adcb
dec
mov
jge
gs
pop
dec
sbb
adc
pop
sarb
adc
xchg
and
add
les
and
out
aam
or
cmp
xchg
shlb
in
sarb
leave
mov
stos
in
mov
xchg
enter
xchg
jl
mov
aaa
lret
hlt
sub
sub
in
leave
idivl
aam
test
lea
bound
mov
in
repnz
mov
aad
fwait
ret
adc
cwtl
and
ss
pop
mov
push
sarl
fdivrl
daa
andl
inc
mov
bound
in
mov
stos
ds
inc
sbb
cmp
xor
xor
cmp
lret
mov
sahf
lods
in
mov
jnp
mov
xchg
sub
push
mov
ret
jno
clc
mov
tzcnt
sub
mov
mov
pop
lea
pop
mov
fmul
cmp
adc
jae
adc
cmpsb
push
ffree
jmp
stos
xchg
nop
je
xor
mov
mov
adc
pop
repnz
fdivrs
rcrl
or
loopne
leave
jo
lahf
and
out
xor
les
inc
dec
push
sbb
fwait
sbb
test
xchg
mov
loope
and
in
mov
test
ret
fwait
lcall
pop
cmpsl
push
mov
inc
mov
cmp
jae
inc
scas
xchg
jae
xchg
stos
js
scas
testb
sub
adc
and
push
adc
mov
cltd
jne
push
lods
push
xchg
jo
sbb
shrl
jp
and
call
and
inc
aas
pop
add
icebp
mov
scas
push
or
lret
bound
and
pushw
test
xchg
cmp
push
and
aam
inc
push
imul
aad
xchg
data16
shll
lcall
test
int3
fucomp
mov
sbb
jge
mov
and
je
movsl
jae
test
xchg
into
fidivl
sahf
icebp
pop
xor
push
mov
cmp
outsl
mov
pop
dec
lret
pop
pop
jae
movsb
jmp
stc
lahf
in
sub
ljmp
enter
adc
mov
scas
out
mov
xchg
cli
pushl
add
movsl
lcall
ds
mov
jb
mov
ja
cmpsb
fistpl
les
pusha
lret
mov
cltd
xor
sbb
test
push
pop
enter
adc
call
and
mov
nop
aam
adc
aad
push
cltd
ret
push
inc
mov
lds
jns
lcall
ret
or
iret
jp
jae
movsb
mov
loop
data16
repz
or
cmp
arpl
sahf
ss
imul
dec
push
sbb
stos
aam
push
ljmp
cmp
lret
pop
xchg
cmp
pop
pushf
inc
push
add
jmp
xor
inc
int
cmp
adc
inc
or
jae
imul
lret
lret
mov
add
adcl
inc
adc
adc
in
or
lods
movsl
xlat
scas
mov
aas
fwait
push
clc
cmp
push
adc
int3
cs
xor
aas
push
iretw
mov
mov
into
mov
mov
xor
rorl
hlt
xchg
movsb
mov
fiaddl
cmpb
negb
push
jp
jmp
push
mov
mov
xorl
and
ljmp
in
push
xchg
push
inc
mov
inc
out
xor
insb
stc
lahf
mov
cmp
cmc
or
mov
xor
movsl
sbb
mov
ja
xchg
push
inc
scas
leave
push
orb
in
adc
mull
lcall
push
pop
sub
mov
inc
adc
dec
out
cwtl
sbb
dec
mov
fsubr
imul
dec
add
cmp
add
icebp
int3
inc
cmpsb
hlt
popf
aaa
fcmovnbe
push
adc
test
out
fidivrl
mov
bound
movsl
jnp
call
stos
mov
push
gs
mov
bound
xor
pop
jmp
push
mov
fcmovu
xchg
aaa
das
testl
jge
dec
xor
std
jae
or
dec
jl
push
jae
jb
cmp
cmp
and
or
hlt
in
or
in
xchg
pop
daa
xchg
addr16
test
inc
dec
cmp
push
jbe
lods
sbb
mov
ds
daa
xor
ret
sbb
xlat
ret
jg
adc
mov
lock
dec
mov
mov
xchg
pop
add
mov
sbb
sub
mov
stos
stos
clc
pop
cmp
jecxz
div
sbbb
stos
sbb
enter
adc
mov
movsl
jae
mov
mov
jp
mov
shrb
xchg
mov
fs
adc
mov
xchg
cmpsl
outsl
xor
mov
enter
pop
or
cltd
in
or
pop
pop
push
dec
push
nop
xor
sbb
cmp
lods
pop
mov
mov
loope
jb
clc
pop
or
stc
push
adc
repnz
fucomi
jns
bound
dec
repz
xor
xchg
mov
xor
loop
lcall
inc
roll
scas
mov
leave
es
inc
sbb
in
xlat
rol
sbb
cmp
or
fistl
stos
adc
orl
sbb
sbb
inc
add
push
out
dec
jl
icebp
mov
fdivrl
push
int3
in
rcrl
notb
imul
insl
andl
out
cwtl
sub
mov
add
xor
jp
or
test
shl
leave
paddsw
dec
and
pop
and
xchg
add
pop
outsl
es
xchg
movsb
jecxz
and
stos
sahf
mov
cwtl
push
mov
inc
adc
inc
push
or
adc
jmp
mov
loop
push
sbb
sahf
xor
jl
push
cmpb
ret
inc
daa
cmp
jmp
xorb
fstps
adc
fnsave
sti
mov
inc
inc
or
push
repz
xlat
sbb
lret
sub
outsl
sbb
inc
sub
pop
adc
adc
adc
inc
add
andb
lods
jb
call
shlb
test
or
inc
or
loopne
xor
xor
fistps
pop
sub
enter
mov
lock
je
pop
add
nop
in
fmull
data16
les
sub
ret
push
mov
cmc
xchg
mov
sub
dec
outsl
and
mov
mov
or
in
add
outsl
push
dec
test
mov
pop
lods
fwait
inc
aam
xor
nop
mov
sub
out
lods
adc
mov
out
push
mov
mov
cld
dec
pop
sub
lock
aam
adc
iret
xlat
iret
das
xchg
push
pusha
aad
test
mov
dec
outsb
xchg
push
ficoms
ret
popa
leave
inc
or
push
mov
lahf
pop
mov
jecxz
mov
imul
loope
add
push
push
mov
leave
movsl
jo
push
mov
rorb
scas
les
loopne
addr16
mov
mov
out
jb
mov
xchg
jb
gs
rclb
lahf
push
fwait
movsb
adc
add
iret
mov
test
or
test
ds
push
sarl
aam
ljmp
adc
inc
aaa
xchg
mov
pushf
aad
adc
xchg
lods
bound
fcmovu
lds
dec
mov
scas
ja
jge
and
int
or
pop
dec
add
adc
cmp
les
iret
mov
jns
add
cmpsb
cmp
enter
xor
nop
out
mov
les
push
in
xor
jecxz
imul
cmpsb
into
xchg
mov
js
add
ss
sub
mov
push
mov
push
mov
fmull
sbb
sub
mov
ret
mov
test
fwait
loope
push
dec
pop
pop
jmp
call
jb
sub
loope
mov
or
cmp
imul
test
push
std
jns,pn
movsl
jl
mov
adc
inc
sti
mov
mov
call
or
sbb
fisttpl
sti
faddp
lods
aaa
jno
testl
xorb
pop
mov
mov
mov
icebp
mov
out
leave
cmp
push
add
dec
pop
pop
imul
in
sub
pop
sbbb
arpl
push
xor
ja
cmp
cmp
sarl
clc
shll
int
testl
adc
loop
in
cmpsl
test
rcrb
xor
pop
out
pop
sbb
jo
movsl
pop
lods
xrstors
jns
mov
sub
mov
adc
mov
std
cltd
jb
test
cmp
das
lret
pop
ljmp
sub
fiadds
in
lret
cmc
push
loopne
dec
inc
popf
add
or
jne
push
in
outsb
lret
sub
dec
mov
dec
push
jo
and
or
aam
mov
and
pop
jg
mov
daa
xor
pop
push
dec
js
out
icebp
das
mov
rcl
js
mov
pop
add
ss
bound
dec
or
fidivl
faddl
push
cmp
lods
pop
inc
xor
popf
add
mov
xor
mov
loopne
xorps
icebp
jo
lock
add
pop
jecxz
into
mov
mov
shll
int
xor
arpl
pop
lds
mov
gs
cli
and
or
repz
pop
stos
sbb
sbb
int3
cmp
xchg
rorb
rcrl
out
daa
fiaddl
jmp
je
rol
lret
pop
dec
push
arpl
pushf
ja
shrb
loope
call
negl
call
outsb
xchg
sub
inc
cmp
pop
sbb
mov
pop
xor
mov
or
lret
lcall
cwtl
fisubrl
lods
pop
mov
pop
mov
inc
sub
jo
xor
out
pop
mov
xchg
mov
cmp
mov
aam
xor
push
call
rcrb
icebp
enter
dec
sbb
shr
xlat
push
pop
call
push
stc
js
inc
clc
sub
xchg
shlb
jbe
add
mov
mov
mov
aaa
mov
jno
data16
orl
lea
jp
jo
cmpb
mov
add
rep
sar
test
dec
push
data16
dec
adc
add
inc
jle
mov
xchg
pop
movsl
clc
insl
and
sub
push
stos
xchg
stos
pop
dec
inc
cmpsb
cmp
or
add
and
xchg
fdivl
xorb
aam
es
repz
pushf
mov
test
and
sub
inc
pop
imul
or
mov
ss
movl
xor
popf
jmp
push
loope
mov
cmp
mov
fnstsw
pop
test
movsl
fsub
mov
mov
ret
adc
outsb
sahf
xor
cmc
push
sbb
lds
mov
cltd
ss
int3
adc
fisubrs
lret
sub
in
pushf
mov
cmp
xlat
add
sub
mov
and
mov
xor
inc
xchg
add
add
fistl
bound
jp
mov
call
lds
notl
ds
xchg
in
nop
xchg
lea
sub
add
packssdw
add
mov
jb
xchg
sbb
push
cmp
inc
imul
cmp
mov
push
add
lcall
push
dec
out
hlt
mov
mov
jnp
mov
in
clc
adc
mov
mov
inc
adc
mov
es
cli
lahf
repz
into
dec
jge
sti
mov
push
push
and
daa
jecxz
adc
clc
push
mov
sbb
inc
gs
movsl
pop
test
rcrb
xchg
mov
lcall
jecxz
ja
pop
mov
std
add
mov
adc
jl
mov
xor
cmpsb
mov
cmp
mov
js
add
push
fstp
and
roll
js
fldenv
jmp
mov
xchg
in
lods
xor
das
loop
push
fisubl
mov
test
shll
add
sub
xorl
mov
pop
mov
sbb
mov
hlt
incl
mov
fcomps
in
in
fsin
sbb
int3
jp
lock
dec
inc
mov
inc
repnz
pop
inc
mov
jge
shrb
push
fwait
stos
mov
lods
xchg
pop
addr16
cmp
mov
rolb
dec
add
stos
jo
adc
arpl
mov
cmp
cmpsl
inc
das
push
rclb
mov
mov
push
mov
adc
sbb
jbe
jno
fwait
jo
test
insl
xchg
xchg
lock
jno
mov
aam
adc
inc
xchg
insl
hlt
out
out
daa
push
pop
jae
fisubrl
test
xchg
pop
dec
call
sarl
pop
das
jns
out
cmp
lret
in
xchg
mov
iret
xchg
in
ret
push
cmp
mov
mov
imul
mov
push
xchg
into
jb
lahf
shlb
xor
pop
xor
xchg
aas
lods
cwtl
cmp
sarl
cmpsb
sub
cmp
inc
scas
lcall
aam
cmc
mov
ror
and
push
push
ret
repz
popa
arpl
xchg
ror
aas
and
or
decb
pop
out
out
or
jo
push
add
aam
shrl
add
lret
and
fildl
fnstenv
jbe
sub
push
xor
sub
imul
and
mov
lret
pop
add
ret
std
or
ret
clc
les
mov
sbb
lret
je
leave
mov
out
push
sbb
mov
mov
jnp
js
rcrl
lods
xor
add
inc
stos
arpl
das
sub
mov
lea
out
sbb
insl
and
pop
jns
mov
lret
repz
adc
into
popa
jns
mov
xor
ds
push
outsl
roll
sbb
push
lcall
je
stc
xorb
xor
mov
cmp
xor
test
jg
iret
pop
mov
xchg
push
bound
stos
pusha
movsl
dec
dec
or
stc
imul
mov
lods
sbbb
out
sub
ljmp
popf
pushf
fistpll
cmp
sar
ljmp
xchg
mov
je
cs
call
cmp
push
mov
jmp
xor
or
dec
sbb
inc
enter
std
and
int3
int3
gs
pop
add
cmpsb
mov
pop
mov
mov
scas
test
and
nop
push
xor
ficoml
mov
outsb
and
xchg
inc
adc
ljmp
cmp
xchg
fadd
shrb
js
lds
inc
fs
inc
cmp
or
out
hlt
mov
sbb
mov
dec
fisttpl
push
dec
dec
pop
insb
test
arpl
call
shll
and
pusha
xchg
sub
insb
pop
mov
bts
push
and
mov
jp
arpl
xchg
and
popf
mov
inc
in
ljmp
sub
pop
adc
or
xor
mov
mov
popf
frstor
mov
or
inc
jb
adc
fadd
icebp
xchg
inc
andl
xchg
cmp
push
dec
dec
loope
pushf
or
pop
out
mov
mov
mov
adc
jb
mov
and
sbbl
adc
and
cli
popf
cld
cli
jle
imul
aas
dec
test
in
push
mov
adc
test
popf
pop
sbb
adc
pusha
push
gs
stos
dec
xchg
lret
adc
loopne
adcl
mov
adc
or
push
dec
mov
daa
fdiv
jecxz
sub
mov
sbb
sub
repnz
fiaddl
into
fimull
movsb
push
cmpsl
and
dec
pop
adc
outsb
xor
mov
mov
fmulp
pop
imul
lock
or
push
sub
sub
cmpsl
mov
and
adc
add
int3
call
dec
ja
adc
cmp
fsubrs
out
pop
movsb
dec
fadds
movsl
movsb
fyl2x
add
test
aam
mov
push
das
pusha
push
outsb
fldt
inc
mov
in
sbb
xor
vxorps
aad
pop
fbld
je
adc
push
clc
ds
loop
in
cld
in
add
call
sub
cmp
out
fdivrl
ret
iret
ljmp
xor
cmp
mov
sub
cmpb
dec
int3
sbb
je
bnd
jp
cli
pop
or
add
mov
push
ljmp
sbbl
xor
cmp
or
in
sub
sub
rol
enter
cmpl
sbb
mov
out
sahf
lcall
dec
mov
daa
stos
push
in
testb
pop
push
aam
imul
pop
popf
push
movsb
xchg
es
lcall
cmpsl
xchg
fdivl
sbb
mov
add
mov
xor
loopne
stos
xor
inc
ss
and
mov
arpl
mov
lret
add
inc
pop
mov
icebp
push
pop
test
ret
arpl
in
insl
lds
imul
xchg
sub
push
inc
fimuls
sub
jne
rcll
je
push
outsb
sbbl
dec
ja
dec
jae
mov
out
pushf
mov
mov
clc
cld
lods
test
jno
in
cmpsl
repnz
roll
and
sbbb
mov
mov
js,pt
sahf
pop
fldt
cmp
jecxz
fcmovnb
dec
adc
test
rorb
ja
or
mov
mov
and
pop
and
ljmp
add
dec
and
jecxz
iret
imul
pop
or
add
inc
cld
rcll
add
pusha
repnz
sbb
adc
mov
jl
lea
pop
lcall
aad
ficoml
push
adc
fnsave
dec
pop
lret
pusha
cwtl
jo
jmp
lea
push
jecxz
sbb
lcall
jle
out
in
add
pop
aad
scas
mov
loope
cmp
cmpsl
mov
clc
sbb
outsl
addr16
sub
cmc
gs
dec
pop
inc
pushf
mov
je
mov
ja
cs
sub
cmp
mov
dec
enter
jae
fs
ficoms
sahf
push
xlat
movsl
xor
pop
imul
pop
movsb
insl
shll
clc
pop
mov
sub
stos
repnz
int
movsl
xorl
arpl
lret
movsl
sub
cmp
ljmp
sub
cld
fwait
aam
mov
out
xchg
mov
rorb
ss
inc
and
gs
shlb
sti
dec
lock
xor
les
dec
lds
pusha
div
cmp
xchg
jle
and
cld
bound
push
mov
push
cmp
icebp
fcmovu
adc
or
xchg
or
dec
add
and
mov
dec
lock
push
aad
loop
rorl
test
jmp
movsl
mov
lret
ljmp
dec
mov
jns
jmp
outsl
mov
mov
stos
mov
xor
cmp
pop
ret
movsb
xor
push
mov
xchg
cmp
arpl
daa
adc
mulb
sahf
rcll
rcrl
mov
fldl
insb
fldcw
sahf
sarl
jbe
adc
xchg
out
loopne
push
cmp
repnz
pop
xchg
cmpsb
mov
mov
inc
dec
hlt
fsubrs
or
inc
addr16
orl
jmp
add
test
je
ficoms
enterw
cmpl
jns
dec
scas
add
negl
ret
sub
pop
popf
sti
and
loope
mov
xor
mov
or
fstpl
mov
roll
pop
mov
movsb
cmp
and
adc
xchg
addl
mov
jmp
adc
jmp
daa
adc
mov
testl
popf
add
pushf
mov
fstl
push
je
je
aas
fs
mov
clc
dec
shrl
sub
push
pop
jb
movsb
shll
daa
rsm
cmp
push
ret
dec
hlt
into
or
adc
xchg
and
jmp
mov
sahf
mov
and
cmp
cmpsb
fcomp
mov
jne
pop
mov
jl
lea
aas
icebp
das
sbb
mov
inc
mov
mov
and
mov
fcomi
mov
xor
sarb
stos
pop
sbb
and
std
ss
movsb
cmc
fisubl
shll
test
push
xor
sub
in
adc
lret
adc
sbb
push
fwait
push
movsb
xchg
sbb
or
mov
dec
mov
sub
push
lods
lods
ror
and
lret
outsl
cwtl
int
cmp
or
mov
xchg
pop
roll
pop
test
orb
subl
jno
sbb
xchg
cli
in
rclb
popf
insb
xor
ds
push
loopne
cmpsb
push
pop
imull
enter
pop
mov
mov
jnp
mov
in
xor
std
jo
add
mov
sbb
stos
pushf
xchg
add
leave
or
fldt
cmp
and
imul
movsl
and
mov
call
push
dec
push
xchg
jl
mulb
outsl
xor
es
cmp
data16
daa
add
rorb
jl
mov
out
mov
fmuls
sub
sbb
cmp
ret
jno
dec
cmp
xlat
xor
popf
cmpsb
or
jne
mov
dec
cmp
jmp
jl
outsb
inc
sbb
cmp
xor
sub
xchg
cmpxchg
js
pop
pop
in
cmp
push
sbb
aas
cmp
xlat
jmp
inc
data16
xor
js
dec
mov
loop
int
stc
dec
add
std
outsl
cld
in
dec
or
mov
jge
mov
add
mov
lret
pop
mov
cld
push
sahf
shll
xchg
imul
scas
sbb
js
cmp
push
sahf
push
jne
and
dec
insb
pop
xchg
rcrl
outsl
aam
idivb
lret
or
cwtl
push
outsb
ds
pop
and
mov
es
lret
mov
fdivrl
test
insb
mov
outsb
jo
xor
in
dec
nop
dec
mov
rcr
cs
xor
outsl
inc
scas
outsl
inc
xor
scas
pop
cwtl
push
dec
mov
inc
add
or
sbb
jp
pop
dec
rclb
xchg
repz
push
mov
jg
cmp
xchg
test
outsb
xchg
sar
cwtl
push
testb
mov
iret
sub
jmp
jns
sub
push
imul
ret
ja
outsl
fimull
adc
iret
fbstp
push
sub
adc
jno
push
xchg
filds
dec
cmpsb
ss
out
and
xchg
add
xchg
lret
std
xchg
dec
jnp
push
add
cmp
rcr
mov
mov
into
popf
es
fiaddl
ret
mov
stc
lahf
ds
test
aaa
rcll
adc
sahf
ficoms
cli
stc
xor
sub
sub
insl
fisttpll
xchg
pop
cmp
sub
cmpsl
rep
pop
cld
or
ljmp
cmp
arpl
sub
push
adc
sbb
lea
insb
in
jle
sbb
sbb
or
sbb
clc
push
pop
mov
iret
in
cmpsl
popa
pop
push
and
mov
mov
mov
leave
pop
add
fcom
pop
leave
fildll
mov
and
push
pop
in
jle
neg
xchg
dec
int
pop
push
dec
test
int3
jl
enter
inc
out
cmp
adc
inc
mov
lret
push
fcompl
das
int3
cli
inc
inc
push
cltd
sbb
push
sbb
xchg
sbb
push
into
push
ret
pop
mov
or
jno
xor
jmp
inc
fildll
jo
in
pop
push
test
dec
xchg
into
out
outsl
test
or
jnp
inc
hlt
cli
dec
xor
cltd
mov
enter
dec
jp
push
mov
es
jbe
or
xor
jmp
pop
aad
mov
imulb
push
in
mov
pushf
jecxz
sbb
mov
jae
sub
mov
insl
aaa
iret
or
push
imul
je
cmpl
xchg
xor
mov
dec
call
addl
les
shrl
dec
or
es
clc
je
inc
jnp
stos
sub
jo
sahf
clc
mov
fistpll
jne
les
mov
mov
ss
sbb
sub
add
sbbl
pop
cmc
mov
sbb
arpl
pop
dec
inc
rorl
jb
mov
and
out
cmp
rcl
and
lock
and
cmp
xchg
and
imul
pop
mov
dec
mov
jno
mov
xor
and
xchg
icebp
test
jo
mov
orb
mov
xor
xor
imul
jl
lahf
mov
aad
loop
cli
push
add
lret
push
loop
test
es
add
jbe
sbb
sbb
and
sub
and
push
add
pop
in
push
dec
fwait
into
popl
push
xlat
pop
js
mov
push
ret
lods
jge
dec
aaa
lock
pop
xchg
ljmp
inc
mov
xchg
shll
add
imull
mov
mov
ljmp
or
lds
jg
addb
lds
mov
mov
mov
cmp
faddl
cmpsl
cld
loop
mov
pcmpgtw
add
lods
mov
lds
popa
jp
mov
add
inc
hlt
push
jo
sbb
rol
sbb
inc
cld
xor
js
gs
icebp
inc
cs
dec
xor
je
mov
mov
mov
sub
adc
movsl
pop
imul
lahf
fdivrs
in
push
mov
stc
push
loopne
or
push
movsb
mov
mov
cmpsl
cmp
test
nop
mov
sub
xchg
bound
das
in
sbbl
vmwrite
sbb
pushf
xchg
xor
sbb
stc
and
fcomps
shl
inc
stc
push
push
test
stc
js
int3
lods
mov
inc
outsb
mov
push
stos
dec
test
jno
cmc
xchg
pop
cli
in
fs
mov
push
jmp
test
fsubrl
fists
and
fcoms
rcrb
cwtl
lahf
outsl
mov
xor
fsub
sarl
dec
lcall
je
and
rolb
imul
ret
xchg
jbe
mov
lds
mov
mov
aas
sub
out
sbb
popa
adc
sahf
jnp
inc
pop
inc
lcall
lahf
orl
cmp
fsub
lahf
shlb
add
jmp
fldenv
add
push
cmp
shlb
mov
movsb
addr16
cwtl
repnz
les
test
mov
sarb
inc
jle
pop
imul
je
jno
and
mov
out
mov
jg
mov
dec
xor
mov
and
movsb
mov
adc
test
pop
inc
jmp
sbb
jno
outsb
jmp
pop
movl
inc
fsubp
sub
popf
clc
mov
out
mov
sub
pop
ret
mov
mov
ja
sbb
pop
mov
hlt
jno
rorb
sbb
jbe
cmp
jae
movsl
pop
mov
jg
scas
loop
pop
out
jge
pop
jae
out
inc
push
shl
and
int3
push
mov
sub
pop
in
andb
dec
sbb
mov
push
imul
rorl
test
jmp
mov
push
sub
and
fstpl
cmp
adc
lcall
mov
cmpsl
mov
scas
jno
std
or
scas
insl
jg
das
sub
inc
xchg
inc
lea
out
xor
sbb
js
push
fldcw
cmpsb
inc
jo
stos
cmpsb
loopne
jle
popa
icebp
cmpsl
xor
out
js
dec
int3
leave
fiaddl
add
or
pop
jecxz
pop
pop
shlb
scas
and
sti
les
jle
xor
ja
or
inc
push
cwtl
pop
cmp
out
dec
mov
mov
mov
xchg
fildl
cld
shlb
pop
daa
movsb
rclb
cli
pop
aad
hlt
ds
shl
sbb
in
push
cmpsl
insl
pop
shll
fwait
call
inc
pop
inc
mov
out
test
or
inc
add
dec
lret
rorb
popa
test
dec
mov
adc
outsl
dec
idivl
mov
pop
or
cmpsl
xor
pop
arpl
cmp
insb
bound
mov
sub
pusha
shll
jp
fwait
clc
pop
movsb
loop
btr
mov
mov
cli
addr16
jbe
xor
pop
aad
into
mov
sahf
lret
js
adc
jecxz
cmp
jmp
jg
mov
pop
pop
cmpsl
jno
dec
aad
das
mov
icebp
jb
outsb
jge
lods
cmpsb
sbb
or
or
imul
in
cmp
pop
mov
and
dec
sbb
subl
scas
cmp
mov
pusha
xchg
add
sbb
jb
repnz
push
dec
sub
dec
sub
dec
push
into
rcl
jns
ficompl
js
jne
mov
addl
addr16
hlt
inc
mov
xchg
add
clc
dec
pop
mov
push
cmpsb
add
adc
xchg
mov
mov
pushf
loope
sbb
xchg
add
scas
mov
inc
xchg
mov
add
mov
xchg
movsb
out
adc
sbb
fwait
sbb
and
jmp
adc
test
lea
lret
mov
xor
fs
lahf
aad
push
pop
movsl
mov
inc
pop
aam
ja
nop
add
push
faddl
jnp
sahf
mov
mov
leave
daa
jo
in
jae
cmp
push
mov
scas
shrl
dec
jmp
cld
xor
jmp
inc
nop
dec
cmp
daa
decb
pop
mov
popa
les
out
xchg
cmp
jmp
ja
movsl
cld
nop
xor
jns
mov
cltd
dec
shlb
mov
dec
mov
loopne
lea
xor
out
push
imul
les
jne
shlb
cmp
insl
push
sbb
inc
out
pinsrw
sbb
and
xchg
adc
jns
add
int
inc
ja
ds
imul
push
xchg
mov
cltd
sbb
cmp
dec
jae
subl
dec
ds
lds
or
rcrb
mov
mov
call
add
mov
stos
out
int3
fistps
gs
cmpl
xchg
sub
mov
mov
fiadds
aam
out
mov
push
sbbb
loope
aam
adc
mov
push
fstp
mov
sub
adc
in
add
in
jg
insl
push
aaa
ja
out
xor
pop
cwtl
imul
es
test
mov
mov
hlt
roll
dec
add
dec
xlat
aaa
push
pop
push
mov
xchg
push
lds
dec
xchg
dec
data16
dec
mov
cmp
jb
pop
bound
adc
pushf
mov
cltd
pushf
hlt
fldenv
out
movsl
pop
shll
and
subl
or
and
shr
movsb
imul
ds
mov
ret
sub
in
push
test
das
imul
xchg
aam
outsb
sub
mov
iret
mov
xchg
mov
fists
jp
mov
lods
mov
sub
dec
das
cmp
outsl
inc
sahf
dec
mov
push
pop
xchg
add
mov
mov
jns
fldcw
xchg
out
inc
adc
adc
shrb
out
pop
mov
cwtl
xchg
lock
dec
xchg
xor
inc
fwait
out
cmp
mov
or
or
ja
mov
imulb
scas
sahf
mov
mov
sub
bnd
sub
stos
cwtl
jg
lock
push
int3
xchg
outsl
negb
cmp
inc
push
lods
hlt
mov
movsb
lret
sub
pop
mov
scas
cmp
insb
jbe
ret
or
xlat
and
sbbl
and
test
lea
repnz
and
adc
ljmp
jno
lods
jecxz
sub
je
xor
popf
xchg
sub
xor
je
out
mov
cmpb
outsl
in
in
jle
sbb
mov
or
mov
sti
push
shrb
add
lock
cmpb
sub
jl
js
fcoms
sub
jne
nop
out
jo
pop
clc
cmp
xchg
ds
mov
in
mov
xchg
jecxz
pusha
push
add
xor
lea
and
cmp
popf
add
fmuls
sbb
sbb
mov
xchg
test
ja
aam
xor
sahf
mov
test
xchg
call
xor
enter
stc
out
jl
sbb
data16
ds
mov
jne
popf
xchg
mov
dec
push
jmp
xchg
jno
add
out
fadds
pop
in
stos
adc
out
hlt
mov
fstps
popf
mov
pop
hlt
sahf
sti
cmp
fists
lods
cld
jb
hlt
pop
push
mov
adc
and
inc
lcall
cwtl
jl
mov
ljmp
cmp
and
cmp
pushf
sahf
test
test
scas
inc
icebp
aam
iret
cld
enter
bound
xchg
mov
decb
xchg
andb
mov
inc
mov
pop
fbld
int
push
xchg
cmp
clc
mov
sbb
cmp
insl
mov
jb
adc
ret
jp
mov
test
xchg
fstp
sbb
int3
repnz
jmp
lea
mov
push
mov
cmpsb
loope
mov
inc
int
lret
repz
insb
data16
mov
mov
jb
lahf
js
out
mov
mov
or
je
jecxz
lock
addr16
orl
push
push
sbb
sub
mov
fisttps
fucomp
jmp
fwait
bound
dec
mov
and
mov
ficoms
cmc
mov
xchg
orl
sahf
xor
jg
add
push
jg
leave
xor
repz
push
adc
ret
push
outsb
test
inc
xor
xor
xchg
cmp
femms
mov
mov
pushl
mov
push
stos
xor
cmp
icebp
adc
pop
xchg
xor
enter
outsb
int
cmpsl
aam
stos
xor
cwtl
and
xchg
xchg
ret
mov
xor
xlat
imul
xor
xchg
push
bound
popf
scas
add
sbb
cmp
rcl
inc
ret
push
fsubrs
mov
adc
mov
fmul
or
test
pop
test
dec
stc
sub
leave
sbbl
js
push
xchg
stc
pop
movsb
and
roll
cli
mov
lret
xlat
add
je
fsubr
paddusb
shrd
pop
icebp
push
xchg
mov
or
push
cltd
ficomps
mov
popf
ljmp
pop
sahf
xorb
test
inc
mov
nop
std
hlt
in
xchg
cmp
jns
inc
pop
or
push
sub
pop
mov
and
cwtl
scas
jge
sbb
push
mov
lock
jb
iret
inc
adc
pop
add
inc
sti
ss
mov
dec
stc
loope
mov
sbb
adc
cli
stc
and
into
cmpsb
rorb
mov
pop
pop
out
pop
movsl
mov
iret
dec
lret
mulb
loopne
movsl
std
jb
test
fsubp
or
sub
pushf
shr
movb
xchg
pop
testb
xchg
jns
bound
outsl
test
dec
xchg
dec
cmpsl
xorb
sarl
push
mov
cmp
or
in
out
xor
cmc
sub
es
clc
dec
dec
push
jns
aaa
jmp
out
pop
cmp
pop
in
cmc
fidivs
icebp
sbb
cmpsb
mov
stc
mov
sub
inc
cwtl
add
add
movl
inc
fadds
mov
into
lahf
sub
nop
fs
or
push
mov
loop
mov
push
add
mov
inc
add
cmc
jne
add
mov
decl
fadds
bound
insl
jno
and
xor
shlb
mov
mov
test
push
and
xor
jmp
lahf
iret
xchg
addr16
stos
push
jmp
popf
pop
xchg
fnstenv
inc
mov
pop
pop
fwait
out
sahf
push
lods
lods
iret
ja
jl
fwait
fs
add
mov
les
repnz
xor
fld
int
pop
mov
in
add
out
mov
inc
cwtl
pop
rcrb
mov
jne
sbb
dec
xchg
pushf
movsb
xor
test
cmp
ja
outsl
xchg
clc
dec
xchg
movsb
sti
imul
or
test
jnp
push
sbb
dec
xchg
aas
in
movsl
loopne
inc
and
mov
sti
inc
xchg
mov
xor
push
daa
sarl
repnz
or
adc
mov
push
jmp
out
pop
scas
mov
test
and
push
sbb
xor
mov
jl
cmpb
clc
call
jnp
xchg
nop
outsb
adc
sbb
stc
inc
int
inc
xchg
cwtl
sbb
push
shlb
sarb
cltd
ds
xor
stos
mov
and
sahf
fcmovbe
daa
aam
xchg
or
jmp
mov
jnp
imul
xor
sbb
xor
hlt
bswap
das
cmpl
notb
stc
rcrl
jecxz
stc
ret
dec
inc
sbb
popa
xorb
inc
xchg
add
stc
mov
gs
test
lea
sub
shrl
inc
jb
push
pop
mov
out
sub
sub
mov
insl
mov
inc
cmp
jns
rcrb
or
mov
mov
imul
push
pushf
jne
sbb
dec
xlat
idivl
jbe
push
cmp
inc
pushf
fstl
or
gs
jg
hlt
clc
aaa
pop
mov
pop
ficoml
jne
mov
fisttps
cmpb
xor
lea
mov
dec
shrb
pop
mull
aaa
mov
incb
or
xor
pop
mov
dec
hlt
or
dec
mov
lea
dec
sub
pop
mov
cmp
rep
cmp
pop
dec
popl
dec
dec
mov
outsb
js
jno
jg
jg
addr16
loope
and
cli
call
sahf
jle
and
inc
arpl
movl
lret
hlt
in
mov
outsb
jno
rcrb
adc
loope
aaa
inc
rcr
clc
cmc
test
fwait
add
xor
jp
adc
push
push
stc
sub
pop
sub
mov
or
cmpsl
push
insl
or
fsub
test
push
pop
ljmp
push
xor
int3
or
test
xor
mov
rolb
mov
mov
stc
aas
addl
inc
into
add
pushf
stos
mov
xchg
ret
repz
popa
mov
mov
sub
push
fstpt
xlat
lds
mov
jmp
lret
pop
jg
lahf
sbb
into
jns
sbb
arpl
repz
or
shrl
jns
inc
pop
adc
sub
fcompl
gs
cmp
movsl
mov
inc
test
stc
bound
xor
cmp
pop
andb
or
xor
sbb
add
imul
pop
sahf
adc
push
in
fidivs
xor
add
xor
push
mov
mov
cmp
mov
sbb
jns
repz
push
lds
outsl
jg
mov
leave
cli
mov
fdivrl
push
fcomps
sub
das
sub
mov
sti
adc
jecxz
sti
popa
adc
ss
aaa
mov
lods
mov
in
inc
repz
jns
cmp
and
clc
loop
lods
shrb
inc
xor
cli
sub
icebp
shl
gs
jnp
jl
pop
popf
lds
add
mov
mov
adc
push
test
in
mov
int3
movsb
hlt
insl
ss
sub
cmp
push
imul
add
xchg
outsb
jge
int
and
inc
rcrl
stc
pop
or
fsub
dec
push
add
inc
jb
cmpsb
into
insb
in
icebp
mov
aas
jmp
bound
lds
iret
es
push
rorl
and
jbe
xchg
inc
xor
test
cmpsl
outsb
insb
pusha
jnp
or
sub
push
jmp
stc
sbb
pop
test
mov
daa
enter
push
cld
xchg
rcll
out
jne
xchg
push
mov
and
adc
adc
xlat
mov
pop
pop
sub
inc
and
mov
dec
ret
xorb
and
subl
add
inc
xchg
pop
rcll
movsb
pop
lcall
dec
dec
jns
sub
loop
xchg
and
adc
addr16
sub
popa
movsl
ds
or
cld
ret
or
pop
fimull
mov
in
push
pop
ja
inc
testb
sbb
dec
fs
mov
mov
cli
popf
sbb
cltd
loope
push
or
shrl
push
xor
sub
test
sub
pop
xchg
pop
lock
sbb
and
pop
sub
push
scas
pushf
test
xchg
ljmp
dec
mov
enter
pop
aas
data16
pop
loopne
repz
xchg
femms
es
xchg
outsb
fwait
pop
mov
sub
mov
insl
clc
cmc
outsb
adc
or
in
aad
xchg
push
hlt
stos
mov
mov
das
sub
dec
pop
or
xor
shl
movsb
repz
adcb
jb
adc
popf
cmpsb
movsb
inc
cmpsl
dec
jne
dec
frstor
shrb
mov
add
mov
cli
or
jp
sub
xor
add
cmc
in
mov
out
insb
leave
xchg
lods
cli
out
xlat
push
ljmp
push
das
insb
adc
add
sarb
jg
loope
sbb
popa
movsl
xchg
and
cmp
outsl
stc
mov
adc
ficoms
jecxz
call
aam
mulb
and
not
ljmp
ror
or
orl
pop
andl
adc
inc
bnd
cmp
sbb
push
das
xor
enter
lea
mov
push
cmp
insl
pop
scas
or
pop
xchg
fimuls
xor
repz
mov
jo
xchg
shlb
imul
mov
imul
mov
sahf
mov
andl
int3
jge
pop
jbe
pop
je
addr16
js
jmp
push
push
push
jle
fcomi
xor
mov
adc
jle
mov
clc
int3
ficomps
scas
inc
and
adc
lret
cli
adc
mov
pop
lds
jge
cmpsb
shl
mov
ret
dec
or
loope
push
cli
push
aaa
mov
leave
mov
cmp
dec
cwtl
jb
mov
sbb
and
jge
dec
lcall
sub
test
dec
pop
sub
dec
push
mov
mov
fidivl
inc
fisttpl
mov
cmp
jae
jbe
cmp
dec
sbb
shll
cli
jl
test
test
jo
aam
popl
pop
push
mov
xor
sub
sbb
imul
popf
repz
or
sub
jbe
movsb
call
jecxz
adc
pop
loope
push
lea
mov
fildll
sub
adc
jb
and
jne
bound
push
cwtl
push
lock
test
add
js
das
lea
push
out
call
sbb
dec
xchg
cmpsl
mov
cltd
inc
movsl
dec
loope
mov
sbb
jmp
dec
inc
mov
mov
insb
mov
fadd
fsubs
push
jecxz
or
adc
xlat
push
cmp
mov
push
mov
enter
add
test
cmp
xchg
cmp
cmp
cli
imul
xor
xorb
js
clc
fisubrs
ss
iret
cwtl
push
daa
xchg
aas
scas
gs
stos
test
xor
mov
add
fsubs
sbb
repz
or
hlt
pop
mov
shl
dec
aaa
leave
cltd
xchg
mov
dec
lea
lods
arpl
pop
jmp
nop
lock
rolb
cmp
mov
inc
icebp
cmp
int3
mov
push
sub
cmp
aam
cli
mulb
bound
test
or
popa
push
pop
add
mov
dec
mov
les
and
sub
icebp
ret
jmp
cwtl
repz
insb
orl
test
jno
ds
mov
sbb
outsl
xchg
sbb
xchg
aam
outsb
dec
insl
jle
outsb
inc
push
sbb
cltd
mov
inc
sbb
repz
call
stos
push
jne
aaa
pusha
inc
xchg
icebp
sub
sbb
arpl
scas
cli
push
mov
pop
jp
negl
cmp
pop
cmp
and
lcall
rcrl
insl
add
mov
stos
rep
cmp
ljmp
lock
adc
mov
sbb
mov
push
mov
cld
les
not
cmc
fwait
cmp
test
repz
xchg
add
cmpsb
push
mov
daa
insb
push
out
movsb
fbld
cmp
push
xchg
popa
fmuls
xor
cltd
or
pusha
push
flds
sbb
ss
out
in
or
imul
pop
pop
loope
dec
xchg
bound
repnz
cmp
push
mov
mov
sbb
lea
negl
xchg
shlb
pop
jbe
jl
jmp
jo
mov
fildll
pop
lea
jbe
mov
clc
ja
xchg
mov
lds
cld
jno
cltd
add
dec
movsl
sbb
imul
repnz
es
and
mov
fcmovu
aad
adc
mov
out
sti
mov
jb
addr16
pop
das
push
ja
mov
pushf
clc
mov
test
dec
pop
push
sub
sbb
test
sub
pop
mov
lahf
and
mov
rolb
add
ds
repnz
mov
loop
setge
push
adcl
inc
repnz
cmpsl
xchg
xor
mov
jmp
gs
sub
lods
mov
fnop
sub
adc
cmpsl
inc
inc
mov
pop
mov
fadds
fwait
sub
pop
pop
in
add
xchg
xchg
mov
cmc
aaa
ss
imul
jns
cmpsb
pop
cltd
and
sahf
xchg
push
in
fildl
dec
inc
outsl
mov
pop
push
in
out
aad
mov
sbb
pop
mov
pop
xor
mov
or
loop
loope
loope
out
icebp
mov
inc
pop
lea
repnz
or
bound
dec
stc
insl
inc
cmp
loop
xor
sti
inc
repz
push
js
in
aas
sahf
jl
add
push
pop
mov
push
fdivs
push
sub
nop
leave
aas
mov
aas
cli
addr16
xor
outsb
push
push
sub
shl
out
pushf
xchg
aam
ss
bound
cs
jmp
addr16
mul
lcall
loop
fcom
test
jns
imul
jp
call
fwait
xor
sar
fisubs
sbb
jge
sbb
es
cmp
aaa
or
mov
sbb
mov
repz
insl
mov
pop
ja
sarl
jo
outsb
cwtl
mov
ljmp
mov
and
dec
pop
mov
mov
cli
cmp
data16
sbbl
lock
xchg
pop
ja
sbb
outsb
out
cltd
repz
xchg
je
jmp
push
jg
rclb
inc
mov
test
mov
daa
jb
insl
rcrb
jle
pop
xor
les
push
mov
pop
mov
adc
andb
pushf
push
repz
insb
mov
das
fimull
fwait
lret
push
call
jmp
outsl
int
sub
and
int3
cli
aas
mov
push
stos
test
lahf
fs
and
es
mov
jo
mov
jnp
aaa
jae
push
lcall
jo
sahf
dec
mov
shrb
mov
xor
gs
shrb
popf
mov
mov
sbb
pushf
or
push
stc
lds
test
pop
or
cmpsl
ja
int
cwtl
xchg
je
pop
or
jb
mov
xchg
jnp
sbb
push
movsb
lds
jp
lods
mov
lret
xor
dec
inc
iret
mov
xchg
arpl
cmc
fbstp
icebp
test
pop
mov
xchg
xchg
insl
hlt
negl
xchg
rcl
inc
sbb
inc
stos
xchg
adc
fnstsw
xchg
mov
cmp
add
inc
xor
xchg
ret
cmp
pop
int
dec
addr16
repz
mov
push
add
inc
jmp
imul
stos
adc
popa
or
mov
fmulp
mov
or
aam
push
mov
add
lock
xor
sbb
xlat
scas
insb
pop
jp
outsb
cmp
mov
xchg
add
aaa
pop
jb
cmp
xchg
dec
mov
lods
sbb
loop
cld
and
cmp
das
and
aas
pushf
inc
push
mov
imul
outsl
inc
inc
lret
mov
ss
orl
das
scas
pop
mov
mov
dec
push
dec
fsubs
mov
aad
cmp
push
mov
push
mov
rcrb
inc
or
icebp
inc
scas
sahf
add
xor
sahf
mov
cmp
fistpl
je
mov
aad
sbb
jg
jp
ljmp
scas
mov
dec
arpl
lods
dec
test
mov
mov
das
xor
or
leave
mov
mov
enter
add
xor
test
out
test
ja
jge
addr16
cmp
ds
in
dec
mov
lea
sub
cmp
or
in
mov
mul
les
dec
push
je
inc
mov
pop
test
je
fprem1
adc
dec
mov
shrb
inc
pusha
inc
jne
mov
leave
stos
hlt
mov
inc
inc
out
stos
insl
leave
pop
or
lret
rclb
fmul
and
fldl
mov
push
inc
mov
pop
ds
dec
outsb
mov
movsb
fsubrs
pusha
popa
subb
cmp
pop
mov
jg
ficomps
dec
scas
dec
mov
push
lret
pop
inc
ds
cmpsl
inc
jae
cmpsb
mov
mov
out
xchg
ret
mov
sub
adc
cmc
or
jmp
decl
cmpsb
pop
sbb
incb
sbb
gs
lods
outsb
cmpsl
lds
and
or
cmovne
lock
ret
aaa
or
outsl
mov
arpl
sbb
cmp
cs
imul
inc
xor
push
xchg
add
sub
xor
cmp
andb
hlt
test
sub
pop
in
enter
mov
mov
insb
jo
pop
and
adcl
cld
jge
stos
sti
adc
data16
outsl
mov
xchg
inc
pushf
out
ja
ss
mov
pop
xchg
jno
sbb
aad
aad
loop
adc
sti
in
xchg
lret
pop
mov
jge
in
sahf
xchg
test
pop
shl
pop
daa
cmp
dec
pop
subb
daa
decb
sub
ss
push
js
inc
pop
hlt
mov
mov
pop
and
pop
sub
and
jg
sbbl
inc
stc
and
sub
sti
dec
negb
stos
fwait
std
inc
in
dec
push
cmc
lods
incb
mov
lods
movsl
sbb
pop
push
fsubr
shr
std
aaa
mov
sub
fldcw
push
iret
aam
sti
movsb
push
adcb
pushf
ret
mov
lret
jmp
arpl
daa
rcll
and
jne
popa
daa
mov
jns
cmpsb
fisubl
pop
mov
push
xchg
push
fsubp
das
cmpb
insl
in
mov
lock
movd
xchg
xor
sbb
xor
das
loopne
stos
dec
xchg
outsb
mov
xchg
add
mov
push
adc
adc
xchg
push
mov
cwtl
int
xorb
push
xchg
cmp
rclb
sub
xchg
or
hlt
sarl
push
mov
out
pop
adc
inc
loop
jmp
adc
loope
xor
cwtl
adcb
push
or
cmp
pop
fdivrs
mov
int3
sar
push
leavew
lds
push
popf
sub
ret
pushf
cs
sarb
add
mov
lea
iret
lds
clc
popf
hlt
dec
jno
dec
inc
push
push
jno
test
inc
fnstenv
or
and
pop
xchg
hlt
or
inc
mov
and
adcb
js
and
in
mov
mov
sbbb
in
ret
inc
fldenv
in
push
fld
ds
push
jg
mov
pop
adc
mov
lret
imul
call
add
and
sub
xor
ret
data16
hlt
push
mov
cltd
arpl
call
sbb
mov
adc
mov
divb
lods
hlt
dec
or
mov
and
or
xchg
lds
testl
test
jg
in
inc
aas
rcrb
loopne
movsl
xchg
hlt
cmp
mov
data16
xor
mov
aam
lcall
inc
adc
sbb
lock
faddl
mov
inc
arpl
repnz
push
pop
scas
aam
rcl
jle
add
inc
jb
cmc
sub
fisttps
push
mov
jge
sarl
mov
jmp
sbb
mov
push
mov
mov
scas
in
xchg
sub
lods
push
repnz
jo
push
adc
push
jp
sahf
hlt
out
in
jge
mov
imul
xchg
mov
mov
or
jo
lock
mov
popa
fs
dec
cmpsl
scas
lock
movsb
popl
dec
cmp
scas
pusha
mov
pop
cmpsl
xor
mov
or
loopne
cmp
jge
xlat
jne
xor
sub
bnd
jnp
dec
lret
adc
and
or
sti
jno
mov
jp
lret
enter
jecxz
stos
jl
or
scas
push
popa
or
arpl
ja
movsb
retw
dec
mov
cmc
push
stos
inc
xor
push
movsb
xchg
shll
mov
cmp
jg
adc
mov
fwait
aam
dec
daa
lods
rolb
xor
dec
imul
mov
mov
pop
dec
xor
push
sub
pmaxsw
insb
pop
add
je
pop
mov
pop
fdivs
and
or
in
inc
int3
push
ds
jl
aad
out
pop
inc
dec
push
mov
mov
cmc
push
dec
xor
mov
mov
stos
adc
cmp
cli
mov
sahf
sbb
jns
inc
fdivrp
jbe
add
add
nop
sbb
stos
popa
inc
and
aad
js
mov
add
iret
mov
inc
test
sbb
and
or
imul
inc
mov
dec
jae
sbb
call
xor
ja
inc
jo
jl
in
pop
lods
jg
mov
test
sahf
mov
test
dec
or
jmp
cmpb
xchg
pop
push
dec
in
mov
push
bound
js
or
leave
sbb
les
scas
mov
in
lock
and
mov
mov
faddl
fldl
shl
and
sbb
subl
in
inc
pop
iret
mov
sub
stc
dec
adc
jg
push
fs
mov
xchg
add
fsub
cmp
sbb
test
push
stc
imul
sub
pop
mov
outsl
mov
pop
mov
pop
inc
arpl
fsubrl
cmp
lods
pop
mov
mov
adc
push
cld
ret
dec
add
push
pop
or
mul
enter
jecxz
jl
in
mov
or
ret
jbe
pop
sbb
lahf
and
jmp
jmp
movsb
ljmp
negb
xor
jne
std
cli
ret
sahf
mov
dec
shlb
jp
add
sbbb
divb
mov
fldl
stc
pop
insl
cmp
mov
lret
pop
dec
jae
jle
dec
in
adc
push
test
aad
mov
test
lds
xor
xchg
sbb
sbb
inc
fnsetpm(287
je
mov
mov
out
adc
cwtl
in
xor
notl
dec
hlt
ja
cmp
mov
ds
adc
cmc
repz
imul
into
movsl
dec
push
adc
popl
mov
jle
adc
aas
mov
and
aad
pop
sbb
shl
scas
icebp
fildl
xor
scas
pop
fcoml
test
lods
push
insl
aaa
mov
fwait
push
js
test
inc
xor
xor
add
aam
orl
adc
cltd
andl
push
jns
push
jmp
add
int3
mov
cmp
add
addr16
mov
movsw
adc
jns
pop
sub
mov
lret
out
lret
mov
mov
mov
clc
hlt
ds
push
adc
add
jo
push
mov
jp
sbb
dec
adc
pushf
imul
mov
xchg
jbe
push
or
push
pop
aad
addr16
jp
mov
leave
add
jmp
stos
daa
nop
jb
inc
push
mov
test
cmp
push
out
cmp
cmp
pop
mov
fnsave
stc
daa
adc
push
jmp
jp,pn
mov
jno
in
test
in
push
movsb
mov
dec
sub
repz
in
sbb
sbb
test
cmp
aam
call
in
data16
mov
adc
rclb
sbb
cli
in
or
jne
mov
cmp
pop
test
pop
ljmp
adc
cmp
mov
inc
add
bound
sub
in
push
inc
pop
mov
into
xchg
push
test
nop
push
mov
sbb
mov
mov
pop
jle
inc
add
fiadds
mov
dec
and
mov
js
hlt
sub
int3
push
scas
outsb
inc
int3
lea
push
sub
sub
pop
fs
aas
les
mov
sbb
je
fmull
jle
fld
icebp
ljmp
jecxz
jg
push
inc
shrb
sub
in
fcomp
and
into
xchg
stc
jne
aad
fisttps
pop
jae
push
hlt
stos
pop
lret
int3
jge
dec
jecxz
mov
mov
fmul
add
out
std
js
inc
jae
jne
out
lahf
std
sub
pop
aad
repz
in
jb
push
outsb
xlat
xchg
fmuls
rcr
jae
cmpsb
sbbl
out
neg
xor
xor
outsb
jmp
stc
mov
pushf
in
in
ror
and
cltd
xor
stos
pop
cli
shlb
jne
xorb
dec
push
pop
lods
push
jmp
pop
idivb
out
out
subl
mov
mov
xor
dec
push
adc
xchg
out
into
out
jns
sbb
cmpsl
xchg
pop
and
pusha
loopne
call
gs
xor
adc
pop
mov
cld
jg
ss
arpl
jmp
test
in
in
sbb
das
dec
fnstcw
push
or
neg
xchg
repnz
pusha
xchg
and
pop
out
aad
xchg
decl
arpl
or
add
xchg
mov
pop
in
dec
add
and
xchg
jno
dec
test
push
dec
sbb
stos
movl
cmp
dec
aaa
adc
sbb
add
lahf
fistps
js
or
sti
and
sti
add
incb
je
enter
rolb
sbb
orb
inc
add
repnz
cmp
xchg
fs
xor
ds
add
test
jae
lea
ja
jl
jno
loope
lret
add
out
lret
pop
out
ljmp
lods
jnp
popf
out
lock
lahf
jp
in
loope
jae
and
jmp
std
mov
popf
in
insl
adc
sub
inc
inc
inc
pop
addl
push
adc
or
cmp
and
pushf
leavew
add
into
and
sub
xor
shlb
ljmp
mov
jp
test
movsb
dec
dec
xlat
push
or
insl
mov
ret
mov
in
insl
add
dec
sbb
aam
fs
in
out
shr
jae
test
adc
lcall
mov
xor
pop
pop
mov
and
lods
pushl
inc
into
and
push
out
iret
mov
cmpsb
cmpsb
or
mov
jo
mov
jbe
movsb
dec
push
xchg
pop
mov
add
push
sbb
popf
jne
pop
loopne
aam
xor
popa
outsl
sub
lods
inc
outsb
int3
mov
movsl
mov
lahf
push
push
dec
inc
jae
ret
addr16
mov
xchg
enter
lret
fdivrs
jnp
test
adc
lcall
add
push
gs
mov
xchg
rolb
or
dec
movsl
dec
ja
lret
jo
mov
aad
pop
aam
test
adc
mov
dec
inc
adc
cli
mov
fnstsw
aam
adc
cmp
pushl
jmp
sbb
xchg
xor
inc
imul
mov
xor
or
fs
out
stc
push
xor
sub
pop
je
test
test
dec
out
inc
or
and
lea
loop
mov
add
in
rcll
loopne
lds
rcl
movsb
push
sbb
fdiv
int3
bound
lret
addl
or
loopne
aaa
pop
sub
mov
in
fninit
and
mul
iret
mov
or
sub
sbb
mov
insb
dec
sbb
or
call
movsl
jmp
xchg
repnz
jns
outsb
dec
popf
sub
xorb
syscall
outsb
rcrl
sbb
jg
sub
pop
or
jb
lcall
add
sbbb
mov
fnsave
loop
push
and
cli
adc
pop
jae
dec
jp
es
jl
adc
insl
push
xorl
leave
push
mov
sarb
mov
cmpb
cli
mov
mov
mov
les
add
push
shll
xchg
xor
xor
jecxz
subl
and
push
leave
notl
popa
jmp
mov
or
lods
lds
movsb
pop
cwtl
sub
clc
mov
int
rcll
dec
addl
nop
scas
mov
xchg
cmp
insb
inc
test
jg
ljmp
lea
into
pop
pushf
scas
pop
mov
aad
sub
stos
mov
int
dec
mov
test
cmpsb
aam
je
imul
ds
call
loopne
addl
dec
into
stc
lods
cs
xchg
addb
fwait
cmpb
mov
aad
incb
test
leave
nop
clc
cmp
and
arpl
sub
orb
clc
push
fdivrl
inc
xchg
push
sub
dec
lods
pusha
rcr
in
and
rorb
inc
add
mov
mov
xchg
jno
das
jne
jle
dec
jno
sbb
mov
rorb
xor
movsl
aam
sub
mov
mov
mov
and
pop
in
les
nop
sub
int
daa
push
loopne
cmp
push
add
adc
xchg
mov
mov
repnz
jne
xor
push
mov
divb
push
and
mov
xorl
ss
xchg
xor
or
adc
ds
loope
iret
dec
add
add
inc
xchg
sub
fs
cwtl
lock
in
cmp
js
jge
inc
push
pop
sub
and
pushf
xchg
or
pop
adc
or
pop
movsl
xor
lock
pop
jb
outsl
jae
lahf
test
cmp
repz
xchg
pop
mov
push
inc
loope
pop
data16
or
jns
mov
adcb
push
cwtl
jmp
fldl
cmp
loopne
cmp
xor
and
push
sbb
dec
ljmp
rolb
out
mov
dec
in
mov
mov
pop
and
daa
sbbb
rclb
das
gs
rorb
dec
inc
pop
aad
roll
mov
in
push
lcall
test
adc
sbb
shl
xor
lods
mov
xchg
and
movsl
lahf
xchg
fwait
and
jno
aam
gs
lret
add
sbb
pop
outsb
pop
mov
mov
or
xor
ficomps
jns
ds
dec
sub
fstpt
xchg
jae
adc
enter
cmc
mov
into
lods
jbe
mov
in
dec
pop
lea
inc
les
dec
int
jo
jmp
out
out
out
sub
sahf
sbb
repz
push
push
or
push
insl
xor
scas
test
push
loope
inc
push
lahf
je
cmpsb
jp
jecxz
mov
jne
lock
int
jle
cmpsl
jbe
sahf
fsubp
jns
movsl
incl
push
mov
cmp
adc
roll
adc
imul
movb
jae
sub
push
dec
aaa
dec
andb
mov
mov
das
movsb
cmp
pop
mov
xchg
imul
dec
jmp
gs
push
push
adc
jb
lods
roll
dec
lret
lds
cmp
outsb
mov
pop
rol
or
fidivrs
cltd
jp
ret
jle
mov
adc
sbb
das
fs
out
sub
fwait
and
sahf
aas
cmp
loope
inc
mov
mov
pop
movsl
faddl
mov
lea
jo
and
hlt
mov
and
or
mov
sbb
adc
movsl
xchg
icebp
ljmp
cmp
mov
jo
or
sbb
inc
lods
repz
mov
movsb
mov
fsubrl
adc
stos
insb
pop
cmp
daa
inc
dec
push
imul
mov
sub
adc
dec
mov
or
cltd
cltd
mov
imul
pop
add
add
xchg
push
fs
xchg
pop
lods
sar
xor
fisttps
aad
push
aas
sarl
xor
loope
lods
jmp
xor
rol
cmp
mov
fwait
cmp
mov
mov
lcall
mov
lds
jno
push
mulb
cmp
sbb
iret
stos
lock
xchg
lds
inc
sbb
xlat
mov
stos
mov
and
iret
icebp
das
pop
stos
sub
dec
inc
fcomps
leave
movsl
orb
popf
rcrb
sbb
je
mov
xor
shrb
bound
insl
insl
jge
jp
stc
pop
stos
fildll
push
pop
sub
lods
cmc
pop
in
jb
movsb
jmp
in
mov
out
mov
xchg
pop
movsb
pop
or
xchg
arpl
imul
or
icebp
or
pop
adc
jns
outsb
scas
orl
xlat
cmp
xor
sti
sbb
jl
nop
ficoml
pop
arpl
xor
pop
xchg
stc
pop
out
add
fsin
rol
stos
sub
test
sub
add
jp
jge
bound
pop
data16
sbbl
push
cltd
inc
adc
xchg
pop
in
jg
outsl
movswl
pop
aaa
in
pop
test
shr
mov
cmpsl
mov
pop
mov
push
mov
add
into
into
jbe
dec
and
dec
pop
orl
sbb
aam
mov
insb
inc
sti
test
mov
movsl
dec
loop
pushf
push
cmpsl
adc
adc
cld
or
imul
jb
test
test
xor
sub
out
cs
jg
push
mov
cld
out
clc
bound
mov
repz
out
or
mov
idivb
sub
imul
xchg
push
dec
or
cmp
faddl
and
pop
push
mov
or
rcll
lret
cmpsl
loop
push
adcl
sti
push
outsl
mov
std
pop
jmp
cli
sti
xchg
push
popf
outsb
dec
pop
mov
sbb
cmp
sub
in
push
jb
add
dec
mov
stos
pop
xchg
xchg
shr
fmul
sahf
jne
push
lahf
mov
sbb
cmpsl
push
dec
lcall
jle
testb
ss
aas
pop
cmpl
aas
loopne
lret
es
dec
inc
fldl
jbe
shl
push
mov
loop
jbe
pop
xchg
push
lods
or
push
sbb
push
lahf
negb
pop
ds
or
adc
or
xor
xchg
test
mov
mov
pop
ret
add
cmp
sub
or
sub
push
pop
int
push
jl
mov
jmp
or
add
push
ljmp
in
sbb
mov
les
xor
mov
xor
xor
insb
xchg
fmul
mov
bound
dec
int3
std
xor
add
mov
stc
movsb
jmp
mov
cmp
cmp
xor
mov
cltd
rcl
and
jp
or
out
jecxz
jbe
cmp
mov
mov
xor
out
cmpsb
adc
xor
cmp
lret
mov
pop
cmp
xchg
sub
mov
loop,pn
xor
mov
cmpsb
jb
dec
mov
jg
add
jle
out
in
sub
xchg
and
clc
dec
add
je
fimull
mov
ljmp
inc
ficoms
mov
adc
frstor
add
imul
pusha
test
sbb
stos
setl
test
out
shlb
popl
sbb
mov
dec
mov
int
push
sbb
lea
subb
shrl
cmp
jle
shl
inc
jge
or
sbb
ds
cmpsb
xchg
jns
push
test
pop
ja
cwtl
sub
mov
and
push
cmp
ret
push
sbb
hlt
jo
jmp
or
xor
jns
mov
decb
adc
mov
ss
fidivrl
lret
in
addr16
rcr
dec
push
not
scas
jnp
xorb
pop
dec
lds
inc
adc
inc
mov
fsubrl
add
or
inc
testb
or
pop
mov
lock
push
push
jmp
divb
xchg
popa
test
shrl
jp
mov
mov
or
sbb
pop
jmp
cli
subb
sahf
pop
mov
mov
xlat
cs
movsl
adc
xor
dec
stc
push
rorb
test
xchg
fisubl
mov
gs
and
les
xor
stc
adc
adcb
jp
dec
mov
dec
xchg
and
jmp
scas
enter
sub
rcll
loope
mov
jns
mov
xor
mov
imul
dec
iret
push
scas
mov
dec
cli
cld
mov
mov
xor
mov
aaa
test
sub
mov
sbb
push
gs
pop
rorb
in
mov
gs
add
ret
loope
test
cli
jbe
push
movsb
adc
sub
xor
sub
pop
or
cmp
cld
xchg
xor
pop
pop
pop
cmp
test
jno
lahf
call
pop
outsl
push
arpl
hlt
addr16
in
sub
hlt
or
dec
sbb
or
adc
lods
pop
rcll
bnd
je
stos
movsl
cmp
xor
in
push
sbbl
pop
xchg
pop
pop
sti
mov
cmp
mov
dec
jnp
repnz
mov
mov
mov
adc
enter
stos
mov
dec
mov
lods
push
dec
loop
fs
lods
mov
pushf
push
and
clc
or
adc
fadd
jae
dec
cmp
mov
stc
push
mov
ljmp
in
sub
xchg
ds
pop
add
or
cs
cmc
xor
int3
pop
and
fmul
out
aad
mov
cltd
mov
push
test
xor
sub
jns
divb
jg
scas
mov
hlt
pop
inc
xchg
insb
daa
scas
mov
js
insb
loop
xor
and
push
inc
cmp
fisttpll
push
or
push
mov
push
fists
mov
jno
scas
movsl
div
clc
mov
sbb
dec
xchg
adcl
bswap
inc
clc
cmc
jecxz
jne
and
mov
fisubl
mov
inc
pop
fnsave
adc
clc
cmp
push
loopne
cmpsb
sub
es
addb
rol
lds
dec
sahf
sub
call
js
pop
jbe
test
xchg
les
scas
xorl
pop
sbb
jae
jo
aaa
xchg
inc
push
push
mov
dec
cmpsl
adc
pusha
cmp
dec
jmp
jl
lahf
in
rep
cmpl
sti
jb
and
xchg
stos
in
nop
mov
pop
jae
xchg
cmpsl
mov
xor
inc
mov
mov
fisubl
sbb
out
mov
popa
or
je
sti
pop
and
push
mov
shlb
jnp
add
test
out
es
xchg
mov
jnp
inc
mov
in
insl
sub
sahf
lret
and
das
hlt
into
inc
cld
mov
cmpsb
mov
jae
pop
xlat
add
popa
movsl
int3
adc
and
jns
fs
call
ds
push
call
jne
xor
inc
shrb
push
xchg
dec
int
in
scas
lahf
data16
mov
sbb
fmuls
das
fcoml
divb
push
sti
pop
jle
dec
shlb
push
xor
mov
cs
xor
jmp
jecxz
lret
cmpsb
xor
sti
cmpsb
pop
add
xlat
sti
shll
out
sub
shll
or
aas
mov
lock
out
xor
popf
mov
fwait
ja
xchg
mov
xchg
dec
ret
ficomps
leave
mov
mov
movsl
lock
je
sbb
scas
push
jl
sub
jno
loope
ret
cmp
cmc
sbb
cmp
pusha
lahf
pop
leave
fadds
pop
ljmp
clc
sbb
ss
cwtl
movsb
mov
insb
or
sbb
ljmp
adc
dec
adc
das
jbe
pop
add
aaa
mov
loopne
adc
subb
dec
lds
pop
pop
add
jae
xrelease
mov
movl
adc
and
push
push
mov
test
or
popa
mov
pop
and
xchg
shl
mov
or
test
xorl
xor
cmp
mov
inc
xor
jnp
sbb
popf
sub
add
icebp
shlb
mov
ja
movsl
cltd
add
fdivl
loope
xor
clc
jp
or
shrl
mov
fs
add
mov
inc
cmp
push
int
push
push
jmp
push
fimull
push
xchg
or
sar
dec
add
outsb
fcoml
and
in
sahf
cmp
dec
mov
repz
scas
or
pop
or
leave
dec
or
sbb
popa
jae
add
pop
dec
in
aad
pop
shrl
std
sub
or
bound
leave
sti
push
rcr
or
das
mov
jecxz
shll
push
cmpsb
or
and
jbe
test
sarb
js
cmp
mov
dec
shrl
sbb
movsb
dec
ret
push
pop
xor
jbe
cmp
cmc
movsl
mov
xchg
aas
lock
out
js
cli
mov
movsl
push
pop
pop
stos
cmp
jae
pushf
jp
and
or
inc
dec
pop
fnsave
in
mov
data16
dec
cli
inc
jecxz
mov
in
cmp
push
call
cmpsb
dec
in
inc
mov
cltd
mov
lret
mov
push
dec
or
jo
push
jae
data16
stos
pop
mov
aaa
inc
mov
mov
imul
mov
scas
in
mov
lret
call
mov
xchg
insl
inc
jecxz
sbbl
jns
sub
adc
jmp
mov
xlat
xchg
js
rcrb
mov
ja
dec
push
jle
decl
xchg
add
mov
jne
mov
into
push
imull
mov
js
or
shl
pushf
pushf
out
add
dec
outsl
out
mov
lods
dec
ret
xor
fcoms
aam
das
and
inc
cmp
xor
stos
stos
xor
negb
imul
inc
pusha
jns
scas
data16
sub
dec
sbb
notl
add
adc
lods
ja
sbb
iret
or
pop
push
scas
lods
bound
fbld
arpl
or
xchg
sub
inc
jnp
in
sub
jbe
adc
lret
cmp
fwait
insb
rclb
inc
push
jge
adc
push
pop
shlb
xor
mov
adc
and
push
addb
sbb
jp
les
sbb
subb
mov
cmp
arpl
or
add
push
test
inc
fidivl
shlb
repnz
dec
jecxz
mov
sbb
scas
jns
adc
test
aaa
lret
out
aam
outsb
int3
loop
cld
dec
pop
mulps
subb
or
pop
lock
xor
mov
lods
gs
test
cmp
and
mov
xchg
pop
mov
aas
sub
data16
js
cmpsl
mov
cli
enter
push
loop
adc
pushf
mov
mov
arpl
leave
xchg
adc
push
cmp
jmp
inc
movsb
lahf
mov
pop
js
in
mov
in
push
pushf
xchg
std
mov
dec
adc
cld
mov
inc
sub
mov
in
push
pushf
pop
sub
cmpsl
lods
mov
and
mov
fwait
subb
or
xor
stos
fucomip
cmp
xchg
fs
xchg
fmull
lret
sub
push
int3
les
test
ds
ficompl
inc
adc
sub
outsb
gs
mov
sbb
ds
aaa
lods
aaa
pop
mov
stc
mov
hlt
divl
pop
adc
add
mov
test
and
cmp
xorl
mov
xorl
test
ret
fsub
mov
cmp
out
outsb
sub
repz
imul
jo
aad
fnstsw
xorb
arpl
pusha
shlb
jle
adc
outsb
pop
les
xor
jns
push
stos
sub
loope
in
jg
hlt
in
sbb
xor
and
les
or
jle
int
icebp
out
les
js
pop
test
imul
test
fdivrl
mov
xchg
daa
daa
lea
jne
inc
stos
lods
test
push
xor
inc
icebp
mov
pop
mov
repnz
je
xchg
adc
mov
in
fs
loope
ds
clc
dec
push
test
mov
arpl
push
mov
adc
pop
lods
mov
rcl
add
and
popa
ret
cltd
lods
and
jl
adcb
out
xor
pop
fs
adc
sub
cmp
ret
popa
dec
mov
cmp
jne
jno
ljmp
lods
xchg
cmp
push
ret
push
repnz
pop
arpl
clc
cmp
cmp
adc
sbb
mov
cli
push
ds
cmp
insl
adc
jnp
cltd
mul
rcll
mov
stc
pop
jne
inc
dec
add
xor
cmp
jp
loop
enter
fdivl
or
mov
out
js,pt
xchg
add
pop
sub
inc
jb
and
rcrb
lret
mov
outsb
outsb
push
ljmp
mov
sahf
insl
sbb
lret
xor
push
xor
popa
push
aaa
addr16
jne,pn
repz
rorl
push
adc
jge
push
jl
fwait
xor
cli
fcomps
enter
icebp
inc
and
or
sbb
cmp
mov
fisttps
push
dec
or
andb
pop
roll
lock
xchg
sbb
cmpsb
mov
insl
out
scas
mov
adc
je
xor
fstpt
cmc
lahf
lea
dec
fbstp
mov
mov
sbb
push
mov
or
ret
das
dec
leave
out
int3
hlt
dec
xchg
cmp
mov
les
cwtl
pop
inc
aad
pop
mov
sub
lahf
negb
test
ds
data16
adcb
insb
push
mov
mov
je
adc
jbe
fidivl
ss
in
add
filds
and
mov
fcomps
and
loope
or
js
aaa
lahf
pop
fs
hlt
jg
lret
filds
pop
arpl
in
sarb
fwait
xchg
insb
jns
add
jno
add
add
idivb
xchg
cltd
push
dec
icebp
in
popa
pop
sub
push
jae
jg
rclb
sub
push
mov
push
dec
rorb
pop
pop
fisttps
jl
dec
sbb
push
ret
mov
push
sub
outsb
ss
addr16
mov
inc
and
sahf
xchg
and
add
ret
ljmp
pop
and
les
push
mov
pop
shll
xor
fst
xchg
mov
mov
enter
clts
xor
pop
pop
test
jle
es
xchg
xchg
rorl
lea
sbb
xchg
push
cs
sub
addr16
xchg
popf
addr16
lret
std
bound
jg
xor
jbe
adc
push
lret
in
iret
push
out
and
xchg
iret
adc
fistpll
xor
sar
jmp
dec
enter
dec
fsubr
jge
pop
movsb
jl
es
ss
imul
es
outsl
ljmp
popa
js
dec
add
mov
and
je
sahf
jbe
leave
stos
lock
cli
push
add
mov
mov
stos
add
adc
xor
mov
fxch
cld
inc
xlat
xor
insl
add
jp
sbb
int3
dec
jbe
sub
insl
inc
scas
mov
ret
cmp
mulb
mov
cmpl
mov
cmp
loop
and
insb
out
dec
aad
popa
lcall
push
lcall
in
cli
fcmovnu
rclb
mov
sbb
outsl
dec
loopne
push
mov
adc
aas
imul
jge
jl
cwtl
mov
cmc
mov
shrb
pusha
dec
jns
mov
iret
xor
dec
xchg
fstps
mov
mov
xor
hlt
or
add
xchg
dec
loope
arpl
and
jbe
mov
andb
xchg
fwait
cmp
insb
mov
sbb
xlat
imul
cmp
lds
lcall
xchg
pop
enter
inc
mov
outsl
dec
fsub
xchg
inc
mov
mov
sub
dec
stc
jge
and
arpl
cmp
sbb
ja
in
xchg
mov
leave
aad
or
cmp
imul
jb
enter
jb
cmc
das
jmp
xchg
jmp
sub
push
mov
xchg
sub
shlb
cld
inc
add
inc
adc
rclb
daa
in
xchg
imul
std
dec
lods
movsl
mov
dec
shl
pop
es
push
pusha
push
add
data16
adc
js
daa
filds
lret
adc
leave
repnz
mov
jno
fstl
and
ret
cmc
mov
cld
push
dec
pushf
repnz
xor
adcb
and
nop
mov
loop
inc
fildll
mov
adc
popf
fdivr
int3
push
ja
std
cli
xchg
arpl
jg
push
push
shr
xorb
or
ja
nop
mov
dec
shll
xor
ss
sub
je
inc
dec
mov
mov
add
sub
dec
sub
lret
pusha
mov
aam
xchg
or
add
xor
lock
or
push
mov
or
dec
aaa
mov
fldenv
and
cwtl
dec
loope
orl
stos
stc
and
jle
add
push
cmp
xor
xor
cli
pusha
arpl
or
aaa
xchg
aad
rorl
pushf
pop
push
jl
push
clc
and
jle
jecxz
testl
or
xchg
or
outsl
aas
mov
testb
xchg
mov
sub
jmp
popl
outsb
mov
mov
int
inc
inc
jne
mov
jno
inc
xchg
sbb
daa
shr
and
shrl
pop
pop
test
dec
mov
jge
stos
test
cwtl
pop
add
mov
jbe
into
xchg
pop
movsb
lods
sbbb
rorl
dec
mov
lods
jge
das
mov
insl
orb
sub
in
lock
pop
inc
pop
mov
imull
inc
add
inc
ja
movsb
cwtl
les
std
test
int3
xchg
gs
fnstcw
int3
pop
movsl
jp
lds
xor
fimull
daa
mov
xor
lods
mov
jecxz
mov
in
jg
and
xlat
outsb
pop
and
std
scas
mov
imul
pop
insb
inc
xchg
pop
dec
and
mov
sub
out
negb
sub
lahf
out
cmp
or
or
jne
add
loope
fsts
rcr
mov
ds
call
mov
cmp
adc
pop
js
loop
add
jno
cmp
adc
inc
inc
inc
add
push
inc
mull
add
ds
cmp
stos
fwait
and
jmp
jbe
jns
inc
adc
sbb
cmc
mov
incb
or
addr16
adc
adc
dec
push
out
bound
pop
and
fcoml
decb
cmc
pop
data16
jb
shll
and
jl
inc
outsl
xchg
and
ret
mov
adc
xchg
jbe
lock
arpl
push
push
movsl
les
fistpl
sarl
out
lcall
icebp
mov
inc
adc
push
fstp
repnz
fstpt
mov
sahf
adc
sub
jmp
cmc
or
dec
inc
dec
cmp
mov
mov
xchg
lds
mov
into
rol
cmp
in
push
pushf
push
int
dec
xor
mov
cmpsb
repnz
cmp
add
in
leave
cmc
lahf
ret
addr16
adc
arpl
test
or
xor
pop
xchg
insl
or
fsincos
cmp
in
add
inc
sub
aas
mov
in
sbbb
fxch
mov
pushf
sbb
inc
out
addb
sbb
cmpsl
int3
dec
js
popf
in
xchg
lods
dec
shlb
roll
add
or
and
adc
jnp
cmp
fstpl
cli
xchg
mov
mov
push
sbb
out
mov
call
jns
in
mov
int3
xor
aas
push
adc
adc
ret
imul
and
mov
fadd
xchg
mov
loope
xchg
mov
lcall
fildl
pop
fnstsw
adc
inc
aad
add
sbbl
mov
lcall
or
lods
lret
adc
fidivs
aad
fldl2e
cmp
inc
repz
add
mov
je
push
cmp
xchg
adc
je
fcomp
movsb
call
mov
iret
aad
adc
fadd
pop
out
repnz
mov
ss
pop
aaa
fwait
xchg
mov
xchg
sarl
and
pop
mov
repnz
ficomps
cmp
add
jbe
sub
cwtl
scas
out
outsb
cmp
testl
sbb
mov
pop
add
push
mov
pop
nop
cmp
cmp
orl
sub
jp
out
jae
fmul
jp
jnp
mov
push
outsb
fs
xchg
icebp
push
repnz
push
stc
cmp
das
popa
jg
aam
loope
xor
mov
scas
jecxz
cltd
repnz
test
gs
and
xor
mov
pop
push
roll
mov
inc
cmc
pop
out
mov
xorb
mov
jg
call
data16
or
sub
jns
cmc
cld
sbb
fildll
pusha
fnsave
movsb
cmpsl
mov
adc
test
inc
popf
inc
out
and
mov
rcrl
pop
or
inc
sbb
xchg
cmp
out
in
fs
ljmp
imul
push
jne
add
mov
xchg
jecxz
pop
mov
mov
movsl
test
jp
adc
or
ljmp
and
fimuls
cld
sbb
std
fs
popf
jae
jne
add
xor
pop
mov
pop
out
and
lods
iret
pop
je
push
sbb
xor
mov
pop
nop
fidivs
fs
mov
cmp
arpl
in
mov
mov
jg
mov
lea
insb
dec
stc
sti
and
mov
pushf
pop
mov
maskmovq
mull
adc
push
xor
fwait
jmp
inc
cmp
inc
sub
in
add
jmp
movsb
mov
out
rcrb
sub
inc
aaa
mov
mov
in
push
inc
loopne
add
cltd
jge
sti
inc
or
cld
fldt
push
iret
aad
test
xchg
sbb
push
sub
sub
mull
mov
shrb
aas
ret
js
sahf
outsb
xor
adc
subl
test
xlat
outsl
xchg
lret
xchg
push
andl
psubq
cmp
jle
pop
jl
xor
push
mov
add
push
adc
xlat
mov
jns
or
mov
mov
pop
inc
in
sbb
dec
fcmovnu
mov
es
xlat
mov
xor
sub
push
cmp
int
std
push
je,pt
pop
inc
fwait
pop
test
leave
xchg
repnz
jne
push
aad
sbb
insl
pop
cmp
sub
mov
mov
sub
imul
push
movsb
sbb
xchg
mov
scas
call
mov
adc
fistpll
mov
pop
std
xor
push
loope
cltd
pop
mov
test
mov
and
pop
aad
jp
into
pop
adc
lcall
call
xchg
mov
xlat
repnz
push
xchg
sub
add
xchg
mov
lea
adc
imul
insb
mul
pop
lea
push
addb
addr16
mov
aam
cld
stos
dec
xchg
into
pushf
lret
push
cltd
cmp
fisubs
mov
imul
mov
dec
pop
push
sbb
mov
mov
mov
and
in
outsb
loop
lahf
imul
sub
and
in
sub
push
adc
xchg
xor
jmp
pushf
mov
imul
jge
out
push
mov
jecxz
sbb
aas
ja
cmp
push
fcoms
and
sub
sbb
sbb
xchg
shll
sbb
data16
gs
movsb
sbb
xchg
outsb
jae
andl
imul
sbbb
jo
xacquire
jp
pop
xchg
out
pop
dec
movsl
xor
xchg
add
dec
or
adc
jl
enter
out
mov
lods
push
js
xor
iret
clc
inc
mov
insb
inc
mov
test
add
xlat
in
incb
cld
cld
cmpsl
push
leave
popa
scas
outsl
mov
dec
rorb
mov
xchg
adc
push
dec
sarl
mov
or
outsl
push
test
xor
jno
jbe
pop
pop
ret
orb
or
xchg
lods
and
test
sbb
or
lret
push
enter
xor
das
jbe
dec
decl
and
mov
mov
leave
and
shll
sti
pop
pop
xchg
mov
repnz
rclb
jmp
xchg
cli
xor
cmp
xchg
out
inc
lcall
cmpsb
mov
into
fdivs
bound
mov
xchg
mov
mov
and
mov
pop
out
cmpsl
in
pusha
pushf
pop
adc
sti
adc
pop
and
icebp
mov
pop
pusha
sub
and
sbb
mov
pop
cmc
enter
cmp
inc
repz
icebp
sbb
fidivrs
dec
fiaddl
iret
inc
in
mov
ret
xchg
arpl
adc
int
pusha
mov
sub
mov
les
sub
cmp
fidivl
adc
mov
xchg
mov
ljmp
and
adc
clc
adc
pushf
repnz
mov
sub
pusha
fsubl
mov
test
mov
jo
fstl
xor
cli
aaa
hlt
fwait
pop
push
aaa
mov
stos
jbe
xchg
in
lahf
adc
and
xor
test
dec
sub
scas
pop
jle
xchg
jae
ss
lahf
lahf
cmpsl
and
in
imull
and
cmp
xchg
cmp
sub
sub
cmp
repnz
jecxz
call
cmpsb
jp
and
pop
pop
and
cli
pop
cs
sbbb
ret
lock
out
and
add
hlt
adc
xor
dec
ret
hlt
in
in
xlat
mov
add
xor
adc
mov
sub
push
add
mov
jns
xchg
mov
dec
jl
shlb
pushf
jae
jnp
mov
and
xor
lret
pop
inc
dec
push
add
mov
cwtl
pusha
pop
popa
arpl
xlat
dec
lds
fsubl
repnz
popa
or
nop
xchg
fwait
stos
pop
mov
cmp
inc
inc
jl
call
fldt
imul
lods
lds
pop
repz
jge
push
pop
leave
pushf
aad
xchg
xchg
stc
loopne
stc
or
loope
pop
sub
shll
cmp
loope
mov
xchg
stos
arpl
movsb
decl
in
sub
notb
in
mov
ds
aam
lret
inc
jne
sub
cli
push
push
sbb
sub
call
inc
std
mov
ss
mov
sahf
out
fsubrl
fistl
clc
test
aam
imul
add
add
fstpt
or
leave
repz
sub
mov
les
mov
cmp
inc
jne
repnz
enter
cmp
bound
mov
push
jns
mov
int
out
sbb
inc
popa
push
dec
push
pop
sbb
push
ljmp
inc
add
pop
divb
mov
mov
jmp
push
mov
setp
and
sub
jl
push
mov
sbb
lods
ja
or
mov
xchg
pushf
pop
or
xor
xchg
jle
lcall
add
and
mov
push
lahf
cmp
sbb
mov
ljmp
or
add
add
sahf
inc
test
and
and
aad
inc
jno
jo
add
pop
mov
ja
mov
sub
jge
inc
mov
ret
or
and
xchg
adc
pop
adc
mov
mov
pushf
fs
ret
sub
xchg
pop
push
xlat
lea
cmp
push
inc
jo
adc
jns
pop
and
sub
aas
mov
jge
aad
xchg
xchg
stos
imul
jnp
out
into
outsl
loopne
js
push
js
xor
mov
xchg
aam
inc
and
xor
adc
dec
aas
sub
into
or
in
shrb
and
or
inc
jbe
sahf
mov
adc
mov
orb
add
pop
ret
dec
fistl
add
push
out
sub
cwtl
jmp
mov
jg
mov
popa
inc
andb
cmp
je
pop
xchg
xor
dec
lcall
fsts
clc
or
jge
lret
hlt
add
out
cld
mov
mov
in
adc
sbb
and
or
leave
sahf
sbb
mov
mulb
ret
icebp
loopne
cmpsl
int3
test
pop
cmp
mov
aam
and
xor
stos
and
xor
scas
push
mov
push
sbb
rcrl
and
sub
mov
sub
cmpsb
xchg
fs
sbb
adc
lods
outsb
stos
bound
mov
push
hlt
mov
xchg
sbb
or
clc
lods
and
push
test
nop
and
or
enter
roll
mov
fstps
sbb
mov
pop
out
push
test
xchg
mov
divb
inc
in
dec
or
xchg
jo
popf
xor
dec
repnz
xor
fdivl
pop
test
xlat
xchg
into
dec
outsl
inc
stos
shrl
mov
mov
xchg
out
sarb
clc
add
push
mov
arpl
imulb
pop
dec
add
sub
popl
outsb
pop
and
mov
or
adc
mov
iret
mov
mov
lcall
inc
jnp
xor
pop
test
mov
cmp
and
jl
lret
xchg
inc
push
xor
xchg
jmp
mov
xor
inc
insl
and
outsb
xor
in
jp
jl
ret
les
enter
ds
lahf
rcrl
push
push
pop
incl
dec
mov
mov
out
stos
xchg
repnz
pusha
adc
mov
jmp
ror
mov
mov
jecxz
pop
dec
stc
stos
ret
jg
subb
rol
dec
pop
jge
xor
movsb
xchg
or
sub
mov
xor
loopne
push
or
std
inc
testb
imul
lock
inc
test
mov
jae
imul
insb
ja
cli
dec
pop
jnp
pop
fisttpll
xchg
outsl
rolb
int
fldt
fadds
testl
pop
adc
in
jne
call
mov
mov
leave
mov
mov
xchg
cltd
into
xchg
sbbl
inc
xor
xchg
xchg
loop
popa
sti
pop
jne
cmp
sarb
xlat
mov
inc
or
lock
lods
pop
cld
data16
jno
fcoms
dec
jns
mov
mov
daa
cmpsl
sub
add
cmc
js
or
stc
or
pop
mov
lret
test
sti
fsubs
mov
mov
mov
sub
ljmp
popf
popf
iret
jmp
cmp
mov
xor
popa
add
push
cld
mov
in
jnp
orl
dec
popa
push
lret
add
test
into
in
mov
fidivrs
cmp
mov
adc
mov
mov
cli
inc
lret
mov
aaa
addr16
add
clc
aam
test
inc
sbb
insl
mov
sbb
and
test
push
into
lret
out
jns
test
sbb
dec
or
sbb
aam
ror
dec
aad
or
adcl
mov
mov
cli
cld
dec
in
popf
arpl
into
je
xlat
add
scas
test
sti
test
nop
mov
ficoms
cmp
lds
lcall
add
jns
dec
loope
sbb
insb
je
ret
sub
sub
lea
and
bound
adc
shlb
test
add
push
mov
jl
jns
add
ret
jg
pop
jnp
push
or
rolb
sbb
ficoms
aaa
sbb
scas
decl
fwait
idivl
push
lret
add
xlat
add
push
sbb
push
pop
leave
rcl
fwait
push
jb
adc
or
jno
xchg
xlat
loop
in
fsubrl
dec
out
or
call
add
stc
mov
mov
add
cmpsl
cmc
fisttps
fcomip
inc
lahf
mov
ljmp
fs
push
cwtl
mov
in
lock
pop
gs
icebp
add
idivb
in
xor
jae
sbb
out
in
mov
sti
push
call
movsb
mov
mov
sub
mov
mov
movsl
inc
insl
fldt
addr16
cmp
lret
arpl
or
xchg
rorl
sub
adc
out
pop
xchg
jb
ficoml
fisubrs
cli
maskmovq
dec
xchg
sbb
mov
cmpsl
subl
add
cmp
sbb
fwait
or
add
dec
xchg
sub
dec
cmpsl
mov
mov
and
jbe
xor
jge
dec
psubsw
lock
and
cmp
xor
xchg
inc
push
mov
sbb
sub
mov
lock
sbb
push
fs
pop
cmp
std
enter
cltd
xor
ret
clc
xchg
adc
sub
leave
xchg
inc
mov
sub
push
mov
xor
imul
lret
and
loope
stos
cmc
in
mov
pop
imul
lcall
data16
inc
xchg
pop
das
fstpt
loope
mov
hlt
xor
cmp
js
popf
mov
scas
sub
mov
rcrl
ss
pop
add
inc
aas
sub
repnz
outsl
pusha
scas
mov
ficomps
sub
sub
dec
movsb
jo
inc
jbe
add
mov
jno
mov
sahf
dec
and
push
test
insl
outsb
pop
int
mov
mov
bound
add
loop
and
sub
addr16
rclb
sub
dec
cmp
call
xchg
rclb
push
mov
fsincos
rcrb
mov
notb
fcoml
adc
imul
dec
mov
popa
scas
subb
xchg
popa
push
and
xchg
add
loopne
loop
pop
mov
in
dec
sbb
rcrb
xchg
mov
popa
imul
das
lret
cmp
xor
mov
jmp
insl
jecxz
in
out
arpl
roll
lds
sub
jno,pn
pop
cmp
aad
rcrb
dec
das
jle
xor
stc
cmc
mov
sahf
dec
or
rcrb
int
lods
repnz
or
inc
xor
push
ficompl
mov
push
mov
lcall
push
jb
jbe
mov
push
xor
push
iret
mov
clc
pop
mov
loop
and
subl
subb
sarl
push
mov
push
xor
and
push
sbb
movsl
js
out
jle
inc
loope
push
and
xchg
pop
mov
xchg
ds
leave
stc
dec
mov
sbb
cmpsl
arpl
lods
pop
push
cmc
and
adc
cwtl
ret
arpl
fcoms
cmp
jge
test
inc
push
loope
sub
faddl
divl
mov
jmp
jmp
sub
lcall
dec
aad
mov
in
jl
dec
mov
daa
inc
shrl
rcrl
popf
cwtl
data16
cmp
in
jbe
adc
sbb
cmp
sahf
jb
mov
pop
push
pusha
shl
mov
enter
jg
pop
out
js
push
xchg
jo
mov
fnstcw
cmpl
mov
rol
fcomps
inc
in
dec
xor
insl
jae
xchg
inc
cmp
test
or
insb
adc
clc
daa
lcall
mov
xchg
or
shll
jg
cmp
pop
in
std
clc
scas
adc
addr16
dec
and
shl
adc
and
addb
mov
fwait
adc
jbe
pop
jl
icebp
sub
es
sbb
aaa
add
and
jmp
bound
mov
mov
mov
insb
jl
stos
cmpsb
ljmp
pop
mov
arpl
lret
jno
add
sahf
lock
call
bound
test
stos
dec
cmp
and
cld
in
xor
push
and
mov
in
or
les
loop
testb
inc
int
push
push
mov
adc
cmpsb
dec
mov
sbb
jns
mov
enter
cwtl
fnstcw
cwtl
loop
jecxz
push
jo
inc
outsl
test
xchg
mov
jnp
hlt
pop
pop
mov
mov
es
cltd
into
mov
es
cld
je
addl
mov
fiadds
mov
fldenv
push
insl
pop
js
dec
push
cmpsb
lods
cwtl
jbe
dec
xor
pop
out
pop
les
frstor
xlat
push
dec
js
jbe
dec
sub
sbb
cs
int
push
sub
out
dec
and
iret
mov
mov
fldt
push
out
pop
ret
xor
call
cmpsl
in
cmp
xor
xor
nop
hlt
cs
and
cmp
cmp
mov
stc
push
or
add
mov
cmp
cmp
adc
ret
and
xorb
aam
xor
or
add
pop
lods
pop
loope
in
dec
sbb
xchg
in
dec
push
push
bound
xor
push
xchg
inc
les
pushf
jle
aad
lods
mov
cltd
jmp
mov
call
repz
xor
adc
jnp
mov
inc
out
sbb
lcall
mov
mov
sbb
iret
mov
repnz
adc
sub
lods
loop
int
mov
cmpsb
lahf
vpaddb
cmp
js
shlb
outsl
add
pop
aas
aam
or
jnp
int
lods
nop
std
int
inc
icebp
jp
add
pop
pop
mov
inc
xchg
loop
inc
test
ret
jl
and
dec
loop
imul
fdivrl
mov
dec
stos
push
test
mov
jbe
sbb
pop
fsubs
int
mov
adc
aam
push
sahf
scas
xchg
mov
fnstsw
orb
rcrb
push
enter
aaa
in
test
mov
lret
mov
dec
dec
pop
out
jecxz
ret
cmp
loope
fsubr
mov
pop
cmp
cmpsl
xchg
inc
pushf
into
pop
push
xchg
cmp
daa
inc
push
push
call
mov
scas
sub
mov
pop
mov
imul
mov
mov
lahf
ret
jp
sbb
jne
cmp
inc
decb
arpl
test
push
pop
scas
jo
pop
pop
dec
inc
xlat
and
scas
or
das
test
jnp
dec
test
int
mov
test
push
out
push
sbb
dec
movb
mov
xchg
stos
inc
mov
out
movsb
push
xchg
andl
icebp
mov
out
icebp
mov
out
scas
and
jne
pushf
add
or
iret
jp
xchg
lahf
mov
sbb
pushf
xchg
mov
jge
imul
cmc
scas
dec
fsubl
es
sbb
nop
aad
add
mov
xchg
jmp
lods
push
inc
ss
sbb
shlb
call
lahf
out
idivb
mov
sahf
xchg
insl
xchg
dec
push
sahf
mov
add
popf
push
test
outsb
adc
mov
lods
dec
out
outsl
mov
inc
lock
add
fmulp
sbb
push
pusha
xrelease
inc
insl
ror
orb
sti
in
es
cwtl
insb
adc
jmp
loop
ficomps
mov
mov
ja
ljmp
jg
int
je
mov
mov
inc
xor
scas
out
cli
jmp
mov
std
sub
fwait
adc
addb
adc
inc
xor
fs
xor
cmp
int3
sub
mov
sarl
in
or
inc
fnsave
mov
sub
jl
imul
pop
pop
push
push
imul
mov
or
push
dec
dec
mov
in
aaa
jo
adc
cmc
and
jno
dec
xchg
or
adc
repz
xchg
mov
xchg
test
jnp
fnsave
cmpb
daa
ja
daa
xchg
pushf
xorl
pop
lret
gs
dec
jp
xchg
ret
xor
mov
ds
cmp
sbb
fstpt
leave
xor
pop
loope
call
push
cmp
les
nop
jle
inc
test
out
shl
add
into
push
adc
mov
sub
int3
lret
stc
and
or
rolb
div
xlat
xlat
xchg
jl
scas
cmpsb
in
in
aas
sbb
xor
push
les
xchg
xchg
push
lock
cmp
sub
push
xor
mov
lret
jno
xchg
push
stos
or
jge
out
jno
ror
jnp
mov
mov
lret
xor
sub
mov
lahf
rcl
ljmp
imul
outsb
xlat
roll
fsubl
ret
push
xchg
lock
dec
xchg
lret
test
cmp
sub
pusha
shll
mov
fstpt
lcall
mov
fsubl
adc
decb
xor
cmp
jl
and
push
or
xor
jno
rorl
addl
movsb
imul
iret
into
mov
imul
movsl
shl
out
shlb
popf
cli
or
mov
xchg
jne
sar
cmp
int
das
jns
jo
sahf
test
or
cmp
sbb
or
nop
mov
nop
cmc
or
jp
cmp
sbb
je
sub
mov
pop
shlb
insb
dec
fidivrl
lods
dec
ret
push
scas
negl
push
pop
movsb
mov
adc
cmpsb
scas
lret
sbb
shrl
ss
iret
jae
and
stos
xor
jmp
jmp
push
push
jp
lock
shrl
insl
add
ljmp
add
mov
pop
push
filds
pusha
addr16
roll
jmp
mov
push
hlt
dec
jle
sub
push
stos
pop
cs
pusha
xlat
shl
pop
sbb
dec
mov
add
push
pop
xchg
push
cmp
outsl
aam
mov
gs
ds
loopne
mov
pop
cld
push
cmp
cmp
int
mov
cmp
sbbb
push
adc
ljmp
cmp
dec
pop
adc
jb
inc
add
pop
inc
add
mov
pushf
ja
pop
pop
mov
push
pop
loope
sub
push
pop
imul
aas
pushf
xor
jne
mov
adc
out
cmp
cld
mov
cmp
cmp
call
and
rcr
fistps
lahf
and
xor
cwtl
pop
aam
jo
jg
movsb
pop
mov
adc
call
insl
insb
sbb
rcr
loope
xchg
push
push
inc
imul
sbb
dec
jno
pop
shrl
orb
cmpsb
sbbl
inc
call
cld
xor
outsb
xchg
addl
mov
mov
repnz
lahf
popf
inc
adc
sub
pop
in
idivb
jg
or
push
movsb
loope
push
cld
jae
and
subb
jle
cli
ficomps
push
push
or
loopne
das
push
sub
pop
fcoml
push
fwait
lods
jne
inc
stc
test
sbb
out
nop
je
mov
jb
lods
test
lahf
loop
and
mov
mov
add
or
xchg
loop
bound
fsts
adc
mov
xchg
push
xor
cli
mov
adc
xchg
pushf
mov
pop
sub
or
rcr
cmp
into
dec
or
popa
cmpsl
pop
inc
aaa
dec
sahf
xchg
lods
mov
mov
xchg
mov
and
xor
mov
mov
mov
and
popf
in
mov
jmp
outsl
fcmovnu
loopne
in
xchg
xor
test
inc
cwtl
fnstenv
adc
sahf
lcall
mov
test
test
adc
out
push
sbb
xor
rolb
xchg
lods
push
cmp
or
mov
negb
add
fdivl
push
mov
cltd
dec
loop
and
test
add
aaa
inc
and
pop
mov
data16
int3
pop
xor
jns
fwait
xlat
cmp
jns
xchg
lret
aaa
push
inc
sub
dec
cli
aaa
sbb
ret
mov
add
jno
into
ss
mov
arpl
push
ss
jg
sub
push
pop
mov
jns
adc
push
or
jnp
ficoml
imul
cli
lret
or
or
loopne
ffreep
shr
or
cli
sahf
mov
jno
jnp
fmull
adc
push
push
xor
dec
das
femms
xor
sahf
push
add
fidivrl
aas
xlat
and
std
out
sub
sub
addr16
add
dec
dec
dec
mov
pop
push
pop
lret
mov
sub
dec
je
xlat
inc
mov
dec
out
daa
mov
ss
push
push
pop
jns
jp
mov
das
dec
dec
outsb
aad
movsb
insb
ds
gs
mov
pop
imul
ja
dec
out
fdivrl
adc
xchg
fcompl
iret
jge
xchg
sbb
xlat
jge
add
loopne
mov
inc
add
test
mov
mov
fs
js
mov
int3
fimull
mov
xchg
push
scas
mov
sbb
sub
push
lea
push
ficompl
lods
sub
adc
fwait
mov
cmpsl
aaa
dec
test
mov
sbb
cmc
mov
add
fildll
inc
adc
in
je
cmpsl
fwait
pop
fsubrl
enter
enter
cld
xchg
dec
hlt
rolb
mov
in
fsubrl
inc
ret
testb
cmp
repz
insl
scas
jecxz
loope
dec
mov
mov
hlt
fs
filds
fsubrl
aaa
in
mov
pop
out
cmp
or
es
xchg
add
mov
mov
push
cmpsb
fidivs
mov
sbb
add
xor
adc
sbb
cmp
out
mov
call
out
and
loopne
add
lcall
add
mov
and
lahf
xchg
sbb
mov
ljmp
into
inc
outsl
pop
sahf
rcll
jnp
jns
mov
aad
ret
cmp
sub
aam
lea
imul
mov
or
cwtl
cli
out
jle
out
aam
mov
xor
dec
pop
ljmp
in
outsb
popf
movsb
les
mull
pop
cmc
stc
push
fcmove
xor
cwtl
movsb
inc
add
mov
sbbb
lods
in
sub
fmul
and
cwtl
push
mov
hlt
pop
lret
mov
daa
in
popa
lret
imull
mov
pop
cmp
and
dec
dec
shrl
cmc
mov
test
shrl
shrl
repz
pop
jae
mov
mov
xchg
repz
cs
mov
push
sbb
inc
xchg
adc
push
cmpsl
jmp
dec
les
sbb
sbb
sub
mov
cltd
fimull
jno
test
das
shr
fstl
pushf
enter
pop
jo
cmp
das
in
inc
xor
ljmp
loop
mov
push
mov
sbb
or
or
dec
mov
pop
pop
imul
imul
push
cmp
mov
leave
lcall
gs
cmp
and
cmc
push
das
pop
dec
stc
and
loopne
shrb
je
ljmp
negl
sbb
scas
push
scas
add
adc
push
aad
loope
lret
rorl
xchg
sub
shufps
stos
insb
mov
gs
add
mov
mov
jns
mov
mov
dec
es
pop
daa
dec
cmc
and
xchg
pop
xchg
ss
loop
in
cmpsl
mov
mov
dec
xsaves
mov
jle
and
sarb
push
jo
adc
mov
xchg
jo
push
stos
push
add
sub
mov
pop
imul
insl
mov
scas
push
xchg
and
stos
shl
imul
adc
mov
push
fidivl
adc
data16
outsl
and
jge
pop
dec
ds
inc
and
bound
sar
sbb
and
adc
pop
into
add
enter
adc
or
or
sbb
sbb
fsubrl
and
cs
add
lods
cmpsb
arpl
xchg
mov
fimull
scas
mov
es
pop
jns
jg
add
mov
adcb
mov
and
adc
js
leave
loope
mov
dec
cltd
or
pop
mov
js
orl
aad
out
adc
fcomps
sbb
sbb
add
sarb
repz
pusha
out
pop
jp
stos
mov
xchg
or
je
addb
xor
cld
or
cwtl
es
jo
ja
div
fiaddl
push
add
xor
in
lahf
insl
fidivl
jg
lret
jle
push
and
mov
xchg
dec
xor
sbb
inc
adc
or
jnp
mov
test
ret
sub
nop
push
sbb
inc
cld
repnz
dec
stos
insl
push
dec
shrl
push
andb
outsl
mov
push
or
push
in
jmp
adc
cmp
sub
ret
sbb
jp
jmp
mov
fcompl
add
fbstp
adc
faddl
out
call
cs
jnp
mov
push
enter
sarb
xor
jae
repnz
xor
sbb
ficoml
lods
push
lret
shrl
push
fwait
push
sbb
shll
sbb
inc
lcall
sub
outsb
enter
cli
mov
inc
pop
jecxz
ret
cli
xor
popf
mov
or
pop
mov
fisubl
ret
xchg
in
cmpsb
les
or
xchg
pop
scas
mov
loopne
jg
das
cmc
xor
mov
aad
adc
into
fs
iret
insl
cwtl
mov
jg
aas
jo
in
push
clc
or
mov
dec
cmp
mov
test
jge
mov
out
aad
cmp
movsb
mov
and
sbb
or
gs
xchg
xor
lds
cld
cmp
mov
dec
mov
in
xor
push
push
out
xor
ja
dec
aas
les
jae
jmp
push
sti
je
enter
test
movsb
dec
xorb
push
sub
in
inc
leave
ucomiss
sub
cmp
mov
subl
dec
jb
or
inc
add
xchg
push
or
pop
fsubs
aam
popa
xlat
sbb
ret
pop
inc
movsl
mov
xchg
mov
stos
stc
in
xchg
cmp
scas
jae
jno
dec
xor
fstpt
sti
sarb
inc
mov
mov
jo
dec
call
movsl
mov
movsl
mov
xchg
pop
xchg
js
sub
mov
mov
rcl
cmp
xlat
sub
xchg
push
and
les
lret
jbe
pop
aam
out
dec
out
aam
rorb
jecxz,pt
cmp
mov
or
movsb
daa
out
cmp
push
xchg
sub
test
gs
insb
andl
dec
addr16
xchg
imul
jmp
jecxz
pop
xchg
mov
mov
std
cmp
xchg
sbb
mov
scas
mov
test
cmp
lock
dec
ja
dec
lods
movsb
dec
cmp
mov
ret
inc
inc
dec
icebp
or
jp
jo
mov
repz
test
arpl
mov
mov
mov
jg
jae
jp
and
cmpsl
out
pop
mov
movb
sub
and
push
sbb
outsl
test
xorb
shlb
adc
test
outsl
add
mov
pop
or
adc
adc
mov
add
out
scas
sbb
pop
add
shlb
outsb
push
sub
mov
dec
add
in
aas
and
loop,pn
loop
mov
xchg
movsb
lcall
sbb
aas
pop
inc
outsb
daa
sbb
and
push
aam
test
sbb
std
cmp
lods
bnd
ss
fdivl
add
shll
xchg
in
jp
jne
fiadds
lds
in
mov
cltd
add
stos
jp
scas
arpl
cltd
mov
dec
sbb
pop
sbb
xor
sbb
cmp
jo
pop
mov
mov
mov
sub
pop
push
icebp
gs
shlb
out
outsb
test
mov
mov
pop
jbe
cmp
pop
or
pop
sbbl
in
mov
xor
mov
mov
jge
pop
scas
test
rcl
shlb
insl
mul
fbstp
pop
mov
js
cli
mov
in
shl
mov
imul
push
loopne
jo
jnp
adc
ror
repnz
cs
repz
aas
int
cmp
inc
or
std
inc
sub
push
jmp
mull
test
shrb
cli
sbb
enter
xchg
cltd
inc
mov
pushf
je
lods
icebp
mov
push
outsb
movsb
inc
clc
loope
push
jne
fidivl
push
sahf
popa
lret
mov
fld
dec
or
mov
lock
stos
movsl
test
mov
inc
xchg
sub
in
mov
dec
frstor
pop
inc
imul
push
inc
and
clc
or
fs
cmp
jl
sbb
bound
cmpsb
frstor
sbb
push
and
push
inc
movsl
pop
fsubp
pop
sbbl
sub
int3
aad
inc
pop
lods
push
jg
fs
into
lret
mov
push
lcall
mov
test
push
gs
push
mov
adc
mov
into
sub
and
hlt
cmp
leave
and
pop
out
pop
negl
jb
or
pop
lea
inc
xchg
inc
pop
push
int3
inc
mov
icebp
push
in
in
add
cmp
lock
jnp
sbb
mov
stos
and
clc
jle
loope
je
cmp
sub
lea
adcl
dec
fs
jae
mov
out
inc
push
outsl
arpl
jne
dec
fcoms
cwtl
jp
or
add
mov
xchg
fstl
xor
mov
or
rorl
scas
int3
add
mov
es
xlat
std
mov
xchg
incb
or
lods
dec
sub
dec
mov
in
jp
inc
loopne
cs
out
adc
dec
adc
or
fstps
ljmp
lret
imul
cmp
ret
mov
push
and
push
add
mov
dec
mov
in
jnp
enter
mov
xlat
hlt
lcall
shlb
xchg
in
cmpsb
mov
add
idivb
mov
mov
cmp
out
pop
lret
push
fcoms
leave
sbb
mov
push
cmp
jg
xchg
mov
mov
inc
mov
lcall
pop
and
mov
bnd
pop
lahf
idivb
xor
cli
in
out
ret
movsl
std
popf
repnz
sti
mov
sbb
outsl
adc
or
mov
dec
scas
les
or
and
in
xor
dec
enter
bound
fsubrl
clc
xor
push
mov
ds
mov
mov
cmp
cli
das
shrb
das
pop
ret
movsb
outsl
mov
lods
dec
popa
fld
fimull
aaa
pop
sbb
jmp
cmpl
xchg
addb
clc
sub
mov
pop
popf
mov
bound
xchg
rclb
mov
sub
sbbl
sbb
addr16
sub
dec
imul
movsl
cld
mov
xor
sti
and
es
lds
sbb
inc
jl
mov
ss
fs
mov
aad
jns
sub
out
and
xchg
cs
mov
mov
in
pusha
dec
push
push
jl
mov
imul
push
ret
popf
rcll
addr16
inc
int
arpl
pop
add
adc
test
loopne
mov
and
fsts
dec
lods
pushf
sbb
pop
inc
mov
mov
sahf
aad
scas
stc
pop
or
xchg
rolb
mov
lds
popf
loop
or
or
orl
cmp
pop
adc
xor
dec
jg
negl
stc
fwait
pop
bound
and
pop
jbe
enter
in
and
xchg
pop
jl
dec
hlt
repz
lret
or
lods
gs
push
sub
aam
fdivs
pop
cwtl
xchg
sub
sub
or
mov
imull
pop
push
push
loop
ss
iret
ljmp
and
lock
xor
dec
cmp
ret
adc
stos
cmc
jae
dec
aas
es
pop
outsb
cltd
adc
cwtl
test
cmpsb
iret
push
daa
mov
js
jb
push
lock
icebp
pop
mov
test
xor
cmpsl
arpl
imul
cwtl
pop
mov
into
pop
mov
pop
das
leave
adc
pushf
aas
sub
jl
filds
lods
xchg
sahf
jo
inc
mov
jle
fistl
adc
das
pop
xchg
fimuls
xchg
mov
ljmp
xor
jge
mov
dec
fcomps
and
jbe
out
inc
dec
adc
leave
dec
in
pushf
pop
jl
xor
sbb
mov
decb
mov
and
add
mov
jo
fidivrl
xchg
or
inc
jp
dec
roll
add
mov
pushf
fwait
mov
lds
lahf
sub
pop
sub
mov
lret
xor
in
scas
xor
xor
sub
jne
cmp
jbe
sbb
fstpl
fs
adc
ss
addr16
testl
test
push
sbb
mov
adc
cmpb
push
pushf
popa
jle
mov
cmp
and
xor
ljmp
rolb
loop
sub
xchg
imul
pushf
repnz
ds
add
jae
les
addr16
mov
jb
jno
test
insl
cmp
or
ret
xchg
push
mov
cltd
jecxz
addl
add
adc
test
out
adc
and
adc
mov
enter
mov
push
add
or
mov
jecxz
inc
pop
and
in
imul
pop
add
popf
hlt
push
hlt
push
and
filds
ret
or
fildl
push
xchg
inc
push
call
int3
mul
lods
test
inc
movsb
sub
lret
jge
aaa
lods
mov
xchg
repz
xlat
xor
fmulp
lret
popa
nop
mov
sbb
cmpsl
loope
mov
repnz
dec
and
out
lret
sbb
test
insb
jo
call
sarb
movsb
add
push
mov
sub
xchg
inc
daa
add
cmp
xchg
out
jbe
es
jbe
mov
mull
loop
mov
and
stos
repnz
xchg
fildll
xchg
leave
mov
dec
dec
aaa
or
iret
test
insb
mov
lahf
inc
fs
loope
jb
ja
hlt
jg
fdivrs
mov
in
mov
or
cs
test
pop
leave
daa
push
add
ja
pop
xor
add
pop
lock
mov
inc
stos
xlat
sti
dec
sub
shlb
push
cli
lds
mov
out
xchg
shll
mov
cmp
aas
bound
xlat
sub
or
dec
fs
ds
bound
push
cs
rcrb
push
sub
pop
cwtl
xchg
mov
fmuls
or
ds
cmpb
jg
xlat
sbb
sbb
xchg
lret
xor
push
jne
jb
pop
or
ret
fldenv
fwait
arpl
vpunpckhdq
push
mov
mov
fdiv
ljmp
xchg
pop
push
outsb
in
js
shrb
ljmp
add
in
lret
decl
scas
xorl
inc
mov
sub
ja
aaa
imul
or
mov
ds
push
push
ficoms
xlat
add
lret
add
xor
xchg
mov
pushf
xchg
sbb
aaa
inc
ret
popf
les
arpl
mov
xlat
jmp
add
mov
mov
add
xor
fists
mov
adc
je
aaa
dec
bound
xor
push
in
push
and
pop
pop
mov
push
inc
dec
stos
or
mov
jg
jo
paddsw
scas
les
cmp
cmc
fdivs
fwait
mov
mov
mov
push
mov
data16
cli
xor
cmp
bnd
lcall
ds
inc
adc
push
and
sbb
rcr
push
dec
pop
jbe
int3
and
icebp
xor
push
addr16
mov
in
lods
fstpl
movsl
negl
adc
scas
add
add
lea
xchg
adc
jge
pop
adc
xor
out
lods
cmp
inc
lcall
scas
xchg
clc
clc
jne
xchg
ljmp
dec
test
mov
movsbl
or
lods
mov
movsb
and
test
daa
int
mov
xchg
sub
outsb
xchg
insb
fs
sub
scas
pop
jns
xor
adcl
cmp
subb
cli
mov
sahf
inc
enter
lret
aaa
xchg
jge
add
adc
dec
jg
xor
out
cwtl
pop
fcoms
and
push
outsb
call
in
sub
mov
xchg
sbb
sub
push
je
ss
push
cmpsl
push
add
xchg
push
sbb
push
dec
cmp
inc
repnz
mov
rorl
std
xor
or
mov
xor
xchg
cmp
mov
jle
loop,pn
hlt
pop
cmpsl
push
adc
and
push
sub
std
aas
shrl
xchg
inc
repz
xchg
inc
xor
jo
jl
pop
insb
repz
jg
lcall
adc
jo
sub
scas
xor
sub
lcall
dec
into
sahf
in
out
insb
push
mov
sub
inc
fcmove
out
inc
roll
sub
sbb
mulb
mov
dec
sbbb
adc
and
lahf
movsb
lret
push
inc
mov
icebp
adc
popf
lret
inc
out
sbbb
jae
cmp
mov
les
in
mov
testl
jmp
fs
xchg
popa
imul
fwait
jae
pop
daa
lahf
jg
enter
jae
push
mov
test
out
inc
mov
mov
ds
loop
mov
push
lds
cli
mov
dec
xchg
mov
int3
inc
lret
loop
sbb
outsb
xchg
mov
jge
add
lock
scas
icebp
shll
jl
pop
daa
inc
in
popf
and
rolb
xchg
loopne
or
cmp
xchg
mov
loopne
int
cld
adc
sbb
xor
inc
pop
jmp
movl
notb
addl
mov
arpl
lods
shr
mulb
adc
xchg
flds
mov
bound
sbb
js
das
mov
or
mov
pop
mov
jmp
in
jne
lods
xor
cmp
ret
aas
inc
aas
scas
notb
pop
int3
nop
sub
xor
test
lret
fnsave
jl
dec
sahf
mov
or
jae
stos
repnz
aam
int
dec
jbe
jmp
add
or
sbb
xor
and
out
fisttps
xor
repz
xchg
push
pop
jmp
lods
and
leave
pop
mov
in
imul
sbb
rorl
mov
addb
sbb
push
outsl
movsb
dec
jb
and
stos
fsubs
sahf
inc
fs
incb
xchg
cmp
jmp
mov
add
inc
mov
pop
mov
mov
dec
mov
push
pop
fdivrl
add
add
testb
sbb
jmp
push
aad
sub
inc
test
jns
sbb
cli
dec
jae
js
jae
mov
sub
xchg
lcall
adc
or
mov
leave
shl
mov
jbe
xor
insb
stos
cmp
mov
xor
mov
fld
fwait
enter
and
fadds
roll
lcall
call
adc
out
sar
xor
jbe
push
lcall
adc
cmp
lods
sub
mov
xor
xlat
nop
cltd
mov
dec
pop
andb
outsl
push
mov
or
cmpsb
xor
addb
repz
inc
movsl
js,pt
adc
fcoml
mov
push
or
jmp
test
xchg
mov
gs
cltd
push
and
outsb
in
ret
or
mov
add
or
mov
stc
pop
outsb
aam
mov
jg
in
outsl
mov
in
mov
xchg
daa
cwtl
jno
rcll
xchg
test
andb
shl
jnp
stos
push
movsl
add
xor
sbb
mov
or
sub
lock
test
or
sahf
fsts
xchg
mov
mov
and
mov
push
mov
fisubrl
mov
pusha
pop
pop
mov
in
jns
fmul
dec
xor
cmc
mov
stos
or
jp
sub
icebp
gs
flds
sub
mov
cmc
in
or
xor
inc
add
pop
lahf
xor
in
lea
fidivl
mov
leave
and
mov
or
ds
gs
mov
push
push
mov
jns
sbb
loope
das
xchg
leave
jbe
enter
push
mov
movsb
adc
fisubrl
out
pop
pop
pop
xchg
and
sub
iret
lcall
sbb
xor
sub
mov
cmp
xchg
inc
mov
scas
sbb
loope
dec
shlb
out
xchg
adc
call
bound
inc
test
aaa
inc
dec
rcll
xchg
lods
mov
push
lds
ja
xchg
xchg
inc
sub
xor
inc
call
dec
push
mov
push
lds
out
fists
inc
mov
sub
cltd
lds
and
movsl
js
rorl
mov
das
stos
xor
addl
dec
fwait
sbb
sti
inc
sub
fsubrs
push
push
sub
test
and
and
ljmp
push
mov
jbe
rolb
jle
fisubrs
imul
into
into
test
or
xlat
rorb
jmp
in
insb
ja
nop
mov
inc
fiadds
lods
test
into
rorw
mov
push
pop
je
jo
pop
adc
mov
sub
aad
iret
faddl
dec
bound
js
sub
enter
mov
jae
out
lods
call
dec
and
pop
mov
add
loope
mov
popa
mov
popa
mov
push
sbb
scas
jle
pop
mov
sarl
xchg
shr
mov
xchg
add
mov
in
add
adc
mov
sub
adc
or
adc
fidivrl
xchg
xor
daa
outsl
mov
or
xchg
adc
jb
lret
lahf
scas
rorl
dec
dec
inc
jecxz
clc
stc
mov
and
filds
fs
inc
mov
xlat
sbb
ds
aam
out
dec
std
loope
inc
add
xor
ret
fidivrl
mov
lret
cwtl
les
jg
test
mov
cmpsb
stos
test
test
std
fs
dec
sub
cmp
je
mov
jbe
push
xor
or
cmp
inc
and
int3
ss
and
leave
addb
mov
jnp
push
fsubrs
icebp
jg
xor
xchg
je
in
pushf
push
add
lock
in
pop
cld
movsb
xchg
clc
push
jle
mov
bound
push
test
out
sub
or
cmpsb
roll
dec
sub
inc
aaa
jns
sub
iret
movsb
outsb
mov
aam
inc
fldcw
sbb
loop
add
stos
xor
xchg
xlat
cmp
loope
stc
adc
xchg
xchg
lods
loopne
jle
mov
lcall
inc
int3
fs
dec
inc
ljmp
sbb
cmc
xchg
aas
dec
sahf
cmp
mov
push
lods
rcr
clc
mov
fucomip
sub
mov
xchg
push
add
rcrl
sbb
fildll
test
shll
adc
cmp
lcall
pop
addl
add
ficoms
aaa
pop
push
mov
inc
xchg
mov
sbb
cmp
cwtl
pushf
push
loop
andb
dec
or
jbe
mov
sti
sbb
int3
or
cmp
add
ljmp
mov
negl
sbb
nop
dec
test
insb
mov
out
mov
jle
fcompl
fcomps
bound
clc
jmp
imul
mov
mov
or
cmpb
push
cmp
fwait
and
xchg
sub
sbb
repz
jae
mov
fmul
scas
mov
jp
add
sub
les
xchg
cmp
xchg
outsl
gs
sbb
inc
mov
pushf
ficoms
bound
mov
jle
fiadds
and
cld
testl
scas
sbb
test
or
lret
mov
sbb
add
sahf
and
jbe
push
push
xchg
out
pop
outsl
adc
ficoml
add
jb
pop
rol
pop
fs
cld
sarb
mov
ror
jns
insb
cli
push
psraw
pop
int
out
push
out
push
pushf
scas
xchg
cmp
sub
fimuls
push
stc
notb
adc
lea
arpl
add
out
mov
dec
sbb
adc
cmpsl
xlat
mov
inc
jbe
mov
stos
shll
sbb
and
hlt
mov
loopne
or
sub
js
mov
out
add
mov
sahf
divl
ret
dec
lods
in
ficoml
inc
mov
add
add
mov
and
mov
xor
lret
jecxz
sahf
mov
loop
pop
scas
out
dec
bound
or
decl
add
mov
sub
cmp
mov
rorb
pop
in
lds
push
test
js
push
and
shl
insb
fst
test
push
lock
insb
dec
mov
call
push
loopne
lea
xlat
filds
push
js
fmull
jecxz
and
xor
dec
loope
inc
ljmp
adc
scas
ljmp
and
or
or
lcall
and
dec
sbb
or
xchg
xor
jns
pop
scas
scas
or
sub
mov
xchg
inc
addr16
inc
out
cmp
sub
test
inc
loopne
cli
lods
mov
fcmovne
scas
cmp
xchg
add
jmp
cmpsl
icebp
shr
ja
out
fisttps
cmp
cmp
xchg
or
pop
aam
sbb
push
enter
push
aad
jl
push
sub
sbb
outsb
dec
push
fildl
test
out
test
mov
gs
push
cmpsb
or
sbb
mov
fadd
adc
mov
cmp
aam
inc
fidivs
cmp
jge
dec
nop
dec
test
lds
xchg
mov
xchg
adc
add
jecxz
jne
sahf
inc
daa
mov
movsl
xchg
pop
ds
xchg
arpl
jmp
push
stos
popa
xchg
insl
arpl
jbe
lods
cmp
sti
sbb
sbb
mov
cmpsb
cmc
jo
out
and
frstor
mov
xchg
push
adc
sub
imul
pop
dec
jl
and
mul
xchg
mov
mov
lahf
jbe
ja
test
dec
dec
out
lahf
pop
fwait
into
ljmp
in
imul
test
into
lods
hlt
cltd
aas
push
lock
dec
out
lahf
dec
out
xlat
lods
mov
lds
gs
xchg
xchg
adc
outsl
pop
and
jecxz
xchg
cmpsl
jns
sbb
jbe
mov
or
add
pop
cmp
cmpsb
icebp
xchg
xor
push
mov
sbb
jnp
test
cmpsl
rcrb
in
sub
loope
ficoms
mov
scas
ja
ror
sbb
fisttps
xor
dec
aam
jmp
sbb
rcrb
sbb
cmp
cmp
roll
xchg
test
and
jae
call
dec
aam
loop
pop
rcl
sub
scas
push
push
or
das
lock
std
sbb
rcr
test
gs
mov
ret
arpl
rcrb
fstpl
out
fnstenv
mov
mov
jg
bound
pop
int
loop
rcrl
dec
pop
xchg
jb
js
xchg
push
mov
std
out
jmp
push
js
mov
cmp
push
mov
mov
cmp
test
out
imul
imull
mov
add
jecxz
xchg
into
pop
das
inc
enter
and
dec
jmp
unpckhps
cmp
fwait
pop
adc
pop
cmp
out
xchg
push
cmp
mov
mov
fstl
lcall
push
aam
loop
nop
mov
or
lea
aaa
mov
pop
sti
ljmp
push
ljmp
icebp
pop
jb
daa
loope
movsb
mov
add
push
inc
cmp
out
outsb
jns
subb
sbb
sub
cltd
xchg
jl
outsb
jo
ja
int
mov
mov
test
sbb
push
pushf
push
mov
xchg
mov
icebp
pop
push
lret
stos
xchg
clc
in
add
imul
xorb
pop
movsl
pop
xchg
daa
jns
int3
pop
mov
dec
fisubrs
out
and
insl
outsl
sti
repnz
jnp
pop
out
ss
jge
cmp
add
dec
or
aaa
inc
xor
jnp
sarl
and
bound
xor
cltd
pop
push
movsl
push
fs
xchg
dec
inc
gs
outsb
jg
cmp
inc
test
insl
stc
xchg
repz
xchg
shlb
jecxz
add
aad
ret
lcall
fdivrs
adc
mov
mov
js
mov
mov
addb
push
repnz
sbb
cli
clc
pushf
mov
clc
xchg
mov
sar
int
xor
push
push
sub
xor
adc
cmp
int3
iret
in
mov
pop
int
movsl
pusha
push
or
xchg
in
fdivrs
jg
fidivs
push
ss
test
fs
pusha
pop
jbe
sbb
adc
xchg
inc
xchg
fmuls
daa
test
in
push
or
fists
push
dec
inc
movsl
sbb
jl
jecxz
daa
test
or
add
sbb
sub
cmp
lock
int3
or
push
mov
or
cmp
pop
test
int3
push
dec
mov
cmpb
pushw
push
pusha
pop
jbe
outsb
sub
cmc
sub
fistps
insb
xchg
ret
in
cmp
sbb
dec
dec
adc
sbb
xchg
cmc
fldt
fmuls
jmp
out
icebp
aas
xor
cmp
into
pushf
add
jns
cwtl
inc
fcmovne
or
pusha
cltd
pop
jge
rcrb
insb
add
mov
test
test
loop
mov
fs
mov
inc
push
xchg
fsubl
add
fs
mov
push
out
sub
leave
loope
aam
lahf
scas
push
inc
ret
xor
in
into
or
lea
sbb
aas
jge
imul
cmp
cmp
push
frstor
sbb
outsl
and
push
sub
movsl
mov
lcall
jl
test
add
mov
or
shll
jl
shrb
xchg
dec
jl
cmp
jbe
lds
xor
xchg
pop
jmp
jp
push
nop
mov
lock
mov
push
fwait
shll
lcall
int3
push
out
or
int3
mov
jb
sub
aam
push
and
mov
leave
mov
jge
je
in
inc
and
in
jb
int3
or
dec
js
adc
mov
cs
popa
mov
nop
incl
lea
arpl
inc
xchg
mov
push
js
sub
fists
popa
and
in
pushf
cld
outsl
or
cmc
cmp
in
pusha
scas
test
push
pop
in
pop
pop
dec
stos
cmp
mov
mov
shll
repz
fildl
mov
push
pop
out
jae
adc
inc
in
mov
pushf
inc
xor
inc
xor
add
jae
xor
and
mov
ljmp
insb
dec
sub
pop
icebp
repnz
xchg
jmp
and
fisubrl
outsl
cmp
sbb
shlb
shr
adc
cmp
negl
test
lret
fcompl
inc
insb
scas
sbb
mov
into
nop
sarl
scas
xchg
es
fmull
inc
and
mov
sub
xchg
push
jg
nop
divl
mov
std
ret
mov
pushf
push
fwait
loop
jo
fldt
in
in
gs
out
out
ret
cmp
mov
ss
cmp
jmp
push
dec
sbb
sub
and
cwtl
and
and
adc
mov
mov
jg
movsl
mov
push
andb
mov
dec
movsl
es
ficoms
xlat
aad
sub
popa
push
push
or
into
and
pop
xchg
lret
xchg
nop
pop
and
mov
pop
pop
loop
cmp
addr16
out
push
mov
divb
xor
mov
das
xchg
insb
sub
negl
lahf
testl
jbe
fs
leave
stos
ja
mov
shl
adc
in
jmp
and
xchg
in
insl
scas
fcmovnu
out
pushf
das
pop
pushf
or
nop
popf
lahf
mov
push
cli
push
push
push
inc
jmp
cmp
adc
pop
fildl
jecxz
adc
stc
hlt
cmp
push
add
xchg
loopne
jo
jmp
imul
jp
lcall
repnz
fisttpl
adc
mov
test
stos
aam
inc
insl
hlt
add
shrl
gs
dec
or
xchg
mov
push
xor
push
push
loopne
inc
mov
push
andb
cmp
cmp
lock
mov
insl
push
sbb
ja
sarl
jno
call
test
cmp
fs
leave
adc
sbb
test
inc
cmp
xchg
in
xor
mov
pop
jge
mov
lock
cmp
xchg
cmp
cwtl
imul
sti
test
ret
test
sub
xchg
lds
cwtl
xor
cmp
add
int3
sub
xor
int
jmp
xlat
and
shrb
push
mulb
fistpl
sub
aaa
push
mov
push
arpl
clc
in
call
insl
pop
test
cmp
mov
shlb
movsb
dec
aam
daa
lods
test
insl
push
adc
inc
movsb
hlt
clc
jp
movb
add
jae
mov
movl
out
adc
ficompl
pop
xor
push
sbb
in
push
inc
or
cmp
cmpsl
add
es
jecxz
fmulp
nop
sahf
aaa
sarl
lahf
scas
into
jp
sub
outsb
scas
das
rclb
adc
gs
dec
add
jbe
xor
cltd
lock
scas
xchg
pop
aaa
out
fdivs
mov
mov
inc
mov
mov
jmp
and
lcall
push
lock
cltd
insl
dec
pop
xchg
or
jl
jne
insb
jbe
pop
jno
lods
sub
pop
inc
sub
xlat
pushf
ret
test
leave
dec
lods
nopl
mov
je
int3
outsl
xchg
xchg
mov
inc
lods
push
sbb
cmc
push
mov
pop
leave
pop
inc
in
fisubrl
mov
xlat
sub
loopne
rcll
fmuls
insb
insl
int3
push
ret
mov
frstor
mov
cmpsb
loope
mov
insl
out
or
adc
test
nop
lcall
movsb
mov
or
clc
sti
xchg
push
xor
ds
xchg
add
mov
jmp
xor
pop
out
sarb
adc
in
and
gs
add
outsb
fdivrp
fistl
mov
xor
icebp
je
stos
cmp
hlt
inc
cwtl
xchg
popf
or
push
add
mov
imul
push
xor
sub
daa
adc
pop
mov
xor
lret
adc
leave
xchg
nop
in
xor
push
fucomi
push
pop
or
dec
add
adc
insb
jmp
adc
mov
cmc
jl
iret
aas
sub
push
xchg
push
mov
test
jp
jecxz
sub
leave
or
insl
jg
xor
sahf
shll
xchg
les
sub
jle
and
push
loope
sbb
jnp
in
loope
sahf
movsl
orl
fldl
push
mov
mov
dec
fimuls
sbb
sbb
mov
or
stos
addr16
jmp
xor
gs
into
xchg
pop
aad
dec
and
mov
scas
xor
inc
mov
stos
mov
or
push
lds
push
xchg
xor
sbb
and
hlt
adc
sub
out
les
pop
daa
sbb
mulb
jmp
sar
push
and
push
inc
inc
insb
push
add
jmp
sbb
push
jns
lea
pop
cmp
add
insl
xchg
shrb
ret
and
inc
shlb
sarl
cmp
jo
lds
cmc
sti
pusha
cmp
outsl
push
ret
sbbl
xor
mov
push
nop
pop
fldenv
mov
popa
neg
in
pop
loope
mov
add
pop
test
adc
mov
scas
in
sbb
aas
inc
mov
and
adc
dec
lea
or
mov
mov
insl
or
lds
push
lahf
sbb
ss
push
frstor
lret
pop
fwait
test
loop
int
mov
in
dec
xacquire
imul
adc
jns
dec
pop
in
add
ret
imul
mov
xor
adcl
test
push
cltd
aad
dec
inc
rclb
lods
addr16
les
dec
dec
mov
ja
addr16
mov
and
rcll
or
inc
out
mov
jno
hlt
push
push
and
push
sbb
repnz
lods
daa
iret
dec
mov
xor
adc
lcall
out
loopne
add
rolb
pop
mov
adc
aaa
push
mov
push
xor
stc
jle
aam
or
mov
sub
pop
addr16
jecxz
ja
add
aam
xchg
mov
mov
hlt
mov
mov
enter
iret
frstor
xchg
js
xor
sbb
sub
mov
xor
test
jmp
inc
stc
xchg
es
jnp
add
in
bound
and
fs
jl
mov
xchg
lea
jae
push
flds
nop
pop
fldt
lcall
fimull
mov
scas
out
xorb
xorl
xchg
aad
jl
mov
divl
das
jmp
out
mov
pop
push
fisubrl
ja
in
pop
or
sub
dec
cmp
insl
daa
xchg
ja
xchg
adc
inc
imulb
dec
pusha
call
xor
cmp
rolb
negl
shll
out
fwait
std
mov
sub
loopne
decb
mov
dec
insl
xchg
xchg
shrb
push
mov
negb
push
into
push
sarl
cmpsl
mov
jecxz
outsb
jae
ret
movsl
sub
sbb
test
leave
xchg
jno
pop
inc
movsl
push
xchg
rorb
sbb
pushf
insl
jo
push
loopne
xor
cld
mov
push
pushf
dec
dec
sbb
cld
lret
out
dec
inc
popf
xchg
scas
xor
sti
scas
jl
lods
in
in
cli
fs
inc
in
hlt
lds
xchg
daa
mov
aam
mov
testb
jge
pop
dec
jb
and
cmp
cmpsl
test
and
mov
cld
fidivrs
leave
call
sahf
push
negl
aaa
fistpll
std
leave
andb
jle
mov
dec
data16
js
mov
mov
mov
jb
call
sbb
add
adcl
add
pop
mov
push
push
sub
xchg
test
sbb
push
mov
xor
in
mov
jno
inc
leave
sbb
testb
test
cmpsb
js
test
jl
imul
in
int
and
lock
or
mov
inc
test
adc
nop
icebp
add
ja
dec
test
scas
movsl
jbe
xorb
ret
push
mov
xchg
daa
les
or
mov
shl
xchg
jp
inc
push
pushf
fiaddl
push
and
mov
jecxz
pop
fildl
cltd
test
push
rorb
mov
lret
jge
add
jns
fists
jmp
in
insl
rcrl
cli
push
das
ljmp
mov
or
pusha
ja
ret
jmp
addr16
cwtl
ret
xchg
add
cmp
stos
xchg
push
cmpsl
in
pop
daa
ja
pop
xchg
xor
add
pop
insl
cmp
push
repz
cmp
imul
add
stc
add
pop
ss
mov
insl
cwtl
mov
dec
mov
xorb
cmpsl
mov
adc
jno
dec
js
sbb
aaa
xchg
lea
mov
out
jb
adc
pop
icebp
icebp
jg
adc
jbe
aam
and
iret
lret
mov
clc
mov
stc
in
fstpl
jmp
sbb
inc
xchg
imul
xor
push
addr16
adc
adc
inc
pop
aas
insb
fists
dec
dec
std
out
jg
lahf
outsb
insb
fldt
and
jle
sub
subl
push
push
jmp
loop
testb
dec
inc
jecxz
cltd
xlat
xchg
je
adc
pop
sbb
popl
push
jg
sbbl
jo
pop
mov
in
in
sbb
or
outsb
or
jo
repz
add
jb
adc
aas
or
dec
jae
push
inc
sub
push
xchg
call
out
arpl
lea
mov
ja
xchg
pop
pop
mov
adc
push
jne
mov
xor
cmp
sbb
push
arpl
test
lret
test
push
mov
dec
ds
xchg
mov
jbe
mov
xchg
add
pop
add
adcl
add
repz
adc
aaa
mov
push
into
inc
jbe
fwait
pop
adc
lcall
and
mov
test
rorl
sub
in
mov
in
push
inc
add
les
pop
cmp
cmp
lea
mov
mov
test
mov
subl
xchg
fimull
pusha
sub
sbb
sbb
cltd
jo
test
aad
fcmovu
push
mov
int3
xchg
mov
mov
ret
push
mov
mov
ffree
fnstenv
out
mov
dec
mov
into
add
or
stos
inc
mov
fistps
insb
add
outsb
xchg
pop
mov
rol
test
nop
jnp
xlat
pop
pop
mov
dec
mov
fucomi
mov
test
push
jecxz
xor
jo
mov
mov
cld
cmp
mov
adc
lret
outsl
mov
pop
pop
hlt
stc
loope
inc
mov
adc
insb
icebp
sbb
dec
mov
std
insl
cwtl
add
inc
xor
popf
cmpsb
outsl
xchg
cmp
mov
adc
mov
add
into
test
adc
xor
jl
daa
push
ds
fwait
popf
sbb
mov
xchg
aaa
cmp
fbstp
hlt
adc
sub
inc
int3
and
cmp
jg
aam
in
inc
bound
or
ss
in
mov
jnp
fsts
sbb
mov
repz
jnp
das
adc
push
add
addr16
jnp
xchg
cmp
mov
fcoml
or
dec
jmp
dec
jp
rcrl
mov
mov
pop
jge
push
nop
ret
jge
push
add
ss
enter
std
dec
scas
imul
popf
cmc
xchg
iret
int3
and
dec
inc
repz
dec
xchg
sub
lea
xor
xchg
icebp
enter
sub
in
cmp
and
sub
or
and
int3
in
cmp
testl
out
dec
lea
adc
push
call
xlat
std
stos
cmp
sbb
lret
mov
ljmp
jl
mov
sub
push
hlt
ljmp
jb
and
ret
arpl
jge
inc
push
jle
out
jne
stos
add
inc
or
cs
pop
mov
add
inc
pop
lcall
xchg
push
outsb
out
or
mov
push
cmp
adcl
sub
stos
adc
insl
xor
jmp
mov
push
mov
jmp
sub
push
lods
js
push
mov
fstps
mov
mov
shl
mov
mov
mov
loop
enter
push
sub
call
cmpsl
push
sbb
pop
add
mov
imul
cmp
sub
push
repnz
nop
pop
cmp
pusha
mov
mov
cmp
push
jmp
outsb
mov
mov
xchg
addr16
inc
fidivs
xor
jae
adc
add
leave
test
add
imul
mov
loopne
fcoml
mov
push
or
dec
bound
test
or
adc
or
inc
inc
ret
sbb
add
js
push
jp
outsb
movsb
movsl
mov
mov
out
mov
pop
push
jecxz
fbstp
pop
jl
mov
push
inc
arpl
inc
rol
mov
add
and
int
jnp
outsb
xor
xchg
or
cmpsl
cmp
movb
aas
dec
les
pop
xor
fucomp
xor
les
inc
int3
push
xlat
shll
mov
mov
rorb
pop
rcrb
bound
sub
cmc
loopne,pn
xor
mov
lcall
pop
insb
fcomps
add
das
lods
pop
mov
in
mov
inc
scas
dec
enter
fdivr
int
hlt
or
xor
mov
sbb
inc
ds
in
fwait
cmp
push
mov
mov
aas
adc
scas
mov
cmp
fucomi
std
mov
sub
jae,pn
aas
iret
jb
mov
or
lods
dec
ficoml
pandn
call
adc
push
lods
cmp
in
ret
data16
push
arpl
xchg
push
jecxz
rcrb
mov
or
push
stc
or
xor
mov
cmp
inc
movsb
mov
iret
xchg
inc
pop
fwait
cmpb
inc
pop
pop
stos
and
mov
sub
iret
adc
mov
mov
dec
in
lret
or
xor
push
or
cmp
stos
sub
test
dec
mov
push
clc
push
and
mov
wbinvd
fidivl
scas
cld
sub
outsb
xor
fcmovbe
xor
mov
xchg
pop
sti
lret
mov
rcrb
pop
shrl
mov
test
andl
and
imul
xlat
adc
cmp
xlat
add
divb
or
in
sti
std
xchg
enter
out
addr16
test
ffreep
and
mov
aam
ljmp
adc
les
movsb
xchg
mov
movsl
andb
adc
cmp
test
pop
js
mov
lods
dec
loope
sbb
jp
adc
adc
sbb
ds
push
mov
jmp
loop
cs
cmp
adc
add
aas
imulb
xor
jg
adc
sub
aad
int
stos
mov
mov
sbb
rcrb
inc
jns
fimuls
push
pop
jb
pop
mov
add
leave
testb
pop
xor
jecxz
fwait
stc
mov
div
pop
sbb
push
adc
stc
shlb
scas
std
out
dec
std
scas
xchg
scas
shlb
das
cltd
mov
dec
test
inc
sbb
mov
pop
mov
adc
push
push
cmc
sub
fwait
cmp
pop
testl
arpl
push
xchg
fiaddl
cmp
ret
dec
xchg
fbstp
lcall
mov
push
jg
mov
or
sarb
cmc
xor
das
mov
jns
mov
jp
sbb
mov
inc
test
jg
shr
add
mov
popf
daa
xchg
mov
mov
fcoml
xor
negb
inc
xchg
movsl
cmp
and
and
sub
hlt
iret
fndisi(8087
cltd
js
aaa
test
lret
aad
xor
fsubr
sti
pop
loop
fsub
mov
add
repz
lock
inc
mov
arpl
fcoml
mov
or
js
xor
fs
fcos
sub
mov
outsb
loope
stc
shlb
jp
ss
sbb
shlb
push
in
jmp
and
xchg
push
je
cmp
cltd
xchg
cmpsb
lret
cmpsb
insb
addb
jne
add
mov
in
xchg
jae
sub
cmp
mov
pop
xchg
popa
cmc
inc
out
pop
in
pop
mov
ret
adc
sub
sub
aaa
jg
xor
or
mov
cld
xor
bound
sbb
cmp
adcb
push
dec
lcall
jnp
dec
pusha
add
and
pop
loop
inc
xchg
sti
xchg
jge
mov
pop
add
movsb
filds
das
mov
int3
ret
cmpb
lcall
push
mov
sbb
or
sbbb
insl
jmp
rorl
and
in
xchg
mov
int3
and
mov
mov
cli
cmpsb
cmp
or
imul
inc
outsb
xor
jl
pop
dec
inc
dec
lcall
adc
cmp
jae
xor
dec
pusha
pop
ss
mov
mov
repnz
adc
cltd
pop
xchg
xchg
popa
fstpt
and
dec
pop
adc
nop
mov
mov
or
js
pop
sahf
pop
std
xchg
xchg
adc
push
cld
and
pop
jns
dec
in
cld
add
lcall
adc
enter
adc
cltd
sbb
in
jecxz
mov
mov
lods
in
pop
loopne
cmp
pop
pop
scas
lock
and
adc
ss
inc
and
dec
out
sbb
or
popa
inc
xor
aam
or
pop
mov
out
punpcklwd
ljmp
sbb
cmc
or
push
int
movsb
sub
das
jecxz
gs
aas
dec
nop
mov
inc
mov
test
rorb
sub
fistpll
bound
les
mov
pusha
fistl
mov
movsl
cmp
xchg
and
sti
test
imul
adc
push
jno
call
test
outsl
sub
fdivp
pop
fmul
stos
mov
push
clc
sbb
pop
inc
or
adc
xchg
shl
or
lds
pushf
out
test
mov
aas
adc
cmpsl
cmp
mov
shll
fists
jle
ds
inc
cmp
into
lea
pusha
mov
push
pop
cmp
leave
insl
xchg
jne
mov
jnp
bound
mov
int3
inc
xchg
dec
inc
or
sbb
ss
fs
movsb
ja
lea
fsubrp
jge
mov
pop
mov
pop
js
sbb
dec
ret
test
and
cmp
mov
mov
sbb
jp
je
jecxz
stos
pop
jg
mov
cmp
cmp
aas
push
lret
inc
inc
add
xchg
sbb
push
or
cmpl
cld
shl
call
cmpb
or
pop
sahf
dec
and
xchg
les
fcompl
test
int
cmpsb
lods
fmull
jo
sub
pop
mov
idiv
addr16
rcrb
fsubrs
jle
nop
fstpl
loopne
insl
popf
pop
pop
jecxz
sub
in
dec
cmp
jbe
fidivrl
es
push
mov
jnp
push
int3
call
std
pushf
lahf
jnp
inc
gs
inc
dec
sub
aad
mov
or
jo
mov
mov
mov
scas
mov
fmuls
or
mov
add
ja
mov
outsl
in
repz
hlt
cmp
stc
jg
add
in
pop
sub
cmc
insb
adc
xor
scas
adc
ljmp
movsl
cmp
sbb
int
icebp
scas
lods
hlt
dec
and
or
cmp
jmp
inc
and
and
add
dec
adc
lock
dec
js
adcl
lcall
push
inc
mov
dec
xchg
hlt
push
test
and
insb
push
push
mov
in
mov
xchg
or
pop
xchg
fbstp
adc
leave
movsb
leave
idivl
push
jbe
movsl
sti
enter
pop
pop
jno
stc
jge
adc
int3
xor
xor
dec
cwtl
sahf
mov
call
lcall
jae
aaa
hlt
push
fcmovne
or
xchg
daa
and
adcl
mov
push
sub
cmp
lds
xchg
xchg
cmovge
cmp
jno
gs
push
xor
in
insb
pop
in
rorb
bound
pop
popa
or
add
aam
and
sub
std
les
sub
jo
fwait
pop
cmpsl
adc
cmp
popf
fwait
pop
sbb
xor
sub
sbb
in
inc
adc
mov
addb
scas
pop
rcrb
cmpsl
fwait
add
xor
push
adc
test
cli
nop
pop
enter
cmpsl
repz
inc
cld
sub
mov
call
shlb
stos
das
pusha
out
outsl
es
bound
cmp
push
push
xorl
fs
sbb
sbb
mov
mov
into
lcall
jl
ja
mov
bound
mov
test
jp
shll
ret
add
adc
icebp
lret
push
adcb
icebp
mov
scas
gs
mov
shl
popf
fsub
aaa
mov
xlat
cmp
mov
lea
sub
fs
es
movsb
icebp
lods
dec
hlt
insb
leave
push
enter
in
fsubrs
sbb
ret
adc
xor
out
pop
filds
mov
jo
jb
into
mull
cmp
push
jg
dec
cmpsb
call
shl
xor
mov
add
cmpsl
add
fnsave
lret
jmp
xchg
out
mov
xchg
adc
cmpsl
mov
lahf
lea
lods
je
ret
lret
cmc
icebp
maskmovq
mull
inc
push
push
ret
fwait
cltd
mov
aaa
icebp
cld
rcrl
fisttpll
and
sbb
adc
lods
inc
stos
xchg
sar
ss
push
and
cltd
pusha
sti
stc
push
repz
std
addr16
mov
sbb
mov
cmp
cmc
inc
outsl
mov
mov
outsb
insb
mov
out
das
das
xor
mov
nop
fnstcw
ja
mov
aas
jge
jb
daa
xchg
dec
fisubl
push
loop
filds
js
push
xchg
aad
mov
mov
push
inc
cmp
xor
mov
jbe
sub
in
sti
pusha
mov
lret
adc
imul
in
lret
inc
rolb
jbe
cmp
roll
les
push
outsb
add
cmp
cmp
sbb
fs
cmp
not
inc
loope
aad
outsl
rcll
imul
push
jmp
mov
cwtl
push
mov
sub
jbe
push
jmp
insb
cltd
stos
out
cmc
dec
sarb
in
cmp
xor
pop
jle
sbb
scas
in
sub
adc
and
adc
sbb
rcrl
loopne
or
divb
sti
push
xchg
mov
imulb
cli
mov
add
sub
and
popa
jmp
lret
sti
test
test
and
stos
jne
outsl
jecxz
repz
nop
xor
mov
int3
pop
mov
stos
fisubrl
sti
and
cmp
ret
cmpsb
or
mov
out
lock
xchg
xchg
ss
and
and
cmp
gs
sbb
jg
cmp
lahf
outsl
xor
insl
xor
test
or
push
fdivs
je
iret
inc
es
sub
inc
pop
jmp
cwtl
dec
sbb
lods
mov
mov
dec
pop
test
dec
fnstenv
cmpsb
ret
or
imul
mov
leave
aas
push
and
or
jbe
movsl
es
or
dec
ds
jl
test
stos
sub
hlt
lods
pop
das
or
mov
pushf
mull
fstpt
enter
adc
xor
ljmp
rep
add
in
test
sahf
mov
and
icebp
cmp
adc
dec
dec
loopne
into
sti
pop
imul
cmp
mov
rcl
in
push
test
pop
or
dec
js
nop
xor
imul
mov
insl
loope
push
push
and
push
push
mov
inc
leave
insl
push
fbld
int3
mov
and
jmp
xchg
push
into
daa
xchg
jno
inc
scas
aaa
mov
adc
jp
inc
adc
movsl
sub
push
jbe
ret
ret
mov
insl
mov
and
mov
push
jb
rolb
cmp
shll
negb
jg
std
neg
sbb
or
mov
loopne
push
xchg
test
lahf
orl
cmp
adc
leave
jnp
pop
or
dec
inc
jo
repnz
popa
pop
mov
mov
xor
mov
xchg
push
popa
adc
maskmovq
shrl
js
jle
push
mov
mov
outsl
ret
xor
jo
enter
dec
test
adc
pop
xchg
jb
or
mov
aad
inc
pop
lods
mov
mov
jmp
pop
movsb
cltd
xchg
mov
mov
shlb
cmp
jns
stc
mov
mov
addr16
daa
insb
js
jl
push
testl
xchg
scas
xchg
push
aad
out
adc
xor
cwtl
divb
push
jae
adc
scas
xorl
cs
out
test
ret
imul
arpl
mov
fucom
fimuls
cmp
mov
gs
push
cmp
fidivl
push
test
lret
mov
push
subl
jmp
mov
imul
mov
out
push
add
outsb
pop
cs
push
dec
fists
scas
sbb
or
lock
in
or
xchg
test
add
or
fldl
sub
jno
add
rol
shlb
popf
push
xor
es
ljmp
rorb
cld
insb
rorb
cmp
lcall
sbb
lret
mov
fisubrl
shrl
stos
dec
cmpl
mov
repz
jle
pop
mov
shr
popa
aas
fwait
push
hlt
rcrb
or
outsb
or
in
lods
call
out
sti
or
pushf
loopne
dec
dec
and
test
jnp
cmpsl
jno
arpl
imul
sbb
adc
cli
adc
fwait
loopne
or
test
inc
and
hlt
lcall
imul
aaa
lcall
mov
cmp
daa
cmovbe
movaps
iret
xor
push
out
insl
xchg
rol
out
mov
and
adc
jb
xor
xchg
xchg
dec
lds
sub
mov
sti
loop
arpl
or
aaa
orl
sub
push
jl
jl
or
xchg
push
mov
mov
adc
jmp
cmp
cmp
push
mov
mov
adc
push
mov
pop
test
stos
push
sbb
dec
mov
pop
into
jbe
lods
cmp
dec
or
or
cmpsb
add
pusha
fwait
pop
push
stos
shrl
push
inc
lret
xor
das
in
and
push
xor
sbb
std
xor
mov
lahf
cmp
and
outsl
sahf
lea
xchg
cmp
les
jge
lahf
rdmsr
dec
into
call
dec
cmp
jo
fidivrs
push
les
test
sarl
push
loop
mov
nop
pop
or
mov
inc
popa
out
inc
daa
or
pop
or
je
jge
push
stc
in
jge
add
out
stos
lret
loopne
add
mov
mov
lea
inc
adc
enter
push
mov
xor
jnp
push
movsl
je
arpl
cmp
loopne
dec
mov
ud0
inc
mov
or
adc
lcall
and
repz
outsb
adc
xchg
lock
stos
ret
sbb
mov
dec
roll
imul
dec
out
add
pop
mov
xchg
jecxz
push
pop
je
imulb
pop
data16
xor
add
jmp
std
and
mov
inc
les
sub
adc
mov
call
adc
ret
push
in
jecxz
xor
push
push
rcrb
movsb
stos
xchg
jecxz
xor
sbb
testl
add
or
call
mov
push
cmp
pop
out
adc
loop
or
loop
pop
and
mov
push
xchg
sub
shll
popa
shl
repnz
jmp
push
fxtract
cmp
aaa
xchg
pop
mov
pop
sub
cmp
mov
loope
jle
push
test
daa
int
dec
mov
cmp
dec
loope
and
insb
pop
pop
and
repnz
xchg
ss
fisttpll
iret
push
jae
xchg
repz
in
loopne
sub
ds
lret
or
cli
cmp
xchg
sar
add
hlt
inc
and
jg
outsl
cwtl
les
jne
cltd
les
xchg
sub
xchg
pop
xchg
cmp
lods
cmc
scas
jmp
addb
stos
pop
inc
inc
arpl
jmp
dec
stc
or
in
sbb
repz
jle
out
inc
int
fmuls
je
mov
add
repz
and
das
lods
adc
out
dec
das
jmp
xor
lock
ret
adcl
or
jmp
out
negl
dec
movlhps
into
scas
mov
test
popl
adc
xor
mov
cmp
jbe
push
lret
aam
sbb
hlt
into
jle
testl
stos
jno
and
and
pop
push
pop
adcb
add
mov
in
les
lcall
call
sbb
fdivrl
sub
or
cltd
shll
mov
inc
fsubr
jp
pop
adc
jb
jb
sbb
test
and
sbb
sbb
jb
jp
mov
fs
int
jmp
lret
sar
shlb
popf
mov
adcl
xor
inc
ja
lods
enter
mov
jge
test
xor
push
add
push
fimuls
ret
mov
movsb
cli
sar
xor
xchg
mov
cmp
dec
push
mov
adc
aas
out
jg
pop
insl
fstp
call
cmp
dec
insl
mov
sahf
insb
ss
or
jns
push
in
xor
shlb
dec
add
sbb
popa
cmp
call
stos
inc
lret
inc
and
mov
xchg
es
out
adc
jb
insb
adc
cmp
out
mov
cmp
jns
pop
jge
aaa
out
xchg
push
adc
mov
inc
xchg
popf
loopne
jbe
jg
xchg
and
sahf
cmpsl
mov
cmp
dec
cmp
fdivl
jns
sbb
jbe
jnp
sbb
rcll
jbe
rorl
mov
fldt
ja
fstl
mov
xor
shl
test
cld
aam
aad
rol
je
mulb
es
outsl
fimuls
inc
add
insl
addr16
xor
pop
xor
or
push
add
jns
ficoml
sbb
cmp
gs
pop
popf
add
or
mov
adc
mov
loopne
movsl
fcmovnu
mov
jno
into
sbb
xchg
and
mov
addr16
into
push
inc
fadds
or
dec
aad
cmp
mov
or
lcall
cmp
and
jecxz
xchg
sbb
jmp
lock
test
sub
pop
jp
dec
popa
fisttpl
mov
jp
inc
cmp
cmp
sub
ss
sbb
ret
mov
das
fists
sub
hlt
jl
rclb
movsb
aaa
xchg
imul
push
pop
loopne
mov
xor
mov
jno
lahf
ror
sbb
push
dec
mov
icebp
jae
into
lret
jnp
test
imul
mov
clc
stos
pop
rclb
movsb
sbb
cld
rorb
mov
jmp
mov
dec
cli
sub
pop
inc
adc
loop
jge
adc
push
cltd
mov
stos
aad
pop
hlt
mov
negl
sub
andl
fs
add
push
ficoms
fimull
jecxz
ss
mov
adc
aad
subl
ficomps
jns
add
ret
or
mov
push
out
sahf
outsl
push
push
and
push
mov
into
mov
xor
lcall
outsb
gs
sbb
stos
sub
pushf
mov
addr16
adc
shr
in
sbb
aam
cmp
mov
jnp
orb
adc
xor
jl
je
xchg
adc
sub
push
dec
jns
ret
in
jl
mov
lret
bts
push
inc
pop
dec
stos
mov
fldenv
in
jnp
sbb
mov
push
push
sub
and
pop
push
enter
jecxz
inc
lods
push
and
mov
popa
stos
test
add
int
push
mov
push
cmp
mov
rorb
ljmp
inc
aad
dec
scas
test
adc
mov
fldl
inc
cmp
mov
insl
fildll
mov
lret
mov
sahf
sarl
mov
cli
shll
mov
xor
loopne
xchg
pop
dec
xchg
mov
movsl
loopne
les
adc
push
stc
cmp
out
pop
push
push
mov
dec
les
sarl
popf
adc
lret
mov
movb
inc
push
and
inc
cwtl
fcomps
cltd
cmp
ret
rolb
push
das
or
in
cbtw
mov
adc
push
mov
or
adc
xlat
mov
push
mov
sahf
jge
imul
push
fiadds
jmp
push
xchg
bnd
or
arpl
gs
inc
dec
jb
js
je
or
push
lods
aaa
aam
sub
jl
add
xor
mov
ret
mov
add
pop
mov
pop
jns
roll
or
xchg
dec
cmp
js
xor
icebp
sub
in
fs
mov
mov
repz
mov
insl
subb
add
idivl
fcoml
dec
fimull
loopne
and
stc
xor
push
adc
dec
stc
xchg
adc
xchg
xchg
inc
fs
push
add
xchg
aam
lods
push
mov
das
mov
inc
mov
ss
jb
push
cmp
int
dec
add
bound
xor
call
sahf
insl
push
fldt
out
adc
sub
pop
xchg
lds
iret
lcall
into
loopne
push
mov
cli
sahf
daa
xchg
inc
push
rcll
or
push
xchg
pop
cmc
xlat
pushf
xchg
fisttps
jbe
cmp
lods
push
inc
xchg
loope
stc
or
mov
imul
loop
and
push
inc
mov
pop
hlt
adc
cmp
cmpsl
mov
leave
jmp
sbb
mov
mov
adcl
les
push
ror
movsl
shll
add
cmc
arpl
push
or
xor
mov
adc
addl
push
add
sti
pop
sti
gs
xchg
pop
xor
pop
or
jb
xor
jge
lcall
jb
aas
pop
cmp
insl
call
lds
xor
xchg
stc
fidivrs
add
mov
clc
mov
adc
push
fsubrp
adc
or
xor
fnsave
xchg
int3
mov
and
popf
xchg
pop
jae
mov
sahf
push
fstps
rolb
push
mov
aas
jo
lea
in
fdivl
jp
mov
lea
imul
lods
dec
or
cmp
out
cmpsl
gs
and
in
aad
add
cmp
lods
fists
mov
leave
push
xor
push
test
and
mov
jb
insb
xchg
adc
jmp
js
lea
dec
jg
sub
lahf
add
ret
repz
mov
test
iret
aad
jbe
adc
push
loope
pusha
sbb
sub
cmc
jg
int3
pusha
mov
cmpsb
mov
adc
jg
lret
int3
data16
outsb
add
test
mov
adc
dec
or
aaa
ret
gs
jbe
imul
jbe
adc
pop
rcrb
or
mov
sbb
xor
cmc
fiadds
mov
jl
mov
loop
mov
repz
loopne
add
push
adc
jo
mov
xor
mov
sub
outsl
pop
and
cmp
nop
int
sbb
popf
mov
testb
cmp
xor
loope
xorb
sub
cmp
leave
fldcw
test
scas
and
jmp
arpl
adc
sbb
adcb
fwait
in
cmp
clc
or
ss
test
jge
lods
scas
lcall
or
int
stos
or
inc
adc
xchg
cmp
negb
cmc
insl
add
mov
call
push
cmp
and
pop
xcrypt-ofb
cmpsl
stos
pusha
push
jne
xlat
ss
xchg
adc
and
jge
sub
xlat
push
mov
adc
mov
or
or
or
shr
fnstcw
pop
mov
lahf
rcrl
push
imul
movsl
xor
sub
cli
pop
or
je
jmp
in
inc
xchg
mov
mov
add
push
nop
sub
ret
pop
push
addr16
cmp
sbb
mov
mov
push
dec
les
fidivs
fildll
xchg
pop
aas
cmovne
add
adc
sti
int3
cmpl
mov
pop
pop
stos
call
popf
inc
aaa
fistps
jge
pusha
addl
sahf
sub
out
les
adc
je
inc
or
imul
xchg
and
inc
xchg
or
loopne
in
mov
orb
mov
daa
push
nop
fstl
dec
adc
xor
faddl
sbb
into
push
popa
mov
hlt
xchg
imul
aas
push
cmp
cmp
stc
call
das
jle
outsb
pop
fildl
test
fwait
leave
sub
movsl
daa
imul
sbb
push
shll
xchg
push
movsb
aad
cli
adc
sub
test
cltd
arpl
stos
fcompl
adcl
aaa
in
mov
sahf
lock
movsb
pop
test
or
mov
repnz
jl
imul
mov
cmp
mov
mov
inc
push
stc
xchg
inc
xchg
sub
fwait
push
clc
cmp
and
pop
test
sub
cld
mov
movsb
shrb
test
in
add
push
loope
imul
mov
test
stos
sub
xchg
test
xchg
cmpsb
arpl
stos
adc
int3
filds
int3
mov
push
xchg
mov
mov
gs
mov
rorb
cmpsb
cmpsl
sarb
adc
int
push
sub
repz
daa
rolb
adc
add
out
pop
and
sub
sahf
out
lds
jle
cmc
xor
and
cmpsb
xchg
aad
std
add
bnd
jp
cmp
mov
cmp
test
mov
cwtl
sbb
xlat
and
insl
pop
fcoml
out
mov
cmp
outsb
repz
adc
add
repnz
sub
aas
rcrl
fldenv
fwait
push
mov
and
cwtl
or
fwait
pop
lret
mov
sbb
fcompl
xchg
and
inc
negl
lds
retw
xlat
push
out
xor
aam
aaa
cli
cmp
and
jl
sahf
or
mov
popa
add
xor
fnstenv
jmp
inc
lea
add
stos
fisttpll
out
or
jne
enter
or
cwtl
vmptrld
cmp
sub
mov
pop
stos
sahf
and
jnp
sub
es
aaa
mov
inc
mov
filds
dec
sub
jne
mov
shll
ljmp
outsb
ret
dec
fst
test
add
fs
sbb
mov
mov
js
fsubl
mov
int3
subl
push
push
dec
mov
mov
ficoml
jae
daa
pop
fimull
mov
mov
es
mov
repnz
rcll
ljmp
cmpsb
xchg
dec
lock
fs
aad
imul
int
js
sub
push
data16
das
addb
fsts
lods
dec
test
int
mov
add
mov
mov
mov
shlb
lds
js
push
mov
dec
or
mov
in
test
fiaddl
mov
sbbb
pop
bound
mov
jle
aam
jmp
stc
arpl
mov
or
push
aam
int
clc
mov
cmp
lock
sub
or
jae
adc
adc
in
aam
mov
xor
out
insl
fadds
mov
adc
or
mov
loopne
outsl
xor
push
les
mov
shrb
jl
dec
in
jecxz
pop
icebp
hlt
adc
cmp
cltd
add
pop
push
rorl
mov
mov
popl
push
mov
mov
lea
xor
movsl
mov
push
mov
push
shl
ss
outsb
xor
dec
mov
jle
movsb
ljmp
pop
aam
push
push
arpl
addr16
cmp
mov
xchg
add
subl
jle
pop
sub
mov
push
int
test
das
push
and
sub
xchg
cmp
cmp
xchg
xor
and
fwait
cmp
mov
andl
push
ret
xchg
sbb
leave
push
in
popf
repnz
cld
xorl
scas
push
out
arpl
ljmp
jb
push
cmp
jo
mov
push
sarb
ss
ret
mov
fsubrs
mov
pop
movsl
or
divb
pop
mov
imul
mov
inc
stos
mov
iret
and
movsl
in
js
sbb
sub
mov
sti
jno
es
stos
adc
out
push
mov
mov
inc
or
out
je
mov
ss
movsl
pusha
lret
jmp
push
ds
movsb
mov
aas
and
stos
xchg
add
adc
xchg
push
adc
jno
jno
in
jns
fabs
jb
xchg
and
sahf
mov
mov
pop
out
add
inc
xor
jg
or
idivl
push
ds
xor
adc
pop
adc
push
call
loopne
pushf
cltd
dec
bound
cmp
enter
js
loop
adc
inc
push
imul
push
movsl
dec
mov
pop
push
mov
rcl
inc
pop
mov
cmc
inc
mov
xchg
push
stos
lods
mov
jne
jecxz
ja
pusha
and
in
sub
cltd
enter
xchg
sbb
pusha
popf
mov
js
inc
mov
pop
scas
cmc
gs
pop
leave
lret
jne
push
movl
stos
loop
aaa
cmp
fcmovu
push
sahf
ss
cmp
sub
ja
cld
mov
or
subl
lret
movsb
push
mov
mov
push
mov
cmpsb
cmp
in
xor
jle
out
lret
and
jl
aaa
rorl
loope
or
push
sahf
pushf
xor
lret
xchg
mov
adc
adc
or
cld
jo
popf
loopne
or
cmpsb
rcr
les
xchg
inc
fldcw
inc
fildll
pop
mov
sbb
inc
das
rcl
jb
inc
ds
dec
sbb
cwtl
mov
pop
mov
cmp
addr16
sub
or
loopne
test
push
and
mov
ss
leave
xchg
lds
cltd
mov
and
pop
or
test
std
mov
dec
dec
test
or
jle
and
je
add
shlb
imul
gs
test
les
into
xchg
pop
pop
or
iret
test
aad
xor
sbb
adc
push
rorl
mov
pusha
cs
and
jnp
or
xchg
shll
aas
or
in
jmp
addb
popf
lock
cmpsl
inc
xchg
fst
jns
mov
leave
cli
xorl
xchg
cltd
outsb
dec
xor
add
adc
push
hlt
sub
mov
and
adc
sub
cmp
lods
mov
pushl
in
dec
mov
pushf
push
mov
mov
frstor
nop
daa
arpl
aam
loop
gs
test
xchg
dec
sbb
mov
xor
or
xchg
mov
insb
pushf
js
rorb
mov
push
pop
les
aam
jp
mov
dec
notl
sub
cmpsb
push
lcall
pop
mov
outsb
sbb
adc
or
fisubrl
pusha
aas
jmp
lret
into
mov
repnz
mov
mov
inc
leave
xchg
xchg
into
pop
aaa
es
movsl
stc
lock
jmp
arpl
leave
shlb
scas
sbb
ja
jle
and
mov
int
jl
inc
lock
pusha
or
fbld
loope
mov
addl
mov
cwtl
lds
sub
loopne
and
xor
or
dec
ljmp
ljmp
dec
data16
jae
testb
add
jns
pusha
jne
daa
add
rcr
xor
and
dec
stos
stos
xor
sha1nexte
push
xor
mov
push
inc
mov
daa
xlat
sahf
mov
push
jbe
test
scas
cwtl
cmp
or
dec
repnz
mov
jo
insl
aaa
jb
cld
sbb
sbb
scas
imul
fucomi
in
mov
inc
xor
jbe
mov
ds
dec
mov
cmpsl
popf
xchg
notb
jno
pop
jp
xor
inc
jb,pt
enter
jnp
inc
add
jne
cmp
lods
sbb
sbb
gs
ljmp
adc
or
add
mov
push
dec
mov
dec
fmull
inc
and
leave
loopne
out
sub
imul
xchg
adc
dec
mov
mov
and
inc
cmp
push
addr16
mov
push
mov
add
and
inc
repz
rclb
inc
mov
xchg
int3
xor
xor
out
das
cli
xor
mov
sbb
mov
push
inc
push
xchg
jnp
lret
add
push
add
sub
jp
insb
in
cmpb
and
jecxz
cmpsb
fwait
jge
icebp
fstl
lcall
mov
pop
pop
pop
mov
pop
cmpsb
and
in
dec
inc
dec
or
mov
jne
movsb
shrl
and
dec
out
inc
mov
and
sbbb
ret
add
sar
pop
fsubs
push
jp
sub
iret
ret
loope
movsl
xchg
lea
jl
mov
enter
popf
lret
sti
mov
jmp
mov
hlt
jl
mov
mov
lahf
ret
pop
cmpsb
mov
cmp
inc
xchg
push
into
outsb
dec
add
inc
aaa
cmp
adcl
sub
stos
add
add
aad
mov
pushf
push
mov
add
in
filds
mov
fdivr
pop
test
out
test
test
mov
dec
enter
fidivs
loope
cwtl
xor
xchg
pop
pop
mov
pop
push
adc
into
dec
dec
movzbl
ret
rol
loop
out
and
cmp
xor
jnp
scas
sbb
out
addb
leave
dec
lcall
mov
loopne
add
decl
xchg
or
aaa
fsub
lret
pop
dec
scas
pop
jo
sub
push
cli
or
loope
jne
sbb
push
sbb
cli
sti
fs
jns
mov
fdivrl
mov
lock
inc
sub
xchg
fxch
bound
or
adc
push
and
lahf
mov
mov
pop
mov
xchg
loopne
and
movsb
in
mov
push
cmc
shll
fwait
scas
jnp
mov
adc
and
mov
xor
into
shl
xchg
fisubs
sbb
lahf
push
pop
xchg
ja
fbld
in
xchg
mov
adc
add
pop
xchg
cld
pushf
jbe
or
in
push
lret
dec
push
mov
arpl
push
add
mov
nop
jp
mov
jg
or
sti
lods
sbb
add
inc
js
dec
jo
fsqrt
insl
lods
pop
rcrb
inc
dec
pop
into
cmp
push
push
sbb
fxtract
sbb
ret
mov
pop
inc
or
sub
out
push
cmp
pop
cmpsl
mov
pop
mov
icebp
fsubl
inc
mov
faddl
and
push
and
push
fnstcw
add
mov
rcl
mov
lea
stos
scas
fimuls
lock
pop
mov
clc
fmul
cmp
mov
jo
hlt
mov
pop
xor
add
push
xor
ds
cli
rolb
jne
nop
out
ret
pop
iret
aas
loopne
out
cmp
mov
insl
jmp
inc
das
jo
push
xor
shrb
inc
pop
and
stc
cmpsb
es
push
out
xor
push
mov
jmp
sbbl
cli
stos
or
fsubl
xchg
jbe
in
js
sbbb
aaa
in
add
lods
push
popa
enter
xorb
in
int3
rolb
mov
mov
movsl
pushf
add
mov
fildll
les
je
dec
cmp
mov
testb
jp
shl
sub
xor
popf
or
out
outsb
sbb
addr16
inc
cld
push
jecxz
push
push
rorl
scas
mov
xor
sbb
loop
adc
mov
nop
push
push
ret
rcll
iret
sahf
icebp
fwait
scas
fld
popf
add
imul
inc
je
fcmovnu
pop
into
adc
dec
fwait
sub
jl
jno
hlt
sbb
loop
sbbb
dec
and
popf
aam
mov
xchg
imul
mov
sub
jge
pop
int3
sub
in
mov
pop
js
xchg
cld
cmp
test
mov
push
cltd
std
test
fs
and
inc
mov
adc
aaa
leave
adc
das
fwait
mov
out
out
adc
cmp
and
sahf
add
push
sahf
fninit
sbb
mov
ss
iret
mov
rcl
repnz
cmpsl
ss
lahf
or
popa
mov
cltd
mov
mov
addr16
lods
jp
enter
das
lods
add
int3
movsl
pop
mov
cwtl
repnz
sub
sub
cmp
cmp
cmp
xchg
push
mov
icebp
xchg
in
in
popf
sbb
scas
mov
arpl
push
lret
add
mov
xor
out
inc
ret
push
mov
push
dec
cmp
nop
cwtl
sub
jp
flds
mov
fistpll
push
push
cmpsb
dec
lret
jmp
fsubrs
icebp
cmp
enter
cmpsb
and
mov
mov
les
jecxz
jp
insl
in
and
sbb
inc
push
push
jp
adc
pop
push
stos
out
cmp
sti
xor
testl
aad
cli
mov
pop
fwait
cmp
sbb
add
adc
inc
ja
icebp
cli
out
inc
jl
xor
push
lods
loop
sub
cmc
jle
outsl
xor
jmp
inc
cmp
test
sbb
jo
xchg
dec
shr
aam
jp
jb
add
pop
leave
lods
mov
call
jns
xor
push
fnstenv
fidivl
out
ret
inc
push
jnp
mov
sbb
pop
jae
pop
mov
dec
dec
repnz
sbb
sub
jo
xor
adc
dec
mov
cltd
pop
or
mov
cmp
scas
jo
xchg
fstl
sub
les
rcr
xchg
jl,pn
cmp
sbb
cmp
and
pop
stos
fucomip
scas
rorb
or
xor
out
scas
mov
xchg
data16
in
mov
dec
dec
sbbb
lcall
sahf
subl
mov
mov
fmull
popf
xchg
je
lock
stc
movsb
pop
xor
in
xor
or
adc
aad
pop
lea
cmc
fbld
int
lds
andl
mov
ds
imul
sub
sahf
or
pop
clc
hlt
sub
push
xchg
or
dec
sub
sub
and
loopne
out
lods
inc
cs
dec
adc
loop
fidivrs
rorl
fbstp
cmpl
lahf
or
into
add
rcl
imul
or
hlt
test
into
clc
cmp
cmp
dec
or
adc
mov
jae
ret
add
pop
clc
inc
xor
test
mov
flds
pop
add
add
int3
js
mov
rcl
dec
cmc
inc
enter
fsubl
ret
push
jmp
repnz
cmp
or
mov
push
mov
loope
mov
mov
bound
mov
or
mov
and
and
imul
push
jp
lods
pusha
fdiv
cmp
lret
xchg
bswap
std
push
inc
mov
push
xor
shrb
sbb
loop
inc
in
addr16
lret
loope
or
lock
push
sti
add
jmp
and
shll
dec
in
enter
pushl
pop
inc
js
inc
pop
and
xor
sbb
out
dec
inc
daa
jb
mov
mov
fisttpll
mov
pop
sub
pop
push
add
add
into
in
inc
or
jge
push
push
pop
std
or
ja
lods
mov
repz
inc
insl
pop
xor
add
mov
int3
loopne
sbb
sbb
fsubl
rol
dec
and
imul
mov
gs
fstpt
cmp
test
mov
mov
dec
inc
xor
adc
and
imul
cmp
lret
arpl
imul
jle
sbb
xchg
mov
movsb
pop
ror
pop
fs
out
lods
mov
pop
aas
cmpsb
cmp
stos
xor
sti
xor
or
add
xchg
inc
push
adc
movsl
test
and
and
mov
push
daa
push
ret
xchg
xor
or
mov
inc
jmp
push
push
repz
xchg
add
mov
inc
adc
popa
dec
dec
andl
in
or
imul
icebp
sub
push
ds
sarl
xor
cli
pop
inc
dec
jl
mov
out
pusha
in
in
jl
cmp
divb
jge
addb
rcrl
mov
jp
pushf
inc
or
and
pop
sbb
in
test
cmp
pop
movb
shr
ds
dec
into
dec
push
cwtl
ret
andb
les
mov
pop
push
add
push
nop
mov
test
leave
jle
inc
leave
jns
sahf
lcall
int3
mov
iret
pop
gs
xor
jae
push
add
xchg
add
test
arpl
roll
jne
inc
mov
inc
xor
in
mov
pop
in
jp
imul
cmp
mov
push
ja
xchg
rclb
mov
mov
jo
jno
sti
fcom
xor
jp
gs
lock
xorb
mov
cltd
jmp
mov
mov
xchg
or
enter
mov
mov
lds
sub
leave
mov
inc
repnz
dec
imul
gs
gs
insl
out
outsb
mov
into
dec
add
push
add
sub
out
mov
add
aas
ret
pop
pop
shll
mov
sbb
mov
xchg
jg
cltd
cmp
jmp
out
or
and
inc
add
lock
inc
outsb
mov
daa
in
leave
cli
out
mov
push
mov
lahf
fsubr
push
popa
in
pop
sarb
xlat
mov
or
out
out
les
xchg
ja
vpaddw
push
enter
mov
in
xchg
push
fiadds
rclb
es
inc
and
jno
pop
js
pop
mov
or
add
mov
mov
mov
jns
fs
notb
push
idivb
sahf
pop
mov
lahf
add
jle
mov
repz
in
add
add
ret
int3
pop
add
jmp
ret
pop
add
pop
adc
popa
loop
inc
pop
cmpsb
loop
lret
cld
movsl
jl
les
aad
movsl
fdiv
outsb
jl
pop
fnstenv
and
adc
mov
shrb
scas
ds
inc
cld
sbb
cmpsb
push
add
cmp
adc
sub
dec
insb
fistl
mov
inc
fs
lcall
in
jb
sahf
addb
movsl
gs
popf
inc
lds
cmp
insl
xchg
jge
sbb
pop
aaa
mov
call
mov
push
leave
cmpsl
hlt
lods
pusha
jno
mov
mov
loope
mov
les
dec
das
ss
ds
adc
cmp
cmp
mov
pop
hlt
adc
sub
lahf
sbb
dec
andb
fists
cmpsl
mov
sti
sahf
mov
daa
imul
cmp
fsubrl
push
sbb
push
xchg
jge
lods
and
mov
sub
ds
pop
lahf
cmpsb
mov
push
popf
mov
sub
mov
out
pop
dec
lcall
and
sbb
cmpsb
fwait
adc
es
mov
popf
mov
jl
add
std
repz
imul
cmp
jmp
cs
push
add
inc
pop
xchg
shlb
hlt
pop
cmpsb
jmp
push
js
push
rcpps
or
pushf
inc
cmp
mov
std
in
xor
or
cmpb
jle
loope
cmp
sub
jns
jle
fadd
adc
cmpsl
fsubr
inc
mov
xorl
and
xchg
xchg
mov
jns
hlt
xor
xor
jecxz
jge
out
inc
mov
out
mov
xchg
push
pmuludq
rcrl
jg
fstpt
jns
aaa
mov
mov
dec
mov
pop
mov
xor
dec
dec
jb
dec
adc
mov
jge
mov
das
shll
or
mov
mov
iret
sarl
or
icebp
mov
xlat
js
inc
sti
add
adc
dec
mov
dec
push
pop
xor
sbb
mov
mov
imul
jbe
out
hlt
fcoms
sti
xor
rol
mov
ss
cltd
fldl
pushf
mov
jne
inc
std
push
pushf
outsl
push
scas
push
cmp
data16
into
pop
mov
int
lahf
stc
add
ror
int
outsb
mov
push
call
jp
sar
sub
adc
xchg
inc
mov
arpl
mov
iret
mov
repz
dec
jb
or
int
and
mov
aaa
cs
pop
cmpsb
sti
roll
ss
inc
inc
pop
hlt
scas
jle
pushl
add
jbe
neg
sub
push
int
daa
lahf
xor
jne
popf
cs
mov
or
shl
lcall
mov
test
lcall
xchg
and
and
popf
aas
sub
sahf
jbe
lock
mov
add
movsb
lahf
add
movsb
mov
and
cltd
addr16
mov
sbb
out
inc
and
pop
jne
mov
jp
lret
mov
or
lahf
or
jno
mov
lods
jl
ret
inc
movsl
cmp
enter
leave
pushf
std
insb
mov
data16
rcrl
pop
inc
and
cmc
into
cmp
ret
enter
sbb
push
or
in
add
inc
mov
loope
ret
in
shll
lds
fimuls
sti
push
pop
loope
cmc
dec
fcomps
push
pop
mov
enter
insl
jns
lods
add
stos
decb
cs
cli
add
pop
stos
mov
pop
mov
inc
sub
lret
out
movsb
in
jbe
aaa
cwtl
mov
mov
mov
clc
jl
cmpsb
js
jecxz
jno
xchg
pop
and
scas
mov
clc
nop
mov
loope
or
or
pop
test
sbb
jge
bound
imul
mov
cmpsb
sarb
xchg
push
xchg
lea
out
adc
ficoml
and
cltd
in
loop
gs
dec
push
pop
cmpsb
or
shll
shll
mov
adc
push
ds
xor
rorb
sub
test
push
adc
mov
shl
testl
lret
out
nopl
cmp
add
ds
push
mov
mov
cwtl
leave
jp
in
sbb
loope
orl
cmpl
or
and
outsb
daa
bound
or
dec
push
mov
test
mov
push
testw
push
fcomps
xlat
xchg
sar
jno
aam
into
xchg
ds
or
notl
lea
push
andb
add
aam
sbb
loopne
lret
push
jae
pop
xchg
cmp
xchg
in
fwait
push
jecxz
mov
cmp
and
loopne
mov
aaa
mov
mov
iret
inc
adc
mov
mov
shlb
loope
and
push
adc
gs
jbe
sbb
sbb
dec
dec
push
mov
das
adc
xchg
adcb
mov
lahf
jbe
cmc
xchg
adc
ret
xchg
adcl
jecxz
ss
sbb
pusha
in
mov
arpl
les
pusha
pop
outsb
ret
jl
adc
mov
rorb
fst
inc
das
xor
adc
leave
pop
dec
repnz
jle
test
xchg
rcrl
push
shll
aaa
or
in
pusha
cs
xchg
jb
add
mov
xchg
movsl
jnp
inc
and
loop
xchg
icebp
and
lods
pop
xchg
cmpsb
sub
lret
inc
js
jnp
xchg
das
adc
test
xor
nop
test
cli
pop
pop
pop
sbb
repnz
jmp
mov
adc
in
negl
loop
mov
rorb
dec
and
push
jge
insb
les
fs
and
fistpl
sbb
adc
movsl
ljmp
mov
jnp
aad
add
in
addl
mov
pop
mov
and
test
loop
je
repnz
scas
mul
test
lcall
add
lcall
inc
lahf
lahf
lahf
pop
rorb
gs
push
adc
pop
xchg
adc
adc
sub
sbb
xchg
jb
xchg
ds
pop
sbb
pop
fcomip
loop
in
pop
jl
jmp
das
scas
cs
call
and
cmp
into
mov
sub
enter
clc
inc
addr16
pop
mov
aas
out
jp
subl
sbb
js
or
mov
shlb
jl
das
idivb
out
push
dec
push
jp
sarl
pop
dec
outsl
jg
add
imulb
cmp
aaa
mov
pop
addr16
iret
imull
cmp
mov
in
sbb
arpl
jp
adc
push
inc
push
test
xor
fistpll
cmpsl
jbe
inc
insl
shl
mov
divl
fadds
add
stc
mov
andl
test
dec
add
imul
or
jge
sbb
fs
fildl
dec
incl
iret
xchg
mov
xchg
test
inc
pop
std
add
push
inc
into
stos
dec
mov
imul
insl
shlb
in
sbb
loope
xchg
xchg
and
insl
insb
loope
das
cli
out
jbe
lock
cmpsb
ret
mov
xor
sub
lret
pop
cmp
outsb
mov
js
andl
add
cmp
int3
insl
std
mov
fsubs
push
push
outsb
imul
and
xchg
sub
ffreep
pop
pusha
cmpb
cli
mov
movsl
cmpsb
or
arpl
xchg
das
xchg
dec
les
repnz
cmc
mov
ljmp
and
rcrl
cmc
fwait
lahf
jmp
leave
test
hlt
mov
stc
sti
mov
repnz
aad
xchg
push
xchg
push
jmp
sbb
ja
sub
add
xchg
pop
pop
mov
cmp
push
in
mov
outsb
xchg
sbb
jle
cmp
sbbb
cwtl
mov
mov
sub
popf
pop
pop
pop
or
hlt
stc
dec
sbb
outsb
aas
out
or
dec
cmp
cmpsb
sub
fsubs
scas
scas
mov
dec
xchg
sub
aaa
fcoml
jge
dec
mov
mov
movsb
mov
mov
dec
mov
push
xlat
sbb
sub
jmp
xchg
out
mov
adcb
punpcklwd
hlt
sub
lock
mov
cmpsl
scas
roll
xchg
scas
or
cmc
pop
insb
fldenv
xchg
in
xchg
mov
mov
lds
lret
leave
in
sti
pop
mov
test
mov
xchg
mov
push
aas
es
test
repz
push
cmpsb
dec
addr16
es
fneni(8087
push
sub
out
ds
pushf
mov
xchg
mov
int3
fiaddl
adc
test
imul
inc
dec
adc
out
leave
dec
add
lock
imul
test
jmp
outsb
jecxz
lods
fcoml
int
sbb
popf
pusha
addr16
pushf
push
sbb
out
mov
andb
mov
jle
and
jecxz
inc
jp
adc
pop
push
jle
int3
iret
aam
or
mov
call
dec
cmp
out
dec
fdivl
outsb
or
arpl
add
sbb
add
aas
jp
or
mov
shrb
cmc
fists
arpl
push
jnp
jo
lcall
or
pop
sahf
xlat
ficompl
adc
dec
icebp
cmp
jae
mov
lock
mov
outsl
cmpsl
jbe
cli
lcall
inc
mov
in
lea
insb
popa
fsts
push
mov
sahf
lcall
xlat
jg
icebp
stos
cmp
mov
test
and
ljmp
fildl
jmp
int3
test
inc
lods
loope
addr16
sub
lods
sub
push
fsubs
mov
cmp
daa
cli
pushf
in
mov
and
push
cmp
push
add
xchg
icebp
loope
jmp
icebp
sbb
test
pop
jg
xor
inc
adc
mov
fsubrp
out
out
adcl
lea
std
inc
xchg
int
enter
jmp
insb
push
imul
cld
xor
dec
popa
popa
push
sub
xor
mov
ljmp
pop
xor
repz
outsl
leave
jmp
cmp
es
cmp
sbb
xor
rolb
jp
popf
repnz
cltd
sqrtps
bound
and
mov
mov
aas
cld
repnz
inc
push
gs
cmc
dec
xor
call
scas
stos
adc
push
test
insb
std
cmpsl
sarb
jo
dec
lahf
test
mov
stos
rcll
sbb
movsb
in
add
xchg
or
cmp
scas
int3
dec
ja
cmpsb
jo
loopne
dec
mov
push
push
jl
push
stos
and
enter
dec
sbb
add
mov
call
mov
pop
adc
lods
test
dec
jp
stos
frstor
inc
mov
lds
pop
inc
incl
jmp
enter
rorl
loope
pop
lods
xchg
dec
pop
aas
decb
mov
jle
jg
mov
or
mov
cmc
fxch
dec
xor
or
std
adc
jo
add
xchg
lcall
test
push
and
or
rorb
lcall
loop
pusha
xchg
inc
lcall
ffreep
pushf
pop
pop
lds
jns
and
in
insl
iret
pusha
push
addr16
mov
shlb
xchg
mov
je
gs
iret
jg
dec
jle
pop
mov
adc
ret
xchg
andb
clc
push
push
int
jle
out
inc
jno
je
mov
mov
clc
rsm
ss
shll
jnp
jmp
imul
into
cmpsb
ja
push
lret
sbbl
xchg
mov
lods
adc
ja
cs
inc
loopne
lcall
adc
push
dec
daa
xchg
adc
sti
movsl
and
xchg
popf
jg
ja
jns
push
jns
shlb
sarb
push
jns
in
mov
stos
test
or
lret
pop
inc
adc
enter
dec
inc
std
cmpsb
addr16
cmp
lahf
cli
add
jo
cmp
push
pushl
jb
cltd
out
imul
dec
out
add
int3
shl
push
xor
in
lods
stos
std
mov
pop
test
cmp
clc
cmp
inc
and
xchg
imul
pop
jl
jecxz
cmp
arpl
dec
rclb
bound
fs
jno
jo
mov
xchg
mov
or
in
adc
aad
dec
xchg
cmp
add
add
xchg
es
sbb
psllq
add
inc
add
adc
gs
sahf
dec
clc
cli
subl
lahf
out
out
int
pop
pusha
outsb
cmpsl
pop
mov
push
les
adc
loope
push
sbb
dec
dec
or
xor
xchg
mov
ja
mov
jo
in
mov
sbb
pop
bound
mov
sahf
xor
fstpl
es
imul
pop
jo
xor
repz
sub
lds
lret
mov
scas
pop
mov
push
pusha
sbb
popa
jmp
jae
enter
jae
cmp
aaa
cmp
sbb
jns
bound
or
and
cmp
cmp
push
jp
xor
pop
push
cmp
sub
adc
mov
jnp
adc
ds
xchg
sbb
stos
inc
sub
inc
clc
add
pop
mov
stos
add
dec
imul
cld
xchg
cs
sub
insl
rorb
jle
push
pop
push
leave
add
inc
pop
add
jnp
cmpsl
jb
addr16
inc
fs
aas
lods
sub
ror
xor
lea
rclb
and
dec
pop
cltd
push
fstpt
inc
mov
xchg
sub
push
and
repnz
lock
lea
cmpsl
dec
jg
shll
out
jle
rorl
mov
pop
push
outsl
push
inc
add
in
scas
sub
push
into
cmp
movsl
stos
xchg
test
leave
jecxz
sub
iret
jns
jge
xchg
test
cli
test
stos
out
repz
xor
lds
ja
inc
lret
shlb
add
pop
movsb
cmpsl
ror
dec
push
ficompl
adc
push
lds
dec
inc
rcrl
xchg
xchg
mov
cmp
shr
mov
pop
popf
sbb
fsubl
mov
or
inc
push
cltd
fs
push
pop
cs
ds
pop
xor
sbb
jmp
scas
testb
mov
push
xchg
enter
add
inc
rorl
mov
loop
and
addr16
out
add
mov
and
shrb
sub
insl
mov
imul
mov
scas
or
je
lods
lea
jbe
pop
and
mov
imul
ss
and
dec
pop
outsl
in
hlt
mov
push
and
mov
aad
jno
push
mov
dec
mov
movsl
sbb
mov
pop
mov
imulb
cld
imul
in
subb
adc
int3
mov
cltd
es
insl
xlat
mov
std
movsb
add
mov
dec
mov
jbe
inc
mov
loopne
dec
and
aaa
or
aaa
sbb
push
mov
add
mov
outsl
int
or
lods
daa
out
lds
xchg
in
dec
int
xlat
sub
adc
ds
pop
mov
leave
movsl
xchg
sbb
imul
adc
push
popf
jmp
sub
xchg
data16
lods
cmc
inc
dec
bound
inc
loop
icebp
cltd
inc
jecxz
or
iret
push
sbb
inc
testb
es
jnp
aas
jp
push
adc
sub
int3
xor
cmpsl
jbe
addr16
aaa
cmp
fcmovnbe
call
jg
pop
mov
lods
movsl
or
cmp
dec
push
pop
add
mov
outsb
mov
fs
push
lahf
std
mov
sbb
xor
cmp
repz
in
add
xchg
inc
or
adc
mov
xchg
xor
insl
in
fwait
ret
mov
mov
testl
add
jecxz
cli
mov
test
bound
inc
push
lock
arpl
jecxz
add
or
sar
mov
push
inc
daa
mov
mov
sbb
push
test
aaa
adc
sbb
ret
mov
and
hlt
out
fs
inc
outsb
sbb
out
cwtl
sub
xor
add
repz
xor
rorb
sub
in
rclb
inc
sti
bound
jmp
adc
jno
movsb
decl
aam
push
add
movsb
xchg
push
andl
nop
sbb
test
outsb
sbbb
bound
lods
jb
les
sub
or
push
xlat
loop
ljmp
mov
inc
outsl
movsl
lcall
sbb
sub
push
mov
sbb
pop
icebp
vcmpss
sahf
sub
sub
jne
xchg
xchg
jb
test
and
xor
jbe
sbb
cltd
cmp
out
sbb
mov
or
fldl
dec
jg
loopne
jns
jno
imul
pop
push
xchg
xor
adc
inc
jbe
xchg
inc
xor
mov
roll
sbb
jg
pop
jmp
sbb
mov
xor
xchg
popa
ret
lcall
xor
cmp
test
stc
out
in
add
cli
movsl
shlb
mov
mov
mov
xor
xor
xor
fiadds
add
test
out
out
dec
mov
les
jg
mov
xor
xchg
mov
je
sti
shlb
clc
mov
and
inc
add
mov
inc
lahf
fs
mov
mov
out
mov
in
int
dec
add
pop
popa
cmpl
xlat
adc
orl
daa
pop
cmp
out
add
lods
adc
sub
mov
adc
insl
pop
add
sub
mov
dec
jl
cltd
adc
sarb
psrlq
leave
fisttps
mov
xchg
bound
push
test
push
mov
dec
inc
aam
ja
mov
sti
int
fnstcw
cltd
adc
cmc
das
push
std
mov
mov
ret
int
mov
push
xchg
bound
test
xchg
inc
mov
imul
bound
jmp
ret
add
insl
mov
jge
xchg
test
fs
testb
in
pushf
add
shrb
insl
xchg
mov
add
pop
xchg
mov
mov
mov
pop
lds
repnz
js
mov
or
mov
cmp
inc
inc
jp
adc
rclb
or
je
sub
fwait
cli
inc
push
add
inc
sub
cltd
es
movsb
loope
lcall
push
rorl
and
in
push
jg
sbb
mull
test
popf
xchg
les
or
in
mov
mov
mov
mov
and
fnstsw
out
pavgb
ret
cld
pop
jge
mov
inc
push
aam
or
dec
in
add
jg
xor
pop
bound
mov
sbb
or
mov
std
jge
pop
ljmp
push
insl
sbb
add
jae
jle
jo
mov
into
data16
xor
mov
xchg
rorb
mov
mov
movb
imul
lret
imul
sub
aad
repnz
add
inc
rol
mov
dec
sahf
je
leave
arpl
xor
mov
in
insl
jmp
push
icebp
fisttps
aad
sub
std
mov
hlt
xchg
sbb
nop
or
sbbl
shll
icebp
mov
sti
dec
jecxz,pt
cwtl
pop
mov
sbb
add
aas
and
inc
push
js
or
pop
loop
iret
sub
lahf
sbb
sarb
sbb
xchg
or
pop
ljmp
xchg
hlt
les
pop
es
les
enter
mov
dec
mov
call
repz
mov
lret
inc
pop
mov
xchg
xor
mulb
adc
je
sti
adc
mov
jl
nop
mov
decb
dec
test
lds
mov
mov
push
add
les
dec
mov
push
mov
scas
jb
fs
leave
icebp
lahf
adc
test
scas
and
cmp
testl
incb
xor
sub
loop
aas
lret
nop
xor
test
xchg
sub
push
ret
enter
shrl
inc
insl
test
sbb
out
xchg
sbb
dec
enter
clc
je
or
flds
lcall
lcall
cli
ret
xor
bound
lds
or
fwait
xchg
ret
aas
dec
xchg
sub
out
jl
das
aas
and
push
inc
shrb
add
xor
lods
mov
jg
push
jg
adc
or
pushf
pop
sbb
lret
adc
shlb
inc
inc
mov
lea
imul
adc
xchg
std
pop
mov
shlb
movsl
in
mov
and
pushf
and
pop
inc
cmp
fiaddl
xchg
fbstp
cltd
movsb
gs
jo
into
pop
les
mov
and
hlt
adc
shll
outsl
jle
adc
pop
add
or
and
or
std
les
jp
pop
push
pop
sub
jecxz
scas
xor
push
mov
sbb
mov
and
add
out
adc
mov
jle
pop
xor
cli
xchg
ret
add
mov
adc
arpl
sbbl
sub
add
mov
or
lea
aam
mov
xor
popa
addr16
cltd
dec
int
xor
add
and
out
dec
dec
pushf
stos
add
test
sub
adc
cmc
sub
popa
ret
lds
xchg
xchg
xor
imul
dec
jge
stc
add
xor
cmp
cmp
rcl
jmp
movsl
lods
dec
cmpsb
sahf
xor
div
pop
fidivrl
scas
scas
jae
in
jge
inc
push
xor
dec
pop
and
nop
movsb
mov
mov
sbb
aad
xor
addr16
mov
ja
lret
sti
stc
mov
mov
iret
dec
int3
lods
shll
jne
or
lods
jns
mov
dec
push
push
add
out
mov
mov
outsb
int
mov
pusha
xor
outsl
popf
in
dec
lcall
and
jne
push
test
pop
jo
sub
and
bnd
push
cmp
repnz
xor
xchg
fcoms
or
mov
aam
dec
cmpsl
leave
popf
cltd
cmpsl
and
jg
inc
push
cmp
mov
fwait
xlat
mov
rcrl
lret
sbb
dec
dec
mov
xor
dec
mov
xchg
add
test
mov
outsl
and
out
movsb
adc
in
push
push
and
mov
xchg
mov
mov
xchg
adc
jle
mov
mov
adc
cmc
sbb
idivb
sbb
pop
test
and
sahf
lods
stc
in
das
mov
leave
outsl
decl
sub
outsb
jmp
dec
jae
aad
lock
sbb
push
mov
jl
les
out
loop
in
sbb
or
rorb
inc
sahf
sbb
in
mov
sbb
ds
fldenv
sub
js
cmp
sub
imul
and
sti
or
or
add
int3
hlt
leave
sub
add
bound
xchg
mov
rol
js
pop
rcll
dec
aam
mov
lock
mov
aad
push
mov
push
imulb
outsl
and
xchg
add
nop
scas
sahf
bound
mov
jns
test
sub
pop
imul
call
jecxz
cmp
jae
inc
cvtdq2ps
js
lahf
adc
ja
jg
or
mov
outsb
pushf
xchg
outsb
inc
fucom
xchg
pop
cltd
aaa
mov
loop
fs
fdivr
mov
dec
lret
jge
in
jne
push
jl
pop
loopne
addr16
xchg
clc
adc
cmp
add
adc
cmp
jl
or
push
rorl
mov
cmp
ja
jle
repnz
xchg
arpl
jmp
shll
loope
out
rol
jb
xchg
cwtl
sbb
xor
and
inc
push
mov
ds
je
jp
xor
and
adc
adc
inc
test
push
popa
cmp
lock
mov
mov
pop
addr16
cwtl
xor
data16
int3
and
insb
lock
adc
xor
loop
push
or
push
and
enter
sub
out
xor
push
inc
adc
in
jbe
ja
xor
lahf
subl
xor
or
inc
iret
pusha
dec
dec
mov
push
fstpl
mov
shl
shl
jns
xchg
fldl
sbb
ficoms
jl
inc
fs
fmul
cli
test
cmp
lahf
sbb
movsb
daa
xor
popf
dec
mov
or
mov
lods
add
and
pop
outsl
xchg
inc
test
gs
push
mov
push
dec
rolb
sub
pop
faddp
sbb
cmp
mov
movsl
sub
mov
js
jnp
fnsave
es
aaa
or
adcb
cmpsl
pop
pop
xchg
aam
call
push
ds
ljmp
std
or
dec
push
es
call
mov
mov
push
mov
mov
sub
lods
push
sbb
test
and
fldenv
cmp
mov
clc
adc
sahf
xor
xchg
xor
std
addb
enter
addr16
and
shlb
xor
ret
nop
adc
pop
adc
loope
leave
sbb
and
test
sarl
jno
push
adc
jmp
jae
lret
mov
cmp
and
cmp
or
mov
xchg
sbb
push
sub
or
iret
adc
ret
inc
or
ss
fwait
mov
movsb
mov
push
jo
lcall
dec
jge
fsqrt
sahf
ds
jae
mov
add
mov
mov
mov
aaa
jbe
jp
jb
dec
rorl
pop
inc
ss
sahf
mov
dec
xchg
or
cmp
sbb
fcoms
xchg
in
subb
cmpb
or
stos
lcall
mov
loope
push
inc
xchg
inc
sub
repnz
ds
inc
dec
or
into
test
sub
pop
adc
fwait
icebp
sbb
mov
dec
pop
int3
or
xorb
test
mov
pop
ret
adc
bound
xorl
xor
mov
cmp
sbb
mov
ror
gs
mov
outsb
add
mull
xchg
jo
or
sahf
sbb
inc
movsl
push
sbb
cwtl
out
addr16
sub
clc
sub
xchg
pop
mov
pop
aas
push
dec
out
test
pop
testb
aad
or
out
popf
sarl
jl
pop
cld
xchg
dec
xchg
test
and
adcl
dec
nop
mov
fsts
pop
aaa
je
das
iret
add
stos
mov
pushf
xlat
sbb
and
mov
ret
jg
mov
ret
pop
add
mov
xor
cmp
lock
clc
popf
dec
inc
pop
arpl
xchg
pop
icebp
jns
insb
pop
sar
test
jge
push
es
push
xor
inc
cmp
push
xchg
inc
testl
popa
push
xor
int3
jns
test
mov
adcb
mov
loope
sbb
mov
mov
test
jnp
pop
ficoml
or
stos
dec
cltd
mov
mov
int3
js
push
in
xorl
pop
or
jae,pt
daa
aad
stc
and
cli
sub
dec
daa
mov
insb
push
outsb
shlb
into
arpl
pop
outsl
or
lahf
xor
aas
sub
push
lock
cmp
dec
mov
inc
inc
stos
and
mov
add
je
lret
add
or
and
fidivl
nop
out
cmp
push
xor
push
cli
mov
orb
int
mov
cmp
shll
adc
movsl
aam
pop
lahf
in
test
add
xchg
adc
mov
in
mov
xor
nop
jbe
cmpsb
push
imul
lret
sub
bound
push
dec
gs
lret
rorb
stc
pop
sbb
adc
or
xchg
push
movaps
and
push
subb
sahf
sbb
xor
xorl
mov
roll
hlt
sti
mov
xchg
rorb
imul
adc
jns
push
inc
add
test
fsub
sub
xchg
shlb
push
mov
loop
pusha
mov
pusha
aad
enter
jbe
cwtl
jmp
lea
ss
push
subl
sbb
jp
pop
jb
icebp
stc
je
dec
inc
fwait
and
loopne
aaa
iret
jecxz
sbbb
cmc
arpl
andl
dec
xor
lcall
cmpsb
lock
mov
sbb
sub
xchg
pusha
dec
xor
and
mov
dec
sub
jp
mov
ret
loope
jae
insl
mull
cmp
test
adc
adc
push
and
leave
push
fldt
hlt
lea
fs
rol
ret
xchg
sbb
xlat
popf
and
mov
insb
push
popa
aas
pusha
testl
cmp
sub
aaa
pop
and
jo
lock
int
loop
fwait
sub
jle
int3
mov
sub
in
sub
cmp
sbb
adc
cltd
aas
sub
jmp
out
xor
lods
add
jno
pop
mov
pop
jnp
out
jns
cmpsl
adc
iret
cmpsl
fistl
xchg
popa
stos
mov
dec
adc
mov
push
addl
dec
jl
sbb
out
mov
ljmpw
xchg
push
or
or
dec
inc
push
pop
loope
push
mov
jmp
xor
sbb
push
popl
repz
jns
aas
ffree
push
adc
aas
mov
mov
ret
jb
pop
push
xchg
mov
mov
sar
outsl
xchg
push
ret
in
pop
xchg
ss
out
cmc
jb
lret
pop
sbb
cmpsl
adc
or
xlat
mov
lret
or
sub
test
and
cmp
dec
inc
and
pusha
or
or
daa
xchg
pop
scas
ucomiss
popa
cltd
cmp
cmp
add
push
popa
repz
int3
insb
insb
ja
loopne
inc
mov
and
bound
mov
aad
fists
lods
sbb
jl
sbb
in
or
hlt
push
or
pusha
fstl
mov
aam
lahf
loop
mov
jb
sahf
lea
stos
and
enter
stc
bound
xlat
stos
mov
test
add
cmpsb
add
pop
xchg
imul
lret
adc
sub
fisubrl
add
dec
dec
jg
ss
in
add
jns
mov
mov
mov
popa
lods
mov
add
out
mov
dec
bswap
push
fsubrs
mov
mov
sbb
jecxz
jbe
ficomps
xchg
sbb
sub
mov
and
mov
or
pushf
jl
loop
mov
sbb
lcall
cmp
jno
and
jge
xchg
mov
inc
or
rorl
jns
sarl
insb
dec
mov
push
and
in
jb
xor
mov
push
loop
add
jp
iret
xor
xchg
and
pushf
imul
jge
shrb
push
out
xor
sarl
and
cmp
aaa
xchg
in
in
lods
test
outsb
mov
ret
fmull
or
mov
mov
dec
mov
out
or
sahf
bound
mov
inc
mov
jle
pushf
imul
dec
mov
xchg
and
inc
rorb
mov
fsubrl
mov
fs
xor
not
add
dec
ja
movsl
add
stos
mov
int3
mov
jns
outsl
mov
lods
scas
adc
movsl
xor
mov
scas
fildll
adc
rcll
xchg
lock
test
lods
dec
scas
aaa
subb
lret
xchg
cmp
push
repnz
out
dec
mov
adc
and
xchg
stos
cmp
pop
adc
sbb
mov
or
aad
in
imul
xor
pop
fwait
xorb
in
dec
jmp
movb
mov
dec
mov
add
or
xchg
xorb
jmp
les
sub
mov
sbb
add
adc
xchg
shlb
push
inc
sti
push
in
gs
addr16
and
outsl
scas
popa
push
jmp
or
sub
fs
or
push
fisubrs
sbb
mul
addl
mov
mull
cwtl
lea
sbb
mov
bound
jmp
pushf
in
push
pop
add
dec
jb
psrlq
in
test
nop
pop
cs
out
jns
mov
scas
add
sahf
je
jp
mov
pop
sub
xchg
test
cmp
ret
sbb
dec
xchg
out
test
mov
sbb
scas
out
push
stos
lret
mov
les
rcrl
jmp
repz
dec
push
mov
movsb
mov
data16
mov
xchg
lock
inc
fimuls
cmpsl
jecxz
sbb
cmp
pop
add
sbb
leave
push
fmul
sub
pop
mov
ljmp
adc
sbb
adc
je
mov
or
lahf
mov
hlt
jle
sub
dec
in
cwtl
adc
jb
xchg
insl
fidivl
push
inc
jl
push
movsb
ja
xor
std
sbb
cmp
adc
out
lahf
xchg
bound
out
leave
xlat
sbb
iret
ror
jae
pop
clc
arpl
cmp
mov
jmp
lock
cmpsb
cmp
aam
fnsave
lods
int3
and
dec
ret
mov
add
nop
addl
in
in
test
cmp
adc
repnz
arpl
int3
test
or
aad
out
ror
mov
fnsave
mov
jp
js
adc
push
repz
push
add
add
jne
loope
mov
daa
testb
add
mov
insl
je
subb
dec
sbb
test
fcomi
inc
or
mov
lret
and
sub
enter
and
sub
sbb
add
in
add
ret
or
jg
pop
dec
lods
out
jl
jl
scas
inc
jnp
cmp
in
in
inc
bnd
notl
lret
xchg
nop
stos
ljmp
push
pop
sahf
mov
aas
int3
jb
jae
mov
sub
mov
cmpb
mov
test
xchg
cmp
leave
rcll
push
ljmp
in
cmp
cmp
sbb
inc
sarb
jno
push
test
pop
pop
imul
add
repz
divb
out
shll
imul
xchg
and
or
mov
notl
push
xor
aad
and
loope
pop
pop
daa
jno
cmp
js
push
xchg
xchg
jae
or
mov
lods
add
adc
imul
ja
add
or
lock
add
jl
xor
push
loope
jae
jmp
and
mov
pop
xchg
out
mov
repnz
xor
jbe
mov
xchg
or
sub
adc
xchg
ja
mov
xor
add
les
sub
pop
inc
out
or
ficoml
push
dec
fsubrs
outsl
mov
or
clc
mov
data16
lods
add
jle
rcrl
hlt
push
push
pop
pop
xor
xchg
aam
inc
xor
jb
or
jo
addr16
jp
movsl
addr16
sbb
push
mov
lods
mov
cmp
in
popf
jne
push
loope
sub
pop
add
jle
cmp
sub
push
testb
ss
adc
out
or
testb
and
inc
sarb
mov
loope
mov
xor
fucomi
xor
and
xlat
outsb
sub
int
packuswb
fs
sbb
sbb
mov
aaa
and
adc
dec
data16
xor
pop
lds
xchg
jp
jae
addb
mov
add
push
sub
sti
scas
addr16
sbb
in
shrb
jns
pop
lret
push
adc
lock
sub
jns
fistps
dec
stos
inc
repz
pop
rcrb
push
rcrb
insb
push
pop
xchg
sub
jns
add
pop
pop
mov
shrl
hlt
sub
aas
adc
repz
insl
pusha
sbb
arpl
xchg
imul
test
mov
mov
ret
push
inc
cmp
fwait
rcll
adc
popf
fidivs
test
mov
xchg
int3
arpl
inc
xor
mov
jns
sbb
es
hlt
jb
push
xchg
push
in
imul
fnstsw
jle
cmp
add
jmp
mov
push
stos
inc
pop
jns
and
jnp
xor
sub
and
cld
xor
and
in
xor
jne
and
cmp
lahf
addr16
mov
xchg
or
inc
rep
push
mov
into
pop
lock
pusha
push
xorb
mov
aam
xchg
mov
scas
mov
loope
cmp
js
pop
aaa
out
push
xor
jns
push
mov
lret
mov
repz
sbbb
sar
testb
sbb
jecxz
jns
mov
mov
or
pop
jbe
rcr
cmp
arpl
cmp
lret
cmpsl
mov
repnz
jmp
and
rorb
jns
adc
movsb
add
outsb
adc
jp
add
jns
stos
scas
mov
sbb
jns
mov
daa
cmp
into
test
xor
or
xlat
int3
sbb
in
add
pop
data16
fwait
adc
cld
dec
add
js
jl
mov
cmp
les
adc
popf
gs
or
mov
sub
sub
leave
in
pop
fisubs
cmc
mov
xchg
dec
mov
repnz
inc
dec
rcl
add
dec
pop
sub
sahf
jg
and
xor
rorl
adc
jnp
out
lods
jns
inc
pusha
add
ja
cmp
bound
ja
push
call
popf
inc
movsl
out
mov
ljmp
inc
out
rolb
cmp
add
dec
lret
push
jo
lcall
jnp
enter
push
jb
ds
adc
ja
add
dec
add
scas
mov
std
and
fidivs
out
sub
mov
push
insb
adc
subl
mov
mov
add
sbb
data16
bound
jns
inc
rsm
ja
push
jns
xor
std
mov
jle
jge
imul
roll
xchg
popw
loop
sub
sbb
leave
push
rorb
sbb
adc
cmp
or
lds
adc
fsts
iret
cmp
nop
dec
xor
sbb
stc
cmp
inc
cwtl
les
push
adc
addr16
vfmadd132ps
add
rcll
jne
cli
loope
lcall
sub
lret
leave
imul
daa
or
inc
ja
jge
mov
aaa
push
pop
cmp
or
out
pop
push
cmp
sti
mov
ss
pop
push
aad
mov
cltd
lret
enter
test
mov
jae
gs
mov
and
push
mov
in
mov
fisttpl
ljmp
xlat
jb
or
sbb
imul
int3
fs
imul
inc
jmp
lahf
push
out
clc
mov
rol
jbe
or
or
mov
insl
fs
ljmp
xor
push
dec
sbb
mov
fbld
sub
jne
jle
pop
xlat
push
imul
mov
loope
fisttpl
cwtl
mov
icebp
mov
fs
rorl
sub
sbb
sub
adc
shll
daa
cmp
pop
pop
sub
lds
jae
jp
popf
adc
add
int
add
sub
loopne
sbb
and
lcall
xchg
leave
les
insl
mov
jns
jg
inc
jge
imul
cmpsb
stc
pop
mov
push
lret
sbb
sbb
sahf
mov
xor
push
xor
adc
js
xor
cmp
inc
sarb
cwtl
iret
lea
loopne
adcl
ljmp
and
and
and
lods
mov
mov
mov
icebp
sub
fucomip
ficomps
cli
pop
outsl
fcoms
repnz
cmp
sbb
xor
shlb
dec
push
cmp
xchg
mov
xor
shrb
call
cmpsl
rorl
or
stos
dec
stos
pop
pop
dec
inc
push
dec
inc
dec
add
test
loopne
cmpsb
imul
fldln2
loope
cmp
or
sbb
mov
push
das
push
out
enter
enter
sbb
sub
mov
or
dec
rclb
mov
mov
push
jbe
rcrb
out
call
cltd
insl
es
pop
imul
sti
sub
inc
subb
subb
test
in
adc
xchg
shll
std
or
pop
push
mov
cmp
pop
push
imul
sti
dec
xchg
xlat
rorl
fstpl
movaps
sub
into
pop
ljmp
add
jb
out
mov
aaa
pusha
mov
cmc
mov
mov
inc
push
repnz
sbb
cmp
sbb
sbb
ljmp
and
scas
jne
arpl
jns
push
aaa
int3
pop
sbb
mov
xor
mov
mov
xchg
or
shl
test
clc
lret
in
ret
cltd
mov
sarl
mov
add
rcl
add
xchg
xchg
push
lcall
push
outsl
and
stos
in
jecxz
mov
cmp
cld
inc
mov
test
lret
mov
imul
dec
lcall
testl
jno
les
scas
aad
popf
popf
out
pop
mov
mov
scas
clc
dec
cmp
into
and
push
mov
test
daa
incl
mov
rcl
arpl
dec
in
outsl
sbb
push
insl
add
into
andb
arpl
inc
push
jl
xchg
lods
das
lock
bswap
xor
int3
adc
int
sub
cmc
inc
aas
sub
add
imul
cld
push
ss
test
enter
bound
lods
jb
decb
dec
ret
adc
lcall
insb
subb
ret
pop
test
mov
mov
faddl
aad
jle
pop
push
mov
fsubl
outsb
jecxz
pop
sub
out
fs
fsts
dec
cltd
dec
int3
sub
dec
and
xor
out
mov
sahf
adc
scas
mov
and
pop
jg
movsl
shlb
ftst
mov
loopne
inc
shrl
mov
push
push
orb
jbe
shrb
mov
icebp
pushf
dec
mov
or
push
pusha
outsb
mov
pop
and
push
fcmovnu
push
sti
aaa
and
jg
js
in
in
sub
jmp
aad
cwtl
popf
jns
pop
fstps
add
push
adc
add
sbb
push
stos
shll
add
fsubl
adc
ja
loope
pusha
push
add
or
add
fsubrl
fdivrp
xor
xchg
sbb
xchg
mov
mov
movsl
xchg
imul
or
mov
cli
push
ficoml
lods
push
pop
jmp
xlat
sbb
or
inc
xor
in
cltd
sbb
mov
loopne
add
mov
jmp
movsb
shlb
pop
lea
vpsrld
push
addr16
inc
lds
inc
in
lcall
int3
and
out
jb
call
or
xchg
rcl
cli
xchg
clc
add
fwait
sub
mov
pop
mov
cmp
sub
mov
aaa
cmpsl
orb
scas
cs
pop
or
repz
jl
xchg
popa
int
clc
lret
outsb
push
aas
mov
scas
ljmp
xchg
sub
imul
mov
std
repz
aad
and
int
xchg
pop
push
adc
mov
jbe
rcll
and
cmp
enter
or
lock
sub
ss
mov
mov
or
mov
gs
mov
sub
jp
mov
mov
repz
ja
paddusw
cli
sbb
dec
sbb
mov
repz
push
js
sub
lods
cmp
cmp
insb
cmp
movsb
xlat
movsl
mov
mov
mov
notb
stc
xlat
jmp
outsl
add
adc
in
push
loopne
into
cmp
movb
incb
dec
popa
aaa
add
jne
push
and
cmp
test
pop
mov
mov
inc
or
or
sbb
mull
enter
nop
mov
push
or
lcall
loop
adc
xor
sub
push
adc
je
jno
sbb
cld
repz
mov
sbbl
int
arpl
rorl
dec
push
sarb
aas
sub
dec
cltd
enter
outsl
lahf
lds
pop
inc
adc
adc
mov
pop
jle
push
or
push
adc
adc
test
arpl
loope
mov
jnp
lea
push
addr16
outsb
std
icebp
in
call
enter
into
dec
into
xchg
movsb
repz
icebp
adc
jg
dec
inc
and
fwait
pop
or
adc
and
rolb
xchg
js
jmp
sub
adc
push
mov
movsl
add
jmp
push
mov
into
lahf
pop
xchg
sbb
scas
or
push
neg
mulb
mov
movsl
fimuls
adc
ds
xchg
and
inc
scas
pop
xchg
jge
sbb
or
jp
sbb
inc
adc
sub
xchg
das
pusha
sbb
cwtl
int
inc
push
push
push
out
lods
mov
xchg
xor
test
mov
imul
in
sub
jb
or
arpl
mov
mov
fstps
sbb
dec
mov
in
mov
mov
push
jge
inc
xchg
cmp
shrl
insb
jmp
lret
mov
int3
push
and
mov
mov
sub
shlb
lret
adc
mov
pusha
cmp
mov
js
jp
cli
pop
ret
xchg
jae
push
fdivrs
adc
mov
sub
inc
sub
popa
mov
cmp
jne
fildl
arpl
out
cmp
les
or
or
in
rolb
or
and
out
sub
sbb
jge
out
in
data16
or
fs
cmp
or
arpl
push
push
pop
add
mov
scas
mov
bound
inc
std
adc
add
cmp
mov
xor
adc
dec
inc
jmp
xor
mov
inc
std
out
fwait
mov
ja
mov
fwait
in
andb
insb
sub
stos
dec
sahf
in
rcll
movsb
testb
test
dec
xor
jno
push
sti
shrl
and
inc
lret
xor
fs
jns
xor
dec
lcall
mov
lods
dec
inc
fisubrl
mov
dec
adc
aam
push
andl
adc
hlt
inc
mov
add
aad
mov
out
push
and
xchg
ss
sbb
sub
adc
loop
mov
xchg
inc
out
fucom
cmpsl
scas
ret
aad
jns
jmp
sbb
jno
cmp
mov
jl
cltd
sub
shlb
mov
cli
cltd
rcl
lcall
or
gs
add
mov
test
mov
pop
or
xchg
push
lret
sub
lods
inc
popf
mov
movsb
xor
sbb
xchg
icebp
jmp
js
cltd
mov
jge
inc
cwtl
mov
add
shll
push
or
push
xor
cmc
int
daa
xor
mov
loop
cmp
mov
sbb
dec
adc
add
jns
mov
in
gs
ret
stos
daa
inc
push
pop
repnz
cmp
add
sti
cmc
ficoml
cmp
cmp
loopne
lds
sbb
cmpsl
or
xchg
enter
dec
sbb
sub
fidivs
lcall
out
ffreep
sbb
dec
sbb
mov
xor
data16
mov
ja
lea
pop
cmp
xor
add
jne
pop
hlt
adc
pop
fiadds
adc
xor
shl
mov
jp
mov
adc
les
popf
cmp
lock
jb
add
sarb
mov
scas
and
xchg
sbb
lcall
pop
ss
inc
xchg
adc
repz
add
mov
xchg
inc
enter
mov
xchg
pop
stos
cmp
hlt
sahf
cmpsb
mov
mov
sub
in
jb
jnp
xchg
sbb
rcrb
jns
outsl
pop
sbb
sbb
dec
jnp
pop
cmp
cmp
sahf
test
imul
je
out
mov
xlat
push
popa
lods
adc
sub
adc
cmpsb
sub
test
xor
repnz
je
mov
data16
ret
cmp
in
cwtl
mov
es
ret
cltd
jnp
pusha
pop
mov
jl
sbb
push
dec
xor
add
or
jmp
xor
mov
add
sarl
add
adc
mov
mov
jle
push
iret
popa
mov
or
mov
inc
sub
dec
inc
cwtl
cmp
nop
subl
adc
shrl
lods
push
nop
fiadds
sbb
das
mov
popf
inc
fisubrs
pop
das
jo
in
in
movsl
lods
adcb
sbb
sub
xchg
cmp
stos
movb
iret
icebp
xlat
ficompl
lcall
mov
add
xchg
hlt
mov
sub
lock
fidivrs
push
jecxz
out
adc
sub
jl
mov
mov
mov
jno
sub
call
jae
iret
icebp
or
orps
pop
cmp
cld
and
icebp
loopne
cwtl
xor
xor
scas
fucom
fsubp
and
loopne
in
pop
push
jae
jnp
shr
lret
inc
sbb
shll
insb
lds
clc
add
pop
xor
dec
and
leave
xchg
inc
fisubl
adc
mov
dec
movsb
xor
ds
mov
call
icebp
lcall
imul
inc
add
mov
stos
inc
dec
jnp
cmpb
aam
bnd
paddsb
aaa
sub
and
rolb
js
lret
mov
lea
mov
push
sbb
lock
dec
rcrb
out
loope
mov
in
mov
xor
sbb
or
scas
xor
inc
pusha
loope
dec
mov
addr16
ret
xor
or
movsl
lock
sarl
movsb
pop
xchg
pop
sub
dec
add
mov
imul
cmpsb
fcoms
outsl
out
rcll
xchg
xchg
call
shlb
ds
jbe
mov
pushf
xchg
push
inc
mov
pop
je
adc
arpl
or
outsb
add
iret
mov
mov
add
jo
and
pop
add
imul
jae
mov
test
subb
mov
mov
pop
arpl
inc
push
cltd
pop
and
xor
repnz
and
pusha
movsl
sbb
fs
testb
and
negl
cmpsb
inc
rolb
repz
xchg
aas
inc
add
jno
aas
ljmp
mov
aad
lcall
or
adc
add
lds
jb
cli
pop
sahf
mov
repz
push
stc
cmp
jb
fnstenv
pop
gs
loop
fmuls
jne
add
testb
sahf
stos
scas
sub
sub
xchg
cmp
and
mov
jno
movsl
fstpt
mov
outsb
push
loope
les
jp
imul
cmp
push
cmpl
lahf
lods
les
cmc
fisubs
test
in
shlb
pop
and
jmp
cltd
stc
adc
in
add
inc
push
xchg
inc
cwtl
andb
jno
imul
aad
xchg
jmp
outsl
pop
je
add
or
jg
test
cmp
mov
xor
lcall
push
pop
imul
cmc
xor
xlat
dec
xchg
test
jecxz
stos
push
add
cli
je
leave
xchg
jne
mov
pop
pop
shrl
movsb
aam
mov
inc
ss
push
lds
fsubrs
or
scas
call
cmp
in
inc
fnstsw
jo
movsb
or
and
and
popa
push
and
or
mov
push
sub
out
lahf
sub
into
fisttps
dec
out
and
adc
dec
lock
jmp
les
repz
jle
sbb
and
adc
mov
sti
or
jnp
push
sub
jg
mov
scas
insl
pusha
scas
fidivs
repnz
loop
imul
adc
dec
jmp
xchg
aad
aam
andb
or
rolb
mov
faddl
cli
mov
adc
cmp
or
dec
lods
mov
cmpsl
jo
and
mov
push
mov
nop
imul
jnp
loope
mov
xor
sub
lock
dec
add
push
int3
ffreep
fucomip
rclb
sub
xor
lods
xor
dec
loopne
jle
jmp
push
lret
neg
fisttpll
outsb
jp
jl
test
test
xchg
cmp
dec
sbb
xchg
mov
outsl
shll
icebp
fwait
gs
inc
lds
outsb
mov
adc
sbb
xor
mov
mov
mov
dec
pop
push
inc
outsb
aaa
cmp
cltd
jle
loopne
lock
adc
sbb
dec
repz
hlt
jno
in
add
cmp
adc
mov
les
fsub
jp
mov
orb
mov
pop
fdivrs
mov
sarb
aam
outsl
or
mov
xchg
loop
insl
xchg
cmp
mov
mov
outsl
stos
mov
cmp
xchg
popf
aam
cltd
loope
adc
push
pop
test
ds
std
hlt
xchg
push
andl
dec
jb
push
jne
pushf
filds
cmp
pop
or
shrb
lcall
repz
or
mov
das
pop
jecxz
jge
mov
cmp
xchg
out
ja
jne
js
xchg
mov
addl
and
xor
mov
insb
rcrb
adc
xor
mov
push
xlat
icebp
or
or
sbb
outsl
xchg
and
and
xlat
loopne
jmp
faddl
xchg
out
mov
repz
cmp
sahf
fs
or
lret
dec
mov
add
dec
fisttpll
pop
arpl
sbbb
fwait
cld
daa
stos
cmpsb
ret
sub
xchg
cmp
lret
xchg
cmpb
into
in
or
pushf
rorb
sti
and
sbb
je,pn
xchg
push
push
into
addr16
jo
cld
sbb
mov
sub
ss
lahf
adc
pop
pop
add
cmpsb
push
cmpxchg
cmp
dec
andl
fs
push
aam
sbb
sub
xchg
shll
or
sbb
lods
repz
das
popf
cmp
js
enter
enter
xchg
mov
push
mov
fildll
lea
ja
mov
cmp
or
adc
inc
arpl
test
xchg
and
cmp
xlat
insb
fisubl
jp
push
jmp
in
inc
adc
out
xor
sbb
push
stc
imul
push
mov
add
pop
lea
mov
repnz
sbbl
mov
push
xor
sahf
adc
xchg
out
bound
data16
jae
mov
mov
into
cmp
test
into
xchg
loopne
repnz
out
xor
sub
dec
mov
mov
mov
xor
jmp
dec
subl
mov
mov
insl
sti
mov
add
fdivl
lds
jmp
stos
scas
inc
pop
cmp
ljmp
cmp
insb
add
shrb
imul
ret
sbbb
jmp
inc
mov
mov
lret
movsb
aad
int
inc
mov
add
push
roll
call
cmc
subl
xlat
cli
ficoms
push
mov
dec
cli
imull
mov
fs
cmp
leave
or
imul
ljmp
fiaddl
test
loope
mov
push
pop
pop
cmp
dec
ja
iret
dec
scas
dec
stos
jae
sub
dec
or
sbb
jo
pop
stc
in
imul
lret
outsb
mov
mov
repnz
mov
pop
lock
jb
sub
and
out
jl
jne
inc
std
jne
sub
add
aam
jae
push
scas
cmp
cmp
jmp
aam
xchg
sub
add
mov
and
pop
outsl
cld
xor
dec
shll
xchg
js
xchg
in
and
adc
lea
jns
clc
push
cmp
jo
mov
lret
scas
ss
imul
pop
mov
shrb
xchg
out
aam
ds
sbb
leave
addr16
xchg
xchg
jae
int
sub
adc
aas
hlt
idivb
sbb
ljmp
loopne
fs
in
enter
dec
push
lahf
aas
sub
test
and
sbb
adc
push
ret
pop
stos
sbbb
sbb
dec
movsl
cwtl
sub
mov
movl
mov
push
nop
dec
stos
pop
and
rorl
outsl
repz
push
cmp
push
jp
insb
clc
inc
add
xchg
adc
je
dec
cmp
cli
push
mov
in
lret
push
dec
dec
fucomi
inc
mov
push
inc
fidivrs
add
push
jbe
push
call
mov
jne
clc
aas
sub
fildl
cmp
push
pop
cmpsb
mov
fisubrl
negl
outsl
xlat
cltd
aam
push
shrl
shr
dec
add
inc
dec
xor
mov
out
jno
mov
mov
call
pop
stos
adc
in
jmp
dec
xchg
loop
std
jns
outsl
repz
cmp
sbb
push
daa
popf
mov
dec
addr16
pop
jge
sub
mov
push
sbb
mov
xor
bound
mov
jne
into
dec
mov
pop
and
out
or
lea
inc
lods
mov
cmpsb
jmp
pop
fs
inc
and
jp
divb
and
lret
shl
inc
ret
lods
sarl
sbbb
fs
divl
and
andb
xchg
lcall
in
mov
arpl
repz
xchg
ds
push
xor
mov
in
cmp
fcoml
cld
loopne,pn
icebp
mov
pop
jne
data16
cmp
cmp
inc
aas
addl
shl
in
insl
sahf
xor
daa
fmull
mov
xchg
movsl
pop
stos
inc
or
cs
stos
jecxz
lret
js
sti
rolb
outsl
ret
adc
add
movsb
pop
fistl
movsb
sub
mov
mov
or
push
xlat
loop
adc
mov
call
sub
jle
lea
adc
out
or
lret
popf
mov
jb
push
cwtl
lods
fistpl
ret
lcall
int
fldt
pop
shl
jno
pop
xor
movsl
push
sbb
mov
cwtl
movl
inc
dec
iret
and
push
jle
jnp
roll
add
mov
jnp
movsb
int3
dec
loope
loop
lods
jl
pop
mov
enter
dec
push
mov
push
repz
int
fwait
out
pop
test
iret
jp
roll
scas
cmp
dec
icebp
aam
notrack
and
add
jle
xlat
jle
pusha
xchg
sbb
repz
cltd
cli
sbbl
mov
mov
jbe
out
in
mov
xchg
push
cmpb
mov
mul
adc
cmp
mov
inc
pop
shl
push
pop
iret
add
jge
loop
fsubrs
in
and
push
xor
rorl
cmc
adc
sub
and
and
outsl
out
sub
add
insb
dec
xor
in
mov
mov
sbb
push
xchg
roll
and
mov
enter
addr16
lcall
cmp
jmp
and
jnp
dec
sbb
aad
sbb
inc
cmp
daa
loope
je
pushf
fstpt
js
loopne
lock
cld
rep
mov
cmc
pop
in
mov
or
movsb
fists
pop
mov
out
mov
xchg
repnz
loopne
scas
cmova
pop
push
push
mov
sbb
mov
sub
dec
or
test
pop
xchg
testb
lcall
or
pop
lock
pushf
sbb
fnstsw
cmpsl
add
push
push
pop
fiaddl
cmp
jl
jno
movsb
xchg
mov
xor
aaa
stos
shrb
movsb
roll
mov
sub
out
xchg
pop
ljmp
push
mov
pop
lds
sbb
imul
movsl
sbb
push
pop
movsb
iret
into
push
negl
lret
pop
adc
je
cld
incl
aaa
cmp
clc
pop
lds
lret
loopne
aas
sti
insl
adc
jle
call
xor
mov
cmp
inc
loopne
push
sub
das
mov
sar
stos
shlb
xchg
mov
sub
jg
arpl
dec
cmp
into
add
movsb
iret
lret
insb
cltd
mov
loope
lret
sub
scas
cmp
mov
xchg
jmp
loop
mov
fldt
cmp
add
sbb
cmpsl
sub
jg
inc
xchg
ja
je
ret
mov
les
repz
add
adc
scas
jecxz
mov
in
aad
and
ja
add
and
push
sahf
lahf
push
pusha
mov
mov
sbbl
lock
inc
xor
hlt
mov
fwait
inc
cmc
js
pop
jmp
push
imul
gs
mov
pop
cmp
push
in
mov
inc
bnd
sbb
mov
sbb
push
sbb
push
mov
mov
das
cmp
imull
pop
pop
cmp
pop
dec
in
mov
int3
addb
lcall
add
cmp
push
push
mov
push
hlt
xlat
int3
inc
lods
lock
jmp
sub
frstor
dec
sarl
jp
insl
dec
inc
and
cwtd
xor
mov
mov
pop
fs
ss
jle
sub
mov
dec
je
jae
arpl
or
jl
out
cwtl
ficompl
add
sub
sbb
jne
dec
mov
gs
fucomp
sbb
mov
ja
pop
pop
xor
in
negb
or
push
push
int3
xor
xchg
ljmp
or
out
jge
stos
inc
loope
inc
xchg
ficomps
push
negb
sbbl
call
sbb
dec
adc
jge
xchg
or
mov
pop
adcb
push
and
int3
imulb
repz
imul
mov
sub
jns
dec
jno
imul
loopne
lret
daa
lock
sub
out
subl
outsb
xchg
dec
dec
test
and
adc
mov
pop
int3
ja
adc
cmp
or
jecxz
scas
test
or
push
xor
add
icebp
mov
jmp
mov
stos
add
pop
mov
and
add
scas
out
pop
dec
ret
sti
jb
jbe
pop
push
iret
incl
jae
cmp
cmpsl
pop
sub
les
inc
sbb
clc
aaa
int
rcrl
or
dec
add
adcb
or
inc
xor
loopne
aad
scas
dec
mov
sbb
mov
arpl
in
icebp
or
insl
sahf
fdivp
daa
xor
dec
aaa
mov
add
out
shrl
cli
mov
pop
cmp
sub
in
push
fmull
push
imul
mov
out
jnp
repnz
xchg
clc
push
ret
inc
add
xor
cli
roll
push
cmp
mov
mov
out
leave
fcoml
adcl
or
cs
dec
fwait
popl
stos
and
cmc
orb
hlt
mov
lock
pop
dec
dec
xlat
pop
pop
mov
pop
cmp
stos
xor
or
inc
stos
ret
rcll
inc
repnz
cmp
xchg
lret
mov
jmp
sub
loopne
call
mov
ljmp
jae
xchg
dec
xor
call
test
pop
out
cwtl
cmpsl
loope
ds
and
pop
rcll
test
mov
push
sbb
jecxz
call
fnsave
aam
outsl
lods
xor
or
inc
xchg
out
sbb
adc
xor
push
test
insb
cmpsb
adc
pop
dec
inc
fcoms
stos
sahf
pusha
sti
mov
lock
ret
inc
mov
test
push
test
sub
inc
or
inc
mov
cmc
ret
inc
cmp
sbb
movsl
pop
test
push
cmpsb
orl
imul
sbb
sbbl
xor
fistpll
fmuls
lds
cltd
jbe
or
dec
stos
and
cmp
jmp
or
mov
cmpsl
movsl
movsl
fidivrl
push
push
sub
xchg
mov
mov
push
test
mov
mov
jno
pop
cmpsl
notl
test
cmpsl
xor
xchg
imul
mov
imul
data16
test
mov
jmp
in
pop
jl
jle
shlb
mov
adc
push
sbb
and
sub
mov
dec
bound
xor
daa
push
daa
andl
mov
sbb
pop
je
or
pop
mov
cmp
aaa
xchg
aas
cmp
sarb
addl
sbb
fldt
sub
and
fldcw
je
leave
icebp
idiv
mov
xchg
shrl
sti
test
icebp
fcomp
or
pop
cmovge
adc
hlt
push
in
loope
cmp
xchg
ss
push
imul
popa
imul
cmpsb
fs
popf
lds
out
sbb
jmp
stc
in
test
push
mov
leave
mov
lds
popf
push
pop
out
test
push
xchg
xchg
add
cld
rorb
add
cmc
enter
and
js
jge
sarl
in
out
psllq
push
rcrl
loopne
mov
mov
ss
inc
dec
out
shlb
fistl
aas
xor
aam
pusha
outsb
and
push
sbb
adc
xor
rclb
sbb
cli
sbb
sub
js
fnstsw
out
xchg
jns
push
dec
add
xchg
adc
bound
mull
clc
cwtl
xlat
hlt
outsl
mov
mov
fstpl
mov
cmp
inc
jo
lcall
ds
into
push
inc
scas
xor
fistpl
xor
pop
cld
push
adc
push
push
sti
or
mov
jmp
lret
xchg
movsb
jecxz
push
je
jecxz
popa
cld
mov
jnp
push
scas
dec
icebp
adc
add
out
sbb
rclb
inc
lods
data16
loop
pop
inc
ret
push
loopne
lods
dec
and
out
popf
cmp
test
call
iret
stc
push
in
push
jg
stc
adc
xor
jno
push
int
add
lcall
orb
inc
or
shlb
adc
loope
sub
jne
add
int
or
lods
sbb
push
adc
call
lock
test
mov
jnp
mov
dec
loope
pop
xchg
pop
and
ds
pop
sar
or
jg
sub
pop
push
sub
lret
sub
leave
imul
jl
mov
inc
out
jp
imul
in
jbe
test
cmp
jns
stos
cmp
add
dec
ds
push
adc
cmp
repnz
clc
stos
pop
pop
pop
inc
push
cmp
fisubl
pop
out
insl
and
mov
in
popa
mov
xchg
pop
fwait
or
mov
subl
stos
push
and
jmp
jae
clc
mov
cmc
adc
pop
inc
pop
and
pop
aad
add
xor
in
xlat
lods
lds
mov
dec
fistpll
in
or
sub
pop
mov
iret
adcl
mov
inc
popa
add
push
mov
lea
dec
and
fnsave
mov
dec
add
xchg
sub
lock
mov
add
jmp
dec
setg
adc
int3
mov
test
add
add
push
add
jge
mov
je
jle
sbb
add
in
jns
popa
pop
jbe
std
stc
jno
cld
js
push
test
cmpsb
xor
aas
cs
imulb
aas
je
sti
inc
dec
mov
mov
out
sbb
fdivrs
cmpl
add
cmp
sbb
mov
pop
adc
mov
xchg
or
mov
cmpsl
or
stc
cmpsb
hlt
push
sbb
loope
xor
mov
movsl
adc
mov
inc
pop
inc
fdivp
shlb
test
adc
xchg
dec
add
jg
cmpsb
lret
pop
dec
cmpsl
mov
jecxz
mov
mov
notrack
pop
mov
and
fnop
sbb
daa
jo
mov
ljmp
xlat
scas
dec
lods
mov
mov
adc
test
cmp
adc
das
xor
adc
ret
clc
mov
iret
or
js
faddl
jp
in
addl
inc
add
out
cmpsl
sahf
ds
imul
sbb
loopne
lcall
xor
dec
dec
dec
lods
fs
into
test
cmp
icebp
jge
in
mov
call
nop
sbb
cmp
pop
push
stos
mov
out
mov
push
in
test
pop
push
aam
dec
mov
and
adc
adc
dec
jmp
inc
loopne
mov
das
xor
cld
test
inc
pop
xchg
and
cmc
testl
movsb
fs
jecxz
test
sub
cld
movsb
add
mov
movsb
test
pop
addr16
jns
lock
mov
aam
sbb
aad
movsl
adc
pushf
not
adc
jb
je
inc
xor
mov
sub
sub
add
sbb
aas
xlat
push
push
push
mov
movsl
sbb
mov
aam
xchg
jae
jp
mov
mov
scas
and
or
es
cld
jnp
arpl
push
js
imul
lds
aaa
adc
jno
xchg
cwtl
lret
sub
nop
enter
out
fistpl
outsb
bound
xchg
jl
rcrb
mov
in
inc
xor
fstpl
pop
mov
lahf
insl
mov
adc
clc
mov
ds
mov
ret
adc
bound
sbb
enter
int
cmp
mov
sarb
cwtl
cmp
xor
das
outsl
mov
and
mov
jns
add
fs
jmp
jge
push
or
ljmp
pop
and
fldcw
cmp
lods
in
inc
loope
cmp
in
sbb
jge
fs
sahf
jl
popa
push
es
cmp
dec
cmp
sbb
sub
xchg
mov
xlat
pop
js
mov
add
mov
mov
pop
bound
or
xor
add
wrmsr
test
inc
mov
scas
in
pop
xchg
dec
pop
test
mov
lea
mov
xchg
cmpsl
in
lea
mov
jmp
mov
sub
pop
stc
ja
cs
or
xchg
jl
xchg
fidivrl
pop
mov
push
imul
into
fstl
sub
sub
xchg
and
aam
and
popf
or
cmp
js
xchg
scas
xchg
cmp
lret
xor
mov
pop
pop
movl
outsl
and
mov
mov
push
push
lods
cmp
cli
xor
pop
mov
mov
int3
aaa
lods
icebp
mov
pop
pop
fisttps
mov
inc
sbb
push
lods
cmp
jnp
mov
les
or
test
inc
dec
xchg
lea
sub
push
shr
das
push
xchg
and
mov
fsubrs
adc
mov
mov
cltd
jmp
mov
xor
push
daa
arpl
das
daa
enter
inc
notl
adc
ds
outsb
cmc
pusha
jne
mov
dec
fmull
std
div
push
push
enter
cmp
add
rep
aas
mov
push
adc
mov
icebp
orl
loopne
cltd
push
sub
jno
or
jnp
ja
mov
sbb
jg
xor
insb
or
aam
fdivl
add
fwait
xor
mov
mov
test
into
and
mov
loope
add
add
jg
call
and
mov
sbb
sbb
insl
add
xchg
loope
shlb
or
and
push
scas
enter
pop
push
int
mov
xlat
xor
xchg
ljmp
and
rorb
pop
inc
insl
iret
lahf
mov
lds
mov
xchg
pop
xor
clc
lcall
push
mov
loope
mov
jo
scas
cmp
and
cld
add
into
cltd
pop
lret
mov
aad
mov
leave
adc
mov
pop
ds
rorb
aaa
lret
mov
rcrl
loop
lret
mov
popf
lds
pop
aad
dec
pop
push
loopne
xchg
hlt
aad
sub
jb
jbe
mov
dec
je
adcl
mov
xor
enter
repz
mov
sbb
jecxz
sub
fs
mov
in
inc
push
sub
jge
aad
cmpsl
mov
sub
adc
sub
rolb
call
fs
addr16
cmpsl
cltd
rclb
add
insl
jmp
imul
push
mul
ret
call
mov
xor
ret
jp
aas
add
xchg
jo
inc
lahf
mov
adc
gs
stos
popa
fadds
cmp
or
jle
adc
ret
xchg
in
xor
xchg
daa
and
rolb
jb
ret
adc
sahf
add
xor
xchg
fs
js
aad
int
mov
sub
jge
ss
sub
adc
imul
mov
das
mov
js
fwait
rorl
mov
ss
cmp
inc
test
adc
fidivs
popa
loop
lcall
lret
idivl
imul
repnz
mov
scas
mov
mov
mov
inc
inc
fimuls
arpl
ja
jmp
sbb
jb
mov
ror
xchg
icebp
hlt
push
mov
int3
mov
int
mov
xchg
and
test
cmp
cmp
mov
mov
xor
dec
mov
stc
ficomps
enter
mov
cmp
cmpl
jle
push
inc
mov
sbb
mov
xchg
mov
jl
add
int3
cmp
cs
aaa
icebp
pop
mov
repnz
out
jne
pushf
inc
popa
pop
or
into
fs
cli
add
jbe
stc
mov
cwtl
rcll
lods
jb
cmp
in
mov
movsb
imul
xchg
cwtl
lds
cmp
or
jp
pop
mov
lods
sti
nop
pop
dec
sbb
loopne
push
dec
pop
xchg
jle
decl
lods
loope
repnz
jmp
mov
xor
loope
cmp
or
adc
out
xchg
fldcw
ja
and
js
sahf
cmp
ret
cmc
push
pop
cmp
loop
cli
mov
cltd
fiadds
je
daa
cltd
icebp
mov
xlat
iret
sbb
dec
dec
ret
aad
pop
xchg
adc
inc
int
adc
inc
loop
xchg
ret
adc
stos
xchg
ja
adc
daa
fcompl
cmp
and
mov
cmc
ret
pop
jmp
and
sub
repz
or
mov
xor
dec
pop
mov
orl
in
fs
lds
dec
or
jno
sbbb
dec
enter
shll
dec
scas
xchg
or
pop
jmp
je
jne
aad
test
cmp
pop
inc
das
inc
pop
lret
adcb
xchg
adc
arpl
imul
popf
mov
fcomps
add
jecxz
adc
mov
cmp
icebp
aam
jnp
popa
cmp
mov
xchg
dec
fistpll
inc
inc
add
ljmp
rclb
pop
scas
sub
xor
add
pop
arpl
sbb
jns
and
cmc
push
lock
testb
lods
pop
add
dec
push
por
xchg
cmp
jg
jb
es
ds
mov
jp
in
push
stos
rolb
pop
addr16
cmp
int3
push
fstpl
and
or
das
lods
or
cli
addb
loope
sbb
adc
ljmp
inc
and
in
adc
push
sub
jge
into
pop
addr16
mov
scas
pop
inc
xor
clc
sti
inc
cli
dec
push
mov
imul
mov
add
lret
in
outsl
push
sbb
sub
and
xor
dec
ljmpw
push
scas
mov
adcb
jae
sti
out
push
invd
btc
mov
repnz
jo
test
jns
push
lahf
sarb
jns
xchg
das
pusha
lods
test
and
cmp
dec
dec
inc
xchg
xor
stos
cmp
inc
mov
mov
and
scas
xchg
hlt
push
popl
iret
xor
jbe
testl
enter
test
jb
divl
pop
lock
or
mov
icebp
sbb
dec
out
test
sbb
ficomps
shll
daa
xor
gs
aad
or
inc
add
sbb
mov
cmp
jmp
jl
out
dec
addr16
sbb
mov
dec
sub
popa
jle
popa
jecxz
out
arpl
xchg
xchg
out
mov
ljmp
int3
cmp
xchg
mov
add
addr16
roll
mov
or
xchg
shl
sbb
int3
bound
mov
push
pop
fistl
inc
out
jns
daa
rorb
es
repnz
push
pusha
mov
xor
test
ss
arpl
out
out
hlt
mov
add
add
mov
sub
ret
push
lods
lahf
ret
fidivs
fucompp
sbb
cmp
stc
repnz
and
jl
mov
fdiv
movsl
lea
cli
mov
sarb
movsl
pop
loop
in
insl
cmp
sahf
fwait
outsb
or
pop
or
mov
mov
pusha
mov
sub
pop
scas
data16
repz
or
push
loope
or
dec
xchg
sti
adcb
mov
mov
push
pop
lahf
jl
add
js
mov
pushf
and
push
sbb
stc
lret
or
jp
out
test
in
inc
rorb
jnp
bnd
out
out
and
jg
push
pusha
dec
xchg
xchg
ljmp
sbb
lret
adc
rcrb
fcomp
jl
loopne
jg
out
push
or
jns
lret
and
sbb
sbb
enter
lret
int3
mov
sbbl
adc
clc
mov
mov
insl
in
incl
push
das
shl
adc
stos
jae
jae
fwait
rcrb
inc
jge
lcall
nop
pushf
inc
adc
add
fidivrl
test
movsb
xchg
pop
or
clc
inc
jg
dec
aad
mov
and
imul
jnp
pop
mov
pushf
movsl
cmp
push
dec
dec
arpl
sbb
cwtl
lcall
jp
hlt
mov
aad
sub
dec
fs
fidivs
ds
leave
inc
mov
frstor
mov
out
loope
mov
pop
cwtl
movsb
xorl
adc
cwtl
push
mov
add
mov
mov
sbb
push
fidivrl
repnz
or
gs
aam
std
jmp
sahf
shl
jae
inc
jle
cwtl
scas
xor
repnz
pop
jmp
cmpsb
fwait
out
stc
pop
mov
pop
cmp
add
mov
sarl
jo
inc
adc
ret
cmp
mov
ror
ljmp
or
repz
enter
pop
aad
sbb
dec
push
sbb
inc
jmp
xchg
lret
adc
pusha
shll
gs
push
cmpsl
pop
stos
cmpb
xchg
repz
adc
sub
xlat
push
pop
jle
daa
or
inc
sub
psraw
or
mov
fstps
mov
push
arpl
in
out
add
cmp
sub
pop
adc
add
mov
arpl
fdivl
sbb
adc
inc
jecxz
stc
sbb
xor
lock
scas
out
sahf
dec
add
push
aad
dec
sub
nop
sti
mov
sbb
test
ljmp
mov
mov
lahf
jl
jle
dec
sub
int
fisubs
push
shll
ljmp
dec
pusha
xor
addl
and
daa
jecxz
sub
arpl
das
imul
mov
fisubrs
mov
dec
mov
fmul
cltd
call
mov
testl
fadd
xchg
loop
pusha
jne
push
data16
fcompl
rorb
jmp
out
das
icebp
cmp
mov
add
adc
jo
idiv
or
add
mov
push
inc
add
jle
mov
imul
imul
fadd
dec
std
std
movsl
push
lret
xchg
push
inc
out
dec
adc
adc
movsb
in
xchg
inc
jnp
push
xor
sub
or
cmp
mov
shll
test
mov
or
aaa
jb
or
dec
stc
jl
shlb
sbb
mov
icebp
cmp
pop
push
fcomp
test
dec
andl
dec
mov
inc
in
pop
test
aam
in
aaa
sbb
and
cmp
xlat
cli
cli
gs
pusha
push
dec
repnz
pop
dec
clc
out
xchg
jns
aad
arpl
jecxz
divb
and
icebp
lahf
outsl
mov
cmpsb
shll
test
jbe
inc
scas
jb
and
xor
xor
ret
sbb
cmp
jns
jge
scas
jle
mov
ret
jo
jo
or
lea
jl
mov
cmp
jmp
or
add
bound
pop
and
jbe
or
cmp
xchg
cmc
mov
sahf
into
mov
jmp
imul
in
xchg
or
jge
test
fcos
or
dec
cmp
aas
xchg
mov
inc
filds
fildl
and
sbb
jle
or
xlat
xor
in
and
shlb
push
lods
dec
lods
stos
adc
xchg
xchg
add
cmpsl
pop
or
fwait
dec
in
pop
pop
push
arpl
and
imul
leave
cmp
fsubrs
push
movsl
mov
ss
xchg
andb
ss
cld
jge
dec
xchg
lcall
sub
inc
mov
sub
les
mov
mov
cmp
xchg
push
fstpl
inc
outsb
insl
scas
ss
in
sub
and
pop
push
nop
dec
leave
sbb
mov
sub
or
cwtl
mov
or
sbb
data16
jmp
or
lds
mov
rolb
repz
xchg
movsb
mov
ret
adc
xor
xor
sub
mov
adc
hlt
pop
mov
xor
shlb
dec
js
les
arpl
push
loopne
mov
fimull
jae
push
in
shlb
mov
sub
js
seta
push
sarb
leave
cmp
aam
jmp
movsb
fs
incb
push
ror
enter
imul
mov
fwait
lcall
cmp
insl
jne
push
popa
mov
lahf
mov
or
pop
add
add
pop
fbld
adc
sbb
hlt
push
mov
push
aas
push
inc
sbb
pop
push
sbb
adc
nop
add
mov
scas
xor
push
cmp
test
and
lods
repz
jle
cmpsb
cld
stc
xor
mov
and
fs
and
popa
pop
das
mov
mov
lret
adc
sarb
xor
add
cmp
bound
inc
ds
sub
add
inc
mov
int
scas
arpl
sbbb
aas
push
push
pop
in
sbb
fcmove
test
cmpsb
mov
fdiv
push
and
add
or
or
cmp
xorb
sahf
out
repnz
adc
push
rclb
jmp
leave
push
loopne
das
jb
pop
lods
cmc
cwtl
lock
fisttps
mov
aas
enter
xor
push
mov
shlb
pushf
mov
mov
andb
mov
inc
out
or
cwtl
mov
fisubs
sarb
add
loopne
add
stc
lret
and
fldt
sub
arpl
jno
loop
clc
fidivs
add
out
pop
dec
inc
ss
stc
push
dec
adc
or
mov
cs
and
add
sbb
inc
xchg
cltd
aas
xor
cmp
jo
subb
flds
lcall
inc
test
je
sti
dec
mov
jo
enter
sub
xchg
inc
fwait
ret
xchg
add
mov
jns
pop
lock
or
pop
push
jp
dec
pop
jge
inc
shlb
sti
xor
jecxz
mov
lret
mov
dec
cmpsl
jge
jmp
in
sbb
mov
dec
adc
cmp
aad
hlt
sbb
jmp
notb
sbbl
push
addr16
add
loope
jle
and
xor
inc
push
dec
aam
ror
push
mov
mov
js
mov
out
mov
cmpb
fstl
jns
das
arpl
loop
cmpb
jmp
fsubl
mov
pusha
jno,pt
add
cmp
loop
push
orl
cs
repz
mov
loope
sbb
cmpb
fdivs
xchg
scas
jo
inc
daa
mulb
aaa
jle
pop
or
fildll
mov
push
add
sbb
inc
nop
add
clc
jb
mov
setns
mov
add
test
fwait
sbbl
out
push
incb
dec
int3
xor
lds
lock
jnp
shll
or
decb
sub
mov
in
pop
xor
xchg
and
fildll
xchg
cmp
jbe
ret
inc
fwait
jmp
pop
mov
and
sbb
push
pop
mov
rcrb
inc
js
push
stc
cli
sbb
out
xchg
sarb
fwait
push
popf
inc
jb
loopne,pt
sbb
inc
xchg
movsb
mov
fisttps
shlb
in
sub
cmp
shll
mov
in
into
enter
push
test
xor
jle
dec
push
jo
cmpl
test
test
icebp
mov
inc
stc
cmp
mov
mov
je
repz
inc
aam
insl
aad
adc
pop
pop
xor
push
roll
addr16
icebp
ljmp
cltd
dec
or
lret
je
adc
lret
shrb
adc
lods
test
pop
pop
sbb
outsb
lds
mov
popa
adc
or
and
repnz
imul
cmp
mov
push
xchg
and
pop
inc
mov
or
pop
xchg
fisubs
xchg
fs
cmp
dec
and
sub
fbld
out
repz
rcl
sbbb
jbe
xor
in
outsb
push
fstps
jo
jbe
jmp
js
mov
movsb
pop
lods
hlt
mov
xlat
icebp
sub
shll
imul
aas
es
pop
jl
clc
mov
xor
idivb
dec
rcll
insl
sub
xor
and
subb
inc
push
rorb
mov
cmpsl
das
sub
adc
cli
mov
push
adc
lcall
xchg
int
cld
nop
sbb
jge
loop
rorl
inc
adc
ja,pt
adc
cmpsl
dec
push
notl
sti
or
mov
xor
fcompl
sub
lock
movsb
std
pop
add
test
in
cmp
and
adc
lock
ret
addb
dec
jns
sti
fwait
fwait
mov
cmp
data16
add
clc
cmp
mov
mov
int
mov
jns,pt
mov
ds
ds
sub
scas
pushf
pop
jno
xor
addr16
je
lret
out
cmp
xor
test
xchg
cmpsl
push
fs
ds
addr16
shll
in
inc
jp
subl
out
mov
add
add
pop
into
jge
shrb
lret
pusha
out
pusha
mov
aad
xchg
sbb
int3
ret
inc
xchg
xchg
sahf
loopne
push
out
add
lods
mov
cmp
incb
sub
xchg
sub
mov
mov
mov
popa
mov
push
bound
sbb
enter
dec
fisubrl
fiadds
lcall
xor
xchg
aam
dec
dec
orl
out
xor
shrl
movsb
je
pop
fs
sub
fcompl
inc
lea
lahf
jl
pushf
mov
inc
and
cmp
enter
inc
push
es
sub
bound
in
xchg
or
or
test
subb
pop
shr
dec
mov
aam
mov
outsl
rclb
mov
add
ds
jbe
movsl
xchg
add
and
fistpl
sub
sub
fucomp
xchg
jle
push
mov
mov
sub
addl
mulb
stc
loop
ficompl
mov
sub
push
decb
lret
js
outsl
insb
sub
adc
sbb
or
cli
mov
cmp
mov
jp
cmp
mov
and
cwtl
jo
mov
xchg
sbb
mov
bound
lock
ljmp
mov
adc
sub
dec
add
je
cmc
out
jb
adc
xchg
pop
out
sub
cli
popa
mov
out
jge
js
das
xchg
insb
int
dec
jmp
xor
adc
mov
das
aaa
cmpl
enter
repnz
pop
enter
pushf
sbb
and
inc
fimull
gs
xor
or
push
les
stc
inc
test
push
jecxz
xchg
and
imul
test
fwait
mov
xchg
xor
bound
push
push
lcall
scas
push
dec
or
test
loopne
ds
mov
mov
icebp
mov
frstor
shrb
add
xchg
jo
clc
sti
dec
fwait
ret
dec
cmpsb
movsb
mov
xchg
or
pop
dec
fsubrl
xchg
iret
jmp
or
add
fcoml
pop
rol
jno
fwait
and
in
jp
xor
fcom
sbb
push
nop
fldt
hlt
testl
xchg
adc
clc
lds
setle
sarl
mov
mov
jbe
xchg
std
fwait
jnp
cli
std
lds
sbb
push
leave
repz
loope
mov
out
negl
push
push
pop
data16
addr16
adc
dec
jecxz
inc
popf
jl
mov
adc
test
pop
std
jb
sub
xchg
add
cli
adc
fstps
lock
dec
cmpsl
cld
jae
jo
out
stc
repz
insb
sub
gs
inc
dec
sbb
mov
lret
aas
mov
dec
add
ljmp
and
std
xchg
push
xchg
clc
sbb
cltd
jmp
int
jle
pop
and
aaa
jno
imul
xchg
in
dec
rcll
fs
in
testb
enter
dec
xchg
inc
cli
cmpsb
push
cli
jo
faddl
into
inc
jge
push
das
sahf
and
inc
sbb
push
adc
fcmovnb
fisubrl
sub
cmp
mov
std
pop
add
push
add
mov
adc
test
sbb
in
scas
or
stc
fisubrs
jmp
aam
gs
mov
mov
int
cmp
ltr
das
mov
pop
repnz
popa
aam
aaa
xor
mov
movsl
pop
jg
dec
dec
jg
jae
loopne
and
mov
push
push
jge
arpl
cltd
aam
loop
mov
repnz
test
rorb
fwait
mov
dec
insb
test
arpl
test
jmp
jae
sbb
dec
int
icebp
cmp
push
fstps
fisubrl
bound
out
mov
enter
dec
pop
adc
cltd
sub
aaa
sub
orl
ja
outsb
and
movsb
shlb
sub
cmp
inc
push
and
stc
xchg
lahf
es
pop
sbb
int
lahf
jp
stc
sbb
adc
sub
mov
out
mov
das
cli
xchg
jb
dec
push
mov
fdivp
jmp
aas
and
lret
dec
jb
sbb
je
ror
push
push
jnp
xorb
pusha
push
and
pop
jmp
mov
hlt
test
fisttps
js
dec
in
pop
jnp
out
mov
mov
cmp
mov
pop
jp
xchg
cmp
aaa
push
mov
sahf
push
jmp
mov
inc
push
enter
jae
dec
minps
lret
push
xchg
arpl
scas
call
lock
loopne
sbb
out
cli
add
pop
cmp
sbb
shrb
sbb
mov
bound
and
icebp
push
daa
notb
mov
push
mov
das
pop
int3
mov
fldenv
nop
jb
pop
xchg
cmp
inc
push
jl
icebp
mov
insb
cld
int3
je
jp
int
sbb
lahf
jne
pop
push
jb
cltd
dec
pop
loop
addr16
test
or
sub
add
sbb
addb
inc
xor
loop
cmp
iret
loopne
test
pop
sti
mov
cmpsb
sub
mov
loopne
and
movb
xchg
mov
mov
jo
ficomps
or
nop
inc
movsb
inc
aad
lahf
cmp
push
sbb
cmp
or
es
jge
adc
dec
add
fcomi
movsl
xchg
int3
mov
push
push
push
adc
inc
jle
adc
adc
inc
icebp
push
sbb
sbb
notl
fs
fwait
and
pminub
popf
sbb
andl
out
mov
out
call
push
pop
xchg
fisubrl
pusha
dec
push
or
test
icebp
mov
dec
sub
pop
jge
mov
clc
fadds
mov
fstps
add
push
sub
push
and
cmpsb
repz
xchg
jb
add
loop
push
inc
sub
inc
jl
add
xor
mov
dec
aam
loope
lds
add
aam
jle
xorl
arpl
jbe
pusha
mov
push
push
cmp
push
xor
lods
je
add
into
mov
dec
pop
out
stos
lock
in
lds
movsb
cmpsl
es
adc
mov
in
leave
mov
movsb
cld
test
inc
or
push
and
jle
mov
das
pusha
pop
push
sbb
fstl
mov
les
inc
bound
and
jae
mov
pop
xor
cltd
jnp
adc
pop
test
sbb
fs
pop
jb
dec
xlat
in
mov
outsl
sti
rolb
mov
jne
sub
enter
adc
mov
sbb
arpl
daa
js
enter
jmp
fsubr
stc
xchg
rorb
mulb
arpl
mov
xchg
push
scas
xor
test
xchg
mov
xchg
jl
jae
fldt
xor
popa
aad
js
sbb
jno
and
out
loop
mov
in
xchg
sub
mov
sub
sbb
gs
cmp
fiadds
push
lods
pop
pop
cmp
mov
fcmove
sbb
aaa
sbb
test
movsl
xor
sub
cmpsl
sub
loop
dec
fisubs
mov
push
out
insb
push
fstp
out
mov
outsl
ret
pop
std
mov
ljmp
and
test
mov
dec
lock
ds
mov
xchg
sbb
add
cmc
std
xor
int
adc
pop
cld
movsl
mov
movsb
or
div
push
aas
ljmp
mov
cltd
mov
adc
in
das
or
push
push
sahf
clc
push
test
cs
shr
call
lock
mov
xadd
aad
imul
mov
xchg
pop
ret
gs
shrb
loope
sbb
and
adc
sub
cmp
pushf
mov
xchg
mov
les
in
adc
and
mov
sub
aaa
xchg
inc
cmp
insl
sbb
mov
mov
inc
xor
adc
jns
out
xor
jns
jecxz
sbb
sar
fidivl
cmpsb
adc
cmp
shrb
test
outsb
sbb
cmpl
enter
inc
je
cmp
jg
shll
sub
inc
lcall
cmc
cld
inc
nop
push
data16
cmp
xor
js
xchg
js
mov
subl
fwait
mov
push
fisttpll
stos
loop
ja
popf
xchg
xchg
daa
lea
xlat
pop
jle
lods
into
aas
or
jg
jle
pusha
scas
lods
mov
jno
or
mov
scas
out
mov
lahf
orl
popf
dec
aas
xor
mov
inc
aas
movsb
mov
adcb
repnz
test
mov
inc
not
mov
mov
mov
sbb
popf
jne
loop
push
adc
jno
inc
sub
cmp
mov
ret
gs
mov
pushf
lds
cmp
imul
cmc
dec
cltd
in
pushf
or
fsubrl
mov
jg
loopne
loopne
push
outsb
xchg
pop
outsb
clc
mov
cmp
xor
adc
mov
or
mov
and
ret
lea
es
and
out
sub
cmp
add
pop
insb
jns
sbb
mov
inc
lods
cs
xlat
or
enter
out
in
jbe
adc
adc
cmp
mov
jns
push
sub
pushf
and
cmp
mov
bound
sarl
add
mov
sbb
bound
mov
mov
in
mov
loopne
xor
adc
sahf
scas
fistl
ljmp
pop
cld
cwtl
bound
fsubs
lret
lahf
cltd
int
sub
les
js,pt
add
add
push
adc
lock
popa
xor
stc
mov
fsubr
scas
fisttps
add
repnz
dec
lea
dec
add
cld
stos
xchg
lds
sbb
dec
nop
ss
insl
push
andb
popf
iret
lock
rorl
das
mov
ss
test
lods
sbb
dec
mov
sbb
cmp
jle
dec
adc
and
mov
shr
xor
xchg
mov
push
lods
or
and
mov
insb
push
mov
and
inc
mov
outsl
mov
dec
insb
cmpsb
inc
stos
jae
mov
jne
imull
dec
lea
std
lods
int3
xor
pop
xor
repnz
adc
bound
imulb
roll
pop
test
or
mov
fisubs
sbb
sahf
lds
mov
dec
iret
daa
sbb
mov
mov
in
mov
cmp
cmp
push
jbe
fwait
pop
dec
adc
mov
adc
jl
sbb
scas
jnp
xlat
jae
sarb
xor
nop
daa
test
testb
cmp
sbbb
jg
fs
push
jae
sbb
popa
jge
and
roll
mov
dec
add
push
aas
push
jne
xor
scas
dec
mov
pop
rcll
sbb
pop
cmp
push
mov
mov
lods
xor
xchg
mov
jl
ja
fdivr
addr16
enter
adc
jge
lds
and
test
dec
lds
es
faddl
mov
inc
and
cltd
mov
push
sub
int
or
inc
mov
sahf
lods
xchg
pop
icebp
cmp
or
xchg
out
cltd
testl
inc
push
lret
jne
sub
ja
cmp
pusha
sbb
in
imul
insl
out
mov
add
addr16
leave
cmp
mov
jb
mov
idivl
jge
test
add
pop
fwait
insl
imul
pop
mov
mov
mov
sarl
pop
sarl
scas
dec
pop
push
cmp
popa
fidivrl
dec
ds
inc
mul
push
cs
dec
fs
mov
or
testl
sti
mov
fwait
xor
dec
movsl
sub
call
stc
xor
loop
pop
push
mov
or
testl
pop
fbld
fdivp
cmp
lcall
leave
adc
mov
push
jge
test
sub
jge
hlt
cs
dec
scas
or
adc
push
imulb
sbb
movsb
lahf
mov
sub
scas
xchg
inc
push
mov
int3
stos
call
jne
or
mov
subl
out
push
repnz
test
ficompl
flds
pop
jp
xor
xor
lcall
frstor
sbb
lods
loope
lods
jb
popf
rcll
repnz
imull
adc
sub
push
jbe
mov
sub
addr16
jbe
sub
fcompl
mov
mov
shl
gs
aam
push
xlat
shrb
bound
sub
mov
enter
shrb
lret
rcrl
push
shlb
fstl
pop
hlt
mov
test
cmp
add
ret
inc
enter
sub
and
pusha
das
mov
loop
repnz
neg
clc
jb
popf
and
lret
pushf
cmc
xor
gs
inc
int
mov
js
insb
lret
pop
mov
push
fidivrl
cmp
leave
outsb
xchg
ret
push
fs
hlt
jae
pop
xchg
pusha
lcall
gs
dec
cwtl
xchg
outsb
mov
pop
int
mov
cwtl
sbb
pop
mov
push
adc
fyl2x
pushf
mov
loopne
je
enter
dec
pop
push
push
jbe
sbb
and
cmp
sar
sbb
call
jae
mov
inc
pop
and
aaa
int
pop
or
rcr
dec
out
frstor
lret
aas
rcrl
mov
pop
cwtl
out
arpl
movsl
movsl
clc
jno
adc
cwtl
or
jl
pusha
ljmp
pop
ret
cmp
fldl
adc
daa
pop
in
sub
or
rclb
xchg
stos
xor
es
aaa
loope
outsl
mov
int3
mov
push
dec
mov
push
mov
mov
cmp
test
add
sahf
es
ds
jmp
push
in
mov
mov
jbe
andb
lcall
jmp
pop
mul
gs
add
mov
or
aaa
mov
jmp
push
pop
dec
sbb
push
sub
xchg
push
ds
add
inc
sarl
sbb
pop
sti
cmp
out
in
cmp
int3
add
aam
fsubr
and
mov
cli
stos
jnp
dec
mov
jbe
adcl
loope
mov
xlat
xchg
or
adc
jbe
sbb
or
cwtl
sbb
sub
adc
mov
and
xlat
mov
sub
std
test
hlt
add
dec
mov
sbb
add
pusha
repz
popl
mov
dec
dec
lahf
mov
or
shll
cmp
out
cmc
aam
jle
add
imul
mov
cmp
mov
jae
lea
xor
pop
mov
push
ret
loop
call
and
divb
jle
lret
rorb
and
popf
cmp
xor
xchg
mov
inc
data16
lret
pusha
inc
roll
mov
add
ja
lods
and
dec
adcb
jo
fwait
adc
sub
adc
xor
sahf
jne
jns
stc
idivl
lock
xchg
push
inc
movntq
daa
imulb
test
jbe
xor
inc
pushf
adc
out
add
cmp
push
loopne
rcr
addb
sub
out
or
sbb
or
cld
sbbl
push
pop
leave
ljmp
sbb
outsb
add
mov
and
inc
mov
out
je
mov
sub
test
mov
rol
push
jbe
add
arpl
push
rcrb
pop
inc
lret
test
jecxz
fcomip
cmp
icebp
mov
xlat
push
jmp
shlb
popw
mov
imul
push
ds
inc
repz
daa
aaa
pop
out
into
mov
cltd
mov
popf
xchg
sub
popa
ret
rcl
xchg
inc
insl
push
pop
das
mov
or
outsl
dec
icebp
sub
cmpsb
clc
sbb
repnz
std
adc
inc
and
or
adc
nop
sbb
scas
push
cmp
push
rorb
lea
subl
fistps
adc
out
repz
inc
or
lcall
movsb
xor
jbe
push
and
dec
add
dec
pop
loope
stc
std
inc
or
stc
bound
pop
lret
push
roll
and
add
mov
leave
jmp
xchg
fsubr
inc
jb
adc
shl
inc
jno
mov
jl
clc
repz
and
sub
mov
push
rdpmc
cmpsb
xchg
std
push
scas
test
mov
mov
jne
and
jle
imul
ja
inc
call
pop
xchg
dec
pusha
push
xor
cld
lods
mov
xchg
pop
out
or
cli
sub
push
mov
and
js
fdivl
movsl
jmp
ret
cwtl
ret
imul
xor
insl
popf
push
mov
cltd
add
xchg
mov
and
sub
scas
push
loope
imul
push
dec
cmpsl
clc
aam
push
pusha
xchg
lret
jns
fldcw
mov
rorb
adc
cli
icebp
add
mov
pop
xchg
icebp
movsb
dec
out
xchg
dec
nop
clc
jp
std
xchg
loopne
mov
cwtl
xlat
jmp
mov
jle
and
pop
sub
add
aam
xor
cltd
aas
jae
pop
jge
and
xor
clc
popf
hlt
ss
fistpl
mov
fcompl
pop
jl
mov
jg
sbb
or
mulb
sbb
clc
sbb
call
xlat
or
and
roll
jmp
cltd
push
add
lods
popf
je
cmp
sbb
push
mov
and
rolb
jne
inc
out
fwait
adcb
inc
cmp
les
js
enter
or
es
or
cld
push
je
mov
or
or
mov
adc
lods
sbb
sub
adc
mov
cld
dec
mov
add
jecxz
jge
vblendmps
mov
lcall
sahf
pop
mov
hlt
jno
xchg
popf
xor
push
jl
sub
lods
dec
imul
xlat
cld
cmp
mov
xchg
pop
dec
aas
and
lock
inc
jnp
jne
add
jg
mov
loopne
clc
insl
out
jno
push
or
push
cmpsb
pop
add
clc
clc
xor
lret
sub
cmp
rcll
cltd
push
inc
adc
or
sbb
and
movsl
out
fwait
adc
fwait
xchg
stos
dec
test
xchg
movsl
mov
aad
cwtl
dec
ljmp
dec
xlat
pop
mov
nop
pop
pop
add
xor
movsb
sub
mov
jge
jne
cmp
sbb
in
imul
mov
push
fcmovne
inc
nop
les
sub
sub
add
repnz
imul
orl
add
mov
add
dec
mov
push
jp
shll
insl
mov
sbb
in
mov
mov
mov
movsb
push
jb
and
decb
push
and
lods
test
mov
xlat
jns
add
es
daa
cmp
and
out
and
pushf
xchg
lahf
or
repz
daa
sub
add
repz
mov
add
jmp
into
sarl
xchg
lds
push
shrb
scas
sahf
xlat
test
sub
hlt
xchg
pop
jge
xor
cltd
xchg
in
inc
popf
cmp
scas
mov
sub
ds
xchg
mov
pop
mov
mov
into
mov
pop
mov
dec
and
push
movsl
or
cmp
out
into
loope
sbb
mov
pushf
insl
ljmp
and
or
pop
negb
add
sbb
xlat
stc
daa
ror
or
iret
js
out
lods
push
int3
sti
cld
pop
movsb
pop
add
jae
cmc
push
mov
loope
add
fsubr
stos
xor
pop
dec
mov
and
or
ljmp
mov
mov
jbe
loope
scas
les
mov
int
pushf
and
lods
xchg
sahf
pop
mov
pushl
jl
negl
cltd
fsubp
adc
in
inc
stos
fidivrs
or
mov
dec
push
add
pop
xchg
adc
test
and
mov
xchg
dec
jne
jae
sbb
enter
cld
pop
ret
std
mov
movsl
imul
cmp
repnz
out
and
mov
xchg
popf
adc
push
cmpsb
fisubrs
shrb
and
and
sub
jne
insb
sub
testb
sbb
push
addr16
dec
jnp
es
lcall
xchg
ror
adc
sub
pushf
jnp
imul
cmp
xchg
adc
enter
mov
adc
sbb
stos
in
push
aaa
xchg
hlt
fs
mov
jbe
push
scas
in
cwtl
xchg
mov
cmp
pop
repnz
mov
mov
or
idivl
push
ds
add
mov
fsubrs
or
inc
lret
mov
outsb
mov
cs
pop
aaa
or
lahf
addl
pop
movsl
test
call
popl
aas
inc
mov
ret
pop
xchg
arpl
lcall
aaa
popf
and
or
push
rolb
sbb
dec
leave
fwait
adc
sti
dec
and
scas
mov
pushf
cmp
cmp
xchg
or
lea
loopne
fmuls
shrl
mov
jb
fsts
scas
jb
xchg
dec
test
decl
sbb
push
lea
pop
inc
pop
cmpsl
stc
mov
popf
mov
inc
lods
test
leave
mov
cmp
fdivrs
xchg
push
mov
pop
mulb
inc
insl
ror
mov
adc
and
inc
nop
sbb
dec
mov
inc
outsb
and
adc
cmp
cs
cmpsb
pop
adc
mov
out
cltd
sti
cmc
int3
sti
sbbl
mov
paddusw
scas
dec
nop
pop
stc
mov
sub
sub
mov
mov
cltd
and
sub
fdivr
fnsave
and
jns
xor
int3
xor
pop
xor
cmpb
inc
push
fadd
sbb
jae
test
push
cltd
jmp
sahf
mov
clc
or
out
aam
inc
push
scas
mov
pop
outsl
sbbb
push
in
mov
xor
mov
lea
and
push
and
sbb
jecxz
mov
aad
mov
fs
iret
std
mul
sbb
arpl
or
imul
ljmp
xchg
inc
mov
pop
adc
in
dec
add
loop
outsl
dec
popa
daa
and
cmp
shl
push
push
mov
mov
mov
xor
test
mov
and
pusha
ljmp
xor
icebp
rcll
imul
mov
xor
inc
fldl
mov
mov
pop
sub
int3
hlt
adc
push
decl
mov
mov
mov
imul
iret
fbld
adc
or
in
xchg
lahf
and
mov
mov
adc
jnp
xor
jle
pop
scas
fcompl
shlb
fimuls
add
xchg
lds
inc
push
data16
jge
xchg
hlt
mov
dec
punpckhbw
xlat
bound
hlt
popf
jmp
sar
insb
shrb
andb
fistpll
or
sub
cwtl
mov
std
fisubl
es
movsl
jp
insb
pop
fbstp
out
mov
and
das
lea
mov
mov
adc
adc
rorl
stos
gs
stos
cltd
push
inc
sub
push
ret
adc
std
std
and
stos
sbb
ljmp
add
dec
mov
out
xor
dec
xchg
loop
mov
std
aas
aas
and
cmp
sub
aam
xchg
jne
and
jp
xchg
std
mov
lods
daa
sbb
icebp
mov
mov
jne
sbbl
lcall
xor
dec
repz
sbb
adc
xor
lret
xor
jl
mov
ret
cmp
cwtl
out
xor
and
pusha
clc
gs
sbb
cmp
mov
adc
mov
popf
cltd
test
ss
insb
jle
push
mov
or
jae
popa
in
mov
sub
mov
aaa
sbb
iret
cld
inc
mov
popf
test
jnp
lahf
cltd
jb
imul
ret
call
popl
movsl
cli
mov
into
cwtl
rcll
out
mov
dec
xchg
js
pop
stos
dec
pop
cmp
lock
jbe
mov
add
sbb
out
and
ret
jg
dec
sarb
sub
xchg
insl
arpl
lds
lahf
lahf
scas
int3
test
push
sbb
ss
mov
or
lea
dec
shlb
mov
insl
rcll
sbb
xchg
ret
into
lcall
lcall
add
push
shlb
xchg
clc
add
rorl
lods
test
mov
xchg
xchg
sar
movhps
adc
and
cmp
std
fadds
cmp
pop
lods
pop
idivb
in
mov
cmpsb
popf
in
pop
clc
and
addr16
cmp
sub
clc
jo
enter
loopne
mov
push
xor
inc
in
rcrb
out
sarb
push
add
lods
data16
adc
hlt
repnz
movsl
mov
sbb
mov
popa
test
xchg
mov
mov
and
sbb
pop
cmpsb
cmc
dec
test
negl
ret
pushf
fists
rcrb
sbb
ret
dec
out
xor
cmp
push
rorl
and
iret
in
xchg
lods
test
repz
lock
dec
or
scas
sub
je
add
aad
ficoml
notb
xchg
ret
mov
add
sti
je
jle
in
mov
jge
mov
call
rcrb
outsb
dec
and
ds
push
xchg
cmpsb
jmp
js
mov
and
pop
jne
out
scas
xchg
les
and
pop
ret
adc
sub
mov
bound
sbb
sub
ds
test
sbb
leave
mov
mov
test
or
js
test
jecxz
lea
xor
fldenv
dec
or
sub
dec
xchg
jne
lahf
and
pop
outsl
mov
pop
and
jecxz
mov
xchg
sti
push
push
add
adc
xor
xchg
scas
xor
rolb
jge
loop
sti
andb
jle
xchg
in
pop
leave
insb
sub
das
sbbl
and
scas
add
cs
cld
and
popa
cmp
in
lahf
pop
sbb
sub
loop
jmp
mov
les
pop
jl
notl
dec
imul
dec
gs
das
push
push
bnd
imul
sub
push
jmp
cmpsl
hlt
nop
divl
repnz
mov
mov
add
push
enter
mov
and
push
adc
jmp
es
loope
inc
or
shrb
leave
pop
das
outsl
sub
divb
or
stos
imul
xorb
adc
pop
mov
pop
jns
lds
ss
jmp
mov
hlt
mov
lea
pop
stc
xlat
push
inc
iret
cmp
ds
mov
jg
loope
xor
inc
adc
adc
add
sub
outsb
jmp
add
dec
jge
push
pop
js
mov
movsb
mov
or
mov
mov
cmc
lock
movsl
int
mov
lea
fs
or
push
data16
aam
cli
movsl
xor
clc
adc
addr16
clc
ret
push
test
lret
cld
mov
cmp
mov
pop
aad
fcmovbe
jmp
xchg
xchg
addr16
push
imulb
xor
and
stos
iret
or
and
sbb
push
je
out
cwtl
pop
add
and
xor
test
in
aad
and
inc
mov
lods
fdivrl
popa
clc
cmp
aaa
cmc
xchg
push
test
ss
or
adc
inc
setge
insl
mov
divb
push
nop
pop
cltd
ljmp
xchg
inc
sti
aam
or
adc
roll
inc
dec
mov
imul
sarl
xchg
mov
sbb
outsl
nop
push
pop
adc
mov
roll
lret
enter
fs
push
lret
or
mov
call
sbb
in
addr16
lea
sbb
or
mov
adc
pop
inc
and
sbb
add
add
std
movsb
insb
cmpsl
xchg
outsl
mov
lods
icebp
test
sub
jl
andb
mov
pop
fldt
sbb
push
inc
sub
jp
dec
in
data16
cmp
and
rolb
ja
cwtl
ficompl
mov
ret
insl
jl
mov
adc
cmp
xor
dec
add
cmpsl
lret
std
pop
sbb
mov
inc
add
test
sub
xchg
mov
aad
mov
outsl
pop
loopne
ljmp
xor
xchg
push
shr
push
jb
xor
ljmp
ret
stos
mov
lret
sub
rcrb
ds
js
cld
daa
and
pop
xchg
ret
and
stos
mov
jo
sahf
jg
cld
adc
jle
movsl
dec
push
adc
loop
sub
mov
pusha
jge
dec
in
dec
sbb
jl
lahf
sub
mov
ja
mov
cmc
jnp
push
test
adc
mov
rcrl
outsb
stc
push
rolb
pop
fwait
gs
mov
pop
jg
mov
mov
adc
push
inc
insl
xorl
fists
pop
ret
xor
push
stos
repz
or
into
sub
sub
hlt
mov
repnz
push
dec
stos
mov
jns
dec
fsubrl
cmpl
cld
sub
and
decb
rcl
in
das
lret
jns
adc
dec
pushf
in
arpl
adc
ja
mov
mov
jb
dec
shll
pop
push
and
mov
je
cmpb
xor
pop
lock
inc
stos
push
pop
jnp
ds
mov
cmp
lock
xor
into
pusha
push
aas
add
lahf
and
mov
add
rclb
call
cltd
inc
cmp
fadds
push
popf
dec
inc
inc
out
sub
addr16
insb
inc
stos
clc
mov
sub
push
cmc
adc
push
loope
adc
sub
push
cmpl
lods
pop
repz
push
dec
mov
pop
dec
jl
ret
sub
jl
and
add
sub
aas
and
nop
icebp
push
xor
stos
jge
ret
cli
adc
cmp
enter
push
and
cmpsb
xchg
daa
sbb
std
cmp
enter
mov
mov
adc
movl
ffree
call
stc
push
nop
loop
fcoms
sbb
cli
xor
or
rcl
lcall
mov
loopne
jg
call
jno
cmpsb
and
cli
jmp
sub
push
sbb
cld
pop
fnsave
loopne
je
loopne
std
cmp
sub
jp
xchg
stos
mov
add
testb
mov
fs
sahf
xchg
pushf
jmp
pop
popf
addr16
dec
scas
mov
cmp
je
cmp
and
xor
mov
fadds
out
in
test
lds
mov
mov
lret
fs
in
add
ret
out
adc
xchg
mov
cmc
ja
dec
mov
pop
pop
loope
lahf
sahf
jae
cmpl
ljmp
bnd
mov
add
subb
lea
scas
lock
inc
pop
add
setne
fisttpll
dec
pop
int3
lcall
jge
stos
jne
dec
pop
push
mov
sbb
aaa
mov
push
vorps
push
insl
pop
int
sti
mov
pop
imulb
sub
and
jmp
shlb
fwait
xchg
xor
aad
push
lret
mov
ret
lds
call
pusha
inc
pop
stos
cmp
insl
ret
cmpsl
pop
dec
clc
add
jmpw
roll
push
mov
loope
mov
add
sbb
push
dec
dec
jp
add
adcl
pop
mov
xchg
mov
inc
xor
push
popf
lods
sahf
outsb
in
in
adc
movsl
jge
inc
jmp
icebp
inc
insb
icebp
ljmp
push
lock
in
cmp
mov
lret
sahf
jnp
das
sarl
iret
and
pop
lcall
add
das
int
mov
decb
cltd
inc
jge
sub
xchg
in
pop
mov
shlb
sti
and
xor
popa
scas
push
loop
fistpl
fsubrp
scas
push
dec
shl
cmc
imul
test
aaa
out
lods
xchg
iret
loopne
daa
mov
mov
gs
jmp
sbb
or
in
jo
ret
push
ljmp
sahf
dec
cltd
mov
stc
xor
jns
outsb
loopne
arpl
fs
cmc
mov
repz
push
mov
mov
test
adc
repz
push
data16
jg
pop
mov
push
fstpt
jl
cmpsl
and
push
movsb
cld
dec
add
imul
lret
sub
or
outsl
sub
jns
or
leave
in
js
mov
out
dec
cmpsl
jb
adc
rolb
xorb
cs
pop
jp
sub
cmc
and
mov
ja
addr16
push
testb
mov
in
dec
xor
jne
shlb
adc
imul
pop
fld
dec
xor
cmpsl
xor
sahf
imul
lret
mov
xor
mov
mov
pop
movsl
movsb
paddd
call
ret
idivl
fimuls
rep
cmp
pop
lret
gs
jo
push
adc
mov
ds
int
jp
shrb
cmc
xchg
mov
mov
dec
cltd
addr16
fwait
int
cmp
jmp
jns
xchg
pop
cmp
and
cmp
test
cmp
or
sub
mov
push
push
jmp
or
xchg
cmpsb
adc
cmp
jl
divl
sti
sbb
add
mov
adc
sub
inc
mov
push
outsl
loopne
push
push
in
call
loope
cmpb
aas
fnstsw
cli
mov
jb
stc
imul
lods
sub
int3
push
inc
dec
pushf
sbb
jge
adc
inc
add
jmp
ja
ret
les
pop
aam
mov
inc
add
xor
pop
ds
dec
icebp
sahf
jnp
bound
addr16
jbe
int
in
andnps
cwtl
jae
dec
dec
addr16
cmp
xor
rcrl
mov
ss
pop
sbb
addr16
cli
pushf
ret
jge
sub
adc
lcall
std
xor
lds
add
out
jge
cs
mov
jle
out
jmp
jecxz
xor
in
jle
enter
mov
ljmp
out
push
push
mov
gs
jecxz
lds
or
mov
dec
out
push
fadd
imul
sbb
daa
rcll
stos
in
shll
lret
les
sbbb
and
sti
js
and
mov
jmp
dec
pop
sub
push
sub
decl
adc
fiadds
xchg
adc
rcll
lret
sub
mov
fbstp
movsb
mov
fwait
movsl
loopne
dec
sbb
mov
lahf
ljmp
das
roll
sub
rclb
insl
pop
andl
out
les
testb
cmpsb
inc
call
insb
test
inc
add
inc
loop
sub
pop
xor
mov
sbb
in
mov
push
in
mov
jge
or
in
dec
mov
mov
mov
pop
inc
leave
pop
ljmp
push
icebp
and
push
pop
push
js
jno
and
test
xor
aam
mov
fdivp
sub
dec
inc
cmp
dec
icebp
in
cmpl
inc
inc
or
insl
jge
stos
jg
lods
into
ror
pushf
sub
sbb
in
mov
lret
enter
inc
add
cs
add
fisttpll
jae
or
mov
mov
fsubrs
orb
xchg
sbb
js
imul
pop
mov
xchg
sub
rcrl
dec
sahf
test
sbb
adc
es
mov
cmp
and
imul
clc
fadds
jo
add
lahf
stos
sahf
fs
adc
cs
sbb
jne
scas
dec
xchg
xor
inc
rcrl
stos
jg
push
stc
sbb
enter
pop
imul
int3
daa
clc
adc
jns
gs
lds
je
hlt
inc
adc
inc
stc
ror
push
aam
dec
push
xchg
clc
sbb
repnz
lods
sbb
loop
ljmp
push
mov
fidivl
xchg
repnz
leave
and
push
cmpsb
jmp
cmp
rclb
xor
adc
in
adc
push
mov
in
dec
int3
data16
call
test
or
dec
push
add
and
shll
fildl
pop
adc
es
lret
addr16
pop
aad
jnp
dec
cli
cmpsl
gs
pop
xchg
inc
cmp
push
imul
mov
leave
fisttpl
pop
cmpsl
fwait
add
push
lcall
and
in
fmuls
cmp
adc
cmpsl
arpl
out
in
ljmp
and
and
dec
mov
arpl
xor
stc
ja
test
xchg
imul
hlt
cmc
mov
lds
int3
adc
imul
mov
dec
popf
cmc
jno
test
fstl
addr16
call
int
inc
mov
mov
bound
popf
mov
dec
aas
pop
inc
sub
mov
dec
std
in
cmc
jl
ret
adc
inc
push
clc
cli
mov
fcoms
xchg
into
ljmp
mov
lods
dec
sub
jle
jno
jecxz
mov
aaa
push
mov
dec
cmpsb
sbb
mov
push
inc
push
lret
xchg
aaa
and
lahf
pushf
mov
mov
jno
jge
sahf
pop
movsl
pop
incl
push
push
mov
pop
cmp
aas
sbb
aad
sbb
out
jo
leave
and
sub
xchg
pop
xchg
mov
lret
mov
repz
lcall
pop
shlb
adc
add
adc
imul
xor
mov
cwtl
pop
cmp
and
call
dec
cmp
fmull
sub
les
xchg
jle
xor
inc
mov
idivl
mov
pop
sub
jae
fs
and
jmp
aad
js
add
xchg
dec
lds
cltd
cmp
loopne
cwtl
sahf
adc
jmp
sbb
xor
repz
insb
sbb
enter
push
flds
lock
xorl
call
xlat
hlt
mov
xlat
mov
xchg
mov
or
inc
pop
or
shrl
and
dec
sarl
in
psubsw
jno
push
push
sbb
rolb
out
daa
push
mov
inc
xor
stos
inc
push
rcrl
lahf
jno,pn
sbb
jp
pop
out
pop
cmp
adc
out
xor
leave
iret
pop
and
xchg
aaa
insb
std
dec
or
test
lret
test
or
cwtl
mov
push
inc
xor
fs
ficompl
jl
cltd
cld
fwait
and
dec
mov
push
xchg
mov
test
dec
dec
cmc
sub
std
xor
scas
xor
xor
repnz
push
inc
pop
pop
in
cltd
aam
push
je
leave
mov
rorb
xor
dec
aad
mov
mov
loop
int3
adc
pop
jg
mov
jae
and
pop
pop
push
jno
int3
cmp
fldenv
xor
push
mov
or
clc
rcr
mov
in
into
enter
dec
lds
popf
je
mov
data16
xor
cltd
jmp
dec
add
xchg
add
lret
loope
dec
cmp
dec
out
sbb
mov
sbb
push
shlb
ret
add
call
xor
add
mov
outsb
adc
in
xor
pop
and
imul
pop
dec
inc
inc
lret
shrb
fsubrp
daa
mov
enter
push
jb
push
inc
sub
lea
dec
fisttps
nop
cmp
xchg
or
aad
mov
je
lret
into
jg
add
sti
fsts
mov
inc
fldt
cli
ja
xor
jo
or
jmp
mov
inc
dec
pusha
sbb
out
addl
mov
movsl
js
or
mov
aaa
lods
jbe
cmpsb
fbstp
pop
mov
dec
ds
jnp
sub
xchg
scas
sbb
mov
sti
pop
test
ljmp
mov
movsl
jle
je
pushf
mov
push
inc
push
ret
movsb
adc
int3
outsb
in
pop
movntq
out
daa
outsb
adc
lcall
mov
pop
adc
hlt
mov
ss
sbb
or
or
ss
test
inc
hlt
xchg
push
push
push
test
jae
int
clc
mov
or
clc
inc
insb
sub
mov
push
icebp
repz
or
and
addl
shlb
mov
mov
stc
push
xor
cmp
fcoml
inc
sub
popf
icebp
mov
pop
mov
jecxz
test
test
xchg
out
dec
sahf
and
lock
jns
mov
imul
sahf
lret
insl
mov
js
faddl
sbb
lahf
andl
inc
push
jbe
inc
icebp
adc
outsl
inc
xorb
nop
cs
pop
lods
xchg
repnz
lahf
add
sub
in
cmpb
add
and
bnd
add
xlat
lds
xchg
cld
adc
popl
mov
jb
insl
mov
in
dec
sbb
xchg
stc
shrb
aad
or
mov
push
mov
inc
cmpl
in
cmp
retw
cmp
add
je
sub
lods
dec
aam
and
xchg
enter
pop
dec
decl
int3
lret
shlb
mov
int3
lcall
popa
clc
iret
ljmp
enter
push
push
pop
jo
shl
pop
pop
popf
addr16
xlat
data16
adc
lods
dec
out
inc
push
jne
jl
xlat
addr16
aam
sbb
cmc
aam
fwait
mov
mov
sbb
and
xor
iret
mov
sbb
mov
bound
inc
rcrb
jp
adc
dec
nop
cs
mov
and
pop
adc
xchg
xor
and
scas
adc
aad
xor
xor
lods
mov
jp
push
jae
lock
mov
inc
sbb
int
sub
cmpsl
in
push
ficomps
flds
pop
mov
ret
ss
cs
sti
stos
push
scas
mov
int
mov
fldenv
mov
add
xlat
adc
jge
test
add
ret
adc
push
adc
jge
xor
mov
bswap
xor
push
xor
xchg
jno
or
or
lcall
stos
cmpsb
mov
lret
push
cwtl
mov
xor
repnz
xorb
adc
ljmp
jne
mov
mov
pop
nop
push
push
pop
mov
scas
fildl
sub
out
cld
mov
dec
daa
popa
repnz
mov
inc
cli
mov
mov
test
data16
mov
fwait
loope
cmp
ds
into
ja
data16
add
jmp
pop
pusha
mov
jp
cmc
xchg
nop
push
lret
dec
mov
in
push
comiss
sbb
mov
mov
and
dec
js
push
es
mov
jmp
jmp
ja
cwtl
lds
and
imul
or
ret
daa
or
pop
insl
or
jle
clc
dec
ror
jo
lea
repz
cmp
cmp
lods
mov
mov
mov
loopne
jo
adc
js
shll
xor
repnz
push
out
add
cs
cli
mov
pop
js
adc
sbb
out
rcr
lods
es
sbb
aam
pop
xchg
in
jle
fnsave
add
xor
and
xor
jb
mov
std
or
fimull
xor
cwtl
mov
or
movsl
fwait
inc
jp
sub
sti
aaa
dec
imul
das
mov
sarb
data16
mov
test
mov
push
push
sbbl
inc
ds
or
push
lahf
out
cmp
cwtl
iret
xchg
mov
pop
fwait
adc
std
mov
inc
xchg
pop
data16
jmp
mov
cmpsb
push
mov
lret
rcrl
mov
stos
es
cmp
mov
aam
shlb
sbb
jle
mov
xchg
fs
lret
push
mov
cld
fisubs
outsb
and
xchg
dec
pop
bound
aas
xchg
and
popf
and
mov
arpl
sub
dec
mov
xchg
in
ret
sbb
xor
lods
test
push
in
cltd
mov
jb
sbb
js
popa
inc
pop
push
call
fwait
pop
mov
inc
insl
cmpl
lahf
imul
inc
mov
add
and
jns
cmpsb
loope
or
jle
jg
xlat
dec
ja
mov
xchg
xchg
test
push
mov
fsts
lock
cwtl
aaa
stc
movsl
movsl
mov
loope
test
push
sbbb
pop
sti
dec
insl
mov
jg
sub
fidivrl
sub
popf
pop
push
test
das
push
loop
xor
lret
fdivrl
xchg
xor
push
js
andb
and
inc
mov
adc
push
fistpll
pop
pop
mov
push
sbb
ja
pop
mov
fldl
xor
push
sahf
pop
ret
stos
cmpl
jmp
xor
cmp
sti
test
adc
adc
mov
lret
loopne
insl
jg
jbe
icebp
sti
xor
inc
sbb
and
aaa
push
in
xchg
mov
jmp
cmpsb
add
loopne
pusha
mov
xor
icebp
movsb
outsl
or
lods
adcl
push
test
pop
addl
and
jl
jge
jle
ret
pop
out
fincstp
ret
loopne
rcrb
jg
xchg
les
sahf
pusha
mov
mov
push
sub
mov
sar
ror
loopne
test
cmp
jge
sub
pop
in
out
jno
add
andb
popf
aam
outsb
test
push
mov
out
sub
jnp
stc
ja
ja
mov
setp
movl
les
xor
in
cmp
xor
push
add
out
maxps
cmp
cld
call
jo
movsb
pop
add
jbe
lret
call
push
scas
sbb
mov
mov
push
mov
lea
or
lret
sbb
push
pop
adc
mov
mov
sub
pop
cmpb
sbb
add
mov
and
subps
adc
mov
sbb
add
or
lret
repz
lahf
lea
cmp
pushf
adc
inc
or
nop
pop
popf
jno
or
mov
jmp
or
inc
mov
sahf
inc
cmp
in
jmp
inc
js
pusha
and
test
dec
sbb
jmp
adc
gs
inc
pop
mov
add
hlt
loope
loopne
and
cmp
shrl
and
dec
fwait
outsl
dec
inc
sub
fs
sub
cmp
sahf
imul
lret
or
mov
cmpsl
jnp
add
repz
ret
in
jge
cli
cmp
lcall
mov
out
mov
shl
adc
movsb
addb
sub
ja
rorl
or
sub
outsb
or
test
push
xlat
in
mov
out
in
sub
or
movsb
xor
out
cmp
call
lret
cld
mov
and
mov
xlat
shll
cs
scas
adc
in
cld
adc
mov
stos
or
shrb
push
xlat
loopne
inc
daa
pop
arpl
addr16
rcl
movsb
mov
dec
push
sub
inc
adc
inc
add
shrl
mov
push
fdivs
into
cli
repnz
pop
jo
dec
in
in
fisttps
xor
aas
je
in
mov
inc
ret
rcl
out
xchg
lods
mov
js
popf
mov
out
inc
inc
insl
jae
jne
test
cmp
loop
mov
inc
cmpsl
mov
arpl
arpl
pop
cmpsb
fwait
js
stc
scas
cmp
push
inc
and
cltd
xlat
addr16
pop
mov
xchg
bound
mov
adc
lret
xchg
pushf
mov
sbb
and
mov
sar
mov
add
fcompl
push
mov
cmpsl
xchg
in
inc
leave
test
inc
or
inc
popf
xlat
lcall
loop
or
inc
sub
pushf
jle
inc
jnp
pop
mov
adc
insl
in
pop
mov
adc
cwtl
in
dec
mov
stc
fidivrl
nop
inc
jb
sti
psubsw
add
inc
das
mov
out
out
jo
inc
and
inc
jnp
jl
aaa
in
adc
cmp
out
pushf
mov
jmp
test
imul
cmp
jae
jp
push
jecxz
mov
cmp
push
push
push
pop
sub
jecxz
lea
clc
push
test
es
push
push
cmpsb
std
mov
data16
das
mov
or
pop
pusha
in
jp
mov
push
push
jno
xchg
popf
fwait
add
mov
push
mov
sahf
add
mov
clc
xchg
mov
or
test
movsl
pop
mov
mov
jp
mov
in
sub
inc
xchg
fisubs
stc
les
sbb
jo
pop
mov
inc
sub
dec
in
mov
inc
movsb
clc
ret
adc
iret
inc
pop
lods
mov
inc
outsb
out
dec
out
push
pop
leave
xchg
xor
pop
in
add
out
testb
or
inc
cmpsl
mov
sub
add
cmp
je
mov
fwait
in
fldt
push
cmp
cmp
mov
sub
xchg
pop
out
xor
outsl
idiv
cmp
jmp
or
jmp
adc
ljmp
adc
dec
cli
jo
subb
adc
imul
int3
loop
mov
sbb
lret
jbe
pop
test
loop
fmuls
loope
cmpsb
fcompl
out
das
addb
jnp
pop
cmc
inc
cmp
hlt
lods
jp
fisttpl
mov
sbb
mov
insb
inc
aad
in
jecxz
in
lret
enter
cmpsl
cmp
inc
pop
mov
rclb
and
movsl
clc
xor
incb
imul
pop
lock
inc
dec
mov
out
inc
mov
pop
mov
aad
je
loopne
mov
add
xor
or
rclb
add
addb
pop
ret
push
dec
xor
xchg
sbb
test
jecxz
push
daa
cmp
xchg
dec
dec
repnz
mov
cmp
sbbb
pop
das
push
jbe
or
iret
leave
in
adc
or
lods
xchg
sub
aaa
lret
push
pushf
mov
cmp
in
sti
out
movsb
mov
sbb
push
cld
pop
cmp
mov
data16
mov
fwait
and
ja
dec
cmpsb
ljmp
adc
xor
nop
fidivs
add
sbb
iret
pusha
sbb
or
push
sbb
cmpsb
pop
pop
jle
and
clc
inc
adc
mov
imul
jnp
mov
inc
addb
pop
and
sbb
and
ja
ss
fiaddl
gs
push
jl
cmp
xchg
sub
loop
and
cmp
cmp
movsb
sbb
std
or
sub
orb
sub
cmp
gs
sub
jno
jbe
mov
popa
mov
and
or
adc
cmpl
test
movsb
xchg
fs
scas
in
fsubrl
push
out
out
rcl
das
les
cld
adc
cmc
fdivl
or
mov
aad
rolb
cld
jle
call
xor
jmp
jecxz
inc
fimuls
mov
jp
mov
bound
lret
das
mov
bound
jno
sbb
pop
jno
in
cltd
cmp
push
mov
loop
sti
daa
fimull
sti
cli
cmpb
pop
push
mov
or
movsb
adc
outsb
int
mov
in
or
repnz
cmp
cld
jbe
popf
sbb
jb
lods
jl
pop
jle
loopne
ja
popf
mov
jecxz
pop
div
push
dec
sbb
imull
dec
call
shll
mov
rorb
or
inc
xor
cmp
or
mov
mov
in
cmp
dec
xchg
cmpsb
enter
adc
xchg
sbb
sub
andb
mov
mov
sti
bound
lods
ja
adc
push
jo
and
push
and
push
dec
in
in
xchg
out
insb
cltd
mov
sub
pop
xor
subb
cmpsl
push
dec
les
and
and
adc
xchg
loop
sti
jae
sub
mov
jle
sub
in
pop
ljmp
xor
ljmp
movsb
mov
bound
and
pop
mov
xlat
xchg
add
mov
fcoms
xchg
mov
cltd
paddb
jne
fs
aam
xchg
sbb
inc
loop
imul
mov
add
cmp
test
movsb
jns
jns
shll
add
xchg
jle
out
fstps
es
xchg
jl
dec
mov
aaa
mov
pop
loopne
add
xor
les
fadd
sub
mov
scas
lea
sbb
mov
and
stos
test
les
stos
fstps
mov
fnstcw
fwait
repnz
and
dec
cmp
sbb
cmpsb
inc
aam
or
mov
popa
int
inc
cwtl
mov
sbb
add
cmp
es
es
push
mov
fwait
add
fisttps
jle
in
sbb
fcmovnu
roll
ja
cmp
in
mov
mov
mov
cmp
jp
inc
into
nop
jge
adc
inc
push
jmp
xchg
xor
lea
cli
pop
insb
pop
dec
push
icebp
rcll
dec
push
sub
in
mov
jbe
jp
mov
or
scas
adc
clc
not
push
xchg
daa
xor
call
xchg
lret
dec
jb
ret
out
push
add
rcl
jbe,pn
test
xor
mov
andl
pop
jmp
pop
dec
mov
addb
scas
movsb
orb
xor
or
xor
inc
movhps
and
insl
and
outsl
icebp
jl
jno
shlb
mov
inc
and
pop
mov
or
sbb
fwait
xchg
mov
cmp
mov
outsl
ds
fs
sbb
dec
push
pop
fs
lods
lret
ljmp
add
repz
sub
jge
jns
movsb
pop
stc
mov
push
push
into
imul
or
inc
das
in
adc
fcmove
sarb
mov
icebp
js
jg
mov
sub
push
pop
faddl
mov
aas
add
jne
stos
sub
xchg
imul
out
sub
daa
and
iret
jae
dec
in
mov
lret
lahf
addr16
pop
inc
pusha
push
jmp
in
xchg
aam
repnz
cmp
adc
lcall
icebp
stos
jmp
mov
hlt
or
or
mov
pop
adc
push
inc
sub
fwait
sbb
jg
lcall
pop
movsb
jnp
mov
xchg
jo
and
lea
movsl
fs
jne
push
push
arpl
int3
inc
xchg
ss
push
fndisi(8087
movsl
cmp
xor
insl
stos
inc
ret
fisubrs
push
dec
push
jmp
mov
repnz
or
xchg
ret
fsubrs
pop
fbstp
mov
jae
mov
xchg
push
mov
imull
call
add
pushf
dec
xor
js
adc
clc
xor
xor
mov
in
mov
or
mov
mov
or
stos
outsl
loop
out
pop
cltd
xor
xchg
fstps
shlb
in
das
fcoml
sbb
int
inc
movsb
das
push
jmp
out
dec
stc
gs
mov
mov
insb
push
mov
test
or
addr16
push
repnz
inc
rcl
loopne
arpl
rorl
cmp
xor
adc
aad
push
lock
ja
ret
fstl
imul
data16
out
movsb
test
aaa
jb
mov
fidivrs
jno
stos
add
notb
test
je
pop
rcr
push
mov
xchg
sub
xor
cmc
scas
push
mov
pop
jns
cmp
push
sub
aad
scas
xchg
shlb
fcomip
xchg
stc
mov
inc
pop
roll
cmpsl
ljmp
loopne
in
popa
popf
pushf
push
lods
jbe
xchg
sub
mov
sub
leave
cmp
lcall
pushf
nop
push
mov
xchg
jne
mov
adc
dec
ss
popf
fwait
jnp
mov
aaa
arpl
cmp
ljmp
sbb
inc
adc
and
movsl
jne
clc
aas
pop
insl
movsb
mov
push
pop
cs
mul
inc
jle
aad
or
jp
inc
repnz
inc
mov
aas
pop
testb
mov
jg
movsl
push
cs
les
push
jmp
cmpsb
insl
jecxz
jae
inc
inc
add
int
cwtl
and
and
pop
inc
mov
mov
scas
push
sub
loopne
jne
xchg
mov
rorb
push
jmp
mov
rorl
cmp
add
arpl
and
aas
add
int3
jbe
sti
push
gs
jl
xor
js
jnp
clc
inc
fwait
sub
sahf
shll
std
mov
jmp
xorb
pop
repz
shll
enter
lcall
xchg
lret
pop
xchg
inc
xor
mov
dec
lret
pusha
out
fnsave
fwait
mov
fdiv
xor
jecxz
das
xchg
mov
cmp
inc
dec
lods
clc
xchg
into
fmull
aaa
cmp
adc
ficomps
outsl
cmp
xchg
and
mov
in
push
inc
out
and
inc
std
xor
stc
rorb
push
xchg
jl
lcall
shlb
sub
lahf
or
jns,pt
jnp
divl
aam
out
or
loope
xor
ret
inc
add
sbb
xchg
adc
shll
fxch
out
push
pop
outsl
or
bound
fidivs
in
mov
jb
dec
ljmp
iret
aas
add
mov
int
mov
rclb
mov
inc
icebp
movsb
fwait
js
rclb
dec
jae
push
lock
mov
sarl
inc
jle
cmp
and
pop
mov
inc
inc
or
mov
pop
lcall
sub
imul
repz
icebp
ret
fwait
int
pop
mov
adcl
imul
sahf
repnz
xor
scas
inc
inc
jns
int3
fbstp
or
imul
data16
jbe
in
mov
jno
cmpb
or
and
mov
iret
fidivrl
sbb
fcompl
push
mov
cmp
lret
ljmp
cmp
shlb
lcall
iret
mov
insb
insl
jno
sbbw
iret
call
mov
lods
sub
ret
outsb
cli
adc
movsl
sbb
int
mov
or
inc
out
loopne
push
push
dec
pop
pop
xlat
sbbl
add
ja
jle
daa
aas
scas
xor
dec
pop
push
mov
stos
orl
in
out
int3
int3
lcall
dec
fldenv
rcrb
je
fwait
rcrl
lcall
or
movsl
out
xor
fistps
enter
ja
stos
jmp
push
push
ljmp
pop
push
and
push
int3
shlb
or
stc
dec
outsb
pop
into
out
adc
pop
lds
stc
xchg
inc
gs
cwtl
insl
xor
push
and
xchg
lahf
fistpl
lds
pop
or
in
cld
xchg
xor
dec
add
push
cld
cwtl
xchg
mov
sahf
les
jo
fsubrs
adc
adc
test
mov
outsl
pop
pop
pop
pop
in
pusha
call
bound
or
sbb
aas
sub
cmpl
add
jmp
xchg
shl
mov
push
lcall
sub
movsl
outsb
pop
xchg
mov
or
cs
adc
xchg
push
and
adc
stc
mov
sub
mov
clc
add
lahf
fwait
sub
js
sahf
jl
pop
pop
or
inc
pop
push
lds
xchg
int
shr
cmp
dec
mov
lods
movsb
popf
sub
mov
in
fnstenv
loop
adc
mov
dec
repz
cmpsl
test
mov
add
out
push
sub
or
dec
outsl
loop
inc
jge
in
hlt
fnstenv
loop
pop
mov
aam
mov
fcmove
aad
insl
xchg
and
cld
jno,pt
jns
xchg
negl
daa
sti
push
cli
arpl
lods
fwait
jecxz
imul
or
ljmp
and
sbb
mov
sar
divl
adc
mov
lock
cli
pop
in
sub
jb
stos
and
dec
or
jl
or
sbb
and
push
movl
dec
mov
shll
sub
mov
push
ret
popf
sbb
adc
inc
test
lods
daa
sbb
cwtl
push
insb
mov
popf
dec
rclb
call
movsb
lret
jp
stos
jp
push
or
sub
loop
fnstenv
inc
nop
iret
std
add
mov
ja
popf
scas
mov
cs
scas
mov
repz
dec
in
int
pop
mov
daa
push
or
sub
push
mov
mov
stos
add
push
andl
inc
jge
sbb
pop
jns
jb
mov
inc
in
popa
mov
pushf
push
ss
sbb
xchg
mov
jecxz
jl
aam
icebp
push
lods
test
xor
adc
add
dec
push
xchg
pop
scas
cmp
lahf
rclb
add
mov
add
and
jecxz
out
imul
gs
mov
btcl
leave
clc
pop
sub
dec
push
lret
out
xchg
scas
fidivl
mov
stos
addr16
repz
lret
out
aaa
push
pop
shrl
jb
jbe
cmp
fisubrl
fwait
jmp
rcrb
inc
subl
mov
jno
xchg
aad
jl
jo
mov
sbb
cmpsl
xor
mov
repnz
aas
sbb
jp
in
mov
mov
popa
lret
inc
notb
adc
xor
jb
lret
popf
sbb
shrl
fld
add
ss
imul
popa
ja
int3
and
data16
sub
xchg
insb
xchg
ljmp
shlb
shlb
jecxz
sahf
sbb
xchg
cmpsb
xchg
push
inc
sbb
roll
test
inc
loopne
adc
int3
xchg
pop
pop
sub
or
add
jns
xchg
dec
cld
call
and
or
sub
hlt
call
add
clc
xchg
cld
je
shr
xor
aam
mov
dec
aas
or
xlat
idiv
sub
cmc
dec
jmp
and
xchg
xor
jnp
or
jge
xchg
inc
lret
in
mov
and
add
clc
sbb
arpl
imul
mov
and
stc
pop
filds
pop
xchg
pop
incb
sbb
rol
cmp
data16
inc
jo
mov
lods
bsf
mov
ljmp
std
loopne
nop
scas
scas
jmp
pop
lock
mov
mov
fnsave
push
xchg
insb
insl
mov
pop
mov
out
mov
sub
or
jl
adc
jae
xchg
lret
popa
mov
aad
mov
jns
divl
clc
inc
inc
ja
imul
pop
xchg
push
stos
repnz
mov
in
xorl
mov
sub
cmp
dec
jae
pop
gs
loop
xchg
xchg
add
push
push
out
sbb
inc
cmpb
add
insb
push
repnz
cmp
sbb
xchg
inc
orb
shr
ss
pop
pop
icebp
xchg
inc
cli
xchg
sbb
scas
dec
mov
or
in
mov
icebp
mov
jle
js
mov
xchg
scas
xchg
sub
sub
mov
popf
sub
dec
mov
xchg
mov
jno
sbb
pop
inc
inc
mov
xchg
pop
and
cmpsb
mov
sahf
adc
aam
xor
lods
int3
mov
push
popa
andl
jp
add
sti
pop
push
mov
and
inc
or
insw
push
loope
lods
in
mov
push
movsl
push
push
mov
and
mov
jne
stos
imul
or
and
scas
cmc
shlb
mov
cmp
sbb
sub
stos
and
fst
push
mov
xorl
ret
pushf
arpl
adc
jo
movsb
xor
popa
jge
jge
push
aad
xchg
aam
int3
cmp
or
push
in
and
fiaddl
fwait
or
lcall
pop
bound
sub
push
xchg
into
sub
push
and
adc
or
popf
xor
fadds
iret
mov
popa
pushf
mov
xor
test
daa
xor
dec
nopl
adc
or
inc
fsubs
cmp
inc
out
movq
push
inc
inc
adc
push
pop
xor
dec
fsub
and
sub
xor
jle
jb
bound
fdiv
mov
pop
and
icebp
xchg
mov
sub
fisubrs
int
aaa
adc
aaa
push
and
xchg
dec
data16
stc
and
mov
insb
decb
jae
shll
sub
adc
mov
or
or
jno
dec
mov
int3
xchg
js
ret
xlat
lea
pop
loop
xor
cmp
mov
push
repz
das
adc
xchg
mov
mov
in
inc
repnz
popa
sbb
int3
adc
inc
sbb
fcompl
in
shrl
pop
and
inc
xchg
cmpsl
sub
sub
mov
mov
mov
mov
int3
enter
xlat
nop
movsl
push
into
ljmp
sub
or
sub
mov
adc
xor
xchg
mov
sarl
mov
orb
mov
jp
mov
cwtl
mov
sbb
adcl
insb
mov
adc
push
jecxz
shlb
clc
sub
outsb
sti
cmpsb
push
imul
call
int
sbb
imul
cmp
inc
push
push
push
cmp
dec
fs
imul
mov
pop
dec
popf
outsl
mov
mov
mov
jnp
xchg
in
sub
dec
lcall
dec
adc
in
std
adc
repz
ja
push
dec
mov
xchg
imul
fbld
sbb
mov
out
jg
xchg
outsb
mov
jecxz
dec
arpl
negb
and
scas
cmc
adc
in
or
push
and
enter
and
insl
inc
mov
mov
jecxz
sbb
jo
xchg
fisttps
movb
xchg
insb
pop
mov
cwtl
hlt
add
jae
mov
test
sub
mulb
sbb
imul
mov
out
leave
sub
dec
sbbb
mov
cs
add
movsl
add
xchg
or
sub
pop
xchg
dec
push
stc
xor
push
jecxz
shrb
xor
stc
add
cmp
xchg
jecxz
xor
in
enter
xor
fimull
inc
inc
fstl
jge
xor
ret
jbe
sti
popa
aad
lret
cltd
mov
cmpsl
pushf
push
repnz
sub
push
mov
loope
in
ret
hlt
push
aas
mov
lret
or
xchg
pop
ret
stos
inc
jns
enter
cmp
and
popf
into
lds
jmp
rcrb
mov
pushl
push
popl
scas
in
outsb
repnz
mov
push
inc
jns
test
push
insb
lcall
and
cltd
mov
push
push
dec
test
pop
and
lret
sub
lock
sahf
aas
cmp
mov
hlt
push
mov
mov
daa
push
daa
ss
or
repnz
pop
push
inc
stos
subb
inc
xor
adc
out
sbb
mov
add
mov
pop
inc
mov
daa
push
clc
pop
xlat
fmull
jae
pop
jnp
xor
rolb
push
jp
jbe
loopne
jns
jb
es
cmp
jno
push
sub
outsb
repnz
xor
jp
mov
fstpl
sub
int
int
scas
in
mov
xor
sahf
pop
sub
mov
mov
rolb
jno
in
clc
gs
and
ja
pusha
dec
pop
adc
shrb
nop
jl
aas
add
xchg
mov
sub
pop
pop
hlt
popf
mov
outsl
inc
inc
cltd
rorl
pop
lahf
add
outsb
bound
daa
lods
xor
ljmp
push
loop
fisubrl
mov
ss
repz
dec
push
cli
or
sbb
cltd
insl
mov
dec
jns
mov
jnp
mov
add
jns
xchg
pop
fsubr
sbb
adc
test
adc
xor
mov
and
inc
sarl
cmp
orb
and
and
mov
dec
iret
xor
aad
adc
xor
leave
pop
xor
sbb
test
jp
push
jns
xchg
jp
mov
lcall
sbb
sub
or
xor
pop
mov
pop
cmp
fsub
loopne
fs
arpl
sub
loop
add
aad
cmp
loop
les
add
push
std
pop
imul
pop
mov
add
and
xchg
shrb
xor
sbb
sub
addb
cmp
les
sub
xor
sbb
xor
test
lock
cmp
loopne
inc
inc
shl
xchg
movl
pop
sbbb
ljmp
jp
push
push
xor
cmovb
dec
and
iret
lds
mov
fcmovu
out
orps
push
pop
loope
or
xor
xor
mov
xchg
out
sbb
pop
xchg
sub
pusha
sub
add
sbb
push
cmpsb
jne
inc
pushf
dec
jmp
dec
out
mov
sub
out
push
mov
cld
mov
aam
sbb
cwtl
jno
rolb
jg
push
xchg
inc
add
stc
fidivs
cs
lret
push
jecxz
add
insb
ret
ss
jp
cld
into
jecxz
leave
dec
outsl
xchg
dec
jp
test
pop
insb
js
cmpsl
adc
arpl
outsl
inc
xchg
dec
gs
push
push
gs
push
or
add
push
push
popa
sub
cwtl
rolb
fists
inc
addr16
leave
leave
rcrb
xor
test
sbb
push
ret
mov
lret
fbld
es
mov
mov
or
gs
mov
jl
popf
stos
mov
mov
add
jmp
jne
adc
xor
cs
cltd
je
mov
push
push
mov
movsb
mull
push
or
inc
lea
lcall
push
cmp
pusha
nop
enter
dec
pop
sbb
lret
cmp
push
aas
fsubs
dec
mov
out
jns
outsb
dec
lahf
loopne
and
cmpsl
jo
xor
pop
js
push
sahf
mov
cltd
adc
inc
aad
stos
ret
pop
add
ss
jbe
dec
sbb
int
stos
popaw
xchg
sub
loope
arpl
cld
pop
inc
hlt
adc
movsb
movsb
testl
xchg
lahf
cmp
cmc
mov
leave
jo
sub
sbb
fnsave
xchg
jne
xchg
jb
addr16
pop
stc
dec
loopne
sub
sbb
sbb
push
fcomps
push
mov
ficompl
jae
sub
push
ret
cmp
xor
pusha
mov
scas
mov
or
aad
pop
mov
mov
and
cmp
push
outsl
or
jbe
add
xor
dec
xchg
sbb
dec
or
xor
jnp
add
pop
mov
ds
ds
sub
push
and
sbb
mov
or
xchg
pop
jbe
mov
call
aaa
out
cmp
cmpsb
ret
xlat
out
inc
stos
popa
jbe
add
xor
xor
jecxz
pop
mov
loopne
rolb
cli
fwait
rcrl
or
mov
js
in
push
leave
lret
mov
mov
pop
and
mov
es
xor
cmp
icebp
mov
push
test
out
jae
int3
stc
adc
ret
hlt
scas
test
inc
mov
or
orb
sbb
push
lods
or
addr16
sti
xor
xchg
sbb
sbb
test
or
frstor
movsl
push
enter
sub
add
rep
mov
iret
arpl
jnp
lds
inc
pop
sbb
xchg
pop
ror
lahf
or
sub
mov
aam
push
xchg
imul
xorb
jl
dec
cmp
clc
je
testb
cmp
ret
add
push
mov
test
pop
jae
arpl
dec
jmp
dec
fistpll
in
arpl
in
xchg
inc
int
jl
xor
push
lods
inc
jmp
data16
inc
pushf
add
and
push
jmp
jno
ret
lret
insl
jge
aas
mov
outsb
mov
and
pop
mov
cltd
xchg
xor
cmp
mov
dec
sbb
repnz
ds
dec
cmp
sub
test
push
mov
outsl
pop
sahf
inc
shr
pop
lods
stos
hlt
test
shrb
in
orl
out
aad
sbbb
and
int
stc
bound
xchg
mov
cwtl
pop
sbb
xor
int3
adc
push
rclb
mov
shl
int
mov
repz
ret
xor
adc
sahf
loop
popf
push
pop
in
mov
sub
add
mov
inc
jmp
add
push
shrb
hlt
arpl
jp
jns
jae
jno
lahf
add
out
cmc
les
adc
sub
jbe
aad
or
mov
and
fdivrs
imul
sub
mov
ret
jae
mov
jb
lret
ret
nop
inc
pusha
aam
ljmp
xlat
cmp
insl
mov
mov
dec
sub
fldenv
mov
mov
cmpsb
cmpsb
add
aam
push
mov
push
mov
stos
inc
and
mov
mov
mov
cltd
cwtl
mov
movsb
add
je
cmp
inc
or
aam
push
test
xchg
insl
repnz
fwait
inc
inc
popa
repz
adc
sbb
inc
sub
mov
aaa
out
cwtl
mov
lcall
push
fwait
int3
sahf
test
outsl
xchg
call
js
sbbb
cmpsl
jg
negb
mov
lret
push
cs
dec
roll
mull
xchg
lea
or
call
ljmp
pop
cmpsl
and
arpl
stc
mov
dec
cli
jno
cmp
outsb
lcall
popf
xor
arpl
xor
jbe
mov
mov
iret
in
adc
fldcw
jmp
lahf
mov
push
insb
std
pop
lds
jle
jp
in
out
sar
inc
movsb
outsl
std
adc
xchg
int
test
mov
inc
test
sub
lods
bound
addr16
pop
fsubrl
adc
mov
mov
js
sub
stos
add
out
stc
fidivl
inc
mov
xchg
cwtl
xor
movsb
jns
mov
and
add
pop
or
popa
push
pop
fiadds
out
sti
cmp
sub
jmp
aas
mov
idivl
xchg
cs
mov
lahf
or
sbb
add
cmp
xor
push
hlt
jecxz
mov
mov
xor
xchg
adc
aaa
xor
inc
jns
sub
jbe
insl
add
hlt
cli
lcall
fsts
lahf
lock
dec
cwtl
out
cmp
push
add
je
stos
pop
fstpt
fcmove
dec
xchg
ss
or
mov
iret
enter
push
jmp
out
jmp
aad
mov
loope
repz
test
cmpsb
adcl
dec
mov
imul
xor
aad
add
rcl
inc
mov
mov
test
nop
mov
mov
enter
xor
cmp
pushf
inc
xor
push
or
mov
pop
bound
aad
jnp
pop
stos
std
add
or
dec
es
mov
xor
subl
subl
sbb
pop
mov
lcall
mov
mov
push
out
sub
xchg
ror
adc
or
sarb
pop
iret
jecxz
aaa
fsubrs
lds
mov
jl
xchg
mov
sub
and
fadd
test
inc
pop
adc
xchg
out
lods
sahf
out
pop
dec
jnp
int
jns
xchg
xor
repnz
pop
or
pop
and
push
les
inc
mov
push
aas
mov
daa
in
imul
addr16
jmp
pop
push
pushf
dec
aaa
xchg
fs
orl
repz
cmpl
roll
insl
popf
andl
add
xchg
aaa
fwait
adc
push
lods
mov
in
mov
add
mov
daa
scas
mov
xor
add
jne
movsb
push
clc
lret
mov
test
aaa
sbb
fsub
cltd
xchg
test
jae
cwtl
jno
add
pop
hlt
inc
arpl
in
in
fwait
pushf
jge
or
dec
adc
jo
stos
sub
imul
sub
lcall
out
push
jp
loop
dec
sub
popa
push
sarl
adc
sbb
jmp
jbe
pop
int
clc
int
or
imul
jl
jg
andl
mov
push
stos
pusha
mov
pop
mov
fwait
int
mov
popa
stc
jno
daa
gs
addr16
jne
out
sbb
sbb
mov
or
inc
cmp
gs
lods
into
sbb
ficoml
frstor
in
xor
push
push
jne
dec
lock
push
xchg
inc
mov
inc
out
mov
cld
xchg
mov
cs
and
mov
and
xchg
xchg
sbb
fisttpll
inc
fcoms
jp
imul
clc
pop
and
jbe
lds
xchg
stc
scas
frstor
out
and
cmpl
lahf
pop
sbb
mov
inc
inc
pop
lock
xlat
clc
js
shll
push
test
call
dec
lock
inc
ja
cmpsb
push
and
imul
popf
xor
dec
out
or
out
jle
daa
sbbb
dec
jns
cwtl
inc
inc
and
scas
outsb
xlat
cli
push
enter
sub
popf
in
popa
jle
roll
enter
adc
cmp
jge
dec
mov
pop
xor
jmp
scas
jbe
aad
pop
and
das
arpl
mov
rol
in
cltd
fisubs
loope
xchg
movsl
inc
clc
adc
and
cmc
ljmp
add
repz
adc
movsb
pop
les
mov
not
or
xor
inc
sub
add
fldt
cmp
ja
out
in
ja
push
outsl
xchg
xchg
push
push
and
and
std
pop
xchg
jno
mov
cmp
sub
pop
mov
cmp
cmc
inc
cld
xchg
sbb
iret
lret
popa
aas
cmp
dec
pop
mov
xchg
rcrl
and
sbb
mov
popf
cmp
fsubs
or
or
add
cmc
xchg
mov
in
mov
and
into
sub
xchg
shrl
inc
or
inc
add
lahf
ljmp
int
adc
push
addr16
dec
loope
adc
fwait
push
mov
lcall
sbb
add
test
pop
aad
sti
push
fwait
xchg
sub
cwtl
int3
hlt
mov
push
fistl
loop
aaa
push
and
push
adc
ja
mov
adc
bound
jno
incb
fs
lock
and
dec
xchg
cmp
sub
add
aam
cmp
lcall
shrb
sbb
jns
icebp
pop
test
push
add
mov
pop
fsts
cmp
subl
in
adc
fisttps
leave
mov
mov
popf
dec
cld
out
add
aam
jb
movsl
loope
cld
call
gs
pop
das
dec
xchg
mov
xchg
fcmovu
ss
in
mov
popf
jge
mov
push
shl
adc
xchg
mov
aas
insb
dec
dec
sub
or
movsb
cli
push
testl
sub
fidivl
mov
ljmp
pop
sbb
inc
jecxz
stos
adc
stos
inc
loopne
js
lods
cmpsl
in
popa
xor
pop
jne
cwtl
clc
lds
mov
das
popa
sub
pop
dec
or
mov
subl
aas
pop
ja
adc
mov
mov
dec
insb
xchg
inc
rcr
sbb
ficomps
outsl
loop
jge
xor
mov
pop
ds
jge
xchg
mov
mov
pushf
jp
cld
xchg
loope
gs
bound
push
xchg
imul
pushw
cli
pushl
and
inc
pop
clc
push
xchg
lds
int3
or
mov
stos
into
inc
sbb
add
lods
call
ds
and
pusha
push
pop
aam
jle
xchg
ds
imul
ja
sti
xor
clc
adc
shl
sbb
pop
negl
dec
adc
add
inc
mov
and
jmp
subl
mov
xchg
aas
or
xchg
push
push
lcall
test
jl
push
ret
mov
jecxz
pop
js
and
les
push
je
cmp
dec
pop
cwtl
jle
je
aas
push
sub
pop
sub
aaa
sbb
test
inc
pop
insb
test
inc
sbb
xor
insl
sub
imul
bound
or
stos
add
fiaddl
jno
xlat
in
cmpsb
xor
pop
or
mov
xchg
jle
popa
loop
lds
cwtl
imul
rol
pushf
ja
rol
push
mov
into
js
imul
pop
stos
jno
adcl
xor
addb
fs
xchg
dec
es
xchg
pop
fsubr
adc
lret
and
and
addr16
cli
mov
push
cmp
test
jp
out
scas
dec
cmp
popl
mov
repz
mov
ljmp
in
and
pusha
popa
in
push
loope
mov
stc
or
xchg
push
in
sub
mov
xchg
add
mov
ror
insb
out
xchg
jnp
fadds
sbb
fucomip
inc
jmp
or
inc
clc
inc
sti
ds
fbld
fnstenv
mov
mov
stos
xchg
gs
xlat
or
mov
sub
fdivs
imul
cmpsl
add
cltd
cltd
jns
mov
mov
cmc
add
cmpsb
inc
mov
push
call
movsl
popf
cli
and
mov
mov
add
inc
adc
mov
xchg
push
fwait
aas
jbe
pop
lahf
arpl
mov
mov
aad
movsl
push
cmc
xor
xchg
mov
movsl
sub
int3
pop
and
add
dec
lds
and
insb
hlt
bound
test
pop
and
stos
fstl
cmp
pushf
or
pop
mov
and
xchg
insb
mov
pushf
xchg
inc
addr16
in
repz
xor
cmp
xorb
mov
pop
pop
pop
inc
into
mov
cwtl
push
adc
sbb
mov
aam
fisttpll
pop
and
lahf
clc
push
xchg
fstpt
in
jle
jnp
jg
mov
outsb
pop
mov
xchg
lret
es
xchg
das
cmc
leave
rol
or
adc
fists
inc
dec
dec
inc
inc
cmc
mov
mov
scas
push
sarb
lret
inc
fidivs
int3
lcall
addl
ret
sub
outsb
orb
sarl
gs
pushf
ss
cmp
sub
jbe
or
in
mov
ds
sbb
call
jecxz
movl
dec
aaa
pop
ret
fistps
cwtl
loop
ds
cld
ljmp
imul
pusha
sub
mov
fisttpll
inc
push
and
sub
aad
bound
mov
xchg
dec
in
rcrl
inc
pop
mov
sbb
or
cld
repz
and
iret
aad
inc
xor
dec
lahf
cmpsb
sti
mov
mov
pushl
dec
pop
scas
pop
add
lds
adc
xor
xchg
mov
cwtl
movsb
arpl
les
sar
push
xchg
sbb
xor
mov
pop
mov
cmp
ds
std
ds
negl
pop
in
pop
test
xor
xor
call
sub
push
xchg
or
std
jbe
mov
cmp
xchg
mov
sub
enter
ja
xor
and
aam
xchg
xchg
mov
sub
push
in
ds
out
in
dec
adc
ret
sub
movsl
dec
sahf
sbb
pop
cmp
mov
int
push
imul
or
jecxz
loope
xor
sub
xchg
fdiv
mov
push
mov
sub
cltd
fistpl
dec
loop
idivb
insb
xchg
mov
inc
add
or
insl
fadds
mov
xor
lcall
fiadds
inc
mov
jecxz
inc
mov
adc
mov
pop
or
jl
arpl
fsubrl
jbe
mov
add
mov
sub
fstps
hlt
fcomps
fwait
sub
or
fisttps
into
fdivrp
cmp
ds
push
mov
outsb
xor
out
and
sbb
out
push
lahf
aaa
inc
cltd
mov
dec
arpl
xor
into
pop
jmp
xchg
jno
dec
test
out
mov
xchg
jno
test
jb
ds
or
mov
fs
mov
pushf
fstps
pop
sbbb
scas
adc
or
movsb
xor
or
popf
push
in
mov
jmp
fxch
pop
add
addb
xchg
cmp
test
and
imulb
gs
push
lcall
out
pop
test
dec
and
lods
dec
cmp
dec
push
add
and
out
cwtl
in
dec
mov
insl
outsb
popf
inc
jmp
push
push
jb
jb
xchg
add
loopne
cmp
scas
cwtl
data16
mov
jle
jp
movl
push
sub
xchg
adc
xchg
scas
cmp
mov
pop
cmpsl
jp
lods
sahf
enter
mov
stos
mov
inc
pop
xor
xor
xor
sbb
inc
in
pusha
push
sbb
xor
clc
int3
pop
xor
jg
or
cmp
xchg
adc
xchg
sub
adc
loope
enter
leave
xor
fs
addb
sti
pop
adc
popa
pusha
fnstenv
cld
call
push
sbb
mov
push
pop
cmp
notl
push
and
test
insb
std
and
mov
dec
lcall
in
mov
sbb
notl
lea
push
daa
lds
into
sbb
lock
pop
push
adc
add
mov
xchg
fsubl
push
cltd
inc
icebp
sub
js
and
fdivr
mov
adc
and
fnop
xor
add
ret
or
cmp
pop
shl
mov
mov
jmp
cmpsb
cmpsl
ficoml
lret
in
sbb
fiadds
movsl
pop
sbb
clc
sub
jecxz
mov
dec
andb
mov
les
xchg
loope
push
loope
sbb
xor
ret
ja
xor
inc
jl
pushf
dec
adc
inc
adc
xchg
shrl
scas
lods
add
lods
sbb
pop
pop
push
les
add
sub
jno
orl
jb
sbb
mov
rcrb
or
fdivr
mov
faddl
imull
mov
fstl
popf
in
dec
pop
lahf
cmp
xor
sti
xchg
fiaddl
xchg
lods
insb
pushf
push
pop
sbb
push
movsb
lcall
cmp
mov
je
sbb
fistl
cwtl
ss
xor
sbb
xor
fs
sub
rclb
sub
adc
xchg
scas
jmp
xchg
test
mov
sti
rclb
add
hlt
insl
xchg
cmp
push
mov
jns
mov
push
cmp
xchg
call
add
pusha
shrl
test
repz
rcrl
xlat
adc
push
das
rolb
js
xchg
adc
jp
orl
fxch
push
pop
add
pop
push
mov
scas
mov
add
add
outsb
notl
ficomps
test
sub
push
jo
add
in
out
or
jecxz
jb
aam
adc
sub
lods
dec
divb
add
push
dec
cmp
jmp
xchg
mov
sbb
or
mov
scas
dec
lods
or
mov
dec
push
cmp
pushw
ljmp
mov
sbb
mov
xchg
sbb
jle
or
adc
dec
inc
mov
sub
xchg
fs
nop
xor
call
dec
jge
aam
mov
push
ljmp
push
and
or
mov
mov
or
push
xor
test
push
jmp
sub
lods
addr16
dec
shl
sbb
adc
xchg
movsl
inc
int
dec
lret
sub
inc
jno
sbb
adc
jne
es
jl
push
fs
lods
jbe
popf
jae
cli
push
fwait
xor
dec
cmpsl
mov
pop
lea
xchg
ror
pusha
ret
gs
xor
ljmp
fildll
push
lock
stc
mov
xor
and
xchg
sbb
xchg
mov
and
xor
ficompl
test
fdivs
aas
mulb
mov
das
sub
mov
and
das
in
cmp
lahf
lret
or
jmp
pop
insb
sbb
cmp
and
sbb
bndldx
cmpb
ret
mov
inc
jns
js
pop
sahf
sahf
push
cmp
and
jne
mov
mov
stos
adc
push
push
pop
fs
jae
shr
imul
sub
dec
lret
jnp
cmp
cmp
dec
mov
adc
adc
shll
mov
lock
jle
and
lods
jl
dec
lods
push
ficompl
sbb
sbb
push
sub
iret
movsb
aam
lds
jbe
add
and
imul
movsb
inc
lcall
dec
fdivp
aaa
and
jg
push
fld
or
inc
in
int3
pop
mov
fcomp
mov
adc
fldl
cmp
jge
outsl
mov
jl
out
loop
push
ucomiss
iret
add
ret
pop
je
sub
sbb
sarl
sbb
cmc
leave
out
dec
sbb
inc
jo
push
add
jg
jo
xchg
sbb
sbb
pop
popa
iret
movsl
in
xlat
mov
mov
jne
jmp
out
xchg
test
je
daa
icebp
adc
pushf
inc
lret
mov
push
dec
cmpsb
loopne
iret
xor
mov
mov
pop
mov
lea
lods
or
outsl
and
cmp
sti
xor
pop
xor
ficompl
jge
int
mov
xor
or
inc
add
pop
or
cmp
clc
cld
and
jno
xor
popa
fs
lahf
ffreep
jbe
mov
out
jg
scas
cmp
inc
imul
mov
popf
mov
pop
push
push
movsb
mov
cli
pop
push
push
outsl
test
stc
xor
jle
ja
and
mov
iret
xchg
rorl
add
fs
aas
xor
xor
xchg
pop
cld
mov
adc
and
adc
inc
stc
daa
pop
movsb
inc
fwait
lods
shl
aas
clc
iret
out
lahf
xor
es
adc
xchg
mov
jg
push
xchg
add
push
mov
xchg
ret
sub
fwait
jne
jmp
fnsave
dec
sbb
fcmovnb
enter
push
into
xchg
jmp
sbb
and
push
dec
outsl
rcll
outsb
test
ficoml
xchg
mov
lods
nop
jb
insb
fwait
scas
outsb
xchg
xchg
pusha
mov
outsl
mov
aaa
and
jae
xchg
ret
lock
repnz
cmp
or
push
lods
fstps
mov
pop
in
repz
mov
in
cltd
in
fcmovbe
lret
pop
push
shlb
mov
and
dec
push
mov
cld
cs
cmp
mov
xor
mov
xor
fimull
mov
inc
pop
pusha
testl
mov
aaa
divl
xchg
jbe
out
lods
xor
arpl
cmc
hlt
and
jge
jge
cmc
and
sub
xchg
ja
stos
shll
scas
icebp
xor
mov
push
inc
les
mov
xor
push
jecxz
pushf
cmpsb
xor
add
xchg
xor
and
mov
in
jbe
data16
sub
lcall
jmp
ret
mov
ror
lret
xchg
ret
sub
add
xor
or
sbb
pop
pop
inc
mov
inc
clc
cmp
adc
adc
dec
sbb
mov
fidivl
orl
pop
dec
push
fbld
sbbb
mov
aaa
aam
inc
out
mov
add
test
cmp
lcall
jl
xchg
cmp
xlat
push
add
or
xchg
test
dec
jae
outsb
add
jbe
xchg
jmp
inc
push
push
xor
test
sub
sub
sbb
repz
jb
xchg
jp
xchg
or
cmp
jmp
mov
pop
or
add
xchg
call
gs
imul
xor
xor
loope
orb
movsl
call
iret
dec
pop
xor
dec
sub
sub
mov
mov
sbb
repnz
jmp
sbb
adc
mov
aas
cmp
cmp
in
sahf
imulb
popf
mov
fdivp
out
mov
inc
sub
repnz
dec
test
add
xor
sarb
mov
push
ret
push
xchg
fs
jo
ss
in
push
jg
mov
dec
in
jg
dec
mov
popa
lods
jg
mov
cltd
lcall
loopne
dec
pop
and
cmp
sti
scas
push
pop
inc
adc
pusha
imul
js
add
xor
mov
in
insb
fldcw
pop
mov
into
sub
es
fildll
lods
popa
rorb
outsb
pop
push
aad
daa
int
add
aam
cmp
and
inc
xor
imul
push
mov
mov
mov
and
int
addr16
mov
pop
pop
xchg
iret
cmpsb
add
sbb
dec
jne
and
iret
mov
xor
das
dec
icebp
xchg
shrb
mov
lods
dec
jg
data16
bswap
lret
inc
int3
aam
test
cmp
imul
je
rcrl
mov
test
jne
mov
shlb
mov
dec
or
mov
int3
bound
pop
aam
dec
mov
pop
sbb
pop
out
sarb
jne
cmpb
movsb
add
out
jo
and
cwtl
xchg
sbb
mov
pop
cmp
insb
pop
fs
imul
mov
decl
imul
addr16
pop
in
scas
push
je
data16
mov
pop
out
sub
inc
add
fs
pop
xor
or
cmp
pusha
aas
pop
jle
inc
shll
out
bnd
pop
sbb
cmp
lds
pop
mov
sahf
push
insb
stos
dec
es
jae
fsubs
cmpsb
adc
outsl
fdivl
mov
or
ds
clc
movsb
xor
js
inc
gs
lret
movsb
les
cmp
inc
dec
in
arpl
clc
add
mov
push
mov
add
iret
jp
inc
jl
sub
xchg
or
push
fldcw
xor
push
push
jecxz
adc
outsl
push
pop
popf
and
or
addl
hlt
decl
bound
dec
push
or
cli
sbb
mov
repnz
lods
or
inc
and
outsl
pop
push
sub
add
add
rcl
insb
lds
cmc
xchg
cltd
xchg
or
and
in
dec
mov
push
cmp
pusha
xchg
add
jmp
xchg
dec
pop
adc
ds
out
cmpsl
imul
xlat
mov
mov
pop
addr16
jb
jae
lock
fs
pop
gs
arpl
sub
mov
stos
mov
xor
inc
ret
out
add
pop
cs
les
das
lcall
lods
fisubs
dec
dec
dec
inc
sub
in
or
push
sysexit
cmpl
mov
mov
aaa
xchg
imul
subb
jp
faddp
outsb
add
shll
jg
push
loopne
jmp
push
movsl
push
cmp
mov
mov
jne
inc
scas
cmp
jo
test
stc
mov
loope
adc
in
imul
dec
mov
add
push
pop
xorb
dec
arpl
push
fstpl
xchg
testl
xchg
lods
mov
cltd
jnp
mov
lods
mov
add
dec
xlat
mov
cmc
stos
xchg
xchg
jbe
adc
and
loopne
dec
lds
movsb
hlt
mov
push
cmp
jge
idivb
sbb
es
shrl
push
call
sahf
lea
mov
imul
adc
pop
pop
push
in
cmp
jge
negl
in
cwtl
cmc
fldt
or
ret
data16
cmp
push
mov
pop
ret
or
xchg
adc
pop
outsl
sub
dec
daa
fsubp
jle
js
sub
cmp
jnp
xchg
ds
incb
cmp
out
lods
inc
mov
aas
pop
rcrb
cld
popf
xor
fadds
inc
jl
or
shll
movsl
xchg
mov
stc
sti
cwtl
arpl
sbb
cld
jle
jecxz
nop
push
js
mov
or
cmp
mov
pop
ds
inc
fnsave
fcoml
adc
push
add
sbb
cli
mov
mov
mov
popa
add
pusha
repnz
mov
xor
mov
mov
cmp
daa
arpl
fwait
mov
dec
mov
xor
les
cmp
lcall
add
sub
sub
es
jae
pop
mov
imul
sbb
gs
repnz
dec
jno
xchg
pop
std
and
dec
stos
loop
sarb
or
pusha
fs
or
repz
push
dec
stos
clc
repnz
jae
rcrb
pop
and
xchg
xor
daa
ja
out
movsb
jg
pushf
test
add
cmpsb
mov
jg
jnp
out
adc
stos
pop
mov
or
fstps
xchg
cmp
setnp
lds
push
loopne
or
outsb
pop
cli
cli
and
int3
addb
xor
repz
pop
add
shrl
jp
adc
adc
in
mov
push
cmp
xorb
push
inc
mov
sub
xchg
or
pushf
xchg
cld
sti
int
out
push
and
ja
mov
fisttpll
push
sbb
mov
xor
jle
ss
pop
xchg
dec
mov
mov
fwait
enter
leave
out
movsl
jbe
pop
test
sub
mov
ljmp
dec
sahf
dec
pop
test
sub
xchg
mov
jns
jae
mov
ds
dec
cs
rcr
sub
push
inc
xor
push
pop
les
xchg
adc
icebp
mov
pop
sub
mov
push
sahf
stos
dec
mov
add
add
hlt
call
jbe
jbe
cwtl
pop
jb
lcall
aaa
fimuls
in
sahf
ds
es
insl
push
and
lret
fdivs
das
push
pop
push
std
or
jge
adc
dec
into
adc
in
inc
and
jns
lcall
cmp
adc
xlat
jnp
movsl
fnstsw
mov
jnp
sarl
scas
sahf
xchg
pop
pop
lock
in
mov
lds
shll
in
loope
or
out
cltd
das
das
push
and
mov
mov
push
mov
insl
rolb
aam
pop
xchg
ret
xchg
cs
dec
mov
jnp
jle
aam
xchg
scas
xchg
push
rcrb
pop
movsb
mov
sbb
and
sbb
mov
cltd
pop
cmp
std
xor
and
pop
fildl
jl
or
incb
ficomps
lea
jge
push
js
fwait
jb
push
mov
inc
adc
dec
leave
or
cltd
popf
sysexit
push
cmp
mov
jnp
xchg
insl
out
jge
int3
enter
push
div
jg
dec
das
adc
sub
or
sub
cmp
leave
sbb
dec
push
adc
stos
call
lods
fwait
inc
into
int3
or
push
mov
daa
dec
xchg
or
loope
sbb
cmpb
fsubl
icebp
les
jnp
rolb
dec
enter
mov
inc
mov
sbb
addl
push
mov
lret
add
das
addl
cmp
movsl
iret
es
call
pop
add
imul
imul
out
mov
pop
test
mov
and
das
and
sbb
out
cwtl
and
xchg
and
pop
leave
jge
pop
push
lds
clc
int
clc
popf
repnz
je
mov
mov
cmpsb
or
dec
adc
ljmp
sub
adc
into
pop
jge
jl
inc
mov
orb
sub
inc
sbb
mov
gs
mov
es
dec
jmp
imul
push
jmp
icebp
and
mov
mov
xor
movsb
jecxz
testb
xchg
jb
mov
les
hlt
mov
or
fs
push
in
or
out
push
outsl
add
repz
rcll
lret
jle
test
sub
int3
sahf
xchg
outsb
cmp
inc
in
mov
mov
and
sarl
fs
lret
jno
mov
cli
mov
pop
loop
ret
js
js
add
out
xchg
mov
adc
les
mov
push
dec
or
mov
push
or
xor
pop
add
int3
daa
loopne
iret
adc
lods
repz
inc
inc
or
adc
sbb
lds
hlt
adc
mov
lds
push
mov
int
stc
push
dec
and
int3
test
or
jecxz
shlb
jbe
loopne
imul
aad
cmp
insl
aas
insl
adcl
notl
rorl
ror
pop
test
adc
out
pop
mov
adc
scas
push
inc
std
push
sahf
adc
or
clc
dec
nopl
and
sub
fldenv
sbb
cli
push
cs
fistl
pop
lret
jb
fs
cltd
push
repnz
dec
inc
aaa
xchg
xchg
das
mov
lcall
out
mov
sub
je
movsl
push
arpl
push
fisttpl
pop
add
or
fcoml
mov
and
cmp
pop
jge,pt
add
xchg
dec
jge
inc
push
es
and
outsb
popa
idivb
rcrl
pop
ljmp
dec
fcompl
jns
fwait
test
and
sub
sub
mov
std
aaa
dec
adc
dec
enter
push
push
mov
imulb
adc
test
rcl
movsb
jl
addr16
mov
mov
jb
call
mov
das
cli
jo
mov
aaa
scas
push
mov
dec
and
cmp
mov
lea
dec
scas
xchg
stc
scas
xchg
mov
loope
lea
ds
test
fcomi
movsl
and
insl
inc
daa
movsb
stos
mov
jne
push
cs
out
pop
inc
je
imul
push
enter
pop
popf
lret
in
add
pop
int3
into
imul
fwait
js
push
mov
call
test
inc
cltd
sub
das
call
xlat
push
lret
test
daa
inc
jp
in
call
mov
sbb
inc
mov
xchg
lods
add
adc
fsubl
mov
sub
push
mov
pop
xchg
aaa
shlb
mov
movsb
inc
adc
fnstenv
add
out
jae
xchg
sub
push
adc
lea
out
and
push
hlt
add
pop
aas
jmp
and
add
push
inc
cmp
mov
jle
mov
mov
mov
sbb
ret
in
fs
insb
dec
sub
loop
push
jns
sbb
xchg
cmpsl
pop
xchg
adcb
outsl
iret
inc
rorl
adc
fucomp
sahf
inc
add
int
inc
in
push
xchg
insl
jbe
aad
add
loop
sbb
movsl
mov
movsl
dec
int3
mov
mov
sbb
enter
sbb
shll
jmp
cmpsl
loop
dec
xchg
jp
rcrl
jno
push
in
inc
xchg
std
push
ret
inc
lea
fwait
sarl
testb
mov
fidivrs
ljmp
dec
adc
adc
push
push
gs
vunpcklpd
jno
mov
jle
xor
mov
ss
into
nop
add
adc
pop
pop
and
lods
test
mov
xchg
pop
mov
cmc
icebp
dec
inc
pushf
sarb
mov
iret
mov
fmuls
daa
dec
add
mov
out
mov
xor
sbb
leave
in
sbb
sbb
mov
iret
sbb
xchg
mov
fmuls
mov
dec
movsb
int
mov
inc
aam
aad
sbb
inc
pusha
out
or
cmpsl
ret
ucomiss
mov
push
cmp
jns
test
lds
sub
push
ljmp
jge
sub
je
adc
in
out
mov
push
jnp
jae
scas
inc
inc
int
xchg
ret
dec
int3
std
add
adc
mov
je
ljmp
out
jb
jmp
iret
xor
and
jmp
push
dec
add
push
mov
out
xchg
adc
push
mov
pop
nop
ljmp
lock
mov
inc
sahf
rcrb
jae
push
jb
leave
into
std
inc
xor
adc
scas
push
clc
sti
lret
push
lcall
push
daa
sub
jmp
xchg
cmpsb
inc
xchg
jmp
rcr
loope
jns,pt
mov
or
inc
cs
sub
sarb
xchg
fisubs
xor
sub
xchg
test
adcl
add
inc
mov
jl
jl
dec
iret
rcll
push
fwait
xor
test
loope
outsl
rcrl
aas
xor
xchg
shll
cmp
sahf
icebp
xlat
loop
dec
and
jbe
arpl
mov
fwait
adc
adc
xor
scas
test
mov
push
jg
pop
adc
xchg
loope
aam
push
cmpsl
es
mov
adc
push
outsl
rclb
xor
xchg
sbb
test
int3
add
mov
cmpsb
int3
sbb
mov
lret
inc
mov
dec
mov
push
sub
add
ja
in
mov
jg
addb
out
out
add
fisubrl
inc
sahf
push
neg
lahf
dec
insb
movsl
push
mov
cmpsl
dec
pop
sub
das
pop
cmpb
or
fnstcw
out
lcall
ror
out
dec
mov
pusha
jnp
mov
test
shrb
jge
ficoms
jge
or
ds
idivl
mov
mov
call
in
std
pop
inc
out
sbb
sbb
mov
cltd
dec
xlat
into
jae
inc
adc
cmp
xor
dec
popf
ds
ljmp
mov
fdivp
and
outsl
cmpsb
insl
adc
fcoms
mov
fnsave
xchg
bound
xchg
mov
sub
iret
jns
pop
inc
mov
jge
adc
je
mov
adc
lcall
xchg
pop
dec
push
push
test
insl
push
dec
vhaddpd
jmp
scas
xchg
adc
cmp
xchg
or
xor
pusha
or
sub
xor
push
iret
ret
fisubrl
jnp
inc
push
adcl
fs
and
ja
daa
fdivrs
pop
push
mov
sbb
aaa
dec
sbb
outsb
js
and
xor
cld
mov
lret
pop
inc
mov
call
mov
adc
or
pushf
pop
inc
js
mov
xor
shrb
and
xor
push
mov
xor
data16
outsl
es
addr16
xor
sbb
mov
dec
xor
push
dec
dec
repz
xor
out
add
pop
cmpb
cmp
mov
xchg
jecxz
push
in
cmp
addr16
push
into
mov
xchg
cltd
sbb
jp
mov
pop
xor
mov
icebp
mov
fwait
sub
clc
push
mov
ror
mov
jae
mov
scas
mov
mov
mov
popf
or
mov
pop
cmp
repnz
mov
dec
loope
cli
divps
fdivrs
push
mov
repnz
nop
dec
inc
ds
adc
mov
lret
mov
pop
popa
xchg
inc
mov
out
repz
push
inc
push
sbb
ret
stos
mov
bound
cmp
or
fisubrl
imul
je
mov
inc
xor
push
gs
nop
je
dec
in
pop
push
imul
test
xchg
js
adc
pop
jb
jle
pushf
adc
xchg
mov
or
inc
push
jge
cmp
adc
xchg
jecxz
dec
mov
imul
fimuls
adc
cmpsb
push
mov
lds
in
movsl
lahf
jl
pop
stc
cwtl
push
xchg
xchg
popf
mov
cli
stc
cmc
xchg
add
pop
pop
seta
jge
enter
xchg
lea
in
mov
cmp
pop
mov
xor
and
call
aam
xor
imul
out
je
dec
pop
pop
ds
push
pop
fadd
mov
add
inc
cs
loopne
cwtl
adc
subl
sbbl
outsb
mov
or
stc
lock
add
mov
and
fdivrs
mov
or
sub
pop
cmc
inc
xchg
in
cltd
sub
movsb
inc
popl
nop
xor
push
xchg
adc
pop
pop
cmp
test
jae
cmp
test
scas
xor
push
sbb
mov
out
add
and
hlt
ret
movsb
dec
ljmp
out
ljmp
dec
jo
mov
pop
dec
push
jo
mov
mov
or
sbb
sub
bound
in
inc
fcmove
enter
or
xchg
es
movb
bound
pop
bswap
xor
sub
push
ret
pop
mov
ja
xorb
xor
and
inc
nop
ret
shl
xchg
push
add
addr16
and
cld
add
mov
out
in
inc
jnp
mul
dec
inc
cmp
jbe
xchg
adc
repnz
stc
push
mov
insb
fisttpll
gs
in
sub
push
xchg
or
jnp
insl
sub
inc
sbb
jne
loopne
ret
lods
jle
sahf
mov
das
movsl
shl
ljmp
out
mov
sub
int
dec
sbb
push
test
xor
adc
lret
xor
or
repnz
xchg
mov
cmc
xor
cli
sbb
stc
clc
sarb
jmp
lods
test
push
insb
sbbl
mov
and
outsb
out
outsb
outsb
lahf
imul
popf
cmp
xor
push
in
inc
movsb
imul
jp
xchg
xchg
insl
sub
frstor
jns
ret
cmpsb
mov
or
hlt
xbegin
loopne
jae
repz
shrl
pop
call
out
sbb
pop
dec
iret
jae
mov
inc
inc
dec
testb
fcmovnb
pop
roll
bnd
fs
idivb
and
cli
ret
adc
shl
jmp
addb
fcomi
pop
xchg
loope
cmp
xchg
cmpsb
mov
xor
jecxz
jge
cltd
xchg
jp
mov
mov
fs
ljmp
and
in
cld
add
test
lods
rcll
sbb
xchg
data16
jp
push
movl
sub
out
inc
cli
mov
mov
inc
outsb
lret
adc
jecxz
icebp
subl
aas
mov
rcrb
and
and
mov
scas
sub
add
popl
iret
cmovnp
pop
mov
call
outsb
lock
adc
and
shll
dec
leave
imul
stc
jle
push
inc
sub
pop
mov
repz
mov
sbb
data16
loop
mov
enter
popa
fdivs
pop
xchg
js
imul
cmpsb
xor
and
dec
and
and
mov
mov
out
and
inc
jp
add
mov
push
add
outsb
rol
outsl
fcmovnb
xor
push
cmc
out
pop
ret
daa
fildl
sahf
and
cmc
mov
mov
fldl
xor
mov
cmp
xor
in
cld
mov
fmull
xlat
xchg
jne
shl
xor
mov
dec
lods
icebp
mov
add
pop
daa
shr
sti
push
or
and
xlat
sbb
in
out
mov
jg
dec
adc
in
fwait
nop
mov
sbb
pushl
mov
jmp
sbb
fwait
out
cmp
and
lahf
arpl
dec
pop
cld
notl
mov
pop
sbb
inc
xchg
out
push
aas
test
in
aaa
lods
mov
mov
sti
jo
pop
subl
push
out
and
mov
sub
lcall
mov
push
aad
mov
mov
ljmp
clc
dec
ljmp
push
pop
int3
cmp
pop
push
scas
bound
jo
les
scas
scas
push
fnstsw
sbb
inc
inc
or
jbe
xor
sbb
icebp
xchg
lahf
xchg
jecxz
cmp
movsl
cmp
add
ret
mov
ret
pop
add
ret
inc
adc
das
add
or
xor
cmp
test
sbb
repnz
call
jmp
jb
leave
fldl
into
jl
xchg
sub
das
xchg
xor
jo
fsubrl
andb
repnz
and
adc
mov
push
xor
dec
sbb
xlat
xor
sub
lcallw
jae
popa
push
and
mov
pop
push
arpl
popa
aaa
out
and
pop
jecxz
add
testl
mov
out
pop
cmpsb
fwait
or
jnp
cs
sub
idivl
lret
push
bound
lods
roll
aaa
push
mov
xlat
mov
or
jnp
xlat
bound
xchg
dec
inc
bound
call
jbe
lods
push
mov
jbe
mov
xor
loopne
sbb
outsl
mov
jmp
sbb
sub
nop
adc
sarl
sub
jp
cmp
mov
mov
adc
outsb
and
xor
ds
jg
arpl
cltd
xchg
jmp
dec
cmpsl
mov
add
xchg
lods
inc
leave
pop
sub
xchg
fadd
jle
loope
sahf
adc
mov
adc
dec
cwtl
mov
cs
gs
out
mov
loope
mov
add
and
ljmp
decl
in
add
or
popa
and
push
mov
jmp
test
jl
and
stos
push
xor
xchg
and
dec
clc
andl
shr
mov
mov
sub
mov
push
fistpll
mov
and
int3
pop
mov
lock
mov
in
stos
jp
and
jp
aad
jle
arpl
add
jl
jecxz
out
add
pushf
into
mov
lcall
inc
adc
fdivl
sub
hlt
popa
lahf
shl
data16
jle
jmp
push
sahf
jae
popf
add
jbe
jle
mov
xchg
mov
fwait
push
adc
ss
out
daa
out
insb
rolb
xor
fcmove
jmp
mov
xchg
fisubl
pop
cmp
and
mov
cmp
lahf
mov
clc
arpl
sub
mov
gs
or
inc
cmp
lods
add
jl
mov
lock
mov
inc
add
addr16
fidivrs
cwtl
or
and
cmp
gs
stos
icebp
in
jo
mov
pusha
sti
mov
call
sub
inc
fwait
aaa
adc
lods
mov
repz
fimull
mov
push
sub
cmp
sbb
mov
jle
xchg
ljmp
testl
and
mov
dec
sbb
adc
cli
jno
lahf
insl
scas
imul
xchg
push
pop
jne
stc
sarb
push
addb
ret
ror
mov
xor
sub
std
inc
push
mov
mov
push
pop
add
cmp
xor
sbb
and
popa
mov
icebp
sbb
pushf
jp
out
cmp
in
fs
pop
sbb
push
push
xor
jmp
sti
mov
rcrb
data16
adc
sbb
leave
out
les
push
mov
lcall
jnp
pop
mov
int3
sbb
test
cmp
out
mov
dec
fs
dec
push
or
add
pushf
inc
and
dec
push
cs
push
je
xlat
mov
inc
imul
adc
aad
jo
js
jns
sbb
js
adc
addr16
cltd
scas
dec
pushf
inc
cmpsb
mov
repz
or
jmp
bound
aas
movsb
mov
in
mov
fnstcw
stos
cmpsl
push
test
loopne
add
or
das
fs
sbbb
and
xchg
xorb
leave
rcrb
test
rol
aas
push
les
ljmp
inc
xchg
sbb
push
mov
xor
jno
pop
jecxz
push
outsl
orl
inc
rol
pop
shll
andb
iret
pop
movl
add
rolb
xchg
das
shl
scas
pop
xchg
xchg
push
cwtl
hlt
cmpsb
xor
and
lock
imul
mov
addr16
push
pop
add
sti
mov
lock
andb
clc
jb,pn
and
clc
dec
xchg
pop
out
xlat
mov
sub
cmc
mov
inc
or
adc
xor
ds
sbb
hlt
dec
orb
xor
pop
push
rclb
inc
xor
xchg
pop
and
out
push
divb
test
gs
rclb
adc
mov
or
xchg
movsb
mov
mov
push
add
push
xchg
add
mov
lahf
push
je
push
popa
outsl
sbb
clc
or
dec
mov
jp
int3
push
mov
cwtl
or
and
dec
pop
add
or
pop
pop
and
loope
dec
xchg
jle
shlb
ds
and
imul
cmp
in
loop
cmp
lret
es
xchg
push
data16
push
mov
out
bound
mov
push
cmpb
xor
or
shl
rcl
lods
jge
scas
jmp
add
imul
cmp
push
es
leave
jno
push
mov
mov
nop
and
adc
sbb
aam
jmp
adc
pop
lods
aad
mov
push
ja
and
out
jb
iret
js
pop
mov
inc
xchg
mov
mov
sub
fldenv
jge
dec
inc
insl
push
cmp
sub
ljmp
adc
inc
xchg
in
adc
xchg
jbe
scas
cmp
in
cld
stos
mov
push
and
push
ljmp
adc
mov
adc
and
adc
enter
out
mov
fistpll
sti
jo
movsl
test
xor
sub
js
lea
addr16
in
aam
inc
xor
pop
inc
xchg
mov
gs
mulb
cli
mov
jno
push
jae
cltd
icebp
xlat
xchg
sub
gs
sahf
adc
mov
rorl
xchg
insl
fdivrs
bnd
enter
aaa
movsb
cmp
ja
imul
out
xor
pop
xor
push
mov
ficoms
test
xchg
fnstsw
icebp
push
push
in
and
insl
outsl
addb
jns
sbbb
leave
xlat
enter
xlat
and
movsl
movsl
pop
popl
push
sub
jl
lahf
push
sub
in
fs
arpl
or
sub
neg
or
xor
pop
xchg
dec
pop
iret
sbb
xchg
rclb
lds
push
out
or
gs
cmp
ret
icebp
in
push
mov
cmc
test
sar
test
in
scas
cld
imulb
push
dec
imul
cwtl
lea
popf
outsl
xchg
inc
loop
push
shrb
mov
xchg
mov
push
loopne
sbb
push
arpl
repnz
call
push
xor
and
lahf
js
pop
mov
fcmovb
std
imul
push
and
jmp
push
or
js
mov
pop
mov
push
aaa
xor
in
sbb
lea
dec
ds
cwtl
or
adc
push
cmp
das
inc
cwtl
xchg
lret
outsb
jmp
cmp
push
xchg
imul
pop
data16
movsb
mov
lds
cli
adc
sbb
cmpl
xchg
and
jbe
pop
sti
and
lret
mov
das
icebp
jmp
mov
pop
pushf
jle
xchg
push
imull
xchg
fs
mov
cmp
in
aas
mov
mov
push
mov
cmpsb
outsb
jge
enter
mov
xchg
cmp
jne
scas
iret
sub
roll
push
cld
jge
mov
sbb
in
lds
jb
push
ret
dec
lret
adc
flds
and
scas
ror
outsl
cwtl
mov
lea
mov
pop
sbb
outsb
bound
movzwl
cli
mov
xchg
push
push
adc
sub
js
test
pusha
ret
aas
or
pop
sahf
inc
mov
bound
mov
cmc
mov
inc
rcrb
xchg
dec
ljmp
dec
lahf
stc
jnp
adc
adc
imul
pop
cmp
mov
or
cltd
test
inc
sub
mov
dec
nop
sbb
cmp
dec
xlat
test
std
stos
fisubrl
pop
mov
xchg
pop
popf
sti
jae
push
pop
push
pop
mov
cmpsb
sbb
icebp
sahf
inc
imul
fisubrs
subb
jne
repz
pavgw
leave
imul
ficompl
callw
ss
scas
jge
subb
pop
insl
push
ss
push
test
loopne
dec
out
push
cmpsl
add
xchg
mov
popa
inc
adcb
mov
leave
aam
push
test
pop
jmp
mov
divl
icebp
arpl
cmp
xchg
leave
fs
mov
loope
nop
addb
out
sub
dec
jno
sbb
ljmp
stc
add
int
ss
divb
add
lock
jae
mov
sbb
pop
jae
dec
pop
sub
pop
fsubl
rcr
jb
pop
xchg
fdivl
mov
inc
lahf
pop
cmp
jb
cmp
add
cmp
xchg
repz
pop
dec
xor
mov
add
push
mov
jecxz
insl
imul
out
sbb
cmc
loope
jmp
scas
out
pop
lret
lcall
mov
push
mov
cmp
les
enter
push
inc
fisttpll
mov
out
pop
loopne
add
mov
push
flds
inc
sti
sti
xor
movsb
sarl
inc
int3
add
push
inc
and
pop
leave
in
mov
jo
push
js
jecxz
dec
or
fst
adc
pop
pop
push
ret
xor
cmp
cmc
mov
push
leave
xchg
fildl
bound
push
mov
xor
scas
lds
pop
sarb
mov
sub
jae
push
repnz
inc
negl
mov
sub
xor
lds
aam
push
pop
jae
in
mov
or
data16
fistpl
shlb
pop
adc
fstpt
subl
push
adc
dec
int
outsl
xchg
lea
in
lds
loopne
cld
and
sbbl
sub
and
in
and
jb
sar
xchg
xor
and
and
xchg
push
jns
unpcklps
push
loop
add
fbld
out
jge
inc
out
jb
rorb
lret
xchg
add
dec
in
or
add
fcmove
and
ds
repnz
orl
pop
and
pusha
imul
cli
fwait
ja
fdivl
mov
aas
xlat
xor
inc
cmp
adc
sbb
daa
lods
dec
pop
and
imul
inc
add
rcr
sbb
mov
scas
out
dec
mov
int
test
insl
js
jns
pop
add
inc
push
test
push
pop
xor
fcomps
stos
add
sbb
fwait
inc
lret
mov
xchg
daa
pop
pop
and
cmc
sbb
add
nop
ret
sahf
jns
xor
push
ret
mov
sbb
xor
and
mov
jne
popf
ss
mov
push
xchg
insb
or
xchg
cs
aas
roll
aad
cmp
xchg
das
sahf
push
xorl
and
dec
sti
test
out
jge
loope
movsl
inc
shrl
fs
lret
or
dec
inc
mov
xchg
inc
pop
pop
sub
push
cmpsl
loope
cwtl
or
sub
push
out
pop
dec
out
repz
cld
iret
cmc
sti
push
mov
cmp
mov
jb
jnp
jle
mov
dec
sbb
push
nop
xor
inc
inc
inc
xchg
ret
ljmp
adc
sti
je
cmpsl
and
jnp
sub
std
mov
inc
sub
ret
xor
hlt
lcall
adc
xchg
les
lods
std
xchg
daa
adcl
jge
mov
xor
icebp
push
addl
lea
test
or
mov
or
pusha
and
insb
loop
out
les
mov
pop
adc
outsb
les
rcrl
dec
and
mov
test
data16
ret
dec
jae
xchg
iret
xchg
jns
adc
push
int
or
icebp
mov
sbb
sub
cmp
xchg
scas
ret
test
out
ret
dec
xor
cmp
and
push
dec
mov
outsl
lcall
fwait
adc
mov
fs
add
mov
ds
or
lds
push
mov
push
sub
xchg
das
mov
out
jb
mov
lods
mov
xchg
roll
jge
das
test
mov
jbe
sbb
sbb
cmc
loopne
jne
add
loope
xchg
xor
jp
fxch
push
std
cmpsl
sbb
push
roll
sub
xchg
inc
push
sbb
mov
dec
cmp
xor
push
xlat
cmp
lea
dec
jp
fidivl
das
loopne
hlt
xchg
test
out
fisubs
inc
popf
stc
shrb
xchg
cld
xchg
aad
or
ja,pn
cwtl
fwait
jae
pop
lock
lret
push
pop
pop
ljmpw
in
out
dec
xchg
mov
cli
mov
or
add
movsl
mov
or
inc
nop
sarb
fwait
pop
pop
ljmp
jmp
mov
sarl
adc
rcll
fwait
pusha
out
mov
pop
and
dec
rcll
mov
dec
xchg
dec
sbb
mov
inc
add
push
inc
jl
mov
ret
cmpl
icebp
sarb
jge
test
and
xchg
cmp
dec
icebp
imul
and
jns
arpl
fadds
add
das
pop
adc
arpl
or
or
or
fwait
mov
inc
out
repnz
sub
cwtl
movsb
lahf
arpl
mull
and
dec
in
fs
test
rclb
aas
push
insl
imul
inc
repnz
out
lahf
fs
fldcw
mov
popa
call
je
lcall
jmp
xor
imul
xlat
and
leave
lods
inc
sub
inc
dec
add
clc
fwait
sub
jp
push
xor
movsb
jp
mulb
aas
sbb
jno
lds
enter
and
jmp
mov
sbb
sbb
mov
popf
in
push
paddd
cmc
or
cmp
add
add
push
lret
pop
stc
pop
hlt
into
push
repnz
js
lods
xor
ljmp
xchg
or
pushf
lcall
mov
out
test
or
sbb
mov
mov
mov
pop
seta
pop
cmp
icebp
loope
mov
sarl
jmp
stc
mov
std
inc
adc
push
mov
pop
pusha
or
jmp
lcall
fsubs
cmp
int3
out
adc
inc
lret
mov
xor
jnp
repz
dec
fwait
aaa
jno
mov
xchg
outsl
and
dec
out
fsts
shlb
lock
icebp
inc
add
lds
lods
xlat
shl
outsl
ror
mov
pushf
int
push
in
mov
adc
lock
jmp
lods
icebp
pop
jle
ret
ljmp
dec
in
push
and
popw
orb
inc
mov
sub
mov
mov
sub
push
inc
jle
gs
mov
rcr
pushf
fnstenv
rcrb
inc
push
cmpsb
je
push
mov
jae
push
dec
in
adc
test
cvtdq2ps
loope
push
mov
dec
fmull
roll
jbe
lods
sbb
xchg
loop
push
jp
iret
jo
sar
push
scas
pop
mov
les
mov
icebp
mov
inc
push
hlt
sahf
lock
jbe
push
pop
mov
lcall
jb
pop
call
mov
cmp
fs
rorb
es
or
mov
ss
pop
adc
bound
jg
push
jle
loopne
jbe
pusha
mov
sbb
inc
pop
dec
mov
pop
out
dec
xchg
pop
and
out
imul
cmp
xor
pop
sub
out
dec
inc
inc
fstl
stos
insl
inc
icebp
sbb
dec
inc
push
pop
not
or
bound
jns
and
cwtl
jp
mulb
or
dec
pop
jl
cmp
addr16
mov
mov
call
pop
les
fdivr
push
pop
mov
mov
lea
cmp
in
or
mov
jle
mov
fwait
pop
js
mov
outsb
mov
xchg
mov
xchg
adc
jbe
mov
leave
sbb
in
nop
in
insb
pop
lods
jp
push
hlt
les
xlat
sub
mov
addr16
xchg
icebp
popl
add
lret
es
push
je
xor
mov
pop
addl
mov
ja
cld
push
cmpsl
cmpsl
inc
aad
jne
mov
shll
out
dec
iret
mov
dec
adc
pop
cmp
add
xchg
jl
jle
mov
addl
sub
movsl
cwtl
inc
daa
sbbl
cmp
lock
push
ljmp
fdivs
cmp
jle
sbb
lock
adc
sub
xor
xlat
cmc
adc
adc
xor
enter
in
rcll
adc
popa
xor
enter
mov
test
push
cld
mov
inc
mov
pop
sbb
aam
push
xchg
push
mov
stos
and
popf
mov
fisubrs
nop
fidivs
sub
ja
in
push
nop
xlat
pop
bound
sti
and
sbb
and
or
stc
jo
out
or
out
fisttpl
jle
pop
ja
aam
je
sbb
fldl
cmp
push
fisttpll
ja
cmpsb
addr16
sub
dec
ja
orb
xor
cmp
ljmp
ljmp
jbe
jne
or
loopne
mov
sub
push
mov
dec
test
mov
xchg
mov
push
outsb
icebp
pop
fsub
out
jns
stos
scas
lahf
aam
insb
in
test
push
mov
nop
or
adc
leave
mov
sub
fildll
fldcw
inc
test
lret
roll
sbb
mov
push
scas
sbb
cmc
je
xor
ss
mov
orb
jns
adc
movsl
movl
cmp
xor
cltd
jmp
xchg
shrb
ret
cmpsb
sbb
or
xchg
movsb
in
pop
addr16
add
aam
dec
xchg
mov
fdivr
scas
cmpxchg
bound
or
mov
cmp
mov
ret
in
sub
cmp
out
test
clc
sub
loopne
inc
das
jecxz
mov
cmp
nop
sbb
mov
test
pop
loope
orb
push
aad
push
xor
testb
pusha
or
pop
or
push
mov
test
cmpsl
jns
cwtl
jl
push
pop
pusha
scas
and
rcll
jl
das
popa
pop
inc
fdivrl
aas
lods
cmp
es
fnstsw
dec
roll
lret
out
jns
add
fiadds
loope
loope
bound
jmp
push
mov
sbb
pop
das
xchg
sbb
loope
lahf
cs
test
adc
cwtl
loopne
or
lds
lahf
pop
mov
lds
push
xchg
outsb
ss
cmp
insb
in
xor
add
pop
sub
cwtl
call
shlb
popf
pop
mov
xchg
adc
lret
and
add
xlat
xchg
mov
popa
add
dec
mov
lds
mov
ret
dec
push
mov
mov
push
add
je
cmp
xor
ret
inc
shll
push
cmp
rep
pop
test
or
test
jne
std
data16
outsl
mov
jb
orb
and
int
jno
mov
inc
out
sbb
arpl
pop
inc
cmovo
xchg
popa
jmp
mov
sub
ret
lret
imul
and
jp
loopne
adc
in
mov
cmp
mov
cmp
les
jmp
lahf
daa
pop
js
ds
out
mov
mov
push
jmp
out
dec
shll
mov
add
inc
mov
mov
mov
sarb
jne
pop
roll
loope
push
and
jae
clc
push
dec
cmc
loop
cmp
nop
movsb
stc
int
xchg
clc
stos
xlat
std
add
imul
rcrb
mov
icebp
repz
fistpl
js
or
les
sbb
inc
add
jle
add
fsub
xor
mov
xchg
sub
or
iret
mov
add
sub
pop
dec
cld
add
sbb
fldt
ret
dec
mov
jne
out
xlat
mov
sbb
aaa
jnp
cmp
jmp
shrl
lret
sbb
scas
hlt
cmp
ficompl
push
mov
mov
into
pop
mov
mov
and
int
in
xlat
xchg
sub
std
insl
dec
call
cmpb
sbb
in
fs
or
in
push
pop
std
jno
ljmp
sahf
sbb
or
fstpt
into
jp
jo
push
jp
or
jo
call
inc
out
dec
cmc
jp
xlat
mov
inc
add
add
xorb
pop
jp
sub
sub
mov
inc
stos
aad
push
imul
sub
outsb
add
imul
mov
jns
mov
xor
das
dec
lahf
push
adc
scas
daa
mov
inc
cltd
push
repnz
mov
bnd
jg
int
sub
jl
mov
pop
std
call
loop
add
cmpsl
rcrb
mov
imul
pop
punpckhwd
pop
in
and
and
cmp
fistpll
idivb
adc
push
cmc
add
adc
xchg
and
cmp
mov
ljmp
lret
mov
jmp
cmp
aaa
mov
xor
sarb
fs
ds
mov
mov
test
or
inc
mov
lods
push
clc
leave
inc
std
test
inc
jl
rorb
cli
mov
repnz
pinsrw
addl
scas
pop
cmp
int3
lret
push
xor
bound
outsb
mov
jbe
rol
xor
inc
or
cmp
sbb
lds
test
jg
inc
mov
out
roll
add
sarl
xchg
sti
push
mov
adc
test
mov
movsb
and
and
sub
popf
imul
mov
hlt
shrl
test
xorl
and
shrl
mov
sbb
mov
jp
or
cs
and
pop
or
ret
outsb
add
out
jecxz
cmp
or
hlt
in
mov
sbb
ja
sbb
cmc
pop
stos
and
dec
sahf
add
push
aad
lahf
insb
daa
xchg
clc
mov
jnp
xor
mov
xchg
shrl
test
lret
mov
outsl
sub
cltd
mov
cmpb
push
jae
mov
incb
les
je
ljmp
dec
cli
ljmp
mov
adc
xchg
mov
xchg
mov
imul
jae
sbb
mov
or
jne
bound
ds
pushf
push
jg
xor
loopne
gs
sarb
pop
imul
call
dec
sub
cmp
pop
jmp
out
pushl
or
xchg
shrl
and
or
cmp
cmp
fwait
lock
sti
cld
jp
jl
fdivrl
inc
adc
lret
mov
inc
jg
sbb
push
fcoms
mov
cld
pop
and
jnp
pop
inc
xor
cld
stos
scas
leave
ffreep
push
clc
cld
jb
cmp
xor
xor
scas
loop
loope
iret
push
imul
cmpsb
les
xor
out
pop
pushf
gs
das
das
clc
add
cmp
jb
repz
sbb
xlat
add
xchg
imul
jbe
nop
fstpt
or
dec
mov
arpl
mov
aaa
mov
data16
call
inc
insl
xchg
xchg
dec
mov
pop
push
data16
sbb
cmp
mov
sub
inc
jmp
sbb
fwait
nop
xlat
out
jne
push
neg
shrb
outsl
jo
push
inc
inc
sahf
int3
out
insb
pop
jg
lret
sahf
idivb
mov
mov
cmp
test
data16
lea
xlat
lcall
sub
cmpsb
test
sahf
lods
div
and
mov
add
dec
xchg
or
cmp
pop
jle
push
in
repnz
mov
out
mov
popf
mov
xor
push
imul
pop
push
xchg
lods
fsubl
pop
nopl
imul
and
dec
dec
insb
lcall
mov
fsubs
push
pop
mov
into
and
cld
pop
cli
mov
push
or
mov
ja
js
ds
lahf
in
leave
and
dec
subb
filds
mov
aad
lcall
and
push
daa
cmpsb
xchg
jle
mov
xchg
xor
sarb
ret
and
out
lea
lret
inc
call
sti
jl
ficompl
sub
das
into
idivl
jp
jp
xchg
orb
jge
cli
and
push
xchg
rcl
lea
adc
jne
mov
xlat
faddp
aad
mov
or
test
pop
mov
mov
and
mov
int
xchg
dec
xchg
cmp
jg
sbb
add
adc
and
fwait
jg
xchg
js
icebp
mov
push
cs
cwtl
out
enter
rol
sar
enter
sub
lods
inc
mov
sarb
sub
rclb
fisttpll
pop
jl
xlat
cltd
mov
mov
xchg
dec
and
leave
fistpl
xchg
sub
add
mov
mov
andb
outsl
mov
ret
imul
push
repnz
xchg
test
rolb
jns
mov
mov
in
mov
jp
sarb
xchg
xor
lds
cmc
xchg
cs
push
xlat
bound
or
xchg
cltd
inc
cmpsb
fildll
adc
mov
mov
add
or
or
shlb
push
mov
loope
jb
inc
cmpsl
fwait
aas
mov
mov
nop
pop
das
xchg
mov
push
sbb
punpckhwd
or
test
scas
mov
lds
aad
jge
cmp
std
pop
lahf
push
arpl
std
mov
mov
push
xor
mov
test
cltd
mov
mov
adc
inc
mov
sub
sti
xor
xor
test
jno
sbb
inc
jl
inc
push
sub
loop
enter
les
mov
jecxz
fdivs
subb
lahf
inc
pop
leave
fstpt
fwait
push
lret
mov
mov
stc
loop
adc
xchg
mov
test
sbb
inc
jge
scas
or
push
sbb
xchg
shlb
mov
mov
es
sbb
cmp
loopne
jmp
xlat
fistpll
sbb
test
push
xor
add
cmpsb
xchg
jae
mov
sahf
mov
test
int
sub
mov
incl
loope
push
lea
movsb
mov
cmp
sbb
or
js
sbb
mov
fwait
int
orb
insl
imul
ss
mov
xchg
jnp
je
push
ds
jno
sar
pop
cmp
mov
add
enter
adc
sbb
pop
int3
arpl
into
jg
or
imul
fbstp
dec
repnz
scas
xchg
popa
negb
or
mov
sbb
scas
ss
shll
mov
jl
movsb
adc
xchg
pop
hlt
cld
jb
fsubs
lret
pushf
insb
fldcw
scas
sub
and
push
fldcw
inc
inc
test
or
push
popf
xchg
aaa
mov
mov
pusha
push
or
out
push
mov
push
das
in
sbb
aad
cltd
test
or
std
out
jnp
jne
adc
or
add
or
mov
inc
xchg
jle
aad
adc
int3
push
push
or
xor
test
and
sbb
int
mov
push
and
addr16
repz
stos
cmp
sbb
jo
lock
lock
xchg
stos
das
xchg
xchg
das
or
imul
in
fs
lock
mov
je
imul
pop
iret
ljmp
mov
dec
lcall
scas
xchg
nop
popf
setae
cmpsl
xlat
mov
xchg
cmp
push
or
fxch
and
pusha
addr16
popf
inc
dec
mov
or
or
in
shll
jb
pop
or
sbb
push
xchg
mov
aaa
jnp
pop
push
dec
inc
xchg
hlt
add
cmp
das
outsb
and
popa
dec
imull
or
mov
cmp
int3
xor
out
lret
pop
ret
jecxz
cmpsb
cmp
xchg
in
aaa
jmp
push
stc
xchg
dec
xchg
cmpsb
movsl
dec
mov
lcall
jl
add
jo
mov
and
pop
ja
cmpsb
loopne
mov
jae
cmp
ss
or
mov
inc
or
xchg
or
mov
dec
adc
aad
jle
sbb
or
sub
in
lret
jle
inc
jnp
cltd
nop
jg
loope
or
addr16
scas
stc
adc
mov
addr16
pop
das
xchg
frstor
outsl
ss
xchg
sbb
xor
pop
into
xchg
daa
pop
and
je
inc
sbb
lds
icebp
push
inc
cmp
sahf
out
pop
mov
jbe
and
mov
mov
gs
fldt
inc
sbb
pop
cli
fldcw
call
in
cmc
inc
pop
lret
loop
movsb
add
jbe
sbb
xor
sub
pop
cmp
add
pop
cmp
or
bound
popa
mov
out
out
inc
push
stos
mov
cltd
push
adc
mov
call
test
pusha
imul
and
cmc
or
stos
jo
inc
jge
jle
push
testb
push
popa
sub
push
gs
cmp
jl
sub
xor
stos
mulb
in
cmp
jp
pop
sub
jns
sub
dec
mov
adc
inc
inc
pop
int3
icebp
out
ja
mov
jmp
movsb
jae
inc
xor
push
push
es
sbb
cmp
int3
pop
pop
ljmp
hlt
sub
cmp
mov
nop
or
outsb
fsts
sbb
ds
sar
rcll
es
cmp
dec
sarb
adc
sbb
jns
or
addr16
data16
pop
push
sahf
sub
es
les
stc
daa
xor
jg
mov
pop
inc
loopne
in
sub
pop
inc
xlat
mov
jg
adcb
leave
cli
xor
cmp
sub
aad
pavgw
xchg
xor
jo
mov
ds
push
cmp
lcall
xlat
hlt
jnp
test
jns
iret
aas
daa
hlt
cmp
push
cmovbe
aaa
xchg
into
out
insl
fsubrs
adc
dec
jle
jmp
mov
out
stos
lock
aas
movswl
into
mov
cmp
mov
jmp
sti
mov
dec
cmp
xchg
lret
inc
pop
push
jg
int3
lock
sub
adc
sub
mov
xlat
cltd
jmp
inc
sbb
pop
and
and
aas
mov
xchg
popf
and
outsb
fistpll
fcompl
cmpb
inc
adcl
test
lret
iret
ja
inc
fwait
xor
push
jmp
mov
test
sahf
pop
sbb
and
nop
addr16
or
push
xor
out
ss
loope
xchg
mov
ja
sbb
lret
mov
out
push
cld
loopne
xlat
sarl
sub
int
and
stos
lods
movsb
in
dec
insl
sti
ss
cs
mov
pop
movsb
or
xchg
pop
jns
in
mov
ss
jmp
hlt
mov
pop
cld
hlt
jb
fnstsw
enter
mov
in
pop
jb
stos
dec
mov
mov
rorb
pop
lcall
shl
cmp
lods
insb
rcrb
push
cmpsl
les
ss
push
cmp
push
je
dec
cmp
hlt
fxam
xlat
fidivs
fdivrs
mov
fnstcw
pusha
scas
or
popa
dec
push
cmc
stc
or
ret
jb
or
mov
cmpsl
out
loopne
xlat
mov
js
inc
loopne
rcr
clc
adc
pop
push
enter
aad
frstor
shll
mov
imul
xchg
jo
push
sub
in
inc
add
fdivrs
jle
out
mov
xor
cltd
je
sub
fwait
xor
jge
aad
or
xor
jae
int3
xchg
pop
adc
mov
fcmove
dec
add
jb
mov
in
fwait
lea
and
popa
dec
cvtpi2ps
add
ljmp
popf
mov
fcmovne
jmp
dec
in
lock
fisubrs
mov
mov
xor
aaa
push
test
jb
out
cli
pop
adc
lods
dec
xchg
push
add
loopne
add
into
scas
aam
enter
mov
dec
fiadds
and
movsl
pop
fisubl
jecxz
sub
pop
fists
mov
call
adc
sub
adc
jl
stos
mov
fidivrl
adc
push
mov
mov
gs
push
pop
mov
ljmp
outsb
sbb
aam
sbb
adc
clc
mov
and
les
cli
lock
cmp
test
and
jg
mov
pop
outsb
movsl
push
pop
pop
insb
jns
mov
mov
jbe
mov
and
addl
sarl
push
xchg
stc
pop
dec
xchg
and
out
imul
fwait
imul
lret
loopne
sbb
outsb
jnp
sub
scas
cmpsl
loop
movsb
data16
inc
pop
stos
out
out
ljmp
add
inc
lods
shrl
inc
cmp
jae
lock
sbb
call
or
dec
mov
clc
add
movsl
jne
lcall
out
dec
mov
xchg
jbe
cmp
mov
gs
adc
testb
mov
xlat
dec
mov
xor
add
sahf
into
mov
andb
jmp
repnz
push
filds
push
lcall
sub
lret
lcall
sbb
sbb
daa
idiv
dec
addr16
lds
xor
ret
and
push
mov
jae
stc
fwait
xlat
and
cwtl
or
shlb
pop
push
mov
cmc
clc
pop
pop
shrl
xchg
out
dec
shll
inc
sbb
sub
jb
adc
jne
inc
lahf
out
adc
cli
loopne
fbstp
jb
in
sub
shrl
sub
cwtl
mov
mov
mov
sbb
add
jae
js
sbb
push
inc
test
sbb
ds
push
add
in
int
add
in
repz
push
clc
js
mov
sbb
jle
stos
lret
dec
and
jns
pop
das
pop
insl
out
rolb
cwtl
mov
xor
out
or
pushf
and
xchg
jae
loop
mov
or
cwtl
cmpsb
shll
add
dec
call
test
leave
mov
xor
fmull
xchg
fisubrl
je
call
in
jmp
dec
xchg
sub
inc
loope
jge
pop
mov
add
les
das
xor
add
pushf
jae
int
shll
jle
std
mov
jbe
xor
aaa
dec
fs
aad
jecxz
rcrb
mov
sbb
rorl
pusha
and
lods
test
xor
pop
push
loope
in
clc
xor
xchg
ror
xor
add
jo
stos
cld
mov
andb
sbb
pop
cs
pop
jns
lret
and
or
shlb
xor
dec
xlat
sub
and
idivb
adc
hlt
mov
outsl
cmp
and
cmpsb
xchg
xchg
adc
xor
dec
imul
fldl
mov
lea
or
jns
and
cmc
movsl
jb
inc
in
sub
inc
mov
fs
mov
mov
mov
scas
adc
data16
cmpsl
icebp
mov
adc
jle
add
incb
stos
jge
or
lods
push
adc
add
int3
cld
out
mov
xchg
adc
cld
add
sarb
insb
or
fwait
iret
dec
shrl
jbe
lods
scas
jl
lods
mov
add
push
js
push
fs
out
mov
test
dec
pop
clc
add
jge
xchg
lock
data16
das
or
and
pop
add
mov
pop
or
pop
iret
or
aas
repnz
outsb
push
jmp
fbstp
lret
pop
xchg
push
rorl
ljmp
popf
je
dec
fiaddl
or
dec
mov
es
push
orl
test
mov
mov
imul
enter
xchg
std
jg
or
xchg
jg
insl
int3
out
loop
push
fs
loopne
adc
and
inc
in
aaa
sbb
sub
out
mov
or
xor
test
mov
loope
ja
dec
cmc
mov
sbb
xchg
fcoms
sbb
ret
inc
sbb
shll
imul
xor
or
xor
shrl
cwtl
cltd
fdivs
mov
out
stos
and
cmp
xor
inc
and
mov
xor
in
xchg
bound
mov
cmc
and
push
lcall
insl
dec
stc
xor
cwtl
outsl
push
dec
mov
jecxz
aam
pop
mov
sub
sub
cmpsl
test
js
out
mov
pushf
mov
dec
in
dec
dec
sub
cmp
dec
icebp
test
or
loope
inc
cmp
push
mov
inc
xor
dec
mov
adc
jo
test
sti
push
inc
clc
fs
icebp
mov
lret
push
iret
cli
insl
add
aas
cmp
xchg
daa
cmp
nop
adc
add
dec
push
or
push
or
add
push
xor
pop
repnz
das
and
roll
lock
pop
and
and
xchg
int
in
xor
out
mov
push
arpl
sbb
xchg
sbb
fistps
mov
sbb
pop
insb
mov
popa
push
daa
lret
mov
repnz
outsl
or
inc
sbb
sub
push
stc
mov
dec
lret
cs
pop
mov
mov
pop
cli
adc
cli
or
aad
adc
cmp
fistpll
nop
aas
movsb
lret
clc
mov
sbb
cmp
int3
inc
in
popa
or
mov
ret
lea
inc
lods
sub
ret
push
hlt
xchg
lcall
jnp
sub
dec
fmuls
add
les
inc
lea
push
xchg
sub
mov
lcall
sub
pop
xchg
sub
subl
lods
in
jp
jno
mov
sbb
jmp
gs
or
sub
inc
and
dec
fistpll
jnp
int
cmpsb
mov
or
hlt
aas
enter
sub
pushf
int
mov
sbb
imul
cmpsl
pop
cld
adcl
add
iret
int
movsb
sub
int
scas
test
imul
dec
mov
jge
sub
dec
jmp
fcmovne
insb
xor
and
push
nop
cli
and
lret
push
aam
adc
or
mov
sbb
sbb
push
roll
dec
or
pop
mov
leave
sub
filds
sbbb
scas
push
pop
dec
push
movsb
jge
dec
xchg
mov
imul
rorb
enter
bound
movl
add
push
lret
pushf
insl
mov
jo
icebp
mov
divb
pop
stc
or
aam
out
or
dec
dec
shlb
cmc
cmp
cmpl
sbb
sub
das
js
cmp
sub
sbb
enter
aad
jbe
add
shll
and
cmp
pop
mov
sbbb
push
popf
fchs
out
ret
daa
or
aas
sub
ret
movsl
xor
and
jae
sbb
push
push
mull
adc
xlat
in
fiadds
inc
bound
loope
dec
push
in
and
sbb
inc
adcl
push
stos
mov
mov
aas
fdivrs
mov
repz
lods
test
out
add
out
cmp
add
xlat
sub
sub
lgs
mov
movsl
sbb
es
arpl
sub
cltd
in
jmp
dec
aas
sahf
sbb
gs
hlt
fsubrs
sub
jmp
sub
push
and
jne
xor
xor
lret
push
into
data16
js
add
lods
aad
jge
pop
ljmp
popa
mov
insb
push
jg
dec
es
sbb
pop
bound
sti
arpl
push
xor
js
mov
outsb
cld
mov
rclb
mov
push
mov
push
popa
pushf
adc
mov
movsl
xor
xor
push
ret
loope
int3
xor
rcll
lock
flds
imul
icebp
bt
jge
xchg
jbe
add
fists
add
pop
rcll
test
cmpsl
movsl
aad
inc
imul
jne
mov
pop
xor
add
test
push
cs
push
mov
xchg
adc
test
lret
or
cltd
and
icebp
xchg
adc
inc
add
movsl
repnz
cli
popa
fsubrs
mov
xchg
pop
push
add
push
push
push
pop
in
out
push
fwait
xchg
addl
fldcw
and
cltd
sahf
or
jl
aas
cmpsb
cwtl
sbb
cld
call
repnz
inc
add
mov
movsb
inc
lock
imul
jg
dec
cli
out
sub
inc
or
mov
jo
in
cmpsb
testl
hlt
mov
iret
cltd
les
test
mov
stc
mov
pop
mov
mov
cmc
pop
mov
jl
mov
push
mov
aad
in
inc
loopne
lahf
cli
sub
leave
push
mov
or
mov
sbb
lahf
cmc
testb
or
jae
cs
dec
sub
push
jnp
es
and
mov
inc
dec
or
movsl
or
cmp
iret
shlb
push
and
scas
shll
daa
inc
outsl
fwait
pop
pop
popf
lret
out
ret
jb,pn
xor
jno
arpl
les
stos
push
imul
dec
push
out
pusha
mov
in
orb
inc
fdiv
sub
out
fisttpll
add
cld
cmc
andb
addl
xor
adc
xchg
out
loopne
jno
cmp
jae
int
dec
pop
lea
sahf
leave
out
mov
icebp
push
push
aas
dec
or
and
sub
insl
jge
mov
aas
mov
xor
jb
sahf
movb
push
repnz
outsl
jecxz
cmpsb
jp
sti
fmuls
dec
mov
xchg
dec
mov
xchg
ret
sbb
xlat
jp
repz
ja
aas
movl
aad
iret
push
push
lret
andb
adc
nop
cmc
pop
xor
inc
int3
hlt
out
xchg
arpl
adc
sti
xchg
fs
sbb
cmp
test
ret
and
mov
das
pop
add
inc
lods
out
testl
cs
popa
or
cmp
jae
inc
pop
rorb
inc
xchg
ja
sub
mov
ds
daa
jl
pop
lret
mov
movsb
test
dec
hlt
cmp
and
xlat
jge
add
xlat
out
mov
mov
movhps
and
push
arpl
dec
repnz
les
test
iret
imul
mov
and
enter
dec
xor
jmp
mov
add
sbb
xchg
data16
les
push
fimull
mov
jl
ss
pop
xchg
jno
and
aas
and
int
pop
mov
jbe
hlt
imul
popf
pop
mov
xlat
add
fsub
sbb
cmc
sbb
cmp
adc
aas
and
loop
mov
dec
mov
dec
xchg
adc
stos
mov
imul
stc
mov
nop
inc
push
mov
sub
shll
out
xchg
aaa
int3
loop
xrelease
pushf
xchg
inc
or
jae
dec
push
loope
push
cmp
ds
dec
dec
aad
stos
roll
mov
add
inc
int3
mov
repz
pop
arpl
push
mov
shr
add
sti
addr16
push
cmpsl
mov
jmp
push
and
jecxz
adcb
cwtl
jne
fs
scas
add
sbb
pop
and
movsl
push
and
stos
cmc
sahf
lods
pop
ljmp
shrl
sti
push
lret
mov
enter
stos
sarb
push
int3
gs
xchg
pop
sub
xor
outsl
test
and
push
push
inc
ja
cs
mov
xor
aas
out
jle
dec
xchg
cmp
leave
jecxz
and
or
cmp
jl
movb
cmpb
dec
dec
push
arpl
xor
adc
jnp
in
add
lret
cld
sub
push
inc
inc
or
mov
inc
xchg
aam
bound
fsubrs
pop
add
fs
cmp
mov
pop
cltd
sbb
inc
or
push
js
inc
leave
orb
mov
out
inc
lahf
ljmp
hlt
fldenv
cmpsb
cwtl
imul
sbb
repz
and
xorl
jnp
rorb
and
lock
add
mov
or
jbe
or
jle
lret
pusha
sahf
outsb
jmp
xlat
aas
mov
int3
lds
pop
add
sub
flds
faddp
rolb
inc
lock
or
arpl
pushf
test
daa
shl
lcall
mov
jnp
push
xor
xchg
push
add
addr16
icebp
mov
out
fwait
aad
lahf
cmp
daa
mov
test
sub
or
outsb
jp
push
or
jecxz
dec
add
int
push
jb
repnz
repnz
jecxz
std
pop
cltd
cmp
imul
inc
jb
in
push
das
push
dec
fsubrs
ret
pop
cmp
jg
mov
stos
push
xlat
es
das
mov
cmp
sub
cmp
fwait
dec
movhps
adc
lods
nop
out
add
mov
inc
pusha
add
mov
scas
cwtl
mov
pop
stos
fwait
add
push
cmp
push
cmp
adc
jb
mov
jnp,pn
aam
and
push
inc
ds
inc
inc
pop
cld
adc
push
repnz
in
sbb
aam
or
imulb
inc
sbb
lods
call
and
sub
shll
or
or
inc
lock
mov
inc
orb
xor
mov
shrb
orl
sub
gs
stos
mov
loop
jle
mov
outsw
xchg
movsl
rorl
pusha
test
lods
mov
test
jnp
jae
jle
mov
and
daa
test
lods
test
call
mul
aaa
push
iret
xor
inc
jle
inc
and
mov
in
pop
mov
dec
lods
in
mov
lea
call
cmpsb
pushf
test
orl
push
xor
mov
ljmp
and
repnz
dec
mov
push
xor
mov
adc
cmp
push
xchg
cmp
roll
or
inc
jg
fwait
in
xchg
outsl
xlat
pop
orl
pop
ret
pop
pop
mov
insb
adc
test
fsubs
shrl
pop
pop
dec
es
mov
jbe
xchg
scas
mov
mov
out
sbbl
je
scas
sub
xlat
inc
push
cltd
dec
xchg
adc
mov
fdivs
in
mov
roll
fs
xor
jnp
into
movsl
and
pop
jb
or
fstpl
insl
push
xchg
lock
jnp
push
out
xor
lods
pop
je
mov
aaa
add
or
pop
cli
les
arpl
fbstp
loopne
jmp
js
inc
lcall
ljmp
subb
push
in
mov
add
dec
aam
lds
mov
movsl
fsub
jge
test
sub
jle
pushf
cmc
leave
into
outsl
movsl
sub
add
xchg
fldl
lock
mov
std
mov
loopne,pt
stos
outsb
jns
imul
nop
ret
fildl
mov
sti
xchg
frndint
push
test
jge
dec
sbb
mov
sub
mov
out
push
add
repnz
insb
or
insl
cwtl
push
inc
sbb
jo
daa
push
out
in
add
adc
inc
adc
sub
mov
xlat
scas
jl
scas
add
sub
sub
insb
cmp
ds
mov
pusha
fistl
in
hlt
mov
inc
pop
mov
mov
andl
push
push
lock
adc
cwtl
xchg
dec
jmp
adc
clc
push
les
movsl
aad
mov
pop
jno
or
xchg
adc
jecxz
dec
jo
pusha
jge
mov
mov
std
rorb
xchg
cmpsl
dec
pmaxub
jbe
inc
dec
jg
aad
xchg
loopne
xor
push
jle
or
cmp
popf
out
jg
iret
ret
lods
out
and
dec
in
or
ret
xchg
inc
mov
pop
cmpsl
out
mov
mov
test
mov
stos
pop
dec
scas
test
sub
push
sub
mov
sbb
push
imul
loope
xor
and
adc
push
mov
mov
out
adc
dec
adc
xlat
pop
xorb
subb
inc
icebp
cld
cmp
lahf
test
in
aas
gs
mov
sub
es
add
cmp
or
rorb
ds
aaa
scas
lcall
add
stc
adc
mull
xlat
out
imul
pop
xlat
out
cmpsl
negb
add
into
or
mov
adc
push
int3
les
mov
xor
adc
xlat
mov
sbb
pop
in
or
mov
pop
int3
push
inc
in
cmpsb
das
cltd
lods
sub
dec
bound
clc
mov
cli
rclb
aaa
adc
add
in
prefetch
dec
out
lock
imul
pop
sbb
adc
cs
hlt
push
push
ja
movsl
adc
ja
ret
jne
xchg
sub
adc
cli
and
test
nop
mov
mov
xor
jge
mov
lcall
pop
imul
and
aaa
jnp
cli
pop
adc
pop
add
pop
cld
cli
mov
xor
ljmp
xchg
push
aam
push
cmp
sbb
cmc
and
mov
mov
daa
mov
dec
fisubrs
pop
jl
jb
cs
xor
push
dec
lcall
pop
ss
fidivrs
xor
test
cmpl
xchg
push
popf
push
cmp
xchg
sub
inc
push
aad
mov
mov
std
enter
arpl
lods
cmp
sbb
mov
data16
push
in
pop
into
insb
mov
cmp
add
push
cwtl
mov
cmp
in
cltd
xchg
push
xchg
shll
lcall
test
popf
movsb
push
decb
outsl
inc
lea
mov
jb
insl
stc
cld
adc
shll
inc
cwtl
fldt
lret
mov
sbb
js
pop
int3
imulb
loopne
push
mov
jg
dec
mov
test
push
xor
xchg
es
cmpsb
daa
xchg
lods
addb
lea
inc
jb
ret
dec
in
adc
mov
call
dec
sub
adc
idivl
pop
xchg
sbb
sub
push
add
mov
loop
push
pop
adc
ss
icebp
mov
xor
popa
xor
and
jnp
adc
push
cltd
mov
sub
addr16
mov
cltd
xor
jo
js
fidivs
outsl
mov
scas
loopne
es
in
push
cmpsl
mov
cmp
aas
pop
mov
cmp
hlt
mov
icebp
repz
cmp
cmp
pop
outsb
gs
test
and
or
sub
xlat
std
add
scas
test
push
cmp
pop
jl
enter
outsb
push
pushf
sar
ror
mov
adc
cmpsb
mov
fwait
out
jno
in
xchg
cmp
push
call
push
mov
mov
lock
fwait
mov
dec
and
xchg
inc
cs
divb
pop
xor
push
push
adc
outsl
add
xor
lahf
jno
sbb
rcrb
dec
cmp
sbb
cmpsl
aas
jmp
mov
jle
addr16
adc
sub
sub
add
addr16
ret
sbb
sarb
or
sbbb
jbe
pop
ret
popa
clc
out
jne
dec
lret
enter
push
jne
cmp
xchg
div
push
arpl
mov
push
sti
lahf
ljmp
or
sahf
pop
sti
arpl
adc
mov
and
out
arpl
push
dec
mov
js
jecxz
mov
xchg
les
xor
push
xchg
push
pop
shlb
mov
or
data16
bound
lret
inc
or
mov
insb
or
push
xchg
mov
fadds
or
jne
sbb
sti
xchg
xor
sub
aaa
ljmp
pop
pop
scas
mov
int3
ffreep
and
leave
inc
inc
out
ss
cld
lock
inc
das
outsl
jp
mov
test
pop
jl
pop
pop
ss
xchg
xor
cmpb
ljmp
stos
lret
mov
imul
push
popf
mov
adc
mov
lock
ret
jns
psrlw
test
out
popf
pop
out
es
cli
loope
scas
imul
mov
int
out
es
lods
ljmp
mov
sbb
push
adc
and
fisttpl
mov
jmp
sbb
ret
cmp
xchg
pop
fsubr
lds
xchg
shlb
scas
inc
mov
fmul
jp
adc
fistpl
das
add
or
fisttpl
ds
lret
sbb
sub
push
and
mov
xchg
andb
repz
cwtl
lcall
inc
xchg
xchg
adc
out
cmp
xchg
jp
xchg
push
jecxz
shl
outsl
addl
sbb
popa
and
les
cmpsb
dec
lods
pop
fwait
push
inc
sar
sbbb
fsubs
arpl
add
mov
vandnps
cmp
adc
ljmp
out
xchg
pop
movsl
jnp,pn
mov
dec
es
cltd
pop
add
and
sti
ljmp
sbb
cmp
dec
fs
pop
pop
dec
les
psraw
jg
pop
xor
cmpsl
jno
inc
scas
dec
pop
cmpsb
ja
sbb
insl
movntq
rcrb
hlt
test
or
jp
std
mov
inc
fldcw
push
cltd
mov
popa
out
adc
mov
jmp
movsl
mov
mov
sub
mov
scas
dec
int3
push
sti
sbb
jne
cltd
xor
ljmp
shrl
jnp
orb
fdivs
mov
lcall
mov
ljmp
lahf
xchg
jp
xchg
mov
add
scas
adc
mov
fcmovnbe
ret
out
lods
bound
or
js
addr16
mov
std
adc
jo
std
into
add
loopne
mull
lahf
daa
mov
add
lock
mov
aam
add
cltd
cmp
mov
dec
xor
dec
dec
jbe
setl
faddl
bound
xchg
dec
inc
cmp
sub
shll
adc
mov
aaa
stc
sbb
mov
cmp
daa
dec
andl
jb
cmp
scas
xchg
leave
jne
inc
xor
and
mov
and
xor
or
inc
scas
pop
cltd
fmul
mov
mov
xor
popa
in
push
hlt
in
add
not
push
inc
jo
lods
mov
sahf
rcl
xchg
xor
in
cs
push
inc
xor
add
mov
leave
mov
sub
out
into
scas
inc
push
shrb
js
sub
cmp
js
jle
push
dec
push
jns
std
pop
ds
lret
gs
lea
xchg
mov
jbe
fadds
test
pop
mov
mov
cmp
fisubrs
mov
cmp
hlt
jb
ljmp
out
xor
popa
pop
mulb
gs
mov
inc
lods
imul
scas
sbb
mov
inc
jge
in
imull
mov
mov
cltd
xchg
xor
mov
mov
push
inc
outsb
lcall
jb
xor
cmc
js
jecxz
mov
push
loope
in
add
inc
hlt
in
push
cwtl
mov
pop
xor
enter
mov
jecxz
scas
pop
dec
push
mov
or
pop
mov
or
jno
xchg
out
xor
pop
ljmp
iret
iret
mov
call
aam
xchg
mov
out
mov
int3
cld
push
inc
int
jbe
int
or
leave
in
jmp
and
push
cmc
mov
jmp
cld
push
aad
orb
add
mov
cli
out
xor
xchg
lock
or
jecxz
out
jb
ficoml
out
add
dec
faddl
jnp
cwtl
fcoms
into
test
push
cmp
sbb
lds
sarb
sub
fs
jmp
mov
loope,pt
and
push
jge
mov
mov
fimull
filds
pop
xchg
ss
mov
xchg
jg
pop
add
out
aaa
and
je
xchg
add
sub
mov
jae
and
mov
out
shrl
pop
popl
enter
test
push
inc
xor
imul
jecxz
sar
lahf
push
sub
mov
cmp
test
inc
adc
jecxz
mov
jmp
mov
iret
loope
pop
insl
aas
jg
sub
repz
jno
cmc
cmp
sarl
and
gs
mov
add
data16
xchg
les
and
jae
iret
mov
or
sub
in
sub
es
ja
shr
leave
sub
lret
pop
lea
ja
jl
lods
pop
in
add
cmp
sti
aaa
lret
pop
pop
sahf
cmp
and
pop
out
inc
nop
sbb
outsb
pop
mov
ret
and
bound
lea
jl
outsb
inc
jbe
push
push
ficompl
and
adc
add
jge
xor
outsl
ss
popl
in
fidivs
mov
dec
fisttpl
and
add
adc
bound
nop
cmp
cld
jnp
out
sahf
sbb
movl
and
ds
pop
arpl
sahf
pop
clc
pop
or
dec
dec
jno
or
sbb
scas
loope
xor
mov
pop
adc
lods
shll
xor
push
cltd
jae
ss
outsl
jae
es
pop
cld
push
inc
nop
jno
mov
mov
insl
jb
cmpsl
dec
adc
pop
dec
fidivrl
pop
shll
stos
aas
mov
sbb
data16
dec
lcall
or
jo
lahf
gs
xchg
lret
xchg
mov
popa
add
xor
das
xchg
std
adc
and
mov
into
and
mov
lods
jae
mov
jecxz
adc
push
xchg
popf
in
repnz
in
dec
hlt
add
repnz
xor
out
mov
mov
ljmp
sub
mov
mov
int3
xchg
enter
and
cmpsb
push
pop
push
mov
mov
cmp
sbb
jbe
inc
shll
hlt
adcl
movb
rcl
lds
cltd
popa
in
fcoms
inc
mov
sbb
and
xor
push
sbb
repz
adc
and
mov
xchg
or
loop
dec
mov
push
mov
adc
mov
nop
jno
jb
pop
add
in
sub
sbb
mov
cmp
mov
cmp
or
mov
adc
ljmp
fisubrs
pop
xchg
sub
jp
sarb
sbb
jg
aam
xchg
and
mov
add
inc
mov
aam
mov
daa
jge
pusha
sahf
fdivs
mov
jecxz
mov
or
in
xor
lds
jae
sbbl
or
daa
or
push
in
jb
stc
pushf
fsub
push
stos
xchg
in
jbe
cmc
adc
daa
push
jnp
iret
mov
pop
jmp
lret
jge
jae
ljmp
fsts
add
fwait
inc
sub
inc
sbb
fistps
pop
fisubl
mov
pop
daa
mov
push
pop
push
mov
lahf
daa
shlb
pop
fnstenv
test
add
sub
imul
aaa
lcall
mov
mov
sub
rorl
jecxz
jg
in
maxps
repz
daa
lods
xchg
movsb
aaa
xor
lret
loope
or
mov
cld
cmp
inc
pop
pop
fstpl
inc
shrl
fwait
inc
shll
jmp
pop
loopne
nop
mov
add
push
fs
shrl
faddl
lret
bound
dec
and
insb
outsl
outsl
jg,pn
mov
inc
xor
es
in
push
outsb
xchg
xchg
xchg
notb
ljmp
iret
sbb
cmp
mov
pop
sbb
adc
fsubs
lds
adc
pop
stos
xchg
stos
lods
and
cmpsl
hlt
je
pop
xor
pop
sti
nop
adc
outsl
rcl
in
jl
push
jmp
jp
ret
imul
rcrl
outsl
ljmp
mov
mov
pop
ljmp
dec
test
xor
pop
jle
sbb
lods
mov
and
pop
sub
ds
outsl
dec
xchg
mov
inc
fwait
pop
xor
cmp
push
sbb
cli
jmp
out
sbb
jnp
out
inc
test
pushf
mov
stos
or
and
adc
and
icebp
sbb
jecxz
sbb
sub
out
push
or
and
add
adc
push
sub
stos
and
pop
mov
adc
std
jo
test
rolb
daa
addr16
inc
das
mov
add
lret
int
inc
fisubs
jns
das
dec
mov
notl
xchg
jbe
and
and
bnd
iret
and
push
bound
cmp
jne
outsl
inc
sbb
cli
enter
cmp
stc
mov
mov
add
jecxz
adc
inc
jle
sbb
cwtl
jae
arpl
pop
lahf
lea
cld
lock
cmp
imul
out
idivb
push
lcall
flds
int
push
push
push
xor
mov
or
jle
call
ficomps
cmp
pushf
mov
fcompl
add
lock
mov
xchg
int3
adc
adc
inc
inc
pop
push
xor
lds
sar
add
dec
inc
mov
cmp
push
fwait
and
stos
xor
xor
fnsave
adc
es
push
pop
jns
jne
cmp
imul
xor
mov
push
stc
push
push
dec
dec
cmp
aas
icebp
xor
cli
xchg
shlb
jge
push
dec
push
pop
jmp
pop
mov
mov
adc
ret
cmp
pop
add
xchg
mov
mov
or
push
loope
adcb
mov
std
sub
push
jne
hlt
jo
out
adcl
sub
lret
mov
inc
mov
sbb
in
pop
pop
sub
clc
aad
jb
push
pop
xchg
enter
es
sbb
cmc
inc
andb
mov
push
movd
popa
mov
pop
fistpll
xchg
imul
sahf
cltd
add
test
adc
and
sub
or
mov
sub
je
jbe
hlt
jnp
dec
push
mov
jecxz
test
pop
adc
mov
shrl
imul
jae
cmc
sub
lahf
push
jl
and
shrb
mov
cmp
xor
sbb
lret
xchg
pop
addb
int3
inc
std
pop
push
dec
sbb
mov
stos
testl
lock
std
insb
sub
loope
inc
ds
mov
push
jmp
mov
push
fbstp
dec
fndisi(8087
and
mov
lea
push
pop
mov
adc
shl
insb
add
mov
or
cmp
or
push
test
ljmp
mov
cmp
cltd
icebp
xchg
add
in
sub
repnz
xlat
mov
stos
incb
sbb
mov
cld
repnz
mov
lods
cltd
mov
dec
inc
insl
pop
movsl
jg
and
pop
cmp
pop
push
inc
cmp
mov
pop
and
jbe
xchg
iret
sub
push
into
or
xchg
in
gs
jg
or
sbb
popa
and
in
sbb
mov
pop
push
lds
ja
adc
and
inc
jns
inc
add
mov
imul
out
inc
and
cmpsl
sub
insb
test
rcll
or
dec
sub
fs
lods
and
mov
and
bound
xor
es
add
push
sbb
aad
inc
push
adc
xor
sbb
cmp
sarl
mov
jo
xchg
cmpsb
sub
dec
push
jg
aad
cld
sbb
dec
in
gs
mov
nop
push
mov
xor
lret
pop
push
mov
in
inc
sbb
jmp
xor
mov
mov
fmuls
mov
mov
xor
test
mov
push
jmp
mov
out
test
lcall
mov
sub
mov
movsl
sbb
lock
repnz
mov
or
notb
das
ret
adc
movsb
negb
lock
xchg
jnp
dec
lods
cli
mov
xchg
ret
and
cwtl
rcr
addr16
ret
sub
jbe
roll
out
stos
push
xchg
aad
pushf
fistpl
or
lods
fxch
sub
enter
jns
lea
rorl
or
stos
sbb
dec
xor
push
sbb
fsub
negb
out
inc
and
sub
fs
addr16
std
pop
pushf
mov
adc
stc
std
and
lds
jmp
or
test
ret
movsl
out
stc
in
add
lods
add
push
xorb
push
loope
mov
xlat
xchg
jnp
dec
rclb
dec
int
testl
mov
cli
jle
lret
gs
lods
nop
ljmp
mov
add
icebp
mov
sub
div
lock
call
or
pop
aaa
outsl
or
or
xchg
loop
cli
dec
ret
fnstenv
jg
and
in
mov
adc
jno
imul
cli
jns
orb
add
shlb
adc
lods
fstpt
jno
das
mov
add
cmp
adc
pushf
or
mov
ret
js
fwait
cmp
pop
mov
arpl
dec
call
xor
imul
jns
adc
jl
test
xor
push
jno
stos
xor
sbb
int
sti
std
add
nop
inc
and
icebp
add
add
mov
push
cltd
icebp
les
pop
xor
mov
inc
adc
out
add
push
push
aaa
xor
mov
xor
add
scas
cmp
insb
cmp
lods
enter
sahf
jle
xor
mov
mov
inc
push
in
mov
xlat
ds
lds
inc
adc
xchg
arpl
jbe
xor
push
ja
push
jno
cmp
inc
vcvtsi2sdl
roll
das
jp
popa
leave
push
fst
pop
shrb
daa
dec
pop
adc
mov
test
xchg
imul
push
into
scas
inc
imul
sahf
gs
cmp
or
add
xchg
shr
shlb
dec
ljmp
lret
mov
jno
pusha
mov
das
sti
je
int
dec
jle
pushf
add
mov
xor
out
cmp
daa
xor
rclb
icebp
or
mov
mov
bound
push
push
sub
dec
fdivrl
add
pop
or
stc
loop
push
jecxz
nop
push
ret
loop
insb
inc
jmp
out
jecxz
xchg
roll
add
ja
sub
idivb
fisttps
sub
lahf
pop
enter
mov
or
add
push
and
push
test
add
popa
sub
pop
rorb
sbb
fisttpll
jp
and
mov
adc
adc
adc
scas
dec
frstor
xchg
adc
loope
rorb
jae
cmpps
adc
sub
adc
iret
outsl
lahf
sub
arpl
insb
push
xchg
pop
xchg
in
push
cmp
cmc
add
push
pop
pusha
leave
fildll
add
xchg
mov
popf
and
push
fadd
in
aaa
fs
sbb
sahf
pop
gs
jge
and
lods
aad
ret
push
mov
mov
mov
shll
popf
lods
sub
inc
xchg
and
inc
popf
loopne
insb
ljmp
clc
dec
mov
out
les
in
jbe
pop
insb
cwtl
xor
lea
mov
xlat
mov
sub
movsb
lods
xchg
mov
pop
ds
pusha
arpl
test
test
cmp
jns
movsl
pusha
mov
pop
ret
in
faddl
xchg
push
xor
push
or
test
je
sbbl
fdivrs
dec
out
xor
cmp
xor
jbe
push
push
ret
outsl
push
pop
pop
lods
sbbb
cltd
int3
jae
daa
cltd
movsl
outsb
fsts
dec
sub
icebp
loopne
into
ljmp
jae
aad
leave
or
pop
outsb
decl
lcall
movsl
loop
orb
dec
pop
subb
gs
pop
jb
ja
out
cmp
ret
xorl
push
mov
out
adc
push
pop
sbb
pop
mov
ja
jge
mov
add
mov
ja
mov
mov
mov
sub
loope
jne
fsub
add
jne
mov
jne
push
xor
and
lock
jecxz
jae
fcomip
insb
pop
dec
imulb
js
sub
lods
loop
lds
pop
scas
mov
js
xchg
clc
push
push
faddl
out
push
push
pusha
leave
std
rorb
or
add
nop
xor
sahf
movsl
cli
outsl
out
mov
mov
push
mov
push
adc
inc
xor
push
jle
mov
aad
pushf
test
bound
call
ficompl
fdivr
adc
pushl
add
jns
pop
xchg
jno
rcrl
or
jp
adc
imul
xchg
jo
jo
xchg
insb
lods
dec
jmp
lcall
xor
jge
pop
std
pop
lret
mov
clc
in
xchg
nopl
xlat
add
mov
insb
add
adc
pmulhuw
test
test
pop
pop
cmpb
xor
xchg
icebp
mov
rorl
sarb
insl
sub
xorb
or
and
lahf
mov
cmp
sub
push
cld
jp
ja
pop
dec
pop
pop
notb
cmpsl
out
xlat
mov
adc
enter
and
movsb
daa
test
pop
jae
xor
add
sbb
aad
out
iret
hlt
inc
xchg
mov
aaa
popa
out
fistps
loope
ds
sbb
cmp
stos
rcl
or
cld
arpl
cmpsb
jae
dec
repnz
clc
andl
in
sub
fisubl
les
or
test
ficomps
loop
push
dec
out
inc
mov
loopne
xchg
sarb
fisttpl
subl
in
pop
xlat
xchg
push
cs
jmp
or
or
sub
push
adc
add
mov
or
lcall
mov
sti
mov
and
or
mov
int3
sahf
mov
or
jb
pop
add
dec
jge
xor
mov
pushf
lret
arpl
stos
std
mov
sub
sbb
sub
pop
xor
hlt
mov
pushf
dec
inc
and
ds
add
push
xchg
dec
push
outsl
xor
jnp
mov
cmp
lock
std
test
ret
lcall
push
pushf
les
mov
fstl
mov
mov
frstor
mov
lds
in
jg
cmp
andl
mov
in
lea
leave
lea
pop
movsl
xchg
or
and
jbe
dec
shrb
fistpl
nop
jecxz
cld
in
scas
enter
ret
cmp
jo
shl
call
loopne
xor
or
es
insl
cmp
inc
add
xchg
or
dec
faddl
mov
add
lea
mov
cli
xchg
pop
test
iret
mov
ret
shl
mov
leave
inc
pop
sbb
cmp
mov
xor
test
push
ficompl
pminub
mov
xlat
mov
addl
outsl
cmpsb
jbe
imul
lea
xchg
cmpsl
scas
add
data16
loopne
ud0
mov
and
pop
daa
stc
fdivrl
fmuls
jmp
adc
iret
shr
mov
ret
adc
daa
add
stos
xor
enter
adc
xchg
pop
mov
mov
push
dec
jge
stc
mov
das
inc
sbb
movsb
xor
dec
adc
pusha
mov
cmp
repnz
and
cs
xor
shl
aaa
and
or
cmp
cs
pop
mov
xor
adc
aad
lock
aam
pop
cmp
or
test
stos
sub
mov
aas
add
inc
adc
out
out
and
push
pop
shrl
mov
shl
pushf
inc
sub
mov
into
test
cltd
arpl
mov
test
ss
movsl
scas
push
fucomip
arpl
jns
rolb
aad
hlt
shrl
sbb
and
test
push
cltd
shlb
lret
cmp
cli
mov
fcom
into
mov
inc
xlat
jne
daa
push
mov
jo
and
cmc
push
xchg
les
imul
adc
pushf
sub
inc
ss
ja
aad
sahf
test
lods
nop
lret
jp
int3
jmp
push
push
stc
movsb
mov
and
or
sub
cltd
pop
rcrl
xchg
mov
jns
and
dec
cmpsl
or
xor
es
mov
mov
push
sar
pop
sub
inc
sti
cmp
mov
push
repnz
inc
push
popf
fbstp
in
mov
movl
lods
jb
mov
outsl
call
mov
adc
dec
mov
xchg
stc
sarb
xor
adc
xor
movsl
cmp
cmp
les
shl
test
test
sub
mov
in
pop
pop
aas
movsb
rcll
ret
jp
out
pop
fwait
pop
rolb
cwtl
fdiv
sbb
out
mov
inc
pusha
and
shlb
pop
cmp
adc
mov
sub
mov
dec
ret
push
dec
inc
mov
push
pushf
and
dec
cmpsb
out
push
or
or
mov
movsl
or
mov
jle
and
shll
imul
leave
fldcw
inc
mov
andl
inc
xor
imul
in
ss
outsl
int3
shrl
cmp
stos
stos
cltd
mov
push
rcrl
imul
jbe
sbb
fadd
jge
mov
fsub
scas
fnstsw
xlat
in
lea
pop
adc
sub
inc
das
inc
dec
jbe
call
mov
mov
rcl
repz
add
shr
add
sarb
aad
leave
pop
clc
stc
add
sub
call
sub
jle
or
int
pusha
in
xorl
aas
clc
pop
sub
mov
mov
loop
cli
js
pop
leave
sub
jbe
pop
cltd
or
add
jb
incl
fidivl
fdivrp
daa
adcb
cmp
jl
mov
mov
fwait
xor
sub
xchg
jecxz
xor
inc
pop
add
mov
dec
mov
insl
xchg
pushf
stc
fildll
xor
aaa
cmc
lcall
sarb
mov
cmp
mov
cwtl
out
sub
fldl2t
int
ss
add
push
clc
jle
jecxz
test
dec
adc
push
mov
inc
faddl
out
lods
push
jno
xchg
in
psrad
push
dec
shl
testb
flds
aam
dec
popf
icebp
cmp
inc
sub
fbstp
cmpb
jns
mov
add
shlb
jns
add
std
iret
test
xchg
mov
js
mov
mov
dec
sbb
repz
insb
adc
shld
or
dec
jp,pn
mov
cmp
mov
cmp
mov
pop
jns
jl
loopne
popf
sub
es
xor
mov
aaa
outsl
cltd
subb
cmc
mov
int3
mov
cltd
cmp
popa
push
lret
test
popf
rorb
out
fistpl
jle
dec
push
adc
mov
sub
popf
in
xor
sbb
es
pop
les
scas
cltd
sti
pop
mov
lods
mov
push
jmp
aaa
mov
lock
push
in
lcall
xlat
cmp
movsl
fisubl
lds
hlt
jne
call
push
bound
and
imul
pop
jge
and
fnstcw
jae
lret
test
jnp
jns
xor
cld
stos
leave
ljmp
cltd
xor
sub
push
scas
mov
mov
popf
das
in
cltd
nop
jnp
push
sbb
sbb
inc
in
mov
fwait
inc
dec
xchg
iret
jo
inc
mov
pusha
fnstenv
mov
scas
pop
movsl
push
cmpsl
iret
in
push
cwtl
fwait
push
pushf
or
inc
add
push
and
scas
add
mov
sub
jo
jno
adc
jg
jo
mov
lock
hlt
cwtl
inc
pushl
dec
pop
test
cmp
and
cwtl
pusha
or
cltd
sbb
adc
ret
test
lret
sti
mov
mov
xchg
sahf
mov
sti
test
jmp
shll
addl
loope
sbb
sbbb
outsb
xor
mov
sbb
dec
sbb
sbbb
xchg
idivb
aaa
sub
xchg
inc
std
xor
pushl
outsl
push
and
xchg
mov
enter
jns
test
mov
push
rcr
add
fsubrs
lods
mov
ja
test
mov
pop
arpl
inc
dec
mov
mov
out
mov
stos
fcomps
jecxz
mov
push
add
mov
pop
sbb
jbe
mov
aam
pop
adc
fcompl
adc
pop
sub
add
sarl
xchg
add
xchg
and
imul
cld
iret
ljmp
loop
lcall
stc
xchg
enter
pop
push
inc
pushf
imul
xchg
mov
inc
pushf
sub
pop
aam
test
insl
jb
arpl
into
jb
push
inc
sbb
scas
sub
push
imul
and
mov
fs
cmc
jb
lea
xchg
leave
je
imul
mov
mov
lods
sub
cmp
out
sahf
stos
add
test
sbb
xor
fld
inc
inc
sti
adc
push
loop
xor
std
into
ja
int
push
fcoml
inc
xchg
mov
xchg
mov
add
push
xchg
add
jg
xor
jg
mov
imul
push
add
pop
les
inc
cmp
jge
sbb
jg
push
xor
and
pop
ficompl
cli
mov
ucomiss
test
xchg
mov
jbe
es
push
stos
lock
jmp
ret
xchg
xchg
mov
or
xor
rcl
pushf
sbb
fcmovnbe
jmp
add
cmp
es
repz
out
cmc
inc
divl
jecxz
push
jecxz
fucom
pop
jae
adc
cmp
adc
mov
orb
stc
daa
fisubs
lea
sti
bound
into
jmp
movsb
or
xor
cmc
dec
std
mov
ret
test
cmp
pop
cmp
pop
inc
mov
xchg
ljmp
int
aam
cmc
or
mov
dec
xor
dec
mov
pop
in
cli
jne
lret
xor
xor
out
js
push
outsb
cmp
popf
cltd
aaa
subl
rorb
jae
dec
mov
std
push
test
fwait
or
cmpsb
pop
and
sbb
xchg
in
jae
jno
xor
push
out
push
outsb
sbb
call
leave
in
stos
lods
inc
dec
pop
dec
scas
dec
xchg
pusha
into
aaa
shl
mov
pop
ret
adc
xchg
dec
mov
clc
ss
pop
adc
lds
jne
ret
dec
xlat
ds
push
imul
loopne
es
push
or
test
mov
adc
dec
scas
pop
xor
aaa
out
das
sub
pop
lea
js
cmpsl
pusha
stc
cmp
push
shrb
dec
mov
cmp
push
mov
xchg
and
sbb
sbb
adc
sbb
rcrl
push
push
stos
cwtl
cmp
in
push
add
adc
mov
bound
xchg
lahf
jle
fstps
mov
jle
nop
ljmp
lock
mov
push
pop
jbe
mov
mov
shrb
pop
shl
jno
es
dec
cli
cwtl
pop
arpl
cmp
fcomi
adcl
mov
cmp
xchg
xor
repnz
and
insl
and
hlt
pop
or
adc
fsubl
push
and
xor
lcall
shl
mov
jne
icebp
mov
mov
fdiv
hlt
xchg
add
pop
pop
adc
add
mov
test
stc
xchg
mov
fcmovnbe
ds
push
ficomps
popa
nop
jmp
movsb
mov
pop
adc
out
lods
pushf
jmp
or
jge
sub
in
frstor
cmp
cmp
ljmp
aam
inc
mov
dec
mov
out
push
inc
jmp
aas
scas
cmp
sbb
shl
bound
dec
ss
jge
test
in
cmp
ljmp
xor
xor
popf
pop
arpl
pusha
test
mov
cmc
or
xchg
popf
xchg
stos
sub
lea
rcll
ja
xchg
or
and
jp
add
xorb
sub
call
ja
add
pop
and
sahf
addr16
in
sbb
mov
mov
cwtl
lret
jo
mov
pop
repnz
sbbl
ss
xchg
mov
sub
shlb
int3
xchg
push
test
adc
push
dec
ret
xchg
aam
push
mov
test
cs
dec
hlt
cld
inc
push
add
addl
xchg
mov
insb
sub
cld
orl
ss
addb
inc
fmul
xchg
out
mov
mov
xor
ret
sbb
aas
mov
jo
push
sbb
xchg
mov
add
and
sub
dec
mov
cs
lods
aas
xor
dec
das
fbld
dec
dec
into
adc
push
mov
pop
xor
loope
inc
lret
mov
adc
jl
js
ss
arpl
and
pop
in
adc
push
cltd
popa
xor
xchg
or
sub
arpl
jbe
into
push
mov
jne
sbb
das
cmpsb
pop
jno
push
sti
push
fadd
pop
and
cmp
bound
adc
pop
lea
mov
movsl
mov
xorb
addb
pop
and
in
aad
aaa
xor
cmp
call
ss
add
gs
cmp
out
je
mov
xchg
add
insb
rcl
out
jmp
sbb
inc
rolb
jnp
rclb
mov
insl
ja
in
cmp
adc
sub
xchg
sub
gs
stos
adc
mov
inc
mov
inc
iret
jle
sub
mov
jno
jne
in
inc
xor
jp
leave
stos
roll
inc
and
fldenv
pusha
rol
popa
loope
xor
icebp
and
push
stos
jmp
cli
push
jle
clc
and
pop
pop
enter
cs
pushf
add
stc
stos
in
je
inc
andb
jae
pusha
movb
and
xor
or
pusha
add
cmc
scas
repnz
adc
xchg
cmp
adc
inc
aaa
push
test
push
inc
fildl
mov
insb
push
jmp
out
rclb
sbb
loopne
addr16
loope
lahf
arpl
inc
mov
movsl
xchg
push
xchg
mov
mov
nop
fcomi
mov
out
inc
icebp
test
dec
jl
add
and
pop
cmp
mov
mov
xchg
push
cwtl
xlat
sub
add
test
in
sub
pushf
xchg
lcall
fisubrl
push
daa
dec
inc
cltd
xchg
shrb
push
pop
lea
repnz
jecxz
scas
mov
mov
xchg
inc
sbb
mov
cld
cmpsl
bound
out
aad
sbb
mov
jo
incb
je
popa
sub
pushf
and
pusha
pop
pop
cmc
mov
leave
xor
call
mov
and
mov
cmp
out
mov
jmp
sar
xchg
jle
cld
outsb
fcmove
push
ret
out
inc
popf
dec
and
mov
js
mov
mov
std
js
sbb
ds
sti
ja
fnstenv
rol
or
loop
or
imul
push
test
call
pop
or
rcrb
pop
loope
xlat
mov
test
out
mov
mov
sub
notl
adc
sub
fs
mov
int3
inc
xchg
xor
stos
pop
repnz
sbb
int3
add
faddl
faddl
dec
push
cmp
dec
in
scas
mov
fisubrl
ds
sbb
stc
repnz
lret
xor
lcall
and
add
xor
call
popl
mov
pop
cmp
cmpsl
icebp
shl
or
cmpl
mov
xchg
pop
dec
cmpsl
mov
cli
sbb
jp
in
movsb
push
mov
or
ficomps
out
nop
add
add
hlt
adc
mov
lret
cmpb
cmpsl
je
push
int3
shll
outsl
gs
adc
inc
push
into
mov
test
or
inc
lcall
pusha
lahf
cmp
add
gs
mov
mov
pop
add
dec
js
notl
push
imul
mov
or
xor
and
fwait
xor
mov
adc
lahf
pop
movsb
rcrl
push
cmpsb
outsb
jne
cmpsb
sub
jle
cmp
mov
mov
xchg
std
push
dec
add
je
jmp
mov
xchg
pushf
pop
insl
daa
mov
icebp
adc
inc
stc
cmpsb
mov
lds
push
cmp
mov
nop
sbb
sahf
subb
shr
arpl
les
enter
fcmovnbe
fcomp
inc
adc
dec
mov
and
out
sbb
mov
aam
cs
jmp
cmp
fisubl
mov
popf
dec
sbb
xchg
sti
stos
xor
aad
pop
fmul
aad
xor
xchg
xchg
les
mov
add
mov
mov
push
jb
lds
ja
loope
sub
push
pop
cmpsb
sbb
xchg
mov
cli
jae
and
jmp
js
sbb
int
fsts
dec
shlb
xor
sbb
ja
cld
pop
and
or
mov
fnstcw
xchg
in
daa
lea
jge
pop
or
dec
push
popf
inc
jle
pop
arpl
jbe
adc
push
push
inc
mov
jg
add
js
rorl
scas
push
int
fidivl
xor
in
xor
das
hlt
lods
mov
dec
in
in
std
sub
push
inc
push
ficoml
aaa
addr16
push
aaa
mov
mov
dec
mov
pop
or
fcmovne
or
inc
lods
mov
cmpsl
lret
cwtl
mov
filds
mov
mov
sti
mov
cmp
out
fstl
adc
xchg
adc
test
lret
cmpl
out
mov
mov
hlt
cmpsb
movsb
outsb
movlps
and
sbb
add
sti
cs
stos
jb
xor
pop
bound
lahf
pop
dec
mov
ret
xor
cmpsl
test
jne
pushf
inc
sub
adc
bound
jo
inc
pop
ret
nop
dec
ret
inc
mov
xchg
repz
test
repz
mov
push
outsl
loope
mov
or
add
jg
and
push
dec
adc
xchg
xchg
fldl
xchg
aaa
inc
cmp
stos
sbb
adc
mov
and
jle
push
cmp
in
inc
popf
test
dec
dec
scas
test
mov
xlat
adc
arpl
mov
cs
pop
inc
out
mov
std
mov
inc
jae
sub
scas
outsb
pop
fnstsw
sbb
repz
popa
cmp
xchg
andl
lea
jecxz
ljmp
sub
fmull
movsl
cli
and
mov
inc
rolb
js
pop
and
or
inc
sub
fst
and
add
jnp
jne
mov
cmp
push
fdivrs
lahf
imull
ja
adc
jnp
ss
clc
imul
add
sbb
mov
xchg
call
sbb
lea
mov
insl
pop
fdivrl
test
add
test
pop
lahf
fmuls
pop
xor
out
fmull
xlat
mov
dec
rolb
in
in
fstpt
nop
imul
push
lcall
js
sahf
cmp
dec
mov
or
pop
clc
in
cmp
push
scas
test
dec
lcall
leave
add
sarb
int
rdpmc
in
stos
lods
or
dec
lea
mov
mov
movsl
js
inc
mov
xor
adc
call
das
dec
clc
scas
push
cmp
mov
and
inc
stc
mov
lds
repz
test
push
addl
mov
inc
aas
xchg
movl
mov
xor
jle
daa
sarb
sti
mov
inc
ret
adc
or
leave
jp
call
bound
mov
lcall
stos
push
mov
fmuls
loope
orl
movsb
std
loope
pop
insb
leave
xlat
jl
cmpsl
das
and
inc
cmpb
mov
out
aam
xor
mov
mov
mov
iret
push
sub
push
pop
lods
pop
fstpl
push
adc
mov
mov
or
scas
jecxz
jmp
or
and
in
pop
mov
es
popa
push
test
clc
out
aam
mov
add
push
jns
pop
push
push
je
out
lea
push
push
adc
loopne
push
cli
sbb
cli
cmp
xor
sbb
jl
ds
cli
aad
push
dec
inc
dec
rcrl
das
dec
cld
sbb
push
cmp
adc
add
popf
push
dec
and
mov
std
shlb
push
sub
mov
clc
in
pop
hlt
and
mov
iret
ret
sbb
imul
mov
arpl
mov
inc
mov
push
mul
sub
stos
mov
in
jbe
fs
xor
les
xchg
push
push
inc
fsts
mov
push
push
rcrl
xchg
push
shlb
fisttpll
pop
clc
push
lods
sahf
ds
xor
adc
aam
pop
add
dec
or
and
ljmp
lds
jnp
push
and
mov
cltd
stc
mov
inc
loopne
and
arpl
je
jno
xlat
divl
jecxz
out
or
cld
fs
outsb
push
sub
cld
loop
fucom
ret
shrl
shll
jb
repnz
sub
mov
sbb
popa
pcmpgtb
cmp
pop
dec
ret
or
int3
lods
bnd
push
jns
addr16
adc
cmp
nop
dec
in
loop
inc
pop
test
inc
adc
push
jl
stos
int3
arpl
and
cmp
bound
fcmovu
int
sub
jge
ret
inc
and
inc
arpl
enter
and
fsubrs
mov
pop
aas
lcall
inc
cmp
cwtl
jp
aad
add
xchg
dec
cmp
inc
cltd
jecxz
add
lods
mov
lods
cmp
and
xchg
mov
or
add
or
mov
pop
and
lahf
fidivrl
and
cmpsb
cld
fstl
cmp
ficomps
pop
lret
test
xchg
adc
cmp
ret
scas
loope
jo
ret
jge
call
sub
scas
mov
test
dec
sub
into
pop
sub
pop
shr
mov
push
and
sarb
or
or
push
mulb
insb
sahf
ljmp
insl
in
mov
and
call
adcl
or
push
in
scas
xor
cmc
pop
out
sti
fistl
dec
test
mov
outsl
cmpsb
jne
sbb
xchg
xchg
jge
xchg
adc
cmp
push
icebp
mov
dec
mov
fs
rcll
adc
icebp
and
cmpsl
arpl
mov
popf
jbe
nop
mov
fwait
mov
test
mov
cmpsb
addr16
sbb
or
sbb
xor
or
stos
cmc
dec
xlat
pop
jp
jg
push
cmpl
fcmove
inc
fcoms
add
mov
mov
aad
sbbb
nop
leave
dec
sub
mov
xchg
push
mov
das
pop
pop
cs
jmp
push
sarb
dec
cmp
jmp
dec
or
dec
loope
jnp
adc
jnp
repz
xchg
int3
je
stos
dec
sub
xor
push
xor
dec
mov
pop
push
adc
jnp
pop
adc
mov
sti
mov
test
push
dec
inc
loope
ljmp
fstpl
pop
cmp
jns
xchg
push
push
loop
xchg
inc
cmpb
sub
ret
movsl
sbbl
cmp
outsl
push
mov
sahf
jge
mul
and
adc
stos
xchg
push
jne
lret
les
dec
adc
mov
dec
into
outsb
xorl
xlat
pop
jecxz
inc
outsl
mov
int3
test
loope
test
daa
cmc
clc
in
xchg
fxch
aad
cmp
gs
mov
sub
sbb
pop
lds
jne
push
inc
imul
or
dec
pop
mov
mov
out
inc
jb
add
fwait
jl
arpl
enter
enter
repz
mov
ror
push
aam
xor
mov
pushf
push
push
cmp
push
stc
pop
pop
mov
jae
pop
loopne
std
fnstcw
icebp
mov
out
jmp
inc
sbb
jg
mov
pop
mov
ret
add
in
mov
mov
xor
jl
dec
mov
imul
mov
out
push
aas
fcmove
in
xchg
mov
mov
mov
jg
jl
push
inc
pop
test
cld
les
inc
cmc
out
lcall
hlt
divb
aas
add
sti
mov
scas
lahf
xchg
clc
inc
push
lods
rcrb
jp
jo
mov
iret
jne
xor
rcrl
sbb
movsb
hlt
jb
rorb
gs
lock
insl
and
out
lds
jbe
mov
in
jmp
imul
notl
pop
insl
cmp
insl
faddl
jge
movsb
sti
imul
mov
mov
mov
test
test
jns
sti
imul
rorb
sti
inc
mov
cmc
xchg
cmc
ret
adc
ds
push
dec
lret
mov
addr16
xchg
call
nopl
mov
dec
xchg
fbld
or
or
inc
clc
mov
dec
popa
mov
adc
push
jle
sahf
fs
add
xor
jp
aad
jo
and
xor
cmp
cli
xchg
scas
lret
aad
iret
enter
mov
stos
dec
popa
movsl
enter
insb
mov
fildll
pushf
jb
jmp
sahf
out
push
sbb
jle
jnp
add
pop
pop
rolb
jo
insb
stos
xchg
lahf
ss
mov
inc
pop
mov
cld
jl
insb
sti
fstl
cmp
cmp
cmp
jno
stos
sub
add
push
mov
mov
push
rolb
jg
ret
inc
inc
xlat
mov
cmp
dec
repz
lahf
push
popa
pushf
jo
movsb
lcall
gs
test
loopne
sbb
data16
mov
dec
les
imul
add
out
jmp
arpl
nop
popf
inc
dec
inc
mov
testb
mov
mov
pop
insb
lea
cld
xlat
cmp
lea
and
adc
sbb
incb
les
push
push
fists
das
pop
and
scas
in
loop
push
hlt
pop
daa
pop
out
popa
fwait
jo
and
inc
jmp
xchg
jmp
pop
add
pop
das
cmovle
out
push
mov
aad
ret
aas
outsb
xchg
out
test
cld
jle
and
shl
jns
sbb
mov
mov
loop
jle
mov
mov
dec
scas
repz
push
mov
test
adc
outsb
aam
mov
inc
inc
add
dec
push
call
aad
sub
fcmovu
mov
stos
mov
xchg
or
pop
dec
or
jecxz
inc
mov
and
and
mov
aaa
fcmovb
push
hlt
aas
mov
or
adc
mov
ja
push
in
stos
enter
mov
test
push
xor
adc
orb
scas
dec
dec
bound
xchg
or
lcall
rolb
ss
into
inc
aas
xor
sbb
add
pop
ja
les
xor
inc
imul
and
push
lret
xchg
jo
mov
cmp
rcrl
cmp
inc
cmpsb
in
cli
inc
nop
sub
push
pop
xchg
pop
push
cmpsb
jno
push
or
not
push
push
sub
mov
loop
inc
lret
lret
or
into
ds
pop
mov
and
mov
jnp
sub
fidivs
dec
pop
jecxz
sub
pop
outsl
sub
jp
imul
fwait
nop
sarw
xchg
fistpll
jl
fldcw
sbb
addr16
bound
sub
movsb
adc
sub
jbe
sbb
or
adc
cmp
sbb
adc
push
or
outsb
fstl
iret
mov
inc
mov
mov
addb
ret
mov
push
cmp
push
insb
je
cmp
arpl
mov
or
pop
cmc
lock
mov
jnp
xchg
adc
xchg
mov
hlt
fdivl
sub
pop
cmp
icebp
xor
push
xor
mov
outsl
cmp
stos
lret
rcl
cmpsl
fcmove
jno
add
dec
cs
inc
idivb
pop
les
loop
mov
inc
push
add
xchg
cmpsl
scas
ljmp
xor
push
aam
sub
mov
es
cmp
xchg
push
sub
daa
out
jbe
or
shr
mov
pop
jns
adc
xchg
jp
cmp
les
cltd
sbb
and
movsb
stos
rolb
cmp
into
inc
push
pop
mov
adc
cmp
pop
ret
cmp
shll
shll
inc
and
push
ds
push
xchg
mov
shrb
mov
lods
ret
fbstp
cmpsl
dec
xchg
arpl
xor
clc
pop
lahf
lret
xchg
aam
mov
pushf
push
popf
mov
addr16
call
hlt
out
sub
adc
push
add
out
out
test
ret
movaps
rorb
test
mov
test
fcompl
xchg
mov
xchg
popa
xor
orb
mov
outsl
insl
ret
or
out
or
rcr
gs
pop
test
pop
add
adcb
mov
sbb
into
lret
mov
mov
insb
mov
and
scas
dec
cmp
mov
aad
shl
push
lea
mov
outsb
jecxz
stc
sub
cmc
pop
fidivs
xchg
and
imul
push
movsl
out
cmp
xchg
insl
ja
add
xchg
pop
xchg
arpl
mov
xchg
je
sub
insb
stos
sub
pop
test
xchg
inc
and
xchg
movsl
and
mov
jmp
out
shl
jmp
sbb
sbb
fisubl
mov
rcrl
mov
test
ficoml
loopne,pt
dec
mov
or
popf
std
sti
xchg
mov
jbe
rcll
or
setbe
jp
in
jbe
mov
xor
xchg
cmpsl
ss
inc
cmp
lock
mov
sahf
scas
pop
pop
pop
mov
and
pop
dec
mov
or
mov
std
cmpsb
cltd
arpl
add
sbb
aam
pop
fisubrl
cmpsl
dec
fcomp
mov
pusha
adcl
xor
stc
fbstp
cwtl
fisubs
dec
add
test
or
sub
outsb
cmp
and
aas
scas
sub
sub
ljmp
sarl
stos
into
in
decb
fxch
aad
cmp
xor
lret
mov
or
mov
iret
lea
lret
aaa
stc
ja
dec
test
leave
cmp
testb
ja
fstps
and
insl
shll
sbb
insl
das
push
shrl
jle
push
sub
in
xchg
pop
fadds
movsl
call
mov
hlt
pushf
push
xchg
cmovne
cld
mov
or
sub
xchg
stos
js
pop
fisttpl
cmc
fwait
jl
mov
fistl
out
sub
mov
cmc
movsl
jp
mov
push
pop
push
cli
cli
pop
push
push
dec
add
adc
mov
clc
in
leave
push
shll
pop
push
xchg
loope
shll
dec
add
cs
and
push
insl
xor
and
and
adc
mov
jo
js
push
call
push
push
dec
scas
push
mov
push
jge
in
xor
stc
xchg
and
adc
imul
mov
or
pop
neg
jmp
pop
sbb
cmp
fcoml
add
stc
mov
cwtl
shlb
push
cmp
divb
mov
test
push
mov
pusha
xor
xchg
gs
lret
dec
outsl
push
mov
bound
jno
mov
cmp
adc
mov
inc
enter
dec
push
jle
dec
adc
repz
mov
test
test
xchg
and
loope
mov
cld
lds
insl
jbe
mov
fstps
fstpt
cli
pushf
inc
xchg
xchg
xchg
xor
xchg
xchg
jo
popf
cmp
sbb
jns
xchg
sbb
xor
rclb
lcall
dec
test
pusha
scas
or
push
cmp
push
and
mov
xchg
mov
out
mov
mov
mov
mov
xor
mov
lods
dec
push
repz
lcall
addr16
pop
fsubs
adc
or
aaa
mov
push
xchg
test
les
divb
sbb
int
add
adc
mov
lods
push
xchg
adc
ss
push
in
pop
fsts
sbb
push
scas
mov
lods
mov
sbb
imul
push
inc
jp
mov
xchg
push
add
incb
int3
push
pushf
clc
xchg
pop
cmp
push
repnz
int
cli
mov
lods
sbb
push
mov
in
mov
repnz
out
out
pop
xor
add
mov
xor
outsb
add
sub
jl
sbb
cld
out
jae
pushf
rorb
pop
bound
xchg
mov
mov
pushf
inc
xlat
in
and
jne
pop
stos
sbb
pop
ljmp
inc
test
xchg
mov
popf
jmp
adc
orl
sbb
jne
adcb
xchg
pop
pop
adc
push
push
and
and
push
or
mov
mov
hlt
sahf
subb
in
mov
outsl
dec
lret
pop
lods
jbe
icebp
inc
imul
adc
mov
sbb
cmp
and
mov
pop
lea
adc
repz
xor
xchg
mov
aas
not
cs
jecxz
sbb
sub
inc
repnz
add
jnp
sbbl
pop
and
pop
push
pop
fwait
ja
and
rcll
dec
enter
or
add
xchg
scas
fcmove
cmp
mov
stos
vunpcklps
push
dec
jbe
push
lds
jns
je
cli
test
inc
cs
or
inc
pop
lret
inc
mov
push
jge
pop
lret
xor
add
dec
inc
fists
jp
mov
pop
mov
les
push
sub
cld
outsb
add
ret
sub
repnz
sbb
dec
inc
add
add
jmp
push
rorl
imul
mov
arpl
addr16
loope
cmp
mov
jb
test
jne
push
in
mov
mov
bound
jmp
icebp
dec
dec
jae
aam
lods
adc
sbb
push
sbb
add
loopne
gs
xor
imul
push
push
mov
ret
stc
jge
xor
cmp
add
pusha
push
adcb
add
jmp
dec
xchg
jge
mov
and
push
dec
mov
repz
ljmp
mov
xor
vandpd
scas
fcomps
mov
out
dec
jecxz
push
loope
mov
les
aaa
mov
xor
push
mov
pop
inc
scas
int
movsl
mov
divl
stc
add
push
sbb
addb
mov
xorb
xor
and
jge
xchg
int3
jo
mov
jno
sbb
sbb
and
mov
ljmp
lcall
xor
insl
xchg
push
movsb
bound
jg
movsb
or
fwait
pop
jmp
pop
test
add
fisubl
repz
mov
scas
fcmove
mov
loope
jo
inc
mov
clc
out
xor
or
mov
je
dec
inc
das
inc
mov
lods
dec
ds
pop
loopne
push
sub
popf
xor
or
shll
shll
stos
push
mov
pop
nop
push
out
enter
leave
into
stos
cmp
test
mov
mov
ret
pop
xchg
and
pop
adc
leave
jnp
stos
popa
popa
mov
push
iret
jg
fnstsw
xor
jno
pop
xchg
pop
dec
adc
sbb
jecxz
inc
fwait
lret
sbb
lret
pushf
shlb
repz
mov
pop
jns
xor
scas
xor
cmp
hlt
cli
push
cwtl
enter
or
popa
adc
jge
sbbb
mov
push
shll
int3
pop
mov
js
xchg
je
jno
out
outsb
add
pop
jno
or
movsb
cmp
adc
fsubl
out
jp
repnz
out
xchg
shll
testl
add
subb
clc
movsb
add
cmp
push
imul
sti
test
aas
push
inc
cwtl
data16
jae
loopne
out
xchg
or
cmp
xor
psubsb
mov
movsb
xor
xor
cmpsl
icebp
scas
lcall
mov
xor
mov
in
jns
insl
dec
or
lea
ficompl
fucom
inc
add
pop
push
nop
stos
add
cmp
pop
fstpt
cmpsb
jnp
xlat
ret
jp
in
sbb
pop
scas
es
sub
dec
in
adc
mov
sub
insb
test
rcrl
scas
imul
xchg
repnz
mov
test
xlat
jecxz,pn
imul
iret
cmp
push
dec
pop
fdivs
sbb
and
daa
inc
and
nop
movsl
mov
sbb
mov
rcl
dec
mov
addr16
sub
mov
dec
inc
pop
pop
test
jg
mov
dec
add
cli
add
out
or
ja
jl
popa
roll
test
lahf
pop
or
xor
adc
in
xchg
ret
das
subl
js
jmp
cmp
mov
push
sub
inc
mov
cmp
sub
cmp
adcb
or
jge
and
mov
cwtl
push
mov
pop
xchg
fcom
clc
sub
jnp
sahf
jno
sbb
inc
push
pop
cmpl
shlb
into
sbb
cld
mov
cmp
out
jecxz
in
dec
adcl
mov
sub
orl
fwait
out
mov
and
in
sub
jo
xor
stos
out
lods
frstor
xchg
dec
push
cmpsb
or
fists
mov
shrb
gs
xlat
dec
les
out
mov
fcomps
negl
fisubrl
call
push
cmp
ss
xor
aad
outsl
icebp
cmp
filds
pop
mov
add
jp
in
and
adc
push
mov
and
lret
mov
push
xchg
iret
out
cmpsl
push
dec
push
outsb
inc
movsl
gs
outsb
cwtl
pcmpgtd
hlt
jne
cmp
push
xchg
jb
repz
ljmp
or
data16
push
mov
int
popf
int
out
popa
aas
shll
std
fldz
or
enter
fnstsw
pop
xchg
mov
pushf
bound
or
and
in
or
jg
push
xchg
aaa
lret
leave
imul
xor
les
add
fdivl
jg
cltd
inc
cmp
xchg
lock
mov
push
push
test
xor
repnz
ja
push
xchg
movsb
sub
push
repnz
mov
test
push
mov
imul
push
sbb
jmp
ss
in
xchg
push
and
stc
fnstcw
sub
pop
fsubrs
pop
dec
push
inc
pusha
iret
insb
adc
sbb
cmp
scas
cwtl
jnp
sub
in
xor
mov
add
sub
lahf
hlt
mov
pop
inc
or
stos
push
dec
or
cmpsb
arpl
fsubs
lds
and
inc
fbstp
push
out
inc
repz
mov
jle
jge
clc
mov
out
js
dec
jns
xor
mov
out
insl
loop
and
or
mov
jo
pop
inc
int3
std
ss
je
fstpt
jl
dec
push
inc
pop
test
and
ret
icebp
loope
dec
fistps
sarb
push
jae
mov
clc
popl
cmp
or
fwait
rcrb
cmp
ror
xor
fsubr
mov
push
sbb
pop
xchg
lret
pop
and
add
fucom
push
outsb
jle
jns
imul
and
in
cmp
or
leave
sbb
les
lds
fcompl
jmp
cmp
movsb
movsl
fwait
pop
jmp
and
das
lahf
xchg
add
or
dec
or
xor
shlb
inc
dec
outsl
rcr
adc
sub
or
mov
xchg
xor
pop
and
cld
push
test
mov
inc
rcl
es
pop
repz
adc
test
test
mov
daa
lods
into
push
and
daa
mov
xor
jecxz
adc
jecxz
enter
and
lods
mov
call
in
and
stos
arpl
sbb
xchg
mov
int
popa
pop
scas
sub
adc
aam
xor
sbb
xchg
aad
mov
xchg
faddl
mov
das
or
or
jmp
lods
or
movsl
arpl
cmp
dec
int
add
sbb
jl
push
add
xor
lds
pop
mov
cmp
ds
adc
add
mov
sub
mov
in
hlt
xor
xchg
ss
dec
movsb
fcmovnb
mov
push
jae
call
shlb
cmp
imul
aam
in
stc
jns
addr16
xchg
cmpsb
inc
xor
pop
repnz
ss
ficoml
sub
inc
push
pusha
or
xor
or
mov
sub
lret
in
jecxz
cmpsb
push
add
pop
sti
mov
sub
inc
fs
pushf
je
push
dec
mov
cli
pop
cmp
jno
xor
push
cli
in
mov
and
insb
mov
lret
mov
in
andnps
inc
inc
and
mov
ja
out
sub
faddl
add
out
sbb
mov
dec
mov
adc
ss
ss
lea
sar
out
int
es
mov
jp
fisubrl
out
out
sub
in
mov
loope
aad
dec
loope
push
inc
out
lret
popf
cmp
rcrb
mov
xchg
popa
loop
xlat
out
lods
sahf
xor
xor
stos
out
cltd
sbb
sub
stc
cmp
test
jno
out
xor
testl
into
and
loopne
bound
push
scas
jge
clc
push
cmp
xchg
repz
cltd
pushf
les
popf
push
jnp
push
in
mov
xor
inc
ret
and
adc
cmp
adc
dec
scas
lret
mov
sti
inc
ljmp
movsb
stos
push
xor
sub
or
stc
and
pop
inc
jb
es
sbb
js
pusha
add
cmp
mov
mov
fs
adc
push
repz
sub
scas
adc
inc
arpl
incl
push
fwait
push
mov
xchg
loopne
push
leave
scas
inc
mov
les
xchg
mov
shlb
bound
pop
cmp
repz
pop
imul
jns
loop
stos
and
inc
mov
mov
fs
sbb
push
aaa
xchg
jne
mov
mov
inc
xlat
push
mov
stc
in
pop
fisttps
loope
xlat
shrl
add
cmp
bound
ss
lahf
cmp
inc
mov
sub
movb
cltd
int
sub
loop
int3
dec
inc
fdivrl
addr16
int
mov
iret
xor
repz
push
outsb
jo
lock
pop
fs
adc
jle
and
pop
lods
in
mov
add
xlat
in
fcom
popf
subl
push
sub
cmpsl
ret
sbb
jle
cmpsb
dec
hlt
cmpsb
jne
pop
mov
mov
cmp
jl
and
xor
in
dec
inc
push
cmp
push
xlat
pusha
pop
cli
loop
jge
and
cwtl
jne
adc
adc
pop
jp
mov
sbb
sub
xchg
cld
addr16
js
or
in
iret
mov
mov
sbb
hlt
cmp
lock
nop
adc
out
iret
xor
pop
xchg
mov
jmp
test
xchg
call
mov
pop
inc
ja
pusha
ficoml
clc
and
movl
jecxz
dec
out
jo
mov
sbb
jb
mov
adc
scas
repz
push
sti
or
and
sbb
lahf
orb
cmpsl
or
mov
dec
repz
inc
xrelease
shrb
jb
dec
ljmp
cmpsl
shll
lods
mov
push
stc
pop
mov
push
unpckhps
cmc
lahf
push
sbbb
imul
gs
leave
fsubrs
jecxz
ds
mov
icebp
mov
pop
mov
aas
outsb
mov
in
xor
jle
pop
add
imulb
dec
xor
test
pop
mov
pop
lea
sbb
xchg
jo
fidivl
in
push
lea
in
adc
jnp
mov
xchg
outsb
leave
adc
and
loope
daa
jge
out
fidivrs
ljmp
int3
jnp
cmp
lock
cmp
sarb
mov
fwait
jge
inc
cwtl
mov
push
cmp
mov
push
mov
mov
and
pop
mov
popa
into
or
sahf
jle
add
and
bound
mov
fldt
mov
xor
and
push
imul
pop
add
dec
adc
add
sub
pop
push
pop
mov
mov
sub
cld
push
fsubrs
ficoml
sahf
cmp
enter
add
outsb
sub
je
loope
aad
leave
les
adcb
rolb
leave
mov
cltd
xchg
fsubrs
inc
xchg
sti
sbb
cltd
adc
and
xchg
or
test
sarb
out
imul
clc
jmp
add
mov
popa
mov
cmp
and
or
jmp
sti
imul
in
sbb
mov
popa
ja
jmp
stos
cmpsb
clc
leave
arpl
mov
add
cmp
inc
adcb
inc
mov
and
sub
dec
decb
fs
fs
push
js
xchg
inc
sbb
clc
int
add
movsb
aam
loope
sub
lea
ss
rorl
and
ss
rclb
push
test
sbb
icebp
jp
jno
test
xchg
lret
dec
pop
aad
mov
scas
in
popf
push
incb
stc
jne
les
out
xor
lret
lahf
jmp
nop
jecxz
jno
cmp
stc
jne
ror
pop
repz
and
or
ds
adc
aad
sarb
mov
imul
in
sahf
stos
dec
sahf
mov
xchg
or
inc
cmp
test
xchg
jl
movsb
adc
out
inc
icebp
push
aad
clc
das
cmp
cltd
loop
test
orb
adc
divl
cwtl
push
add
cmp
stos
pop
cmc
mov
in
ficomps
push
scas
rcll
inc
aad
dec
add
addr16
push
xchg
jbe
jo
movsb
iret
popa
int
or
pop
repnz
mov
xor
lock
adc
mov
lock
jl
dec
cmp
xchg
test
xchg
or
mov
popf
lret
add
xor
cmpsl
popa
rorl
sahf
rorb
lea
sti
push
mov
outsl
mov
cmp
mov
les
jo
testl
mov
andb
sbb
pop
sub
pop
push
aaa
cs
dec
in
test
mov
and
jle
pop
push
sbb
adc
arpl
shll
das
inc
and
repnz
or
jl
jle
insl
aad
out
shl
pop
lret
lods
xchg
testl
inc
push
test
mov
xor
or
mov
cwtl
addb
lret
movl
in
in
push
ret
ljmp
push
int
fnsave
jle
sub
cltd
pop
xor
call
sbb
or
inc
nop
daa
cmp
push
movd
jg
jl
aas
es
sub
sub
adc
sub
das
push
stc
add
fisttpl
hlt
push
aam
jb
js
es
adc
dec
testb
push
dec
std
jecxz
cmp
push
scas
dec
and
nopl
inc
add
inc
data16
rcr
xor
mov
xor
push
into
movsb
and
add
jecxz
mov
inc
test
cmpb
loope
add
pop
mov
cmp
add
aad
sub
out
jbe
loopne
mov
sub
addl
push
add
call
pusha
out
mov
xchg
cmc
outsl
mov
movsl
movsl
pop
loopne
pusha
iret
sbb
adc
fisubs
sub
mov
dec
mov
mov
xchg
xor
mov
mov
es
push
jbe
and
jle
dec
rolb
inc
leave
and
repnz
cli
arpl
call
daa
mov
dec
arpl
pop
mov
xor
sub
inc
pop
pop
xor
mov
loop
pop
push
mov
inc
xchg
inc
jnp
sub
pusha
inc
adc
mov
xor
or
inc
mov
add
movsb
rolb
sarb
jge
push
xchg
pop
mov
add
loope
cld
mov
cwtl
dec
xchg
dec
clc
mov
popaw
dec
loopne
cld
fdivs
js
rorb
enter
cmp
cwtl
ja
loopne
cwtl
add
and
das
mov
ja
out
inc
cmp
adc
call
push
add
xchg
push
ja
pop
imul
jecxz
and
cmpsb
lods
mov
push
dec
int3
movsl
lds
js
cmp
jmp
in
adcl
adc
gs
outsl
sbb
push
pop
in
fs
mov
add
insl
or
sahf
push
add
and
data16
push
addb
ljmp
stc
sub
mov
fmull
loope
repz
mov
dec
loope
or
mov
add
mov
xchg
aam
push
cmp
cmp
mov
cmp
bound
ret
fnstcw
sub
out
rclb
cmp
xchg
in
sbb
fistps
outsl
pop
add
push
enter
sub
mov
ficompl
pop
les
adc
popf
mov
push
enter
xor
addl
std
aas
std
xor
sbb
cmp
loope
inc
or
icebp
fildl
ja
push
dec
jmp
adc
inc
repz
mov
js
out
jg
push
sbb
cmp
sahf
xlat
decl
inc
sbb
pop
pop
add
loopne
bound
out
shrl
loop
xor
lret
outsl
test
pmulhuw
out
add
fcomi
lret
out
enter
dec
jnp
idivb
data16
mov
pandn
aam
lcall
inc
shll
fsubr
sbb
sbb
sbb
dec
jbe
sub
icebp
sahf
mov
fcom
jbe
or
jo
aad
rcr
ss
mov
adc
ret
xchg
aas
mov
add
int
sbb
loope
inc
stos
or
stc
sbb
jns
push
sub
sub
aaa
mov
mov
fiaddl
gs
xchg
pop
xchg
gs
inc
inc
jno
lods
lock
and
xchg
outsb
mov
lahf
ljmp
mov
stos
in
adc
pop
call
push
ret
mul
fisubs
inc
aam
jmp
jge
push
cmp
pop
lods
lock
sbbl
push
jge
dec
mov
notl
rorb
mov
std
cmpsb
sub
pop
lret
adc
fnstenv
xchg
out
ljmp
rcrb
aaa
cmp
jno
push
xchg
jecxz
mov
enter
out
sub
xlat
mov
or
imul
adc
lea
adc
fcompl
jmp
scas
jno
add
adc
test
xchg
xchg
or
fnsave
cmp
jb
xor
cwtl
pop
loop
aam
insb
ret
xlat
push
dec
jge
out
ret
mov
mov
gs
fisubs
mov
and
inc
sbb
aas
andps
mov
fisttpl
flds
or
cmp
ss
push
outsb
outsb
and
mov
imull
jo
loope
enter
movsb
sbb
pushf
out
movsb
es
jg
or
mov
add
pop
dec
cmp
dec
lahf
movsl
xchg
or
hlt
inc
and
add
or
sbb
imul
ss
push
fcmovne
xchg
sbb
xor
jg
or
out
stc
and
loopne
js
out
sub
cmpsb
dec
test
mov
or
pop
daa
popf
pop
or
cltd
mov
mov
ljmp
lret
out
inc
cli
mov
mov
lea
adc
push
jl
out
sub
pop
int3
inc
and
sub
and
hlt
xchg
in
sub
mov
cmp
sub
dec
mov
jae
fs
fsubl
dec
adc
std
mov
sub
popf
out
repz
xor
push
mov
ret
roll
test
das
mov
or
xchg
mov
popf
mov
push
push
mov
mov
pop
inc
ljmp
mov
je
std
lods
push
and
out
xchg
int3
cmp
and
mov
push
xlat
fucomip
stc
dec
mov
xor
push
xor
mov
pop
inc
test
dec
adc
and
xchg
test
xchg
js
jl
lea
or
mov
inc
or
loop
sub
mov
imul
cmp
repz
mov
mov
sbb
push
movntq
xchg
outsb
ds
and
enter
jge
stos
mov
mov
jecxz
divl
and
cmp
xor
push
shrl
add
call
and
fsubl
pushf
loope
add
insl
fisubrs
cmpsb
ret
in
dec
adc
call
lret
mov
shl
adc
loope
sti
or
pop
cli
sbb
insb
dec
xor
jge
xchg
sahf
jecxz
loope
mov
lds
cmp
cmp
or
ficoml
fwait
xchg
test
inc
loop
jo
aam
cmc
cmpsl
shr
test
test
or
pop
cwtl
mov
movsl
mov
cs
mov
out
test
or
jne
push
cltd
push
les
cmp
dec
call
es
aam
ret
xchg
jmp
pop
bsf
or
dec
adc
xchg
push
or
mov
icebp
mov
in
rclb
adc
out
rcl
pusha
mov
iret
dec
mov
mov
outsb
negb
js
mov
inc
xor
dec
lea
pop
rolb
or
pop
lcall
mov
fimuls
mov
test
adc
aaa
aam
in
dec
orb
mov
or
and
cmpsl
jecxz
lds
clc
inc
or
cmc
push
cmp
je
lea
or
mov
imul
ja
cli
jmp
pusha
xor
jp
cmp
sub
dec
mov
insl
fldcw
insl
cli
jb
fidivrl
in
cmc
xchg
xchg
xchg
dec
clc
add
inc
lock
jge
sbb
addl
fwait
jmp
mov
es
in
push
or
hlt
adc
or
enter
cmp
mov
rcrl
lcall
cmp
mov
ss
idivb
icebp
adc
std
mov
xor
mov
arpl
call
cmpsb
or
push
outsl
into
call
sbb
jl
dec
jg
cmp
jg
iret
lods
cmc
outsl
inc
mov
add
mov
ss
jle
push
cmpsb
insl
rep
adcb
push
cmp
js
popf
add
mov
int
mov
out
inc
int
or
and
cmp
sbb
and
sahf
fcmovnu
insb
bswap
cli
fst
inc
add
inc
mov
mov
int3
and
shl
jb
outsl
mov
sbb
stos
shlb
ficoml
push
pop
mov
hlt
insb
jno
test
adc
dec
sahf
in
aam
jl
dec
imul
pop
sbb
cld
test
sub
push
cmp
aaa
stc
aas
lods
pop
add
jno
jns
and
xchg
cmp
imul
std
mov
fisttps
jecxz
ljmp
cmp
subl
mov
loopne
mov
add
and
enter
popf
xor
test
inc
repz
jne
pop
push
push
mov
mov
push
sti
dec
in
xor
cmpsl
mul
lret
rcr
aas
jno
pop
jmp
addr16
mov
pop
mov
xchg
sahf
inc
shl
xor
push
int
xchg
dec
enter
mov
mov
adc
push
shll
dec
in
pop
lret
mov
jmp
stos
mov
mov
mov
and
jmp
lock
cmpsb
lods
insl
mov
andl
mov
in
movsl
cmp
lcall
mov
popf
outsl
adc
addr16
test
jp
mov
sub
in
test
int3
jae
xchg
vmovd
sbb
push
fcoms
sbb
mov
les
fcmovnu
or
call
jo
lock
mov
loop
push
mov
fadd
jecxz,pn
test
mov
mov
es
repz
sahf
cmpsl
rolb
cmp
push
dec
sahf
out
push
ds
push
push
cli
dec
mov
ljmp
pop
loope
outsb
cmp
dec
lcall
xor
roll
add
xchg
cli
cmp
dec
cld
push
pop
dec
int
mov
add
out
sbb
sub
mov
nop
ficomps
xchg
dec
add
shrl
movsl
es
popa
scas
xchg
and
movsl
pop
jge,pn
loope
flds
sbb
mov
sbb
hlt
mov
mov
aam
inc
fwait
jecxz
push
jae
jo
icebp
jno
shr
and
jmp
les
jne
sub
dec
jae
xchg
bound
neg
or
xor
push
jne
xchg
iret
ret
fldenv
cmp
movsl
jl
lock
imul
imul
out
cwtl
jne
xchg
ja
jle
pop
int
cs
sub
stc
xchg
sub
pop
xchg
sbb
cmc
jge
movsl
cmp
dec
int
cmp
sub
daa
cmp
cli
pop
sbb
out
inc
iret
sbb
lods
addb
pop
jb
data16
ja
roll
mov
dec
cmp
lock
pmulhw
add
dec
cmc
inc
lcall
cmp
cmp
sbb
dec
sub
cmp
pop
pusha
das
mov
jno
shl
stos
inc
mov
in
mov
bound
pop
fcomp
cmpsl
mov
rorl
hlt
xor
outsl
adc
push
aad
out
lea
lret
sub
sbb
popf
fcoml
icebp
insl
out
cmp
xchg
lods
push
pop
imul
adcb
addb
sbb
push
dec
or
ret
clc
je
in
xchg
mov
mov
and
cmp
iret
xchg
sub
mov
cmp
or
and
aaa
inc
popa
add
pop
push
jl
cld
push
and
push
cli
push
push
nop
cmp
jno
lds
cltd
rol
fsubl
jbe
popf
mov
rcl
lods
in
and
push
or
cwtl
push
jle
cmp
pop
fnsave
sbb
je
adcb
fwait
mov
jmp
or
mov
cmp
enter
xchg
jns
adc
inc
push
aam
jl
cmpsb
adc
adc
pop
mov
sub
or
clc
push
push
cs
repnz
lds
cmp
pop
dec
es
cli
sahf
jbe
add
jbe
xchg
inc
mov
mov
in
sahf
jns
arpl
mov
aam
jmp
imulb
xchg
jl
lahf
frstor
fwait
dec
imul
std
imul
enter
jge
test
lock
fists
mov
ss
xchg
decl
push
jbe
das
stc
pop
push
in
loop
in
out
and
jecxz
lahf
jno
xchg
insl
les
scas
into
dec
call
jno
cld
xchg
push
push
push
sub
aas
push
sub
inc
roll
enter
sahf
mov
jbe
xchg
adc
repz
mov
add
mov
sub
lods
int
pop
lods
fcomi
call
mov
imul
inc
loop
andl
clc
push
shl
dec
or
sub
and
les
out
aas
cmp
mov
fcoml
or
out
inc
lock
scas
loope
mull
movsl
xchg
pop
std
jbe
icebp
sbbb
arpl
pushf
dec
mov
das
je
out
call
add
int
inc
shl
push
or
cmp
movsl
shll
fsts
out
outsb
hlt
pop
pop
mov
cmp
ret
xchg
mov
pop
arpl
scas
std
add
sti
les
dec
lcall
jnp
jo
js
lahf
xchg
and
jmp
mov
mov
dec
adc
mov
sti
aad
push
xor
jb
arpl
xor
mov
cmp
inc
jmp
aaa
test
pop
outsl
sbb
dec
rorb
ja
icebp
mov
popf
mov
ja
sub
jb
aas
cmp
test
int3
mov
test
add
and
pop
lcall
push
cs
loope
and
int
mov
stos
pop
inc
add
out
sub
jae
inc
clc
shlb
sbb
rclb
fnsave
add
push
jmp
xor
ret
pop
push
lcall
rcrl
testb
loopne
lret
dec
sbb
outsb
dec
sub
shl
cmpsb
out
push
mov
rorw
shrl
inc
mov
jo
xchg
hlt
xchg
mov
std
and
cmp
pop
lahf
jg
jne
cmp
sahf
ret
inc
add
sub
notl
xorl
out
add
lods
call
aaa
imul
scas
mov
mov
push
and
test
cmpsb
push
or
sub
push
mov
cmp
jne
movsl
out
xor
add
sbb
and
mov
fs
push
push
orb
or
xor
dec
andl
mov
in
lahf
xchg
pop
pop
xchg
adc
jne
popa
std
cmp
sbb
ret
mov
out
into
pop
ds
inc
icebp
sti
pop
or
ret
mov
test
cmp
sbb
inc
sbb
and
sbb
mov
aas
stos
sbb
testl
mov
pop
xchg
aam
in
aam
cmp
pop
cmp
fldt
shl
aaa
aam
sbb
pop
inc
mov
iret
fwait
into
sarl
mov
es
xchg
sbb
loopne
cs
outsb
mov
sti
jg
lock
imull
aas
fwait
jle
shrl
ret
xor
daa
mov
adc
pusha
loopne
outsl
cmp
mov
mov
push
mov
jns
xor
or
push
lea
data16
cmpsl
jmp
xor
xchg
sbb
push
pop
sub
adc
mov
je
mov
cmpsl
mov
adc
adc
and
sbb
cmp
test
inc
lcall
xor
cmc
add
lock
mov
jge
xor
inc
ret
imul
xchg
jg
jl
xor
sbb
sti
lahf
pop
es
sub
fsubrl
jmp
cld
int
add
leave
xchg
dec
pop
inc
dec
jl
fsubrl
je
push
sahf
call
loop
ljmp
loop
dec
adc
incl
mov
mov
mov
sbbl
outsl
pop
mov
push
cmc
ud1
xchg
pusha
mov
mov
cmp
xchg
push
and
xchg
sub
out
lcall
cltd
test
bound
in
or
jo
cmp
loop
lcall
in
pop
rclb
jl
pushf
lret
insb
xlat
jecxz
or
cmpsl
adc
clc
mov
mov
fsincos
aad
int
testb
mov
mov
xor
pusha
sarb
add
and
jle
fs
jns
push
dec
mov
inc
jb
mov
fwait
push
popf
repnz
mov
xchg
addr16
in
xor
sbb
sbb
dec
push
and
leave
adc
pop
mov
dec
mov
aad
mov
inc
mov
xchg
add
inc
mov
divl
jns
sbb
or
sub
scas
or
testl
incb
push
testb
xlat
pop
fidivrs
out
dec
into
push
push
js
and
push
jge
lahf
inc
hlt
lods
cmpsl
or
xchg
stos
popa
cmp
add
mov
test
xchg
neg
int3
call
aaa
cmp
in
jle
fmull
xor
xchg
pop
and
aad
jge
inc
sub
mov
into
addb
pop
jnp
xchg
mov
hlt
and
repz
lds
inc
push
into
pushf
jbe
xchg
push
mov
enter
sub
cmp
ds
or
fdiv
push
loopne
loop
loope
sub
std
sbb
cmp
mov
inc
scas
in
mov
ficomps
inc
jl
je
ficomps
push
fistl
dec
jb
mov
xchg
mov
fldcw
ficoml
push
subl
pop
sub
pop
jge
aam
imul
lock
jge
stos
das
imul
and
icebp
lods
inc
outsb
out
sbb
jo
in
shrb
cmc
mov
jecxz
pop
daa
pop
add
fisubrs
inc
add
addr16
pop
dec
or
fwait
scas
sub
xchg
sub
jo
push
fwait
push
loopne
out
add
icebp
or
push
mov
cld
cmc
aad
bswap
cmpsb
dec
xor
into
jns
outsl
push
mov
mov
sub
push
push
sarl
enter
sub
xchg
inc
jmp
sub
test
jns
scas
push
push
xchg
and
testl
sub
or
jg
dec
mov
fimull
mov
push
int3
jp
jecxz
xor
jne
mov
insl
jmp
and
cmpl
cli
jae
xchg
icebp
popa
push
xchg
sbb
fildll
and
out
jle
ret
pop
sahf
cs
fisubrl
mov
cmc
mov
mov
xor
popa
leave
mov
push
jmp
lcall
mov
mov
rclb
mov
mov
insl
iret
lahf
pop
xchg
out
data16
fnstsw
jmp
cmpsl
jb
fstps
dec
inc
xchg
push
jecxz
js
lock
test
adc
xlat
sbb
lea
cmp
sub
mov
jecxz
rolb
lcall
sbb
mov
jg
int
ss
aas
bound
shlb
lahf
scas
push
and
push
pop
xchg
popa
popa
loop
in
dec
lea
subl
ja
iret
mov
ret
push
movsl
jb
jg
or
sbb
stc
xchg
add
add
cli
xchg
jmp
lahf
int
inc
xlat
hlt
lods
and
cmp
ss
inc
and
fucom
pushf
addl
jg
call
rcll
fidivrl
jg
mov
fistps
in
mov
pop
or
adc
stc
adc
pop
adc
or
aaa
enter
add
jae
loop
mov
cmpsb
stc
push
popf
loopne
test
fs
stc
testb
jne
mov
nop
cld
leave
pusha
repnz
int
test
xor
mov
lcall
jns
cmp
inc
mov
aam
push
mov
jo
mov
mov
mov
jg
aad
shrb
lcall
or
pop
add
dec
fadds
jae
fcmovne
js
mov
outsb
push
inc
in
jno
call
xlat
inc
test
xorb
mov
sbb
jns
sub
hlt
pusha
add
adc
adc
je
pusha
sbb
dec
outsl
cmpsl
pop
in
sub
ret
ds
xor
push
push
out
jae
insb
lret
mov
les
pop
xchg
cmp
jecxz
cmp
rcrl
mov
dec
xchg
cmp
dec
pusha
enter
mov
inc
sub
ja
ffreep
lahf
mov
lods
leave
shll
jp
ja
addl
jle
xor
or
ret
sarl
iret
stos
int3
push
enter
out
jne
push
jne
outsl
loop
sub
sbb
sub
lods
push
repz
out
dec
or
in
and
jno
and
add
fucom
fs
out
mov
and
js
xchg
sub
jmp
bound
dec
jge
mov
outsb
lods
cli
push
xchg
xchg
adc
xor
int3
xor
insl
pop
cli
push
out
xchg
add
cmp
lods
adc
ljmp
push
dec
cmp
lret
inc
or
loope
mov
scas
nop
xor
pop
adc
icebp
test
shll
aam
out
xor
push
movsl
hlt
movsb
orb
cmpxchg
adcl
cmp
out
dec
imull
cmc
sbb
cmp
mov
mov
mov
out
jg
or
fcmovnbe
sub
mov
xor
lods
fidivl
lcall
pop
xor
repnz
imul
or
and
add
repz
dec
mov
adc
fwait
mov
jge
jg
test
fsub
adc
popf
mov
lcall
push
xchg
test
test
xchg
das
rol
jae
mov
xor
rcl
pop
sbb
push
aaa
and
js
movsb
ja
mov
rclb
inc
sub
mov
out
lcall
xor
leave
addr16
lahf
js
mov
cmp
cmpsl
das
cmp
or
test
pop
mov
lea
xchg
dec
test
pop
mov
xchg
in
lods
test
adc
xchg
scas
fistps
popa
imul
cltd
mov
xor
xchg
sub
cmpsb
fadds
dec
std
rcrb
and
cs
and
insb
jmp
xor
dec
and
les
dec
fstpl
sbb
test
mov
leave
nop
jo
sub
pop
shlb
dec
push
mov
pop
fdiv
ljmp
jb
adc
inc
push
int
cs
mov
add
ss
adc
adc
pop
ret
or
cmp
dec
sahf
frstor
cltd
lea
fldl
push
or
jb
or
xchg
sub
jno
adc
outsb
jp
dec
jl
iret
fs
or
push
or
inc
and
pop
xor
sahf
dec
mov
pop
push
mov
jo
inc
mov
jp
fisubrl
icebp
sahf
inc
cmpsl
adc
fsub
lea
mov
daa
mov
cli
mov
rorl
adc
pop
ret
rclb
outsb
or
negl
and
mov
push
aaa
movsl
sbb
shrl
add
std
pop
cmp
movsl
add
xor
bound
and
mov
out
cmpsl
push
stos
and
pop
jo
js
hlt
sub
je
rclb
xchg
pop
jmp
lods
mov
sbb
out
fwait
add
data16
sub
into
idivl
push
insl
repnz
fidivrs
jecxz
loope
sbb
xor
and
loope
or
js
adc
rclb
pop
or
rcll
jno
jmp
xorb
dec
xchg
mov
popa
rcrb
divl
lahf
insb
mov
push
add
test
repnz
int
xor
sbb
xor
dec
call
push
lds
mov
inc
adc
jae
jo
dec
push
insb
cmp
ret
mov
fildll
mov
sub
add
es
jmp
pop
and
test
rorl
xchg
dec
pusha
lret
pusha
push
roll
mov
arpl
xchg
sub
stos
xor
jb
ds
jg
dec
and
or
jne
sahf
or
cmpsb
sbb
mov
mov
out
int
movsl
enter
inc
mov
sahf
pop
sahf
hlt
rorl
addr16
adc
inc
dec
aas
cwtl
sar
sahf
loopne
scas
dec
sti
and
mov
fdivr
sti
sahf
jo
pop
mov
pop
mov
imul
and
dec
sbb
dec
and
in
jmp
int
add
add
and
add
nop
jle
cli
mov
jl
sub
leave
lahf
and
jb
mov
stos
mov
dec
mov
repz
sub
aad
and
adc
inc
loop
test
xor
cmp
pop
dec
bound
dec
or
pop
fs
add
es
fmuls
gs
adc
sub
cld
xlat
sbb
ja
dec
or
push
mov
dec
addr16
fcompl
inc
nop
aam
and
pop
pop
movsb
sahf
inc
fisubrl
shrl
and
mov
aaa
mov
add
aas
mov
mov
mov
or
cmp
pop
aam
pusha
gs
jge
sub
add
add
addr16
icebp
mov
out
lea
mov
push
hlt
push
ljmp
outsl
je
fsubrs
xor
sbb
add
cmp
loop
arpl
repz
imul
add
push
mov
aad
lcall
xor
mov
in
and
gs
ret
adc
sbb
xchg
dec
test
pop
nop
gs
inc
sbb
sub
repz
cmpsb
bound
push
sbb
addr16
add
sub
imul
lret
jle
mov
sub
leave
xchg
mov
addb
arpl
aam
dec
movsl
clc
inc
fwait
jno
lods
loope
inc
pop
shrb
mov
dec
and
push
or
mov
ret
jnp
inc
jne
mull
mov
mov
dec
or
cmpsb
xlat
push
cmp
jmp
cs
dec
xchg
popf
add
repnz
negb
push
aaa
dec
pop
and
ds
in
xchg
into
xchg
addr16
mov
int3
enter
jo
nop
mov
cmp
hlt
xchg
mov
call
outsl
adc
mov
cmp
jge
movsb
loopne
cmp
inc
arpl
add
aad
and
mov
fst
fbstp
sbb
xor
pop
xor
popa
scas
mov
popa
sbb
test
mov
lods
and
mov
cwtl
ret
or
cmp
jl
ja
cltd
hlt
mov
aam
daa
sbb
pop
and
arpl
fnstcw
dec
into
dec
xor
stc
imul
aad
xchg
in
sub
clc
frstor
push
push
shrb
jnp
pop
mov
out
sti
aam
and
adc
cmp
dec
cmp
imul
inc
mov
notl
ss
cmp
jp
push
insl
das
pop
inc
cltd
call
cmp
call
jmp
push
dec
adc
mov
jmp
adc
stos
aam
test
mov
xor
push
aaa
jae,pt
incb
add
cmp
fisubrl
push
adc
imul
out
push
movsl
mov
push
push
sub
das
mov
and
insl
insb
push
mov
cld
mov
add
pop
mov
fidivs
add
into
add
pop
jo
pop
mov
jp
stos
dec
dec
xchg
daa
and
movsl
aas
lret
sbb
int
adc
sbb
push
jl
ss
cs
scas
xor
push
or
xchg
mov
xchg
dec
test
ja
sbb
xchg
lock
das
xchg
cs
js
xlat
scas
mov
jecxz
sub
push
xor
aas
scas
push
fisttpl
add
rcll
xchg
xchg
das
xor
jge
out
mov
cmp
jecxz
add
push
insb
inc
sub
movnti
adc
clc
loop
sbb
and
loope
in
test
mov
fs
jp
in
or
push
and
inc
and
imul
in
ss
adc
js
enter
shll
lahf
dec
aas
adcb
push
stos
mov
test
mov
pop
mov
cmp
dec
dec
inc
xchg
jne
fsubl
inc
xor
sbbl
mov
mov
push
pop
add
pop
mov
scas
adc
enter
or
xlat
xor
mov
push
add
sbb
leave
lock
mov
aas
je
and
push
insb
mov
push
pop
scas
stc
iret
outsl
xchg
xor
nop
sbb
jle
or
push
and
stos
xor
sti
xchg
cmpl
add
std
push
call
lret
jo
movl
ljmp
int
fisttpl
cld
aaa
jl
lahf
mov
xor
arpl
jecxz
scas
test
int
lcall
insb
xor
mov
inc
div
push
in
stos
jb
lock
stos
in
in
cwtl
xchg
pop
ret
mov
add
push
jnp
pop
dec
loopne
sbb
mov
xor
test
roll
jb
mov
mov
inc
dec
mov
outsl
pop
add
pop
in
xor
cmc
sub
cld
lock
xor
push
xchg
loope
in
push
notb
mov
popf
mov
daa
sbb
ds
pop
int
lret
cs
cmpsl
xor
cwtl
mov
popf
mov
jmp
fwait
push
adc
adc
sub
mul
nop
cmp
fwait
addl
loope
cmp
mov
ja
test
decb
in
fwait
inc
icebp
sub
inc
mov
xor
jne
jnp
enter
mov
push
sbb
frstor
or
popa
mov
out
divl
inc
dec
and
push
outsb
inc
dec
sbb
mov
mov
push
insb
fmul
push
das
cmp
in
in
dec
inc
or
fnstcw
cmpb
fld
mov
and
xor
mov
sub
and
push
dec
stc
aaa
jnp
lods
out
hlt
jle
nop
outsb
xchg
divb
out
les
out
pop
cwtl
loopne
cld
fsubs
add
mov
lret
xor
mov
mov
scas
pop
jge
add
mov
mov
push
roll
sbb
push
push
ljmp
cmp
stos
imul
lods
push
nop
les
fsubl
mov
inc
subb
push
sbb
mov
ds
in
jns
enter
test
and
ja
mov
fcoml
leave
lods
cld
xchg
ficoml
or
push
test
and
cmp
mov
cmc
lea
dec
lea
cld
xor
cltd
mov
and
ljmp
sub
mov
fwait
cli
je
pushf
adc
push
pop
and
je
sub
jno
in
xchg
jb
das
js
mov
add
rorl
adc
int3
sub
xor
fnstcw
mov
jne
or
jno
mov
aam
int3
add
mov
push
jg
call
xor
xchg
jecxz
sub
jnp
fimuls
scas
pop
aam
lret
mov
or
xchg
jae
mov
or
rol
mov
das
nop
insl
jp
movsl
sti
xchg
push
nop
leave
xor
scas
ja
xchg
int
das
test
inc
inc
xchg
cltd
or
roll
imul
leave
jle
jge
icebp
dec
jo
aam
or
adc
pop
cmp
mov
adc
add
sar
js,pt
xor
or
cwtl
pop
loope
xchg
in
loopne
test
sbb
clc
pop
cs
add
jne
in
stc
fwait
into
jne
in
stc
and
cmp
add
jmp
aam
jbe
scas
inc
cmpsl
push
xor
subb
test
sbb
cltd
sub
xor
xlat
out
sbb
arpl
jl
xor
mov
mov
pop
jmp
stos
jge
mov
add
cmc
daa
xchg
iret
sub
sub
mov
mov
shrl
jne
fstpt
cli
and
push
mov
cmp
dec
cmc
and
lds
sub
sbb
ja
pop
mov
jmp
cmpsl
adc
jg
imul
bound
xor
add
cmc
int
roll
cmpb
cmc
sarl
fidivs
dec
mov
fdivs
mov
fmuls
dec
rclb
pop
cmpsl
cmp
jo
cmp
movsb
aam
xchg
js
js
or
add
nop
jmp
and
mov
je
enter
xchg
push
mov
stc
cmp
mov
imul
leave
loop
pop
je
and
cmpb
jge
in
xchg
ret
mov
and
sub
lcall
push
dec
ret
or
mov
push
xchg
xor
xor
xor
imul
sbb
cmp
jge
test
pop
insl
sub
movsl
lea
out
push
sahf
out
iret
popa
pusha
add
xor
cmp
add
cmc
test
jmp
pushf
cmc
pop
lods
mov
scas
sahf
ss
sahf
add
test
out
add
mov
dec
in
outsl
gs
popf
or
paddusb
cmpsl
xor
bound
inc
div
push
add
ljmp
ss
mull
lods
pushf
insb
outsb
test
sbbl
add
pop
pop
mov
das
mov
mov
out
jg
fwait
in
sbb
push
test
test
test
inc
jnp
mov
sar
icebp
pop
dec
rclb
cmp
mov
out
int3
mov
roll
mov
fs
xchg
fs
fidivl
jge
sub
cmpsl
popf
add
movb
insl
in
loope
lret
pop
imul
out
cltd
jns
stos
add
enter
inc
pop
mov
hlt
xchg
nop
in
sub
inc
inc
ljmp
sub
mov
shll
xchg
lods
sbb
cmp
mov
and
xchg
cmp
sub
and
push
cwtl
xchg
pop
mov
fnsave
mov
hlt
loop
shlb
dec
jno
push
jecxz
fisubrl
cmp
les
aas
and
dec
loop
jo
sub
cmp
int
pop
gs
rolb
sahf
xchg
cwtl
mov
sub
iret
cmpb
clc
dec
mov
push
xor
jb
pop
test
arpl
xor
cli
jmp
stos
fsubr
data16
cltd
arpl
mov
xor
cltd
stos
inc
dec
adc
lret
jmp
je
xchg
dec
in
enter
inc
push
mov
arpl
cmp
and
int
jae
lods
mov
out
sbb
or
jbe
clc
into
jb
popf
popa
test
cmp
ds
inc
imul
fnstsw
clts
cmp
cs
dec
in
sub
mov
jb
xor
or
daa
int3
sbb
and
test
mov
outsl
repz
lods
adc
inc
mov
fsubrl
inc
sbb
ret
pop
jae
repnz
cli
mov
lahf
xor
jne
sbb
mov
call
ja
or
pop
push
pop
xchg
dec
cmpsb
rol
fldl
mov
pop
mov
adc
sbb
lret
insb
bound
push
cmpsb
pandn
jns
pop
or
mov
loopne
lock
xor
jge
bound
bound
leave
xchg
xor
lods
xchg
lods
cmp
js
outsl
subb
pop
loopne
addr16
adc
lret
ljmp
das
push
pop
or
xchg
adc
pusha
dec
leave
pop
sahf
mov
push
in
pop
pop
cmp
push
mov
out
lcall
imul
lods
add
in
cltd
push
dec
in
or
aam
pop
xor
shll
lods
cmpsl
ds
jmp
sub
scas
out
cs
jno
testl
cmp
jg
jg
xor
outsl
dec
int3
mov
cwtl
addl
int
mov
fdivs
pop
jp
addr16
add
mov
enter
shl
lret
xchg
arpl
sbb
lcall
cmc
mov
xchg
inc
inc
cmpsb
sahf
and
test
stos
and
loop
rcl
shlb
lds
xchg
sbb
rol
mov
mov
pop
sbb
sbbb
test
movsl
mov
push
in
xor
repnz
sbb
jnp
in
mov
xchg
aas
or
jmp
mov
jge
cmpsl
adc
pop
cmp
orl
sub
xlat
test
outsl
int3
minps
jns
push
adc
stos
aaa
test
dec
out
push
lea
addr16
in
in
insb
icebp
jle
hlt
test
out
outsl
add
cltd
xchg
testl
xchg
push
mov
in
lcall
xchg
sahf
sub
cmp
das
or
icebp
std
test
cmp
jg
scas
xlat
cld
std
push
pop
and
jge
je
int3
ljmp
cmpsb
pushf
loope
lock
aaa
jg
push
sub
pop
mov
sbb
dec
mov
ds
sbb
stos
mov
rclb
lahf
outsl
cmp
cmp
jge,pt
inc
aaa
jmp
push
das
add
jo
test
hlt
pop
insl
jne
push
int
sbb
add
jnp
lods
cli
popa
lahf
cmp
rorl
lret
shll
mov
das
push
push
xor
cmc
sarb
js
lahf
push
data16
inc
and
inc
shl
jnp
daa
daa
xor
hlt
mov
cmpsb
das
sbb
adc
test
mov
imul
mov
push
cmp
lahf
sbb
aam
pop
mov
popf
fsts
sub
add
dec
jbe
dec
pop
lock
mov
sub
mov
mov
adc
call
inc
pushf
out
xchg
and
jo
cwtl
out
xchg
and
lods
int3
mov
outsb
and
stc
sti
fsubrl
or
or
push
cmp
mov
jb
add
sub
mov
sbb
rcl
cmc
push
test
mov
cltd
pop
xor
ss
pusha
adc
lahf
inc
mov
mov
xchg
cmpl
mov
pop
std
adc
movl
pop
shrb
push
loopne
jecxz
xchg
inc
push
imul
xchg
les
jg
iret
add
mov
stos
jg
hlt
inc
mov
cmp
movsb
jne
xlat
xor
cmpsb
jle
sbbl
mov
rcrl
cli
leave
sbb
in
and
or
fnstenv
mov
iret
inc
cmpsl
sbb
mov
jle
pop
out
data16
pop
rorb
add
add
sbb
push
shr
xchg
push
mov
dec
or
fs
aam
jo
pop
sub
mov
jae
add
fucomi
xchg
or
pop
rep
icebp
push
subb
add
gs
add
jo
dec
repnz
mov
jecxz
insb
fldcw
xor
repz
add
and
sbb
push
adcl
adc
pop
das
dec
movsl
sbb
mov
cli
mov
sbb
adc
in
mov
and
es
jns
or
lcall
pop
shlb
out
lret
movsb
sub
sbb
cmp
add
pop
cmc
sbb
cmpsb
add
xchg
stc
je
add
inc
or
insl
shrb
jmp
cmpsl
aas
xor
mov
fchs
mul
or
mov
scas
lahf
enter
repnz
test
push
ds
cmp
sahf
nop
cmpsb
pop
jns
xchg
fimuls
mov
cmp
out
pop
test
and
jge
inc
mov
stc
orb
push
scas
fwait
test
sbb
aad
lds
test
pop
xchg
sahf
jge
mov
or
jne
jne
subb
lcall
andb
or
call
sub
mov
outsl
xchg
cmp
mov
xchg
fwait
pushf
lret
push
jae
or
insb
stc
pop
jae
pop
fmuls
movsb
je
loop
fs
mov
inc
movsl
inc
scas
inc
ret
adc
andb
mov
cmp
aam
and
shl
pop
sbb
adc
inc
adc
fisttpll
movsb
ror
xorl
aas
stc
mov
test
mov
and
mov
les
orl
loope
stc
xchg
subb
scas
pop
popa
sub
mov
or
xchg
cli
fwait
inc
xchg
call
inc
inc
mov
sub
push
loopne
mov
lds
fwait
mov
in
cltd
jl
xchg
sar
jns
jae
pop
mov
cmpsl
cwtl
push
shl
aaa
scas
hlt
cmp
pop
xchg
nop
cmp
adc
push
in
movsl
xchg
xchg
xor
mov
dec
pop
sti
sbb
and
scas
lods
loope
mov
jp
push
jl
or
push
mov
xor
jns
sbb
jl
inc
loopne
xchg
push
fistps
or
pop
js
and
movsl
ljmp
lods
xorb
decb
jae
inc
xor
jno
stos
sti
inc
xchg
mov
sub
pop
and
out
cmpsl
daa
sub
sbb
sti
in
arpl
push
imul
add
ds
push
xchg
bound
mov
push
loopne
ljmp
mov
iret
aas
add
mov
jae
outsl
sti
push
inc
cmp
sbb
inc
pop
sbb
and
stos
and
mov
mov
pop
inc
jle
lahf
xchg
pop
xchg
xor
mov
cmp
xor
jnp
sbb
sahf
testl
inc
test
mov
push
mov
jbe
shrl
je
xchg
stos
aaa
out
call
das
adc
arpl
bound
push
ljmp
filds
jmp
xchg
mov
xchg
dec
adc
js
lahf
xor
jae
jecxz
cmp
sub
icebp
sbb
dec
jle
jp
mov
adc
lahf
xor
ret
ret
and
dec
cmc
std
les
adc
hlt
mov
mov
rcrb
dec
mov
dec
mov
enter
call
out
adc
cmp
rclb
cs
iret
outsl
pusha
dec
outsb
pop
adc
dec
out
push
xchg
popf
adc
imul
loop
je
pop
ja
dec
loope
adc
adc
cld
push
out
lret
cltd
jo
sahf
jle
popf
mov
adc
jmp
xchg
imul
cmpsb
out
aam
jns
jl
and
out
ss
loop
orb
xor
movsb
lea
jo
scas
xor
jge
dec
outsl
addl
mov
push
pop
jne
fisttpll
stos
leave
lahf
mov
fwait
loop
cmp
dec
or
mov
mov
insb
in
fimull
fiadds
outsb
ret
sahf
push
into
inc
mov
jp
and
jns
fadd
cmp
ret
xorl
mov
add
add
mov
fdivrl
add
lret
jl
inc
out
cld
mov
adc
popa
sub
scas
out
jo
push
in
std
addr16
outsl
mov
test
fisttpl
lock
sbb
scas
jae
jp
test
lods
adc
out
xor
mov
and
add
das
jbe
inc
sub
inc
lret
rcrb
ret
mov
add
jge
loop
fildll
cltd
add
inc
mov
jmp
inc
jns
call
jmp
fnstsw
and
aas
jbe
mov
sub
lods
movsl
mov
insb
cmpsb
repz
insb
sub
mov
in
sub
add
dec
mov
mov
inc
jno
das
inc
lea
xchg
ljmp
mov
divb
inc
add
push
in
outsl
dec
rorl
mov
dec
jp
stos
lret
xor
hlt
mov
ret
jmp
push
sahf
dec
push
das
xchg
and
movsl
fs
cld
stc
rcl
dec
inc
int3
add
popf
int3
cwtl
cmp
orl
call
or
mov
stos
aaa
add
jo
frstor
and
shl
icebp
mov
push
call
lret
das
push
mov
jge
lock
push
or
or
ret
insl
mov
dec
add
js
xor
mov
add
lods
call
js
cmp
sub
aad
jle
arpl
push
add
cmp
shlb
cmp
arpl
jecxz
inc
and
adc
and
xchg
iret
inc
xchg
insl
roll
mov
xorb
cmp
gs
jecxz
push
ror
pop
roll
jge
outsl
jno
notb
xchg
rorb
shl
enter
sti
dec
icebp
in
pop
loope
push
xchg
push
mov
dec
jp
hlt
pop
or
cwtl
sub
lret
pop
rorl
out
lods
push
jg
pushf
fnstcw
outsl
test
std
mov
neg
pop
lods
scas
into
je
leave
dec
mov
daa
jecxz
pusha
outsl
cmpsl
xchg
imul
sub
out
adc
push
lods
call
xchg
xchg
jg
sub
jns
lret
mov
xchg
xchg
cmc
inc
orl
lea
and
sub
or
jnp
or
cmp
mov
push
pop
xor
push
push
shl
lods
movsb
scas
pop
test
mov
outsb
mov
pop
pop
add
xchg
sbb
cmp
mov
aam
aaa
pop
div
insl
es
and
push
mov
sub
pop
or
popf
popa
pop
fldt
cmp
mov
mov
int
pop
ljmp
xchg
in
idiv
mov
fs
cmp
leave
pop
cmpl
xor
lock
sti
mov
xchg
jnp
mov
std
divb
imul
ja
inc
fwait
dec
sbb
addl
lds
jno
sbb
mov
push
jno
sbb
or
daa
lret
jg
xchg
out
lret
adc
and
push
gs
shl
ret
sysretw
out
cli
inc
xchg
test
in
pushf
subl
test
dec
or
sbb
jmp
int3
mov
sahf
icebp
pop
mov
sub
sbb
mov
jmp
mov
jmp
icebp
and
ret
imul
push
dec
shlb
jg
jmp
loop
test
shll
repz
enter
jp
jle
pushf
sub
popa
push
xor
mov
add
adc
mov
inc
sub
inc
xor
jae
sti
pop
pusha
popf
xchg
mov
mov
loop
je
insl
dec
fs
addr16
xchg
pop
push
scas
repz
or
jl
fmuls
cli
xchg
mov
dec
xchg
pop
jl
hlt
jl
inc
mov
ds
aaa
pop
xchg
dec
push
mov
xchg
or
add
jb
mov
js
jg
fidivs
out
imul
repnz
xchg
lods
xchg
push
test
mov
fisubrs
popa
je
gs
cmpsb
mov
hlt
jbe
dec
push
add
xor
jne
pop
xrelease
jnp
js
fmulp
aas
loope
mov
jge
jns
mov
cmc
dec
js
jge
inc
test
push
jnp
int3
inc
push
cmp
jg
jnp
cmc
mov
mov
pop
inc
rcrl
rcr
xor
cltd
sti
in
fisubl
xchg
push
push
imul
cmpl
nop
popf
mov
inc
insb
ds
lock
mov
jbe
out
outsl
xchg
fsubs
and
and
mov
add
int3
mov
ds
and
mov
xor
and
pusha
cld
fistps
psrld
test
test
fistpl
faddp
sha1msg1
mov
jo
jo
xchg
mov
jb
jns
mov
popf
lods
dec
or
imul
lds
xor
xchg
lret
xchg
nop
push
mov
cmp
dec
jns
sbb
aam
icebp
repz
or
inc
bound
mov
jle
ficomps
scas
push
xchg
mov
orl
push
and
imul
pop
xchg
adc
loope
add
lock
pop
ret
mov
push
jns
and
pop
xor
scas
dec
jae
jle
rol
mov
xor
es
out
roll
pop
xor
mov
mov
inc
iret
loope
movsb
jge
push
mov
xchg
jae
and
scas
es
push
dec
pushl
push
mov
push
add
addl
xor
dec
mov
cmc
inc
pop
push
aas
or
nop
cmp
aad
jg
mov
sahf
mov
mov
inc
sbb
imul
repnz
into
mov
loopne
xlat
sub
add
nop
rolb
imull
call
iret
repz
push
jb
std
or
mov
daa
pop
pop
sbb
test
shll
loop
sub
inc
outsl
subb
and
mov
and
xchg
dec
push
and
inc
push
xchg
clc
dec
fdivrs
das
imul
adc
fnstsw
in
bound
inc
or
out
add
xorl
rolb
adc
push
xlat
mov
ds
inc
mov
adc
bt
out
gs
add
dec
and
xor
mov
push
push
loopne
data16
inc
jnp
lret
mov
arpl
fadd
xchg
mov
sub
jp
inc
push
dec
mov
or
or
jno
inc
mov
push
enter
sbb
dec
cs
xchg
mov
in
jl
out
fbld
xor
jecxz
arpl
addr16
mov
fstpt
cwtl
and
lods
dec
and
or
adc
mov
rorl
inc
sub
push
push
jge
pusha
loopne
inc
dec
ljmp
sbb
jl
dec
outsb
lret
pushf
rclb
addr16
lahf
ja
inc
dec
daa
mov
and
and
mov
cmp
in
and
or
in
mov
xchg
shll
aam
pop
cmp
push
jp
lds
dec
mov
lret
jecxz
jge
pop
add
outsb
push
push
or
call
scas
sbb
mov
fs
cmpsb
cmp
jecxz
mov
pop
lea
or
std
push
scas
mov
jg
xor
jecxz
xchg
mov
fldt
iret
mov
xor
lcall
push
pop
xchg
or
lret
push
arpl
or
dec
out
cmp
outsl
into
mov
ret
sbb
pusha
insb
or
cld
and
icebp
ljmp
sub
mov
insl
push
push
jl
rdpmc
rcrl
addr16
pop
rcrb
adc
fidivrs
ds
jp
js
dec
out
sbbl
xor
int
cltd
pmullw
jnp
sub
dec
data16
push
add
push
pop
sbb
ljmp
xchg
sbb
pop
cs
adc
loopne
ja
sbb
sub
aas
aas
inc
std
cwtl
mov
add
cs
push
sbb
xchg
stos
scas
add
jns
mov
mov
lret
cmp
jmp
aaa
or
mov
sbb
in
inc
mov
sub
pop
roll
sub
or
mov
fs
pop
adc
and
insb
in
scas
mov
hlt
popa
mov
mov
jle
mov
lcall
icebp
jb
pusha
lock
ljmp
sub
push
sub
xor
dec
ret
ret
mov
push
add
gs
aad
cmc
je
in
adc
xchg
out
mov
pop
jge
dec
ja
shll
ret
aad
mov
jecxz
sbb
mov
ljmp
test
lcall
and
shrb
decb
jb
sti
ficoml
pop
push
dec
enter
stos
in
pop
lock
lds
add
popa
test
jmp
in
loopne
pop
sbb
in
mov
les
dec
lret
xor
pushf
inc
pop
out
or
bound
imul
fmuls
imul
insl
fldt
and
sti
outsb
les
cltd
and
pop
xchg
jno
pop
mov
mov
add
jle
scas
adc
cmp
pop
out
inc
leave
add
into
mov
lahf
ss
jb
cmp
mov
mov
lds
stc
call
xor
scas
out
popf
out
sbbl
mull
loopne
inc
xchg
jns
inc
ds
movsl
dec
push
mov
add
push
scas
bound
leave
in
fimull
dec
shl
jo
test
inc
dec
fucom
inc
and
xor
sub
sbb
sbb
add
inc
mov
es
lea
fdivrs
js
xchg
jo
je
sbb
inc
into
ljmp
pop
std
and
aam
daa
push
repz
and
jmp
xorl
push
loopne
pop
jns
int3
jmp
adc
jae
xor
addr16
movsb
mov
adc
add
mov
pop
cmp
dec
xchg
mov
xchg
inc
out
add
popf
cmpsl
jp
fisttps
into
test
mov
faddl
pop
popl
addr16
shrb
cmpb
imul
sbb
add
cwtl
sub
fs
mov
inc
rcrb
mov
imul
mov
lret
pusha
fcomp
lcall
xor
xchg
inc
adc
movb
inc
mov
ds
jecxz
push
in
ljmp
fs
adcb
mov
popf
daa
dec
je
xchg
adc
xor
or
insb
ljmp
scas
ret
sbb
pop
jle
jbe
jg
es
stc
mov
aas
sub
lret
andl
jb
mov
xor
and
push
lods
and
cmp
inc
inc
mov
jp
fdivl
loopne
mov
orb
sub
jns
insb
imul
pop
stc
test
repnz
xlat
hlt
mov
cmp
and
mov
shl
fwait
push
adc
mov
loopne
fucomip
sbb
dec
jge
in
inc
push
and
adc
test
ljmp
push
movsb
push
cmpsb
adcl
fisubrl
inc
push
cli
out
jno
push
xchg
ja
xor
and
xchg
cmc
cmc
or
cmp
and
sbb
dec
push
outsl
mov
mov
cmpsl
rolb
fldl
jecxz
sub
xor
mov
adc
das
mov
in
push
sbb
repnz
popa
and
add
loope
notl
je
imul
mov
jg
push
out
lods
xchg
or
cmp
inc
push
pushf
shll
pop
mov
and
aaa
mov
jb
rclb
ret
cmp
jmp
mov
mov
movsl
lahf
dec
in
shl
add
jno
pop
testb
pop
mov
in
cltd
pop
shll
rorl
xchg
jl
push
cmc
push
xchg
cmp
in
cwtl
fwait
ret
dec
out
jns
test
adc
mov
adc
push
pop
mov
in
in
movsb
mov
rol
mov
imul
push
push
rolb
sub
jecxz
jbe
jb
push
daa
test
xor
jecxz
pushf
mov
xchg
xchg
loopne
push
jle
fisttpll
fs
dec
mul
sbb
imul
fwait
addb
pop
popf
mov
ficompl
imul
cmpsl
dec
cmpb
add
sub
movsl
and
into
sahf
jecxz
and
xor
cltd
jmp
mov
jbe
jmp
cmpsb
lret
lea
or
dec
lcall
cld
leave
jmp
arpl
lea
and
dec
pop
jne
lods
adc
dec
enter
imul
mov
loopne
and
jb
mov
repz
mov
mov
push
js
pop
inc
js
sub
jne
cmp
out
out
dec
mov
inc
mov
cmc
mov
adc
push
and
imull
jg
cmp
into
mov
imul
std
xchg
cli
mov
mov
adc
pop
mov
fiaddl
jae
mov
pop
cmp
pop
popa
push
jbe
add
imul
mov
push
pop
adc
test
xor
ja
add
pop
mov
out
jg
fstl
sub
fsub
rcr
iret
sti
jae
mov
mov
push
cmpsl
bound
fldenv
gs
fnstcw
push
dec
iret
les
inc
in
jecxz
cmp
mov
fsubs
mov
clc
or
dec
fiadds
aad
mov
adc
shrb
movups
orl
jge
inc
cs
out
push
in
repz
clc
xor
mov
pusha
jne
lahf
add
add
cmpsl
xbegin
inc
and
cmp
out
sbb
scas
jl
pop
xor
fimull
loopne
shlb
mov
xchg
test
std
incl
movb
jg
cltd
pop
insb
mov
ret
pop
fisttpll
int
pop
mov
je
jecxz
cmp
pop
pop
mov
mov
xlat
mov
or
data16
pop
xchg
pop
insl
pop
pop
loop
pop
out
cmp
mov
std
and
pop
sub
lret
cmc
dec
dec
pop
mov
clc
adc
xor
adc
outsl
dec
jecxz
xor
mov
ficomps
repz
jecxz
je
bound
sbb
pop
ret
sbb
jns
adcb
cltd
fists
sub
pop
data16
adc
xor
jae
cmc
outsb
int3
jge
hlt
punpckldq
rcr
repnz
mov
orl
add
mov
rcll
test
pop
es
push
rorl
nop
mov
cld
pop
dec
xor
gs
out
lea
icebp
mov
stos
pop
sbbl
xor
ljmp
jle
inc
aam
pusha
roll
insl
push
adc
xor
cmp
movsb
xchg
aas
mov
sbb
xor
jle
mov
je
dec
bound
xchg
push
outsl
mov
jp
aam
cwtl
mov
pop
leave
addr16
cmp
push
inc
lahf
or
out
adc
loopne
cmp
inc
insl
sbb
and
dec
pop
adc
cwtl
pop
aaa
fcompl
push
rorb
adc
push
insl
jp
or
or
pusha
sub
mov
mov
sti
repz
mov
loopne
lret
sbb
push
mov
aam
rorl
push
dec
js
daa
pop
das
inc
xchg
push
hlt
xchg
aad
out
int
lcall
fs
shll
ljmp
mov
dec
fsubs
sahf
ja
push
clc
aaa
jp
loop
xor
mov
xor
sbb
fnstenv
sbb
jne
jnp
adc
sub
or
rcrl
or
lret
fidivs
push
sbb
shrb
xor
popf
push
mov
out
leave
cltd
add
insb
pop
outsl
pop
divb
or
sarl
scas
and
xor
iret
push
pop
pop
in
sbb
fs
movsl
cmpsl
test
or
xor
add
aas
inc
xor
dec
cvtdq2ps
repz
addr16
lods
xchg
divl
mov
into
bound
push
push
cmp
dec
adc
sarl
mov
mov
into
notl
push
insb
pop
add
sub
xor
mov
bound
push
xchg
sub
push
push
loope
jae
lods
inc
roll
xchg
xchg
cmpsb
aas
push
insl
jns
aam
push
int3
xchg
mov
cmc
jmp
mov
ret
loop
push
mov
rcrl
jnp
mov
ss
or
or
inc
es
enter
cmp
mov
cmpsb
imul
inc
dec
pop
or
and
adc
add
xor
js
movsb
xchg
ficoms
push
leave
fiadds
imulb
pop
sub
cld
ret
and
sub
ljmp
lahf
inc
push
aam
out
adc
inc
outsl
fcmove
pop
lret
scas
aaa
and
rorl
jmp
jae
add
les
test
mov
scas
jecxz
sbbl
pop
andl
loopne
or
les
lds
dec
xchg
shlb
jns
test
pop
dec
xchg
dec
sarl
sbb
xchg
das
cmp
push
mov
outsl
push
lods
shrb
sti
jecxz
and
pop
dec
pushf
jae
fistpl
lock
jg
or
xchg
or
shrl
xchg
ret
loopne
popa
xor
lock
jb
sub
into
dec
outsl
hlt
xchg
adc
sbb
out
outsb
arpl
enter
ficompl
leave
mov
loope
add
mov
xchg
stos
jne
fs
and
jo
bnd
dec
popf
test
sarl
mov
lea
fistpll
cmp
aas
sbb
jp
dec
mov
sub
addr16
cs
dec
jb
cwtl
aam
jno
push
fisttpll
mov
ret
push
pop
mov
call
jne
repnz
sbb
jae
add
push
scas
sub
adc
lret
les
popa
es
int3
cmp
dec
cmp
jb
and
xor
popa
fs
push
fisttpl
mov
sub
mov
into
mov
mov
das
push
fstpl
popf
xor
jmp
cmc
lcall
add
pop
insb
rcrl
add
adc
nop
or
mov
ret
xadd
lods
fiaddl
lcall
cmp
cmp
adc
outsb
loope
adcb
sub
iret
pop
xor
mov
fcmovb
mov
mov
jl
andb
js
hlt
add
mov
rorl
dec
mov
jnp
push
mov
data16
popa
arpl
ficoms
mov
mov
cli
fnstsw
sub
je
fdivs
gs
sbbb
or
out
aad
fldcw
adc
in
xor
fisubs
cmpsl
jae
pop
lea
xchg
dec
sbbl
sbb
ret
lea
jbe
jo
shll
push
sub
into
cwtl
inc
inc
cmpsl
push
pusha
mov
xchg
fmull
fcmovbe
cli
mov
jnp
jge
mov
pushf
test
pop
pop
adc
popf
mov
fisttps
dec
int
mov
or
jns
cmp
jle
and
cmpsb
xor
lds
push
test
dec
test
ret
mov
pusha
ss
push
subb
pop
fadd
hlt
lds
lock
movsl
clc
test
jb
cli
mov
loope
and
xchg
xor
cmp
mov
mov
mov
sahf
insl
enter
adc
xchg
imul
dec
movsl
jb
insl
dec
out
mov
je
call
push
push
ljmp
or
arpl
repz
mov
cmp
pop
push
jmp
sti
inc
aam
jmp
inc
cmp
mov
mov
lea
iret
jb
ds
js
je
aad
imull
dec
cmpb
popa
sahf
repnz
bound
jb
movsl
enter
sarb
mov
mov
sbb
lea
insb
jnp
cmpsb
lods
hlt
popf
fadds
inc
xchg
aad
mov
lahf
dec
pusha
test
sub
repnz
lods
pop
sahf
cmp
xor
movsb
std
sub
subl
ret
mov
test
xchg
add
adc
sbb
xchg
in
cmp
out
cld
cmpsl
out
fbld
sti
jg
ss
or
rcrb
ret
movsb
pop
pop
mov
mov
cmp
out
mov
repnz
mov
stos
cmp
xchg
lahf
and
jb
mul
xlat
lock
daa
popf
test
call
jg
into
mov
cmp
adc
push
cs
dec
xor
repz
dec
mov
add
clc
inc
mov
outsl
xchg
cmp
pop
jmp
pop
xchg
loop
les
xor
or
or
cltd
lods
jp
out
mov
not
stos
in
lea
pop
pop
adc
and
pop
imul
test
xor
cmp
scas
mov
addr16
repz
rcrl
pop
xchg
clc
mov
sub
adc
xor
pop
jno
xlat
lods
push
mov
or
and
dec
mov
mov
ficoms
push
adc
repz
les
cwtl
aam
push
sbb
jmp
call
lds
add
insl
add
jb
dec
jno
jl
sub
insl
mov
ret
jg
cmp
lahf
pop
rcrb
lcall
cmp
lret
std
je
mov
std
std
std
cmp
lret
fnstenv
and
stos
mov
pop
lods
xor
arpl
data16
addb
mov
adc
pop
add
mov
repnz
mov
mov
mov
pop
or
xor
fmul
movsb
dec
data16
mov
push
test
cmp
or
test
and
in
xor
add
jnp
mov
jno
repnz
adcb
fs
outsl
clc
and
add
and
adc
aaa
clc
pushl
out
and
mov
xor
insl
mov
jge
fs
push
sbb
das
addr16
lea
cmpsl
imul
stos
test
inc
les
loopne
pop
lods
test
mov
enter
int
add
ret
cli
xchg
and
sti
hlt
fwait
push
gs
mov
mov
sub
outsl
gs
cmpb
xor
cmp
sbb
mov
sub
mov
push
xor
stos
adc
dec
fcoml
movsl
adc
lahf
lahf
orb
mov
xor
ret
dec
ss
jnp
in
in
or
inc
ss
inc
mov
fs
roll
pop
fsts
imul
push
xchg
subb
aas
jmp
xchg
shll
hlt
sbbl
xor
pop
les
repz
xor
adc
inc
in
or
sub
mov
int3
cmp
and
sub
rol
mov
push
push
cld
in
dec
lret
pop
cli
lret
sub
imul
outsb
xchg
fisttpll
push
sub
icebp
mov
lret
and
std
cmp
std
out
cmp
cmc
add
mov
cmp
inc
mov
aaa
push
aaa
addr16
es
xorb
sbb
mov
out
mov
fld
in
fstpt
and
adc
pop
in
mov
xchg
icebp
loopne
in
cmpsb
fcoml
cmc
fimull
push
cltd
in
sub
dec
scas
ja
jecxz
fcmovne
cmp
pop
jmp
aas
inc
jo
sbb
pop
ja
in
cs
aad
sub
mov
pop
les
push
movsb
push
and
and
mov
sbb
sub
ds
das
stos
inc
js
rcrl
lods
in
fwait
test
testb
inc
jnp
push
push
adc
dec
ds
jno
push
int
scas
mov
sarl
mov
and
dec
shl
sub
aaa
jno
cmp
mov
xor
jns
push
adc
sahf
sbb
pop
and
mov
int
push
movsl
repz
lcall
enter
add
test
jo
ja
sbb
aad
lea
dec
out
or
push
loope
outsb
mov
push
lods
jne
pop
shlb
inc
pop
les
adc
or
fcmove
xchg
lods
add
call
and
testb
cld
mov
xchg
data16
pop
push
in
push
test
cmp
das
xchg
cmp
push
inc
xchg
sub
cltd
mov
stos
mov
clc
mov
xor
dec
lret
mov
inc
out
jno
stc
fdivrl
movsl
mov
lret
cmp
xor
inc
insb
add
push
push
xchg
mov
fsts
push
rcll
imul
ficompl
inc
inc
dec
rcrl
adcb
lds
inc
outsl
pop
and
insl
out
aas
fbstp
push
adc
push
mov
adc
dec
inc
gs
mov
test
mulb
sti
outsb
test
mov
adc
rcll
test
and
jecxz
cld
ljmp
inc
mov
push
call
fld
cmp
pusha
fistl
outsb
movsb
ret
xchg
xchg
jae
adc
add
test
sub
or
inc
iret
or
es
loop
sbb
lea
pop
jne
and
pop
adc
rcrb
mov
loope
sahf
mov
mov
cmpsb
mov
push
xchg
pusha
add
cmp
xchg
push
mov
adc
vhsubpd
fnsave
cmp
fs
scas
xchg
sub
in
add
ucomiss
adc
loope
cld
pushl
lahf
sbb
inc
movsl
dec
pop
jno
jge
leave
gs
mov
xchg
orl
mov
fstpt
push
lret
pushf
mov
cmp
inc
adcl
pop
xchg
lods
mov
inc
out
push
pushw
add
lret
sbb
cmp
cmp
addr16
sbb
es
lcall
inc
jb
dec
cs
insl
mov
xchg
lahf
hlt
add
jno
jae
xor
ja
and
mov
clc
cmpsl
notl
add
lock
cmp
or
movsl
adc
dec
pop
mov
fisubs
push
mov
bound
sbb
fisubl
ficoms
mov
cmp
pop
test
inc
aad
int3
push
icebp
test
and
in
hlt
mov
in
jns
fwait
mov
dec
je
pop
mov
xor
fmull
mov
mov
xchg
cmpsl
lahf
dec
out
add
pop
daa
lods
inc
dec
add
test
mov
pop
mov
into
jmp
or
jb
test
pusha
mov
stos
flds
and
or
mov
mov
sbb
js
mov
mov
ret
mov
js
lods
ss
cmp
xor
fisubs
adc
das
or
pusha
mov
lea
jge
pop
lret
inc
xor
mov
or
jno
repnz
jb
pusha
aaa
stc
mov
adc
ficoms
sub
jb
add
pop
cmp
enter
mov
push
pushf
mov
pop
hlt
push
iret
hlt
lods
mov
das
ficomps
je
xchg
hlt
lods
push
dec
dec
fcmovne
mov
push
aaa
fxch
or
jns
test
lods
cmpsl
in
mov
in
mov
jl
dec
fdivl
scas
mov
int3
adc
decb
cmp
push
mov
jle
in
ja
mov
adc
push
push
xchg
outsl
shlb
clc
cmpsl
in
outsb
in
imul
xchg
xchg
jp
decb
cmc
mov
adc
stos
push
jne
repnz
or
add
xchg
mov
stc
fs
loop
inc
sar
aaa
cmp
jo
jge
add
repnz
push
pop
jne
test
jl
lahf
mov
out
test
imul
mov
mov
and
into
add
retw
and
sbb
nop
sbb
loope
jle
cs
fwait
fwait
out
mov
sbb
inc
popa
test
and
push
add
fwait
out
in
mov
sbb
ljmp
adc
xor
push
jb
inc
xchg
cli
push
or
push
pushl
xchg
test
cli
dec
les
push
inc
mov
cmp
xchg
mov
push
lcall
and
pop
or
loop
push
inc
jbe
fcoms
in
rolb
shll
fldt
or
out
pop
xor
sbb
cmpsl
das
add
lcall
insl
inc
adc
sarl
repnz
sub
pop
idivb
mov
jmp
cmp
lea
gs
xor
add
inc
push
mov
mov
mov
mov
outsl
sahf
pushf
xchg
out
fisttpl
in
pop
pop
je
bound
loop
or
rorb
ds
mov
mov
push
jl
mov
repz
dec
aaa
mov
mov
es
and
pop
inc
rcrb
rorl
or
jae
std
mov
loop
fsts
cmp
mov
xchg
sub
fsubr
sti
xchg
xor
mov
fldl
repz
adc
movsb
daa
sub
push
addr16
adc
mov
lods
pop
add
mov
inc
cwtl
push
popa
lock
mov
lret
sub
adc
cmpsb
testl
xchg
je
jg
in
out
jmp
lahf
inc
jno
adcb
popf
xor
nop
sub
add
arpl
sti
movsb
bound
mov
mov
scas
outsb
xor
icebp
iret
push
lahf
jnp
sub
push
cs
sub
or
insb
sub
stos
lcall
gs
sbb
into
push
jmp
mov
insl
ljmp
in
enter
stos
and
cmp
mov
outsl
sub
xlat
lret
push
jmp
push
jns
insb
addr16
mov
xchg
add
inc
mov
das
inc
cli
leave
movb
lcall
cmp
jg
mov
add
pop
dec
sti
dec
mov
lds
mov
adc
rorb
addr16
dec
rorl
adc
jnp
sti
aaa
xchg
popf
cmp
push
movsb
in
sub
push
fwait
adc
outsb
cs
or
sub
pop
outsl
fcmovb
pop
aaa
es
pop
and
adc
and
pop
les
dec
js
cwtl
inc
lea
testb
stc
sti
mov
cmp
jg
stos
push
in
cmp
lret
sbb
repz
xchg
test
test
adc
and
xchg
lret
add
enter
les
pop
xchg
aad
pop
out
imul
dec
xchg
ret
out
push
shrb
sub
pushf
pop
mov
jecxz
std
push
insb
sub
mov
mov
int
push
xchg
pop
inc
mov
pop
sbb
stos
adc
lret
int
int3
jge
popf
pop
out
jns
dec
sbb
ret
std
cli
sti
fnsave
sbb
push
xchg
pop
push
push
sub
aam
fcmove
xchg
out
js
out
sbb
and
fsqrt
and
icebp
mov
xor
mov
xor
inc
shlb
test
fs
jno
and
mov
sahf
xor
cmpsl
pop
sahf
jle
add
in
dec
aad
mov
mov
xlat
popf
push
lds
mov
out
outsb
jbe
push
lds
andl
pop
xchg
cmp
fistl
mov
sub
xor
dec
adc
in
xchg
pop
aad
sarl
or
test
stos
xor
push
pop
dec
mov
lds
mov
push
mov
icebp
mov
out
cmp
repnz
lahf
enter
dec
xchg
pop
jp
aad
xchg
cmp
jo
sbb
inc
pop
inc
mov
enter
sbb
outsb
mov
cmp
dec
xor
xor
push
and
les
loope
xchg
jo
lods
sub
xchg
scas
sbb
rcll
sub
inc
pop
lods
sub
in
dec
xchg
push
test
mov
cli
xlat
and
and
sbb
sbb
lret
enter
cmp
mov
mov
fldt
repz
int
cmp
rol
fs
aas
repnz
xchg
mov
dec
cltd
mov
dec
addr16
jne
xor
shlb
mov
repnz
pop
out
cmp
add
push
dec
cmp
lcall
jle
or
lcall
ss
fldl
xchg
jo
push
pop
pop
leave
mov
adc
sub
mov
jno
pop
ljmp
shll
enter
mov
mov
shl
pop
outsb
lods
addr16
cmp
mov
sbb
xor
jae
adc
mov
jo
lret
sbb
xor
lahf
outsl
outsl
andb
xor
sti
ret
jl
lret
lock
nop
inc
push
add
mov
lods
mov
sti
in
push
es
mov
sti
repz
movsb
sub
cmp
rcrl
jp
test
inc
pop
hlt
mov
sarl
cmp
push
mov
jl
pop
adc
adc
fwait
icebp
in
std
lds
scas
mov
push
in
mov
iret
ljmp
jns
dec
jecxz
mov
paddq
inc
add
rcrb
inc
test
call
movsl
push
mov
jmp
mov
es
jle
sub
in
inc
repz
xchg
mov
lock
pop
ds
cmp
xchg
push
jnp
xor
pop
push
jno
cmp
and
test
loope
jge
inc
out
mov
stos
mov
mov
gs
test
dec
icebp
xchg
loope
je
push
mov
dec
rcl
and
daa
push
dec
stc
mov
sahf
rcr
test
loop
or
xor
fisubl
jp
loop
xchg
jno
dec
pushf
push
or
or
mov
cli
les
test
daa
jno
mov
fwait
out
sbbl
adc
enter
xchg
imul
sti
mov
dec
mov
or
test
mov
sbb
xchg
mov
push
sbb
lea
movsl
movsb
inc
dec
sbb
faddl
fdivs
cmc
sbb
jg
mov
mov
int
shll
jmp
out
sahf
lcall
leave
daa
xchg
rcrb
jne
xor
enter
loopne
mov
or
test
iret
jno
lods
fisttpl
lea
ja
adc
xchg
jns
pushf
jae
mov
xor
fidivs
sbb
add
mov
call
lods
mov
nop
stc
dec
js
fcoms
dec
inc
test
lret
pop
out
mov
outsl
sbb
sub
or
into
and
xor
and
cmp
sbb
pop
pop
add
fs
xchg
inc
xchg
cmp
jp
loopne
mov
aas
pop
out
js
aas
rclb
lods
les
rdtsc
inc
mov
mov
loopne
daa
out
pop
cwtl
ljmp
add
adc
cwtl
sbb
pop
in
lds
xor
push
movsl
hlt
adc
jae
xor
adc
mov
jg
add
mov
repnz
lock
in
cmp
add
mov
stos
or
xchg
adc
iret
aas
add
jecxz
mov
dec
outsb
and
shrl
shrb
icebp
cmp
pop
push
cltd
sti
mov
pop
and
xor
lods
fnsave
dec
jge
loop
adc
andb
int
adc
fcomi
mov
adc
cmp
sub
and
loop
sub
mov
mov
mov
push
mov
leave
cmp
aas
add
mov
lea
push
xchg
in
out
das
out
loopne
cs
js
cmp
jmp
xor
dec
into
into
pop
int
aaa
xchg
adc
test
xor
pop
xor
cmp
das
cmpsl
lods
dec
iret
shll
ljmp
cmp
xchg
dec
mov
mov
pop
xchg
lcall
mov
cs
cltd
pop
std
pushf
pop
mov
imul
cmp
push
mov
dec
dec
xor
outsl
push
adc
jne
insl
rcl
in
movsl
ret
aaa
test
xchg
push
pop
pop
addr16
scas
push
sub
outsl
jno
sbb
or
jmp
pop
rorb
push
inc
test
push
adc
push
shll
mov
out
ret
adc
mov
jl
gs
cmp
mov
mov
mov
stos
orl
inc
push
repnz
and
rorl
inc
lret
and
in
mov
aad
aaa
inc
daa
mov
insb
int
aas
mov
cmc
stos
push
mov
and
cwtl
ds
push
jne
push
lret
jmp
movsb
out
jmp
add
xchg
mov
mov
subl
jl
mov
push
push
stos
adc
mov
xchg
or
inc
pop
mov
sti
ficompl
fimuls
push
das
pop
rcll
push
adc
mov
mov
out
mov
or
gs
fistl
out
inc
lea
mov
enter
or
jle
push
push
add
sbb
outsl
inc
pop
icebp
lcall
cmp
sub
dec
dec
notl
popf
sub
inc
mov
jmp
iret
les
fnstsw
std
inc
lock
and
or
push
lret
xchg
xchg
inc
cmp
and
cmpsb
dec
and
into
xor
divl
test
stos
ds
stos
daa
pop
dec
jo
mov
cltd
data16
mov
add
sarl
ficomps
ss
and
add
dec
mov
push
dec
int
xor
xlat
dec
int
sub
mov
cmp
mov
and
std
insb
cmp
arpl
mov
jno
test
add
mov
iret
sub
lods
call
mov
push
push
adc
inc
mov
xor
fisubrs
push
mov
popa
xor
pop
popf
stos
inc
fnclex
sbb
adc
and
add
jne
or
mov
inc
mov
and
sbb
sub
adc
repz
pop
fs
dec
mov
ljmp
pop
or
or
mov
push
dec
cli
jl
jo
inc
inc
pop
daa
mov
mov
leave
iret
outsl
insl
jmp
iret
adc
mov
ljmp
insl
js
adc
add
shrb
push
cmp
outsl
cmpsl
mov
cli
les
scas
pusha
pop
imul
fmuls
sub
mov
sub
jne
mov
sbb
mov
and
fwait
lds
sub
dec
jnp
subb
imul
and
add
sub
shrb
aam
dec
imulb
addr16
mov
loopne
icebp
popf
mov
dec
push
xlat
aas
adc
mov
leave
js
jp
xchg
cld
in
inc
pop
inc
sub
jno
clc
lret
mov
push
jns
sub
ret
dec
repz
mov
jo
sub
add
rcll
enter
xor
cmp
gs
and
pop
ds
fiadds
ret
sahf
mov
out
jo
aas
pop
gs
mov
ljmp
sub
sub
mov
push
scas
inc
subb
jl
les
mov
mov
lret
inc
push
mov
andl
add
notb
xor
cmp
adc
outsb
shrb
shrb
cwtl
push
jne
lock
fdivrs
jl
sti
shl
inc
jg
or
imul
push
jp
cltd
aam
adcl
mov
and
or
pop
or
cmpsb
cwtl
jle
repz
iret
outsb
jb
movl
lock
inc
shlb
mov
es
shr
or
sub
cmpsb
into
pop
xlat
cmpsb
jl
push
xchg
jmp
std
xchg
cmp
xchg
imul
xor
rorl
xor
test
ficompl
cmpb
iret
out
cmp
pop
hlt
ja
pop
add
dec
push
loop
mov
ss
cli
or
jo
imul
in
push
pop
lahf
aas
fs
mov
arpl
js
mov
push
jp
adc
cmp
jmp
xorb
jl
aad
sbb
push
out
mov
xchg
push
sbb
inc
xchg
lea
push
ljmp
push
cmp
pop
or
fistpll
or
mov
jae
jecxz
fs
push
cmp
ret
cld
or
dec
push
nop
fidivrl
jmp
shl
lds
icebp
bound
jmp
orl
dec
lcall
xrelease
loop
and
jl
arpl
fs
testb
dec
out
xor
and
add
aad
loope
cmp
je
jp
sub
inc
mov
rorb
pop
cmc
push
sub
mov
jb
out
push
mov
movl
sub
iret
out
or
fcoml
cmp
daa
xchg
aas
pop
aam
xchg
test
and
fstps
mov
mov
pushf
dec
adc
rolb
sub
cs
xor
or
in
jo
inc
xchg
mov
sti
ret
adc
or
jbe
ffreep
xchg
fsts
push
xchg
fs
push
mov
mov
mov
inc
or
push
xor
insl
fmull
fnstcw
push
bound
scas
mov
aaa
or
mov
push
mov
mov
jne,pt
inc
mov
mov
fistl
jae
inc
adc
adc
decl
lahf
xchg
int
lods
jmp
add
inc
sbb
pop
iret
cwtl
adc
mov
mov
shl
inc
imulb
inc
sub
add
xchg
sbb
aas
nop
dec
mov
scas
xor
cmp
ret
dec
sub
dec
add
pop
jg
subl
push
hlt
imull
pop
xchg
and
cmp
scas
adc
cli
xchg
sbb
jae
aas
pushf
orb
sahf
mov
test
cmc
pop
lcall
pop
aam
cmc
jg
lods
push
push
cltd
aas
fcom
movsb
pop
rolb
ret
dec
jg
ret
int
xchg
repnz
sbb
xchg
and
lret
out
das
dec
dec
cwtl
jne
mov
mov
push
or
test
mov
jle
mov
adc
inc
stos
xchg
or
mov
jne
pop
scas
nop
inc
js
jnp
cs
jns
add
adc
fdivrp
pop
loopne
mov
mov
jecxz
jle
pop
dec
push
bound
gs
gs
loope
mov
inc
add
popa
xor
mov
jbe
dec
add
divb
sub
sbb
ret
cmpsl
test
ror
test
ret
push
lret
and
ret
xchg
pop
fimuls
lea
test
mov
lds
xor
add
out
popa
push
arpl
dec
outsb
mov
xchg
inc
lret
cld
and
jp
fcmovnu
jge
and
jbe
xor
roll
ror
lcall
lods
gs
sbb
aad
imul
sarb
or
and
in
std
fstpl
ss
mov
je
iret
adc
daa
xor
or
rorl
scas
test
and
sbb
mov
ds
loope
jecxz
outsb
sbb
lods
mov
out
jl
dec
andl
pushf
adc
nop
dec
inc
int3
call
jno
or
adc
jnp
cmp
cltd
stos
add
movsb
fstps
jno
mov
xor
lret
pushf
xor
xchg
add
pop
cwtl
pop
pop
or
mov
or
mov
dec
adc
jge
filds
je
add
jg
in
aam
push
icebp
pop
std
push
adc
jno
push
pop
cmpsb
rcll
or
lret
rorl
inc
jge
cwtl
addl
push
cli
cs
fwait
or
add
cmp
mov
pop
les
out
push
mov
mov
cmpsl
dec
sub
testl
mov
adc
add
pop
scas
cltd
scas
lock
stos
and
sub
dec
jnp
jb
or
xor
int3
xchg
ret
xchg
xchg
sbb
bound
inc
xchg
mov
add
dec
mov
add
jno
dec
adc
push
mov
insb
sti
int
push
xchg
test
pop
into
ds
pop
xchg
dec
sbb
into
mov
mov
xchg
jmp
adc
call
fldl
hlt
out
jnp
lods
rorl
sbb
xchg
mov
push
daa
push
clc
ret
xor
cmp
xor
stos
push
daa
adc
jne
je
mov
mov
add
out
je
pop
sbbl
xchg
fmul
lahf
pop
push
xor
mov
push
mov
push
hlt
fcomi
cmp
push
insb
mov
mov
leave
dec
pop
repz
adc
push
mov
cmp
xchg
mov
dec
add
int3
int3
inc
jbe
mov
dec
aam
aam
out
stos
dec
pop
push
cmpsb
add
cmp
incl
or
xchg
loopne
xlat
lods
cmp
jl
mov
daa
inc
push
pop
pop
iret
inc
adc
pop
mov
lret
into
sub
sub
lock
outsl
push
cmp
ret
loopne
dec
push
leave
adcl
adc
cmp
adc
or
xlat
shlb
lods
mov
je
add
push
jo
lcall
lock
cs
rorl
daa
sti
mov
fnstenv
inc
or
add
test
sub
xchg
or
mov
sub
clc
cs
fistpll
add
and
inc
call
aam
push
and
push
sbb
inc
xor
stos
or
jbe
push
xor
cmp
xor
mov
in
inc
aas
fisubrs
ret
or
pop
jl
fistl
test
jb
mov
xor
jae
sbb
rorl
ror
fcompl
sar
movsl
ficomps
into
xor
rcrb
das
jecxz
jp
int
lahf
fisubs
pop
movsb
shr
popa
in
in
jp
adc
mov
hlt
ja
into
cmp
lea
xchg
aam
adc
jmp
xchg
imul
sub
adc
ficoms
jns
mov
in
pop
mov
lcall
int3
loope
ret
xchg
add
push
pusha
std
testl
sub
fstl
mov
insb
jo
adc
lret
cmp
ret
jge
movsb
subb
add
add
lods
cmp
sub
daa
jl
negl
push
mov
enter
dec
dec
mov
in
push
push
rcl
movsl
nop
xchg
and
les
mov
pop
mov
mov
pop
aas
mov
mov
data16
cmpsb
outsb
lcall
movsl
scas
cs
aam
or
or
pop
les
push
inc
jb
ret
in
test
cmpsl
cmp
xchg
pusha
push
das
mov
add
push
in
daa
popa
dec
lods
hlt
sbb
movb
repnz
mov
test
push
cmp
ja
fst
add
in
stc
jne
ja
pop
xorl
sub
out
rol
sti
dec
les
jmp
data16
or
push
loopne
stos
loope
subl
rcll
flds
jge
sbb
mov
in
and
mov
mov
xchg
xor
shl
xorl
and
clc
adc
addr16
xor
test
stos
xor
je
lods
pop
decb
int3
sti
adc
and
sub
inc
sti
cmpsb
lds
fcomps
repnz
fwait
inc
jns
fwait
adcl
xlat
mov
pushf
push
insl
push
mov
popa
cmp
lcall
push
xorl
lock
lret
lods
jmp
push
mov
sti
pusha
cmc
iret
outsl
repz
or
jge
pop
cmp
jnp
out
mov
inc
pop
mov
rcrb
fs
outsb
test
clc
popf
add
jne
mov
mul
jp
pop
popf
lahf
mov
or
mov
jne
xor
mov
pop
outsl
push
lret
sbb
push
movsl
add
jnp
mov
sub
xor
gs
dec
xor
and
or
sub
sub
mov
pop
sub
movd
dec
repz
inc
cmpb
test
xor
mov
ret
fidivs
or
inc
sbb
shll
ret
jl
add
mov
cs
int
jecxz
bound
dec
int3
push
cmc
out
pop
in
xor
mov
inc
mov
adc
ucomiss
daa
add
push
mov
lea
adc
shl
pop
jle
mov
sahf
scas
fcomp
and
or
data16
push
rcrl
testl
jae
in
sub
bound
sbb
mov
fdivrs
mov
jle
cld
addr16
pusha
pop
xor
aam
lahf
pop
test
inc
into
dec
ficoms
inc
xchg
sub
mov
outsb
or
je
ror
jno
mov
sub
jp
mov
push
jns
test
pop
lret
cmp
jl
fldenv
dec
dec
inc
sbb
xchg
imul
sahf
xor
adc
push
xor
mov
mov
xor
push
call
jmp
jl
mov
push
repz
in
adc
std
adc
fmul
idivb
clc
std
push
pushf
daa
inc
jge
push
xor
insb
inc
jmp
andl
fwait
testl
mov
or
out
gs
jbe
scas
jmp
sub
push
sti
cmp
fadd
mov
faddl
mov
mov
and
xchg
cmp
mov
xorb
leave
test
xor
shlb
jle
pusha
js
fiadds
adc
rol
dec
jl
out
lock
mov
cmp
mov
mov
mov
mov
jns
adc
subl
mov
lret
cs
mov
aam
and
push
inc
adc
and
mov
pop
popf
xchg
mov
sar
push
sub
xchg
mov
sti
das
xor
pop
frstor
andps
push
jecxz
and
mov
sbb
jo
mov
push
mov
jecxz
push
arpl
call
adc
popa
shrl
xorl
gs
sbb
mov
and
out
or
mov
inc
sbb
shll
cmc
add
mov
pop
xlat
inc
dec
add
stos
ss
into
jle
push
push
xor
aaa
xchg
pop
add
xchg
fildll
das
addr16
and
addl
stc
mov
xor
mov
sbb
inc
notb
jbe
dec
mov
std
cmpsb
xor
cli
fs
fisttpl
mov
mov
ret
xor
shl
xchg
popf
cli
loope
aas
jecxz
popf
ret
xor
add
test
jmp
lods
sub
jb
ret
scas
mov
in
cmp
sbb
sahf
faddl
ret
inc
fwait
adc
inc
hlt
cmp
pop
cs
xchg
hlt
mov
sub
adc
pop
mov
mov
sub
pushf
fisttpll
outsl
jmp
pop
jp
int
jo
fstpl
rolb
mov
lods
xor
xchg
into
xchg
in
fstpt
xlat
les
xor
or
js
mov
or
rorb
xchg
cld
jge
fsubl
addr16
add
push
xor
scas
adcb
sarl
dec
lds
bound
fnstsw
mov
fists
cltd
frstor
xor
cmp
mov
adc
hlt
aam
xor
rorl
cmp
int
jp
or
negb
lock
aas
cmp
inc
adc
and
xor
insl
xchg
pop
cli
mov
fisubrs
ret
sub
outsl
scas
aam
xorb
sub
xchg
lea
repz
into
mov
sahf
shl
insb
inc
fistpl
bound
in
in
add
xchg
add
into
shl
add
fsts
cs
in
out
lret
jno
push
aad
mov
push
icebp
ja
jecxz
pop
xchg
pop
mov
xor
mov
inc
loope
inc
and
mov
push
cmp
leave
xor
ds
pop
es
xchg
cmp
mov
stos
outsl
adc
sub
aad
push
push
cmp
mov
adc
sbb
bound
mov
in
xchg
jle
insl
pop
cmpsl
ficoms
frstor
loop
or
mov
daa
xchg
jo
push
addl
adcl
repz
subb
push
stos
xchg
jp
repz
inc
mov
roll
mov
jp
sahf
lahf
pop
jbe
sbb
lods
rol
test
sbbb
shlb
outsl
adc
xor
sub
fcomi
adc
inc
stos
dec
std
lahf
popa
ja
add
cs
imul
adc
cmp
enter
lock
mov
shr
mov
fucomi
xchg
andl
mov
cmc
lods
clc
add
repz
mov
sbb
push
js
mov
outsl
xor
dec
mov
sub
sub
sahf
inc
fsubl
aam
cmp
pop
cltd
subb
or
sbb
xor
mov
xor
mov
lret
xchg
mov
add
mov
cmpsl
aas
jmp
adc
jle
insb
jb
cmpsb
mov
cltd
jecxz
xchg
fs
jecxz
sbb
scas
loopne
sbbl
sbb
test
cmpsl
adc
jnp
popf
lea
xor
sbb
or
outsl
sub
xchg
pop
es
sub
jae
cmpsb
gs
mov
in
mov
mov
adc
cmp
jg
xlat
mov
mov
lret
dec
add
mov
leave
ret
ja
ret
popf
xchg
popa
lods
mov
sbbb
or
je
pushf
das
shlb
pushf
pop
xchg
mov
sub
aaa
ret
stc
adc
push
pop
repz
mov
dec
push
xchg
inc
and
xor
sbb
out
std
sbb
sahf
scas
lret
test
or
xchg
outsl
mov
rcrl
mov
pop
or
lods
mov
xor
lods
mov
mov
adc
inc
sub
cs
outsl
pusha
cmp
aam
mov
add
inc
test
fwait
mov
push
xor
and
daa
sub
xchg
inc
mov
push
or
scas
pop
out
idivb
shrl
movsb
sbb
cltd
pop
shll
icebp
test
jl
mov
outsb
inc
clc
jno
addr16
cmp
je
mov
jmp
mov
clc
mov
movl
lea
outsl
push
out
adc
jnp
cmp
fcompl
aaa
out
jb
push
push
sub
sbb
and
cmp
ja
xchg
fcmovne
nop
mov
test
dec
pop
pop
jns
add
test
jno
lahf
push
dec
cs
nop
mov
cmc
idiv
repnz
movsl
testl
ret
mov
pop
lods
jmp
jle
xchg
lahf
or
mov
stos
sbb
scas
outsb
inc
aaa
pop
jae
cwtl
push
mov
or
mov
lret
inc
es
jnp
ficompl
jge
dec
cmpsl
ds
stos
xchg
fucomip
cmp
xchg
lcall
push
xchg
add
cs
dec
shr
and
xchg
neg
jle
dec
push
stos
inc
insb
inc
mov
outsb
pop
xor
cmpsb
xor
inc
cli
mov
xchg
into
scas
pop
cmpsb
cltd
push
in
cld
xchg
data16
popf
pop
stos
mov
pop
cmp
int3
jle
stos
pusha
cld
xor
inc
push
out
jmp
sub
pop
lods
int3
mov
cmpsb
dec
push
adc
sub
sbbb
cltd
cmpsb
neg
nop
push
call
dec
xor
xchg
inc
test
jecxz
pop
test
test
pop
sbb
mov
daa
loopne
and
repz
iret
dec
pop
ret
pushf
clc
sbb
gs
popf
mov
adc
adc
js
inc
or
jmp
dec
popl
dec
push
arpl
xchg
add
jmp
dec
and
scas
mov
repnz
and
cmp
shll
jb
cmp
or
iret
pmaxsw
and
push
shrb
push
in
mov
dec
cld
dec
addr16
not
out
sbb
mov
sbb
cmp
sbb
or
pop
scas
fucomi
xchg
push
pop
mov
push
cwtl
jb
imul
xor
mov
mov
pmuludq
push
sub
jp
xchg
scas
mov
mov
stos
xlat
in
add
push
lret
xchg
adc
stos
adc
jo
stc
push
jae
aam
add
pop
push
in
xor
adc
and
lds
cmp
mull
pop
nop
test
int
andb
inc
adc
mov
push
ret
inc
insb
loop
enter
xchg
jb
dec
jns
mov
sbb
js
xchg
pop
ja
push
sbb
pop
inc
dec
sbb
movsl
divb
or
xor
movsb
xlat
scas
js
cmp
ret
push
outsl
cmp
or
aam
outsb
repnz
jno
push
insl
ret
inc
xlat
dec
jno
mov
xor
pop
into
xchg
sahf
push
push
ret
sbb
daa
push
dec
inc
ret
rcll
cwtl
test
add
jbe
aas
insl
xor
fistps
cld
dec
pop
xchg
xchg
inc
xchg
or
scas
push
out
dec
lret
aam
pop
test
nop
add
xchg
or
imul
mov
fmul
mov
fadds
pushf
jbe
cwtl
jnp
cmp
and
and
aam
ljmp
fcomps
mov
ret
loop
std
fmuls
jp
xor
or
movsl
or
jae
pop
push
ret
xchg
push
fistl
and
jno
xor
call
mov
xor
ja
mul
mull
out
aam
popa
xchg
or
adc
or
cld
and
cmp
loopne
or
push
push
aas
lds
and
pop
rcrb
push
xor
and
and
lahf
test
ljmp
fcomps
or
hlt
lret
movsl
dec
sahf
mov
pop
pushf
arpl
sbb
mov
pop
push
dec
gs
xchg
mov
insl
loope
dec
call
push
xor
enter
call
push
inc
test
sub
push
mov
orl
mov
inc
and
add
imul
inc
cmp
sub
ja
jg
lods
dec
pop
sub
add
inc
es
sbb
xchg
xor
xchg
scas
push
sbb
pop
mov
mov
adc
lea
test
xchg
jg,pn
inc
lahf
lret
mov
maskmovq
inc
inc
mov
sub
add
mov
xlat
cli
imul
cmp
fdivrs
add
aaa
add
xor
out
or
pop
sar
push
sub
sti
roll
jmp
cmp
xchg
loop
pop
xlat
neg
or
pop
xchg
int
adc
dec
jmp
mov
mov
aaa
jp
push
pop
decl
das
test
adc
shrb
mov
jg
testb
sub
fildll
inc
sbb
jnp
test
mov
xchg
leave
lods
sbb
mov
in
loop
pop
and
sbb
sbb
mov
adc
sbbb
lods
inc
clc
inc
hlt
loop
test
sub
rolb
lcall
ldmxcsr
add
fidivs
xchg
pushf
xlat
cmp
ret
sahf
add
dec
xchg
sbb
mov
push
lret
sub
repz
adc
push
xchg
pop
dec
fists
add
fwait
dec
xchg
outsb
js
mov
sub
loopne
cmpsb
cmpsl
add
mov
sbb
or
jle
push
int3
cli
shr
jno
xchg
push
and
pmaxsw
mov
mov
in
cli
out
add
dec
in
orb
stos
icebp
bswap
dec
sarb
scas
jae
jb
or
lods
scas
add
push
pop
xlat
mov
push
jb
mov
dec
inc
popf
les
ficoml
loop
mov
dec
out
dec
cmp
xchg
xor
pushf
gs
fiaddl
pop
sbb
xchg
jno
arpl
inc
jg
pop
lahf
enter
push
mov
lret
and
or
and
push
pop
movsb
mov
jb
sub
out
jae
fimull
xorb
push
xchg
mov
jbe
xchg
push
sbb
adc
mov
incl
mov
sbb
test
and
and
push
xchg
leave
jbe
jnp
fnsave
push
fwait
pop
jmp
insl
cmp
cmp
lret
scas
add
mov
jmp
loope
pop
dec
xchg
jns
negb
dec
cld
rorl
out
dec
inc
pop
out
xchg
jae
fmull
inc
int
data16
push
inc
inc
adc
mov
popa
and
push
jo
inc
popa
xchg
dec
push
imul
jmp
cmp
adc
fcomps
fstpt
xchg
inc
add
test
and
icebp
jmp
mov
pop
adc
mov
out
cmp
sbb
add
stos
rcl
ffreep
lret
stos
int
mov
xchg
xchg
xor
cmp
in
data16
ret
out
mov
pusha
sub
ljmp
or
xchg
cmp
stc
lods
cwtl
sbb
out
adc
mov
add
popf
enter
out
dec
push
bound
pop
fs
xchg
mov
lcall
fidivs
dec
cwtl
cmpsb
push
ficoms
outsb
inc
add
jle
push
adc
adc
mov
bound
xor
shrl
adc
loopne
aas
les
pop
test
add
dec
inc
lods
mov
fcompl
mov
pop
cwtl
jns
aam
es
sbb
push
pop
jne
xlat
ja
fadds
in
andl
loop
ljmp
fidivs
das
push
dec
cli
mov
mov
cmp
pop
dec
fnstcw
adc
dec
ja
fcmovne
and
inc
mov
daa
or
xor
mov
dec
ja
add
dec
pop
sti
fstps
cmp
xor
bnd
cmp
testb
leave
inc
insb
cld
aas
mov
or
xchg
pop
enter
and
call
out
mov
scas
cld
rcrb
mov
lcall
pop
jp
jge
add
push
aas
inc
psrlw
loope
ja
das
out
adc
pop
mov
rclb
push
sbb
popa
cli
xchg
pop
ljmp
jne
cmp
pop
or
add
insb
movsb
mov
ret
pop
push
jg
out
adc
add
adc
push
out
cwtl
sub
and
sti
and
out
or
int3
rclb
out
int
sub
or
mov
aam
inc
sbb
shl
xchg
insb
sub
cmc
cli
nop
adc
cld
inc
sub
arpl
adc
int3
jne
and
bound
pop
rorb
mov
push
add
fimuls
pop
sti
and
in
inc
int
popa
mov
cs
pop
fists
pushf
add
xor
mov
mov
clc
inc
je
mov
jle
mov
add
add
jae
repz
cmp
ror
pop
aas
cmc
mov
pop
notl
mov
add
push
aam
add
out
inc
sbb
dec
push
cli
insl
sub
jae
inc
fs
pusha
ret
out
fsubrs
mov
cmp
jnp
lods
push
xor
ret
push
shll
inc
shr
add
jmp
mov
icebp
push
inc
test
mov
push
mov
mov
sub
inc
into
add
aas
data16
xlat
sbb
pushf
stc
fisubs
add
push
cmpsb
push
orb
jl
lret
cmp
mov
clc
mov
or
sub
sbb
pop
xchg
data16
mov
mov
mov
daa
sub
push
out
pop
xchg
into
adc
mov
xchg
pop
aam
sub
shrb
bound
and
iret
inc
daa
jmp
pop
and
pop
and
mov
inc
je
fimuls
jns
pusha
push
pop
push
out
cmp
lods
aam
outsb
xchg
ss
add
nop
mov
fcoms
xor
jg
push
push
push
jl
rcl
xchg
daa
sahf
flds
push
pop
pusha
aam
inc
getsec
jle
sub
mov
push
mov
mov
loope
or
mov
xor
insb
movsb
sub
mov
push
lea
ljmp
and
repnz
sub
scas
into
add
mov
jns
cmp
mulb
push
sbb
iret
dec
cs
cld
xor
mov
in
aam
sbb
lcall
jg
negl
pushf
push
add
andb
testl
in
lret
mov
test
or
hlt
mov
add
add
mov
dec
pop
push
push
or
in
imul
push
into
shl
in
shrb
movb
sub
leave
stos
gs
outsl
outsl
dec
imul
inc
aas
das
mov
push
scas
dec
scas
cmp
lcall
fimull
adc
mov
cmp
pop
or
push
dec
inc
out
int
ja
jne
dec
mov
sar
fbstp
out
popf
movsl
push
push
fisttps
push
stos
push
mov
iret
je
lret
stc
cld
or
ds
sub
data16
push
into
and
push
cmp
sahf
jecxz
push
insb
cmp
mov
xchg
outsl
sub
dec
sbb
repnz
mov
ds
cld
mov
push
cmp
push
cmpb
push
mov
lds
addb
cmpsl
int3
xchg
flds
adc
pop
les
mov
gs
insl
pop
jmp
add
xchg
xchg
push
sub
insl
dec
enter
xor
xchg
and
jnp
lahf
decl
sub
cld
push
arpl
psllq
pop
ficomps
inc
inc
fwait
add
mov
pop
shrd
add
movsb
sbb
into
mov
or
push
pop
inc
xchg
ror
mov
push
jle
out
jp
lret
ss
sbb
and
lahf
stos
push
jge
sub
mov
mov
adc
inc
aam
xchg
jno
push
inc
mov
js
dec
nop
dec
es
call
adc
pop
jnp
or
std
dec
xchg
sub
rcl
push
pop
push
or
jle
in
lcall
aaa
add
jno
or
xor
pop
mov
ret
lods
call
insl
shrl
mov
inc
cltd
fimull
icebp
xchg
test
call
rolb
stos
pop
cld
inc
rcrb
das
xor
sub
mov
cld
jne
or
mov
arpl
dec
pop
incl
cwtl
cli
jb
shll
mov
jb
test
retw
negb
inc
mov
sub
sub
fdivs
adc
rcrl
and
pop
icebp
mov
mov
cmp
jecxz
mov
mov
sarb
xchg
or
rclb
jns
pinsrw
mov
div
add
dec
adc
leave
cli
xchg
into
pop
loope
outsl
add
loope
scas
outsb
push
or
test
gs
or
jl
dec
fchs
dec
enter
jle
ss
jecxz
pop
pushl
std
in
jl
mov
lahf
sub
add
ret
mov
test
iret
arpl
xor
lcall
bound
in
or
int
or
dec
shrl
cli
in
xor
xchg
sbb
leave
cmp
xchg
insb
inc
aaa
add
cli
push
ss
gs
add
and
xor
inc
or
xor
sub
ljmp
push
pushf
inc
ds
sbb
dec
adc
test
xor
outsb
or
jae
pop
cmc
pusha
xor
pop
aad
std
leave
mov
aam
fs
les
test
mov
dec
pop
shll
scas
pusha
sbb
jmp
in
xchg
arpl
and
adc
jae
sbb
or
push
es
add
loopne
sub
bound
arpl
push
dec
pop
je
imul
sbb
jecxz
inc
pop
adc
push
stc
jne
adc
aam
insl
ror
aas
xchg
stc
imul
shll
jg
pusha
dec
hlt
jle
pop
and
data16
mov
movsl
adc
mov
mov
std
mov
aas
xor
xor
mov
fcmovnbe
scas
add
lock
dec
scas
in
je
sub
jecxz
lcall
std
inc
dec
xor
xchg
stc
rolb
fs
xchg
out
jno
or
out
daa
fistps
daa
cmp
sarb
sbb
shrb
push
cmc
xchg
fdivrl
sub
jmp
dec
aas
adc
roll
mov
inc
scas
jecxz
test
cmpsl
mov
dec
sbb
fisubrs
dec
movsl
pop
cmp
and
out
sahf
adc
xlat
jmp
dec
pusha
inc
sub
mov
fcomip
rolb
inc
and
mov
lods
leave
adc
push
mov
pop
mov
ficompl
add
sub
arpl
xor
mov
bswap
pop
push
add
inc
pop
mov
lods
cmp
dec
imul
out
dec
das
jbe
ljmp
test
pushw
mov
test
jo
iret
sbb
dec
pop
lods
mov
sbb
rorb
dec
inc
sbb
adc
adc
mov
add
sbb
inc
jae
add
xor
xlat
jl
jle
lods
sub
jo
fld
enter
inc
push
mov
mov
andb
les
sti
jge
pop
jne
imul
pop
pop
out
fmulp
cs
and
dec
out
mov
inc
mov
ret
push
mov
imul
pop
add
xlat
call
test
and
rorl
mov
subl
inc
cmp
sub
sub
stc
repnz
fs
jb
gs
add
icebp
ss
mov
mulb
add
cwtl
bound
mov
mov
cld
jle
inc
insb
int
cmp
js
lahf
pop
lods
sti
xor
jns
xchg
adc
jns
jns
ss
addr16
sahf
xor
fisttpl
cltd
mov
das
sub
std
inc
aas
pop
les
or
mov
and
shl
dec
push
lcall
jecxz
jmp
jo
adc
mov
mov
out
loopne
and
mov
inc
test
xchg
dec
adc
mov
pusha
ljmp
dec
lret
adc
loop
in
or
ds
add
and
lods
lods
cmp
insb
cmp
lds
sub
rcrl
or
sarb
jecxz
xchg
and
out
jo
in
dec
cltd
sbb
mov
sbb
cmpb
inc
repnz
pushf
inc
fucomi
jp
lock
dec
test
rcr
cmp
fcompl
test
add
pop
pushf
push
dec
xchg
pop
cltd
into
test
mov
jp
push
add
cmp
mov
movsb
mov
sub
iret
testb
push
jge
cmp
pop
mov
flds
mov
jb
enter
mov
fadds
push
mov
or
punpckhdq
fcoml
mov
mov
mov
test
adc
sub
sbbb
xor
insb
sbb
mov
inc
pop
pop
xchg
mov
lods
push
xor
andl
call
lock
je
sub
rorl
fs
sbb
adc
pop
jae
adc
xchg
xlat
scas
and
xchg
sbb
jo
push
fs
xor
mov
dec
test
push
xlat
lods
sti
jle
ret
and
arpl
mov
xchg
stc
pusha
mov
add
fisttpll
out
mov
stos
jno
inc
add
in
pop
push
or
bnd
lea
fcom
jle
ret
xor
and
adcl
int3
adc
pop
xor
pop
mov
add
test
test
hlt
jle
pop
adc
dec
fs
mov
stos
sbb
fnstcw
js
push
test
and
into
fistpl
xchg
rcrb
dec
lret
push
dec
fsubrs
incl
dec
mov
jecxz
lds
cmp
jl
enter
and
push
fsubl
imul
in
and
out
cld
shll
pop
cmp
xchg
and
mov
push
xor
ret
aam
jecxz
sbb
mov
inc
xor
xor
cmp
add
mov
stc
aam
push
jg
xor
ds
insb
mov
push
add
arpl
jb
jne
insb
mov
inc
and
push
ret
jl
sub
mov
fidivs
enter
push
repnz
mov
xchg
je
jl
jne
or
xchg
inc
stos
int3
ret
nop
dec
insb
jge
xchg
mull
sub
loopne
out
stos
lods
into
mov
mov
and
lret
mov
push
jo
xor
xchg
imul
add
icebp
repz
jne
pop
mov
pop
jne
jp
fs
xchg
pop
ret
jne
pop
jg
loop
sbb
jnp
or
movsl
clc
sbbl
sbb
test
pop
ret
sti
sahf
shrl
ficompl
jno
negb
push
das
mov
add
rcr
setp
sub
xchg
cmp
xchg
stos
cmpsb
daa
repnz
pop
ds
sub
int3
lds
jl
test
ret
lds
inc
mov
xchg
aad
dec
sbb
stc
sbb
pop
rclb
insl
lock
fisubrs
aas
xchg
push
adc
cltd
inc
mov
and
adc
out
cmc
in
jge
mov
adc
xorb
inc
push
xchg
out
pop
mov
movsb
sub
dec
cmp
mov
test
sti
loope
idivb
repz
inc
mov
ret
or
cmp
outsl
cmp
push
inc
mov
ficompl
gs
mov
dec
cs
mov
and
imul
sbb
xchg
or
lods
cmp
push
cli
push
add
add
mov
sbb
shll
jae
cmp
mov
xchg
orb
testb
xlat
scas
cld
jp
out
mov
subl
push
xchg
pop
imull
mov
inc
call
jno
lods
jne
jl
js
and
mov
pop
fsubs
arpl
sub
in
dec
inc
push
jl
mov
xor
outsb
push
mov
adc
pop
mov
push
push
inc
sub
in
cmp
int
nop
xchg
adc
outsl
ficoms
push
clc
inc
xor
mov
loopne
negb
ljmp
jmp
dec
pop
popa
je
mov
lock
or
mov
jno
cmpsl
sub
faddl
push
adc
nop
inc
and
lods
or
lcall
and
out
roll
and
ljmp
outsb
push
jnp
push
gs
mov
adc
dec
dec
cmp
add
sbb
adc
imul
popa
fstps
das
lret
fcomp
aaa
and
je
test
call
aam
mov
cmc
cltd
mov
pop
sbb
scas
cmc
sbbl
data16
push
out
jp
push
push
push
clc
cmpb
and
sub
cld
stos
rclb
aad
mov
fldcw
mov
and
push
push
test
sub
jg
push
xor
xor
xor
push
pop
call
or
enter
in
lods
ljmp
in
mov
mov
xchg
xor
stos
lret
xchg
mov
push
out
add
add
xchg
jle
pop
push
and
dec
adc
popa
xchg
mov
cmp
xchg
imul
clc
int3
jg
mov
shlb
insl
lods
bound
jl
cmp
jns
mov
lea
loop
mov
dec
xor
push
sub
sbb
pop
xor
xchg
movl
dec
aam
xchg
mulb
mov
fsubrl
outsl
int
pop
in
push
and
mov
mov
pusha
mov
filds
push
sbb
cmp
shlb
dec
call
out
iret
into
push
daa
out
loopne
dec
pop
std
mov
sbb
cli
test
rcr
je
add
daa
add
push
cld
sub
pusha
sub
jbe
mov
inc
xor
jne
push
inc
add
mov
data16
sub
shrl
iret
in
loop
inc
inc
mov
loop
imul
push
js
gs
out
mov
dec
ret
lock
sub
inc
cs
cmp
inc
push
lds
pushf
mov
fidivs
dec
mov
lods
ficompl
in
lods
nop
xor
stc
or
nop
lcall
loope
fistpl
es
pop
lret
sub
jns
jae
push
mov
mov
hlt
leave
pop
addr16
cmpsl
jl
pop
xchg
or
lret
mov
xor
xor
mov
dec
lret
imul
xchg
adcb
jnp
pop
sub
jg
jge
gs
popa
lret
imul
or
xchg
mov
out
insl
cmp
sbb
iret
ds
decb
test
dec
ldmxcsr
push
cmpb
sbb
out
push
in
out
je
outsl
rcrl
push
mov
insb
imulb
hlt
stc
or
sub
xor
das
stos
ror
ja
sub
adc
imul
xor
out
dec
outsl
loope
jle
dec
add
cmpsl
lods
pop
add
xor
lods
or
cmp
testl
shll
xor
inc
xor
mov
jmp
mov
out
repz
jp
xor
test
aas
pop
and
lcall
push
gs
cmp
movsb
adc
repnz
or
sahf
cltd
push
inc
xchg
in
das
aam
push
dec
pop
movsb
loope
mov
cmp
in
xor
imul
test
sti
xchg
fldcw
mov
xchg
push
les
mov
test
inc
cltd
shlb
xchg
daa
jnp
pop
repz
mov
jp
repnz
stos
inc
mov
mov
nop
jle
lret
outsb
das
ljmp
and
pop
cli
xlat
xor
aad
rcll
cmp
aaa
sbb
push
jmp
nop
popf
push
jbe
xchg
mov
icebp
cli
std
xor
stos
sbb
dec
je
call
popa
mov
sub
orb
shll
sub
inc
insl
pop
jmp
gs
xchg
add
cmpsb
repz
sbb
ds
repnz
mov
outsb
jae
mov
clc
ja
std
movsb
and
fpatan
push
xlat
add
or
lock
icebp
cmpb
in
inc
sub
sub
mov
jne
adc
xchg
cmp
subb
and
or
dec
repz
lcall
mov
and
push
cmp
or
mov
shll
adc
mov
inc
movsb
insb
insl
fsubl
lock
inc
push
add
inc
enter
fndisi(8087
dec
mov
inc
mov
filds
es
and
pop
scas
pop
nop
mov
dec
xlat
dec
int
loopne
pop
jnp
bound
pop
xor
xor
jp
scas
dec
ja
and
rclb
push
sub
lods
test
stos
fcoms
push
addr16
sbb
pop
pop
dec
leave
ljmp
mov
xchg
call
punpckhdq
test
inc
mov
sar
pop
jae
jmp
mov
cmpb
ja
inc
bound
scas
mov
and
aas
pop
stos
xlat
pop
mov
jl
ja
in
aad
stc
lret
bound
jg
lods
data16
imul
clc
mov
cwtl
xor
xor
cmc
jae
mov
jnp
stc
fbstp
mov
pop
aam
add
sub
lock
inc
cwtl
or
mov
mov
repnz
push
push
and
scas
push
stos
pop
adc
push
into
mov
leave
sbb
jbe
movsb
idivl
xchg
movsl
stos
xor
test
xchg
mov
roll
pop
mov
lods
mov
jge
xchg
aas
adcl
sub
pusha
pop
push
jnp
or
mov
addr16
mov
adcl
cmpl
xlat
sbbl
pop
inc
jp
jg
push
sti
mov
loopew
push
sub
das
jbe
faddp
mov
dec
or
cwtl
orb
and
inc
mov
icebp
mov
out
icebp
mov
out
adc
out
push
mov
xchg
add
out
mov
int3
movsl
out
dec
mov
nop
add
mov
pop
je
adc
sbb
and
icebp
pop
mov
stc
rolb
mov
jle
mov
sahf
and
pusha
adc
ja
hlt
bound
out
inc
and
rcl
cmc
mov
clc
pop
sbb
inc
jmp
lods
or
test
addr16
mov
sub
cmpsb
movsb
subl
sub
loop
leave
imul
sbb
push
pushf
xor
xchg
add
cmp
cmp
mov
push
iret
mov
lods
cmp
mov
adc
cld
aas
inc
jb
adc
gs
jecxz
xchg
or
mov
faddl
xchg
aam
test
cmp
xor
jmp
push
in
fs
jae
cltd
inc
fiadds
jge
ja
out
or
jne
sbb
mov
cmp
sti
cmc
out
cmp
pop
and
loop
mov
je
dec
cltd
imul
inc
pop
push
add
cltd
mov
lods
addb
ljmp
fwait
in
int3
dec
push
add
fstl
mov
jns
pop
sarb
dec
xor
inc
add
mov
dec
test
pop
loop
mov
dec
in
arpl
int
ret
outsb
shl
xor
adc
shll
push
pusha
mov
ljmp
scas
xorl
lahf
stos
out
jecxz
push
sub
in
cmc
popf
pop
push
add
sub
imul
or
rcrb
cmc
ja
pop
mov
dec
mov
ret
out
mov
out
fcompl
inc
cmc
or
sub
stc
push
pop
and
xor
enter
rcrl
sub
lods
std
test
push
or
popf
dec
or
in
arpl
test
jle
inc
scas
pop
inc
jae
push
jo
inc
ret
mov
push
movsl
sub
push
in
xchg
or
jbe
inc
addb
subb
xchg
shl
pop
xchg
arpl
dec
mov
imul
ret
in
scas
fistl
add
or
jne
shl
or
in
or
cmpsb
sub
cmp
xor
pop
sub
hlt
mov
jo
pop
mov
push
repz
jo
outsl
mov
add
add
ss
xor
fsubs
mov
mov
lods
push
js
push
dec
mov
mov
push
adc
lret
loope
int
movsb
out
ret
insl
popa
test
decb
xchg
sub
mov
outsb
mov
mov
addb
icebp
cmp
push
lods
outsb
or
dec
scas
in
pop
sti
mov
out
jns
cld
adc
lret
int
inc
cmp
xor
mov
imul
mov
mov
popf
lret
inc
jl
lods
pop
fisttpl
sti
fiadds
stos
and
jecxz
mov
loope
imul
mov
lods
mov
xchg
add
adc
testb
jl
add
sbb
push
xor
rcll
pop
orb
arpl
call
or
sub
fidivl
repnz
bound
out
rol
ror
mov
jbe
xchg
lods
inc
inc
test
fcmovnu
or
xor
inc
inc
aaa
jg
pusha
sti
push
jb
addl
inc
shlb
xor
ja
xor
cmpsb
ljmp
lea
scas
mov
fwait
sub
and
cltd
sbb
ljmp
outsb
bnd
repnz
push
push
stos
lret
or
mov
lret
ficomps
insb
ret
ss
enter
xchg
stos
jae
ficoms
push
lods
jo
nop
sub
pop
int3
cli
cltd
lods
or
pop
mov
mov
push
fwait
aad
pop
push
sub
jb
es
or
test
rclb
out
icebp
sbb
mov
sar
insb
test
fscale
push
sub
fldenv
mov
leave
push
inc
mov
leave
adc
adc
lods
push
ljmp
imul
cli
data16
jg
sti
inc
mov
sbb
push
sbb
movsl
add
lds
dec
jo
sub
or
or
pop
cwtl
dec
add
movsl
push
test
xor
add
jle
insb
shrl
inc
push
popa
in
dec
mov
mov
jecxz
ret
lock
das
mov
mov
test
insb
inc
sub
ds
adc
test
jl
inc
mov
daa
rcrl
xor
pusha
cmp
jmp
insb
cld
outsb
xchg
jge
js
outsb
inc
dec
iret
insl
xchg
mov
cmpsl
icebp
jge
adc
in
add
or
scas
lds
ret
adcb
ret
push
fs
jge
jb
and
sub
mov
pop
sarb
sub
std
mov
pop
fcmove
xchg
xor
call
test
push
pop
gs
icebp
sbb
dec
leave
pop
mov
sarb
sub
ja
inc
mov
outsb
adc
adcl
ret
lea
fistps
jae
in
dec
cmp
scas
or
fs
rcrb
std
mov
fadd
adcb
fiaddl
std
fcoml
jne
jno
push
addb
mov
and
mov
jo
cld
mov
test
sbb
adcb
fs
ret
aaa
jno
xchg
cmp
fcomip
insb
lahf
imul
jecxz
out
push
push
sbb
jne
pusha
sbb
jns
fdivs
or
je
mov
je
loopne
pop
popf
pop
xor
cmp
je
das
add
jmp
lret
fxch
add
pop
mov
negb
fucomi
sbb
xchg
popa
sub
and
cmp
xor
adc
and
adc
sbb
jl
cli
js
sub
lods
xor
xor
imul
fcompl
out
aas
rcrl
pop
dec
sub
adc
js
inc
fdivrs
insl
jns
jae
leave
addb
xchg
repnz
inc
pop
ret
std
and
xchg
sub
inc
push
jg
push
mov
mov
mov
mov
push
mov
pop
mov
ss
lods
hlt
repz
mov
in
cwtl
std
idiv
bound
adc
cmp
push
nop
inc
adc
mov
lock
cmp
call
aas
cmp
inc
mov
jmp
jnp
jg
sbb
sbb
jae
cld
fcomps
push
fbstp
adc
scas
in
mov
or
pop
ja
push
inc
mov
call
mov
pop
outsl
mov
sbbb
adc
or
int
jl
inc
add
lret
cmpb
xor
mov
push
push
loop
out
mov
scas
mov
icebp
mov
jg
push
icebp
jge
sbb
mov
and
sub
xor
cld
push
subb
mov
out
pop
enter
mov
flds
loop
and
cmc
cmp
out
push
push
jae
dec
xchg
clc
push
dec
inc
ss
cmc
mov
mov
xchg
or
jecxz
jmp
xor
pop
cmp
dec
pop
dec
push
jp
adc
jecxz
lcall
inc
imul
pop
std
in
ret
push
mov
push
lcall
or
int3
cld
or
mov
mov
clc
or
into
repz
inc
mov
adc
sub
adc
adc
mov
dec
push
sbb
pop
pop
ret
jns
hlt
icebp
fstpt
pop
jns
data16
cli
fistpll
test
push
sbb
lret
jbe
rcr
call
push
xchg
cmp
popf
insb
insb
mov
repz
call
cmp
rol
adc
clc
enter
and
gs
dec
cmp
jge
data16
xor
fldt
sub
cmp
xchg
syscall
pop
jo
sbb
lds
les
ficoms
inc
xor
stos
sub
xor
push
add
in
lret
mov
dec
fcomps
mulb
lahf
mov
shrl
sarb
xchg
xchg
push
imul
adc
arpl
ljmp
push
stos
outsb
fwait
mov
pop
roll
add
outsb
add
lods
je
mov
pop
insb
push
shl
add
add
js
cmp
inc
loope
jns
dec
scas
sub
mov
dec
test
jne
test
and
ret
push
nop
popa
popf
dec
inc
xchg
dec
add
cmpb
sub
sub
mov
loope
and
and
fs
fbstp
dec
rcll
sbb
cmp
insb
mov
jge
fwait
out
jmp
inc
rol
cmp
cmp
adc
movsl
pop
ss
jb
jno
lds
js
mull
adc
sbb
loop
lea
mov
aad
insb
fwait
mov
dec
in
jle
aas
jbe
and
sub
adc
flds
sub
and
lods
add
mov
pcmpeqw
dec
xlat
inc
push
out
js
add
xchg
popf
mov
sbb
mov
or
movsl
je
push
inc
xor
arpl
roll
loop
das
sbb
loope
outsb
lret
mov
hlt
pushf
dec
stos
and
adc
repz
lds
cmp
lahf
adc
aas
push
push
ja
fs
shr
push
add
js
inc
lahf
stc
mov
stos
lock
ss
repz
or
adc
inc
hlt
mov
or
mov
push
and
out
sbb
jmp
ss
stos
xor
cmp
push
mov
mov
pop
xchg
mov
in
mov
mov
push
jl
int
and
push
mov
cmc
cs
imul
fidivl
imul
xor
fcoml
in
shll
les
push
loope
xchg
pushf
lahf
loop
hlt
jp
pop
adc
pop
pop
sahf
add
xchg
and
rcrb
sub
xor
scas
lea
ds
inc
pop
fdivrl
xchg
mov
xor
push
adc
mov
cwtl
xchg
cmp
icebp
sub
icebp
adc
movsl
cmp
jecxz
push
dec
out
bound
fidivl
pushf
adc
cmpsb
mov
jno
xchg
push
jecxz
jb
jp
insb
cmp
aad
cmc
adc
jo
pop
in
sti
bound
lock
clc
push
push
daa
jmp
pop
lds
stos
cmc
inc
dec
negb
add
push
insl
arpl
push
or
mov
sub
loopne
inc
int3
dec
incb
sarb
push
mov
lahf
cld
aad
push
cs
mov
jp
mov
fldt
imul
pop
push
xor
mov
ss
faddl
inc
inc
bnd
or
mov
or
cmpsb
push
lea
in
push
inc
in
arpl
inc
stos
lock
xchg
push
jbe
sahf
ret
adc
inc
mov
cmp
dec
loope
ret
lcall
push
or
sbb
sbb
nop
sub
out
jp
fistps
aad
pusha
roll
lock
fistpl
sbb
add
aam
mov
mov
jmp
sbb
sbb
inc
dec
bound
leave
xor
jne
clc
sub
xchg
pop
inc
add
nop
jno
fwait
sbb
jno
enter
or
stc
enter
xor
lea
cmpsb
psraw
push
sub
dec
in
cmp
int
mov
adc
jmp
push
xchg
sbb
jne
rcr
je
jno
push
out
les
xor
cmpb
ljmp
adc
add
arpl
pop
mov
aad
aas
and
icebp
adc
and
mov
or
xchg
pop
mov
jg
ficoms
mov
dec
adc
adc
mov
cmp
xor
sbb
jno
fst
icebp
jle
mov
outsb
in
mov
pop
sarb
mov
and
ja
or
sbbl
mov
dec
stc
jmp
jmp
cmc
loope
mov
sbb
in
pop
xorb
cli
aaa
ds
pushf
dec
loop
push
mov
pop
push
cltd
fs
xchg
scas
mov
adc
divl
pushf
fnstcw
psllw
mov
dec
mov
and
mul
shlb
sahf
pop
out
divb
cmp
mov
addb
adc
push
or
jmp
mov
outsb
aam
xor
add
mov
std
push
mov
icebp
mov
mov
xor
jg
std
or
mov
fcompl
and
fsubr
add
test
fstpt
sub
nop
fisubs
rorb
dec
xchg
nop
lock
xchg
pop
imul
jge
dec
push
sub
push
lock
cmp
js
pandn
popf
jg
sub
pop
aaa
xchg
jp
test
sahf
adc
jecxz
es
daa
in
popf
add
cwtl
cmp
stc
cmp
call
pop
and
dec
dec
mov
aaa
scas
outsl
das
rclb
enter
in
popa
sbb
shll
out
bound
xor
xchg
cmp
cmp
sub
lret
pop
aad
fisubrs
jae
sub
fadds
sarl
pushf
mov
pop
sarl
mov
inc
movsb
incl
jne
and
jl
rcrb
ss
out
dec
lock
aad
push
dec
add
inc
sbbl
movsl
or
and
out
out
or
sub
cmp
or
not
gs
lods
and
mov
sub
pop
adc
sub
incl
inc
test
fwait
cmp
mov
ja
rcl
and
cmp
mov
jle
rcll
scas
jo
icebp
mov
inc
sbb
mov
fstpt
lahf
rorb
dec
pop
into
leave
rcll
dec
ds
dec
js
pop
ret
das
mov
mov
les
hlt
jo
lahf
dec
mov
xor
aaa
js
stos
adcl
ret
ret
out
pop
mov
cmp
js
fmuls
push
or
scas
jmp
xor
jno
push
adc
dec
cmp
jg
inc
or
mov
cmpsb
ret
js
and
addr16
lea
jecxz
xor
add
mov
hlt
cmp
push
mov
adc
mov
inc
xor
enter
daa
test
fnstenv
lret
pushf
cmp
jmp
jle
mov
sbb
push
movsb
or
add
repnz
mov
addr16
dec
pushf
push
pusha
cmp
arpl
mov
cmp
mov
fwait
data16
out
lahf
jo
inc
mov
popa
das
into
in
xor
into
dec
and
leave
daa
fisttpll
xor
jp
push
push
test
pop
cmpsl
pop
push
jne
imul
and
dec
sub
mov
push
mov
lea
adc
cs
adc
push
add
mov
xchg
imul
sub
adc
and
jmp
test
sbb
adc
fsubl
data16
jmp
pop
jbe
push
icebp
mov
mov
sbb
xor
inc
fs
aad
push
dec
mov
mov
out
add
mov
jns
lret
clc
test
js
movsb
xchg
insb
add
ret
jnp
sbb
enter
daa
dec
inc
sbb
jne
push
inc
nop
fmull
xchg
mov
faddl
fwait
push
pop
dec
push
loope
movb
mov
mov
fwait
insb
jg
sbb
arpl
cmp
lds
movsl
pop
xchg
mov
je
jg
push
dec
add
out
fistpll
popf
adc
gs
add
imul
cwtl
jmp
imul
cmp
in
jl
sub
je
lock
aaa
dec
enter
sub
or
mov
xor
icebp
pop
push
movsl
js
jno
jp
daa
jl
cmp
out
mov
aad
aaa
in
xchg
inc
xchg
xor
jns
adc
inc
repz
fwait
sbb
inc
fwait
sahf
sub
inc
mov
add
adc
push
divl
das
push
push
mov
loopne
daa
ret
inc
cmp
inc
lahf
loopne
inc
add
sub
jp
push
sub
add
sbb
out
inc
mov
daa
sbb
pop
outsb
xor
das
mov
mov
cwtl
jle
dec
inc
jne
dec
out
sbb
les
out
call
mov
lds
jns
push
enter
mov
aad
scas
aaa
push
inc
dec
sbb
xchg
lcall
call
clc
mov
mov
int3
mov
inc
arpl
adc
inc
lahf
inc
inc
aaa
pop
ss
loopne
ficomps
sub
mov
sbb
and
mov
lcall
push
pop
in
out
push
jns
fimuls
mov
xchg
xlat
movsb
xchg
rcll
mov
jbe
mov
test
lods
ljmp
mov
cmp
mov
xor
loope
imul
loope
mull
test
push
outsl
push
and
fisttpl
mov
jo
mov
call
adc
ret
pop
xor
mov
adc
out
inc
stos
fisttpl
adc
jl
data16
sub
jp
xchg
ljmp
cmp
mov
pop
sub
jmp
arpl
and
sarb
stos
inc
js
mov
and
fwait
ret
sbb
stos
dec
mov
clc
outsb
mov
movsl
ret
pop
shlb
add
push
pop
pop
scas
mov
movsl
test
dec
bnd
xor
adc
dec
aas
inc
aas
pusha
rcrl
push
inc
push
pop
fwait
and
pop
sub
leave
or
jo
sbb
movsb
mov
adc
push
jb
sar
pop
mov
sbb
mov
lahf
ljmp
adc
push
add
popf
or
or
or
adc
xor
mov
test
mov
pop
icebp
in
jo
mov
stos
inc
push
nop
movsl
inc
pop
imul
loopne
or
inc
ret
cmp
mov
xor
sbb
addl
out
out
in
push
cmp
push
add
pop
lea
call
mov
inc
rorl
popf
or
testb
enter
aaa
push
jmp
xor
add
cmpsl
and
shrl
pop
sbb
and
scas
scas
shl
jbe
shrl
in
pop
inc
pop
sahf
or
jns
mov
call
adc
pop
sub
lahf
or
push
notb
jge
inc
stc
into
call
testb
movsl
mov
xchg
sti
sarb
aaa
push
test
jmp
fiaddl
cmpsb
mov
mov
xor
in
or
adc
adc
sar
pop
sbb
mov
arpl
rcl
mov
fstpt
ss
dec
jecxz
pop
xor
mov
dec
stos
sbb
hlt
rolb
aad
push
leave
test
mov
popf
lock
nop
mov
ret
shl
cmc
xor
hlt
push
mov
and
test
pop
cmp
fdiv
ja
push
sbb
xchg
mov
test
rcll
jmp
ss
movsl
bound
mov
mov
sarb
negb
out
push
xchg
dec
push
push
clc
sub
push
jg
insl
stos
std
outsl
xor
das
jge
les
xor
jmp
push
xor
test
aas
pop
sub
inc
pop
leave
call
cltd
aaa
xor
lret
dec
fidivrl
pop
scas
imul
dec
mov
xchg
xor
push
movsl
fnstsw
sub
sbbb
adc
sarl
sub
js
cmp
ret
enter
inc
andl
pop
xor
cmc
lea
mull
mov
in
mov
jle
fs
repz
cmp
in
sarb
test
loop
lret
or
pop
jl
fisttpll
cmc
addl
adc
mov
in
adcl
inc
xor
stos
pop
aas
js
mov
insb
cmpsl
adc
push
mov
aas
mov
mov
and
int3
dec
jl
mov
sbb
jbe
sub
mov
arpl
mov
push
jns
insl
lds
pop
or
mov
or
dec
push
fwait
sub
sarb
iret
or
mov
mov
add
mov
jge
les
cwtl
lea
lods
jmp
xchg
jne
repnz
adcl
mov
add
mov
jle
mov
fnstsw
cmp
das
out
mov
cwtl
mov
aam
or
push
das
jbe
mov
or
sbb
sub
testb
sbb
jge
jae
stos
push
nop
dec
inc
and
adc
push
fistpll
daa
mov
push
jmp
jmp
xor
not
loopne
jle
imul
outsb
scas
outsl
push
fildl
mov
mov
jno
mov
inc
push
add
cmp
jae
xor
adc
int
mov
repnz
iret
sahf
loopne
aad
stos
xchg
push
mov
cld
dec
push
jecxz
cmp
vsqrtsd
xor
cmp
xor
stos
and
fisubrs
leave
lahf
push
fcomps
push
pop
dec
stos
inc
scas
bound
adc
out
pop
cmp
scas
pop
fwait
sbb
mov
pop
sti
adc
inc
stc
xor
les
cli
xchg
jmp
repnz
adc
pushf
adc
lods
gs
int3
cmpsl
loopne
bound
and
inc
adc
in
test
mov
rcrl
sub
inc
mov
sub
testl
js
mov
mov
cmp
or
outsl
push
push
push
out
into
xor
push
and
cmp
call
dec
inc
jno
dec
mov
test
lea
adc
cmp
ret
xor
cmp
xchg
int
dec
aaa
es
idiv
jns
mov
in
movsl
xor
or
loop
mov
and
dec
adc
dec
pop
ljmp
lock
push
test
xchg
repnz
xchg
mov
push
cltd
cwtl
sub
mov
push
xchg
mov
push
pop
mov
sub
lret
repnz
pop
test
andl
fnstcw
imul
dec
adc
sbb
lds
push
or
ss
stc
fstps
das
and
dec
loop
testl
int
in
push
or
jle
sbb
xor
rcr
lahf
data16
add
adc
cmp
clc
pop
adc
test
jne
into
push
mov
xchg
in
add
in
dec
jge
aad
sub
aaa
addr16
in
imul
xchg
outsb
lcall
testb
fwait
xchg
sti
mov
sub
cli
orl
sbb
sahf
sbb
or
xor
jge
adc
xor
test
es
push
push
pop
mov
imul
fldl
sub
rclb
xchg
dec
mov
inc
or
xor
dec
sub
lret
dec
jbe
push
adc
popf
mov
xchg
dec
xor
push
sbbb
mov
in
scas
les
mov
lods
movsb
sub
in
add
fstpl
inc
xor
or
pop
xor
in
sbb
mov
pop
mov
js
shll
mov
test
lahf
sbb
outsl
loope
and
xor
cmpsb
xor
inc
xlat
movsl
data16
pop
jo
stc
push
mov
cmp
adc
mov
movsb
push
das
nop
mov
cmp
xchg
xlat
jns
in
mov
aas
jmp
dec
and
sahf
pop
inc
movsb
sahf
jb
mov
sub
arpl
jae
add
xchg
mov
xchg
add
pusha
sub
movsb
xchg
ja
or
mov
sub
mov
out
rol
xor
adc
sbb
shr
cmp
jne
inc
test
in
pop
or
pop
adc
mov
cwtl
sarb
dec
ret
js
scas
pop
dec
roll
in
add
je
ds
push
ds
push
add
push
ret
ljmp
repnz
and
in
push
dec
inc
outsb
insl
stos
rolb
inc
push
jnp
cmp
mov
insb
or
adc
test
mov
es
push
fldenv
or
test
jl
cli
cwtl
dec
jo
xor
lods
scas
mov
jecxz
jns
push
adc
cmpb
lds
xchg
iret
add
jl
loop
mov
cmp
xchg
pop
xchg
mov
fmull
mov
insb
dec
dec
loop
das
ffreep
scas
inc
dec
jb
lea
xchg
gs
es
adc
fistpl
jnp
movsb
imul
mov
movsb
inc
std
push
push
adc
jb
out
sahf
bswap
nop
push
mov
xchg
mov
push
in
dec
fisttps
test
aaa
enter
or
inc
cli
add
sti
mov
sub
lods
mov
popl
xor
adcb
stc
cmp
inc
push
and
mov
xor
ja,pn
pop
test
imul
icebp
xchg
push
mov
push
adc
fisttpl
int3
push
out
into
lea
xchg
jb
test
mov
fmulp
inc
sub
jmp
push
das
stos
add
push
or
stos
xchg
addr16
or
lods
enter
jae
es
pop
out
inc
bound
jnp
dec
in
xchg
inc
pushf
inc
xor
adc
push
stos
xchg
push
call
decb
int
inc
mov
add
xor
lret
addr16
dec
stc
cmp
outsl
popf
push
push
hlt
repz
lea
xchg
out
jnp
cmp
inc
scas
iret
cmp
xor
or
or
test
into
cs
xchg
jmp
pop
mov
xor
je
mov
dec
xor
jnp
push
inc
mov
or
into
mov
ss
adc
and
cltd
cmp
pushf
icebp
xchg
lods
mov
add
sbb
rol
js
fldl2e
outsl
cmp
mov
cmpl
or
lds
daa
cmpsb
fistpl
inc
pop
and
in
jns
mov
out
mov
or
aam
jle
inc
xor
scas
pop
hlt
sarb
fwait
mov
sbb
add
roll
push
dec
or
mov
bound
sbb
shll
in
mov
fiaddl
sbb
loop
sub
loopne
jge
and
shrl
movsb
sub
bound
push
out
inc
adc
mov
rcll
lods
xchg
or
inc
clc
sub
dec
xor
mov
loop
repz
adc
adc
je
adc
es
out
out
sub
mov
fcomps
cmpsl
jne
lds
fistl
fisubl
fwait
cmpsl
push
xlat
sbb
in
aaa
and
std
mov
shl
inc
iret
lds
push
mov
rclb
cli
scas
pop
fcoml
mov
inc
lds
into
les
lock
mov
test
call
cmp
inc
cmp
inc
add
in
loope
jmp
ret
jne
xchg
fstl
jne
cmp
cmp
xor
aas
adc
inc
dec
out
rcll
fiaddl
mov
mov
aam
xchg
sub
sti
cmp
int3
subl
test
push
jbe
inc
fcomps
pminsw
aaa
cmp
negb
sub
xchg
dec
jl
ss
in
loop
pop
jnp
cmp
js
xchg
enter
or
cmp
ljmp
lcall
mov
or
mov
movsb
gs
cld
pop
adc
or
sub
sbb
cmpsb
adc
out
jl,pn
notl
push
add
xlat
jae
sub
cli
mov
mov
xor
xor
inc
pop
mov
add
mov
das
mov
add
int3
dec
cld
mov
jb
call
mov
clc
testb
enter
sub
sub
add
mov
sbb
pop
push
std
xlat
std
aaa
xchg
or
inc
dec
mov
jb
push
test
pop
sbb
insb
iret
or
dec
stos
pop
adc
movsl
cs
xor
movsl
call
lahf
inc
mov
lea
pop
or
cld
and
ljmp
sbb
fisubrs
jle
nop
adc
gs
mov
add
test
nop
add
and
and
cmp
loopne
ja
pop
dec
push
fcoms
xor
pop
jle
adc
push
or
inc
imulb
movsb
adc
xlat
dec
mov
jg
jge
lahf
arpl
cld
and
mov
out
test
push
arpl
mov
test
or
pop
mov
pop
in
imul
cmp
adc
jp
jno
or
cmp
mov
popf
bound
test
jl
in
loope
leave
sbb
icebp
pop
test
jb
fidivrl
mov
test
jge
lret
stc
xchg
out
lock
rclb
cmp
sub
jnp
aam
clc
popf
dec
ljmp
inc
pop
mov
inc
sbb
push
test
shrl
mov
mov
rcl
xchg
cmpsl
cmp
sbb
sub
inc
mov
sub
dec
jbe
popf
fs
jbe
mov
jno
dec
pmuludq
outsb
push
test
lret
xchg
fldcw
inc
mov
dec
adc
inc
fadds
pop
subl
lea
cltd
xchg
and
mov
add
mov
out
cmp
dec
push
ficoml
and
push
adc
sub
inc
mov
push
cmp
lea
mov
pop
bound
call
jecxz
mov
icebp
jmp
fsubl
jmp
repz
push
add
jg
out
pop
xchg
inc
cld
ljmp
push
jle
sti
data16
sub
subl
cmpsb
sub
mov
cltd
stc
jp
mulb
push
mov
or
cld
aaa
scas
imul
addr16
mov
pop
icebp
jne
xchg
jb
rclb
xchg
in
out
or
mov
fisubrs
in
or
jecxz
adc
inc
imull
push
mov
vpaddusb
aaa
ds
into
mov
jg
and
fwait
cmpb
ret
xor
in
xlat
arpl
push
pop
ret
sbb
pop
mov
std
faddl
rcrl
int3
add
pop
cmpsl
mov
das
sbb
sbb
mov
xor
pop
js
mov
in
data16
imul
push
lcall
ja
jno
or
pop
push
jp
fnstenv
push
inc
dec
ss
cli
shlb
mov
jb
xchg
es
cwtl
mov
inc
fwait
mov
add
je
jno
inc
jp
sub
dec
or
push
xchg
mov
stos
test
orl
ds
rolb
inc
jnp
inc
xchg
fs
xchg
inc
mov
daa
xchg
dec
in
in
arpl
inc
jmp
pop
cmc
push
cmp
or
mov
cmp
mov
addr16
mov
cmpsl
xchg
mov
out
push
push
lods
sub
gs
pop
insb
jae,pn
addr16
leave
inc
sub
inc
xor
or
rorb
add
jb
sub
out
mov
imul
adc
fwait
rclb
pop
popa
bound
push
lret
inc
movl
inc
push
aam
shlb
enter
mov
or
xlat
inc
loope
lret
sar
sub
cmp
sub
cltd
add
and
in
cmp
into
sub
lcall
cltd
mov
push
mov
push
les
sbb
outsb
into
ret
push
fnstsw
ret
jmp
cmpsb
test
jecxz
stc
flds
pop
push
xchg
lret
adc
inc
outsl
cmpsb
xchg
cli
fidivs
dec
xchg
mov
mov
mov
fs
jg
xchg
inc
cli
in
scas
jno
adc
sbb
pop
xor
mov
xor
fdivr
stc
daa
xchg
cmp
clc
xlat
jg
xorb
push
mov
lods
adc
and
int3
sub
sbb
movl
add
hlt
adc
dec
mov
or
loope
jmp
add
cmp
jno
fwait
js
ds
xchg
and
shr
loopne
sub
xchg
lods
xor
jp
push
fiaddl
xor
jg
dec
clc
repnz
pop
mov
imul
lret
jl
inc
es
repz
mov
push
adc
fwait
rolb
or
mov
mov
je
adcb
xchg
add
outsb
or
add
jmp
cld
subl
pop
outsb
sbb
push
xor
das
rcrl
fsubr
movsl
shl
imul
dec
inc
inc
scas
mov
and
jb
push
inc
int
and
cs
cmc
push
iret
aas
push
pop
sub
pusha
loopne
mov
mov
mov
call
mov
pop
pop
sub
ja
fcoms
xchg
sub
sbb
outsl
xor
adc
xorb
cmpl
dec
mov
les
popf
dec
jp
jmp
pop
xor
mov
pop
sub
pop
jb
push
cmp
mov
stc
dec
cld
gs
push
addr16
xchg
mov
dec
lods
test
mov
mov
in
and
cmp
in
jne
cmpsb
ret
aad
ds
out
inc
jmp
negb
mov
rcrb
push
fs
into
repz
ret
dec
jp
leave
popa
out
decl
jbe
sub
add
add
push
rorb
loop
jmp
jg
adc
test
imull
push
mov
int
add
stos
adc
mov
and
sarb
adc
das
incl
pop
mov
mov
push
aaa
loop
push
enter
push
add
pop
or
add
movb
mov
iret
mov
and
repnz
jge
pop
xor
pop
out
and
cmp
cs
outsl
in
sbb
xchg
inc
das
popf
xchg
lret
jecxz
push
inc
jbe
push
pop
lcall
jmp
jl
and
mov
mov
mov
sbb
scas
jg
mov
pop
sti
cmc
mov
and
aad
xor
maskmovq
imull
or
mov
mov
push
mov
jecxz
iret
jnp
jne
or
mov
jl
jg
fstpt
lds
add
lret
ror
out
xchg
cmp
gs
mov
jl
mov
sub
mov
stc
cltd
fisttpl
xor
sub
mov
popa
pop
adc
or
in
inc
add
fildl
cmp
aas
xor
push
mov
mov
cltd
adc
cmp
or
mov
ja
add
sbb
mov
and
icebp
ds
xor
cmp
sbb
dec
push
add
xchg
movsb
aas
push
adc
fists
add
and
bound
xchg
push
xor
dec
push
loopne
rcrb
imul
push
sahf
mov
outsl
xor
testl
ljmp
sub
je
xchg
arpl
xchg
js
or
mov
loopne
push
xchg
push
insb
loopne
mov
sub
add
push
daa
out
add
lods
sbb
pop
stos
push
mov
xor
adc
mov
and
sbb
flds
sbb
pop
cmc
push
repz
fstps
push
lods
xor
push
or
pop
cmp
cli
jle
scas
bnd
cmp
addr16
movsl
sti
in
xchg
rolb
test
adc
or
inc
or
push
inc
aam
in
je
mov
jp
jno
imul
in
scas
mov
test
push
inc
loopne
cmp
daa
movsb
mov
sbb
jle
pop
shll
enter
add
cmp
stc
mov
popa
cmp
movsl
int3
lret
push
xor
sub
setnp
in
cmpsb
cmp
fsubrl
shlb
pop
jb
pop
popa
cld
das
ret
bound
daa
or
test
mov
stc
in
push
fisttps
bound
out
xor
stos
cmc
jge
sbb
fiadds
test
cli
iret
in
jmp
mov
lret
jmp
dec
cmp
cmp
es
cmpsb
movsb
xchg
into
push
int3
jb
loope
sub
in
pop
or
adc
inc
sub
gs
mov
push
lcall
adc
push
jb
into
sbb
in
test
popf
fldl
mov
jp
mov
sub
lret
std
mov
cmp
jno
insb
rcrl
add
jbe
movsb
lret
subl
dec
imul
push
rcrl
xor
mov
aad
outsb
pop
cmpsb
push
orl
dec
xchg
test
fs
add
in
aad
mov
xchg
push
mov
fxam
insl
roll
adc
aam
xchg
in
xchg
add
ljmp
fsub
push
xchg
dec
imul
loop
fyl2x
mov
mov
out
mov
lcall
sub
lahf
and
into
lds
ljmp
mov
cmpsl
sub
imull
jnp
xchg
movsb
js
jge
sti
and
or
and
push
dec
fildll
sub
xchg
pop
popa
xchg
push
push
mov
insl
push
std
xchg
and
jns
lret
dec
jmp
jno
outsl
andb
and
dec
repz
pop
mov
int3
rol
aas
shrb
mov
xor
imul
push
pop
jo
pop
scas
add
stos
aam
mov
mov
std
cs
pushf
cmpsl
subb
cmp
clc
or
stos
lret
xchg
popf
jne
push
subb
cmp
xor
imul
ljmp
dec
fldt
test
insl
jecxz
ret
xchg
pop
inc
jno
push
fistps
andl
mov
aaa
negl
test
mov
inc
push
jns
xor
pop
repnz
lds
ret
test
mov
test
push
mov
dec
stc
movsl
jecxz
xor
push
inc
jmp
es
icebp
cmp
and
inc
pop
mov
sub
sti
or
pop
es
std
sbb
test
fdivrl
push
mov
bnd
add
mov
test
mov
cmc
ror
mov
jp
cwtl
sbb
mov
xchg
aam
fstpt
pusha
xchg
in
lret
cld
sarb
and
ja
adc
mov
out
and
adc
jns
push
xchg
sub
mov
pop
or
adc
fcoml
es
push
cltd
mov
push
lock
ret
clc
sub
lret
xchg
jno
sbb
popf
lea
daa
and
xchg
cmp
movsb
mov
fsts
push
cmp
popa
xchg
cmpb
xor
inc
cmp
push
hlt
ret
or
lcall
mov
xchg
jl
push
lods
insb
xchg
rcl
std
and
cmc
sarb
mov
ljmp
jb
mov
adc
out
mov
cmp
arpl
xlat
aas
cmpsl
daa
or
jns
add
cli
das
stos
rol
testl
mov
mov
insl
dec
adc
inc
rorb
sbb
jecxz
jbe
mov
and
push
shlb
dec
jle
cmp
xchg
pop
and
rcrl
pusha
jns
enter
test
push
iret
mov
cwtl
cld
dec
jo
add
mov
insl
data16
and
ja
insb
arpl
inc
adc
pop
inc
inc
mov
and
inc
mov
enter
rcll
mov
mov
push
push
adc
dec
in
fld
daa
cmp
mov
sbbb
iret
jmp
mov
andl
cmpsl
in
ss
or
mov
stos
in
pop
in
out
xor
push
and
lea
mov
les
lea
lock
push
jge
popf
inc
dec
jmp
inc
es
inc
jae
movsb
ja
adc
repnz
loopne
pop
icebp
inc
pusha
adc
cmc
sbb
push
mov
pop
int3
das
test
es
xchg
ret
ljmp
je
clc
lea
mov
mov
pop
int3
gs
push
mov
push
ja
pop
repnz
mov
pop
imul
popa
lock
mov
pop
fiaddl
sub
jne
sub
int3
and
shlb
fdivrs
or
jb
jge
cmp
sarl
push
sbbl
ret
push
xchg
add
in
mov
test
sbb
inc
push
dec
movb
aaa
inc
insb
mov
jge
jle
push
mov
mov
shlb
mov
dec
ds
fwait
push
pop
adc
fisttpll
jae
mov
adc
xchg
stos
push
xchg
sub
cli
insb
jns
sub
enter
ljmp
pop
xor
xchg
jmp
std
rolb
push
push
mov
ljmp
and
sbb
pop
mov
jl
movsb
test
in
mov
fcompl
jecxz
inc
push
mov
fnstsw
pop
jns,pn
jge
andl
and
shr
iret
test
das
sub
out
nop
test
jge
pop
pop
push
xchg
mov
and
mov
mov
out
cs
imul
or
out
cmp
jbe
nop
pop
and
sub
ror
test
inc
sbb
adc
clc
daa
out
inc
jl
shr
orl
and
aad
int
sub
sub
aad
std
push
mov
data16
pop
dec
xor
xorl
movsl
lea
and
mov
test
xchg
or
and
sbb
imul
dec
stc
cmp
push
pop
int
insb
push
mov
js
imul
xor
xchg
pushf
push
or
jp
lcall
ss
cmp
xchg
add
jge
fdivl
inc
pop
or
inc
sbb
add
cmpps
js
sub
and
add
mov
inc
jle
cmpb
fwait
or
imul
add
xor
cmpb
mov
mov
gs
fwait
cmp
int
jecxz
rcrl
ja
ss
xlat
dec
sbb
addb
cmp
dec
ret
xchg
test
nop
mov
scas
repz
xchg
cmp
mov
gs
rcll
ret
lods
fnstenv
or
lahf
neg
pop
xlat
lahf
test
hlt
ds
rol
add
loopne
cmpsl
jb
popf
push
daa
out
mov
out
dec
leave
or
sub
dec
jae
cmc
insb
push
inc
sbb
sahf
mov
je
jns
push
es
stc
or
popa
push
sar
mov
pop
push
inc
fisttps
push
pushl
mov
ret
push
cmp
sti
lds
sbb
loope
jmp
xchg
std
sub
xor
xor
cmp
imul
imul
jo
movsl
std
divb
xor
push
cmpsb
adc
rorl
les
cmp
mov
and
into
inc
mov
mov
pop
xor
mov
jle
adc
mov
movsb
lock
jne
leave
ret
mov
fdivrp
and
mov
jae
dec
jae
stc
jne
adc
pusha
xchg
insl
imul
scas
pop
or
fs
mov
fbstp
shrl
nop
push
sbb
mov
cs
popf
pop
adc
repz
mov
sbb
cs
ds
data16
xor
xchg
pop
jle
test
cmp
fwait
sub
loopne
push
cmpsl
stos
in
push
add
je
cmp
aam
insl
movb
push
ja
lcall
xchg
adc
fdivrs
add
shl
and
lahf
fwait
mov
or
cmpsl
shl
and
push
and
repz
xorl
cmp
jg
int3
xor
shl
ret
cwtl
mulb
out
or
jmp
test
mov
clc
mov
pop
cmova
in
ljmp
mov
enter
cmp
push
cltd
popf
clc
mov
aam
mov
xchg
jno
jae
pop
cmp
add
test
mov
adc
dec
js
cmpb
cld
lods
das
add
shll
dec
pop
add
idivl
scas
pop
inc
rcr
cmp
lods
popl
arpl
sbb
ret
sbb
testl
sti
aam
pop
push
das
jne
xchg
inc
xchg
test
loop
popf
adc
ror
es
test
cwtl
jp
nop
xchg
pop
sti
cmpsl
shl
push
mov
lea
incb
and
sbb
inc
fsubs
mov
stos
pop
das
pop
dec
lds
mov
cmp
cmp
rolb
pop
lea
sbb
std
xchg
movzbl
shll
mov
leave
pop
inc
and
cs
jl
adc
je
mov
push
mov
test
push
or
rcrb
es
or
psrad
xchg
push
mov
test
js
mov
leave
sbb
int
ret
aas
ficoms
sub
mov
xchg
jbe
cli
enter
push
sbbl
adc
pop
mov
adc
push
test
sbb
xor
mov
fisttpll
in
pop
lahf
fs
mov
scas
insb
jo
ret
imul
mov
fldcw
sub
ja
jmp
push
dec
xor
notb
mov
mov
scas
cmp
push
jl
adc
nop
fsubs
pusha
shrl
jg
cmp
inc
loope
ret
and
and
push
mov
enter
test
xor
test
stos
insl
pop
enter
insl
enter
xor
pop
lret
lcall
cmp
dec
incb
dec
mov
pop
adc
bound
call
rcrl
in
enter
fnstsw
sub
jle
xor
push
cmpsl
stos
add
ret
jecxz
mov
adc
lods
add
scas
in
out
int
dec
ds
lds
push
fcoml
popa
inc
mov
imul
push
fnsave
clc
mov
popf
out
lret
roll
shlb
pop
xchg
sub
adc
and
push
outsb
pushf
mov
jae
jp
lret
insb
jo
xlat
in
push
mov
cmpsb
mov
test
lret
push
push
nop
mov
mov
xor
mov
xchg
lret
mov
rolb
mov
insl
sub
das
aam
add
and
sub
dec
xor
mov
sarl
pop
add
int
mov
out
add
out
jmp
insl
rcr
dec
std
mov
xchg
mov
lcall
imul
lds
push
mov
ljmp
inc
jl
add
jns
push
jmp
cmc
enter
push
jecxz
outsl
lds
xor
cmc
sbb
xchg
push
xchg
inc
fisttps
aad
mov
pop
add
es
lret
out
rcll
jbe
rcrl
cmpsl
test
ret
xchg
ja
in
test
pop
inc
in
jb
nop
in
insl
jle
ret
xor
inc
dec
xchg
rcrb
shrb
rorl
mov
inc
cmp
daa
sub
mov
mov
pusha
decl
fnstcw
cmc
xchg
push
jl
sub
push
pop
push
sbb
mov
fsubrs
push
test
lahf
inc
notl
rcrl
enter
clc
mov
addr16
gs
mov
push
lods
icebp
cmp
fnstenv
imul
hlt
int3
call
xor
fcmovu
stos
call
mov
es
mov
mov
ret
adc
daa
filds
loop
mov
dec
or
int3
shl
jle
push
dec
loope
jle
jae
inc
ds
in
mov
push
hlt
or
daa
lock
fldcw
xchg
lcall
decl
sub
loope
sbb
mov
xchg
mov
inc
jbe
lret
jnp
mov
pop
enter
and
stos
test
inc
insb
or
push
sahf
mov
and
pop
ja
push
jno
mov
pop
pop
xchg
les
pop
es
clc
xchg
push
and
adc
shlb
loope
cmp
std
pushl
dec
leave
lret
shlb
push
add
sbb
dec
add
fildll
mov
std
fstps
repnz
dec
lods
sbb
in
pop
push
fimull
les
nop
add
mov
push
push
xchg
pop
sub
dec
test
xchg
adc
out
aaa
mov
adc
into
cmpsl
and
push
dec
pop
sbb
ficompl
insl
loop
push
out
orl
inc
hlt
adc
push
cmp
add
and
jecxz
pop
or
mov
fwait
cmc
dec
pop
cltd
lods
jl
sbb
cmp
mov
out
mov
jae
icebp
and
les
ljmp
cmc
sub
test
icebp
cwtl
pop
testl
dec
sbb
mov
pop
scas
ja
mov
add
xchg
xor
xchg
push
add
addr16
or
imull
loope
xor
mov
cmp
cmpsb
insb
ja
jle
push
pop
xlat
lret
cmp
lahf
sti
sub
sbb
hlt
or
mov
jp
lods
dec
add
mov
fsubrs
or
push
pop
jmp
xchg
mov
imul
cmp
int
dec
fdiv
sub
mov
push
int3
sub
adcl
or
aaa
popf
adc
loope
mov
cmp
notl
stos
push
sbb
mov
jnp
mov
dec
bound
mov
xchg
lds
orl
stos
pop
js
cmp
xor
mov
jp
out
adc
fwait
sbb
lret
dec
movsl
dec
jns
mov
stos
jge
xchg
jg
mov
jl
arpl
ss
nop
or
fwait
outsl
sub
sahf
inc
mov
sub
mov
cli
insl
lcall
clc
xchg
pop
adc
inc
sarl
sbb
ja
out
xchg
jb
jb
jnp
decl
mov
cmp
adc
inc
push
nop
lahf
sub
ds
cmp
cld
es
lds
mov
push
push
pop
xor
addr16
outsl
lret
rclb
lods
jp
mov
data16
ja
adc
icebp
pusha
inc
inc
adc
lret
lahf
mulb
lcall
loope
or
iret
inc
mov
push
shr
xor
or
cmpsl
mov
stos
dec
call
jle
jl
sbb
mov
inc
add
pusha
xor
into
cli
dec
jns
rcl
adc
or
jo
and
movsb
cmpsb
cmp
lock
gs
inc
xchg
inc
adcb
sbb
xchg
es
adc
scas
mov
pop
shlb
gs
out
xchg
jmp
sub
cmp
filds
cmc
and
daa
add
mov
mov
iret
mov
daa
mov
add
shlb
mov
or
subb
orl
scas
test
fdivrl
jae
fstpt
repz
sahf
sbb
cmpsl
mov
sbb
cmp
bound
js
in
mov
sub
loope
jnp
or
pop
xchg
inc
mov
outsb
add
lods
fxch
mov
leave
sub
rcrb
adc
popf
mov
rorl
xchg
into
mov
jne
in
int
jmp
int3
lods
arpl
push
rcrl
daa
sub
or
insb
in
sub
out
jne
xor
loope
stc
push
scas
jl,pn
sub
sarl
jo
jp
xchg
push
inc
jmp
mov
or
cmp
mov
cmpb
mov
in
fdivs
imul
subb
fwait
in
and
inc
adc
push
pop
mov
sbb
jmp
stos
int
pushf
rolb
xchg
or
xor
inc
lock
sarl
mov
jne
loope
repz
xlat
paddw
pop
inc
pop
mov
xor
mov
movsl
and
cmp
lock
mov
inc
xor
test
pushf
inc
or
jne
sub
pop
mov
sub
jp
mov
scas
ljmp
cmp
nopl
jo
mov
loopne
jbe
mov
mov
xor
lea
stos
mov
ss
ret
cmp
push
cld
or
fs
imul
shr
fucomip
and
push
xorl
jle
lret
call
add
mov
cmp
pop
sub
jbe
xchg
pop
imul
test
sbb
cli
mov
cltd
hlt
shll
leave
fistl
outsb
enter
sbb
sbb
scas
jge
iret
sbb
jae
aad
jge
mov
test
push
sarl
jle
call
add
incb
mov
xor
sub
icebp
jns
in
in
dec
adc
out
cmp
xchg
jns
pop
scas
mov
jecxz
pop
loop
test
adc
push
adc
xchg
xorl
xchg
jecxz
mov
jbe
mov
lret
cmp
lods
pop
mov
mov
adcl
pop
inc
xlat
and
xchg
fldl
shl
and
rep
push
sub
dec
int3
lds
xor
test
loope
lahf
in
std
arpl
outsb
cmp
cs
mov
mov
sbb
std
pusha
push
addb
scas
shrl
xlat
lahf
fs
pop
dec
test
xchg
out
xchg
xchg
adc
cmp
in
push
push
add
and
test
nop
add
scas
out
fs
inc
pop
lea
push
sbbb
aaa
cltd
adc
lods
jno
lret
jmp
jl
add
fsubrl
push
pop
lahf
dec
mov
dec
and
sbb
jmp
jo
negb
xor
outsl
xor
add
hlt
stc
rclb
lods
fs
ret
outsl
jbe
sbb
rorb
push
or
fsubs
add
sub
div
loop
sbb
or
es
lea
pop
pop
jnp
pushf
out
or
shrl
pop
xchg
push
or
cmp
ss
inc
cld
rol
cmp
and
push
push
lret
ret
test
das
xor
insb
inc
imul
and
mov
jmp
or
mov
cmp
push
mov
pop
push
pop
inc
pushf
test
pop
gs
sbb
loop
inc
mov
daa
xrelease
add
jnp
sbb
inc
lds
in
std
test
cs
test
lds
pop
aad
std
push
lcall
cmp
push
pusha
push
xlat
cmpsl
xlat
cmpsl
sbb
cmp
sub
js
sub
fs
fcoml
mov
xor
es
lea
dec
xchg
imul
fldenv
jae
out
ss
out
mov
xor
lods
int3
dec
mov
cmpsl
je
movsl
push
mov
stc
addb
jge
bound
sub
popa
and
test
mov
outsb
add
in
inc
mov
jmp
mov
cmp
nop
sub
lahf
fdivs
or
pop
clc
insb
aaa
ret
mov
pop
mov
adc
mov
lods
xor
mov
pop
fucomip
addps
cmp
mov
outsl
xchg
mov
js
xor
xor
jle
es
pop
mov
push
jnp
xchg
ss
out
dec
cmc
mov
iret
mov
or
pushf
xchg
push
jle
or
in
xchg
pop
xchg
decl
sub
mov
cli
inc
inc
loop
pop
cmc
loope
das
mov
lods
stos
popf
arpl
or
out
jp
scas
int
or
xchg
subb
subl
and
loop
ret
nop
mov
stos
dec
xchg
leave
std
inc
test
inc
cmp
stc
push
int3
cmp
xchg
cmp
adc
adc
or
rorl
out
fsubrs
pop
bound
mov
clc
pop
or
inc
jnp
in
jg
xchg
call
imul
das
test
sarl
jl
and
xchg
test
cwtl
out
inc
es
into
add
xchg
repz
mov
das
and
or
movsl
pop
outsl
sub
push
rorl
adc
and
jg
cmc
jg
jecxz
jle
xor
mov
xor
xchg
or
inc
push
test
inc
adc
pop
sub
lods
std
arpl
xchg
rcll
ljmp
pop
add
out
enter
addr16
nop
in
fnsave
adc
cmc
mov
push
xchg
sarl
jmp
mov
xchg
or
and
popf
fistps
ja
movsl
sbb
add
lock
dec
insb
xlat
inc
popf
sub
cmc
data16
xor
jl
clc
shrl
pop
movsb
call
call
xchg
cmp
dec
daa
notl
inc
add
mov
pop
orb
or
pop
mov
scas
add
pop
and
jo
mov
inc
scas
test
inc
mov
stos
adc
vmread
out
cwtl
enter
inc
dec
pop
loop
out
mov
add
jg
mov
shr
mov
sub
dec
mov
pop
adc
inc
ds
inc
scas
scas
int3
mov
push
aaa
lret
aam
in
pop
mov
scas
mov
mov
fiaddl
mov
test
out
lahf
adc
pop
cmp
sbb
adc
lods
sub
xor
adc
xchg
inc
stc
and
testl
jne
movsb
pushf
imul
sahf
xchg
jns
imul
cltd
mov
or
imul
idivb
pop
sbb
rorb
push
mov
jbe
or
pop
jo
stc
out
clc
stc
sub
mov
push
xor
or
fwait
add
stc
sub
repnz
adc
mov
ljmp
xor
jg
jl
jg
mov
movsb
or
icebp
xchg
mov
xchg
dec
mov
add
iret
jb
dec
and
popw
mov
loope
sub
jge
pop
add
outsb
mov
pop
in
popf
cmc
xchg
jle
mov
inc
addr16
hlt
in
mov
cmp
cmpsb
mov
cli
or
arpl
loope
js
nop
xchg
icebp
scas
addr16
dec
test
jecxz
aaa
lahf
cmp
add
pop
lahf
pop
mov
rclb
cmpsb
sub
jmp
jns
inc
adc
fistl
mov
test
sub
jno
rol
mov
push
and
xor
jle
and
imul
mov
ja
mov
adc
mov
fnsave
imul
fs
add
call
or
cmp
xor
orl
xor
inc
cmp
rorb
jnp
cmpsb
xor
mov
shlb
arpl
xchg
hlt
xchg
movsb
in
loope
mov
gs
cmpsb
lods
xlat
mov
ja
test
inc
inc
sti
inc
insl
mov
and
sub
imul
inc
cmovp
lret
push
fs
in
push
stc
push
dec
mov
int3
inc
je
or
push
xchg
mov
xchg
je
xchg
repz
jns
inc
xchg
sub
cmpsb
and
cmp
sub
jo
rclb
lcall
xchg
test
sbb
repnz
into
lock
jns
lret
xorb
ljmp
cmp
mov
sbb
push
ficoml
add
rcll
lock
jno
pop
jp
daa
clc
jbe
sbb
ret
xor
repz
xor
das
sub
cmp
loopne
imul
adc
outsb
pop
and
jp
sbb
cmp
ljmp
iret
or
int
fcompp
scas
and
cmp
out
pop
stc
pop
dec
shll
rcll
add
jg
iret
outsb
les
mov
idivl
push
cmp
fsubl
pusha
jg
fwait
ljmp
pop
jnp
addl
inc
xor
ficoms
es
cmp
sbb
and
sbb
adc
jmp
sbb
jne
and
movsl
jl
mov
fsubr
or
lock
adc
dec
pop
sbb
mov
outsb
cli
stc
add
sub
mov
rep
lock
pop
sbb
cld
aad
jge
jecxz
push
and
lahf
sbb
or
popa
push
out
sbb
loopne
mov
rclb
mov
loop
mov
mov
popa
push
das
jecxz
sbb
cli
aas
dec
cmpsb
fisubs
sarl
call
xor
push
dec
paddsb
mov
sbb
mov
push
dec
mov
test
shll
pushf
mov
shlb
icebp
cmp
adc
jmp
xchg
ss
leave
mov
xchg
roll
mov
mov
xchg
lret
loop
int
adc
cld
pop
pop
ret
mov
movsl
data16
pop
jle
shll
cmp
inc
ss
add
mov
loop
inc
loope
in
sbb
testb
std
push
dec
bound
jecxz
popa
mov
dec
jno
gs
xlat
leave
pusha
jge
lret
dec
js
mov
jne
cltd
mov
je
mov
std
out
fstl
push
mov
pop
int3
cwtl
loopne
clc
popa
pop
hlt
xchg
jae
mov
lea
div
test
call
ret
sahf
hlt
mov
cs
scas
sub
outsl
addl
je
fadd
stc
xchg
ret
pop
xchg
lds
lock
loopne
jg
icebp
adc
dec
mov
jl
or
fstpt
movsb
adc
les
adc
out
or
jle
nop
inc
test
mov
lret
aam
push
pusha
xchg
cld
mov
jge
xor
data16
jae
arpl
pop
mov
mov
dec
cmp
and
pop
bound
imul
dec
lock
mov
out
dec
mov
xchg
fistpl
sbb
cmpsl
mov
sbb
outsb
lahf
push
mov
addr16
repnz
dec
pop
sahf
arpl
bound
popf
pop
xchg
rclb
and
dec
mov
arpl
inc
push
jo
sub
lock
mov
outsl
xchg
mov
neg
test
pop
rcll
sbb
or
mov
call
data16
jl
mov
inc
in
push
fistpl
cmp
and
push
lret
sbb
fwait
sbb
sub
inc
cwtl
dec
xchg
enter
jno
push
fs
ljmp
sbb
pop
aad
adc
shlb
add
cmp
dec
movsb
das
push
adc
sub
ds
test
jbe
push
arpl
and
dec
xor
rol
shlb
insb
imul
and
je
sarb
jns
pop
enter
dec
les
imul
mov
sub
iret
cmp
mov
in
cltd
mov
gs
add
leave
or
push
jle
cmp
orb
test
testl
cmpsl
mov
out
iret
mov
adc
in
pop
and
movsb
pop
icebp
int
popf
cmp
xlat
fsts
xor
addr16
dec
sti
and
adc
stc
in
jnp
jns
mov
pop
cmp
pushf
out
imul
push
dec
xor
xchg
adc
and
mov
xor
mov
fidivs
xor
xchg
push
and
inc
jmp
dec
cmp
rcr
pop
cld
dec
jl
in
inc
mov
fwait
push
loop
cli
dec
scas
lods
sub
xlat
cli
and
imul
test
outsb
sbb
or
mov
mov
push
pop
test
dec
pop
das
addr16
aas
push
sub
xor
test
jno
movsb
fdivrs
fs
xchg
push
icebp
arpl
lock
getsec
cmp
push
jne
cmp
inc
cmc
dec
mov
in
inc
pop
sub
mov
out
lea
xor
fdivrs
inc
pop
int3
cmp
cld
push
mov
popf
sub
int
lahf
jge
lods
push
loopne
js
sbb
mov
dec
xchg
or
pop
sub
adc
aaa
mov
mov
das
out
mov
xchg
push
dec
push
sub
or
jmp
pop
cwtl
cltd
addr16
loopne
daa
sbb
mov
insl
add
popl
add
or
xchg
pop
dec
out
enter
add
and
dec
sub
insb
je
pop
popa
movsb
xchg
dec
pop
add
andl
lret
pop
fstl
mov
loopne
mov
jg
aad
subb
cli
cmc
scas
cltd
pop
in
push
fcoms
movsb
out
mov
adc
mov
cltd
xor
bound
pop
stos
pop
mov
in
lods
mov
pop
int
pop
fistpl
lret
mov
xor
mov
xchg
mov
mov
pop
neg
and
stos
sub
mov
xchg
push
or
jae
ss
mov
repnz
je
mov
push
addr16
insl
or
out
sti
test
call
add
mov
outsl
pop
sbb
xchg
addr16
push
dec
pop
xchg
mov
repnz
push
ret
xchg
sbb
cli
xchg
in
ret
xchg
or
pushf
loopne
int3
pop
xlat
mov
mov
sbb
mov
push
jg
xchg
aad
xorl
dec
gs
jp
loop
ret
adc
xor
mov
adc
cmp
cltd
push
jmp
or
and
insl
fisubrl
sub
add
mov
arpl
das
out
sbb
mov
push
int
mov
test
push
inc
ds
xlat
lcall
sub
adc
pop
call
ds
cli
jb
sub
jns
jge
sbb
pop
xchg
cwtl
sahf
stos
cmc
js
addb
dec
push
push
rclb
int
xor
xchg
dec
lcall
sub
sub
mov
mov
cli
in
jns
inc
ret
cmp
and
sub
push
lret
sahf
rcll
mov
add
xor
cmp
popf
xlat
stc
dec
inc
lcall
mov
dec
sub
pop
mov
mov
mov
dec
jbe
shlb
add
xor
jmp
shrl
sbb
or
mov
loopne
xchg
cltd
push
int3
into
call
push
push
call
xchg
imul
insl
adc
add
popf
repnz
aad
insl
iret
jns
ret
sarl
adc
mul
test
aas
jmp
cld
jbe
mov
cmp
push
xchg
in
stc
and
cli
test
xchg
call
dec
decl
mov
pop
push
mov
stc
adc
inc
arpl
fldl
enter
sahf
subl
das
addr16
fcom
scas
sbb
mov
sub
mov
aam
or
cmc
out
adc
push
mov
scas
pop
mov
dec
and
adc
push
in
inc
outsl
ds
xchg
lods
jecxz
cmc
aas
sahf
loopne
cli
lret
xchg
dec
lock
nop
push
daa
idivb
or
je,pn
in
jmp
sbb
cmp
rol
adcb
cmp
dec
sub
jo
sahf
push
pop
xor
dec
jecxz
mov
jbe
not
stc
push
push
shl
dec
mov
inc
mov
jecxz
mov
jp
out
movsb
push
rol
mov
cmp
jge
xchg
cli
pusha
pop
pop
rorb
ss
or
mov
pushf
in
push
lods
or
sub
cwtl
insl
pop
sbb
es
hlt
movsl
enter
loopne
dec
sub
cmp
mov
mov
jo
icebp
insl
mov
pop
das
or
fnsave
push
cmc
dec
daa
mov
xchg
pushf
subb
mov
lret
jb
lahf
shr
iret
cs
add
testb
lret
icebp
adc
ljmp
adc
jb
mov
adc
movsb
pop
testl
cs
lock
loop
mull
inc
push
fs
out
pop
test
imul
xchg
xor
push
pop
sbbb
or
popf
aam
inc
cmpsb
mov
cs
add
dec
and
out
jns
xor
mov
mov
and
mov
push
shlb
lret
les
testb
rclb
cld
out
daa
clc
jno
faddp
repz
push
cmpsl
mov
or
lods
sar
fldt
xlat
or
cld
cmp
daa
ss
roll
adc
mov
outsb
adc
xlat
popa
divl
adc
call
push
js
push
mov
fcmovb
iret
sbb
movsl
fidivrs
leave
xchg
add
test
lret
cld
filds
cmp
lret
fisttps
jp
mov
and
adc
popf
and
sub
rcrl
sbb
outsl
sahf
out
ret
mov
pop
ret
push
and
mov
inc
cmpsl
aas
bndldx
add
lahf
dec
xchg
shlb
in
and
xor
pop
xor
das
cli
outsl
jb
aas
gs
cmp
nop
cmpsl
shrb
int
xchg
insb
int
mov
push
or
sbb
and
xchg
mov
cwtl
xchg
fsubrl
mov
xor
es
repz
inc
sbb
mov
sub
repz
jecxz
mov
popa
sub
aaa
aad
jge
fyl2x
rcr
push
call
xor
push
or
sbb
adc
out
js
pop
jb
xchg
cmp
inc
cmpsl
mov
jle
inc
mov
aam
mov
xchg
mov
add
mov
fsubrs
mov
mov
xchg
test
or
icebp
xor
or
cmpb
into
xchg
sbb
cmp
add
in
scas
pop
in
xchg
or
lds
jb
mov
inc
lea
fst
or
aam
sub
test
sub
push
cwtl
repz
adc
xlat
lea
xorb
mov
test
pop
xchg
mov
mov
imul
mov
or
lea
repnz
lods
adc
jle
xor
cmp
xor
adc
jecxz
xchg
xchg
mov
pop
aam
mov
sbb
mov
aam
adc
flds
andl
adc
xor
add
inc
xchg
ja
push
bound
lea
data16
repnz
shll
lods
xchg
mov
sbb
lods
dec
shrb
push
or
lcall
test
mov
jmp
decb
cmp
cmpsl
push
in
and
cs
adc
mov
inc
add
mov
push
or
pop
and
xor
pop
sbb
ret
stc
or
and
pop
imul
push
dec
scas
push
rorl
lock
out
mov
xchg
mov
sti
dec
and
incl
jg
call
add
mov
and
add
fiaddl
sub
jbe
int3
mov
aaa
loope
jb
scas
stos
popa
pop
and
xchg
ljmp
out
test
and
lcall
adc
insl
pop
sbb
xor
inc
pop
in
rorb
mov
xchg
lcall
push
xor
push
or
jbe
add
stos
inc
pop
mov
push
mov
loopne
cwtl
scas
test
and
mov
push
or
push
add
addr16
pop
test
sub
bound
shrb
jbe
les
icebp
pop
in
addb
and
mov
pop
or
mov
loop
xchg
leave
negl
mov
push
loopne
jp
dec
ja
cs
mov
xchg
lret
inc
add
mov
bound
xlat
imul
es
lods
scas
sub
push
lods
rorb
jne
aam
and
cltd
push
cmp
push
dec
and
push
pusha
mov
test
push
dec
jle
mov
pop
out
je
aam
mov
cltd
or
mov
adc
sub
roll
ss
push
dec
std
mov
in
test
cmpl
pop
xchg
in
je
cltd
decb
jb
push
rorb
xchg
loopne
jbe
orb
and
sub
movsb
js
outsb
das
dec
aam
test
xchg
jl
enter
mov
mov
nop
cmp
lahf
aad
pop
adc
jle
mov
sub
mov
addl
cmc
stc
xchg
push
pop
mov
jl
mov
pop
xchg
mov
add
adc
fisttpll
jae
shrl
cmp
xchg
dec
mov
mov
mov
int3
fistpl
out
stc
add
imul
jae
and
xor
jno
mull
mov
ret
fnstcw
add
add
pop
outsb
mov
es
pop
clc
movsl
sbb
lret
lcall
in
or
and
inc
mov
push
popf
enter
xor
aam
sub
pushl
sbb
dec
pop
shl
and
cs
jg
or
pop
sarl
in
cmpb
lods
icebp
fstps
std
scas
jle
push
xabort
aaa
push
push
inc
lahf
pushw
fidivrl
bound
pop
imul
in
jecxz
mulb
cli
mov
mov
imul
jbe
test
sarl
pop
push
loop
xor
jbe
pop
lds
std
mov
push
sub
cmp
cmp
pop
aaa
jo
inc
jns
outsl
pop
dec
cmpsb
into
dec
sbb
mov
ljmp
cmp
cmp
jae
ja
mov
ret
cmpsl
jb
inc
ds
das
push
pusha
lods
daa
jg
movl
inc
mov
sub
test
xchg
xchg
mov
inc
js
add
jne
mov
sbbl
pop
pop
pop
inc
push
sub
fcoml
insl
mov
aam
inc
xchg
lcall
rorl
cmp
mov
lret
cmp
std
push
jmp
push
in
cli
scas
int
les
lcall
divl
mov
inc
cs
and
pushf
ret
add
in
sub
dec
cmp
popf
stos
stc
stos
cmpsb
lods
inc
push
test
movsl
adc
cmp
in
daa
mov
pusha
fadd
scas
mov
and
and
pop
mov
cmc
dec
xchg
pop
mov
mov
mov
jnp
cmovne
repnz
fcmovnbe
stc
adc
mov
mov
or
nop
sti
js
xor
mov
xchg
hlt
shrd
loop
mov
mov
jmp
add
mov
repnz
mov
inc
aam
movsl
and
rcll
mov
add
addr16
into
cmp
cltd
daa
add
fnstenv
pop
sbb
jns
pop
mov
inc
cmp
dec
aaa
stos
out
mov
sbb
sub
fisttpll
rcl
mov
dec
jg
adc
and
cmp
arpl
movsb
adc
je
push
mov
mov
cwtl
fldt
adc
xchg
xchg
push
rol
and
enter
push
mov
jmp
in
shll
xorb
mov
nop
leave
dec
arpl
push
xor
xor
mov
sbb
nop
ja
lock
movsl
xchg
mov
xchg
pushf
in
xchg
int3
cmp
and
aam
mov
nop
adc
imul
push
outsb
mov
movzwl
lods
in
xor
fdivl
lret
fisttpll
ds
or
scas
sti
pop
ds
stos
push
xchg
std
inc
aam
cwtl
int3
mov
push
hlt
lods
xor
bnd
es
sti
lret
sbb
les
test
fcoml
jb
pop
call
icebp
fwait
mov
je
sub
fucomp
pop
lret
pop
cmpsb
xchg
pop
pop
sub
pop
dec
jg
pop
jno
iret
jne
jecxz
stos
jl
popf
pusha
shlb
ficomps
lahf
ret
cmp
add
daa
xor
xchg
popf
dec
jb
bnd
popf
cli
jnp
mov
xor
clc
in
lods
clc
scas
sub
and
push
push
aas
gs
jns
aad
adc
and
lret
je
pop
notl
jnp
mov
test
jp
clc
dec
popa
mov
scas
xchg
xor
sub
mov
xor
or
pop
dec
popa
dec
pop
push
push
push
iret
push
mov
cmp
out
cmpsb
jg
push
in
mov
cwtl
inc
test
aaa
mov
aaa
hlt
xor
xchg
or
add
movsl
add
cltd
popf
out
fstpl
stc
jne
dec
xor
xchg
mov
and
roll
jle
stos
and
rorl
add
gs
and
add
fwait
int3
subl
or
bound
lods
inc
repz
lret
add
push
cmc
pop
push
sub
negb
mov
fbstp
jnp
add
mov
cmp
mov
fcoml
test
outsl
xorb
insb
iret
and
pop
push
shlb
mov
ret
call
es
sub
idivb
jmp
adc
scas
jno
or
xchg
mull
jae
jecxz
rcl
dec
push
lret
mov
add
popf
xchg
or
scas
cmp
shlb
pop
es
push
iret
fdiv
cmpsb
dec
jmp
lcall
adc
cmpsb
mov
sub
xchg
adc
fcmovnu
jge
or
imul
jns
dec
mov
cmc
loope
add
imul
scas
pop
sub
mov
or
loop
jne
inc
fcomi
fsubrp
out
mov
xor
lret
push
ss
into
mov
xor
xchg
pop
rolb
faddl
stc
lods
fistpl
adc
adc
jno
lcall
ss
dec
adc
lods
inc
adc
sbb
repz
jmp
jno
outsl
push
into
and
lods
in
add
and
movsb
mov
roll
mov
ret
std
push
mov
mov
ror
cmp
daa
fbld
inc
lret
jle
mov
out
leave
stc
bound
and
and
inc
popf
mov
out
mov
pop
xchg
cltd
push
outsb
out
mov
cmp
fcmovnbe
jae
and
xor
inc
call
ret
cmp
and
xor
push
sub
sarl
jae
movsl
outsb
add
into
sub
pop
push
repnz
cmp
cmp
lods
sub
inc
and
movl
sub
pushw
push
test
push
xchg
adcl
imul
xor
into
push
jno
push
sub
in
jmp
dec
jmp
fstl
arpl
shll
ret
pop
cmp
cs
xchg
and
adc
xchg
jb
ljmp
andl
movsl
push
push
mov
dec
mov
mov
xchg
xor
pusha
jecxz
outsl
leave
jecxz
jle
mov
sub
stos
mov
xchg
add
aad
cmpsl
dec
sub
shrb
mov
test
or
cmpsb
mov
loope
mov
int3
test
mov
sub
pop
imul
pop
pop
les
pop
push
rcr
or
push
mov
fsubrs
lcall
cmp
hlt
popf
cmp
dec
mov
dec
gs
cmp
add
mov
and
cmp
sub
jno
dec
insl
inc
inc
add
in
rol
mov
in
pop
jmp
daa
push
adc
insb
push
ljmp
sub
cmp
dec
mov
xlat
and
scas
mov
xor
push
sub
imul
lcall
imul
pushf
jbe
and
push
xor
jecxz
add
in
cmc
lahf
cmp
pop
test
mov
mov
out
dec
fstpl
mov
test
push
dec
sub
stc
pop
mov
lods
call
sarl
mov
imul
mov
cltd
xchg
movaps
inc
js
lods
sbb
mov
enter
add
inc
jg
scas
fbstp
cmpsl
call
shll
mov
arpl
and
sub
sbb
sbb
ret
mov
mov
movsl
mov
bound
jecxz
ss
add
fisttps
je
sbb
adc
repz
push
aam
fisttpll
das
std
and
lea
xor
imul
sti
rcll
imul
xchg
call
loopne
and
cltd
jnp
or
pop
in
jno
popa
icebp
out
mov
sahf
dec
sti
aam
push
or
sbb
inc
psrlq
cmovle
rcll
scas
jb
clc
arpl
mov
sbb
out
inc
xor
in
das
add
cwtl
adc
outsb
lcall
addr16
in
mov
lods
xchg
jge
pop
repz
xchg
adc
lcall
fdivrs
or
jae
loopne
loope
insb
xchg
movsl
hlt
daa
nop
sbb
fsubs
sub
push
dec
mov
or
cmp
out
jle
fstpt
cli
dec
test
idiv
les
dec
bound
and
sti
aas
mov
and
dec
jge
fstps
insb
movsl
add
pop
fistl
lcall
mov
popa
das
sbb
and
mov
mov
lret
inc
iret
push
enterw
xchg
sbb
decb
jae
enter
sub
adc
mov
or
test
shrl
popl
adc
xchg
decl
add
test
mov
sti
dec
rorb
sbb
push
add
jg
pushl
cltd
sbb
pop
imul
pop
and
sbb
push
mov
sbb
inc
leave
jae
add
dec
ja
in
fidivs
jne
jmp
out
cmpsb
outsb
xlat
adc
pop
mov
lods
dec
xchg
aas
imul
shrb
inc
add
mov
insl
rclb
bound
mov
inc
scas
fwait
vmulsd
push
mov
sahf
imul
dec
push
insb
dec
icebp
ss
push
inc
add
retw
mov
jle
stc
std
stos
test
lods
inc
insb
fdivrl
mov
sub
mov
or
cmp
lods
or
mov
popa
xor
stos
cmp
push
and
mov
aaa
jne
adc
jecxz
adc
sub
sub
jl
test
cmp
sbb
and
xor
sub
mov
pop
mov
pop
xchg
and
cmp
mov
push
stc
js
push
insb
and
iret
dec
shrb
cli
pop
data16
jno
pop
out
push
fnsave
cmp
pop
jb,pn
pop
sbb
icebp
mov
xor
push
and
sub
xchg
into
cmovle
fsin
fmuls
in
cmpsb
hlt
add
ret
fnstenv
xchg
sub
push
pop
fimuls
add
mov
add
inc
mov
icebp
fdivrs
push
mov
dec
pop
push
cmpsl
xchg
sbb
sbb
call
ss
jb
dec
sub
aaa
rsqrtps
jbe
add
xor
addl
leave
repnz
icebp
ret
fwait
mov
mov
ret
aaa
fidivrl
push
jle
add
jne
arpl
mov
inc
add
in
sub
out
mov
sub
lods
pop
cmpsb
jl
xchg
adc
xor
popf
jns
aas
ret
mov
ret
jnp
js
into
inc
stos
add
icebp
fisttps
je
daa
xchg
inc
imul
adc
add
and
inc
adcl
mov
shrb
cmp
push
call
sub
push
leave
pusha
mov
lcall
jl
call
imul
and
lret
push
int3
or
es
push
or
lret
jne
or
out
mov
insl
fadd
fimuls
leave
call
mov
scas
xchg
lods
or
mov
push
mov
dec
mov
push
repnz
hlt
and
mov
bound
mov
push
cmp
subb
mov
sahf
xchg
push
pop
jo
sub
into
lods
ret
cmp
xchg
and
popa
out
out
ret
cld
xor
es
dec
push
xor
fcom
jg
ss
mov
xorl
push
popf
js
dec
add
movsb
sbb
mov
data16
jmp
out
divl
subb
adc
int3
nop
std
leave
std
popf
popa
mov
fdiv
in
push
jl
arpl
or
xlat
sbb
aam
inc
push
cmpsl
xor
fdivl
addb
mov
inc
xor
xchg
rolb
fwait
and
out
jp
imul
push
idivl
sbb
mov
inc
in
std
fidivl
dec
mov
jmp
ds
lmsw
cli
xchg
subl
hlt
mov
outsl
hlt
ds
add
movsb
aaa
dec
sub
lea
js
sub
or
sub
cli
call
int
insb
xor
jle
sahf
pop
pushf
or
popa
test
and
mov
dec
sti
scas
and
rorb
test
rcll
movsb
adc
jno
sub
add
ja
inc
shll
js
dec
scas
or
pop
loop
pop
inc
call
iret
repz
add
pop
add
enter
test
popa
insb
mov
dec
cmp
pop
sbb
add
inc
stos
add
lock
leave
push
cmpsb
int3
jb
sbb
xchg
ljmp
sbb
fidivrs
jp
fldt
out
cmp
in
out
mov
push
or
repnz
cld
ss
or
outsl
and
sub
or
shr
sub
dec
rclb
xor
mov
loope
cltd
adc
into
dec
sub
int3
imul
jae
jge
mov
insl
mov
inc
into
stc
dec
jg
arpl
fbld
movsl
sbb
test
fnstcw
push
dec
mov
cmpsl
dec
fsubs
push
ss
mov
lea
filds
cmp
imul
xchg
loop
out
das
and
push
mov
adc
mov
shl
xchg
ds
xor
xor
dec
cmpsl
data16
mov
mov
aam
or
fisttpl
xchg
ror
lods
nop
aaa
icebp
test
daa
add
xor
out
push
popa
cld
lcall
xor
mov
dec
dec
shrl
xor
daa
mov
pop
das
xchg
or
dec
adc
pop
stos
repnz
pop
in
cs
mov
or
pop
fcoml
mov
int
dec
aad
andl
fs
inc
mov
inc
xor
ds
add
stos
cmc
mov
mov
subb
mov
sbb
arpl
jmp
mov
outsb
mov
jne
mov
lds
lret
sahf
in
push
sbb
fdivrs
in
mov
xchg
push
mov
mov
push
ficoml
xchg
negb
mov
testl
adc
inc
std
dec
fisttpl
outsw
push
ficoms
mov
dec
out
leave
xchg
pop
imul
sub
sbb
adcl
mov
fst
jo
adc
add
add
cmp
loop
fnsave
add
adc
stos
jb
cmp
mov
loopne
cmp
pop
ret
icebp
jo
push
imul
add
fs
data16
sahf
shr
lret
pop
mov
adc
jecxz
test
mov
rorl
in
filds
or
mov
test
jne
popf
mov
cli
sub
or
dec
rorl
fcmovu
adc
aam
pusha
test
mov
mulb
das
sbb
jno
lock
and
pop
mov
sub
popa
mov
repz
inc
adc
es
mov
ss
call
mov
mov
pushf
cwtl
mov
in
aad
ljmp
mov
push
test
pop
insl
loopne
push
dec
inc
iret
adc
inc
leave
popf
push
lock
std
cmp
push
push
gs
lds
or
lret
test
cmp
inc
popf
inc
ficompl
enter
sti
shl
mov
cmp
dec
stos
push
pop
xchg
pusha
fwait
mov
leave
call
xlat
cmp
movsb
jg
aam
arpl
push
rcl
out
adc
and
jns
cmc
incl
iret
cli
test
push
stos
loopne
shll
fsubl
sbb
mov
je
xchg
rolb
xor
mov
mov
xchg
aad
cld
pop
jl
in
shll
mov
fimuls
outsl
inc
jle
sti
jns
xchg
fdivs
lea
leave
icebp
and
insb
mov
mov
pop
add
pop
mov
out
sub
pop
out
pop
add
dec
push
lock
aaa
xor
add
ret
xor
mov
xor
xchg
pop
sub
mov
lods
adc
inc
pop
dec
jg
adc
jecxz
add
pop
movsb
orb
xchg
push
xchg
xlat
cmp
icebp
sub
loope
aas
std
lock
test
sub
mov
js
outsb
arpl
test
out
mov
cwtl
leave
cmp
jp
test
rcll
or
rcll
and
push
adc
test
in
cld
mov
xchg
loop
arpl
repz
xor
icebp
push
outsl
aad
ffree
pop
dec
adc
lret
aad
push
adc
mov
sub
into
xor
pushf
or
enter
ret
cmp
cli
pop
add
dec
cs
add
mov
jnp
loope
sbb
dec
leave
aaa
int3
test
sarb
ljmp
mov
add
add
and
cmp
dec
mov
shll
push
push
sbb
loope
fistps
loope
push
mov
movsb
dec
in
shl
mov
xchg
sti
cld
out
test
inc
loopne
out
xchg
adc
in
inc
pop
pop
adc
mov
pop
pop
stc
and
stos
sub
jo
loopne
cmp
sub
in
push
pushf
cs
aad
loopne
cs
push
jo
adcb
pop
cmp
and
cli
or
mov
loope
mov
lea
dec
xor
test
add
dec
pop
shll
fwait
push
pop
jge
test
push
dec
mov
push
and
sub
xor
inc
lret
inc
and
dec
rclb
lret
es
mov
fidivrl
sbb
and
ret
push
out
sarl
sbb
cwtl
js
jecxz
sbb
lods
ret
pop
test
testl
loopne
aad
push
loope
jno
ja
xchg
cltd
jo
xchg
adc
or
xchg
fistpl
sub
lea
dec
stc
fists
pop
cmp
mov
cmp
add
xchg
sbb
jo
cs
ja
pop
test
inc
mov
pop
into
rorl
inc
out
cmp
xorl
and
mov
add
lods
clc
mov
arpl
xchg
push
and
pop
cld
dec
jp
stos
call
sub
push
fstl
adc
lea
mov
mov
pop
add
push
leave
dec
dec
mov
or
outsl
push
add
call
fwait
aad
or
sti
sarl
mov
pushf
jb
and
jae
ficoml
adcb
push
inc
imul
into
int
fidivrl
std
jno
dec
hlt
push
fsts
dec
mov
pop
jbe
lahf
roll
jo
push
xchg
insl
push
adc
lret
imul
push
xor
dec
stos
in
push
imul
xchg
and
and
add
idivl
stc
mov
fiaddl
mov
dec
mov
pop
out
subl
mov
inc
mov
sub
push
loop
add
dec
cmp
popf
xchg
fmull
out
icebp
js
ret
mov
in
push
stos
mov
roll
iret
jns
pop
lahf
adc
pop
jge
jg
in
rorl
idivb
test
or
aas
jne
scas
push
aaa
add
jl
in
jge
push
cmp
inc
nop
cld
xorl
es
filds
add
xchg
rcl
adc
mov
outsb
mov
addr16
ret
lret
mov
ja
mov
jae
xchg
mov
fsubl
sarl
aam
sbb
xlat
mov
xchg
fisubs
mov
pop
xor
imul
jge
mov
imul
mov
add
insb
add
aaa
cmpsb
jecxz
mov
in
xor
push
add
push
pop
mov
inc
icebp
and
je
sbb
ljmp
cmpsb
call
inc
dec
mov
add
add
push
idivl
fwait
xchg
xor
jns
lea
xchg
pop
sub
mov
adc
or
shlb
fs
nop
out
insl
shrl
add
inc
xchg
add
cld
rcrl
test
adc
push
adc
out
ja
mov
test
xchg
testl
aaa
or
mov
ficoms
not
fnstsw
repnz
cmc
mull
inc
sahf
fistpl
pusha
lret
orl
cmpsl
inc
aad
call
and
mull
push
idivl
push
scas
push
push
sbb
daa
cmp
push
sub
arpl
push
cld
fisubl
push
xchg
or
sbb
scas
movsb
cmc
pop
add
and
sahf
dec
jge
adc
cs
imul
xchg
aas
pusha
loope
mov
dec
js
xchg
sub
popf
dec
pop
cmp
pop
fsubrl
out
rclb
pop
loopne
int3
pop
shr
or
cltd
cmpsb
dec
jnp
sbb
and
faddl
js
pop
mov
fnstenv
push
fnstcw
out
or
xor
leave
push
das
mov
push
dec
xor
test
aad
mov
xor
inc
mov
xor
xorl
cmp
mov
cltd
fistpl
add
loop
push
mov
loopne
sarb
inc
aam
jmp
push
jg
stos
lret
idivl
ljmp
xchg
and
fadds
or
sbb
dec
dec
jmp
or
movsb
dec
sub
pop
and
adc
nop
mov
adc
pop
xchg
sarb
rolb
icebp
cmp
insb
add
mov
dec
mov
in
mov
pop
lods
cmp
mov
aas
add
out
lret
cltd
dec
fbld
pusha
pop
int3
or
or
sbb
cmp
fisubrl
test
stc
mov
or
imul
mov
and
push
imul
imul
sbb
dec
push
mov
popf
dec
adc
jp
cmpl
mov
dec
lods
sub
stos
pop
fldcw
xchg
div
sbb
sbb
js
mov
rorl
jns
fidivrs
dec
mov
inc
inc
loopne
in
jl
push
ret
jl
jno
and
adc
adc
jne
leave
cmp
cld
mov
in
test
mov
insb
lock
jl
and
xchg
mov
mov
mov
int
mov
lcall
sbb
and
dec
jle
adc
fs
or
cmp
inc
cli
push
popa
pusha
stos
pop
and
mov
lods
dec
arpl
stos
out
lret
xchg
jae
sub
hlt
test
bound
mull
orb
cld
rcll
lret
sub
outsl
data16
xchg
mov
lea
lret
loopne
test
pop
jo
push
ljmp
jp
cs
inc
sahf
sbb
jb
pop
decl
imul
in
daa
dec
stc
mov
fimuls
cli
mov
push
dec
jge
xor
xchg
in
shlb
and
popf
or
dec
out
ljmp
push
ja
jmp
pop
jne
and
pop
scas
imul
inc
fldcw
pop
adc
sti
or
ficompl
mov
pop
xor
mov
neg
jae
leave
adc
cmp
int3
ljmp
or
stos
fisubl
add
and
and
out
xchg
out
mov
and
mov
imul
inc
jae
dec
aaa
hlt
out
mov
cmp
test
rorl
out
int3
pushf
movsl
mov
adcl
sbb
mov
add
xorl
sbb
call
sub
loopne
mov
fidivrs
gs
sub
inc
fs
dec
iret
adc
push
clc
push
jecxz
pushl
lea
sub
jbe
add
sub
inc
pop
repz
dec
fsubrl
sub
adc
pop
sbb
call
shll
jge
es
mov
sbb
lea
cld
cmp
sarl
sub
xorps
add
mov
movsb
call
inc
lret
sti
mov
jns
pop
push
je
mov
cmovge
out
mov
push
test
xchg
outsl
mov
ret
mov
sub
mov
cmpsl
lds
cwtl
sub
dec
stos
and
pop
add
adc
cmp
cmp
jp
mov
test
lock
cmp
pop
adc
decl
call
sarl
xor
jl
lods
fcmovnu
dec
sbb
pop
pop
ljmp
loopne
cmc
addb
leave
ds
ja
nop
data16
push
xchg
rcr
adc
scas
ret
dec
push
mov
scas
call
testl
jmp
loop
iret
repz
pushf
mov
cmp
inc
push
mov
or
in
inc
add
xlat
aas
insb
dec
sub
inc
cmp
subl
xor
ret
jns
pop
fs
sbb
sti
mov
int3
ss
mov
lods
push
je
inc
inc
sub
xor
fcmovnb
cmpl
cltd
xor
push
mov
sub
push
xchg
mov
daa
push
es
sbb
cmp
push
xchg
and
ds
daa
enter
sbbl
sar
mov
push
cmp
mov
shll
push
and
add
push
roll
sti
push
mov
dec
in
clc
cwtl
jo
popl
inc
movb
jae
ljmp
std
dec
push
mov
pop
adc
mov
pop
xchg
aas
push
in
dec
dec
add
repnz
push
xor
add
fisubs
dec
movsb
or
ja
cmp
test
shlb
pop
inc
inc
addb
enter
mov
inc
push
push
or
and
mov
jae
fstl
fmul
mov
aad
aam
andb
je
cmp
std
lret
mov
and
jg
jb
sahf
inc
pop
lds
fldt
xchg
xlat
sbb
jno
xchg
jp
imul
or
andb
dec
test
mov
dec
mov
pop
cmc
mov
mov
pop
mov
jmp
cmpsl
stos
shl
dec
xlat
inc
stos
test
sahf
add
ret
data16
mov
stos
adc
daa
pop
mov
mov
into
xor
call
mov
call
pop
pushl
into
ss
mov
std
movsl
mov
mov
inc
xor
mov
scas
rorl
sti
lret
fnstenv
push
mov
mov
cltd
pop
jnp
test
xchg
jmp
out
out
loop
sub
dec
movsb
scas
adc
and
add
sbb
ret
test
add
dec
stos
pop
sbb
lcall
jb
sub
lret
push
push
and
inc
dec
cmp
popa
mov
jbe
data16
mov
push
pop
mov
frstor
push
add
adc
arpl
sbb
ret
xchg
ss
gs
pop
jl
data16
test
stc
mull
jge
mov
push
adcl
cwtl
sub
ret
test
imul
pop
xchg
shlb
ret
mov
push
mov
repnz
push
int3
mov
pop
subb
sub
lock
addr16
xor
mov
nop
push
lock
and
mov
mov
mov
fs
jg
or
dec
xchg
xchg
data16
cmpsb
pop
call
paddusw
push
mov
jne
mov
push
mov
inc
in
es
imul
or
or
inc
ja
xchg
shlb
insb
add
ret
mov
jns
sub
pushf
add
sbb
mov
jecxz
leave
out
push
insb
inc
mov
scas
add
out
or
mov
aad
arpl
mov
sbb
gs
mov
mov
mov
gs
sbb
dec
jae
push
mov
fsubr
cmp
add
aad
fs
xor
add
push
or
mov
mov
or
pop
sbb
cmpsl
jl
xchg
lret
movsb
jbe
insl
jno
cmp
inc
sub
daa
shrb
outsb
insb
fwait
xchg
aas
pop
fcoms
test
xchg
mov
push
lcall
sbb
or
icebp
inc
in
pop
sbb
outsl
pusha
jno,pn
aam
inc
fcoms
call
sub
and
jp
pop
xor
mov
push
ret
mov
mov
pop
push
insb
mov
pop
es
sbb
insb
adc
sub
cltd
push
addr16
imul
push
test
sahf
stc
nop
loope
ljmp
sbb
mov
xchg
cmpsl
mov
stos
lcall
pusha
cmc
std
mov
cmp
inc
lahf
pop
imul
repz
mov
add
sub
mov
dec
add
pop
cld
fisubrl
cmc
dec
sahf
jae
sub
int
jne
leave
or
popf
sbb
rorb
je
or
aas
sbb
add
push
stos
insl
add
mov
jo
out
sub
sub
mov
dec
pop
pop
mov
mov
cmpsl
je
std
or
stc
fdivs
dec
adc
jge
jo
xlat
shl
xorb
mov
jecxz
fstl
nop
dec
lret
ja
int
das
aas
arpl
mov
fdivp
mov
movsl
sbbl
daa
cld
ljmp
fisubrl
add
xlat
stos
mov
mov
js
ja
pusha
sub
ljmp
sbb
adc
fisubs
scas
stc
or
jecxz
imul
and
jns
pushf
fidivs
cmpsb
test
imul
adc
aaa
leave
clc
sti
pop
dec
aas
mov
jmp
or
mov
push
lahf
test
xchg
mov
jne
outsl
sub
jae
inc
push
mov
jmp
jp
or
mov
lods
xor
pop
xchg
jae
jae
and
loope
jb
mov
adc
jp
push
push
repnz
aas
and
pop
and
aam
pop
push
shld
mov
and
xor
pop
pop
jns
pop
xchg
pop
jne
jl
popl
mov
sti
stos
pop
adcb
outsl
jg
inc
dec
enter
nop
popf
in
pop
insl
scas
sarb
push
cld
sbbb
sbb
or
mov
clc
adc
or
dec
popf
jb
fidivrs
push
popl
add
mov
mov
push
test
mov
cmp
mov
pop
adc
out
push
lcall
pop
mov
jmp
rcrl
or
adc
outsl
ja
cmp
jg
cmp
inc
or
xor
adc
js
insb
stos
pop
es
and
mov
or
push
lods
aam
lret
adc
fwait
lret
gs
xchg
push
shrb
and
xor
mov
ret
sub
add
sbbl
movsl
rclb
mov
adc
adc
cmp
outsb
mov
pop
lret
push
aas
and
sbb
mov
loope
dec
pop
sub
pusha
les
out
movsl
aam
xchg
jb
jp
lret
test
cli
inc
adc
mov
shl
push
ljmp
push
inc
icebp
lret
popa
mov
repz
mov
bound
push
inc
imul
and
test
jecxz
inc
out
pop
mov
xchg
in
in
dec
insl
adcb
sar
mov
subb
sbb
adc
shlb
pop
rcr
insl
cmp
jno
fwait
mov
lods
and
shrb
and
scas
stos
stos
ja
mov
push
xchg
shlb
jle
stc
and
and
cmpsb
xchg
pop
adcl
xchg
rolb
and
xchg
flds
lret
outsb
arpl
cmpsl
outsl
add
sub
dec
cmc
add
push
add
stc
lahf
bound
movsl
sub
sub
or
adc
mov
sub
sbb
adc
xor
dec
push
xor
xor
jns
or
icebp
pop
outsl
dec
jno
shl
sbb
outsl
pop
mov
mov
sub
test
xchg
shlb
dec
push
sub
stc
dec
push
movsl
outsb
cmp
stc
cmpsb
sub
sub
push
xor
sub
popf
les
insl
lea
lcall
in
mov
inc
adc
mov
int
adc
testl
insl
aas
add
jae
and
not
xchg
test
imul
out
lcall
mov
mov
test
xchg
dec
push
pop
dec
adc
xor
fistps
pop
fdivrl
xor
cs
or
push
mov
jl
or
push
cmp
adc
orl
iret
jo
fimuls
repz
stc
ja
jle
popa
outsl
or
inc
jne
jecxz
fs
mov
xor
xchg
mov
dec
orl
dec
adc
xchg
add
adc
and
or
inc
ret
lock
pushf
out
push
pusha
rcrb
shlb
enter
hlt
movsl
fidivrl
xchg
out
sub
test
mov
cmp
fsubl
lahf
or
xor
addl
pop
inc
mov
mov
xor
jne
ss
mov
push
nop
sbb
inc
ret
inc
cli
push
fcoml
sarb
into
xchg
mov
sub
push
daa
xchg
push
pop
xor
inc
out
fucomip
adc
sarl
test
lods
mov
ds
cwtl
js
sub
or
iret
lret
pop
nop
lock
aaa
adc
popa
or
jmp
sahf
lock
inc
test
jo
rcrb
xchg
ret
cmp
sbbl
sbb
add
icebp
jmp
cmpsb
int
scas
or
loopne
adc
mov
pop
sub
in
enter
pop
xor
jno
ss
jl
xchg
movl
stos
mov
out
and
cmp
pop
and
xchg
push
jp
out
lods
inc
mov
mov
cmp
adc
cmp
push
mov
mov
aaa
adc
push
loope
sub
lahf
and
xchg
add
sti
cmpsb
fs
aad
pop
cltd
test
sub
mov
dec
movsl
loopne
stos
mov
xchg
pop
addb
mov
xorl
call
sub
sbbb
sub
mov
mov
mov
aas
mov
dec
addr16
mov
and
nop
jg
fcomps
fcomps
aad
leave
js
xchg
in
int3
jg
arpl
sub
out
xor
in
lcall
jecxz
das
dec
jo
mov
shrb
push
lret
ret
loopne
clc
addr16
inc
xor
mov
rolb
dec
dec
aas
dec
pop
aam
icebp
icebp
pop
mov
loopne
and
sbb
insl
shll
subb
fs
iret
mov
sub
xorl
xchg
push
mov
or
and
push
hlt
cmp
mov
mov
cmp
jecxz
leave
lock
sbb
imul
call
sub
dec
or
xor
pushf
jno
xor
sbb
mov
sbb
mov
scas
stos
push
aam
adc
lock
lods
jmp
loop
leave
fldt
xchg
jb
int
adc
mov
xchg
stc
fwait
jo
pop
or
loopne
lahf
jle
out
lock
insl
outsb
ss
stc
pop
mov
mov
int3
fsubrs
js
notb
mov
lea
pop
mov
jcxz
repnz
int
or
lret
xor
pop
mov
dec
test
mov
adc
fidivrl
ds
mov
ljmp
mov
test
dec
xchg
xchg
mov
cld
cmp
sub
xchg
je
rcrb
lcall
adc
fbstp
mov
push
push
mov
inc
push
and
adc
push
push
or
mov
call
jge
jmp
inc
out
aad
pop
bound
outsl
and
mov
mov
cli
bound
add
cvtps2pi
fistl
xor
add
jbe
out
and
fsub
in
imul
xor
or
mov
iret
lds
mov
outsl
sbb
and
cld
jae
in
out
cmp
movsb
add
mov
nop
mov
fwait
add
dec
rcl
push
inc
jnp
dec
scas
mov
loop
xor
clc
in
or
ja
add
jg
xor
fs
out
test
pop
shll
jmp
int3
hlt
sub
loope
push
xor
adc
dec
add
fbld
fildll
lcall
push
adc
sbb
aaa
mov
mov
xor
mov
sub
test
aam
int3
pop
sbb
dec
sbb
dec
push
aad
cmc
das
test
outsl
pop
cmp
or
repnz
rorb
filds
mov
pop
cmpl
mov
pop
cwtl
cmpsb
pop
xchg
ret
popa
into
sahf
aas
mov
push
sbb
xchg
filds
sub
pusha
lret
test
xchg
js
xchg
dec
rcll
adc
mov
mov
js
inc
ds
shrl
or
mov
dec
xchg
fidivrs
or
jmp
scas
inc
gs
test
mov
cmp
out
jns
iret
pop
xchg
pushf
fsubp
and
push
lret
mov
iret
mov
sub
pop
cmp
lret
scas
insl
cmp
outsb
push
push
or
or
daa
gs
loope
in
gs
stos
mov
adcl
dec
mov
aad
sbb
add
xchg
sbb
xor
pop
xor
mov
iret
mov
sbb
xchg
loop
cmp
ja
xlat
add
sarb
xchg
cmp
aad
mov
clc
mov
xchg
mov
mov
or
fsts
mov
mull
pop
jmp
cs
sbb
ret
data16
inc
sbb
mov
and
fadd
test
pop
xor
inc
jbe
out
pop
shrl
lods
adc
push
jnp
add
and
and
addr16
jnp
fcmovb
mov
mov
push
inc
lea
cmp
ret
daa
mov
iret
outsb
sbb
inc
inc
pusha
into
xor
xor
mov
call
push
lcall
push
mov
ds
mov
adc
loope
mov
mov
xor
pmulhw
pop
push
movsb
add
pop
dec
aas
sti
sbb
mov
xor
mov
push
lret
fs
inc
or
jo
inc
clc
les
push
rclb
in
mov
bound
and
mov
mov
jg
ds
push
mov
fnclex
je
dec
jb
push
insb
pushf
je
mov
push
mov
mov
or
sub
addb
or
lock
int3
and
mov
std
xchg
bound
adc
and
jecxz
xchg
lods
mov
test
and
sahf
mov
mov
sub
sbb
or
arpl
push
mov
lock
sub
push
lods
cld
mov
inc
sahf
ja
je
mov
and
icebp
icebp
test
sub
fcmovbe
lcall
adc
in
clc
pushf
or
and
sbb
xchg
add
xchg
ja
pop
pop
test
jne
add
mov
dec
pop
sbb
mov
pop
mov
vunpcklps
xlat
or
dec
xchg
cmp
loop
and
and
fidivs
xchg
jae
xor
adc
mov
dec
or
push
sbb
test
sti
mov
add
and
iret
jne
lret
adc
and
mov
test
fxam
inc
sbbl
arpl
je
mov
inc
pushf
adc
add
out
push
mov
out
aas
repnz
and
in
stos
daa
les
mov
jae
insb
cli
dec
cmp
gs
mov
loop
xchg
xchg
dec
repnz
mov
push
call
addl
rcrb
es
push
sti
das
es
or
cmp
lret
adc
hlt
jmp
iret
lret
mov
jecxz
fisubrl
lcall
enter
or
test
dec
sbb
int
or
cmp
xchg
xor
stc
inc
adc
xor
sbb
pop
clc
sub
out
add
mov
lahf
movb
ret
mov
scas
push
inc
int3
cltd
or
addr16
out
mov
stos
loope
cmpsb
bound
pop
fistps
push
dec
sub
dec
push
addl
mov
test
leave
jecxz
mov
lds
or
sub
push
icebp
inc
mov
cmp
xor
pop
jl
mov
inc
xchg
fcomi
int3
arpl
jl
or
nop
mov
sti
loope,pt
jnp
test
xchg
aam
cs
sbb
sub
mov
jecxz
inc
test
inc
push
mov
xorl
pop
cs
xlat
push
cli
push
dec
jne
sbb
mov
mov
sbb
hlt
loopw
dec
cld
cli
in
fcoml
xor
adc
cmp
dec
pop
add
cli
and
fildll
push
ret
fldt
mov
imul
jg
arpl
lods
dec
push
and
and
pusha
pop
ja
fistpl
aaa
pushw
fists
or
and
stos
hlt
jae
ret
rolb
cli
dec
ficomps
fists
mov
ja
int3
shll
adc
mov
sahf
push
cwtl
pop
shrl
aaa
dec
pushf
push
sbb
sbb
xchg
dec
xlat
cld
push
push
lret
cmpsb
mov
sub
inc
dec
dec
loope
fcmovne
xchg
push
or
mov
inc
bound
shrl
adc
aad
dec
lret
pop
ret
sbb
inc
add
imul
sub
pop
scas
mov
addr16
push
loopne
arpl
fdivrs
rcrb
call
mov
and
mov
mov
shll
xchg
add
sbb
jmp
or
inc
fstpl
std
sbb
mov
fsubrs
test
stos
sub
sti
dec
scas
jbe
adc
and
cltd
rcrl
imul
pop
xor
mov
push
xchg
pop
pop
mov
cmp
ja
xchg
adc
aad
add
mov
rcll
push
pop
dec
mov
loopne
inc
out
std
cmp
in
test
inc
mov
pusha
push
push
in
add
and
aad
test
daa
gs
mov
cld
sbb
cmp
jns
sub
iret
incl
inc
sub
test
mov
inc
inc
int
stos
mov
adc
xchg
sbb
cmpsb
mov
pop
popa
dec
push
xchg
push
jns
sbb
add
loope
mov
sbb
call
add
push
jl
shrl
mov
mov
rcll
sub
lret
sbb
sti
movsl
fstps
jbe
test
or
insl
xchg
mov
popa
loopne
shlb
jo
dec
jge
daa
fcomps
dec
jl
xchg
push
push
xor
in
sbb
add
xchg
mov
std
mov
cmp
adc
dec
aas
jl
sbb
mov
repnz
adc
dec
sub
jp
sti
insl
sar
sbb
mov
int
jge
shlb
mov
repz
movsl
and
mov
or
cmp
test
ffreep
or
add
push
aas
fcoms
imul
add
push
sub
push
fcom
mov
pop
cmp
sti
lock
mov
cmpsb
stos
cmp
add
xor
icebp
mov
aas
sub
cmp
lahf
sub
ds
or
fisubrs
out
prefetch
jge
cmp
sub
loopne
enter
sbbl
fidivl
inc
jbe
scas
xchg
push
arpl
insb
sub
sub
lahf
mov
mov
adc
mov
add
cmp
cmp
pop
pop
mov
pop
mov
xchg
add
shll
sub
fldcw
add
jecxz
sub
les
scas
cli
loope
xor
sbb
dec
aas
mov
ret
rclb
in
bound
xor
stc
adc
jge
pop
dec
push
enter
insb
xchg
xchg
xor
jb
pop
popa
sub
lcall
ret
outsb
bnd
leave
sub
mov
push
notb
stos
mov
mov
inc
call
pop
std
push
pop
jg
fsub
out
mov
mov
adc
jge
pusha
jb
push
and
sarb
insb
sbb
jecxz
dec
xchg
pop
das
jl
loop
push
shrl
dec
dec
andl
fiaddl
dec
inc
dec
mov
jmp
bound
mov
cld
or
inc
fs
sub
xchg
jae
cmp
lods
hlt
or
loope
sbb
xchg
hlt
fcoms
jg
pop
out
push
mov
sbb
stos
cmpsl
pusha
xor
sub
js
xor
xchg
cmp
add
or
push
dec
rcl
nop
mov
push
mov
jne
adc
sub
push
out
mov
xor
fnop
cmp
cmpsb
cmp
inc
mov
xlat
jecxz
leave
mov
nop
je
sarl
shlb
or
setno
dec
pop
xor
inc
mov
movsl
jns
enter
jbe
adc
push
cmp
mov
call
lods
ficompl
mov
insl
dec
clc
fistpll
negb
cwtl
mov
cmc
jnp
mov
outsb
mov
or
dec
xchg
daa
addl
fldt
pop
mov
push
js
fwait
pop
adc
fidivrs
inc
ret
jno
cwtl
pop
and
cli
imul
xchg
mov
subl
mov
inc
push
mull
sti
rcr
add
icebp
in
mov
in
aas
pop
negb
in
fs
cmp
sbb
add
clc
add
hlt
rolb
stos
pusha
push
fbstp
or
incb
sub
mov
iret
pop
inc
and
pusha
or
and
pusha
adc
mov
fs
testb
clc
lcall
sub
jo
cli
or
jmp
sub
jo
or
mov
jl
nop
jp
shlb
adc
sub
mov
inc
movsl
adc
dec
frstor
sbb
and
push
xor
out
jne
mov
add
xabort
pop
lock
push
sub
aam
dec
cld
repnz
arpl
mov
xchg
cwtl
ret
jle
add
addl
or
out
cmp
mov
rclb
incb
sub
sub
lret
es
mov
sti
clc
js
push
lret
push
mov
insb
rcrl
xor
inc
pushf
xchg
loop
dec
rol
mov
movsb
pop
cmp
test
fisttpll
jle
cmp
adc
fsubl
mov
mov
sbb
notb
das
push
mov
cs
mov
mov
loope
das
push
dec
stc
sub
pop
dec
sbbl
ficoml
mov
js
mov
int3
mov
push
movsb
push
stos
jmp
xor
jo
inc
adc
jp
fstps
test
jae
mov
push
repz
and
lcall
adc
xchg
inc
mov
test
pusha
test
lahf
push
push
je
cmp
push
or
cmp
xchg
movsb
movsl
lret
or
mov
sub
imul
scas
xor
sub
je
stos
and
lret
inc
aas
cli
outsl
mov
cmpsl
adc
push
adc
pusha
mov
int3
xor
adc
mov
scas
mov
add
into
testb
cmp
mov
clc
mov
or
mov
xor
iret
and
dec
sub
jns
pop
fdivrs
xor
push
push
int3
scas
mov
inc
mov
sti
push
lds
iret
fnstsw
ss
leave
mov
add
pushf
aam
mov
bound
mov
int
sbbl
cwtl
ret
outsb
sub
fsubs
and
mov
mov
jl
fucomp
lock
ret
lcall
push
shll
lret
icebp
mov
push
dec
cwtl
or
jl
int
lret
mov
adc
add
popf
mov
ljmp
in
fs
xchg
sbb
decl
mov
mov
xchg
mov
js
cwtl
pusha
in
xor
or
dec
js
mov
or
fwait
jle
inc
jmp
cltd
cmpsb
fsubrl
jns
test
inc
pop
or
testl
inc
loope
and
outsb
mov
scas
decl
shlb
xor
inc
repnz
cmp
loopne
leave
jbe
mov
lret
mov
inc
addr16
pop
mov
mov
popa
shlb
es
jnp
xchg
xchg
pop
ret
pop
call
aad
add
adc
jecxz
sub
xlat
lock
leave
xchg
adc
sbb
jnp
fst
shlb
pop
cmpl
sarb
mov
inc
insb
jne
mov
push
jl
jno
leave
push
xlat
push
lods
mov
test
fmull
clc
sub
mov
add
outsb
ret
cmpsb
leave
cmp
pop
or
in
pushf
jg
jl
add
add
xor
loop
or
inc
cmp
pop
mov
incb
pop
test
jle
faddl
push
add
and
outsb
int
pop
adc
imul
popa
dec
mov
mov
call
test
cmp
mov
inc
loopne
xchg
test
push
scas
lds
and
jae
aad
lahf
sub
lods
sub
cmp
sarl
push
push
movsl
test
sti
mov
imul
push
sbbb
dec
mov
insb
ficompl
imul
pop
loope
out
popa
pushf
sbb
icebp
inc
decl
xchg
ret
xor
not
inc
adc
cld
push
push
mov
ficompl
adc
fildl
lret
pop
mov
jae
pop
sub
ret
dec
xor
dec
jns
in
adc
pop
dec
sub
push
jns
sub
sub
cld
adc
push
mov
pop
loopne
dec
flds
inc
inc
mov
into
cli
xor
fcmovnbe
jno
pop
lcall
das
xchg
arpl
pop
aam
clc
out
inc
jle
movsb
cmc
insl
orb
andl
pop
mov
les
idivb
aad
clc
aaa
mov
add
pop
jnp
fdiv
clc
jp
xlat
push
mov
lods
mov
or
inc
mov
mov
inc
add
inc
insl
mov
aaa
push
and
out
lea
xor
xchg
scas
movsl
mov
add
jg
or
daa
sub
es
fldenv
divb
cmpsb
add
arpl
jmp
lods
xor
push
test
mov
lret
jle
jmp
mov
mov
sub
out
dec
loope
sbb
cmc
dec
jp
push
sarb
push
adc
jne
cmp
repz
test
repz
into
scas
push
or
mov
cmp
pop
add
arpl
mov
mov
popa
pop
sbbb
sbb
add
in
lock
or
jae
leave
fidivrl
jp
and
addl
mov
lds
scas
cmc
test
sub
fsts
jge
adc
jno
popa
xor
pop
fs
push
push
cmp
ficompl
loop
xchg
iret
push
mov
test
sbbl
push
lea
jg
loopne
pop
fcmovb
inc
push
sub
dec
jge
scas
pusha
cmp
aad
adc
sub
xor
bnd
dec
mov
lods
ret
nop
and
inc
xchg
adc
test
mov
cmc
cld
out
in
dec
test
cmc
add
adc
stos
or
xchg
cs
popf
or
ss
mov
dec
out
outsl
push
xor
cltd
sub
mov
xchg
adc
cmp
push
mulb
xchg
movsb
mov
shrb
cmp
cltd
cmpsl
bound
pusha
adc
out
add
mov
out
bound
pop
or
pop
filds
call
inc
sbb
insl
lds
xor
push
adc
nop
adc
push
adc
or
or
bound
inc
mov
pop
xor
add
outsl
push
sbb
lret
int3
cmp
push
sti
jecxz
cmp
or
xor
mov
sbb
call
test
jb
fwait
test
mov
daa
and
jp
fldcw
xchg
std
cmpsb
mov
call
jecxz
shl
aad
shrb
in
ljmp
repz
push
dec
clc
mov
std
dec
les
scas
jno
add
insl
add
inc
stos
push
jns
aaa
jmp
loopne
aaa
inc
scas
mov
dec
mov
mov
aaa
out
aam
clc
std
xor
dec
cwtl
aam
test
cmp
sbb
jns
pop
gs
daa
fwait
push
ds
call
lods
xchg
adc
sub
loopne
xor
dec
pop
lds
mov
clc
xor
push
jnp
pushf
xor
xor
push
rcrb
and
jg
xor
outsb
and
jnp
outsb
test
push
pop
mov
imul
andl
clc
inc
jbe,pn
scas
jle
push
or
mov
or
cmp
in
adc
push
pop
mov
lods
das
xor
push
mov
and
cmpsl
mov
xchg
push
or
daa
xchg
cli
push
les
push
repz
lock
lock
shr
in
dec
mov
or
push
mov
outsl
ret
movsb
push
lret
stos
dec
pop
and
js
pop
lock
or
cmpl
lock
out
xor
or
mov
pop
jg
or
outsb
xchg
xor
xchg
sbb
mov
add
or
mov
sbb
mov
inc
jp
and
cwtl
jecxz
xchg
test
test
fdivs
bound
jae
sub
cltd
xor
cli
out
test
mov
fwait
call
or
test
and
mov
adc
int
mov
adc
xchg
ja
pushf
mov
mov
and
cltd
mov
mov
pop
xor
out
lret
fstp
into
rol
out
in
sub
xor
sub
pushf
sahf
aam
loope
adc
pop
js
cmc
sub
sbb
arpl
sbb
bound
mov
jge
stos
lods
insl
mov
cli
aam
xchg
pop
aas
sub
adc
leave
push
ljmp
lret
adc
pop
mov
insb
push
fstpl
cmp
and
or
mov
cmp
push
mov
inc
popa
push
xor
les
or
scas
push
addb
sbb
xor
lds
jle
xchg
pop
cli
mov
enter
dec
gs
xchg
inc
pop
add
es
cmp
jle
jp
icebp
xchg
sub
push
and
jae
sbb
cs
cltd
xchg
call
int
pop
xchg
or
push
dec
mov
sbb
ficoms
pop
cmp
je
mov
pop
ret
into
aas
push
notb
cltd
loopne
xchg
lret
scas
pop
push
or
out
fldl
out
popa
insl
in
dec
ret
lret
mov
cli
jns
sbb
mov
xchg
jmp
std
jne
int3
add
xor
xor
jl
call
cmp
mov
sub
mov
sahf
inc
or
mov
push
stc
adc
clc
ljmp
movsb
das
stc
test
pop
aaa
stos
pop
call
mov
rcl
mov
fwait
pop
jb
enter
in
out
dec
push
cmp
cld
sbb
ljmp
out
mov
push
rol
negl
mov
out
dec
mov
rol
arpl
jp
shl
lods
mov
pop
add
ds
xlat
lock
push
ret
dec
adc
mov
jecxz
or
mov
and
pop
xchg
jae
mov
cs
repnz
push
push
cmp
stos
jae
cli
test
sbb
mov
mov
repz
inc
in
push
test
push
jg
je
fimuls
aaa
cmp
xchg
xchg
dec
call
int3
push
jmp
push
cmp
sbb
in
mov
xor
xor
and
rcl
sub
ret
jo
mov
sar
cmc
idivb
fs
jbe
ljmpw
push
out
and
sub
enter
mov
clc
neg
cmp
pop
adc
cwtl
mov
mov
xor
mov
inc
xchg
pusha
test
pop
out
aaa
sbb
aaa
push
xor
outsl
and
pop
add
push
in
xorb
pop
dec
cwtl
pop
sub
insl
incl
out
scas
int3
outsb
xchg
push
je
and
test
lea
pop
out
je
push
mov
inc
pop
imul
jae
sbb
add
pop
xor
sti
pop
sti
rolb
leave
cwtl
outsb
xor
add
sbbl
xchg
lea
or
shl
imul
adc
cmp
push
mov
lret
cmp
popa
sub
in
push
mov
clc
add
shrb
pop
dec
jb
jns
pop
adcb
stos
lods
ja
pop
lds
scas
subl
rorl
roll
jecxz
adcb
rorb
or
out
sub
jae
jno
or
xchg
add
add
sbb
fldcw
test
mov
je
aam
lods
jge
sbb
xor
ror
lcall
movsb
push
mov
shll
fnstcw
xchg
mov
test
xor
pop
mov
mov
mov
rcrl
dec
in
in
xor
inc
jb
scas
sbb
push
jmp
lods
or
jbe
pushf
loope
jno
cmp
push
inc
stos
enter
mov
inc
roll
mov
ret
or
aad
lods
mov
out
movsl
xchg
xchg
ret
aas
ss
jl
movsb
adc
icebp
lods
sbb
rcll
call
lcall
push
and
popf
push
fstl
xchg
sub
lock
hlt
sub
inc
ficomps
cmp
or
xor
xlat
scas
nop
xchg
icebp
jo
addps
mov
ss
adc
mov
or
or
imulb
mov
pop
mov
adc
cmp
call
outsb
dec
int3
mov
out
inc
dec
in
clc
xchg
stos
mov
pop
repz
outsl
sub
sbb
mov
sbb
push
js
pushf
fisubrl
into
or
loop
out
and
mov
mull
sub
fldl
ret
jo
sahf
and
push
bound
push
rorb
in
in
and
mov
lods
pop
loop
xchg
fldt
imul
mov
xorb
jge
mov
push
ficoms
xchg
in
lret
je
loope
testb
stmxcsr
in
or
cmp
aas
jnp
or
xor
sbb
lods
stc
ljmp
or
sti
in
push
adc
push
lods
test
aas
sub
xor
mov
push
cmp
ljmp
mov
in
cmpsb
mov
push
stc
mov
adc
push
lret
cmp
int
mov
ret
mov
mov
cmp
and
in
mov
jmp
icebp
repz
notb
mov
clc
and
or
and
push
clc
pop
xlat
fdivrl
lock
iret
daa
movsb
mov
imul
xor
cmp
icebp
lahf
jno
jbe
inc
xor
pop
cli
aam
cmpsb
pushf
js
and
or
inc
mov
paddd
adc
mov
std
out
inc
out
ficompl
cmp
sar
cmp
popa
add
pop
movsb
adc
inc
in
mov
movsl
jmp
int3
lods
lods
aam
iret
push
or
jne
and
mov
out
lods
add
xchg
jbe
pushf
or
mov
ficompl
loop
adc
xor
notl
ret
or
sbb
movsb
aam
adc
fldt
loopne
mov
cmp
pusha
sbb
mov
sbb
aas
in
and
fsts
leave
adc
out
dec
push
stos
gs
xchg
and
leave
push
cmp
sbb
pop
push
adc
loop
pushf
dec
inc
dec
ficompl
test
inc
imul
push
jecxz
add
nop
addl
push
adc
inc
insl
cltd
les
inc
lods
insb
adc
test
inc
or
push
adc
out
sub
inc
xorb
outsb
in
js
jne
aaa
into
mov
test
cmp
jno
leave
call
mov
dec
jo
jle
insl
add
in
int
dec
xchg
push
jno
sarl
xchg
cmpsb
pusha
std
imul
add
xchg
sbb
and
cld
push
sbb
sbb
push
jmp
add
ljmp
add
fldt
mov
inc
movsl
shlb
pop
out
out
or
sub
xchg
and
ret
and
das
lahf
lea
mov
mov
scas
into
fsts
push
out
out
out
enter
mov
pop
aaa
pop
mov
or
xor
ljmp
mov
outsb
repz
xchg
stos
into
lcall
in
push
add
gs
mov
xor
jno
aaa
pop
jo
aam
push
cmp
out
ficoml
jg
push
ret
bound
fbld
jmp
inc
fnstcw
pop
out
test
mov
sti
loope
shl
mov
add
and
loop
jle
fadd
sub
mov
jne
arpl
jp
jmp
and
push
shll
and
fwait
addr16
inc
scas
cmp
ret
aaa
ja
pop
rolb
add
cmp
inc
faddl
cmp
rep
dec
call
inc
into
rcrb
xor
and
aaa
push
jne
in
jg
cwtl
arpl
mov
inc
into
mov
adc
imul
mov
mull
fists
xchg
shlb
push
and
xor
pop
sub
xchg
push
movsb
lret
fsubrl
xchg
add
adc
sub
movsb
jb
mov
pop
ljmp
mov
xorb
popf
jmp
inc
outsb
stos
lahf
push
inc
loopne
test
inc
divb
fldl
inc
mov
scas
out
pop
clc
aad
out
xchg
pop
cmpsl
xchg
dec
shlb
jno
mov
lods
cmp
lcall
sub
ds
shrl
mov
test
clc
shrb
lret
out
xchg
cmpsl
and
push
xlat
mov
and
repnz
xchg
sbb
call
pop
testl
jb
and
jno
mov
adc
rclb
popa
sub
lahf
movsl
and
add
xlat
dec
dec
rcrl
bnd
adc
cmp
test
sub
lret
insl
pop
std
sub
xchg
cltd
lahf
lock
adc
scas
aas
arpl
iret
jmp
cltd
fisttpll
xor
sbb
decl
cltd
fisttpl
sub
mov
mov
add
lcall
or
fcompl
fisubrl
jbe
cmpsb
scas
leave
xor
pop
inc
xchg
mov
inc
repz
dec
jecxz
or
xchg
pop
push
pop
xor
data16
aaa
add
cmp
jl
sbb
outsl
jp
loope
loopne
inc
mov
xchg
int
sub
adc
jl
sbb
xor
inc
js
je
jg
cmpsl
jp
iret
pop
pop
lea
xchg
orb
xchg
pop
daa
jns
in
adc
fildl
xor
xchg
cmp
fcomp
cmp
cmp
inc
and
pop
or
fdivrs
add
add
xchg
addr16
adc
mov
xchg
push
or
sbb
cs
add
out
and
test
pop
test
nop
insl
push
adc
enter
inc
mov
add
xor
mov
jl
stos
mov
or
mov
popa
add
popa
dec
ret
cmc
push
push
or
xor
aaa
add
xchg
sbb
sub
xor
cmpsl
lea
ja
xchg
cmp
jbe
iret
jnp
jmp
movsb
add
mov
inc
stos
xchg
cmpsb
dec
add
rcl
mov
cmp
ja
mov
jne
and
stos
mov
repz
jnp
pop
or
mov
cwtl
sahf
int3
insb
arpl
stc
inc
jl
push
cld
pop
jb
or
loopne
in
inc
aad
or
pop
jbe
clc
in
out
mov
sub
inc
cld
jecxz
or
add
cmp
mov
mov
xchg
in
cmp
push
int
xor
cli
bound
repnz
jno
pushf
popa
out
popa
dec
sbb
das
add
mov
cmc
aaa
and
push
jmp
fistpll
pop
fidivrs
pop
imul
jge
popf
les
inc
dec
mov
jbe
push
jbe,pt
add
ja
cmp
jns
mov
sub
lss
pop
add
mov
push
mov
not
iret
test
sbb
xchg
pop
mov
adc
test
fidivs
je
rorl
into
mov
sbb
ret
mov
aaa
arpl
xchg
jno
out
dec
outsl
std
insl
mov
fisubs
mov
sbb
clc
xchg
dec
addb
or
je
and
inc
xchg
dec
sti
mov
cwtl
mov
adc
sbb
out
in
insl
mov
popf
pop
dec
stos
cltd
lret
repz
daa
jle
movsb
repz
cmp
mov
outsb
mov
or
dec
mov
fwait
inc
jecxz
int3
rorb
sti
jp
jb
add
pusha
mov
push
push
lahf
pop
xchg
jae
push
in
arpl
lahf
adc
xchg
and
or
mov
ja
ds
mov
sub
dec
mov
rorb
pop
jecxz
pop
jb
daa
shrb
sbb
mov
into
mov
pop
cld
shlb
data16
xor
mov
mov
xor
mov
dec
adcb
notl
or
sbb
stc
ficoml
subb
lods
aad
sub
cmpsb
pop
xchg
ror
mov
ds
in
inc
dec
jne
inc
mov
shrb
jo
and
cmp
mov
lahf
dec
jmp
mov
xor
scas
pop
xor
shlb
das
xor
loope
pop
call
sbb
inc
loop
xor
jge
sub
push
add
repz
popa
xchg
adc
int
mov
cwtl
adc
jp
cmp
xor
shrl
push
mov
push
aad
jno
jg
std
jne
outsl
outsb
test
adc
sbb
int3
je
push
cmp
lea
pop
fwait
mov
mov
bound
bound
mov
call
cmp
pop
adc
mov
xchg
mov
jle
adc
in
in
or
cmp
adc
pop
icebp
jmp
cmp
jp
adc
jno
jo
mov
sbb
mov
outsb
pop
dec
mov
lcall
jl
inc
mov
dec
jecxz
negl
cmc
fisttpl
push
lea
int3
cmpsb
mov
out
jns
leave
jo
test
cli
ret
dec
inc
aaa
outsb
push
gs
mov
shll
pop
cmp
sub
pop
ret
pop
sub
mov
insb
faddl
push
add
pusha
cmp
rorl
mov
push
mov
loop
rorb
test
or
dec
dec
adc
andb
fsubrs
mov
xor
pop
ret
out
fistl
add
jbe
add
testl
movsb
mov
call
dec
movsb
inc
add
rol
lret
mov
cmpsb
jmpw
jne
mov
xorl
cwtl
faddl
ret
sbb
adc
pop
faddl
adc
into
and
mov
xor
push
test
sti
xchg
sub
lahf
iret
cld
movsl
jl
mov
xor
mov
mov
ret
stc
dec
adc
mov
into
sub
int
pop
mov
add
add
mov
mov
and
sbb
push
mov
icebp
mov
lcall
jo
fidivl
mov
and
insl
or
lock
addr16
fsubp
loopne
mov
mov
jecxz
pop
pop
loop
cmp
ds
jno
jnp
shlb
mov
xchg
shll
xchg
cli
dec
mov
pop
mov
pop
jle
clc
mov
arpl
fdivr
ret
xor
or
andb
xor
inc
ss
add
outsl
aam
popa
xchg
jp
push
lea
jecxz
lods
and
lahf
push
fs
fnstenv
xchg
ljmp
enter
push
push
push
testb
xchg
subl
sbb
sbb
mov
push
sub
sub
xor
lea
das
pop
sahf
test
sbb
iret
into
or
pop
mov
push
push
fnstcw
scas
mov
inc
mov
rol
pop
sbb
jbe
push
cmc
scas
cmp
or
fnstcw
int
stos
and
xlat
mov
inc
stc
dec
sub
pop
mov
in
pop
sbb
jge
push
xor
mov
mov
dec
adc
ljmp
adc
popa
fnstcw
rcrb
lods
out
sub
mull
test
push
adc
icebp
imul
cmp
xchg
fmull
xchg
stos
into
jno
hlt
cli
dec
cmpsb
xor
dec
es
and
push
aaa
xchg
pop
xchg
adc
push
pop
les
mov
pop
xor
push
arpl
mov
dec
add
adcb
ss
mov
mov
imul
push
leave
std
sub
and
jg
bnd
xchg
jae
lock
repz
lret
and
cmp
loopne
fwait
cmc
jmp
stc
aam
dec
imul
mov
jmp
stos
mov
imul
movsl
test
mov
cs
out
dec
adc
xor
dec
int3
mov
add
jmp
add
mov
xor
and
cmp
mov
addl
pop
dec
mov
push
ficoms
jb
and
cmpsb
inc
xor
bound
jne
loopne
adc
ret
mov
dec
aad
sarb
cli
mov
data16
jecxz
fistpll
dec
or
pop
sti
push
iret
stc
pop
repz
insb
lret
xor
fwait
ds
insl
xchg
sti
aad
jno
add
gs
push
add
sbb
add
js
xor
fadds
loope
push
inc
movsl
imull
mov
or
or
cmp
pop
out
inc
mov
push
icebp
lahf
adc
mov
ljmp
inc
es
push
sbb
inc
pusha
mov
enter
mov
xchg
shrb
fprem
dec
ret
daa
cmpsb
pop
add
arpl
lods
jnp
nop
xor
jmp
test
pop
fxch
xor
lcall
cld
inc
clc
loop
jo
in
or
sub
sbb
icebp
sar
lods
imul
and
xchg
inc
mov
divb
enter
jecxz
mov
mov
cmp
bnd
or
fadd
ds
lods
pop
jnp
cmp
js
pop
scas
mov
hlt
sub
lea
mov
daa
test
addr16
or
or
ss
js
jbe
lret
lds
pop
sub
push
es
inc
cmp
xlat
hlt
mov
cmc
enter
jmp
inc
daa
dec
fwait
xor
or
inc
dec
sbb
and
mov
test
orl
xchg
icebp
sub
jbe
adc
lea
mov
push
out
push
jne
iret
out
xor
ret
shll
fisubrl
jb
adc
ficoml
push
lcall
sbb
adc
inc
add
outsb
nopl
or
in
decb
js
xorb
rcll
fsubrp
sbb
adc
jns
lods
ficomps
mov
pushl
xchg
ret
into
and
inc
push
sti
lret
repnz
cmp
pusha
inc
pushf
pop
jns
sbb
adc
enter
popf
insl
loope
jg
cmp
inc
lock
ds
jnp
sbb
jge
add
loope
mov
dec
mov
cltd
cmp
scas
push
mov
ss
mov
pop
inc
data16
ficomps
mov
pop
adc
stos
mov
andb
js
sub
stos
leave
insl
add
cmpsb
sbb
or
mov
mov
jl
or
fldcw
fdivs
hlt
les
inc
jl
push
lea
test
lds
cmc
test
pop
sbbb
and
mov
or
jp
sbb
loopne
cs
jle
jno
out
xor
dec
das
mov
aaa
or
mov
call
xlat
test
xor
xchg
pop
mov
dec
jae
hlt
fldl2t
fdivl
xchg
popa
cltd
insl
cmp
jmp
jmp
jbe
xchg
roll
popa
mov
inc
shlb
into
mov
adc
arpl
jae
xor
fcoms
mov
popa
jp
jns
test
pop
bound
cmpsb
adc
jno
sbb
jns
cmc
ss
test
ret
push
jbe
lcall
jp
or
mov
stos
and
in
sahf
fnstsw
dec
xor
ljmp
inc
addl
fdivr
bound
mov
test
cmp
arpl
test
cmpsl
ja
pusha
cmp
adc
shll
push
rcl
mov
gs
jns
jl
jmp
sub
pop
leave
cmp
inc
subb
enter
pop
cld
stos
movsb
ror
fiadds
push
xor
loope
jbe
ljmp
shrl
dec
rolb
lea
rcr
orb
mov
gs
jecxz
mov
adc
in
adc
adc
leave
add
movswl
test
sub
scas
mov
add
xlat
test
aad
inc
fmul
mov
mov
cwtl
jns,pn
dec
mov
insl
adc
movsb
ret
xchg
insb
inc
test
mov
mov
jae
cmp
mov
clc
mov
xchg
adcb
fsubrl
inc
popf
repnz
insb
adc
movsl
das
jbe
in
mov
sbb
nop
leave
mov
or
loope
testb
cmpl
js
jae
push
mov
jae
mov
sub
push
inc
jo
mov
sub
jecxz
ss
icebp
mov
out
rcl
ret
imull
and
cmp
shll
arpl
scas
pop
shll
leave
insb
rcl
push
jns
mov
mov
xor
mov
shr
pop
shl
in
orl
sarb
jp
and
movsl
fucom
push
dec
scas
xadd
cmp
dec
mov
pushf
sti
fnstcw
addr16
mov
cld
push
lea
and
fwait
mov
xor
mov
or
fisttpll
loope
into
enter
cld
cwtl
mov
stos
mov
mov
hlt
mov
jbe
insl
flds
out
inc
lcall
inc
mov
daa
pop
nop
out
mov
fidivrs
movsb
mov
sahf
jle
std
cmp
iret
add
mov
fstpl
mov
sbb
les
sbb
ja
inc
or
pushf
push
sbb
je
pop
push
enter
or
xchg
mov
push
dec
pop
push
xchg
clc
push
or
or
daa
cmp
cld
and
xchg
fstps
pop
mov
mov
out
adcb
into
rcll
fisttps
insb
lods
test
lea
icebp
dec
vpandn
sbb
fsubrl
xor
push
data16
dec
cli
jo
shrb
sbb
call
ret
sub
loopne
rol
dec
lcall
push
imul
or
sub
mov
adc
jecxz
aas
dec
xchg
icebp
jbe
sub
orps
pop
and
shl
mov
mov
jnp
cmp
push
rcrb
sbb
data16
imul
mov
repnz
or
mov
pop
xchg
push
mov
ljmp
dec
rcrb
lret
or
std
in
out
adc
inc
jp
arpl
adc
xchg
sub
fstl
add
mov
jge
cmp
sub
loopne
outsl
inc
inc
movsb
mov
push
sarb
pushf
push
push
cmc
and
cmpsb
das
lods
pusha
jbe
mov
adc
icebp
pop
mov
adcl
and
pop
sub
cmc
mov
insl
loop
sarb
and
mov
out
in
outsl
fsubs
pushf
sbb
sub
orl
jle
mov
xchg
cltd
xor
sub
pop
js
cmp
fsts
pushf
flds
fdivrs
movsl
push
xchg
add
push
rcrb
dec
fdivs
and
insb
mov
push
xchg
fsubl
leave
xlat
iret
mov
mov
xor
cltd
shll
xchg
pop
imul
dec
sub
adc
fistpl
xchg
cmpsb
test
addr16
shll
loope
cld
mov
mov
mov
repnz
mov
ds
dec
or
fmuls
fs
out
inc
loopne
stos
cmp
outsl
outsl
jle
adc
sti
pop
pushf
jl
iret
xchg
cli
and
mov
mov
and
adc
mov
scas
mov
mov
lock
xchg
mov
push
xchg
testb
xchg
jmp
mov
aaa
imul
inc
ret
fs
inc
rcrl
adc
mov
mov
lcall
test
pop
xchg
ficompl
lret
cmpsb
es
jne
push
or
shlb
push
enter
sub
ss
sub
addr16
adc
test
adc
ljmp
xor
ds
in
fbld
jl
adc
adcb
popa
testl
add
inc
arpl
jge
mov
push
inc
pop
mov
aas
add
out
adc
es
mov
outsl
punpckhdq
mov
jmp
adc
out
lods
and
adc
push
push
xchg
sbb
add
aad
mov
mov
int
jne
out
adc
jecxz
mov
jno
lods
mov
enter
std
aaa
int
push
push
jne
cli
mov
fs
lods
xchg
mov
outsl
aam
jp
or
mov
lods
sbb
stos
cmp
inc
int3
test
shr
in
and
insb
mov
inc
xor
inc
ret
push
cmp
lret
cs
dec
ret
jae
in
pushf
imulb
or
jno
inc
cmp
cmp
mov
jno
xor
mov
pop
cmp
jo
or
sbb
in
dec
sbb
addl
in
mov
dec
rclb
and
outsb
or
sub
ja
jg
mov
jb
cmp
or
int
jle
ljmpw
push
cmc
rolb
push
loopne
adc
dec
roll
dec
mov
aas
movsb
ret
jo
jbe
addl
mov
ret
adc
ss
sub
ror
jmp
and
mov
or
shr
push
imul
mov
repnz
lock
lods
or
stc
and
popf
dec
testb
into
sub
dec
xlat
cmpsb
add
jno
xor
add
movsb
shlb
or
lahf
jle
pop
std
enter
cmp
sub
imul
fcompl
push
xor
and
out
xchg
out
ss
or
ret
push
test
outsb
pop
sbb
mov
clc
sbb
sub
adc
test
out
nop
mov
or
loopne
bound
or
cmp
cld
adc
mov
jnp
lock
jbe
lods
lods
fisttpll
sbb
xor
bound
adc
leave
stc
or
inc
pop
cli
mov
jp
jg
cld
out
jp
stc
dec
cmpsl
in
test
pop
jmp
and
std
inc
insl
dec
add
iret
push
outsb
daa
sub
dec
ret
xor
mov
inc
sub
mov
xchg
or
sub
mov
loop
dec
out
push
dec
repz
stc
mov
and
and
jae
push
adc
popf
xchg
sbb
pushf
mov
outsb
fdiv
mov
lahf
loopne
or
push
or
dec
fsts
mov
fdivrs
push
or
imul
mov
xor
addr16
jge
fdivrs
int
add
repz
and
mov
add
mov
mov
loop
cs
test
mov
dec
pop
push
pushf
int3
sub
jno
mov
cmp
arpl
rolb
xchg
xor
inc
lea
inc
mov
mov
add
lock
cli
push
adc
hlt
sub
les
sbb
mov
mov
sub
jbe
lea
dec
jmp
xchg
ret
stos
sub
jo
xchg
das
nop
and
xor
ss
mov
negb
mov
loopne
or
xchg
and
sub
push
jae
daa
dec
inc
lock
and
test
sbb
add
lahf
in
pop
pushf
mov
cmp
pusha
cmp
test
shlb
icebp
push
icebp
sub
xchg
sbb
inc
lcall
dec
sbb
sub
cmpsb
fmull
dec
scas
rcl
icebp
lods
adc
imul
add
adc
and
xor
les
arpl
jb
inc
cltd
rorl
pop
andb
xor
lods
mov
push
push
lret
out
sti
mov
ret
push
xchg
leave
fldenv
add
jle
lcall
sbb
and
push
leave
rcl
mov
push
xlat
jns
loopne
push
dec
mov
dec
or
push
lret
popa
sub
mov
shr
adc
jl
cmp
add
adc
or
push
mov
xchg
cmp
xchg
imull
fmulp
clc
jo
mov
lcall
repz
mov
add
addr16
cmp
push
jmp
pusha
mulb
mov
inc
daa
push
jle
jecxz
mov
and
jle
adcl
sub
lret
cmp
cmpsl
sbbb
cmp
lret
out
in
cmp
lea
inc
push
inc
cmp
jge
sub
repz
lock
imul
mov
repz
pop
pop
sbb
scas
push
jno
jno
je
stos
rcrb
dec
cmpb
scas
xchg
or
dec
and
adc
push
jbe
xor
pop
inc
jp
mov
bound
and
insb
fld
test
js
mov
push
sub
dec
dec
loop
mov
repnz
out
stos
sarl
out
sub
or
dec
insb
out
ror
scas
mov
dec
sub
mov
pusha
js
lods
std
xor
inc
fwait
pop
push
movsb
sbb
jae
clc
jo
into
lret
stos
hlt
xchg
imull
jmp
adc
push
xor
jle
dec
cmp
cmpsb
mov
mov
imul
mov
inc
test
or
jecxz
adc
sbb
inc
pop
ja
jno
movzbl
jl
jns
test
cmp
fwait
add
add
inc
pop
popf
mov
mov
sub
fdivrs
pop
call
pop
xchg
movsb
sbb
scas
popf
rolb
lret
xor
push
stc
mov
dec
sub
cmpsb
stos
push
sbb
jnp
sti
xor
bound
mulb
ja
mov
fwait
xor
mov
sub
mov
cmpsl
cltd
jl
lret
or
shll
adc
inc
inc
add
shl
mov
fadd
mov
mov
inc
pop
push
adc
push
adc
std
sbb
xchg
repz
outsb
and
pusha
cmpsl
cmc
xchg
jo
xor
mov
iret
mov
fcoms
push
lods
jl
enter
hlt
pusha
scas
add
cmp
mov
and
inc
xor
push
ljmp
sbb
adc
popa
iret
cmc
mov
outsb
or
mov
push
mov
loop
addb
movsb
and
loop
xchg
and
filds
mov
inc
mov
jle
push
sub
cmpsb
sub
in
out
inc
mov
inc
cli
neg
cmp
bound
sub
adc
nop
fidivrs
mov
xchg
daa
xchg
fisubrl
stc
and
out
fistps
repnz
mov
out
loope
iret
xchg
mov
adc
jno
lret
rcrl
sbb
push
xchg
outsb
lahf
or
xor
lret
jnp
mov
test
push
and
adc
push
call
mov
push
icebp
inc
or
sbb
out
aas
inc
mov
shlb
outsb
xor
imul
bnd
outsl
sti
cmc
jge
mov
stc
in
les
adc
out
nop
out
xor
push
or
cld
lcall
lahf
xchg
lock
jp
lahf
ficoml
divb
loop
cmp
cwtl
dec
loop
loop
ja
movsl
push
popa
mov
inc
mov
mov
inc
push
pop
mov
stos
aaa
sbb
inc
enter
aad
stos
push
add
jmp
inc
mov
sub
sarl
enter
ret
mov
sub
lret
nop
lods
adc
nop
addr16
cmp
xchg
out
roll
jne
mov
rorb
test
mov
xor
das
mov
dec
lock
mov
xchg
dec
aas
cli
faddp
sub
push
xchg
xchg
sub
pop
movsb
sbb
lock
sub
loopne
out
call
stos
mov
adc
lea
aam
cmc
adc
popa
shlb
sbb
pusha
inc
stc
loope
and
sub
add
sub
sbb
leave
cltd
std
and
mov
dec
cmp
icebp
repnz
pop
out
sbb
sbb
cli
in
cmpsl
push
ret
xor
adc
push
cld
mov
sbbl
jb
sub
popf
lret
inc
push
out
fs
lahf
insl
jno
or
xor
ret
cmpsb
outsb
mov
cwtl
push
inc
and
mov
dec
das
jg
mov
add
push
gs
pop
mov
iret
movsl
mov
popf
pop
je
add
cld
push
repz
add
jb
mov
cwtl
xchg
sbb
ja
je
pushf
inc
shlb
out
fsubs
test
fidivrs
dec
repnz
stos
rcll
xchg
push
stos
movsl
sbb
test
es
test
cmp
inc
mov
adc
sbb
out
frstor
lahf
pop
push
push
mov
mov
and
dec
mov
jle
cmp
push
jo
in
dec
pusha
jnp
push
inc
cltd
lods
inc
aam
jl
lcall
sahf
inc
fidivrl
shll
mov
jg
lret
jle,pn
inc
lret
rcr
sub
mov
jae
scas
xchg
ljmpw
mov
mov
into
adc
cmpsb
jmp
stos
lods
jno
out
lods
adc
and
fucomp
push
in
or
cmc
jge
popa
add
jno
mov
jnp
pop
stos
adc
into
push
push
mov
mov
pop
mov
jg
pop
in
jl
adc
add
pop
inc
mov
ret
movsl
movsb
shlb
mov
bnd
push
add
xchg
rcll
sti
cmp
shlb
push
mov
sbb
mov
jge
stos
cltd
roll
mov
sub
inc
dec
dec
jmp
shrb
test
mov
fildll
std
ficoms
or
lret
fldl
pop
dec
xlat
leave
and
sbb
mov
mov
in
xor
pop
setne
rclb
mov
jle
aad
mov
rcl
imul
gs
sub
repz
xchg
test
div
ljmp
inc
sub
ret
add
mov
push
js
out
loope
aaa
in
cmpsb
xor
out
jae
mov
stc
cmp
cmp
call
sbb
jno
sub
sub
ja
sub
or
mov
cs
push
jns
inc
fwait
dec
xor
inc
out
push
and
mov
inc
data16
xchg
lret
loope
mov
js
xlat
push
sub
pop
sub
mov
jo
cmp
add
das
les
xchg
sbb
inc
test
fcompl
push
mov
in
mov
pop
lret
shlb
jl
push
out
dec
es
adc
rorb
pop
add
ret
clc
je
dec
imul
ret
push
fwait
aas
imul
add
and
mov
mov
stos
enter
js
popa
es
fsubs
repz
stos
fistl
and
and
fsubrs
jno
mov
xchg
mov
mov
pop
shll
mov
rol
mov
or
push
inc
popa
in
mov
mov
cwtl
jae
scas
add
and
nop
sbb
fldl
xor
in
in
or
fwait
xchg
outsb
push
cs
out
dec
shlb
in
mov
xor
pop
adc
shlb
xor
jg
out
lds
push
dec
adc
or
not
adcl
mov
pop
mov
jp
and
scas
cmp
gs
lcall
mov
jno
xchg
mov
sar
in
cmpsb
lds
inc
cmp
iret
dec
les
push
cld
jne
lret
in
xchg
jae
mov
inc
scas
inc
jns
aas
cmp
dec
xchg
sub
stos
bound
fidivrl
fsubs
sub
rorb
fdivrl
pop
cmp
shrl
shrb
rolb
imul
loopne
pop
mov
pop
ret
or
sbbb
enter
mov
test
pop
paddusw
push
mov
subl
add
scas
repz
push
pop
addl
push
shll
push
sahf
mov
push
ficoms
lret
pop
sub
pop
pusha
sbb
out
push
pop
cmp
mov
adc
dec
rcrb
mov
mov
pop
ja
cwtl
rcll
dec
fadd
jp
insl
lcall
fidivrl
fnstenv
xchg
pop
loopne
jmp
push
fdiv
out
push
iret
sub
and
ror
mov
outsb
stos
mov
xlat
aaa
mov
sbb
mov
scas
dec
xchg
movsb
out
push
xor
add
je
arpl
mov
mov
insb
out
dec
mov
sub
pop
int
test
dec
sbb
push
adc
add
in
xchg
std
adc
xchg
iret
mov
lods
loopne
mov
push
jns
cs
sbb
sub
shl
pusha
mov
aam
cmpsl
cwtl
inc
loop
sub
jno
loope
pop
cmc
xorb
loop
push
lods
xchg
inc
mov
int
jl
xlat
inc
iret
movsl
jg
pop
add
mov
mov
in
imul
inc
insb
rcr
loop
mov
mov
jg
fsubrs
xchg
cmpsw
rorl
arpl
dec
lods
negl
jnp
cltd
jne
adc
pop
jle
aad
mov
xchg
dec
jne
xor
cmp
lods
mov
in
sbb
es
lret
bndldx
dec
js
dec
loope
jl
sub
fcompl
or
dec
hlt
xchg
mov
roll
cmp
mov
dec
test
stc
test
xchg
pop
xor
frstor
sbb
stc
icebp
movsl
jb
cmp
stos
pop
imul
push
ja
imul
icebp
and
sub
push
mov
jnp
stc
push
sbb
int3
lods
mov
mov
dec
jb
mov
cmc
arpl
push
mov
xor
inc
call
mov
in
outsl
clc
push
push
pop
test
insl
stos
into
adc
sub
add
enter
sub
mov
adc
in
movsb
aad
sbb
ss
les
inc
pop
pushf
pushf
adc
sub
pop
mov
dec
ss
pop
addr16
movsl
lcall
sub
stos
mov
subl
xchg
adc
jns
imul
mov
ja
xchg
sahf
xchg
or
je
ret
cmp
adc
inc
mov
jge
or
sbb
xchg
popa
sbb
sbb
shlb
or
push
mov
inc
lahf
xchg
pop
jge
mov
sub
iret
sti
rcrb
and
cmc
fnstcw
cmpxchg8b
aad
psubsb
sahf
cmp
dec
push
inc
add
lock
xchg
mov
shrb
ss
stos
int3
mov
or
jp
mov
stc
push
xchg
scas
or
mov
inc
rolb
jbe
sbb
jo
popa
mov
push
loopne
pop
jns
inc
mov
andl
iret
pop
xchg
lods
inc
insl
dec
cmpsl
push
repnz
mov
imul
cmpsb
mov
popf
inc
mov
xchg
mov
and
pop
xchg
jg
paddusb
repz
adc
cmpsb
sbb
jno
call
sahf
repz
std
xchg
lret
int3
shrb
mov
mov
out
out
lahf
sahf
and
out
int
or
fsts
xchg
ja
push
cld
mov
push
out
mov
clc
loopne
loopne
jl
in
pop
inc
cld
lahf
jno
fs
mov
pop
scas
es
and
jb
xchg
stos
fs
out
add
fcomps
js
inc
sti
jmp
or
pop
daa
adc
and
pop
add
sti
xchg
push
repnz
cmc
mov
sbbl
mov
xchg
pop
mov
dec
add
push
add
insl
aas
or
add
mov
fadd
xor
sbb
mov
xor
mov
xchg
ret
fimuls
fs
fcomp
jae
cmp
cld
imul
add
arpl
daa
fdivrp
js
or
roll
push
fisubs
leave
sub
out
mov
mov
flds
pop
pop
scas
sbb
dec
cmp
jno
cmp
mov
push
nop
lahf
clc
test
and
mov
out
lcall
xchg
movl
popa
jae
push
add
xlat
mov
aad
xchg
sub
or
lods
adcl
mov
jnp
test
outsl
mov
or
mov
ret
sbb
sub
icebp
ja,pt
xchg
cmpsb
dec
sahf
jmp
cmp
jno
adc
lea
sub
cmc
out
sbb
mov
out
jg
inc
lret
xlat
dec
enter
std
mov
push
ljmp
sbb
lock
int3
and
jle
dec
xor
xchg
stos
fildll
pop
mov
rcl
shrl
pushf
mov
movzbl
dec
in
mov
scas
das
out
lock
xor
jg
jbe
push
nop
jp
arpl
push
inc
sarl
sub
test
push
int3
mov
test
ljmp
mov
mov
icebp
test
mov
lods
push
pushf
jl
jle
ljmp
les
pop
pop
testl
les
test
xchg
das
cmc
or
cmpb
add
out
mulb
movsb
adc
or
sub
testl
jo
insl
int3
xchg
inc
stos
push
popa
pop
rclb
xor
mov
cmpsb
jle
out
adc
xchg
fbld
sbb
inc
and
movsb
lret
add
push
popf
imul
jno
test
cwtl
sbb
xor
inc
add
push
int3
dec
or
push
cmpsl
add
iret
mov
cld
idiv
ds
sarl
mov
data16
addr16
sbb
jle
popf
push
ljmp
int3
cltd
cwtl
push
jno
cmc
in
jmp
jne
adc
jecxz
push
stos
xor
or
push
aaa
imul
int
dec
push
sbb
cli
and
test
dec
out
cmpsb
sbb
sbb
jo
or
pop
movsb
and
jno
xchg
jl
inc
sbb
push
enter
sbbb
ss
xor
sti
in
or
mov
clc
rclb
mov
pop
arpl
mov
fisubl
pop
and
dec
mov
mov
cld
dec
dec
lahf
dec
jmp
sub
lods
das
or
sarb
jbe
or
jle
cmp
inc
lcall
mov
js
xchg
fs
mov
loope
addb
movb
fadds
and
mov
or
pop
movsl
mov
lds
dec
int3
sub
and
mov
jns
fbld
mov
jmp
mov
mov
jl
in
add
es
lea
push
sub
dec
jle
mov
xchg
loopne
into
lcall
insb
sarl
ja
imull
fildl
mov
fwait
cld
call
aaa
inc
data16
push
pusha
jmp
mov
arpl
cmp
mov
ljmp
call
sub
jp
xchg
orb
insb
fisubs
mov
fs
xchg
mov
out
shl
inc
pop
add
orl
clc
leave
aam
popf
sub
and
gs
mov
adc
jge
mov
out
xorb
pushf
out
lcall
cli
and
lahf
adc
adc
xchg
sub
pushf
sbb
jge
add
andb
pop
test
dec
and
aas
adc
jae
insl
mov
mov
out
dec
lods
aam
movl
mov
mov
push
add
std
mov
push
in
inc
and
jo
sbb
fiadds
push
stos
mov
lock
sub
add
xchg
push
call
inc
xor
loop
cs
aam
js
sub
leave
rcrb
inc
push
test
xchg
cmp
std
es
jno
push
clc
ret
jmp
and
fdivs
test
in
movsl
sbb
test
lret
int
aam
xor
imul
cwtl
stos
movsl
pop
inc
ja
mov
test
in
sbb
insb
aam
pusha
cs
sarl
iret
sbb
out
mov
and
insb
das
pusha
xor
loopne
push
dec
not
fildl
xor
fucomi
xchg
pop
arpl
mov
je
nop
dec
dec
jbe
push
mov
jnp
cmp
repz
push
insl
mov
add
dec
fldl
loopne
jmp
inc
adc
push
repz
mov
mov
iret
mov
lcall
popf
sbb
js
add
fmull
pop
cs
jge
repnz
mov
mov
push
or
scas
pop
push
push
fcoms
adc
aas
shrl
in
movsl
fs
xor
mov
cli
and
mov
pusha
push
xor
sbb
pop
dec
shlb
loop
call
in
nop
and
and
lahf
push
mov
mov
outsb
outsl
push
mov
mov
test
xchg
inc
popf
jl
int
fistpll
dec
dec
call
mov
push
sub
into
lods
in
mov
mov
sub
das
fsubl
outsb
pop
cld
fs
cmc
jp
ja
xchg
int
loope
sub
mov
inc
push
stos
sbb
aas
xchg
lret
fmull
inc
dec
nop
js
icebp
and
or
lahf
pop
clc
jmp
cmp
xchg
and
mov
std
push
and
jns
jb
push
xor
mov
aad
dec
mov
mov
imul
or
xchg
lret
imul
dec
sti
inc
and
int
scas
stc
sub
pushf
fs
cmp
and
iret
pusha
iret
es
xor
stos
mov
pusha
mov
jmp
enter
shrl
lret
mov
insb
xchg
leave
xor
xorb
outsl
imul
jmp
fistpl
mov
into
inc
pushf
push
xor
mov
add
aaa
test
jb
xchg
hlt
or
cmp
lea
repz
idivb
ja
fistl
push
outsl
sbb
sti
or
in
xchg
xchg
mov
ja
xchg
jbe
and
shrl
cmc
pusha
rorb
repnz
push
sahf
xchg
xchg
pop
push
mov
sbb
fs
pop
dec
cmc
sbb
mov
adc
pop
rcl
jae
jmp
sbb
adc
xchg
pop
testl
mov
mov
es
fiaddl
inc
lret
xchg
inc
sub
sub
mulb
outsl
out
adc
sub
mov
sub
out
in
xchg
ficomps
adc
daa
mov
jmp
inc
out
clc
mov
sub
inc
jnp
rcr
stos
mov
push
mov
xorb
lods
nop
ljmp
cmpl
lds
cwtl
jbe
cmp
bnd
xor
imul
imul
adc
imul
pushf
cmpsb
gs
push
adc
in
in
add
daa
xorb
sub
and
in
dec
pop
xor
cmpsl
sub
or
dec
push
pop
stc
or
mov
dec
dec
int
push
and
sbb
xor
imul
or
lcall
outsb
cmp
pop
sbbl
sub
pop
scas
ret
pop
xchg
xchg
out
scas
push
ds
aam
pop
fimull
loop
addl
xor
rcll
jge
in
xor
bound
inc
lret
pop
push
mov
movsl
pop
xor
fstps
xchg
pushf
pop
cli
push
mov
das
lea
test
rclb
add
sbb
mov
adc
movsb
mov
insb
or
fs
scas
out
xor
mov
gs
inc
sar
lock
sbb
mov
test
je
iret
sbb
and
fs
lock
pop
push
iret
add
mov
sbb
add
je
outsb
pushf
icebp
dec
pop
fwait
or
and
clc
test
imul
xchg
jge
jnp
enter
sbb
repnz
lock
xor
pop
data16
pop
xor
mov
or
std
in
xchg
cmp
jle
stos
repnz
mov
xchg
aam
xchg
mov
stos
test
adc
data16
xchg
cld
sti
movb
adc
push
jo
iret
test
mov
test
xor
lahf
mov
sbb
je
mov
sub
fwait
je
fnstenv
cmp
addr16
and
mov
xor
add
sahf
insl
imul
and
jo
add
jle
pop
shl
push
jle
or
sub
cs
sub
loopne
or
dec
movsb
lods
test
aad
inc
mov
insl
adc
sub
lret
data16
lret
test
mov
gs
add
gs
enter
mov
sbb
iret
out
mov
and
popf
mov
sti
shrb
xchg
mov
test
dec
jne
hlt
cmpsl
ja
mov
xchg
dec
movsl
lock
push
push
aas
add
jo
lods
inc
out
movsb
xor
push
or
push
push
cmpsl
adc
test
repnz
jbe
pop
pop
xchg
decl
jae
cmp
pusha
or
rclb
adc
mov
sub
in
xor
sub
in
repnz
leave
iret
jnp
mov
push
sbb
insb
addr16
out
push
push
rcl
repnz
fistpl
or
js
sti
fbld
cmp
xor
cs
popa
repz
movsl
jg
mov
cwtl
push
mov
pop
inc
pop
xorl
shlb
int
enter
jo
mov
jns
sbb
rcll
mov
cmpsb
mov
inc
ljmp
lahf
xor
mov
icebp
outsb
jg
sub
push
cld
sbb
repnz
push
sub
adc
mov
outsl
aad
fidivl
adc
popf
xchg
xor
jmp
jg
mov
ret
enter
cmp
inc
js
adc
push
pop
mov
or
lods
jnp
mov
sub
push
sub
jg
aam
lahf
push
mov
xchg
cmp
in
push
xchg
jmp
popa
es
insb
int
idiv
idivl
add
imul
imul
mov
inc
mov
clc
mov
addr16
add
or
ret
cmpsl
mov
orl
cmova
dec
push
or
cmp
test
mov
repnz
mov
push
sbb
sub
outsb
shl
call
fs
push
cmp
mov
mov
inc
jl
jmp
jae
and
xor
push
jo
cmp
pushf
push
lods
sub
sub
enter
test
scas
mull
or
push
mov
ja
jae
clc
fstp
and
inc
jl
mov
dec
xor
lds
cld
xor
sbb
push
test
mov
aad
push
fistpll
mov
push
xchg
std
jno
fndisi(8087
or
out
lods
clc
pop
jb
pop
cld
pop
std
pop
arpl
mov
pop
mov
incb
cmp
mov
shll
mov
das
mov
cltd
loop
in
cmpl
push
jnp
adcl
jle
xchg
into
dec
lcall
mov
out
addl
movsb
inc
push
add
popa
add
sbb
fstpl
cmp
lods
insl
out
paddsw
dec
aas
stos
cmpsb
mov
cltd
sbb
sbb
jb
repnz
std
cwtl
jae
loopne
imul
shll
xchg
dec
jnp
mov
loope
lock
pop
popl
scas
or
mov
nop
mov
mov
lcall
in
mov
jmp
aas
enter
add
sbb
lods
push
stc
mov
ds
shlb
jmp
pushl
shlb
or
std
or
stos
inc
loope
mov
mov
adc
xlat
mov
mov
hlt
mov
jmp
inc
add
lock
movl
loope
test
lods
loop
cmp
xor
mov
dec
aaa
mov
je
jo
pop
repz
lret
jl
stos
ds
sti
mov
cmp
cmc
push
fisubrs
lods
arpl
xchg
mov
xchg
mov
mov
insl
dec
fwait
imul
test
sub
jg
push
shrl
into
loop
lret
mov
jbe
xchg
sbb
movswl
jg
lahf
aaa
cmp
pusha
stos
inc
test
dec
mov
xlat
int3
je
pop
mov
jns
push
sbb
test
jl
jl
push
dec
ss
gs
or
jge
insb
and
aad
aas
fisubrl
neg
int
lods
inc
aam
cltd
je
xor
pop
sbbb
sbb
inc
cmc
mov
ficoml
rep
xchg
push
xchg
mov
dec
idivb
push
pusha
das
pop
sub
incb
outsl
mov
das
cs
add
addr16
sbb
test
loopne
cmp
xor
lcall
ljmp
gs
sbb
jle
sbb
push
push
sub
test
mov
sbb
mov
sub
das
iret
mov
arpl
imul
pusha
push
mov
xchg
pop
mov
loopne
sahf
mov
or
sub
data16
mov
in
xor
call
ss
dec
jg
mov
jge
arpl
xchg
ja
mov
std
xorb
mov
mov
mov
movsb
sarl
fadds
and
sub
inc
inc
in
enter
in
ljmp
add
or
sbb
in
pop
jecxz
mov
fistl
xorl
push
inc
mov
add
outsb
xchg
mov
cmp
sbb
leave
pop
stc
jb
loopne
sub
jne
add
call
stc
push
scas
jl
insl
lcall
push
inc
push
sbb
cwtl
push
or
cltd
push
mov
cmp
mov
or
sub
jmp
push
lock
xor
fsubp
cmpl
cmpl
pushf
cwtl
fisubs
mov
jbe
mov
add
fstps
insb
repz
lea
xchg
clc
add
in
mov
xlat
fimull
loop
xchg
mov
add
inc
stc
xor
or
clc
add
add
lahf
add
nop
outsl
xchg
push
mov
mov
movsl
les
out
jae
jne
loop
pop
bound
cmpsb
sub
xor
inc
test
jns
fstps
negb
mov
ret
out
lret
imul
mov
lods
je
mov
cmc
or
jmp
imul
ds
lret
scas
sub
dec
adc
mov
out
sbb
and
and
mov
mov
mov
mov
test
loopne
and
hlt
nop
or
test
sti
add
or
shll
imul
sub
mov
add
sub
ljmp
jnp
sub
outsb
sub
push
xor
les
aas
lea
inc
test
inc
push
inc
inc
and
pop
sbb
pop
std
cmp
leave
dec
ret
cmp
mov
pop
insb
stos
mov
jne
inc
jb
lret
insl
in
imul
and
dec
out
faddl
scas
and
inc
in
aaa
ljmp
sbb
scas
div
xchg
shlb
jbe
push
imul
cmp
inc
popf
aam
mov
adc
mov
imul
add
or
pop
sti
or
inc
cwtl
bound
jmp
or
pop
fdivrl
inc
out
mov
insb
pop
xchg
mov
pusha
rolb
ret
divb
mov
cmp
lds
scas
adc
jno
dec
pop
jbe
ja
mov
and
aad
inc
mov
dec
int
addr16
fwait
inc
mov
push
sub
cmp
inc
or
jbe
jae
push
rcll
cmp
dec
push
sbb
je
jecxz
fstpt
push
and
ficoml
xor
outsb
adc
das
cli
xor
jns
shl
ret
inc
lds
sub
xor
pop
leave
data16
and
push
bound
movsb
mov
cmc
jl
mov
or
loop
xchg
push
imul
sbb
xor
or
insl
push
dec
ljmp
negb
fwait
jge
xchg
cmpl
decb
addr16
cmpsl
jg
adc
gs
call
shll
mov
aas
int3
mov
dec
movsb
lret
cmp
aam
or
loopne
and
arpl
jno
imul
jnp
popl
jb
push
je
or
in
jne
and
mov
lcall
jg
pop
dec
pop
inc
or
stos
popf
cs
inc
lcall
push
sbb
push
dec
cs
orb
sbb
mov
sahf
push
dec
aam
ss
movl
jne
sbb
inc
aaa
test
or
and
cwtl
filds
mov
imul
jl
push
cmpsb
adc
push
adc
pop
cmc
dec
jne
idivb
movsb
sub
inc
sarl
and
mov
pop
pop
jo
sbb
xchg
cmpw
stc
mov
cld
xor
sbb
push
imul
leave
lds
sbb
inc
xchg
ror
mov
fistpll
pop
frstor
leave
dec
mov
shll
fs
das
aaa
scas
xchg
pusha
push
inc
sbb
mov
int3
pop
xor
js
movsl
arpl
hlt
push
daa
rorb
jecxz
xor
loopne
mov
mov
outsl
push
cli
in
sub
cmp
and
fs
iret
movsb
ja
popa
push
add
push
push
jmp
sbb
push
mov
push
push
push
sbb
sti
leave
push
lret
push
loope
int3
xchg
mov
repz
scas
sub
lods
popf
xor
mov
lds
movsl
lahf
pushf
xchg
push
fnstcw
stc
add
lods
sub
fucomip
pusha
fucomi
sbb
test
cwtl
shlb
jmp
pop
push
pop
insb
sbb
and
leave
mov
cmp
or
cltd
hlt
jae
in
cmpl
and
sti
push
pop
sbb
push
in
leave
loop
lcall
loopne
push
push
mull
movsl
bound
fimull
dec
pop
or
call
pop
pop
into
aad
xor
lcall
add
outsb
insl
out
adc
or
insb
rcl
loope
mov
dec
xor
mov
loopnew
cmp
les
push
or
mov
ljmp
hlt
pop
pop
repnz
xchg
sbbl
dec
andl
dec
jns
and
and
call
push
pop
push
test
js
gs
push
jae
cmp
outsb
shlb
in
pop
iret
adc
push
mov
aam
inc
or
mov
cltd
jo
adc
add
aas
mov
pop
jge
xchg
push
aad
out
stc
push
xchg
xchg
call
xchg
out
outsb
and
mov
ds
adcb
mov
or
add
lea
aad
cmpsb
adc
mov
lret
aas
flds
or
jp
push
fwait
mov
outsb
stos
sbb
ja
and
xor
add
mov
dec
fstps
rol
dec
fs
and
es
fisttpll
or
pop
je
in
mov
insl
adc
imul
hlt
jns
repz
inc
sub
in
icebp
xchg
xor
rolb
roll
cli
dec
ss
shl
mov
repnz
stos
in
mov
out
mov
leave
jle
pop
stos
aad
test
jo
mov
paddw
cmp
xor
cmp
fwait
loope
cmpsl
stc
dec
jno
mov
aaa
jb
addr16
dec
movsl
push
movsb
xchg
imul
pop
jne
ss
fildll
mov
leave
sbb
outsl
nop
into
sarl
inc
incl
dec
popa
mov
jle
fistps
fs
test
dec
pop
movsl
inc
in
int
icebp
cli
pop
adc
rorb
nop
scas
and
mov
jg
bnd
inc
push
jne
push
imul
out
insl
mov
push
sub
shrb
hlt
mov
call
mov
test
and
inc
daa
ss
push
mov
leave
dec
int
lods
lods
jg
pop
sbb
repnz
sub
cmp
rcrl
and
xchg
popf
roll
add
pop
ret
jmp
imul
popa
sbb
pop
es
fwait
ret
in
dec
popa
out
and
push
inc
bound
pop
fsubrs
aam
repnz
repz
fcompl
cltd
pop
jnp
out
add
xchg
enter
sbb
fldenv
mov
lea
xchg
scas
jmp
push
mov
push
sub
dec
in
pop
popf
jl
and
stos
fs
sbb
mov
add
and
jg
inc
incl
outsb
sbb
and
fwait
je
push
dec
adc
inc
lret
xchg
xchg
in
or
je
movsl
dec
mov
fdivs
rcrl
dec
mov
lods
cmpsb
inc
push
stos
xchg
ret
lods
push
mov
pop
int
sahf
jmp
and
lock
das
jns
dec
xor
test
mov
test
fmuls
add
ljmp
addr16
xchg
cltd
or
cmpb
repnz
cld
cld
pop
dec
lods
push
ds
mov
repnz
push
inc
lock
outsb
jg
jl
mov
lods
inc
pop
test
inc
repz
into
pop
lods
and
pop
jo
push
add
sub
idivb
cmpsl
push
or
sub
cmc
sbb
mov
sar
scas
add
sub
les
sub
push
insl
rolb
or
add
mov
or
lfs
dec
lods
inc
mov
neg
xor
jmp
insb
mov
push
ret
xchg
outsl
jg
jecxz
mov
xor
mov
nop
outsl
scas
xchg
push
inc
sub
test
test
mov
and
movsl
mov
cmp
xor
js
mov
shrb
xchg
add
sbb
sbb
std
faddl
cli
icebp
nop
jle
push
iret
ljmp
test
out
dec
stos
dec
cmc
jecxz
mov
cmc
push
lea
stos
aas
dec
sbb
or
imul
jns
addr16
cmpsb
jle
inc
movsl
gs
rclb
cli
jg,pt
mov
outsl
into
int
arpl
addl
mov
inc
shll
out
ja
jp
or
mov
arpl
in
dec
jo
sarb
push
mov
scas
xor
arpl
in
je
int
and
mov
sbb
add
aaa
std
inc
mov
push
xchg
xor
lods
mov
out
out
xor
adc
push
or
ds
mov
inc
cmpsb
loope
jl
and
push
dec
aam
cltd
cmp
addl
leave
dec
jge
xchg
sub
sub
pusha
pop
lret
dec
popa
shll
inc
push
les
outsl
jle
adc
add
leave
inc
mov
and
adc
and
xlat
loop
fadds
je
lds
pushf
mov
mov
stc
pop
inc
data16
mov
add
lret
push
adc
and
xchg
or
nop
loop,pn
jo
push
inc
xchg
add
xchg
ret
jecxz
mul
jmp
enter
inc
cmp
pop
adc
call
add
pop
lea
in
out
pushf
mov
push
je
outsl
lcall
jno
xor
cmp
add
xor
xor
loopne
push
cmc
mov
push
pushf
push
or
dec
inc
mov
adc
inc
imulb
lcall
pop
jo
pop
fwait
pop
xchg
adcb
loope
lods
push
inc
andb
push
mull
adc
mov
out
mov
sub
stos
loope
nop
jo
lods
xor
add
mov
lahf
outsl
incl
cld
push
inc
das
inc
insb
fbld
dec
push
jmp
mov
add
cmp
insb
jle
bound
mov
jbe
and
xchg
into
insl
and
pop
pop
movsb
into
les
lea
xchg
jae
sub
pop
dec
jecxz
mov
dec
adc
arpl
ds
push
cmp
stos
stc
mov
push
pusha
clc
push
ret
xchg
dec
aam
jp
scas
jo
fisubrl
jae
fs
popa
shll
loop
xchg
gs
and
lret
add
insb
xchg
rcll
ljmp
sahf
repz
and
mov
cmc
xchg
xlat
outsb
les
mov
xchg
rorb
stc
jl
mov
pop
hlt
popa
sbb
sarb
add
pop
dec
jl
mov
sub
jecxz
xchg
inc
jl
pop
pop
stos
pop
sub
inc
pop
mov
sti
push
bound
outsl
cmpsl
push
or
mov
aam
insb
adc
arpl
or
rorb
push
ljmp
loope
repz
test
xchg
out
and
jnp
int3
ret
stos
int
xor
xor
out
ds
xor
mov
cwtl
and
mov
pop
or
and
scas
push
mov
inc
xor
fnsave
pop
add
sbbl
ss
popf
bound
cmpsb
bound
sbb
jno
xlat
xchg
fcomps
xchg
loop
pop
push
and
lea
daa
repz
mov
mov
movsb
fucomi
cwtl
stos
add
dec
mov
mov
das
xor
adc
test
popf
jmp
ret
std
ljmp
scas
jnp
cmp
cmpsl
xlat
pop
fsqrt
rolb
test
lods
push
out
negl
mov
inc
aaa
imul
mov
arpl
sub
rsm
mov
add
sbb
mov
jge
cmp
fwait
push
lods
testl
mov
adc
xchg
add
fcoms
jp
and
fnstsw
lock
enter
fisubl
fstpt
jp
push
and
xchg
push
adc
ret
sbb
xor
push
pop
pop
push
in
aas
and
jnp
or
sbb
aad
mov
repnz
rcrb
and
bound
jmp
mov
loopne
xchg
adc
cmp
cwtl
jno
aam
add
dec
or
rorb
dec
lods
decb
shlb
adc
adc
and
lods
mov
sub
stc
sub
and
adc
mov
arpl
out
rorb
or
pop
lret
add
ja
mov
int3
in
push
xor
loopne
js
push
inc
and
imul
dec
scas
repnz
push
in
xchg
cmp
mov
inc
mov
adc
out
aam
sub
mov
enter
lcall
fistpll
xchg
sahf
add
jmp
and
cmp
push
in
outsl
stos
jg
add
jle
insb
test
sub
sub
jecxz
push
sbb
fwait
movzwl
imul
cmc
inc
jge
push
addr16
jle
fwait
xchg
mov
inc
fadds
shll
and
daa
xchg
jle
inc
jle
sbb
mov
or
int
sahf
icebp
pop
mov
push
ja
scas
push
iret
rcrb
idiv
lock
mov
pop
push
push
clc
push
das
fcmovne
fcoms
dec
adc
in
jo
sbb
outsl
mov
jecxz
jge
dec
mov
cmpsl
and
jle
dec
and
lea
fsts
mov
add
mov
adc
dec
insb
push
loop
xchg
xor
icebp
mov
mov
dec
inc
lahf
mov
xor
aam
std
arpl
sub
out
gs
cltd
push
lods
inc
inc
push
fidivrl
mov
push
lods
movsl
pop
adc
add
sub
inc
cmp
rcr
pop
mov
mov
fcmovbe
rcrb
ret
stos
sub
xor
push
and
and
jmp
xlat
not
fmuls
mov
dec
dec
sarl
les
in
rcrb
push
cmp
fdivrl
mov
mov
js
adc
pusha
xchg
sbb
jns
mov
sub
cwtl
adc
dec
repz
xor
gs
sub
cmp
pop
xor
sub
xor
mov
mov
mov
iret
mov
int3
imul
dec
daa
ja
fldcw
pop
out
les
mov
or
lcall
mov
sbbl
xchg
mov
xchg
mov
xor
adc
jnp
sub
rcll
sti
inc
jge
jcxz
fwait
jo
or
fwait
push
inc
les
stos
fnstcw
les
lea
daa
ds
mov
out
dec
xor
sbb
cli
inc
repz
or
add
jae
shlb
fwait
mov
insl
scas
pop
movsb
push
mov
loopne
adc
dec
xabort
test
fimuls
sub
in
arpl
js
and
insl
int3
xchg
loope
or
cwtl
in
mov
pop
incl
jecxz
and
mov
cmc
mov
imul
sbb
pop
std
test
push
inc
dec
dec
inc
daa
pusha
push
or
outsl
cmpsl
and
movsb
mov
test
inc
popw
aas
xor
cmp
and
and
sub
add
mov
into
leave
or
rorl
iret
pop
cli
inc
es
jae
xchg
and
in
mov
pushf
out
stos
xchg
ljmp
or
pushf
sub
insl
adc
mov
outsl
jmp
outsb
cmp
mov
jecxz
cmp
sahf
icebp
xchg
inc
push
fwait
push
mov
inc
pop
dec
cmp
ret
neg
mov
cmpsl
mov
jge
cwtl
int
loope
push
adc
imul
into
mov
mov
jae
popf
or
xchg
pop
mov
das
rorb
add
addr16
push
inc
adc
andb
mov
push
shl
ds
sarl
adc
aaa
jg
icebp
mov
sbb
out
xor
dec
clc
insl
stc
pop
jno
jo
push
jle
cmp
sbb
cmp
addr16
push
jae
and
pushf
mov
mov
arpl
out
out
sbb
dec
lret
xchg
stos
cltd
add
scas
shlb
mov
inc
mov
insb
imul
sarl
adc
test
loopne
cmpb
lcall
idivl
dec
stos
fstl
cmp
dec
dec
push
imul
push
sti
in
adc
push
mov
fdivrs
mov
movsb
je
or
pop
outsl
push
pop
mov
stos
xchg
or
ja
movsl
stc
push
push
imul
divb
push
and
jecxz
gs
sarl
iret
and
imul
mov
ret
pop
sbbl
sbb
inc
fwait
sbb
xchg
imul
rol
and
iret
pop
vmovntpd
inc
cmp
mov
pop
and
out
jmp
loope
cld
mov
jp
and
sbbb
dec
push
sub
xchg
and
and
push
cmpsl
add
adc
cmp
pusha
sbb
hlt
int3
push
or
pop
mov
hlt
std
stc
inc
cwtl
push
push
loope
cmp
adc
aaa
adc
mov
ja
ficoms
dec
ja
sbb
mov
adc
idivl
ret
push
push
xor
mov
mov
mov
push
jo
out
jo
jp
jl
dec
push
cmp
fs
fs
cmp
repz
insl
push
or
adc
popf
lds
cwtl
mov
xlat
mov
jbe
lea
enter
and
lret
mov
mov
es
js
or
push
stos
leave
xchg
inc
push
ds
sbb
cs
pop
xchg
fidivrl
xchg
fmul
sub
aam
loop
xchg
cs
bound
xchg
orl
inc
aad
add
and
mov
mov
mov
gs
popa
fs
outsl
mov
frstor
fisubl
mov
mov
cltd
push
mov
push
pop
mov
jecxz
dec
out
frstor
jge
lds
mov
std
mov
push
xor
push
jnp
cmc
das
and
pop
imul
mov
xorl
or
push
pop
into
test
xor
stos
xchg
cmpsb
adc
mov
ficomps
push
xor
arpl
out
aaa
adc
cmpsb
push
push
fxch
aas
incl
rolb
fisubrs
roll
into
test
outsb
in
sbb
mov
addr16
inc
imul
mov
je
insl
xchg
jb
add
jne
fldenv
adc
frstor
push
fbld
adc
orb
mov
gs
in
je
lret
add
mov
mov
insl
insb
popa
mov
clc
mov
lret
out
sbb
daa
and
or
inc
test
fidivrs
fbld
repnz
sub
lret
test
pop
aas
imul
mov
arpl
push
jne
scas
ret
sbb
jnp
in
mull
push
shl
sub
shrl
call
mov
jb
icebp
loope
fcmovnbe
cli
jno
mov
jle
push
sub
in
push
mov
shr
ja
int3
test
sahf
movsl
imul
stos
xchg
popf
xor
sub
in
xchg
fcompp
pop
shrb
mov
fists
or
jmp
aaa
dec
cmpsb
decb
xlat
jo
xor
jge
in
mov
pop
push
daa
and
push
mov
je
stos
dec
add
pop
and
sbb
iret
dec
sub
cmpsb
mov
in
xchg
sub
int
outsl
xchg
clc
test
xor
mov
ds
and
lret
xor
movsl
mov
lret
xor
stc
leave
and
mov
loopne
fwait
mov
adc
inc
int3
pop
lods
and
push
pop
repz
lcall
xor
jge
movsl
js
adc
mov
sub
xor
mov
movsl
jmp
xchg
cmc
in
popf
xor
lcall
xor
movsb
and
xchg
push
aad
sub
call
or
dec
or
add
ds
push
mov
push
in
sbb
fnop
ds
imul
xor
pop
sahf
cld
mov
inc
sub
sbb
call
push
sbb
push
addl
popa
aam
test
pushf
sub
mov
push
out
insb
inc
in
rcrb
add
arpl
sbb
mov
adc
test
mov
pop
sbb
mov
inc
add
fisubs
lahf
mov
pop
xor
int3
scas
xchg
test
adc
pusha
and
mov
notl
xor
verw
pop
adc
ljmp
push
bound
fsts
or
mov
dec
push
std
cltd
sub
addr16
lcall
or
xchg
rolb
test
jecxz
cmp
lock
sti
push
ret
in
stos
movsb
and
lret
adc
shrl
inc
fadds
clc
loop
rclb
call
cmpsl
leave
sub
stos
cwtl
and
push
dec
xor
cmp
push
sub
fs
mov
mov
iret
mov
jle
out
test
adcb
cmp
aas
sarl
push
mov
cli
out
sbb
or
test
cmp
loopne
ror
shrb
add
inc
cmp
daa
dec
les
int3
xchg
pop
pop
push
sub
jmp
pop
test
leave
jne
aaa
or
dec
xor
aas
test
or
lret
or
xor
rclb
sbb
push
adc
or
ljmp
add
mov
sti
jmp
ret
hlt
sbb
mov
xlat
bound
hlt
add
cs
jo
std
repnz
mov
mov
xchg
mov
addb
adc
cmp
outsl
pop
popf
or
stc
jmp
mov
cmp
xor
shlb
loopne
pushf
cmovle
int3
push
out
cmp
int3
and
adcl
js
dec
jmp
sub
movsb
or
addr16
xchg
jno
ss
loopne
jne
and
xchg
in
sbb
dec
adc
mov
out
movsl
imul
test
call
or
adc
cvtdq2ps
data16
dec
pop
cli
das
dec
pop
and
lret
sbb
adc
aam
mov
loop
jnp
mov
and
adcl
arpl
and
ds
push
inc
and
dec
cmc
in
out
pushf
xchg
mov
jmp
sbb
sbb
jp
aad
xchg
dec
out
xor
fwait
stc
mov
xor
xor
outsb
es
mov
xchg
jo
or
mov
inc
xor
les
jo
int3
pop
mov
xchg
and
aam
and
mov
mov
sub
sbb
fsub
clc
in
jae
mov
mov
pushl
xchg
xchg
push
insb
movsl
ss
push
pop
push
adc
xor
fsubrs
les
mov
aam
fisttps
lcall
lds
add
enter
test
cli
xorl
repz
lcall
ret
mov
dec
mov
adcl
ficomps
xor
int
rorl
dec
das
inc
jns
push
pushl
jp
call
rorb
xchg
popf
scas
mov
insl
movsb
xchg
push
sub
pop
shrl
fwait
or
xchg
test
xchg
lea
arpl
push
or
mov
mov
fsubl
dec
movsl
push
adc
sbb
mov
cmpsl
out
inc
into
in
adc
sbb
sub
add
inc
movsl
mov
cli
xchg
and
push
fidivrs
dec
and
out
lods
xor
sub
mov
xor
inc
mov
inc
data16
jno
clc
ds
dec
sbb
movsl
cmp
mov
addb
fldcw
testb
clc
lds
push
sub
fstpl
cwtl
xchg
adc
mov
adc
fnstcw
movsb
xchg
sbb
xchg
dec
dec
pop
fwait
mov
fidivl
movsl
vrsqrtps
add
ret
inc
aaa
ja
repz
mov
daa
das
cmp
jnp
add
inc
inc
cmp
jo
and
pop
sub
push
les
or
jno
js
push
sub
inc
shlb
push
xchg
loope
sub
xor
xor
es
adc
pop
cld
ja
jecxz
push
push
jg
in
lret
and
stos
loope
sub
xlat
int3
inc
inc
dec
rolb
int3
and
je
stc
push
out
pushf
xor
insb
mov
shrl
adc
and
adc
mov
xchg
mov
decb
mov
pop
dec
xchg
pop
std
push
sub
popf
add
lcall
mov
sub
lods
test
add
push
mov
inc
dec
push
lcall
int3
gs
cmp
lea
mov
cmpsb
xchg
jmp
fcomi
pop
sub
negb
andl
ret
mov
movsb
push
popf
cmp
or
icebp
inc
cltd
mov
ficoms
lahf
dec
sarb
mov
je
mov
aad
cmp
popa
test
dec
aad
or
shl
mov
decl
cmpsb
jmp
call
mov
and
xor
xor
lods
cli
sub
das
fstpl
sahf
pop
lods
cli
pop
fwait
movsl
mov
mov
out
ss
push
lret
mov
cmpsl
inc
xor
test
cmp
adc
inc
mov
repnz
inc
push
cwtl
fimull
mov
or
rclb
mov
mov
xchg
int
xor
repz
sub
mov
push
pop
xor
ds
ljmp
fwait
nop
leave
cmp
in
sub
pop
xchg
mov
std
fidivl
cmp
lds
and
mov
outsb
in
sub
imul
fs
das
in
fdiv
mov
xchg
or
mov
pop
loopne
xor
imul
cwtl
rolb
in
je
mov
sub
jo
fsubrl
xchg
insl
jb
scas
bound
mov
sbb
dec
xor
mov
sti
mov
push
jns
sub
cmp
jne
push
push
nop
sti
scas
adc
pop
cmp
mov
mov
inc
or
xor
sub
les
int3
out
ror
fs
outsl
cld
dec
jne
test
cmc
hlt
aam
mov
in
nop
addb
xchg
shll
push
push
in
mov
push
cmp
xor
lods
cmpsl
sbb
lea
sub
jbe
dec
dec
in
sub
pop
cwtl
mov
shlb
cltd
jne
push
push
hlt
in
pop
jl
ss
in
lods
bound
or
je
or
daa
sarb
jmp
pusha
scas
clc
loop
jp
push
lea
push
xchg
je
scas
sub
or
stc
sub
test
je
fisubrs
jecxz
inc
je
add
out
mov
movsb
gs
mov
cmp
xor
je
inc
lret
jge
push
inc
call
cwtl
aaa
insl
fstpl
into
and
arpl
or
push
insl
mov
jo
mov
push
fcompl
mov
mov
loope
in
mov
cmp
rcr
jle
mov
sbb
in
lods
xor
dec
sahf
mov
out
test
sbb
in
test
sub
out
cli
and
cmp
mov
xor
jnp
fidivrl
icebp
test
pop
test
xlat
rep
imul
pop
out
xchg
dec
pushf
mov
leave
aas
jp
xor
and
mov
lcall
sbb
rcl
inc
jmp
lock
adc
addl
ljmp
jo
test
mov
lea
out
and
and
add
es
lahf
xorl
or
pop
jb
ds
or
cli
shll
arpl
sub
repz
test
clc
sti
outsl
or
lret
enter
jge
mov
in
mov
pushf
xchg
lods
sub
pushf
popf
pop
int3
cld
sub
cld
push
mov
lea
stos
inc
or
and
icebp
out
dec
adc
push
xchg
jl
or
push
and
and
sbb
mov
mov
je
cld
shll
sub
lret
lea
decl
cmp
fadd
mov
shlb
cld
xchg
jbe
lret
sbb
pop
dec
and
xchg
mov
mov
sbb
es
push
ljmp
mov
jno
and
popf
or
mov
mov
adc
mov
xor
or
lock
and
loop
jbe
cmp
shll
jbe
push
in
dec
sub
inc
xorb
adc
pushf
sub
arpl
scas
sub
mov
addr16
xchg
lds
fs
jns
enter
push
dec
nop
jge
xor
and
ja
pop
int
loope
shrb
inc
pop
adc
imul
inc
dec
mov
loope
ss
pop
or
mov
inc
pushf
aam
sub
xchg
sub
sub
xchg
mov
and
xor
lock
dec
pusha
jns
sub
sub
cmp
fisubl
mov
adcl
enter
pop
in
mov
mov
nop
int3
mov
dec
jp
bound
xchg
xchg
jecxz
mov
dec
pop
lret
jge
in
daa
pop
pop
sub
rcrl
jp
outsb
leave
mov
xlat
inc
cmp
mov
pop
cmp
jb
push
push
mov
cmp
adc
add
icebp
push
cmc
mov
ret
cmpsl
push
lret
mov
mov
gs
dec
and
add
int3
adc
push
shlb
inc
stos
adc
pop
mov
push
stos
jmp
cltd
pop
xor
fwait
mov
cmp
pop
xor
scas
pop
ds
xlat
sti
imull
out
or
ja
jns
cmp
addb
mov
or
jnp
ljmp
aas
divb
mov
and
in
call
mov
stos
mov
pop
inc
cmpsl
addr16
mov
popa
jo
aaa
adc
dec
pop
push
int
pop
ret
fdivr
pop
lods
cmpsl
push
loop
mov
js
sahf
jno
iret
jbe
pop
push
test
sbb
pop
adc
pop
mov
subb
mov
aam
dec
flds
sbb
add
out
movsl
popa
std
jo
push
push
adc
sub
adc
cmp
cltd
cmp
gs
xor
ret
shlb
loop
add
stc
dec
xchg
mov
mov
testl
sti
pop
sbb
xor
out
xor
adc
or
pop
fldenv
mov
mov
aaa
or
mov
jnp
dec
mov
mov
movsl
inc
pushf
jnp
jge
mov
mov
mov
out
jnp
pusha
inc
fisubl
pop
out
icebp
mov
movsl
and
mov
jp
mov
int
add
sahf
xchg
idiv
das
xchg
cltd
inc
mov
pop
mov
bound
dec
push
ffreep
out
outsl
std
ljmp
xchg
daa
jnp
lahf
push
mov
push
push
cmp
ss
add
push
das
mov
mov
outsl
scas
push
push
and
inc
push
adc
mov
outsl
adc
adc
sub
dec
rorw
jno
cmp
pop
pop
test
cmp
dec
test
pop
xor
mov
xchg
int3
test
ucomiss
cwtl
dec
outsb
std
dec
cmp
cmpl
rcrl
jno
inc
jnp
in
jbe
xchg
nop
inc
repnz
cmp
mov
inc
push
sub
jne
xor
mov
pop
mov
adc
cmp
sbb
sbb
es
fdivs
sbb
mov
roll
repz
pop
loopne
int
dec
mov
or
test
out
mov
pop
aad
cmp
adc
mov
ficompl
movsb
fwait
add
fs
jg
stos
mov
sarb
sub
ficomps
and
push
clc
mov
mov
mov
faddp
or
cmp
mov
sbb
out
xor
jb
test
and
jne
xchg
sub
insb
xor
push
inc
aad
mov
fs
imul
movsb
push
stos
dec
imulb
xor
fwait
or
jecxz
push
ret
mov
cwtl
rcrb
pusha
sbb
ret
or
aaa
lahf
push
push
dec
push
mov
testb
sahf
add
jns
push
cmpsb
cmp
out
cli
scas
pop
leave
pusha
xchg
jmp
dec
dec
outsb
lret
stos
shld
iret
mov
mov
test
enter
cld
inc
int3
mov
mov
and
and
ret
xchg
or
lret
xchg
cmp
pusha
icebp
lea
data16
xlat
cmpsl
adc
mov
pop
imul
add
cmp
jge
jns
mov
sbb
or
cmp
mov
cmp
lods
jl
xor
inc
cld
inc
in
dec
push
scas
push
roll
sbb
dec
jl
xchg
movsl
sbb
or
jl
pop
jnp
pop
cmp
orb
xchg
push
movsb
mov
jge
xchg
sbb
or
mov
test
divb
ja
in
rclb
jbe
subl
das
xor
sti
stc
bnd
xor
insl
or
daa
shrb
neg
or
ds
dec
or
mov
fistps
jmp
stos
int
sbb
call
shr
stc
or
pop
pusha
adc
subb
mov
xchg
lds
mov
pop
idiv
in
mov
stos
leave
ljmp
ja
add
mov
outsl
push
cmp
cmp
mov
xchg
or
adc
ret
ja
mov
lods
movsb
ret
fimull
xchg
sub
psubd
jbe
jmp
fdivrp
add
gs
mov
das
outsl
push
sti
lock
inc
xchg
adc
cmp
push
mov
sub
sbb
out
sbb
xor
sub
xor
dec
cld
inc
mov
insb
data16
cltd
test
push
mov
decb
jmp
push
ljmp
cltd
cld
push
cmpsl
movb
push
dec
sub
or
mov
and
lcall
mov
inc
loop,pt
xchg
jbe
jo
pop
jns
sub
mov
sahf
sti
stos
sbb
mov
leave
loop
or
mov
jb
stos
jl
enter
les
jbe
aaa
popf
adc
enter
sub
in
mov
add
pushf
pusha
mov
in
fmuls
test
jg
int3
dec
sahf
pushf
jmp
push
lcall
mov
mov
mov
adc
movsl
mov
lea
cld
sbb
or
mov
jecxz
xchg
nop
imul
pop
pushl
and
loopne
add
inc
mov
je
push
and
arpl
stos
idiv
jl
jg
sub
pop
cld
dec
dec
pop
gs
xchg
movsl
sbb
mov
xchg
mov
push
sub
pop
mov
scas
fiadds
stos
and
mov
shll
xchg
hlt
cmpsb
mov
sub
stos
jae
add
mov
hlt
xchg
dec
test
fiaddl
negb
nop
sub
pop
push
mov
sub
imul
xor
xchg
aam
xor
pop
mov
jmp
push
push
mov
into
adc
subb
in
pop
fcompl
int3
loope
addb
aad
dec
inc
or
lods
mov
add
jb
adc
ficoml
push
mov
je
fwait
adc
icebp
call
mov
xor
addr16
sbb
add
mov
jl
fdivrl
int3
mov
lea
cltd
lea
pop
scas
inc
mov
test
jae
in
vpmacswd
mov
push
lods
push
cli
fsubl
ja
jg
jne
imul
push
mov
sub
jbe
sbb
es
nop
cmp
mov
xchg
ror
rolb
pop
jne
aad
cwtl
inc
cli
fbld
pop
cmp
cmc
aaa
movsl
js
in
daa
js
cmpl
mov
mov
stos
fisttps
xchg
mov
push
xchg
icebp
call
xchg
cmp
add
lea
js
insb
sti
cmpsb
jp
pop
inc
ja
push
dec
les
mov
mov
test
pop
sbb
mov
xchg
sub
mov
dec
fs
fadd
out
jmp
int
mul
cmpb
or
stos
cltd
jbe
rcrb
adcb
adc
pop
xchg
sbb
icebp
subl
lods
or
cld
call
mov
xorl
and
pop
cmp
add
enter
cmp
cld
mov
push
fidivl
pop
xchg
insb
daa
fsubl
ret
bnd
andb
or
or
cmp
cmc
sbb
mov
jno
xchg
sub
aam
in
leave
or
mov
idivl
stos
or
adc
sub
std
insb
ljmp
adc
scas
movsb
and
stc
std
lea
pop
ss
xlat
or
push
push
cmp
mov
mov
pushf
int
mov
add
out
lock
cmp
aam
mov
sub
inc
movsb
xor
adc
test
clc
sub
pop
jno
xor
aad
in
mov
jg
fdivl
xchg
daa
fsubr
mov
inc
insb
aam
sub
lods
icebp
fistpll
xor
push
arpl
xchg
fisubl
mov
gs
inc
push
adc
pop
sti
loop
pop
repz
outsb
je
sub
js
aaa
push
xor
outsb
in
imul
mov
scas
into
int
cmp
lea
push
in
inc
push
mov
loope
shlb
jne
pop
sti
rcll
dec
pop
push
and
add
add
mov
sbbb
jl
insb
or
arpl
std
es
mov
icebp
mov
data16
add
sahf
inc
mov
in
test
movsl
arpl
int
dec
xor
push
ficoms
shrb
mov
in
sbb
add
pop
lods
stc
jbe
rcll
add
cs
mov
push
je
roll
arpl
push
xchg
adc
jb
mov
sbbl
cmp
pushf
in
jmp
roll
movsb
jne
enter
mov
adc
cmpsb
mov
xchg
arpl
insb
arpl
cmp
mulb
mov
mov
bound
iret
test
sbb
pushl
popf
out
repz
fistl
cmp
jmp
mov
or
sbb
loop
pop
lret
cmp
dec
cli
xchg
call
addr16
sti
in
nop
repz
mov
or
sbb
push
out
sti
aad
dec
rolb
xchg
negb
inc
sub
push
pop
loope
or
in
adc
cli
fcomps
std
shr
xchg
fidivrl
sub
cmp
lock
adc
out
stos
push
cwtl
mov
adc
fisubl
cli
outsb
std
and
and
jmp
sbb
fisubrs
mov
scas
gs
mov
xor
ja
mov
loope,pt
jl
dec
mov
xchg
jmp
sbb
sbbl
std
push
dec
loopne
mov
cltd
je
add
dec
repz
pop
stos
add
pop
ficoml
pop
mov
mov
jno
sub
jg
mov
bound
jmp
aad
lock
mov
and
outsl
sarb
movl
stc
xor
jbe
aam
xor
cmp
or
sub
mov
push
pusha
aaa
xchg
iret
jno
push
pop
lret
pushf
xchg
or
jp
push
ret
in
xchg
adc
addl
adc
cli
popf
out
addr16
add
mov
outsl
push
sahf
popf
inc
push
jp
cmp
jnp
mov
xor
pop
imul
dec
fstpt
paddq
fst
cmpsb
cmc
in
out
sub
push
cmp
mov
outsb
insl
addr16
mov
push
mov
dec
sub
and
xchg
pop
insl
xlat
jb
push
pop
call
sbb
cltd
std
jnp
mov
pop
and
mov
xchg
xchg
xor
loop
jl
adc
mov
mov
sub
mov
cmpsl
adcl
fs
int
js
xor
inc
sbb
ret
dec
dec
lcall
add
cmpsl
jp
push
push
sbb
push
aad
in
mov
push
xchg
call
repz
ret
sbb
lahf
imul
fs
pop
xlat
gs
fdivs
cmpsl
mov
test
loope
jbe
jecxz
sbb
add
xchg
add
dec
rorb
cmpsb
sbb
test
mov
cmpsb
and
test
mov
adc
xchg
in
push
xchg
notl
dec
sub
dec
inc
jmp
int
roll
sub
lahf
in
fisttpll
in
ja
sbb
dec
stc
leave
cltd
ds
pushf
jnp
fdivs
in
xlat
jmp
cmp
pop
xchg
lea
fsubrp
mov
cli
pop
push
fdivrl
sbbl
clc
sbb
es
fidivs
lea
fdivr
test
xor
negl
sahf
fs
popa
repz
pop
sbb
inc
fcmovb
adc
imul
push
pusha
nop
fcmovne
repnz
add
or
cwtl
dec
and
jp
mov
imul
clc
lods
lcall
in
dec
sti
data16
lods
mov
or
adc
push
loop
pop
rcr
loop
mov
loopne
pushf
xchg
pop
or
mov
inc
or
jne
adc
int3
xchg
rclb
inc
jo
pop
int
bnd
mov
leave
dec
and
sub
cs
shlb
sbb
mov
or
mov
stc
xchg
les
xor
or
mov
scas
shlb
mov
cmp
mov
int
jle
ss
lods
bound
sbb
scas
inc
scas
int3
inc
jmp
mov
xchg
lea
jg
stos
pop
clc
adc
cmp
pusha
aad
xor
jne
mov
mov
mov
jp
cld
xchg
cwtl
in
cmp
add
in
or
jnp
pop
insl
iret
or
mov
jo,pt
pushf
ja
movsb
mov
and
fidivs
adc
outsl
test
sbb
imul
push
das
adc
dec
push
add
int
loopne
push
xchg
xchg
fildl
arpl
in
lahf
sbb
dec
add
in
cltd
das
and
repz
pop
adc
cmp
or
xchg
lret
mov
addb
add
subl
popl
push
xchg
int3
and
push
out
sar
push
in
iret
cmpb
inc
xor
cmp
adc
add
jo
ds
xlat
je
jne
mov
ja
filds
push
outsl
arpl
das
adc
and
pop
and
sbb
and
pusha
out
enter
push
in
push
xor
popa
notl
push
lock
adc
scas
movsb
test
adc
call
xchg
fdiv
mov
lret
jb
insb
je
adc
addr16
xor
aad
data16
test
or
flds
scas
adc
push
push
jne
jo
mov
ficomps
out
or
pop
subl
cwtl
pop
add
outsl
jg
call
addr16
stos
push
ret
cwtl
pop
mov
adc
xor
jns
xor
dec
imul
adc
outsl
sbb
xchg
aas
mov
jnp
mov
lods
sti
xchg
mov
pusha
xor
push
xchg
arpl
mov
or
inc
fisubrs
cmpsb
push
pop
pop
cs
pop
std
sub
insb
mov
xchg
call
mov
outsb
jg,pn
pop
dec
jb
xchg
inc
xchg
sbb
roll
inc
fstl
jbe
stos
testb
push
in
jle
or
mov
mov
test
pop
mov
in
push
adc
incl
je
mov
pop
sbb
scas
cmc
xor
pop
sub
or
mov
lret
mov
inc
arpl
push
mov
fs
push
movsb
cli
cbtw
sar
push
jecxz
sbb
leave
adc
dec
adc
pusha
cmp
cmpl
loopne
cmp
adc
mov
lock
pop
mov
inc
js
aam
cmpsl
arpl
fistpll
jle
add
sti
repz
push
or
fstl
movsb
lahf
out
jnp
out
mov
jno
mov
sub
adc
movd
sub
and
adc
fsub
mov
stos
stc
mov
push
and
call
iret
aas
cmp
jg
adc
cs
imul
add
dec
sub
mov
les
test
repz
es
mov
and
ret
push
mov
xor
adc
loope
adc
and
push
dec
add
inc
adc
stos
popa
sbb
adc
jno
jmp
arpl
cwtl
stos
inc
nop
or
cmp
pop
hlt
xor
inc
mov
js
mov
mov
aam
mov
dec
cmp
mov
xor
dec
adc
jae
pop
movsb
jno
fs
cli
mov
inc
cmc
pushf
repnz
cmp
mov
lods
aas
push
jl
mov
int
into
add
cmpsl
cmp
dec
fstp
loop
enter
int
dec
outsl
inc
ficoml
mov
data16
and
mov
fsubrl
scas
push
leave
loopne
xorl
mov
and
cmpsb
jnp
or
sub
inc
mov
or
lret
call
push
jge
gs
or
jmp
sbb
aam
rorb
aaa
inc
stc
mov
cmp
shr
jmp
push
lods
dec
and
sti
ja
push
push
lahf
push
inc
inc
xchg
jmp
call
js
xchg
sub
mov
push
push
push
ljmp
shr
inc
loop
mov
fidivl
adc
xor
pop
push
jns
ja
mov
inc
daa
push
inc
xor
inc
outsl
dec
stos
push
push
push
and
imul
xor
add
xor
dec
sub
mov
sbb
cltd
push
imul
push
sbb
mov
sbb
xor
mov
or
imul
jmp
jbe
and
addr16
and
mul
mov
fstpt
aaa
sbb
adc
in
sbb
push
push
fdivs
fisubrl
loopne
sti
or
fiadds
mov
dec
xlat
fildll
jg
out
push
rcrl
dec
aaa
sub
clc
jle
jl
xchg
lds
fdivl
sbb
clc
sub
scas
frstor
ss
icebp
push
bound
sahf
std
loope
pusha
xchg
shrl
or
outsb
mov
imul
xchg
and
jmp
bound
inc
cmc
mov
dec
in
cmc
inc
jno
jb
popa
pop
pop
sbb
orl
std
sbb
dec
sti
repnz
adc
int3
mov
sbb
sub
mov
xor
add
in
adc
aas
push
cmp
dec
xor
adc
in
mov
push
cli
xchg
addr16
cmpl
mov
and
sbb
cltd
xor
lea
sub
out
mov
out
dec
sahf
sub
mov
out
add
jae
jno
dec
dec
dec
adc
add
imul
and
push
push
adc
icebp
loope
pop
xchg
inc
fs
adc
aas
jae
pop
js
cmpsl
lea
cld
push
mov
push
sbb
ja
cs
xchg
inc
xchg
fdivrs
and
scas
add
xchg
sti
gs
push
sahf
inc
inc
aam
ja
ret
scas
shll
xor
cmpsb
aaa
or
mov
push
push
and
add
mov
add
dec
clc
loope
ret
scas
out
ret
call
in
loop
jge
into
dec
cmp
outsl
filds
add
fs
mov
jb
rorl
pop
test
ljmp
jno
mov
jmp
mov
lds
add
jne
inc
adc
fs
push
daa
cmp
fsubl
sub
pop
dec
insb
inc
add
mov
dec
pop
push
mov
mov
enter
jns
daa
cmpsl
ljmp
inc
cli
insb
inc
push
rcrl
pop
sbb
icebp
leave
pop
xchg
add
and
dec
xchg
outsb
jp
or
gs
mov
nop
xchg
mov
in
scas
cmp
add
or
in
adc
push
fldt
adc
mov
inc
add
mov
insl
out
or
xchg
mov
dec
mov
inc
dec
ret
stc
ret
sbb
into
in
lock
mov
push
and
mov
loop
ja
iret
jg
clc
insl
std
decl
add
mov
dec
aam
incb
test
lea
add
push
jbe
mov
iret
ret
add
cwtl
cmp
stos
pop
scas
movsb
add
xchg
lds
add
fsubrl
stos
movsl
dec
pop
mov
mov
idiv
gs
mov
loopne
mov
loopne
inc
enter
push
dec
sti
test
add
sub
cmpsl
int
sub
mov
xor
mov
leave
xchg
test
sbb
mov
daa
cwtl
fcoml
push
xor
stos
jg
ljmp
or
sub
inc
mov
orl
jl
add
cmp
sarl
push
push
mov
pop
xchg
mov
hlt
push
hlt
inc
insl
jge
and
xor
push
mov
dec
mov
mov
xor
movsl
clc
mov
test
cs
xor
out
mov
out
aam
lahf
bound
movsl
mov
ss
mov
inc
mov
inc
or
mov
jecxz
xchg
in
and
pop
mov
or
push
lret
pop
out
inc
or
fs
sub
add
inc
mov
or
mov
pop
repnz
mov
jnp
aad
mov
lds
cmp
inc
iret
mov
mov
imul
add
ja
xlat
data16
adc
xchg
mov
jp
pop
pop
aad
stos
mov
and
shl
add
or
aam
out
ret
cmpsb
fidivrl
mov
mov
cltd
das
js
inc
ja
xor
and
mov
add
adc
sbb
out
add
arpl
ret
inc
lret
mov
gs
cs
mov
jg
cmp
fistpl
cmc
rol
mov
mov
test
and
sbb
fistpl
xor
xchg
iret
lock
add
mov
das
movsl
lds
jns
dec
add
idivl
add
jns
lret
mov
movsl
and
jns
push
cmp
imul
push
and
ret
mov
fnstcw
pop
frstor
popa
dec
jbe
push
les
xor
mov
rcr
mov
push
sarb
dec
lcall
mov
filds
cmp
outsl
into
xchg
clc
sbb
jg
sbbb
xchg
int
xchg
cmp
je
std
dec
jecxz
lahf
jno
lcall
inc
and
xor
loopne
push
lahf
xor
clc
pop
inc
mov
test
and
jl
repz
or
cli
pop
imul
and
insl
loop
notl
lods
jge
enter
inc
dec
cltd
ljmp
test
sub
mov
insl
adc
sti
pop
mov
add
mov
sub
cmp
lret
jae
psrld
in
mov
xlat
popf
hlt
mov
sahf
sahf
xor
cmp
mov
pop
nop
xchg
mov
lea
sub
rcrl
loop
add
sbb
mov
pop
lcall
dec
cltd
dec
push
adc
xchg
lods
movsb
push
jno
pusha
popf
ljmp
jge
mov
repnz
dec
frstor
adc
loop
sub
cmp
mov
mov
xor
mov
mov
lock
gs
mov
sbb
daa
cmp
fisttpl
or
aaa
mov
ds
call
xchg
sub
mov
mov
das
movsl
adc
add
xor
pop
pop
jge
jmp
jecxz
cld
xor
push
lahf
pop
fidivs
out
test
ss
mov
test
mov
push
lret
mov
inc
inc
mov
xor
mov
mov
sbb
xor
dec
es
call
sbb
dec
adc
inc
and
jg
sub
into
pop
test
xor
dec
push
ds
inc
js
out
xor
sbb
cmp
lods
je
dec
xor
inc
outsl
stos
in
inc
and
inc
xor
pop
loop
roll
xor
pop
jg
test
in
and
pop
out
stos
jnp
pop
xchg
add
cwtl
ss
sbb
lahf
adc
sbb
or
mov
rcll
dec
xchg
sbb
rorb
push
cmp
in
fcoml
test
stos
clc
mov
js
inc
js
loope
imul
jno
jp
xchg
pop
jbe
dec
sbb
sbb
movsb
jg
gs
gs
sub
es
fisubl
pop
ja
push
gs
bound
mov
data16
call
sub
add
add
sbb
jbe
sti
mov
nop
xchg
data16
pop
andnps
or
add
outsl
cmp
xlat
inc
mov
lret
into
stos
pop
push
inc
xor
dec
push
push
in
subb
xchg
je
push
push
cmp
repnz
xchg
das
pop
adcl
xor
push
sahf
xor
add
dec
xchg
int3
cmpsl
orb
push
mov
scas
wbinvd
dec
jmp
inc
ljmp
inc
inc
push
mov
add
and
pusha
sbb
sbb
xchg
inc
outsb
fisttpll
fimull
test
arpl
sbb
xchg
sbbl
dec
shl
aam
lcall
decl
in
mov
in
decb
sar
sti
cmc
fs
outsl
or
jno
mov
mov
ljmp
je
in
mov
arpl
es
sahf
pop
push
inc
pop
xchg
ret
roll
mov
jmp
cmp
fisubrs
sbb
mov
imul
and
jecxz
scas
mov
adc
aam
or
pop
mov
aad
and
inc
xchg
repz
and
fucom
ljmp
jae
in
out
shrl
test
scas
or
sbb
fisubl
stos
rol
insl
push
inc
push
add
popa
ja
pop
negl
inc
xchg
pop
dec
cld
jle
adc
push
add
loopne
repz
out
sahf
lods
repnz
hlt
std
pop
lret
test
pop
sbb
inc
je
mov
and
push
and
push
jbe
rol
dec
call
addl
inc
xchg
stc
xchg
sbb
pop
rcrb
popf
sti
movsb
sub
xchg
cmp
mov
push
test
ljmp
loopne
std
div
lock
aam
pop
sub
ret
or
pop
mov
pop
xchg
out
bound
popa
xor
dec
sub
pushf
push
xor
xor
loop
test
outsl
dec
xchg
inc
pop
mov
repz
or
jg
cmp
sbb
push
jne
push
jae
lds
shlb
mov
push
stos
sub
stc
leave
inc
aas
pushf
jle
and
push
cmp
movsb
mov
fs
fneni(8087
fidivl
xchg
jae
mov
ds
pop
sub
xchg
inc
rcrb
stc
in
fsubrl
or
adc
pushf
jle
fimuls
imul
mov
mov
jle
jg
push
cld
sbb
mov
pop
mov
mov
into
testb
sbb
pushf
dec
mov
clc
dec
pushf
in
sbb
loop
fmuls
aad
pop
xchg
lcall
mov
or
xor
inc
sbb
out
jmp
sbb
aaa
mov
inc
out
jne
fsubs
out
stos
add
jmp
or
sahf
stc
jb
jg
push
cmpsl
lods
mov
mov
dec
into
jp
or
shrb
mov
mov
xchg
pop
lock
cmp
sub
mov
jl
sbb
pop
and
sub
mov
in
and
cwtl
sub
xor
sbb
adc
cltd
jb
push
jge
push
mov
jae
mov
pop
xor
xchg
test
xchg
sub
loop
aaa
shlb
add
sbbl
mov
mov
mov
rcll
lods
fldl
mov
movsb
mov
lock
push
imul
jne
xor
inc
mov
push
cmp
and
sbb
jmp
les
idivb
enter
stos
cs
in
mov
lds
loope
xor
xchg
lock
cmp
loop
shlb
xlat
mov
add
xchg
jmp
in
xchg
add
int
xlat
mov
repnz
jno
and
push
js
mov
and
fcomi
lea
pop
or
cmpb
rcll
jns
daa
xchg
andl
repz
mov
jbe
rorb
sub
ds
pop
ja
repnz
shl
and
dec
xor
sbb
push
dec
outsl
scas
sti
std
mov
stc
or
loop
sbbb
pop
ljmp
pop
movsb
stos
push
out
enter
xor
mov
es
call
xchg
push
mov
lret
xorl
mov
aaa
push
push
mull
or
lret
ljmp
inc
or
enter
jbe
aad
loope
xchg
sub
xchg
cmp
or
out
pop
adc
subb
xor
xor
mov
xor
mov
iret
mov
mov
clc
dec
sub
dec
push
sbb
sbb
pop
cmp
mov
xchg
sahf
mov
xchg
lea
dec
cmp
xchg
push
sbbw
out
inc
inc
push
movsl
scas
inc
dec
add
lds
mov
mov
push
movsl
pop
or
mov
movsb
and
mov
movsb
fiaddl
fdivrs
xchg
mov
inc
mov
pop
movsl
scas
sbb
sub
mov
jae
sub
xchg
xor
sbb
push
cltd
dec
mov
scas
insl
push
pop
push
daa
sbbl
adc
mov
movsb
push
fdivrp
jmp
shlb
adc
jecxz
sbb
add
xor
subl
fistpl
xor
adc
pop
sahf
into
xor
push
xor
mov
repnz
pop
lret
mov
cmp
sub
fisubrl
cltd
and
shrb
movsb
pop
mov
dec
lock
push
adcb
rcr
test
inc
pop
jg
add
add
dec
das
adc
clc
cld
adcl
stc
inc
push
inc
out
outsl
iret
sub
or
mov
je
xchg
xor
mov
mov
cs
imul
subb
ljmp
and
rcll
push
mov
fst
clc
push
mov
mov
push
arpl
cld
ret
test
lods
push
jmp
je
ffreep
fistpl
mov
push
shlb
gs
xor
in
cmp
movsl
sahf
mov
popa
mov
lods
outsl
in
inc
ja
test
mov
lea
ljmp
jbe
mov
jno
jnp
addr16
push
ret
pop
push
pop
addr16
or
sbb
inc
jns
cmp
outsl
es
cmc
or
fst
mov
xchg
adc
ja
jp
jecxz
movsl
sub
aad
bound
add
add
pushf
or
inc
js
mov
pop
and
cmpsl
jae
sbb
xchg
inc
cmp
jbe
movsl
push
subb
addr16
test
ret
sub
out
cmp
inc
aad
insl
js
lods
pop
xlat
or
lds
add
push
mov
loope
imul
add
dec
adc
imul
notl
aaa
add
and
and
pushf
and
stos
out
mov
jmp
iret
add
shr
mov
jecxz
sbb
dec
mov
shll
push
sti
push
and
cmp
sub
pop
lods
push
pop
lea
out
popa
mov
in
push
sub
dec
divb
sub
mov
cmp
push
int3
divb
stos
jmp
ret
and
stos
cmp
xor
or
js
addr16
xor
mov
xchg
mov
dec
lcall
cmp
pop
mov
pop
movl
lock
mov
lret
iret
aaa
stos
jge
sub
mov
add
jp
pop
sub
jb
sbbb
inc
lret
call
xchg
sub
xor
outsb
cmpsl
mov
pop
pop
aas
cli
mov
stos
add
pop
scas
shrl
andl
imul
pop
ret
outsl
out
cmc
adc
jne
rcl
mov
aas
popf
js
push
arpl
adc
add
sub
xchg
popa
stc
call
js
pop
iret
cmc
aad
ja
dec
test
mov
cmc
je
dec
repnz
fistpl
shr
shll
inc
inc
les
int
dec
push
int3
popf
mov
scas
or
mov
shll
mov
mov
mov
jnp
in
cmp
pop
mov
xchg
fadds
arpl
dec
mov
xchg
les
ds
into
inc
sbb
mov
xor
jl
div
ror
sbb
in
jmp
out
negb
movsl
pop
mov
adc
and
push
xlat
adc
mov
xchg
ja
shrb
dec
xor
lock
dec
sahf
xchg
shrl
xchg
add
jmp
cmpsl
dec
cmp
rorl
mov
and
enter
mov
scas
mov
push
ss
xor
popa
jns
and
cli
std
push
sub
stc
sub
lods
inc
mov
rcll
loopne
push
cld
jl
jo
push
xor
popa
lds
mov
xor
inc
jge
cld
jb
inc
fcomps
addr16
std
aam
rorl
fdivrp
clc
xchg
je
push
jmp
int
jp
xor
and
jo
fidivrl
cmp
xchg
lahf
dec
xchg
ss
bound
pop
jnp
popa
xor
push
mov
ret
inc
mov
dec
out
shrb
shll
pushf
enter
and
sbb
and
icebp
pop
sub
cmpsl
or
sub
nop
xchg
pop
aad
test
pop
jae
cmp
out
pop
or
popf
pop
std
mov
in
or
int
rorb
out
test
fists
add
xor
or
and
aad
push
xchg
adc
in
stc
shll
pop
out
xorb
iret
das
or
rorl
insl
sbb
icebp
adc
or
outsb
adc
jmp
popl
imul
subl
sbb
addr16
stos
fcoms
sbb
movsl
push
inc
or
pop
scas
hlt
mov
in
popa
or
add
popa
enter
loope
add
mov
rsqrtps
rcl
adc
ret
or
pushf
dec
fldt
sarl
and
mov
inc
jo
scas
test
bound
jp
sub
insb
gs
jns
cmp
in
sub
enter
enter
gs
and
jns
dec
add
push
jbe
lcall
adc
pop
sub
test
sub
mov
dec
bound
ja
push
adc
int3
add
mov
xor
shrl
push
inc
jge
in
lretw
xorl
test
jge
cmp
inc
mov
rolb
insb
dec
pop
sub
mov
mov
or
bound
inc
adc
inc
lods
or
add
movsb
shlb
inc
xchg
cmpb
add
mov
jo
mov
test
lret
cwtl
hlt
mov
mov
pop
inc
sbb
mull
popf
scas
es
lds
ja
lock
arpl
mov
out
shrl
pop
icebp
mov
out
outsb
inc
pop
mov
cmc
dec
pop
pop
jg
or
stos
xchg
ret
pop
jno
dec
pop
leave
icebp
daa
cmpsl
push
addr16
lds
mov
iret
sub
lcall
inc
in
fwait
inc
mov
cmpsl
sbb
cltd
mov
out
testl
movsb
inc
insb
inc
shrl
daa
dec
out
inc
adc
int3
cmp
pop
mov
out
pop
daa
mov
stos
add
ss
jp
loopne
sub
cmpsb
xor
pop
imul
jbe
push
roll
dec
fs
push
test
push
sub
leave
stos
mov
into
cmc
hlt
fnsave
xchg
xchg
and
adc
cmp
cmp
push
add
push
inc
jae
fsubl
pop
mov
daa
and
push
pushf
cwtl
stos
adc
mov
inc
adc
fs
repz
dec
arpl
lods
into
add
mov
dec
movb
or
outsl
idivb
dec
leave
shrb
xchg
mov
cli
push
movsl
loope
aas
stos
pop
inc
xchg
jnp
or
mov
mov
lods
and
movsl
mov
fistpll
subl
sub
mov
mov
mov
and
mov
fdivs
xor
outsb
adc
cmp
cs
pushf
ss
adc
xchg
ja
adc
mov
imul
mov
imul
mov
ret
pushf
loope
mov
pushf
lcall
cmp
jbe
addl
mov
mov
hlt
jle
mov
insb
mov
push
mov
and
sub
clc
cmp
jecxz
adc
jl
dec
sub
xchg
sub
xchg
js
jns
outsl
mov
add
lea
jmp
mov
adc
pushf
ret
psubb
ss
push
lea
push
inc
pop
ja
into
loop
movsb
loopne
imul
xchg
test
pusha
xchg
adc
cmp
push
fdivp
scas
cmpsl
jbe
lock
cmp
or
js
push
sbb
imul
in
push
mov
xchg
lock
lret
mov
adc
pop
imulb
mov
mov
xchg
mov
push
insl
jg
jecxz
pop
jae
rcrl
repnz
ror
popf
sbb
loopne
and
pusha
cld
jle
into
and
test
adc
bnd
testl
and
ljmp
sar
xor
nop
and
or
push
cmpl
cmc
push
and
addr16
pop
pop
out
lcall
popf
push
dec
push
xchg
insb
jno
push
fists
ljmp
clc
sbb
fisubrl
jge
imul
adc
imulb
sbb
insb
insl
hlt
add
jp
mov
cwtl
pusha
aad
add
or
jg
add
lea
ss
lret
xor
sub
fisttpl
aam
pop
sbb
test
fwait
mov
inc
inc
and
mov
mov
mov
pop
jmp
or
or
ss
pop
dec
mov
jl
sbb
mov
inc
dec
shr
mov
push
iret
testb
iret
mov
fcompl
jae
push
jecxz
push
ss
push
clc
mov
jo
pop
mov
movsl
pop
sahf
pop
mov
sub
mov
fdiv
mov
das
in
dec
push
fs
fldl
dec
push
adcl
outsb
and
sbb
aam
xor
fs
sub
out
scas
pushl
fidivrl
out
adc
sbb
dec
cli
mov
or
cmpsb
ja
and
pop
stc
test
stos
pushf
sub
cld
mov
xchg
cmpsl
aam
stos
sub
pop
ss
shl
stos
jo
in
cmp
test
int
or
cltd
xor
xchg
leave
and
jl
adc
mov
xchg
cmp
inc
mov
mov
pop
and
jnp
mov
push
loope
popf
les
fnsave
push
aaa
loope
jecxz
fldt
subb
sti
xchg
jbe
xchg
gs
mov
xor
imul
jne
std
sbb
shlb
call
das
jge
lods
mov
adc
fcmovb
adc
pop
test
cmp
cwtl
sub
mov
sbb
xchg
push
icebp
jae
fs
popf
sbb
test
mov
sbb
movsl
lds
mov
mov
mov
fs
mov
mov
jge
xchg
ss
cli
lods
jb
and
mov
or
push
int
dec
fwait
mov
outsl
fcoml
cmp
jnp
nop
adc
scas
mov
loopne
pusha
push
cmpsl
into
fimuls
insb
and
loop
gs
lret
std
pop
ret
stos
aas
mov
popa
cmpsb
outsb
sbb
xchg
mov
pop
mov
push
inc
lods
jg
psrlq
xor
stos
adc
stc
cwtl
aam
xchg
mov
jecxz
push
jbe
ret
push
push
addr16
pop
stc
push
adc
int
add
insb
push
gs
fwait
pop
inc
ljmp
jnp
mov
mov
jp
sbb
lcall
inc
fwait
push
mov
rorl
pop
test
pop
ret
jmp
bound
fimuls
and
adc
jbe
xor
push
int3
fwait
add
mov
enter
cmp
sub
je
insb
lds
dec
in
les
btc
sub
xchg
mov
int
mov
pop
jno
cs
stos
lahf
and
inc
pop
push
sub
cmp
sub
or
testl
leave
cld
pop
mov
or
dec
ljmp
push
test
jl
add
xlat
loopne
cmpsb
mov
insb
mov
out
fidivrs
and
stos
pop
loop
ss
testl
pop
push
fidivl
in
ja
popa
xor
cs
popa
sub
adcl
mov
arpl
sub
xor
dec
outsb
lcall
push
or
xor
testb
xor
mov
mov
ss
lock
ja
push
out
test
sub
pop
jns
lea
sbb
xorb
inc
jb
mov
fisttps
nop
mov
jg
jnp
jns
lock
xor
jae
daa
cmpsb
out
dec
inc
ret
orl
mov
repz
xchg
out
arpl
jne
in
sub
sub
loop
jns
dec
push
loope
cs
ljmp
outsl
fst
sbb
xchg
jg
loopew
loope
mov
hlt
bound
arpl
cwtl
repnz
xor
add
out
cmp
cmc
and
push
pop
movsl
in
in
mov
icebp
ret
mov
loopne
fldt
sbb
xchg
outsl
adc
xchg
inc
lea
pusha
sub
mov
movsb
push
mov
repnz
in
rcll
aad
jae
jnp
and
shlb
xchg
bound
mov
gs
or
mov
sbb
mov
aad
pop
inc
add
fiaddl
pop
push
mov
orb
mov
movsl
fucomip
push
sub
clc
sbbb
popw
aad
popf
outsl
pop
jbe
mov
iret
sbb
lock
mov
xchg
stos
or
popf
hlt
fdivrl
sarb
loopne
clc
xchg
xchg
push
cmpsb
jecxz
loope
inc
mov
fimull
mov
push
jo
nop
mov
pusha
dec
mov
pop
push
pop
xchg
loopne
arpl
rolb
or
cmc
loope
incl
imul
sbbl
stos
ja
testb
call
adcb
adc
mov
mov
pop
pusha
cltd
mov
sar
xchg
mov
inc
iret
scas
mov
dec
cmp
mov
in
insb
ret
neg
ret
mov
notl
icebp
mov
or
dec
mov
cld
test
mov
aaa
push
scas
and
ss
inc
ret
sub
xor
pop
js
pop
xor
imul
int
mov
outsl
aaa
mov
bound
bound
cmpsl
adc
cmpl
dec
xchg
lahf
inc
ficoms
notb
enter
dec
out
negb
fcmovne
and
ds
ficomps
les
rcrl
addr16
or
pop
jg
sbb
sub
mov
lock
fildl
mov
pop
and
inc
mov
pushf
addb
xchg
mov
lret
ret
sub
jecxz
sbb
add
jecxz
xor
cmp
repz
dec
mov
mov
cmc
or
ficoms
nop
adc
cmp
fisubrl
and
mov
adc
dec
xor
aas
jp
mov
push
nop
outsl
inc
clc
cld
pusha
mov
mov
lret
pop
dec
repz
and
xchg
leave
jge
icebp
enter
push
adc
xchg
loope
je
push
test
jmp
mov
inc
stc
mov
dec
mov
jnp
jns
fcmovne
movsb
jl
iret
xchg
mov
cs
push
cwtl
aad
repz
adc
sub
arpl
push
jmp
cmp
mov
mov
cmp
jne
lret
pop
sbb
push
adc
fs
popf
mov
dec
add
ljmp
lea
shll
sbb
push
icebp
mov
insb
xchg
or
clc
popl
inc
cmp
jno
xor
rolb
test
stos
fidivs
pop
out
adc
das
pop
cmp
jle
xchg
scas
cld
stos
ret
xchg
fdivs
xor
pop
scas
xchg
jp
mov
inc
or
or
and
cs
sbb
mov
pop
inc
sbb
adcl
imul
outsl
cmc
cmp
std
lods
and
pop
adc
push
roll
pop
sub
pop
push
pop
scas
cmp
sbb
pop
out
movsb
push
loope
sbb
es
fdivr
pop
jle
inc
adc
push
test
andl
jb,pt
jnp
dec
xchg
lock
sub
cmp
sbb
scas
ss
cwtl
lret
in
sub
sbb
sub
in
adc
push
shl
jge
int3
and
sbb
fildll
mov
loopne
add
jle
movsb
cltd
jns
xchg
pusha
arpl
add
sar
arpl
lds
mov
push
jl
or
inc
sbb
sti
cli
adc
xchg
addr16
push
inc
pop
xor
out
or
lea
out
or
iret
adc
orl
es
insb
fdivr
xchg
imul
xchg
pop
fsubs
adc
imul
loop
cmp
inc
sbb
out
out
push
mov
imul
sub
dec
insl
push
testb
les
dec
cmp
inc
push
push
stos
jmp
js
ret
loopne
and
sbb
outsl
push
jns
xchg
aad
push
mov
lock
fnsave
mov
sbb
lahf
jo
repz
xor
mov
and
cmp
mov
add
push
pushf
mov
push
mov
pusha
xchg
xchg
mov
xchg
sub
insl
out
stos
mov
lods
mov
or
pop
daa
xchg
insb
or
out
addr16
cmpsb
mov
aam
mov
xchg
mov
call
xor
pop
aad
push
xor
popa
or
scas
push
dec
stc
xlat
aaa
jbe
in
jle
dec
sbb
dec
cmp
mov
pop
jl
pop
rorl
dec
pushf
lds
and
xchg
ret
mov
leave
jmp
fstps
mov
ror
icebp
jecxz
es
xchg
lods
cmp
pop
mov
push
pop
and
clc
xor
push
test
ja
loope
xchg
imul
jb
mov
and
sub
jg
adcb
xchg
sub
stc
inc
adc
gs
xchg
or
sbb
dec
or
fs
fistpl
cwtl
push
fildl
mov
les
cwtl
fs
sbb
cmp
ss
ficompl
or
aaa
cs
mov
lret
cwtl
adc
in
clc
jno
cli
leave
or
jmp
les
pop
push
push
lea
lret
add
enter
mov
mov
jmp
push
sub
jns
adc
rcll
add
pop
pop
ja
xchg
cmp
dec
xchg
jb
popa
sbb
mov
mov
testl
fdivr
fists
lock
xor
das
mov
rorb
sbb
cmp
inc
cmp
loop
lea
test
mov
fwait
push
repz
sub
xchg
subb
hlt
in
test
pop
cmp
es
movsb
iret
or
xor
aad
push
outsl
and
jmp
sbb
rcrb
test
jne
cmc
pushf
loopne
inc
xchg
lods
in
nop
xchg
inc
push
ja
repz
cmp
test
sti
inc
insb
mov
ficoml
cmc
ss
cld
pop
xor
into
js
mov
push
push
mov
inc
aad
lcall
mov
out
push
pop
push
inc
mov
pop
cmp
push
and
xchg
gs
rolb
out
retw
add
jl
sbb
jo
cmp
jecxz
mov
jecxz
push
sub
and
mov
dec
mov
imull
push
push
aas
loopne
lcall
stos
push
dec
test
xor
roll
and
repz
cmp
insb
xor
or
xor
leave
into
sub
xabort
iret
sbb
fcmovbe
mov
inc
stos
addr16
roll
push
dec
outsl
push
mov
ss
and
aaa
nop
test
in
dec
filds
jne
cltd
add
aam
bound
popa
shl
xor
mov
cmp
push
adc
outsl
jo,pt
fcmovnb
jle
add
in
jp
mov
or
insl
sub
mov
out
clc
push
jns
sbb
out
mov
and
mov
stc
mov
cmp
mov
cs
push
loopne
pop
test
dec
repz
xchg
in
pop
adc
push
dec
add
movsl
xor
xchg
mov
test
les
pop
arpl
fsubl
test
pop
js
sub
adcl
lahf
cmp
outsb
inc
ljmp
gs
sbb
pop
addl
outsb
mov
insb
icebp
jmp
push
pushf
adc
adc
or
cmpsb
mov
mov
rsqrtps
insb
cmpsl
fs
popa
jmp
dec
sbbb
hlt
ret
sub
dec
cld
dec
addps
adc
xchg
xor
insl
in
std
test
call
dec
mov
inc
mov
ss
sbb
js
mov
xchg
psubq
dec
ds
nop
sub
nop
leave
test
ficoms
mov
push
not
cmp
jae
jge
das
lcall
inc
mov
inc
sbb
andl
stos
pusha
pop
adc
or
dec
push
mov
xor
popa
lods
sub
xchg
je
xor
outsb
addr16
movsb
sbb
xchg
mov
xor
popf
int3
insb
inc
add
xor
xchg
xchg
inc
inc
lds
imul
mov
into
jo
add
dec
cmp
add
dec
cwtl
stos
js
xor
loope
mov
xor
cld
pop
mov
mov
out
push
fidivrl
mov
in
cmp
std
cwtl
cs
and
fwait
jg
push
nop
fwait
jno
ficoms
xchg
imul
push
inc
jbe
daa
ficomps
out
cmp
mov
jmp
fdivr
inc
jne
int3
orb
mov
movsl
clc
mov
or
cltd
dec
push
es
arpl
mov
cs
jle
and
stos
es
addl
jno
out
xchg
into
inc
pop
pusha
lock
and
sbb
fmuls
jg
mov
es
cmp
mov
bound
aas
imul
xchg
into
iret
dec
mov
push
stos
repz
xchg
dec
mov
int
in
out
adc
insl
push
pop
enter
inc
mov
pop
xor
lahf
add
int
in
mov
scas
fistpl
and
sysexit
pushf
jnp
gs
jl
fs
pusha
es
pop
add
mov
and
int3
jnp
xchg
pop
jmp
ljmp
push
lock
stos
shrb
mov
jns
enter
out
nop
iret
out
aad
push
inc
xchg
popf
hlt
sbb
jmp
add
imul
fldcw
pop
subb
mov
push
sbb
cmp
cld
mov
in
sbb
es
jp
push
dec
xchg
lahf
xchg
xor
cmp
lret
orb
add
test
cmp
mov
cmc
out
sti
addr16
cli
or
lea
add
cmp
xor
jns
jmp
popa
cmp
call
dec
and
adc
or
shl
xchg
popa
push
mov
pop
ja
add
cmp
lret
pop
data16
cli
jle
test
ljmp
je
and
icebp
imul
mov
add
and
inc
pop
arpl
fdivl
adc
movq
ret
pop
mov
jmp
pop
push
push
pop
xor
mov
outsl
arpl
cmp
inc
add
rcll
pop
insl
out
inc
jp
filds
mov
xorl
hlt
mov
stos
addb
comiss
cmc
cld
fists
std
mov
out
inc
bnd
push
ret
ja
push
movb
mov
add
insl
aas
dec
leave
cs
mov
cmp
ds
bnd
bound
pop
outsb
das
mov
push
lods
in
xor
sub
cld
and
aam
push
in
sbb
cmp
xchg
mov
mov
popf
mov
push
pop
loope
inc
ficoml
add
fnsave
and
lods
add
stos
inc
push
sub
sub
repnz
das
lret
cli
imul
push
je
push
insb
jl
fisubrl
sbb
sbb
dec
shll
mov
aas
fwait
aaa
in
cmp
iret
cmp
xchg
mov
jmp
ficompl
movsl
jge
das
fisttpl
fisubs
jbe
sub
dec
push
adc
sbb
lcall
add
jb,pn
clc
arpl
scas
lret
pop
les
andb
xchg
lret
rcrb
dec
cld
mov
loopne
outsl
inc
lock
push
adc
out
mov
popa
dec
sti
arpl
lds
jno
push
in
in
mov
inc
sahf
mov
dec
insb
and
int
pusha
popf
sahf
daa
movntq
out
pushf
es
lret
push
addr16
lods
loopne
add
fdivrs
shl
scas
ja
cmp
fwait
stc
int
mov
adcb
add
xchg
imull
in
or
rcl
es
divb
add
std
pop
ret
push
mov
icebp
shl
negb
scas
mov
lcall
test
pop
xchg
mov
dec
rorb
rclb
and
jle
lods
pop
add
data16
mov
xchg
dec
mov
jno
dec
dec
scas
lods
arpl
push
je
push
mov
scas
clc
enter
sub
insb
and
dec
dec
stos
jg
pusha
sbb
gs
addr16
lock
lods
shll
enter
xchg
push
movl
fwait
pop
lods
data16
mov
lret
cli
out
xchg
repnz
adc
jno
jmp
xchg
sbb
xchg
inc
mov
cli
mov
jl
leave
add
jae
mov
stc
and
test
jae
in
or
mov
add
shlb
les
into
rclb
pop
sub
push
pop
out
scas
jl
pushl
pop
push
pop
jle
rol
gs
mov
add
pop
push
mov
push
push
mov
pop
sub
add
mov
scas
cmc
mov
push
and
rol
xor
jp
pop
jg
lds
cld
into
cmc
iret
dec
push
push
data16
cmp
dec
bound
dec
pop
mov
in
addr16
pushf
dec
imul
adcb
rclb
stos
cmp
lret
orb
invd
js
jo
aad
or
add
into
adc
loop
hlt
icebp
test
jg
dec
shll
dec
sbb
test
jne
xchg
int3
mov
pop
repz
jb
jne
roll
test
rolb
int
ljmp
movsb
jbe
insb
dec
loop
push
sbb
and
dec
push
bound
sbb
jle
pop
pop
fmuls
je
loopne
mov
inc
call
insb
xchg
lods
xchg
push
jae
out
cmp
cmp
mov
push
test
dec
cs
imul
mov
inc
xor
sti
aad
pop
sbb
pop
dec
nop
jo
jno
pop
xchg
jl
int
push
fstpt
repnz
std
add
sti
hlt
xchg
lcall
lods
dec
cmp
push
jmp
jge
xlat
in
inc
mov
jb
mov
xor
xor
add
or
clc
fists
pop
inc
mov
push
and
lock
sub
and
inc
sbb
jno
mov
push
es
dec
jbe
daa
jo
xlat
cwtl
and
pop
sbb
mov
cld
inc
xchg
cmpsl
mov
cs
mov
mov
jo
push
adc
dec
mov
pop
cmpsb
xlat
jmp
jne
jbe
ss
push
mov
jo
movsl
rorb
loopne
lods
insl
mov
jb
mov
mov
stos
cmp
mov
adc
sbb
jle
mov
arpl
lea
push
ficomps
xchg
lds
out
arpl
arpl
test
repz
dec
loope
dec
xchg
das
xlat
or
imul
fmulp
ljmp
movsb
nop
pop
std
adc
test
add
dec
sub
pop
das
fs
or
inc
add
scas
xor
push
mov
lcall
cmp
push
sbb
inc
cli
mov
and
jno
cwtl
push
cltd
popa
inc
lods
push
in
frstor
ja
adc
lcall
mov
movsb
inc
jns
sbb
jl
lods
aas
xor
popa
cwtl
mov
push
xor
adc
and
cli
sub
cwtl
aad
mov
mov
pop
push
lods
lahf
mov
sub
cli
sti
xor
xchg
aad
jmp
adc
int3
fxch
push
je
js
hlt
outsb
adc
cli
cmp
jecxz
jbe
xchg
rolb
push
imul
in
movsl
out
fidivrs
or
dec
cmp
jo
rcr
jle
mov
mov
mov
jl
aas
inc
addr16
jp
xchg
pop
xchg
enter
pop
sbbb
dec
inc
mov
orl
jmp
ljmp
sbb
lods
and
or
mov
das
sbb
pushf
data16
lea
gs
jle
jbe
fldt
mov
or
sbb
pop
dec
test
adc
pop
ljmp
mov
mov
push
push
fs
mov
lock
adc
pop
daa
mov
movsl
or
xor
sbb
incl
cmp
clc
cmp
cmp
or
je
jge
xor
rcr
fisttps
mov
inc
cmc
sbb
xchg
mov
rolb
mov
mov
sbb
int3
movsb
mov
dec
push
jo
notb
nop
push
sbb
mov
mov
dec
xchg
stc
xchg
scas
popa
jle
prefetch
stos
xor
sub
and
sahf
dec
jmp
pop
lret
aad
sbb
popa
orl
adc
cmp
popf
push
push
divb
repz
popa
hlt
les
in
pop
inc
mov
ret
shll
jo
mov
cmpsb
popa
push
adc
pushf
pop
mov
xor
rcll
inc
mov
jb
cltd
adc
aas
lret
aas
push
inc
xchg
lods
fsubrl
fldenv
sub
icebp
inc
repz
dec
test
pop
je
movsl
and
pushf
dec
test
or
cmc
cmp
syscall
clc
mov
push
cltd
inc
mov
aad
mov
lock
and
jno
dec
pop
aas
sub
xchg
mov
mov
out
ret
stc
pop
pop
arpl
add
jb
xlat
outsb
adc
xchg
jb
sbb
pop
pop
jg
sbb
daa
add
cmc
arpl
mov
icebp
xchg
lods
mov
jno
adc
cld
push
push
mov
inc
jns
rorb
leave
add
cmc
or
dec
nop
push
les
sub
and
jno
fsubs
sub
insb
sub
mov
dec
out
jmp
inc
jae
lret
outsl
xlat
jmp
push
inc
jbe
pop
cmp
hlt
jno
rclb
cmp
sub
jle
bound
pop
or
out
addr16
lods
dec
mov
cltd
shlb
fildll
sbb
or
mov
sbb
jbe
dec
clc
mov
jne
imul
loope
test
mov
jle
xor
lods
ja
and
lret
in
arpl
clc
push
int
inc
xchg
push
mov
out
cmpsl
pop
pop
outsl
xor
cmpsb
jnp
aam
cmpsl
sbb
lea
push
out
nop
outsl
cmpsl
fsubrl
jnp
dec
adc
sub
pop
ds
icebp
xlat
jb
insl
in
mov
adc
enter
fbstp
out
push
mov
out
loopne
and
add
leave
loop
jmp
sbb
sbb
sub
mov
sbb
xor
jo
xchg
lcall
cmc
push
adcb
insb
or
sarl
xchg
pop
dec
xor
xor
fs
or
xor
mov
or
mov
cs
adc
fsub
das
out
and
xlat
push
outsl
pop
inc
push
fwait
stos
adc
cmpsb
repz
hlt
xor
sub
mov
mov
movsb
test
jo
loop
ret
pop
or
adc
in
sahf
adc
cmpsl
dec
lahf
test
jl
xor
dec
push
cmpb
icebp
aad
or
xor
adc
lret
or
mov
xchg
lock
dec
movsl
xchg
mov
clc
pop
das
call
leave
pushf
fwait
xchg
dec
scas
push
jne
in
add
push
cmpsl
sbb
stos
mov
inc
xchg
ja
ficomps
push
les
mov
fmuls
emms
sbb
idiv
ror
pop
mov
mov
clc
cmpb
call
dec
mov
pop
mov
cmp
fwait
sbb
outsl
into
aaa
jle
dec
adc
fcomp
xchg
into
mov
dec
negl
in
or
xchg
pop
js
inc
popa
sti
lret
sbb
insb
data16
fisubl
test
into
push
leave
andl
scas
popf
and
xchg
scas
jge
jle
push
push
and
addr16
jle
inc
xchg
adc
mov
or
adc
jecxz
incl
imul
xchg
aas
notl
rclb
sbb
loope
push
or
xchg
dec
addb
sbb
sahf
out
or
shlb
mov
mov
bound
xlat
dec
inc
insl
or
sbb
mov
sbb
xor
jne
dec
lds
sub
repnz
xchg
stc
in
mov
mov
fcoms
adc
loopne
adcb
xor
jge
jb
push
and
inc
add
out
ret
jnp
mov
inc
hlt
or
jns
add
js
pop
lock
xchg
pop
and
jnp
push
mov
mov
lahf
xor
into
sub
dec
sbb
rep
mov
mov
xor
mov
sub
mov
mov
cmp
negl
jg
sbb
or
or
stos
push
jg
inc
mov
dec
pop
mov
mov
mov
xor
mov
int3
or
lods
out
fistps
mov
into
inc
mov
idivl
pop
xorb
mov
cmp
subl
or
sub
xchg
sub
or
cmc
lret
push
mov
sub
hlt
jg
cmp
dec
jae
mov
sub
add
xchg
aam
sbb
dec
or
out
rep
jp
stos
sahf
xchg
pop
cltd
jl
inc
xorb
repnz
ret
pushf
xchg
pop
and
rep
out
or
ds
call
dec
movsl
aad
inc
scas
or
push
loop
jecxz
adc
mov
inc
mov
lock
adc
cmp
insb
sub
in
push
and
ja
arpl
jmp
outsb
imul
adc
and
jo
dec
pop
jbe
fsubrp
jns
sub
mov
movl
lods
loopne
call
imul
iret
lahf
js
jbe
out
inc
ret
mov
into
dec
lret
cmpsb
cmp
fildll
lea
arpl
sub
ja
sbb
xchg
mov
mov
mov
cltd
fs
jp
or
dec
enter
mov
es
ljmp
loope
xchg
xchg
insb
loop
in
add
outsl
mov
aaa
pop
ss
out
movsl
orb
scas
je
shld
pop
adcb
inc
jbe
sub
dec
ljmp
sahf
add
cmp
orl
cmpsb
jecxz
movsb
test
push
orl
insb
and
mov
sub
dec
mov
pop
pop
loope
add
fsqrt
dec
or
cmp
and
sbb
pop
or
int3
sbb
aaa
lods
mov
js
push
mov
mov
adc
adc
out
mov
sub
jns
cs
mov
dec
sbb
push
sub
leave
sbb
xor
jne
mov
jno
lea
sub
push
int
sbb
rcrb
in
fs
push
jae
dec
divb
mov
and
mov
aas
es
dec
jns
inc
xchg
push
mov
xchg
les
das
lahf
jecxz
mov
xlat
scas
lds
xor
xlat
pusha
sub
jbe
push
pop
mov
out
xor
je
jo
nop
dec
in
pop
std
shlb
and
icebp
std
mov
pop
movsb
dec
into
mov
mov
mov
add
das
pusha
jb
pop
inc
movl
mov
and
xchg
or
out
cmp
lahf
xchg
pop
dec
lahf
scas
in
add
jmp
jo
push
cmpsl
in
es
or
call
icebp
pop
push
sbb
adc
sub
adc
iret
pop
test
adc
daa
lods
xlat
clc
cmp
jp
cmpb
dec
jne
enter
cli
jp
cmp
fdivrs
dec
and
xor
test
arpl
inc
stc
fdivs
sub
scas
sbb
cmpb
mulb
push
cmp
in
fcmovne
push
pop
idivb
inc
xchg
int
lret
lock
mov
sub
mov
xchg
push
push
sub
shrl
pop
nop
cmp
mov
push
push
jno
nop
push
repnz
stos
xor
or
pop
push
cmpsb
addr16
pop
data16
mov
mov
and
cmp
in
add
test
testl
lret
dec
out
mov
lods
aaa
xchg
loop
fcomi
aad
and
dec
xor
mov
rorb
dec
push
push
pop
clc
sbbb
rorl
pop
and
push
sahf
adc
lock
cmp
adc
mov
dec
inc
outsb
cmpsb
push
xchg
ss
test
push
outsl
sub
pop
jp
or
mov
sub
mov
ret
adc
sub
rclb
and
mov
jns
jp
mov
insl
inc
es
js
daa
outsl
xor
inc
jae
add
sbb
stc
pop
xchg
stos
pop
sub
xchg
int3
outsb
fcmovnb
xchg
rcrl
inc
fildl
sub
adc
dec
cmpsb
mov
cmp
stos
sahf
popa
adc
test
sbb
xchg
mov
pop
outsl
or
sub
push
and
les
fcompl
stos
mov
mov
mov
pop
jmp
clc
notl
iret
adc
imul
adc
jecxz
mov
out
push
push
scas
push
fldcw
push
pshufw
push
jge
mov
pop
ja
jnp
addl
xor
push
push
xor
cmp
lds
rolb
adc
mov
pop
cli
outsb
pop
aam
mov
mov
cli
push
in
fdivr
nop
mov
pusha
sahf
sbb
xor
or
shl
in
lea
test
push
arpl
rol
sub
lods
inc
xchg
insl
mov
in
cmp
pop
push
sbb
neg
scas
sbb
lock
neg
stos
insb
addr16
aam
jp
aam
clc
movsb
adc
pop
mov
inc
and
fs
cmc
mov
icebp
xorl
add
mov
pop
cmp
mov
hlt
sub
xchg
movsb
std
xchg
sbb
bound
and
xchg
xlat
mov
add
scas
movsl
mov
mov
lahf
mov
xchg
addr16
sub
inc
test
pop
jne
and
or
fisubl
xor
pushf
pop
xchg
inc
xor
xchg
push
and
lret
ret
insl
adc
dec
adc
daa
adc
cmp
mov
jmp
sub
lret
popf
jb
sar
sahf
rcrb
and
sbb
mov
insl
je
or
leave
pop
data16
fnsave
pop
gs
shlb
dec
cs
adcb
xlat
mov
test
inc
jo
int
mov
repz
outsl
pop
or
add
cmp
cwtl
add
mov
mov
sbb
and
lcall
into
or
pop
add
lcall
out
out
pop
ss
dec
lock
loop
push
lea
fsub
and
cmp
dec
add
scas
aaa
fwait
jbe
jge
dec
jnp
scas
dec
loop
jno
test
add
gs
das
xchg
call
vmread
mov
mov
inc
out
push
insl
out
sub
sub
shl
pop
jno
mov
iret
jns
cmp
pusha
dec
adc
jmp
into
xchg
cs
push
adcl
mov
push
xor
ret
call
and
loope
sub
lods
jno
rcrl
ljmp
test
mov
leave
pop
sbb
fiadds
daa
lahf
sbb
stos
fwait
dec
fisubl
jae
inc
outsl
xor
int
imul
test
lods
popf
or
jne
popf
vcvtsd2ss
dec
add
cs
or
in
jb
mov
fwait
scas
mov
imul
das
sbb
cwtl
in
fwait
scas
dec
xchg
rcrl
test
jbe
jne
arpl
stos
clc
cmp
popw
iret
xchg
imull
sbb
divb
or
add
mov
pop
clc
or
mov
clc
cltd
mov
test
cmpsb
or
cmpsl
pop
insl
lret
insl
mov
mov
cmp
insb
imul
cmp
xor
cld
jo
jp
pop
out
lret
and
into
push
push
lods
push
loop
lcall
sti
das
xlat
cmp
test
cwtl
pop
xor
sub
xchg
daa
rcl
daa
cli
clc
push
in
mov
push
xor
sub
push
adc
dec
push
pop
iret
xor
es
daa
cltd
mov
lods
leave
or
jp
or
fdivs
fwait
movsl
out
or
cmc
test
sbbb
xchg
jo
int
xchg
pop
jp
cmp
pop
mov
imul
and
call
or
mov
jae
dec
nop
fcmovnu
push
repz
sub
mov
sti
mov
mov
cmp
push
sub
cmp
mov
add
out
fs
sbb
movsl
iret
test
cmp
outsb
xor
mov
loop
adc
jp
cli
das
and
jmp
and
pop
dec
inc
enter
sbb
and
cld
popf
mov
inc
add
test
mov
sub
mov
inc
dec
sub
fcomp
cmp
stos
sub
fistps
xchg
loop
test
mov
mov
and
ss
repnz
vmwrite
adc
ljmp
and
adc
adc
cmp
or
pop
dec
pop
mov
xchg
or
mov
es
repz
and
cmpsl
cmpsl
jne
movsl
popf
inc
add
xor
mov
rolb
or
xlat
out
add
xchg
les
fcomps
sbb
add
dec
sbb
inc
ret
push
adc
pminub
loopne
into
daa
adc
add
pop
pop
ss
sbb
xchg
mov
pop
mov
adcb
and
mov
adc
dec
mov
subl
and
xchg
cmp
sbb
orb
sbb
push
add
shll
cwtl
adc
mov
ret
xchg
ljmp
lea
out
add
mov
xlat
cld
sarl
addr16
test
adc
mov
and
add
cmp
addr16
or
ja
dec
aad
push
xor
mov
fdivs
or
inc
dec
dec
lock
movsl
pop
jne
out
cmp
clc
jae
adc
inc
mov
dec
dec
cmpsb
ror
sbb
xchg
adc
movsl
outsl
jno
xor
cwtl
adc
mov
les
cmp
jge
dec
mov
stc
xor
sbb
mov
loop
pop
xchg
dec
and
ret
and
mov
xor
scas
sub
fstpt
aaa
xchg
negb
cli
xor
bound
cs
jo
clc
jecxz,pn
dec
lret
xor
repz
pop
cmpsl
popf
incb
aam
jns
and
cs
xchg
dec
inc
xchg
mov
sbb
xor
push
mov
cwtl
repz
sahf
data16
or
std
jge
jno
push
xor
or
in
loope
arpl
sub
mov
dec
add
insb
movsb
xchg
mov
xchg
mov
loopne
fstl
roll
jp
lahf
mov
sbb
icebp
mov
pop
loopne
aad
inc
mov
in
sub
adc
sbb
ss
shl
ds
push
sub
ret
and
mov
sbb
inc
popf
sub
cmp
mov
inc
sub
pop
cmpsb
int3
bound
sbb
insb
lods
call
jno
lahf
dec
pop
sub
test
pop
pushf
incb
shrl
pop
mov
mov
push
xor
jmpw
adc
adc
xchg
cmpsb
xor
or
jecxz
mov
scas
dec
in
hlt
mov
mov
inc
adc
in
shr
xor
adc
out
xchg
add
leave
mov
sti
rcll
out
adc
xor
rol
add
sbb
inc
cs
lcall
cmpsb
push
idiv
mov
inc
pop
add
fidivl
fs
jmp
std
sbb
popf
gs
hlt
addb
fwait
mov
jbe
lcall
jb
das
bound
jmp
ja
out
xor
xchg
mov
adc
clc
rorb
ficoml
and
jns
pop
add
repz
cmp
mov
js
stos
adc
ss
sub
sbb
push
pusha
dec
jbe
sub
xchg
and
repz
adc
shlb
and
push
adc
and
add
pop
fsubrs
outsb
jb
sahf
ljmp
rcr
fadd
sahf
mov
sbbl
arpl
cwtl
and
sahf
adc
arpl
fdivrs
inc
ss
insb
sbb
iret
insl
mov
lcall
fmuls
push
jno
cld
mov
xor
rclb
movsl
push
ja
cmc
jp
loope
sub
push
lds
push
or
sti
xchg
cmc
or
adcb
jg
mov
insl
jecxz
push
jg
lods
nop
add
es
jg
mov
cli
movb
loope
pusha
sub
jno,pt
addr16
or
fidivrl
xor
dec
xor
cwtl
out
pop
sbb
adc
inc
xchg
sahf
or
popa
lahf
stos
sub
and
cmp
xchg
push
repz
push
addl
sub
pop
xor
cmp
mov
sbb
addr16
sub
add
add
cmpsb
push
test
movsl
push
inc
sub
cmp
jge
or
pop
test
mov
lods
gs
nop
je
adc
outsb
iret
ss
cmp
adcb
pop
leave
popf
stc
shrb
adc
adc
pop
aad
daa
mov
xor
xor
out
cmpps
xchg
xchg
lcall
mulb
das
test
or
cmpsl
push
push
sub
push
in
shrl
mov
push
ds
and
out
mov
pop
mov
xchg
xlat
pop
lcall
jecxz
icebp
sub
mov
pushl
fidivl
inc
jle
rcll
and
out
sbb
adc
cmp
jp
mov
sub
stos
cltd
inc
fiaddl
xlat
dec
cmp
out
push
push
out
mov
xchg
lret
jne
jns
fisttpll
fs
mov
mov
aam
mov
ret
and
and
int
mov
aas
add
ficoml
notl
and
push
aas
aas
movsl
pop
pop
pop
cmc
aaa
xor
pop
jae
shlb
push
test
dec
clc
cmp
rcrl
pop
adc
in
and
int3
sarb
or
das
xor
int3
lahf
xor
fisttps
fldt
iret
adc
fisubs
or
inc
ds
repnz
or
sar
or
clc
mov
sub
add
jmp
lea
out
mov
sub
lods
inc
adc
pusha
inc
fucomi
out
add
inc
stos
mov
dec
mov
or
dec
push
hlt
roll
push
push
sahf
xchg
jmp
mov
mov
test
lods
insl
jnp
or
xor
add
and
mov
jp
out
std
insb
jl
mov
xchg
lds
mov
test
cmp
imul
fwait
hlt
xchg
cmpsb
int
and
sub
xchg
data16
scas
push
das
test
test
pop
cmpb
jnp
mov
add
jmp
dec
insb
or
and
inc
xchg
inc
cmp
rcrl
sub
xor
push
sbb
lahf
fistps
test
mov
out
pop
inc
push
lcall
cmp
or
cmp
mov
or
dec
pusha
lret
lods
mov
add
cld
mov
jl
adc
enter
fsub
cmp
push
cmp
std
push
sub
dec
inc
mov
mov
cmp
dec
shrb
call
test
mov
aam
ror
jmp
mov
in
xor
mov
mov
orl
in
jle
iret
test
sbb
pop
lea
sti
adc
into
jb
or
lods
pop
jo
mov
pop
in
cmp
jl
sub
or
or
mov
loop
ret
or
fwait
test
clc
out
movsl
jecxz
mov
rcrb
stc
push
in
sub
test
lret
mov
cmp
test
mov
or
mov
lahf
hlt
mov
inc
push
mov
sub
push
sbb
add
cmpsb
mov
jmp
and
je
aam
mov
dec
mov
lret
mov
pop
add
sti
fsubrs
push
pop
enter
mov
adc
pop
sub
nop
adc
adc
or
cmp
and
fiadds
push
push
fimuls
imul
hlt
cmp
mov
sbb
insb
xchg
jmp
repz
jmp
pusha
mov
in
sub
jl
push
int
shlb
push
cwtl
in
adc
ss
sahf
inc
ret
scas
push
lahf
ret
pop
cmp
sub
push
cmpsb
out
xchg
add
mov
or
mov
xor
push
cmp
cli
inc
cmc
push
out
adc
movsb
or
xchg
fbstp
sbb
aas
sbb
pop
cmp
cld
add
out
lock
dec
jmp
arpl
push
cmpsl
dec
insb
xor
push
dec
inc
mov
or
mov
stos
mov
mov
pop
daa
mov
imul
int
mov
mov
les
add
push
cld
sub
lret
movsb
pop
fs
push
xor
movsb
ja
xchg
iret
dec
jmp
divb
jo,pt
cmpsb
inc
test
ds
rcrb
fwait
roll
sbb
mov
or
push
je
stos
mov
movsb
jae
jns
mov
sti
dec
or
sarl
sahf
aam
imul
lods
cmpl
push
outsb
les
mulb
into
lods
pop
int3
fs
pop
cmp
popf
sti
imul
jle
adc
jmp
nop
jp
pop
mov
mov
mov
xchg
insb
sbb
push
sbb
jbe
insl
jg
sbb
mov
scas
incl
push
std
std
pop
dec
dec
jl
cmp
adc
test
and
or
cli
cwtl
mov
loopne
test
push
mov
test
insb
pop
jmp
pop
mov
out
in
and
test
add
adc
bound
jno
fbld
or
loopne
push
mov
andl
sub
push
cmpsl
mov
sub
out
into
pop
or
jmp
sub
out
push
jp
ffreep
pop
in
xor
lret
mov
jg
sti
sub
jg
fildl
xlat
xchg
mov
shlb
call
jp
leave
test
ret
push
mov
insb
jo
clc
gs
push
nop
lds
loope
xchg
daa
pop
add
inc
xchg
xchg
in
mov
xor
ljmp
int3
xchg
mov
xchg
push
dec
dec
or
sbb
lods
fadds
xor
sub
xchg
cmp
xchg
mov
bound
push
es
jne
sub
jl
rorl
in
nop
mov
xchg
mov
xchg
out
into
add
mov
gs
ficoms
popa
cmpsl
negl
adc
fnstsw
dec
call
cmp
cmp
outsb
xor
and
in
push
lock
xchg
sbb
mov
jnp
xor
movl
outsl
cli
addr16
or
xchg
cmp
adc
xor
ja
jl
pop
jmp
cmp
jbe
in
jp
stos
jns
mull
jo
jmp
xlat
into
and
subl
outsb
imul
xor
ret
sbb
aam
in
ds
js
imul
idivl
push
xchg
xor
adc
sti
shlb
xlat
dec
imul
mov
mov
pop
dec
sahf
sub
test
dec
cmc
pop
lret
jo
sub
mov
jne
cwtl
lahf
andb
dec
js
cmpsl
jb
scas
int
mov
jns
mov
lea
jmp
into
inc
int
dec
push
lcall
ja
stos
imul
lods
rcll
pop
jmp
mov
adc
pop
xor
ja
out
outsl
imul
inc
outsl
xchg
loopne
clc
lahf
mov
xchg
outsb
and
addb
inc
inc
mov
pop
cwtl
xchg
data16
retw
dec
pop
mov
scas
lds
mov
cltd
bound
fprem
movsb
sbb
addr16
les
mov
mov
push
push
pop
mov
xor
not
xchg
adc
lret
lahf
rcrl
cmp
adc
jmp
iret
sahf
clc
adc
or
aad
add
cmp
cmp
inc
in
movsl
into
xchg
stc
mov
jecxz
push
xor
data16
and
mov
adc
xchg
scas
fistl
xor
cmpsl
sub
xor
pop
je
outsb
test
mov
pop
test
jl
xchg
push
pop
push
gs
stos
mov
push
div
fs
cmp
test
les
mov
inc
inc
dec
test
cmpsl
sbb
test
pop
clc
leave
cmp
mov
jns
lcall
or
fisubrs
mov
add
pop
inc
or
sub
rorb
jo
out
mov
add
xchg
lock
pushf
stos
jge
mov
shrb
leave
std
inc
ds
mov
sub
sub
add
cmp
or
jp
xor
push
pop
and
sti
addr16
or
repz
mov
hlt
inc
int
mov
sbb
push
mov
mov
adc
sub
icebp
add
cmp
adc
adcb
adc
adc
dec
daa
and
icebp
push
jmp
mov
dec
hlt
lret
leave
lods
insb
out
add
xchg
xchg
test
and
mov
popa
sbb
je
orl
lds
fnstenv
push
cmp
int3
enter
mov
sbb
pop
imulb
mov
xlat
xchg
es
rcrb
add
das
stc
popa
adc
ds
rcrb
push
adc
leave
testb
sub
les
cltd
ret
cmp
adc
loop
pop
jle
xor
dec
add
dec
push
loopne
mov
or
mov
pop
mov
inc
mov
shll
xchg
fwait
push
bnd
out
test
mov
les
sbb
cmp
xchg
pop
daa
daa
adc
jmp
rcll
xor
sahf
das
sbb
addb
clc
cmp
xor
push
dec
and
mov
jbe
push
imul
je
push
mov
sbb
mov
es
clc
or
nop
jmp
adc
bound
xchg
dec
jp
aad
push
pop
dec
insl
movsb
cmpl
push
fsts
imul
outsl
xchg
in
and
cmc
mov
mov
out
icebp
mov
out
pop
insb
mov
bound
lock
and
sti
or
inc
int3
xchg
pop
push
push
dec
ret
or
nop
push
sub
sbb
jmp
mov
xor
xlat
sbb
scas
in
cmp
lcall
jo
out
bound
inc
dec
lds
leave
adc
les
push
or
popf
sub
mov
shl
lea
ja
stos
mov
je
xlat
mov
in
ja
and
cltd
fisttpll
pop
pop
mov
aaa
mov
js
lret
in
in
mov
loope
or
lea
sub
out
pop
pop
movsb
outsb
adc
lahf
pop
data16
sahf
mov
and
adc
jne
ficoms
xor
push
out
ds
pop
mov
outsb
or
and
addr16
ja
sub
rcll
cmp
push
cmp
insl
cli
sbb
loopne
ficomps
pop
and
test
movsb
mov
or
xor
ds
cmp
adc
loop
arpl
lahf
dec
adc
mov
out
pop
xchg
mov
loop
push
arpl
xor
pop
iret
pop
int
lahf
cmp
push
dec
sub
into
sahf
clc
mov
je
lock
hlt
xor
iret
mov
cs
insb
repz
xchg
fstl
dec
aad
lods
test
inc
insb
sar
or
lret
decl
loopne
pop
mov
fmulp
pop
jb
or
dec
pop
int3
cmpsl
mov
xchg
inc
jno
js
mov
jge
shl
push
leave
xor
push
cmpsl
cli
push
sub
outsl
mov
repnz
fwait
inc
out
test
or
movsl
test
xor
pop
lret
xor
sbb
out
cld
fidivrs
popa
mov
arpl
xor
hlt
cmc
je
stos
mov
lods
ror
test
into
dec
aaa
test
pop
pop
pop
dec
push
movsb
dec
xorb
pusha
lea
or
or
div
loopne
xor
add
ss
pop
sub
push
bswap
pop
out
movsb
out
add
cs
out
in
imul
inc
ret
jno,pn
fmuls
or
cli
xor
or
cmpsl
xchg
xor
pop
sub
pop
inc
jecxz
adc
dec
jp
push
mov
jae
icebp
call
sub
and
aad
clc
imul
call
sub
or
mov
xor
sbb
sub
mov
call
aaa
pop
cmp
movsb
jnp
xchg
rcr
out
xchg
mov
clc
hlt
add
outsb
inc
mov
arpl
push
lods
inc
stc
subb
int3
and
and
lods
andb
or
out
mov
sti
stos
mov
mov
fildl
cmp
aam
pop
push
adc
aas
enter
lds
push
sub
mov
loope
push
std
mov
push
scas
jmp
insl
mov
jae
xchg
adc
out
dec
out
sbb
mov
cmpsl
lcall
sbb
dec
mov
xchg
lock
addr16
mov
jns
lret
mov
in
add
push
pop
and
sbb
push
fs
xor
cli
push
add
xchg
sbb
pop
pop
jp
out
imul
adc
cmc
sbb
xor
call
nop
sarb
sbb
or
ljmp
fs
push
or
pop
pop
mov
addr16
lret
mov
cmc
and
mov
es
jb
xchg
inc
jmp
pop
lea
push
mov
cmp
sbbb
lods
cmc
pop
fiaddl
mov
loope
mov
lret
fucomi
dec
push
mov
mulb
sub
sub
bound
sbb
popf
cmpsl
or
imul
outsb
arpl
rolb
sbb
adc
test
mov
sbb
mov
mov
sbb
sub
mov
pop
sbb
loope
outsl
push
pushf
and
jge
push
enter
pop
mov
sub
mov
mov
ss
dec
mov
test
pop
xchg
sbb
pop
fistpl
int3
test
fstps
fbstp
in
sbb
xchg
push
jns
jmp
dec
loope
into
sbb
not
dec
ds
pop
pop
rcl
xor
ret
mov
cld
lret
outsl
sbb
inc
push
xor
clc
adc
xor
push
testl
ds
inc
gs
call
sub
push
mov
mov
mov
mov
add
daa
repz
pop
mov
enter
int
gs
xchg
sbb
sahf
sub
and
push
xor
xor
mov
sbb
xchg
rcll
insl
dec
sbb
sti
jge
test
pop
dec
loopne
ret
inc
test
daa
cmp
imul
ja
push
pop
xchg
fdivrl
nop
lcall
lcall
mov
movsl
mov
mov
sbb
pop
mov
sbb
and
sub
mov
push
pop
mov
pushf
shlb
pop
pop
pop
jbe
mov
cld
outsb
or
je
scas
loope
mov
cmpl
jbe
adc
mov
mov
insb
ja
aam
cltd
cmp
xchg
out
jno
add
cs
xor
dec
jno
pop
sub
lods
mov
sbb
inc
bound
dec
imul
repz
stos
xchg
lock
push
ret
ret
jp
xor
fbstp
shld
aaa
insb
xchg
dec
dec
negl
add
stc
in
mov
jge
rcrb
or
cmp
fistps
cmp
arpl
sub
in
aam
ljmp
inc
out
push
sbb
xor
repz
inc
jb
mov
xor
shll
mov
inc
jle
adc
sub
adc
imul
stos
adcl
in
ja
cltd
sub
mov
popf
jae
outsb
test
adc
or
push
stos
movsb
ljmp
push
xor
and
incb
mov
test
insl
pop
aas
loop,pn
aaa
loop
mov
adc
jno
mov
mov
in
jge
sbb
outsl
add
xchg
pop
push
sub
mov
sbb
cmpl
rolb
aas
or
adc
sbb
inc
mov
aad
sbb
dec
stos
sub
or
arpl
dec
mov
clc
inc
icebp
inc
sbb
or
inc
pop
movsl
cmp
es
mov
movl
dec
lcall
popa
mov
cmc
and
mov
imul
and
icebp
imul
mov
add
pushf
sete
inc
lods
out
shll
scas
add
inc
jns
inc
lcall
sbb
add
mov
fcmovnu
fs
test
cmpsl
xlat
or
xchg
xchg
in
lcall
sub
add
mov
ret
mov
popa
mov
fistpl
shr
ss
add
push
dec
outsl
rclb
sti
xchg
jp
scas
inc
movsb
and
mov
jg
pushf
pusha
sbb
bnd
nop
daa
scas
test
pop
fmull
fbstp
aas
sarb
mov
push
clc
in
out
fistpll
test
scas
or
in
das
cmp
out
mov
push
lahf
outsb
push
push
scas
add
iret
rep
movsl
dec
and
imul
popa
or
mov
mov
mov
rcrl
mov
stos
push
pop
les
in
ret
ja
pop
mov
lds
and
pop
sbb
ss
in
aam
mov
cmp
icebp
cmpsb
add
aas
dec
and
or
pop
pop
enter
pop
xchg
arpl
mov
mov
or
cmp
jae
mov
and
dec
xor
xchg
jns
repnz
pusha
out
dec
icebp
mov
addl
cmp
mov
iret
cltd
ljmp
repnz
rep
cmp
popa
or
lcall
mov
es
movsb
andb
sarb
sbb
call
rolb
push
pop
into
and
imulb
adc
leave
inc
les
int3
repnz
daa
sbb
loopne
iret
lods
xadd
xor
mov
pop
or
push
ret
or
stos
inc
cld
sbb
and
outsl
sbb
adc
add
fistps
mov
in
and
outsl
pushf
jnp
cmp
mov
int3
lea
mov
addl
add
outsb
sbb
ret
fwait
sti
pextrw
in
mov
or
sub
pop
lret
sbb
test
and
push
sub
xchg
enter
cmp
inc
imul
or
dec
mov
mov
lods
ds
imulb
cmp
mov
movsl
mov
test
cld
mov
jb
jle
nop
sbb
rorl
sbb
jecxz
adc
leave
outsl
pop
or
mov
fnstcw
sbb
xchg
sbb
pop
roll
cmp
outsl
mov
pushf
and
push
xchg
adc
outsb
lret
and
jl
push
aam
dec
sub
xchg
sub
mov
into
pusha
or
rol
cmp
jnp
scas
ds
cwtl
inc
fimull
mov
out
faddl
pop
dec
push
loop
outsl
pop
ljmp
dec
sub
cmp
jmp
movsb
cltd
js
jg
and
sbb
xor
mov
addl
pop
pusha
xchg
vmwrite
xor
fsts
push
push
xor
jnp
test
xorw
jne
or
test
call
aas
bound
mov
rcrb
mov
cmp
sbb
rcrb
xor
add
repnz
rorl
ret
mov
mov
stc
aam
push
or
or
fcoml
inc
daa
sbbl
mov
xor
mov
inc
pop
jae
repnz
ljmp
sub
and
imul
out
lcall
inc
idivb
arpl
pushf
push
xchg
jno
pop
mov
sub
shrl
in
inc
push
inc
dec
lea
xchg
xchg
fisubs
add
xchg
cmp
in
mov
inc
nop
add
mov
push
cmp
lcall
icebp
lcall
sti
push
daa
in
hlt
out
cmpsb
adc
sub
mov
xor
test
jg
adc
icebp
and
repz
insl
icebp
add
loop
mov
push
jae
sti
dec
pop
test
add
fwait
das
push
lret
js
dec
enter
leave
adc
sub
subb
pop
jmp
sub
cmp
in
mov
cmp
test
lahf
adc
iret
cmp
fs
pop
iret
mov
mov
fiadds
imul
adc
xor
jp
add
rcrl
movsb
adc
fs
fidivs
jns
mov
jns
sbb
daa
pushl
push
rcr
sub
sub
add
add
inc
dec
data16
fmull
in
xor
xchg
ret
xor
sbb
jbe
pop
add
mov
or
lret
or
movsl
das
adc
lret
je
adc
xchg
inc
movsb
lock
add
add
pop
inc
in
cwtl
push
out
push
inc
inc
icebp
or
or
xchg
cmp
cwtl
sbb
addl
gs
or
mov
dec
out
scas
daa
pop
mov
adc
xor
je
and
mov
sti
jb
clc
sub
or
jnp
jg
sub
fidivrl
test
loopne
jg
jge
push
push
add
dec
jns
loop
ret
insl
cmp
pop
mov
jo
mov
das
daa
xor
push
or
mov
es
xor
sub
out
xchg
pop
fidivs
out
iret
push
cmp
cmp
jns
cmc
hlt
push
pop
into
sbb
push
mov
mov
mov
dec
mov
lea
orl
or
or
stos
scas
adc
push
scas
inc
cmpsl
popl
add
dec
or
xor
add
dec
test
in
sub
dec
mov
movsl
mov
lret
fwait
sahf
push
call
loopne
inc
add
lods
jl
xchg
mov
addr16
fiaddl
cli
jae
faddp
test
adc
pop
fwait
cmp
movsl
call
pop
mov
das
lss
inc
rcll
add
outsb
add
loope
sub
sbb
push
mov
cmp
add
mov
add
arpl
in
shl
movsb
dec
jle
dec
pushf
mov
xchg
sti
loopnew
jb
je
mov
js
mov
loopne
int
xchg
push
jne
xchg
push
add
popa
rsm
inc
inc
inc
int3
out
jae
stc
or
int3
xor
or
xchg
lahf
stos
inc
xchg
add
leave
cmp
xor
adc
add
mov
push
sub
int3
fimull
lds
out
mov
ret
mov
dec
in
aam
lret
inc
sub
bound
ret
push
jno
pop
cmpsb
inc
inc
push
movsb
pop
insl
test
adc
enter
mov
inc
dec
fsubl
addr16
cmp
out
mov
or
push
add
or
adc
push
outsb
fistl
push
in
dec
push
scas
sbb
add
pop
icebp
in
jp
xor
inc
dec
loop
adc
inc
inc
push
dec
mov
adc
and
lods
xchg
mov
sbb
add
pushf
mov
xchg
pusha
cmp
xor
stos
je
dec
sub
mov
jg
mov
mov
scas
push
jae
stos
dec
rcr
out
cltd
out
dec
mov
arpl
iret
mov
insl
movsb
add
cltd
fldz
lods
dec
mov
cltd
mov
repz
sbb
or
fisubrl
cld
sub
mov
repz
mov
ret
jno
stos
mov
dec
cmp
icebp
aam
insl
xor
mov
daa
stos
adc
into
push
add
add
jmp
xor
hlt
call
std
mov
cmp
mov
sub
cwtl
add
cs
or
movsb
repz
testb
sar
and
std
ljmp
and
inc
sbb
mov
jmp
dec
popa
pop
push
mov
fwait
outsl
stos
fcoms
aas
ds
jb
addl
jns
stos
lods
xchg
sbb
add
stos
mov
lods
repnz
icebp
xor
cmp
int
cmp
cwtl
shlb
outsb
call
aaa
push
jne
repnz
insb
mov
subl
jl
mov
loop
mov
pop
outsl
pop
shll
ret
inc
into
jl
in
mov
incb
scas
and
mov
xchg
test
add
mov
and
fbld
inc
or
pusha
ja
adc
fisubs
jp
inc
sbb
sub
mov
sbb
jp
push
fsub
dec
cli
dec
xchg
test
xchg
rclb
pop
lahf
cltd
sti
mov
pop
add
xchg
out
pop
push
hlt
ss
movsl
cwtl
mov
imul
inc
or
push
arpl
clc
and
xor
scas
cltd
xor
and
loopne
lret
movsb
pop
sahf
hlt
or
cli
repnz
lock
pop
and
dec
mov
stos
int3
lret
mov
popf
xchg
sub
into
andl
push
mov
mov
fsub
repz
cmp
mov
idiv
push
xchg
mov
test
in
jl
lods
pop
cli
outsl
xor
push
mov
xlat
jg
pop
sti
fists
test
out
popf
pop
inc
arpl
test
or
loop
rclb
call
mov
xchg
xchg
mov
out
sbb
or
cmp
js
ds
cmp
scas
add
inc
cmc
repnz
invd
mov
ret
jp
mov
mov
and
add
push
out
aas
mov
outsl
mov
mov
mov
mov
sbb
pop
xchg
cs
add
stc
xor
push
int
call
rclb
sub
lods
imul
inc
push
xchg
xchg
sub
in
push
std
cs
mull
mov
in
or
fs
adc
in
jmp
stos
dec
ficomps
sub
loopne
add
sbb
dec
jbe
mov
mov
popa
pop
mov
gs
inc
and
inc
shrl
mov
and
stos
enter
stos
aas
mov
fs
mov
dec
add
enter
xchg
mov
outsb
out
lods
mov
out
push
ret
mov
mov
aam
test
insb
pushf
push
stos
bound
jne
inc
in
fnsave
sbb
mov
inc
mov
cld
aam
test
cli
add
outsb
insl
out
pop
orl
int
rorb
insb
lret
das
in
cmp
mov
and
push
das
mov
ja
cwtl
pusha
addb
sbb
and
cmp
call
xor
sbb
and
or
mov
push
ret
out
push
out
dec
ss
or
pop
popf
psadbw
in
cld
mov
xchg
xor
inc
dec
pop
sub
cwtl
dec
jo
or
or
xlat
push
push
test
xchg
mov
or
inc
scas
int3
mov
das
int
sarb
int
inc
push
push
add
cmpsb
lds
mov
es
test
test
pop
jg
jg
mov
sbb
xchg
fisttps
icebp
movsb
jl
dec
ljmp
add
add
mov
push
rorl
cwtl
or
adc
fsub
jl
incb
lret
dec
mov
jmp
mov
rcrb
repnz
or
and
adc
out
mov
out
ret
cmp
hlt
movsl
jne
aas
mov
mov
fsubl
in
xchg
adc
mov
outsl
sbb
add
repnz
jnp
je
test
out
and
iret
addl
sub
pop
fldt
adc
ret
sbb
adc
xchg
pusha
mov
pop
cmpsl
push
jb
and
xor
and
jnp
out
test
jmp
sub
xchg
add
push
and
loop
cmc
xchg
pop
shl
stos
mov
xor
fildll
mov
inc
out
jmp
movsb
cmp
daa
xchg
dec
hlt
mov
dec
push
sbb
sub
lods
clc
lock
lret
pushf
cltd
xor
or
or
mov
push
in
movsb
aam
fimuls
popa
push
push
xchg
xor
mov
jbe
dec
sub
call
popa
into
andb
xor
push
stos
sbb
sbb
js
jb
ljmp
adc
flds
lahf
pop
jno
cmp
sub
js
jne
lret
js
sbb
or
mov
pop
jle
jno
pop
test
movsb
movsb
pushf
and
adcb
xchg
mov
fstps
jns
fnop
aam
fnstcw
mov
cmc
mov
sahf
into
subb
adc
shlb
scas
pop
rcrb
mov
scas
inc
mov
adc
and
pusha
and
mov
test
call
mov
sbb
daa
mov
mov
or
mov
in
cmp
test
adcb
cmp
notl
push
fldenv
in
mov
imul
sbb
loopne
je
jmp
into
add
fxch
cmp
sarl
jno
call
mov
call
xor
or
mov
mov
or
push
push
xchg
push
daa
stc
clc
or
enter
lds
sbb
ret
in
ret
clc
pop
mov
test
loop
rcrb
mov
jnp
push
in
ds
repz
sahf
fsubrs
jmp
inc
cmp
stc
sub
adc
int3
xlat
inc
stos
push
lret
test
sbb
mov
rcll
xchg
rep
pop
inc
push
out
or
or
jmp
or
lock
mov
mov
mov
xchg
jmp
pushf
bndldx
inc
pushf
jge
push
in
xchg
loop
lret
push
test
filds
mov
cli
mov
mov
sub
mov
xor
popa
xor
jb
mov
movb
insb
lea
or
test
jmp
jnp
pcmpgtd
divb
ljmp
setle
or
cs
jecxz
int3
popa
ss
out
cld
inc
pop
and
xor
out
or
in
int
loop
arpl
in
lret
mov
fnstcw
repz
add
fnstsw
xor
push
mov
jge
jnp
out
aam
enter
cld
cmp
xor
sub
cmc
pop
jbe
mov
ret
pop
mov
fidivrl
fsubrp
sub
or
dec
or
test
or
pushw
or
xchg
push
ss
sti
dec
inc
dec
mov
insl
and
mov
rclb
mov
pop
aaa
mov
pusha
lcall
scas
pop
pop
lods
mov
lock
shrb
cmp
xchg
negl
aaa
mov
gs
xchg
mov
lret
mov
pusha
pop
es
lret
dec
subb
mov
xor
in
fidivl
bound
mov
inc
dec
ret
xor
adc
cmp
xchg
mov
stos
jb
inc
or
rdtsc
loope
aas
lods
je
inc
inc
jecxz
dec
adc
inc
sbb
jp
repnz
dec
mov
jecxz
shll
mov
clc
test
enter
aad
shlb
in
inc
mov
xchg
popa
or
jge
mov
add
add
cmpsb
push
out
or
into
push
ss
add
sahf
push
jge
lret
mov
xchg
xor
inc
test
bound
mov
push
jl
pushf
aad
sub
nop
popf
cmpsl
sub
ja
sub
xchg
out
js
xor
movsl
fmuls
and
xchg
cmp
jnp
stos
xchg
sbb
in
dec
fwait
push
shll
xchg
js
xchg
mov
ja
shlb
cmp
inc
adc
mov
ljmp
repnz
sti
clc
in
daa
push
fimull
out
icebp
je
jo
pushw
std
inc
or
inc
inc
cmpsl
cmpsl
pop
mov
jl
mov
push
jae
jb
sbb
push
jmp
adc
je
mov
repnz
popa
inc
leave
repz
cmp
push
dec
scas
mov
xlat
cmc
arpl
test
lock
movsb
add
les
mov
outsl
push
orl
addb
xor
jo
scas
inc
andb
jl
sbb
adc
jnp
imul
or
icebp
and
test
push
sbb
fstpt
pop
cli
dec
lock
cmc
insl
or
inc
xor
adc
pop
pop
xchg
ret
jne
inc
push
xchg
mov
fstl
subl
adc
aaa
cmovns
dec
std
jb
repnz
test
pusha
scas
test
push
shrl
push
dec
or
and
sub
jne
xor
or
fistl
inc
adc
push
push
scas
jbe
cmp
clc
push
jns
xor
adc
and
add
push
xchg
rcrl
cltd
mov
sbb
into
mov
pop
lea
cmp
repz
popa
sahf
cmp
scas
outsl
jle
cwtl
jae
inc
xor
jg
addr16
fwait
mov
mov
adc
pop
notb
je
push
xor
cmp
push
sbb
pop
jns
cld
repnz
xor
xlat
or
mov
adc
addr16
xor
imul
test
rorb
and
fnstsw
push
lret
scas
repnz
lds
sbb
pushf
aas
mov
fildl
addb
lret
cmpsl
lods
push
mov
dec
lahf
mov
or
cmpb
xchg
sbb
sbb
xor
adcl
push
dec
std
push
ss
inc
sbb
sub
ljmp
xlat
sbb
jo
jp
mov
push
lea
fistps
je
testb
insl
lret
or
sub
lds
fsubrl
insb
in
jo
add
rorl
lcall
sbb
or
jp
push
mov
mov
adc
push
push
cmp
jns
sub
in
aas
and
sahf
push
leave
pop
aas
jo
jnp
aam
xor
pop
sub
insb
imul
jnp
loopne
daa
sbb
loop
adc
push
pushf
sbb
mov
mov
out
inc
adc
inc
mov
fcomps
lods
ret
stos
inc
lret
fcomps
leave
and
repz
stc
cmpsb
lret
clc
xchg
mov
xor
pop
les
in
sbb
jecxz
pushf
ja
push
frstor
cmpsl
xor
and
stc
dec
imulb
mov
iret
sahf
hlt
inc
clc
push
loope
pushf
cmp
push
cmp
xor
popf
loop
mov
mov
fistps
jbe
push
scas
test
or
push
mov
cmpsl
inc
pop
and
out
daa
imul
mov
fistpll
fdivrl
jl
dec
repz
clc
rclb
lds
inc
imul
xor
sbb
aam
and
test
push
jns
stos
jae
inc
pop
es
xlat
fsubs
mov
dec
dec
pop
jmp
shrb
xor
jl
fcmovb
adcl
push
dec
cmpsb
xchg
faddl
lret
test
pop
in
or
mov
pop
xor
push
or
stc
push
aas
xchg
xchg
jg
mov
test
int3
xorl
and
gs
push
dec
jl
test
push
aas
cmp
je
dec
test
gs
into
jp
dec
inc
in
push
and
push
xchg
lds
call
aaa
add
push
mov
faddl
jmp
ret
xchg
mov
add
xchg
data16
xchg
in
xchg
daa
ss
mov
push
sub
popf
je
push
dec
out
mov
or
mov
cs
mov
sbb
xchg
or
xor
pop
adc
jno
cmpsb
test
testb
push
ret
scas
adc
and
jecxz
gs
stc
xchg
lds
lods
mov
dec
jge
imul
push
mov
ss
outsb
shlb
and
push
mov
jbe
hlt
addl
xchg
cmp
call
inc
fldenv
fwait
lret
pop
add
pop
mov
dec
pop
aaa
fs
lds
stos
mov
adc
cmpsb
in
xor
mov
jecxz
jecxz
add
movb
xor
scas
cwtl
jo
push
push
sbb
jo
aad
xlat
es
cwtl
dec
in
sub
into
mov
int3
shlb
mov
imul
xlat
fbld
les
sub
sub
scas
jge
jno
sahf
jb
pop
mull
cmpsl
pop
aam
pop
xor
and
sub
inc
into
std
push
adc
ret
or
fisubrl
rcl
jge
aad
outsl
mov
push
and
jnp
fisubrl
ss
cli
out
inc
pop
push
pusha
dec
mov
inc
pop
xorb
es
dec
add
sbb
nop
loope
sbb
pop
jge
or
pop
mov
fistl
or
nop
sub
pop
leave
adc
inc
sti
aas
jae
pop
ret
inc
in
scas
lcall
test
jp
sbb
into
out
lahf
int3
mov
jl
xor
hlt
adc
inc
pop
sti
xchg
jae
pop
dec
jae
out
scas
lret
and
mov
dec
arpl
andb
pushl
push
in
ljmp
xchg
mov
jg
out
cwtl
mov
xlat
fisttpll
adc
mov
push
fsub
ljmp
cmp
in
je
jo
jmp
movsl
mov
xor
inc
aaa
lret
stos
leave
dec
push
jae
push
cmp
sbb
adc
addb
add
fsubp
and
imul
mov
div
in
mov
daa
hlt
cmp
inc
dec
mov
or
sbb
loope
push
std
aam
xchg
mov
imul
aaa
jl
jo
stos
pushf
fisubrl
gs
scas
jg
in
fldt
outsl
push
jns
xchg
push
pop
lret
scas
out
inc
push
bswap
sbb
pop
aaa
pusha
cmp
les
jl
pop
cs
stos
pushf
adc
mov
rolb
lods
mov
cmpsb
test
inc
push
sub
pop
xor
ret
add
je
sub
lods
mov
adc
fsubrl
test
outsb
add
dec
dec
ds
jbe
push
adc
pop
adc
cmp
clc
sbb
mov
test
xlat
dec
in
rep
push
push
pop
mov
cmpsb
inc
pop
pop
cld
aas
inc
inc
mov
fisubrl
mul
mov
mov
inc
popl
add
cmpsl
sbb
js
mov
inc
jb
sbb
pop
jne
test
xchg
pop
test
call
push
int3
mov
cmpsb
insl
call
sbb
movsl
jno
ds
movsl
ds
cmp
lret
or
sub
mov
cmc
mov
pop
cmpsl
and
hlt
push
push
repnz
push
test
clc
stos
mov
adc
push
sti
sbb
sbb
insb
or
sub
pop
dec
sbb
inc
xchg
cmp
scas
shrd
mov
orps
out
std
jmp
push
lcall
in
addr16
aas
in
mov
shll
shlb
pop
ret
fstpt
and
xchg
lock
cmpsb
sbb
inc
push
xor
jbe
add
pop
pushf
xor
outsb
mov
lahf
pop
sti
sar
xor
jmp
in
cmp
and
outsb
ficoml
fs
into
movsl
aaa
rclb
mov
mov
lahf
or
jmp
test
bound
or
loop
sub
mov
rorb
inc
fstpl
lods
cmp
inc
fwait
daa
pop
sbb
pop
xchg
fistpll
sbb
jp
mov
sub
and
add
es
jb
xorl
sbb
or
lcall
out
adc
cs
pop
les
sbb
sbb
push
fsubrl
popf
cmp
cli
lea
pop
fsts
rorb
clc
outsb
pushf
jl
jge
pop
add
xchg
rolb
fisubrl
jge
add
mov
xchg
inc
lret
xor
ficompl
leave
and
pushl
push
lret
sub
mov
and
jecxz
mov
pop
adc
scas
stos
pop
lods
mov
mov
and
sub
push
mov
ret
push
pop
push
jl
jge
mov
mov
fscale
in
into
fwait
subl
dec
jae
fcoms
js
inc
pop
daa
dec
mov
adc
adc
mov
je
and
js
push
loop
jecxz
xchg
xor
pop
into
int
sub
inc
cmp
cmc
sbb
fiaddl
adc
mov
cmp
pusha
add
int3
sti
adc
sbb
push
ss
neg
cmp
aas
nop
loopne
push
shl
pop
in
pop
sbb
ret
rol
or
and
int
in
popl
or
push
mov
lret
xchg
mov
clc
mov
movsb
inc
lods
inc
scas
jge
and
pop
cmpsb
adc
lds
cld
scas
lock
lock
mov
lock
jge
sbb
stc
hlt
cmpsl
and
hlt
pop
inc
roll
dec
inc
and
lahf
sbb
rclb
mov
sahf
sbb
or
adc
daa
or
lret
push
dec
jle
pop
leave
pop
add
and
clc
clc
xor
inc
jae
loop
loop
or
dec
jbe
shll
xchg
in
mov
fucomi
inc
cmpsl
mov
dec
xor
and
pop
pop
lret
clc
rcr
out
inc
ja
dec
cmp
outsl
inc
cwtl
xor
nop
jne
mov
xlat
xchg
stos
sbb
dec
push
clc
icebp
lahf
push
insl
stos
push
sti
adc
xchg
ret
inc
in
dec
std
add
pushf
pop
ret
push
movsb
adc
sbb
sbb
lds
adcb
lock
test
fcomip
or
lret
in
fimull
mov
pop
addr16
cld
or
cmp
outsb
cwtl
dec
xor
orb
push
dec
mov
loope
sbb
mov
sub
push
dec
outsb
gs
lods
push
out
fstps
inc
sub
sbb
mov
mov
in
ret
push
or
mov
mov
push
xor
mov
pusha
in
test
adc
outsb
ja
sub
pop
mov
out
push
pusha
push
or
inc
and
rclb
xchg
xchg
iret
rol
lea
rol
add
cmpl
pop
out
js
sub
cltd
icebp
aas
jns
rorb
mov
cmp
add
imul
pop
testb
or
fildl
ljmp
push
rolb
dec
push
add
jne
xor
pop
dec
and
cmp
stos
repnz
cltd
fs
mov
iret
jecxz
dec
mov
adc
lret
pushf
shlb
sbb
fwait
or
sub
jecxz
adc
test
shlb
jmp
sbb
cltd
mov
sub
adc
pushf
test
jecxz
cwtl
or
rcr
cmp
jbe
dec
mov
mov
dec
out
sub
and
leave
test
push
movsb
xor
sbb
test
add
dec
dec
cmp
dec
fcom
mov
int3
rcrl
xchg
mov
or
andl
dec
mov
mov
xchg
xchg
sbb
lret
pop
jl
imul
xchg
adc
outsl
add
mov
xorl
add
fistpll
and
cmp
insb
dec
xor
decl
cmpsb
inc
or
in
mov
cwtl
xor
or
sub
add
cmpsb
sub
mov
scas
lahf
test
push
inc
inc
xchg
js
xchg
pop
or
cli
pop
sub
lret
fisubl
in
int
rolb
es
out
js
fwait
and
mov
test
jno
jb
mov
and
rorb
sub
outsb
inc
xor
ljmp
out
push
enter
ljmp
xor
fmuls
and
dec
dec
mov
nop
mov
adc
or
dec
cmpsb
dec
int3
hlt
push
sbb
dec
cmp
adc
mov
xor
push
cmp
cmp
out
push
ret
popf
mov
dec
sbb
xor
sub
lods
add
shl
lds
test
lds
push
insl
mov
jo
aad
dec
inc
lods
clc
jle
loope
daa
aaa
les
lea
add
les
decl
in
adc
mov
pop
hlt
mov
int
and
sbb
adc
movsl
sub
scas
mov
mov
not
push
add
pop
lock
jno
inc
roll
ljmp
in
inc
jne
fildll
mov
adc
js
repz
in
mov
jmp
out
sbb
test
popa
cltd
out
sbb
dec
mov
inc
xlat
or
push
bound
testb
es
orl
addr16
mov
add
insl
ret
pop
jmp
notl
push
insl
hlt
leave
pop
and
leave
dec
test
insb
jl
shlb
into
aam
or
sub
dec
pop
in
and
inc
mov
sub
enter
in
sbb
sti
in
pop
inc
push
fdivl
mov
and
dec
or
out
cli
push
cmpsl
mov
or
cmp
fldt
push
fmull
and
repnz
insl
inc
pusha
sbb
popf
imul
fimull
cmp
ljmp
bsf
pop
cmp
leave
push
add
pop
mov
scas
cmp
out
fistpl
cmp
push
pop
test
jb
test
adc
test
in
mov
ret
push
lret
aas
cltd
dec
icebp
shll
add
sub
xor
add
test
ret
xchg
add
xlat
mov
lock
mov
cmc
dec
dec
sahf
xorl
fstl
ret
cmp
sbb
jp
mov
pop
sub
sbb
mov
insl
xchg
jbe
adc
testb
mov
or
rcll
jnp
loopne
mov
cmpl
pop
cmp
mov
push
cmp
and
or
sbb
jecxz
or
add
pop
xor
repz
mov
sub
lea
pop
sbb
mov
jp
test
call
movsb
dec
dec
mov
ljmp
ss
in
dec
sbb
adc
aaa
cmp
mov
adc
cltd
pop
jg
cmp
jp
mov
mov
pushf
push
mov
out
adc
pop
decb
jbe
daa
outsb
dec
mov
mov
int3
pusha
lea
jae
repz
out
insl
xchg
int3
adc
mov
xor
jle
xorb
jge
lea
pop
mov
pop
push
sahf
xorl
xlat
jle
push
ret
push
add
cmpsb
cmpsl
out
push
scas
aad
jle
inc
push
push
and
push
or
insl
mov
nop
test
mov
dec
andb
or
cmp
dec
adcl
lods
push
es
std
mov
mov
cmp
dec
outsb
fmuls
sub
mov
xor
or
and
jbe
mov
lods
add
ss
aam
jne
adc
dec
inc
mov
xchg
mov
pusha
mov
push
in
popa
arpl
sbb
das
pop
mov
rorl
stos
outsb
fs
addb
xchg
aas
sbb
orl
gs
call
addr16
insl
inc
outsl
out
push
cmp
sub
xlat
sbb
scas
insb
push
dec
in
and
sti
notl
es
stos
sbb
cmp
ret
sub
daa
jno
pushf
or
dec
out
lds
popa
cmp
lcall
xchg
es
inc
add
test
notl
push
cltd
divb
hlt
aas
andb
cli
xchg
cs
xor
xchg
mov
rcr
cmpsb
mov
loopne
mov
sbb
and
jo
pop
sub
in
shlb
jo
dec
mov
push
pop
push
xchg
lods
inc
out
nop
adc
loop
jbe
jns
das
movsl
test
mov
scas
xchg
call
cmp
sbb
loop
push
mov
aas
push
jns
pop
mov
lahf
fidivs
shlb
push
mov
pop
scas
ret
test
push
xchg
in
adc
roll
loop
pop
fsubrl
repnz
push
aas
out
lret
out
mov
fsub
das
mov
jo
mov
push
ret
push
mov
aam
xchg
xor
push
pop
cmp
adc
pushf
xchg
sbb
dec
mov
dec
and
inc
rcrb
inc
mov
push
rclb
push
fisttpll
ficompl
das
push
xchg
loop
push
jb
cli
jae
jo
pop
fldl
jne
mov
xlat
or
mov
xchg
das
enter
mov
or
xchg
push
add
mov
push
adc
cmp
push
xor
mov
rorl
inc
inc
xchg
jae
xlat
jmp
jg
out
pop
xor
or
sub
dec
xor
and
inc
dec
lcall
add
ret
cmp
xchg
cmp
mov
xchg
fnstcw
adc
sub
jl
addr16
xchg
jecxz
int3
sbb
movsl
and
popf
mov
and
lahf
adc
inc
mov
jmp
jl
lock
fisubl
loope
mov
dec
sbb
test
fucomip
jp
sub
jnp
sub
fwait
push
nop
adc
pop
out
dec
push
outsb
imul
enter
push
movsl
adc
popf
mov
popf
mov
lea
insb
add
test
xor
test
dec
mov
inc
cmpb
and
scas
xor
jecxz
mov
pop
mov
fyl2x
xchg
scas
adc
loop
imul
dec
aad
out
cltd
push
and
and
or
arpl
cmc
pop
nop
lcall
ret
lods
repnz
mov
pop
addb
add
fdivrl
jb
ljmp
dec
or
push
add
mov
pop
test
or
and
push
test
insl
adc
mov
mov
dec
inc
mov
mov
add
cmpsl
cmpsl
and
jno
xor
sti
mov
iret
jmp
cld
and
dec
or
fcmovnb
mov
mov
or
out
aaa
fildl
push
ror
shlb
sub
lods
sarl
xchg
mov
lcall
jo
push
stc
adc
inc
push
mov
aas
sub
enter
inc
in
shr
pusha
ds
mov
or
fnstenv
mov
inc
mov
pop
push
aaa
jge
push
ja
fstpl
pop
jecxz
push
movsl
test
mov
pop
jmp
fimull
xor
inc
mov
hlt
inc
xor
stc
mov
pop
mov
fnsave
cmpb
fs
adc
jge
cmp
pushf
mov
jns
mov
mov
call
or
cld
xchg
fisttps
push
adc
cli
cmp
inc
or
or
out
stc
mov
mov
xor
sub
dec
ret
mov
push
sbb
dec
es
clc
mov
loop
inc
inc
push
ja
jle
bound
push
in
push
jns
push
xchg
lds
xchg
jmp
pop
call
sub
ljmp
std
aaa
xchg
rolb
or
lret
mov
data16
sbb
test
shll
sbb
hlt
mov
cli
xor
jge
xor
pop
mov
out
ret
and
inc
sbbl
pop
js
push
std
add
lods
adc
adc
sti
dec
fisubl
mov
push
stos
cmpsl
pushf
and
pop
jp
inc
jp
xchg
hlt
in
fisubl
pop
ja
adc
dec
stos
cmc
push
fsubl
jp
repnz
pop
cld
ds
nop
or
mov
mov
mov
icebp
sbb
xlat
loopne
clc
pop
dec
lods
imul
sub
add
xor
mov
popa
and
test
ds
pop
shr
sti
xchg
imul
jae
cwtl
add
cmp
dec
sbb
or
and
pop
shlb
sbb
sub
les
push
or
adc
jecxz
mov
jno
test
arpl
ljmp
or
xlat
and
push
mov
in
rorb
mov
dec
popa
mov
test
or
add
push
fcoms
or
cmpsl
sbb
adc
cli
shl
xchg
stos
cmp
mov
cli
xor
sub
adc
leave
mov
mov
out
xchg
sarl
jb
mov
lret
fdivp
mov
xchg
ja
ds
pop
add
xchg
inc
or
cmp
adcl
insb
rcr
jbe
prefetcht0
add
pop
js
test
push
into
cmp
jl
dec
out
fbstp
adc
imul
aas
adcb
imul
cmp
mov
sahf
rcl
pop
insl
lea
adc
mov
loop
push
or
nop
cmpsl
lods
mov
call
test
movsl
out
pop
xor
mov
jno
fistps
jb
lods
dec
cltd
mov
mov
hlt
xchg
jae
cmc
inc
vdivpd
cwtl
into
out
sbb
inc
in
xchg
push
and
aad
test
shll
xchg
and
cmp
outsb
mov
mov
pop
ljmp
pop
dec
cmp
pop
jo
add
mov
fcoms
cmp
or
loope
ret
dec
sub
xchg
push
xchg
outsb
xchg
in
movsl
mov
into
mov
pop
push
loop
test
pop
cld
push
xchg
jl
cmp
push
mov
cli
aam
add
mov
cltd
ret
jne
fcmovnu
test
jg
xor
mov
sbbb
stc
jo
ret
cs
push
stc
cmp
nop
mov
stos
js
xor
mov
dec
mov
fsub
jecxz
popf
add
add
out
stos
or
loope
push
pop
sbb
repnz
or
jmp
adc
test
into
dec
test
out
lcall
das
dec
and
clc
flds
adc
sar
xchg
jge
pop
mov
repnz
mov
cmpl
das
adc
inc
je
lock
clc
out
pop
jb
inc
add
jmp
flds
jp
arpl
rorl
cmp
lahf
adcl
test
outsl
pop
pop
iret
rclb
call
das
mov
xor
test
call
mov
inc
outsb
dec
call
scas
xor
adc
insb
daa
in
inc
add
jge
rolb
adc
mov
inc
in
popf
add
push
pop
sahf
sbb
adc
in
mov
hlt
adc
mov
hlt
stc
imul
ss
lahf
push
sbb
dec
vshufps
adc
das
sahf
sbb
es
dec
ret
push
adc
mov
mov
mov
jle
xchg
fiaddl
ror
xor
out
jl
jo
mov
xor
sti
dec
stos
pop
scas
incb
shrb
xor
xor
sbb
mov
xor
ljmp
bound
fldcw
imul
adc
gs
sti
fiadds
imul
out
xchg
jmp
in
cwtl
inc
xor
mov
or
mov
xor
je
mov
call
in
or
repz
outsl
sub
lea
lahf
cmpsl
rorl
andb
push
pop
arpl
jge
sahf
sub
sbb
mov
ret
ficoms
sahf
dec
mov
in
test
mov
inc
pop
loopne
sbb
cmpsb
jo
jecxz
pop
pop
inc
mov
inc
and
push
call
das
sbb
loopne
mov
aaa
imul
push
xchg
jb
fsubrl
stos
imulb
sbb
sbb
push
jmp
in
push
push
jecxz
mov
fs
cltd
out
adc
and
jecxz
add
sarb
jb
jg
xor
mov
int
pop
loope
or
frstor
leave
xor
popa
or
xlat
push
nop
xchg
xchg
daa
gs
fistpl
int
xchg
orb
dec
mov
mov
jecxz
jne
js
push
pushf
shrl
pop
cmpsl
lds
stos
mov
cld
cli
jb
xor
addr16
ljmp
or
outsb
dec
jmp
test
add
cmp
subl
fldenv
rcrb
xchg
stc
and
sub
add
cmp
xchg
mov
dec
adcb
insb
cwtl
mov
or
pop
ret
stc
out
or
cli
lock
or
enter
mov
mov
or
inc
insb
push
aaa
jo
ja
dec
aas
sub
fwait
dec
mov
sub
sbb
adc
xchg
arpl
mov
mov
sbb
pop
dec
jmp
cmp
scas
pop
fldt
adc
sub
orb
sti
out
mov
jge
dec
cmc
cmp
fsts
xlat
outsb
fcomp
aaa
jbe
mov
mov
cwtl
mov
jno
insb
sbb
outsl
cltd
mov
xorb
rclb
aam
mov
sbb
jge
test
lret
dec
pop
shll
xchg
icebp
xchg
test
cmp
data16
call
xlat
int3
mov
push
pop
je
adc
cwtl
pusha
out
mov
idivb
mov
call
enter
add
lea
insb
ljmp
les
mov
or
shlb
xorb
push
je
aas
clc
iret
mov
add
mov
mov
jle
cltd
jbe
rcrb
hlt
pop
mov
fmull
inc
ljmp
aaa
push
push
pop
stos
dec
mov
jmp
lods
mov
or
push
cmp
fstps
push
dec
int
out
sarl
js
inc
lds
xor
mov
lret
test
loopne
mov
xchg
add
xorb
lock
cli
ljmp
movsb
jecxz
jne
fs
pop
jns
add
andb
lret
jns
jmp
mov
mov
jbe
bound
pop
movsl
pop
shlb
stc
hlt
push
jecxz
and
inc
cltd
daa
mov
ss
fdivs
ja
aas
xadd
ljmp
and
fs
sbb
adc
xor
inc
outsl
icebp
fistps
orb
mov
xchg
inc
sub
sbb
movsb
sbb
repz
rol
js
lret
add
insb
push
xor
movb
aad
xchg
mov
fadd
fcmovnbe
xor
icebp
mov
out
mov
pop
cmp
cmc
jg
mov
pop
cmc
lods
int3
mov
xchg
rclb
cmp
loope
insb
bnd
mov
shll
mov
jp
ds
or
push
pop
pop
jp
cmp
inc
sbbb
test
insb
xchg
lods
sub
cltd
shlb
mov
cwtl
aaa
adc
jo
int
shll
adc
jle
adc
sarl
cmc
pop
iret
daa
pop
stos
lcall
sub
or
pop
popa
cwtl
mov
popa
fld
inc
or
and
jb
sbb
sub
mov
imul
stos
sahf
shll
int
push
nop
repnz
cmc
insl
xchg
js
mov
push
icebp
arpl
mov
into
mov
jmp
or
jle
movsb
add
stos
subl
js
inc
mov
mov
sahf
nop
je
cmpsb
fs
pop
daa
shlb
pop
push
mov
inc
mov
or
leave
addb
fidivrs
lret
aad
push
mov
rcr
cmp
inc
and
pop
mov
ds
bound
dec
mov
xchg
test
call
mov
cmp
lock
mov
or
xor
into
and
xchg
add
mov
sub
and
fs
fsubrs
call
add
jnp
push
dec
out
dec
test
lahf
adc
dec
mov
gs
and
pop
mov
pop
cmc
jb
push
lcall
in
rclb
cmp
bound
daa
push
iret
aad
sub
xor
js
ret
adc
sar
repz
subb
or
sbb
mov
mov
scas
sub
inc
test
push
mov
stos
or
rorl
adc
je
xchg
sbb
fimuls
and
jae
lods
inc
leave
in
dec
outsl
cmp
xchg
push
cmp
cmp
insb
push
add
aas
dec
mov
or
cmp
loope
pop
push
out
pop
scas
pop
cltd
add
ljmp
mov
loop
jl
mov
jnp
std
jae
mov
das
mov
xor
les
lock
lock
mov
leave
cwtl
pop
jbe,pt
aaa
fsubr
mov
pop
imul
jp
rorb
aaa
xchg
mov
jnp
push
jne
push
fwait
jecxz
in
jmp
mov
sub
sti
gs
push
cmp
rcrl
push
jmp
inc
movsl
aaa
imul
std
and
ds
sbb
mov
mov
xchg
inc
roll
jb
push
popa
jle
adc
daa
jmp
fimull
jb
movsl
arpl
push
daa
ss
std
stc
arpl
cmc
ret
jmp
mov
aam
lock
int
dec
mov
add
cmpsb
xchg
syscall
or
add
inc
fadd
clc
imul
cmp
mov
lds
repnz
in
cltd
in
daa
mov
mov
dec
bound
popa
jne
sub
dec
inc
pop
or
jmp
inc
or
lods
rcrl
xchg
mov
inc
push
mov
pushf
push
sbb
call
pop
xor
jae
imul
or
clc
iret
inc
scas
mov
aaa
or
pop
int
and
imul
ja
cmc
or
or
rcll
into
stc
push
jae
dec
sbb
ret
icebp
sbb
unpcklps
jne
aad
ss
out
jge
sbb
lock
mov
jb
das
and
mov
ret
adcl
xor
jg
adc
or
sbb
fsubl
mov
add
adc
rcrl
dec
cli
lcall
jl
cmpsb
pop
std
add
into
mov
push
adc
test
dec
clc
fnstcw
inc
test
mov
mov
add
inc
dec
cli
push
or
mov
insl
pop
mov
sbb
shll
ret
aas
fadd
push
fsubrl
pop
mov
xchg
imul
add
xchg
imull
or
jmp
scas
pop
nop
sbb
std
xchg
mov
loopne
lcall
xchg
jbe
sub
mov
mov
jbe
lret
adc
shlb
cmc
adc
and
add
and
jle
and
aas
inc
mov
mov
mov
and
cmp
cmpsb
push
ljmp
mov
lds
dec
xchg
inc
push
dec
push
inc
icebp
wrmsr
xchg
inc
and
xchg
clc
sbb
int
nop
sbbb
cmp
test
pop
fs
push
mov
fidivrs
and
insb
dec
ja
and
arpl
out
pop
fcoml
lods
add
inc
jno
jg
jle
cmp
and
out
popf
icebp
or
push
subb
and
dec
cwtl
adc
dec
add
xor
mov
cmp
rclb
inc
inc
xorl
jns
and
subl
inc
lret
mov
adc
pop
and
sub
adc
or
and
pop
mov
loopne
imul
aaa
rcrb
push
xchg
insb
fimuls
jae
jle
or
add
jbe
shlb
lea
idivl
outsl
aam
jle
mov
es
xor
sub
push
lods
mov
ljmp
mov
enter
fs
or
loop
incl
dec
ljmp
xor
pop
add
insb
push
pushf
les
orl
adc
xor
mov
popa
add
ds
jp
add
scas
cltd
pop
mov
cmc
dec
cs
out
rcl
mov
xor
bound
int
sbb
push
xchg
mov
push
pop
and
xchg
adc
rorl
and
mov
imul
mov
pop
int3
out
pusha
ss
inc
andl
std
hlt
mov
pop
ret
rol
push
sbb
add
sbb
jmp
push
inc
pop
rcrl
cmp
sub
insl
mov
jbe
add
and
sahf
stos
adc
cmpsb
out
leave
adc
or
jb
pop
and
xor
dec
bound
fidivrl
aas
shrb
xor
enter
fisubl
xor
pop
push
mov
inc
movsb
cmp
add
pop
sub
ljmp
int
std
adc
pop
daa
icebp
fwait
jo
fnclex
sarb
dec
mov
cmp
mov
add
sahf
xchg
mov
xchg
dec
inc
jp
scas
xchg
cmp
popf
fs
cmp
cmpsl
sbb
sub
sbb
adc
or
rclb
cmpl
add
xor
lahf
xchg
sub
insb
popa
push
add
push
les
dec
repz
jns
rep
push
adc
ja
mov
push
sub
cmp
imul
movsb
icebp
lcall
leave
fwait
lea
xor
mov
les
or
rclb
push
pop
in
push
mov
add
push
sbb
mov
ret
pop
adc
pop
std
fcoms
jmp
dec
pop
mov
or
addr16
or
inc
mov
mov
lods
nop
rcr
std
sub
push
xor
aam
jnp
repz
pop
push
pushfw
pusha
scas
aam
sbb
int3
mov
sbb
out
ss
sub
jns
adc
clc
ficoml
add
js
xlat
icebp
dec
xchg
stos
pop
aad
push
push
pushf
popf
ss
pop
daa
or
mov
add
mul
push
fadds
ret
or
xor
hlt
xchg
inc
jb
inc
pop
add
jno
inc
dec
mov
cmpsl
cmp
frstor
clc
xor
pushf
int
lret
push
sub
loope
data16
push
lock
out
aad
loope
stc
push
lock
mov
sarb
fcmovnu
jnp
mov
gs
or
inc
add
cmc
cmp
hlt
outsb
into
or
add
in
cmpsb
pop
sbb
stos
dec
adc
inc
repz
pop
popa
push
dec
adc
pop
movsb
outsb
mov
bound
jle
ficompl
in
adc
sbb
mov
inc
lret
sub
rcll
popa
loop
jecxz
ja
sahf
lock
lea
xlat
adc
scas
pop
loop
ret
or
cmp
xchg
add
popl
loope
fdivrl
mov
lahf
arpl
das
clc
pop
push
push
fcoms
clc
shl
les
nop
mov
adc
cmpsb
push
inc
jno
inc
mov
ljmp
xchg
or
cmp
jne
shlb
cmpsl
sbb
ds
dec
inc
mov
imul
lods
and
jmp
jecxz
mov
jnp
sahf
add
dec
xchg
push
fs
cwtl
or
mov
cli
fdivp
iret
or
xorl
cld
pop
xchg
dec
mov
push
sbb
das
mov
ret
dec
gs
jnp,pt
jle
mov
dec
mov
clc
sbb
mov
fldenv
cld
jg
or
popf
cli
aas
les
rol
ret
mov
dec
shlb
lods
mov
les
stos
nop
push
in
sti
fs
sbb
jnp
mov
cmp
lods
sub
xchg
cmp
mov
dec
call
cmpsl
ja
inc
bound
push
mov
cmp
enter
js
mov
or
add
not
and
sarl
lods
in
and
ret
xchg
add
into
mov
arpl
lss
or
or
jae
in
adcl
mov
repz
and
pop
arpl
and
out
push
inc
add
scas
and
iret
xor
xor
xor
ret
mov
mov
fildl
pop
les
int
lods
addb
add
xchg
xchg
fnstcw
out
jl
dec
and
cmp
add
add
and
cli
jmp
jo
xchg
icebp
xor
loop
movd
std
or
dec
fwait
and
idiv
dec
repz
fisubl
clc
test
jno
sub
xchg
and
add
xchg
lahf
movsl
imul
fadd
sahf
pop
adc
sub
add
mov
decb
sub
inc
mov
in
leave
mov
xor
mov
add
jbe
dec
xor
rcll
stos
xor
lds
and
pop
xor
insl
je
mov
hlt
adc
sub
xor
pop
pushf
xchg
xchg
das
jns
inc
jl
je
xchg
xchg
mov
movsb
mov
fmul
cld
dec
movsl
stc
mov
lock
std
ret
dec
add
outsb
cmpsl
add
inc
in
subb
cmp
sbb
jne
mov
hlt
jae
xchg
popa
mov
add
out
lds
push
and
cmp
mov
ret
inc
rorl
pusha
sbb
sbb
nop
pop
mov
icebp
scas
out
shll
aad
fwait
and
push
mov
daa
insl
cmp
js
test
pop
mov
cmp
ljmp
xchg
aas
lret
jp
cmp
negl
dec
and
sub
mov
fildll
je
jne
push
adc
test
aam
fucomp
push
and
loop
pushf
and
movsb
sbb
push
sbb
outsl
fstpt
imul
sub
lea
jecxz
in
test
or
addr16
xlat
rol
sub
adc
push
fdivs
loop
loope
xlat
xchg
mov
stc
pushl
stos
inc
pop
outsl
nop
push
mov
shll
out
imul
lods
push
ret
mov
xor
test
sahf
jbe
add
push
cmpb
cmp
or
sub
in
cmpsb
lret
dec
sbbl
sbb
ljmp
dec
test
cmp
sbb
in
sub
dec
stos
insb
jnp
pop
out
gs
cld
int
adc
andl
loopne
gs
xor
and
imul
xlat
shrl
fistpll
dec
sbb
sub
lret
imul
lds
ds
lahf
push
jecxz
cmp
in
mov
lret
pop
push
xchg
es
mov
xchg
hlt
clc
lret
and
or
in
leave
loopne
xchg
cli
xchg
mov
cmp
jge
stos
fdivl
icebp
sahf
cmp
je
stc
test
test
mov
mov
sbbl
jle
sub
mov
dec
test
data16
out
jmp
inc
popf
or
adc
movsb
sar
sub
aad
fstpl
push
mov
jo
pop
xchg
stos
out
ret
adc
imul
adc
imul
push
sbb
lahf
movsl
push
dec
jp
adc
ldmxcsr
loopne
test
and
popf
pop
mov
push
out
fs
lock
sbb
push
scas
jbe
mov
dec
or
sub
data16
jecxz
cmovg
nop
lock
add
les
adc
adc
sbb
jnp
cwtl
adc
fwait
andl
or
lds
add
push
dec
fidivrs
dec
insl
jmp
insb
cltd
popf
repnz
nop
and
sub
popa
mov
arpl
dec
jle
out
dec
jle
sbb
int
jle
fcomp
push
pop
sbb
pop
subl
stc
je
lods
fisttpl
fcoml
add
or
imul
fcompl
jae
cli
xchg
in
imul
scas
cli
daa
out
sub
pop
jmp
decl
testb
pop
push
dec
fcomip
sahf
push
jne
or
fiadds
dec
add
pop
data16
dec
ds
popf
cmp
sub
cs
orl
mov
orb
pushl
mov
jge
jae
mov
lock
xchg
mov
xchg
jb
xor
mov
daa
lcall
pop
pushf
push
js
dec
dec
lss
jg
cmp
pop
jo
cltd
add
popa
adc
lret
insb
push
inc
movsb
jns
cs
in
xor
pop
loopne
xor
popf
aad
dec
test
pop
shlb
dec
call
xchg
mov
fistpl
mov
pop
pop
pusha
or
mov
dec
add
push
sbb
sbbl
xlat
scas
and
les
xor
mov
f2xm1
mov
and
fsubrl
in
adc
iret
sub
sbb
clc
or
sbb
lds
ljmp
pop
fbld
mov
insl
int3
test
cwtl
aaa
les
xor
mov
mov
lods
push
pop
mov
mov
insb
shr
out
add
xchg
pop
mov
arpl
mov
push
bound
push
inc
jle
sti
sti
xlat
jmp
xchg
or
mov
mov
movsl
out
lea
loopne
adc
push
push
jo
xor
push
mov
fidivrl
sbb
into
daa
mov
mov
in
mov
jne
daa
jl
in
xor
mov
js
xor
loopne
cmp
sub
cmp
jle
and
jg
daa
xchg
xor
xor
xchg
rclb
ds
cmp
nop
mov
call
movsl
mov
mov
push
mov
sbb
sub
fistl
incl
out
or
mov
mov
shll
cmpsl
push
cmp
jmp
sbb
jae
loop
test
xchg
hlt
fucom
jg
lret
dec
cmp
inc
xchg
data16
jo
call
loopne
push
mov
scas
pop
jge
lds
das
xor
pop
pushf
xlat
mov
xchg
incb
add
xchg
jbe
and
cs
mov
and
sbb
sbb
out
shll
fs
mov
popf
pop
jp
xchg
push
dec
add
push
pop
in
into
rolb
cltd
mov
cmpsb
notl
jne
pop
sub
or
iret
mov
outsl
aam
pop
adc
mov
xchg
sti
or
aam
dec
gs
es
or
fldpi
ljmp
add
aad
sub
and
jle
std
push
insl
jno
cmpsl
out
rorb
movsl
dec
dec
pop
sti
sub
enter
jnp
pop
test
fsubr
cmp
in
add
vaddss
mov
add
icebp
gs
xchg
mov
mov
mov
xchg
push
es
add
jne
xor
sub
shll
outsl
cltd
jb
repz
lods
jmp
arpl
gs
out
shl
out
dec
loopne
aaa
fwait
jbe
xor
repz
add
ja
cmpsb
mov
loopne
xchg
mov
sub
repz
cld
inc
jmp
inc
adc
push
xor
cmp
lea
push
cmpb
dec
mov
cli
mov
push
mov
fisubrl
in
movsl
stos
mov
push
pop
sbb
fwait
xchg
cwtl
cmpl
jne
popa
mov
lock
or
and
sub
adc
xor
inc
stos
adc
add
icebp
in
or
pop
outsl
clc
fnstsw
push
adc
push
stos
sub
enter
dec
fiaddl
xlat
jp
lret
or
push
jnp
les
push
or
sarl
and
cmc
cs
js
sbb
stos
sar
imul
dec
fdivr
test
ret
fiadds
push
loope
fidivrs
mov
jns
jp
fbld
arpl
jmp
lea
inc
push
enter
xor
mov
stos
adc
xchg
inc
inc
daa
outsl
rorl
aad
les
mov
xor
stos
xor
test
pcmpeqw
jo
mov
add
cmp
push
cmp
mov
adc
sarb
mov
adc
lock
gs
mov
sahf
shlb
decb
mov
popf
inc
sbb
xchg
sahf
push
dec
pop
dec
pop
js
ja
push
notb
imull
fbld
lods
pop
fdivs
jb
shlb
mov
push
fbld
xor
loope
lods
add
push
push
lcall
fadds
add
movsb
inc
ljmp
ljmp
aam
xor
hlt
mov
cmpsb
in
or
insl
add
push
mov
outsl
jl
xchg
or
pop
rcl
test
mov
xor
xor
cli
cwtl
mov
gs
inc
xchg
out
nop
cmp
sbb
pop
sbb
aas
fdivrs
shll
popa
das
sub
leave
sub
cmp
or
into
cs
rsm
fsubs
loope
jns
jecxz
mov
lahf
je
ficoml
xor
fildl
mov
or
ds
das
add
mov
hlt
xor
mov
push
sbb
and
out
dec
push
push
out
xchg
or
out
test
sbb
inc
adc
adc
pop
and
push
imul
xchg
push
rcl
adc
dec
imul
sub
push
fstpl
dec
aad
inc
mov
scas
push
lods
scas
loop
cmpsl
and
adc
mov
rorl
jne
mov
mov
xchg
dec
mov
jmp
std
fldt
cmp
dec
dec
push
addr16
xchg
scas
popa
into
lds
add
aam
pop
or
sub
xchg
pop
cmpsb
je
movb
ret
cltd
pop
jl
pop
sbb
inc
push
aad
out
shlb
sbb
mov
adc
mov
insb
cmp
mov
xor
lret
mov
pop
test
leave
sub
xchg
scas
adc
mov
fnstcw
cmpsl
fstpl
dec
sbb
add
dec
sub
mov
push
xlat
jne
pop
cld
lcall
jb
add
add
movsb
jne
jle
test
mov
push
cmovo
rclb
mov
jg
lock
cmp
insb
inc
shl
sbb
pop
sarl
sbb
lret
outsl
jge
daa
add
inc
test
cmpsl
outsl
inc
bound
mov
jo
xchg
sbb
ss
xlat
jmp
scas
pop
fistl
jne
outsl
stc
shl
cmpsb
inc
mov
ljmp
cmp
and
imul
pusha
inc
movsb
push
movsl
notb
and
adcb
sbb
fildll
out
inc
ja
loopne
inc
fs
paddusb
rolb
iret
cmp
ficoms
scas
xchg
std
sti
js
jae
movsl
mov
ss
xchg
cwtl
lret
xorl
pop
in
sub
mov
or
fisubs
pop
cld
repz
scas
insb
sbb
lret
sbb
jle
les
inc
arpl
lea
push
inc
fistpl
jno
rcl
or
test
jb
xchg
test
jb
push
sbb
dec
sbb
aaa
test
mov
jl
push
fs
or
fiaddl
mov
ljmp
adc
inc
push
pop
mov
cmp
sub
pushf
mov
dec
loop
cmp
loopne
aad
mov
in
or
dec
lahf
je
push
lods
fs
and
add
xchg
and
jp
dec
test
mov
inc
sub
sbb
into
xor
sbb
lret
cmp
dec
jno
push
mov
ret
cmpsl
outsb
int3
cmc
pop
insl
mov
or
xor
pop
shl
roll
or
scas
mov
pop
js
arpl
dec
loopne
push
pop
mov
pop
cs
repnz
inc
fs
out
pop
sub
gs
nop
xchg
outsl
jg
test
jmp
shrb
mov
cmp
cwtl
mov
xchg
in
mov
mov
xchg
mov
loopne
rolb
repz
in
lds
jp
dec
pop
push
out
out
cmp
pop
mov
sbbl
jns
hlt
adc
push
add
mov
push
popa
jnp
push
inc
or
pop
cmc
mov
xor
leave
aas
lahf
gs
or
scas
popa
inc
bound
and
ret
mov
mov
movsl
fnstenv
add
imul
roll
fs
dec
pushf
dec
adc
pop
addr16
insb
sbb
jnp
pusha
enter
sub
pusha
cmp
cmp
inc
jle
pop
sbb
jl
and
or
leave
pop
xchg
fld
lret
call
mov
xorl
add
outsl
scas
adc
leave
and
shll
xorb
es
mov
fwait
xor
aaa
bound
pop
push
das
iret
cmp
mov
mov
xchg
imul
and
xchg
pop
mov
lods
pop
repnz
sub
inc
cmp
loopne
xchg
js
test
das
mov
insl
dec
icebp
test
fstps
fists
pop
push
es
xchg
leave
push
ds
mov
fwait
or
fwait
add
adc
loopne
xlat
les
cmp
std
inc
mov
inc
mov
pop
daa
cmp
jo
icebp
mov
or
loopne
arpl
xor
scas
jp
sub
sbb
ja
std
mov
mov
mov
lock
jmp
xchg
mov
pop
pop
jae
ljmp
in
sub
dec
jmp
push
movb
nop
dec
mov
cmp
dec
icebp
fwait
ds
add
test
fisubrs
jp
fsubrs
xlat
and
sbb
sarb
or
rorb
dec
inc
mov
in
out
push
in
cmc
cmp
xchg
xchg
dec
rorb
shr
dec
std
mov
scas
mov
icebp
test
lea
les
ret
mov
lds
pop
outsl
jns,pt
cltd
jle
js
xchg
jmp
fdiv
cmpsb
jo
sub
imul
jg
xor
insb
clc
call
push
xchg
lcall
test
pop
mov
mov
mov
xchg
mov
mov
mov
ret
push
adc
sbb
xor
or
js
int
xchg
adc
sti
movsb
dec
lret
cmp
fldl
fsubl
jecxz
push
js
daa
xchg
sti
mov
cmp
jo
inc
push
in
push
cmc
add
jae
push
cmc
inc
into
lods
mov
icebp
sub
popa
je
push
popf
pop
scas
jle
mov
stc
in
setb
xor
pop
mov
lcall
mov
sahf
mov
jb
ljmp
mov
nop
ljmp
add
pop
popl
std
adc
ss
bnd
push
xchg
orb
cmpsb
mov
cmp
and
cmp
mov
sub
gs
inc
cmp
dec
imul
dec
in
or
mov
test
jle
xchg
push
mov
insl
mov
sbb
mov
adc
or
mov
push
loope
bound
idiv
cli
sbb
addr16
adc
enter
jp
movsb
xchg
inc
roll
mov
aam
push
lea
sub
ret
div
icebp
dec
out
daa
test
cld
test
mov
and
scas
jge
in
pcmpeqw
sbb
lret
push
inc
and
push
lock
lods
shl
les
ja
and
fsubrl
mov
jg
mov
mov
xchg
inc
addr16
sti
sbb
pushf
popa
xor
gs
push
mov
sti
cmc
in
mov
jmp
jne
test
rcl
insb
inc
ljmp
fcoml
popf
clc
xor
cli
loopne
repz
add
mov
ljmp
push
and
mov
sahf
push
andl
insl
stos
pop
jnp
push
mov
xor
push
mov
jo
mov
inc
fs
imul
mov
stos
or
stos
jmp
jns
mov
fildl
andb
cmp
ret
fistl
pushf
repnz
or
loopne
dec
rolb
inc
inc
rolb
divl
or
aam
inc
loop
or
xor
cmpsl
adc
stc
das
jl
jno
into
ss
cmpsb
add
xor
cwtl
xchg
or
xchg
adc
aad
adc
pop
sub
adcb
push
lods
add
dec
bound
mov
xchg
inc
aad
outsl
mov
mov
dec
js
xor
inc
push
inc
ja
cmpl
mov
jnp
push
fdivrp
jge
and
dec
bnd
leave
mov
imul
mov
dec
sbb
es
push
call
in
stc
cmp
nop
cmp
data16
sub
xchg
push
fs
push
xchg
add
ss
rcr
push
add
jle
fadds
lret
sub
icebp
mov
xchg
cmp
insl
push
cltd
ja
push
adc
fistps
inc
aas
sub
roll
int
scas
mov
daa
and
xchg
xchg
add
lea
pop
shrb
int
mov
incl
lods
and
ds
outsb
jmp
stos
push
xor
fcomps
imul
fwait
lret
mov
mov
ret
ja
and
or
aaa
sub
int3
mov
scas
cmp
mov
push
insl
mov
inc
imul
fisubrs
outsb
fistpl
gs
in
sub
les
gs
shrl
fnsave
adc
es
scas
cmp
push
iret
arpl
xor
lods
xchg
jmp
push
loopne
rcrl
push
nop
or
aad
jo
mov
sbb
cmp
jne
rcll
enter
mov
lds
dec
scas
mov
push
lds
or
xor
popa
sbb
pop
push
sbb
pop
adc
sub
push
bound
jno
add
pusha
mov
test
aas
cwtl
ret
stos
lcall
push
and
ret
xor
push
inc
and
es
xchg
cmpsb
jbe
cmp
imul
in
sub
pop
fdivl
push
xchg
aaa
mov
fdiv
mul
gs
sub
test
push
rcrl
insw
scas
cwtl
jge
fistpl
daa
int
test
mov
cmpsb
sbb
cmpb
fcomip
pop
daa
test
dec
push
cmpsl
fidivl
insl
inc
pop
out
aam
fprem1
or
mov
add
xchg
fwait
mov
xchg
xchg
out
lahf
add
std
cmp
push
xor
icebp
inc
push
jge
shrb
cmpsl
js
adc
in
jle
cmc
inc
sub
xorb
test
cmp
sbb
adc
es
ljmp
lods
mov
lcall
mov
scas
loop
test
push
pop
xor
mov
mov
mov
sahf
lods
xlat
jp
psrlw
imul
fstpt
pop
insl
bound
jle
mov
enter
fwait
dec
nop
lods
negl
push
xchg
cs
addl
inc
add
push
sbb
or
sbb
xor
or
repnz
call
movsb
cmp
adc
sbb
pop
pop
imul
int
pop
mov
rorb
push
in
out
and
xchg
daa
fisubl
or
xchg
cmp
fwait
cmpsb
jnp
cmp
sub
mov
pop
andl
push
adc
pop
aas
das
in
or
icebp
xchg
testl
stos
mov
cmp
dec
dec
mov
jp
icebp
packsswb
fdivrs
ret
sbb
out
adc
into
xor
add
sub
or
fcomp
ss
insl
sti
int
mov
and
mov
dec
arpl
ljmp
cmc
cli
lods
fcoml
push
push
sbb
push
das
mov
faddl
aaa
add
mov
cs
mov
push
insb
inc
je
jle
nop
pop
out
lret
dec
cmp
xchg
sbb
popa
sbb
dec
pop
mov
cmpsl
mov
ds
fistpl
mov
mov
bound
xor
xchg
xorb
mov
mov
add
pop
jle
test
and
xor
and
popf
and
cmp
mov
icebp
push
popf
sub
adc
in
dec
sub
lcall
insl
and
pushf
stos
mov
or
mov
jo
add
icebp
mov
and
ret
mov
jge
stos
push
outsb
es
aam
sbb
leave
inc
es
aaa
inc
push
mov
ficompl
popf
bound
mov
icebp
je
mov
push
mov
dec
inc
test
rcll
mov
xchg
popf
loop
mov
fnstenv
and
mov
inc
es
pusha
insl
bound
popa
outsl
jnp
cmc
movl
sub
xchg
sbb
test
clc
out
cmp
jg
xchg
in
jge
out
pop
mov
sbb
loop
or
sti
jnp
outsb
mov
ret
mov
push
cmp
ficomps
popa
push
xor
pop
out
inc
repnz
xchg
sbb
adc
adc
and
cmp
test
push
or
sub
mov
inc
xor
mov
sahf
mov
lock
pop
aas
mov
aas
daa
orl
scas
lods
cmp
cmpsl
rcll
ret
test
cli
or
mov
mov
or
ss
add
push
jno
jne
flds
inc
not
ffree
sub
xchg
xor
out
aam
aam
inc
and
jne
in
loopne
mov
fildl
mov
xchg
lret
stc
sbb
fwait
out
add
fisubl
scas
and
xchg
test
jg
jmp
shll
add
pushf
jl
rorb
enter
mov
mov
leave
orb
mov
aad
into
aam
pop
out
jmp
and
push
sbb
and
mov
sub
or
pop
xor
or
dec
clc
aad
adc
pop
pusha
out
adc
test
outsb
push
inc
movsl
mov
movsb
add
inc
xchg
jae
inc
cmp
push
cmp
imul
push
mov
push
test
or
into
inc
mov
sbb
add
enter
mov
gs
rol
add
mov
cmp
dec
lea
ret
or
jmp
push
inc
mov
pop
inc
jbe
lds
inc
push
les
imul
xchg
adc
pop
xchg
dec
cmpsl
jae
cli
sub
add
adc
jbe
femms
sub
jecxz
stc
dec
aas
nop
clc
into
sbb
cmpsb
stc
fisubrs
int
into
aaa
dec
inc
lret
lret
xor
inc
shll
xlat
rcr
shlb
add
push
test
xchg
in
push
loopne
inc
and
push
cmp
mov
push
pop
lcall
in
and
push
sub
gs
push
jle
ljmp
dec
sbb
rolb
nop
cld
jns
mov
dec
pop
and
dec
push
int3
sbb
call
dec
inc
daa
pop
inc
pop
cmp
and
fiaddl
inc
aad
sub
or
jecxz
js
cmp
popf
in
cld
or
stos
mov
push
sbb
pmuludq
movsl
sbb
scas
ret
or
fsubrs
dec
mov
sub
aam
lds
lock
dec
lahf
pop
mov
cltd
and
shlb
adc
sub
call
inc
popf
add
xchg
shl
mov
scas
sbb
cmpsb
adc
push
shlb
call
shl
dec
insb
mov
ds
xor
xchg
scas
or
popf
mov
mov
shll
adc
sar
fs
lods
aad
rclb
xchg
xchg
sbb
nop
fcoms
frstor
lds
mov
xor
xchg
mov
or
scas
xor
jg
mov
into
mov
lea
subl
ja
ficoml
stos
add
xorb
fstpt
pushf
ret
addr16
lret
add
xor
jl
pop
mov
out
pop
inc
push
sbb
fs
mov
jne
js
mov
stos
pusha
sbb
cltd
xchg
daa
mov
aam
mov
lret
pop
pop
lahf
xor
adc
mov
cwtl
mov
mov
repz
pop
mov
cmp
inc
ret
out
loop
mov
aas
and
mov
fcoml
or
inc
jne
fidivrl
fwait
jb
addr16
mov
mov
inc
push
adc
dec
orb
mov
nop
pop
inc
cmp
lahf
jmp
std
ficoml
cmp
and
push
roll
dec
lea
mov
cmc
in
add
fnstsw
xchg
rclb
inc
adc
arpl
pop
sbb
push
lods
pop
insb
addb
pop
in
movsl
je
mov
roll
lods
mov
adc
xchg
jecxz
jp
mov
pop
mov
mul
sahf
sbbb
pop
push
rclb
call
nop
in
imul
loop
pop
mov
mov
ja
dec
in
cwtl
mov
cld
xchg
inc
imul
jno
lahf
lret
cmp
mov
or
push
and
int
inc
xchg
insl
cmovno
inc
sub
shrl
xchg
dec
sub
int
movsl
ja
jb
xchg
mov
push
jg
cltd
push
and
fsubs
push
xchg
jae
test
inc
mov
ret
adc
iret
les
dec
int
arpl
movsb
mov
pushf
inc
cmp
adc
lret
xchg
fcoml
insl
mov
pushf
or
or
push
mov
mov
fstps
xchg
dec
mov
mov
cmc
mov
xchg
dec
cmc
cmp
sti
movsl
imul
loopne
or
jl
jg
fisubrs
jecxz
cmp
imul
add
dec
fwait
xor
pop
out
into
mov
fsubs
aam
out
xchg
aaa
cmp
and
adc
pop
mov
test
loopne
cmp
ja
inc
xor
in
push
adc
and
int3
movsl
fidivl
addr16
test
and
sbb
lea
mov
js
sbb
loope
sbb
or
les
dec
adc
jns
or
sub
add
xchg
sub
dec
inc
scas
not
jae
xchg
mov
sub
push
int3
popa
fstpl
or
lret
loope
clc
cmp
mov
cmpsb
inc
xor
mov
mov
jns
add
dec
inc
cmpsl
popf
pop
sub
add
movl
adc
addr16
popf
xchg
add
inc
fcmovnu
jbe
or
pop
out
in
jne
cld
inc
je
scas
ljmp
movb
jle
jo
sub
mov
jb
leave
push
add
rol
jl
cwtl
dec
mov
mov
adc
mov
jmp
or
lret
adc
out
sbb
xchg
dec
sbb
add
and
adc
in
push
dec
dec
jnp
sbbl
mov
addl
clc
shl
or
daa
dec
gs
out
inc
fisttps
and
jmp
mov
loopne
gs
cmpsl
xlat
cmp
sbb
icebp
popf
cwtl
sbb
push
fnstenv
cmpsl
mov
jo
pop
inc
mov
cmp
cmp
jo
pop
into
push
xchg
xchg
mov
jecxz
jns
cmp
or
jg
or
aas
xor
push
cmpsl
cmp
repz
inc
inc
cltd
bound
push
shll
dec
xor
sub
lea
jns,pn
cmc
ljmp
add
in
or
mov
push
dec
jb
mov
or
and
mov
or
mov
cltd
xchg
add
pop
leave
jp
sbbl
xchg
or
cmp
jge
lods
out
int3
ja
xchg
lock
in
mov
test
cmp
out
stos
imull
inc
jbe
scas
lock
sahf
daa
jle
and
andl
xchg
and
dec
out
js
clc
pop
pop
int3
push
int
popa
push
pop
insb
mov
xchg
mov
inc
jle
push
mov
movsb
add
push
cmp
xchg
or
xchg
pop
bound
pop
mov
or
out
fisubrl
mov
outsl
cmp
inc
stos
stc
inc
pop
sahf
adc
test
roll
in
lret
and
and
cmpl
pop
outsb
imul
mov
out
mov
adc
and
loope
sbb
mov
sbb
and
dec
popf
pop
push
add
dec
insl
movsb
arpl
adc
push
jg
xchg
mov
outsl
push
imul
ja
aas
bnd
push
mov
pop
or
ret
ja
fistpl
mov
outsb
lcall
add
xor
push
stc
testb
adc
popa
inc
pusha
imul
push
pop
test
push
pusha
pop
adc
sbb
pop
dec
cmpb
dec
fiaddl
out
or
int3
sub
xchg
pushf
outsl
negb
fisttpl
sbb
lods
pop
call
xchg
repz
cmp
adc
sbb
rclb
inc
xor
cmp
dec
xchg
push
inc
sub
notl
push
inc
loop
xor
subb
adc
cmp
mov
push
mov
in
std
pop
xchg
das
lret
cmpsl
je
notl
push
push
jae
sbb
shll
jo
push
xchg
or
and
cs
xor
xchg
ficoml
scas
fmull
arpl
lock
nop
out
aas
jecxz
sarl
xchg
push
fwait
test
cli
dec
pop
xchg
mov
popa
sub
xor
loope
or
jb
mov
sarb
inc
mov
push
scas
jmp
fadd
xchg
pop
push
jmp
sti
aas
stc
jbe
sarl
xchg
sub
push
test
out
fistps
mov
inc
fcompl
and
inc
or
xorl
jae
pop
js
cmp
decl
mov
mov
push
dec
mov
cmp
adc
rclb
pop
andb
nop
mov
les
jmp
mov
ret
adc
mov
gs
pusha
mov
test
fists
test
or
or
pop
cmpsb
cli
insb
sbb
and
and
inc
cmpsb
mov
pop
rolb
ljmp
fldenv
test
mov
inc
mov
test
cmpsb
sarl
das
hlt
mov
adc
out
sub
mov
add
gs
ret
mov
les
and
and
push
scas
sub
cmpsl
add
mov
jno
xor
xor
and
lcall
movsl
xchg
jb
add
mov
insl
jo
arpl
sub
cmc
xchg
std
and
push
aad
rcl
dec
je
addr16
mov
inc
cmp
out
sbb
cmpsb
test
aas
scas
or
repz
jb
adc
cmp
xor
nop
sbb
jecxz
lds
mov
lds
std
cwtl
push
ret
cld
sbb
stos
add
and
and
mov
ret
xchg
mov
data16
and
cltd
mov
mov
addr16
popa
lds
ljmp
dec
mov
mov
adc
mov
mov
repnz
mov
in
pop
jg
dec
addb
cwtl
repnz
rclb
pop
je
bound
stc
pop
imul
cld
bound
arpl
jno
pop
or
cmpsb
sti
movsb
mov
push
sub
pop
clc
sbb
fstpt
and
lahf
hlt
orl
jae
test
push
imul
inc
sbb
pop
dec
pusha
add
xchg
andb
call
push
jno
sub
movsl
add
fsubrs
adc
push
aad
rcll
push
xchg
cmpsl
mov
sub
and
repnz
mov
insl
insl
jecxz
aam
jo
jbe
ljmp
push
or
inc
out
jl
jb
dec
enter
scas
mov
test
sbb
xchg
mov
cmp
add
inc
xchg
push
inc
cmp
test
xlat
movsb
cld
push
fcomps
test
adc
mov
shr
dec
cmp
aad
xchg
xor
mov
rcr
cli
push
dec
mov
mov
xlat
mov
jmp
in
xor
xor
push
addr16
fistps
mov
cmpsb
andl
cmp
mov
movl
mov
pop
add
add
xlat
cmp
push
cmp
lahf
ja
adc
inc
ss
test
out
sub
push
adc
mov
jg
rolb
insb
xchg
mov
sbb
fisubrl
sub
xor
push
xchg
pop
cs
mov
or
aas
ds
test
pop
call
outsb
in
rcr
popf
mov
dec
icebp
mov
lea
mov
or
lret
mov
lds
or
rolb
xor
push
daa
jbe
aaa
aam
dec
es
adc
test
and
fstpl
bound
orl
ja
and
movsl
sti
fidivs
in
or
fsubl
and
dec
push
mov
fdivrl
pusha
cmpsl
mov
test
aas
adc
push
in
and
divl
xor
insl
ret
jecxz
push
sub
dec
repnz
pop
ss
ss
test
cmp
jo
mov
pop
lods
sub
gs
pop
xor
push
mov
inc
adc
popa
shlb
inc
subl
mov
test
and
mov
jns
addl
out
sbb
loopne
testl
sbb
pusha
clc
int
xor
add
rcrl
out
push
pushf
test
cwtl
xchg
idivl
iret
mov
cmp
adc
jnp
push
mov
sub
push
inc
fildl
mov
repz
test
jo
aaa
aad
fstpt
and
add
in
imul
nop
mov
lds
sar
mov
push
repnz
inc
xor
sbb
sbb
ror
mov
jg
dec
aam
mov
inc
ds
sahf
fwait
dec
into
arpl
into
and
test
mov
bound
insb
xchg
hlt
add
testb
pop
scas
ja
push
push
std
dec
loope
daa
cmp
adc
mov
in
inc
xchg
mov
test
mov
add
sahf
loope
out
cwtl
xor
sbb
test
cs
ja
sub
pushf
cwtl
pop
mov
lcall
adc
idiv
movsb
jbe
aas
add
push
lahf
frstor
into
mul
inc
ret
mov
dec
pop
mov
pushw
inc
repnz
xor
dec
popa
sarb
xchg
enter
int3
mov
cli
ss
pop
mov
out
cmpsb
out
inc
xchg
mov
xchg
adc
testl
xlat
insb
and
lret
add
push
xchg
lods
lea
test
cwtl
ret
daa
mov
fwait
cmp
pop
cld
pop
loopne
mov
test
sub
movsl
shll
scas
scas
andl
xchg
dec
and
test
pop
neg
fcmovnbe
lds
je
inc
and
mov
sbb
and
test
adc
xchg
adc
xchg
xlat
inc
sahf
mov
pusha
mov
lret
xor
and
mov
cmpl
sbb
call
insb
sets
loop
jp
cltd
mov
jb
pop
es
push
fwait
mov
sub
scas
jae
icebp
cmp
pop
sub
sahf
cmp
sub
push
fwait
xchg
inc
inc
xlat
push
sub
sub
in
mov
leave
pop
lahf
cmp
into
pop
and
popf
pusha
jg
cltd
jp
mov
jg
orb
adc
mov
mov
jae
inc
mov
xor
or
scas
add
cs
je
sbb
dec
pop
in
aaa
inc
cmp
insb
out
pop
stc
push
push
sahf
aas
std
lods
adc
inc
cmc
cmp
mov
pop
or
mov
loop
cli
loopne
pop
jmp
nop
lea
xlat
das
std
dec
pop
sbb
andl
push
sub
mov
sbb
cs
cwtl
shr
lods
in
insl
adc
jb
cmp
jae
push
cmp
mov
in
push
into
xchg
xor
dec
mov
lods
pop
push
mov
xchg
sbb
jg
and
xor
test
loope
push
ds
imull
push
jl
cmpsl
mov
mov
push
dec
incb
cld
clc
rolb
stos
rcr
shr
mov
adc
ss
cmpsb
pop
lcall
rcll
in
lret
cmp
adc
jns
push
jle
push
jle
xlat
xchg
and
mov
jecxz
lds
xor
sbb
test
fadds
je
ja
adc
out
xchg
pop
cmp
insb
pop
jae
lock
or
repz
pusha
lods
jp
jb
rcr
or
mov
mov
pop
and
cmpsl
dec
mov
xorl
in
data16
sbb
mov
fimull
mov
xlat
inc
mov
xlat
testl
test
and
xchg
adc
xchg
cmpsl
inc
aad
adcl
and
data16
out
mov
in
ss
jmp
scas
or
sbb
mov
in
sbb
dec
aam
inc
dec
fwait
jb
xor
sub
or
popf
clc
inc
dec
xchg
or
sahf
xchg
xchg
pusha
dec
fisubl
repz
cmp
push
xchg
mov
fisttpll
cmpsl
shrl
cmpsb
xor
jne
pop
dec
daa
push
mov
incb
pop
lods
push
into
xor
cmpsb
mov
push
add
xchg
sub
and
adc
fdiv
fildl
in
nop
sub
add
fwait
into
mov
sti
mov
cmpsb
notrack
sti
jns
xlat
pusha
push
pop
inc
in
adc
push
sbb
in
mov
je
inc
mov
mov
mov
jb
test
sbb
test
hlt
clc
cmc
data16
push
or
dec
out
inc
jno
in
test
mov
loop
push
sub
mov
lahf
mov
adc
mov
lcall
xchg
sub
push
add
int3
imul
xor
lahf
jbe
jnp
cmc
pop
andl
cmp
lret
mov
and
lret
shlb
shrb
je
xlat
and
dec
frstor
mov
xchg
mov
mov
jae
into
add
ljmp
pop
andl
mov
jge
xchg
xchg
sub
cmp
shrl
js
sbb
cwtl
in
xlat
fwait
dec
out
stc
sti
pop
jp
cmc
adc
push
cmp
mov
and
inc
in
nop
jl
xchg
xchg
addr16
imul
push
fnsetpm(287
out
mov
cwtl
xchg
sub
pop
fstpt
fs
adc
and
in
push
fwait
adc
xorb
mov
loop
mov
fwait
test
dec
fists
inc
stos
lods
jno
jbe
fwait
ret
inc
addl
push
push
adc
push
pop
test
loopne
mov
and
add
dec
push
adc
xor
push
std
dec
outsl
jle
or
mov
jl
leave
pop
jo
push
test
inc
push
dec
and
movsl
xor
insl
cwtl
mov
dec
pop
enter
movl
adc
daa
cmpsl
aaa
xchg
pop
push
sbb
test
xor
push
subps
mov
repnz
lahf
rcll
cmc
aaa
jge
stos
js
jae
in
and
daa
cmc
outsb
sbb
xor
jp
mov
shlb
inc
sahf
sub
push
loopne
imul
jle
clc
jg
aad
xlat
jp
test
push
ss
testb
stc
lret
inc
mov
sub
clc
cs
insb
inc
cmp
fst
jae
dec
sbb
adc
dec
inc
int3
inc
shl
nop
dec
mov
rcrb
sarb
sbb
insl
dec
imul
pop
sub
es
adc
xor
or
xchg
dec
xor
mov
cmp
mov
jmp
or
or
jbe
imul
aad
push
int3
adc
cmp
adc
jp
mov
out
xor
subl
rcll
mov
test
sub
push
jns
jge
mov
loope
pop
inc
je
adc
stos
cmp
out
adc
and
insb
fisttpll
dec
es
cmp
out
mov
fstl
pop
int3
imul
jae
sub
jecxz
adc
fadd
ja
xor
pop
int
out
and
adc
inc
dec
js
fildll
lret
es
jl
std
lcall
imulb
xchg
fiaddl
sub
xor
out
mov
pop
mov
mov
mov
sub
sub
pop
lcall
popf
movsl
push
je
dec
daa
scas
xchg
scas
incl
ret
fsts
add
add
mov
repz
sub
stos
decb
pop
cld
ss
pushf
and
mov
fnstenv
data16
push
cmp
es
pop
test
stos
or
int
mov
jno
adc
dec
ss
data16
jp
add
sarb
rcll
adc
mov
movsl
ret
xchg
movsb
mov
mov
add
ljmp
push
test
xor
xlat
push
stos
pop
and
adc
xchg
or
shrl
icebp
add
and
shll
clc
jg
ja
mov
push
lods
aas
out
clc
aas
jg
das
and
lret
mov
ljmp
fimull
add
add
mov
mov
adc
test
fiadds
add
xchg
fpatan
dec
aaa
test
shl
jne
inc
jle
mov
lahf
in
daa
xor
or
adc
in
push
jl
dec
aas
movsb
jp
dec
xlat
mov
xchg
test
jb
xchg
andl
pop
mov
jmp
sbb
mov
and
push
scas
dec
xchg
cmc
cmp
inc
pusha
jecxz
imul
dec
test
das
xchg
xchg
cltd
push
and
mov
mov
cmp
loopne
mov
jmp
outsl
lret
mov
fiaddl
in
xor
inc
or
push
dec
aad
jae
jle
adc
aad
test
scas
dec
dec
sbb
fwait
mov
inc
rcrl
enter
sbb
fucomip
fwait
ror
sub
addr16
int3
or
mov
mov
push
mov
pusha
addb
jo
sbb
mov
dec
andb
cmp
xor
fisttpl
jo
pop
je
mov
sbb
imull
arpl
jp
leave
push
loop
loopne
inc
frstor
inc
enter
pop
cld
outsl
push
mov
dec
pop
mov
repz
jnp
sub
repnz
in
lret
push
mov
andl
xlat
lock
fsubrp
mov
shll
push
or
jno
loop
dec
lds
xchg
aad
andl
cwtl
pusha
jg
fmuls
out
dec
dec
iret
in
inc
aam
pop
xchg
fisttpl
pop
cld
call
in
mov
ja
jp
hlt
mov
clc
push
cmpsl
add
xor
outsb
push
loopne
push
fsubrl
jnp
lret
push
test
inc
movsl
jo
js
lea
cmpsb
push
sub
stos
adc
inc
ss
xchg
dec
dec
outsl
xchg
mov
xor
xchg
into
pop
ljmp
dec
xchg
pop
inc
dec
cmp
jns
mov
mov
xchg
mov
mov
push
rcr
push
leave
mov
shrl
sahf
push
iret
xlat
lahf
aad
mov
jp
rep
pop
cmp
lahf
pop
decb
push
arpl
mov
fildl
mov
pop
sahf
jno
mov
add
cmp
jbe
pop
rcll
rcl
pushf
ret
push
gs
pop
mov
jo
pop
lock
push
adc
cmp
ss
sub
or
or
test
test
clc
je
push
xchg
xlat
sti
dec
pop
imul
mov
mov
push
mov
cmpsb
xchg
and
xchg
fiaddl
xchg
push
jl
jle
inc
pop
outsl
jp
sub
outsb
push
ss
out
mov
das
add
rorl
arpl
sbb
stos
jp
and
cltd
sti
cmp
jno
jbe
dec
dec
jb
or
lock
sbbl
or
xor
mov
mov
mov
inc
addr16
fcmovb
in
pop
fisttpl
cmp
inc
insl
dec
pop
scas
aad
test
cmpsb
fadds
shll
jle
mov
jns
adc
push
adc
push
test
shld
mov
xor
xor
rorb
mov
sbb
rcl
mov
adc
fstpt
test
jb
out
jg
inc
inc
mov
and
add
cli
fnstsw
xlat
das
mov
push
or
mov
pop
xchg
popa
cmpsl
es
mov
adc
xor
in
add
mov
mov
dec
rcll
sub
mov
orb
nop
test
cvtdq2ps
je
orb
arpl
push
inc
push
jg
lcall
jecxz
or
out
in
mov
aad
xchg
loope
jmp
cwtl
sahf
jae
sahf
out
mov
and
repnz
or
jl
out
jnp
inc
sub
and
gs
in
neg
xor
fimull
popf
pop
icebp
lock
pop
jmp
jae
cmp
mov
out
rcrl
mov
imul
imul
imul
cltd
shrl
pop
and
sti
inc
mov
mov
push
rcll
inc
sbb
mov
push
xchg
inc
pop
iret
loope
gs
in
sub
inc
inc
sti
jbe,pt
jnp
xchg
ds
lret
xchg
fldl
test
mov
push
nop
out
jae
or
dec
jmp
or
pushf
jae
into
ds
mov
pop
or
jae
pop
out
and
in
fldenv
push
aas
daa
mov
gs
out
je
or
xchg
cmpb
mov
and
cmp
jp
in
jb
dec
les
xor
xchg
adc
cli
aam
inc
subb
or
and
xchg
jecxz
inc
push
cld
test
out
dec
inc
xor
scas
push
hlt
cmp
lahf
pop
lret
jae
mov
loope
sbb
fiadds
mov
test
add
sti
imul
rolb
lcall
sbb
arpl
gs
mov
jmp
jae
lods
pop
sbb
cli
cmpb
lods
mov
leave
inc
std
pop
cwtl
dec
xchg
in
cmpsb
push
xlat
xchg
inc
add
ret
hlt
idiv
xchg
mov
xchg
scas
sbb
ret
test
push
add
ds
aam
cmp
push
cwtl
movsb
inc
mov
es
jecxz
jecxz
push
test
into
in
test
enter
or
pop
jae
mov
test
dec
jmp
addr16
jns
mov
mov
lahf
mov
cmp
fcmovnbe
or
xchg
aas
jb
repnz
dec
scas
out
inc
xor
cs
xor
loopne
int
jmp
push
xor
or
inc
or
and
shlb
mov
or
and
push
ret
outsb
dec
pop
fidivs
dec
inc
push
dec
enter
or
and
in
cs
mov
hlt
gs
pop
out
outsl
dec
sub
sub
sbb
cmp
subb
cmp
scas
push
mov
ud2
and
add
xchg
inc
scas
mov
push
subl
push
fisubl
lcall
push
daa
mov
daa
movsb
dec
cmpl
mov
loopne
pop
movsb
lods
data16
loop
and
mov
ja
adcl
mov
testb
sbb
rol
jge
add
mov
pop
mov
aas
ror
jno
shrb
popa
mov
or
sti
cltd
jmp
jae
xor
push
adc
cld
int
es
xor
push
cmp
insl
cmp
mov
mov
jnp
aas
pusha
mov
insb
and
jb
std
popa
add
imul
mov
lds
adc
lods
mov
pusha
jle
cmp
jge
sahf
dec
xchg
or
arpl
fcom
mov
es
insb
push
loope
mov
sub
test
scas
xor
icebp
adc
cmc
icebp
adc
cmp
iret
or
dec
cli
daa
int3
stos
imul
xchg
mov
out
push
arpl
adc
mov
shrb
aaa
lds
std
lcall
popf
add
xchg
ss
mov
aad
les
pop
jmp
cmp
movsl
scas
or
or
dec
mov
aaa
pop
jp
mov
leave
and
sti
imul
pusha
adc
ret
xor
daa
push
sub
cltd
addr16
mov
insb
inc
stos
stos
andb
aad
lcall
sub
addb
mov
xor
push
stos
pusha
nop
repz
pop
sub
push
cli
cltd
imul
dec
arpl
popa
inc
sub
ss
fwait
gs
cmp
mov
sarl
sti
sub
cmc
test
push
xor
test
imul
cmp
test
ret
push
cmc
shlb
pop
imul
icebp
adc
shrl
and
data16
test
push
je
xor
xor
cltd
subl
mov
and
std
out
call
pop
jo
jo
adc
add
out
js
add
fwait
inc
inc
nop
add
jge
clc
sub
shlb
dec
popf
inc
movsl
inc
fistps
pushf
mov
repz
pushw
outsb
add
and
jle
test
mov
add
pushf
add
cmp
sub
xchg
xchg
ret
add
xchg
rcr
mov
mov
pop
sbb
and
ret
mov
nop
inc
lock
xor
mov
cmp
lret
clc
cwtl
push
sub
icebp
push
repnz
dec
dec
in
jb
addr16
xor
sbb
sub
ss
pusha
mov
test
mov
mov
cld
sbb
dec
and
sbb
sub
mov
and
cmpsl
or
pop
int
fcmovnb
int3
push
cld
dec
adc
loop
int
call
loopne
mov
mov
cmp
sti
dec
scas
test
add
mov
mov
or
cmpsl
jb
sbb
sub
or
xchg
popf
pop
ficomps
sbb
imul
mov
lret
outsb
push
shl
or
pop
fdiv
inc
mov
lds
sbb
ret
ljmp
push
cltd
xchg
pushf
mov
inc
insl
outsl
sarl
xchg
sub
js
push
insl
sbb
iret
xchg
scas
mov
andl
enter
mov
sbb
sarb
xchg
cli
and
mov
ss
ret
test
dec
mov
dec
pushf
dec
sub
pop
add
das
mov
loope
pushl
sarb
xchg
rcll
cli
push
pop
ret
stos
mov
cld
pop
sahf
mov
jns
test
in
lods
push
shll
inc
xchg
push
insl
push
push
iret
xchg
add
int
iret
lock
or
sub
aad
rolb
pop
test
mov
cwtl
cmpsl
inc
jge
add
mov
and
popa
es
mov
out
inc
divl
out
sub
jp
mov
gs
mov
xor
shlb
push
or
pop
loopne
ljmp
mov
push
cmp
sub
xlat
icebp
mov
sbb
or
inc
test
addl
mov
std
pop
sub
cmp
lods
gs
enter
and
xchg
and
sbb
and
fwait
inc
add
les
dec
and
loop
pusha
push
push
mov
cld
scas
jge
cmc
or
sub
sub
adc
sarb
pop
jnp
dec
sub
mov
popf
test
mov
jnp
mov
lds
cmpsl
mov
mov
fcomps
enter
test
lods
xchg
mov
insl
sub
mov
jp
or
and
into
in
lret
ficoml
popf
sbb
aam
mov
test
dec
out
shll
lahf
dec
sub
fcomi
sbb
insb
nop
outsb
orb
lods
push
xor
insl
xchg
loopne
cmp
shrb
pop
mov
dec
pop
incb
ret
dec
rcr
jmp
jne
dec
jecxz
in
adc
negb
vpsubusw
and
call
fnstenv
mov
out
mov
int
fcmove
test
xor
ja
shl
xchg
sbb
or
mov
iret
fdivs
mov
jle
cwtl
and
push
push
mov
pop
cld
movsb
int
call
push
mov
or
mov
mov
sub
mov
mov
repnz
jcxz
fiaddl
adc
lcall
dec
cmp
mov
js
movlps
leave
gs
aaa
ret
into
rcrb
add
mov
out
push
scas
out
push
push
out
cmp
mov
int
sub
xchg
mov
jl
sub
push
adc
xchg
enter
pop
sbb
int3
add
lds
popf
pusha
rol
aas
inc
stos
xchg
xchg
das
inc
sbb
scas
outsb
shll
xchg
xchg
jl
sub
fsubrl
add
ret
bswap
sbb
sub
dec
scas
sub
mov
int3
out
cmc
xor
adc
sbbl
and
and
dec
insl
dec
jp
sbb
scas
jg
rorb
cmp
dec
sub
jae
mov
ficompl
ret
cmpsb
ret
add
repnz
dec
aas
fsubrl
test
pop
or
in
scas
mov
aas
pop
shrl
insl
jno
cmp
or
in
jmp
outsl
or
mov
sahf
inc
aad
stc
dec
loopne
hlt
scas
loope
lahf
xchg
int
dec
hlt
jne
sub
pop
lahf
mov
fcomps
outsb
lcall
clc
jo
pusha
xor
gs
rcll
mov
loop
add
pop
dec
cmp
sub
jp
sti
jno
or
arpl
push
sar
and
push
xor
shlb
les
xor
aam
mov
pop
jno
mov
scas
addl
in
out
sbb
push
bound
mov
xor
sub
ret
lret
xchg
lock
sub
mov
test
sbb
push
xchg
call
push
cs
test
and
scas
jle
sub
mov
mov
test
jmp
in
mov
ret
shll
mov
push
push
dec
cmp
loop
mov
arpl
imul
mov
test
dec
and
iret
int3
in
in
ja
mov
adc
mov
std
repz
out
mov
cmp
mov
sti
xchg
mov
cld
adc
ljmp
popa
mov
mov
lret
adc
test
cmp
push
mov
cmp
les
jp
ss
insl
ficoml
xorl
sahf
jb
loop
ret
outsb
or
es
jmp
adcl
lret
and
adc
js
jo
inc
cmc
push
leave
adc
fld
cmp
ret
or
hlt
cmpsl
sub
test
repz
inc
mov
mov
in
dec
lea
jle
insb
daa
mov
test
in
and
inc
loopne
dec
sbb
jle
jp
testb
mov
rcr
add
out
mov
jns
je
jne
imul
xchg
fsubrl
xor
mov
pushf
adc
mov
or
insl
test
mov
fwait
inc
ds
insb
push
lds
cld
movsl
or
add
imul
xor
mov
je
pop
stos
arpl
pop
fistl
pop
ret
cld
and
and
add
push
test
mov
nop
xlat
inc
pushf
icebp
add
stc
sti
mov
add
test
jle
push
mov
adc
pop
shl
add
xor
hlt
mul
adc
jno
dec
pushf
mov
cmp
or
mov
rcrb
push
sbb
jmp
push
dec
dec
sub
cwtl
or
xchg
dec
imul
or
mov
hlt
ret
cmp
sub
stc
sti
sub
decb
dec
imul
sub
inc
mov
pop
mov
inc
push
jo
pop
mov
subb
lcall
and
int
aaa
sbb
das
fistps
lahf
inc
nop
daa
cmp
pop
sub
test
mov
dec
add
js
or
sub
lahf
sbb
mov
mov
dec
sub
call
lret
mov
dec
pop
imul
imul
dec
xchg
adc
lcall
dec
adcl
mov
xchg
inc
or
cmp
lds
sahf
push
sbb
mov
std
push
lods
push
addr16
xchg
ret
cli
sti
out
push
dec
jno
xchg
pusha
lret
cltd
push
dec
rcll
repnz
loope
sub
xor
dec
jmp
fisttps
adc
adc
jnp
jbe
enter
push
and
cs
pop
daa
jae
rorl
ds
or
das
popf
inc
out
push
pop
jbe
std
popa
pop
pop
push
jae
aam
arpl
add
jecxz
jbe
popa
dec
add
sbb
ljmp
pusha
add
pop
inc
mov
aaa
test
mov
mov
out
bound
dec
sahf
ja
push
es
add
popf
ljmp
or
les
imul
clc
xor
xor
mov
scas
jle
aas
lahf
out
push
loope
xor
jge
lods
les
jecxz
fisubs
out
ret
mov
fisubl
jge
sub
sbb
adc
lcall
mov
xchg
mov
sub
outsl
xchg
aaa
ret
ja
shlb
data16
inc
jns
xor
bound
inc
cli
jns
xchg
int
xor
xchg
cmc
cmpsl
leave
push
fidivrl
out
gs
dec
push
jo
shl
fistps
xchg
jns
mov
sub
clc
loopne
inc
mov
test
inc
pop
jae
xchg
cmp
movsb
repz
mov
jge
or
inc
xor
sti
popa
loopne
out
sub
aad
ret
jbe
xor
mov
clc
insb
or
cmpsb
in
mov
data16
mov
iret
rcl
cmpsb
push
xchg
mov
stos
js
es
adc
mov
mul
insb
pop
cmc
sub
pop
ja
insb
mov
add
mov
icebp
jl
mov
iret
sbb
xchg
jge
lcall
jge
sub
mov
sub
lret
bnd
cmc
sbbb
bound
fldl
jnp
mov
adc
movsl
mov
movsl
imul
sbb
pop
jge
adc
push
jg
mov
jmp
push
and
mov
out
mov
inc
mov
push
pop
or
fstl
mov
popa
cmp
dec
jo
cltd
pop
pop
push
jne
xchg
clc
rorb
scas
inc
fisubl
pop
or
out
or
enter
mov
xlat
jg
inc
ret
or
stos
ret
insb
out
lds
sub
jno
loopne
jne
mov
clc
sbb
mov
outsb
sbb
cmp
push
cmp
lahf
jmp
loop
xchg
sbb
arpl
adc
push
and
cli
and
push
imul
cmc
dec
xor
adc
int
orb
out
xchg
pop
adc
adc
clc
shlb
mov
xor
insb
cmp
js
push
jbe
dec
hlt
xor
repz
mov
mov
pop
test
addb
sub
and
aas
pushf
outsl
and
xchg
push
aas
add
dec
in
add
adc
sbb
or
insb
mov
jnp
jo
or
pop
ss
stc
push
subb
xchg
push
int
mov
sub
cmpsb
add
xor
xchg
mov
xchg
test
push
sarb
out
fadds
sbb
sbb
out
mov
stos
imull
cs
cs
mov
test
sub
ljmp
jmp
gs
gs
fwait
and
lret
lahf
cmc
sbb
push
std
je
push
sbb
cmp
xor
test
inc
mov
pop
push
sbb
jmp
mov
rorb
into
stos
lock
pop
sub
fistl
dec
pop
mov
icebp
jge
sub
dec
and
mov
xchg
getsec
and
sub
cmp
lods
mov
outsb
or
loopne
lds
cs
shl
cmc
sbb
dec
ret
aam
enter
cs
mov
push
subb
fsubrl
mov
aas
cmp
scas
ftst
inc
cmp
inc
cmp
adc
loop
leave
repnz
adc
popf
test
xor
fbstp
mov
outsl
and
test
push
or
dec
jge
dec
int
iret
sub
pop
out
mov
mov
add
ds
hlt
dec
setb
pusha
das
repz
or
ja
adc
cli
pop
pop
data16
cs
mov
jmp
pusha
repnz
inc
add
clc
add
dec
push
xchg
scas
int3
popf
mov
xlat
fwait
mov
js
adc
inc
daa
out
sub
cltd
pop
loopne
or
hlt
rolb
dec
dec
mov
ror
iret
xchg
jbe
std
dec
dec
xchg
mov
out
or
imul
mov
adc
data16
sub
movsl
xchg
je
fistpll
mov
xchg
push
popf
jae
push
sub
push
cmpsl
scas
push
stos
adc
xchg
cmpsl
xor
fbld
add
and
sbb
mov
test
xchg
mov
or
adc
mov
mov
pop
mov
fsub
pop
add
adc
clc
scas
sahf
cmp
push
inc
andl
sub
sub
sbb
pop
aaa
mov
aam
push
pop
loopne
xchg
movsb
xchg
push
cmpsb
in
inc
pusha
xchg
mov
fcomp
bound
shlb
popa
loopne
jnp
std
add
mov
pop
in
push
fyl2x
fwait
pop
add
dec
in
cli
jl
lret
into
leave
jnp
pop
mov
jge
adc
lds
call
inc
jnp
xchg
insl
or
sbb
and
lea
inc
and
int3
sub
push
repnz
xor
iret
icebp
lcall
pop
xchg
ja
cltd
xor
sub
xlat
push
pop
add
loopne
sub
push
mov
sub
jae
or
inc
movsb
jbe
iret
or
in
popa
xchg
rcrl
sub
fldt
xchg
mov
mov
mov
xchg
jg
mov
xchg
pushl
push
xchg
mov
ja
sub
fwait
test
jl
jle
dec
mov
jnp
enter
push
mov
mov
inc
mov
rorb
jns
sub
lcall
jnp
rorb
scas
aaa
pop
sbb
sub
sub
pusha
sub
shl
idiv
push
push
fistpl
pop
xchg
enter
mov
icebp
sub
push
popa
pushf
inc
loope
jne
call
test
pop
jbe
lret
add
sub
xchg
add
cmpsl
cwtl
aas
jne
fwait
in
cmp
pop
cmp
fs
cli
inc
fdivrl
mov
and
sub
cs
xchg
repnz
repnz
sti
xchg
add
rclb
out
aad
in
stos
aas
in
sub
ret
imul
out
xchg
loope
cmp
pop
stc
fstl
leave
xor
dec
jae
pop
sbb
mov
lcall
fcompl
call
aaa
cli
push
loop
xchg
int
xchg
cmovne
in
sbb
sbbl
sbb
jecxz
xchg
out
ror
xchg
ja
int
stos
std
add
daa
and
test
lods
xchg
addb
xchg
out
les
or
hlt
cmpsb
mov
pop
mov
imul
insl
shll
jmp
lahf
clc
adc
mov
pop
lret
outsb
setne
push
cmpl
jmp
add
jbe
fwait
leave
sub
rcr
xchg
mov
lret
pop
jmp
add
xor
out
pop
gs
in
adc
fistps
jnp
imul
iret
add
shll
push
cltd
dec
mov
adc
sarl
mov
pop
jp
sbb
in
arpl
icebp
cld
push
test
into
or
push
fs
jge
sbb
ds
leave
sti
insb
push
les
into
rcrb
fsubrl
jo
add
imul
insb
adc
fldcw
ds
leave
mov
into
mov
imul
jno
mov
jmp
lret
dec
in
cmpsb
jl
rcrb
and
jnp
in
cmp
imul
pop
cmp
mull
jle
jmp
loopne
xlat
sbb
lret
out
sub
lret
and
aas
fstps
outsl
ja
mov
dec
cli
mov
xchg
sbb
cmp
and
mov
imul
std
bound
rcrb
sahf
and
movsw
out
scas
roll
in
mov
pop
cmp
test
scas
shrb
sub
iret
arpl
pop
push
decl
call
lods
xchg
aas
inc
shlb
mov
fcmovb
inc
pop
lahf
xor
movsb
daa
xor
sub
out
hlt
fcoms
pop
jle
jge
mov
mov
rorb
fiadds
adc
push
ljmp
mul
or
lds
jb
imull
out
xor
mov
inc
bnd
lds
sbb
cli
test
sbb
ss
sub
jmp
data16
mov
dec
fimull
mov
stc
xor
fwait
popa
xchg
pop
dec
mov
rol
mov
mov
jae
jnp
lds
popa
and
cmpsl
fisubrs
lret
mov
push
lahf
jmp
xor
jecxz
sbb
jae
lods
int
out
sbb
jl
nop
xchg
movsl
and
mov
test
mov
push
dec
jb
pop
test
mov
ds
mov
lock
mov
push
mov
test
aad
inc
out
and
enter
push
lock
mov
ja
xchg
add
addr16
add
xchg
push
mov
popf
inc
popa
xor
lret
pop
adc
mov
fimull
pop
pop
adc
jge
ficomps
mov
push
mov
or
lods
std
pushf
notb
adc
mov
mov
fsubrl
push
mov
jbe
aas
mov
aaa
jle
pop
outsl
iret
mov
outsl
fstpt
mov
and
test
xor
out
push
lods
pushf
or
fcomps
int3
lahf
pop
or
arpl
and
mov
cmp
push
inc
jmp
insb
jne
out
pop
jae
push
movsb
cmp
int
pop
mov
outsb
or
cmp
xor
aas
outsb
fidivrl
outsb
mov
sti
adc
cmp
push
adc
lock
and
xchg
out
cltd
pop
or
mov
jae
mov
movsb
nop
push
and
push
jecxz
pushf
cmpsl
push
daa
mov
push
mov
rolb
or
ss
jl
mov
pop
or
sub
push
mov
stos
sarl
enter
sbb
or
sub
jle
mov
sti
mov
cld
xchg
pop
iret
not
xor
or
pop
mov
call
adc
add
dec
lea
xchg
inc
mov
movsl
jae
scas
in
repnz
push
xchg
mov
xchg
arpl
mov
sub
sub
push
test
stos
icebp
cwtl
lcall
jne
insl
jnp
cld
in
xchg
repnz
push
adc
fdivr
cmp
sbb
adc
int
sbbb
push
lret
sub
xchg
jl
je
jne
aaa
jno
mov
nop
and
and
loope
push
mov
ds
out
in
pop
xchg
mov
lods
movsl
xor
cli
jno
sbb
cmp
stos
das
inc
push
adc
jne
in
fmulp
pmulhuw
xor
pop
hlt
xor
mov
pop
mov
mov
cld
movsl
mov
pop
add
fidivrl
loop
cmpsl
push
ret
mov
das
ficoms
xor
xchg
fcmovnu
dec
and
in
int
cmp
pushf
inc
mov
fadds
lods
mov
xchg
and
mov
xchg
in
sub
dec
mov
mov
fucomp
jbe
and
mov
data16
testb
add
cmpl
stos
repnz
xor
test
into
xor
jp
shll
test
test
or
jbe
sbb
leave
in
es
mov
mov
sub
test
xchg
sub
cmp
repz
mov
data16
or
outsb
cmp
sbb
cmpsl
mov
push
and
xor
dec
mov
push
push
inc
sub
sbb
pop
add
adc
es
or
outsl
out
jmp
fdivr
clc
dec
hlt
repz
push
mov
inc
cld
imul
sbb
push
cltd
dec
lds
push
scas
pop
repnz
inc
iret
jmp
push
mov
xchg
imul
ss
mov
int
mov
cli
int3
sbb
mov
or
sub
fisttps
cmpsb
shrb
mov
add
dec
enter
pop
cmpsb
mov
or
xchg
idivl
dec
fsts
push
testb
pusha
xor
scas
ljmp
xchg
scas
imul
jge
fwait
repnz
cltd
cmp
call
mov
cli
hlt
das
cmp
outsl
mov
xchg
xchg
frstor
add
inc
test
insl
loop
mov
cwtl
sbb
jge
jp
fists
rolb
mov
inc
rorl
cmp
inc
js
insl
inc
ss
jmp
loop
stos
or
sub
adc
mov
xchg
mov
pop
jno
ss
lahf
mov
cmp
pop
nop
xor
ja
rcrl
sub
and
sbb
xor
je
int
sbb
cld
test
enter
sbb
mov
mov
lea
pop
lahf
repz
div
pop
out
adcb
das
add
or
pop
repz
adc
pop
dec
in
fnstsw
mov
push
addr16
cs
stos
push
test
push
or
rorl
subl
rorl
stos
cmc
insl
or
movsb
in
or
bound
ljmp
push
dec
out
out
ljmp
loopne
aas
xor
cmp
mov
mov
mov
nop
lahf
dec
imulb
add
in
and
fwait
pop
cmp
xorl
pop
mov
cmp
inc
fdivrp
push
test
sub
rclb
mov
nop
xor
popf
int
push
mov
cmp
pop
mov
sti
add
push
or
push
mov
js
and
movsb
fwait
or
push
dec
scas
sub
sub
cmp
cmp
shrl
jl
aaa
rorl
add
bound
mov
push
arpl
mov
pusha
or
pusha
and
push
pop
ds
movsl
mov
movsl
jb
fldt
in
pop
aas
jge
test
pop
lock
dec
mull
xor
js
imul
fnsave
or
or
sub
jmp
pop
scas
add
sub
je
test
sub
or
mov
pop
repnz
stos
stos
repnz
mov
popa
pushf
popf
out
or
cmp
xor
mov
imul
aad
outsb
mov
mov
jne
and
jno
aaa
xchg
dec
dec
pop
xchg
ds
sbb
test
xor
call
add
pushf
rol
addr16
push
mov
icebp
imul
stos
call
test
mov
add
pop
dec
fnstenv
sub
cmpsl
pop
cmp
or
xchg
adc
das
dec
xlat
xchg
nop
hlt
imul
sub
sar
pop
decl
aad
jl
cmp
sbb
xor
mov
cmpb
jp
mov
xchg
inc
clc
jmp
bound
xor
mov
fisubrl
fcoms
cmpsl
dec
stos
ss
lret
stos
sub
xchg
push
sub
hlt
in
or
ret
pop
test
mov
adc
pusha
sub
or
jmp
mull
dec
jne
adc
jbe
into
ret
mov
faddp
jle
and
stos
gs
aas
xchg
mov
repnz
jmp
xchg
jle
mov
shrl
add
dec
jo
popa
rcrl
lds
push
nop
push
insb
mov
stos
mov
insl
ja
test
sbb
mov
popf
adc
insl
mov
xchg
ss
insb
lock
jp
push
jl
subb
mov
shll
pop
in
xor
pop
xchg
mov
inc
icebp
adc
int3
cmp
stc
je
xor
scas
mov
insb
jno
mov
push
mov
mov
mov
jae
addr16
ret
mov
ljmp
jecxz
ficoml
lods
fucom
mov
icebp
je
adc
lret
or
sub
push
mov
aam
das
shrl
cld
data16
sub
xlat
add
aam
dec
cmp
push
cmpsl
arpl
in
dec
mov
hlt
jmp
push
insb
add
xchg
call
adc
and
push
sub
data16
inc
cmp
out
in
daa
addl
xor
mov
or
or
push
mov
out
daa
push
js
nop
test
xor
jnp
outsb
pop
out
insb
jmp
ss
ljmp
push
sub
mov
pushf
xchg
inc
dec
in
repnz
sbb
dec
adc
pop
outsb
lret
int3
sbb
jmp
pop
sbb
lds
loope
mov
mov
push
xchg
push
xlat
enter
mov
cwtl
fnsetpm(287
adc
dec
and
outsl
enter
pop
js
xlat
rorb
and
shrb
push
inc
and
dec
inc
push
orb
fidivs
mov
loop
dec
mov
bound
out
je
inc
inc
shll
add
repnz
mov
jg
fidivrs
loopne
in
adc
inc
lods
divb
push
pop
mov
push
cli
subl
scas
fnsave
mov
adc
nop
xor
push
cltd
xlat
mov
mov
add
cmc
in
jge
sbb
cmc
outsl
data16
push
sub
ja
dec
dec
pop
fstps
adc
ret
mov
pop
sub
inc
test
cmp
icebp
xchg
cmc
sub
inc
xchg
shrb
jne
add
adc
out
ds
inc
into
mov
pop
rcl
adc
movsb
inc
cmp
fwait
mov
push
insl
mov
dec
add
mov
fdivrl
jge
mov
push
imul
int3
rorl
dec
loope
adc
mov
jns
ret
dec
jle
fs
into
mov
mov
xor
mov
dec
repnz
das
pop
adc
ret
outsb
jmp
mov
nop
mov
fidivrs
minps
test
outsl
stos
fdiv
cmp
ret
mov
divb
dec
imul
jne
pop
jp
addr16
xchg
pushf
pusha
sbbl
aam
popa
push
sub
mov
je
outsl
xor
pusha
pop
dec
loop
fsubr
jbe
mov
lds
push
arpl
add
sbb
inc
test
dec
sti
push
xlat
and
sti
in
test
xor
sbb
push
mov
jbe
ljmp
mov
jmp
sub
xor
lea
add
pop
push
adc
and
cmc
and
cmp
push
cmpsb
pop
dec
adc
and
test
gs
sahf
fdivs
mov
cld
and
push
dec
repz
and
xor
stc
clc
ret
fisubs
fnstcw
nop
stos
fdivs
mov
cmp
xchg
dec
popf
jns
sub
not
mov
lret
mov
jno
into
xor
sahf
mov
push
mov
pop
out
fsincos
jns
ret
xchg
pop
aaa
mov
sahf
out
xor
stos
jno
rorl
xor
jmp
out
xor
icebp
xchg
shr
mov
mov
das
xchg
and
cmp
push
fiadds
cwtl
arpl
cmp
xor
out
or
mov
repz
clc
sbb
fcomi
fst
mov
stc
add
mov
cmc
negb
std
scas
sub
pop
aam
jge
jle
lods
xor
cmp
push
add
push
pop
outsb
idivb
ljmp
out
test
adc
xor
mov
dec
pushf
inc
mov
xlat
push
xchg
push
subl
call
movsb
xchg
cmp
xor
in
jmp
inc
jge
add
insl
movsb
rorl
adc
jnp
hlt
inc
idivb
push
jae
std
or
into
mov
jmp
out
xor
jbe
xchg
jns
sbb
lds
rcl
mov
jge
pop
stos
add
hlt
pushl
push
cmpsl
jb
jo
mov
lods
mov
popa
out
ja
sbb
das
add
mov
shl
rcll
sbb
cmp
mov
and
or
cmp
stos
and
xchg
push
xor
cs
mov
lds
xchg
push
ficomps
jae
push
stc
out
and
push
out
adc
sub
dec
push
mov
in
sbb
pop
loopne
lahf
fmulp
negw
push
lods
xorb
jo
sub
std
push
pop
in
dec
mov
arpl
out
or
sbb
lock
mov
mov
add
lret
call
sbb
or
in
lahf
movsb
loop
dec
lock
jp
push
dec
in
xor
stos
mov
pop
ljmp
pop
cmpsl
out
dec
mov
pop
cmp
out
and
push
cmpsb
sbb
mov
stos
imul
adc
stos
cld
pop
dec
adc
jne
cwtl
push
aad
lods
adc
xor
mov
cmp
adc
in
dec
mov
xor
cmp
sahf
rcrl
imul
loop
gs
sti
test
in
mov
inc
xchg
push
loope
fcoms
mov
daa
and
outsb
mov
mov
lock
aam
leave
jae
push
dec
sbb
daa
push
adc
mov
dec
xchg
imul
jb
aaa
jo
hlt
insb
mov
sub
lea
xchg
nop
lock
mov
cmp
inc
add
mov
xchg
loope
dec
lods
sub
test
inc
stos
repz
and
dec
jns
cmc
mov
cmp
cld
xchg
in
and
mov
jo
cmp
lret
pop
mov
loope
imull
pushf
jle
out
jmp
add
pop
mov
push
push
fs
int
jle
xchg
pop
movsb
repz
orb
cmc
xor
lret
shll
fldl
out
stc
loope
mov
add
addr16
movsl
inc
or
clc
cmpb
mov
sub
adcb
xchg
adcl
aas
jae
push
les
jnp
mov
or
mov
lret
fcompl
mov
mov
pop
or
mov
sub
push
ja
inc
lcall
subb
sub
ljmp
or
mul
insb
jnp
mov
and
loopne
hlt
adc
stc
fsubs
dec
jecxz
xor
call
xlat
sub
cmp
repnz
inc
fisttpl
jbe
mov
sbb
add
stc
gs
jnp
negb
lock
stc
mov
sbb
repz
push
cmp
imul
shlb
enter
sbb
push
stc
cmc
movb
ret
popf
xchg
mov
adc
addr16
pop
push
pusha
jne
pop
int
frstor
sub
popf
lcall
stos
add
and
jl
sbb
cwtl
frstor
mov
push
repnz
xchg
adc
das
xor
sub
pop
push
push
mov
ret
shrb
xchg
dec
leave
xor
xchg
push
ja
lods
dec
push
mov
mov
pusha
cmp
and
mov
js
cmpsl
xchg
jg
sbb
fists
repnz
jge
ret
sub
stos
jp
sub
fs
or
cmp
or
in
mov
sbb
jg
mov
inc
mov
add
imul
xor
in
adc
pusha
add
xor
adc
lds
pop
je
adc
mov
pushf
test
aad
jmp
fwait
cmp
fimull
dec
mov
cmp
push
jnp
xchg
cs
cmp
aad
xchg
inc
je
mov
jne
add
dec
int
stos
inc
or
aaa
lahf
add
lahf
xor
lcall
fs
mov
dec
xchg
fidivl
test
outsb
es
jge
jb
jne
push
push
or
das
sti
xor
js
nop
mov
push
fdivr
nop
jno
clc
in
into
jbe
shrb
mov
call
jns
fsubl
rcrb
dec
mov
lods
cli
inc
dec
out
rcrb
shr
dec
mov
jns
pop
adc
int
sbb
into
addl
sbbb
push
clc
adc
ljmp
cmp
cmp
fcomps
xchg
cmpsb
pop
aam
out
stos
dec
ljmp
adc
mov
adc
in
lcall
xor
sub
lods
imul
ret
lds
xor
mov
mov
dec
lods
xchg
scas
pop
daa
jae
data16
rcrl
push
inc
fsubrs
enter
push
jae
cld
xor
sub
rcrb
jns
push
add
insl
xchg
pop
or
mov
arpl
cs
pop
and
push
imul
xor
sbb
push
aam
mul
sahf
push
lahf
pop
xchg
add
or
push
push
add
pushf
mov
test
adc
rcrb
subl
mov
add
cli
mov
mov
xchg
xlat
stos
idivb
out
stc
mov
stos
push
lds
inc
es
cwtl
and
inc
sbb
pop
rcrl
xchg
cltd
mov
fnstenv
mov
adc
cmpsl
or
pop
mov
add
inc
sbb
addr16
sbb
test
out
into
lods
add
push
sbb
add
jbe
sub
pop
fdivl
mov
aaa
pushf
mov
cmpsb
dec
mov
dec
jmp
test
jmp
adc
movsl
cmp
or
test
jne
xchg
pushf
popf
mov
push
jne
ret
mov
jnp
call
push
test
inc
into
cmpsb
stos
xlat
sbb
outsb
mov
clc
insl
xchg
pop
pop
lods
ss
ja
sbb
adc
in
jle
aas
and
icebp
jecxz
or
movsl
sub
lahf
mov
mov
inc
out
and
xor
or
popa
iret
gs
push
loope
lods
fs
pop
ret
idivb
cmpsl
scas
jnp
imul
mov
adc
cmp
fcoms
js
push
cltd
fwait
mov
in
mulb
dec
insb
fbld
add
xor
jp
push
mov
pop
out
nop
out
pushf
push
in
cltd
dec
lods
imul
xor
call
mov
mov
mov
out
inc
andb
or
mov
sub
js
in
xchg
pop
fsubl
or
js
inc
or
jbe
adc
and
mov
loope
lcall
ds
pop
mov
orl
xchg
push
test
lret
xchg
ror
pop
int
data16
scas
pushf
js
mov
push
sub
mov
out
mov
push
shr
lods
push
mov
shll
fdivrs
push
cmp
jge
cli
jp
mov
fadds
lea
mov
mov
ficoms
cmp
mov
pop
and
cmp
and
push
pop
jo
mov
dec
stos
or
xchg
adc
mov
push
xchg
jb
xchg
and
flds
insb
jge
and
mov
mov
cmpb
pop
jno
ss
cmp
fdivrp
pop
es
fists
fisubrs
sub
into
popa
mov
xchg
jmp
andl
mov
idivl
cld
hlt
ds
or
stc
mov
adc
stos
sub
stos
popa
push
mov
mov
setae
cwtl
repz
pop
jge
fadds
shrb
sti
in
std
xor
in
inc
imul
hlt
aas
jae
mov
bound
cltd
cld
fwait
pop
and
jno
stos
dec
push
popa
popa
or
jne
inc
pop
mov
sub
mov
pusha
jg
mov
push
aam
push
sub
push
mov
mov
lahf
mov
fcmovne
test
jno
push
je
adc
mov
mov
mov
ja
in
pop
std
push
stos
cmp
fmull
dec
mov
sub
outsb
lret
pop
rdpmc
fcoms
fcmove
push
jp
fwait
lahf
rcrb
out
jl
sbb
repnz
aam
sbb
jne
mov
scas
push
jmp
push
and
arpl
leave
lret
mov
imul
pop
shl
xchg
stos
out
mov
stc
clc
jne
shlb
faddl
jo
popa
pop
jno
mov
mull
jg
aas
xor
push
pop
pop
ds
push
cwtl
in
fsubs
hlt
popw
shl
lods
js
mov
stos
aad
cmpsl
lods
cmp
sbb
xchg
or
pop
sub
loopne
je
sbb
jp
mov
push
jmp
leave
call
mov
sub
out
xor
lock
fidivl
enter
mov
inc
shll
mov
lret
je
cmc
lahf
popf
jp
jae
sub
mov
mov
call
les
dec
aad
cli
insl
les
loope
nop
out
pusha
stc
fidivl
adc
fists
mov
jge
jl
les
or
inc
lret
sarb
xor
and
fmul
add
in
or
pop
rclb
into
in
xchg
mov
dec
negl
lahf
push
mov
rcrb
push
push
pop
outsb
data16
inc
enter
lahf
mov
cld
or
add
jne
xor
inc
gs
xor
mov
adc
aam
inc
sti
into
jns
sbb
and
push
xlat
loope
and
out
test
jge
pmuludq
arpl
and
outsb
dec
push
lods
add
fwait
mov
in
xchg
adc
cwtl
push
decb
push
popf
lods
rorb
ss
insl
out
sub
neg
cmp
aad
push
or
and
arpl
jmp
jp
pushf
xchg
push
xchg
adc
hlt
inc
decb
cmp
mov
xor
movsl
test
push
in
sbb
fiaddl
add
popf
stos
lods
mov
insl
sbb
xor
sbb
inc
jle
fs
scas
mov
cs
enter
out
pop
mov
stc
rcrb
jno
cmp
jl
sbb
cld
lods
mov
jmp
fistpll
enter
lcall
outsl
bound
mov
sbb
es
lods
repnz
add
cmpsb
arpl
cmp
adcb
in
out
sbb
xchg
mov
and
adc
sub
rcl
out
movsb
in
push
insl
iret
testb
cmp
lods
jg
add
jbe
add
inc
movsb
fwait
sub
pop
frstor
and
cmpsb
shrb
pop
sub
xchg
fists
cmc
add
or
ud1
lret
xchg
push
out
dec
ja
adc
mov
push
mov
cli
xor
je
push
push
repnz
movsl
inc
scas
inc
lods
mov
icebp
jmp
in
adc
dec
aam
mov
inc
ror
cmp
sub
jmp
ljmp
mov
sub
lret
subb
pop
xchg
dec
aaa
mov
out
jne
stos
xor
rcrl
cmpsb
mov
icebp
add
in
testl
fimull
stc
xchg
ss
inc
imul
fsubrl
add
insl
or
movsl
cmpsb
xchg
aam
mov
xor
repz
mov
jnp
add
bound
ljmp
dec
popa
mov
pop
cmp
cmp
iret
jne
fstpt
mov
rolb
jl
add
outsb
out
je
mov
inc
out
xchg
cmpsb
sbb
push
mov
jae
mov
nop
sarb
in
mov
push
arpl
xor
pop
scas
rcl
test
out
imul
mov
roll
adc
inc
mov
imul
dec
xchg
lret
mov
scas
cmpb
lcall
insl
insl
mov
add
jo
lcall
cmp
test
mov
dec
popa
xchg
in
shrb
insl
ljmp
jg
in
xchg
js
jno
push
inc
dec
lds
adc
shlb
xchg
fimull
hlt
mov
repz
ss
mov
push
aam
push
std
bound
and
dec
mov
adc
lahf
fisttpll
fsubrp
fnstcw
pushf
shlb
stos
das
adc
lods
xor
in
or
lcall
pop
jmp
popa
icebp
cmp
fcoms
fnstsw
scas
pusha
sub
std
or
cmc
ds
in
ret
pcmpeqb
in
jmp
mov
mov
addb
mov
adc
shl
xchg
mulb
pop
daa
stos
jae
out
xor
xchg
insb
ret
mov
mov
push
pop
insb
ret
xchg
push
cwtl
pop
pushf
mov
dec
fsubl
mov
inc
cmpsl
hlt
mov
loope
sbb
scas
cwtl
jp
testb
xlat
clc
xchg
data16
fildll
insb
mov
mov
jns
faddp
imul
inc
je
and
pop
in
mov
shl
or
stos
divl
aas
fsubrl
mov
ja
mov
nop
and
rcrl
rolb
imul
hlt
sbb
mov
inc
out
cltd
sysenter
insl
xor
push
lds
adc
rcrl
dec
jne
inc
fstl
imulb
mov
mov
push
cld
lds
fsubs
ret
ss
sbb
test
push
and
popl
adc
sub
sti
lea
push
rol
imul
cltd
notl
sbb
addr16
shll
adc
xchg
sbb
cs
mov
shll
lods
add
mov
add
movsl
xorl
xor
xchg
out
hlt
cmp
cmp
bound
insb
adc
jo
mov
mov
into
std
loopne
cwtl
xchg
jae
scas
daa
insb
aam
aas
mov
adc
sbb
push
fists
mov
sbb
jne
jl
repz
pop
and
idiv
loope
cmp
add
fisubl
mov
nop
add
movsl
adc
add
test
je
faddp
rcll
or
xchg
and
mov
roll
aas
bound
mov
push
ret
test
cmp
mov
insl
xchg
hlt
mov
jne
sub
es
sbb
push
incl
or
pop
lods
repnz
dec
jge
js
ljmp
lds
mov
pusha
add
insb
cmpl
adc
cld
and
push
sbb
mov
cmp
sub
xor
fstpl
xor
add
call
jl
sub
pop
iret
inc
or
cltd
adc
pop
jmp
add
loope
sub
cmpsl
ss
aad
or
leave
push
xor
fmull
dec
pop
adc
mov
xchg
inc
mov
cwtl
cmp
mov
cmp
add
add
clc
pop
cmpsl
in
in
push
roll
push
loopne
addl
jge
test
sbbl
xor
jge
pop
repnz
and
jmp
mov
push
loopne
mov
dec
rcrb
mul
das
xchg
push
push
imul
sbb
mov
test
imul
lods
repnz
jo
dec
dec
push
fwait
pop
sub
adc
xor
js,pt
jmp
lea
movsb
orb
aaa
mov
ljmp
dec
cs
mov
xor
adc
xor
out
arpl
sahf
push
mov
fisubl
xlat
mov
mov
pusha
pop
mov
pop
or
repnz
loop
negl
dec
aad
mov
xchg
lahf
lock
and
aas
push
es
jbe
inc
rorb
sbb
push
cmpsl
pop
and
mov
xor
cmp
dec
add
sub
adc
add
in
popf
jb
and
notb
mov
sbb
out
mov
xorb
cld
in
pop
dec
repz
jo
fdivl
inc
xorl
jbe
sub
mov
in
add
sbb
mov
call
fimuls
fisubrl
int3
rclb
mov
dec
lret
mov
shrl
popf
insl
pop
mov
je
and
std
push
add
pop
dec
mov
cld
mov
in
jl
dec
sbb
mov
ss
mov
xor
popf
add
aaa
push
inc
and
push
jle
xchg
mov
loop
sahf
pushf
popf
out
popa
sbb
push
push
mov
test
inc
cmp
or
arpl
mov
call
jb
dec
sti
inc
sub
aas
xchg
imul
jbe
subb
cmp
push
dec
in
dec
xor
vpcomud
andb
push
jno
inc
ret
ja
sbb
lods
mov
pop
push
cmpl
mov
mov
gs
loope
stos
mov
ds
cld
push
cld
xchg
cli
mov
dec
dec
stos
jno
sbb
jmp
std
and
outsb
mov
fiadds
sub
dec
adc
inc
add
jae
jbe
lods
in
xchg
jmp
inc
std
shll
call
inc
adc
cli
ja
mov
inc
and
mov
sub
xor
gs
repz
wrmsr
adc
dec
lods
sbb
or
shll
cmpsl
scas
mov
sub
xor
lcall
ja,pt
push
popa
call
sbb
dec
pop
adc
cmp
fnstcw
mov
loop
inc
xchg
scas
dec
pusha
add
add
sub
sub
mov
jb
dec
jb
jmp
mov
inc
jl
pop
lods
enter
mov
cmpsl
adc
xchg
arpl
mul
ja
mov
out
inc
or
movsb
pop
daa
xchg
mov
sbb
xchg
js
jb
xor
or
push
loopne
push
push
arpl
iret
test
adc
mov
fpatan
lds
cltd
aaa
xchg
lcall
js
sahf
adc
jb
add
ss
cmp
cmp
in
jns
pop
jnp
push
imul
pop
mov
out
decb
jge
in
fdivr
test
push
add
xor
lcall
test
mov
adc
inc
outsb
jb
and
movsl
test
lret
inc
pop
or
or
movsl
mov
ds
cmp
lret
adc
and
jb
sub
or
dec
sub
pop
add
pop
aam
out
inc
shll
cmp
jmp
pusha
lock
clc
mov
push
jl
loope
ds
adc
jns
cmpsl
in
test
mov
aam
ja
insl
push
data16
fstpt
pop
cmpl
loope
loop
call
mov
mov
xchg
outsb
jo
jp
call
ret
sub
pop
inc
sub
xchg
inc
scas
add
pop
aam
push
sub
dec
jge
popf
push
notl
aas
pop
ja
ds
sub
sbb
adc
lcall
and
or
in
pop
scas
ljmp
clc
inc
repnz
sub
jmp
mov
dec
pushw
mov
xor
addr16
pushf
outsl
es
push
push
cwtl
xchg
mov
rcrl
mov
cmovs
xchg
add
pop
divl
lea
lods
push
mov
pop
ror
dec
shrb
frndint
mov
xlat
prefetch
es
arpl
hlt
or
jmp
xchg
sub
dec
push
test
imul
mov
adc
ljmp
pop
xor
push
gs
xchg
in
iret
out
push
andl
lock
sub
out
cltd
fstps
pop
aam
inc
xor
pop
scas
popf
loopne
arpl
popf
add
pop
stos
hlt
dec
xchg
repnz
mov
pop
lds
icebp
push
outsl
xorb
insb
mov
cmpsl
mov
outsb
jae
fucom
lcall
imul
jae
xor
bound
paddd
jl
clc
mov
test
push
imul
jl
xchg
pop
xchg
mov
and
cmp
mov
cmc
mov
sbb
fisttpll
cmpsb
sbb
inc
sbb
or
push
push
cltd
cmp
and
ja
in
test
lock
xor
xor
xor
push
add
jmp
xlat
idivl
inc
sub
push
push
pop
mov
xor
lods
xchg
imul
fwait
in
jb
out
mov
mov
sub
iret
sarl
sbb
aam
gs
add
mov
sbb
int3
inc
dec
add
mov
xchg
pop
adc
das
stc
pusha
jb
add
xlat
out
jb
lahf
push
int
cltd
and
in
fcoms
movsl
ja
lcall
xchg
out
jle
inc
mov
jmp
scas
pusha
pop
mov
js
icebp
inc
and
add
sub
jb
jl
cmpsb
sbb
inc
mov
pop
int
loope
aaa
mov
repz
outsl
dec
and
test
cmp
lahf
jnp
jg
lock
adc
clc
jecxz
popf
jge
inc
fsubrp
or
cmp
mov
lods
xlat
jno
mov
sarl
fistpl
pop
or
xchg
lret
lds
or
push
mov
fwait
xchg
and
cmp
cmp
test
bound
xor
pop
pop
sbbb
lock
mov
outsl
test
arpl
cmp
pop
cwtl
jl
pop
jg
push
stos
stc
sarb
mov
stos
and
stc
popf
iret
leave
test
std
mov
das
int
cmp
pop
add
stc
push
xchg
loopne
jne
stos
sbb
cmp
pop
sub
jns
lcall
clc
jnp
xchg
sub
les
mov
les
movsb
js
xor
pop
dec
jbe
lods
in
paddsb
jge
adc
mov
jmp
xor
dec
outsl
pop
adc
in
test
lcall
add
pop
or
sbb
lret
es
push
fmul
test
out
leave
xor
dec
cmp
push
pop
sub
push
fld
clc
push
inc
fisubrs
inc
imul
sbb
and
inc
subl
jg
in
cmp
inc
cmpsb
push
out
loop
lret
xchg
jp
imul
bound
rolb
mov
and
pop
or
sbb
cmp
dec
and
test
push
jle
xor
push
or
and
xchg
pop
lahf
cmp
iret
mov
sub
mov
or
rcll
pop
cmp
mov
mov
aas
iret
sbb
push
mov
lods
nop
in
mov
mov
sarl
sbb
or
bound
data16
into
mov
stos
adc
aas
cmpsl
push
rolb
adc
lret
popf
sahf
sahf
and
test
dec
sahf
filds
mov
sbb
push
xor
cmp
stc
pop
daa
ljmp
xchg
out
cmp
ror
pop
int3
insl
mov
xchg
push
test
fnsetpm(287
or
cltd
inc
popa
cmp
lock
add
lahf
jnp
add
xchg
push
stos
or
pusha
shrb
cmp
pop
xchg
mov
or
or
sbb
xchg
iret
dec
push
xchg
ja
insb
leave
push
shll
mov
xchg
js
add
or
mov
arpl
add
fbld
int
leave
cmp
inc
mov
outsb
mov
adc
cmp
fidivrs
jge
cli
push
xchg
cmp
shll
in
adc
cwtl
mov
hlt
scas
jo
sbb
insb
push
imul
and
jnp
pop
stos
pop
sub
add
dec
pop
sbb
fstl
loope
and
and
scas
or
jl
and
or
and
cltd
jo
popa
mov
push
and
inc
add
fistl
adc
icebp
rdpmc
sbb
jno
or
push
fdivrp
divb
jno
xor
daa
imul
jl
scas
insb
popw
or
jmp
xor
jecxz
lret
popa
je
dec
test
rcr
cs
dec
aad
jl
adc
lods
xchg
inc
mov
sbb
jl
stc
and
je
std
fwait
sub
fnstcw
mov
xor
das
outsl
daa
lods
fisttpl
sub
mov
jp
insb
push
popf
insb
adc
js
fnstsw
arpl
sahf
movsl
bound
pop
in
mov
push
jg
rcrl
push
mov
ret
ds
hlt
sub
shll
roll
xor
in
mov
sti
stos
mov
inc
sbbl
mov
fsubl
out
ret
cmovae
mov
jl
es
nop
mov
inc
idiv
cmpsl
xchg
add
jne
int3
add
dec
pop
sub
pop
push
xchg
out
mov
dec
xchg
xlat
inc
mov
sbb
das
jo
mov
das
cmp
dec
push
sti
incb
ds
lcall
xchg
or
outsb
sbb
cmpsb
add
pop
std
pop
push
pop
pop
test
nop
cli
add
in
xor
dec
xchg
pop
jge
mov
stos
lret
les
pop
fs
jns
sahf
mov
fsubs
mov
jle
mov
movsl
mov
cld
inc
ror
push
sub
dec
ja
adc
mov
add
xor
and
dec
jae
hlt
mov
sbb
jmp
sub
imul
stc
in
ficoms
lods
shr
or
fistl
les
repnz
pop
jno
mov
lret
aad
subb
rorb
cmp
mov
dec
xchg
xchg
shr
and
fs
fimuls
inc
mov
mov
sbb
pop
gs
push
insl
insl
pop
lods
imul
push
stos
out
loop
enter
sbb
jae
mov
repnz
pop
mov
xor
add
loopne
push
leave
es
lods
loop
push
sbb
cwtl
xchg
cmpsl
incl
iret
mov
jnp
sbb
xchg
or
stos
out
cmpsb
cwtl
fstpt
stos
inc
push
dec
push
jnp
mov
insb
loop
shll
fs
shr
lds
out
vmovups
cmp
xor
add
mov
enter
rcrl
lods
sbb
cmpsl
ret
insl
out
sbb
xor
add
push
cmpsl
addr16
pop
jno
dec
enter
or
mov
lds
dec
jg
leave
lahf
fcoms
or
cmp
push
repz
lock
scas
mov
shl
imul
nop
mov
rorb
jno
mov
inc
sbb
cs
or
cltd
roll
stos
cmp
cmpsl
pushf
lsl
add
and
push
add
lods
enter
sbb
inc
mov
rol
repnz
or
call
xor
fldcw
ss
lahf
ds
stos
repz
aam
xchg
pop
jle
dec
pop
shrl
push
loope
cld
fistl
ret
lcall
cmp
push
arpl
dec
sarl
in
push
sub
adc
cltd
popa
mov
rcl
data16
mov
js
stc
dec
pop
and
fcomps
cmp
xchg
scas
jbe
shrb
icebp
push
sub
addr16
or
sbb
cmpsb
sub
cmpsl
xchg
and
sbb
pop
xor
push
xchg
mov
push
test
mov
sbb
xor
add
fpatan
xchg
adc
push
nop
xor
jo
shlb
cmp
push
in
push
pop
sti
mov
scas
call
iret
mov
mov
mov
mov
notl
cld
jle
lcall
stos
imul
ljmp
js
in
xlat
cmp
movsb
call
movsl
lock
test
fsub
xlat
cmp
mov
cmc
cld
cmp
popf
push
jecxz
inc
push
cmpsl
cwtl
xlat
cmp
in
andl
adc
sbb
ret
roll
or
push
bound
jae
pop
lea
adc
jno
xchg
lcall
cmpsl
sar
outsl
fisttpl
sbb
fnstenv
mov
mov
pop
fnstsw
mov
sub
outsl
int
out
pusha
or
stos
ja
arpl
mov
inc
or
pop
notb
cmp
and
mov
das
sub
xchg
mov
jl
push
inc
mov
lcall
and
sub
sub
add
mov
and
sub
lcall
adc
sarb
data16
popf
xchg
xchg
sub
mov
pop
cld
xchg
rol
jb
cld
arpl
cltd
in
mov
enter
aaa
mov
clc
sub
gs
in
mov
repz
pop
mov
mov
push
xchg
loopne
outsb
outsl
leave
scas
pop
lret
mov
cmpsl
cmp
fiaddl
lods
lcall
repnz
pop
mov
mov
jmp
cmp
cmp
lea
jbe
into
movsb
or
rcll
push
stos
pusha
in
xor
popf
cmp
cmp
stc
test
mov
fldenv
lret
enter
stc
cmpsb
cmp
add
data16
outsl
lods
cwtl
mul
sbb
adc
xchg
push
lods
and
sub
mov
es
call
outsl
cmpsb
mov
add
push
xor
push
sub
xchg
sbb
xor
jg
movsb
cmp
jmp
test
cmpsl
fisubl
cmp
in
jae
pop
jecxz
push
jo
and
jns
sub
xchg
cmp
int
and
xlat
cld
sbb
cli
and
out
mov
or
mov
inc
or
pop
mov
mov
or
inc
aaa
mov
jnp
add
mov
mov
or
imul
xlat
test
xor
mov
push
push
push
push
adc
into
cmp
lahf
cmp
mov
in
xor
rcrl
sbb
jmp
inc
mov
add
popf
and
inc
mov
or
mov
cmpsb
ret
mov
dec
adc
sbb
in
repnz
or
neg
xcrypt-ecb
cmpsl
dec
fs
stc
jge
bound
mov
adc
jns
ror
add
cmp
sbb
pop
insl
jmp
mov
mov
ret
push
add
add
cmc
inc
mov
sbb
icebp
bound
and
push
stc
cmp
mov
test
fists
and
jns
mov
sbb
jge
insl
push
out
xchg
out
push
fdivr
lcall
rorl
leave
sbb
xor
fs
cmc
lret
mull
jmp
cs
negl
in
outsb
pop
loopne
imul
and
dec
sti
jmp
incl
shrb
inc
ss
loopne
sub
mov
dec
lea
fcoms
nop
mov
ret
mov
jo
cli
imul
das
push
imul
mov
dec
cltd
ja
iret
hlt
mov
insl
in
or
hlt
jns
push
jno
aad
daa
cltd
pop
jnp
and
in
mov
pop
ret
clc
xlat
inc
and
dec
stc
mov
ss
mov
adc
aas
push
inc
inc
call
add
fucomip
and
push
pop
mov
adc
inc
out
push
movsl
ljmp
or
adc
and
leave
mov
mov
out
jbe
jnp
pop
inc
xchg
insb
or
dec
in
inc
xor
out
jl
sub
nop
mov
movsb
fsubrs
cmc
mov
dec
aaa
icebp
mov
aam
dec
stos
and
stc
outsb
fmuls
dec
jmp
jge
cld
and
mov
sub
pop
test
dec
cld
das
popa
dec
in
mov
ret
bndmk
ret
sti
scas
mov
inc
subl
jmp
imul
push
stc
cs
bound
push
dec
mov
idivb
inc
push
insb
xor
pop
scas
rcrb
cltd
cmp
pop
and
inc
mov
cmp
mov
pushf
mov
bound
fsubs
mov
mull
sbb
and
jg
xorl
mov
xchg
sbb
sbb
movsl
clc
inc
push
pop
xchg
stos
adc
ret
mov
xchg
cmpsb
sub
mov
adc
call
mov
jle
xchg
mov
xlat
inc
cmp
cld
push
cmp
or
mov
in
sub
imul
xchg
lret
nopl
mov
or
and
test
les
lods
loop
aas
pop
and
mov
xchg
lock
jns
inc
and
adc
pushf
andl
aas
cwtl
xchg
mov
xlat
test
notb
leave
mov
and
ret
out
jl
sub
jne
hlt
pop
jnp
or
cmp
sub
negb
ss
shll
jmp
xlat
pop
xor
gs
cmpb
xor
hlt
cwtl
ds
cmpsb
nop
dec
adc
add
arpl
xor
dec
mov
ret
push
cmp
lret
aad
filds
in
arpl
xor
scas
xor
dec
jecxz
mov
dec
fbstp
mov
adc
dec
iret
mov
jmp
mov
pop
push
jmp
lret
ss
imul
fwait
adc
mov
mov
pop
mov
cmp
ljmp
in
or
and
add
int3
fwait
scas
sbb
sub
aaa
test
stos
into
data16
pop
or
shlb
or
subb
outsb
sahf
mov
in
test
aas
scas
sahf
insl
sub
jg
push
sub
loop
mov
jae
jg
push
mov
pop
cmpl
xchg
outsl
xor
int3
int3
sub
jmp
test
inc
enter
mov
aaa
insb
test
xchg
mov
outsb
fscale
int
ljmp
iret
rcll
xor
cmpsb
lret
mov
mov
add
js
stc
jp
leave
cmpb
mov
leave
arpl
adc
mov
push
jg
out
sahf
and
ret
push
bound
insl
stos
jno
sti
cmp
scas
fsubs
je
shll
stos
xchg
add
sub
inc
das
mov
pop
ljmp
inc
push
imul
sbbb
or
aam
decb
push
imul
inc
outsl
xor
cmc
rcll
inc
add
icebp
or
int
jno
lods
xor
jle
adc
and
xchg
sbb
ds
lock
clc
mov
dec
out
mov
cmpsb
add
addr16
mov
test
mov
add
cmc
dec
gs
xor
test
sti
add
sub
mov
lret
lea
mov
inc
fadd
push
out
cmpsb
xlat
adc
pop
mov
jmp
sahf
adc
fsubl
fnstcw
icebp
fsubp
pop
dec
js
stc
push
push
pop
outsl
aas
popf
leave
and
jo
in
adc
lods
ret
fimuls
fcompl
ret
enter
mov
pushf
mov
in
addr16
and
jecxz
into
or
mov
lea
cli
jge
cs
sbb
push
out
roll
pinsrw
sahf
mov
xchg
push
adc
cwtl
and
mov
je
mov
jno
das
pushf
je
in
mov
lods
jne
xor
xchg
mov
mov
sub
adc
sti
xchg
or
cmp
dec
cmc
sti
sub
aam
xchg
and
je
leave
shlb
insb
push
aaa
mov
rcll
xor
paddq
leave
mov
outsb
shrb
int
int
jmp
sbb
data16
jns
int3
aam
fs
jmp
loop
cmpsl
jne
daa
ret
push
loop
call
push
dec
or
dec
dec
jns
xlat
ljmp
xor
iret
sbb
pop
push
xchg
insl
mov
pop
push
or
xchg
cs
jecxz
arpl
sbb
addr16
mov
inc
pop
mov
aaa
and
or
ljmp
add
push
adc
call
push
ds
iret
jbe
add
push
ja
mov
fs
mov
xchg
cltd
popa
insb
or
sub
dec
inc
enter
jo
mov
push
repz
push
or
mov
pop
push
xor
inc
inc
testl
jecxz
inc
std
dec
or
sti
aad
fmuls
jno
cs
or
outsl
dec
pop
xchg
cld
adc
add
insb
mov
das
pop
mov
and
push
jb
mov
add
adc
daa
adc
icebp
in
add
mov
lcall
stc
xchg
je
add
stos
cmp
or
add
aas
cmp
mul
and
in
movsl
mov
pop
out
roll
xchg
mov
das
int
sub
inc
insb
imul
xchg
fnstenv
shll
divb
clc
inc
movsl
push
xchg
sbb
or
mov
std
mov
add
std
cld
hlt
mov
sbb
es
sub
scas
stc
repnz
dec
js
imul
and
cmovae
cli
and
dec
imul
in
sbb
sub
mov
aam
jmp
out
jge
jae
mov
mov
cmpsb
fyl2xp1
sbb
mov
shl
in
sub
stc
add
pop
jmp
rcrl
rorb
inc
jg
in
lods
repnz
rorl
dec
xor
scas
subps
test
sbb
into
mov
xchg
jns
imul
and
ss
out
hlt
aaa
repnz
cmovg
in
sub
divl
mov
lahf
push
int3
push
into
jge
movsb
add
enter
xchg
mov
cmp
jg
inc
pushf
cmp
push
ss
rcrl
cmp
std
xor
iretw
popf
imul
inc
cmp
sbb
sbb
sti
lock
push
sub
cmc
jle
mov
pushl
cmp
out
clc
sbb
pop
push
cmpsb
cmp
iret
mov
call
out
imull
lock
push
mov
jno
dec
inc
ja
call
adc
imul
cmp
xchg
or
ljmp
pop
push
jno
pop
gs
outsb
pop
xchg
enter
dec
js
and
movsb
xchg
mov
imul
sbb
and
aad
sub
pop
push
or
mov
fisttpl
add
int3
mov
sub
mov
sub
add
mov
mov
jmp
sub
insl
mov
mov
stos
sbb
inc
test
xchg
add
add
std
lret
cmp
test
mov
unpckhps
mov
js
lret
mov
cwtl
cmp
cmp
cmpsb
lea
outsb
mov
and
xchg
jbe
scas
pop
jg
sub
rolb
mov
insb
jp
roll
in
mov
or
and
mov
call
or
scas
mov
and
cmp
outsl
push
mov
push
rolb
jno
int
xchg
dec
jne
rorl
test
push
xchg
in
xchg
and
mov
inc
lock
dec
inc
adc
adc
pop
lcall
test
mov
jno
xchg
outsb
jo
cs
js
push
pop
xchg
push
mov
fistl
xchg
and
arpl
mov
loopne
insb
stos
and
je
and
push
dec
mov
xchg
push
lret
mov
push
pop
dec
negb
fcomps
leave
aad
fnstsw
call
or
in
scas
pop
add
inc
rcrl
out
ja
add
out
inc
or
add
push
push
xchg
dec
nop
outsb
sbb
aaa
push
push
test
ret
loop
filds
addr16
daa
pop
cmp
es
into
adc
loop
and
shrl
jl
out
sbb
sub
jle
pop
hlt
fdivl
outsb
in
mov
cmp
arpl
inc
mov
gs
push
lcall
dec
xchg
das
lock
mov
adc
and
lahf
popf
mov
lods
ds
pop
dec
in
jle
adc
fsubrs
jmp
pop
jecxz
adc
adc
stc
dec
push
pop
inc
mov
cmc
jne
out
jno
pop
xchg
jo
pop
fistpl
rcrl
test
stos
fadd
fwait
sub
push
inc
or
and
adc
xchg
xchg
mov
scas
test
mov
in
jecxz
jo
xor
adcb
shll
xor
addb
add
addr16
sbb
add
jl
dec
fwait
pop
inc
enter
push
lds
adc
mov
in
fsubl
push
cmp
cwtl
cmp
push
imul
xor
gs
dec
dec
inc
pop
push
push
scas
jmp
rcrl
outsb
sarl
xchg
pop
cmp
jbe
adc
or
int3
pop
push
arpl
pop
das
add
xor
fisttps
cmp
daa
in
dec
lds
dec
bound
dec
adc
jbe
jnp
aas
xchg
sub
lahf
jbe
inc
cmp
lock
mov
and
sbb
mov
pop
sbb
mov
mov
mov
push
sahf
cwtl
dec
inc
pop
mov
mov
and
pop
loope
pop
push
hlt
jp
pop
mov
ja
push
xchg
jbe
xor
dec
push
mov
push
inc
jecxz
mov
mov
xchg
rcrb
movsl
outsl
lea
dec
jle
shlb
mov
inc
scas
cmp
mov
mov
xor
iret
mov
push
add
sub
dec
lret
pusha
sbb
add
inc
jb
sbb
cmp
and
les
les
mov
inc
insl
repnz
sbb
mov
push
js
push
and
mov
hlt
dec
dec
jmp
ja
or
aam
pop
js
leave
lret
loopne
xor
inc
icebp
mov
adc
cltd
into
add
ja
movsl
adc
rolb
inc
add
cmpsb
mov
jo
clc
or
inc
and
cmc
sti
out
ret
push
sub
outsb
shrb
xabort
mov
pop
bound
inc
fsubp
or
imul
mov
inc
fsincos
repz
or
mov
push
sahf
cld
and
dec
or
iret
add
test
adc
mov
dec
scas
dec
cwtl
pop
pop
movsb
mov
mov
add
mov
mov
push
pop
mov
idivl
mov
mov
arpl
sub
mov
mov
cmp
dec
xor
call
jl
adc
imul
test
lods
ljmp
sti
arpl
xchg
xor
outsb
push
xchg
pop
xchg
cmpsl
andl
sbb
cld
xchg
jno
xchg
mov
popf
pop
inc
shr
popa
dec
sbb
and
outsl
fcoml
jb
in
mov
jb
add
pop
mov
aas
outsl
sbb
das
scas
cli
cmp
mov
jg
xchg
lds
insl
cmp
or
xchg
incb
pop
sbb
xchg
inc
push
push
jmp
pushw
lret
add
sbbb
cmp
xchg
jl
inc
stc
and
cmp
cmp
xor
pop
push
mov
jl
jp
xchg
pop
xchg
inc
shrl
xor
imul
xchg
scas
outsb
movsl
cld
cs
jmp
push
mov
lods
int3
es
add
sar
out
and
in
xchg
sahf
sub
xchg
aas
std
fists
inc
shll
lods
popf
outsb
mov
fildll
push
aam
adc
arpl
xor
xor
pop
adc
or
and
popf
push
test
mov
in
out
jb
jg
cs
xchg
cmp
jecxz
stos
jmp
cmc
adc
inc
dec
arpl
pop
push
xor
pop
insb
xor
inc
insb
lock
mov
dec
or
lcall
lcall
xor
dec
pop
cmp
mov
cmp
push
cmp
lahf
cs
xor
cmp
hlt
in
filds
jg
out
and
push
ja
addb
inc
in
iret
sub
mov
ret
push
sti
cmpsl
jmp
pop
push
mov
or
xchg
scas
int3
sbb
sub
or
repz
fcmovu
fists
or
cmpsl
mov
jno
popa
add
xor
sub
sub
inc
dec
mov
into
ljmp
loopne
mov
dec
or
jno
shl
outsb
and
push
test
add
movsb
dec
pusha
js
add
jecxz
loop
out
stc
lcall
or
movsl
push
aad
xor
and
mov
out
or
xchg
adc
dec
mov
mov
pushf
loopne
inc
mov
js
xchg
ja
clc
sub
scas
add
addb
movsb
xchg
push
in
ljmp
adc
sub
roll
xor
mov
pop
rolb
std
scas
adc
dec
sbb
ficoms
cmp
xchg
inc
xor
jecxz
int
mov
fmuls
jmp
mov
pusha
sub
pop
jne
jo
shrb
add
movsb
push
lock
jge
aas
fiadds
pop
and
dec
mov
adc
lds
push
lea
shrl
adc
xor
xor
xchg
and
ret
cmp
and
repz
and
sub
movsl
or
sub
add
and
dec
ja
popf
sub
nop
jne
repz
mov
mov
pop
ds
test
movsl
lds
jbe
daa
stos
mov
or
int
rcl
insl
inc
cwtl
push
add
mov
fstps
bswap
sbb
gs
inc
mov
sbb
loopne
cmpsl
jno
sbb
xorb
das
and
jg
imul
ja
adc
dec
out
fs
lcall
ja
lahf
mov
jmp
mov
push
xchg
movsl
jmp
xchg
mov
push
adc
in
hlt
xchg
into
mov
bound
fsubs
xchg
mov
jle
roll
call
fistps
pushl
test
fs
xchg
xor
andb
gs
fldenv
dec
xor
add
movl
xorl
mov
xchg
repnz
popa
push
sub
dec
lret
add
mov
xor
lahf
cmc
push
mov
scas
jecxz
loopne
incb
rcrb
cmp
ds
addr16
cmp
push
test
int3
or
sub
je
jge
ret
jbe
sar
dec
add
sbb
sbb
add
std
ret
subl
cmp
and
aam
jno
mov
inc
push
pop
xchg
xchg
das
aam
lods
adc
test
add
sbb
adc
cltd
mov
movswl
fnstcw
mov
pop
mov
xor
cltd
mov
adc
add
aad
lret
cmp
cmp
mov
add
jl
sbb
fsubrs
xchg
popa
sub
rolb
in
std
pop
pop
mov
scas
cmp
fwait
in
inc
add
fsubs
loope
mov
or
pop
shlb
cwtl
or
ds
sarl
test
mov
and
stos
pop
fdivs
and
fidivs
mov
ret
mov
cmp
lock
stos
mov
mov
call
sbb
mov
lcall
into
scas
inc
ja
pusha
in
daa
mov
mov
gs
sub
cltd
add
inc
lock
sahf
out
lret
fildll
in
dec
js
add
xchg
pop
xchg
js
or
imul
scas
out
cmovns
jle
add
inc
int3
fbld
aam
add
dec
mov
aaa
cli
and
push
mov
into
rorl
loope
xchg
fs
push
es
or
pop
inc
cmp
fisubrs
adc
push
sbb
mov
lods
lahf
and
xlat
add
jb
push
adc
ss
nop
push
xor
sbb
std
and
pop
mov
push
ficomps
sahf
loop
jb
arpl
loop
add
push
jmp
xchg
and
stos
and
dec
in
pop
lods
imul
pushf
or
xchg
adc
jbe
mov
add
fadds
cmpsb
cltd
stc
mov
mov
repz
fwait
imul
pop
xchg
loop
dec
inc
ja
sub
sbb
sbb
cltd
mov
lret
ss
xchg
nop
lahf
xchg
jnp
or
ja
repnz
jg
lret
dec
loopne
movsl
addr16
jbe
and
mov
mov
addr16
add
pop
loop
adc
addr16
mov
stc
ljmp
mov
iret
pop
in
xchg
dec
inc
je
and
pop
dec
divb
daa
stos
jle
add
shlb
aam
jl
xlat
aad
in
icebp
mov
cmpsl
xchg
jmp
stos
sbb
mov
roll
test
mov
inc
jge
clc
int3
hlt
mov
xor
mov
lods
addr16
outsl
and
and
bound
out
in
ficomps
mov
xor
pop
push
rcrb
cli
jae
rcl
or
mov
scas
lcall
ss
pop
or
cld
inc
int3
repz
mov
mov
js
sbb
daa
mov
jns
jo
rorb
daa
scas
adc
leave
lock
sub
mov
cmp
and
dec
sbb
inc
sbb
xor
outsb
fsubr
aam
and
push
dec
sbb
je
and
jmp
jae
jns
fs
mov
cmp
push
roll
add
sub
cwtl
je,pn
push
lret
bound
mov
js
repz
add
jl
add
or
dec
mov
push
push
test
jae
dec
sbb
lea
ret
adcl
ret
sub
inc
dec
movsl
jecxz
fwait
shl
movsb
ret
pop
inc
dec
push
xchg
gs
add
sbb
inc
pop
daa
sub
fnstsw
xchg
jae
xchg
ret
cmpsb
jne
adc
xor
dec
mov
leave
test
aad
inc
cltd
mov
mov
pop
pushf
push
ss
loope
jge
jl
mov
mov
inc
mov
mov
xchg
pop
cmpsb
jb
fidivrl
and
lret
int3
pop
push
stc
shl
lods
movsb
mov
jle
xchg
adc
and
fnop
or
jne
dec
ficomps
mov
cmpsl
lock
ljmp
sbb
sub
loope
push
scas
jle
shll
clc
xchg
aad
push
repnz
dec
mov
clc
lds
call
fimuls
inc
ret
cmp
sbb
inc
cs
ror
or
in
pop
cwtl
aam
or
lret
push
xor
test
mov
leave
std
xor
out
mov
mov
insb
call
adc
cli
leave
add
and
aam
inc
aaa
xorb
sti
rclb
or
sti
pop
mov
adc
fisubrs
cmc
or
fisubrs
dec
out
ja
xor
icebp
or
cwtl
std
xor
xlat
push
outsb
inc
inc
fwait
add
and
cli
jl
mov
or
sbb
int3
xor
bound
inc
sbb
cmpb
jns
dec
cld
gs
in
test
mov
mov
aad
push
pop
notl
pop
sub
or
or
mov
cmpsl
jns
jno
bnd
and
mov
mov
in
ds
enter
cld
mov
cmp
inc
and
push
jnp
xchg
in
mov
push
xorb
jae
lahf
push
sub
testl
push
cmp
out
sar
sbb
fucomip
cmp
and
fcoms
xor
pop
mov
lods
adc
addr16
not
shrl
imul
sti
sbb
scas
movsb
outsb
repnz
mov
std
pushf
leave
out
roll
cmpsb
cs
stos
shl
jbe
adc
xchg
push
push
push
shr
rol
and
fnstsw
xchg
cld
testl
and
cmp
ja
icebp
push
hlt
shrl
sbb
xor
test
xchg
scas
aaa
mulb
push
lret
scas
lods
mov
in
sub
cld
push
nop
lock
das
mov
sub
ds
jbe
roll
mov
repz
pop
pop
cmp
enter
bound
xor
aaa
daa
xlat
cltd
int3
cmc
imul
mov
or
ja
or
lret
sub
dec
lods
mov
push
frstor
xchg
imul
push
cmp
adc
out
xchg
adc
outsb
fwait
add
shlb
imul
cmp
insl
mov
pop
or
push
xor
and
sub
and
in
inc
rorl
fcomps
enter
jae
xchg
inc
addb
in
loopne
mov
pop
and
mov
dec
lds
fldl
mulb
out
mov
hlt
push
xchg
fidivs
fwait
loope
cli
xchg
and
addr16
sub
out
sub
xor
std
dec
ret
push
outsl
adc
sub
and
repnz
lods
cmp
iret
or
jp
mov
lds
cmp
rcl
popa
sbb
lock
inc
jo
lcall
call
div
jge
aad
inc
pop
jl
clc
rorb
into
mov
daa
mov
pop
or
nop
insl
cmp
add
mov
add
add
add
mov
cli
push
push
mov
ja
xor
add
fs
in
in
adc
bound
mov
and
mov
movsl
pop
sub
das
movb
mov
xor
and
jecxz
inc
pop
mov
sbb
lea
or
jmp
jge
xlat
inc
stc
sbb
and
dec
leave
popa
rorl
outsl
adc
stc
icebp
inc
jl
push
ficoml
aas
insb
add
push
dec
clc
mov
mov
dec
or
dec
mov
into
dec
jge
fiadds
test
sub
test
xor
insl
push
sbb
das
push
add
push
insb
lods
or
sub
mov
enter
idivl
mov
jae
cmp
js
fldt
addr16
cmp
cmp
push
adc
loopne
mov
arpl
mov
dec
adc
inc
sar
jp
and
decb
in
lcall
push
les
repnz
push
xchg
mov
filds
daa
xchg
popa
pop
in
inc
cld
roll
test
in
ds
aad
ja
icebp
mov
repz
pop
loopne
adc
test
or
movsl
mov
xor
pop
and
sbb
mov
sub
xchg
cmp
vdivpd
sti
or
aad
and
add
leave
push
shlb
jns
xchg
sbb
mov
add
and
nop
ljmp
xchg
sbb
lea
add
icebp
jno
in
xchg
in
jnp
movsb
out
loop
rcrl
sbb
fwait
jns,pn
jae
mov
jge
sub
dec
outsb
pop
mov
mov
inc
xlat
jo
leave
repnz
jle
lds
out
js
aam
dec
xlat
adc
pop
sbb
push
adc
rclb
xor
out
add
fmulp
or
out
sbb
dec
inc
push
jle
cmp
cmpsl
pop
out
cmp
mov
es
adc
ljmp
jge
adc
stos
out
adc
push
cmp
lods
loope
inc
mov
cmp
fwait
mov
dec
lock
orl
fs
js
mov
xchg
mov
xorb
push
mov
sub
sbb
js
xlat
push
or
imul
ret
sbb
xchg
cltd
jl
adc
dec
mov
insl
push
jmp
stos
inc
inc
lcall
insb
sub
iret
push
popa
add
sbb
test
js
add
mov
mov
addr16
imul
pop
out
mov
mov
int3
es
push
orl
sub
mov
xchg
jecxz
dec
ror
xchg
xchg
pop
xor
push
xchg
cmpsb
adc
movsl
lods
and
fldenv
add
mov
je
data16
pop
scas
add
cmp
or
clc
xorb
in
ret
das
nop
movsb
arpl
roll
jno,pt
insl
xchg
inc
inc
sbb
mov
cmpsl
sbb
add
addr16
pop
pop
mov
cs
out
icebp
out
mov
dec
inc
in
cmp
stos
mov
cmp
insl
add
xchg
ljmp
call
inc
push
testb
imul
je
sub
adc
jne,pn
sbb
mov
cmpsl
pushl
xlat
dec
sbbb
and
cld
cmc
sbb
push
jle
mov
imulb
mov
in
fstpl
lcall
pop
cmp
and
mov
dec
lds
inc
fildll
fchs
or
into
movsb
testb
mov
inc
xlat
hlt
out
std
aam
adc
mov
pusha
cmc
and
nop
and
xchg
xchg
in
int3
out
mov
sbb
inc
inc
mov
push
sub
ja
icebp
cmp
test
fwait
dec
pop
fstp
cmc
nop
movsl
lods
inc
mov
mov
lea
xchg
adc
adc
adc
adc
fldt
xchg
cld
ret
jmp
mov
xor
aaa
xor
jnp
into
pop
cmp
add
out
lds
or
gs
pusha
out
cwtl
stc
mov
jne
mov
in
mov
das
add
fwait
jecxz
cli
incb
jle
push
dec
push
es
into
mov
in
jne
pop
mov
xchg
clc
out
ret
mov
dec
jo
inc
pop
jns
mov
inc
repz
mov
out
add
add
or
loope
das
shlb
int3
call
push
inc
sbb
push
sub
fs
addl
jae
imul
dec
mov
pop
incl
push
into
leave
cli
add
sbb
mov
or
add
ror
jle
out
mov
pop
insb
dec
dec
bound
popa
mov
cmp
iret
sub
sarb
cmpsl
mov
fs
cmpsb
add
mov
hlt
mov
insb
iret
pusha
mov
mov
dec
cmp
mov
sub
std
cmp
repnz
sahf
cld
add
inc
pop
mov
lcall
loop
inc
addr16
rclb
js
icebp
and
idiv
es
push
lds
mov
xchg
push
mov
add
stos
notl
xchg
xor
pusha
dec
std
loope
pop
xor
jno
out
outsb
std
shll
xchg
mov
fbld
and
addr16
adc
and
lods
mov
lea
sti
fwait
add
jb
jmp
notb
insb
int
nop
daa
push
rclb
scas
shll
shlb
xchg
mov
inc
cmp
out
repz
jg
fwait
in
xlat
mov
pop
dec
mov
shl
ljmp
mov
push
sbb
jmp
cmp
and
lahf
into
shll
loope
and
ret
mov
mov
mov
inc
cltd
out
fidivrs
js
mov
rcll
sbb
fdivrs
jne
sub
xchg
or
loop
repnz
xchg
cltd
cmp
nop
push
outsl
dec
clc
xchg
sub
mov
mov
dec
xor
sbb
pop
jb
imul
daa
movsl
sahf
in
push
fidivs
mov
sti
push
xor
aam
adc
pop
mov
xor
in
arpl
cmpsb
popf
mov
inc
push
icebp
add
sbb
rorl
lret
pop
cmp
push
shrb
adc
mov
mov
mov
or
nop
js
xchg
xchg
add
mov
sarl
jecxz
adc
xchg
jg
cmpsb
into
lea
fsubrp
imul
mov
pop
lock
mov
jns
or
dec
jp
movb
xor
dec
ljmp
mov
pop
test
mov
lcall
xor
mov
or
js
jecxz
inc
mov
test
fcomps
xor
cmc
dec
mov
pushf
push
fcomp
cmp
fldenv
stc
mov
dec
pushf
jno
out
fs
inc
sbb
sub
lcall
nop
addb
xchg
les
fldz
and
mov
les
cs
cmpsl
fwait
pop
cmp
xor
sbb
stc
adc
jne
out
out
dec
pop
adc
add
jle
xchg
sub
jmp
int
loop
fwait
adc
clc
xchg
loopne
cmc
je
gs
fldt
sbb
mov
fs
inc
sub
pslld
jae
sbb
dec
jle
int
fadds
aam
in
ficoms
mov
sub
dec
sub
mov
sub
and
pushf
sub
incl
dec
mov
jo
pop
fldlg2
cmpsb
cmp
insb
xor
jbe
add
out
xchg
sbb
jecxz
mov
ficomps
insb
stos
cmp
movsb
inc
into
sbb
xor
sbb
addr16
inc
shlb
or
or
push
and
mov
sbb
adc
and
xor
or
mov
clc
sub
lock
jecxz
sbb
adc
divl
loopne
push
mov
or
dec
push
fdivp
sub
in
dec
mov
aaa
xor
roll
sub
fs
sahf
bound
fisubrl
lods
jl
lret
or
sbb
xchg
or
cld
xchg
sub
stc
xor
cli
push
pop
sub
cld
cmpsb
imul
and
or
cltd
call
or
lahf
mov
idivb
test
add
pusha
daa
or
sbb
dec
outsb
inc
fnstenv
imul
xchg
sub
lea
sbb
cmc
ret
mov
in
cmpsl
mov
xlat
fidivrs
and
popf
out
and
sub
xchg
int
cmp
mov
jnp
jg
lods
jecxz
bnd
jne
and
mov
mov
inc
add
adc
sub
testb
cmp
push
pusha
hlt
dec
add
cmp
sbb
sub
in
adcl
mov
lahf
xor
je
das
mov
je
dec
in
or
daa
pop
or
addr16
das
pop
mov
pop
mov
mov
loopne
lcall
repz
inc
jle
jp
mov
fisubl
out
push
icebp
and
sti
lds
icebp
insb
bound
lahf
ja
xchg
lock
rorb
pushf
adc
popf
test
decl
dec
test
xor
push
enter
cltd
inc
jno
divl
mov
mov
cmc
sbb
mov
test
mov
and
dec
leave
add
xchg
je
xlat
mov
popf
pop
pop
pop
jmp
xor
jns
push
clc
and
movsl
fisubl
daa
movsl
into
jg
daa
pop
inc
sbb
push
in
arpl
lock
adc
addb
dec
jl
pop
aam
push
cmp
push
adcb
les
mov
cmpsl
add
test
aas
xor
rcrl
dec
push
out
dec
mov
xchg
mov
fs
les
mov
hlt
mov
push
fdivp
fdivs
adc
ds
add
cli
jg
pop
ja
mov
arpl
mov
arpl
insl
mov
out
aas
and
arpl
and
cmpsb
xchg
pop
xchg
test
mov
shlb
sub
js
cwtl
cmp
adc
rclb
sbb
sub
aad
testb
stc
imul
insb
les
push
icebp
mov
dec
stos
xorl
cmp
pop
idivl
xchg
mov
insb
adc
or
test
jns
sti
or
cmp
aam
mov
jbe
sbb
int3
fsubl
clc
pop
dec
or
orl
movsb
stos
test
es
and
cmp
repnz
push
test
hlt
bound
jo
mov
pop
push
gs
jl
add
cli
mov
dec
jb
mov
push
sub
jnp
push
lcall
and
dec
int3
and
push
xor
shll
fdivs
aas
add
gs
xchg
lods
imul
adc
aam
aas
cmp
clc
aam
imul
sbb
xchg
movsb
divps
cltd
sahf
shlb
lds
out
pop
xchg
std
addr16
lcall
in
daa
loope
loopne
rorl
nop
movsl
push
lea
cmpsb
inc
ljmp
dec
sub
mov
mov
xchg
loopne
or
add
jl
jns
inc
test
mov
data16
imul
xorb
dec
movsl
sub
mov
std
fldt
stc
and
mov
insb
mov
enter
loopne
push
or
jp
mov
jbe
xchg
and
pop
lods
lods
aaa
jmp
out
mov
or
imul
adc
push
repnz
mov
pop
mov
lods
xchg
xor
int3
inc
pop
in
out
add
pop
addr16
ret
push
aaa
sub
inc
ficoms
sbb
clc
xchg
ret
arpl
jns
xchg
pusha
sbb
xlat
jle
and
icebp
sarl
sbb
cmp
jns
bound
ds
rclb
fistpl
adc
scas
in
jo
jecxz
dec
mov
add
push
xor
inc
add
jbe
mov
jno
loope
jge
outsl
mov
jo
andl
shr
sbb
inc
es
hlt
pop
mov
pusha
sbb
sub
pushf
mov
cltd
lahf
xchg
adcl
push
or
out
adc
cmp
popf
cltd
add
adc
add
pop
test
xchg
dec
push
rcrl
cmp
inc
push
pushf
pusha
cmp
jb
clc
xchg
xlat
int
push
pop
mov
pusha
xor
movsl
loopne
ss
addb
mov
lods
adc
lods
clc
fs
cmp
mov
arpl
repz
iret
icebp
stc
xchg
in
dec
jge
insl
lock
gs
xor
aas
and
pop
call
cwtl
sub
and
sahf
push
adc
je
mov
mov
sub
push
mov
inc
movsb
or
fwait
jae
and
add
or
jnp
mov
push
fstps
inc
pusha
push
std
mov
mov
jb
je
imul
dec
dec
insl
jmp
push
andb
adc
loop
jne
ret
xor
jne
pop
or
insl
stos
lods
sub
rcrb
jp
cmp
add
mov
mov
dec
test
sub
cs
mov
rorl
aaa
cmp
test
push
in
daa
sbb
pop
xchg
mov
pusha
hlt
ds
repz
cwtl
xor
fwait
mov
das
xlat
cmpsb
cltd
inc
mov
pop
jp
dec
mov
mov
cmpsb
or
mov
sub
popa
mov
push
outsb
dec
inc
ds
shlb
rorb
inc
jns
subps
mov
xchg
xor
pop
cmp
jno
push
sbb
xchg
push
mov
ror
push
enter
sbb
push
add
iret
jecxz
ss
pop
outsl
loope
sti
js
push
or
loopne
dec
push
leave
dec
lcall
adc
adc
pop
inc
jbe
cmp
aad
push
sti
dec
les
in
rcll
xor
xchg
test
aad
mov
ss
lahf
ret
xchg
xor
ljmp
cwtl
fsubrl
adc
xor
scas
push
inc
inc
rep
adc
sar
mov
cmp
insb
hlt
xchg
cmp
out
mov
adc
sub
mov
jns
dec
lods
jge
sbb
pushf
fidivs
ret
xor
add
adc
mov
scas
jo
xchg
fisubrs
pop
stos
pop
jle
in
or
out
ret
outsl
pushf
jl
pop
xchg
daa
mov
loope
lret
mov
pop
out
stos
mov
jb
ss
clc
xchg
cmp
push
xor
es
test
jg
fnstcw
addr16
pop
mov
fsubr
cmc
movb
clc
loope
mov
cld
lret
mov
xchg
xchg
inc
fs
cltd
push
movsb
cmp
aas
or
nop
loop
jmp
sbb
aam
and
je
jbe
adc
sbb
ss
mov
mov
rcl
lret
xor
mov
test
mov
ljmp
xor
jb
addb
inc
ds
mov
sahf
cmp
cwtl
cmc
cltd
jecxz
imul
pop
xchg
insb
popf
in
fidivrs
or
jae
pop
repnz
mov
daa
adc
pop
mov
ficoms
daa
inc
lcall
push
clc
movsl
test
xchg
iret
cmc
cli
push
jo
je
pop
icebp
call
int
cwtl
loopne
bound
dec
out
add
and
orb
lahf
dec
movsl
sahf
jb
lret
outsl
aad
fistps
lods
lret
mov
enter
es
xchg
xchg
out
lods
cmp
mov
adc
or
xchg
aad
fst
mov
rcl
testb
test
or
sub
loope
mov
sbb
mov
cmp
jb
mov
out
mov
into
cltd
pusha
inc
test
xor
xor
cmp
das
pop
mov
sahf
xor
ljmp
xchg
es
xor
xor
add
hlt
or
cli
push
mov
inc
and
bound
xchg
jo
jmp
cli
push
gs
mov
lret
inc
jns
xchg
shrb
xchg
cmp
or
cld
in
mov
xor
and
jmp
inc
out
arpl
xor
in
sbb
movsl
std
xchg
xor
enter
jl
pop
sub
jo
dec
cltd
xchg
inc
cmpsl
sub
ret
push
cmp
ljmp
pop
pop
sub
and
aam
jbe
or
cli
mov
pop
lret
sub
test
push
pop
pop
sub
cmp
add
xchg
scas
jmp
loop
arpl
lahf
pop
cmp
pop
popf
add
std
add
mov
fldt
xor
addr16
aas
or
sbb
lods
and
cmp
movsl
push
fildl
mov
push
mov
mov
outsl
in
dec
mov
in
mov
imul
cwtl
frstor
mov
dec
inc
jb
push
pop
jl
sbb
add
fldt
sahf
into
xchg
lret
call
insl
jl
rorl
sbb
ljmp
jmp
daa
add
fidivs
in
pop
adc
and
inc
std
insb
dec
leave
pop
sub
lods
out
imul
add
lods
cli
jmp
scas
dec
sbb
fisubs
ss
lea
mov
fs
loope
imul
shrl
sbb
fcoml
or
xlat
les
mov
pop
jae
mov
test
addr16
fcmovb
xchg
mov
push
test
fwait
in
and
mov
gs
mov
dec
sbb
hlt
ret
ja
cmpsl
jecxz
adc
roll
xor
jecxz
int3
push
out
aas
rcrb
fists
cmpb
std
pusha
gs
es
pushf
mov
jns
fcmovbe
dec
mov
jle
cmp
call
xor
mov
lret
mov
push
and
mov
mov
lods
pop
in
sarl
xor
ret
lret
push
jae
out
int
mov
popl
aam
pop
and
xchg
lret
imul
lahf
lds
rcrb
jmp
push
mov
jmp
xchg
gs
jmp
xor
sbb
adc
dec
xchg
insl
cmp
lcall
pop
mov
dec
sti
xchg
cli
fnclex
or
sti
andl
leave
je
imul
adc
cltd
adc
sbb
out
sub
das
mov
aad
mov
aam
mov
sbb
in
jns
xchg
add
dec
and
scas
sub
pop
loope
clc
popf
ja
roll
lahf
xchg
popa
inc
sbb
adc
adc
aaa
inc
lret
adc
sub
dec
popf
mov
sti
cwtl
cli
push
xchg
fs
aad
sbb
nop
or
pop
call
iret
int3
fistpl
jp
and
jo
push
movsb
jb
mov
adc
inc
xor
mull
pop
scas
xor
jo
sub
jb
xchg
add
mov
test
out
mov
mov
xchg
fwait
add
mov
imul
das
out
fisubrl
push
mov
out
sbb
xchg
sbb
scas
test
sbb
in
inc
popf
mov
test
fists
rcll
notb
call
mov
mov
cli
int
inc
or
pmulhw
cli
je
fwait
scas
inc
pop
shrb
loop
popa
das
cld
daa
add
les
cmp
enter
push
jbe
sub
pop
sbb
push
cmp
push
pusha
arpl
insb
add
xor
adc
dec
and
cwtl
roll
jne
inc
gs
std
outsb
stc
or
dec
pop
pushf
pop
outsb
in
pop
cmp
lret
jnp
jmp
pop
add
in
fisubl
aas
push
mov
mov
inc
add
nopl
nop
lahf
push
push
jecxz
lds
inc
xlat
mov
in
inc
clc
out
not
mov
clc
xchg
test
push
xchg
inc
push
rclb
jno
pop
pop
enter
jl
jecxz
and
inc
mov
lret
stos
jae
insl
arpl
rcr
stc
xor
push
sub
popa
out
xor
xlat
pop
cmp
pop
ja
jns
or
jb
mov
push
jne
outsl
loope
loope
mov
adc
cmpb
xchg
in
dec
xchg
andl
es
cmpsl
test
ds
or
jns
push
jg
test
mov
cmp
push
ljmp
cmp
scas
or
mov
dec
or
dec
xchg
adc
jno
movsl
sbb
lea
sbb
mov
and
mov
mov
push
pop
or
cmpb
mov
out
or
push
sub
xor
in
jp
fbld
mov
add
jmp
sub
push
movsl
xor
pop
mov
jno
cld
outsl
adc
sarb
pushf
pop
lock
sub
loopne
cmp
sti
lock
dec
and
and
adc
pop
fwait
push
shlb
sbb
imul
add
add
mov
ret
or
movsb
xchg
outsl
movsb
inc
out
enter
mov
inc
push
mov
xchg
ss
mov
mov
lock
sub
fbld
aad
sub
rorl
nop
icebp
js
fdivs
pusha
sarl
imul
in
mov
xchg
pop
pop
ds
fnstenv
in
adc
or
test
jns
cmp
nop
pop
lret
inc
mov
jo
in
push
ret
xchg
nop
jo
mov
or
sbb
lea
pop
mov
popf
push
mov
loop
in
lods
aas
stos
xor
sbb
lods
or
arpl
mov
add
mov
in
adc
ss
imull
push
adc
pop
ja,pn
xchg
stos
imul
mov
lret
stos
adc
xor
mov
adc
and
imul
sub
das
mov
jecxz
xor
inc
stc
mov
cmc
lock
jae
push
cs
mov
out
mov
and
push
mov
sbb
sbb
cmpl
in
insl
pop
jmp
pop
movsb
mov
test
sbb
cmc
ficoms
add
sti
sahf
test
ds
icebp
adc
lock
movsl
not
mov
jge
call
stos
push
push
mov
test
adc
std
cld
pop
call
add
or
cmp
pushf
push
xchg
jo
adc
jle
clc
mov
mov
imul
mov
test
in
ljmp
jnp
lahf
dec
mov
lock
xchg
pcmpeqd
sbb
fldt
cmp
pushf
push
add
xchg
jns
add
arpl
mov
in
ljmp
inc
roll
and
sbb
fisubrs
mov
outsb
adc
aam
lds
mov
sbb
mov
cmp
inc
hlt
add
inc
cmpsl
movsl
hlt
rcl
out
xchg
cmp
in
movb
rcrb
push
add
mov
sbb
and
pop
test
divl
inc
pop
outsl
or
add
push
mov
in
lods
sbbb
aaa
dec
sbb
or
nop
inc
ret
jbe
rorl
rclb
pusha
movsl
xchg
out
insl
push
and
push
jge
cmpsb
push
cli
cwtl
lret
mov
sub
aas
mov
push
or
rolb
pop
inc
jmp
adc
repnz
jb
sub
roll
ja
aad
ja
inc
mov
pop
cmp
push
in
xor
jno
mov
jbe
test
clc
xchg
sub
cmp
stos
xchg
push
pushf
xor
cli
lods
sbb
fsts
ljmp
pop
lock
mov
xchg
adc
andb
sbb
fisubl
repnz
fbld
xlat
add
inc
enter
cmpsl
imul
sub
rcrl
ffree
test
loop
repnz
sub
mov
mov
mov
inc
jno
sbb
int
repz
xchg
test
jnp
mov
mov
cld
cmpsb
aad
pusha
pop
jl
and
mov
pushf
aaa
ret
xchg
add
dec
or
push
pop
pusha
cmpsb
mov
into
xchg
fwait
mov
jle
cmpsb
mov
dec
push
mov
sar
sub
mov
mov
jo
push
shll
cltd
xor
jno
lret
sahf
xor
out
lea
dec
fdivrl
mov
ljmp
push
out
xlat
xchg
mov
icebp
arpl
jmp
push
sbb
lds
mov
push
and
push
xlat
jecxz
movsl
jno
push
xor
lcall
cmp
adc
mov
pop
xor
nop
push
mov
out
adc
shll
or
jmp
jl
stc
xchg
sahf
cmp
xlat
call
popa
leave
lret
jg
cmpsl
cmpsb
lds
or
lods
mov
adcl
out
rclb
mov
mov
sti
add
out
icebp
dec
push
test
shrl
arpl
dec
jecxz
loop
jbe
or
lea
sbb
fdivrl
dec
push
jecxz
lcall
js
mov
sbb
out
lock
jg
xor
jg
lahf
cmp
ficomps
inc
adc
xchg
lcall
shll
js
add
xor
inc
leave
in
pop
enter
sbb
and
xor
xchg
pop
in
addr16
pusha
jecxz
insl
enter
nop
in
pop
cmpl
subl
mov
addl
mov
gs
popf
lods
sbb
test
dec
mov
cmpsb
rol
icebp
bound
adc
mov
push
mov
ss
clc
lods
dec
mov
shlb
sbb
xchg
bound
adc
push
fwait
dec
mov
push
pop
pop
andb
clc
sbb
jb
scas
bound
into
mov
pop
mov
idivb
shll
mov
mov
mov
pop
jne
lock
out
fisttps
and
scas
in
jns
or
sbb
jo
adc
sbb
loope
popa
sti
add
std
clc
lret
jbe
scas
fmull
sbb
prefetch
or
fisttpll
mov
jb
push
xchg
adc
imul
jecxz
jg
sahf
mov
or
imul
scas
enter
pop
and
loopne
addl
adc
xor
addr16
adc
sub
jns
mov
repz
pop
sbb
ljmp
mov
mov
lcall
sub
mov
mov
cmc
sbb
jae
pop
lret
loop
lret
cmc
xchg
imul
or
stc
test
out
xchg
mov
push
jbe
insl
out
sbb
fdivr
cmpsb
imul
into
jo
mov
aad
push
imul
std
or
ret
leave
mov
int
lds
test
sbb
adc
dec
test
mov
mov
mov
push
pop
ret
loop
adc
stc
cld
aaa
mov
adc
cmp
adc
fsub
inc
mov
pop
neg
ja
fstp
and
scas
mov
dec
sahf
gs
call
sbb
pop
sub
jne
add
rclb
jo
add
movsb
jbe
mov
out
test
into
push
pop
mov
test
jp
xor
addr16
outsl
lahf
mov
sub
dec
inc
rcll
xor
jg
mov
lcall
stos
loope
aad
in
cmpsl
rcrl
addr16
mov
mov
xor
fists
mov
out
xchg
add
inc
cld
lds
scas
jmp
push
jp
cmpsl
pop
mov
xor
incb
xchg
and
icebp
jne
xor
test
sub
xchg
mov
iret
adc
aam
cmpl
sbb
lock
and
js
or
jo
lods
sarl
imul
inc
pop
lock
fsubp
lea
xorb
xchg
cmpxchg
rorl
sub
loop
frstors
cmpsl
enter
jbe
sbb
popf
and
mov
pop
mov
mov
sub
mov
fwait
lcall
and
xor
cmp
ss
push
add
jp
pop
ret
mov
xor
out
test
mov
xchg
ficoms
add
pop
jl
clc
xchg
push
fwait
ret
xor
dec
sti
icebp
iret
adc
loopne
into
or
mov
xor
or
add
lds
or
jge
push
cli
sbb
in
cld
adc
xchg
mov
mov
andb
dec
xchg
pop
mov
mov
test
cltd
std
lods
or
dec
pop
pop
scas
pop
xchg
xor
call
lcall
loope
mov
js
pop
mov
pop
imul
xchg
cmp
popf
imul
outsb
jns
cmc
inc
and
rclb
push
bound
add
negl
xchg
out
int3
mov
ror
xchg
jnp
test
ret
push
hlt
out
push
outsl
jo
mov
out
and
ret
inc
cmpsb
sbb
jmp
jp
dec
pop
sub
sbb
sbb
xchg
pop
jo
dec
lock
ss
filds
mov
lods
out
insb
xchg
sbb
in
or
hlt
daa
sub
inc
xor
mov
push
icebp
scas
hlt
sub
jmp
out
and
subps
loopne
pop
dec
arpl
js
jmp
mov
jno
add
dec
inc
aas
dec
inc
rclb
xchg
je
xor
lea
in
mov
loopne
lcall
out
inc
mov
xchg
push
add
or
rcr
dec
cli
sarl
dec
adc
out
in
es
sbb
dec
fsubrp
cmp
lcall
pop
test
nop
es
jl
dec
mov
xor
xor
icebp
faddl
pop
je
mov
aam
scas
or
sub
cmp
in
mov
fs
pop
aaa
movsl
lock
andb
fmull
pop
push
inc
pusha
aad
loopne
sbb
pop
popf
cmc
std
sbb
test
test
scas
mov
pop
jl
push
out
xchg
iret
push
iret
ljmp
xchg
xchg
and
outsb
sub
loopne
and
jns
addb
outsb
cmp
push
sbb
popf
push
cwtl
cmpsb
pop
mov
xor
lea
cmp
fidivl
sbb
dec
pop
jge
pop
lock
nop
shl
mov
mov
mov
jnp
dec
xor
mov
enter
or
cmp
imul
fwait
jo
imul
lcall
inc
ds
xchg
fwait
or
add
adc
jmp
and
add
pop
outsb
inc
pusha
adc
outsl
xor
jo
hlt
int
inc
and
xchg
loopne
adc
cmp
mov
mov
out
inc
adc
push
movsl
daa
jmp
sbb
loopne
loope
nop
fmull
lods
push
je
ret
fyl2x
sub
fistpl
sub
or
and
sbb
push
arpl
test
in
cmp
mov
xchg
cmc
sub
fnstenv
add
sub
aam
repz
rcr
loop
xor
ds
sti
das
jl
cld
sbbl
stos
adc
into
sqrtps
cmp
mov
sub
divb
dec
das
test
mov
out
je
jmp
js
fwait
test
push
cmp
lds
inc
and
jecxz
mov
push
inc
jae
add
nop
in
test
fisubrl
mov
mov
inc
and
push
or
and
mov
cmp
scas
cld
mov
mov
stos
aas
dec
xchg
add
jle
adc
pop
mov
push
test
xor
pop
les
mov
add
out
inc
xor
jne
mov
dec
cmp
add
fisubs
jo,pt
add
push
and
mov
and
push
dec
add
adc
push
je
add
mov
mov
or
jl
mov
pop
aas
call
mov
push
lods
push
add
gs
push
jl
push
inc
jnp
inc
or
and
test
hlt
adc
pusha
mov
dec
int3
mov
mov
add
mov
jb
insb
outsb
fisttpll
push
adc
aam
ds
repnz
pop
xor
inc
aad
stos
xor
subl
aaa
cmp
aaa
jns
dec
enter
add
cltd
cbtw
dec
jne
sub
dec
mov
push
incl
xchg
popa
jno
or
xor
addl
xor
adc
fbstp
lret
addr16
lods
inc
in
sbb
dec
shlb
jmp
test
fidivrl
aas
test
pusha
cwtl
xchg
jnp
out
cmpsb
add
push
jmp
and
movsl
into
jge
push
sub
pop
and
jnp
pop
loopne
out
jb
je
inc
insl
xor
fimull
pop
bswap
cmc
in
or
xchg
adc
icebp
movsl
sbb
mov
inc
mov
popa
nop
fdivl
xor
sbb
xor
ds
and
imul
cld
xchg
xchg
or
push
mov
lret
sbb
push
jmp
mov
pop
lcall
xor
fstl
ds
add
or
mov
std
pop
ljmp
xchg
data16
lahf
cmpsl
lods
xchg
call
repnz
sahf
out
psubd
inc
and
cmpsl
add
or
leave
sbb
push
je
sbb
or
xchg
inc
adc
hlt
bnd
jmp
push
xor
adcb
push
lock
fs
cmp
shlb
std
xor
pop
or
cmp
stos
leave
nop
push
push
cltd
xor
mov
fimuls
out
int3
mov
or
and
imulb
shll
lock
mov
out
inc
inc
push
lahf
pop
fst
dec
outsb
jns
pop
push
lret
mov
mov
pop
inc
xchg
lahf
in
mov
scas
xchg
ja
cs
cmpsl
sbb
test
pop
sub
mov
arpl
pusha
dec
push
or
mov
fimull
pop
pop
pop
mov
mov
jecxz
pop
jg
popa
or
outsb
mov
leave
dec
das
je
jp
mov
push
mov
movsl
sahf
and
shlb
nop
pop
call
and
add
rcrb
pop
add
cmp
dec
sti
pop
xchg
jno
sub
rcrb
xor
xchg
cmpsb
sub
or
icebp
iret
fsts
cmpsb
sbb
add
push
ja
repnz
pop
roll
xchg
stc
inc
xor
test
into
dec
jl
add
push
or
mov
and
sbb
fdivrs
dec
ds
adc
shlb
das
inc
pushf
je
xorl
clc
jb
cltd
aad
adc
pushl
out
loop
xor
aas
inc
icebp
mulb
shl
mov
jle
out
fcmovb
ja
pop
pop
inc
sub
inc
fstl
rcrl
mov
push
out
or
jge
in
hlt
xor
jb
mov
jns
stos
scas
mov
sarb
fs
xchg
jmp
cmp
push
pop
loop
dec
fs
adc
sbb
aam
ljmp
mov
js
ds
lods
pop
dec
dec
jno
pop
aam
pop
arpl
addr16
sub
fs
and
sahf
inc
cli
ss
dec
imul
lea
jb
das
inc
and
jae
test
mov
in
dec
mov
inc
out
and
loop
jg
out
xchg
popa
jns
add
cmp
push
jno
mov
pop
and
call
jp
je
xchg
push
xchg
inc
push
and
inc
xchg
sub
leave
movsb
sbb
sti
sub
mov
or
mov
into
ficomps
inc
js
inc
adc
enter
shlb
mov
xchg
cmp
iret
ja
sub
ljmp
xchg
cmp
cmp
imul
pop
add
and
in
es
insb
jge
lock
add
inc
sbb
int
fildll
gs
aad
push
sub
dec
or
insb
push
xchg
sahf
pop
dec
or
sub
sbb
lds
paddw
sbb
dec
jecxz
cmp
rcrl
cli
jo
xor
sbb
sbbl
mov
xor
mov
xchg
mov
mov
leave
dec
daa
push
jbe
fimull
sbb
int
jmp
push
repz
cltd
loope
lods
loopne
and
push
pop
negb
popf
jle
mov
mov
pop
lret
cmpl
pop
pushf
xchg
repz
jmp
mov
jns
movsb
push
fdivrl
cmp
ja
cs
jne
shll
gs
push
imul
add
out
xor
mov
inc
xchg
or
subb
out
xor
xlat
hlt
push
mov
add
stos
divb
mov
rcll
cmp
loop
xchg
arpl
mov
dec
cli
dec
add
cwtl
sub
loop
jae
ret
pop
pushf
xchg
idiv
stos
out
sbb
ss
xchg
test
xor
jnp
movsl
mov
dec
jo
mov
psubw
dec
pop
mov
jp
sub
jae
jle
inc
sub
jp
inc
jno
ror
das
mov
dec
cmpsl
out
push
out
xor
dec
sub
out
pop
les
mov
cmp
sub
mov
sbb
insl
divb
sbb
repnz
dec
int
dec
pop
aas
jmp
mov
dec
mov
ljmp
into
add
imul
adc
mov
loop
mov
pop
jle
fdiv
xchg
mov
inc
mov
je
jns
push
outsl
mov
cs
icebp
in
ljmp
cmp
pop
cmp
xor
shrl
push
out
imul
mov
mov
mov
inc
test
insl
les
push
pavgw
xchg
cmp
jg
xchg
lods
sub
movsl
lods
sbb
dec
dec
loopne
insl
aaa
repnz
repnz
and
enter
mov
xor
lcall
push
nop
cmpsl
je
loop
push
fwait
imul
sub
clc
repnz
xor
rcr
out
les
jo
xchg
and
cmp
adc
push
push
test
into
cs
xor
cwtl
sbb
lret
mov
dec
and
and
inc
xchg
or
mov
sub
sub
push
adc
and
jne
cs
idivb
leave
daa
mov
and
fldcw
cmp
in
test
mov
jp
mov
nop
mov
loopne
je
imul
sub
mov
test
mov
repnz
leave
popf
clc
sbb
mov
jge
lcall
addr16
imul
addr16
call
jmp
inc
sub
xor
test
pop
rol
dec
stos
mov
pusha
test
mov
mov
cmpsb
cmpsb
mov
cmp
clc
jp
int
arpl
inc
sbb
add
pop
dec
jp
pop
lret
ljmp
int
pop
pop
lds
sbb
adc
dec
mov
pop
mov
mov
jmp
inc
or
call
adc
in
sbb
pop
fsubr
push
push
dec
add
mov
xor
je
shrb
mov
xchg
sbb
dec
inc
orl
cld
loop
rcrl
cmp
aad
jge
mov
jne
push
ss
fldlg2
cmp
mov
mov
lret
adcb
mov
lahf
xlat
xlat
sbb
mov
repnz
pop
rorl
faddl
or
clc
and
out
mov
jp
mov
imul
xchg
ret
sub
pop
add
cs
movsb
mov
enter
popa
sahf
mov
insl
add
aaa
sbb
test
adc
inc
dec
shr
lods
sti
negb
scas
jl
aaa
xchg
xchg
faddl
and
pop
push
jp
xor
mov
shr
xchg
sahf
cmpsl
and
mov
mov
xor
push
jle
xchg
or
rorl
adc
jmp
insb
ret
pop
mov
cmpsb
sub
into
in
rclb
pushf
in
movsb
pop
jecxz
in
cmpsl
aam
lret
cmp
adc
jecxz
pop
xlat
adc
scas
repnz
lret
xchg
mov
jg
int
movsl
xchg
fnstsw
int3
ret
out
lahf
pop
ljmp
int3
fs
jle
sub
pusha
fsubl
and
push
imul
cltd
inc
out
pop
mov
add
and
xchg
mov
sbb
or
neg
jae
inc
mov
adc
repz
cmp
andb
mov
int
call
mov
in
dec
mov
testl
fprem
cmpsb
push
xchg
repz
push
dec
cmc
cmpsb
cli
mov
lock
sub
xorl
outsb
ds
cmc
aam
push
mov
sub
fldenv
mov
out
in
movsl
nop
sub
pop
pshufw
std
rclb
repz
mov
xor
ds
iret
iret
outsl
xor
jle
jl
cwtl
push
clc
push
in
sarl
adc
rol
xchg
dec
fbld
xchg
cmp
push
pop
mov
test
xchg
cltd
stos
jmp
lods
rolb
ret
mov
in
fwait
out
sbb
imul
jae
push
aad
push
fldenv
outsb
mov
mov
push
insb
jne
mov
push
or
jecxz
int
xor
imul
mov
test
popf
adc
fdivr
sub
xlat
sbb
dec
or
into
dec
movsw
loopne
icebp
repz
push
cmp
push
sub
enter
jmp
push
in
jae
xchg
mov
and
lahf
mov
popa
push
les
cwtl
or
mov
dec
jecxz
std
mov
cmp
cmp
and
sub
xchg
shr
sbb
ja
cli
mov
jp
and
test
jno
jge
xchg
cmc
fs
sbb
mov
in
sbb
jb
mov
pushf
cmc
sbb
fnstenv
repnz
lret
and
out
xchg
sbb
add
lret
cmc
dec
ljmp
jae
gs
jne
outsb
push
bound
add
and
addr16
mov
xchg
adc
lds
fs
outsb
sbb
mov
push
sbb
adc
sub
cltd
daa
mov
call
loope
notb
push
add
sbb
stos
fistl
add
mov
cmp
popa
fsin
fs
xchg
test
push
sbb
loope
adcl
mov
jp
std
jmp
insl
fs
mov
or
pop
ret
shll
inc
mov
enter
inc
push
push
pop
xchg
adc
pushf
bound
mov
pusha
inc
mov
dec
je
inc
mov
push
pop
lret
push
or
div
shrb
dec
rorb
dec
outsb
inc
mov
iret
xchg
mov
pop
lds
ret
xor
mov
ret
mov
sbb
xlat
mov
inc
ficomps
das
mov
daa
push
mov
lret
stc
sbb
xchg
dec
adc
or
jg
daa
je
scas
mov
lcall
and
mov
adc
inc
push
insl
movlps
mov
cmp
pop
nop
mov
std
pop
icebp
mov
and
sbb
cmp
nop
xabort
or
pop
inc
lods
pop
adc
aad
xchg
mov
repz
pop
mov
iret
and
mov
pushf
ret
jo
mov
imul
lcall
hlt
fnsave
cs
fcompl
mov
jns
push
sbb
leave
cmc
cli
dec
cs
inc
push
jbe
add
incb
cmpsl
mov
inc
js
mov
xlat
in
repz
test
inc
rcll
les
sbb
xlat
jl
mov
mov
rcrb
movsb
movsl
mov
sub
mov
mov
stc
ss
jl
push
pop
mov
jnp
loop
mov
lea
out
les
fldenv
add
bound
cmp
js
add
pop
ja
xlat
lods
shrl
xor
mov
add
mov
pop
std
test
xchg
jecxz
adc
xor
shlb
sarb
sbbl
jp
sbb
fsubs
lock
inc
mov
mov
lds
jg
fnstcw
imul
pushf
jnp
cmp
inc
jge
mov
je
mov
std
nop
dec
cmp
int3
shl
adc
lods
xor
cli
lret
in
cmp
mov
xchg
cmp
jmp
out
cmp
outsl
rorl
fdivr
popa
andps
inc
aam
shlb
sbb
cmpsl
movsb
fimull
xchg
mov
icebp
sub
mov
dec
into
xchg
aad
mov
shll
mov
pusha
or
daa
aad
push
adc
pop
adc
fistl
pop
dec
clc
mov
mov
out
xchg
mov
and
push
icebp
push
push
and
add
out
les
test
xchg
ror
sub
arpl
or
push
sbb
scas
mov
sbb
inc
gs
mov
stc
in
xor
xor
in
jae
mov
xlat
jb
or
mov
mov
mov
pop
hlt
lret
in
jno
ret
sub
add
fcmovu
mov
sbb
adc
scas
scas
xor
hlt
aam
cltd
or
bswap
les
mov
cld
and
fsubrs
xorl
frstor
pop
lret
pop
jb
jne
sub
inc
add
imul
adc
push
and
sub
mov
push
sbb
push
sub
sub
and
pop
icebp
mov
outsl
inc
xchg
and
les
sbb
push
jecxz
add
movsb
insb
cmc
and
int3
mov
test
lea
dec
iret
inc
rclb
aad
lcall
pop
push
mov
es
pop
out
aad
push
pop
xchg
xor
call
xor
int
sub
and
push
inc
inc
ret
test
rcr
sti
mov
jecxz
mov
cmp
mov
je
mov
adc
dec
aas
test
in
loop
cmpsl
into
pop
fdivrl
mov
movsl
xchg
mov
dec
xchg
mov
out
push
repz
push
sbb
mov
cmp
and
dec
jnp
mov
and
and
xchg
arpl
test
stos
imulb
lds
pushf
sub
inc
jg
repnz
insb
mov
push
inc
in
lock
jg
jge
xchg
inc
mov
fwait
iret
mov
insl
lcall
lods
les
ljmp
test
ret
cmp
jno
mov
repz
sbb
adc
mov
pop
lods
fsub
add
out
lret
cwtl
jp
fidivs
add
and
jo
ljmp
pop
imul
gs
mov
add
popf
ss
shrl
in
push
push
mov
adc
adc
mov
les
rclb
adc
mov
jmp
xor
and
imul
jno
cli
and
rorb
into
cmp
mov
mov
jle
and
dec
fwait
add
ja
lahf
jne
bsr
mov
pop
les
pusha
pop
pop
jle
mov
lea
push
xor
out
cmp
pop
push
fisttpll
gs
ss
or
or
cmp
movsb
pop
add
add
xchg
mov
jle
lods
lcall
xchg
aaa
stc
leave
ljmp
cltd
add
jle
and
sub
jnp
xchg
stc
push
xor
push
mov
xor
cld
cmp
mov
shl
fs
imul
cwtl
jb
and
xor
daa
std
stos
ds
push
add
data16
fisttpll
and
jne
jecxz
push
fs
test
inc
pop
xorb
jl
cmpsb
cmpsl
xchg
movsl
popa
xor
mov
mov
mov
fists
jl
dec
out
cld
mov
or
adc
mov
int
and
or
test
pushf
ret
jo
ret
fs
sbb
mov
mov
dec
pop
arpl
xor
pusha
mov
ljmp
inc
mov
mov
imul
sbb
mov
mov
mov
cmpsl
or
xchg
lcall
or
bound
js
sbb
jne
lret
add
cmpl
lahf
sbb
push
push
outsl
xchg
sub
xchg
into
test
mov
repnz
dec
aas
mov
lahf
jne
mov
insb
jnp
mov
js
out
pop
aad
jg
xor
push
fsubl
fadd
ret
out
jmp
mov
add
out
outsb
sub
or
xor
adc
xchg
sbb
xchg
mov
je
xor
in
cmp
mov
jecxz
out
dec
mov
mov
out
dec
push
subb
push
jge
add
rep
frstor
xor
std
cli
cmp
sub
adc
pop
fildl
test
imul
shll
sarb
fcmovbe
inc
sub
jnp
out
pop
adc
and
push
pop
pop
std
setbe
add
scas
pop
inc
mov
loop
movsl
pop
cwtl
mov
sbb
mov
add
jmp
mov
cmp
push
cmp
mov
aad
jle
out
jns
movsb
jg
pop
adc
mov
insb
lcall
int
das
in
adc
jb
movsb
jle
adc
xchg
pop
pushf
inc
lods
adc
cwtl
pminub
imul
mov
fisttpll
mov
shll
or
fildll
cwtl
cmp
cli
ret
mov
les
or
call
inc
lods
std
subl
cmpsb
loope
or
pop
lret
lock
xor
clc
mov
push
xor
jg
out
cs
sub
imul
jecxz
or
mov
and
cmpsb
sahf
je
or
mov
xor
cltd
out
es
add
dec
xor
push
fs
fimuls
pop
mov
mov
in
int
adc
xchg
dec
mov
in
orb
lcall
test
das
push
xchg
sbb
sub
lock
hlt
cli
sbbl
loopne
xchg
fsubs
xor
lods
popa
xor
mov
scas
orl
jae
push
xchg
xchg
es
shlb
mov
arpl
mov
dec
pop
mov
mov
je
mov
inc
sub
daa
test
out
mov
inc
mov
inc
cmp
adc
mov
inc
loope
scas
fidivrs
test
cmp
mov
or
roll
cmpsl
jmp
and
es
sub
jl
aaa
mov
jg
int3
mov
xor
jb
push
lock
popf
je
push
mov
pop
rolb
inc
notb
jmp
fdivrs
pop
daa
in
testb
adc
lahf
test
mov
lahf
dec
bound
jnp
sti
xor
stos
scas
dec
sbb
mov
test
mull
cmpsb
sub
cs
imul
fbld
scas
dec
or
add
in
ljmp
mov
pop
xchg
sub
jnp
enter
sbb
ja
cmp
and
shll
in
push
mov
jecxz
movsb
imul
cltd
xorb
inc
fdivs
inc
pop
mov
pop
aas
pop
mov
sbb
test
lret
add
pop
in
mov
outsl
or
cld
lahf
int3
daa
jns
subl
mov
inc
pop
lock
adc
push
pop
or
in
xor
loop
mov
jmp
dec
pushl
xchg
lds
rcrb
push
mov
in
lahf
mov
orl
loope
push
scas
mov
ds
inc
dec
push
jno
mov
dec
pop
cmpsb
imul
sbb
cmp
fdivs
ja
nop
fsub
push
inc
out
mov
testb
cmp
push
dec
pop
ljmp
cmp
xor
pushf
xchg
push
outsl
pop
sbb
daa
test
stc
jbe
loopne,pn
stc
xchg
pop
stos
jle
hlt
mov
cmp
ss
notl
sbb
jl
lret
inc
insl
jne
in
inc
or
movsb
mov
mov
push
xchg
mov
aam
cmpsl
mov
orl
add
int3
lcall
push
cmp
mov
aaa
insb
ficoms
dec
sti
add
mov
adc
mov
sbb
xchg
roll
mov
and
icebp
adc
shlb
int
ret
mov
shll
fistpll
pop
jne
push
inc
sub
push
stos
lret
loop
mov
lock
mov
xchg
ja
add
out
bound
dec
call
sub
push
push
mov
loope
pop
mov
mov
scas
sub
lret
imul
out
mov
cli
sbb
roll
add
fst
into
in
and
adcl
cwtl
mov
mov
xchg
das
cmp
stc
cmpsb
mov
lds
adc
pop
sahf
fsubs
lahf
nop
add
std
stos
push
jne
adc
mov
xchg
repnz
xchg
adc
pusha
in
dec
outsl
inc
mov
cmp
jnp
push
or
mov
mov
fwait
sub
xor
repnz
pop
push
inc
int
mov
imul
insb
mov
push
xchg
xchg
fwait
xchg
add
mov
xchg
sub
sbb
pop
jl
xchg
out
lcall
lods
mov
xchg
cmp
bound
adc
stos
cs
lods
lock
inc
or
mov
rcll
stos
pop
xchg
push
sub
mov
aaa
add
dec
and
inc
testb
push
jns
add
xor
div
add
js
or
push
iret
shll
sbb
cmp
mov
and
push
sub
jnp
movl
push
sub
outsl
cmp
mov
push
sub
insb
les
addr16
pop
test
mov
jb
es
pop
mov
outsl
sub
movsw
jne
adc
xchg
aad
pusha
enter
mov
aad
dec
or
xchg
or
fwait
scas
xor
mov
or
sti
adcl
cmp
mov
shrl
jecxz
mov
shlb
mov
clc
sti
mov
jmp
mov
xor
sbb
popa
vpextrw
lds
pop
push
and
in
rcll
loopne
pop
imul
sub
or
loop
frstor
mov
mov
les
int3
sbb
push
xchg
stc
cmp
aas
inc
and
andl
repz
loop
aam
add
cmc
lcall
jo
jmp
ljmp
lea
jae
jle
outsb
dec
add
out
and
sbb
roll
jbe
sub
push
push
call
dec
xchg
loope
mov
jge
cs
movsl
mov
insl
movsl
insl
shrb
cmp
mov
sbb
push
pop
xor
inc
inc
cmp
icebp
ret
bound
mov
pop
addl
cmpsl
xchg
sbb
pop
cmp
sti
int
sub
leave
imul
les
adc
pop
jmp
push
or
or
inc
xchg
js
fnstcw
mov
inc
pop
push
push
outsb
adc
pop
loopne
push
jecxz
adc
repnz
shll
jnp
mov
scas
hlt
dec
and
popa
pop
cld
pop
in
jae,pn
push
push
arpl
push
dec
js
pushw
lret
stos
inc
mov
dec
adc
leave
lret
test
mov
sub
hlt
lret
dec
or
mov
inc
cmp
int3
rcr
lods
push
pop
cmp
int3
jbe
rcl
mov
jl
mov
les
cmp
adc
and
pop
in
stos
scas
jmp
in
add
mov
test
inc
outsl
sti
xlat
cwtl
or
mov
scas
nop
jp
or
cld
mov
fldenv
adc
mov
push
std
mov
mov
push
mov
cvttps2pi
mov
cmp
shrb
lret
xchg
lock
addr16
add
dec
xor
cmp
jmp
jp
enter
cmpsl
pslld
push
jmp
mov
std
stos
cmp
ret
xor
xor
jmp
sbb
push
add
int
or
and
mov
xor
std
jne
out
xor
or
fdivs
or
cld
popa
ret
pop
push
pop
jmp
xchg
jge
pop
es
sbb
outsb
mov
jae
es
movsl
cmp
cmp
pop
pop
outsl
mov
push
leave
fmuls
clc
std
mov
add
fst
jbe
xor
sbb
sbb
test
shll
scas
cli
jae
mov
add
in
aas
jae
and
sub
sbb
call
dec
and
sbb
mov
push
lds
adcl
sbb
std
jnp
push
int
decl
enter
enter
rclb
loopne
popa
jge
loopne
jecxz
aaa
cwtl
into
sbb
cld
and
lea
adc
out
insb
sub
jl
jnp
dec
stos
lahf
inc
mov
pop
arpl
fnstcw
leave
mov
add
push
aad
xor
mov
call
aam
outsl
xchg
xor
ja
push
sub
adc
sahf
clc
pushf
leave
jb
popa
push
cld
cmc
sub
lahf
int
vmovdqa32
outsl
push
vmovmskpd
iret
sbb
ljmp
add
fcmovb
js
fsubs
test
xchg
dec
rclb
mov
repz
popw
mov
pop
jge
xchg
lods
and
fistps
aam
mov
sbb
dec
or
fisttpll
out
jns
test
fwait
mov
cmpsl
inc
mov
test
xchg
dec
sti
cmp
adc
adc
loop
jb
sub
pop
push
jmp
mov
cmpsl
les
pop
ret
and
repnz
sub
jle
mov
mov
je
mov
jg
and
dec
and
aad
shrl
pop
push
adc
mov
mov
inc
mov
mov
iret
idivl
rcr
cs
mov
loope
into
ret
xlat
bound
mov
test
fildl
cmpsl
sub
sub
pop
enter
pop
pop
xor
xlat
cmpsl
jns
push
fadds
test
in
xor
cmp
xor
jno
adc
jae
or
mov
lahf
imull
cmc
pop
outsb
dec
lods
mov
mov
inc
loop
cmpsl
mov
fxch
dec
lock
stos
sbb
cmp
ja,pt
bound
pop
cmp
jnp
fiadds
lods
cmp
clc
icebp
mov
mov
sbb
enter
cltd
adc
cmp
mov
sub
imul
dec
jo
jbe
xchg
inc
repnz
enter
lds
and
add
sbb
jae
push
nop
sbb
jb
mov
adc
xor
pushf
enter
xor
rcrl
mov
dec
test
mov
sbb
cmc
sbb
xchg
dec
notb
xchg
xchg
mov
cmp
iret
popa
mov
js
mov
sbb
loope
loope
out
push
mov
fwait
add
mov
pop
arpl
nop
mov
in
shl
push
test
aad
pop
and
jnp
ljmp
cli
add
xor
les
pop
hlt
mov
ret
lret
push
shll
int3
popf
dec
pop
cmc
mov
xchg
pop
jnp
mov
inc
gs
mov
into
movsl
adc
jp
icebp
notl
pop
or
and
jle
lret
cwtl
aas
dec
push
and
mov
int
les
adc
or
daa
adc
push
stc
fs
jbe
testb
add
pop
shll
xor
adc
add
loopne
cltd
lahf
push
pop
orl
decl
xor
sahf
rorb
xchg
pop
loop
movsb
jne
mov
push
arpl
mov
push
shll
aas
push
cmp
ficomps
xor
call
xor
fwait
fs
jb
pop
dec
sub
shll
rolb
and
js
pop
daa
jge
aam
mov
fdivp
and
adc
mov
lock
xor
push
comiss
popa
fs
mov
pop
xchg
pop
in
lods
stos
jbe
arpl
ret
sbb
test
xor
int3
shlb
pop
adc
xorl
sub
xchg
xlat
mov
xchg
cmp
lods
insl
or
sbb
popf
and
inc
int3
stos
sub
lcall
and
xchg
or
sub
push
mov
cmp
addl
sub
push
mov
rclb
mov
loopne
jle
and
iret
jmp
test
je
or
add
jae
stos
sbb
lock
xchg
mov
sbb
mov
mov
inc
test
fcomps
aaa
sub
inc
jne
out
xchg
pop
or
shrb
mov
in
mov
std
adc
fwait
addr16
in
filds
jbe
adcb
xchg
or
xchg
cmp
add
sbb
cmp
fs
dec
movsb
xor
push
imul
faddl
cmp
popf
sbb
push
cmp
cmp
adc
jge
xor
test
mov
push
repnz
and
pop
loopne
lods
js
xchg
or
in
iret
je
lods
mov
pusha
lock
or
xchg
cli
dec
pushf
packssdw
xchg
xchg
mov
or
rcr
push
pop
icebp
test
fnclex
in
mov
mov
sub
jp
inc
arpl
cwtl
cmp
mov
sbb
bound
xchg
sbb
outsl
cmp
lock
add
cmp
fsubl
jmp
fnstsw
stc
mov
inc
data16
dec
xchg
cmp
test
call
sbb
std
sub
out
and
popf
cltd
dec
pop
lret
sbb
popf
fucomip
push
movsl
inc
cwtl
test
ret
rcr
fwait
jl
and
scas
mov
push
mov
test
adcl
and
in
push
push
in
sub
js
rol
sub
fwait
lcall
xchg
xor
cli
and
mov
ss
cmp
repnz
popf
xlat
test
subb
dec
mov
jne
xchg
push
jecxz
scas
sbb
lahf
stos
jae
shlb
xchg
dec
add
jnp
pushf
loop
pop
cmpsb
imul
stc
pop
pop
addb
fwait
in
mov
xchg
dec
movsl
fnsave
and
js
inc
sbb
jns
mov
subb
xchg
or
jmp
xor
pop
sar
or
jbe
mov
lcall
adc
popw
pop
push
push
xor
pop
inc
fnstenv
mov
jl
xchg
rclb
adc
insb
sub
rolb
or
pushl
xor
fldcw
add
xchg
movsb
test
adc
dec
xchg
jge
mov
hlt
adc
shll
repz
das
jne
cld
mov
test
arpl
mov
pcmpgtw
inc
jbe
sub
xlat
cmp
mov
xchg
sub
and
push
pusha
cwtl
jp
popa
ds
cmp
cmc
vmovapd
fisubrs
jb
imul
fwait
or
mov
add
add
pop
iret
cltd
dec
pop
dec
sub
inc
daa
push
subl
cmp
mov
xchg
sub
pop
adc
jne
fstpl
clc
adc
sbb
add
das
scas
addr16
stos
mov
movsb
roll
dec
push
pop
in
adcl
mull
fabs
xchg
cmp
fdecstp
imul
imull
mov
sbbb
mov
push
dec
repz
dec
lahf
dec
pushf
sub
and
clc
scas
jb
inc
daa
fidivl
ja
mov
mov
movsl
inc
lods
push
fistpl
jbe
xchg
popf
push
mov
inc
mov
cwtl
jp
sub
andl
mov
fwait
lcall
in
out
pop
and
movb
mov
sbb
aas
fwait
nop
negl
pushf
jns
mov
mov
mov
push
jle
lods
pop
js
adc
add
stos
adc
fisubrs
xchg
and
dec
pop
jle
cltd
xorb
mov
mov
mov
mov
mov
lret
outsl
jp
rcl
cli
movsb
push
in
loop
nop
mov
daa
adc
or
leave
stos
inc
les
fscale
ret
add
pop
add
movsb
inc
fcoml
lahf
sub
lret
and
scas
push
out
push
iret
lahf
les
mov
into
adc
push
mov
mov
jecxz
es
xchg
inc
ret
mov
shll
or
in
push
testb
mov
ljmp
mov
scas
test
xchg
and
sub
insl
ds
push
adc
jle
mov
fdivr
fistl
jle
cli
and
jns
jne
rorl
push
lods
or
jg
and
cld
lret
mov
cmp
and
sahf
fists
mov
cmp
sti
xor
mov
jbe
push
pop
out
xor
adc
sbb
sub
adc
dec
arpl
jle
push
xchg
shlb
in
out
jmp
popf
push
shl
lret
dec
pop
std
push
js
mov
fnstenv
mov
inc
cli
inc
lock
stos
xchg
test
in
xor
sbbl
insb
lcall
repz
rolb
mov
jge
lods
adc
shl
mov
into
ds
inc
add
add
ljmp
scas
and
sbb
inc
dec
mov
dec
adc
lahf
test
repnz
mov
scas
add
fs
loope
or
enter
add
xor
dec
fistl
adc
sbb
in
jb
cmp
or
xor
jecxz
popa
nop
sarl
or
packuswb
pop
hlt
mov
fucomp
neg
cmp
cwtl
es
ret
and
lret
xor
lcall
es
into
jb
lcall
loop
mov
push
push
mov
push
test
ss
jge
or
rol
scas
cmp
lea
xor
push
jb
in
inc
xor
jl
sbb
syscall
adc
loopne
push
mov
mov
jno
rorl
sub
int
xor
push
repnz
dec
popf
cmp
pusha
sub
fisubrs
ljmp
jmp
fcmovb
dec
jp
jmp
scas
sub
test
push
pop
dec
jmp
out
jno
adc
addr16
push
push
scas
inc
mov
cmp
stos
aas
adc
sbb
lock
push
shll
xchg
int3
popf
dec
push
cmc
push
fnstcw
ds
and
subb
mov
mov
stc
lahf
xlat
ds
xor
and
sbb
xchg
rcrl
pop
push
rol
pop
jl
inc
mov
shlb
xor
pop
or
sbb
icebp
lea
pop
xchg
mov
ret
dec
or
mov
arpl
les
mov
sbb
aad
mov
test
das
shll
jle
mov
insb
cmp
adc
jb
mov
xor
mov
shll
jmp
mov
push
int3
repnz
call
je
test
mov
sbb
push
jge
lcall
adc
je
cmp
jl
call
sbb
xor
cs
lods
jo
daa
out
cmp
and
sahf
or
xor
jno
fcoms
shll
mov
adc
cmp
xor
ficomps
mov
dec
xor
mov
int3
outsb
pop
popl
dec
inc
psadbw
mov
jmp
ja
insb
imul
sub
addr16
cmp
add
jo
les
jecxz
mov
jp
out
hlt
test
jecxz
cmc
stos
push
sbb
daa
or
outsb
mov
les
lods
xchg
orb
sub
xchg
add
pop
outsl
in
adc
pop
jne
es
sahf
mov
adcl
nop
jle
xchg
push
rorb
pop
jl
jne
aad
and
sbb
in
xchg
and
daa
jne
cmc
push
je
mov
jmp
sbb
pusha
push
je
jge
sarb
bound
jge
fnstenv
push
loope
and
stos
adc
test
icebp
sub
inc
movsl
jp
lods
mov
mov
sbb
jne
js
sub
push
ror
test
push
mov
fildll
ja
les
std
int
insl
pop
and
pop
push
aaa
sub
push
dec
cwtl
pop
cmp
and
loope
mov
test
xor
outsl
dec
jp
lock
dec
loope
mov
jbe
cmpl
cli
inc
mov
add
shrb
std
cmp
add
cwtl
call
mov
test
dec
mov
or
jns
lock
mov
push
push
xor
push
je
jmp
xchg
push
imul
jns
rolb
pop
scas
js
mov
xchg
and
stc
enter
mov
loopne
test
popa
fwait
cmpsb
scas
aam
out
sbb
out
lock
les
xchg
sbb
add
fcoml
shrl
fwait
xchg
cs
mov
sbb
mov
ja
mov
repz
or
pop
mov
popf
inc
mov
test
nop
repnz
mov
pushf
cld
mov
push
sub
jb
cmpsl
push
das
mov
gs
aam
in
test
jne
int
arpl
outsl
or
mov
hlt
iret
out
jp
inc
lea
leave
xchg
imul
jg
pop
cmp
pop
mov
mov
fsubs
es
mov
mov
inc
sbb
call
imull
mov
ss
cmp
push
push
dec
jge
fldcw
dec
lea
push
into
inc
fwait
jecxz
pop
sbb
pop
fwait
scas
mov
xlat
cmp
add
xor
lcall
fsubs
leave
sub
pop
faddl
mov
add
mov
mov
sub
sbb
lret
push
aam
dec
fildll
ljmp
xor
push
cli
xchg
stc
push
cld
sbb
push
mov
ja
pop
cmp
adc
shll
pop
xchg
stos
ficoms
sbb
pop
xchg
cwtl
enter
jnp
add
mov
out
mov
movsl
inc
js
pop
adc
add
cmc
xchg
inc
imul
lea
add
fstpl
jge
add
sub
iret
cmp
jns
gs
cli
mov
in
rcrb
inc
into
adc
push
in
adc
leave
dec
xchg
xor
test
lahf
jo
sub
int3
in
andps
sub
dec
loop
cmp
call
push
jp
lods
test
sahf
sbb
cltd
cmp
ja
jb
popa
mov
xchg
mov
inc
popa
flds
push
sbb
jg
fildll
mov
fstpl
push
int
lock
sbb
cmp
imul
mov
xorb
push
sbb
pusha
lcall
mov
shr
icebp
sbb
das
add
pop
ljmp
mov
mov
andl
or
sbb
push
mov
loope
scas
call
sbb
ss
inc
out
mov
jge
out
movsb
subl
push
insl
cmpsl
gs
ret
les
in
mov
mov
jle
xchg
sub
inc
into
jp
ljmp
fisttpll
js
pop
into
mov
movsb
jne
add
arpl
push
cmp
movsl
stc
or
ret
out
bound
stos
and
icebp
lret
xor
ficomps
lods
ja
mov
out
flds
lods
xchg
cmp
adc
cmpsl
aad
sub
divl
notb
je
jb
dec
jns
cltd
push
testb
inc
jno
pop
cmp
xchg
lods
and
lock
scas
jge
movsb
gs
dec
add
ror
adc
je
cmp
icebp
cld
in
xchg
mov
enter
jo,pn
and
xchg
lea
fisubs
adc
sti
push
popf
xchg
mov
into
mov
pop
push
jl
hlt
pop
or
pop
inc
fstps
idivb
mov
xchg
clc
ffreep
leave
xor
cs
stos
xchg
inc
hlt
pop
dec
das
stos
aas
out
in
pop
sbb
push
lds
test
mov
enter
pop
inc
xchg
push
out
js
inc
nop
fiaddl
add
and
mov
inc
dec
jp
xlat
cmp
fldl
neg
mov
icebp
sub
adcl
test
mov
adc
pop
cmp
add
inc
xor
jne
stos
test
mov
es
mov
push
fistpl
push
scas
mov
fiadds
icebp
lret
xchg
iret
loopne
pop
in
ja
adc
mov
add
and
pop
ja
testb
js
mov
jo
fwait
addr16
lds
and
aad
aad
mov
das
dec
packuswb
test
lea
nop
icebp
pop
mov
push
mov
jle
or
scas
ret
sub
xchg
inc
sub
mov
sahf
push
lahf
mov
pop
mov
mov
movsl
and
sbb
cmpsb
mov
hlt
sub
pop
xchg
test
cmp
stc
xchg
push
cli
in
xchg
cmp
cmp
cmc
mov
sahf
cmc
lea
loopne
dec
aam
dec
xchg
or
adc
push
sub
cli
or
pop
fcomps
sub
fwait
sbb
xor
sti
aad
mov
inc
rcrl
sarb
mov
popa
push
divb
cmp
test
xor
pop
push
mov
dec
je
out
fsubl
mov
dec
movsl
or
pop
fwait
stos
into
and
cld
aam
adc
sub
hlt
mull
inc
sbbb
inc
in
cwtl
push
xchg
loope
xchg
cmp
mull
jno
bound
cmpsl
movsl
and
lret
mov
mov
or
popa
shrl
sub
xchg
and
out
adc
seta
jne
or
mov
icebp
jno
and
lahf
lea
jne
arpl
mov
bound
add
xchg
jno
bound
data16
aaa
int3
js
pop
xor
les
lret
hlt
ret
imul
repnz
ror
adcl
ret
push
sub
push
inc
xor
test
and
pushf
push
adc
pop
push
nop
mov
push
dec
jb
lds
in
mov
mov
cmc
xchg
xor
imul
jb
pop
jmp
mov
push
je
outsl
dec
icebp
sahf
movsl
push
cmp
mov
outsb
or
sub
push
cmpsl
mov
rolb
outsl
iret
inc
sbb
aaa
dec
pop
sbb
or
push
mov
mov
scas
add
int
in
ja
sarl
pop
or
cwtl
test
push
add
cmp
insl
pop
out
and
push
icebp
clc
push
nop
shlb
xor
call
push
fists
xor
in
xor
sar
jae
cwtl
fiadds
pop
cmp
mov
jo
mov
dec
add
fsubrl
sbb
sub
sbb
in
js
adc
daa
cmp
inc
jo
adc
inc
sub
idiv
std
mov
pop
sub
addr16
push
testl
nop
jp
je
aad
dec
ret
mov
cld
in
fldcw
sarb
or
nop
push
or
or
in
orl
jge
sahf
cld
shrl
xchg
pcmpeqw
mov
std
loop
push
lea
adc
js
add
mov
lret
mov
mov
nop
dec
loope
int
mov
xor
dec
push
lock
xor
jb
push
push
lods
fsubl
test
in
sbb
in
push
movsb
or
xchg
or
push
popa
or
sub
mov
sbbl
std
sbb
dec
sarl
repnz
pop
xchg
ds
sub
inc
adcl
jne
push
push
sahf
xor
arpl
and
mov
daa
arpl
adc
dec
push
or
movsl
mov
sbb
jecxz
orb
je
pop
jae
mov
test
and
sahf
dec
jns
gs
mul
dec
enter
mov
insb
sti
dec
mov
pop
cmp
inc
lods
cld
mov
fldl
dec
js
fnstcw
mov
clc
ds
lea
aaa
jmp
xor
xchg
mov
js
repz
es
mov
mov
jg
test
addr16
or
lods
push
mov
fmuls
imull
addr16
jecxz
adc
aad
xchg
or
int
addr16
imul
xchg
mov
lods
pop
lahf
cs
cmc
lahf
nop
jb
cld
lds
sub
pushw
and
nop
lret
cli
je
out
stc
inc
outsb
imul
sub
xchg
icebp
cmp
lods
mov
xor
data16
sti
call
xchg
dec
mov
je
popf
leave
jle
sub
out
mov
lret
je
xor
out
fists
aad
aad
xor
sub
das
fnstenv
inc
dec
out
out
inc
and
lret
inc
cmp
test
daa
sbb
pushf
add
mov
ret
lcall
lods
fs
rcrl
jbe
xchg
je
pop
xchg
aam
out
mov
mov
mov
pop
xchg
lea
mov
and
dec
push
pop
sbb
lret
es
push
inc
test
mov
jns
push
fcomip
ret
sbb
mov
sarb
clc
out
fstl
addr16
sti
mov
call
push
je
sbb
js
and
enter
jb
icebp
mov
push
lcall
jecxz
fsubs
cmp
xor
stc
dec
jnp
and
jge
jg
mov
and
ret
or
mov
add
repz
push
push
leave
psubsb
add
repz
push
mov
lds
fisubrs
iret
sub
mov
cmp
and
mov
jbe
mov
mov
xor
sub
jmp
xlat
cwtl
fdivl
inc
icebp
cmp
xchg
dec
loop
adc
or
xchg
mov
dec
dec
pop
fsubrs
test
ficoms
bound
bound
push
dec
xor
sbb
jp
fildll
inc
cmp
jb
dec
or
aam
fnstcw
pop
inc
lret
pop
jne
jo
jbe
sub
xchg
scas
jmp
out
gs
xor
sahf
cmpsl
cmp
add
mov
mov
js
loope
push
mov
sarb
sahf
insl
repz
pop
cwtl
scas
xchg
push
or
sbb
clc
popl
add
push
aaa
lahf
in
jmp
icebp
arpl
clc
lods
ret
lahf
lcall
jmp
pop
sub
test
sti
dec
fisubrs
push
or
add
push
lret
pop
jg
fcomps
xchg
insl
mov
inc
arpl
dec
mov
loop
pop
and
dec
jp
in
mov
cmpsb
aas
mov
lods
out
push
out
gs
daa
pop
mov
mov
xadd
pop
dec
mov
push
ja
ret
mov
mov
ljmp
movsb
push
fwait
test
jnp
outsl
push
or
lcall
lock
rcr
dec
sti
fucomip
jo
xor
jmp
pop
pusha
add
mov
cmc
aam
into
jae
sub
sbb
jns
sbb
inc
repnz
xor
fsubrp
roll
push
test
int
fimull
cmc
ret
or
div
xchg
add
mov
int3
ja
sahf
pop
and
outsb
sub
inc
pop
cld
cmp
and
outsl
adc
sub
test
xchg
stc
int
call
jne
ret
mov
pop
mov
adcl
std
jp
dec
scas
dec
insb
cmp
jecxz
icebp
punpckhdq
jae
cmpb
into
scas
add
jne
or
test
mov
in
jno
mov
push
jmp
push
insl
or
sahf
push
mov
jp
mov
mov
int3
sbbb
inc
push
dec
push
pop
xor
out
and
lret
movsl
mov
mov
add
imulb
mov
add
or
inc
mov
and
jae
stos
mov
fwait
mov
dec
popa
cmp
add
lock
mov
repnz
int3
cmp
jl
leave
push
add
xor
cmpsl
nop
add
cltd
cs
xchg
les
jge
int
scas
insl
andl
push
mov
repnz
ret
and
jno
sbb
les
or
fsubs
jbe
mov
pop
mov
or
stos
daa
aas
loope
cmp
sbb
es
mov
push
mov
push
dec
enter
loop
aam
dec
popa
sub
pop
andb
jae
movb
dec
shl
cmp
imul
or
push
adc
arpl
cmc
jmp
inc
and
adc
sti
aad
mov
sbb
test
mov
jns
mov
or
jnp
inc
aam
pusha
jb
xchg
mov
and
xchg
int
xchg
xor
scas
imul
sub
mov
mov
mov
pop
jle
les
stc
mov
push
inc
cmp
shll
mov
leave
lahf
mov
popa
cltd
fwait
cmpsw
xlat
mov
aam
les
push
sbb
int
icebp
mov
cmp
test
ljmp
and
push
cli
jg
push
fyl2x
loope
jp
daa
jle
imul
enter
rcr
popf
mov
xorl
push
xor
scas
lea
imul
addr16
pop
lock
xor
or
adc
pop
pop
mov
xchg
xor
lock
sub
mov
jge
cld
jp
in
jle
mov
jecxz
sahf
fldcw
xchg
rorl
adc
shr
mov
dec
out
data16
les
push
xchg
mov
data16
insl
jns
jle
cwtl
mov
cltd
dec
jbe
pop
xor
fstps
mov
sub
repz
mov
xchg
lea
pop
mov
add
icebp
cwtl
adc
sub
addr16
and
sbb
pop
or
je
sahf
mov
and
push
and
test
pusha
outsb
cmp
mov
cld
mov
int3
stos
jns
lock
ds
cmpsb
out
and
push
xor
push
pop
jle
not
sahf
jns
inc
gs
xchg
push
cwtl
divl
push
loopne
xchg
xchg
mov
test
sbb
xchg
push
mov
aaa
ss
mov
faddp
inc
insb
mov
xchg
xchg
lea
fisubrs
and
movsb
into
jmp
adc
jge
pop
sbb
push
dec
jmp
mov
mov
out
stc
in
push
in
fsts
mov
mov
fwait
hlt
fisttpl
mov
imul
lahf
aad
out
andb
filds
mov
pusha
pop
pcmpgtd
add
popf
pop
mov
pop
dec
jnp
xlat
cmpsb
add
insb
sub
add
lahf
jbe
lret
dec
jl
mov
add
int
inc
dec
fwait
out
push
outsb
call
daa
jo
or
sbb
sbb
clc
int
scas
lods
adc
mov
xchg
jbe
cmpsb
aaa
sbb
ljmp
push
fidivrl
jae
dec
aad
adc
imul
bound
add
mov
and
cmpsb
mov
jge
pop
jg
ret
out
add
push
ja
lods
adc
rolb
hlt
xchg
push
ret
push
mov
mov
xchg
jno
scas
ljmp
xlat
fs
imul
sbb
push
and
jg
cld
ret
scas
mov
sbb
cli
add
jl
sbbl
xor
icebp
xor
xor
fcmove
add
stc
jae
and
adc
outsl
fisttpll
ficomps
xor
pop
pop
test
push
repz
popf
cltd
pusha
xchg
jbe
and
mov
hlt
pop
push
jne
rcr
stos
pop
movl
mov
sub
test
repz
dec
cli
insb
outsl
clc
inc
or
adc
cwtl
scas
xchg
andb
xchg
shlb
push
das
fnstcw
fmul
icebp
repnz
jl
jnp
mov
in
add
pop
dec
lret
jbe
mov
xchg
add
jecxz
iret
or
dec
pop
shrl
xlat
pop
out
adc
pop
xor
insb
pop
gs
cli
je
dec
call
cmpsb
push
ret
call
outsb
add
cmpsl
add
shl
pop
and
adc
lea
pop
lcall
out
mov
cmp
lret
fmulp
cltd
xor
incb
xor
mov
stos
js
jne
add
xorb
dec
pop
lods
fnstenv
incl
orl
and
in
mov
mov
in
or
ret
or
push
sbb
jne
xchg
out
push
clc
or
mov
fdivrs
incl
jp
iret
stos
cmpsl
push
cmp
jg
inc
call
mov
ret
or
jle
or
sub
xor
inc
clc
jbe
jo
jecxz
inc
jmp
test
les
pop
mov
dec
addr16
push
insl
adc
shll
mov
vmovntpd
sbb
out
xor
jmp
ja
cmp
arpl
cmp
movsb
xchg
mov
mov
push
inc
dec
push
push
int
push
into
add
and
fisttpl
mov
mov
scas
enter
xor
out
cmp
rorl
sub
fs
xchg
loopne
stc
popa
cwtl
aam
pop
test
adcl
cli
jle
sbb
sar
out
xor
dec
mov
stos
push
cmp
jae
or
cmpsl
mov
ficoms
sbb
adc
xchg
cmp
lock
pop
and
mov
mov
les
ss
mov
cmp
imul
imul
iret
jbe
jecxz
sti
fstp
test
add
push
lods
jl
mov
mov
xchg
int
sub
mov
repz
xchg
xchg
push
mov
jno
pop
push
dec
cmc
push
sbb
sbb
push
addr16
fists
cltd
outsb
pop
aaa
jmp
push
push
mov
mov
mov
jmp
ds
dec
push
lret
into
ret
mov
adc
call
xchg
and
and
xor
mov
imul
fnstsw
push
sbb
add
cmp
lcall
cmp
scas
pop
aas
mov
mov
adc
mov
sbb
ret
rcrb
sub
sbb
pushf
test
adc
sbb
loop
outsl
sar
push
cmc
fs
xor
pop
xchg
xor
aas
imulb
or
ret
xchg
idivl
xor
mov
scas
mov
loope
fisttpl
scas
in
rcrb
rorl
dec
xchg
cmp
in
in
lret
inc
bound
in
lea
xacquire
sti
mov
lcall
add
xor
fdivrl
shlb
dec
into
ljmp
lcall
imul
xchg
xchg
fwait
add
rcrl
add
cmpsb
cmp
ljmp
insb
imul
es
jmp
jo
into
into
pop
shr
mov
in
int
adc
sub
js
loope
sbb
or
pop
dec
nop
and
sti
call
sub
test
hlt
sbb
inc
mov
jp
mov
ljmp
pop
jno
xchg
xchg
into
gs
add
sub
lahf
stc
enter
cmp
jno
lea
idivl
push
gs
mov
or
in
cmp
popf
fstpl
xchg
and
mov
jmp
inc
lcall
xchg
mov
pop
and
xchg
and
sbb
sti
jle
sbb
ds
insl
fwait
idivl
loope
jns
and
stos
add
sub
dec
jo
mov
scas
or
arpl
or
push
mov
es
out
movsb
rorl
jmp
pop
ljmp
dec
xchg
nop
adc
jae
inc
in
push
repnz
inc
add
popa
inc
sbb
sbb
mov
xchg
adc
sbb
pusha
dec
bound
mov
inc
jnp
push
dec
lods
aam
mov
clc
ss
fistl
rep
push
xchg
xchg
iret
or
lea
inc
pop
pop
aam
dec
imul
push
push
lds
imul
ret
or
add
inc
insb
xchg
jne
sbb
fisubrs
adc
and
add
mov
popa
and
cs
jle
insl
test
xchg
ret
push
daa
fs
mov
or
dec
fdivp
stos
xor
insl
ss
cli
cmc
popf
pushf
mov
pop
aaa
dec
mov
iret
cmp
adc
or
pop
jmp
in
lds
cld
outsb
dec
mov
in
pop
jb
jmp
cltd
sbb
xlat
outsl
push
cli
std
lcall
cmp
and
dec
sti
lret
mov
jb
scas
lock
mov
das
lcall
call
dec
les
push
testb
or
cs
lods
sbb
jns
pop
aad
fnsetpm(287
pop
xchg
out
js
inc
sbb
push
jo
and
repz
xchg
mov
dec
mov
xchg
adcl
mov
inc
cs
sbb
mov
iret
test
testb
sub
xchg
adcl
dec
inc
into
sbb
add
cmp
mov
sbb
fists
loope
mov
es
iret
mov
scas
cmp
sub
mov
clc
cmp
and
sbb
sub
in
into
ret
aad
stos
pop
jg
stos
js
inc
lahf
sub
xchg
pop
mov
push
dec
pop
ret
lret
sbb
pop
and
xor
inc
jns
int3
jo
js
pop
rolb
cwtl
daa
and
js
mov
movsb
fldcw
mov
fldl
out
or
incl
adc
andl
push
divl
loope
or
push
push
loop
ja
rclb
cmpsl
stc
xor
lcall
ret
jecxz
aas
nop
pop
lds
clc
loopne
and
aam
pop
stos
bound
cmpb
and
sbb
daa
jno
cmp
mov
mov
into
jmp
and
fsin
add
cltd
adc
jo
jo
sub
mov
popa
je
or
lcall
cmp
hlt
jae
mov
fistl
jne
inc
es
fsubr
mov
push
imul
jge
popf
dec
sbb
lret
scas
in
and
jle
lret
jl
out
jb,pt
dec
dec
fucompp
jbe
push
sbb
pushf
addr16
shll
or
stos
add
idivl
hlt
adc
xchg
daa
add
sub
cwtl
std
aad
rcll
adc
pushf
mov
mov
cmp
test
mov
inc
jb
arpl
lcall
call
mov
jecxz
and
sbb
or
test
inc
and
fists
sub
inc
in
rcrl
mov
fwait
and
aaa
sub
mov
add
popa
xchg
in
jo
jo
sbb
or
repz
push
loop
mov
xlat
or
fs
fldl
jae
or
jno
push
imul
adc
mov
jnp
push
jl
dec
call
adc
xor
push
xchg
sahf
repnz
cwtl
xchg
out
fcomi
out
mov
int3
imul
cmp
out
ret
cmp
mov
xchg
mov
pop
sti
cmp
pop
test
into
mov
call
xchg
inc
sbb
adc
pop
out
repnz
test
and
and
sub
xor
sub
scas
cmp
sub
xchg
sahf
mov
pop
into
orb
int
jmp
out
push
mov
imul
xchg
cmp
fcompl
lea
push
rorb
lock
cmc
roll
loop
out
test
adc
shrb
xor
cmp
movsl
or
cmp
fists
popf
lret
mov
mov
subb
adc
loop
subb
repnz
add
bound
bound
pop
cmpb
stos
xchg
loop
and
test
jbe
jmp
outsl
mov
testl
push
xchg
popf
cmpsl
jmp
add
fistpll
cs
lahf
mov
jbe
ffreep
pusha
pushf
leave
jmp
imul
lock
sbb
and
icebp
test
xor
dec
inc
xchg
push
sbb
inc
aaa
ret
test
fidivrs
inc
dec
call
jb
mov
daa
mov
jno
fmuls
mov
mov
loop
cmp
loope
mov
inc
pusha
cmpl
pop
xor
jge
es
pusha
lods
dec
std
sbb
push
sub
mov
fstpl
pop
add
pop
xchg
jnp
mov
mov
outsl
jbe
pop
or
xorl
sub
mov
add
pusha
lcall
mov
inc
dec
loop
cmp
cmp
cs
popf
jno
insl
pop
push
cltd
dec
rcr
lods
cmp
stos
xchg
rcll
in
ja
or
dec
fs
xchg
out
pop
sahf
iret
repnz
lea
mov
mov
add
push
mov
lahf
cli
push
ljmp
sbb
and
dec
mov
je
call
xchg
xor
aam
test
cmpsb
pop
mov
xlat
mov
adc
insb
cwtl
sub
xchg
mov
mov
dec
scas
cmp
xor
pop
jmp
ret
jae
dec
pop
mov
push
inc
jb
int3
jp
std
pushf
sbb
je
sarl
pushf
jb
into
hlt
jle
out
pop
pop
xor
dec
sub
dec
add
das
repnz
shlb
shlb
mov
add
mov
push
std
and
in
sbb
push
xor
inc
int
dec
loopne
sti
jb
aad
sbb
mov
std
xchg
adcb
and
mov
push
inc
pop
stc
into
and
in
ja
mov
push
jl
popf
fnsave
push
mov
lods
and
aad
push
iret
test
sbb
cld
in
jae
inc
sub
std
cmpsl
mov
decb
movsb
out
xlat
clc
out
xor
repnz
testl
outsl
movups
repnz
pop
in
jno
or
lret
mov
shll
or
stos
and
jge
icebp
push
cwtl
movsb
mov
lods
push
scas
xlat
xor
pushf
in
stos
xchg
mov
push
int
inc
stos
shlb
dec
in
add
inc
sbb
push
mov
dec
or
jp
inc
push
repz
fmull
pop
mov
in
lea
mov
or
pop
jae
mov
mov
aaa
inc
andb
sbb
out
sarb
das
mov
sarl
dec
leave
inc
movsb
jae
push
mov
sbb
sub
push
jl
in
push
xchg
adc
ficoms
and
xor
cmc
xorb
inc
dec
or
stc
sbb
cmp
mov
inc
imul
or
xor
pop
mov
xor
xor
loop
and
je
xor
das
pop
les
adc
sarl
cmp
jno
sbb
mov
mov
lods
jl
cmpsl
pop
in
clc
loop
sub
push
xor
pop
pop
in
lods
mov
call
aam
mov
inc
dec
cmc
mov
xchg
cmp
or
cmp
pop
cmp
add
nop
jb
and
pusha
fstpt
rorl
aad
lea
mov
cmp
call
popf
push
nop
adc
xor
insb
loope
sub
add
and
sub
xlat
out
sbb
mov
jle
xor
orl
xor
aaa
stos
fwait
add
test
pop
inc
and
outsb
cmp
mov
inc
sbb
xchg
jmp
adc
stos
imul
dec
popa
in
inc
xlat
mov
pop
ljmp
sub
xorl
add
ret
mov
jecxz
pop
xchg
mov
out
leave
cmp
loopne
loop
fstps
pop
sbb
adc
mov
lds
and
pop
xchg
sbb
inc
nop
or
add
clc
xor
jne
cli
lods
shld
leave
lods
rcrb
data16
notb
ror
shrl
inc
pop
loop
mov
add
outsl
fdivrl
mov
or
shlb
jmp
ja
dec
cmc
or
cmp
xor
add
mov
lahf
dec
ss
in
adc
add
fwait
ret
push
in
inc
clc
mov
add
dec
sub
js
pop
jne
fisubrs
rolb
mov
jns
pop
sub
pushf
enter
cmp
cmp
rorb
outsl
stos
lock
sub
sti
lods
inc
lret
ret
pop
testb
pop
les
inc
pop
stc
iret
sarb
test
or
je
mov
cwtl
out
sbb
xchg
push
push
fsubl
in
xchg
fsincos
add
inc
xor
mov
or
jecxz
into
test
sbb
push
enter
cwtl
add
or
fwait
into
sbb
dec
mov
cltd
add
inc
arpl
test
add
roll
iret
sbb
push
mov
jno
cmp
mov
jnp
fistl
jp
add
pop
pop
add
sbb
add
and
loopne
mov
xor
xchg
cmc
test
adc
sub
jg
imul
sbb
or
cltd
sub
mov
cmc
cs
js
leave
jnp
std
sub
ret
jecxz
fnstenv
cmpsl
gs
mov
sarb
or
xor
lret
in
test
fwait
add
neg
leave
mov
scas
lds
sub
es
sub
cltd
sarb
or
insb
scas
lcall
pushf
push
xor
jns
insl
scas
iret
dec
cli
pop
jnp
mov
addr16
pop
mov
adc
jmp
xchg
cli
fstpt
add
mov
push
and
jle
xor
adcl
sbb
push
inc
inc
sub
fcom
das
fimuls
stos
xor
test
pop
rclb
cmp
mov
dec
test
les
sti
jbe
insl
jo
sub
mov
out
pop
xchg
ret
fdivl
rorb
sub
mov
popa
sti
imulb
aas
mov
push
pop
xchg
fstps
pop
and
sbb
sbbb
lods
ja
xchg
cmp
imul
pushf
cmpsl
int3
inc
mov
fistl
sbbb
sub
dec
sub
push
daa
lea
or
dec
mov
int
fldl
scas
jo
imul
add
mov
bound
add
cmp
jle
dec
xor
pushf
dec
movsl
bound
mov
rclb
cmp
mov
cmpsl
mov
pop
xchg
xchg
repz
mov
sub
push
scas
gs
repz
int3
nop
cmp
std
mov
fisttpl
outsl
aas
and
adc
sub
jbe
sub
lods
or
repnz
push
js
dec
in
cmp
lock
push
xor
push
pop
jl
mov
sbb
mov
lods
mov
jmp
imul
cli
lods
mov
xor
adc
jge
sbb
mov
push
add
push
inc
and
aas
scas
inc
or
mov
shll
repz
pop
outsb
or
inc
add
xor
jns
jae
xchg
roll
mov
into
xchg
fimull
pop
iret
fsubl
mov
out
test
inc
jbe
in
push
dec
sahf
cmp
loope
nop
aas
xchg
and
push
sahf
mov
cmp
push
repz
adc
pop
mov
dec
aaa
mov
push
or
adc
jb
cmp
push
mov
cmp
inc
sub
mov
repz
stc
ret
or
fcmovne
clc
mov
out
dec
push
cmp
adc
add
stc
cmp
push
push
mov
leave
faddl
sbb
or
loope
xor
les
mov
cmp
icebp
pop
push
mov
pop
or
sar
stc
jg
btl
das
outsb
imul
inc
enter
js
sahf
jo
mov
popa
mov
fstpt
sbb
jns
jp
pop
fs
pop
sbb
add
inc
lcall
mov
jmp
outsl
mov
mov
pop
jno
nop
in
or
inc
xchg
cmp
cmp
sub
ret
cmp
cmp
ss
mov
shrb
ds
ds
and
test
sub
mov
bound
adc
cmp
mov
fistps
pop
add
sbb
pop
jg
push
pop
jge
or
inc
mov
ss
andb
push
ss
inc
loop
cmpsb
sub
push
out
mov
jle
lock
out
insl
mov
or
mov
stos
out
push
or
and
mov
inc
lock
clc
outsl
addr16
jge
lcall
not
or
xor
test
mov
mov
add
push
ficoms
and
loop
sahf
test
mov
imul
and
ljmp
dec
mov
movb
mov
addl
cltd
sub
movsl
sub
lcall
jae
cli
xchg
out
mov
jo
iret
lcall
lods
clc
mov
push
int3
lods
aam
movsb
add
femms
fwait
cltd
push
insl
mov
mov
mov
mov
sub
fdivrs
and
int3
jo
inc
sub
adc
cmpsl
arpl
xchg
rcrb
mov
cmc
jle
or
shrl
mov
rolb
lea
jmp
xchg
in
popa
xchg
icebp
mov
fdivrl
ljmp
into
pushf
cmpsb
jp
mulb
out
int
and
and
sbb
xchg
rcrb
dec
dec
mov
pop
push
aad
adcl
js
cltd
lret
sti
adc
or
insl
les
add
pop
mov
xor
cmp
cmpsl
push
mov
scas
push
xor
cld
or
inc
dec
cmpb
stos
lahf
std
inc
mov
notl
test
xchg
sbb
pop
and
inc
pop
cmc
push
jae
push
popa
mov
cmp
pop
sub
fadds
jb
mov
mov
mov
aam
mov
in
aam
mov
cli
js
mov
adc
icebp
sbb
and
cmp
cmc
lods
pusha
xor
insl
or
inc
cmp
lods
adc
dec
dec
aaa
xchg
insl
xor
aaa
cmpsb
mov
fwait
inc
cmp
xchg
xchg
fidivrl
loopne
les
xchg
mov
lea
into
leave
push
pop
and
pop
data16
push
insl
jnp
add
les
xor
lods
jno
sbb
out
mov
int3
in
int
lahf
shll
dec
lods
cmp
call
xchg
dec
js
insl
jmp
arpl
mov
ljmp
ret
and
cmp
xchg
icebp
jb
push
xor
movsb
insb
popf
or
mov
aaa
movsb
int
mov
pop
push
arpl
add
arpl
lret
lahf
loopne
jb
mov
jle
xor
xchg
jl
loope
neg
and
call
add
sub
aad
shr
push
pushf
sub
add
mov
inc
fisubl
ss
shrb
sub
and
lahf
ret
shl
or
pop
cmp
popa
insb
rolb
and
pop
movsb
mov
rorb
filds
sub
loope
inc
push
pop
lods
arpl
dec
sbb
mov
out
addr16
icebp
sbb
shlb
pop
xchg
mov
shrl
sub
lret
cs
aaa
pop
stos
mov
fstl
clc
aam
mov
fmull
int3
out
mov
out
xor
insb
jmp
pop
add
sub
cmc
xchg
xor
paddd
ret
repz
xor
sbb
jb
mov
lahf
int
or
push
lret
and
push
enter
data16
int
inc
pop
inc
addr16
mov
sub
ror
dec
xchg
pop
lret
pop
icebp
test
int3
adc
hlt
loop
je
outsl
aam
mov
lret
cld
dec
mov
call
mov
sub
jp
in
pop
add
das
dec
shll
mov
or
and
xlat
movsb
mov
sbb
or
adc
mov
add
adc
imul
imul
inc
push
jbe
cli
lods
inc
xchg
in
dec
fsubl
xor
pusha
pop
dec
push
mov
in
aad
dec
push
cmp
inc
addr16
mov
jmp
outsl
or
adc
jae
fistl
cli
jo
aas
js
sub
rclb
sbb
mov
fsubs
xor
dec
mov
lahf
push
lods
xchg
ds
cmp
sti
and
pop
cmp
fadds
call
lret
cmp
inc
jge
es
xchg
ret
insw
das
inc
insb
leave
sub
jg
arpl
jge
xchg
outsb
repnz
dec
or
and
push
hlt
mov
cmp
mov
cmp
enter
fs
out
cmp
push
gs
pop
lds
outsb
sahf
mov
push
jp
ss
push
ret
cmpsl
pop
insl
jle
sub
loopne
dec
xor
mov
add
mov
inc
xchg
pop
outsb
xchg
dec
fwait
icebp
mov
out
add
mov
mov
jge
notb
imul
pop
push
outsl
adc
fs
xchg
test
push
outsl
xor
add
inc
and
cmc
shrl
jl
aad
clc
mov
das
lret
pop
stos
xor
outsl
pop
lds
push
cmp
mov
cmp
push
add
mov
or
push
sub
mov
or
mov
or
sbb
pusha
add
in
sub
dec
jmp
nop
mov
mov
mov
jle
sbb
subl
xchg
xchg
out
orb
or
mov
mov
push
inc
adc
out
mov
pusha
cmp
data16
ljmp
mov
xchg
mov
mov
pop
mov
out
pushf
idiv
mov
in
mov
test
mov
fwait
mov
sub
mov
dec
pop
in
movsl
sub
popa
mov
dec
inc
pop
inc
insb
jl
outsb
jg
cmp
cmpsl
jmp
cmc
mov
mov
lret
and
add
stos
enter
inc
jg
push
scas
mov
dec
push
lahf
rcll
and
jb
mov
fsub
outsb
jge
pop
mov
lahf
pop
jae
jnp
subb
mov
pushf
cwtl
lcall
dec
imul
pop
jg
mov
xchg
add
icebp
push
ret
fadds
loope
sbb
push
fidivl
fldcw
jge
les
push
dec
pop
pop
push
xor
lods
push
cmp
xchg
add
or
ret
je
xor
shl
lds
or
jmp
out
lret
jecxz
jno
ss
or
adc
inc
jns
gs
pusha
or
aas
cmp
fldenv
and
or
insl
inc
xor
jns
cmp
shrl
fisttps
int3
ret
and
scas
ss
addr16
fistpl
sbbl
aas
mov
xchg
mov
xchg
pop
jno
lcall
jle
aad
inc
mov
sarl
add
xchg
jne
mov
mov
dec
xchg
or
into
cmp
mulb
add
dec
jg
enter
pop
sbb
mov
xlat
sbb
rcll
fsubrl
cltd
stos
call
jp
fisttpll
mov
test
inc
sahf
inc
jmp
or
mov
call
xchg
shlb
pusha
cli
rcrb
lret
xor
rol
je
cmp
push
xor
mov
and
ss
scas
sti
pop
inc
fdivs
mov
and
outsb
arpl
mov
and
fcomi
sbb
mov
stos
mov
xor
hlt
sahf
imul
add
js
je
rcrb
push
adc
in
cs
rcr
std
paddsw
pop
int
mov
dec
sbb
test
or
pushf
test
lock
pop
adc
xlat
insb
pop
hlt
clc
movsb
dec
dec
dec
in
arpl
inc
pushf
mov
test
rcrl
por
jns
out
outsb
mov
mov
pop
xlat
in
icebp
lret
inc
lea
loopne
add
push
cwtl
rolb
scas
ljmp
pmullw
xor
push
xchg
cmp
mov
insl
ljmp
lcall
mov
inc
dec
mov
fmuls
mov
dec
addr16
jae
stos
or
daa
std
in
adc
ret
adc
lock
xchg
xor
and
xchg
push
nop
mov
sbbb
mov
mov
ja
lret
jnp
push
mov
lahf
loop
decl
add
cwtl
fistpl
mov
ljmp
inc
notl
xor
or
and
dec
push
lea
shrl
ljmp
lret
les
loop
inc
cld
mov
lahf
das
xchg
xchg
and
gs
xchg
icebp
pushf
sbb
mov
xor
ljmp
rorb
mov
xlat
call
pop
cli
cmp
sub
jp
loop
push
pushf
test
or
inc
push
sbb
mov
inc
fsts
inc
jno
lock
mov
and
dec
imul
fnstcw
adc
pop
sbb
xchg
flds
fdivp
inc
fmull
mov
outsb
cmpsl
add
fdivs
mov
pop
les
sahf
cmp
pop
sub
hlt
std
pop
jb
cmp
lds
cmp
add
push
fwait
cmp
divl
dec
push
jle
push
lds
add
inc
mov
sahf
cwtl
sti
addr16
xlat
fwait
aas
cmpsl
add
dec
hlt
add
scas
mov
jg
pop
sbb
xor
xchg
push
ret
and
mov
fmuls
pop
and
dec
scas
pop
xor
inc
xor
xor
pop
lcall
sub
jo
jle
fistpl
addr16
ror
jge
lods
push
mov
cmp
dec
or
mov
or
loopne
fsubs
mov
out
loop
cmp
aaa
adc
outsb
jmp
lds
xchg
sbbb
mov
outsb
ss
hlt
dec
int
stos
mov
les
imul
fistps
sarl
add
xor
nop
jp
shlb
and
sub
sub
and
sarl
adc
pop
ret
data16
inc
push
xchg
mov
adc
cmp
popl
xchg
cltd
aaa
ja
hlt
ljmp
popa
rolb
pushl
and
inc
aaa
popf
add
outsl
adc
rcl
dec
mov
ret
test
daa
xor
scas
pop
data16
add
bound
fwait
inc
pop
jecxz
inc
cs
jmp
cmp
imul
xchg
int
and
jp
pushf
divl
push
sub
mov
jnp
xor
and
idivb
push
xor
insb
mov
ds
pop
mov
xor
sbb
test
insl
scas
jle
pop
scas
scas
or
mov
pop
xchg
inc
and
cmp
jmp
xor
lods
sbb
popa
dec
aaa
cmp
mov
icebp
jl
arpl
aaa
lahf
lods
inc
in
lahf
mov
dec
mov
mov
andb
js
test
stos
push
loop
sbb
or
in
jno
pushf
aad
add
cmp
enter
sbb
dec
fwait
popa
aas
aaa
mov
fldl
mov
pop
enter
lea
push
bswap
loope
adcb
outsb
cmc
push
mov
lock
inc
decl
hlt
imul
std
in
daa
negb
mov
js
ss
adc
loope
movsb
pop
out
int3
decl
fdivs
push
scas
sub
popf
lods
lods
mov
daa
in
push
xor
lret
popa
fisttps
sbb
pop
inc
xchg
lea
fwait
jp
leave
cs
dec
pop
jnp
in
mov
xor
ss
dec
fnstenv
ret
add
insb
cmp
dec
call
mov
stos
repz
mov
je
and
je
ljmp
push
jmp
pop
cs
shl
mov
fnstcw
sub
sbb
outsb
mov
jle
xchg
xor
cmp
lahf
mov
pusha
fimull
mov
cmc
ja
cvtpi2ps
mov
mov
push
cmc
or
sub
mov
mov
and
jo
mov
iret
nop
cmp
push
add
inc
loope
fidivs
aas
or
daa
mov
ficomps
outsb
mov
lods
xor
sub
push
push
out
mov
inc
and
popf
stos
outsb
popa
popa
lock
mov
data16
pop
xor
inc
scas
xchg
stos
lods
fistpll
mov
pop
add
cmpsb
popf
aaa
popf
inc
xchg
test
jb
cmp
setge
pop
scas
out
pop
arpl
test
jno
inc
push
in
insb
ror
outsl
xchg
movsb
adc
ret
mov
imulb
xchg
add
xor
mov
outsb
ds
xchg
mov
test
cmp
and
loopne
jl
insb
outsl
mov
lods
inc
js
or
adc
adc
adc
add
mov
push
dec
jns
shll
or
outsl
add
in
lods
bound
mov
mov
outsb
jo
je
shrb
xor
rolb
arpl
adc
mov
push
jnp
inc
outsb
jmp
cmp
movsb
push
psubusw
cmp
xchg
js
cmp
inc
sti
push
dec
dec
push
xlat
mov
cmovae
sbb
pop
and
and
test
and
popa
stos
xchg
ja
or
shl
mov
jle
repz
call
fs
mov
dec
lret
mov
push
push
cmp
adc
cmp
add
aas
ss
jmp
out
xchg
and
lcall
or
pmullw
aas
scas
stc
sub
or
data16
fstps
data16
xlat
cld
pop
out
dec
iret
mov
sub
inc
jg
jbe
jnp
aam
cmpsb
cmp
sub
das
loop
add
mov
inc
dec
std
sbb
loop
and
push
push
adc
fisubs
daa
push
mov
out
mov
cld
jle
outsb
rclb
xor
mov
mov
or
sbb
sbb
mov
outsl
push
bound
in
jns
aaa
sti
cwtl
mov
aad
insb
mov
and
hlt
mov
dec
sub
popf
lret
mov
repz
sti
inc
inc
adc
imul
mov
inc
dec
dec
mov
mov
adc
mov
mov
pusha
ficoms
jp
adc
into
mov
sub
in
jl
test
out
jl
test
mov
les
arpl
dec
sbb
push
add
roll
or
or
mov
pop
add
nop
rcrl
std
jnp
pop
push
xchg
push
sbb
xchg
scas
repz
sbb
mov
int3
enter
dec
mov
pusha
mov
jmp
dec
leave
inc
mov
and
sti
popw
and
sbb
mov
xorb
push
jns
stos
and
test
lret
mov
bnd
sub
push
aam
mov
pop
ret
or
pop
jnp
dec
sarl
aad
mov
icebp
ja
xchg
fldt
icebp
pop
mov
xor
les
cli
pop
push
dec
mov
popa
flds
outsl
jnp
js
dec
dec
sbb
push
inc
sub
jmp
cmc
scas
fimuls
mov
in
fdivrs
cmp
loope
ja
cmc
xchg
imul
sbb
adc
rclb
mov
mov
incl
or
push
cmp
sahf
sarl
rol
or
mov
add
xchg
out
and
mov
imul
ret
and
mov
repz
mov
lahf
lea
cwtl
nop
add
jnp
jle
mov
push
mov
sbb
dec
movsb
push
incb
mov
xor
dec
mov
fsubrl
and
scas
mov
mov
cmpsb
inc
pushf
inc
into
int
movsl
mov
inc
jle
in
daa
rorb
lods
or
cmc
sbb
jne
in
jge
pushf
movsb
sbb
icebp
sub
mov
xor
jmp
sbb
inc
leave
add
add
cmc
iret
xchg
push
outsb
and
enter
push
sub
add
push
jb
pop
mov
add
and
mov
or
dec
inc
clc
imul
jmp
pop
mov
ret
sub
fsubrs
outsl
push
sti
je
cmp
aam
test
push
arpl
pop
stos
pop
outsl
cmp
std
mov
sti
jae
popf
fisttpll
sbb
add
jg
jnp
rcr
xchg
cwtl
test
mov
and
ja
movsl
insb
fmul
mov
xor
hlt
aad
in
jo
adc
in
je
adc
jle
movsl
in
adc
and
out
dec
loopne
and
jns
clc
sub
loopne
dec
aaa
roll
repnz
and
lods
mulb
jns
test
xchg
sbb
pop
test
out
jmp
mov
loop
xchg
push
or
out
dec
adc
loop
xchg
int
mov
and
push
ja
pop
add
jno
mov
mov
rcl
sub
sbb
xor
ljmp
pusha
pop
lds
out
sub
scas
arpl
insb
cs
sub
sub
test
negb
mov
mov
movsb
popa
shrb
stos
and
xchg
je
into
mov
mov
cli
and
daa
jge
mov
out
popa
xor
xor
mov
test
mov
das
adc
or
cs
daa
icebp
jne
fnstcw
test
cli
cmpsb
xor
aad
insl
sbb
push
xor
dec
int3
cwtl
inc
aas
in
repnz
adc
mov
ficomps
xor
add
js
and
out
jge
and
xor
jg
cmpsl
pop
rorl
daa
push
dec
rorb
jo
clc
add
xor
sbb
dec
xchg
inc
mov
inc
cltd
sarb
push
decb
arpl
lods
and
in
mov
imul
int3
stos
pop
insb
xchg
aas
loope
andb
pusha
out
daa
and
mov
adc
pop
test
push
and
mov
rolb
mov
push
cld
and
cmc
mov
fisttpl
lods
sub
jp
lods
popa
mov
fisttpl
notl
insb
push
test
imul
fisubs
les
push
test
or
pop
and
adc
pop
sbb
mov
sub
xor
outsb
cli
in
clc
cmc
sbb
int3
sbb
aad
daa
cmp
fisubrs
out
push
mov
cwtl
mov
leave
mov
sub
aam
ss
sbb
stos
inc
sub
lock
xlat
pop
sbb
xchg
jbe
pop
fldenv
pop
sti
xor
inc
cmpsl
test
and
or
sbb
adc
cmpsl
or
push
out
mov
popl
mov
jl
mov
iret
shll
mov
xchg
push
les
sub
lahf
negl
or
or
repz
movsb
hlt
or
xchg
jg
xchg
loope
cli
and
xchg
icebp
sahf
push
push
dec
inc
sub
arpl
pop
adc
divl
cmpsl
incl
sar
scas
fsubrs
lcall
loope
in
add
and
lcall
inc
mov
iret
lret
push
inc
mov
loop
and
jmp
popa
dec
sub
ret
cli
in
xor
jecxz
cmp
sub
cmp
enter
aad
push
push
push
aas
cmp
dec
out
mov
pop
insl
mov
pushf
fdivrs
jae
movsl
mov
pusha
mov
mov
shlb
dec
adc
loop
fsts
fucom
cmc
vrcpps
xchg
cmp
jle
pop
sahf
shlb
or
ss
aas
movsl
and
or
adc
rorl
mov
mov
sarb
mov
daa
bound
hlt
sti
rorl
test
or
cmp
test
sti
mov
push
int3
sub
mov
adc
shlb
std
pop
das
sub
enter
ret
sbb
cmpsb
jmp
dec
push
dec
stc
scas
cld
iret
lcall
fsubl
sub
test
dec
lcall
test
aad
sbb
stos
mov
adc
daa
outsb
sbb
xchg
pop
inc
pop
push
adc
push
xor
int
jne
jecxz
xor
fs
ret
incl
out
xchg
sub
pop
adc
xchg
aaa
popf
shlb
add
sbb
inc
aaa
dec
inc
rcrb
fistpll
mov
dec
add
adc
push
les
hlt
mov
pop
add
inc
es
adc
into
xchg
inc
movsl
scas
fistpll
xchg
adc
add
pop
test
imulb
les
popa
sbb
dec
or
xchg
mov
dec
push
sub
pop
pushf
pop
lret
pushf
dec
sub
push
and
outsb
mov
push
xchg
fs
xor
sahf
fwait
je
xchg
aaa
cmpsb
mov
cmp
push
adc
sub
xor
jecxz
lret
push
movsb
push
add
cltd
dec
or
bound
or
das
jbe
jecxz
sub
lods
pusha
push
int3
mov
sar
mov
adc
jecxz
call
testb
jno
aad
shll
hlt
scas
mov
and
xor
outsb
adc
sbb
jbe
mov
dec
pop
addl
repnz
and
movb
pusha
repnz
inc
out
push
pop
loope
cmp
dec
pop
mov
mov
call
xor
test
inc
mov
cmp
xchg
mov
xlat
or
out
and
mov
jmp
push
xchg
xor
addr16
cmpl
js
sub
imul
or
movups
ljmp
sarb
movsl
inc
cli
pop
fsubrs
pop
int
call
jp
sub
mov
pop
jg
pop
ljmp
pop
cmp
nop
xor
je
inc
cmpsb
jae
pop
sbb
mov
push
adc
je
add
movsb
dec
mov
dec
movsl
pop
jecxz
dec
push
jo
or
lret
xorb
cmp
sahf
mov
push
sub
add
or
jb
or
fmul
aaa
icebp
mov
stos
paddw
mov
mov
inc
or
push
scas
pop
mov
and
insb
daa
pop
in
lea
popa
jmp
xchg
or
jbe
das
jbe
es
xchg
inc
mov
inc
outsb
mov
adc
in
pop
mov
lret
pushf
sub
ret
dec
push
push
ds
inc
scas
ror
mov
cwtl
jnp
iret
push
sbbb
add
dec
ficoms
dec
inc
pop
xor
mov
ror
pop
stc
mov
or
pop
mov
cmp
xchg
cmp
jmp
inc
mov
xor
ljmp
and
aam
call
popa
sbb
and
or
or
std
cwtl
sub
aas
cmp
sub
xchg
xchg
cli
sbb
mov
xor
xor
jp
dec
add
inc
loop
int
xor
pop
shlb
cltd
aam
xor
sbb
test
pop
aaa
sbb
jb
mov
mov
daa
cmp
add
cmp
enter
mov
mov
push
mov
sarb
xchg
and
pop
leave
and
js
das
out
subb
mov
ret
jno
test
jb
pop
jp
or
je
fcmovnu
jno
cltd
add
mov
movsb
jo
pop
into
shrl
cmp
cmc
test
movsb
dec
lret
stc
sbb
std
push
imul
into
mov
pushw
arpl
rorb
call
sub
cmpsb
jge
mov
pop
imul
roll
out
loop
lret
dec
insb
movsb
andb
pop
xchg
jns
or
fwait
xchg
push
push
cmp
pop
gs
jmp
js
jmp
stos
mov
enter
push
and
cmp
cmp
lahf
bound
xor
push
push
add
pop
jae
lcall
push
icebp
mov
mov
pop
adc
loope
xchg
rcll
sub
jp
adc
jne
out
rolb
cwtl
push
mov
pop
xchg
push
xor
std
push
push
icebp
subl
data16
jo
imul
mov
testl
push
mov
push
dec
mov
in
mov
ret
lock
adcb
push
lds
jmp
fsts
in
push
leave
stos
sub
or
sub
into
fmull
pusha
sbb
int3
mov
jp
dec
mov
punpcklbw
cli
je
inc
out
cmp
mov
or
mov
stos
push
add
and
mov
fs
and
jno
loop
scas
loope
out
jno
sub
ss
addl
pop
mov
push
mov
lods
xorl
and
adc
dec
xchg
loop
mov
mov
push
mov
mov
mov
mov
inc
sub
aad
iret
push
dec
xchg
iret
aas
add
mov
pop
fnstcw
test
cmpl
xor
jmp
pop
jne
icebp
cmpsb
test
xchg
mov
mov
sub
mov
jb
icebp
std
enter
push
sarb
insb
inc
and
jge
jbe
push
cmp
cwtl
mov
sub
mull
rclb
inc
sarb
inc
jb
lret
mov
mov
in
andl
enter
inc
push
les
add
jmp
jp
mov
mov
loop
push
mov
fnsave
mov
mov
inc
mov
gs
cmp
inc
dec
or
or
mov
and
push
fisttpl
and
pop
mov
or
popa
lret
rcr
mov
jno
inc
cli
mov
xor
repz
gs
pop
or
mov
lods
mov
ss
sbb
ret
insl
dec
xchg
lods
adc
and
lds
and
out
jno
mov
dec
js
xchg
loop
sbb
jg
loopne
sub
test
sti
addr16
sub
insb
push
xchg
mov
push
dec
mov
cmpsb
aam
ja
sbb
sbb
test
mov
sub
lock
cs
push
fbld
and
pusha
in
mov
data16
adc
ret
add
jmp
add
jl
adc
iret
pop
lds
push
lods
dec
sbb
xchg
ljmp
imul
int
sub
imul
sbb
cmp
xchg
lds
mov
inc
mov
out
fwait
shrb
sbb
cld
jecxz
xlat
dec
jp
cltd
jae
sbb
mov
push
push
push
sti
rcrl
jp
frstor
jle
push
xor
fistpll
and
lock
push
mov
mov
gs
mov
inc
jl
shlb
adc
cmp
popf
xor
lock
mov
push
adc
int
or
mov
repz
pop
ret
cmp
and
jge
out
loop
dec
xchg
inc
nop
push
adc
shrb
push
add
lret
into
jb
movsl
insb
mov
mov
stos
mov
cmp
test
movsb
mov
out
outsb
aad
and
jle
or
push
xor
jnp
scas
push
adc
nop
adcb
adc
pop
sbb
movsb
rcll
cmc
test
xchg
les
arpl
sbb
call
pop
adc
ror
outsb
mov
mov
mov
xor
loope
cld
xor
pop
mov
jbe
push
das
out
fsubr
or
repnz
xchg
push
xor
mov
adc
je
jg
mov
adc
add
das
fsubl
pop
cwtl
push
mov
push
pushf
js
add
ret
adc
dec
push
mov
fwait
loope
push
test
inc
push
dec
mov
lock
push
pop
xchg
ds
dec
xchg
loope
and
sbb
xor
loopne
addr16
pop
out
xchg
rorb
sub
cltd
jg
aam
je
stos
mov
loopne
mov
mul
icebp
inc
sbb
push
cmp
cmc
fiaddl
sbb
dec
xor
jmp
mov
and
dec
lock
dec
xchg
fs
adc
and
cmp
xchg
lods
lret
sub
gs
loopne
iret
cmp
inc
shl
cmc
aad
aad
and
xor
pop
repz
and
enter
stos
adc
adc
dec
test
or
push
ret
cmp
pop
dec
sub
and
jle
or
mov
jecxz
jecxz
rolb
cmp
and
iret
sbb
push
xchg
and
dec
int
mov
xor
das
push
dec
jnp
jno
lods
push
mov
daa
and
faddl
xchg
punpckhwd
mov
push
and
cmpsb
push
incb
les
push
xchg
nop
test
mov
mov
data16
pop
jns
mov
xchg
pop
inc
push
sbb
lods
jg
pop
cmp
inc
imul
inc
lea
add
add
ud1
adc
movsb
shlb
loop
xchg
xchg
sub
sarl
ss
cli
sub
inc
lea
pop
mov
nopl
lret
dec
mov
jo
mov
cmpsl
inc
cmp
scas
call
pop
lea
dec
fs
sbbl
xchg
adcb
xorl
fisubrl
inc
jle
cmp
inc
sub
dec
dec
imul
mov
push
jp
fstps
enter
mov
mov
testl
in
faddl
outsb
dec
dec
into
inc
bound
jne
decb
mov
dec
xchg
mov
sbb
sbb
lock
in
inc
out
lock
add
test
repz
stc
hlt
jae
mov
mov
inc
and
xor
xchg
test
inc
add
sub
ret
or
in
cmp
rcl
push
ljmp
shll
xor
ss
sub
fstpl
jp
repz
sub
dec
mov
mulb
adc
or
sub
test
call
add
loop
pop
push
add
fldl
into
jp
xchg
mov
cmp
ljmp
push
pop
adc
in
push
icebp
xchg
xor
ss
repz
imul
xchg
dec
int3
and
lret
outsl
inc
insb
lods
enter
aad
mov
arpl
cmpl
clc
fldt
push
mov
inc
sbb
cmp
imul
adcl
leave
into
test
inc
mov
mov
aas
push
cmpb
push
jb
mov
mov
xor
testl
outsl
xchg
fsubs
stos
pop
push
lods
push
add
mov
bound
popa
lret
cmpsl
hlt
push
mov
mov
xchg
repz
in
imul
pop
shll
test
and
shrb
push
pop
push
mov
xchg
lock
sbb
gs
push
jle
std
pop
add
sarl
pushf
clc
movsl
pop
bound
stos
xchg
enter
sbb
mov
push
test
push
int3
add
wbinvd
mov
leave
pop
jo
mov
jg
and
dec
adc
popa
repnz
lcall
dec
cmp
pop
pop
push
add
push
adc
sub
lock
cmp
pop
pop
rcrl
xor
icebp
loopne
fs
adc
adcb
bound
dec
roll
xor
push
cs
sub
cli
mov
add
and
adc
in
or
mov
call
lods
fldl
scas
inc
rcll
repz
mov
pop
pop
dec
add
iret
and
dec
pop
adc
mov
jne
mull
sub
pop
mov
adc
std
cmpsl
clc
pop
mov
add
mov
pop
pop
movsl
lds
jnp
xchg
push
aam
shlb
sbb
gs
sarl
mov
das
fsubrs
mov
mov
jge
fsubrl
mov
pop
cmp
mov
sahf
dec
inc
adc
add
inc
adc
loope
arpl
xor
out
lcall
xchg
push
mov
int3
aaa
fcompl
or
jnp
or
inc
lcall
push
xchg
and
jne
inc
icebp
out
pop
add
decl
or
test
dec
insb
jns
dec
xor
lret
cmp
loop
pop
divl
dec
mov
je
fnsave
add
inc
push
and
mov
sarl
shll
xchg
and
cld
mov
push
and
fs
jp
dec
jmp
stc
pop
push
sub
sub
jno
mov
cltd
jmp
xchg
pop
ficoms
mov
sbbl
icebp
popa
sbb
orl
push
hlt
push
stc
xchg
cs
test
mov
rcrb
aam
mov
cmp
movsl
xor
movsl
jnp
fsubl
sbb
or
jb
sarl
gs
inc
and
je
aaa
cmp
es
sub
push
inc
pop
es
ss
dec
mov
leave
sbb
fsubrs
je
xor
aad
aaa
jge
sahf
popfw
lea
inc
cmpsl
loope
scas
mov
cwtl
pushl
test
ss
mov
icebp
movsl
enter
inc
cli
ljmp
pop
push
leave
test
lahf
sbb
fwait
loopne
lods
or
movsl
outsl
cmpsb
add
adc
inc
sbb
js
mov
jge
out
sub
test
mov
xchg
es
in
mov
adc
mov
icebp
andb
movsl
jecxz
outsb
fsubrp
push
inc
sub
adc
shrl
clc
imul
arpl
add
mov
adc
mov
fnstenv
dec
cwtl
push
jle
out
xchg
inc
cmp
stc
inc
sbb
ja
clc
pushf
or
lcall
lock
cmp
fwait
scas
test
sbb
xor
mov
ljmp
mov
dec
push
shlb
fistpl
cmpsb
adcb
das
hlt
imul
mov
sub
insl
inc
xchg
movb
outsb
and
fmuls
scas
lahf
outsl
and
push
push
outsb
sub
lcall
cwtl
mov
jmp
jmp
imul
mov
nop
push
inc
loopne
ljmp
and
sbb
cmc
ja
rol
dec
dec
mov
or
add
push
sbbl
sub
xor
mov
pop
and
ss
das
or
jne
int
and
addl
xor
fmuls
jecxz
int3
les
mov
pop
movsl
dec
test
repnz
lock
mov
mov
popa
and
mov
dec
dec
cmp
cmpl
dec
cmp
inc
sti
mov
les
and
test
jo
fs
and
mov
mov
xor
daa
lret
mov
mov
mov
fnstenv
lea
fistl
adc
and
leave
mov
loop
mov
or
popa
sub
out
cmp
mov
xchg
aad
dec
repnz
pop
andb
fsubr
xor
jb
rcrb
fwait
repz
not
xor
cwtl
fsubl
xchg
lahf
jno
into
lahf
ds
mov
sub
hlt
xchg
shlb
jae
pop
out
mov
loopne
ss
jbe
cmp
sbb
test
mov
jo
stc
jbe
dec
sti
add
sbb
stos
pop
popa
addr16
fildll
fsubr
fsubrl
out
adc
dec
dec
lock
sbb
fucomi
inc
inc
xor
xchg
push
sub
fdivr
test
es
xchg
mov
mov
mov
test
pop
jg
ds
mov
imul
gs
or
sbb
test
cmp
movsb
scas
ret
inc
jnp
data16
mov
mov
mov
imul
xchg
mov
insl
arpl
or
fildll
cmp
xorb
addr16
int3
add
pop
mov
fidivrl
push
xor
cltd
jnp
pop
cmp
or
leave
insb
or
jno
stos
dec
push
pushf
xchg
or
orb
push
rclb
aad
daa
test
cmc
jl
add
xor
lds
repnz
ret
cmp
mov
adc
or
call
dec
lds
push
add
lods
push
cli
std
insb
sbb
sbb
push
and
movl
mov
ds
push
fs
jle
ljmp
lods
push
pop
fstpt
or
pop
pop
mov
sbb
addr16
shl
je
xchg
or
mov
pop
out
dec
aad
mov
inc
shl
test
sbb
cs
lea
cli
mov
mov
imul
adc
adc
mov
stc
icebp
xchg
call
or
or
push
divl
add
cmp
xor
lahf
orb
cltd
fs
rorb
or
jg
push
xchg
pop
inc
ret
stos
outsl
pop
mov
out
cli
out
mov
faddl
cld
pop
mull
mov
mov
aad
sub
mov
mulb
int
das
sub
test
or
mov
dec
xchg
fdivr
subb
cmpb
ret
subl
and
dec
insb
cmpsb
ja
divb
jp
xor
dec
sti
pop
sarb
dec
movsl
or
and
pop
jbe
ror
jge
insb
lea
cld
movsb
stos
push
enter
insb
aaa
and
sbb
repnz
mov
outsb
rcl
stc
xchg
insb
sub
and
popa
mov
cs
dec
mov
jle
mov
xor
xchg
and
in
test
leave
loope
aad
loopne
push
in
sahf
sbb
insb
frstor
das
pop
out
add
sub
dec
adc
sbb
fdivrs
mul
jecxz
stos
cmc
mov
mov
clc
and
push
lahf
pop
fs
push
mov
jno
loop
nop
dec
mov
and
jbe
sub
push
and
orb
stos
mov
fsts
scas
imul
enter
les
cmp
aaa
and
jne
inc
mov
push
xor
add
mov
cmp
push
mov
pop
mov
ret
inc
and
fimuls
daa
lods
shl
imul
movsb
add
fldl
add
cli
divl
cmc
addb
lea
insb
aam
mov
sbb
jg
les
lcall
test
loop
pop
or
mov
xchg
stos
dec
loop
cmp
sti
js
xor
dec
jp
inc
mov
adc
mov
cwtl
or
aas
jecxz
mov
sbb
fdivs
adc
lret
xchg
xor
adcl
adc
xchg
pop
hlt
in
test
test
mov
pop
mov
sub
pusha
js
adc
adc
sbb
pop
push
dec
nop
loop
in
adc
add
sbb
and
xchg
mov
push
mov
add
mov
ss
ret
hlt
xchg
sub
mov
cmp
testb
and
fldt
test
mov
xor
sbb
xchg
xor
ficompl
jp
push
call
adcl
pop
mov
pop
push
gs
jge
lret
imul
push
inc
sahf
int3
push
sub
push
sarl
push
cmp
in
fsubrp
sbb
push
stc
cmp
cmp
push
mov
es
je
push
cmp
es
icebp
mov
stos
push
insl
fwait
push
popf
cld
divl
mov
imul
or
rcrl
inc
sub
test
shl
mov
mov
jns
cli
sub
adc
clc
sub
cmp
push
cltd
test
cmp
pop
test
mov
bound
sti
xor
fsubrs
sti
int
stos
popf
daa
jno
xchg
inc
sbb
orb
push
xor
loope
inc
and
subl
popa
fld
pusha
repnz
sub
pop
fwait
sub
xchg
insl
jecxz
mov
out
test
add
std
lock
cmpsl
je
jo
xchg
stos
cmp
test
shrb
andl
iret
jl
ljmp
xchg
lahf
push
pusha
xchg
ret
jno
inc
push
cs
cmp
test
push
cli
pop
out
fwait
sbb
arpl
outsb
cmovp
repz
mov
movsb
push
aaa
xor
dec
pop
mov
mov
sub
pushf
sub
stos
sti
xchg
sub
fstpt
xchg
cld
jo
gs
jle
and
movsl
mov
adc
mov
jp
xor
ret
xchg
pop
push
xchg
sub
repnz
or
inc
sub
inc
sbb
or
xchg
jae
jg
subb
sahf
or
push
in
sbb
push
and
xor
xchg
dec
mov
sub
adc
int
pop
push
xchg
ficoms
aaa
icebp
ljmp
cmp
pop
aaa
xchg
jmp
adcl
pop
inc
pop
in
lods
adc
cli
mov
cld
sti
mov
stos
cmp
mov
in
loop
inc
mov
and
mov
sarb
mov
fsts
test
jae
jnp
fdivrs
rorb
push
rcll
cmp
dec
loop
cmp
repnz
fdivrs
cwtl
gs
ljmp
test
jbe
movsl
push
hlt
dec
inc
lock
dec
lds
push
sbb
mov
sahf
lahf
dec
push
sub
fnstenv
sub
cmpl
mov
in
orb
dec
imul
mov
jbe
cmp
adc
add
push
hlt
lcall
or
mov
jne
or
push
outsl
jns
mov
addb
push
subl
sub
sarl
mov
cmp
xlat
imul
fwait
popa
bound
adc
lock
in
fstps
rorl
stos
xchg
pop
lret
mov
jl
and
push
das
dec
mov
clc
xor
xchg
sub
js
inc
sbb
xchg
cmp
fsubrl
shrb
mov
mov
push
pushl
adc
cmp
pop
sbb
hlt
popa
cmc
inc
movsl
xor
loope
sbb
lods
int
aaa
popf
inc
mov
dec
push
les
bound
push
in
imul
and
or
xor
dec
mov
mov
add
mov
test
xor
or
fsubrp
fwait
pop
add
or
cmp
pop
mov
adc
imul
push
add
popa
adc
cmpsl
lea
and
mov
sbb
add
sbbl
cld
xchg
jl
jmp
and
dec
dec
iret
ds
insl
sbbl
inc
sub
and
add
push
mov
clc
jns
xchg
int
jno
les
pop
jmp
gs
sti
cmp
mov
add
cli
jecxz
pop
dec
dec
in
or
or
adc
pop
fists
dec
inc
dec
pop
mulb
jg
mov
sub
and
pusha
xor
icebp
ljmp
out
dec
mov
rol
daa
mov
lods
dec
jno
loop
inc
sub
sbbl
jmp
fmul
sbb
iret
stc
jg
jo
mov
insl
pop
movsb
xchg
dec
stos
cmp
mov
mov
and
stos
cwtl
inc
repz
loopne
testl
mov
add
rcrb
xlat
je
lods
sbb
inc
xor
and
cmp
int
xchg
in
jno
jo
mov
imul
sbb
jle
repz
out
cvtps2pd
mov
ss
mov
movsb
push
lods
xchg
pop
push
in
sub
pop
loopne
cmp
ss
out
test
fwait
adc
in
pop
or
cltd
lret
into
sbb
fsubr
decl
int
mov
inc
lods
addb
in
stc
jmp
rcll
pop
add
cmp
mov
rcl
das
push
mov
mov
cld
lret
push
andl
dec
adc
push
or
jl
push
scas
test
pop
in
fwait
xchg
xchg
pop
loop
not
gs
shll
clc
jo
into
jmp
loope
and
push
insl
push
adc
xchg
stos
push
jb
enter
rorl
cmp
xchg
stos
out
and
in
in
mov
mov
adc
adc
in
dec
out
mov
and
jp
stos
fldl
pop
xor
scas
and
dec
ds
test
mov
cmpl
add
sub
lret
add
loope
inc
and
adc
xchg
push
jg
cli
sti
out
or
sbb
add
aam
jne
iret
icebp
xchg
scas
rol
movd
add
push
xor
push
push
loopne
mov
cmpsb
sub
enter
add
stos
shll
sbb
and
rcl
pop
xchg
xchg
cwtl
cld
mov
icebp
pop
ret
pop
push
inc
imul
jle
aaa
popf
pushf
dec
jae
aaa
out
xor
cmp
sbb
xor
xchg
push
fs
xor
data16
hlt
fs
push
std
pop
addr16
fldt
pop
inc
incl
add
dec
dec
lahf
push
fldl
callw
cmpsl
popf
pushf
push
cmpsl
mov
dec
in
enter
pop
mov
sbb
lds
pop
data16
jns
test
jmp
adc
jl
shrb
and
pop
cmc
insb
adc
out
and
in
jns
mov
sub
inc
insb
hlt
lea
sub
inc
pop
insl
inc
xor
notb
mov
xchg
lds
jbe
es
jo
pop
out
les
gs
mov
jp
mov
into
mov
pusha
cmpsb
fstl
add
ljmp
rclb
push
xor
sub
nop
or
repnz
pop
lea
or
add
dec
cmp
mov
pushf
js
cmc
cmp
adc
xor
sub
scas
mov
and
add
xor
loopne
mov
inc
js
imul
inc
mov
or
nop
mov
cmp
cmp
pusha
xor
or
or
jle
mov
addr16
pop
cmp
xchg
mov
mov
mov
filds
lods
mov
loopne
loop
lea
push
push
js
clc
mov
add
mov
push
pop
adc
inc
pop
xor
pusha
mov
lds
push
jg
mov
stc
cmc
sahf
cwtl
dec
jge
xlat
bound
loope
aas
pop
lods
push
add
adcb
jg
mov
fsub
and
pop
mov
popf
jmp
mov
cmp
sahf
sbb
pop
pop
gs
adc
xor
lods
cmp
adc
inc
mov
jge
int
lods
enter
jno
push
test
stos
stc
je
loop
arpl
xchg
and
mov
js
pop
sub
arpl
mov
icebp
add
std
loopne
jb
addr16
inc
mov
hlt
aaa
fnstsw
push
in
push
lock
enter
iret
mov
xchg
xchg
loopne
add
sub
fwait
xorl
loopne
dec
je
jo
add
adc
mov
sub
stos
outsb
mov
cltd
pop
jo
mov
rcl
cmpsl
pop
fcoms
pop
fisttpl
rcrb
adc
cltd
dec
inc
sbb
insl
inc
je
popa
ret
mov
add
inc
addr16
into
sub
stos
out
shlb
outsl
and
movsl
call
and
xchg
xchg
adc
pop
ljmp
adc
rcr
adc
fisttpl
dec
and
mov
sbb
clc
das
pop
lods
mov
lret
push
inc
xchg
mov
dec
pop
adc
gs
inc
fdivrs
pushl
fistps
mov
sub
in
in
fstpl
dec
in
scas
sbb
sbb
fstp
ret
mov
jo
lret
ljmp
andb
or
clc
cltd
xchg
mov
xchg
lcall
scas
out
lret
icebp
stos
rcr
fldl
adc
lcall
stc
lret
push
push
cmp
jno
mov
adc
jg
stos
dec
and
test
and
fwait
nop
cmp
js
lcall
cmpsl
mov
cmp
mov
jo
pop
insl
bound
iret
test
aas
inc
sbb
nop
int
mov
and
adc
and
out
movsl
ss
gs
push
cmp
xchg
push
xchg
or
repz
adc
mov
or
mov
lods
dec
mov
jp
sarb
add
imul
push
in
xchg
xor
test
outsl
stos
mov
shrb
or
lahf
cmp
lea
cmc
test
loopne
add
jmp
es
mov
sbb
cmp
pop
xor
cmp
inc
add
aaa
sarb
jecxz
lods
xor
pushf
mov
cwtl
jno
and
les
xor
inc
lea
mov
fisubl
fldenv
roll
je
cwtl
and
outsb
mov
hlt
jns
daa
aam
imul
sub
mov
xlat
cld
mov
push
ret
mov
mov
or
cmp
inc
mov
or
shrb
cmc
sub
adc
adc
dec
jl,pt
lret
adc
lds
aaa
int
in
xor
sub
pop
cmp
fs
sysexit
popf
sub
push
inc
lock
aad
push
mov
dec
mov
sti
sub
into
push
ja
xchg
cmp
xor
push
int
sub
pop
fisubl
push
dec
and
sbb
cwtl
in
mov
mov
rcrl
sbb
jl
fadds
mov
cmpsb
dec
fmull
popf
out
inc
adc
mov
sarl
and
in
dec
jle
scas
jae
mov
jle
and
xchg
mov
mov
dec
rolb
fidivl
adc
dec
icebp
dec
pop
pop
adc
popl
xchg
and
push
xor
pop
xchg
inc
les
mov
mov
mov
sbbl
sub
iret
xchg
inc
insb
jb
mov
sahf
xlat
sbb
adc
jmp
insb
loop
jl
rol
inc
sbb
shl
push
lds
xchg
adc
pop
vmread
rol
mov
dec
negb
shl
mov
xchg
pop
in
mov
stc
mov
push
dec
inc
xchg
js
xorb
mov
pop
cmpb
shlb
or
fnstsw
cs
cmpsb
aam
out
fsubrs
and
orl
push
lret
fdivp
mov
dec
push
fwait
add
mov
cmp
or
addr16
les
dec
adc
es
sub
jg
inc
cmpsb
lds
jns
icebp
jp
in
xchg
in
cmp
ret
ds
dec
xor
faddp
jo
cmp
rol
push
xlat
and
xor
and
lahf
xchg
or
push
sbb
lret
pop
mov
lret
pop
mov
push
cmp
jecxz
push
adc
aas
call
pop
pushf
or
dec
sbbb
and
and
insl
xor
pop
imul
xor
cli
call
arpl
adc
movb
push
jo
add
push
push
mov
out
dec
lds
xor
pop
imul
test
gs
push
bound
sub
out
enter
pause
pop
sbb
cmp
dec
sub
pop
or
sub
insl
lret
lock
mov
xlat
int
sub
int3
in
xchg
mov
xchg
fnstenv
adcb
fdivrs
lcall
sti
gs
enter
mov
mov
add
inc
push
xchg
mov
insl
mov
rcrb
aaa
scas
lds
clc
je
push
pop
and
add
popf
xor
mov
ficomps
sub
mov
fisubl
bound
shl
inc
pop
mov
orb
jnp
cmp
mov
aas
jae
mov
push
ljmp
dec
jnp
sbb
outsl
jp
and
jae
xchg
sbb
push
push
jbe
and
cmp
jge
loop
add
test
sahf
sbb
or
dec
leave
in
xor
rcrl
mov
xchg
mov
call
mov
jno
mov
xor
jns
dec
push
mov
pop
jb
adcl
fiaddl
int3
cmp
pop
lds
test
lcall
mov
xchg
cli
pop
mov
shl
jae
mov
sub
mov
push
stos
adc
or
int
ds
in
xorl
cmpsl
dec
aad
aam
loop
test
mov
sbb
or
scas
test
aas
int
bound
xor
xchg
sbb
mov
mov
pop
pop
mov
dec
and
rol
sbb
ljmp
dec
jg
call
sub
rorl
fnstenv
cli
cwtl
jns
loop
xor
xchg
sub
inc
sub
mov
xor
ficomps
lcall
pop
pop
xor
out
xor
cmc
loopne
dec
js
rcl
push
in
fs
das
dec
and
movsl
ds
mov
cs
fcmovne
mov
stos
adc
pop
pop
outsb
inc
pop
movsb
subl
lret
jmp
lds
mov
mov
adc
add
mov
dec
sub
or
push
repz
pushl
sbb
test
sqrtps
mov
sub
mov
add
adc
outsl
or
push
repz
mov
insb
push
arpl
pusha
outsl
mov
xor
and
aas
out
fsubr
lret
push
sbb
lcall
aaa
jno
fwait
jnp
enter
and
in
xlat
cmp
push
mov
cmp
fidivl
into
or
xor
sbb
jae
mov
xchg
push
add
addr16
pop
loop
das
int3
pop
aad
add
mov
mov
pop
mov
pop
imul
push
xchg
add
xor
mov
mov
cs
mov
fsubr
push
imulb
pop
popf
pop
cmp
jae
cmp
cmpsl
das
fucomip
into
sub
jp
stos
scas
test
mov
aaa
imul
xor
dec
mov
push
stos
pop
iret
jmp
xlat
js
out
enter
adc
addr16
ds
leave
repz
mov
push
scas
arpl
mov
lahf
mov
out
faddl
js
cs
lods
ss
mov
test
dec
push
mov
in
pop
fcoml
fsubl
xchg
push
adc
jae
add
das
jb
out
xor
mov
std
xor
push
xor
xchg
int
dec
xor
mov
and
stos
push
mov
subb
sub
add
out
ret
in
lahf
mov
mov
mov
cmp
dec
jns
aas
xor
es
jne
sbb
pushf
cmp
mov
pop
arpl
mov
and
sub
bound
dec
lock
daa
pop
mov
mov
add
jns
inc
in
arpl
sbb
dec
xor
mov
sub
and
lea
fbstp
or
mov
cmp
ficomps
pop
cmpsb
inc
add
jl
icebp
jo
enter
adc
int
inc
sarl
cmpsl
in
rclb
dec
xchg
mov
mov
fnstcw
in
jb
lret
cmp
mov
xchg
jecxz
push
fadd
mov
outsl
sahf
enter
add
enter
push
loope
aaa
stc
pusha
aaa
pop
punpcklbw
xchg
xor
aas
test
repnz
lcall
xor
jg
aas
mov
mov
idivl
cmc
test
ds
xor
push
jmp
leave
cmpsb
mov
cmp
lods
and
dec
mov
lret
popf
xor
inc
mov
push
lods
in
fabs
cld
sbb
pusha
pop
or
cmp
push
mov
lahf
jecxz
mov
pop
xorb
or
ror
ret
and
xor
add
xor
stos
adc
sub
sub
sbb
mov
subps
iret
pop
dec
xchg
je
and
jb
add
sbb
ds
stos
arpl
shll
test
addl
push
les
sub
rorb
int
adc
nop
arpl
mov
cli
cltd
repnz
sub
iret
jno
rcll
aaa
cmp
inc
jo
inc
out
insl
scas
or
das
sub
mov
insb
jg
add
sub
pop
movsl
sub
xor
jmp
add
in
mov
jb
hlt
push
lret
stos
and
cmp
jl
sarb
loopne
fimuls
inc
sbbb
push
jns
cmp
scas
inc
movntq
mov
cmc
sub
out
adc
ret
cmpsb
ret
aad
push
insb
repnz
jo
xchg
mov
lea
addr16
arpl
push
push
gs
or
xlat
mov
sbb
fsubrl
rol
mov
jbe
fisttpl
fs
push
and
clc
cmp
imul
push
and
mov
cmc
out
cmp
jne
ljmp
mov
push
pop
in
pop
test
jmp
rol
cmp
push
jecxz
xchg
cmpsb
adc
cmp
xor
lods
rcr
test
dec
cmp
jmp
in
pop
stos
fwait
idivl
ljmp
test
dec
aaa
in
pop
into
insl
lock
push
out
clc
leave
arpl
lret
cmp
adc
stos
dec
dec
mov
or
push
sub
sbb
mov
and
jno
ret
fiadds
xor
pusha
jmp
pop
pop
fsub
movsl
popf
jge,pt
lea
dec
or
sub
and
dec
cmp
fisttpl
mov
test
jno
pop
and
jp
pusha
or
cli
aaa
in
sub
inc
fmuls
mov
or
inc
test
repz
sub
nop
add
jno
jns
mov
nop
inc
mov
sbb
fstl
pop
sbb
adc
sahf
loope
inc
inc
in
pop
idivl
push
fs
dec
xor
cwtl
jae
test
dec
ljmp
jb
mov
push
int3
lret
ret
aad
add
gs
lea
cld
repnz
push
inc
shrl
sbb
push
mov
call
jns
jg
das
cld
bound
ror
push
pop
andb
cmp
sbb
adcl
ljmp
lock
test
pop
aad
jl
test
cli
cld
pop
sub
notl
xchg
push
add
xlat
fwait
push
push
enter
mov
out
mov
pop
shrb
imul
pop
jg
aam
shl
and
and
push
in
dec
xlat
and
movsb
mov
add
out
push
xchg
push
cld
lods
es
ret
movsb
sbb
and
cmpsb
ret
fstpt
into
cmp
jo
andl
movsb
adc
mov
gs
cmp
push
fwait
adc
dec
xchg
in
imul
lcall
cld
outsb
mov
inc
jmp
cwtl
push
jo
push
adc
cltd
add
sub
or
sar
sub
xchg
cmp
pop
js
jg
dec
call
pop
les
sub
jbe
pop
mov
das
xor
mov
faddl
sbb
clc
mov
xchg
pop
add
xchg
and
test
mov
inc
out
pusha
or
sub
sbb
mov
jo
addr16
roll
dec
xchg
imul
rorb
sub
fstpt
mov
outsb
add
imull
popa
sbbl
lods
je
jb
push
dec
push
add
adc
dec
es
ffreep
fildll
xchg
sbb
repnz
lahf
sub
mov
sarb
out
lcall
or
testl
mov
mov
dec
push
les
wbinvd
push
pop
xor
sub
lret
inc
mov
stc
addr16
adc
dec
jge
xchg
xchg
fbld
pop
jb
xchg
xlat
dec
jmp
dec
lcall
pop
jge
in
daa
jo
xor
or
insl
xchg
jp
sti
filds
push
movsb
mov
ss
ljmp
add
and
pop
das
in
stos
stos
mov
shrb
inc
mov
jae
mov
push
mov
popa
or
mov
pop
jge
arpl
xchg
push
loopne
sub
mov
add
loop
add
outsb
adc
xchg
mov
sti
outsb
mov
fldl
sub
inc
daa
das
push
jecxz
inc
iret
xor
inc
je
sub
lahf
cmp
mov
in
imul
xchg
mov
dec
push
outsb
das
mov
jnp
je
shrb
insw
enter
imul
jo
jo
out
pop
xor
lahf
popf
in
mov
sub
pop
out
jae
inc
jb
outsb
scas
int
push
and
mov
push
ja
daa
mov
cmp
or
iret
pop
mov
pop
cmpl
jnp
dec
repz
int
mov
leave
dec
test
or
scas
push
xor
movzbl
pop
mov
rol
jl
xlat
hlt
mov
jmp
push
dec
or
fldcw
outsl
jb
clc
inc
push
shr
out
xor
mov
push
xor
push
pop
add
push
fstpt
adcb
cmp
cwtl
cmpsl
and
int3
imul
jb
mov
mov
cltd
gs
fsubrs
push
loopne
xchg
into
jp
sbb
lods
enter
cmp
dec
mov
popa
push
push
lea
in
mov
sbbl
add
mov
mov
das
xchg
sub
sbb
push
mov
mov
push
scas
cmc
rolb
imul
lret
inc
xchg
lods
jb
push
mulb
or
jmp
ss
mov
mov
pop
dec
andl
lea
push
dec
dec
imul
sub
xor
mov
leave
int3
pop
loopne
inc
mov
repz
outsb
aaa
mov
lcall
cmp
pop
icebp
inc
cmp
add
push
xor
clc
aad
fsubrl
dec
hlt
mov
or
adc
fimull
mov
shrl
cmp
adc
lea
pop
mov
daa
in
adc
push
xor
fxch
cmc
push
sub
add
adc
or
sub
pop
lret
icebp
sub
jb
xchg
iret
jo,pn
xchg
push
cli
notb
adc
lret
movsb
xchg
pop
push
jp
sbb
ss
dec
mov
cs
cli
ficompl
scas
xlat
enter
je
adc
mov
and
dec
sbb
jb
test
jecxz
repz
cmp
and
cli
dec
in
push
aad
dec
popf
subl
dec
lcall
and
test
stc
dec
inc
lea
xor
shlb
sbb
rcr
adc
mov
clc
sti
mov
fsubl
mov
dec
cltd
lods
cmpsl
mov
push
out
add
mov
jle
sar
and
mov
pop
sbb
xchg
frstor
add
sahf
inc
out
mov
pop
ja
fcoml
movsl
loopne
ljmp
pop
int3
movsl
pop
ficoml
shl
xchg
xchg
gs
cmp
fs
out
sbb
inc
mov
push
clc
add
outsl
mov
faddp
das
push
sahf
push
lods
mov
daa
pop
xorl
stos
jne
mov
repnz
dec
cmp
cwtl
fisttpl
test
lret
sub
imul
call
inc
pusha
stos
jmp
sbb
lock
out
mov
movsl
fmulp
jl
movsb
lcall
cmp
mov
cltd
aas
sbb
push
mov
inc
repnz
or
pop
sbbb
out
or
jecxz
xchg
in
in
es
push
das
xchg
and
das
lds
inc
leave
mov
and
mov
inc
mov
lret
in
outsb
ret
adc
loopne
leave
cmpsb
fisttpl
scas
in
mov
mov
in
jne
mov
andb
mov
jle
jmp
push
daa
or
inc
sub
mov
sub
dec
gs
jecxz
add
cmp
ljmp
lret
cmp
addb
push
subl
cmp
lret
jns
testl
es
or
imul
outsl
mov
inc
add
push
nop
pop
and
push
lcall
inc
repz
sahf
out
pop
ja
mov
test
push
push
rcrb
pusha
pop
or
jae
xchg
stos
dec
fwait
out
xor
lods
jmp
into
sub
fsubrl
sbb
mov
jno
lret
mov
std
mov
jae
ret
push
jnp
push
cmpsl
jns
push
mov
xor
mov
sti
push
cli
mov
adc
mov
xchg
adc
mov
sahf
lods
pusha
repnz
jle
inc
xchg
fcompl
je
test
adc
pusha
or
cmp
les
jecxz
add
insl
xor
sbb
push
stos
sub
loope
push
jecxz
clc
inc
mov
call
lcall
push
lahf
mov
insb
ja
mov
test
and
arpl
call
xor
popf
or
jmp
cmp
mov
mov
subb
out
cmp
mov
fnsave
cmp
nop
jnp
cmp
insb
std
std
out
push
sub
or
dec
push
sub
adc
dec
and
mov
sub
movsl
into
xor
js
andb
das
push
repnz
jle
cltd
xchg
or
push
pop
in
out
or
es
dec
test
mov
es
dec
scas
mov
adc
jecxz
sarl
inc
dec
push
mov
lcall
cmp
add
xchg
cli
dec
cmc
and
and
inc
lods
imul
pushf
repz
jg
xchg
pinsrw
ret
pop
das
sub
cmpl
stos
ret
adc
dec
lahf
stc
arpl
xchg
fmul
loopne
dec
sub
inc
test
push
sub
mov
test
inc
sub
jecxz
inc
mov
inc
enter
addr16
xchg
add
cmp
push
pop
imul
fldl
sti
cld
mov
enter
insb
xor
push
add
int
adc
and
movsl
mov
cmp
pop
ja
pop
pop
cli
insl
jge
push
adc
jl
clc
jmp
mov
outsl
dec
movsb
in
fwait
je
push
loopne
aam
inc
pop
es
ret
or
inc
lret
repz
cld
cmpsl
pop
ret
cs
int
test
fcomip
dec
pop
mov
sbb
mov
cwtl
xchg
loop
test
fbstp
sahf
in
mov
aaa
pop
enter
xchg
iret
int3
mov
shrl
sbb
in
mov
fiadds
cmc
pop
and
outsl
xchg
adc
push
mov
incl
push
mov
popa
sahf
dec
push
negb
ss
cwtl
popf
out
mov
in
xchg
ss
icebp
ja
jl
sbb
cltd
call
test
data16
inc
mov
jo
rcrb
xchg
in
lret
dec
lret
mov
std
xchg
push
lahf
dec
xor
sbb
push
mov
or
jle
xchg
pop
aas
std
insl
dec
or
jo,pn
jg
sub
dec
sub
push
cmc
movq
inc
jge
mov
and
cltd
call
cmpsb
xor
inc
dec
cwtl
and
pop
sbb
stc
dec
or
nop
jnp
xor
dec
pop
mov
mov
test
leave
xchg
sbb
sub
scas
sub
lds
rclb
sbb
cli
dec
inc
or
xor
test
and
or
cmp
mov
mov
sub
sub
test
xlat
xchg
repnz
mov
dec
test
adc
test
push
pusha
sbb
popf
popl
push
pop
shr
mov
mov
jmp
scas
mov
insw
sbb
add
mov
fwait
rclb
fld
test
mov
ds
out
sub
pop
mov
dec
fsubrs
xchg
inc
or
and
xchg
in
pop
scas
mov
xlat
or
xlat
out
or
push
ds
add
jne
add
jmp
icebp
mov
ret
clc
dec
fwait
and
js
sub
xor
push
hlt
stos
pushf
jg
inc
push
shlb
jle
mov
push
lcall
lock
mov
repnz
fs
push
jmp
xchg
fdivl
faddp
xchg
loope
push
xor
mov
cld
cli
ret
cmp
pusha
dec
repz
out
xor
ret
mov
and
fsubr
mov
push
repz
inc
sub
push
leave
adc
fidivs
test
sbb
lea
hlt
mov
adc
les
ror
and
bound
jns
fwait
sbb
add
push
lods
dec
jns
into
mov
into
addr16
mov
fidivrs
mov
add
mov
pop
mov
or
mov
sub
lahf
mov
sahf
or
inc
inc
pop
imul
shlb
or
addr16
test
stc
dec
jecxz
cmp
sbb
xchg
sbb
jg
cmpsb
rcll
add
jnp
jb
or
imul
mov
inc
add
aaa
push
jmp
adc
cwtl
or
pop
pop
and
xchg
les
iret
xchg
lods
enter
popa
pop
xor
cmp
push
or
jns
push
ds
shlb
sub
aad
jge
xor
adc
shll
lea
fdivr
in
sub
and
push
xchg
cmp
sbb
mov
mov
add
dec
icebp
pop
or
in
fimull
outsb
insl
adc
mov
test
and
scas
out
push
pop
sbb
adc
popf
es
xchg
mov
jns
mov
leave
rep
mov
adc
popa
or
mov
dec
clc
push
arpl
into
clc
sbbb
test
mov
sub
jg
mov
pop
push
insl
sub
push
idivb
repz
loopne
mov
sti
push
ret
dec
push
insb
mov
add
popf
adc
xor
in
add
jae
aaa
std
hlt
ds
mov
adc
sarb
mov
mov
ds
lock
les
sub
add
orb
shrb
add
inc
push
sti
xor
pop
js
mov
test
xlat
sub
mov
and
subl
stos
or
pop
xlat
jno
jg
xor
mov
in
xor
dec
hlt
sub
clc
enter
dec
shrb
in
cmpsb
js
sbb
in
xchg
or
bound
out
in
movsb
fsubr
xchg
fsubrl
nop
fldcw
nop
lods
hlt
jp
mov
pusha
pop
adc
je
add
or
loope
sub
dec
pop
mov
jne
mov
sub
jb
xor
inc
int3
mov
scas
adc
adc
repnz
popa
jg
jl
mov
sub
push
sbb
aaa
lret
mov
ss
sbb
lods
in
adc
jmp
test
gs
int
xchg
sbb
pop
push
lods
push
out
or
loopne
ljmp
enter
addb
and
xchg
dec
js
fwait
js
cmp
add
xlat
daa
dec
mov
push
mov
add
mov
fisubrs
in
dec
bound
ljmp
loopne
out
jle
or
sub
mov
inc
xor
ja
push
mov
push
in
sbb
sahf
orl
imul
mov
fstps
push
xor
and
inc
add
dec
lahf
data16
cmp
dec
xchg
loopne
and
xor
out
popa
enter
sub
xor
sbb
out
push
pop
sarb
insl
sahf
sahf
jbe
mov
xor
in
add
mov
aad
pop
or
lea
scas
lock
shll
add
scas
roll
loopne
into
push
mov
push
mov
fsubl
ret
int
test
mov
int
out
fistpl
iret
xchg
lods
cs
dec
mov
xchg
inc
xor
inc
adc
or
mov
sti
cmpsb
sub
in
hlt
jl
daa
sub
add
insb
mov
and
je
adc
jnp
mov
xchg
add
sub
imulb
out
outsb
jne
sti
xchg
and
pop
push
xlat
jle
jecxz
xchg
rcrl
testb
pusha
arpl
div
push
sub
or
aam
push
push
pop
sub
push
or
inc
les
repnz
push
or
cld
fwait
push
dec
cwtl
cmp
das
push
jno
push
fildll
cmp
popl
mov
pusha
mov
inc
dec
icebp
movsl
sub
xchg
mov
or
xchg
cmp
gs
out
inc
and
or
add
mov
add
and
or
es
inc
mov
lahf
sub
push
lods
scas
fldl2e
jnp
popw
or
pop
test
rorl
imul
push
or
or
jae
nop
mov
dec
jnp
sub
cmpsb
pop
xchg
cmp
movsl
addr16
rcll
imul
cmp
xchg
mov
test
push
cvtps2pi
dec
sbb
hlt
xchg
lods
div
js
rorl
lret
xchg
mov
in
sbb
imulb
data16
imul
adc
fnstenv
and
mov
lea
pop
jle
jbe
popa
popf
cmc
hlt
add
mov
mov
push
dec
mov
dec
cmp
inc
jae
inc
stc
adc
orb
add
aad
mov
jp
icebp
xor
sub
fidivrs
push
sbb
in
mov
jnp
movsb
dec
mov
lock
mov
clc
push
sbbb
ljmp
imul
test
stc
sbb
sub
sub
fiaddl
cmpsl
mov
and
lahf
stos
loopne
loop
into
dec
and
fisubrs
and
into
mov
jmp
les
test
push
ret
rcl
ret
xor
mov
mov
or
mov
push
and
popa
iret
pushl
aas
push
cmpsl
pop
mov
ljmp
cmc
xchg
push
and
sbb
jnp
jno
mov
cmp
xlat
minps
aad
xchg
push
mov
mov
sti
cmpsl
add
lds
dec
cltd
jnp
addr16
cmp
mov
mov
nop
pop
mov
shll
cmpsl
movsl
mov
mov
mov
outsl
dec
dec
xor
sbb
adc
sbb
jae
popa
aas
or
loopne
ret
pop
cmc
test
lret
lahf
pop
fldl
add
lods
test
add
jmp
clc
push
add
daa
int3
inc
mov
add
mov
aaa
mov
or
sub
std
dec
sbb
push
xchg
add
out
dec
pop
lcall
inc
into
aam
lret
mov
mov
inc
add
lret
sahf
shll
gs
jo
push
fldl
shl
mov
mov
xlat
and
pop
jo
insb
sti
jle
ret
push
mov
jnp
jo
addr16
adc
rolb
mov
mov
fnstsw
das
cmp
cmp
mov
scas
xchg
repnz
or
push
or
leave
inc
lret
ds
push
pop
push
xchg
xor
repz
add
jae
jbe
repnz
out
mov
adc
lret
jmp
or
sub
in
push
pop
xor
jge
call
pop
sbb
ja
fsubrs
rol
into
mov
xor
shlb
pop
adc
cmp
in
flds
inc
mov
push
fiadds
aad
cli
or
jge
insl
outsl
dec
inc
test
movsl
je
push
and
push
mov
test
mov
jecxz
and
pusha
sbb
mov
mov
inc
sarl
mov
pushf
inc
rorb
negl
pushf
out
jbe
and
fdiv
js
sub
and
pop
pop
insb
sbb
mov
sbb
jnp
insl
add
xchg
test
inc
fistl
pop
and
sub
sub
sbb
fnstenv
or
xchg
fwait
sub
rorl
int3
xor
mov
inc
repnz
mov
adc
and
lods
push
roll
jb
push
cmp
jae
incb
sti
or
push
in
imul
lock
or
imul
scas
fldenv
rcl
or
test
jmp
push
je
inc
mov
sbb
jnp
xchg
jmp
test
sub
cwtl
add
int
sbb
push
jbe
pop
mov
cli
cld
dec
sbb
cmp
ror
jns
int
or
pop
pop
jnp
dec
fsubl
icebp
icebp
and
xor
popa
push
push
std
mov
sarb
shlb
push
ret
xchg
arpl
cmpsl
xchg
add
lcall
repz
sub
aam
dec
addl
mov
je
lock
les
mov
in
fldenv
sub
fs
iret
pmaxub
adc
in
enter
stc
adc
push
movsl
xor
pop
or
pop
mov
repz
into
popl
pop
push
imul
mov
adc
sub
cmc
das
ja
xor
ljmp
ret
xchg
mov
lcall
call
adc
mov
or
mov
or
push
hlt
hlt
lock
dec
or
pushl
into
cmp
stc
or
bound
mov
sub
int
cs
sarl
lods
fsubrs
push
cmc
pop
add
fnstenv
js
pop
in
mov
scas
data16
jmp
imul
jb
rcrb
mov
fcomps
dec
add
adc
sbbb
pop
sub
add
add
sahf
loopne
mov
xor
pop
sbb
outsl
leave
clc
mov
scas
std
jmp
jo
xor
pop
sbb
fldl
mov
xchg
mov
mov
leave
dec
pushf
inc
adc
push
adc
aas
incl
mov
sbb
fdivrs
xlat
and
jne,pt
pop
inc
outsl
out
aas
std
mov
stos
sahf
mov
mov
stos
lret
cmp
call
sub
cmc
out
outsl
int
fs
push
sbb
pop
es
movl
sbb
enter
enter
xlat
dec
jns
mov
cmpsl
sub
dec
mov
sub
push
push
ret
sub
cld
mov
lods
xchg
inc
repz
and
add
addr16
mov
shr
cmp
mov
ja
fcmove
add
std
int
pop
pushf
xchg
roll
cmpsl
into
lock
cld
fnsave
mov
jns
rcl
orb
dec
mov
push
xchg
fldenv
fimuls
push
adc
mov
inc
or
cmpsl
sbb
fucom
fildl
movsl
adc
data16
sub
loopne
out
scas
adc
or
movsb
ss
outsl
lock
dec
in
ret
add
adcl
or
jbe
inc
fucomi
in
sub
or
inc
push
inc
shrl
in
lea
ja
adc
out
cmp
fsub
ret
lcall
pop
shrl
imul
call
sub
lock
dec
push
cmpsl
inc
lods
imul
insb
add
cmp
shrl
and
mov
or
lods
loope
push
int3
lret
loop
pushw
std
lods
enter
insl
push
daa
mov
mov
mov
xchg
lock
ja
cwtl
jbe
mov
add
mov
and
mov
jo
rorl
jo,pt
pop
xchg
stc
cmpl
test
dec
inc
cmp
into
sub
nop
sub
in
scas
int3
mov
es
mov
add
jae
repz
push
and
popf
sub
lret
int3
push
enter
xor
sub
jne
enter
sbb
addr16
aas
inc
xor
push
test
in
ret
lods
nop
xor
cwtl
mov
add
sbb
pop
xchg
jo
dec
push
add
jmp
jecxz
ffreep
outsb
cld
pop
xchg
fistpl
sti
outsl
jp
dec
cmc
sbb
out
test
mov
imul
pop
mov
popf
inc
fwait
pusha
sbb
adc
out
loop
xlat
or
mov
pop
popa
add
insb
mov
add
push
xor
sbb
not
cmp
scas
mov
xchg
cmp
cmp
shll
cld
push
cs
pop
aaa
rorb
cs
pop
add
lcall
sbb
cmp
jg
or
imul
out
fisubl
call
call
cmpsl
mov
mov
pop
sahf
inc
enter
jne
add
pop
adc
xor
mov
ror
test
inc
pop
cld
add
lret
clc
xor
or
sub
mov
adc
aas
sbb
xchg
subb
repz
or
dec
sub
jl
pop
add
cli
pop
pop
xchg
test
les
scas
test
mov
sub
pop
pop
push
ss
shll
pop
ds
adc
ret
push
out
pop
lock
arpl
je
out
dec
jge
ss
push
mov
adc
push
inc
lcall
sbb
pop
pop
daa
cmpsl
mov
sub
lods
test
mov
cmp
adc
or
ljmp
mov
inc
and
mov
pop
jae
inc
fistpl
mov
cwtl
mov
sub
dec
jb
mov
xor
push
xchg
je
fnstsw
test
xor
mov
sbb
inc
jle
enter
leave
lcall
int
loope
sbb
cmp
xchg
stos
test
fcompl
and
cmp
ret
xchg
xchg
sub
fimull
sti
mov
adc
add
mov
mov
movsb
mov
sub
mov
or
imul
sub
mov
dec
pop
pop
push
lcall
sbbl
jne
mov
sahf
xor
mov
jecxz
cmp
jb
dec
std
outsb
rorb
mov
dec
in
pop
inc
ljmp
out
mov
add
inc
insb
lods
bound
out
jl
xlat
or
push
mov
orb
aad
sbb
jae
jno
cmp
xchg
arpl
loop
test
lods
ret
rcll
add
ja
aam
arpl
stc
push
jo
push
imul
mov
jne
dec
jns
pop
push
ror
dec
cmp
aaa
jg
loop
test
bound
cltd
into
inc
bound
insl
in
les
xchg
repnz
mov
mov
mov
and
push
int3
dec
push
sarl
movsl
add
iret
aaa
imul
ss
test
negl
sub
jecxz
lea
xchg
sbb
jb
push
sub
or
mov
mov
xchg
cld
push
sub
sbb
js
shr
cmpsl
cmpsl
mov
cmp
dec
jne
outsl
mov
adc
sahf
mov
inc
nop
arpl
arpl
sub
movsl
and
or
jmp
or
scas
mov
ljmp
mov
test
shlb
dec
sbb
loopne
xchg
xor
fcmovu
cmp
or
sbb
cld
outsl
mov
int3
mov
pop
outsl
movsl
jo
std
cmp
mov
pusha
dec
inc
cmp
into
fwait
movsl
sub
aaa
jo
popf
jecxz
cmp
pop
push
into
test
sub
sbbb
decb
jo
jne
enter
mov
adc
aad
mov
push
mov
cmp
mov
jl
lahf
adc
out
imul
xor
ret
into
push
cmp
mov
rol
int
leave
lods
xchg
push
fs
mov
dec
rcpps
cmp
or
mov
sub
jmp
sub
iret
sbb
cmp
pushf
in
inc
test
jge
inc
and
and
jne
scas
das
push
sbb
test
in
pause
js
dec
xor
int3
dec
add
cmp
mov
aam
loope
iret
fmuls
ljmp
sub
test
dec
jge
mov
add
add
mov
sub
jno
mov
jmp
jb
pop
and
pop
fs
pop
std
sbb
inc
dec
xchg
iret
fidivl
jle
pop
jecxz
loopne
sub
add
jmp
ds
lods
and
push
push
popa
or
pop
add
ljmp
xchg
cmp
jns
sti
cld
or
fdecstp
inc
in
rcrl
xor
pop
das
inc
lods
and
pop
dec
and
jns
sub
mov
daa
mov
mov
sbb
jmp
cmpb
xchg
sub
dec
loopne
repz
cli
jl
and
cmpb
xor
int
adc
insb
push
xchg
and
xor
scas
lret
xchg
and
mov
xlat
push
mov
xchg
xchg
adc
testl
into
pop
lret
inc
add
orb
xorl
sbb
pop
shll
mov
stc
xor
jbe
daa
fidivrs
dec
push
rcrb
cmp
sub
mov
mov
push
outsl
pop
xchg
arpl
sub
xchg
cmp
ja
add
cmp
or
dec
jns
in
push
jns
and
cs
jmp
movsb
dec
push
es
fs
dec
cmp
loopne
mov
pop
jno
add
gs
nop
fistl
fdivs
jg
xor
xor
ret
rolb
pop
pop
and
loope
push
pop
pop
sbb
gs
sbb
in
push
push
mov
xchg
cltd
mov
adc
shlb
loope
or
adc
sti
xlat
pop
aas
test
in
pop
pop
mov
fs
add
clc
scas
std
cwtl
scas
mull
xor
pop
std
mov
and
aad
xchg
mov
test
mov
aas
pushf
adc
daa
sti
xchg
call
sub
mov
pop
nop
and
and
dec
pop
adc
sbb
jmp
adc
gs
mov
rorb
orl
push
popa
gs
mov
lock
mov
popf
lahf
mov
jns
cmpsb
aaa
into
inc
jnp
das
adc
mov
or
movsb
lods
lock
xor
push
and
out
popf
rclb
sbb
sub
or
or
jmp
sbb
pop
fincstp
test
cmc
test
fmuls
cld
loop
fisubl
mov
mov
sbb
bound
lret
mov
jle
out
repnz
mov
sbb
out
fwait
not
stos
dec
push
cmp
mov
jp
cmp
leave
xlat
add
movsl
push
mov
into
imul
ljmp
lods
push
push
fwait
pop
sbb
xor
std
adc
pop
or
dec
xor
call
dec
jp
cmp
push
cmp
push
lock
mov
jle
test
rclb
sub
mov
add
adc
fdivp
pop
mov
sbb
sbbl
orl
pop
mov
and
sub
out
jp
pop
cmp
xchg
lock
scas
shrl
pop
and
iret
mov
and
inc
push
sti
adc
mov
out
stos
mov
enter
or
sbb
xchg
scas
add
into
out
mov
imul
xor
sbb
cmc
mov
pop
imul
dec
test
dec
xchg
add
out
loopne
cmpsl
mov
xor
adc
cmp
daa
nop
jl
push
or
sahf
push
cld
iret
movaps
mov
xchg
ret
test
cmc
repnz
fsub
repz
out
adc
cmp
push
dec
or
enter
out
jmp
dec
push
out
into
jmp
mov
mov
or
xor
in
hlt
inc
scas
mov
stc
adc
das
pushf
lcall
mov
sbb
dec
pusha
jp
adc
daa
inc
jle
mov
pushf
cld
sti
ret
xchg
mov
jnp
adc
inc
mov
mov
imul
add
mov
lock
add
xchg
jne
jbe
dec
adc
jns
mov
mov
aas
push
jne
lods
lods
outsb
insb
add
in
in
sbb
inc
mov
shlb
xchg
jle
cltd
lcall
dec
inc
push
pop
gs
pop
or
and
cld
mov
loop
cmpl
jo
xor
push
and
addr16
lret
xchg
push
jmp
jns
xor
test
or
adc
shlb
test
rolb
lds
fdivrs
inc
sub
icebp
ja
lahf
mov
cmpb
and
hlt
xchg
lods
push
fs
aad
mov
mov
adc
xor
imul
fildl
subb
in
sbb
scas
cmp
or
add
cmp
imul
lret
or
dec
scas
lds
adc
mov
mov
adc
mov
mov
jge
push
lods
sbb
data16
mov
xchg
test
rcrl
cmp
jno
and
pop
jle
fidivl
insl
xchg
shlb
je
std
sbb
test
jmp
int3
sbb
pop
cmpsl
lods
sbb
aad
ret
cs
insb
adc
scas
fcoml
cli
lcall
mov
pop
mulb
loopne
pusha
xchg
jo
dec
outsb
arpl
add
xor
dec
and
mov
dec
mov
outsb
mov
xor
mov
in
and
mov
fs
lret
mov
push
scas
mov
lock
jns
push
mov
dec
cmpl
dec
sahf
fsubrp
pop
jle
dec
lds
inc
xor
sbb
testl
jb
mov
sbb
cltd
adc
cmpsl
clc
loope
fstpt
dec
jo
push
jne
sti
adc
sub
inc
imul
popf
scas
int
jns
sub
outsl
cmp
and
out
push
xchg
repz
mov
fcoml
enter
aad
dec
xchg
pop
std
inc
fidivrs
addr16
xchg
xchg
in
add
es
andl
dec
popf
sub
adc
loopne
or
loopne
sbb
mov
inc
fnstenv
daa
inc
xor
mov
cmp
addb
lahf
cmc
int3
add
pop
or
stc
push
scas
imul
inc
pop
in
inc
dec
popaw
jl
xchg
mov
xor
sub
pushf
addl
aam
out
cltd
out
decl
stos
fs
add
out
and
add
mov
and
add
test
mov
movsl
das
lock
xor
mov
fadds
fdivp
mov
push
ret
adc
or
jmp
push
mov
jl
sbb
lret
test
ss
inc
rcr
push
sbb
cld
int
or
aas
test
mov
mov
out
in
lods
mov
xchg
pop
rcl
dec
cmp
mov
je
lcall
mov
aaa
dec
sahf
lea
sbb
jge
ljmp
int3
cwtl
ds
ss
dec
ret
dec
aad
lods
ret
sbb
or
jle
push
cmp
insl
clc
in
pop
outsl
adc
decl
enter
out
mov
aaa
xchg
mov
cmpsb
idivl
in
test
nop
sbb
fcompl
into
cmp
test
xchg
hlt
mov
and
xchg
ss
in
dec
movsb
out
push
imul
movl
jg
in
out
xchg
inc
pop
loopne
int
jnp
fistps
xchg
mov
clc
cmp
jno
movsl
pop
mov
mov
xor
arpl
outsl
fldt
mov
pop
aas
jmp
adc
popa
fs
inc
pop
lods
dec
sbb
in
dec
lret
rcll
pop
jns
jno
sbb
sub
ljmp
xchg
dec
cmp
aam
icebp
mov
jg
mov
scas
nop
adc
mov
movsb
enter
test
jecxz
fsubs
lods
ja
in
cmp
dec
and
insl
push
and
cmp
ficompl
xor
push
sub
xor
add
adc
push
inc
fistl
inc
pop
in
gs
clc
repz
cltd
dec
aaa
lods
pop
add
sbbb
dec
arpl
sub
mov
inc
cli
ficomps
push
push
test
inc
mov
jae
pop
rclb
dec
mov
inc
add
insl
add
mov
jecxz
cmc
sub
dec
ljmp
pop
jno
fisubrs
movsb
push
addr16
mov
sarl
xchg
dec
in
mov
test
mov
lds
int3
mov
jns
ja
ljmp
add
and
testb
push
sub
movsb
sub
aaa
jae
sub
push
dec
rclb
cmp
or
lds
or
adc
cmp
push
jno
mov
in
dec
ss
push
fsub
xchg
jno
mov
sbb
call
mov
cli
xchg
adc
cmp
jmp
shll
sbb
int
push
jecxz
lret
jno
xchg
dec
and
out
jg
pop
mov
sahf
fmulp
loope
mov
aam
movhps
dec
xor
inc
pop
xchg
hlt
enter
and
adc
lods
in
out
mov
notb
ficomps
int3
cltd
jb
pusha
lods
gs
std
dec
and
push
mulb
lret
mov
cltd
cmp
leave
push
hlt
xchg
and
and
inc
adc
and
ja
mov
xchg
jne
mov
pop
loope
mov
loopne
xchg
jns
jns
test
cmp
adc
dec
jne
mov
in
out
push
xchg
out
into
repnz
mov
movsl
xor
add
into
pop
push
mov
xchg
sbb
aas
push
repz
adcb
dec
adc
pop
jns
sbb
test
mov
cmc
fs
push
nop
dec
mov
jle
inc
sub
arpl
adc
xchg
frstor
push
jno
sti
inc
push
fldt
xchg
das
and
cld
sbb
jb
lret
or
mov
clc
stos
add
cltd
fbld
dec
add
pop
push
inc
out
pusha
and
pop
fs
mov
movsl
xor
cmc
xor
sbb
adc
test
popf
stos
xor
movsb
cmp
jne
jecxz
cwtl
test
es
test
sbb
jns
sbb
dec
gs
out
cmp
or
add
dec
cmc
addr16
cmp
inc
testl
into
ja
out
push
aad
push
sti
cmc
push
loop
fscale
jns
add
insb
jae
iret
imul
lods
or
dec
dec
xorl
xor
fsts
jmp
mov
xorb
jns
push
shl
pop
xchg
and
and
in
jb
add
fsubs
daa
pop
sbb
mov
adcb
pushw
lcall
icebp
jb
enter
mov
inc
nop
jp
sbb
jge
mov
and
cld
repz
ds
mov
test
sub
jecxz
jo
int
mov
rorl
loopne
mov
shlb
sbb
sub
lods
xchg
push
lods
sub
imul
push
test
lcall
je
inc
mov
test
mov
push
jmp
aam
mov
lea
or
dec
mov
adc
jae
ss
push
pop
mov
cmc
xchg
dec
rorl
xchg
movsb
push
mov
subb
sub
push
imul
cmp
or
xor
clc
or
les
cmpsb
jge
movl
data16
ja
or
mov
mov
push
push
jge
mov
push
xor
cwtl
jne
add
sub
pusha
mov
nop
ljmp
inc
jle
test
inc
loope
and
jecxz
hlt
in
mov
pushf
imul
and
scas
insl
adc
inc
daa
xor
mov
pop
in
xchg
fldenv
sbb
push
dec
ja
push
fidivrl
shrl
test
into
enter
lods
xchg
push
aam
cli
mov
sub
inc
and
mov
lret
cs
xchg
push
mov
dec
push
inc
repz
loop
test
mov
jmp
sub
dec
pop
test
dec
fbstp
popf
insl
mov
jecxz
daa
inc
sub
pop
mov
stc
xchg
loopne
mov
push
es
pop
and
in
lret
push
rorb
sub
int
js
cwtl
inc
pop
lock
inc
decb
inc
pushf
and
xorl
in
pushf
mov
je
shrb
sub
mov
das
mov
fdivr
in
dec
jl
cmp
rclb
sahf
jl
pushf
push
pop
insb
mov
icebp
lret
jle
mov
dec
aad
repnz
add
insl
adc
call
sub
fadd
ja
push
stc
ljmp
adc
and
push
data16
xchg
movsb
arpl
pop
add
pusha
xchg
cmp
in
pop
int
cmp
lret
leave
push
outsl
jl
rcrl
stc
stc
repnz
sub
aaa
mov
sbb
jne
jne
inc
sbb
in
fstpl
cmp
jo
sub
outsl
imul
add
lcall
loop
xchg
nop
call
into
dec
in
lahf
dec
orb
ss
mov
adc
je
repz
adc
xchg
and
mov
xor
insl
ds
repz
outsb
jmp
mov
test
add
aam
mov
das
stos
inc
inc
xor
xor
icebp
cmpsl
aam
loope
jge
test
mov
aam
repnz
dec
xchg
adc
sub
inc
out
imul
jl
dec
sub
and
out
out
out
inc
mov
lods
lock
dec
mov
stos
cmp
sub
lods
dec
lea
xor
call
iret
sti
mov
jae
lret
adc
mov
mov
push
jbe
jmp
aad
jnp
loope
shlb
cmp
xchg
scas
adc
dec
sti
in
add
cmp
lahf
arpl
ja
shlb
push
fildll
xor
push
out
aaa
lods
xor
mov
incb
test
sub
add
sbb
add
neg
icebp
lock
mov
lods
xor
popa
idivb
sub
fldl
push
hlt
mov
or
mov
or
mov
out
bnd
jne
cmp
test
ret
mov
add
lods
shlb
icebp
xchg
cmp
addr16
ljmp
sub
das
sub
movsb
cmp
sub
nop
mov
lret
lret
sti
ljmp
and
adc
jge
adc
imul
pop
inc
int3
push
stos
repnz
mov
mov
mov
ja
mov
sti
outsl
es
fwait
jae
call
dec
je
ds
xchg
sbb
enter
mov
mov
imul
mov
adcb
in
outsb
jae
xchg
jb
push
mov
xchg
xchg
rcrb
push
cld
lcall
adc
sub
fwait
fwait
pop
clc
and
sti
cmp
insl
in
mov
loope
fbld
mov
in
and
push
addr16
test
cmp
sub
mov
les
inc
int
mov
stos
pop
iret
lock
scas
pop
mov
push
adc
cmc
sbb
and
pop
test
out
mulb
lods
pop
imul
in
out
sub
orb
rol
icebp
movsb
js
cmp
iret
push
inc
gs
mov
pop
and
nop
mov
cli
filds
in
ds
rcl
mov
aaa
fucomip
xor
push
out
push
add
add
sbb
or
popa
pop
nop
stc
aaa
ljmp
push
fisttpll
add
aam
pop
leave
jp
andb
out
lds
inc
add
nop
lret
pop
test
cs
inc
xor
jns
cltd
lods
and
ret
cmp
ret
mov
shrd
xor
ljmp
jmp
aaa
jle
push
negb
jge
xor
sub
out
sbb
pop
scas
js
and
push
sub
mov
push
cwtl
dec
movsl
mov
ja
ret
sub
pop
cmp
adc
leave
sbb
popf
arpl
dec
out
xchg
sub
pop
cmpsb
mov
sbb
pop
jbe
inc
mov
xor
shlb
in
sub
sub
mull
dec
imull
inc
lods
fsubs
xlat
dec
push
jnp
mov
test
mov
xlat
sahf
inc
cmc
mov
pushf
ja
ja
sub
jb
mov
and
or
dec
daa
je
scas
out
inc
xchg
loop
ljmp
out
jnp
and
push
push
lcall
push
aam
fwait
cwtl
inc
shl
mov
dec
out
mov
mov
loopne
push
pusha
push
add
sbbb
loop
outsl
inc
xchg
cwtl
and
or
mov
adc
gs
aas
xor
jae
or
push
icebp
inc
cmpsl
jg
nop
push
pop
or
push
stc
outsb
call
mov
pop
add
push
outsl
and
in
pop
jnp
stos
mov
or
dec
lods
in
and
inc
jle
inc
fbld
insl
in
daa
movsl
push
mov
mov
add
test
popf
insb
ds
scas
mov
dec
sbb
xchg
mov
aad
fcmovnu
ds
xchg
pop
mov
cmp
and
stc
loop
in
push
mov
pop
shlb
jns
adc
xchg
adc
jmp
inc
inc
or
arpl
add
sub
or
add
push
test
jp,pt
bound
inc
fimull
out
notb
std
jno
jno
fwait
jno
and
rcrb
es
xor
jg
pop
test
pushf
cmp
ret
xchg
addb
mov
rcll
xchg
ficompl
mov
push
mov
sbb
pop
cmp
dec
add
mov
outsl
loope
daa
xchg
leave
lret
out
cmp
inc
xchg
jmp
jb
orl
pop
fdivrs
sarb
call
add
xor
js
sbb
cmp
xchg
mov
cld
test
push
fld
pop
jl
pop
dec
add
popa
sub
mov
jb
mov
pop
test
dec
out
test
pop
stos
sub
and
in
dec
scas
imul
jecxz
popf
into
in
mov
inc
cmp
popf
and
sub
and
repz
add
mov
cltd
cmp
add
leave
sub
sti
fbstp
adc
push
add
call
xchg
jmp
outsl
push
xor
xor
pusha
mov
lahf
outsl
push
in
std
sub
xchg
insb
add
popa
clc
in
flds
jns
ret
sub
shlb
repz
dec
push
andl
pusha
pop
aas
xchg
jbe
movsb
push
cmc
jg
mov
xor
sar
push
subl
stos
xor
xchg
outsb
and
icebp
insl
faddl
sbb
insl
aaa
popf
mov
mov
mov
sub
pushf
out
iret
push
xor
das
mov
push
sub
stc
fwait
jle
jmp
insb
outsl
mov
mov
xchg
out
sbb
xor
xchg
shrb
test
out
dec
dec
add
subl
hlt
adc
sbb
js
nop
lds
shr
lods
into
adc
cmp
cli
ss
flds
insl
mov
outsl
jg
ljmp
stos
daa
or
sbb
pushf
xorl
out
outsb
pop
mov
pop
pop
orb
fsts
out
mov
sub
dec
ror
les
mov
cmp
mov
cmpsb
push
and
stc
xchg
lock
jecxz
pusha
add
mov
pop
sbb
lods
push
dec
cmp
mov
pop
scas
mov
and
mov
stos
ss
lcall
arpl
in
dec
jne
xor
movsl
or
cmp
loopne
dec
push
and
addb
push
push
and
jp
scas
sbb
mov
jmp
sub
in
mov
sub
dec
or
test
cmp
js
jmp
lcall
mov
daa
mov
nop
hlt
dec
inc
outsb
rcll
push
mov
test
jmp
jg
cltd
cwtl
inc
cmc
inc
xlat
push
rclb
inc
ljmp
and
cmp
stc
mov
jbe
dec
ds
imul
clc
insl
push
mov
ds
daa
cmp
shl
and
test
and
mov
mov
adc
push
fsubl
mov
stos
insl
mov
loopne
cli
lret
loope
xchg
js
mov
sub
inc
rcll
sub
adc
jl
jb
jge
stos
inc
inc
pop
test
push
push
cmp
lds
jge
or
arpl
daa
lock
aas
xchg
add
sbb
enter
lods
xor
add
jp
test
popa
or
sub
sub
jo
mov
sahf
js
clc
pop
je
std
xchg
ret
pushf
repz
mov
mov
xlat
dec
scas
in
rol
xchg
cmpsb
call
jb
sub
leave
push
sti
sub
cmp
inc
or
xor
jns
jge
lret
loop
sub
in
cs
and
mov
xor
mov
stos
popf
jle
cltd
cwtl
pop
sub
rcrl
adc
pop
loopne
cmpsb
sbb
and
out
mov
jmp
loop
pop
stos
pop
cmp
and
ret
aad
fsubrl
callw
sbb
stos
jle
fadds
sub
out
sub
mov
rcll
jg
add
sbb
inc
sbb
imul
mov
xchg
fdivrs
push
addb
xchg
mov
dec
andb
daa
and
cli
fucomip
fxch
mov
std
mov
lahf
jae
pop
insl
imul
sub
xor
repnz
jnp
pop
fistps
clc
jae
pop
pop
test
cmp
adc
dec
out
lods
jle
frstor
xchg
xchg
rclb
xlat
aas
imul
push
mov
mov
dec
hlt
push
pop
aad
fnstenv
xchg
ror
sub
shrl
in
dec
sub
test
movsl
sub
lea
cmp
fiaddl
dec
mov
test
nop
mov
test
adc
imul
pop
or
inc
adc
xor
pop
clc
out
jl
addb
jmp
rcll
cltd
ror
mov
sbb
call
gs
sbbl
jmp
nop
inc
push
xor
mov
add
cmp
loope
gs
or
sahf
adc
pop
jo
scas
mov
icebp
cwtl
sbb
push
xchg
fwait
rcl
add
rcll
sahf
aam
push
dec
xchg
inc
fisubs
push
lret
mov
aaa
int3
loope
and
hlt
dec
les
xor
cmp
push
cvtps2pi
push
xchg
lds
pop
lds
push
ljmp
test
xchg
add
test
and
mov
cwtl
in
push
leave
jecxz
cmp
aas
enter
in
mov
push
sarl
clc
push
mov
mull
ja
popa
or
and
inc
sub
lods
lods
shlb
jle
lods
cli
addr16
xchg
and
cmp
imul
fstp
lcall
lods
jl
repz
movnti
mov
sub
push
sbb
sub
ffree
and
inc
inc
int3
mov
fwait
cwtl
cmp
je
dec
jnp
mov
mov
andl
scas
push
adc
test
fcmovbe
out
es
inc
mov
loopne
popa
inc
and
sub
idivl
cmc
rcrl
icebp
fisttpl
cmp
or
dec
add
inc
mov
pop
add
cmp
jbe
jb
cli
cltd
sti
sub
imul
aam
stc
cmp
push
or
loop
and
fists
out
vxorpd
push
push
movsb
ret
and
xchg
mov
shl
push
push
mov
lods
in
push
mov
rcrb
jecxz
adc
mov
call
mov
shll
or
in
lock
loop
es
outsb
jmp
ss
adc
cld
neg
fadds
mov
xchg
cltd
call
and
sub
xor
fs
test
pop
rorb
mov
shrb
test
jmp
mov
ror
iret
into
push
and
lds
xor
mov
xlat
push
addr16
ds
notl
inc
mov
andb
sub
sbb
add
flds
dec
shlb
cmpsb
jmp
sbb
push
lret
adc
and
imul
cmp
sub
test
pop
push
aas
lahf
fsts
cmpl
mov
add
pop
pop
dec
mov
jnp
dec
out
rclb
jno
or
rcll
mov
jmp
dec
fchs
jmp
lods
shrl
mov
mov
mov
sti
fiadds
push
in
add
cmpsl
in
enter
jbe
mov
je
mov
sub
or
rcl
insl
cli
or
sub
dec
cli
jecxz,pt
push
adc
xchg
dec
add
or
and
xchg
xor
in
adc
lods
rcrl
jns
nop
or
xor
test
mov
add
pop
lock
test
mov
push
sbb
enter
and
xor
imull
jmp
mov
jge
stc
inc
mov
out
sub
dec
aaa
and
push
dec
dec
mov
jae
mov
pop
jnp
sub
dec
xor
jne
sbb
pushf
inc
cli
popf
nop
sub
int
adc
test
sub
or
mov
fs
inc
push
mov
loopne
pop
fistl
xchg
mov
in
clc
xor
or
or
icebp
cmp
scas
and
and
imul
xchg
jb
dec
popf
dec
fs
insb
stc
push
push
ja
mov
fldt
and
in
cli
inc
fisubs
mov
and
xchg
jmp
xor
lds
pop
ja
jle
lock
push
xor
imul
and
sub
es
add
mov
inc
aam
mov
dec
mov
mov
imul
movsl
adc
push
fsubp
lcall
sbb
repz
insb
inc
jmp
insb
cmpsb
stos
xor
mov
inc
and
inc
add
xchg
xlat
frstors
stos
int3
push
fstl
fdivrs
adc
sub
aad
xchg
imul
idivb
mov
mov
jecxz
lods
pop
cmp
clc
mov
jmp
mov
dec
mov
int3
jns
shrb
jmp
imul
or
jae
test
repz
out
adc
mov
cmp
add
idivb
popf
subl
or
jp
push
icebp
pop
test
adc
dec
cmp
imul
insl
or
mov
testb
les
jne
push
xchg
adc
mov
clc
divl
lcall
into
mov
cmp
xchg
ss
ficoms
and
push
inc
sarl
sub
jbe
lcall
aam
jne
sub
repnz
andl
lock
daa
hlt
or
jp
lret
ss
stos
ret
mov
lret
inc
adc
fidivl
ss
pushf
insl
stc
adc
out
loope
mull
lret
lock
lea
jne
daa
xchg
ljmp
hlt
lahf
add
leave
dec
in
push
mov
movsb
adc
jne
xor
subb
aas
cmp
int
shrb
out
cmp
or
cwtl
lret
cmp
sahf
jecxz
imul
fsts
test
ss
xchg
dec
cmp
xchg
adc
out
add
call
daa
pop
inc
dec
push
in
mov
aam
xchg
adc
lcall
outsb
dec
bound
in
fcos
mov
lret
outsb
dec
xchg
sahf
push
pop
inc
mov
test
xor
outsb
ret
add
fbstp
mov
fiadds
jmp
dec
jl
and
fsubs
in
popa
and
fimull
pop
repz
daa
and
inc
push
mov
xor
sub
das
or
cmp
xchg
testl
ljmp
incl
pop
xchg
fsubr
fiadds
xchg
aaa
or
mov
aas
mov
fbld
outsb
xchg
mov
push
int3
loope
cmovns
mov
fsubrs
mov
jmp
push
test
xchg
insl
xorb
add
jbe
add
out
das
orl
mov
inc
xor
mov
push
pop
or
mov
mov
pop
shl
mov
outsb
and
addr16
jp
lds
or
js
or
fdivr
adc
or
push
aaa
sub
movsl
adc
cmc
xchg
adc
inc
stos
xchg
incb
test
dec
dec
push
jo
gs
push
sbb
xor
adcl
jecxz
mov
stos
das
push
data16
and
xchg
fidivrl
das
pop
push
xchg
push
bound
in
mov
gs
sub
mov
push
cmp
mov
and
mov
jae
jae
cltd
sahf
ret
gs
repz
fbstp
jo
popf
addb
or
mov
fiadds
dec
pop
mov
mov
ljmp
es
inc
imulb
lret
cld
sub
mov
cmp
cmp
pop
lods
add
jle
imul
rcll
lret
nop
or
xor
test
adc
cmpl
jbe
lods
repz
ror
inc
fidivrs
sbb
cmp
lcall
lock
test
or
stos
pop
test
adc
mov
adc
and
aas
cmc
decl
call
mov
add
mov
mov
imul
xchg
pop
sub
stos
in
les
or
cmp
test
ljmp
sub
jmp
xor
jge
jno
cmp
cmp
pop
xchg
fldt
jle
cmp
test
js
lods
out
push
arpl
pop
sub
sbb
add
dec
stos
or
xchg
xor
inc
arpl
addr16
popa
inc
addr16
subl
jns
je
cmp
sahf
mov
cmp
jae
ja
lds
lock
push
leave
imull
jmp
pop
add
inc
mov
or
jno
aaa
in
nop
mov
fisttpl
insb
stc
jg
pop
lock
movsl
jecxz
lahf
jp
cmp
pop
rorl
into
rorb
push
cmp
subl
push
cmpsb
jle
out
addl
pop
sub
mov
jbe
sub
lret
jge
insb
sti
xchg
push
mov
leave
lods
daa
sbb
or
mov
insb
in
adc
cmp
mov
cmp
jl
mov
inc
imul
fs
lods
ret
and
push
mov
rcl
add
push
push
aad
xchg
dec
xchg
nop
aaa
cmpsb
mov
fildl
test
xor
icebp
jnp
cmp
and
subl
lcall
lcall
aam
pop
cmp
inc
ffreep
iret
sahf
in
jnp
mov
ds
addb
push
mov
ljmp
scas
outsb
dec
jns
sbb
and
sub
dec
push
jle
cmc
stc
push
outsb
fnstenv
dec
sarb
movsb
lcall
mov
mov
out
or
subb
mov
scas
fidivrs
pop
lods
ret
or
jl
testb
faddp
rcrb
test
shll
cmp
test
sub
jle
repz
mov
add
adc
or
inc
out
in
adc
fwait
xchg
xchg
cmovb
xor
cmpsb
add
push
arpl
inc
test
lds
popfw
int3
outsb
int
hlt
popf
inc
cs
call
mov
mov
dec
and
push
jle
shlb
stc
int3
fwait
sub
stos
leave
je
push
call
dec
cltd
scas
pop
cmc
mov
popa
and
movl
popf
mov
lea
mov
clc
cmp
dec
rcll
adc
sbb
sub
jp
mov
les
xor
and
vdivpd
xchg
dec
popf
and
mov
popf
in
pop
lock
mov
cmp
insl
sbb
loop
std
dec
push
push
sub
pop
faddl
dec
push
mov
mov
in
inc
push
push
push
push
inc
push
adc
xor
int3
jge
xor
lds
pop
pop
mov
into
out
in
mov
inc
xorb
bound
imul
stos
xchg
and
sub
mov
push
test
js
shrb
inc
aaa
adc
repz
dec
xchg
xor
and
rep
jp
or
lea
repz
ret
cmp
in
lea
outsl
mov
out
adc
push
add
int3
das
loop
pop
lcall
pop
push
cmp
lret
ror
sub
aaa
lods
std
push
flds
adc
jle
mov
ds
adc
mov
pushf
lds
clc
sbb
or
mov
arpl
cmpsb
lods
mov
push
fs
sti
mov
mov
adc
add
cs
or
adc
mov
fisubrl
mov
pop
jne
das
int
lret
cld
lcall
pusha
xor
idivb
xor
test
mov
inc
xor
push
out
lds
test
cmp
dec
xor
pop
sarb
sahf
dec
in
pop
cmc
jg
dec
xor
aad
dec
popa
jmp
jmp
dec
out
push
aam
inc
sti
cwtl
out
pop
dec
push
push
lret
iret
jg
movsb
int3
ljmp
jne
imul
xor
xor
push
stos
test
dec
les
sbb
aam
xor
jns
mov
ltr
and
mov
test
sub
cmp
out
cmp
test
out
pop
es
cmp
adc
and
loope
and
mov
mov
nop
bound
ljmp
adc
pushf
cmpsb
arpl
mov
xor
fucom
dec
test
negb
sbb
js
xor
xchg
inc
xchg
xchg
and
fdivrl
mulb
in
in
jbe
mov
fistpl
lret
or
jne
pop
and
xchg
lods
js
cmp
jae
hlt
shll
subb
push
adc
push
mov
or
jecxz
or
int
enter
inc
in
inc
scas
sbb
loop
or
sub
and
dec
cmp
test
movsb
test
popf
push
hlt
push
inc
fwait
ror
push
addr16
pushf
lret
addr16
mov
and
jns
lret
mov
popl
dec
test
stc
jae
icebp
inc
rorl
call
cmp
out
repnz
fstpt
pop
xchg
mov
pop
pop
ss
xchg
mov
adc
mov
push
shll
call
mov
sahf
lods
cmp
fisttps
push
repnz
pop
add
mov
mov
add
fimuls
dec
out
xor
mov
push
mov
cmp
sub
les
pop
push
pop
aad
push
dec
cmpsb
pop
sbb
ret
aam
jmp
add
mov
repnz
and
rolb
not
jns
jge
andb
out
mov
inc
stc
loop
pop
push
je
loope
rorb
sbb
callw
loopne
mov
xchg
fistps
cwtl
inc
test
mov
or
dec
and
sub
xor
xor
adcb
ret
mov
stc
mov
fs
mov
and
gs
fadds
sub
shrl
jg
or
jo
cmp
in
pop
add
cs
or
out
xor
notb
add
jp
cmp
sbbl
pop
in
sarl
outsb
sbb
loopne
sub
xchg
repz
pop
loope
pop
popf
pop
lahf
fcmovb
repnz
sub
or
in
loop
cli
mov
xchg
outsl
movnti
pop
inc
adc
mov
xor
fidivs
sub
jp
xor
sub
test
ficoms
jo
or
stc
les
sub
jb
test
int3
push
insl
lret
push
and
movsb
mov
test
test
fildll
hlt
filds
lret
out
mov
inc
mov
sub
mov
in
cmpsb
imul
imul
sub
push
popa
add
adc
push
mov
iret
jne
mov
mov
adc
rcll
pop
sarb
lret
mov
je,pt
in
loope
add
loopne
cmp
pop
inc
sub
stc
stos
add
nop
adc
xchg
jo
sub
xchg
lds
add
and
bound
xchg
pop
lods
mov
stos
mov
mov
insb
mov
and
cmp
daa
pop
mov
jne
ds
jge
mov
cmp
xor
test
jns
ljmp
clc
lds
inc
sub
fmull
arpl
stc
inc
pop
addl
mov
movsl
and
imul
xchg
lret
lahf
fwait
test
jo
xchg
pop
jp
sbb
add
stos
in
bnd
ds
leave
sbb
inc
in
pop
mov
sub
sub
jmp
pop
push
mov
mov
ljmp
cmpsl
js
pusha
xor
jne
insb
mov
jno
mov
ret
aas
repnz
mov
xchg
mov
sbb
cmpsb
xor
sti
dec
cmp
enter
jecxz
dec
adc
addr16
sub
cmp
inc
div
sub
cld
das
add
ret
nop
bound
ljmp
mov
gs
pop
or
nop
stos
xchg
loop
cmp
aas
clc
jl
pop
pop
in
cwtl
jbe
cmc
lahf
popa
push
cmpl
jmp
inc
fidivrl
push
add
in
popa
pop
inc
lea
enter
aaa
sahf
mov
pop
lds
loopne
sbb
mov
adc
cmpsb
and
in
sub
xchg
ret
xor
or
sub
jp
or
pop
das
movsl
test
inc
fldenv
test
cmp
ss
adc
leave
cmpsl
and
fists
pusha
inc
rcl
push
inc
rcl
mov
cmpsb
inc
jbe
ret
ss
add
or
sub
xor
movsl
xchg
mov
in
repnz
pop
aas
addl
clc
cmpb
imul
into
dec
pop
inc
mul
jo
cmp
cmovb
inc
or
incb
inc
les
mov
push
dec
xor
shl
xchg
inc
xor
mov
mov
cmc
sahf
jecxz
mov
or
mov
adc
sbb
xchg
xchg
movsb
jno
and
test
adc
mov
push
ss
pop
mov
aam
cltd
dec
inc
jns
in
shl
movsb
loopne
and
or
pop
mov
xor
rolb
daa
xchg
arpl
or
lahf
inc
add
pushf
fsubs
repz
lds
addr16
mov
cmp
es
mov
es
in
in
xor
jp
cld
pop
icebp
mov
aas
sahf
or
das
popa
add
xchg
pop
repnz
and
xor
stos
dec
pushl
scas
repz
inc
xor
or
pop
test
xor
lcall
daa
pop
cmpsb
dec
inc
pop
adc
shll
mov
in
outsl
xlat
sbb
jb
stos
or
jnp
addr16
outsl
adc
lods
xchg
rcrb
pop
fiaddl
fs
arpl
pop
clc
fs
test
std
push
add
lods
and
xchg
stos
hlt
lods
in
mov
mov
lock
and
fcomip
mov
lods
and
aam
mov
sbb
mov
pop
jp
cld
aaa
mov
daa
daa
mov
in
ret
pop
lret
pop
cltd
stos
mov
xchg
jmp
jl
mov
inc
rol
repz
and
and
mov
jle
pop
in
jle
xor
sub
int3
sti
or
rcl
xor
mov
sahf
mov
dec
es
and
repz
or
pusha
jbe
out
push
fstl
add
lods
les
add
mov
lahf
pop
shll
lea
adc
xor
push
xchg
jns
mov
stc
rcrb
in
inc
sbb
int
sub
call
out
fxch
add
in
jnp
push
inc
popa
testb
xchg
insl
jbe
sub
mov
movsl
mov
fnstsw
outsb
jns
fwait
xchg
popa
sub
arpl
test
popa
sbb
sbb
xchg
add
push
xchg
cli
rolb
mov
sarl
fwait
lret
and
nop
shlb
dec
cmp
mov
sbb
inc
adc
or
push
jno
cmp
stos
sbb
sbb
pop
cmpsb
or
daa
pop
pop
or
jne
cltd
mov
stos
in
rorb
mov
push
iret
mov
lods
mov
cltd
dec
jecxz
aad
push
clc
add
daa
loopne
lret
pop
movsb
ficoms
in
cmp
movsl
inc
dec
jo
push
push
ss
or
xor
ds
and
and
push
adc
orl
push
insb
xor
xor
cmp
xchg
cmp
test
jno
dec
stc
fistl
fildl
and
cmp
add
aam
fs
cs
jno
and
test
out
dec
xchg
xor
cmpb
lods
pop
scas
xchg
push
shll
dec
ret
ljmp
jecxz
push
shrb
movsl
sbb
jle
mov
fwait
xor
ljmp
adc
inc
stos
test
dec
stos
sahf
jmp
or
sub
mov
pusha
leave
cmpsl
or
mov
lods
push
jbe
xchg
inc
pop
clc
inc
iret
cs
cmpl
cltd
mov
arpl
mov
ds
in
mov
lds
add
jns
push
popf
es
adc
int
imul
add
mov
jmp
dec
sbb
in
fisubrs
je
mov
mov
or
sub
sub
mov
sti
mov
test
pop
xchg
add
dec
shrl
adc
add
fucomp
pusha
in
pop
movsl
pop
inc
push
cmp
arpl
mov
lret
or
lret
mov
test
icebp
icebp
jle
int3
test
negl
and
rcrb
jb
frstor
fisubrs
sbb
mov
iret
out
xchg
add
test
jge
jmp
pushf
stos
sub
xchg
andl
lahf
and
scas
xor
xor
push
repz
inc
pop
ljmp
lret
add
cmp
movsb
fdivl
xchg
adc
mov
xlat
and
int
pusha
jl
jne
and
nop
xchg
imul
popa
into
mov
sub
scas
cwtl
scas
gs
lds
iret
rclb
loop
arpl
push
nop
jne
jecxz
or
adc
pushf
jmp
mov
jae
shll
inc
rcrb
xor
scas
adc
lcall
test
pop
jbe
bswap
xor
int3
lods
out
mov
aaa
inc
add
mov
sbb
outsb
rolb
mov
stos
stos
xchg
lea
mov
ss
outsb
xchg
mov
jecxz
syscall
pop
stos
out
je
iret
push
xor
insl
xor
out
hlt
insl
outsb
pop
mov
das
add
dec
jae
fisubs
xor
dec
sub
mov
jb
xchg
mov
loop
test
call
setae
dec
jns
mov
leave
jle
and
in
popa
cmp
scas
xchg
fildll
pop
fcomps
add
or
or
push
xchg
dec
xor
shlb
add
test
xchg
pop
insb
add
int
and
push
inc
adc
icebp
fstpl
mov
out
xor
in
out
into
and
mov
cs
dec
mov
dec
loopne
cmp
or
xorl
jb
cli
fsubr
cmp
mov
sbb
fwait
mov
adc
jecxz
cmp
iret
lret
cmp
pop
xor
in
ss
push
lods
pop
call
push
out
xorl
mov
subb
lods
pop
sti
or
fimull
lods
dec
add
test
mov
adc
jns
sub
mov
lods
gs
outsl
xchg
loope
dec
jnp
faddp
popl
pop
cmc
xor
aad
out
mov
xchg
or
pop
cmp
and
xchg
pop
mov
push
scas
pop
sbb
pop
cmp
inc
test
notb
mov
stc
xor
push
sti
fildl
sahf
sub
push
inc
cmp
iret
repnz
cmp
xchg
hlt
dec
or
lea
or
adc
out
push
cmp
dec
adc
xor
add
mov
inc
xor
cmp
add
mov
push
popa
pop
add
and
jge
sti
jg
je
rep
jg
push
cld
mov
and
hlt
imul
rcrl
fdivrs
cmp
and
lds
out
repnz
std
pop
and
lcall
jne
push
inc
mov
or
paddd
les
cltd
mov
push
add
lcall
sahf
xlat
mov
adc
stos
add
and
jg,pn
sarb
add
push
lea
pop
pop
testl
inc
adc
xor
std
push
cltd
out
inc
pop
cmc
inc
in
add
int3
xlat
adc
xchg
cmp
popf
jnp
and
in
pusha
pop
rorl
ds
pop
push
int
in
loop
iret
push
insl
mov
nop
pop
push
add
mov
and
adc
cmc
leave
adc
pop
test
sar
dec
inc
loop
fimull
ljmp
inc
aas
int
inc
test
test
sbb
push
aam
mov
and
rorb
cmpsl
jg
push
xchg
jns
xchg
sbb
popf
pop
stos
roll
inc
push
jge
pop
pusha
adc
and
mov
cwtl
ficoms
xlat
cmp
mov
fnstsw
push
pusha
hlt
and
add
jmp
inc
pusha
insl
cmpb
fcom
sub
adc
mov
adc
sub
scas
dec
mov
or
or
hlt
cs
cli
sub
or
and
pop
jns
fcoms
mov
movsb
lahf
or
or
jmp
mov
xor
mov
fsts
incb
add
xchg
and
cmp
mov
pop
or
mov
mov
cld
nop
or
adc
dec
inc
test
xorl
adc
and
inc
cmpl
inc
cmc
xchg
ret
out
fs
cmp
sub
push
mov
aas
mov
loop
lea
inc
dec
mov
jo
sub
std
cmp
in
push
testl
mov
das
cmp
sbb
add
mov
jmp
dec
xor
cmp
popf
aas
sti
adc
adc
aam
ret
push
clc
push
out
sahf
je
mov
jbe
add
movups
scas
cld
pop
push
iret
mov
or
xlat
jnp
icebp
out
jo
mov
lret
and
mov
push
mov
test
idivl
inc
sahf
mov
gs
repz
or
jge
cs
sub
adc
jae
adc
dec
cmpsb
movsb
cmp
inc
sarl
shll
push
push
add
fsub
mov
jne
mov
mov
test
sahf
inc
mov
lcall
test
mov
ret
push
inc
sbb
fidivl
xchg
and
sub
mov
dec
xchg
xor
daa
add
out
pop
push
cmp
pop
outsl
cmp
cmp
xchg
xchg
adc
sub
sub
jbe
add
adc
repnz
jne
gs
fst
roll
cltd
xchg
or
push
inc
out
jns
pop
out
inc
ret
and
aaa
cmp
stc
mov
popa
lock
and
and
sbb
inc
outsl
xchg
std
push
test
daa
mov
insb
je
lods
cmpsl
out
add
sbb
addr16
jle
lods
dec
mov
out
stos
and
test
dec
aas
enter
shlb
arpl
xchg
lret
sub
out
push
stos
shlb
gs
ret
ja
in
out
lods
jo
or
xor
push
push
xchg
aad
xlat
dec
inc
fwait
mov
mov
sti
sbb
into
pop
mov
push
lods
ret
scas
arpl
adc
fstl
daa
sahf
mov
loop
ja
mov
dec
loop
push
adcl
xor
aas
and
rcll
and
push
mov
lret
enter
out
out
das
lods
mov
lods
push
pop
fistpl
out
in
push
jns
mov
enter
jnp
cwtl
aad
xchg
cmpl
out
imul
push
jp
add
jmp
adc
mov
mov
cmp
test
cld
loop
lock
jne
rolb
enter
push
push
jno
cmp
hlt
data16
lret
shll
add
sub
xor
hlt
sahf
test
jge
mov
aas
ret
mov
pop
repnz
jae
xchg
jge
jmp
popa
dec
loopne
jg
add
mov
mov
test
cwtl
sbb
push
mov
xchg
loope
lahf
lock
xlat
mov
xchg
and
jno
loope
jae
mov
and
icebp
aam
das
incb
jnp
sbb
adc
js
mov
jmp
dec
mov
push
test
ret
adc
push
cmp
imul
inc
push
imul
mov
rcr
loop
push
push
pop
or
mov
mov
repnz
jmp
and
out
fistpl
xchg
push
and
js
test
mov
pop
sub
pop
fmull
push
das
rclb
imul
rcll
fildl
popf
pop
sub
inc
roll
into
andb
sbb
testb
fcomps
cmp
mov
or
mov
call
mov
incb
andl
pop
into
inc
mov
ret
add
scas
lods
test
xor
mov
inc
xor
push
ret
or
sub
xchg
ss
outsl
jnp
or
mov
pop
cmp
pop
repz
sub
pop
filds
ds
pop
in
xor
push
mov
mov
pop
aas
es
movsl
sbb
cmc
or
or
subb
dec
addr16
adc
leave
mull
adc
pop
mov
enter
mov
cmp
in
sahf
movsb
inc
decl
and
mov
dec
mov
inc
cmp
xchg
cli
mov
popa
dec
insl
add
xchg
jg
mov
sbb
stos
lret
pop
add
inc
inc
ss
inc
fidivl
adc
aam
and
push
iret
stc
loopne
sahf
in
jge
add
mov
push
xchg
jmp
lea
pop
sahf
mov
jo
sub
sub
mov
mov
cmp
les
clc
cmp
xchg
or
addl
sub
ficoms
hlt
sub
icebp
mov
arpl
gs
jne
and
setae
aad
and
add
mov
mov
sbb
icebp
push
or
aaa
fs
ss
and
mov
shrl
mov
mov
and
push
addr16
xchg
cltd
nop
fcom
jo
push
les
cmpl
int3
sub
mov
lea
std
sbb
push
ret
cmp
fisubl
pop
cmp
imul
movsb
insl
test
lods
sbbb
pushf
pop
bound
mov
mov
popa
jne
loop
add
ss
sbb
stos
jmp
mov
movsb
bound
mov
sub
loopne
jmp
jge
dec
jno
mov
cmpsl
icebp
or
scas
arpl
testl
shrl
xor
cmp
sti
in
int
js
movsl
ret
jl
hlt
jae
stos
testb
adc
ja
mov
add
test
jle
lods
aaa
xchg
mov
sub
inc
in
pop
ljmp
loope
mov
lret
and
xchg
cmovs
sbb
test
mov
call
clc
dec
loop
and
jg
dec
add
pop
out
sti
and
loop
repnz
setnp
xor
add
adc
pop
dec
inc
inc
xchg
insl
hlt
lds
in
jl
pop
mov
xlat
das
stc
cmp
adc
in
adc
push
push
inc
xor
push
cmp
mov
cltd
int3
push
jbe
cs
xor
pop
mov
push
add
and
sub
clc
and
fimull
nop
rorb
ret
cmp
xor
cmpl
xor
push
xlat
push
xchg
sti
out
sub
fiadds
cmp
push
inc
iret
call
arpl
scas
loope
cmp
mov
mov
mov
jmp
push
push
mov
repz
lret
shll
ret
daa
arpl
add
fwait
mov
fldenv
sub
push
sbb
push
clc
test
push
mov
std
jp
dec
mov
inc
mov
pop
jno
lret
in
les
dec
mov
mull
orl
imul
sarb
mov
cmp
mov
movsl
iret
add
ljmp
cmp
push
sbb
pop
popa
std
mov
fidivs
mov
repz
add
pop
xchg
cmp
insb
mov
loopne
test
dec
push
inc
mov
xchg
out
es
repz
mov
dec
imul
je
lea
popa
lods
add
popa
push
cmp
push
pusha
mov
jl
cltd
xchg
xchg
es
pusha
xchg
and
filds
mov
insb
or
cli
xor
mov
std
push
ss
iret
sub
cmp
ss
imul
ja
jg
xchg
sbb
in
lods
xchg
test
and
mov
push
scas
and
filds
or
xchg
les
push
test
adc
sub
lock
dec
outsb
stos
mov
mov
out
push
test
ret
mov
push
movsb
lret
ds
gs
pusha
lea
cmp
or
out
sbb
lock
scas
xor
imul
dec
int
push
lock
lahf
fldenv
pop
xor
adc
imul
push
push
test
andl
mov
add
stos
mov
cmp
aam
stos
jae
dec
gs
jg
mov
inc
lret
outsb
int
in
mov
mov
lcall
mov
test
ret
je
xchg
lock
and
nop
pop
ja
bound
fsubl
stc
xchg
or
lea
int3
out
pusha
xchg
repz
pop
xchg
jns
push
decb
lret
lret
addr16
jns
mov
mov
shr
jns
pushf
je
pop
ret
adcl
or
insb
mov
mov
dec
neg
or
aad
pop
mov
mov
mov
daa
push
test
adcl
lock
cltd
enter
test
xchg
cltd
add
negl
loope
sub
xchg
je
xchg
xchg
cmpsl
mov
xor
dec
js
or
movsb
test
jg
sbb
adc
inc
rol
cmp
xor
push
mov
testl
mov
or
adc
test
jle
jg
jae
bnd
mov
adcb
add
call
ret
mov
cmp
imul
test
insl
aad
mov
in
mov
stos
test
cmp
cmp
sub
test
aas
or
jge
mov
jmp
pop
mov
mov
add
jb
shlb
mov
add
andl
xor
sub
xor
mov
stos
arpl
xorb
jo
add
cmc
fdivrl
in
arpl
out
xchg
pusha
xor
lahf
js
aam
mov
inc
pop
inc
popa
pop
mov
push
inc
mov
int
jo
sbb
cmp
jne
xadd
sub
xchg
dec
mov
mov
sti
popf
jno
mov
jp
pop
jo
call
adc
loop
mov
int3
push
sbb
in
and
movsl
lods
push
andl
lcall
data16
jmp
pop
das
cmc
add
shll
popa
sub
jo
loope
int3
mov
jle
bound
push
in
jae
outsl
arpl
sbb
ja
mov
jbe
mov
call
jbe
sub
shrl
pop
pop
mov
xchg
out
int3
pop
sub
mov
sub
inc
mov
popa
jge
into
jb
xor
or
dec
pop
jl
or
das
sbb
mov
rolb
push
clc
icebp
shr
mov
mov
frstor
arpl
lock
repnz
xlat
mov
cld
mov
mov
pop
jl
imul
dec
out
adc
into
mov
data16
sbb
ds
add
inc
cwtl
ja
fistl
stc
sub
jbe
cmp
dec
nop
lea
fistl
push
adc
in
sub
cmc
and
sub
out
inc
sub
subl
data16
xchg
jp
cwtl
fbstp
fimull
mov
cmp
jns
mov
aad
xor
push
push
pop
daa
lods
mov
xor
dec
xchg
push
or
jle
addr16
scas
in
pop
mov
xorl
cmp
jo
enter
mov
jle
sahf
adc
push
xor
outsl
shll
fisubrs
xor
in
rcrl
xchg
push
xlat
push
push
jge
into
push
mov
movsb
ss
inc
std
push
lcall
dec
dec
fdivl
mov
fidivl
or
imul
jge
ret
or
sub
adc
andb
xchg
stc
lock
jno
clc
xchg
lcall
mov
xchg
jnp
dec
test
or
xchg
scas
pusha
and
push
jbe
cltd
ljmp
xchg
xchg
mov
inc
ljmp
and
lea
cmp
imul
jne
sti
lods
addr16
or
jne
mov
repz
xor
fwait
jge
cmc
fwait
aad
bound
sbb
and
push
jg
xor
jb
adc
hlt
enter
negl
jnp
lret
les
mov
cmpsb
cmpsb
sbb
jb
jae
outsb
mov
mov
jl,pn
mov
out
add
xor
fwait
sti
mov
in
movsl
loop
mov
mov
mov
cmp
aas
pop
add
aad
cmp
sahf
pusha
lcall
pop
scas
fsubrs
leave
fs
pop
leave
and
movsl
jae
clc
lods
int3
and
imul
pop
ja
fstpt
sub
into
mov
leave
scas
fwait
jl
sub
push
iret
into
js
gs
repz
shlb
aas
popf
mov
int
add
repz
dec
cmp
idivl
fdivl
sbb
inc
xor
test
sbb
mov
push
jns
out
pop
shl
inc
and
cltd
inc
push
jnp
jle
xchg
add
data16
xor
mov
test
and
lods
les
sti
cmp
mov
push
inc
or
mov
sub
addb
jne
fists
test
sbb
cld
divb
inc
cmpsl
xchg
clc
lcall
inc
das
jecxz
movsb
push
loop
stos
es
push
stos
mov
and
cmc
mov
ja
hlt
outsb
xchg
data16
sbb
dec
dec
mov
xchg
jg
imul
in
cmp
sub
add
bound
xchg
mov
sti
and
nop
pusha
inc
scas
imul
pop
push
inc
xchg
int3
push
pushf
shlb
pushl
jmp
cmc
lods
mov
outsb
mov
lock
es
or
into
pusha
shl
call
mov
rcll
hlt
orb
xor
inc
mov
stos
insb
or
scas
cmc
lahf
xlat
jne
rorl
jb
sbb
out
cmp
dec
xchg
stc
inc
imul
inc
loopne
sbb
and
jmp
adc
jne
add
push
inc
int3
popa
jne
sub
loop
lret
mov
pop
and
addr16
and
pop
dec
dec
faddp
stos
das
mov
rclb
xor
movb
dec
inc
ret
mov
push
jnp
icebp
mov
fbstp
fnstcw
loope
add
into
cltd
test
jmp
repnz
xchg
incl
xor
inc
paddusw
loop
xor
or
mov
jecxz
cwtl
ljmp
sub
mov
rorb
xchg
mov
and
sarb
iret
or
pop
popa
divb
mov
adc
dec
lret
lea
jecxz
pop
stc
insb
push
in
in
xor
stos
jb
xchg
mov
mov
mov
push
aam
jmp
testl
dec
xor
mov
popa
mov
sbb
cs
icebp
arpl
pop
out
ret
int
jmp
push
add
mov
jb
sub
pusha
jl
pop
icebp
and
add
inc
xor
cmpsb
sub
push
jle
cltd
add
cltd
imul
leave
test
loopne
xor
popf
xchg
inc
cmp
jo
das
icebp
push
mov
add
mov
movsl
cld
fsub
faddl
add
mov
inc
cld
fwait
pop
pushf
jnp
pop
xchg
pop
arpl
jecxz
dec
dec
lea
decb
test
pusha
xchg
test
pop
cmpsl
jne
rolb
popf
es
cmp
jne
fistpll
ja
inc
mov
mov
repz
mov
stc
dec
mov
mov
push
and
push
rcrl
mov
cmc
pusha
dec
js
or
lock
mov
iret
cmp
cmp
add
std
fcmovu
push
and
les
imul
test
and
out
test
imul
movsl
and
mov
mov
mov
xor
leave
xchg
cld
push
in
xor
nop
push
and
mov
bound
lret
push
in
jnp
mov
data16
and
and
sahf
jle
or
aam
popf
mov
data16
jnp
push
cmp
sar
ror
je
dec
daa
gs
frstor
stos
into
mov
cld
sub
add
iret
push
or
or
mov
xchg
jmp
stos
int
push
rolb
fldcw
sub
data16
les
fstps
mov
in
xchg
jns
insl
jno
jge
scas
cs
cs
and
xchg
mov
addb
inc
jae
gs
leave
out
sbb
or
push
cmp
xchg
stos
je
sbb
negl
leave
sbb
or
add
sub
pop
hlt
shlb
test
sbb
add
insb
and
mov
mov
cli
addl
push
out
push
sbb
sbb
mov
fimuls
adc
fstpl
or
xchg
xchg
xchg
aas
lahf
in
sti
xchg
add
pop
and
dec
or
mov
and
fisubs
push
xchg
pop
push
mov
outsl
jl
outsb
insl
cmpl
in
xor
dec
xlat
xor
je
pop
outsb
ss
clc
sbb
pop
inc
aaa
in
add
pop
ja
inc
jle
test
mov
gs
mov
jno
or
mov
push
sbb
jb
loope
mov
mov
daa
jmp
mov
xchg
mov
mov
xor
hlt
ja
inc
pop
cli
test
mov
test
push
ret
dec
or
cltd
inc
push
sbb
or
lods
pop
pusha
sbb
mov
test
movsb
lahf
std
popf
test
xor
ret
pop
dec
filds
outsb
mov
add
out
pop
push
lock
ljmp
mov
ljmp
loopne
push
dec
pop
sbb
jns
jnp
repz
ret
mov
sub
mov
adc
popf
xchg
insb
or
clc
clc
lds
shll
sbb
cmpsb
sbb
or
lock
ljmp
iret
fcoms
stos
and
mov
pop
stc
sub
adc
data16
aam
jbe
mov
sbb
inc
std
sbb
xor
mov
pop
pop
xchg
test
cmovbe
jo
adc
stos
cwtl
aam
nop
and
es
mov
sbb
inc
mov
inc
inc
stos
dec
xchg
jg
loop
cpuid
xchg
addb
out
pop
cmpsl
xlat
cs
sarb
sbb
popa
int3
cmpsb
repnz
lods
mov
xchg
arpl
mov
fstpt
rorl
ret
pop
xchg
aaa
fcmovne
mov
ds
cmp
pop
les
aad
mov
loopne
push
ret
mov
imul
push
jle
ret
jg
movsb
pop
nop
cwtl
push
mov
mov
push
xor
fcmovnbe
je
and
out
ss
sarb
scas
push
sbb
push
and
sub
jge
and
in
lret
adc
shr
into
dec
gs
push
push
lret
xchg
pop
mov
xor
dec
adc
shrl
cwtl
test
clc
mov
dec
insb
out
inc
push
push
sahf
cmpsb
inc
cmpsb
cld
sarb
sub
xor
push
lds
dec
dec
rolb
ficoms
push
in
xor
jge
inc
jo
cmpsl
mov
mov
add
cli
mov
arpl
lea
cwtl
sbb
and
hlt
jle
loopne
repnz
push
mov
test
xor
sbb
fwait
neg
mov
cmp
sub
push
mov
lds
mov
ficomps
sbb
mov
jp
push
scas
in
cld
push
mov
pop
idivb
and
lea
sbb
xchg
sub
or
movsb
push
cmp
lcall
jge
push
mov
lret
inc
cmp
outsl
scas
lock
jbe
test
addr16
sbb
repnz
jne
insl
and
cmp
mov
rcll
int3
outsl
pop
inc
bound
mov
cmp
mov
aam
lea
pusha
jb
inc
std
popf
inc
ds
dec
repz
fnsave
inc
aas
js
jle
or
lea
sbb
jbe
test
and
rcl
cld
mov
dec
sub
outsl
lret
adc
mov
pop
in
dec
cmp
push
dec
and
sbb
sbb
inc
ret
ds
sti
push
test
mov
mov
add
pop
jl
inc
dec
xchg
dec
loope
test
fcmovne
sbb
fdivrp
mov
push
out
call
lret
pushf
mov
mov
ss
shlb
push
stos
xchg
insl
mov
lcall
and
test
mov
add
jne
sub
addl
and
clc
sbb
fsubrl
mov
sti
popa
mov
cltd
mov
mov
mov
clc
insb
imul
jp
adc
sbb
aam
mov
scas
pop
mov
jb
leave
ret
jge
mov
popf
push
and
inc
and
sahf
mov
xchg
push
or
scas
and
push
xor
dec
push
cmpsb
cmpl
in
mov
es
dec
rcrl
add
lahf
inc
lods
out
data16
inc
aaa
sbb
xlat
fmull
shll
inc
mov
pop
aaa
xchg
stos
cmp
mov
das
lret
jbe
xor
call
sub
imul
clc
dec
mov
adc
pop
nop
in
aas
jg
cs
add
imul
jmp
push
add
cs
adc
in
int
push
dec
outsl
subl
lahf
sub
xor
loope
mov
xchg
stos
inc
out
add
fidivrl
das
movsb
roll
inc
test
xor
mov
or
popf
add
loop
sbb
das
addr16
sub
cltd
cmp
ljmp
lods
lret
add
in
cltd
lea
js
movsb
mov
addr16
iret
ficomps
and
xchg
cmp
shll
and
jno
jg
enter
xor
and
pop
inc
ljmp
mov
inc
jmp
and
xchg
xchg
into
jae
cld
cmp
dec
pop
repz
into
movsb
push
sub
sbb
sbb
scas
dec
mov
rolb
mov
push
enter
lcall
jne
es
mov
xchg
mov
sti
stos
outsb
mov
lahf
adc
imul
add
xchg
cmc
pop
sbb
mov
popf
dec
daa
mov
push
enter
cmp
mov
sub
push
jl
repz
insl
lcall
push
mov
int
lret
test
jnp
outsl
add
pop
mov
sub
or
mov
inc
jb
daa
fs
jns
scas
leave
xchg
xchg
out
rorl
cmp
je
mov
test
cmp
pushf
ds
jnp
aas
mov
push
iret
imul
lret
stos
cltd
out
fnstenv
scas
outsb
out
add
arpl
lock
js
sbb
rcrb
fsubrs
leave
std
mov
jo
pop
jecxz
jne
mov
pushf
mov
add
sub
dec
inc
xorb
mov
shl
scas
mov
popf
lea
ret
adc
mov
fildll
inc
or
jo
pop
test
sbbl
xchg
ficoms
out
jle
cld
repz
dec
mov
in
push
cmp
xor
inc
test
cmp
cmp
mov
movsl
xor
sti
pop
mov
cli
subb
aam
outsb
aam
pop
sub
js
inc
pusha
and
inc
or
stos
cli
repnz
cwtl
jmp
dec
fidivs
adc
shr
jmp
xor
addr16
or
pop
stc
mov
adc
adc
sbb
dec
jbe
iret
fmul
fdivl
jne
repnz
mov
sti
dec
pop
mov
stos
dec
movsb
dec
xchg
add
dec
fstps
gs
and
cmp
jns
je
mov
out
adc
hlt
inc
jb
mov
orb
xor
movsl
jbe
flds
xchg
jns
lods
test
pop
lret
loope
scas
insl
sub
in
pop
cli
nop
mov
imul
movsl
push
es
push
mov
jae
fcomip
out
lcall
shrb
and
js
pop
add
sub
adc
shl
xchg
or
xchg
shll
les
adc
sbb
aaa
push
xor
in
and
fcmovb
daa
ret
lcall
xchg
mov
aas
push
jae
or
cld
mov
fsubrl
cmp
cltd
stos
xchg
inc
ds
shlb
sti
outsl
ror
jb
mov
mov
jmp
sub
jbe
enter
jb
into
loope
xor
mov
cld
aaa
cmc
cmp
leave
in
xchg
popa
fucom
inc
and
sub
mov
jl
cmpsl
lret
dec
dec
dec
push
sbb
into
adc
in
in
mov
pop
dec
cmpsb
ffreep
les
jmp
inc
outsb
cmp
js
dec
jge
xor
add
inc
xchg
mov
adc
test
lea
rcrl
fidivrl
sub
aaa
xchg
mov
cmp
push
xchg
mov
or
xor
outsb
fs
test
mul
add
test
fmuls
dec
add
xchg
adc
mov
add
mov
xchg
inc
push
out
cmp
movsb
mov
xchg
sarl
es
aam
pop
pop
mov
out
cli
cmc
rsm
xchg
mov
bound
jg
or
dec
nop
and
mov
lods
ljmp
sub
mov
jnp
push
push
stos
mov
popl
mov
add
cmp
rorl
shrl
pop
adc
jp
cld
stc
ljmp
push
pop
out
push
dec
popa
mov
popa
dec
jno
int
dec
sub
adc
aam
negl
xchg
jo
movsl
fcomps
inc
fbstp
into
leave
jg
mov
out
push
fildll
sahf
pop
fistpl
gs
incb
pop
sub
and
imul
or
idivl
shlb
dec
sbb
sub
mov
iret
in
dec
aas
jb
mov
sbb
adc
gs
imulb
mov
repz
mov
xlat
fildll
fimuls
push
imul
out
mov
fdivrs
lret
mov
popf
shl
xchg
mov
pop
push
aaa
mov
cmp
push
xchg
push
add
inc
mov
or
mov
add
icebp
pop
add
adc
cltd
orb
es
out
mov
fldcw
jmp
fsubr
aam
mov
jo
add
add
push
push
adc
jp
daa
xchg
loop
je
in
inc
or
mov
adc
push
cmp
mov
or
push
repnz
out
fistpll
adcl
inc
std
les
enter
lret
xchg
repz
add
sub
ret
inc
out
out
das
pop
clc
push
xchg
xor
mov
sub
cmp
dec
pop
cmp
enter
sub
and
mov
jbe
push
push
dec
mov
vsqrtpd
fs
ret
inc
jne
or
popf
inc
jbe
dec
bound
or
loopne
bound
subl
jo
or
jnp
fcmovnbe
pushl
lret
dec
stc
fisttpl
and
insl
add
addr16
addl
loopne
pop
and
push
insl
or
xor
cmp
movsl
or
ljmp
popf
mov
neg
icebp
js
jno
clc
dec
pusha
inc
icebp
cmp
pushf
push
imul
dec
popf
adc
pop
cmp
aam
lock
test
bound
icebp
mov
mov
push
pop
rolb
pop
pop
and
xor
ss
add
jo
jmp
push
sbb
fidivrl
repz
lahf
mov
in
lods
idivl
xor
jmp
adc
sub
leave
in
outsb
sub
inc
xchg
adc
add
movsb
mov
into
bound
mov
jmp
outsb
adc
loopne
inc
or
add
dec
shrb
cmp
xor
arpl
cld
push
ja
aaa
mov
int3
dec
mov
test
lcall
or
in
fiaddl
ss
push
bound
jo
push
pop
mov
sbb
ss
mov
data16
icebp
mov
cmp
scas
inc
or
jmp
add
fisubs
call
adc
imul
cli
dec
jae
push
hlt
sbb
mov
adc
scas
mov
fucomip
lods
sub
sbb
push
outsl
cmp
push
fs
sti
jb
in
js
pop
pop
or
hlt
cmp
cmp
jp
add
push
lret
insl
ret
mov
inc
xor
push
mov
imul
dec
push
sbb
and
pop
stc
jle
int
imul
lods
or
sarl
fists
repnz
or
scas
sub
push
sub
inc
sub
lahf
pop
pop
xchg
push
testl
cmp
adc
pop
es
pop
and
icebp
imul
cmc
xchg
mov
fstl
orl
and
dec
xor
in
test
xchg
or
pop
mov
dec
scas
adc
adc
aas
xchg
sbb
xor
ret
xor
xchg
mov
das
test
clc
add
sbb
sahf
inc
dec
mov
out
data16
jmp
mov
imul
test
decb
jbe
fistpll
xchg
mov
sub
sbb
xorl
lods
dec
data16
add
fs
jnp
mov
loopne
sbbb
fldl
add
jbe
aaa
xchg
cmp
mov
pop
pop
cwtl
pop
jne
lret
jns
jp
pop
sub
lcall
pop
xor
lods
fcmovnb
pop
xor
jb
mov
je
and
in
fwait
leave
aam
jno
cmpsl
jge
jne
pushf
and
outsl
fcomps
cmpsl
insb
xchg
lahf
lods
sbb
inc
repz
adc
iret
out
cld
int
or
or
add
mov
add
iret
std
test
jns
xchg
adc
pop
sub
inc
ss
dec
cs
fs
sbb
fwait
mov
orb
xchg
adc
pop
js
mov
jo
or
adc
xlat
inc
dec
shr
scas
and
repnz
push
and
push
jmp
in
das
jg
cli
pop
out
or
aas
insl
lahf
addr16
pop
inc
mov
fwait
mov
fwait
push
jo
inc
mov
bound
pop
sti
xor
scas
std
orl
int3
jno
into
xor
sbb
daa
xor
sub
stos
in
clc
gs
xor
mov
mov
jge
cld
mov
int3
sub
mov
mov
jne
mov
clc
or
out
lods
fisubs
cmp
ret
ret
cmp
lret
xchg
lock
pop
je,pt
mov
test
lods
popa
mov
and
mov
fldenv
sbb
pushf
adc
pop
add
mov
out
subb
sbb
ds
mov
das
cmp
lea
jns
leave
mov
lret
adc
sub
jecxz
stos
sti
or
scas
push
mov
mov
jns
jle
mov
sar
gs
mov
adc
jmp
and
insb
jecxz
inc
xchg
aam
roll
xchg
pop
jp
sbb
inc
pop
mov
mov
mov
sub
add
add
jbe
std
hlt
inc
mov
cs
ss
std
jg
inc
or
fldt
incb
lret
icebp
cmpsb
mov
and
inc
popa
lret
sub
add
cmp
je
pop
scas
imul
jmp
pop
imul
dec
ds
into
push
cli
lock
push
xor
pop
ss
loop
dec
sbb
pusha
jg
inc
or
mov
push
mov
insb
pusha
xor
push
sbbb
sarb
jnp
es
inc
test
js
out
mov
xlat
popf
pop
mov
or
sbb
shlb
dec
dec
clc
sbb
repz
or
and
mov
jb
jo
daa
into
sub
push
pop
hlt
push
pop
xor
insb
rclb
mov
repz
test
data16
scas
dec
pop
sub
test
in
cmc
inc
movsl
mov
bound
mov
dec
insl
pop
mov
movsl
lods
or
push
ljmp
lods
jp
inc
pop
push
xchg
popf
imul
sbb
mov
mov
mov
mov
mov
out
and
lahf
dec
fisubl
jge
jnp
jl
pop
jnp
mov
and
sarb
fbld
push
test
dec
xchg
mov
jnp
ljmp
or
sub
jg
lea
sbb
push
or
test
pop
xlat
sti
mov
xchg
add
jo
frstpm(287
in
jmp
adc
imul
mov
das
fwait
sbb
dec
mov
ret
mov
xchg
out
je
mov
dec
dec
jg
popf
fsts
loop
repz
add
call
and
push
stos
dec
shr
cltd
jo
pop
mov
push
xor
sub
add
andl
out
sub
jnp
add
test
lea
bound
jnp
cld
push
cmp
out
aad
jp
hlt
inc
jnp
or
aam
pop
js
push
push
xchg
js
ficomps
and
sbb
jno
scas
mov
jb
fimuls
cld
adc
or
or
idivb
jl
push
imul
jmp
sbb
jmp
jns
or
mov
cmp
ljmp
ds
dec
xchg
adc
mov
push
inc
insb
je
daa
push
push
mov
adc
test
and
jb
insb
and
mov
in
lcall
call
cli
push
pop
inc
orb
and
js
ds
pop
rclb
pop
inc
push
inc
subl
adc
pop
mov
push
fwait
cmp
dec
add
aaa
test
dec
movsl
adc
mov
sbb
add
lods
int3
mov
cmp
mov
in
sbbb
lahf
pop
cmp
cmp
jnp
imul
orl
loop
push
mov
dec
xor
cmpsb
inc
out
pop
add
or
daa
mov
loope
aaa
lds
cmc
xor
test
pop
sub
leave
mov
pop
test
loopne
inc
shl
add
pop
in
fwait
push
rol
stc
cmpsl
sub
add
lcall
push
sbb
mov
or
test
je
mov
mov
jns
mov
sub
cmp
inc
test
adc
subl
xchg
add
jle
xchg
inc
aas
push
xchg
add
jmp
adc
xchg
sub
jne
xchg
mov
mov
push
cltd
imul
fs
iret
out
scas
test
outsb
push
out
or
xor
push
xchg
flds
ficompl
adc
iret
out
sbb
mov
das
pop
add
stos
movsb
and
cltd
das
gs
pop
inc
popf
sbb
push
or
mov
outsl
sbb
clc
dec
mov
add
es
aam
clc
incl
xchg
cmp
sbb
das
push
pminsw
sbbb
out
rorb
cli
push
lret
and
xchg
ja
mov
lods
pop
je
xor
pop
fidivrl
jg
push
sub
jno
movsl
cwtl
mov
cmp
inc
insl
or
cwtl
sbb
mov
inc
or
mov
jne
xchg
out
add
or
cmp
rolb
adc
outsb
xchg
sbb
gs
dec
sub
cmpsl
jg
adc
les
aam
outsl
out
adc
andl
mov
out
shll
inc
pop
sahf
xor
mov
sub
sub
sbb
adc
mov
xor
jae
pop
in
dec
add
icebp
jne
fs
and
divl
fcomps
rcll
mov
test
lea
cmp
mov
dec
decb
jecxz
cmc
insb
ret
sbb
jns
mov
dec
out
fisubrs
lock
fistpl
out
pop
add
loope
shlb
push
lods
les
add
iret
ljmp
mov
sbb
enter
movsb
cbtw
in
pop
cmpb
cmp
imul
shrb
mov
jmp
lods
in
loopne
cmp
imul
cmp
les
insl
ret
aas
mov
xor
roll
cmp
inc
inc
stc
add
sbb
adc
idivl
mov
sahf
imul
fst
xchg
xchg
inc
jnp
out
pop
rol
push
out
pusha
add
xchg
cmp
insb
mov
xchg
cmc
xor
ss
dec
cs
mov
rcrb
mov
es
pop
jecxz
jne
daa
xchg
push
pop
mov
mov
mov
repnz
inc
cmpsl
in
clc
ja
cli
je
mov
sub
inc
stos
jae
sbb
inc
in
pop
insl
divb
out
mov
xor
mov
push
and
ret
add
arpl
xchg
or
leave
addr16
sbb
cmp
jo
lahf
mov
mov
sbb
inc
xor
hlt
lahf
js
sbb
ljmp
flds
push
in
pusha
ret
clc
xlat
icebp
sbb
bound
scas
loope
faddl
adc
sub
adc
sbb
roll
jns
or
das
ja
dec
push
cli
roll
dec
and
add
jb
test
popa
cmpsl
aam
lret
push
stc
stc
push
scas
out
and
pop
iret
cmc
mov
clc
in
dec
loop
sahf
mov
push
test
stc
sub
or
dec
aam
into
sub
sbb
and
cmp
mov
jmp
cli
push
fs
sub
dec
enter
mov
fsubrs
ja
xchg
cmp
inc
push
adc
xor
icebp
test
int3
pop
insb
pop
jnp
cmp
mov
and
dec
jne
push
push
push
mov
popa
sahf
mov
xchg
xor
mov
sti
iret
xchg
jb
sar
mov
mov
jge
roll
and
loope
mov
sbb
lret
fcmove
dec
or
stc
bound
add
xor
jecxz
xor
pop
cmp
or
fsubs
pushf
sbb
adc
addr16
popf
shlb
dec
xchg
inc
out
jns
dec
and
call
clc
loope
push
fidivl
movsb
mov
negb
add
mov
sbb
inc
pop
sarb
sub
mov
cmp
je
xor
or
lret
push
push
lret
jae
pushf
loope
pop
push
sar
fcoms
stc
in
mov
sbb
sbb
cli
xor
mov
test
dec
scas
rorb
cmpl
test
mov
and
sbb
and
and
aam
cmpl
inc
rcl
addr16
imul
sbb
or
ja
roll
loope
and
and
mov
xor
popf
push
mov
mov
hlt
std
lock
xchg
and
das
xor
test
inc
ja
shrl
ror
inc
lahf
test
repnz
push
pop
add
mov
fldenv
cwtl
inc
mov
lahf
mov
je
mov
test
dec
pushf
out
scas
ffreep
pavgw
fcompp
rep
inc
cmc
test
add
jb
dec
xchg
inc
addr16
call
push
cmp
jnp
in
mov
ret
mov
pop
add
cmp
fs
in
and
inc
and
mov
lods
sub
pop
clc
clc
xchg
add
push
cmpsb
arpl
lret
daa
das
test
jp
mov
loope
and
lea
stos
or
stos
mov
push
xor
cmp
pop
push
and
shlb
jl
add
mov
imul
sub
add
or
mov
adc
lret
sti
jge
enter
jne
fwait
xchg
jbe
icebp
data16
dec
cltd
mov
ljmp
add
push
jecxz
aaa
inc
inc
push
lea
out
loopne
mov
outsb
fisubl
aad
hlt
jl
mov
xor
xchg
mov
jno
xchg
mov
incb
inc
pop
mov
mov
push
pusha
dec
inc
cmpsb
cltd
push
scas
and
aas
insb
add
imul
lock
jo
jne
mov
out
jne
inc
push
and
push
xchg
xchg
push
aam
cltd
sbb
push
jmp
cli
mov
mov
mov
out
jnp
ret
pop
or
mov
enter
les
mov
cmp
fdiv
subl
sbb
add
push
outsl
or
nop
addb
rcll
rorb
push
daa
dec
gs
in
xor
cmp
ret
dec
mov
jle
or
xchg
cmpsl
in
push
add
jo
mov
rorl
ret
cmp
xchg
mov
sbb
add
movsl
jns
sbb
fdivp
inc
pop
adc
push
or
daa
pop
mov
mov
std
shl
cs
cmc
dec
inc
andl
sbb
ficoml
sarb
sub
inc
lcall
and
test
mov
cld
sti
adc
push
pushl
xchg
push
sub
xchg
shl
aaa
or
cmpsl
pop
outsb
and
mov
and
lods
push
cmp
mov
lock
xchg
push
push
add
test
xor
xchg
mov
pop
int3
jbe
scas
xor
rclb
xor
mov
aaa
scas
stc
lods
xchg
xor
add
mov
mov
mov
xchg
mov
lock
mov
jb
mov
or
aad
adc
addr16
ds
add
and
dec
jb
sbb
lds
lcall
dec
xchg
lea
in
hlt
and
mov
push
orb
decl
ret
xchg
cmpsb
inc
fdiv
inc
lea
aaa
es
add
and
dec
jle
das
int
fistpll
push
stos
bound
jo
mov
test
mov
jge
outsb
ret
shl
cmpsb
loope
push
inc
xchg
pop
jge
or
mov
inc
mov
dec
adc
cmc
jl
mov
sarb
mov
int3
ficompl
cmp
mov
ret
fstpt
and
ljmp
inc
nop
in
sub
shll
dec
cltd
jo
cmp
mov
sbb
jp
ljmp
rcr
addl
push
in
cmp
clc
and
jb
in
int3
and
or
jmp
mov
sub
push
mov
testl
pop
push
push
xor
insl
jae
repnz
dec
jno
sbb
adc
pop
adc
sbb
loop
push
outsl
in
lock
push
cmpsb
loop
push
cld
fst
cmp
imull
daa
mov
ret
sub
aam
mov
xchg
ljmp
mov
pop
sub
shrb
mov
xchg
mov
lahf
test
jmp
paddq
movsb
push
xorb
inc
pusha
dec
and
gs
lods
xor
push
or
mov
inc
sub
sbb
or
hlt
pop
cmp
add
cmp
sub
dec
int3
test
insl
test
pop
sbb
or
ds
jmp
or
mov
lcall
aaa
push
imull
jnp
mov
bound
inc
pop
adc
dec
dec
adc
pusha
jne
aas
cld
add
mov
outsb
cmp
xor
and
push
fwait
sub
xchg
mov
movsb
mov
push
imull
rol
push
movsl
xor
mov
out
push
jecxz
mov
mov
sbb
mov
mov
insl
sub
or
mov
and
jo
sub
shlb
orl
cmp
jle
xchg
sarb
insl
aad
out
sub
mov
lods
test
xor
mov
out
imul
xorl
out
sub
loop
mov
fsts
int
push
adcl
sub
mov
xlat
add
popa
scas
movsb
and
jp
imul
push
hlt
sahf
mov
dec
gs
mov
lods
cmp
iret
xor
cli
mov
xlat
push
inc
data16
xchg
sti
rcrl
sub
cwtl
fdivr
sub
movsb
mov
jg
test
jle
js
es
lcall
imul
pop
and
insl
js
aam
sti
cmc
jmp
lret
enter
cmpsl
les
cmpsl
dec
ror
lret
xlat
cmp
sub
lahf
into
xor
or
push
xchg
aam
sbb
aad
mov
in
sbb
sub
and
jns
das
cmpsl
mov
scas
cltd
testb
sub
push
push
dec
jp
scas
adc
ss
movsb
sbb
dec
or
xor
fmuls
push
sbb
lcall
mul
push
out
data16
fnstcw
test
push
ret
or
add
jmp
pop
jno
lret
sahf
sbb
mov
and
adc
popf
gs
sbb
mov
xchg
xchg
shrl
sub
adc
and
sub
test
jnp
fsubl
mov
pop
pushf
aas
lods
add
mov
movsb
aad
jo
sub
mov
gs
in
mov
cmp
les
loope
out
xchg
jb
mov
popf
add
imul
insb
push
inc
outsl
sbb
into
into
fisttpll
dec
fistpll
inc
inc
fwait
lahf
adc
shrl
aad
fistps
lcall
nop
xchg
pop
mov
fisttpll
xor
xchg
xchg
les
cmpsb
loopne
sbb
xchg
and
pop
pop
into
add
xor
rcr
addr16
arpl
test
xchg
dec
mov
addr16
or
js
in
sbb
mull
xchg
sbb
cmpsb
test
fdivl
inc
cmp
mov
daa
pop
inc
iret
xchg
fdivrs
ret
sub
push
cwtl
cmp
jns
fisttps
xor
mov
in
cmpb
loop
in
shll
inc
push
jne
movsl
mov
scas
mov
insl
push
arpl
push
int
icebp
fcoml
xchg
and
cmc
imul
iret
xor
sbb
mov
jne
outsb
adc
lahf
push
arpl
cmp
cwtl
loop
push
inc
mov
mov
sbb
sub
negb
ret
int
or
aas
add
mov
fsubr
pop
mov
aam
cmp
inc
je
ffreep
arpl
fucomip
inc
inc
and
or
xchg
fists
or
js
xlat
jecxz
mov
popa
fdivrl
sub
lret
dec
push
fidivrl
xchg
xlat
dec
and
adc
sbb
outsb
push
fdiv
pop
outsb
pop
xchg
popl
mov
inc
sub
push
mul
cmp
clc
cld
mov
adc
xor
mov
push
xchg
jmp
sbb
inc
insl
inc
mov
push
and
xor
jbe
out
adc
cs
adc
mov
fistpl
lods
add
loope
or
mov
nop
dec
or
push
jo
outsb
lret
arpl
scas
sar
nop
mov
ficoms
daa
cmpb
or
and
jno
pmaxub
or
fistps
sbb
mov
push
inc
sbb
pop
or
mov
dec
fs
repz
mov
jge
mov
xlat
test
pop
jle
mov
push
xchg
rorl
cli
int3
mov
js
movb
pop
cmp
idiv
mov
fwait
jecxz
pusha
push
out
std
inc
arpl
in
xchg
push
pop
xor
mov
adc
lock
jbe
leave
xchg
gs
and
stos
data16
add
adcl
mov
loope
xor
enter
nop
jae
je
in
ja
imul
out
and
scas
je
push
aaa
stc
xor
xor
bound
sbb
shlb
pop
dec
xor
lret
aaa
mov
add
movsb
push
mov
pusha
mov
and
arpl
or
mov
test
adcl
iret
pop
inc
jno
mov
dec
mov
pop
dec
xchg
pop
test
outsl
mov
rorb
push
sahf
movsb
fadds
cmp
jo
pop
das
pop
outsb
lret
or
cmp
mov
push
test
addr16
xchg
leave
shl
dec
xchg
pop
lea
pop
in
push
ljmp
inc
dec
iret
jmp
lods
cmpsl
pushf
and
mov
rorl
lret
push
insl
lcall
ss
mov
aaa
inc
push
roll
lods
fucomp
repnz
dec
mov
out
mov
mov
cs
in
cli
xchg
sub
test
out
jo
sbb
rcll
or
imul
lds
test
mov
xchg
sbb
ljmp
mov
hlt
lock
fwait
sbb
adcl
jae
xchg
lret
shrb
xchg
pop
not
fists
and
negl
in
adc
xchg
push
or
out
mov
loope
jecxz
mov
int
dec
mov
fwait
adc
mov
mov
mov
adc
inc
cmp
fyl2x
flds
int3
mov
xchg
in
icebp
xchg
cmp
stos
popa
or
mov
cmpsb
ret
cld
outsb
mov
sub
out
push
sahf
shrb
ds
jecxz
es
shl
jae
mov
hlt
or
pop
push
dec
xchg
cmpsl
pop
fsubrp
or
pop
dec
data16
dec
adc
popf
clc
in
pop
lahf
fstpt
icebp
mov
or
push
loope
gs
rcll
sub
and
push
fisubrl
adc
cmp
dec
movsb
pop
std
push
mov
addr16
shld
and
test
rclb
cmp
rclb
ljmp
or
aam
dec
push
mov
cmpsb
jbe
xchg
shll
cmp
in
add
ds
jnp
dec
cmp
inc
cwtl
jge
sub
cmc
sbbl
lret
and
mov
test
call
lret
fstps
ds
repnz
into
sbb
orb
in
mov
push
mov
outsb
lahf
sti
in
mov
and
inc
lret
sbb
andl
add
inc
pop
cmpsl
xor
xchg
repz
mov
insb
mov
enter
cmc
movl
aas
adc
mov
add
dec
pushf
mov
gs
sub
cwtl
mov
ud2
stos
stos
stos
mov
test
sbb
cld
jno
add
pop
and
sub
mov
pop
lcall
add
pushf
lret
adc
into
mov
push
hlt
prefetcht1
scas
jns
jnp
dec
xor
jg
mov
add
push
scas
mov
in
in
popf
sub
xchg
les
rorl
mov
sub
inc
jle
or
and
mov
mov
pop
outsb
push
fimull
xchg
sub
add
xchg
ret
inc
mov
ret
cmp
push
movsb
push
dec
ja
mov
xchg
jl
inc
mov
test
jae
cmp
out
xchg
sbb
mov
std
into
mov
adc
sub
jp
sbb
in
mov
fwait
mov
jae
and
pushf
mov
sub
mov
mov
xchg
mov
and
inc
lret
sub
in
add
jmp
sahf
and
xchg
mov
iret
iret
ret
sti
pop
daa
xor
jp
push
mov
stos
mov
mov
into
gs
mov
dec
scas
jbe
pusha
dec
pop
mov
int
mov
int3
add
jo
in
fisubrl
push
test
int
jmp
dec
lods
adc
xchg
sahf
add
jp
adc
loop
inc
out
dec
inc
lods
cmpsb
ds
pushf
xor
xor
fists
je
and
push
jbe
ss
cmc
cmp
outsb
and
inc
imul
jecxz
dec
test
aam
mov
mov
pop
push
xchg
inc
or
xchg
adc
pop
shr
pop
in
popf
push
js
jmp
test
out
jge
lahf
mov
lea
adcb
mov
cmp
dec
andl
xor
iret
inc
loop
mov
adc
jmp
imul
pop
mov
loopne
push
call
sbb
xchg
mov
or
fistl
sub
ds
xchg
gs
xor
repz
call
outsb
or
pop
mov
lock
mov
ss
imul
dec
in
inc
or
movsl
out
push
xchg
inc
mov
xchg
dec
push
fwait
cwtl
jg
adcl
aam
cs
mov
cmp
bound
fsts
adc
mov
push
in
lea
scas
pop
nop
cltd
mov
out
rcl
int3
cmp
pop
repz
je
pushf
mov
cmp
pop
movb
fstps
iret
rorl
sub
add
sarb
cmc
ss
sbb
test
cmpsl
int3
mov
leave
xor
mov
xchg
cmpsl
xchg
cmpsl
sub
push
in
mov
adc
fistpl
cmp
stc
mov
mov
xchg
jno
lods
loopne
jecxz
test
cli
cltd
test
loopne
aam
xchg
add
int
mov
out
aas
cld
sarb
in
pop
test
mov
lods
lds
in
adcl
xchg
outsb
lods
imul
ja
inc
mov
push
xor
push
mov
ror
adc
shrb
gs
ss
add
mov
fists
sbbb
cli
mov
aas
and
into
leave
lret
ja
sub
push
frstor
lds
stos
xchg
jle
add
sahf
scas
subb
xchg
adc
or
iret
inc
test
loopne
jge
test
or
sbb
out
lods
mov
inc
ds
divb
idiv
jp
and
jle
add
inc
je
xor
jle
ss
pop
nop
insb
ds
jp
notl
popf
sub
mov
xor
mov
movsb
daa
movsb
jmp
xor
jl
cld
cli
xor
xor
mov
adc
dec
fdiv
sbb
shll
adc
add
fldcw
adc
sub
adc
push
loop
in
cmp
in
test
cmp
inc
rorb
sbb
mov
lods
aam
cwtl
lea
dec
les
xor
xor
outsl
push
xor
mov
xorl
pop
out
cmp
push
xor
aaa
sar
ret
sub
cmpb
cmp
imul
dec
fstpl
js
imull
pop
inc
mov
imul
jbe
fistl
mov
cmpl
movsb
dec
add
xor
cmpsb
outsb
sbb
sub
mov
cmpsl
lcall
jo
cmp
imul
or
fbld
or
loope
xor
lock
xchg
inc
or
scas
daa
cli
imul
push
jmp
add
popf
or
call
faddl
mov
rclb
jno
out
pop
jmp
jecxz
int
cs
dec
mov
imul
and
out
roll
aas
and
fwait
call
daa
outsb
xor
sbb
sbb
lods
popa
cmp
rcrb
jne
movsb
lods
lret
lret
push
mov
mov
and
imul
and
lea
test
mov
fadds
xor
inc
cmp
mov
mov
leave
pusha
shll
shl
sub
cmpsb
pop
scas
out
pop
add
add
popa
jmp
lock
push
adc
aaa
popf
and
mov
andb
jg
mov
sbb
mov
pop
call
cmc
mov
xchg
mov
fildl
pop
insb
sub
scas
mov
adc
bound
pusha
pop
out
jns
cmp
repnz
out
xchg
int
mov
or
fcomp
insb
xorl
push
jp
cmp
mov
addr16
adc
or
push
cmp
lods
xlat
sub
testb
aaa
lds
push
fsubrp
push
stos
sub
mov
jp
arpl
sahf
cmpsl
das
xchg
outsb
jae
dec
mov
jge
fcmovnbe
bound
lahf
inc
mov
in
dec
add
pop
or
sub
mov
and
mov
mov
scas
cmpsb
ds
mov
sub
out
push
lret
push
test
cltd
ret
push
cld
aad
outsl
xor
dec
cltd
dec
ds
pop
stos
adc
adc
fldenv
popf
mov
sti
mov
popf
push
xchg
out
int3
fcoms
fimull
jae
lcall
into
addr16
pop
xor
inc
jecxz
aaa
xor
repnz
adc
mov
jp
mov
or
bound
and
out
loopne
enter
and
jb
sub
es
inc
popf
mov
lret
adc
test
inc
cmp
inc
push
mov
or
fs
out
or
ss
movsb
mov
faddl
push
sub
jmp
arpl
xor
mov
aam
cwtl
inc
movsb
cmp
sbb
adc
mov
xchg
mov
xchg
push
fsubs
and
add
movsb
push
sub
sub
sbb
add
push
sarl
sbb
mov
test
mov
dec
test
stos
mov
sub
mov
in
adc
je
or
pop
negl
xor
mov
lcall
enter
and
cwtl
sub
mov
mov
shrb
imulb
jns
dec
mov
test
jecxz
sbb
jecxz
ljmp
sub
mov
bound
aaa
ds
xchg
jno
sbb
jge
lahf
push
sub
push
loope
lds
repnz
ret
rol
js
sahf
add
fistpll
or
pop
xor
nop
clc
leavew
mov
clc
inc
mov
sub
rcl
sub
inc
pusha
dec
xor
stos
mov
ds
test
fcoms
cmp
xor
gs
inc
mov
pop
sub
lods
int
aas
into
scas
mov
cmp
jno
lcall
jle
imul
inc
mov
mov
mov
xchg
xchg
mov
jmp
notb
jg
inc
sbb
fdivrl
xor
push
pop
mov
out
add
hlt
repnz
icebp
xchg
out
mov
jmp
dec
vmulpd
ds
jbe
ss
mov
jae
xor
add
mov
push
mov
sarb
shlb
jle
outsb
loope
das
sbb
cmp
xchg
iret
bound
cmpsb
push
ficoms
fs
mov
adc
cmp
jmp
popl
mov
movsl
jbe
jge
ljmp
push
sahf
lcall
daa
xchg
cmp
inc
insl
fs
dec
mov
dec
xchg
mov
pop
add
xchg
jp
push
sbb
or
ja,pt
push
sbb
imul
test
pop
insb
dec
mov
jae
sub
aam
sub
jg
sub
into
sbb
movsb
adc
leave
inc
into
and
ja
pop
aas
cmpsb
lahf
les
and
rcrl
popf
test
lods
dec
popf
aaa
fistl
pop
jl
faddl
inc
fcompl
xchg
dec
stos
test
data16
ds
add
dec
or
push
sub
push
and
lods
loop
ljmp
mov
mov
sahf
test
in
push
int3
push
repnz
jo
jle
shrb
mov
dec
jmp
xor
call
mov
xor
jecxz
cmc
or
cmc
mov
cld
cmovnp
mov
jnp
mov
push
je
mov
mov
mov
cmp
mov
aam
add
or
int3
jle
repz
inc
xchg
jl
sub
jnp
test
add
int
sub
push
fisubl
xchg
aaa
cmpsb
push
sbb
js
pop
pop
icebp
and
inc
xchg
hlt
or
sub
roll
jge
xlat
pop
mov
adc
and
sub
adc
xchg
push
fldpi
fdivs
or
inc
mov
icebp
jecxz
int3
ljmp
pop
pop
orl
shll
push
add
stos
pop
in
push
xchg
jb
call
or
aaa
fnstcw
out
cmpsl
add
pop
testl
adc
popa
lahf
cmp
dec
sub
aad
push
test
mov
jnp
xchg
rcrb
divb
pop
add
movsl
jno
outsb
in
inc
in
jg
or
movsb
or
cmpsb
out
xchg
cmpsb
stc
jp
movsl
mov
bound
inc
mov
cmc
movsb
xchg
or
sahf
movb
cmp
cmp
inc
xchg
cmp
xor
sti
int
arpl
aas
cmp
jmp
shlb
inc
adc
pop
mov
or
ds
jle
fstpl
adcl
cmpsl
jno
mov
xchg
inc
cmp
fdivrs
adc
popa
mov
inc
and
cwtl
aaa
test
ret
push
mov
mov
xlat
ffree
outsb
xchg
lock
data16
push
pop
add
std
mov
adc
fistpl
ss
ret
xchg
rorb
sbb
and
cmp
filds
xor
mov
jb
sub
adc
ljmp
cmpsb
cmp
sahf
in
or
imul
push
outsb
xchg
or
mov
mov
clc
lods
add
test
and
dec
push
jne
xor
ljmp
jmp
dec
jns
ljmp
imul
iret
addl
in
jb
push
decb
jno
out
pop
insb
xchg
dec
sub
mov
pop
rcll
push
imull
sub
repnz
mov
out
or
rol
xor
out
cmc
cmc
addr16
int
sub
xchg
int
jge
rclb
shrl
rcrb
or
mov
push
aaa
leave
jecxz
fld
cld
cli
push
xor
dec
or
jnp
jecxz
hlt
loop
cld
sbb
test
or
dec
inc
or
xor
pop
sarl
lea
outsb
movb
clc
and
pop
cmp
dec
fnstenv
lods
lock
hlt
in
fdivr
lea
add
or
jle
dec
dec
insl
inc
xor
scas
cmp
jp
jnp
add
imul
add
push
in
cli
pop
mov
jl
pop
push
pop
xor
sub
mov
adc
pop
pop
lret
in
xchg
js
mov
mov
iret
stc
inc
adc
lods
cld
nop
cmp
loop
shld
mov
aam
jae
hlt
rolb
or
out
and
jg
ret
sub
mov
sti
jp
out
pusha
ret
jle
orb
jnp
mov
or
cmp
mov
dec
inc
cs
clc
jb
stc
or
jae
outsl
xchg
scas
adc
push
hlt
pusha
or
add
icebp
adc
adc
or
and
mov
dec
daa
sbb
push
aaa
mov
popf
ds
and
jle
sahf
sbb
cmp
push
and
xchg
lcall
out
pop
inc
paddusb
xor
lea
divb
xor
cmp
daa
testb
sub
cwtl
mov
xchg
xchg
mov
mov
nop
push
inc
sbb
mov
fisubs
jecxz
sbb
insl
mov
imul
dec
xor
push
mov
das
xchg
scas
xor
add
push
lret
xchg
std
mov
and
and
push
out
xchg
push
cltd
jae
mov
lock
push
fsub
push
std
xorl
adc
les
sub
fwait
adcb
push
pop
adc
rcrb
and
rcrl
emms
dec
test
fimull
es
dec
xor
push
fidivrl
xchg
pushf
adcl
sub
repz
daa
pop
add
test
int
xchg
mov
xlat
out
jno
flds
dec
addr16
test
push
pop
jo
int
cli
repz
fisttps
mov
or
add
xchg
xchg
or
loop
sti
or
and
pop
pushf
orl
outsl
mov
pop
pop
sbb
inc
inc
add
adc
aas
xchg
sub
mov
xlat
xlat
nop
pop
mov
or
sbb
adc
rorl
xchg
or
test
fs
push
popf
add
dec
out
mov
sub
enter
cld
ss
roll
inc
sbb
adc
fucomi
xor
adc
aad
adc
jl
mov
sbb
mov
or
es
jge
popa
or
jne
add
pop
repnz
movsl
mov
push
cmp
aas
fisttpll
shl
jb
mov
loop
cmp
aaa
in
fidivs
cmp
or
push
in
jo
and
cs
jp
or
ret
sbb
inc
inc
push
adc
ret
lods
and
lock
inc
mov
lahf
fsubrl
cwtl
inc
push
mov
aaa
imul
int3
cmp
or
xchg
fwait
scas
pop
cmp
lds
xchg
lret
insl
repz
es
ret
mov
pop
push
test
xchg
nop
std
dec
loopne
rcr
or
sub
sub
hlt
subb
movsb
mov
or
push
mov
mov
shlb
stos
jp
add
ss
lock
std
pop
addr16
and
mov
adc
adc
xchg
xchg
xchg
push
dec
mov
or
mov
inc
scas
loope
or
cli
sarl
imul
xchg
insl
add
sub
xchg
lods
xor
cmp
xor
sbb
outsl
mov
jns
mov
pop
stos
add
push
mov
fsts
hlt
stos
dec
je
int
loope
mov
clc
std
lods
dec
lods
inc
test
xor
sbb
sub
lcall
and
sub
and
dec
or
hlt
insb
stc
insl
or
aaa
aad
mov
clc
pop
cmp
cmp
dec
orl
xchg
out
cmp
fidivl
mov
faddl
add
aas
loop
lds
fmull
lahf
sub
lds
xchg
pop
lret
cmpsl
sbb
nop
push
xlat
insl
and
mov
enter
std
mov
xchg
or
lods
hlt
test
mov
pop
fld
jo
jl
arpl
test
aas
xchg
mov
movb
cs
xchg
out
mov
xor
adc
lahf
ret
pop
inc
xchg
xchg
movsl
ss
add
shrb
pop
pop
out
mov
rol
outsb
movl
ljmp
xor
cmp
lods
out
call
scas
ja
mov
sbb
inc
mov
testb
dec
ret
jae
aas
lock
jb
repnz
out
mov
cmp
cmp
or
add
lahf
popa
sarl
inc
mov
test
jno
jo
in
stos
add
fbld
mov
les
cs
out
lret
out
movsl
xchg
mov
or
mov
jne
mov
adc
dec
in
clc
adc
fcoms
in
aas
dec
add
imul
pusha
sbb
cmpsb
or
mov
jp
sub
fisubs
lods
fxch
imul
lods
mov
jmp
scas
mov
outsb
jns
pop
addr16
stos
dec
out
cltd
arpl
pop
into
mov
pop
stc
sti
jp
jmp
stos
sub
enter
fimull
mov
mov
push
dec
lds
push
repnz
je
cmp
stos
sti
jge
movsl
add
dec
mov
shl
aas
cmpl
stos
mov
and
pop
xchg
jno
xorb
and
divl
push
shlb
movsb
mov
add
add
jbe
repz
cmp
lret
rcrl
mov
sbb
mov
adc
dec
add
xor
mov
rcl
aam
jle
stos
or
cmp
push
xor
sbb
leave
push
ror
mov
imul
in
xor
or
sbb
xlat
pop
cs
xor
mov
mov
fdivs
push
mov
das
sub
lret
xor
jo
mov
leave
lock
mov
bound
cmc
ljmp
fimull
ja
insl
dec
xchg
dec
pop
sbb
dec
pop
xor
push
dec
loop
cmp
lods
mov
ja
out
daa
into
adc
popa
in
or
add
je
and
rcll
dec
clc
dec
aaa
pop
cmp
xor
fcmovnu
mov
ret
xor
les
sub
nop
hlt
jle
sub
scas
mov
sub
sahf
test
in
jbe
std
les
shlb
insl
adc
mov
call
mov
repnz
std
xchg
das
stc
sbb
int3
inc
lock
and
and
cmp
imul
mov
popf
fstpt
xchg
mov
push
pop
dec
popf
push
cmpsl
cmp
or
push
lds
cltd
scas
jecxz
call
in
fsubs
pop
faddp
js
push
repz
movsl
push
add
stc
movsb
bound
cs
push
daa
imul
addr16
cwtl
push
popa
push
mov
fstpl
lods
mov
xchg
push
sub
sbb
pop
add
fcmovb
dec
repnz
out
jmp
outsb
mov
or
iret
jmp
sarl
mov
inc
xchg
jmp
mov
mov
sti
outsb
cmp
xchg
imul
decl
dec
out
jne
movsb
ss
pop
push
mov
push
and
sti
fwait
insl
mov
jb
and
sbb
ljmp
push
rcrl
or
jb
aad
cld
or
popf
pop
sbb
jg
adc
jecxz
jge
scas
mov
mov
cmp
gs
fstpt
cwtl
mov
push
popa
es
mov
jno
xorl
pushf
les
insl
mov
rcll
imul
lcall
insl
xchg
scas
and
adc
or
das
push
pop
lea
cmp
aas
lock
sub
mov
inc
pop
jmp
divl
mov
mov
aad
mov
stc
arpl
dec
adc
cmpl
sbb
jl
fstps
shlb
xchg
xchg
ret
mov
jae
lret
int3
or
es
orb
repnz
lcall
pop
xchg
lods
rclb
and
add
mov
dec
jne
iret
push
aam
push
sbb
cli
and
and
hlt
xor
sub
mov
push
or
and
and
mov
jmp
pop
mov
dec
aam
pusha
gs
in
sub
dec
inc
lahf
push
and
dec
call
jae
xchg
lcall
mov
loopne
mov
xchg
adc
cmc
sar
pop
add
cmp
decb
sub
loope
mov
push
push
rcrl
push
lds
in
movsl
ret
xor
mov
fcomip
add
dec
add
jle
mov
jecxz
test
lea
sub
cmp
push
adc
pusha
add
sub
fwait
loope
xchg
rcll
insl
movsl
fdivl
popf
lret
call
adc
mov
inc
push
test
xchg
enter
push
pushl
pop
aam
pop
mov
mov
dec
testl
pop
mov
js
xor
mov
sub
scas
in
imul
int3
xor
lods
cs
cmp
sub
dec
in
and
bound
je
arpl
andb
jmp
fdivr
mov
fstps
pop
xchg
mov
sbb
xlat
mov
ss
mov
inc
clc
icebp
test
cmpsl
hlt
iret
insb
test
mov
adc
mov
popa
scas
repz
aad
xchg
orl
mov
push
cmp
mov
inc
daa
add
stos
cli
lods
sbb
mov
insl
sarl
ljmp
hlt
aam
fldenv
mov
mov
dec
xchg
subb
arpl
sub
ljmp
xor
repnz
mov
mov
adc
inc
loop
jbe
lret
or
dec
inc
mov
jnp
xor
pop
and
cmc
clc
xchg
and
mov
mov
mov
movsb
adc
rorl
loope
je
jne
cmc
fnsave
jle
lock
push
rolb
lea
xor
xor
js
lods
jmp
test
sbb
sub
mov
adc
push
in
lock
push
or
movsl
dec
cmp
push
jb
lret
lock
adc
insl
mov
xchg
xor
add
imul
jae
lret
aad
push
pop
addb
push
mov
jge
les
insb
aas
pusha
mov
les
aaa
pop
fs
mov
sub
inc
or
and
iret
mov
fs
and
out
leave
adc
jle
mov
popa
add
mov
adc
fwait
lahf
mov
arpl
cmp
mov
lds
insl
jnp
inc
fcmove
sahf
pop
add
adc
jp
adc
mov
xor
rcrb
stos
fisubs
outsl
sbb
jmp
jmp
popw
push
psubq
dec
xor
lret
and
add
push
clc
in
mov
ss
dec
jp
sub
mov
inc
dec
push
and
dec
dec
icebp
xlat
and
rolb
xchg
scas
mov
and
mov
mov
mov
inc
push
mov
push
in
xor
mov
out
and
cmpsl
repz
outsb
mov
lret
lret
push
sub
jnp
sti
inc
add
popf
jle
jb
xor
lcall
pop
pop
loop
faddl
and
hlt
xor
cmp
push
sub
xor
insl
push
lretw
and
push
pop
nop
popf
push
mov
imul
adc
jge
je
mov
cmp
mov
aaa
test
add
mov
jo
lea
je
movsb
in
adc
sbb
xchg
push
hlt
loope
cmp
sbb
xchg
push
mov
xor
jne
pop
imul
add
cmp
aam
push
mov
mov
push
dec
mov
push
ret
mov
insl
in
xchg
test
data16
adc
and
sbb
fists
sbb
push
jb
leave
dec
sbb
xchg
test
mov
pop
push
pop
jae
imul
xchg
pop
cmp
aas
cmp
cmpsl
inc
aas
jae
mov
jp
arpl
std
sbb
enter
imul
cmp
xchg
mov
and
add
ficompl
cld
js
adc
pop
xchg
xchg
out
mov
sub
outsl
lret
xchg
jno
cltd
in
dec
data16
addl
repnz
ror
loope
mov
xor
inc
cld
cmp
popf
add
jle
pop
push
test
dec
pop
test
scas
dec
leave
fidivrl
pop
dec
mov
shl
sbb
dec
jle
imul
sbb
cmc
add
cmpsl
push
or
clc
pop
in
and
or
repnz
inc
rorb
jmp
add
dec
out
fnsave
mov
sbb
out
leave
fisubl
push
jae
fsubrl
push
call
xor
test
in
sub
int3
xchg
cmp
jp
xorl
test
inc
hlt
out
push
or
sub
cmp
mov
ljmp
lret
xchg
insl
lock
pop
xchg
fsubrs
jp
lock
outsl
pop
adc
xchg
mov
and
mov
cwtl
popa
push
lods
data16
mov
jg
shlb
insl
andb
popa
push
adc
aas
jo
jb
mov
lret
jno
loop
jmp
daa
pop
andl
push
lds
pusha
jo
and
jbe
push
jnp
mov
mov
test
sub
push
inc
pushf
and
loop
and
mov
enter
dec
or
mov
insl
test
mov
and
adc
call
adc
mov
pop
insb
push
jae
cmp
jp
pop
movsl
add
mov
pop
outsl
cwtl
insb
sbb
mov
js
fnstsw
dec
aas
adc
mov
cli
adc
mov
lea
in
out
jbe
aas
scas
jle
jmp
popa
dec
dec
mov
les
daa
into
iret
jp
ret
add
pop
andb
popf
pushf
sarb
fcomi
mov
mov
das
push
bound
xor
xor
frstor
fcom
lds
add
pop
je
sub
jp
arpl
loop
out
cmp
lea
adc
jle
dec
imul
int3
sub
xchg
push
mov
push
sub
int
pushf
sub
add
jnp
pop
jb
repz
sub
xchg
sbb
mov
rcrl
ja
daa
or
xlat
leave
adc
xor
loopne
push
mov
mov
fdiv
or
mov
pusha
jp
xor
jae
and
add
insl
sub
pop
cli
mov
imul
insl
lods
pop
mov
aaa
in
mov
insl
or
mov
xchg
or
cmpsw
mov
in
dec
movl
mov
mov
xor
bound
jecxz
mov
mov
insb
outsb
enter
fidivs
cli
add
and
jmp
cs
inc
jno
ret
or
hlt
pop
stos
cli
and
push
cmp
mov
add
push
fwait
stc
adc
icebp
sarl
dec
das
js
je
xchg
xchg
jnp
cmp
and
jae
xchg
insb
fisubrs
or
mov
loope
adc
out
test
jecxz
ficomps
add
add
inc
sub
aas
mov
jecxz
xor
repz
and
cmp
sub
outsl
ret
dec
adc
xorl
fdivs
fisubs
scas
into
out
aaa
mov
cmpsb
push
ud2
out
and
dec
stos
push
xlat
jg
mov
inc
mov
sbbb
fwait
jmp
push
jnp
inc
icebp
imul
xor
clc
loop
sahf
mov
daa
mov
dec
cwtl
and
test
or
inc
xor
nop
push
xor
cmc
sub
pop
jns
sbb
aaa
es
xor
movsb
pop
call
test
mov
cmc
xlat
bound
sbb
shrb
push
push
sub
adc
bound
pop
mov
out
int
in
cmpsb
cmpsl
sbb
xlat
lods
and
jne
add
mov
xor
cltd
push
icebp
add
push
inc
or
popf
out
dec
cwtl
pop
sbb
daa
stc
adc
xor
cmpsb
mov
dec
xor
pushf
repnz
xchg
js
xor
inc
pop
xchg
ret
add
out
shl
hlt
cmp
lret
movsl
xchg
sub
aas
mov
and
loop
in
or
out
out
cmpsl
mov
sub
mov
or
aad
push
jecxz
mov
add
jl
push
mov
push
inc
les
sbb
xchg
shlb
loopne
outsb
xor
in
and
adc
cs
test
push
sub
or
push
cmp
cmpsl
in
flds
imul
insb
fst
mov
and
push
popf
std
cld
shr
stos
mov
shrl
adc
sbb
out
test
enter
adc
pop
sub
cli
jmp
mov
mov
test
adc
cs
push
fs
xlat
inc
fdivrp
sbb
cltd
hlt
pop
xchg
insl
dec
loope
addr16
mov
mov
sub
add
sbb
movsb
sbbb
and
dec
xchg
rcll
pop
jp
insl
imul
adc
xchg
push
adc
lock
push
hlt
adc
mov
mov
inc
idivl
mov
cmpsb
dec
jecxz
loop
cmp
xor
stos
ljmp
add
sbb
adc
mov
jbe
insl
or
aad
rolb
pop
loopne
lds
xor
inc
mov
inc
or
repz
mov
adcb
inc
int
lods
mov
jnp
cmp
pop
add
lock
add
mov
xchg
jbe
les
xchg
xor
sti
test
jle
or
pop
gs
cli
xor
call
and
jb
xor
in
jns
cmc
jne
mov
mov
test
mov
pop
imul
in
cwtl
jp
pop
hlt
les
inc
in
test
mov
mov
std
test
out
into
in
stc
notb
mov
push
inc
cwtl
scas
push
mov
in
jae
fcmovnbe
cltd
fsubp
sarl
js
cltd
xor
xor
mov
in
rorl
ret
arpl
sub
push
leave
in
ret
into
push
out
insl
insl
cs
std
imul
mov
clc
into
jl
mov
sti
mov
pop
add
push
push
mov
sbb
or
lret
enter
out
stc
xchg
push
shlb
cmp
mov
sub
cmp
int3
aam
fildll
out
pushf
mov
or
lea
dec
cmp
push
adc
movsl
rol
inc
xchg
cltd
pushf
je
push
out
cli
rclb
pop
shrl
mov
rcrb
lret
movsb
add
dec
imul
dec
add
fsubrl
aaa
mov
push
dec
dec
mov
cmp
sub
cmp
mov
sti
xor
jmp
sub
jp
test
xchg
sub
or
push
jg
mov
mov
fldenv
leave
loop
mov
imul
test
inc
imull
xchg
fisttpl
adc
repnz
cmp
int3
nop
or
xor
xchg
jne
dec
jl
imul
cmpsb
or
int3
pop
and
xchg
fistpll
pop
mov
gs
xchg
into
and
jmp
jg
shll
pusha
mov
mov
dec
sub
adc
scas
stos
outsl
lret
mov
and
call
fistps
jno
jno
cwtl
lea
ja
pop
pop
into
mov
movsl
inc
cmp
jo
pop
out
movsl
sbb
inc
mov
ret
cmp
loope
push
push
or
cmp
xlat
pop
push
add
adc
mov
bound
outsl
dec
sarl
adc
fistps
fisubs
rcl
popf
sbb
sbb
inc
jae
add
pusha
and
pop
icebp
mov
sti
in
mov
fldl
inc
xor
xchg
mov
js
es
sbbb
ds
mov
nop
int
pop
sub
dec
lret
jg
fbstp
rcl
push
loope
daa
cwtl
lea
cmp
add
lret
sbb
pop
push
test
nop
jmp
stos
iret
pushf
sahf
pushf
dec
iret
ja
int
cmp
inc
push
mov
test
cwtl
jl
mov
dec
or
pop
imul
test
sub
stc
repnz
insb
push
jmp
push
pmaddwd
xlat
inc
xor
imul
movsl
mov
xor
mov
and
and
sti
sub
je
sub
roll
and
mov
jae
dec
lock
mov
cltd
in
es
movsl
shlb
hlt
xor
push
rcr
divl
jbe
jbe,pt
test
ja
push
fs
xchg
add
inc
inc
adc
push
outsl
or
aam
mov
subl
loope
pop
cmp
int3
push
mov
ja
idivl
pop
stos
inc
fidivl
push
das
mov
iret
call
sub
test
fidivrl
pop
hlt
movsb
pushf
ds
and
rcrl
pop
call
or
leave
xchg
in
inc
int3
sar
out
dec
movsb
sub
sub
sbb
dec
das
loop
hlt
rolb
lods
jp
add
pop
dec
ja
out
mov
lods
sub
push
mov
mov
jnp
cmp
movsb
xor
test
inc
or
in
repnz
mov
rcrl
pop
mov
ja
mov
aam
imul
add
mov
fcoms
pushl
rcrl
lods
rcl
and
scas
adcb
push
or
mov
fsubs
das
mov
scas
pop
push
inc
movsb
mov
adc
out
scas
das
andl
pusha
stos
jae
adc
sub
cli
scas
lret
fisubrl
push
aaa
xchg
or
cltd
xrelease
cmp
sbb
pop
pop
clc
push
sbb
arpl
jno
int
repnz
daa
daa
rcrl
loopne
push
mov
in
fists
mov
out
push
lahf
das
js
push
mov
xor
stos
jb
cwtl
pop
into
jge
or
hlt
nop
iret
jge
xchg
push
mov
xchg
test
ds
jle
popa
rclb
cmp
ljmp
insl
lods
sub
popf
inc
lods
push
pop
call
adc
sub
fsubrs
and
push
test
inc
xor
sub
pop
out
ljmp
call
add
negl
and
inc
dec
jbe
cmp
sub
push
pop
pushf
mov
dec
mov
or
sub
pop
mov
lods
in
fldcw
pop
into
pusha
mov
mov
mov
add
addr16
dec
pop
lock
cli
mov
aad
xchg
mov
shr
jne
inc
daa
or
aas
out
sti
dec
std
dec
mov
xchg
sahf
int
add
in
mov
jl
xchg
pop
adc
aas
xchg
mov
in
fisttpl
pop
or
adcl
or
push
or
mov
cmp
jae
mov
sub
pop
int
xchg
inc
jnp
sbb
xchg
push
int3
outsw
or
pop
mov
mov
cmpsl
lock
adc
in
cmc
minps
incl
je
or
jl
lahf
xorb
inc
mov
inc
mov
or
out
or
mov
mov
pusha
sub
mov
xchg
lret
mov
das
jo
cmpb
inc
xchg
dec
pop
je
and
fcmovu
js
mov
add
sahf
imul
sahf
jecxz
jo
mov
scas
pop
dec
shll
jmp
into
into
mov
fiadds
mov
cmp
xor
mov
xor
add
inc
jno
fs
in
pop
ret
lcall
pop
mov
mov
and
sub
inc
sbb
and
push
loopne
mov
scas
ret
movsb
cmp
test
mov
mov
fs
cli
fs
pop
cmp
lea
int
sub
loopne
pop
shrl
push
das
mov
pushf
and
test
mov
add
jmp
dec
cmp
jbe
and
repnz
scas
enter
lret
cli
pop
icebp
stc
jb
mov
loope
xchg
vmovaps
imul
jnp
mov
mov
dec
or
inc
and
int3
pop
inc
add
repnz
rcll
out
xchg
mov
fimuls
and
jne
int3
and
bt
insb
popf
lea
or
in
je
lods
fidivrs
clc
pop
ja
pop
sub
inc
lock
pop
mov
clc
cld
scas
repnz
inc
icebp
notl
arpl
jbe
iret
cmp
stos
adc
mov
bound
sub
cmc
xor
cwtl
shl
mov
and
xor
fs
adc
mov
ja
inc
decl
je
xor
lret
xchg
mov
xor
imul
xchg
and
xlat
dec
lds
mov
not
mov
rcl
rclb
test
jae
stos
pop
mov
xor
jle
sub
fs
mov
hlt
dec
lcall
inc
sub
in
mov
or
inc
push
movsb
fdiv
xlat
aaa
xor
ret
or
sub
jge
adc
int3
pop
cltd
lcall
mov
sub
test
test
fwait
sahf
sub
lahf
cs
mov
iret
pextrw
cmpsl
loop
add
sbb
adc
aam
sarl
dec
jl
data16
dec
mov
aas
sbb
xchg
test
dec
inc
test
inc
fnstsw
in
add
add
add
mov
call
fmul
and
out
sub
xchg
jo
test
jnp
jbe
jne
scas
cmp
out
inc
scas
or
fdivr
dec
mov
stos
push
jnp
rcll
fiaddl
and
mov
adc
loope
cmpsb
daa
imul
outsb
xor
jo
pop
xchg
rolb
aad
jns
jl
pusha
xchg
add
xorb
lods
fcmove
fists
pop
cmpsb
js
movsl
ja
fisttpl
imul
cmp
xchg
adc
xchg
cli
bnd
psubw
test
popa
mov
shlb
rcrl
lea
pop
cmp
jg
inc
adc
jno
gs
testb
test
daa
sub
or
jno
out
xchg
xchg
xchg
in
fistpll
test
push
sbb
sbb
idivb
jo
ljmp
push
fsubs
loop
mov
lahf
out
sbb
in
mov
and
idiv
adc
std
popf
mov
sub
xor
mov
lret
jb
aam
sub
push
loope
mov
adc
and
jno
cmc
cmpsl
dec
out
cmp
fsubrp
lea
mov
lret
cmpsl
push
leave
pop
mov
xchg
sub
pusha
adcl
mov
pop
test
int
mov
mov
add
pushf
js
imul
cmp
bound
cld
push
inc
aad
sub
or
xchg
cmp
fcoml
inc
jns
inc
mov
loopne
inc
mov
icebp
test
roll
xor
mov
aas
adc
shl
div
sbb
mov
mov
sbb
lods
dec
pop
add
rcl
out
aam
mov
out
jle
cmpsb
jl
cwtl
push
sti
daa
adc
fnstenv
xchg
dec
mov
add
cmc
loope
mov
push
lods
andl
cmp
jb
mov
jae
loopne
jmp
pop
fstpl
adc
mov
movsl
lcall
popa
cmp
push
sub
push
xor
xlat
mov
xchg
pop
fwait
je
movsb
inc
popf
das
popa
pop
xchg
mov
cmp
nop
and
int
sub
and
out
push
mov
in
and
push
ret
js
lods
jp
push
jmp
in
movsl
popa
jl
add
out
outsb
scas
pop
push
add
pop
mov
clc
xchg
loopne
mov
hlt
lds
pop
pavgw
adc
sbb
push
xchg
push
jmp
push
loope
cmpsl
lret
xchg
repz
int
call
xor
mov
sub
mov
mov
popl
adc
sub
stc
pushf
push
cmc
and
sub
inc
jge,pn
pop
pop
dec
dec
ror
push
xchg
adc
mov
scas
sarb
xor
in
cmp
aad
sub
in
push
ss
jnp
mov
jl
lock
outsl
push
mov
movsl
ljmp
push
xchg
aam
or
push
arpl
push
mov
mov
jecxz
jecxz
xchg
popf
mov
mov
xchg
inc
and
stc
add
jo
sbb
movsb
and
mov
jae
imul
repnz
pop
pushf
hlt
adc
into
in
into
xchg
out
pop
adc
dec
and
mull
inc
sbb
rorl
cltd
js
ret
ljmp
mov
out
sub
inc
je
mov
imulb
pop
jno
inc
int3
dec
das
add
inc
fcmovnb
clc
pop
ret
ret
and
popa
call
push
or
test
mov
xor
push
adc
test
dec
sub
mov
jae
insb
sub
out
mov
lds
mov
xor
popa
mov
in
fistpll
inc
jge
inc
xchg
lods
lahf
pop
divl
insl
test
jge
aam
sub
or
loop
jo
cs
jg
sbb
leave
icebp
and
add
lcall
fimull
dec
push
jns
add
mov
packssdw
out
or
inc
lock
mov
call
jne
movsb
xor
pushl
insb
and
shrl
ljmp
push
sub
lea
mov
jne
pop
clc
test
cmp
lahf
push
cmp
cld
mov
inc
dec
jno
sub
xlat
in
je
mov
lds
inc
mov
stc
arpl
scas
mov
leave
cli
mov
mov
subl
je
xchg
xor
mov
xchg
sahf
add
cmpsb
iret
pop
mov
mov
ficoms
outsl
fwait
cmp
aas
pop
inc
sbb
int3
out
lahf
lahf
pop
push
mov
and
repz
xchg
xorb
andl
and
adc
fstpt
repnz
out
mov
sub
nop
fdivr
and
ja
mov
and
gs
pop
adc
xchg
push
mov
mov
loopne
mov
sub
adc
mov
cmp
sub
icebp
orb
pop
sti
jnp
cwtl
dec
ret
mov
clc
push
jae
mov
in
sub
sbb
mov
sarb
push
sti
xchg
add
lret
push
in
pusha
cmpsl
mov
mov
sub
shlb
rcr
add
test
stc
aam
pushf
out
outsl
iret
cmp
ret
add
sub
out
or
dec
movsb
hlt
push
mov
sbb
push
mov
adc
dec
rolb
pop
movsb
mov
dec
pop
pop
jle
push
or
fdivrl
add
or
ljmp
bound
aad
icebp
cli
mov
imul
xor
inc
ror
rclb
push
xor
inc
dec
push
popf
or
sbb
inc
testb
dec
xor
or
shl
cmp
ljmp
outsb
out
pop
cmp
out
ja
cwtl
lahf
lahf
int3
xor
sti
adc
push
push
xchg
test
jmp
and
xor
or
aam
movsb
loopne
and
test
lds
jge
push
mov
xchg
jecxz
sarb
sbb
cld
fisubrs
loop
cmc
adc
mov
push
shrb
xor
jle
fstps
or
pop
mov
loop
ret
stos
xchg
mov
sub
dec
and
mov
and
jae
movsl
mov
lcall
mov
mov
cmp
sub
repz
cmp
pop
xchg
test
mov
mov
pop
dec
rorb
out
addl
jno
push
cmp
xchg
mov
mov
dec
rcll
and
inc
dec
xor
dec
iret
cwtl
test
lahf
xor
in
pop
stos
arpl
hlt
addr16
fldl
xor
sti
adc
sbb
xchg
sub
iret
sbb
lods
or
mov
mov
jmp
push
inc
fsubl
mov
mov
clc
jle
mov
cs
xchg
aaa
call
jns
mov
cltd
jo
rolb
sahf
loop
arpl
inc
and
mov
decb
inc
stc
lods
sub
mov
inc
and
pusha
mov
in
sbb
sbb
mov
pop
dec
push
lods
jo
adc
pusha
push
sub
mov
imul
inc
xchg
bound
jge
fidivl
ja
xchg
cmpb
bound
shlb
imul
lret
jne
pop
sub
sub
into
pop
into
scas
xchg
fwait
pop
cmp
inc
lcall
fbstp
sub
bound
ret
je
dec
in
pusha
test
sti
sub
push
out
leave
pop
loope
jns
test
sub
lds
jle
fildll
or
aam
pop
in
pushf
push
jb
rcrl
lock
iret
lods
inc
lods
dec
in
mov
sahf
dec
lock
mov
jo
sbb
mov
into
arpl
xor
pop
dec
in
pop
sar
sub
mov
fisubl
sbb
pop
popl
add
outsl
xor
fdivrs
adc
mov
dec
cmp
and
xchg
das
pop
rcll
push
fwait
mov
pop
or
and
das
loope
add
push
lods
add
add
and
dec
fdiv
fcmovb
xor
aad
push
pop
test
add
outsl
lcall
jecxz
xor
xor
out
jae
sbb
imul
cmp
out
nop
dec
xor
adc
lahf
xor
jmp
mov
push
mov
mov
push
xor
mov
icebp
daa
pop
clc
nop
sti
lahf
loope
xor
add
cmovg
sub
rcrb
cmpsl
lea
jmp
packssdw
and
fwait
mov
push
push
xor
push
into
mov
cmp
jno
or
adc
adc
popf
cmp
push
es
or
xor
shll
push
xchg
popa
mov
scas
or
ret
lock
rcll
push
xchg
inc
out
lea
in
jle
sub
dec
mov
ret
fcmovb
movsb
pushf
in
pop
stos
std
xchg
mov
shl
sub
jge
daa
aaa
cwtl
iret
push
inc
inc
insl
out
sbb
sahf
and
jno
jb
xor
xchg
aas
ret
inc
int3
loop
les
aam
sub
stos
hlt
ja
xchg
jg
lock
loope
xor
lret
sbb
inc
cmc
pop
mov
call
je
out
aad
xlat
mov
fwait
add
dec
and
aam
or
push
test
paddusw
mov
test
mov
cmp
cmp
xchg
mov
pushf
push
cmp
dec
cwtl
mov
jecxz
xor
pop
fneni(8087
dec
aad
pop
loop
mov
sbb
pop
lret
jns
ss
push
mov
cld
sub
lock
mov
lahf
out
xchg
test
cs
movsb
cmp
pop
xor
or
mov
dec
dec
incb
sti
leave
repz
xlat
or
mov
add
stos
in
jl
fldcw
movl
mov
push
sub
in
loop
xchg
iret
adc
pop
push
sbb
mov
aad
in
xor
dec
test
mov
ficomps
loopne
out
lret
imul
repz
push
adc
mov
mov
scas
cmp
fnstcw
imul
testb
inc
outsl
sti
lods
dec
shrb
cltd
mov
and
mov
adc
cmp
cmp
xchg
sub
and
shrb
addr16
sub
ds
jo
test
mov
mov
xchg
sbb
inc
lods
neg
mov
jmp
cmc
mov
fmuls
insl
mov
jecxz
dec
dec
add
repz
mov
push
rcll
es
mov
scas
je
in
sbb
pusha
daa
lahf
in
lods
fwait
push
jl
pop
dec
add
mov
pop
repnz
sub
cltd
cmpsl
nop
je
adc
in
adc
inc
jno
aaa
sbbl
dec
into
int3
sarb
imul
dec
clc
mov
and
cld
jle
mov
jle
mov
stc
fcompl
jb
stc
in
testb
mov
adc
lahf
sub
sub
cmp
mov
stos
push
outsl
clc
aam
xchg
lea
sahf
mov
notb
push
lods
fldt
mov
xor
xchg
iret
push
dec
sub
xchg
rclb
xchg
jge
xor
aaa
mov
in
inc
mov
sahf
adc
push
sarl
sbbl
aam
lret
out
mov
mov
pop
cmpsb
lods
sbb
push
lret
pop
sbb
repz
out
adc
pop
loopne
inc
inc
mov
sbb
xorb
mov
jmp
xchg
lahf
lahf
ret
add
in
mov
cmp
insb
shrl
adc
jmp
out
cs
mov
hlt
outsl
mov
arpl
aad
xor
sbb
fadds
das
aam
into
jne
pop
push
sbbb
jge
lret
push
cmp
fidivrl
and
cmp
femms
inc
pushf
fistps
mov
fldl
add
pop
pop
jecxz
push
mov
mov
inc
out
cmp
pushf
rorl
out
add
iret
pop
stc
iret
add
aam
fmuls
ljmp
xorl
xlat
into
fldt
pop
leave
sub
sbb
add
jl
hlt
into
push
pop
mov
push
daa
jecxz
fldenv
sbb
mov
dec
xchg
add
cmpsl
cmp
nop
dec
loope
mov
clc
sub
lahf
mov
mov
sub
push
jb
cmp
inc
mov
push
and
movsl
call
fistpll
aaa
mov
js
sub
cmpsl
daa
scas
add
shlb
int3
sar
pop
mov
loop
not
std
push
xlat
mul
mov
mov
dec
add
loopne
sbb
jl
add
jp
jno
mov
rcll
out
sub
dec
push
pop
inc
lds
loop
int3
test
negb
or
negb
mov
cltd
or
push
pusha
rcrl
ljmp
sbb
test
mov
decl
cli
bnd
jmp
sbb
jmp
cmpsl
js
inc
mull
inc
cmovle
xchg
int
fnstcw
loopne
inc
ds
adc
mov
out
mov
adc
push
rcrl
aaa
pop
lods
sbb
scas
mov
outsb
loope
xchg
pop
pop
out
sbb
add
push
loope
xor
push
jmp
adc
test
rcll
gs
mov
xor
adc
sbb
mov
sub
mov
js
mov
adc
mov
stc
inc
inc
vmovapd
sbb
out
stos
mov
mov
popf
cltd
and
add
popa
repnz
mov
in
cmp
jecxz
add
add
loope
rorb
mov
mov
int3
mov
or
gs
stos
or
aad
jl
shrl
dec
sub
es
xchg
scas
jae
push
pop
xchg
ja
push
or
in
add
mov
cmp
sbb
aaa
scas
push
or
idivl
mov
out
sti
sub
xchg
cs
rorb
cs
or
lods
imul
mov
lahf
fidivrl
push
das
stos
aam
and
jns
sti
sub
mov
xchg
cwtl
les
inc
dec
sub
pop
dec
push
cmp
mul
sub
jecxz
or
mov
sub
rcrb
pop
fmul
sub
test
mov
addl
jecxz
adc
sub
cmp
cltd
sbb
call
push
addl
push
ja
mov
push
dec
hlt
arpl
popf
in
or
insb
mov
cmp
daa
ljmp
int3
mov
mulb
push
daa
data16
subb
sub
xchg
mov
pop
out
ficompl
sub
adc
movsb
sub
pop
dec
pusha
or
ror
lea
sub
jge
push
stos
bound
rclb
push
sbb
movsb
cwtl
inc
cmp
xchg
inc
mull
mov
dec
popa
pusha
mov
mov
jecxz
lods
call
mov
andb
pop
movsb
daa
hlt
push
push
sti
add
lock
in
mov
adc
sub
jecxz
or
cwtl
test
imul
scas
adc
movsl
fcmovnb
repnz
dec
out
cmp
push
cmpsl
xlat
dec
cmp
scas
xor
mov
lock
pop
push
or
and
movsb
lcall
divps
scas
stos
fsubl
cli
adc
test
xor
sbb
push
or
cwtl
or
das
cli
rorl
pop
daa
xor
mov
ss
mov
insb
or
mov
out
mov
xor
add
or
pop
int3
mov
dec
and
mov
mov
push
xor
mov
mov
pop
sub
test
aas
lds
xlat
aas
fcmove
repnz
sarl
test
mov
sti
ret
out
lahf
dec
movsl
and
mov
sbb
inc
sbb
jb
mov
int
push
insl
sbb
cld
in
sub
mov
pop
cmp
in
jecxz
push
lods
in
pop
adc
movups
pop
std
test
adc
aam
add
dec
pop
jnp
pop
movsl
lcall
ds
push
jne
nopl
dec
mov
jmp
cltd
push
es
or
sbb
mov
loope
xor
push
inc
push
lods
jge
out
test
jbe,pn
or
cmp
add
push
call
mov
shlb
cmp
sbb
sti
mov
out
dec
jbe
aas
adc
jp
mov
cmpsb
mov
cmp
loop
mov
lds
push
lods
out
aad
or
mov
fiaddl
or
jecxz
dec
sub
sahf
test
std
orb
stos
push
imul
push
sarl
sti
add
sbb
sbbb
add
mov
jg
in
sbbl
gs
sti
mov
pop
and
xor
push
into
jbe
sar
test
sbb
outsl
jns
in
xlat
test
leave
mov
mov
and
cmc
notl
xchg
sbb
pop
push
inc
movq
pop
stos
out
xchg
or
popf
in
arpl
mov
bound
repnz
pop
jp
pushf
ja
adc
push
sbb
mov
dec
std
ret
test
xchg
cs
nop
push
pop
mov
pop
push
iret
loopne
push
pop
cmp
adc
scas
sub
test
xor
imul
xchg
add
xchg
inc
aam
mov
push
jg
in
jl
int
push
adc
pop
cmp
aad
enter
jae
xchg
fcmovne
or
dec
jno
rep
mov
addr16
scas
stc
jns
and
mov
adc
push
loop
xlat
add
out
movsb
scas
and
inc
test
pop
push
mov
sti
jno
or
mov
or
ss
mov
ret
xor
push
hlt
push
clc
jl
push
jbe
pop
xor
sbb
pushl
pop
ljmp
pop
in
or
popf
pop
sbb
ficoml
je
dec
leave
test
insb
add
dec
repz
fs
push
sbb
es
js
sub
inc
loopne
mov
dec
ficomps
rcr
in
out
lret
jns
mov
sbb
shr
in
pusha
lods
loope
sbbb
iret
add
cmp
push
push
test
add
out
push
jnp
fidivrs
mov
inc
dec
cltd
mov
call
cmpsb
enter
jmp
sbb
adc
cli
mov
adc
cld
idivb
sbb
xchg
add
hlt
cmp
daa
lea
aas
and
and
add
cli
cltd
jae
add
jb
movsb
sahf
dec
and
test
iret
mov
imul
jns
and
mov
sahf
adc
and
hlt
xchg
test
into
cld
hlt
test
popf
inc
push
repz
push
sub
js
jno
sbb
cmpsl
push
pop
adc
jle
inc
push
stos
loope
add
cmp
bswap
mov
stc
adc
mov
cmpsb
mov
scas
fistpll
mov
dec
add
push
cmp
inc
loope
es
xchg
out
test
cmpsl
cwtl
leave
js
insl
sub
mov
mov
and
mov
imul
or
cmpsb
imul
xchg
cli
xchg
gs
or
sub
xor
inc
cltd
pop
push
inc
lahf
adc
mov
cmc
sub
stos
divb
or
push
loop
and
mov
int3
push
js
or
test
aad
mov
in
sub
pop
push
mov
lea
xchg
cmc
mov
lods
fs
inc
mov
lret
xor
fcmovnbe
mov
daa
mov
xchg
cld
cmpsl
icebp
fmul
sub
iret
adc
cld
ss
dec
imul
and
mov
pop
aaa
outsb
insl
bound
inc
jbe
je
dec
pop
and
pop
insb
int3
sub
xchg
or
movsb
or
das
push
mov
push
mov
imulb
fisubrl
orl
imul
mov
imul
sub
mov
out
pop
rclb
pop
shll
pop
call
pop
mov
cmp
xchg
into
xor
xor
icebp
leave
loope
adcl
fnstcw
pmaxub
adc
mov
stc
xchg
out
or
and
jle
into
pop
lock
incb
adc
shlb
int
ljmp
test
lret
notb
sub
mov
mov
push
adc
fisubl
pop
mov
dec
shrl
xchg
fnstsw
jl
xchg
mov
sub
jbe
cmp
pop
ja
pop
aam
mov
shrb
and
push
flds
leave
cwtl
aas
daa
int3
mov
popf
pop
fldpi
sub
test
aad
or
jo
enter
add
mov
mov
add
bndldx
aam
xlat
push
ds
mov
push
out
xchg
pop
inc
xchg
sbb
xlat
cli
mov
mov
in
mov
fldt
int
pop
mov
mov
inc
aad
lds
loope
fildl
or
mov
adc
mov
imul
daa
lcall
sbb
pop
lcall
in
scas
lret
mov
imul
iret
adc
or
push
adc
sti
cmp
cmp
fcoms
popf
out
outsb
popa
imul
inc
push
pop
mov
fsub
or
mov
xchg
push
aam
or
or
mov
popl
mov
movsl
pop
adc
leave
pop
call
mov
mov
jns
cli
sub
mov
ds
ret
ds
movb
scas
adc
out
mov
dec
stos
xchg
scas
sbb
out
enter
testb
ror
sub
push
push
enter
in
xor
or
jns
out
and
pop
mov
lcall
adc
push
fbld
imul
lret
jbe
loopne
je
or
adc
adc
mov
je
dec
mov
mov
lods
repz
mov
out
fs
cltd
fsubl
sbb
rol
xchg
mov
xchg
xor
mov
mov
add
lea
adc
mov
sti
dec
sbbl
adc
test
fcmove
add
mov
sub
jg
mov
xchg
adc
dec
lods
aas
dec
ret
jno
add
cmp
addb
and
adc
xor
dec
lret
adc
std
shr
dec
mov
and
jns
loope
dec
bound
loopne
cmp
mov
rcrb
sbb
sarl
sarl
loope
cli
jns
movsb
mov
or
add
pop
stc
addb
push
mov
add
out
or
mov
ja
push
lock
into
xchg
push
pusha
or
xchg
mov
aaa
xchg
mov
cmc
push
cmp
jns
nop
mov
std
pushl
test
shrl
repz
mov
loopne
push
xorb
shlb
jp
adc
mov
or
fdivl
push
ja
ret
int3
shll
mov
push
sub
xor
jg
lret
push
push
subb
add
dec
dec
xor
pop
xchg
in
dec
pop
dec
test
dec
mov
inc
push
pop
xor
out
cmp
cltd
cli
movsl
xchg
sub
mov
jmp
mov
dec
adc
jmp
mov
add
jbe
cltd
and
sub
lcall
mov
out
das
nop
cltd
inc
pop
pop
push
mov
loope
mov
jmp
repz
cmp
scas
repnz
cs
xchg
idiv
push
arpl
pop
sbb
pop
push
test
mov
jno
movsl
das
ljmp
popl
pop
push
enter
push
push
js
icebp
jp
adc
sbb
jnp
jbe
lea
pop
add
jl
mov
mov
xorl
int3
fmuls
enter
pop
mov
cld
xor
pop
shr
inc
pop
enter
pusha
mov
xchg
imul
add
outsb
xchg
xor
mov
out
in
pusha
inc
stos
or
dec
push
dec
add
cwtl
sbb
dec
pop
jnp
ret
lret
in
mov
dec
sbb
mov
mov
rorl
movsb
imul
jge
sbb
inc
movsb
mov
mov
push
lahf
or
jb
jle
sarl
xchg
cmp
test
cmpb
pop
jg
js
pop
cmp
test
cli
or
mov
call
imul
dec
xchg
xchg
push
jb
dec
cwtl
mov
add
mov
pushf
mov
enter
pop
xchg
lods
rep
daa
cmp
jecxz
daa
mov
inc
cld
popa
pop
sti
cmp
dec
mov
jne
pop
orps
xor
push
xor
or
iret
add
jne
imul
add
enter
lcall
push
xchg
xchg
push
cld
push
pop
enter
std
lock
inc
inc
add
add
add
and
sbb
add
add
test
add
add
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
mov
loopne
xchg
int3
imul
int
mov
mov
jmp
repnz
ljmp
mov
enter
xchg
loopne
sub
pop
sub
xchg
mov
push
nop
inc
clc
imul
imul
mov
loop
fists
mov
inc
iret
lcall
fwait
and
sbb
movswl
loope
mov
out
sub
aas
sub
stc
ds
sbb
push
xor
sub
notb
popa
cmc
fnsave
inc
fdivrs
ret
mov
sbb
mov
mov
pop
xlat
inc
add
pusha
and
mov
sub
or
lods
out
jecxz
test
mov
cmpl
lahf
add
cmp
inc
sbb
fisttps
inc
pop
jno
cmp
mov
sahf
lock
jmp
xchg
dec
dec
hlt
pop
fwait
cmp
and
mov
icebp
add
cmc
enter
and
push
xchg
xchg
jno
pop
mov
push
jp
pop
mov
rorl
jecxz
and
in
dec
sub
out
loope
sub
dec
xor
icebp
push
icebp
mov
mov
push
inc
dec
je
in
pop
mov
idivl
and
jg
fsubrs
jl
xchg
pop
int
push
pop
popf
push
push
iret
dec
aam
out
push
lods
mov
jae
loope
add
sar
jb
pop
adc
scas
or
mov
popf
jle
jle
push
sub
inc
jae
mov
cld
mov
jbe
fs
mov
jno
ret
add
pusha
imul
inc
inc
or
dec
stos
cmp
int
jle
stos
mov
popf
sub
stos
dec
repnz
mov
mov
dec
lds
cwtl
jmp
jae
xorb
jno
pop
xchg
cwtl
std
js
fisubl
adc
negb
push
push
aas
aad
xor
cmpsl
pop
mov
stc
pop
and
adc
push
cwtl
lret
stc
push
in
cmc
and
js
xlat
push
cwtl
pushf
sbb
push
ret
in
ds
rcrb
sub
int3
aad
sub
stos
stos
notb
cltd
mov
xchg
repz
add
iret
xchg
sub
mov
dec
jne,pt
cld
in
scas
adc
dec
mov
inc
daa
jmp
in
mov
mov
mulb
or
add
cmp
lods
mov
xor
mov
and
dec
jecxz
mov
scas
lcall
xor
push
pop
inc
lods
add
jecxz
push
or
outsb
movsb
test
jmp
xchg
sbb
les
mov
cmp
mov
lahf
orl
psubb
ja
cmp
movsl
dec
dec
dec
in
orb
pop
xchg
cmp
xchg
xchg
in
push
inc
fistl
xchg
in
fsubs
xlat
cmp
mov
xchg
and
mov
bound
pop
pop
cmp
add
inc
mov
stos
jo
dec
or
push
push
mov
mov
add
mov
mov
push
jecxz
pop
push
sbb
or
int3
cmp
lods
lock
mov
stos
mov
in
inc
stos
daa
add
shll
das
ljmp
jne
mov
in
and
mov
jnp
std
imul
inc
add
out
mov
cmp
jecxz
fisttps
adc
aad
ss
pushf
pop
shl
negb
rclb
mov
xor
xchg
scas
sub
jecxz
pop
cmp
adc
ds
push
dec
imul
sub
rorb
or
and
and
and
cmp
sbbb
xor
stos
xor
add
test
cmpl
mov
mov
jo
xchg
push
sub
fidivrs
and
lahf
out
cmp
into
mov
ljmp
cmp
stos
insb
out
mov
xchg
aam
subb
movsb
sub
mov
out
fcomps
push
push
jge
or
test
popa
push
pushf
cmp
out
lea
sbb
rcr
push
fisubrl
adc
shrl
fstpl
mov
push
mov
inc
jo
inc
jno
enter
lds
push
jl
dec
ret
mov
push
hlt
fcomps
mov
aas
xor
push
mov
cmc
test
popw
cmpsl
lahf
mov
sub
imul
lret
repnz
adc
test
adc
sub
int
adc
sub
cwtl
stos
aad
or
add
gs
movsb
orb
fcoms
mov
pop
sub
decb
lods
pop
lahf
dec
push
in
sbb
pusha
xor
push
arpl
add
adc
arpl
ret
aad
jge
or
movsl
mov
cmp
xchg
jle
or
fwait
shll
fmuls
dec
sub
add
sbb
mov
adc
call
ret
and
mov
mov
sbb
xor
cmpsb
int
xor
xor
dec
xlat
cli
sbb
xor
mov
addr16
mov
bound
ss
stos
push
aas
and
jnp
jge
loope
out
xlat
dec
iret
mov
setge
loope
pop
outsb
out
addr16
gs
orl
mov
sbb
jb
fldt
dec
iret
dec
mov
sbb
mov
les
es
xchg
mov
xchg
cmp
push
mov
push
dec
mov
shl
adc
jmp
cmpb
sub
xlat
lea
inc
mov
mov
xchg
mov
cwtl
out
xchg
jae
xor
std
fstpl
cmpsb
jo
cmp
divps
and
cli
lods
popf
sti
je
xchg
dec
pop
jno
xchg
ficomps
push
pushf
inc
repnz
inc
sti
dec
fwait
and
add
loope
mov
out
aaa
or
mov
aad
loop
inc
push
out
pop
jne
jle
aas
out
sub
push
sbb
adc
fs
in
loope
mov
inc
mov
ss
adc
imulb
fistl
xchg
test
mov
and
sbb
mov
shrb
arpl
jl
aam
test
sti
pop
clc
mov
or
js
loop
test
xchg
and
jp
mov
stos
pop
cmpsb
out
push
push
mov
pusha
adc
sti
sub
hlt
lret
gs
push
sbb
clc
fmull
test
mov
jmp
clc
dec
sbb
jae
mov
sbb
mov
or
bnd
mov
xchg
mov
aad
mov
pop
dec
fbstp
enter
cli
insl
mov
leave
jmp
adc
scas
and
cmp
sub
xlat
outsb
jecxz
mov
inc
pusha
fsin
insl
sub
test
xchg
out
pop
in
pop
popf
xor
dec
or
or
cmp
js
inc
dec
pop
or
pop
jb
mov
fmull
push
cmp
mov
and
loopne
cltd
push
out
into
inc
cmp
clc
inc
pop
lods
das
jns,pt
ss
jle
andb
in
lds
or
dec
xchg
fimuls
aam
sub
xor
inc
add
and
mov
and
orb
inc
dec
mov
jns
es
inc
and
daa
mov
mov
mov
stos
sub
xor
sti
std
imul
xor
hlt
dec
sub
stos
xchg
jns
mov
mov
enter
andb
mov
cmp
pop
inc
sbb
sbb
fs
push
xchg
or
sub
fcom
xlat
orl
and
mov
test
sub
lahf
mov
pop
lahf
dec
cs
adc
inc
xchg
add
sarl
mov
xchg
out
push
je
out
jns
sbbl
dec
ds
jne
dec
mov
cmp
cmc
loope
jg
popf
mov
push
push
scas
adc
and
inc
mov
stc
mov
repnz
lods
and
enter
dec
dec
dec
or
fcomip
cmpsl
xor
dec
and
cltd
loope
lahf
fdivrp
or
enter
rorb
and
rcrb
popa
push
ret
pop
in
mov
insb
jmp
mov
pop
data16
xor
xor
mov
mov
xor
sub
fnstenv
fsubl
inc
cmc
inc
ret
ljmp
out
pop
das
mov
icebp
lods
jg
clc
mov
lods
xchg
xchg
add
fisubrs
add
mov
cld
loope
push
mov
and
stos
jo
or
lret
lcall
sub
or
mov
ds
popa
xlat
pop
xchg
push
jmp
in
sub
xchg
sub
jl
xor
stos
xchg
hlt
jl
cmp
sub
push
push
mov
push
dec
and
into
xchg
das
cs
jmp
and
add
mov
sbbl
stos
or
repnz
jno
inc
xor
outsb
mov
fmuls
insb
push
jae
ret
push
fmuls
scas
adcl
stos
pop
pop
and
xchg
repnz
aaa
add
repnz
scas
lret
jp
push
pop
sub
pop
sahf
int
push
push
int3
mov
add
mov
sub
inc
out
jp
pop
rcll
stc
cli
ljmp
out
test
sub
pop
mov
rorl
and
jge
das
insl
stos
loop
xor
lcall
jl
mov
ret
jo
mov
push
add
push
test
not
mov
mov
pushf
popa
ficomps
push
out
loop
in
jne
sarl
les
das
cmp
add
je
mov
stos
ret
or
popf
test
in
cwtl
and
addl
ret
je
hlt
inc
xchg
jle
das
bound
pop
and
cmp
jo
adc
outsb
or
mov
or
push
aad
jmp
jnp
mov
push
loopne
mov
fcompl
jne
arpl
insb
dec
mov
fldcw
and
int3
add
sbb
lods
cmp
popf
adc
leave
insl
movsb
repnz
and
sbb
add
push
adc
add
insb
sub
push
fwait
mov
cmp
loope
out
in
add
pop
ret
popl
mov
xor
adc
jo
xorl
in
shlb
lahf
sarb
mov
or
cmp
pop
adc
dec
cli
push
dec
daa
pop
mov
pushf
dec
dec
iret
enter
test
sti
into
sub
cs
and
nop
dec
test
mov
jecxz
mov
pop
je
daa
dec
cmp
dec
cmp
movsb
lock
orl
mov
icebp
lar
sub
and
cld
xchg
cmp
ret
mov
or
push
pop
dec
mov
in
addr16
daa
ss
rorb
mov
int3
clc
jg
add
dec
jae
fbstp
lds
and
addr16
insl
das
mov
or
out
cmp
jns
mov
and
ficompl
cmp
mov
dec
pop
shlb
pop
sub
cmp
adc
xchg
les
mov
xchg
cltd
test
mov
hlt
fs
sbb
rcll
or
jmp
icebp
jbe
mov
movl
and
jge
fcompl
push
xchg
dec
xor
add
sbb
cmp
dec
xor
das
xchg
stos
lock
or
shlb
push
sbb
out
outsl
into
dec
pop
pop
call
cmpb
in
nop
sub
out
mov
and
xor
push
sub
ljmp
or
xchg
ljmp
je
lret
mov
jb
add
dec
xor
push
push
scas
repnz
adc
inc
in
mov
cmp
gs
loope
out
cwtl
xchg
and
std
mov
and
int3
movsl
cmp
fs
push
jnp
std
xor
insl
in
dec
add
jbe
cmpsb
sahf
mov
scas
ret
inc
cmp
lods
pop
in
movsl
inc
das
cmp
sbb
push
dec
sub
loope
std
aas
push
mov
lock
outsb
sub
imul
jb
in
or
ss
mov
cmp
jne
jge
xchg
repnz
mov
dec
mov
push
or
insb
mov
lds
mov
fninit
outsl
sub
mov
lret
mov
icebp
popa
mov
imul
mov
clc
sbb
cmp
mov
mov
mov
rolb
mov
ret
imul
ret
push
out
in
mov
mov
scas
incl
loop
out
mov
jnp
jns
stos
mov
mov
gs
push
scas
jecxz
jno
ljmp
rorb
arpl
dec
fisubs
sbb
stos
sub
stos
pusha
fnstsw
sbb
shlb
scas
fstpt
scas
sbb
mov
cmp
imul
gs
inc
ds
or
and
mov
fucompp
mov
stos
mov
xor
popa
sahf
and
pop
inc
pop
push
pop
sub
adc
mov
add
dec
fbstp
xchg
lock
mov
mov
idiv
les
dec
int
outsl
or
xchg
adc
add
ret
stos
arpl
sbb
imul
shrb
ja
xorl
and
or
lret
sbbb
cltd
sbb
call
stos
pop
inc
sub
pop
jecxz
jecxz
cmpb
sbb
or
and
loopne
ja
xchg
pusha
lcall
cmp
pop
pop
fs
in
adc
fwait
mov
adc
xor
push
arpl
mov
call
push
jge
jmp
push
mov
dec
adc
inc
add
inc
inc
hlt
test
pop
jl
and
xchg
roll
jnp
movsb
lock
xchg
cmc
lret
mov
cmp
arpl
adc
jle
add
out
adc
gs
mov
dec
dec
scas
add
mov
aas
inc
inc
xor
ret
insb
mov
leavew
xchg
imul
cmp
push
or
and
loope
idivl
jbe
dec
int3
pop
jmp
imul
stos
inc
jnp
xchg
orb
test
or
cmp
mov
sub
mov
scas
xor
inc
inc
mov
scas
push
in
arpl
call
pop
sbb
out
push
out
jle
xchg
cld
je
add
shll
int
mov
out
cmp
cli
push
pop
inc
into
movsl
jp
add
sub
mov
rcrl
dec
mov
mov
jbe
repnz
nop
daa
adc
xchg
imul
ljmp
xlat
cwtl
repz
in
mov
cmpsb
xchg
mov
bnd
iret
in
cmp
icebp
cmpsb
xchg
je
es
mov
xchg
mov
sub
sub
jmp
jge
pop
gs
mov
ret
test
shll
dec
pop
jecxz
pop
stc
adcb
mov
mov
mov
fadds
dec
jle
fldl
ja
out
mov
into
ja
in
dec
mov
outsb
mov
xor
sub
xchg
pop
lret
add
rcll
adc
lods
adc
or
fsubrl
iret
aaa
jl
test
sub
xchg
popf
inc
stos
movsl
push
sar
dec
fldcw
jmp
outsl
and
iret
sub
stc
mov
and
call
les
lock
fimuls
mov
push
push
cmp
sbb
adc
push
xor
loope
or
sar
jp
inc
cmpsb
mov
fstp
jb
nop
push
jo
mov
push
loop
adc
mov
add
fimull
sbb
and
jl
adc
movsl
scas
divb
xchg
sbb
and
sarb
scas
repnz
cwtl
fmul
xor
sub
jp
mov
sbb
jmp
test
pop
mov
in
aad
adc
adc
or
hlt
inc
xor
pop
jge
mov
stos
push
les
adc
push
cmp
xor
daa
js
int
push
ficompl
push
lock
jge
sub
dec
out
or
push
mov
sbb
test
mov
cli
cmp
lahf
sbb
dec
inc
xchg
sub
push
fbstp
jmp
test
inc
add
outsl
push
mov
jnp
ja
imul
faddl
fstpl
or
aam
mov
into
inc
adc
shlb
jg
data16
mov
push
or
xlat
scas
iret
jge
insb
mov
mov
mul
in
stc
cmp
jns
sbb
jge
cmpsb
xchg
push
iret
xchg
push
fnstenv
inc
loopne
shlb
or
jb
or
mov
out
jne
push
xchg
mov
ljmp
mov
call
repnz
push
jmp
fidivrl
mov
movsb
push
sub
jmp
out
mov
sbb
and
rcl
pcmpgtb
push
sbb
push
notl
or
xchg
push
mov
push
sahf
imul
sbb
jmp
cmp
or
add
test
aad
andl
cmc
cmp
xchg
mov
andb
dec
mov
or
mov
sub
cmpsl
mov
popa
popa
filds
cmp
clc
aas
cmpsl
jno
sbb
push
stos
lock
xchg
mov
mov
test
mov
push
pop
rcll
jns
add
mov
inc
xor
sbb
inc
stc
mov
or
push
jne
xor
add
flds
andb
push
pop
jmp
movsb
and
imul
div
iret
push
outsl
ficoml
ds
repz
mov
inc
insb
or
aam
mov
xchg
mov
push
cwtl
push
stos
pop
cmp
sub
mov
mov
roll
inc
sarl
mov
jge
push
stc
push
fcmovne
pop
nop
cmpsl
or
pushf
jge
pop
xchg
rcl
sbb
ret
adc
lahf
mov
pop
push
or
outsb
fxch
test
ret
cmp
xchg
test
das
outsl
out
int
cmp
mov
imul
test
nop
push
sub
rcrl
adc
inc
sub
mov
adc
std
or
adc
daa
ss
cltd
decl
pop
add
mov
movl
scas
loop
cltd
add
shl
push
int
xchg
mov
out
pop
cli
jnp
sbb
lahf
add
lds
add
add
adc
xchg
movsb
jg
push
push
push
xchg
or
add
mov
xchg
xchg
popf
push
pop
or
push
push
xchg
cmp
push
int
lods
xor
popa
fnstsw
rcrb
mov
nop
cli
sbb
ret
outsl
lcall
lret
and
out
inc
pop
xor
rcll
insb
dec
adc
mov
jmp
add
fstl
add
xchg
dec
pop
push
xchg
jp
push
adc
sub
mov
jecxz
mov
xchg
ljmp
sbb
lcall
test
ss
sub
dec
xor
jge
fsts
fs
push
daa
and
inc
sub
fldl
in
filds
sub
and
and
arpl
nop
fcomp
mov
test
pop
cmp
in
xor
loop
push
sub
faddl
and
movsl
xchg
daa
and
xchg
shlb
or
stos
cli
push
sub
push
cs
in
or
push
dec
or
lcall
xchg
push
xor
dec
movsl
nop
push
imul
push
xchg
pop
jle
mov
xorl
inc
imul
fadds
mov
call
mov
cli
xor
inc
jl
aad
inc
outsb
stc
adc
xchg
sbb
lock
xlat
lods
jae
lods
push
cli
test
popf
adc
xor
psrlq
mov
notl
dec
cmp
sti
dec
mul
or
test
leave
imul
cmp
pop
mov
imul
jbe
xchg
sub
lret
aas
adc
mov
sbb
jae
push
fwait
cld
cli
rorb
sbb
cwtl
popf
pop
mov
insl
dec
xchg
or
xor
lret
cli
dec
mov
mov
test
mov
jecxz
fisttps
hlt
xchg
stc
popa
std
mov
push
jbe
aas
dec
push
add
cli
cmp
add
cmpsb
outsl
mov
sar
out
jecxz
sub
inc
inc
cmp
pop
inc
xchg
pop
add
imul
add
xchg
sbb
or
inc
inc
aas
cltd
adcb
adc
loope
add
dec
jbe
lret
gs
dec
push
sbb
mov
dec
repz
int
fsts
gs
call
stc
add
jne
sbbl
mov
mov
dec
or
push
sbb
cmp
xchg
stos
mov
jns
cs
lea
jb
cmpb
lret
fs
push
rcrl
sti
cmp
fs
mov
jo
push
push
fidivl
pop
jo
inc
mov
ret
dec
push
shl
xchg
mov
cmp
scas
push
lock
pop
mov
ja
sbb
scas
xor
push
and
mov
sbb
lds
mov
add
scas
mov
sarb
loope
dec
imul
sub
jo
add
cltd
lret
data16
inc
and
add
sbb
mov
xor
addr16
jns
xchg
mov
jae
xchg
std
jo
push
dec
lret
movsl
xchg
xchg
mov
or
mov
pushw
out
negl
aaa
jle
out
test
cmp
mov
xchg
imul
jle
sti
in
mov
mov
pop
lret
pusha
xchg
and
sub
das
xchg
test
std
inc
cmc
jp
and
call
std
mov
inc
cmp
cmp
adc
test
push
jnp
repz
jbe
movl
jae
lock
int3
mov
fidivs
dec
aam
adc
pop
and
test
xor
or
xor
mov
mov
push
arpl
repnz
lea
cmp
pop
arpl
movsb
and
lock
xchg
movsb
data16
cltd
iret
sub
repnz
cmc
mov
adc
clc
loope
mov
cmp
inc
imulb
and
mov
dec
mov
cmp
pop
cmc
mov
iret
xorl
pop
out
adcl
fs
std
push
cmpsb
mov
mov
dec
arpl
cmp
int
mov
sbb
cli
or
mov
pop
sub
insl
rorb
std
mov
test
bswap
cmpsb
xor
negl
mov
and
notl
mov
mov
or
fldcw
movsl
sub
out
imul
repnz
pop
repz
sub
push
test
iret
dec
jmp
hlt
scas
pop
ror
gs
stos
ljmp
mov
jbe
jnp
mov
sahf
test
pop
mov
mov
mov
insl
pop
xor
xchg
xchg
mov
pushl
add
or
sub
xchg
jb
bound
mov
popa
je
cmp
jge
xor
and
popa
push
xchg
jne
pushf
dec
inc
xorl
loopne
js
push
or
aad
and
jae
inc
loopne
mov
sahf
sbb
push
xchg
sbb
xchg
into
cli
popf
cmpb
sti
cwtl
subl
add
and
inc
pop
jbe
dec
push
mov
jg
inc
dec
sub
adc
lock
imul
lods
mov
mov
cli
imul
adc
push
dec
mov
nop
mov
mov
repz
leave
mov
rcll
loope
pop
or
negl
fcmovu
add
mov
out
stos
dec
test
pop
dec
mov
dec
mov
lods
xor
jno
leave
xchg
and
in
fwait
and
xor
aam
aas
cmpsb
es
cmp
mov
int
add
add
mov
in
sbb
lea
cmp
cld
pop
push
pop
scas
repnz
and
pop
mov
movsl
shrb
jl
mov
cltd
xchg
jb
push
jge
cmp
dec
cmp
sub
shlb
sahf
push
testb
sub
cmpsb
es
mov
adc
jge
mov
iret
fwait
cmc
cltd
scas
sbb
xor
cmp
add
stos
cli
mov
aas
divl
adc
mov
pop
xor
ja
imul
lcall
mov
inc
mov
pop
sub
data16
rcl
and
sar
out
pop
fsubl
mov
mov
stos
jge
inc
in
imul
test
jns
jp
adc
shl
shlb
adc
push
sbb
push
dec
push
jp
sub
ficompl
hlt
sub
addr16
mov
mov
jge
jp
mov
mov
daa
xchg
test
mov
imulb
int
pop
lretw
push
clc
mov
or
hlt
lret
xor
das
sbb
push
leave
packuswb
test
ljmp
ds
jb
add
lods
xacquire
rorb
push
mov
mov
push
mov
ret
mov
push
pop
mov
ds
aam
repz
dec
sbb
or
imul
fbld
rcr
aaa
xor
dec
mov
movsb
sahf
lea
in
push
sub
das
fwait
je
inc
pop
mov
inc
arpl
popa
mov
jnp
mov
xorb
pop
fcomps
jmp
inc
jne
push
inc
mov
sbb
mov
xchg
jo
pop
jbe
mov
push
dec
cmp
adc
aam
stc
inc
or
xor
cmp
adc
js
arpl
clc
lret
sub
cltd
mov
mov
popf
lret
in
cmp
inc
xor
push
jbe
ss
mull
dec
adc
push
movsb
or
xchg
xor
test
and
jno
pop
push
mov
inc
idivb
push
xchg
test
xchg
or
lcall
call
xchg
aaa
sbb
mov
sahf
je
mov
aam
mov
scas
jp
cli
test
imul
jae
out
int3
sar
add
add
sub
push
ffreep
adc
fimull
adc
dec
icebp
adc
sbb
std
add
cmp
mov
jno
push
xlat
in
std
fnstsw
icebp
addr16
sti
cltd
and
popf
imul
arpl
mov
dec
setae
fimull
inc
aas
jp
mov
xor
jns
aaa
push
adc
shr
jp
jo
fcompl
mov
pushl
or
mov
sbb
pop
gs
jmp
cmp
jle
std
scas
sti
test
in
mov
das
xlat
inc
pop
mov
add
sub
xor
jmp
cmp
mov
sub
mov
cmp
test
ret
es
dec
xor
repz
hlt
push
mov
cmp
je
jp
enter
add
cmp
lea
push
cwtl
arpl
adc
je
insb
mov
or
adc
test
and
jo
rcll
fildll
jne
subl
sub
pop
cmp
in
enter
and
or
in
call
jp
sub
std
fcmovnb
sar
mov
mov
das
or
in
scas
push
ljmp
xor
arpl
in
mov
int3
into
jne
mov
movsl
dec
and
insl
loop
add
sub
insb
push
add
repz
adc
cmpsb
or
sub
icebp
push
outsl
push
in
ror
mov
add
imul
insb
enter
sub
jae
xor
int
mov
xor
push
mov
or
call
fnstcw
inc
inc
push
jb
hlt
mov
lods
sti
lcall
ret
cli
and
and
sbb
insl
cmpsl
cmpsb
in
pop
xor
dec
leave
xchg
adc
jg
and
pop
daa
xor
add
lcall
js
xchg
dec
pop
xor
inc
cmp
mov
push
mov
xchg
jae
andl
push
push
loop
insb
inc
mov
jle
dec
test
jp
jg
inc
dec
pop
lahf
outsb
inc
mov
lcall
pop
pop
pop
cltd
rorl
mov
or
mov
mov
fisubl
dec
rol
stos
jp
xchg
xor
popf
pop
xchg
dec
aad
filds
rcl
and
frstor
adc
mov
mov
ficomps
ret
clc
jle
xor
pop
or
mov
dec
shll
sbb
loopne
push
ja
jg
fbstp
ficoml
or
xchg
xor
xor
cwtl
fsubs
int3
xchg
movsb
add
leave
add
lods
into
sbb
lds
xor
sub
adc
xchg
js
in
jno
ret
sbb
mov
and
icebp
mov
repnz
popa
jle
sbb
aad
ret
aad
inc
fdivs
push
shlb
hlt
jae
sti
adc
push
cmpsb
jb
sbb
pop
cmpsl
adc
inc
jp
daa
inc
mov
movsl
cwtl
mov
push
inc
out
outsb
jne
loope
lahf
push
inc
out
out
je
dec
mov
xchg
aam
call
jle
jae
and
mov
mov
or
repnz
adc
loopne
lahf
hlt
push
dec
or
cmpsb
jp
es
xor
push
pop
xor
stos
xor
into
imull
add
in
bound
je
add
roll
stos
repz
test
inc
or
das
lock
xchg
repz
mov
scas
inc
mov
imul
mov
adc
add
push
sub
mov
xchg
adc
adc
stos
pop
insb
adc
add
pop
mov
or
cmp
das
es
inc
inc
pop
jmp
dec
or
xchg
rorb
mov
sbb
mov
pop
and
xchg
mov
and
int
pop
xchg
push
or
lahf
jecxz
sub
jbe
mov
rorb
scas
imul
xor
test
mov
cmc
stos
shrb
adc
xchg
inc
mov
push
loope
xor
pop
nop
daa
add
sahf
int
adc
pop
xchg
push
nop
sahf
pop
mov
lret
repnz
sbb
mov
jmp
sub
pop
sub
sub
dec
subb
lock
rcrb
hlt
loop
sub
or
push
fimull
sbb
stos
dec
mov
push
dec
adc
fstps
mov
jns
push
in
adc
lcall
mov
mov
mov
push
jmp
out
loopne
stc
xchg
aaa
push
in
cmc
mov
dec
add
pop
lahf
add
mov
pusha
or
push
inc
adc
push
inc
jle
in
mov
insl
pop
dec
push
stos
dec
insb
sahf
pop
adc
mov
adc
arpl
push
imul
int
lock
pop
dec
inc
out
iret
aaa
outsl
dec
push
test
push
imul
mov
mov
sub
jmp
mov
inc
pop
mov
fwait
lahf
mov
movsb
push
or
xor
shlb
and
les
aaa
and
cld
lahf
das
arpl
insl
gs
adc
aas
in
xor
mov
cmp
cmp
xor
loop
xchg
dec
movsl
int
mul
add
adc
pop
lret
pop
mov
mov
shl
cltd
fs
movsl
xchg
cmp
inc
xchg
or
call
shll
outsb
mov
xor
call
mov
loopne
inc
int3
sub
out
cmpsb
jns
or
loope
adc
cmpsb
jnp
daa
loope
sub
insb
lcall
pop
nop
and
jo
cs
mov
cmp
shrb
xor
cmp
or
in
int3
and
or
push
adc
mov
inc
data16
fs
pop
pop
dec
mov
pop
leave
sahf
pusha
test
fbld
in
mov
dec
popf
mov
inc
outsb
pushw
and
xchg
and
outsl
mov
jbe
flds
stc
jl
in
xor
mov
call
stos
int3
pop
out
add
nop
sub
outsb
push
pushf
xchg
xor
push
xchg
adc
sbb
mov
inc
negl
add
lods
mov
jb
sub
mov
outsb
dec
jbe
ljmp
pop
daa
or
out
ja
mov
mov
push
loop
hlt
bnd
in
mov
sub
inc
scas
cmpsb
inc
popf
sbb
sub
daa
aam
outsb
leave
fldt
push
cmp
lcall
lret
xor
in
pop
in
fldcw
and
aaa
ret
jg
test
imul
cmp
aam
dec
xchg
mov
jae
add
mov
ljmp
in
inc
pop
push
push
inc
lds
dec
jne
add
adc
ljmp
mov
inc
and
icebp
xchg
je
pop
jmp
imul
or
sbb
dec
orl
sbb
ds
inc
repz
mov
jne
sarl
neg
sbb
sbb
cmp
cmpsb
mov
test
and
fwait
cmp
out
push
in
fidivs
pushf
cmc
adc
mov
jno
adc
add
jns
aam
mov
out
xor
test
or
sarl
sub
push
aam
mov
jo
push
in
jbe
lret
dec
ret
lds
mov
add
notl
add
xor
into
insl
lcall
jp
jno
or
add
addr16
out
ficompl
sahf
call
pop
mov
adc
sub
les
cmp
testb
xchg
daa
ret
daa
icebp
ficoms
pop
push
push
and
xor
mov
adc
jne
sti
mov
inc
xchg
jo
insb
repnz
cmc
cmpsl
js
decl
lds
mov
stos
sub
pop
jo
dec
cwtl
fs
ret
jmp
and
xor
movl
hlt
bound
outsl
dec
rcr
faddl
xor
jo
sbb
ret
ret
sbb
cmp
sbb
jle
fstpl
cmp
cmp
push
mov
xchg
lret
jp
inc
cmp
aad
aam
mov
lcall
mov
mov
cmpsw
fcomps
push
pop
icebp
in
cmp
xor
cmc
cmp
addl
push
add
into
dec
inc
fwait
sarl
mov
dec
rcrl
loope
pop
sbb
jo
pop
jo
xor
bound
add
mov
dec
mov
push
mov
leave
out
cmp
push
mov
and
mov
nop
and
push
jecxz
inc
popf
into
xor
cmp
mov
mov
or
cld
mov
mov
pop
sbb
fistpll
bound
pop
jno
adc
jp
add
loope
cmpb
ret
pop
cmp
sbb
bound
ljmp
fs
rolb
inc
or
xchg
mov
fcmovbe
in
mov
push
fdivrl
sub
xor
mov
arpl
pusha
ret
addr16
xchg
mov
jl
sub
negl
or
and
fldl
add
pop
lods
or
in
push
sti
or
sbb
mov
inc
imul
xchg
into
and
mov
inc
aam
pop
push
call
repz
hlt
jb
sbb
xchg
pop
dec
jmp
or
lahf
cs
fistl
les
lret
popa
outsl
shlb
cwtl
adcl
sub
in
das
mov
jle
jg
sbb
ficoml
jnp
jle
mov
iret
cmp
mov
out
xchg
mov
sbb
jno
mov
push
fwait
or
mov
push
mov
ljmp
insl
leave
mov
cli
fld
jl
push
sub
loop
mov
clc
cmp
inc
fmuls
cli
popa
sbb
popa
mov
lods
lret
ss
cltd
les
fucom
xor
shl
or
mov
divl
nop
or
and
fcomps
shrl
daa
pop
mov
and
lret
add
fwait
sub
cltd
dec
push
sub
sub
xchg
push
mov
xchg
cltd
cs
push
loop
sbb
cmp
dec
ja
aad
aad
adc
shlb
cli
sbb
push
out
js
sub
mov
mov
add
pop
sti
mov
push
movsb
fwait
cmc
mov
push
mov
in
rcl
fs
inc
lret
xchg
mov
hlt
or
fcoms
add
push
adc
push
mov
cs
fstpt
sbb
pop
cwtl
mov
cmp
ss
push
xor
test
inc
jo
cmp
out
ja
mov
daa
aaa
iret
dec
cwtl
std
adc
movsb
out
fbstp
test
sti
mov
add
daa
std
dec
jl
cmpb
jb
or
test
xor
sbb
lea
cmpsb
sub
sbb
push
jge
sbb
sysenter
cmp
cmp
jmp
pop
orb
sub
fnop
gs
lods
iret
fcomps
shll
sbb
fisubrl
int
test
mov
pop
icebp
push
mov
testb
incb
xor
add
pusha
mov
js
push
addr16
mov
mov
into
repnz
in
fisttpl
dec
push
sub
es
out
sub
int3
ljmp
xchg
fcmovnu
xor
adc
fsubrl
ss
dec
movsl
in
popa
jle
or
push
push
xor
pusha
mov
aas
sub
repz
insl
cmp
repnz
jle
dec
pop
mov
idiv
mov
push
inc
scas
jg
mov
mov
gs
ret
mov
cmp
shr
push
add
clc
xchg
aaa
xor
pushf
iret
jno
cmpsb
cmp
sub
mov
out
cmp
or
ror
lods
inc
cmp
push
aaa
mov
ljmp
xchg
shrb
and
pop
fdivrs
ficompl
cmpsl
and
sti
fcomps
sub
out
add
mov
stc
mov
cmpb
bound
pop
popa
int
dec
movsb
xchg
divb
or
mov
mov
cmpsl
call
bound
cli
mov
adc
xor
and
enter
shlb
sbb
je
mov
inc
sub
arpl
mov
call
hlt
les
test
mov
sbb
push
mov
lcall
jle
push
mov
xchg
aam
xchg
push
inc
dec
aam
sub
aaa
dec
mov
mov
pop
call
mov
pop
sahf
rolb
loope
aas
mov
dec
sbb
or
daa
cmp
dec
and
clc
jecxz
cmpsb
and
push
xor
test
xchg
mov
mov
mov
lods
gs
sti
insl
cld
in
fneni(8087
data16
cld
xchg
scas
ret
jmp
and
js
icebp
lock
fsubs
cmp
sti
mov
push
inc
sbb
push
sub
repz
push
cmp
inc
les
sbb
loop
pop
stos
dec
pop
shll
and
jno
mov
sub
push
add
sub
std
nop
inc
repz
cmp
dec
loopne
insl
jb
mov
loop
dec
sbbl
popa
lret
mov
xor
push
gs
dec
xchg
gs
aad
gs
int3
lds
mov
push
js
insb
imul
add
dec
loop
out
lods
shrl
scas
add
pop
repz
call
dec
push
aad
xchg
push
pop
mov
call
push
push
enter
mov
xor
jo
mov
pop
movsl
dec
shll
dec
add
xlat
popf
inc
jg
pop
mov
mov
mov
or
dec
call
aas
scas
jg
enter
aaa
outsb
shrb
out
mov
push
pop
mov
movsb
or
dec
jns
pop
ljmp
bound
scas
push
pop
jnp
jmp
xchg
cs
mov
jmp
mov
mov
adcl
icebp
cmc
xor
adc
mov
pop
lahf
not
pop
idivl
arpl
shlb
fxch
gs
adc
push
lock
gs
and
jcxz
sub
in
xor
jge
jle
xlat
fstpl
sbb
lods
mov
sub
stos
inc
xchg
cmp
pop
incb
leave
pushf
repnz
mov
movsl
mov
ds
sti
xor
popa
rcr
iret
aaa
call
inc
push
jl
inc
or
dec
out
sbb
jae
pop
add
stc
push
movsb
xor
pop
cmpl
jmp
std
loop
add
lret
xchg
jno
sbb
adc
imul
movsb
cmp
cwtl
xor
gs
dec
int
add
addr16
cmp
mov
cmpl
push
dec
xchg
lret
push
adc
jecxz,pt
xor
cwtl
jo
jns
cwtl
jmp
xor
mov
insl
fdivrs
xor
decl
cmp
pop
orl
and
push
cli
or
jmp
sbb
in
push
lds
mov
sub
loop
jbe
jp
sahf
jae
out
sub
xchg
dec
out
xlat
add
push
xchg
mov
dec
mov
stc
std
cmc
adc
leave
push
out
lods
or
sbb
rcll
mov
and
lcall
mov
pop
adc
mov
cs
mov
test
or
enter
lea
cmp
addr16
add
cmpb
or
stos
shlb
xlat
add
mov
lret
xor
gs
mov
push
arpl
clc
cmpsl
mov
leave
jl
fxch
scas
popa
push
inc
shrb
loop
or
scas
or
adc
and
adc
cmpsb
jmp
xchg
roll
arpl
and
inc
ret
mov
jo
mov
sbb
repnz
cmpsb
cmp
lock
out
xor
push
or
inc
sti
jbe
adc
pop
lcall
bound
push
adcb
in
out
add
mov
or
jg
ja
movl
xchg
lcall
cmpsb
out
pop
mov
enter
outsb
cmpsb
xlat
and
mov
scas
call
in
cmp
imul
sbb
xchg
or
mov
mov
xchg
repz
addr16
adc
mov
data16
and
bound
fistl
sub
aas
mov
cmc
mov
mov
out
mov
push
inc
out
shrl
into
icebp
mov
cmp
jmp
mov
cld
lock
cld
pop
sbb
cmp
test
dec
jo
cmpsb
dec
jp
xchg
cli
lret
push
das
addr16
lods
push
fadd
lods
push
out
rcl
test
push
movsl
and
gs
xlat
outsl
out
int3
pop
test
daa
adc
mov
mov
fisttpl
push
push
inc
sahf
dec
xchg
lods
xchg
add
sub
sti
test
mov
mov
lahf
and
adc
leave
jne
sub
ret
push
sub
test
push
ret
rorb
or
insb
mov
repnz
repnz
sbb
dec
pop
mov
out
add
imul
add
jmp
mov
mov
fwait
fwait
addr16
xor
mov
scas
adc
stos
dec
repnz
decb
dec
jecxz
dec
push
scas
cmp
insl
jno
addr16
xchg
xlat
mov
add
lahf
pop
xchg
sub
rcr
pop
xchg
leave
shlb
scas
cmc
cmc
mov
push
jge
das
ljmp
mov
lcall
xorl
lock
sub
ds
and
lcall
mov
scas
aad
dec
test
sahf
xor
sub
ret
bound
cmp
mov
mov
test
xchg
pop
cmp
pushf
jno
sub
out
mul
mov
es
cmp
stc
call
cmp
int
and
lods
fwait
jg
push
adc
and
sti
repz
hlt
fwait
xchg
fbld
push
imul
add
out
mov
loop
test
enter
mov
xchg
push
cmp
mov
pushf
xchg
bound
enter
loop
fldl
dec
dec
test
or
cltd
imul
xor
lods
mull
stos
bound
xchg
pop
pop
in
inc
cld
push
pop
or
push
pop
js
rol
xor
sub
sbb
mov
jno
jp
sbb
push
adc
test
add
popf
mov
push
inc
cmp
sub
stos
cli
mov
or
lahf
cmpsl
out
cmpsb
and
pop
mov
push
pop
lods
or
xchg
and
rol
dec
repz
lret
xchg
push
dec
insl
gs
jb
movsb
rcll
je
jmp
rclb
divl
mov
pusha
cmpsl
xor
icebp
aam
sbb
push
ljmp
mov
addr16
fildl
sahf
in
inc
fucom
cmpl
and
subl
push
icebp
fildl
daa
xor
bound
gs
hlt
mov
pop
inc
xor
mov
into
pop
fnstcw
jecxz
sbb
mov
pop
adc
push
adc
mov
aas
add
lcall
cmpsb
int3
xchg
inc
insb
cld
mov
lods
fidivrs
sbb
stc
fdivrl
clc
loopne
in
push
xorb
ss
xor
push
cmc
out
sbb
push
mov
or
sbb
rcr
call
lret
addr16
mov
lcall
lock
out
mov
jo
and
add
xchg
add
popa
jns
mov
mov
push
sbb
sbb
pop
adc
sub
imulb
scas
inc
in
jae
jmp
lcall
xlat
adc
mov
rcll
add
lahf
cmc
adc
xor
xor
mov
cwtl
lods
mov
xchg
ljmp
adc
add
stos
in
or
mov
jg
xor
inc
and
cltd
popa
push
mov
ljmp
cmp
stos
arpl
push
pop
aas
jle
inc
mov
addb
sub
repnz
mov
loope
into
imul
outsl
outsl
roll
jo
and
or
mov
xchg
jle
loope
sbb
idiv
pop
pop
adc
sbb
lret
stos
outsl
div
sub
popa
iret
adc
iret
sti
push
mov
fs
imull
lcall
out
pop
add
xor
clc
test
cmc
push
mov
dec
mov
and
outsl
ds
loop
jge
pop
push
js
inc
sub
mov
push
imul
bound
in
inc
sub
sbb
adc
icebp
faddp
sbb
pop
out
pop
pop
loop
cmpsb
add
clc
xchg
jbe
in
mov
sbb
adc
js
sbb
rcll
jns
fcompl
insl
gs
dec
sbb
mov
add
add
sbb
lds
jl
sub
cmpsl
lea
dec
es
int
cs
inc
aas
mov
or
jge
mov
xor
sbbb
std
mov
cli
mov
cmp
xchg
add
sbb
dec
mov
movsb
and
add
xchg
enter
loop
imul
gs
in
inc
pop
divb
lahf
cli
ds
sub
sahf
pop
mov
hlt
std
sbb
mov
sbb
in
cmp
xor
popf
fistl
sbb
dec
xchg
pop
out
mov
sbbl
inc
cmp
pop
incl
jo
fmuls
arpl
lods
jp,pt
pop
icebp
cmp
sub
clc
stc
push
jle
js
or
aad
lods
hlt
enter
bound
fstpl
pop
data16
adc
aad
xchg
aad
pop
xlat
adc
jb
xchg
jle
mov
sbb
in
dec
fs
jge
iret
xchg
mov
int
lret
jo
mov
fistps
daa
syscall
dec
cmpsl
lret
addr16
mov
hlt
jnp
rcrb
outsl
jae
jae
fwait
enter
jmp
insb
inc
mov
add
shrb
mov
inc
jecxz
cwtl
add
testl
push
sub
adc
out
xor
enter
push
dec
into
aas
cwtl
sbb
cmc
pop
or
add
idivl
xchg
push
sbb
test
loope
test
cmc
imul
mov
sub
cmp
jns
xchg
dec
jge
stos
fadds
mov
test
cltd
adc
mov
xor
std
push
jp
mov
lds
mov
xor
pop
dec
sbb
xchg
cmp
cld
addr16
push
mov
hlt
jl
inc
pushf
daa
loope
mull
adc
xchg
and
xchg
add
and
xor
fwait
lcall
and
dec
outsb
inc
xor
dec
cwtl
fmull
or
test
add
mov
sahf
dec
pop
int3
mov
pop
test
pushf
outsl
pop
sbb
xchg
movl
xor
mov
mov
stos
mov
push
xchg
lret
jge
inc
pop
push
sub
in
xchg
cli
add
outsb
fcmovnbe
mov
or
les
fsub
fstps
adc
aam
pop
loope
sbb
outsl
pop
sbbl
cld
repnz
popf
jo
leave
and
jl
mov
push
or
pop
cmpsl
in
mov
dec
xchg
adc
bound
data16
xlat
test
cmp
and
jle
jmp
ja
cmp
nop
out
in
addr16
dec
xchg
sub
repz
aam
lret
cmp
push
xchg
lret
inc
adc
or
push
sbb
rcrl
push
dec
mov
push
lods
dec
inc
sbb
pop
ja
sub
enter
lahf
cld
popf
scas
in
xchg
jp
mov
or
data16
xor
stos
fmuls
push
fnstsw
repz
fisttpl
icebp
sbbl
jl
and
imul
sub
sbb
push
jno
xor
popa
addl
inc
in
flds
pop
js
mov
in
imul
adc
push
mov
cs
rorl
jmp
pop
push
imul
adc
in
scas
in
ss
sbb
ret
mov
cmovl
bound
adcl
pop
mov
mov
lahf
shll
mov
fnsave
jl
dec
adc
stc
sbb
push
dec
xchg
or
iret
cmp
xchg
jp
adc
fistpl
xchg
mov
bound
mov
and
sub
dec
jno
push
sbb
sub
adc
inc
subb
dec
cs
xchg
cmp
imul
in
inc
cmp
mov
lock
scas
cmpsb
scas
lcall
mov
pop
or
and
inc
sbb
pop
lods
test
aam
pop
lcall
jl
cmpsb
pop
je
xor
add
cmp
sub
loopne
ds
cmp
mov
cltd
cmpsl
cmp
mov
sub
xchg
out
sbb
xchg
xchg
rcll
adc
out
xor
es
jmp
push
shrl
ljmp
icebp
push
out
pop
movsl
mov
cmp
insb
pop
shr
dec
push
mov
stos
ret
out
lcall
sbb
pop
mov
dec
loopne
fldt
outsl
test
push
loope
add
add
sbb
mov
push
xchg
mov
repz
pop
mov
lcall
jp
dec
mov
pop
repnz
pop
or
sbb
mov
jecxz
inc
xchg
rcrl
xchg
js
mov
cld
aam
fsincos
jl
add
pop
gs
in
push
dec
mov
pop
cld
sbb
push
jae
mov
push
scas
cmp
jl
aam
test
xor
xchg
imul
mov
dec
xchg
mov
call
add
int
dec
xchg
je
jb
mov
cmp
or
divl
xor
mov
push
xchg
push
adc
or
test
mov
sti
push
jecxz
cmp
pop
mov
les
pop
dec
adc
xor
sbb
ret
and
mov
mov
cmp
insl
rol
pop
add
mov
movsb
sub
adc
scas
fs
pop
addl
sbb
popf
mov
jae
scas
and
cmp
add
inc
cltd
es
sbb
mov
mov
inc
pop
daa
arpl
movsb
xchg
pop
popf
and
outsb
into
jnp
loope
jns
xchg
jmp
lcall
mov
inc
test
pop
push
out
shrl
dec
sub
data16
mov
loop
jmp
loopne
daa
mov
cmp
mov
jo
movsb
cmpsl
lcall
xor
test
movsl
sbb
push
xchg
and
adc
xor
fldcw
stos
adc
sub
iret
add
ret
dec
insl
push
out
push
push
rcrb
call
cld
sbb
sbb
dec
cld
in
push
cmp
push
xor
cmp
and
or
lret
adc
mov
cld
mov
out
cmove
jecxz
adc
lea
aad
repz
jbe
or
jbe
test
adc
sbb
push
icebp
cltd
rcrb
lret
xor
idivb
cmp
cwtl
in
imul
mov
fisttps
clc
pop
nop
and
jno
hlt
stos
out
xor
ljmp
fimull
jg
push
repnz
cli
push
mov
cmp
into
pop
cmpsl
adc
leave
xchg
add
sub
pop
addr16
jle
lock
sbbl
push
mov
out
sub
and
dec
ret
jb
inc
add
xchg
out
outsl
lds
je
pop
loopne
pop
subl
adc
push
pop
inc
mov
out
sbb
out
sti
std
das
scas
inc
pop
inc
mov
in
cwtl
lret
stc
sbb
fisttps
push
xchg
rolb
lahf
ds
or
ds
xor
jecxz
pushf
inc
cmp
rol
outsb
sbbb
add
cltd
sbbl
nop
ret
push
mov
data16
lock
and
int
fiaddl
sbb
inc
lock
push
xchg
shll
mov
push
push
out
pop
sti
mov
inc
xor
mov
lret
loope
jno
sbbb
pop
jne
fbld
mov
aas
and
xchg
loope
push
repnz
das
xchg
in
dec
adc
js
fstps
test
arpl
mov
jecxz
nop
test
jnp
insb
repz
fwait
into
nop
cmp
or
mov
jo
mov
insb
lret
inc
ficoms
cmp
push
ficoms
icebp
cld
ja
mov
sahf
pop
push
cmp
cmp
mov
or
xchg
sub
pusha
mov
adc
aaa
stc
mov
aam
mov
rclb
gs
mov
in
ja
popw
insl
jb
fisubs
xchg
mov
outsb
mov
into
mov
leave
add
jnp
aad
dec
arpl
push
mov
push
cmp
imul
les
add
mov
dec
lret
inc
adc
sbb
mov
push
aam
loope
ret
jae
enter
xor
sbb
push
xchg
jmp
xchg
mov
insl
cmpsl
mov
cmpl
movsl
shl
aam
xor
fdivrl
daa
inc
outsb
and
popa
cmp
mov
cld
ja
mov
and
xchg
mov
pop
inc
jne
bound
int
inc
das
fcmovnbe
sub
jp
int
mov
xor
push
mov
pop
push
push
cmp
lea
pop
and
sarl
loop
icebp
mov
dec
sbb
stos
es
fwait
or
test
xor
mov
psubsw
stos
adc
or
into
xchg
xchg
mov
sub
push
pop
xchg
cltd
cmp
movsb
loopne
fcom
enter
lret
ret
cmpsl
xor
cmp
repz
hlt
or
mov
add
fscale
out
jle
or
jle
lahf
mov
out
repnz
mov
xchg
sti
push
jne
mov
or
int3
cmp
sub
icebp
jo
xor
add
cmp
ret
and
mov
repnz
or
sub
push
jne
js
insl
out
fs
sub
clc
mov
insb
mov
sbb
xchg
dec
cmpsl
or
jno
mov
sahf
mov
idivb
cmp
sub
inc
xor
jg
orl
popa
arpl
sbb
pop
fwait
add
mov
lds
mov
mov
sub
adc
daa
mov
fisttps
and
iret
inc
pop
mov
or
fcoml
jnp
lods
mov
testl
xchg
dec
loope
addb
sub
push
std
jo
add
add
or
dec
das
sti
repz
cli
inc
adc
ds
xchg
add
jnp
lods
rcrl
cmp
outsb
jle
mov
mov
andb
dec
fcmovnb
out
xchg
cmp
cmp
xchg
cmp
lahf
or
scas
test
fwait
cmc
sbb
shrl
sarb
and
push
dec
fwait
lods
or
cmc
xor
sbb
adc
and
xor
jbe
hlt
repz
sbb
mov
push
push
insb
mov
inc
and
ffreep
cmp
subl
push
mov
inc
ficoml
sub
in
mov
and
pop
xchg
add
popf
mov
xor
and
out
jecxz
sbb
cwtl
dec
mov
mov
mov
lret
icebp
icebp
mov
lods
sar
push
and
inc
fildl
cmp
dec
fsubrl
dec
incb
shl
push
addl
cmp
sub
cmp
add
pop
jbe
xlat
adc
mov
pop
cmp
cmp
cmp
jmp
stos
xchg
shr
sub
stos
nop
aad
test
icebp
enter
int3
add
aaa
aam
testl
or
ret
mov
add
aas
inc
and
mov
arpl
out
insb
das
sub
inc
xor
push
jmp
adc
sbb
aaa
ljmp
sbb
pop
sub
xor
push
int
lret
lcall
mov
aad
mov
test
inc
push
lret
xor
lcall
jg
negl
push
jp
dec
push
mov
push
and
rcrb
and
je
xchg
mov
filds
rol
push
jmp
sbb
sti
hlt
sbb
pushf
hlt
sbb
pop
jecxz
jge
es
data16
push
inc
push
popa
cmp
sbb
test
cmp
mov
das
cmp
loopne
push
inc
fisttpl
leave
stos
jle
jbe
cli
push
addl
inc
fisttps
popf
loope
push
stos
fninit
scas
mov
push
adc
ja
mov
mov
loopne
mov
lds
lods
mov
sub
fadd
mov
mov
cwtl
pop
xor
inc
xor
cmp
push
psllq
sub
icebp
mov
add
pop
cmc
sub
pop
dec
in
sbb
pop
aam
cs
mov
fimull
popa
lret
xchg
fdiv
out
daa
push
inc
loop
iret
xchg
cmp
push
lods
cs
xchg
movsb
inc
mov
pop
movsb
pop
pop
pusha
or
adc
jne
mov
into
jno
pop
jge
or
scas
inc
rorb
cs
mov
dec
lret
pop
xchg
lds
in
lock
xor
ret
test
inc
arpl
jno
notl
sbb
xor
fcoms
pop
add
xor
mov
lea
mov
and
xchg
add
cli
jae
fcomip
push
fiaddl
aam
inc
stos
rol
test
cmp
aaa
or
ret
ret
xchg
sbb
pop
out
shlb
arpl
and
or
or
stos
mov
add
out
inc
lea
inc
or
add
xlat
stos
sbbb
push
push
nop
add
aad
xchg
inc
mov
sbb
and
cmpsb
in
mov
dec
cmp
cmp
dec
mov
sbb
mov
jb
pop
nop
mov
addl
js
push
in
subps
lds
jbe
shrb
xor
sbb
jo
push
lret
roll
pop
xor
fsubr
out
loopne
pop
mov
stc
and
cmp
cltd
ja
jne
pop
repnz
dec
cmp
test
mov
mov
lcall
pop
ja
outsl
idivl
out
mov
test
pop
sub
jnp
push
add
inc
cmp
jecxz
sub
add
nop
fsubl
int3
stc
in
sbb
mov
imul
or
enter
jl
cmpsl
fwait
iret
lods
add
xor
inc
out
subb
add
mov
mov
mov
arpl
insl
pop
test
pusha
pop
aam
mov
shrl
fisttpll
push
xchg
sub
fbstp
mov
push
aad
leave
adc
push
jns
lods
lods
mov
dec
jae
inc
in
icebp
pop
adc
pop
test
jo
pop
cmp
inc
test
lret
mov
lret
inc
ficompl
add
jb
je
bound
inc
or
gs
cwtl
daa
push
loop
xchg
jb
ljmp
or
pop
mov
cmc
mov
jecxz
loope
pusha
insl
mov
cwtl
mov
std
nop
outsb
addr16
fnstcw
pop
jne
aaa
mov
xchg
insl
mov
push
fstpl
mov
cmp
adc
pushf
popa
stos
aad
mov
daa
pusha
push
xor
movsl
test
arpl
ss
mov
cmp
outsl
dec
xchg
stos
fdivrl
mov
xor
sbb
push
mov
rcrb
fsubp
mov
xchg
jo
mov
or
xchg
and
cmpsb
lods
test
stc
dec
lods
cwtl
into
xor
int
fcoms
pop
sbb
pop
xchg
shl
cmp
mov
cmpb
jecxz
mov
mov
pop
push
dec
fmuls
clc
jae
mov
ds
jns
clc
inc
rolb
push
mov
dec
stc
pop
cmpl
mov
jl
xor
pop
ret
mov
lods
and
jbe
fsubrl
cmpsb
jae
xchg
repnz
icebp
test
sar
negb
sub
fimuls
dec
aam
mov
call
or
sub
leave
fldl
fdivs
cmp
inc
lods
or
xchg
repnz
xchg
je
mov
inc
cmp
pop
cmpsl
xchg
cld
add
jecxz
jge
mov
aaa
push
push
push
pop
lcall
stc
lret
hlt
cmp
fcmovb
pop
jbe
lds
roll
ja
inc
scas
sbb
mov
lahf
dec
outsl
fidivl
dec
xchg
mov
xor
add
adc
and
out
nop
inc
ds
sahf
push
into
pop
sbb
lea
movsl
call
dec
cmp
mov
fcomps
inc
je
inc
cmc
nop
cmp
setno
pop
arpl
adc
sbb
and
mov
lods
gs
pushfw
lret
pop
dec
aam
gs
cmp
lahf
mov
dec
add
sbb
jb
dec
cld
inc
mov
mov
mov
cmp
push
adc
inc
jecxz
imul
arpl
sub
lcall
or
frndint
popa
rcl
mov
push
pop
or
sub
jbe
mov
mov
mov
dec
pop
adc
jp
cmpsb
bound
xchg
pushf
rcr
or
stos
movsl
femms
inc
xor
xchg
je
insl
mov
sub
mov
clc
or
ret
xor
sti
inc
push
pop
das
xor
push
icebp
add
jo
in
xor
xchg
ficomps
cmp
pop
xchg
sahf
or
push
es
pusha
pop
loopne
outsb
sbb
adc
add
lcall
mov
inc
sbb
push
jl,pt
or
jae
addr16
test
dec
orb
lds
in
sub
add
cmc
mov
and
sub
mov
aaa
fnsave
movsl
or
mov
and
outsb
pushf
test
mov
je
sub
cmp
cmp
dec
pushf
arpl
and
fildl
xchg
addr16
test
pop
fwait
cmp
pop
sub
push
xchg
pop
xor
jmp
sbb
data16
insl
adc
ja
sub
lret
adc
jg
es
and
or
adc
xor
fidivl
addr16
pop
sbb
jp
push
or
jnp
or
mov
sbb
stos
aas
subl
cmpsb
or
loope
pop
xor
jo
or
pop
sub
sbb
std
les
into
push
adc
shrl
push
xchg
push
imul
push
stos
mov
lock
inc
je
dec
or
scas
stos
sarb
inc
repnz
mov
dec
inc
xor
pop
jl
add
pop
dec
cmc
lods
xor
jecxz
lock
inc
cld
jae
xchg
jp
ret
jl
push
aas
subb
push
repnz
cmp
fcomi
pop
sti
cli
jle
jp
clc
fnstenv
jl
dec
sti
ffree
scas
icebp
mov
scas
pop
jae
push
aad
sub
movsb
add
mov
movsl
int3
push
shr
cmpb
xchg
dec
or
sub
mov
mov
mov
sti
cmp
aam
jl
fndisi(8087
sbb
fisubrs
jp
mov
lahf
pop
lar
dec
shrl
jbe,pt
out
inc
mov
pop
jns
and
ret
xor
pop
mov
scas
sahf
dec
xchg
inc
mov
lcall
ret
addr16
add
push
inc
outsl
inc
pop
cmp
movsb
sub
movsb
mov
sub
mov
xchg
push
xchg
lahf
mov
sbb
jmp
mov
xor
aad
sahf
shrl
dec
xlat
das
xchg
divl
cmpb
pop
mov
and
loope
sar
inc
pop
loopne
mov
es
test
mov
jae
push
jmp
hlt
mov
cmp
xchg
mov
push
mov
mov
mov
jnp
sbb
test
insb
ja
fs
pop
add
pop
mov
mov
shrl
mov
aad
adc
fldl
or
mov
popa
push
mov
leave
imul
adc
mov
mov
xlat
mov
fwait
mov
cmpsl
repz
aas
insl
loop
imul
pusha
jp
ja
js
movsb
mov
hlt
lret
xchg
fmul
jne
loopne
push
cs
mov
add
push
mov
mov
lret
jmp
fmull
adc
mov
imul
add
and
pop
insl
cmp
cmc
in
dec
jbe
or
shrl
in
adc
pop
les
lahf
xchg
inc
xor
fidivl
js
stos
orb
push
into
movsb
out
dec
sub
fadds
shll
jg
jge
imul
clc
fs
mov
fsubp
notb
mov
pushf
mov
test
pop
enter
packssdw
loopne
cmp
pop
popf
jae
shl
dec
add
fstpt
cmp
cmpb
pop
daa
dec
inc
mov
daa
jns
mov
rcrb
ret
adc
mov
mov
data16
jg
cmp
in
mov
xchg
pop
cs
push
jl
outsb
mov
cmpsl
movsl
iret
dec
xor
les
lods
mov
add
fcomps
xorl
cltd
mov
push
or
lea
xor
ret
ret
pop
pop
push
out
cmp
subb
mov
lods
sbb
ss
pop
mov
clc
subb
negl
inc
dec
and
aad
xchg
lret
mov
rorb
ljmp
out
sarb
pusha
insb
mov
cli
and
xchg
orl
ja
jge
jb
mov
sahf
sbb
push
inc
dec
clc
stos
cmp
pop
xchg
mov
sbbl
cvtps2pd
out
leave
mov
lahf
cmp
xor
test
dec
dec
push
add
or
or
mov
mov
push
mov
xorb
jae
popf
xchg
jle
and
cli
mov
daa
ds
fisttpll
mov
push
push
sbb
mov
mov
icebp
mov
cwtl
sti
pop
mov
adc
inc
sub
test
lock
out
mov
and
jecxz
mov
imul
xorl
lcall
sti
mov
mov
jne
inc
fldenv
clc
stos
adc
push
rcrl
inc
andl
jge
movsl
mov
push
cmp
dec
in
out
ljmp
and
cmp
in
jae
pop
sbb
adc
aaa
stos
leave
iret
pcmpgtb
lods
out
scas
into
repz
testb
loopne
inc
ss
or
mov
arpl
mov
push
or
jle
pop
das
dec
call
xchg
mov
push
sub
mov
in
arpl
test
jmp
dec
cmpsb
movsl
mov
in
outsb
sbb
sbb
mov
jle
insb
cs
stos
xchg
xor
or
fisttpll
out
jp
cmp
mov
jle
add
mov
pop
add
jne
incb
xchg
pop
mov
lahf
xchg
mov
or
sbb
xchg
cmp
jle
jp
sti
push
xchg
addr16
aad
pop
jne
push
pushf
push
outsl
in
add
lret
test
dec
dec
sarl
fs
enter
and
dec
cmp
inc
lea
xchg
dec
jmp
jle
and
ja
rorl
in
mov
or
shlb
mov
sbb
jbe
fistl
inc
out
es
cmp
dec
rolb
ja
shll
xlat
cwtl
cmp
jae
push
sbbl
cmp
push
mov
jge
std
or
xchg
xor
rcrb
push
adc
xor
mov
sbb
mov
pop
pop
or
js
push
aas
rorb
mov
sub
sub
arpl
lods
push
adc
loopne
lcall
scas
mov
cs
pop
cmp
mov
xor
xor
lret
push
cmpsl
push
and
xchg
std
fwait
int3
add
dec
fidivl
inc
xchg
cld
scas
adc
add
pop
test
mov
enter
pop
xor
cld
out
sub
xchg
sbb
addr16
mov
push
in
rcll
bound
aam
loope,pn
mov
insb
std
les
imul
or
mov
xor
inc
mov
push
imul
pop
mov
imulb
mov
loop
jmp
imul
inc
dec
sbb
aam
out
mov
xor
popa
int3
call
mov
dec
in
sbb
mov
in
mov
mov
mov
adcb
or
dec
inc
add
jl
or
and
outsl
sbb
mov
cmp
push
cmp
mov
std
aaa
mov
insl
xchg
je
cmp
dec
aam
xchg
jl
ljmp
js
jecxz
int
das
mov
or
int
imul
lret
add
xchg
jmp
shrb
push
add
sub
icebp
test
or
push
push
repz
mov
xchg
ret
into
data16
inc
push
adc
cmc
sbb
testb
ds
mov
or
sahf
mov
cli
imul
push
daa
mov
push
adc
cmpsl
dec
xchg
push
in
jo
fucomi
add
mov
and
and
movzwl
add
xlat
add
mov
bound
mov
ja
lea
inc
xor
push
hlt
push
mov
out
das
shrl
sti
cmp
imulb
jmp
fiaddl
out
mov
mov
adc
push
dec
or
ret
jmp
sahf
js
scas
das
jbe
adcb
leave
dec
pop
ret
fldt
lret
or
add
cmp
iret
mov
cmp
in
es
rorb
jo
inc
insl
push
adc
push
in
inc
jbe
sbb
in
out
cwtl
leave
inc
daa
cli
rcrl
rcrl
and
sbb
scas
jbe,pn
pusha
jl
fcomp
nop
push
arpl
jb
push
sbb
popf
aad
mov
xchg
pop
movsb
mov
fcmovnbe
mov
adc
repnz
fimull
cs
mov
and
orb
in
sbb
gs
sbb
xchg
aam
jo
gs
adc
fmull
testb
lods
pushf
push
outsl
lds
push
xorb
mov
fcoml
fnstcw
push
daa
and
scas
daa
adc
jae
enter
or
xorl
xchg
push
mov
in
xor
testl
es
and
imul
add
test
and
mov
sub
sbb
pushl
fidivl
or
xchg
dec
cs
into
inc
push
rep
jmp
data16
pop
insb
sahf
mov
ja
push
or
ljmp
aad
ffree
xchg
and
jbe
inc
sbb
test
pop
rclb
push
sti
outsl
xlat
mov
pop
test
shl
lods
clc
lods
dec
jne
enter
cmp
mov
pop
aam
adc
xor
cld
repz
mov
xchg
mov
paddusb
mov
jo
dec
mov
je
mov
mov
xor
add
pop
imul
bndldx
dec
pop
mov
lahf
xchg
and
push
lret
inc
mov
pop
test
into
sub
mov
out
loop
fs
es
pop
mov
jo
mov
fucomp
hlt
loop
cmpsb
push
cmp
and
cwtl
dec
pop
js
addb
lcall
lcall
je
sub
pushf
scas
or
pop
cld
clc
jge
gs
cmp
sti
push
mov
lret
jl
mov
mov
or
divb
bound
mov
add
mov
icebp
add
shl
adc
jecxz
sub
xor
pop
pop
enter
cmp
stos
lea
mov
or
pusha
scas
fildl
enter
adc
jbe
sti
jb,pt
aam
mov
mov
ljmp
or
enter
scas
or
push
cmc
mov
sarb
jae
andl
mov
pop
cli
in
lcall
mov
or
jae
notb
sbb
das
ret
mov
repz
ret
sbb
sar
cwtl
int
stc
mov
push
xorb
and
dec
aaa
or
sub
popa
add
das
xor
adc
jne
sbb
dec
push
outsl
imul
sbb
aad
pop
xor
add
insb
cmc
cmpsl
out
ret
fildll
mov
jne
fisubrl
mov
ja
mov
test
or
mov
xchg
fistpl
repnz
lock
inc
lds
xchg
cltd
adc
mov
shl
filds
push
or
mov
mov
faddl
scas
sarl
dec
xchg
mov
notl
push
and
stos
cmp
int
lret
push
inc
push
out
cmc
or
imulb
or
cltd
jo
sub
inc
jo
test
jl
lahf
push
add
xchg
mov
in
and
pop
xor
and
lret
mov
cmpl
cwtl
xchg
testb
movaps
sbb
lret
fwait
mov
int3
adc
mov
sbb
daa
stos
test
mov
xchg
xchg
pop
mov
xchg
test
xor
in
mov
ret
pop
mov
add
out
repnz
push
icebp
xlat
pop
pop
lds
cmp
es
ljmp
and
jmp
and
cld
shll
popa
xor
cwtl
cld
loope
lea
test
xchg
les
mov
dec
ds
ret
xchg
add
xchg
shl
sub
adc
shll
dec
lahf
sub
mov
scas
pop
xlat
lds
lods
mov
out
cmp
cmp
sbb
loopne
lods
adc
push
dec
jl
sbb
fnstenv
dec
icebp
and
ja
lahf
and
adc
es
out
cmpsb
bndldx
lcall
out
sub
leave
lret
xchg
outsb
adc
ret
jmp
cmp
iret
xchg
mov
testl
mov
and
sbb
inc
dec
push
and
aam
lock
inc
pop
mov
and
negl
popf
inc
fcoml
fldpi
mov
in
sbb
xor
jno
aam
insl
mov
and
decb
rcrb
sbb
iret
or
jbe
bound
mov
es
xchg
mov
lret
insl
adc
sbb
inc
xchg
and
pop
cli
sbb
or
inc
rclb
aaa
push
mov
pop
fisttps
push
mov
xor
dec
fsubp
cmp
dec
stc
fwait
jecxz
add
sbb
negl
adc
ljmp
into
lret
add
fdivrs
fstpt
mov
mov
fildll
xchg
and
sahf
push
aad
loop
fabs
xor
dec
and
push
hlt
lret
cmp
repnz
inc
adc
mov
lret
jns
leave
daa
dec
andl
push
inc
push
or
ret
pop
ljmp
cld
push
movsl
scas
cli
hlt
adc
leave
cltd
hlt
jecxz
or
mov
js
jecxz
push
in
jns
iret
ret
hlt
jne
fs
test
dec
cli
fcompl
cs
and
insb
jl
sbb
sarl
mov
mov
fcoms
xor
addr16
ret
xchg
outsl
jnp
xchg
je
xchg
mov
insl
hlt
fstps
adc
gs
mov
mov
sti
ljmp
jb
or
iret
xor
out
nop
cmp
dec
es
inc
mov
xchg
adc
outsb
pop
adcb
repz
lods
cmp
scas
mov
es
pop
lea
jo
xchg
push
les
adc
jbe
mov
cmp
cli
imul
cmp
mov
adc
pop
cli
dec
jae
mov
sbb
pop
add
aaa
insb
lock
push
int
add
in
hlt
ljmp
xchg
lcall
xchg
push
popf
enter
and
and
nop
add
dec
adc
ror
push
jge
xor
pop
push
and
int3
cwtl
xchg
inc
sbb
roll
cmp
xchg
sub
vcvtpd2psx
push
or
adcb
cwtl
outsl
pop
movsb
and
cs
sub
pop
addr16
sub
xor
add
and
jae
loop
mov
cld
mov
mov
cmp
dec
in
ja
cltd
lds
pop
clc
sub
inc
sub
adc
pop
dec
icebp
mov
lock
in
jg
inc
rorl
cmp
pop
mov
jecxz
mov
mov
cmp
sbb
push
mov
cmp
fnsave
push
pusha
mov
sub
xchg
fwait
sbb
data16
into
mov
mov
mov
pop
dec
decl
jp
push
pop
addl
add
xchg
sub
int
sti
adc
iret
add
jge
sbb
outsl
jmp
add
mov
aaa
cli
rolb
mov
stos
inc
aaa
lods
out
fcomps
leave
inc
aam
hlt
cmp
test
mov
push
cmp
xchg
dec
push
gs
imul
adc
add
jmp
xor
nop
xchg
movsb
aas
daa
inc
in
test
cwtl
sbb
jge
jo
dec
jne
lods
mov
push
push
push
sbb
call
cmc
out
cmp
or
mov
add
inc
dec
xor
xchg
daa
jns
mov
inc
idivl
dec
inc
into
adc
lret
scas
mov
mov
les
sbb
cli
or
mov
xchg
add
aam
hlt
nop
mov
and
aam
pop
jno
movsb
iret
mov
rorb
jo
pushf
outsb
test
ret
jmp
ss
in
test
fsts
les
xor
shlb
jno
push
gs
xor
movsb
ja
fmull
inc
shl
pop
dec
xchg
imul
dec
mov
push
into
and
add
adc
xor
cmp
mov
popf
leave
clc
dec
enter
mov
pop
bound
and
or
mov
jge
jns
shll
popf
in
cmp
xchg
lret
ljmp
xchg
fs
fcoms
push
jo
xor
stos
add
jmp
das
pop
bnd
add
outsl
pusha
and
es
pop
jnp
fmulp
cwtl
cmp
xchg
lahf
arpl
imul
popf
mov
scas
or
ljmp
xor
lods
daa
daa
push
stos
sbb
gs
adc
rol
fdivs
rcrb
rcrb
sbb
xor
cs
pop
or
mov
and
pop
fwait
cmpsb
and
and
cli
adc
icebp
mov
xlat
push
add
mov
sarb
movsl
neg
shrb
mov
dec
sbb
icebp
out
js
mov
xor
mov
fwait
push
jno
push
cmpsb
sbb
push
sbb
icebp
add
push
push
jno
xchg
nop
pop
cli
mov
cmp
inc
or
sbb
test
xorpd
test
ret
or
arpl
das
arpl
push
test
mov
cmp
adc
push
adc
and
add
gs
mov
dec
cmpl
mov
loop
sub
and
outsb
add
lcall
lcall
mov
sahf
lds
outsb
sbb
xchg
xchg
xor
mov
in
pop
out
ret
sub
or
stos
addr16
lods
xchg
mov
sahf
xor
shrl
pusha
push
mov
out
out
pop
ja
mov
and
inc
lock
and
xchg
fimull
stc
or
lods
sub
sahf
xchg
jns
cs
add
lea
js
into
and
mov
sub
jno
movsb
and
sbb
add
push
nop
enter
mov
xor
mov
fbld
adc
fisttpll
mov
jo
mov
call
jp
scas
fdivl
hlt
repz
jo
and
jecxz
xchg
enter
in
jnp
ret
push
push
fbstp
insl
mov
cmp
outsb
dec
sub
outsb
fisttps
movsl
adc
add
testl
cmp
aas
jmp
cltd
xor
lcall
mov
and
mov
add
push
mov
in
or
mov
xor
jno
gs
lea
cmpsl
hlt
cmova
stos
fcoml
cmp
or
add
cmp
loope
add
mov
int3
add
inc
int
hlt
or
movsb
xor
insb
sahf
cmp
shll
push
clc
push
mov
adc
test
out
dec
pop
lea
cmp
lea
es
dec
and
add
mov
fnsave
jge
scas
xchg
add
cmp
int
leave
mov
and
inc
insl
xchg
cltd
push
xor
add
lret
leave
adc
dec
inc
test
jmp
and
add
xchg
repnz
cwtl
xor
daa
shrl
mov
xchg
lock
cmpl
or
mov
mov
and
sahf
xor
shl
sbb
ds
lods
cmpb
and
cmpsb
cmp
xchg
insl
or
imul
pop
jmp
out
mov
roll
fstpt
push
lcall
xlat
sbb
in
sbb
jo
mov
lcall
call
mov
sub
cmp
mov
rolb
cwtl
cs
ss
or
shrb
push
ja
push
dec
insb
or
fidivs
scas
mov
dec
test
ret
imul
mov
mov
shrl
sbb
stc
sbb
lock
test
or
push
insl
lcall
fs
mov
shll
and
or
pushf
adc
les
dec
jp
insb
jnp
loope
dec
xchg
ret
mov
sub
push
dec
sti
xor
inc
dec
add
sbb
mov
add
sub
ret
fistps
test
adc
neg
inc
sbb
movsb
test
imul
mov
fs
bound
jmp
dec
xor
in
jnp
mov
sbb
movsl
pop
mov
xor
neg
popa
add
scas
sbb
loope
mov
leave
dec
jecxz
ret
jge
imul
fmull
divl
outsb
outsb
jne
loope
ljmp
jmp
xchg
jb
inc
ds
inc
out
cmc
repnz
mov
adc
lock
jg
test
inc
leave
sub
sbb
call
aas
jge
icebp
or
add
sbb
push
pop
arpl
test
and
push
add
or
test
loope
mov
sbb
push
mov
daa
add
cld
enter
in
cwtl
dec
push
pop
xor
add
fdivp
xlat
fs
mov
dec
jecxz
je
dec
in
mov
in
out
adc
decl
jnp
out
and
adc
loopne
fmuls
jmp
mov
mov
push
pop
insl
push
ss
push
dec
aas
ret
dec
pop
adc
inc
sub
adc
test
jle
rcr
je
sub
into
or
dec
cmp
pushf
out
jg
sub
out
cwtl
dec
test
jae
fdivrs
push
test
xchg
pop
in
xchg
movsb
lods
jne
aad
repnz
xchg
mov
mov
sbb
int3
push
pushf
jnp
mov
push
outsb
adc
jmp
xchg
push
mov
dec
arpl
je
mov
js
cmpsl
fildl
sbbl
xlat
xor
push
push
lods
push
or
faddp
push
test
std
pop
xor
in
test
imul
lret
jmp
xchg
pop
cmpsb
sub
pop
mov
fisttpl
les
cltd
push
pop
mov
outsl
mov
pop
mov
mov
in
sbb
ret
and
sbb
dec
add
pusha
aas
sbb
mov
xchg
repnz
rcll
test
or
lret
iret
mov
push
pop
mov
arpl
mov
push
iret
gs
clc
in
scas
push
cmp
leave
push
icebp
xchg
aaa
loope
add
xor
mov
test
stos
pop
stos
xchg
adc
adc
xchg
mov
jae
int
adcb
pop
arpl
shll
iret
dec
addr16
and
enter
lods
cli
aam
test
or
push
loop
fs
cmpsl
xor
jb
adc
popa
jbe
xchg
cmp
cmpb
std
test
mov
mov
sti
mov
and
js
or
push
adc
cmpb
mov
inc
popa
out
sbb
out
aaa
push
mov
gs
inc
add
fcompl
dec
add
add
push
inc
shlb
popa
pop
jbe
fwait
mov
add
cld
incl
js
sub
lret
fdivs
int
or
mov
out
pop
sub
ja
xchg
js
jns
cmp
pop
in
adc
jbe
inc
mov
call
mov
push
sub
loop
sti
lods
mov
sub
pop
cs
push
daa
loope
pop
add
dec
int3
cmp
dec
inc
in
fs
lret
jno
dec
repnz
jo
cmpsl
movsl
jbe
adc
in
and
mov
push
or
push
cwtl
les
mov
mov
sub
pop
lods
sub
jl,pn
xor
sub
mov
out
in
xor
scas
mov
loop
mov
loopne
dec
add
cmp
sbb
lods
cs
mov
sub
adc
in
nop
outsb
cmp
imul
inc
lods
inc
inc
inc
cmpb
cmpsb
fnstenv
arpl
jle
pop
cmp
adc
fcoml
stos
out
and
xchg
sarb
cld
popa
inc
cwtl
cld
cmpsb
int
jnp
dec
or
or
dec
pop
and
pop
mov
dec
lods
push
int3
xchg
jb
push
int
pop
cmp
lods
arpl
ljmp
mov
fmul
and
adc
xchg
or
lcall
jge
mov
jo
test
add
dec
push
cmp
cmp
jne
sbb
jl,pn
and
leave
mulb
jmp
sti
sub
sbb
push
lock
mov
mov
pop
pop
cmp
movsl
fsub
lods
mov
subl
jl
sbb
int3
mov
pop
add
lock
testb
sub
fildl
fwait
pop
or
imul
sub
mov
add
or
jle
mov
es
movsb
pop
push
xor
add
in
ret
aad
and
and
in
pop
or
xchg
out
sub
dec
lcall
pusha
aaa
jne
lods
mov
cmpsb
push
and
daa
or
ja
loop
gs
inc
dec
adc
cmp
test
dec
popf
dec
call
mov
mov
sub
lret
outsl
ret
insb
dec
sub
imul
in
mov
mov
sbb
popa
mov
stos
orl
stos
loope
aas
jmp
mov
test
mov
add
sub
aas
jmp
or
pop
ds
adc
and
test
rol
xchg
in
sti
pop
js
ljmp
testl
mov
pop
lcall
sbb
push
scas
pushw
sub
nop
sub
dec
pop
fwait
lret
mov
sub
aaa
outsl
or
fcmovbe
mov
popf
and
inc
jae
and
in
mov
sbbb
roll
or
push
pslld
sub
mov
mov
inc
sub
pop
xchg
push
xlat
and
inc
bound
mov
push
adc
ret
sti
xlat
jl
cmp
stos
mov
mov
sahf
xor
ss
je
out
pop
jle
mov
dec
adc
movsl
xor
mov
add
mov
loop
cmp
mov
adc
sbb
ljmp
inc
repz
pop
lea
pop
add
mov
popf
add
es
push
xchg
shll
mov
fnsave
cltd
xlat
xchg
push
ds
hlt
mov
out
bound
add
cmp
or
mov
mov
dec
jle
mov
outsb
test
pop
mov
inc
shr
cltd
mov
pop
cmc
outsb
ljmp
leave
lret
push
inc
cmpl
stos
add
stc
jo
std
jb
fmull
push
in
mov
dec
sub
and
scas
push
jo
shl
ljmp
jg
imulb
mov
sti
jne
sbb
fildll
jl
je
mov
xchg
ljmp
add
int
repz
cmp
mov
mov
mov
dec
lahf
cmovbe
lcall
pop
pop
mov
xchg
pop
push
mov
or
je
jns
daa
fimuls
lret
xor
or
xchg
mov
mov
lcall
push
daa
jp
dec
add
xor
mov
das
jne
stos
lret
testl
xor
mov
lret
int3
into
cmpsl
test
inc
mov
and
sub
sbb
inc
jne
xor
dec
xchg
mov
idivb
pop
xchg
adc
or
mov
leave
shll
xlat
cmpsl
sbb
adc
pop
cli
lret
aaa
push
pop
inc
or
dec
sbb
mov
popa
ja
aaa
cmpsl
mov
imul
sbb
test
mov
int
pushf
test
sub
stc
mov
in
jno
xchg
xchg
scas
into
mov
push
xchg
mov
imul
mov
rcl
pop
mov
icebp
ret
sarb
xor
or
imul
daa
cmpsb
pop
notb
or
adc
test
pop
mov
lahf
fimull
pop
sbb
xchg
lret
je
divl
fcompl
and
xor
negl
mov
fcoms
jg
sub
cmc
nop
int
push
aaa
adc
mov
in
ret
push
cmp
inc
ja
or
outsb
mov
mov
lock
out
push
jbe
mov
cs
arpl
pop
into
rorl
mov
cmp
rcrb
sbb
cmp
adc
lods
dec
add
or
sbb
scas
ficomps
jp
mov
mov
mov
out
enter
scas
ds
jg
add
xchg
sub
ds
pushf
jne
jmp
fcmovne
push
les
cmp
daa
mov
imul
inc
inc
pop
inc
cmp
xor
lods
dec
xchg
sbb
test
daa
cmp
pusha
mov
es
inc
xor
stc
popf
mov
mov
lret
ss
ret
xor
mov
sbb
mov
cmp
mov
sbb
sbb
xchg
test
test
jle
in
pop
loop
insb
xchg
mov
sub
faddl
push
jecxz
inc
mov
fildl
daa
xchg
jl
mov
and
jl
and
fcomi
enter
mov
fimuls
sbb
jns
jecxz
pop
loop
fidivs
pop
cwtl
push
add
orl
fistpl
jge
mov
std
into
mov
adc
cmp
sub
shl
pop
stc
daa
loop
int3
sub
fwait
gs
arpl
mov
xchg
push
outsb
cli
adc
mov
xor
stos
or
pop
xor
sub
fsubrp
mov
mov
pop
fcomps
insb
xchg
xchg
loope
adc
pop
ret
ret
sbb
dec
hlt
lea
gs
or
mov
aad
orl
mov
mov
cli
stc
in
cmpsb
xchg
repz
hlt
lods
and
inc
aaa
mov
add
nop
mov
sub
xchg
push
mov
dec
inc
ss
push
fsubrl
and
sbb
mov
pop
roll
xchg
scas
ljmp
push
pushf
mov
mov
pushl
repz
pusha
inc
cltd
xor
and
jbe
pop
sub
lds
ret
pop
dec
mov
sub
psllw
xchg
das
fsubl
popa
test
cmp
lds
aaa
or
add
dec
or
movsl
int3
arpl
adc
jle
dec
mov
in
cli
and
push
idivb
syscall
cwtl
lret
scas
lea
cmovnp
addr16
add
ficoms
cwtl
sub
ret
sub
add
movsb
inc
test
mov
loop
xchg
fwait
push
push
lea
stc
mov
or
mov
roll
mov
mov
stos
popa
les
popa
jmp
xchg
jo
pusha
int3
andl
cmp
leave
adc
int
aam
dec
insb
imul
add
jmp
sub
xchg
pop
dec
aaa
pop
add
mov
inc
mov
mov
stos
repnz
das
dec
sbb
pop
daa
insb
mov
mov
fwait
popa
cmp
into
mov
subb
inc
jmp
jmp
gs
loopne
leave
scas
jo
mov
das
test
fs
shll
jbe,pn
sub
pop
jp
lea
lds
add
xchg
out
sub
pop
in
sbb
or
fiaddl
xor
mov
stos
mov
inc
data16
nop
mov
loopne
sti
test
ret
fadd
rclb
cmp
jne
aas
cwtl
jge
mov
mov
jne
dec
cmp
jecxz
adc
xlat
mov
pop
sbb
fildl
push
mov
cs
aas
sub
push
ds
neg
push
pop
adc
nop
cs
loop
fs
jmp
cltd
xchg
jae
mov
cmp
into
gs
loop
adc
push
or
mov
mov
mov
inc
sbb
imul
adc
add
rorw
fsubrp
cwtl
scas
push
push
mov
repz
mov
mov
and
sub
stc
mov
sti
out
mov
iret
push
fdiv
pop
or
xchg
imul
ja
inc
iret
sub
push
add
cs
cmp
jecxz
xor
or
cmp
ja
push
cmp
mov
xor
test
js
mov
jnp
sti
mov
nop
call
push
add
adc
inc
pop
lods
mov
cltd
push
jo
mov
sbb
rorl
lods
push
dec
aas
pop
movl
and
sbb
sbb
daa
mov
push
ljmp
dec
dec
mov
cs
sub
lcall
aad
adc
mov
adc
test
adc
xor
outsl
inc
push
int
repnz
mov
cmp
cld
aam
xchg
adc
out
jno
arpl
out
sbb
leave
inc
mov
outsl
sbb
push
jns
aaa
cmp
adc
mov
fs
inc
inc
jae
bound
xor
leave
andb
stos
shll
jmp
mov
dec
mov
jp
mov
or
xchg
mov
pop
and
mov
mov
mov
pusha
frstor
pop
inc
imul
mov
decb
mov
pusha
popf
dec
fists
rclb
cmp
xchg
xorl
movsb
xchg
int
in
in
xor
xchg
xchg
test
sbb
jle
enter
mov
cmp
xor
pop
cli
lea
xor
vunpckhps
push
lahf
adc
add
int
mov
std
pop
and
es
dec
and
mov
mov
push
les
cmp
mov
lea
leave
aam
xchg
or
jno
ss
jbe
mov
cmpl
or
movsb
insb
push
lea
jg
cwtl
sbb
insb
sub
les
jl
dec
sub
xor
xchg
xchg
dec
cmp
negb
inc
cmpsb
decb
pop
out
jb
rolb
cli
jge
cli
bnd
dec
adc
mov
outsl
push
mov
sti
insl
inc
loopne
add
test
loop
inc
sub
dec
jno
mov
mov
add
cmp
jae
push
and
mov
mov
cmp
call
pop
mov
test
fistl
push
add
rcrl
fidivs
sahf
sbb
stos
inc
cmp
in
rolb
pop
loopne
jp
adc
mov
enter
movups
aam
aaa
inc
psubusb
mov
inc
daa
fwait
xor
jo
adc
in
adc
out
xchg
dec
dec
sti
lea
pop
xchg
cmp
push
inc
sub
xor
add
push
adc
inc
xchg
lahf
insl
xor
aaa
in
clc
je
mov
sahf
add
cmp
mov
cmp
mov
lea
sub
and
out
dec
push
inc
push
or
mov
sti
push
xchg
adc
rol
xor
push
cs
int3
push
aaa
push
dec
mov
daa
or
jmp
lahf
shrl
push
jbe
mov
push
jb
pop
aas
jp
lret
or
lock
bound
dec
aas
inc
sbb
aad
lret
jno
ds
aas
lahf
das
andl
rorl
leave
xchg
and
mov
sub
adc
adc
inc
lock
lcall
jecxz
inc
sub
sbb
fldt
mov
not
andb
cld
xor
cmp
and
iret
daa
xlat
add
ficompl
pop
pushf
leave
inc
outsb
or
mov
pusha
imul
das
xchg
shl
nop
cli
inc
shr
lret
and
outsb
mov
test
mov
sub
mov
imul
jns
ret
sub
int
add
scas
adc
loope
loopne
mov
stos
sub
pop
scas
xchg
xorl
aad
lret
repnz
out
xor
int
or
xor
jo
adc
sub
imul
imul
addr16
add
xchg
adcb
inc
pop
shll
mov
and
add
jle
and
mov
cmpsl
jmp
cmpsl
push
filds
push
push
cmp
mov
and
ss
adc
lock
xchg
cmp
push
add
xor
cmp
or
pop
enter
dec
das
rol
stos
fdivrl
cmp
inc
mov
cmp
mov
into
cld
hlt
pop
mov
ljmp
in
and
icebp
xor
iret
inc
pop
push
cmpb
and
or
pop
shrl
shrl
daa
outsl
xor
jnp
dec
add
in
xchg
jae
cwtl
pop
stos
mov
aad
dec
in
adc
or
mov
je
or
jge
inc
mov
shr
into
lcall
cld
imul
lock
cmp
xchg
outsl
enter
scas
xor
pop
cmp
movsb
aad
imul
jns
jns
push
cld
pop
xor
stc
adc
jno
mov
call
xlat
in
push
lahf
lods
icebp
push
daa
adc
popf
cmpsb
ljmp
bound
idivl
aaa
jb
ficomps
and
out
push
push
jne
and
mov
pop
cmpsl
es
jne
les
jns
outsl
mov
mov
rcrb
adc
scas
adc
or
cmp
adc
testb
inc
jns
dec
or
lret
sti
into
jnp
dec
dec
adc
lcall
adc
sub
fwait
adc
leave
xchg
clc
dec
inc
repz
cmp
mov
cli
mov
movsb
push
mov
push
push
test
mov
lods
pop
mov
aaa
arpl
lods
xchg
lahf
and
sbb
rcpps
mov
notl
inc
mov
fwait
scas
mov
cs
mov
test
into
inc
pop
cmp
mov
icebp
cmc
leave
jg
aas
aad
mov
aam
pop
das
into
leave
push
adc
add
mov
or
sbb
mov
js
mov
add
cmp
andb
mov
leave
inc
xor
xor
adc
jnp
cmc
mov
jmp
movsl
clc
insb
mov
sti
pushf
mov
popf
jb
out
enter
push
xchg
daa
pop
sbb
or
bound
pop
push
xor
clc
aas
inc
mov
adc
and
jo
sahf
insb
data16
aas
loop
outsl
mov
push
mov
inc
sub
cmp
lods
and
dec
rcll
push
inc
imul
ret
mov
imul
inc
call
mov
jno
outsl
cs
jo
cwtl
jns
mov
int
jne
inc
add
inc
rcrb
mov
pop
aas
cli
aaa
adc
and
test
cli
popf
jge
mov
std
inc
inc
fst
adc
loopne
pop
cmp
bound
ljmp
inc
push
add
bound
repnz
sbb
xchg
test
dec
mov
xchg
push
cmp
mov
jb
js
xchg
aam
xchg
movsl
cmp
push
dec
jno
xchg
and
imul
cld
sub
jo
cmpsl
dec
add
cs
insl
cmpsb
js
ja
dec
xchg
das
dec
insb
jle
lds
dec
sti
xchg
je
mov
int
inc
or
shl
test
adc
imul
repnz
mov
imul
xor
cld
xchg
clc
mov
mov
es
pusha
dec
sub
clc
lea
mov
inc
or
ror
in
or
jbe
jbe
pop
push
and
out
and
sub
and
divl
mov
popa
push
popa
xchg
xor
adc
repz
fs
mov
jae
sbb
std
push
test
adc
lret
mov
scas
sub
pop
lcall
xlat
mov
out
xchg
call
or
inc
cmpl
fdivs
mov
inc
add
icebp
out
movsb
add
insl
cwtl
mov
jmp
push
dec
and
sbb
daa
jb
jae
adc
cmpsb
decb
add
cmp
sub
das
call
insl
mov
movsl
jle
mov
imul
out
fdivrl
popa
mov
xchg
sahf
jo
shlb
cmpsb
sti
shlb
or
adc
std
repnz
inc
lret
mov
jecxz
jns
fsubr
popf
sub
mov
lcall
dec
outsb
cli
xor
mov
inc
and
mov
xchg
ds
insl
mov
popa
cmp
movl
movb
and
outsl
pop
fstps
sbb
jae
mov
adc
pushf
adc
loopne
pop
mov
xchg
mov
jne
out
incl
test
int
in
cmp
stos
cmpsb
test
xchg
and
clc
mov
mov
jb
int3
mov
mov
pop
lret
push
jno
lea
push
push
movsl
fdivs
xchg
dec
jecxz
cmovae
mov
add
dec
add
stos
jnp
inc
scas
sub
sbb
aam
push
mov
mov
inc
push
adc
pop
adc
dec
popa
pop
pusha
pop
jno
inc
stos
xchg
out
mov
or
or
arpl
mov
into
cmp
ss
clc
add
inc
loope
mov
out
fsubr
clc
or
inc
mov
cs
or
dec
movsb
mov
ljmp
ret
mov
test
popf
lds
jns
out
add
nop
jge
sub
imulb
xchg
xchg
dec
push
dec
sti
inc
cld
mov
cmpsl
repnz
mov
enter
fistl
and
sub
imul
sub
scas
loop
addr16
push
inc
repz
stos
pop
sbb
daa
pop
popl
dec
mov
push
ljmp
repnz
in
clc
scas
stos
movsb
sbbl
subl
mov
xor
cli
loope
pop
adc
mov
jo
mov
lods
pop
test
and
xlat
leave
ja
insl
sti
adc
sbb
fmuls
xchg
push
or
test
cmpsb
or
push
xchg
mov
imul
inc
shll
in
in
or
lahf
cmpsl
mov
inc
or
push
pop
mov
push
jne
outsb
in
or
push
fs
mov
push
jp
ret
lret
fisttpll
lods
adc
lcall
mov
rcl
xchg
or
sahf
cmp
lret
test
mov
or
sbb
inc
adc
gs
mov
cli
test
std
xchg
mov
test
adc
js
pop
sti
cwtl
cwtl
jp
clc
cmp
mov
xor
in
xor
or
lcall
daa
mov
sbb
sbbb
cmpsl
rolb
adc
xchg
pop
test
adc
sbb
adc
rcll
xchg
push
int
mov
gs
xchg
push
pop
loopne
es
stos
sbb
das
rcr
iret
scas
int3
shlb
pop
jecxz
scas
mov
mov
or
idivb
push
xor
mov
pop
fucom
adc
xchg
mov
cmpl
sbb
sahf
mov
xor
leave
cltd
cmp
pop
rclb
mov
in
and
les
hlt
xlat
out
nop
into
and
fwait
mov
xchg
test
fs
pop
lret
sti
mov
mov
jge
cwtl
xor
dec
stc
data16
in
mov
rcrl
mov
dec
into
and
jl
fisttpl
leave
add
jle
add
aaa
push
dec
lcall
iret
sbb
jo
cmp
mov
sbb
decb
pop
and
fcomps
rclb
sub
mov
add
inc
mov
or
jg
xchg
xor
out
addr16
sbb
in
fadds
cs
or
jle
sahf
or
add
mov
fstl
mov
imul
mov
popa
cmp
mov
data16
and
dec
inc
in
lods
pop
aas
xchg
or
xchg
addr16
fmul
adc
clc
mov
adc
bound
iret
xlat
xchg
iret
cmpsb
pop
xchg
gs
pop
mov
push
sahf
sub
ror
jle
dec
push
pop
mov
cmpsb
jbe
imul
stos
iret
add
fistpll
aaa
jbe
xor
or
dec
add
shll
inc
mov
dec
outsl
loopne
push
dec
js
insl
aam
add
xchg
cmc
arpl
mov
mov
loop
or
loope
dec
push
repz
jae
inc
xchg
mov
das
mov
cmp
adc
rcll
sub
cmp
sti
sti
popf
adc
lods
pop
das
sbb
adc
shrb
ret
inc
add
test
popa
inc
or
loop
mov
add
frstor
data16
out
test
lods
cmp
test
test
int3
sub
sub
jns
js
je
iret
mov
inc
filds
out
lds
movsb
adc
daa
pop
filds
loopne
pop
jbe
adc
mov
cld
sub
arpl
xlat
jge
and
jecxz
adc
nop
cmp
add
sbb
jno
mov
and
daa
mov
or
rcrl
lcall
aaa
and
cs
movsl
lods
std
xchg
aad
and
cmpsb
pusha
ret
sbb
pop
mov
aad
in
sbb
or
sbb
jnp
sub
sub
decb
rcr
jp
mov
mov
sbb
je
mov
stos
or
into
mov
notl
fnstcw
movl
in
scas
sub
pop
mov
mov
cltd
jle
imull
insb
sub
fnstsw
sbb
mov
mov
inc
push
fdivs
add
aad
add
push
xor
jmp
outsl
lods
mov
fiaddl
pusha
loop
dec
mov
inc
es
lods
rclb
and
mov
jge
lock
lods
cmpsl
dec
xor
mov
es
mov
sbb
aas
jp
inc
movsl
push
or
insl
inc
mov
mov
sub
xor
outsb
loope
sbb
jmp
push
mov
imul
push
cmp
jecxz
mov
jae
into
mov
lcall
leave
movsl
mov
dec
jb
cmp
fsubrp
stos
mov
sbb
or
fdivl
mov
pop
outsl
sub
sbb
lret
in
call
push
out
mov
pusha
mov
sub
je
inc
orl
mov
inc
aam
int3
sub
aam
fdivs
fucomi
loopne
lock
mov
adc
lock
pop
pop
pop
xchg
sbb
mov
data16
aam
into
push
pop
mov
dec
int3
aad
dec
push
out
mov
xchg
inc
mov
roll
xchg
mov
dec
gs
mov
push
and
cli
out
or
dec
clc
loopne
das
add
pushf
insb
mov
addb
mov
int3
mov
xor
pop
push
in
sub
add
jae
dec
inc
add
call
xor
clc
or
sbb
xchg
lret
sbb
cmp
xchg
mov
scas
lret
mov
inc
xchg
jnp
mov
cmpl
cli
ret
stos
mov
nop
sub
jmp
repnz
in
into
and
dec
pushf
out
decb
dec
xchg
ffree
aad
mov
jle
add
cmp
push
int3
xchg
rolb
sbb
inc
and
xchg
mov
cmp
push
dec
test
outsl
adc
jge
movsl
mov
dec
xor
movlps
xchg
lea
pop
xor
or
adc
movsb
pop
and
cmpsb
xchg
movsb
enter
cmp
lss
mov
mov
mov
icebp
xchg
sbb
push
out
pushf
mov
fucom
or
fisttpll
rorb
and
loopne
and
dec
cs
jo
lods
jb
lret
xorl
xchg
push
fst
cmp
inc
pushf
es
ud2
sbb
sub
rcrb
push
xorl
inc
jne
call
aad
push
pop
mov
pop
into
cmp
or
pop
repnz
testb
inc
adc
stos
jne
cltd
out
out
gs
sub
xchg
lahf
push
push
inc
dec
pop
stos
xchg
dec
int
pushw
cmp
mov
fidivrs
xchg
jmp
das
xor
scas
dec
push
adc
jmp
rcll
ljmp
and
xchg
mov
xchg
decl
xchg
inc
js
push
pop
push
lods
lods
loopne
sub
push
out
test
test
aas
fisubrl
and
lds
push
xor
add
dec
jae
mov
push
mov
gs
js
dec
sub
jmp
or
jbe,pt
mov
fs
pop
bound
test
mov
inc
dec
and
movsl
pop
push
mov
lahf
fdivl
cmp
and
rclb
push
pop
lahf
fimuls
lcall
shlb
movsb
ds
gs
cmc
aam
push
lret
outsb
mov
iret
pop
jae
outsb
sbb
sbbl
fnsave
sbbb
std
xor
scas
fchs
cwtl
xchg
notb
inc
and
dec
clc
dec
pop
cmpb
imul
dec
inc
movsb
daa
shrb
mov
pop
pop
jmp
repz
add
jo
daa
inc
pusha
ffree
movsb
in
fistpl
test
rclb
jnp
mov
push
pop
xor
inc
in
lods
xchg
jle
push
scas
rcrb
mov
fldl
sub
or
lret
es
push
aas
adc
cli
out
loope
fwait
test
or
jns
inc
mov
lods
jbe
js
adc
sti
adc
jp
adc
jmp
add
sub
movsb
jp
fdiv
sub
lock
movsb
cmp
xchg
cs
xor
repnz
jl
out
shr
add
cli
arpl
adc
mov
loopne
cmp
dec
inc
out
testl
jo
pushf
dec
push
fs
out
sub
movsl
push
dec
leave
pop
aaa
mov
enter
xchg
add
lahf
imul
pop
imul
pop
jmp
dec
fcmovnb
adc
imul
ret
leave
or
adc
hlt
test
push
lock
add
sahf
lods
adc
lcall
xor
fnsave
stc
into
shll
mov
loopne
push
push
into
jns
ret
push
test
movsl
mov
out
sub
jl
stc
cmp
daa
push
push
pop
or
mov
xchg
fidivrl
in
jb
imul
xchg
add
xchg
mov
mov
or
xchg
cwtl
cmc
shr
inc
jmp
test
lret
mov
leave
mov
sahf
mov
xor
test
sbb
roll
daa
dec
scas
adc
nop
dec
dec
leave
add
daa
cmc
adc
mov
sbb
cltd
jl
hlt
cwtl
inc
das
fdivr
loop
sub
shll
xchg
repz
aas
xchg
cmp
cmp
xor
xchg
outsb
shl
lahf
inc
movsb
cmp
pop
sbb
faddl
rolb
filds
imul
sbb
cmc
jl
pop
dec
ljmp
sub
insb
dec
call
jns
mov
xor
imul
push
neg
mov
lahf
inc
mov
inc
and
jge
or
push
xchg
jno
decl
ss
int3
xchg
clc
cmp
fldl
hlt
lahf
mov
je
adc
pop
rclb
mov
popf
or
dec
sub
mov
rcrb
push
pop
inc
enter
lods
lock
xor
mov
insl
bound
mov
roll
xchg
cli
and
push
scas
adc
mov
inc
lds
ja
push
pop
mov
lret
pusha
inc
mov
js
dec
fwait
mov
mov
cld
in
or
ret
insl
sub
pop
sbb
loop
push
das
cwtl
cli
push
out
das
mov
imul
dec
enter
and
pop
js
pop
das
pop
pop
xchg
add
inc
idiv
mov
fcoms
sbb
cwtl
in
nop
jno
cmp
inc
gs
or
imul
repnz
dec
push
pushl
add
ret
loope
push
leave
pop
shl
dec
popa
and
mov
mov
xchg
ret
lods
xchg
loopne
insl
mov
or
mov
mov
push
jle
addr16
fldl
inc
push
fsubs
imul
cmp
jmp
stos
sub
xchg
or
xchg
movsl
inc
sbb
int3
mov
outsb
mov
jno
std
dec
add
rolb
mov
jmp
and
jns
push
cs
lds
or
lods
push
push
addr16
call
and
and
rcr
mov
fstpt
or
and
fsubrs
test
outsb
mov
es
and
leave
and
cmp
add
ss
fnstcw
sub
mov
shr
jne
xor
jno
cli
es
clc
add
les
inc
dec
push
xorb
inc
sbb
sub
jo
sub
mov
cs
lret
call
pop
hlt
jp
aaa
xchg
lret
rclb
sti
cmp
int3
xor
andb
push
repz
loopne
mov
scas
arpl
push
lret
nop
sbb
lcall
iret
mov
sbb
repnz
mov
insb
int3
mov
mov
out
lds
pop
xchg
in
sbb
push
daa
shrl
cmp
xchg
inc
scas
mov
push
ret
imul
mov
fwait
mov
push
ss
push
pop
mov
mov
aas
adc
sbb
mov
enter
mov
std
es
mov
nop
push
arpl
xor
repnz
and
push
and
mov
cmp
cltd
xchg
out
adc
mov
sbb
pop
mov
adc
ljmp
pop
fisttps
jb
test
stos
add
or
cmp
outsb
shr
cmc
enter
scas
inc
sub
xchg
xlat
lods
sbb
mov
movswl
mov
in
out
inc
and
rorl
inc
fnstsw
mov
iret
ds
jb
ret
xlat
mov
daa
adc
or
push
jae
bound
sbb
inc
push
push
mov
cltd
into
sbb
lock
xor
xor
aas
bnd
stos
cmp
pop
and
leave
adc
or
sbb
add
mov
or
js
loopne
inc
push
mov
xchg
jp
popf
add
sbb
sbb
dec
lret
lret
aad
cmc
inc
outsl
fmull
pop
inc
lods
test
cmp
inc
test
pop
mov
repnz
insb
mov
xlat
es
sahf
and
push
jnp,pt
push
call
mov
push
imul
dec
xchg
leave
xchg
push
iret
lods
xchg
mov
inc
dec
and
push
pop
sbb
fwait
popf
jo
out
xor
popa
pop
rorb
or
inc
mov
push
lcall
push
enter
adc
fldcw
movsl
lods
scas
gs
rolb
and
push
ss
xor
cmp
mov
cmp
sbb
ds
inc
jne
pop
mov
sbbb
lret
fadd
notl
add
jl
or
lock
pop
aad
pop
pop
push
push
call
fwait
add
roll
sbb
out
dec
pop
push
nop
or
movsb
jp
imul
xor
sub
jl
xor
fs
mov
add
mov
and
je
mov
pop
mov
into
add
inc
stc
movsl
xchg
pop
scas
cmp
push
dec
mov
mov
je
xor
mov
inc
add
int
fcompl
push
jbe
add
shlb
sbb
pop
bound
pop
inc
shlb
jb
pushl
popa
scas
cmp
shr
mov
adc
dec
pop
scas
into
rcrb
das
pop
lods
and
nop
mov
dec
inc
xor
cmpsb
pushf
aad
jecxz
cmp
fnstsw
push
pushf
pop
add
xchg
inc
xchg
fmuls
arpl
and
nop
imul
mov
inc
or
aaa
add
lcall
xor
fsubs
ja
ds
jns
or
cltd
pop
mov
mov
scas
decb
dec
in
sar
lds
gs
mov
jl
rorl
sbbl
jecxz
loope
out
inc
xchg
outsb
adc
nop
stos
jg
jns
xchg
pop
jae
pop
adcl
dec
xchg
jmp
popf
dec
orb
add
insb
xorl
test
test
and
sahf
inc
bound
jnp
jb
test
push
je
ja
clc
imul
ljmp
testb
xor
push
les
test
sub
xchg
xchg
out
or
aad
scas
dec
push
jp
sub
xchg
fsubr
insb
es
fstpl
ljmp
adcl
cmp
cmp
push
jg
xor
aaa
sbb
fcmovb
inc
sbb
xchg
js
sbb
in
mov
ljmp
fnsave
rorb
jne
dec
movsb
fwait
inc
ljmp
inc
loope
mov
push
out
jp
adc
aad
adc
in
mov
xchg
jnp
repz
dec
and
imul
cmp
ret
arpl
push
seta
outsb
pop
clc
shll
or
push
cmp
out
mov
push
sub
aaa
insb
mov
cltd
daa
adc
sub
jmp
pop
lds
xor
arpl
inc
loop
out
in
std
xchg
xor
sar
mov
and
and
add
sub
fldl
inc
inc
push
sbb
jge
push
shrl
pusha
testl
es
pop
pusha
mov
dec
add
push
jle
xlat
adc
loope
mov
xchg
aas
or
out
je
into
testb
popf
dec
mov
sub
in
cmp
add
clc
fwait
in
dec
add
dec
subb
jbe
mov
xchg
das
int
les
rorb
inc
add
fdivs
inc
mov
sub
data16
cmp
sahf
out
loopne
ds
sub
mov
stc
cmp
ret
mov
fildl
jle
mov
sub
in
movsl
call
xor
sub
sbb
sub
adc
into
mov
test
sub
stos
push
pop
mov
mov
inc
loop
cmp
pop
lcall
sti
mov
fcompl
mov
and
jnp
cwtl
in
add
xchg
ljmp
cmp
enter
lea
outsl
mov
hlt
mov
jg
lds
jno
pushf
push
or
movsb
adc
scas
jmp
nop
mov
mov
and
adc
gs
mov
out
fcmovne
dec
pop
aad
int
push
cmc
mov
xchg
cli
adc
mov
stos
test
sbb
push
pusha
xlat
ret
bnd
ljmp
xchg
test
aas
sub
enter
dec
hlt
stos
je
sar
loope
mov
idivb
cs
mov
shrb
sub
jecxz
imul
adc
mov
cmp
rclb
dec
xchg
call
xor
lods
sbb
outsb
stos
ljmp
push
pop
adc
loope
ret
xchg
ss
jnp
jmp
inc
lret
and
outsb
adc
clc
rcll
lcall
push
mov
push
cmp
stos
insl
scas
xchg
scas
and
andb
movsl
xor
psubusw
into
fs
aam
andl
repnz
ret
cmp
ja
sub
push
jae
cmp
adc
jg
repz
inc
push
in
ficompl
mov
fdivrl
arpl
ret
or
jbe
add
mov
pop
gs
xor
push
adc
or
out
out
stos
cwtl
stc
adc
jae
push
inc
mov
mov
cmp
mov
and
test
sub
mov
sub
push
loop
outsl
mov
mov
lods
push
std
sbb
leave
sbb
adcb
cmc
fs
testb
jnp
inc
pop
jmp
cmc
jg
loopne
mov
inc
and
out
lret
jle
jge
movsb
int3
mov
sbb
jl
pop
xor
pop
sbb
xchg
jecxz
mov
jecxz
cltd
fisttps
loop
fsubrs
out
push
xor
mov
pusha
in
jmp
cs
cs
and
add
pop
ja
pop
or
je
dec
fiadds
lods
in
cmpsl
pop
lods
je
jne
outsb
dec
or
out
jg
mov
divl
lea
testl
insb
sti
into
jae
add
fildll
add
push
inc
imul
iret
xchg
mov
es
mov
or
inc
loopne
push
mov
loopne
mov
adc
aas
sar
push
sub
add
mov
xchg
out
hlt
push
aam
dec
repnz
push
nop
arpl
jns
inc
cmp
js
mov
in
fs
jo
mov
mov
imul
iret
jle
add
loopne
xchg
out
mov
push
adc
popa
mov
imul
pushf
fnstcw
push
inc
sub
filds
xchg
push
bound
push
xchg
leave
outsb
jno
loopne
repz
dec
add
cltd
mov
sahf
xchg
push
xlat
imul
cmp
lret
in
add
cmpsb
int
jnp
mov
ret
inc
mov
xchg
xor
sbb
xchg
mov
rolb
cs
mov
mov
mov
pop
adc
push
rorl
ret
dec
shl
cmc
push
add
sub
jne,pn
das
mov
and
lret
insl
xchg
in
pop
bound
arpl
rcll
dec
ja
fildl
popf
sub
sbb
dec
loopne
pop
mov
xor
dec
test
lods
stc
mov
pop
stc
shr
mov
and
int3
rcl
add
stc
and
dec
je
imulb
cmp
mov
loope
andb
jno
and
xor
sub
or
mov
loopne
mov
out
add
or
outsb
and
dec
jle
mov
sbb
add
ja
sub
cs
js
xchg
lea
and
xor
mov
shlb
outsl
mov
pop
or
ja
insl
mov
mov
call
pop
push
mov
inc
icebp
iret
pop
cmp
jmp
push
loope
mov
out
lcall
cmp
and
iret
dec
or
sub
or
xor
lret
mov
mov
or
push
mov
or
pusha
les
inc
push
pop
out
inc
mov
int3
mov
push
stos
jbe
cmp
aad
or
imul
cmc
push
mov
orl
mov
je
dec
sarl
cmc
in
sbb
scas
cmpsl
push
fnsetpm(287
jns
sub
jne
stc
mov
xor
xchg
sbb
cmp
insb
xchg
insb
je
pusha
dec
push
push
arpl
pop
das
mov
inc
or
xor
movsl
and
jnp
xchg
arpl
cmp
mov
loope
aaa
mov
lods
andb
or
cmp
stc
push
mov
ss
lea
adc
push
or
stc
sbb
fwait
stos
sub
push
ja
sub
fdivrs
add
jl
push
add
jae
in
pop
and
and
mov
stos
sahf
lcall
lods
mov
ss
pushfw
push
fldt
gs
aas
mov
sbb
jnp
lea
mov
ds
fists
cmp
jg
test
aam
inc
mov
aas
jno
mov
in
fs
mov
inc
xchg
subl
xchg
jecxz
notl
or
cmp
cli
popa
fwait
sub
rcrl
cmp
out
or
sbb
add
aaa
or
in
xchg
int3
ret
stos
inc
into
cld
cmp
ret
jl
sub
mov
hlt
or
push
ss
push
loope
fidivl
and
sbbl
cld
popf
jg
lods
mov
imul
loop,pt
lcall
mov
dec
je
ret
and
xchg
xchg
sbb
stos
jp
mov
mov
js
mull
and
aaa
inc
mov
hlt
pop
in
in
fcoml
ret
scas
fsubrl
jne
imul
rcr
imul
push
cs
fsubrs
jecxz
rcrl
cmc
xchg
rcrb
test
aad
lret
add
sbb
clc
xchg
or
cmpsb
cld
add
xchg
movsb
daa
mov
push
sub
dec
adc
sbb
pop
stos
jmp
dec
sbb
lods
cld
mov
pop
adc
add
jae
sub
inc
mov
not
adc
dec
pop
test
pop
cli
sub
jmp
mov
mov
inc
in
dec
and
leave
or
sbbb
sbb
mov
popl
lods
add
mov
fucomp
pop
push
xchg
test
ret
imul
iret
stos
bound
or
aaa
and
gs
hlt
and
dec
adc
adc
cmp
mov
cld
inc
sti
jmp
push
shrl
cmpsb
mov
jg
pusha
cmp
fcomi
ds
mov
int
fs
sub
into
mov
push
lds
jne
or
jnp
fcmove
dec
mov
test
mov
mov
and
push
xchg
imul
loope
out
js
dec
mov
or
pop
mov
jmp
mov
dec
punpckhbw
sub
cmp
rcrb
aas
je
adc
push
fldt
mov
sbb
cmp
faddp
imul
mov
andb
jmp
cmpsb
outsb
and
leave
fistl
ja
out
mov
jo
xor
xchg
shl
push
push
lds
sbb
fisubrl
lret
and
notb
stos
sub
fimull
pushf
dec
inc
inc
imul
mov
xchg
xchg
outsl
movsl
mov
cli
push
outsb
movsb
xchg
push
dec
data16
arpl
mov
or
sbb
adc
je
push
mov
pushf
or
and
xchg
pop
inc
data16
add
clc
js
dec
mov
sub
mov
xchg
mov
add
psadbw
cmpsl
jb
and
shrb
fadds
mov
call
aam
lcall
arpl
sub
mov
outsl
iret
out
out
outsl
lods
movsb
xor
sub
mull
fisubl
or
out
mov
add
pop
push
push
insl
xchg
in
loope
sbb
mov
push
ret
xor
cmp
mov
pop
pop
inc
jle
push
cmpsb
popf
outsb
fdivrs
in
push
call
sbb
aaa
dec
shrl
xor
push
add
jns
mov
incl
and
push
popf
lock
ret
add
bound
cmpsl
cld
loop
push
mov
mov
call
cmc
lret
xchg
lods
sbb
add
aas
mov
adc
lods
loopne
loope
int3
cld
loope
mov
shl
sub
sbb
cltd
inc
rorb
cmp
xor
lea
jp
das
sarw
xchg
in
ljmp
ja
mov
loopne
daa
sub
sub
loopne
and
inc
insb
mov
sub
pop
pop
pop
sbb
data16
cmc
xchg
inc
sbbl
mov
or
data16
popf
das
push
cmp
inc
or
dec
xor
loopne
cltd
test
sub
das
popa
imul
pop
xchg
jmp
test
jecxz
jns
pop
pop
fwait
xchg
fnstenv
aam
jne
imul
stc
xchg
push
das
mov
inc
imul
inc
xchg
outsl
fisubrl
lret
aas
pop
insl
inc
insl
pop
js
aaa
andl
lods
or
ret
into
dec
inc
js
fdivs
pop
xor
test
mov
cs
fsub
mov
adc
pusha
push
inc
in
scas
in
in
lock
outsl
data16
shlb
addr16
fldcw
add
sahf
insb
sub
fnstcw
iret
xchg
jp
testb
das
mov
int3
filds
sub
jmp
cli
push
pop
std
lods
xchg
jne
fwait
insb
sub
sarl
jno
or
aad
mov
xchg
jns
testb
inc
in
mov
mov
cmp
push
andb
aam
inc
outsl
loopne
shr
jl
mov
nopl
or
roll
and
int
push
dec
or
xor
popf
push
aaa
movsl
add
cmp
sub
jmp
mov
pop
hlt
pushw
repnz
dec
out
pop
inc
or
popf
push
xor
cltd
or
cmp
xchg
jmp
das
insl
mov
xor
test
jmp
jne
sarl
fistps
or
pop
pop
int
ljmp
sbb
das
cmp
lods
cwtl
pop
andb
pop
insl
push
adc
inc
adc
push
dec
or
mov
shll
xor
mov
mov
sbb
sbb
int
cmp
jp
add
bound
sbb
jl
mov
bound
imul
mov
mov
call
push
mov
jmp
in
xlat
leave
aas
and
movsb
and
movsl
sbb
pop
cmp
fisttpll
out
ds
addr16
and
fldt
jle
xchg
push
sarl
pop
loope
mov
jb
jle
adc
insl
sbb
jecxz
or
jno
mov
xchg
add
out
shrb
xchg
rcrb
test
or
cmc
and
es
jecxz
fwait
jecxz
mov
push
pop
inc
daa
fimull
inc
jnp
xchg
adc
adc
push
popf
mov
fidivs
sbb
jb
insl
rol
cmp
sar
pop
xchg
cmp
cli
adcl
dec
notl
neg
pusha
and
push
je
add
adc
push
sub
sbb
sbb
mov
ss
arpl
ret
mov
pop
mull
mov
pushf
test
imul
scas
leave
jns
lret
jne
inc
rorb
or
enter
ret
fs
pop
loopne
stos
pop
stc
xor
mov
sub
nop
add
fcmovnu
xchg
add
ret
rcll
push
sbb
xor
xor
mov
fnstcw
gs
xchg
mov
push
mov
repnz
dec
sub
push
into
ljmp
xchg
inc
mov
jg
je
mov
sbb
cmpsb
or
fisttpl
adc
push
and
fiaddl
adc
jno
push
add
xor
pusha
adc
dec
cmp
test
jmp
inc
add
sub
mov
icebp
lret
inc
loopne
xor
fdivrs
mov
xchg
inc
push
aas
fs
push
mov
jne
rcll
push
pop
mov
add
pop
imul
movsb
dec
ja
xchg
daa
in
dec
and
adc
jg,pt
mov
cli
xchg
dec
xchg
pop
lea
pop
call
adc
sahf
aas
push
cmpsb
sbb
mov
fimull
ds
push
push
call
mov
test
or
or
sub
daa
dec
xchg
push
mov
rcrb
cld
xchg
mov
fists
adcb
mov
movsb
xchg
ja
adcl
cmc
movsb
pop
mov
push
stos
cmp
add
mov
fistl
ds
jb
sbb
and
mov
cmpsb
es
jno
pop
rclb
pop
flds
jo
hlt
in
pop
insl
shrb
cmp
fxch
cmpsl
mov
rcrl
fidivl
cmpsb
dec
jne
in
jmp
mov
adc
pushf
insl
and
or
icebp
pushf
jg
jb
lret
sbbl
in
int3
sub
testb
call
lock
in
imul
leave
notl
mov
lock
push
outsb
iret
repz
aad
pop
ja
or
push
and
std
sti
xor
sbb
xchg
adc
out
mov
push
or
xor
or
flds
or
pop
aam
lods
inc
stos
ror
xlat
in
sub
xchg
adc
pop
outsb
fwait
pop
in
mov
int
shr
or
add
ret
and
jl
xchg
call
push
pop
out
loope
bound
sti
popa
adc
test
arpl
adc
mov
andl
push
or
ss
lahf
inc
push
outsb
mov
ret
push
sub
jbe
xor
lret
je
mov
in
mov
aam
test
ja
cmpsl
cwtl
sbb
jbe
push
pop
mov
shlb
subb
roll
lock
add
push
and
sbb
push
or
lock
cmp
aas
mov
inc
push
push
mov
stos
sub
xor
jo
xor
sbb
dec
adc
add
sub
xchg
mov
imul
int
data16
out
lahf
dec
jno
mov
mov
fcmovbe
xchg
pop
loop
jne
orl
mov
push
or
shll
lahf
lods
lcall
stc
add
pop
rcll
jno
lea
or
sbb
adc
adc
addl
out
popf
cmpsl
popf
test
add
push
push
repnz
pop
sbb
cwtl
or
sub
ror
xchg
popa
inc
xchg
andl
loope
and
cmpsb
fcmovnb
add
mov
insl
sahf
jge
mov
rcll
icebp
cmp
cmp
es
add
push
sbb
dec
add
arpl
out
ficoms
cmpsb
stos
outsb
sar
hlt
mov
pop
lock
inc
or
lock
pop
es
aam
dec
sarb
outsb
jmp
incl
pop
xchg
sbb
aam
mov
push
scas
adc
jbe
pop
ret
stc
out
and
cmp
nop
scas
fmul
rorl
mov
insl
sahf
cmp
cmp
dec
outsb
ret
xor
mul
mov
mov
movsb
push
sbb
and
arpl
es
pop
add
out
cs
mov
jle
lds
faddl
mov
bound
and
add
push
cli
ss
inc
lcall
pop
lret
sub
cwtl
push
bound
mov
fabs
lods
pop
mov
mov
pop
pop
out
enter
sbb
les
lahf
loope
inc
xchg
and
pop
and
incl
ds
test
sub
inc
out
mov
fwait
pop
mov
xchg
push
jno
mov
mov
cmpsb
ror
xchg
lock
shll
stc
or
push
fsubs
out
cmp
into
in
and
mov
xchg
shll
jge
insl
mov
sti
imul
jno
movl
jecxz
inc
scas
jne
mov
cmp
popa
inc
or
fs
sbb
pushf
rcrb
xor
jmp
cmp
xchg
pop
mov
add
scas
inc
lds
out
push
leave
or
xor
test
movsl
ret
cwtl
mov
stos
mov
mov
xchg
out
sub
pop
jmp
xor
push
mov
jae
xchg
mov
repnz
or
sub
pop
xchg
lock
pop
and
mov
ja
push
in
mov
gs
sub
leave
xchg
mov
xchg
out
lds
or
jnp
mov
xchg
std
emms
fstpt
arpl
inc
dec
out
fimull
sub
pop
and
in
mov
cmp
inc
notb
nop
test
mov
pop
lcall
inc
imul
jp
and
mov
movsl
dec
fimuls
sub
cmp
and
ljmp
dec
mov
mov
fistl
mov
cltd
lods
in
inc
push
sbb
iret
fldt
mov
stos
mov
pop
adc
jnp
mov
fsubrl
lds
mov
rorl
call
popa
loop
or
adc
imul
fbstp
in
ret
int3
outsl
lret
mov
nop
push
or
or
mov
std
lods
sbb
fcomps
fisttps
clc
mov
adc
pop
ss
xor
xchg
sub
inc
lea
icebp
fistl
push
pop
push
mov
ror
test
cli
jo
sbb
rcl
arpl
mov
pop
inc
popa
iret
inc
repnz
fstpl
insb
adc
mov
jecxz
cmp
mov
mov
mov
lahf
loopne
inc
xchg
mov
pop
sub
jne
adc
xor
sub
push
jge
xor
testl
and
jmp
mov
push
cmp
rcrb
xor
mov
addr16
mov
test
repnz
insl
fcoms
dec
dec
addb
loopne
scas
xchg
xor
lahf
outsb
rorb
mov
pop
frstor
pop
mov
and
subb
les
xchg
dec
in
push
inc
xchg
mov
mov
and
fisubrl
cltd
nop
imul
push
or
jno,pt
fildl
xlat
jge
and
aaa
or
pop
cli
mov
push
out
ljmp
popf
xlat
sahf
and
mov
in
aad
ret
mov
push
arpl
xor
and
adc
shll
arpl
divl
loope
pop
pop
jg
pop
xchg
mov
add
movsl
test
rcr
dec
ja
pushf
sbb
jnp
mov
jb
outsb
cld
out
xchg
pusha
dec
mov
mov
mov
add
stos
add
in
fs
pop
ljmp
lret
not
out
push
jge
push
xchg
mov
xchg
inc
fiadds
iret
push
test
and
stos
stos
cmp
pop
mov
add
pusha
hlt
add
test
int3
test
cmp
push
das
jno
sbb
das
cmp
jbe
call
cmpsb
pop
ret
xor
xlat
mov
lea
repnz
clc
pusha
test
xchg
and
out
test
sub
andl
pop
ja
pop
sbb
xor
sar
mov
jmp
jb
fstpl
mov
mov
cmp
dec
and
data16
or
push
into
push
in
dec
ljmp
inc
push
inc
cmp
popf
cwtl
ret
push
test
xor
call
xchg
movsl
mov
or
fistl
repnz
cli
dec
or
pushf
outsb
icebp
sub
pop
movsl
sahf
lret
xor
int
or
xchg
dec
movsl
es
rcl
push
jle
cmpsl
xchg
scas
nop
imul
mov
jnp
test
sub
addr16
sub
test
mov
cmc
or
fwait
jmp
outsl
popf
pop
jb
into
std
loop
mov
sub
sbb
or
or
adc
inc
add
and
adc
push
int3
pop
and
jmp
inc
int
std
cltd
pushf
ret
lock
and
jp
icebp
test
xchg
dec
pop
push
andb
out
shlb
scas
sbb
mov
gs
rcl
out
fstpt
pop
rclb
add
inc
pop
pop
xchg
lea
pop
mov
dec
push
es
sbb
or
mov
inc
inc
test
lods
add
imul
inc
ss
lock
push
pop
adc
jge
fnstsw
xchg
icebp
mov
or
inc
push
orb
mov
subl
xor
inc
mov
scas
add
mov
push
push
pusha
push
lods
inc
xor
mov
std
rolb
in
nop
mov
mov
adcb
repnz
and
clc
or
mov
imul
sub
std
filds
hlt
out
dec
sub
mov
mov
mov
push
xor
rol
iret
pop
data16
adc
push
imul
mov
push
mulb
insl
jecxz
dec
push
xchg
inc
cmp
add
pop
orl
mov
or
adc
inc
jge
je
clc
repnz
mov
movsl
repnz
xchg
jp
addr16
and
ficoml
xchg
adc
xor
cwtl
bswap
xchg
int
xor
push
jg
push
pop
sub
adc
inc
xor
add
or
stos
push
xor
scas
addr16
sbb
sub
xchg
stc
fldenv
and
or
push
push
push
scas
dec
cmpsl
push
scas
cmp
xor
cmpsl
xor
ret
fwait
inc
mov
lea
rep
lock
hlt
xor
mov
in
fs
xlat
inc
or
jge
das
cmp
pushf
sub
xchg
imul
fcmovb
pop
adc
mov
jecxz
sub
mov
jl
aas
aam
sub
and
test
cmp
cmc
movsl
or
and
popf
jg
push
xchg
and
xchg
xchg
clc
je
pop
dec
xchg
adc
out
ja
sub
scas
and
clc
push
sbb
aad
hlt
xchg
fisubl
cmc
js
pop
mov
pop
mov
mov
push
dec
jo
pop
pop
ja
ficoml
jle
jl
idivb
dec
mov
push
stc
inc
lret
fimull
and
adc
int3
sti
into
gs
jge
jo
aad
shrb
out
mov
mov
mov
jge
pop
mov
xchg
scas
addr16
rorl
adc
sbb
incl
lods
fs
lods
dec
paddusw
dec
ja
jbe
dec
dec
xchg
mov
clc
jb
dec
movsb
sub
or
xchg
dec
xor
jg
dec
movsl
push
js
sub
inc
cli
fs
leave
icebp
jmp
dec
sub
xor
adc
ja
aas
xchg
inc
push
daa
mov
xor
mov
hlt
inc
xlat
mov
xchg
push
in
xor
mov
out
and
and
push
mov
mull
repz
jb
punpcklbw
daa
test
mov
test
adc
jbe
nop
sti
cmp
xchg
cmp
mov
rcrb
mov
add
lret
lret
pop
in
sub
pop
es
call
sbb
in
push
pop
pop
sub
pop
mov
jge
and
cmp
mov
inc
mov
inc
jnp
jecxz
pop
cld
jne
loope
jns
mov
sbb
jle
and
repz
jl
sub
dec
sub
or
xor
mov
dec
cmp
or
sub
outsl
rcrl
inc
xchg
in
sub
popa
push
insl
mov
outsl
pop
push
xchg
sbb
cli
sub
fimuls
loop
ds
xor
adcb
mov
cmp
insl
idivl
push
jle
xchg
pop
pop
les
sbb
mov
inc
dec
fisttpll
fisttps
pop
arpl
pop
cmp
repz
cmp
bnd
or
into
push
movsl
xor
and
pop
jle
inc
xchg
inc
jae
dec
xchg
ljmp
std
repz
mov
inc
mov
pop
push
dec
mov
repz
add
sti
lods
mov
insb
cmp
insb
xor
cmp
pop
out
jl
repz
push
sbb
mov
xchg
insb
in
insl
inc
adc
scas
mov
out
sbb
das
loope
xor
in
mov
xchg
into
bound
add
sbb
sbb
cwtl
cmp
divl
cmp
inc
mov
int
leave
stos
jb
xchg
orl
fdivr
out
sub
ja
inc
lods
sbb
aas
outsb
sti
push
pop
inc
push
mov
mov
jmp
xchg
popf
pop
imul
or
arpl
jmp
dec
stc
lods
nop
leave
add
jl
sbb
lds
imul
jp
ror
cmp
repnz
insb
hlt
sbb
ljmp
inc
mov
aad
or
icebp
inc
sti
in
out
cmc
popa
popl
arpl
cmp
insb
das
mov
push
jg
xor
sbbl
and
jno
xchg
imul
push
daa
out
fcomp
pop
sbb
addb
js
cld
pop
mov
enter
mov
cmp
inc
sub
repz
cmp
sbb
mov
sbb
add
in
lcall
sbb
xchg
adc
jge
xchg
push
push
pop
insl
or
mov
inc
add
inc
push
dec
fcmovb
cmp
jl
push
insb
out
rcl
mov
mov
arpl
mov
enter
cmc
jo
sub
sbb
pushf
and
fildl
mov
int3
or
mov
fs
mull
outsl
cmc
repz
xlat
jg
scas
sbb
pop
push
loopne
sub
leave
loope
inc
cmpsb
imul
mov
mov
test
jge
adc
lea
push
sub
lods
mov
pop
dec
enter
push
out
out
or
mov
and
push
out
test
adc
and
sub
inc
in
sbb
outsb
pop
jle
loopne
lds
lcall
adc
xchg
ret
aaa
stos
sbb
aad
cmpb
test
pop
in
cmp
or
je
push
mov
adc
add
push
push
xor
xchg
cmp
ret
gs
in
movsb
nop
lret
test
sbbl
mov
sahf
mov
movsl
sahf
nop
sbb
sti
push
mov
pop
dec
push
negb
inc
cmpsb
xor
negb
mov
jb
or
aaa
cmp
loop
ret
mov
jae
mov
ljmp
sahf
mov
jle
pop
ljmp
or
std
xchg
mov
fstpl
enter
addl
sbb
insb
inc
cmp
adc
jb
in
nop
pop
stos
cmpsb
xchg
add
push
movsb
cmp
in
stos
movsl
jg
or
sbb
decb
jb
adc
push
arpl
push
mov
pop
rcrl
addb
ja
or
stc
lahf
test
ret
cltd
mov
xchg
stos
push
xchg
mov
pop
push
mov
inc
jno
jo
mov
add
movsb
call
clc
stc
jle
pop
mov
fbld
xor
jb
jl
cmp
lods
dec
adc
and
insb
xchg
shll
mov
hlt
fstpt
push
test
pop
div
inc
pop
jae
mov
roll
inc
pop
stos
inc
out
aam
addr16
lcall
mov
in
cmp
jg
sbb
js
addr16
dec
sub
fdivrs
pop
imul
mov
aam
addr16
out
mov
inc
jge
call
sub
int
into
push
imul
mov
xchg
lods
push
mov
rcll
push
adc
rcrb
dec
sub
enter
mov
out
cmpsb
jmp
and
and
out
ss
aam
fdivr
mov
xchg
hlt
dec
add
add
ficomps
mov
add
jle
push
movsb
push
dec
iret
in
call
in
jg
mov
testb
lahf
lret
push
aad
push
loope
icebp
bound
into
sbb
jg
je
sbb
jmp
sbb
or
loopne
sbb
mov
jae
aad
cmpsb
std
out
pusha
sub
pop
adc
loope
push
push
data16
test
mov
cli
dec
loop
mov
repz
add
out
xor
faddl
ljmp
sbb
outsl
push
adc
insb
jne
repz
dec
jl
insl
sub
and
adc
jmp
popa
lds
int3
sub
stos
sub
into
and
iret
shlb
lahf
aam
lahf
ljmp
in
loopne
xor
test
mov
sar
xor
fsts
loopne
mov
pop
cmp
cwtl
adc
nop
stos
int
mov
adc
or
loopne
dec
lcall
or
hlt
mov
jae
adcb
adc
mov
jns
sbb
xor
loopne
and
xor
rcr
mov
mov
jnp
loope
ror
jle
jecxz
adc
cmp
adc
cmp
jl
test
arpl
sarb
call
mov
pushf
push
mov
and
aad
sub
mulb
test
arpl
stc
cmp
push
int
lods
jns
xchg
test
adc
push
lock
adc
mov
cmp
push
repnz
cmp
mov
fnsave
iret
pusha
test
jmp
xchg
repnz
pop
test
lahf
push
adc
lds
ds
out
cmc
out
popa
and
lret
and
cld
adc
test
nop
jae
call
xor
mov
lods
push
dec
imul
mov
test
pop
je
sub
in
rcll
scas
mov
ficoms
mov
insl
and
fisttpll
out
push
pop
inc
jne
lods
or
pop
ss
push
push
into
xchg
ljmp
jg
adc
mov
mov
push
popa
gs
lcall
lods
std
jns
test
aas
call
adc
cli
pusha
xlat
pop
push
arpl
xor
sahf
outsb
xor
mov
lcall
pop
adc
fwait
das
rcrb
int3
shl
or
jbe
sbb
and
push
test
lods
xchg
push
dec
mov
mov
mov
icebp
fs
xchg
jle
mov
dec
mov
xchg
dec
subb
icebp
push
add
movsl
or
jno
mov
pop
pop
out
arpl
dec
js
xchg
shlb
xchg
test
faddl
xor
inc
mov
outsl
fildl
jl
pusha
xchg
pop
inc
imul
add
dec
std
push
mov
shrb
push
rorl
data16
roll
cmc
js
aam
sbb
hlt
movsl
and
pop
icebp
rcrl
push
cmp
cmp
vcvtph2ps
aas
inc
push
cld
sbb
sbb
push
outsl
decb
lea
cld
mov
pop
sbb
hlt
adc
ficomps
icebp
jns
pop
mov
inc
sub
xor
cltd
out
shufps
xor
jg
faddp
test
jnp
inc
inc
shlb
cmp
fwait
cmpl
push
subb
xacquire
stos
enter
popl
push
jg
lock
sbb
sbb
cld
pushf
dec
std
or
pop
xlat
mov
dec
pop
popa
mov
or
loope
lahf
sti
push
sbb
sub
inc
aaa
jg
ja
mov
mov
mov
push
mov
cmp
xchg
push
push
aas
adc
sahf
or
xchg
inc
testl
repnz
lods
jecxz
and
cmpb
scas
sbb
inc
mov
mov
push
adc
sbb
jb
mov
lods
mov
xor
or
pusha
cmp
js
push
pop
add
outsl
ja
mov
cld
cld
lock
stc
outsl
es
fwait
lahf
into
dec
cmpsb
or
sbb
rorl
cmp
mov
fisubrl
mov
stos
lea
sub
jae
mov
cmc
pmulhw
push
inc
mov
mov
out
sbb
movsl
xchg
inc
mov
aaa
inc
jb
ds
lret
push
mov
dec
lret
dec
imul
xchg
push
std
std
imul
mov
je
leave
jecxz
mov
out
xchg
dec
lods
iret
movsl
or
pop
push
push
mov
jmp
push
cmp
rcrl
lahf
orl
mov
dec
in
clc
push
xchg
cmp
lock
ds
imul
test
sub
add
ret
rorl
jl
push
push
jle
test
sub
int3
push
cs
arpl
mov
mov
xor
jnp
daa
je
mov
mov
mov
pushf
fldl
push
pop
mov
push
loope
addr16
es
cmp
sbb
insb
stos
mov
add
pusha
stc
fidivrs
popa
add
nop
push
xchg
pusha
add
cmp
mov
loop
lcall
cwtl
hlt
scas
cmp
in
jl
xor
mov
lcall
inc
jle
stc
add
add
lret
sub
dec
adc
sub
ss
fcomip
aaa
outsb
mov
loop
data16
mov
xchg
xchg
inc
loop
add
pop
dec
cmpsl
mov
je
dec
cmpsl
sub
pop
dec
iret
nop
fs
cmp
jl
dec
push
js
jne
mov
push
mov
pop
int3
push
mov
sbb
in
pop
in
xchg
cmc
or
adc
or
jmp
xchg
jne
shrb
or
repz
out
pop
mov
lcall
nop
lods
mov
add
adc
push
adc
cltd
gs
lret
aas
sbb
in
imul
test
sahf
xlat
int
dec
lock
push
add
mov
out
dec
fwait
push
jg
adc
ljmp
fcomps
ss
jl
lods
clc
push
into
popa
loope
jecxz
mov
fildl
xor
mov
adc
ret
outsb
imul
push
rorb
call
xchg
fisubl
lods
cld
xchg
dec
lock
add
lods
mov
push
mov
inc
ja
cmpb
mov
rep
ds
mov
popa
sbb
mov
repz
cwtl
repz
xlat
aad
dec
jp
or
dec
dec
inc
cmc
ja
ficoms
ljmp
inc
jnp
or
xchg
insb
addl
dec
mov
les
xchg
jbe
dec
stos
jle
xchg
jbe
sbb
mov
fimull
jmp
cmp
jge
xchg
ret
push
or
test
xchg
jp
lods
jle
adc
out
pop
aam
sub
adc
xchg
or
mov
aad
repz
jecxz
xlat
push
jns
add
inc
inc
or
nop
dec
unpckhps
lcall
mov
movsb
stos
lahf
mov
lods
mov
push
push
pop
inc
aam
shll
sub
pop
lds
add
outsb
mov
sub
mov
pop
roll
inc
bound
mov
or
sbb
fadds
adc
inc
cmp
popf
sbb
lret
jmp
in
xor
inc
stos
add
inc
push
jbe
push
add
nop
loop
or
xlat
xchg
push
push
cmp
nop
imul
in
cmp
mov
mov
and
shll
sub
push
inc
test
cltd
and
jae
jge
push
jle
sbb
cmp
push
subb
inc
aaa
movsb
mov
je
rorl
out
xchg
sbb
int
lea
jmp
jne
push
je
iret
adc
jb
loopne
sub
cwtl
mov
stos
sbb
pop
dec
sbb
xchg
test
std
xor
mov
adc
ret
push
cmc
cmpl
lret
mov
adc
pop
pop
hlt
xor
or
insb
xor
jno
loopne
adc
pop
sbb
sub
icebp
push
mov
adc
rcll
pop
push
jo
push
jge
loope
mov
test
int3
pop
mov
test
jbe
xchg
lret
subl
pop
imul
adc
jo
add
dec
cmc
xchg
cli
xchg
add
test
push
ja
flds
cmp
mov
push
xlat
jmp
sbb
mov
mov
jns
push
bnd
fabs
lahf
fs
dec
out
das
out
cmpsb
pop
cmp
lock
add
inc
pop
xchg
or
ficomps
xchg
cwtl
add
shrl
inc
xchg
xor
jbe
push
pop
repnz
cltd
stos
mov
frstor
subb
test
es
cwtl
ret
pop
mov
insl
dec
dec
adc
add
stc
lock
mov
cmpsl
pop
pop
inc
mov
fcmovu
fcompl
in
jge
outsl
ret
nop
int3
mov
mov
ret
mov
pop
add
dec
subl
fsubl
mov
sub
dec
test
test
xchg
add
loopne
hlt
test
sub
cld
pop
jecxz
mov
push
push
adc
mov
das
lahf
jle
lock
movaps
jmp
mov
or
and
notb
inc
leave
fidivrl
fcmovu
cmp
xchg
hlt
lea
lret
mov
test
and
cmp
enter
jg
in
sub
fldt
sub
cmc
out
jge
mov
sub
xchg
orb
pushf
in
and
xchg
push
lret
xchg
jbe
xchg
xchg
pop
fisttps
cmpsb
leave
adc
outsl
dec
sub
jecxz
add
pop
icebp
cmc
pop
ficoms
pushf
jle
imul
push
cmp
repnz
jno
add
or
dec
mov
mov
js
iret
jl
lahf
push
push
scas
cmp
mov
repz
adc
jo
lock
mov
sbb
xor
subb
pusha
in
adc
pop
imul
dec
mov
das
imul
fldt
enter
sbb
push
icebp
push
pop
std
sbb
imul
or
xchg
test
or
dec
stc
scas
dec
test
mov
fisubrl
mov
mov
pusha
and
xchg
repnz
jae
mov
jl
aas
rcrb
repz
enter
add
mov
fmuls
push
icebp
xchg
xor
pop
into
cmp
jl
cltd
addl
jo
bound
jle
inc
push
sub
mov
mov
lock
push
inc
ret
imul
movsl
cld
jmp
jmp
mov
loope
xchg
leave
cmp
adc
js
sbb
jno
outsl
pop
xchg
mov
mov
jge
jns
and
loope
in
sbb
mov
jne
and
in
mov
mov
xchg
int
xor
outsb
adc
sbb
loop
mov
aaa
jmp
sar
pushf
adc
lea
cli
ret
add
xchg
pcmpeqd
pop
push
out
lds
movsb
jmp
or
push
lea
sbb
inc
loope
notl
adcl
pushf
inc
imul
out
pop
call
aad
sbb
fstl
inc
add
mov
mov
mov
add
ds
lods
sbb
lret
popa
fstpl
iret
pop
ficoms
fsubl
pop
leave
or
dec
addl
cmpsl
movsb
leave
dec
push
lock
push
xchg
push
sub
aas
mov
inc
mov
dec
popf
sub
xor
or
das
sbb
push
pop
pusha
divl
and
rolb
inc
dec
into
mov
add
mov
and
lcall
push
jns
js
in
adc
repz
and
cmp
in
leave
les
loop
call
outsl
cli
cmpsb
outsl
movsb
push
daa
push
dec
pop
push
frstor
and
mov
fwait
jbe
call
clc
lds
or
pop
pop
add
icebp
nop
sbb
adc
into
sbbl
or
xor
jg
add
mov
mov
pusha
pop
rclb
mov
inc
push
or
mov
lcall
mov
jb,pn
jae
jbe
or
sub
dec
adc
jbe
int3
mov
jbe
xchg
mov
mov
jb
or
sub
movsl
ror
jecxz
inc
sar
test
inc
jg
ss
test
les
jecxz
shrb
hlt
mov
rcrl
pop
ficompl
mov
jmp
ficoms
sub
mov
xorb
add
xor
icebp
leavew
pusha
adc
cli
push
adcl
mov
adc
out
das
test
and
sub
outsb
cmp
idivb
jno
dec
pop
ds
lret
pop
inc
pop
es
or
nop
cmp
lods
mov
addr16
shll
xchg
mov
cmpsl
punpcklwd
cmp
loop
and
xchg
sbb
add
jo
sub
sarb
shll
push
sub
es
lock
fnstsw
int3
xchg
outsl
insb
bound
dec
cmp
addr16
aas
addr16
push
or
clc
rcrl
cli
ljmp
jae
lock
adc
sbb
fwait
insb
test
lods
pop
cs
icebp
test
and
aad
mov
mov
cld
fiadds
mov
and
stos
push
xor
push
jae
jp
lret
in
cli
dec
mov
or
and
add
jbe
push
jp
lahf
xor
cmp
adc
mov
mov
rcrl
les
jns
hlt
test
push
ret
sbb
mov
ficomps
push
push
or
cltd
test
je
inc
fwait
inc
push
roll
test
xor
push
enter
pop
sub
xchg
aad
arpl
jp
dec
rcrl
jnp
lret
imulb
pop
shlb
stos
fbld
dec
icebp
iret
sbb
dec
sbb
xchg
sub
sub
pop
xchg
repz
icebp
cwtl
sub
test
fisubrl
jae
bound
fcoml
shrb
mov
clc
and
fdivs
add
pop
inc
stc
jb
mov
lock
test
pop
and
mov
js
lret
in
dec
es
lret
xchg
lods
cmpb
cmpsl
in
xchg
jecxz
sbb
xor
repnz
mov
fistpll
imul
cmp
cs
repnz
pop
icebp
fdivrl
mov
jp
push
pushf
xor
loopne
and
scas
jmp
inc
out
jae
ficoml
lock
in
cmc
xchg
ret
rcrl
lret
push
lea
push
into
sub
cmp
repz
loopne
jmp
inc
sub
movsl
shll
adcl
daa
test
xchg
jb
data16
jle
sub
cmp
sar
push
xchg
sbb
ret
pop
add
push
mov
aam
testb
sbb
pop
lcall
cli
repz
bound
fisttpll
or
mov
cmpsb
clc
frstor
test
push
xchg
adc
fnstenv
push
roll
lahf
mov
jl
clc
fimull
cmc
mov
cmp
rcl
out
mov
enter
stos
pop
and
fimuls
es
lods
loope
sbb
mov
pop
sbb
outsl
inc
push
adc
rolb
shrb
je
mov
lods
mov
jbe
sub
adc
lods
xchg
mov
call
jmp
das
gs
add
mov
rcrl
inc
push
mov
loope
mov
rorl
shrb
rcrb
cld
mov
jl
ja
push
repz
clc
in
mov
bound
imul
xlat
daa
mov
lods
sub
mov
push
add
aaa
xchg
cmp
test
mov
lods
scas
jb
adc
pop
sbb
es
cmp
mov
jnp
dec
and
jge
adc
cmp
xor
jle
jns
sub
int
mov
sub
adc
lods
ret
inc
incl
sbb
mov
xchg
clc
jno
pop
lock
adc
mov
dec
in
and
imul
gs
shl
ret
call
adc
ret
jecxz
lcall
cmp
pusha
mov
ljmp
arpl
add
mov
xor
clc
sub
mov
rcr
ljmp
cltd
sub
frstor
ret
insb
insl
dec
or
dec
add
movsl
inc
add
lcall
xor
pusha
inc
mov
or
repz
test
int
shrl
inc
testb
mov
stc
sub
mov
mov
mov
dec
xor
lods
mov
sub
dec
xor
cmp
dec
xorb
jmp
xor
sahf
test
aas
push
out
dec
xchg
adc
mov
mov
outsb
mov
loop
fcoml
iret
rcrb
addr16
and
call
fcmovnbe
mulb
add
testl
imul
mov
push
imul
mov
jns
push
loop
mov
sub
mov
cmp
cli
pop
stos
xor
rorb
insl
popa
jbe
jge
add
cmp
fs
subb
fistpl
adc
lahf
pop
jo
sbbb
enter
sub
cmpsb
push
cltd
int3
and
xor
test
and
loope
loope
mov
mov
cmp
adc
loopne
repnz
sbb
in
call
push
sub
inc
fstps
into
add
or
add
pop
fiaddl
sub
sbb
sbbl
pop
ret
inc
pop
stc
mov
pop
ret
xor
movsl
and
and
adc
clc
rclb
ds
add
cmpsb
stc
mov
xlat
mov
push
sub
shrl
rcll
mov
mov
sahf
mov
push
lods
inc
arpl
addb
cmc
xchg
pop
iret
adc
enter
loope
mov
sub
jno
rorl
roll
bound
xlat
imul
jnp
test
movsl
mov
aas
lock
xchg
xchg
orl
ja
inc
ret
repz
into
adc
mov
je
scas
mov
dec
xchg
call
cs
mov
lea
or
fistl
shrl
push
mov
hlt
mov
dec
dec
mov
push
mov
je
sbb
js
jnp
imul
stc
daa
gs
sub
movsb
sti
mov
dec
mov
lods
int
or
sub
scas
arpl
in
pop
cmpsl
inc
dec
push
mov
shlb
js
inc
into
icebp
mov
jno
xchg
inc
cmpsb
std
insb
lretw
push
lock
jmp
cmp
mov
push
or
sbb
push
jo
fcmovu
mov
lahf
jns
arpl
out
test
ds
sub
repnz
push
cwtl
mov
shll
cs
in
jno
adcb
enter
scas
imul
or
cmp
mov
push
mov
negl
out
dec
inc
mov
lods
xchg
fnstcw
adc
mov
cld
or
sub
dec
sarl
cmp
pushf
fbld
lret
jl
push
jb
cltd
xlat
repz
stos
hlt
mov
xchg
int
mov
or
jns
cltd
sbb
mov
mov
ror
pinsrw
in
cmc
push
mov
sbb
addr16
cld
and
mov
pop
pop
pop
cld
inc
xor
ljmp
subl
or
lcall
xchg
mov
test
xor
dec
test
lods
xor
pop
xchg
mov
cltd
outsl
test
enter
push
test
cwtl
mov
xchg
cld
daa
jnp
jbe
sbb
js
lods
jecxz
mov
mov
shlb
and
rorb
mov
push
add
out
xor
mov
mov
lods
mov
out
cli
sub
xlat
stos
loopne
xlat
addb
push
les
xchg
mov
cwtl
in
dec
jecxz
inc
divb
adc
xchg
enter
insb
push
mov
scas
xor
xchg
mov
sub
cmp
test
repz
pusha
jl,pn
cmpsb
in
mov
divl
jae
push
xor
xchg
mov
jo
fstpl
push
add
mov
sub
xor
out
es
cmp
stos
pop
xor
pop
aaa
xchg
dec
leave
fnstenv
dec
divb
xor
aaa
dec
push
aas
pop
test
jnp
pop
das
scas
mov
imul
iret
xor
mov
lock
xchg
icebp
jl
lods
cmp
adc
and
dec
insb
mov
cmp
and
daa
addl
mov
ret
imul
aaa
mov
loopne
out
xor
sbb
and
clc
lahf
mov
lea
mov
insl
dec
pslld
cmc
push
mov
mov
push
scas
popf
dec
mov
mov
insb
fcmove
fmulp
aam
push
das
js
cmp
gs
jmp
lods
aaa
add
or
repz
mov
test
imul
stos
rcr
jg
jge
jg
rolb
cmpsb
sti
lahf
and
and
arpl
idivb
jne
sub
adc
sbb
flds
add
lock
inc
inc
int
jmp
dec
adc
inc
ret
and
or
in
jmp
sub
inc
mov
xor
push
cli
add
aam
mov
es
cmp
hlt
rorl
sub
loopne
sub
sbb
mov
pushf
addr16
xchg
xlat
or
cmpsl
mov
fstpt
std
push
cmp
cld
insl
in
lcall
pop
or
xorb
sub
sahf
gs
and
cmc
bound
or
and
push
push
pop
inc
inc
xchg
in
xor
inc
cmp
loopne
jo
test
xchg
repz
xor
xchg
shrl
pop
jo
enter
mov
xorl
cmpsb
xchg
std
cltd
mov
cmp
sub
and
xchg
arpl
inc
and
inc
pusha
pop
movsb
dec
mov
add
les
inc
cmpsl
data16
mov
jge
xchg
jns
iret
push
clc
gs
ss
push
ljmp
xor
popa
mov
mov
lcall
inc
lret
shlb
jb
fldt
aad
je
xchg
or
sbb
xor
xor
or
pop
push
nop
xor
sti
xchg
jl
inc
test
xchg
add
inc
mov
fs
int
ret
les
add
icebp
jbe
cmp
dec
pop
into
mov
in
and
sar
js
mov
loop
test
mov
pusha
imul
lods
rclb
xchg
loope
stos
stc
mov
xchg
xchg
jge
lods
xchg
lds
hlt
iret
aad
mov
lods
jb
pop
mov
je
mov
lods
push
ja
mov
mov
imul
adc
xlat
jae
cmp
rcr
aad
movq
fsubrs
scas
pop
or
out
int
cmpsb
sbb
sub
dec
dec
mov
in
js
mov
fcmovnbe
xor
xor
xor
lods
ficoms
xorl
dec
jg
icebp
xchg
rcrl
xchg
out
int3
mov
fsubrs
jnp
ret
mov
icebp
mov
leave
rorb
mov
jbe
xor
ret
stos
dec
adc
inc
pop
mov
leave
nop
jno
sbb
cmp
cmpl
xlat
mull
es
mov
sub
or
push
cmpsl
movsb
addr16
mov
jne
ja
mov
cwtl
fldenv
cmpsl
dec
mov
mov
cmp
adc
out
pop
inc
out
fdiv
inc
push
sbb
pop
dec
mov
out
pop
mov
arpl
cli
shll
out
pop
movnti
lea
dec
pop
out
pop
lds
adc
mov
mov
fcoml
push
xchg
push
mov
addr16
adc
sub
xchg
and
lret
out
add
adc
mov
das
fisttpl
xchg
sub
jg
inc
mov
addr16
insb
out
or
or
aas
lods
mov
jg
outsl
test
int
nop
cmp
cmp
aad
out
push
aam
fisttps
mov
cmp
inc
lock
lock
push
cmpsl
iret
inc
dec
out
mov
imul
pop
sbb
fisubrs
outsb
add
lret
enter
cld
ss
insl
sti
mov
and
or
popa
inc
mov
int
add
sub
xor
xchg
sbb
lods
xor
addr16
pop
hlt
imul
testl
fs
xor
fldl
arpl
jnp
push
mov
sbb
fcomi
jg
das
push
hlt
pop
pop
add
popf
add
fucomip
push
aas
nop
sbb
sub
in
mov
sbb
popa
dec
lret
lahf
negl
push
inc
stc
xlat
rorb
int
ja
cmp
pop
in
call
sub
fcomps
jae
push
ret
adc
mov
jle
int
push
repnz
or
add
mov
adc
arpl
xchg
and
lret
ret
outsl
pop
xchg
xchg
sahf
clc
js
dec
cmp
inc
and
dec
cmpsl
divb
loope
adc
sbbl
pop
mov
mov
test
xor
aad
cmp
pop
cwtl
je
dec
mov
mov
xchg
adc
in
mov
sub
insb
mov
std
adc
pop
mov
sbbl
aad
xor
popl
jl
ljmp
sarb
mov
push
jo
and
sub
mov
sub
jg
push
xchg
bound
xor
sarl
or
iret
pop
pop
popa
jne
xchg
pop
adc
push
int3
push
cltd
add
incl
jbe
cltd
and
sbb
in
icebp
sbb
pop
mov
mov
add
pop
xchg
cmp
inc
dec
mov
fldcw
test
and
inc
in
mov
push
xchg
icebp
push
inc
fs
outsl
push
push
cmp
in
sbb
mov
movsl
adc
jb
aaa
adc
mov
sbb
call
fildl
pop
enter
mov
insl
int3
sbb
mov
pop
adc
jnp
or
rclb
jno
pusha
in
jecxz
insb
clc
mov
repnz
rolb
sbb
bound
pop
minps
orl
imul
mov
sti
test
in
pop
ret
sbb
xchg
mov
je
fdivrl
ret
sbb
fisubs
pop
mov
mov
or
xor
mov
ss
mov
jge
fidivl
cmpsl
pushf
fisubrl
adc
jle
add
add
ds
xchg
lds
cwtl
lahf
xchg
mov
xor
dec
mov
dec
pop
jne
push
or
xchg
cs
inc
loope
out
nop
adc
inc
and
sub
iret
es
pop
mov
xor
call
insl
xor
jl
push
fldenv
mov
outsl
inc
add
push
and
mov
leave
mov
cmp
test
mov
outsl
aam
iret
pop
xchg
pop
pop
xlat
xor
repnz
xor
stos
and
and
lret
jge
jmp
add
stos
pop
pop
sub
outsl
sbb
push
inc
jecxz
xor
call
and
cmp
xchg
adc
mov
test
xchg
xlat
adc
hlt
jne
mov
jno
cmp
dec
and
and
cs
jecxz
dec
and
pop
lods
imul
ret
popf
sarl
sbb
jo
mov
dec
idivb
ja
sbb
jnp
inc
jl
insl
loope
aas
xor
jbe
in
jl
and
out
daa
xchg
mov
pop
stos
jle
dec
andb
cmp
mov
loopne
cli
and
mov
sarb
lea
gs
dec
xor
mov
idivb
daa
lods
pop
sub
mov
mov
insb
outsl
je
jae
cld
outsl
sub
and
sub
jo
ljmp
idivb
mov
push
inc
fadd
dec
mov
mov
and
xchg
mov
movsb
mov
std
jmp
clc
cs
jb
mov
and
jbe
xchg
pop
cwtl
mov
pop
pop
mov
jge
sar
pushf
sbb
adc
xchg
add
and
test
and
test
cmp
adc
sbb
mov
test
call
aam
in
movsb
jle
push
lock
pop
push
sub
enter
adc
and
popa
test
loope
lea
pop
ds
rorl
fstpt
ficoml
xor
addr16
push
sarl
and
shlb
cmpsb
repnz
pop
std
or
stc
pop
out
sbb
repz
jb
sti
test
push
inc
dec
xchg
data16
insl
mov
cmp
add
sub
dec
ljmp
pusha
mov
push
int
loope
sbb
xchg
or
test
xor
test
xor
sti
pop
mov
and
loop
xchg
cld
movsl
pop
in
jae
jmp
shrb
push
lods
dec
xor
xchg
or
or
jp
push
movsb
pop
std
test
repz
rclb
push
pop
sti
inc
js
mov
xchg
lea
pop
adc
add
add
fidivrl
adc
orb
jmp
sbb
jae
mov
out
dec
add
scas
mov
sub
mov
test
insb
in
mov
xor
pop
lods
push
repz
cmp
inc
push
testl
push
xor
pusha
xor
sub
in
push
pop
jmp
push
xor
std
cltd
stc
lds
pop
fsubr
lods
mov
movsl
dec
xor
sbb
add
mov
mov
xchg
inc
sbb
mov
inc
cmp
nop
and
fs
cltd
jb
movsb
inc
jl
fdivr
sbb
into
jno
lds
inc
lds
xlat
das
pop
cmpsb
dec
lods
fcoml
sbb
cmp
inc
xor
and
mov
addr16
clc
jp
ds
mov
stc
xchg
and
out
rcll
jne
test
xchg
es
add
adc
mov
movsb
int3
xor
sbb
xchg
dec
dec
cmpsl
ficoml
test
sub
inc
cmp
repz
subl
jp
cmpsb
xor
dec
pop
cld
mov
adc
and
test
jbe
scas
mov
leave
cmp
sbb
jno
jo
push
addr16
stc
inc
jb
adc
test
cli
cmpsb
subb
movsl
dec
fisubl
clc
push
stc
lret
movb
in
and
jae
cltd
cmp
neg
add
inc
loope
pop
add
les
bswap
enter
out
push
test
ret
rcll
imul
or
inc
mov
xchg
xchg
movsl
lcall
mov
lahf
aad
inc
movsl
imul
mov
pop
rorl
pop
pop
movsb
sbb
jb
lods
xchg
cmp
push
push
outsb
cld
outsl
add
jnp
jp
adc
rcr
mov
popa
pop
add
xchg
push
nop
int3
xchg
aad
xor
aaa
subb
sub
xchg
call
push
jl
xor
dec
nop
outsb
and
popa
dec
shrl
inc
add
das
mov
inc
cltd
add
sbb
or
jg
mov
cmpsl
lods
sub
out
inc
aas
test
and
adc
pop
into
arpl
dec
cmpsl
dec
xchg
leave
mov
mov
sbb
lock
adc
and
mov
jg
ja
jecxz
sbb
in
adc
fs
mov
js
pop
pop
inc
dec
push
std
cwtl
dec
scas
lahf
icebp
dec
decb
cmp
xchg
sbb
inc
shlb
or
push
push
std
push
pop
dec
push
loope
sub
lret
push
jmp
cmp
mov
cwtl
cmpsb
inc
cwtl
and
and
sbb
and
hlt
repnz
jb
fistl
xchg
inc
insb
lcall
ja
repnz
cmp
dec
pop
fisttps
out
stc
cli
jle
xor
imul
xor
int3
test
test
cmp
mov
adc
jnp
adc
sbb
mov
imul
mov
fistps
jne
mov
out
std
push
push
xchg
xor
test
mov
loop
popa
fcomip
subb
popf
and
loopne
lret
xchg
rcl
les
inc
bound
dec
mov
jp
xchg
and
into
popf
pop
inc
fnstenv
push
shrb
fimull
adc
xchg
js
outsl
shrb
out
int3
dec
xchg
ss
push
dec
stos
inc
aad
sbb
and
dec
and
sub
movsb
jp
jle
shll
cltd
push
cmp
or
gs
mov
push
jmp
aas
lahf
icebp
mov
aam
and
push
dec
mov
fwait
xchg
xchg
cmc
push
push
jo,pt
fs
lods
push
scas
inc
xor
mov
jp
or
lea
push
push
and
jb
sub
and
stc
or
push
cmpsb
in
cltd
jl
sub
clc
sbb
es
push
int
dec
mov
popf
sub
clc
fwait
and
jo
cmp
push
hlt
ljmp
and
push
cmp
in
daa
ret
push
mov
out
or
jno
sbb
movsl
nop
cmp
cmc
dec
jle
testl
cmp
hlt
int3
mov
icebp
xor
test
jp
jl
pop
dec
inc
scas
or
xchg
cmp
xor
sub
jg
call
testl
cmp
nop
in
out
pmaxsw
repnz
test
pop
popf
cs
jg
in
add
pop
add
adc
imul
int
jl
hlt
sbb
movsl
push
lds
push
mov
icebp
mov
mov
add
mov
cmp
das
shlb
std
loopne
pop
mov
rclb
cmp
nop
inc
or
dec
or
inc
shll
jmp
pop
xchg
jecxz
mov
mov
ret
xor
mov
xchg
xor
adc
cmc
mov
mov
stos
loopne
jle
fiadds
xor
mov
xchg
stc
mov
inc
arpl
xor
stc
test
pop
ss
ret
jno
mov
cmpb
cmc
in
xchg
xchg
lods
scas
loop
sbb
call
mov
js
out
adc
pop
fs
mov
or
sub
test
push
enter
insl
fisttps
mov
xchg
cmpsl
mov
inc
jmp
and
mov
xor
cmp
cmp
xor
add
inc
fdivr
cld
je
fimuls
mov
clc
ljmp
mov
adc
clc
icebp
cwtl
clc
mov
jnp
mov
sbb
push
push
popf
outsb
leave
mov
pop
xchg
pop
pusha
jbe
mov
and
or
fcomps
cli
mov
fsubrp
lcall
or
cmpsb
insb
jge
lahf
les
sarl
cmp
cmp
mov
jg
shrb
add
xchg
jmp
loop
adc
and
and
jb
sbb
inc
sub
stc
lcall
fimuls
stos
shrb
push
and
cmp
sub
xor
inc
inc
sahf
adc
cmp
les
add
fnstcw
les
add
dec
mov
mov
mov
daa
lock
mov
lret
test
jae
out
push
sbb
xchg
mov
sbb
pusha
in
xor
push
add
sbb
pop
xchg
aas
loope
xor
mov
popf
sub
idivb
mov
xlat
mov
stos
ret
ficomps
js,pt
mov
cltd
mov
cltd
xor
cmc
loop
push
mov
cld
outsl
jle
or
pop
ret
cld
aas
test
or
lret
inc
pop
pop
xchg
xor
out
bound
jg
adc
cmp
adc
call
jb
mov
push
in
cmpsb
les
mov
mull
out
mov
test
arpl
and
icebp
ficoml
fbstp
mov
xor
loopne
sub
test
in
pushf
mov
mov
or
rcr
adcl
jo
sbb
iret
pop
jp
jae
lods
ror
iret
xchg
xor
mov
inc
and
xchg
mov
jne
cmc
push
loopne
mov
lahf
shlb
sbb
imul
xchg
pop
inc
fstps
ds
inc
pop
mov
js
mov
or
mov
shll
das
jno
dec
xchg
subl
call
imul
mov
int3
arpl
adc
jg
push
or
ret
push
cwtl
shll
xor
je
scas
add
std
dec
jno
ret
leave
out
bound
adc
pop
je
insb
inc
aad
xchg
loope
rcr
cltd
das
mov
mov
inc
xchg
add
sbbb
push
pushf
int3
jns
sahf
sbb
adc
iret
add
repz
push
inc
sti
stos
mov
fildl
loopne
repz
xchg
push
mov
mov
xchg
ljmp
int
mov
cmp
or
jns
add
or
fcmove
dec
add
lock
repz
push
jmp
and
test
and
popa
mov
jne
push
pop
mov
dec
mov
rol
push
adc
mov
push
in
clc
mov
pop
addr16
adc
sub
out
push
xchg
clc
inc
push
and
push
nop
xor
lcall
and
xor
and
aaa
mov
mov
and
xchg
cmp
dec
pop
mov
mov
mov
cs
fwait
and
lods
dec
imul
insb
bound
push
and
rcll
push
dec
mov
pop
or
test
movsl
add
or
jo
cltd
das
mov
lock
jg,pt
hlt
ljmp
testl
outsl
inc
jbe
jmp
sub
dec
and
movsl
dec
mov
insl
inc
push
adc
sbb
dec
inc
or
cltd
dec
inc
out
imul
es
into
ja
enter
or
cmpsl
ret
or
jne
ja
mov
scas
dec
push
sub
stc
mov
cmp
jb
lods
mov
mov
addr16
cmp
int
lods
insl
jg
adc
add
int
cs
outsl
or
pop
aas
aas
inc
xchg
xor
leave
push
fists
inc
dec
sbb
or
shr
inc
aad
outsl
pop
pop
or
call
fucomip
mov
cmp
out
gs
test
popa
jge
loopne
hlt
xchg
and
jmp
inc
push
xor
inc
pop
lcall
mov
insl
xchg
jp
and
add
rcll
and
jge
rcll
in
add
loopne
out
aam
shll
push
loopne
sti
jecxz
sub
dec
jbe
jns
test
sarl
arpl
and
xchg
jae
jns
out
sub
je
iret
sarb
cmp
xchg
add
mov
dec
lcall
lcall
les
mov
test
test
insb
mov
test
add
xor
subl
sti
in
jl
and
aad
sbb
xor
mov
dec
pop
in
mov
call
add
shrb
rclb
loop
dec
adc
xchg
gs
fcmovu
ret
add
fldenv
divl
xor
aas
or
enter
hlt
jo
or
xchg
push
add
in
repnz
scas
pop
outsb
cli
aam
decb
cmp
add
popl
ja
pushf
aaa
aam
jnp
dec
and
mov
xor
mov
test
inc
orb
mov
mov
sub
imul
push
mov
lods
jp
pop
pop
mov
or
in
add
dec
dec
cli
aas
pusha
loop
push
sbb
sbb
cmpl
test
sbb
mov
in
lock
fidivs
lret
insb
in
and
xor
cmp
mov
adc
mov
push
ret
sti
mov
fldcw
ds
mov
andl
mov
fstl
or
fdivl
mov
push
add
das
sub
pop
inc
sbb
push
and
out
lret
es
aam
shlb
addr16
inc
inc
in
pop
jl
dec
js
mov
into
push
dec
loop
push
test
pop
adc
jl
add
sbb
pop
adc
lahf
and
xchg
mov
mov
int
cld
lcall
ret
and
xor
insl
inc
jmp
lcall
sub
cli
push
push
cs
mov
push
std
into
jp
lds
ret
repz
arpl
ja
imul
jns
mov
mov
testl
sahf
cmp
bound
lds
mov
and
outsl
mov
in
jmp
es
jne
inc
das
adc
xchg
call
test
imul
mov
outsb
mov
lds
jp
add
xchg
xchg
out
sahf
das
sub
mov
sbb
jno
inc
daa
xchg
std
jmp
adc
inc
mov
cmp
push
inc
xor
pop
imul
int
dec
fwait
lock
xchg
xlat
push
jp
lea
mov
and
cmp
xor
sub
cmpsb
popf
ja
and
dec
mov
cwtl
fwait
xchg
lock
xlat
das
and
aad
lea
push
mov
add
sub
mov
pop
xor
dec
cs
dec
js
add
mov
adc
push
pop
and
icebp
iret
je
arpl
loopne
movl
pop
sub
add
and
sub
notl
jb
inc
xchg
pop
fisttpll
jmp
jge
inc
call
in
daa
mov
mov
cmp
sahf
push
test
sahf
mov
in
pop
mov
sarl
and
mov
cs
cmpsl
jne
mov
mov
cmp
cs
mov
insb
or
pushf
adc
rcrb
mov
push
sub
and
loope
call
mov
xor
mov
cli
into
or
push
insl
jmp
addr16
pop
dec
popf
xchg
pop
mov
inc
arpl
call
cltd
lret
pop
cmp
pop
in
inc
loopne
gs
sbb
test
cld
xlat
mov
shlb
idiv
arpl
lahf
imul
pop
in
mov
int
std
mov
popa
push
and
jg
push
mov
sbb
daa
gs
cmpsl
xor
shr
cmp
jns
inc
enter
fmuls
inc
int
jo
pop
lods
into
cwtl
in
cmp
inc
out
lods
cs
test
dec
int3
testl
mov
jbe
outsb
sti
or
popa
mov
mov
mulb
int
popa
add
or
into
jno
lret
jg
test
pusha
sbb
and
dec
scas
mov
or
xchg
cmc
imul
sub
xchg
add
mull
lods
push
pushf
pusha
enter
ja
je
add
mov
add
mov
inc
movsl
sbb
cli
imul
adc
jae
mov
outsb
leave
clc
mov
movsl
sbb
xor
mov
dec
dec
lock
or
cld
push
inc
loop
push
and
repnz
xor
mov
xchg
jo
push
mov
inc
xor
je
cmp
les
cwtl
xor
jb
push
ss
fistpll
test
push
sub
sti
sub
and
inc
mov
gs
pushf
add
ss
out
inc
xor
cmp
dec
or
mov
adc
sub
cmp
inc
ljmp
sbb
inc
mov
jbe
xor
fsubl
enter
xchg
das
into
cmc
imul
bound
push
jmp
sbb
aas
lcall
subl
sbbb
dec
int3
mov
mov
jg
arpl
pop
in
mov
xchg
ja
dec
add
fdivrs
into
faddp
jb
sub
push
leave
shl
imul
pop
jne
dec
lea
repnz
xchg
inc
lock
aad
out
inc
push
mov
sub
enter
mov
imul
pop
and
out
cmp
lret
addl
cmpsl
mov
dec
add
and
repz
pop
xchg
and
adc
mov
cmc
aam
xchg
hlt
push
pop
test
or
adc
les
inc
push
mov
into
cmpsb
push
dec
repnz
stos
stc
push
loopne
xor
cmp
xor
jp
std
or
xor
lods
mov
mov
lcall
pop
sub
cmpsl
arpl
jbe
xchg
insw
jle
outsl
mov
add
mov
jae
jae
inc
aaa
mov
xchg
out
fiaddl
popf
xor
lds
movsb
mov
cli
xor
sbb
sbb
arpl
negl
insl
push
call
call
mov
leave
or
dec
sbb
xchg
pop
negb
sub
xchg
jns
cmp
insb
jno
ljmp
shll
and
pushf
std
lock
mov
dec
into
sub
shlb
pop
data16
int
bound
addr16
lcall
pop
iret
pop
xchg
cmpsl
jnp
push
call
and
rclb
cmp
mov
bound
clc
test
movsb
stos
popf
jb
cli
sbbl
ljmp
cmpb
stc
sbb
ss
fwait
adc
mov
negl
xor
mov
cmp
add
xlat
xchg
mov
loope
cmp
xchg
lret
shlb
fstpl
xchg
cld
in
mov
movl
fidivs
sbb
xchg
dec
dec
sub
nop
mov
std
ds
mov
insb
movsbl
out
js
jg
dec
push
mov
dec
and
out
imulb
xor
jl
add
popa
cmp
cld
push
sbb
mov
xchg
stos
hlt
sbb
fldl
in
or
ja
lret
pop
shlb
mov
pop
inc
pop
nop
xor
in
push
clc
jg
mov
stos
lods
ja
and
adc
xchg
mov
dec
adc
cmp
loopne
pop
cs
stos
jmp
jle
je
sbb
enter
arpl
lock
lea
mov
xchg
jmp
mov
or
ljmp
or
loop
repnz
adc
fstp
cld
stc
sarl
mov
jae
sub
cmpsb
push
mov
shrl
scas
inc
loop
divb
cmp
clc
jne
lods
lret
rolb
push
jbe
enter
std
mov
mov
push
cmc
push
fsubr
sbb
dec
arpl
push
scas
arpl
push
adc
jmp
aad
pop
add
icebp
arpl
in
test
sahf
test
mov
in
mov
cwtl
inc
subb
mov
xor
movsl
pop
jp
call
cli
mov
mov
cmp
inc
mov
xlat
pop
fidivl
movsl
adc
pushf
mov
lods
and
in
daa
ljmp
xor
push
cmp
fisubrs
mov
mov
std
adc
nop
ficoml
lret
push
call
test
pop
pop
cwtl
ds
lret
mov
xor
je
rol
lds
jl
fidivrs
jecxz
adc
push
dec
cltd
in
lods
jno
xchg
pushf
mov
cmp
push
push
push
bound
cmpsl
or
rcr
cmpsb
xchg
pop
pop
cmpl
dec
xor
ficompl
sbb
jo
sti
out
pop
inc
lahf
or
in
push
cltd
sahf
inc
lods
adc
push
pusha
jge
notl
sub
loop
ficompl
mov
sbb
add
jmp
or
pop
lods
inc
sub
test
mov
stos
outsb
pop
adc
mov
dec
xorl
xchg
jge
cwtl
sbb
test
sahf
ret
and
xchg
lcall
sbb
adc
mov
mov
xchg
jmp
cs
outsl
subb
push
pop
pop
push
mov
cmp
test
out
mov
inc
arpl
pop
iret
aaa
arpl
xor
addl
test
push
xchg
out
jo
mov
inc
and
jo
dec
scas
sahf
imul
xchg
xor
loope
and
lds
lods
add
or
sub
test
mov
fistl
pop
ja
shrl
add
xchg
mov
ss
push
lcall
movsb
xor
shrl
stc
jge
add
out
xchg
xor
in
sarl
xor
push
or
icebp
adc
les
mov
xor
es
xchg
cltd
mov
loopne
xchg
jo
fmuls
pop
incb
in
add
xor
push
cltd
and
jge
or
das
bound
ret
popa
mov
loope
cmpsl
movsb
sub
mov
cmp
sub
mov
outsb
pop
mov
arpl
mov
sbb
mov
aam
ficoml
mov
in
pop
pop
and
pop
cwtl
sub
mov
out
dec
sahf
clc
push
cmpsb
sub
fsubp
push
popf
pop
xchg
pop
les
xchg
in
pop
das
dec
inc
push
sub
xchg
cmpsl
call
rolb
pop
xchg
mov
gs
push
insb
cmp
add
mov
jo
jne
stos
xchg
inc
add
jle
fldenv
and
mov
ret
inc
mov
std
mov
in
pop
jo
add
out
imull
xchg
stc
jo
jmp
fwait
dec
xor
mov
lahf
lret
popa
adc
jl
sub
inc
cld
inc
pusha
jae
sbb
jnp
aas
shlb
jb
int3
pusha
sbb
pop
sub
mov
pop
mov
xchg
daa
std
xlat
lds
repz
data16
pop
ret
cmp
xchg
rcrb
std
or
mov
cmp
add
aad
into
jp
insl
or
rcrb
fcmovbe
punpckhbw
pushf
mov
clc
add
xchg
mov
sarb
scas
in
sahf
sub
add
dec
cmc
imul
popf
lds
pop
and
push
push
data16
cltd
mov
sbb
inc
push
adc
cmpl
cmc
xchg
xchg
dec
xchg
in
inc
out
push
xchg
outsl
cmc
loopne
cmp
push
pop
or
or
out
repnz
adc
jp
movb
jg
in
fadds
mov
cmp
int3
or
sub
in
int
out
out
fiaddl
push
mov
mov
xchg
push
mov
push
ds
mov
pop
dec
dec
lock
mov
dec
and
fnstsw
ljmp
shl
fists
push
daa
scas
jbe
test
dec
loope
daa
ss
sbb
mov
jb
popa
rcl
add
in
cmpsl
lret
mov
int3
jl
xor
repz
stc
in
xchg
inc
lds
test
mov
mov
lahf
out
and
iret
mov
xchg
sbb
lret
mov
test
fnstcw
mov
in
imul
test
movsl
movsb
inc
mov
xor
inc
in
ficomps
out
lret
jmp
orl
push
adc
mov
xor
pop
xor
pushf
jo
aam
cvtpi2ps
arpl
push
or
jae
imul
sti
push
mov
xchg
inc
test
addr16
xor
ss
fdivr
xchg
pop
cmp
mov
lret
fsubl
icebp
adc
xchg
adcb
aam
in
hlt
std
mov
aad
xlat
lea
loop
movsl
pop
dec
sub
sbb
mov
cld
mov
out
add
lds
jg
sbb
shlb
mov
fsubrl
mov
ss
out
sbb
pop
pop
cmp
les
rcrb
jmp
inc
mov
adc
cld
add
cld
and
and
xor
mov
mov
fs
ds
outsl
mov
lods
stc
inc
jne
enter
cld
dec
aad
and
cmp
scas
jae
test
pop
out
aas
call
mov
out
pop
lret
in
mov
test
pop
add
push
xchg
out
insl
cltd
icebp
mov
fs
jge
and
test
iret
jmp
jp
inc
rolb
out
into
xlat
mov
arpl
das
inc
xlat
xchg
or
outsb
je
out
xchg
les
fcomps
dec
push
xchg
inc
and
pop
mov
and
scas
jo
or
cltd
push
hlt
mov
shll
pop
movsb
ljmpw
mov
xchg
loope
adc
fwait
pusha
cwtl
dec
sbb
lods
mov
ss
cs
sbb
jle
cmovle
cmc
xor
sahf
sub
adcl
and
cltd
imull
or
push
pop
mov
call
aaa
add
and
pop
bound
popf
pop
inc
inc
push
adc
stc
rcl
test
popf
xchg
mov
jbe
lret
and
es
rolb
mov
and
scas
popf
incb
inc
repz
ss
adc
xor
push
or
jl
cmp
adc
xor
in
cmp
and
ja
push
mov
adc
ret
aas
jl
scas
scas
xchg
mov
or
pop
pop
mov
and
xchg
mov
lods
imul
fnsave
sarb
cmp
and
repnz
test
adc
cs
pop
test
insb
adc
pusha
ljmp
into
faddl
test
mov
ret
rcrl
xchg
movsl
fucomip
mov
jne
and
xor
sbb
push
outsl
les
xor
xchg
jno
cmc
jl
test
mov
mov
add
neg
out
pusha
cld
and
shr
mov
int
out
les
mov
stc
out
sahf
push
insl
mov
pop
popa
mov
movsb
dec
adc
mov
addr16
sub
mov
pop
lret
jle
jp
jge
and
dec
hlt
mov
sub
mov
test
jg
daa
pop
lock
iret
dec
adc
xchg
dec
sbb
and
mov
outsl
adc
and
inc
out
repz
in
test
xchg
bound
fcmove
xchg
lods
jl
xchg
xchg
inc
mov
mov
fadd
xor
mov
sbb
cli
mov
out
test
jp
stos
inc
jge
dec
enter
mulb
out
popl
add
ds
inc
and
lret
add
mov
outsb
iret
sub
sub
and
inc
out
sub
rolb
lods
into
jno
push
faddl
ret
pop
in
insb
ds
aam
ljmp
cmp
fwait
loop
lea
dec
inc
sub
loopne
ds
mov
repz
mov
jne
ds
ja
stc
cltd
arpl
pop
movsb
jecxz
sub
aas
dec
jecxz
hlt
ds
jne
push
jb
inc
jne
pusha
sub
test
mov
pop
pop
cmp
jno
sub
repz
insl
imull
clc
push
cmp
sbb
in
jp
mov
adc
out
pop
stos
addr16
push
or
leave
xlat
cmp
adc
lret
xorl
ret
add
bound
nop
xor
xchg
lcall
push
sbb
and
iret
fwait
dec
data16
mov
push
sub
mov
mov
divb
insb
push
sahf
std
mov
data16
mov
flds
cli
ss
cmp
or
cmp
inc
dec
push
ja
in
and
mov
fdivp
cmpsl
mov
cltd
lahf
fmull
push
and
push
mov
loope
pop
pop
xorl
jp
jmp
test
jnp
ret
sbb
in
and
adc
cmpsb
enter
jle
pop
push
data16
mov
daa
and
arpl
jp
mov
push
repz
pushf
ret
inc
xchg
push
clc
jge
inc
les
mov
test
addr16
mov
jbe
fwait
xchg
enter
push
loope
pop
sbb
insl
sbb
adc
stos
leave
popa
outsl
fcos
pop
addr16
adc
or
inc
les
or
cmpsl
xchg
jb
xchg
lret
sahf
icebp
testb
and
inc
cmp
bound
adcb
mov
push
stos
dec
popf
xor
loope
push
mov
fwait
xor
dec
repz
lods
int3
gs
test
das
push
or
shlb
xchg
test
fwait
sbb
clc
sub
xchg
cmpsb
push
dec
aas
sub
cs
pop
mov
js
iret
sub
sub
pop
xchg
dec
addr16
mov
fwait
and
push
inc
cmpsl
icebp
xchg
and
ret
ss
aam
dec
pop
mov
inc
out
inc
push
add
add
inc
std
fiaddl
mov
popf
jl
and
lret
jp
jle
loopne
sti
ret
shl
ret
neg
push
dec
sub
or
iret
scas
xor
sti
movsl
dec
and
out
cmp
out
les
les
dec
mov
out
and
mov
test
xor
outsb
xchg
mov
cmp
cli
push
idivb
mov
div
popf
fxch
dec
stc
daa
cmc
jg
insb
out
xor
sti
mov
sbb
jne
ficoms
dec
xchg
lret
in
ss
push
xlat
subb
mov
push
xchg
cmp
stos
mov
mov
mov
cmc
mov
or
stc
mov
mov
push
cli
jns
xor
pop
pusha
cmp
lcall
cmpsl
scas
dec
cmp
mov
adc
add
rclb
jmp
flds
xchg
sbb
or
push
xchg
inc
and
cmpb
in
inc
into
lcall
jecxz
and
dec
xchg
lcall
sub
lret
sti
adc
sbb
out
cld
dec
test
or
push
add
jle
movsb
mov
imul
int3
aam
insl
testb
cmc
addl
xchg
je
cmp
lcall
shrl
cmp
rorb
cs
out
sbb
adc
rcrb
mov
add
xchg
or
lahf
inc
in
mov
fsubl
push
in
add
mov
outsb
adc
pop
adc
pop
mov
std
add
scas
test
lahf
and
inc
nop
iret
cmp
stos
test
mulb
gs
cmp
fwait
mov
pusha
fdivs
xchg
xchg
ljmp
jmp
sub
jb
lods
cmp
hlt
das
sub
lds
aaa
out
lcall
rorb
clc
pusha
rcr
jno
inc
xchg
dec
sbb
loop
lds
mov
scas
cmp
pusha
pop
push
mov
dec
test
fcomi
mov
mov
cltd
mov
jge
mov
mov
mov
sti
pop
push
mov
nop
shrl
out
out
bound
dec
mov
dec
adc
mov
pushf
gs
mov
sbb
mov
es
push
lods
cmc
push
mov
loop
jge
fmul
and
xchg
rorl
cwtl
sub
cmp
adc
shll
jne
mov
xchg
in
dec
xchg
repz
cmp
push
xchg
sti
adc
inc
outsl
adc
popaw
and
outsb
int3
xchg
cmp
call
sub
stc
dec
imulb
xchg
push
inc
sbb
out
popf
sarb
es
cmpsb
sarb
sbb
cltd
ret
dec
aaa
fmull
mov
aad
adc
mov
fistps
cmp
out
push
jp
ljmp
xor
cmc
adc
sbb
inc
rorl
mov
lods
mov
pop
out
xor
movsl
jno
arpl
out
mov
fsts
cmpsb
jb
fbstp
out
or
lcall
or
test
pop
mov
and
int3
xchg
inc
or
add
lea
fldenv
push
lret
les
pop
mov
js
dec
cmp
outsl
cmp
mov
cmp
scas
push
and
sti
add
push
pop
ds
imul
imul
mov
xchg
lods
ror
cld
xchg
lret
adc
and
repnz
jmp
cli
cmp
mov
or
add
and
test
into
dec
outsb
dec
mov
incl
add
xchg
mov
add
mov
add
rorb
cmpb
dec
xchg
cltd
mov
enter
xchg
or
sahf
je
push
or
push
inc
cmp
jo
cld
pop
leave
xchg
nop
inc
xchg
sub
push
jg
js
adc
inc
lds
scas
in
scas
cmc
xor
pop
push
pop
adc
je
loop
outsb
ljmp
fwait
dec
push
dec
sahf
inc
and
mov
and
jge
adc
test
hlt
pop
sub
add
add
adcl
or
roll
sub
xor
pop
xor
insb
inc
and
dec
scas
insl
scas
cmp
into
lret
push
pushf
xchg
push
lahf
dec
pop
mov
jecxz
mov
mov
inc
clc
dec
add
fsubs
insb
jno
xor
push
sti
jns
adc
int3
mov
lds
pop
jne
out
mov
add
dec
in
and
push
push
mov
xchg
xchg
xchg
cmp
frstor
push
jne
addb
xor
fdivs
push
nop
bound
int
jmp
xchg
lds
pop
loop
xchg
das
shrl
cli
arpl
inc
or
push
cmc
iret
shrl
sub
inc
sub
adc
loope
or
in
mov
stos
add
out
sub
std
test
mov
pop
and
andb
push
fwait
sub
push
lds
je
insl
xchg
push
xchg
filds
pushf
dec
cmp
xchg
in
data16
bound
shrb
or
push
imulb
fstpl
jg
jmp
bound
cmp
inc
xchg
jae
inc
mov
xor
shll
fcomps
daa
and
aaa
movsb
cmp
outsl
adcl
or
jo
enter
xor
sub
sbb
xchg
sbb
dec
in
imul
inc
andb
add
test
jmp
mov
pop
aad
cltd
inc
mov
cmp
mov
popf
std
sub
aam
shlb
xor
in
idivl
mov
pop
cs
pop
hlt
or
mov
dec
cs
shrb
outsb
aam
jecxz
icebp
loop
mov
dec
push
pop
mov
cld
shrl
sbb
shl
pusha
mov
lea
mov
inc
push
cmc
mov
test
mov
mov
add
add
jbe
cwtl
fdivrs
leave
into
jle
clc
scas
sbb
cld
lods
cmpsb
aad
rcll
lahf
push
dec
rcrl
add
out
mov
xor
xlat
xor
xor
or
xor
jns
add
cmc
sti
fimull
adc
fnsave
mov
movb
inc
enter
jo
cmp
fimuls
aam
mov
cmpsl
xorl
dec
and
sbb
mov
js
cmp
sbb
enter
shr
addr16
jne
pushl
mov
imul
popa
test
xchg
out
jno
fists
dec
shrl
push
xchg
adc
lea
mov
cmp
xorl
adc
add
xchg
adc
lret
adc
dec
adc
mov
ret
loop
arpl
iret
aad
lret
sti
repnz
arpl
sub
test
pop
sub
inc
adcb
jo
stos
xor
sub
in
cli
lock
imul
sub
adc
xlat
inc
xlat
bsr
lcall
adc
jge
xor
adc
xchg
shlb
incb
popf
mov
and
lock
and
in
add
cmpsb
pop
push
mov
jp
pop
dec
or
cltd
scas
mov
push
dec
popa
xorl
arpl
hlt
lret
mov
out
fucomi
push
fwait
mov
jl
lcall
mov
or
sbb
fs
in
ret
pushf
mov
test
inc
adc
mov
dec
imul
cmc
xor
mov
push
sbb
xchg
adc
out
inc
add
outsl
mov
daa
xor
add
jle
cs
xlat
add
mov
push
inc
push
repnz
mov
push
enter
pop
mov
mov
popa
test
out
bswap
pop
test
dec
jnp
movl
mov
insb
inc
or
and
loop
mov
faddp
xchg
or
aas
mov
int3
inc
loope
negb
sub
xchg
scas
out
out
jmp
sbb
mov
inc
xchg
jo
repz
xchg
ljmp
fmull
cwtl
lcall
adc
dec
cmpsl
fdivrs
stc
in
daa
xor
jne
out
jo
pop
add
clc
sbb
mov
negb
and
lea
pop
leave
pop
fstp
test
outsb
js
outsb
lods
lret
out
xor
ret
adc
subl
mov
push
pop
sbbb
movsl
rol
mov
inc
fnstsw
sub
inc
sbb
add
icebp
xchg
mov
cs
es
xor
mov
ljmp
mov
sbb
or
popf
push
sub
lret
fiaddl
dec
mov
xchg
cmp
push
insb
test
fucom
sub
aam
inc
lock
cwtl
lock
jne
jne
clc
fidivrs
rep
add
pop
ljmp
or
mov
into
xchg
sub
pop
cli
xchg
loope
dec
dec
mov
xchg
jmp
pop
jg
lret
jle
jne
arpl
ss
aaa
aaa
loopne
test
adc
or
mov
fidivrl
jae
xchg
ds
cmp
fs
mov
lods
fistpll
add
fdivrs
adc
lret
xchg
dec
jmp
dec
ret
adc
rclb
lahf
mov
mov
and
dec
loop
test
mov
jge
into
xchg
cmp
sahf
mov
and
loopne,pt
lods
cwtl
jecxz
outsb
mov
fldl
cld
mov
inc
sbb
ret
cltd
dec
mov
aaa
sti
test
cld
leave
pop
outsb
adc
push
aam
xchg
push
jmp
out
xchg
mov
lock
into
fstl
jg
pop
pusha
pop
inc
push
xchg
or
inc
repnz
xchg
test
ds
mov
pop
rorl
mov
movsl
fnstsw
sti
adc
idivl
add
push
cltd
or
in
sbb
push
jb
inc
pop
mov
cmpb
cld
lds
ret
sub
ds
xchg
inc
cmp
jg
push
stos
test
decl
jecxz
jbe
add
push
dec
lods
inc
inc
dec
sub
lcall
push
in
add
orb
lods
sub
sahf
lret
or
or
int
inc
incl
fisttps
xchg
out
aam
cmp
popa
cwtl
fcoml
pop
sbb
sbb
cmp
and
pop
pop
or
xlat
repz
lock
push
mov
mov
mov
lret
add
mov
cld
fcoml
scas
test
sbb
mov
into
mov
cs
cmp
das
out
xchg
mov
dec
xchg
cmp
inc
mov
sub
insl
je
inc
jb
inc
daa
leave
and
dec
mov
outsl
jp
inc
mov
adc
dec
dec
enter
in
dec
arpl
push
ja
fisubrs
adc
in
mov
mov
fmul
lods
xchg
fwait
ja
jp
cmpsb
outsl
pop
cld
mull
lds
adc
js
cltd
inc
add
cmpl
stos
xchg
sti
orl
out
inc
lret
lods
bound
push
xchg
add
fucom
fiadds
xlat
cmpsl
mov
xchg
xchg
fcoml
mov
imul
xor
decl
scas
pop
cwtl
loop
xor
loopne
pusha
cmpsb
push
lret
mov
inc
lock
int3
cmpsb
xchg
adcb
loope
lods
xlat
inc
ret
pop
je
test
xchg
push
xor
shl
mov
out
cwtl
or
in
adc
sarb
jb
rolb
and
pop
inc
aam
mov
out
jns
rcrl
jle
sbb
bound
jp
dec
push
addb
jecxz
inc
sbb
sbb
in
xor
sbb
inc
cmp
fiadds
dec
aas
sbb
mov
push
fstl
push
xchg
jecxz
out
mov
dec
mov
jbe
fildl
lret
dec
in
or
and
out
insb
in
mov
shl
popf
movsb
sahf
mov
add
inc
xor
icebp
cli
push
dec
loopne
mov
mov
mov
cmp
popa
ret
push
orl
movsb
pop
or
lret
sahf
fsts
aam
jmp
lods
pop
mov
xor
fadds
nop
clc
pop
add
shl
mov
js
cmc
dec
lret
pop
cmpsb
btc
dec
bound
out
sbb
ljmp
aaa
call
popf
fwait
mov
addr16
push
rclb
adc
jo
adc
and
fnsetpm(287
xchg
testl
lcall
aam
or
xor
pop
mov
in
jmp
iret
push
subb
pusha
fildll
test
push
shll
clc
insl
std
mov
aad
adc
movsl
adc
dec
js
lea
test
nop
mov
pop
xchg
das
jo
mul
xchg
aam
int3
jp
xchg
dec
dec
jecxz
jb
xchg
enter
lock
dec
pop
mov
test
xor
push
add
out
push
ja
fisubl
xchg
dec
arpl
repz
sbb
test
pushf
adc
out
into
dec
mov
out
pop
sub
mov
call
mov
rclb
jge
or
and
mov
insb
adc
std
clc
scas
jmp
xor
add
sub
in
sub
jae
push
shlb
inc
pop
add
je
testb
pop
or
mov
xor
bound
test
rorb
arpl
fsts
outsl
mov
stos
jns
dec
pop
push
push
test
leave
adc
dec
icebp
aaa
mov
repz
and
scas
call
js
out
fildl
add
ret
in
shlb
cmpxchg
pop
or
out
add
fwait
jb
jb
insl
cltd
mov
lock
pop
xchg
sahf
pop
insl
jb
add
cmpsb
jl
fbld
jo
mov
lock
sbb
add
adc
ret
jecxz
sbb
aam
adc
fs
and
mov
push
fistpl
mov
ja
mov
lds
imul
jp
push
mov
push
insl
mov
lds
outsb
dec
sbb
pop
hlt
popf
cmp
inc
lret
aad
orl
dec
cmp
sub
out
sbb
and
mov
dec
jle
or
jle
movsb
mov
iret
ljmp
and
rcrl
add
pop
cmpsl
add
mov
mov
in
mov
cmp
mov
fstl
ja
push
imul
aaa
xchg
imul
inc
mov
push
mov
mov
jno
xor
cld
call
imul
adcl
add
scas
xchg
mov
cld
inc
or
sub
setnp
dec
and
jl
jl
jp
mov
repnz
xlat
int3
xchg
dec
movsl
loope
and
pop
lcall
shlb
push
jae
stos
repz
xchg
xchg
lock
sub
and
in
or
adc
loopne
push
pop
mov
stc
jmp
insl
into
aaa
ficompl
push
jp
jns
lcall
test
test
xor
adc
repz
fisubrl
push
mov
jbe
sbb
sub
pop
pop
mov
xor
xchg
in
xchg
mov
add
ja
insb
inc
mov
and
mov
adc
ret
push
inc
cmp
fs
sub
movsl
sbb
mov
mov
inc
mov
das
int
ds
lahf
push
fdivrs
dec
and
ficoms
fs
pop
cmp
sbb
jmp
imul
jmp
xor
push
inc
loopne
push
add
fs
cmp
mov
push
jmp
arpl
mov
inc
xor
insb
adc
fisttpll
push
mov
pop
in
xchg
pop
and
sub
xchg
lds
jle
dec
fiadds
mov
adc
mov
repnz
sub
jmp
pop
jecxz
in
fmuls
jns
push
loope
mov
cmp
lcall
inc
mov
or
dec
jae
aaa
and
out
jp
pop
ja
xor
lcall
xor
dec
fwait
imul
ja
inc
scas
pop
xchg
fwait
jge
jmp
pop
sbb
cmp
push
inc
mov
jbe
push
add
lret
loope
mov
inc
mov
cmpsb
fs
out
xchg
pop
mov
fwait
ljmp
or
scas
int3
scas
stos
outsb
out
or
push
lret
lahf
sub
add
adc
cmp
cmpsb
lods
std
sti
dec
leave
fildll
lods
jno
pushf
sbb
push
cmp
fwait
shr
and
push
shrl
mov
out
orb
add
push
in
roll
mov
cmpsb
inc
sub
shll
mov
push
adc
repnz
inc
dec
aam
dec
ret
pop
inc
push
sub
adc
cmpsl
push
imul
jno
ljmp
das
dec
insb
or
addr16
mov
xchg
adc
test
lret
rol
sbb
adc
push
push
test
inc
test
add
movsl
mov
ret
outsb
lea
jns
aam
adc
cld
cmpsl
mov
xchg
cs
repz
mov
sub
cmp
xchg
push
cltd
xchg
xchg
fists
xor
cmpps
aam
aaa
xor
or
xchg
jb
push
adc
adc
and
add
jnp
repnz
xorl
jmp
daa
sbb
pop
mov
daa
cwtl
xchg
pusha
shrb
jbe
lcall
mov
pop
lods
lods
nop
cwtl
fcoms
fstpt
pushl
mov
push
adc
stc
rcll
icebp
xor
repz
sti
psraw
fs
push
out
outsl
fldcw
sub
ret
pop
push
fsubs
push
mov
push
bswap
or
add
mov
cwtl
pusha
out
inc
lret
dec
dec
loope
pop
push
out
pmulhuw
sbb
or
cli
and
stos
addl
mov
push
jb
push
cmp
xor
scas
mov
or
xor
aam
aad
shll
loope
imul
lcall
outsl
push
mov
leave
ret
icebp
mov
repz
jo
cltd
call
xchg
xchg
adc
mov
jle
inc
jns
mov
or
clc
pop
jo
mov
jp
sti
hlt
mov
out
rol
sbbb
jle
mov
dec
out
bound
repnz
mov
cmc
xchg
push
pop
in
shlb
imul
pop
test
enter
jge
or
pop
shlb
mov
mov
xchg
lcall
pop
jp
movsl
pop
xor
xor
mov
in
mov
popa
insb
ret
stos
aaa
push
adc
les
mov
loope
push
add
popa
mov
cmpl
pop
or
movsl
out
in
fldcw
out
add
test
cmp
mov
push
cwtl
dec
outsl
jge,pt
dec
stos
insb
adc
imul
pop
cwtl
int
and
je
push
je
pop
ss
sbb
adc
xchg
mov
xor
jae
xlat
dec
xor
bound
lds
lea
pop
jmp
call
shrl
sbb
int3
out
mov
loope
mov
lods
js
fisubrl
add
push
lea
mov
or
jno
in
aam
inc
stc
and
sub
outsl
xchg
pop
add
sub
sbb
cmp
dec
pop
outsl
fists
orl
push
xor
je
paddb
repz
xor
repz
scas
mov
psrlq
dec
add
jg
push
out
clc
xchg
jbe
sahf
push
sub
push
mov
call
test
sbb
mov
pusha
jl
add
push
inc
out
pop
cmpsl
sti
jae
xor
and
xchg
jp
mov
mov
sub
mov
pop
push
fst
mov
sbb
jp
movsb
loope
cmpl
xchg
jbe
dec
push
lcall
add
loop
sbb
jae
add
repz
adcb
add
or
cmpsb
out
or
movsb
daa
and
xor
imul
mov
xchg
fcos
mov
scas
fcom
sbb
push
fists
or
jb
mov
xchg
push
push
mov
ja
sbb
repz
jmp
lcall
xchg
stos
ret
ss
mov
xor
test
mov
aad
loopne
add
add
adc
popf
push
iret
xor
leave
push
popf
out
lods
aam
sbb
mov
add
sbbl
sub
imul
loopne
rclb
fldt
push
jp
out
push
mov
cmc
xchg
jp
fwait
scas
push
dec
mov
in
fs
popa
repz
arpl
imul
dec
or
or
and
mov
sub
cmpsb
dec
mov
mov
adc
pop
lods
std
add
cmp
fisttpll
jl
mov
js
ss
int
pop
insb
xchg
cmpsl
or
add
fdivl
sbb
stc
xorb
sarl
sbb
jmp
popf
in
lret
and
xor
add
sbb
xadd
test
mov
fiaddl
pushf
and
lea
cmp
or
hlt
cmp
mov
das
and
add
xchg
mov
sbb
test
jecxz
xchg
mov
out
jle
adcl
cmovns
and
or
dec
call
sbb
xor
je
loope
test
mov
sbbl
inc
into
adc
fs
mov
in
mov
addr16
push
mov
pop
mov
mov
lods
sbb
jg
outsb
mov
stos
push
xchg
mov
or
stos
dec
and
fbld
push
repnz
cmp
mov
sub
sar
iret
mov
cmpsb
repz
mov
shrl
jae
push
cmp
es
in
xor
js
mov
jmp
mov
sbb
pop
test
lret
imul
push
cmpsl
pop
push
jne
mov
loopne
push
dec
mov
shlb
stc
mov
ljmp
ss
xchg
mov
enter
sub
xchg
sub
out
movl
sbb
aam
jge
cs
ds
insb
stos
cmp
add
hlt
sarl
pop
lods
xor
mov
mov
cli
es
daa
lds
cmp
mov
pop
inc
sub
sub
std
imulb
inc
icebp
mov
pop
enter
add
mov
push
jg
jl
ret
xchg
loopne
mov
sub
dec
jne
mov
pop
negb
lahf
pop
pop
stc
jmp
movsl
daa
push
outsl
aas
scas
addr16
cmc
adc
leave
aaa
adc
loopne
fbld
cld
xor
sub
loop
lcall
dec
leave
xchg
je
testb
out
mov
ds
std
xor
cmpb
sub
pop
sub
insb
fistps
xchg
jp
adc
nop
sbb
and
xchg
cmp
or
inc
in
push
sub
dec
inc
pop
mov
jl
push
loope
and
insb
dec
sub
ds
scas
ficoml
outsb
mov
cltd
push
xchg
in
adc
das
aam
mov
mov
jns
add
pop
xchg
mov
repnz
adc
sahf
jl
psrlq
lret
je
xchg
push
xor
jmp
jne
test
shll
xchg
cmovb
dec
xchg
jl
push
outsb
dec
popa
xlat
ljmp
cmpsb
and
gs
mov
mov
cmp
call
fnstcw
outsb
adc
popa
mov
insl
mov
add
adc
mulb
aad
add
pop
mov
or
loope
add
out
lods
dec
push
mov
decl
sbbl
nop
mov
xchg
iret
push
ret
inc
icebp
ficomps
pop
test
lea
fwait
aas
pop
fsub
popa
jnp
inc
dec
outsl
add
outsl
cmp
inc
out
lret
cmpsb
inc
mov
mov
jmp
mov
bound
test
unpckhps
outsl
add
or
mov
cs
jg
leave
stos
sbb
add
subl
mov
mov
out
loopne
cld
cld
in
mov
ret
xor
inc
dec
mov
xchg
dec
mov
mov
in
dec
sub
loopne
push
add
or
dec
ret
icebp
cmp
jl
sbb
stos
lahf
movsl
jl
pop
inc
stc
lret
jo
das
out
loopne
iret
adc
add
sbb
test
jge
aad
loopne
adc
ret
call
notl
sub
insl
fs
or
test
jmp
out
mov
vandpd
pop
lea
sbb
insb
in
daa
mov
push
add
mov
imul
ret
stc
insb
aam
and
jne
xlat
insl
jno
jno
test
jne
outsb
rcrb
adc
mov
pop
pusha
dec
and
js
out
fs
idivl
push
fcompp
sbb
imulb
lcall
insb
push
push
or
xchg
jo
sbb
outsb
out
fs
std
leave
push
add
nop
ljmp
push
jo
loope
or
dec
mov
sti
ret
rcll
call
sti
jb
push
fldt
outsb
push
imul
inc
fldcw
dec
aam
test
xchg
xor
jo
ds
adc
js
fsincos
les
subl
inc
das
lcall
vpmuludq
fdivrl
push
dec
sbb
and
jp
mov
inc
ja
in
call
sub
movsb
aam
xor
gs
sarb
xor
mov
sahf
loopne
lea
mov
leave
inc
loope
mov
jb
or
and
insb
shrl
lret
test
mov
and
data16
ss
out
adc
xor
outsl
fidivs
fs
fs
iret
jb
mov
out
fwait
sbb
aad
ja
cmpsl
cmp
sub
inc
push
idivl
jno
outsl
adc
int
pusha
inc
and
cmpsb
call
hlt
fsts
and
roll
cs
push
ds
cmp
and
out
fst
jno
xor
or
or
or
cli
notb
xlat
subb
push
add
and
out
rcrb
addr16
inc
or
adc
mov
push
mov
movsl
lea
lahf
xchg
leave
int3
xchg
out
push
sbb
pop
mov
fdivs
inc
push
pop
and
dec
mov
in
je
pop
sbb
subl
inc
std
ret
or
icebp
data16
mov
das
stc
fidivs
push
push
mov
mov
int
fbld
orb
aam
jl
pop
adc
dec
cld
ja
sarl
mov
sub
xchg
sub
sbb
dec
add
jg
insl
ss
int
aaa
fcmovu
enter
mov
inc
pushf
push
sub
mov
sub
lret
sti
das
test
mov
scas
popf
mov
pop
outsb
inc
cmp
insb
dec
jbe
out
push
cmpsl
sub
push
push
ljmp
jno
xchg
or
sub
les
or
ret
and
sbb
cmp
fisttps
jbe
jb
pop
add
sub
xchg
orl
xor
test
mov
ljmp
xor
outsb
or
xchg
aas
aam
sahf
inc
mov
inc
cmp
iret
iret
aam
rol
jmp
mov
mov
pop
mov
lds
mov
push
and
insb
add
jmp
xchg
sbb
jmp
nopl
dec
mov
push
std
xorb
icebp
int3
cmpsb
sub
sti
add
movsb
jbe
add
fdivrl
inc
or
mov
push
pop
js
movsb
dec
dec
in
dec
dec
add
dec
xor
mov
xchg
fcmovnu
leave
outsb
mov
gs
push
cmp
inc
mov
cld
sahf
mov
inc
mov
fldcw
mov
cmp
cmpsl
enter
xor
mov
jg
and
std
xchg
lret
std
fldt
jbe
sbb
imul
and
fwait
lds
cmp
push
hlt
push
icebp
test
mov
mov
loope
cmp
in
cmp
adcb
test
pop
adc
cmc
je
ss
push
mov
out
ret
cmp
int3
push
orl
ljmp
fs
adc
ja
mov
push
and
and
add
mov
sub
or
cmp
jno
repnz
pusha
jge
mov
jge
cmp
push
adc
inc
in
jge
push
daa
aas
leave
and
sub
ss
testl
bound
stos
loop
xor
in
fisubs
cmpsb
fbld
das
inc
cmpsl
jne
clc
filds
mov
sub
or
mulb
aaa
inc
sbb
xchg
jno
xorl
jne
shll
addr16
mov
pop
mov
imul
xor
mov
and
jns
adc
idiv
ret
mov
sbb
rcll
or
lret
iret
and
mov
jp
adc
or
pop
outsl
jp
jle
sti
stc
lret
insl
insb
inc
ss
or
sbb
pop
mov
cwtl
test
push
lock
ds
inc
push
adc
jb
stc
pushf
mov
mov
les
cs
imull
int3
lret
je
nop
push
cwtl
xor
sub
adc
loop
int3
or
xor
lds
int
fwait
std
aad
pop
sub
and
cmp
and
mov
xor
sub
mov
cmpb
loope
sbbl
push
xchg
loope
lods
lahf
inc
adc
cmc
jnp
leave
pop
jb
pushf
jmp
jae
pop
lods
dec
mov
push
lret
pop
out
pop
xchg
je
rorl
stos
loop
imull
and
mov
and
or
lods
inc
test
mov
inc
bound
cmp
xchg
dec
cli
sbb
mov
test
inc
jbe
cmp
jmp
pusha
pop
mov
pop
pop
aas
int3
dec
sub
inc
mov
pop
mov
mov
enter
dec
mov
fldt
jbe
or
add
incb
test
lcall
sub
std
xchg
ljmp
mov
jmp
xchg
lea
out
sbb
xchg
cmc
mov
loope
jae
cli
aaa
mov
das
jg
jne
insl
test
jae
jnp
inc
test
dec
fs
jmp
and
fldenv
je
xchg
ljmp
add
ret
pop
mov
sbb
or
cmp
jmp
mov
arpl
jl
in
mov
add
movsl
mov
cmp
push
adc
rclb
cmpsl
rcrb
xchg
dec
call
ja
addr16
les
shrl
sbb
mov
mov
and
xor
lret
mov
xchg
mov
lods
adc
data16
negb
adc
jl
test
mov
push
hlt
stc
movsl
push
sti
frstor
into
add
mulb
aas
arpl
addb
mov
fimull
add
and
shr
pop
mov
pusha
inc
pop
and
push
jbe
dec
je
push
in
pusha
das
int3
fistpll
es
outsl
cs
mov
push
arpl
jne
mov
dec
cltd
jp
jae
add
mov
int
enter
out
xor
pop
fst
in
pop
hlt
sub
shll
out
mov
in
popf
sub
icebp
mov
jnp
shlb
shr
jno
or
add
sub
push
cmpsl
addr16
jae
xorb
xor
push
sbb
inc
inc
push
mov
xchg
mov
cmp
mov
mov
stc
add
jl
fisttpll
sbb
push
mov
and
sbbb
imul
sbb
cmp
push
jmp
or
lds
pop
stos
mov
inc
adc
les
add
xchg
mov
mov
stc
cmpsl
pushf
fnstcw
cwtl
leave
addr16
add
xor
repz
movsl
test
mov
inc
je
xchg
push
dec
arpl
rorl
into
stos
outsl
std
fisubrl
fimull
mov
les
fwait
hlt
or
and
out
out
sub
ret
insb
pop
mov
shlb
mov
push
jle
push
mov
nop
hlt
push
jp
sbb
cmpsl
cmc
and
cmpsb
push
jo
pop
push
push
add
shrb
inc
pop
jge
fstpt
or
dec
mov
movsb
push
cmp
cmp
or
nop
fbstp
mov
jbe
lcall
ret
mov
xor
mov
and
bound
dec
mov
outsb
push
in
xor
push
mov
outsl
out
cs
mov
aad
in
fadds
loope
xor
mov
fbstp
pop
test
movsl
xchg
ljmp
sbb
and
cmpsb
push
pop
mov
ret
jmp
jnp
out
or
push
mov
jae
sub
stc
cmp
call
lds
out
inc
rorl
adcb
and
hlt
xorb
jbe
sub
test
outsl
scas
scas
or
aam
enter
add
xor
int3
add
mov
lock
cmc
dec
pusha
ds
lock
insl
lock
idivl
rclb
mov
sub
dec
inc
mov
enter
sbb
dec
mov
scas
mov
inc
test
adc
addr16
push
cmp
inc
pop
adc
jmp
fs
stc
pusha
test
test
bound
addr16
jp
std
negl
adc
pop
std
mov
mov
mov
dec
movsl
pop
pop
fadds
fcmovbe
fdivl
sbb
repz
inc
push
leave
xchg
fisubrs
in
mov
inc
setnp
arpl
xlat
xlat
inc
or
xor
mov
jp
iret
xchg
dec
movsb
jg
xor
imul
sub
in
shll
shlb
addr16
xchg
mov
push
incl
inc
adc
rorl
cmp
rol
cs
and
sub
or
rclb
jae,pt
clc
xchg
icebp
in
fists
shll
sti
pop
sub
repz
mov
fmuls
hlt
add
dec
nop
pop
sub
or
movsl
adc
cwtl
adc
and
xchg
add
dec
bound
cltd
jnp
imul
cmp
xor
dec
dec
mov
pop
dec
mov
adc
cmp
aad
das
pop
xorl
and
arpl
push
fs
pop
add
pop
test
push
jb
mov
mov
stos
cs
cli
sub
mov
push
xchg
out
xlat
mov
mov
inc
sub
inc
adc
shlb
pop
add
inc
mov
cmp
repnz
pop
call
cmc
pop
cmp
lock
insb
fisubs
push
xor
data16
bnd
inc
mov
mov
mov
dec
xchg
outsb
or
xor
scas
sub
jno
enter
mov
xor
iret
std
in
ret
xor
adc
insl
out
icebp
rorl
xchg
enter
sbb
lea
jp
or
inc
mov
test
aam
add
hlt
call
punpckhbw
jmp
rcll
cmp
xchg
mov
lock
mov
popa
cltd
mov
xchg
in
sub
xor
inc
pop
mov
out
hlt
jae
pop
icebp
and
mov
lret
test
mov
and
loopnew
jae
pusha
jno
rorb
stos
fsubrl
out
mov
ror
mov
or
adc
push
cmp
mov
pop
in
lods
xchg
adc
aam
dec
sub
fidivrl
loope
cwtl
int
and
xchg
cmp
and
or
stos
cltd
mov
mov
pop
lods
sbbl
add
lods
mull
push
ror
std
repnz
ja
cmp
push
cs
xor
mov
dec
loop
mov
pop
out
jl
xor
and
cs
pop
adc
push
aad
dec
addr16
stos
cld
pop
mov
and
jae
jl
scas
xlat
jg
dec
inc
popa
mov
add
pop
adc
push
sbb
push
xchg
jecxz
loope
lret
loop
xchg
pusha
push
out
xlat
sbb
in
push
pop
jmp
jbe
sbb
adc
mov
jne
adc
jl
orl
jno
push
dec
xor
xor
stos
aad
xor
lea
jnp
jp
sbb
mov
shlb
fwait
push
mov
add
pop
dec
outsb
mov
push
push
xchg
shlb
movsl
jo
jecxz
aad
dec
or
jbe
jns
shlb
push
mov
fs
clc
lret
sub
out
or
popa
or
xchg
cmp
mov
push
mov
stc
jge
xchg
cwtl
into
mov
lock
aam
lahf
jp
or
out
xchg
out
push
and
pop
fidivs
push
dec
pop
lahf
or
lret
pop
add
jmp
movd
push
push
pusha
mov
orb
sub
roll
push
pop
shrl
mov
add
jo
pop
mov
popa
int3
or
popa
divl
pop
lret
pop
sub
sub
add
pop
hlt
popa
movsb
inc
pop
xchg
pop
and
shrl
push
push
jne
stc
sub
cmp
and
mov
adc
sub
add
or
pop
imul
outsl
call
and
xor
jnp
xlat
or
scas
rcr
insl
in
inc
arpl
adc
test
mov
push
fs
pop
push
mov
cmpsb
in
and
inc
lahf
insl
and
and
add
cmp
aad
mov
dec
loopne
dec
and
mov
scas
adc
lea
iret
cmp
lret
sbb
lret
outsl
sub
dec
fwait
add
dec
fldcw
dec
cmp
std
sub
xor
mov
stos
push
push
rcl
aad
inc
dec
xchg
xchg
sub
inc
dec
in
push
lret
mov
loop
and
inc
ja
fldenv
dec
sub
jmp
js
cmpsb
repnz
mov
div
mov
cltd
xor
mov
sarl
push
push
movsl
test
jle
cltd
or
inc
push
stos
lret
sub
sub
push
je
inc
or
dec
pop
ficompl
cli
mov
lahf
loopne
mov
gs
mov
lods
imul
test
pop
mov
mov
push
dec
jns
pop
adc
xchg
cmp
xchg
and
cmpsb
lods
mov
add
lods
sub
or
inc
jae
xchg
mov
mov
mov
push
stos
mov
adc
mov
pushl
and
mov
pop
mov
dec
mov
jae
dec
sub
daa
dec
loop
popa
cmp
inc
xor
daa
sbbb
jecxz
ret
std
pop
aaa
ret
xchg
bound
or
dec
outsl
pop
cmp
add
ljmp
aaa
sbb
repz
pop
sbb
mov
cmp
cmp
outsl
dec
sbb
lock
idivb
imul
cmp
push
popf
out
sub
cwtl
and
sbbb
ljmp
pop
xchg
enter
xchg
stos
and
out
clc
movsb
imul
dec
cmc
call
stos
cmp
call
fwait
ret
sub
sub
fcmove
call
or
push
lods
sbbb
jecxz
mov
sbbb
jp
movsl
cmp
pop
das
lods
push
xor
mov
push
sar
scas
sub
sti
les
mov
imul
jb
or
jl
lock
push
es
loope
scas
sub
inc
xchg
icebp
into
iret
ror
mov
popa
out
pop
rcrl
iret
ret
inc
jnp
sti
lock
daa
jl
rolb
ljmp
hlt
or
outsl
mov
out
sar
push
dec
out
mov
jns
lcall
jmp
or
push
scas
lods
and
jp
fcoms
and
add
jno
add
scas
sbb
loop
ja
jne
push
ja
mov
xchg
mov
push
clc
xor
push
pop
pusha
negb
gs
xor
lock
mov
inc
xchg
pop
cmp
adc
lods
sbb
outsl
fiadds
xchg
insb
mov
sti
or
dec
inc
xor
aad
aaa
mov
xchg
jmp
jp
repz
xchg
int3
mov
jg
push
dec
sbb
adc
cmp
push
testb
mov
fcmovnb
cmpsl
ds
lds
xchg
xchg
bound
and
and
in
adc
inc
and
xchg
jne
ljmp
xor
ret
pop
mov
inc
push
ljmp
andl
push
cmp
mov
mov
movsb
pop
push
repz
iret
iret
mov
push
pop
push
cmpsb
cli
outsl
pop
hlt
adc
push
or
in
mov
jg
mov
hlt
push
push
insl
pop
push
adc
es
mov
or
mov
fisttps
test
test
fdivrs
insl
mov
mov
rol
fldl
aam
aam
jb
fsubl
roll
fucomi
xchg
xchg
popf
and
adc
sbb
imul
jmp
hlt
lock
out
fcmovbe
and
sub
ret
jmp
sub
bswap
subl
addr16
adc
je
aad
int3
lds
out
push
cwtl
rclb
int
xor
dec
dec
inc
stos
push
mov
pop
push
sbbl
pop
or
inc
imul
or
push
mov
jmp
cltd
push
sub
loop
jnp
fbstp
outsl
mov
and
push
das
xor
aam
jne
fstpt
push
pop
imul
ret
sbb
imul
out
add
aaa
es
out
je
rol
add
or
ss
jns
shll
add
sub
push
cmp
xchg
dec
in
ljmp
in
lahf
pop
inc
testl
dec
cmc
xchg
mov
fcmovne
js
mov
dec
add
and
sbb
pop
xchg
cltd
dec
xchg
out
aas
andb
lret
jle
cltd
stos
mov
dec
movsl
out
cmpl
and
jb
stos
shl
adc
pop
inc
mov
scas
int
push
cmpsl
in
pop
jecxz
jno
inc
add
mov
push
and
push
test
mov
cmpsl
fdivp
lods
leave
adc
sbb
push
adc
in
xchg
outsl
aad
dec
adc
add
dec
out
loopne
nop
dec
scas
dec
dec
dec
jmp
rorb
dec
cmp
lds
xchg
xor
mov
daa
sbb
or
push
xor
in
xchg
inc
push
fwait
cld
fadd
popa
hlt
imul
hlt
loop
ljmp
jae
cmp
loopne
rorl
dec
out
das
adc
in
add
fidivrs
jbe
cltd
mov
negb
popa
dec
nop
add
movsb
pop
xor
push
iret
mov
dec
out
imul
xor
push
popf
cwtl
jno
sub
push
dec
xchg
dec
pop
or
cmpsl
mov
mov
mov
mov
pusha
ljmp
hlt
push
lcall
enter
add
push
push
sahf
push
cmp
push
sarb
or
fcomps
cmp
in
sbb
andb
out
push
mov
pop
dec
lret
shll
pop
cltd
mov
sti
cmp
popa
push
jnp
inc
sahf
es
push
lea
stc
insb
push
mov
popf
jnp
dec
sahf
sbb
add
xor
or
scas
fdivrl
jbe
cmpsb
adc
cli
mov
aad
or
inc
jp
addr16
test
outsb
cli
adc
fcoml
xchg
mov
clc
jmp
mov
outsl
mov
std
lret
inc
mov
sub
mov
sub
loope
stos
mov
mov
iret
mov
sbb
flds
shrb
loop
sub
ss
nopl
dec
mov
and
ret
xor
in
addr16
cld
inc
xchg
pop
sub
sti
push
ret
rol
jg
xor
push
push
loop
or
sti
mov
xor
aaa
ficoms
lret
and
es
iret
jle
mov
pop
pop
out
out
adc
repz
cmp
jge,pn
mov
loope
sbb
dec
cmc
xchg
jge
lret
mov
shrb
lods
pop
sub
lret
adc
std
out
push
mov
xor
std
add
and
out
mov
pusha
orl
add
pusha
adc
inc
movsl
mov
cltd
lret
dec
ds
xor
outsl
sbb
loopne
cltd
lret
shlb
cmp
call
daa
or
in
sarl
cwtl
xchg
or
fcoml
mov
into
inc
in
jno
divb
call
mov
jl
mov
mov
lret
cmp
sbb
cli
jae
sarb
adc
and
outsl
push
dec
rcll
xor
sub
push
sti
jne
test
ljmp
lcall
scas
stos
outsl
push
jmp
dec
test
arpl
cmp
or
in
fistpl
and
pop
repz
and
push
pusha
adc
test
clc
inc
cli
sub
inc
es
mov
jg
ss
xchg
pop
sub
sti
es
iret
jg
sahf
inc
add
and
or
cmp
in
rcrl
mov
ss
out
xchg
enter
in
jnp
into
xchg
xor
js
movsb
ret
push
dec
jle
icebp
subb
dec
xor
fwait
cld
rcrl
outsb
in
outsl
sbb
mov
test
pop
xor
mull
cmpsl
mov
xchg
and
add
lcall
mov
pop
call
fucomi
mov
hlt
mov
xchg
ret
dec
xchg
pop
imull
jbe
push
xor
inc
fs
xor
std
push
jg
test
jo
test
movsb
test
mov
into
sub
test
add
pop
jmp
dec
lock
mov
add
cmpsl
sar
lret
into
fistpl
lcall
test
cmp
nop
scas
dec
or
mov
xchg
and
sub
lock
mov
adc
pop
ljmp
fwait
mov
xchg
xor
sbb
adc
or
pop
mov
cs
and
cwtl
stos
or
rcrb
lock
add
stos
jo
push
int3
sti
cmpl
fisubrs
fsubs
xor
cli
cmp
or
mov
mov
insl
leave
sub
outsb
fists
and
cmpsl
in
out
add
aas
rorl
in
xchg
pop
jl
push
add
arpl
xchg
sub
mov
push
adc
fs
push
push
nop
jno
addl
xchg
add
mov
jl
orl
cmpsl
jmp
pop
and
sahf
mov
andl
jnp
pop
add
mov
aaa
int
sbb
rcr
lahf
les
cmp
popf
fldl
lahf
xor
mov
imul
lods
mov
jbe
addr16
sub
mov
adc
xor
lret
jb
cwtl
imul
in
hlt
xchg
pop
mov
mov
xor
test
jns
rol
cld
lock
mov
cmc
outsb
jnp
and
test
fnstenv
xchg
lods
test
stos
xchg
fistl
xor
pop
movsl
lock
daa
loopne
jl
aam
cld
xchg
gs
xchg
fcoml
mov
cmp
out
add
out
fistl
or
sbb
das
jl
or
sbb
addr16
jmp
push
js
jae
outsl
xor
scas
imul
or
mov
pop
cmpsb
orb
clc
xchg
jnp
inc
xchg
push
sbb
mov
or
daa
cmc
cmc
adc
mov
jg
xor
pop
ss
iret
push
push
push
rorb
loopne
insl
sbb
mov
pop
inc
sarb
ret
mov
mov
inc
fcomi
mov
mov
xchg
fcoms
mov
pop
jp
cmpb
scas
into
imul
ljmp
jbe
cli
mov
xchg
inc
icebp
mov
sbb
in
nop
dec
repnz
jg
movsl
popa
fimuls
sbb
sbbl
sahf
add
push
adcb
adc
call
mov
cltd
test
mov
dec
fstl
sti
jno
test
jb
mov
popf
cltd
mov
mov
cmp
aam
xor
aad
iret
xchg
mov
push
les
jns
aas
pop
movsb
jle
stos
test
xor
cs
inc
icebp
sbb
jo
sub
inc
jns
popa
int3
adc
adc
adc
mov
push
mov
or
cmp
dec
mov
jae
adc
jns
cmp
or
push
stos
lods
aam
push
cld
jae
mov
mov
add
xchg
mov
pop
and
and
adc
mov
push
dec
repnz
adc
xchg
sti
mov
mov
cmpl
pop
mov
addb
and
pop
dec
mull
adc
das
nop
insl
ljmp
decb
imul
mov
jl
pop
loopne
inc
data16
dec
jle
stos
pop
mov
les
in
jno
sbb
bnd
mov
leave
int
testl
stc
movsb
dec
ret
push
pop
movsl
xchg
and
paddsb
and
aam
cmp
sub
cmc
movsb
sar
in
loop
mov
push
jmp
push
aaa
fwait
cmpsl
push
sbb
cmp
xor
movsl
cmp
fidivl
cmp
inc
aas
subl
adc
test
loope
mov
sti
in
adc
js
mov
mov
or
daa
xchg
cmc
int
adcb
push
mov
push
rorl
mov
into
push
cld
stos
cmpl
push
push
jae
inc
xor
mov
jmp
mov
push
loopne
cwtl
xchg
outsb
fidivrl
fmulp
cmpsl
push
push
je
icebp
xchg
les
add
sub
sub
in
push
push
ret
fmulp
mov
mov
lcall
lcall
xchg
in
mov
mov
sbb
jb
xor
mov
xor
push
outsb
dec
jno
and
pushl
mov
lret
scas
sbb
jecxz
push
add
jns
sub
ss
cmp
cs
aas
lcallw
rorb
les
add
jne
pop
add
lret
jno
aam
les
test
push
cmp
lcall
rcl
pop
mov
paddsw
mov
and
dec
pop
xchg
jno
int
push
or
xchg
dec
dec
fs
mov
idivl
inc
pushw
or
push
push
cmc
ret
out
stos
mov
loopne
dec
aas
loopne
add
xor
sbb
mov
xchg
xor
ja
scas
adc
insl
push
mov
int3
imul
mov
aad
add
mov
sti
scas
loopne
or
pop
jbe
xchg
scas
in
jne
mov
xor
mov
idivb
xor
je
lahf
js
insb
aaa
popf
cmp
xchg
popf
jb
test
addb
push
sbb
xchg
lea
faddl
sub
jecxz
push
push
jl
or
std
insl
mov
dec
mov
ret
shl
jne
sub
xor
jno
stos
aad
sbb
fmuls
arpl
jge
sbb
cmp
and
out
mov
xor
in
movsb
or
bound
mov
mov
mov
cmp
adc
xchg
testl
jnp
mov
sbb
pop
or
adc
ret
mov
pop
push
mov
repnz
fadds
std
jae
cmp
std
call
lock
or
in
jns
dec
jl
rorb
cld
imul
test
imulb
cld
rcrb
fnstenv
jmp
lahf
xor
push
jmp
cmp
sub
aad
dec
dec
cmp
sti
fstps
xchg
sub
call
repz
call
dec
jge
jb,pt
int
mov
and
sub
fs
ja
sahf
jbe
push
inc
and
rclb
popf
add
cmp
aad
lret
je
insl
int3
das
test
pop
jno
pop
data16
mov
popa
or
push
fcomps
xor
xchg
adc
jmp
or
popa
stos
xchg
stc
xor
mov
dec
sbb
xchg
popw
dec
movsl
mov
xor
push
stc
cli
fimuls
add
repz
adc
push
stos
pop
out
push
loop
inc
testb
dec
cmpsl
dec
loope
mov
ss
mov
das
pop
pop
mov
jp
ficoml
repz
push
cmp
pop
and
pop
shrb
cmp
cmpsb
mov
push
sbb
addw
dec
sub
ljmp
mov
xchg
cltd
pushf
cmpsb
push
sbb
mov
cmpl
mov
jl
jns
push
sahf
rorb
xor
daa
rorl
push
cmp
test
xchg
mov
xor
loopne
in
addr16
insb
cmpsb
mov
dec
xor
fnstenv
insl
mov
stc
xor
fnsave
push
inc
jecxz
adc
xlat
lea
pop
movsl
mov
mov
mov
adc
enter
bound
mov
incl
adc
cmp
adcb
add
xor
mov
fildll
test
sub
lcall
xlat
mov
adc
imul
xchg
pop
stos
aad
jb
cli
shll
mov
iret
movsb
cmp
clc
add
or
inc
adc
jb
push
dec
stc
xchg
sub
imul
enter
popa
xchg
and
fistps
pop
out
dec
sahf
cmp
or
xchg
ficomps
xlat
test
jecxz
je
mov
mov
loop
ret
mov
push
sub
inc
pop
aas
in
pusha
dec
fdiv
ficomps
pop
adc
or
mov
out
dec
push
jbe
ds
lods
iret
nop
jmp
sbb
lcall
xchg
sbb
dec
cli
daa
push
iret
pusha
js
mov
sbb
jae
shll
sti
cmc
in
push
add
das
cmpsb
sarb
fcmovnu
adc
pop
xor
push
hlt
xchg
xchg
imul
stos
jbe
lods
out
xchg
test
inc
jbe
xor
mov
sbb
shrb
in
inc
jg
loope
pop
mov
cmp
inc
adc
jg
hlt
push
jns
sub
xor
sub
xlat
dec
jno
push
cli
sub
cmp
mov
push
stos
sbb
fcomps
adc
adc
add
shrb
xchg
inc
roll
adc
out
jl
cs
imul
ljmp
and
fildl
pop
scas
inc
movsb
fmull
out
adc
cltd
scas
ret
mov
sbb
mov
sub
pop
inc
cmpb
mov
sahf
cmp
stc
in
insl
push
das
add
mov
adc
mov
cmpsl
es
add
enter
in
adc
mov
mov
ja
mov
out
inc
xchg
jbe
das
inc
mov
inc
popa
mov
cmpl
mov
jl
stos
out
push
mov
out
mov
orb
and
cmpb
jns
pop
or
js
inc
and
push
xor
aad
lea
std
or
aaa
mov
int3
mov
test
and
ret
popa
xchg
mov
xor
popf
movsb
or
inc
dec
mov
dec
ficomps
std
leave
cmp
dec
iret
in
sub
mov
sub
mov
pop
push
movsb
adcl
push
das
sub
mov
outsl
popa
push
int
mov
mov
xchg
arpl
movsb
iretw
dec
xchg
dec
stc
push
mov
sbb
xchg
jae
data16
mov
mov
xchg
scas
inc
or
lret
inc
sub
arpl
mov
nop
stc
movsl
lret
ss
pop
popf
inc
ret
jno
icebp
and
xor
and
mov
pop
fcomp
lcall
xchg
cmp
cli
jno
out
push
or
inc
pop
push
addr16
addr16
arpl
lret
inc
into
clc
mov
or
leave
jns
fcmovnbe
test
add
dec
out
mov
and
ds
mov
fidivrs
into
jecxz
add
arpl
xchg
inc
fistpll
hlt
fidivrl
add
icebp
add
in
sbb
mov
adc
loopne
sub
jns
jg
arpl
lds
stos
nop
inc
or
das
mov
mov
and
jnp
int
jno
jb
inc
out
scas
jl
jecxz
jp
setg
repnz
inc
nop
push
sub
jg
fwait
adc
sti
daa
stc
icebp
jae
mov
mov
pop
loope
sub
and
mov
movsl
adc
adc
cmp
icebp
subb
adc
test
jbe
pop
sub
jge
mov
dec
verw
lahf
aaa
sbb
mov
sub
outsl
sub
push
daa
in
stc
push
jne
pop
cwtl
and
test
push
jae
pusha
pop
pop
int
jl
ss
loop
ds
push
loop
repz
lock
ja
jnp
addl
cmpsb
icebp
fsubrs
icebp
jecxz
jl
imul
or
insb
sti
xlat
pop
nop
dec
fildll
mov
mov
cmp
shlb
adc
in
sub
xor
pusha
inc
jmp
movd
cmp
mov
xlat
xor
fwait
and
push
pop
push
jae
mov
adc
scas
sbb
mov
pop
icebp
fnstcw
sar
mov
mov
mov
mov
adcl
pop
and
into
daa
test
nop
jmpw
adc
cld
xchg
dec
fisubs
cmp
pop
test
insl
sbb
ret
or
inc
add
push
and
in
mov
mov
xor
insb
xchg
push
dec
lods
js
push
jo
sub
rcll
xchg
and
or
and
imul
dec
xchg
mov
pop
and
aaa
mov
ror
sbb
aaa
icebp
push
push
sbb
popa
cmp
jp
nop
scas
es
adc
movsl
imul
pop
jge
or
and
mov
daa
push
xchg
xchg
stos
mov
sub
mov
jne
out
pop
or
cmp
xchg
cltd
scas
andb
pop
scas
dec
pop
mov
shlb
in
lock
dec
xchg
pop
sub
jne
loop
aas
repnz
jne
sub
mov
shrb
mov
sub
mov
lds
repz
out
loop
or
cmpsl
insl
push
popf
out
dec
popfw
jg
pusha
push
test
push
test
push
fldcw
jl
inc
sbb
xor
mov
pop
sahf
test
xor
cwtl
mov
fwait
ja
jbe
inc
or
test
mov
fs
int3
aaa
mov
imul
mov
fnstenv
sub
cmp
sub
movsl
movb
mov
cmc
pop
movsl
mov
push
sub
ja
test
xchg
pslld
sbb
pop
xchg
add
sbb
mov
jnp
out
dec
jne
pop
call
xor
sub
xchg
and
xor
aaa
mov
add
xchg
movsb
lret
pop
inc
xchg
sub
ret
mov
push
stos
loop
add
cmp
mov
adc
cmp
or
push
add
cmpsb
or
shlb
lds
inc
adcb
imul
cmc
mov
test
jecxz
pop
aad
sub
mov
dec
repnz
jg
adc
movsb
xchg
mov
ret
or
or
or
mov
fldl
mov
inc
xlat
into
aaa
xor
frstor
lret
jecxz
jne
mov
jae
sbb
fsubrs
jge
pop
aaa
push
and
pop
push
jle
test
sub
xchg
jg
es
pop
mov
and
scas
pop
add
cmp
mov
push
push
jge
stc
jg
loop
das
inc
in
inc
lcall
js
rclb
add
jmp
xor
gs
ljmp
nop
cwtl
dec
div
lock
loope
in
fnstcw
pushf
loop
es
ds
lahf
lods
bound
push
push
mov
dec
cmp
inc
pop
jge
rep
push
mov
mov
pushf
aas
cmp
out
push
pop
imul
cmp
arpl
push
sub
lcall
loopne
mov
stc
push
loop
push
jbe
std
shrl
or
notl
addl
addr16
and
stc
mov
cmp
fistl
enter
daa
add
cmp
pop
pop
out
mov
movsl
movsl
sbb
cwtl
xchg
pop
xchg
shrb
test
lret
sub
add
sbb
fmull
sti
jecxz
gs
and
cmp
mov
mov
cltd
mov
pop
filds
and
push
popa
ljmp
loopne
out
subl
hlt
push
and
lods
cld
push
loop
in
mov
test
or
mov
cmp
shll
push
push
pop
loopne
xchg
cmp
scas
sbb
aaa
jne
mov
sbb
pop
insl
inc
nop
dec
int3
cmp
jns
das
shl
mov
sahf
adc
loope
mov
rcrl
mov
add
test
dec
fstpl
and
jbe
jmpw
xlat
sar
mov
aaa
mov
push
nop
lea
sbb
dec
loopne
stos
push
jl
mov
dec
repnz
push
pop
or
out
jl
jecxz
lret
mov
adc
arpl
std
xorb
jmp
int3
icebp
sbb
mov
and
test
fs
dec
shr
mov
push
mov
out
mov
inc
negl
or
imul
and
popf
out
andl
xchg
sub
iret
jmp
test
rcrl
or
sub
outsb
test
mov
dec
dec
jge
sahf
enter
sbb
outsl
in
fs
xchg
inc
mov
mov
push
mov
sbb
dec
dec
lods
mov
sub
mov
jg
xor
adc
xor
ss
inc
loope
outsb
mov
inc
and
shrl
xorl
adc
mov
loopne
sahf
cmp
push
lea
movsb
cmp
neg
lcall
cmp
fwait
push
fcomp
mov
test
mov
add
push
xor
idivb
and
mov
mov
enter
mov
mov
pop
xor
cli
aam
sarl
add
movsb
test
in
push
lock
hlt
mov
mov
shll
fstpl
mov
insb
sbb
push
rorl
pop
fildll
lods
mov
and
cli
subb
xlat
scas
mov
or
jb
and
rorb
add
lret
inc
inc
mov
xor
fs
add
stos
push
sub
nop
shlb
addb
pushf
rcrl
cltd
xchg
cmp
aam
int
icebp
lock
les
fsubrs
pop
shll
lock
movsl
ret
sub
outsl
hlt
jl
aam
dec
not
aaa
push
out
lcall
or
jecxz
and
sbb
sub
es
or
movsb
push
dec
xchg
movsb
fistpll
mov
push
jmp
sub
sbb
add
lock
enter
pop
mov
add
fmull
push
mov
sub
lret
mov
adc
adc
inc
xor
pusha
mov
daa
pop
jl
std
xlat
mov
stc
add
insb
shlb
sarl
xorb
pop
in
sbbb
jae
js
ja
cmc
je
xchg
mov
and
lret
mov
pop
push
lods
out
mov
jge
rcrb
in
bnd
dec
xor
add
in
lea
je
cs
frstor
jg
out
mov
xor
loop
cmpsb
mov
mov
movsl
ljmp
fisubl
mov
mov
mov
lret
das
push
pop
pop
mov
hlt
rol
cmp
mov
inc
sub
out
into
adc
popa
pop
add
shll
push
or
int3
repnz
and
nop
cmp
jns
jnp
ds
mov
popf
add
sahf
pop
mov
es
dec
push
insb
jae
push
fs
mov
outsb
ret
xchg
loopne
pop
enter
inc
sbb
add
push
es
mov
or
ljmp
mov
mov
sub
and
out
xor
loopne
js
cmp
popa
mov
rclb
push
scas
cli
and
fildll
cwtl
mov
ret
gs
add
mov
loope
sbb
sbb
or
mov
jecxz
popf
pushf
ja
xor
int
mov
loop
push
sub
imul
imul
push
aaa
and
push
aad
call
add
mov
and
xor
sub
addl
shlb
adc
push
test
std
and
jns
mov
sub
push
mov
imul
sti
dec
and
js
mov
cltd
out
cmc
rcrb
les
or
dec
adc
add
fistl
nop
loopne
inc
xchg
and
pushfw
mov
jb
add
add
int
sub
mov
jp
add
cmp
enter
add
int
pop
and
xor
push
shll
add
sub
xchg
es
rorl
push
mov
dec
inc
mov
les
fisttpll
stos
iret
xchg
loopne
iret
cld
mov
sti
stc
aam
das
andl
jl
loop
jne
inc
xchg
nop
jge
insl
or
into
or
add
jnp
add
out
push
push
inc
jge
and
push
jecxz
insb
jae
sbb
out
das
sbb
mov
lret
mov
jle
cmp
mov
les
push
push
or
jl
nop
int3
pop
pop
or
push
xor
jb
aas
or
xchg
inc
sbb
or
dec
push
rclb
test
movsb
and
rcll
mov
cmp
fidivs
jmp
and
xchg
or
mov
inc
mov
sub
xchg
xchg
aas
sbb
dec
cmpsl
and
pop
inc
mov
push
iret
inc
mov
mov
inc
insl
xor
call
mov
orb
mov
pop
loope
inc
mov
xchg
add
rcr
ficoms
insl
movsl
imul
inc
sahf
xlat
movsb
sar
sti
mov
mov
inc
sarl
loopne
cmp
add
mov
pop
mov
xchg
cmp
jno
adc
sub
test
ds
xorb
jge
sbb
xchg
je
jmp
pop
push
ds
pop
jno
pusha
outsl
or
bound
dec
cmp
std
add
pop
jbe
dec
add
es
movsb
dec
test
pusha
mov
jmp
and
sbb
in
mov
jg
aad
stos
mov
cmp
movsb
scas
shll
sbb
push
inc
or
sbb
idiv
movsb
fs
mov
push
insb
and
iret
mov
push
shll
xor
mov
add
js
movsb
fldcw
movsb
incl
dec
in
mov
dec
subb
jmp
and
fs
xchg
js
xchg
mov
pop
test
xchg
cmc
dec
sbb
and
sbb
aas
lcall
push
out
add
hlt
out
cmp
cmp
mov
inc
push
adc
aad
mov
and
xor
mov
cmp
push
cmp
and
jno
or
ljmp
jbe
push
repnz
lahf
popf
jmp
push
mov
mov
mov
and
loopne
mov
fistps
sub
xor
or
cmc
subl
add
xor
push
inc
cmp
dec
sub
stos
mov
in
call
js
clc
mov
dec
mov
mov
fwait
pop
je
data16
in
and
fldenv
iret
inc
fnsave
sbb
mov
faddl
xchg
pop
or
je
filds
lret
loopne
lret
insb
push
jmp
push
stos
mov
rcrl
adc
data16
or
cmp
cli
push
clc
sti
cmpsl
adc
xor
cmpsb
repnz
loope
std
pop
jmp
mov
outsl
sbb
fistps
aas
xchg
push
movsb
push
into
mov
mov
sbb
out
daa
mov
loop
jg
mov
fistps
mov
rorb
cld
rolb
jo
lea
jecxz
xor
subl
pop
xor
stc
js
xchg
jge
ds
pop
mov
mov
pushl
sbb
insb
adc
inc
sbb
cmp
mov
dec
inc
cltd
inc
nop
shll
inc
dec
mov
mov
cmpsb
mov
incl
inc
cmpsb
fs
imul
inc
stos
adc
repnz
mov
xor
fcomi
sbb
ja
adc
sbb
push
cmp
in
shrb
jb
jae
sbb
lds
test
adc
push
mov
stc
xor
sahf
imul
xor
xchg
mov
cld
dec
repz
repnz
jg
enter
andb
inc
lock
call
push
adc
cmp
push
cli
cmp
pusha
xor
dec
call
test
push
lret
fcompl
or
jb
orl
out
dec
dec
xchg
repz
out
jb
inc
jecxz
mov
sub
rol
pop
jnp
mov
in
outsl
inc
inc
nop
xor
adc
adc
femms
ficoms
arpl
test
push
push
dec
and
fs
inc
mov
daa
dec
aad
icebp
fidivs
cmp
pop
lret
aaa
sbb
jl
sti
and
dec
jns
push
mov
inc
loopne
decl
lahf
xchg
repz
inc
sub
in
xor
loopne
mov
sub
gs
fcomps
lods
cmpsl
mov
xor
ret
rclb
pop
lahf
test
push
xchg
rorb
lock
mov
cs
or
sbb
notl
addr16
lock
lods
jge
sub
push
dec
mulb
nop
lret
jl
mov
pop
rcll
pop
cmp
and
aad
repnz
loope
add
jae
cmp
adc
and
into
or
xor
mov
mov
mov
or
in
frstor
je
gs
rcr
xor
addr16
mov
cld
notb
jg
pop
inc
dec
jp
and
fmuls
inc
mov
xchg
int
pusha
push
xchg
int
int
hlt
cmc
adc
add
add
mov
mov
or
mov
xor
cmp
out
je
lea
push
scas
movsl
in
imul
in
dec
in
test
push
lock
lret
fdivs
pop
push
push
pop
mov
data16
fmulp
test
push
movsb
and
out
sub
jp
std
push
cmp
out
pop
shll
mov
bound
mov
jno
jp
in
cmp
cmpsl
test
xor
int3
pusha
cli
cs
lds
stc
stos
cwtl
sub
rolb
sbb
push
daa
pop
fiadds
sub
jg
stc
inc
imul
jbe
loope
fcompl
and
push
mov
push
fistpl
repz
lds
jnp
xchg
mov
les
ret
mov
popa
stc
xor
inc
push
loope
or
ss
fs
jmp
sbb
mov
mov
pop
sbb
mov
xchg
jg
inc
lret
or
ds
test
cli
or
pushf
or
or
sbb
cld
jbe
shlb
fwait
xchg
cmp
pop
lods
cltd
ljmp
jmp
pop
sub
xchg
adc
call
out
jge
cmpsl
stc
insb
jmp
int
aam
mov
or
inc
adc
sub
loopne
daa
lahf
jmp
sub
xor
and
movsl
xor
add
jno
pop
loope
xchg
loopne
fiadds
mov
pop
jb
mov
push
and
mov
out
push
jb
inc
jmp
sbb
jl
loop
imul
push
test
fcmovbe
fxch
andl
scas
mov
fsub
jbe
dec
pop
popf
xchg
add
cwtl
ret
call
dec
in
int
pslld
rorl
popa
adc
jae
aam
adc
aam
pop
xor
adc
xor
and
and
ret
pop
jle
push
inc
mov
add
xchg
xchg
out
int3
xor
push
mov
cmpsl
insl
xchg
test
fisubs
lock
push
cmpl
je
inc
cmp
cmc
jge
mov
shll
and
fidivl
inc
insb
imul
dec
in
jecxz
sti
or
in
imul
pop
or
adc
inc
xchg
in
jle
mov
and
xchg
mov
add
cmpsb
sbb
adc
sbb
clc
fwait
inc
insl
mov
repnz
and
enter
addr16
arpl
mov
mov
nop
pop
xchg
pushf
icebp
push
pop
pop
sbb
rorb
pop
adc
xchg
aaa
jl
xchg
imul
repnz
lods
stos
or
jecxz
push
subl
adc
sub
mov
add
lods
xchg
icebp
cli
jb
loop
xchg
imul
ret
popa
or
mov
push
fidivl
scas
lret
mov
inc
call
and
mov
and
pop
xor
movsb
and
fcmovnb
mov
mov
dec
lock
negl
lret
cmp
xchg
nop
and
xchg
xor
cmp
lds
mov
scas
lods
jg
call
aas
cmpsb
lds
mov
or
adc
push
ja
fisttpl
inc
leave
cmp
sub
insb
repz
out
mov
jp
leave
hlt
lcall
jmp
outsb
lahf
jl
or
cmp
sub
adc
sbb
addr16
pop
or
stc
xchg
cmp
lahf
sahf
out
jne
pop
cmpsb
mov
mov
lock
or
xchg
sbb
test
sti
dec
xchg
mov
and
dec
dec
xchg
ficoms
inc
cltd
push
fnsave
scas
rcrl
inc
dec
call
pusha
ds
jle
call
insb
pop
in
addr16
cltd
or
mov
stos
jbe
in
pop
cld
pop
je
xchg
push
push
hlt
push
pop
cmp
outsl
pushf
cmp
add
pop
fdivs
rorl
fadds
jle
pop
repz
push
push
lods
mov
popf
gs
mov
mov
cmp
inc
sub
popf
xor
jae
mov
push
xchg
add
mov
push
loopne
or
jns
pop
dec
cmp
xchg
fadds
aad
xorl
cs
outsl
lea
or
mov
popa
jg
pop
test
pop
aaa
test
fdivr
js
popa
int
sti
rcrl
iret
scas
data16
or
popf
in
mov
mov
inc
sbb
inc
jle
ret
and
add
adc
ja
imul
das
and
js
int3
pop
ljmp
loope
mov
dec
hlt
nop
je
pusha
test
sub
push
dec
inc
jecxz
bound
mull
fisttpll
xor
sahf
jp
adc
adc
test
mov
dec
aam
mov
xor
pop
icebp
lds
sub
pop
push
aam
push
subl
inc
pop
lret
mov
pushf
push
pop
rcrb
lahf
mov
clc
inc
ret
push
mov
in
loope
into
xchg
int3
pop
lock
push
xlat
test
cmpsl
stc
mov
sarb
cmp
shll
icebp
jbe
adc
mov
mov
rorl
xor
mov
xchg
in
dec
mov
adc
sbb
cmpsb
cli
mov
popf
arpl
nop
xorb
test
dec
cmpsb
sahf
lock
add
mov
mov
lcall
cld
push
push
jmp
jp
cld
push
or
push
fs
or
outsl
xchg
mov
cmp
clc
sub
and
pop
xor
inc
adc
cltd
nop
push
jmp
mov
jmp
addr16
cmpsl
pusha
sbb
sbbb
push
lcall
and
gs
aad
mov
inc
inc
jle
je
push
call
fadds
arpl
add
mov
xchg
inc
in
push
xchg
cmp
sbb
lds
push
dec
sub
es
inc
xchg
push
lahf
movsb
push
pusha
jl
adc
or
mov
sbb
shll
mov
and
adc
jbe
bound
xor
push
dec
scas
push
fisttpl
and
ficoms
inc
and
repz
push
push
add
mov
test
and
cmp
iret
lock
adc
stos
xor
leave
out
jmp
lret
dec
or
pop
cmp
sahf
test
lods
rcrl
ficompl
stos
pushf
arpl
push
fisttps
jmp
cmp
mov
xchg
add
in
int
xor
adcb
lcall
sbb
mov
adc
daa
xchg
out
sbb
out
cs
sbb
orb
pop
push
icebp
cmpsl
or
fdiv
test
push
adc
out
enter
les
dec
xchg
sbb
rcl
sbb
sub
dec
popa
aas
xchg
mov
lock
lods
fs
jno
pop
mov
aad
mov
aam
loop
jge
push
stos
out
xchg
pop
push
jbe
hlt
push
dec
jle
xor
pop
push
gs
or
ljmp
inc
lock
sbb
outsb
pushf
sbb
sbb
aam
cmc
insb
and
xlat
or
cmp
cwtl
mov
add
popa
mov
outsb
jmp
xor
dec
xchg
mov
cmp
aas
stc
mov
aaa
dec
das
jnp
in
sbb
jecxz
mov
push
cmp
jnp
xlat
js
int3
pop
data16
movsb
push
lcall
adc
mov
aas
adc
lcall
and
sbb
push
sub
push
into
pop
outsl
push
lahf
cwtl
push
int3
mov
mov
dec
test
push
push
insb
in
cmp
inc
mov
lcall
arpl
pop
roll
dec
pop
cmp
inc
paddb
das
jge
lret
shl
sub
movsl
mov
pop
sbb
cmovg
and
xor
jno
push
jbe
dec
pop
loop
cmp
xor
mov
into
loopne
jb
xorl
std
fistps
pop
imull
push
call
sahf
xchg
mov
ds
cmp
imul
popf
bound
push
jno
xchg
divl
outsb
gs
inc
pop
and
int
shlb
cli
xor
loope
xor
cltd
xchg
stos
cmp
push
jnp
mov
out
pop
sub
pop
cld
fwait
stc
inc
orps
mov
ss
push
fs
xlat
sbbb
jnp
je
popf
insb
fisubrl
add
in
jmp
and
in
icebp
mov
lea
addr16
ljmp
jo
and
mov
cs
pop
int3
or
xchg
je
fsubp
sbb
cmc
push
push
dec
push
sbb
jo
lock
mov
mov
push
xchg
cmp
dec
fstl
jl
or
cltd
jle
sub
xchg
jbe
lock
xchg
dec
mov
dec
mov
jg
lods
test
mov
shlb
and
cmpsb
mov
lods
mov
add
lahf
out
push
xchg
adc
out
int3
mov
pop
xor
cld
std
jmp
outsl
dec
movsb
adc
repnz
cmp
loopne
sub
cmpsb
dec
sbb
fxch
cmc
sbb
in
dec
in
add
adc
mov
push
add
or
jae
in
jo
cmp
xlat
rcr
pusha
inc
jmp
pop
jns
push
in
push
pop
fdivrs
inc
dec
xchg
jo
jmp
mov
xor
and
js
lock
popf
mov
push
mov
pop
jno
and
push
loope
lret
out
jmp
mov
dec
leave
lret
ret
add
jecxz
lret
xor
mov
ss
cmc
push
arpl
xlat
pushf
jg
xor
insl
push
out
push
jo
and
dec
push
xchg
imul
or
jmp
clc
sbb
and
test
mulb
or
imul
push
dec
inc
pop
lret
mov
fs
fnstenv
push
pusha
or
es
aam
xchg
aam
insb
jb
test
mov
call
pop
jae
add
adc
push
jne
pop
mov
ficoml
add
ja
or
add
orl
aas
mov
test
aaa
jbe
dec
lods
inc
clc
inc
cmp
adc
lret
mov
xchg
mov
sub
rcll
nop
jbe
xchg
mov
jno
mov
rcll
mov
dec
dec
es
mov
nop
mov
cmp
or
dec
stc
sub
sti
test
gs
add
lret
and
cli
sbb
push
fiadds
adc
test
test
xor
insl
dec
and
sub
mov
sub
outsl
mov
xchg
jns
push
pop
cmpsb
pop
loope
mov
out
cmp
leave
xorb
dec
pop
sbb
push
out
inc
xchg
cmp
sti
jl
adc
mov
sahf
jae
les
add
push
lock
repnz
sub
insb
cwtl
shlb
ja
fcompl
gs
cmp
adc
or
add
arpl
outsb
aad
subb
jle
scas
data16
push
mov
cwtl
or
jae
andb
pop
xlat
jns
pop
scas
jno
in
add
imul
or
out
ja
sbb
int
addr16
cmpsb
cltd
or
sti
in
push
xchg
sbb
lret
mov
dec
xor
decl
mov
mov
ret
fdivr
mov
gs
loop
cmp
add
popa
rcl
stc
sbb
inc
std
sahf
mov
lods
inc
mov
hlt
iret
fimull
mov
insb
mov
cli
sbb
mov
notl
pop
dec
das
pushf
mov
testb
test
adc
sbb
xor
cmpsb
mov
mov
push
lcall
and
mov
mov
fsub
or
call
inc
xor
mov
inc
pusha
and
adc
push
lcall
pop
insb
xorl
rorl
inc
ljmp
enter
fmul
pop
mov
sub
dec
push
add
cmpsl
xchg
add
adc
sbb
sub
call
mov
mov
add
sahf
in
in
and
jp
pop
dec
popa
mov
pop
inc
push
jns
shlb
jg
into
scas
fimuls
xor
lods
je
stc
inc
enter
dec
mov
iret
cmp
or
je
inc
aaa
cmp
or
int3
cmp
xchg
out
jmp
push
lret
addb
sub
mov
aam
adc
cmp
std
cmp
mov
inc
cltd
mov
lds
mov
adc
filds
mov
lods
or
fwait
push
and
in
add
dec
or
push
inc
sub
dec
out
xchg
sub
jge
dec
pop
clc
int3
leave
or
ret
imul
push
jo
or
jbe
loope
cmp
push
loop
decl
fbstp
cmp
loop
cmc
xchg
hlt
sub
dec
testl
test
or
movsb
js,pn
ljmp
mov
lahf
popa
push
stos
or
or
dec
aam
push
lods
cwtl
adc
rcll
sub
mov
mov
adcb
data16
out
or
sarl
rcl
sub
fimuls
or
and
int
mov
jmp
mov
je
cmc
int3
mov
sub
xor
test
outsl
inc
je
ss
clc
dec
movsb
notl
stos
call
adc
dec
out
and
mov
sub
fldl
inc
or
mov
hlt
lret
int
or
cli
not
mov
sub
lock
int3
dec
sbb
xchg
loope
insl
dec
es
bound
inc
sub
popa
push
je
jle
mov
push
and
mov
mov
lea
pop
sarb
jno
mov
jle
or
mov
adc
in
add
lret
jo
add
or
dec
sub
add
fdivrl
faddl
subl
scas
push
addr16
mov
mov
ss
dec
xchg
inc
push
add
adc
mov
inc
fildl
add
cmpsl
outsb
daa
test
mov
or
imul
stc
adc
pusha
add
pop
clc
fsubs
cmp
sub
adc
movsb
jne
xchg
ss
mov
shll
sbb
addb
sbb
adc
lret
cmc
loop
loopne
aaa
nop
mov
jne
sahf
mov
jno
adc
ja
out
test
and
pop
pop
pop
jecxz
clc
mov
cmp
sub
xchg
mov
lret
iret
push
imul
das
insb
dec
xlat
xor
fdivrl
xor
dec
and
rclb
xor
mov
push
loop
xlat
or
cmp
into
mov
sbbl
fidivrl
mov
es
mov
test
outsl
imul
dec
popa
cmp
lret
cmp
clc
xor
push
popa
xchg
sbb
subl
dec
adc
mov
test
arpl
sahf
adc
mov
insl
aad
cmp
add
mov
outsb
fcmove
outsl
cli
in
mov
sbb
cmp
pop
shll
mov
adc
daa
xchg
loopne
cmc
mov
ds
mov
xchg
iret
call
add
mov
or
int
lock
movsl
xor
xchg
icebp
inc
out
sti
stc
dec
dec
cmpsl
into
lcall
sub
notb
sahf
punpckhbw
lret
cs
outsl
pop
aaa
test
cld
jnp
loop
and
mov
test
push
jo
sti
mov
xlat
into
pop
fcmovbe
lock
cmp
outsl
push
adc
pop
or
mov
rclb
mov
test
and
and
ss
dec
add
sub
orl
repz
decb
mov
dec
jl
std
cmpsl
xchg
outsb
fwait
int3
ss
dec
and
dec
cltd
ret
mov
mov
or
clc
shll
cmpsl
sub
cmp
xchg
jg
movsl
negl
lret
scas
es
inc
rcr
arpl
push
test
inc
inc
xchg
test
mov
lahf
push
pop
lods
lock
out
mov
mov
and
cmp
sbb
sbb
icebp
mov
mov
adc
xchg
fcmovb
icebp
out
jb
cmc
lcall
cwtl
mov
mov
cs
imul
out
leave
scas
xor
push
popa
pop
adc
sub
out
xchg
js
inc
fldt
loop
adc
stos
rolb
mov
pop
fstpt
sub
rcrb
cs
popa
out
xchg
out
sub
aaa
cmp
mov
push
repnz
pop
mov
lds
scas
pop
xor
out
and
adc
mov
test
les
xor
dec
test
pop
pushf
pop
mov
cmc
xor
sti
inc
int3
jmp
jp
mov
mov
dec
mov
xchg
sbb
push
in
inc
jecxz
aad
scas
jo
xchg
rclb
cmp
xor
fildll
or
dec
mov
push
xchg
adc
pop
inc
lret
jns
lds
cmp
inc
mov
imul
out
rcrb
pusha
cmc
cmpsb
popf
push
out
xor
jnp
dec
push
loop
mov
or
mov
flds
xor
mov
and
mov
mov
jecxz
es
inc
xchg
pop
add
mov
imul
js
inc
stc
cmp
sub
leave
bound
into
jnp
test
idivl
xchg
lret
arpl
mov
push
imul
xor
dec
test
lea
popa
scas
cwtl
in
lahf
lret
sub
mov
insl
ljmp
out
ficoms
xor
in
mov
mov
insl
flds
jmp
repnz
and
pop
addb
orb
sbb
inc
dec
fdivrl
jle
xlat
outsl
pusha
stos
inc
mov
push
fisubs
and
adc
rcl
test
xchg
negl
adc
push
sbb
loope
xchg
icebp
cmp
or
fstps
xor
popf
cwtl
sub
jae
fwait
subl
pop
inc
mov
out
lds
test
lret
sub
mov
pop
out
not
add
mov
mov
aaa
adc
add
int3
ja
mov
arpl
push
mov
shlb
into
xor
xor
sbb
ljmp
cmc
inc
ljmp
or
in
lock
inc
out
aas
mov
mov
adc
inc
lods
not
mov
ret
mov
mov
dec
movb
pop
stos
cs
cmp
sbb
jmp
leave
xchg
inc
cltd
mov
and
movsl
lds
in
push
out
mov
test
xor
mov
mov
lods
lock
inc
daa
sub
or
lods
jbe
mov
punpckhwd
and
cwtl
xor
adc
fbld
ret
data16
addr16
push
cmc
lcall
pop
adc
leave
fistps
nop
test
insl
lahf
bound
add
fsts
fistl
xor
add
mov
jge
fldenv
pop
jno
adc
orl
mov
jmp
in
test
sbb
jne
xchg
inc
sbb
adc
mov
es
repnz
or
lret
mov
mov
xlat
or
add
stos
in
rorl
inc
xor
lret
ret
imul
adc
je
sub
or
mov
fimull
mov
cmp
popa
sbb
movsl
je
jl
int
or
int3
mov
dec
test
inc
filds
std
repnz
sarb
inc
std
imul
sub
inc
int
sub
addl
rolb
inc
xor
add
je
loop
fcmove
xor
shll
push
fs
insl
inc
push
mov
lret
sbbl
mov
test
mov
pop
xchg
js
cmp
mov
pop
aam
lret
and
xor
or
xchg
inc
out
lea
mov
mov
outsb
or
in
xor
daa
and
sbb
mov
cmpsl
cmpsb
mov
js
mov
incb
jb
push
xchg
mov
dec
jns
inc
out
xchg
fsub
out
xchg
mov
cmp
dec
xchg
pop
sbb
cmpsl
leave
sbb
xor
cltd
ja
hlt
idivl
jecxz
in
cmp
add
arpl
inc
add
rolb
mov
icebp
adc
pop
call
stc
test
das
sub
iret
jb
pop
mov
add
mov
sub
iret
push
mov
jmp
icebp
pop
das
ss
stos
gs
andl
ds
aam
bnd
repz
cmpsb
cmpsb
and
or
movswl
idivb
cltd
lods
lods
push
scas
jl
enter
fldenv
shl
out
mov
push
mov
repnz
cmp
cwtl
xchg
pop
outsl
inc
add
lahf
lret
lods
sbb
dec
stos
in
cmp
mov
xor
lds
xchg
pop
inc
pop
and
mov
sub
inc
test
sbbb
jno
add
dec
in
outsl
test
mov
push
lcall
jb
add
sbb
xor
cmp
pop
mov
cmpsl
popf
imulb
inc
jl,pt
sbb
pop
jno
push
pop
xchg
inc
mov
mov
xor
and
ss
mov
dec
push
insl
cmp
loopne
daa
daa
xchg
pop
add
stos
mov
xchg
jno
sbb
add
sub
mov
movsb
fisttps
adc
xchg
mov
mov
shl
lea
add
addr16
scas
nop
je
mov
xor
mov
movsb
repnz
imul
add
jns
rclb
push
cmpsb
enter
xor
adc
xor
mov
or
cld
xchg
repnz
nop
sub
out
or
cltd
inc
addr16
sbbb
adc
sub
sbb
jo
dec
adc
ret
mov
repnz
or
cli
iret
jmp
iret
ret
out
mov
cmp
pop
xor
mov
inc
mov
mov
mov
mov
enter
cltd
or
sbb
push
bound
jmp
push
and
ljmp
js
push
sub
fisttpl
sarb
cmpsl
fisubrs
ret
pop
iret
xchg
push
xor
fcoms
daa
imul
mov
xchg
add
out
test
jne
loop
and
sub
sbb
shrl
cmc
mov
andl
adc
bound
xor
repnz
aad
je
mov
not
mov
mov
fnstcw
out
fistps
adc
adc
nop
push
cld
jg
push
inc
inc
cli
je
inc
mov
mov
repnz
mov
pop
daa
fmulp
inc
fsubr
xor
outsb
jecxz
enter
mov
adc
mov
pushl
jecxz
xchg
mov
xchg
add
pushf
lods
int3
jmp
imul
adc
lret
call
repz
or
negb
outsl
mov
push
rorb
scas
nop
push
or
adc
stos
int
pop
fidivs
cs
pop
mov
repnz
ss
loopne
or
shll
sbb
xor
sub
cli
fwait
inc
int3
xchg
push
add
dec
fwait
mov
fstps
or
xchg
xor
jg
mov
in
mov
jle
fcoms
les
jle
jns
adc
jne
mov
notb
inc
rorb
push
out
or
repnz
adc
jne
mov
dec
xchg
test
mov
pop
mov
jns
cli
test
sub
imulb
movsb
jns
xchg
rol
adc
les
inc
mov
and
lret
fildl
xchg
dec
pop
je
jmp
adc
mov
hlt
jb
jno
or
sub
inc
adc
push
cmpsb
xchg
stc
inc
pop
add
daa
in
sarb
pop
data16
push
cmpb
sbb
arpl
mov
mov
xor
jb
mov
dec
scas
push
insl
iret
cld
push
push
bound
rolb
insl
rcll
movsb
xchg
jg
mov
xchg
dec
mov
out
enter
sarl
je
or
mov
mov
cmc
cli
out
ret
inc
cmp
inc
xchg
sub
and
mov
xor
mov
and
xchg
fsub
push
push
jb
jb
lea
dec
mov
or
push
cli
repz
or
cmc
add
pop
jns
daa
mov
rorb
dec
cmp
push
xchg
jns
xchg
mov
sbbb
sti
fst
mov
xor
cli
fsubs
insl
les
mov
mov
imul
xchg
int3
sbb
arpl
sub
cmp
lret
outsl
imul
jb
sbb
jne
mov
mov
cmp
loope
nop
mov
movsl
jb
jl
mov
mov
mov
lahf
adc
dec
mov
sbb
in
jns
in
pop
lret
shlb
lods
push
sbb
or
jb
je
mov
imul
int3
xor
lret
iret
loop
add
aad
xor
inc
sub
test
les
mov
or
pop
imul
aam
aas
scas
sbb
dec
imul
lcall
pop
gs
cwtl
ja
sbb
dec
mov
jns
or
push
insb
mov
xchg
cwtl
scas
fmuls
xchg
pop
jmp
push
lret
mov
cmpl
mov
rorl
negl
jb
stos
sub
add
pop
add
jle
js
aas
mov
sarb
sub
or
adc
pop
pop
mov
sbb
cmpsl
or
inc
jo
mov
aam
nop
push
insb
fwait
mov
lea
mov
push
pop
pop
clc
dec
cmp
pop
movsb
pop
pushf
cmp
clc
pop
je
and
jb
adc
mov
xlat
mov
fst
fldenv
jecxz
ret
negb
in
out
pusha
loop
inc
shlb
sub
loop
or
mov
fidivl
xchg
mov
fdivrs
mov
out
mov
sub
js
les
sub
ja
and
xchg
leave
pop
push
push
data16
dec
hlt
adc
add
test
cmpsl
mov
pushl
ficoml
add
out
inc
lret
xchg
std
loopne
mov
pusha
inc
cli
pop
pop
mov
jg
inc
sar
adc
repnz
push
push
xor
xor
xchg
inc
inc
add
fs
insb
fucom
cs
jno
inc
inc
inc
inc
xor
sbb
test
xchg
in
test
lahf
sahf
ljmp
dec
jecxz
cld
mov
cld
and
sub
pop
xchg
pop
or
cltd
mov
push
push
nop
push
sti
cltd
cmpsb
jne
divl
fildl
mov
sub
jecxz
in
mov
arpl
js
inc
rorl
stos
and
dec
sbb
adc
fstpl
dec
add
loope
and
addb
jecxz
cwtl
out
or
insl
mov
dec
push
out
or
lret
adc
adc
es
aam
imul
mov
push
mov
mov
xchg
lock
enter
mov
bound
push
test
imul
iret
push
pop
divb
lea
lret
mov
stos
pop
sbb
adc
cwtl
mov
fistps
pop
adc
push
sbb
push
jo
jg
mov
lds
mov
out
sti
fldl2t
mov
sbbl
jnp
fadds
bound
lock
pop
add
xchg
dec
sub
outsl
aaa
in
add
and
in
das
cmp
ja
pusha
pop
mov
or
or
fs
push
fs
xchg
cmc
sub
call
rol
pop
andb
ljmp
out
fcomi
mov
fidivrl
sbb
nop
cmpsl
rorb
xchg
sarb
pop
test
sbb
popa
push
ss
mov
pop
mov
loope
insb
jecxz
jl
fimuls
lcall
inc
addr16
dec
cmp
sbb
push
xchg
addl
xchg
test
or
xchg
inc
pusha
mov
adc
xorl
pop
aas
es
push
push
cmp
inc
daa
nop
arpl
scas
inc
jl
jmp
movsb
push
mov
pop
clc
add
popa
dec
inc
pop
fldcw
push
sti
sbb
xor
jmp
dec
lahf
inc
mov
and
xchg
jae
mov
pop
std
out
jns
fs
cmp
fnstenv
iret
xchg
adc
fsubp
mov
sbb
cs
repz
cmc
in
sbbb
jns
xchg
cmp
out
adc
sbb
testl
pop
cmp
sbb
pop
mov
dec
mov
cmp
dec
mov
push
sahf
ja
cmp
das
push
add
cmp
test
jp
pop
fisttps
andb
clc
loop
ret
jbe
xlat
xchg
gs
mov
xor
dec
lods
rolb
inc
imul
sbb
sbb
inc
lret
mov
cld
mov
inc
stos
pop
push
inc
ffreep
loope
or
fs
in
jno
outsb
push
inc
push
fldcw
lret
cli
jno
or
rclb
je
pop
jle
cmp
sbbb
push
mov
stos
and
int
pop
lret
mov
inc
sahf
xor
xchg
adc
aam
cmp
mov
fstps
imul
ret
inc
outsl
and
aaa
adc
mov
mov
fistpll
flds
cmpsl
out
dec
lock
cmp
imull
push
xchg
jle
jg
insb
push
pop
or
inc
mov
lret
inc
js
mov
mov
mov
xchg
adc
fcoml
ret
cmp
push
xor
mov
and
push
jno
ljmp
movsl
mov
mov
divl
xor
les
push
add
cmpsb
inc
nop
test
jb
dec
loope
icebp
adc
inc
fwait
ret
out
dec
jb
dec
icebp
xlat
mov
jle
ljmp
fnsave
fwait
inc
and
ret
shrl
into
add
arpl
add
xor
jp
lret
insb
sbb
adc
test
mov
test
jg
cli
pop
insb
inc
adc
jnp
add
mov
ret
pop
or
inc
jno
mov
lret
daa
movsb
add
add
mov
das
xchg
mov
movsb
clc
mov
xlat
pop
dec
dec
mov
fsubrs
dec
call
stc
pop
cld
je
sbb
stc
ss
cmp
mov
and
jle
sbbb
push
adc
out
cld
sub
dec
mov
fwait
adc
scas
or
mov
sub
mov
adc
mov
add
jnp
movsl
mov
psadbw
js
popa
jle
inc
dec
xchg
lods
jl
imul
call
dec
jl
aam
xor
xchg
pop
mov
xchg
xor
pop
test
xchg
repz
xlat
lock
xor
sub
push
popf
or
sub
push
push
inc
or
dec
popa
pop
lret
fs
sahf
xchg
fwait
mov
roll
sub
imul
mov
popf
jecxz
sub
lahf
sbb
mov
int
lock
lock
jae
inc
jno
or
dec
jge
cmp
repnz
adc
int
mov
pushf
add
loope
jl
test
and
dec
cltd
out
push
test
cmpsb
push
addr16
mov
das
in
imul
testb
or
fs
ret
daa
stos
imul
xchg
in
fsts
clc
sbb
mov
push
pusha
rcl
jle
pop
fmul
divl
dec
ljmp
dec
mov
cmp
xchg
add
mov
and
adc
incb
das
sub
imul
out
ja
xor
roll
subb
sbb
push
les
fnstenv
mov
dec
inc
int
imulb
mov
jmp
sbb
out
es
pop
dec
out
std
jl
jp
fiadds
lods
xor
mov
xchg
xchg
std
dec
jnp
outsl
dec
fcom
add
xor
sub
nop
fimull
mov
sti
aam
cmp
inc
mov
sub
add
add
mov
push
cmp
sub
pop
add
jp
xchg
mov
daa
ljmp
les
sbb
popf
pop
rorb
fsubp
cmp
stos
add
rorb
imul
xor
adc
jle
mov
and
pushf
out
pop
sahf
sbb
cmpsb
or
xchg
scas
sub
dec
test
cmpsl
icebp
nop
popa
scas
mov
jno
push
push
jmp
fimuls
ljmp
sbb
jno
mov
mov
add
push
mov
and
fwait
arpl
jo
popf
lahf
in
scas
xlat
pop
test
adc
pop
adc
hlt
mov
mov
and
adc
sub
lcall
jg
fs
pop
scas
imul
mov
int
mov
shl
repz
ja
xchg
add
icebp
mov
push
or
or
jb
push
jle
push
cmp
xchg
and
adc
fwait
addl
test
lea
pushf
pop
addb
dec
ja
aaa
push
jne
xor
cs
pop
and
cmp
movsb
jmp
or
mov
sbb
push
or
iret
divb
movsl
dec
adc
inc
into
jb
dec
xlat
pop
sub
jns
mov
pop
pop
jns
fcom
pop
dec
out
cmpb
cmovno
decl
inc
sbb
sahf
sbb
xlat
mov
inc
dec
push
mov
mov
scas
dec
pop
arpl
dec
lret
jnp
sbb
sar
dec
int
setae
push
mov
sahf
cmp
jb
xchg
jbe
push
jnp
pop
inc
test
inc
aaa
lds
lcall
or
in
jp
sub
iret
or
sbb
dec
xor
pop
clc
lahf
es
sti
imull
or
sbb
adc
int
ret
pop
repz
and
test
fisttpll
push
mov
out
xchg
add
aas
int3
shr
mov
pop
addb
daa
push
sahf
ret
loop
loopne
cmp
sbb
mov
call
sti
push
mov
mov
aaa
mov
hlt
addr16
cmp
repz
jge
dec
jbe
dec
push
leave
ret
pop
cmp
xor
arpl
jp
repz
xchg
pop
pop
movsb
jb
imul
loopne
aam
cmc
sahf
insb
cmc
std
jmp
xor
lret
mov
mov
cmpsb
xchg
mov
leave
call
lea
cmpsb
adc
xor
rclb
sbb
out
nop
jl
mov
mov
xchg
add
jbe
push
je
idivl
lods
push
test
int
push
mov
push
loope
into
arpl
dec
add
enter
sbb
lahf
sub
cmp
inc
cmp
dec
add
loop
std
jno
in
nop
ret
rcrl
jb
hlt
jge
test
cli
std
stos
in
adc
dec
push
dec
add
xchg
mov
xlat
pop
jbe
pop
or
shll
push
xchg
or
call
or
xor
ret
cmovae
cmp
int3
mov
dec
sub
fisubs
stos
sar
pop
addr16
cvtps2pd
into
ror
jno
movsb
and
sub
pop
mov
mov
in
mull
clc
in
int
insl
ucomiss
in
add
dec
sarl
fcompl
or
mov
push
and
push
or
sbb
std
xlat
inc
lret
push
pop
jmp
das
inc
lcall
in
mov
je
sbb
aad
or
push
mov
ss
popl
addr16
and
cmp
xorl
aam
inc
mov
cmc
sub
mov
outsb
cmpsl
insl
cwtl
push
aas
fstp
add
lock
jecxz
mov
int
cmpsb
mov
adcb
stos
mov
sbb
test
push
add
test
movl
mov
out
mov
push
sarb
mov
mov
ss
fnstenv
jb
cltd
inc
cld
iret
test
push
jl
fs
push
xrelease
je
decl
sub
addr16
cmpsb
imul
xchg
cltd
mov
es
scas
cld
mov
pop
or
pop
ror
pusha
add
les
ret
pushf
movsl
inc
inc
mov
ss
add
mov
inc
cmc
cmp
cld
outsl
in
push
rcrb
loop
cli
loopne
sbb
xor
stos
insl
movsl
lret
testb
push
in
push
insl
pop
lcall
adc
inc
sbb
dec
inc
repnz
sbb
mov
outsl
sub
iret
bndldx
imul
lcall
push
cmp
test
dec
sub
mov
data16
repz
test
or
jmp
adc
xchg
shll
outsb
ficoms
mov
xchg
dec
or
imul
xchg
sbb
lcall
inc
loop
imul
lods
mov
push
in
outsb
sti
inc
jb,pn
or
or
push
adc
add
test
lods
aas
mov
push
insb
inc
push
cmp
imul
mov
cmpb
mov
adc
mov
jo
sub
cmp
daa
js
jl
sub
mov
popf
ss
insb
sub
and
adc
inc
xor
inc
int3
cmp
push
in
aad
jne
addr16
mov
add
dec
xlat
adc
and
jle
loop
movsl
and
inc
add
mov
push
mov
push
inc
orl
std
pop
subl
or
inc
lcall
inc
xor
fwait
out
inc
arpl
and
imul
ljmp
je
jne
rcrl
adc
or
jl
test
push
das
xchg
mov
addr16
loopne
push
pop
test
shl
mov
insb
shr
jp
popf
xchg
jmp
shrl
loopne
repnz
push
sub
xchg
mov
dec
pop
in
or
or
dec
fldenv
movsb
fstpl
aam
scas
xor
mov
push
mov
data16
lahf
in
incb
jae
aad
andb
dec
jmp
inc
add
cmpb
lret
imul
dec
lahf
sub
push
ret
ds
dec
cmpl
icebp
loopne
ds
jle
cli
mov
push
aam
dec
push
movsl
clc
bswap
out
mov
ss
mov
das
cmp
or
es
mov
fistl
pusha
test
dec
in
push
pop
mov
mov
mov
addb
sub
fsubrl
push
sub
aad
or
aas
fwait
sbbl
pop
xor
es
cmp
sbb
cmp
loopne
pop
mov
pop
push
mov
cmp
les
pop
scas
incl
xlat
sbbl
imul
mov
cli
outsl
int3
lods
xchg
movsl
cmpl
mov
out
stos
cmp
xor
aaa
mov
or
xor
mov
fnstenv
dec
sti
cli
sub
mov
pop
pusha
inc
mov
repz
addb
adc
sbb
sbb
or
negb
mov
and
mov
shlb
cmp
aas
xchg
sbb
and
mov
push
ja
sbb
push
xchg
bound
mov
std
stc
js
cmp
fsubrl
mov
call
or
jg
imul
into
or
jns
fnstenv
nop
icebp
and
and
ss
pop
in
pop
and
jne
mov
dec
daa
sub
dec
int
pop
fistpl
aad
dec
cmc
cwtl
sbb
bound
js
pop
pop
add
pop
cltd
jbe
inc
enter
xor
repnz
std
cmpsb
sti
out
jp
inc
stc
out
mov
mov
push
mov
xchg
mov
push
mov
xor
pop
push
sub
subb
push
dec
call
incl
mov
sub
sub
cwtl
mov
ja
insl
cmp
jo
sti
mov
test
ret
sub
xchg
pop
and
dec
and
in
cld
mov
leave
cmp
sahf
aam
test
mov
ret
mov
jb
not
mov
xchg
out
arpl
sbb
je
push
xor
pop
popa
lock
fucomi
scas
dec
popa
jle
mov
pusha
cli
push
ds
xlat
jns
scas
decl
mov
dec
and
imul
ret
loopne
mov
out
mov
popa
ljmp
repz
push
rcll
test
inc
mov
push
popf
pushf
fsubrl
cmp
insb
loopne
or
mov
aas
adc
ja
pop
add
mov
or
test
test
xchg
pop
jl
lea
lods
and
mov
mov
test
adcb
fmull
dec
and
jge
jo
loope
mov
imul
jle
or
push
lods
out
lahf
sbb
call
pop
int3
inc
xor
add
adc
std
das
jle
push
and
subl
test
call
mov
testl
or
ja
pop
loopne
out
fwait
addr16
mov
dec
shll
or
dec
and
insb
jnp
les
test
inc
stc
in
pop
jno
imull
test
les
jmp
inc
pop
gs
xchg
daa
insl
inc
fnstenv
xchg
cwtl
test
xchg
lods
mov
xchg
adc
ljmp
xchg
stc
mov
push
pop
ja
mov
ja
rcll
test
lock
xor
dec
imul
mov
rcll
fnstcw
pop
pop
push
mov
out
adc
bound
orb
lret
and
mov
adc
sbb
or
sbb
pushf
inc
mov
orb
lods
lods
out
movzbl
mov
jle
ss
mov
jle
inc
addl
pushf
sbb
les
scas
orl
inc
nop
add
sarl
mov
je
adc
je
mov
and
sbb
hlt
ret
les
outsl
xchg
nop
in
mov
or
int3
sbb
pop
sub
clc
fstpt
pusha
sarb
test
mov
outsb
jne
xor
or
outsl
sub
int
pop
lcall
ljmp
mov
fdiv
and
aam
in
in
inc
cmp
jle
bound
sub
sarb
or
nop
in
inc
out
js
jo
cmpsl
inc
call
xchg
dec
sbb
adc
fadds
loope
repnz
jmp
sbb
push
movsl
mov
adc
lods
mov
enter
pusha
xor
or
cld
or
xor
insl
push
jmp
mov
or
lds
daa
dec
pop
push
pop
add
xor
cmp
test
and
mov
xchg
nop
mov
cmp
pushf
push
sbb
sbb
dec
lea
jmp
js
cs
jno
mov
es
mov
cmp
mov
xor
pop
or
cld
mov
inc
lret
xchg
fcompl
pop
push
cmc
push
je
mov
push
lods
or
pop
push
test
adc
sub
lods
jmp
movsl
cli
push
out
mov
hlt
cltd
push
cwtl
ja
andl
push
adc
mov
cmp
push
pop
rolb
loop
xor
jnp
mov
dec
or
sbb
adc
scas
adc
cmpsb
scas
push
sbb
aaa
push
cmp
aas
adc
mov
data16
cmc
loopne
ds
push
subl
pop
inc
add
test
jns
xor
into
movsl
pop
xchg
leave
enter
pop
outsl
add
sti
jle
xchg
pop
cli
pushf
push
rorb
sbb
mov
aas
jle
xor
pop
dec
xchg
nop
push
bound
out
gs
addl
imul
imul
popf
les
cwtl
mov
mov
add
aas
push
jg
mov
fucomp
sbb
loope
sarl
leave
scas
jle
push
sarb
jg
scas
jae
orb
aam
pop
test
jmp
out
mov
cs
aam
arpl
std
rcrb
adcl
adc
js
scas
cli
aam
pop
lahf
or
jnp
dec
mov
jbe
sub
icebp
neg
daa
jno
hlt
and
mov
pop
pop
and
xorb
sbb
mov
das
jae
rcll
mov
lcall
xchg
adc
popf
xor
jmp
xor
in
dec
mov
rcl
ja
sbb
int
jnp
jnp
xor
xchg
sbbl
sbb
or
popl
out
repnz
inc
jbe
inc
popf
int
push
stos
mov
stc
cmp
subb
lods
pop
add
imul
stos
push
push
btc
lcall
cmp
sub
mulb
inc
and
aam
int
rcrb
cmp
xchg
es
dec
pop
add
ljmp
enter
nop
mov
and
add
or
pushf
cmp
xlat
add
das
dec
push
mov
fildll
adc
jns
icebp
neg
in
fstpt
cmp
scas
mov
add
sub
inc
xlat
pop
inc
adc
in
push
lock
fsubl
dec
mov
gs
mov
mov
inc
ret
sub
mov
xchg
jmp
push
sub
jge
adc
imul
je
push
roll
xor
cmp
and
leave
and
popa
jnp
cmp
pushf
mov
insb
pop
in
test
lcall
jae
jns
mov
mov
and
stos
nop
sahf
jb
aam
jb
xlat
in
mov
call
repnz
lret
xchg
cltd
mov
pop
test
ljmp
jnp
mov
icebp
repz
ss
inc
add
xchg
xchg
test
imul
jne
inc
std
sbb
inc
test
mov
js
or
jcxz
fimull
out
add
cmpsl
cmpl
push
mov
fcmovnb
fidivrl
push
mov
clc
mov
push
clc
pusha
test
ja
inc
jle
hlt
inc
push
xchg
ljmp
in
push
test
push
mov
bound
adc
iret
lods
cmp
fsts
mov
dec
adc
daa
dec
cli
and
shlb
punpckhbw
xor
add
mov
aad
stc
je
cmc
clc
pop
push
dec
mov
push
or
inc
imul
mov
repnz
or
or
jbe
adc
cmpsb
xchg
aas
pop
out
mov
and
xchg
ljmp
jbe
push
push
mov
jp
and
mov
adc
sub
mov
jbe
mov
pop
adc
fistl
mov
add
mov
nop
lods
pushf
aas
repz
shlb
mov
imul
sbb
scas
xor
fsubl
push
loop
mov
mov
jl
jns
inc
jl
lods
mov
xor
shl
in
es
mov
mov
push
mov
repnz
or
or
adc
pop
xor
sub
fs
dec
mov
add
mov
mov
in
jnp
rorl
test
stc
dec
out
mov
orl
scas
sub
pop
fstl
adc
aad
mov
pushf
xchg
pop
mov
adc
mov
mov
sarb
and
mov
or
or
lret
add
leave
into
and
les
jnp
int3
mov
add
ret
lahf
xor
pop
and
test
mov
aam
icebp
pop
imul
popf
inc
test
add
adc
cmp
imul
sub
cs
mov
pop
mov
adc
movsb
out
jno
push
loope
mov
mov
adc
push
xlat
in
cmp
fcomi
out
xchg
call
jg
push
enter
in
shrl
lahf
out
repz
test
adc
into
and
mov
inc
fildll
movq
sbb
imulb
xor
xchg
into
push
jo
pop
cmp
stos
fidivrs
rolb
lret
lret
pop
es
ret
pop
popa
ss
sbb
rclb
sbb
outsb
fdivs
bound
xor
clc
mov
pop
cmp
or
imul
arpl
pop
insb
sbb
mov
or
outsl
in
jp
sub
lahf
inc
inc
or
jne
dec
xchg
gs
sub
and
stos
sahf
mov
fnsave
insb
add
subl
inc
loope
in
cmp
xchg
xchg
mov
xor
iret
notl
lock
fwait
dec
xor
mov
pop
pop
sti
cltd
pop
fmuls
xor
sahf
stos
sbb
or
ja
xorl
mov
popf
in
dec
lret
mov
mov
jne
mov
and
rorb
dec
mov
fidivs
lret
cmp
gs
lret
cmp
rorl
mov
xchg
cltd
jcxz
fstpl
mov
or
xchg
imul
fadd
mov
xchg
mov
fidivl
and
loop
into
call
jns
xlat
mov
mov
add
push
mov
and
dec
leave
jle
dec
jecxz
mov
inc
add
push
cli
in
xlat
adc
xchg
or
lock
mov
xlat
jge
add
inc
je
cld
fwait
mov
fistl
push
lahf
mov
pop
xor
dec
mov
lods
xchg
jbe,pn
add
sub
jecxz
lret
dec
les
cmc
ss
mov
pop
mov
loop
jbe
sub
les
mov
push
into
xchg
movsl
int
pop
out
js
mov
inc
mov
aaa
rcrb
inc
outsl
xchg
sbb
test
repnz
int
fmuls
dec
ljmp
or
sarl
inc
je
out
jns
cmp
mov
sbb
xchg
sub
pop
scas
inc
jo
rolb
inc
movsl
out
cmp
clc
sahf
popa
fildll
xchg
push
loop
cs
mov
insb
xor
call
jne
push
call
and
ficompl
outsl
jne
cmp
add
mov
out
sub
mov
in
fwait
push
je
rclb
push
pop
rcrl
and
es
mov
mov
in
xchg
xchg
fisttpll
add
mov
in
mov
add
xor
sbbb
cmp
pop
ja
movsb
adc
jecxz
rcrl
cmp
and
pop
ljmp
addr16
or
mov
repnz
jecxz
xor
cmpsb
lret
sbb
xchg
ss
fbstp
lret
cmp
mov
mov
inc
xchg
or
mov
scas
mov
sbb
inc
ljmp
lahf
imul
pop
xor
out
jbe
jno
mov
add
inc
lds
fisttps
clc
jmp
call
adc
add
stos
fiadds
dec
fsubrl
shl
pushf
xchg
popf
fsubl
sub
stos
inc
in
fistps
inc
dec
in
pop
and
push
repnz
inc
add
xor
mov
mov
adc
push
ffree
cmpsb
inc
addr16
pop
xlat
movsl
hlt
lock
pop
out
or
ret
shl
aas
jecxz
lea
inc
loopne
cmp
adc
or
xor
sti
or
stos
mov
iret
xchg
subb
adc
gs
sbb
xchg
and
repz
xlat
or
cmp
jne
lcall
sar
nop
pusha
cmpsl
sub
fiadds
cmp
popa
clc
es
cmp
xchg
pop
popa
push
cli
fsts
xchg
inc
test
push
mov
push
dec
xchg
sub
notl
mov
rcrl
or
lcall
cmpb
xchg
and
fstpl
mov
divl
mov
jmp
loop
call
xor
cmp
cmp
lock
sub
mov
sub
call
sub
in
add
loop
push
int
cltd
int
andl
fnstenv
mov
mov
pop
imul
xor
lods
mov
movsl
cmp
jne
popf
mov
idiv
loope
sub
jg
aaa
ss
inc
movsb
fsubrl
dec
sti
mov
popa
xchg
mov
daa
xor
xchg
inc
out
sbb
mov
icebp
adc
addr16
sbb
fcoms
dec
out
and
in
nop
dec
jg
outsb
mov
dec
jg
xchg
cmc
or
push
stos
mov
xor
or
mov
sbb
push
jg
push
aaa
or
or
popa
and
stos
jl
lds
sbb
or
push
loop
or
jne
les
popa
notb
or
or
nop
lret
shrl
sub
jbe
sti
mov
mov
mov
adc
cld
stos
inc
orl
in
je
cld
loope
jle
pop
pop
push
stos
xchg
in
xbegin
pop
addb
cmp
jmp
movsb
or
xchg
pop
and
mov
add
ret
dec
mov
jecxz
stos
das
jno
scas
outsl
clc
data16
test
jae
push
inc
incb
aad
inc
inc
jp
outsb
notb
jmp
mov
xchg
jg
push
mov
xor
mov
sub
adc
imul
aam
pop
inc
not
loop
pop
pop
shlb
sbb
push
jmp
in
es
xlat
stos
mov
cmp
je
dec
sbb
dec
adc
insl
and
iret
sbb
push
rcl
repnz
out
or
cmp
or
jp
fdivrp
xchg
and
dec
or
mov
fcoms
dec
or
mov
shlb
in
test
cmp
and
jg
jno
repnz
push
addr16
into
fwait
cld
dec
cs
mov
push
jmp
jno
jns
aas
push
pop
mov
aad
cmp
jl
sbb
or
aad
pop
mov
js
loop
sbb
ss
dec
leave
jnp
mov
cmp
inc
imul
xorb
pop
ret
mov
xchg
and
jb
sbb
cmp
ja
mov
outsl
and
je
pop
sub
adc
jmp
stos
loopne
jbe
enter
ja
or
ret
push
inc
jns
bound
jecxz
sti
ret
cmc
out
fcmovbe
xor
lahf
mov
push
sub
jge
adc
sub
dec
or
cmp
or
lea
sub
lock
cmpl
das
test
cmp
adc
fidivrl
ret
ja
call
negb
cmp
aam
popf
push
jo
sbb
adcw
push
fists
sti
lds
mov
dec
sar
sbb
inc
mov
mov
stos
add
sbb
ja
out
add
ja
jg
jecxz
or
sub
cmp
push
mov
cmpsl
inc
mov
xlat
push
sbb
test
cli
sub
loope
jno
cli
jno
push
mov
mov
das
or
mov
cmp
mov
sub
in
sub
leave
insb
pop
ds
test
jns
dec
jno
mov
lea
dec
iret
add
mov
fst
push
jmp
push
sbb
mov
lods
les
pop
push
daa
stos
out
je
cmp
pop
dec
mull
jle,pn
add
sbb
sub
clc
xor
push
sbb
inc
negb
loopne
rcl
jge
adc
jmp
sub
fdivr
out
leave
inc
and
setg
jecxz
adc
rorb
xor
aas
mov
adc
or
mov
jmp
mov
jecxz
jno
lock
test
cli
outsb
inc
xchg
out
fadds
js
hlt
pop
push
xor
inc
cmp
and
sub
mov
mov
inc
stos
test
out
leave
stos
mov
push
hlt
insb
popf
sub
sub
mov
jns
lods
repz
mov
rolb
repnz
mov
in
push
adc
mov
imul
and
pop
ret
or
pop
add
sbb
xor
dec
sbb
addr16
ficoml
mov
inc
add
mov
mov
lea
sbb
pop
xor
and
shrl
sbb
gs
mov
scas
test
icebp
outsb
sbb
sbb
sub
lret
test
and
mov
rcl
push
pop
ja
fimull
jbe
in
sahf
cmp
xor
cltd
fcoms
sbb
lea
or
and
in
or
mov
shlb
gs
cmp
lods
aad
mov
dec
ret
jae
dec
push
adc
xlat
cmpsl
out
int3
xor
ja
in
dec
std
popa
in
jge
xlat
jle
mov
xchg
ret
push
mov
cltd
insl
arpl
fsts
int3
sub
adc
pop
ss
xor
cli
out
and
sub
aas
aaa
fcoml
mov
incb
mov
addr16
sbb
or
scas
xor
roll
call
sar
ja
enter
push
addb
and
aas
ja
adc
xlat
mov
pop
cmp
scas
int3
pop
loopne
cs
pop
sub
xchg
mov
pop
sbb
sar
jg
insl
fiadds
push
sbb
pushf
arpl
mov
push
sti
rclb
cwtl
movsb
in
mov
scas
push
hlt
mov
jg
adc
jbe
mov
xlat
cld
jae
out
cmpsb
testb
and
pop
mov
fildll
mov
fisubrl
adc
adc
dec
sub
hlt
js
adc
lds
mov
sub
adc
dec
adc
movsb
jle
xor
pop
sahf
cmp
cwtl
push
pop
mov
lock
cwtl
fs
and
dec
push
push
imul
pop
push
xchg
mov
cld
xchg
cmp
fdivp
add
mov
loop
sti
cmp
jl
and
imull
call
adcb
lcall
fsubs
bound
out
loop
repnz
dec
sbb
or
push
stos
shrl
add
mov
mov
stos
adc
add
cmp
push
cmp
cltd
lods
push
movsl
jae
fdivrl
shll
pop
ds
das
adc
mov
push
iret
outsb
pop
xchg
je
jno
stos
xchg
ds
jge
repnz
mov
cmp
test
sub
sahf
lea
std
lret
divb
imul
test
pusha
rolb
fiaddl
xorb
lret
fdivrl
cmp
fldt
test
lods
ficompl
adc
jl
mov
rol
sbb
popa
inc
imul
and
cltd
xchg
lret
mov
adc
cmp
mov
les
les
adc
push
pop
outsb
or
add
push
jg
mov
xchg
xchg
add
cmc
xchg
cmp
mov
adc
out
dec
pop
cmp
jo
jmp
pop
arpl
stos
sahf
sbb
jmp
push
pop
andb
xor
enter
scas
cs
push
xchg
scas
xchg
out
sti
xor
inc
mov
imul
cld
add
je
xchg
dec
or
push
leave
mov
inc
mov
inc
aad
pop
cmp
pmulhw
gs
repz
mov
inc
and
in
mov
or
mov
add
or
fildll
xchg
aas
lea
sbb
imull
cmp
jle
sbb
pushf
sub
xor
cmpl
and
jns
inc
fisttps
andl
out
shll
add
ret
inc
test
es
lahf
fcomps
adc
push
mov
loopne,pt
and
xlat
jne
xchg
imul
xchg
rcrl
in
loop
ror
cmp
xchg
les
sbb
cmpsb
test
lds
cmc
push
pusha
sbb
jmp
ficoms
xlat
mov
mov
rclb
pop
push
push
pop
sbb
imul
jl
ret
ss
push
jnp
mov
orl
sub
fwait
sub
and
lret
adc
ffree
mov
lds
add
loope
imul
xchg
pop
mov
loop
aam
mov
mov
push
iret
mov
ret
cltd
sub
das
mov
cmpb
push
mov
cmp
fistps
jo
mov
inc
xchg
push
stc
push
push
cwtl
xchg
mov
insb
lods
je
cs
into
les
cmp
or
push
inc
mov
jecxz
jle
je
jmp
fcompl
lods
push
ret
daa
inc
sbb
sub
push
push
in
lcall
incl
out
ljmp
enter
lock
popf
dec
lods
out
inc
ficoml
out
sbb
dec
stos
dec
fistl
dec
lahf
adc
iret
dec
cwtl
push
or
inc
push
sub
imul
mov
jg
mov
gs
int
sbb
xor
aaa
shrb
jnp,pn
es
add
mov
cmpsl
pop
xchg
xor
sahf
xchg
inc
lret
dec
and
mov
and
mov
pop
dec
ret
jns
and
add
sbb
cltd
xor
mov
daa
out
sbbb
mov
cs
mov
add
lea
push
scas
and
aam
std
cmp
add
xchg
and
sbb
fbld
mov
stos
push
inc
popa
and
dec
cmpsb
pop
das
negl
cmp
loop
mov
icebp
mov
mov
shl
inc
repnz
mov
nop
jo
bnd
push
sbb
add
xchg
sub
cli
push
and
mov
andb
xlat
cmp
sub
test
pop
mov
jle
push
stos
jmp
stc
les
mov
xor
inc
cmp
lret
cltd
mov
stos
in
loop
in
jp
jmp
cmp
cld
sbb
scas
sbb
mov
das
jno
ret
xchg
cmpsb
pop
add
and
int
mov
vhsubpd
popf
fwait
and
arpl
push
inc
fistpl
test
lods
ja
mov
nop
dec
iret
push
outsl
cmp
lods
in
and
or
xor
jmp
fdivrl
inc
lods
adc
mov
cmpsl
std
jle
cmp
xor
mov
add
mov
flds
fisubl
lret
aas
les
gs
xor
mov
xchg
lret
pop
lods
mov
aas
pop
dec
insl
iret
add
jb
dec
das
ja
scas
imul
lods
sbb
sub
sbb
push
pop
mov
bound
push
orb
pop
mov
arpl
push
pop
ret
and
lods
push
popf
arpl
add
push
cmp
lret
clc
lock
mov
lds
je
jbe
loopne
inc
data16
cmp
cwtl
cld
mov
cmpsb
xor
xorl
insb
cmp
xor
xor
mov
divl
outsb
jo
loop
ljmp
cmc
mov
dec
jg
fwait
xor
mov
insb
insl
lcall
dec
mov
popl
push
popa
xlat
sub
xchg
out
add
dec
jnp
sub
pop
in
mov
sbb
addr16
pusha
in
mov
movsb
jmp
and
in
ss
mov
and
and
xchg
push
push
xchg
mov
add
jns
js
add
jns
pop
xchg
jae,pt
aaa
xorb
xor
adc
inc
dec
add
les
scas
xor
mov
adc
repz
cmc
push
movsl
mov
scas
inc
sub
lock
cwtl
jnp
add
lods
test
adc
inc
lret
push
dec
dec
cmp
pop
xor
mov
rolb
xchg
pop
xchg
pop
mov
ljmp
stc
sbb
mov
xchg
xchg
xchg
xor
ja
xlat
xchg
icebp
lcall
sahf
leave
lret
call
mov
and
xor
mov
add
jle
mov
sbb
hlt
mov
inc
outsb
das
jmp
mov
repz
mov
pop
ss
sub
pmuludq
pop
sbbb
leave
sub
aaa
je
and
mov
sub
mov
jbe
cmpl
lret
ds
xor
push
cmp
xchg
pop
mov
lcall
sbb
sbb
sbb
lea
in
push
fnsave
mulb
clc
push
adc
mov
fwait
inc
fdivrp
mov
inc
cs
insl
ds
cmp
mov
xlat
lock
int3
and
add
push
xchg
jle
aaa
push
fisttpl
inc
cli
inc
repnz
ret
jae
cwtl
imul
movsb
push
repnz
xlat
cmp
int3
je
push
add
loop
fs
xor
js
enter
sbb
mov
push
das
sbb
lods
outsb
xorl
ret
push
push
aad
cmp
cwtl
push
cmp
mov
inc
pop
mov
shlb
add
pop
inc
dec
loopne
or
movsl
dec
push
push
ja
scas
dec
cmp
mov
loope
add
or
or
jo
jb
cmpb
push
xchg
movsl
mov
sbb
in
outsl
clc
pop
push
adc
fnstcw
pop
mov
mov
movsb
and
jmp
mov
mov
fstps
data16
inc
xor
mov
sub
popf
iret
or
cli
sub
ljmp
pop
lds
pop
andb
push
stc
imul
xor
inc
sub
cmpsl
mov
repnz
loopne
push
cltd
sbb
pop
adc
stos
flds
jns
sub
push
pop
cmp
ss
negb
ficompl
shll
icebp
jae
push
fcompl
or
or
addr16
ljmp
ja
aas
dec
outsb
outsb
jns,pn
jne
cmp
fsts
subb
inc
arpl
inc
popa
adc
pop
or
or
nop
rol
inc
out
loop
pushf
insl
xlat
clc
stos
data16
mov
repnz
ror
pop
cli
mov
or
shr
inc
mov
sarb
pop
ret
add
xchg
push
arpl
aaa
aaa
shl
cmp
xchg
in
mov
ds
sub
cmp
and
pop
pop
gs
inc
leave
out
cld
add
sar
xchg
pop
rcrb
aam
adc
call
lcall
xor
mov
inc
nop
mov
mov
and
fsubrl
lea
or
in
fildl
mov
cmpsl
inc
jg
push
lods
js
cmc
lcall
add
jg
movsb
repz
movsl
dec
test
or
dec
repnz
jge
dec
sub
iret
push
nop
ljmp
pushf
sbb
fsub
gs
stos
jmp
pop
and
mov
pusha
xchg
or
mov
cmpsb
push
ljmp
mov
mov
in
in
xlat
pop
xchg
or
push
daa
inc
bound
mov
pushf
jo
or
adc
lret
fbld
mov
scas
jns
outsb
mov
xsaveopt
xchg
scas
push
das
xorl
mov
mov
cs
xor
fwait
divb
frstor
pop
subl
pop
pusha
dec
sbb
jbe
dec
jge
sub
stc
mov
hlt
imul
push
les
add
pushf
mov
push
enter
sub
cmpsl
mov
lods
sub
aad
mov
sti
xor
mov
fcomp
cmp
sbb
inc
xchg
leave
mov
add
lahf
and
xor
fists
orl
pop
cmp
out
jp
scas
das
ljmp
mov
push
into
movsl
mov
xchg
imul
inc
cmp
push
xchg
arpl
out
mov
sbbl
add
fcoms
mov
sahf
dec
sbbb
into
movsb
jno
in
or
cmp
add
es
jnp
test
mov
inc
mov
loop
jae
mov
mov
faddp
mov
cmp
mov
es
inc
ljmp
push
pop
vpsubsb
xchg
adc
mov
ds
stos
xor
adcb
pop
jmp
sarb
adc
xchg
lea
pop
dec
std
gs
in
inc
jg
mov
dec
pop
sarl
ljmp
and
insb
inc
mov
fdivrl
mov
lods
push
mov
jns
push
jmp
fwait
movsb
test
xchg
cmp
aaa
loop
decb
dec
push
push
dec
jnp
addr16
mov
pop
test
push
in
sbb
loopne
xchg
push
adc
ss
cmpsb
fsubr
loopne
icebp
or
repz
sti
and
pop
mov
cs
adc
fdivs
cwtl
test
mov
mov
jg
lock
pop
in
subl
arpl
sub
nop
jns
mov
popf
les
xchg
repnz
loope
mov
push
fcmovnu
cmp
stc
dec
sub
hlt
sub
lds
addb
pause
lods
sub
adc
iret
pusha
jp
hlt
adc
ret
mov
std
pushf
test
jp
lock
push
aad
pop
pop
ficompl
aaa
jb
jnp
js
mov
cmpsb
inc
pusha
dec
cwtl
mov
lahf
and
cmp
push
and
push
jne
sub
into
cli
fcoms
and
movsl
js
gs
fsub
imul
inc
jae
mov
push
push
adc
xchg
add
cmp
jmp
or
mov
imul
pop
ret
ret
in
add
inc
mov
sub
adc
call
xchg
jl
js
sbbb
daa
jae
mov
inc
imul
popf
ret
sti
inc
push
pusha
shll
mov
je
stos
das
jmp
nop
inc
cltd
in
pop
inc
sbb
aaa
push
cmpsl
loope
stos
nop
div
insl
push
pop
mov
mov
xor
mov
adcb
sub
cli
adc
push
jae
outsl
push
cld
pushl
push
ret
push
cwtl
jle
stos
sbb
insl
lcall
cmp
xor
push
jb
pop
icebp
cltd
gs
sub
movb
mov
inc
jmp
sbb
xor
popa
sbb
push
rol
pop
jmp
cmc
test
mov
das
mov
dec
adc
insb
adc
sbb
popf
and
mov
jo
shrb
test
mov
xchg
enter
xor
iret
add
fisttpll
mov
cmp
push
mov
jne
dec
in
xchg
repz
aas
pusha
notl
enter
sub
mov
ret
add
push
jmp
or
or
jo
add
sar
aad
popf
sti
repnz
push
ret
pop
cwtl
adc
notl
mov
cmp
push
jg
in
mov
cmp
lcall
xor
jns
leave
rorb
xchg
lea
and
cmpsl
jge
push
testb
mov
fs
push
ljmp
out
inc
inc
xchg
xorl
xchg
das
sti
pusha
int
adc
mov
cli
xor
mov
mov
and
ljmp
loop
outsb
adc
in
cli
fs
pusha
cmp
dec
scas
imul
out
scas
jle
jb
imul
rorb
xchg
push
or
aas
mulb
pop
jbe
dec
and
or
mov
js
push
xchg
cmp
pop
jno
cmp
mov
fstp
hlt
mov
movb
ljmp
mov
pop
out
xchg
in
mov
or
add
jecxz
aaa
sbb
in
cli
addr16
or
hlt
push
mov
test
mov
loop
dec
popa
xchg
mov
ss
in
adc
scas
int3
or
push
jne
aas
sahf
mov
push
jae
mov
fidivl
ficompl
repnz
icebp
inc
jmp
and
loopne
int
sahf
stc
fldz
lods
inc
lret
std
and
sub
in
fcmovu
fisubrs
mov
cwtl
bound
or
dec
clc
cmp
jmp
pop
sbbb
fdivs
repnz
mov
ljmp
rorb
insl
lds
xchg
xchg
daa
clc
xor
aas
cmp
mov
ja,pn
lds
ret
call
pop
data16
in
jno
jg
mov
push
in
add
and
sub
adc
or
pop
jg
das
outsl
rorb
dec
jle
sub
pushf
sub
xchg
test
mov
shlb
rclb
ja
pop
cmp
xchg
je
pop
cmc
xor
xchg
rcr
lret
add
stos
or
pop
daa
adc
testb
adc
jbe
mov
repz
sbb
or
xchg
es
cmp
lods
add
add
or
inc
icebp
push
jbe
mov
ds
push
daa
lods
into
xchg
xacquire
and
or
ljmp
xchg
xor
and
mov
inc
adc
xchg
add
icebp
inc
jae
data16
xchg
mov
notb
sar
ljmp
cmp
or
add
mov
arpl
mov
jecxz
mov
mov
sub
add
fdivl
out
ss
xor
popf
xor
xchg
in
mov
lcall
mov
push
adc
dec
mov
and
cmp
cmpsl
nop
icebp
int
cmp
in
mov
push
loopne
icebp
or
pop
xchg
add
fmull
push
fsubrl
in
pop
mov
out
enter
iret
inc
and
ja
in
repz
or
dec
inc
push
cmp
and
push
jns
imul
arpl
xchg
in
inc
mov
popa
xchg
mov
jg
icebp
mov
xchg
add
test
dec
rclb
adc
movsb
rolb
iret
cmpsb
icebp
jnp
fs
icebp
push
lret
dec
push
std
adc
pop
cmpsl
lods
cwtl
out
orl
mov
imul
rdmsr
imul
mov
push
mov
test
lret
push
adcl
jnp
add
pop
stos
push
outsb
ret
repz
adc
in
test
ret
cmp
sub
sub
adc
cvtdq2ps
mov
insb
or
jmp
outsl
int3
cvttps2pi
sbb
jne
icebp
rolb
jb
dec
test
adc
insb
cmp
xor
xor
addr16
dec
dec
aas
aam
fisubrs
test
fimull
mov
jg
lods
pop
push
pop
scas
and
clc
loop
mov
test
push
into
pop
xchg
sbb
mov
jg
and
scas
jmp
ret
push
aaa
cmp
lret
mov
lret
shlb
aaa
int
or
sub
inc
push
jne
sub
mov
pop
mov
add
inc
int
pushf
pop
xchg
push
push
lcall
add
adc
aaa
inc
aas
pop
repnz
pop
in
mov
mov
pop
stos
xor
or
popa
dec
jae
outsl
inc
movsl
cmpb
mov
mov
popf
shr
push
jnp
out
inc
pop
lock
pop
in
sahf
dec
or
aas
push
cmp
divl
ss
sub
jno
and
sub
leave
inc
mov
int
dec
pop
mov
mov
mov
dec
add
pop
addr16
mov
orl
les
ja
icebp
mov
ja
fists
push
add
mov
sub
fsubrl
sbb
fsubrs
pop
pop
data16
jmp
mov
rorb
shl
scas
inc
pop
or
lcall
movsb
cld
sbb
mov
mov
ja,pn
sbb
cmc
mov
pop
and
mov
popa
call
cwtl
mov
inc
mov
pop
cltd
pop
push
pop
mov
mov
add
push
dec
mov
xchg
lcall
inc
ljmp
int3
mov
jb
xor
repnz
jae
imul
push
shl
pop
sti
out
pop
and
rcrb
xchg
adc
sub
xchg
xor
cmpsb
outsl
sub
pop
in
and
out
mov
mov
fwait
loop
mov
sub
call
mov
add
xor
dec
orl
adc
push
xlat
movsl
push
bound
sub
adc
lret
ljmp
sti
xlat
cmp
push
pusha
cmp
das
inc
add
out
insl
or
xlat
idiv
pusha
out
sbb
dec
shrl
cmc
pop
testb
jo
cli
fs
push
jp
mov
dec
add
sahf
cmp
shrb
jge
cmp
cli
shrb
cmpsl
aam
loope
mov
test
mov
bndstx
add
adc
add
frstor
ror
dec
out
aaa
shll
mov
insb
pop
push
cmp
fcomp
ljmp
in
cmp
inc
mov
fbstp
jmp
xchg
in
imul
outsb
es
push
push
adc
mov
mov
into
movsl
jne
jno
aaa
cld
push
loop
dec
xchg
ret
insl
test
mov
jno
mov
fmulp
sbb
ret
imul
dec
fcompl
inc
sub
pusha
mov
mov
jbe
cld
aas
sbb
lcall
adc
fisubs
add
inc
pop
inc
dec
aaa
ds
orl
push
xchg
sbb
data16
aas
push
or
inc
mov
pop
mov
lock
scas
ret
mov
std
sub
sub
jecxz
fldenv
push
mov
popf
aaa
outsl
add
lods
cld
and
dec
fiaddl
out
aas
mov
mov
or
push
jp
or
scas
push
push
fnstcw
sub
pushf
sti
in
add
mov
out
add
rcrb
ja
mov
add
jl
push
add
jle
mull
jmp
mov
inc
movsb
jecxz
shlb
out
mov
insl
jg
xlat
outsl
mov
fdivs
daa
add
ret
jge
out
cmp
xor
sbb
sbb
fiaddl
out
push
ja
sub
test
mov
adc
out
sbb
dec
in
sbb
or
or
or
repnz
and
fs
dec
mov
das
repz
mov
cmp
mov
pushf
shrl
mov
es
jno
mov
push
mov
std
scas
sbb
inc
in
mov
or
adc
push
ss
fdiv
push
js
fiaddl
jp
pusha
jbe
and
aas
dec
mov
repnz
sbb
push
jnp
in
js
pop
pusha
ja
cmp
addr16
lock
xor
and
jae
jmp
xor
daa
icebp
ljmp
ljmp
jmp
sahf
mov
mov
outsl
sbb
sub
mov
xsaves
mov
das
push
push
ds
les
scas
stc
and
aas
mov
adc
mov
fadd
adc
cmpsb
push
cmp
mov
xlat
add
loop
shrb
lret
sbb
shl
hlt
xor
fiadds
in
js
cmpsl
and
cmpsb
mov
inc
lock
int
in
pop
fcomps
xor
out
mov
pop
sub
xchg
jl
xchg
lds
enter
pop
int
xchg
sti
movsl
or
loopne
jmp
fcomi
push
outsl
enter
inc
add
lds
sub
adc
vunpckhps
add
je
lret
fcom
leave
aas
mov
call
imul
insl
add
iret
call
ret
pusha
stos
dec
pop
mov
xchg
cli
inc
mov
lods
lds
arpl
push
push
es
addb
push
jl
in
pop
pop
aad
aaa
sbb
mov
inc
mov
sub
lret
leave
cmp
xor
sub
mov
add
and
jno
jne
jns
fbstp
adc
addr16
add
xchg
addl
pop
xchg
aad
sub
loope
lahf
push
xor
fbld
mov
and
shrb
xor
cmpsb
test
mov
inc
icebp
pop
idivl
sahf
cmpb
sbb
les
data16
push
aam
jnp
in
xchg
out
inc
mov
push
xchg
ja
cli
dec
push
in
push
rcrl
mov
push
sub
bound
adc
dec
notb
clc
repz
mov
mov
scas
in
popa
repz
fisubrl
xor
ret
dec
xchg
mov
imul
lock
fwait
inc
lahf
movsl
pushf
scas
bnd
push
sbb
and
lods
andl
stc
cmpsl
mov
add
jmp
xchg
mov
inc
push
and
inc
sbb
sbbb
cltd
jae
ret
mov
inc
dec
das
aam
ret
sub
ljmp
mov
jmp
call
sbb
dec
mov
mov
adc
shll
in
mov
lds
push
gs
cs
pop
xlat
push
jne
cltd
dec
sub
pusha
xor
mov
mov
jns
sbb
hlt
mov
jge
stc
fldl
adc
jecxz
cmc
fdivl
lret
mov
jg
push
push
push
fistpll
xchg
xchg
jge
mov
gs
sub
jg
jae
mov
neg
jbe
jl
cwtl
call
fwait
in
mov
mov
jecxz
and
ljmp
sahf
push
push
mov
stos
inc
xlat
xchg
sub
xchg
inc
mov
pmaxub
xor
rorl
xor
push
cli
fdivp
negb
mov
cmpsb
and
sar
rclb
stos
xor
je
push
loop
inc
clc
mov
dec
xchg
popa
push
fldl
sub
xchg
xor
dec
sub
jo
push
pop
lret
pop
cmp
and
int3
lods
pop
imul
sbb
push
dec
and
lds
inc
enter
mov
ret
shrl
or
iret
rorb
out
lods
aad
sbb
std
and
ss
stc
popa
sarb
sub
mov
fisubs
pop
jle
fs
add
xchg
xchg
add
arpl
iret
adc
add
out
movsb
or
add
xor
subb
mov
addr16
rorl
push
in
xor
test
adc
out
inc
xchg
push
mov
aas
cld
cmp
nop
repnz
mov
bound
into
leave
bound
sub
fcoml
xchg
mov
cmp
xchg
stos
or
movsb
imul
lods
push
xor
push
cwtl
lods
iret
int
pop
cmc
mov
jae
ficompl
enter
cmp
xor
insb
xor
xchg
mov
cs
lcall
fs
mov
mov
push
inc
fstpl
pop
fcoms
sahf
mov
in
push
loop
sbb
sub
sbb
push
push
or
xchg
sub
outsb
add
lock
xor
pop
pop
or
fisubrs
outsl
lea
pop
sti
cmpsl
gs
push
push
xchg
dec
imul
jg
mov
test
xchg
jge
fcomps
out
and
xchg
shlb
daa
xchg
add
out
mov
lea
shr
shll
add
ror
pop
jl
idiv
ja
stos
iret
jg
or
adc
xor
packssdw
xchg
adcb
dec
xchg
jmp
mul
or
adc
mov
mov
push
add
add
fists
fnstsw
mov
xchg
or
xchg
mov
ja
pop
js
cmp
testl
fwait
and
xchg
je
sub
pcmpgtw
xor
lahf
shrb
mov
mov
mov
jae
xchg
fcomps
subb
pop
sti
sub
lcall
stc
adc
jnp
stos
cld
stos
movsb
lret
pop
ret
pop
popf
cmp
sub
out
stc
mov
mov
shlb
pop
adc
outsb
stos
mov
and
xlat
fsubs
insl
out
jp
sbb
sbb
cmpl
shr
lret
add
xor
sub
hlt
jae
pusha
popf
sbb
dec
btr
xor
stos
popf
inc
daa
shll
xchg
mov
out
inc
add
lcall
add
jmp
scas
icebp
and
insl
pop
fucom
icebp
pop
jbe
dec
out
mov
out
fdivr
adc
jle
mov
aaa
xor
dec
mov
jne
and
or
cmpsb
popa
iret
jge
cmp
pop
jo
inc
push
push
ljmp
xchg
pop
pop
pop
pop
mov
lock
push
call
add
adc
mov
xchg
imulb
xchg
add
shrl
lds
cmp
or
mov
ja
out
fs
gs
xlat
jmp
push
imul
jp
pop
mov
daa
call
inc
xchg
push
push
mov
test
xchg
decl
sub
jo
or
insl
enter
adc
adcb
mov
xchg
loope
es
stos
sbb
push
cmpsb
mov
fs
stos
xchg
test
sub
and
lods
xchg
jno
fildl
lea
pop
xlat
mov
js
loope
leave
xlat
out
push
fnsave
xchg
dec
or
push
shlb
xorb
jecxz
lret
adcl
pop
add
data16
arpl
leave
push
frndint
lock
push
mov
mov
std
rorl
shrl
mov
stos
and
pop
xchg
jecxz
ds
xor
adc
adc
int
loope,pt
mov
and
or
cmpsb
pop
cwtl
aaa
lret
push
sbb
stos
popa
mov
in
stc
loopne
pop
aad
jge
call
into
lret
test
push
mov
aaa
lea
mull
push
xchg
rcrl
lea
xchg
jns
mov
add
rcl
scas
or
lods
dec
push
xchg
in
pop
push
cmp
into
pop
push
jbe
mov
mov
push
pop
add
mov
cmpsb
jmp
mov
pop
inc
pop
sub
inc
dec
lret
fcompl
inc
push
jno
in
mov
mov
jmp
cmp
loopne
and
std
mov
aam
icebp
add
subl
xchg
and
adc
inc
stc
dec
enter
pop
add
into
scas
cmpsb
mov
jnp
and
mov
mov
adc
fsts
adc
dec
jno
xchg
pop
jl
mov
mov
in
xchg
xor
mov
add
add
or
cli
sbb
adc
push
xor
xchg
mov
pop
pusha
addl
sub
pop
dec
repnz
sbb
mov
push
lds
sub
psllw
aas
jmp
push
das
mov
iret
adc
dec
test
cmpsb
movsb
mov
jns
repz
dec
and
and
sbb
sahf
add
mov
movsb
fcoml
cmc
push
inc
jge
mov
mov
or
sbbb
push
imul
flds
lret
shrb
cmp
xor
xor
lret
push
cmp
fwait
jb
xlat
je
cmp
test
loopne
inc
fadd
je
icebp
cmpsb
js
adc
addr16
and
cmpsl
adc
inc
pushf
mov
je
in
push
rcll
ret
jp
rcll
pop
sti
ljmp
mov
add
pop
fs
int3
pop
icebp
push
cmp
push
mov
idivb
leave
dec
iret
stc
ja
inc
or
sub
not
test
sub
hlt
pop
iret
adc
lock
sbb
jmp
fadds
dec
aad
scas
insb
aam
insb
testl
sbb
push
lret
aas
add
repz
xchg
mov
add
mov
sbb
inc
xchg
mov
jbe
stc
mov
jp
iret
not
test
push
jbe
push
push
jge
in
popf
test
ret
fdivrs
mov
out
cmpsl
lret
xchg
mov
movsl
cwtl
sub
and
cmp
dec
mov
push
dec
stos
sub
dec
enter
and
jmp
fxch
addr16
sbb
data16
inc
cmpsl
xchg
cwtl
jg
fisubl
or
mov
and
jecxz
test
aaa
pop
sbb
or
mov
mov
divl
cmp
dec
aaa
or
xchg
enter
test
dec
sbb
rolb
dec
xor
and
mov
inc
push
fists
push
aam
call
outsb
xchg
lcall
scas
or
pop
dec
mov
mov
xchg
das
stos
hlt
test
pop
adc
pop
mov
call
pop
ljmp
push
dec
sbb
cmp
popf
mov
and
mov
mov
add
dec
jmp
lahf
fisubs
jae
out
push
and
mov
push
outsl
push
mov
xchg
pop
pop
hlt
cmpsb
leave
jae
pop
mov
mov
mov
push
ret
pop
sub
add
sub
push
inc
scas
push
inc
dec
fidivrl
cwtl
or
push
lret
xor
filds
lock
mov
cmp
lea
mov
and
cmp
mov
lds
mov
push
fidivs
xchg
fcmovnu
shll
push
mov
or
mov
sbb
divl
out
arpl
jo
shl
xor
cwtl
imul
call
stos
lea
push
and
jno
mov
aam
cmpsb
insb
cmc
ja
pop
and
pop
fdivs
js
pop
sbb
ljmp
ror
dec
pop
or
mov
push
xchg
shll
mov
mov
cwtl
outsb
xchg
pop
insb
gs
inc
into
and
dec
add
cwtl
das
xor
out
pop
lods
mov
ds
sub
dec
mov
js
sbb
mulb
jle
mov
cli
jae
cvtdq2ps
and
cmpsl
pop
sub
rcrl
add
mov
pop
scas
call
das
aam
adc
push
adc
sub
dec
mov
xchg
mov
gs
mov
jge
sbb
xor
int
mov
hlt
add
data16
and
fdivs
cwtl
jbe
fcoms
jecxz
aas
jmp
jae
scas
in
into
imul
mov
roll
out
jne
out
in
mov
sbb
in
and
fimuls
xchg
cmp
mov
inc
sbb
xchg
and
xchg
roll
insl
stc
xor
or
mulb
gs
mov
and
dec
xchg
lcall
and
scas
mov
dec
sub
adc
push
jge
cmp
push
repnz
sub
push
insl
enter
mov
push
dec
cmp
jl
sbb
sarb
cmp
xor
mov
cwtl
cmp
stos
adc
mov
push
lret
or
jne
jo
inc
stc
sbb
ss
xor
add
adc
frstor
ljmp
push
stc
cmp
xchg
or
nop
jecxz
clc
test
cli
pop
sbb
lahf
add
cmp
dec
ret
arpl
jl
and
and
sbb
sbb
imul
and
hlt
bound
lret
xor
les
cmp
mov
push
int
xchg
mov
add
xor
sub
js
adc
push
sbb
mov
gs
aad
jmp
out
das
jge
mov
pop
xchg
dec
cmp
xor
mov
or
repnz
movaps
mov
test
or
jmp
push
fdivrs
test
jge
add
jnp
xor
push
fprem
mov
or
inc
adc
std
cli
push
inc
je
shrb
push
mov
lods
add
sub
cmp
xchg
psubd
lods
fisubs
ds
icebp
test
inc
pusha
adc
cmp
sarl
pop
push
aas
pop
mov
mov
xchg
xchg
xchg
out
and
loopne
sarl
movsb
mov
jl
mov
inc
sbb
mov
mov
sub
and
ret
jmp
subb
das
ljmp
dec
dec
hlt
stos
xchg
in
sub
fidivs
data16
mov
adc
clc
shll
out
inc
int
xor
leave
cmpb
loop
aad
cmpsl
pusha
fstpl
sub
mov
repz
pop
insb
cld
out
xor
push
adc
stos
cmp
insb
fwait
jns
es
arpl
xlat
inc
scas
add
fists
daa
jnp
andb
sbbl
out
mov
call
lods
outsb
adc
loopne
sub
dec
and
inc
jl
pop
or
test
daa
dec
adc
sbb
sub
adc
lahf
or
sub
lods
out
pop
jmp
xor
sub
cltd
jecxz
or
in
popl
mov
paddsw
push
sub
ret
jnp
mov
mov
xchg
xchg
adc
ds
notl
push
push
mov
sbb
in
add
and
out
pop
xchg
mov
negl
push
shll
push
xor
fs
mov
jne
mov
xchg
add
push
sahf
test
repnz
js
dec
pop
add
jmp
int
aas
push
push
inc
std
test
cmp
mov
add
dec
ret
bound
mov
jl
pop
inc
or
cmp
mov
std
cmp
ficoms
pop
add
push
add
pop
fisttps
inc
mov
xchg
lahf
ds
mov
cwtl
mov
adc
jp
cmp
ja
sbb
push
or
dec
mov
push
dec
in
cmp
push
jg
adc
popf
aaa
xchg
lods
mov
orb
or
pushw
rolb
cmc
ret
mov
fistpl
gs
ja
in
loopne
dec
mov
jb
cwtl
xchg
or
stos
jno
ret
ss
ret
adc
inc
jb
mov
popf
cmp
xchg
or
jns
fwait
popa
and
out
dec
push
lret
call
fucomi
jl
insb
das
dec
pop
adc
roll
int3
out
in
sbb
popa
jns
and
cmp
xchg
fs
adc
or
xor
pop
pop
std
lods
fs
nop
pop
mov
fildll
mov
out
test
sub
jge
decb
cmp
lea
addr16
dec
cmp
fimuls
lret
out
adc
fmull
jmp
in
sahf
mov
mov
adc
outsl
sub
movsl
cmp
push
notb
or
inc
xor
ja
insb
popa
jo
lds
mov
jmp
jg
js,pt
leave
adc
jg
fwait
inc
jo
lcall
mov
roll
lea
fcmovbe
push
arpl
mov
inc
add
jge
lret
in
nop
mov
sbb
inc
push
xchg
out
stc
daa
pop
xor
jge
add
mov
mov
daa
cmp
xchg
xchg
or
push
test
sbb
je
insb
pusha
cmpsl
push
aas
gs
inc
add
mov
repnz
in
cltd
popa
push
cmp
mov
test
mov
shlb
enter
pop
jae
dec
mulb
cmp
inc
sub
mov
xchg
adc
dec
add
xchg
ss
fadds
iret
push
insl
lock
xchg
pop
movsl
cmp
iret
and
imul
cmc
mov
or
aam
mov
cli
sub
push
lock
nop
in
in
aaa
adc
cmp
adc
rol
fs
fs
push
stos
sbb
bnd
stos
push
scas
fists
dec
nop
sbb
lods
ss
test
pop
sti
xchg
pop
call
lods
xor
mulps
lret
fsubrs
gs
push
es
loopw
jle
fisubl
sub
mov
dec
push
sbb
sbb
jno
std
mov
movsb
ret
in
xor
xchg
inc
lcall
shll
test
and
pop
loopne
inc
sub
xor
lods
inc
into
pop
add
cmp
pop
mov
leave
aad
je
jns
push
xorl
adc
cld
ret
iret
pop
cs
mov
mov
xchg
and
bound
rcll
fisttpl
dec
gs
int3
lret
movb
orb
push
sti
pop
xchg
jno
jne
mov
mov
out
dec
xor
mov
push
adc
mov
std
pop
xor
mov
test
xorb
movsl
xor
sar
sbb
sub
fidivs
pop
out
sub
cld
lock
lret
shll
insl
shll
out
cltd
pop
add
insb
and
mov
push
clc
aam
dec
fadd
jns
lahf
lea
bound
call
das
mov
roll
cs
mov
adc
xchg
rorb
outsl
adcl
fdivrl
xor
xor
mov
push
push
stos
popa
int
shrb
xlat
aaa
xchg
fnsetpm(287
jne
jo
pop
daa
stos
mov
cli
inc
push
int3
int3
adc
xor
pop
xor
aad
mov
cld
jge
xchg
mov
movsb
jecxz
xchg
mov
ss
fcoms
jns
fs
dec
sbb
lret
cmpsb
pushf
addr16
jae
idivb
mov
ds
addr16
fstpt
xor
lods
outsb
inc
jns
mov
lret
jge
pop
push
cmpsl
stos
lods
cltd
stc
icebp
cmc
push
jmp
add
test
fimuls
lock
in
lods
lea
ljmp
ret
jb
test
ds
xchg
adc
inc
xchg
js
loope
lahf
rcrl
aam
pop
xor
outsb
dec
movsb
mov
cmc
push
add
jns
lock
fxch
push
mov
popf
mov
xchg
jge
fsub
dec
sub
jo
rcrb
push
xchg
push
cs
inc
icebp
push
mov
mov
loop
dec
fs
lock
xchg
xchg
lods
leave
add
dec
sahf
push
xchg
test
int
mov
nop
out
push
jle
fs
gs
xchg
dec
cmc
dec
push
mov
movsl
and
lea
sti
icebp
std
cmpb
into
lret
hlt
or
ss
mov
mov
scas
xchg
pop
or
xchg
mov
lahf
pop
mov
int
push
out
rolb
push
pop
pop
dec
movsb
adc
movsl
or
pop
push
ret
pop
push
imul
pushl
addb
xor
jl
dec
fwait
xor
pushf
xchg
daa
inc
cmc
sub
dec
lods
cmp
cmpsl
dec
fiaddl
sbb
inc
mov
andl
jnp
mov
pop
fwait
push
imul
jg
dec
hlt
mov
scas
aaa
mov
jle
sbb
sbb
xchg
loopne
neg
cmp
stos
pop
inc
pop
insl
popa
push
add
ror
mov
add
cmp
aam
cmp
pop
pushl
and
dec
push
popl
rclb
sbbl
shll
aad
sub
pop
fstpt
xor
imul
jp
mov
jne
enter
and
mov
xchg
clc
dec
clc
mov
jnp
xchg
push
lret
mov
ljmp
xor
fidivrl
pop
decl
bound
pop
in
pop
clc
insb
xor
add
gs
and
or
fimuls
mov
sbb
cs
jmp
xorb
and
addb
mov
xchg
inc
push
je
push
ror
xchg
gs
ret
mov
fdivrp
xchg
les
xchg
mov
cmp
adc
mov
test
or
xchg
loop
adc
inc
int3
inc
cmp
idivb
xchg
sub
fcoml
leave
movsb
shll
push
je
mov
adc
fwait
out
mov
sub
mov
ds
out
mov
leave
negl
jp
xchg
pop
cltd
add
lods
mov
sub
sub
and
push
and
adc
and
pushf
dec
cmp
dec
pusha
test
data16
ret
pop
adc
add
sahf
test
gs
mov
inc
jne
mov
es
or
sarb
add
fwait
lahf
es
xor
xorl
ret
and
stos
out
push
popl
dec
jae
xchg
cmp
add
and
out
cmp
cld
or
lret
divb
xchg
inc
ljmp
mov
pop
loope
in
add
out
cmp
sub
out
push
or
mov
fidivrl
roll
xchg
pop
mov
je
loopne
mov
loopne
push
js
hlt
mov
add
lea
jns
mov
gs
or
jb
sarl
cwtl
jg
sbb
shrb
cld
mov
idivb
aad
cmc
outsl
fidivl
sbb
push
jge
rclb
sbb
shrb
mov
mov
mov
arpl
roll
cmpsb
sarb
scas
fisubs
push
sbb
jg
clc
adc
xor
push
adc
mov
cmp
lcall
jp
dec
jno
cmp
mov
stc
in
dec
call
mov
fwait
int3
push
lock
in
jecxz
push
jnp
jmp
xchg
je
lock
pop
pop
aam
pop
in
out
inc
imull
outsb
clc
cmpsb
mov
jge
xchg
cmpsl
xor
sub
lea
addr16
popa
out
ljmp
aas
js
cmp
loope
sub
movsb
adc
xchg
xchg
mov
mov
rorb
push
adc
dec
mov
pop
push
aam
sti
jne
loop
mov
or
js
xrelease
push
jo
fistps
adc
push
mov
fcomi
pusha
int
insl
xor
mov
mov
inc
push
cmp
pop
or
in
leave
mov
test
adc
and
icebp
lea
test
imul
cmp
jb
xchg
mov
aas
jnp
out
mov
fnstcw
or
mov
iret
xchg
and
clc
aas
cmp
mov
cwtl
and
mov
mov
outsb
fmulp
and
xor
jg
pop
fcom
adc
cmpl
test
das
mov
pop
mull
mov
ja
mov
mov
lock
mov
inc
push
push
mov
in
xor
test
loop
push
jle
mov
jmp
xor
rcrb
je
scas
ret
sahf
fstps
push
pop
push
mov
dec
insb
or
add
add
xchg
mov
xor
dec
xchg
enter
ds
notb
jg
dec
sbb
fwait
pop
loop
or
out
out
dec
xorb
fucom
loop
add
pop
adc
add
add
in
mov
fs
xor
mov
and
mov
dec
cmpsl
lret
jge
jb
test
sbb
jle
sub
out
pop
int3
in
clc
fisubrs
push
add
lcall
mov
dec
sahf
in
call
js
loop
mov
mov
pop
and
adc
lds
loopne
adc
jmp
movsl
dec
gs
fidivrs
xchg
pop
inc
sbb
sub
jg
lods
or
mov
jno
or
sbb
addr16
gs
fldt
clc
mov
daa
jle
push
cltd
jo
fistpl
sbb
shl
scas
pop
sub
pop
dec
adc
inc
mov
mov
lret
inc
mov
scas
dec
call
mov
jle
fbstp
jb
test
fldcw
cmc
sar
sub
xchg
jnp
push
dec
fildll
pop
or
xchg
loope
dec
mov
xor
dec
movl
arpl
out
pop
pop
jg
imul
mov
aas
cmpsl
in
mov
test
or
mov
call
addb
xor
dec
out
or
jecxz
xchg
pop
xchg
mov
cmp
inc
fists
inc
pop
push
addl
ljmp
pusha
adc
dec
stos
addr16
lcall
cltd
aas
lahf
inc
aad
js
sub
add
ret
testb
out
pop
mov
ljmp
nop
das
sub
dec
mov
movsl
mov
rclb
pop
mov
fcmovu
test
lret
mov
fisttpl
xor
enter
sti
mov
add
jns
dec
in
cmp
xchg
or
fstps
icebp
and
mov
iret
and
pop
fstpt
cmc
mov
push
mov
out
sub
push
inc
pop
xchg
and
data16
mov
jmp
xchg
sub
test
add
cmpsl
cmp
iret
cli
pop
jle
jb
insl
xchg
sub
cmp
loop
mov
scas
xchg
push
xchg
sub
das
fadds
cmpsb
cmc
sarb
lret
push
mov
imul
mov
insl
xor
push
ret
movsl
not
sub
cli
jecxz
test
push
fcmovne
test
loop
loope
pop
out
push
imul
pop
repz
mov
es
gs
out
mov
pop
sbb
mov
jo
jmp
ja
shll
mov
add
loopne
adc
mov
jb
cmp
jmp
les
ds
int
leave
xchg
inc
fdivs
int3
push
mov
jbe
xor
dec
or
pop
xchg
and
or
das
dec
mov
inc
jecxz
xchg
push
and
lcall
dec
into
shl
hlt
pop
mov
pop
mov
xchg
lea
aad
arpl
sbb
loope
fsubrl
rclb
inc
pusha
flds
fcmovb
or
std
sub
or
insl
xor
jmp
mov
lcall
mov
sbb
xchg
fmull
push
fldcw
mov
dec
fiadds
inc
in
push
push
mov
iret
rorb
xchg
xor
sarb
decb
in
mov
fistps
dec
movsl
jle
fsubrs
imul
xchg
pop
test
aaa
pushf
mov
es
popa
and
stc
and
xor
mov
pop
mov
and
enter
lods
cltd
push
mov
dec
mov
pop
sub
pop
leave
popf
xchg
movsl
scas
mov
ret
andl
pop
xchg
mov
repnz
or
arpl
aad
jo
pop
mov
insl
xchg
adc
idivb
or
mov
adc
adcl
movsb
daa
insl
add
jge
jb
and
push
add
test
int3
sbb
fwait
cmpsb
sub
dec
sub
mov
jae
lds
or
pusha
add
pop
cmp
enter
dec
popf
and
mov
dec
rorb
and
out
mov
dec
int
mov
mov
leave
mov
or
enter
push
jmp
cli
xchg
lret
insl
movsb
mov
rorb
mov
push
mov
iret
sub
push
xorb
pushf
pop
fdivr
or
notb
out
pop
out
stc
sbbb
add
rcl
fdivr
rcll
xor
rcrl
cltd
xchg
push
cmp
push
mov
mov
lcall
pop
shlb
ljmp
les
ljmp
ror
js
jne
ret
fs
sub
out
lea
dec
or
ret
mov
or
lcall
and
xchg
in
in
enter
imul
leave
imul
jmp
pop
imul
lods
aas
test
fadds
unpcklps
push
sbb
jb
pop
lods
nop
rol
mov
sub
stos
mov
cmp
cmpsl
xchg
lock
and
cld
outsl
mov
sub
lods
repz
int3
pop
pop
jge
jecxz
add
or
xor
andb
lret
adc
xor
std
lods
push
lods
sbbl
pop
sarb
in
inc
inc
inc
or
add
mov
lret
ret
xor
stos
in
icebp
xor
insl
pop
sbb
sub
inc
xchg
leave
gs
sub
lahf
dec
jmp
cltd
je
xchg
shlb
xchg
in
clc
inc
sbb
fsts
cmc
bnd
push
out
shl
mov
daa
in
mov
lret
xchg
jno
stos
push
sub
and
testb
mov
icebp
lcall
and
dec
xchg
fistpll
sbb
jmp
or
dec
outsl
xchg
cmc
call
popa
fwait
shll
dec
inc
jmp
movsb
lret
in
stos
fidivl
outsb
pop
and
xor
out
mov
frstor
faddl
jo
imul
data16
push
cwtl
stc
stos
imul
inc
or
sub
cmp
cmp
imul
push
movsb
loope
outsb
negl
movsl
jp
shlb
fidivl
sti
mov
sarl
or
pop
iret
aaa
lret
cmpsb
dec
xchg
mov
dec
pop
jecxz
mov
shr
lret
popf
and
mov
mov
adc
into
pop
into
daa
add
nop
ror
push
jae
test
in
adc
mov
roll
adc
out
jge
jmp
xchg
out
jb
push
sub
inc
and
and
xchg
xor
mov
or
dec
in
imul
sti
cmc
cmc
out
rcl
fwait
dec
xor
lahf
lcall
shlb
push
pop
cmpsl
xchg
xchg
xor
ret
lea
adc
ret
ja
repnz
popa
dec
fsubrl
mov
rcll
pop
push
inc
jle
pop
cmp
jo
je
xor
jmp
cmc
and
inc
xor
loope
add
lods
arpl
in
jl
jb
mov
or
push
out
fcmovnu
icebp
cld
dec
lds
lcall
mov
ja
mov
daa
dec
xchg
mov
add
fiadds
jle
inc
xchg
rcrl
cmp
xchg
jg
in
das
sub
js
mov
mov
add
mov
int
pop
sub
jnp
mov
cltd
push
dec
dec
cmp
test
outsb
mov
push
mov
pop
dec
inc
aad
pop
mov
nopl
arpl
andl
mov
sbb
pusha
lock
adc
inc
xor
xchg
dec
mov
push
cmp
cmpsl
in
push
push
mov
lret
shll
cmp
negb
jg
ljmp
loop,pn
or
mov
lea
into
xor
fadd
mov
add
inc
push
js
dec
mov
lock
and
mov
lcall
or
mov
imul
idivl
lret
je
and
seto
filds
pop
add
or
lods
xchg
mov
mov
js
inc
repz
pop
sub
jmp
test
pushf
jbe
xchg
mov
push
xor
data16
xor
sti
cmpsl
outsb
jnp
aas
leave
xchg
stos
arpl
into
jg
gs
movsb
rclb
sub
mov
push
pop
mov
mov
adc
add
mov
inc
stos
and
add
jle
add
sub
fcomp
push
add
aam
popf
mov
push
lock
in
cs
jnp
inc
push
pushf
sbb
out
outsl
icebp
arpl
xor
sub
push
bound
pop
jecxz
inc
and
mov
mov
inc
pop
sahf
es
imul
repz
insb
jns
pop
jl
jmp
shrl
stc
ss
rorb
push
rcrb
cmp
fisubl
movsb
pop
je
dec
mov
aas
jg
mov
cmp
shlb
call
fs
add
ds
hlt
cwtl
mov
fdivrs
and
inc
shlb
fisubrs
inc
loope
add
push
mov
fdivrs
inc
insb
aam
jmp
cmp
pushf
nop
cs
and
popf
jecxz
and
push
push
cmpb
fistps
lock
xlat
cwtl
fisttps
sub
jb
xchg
rcl
mov
ficomps
psadbw
sub
ret
add
iret
xor
xchg
push
clc
mov
jnp
in
pushf
imulb
cld
and
mov
dec
xchg
outsb
in
sub
dec
pop
cmp
mov
dec
adc
fiadds
add
test
push
add
pop
mov
jae
cmpb
xchg
push
out
aad
inc
mov
push
xchg
or
test
dec
testb
mov
adc
jmp
jne
and
fnstsw
sahf
lods
sti
add
dec
or
add
mov
out
fnsave
mov
cmpsb
data16
dec
xchg
cmpsl
xchg
fldt
or
imul
adc
push
je
jbe
jl
ss
mov
fisubrs
loope
rclb
scas
int
cmc
popf
test
lret
jg
out
arpl
jnp
roll
dec
cmp
or
addr16
xchg
sub
ja
pop
mov
aas
and
add
push
in
jo
fisttpl
cmpb
mov
jbe
push
xor
je
lods
and
push
mov
data16
inc
xorl
push
mov
stc
lds
and
ja
mov
push
repz
dec
bnd
fs
xor
imul
xor
sub
sub
sub
test
sarb
adc
inc
inc
cmc
xor
pop
lock
stc
push
je
jno
cmp
dec
test
mov
xchg
iret
mov
leave
jmp
fisubrl
push
dec
pop
inc
leave
xor
cltd
andl
xor
test
and
int
ja
imul
loopne
lret
scas
and
and
jge
jbe
sbb
fwait
packsswb
int
dec
xor
xchg
scas
std
pop
rcrl
sbb
lcall
inc
pop
xchg
je
data16
mov
and
xor
adc
mov
sub
fcomps
dec
mov
xchg
aaa
mov
lea
xchg
or
pop
daa
addb
mov
jbe
jns
cmp
jge
cmp
mov
push
rcll
fcmovne
iret
sub
sub
lock
fs
adc
jo
not
pop
add
fistpll
inc
add
shlb
addl
loope
lcall
pop
cwtl
enter
mov
add
xchg
or
mov
repz
pusha
repnz
std
and
pop
stc
les
pop
lahf
mov
and
cli
pop
orl
negl
cli
xor
jns
cmc
mov
in
stos
not
das
fs
dec
push
mov
and
scas
jle
sub
cmp
mov
dec
in
stc
out
mov
jbe
ret
and
jmp
pop
jecxz
and
pusha
call
movsl
mov
movsb
cmpsl
mov
ss
jne
test
mov
lods
xchg
mov
inc
fistps
sub
lds
and
fcmovbe
subl
adc
fstpl
cmpsb
mov
lock
push
js
jns
test
out
dec
or
adc
xor
add
out
dec
rol
mov
je
lahf
inc
add
pusha
sbb
movsl
xor
adc
leave
fldl
mov
dec
adc
daa
mov
in
pop
cmpl
adc
jle
xlat
imul
lahf
sub
addr16
std
out
jl
in
sub
ror
hlt
call
push
movsl
xchg
and
adc
int3
enter
frstor
icebp
fstl
loop
pop
jns
lret
pushl
sbb
shrb
xchg
imul
xlat
cmpsl
adc
pop
mov
addr16
mov
mov
sbb
mov
outsb
xchg
inc
aaa
bound
nop
mov
add
je
frstor
mov
repz
loope
cmp
hlt
roll
and
inc
add
arpl
inc
mov
scas
stc
cli
xchg
sub
and
int
xchg
test
std
jge
mov
cmp
lea
les
push
std
push
xchg
loopne
pusha
sahf
add
or
push
loopne
push
or
adc
sub
push
mov
mov
test
lds
test
into
mov
and
inc
bnd
push
xchg
mov
jle
mov
mov
test
arpl
xchg
pop
out
ret
hlt
orl
sbb
sub
mulb
mov
pop
in
and
adc
sub
jnp
dec
pop
imul
rorb
and
cs
jp
mov
mov
mov
loop
adc
mov
pusha
lret
repnz
push
mov
push
leave
jge
adc
push
shrb
dec
xor
mov
in
pop
addr16
fildl
pop
jg
pop
mov
add
sarb
out
push
ret
jg
dec
pop
lods
ret
clc
cli
jecxz
out
addr16
sbb
loope
aam
jno
test
repnz
aaa
pop
int3
dec
lea
pop
movl
or
cmp
outsb
lahf
xor
sub
or
lahf
idiv
mov
lret
mov
dec
adc
out
sahf
sub
mov
pushf
std
arpl
jns
cwtl
mov
pushf
repz
pop
loope
push
js
jmp
mov
pusha
sbb
notb
pop
mov
leave
leave
and
fmul
add
test
dec
sbb
gs
ret
xchg
les
gs
adc
test
xchg
push
lahf
jne
loope
movsb
and
dec
xchg
and
dec
les
adc
or
dec
mov
lcall
idivl
roll
out
aam
mov
and
and
test
in
cmc
idiv
or
push
dec
dec
mov
nop
xor
sub
fidivrl
add
shl
out
mov
push
sub
stos
leave
mov
ror
popf
dec
rorb
jg
test
push
xor
les
test
inc
sub
sahf
lods
inc
daa
push
ret
fsubrs
push
push
pop
iret
xor
ret
js
fsubs
jmp
mov
pop
fcomp
aam
roll
mov
cmp
not
xchg
popf
loop
shll
jno
xor
fidivs
cmc
cmp
in
xchg
cli
in
cmp
std
aam
cltd
cmp
dec
inc
xchg
mov
dec
push
jns
dec
iret
sub
stc
call
push
xchg
dec
outsl
mov
push
imul
cwtl
sub
or
cmp
in
cmp
cmp
paddb
int
push
push
cmp
test
or
cmpsl
mov
xor
push
cmp
fidivl
stos
inc
mov
pop
jge
popa
pop
pop
scas
push
pop
mov
cmpsl
je
xchg
dec
and
test
cwtl
adc
inc
jno
aad
bound
stos
push
jae
outsb
pop
inc
xchg
lea
push
insl
add
add
outsl
dec
scas
sbb
mov
loop
push
push
lock
sub
repz
scas
mov
popa
add
cld
imul
add
enter
sub
jb
iret
cmp
fs
jno
ljmp
rcll
movsb
push
ja
jl
or
ljmp
jmp
mov
pop
xor
and
sub
and
rclb
lock
jnp
mov
fnsave
xor
in
mov
aam
mov
jns
stos
mov
jge
mov
push
xor
lods
nop
jl
roll
cltd
stos
loope
test
mov
aad
cmp
jne
dec
outsl
cmp
test
out
dec
fadd
clc
scas
paddw
test
aaa
fwait
inc
rcrl
xchg
add
mov
shl
out
sub
mov
das
out
mov
cmp
sahf
gs
or
cwtl
jno
push
std
add
xchg
cmp
sbbb
pop
or
jb
mov
xchg
cwtl
shl
mov
xor
lods
xor
jno
dec
xchg
pop
stos
cmc
and
les
mov
aaa
mov
loop
out
sub
mov
jno
lock
sbb
xchg
push
addb
cmp
fsubl
and
pop
add
in
adc
into
fidivrl
cltd
shrb
mov
js
inc
and
rcrb
xchg
stos
dec
lea
filds
int
push
cmpsb
inc
push
shl
xor
mov
dec
jl
out
iret
mov
cmp
push
out
mov
adc
ljmp
xchg
inc
cmp
insl
sbb
adc
push
mov
sbb
dec
pop
mov
jge
pop
scas
addl
dec
les
rorl
push
stos
mov
push
push
iret
imul
cmpsb
mov
mov
mov
xchg
inc
into
sti
xchg
jp
je
ja
push
pop
add
shll
cmp
jbe
add
pop
out
inc
cwtl
fs
lods
lcall
loop
stos
mov
push
jb
jns
sbb
lret
mov
mov
sbb
mov
data16
push
iret
mov
jp
mov
iret
fidivl
ror
add
push
adc
or
push
cmp
js
icebp
jne
sub
push
je
sbb
mov
inc
lret
out
inc
scas
jl
xor
push
aad
add
mov
shll
insl
lods
int
mov
std
mov
jp
shrl
jl
push
jmp
fmuls
jnp
les
sbb
ljmp
aas
push
pop
pushf
pushf
inc
js
jmp
dec
sbb
mov
out
inc
push
out
cmp
cld
int3
popl
jg
jnp
lock
xchg
xchg
xchg
dec
lcall
or
push
int3
fists
push
fidivrs
push
add
sbb
add
mov
xchg
mov
repz
shl
bnd
imul
lcall
or
out
movsl
out
sub
outsl
or
push
mov
xchg
sbb
pusha
push
and
outsb
pop
xchg
aaa
bound
xchg
adc
fidivrs
popl
addr16
aas
pop
cld
inc
add
sti
adc
sbb
pop
call
popf
adc
addb
or
sbb
xchg
outsl
imul
gs
push
fs
adc
stc
dec
imul
dec
popa
movsw
ds
xor
add
gs
dec
stos
add
xchg
in
outsl
sbb
es
stos
jno
jecxz
sbb
or
jmp
lods
mov
jae
jne
rcl
dec
or
shll
xchg
jl
push
push
shrb
dec
fisubs
es
pop
ret
dec
mov
adc
movsl
iret
and
ficompl
jg
inc
sarb
push
xor
jne
pop
rcrb
xchg
mov
dec
adc
movsb
jge
sub
sub
jl
cmc
test
mov
pushf
inc
dec
jno
stc
shll
push
and
jmp
ja
mov
push
aad
sahf
xchg
repnz
cmp
aad
inc
xchg
jmp
mov
sbb
push
sub
mov
jecxz
xchg
jg
scas
pop
shl
cld
mov
mov
dec
xchg
xor
or
lods
push
es
es
xor
push
or
dec
jp
vaddsubps
inc
jb
nop
pop
or
adc
xchg
mov
repz
fwait
adc
imul
pop
es
pusha
outsb
inc
ficomps
mov
scas
dec
jne
in
and
pop
mov
cmp
test
jmp
pusha
jg
int3
cs
mov
fdivrs
repnz
and
or
push
sbbb
int3
adc
push
movb
icebp
loop
lods
insb
lods
pop
sub
dec
mov
mov
loopne
inc
int
dec
pop
and
testl
fadds
fmuls
push
outsb
stos
inc
ficomps
cs
mov
xchg
mov
rcll
pop
stos
insl
repnz
cmp
pop
adc
mov
cs
addr16
inc
insb
into
push
mov
jecxz
xlat
mov
mov
xor
cmpsl
adc
orl
push
mov
out
outsb
mov
and
dec
out
pop
cmp
sahf
sahf
dec
icebp
std
push
dec
les
mov
dec
mov
xor
add
imul
mov
mov
mov
jmp
mov
aam
shlb
movsb
or
dec
sub
je
imul
xor
and
adc
dec
and
test
dec
cmp
adcl
push
rcl
scas
int
out
popf
sbb
dec
push
xchg
or
dec
es
inc
add
test
fisttps
repz
aad
inc
je
inc
push
pop
xchg
adc
lea
shl
sub
repnz
test
mov
add
or
dec
mov
divl
je
or
and
sahf
inc
outsl
rcll
xor
test
dec
jge
sub
pop
jp
sbb
inc
sub
lret
lds
cwtl
sub
ret
cmp
mov
ss
pop
sub
jmp
xchg
mov
push
mov
mov
jnp
pop
cmp
mov
mov
mov
bound
jle
mov
sbb
jne
inc
call
inc
push
outsb
loop
pop
mov
hlt
aaa
in
sub
repz
loope
add
fwait
sahf
jg
or
xor
imul
jnp
xor
or
mov
shlb
sub
sahf
in
pushf
pop
popf
scas
jge
mov
add
cmpsl
ret
dec
mov
aam
or
xor
and
mov
jb
sub
jge
adcl
mov
dec
sti
shlb
sbb
out
xchg
mov
popa
and
les
xor
sbb
clc
push
int3
push
mov
mov
cltd
push
shl
cwtl
inc
mov
ret
jno
ret
jecxz
fsubr
stos
jg
mov
dec
gs
nop
sbb
dec
sbb
int
mov
cmc
mov
popa
dec
das
insl
sub
cmp
aad
mov
adc
mov
out
mov
inc
or
fldenv
xchg
mov
dec
jns
add
insl
mov
ficompl
rolb
jge
xor
pop
and
movlps
or
xchg
sbb
jno
scas
insl
popf
and
pop
adc
fwait
push
cld
mov
mov
mov
mov
xor
sbb
pop
dec
add
mov
sbb
testb
stos
aaa
pop
out
imull
cli
movsb
and
mov
add
push
mov
adc
jg
push
testl
push
xchg
lret
lahf
daa
xchg
fsts
test
js
lcall
jg
sub
and
mov
xlat
sub
mov
mov
cmp
add
shl
lods
push
and
jecxz
fadds
cmp
scas
jno
jecxz
xor
pop
mov
insb
or
stos
out
jle
sub
mov
out
dec
push
cmp
xorl
mov
add
push
popl
xor
test
movsb
fmull
int3
ds
lds
ja
jl
jae
adc
in
or
add
pop
adc
data16
arpl
dec
cmp
cs
mov
sbb
scas
jb,pn
push
or
mov
jmp
incb
adc
xor
mov
and
jbe
cmp
add
push
les
imul
dec
push
pusha
mov
cs
xchg
sbb
sti
xchg
push
sub
adc
xor
xor
loop
mov
cmp
push
mov
lret
mov
jge
adcl
popf
cmpsl
movsl
push
lahf
pop
jbe
push
jmp
incl
mov
pop
push
push
push
into
mov
fsubs
xchg
mov
cltd
test
stc
loop
les
jns
aad
test
sbb
or
lock
xchg
sarl
xor
add
pop
outsb
lahf
xor
and
jnp
mov
cmpsl
out
rcl
subl
into
or
fistpl
xchg
xorb
add
sbb
mov
addps
shl
int3
fs
xchg
push
jg
xor
push
call
stc
push
mov
arpl
aaa
push
in
fucomp
in
mov
push
push
cld
inc
sbb
mov
test
fs
sub
add
or
jge
add
out
clc
mov
mov
dec
clc
push
daa
sbb
sahf
sbb
mov
setnp
xchg
and
mov
clc
dec
add
fcmovne
clc
push
xor
push
sbbb
xchg
int
loopne
jl
add
sahf
jb
imul
movsb
jge
rcr
arpl
push
popf
xchg
pusha
popa
xor
mov
out
mov
push
imul
adc
xchg
fdivs
es
mov
stos
xor
and
iret
cs
sbb
pop
cmp
lea
mov
inc
and
add
xor
fwait
in
ret
fwait
inc
cmpsb
mov
jmp
cmp
mov
and
mov
mov
push
clc
fwait
scas
add
insb
fldt
pop
mov
in
repnz
cmp
mov
rcrw
test
lahf
ds
xchg
and
mov
sub
xchg
cmp
dec
push
sbb
xchg
jl
stos
mov
mov
sub
test
cwtl
out
popf
inc
inc
add
dec
jns
mov
cmp
test
xchg
jg
jle
add
stos
flds
cmp
ja
dec
cmp
data16
xchg
adc
sub
mov
lds
inc
push
inc
rcl
dec
pushf
dec
add
xor
add
addr16
jb
dec
mov
adc
or
fldcw
insl
xor
mov
xchg
out
push
cli
iret
mov
sub
ja
xor
je
inc
popf
mov
push
dec
cld
cli
dec
xlat
push
nop
inc
sub
mov
push
cli
mov
mov
jae
dec
cmp
pop
mov
jle
inc
out
push
arpl
fstps
adc
adc
sete
addr16
mov
out
in
or
jmp
nop
test
js
xor
scas
es
lcall
adc
cli
mov
jb
popa
fldcw
imul
and
mov
insl
or
xlat
add
pop
call
test
xor
jbe
jbe
cmp
fbld
sti
hlt
inc
movsb
cld
mov
mov
cmp
addl
rcr
sub
sti
scas
aaa
scas
jne
xor
push
pop
adc
xchg
dec
test
add
movsb
dec
push
mov
test
js
call
inc
mov
jmp
dec
jl
repnz
outsl
push
and
sub
out
ret
pusha
mov
cmp
adc
adc
test
sub
mov
push
loopne
pop
mov
mov
adc
pop
cwtl
inc
rcll
adc
sahf
add
sub
ljmp
push
adc
pop
jns
cmp
mov
stos
daa
add
int3
std
lds
ljmp
lcall
jmp
mov
cmpsl
bound
js
jle
jmp
test
test
inc
js
add
push
out
pop
idiv
xchg
fs
stos
decl
mov
movq
popa
aas
jle
push
std
adc
ret
loopne
stos
inc
dec
cmpsl
jb
jmp
push
mov
cmpsb
imul
inc
adc
add
dec
movsl
jl
cli
push
pop
adc
cli
add
sub
or
je
stc
ficoms
adc
and
and
rorl
jae
jp
mov
mov
add
mov
int3
mov
movl
sahf
inc
loope
mov
sbb
jbe
xchg
inc
dec
jnp
rorl
ja
inc
mov
daa
shlb
sar
mov
mov
into
or
dec
movsb
rcll
sbb
in
sbb
jg
leave
push
mov
and
mov
sbb
inc
push
mov
iret
adc
cmp
sub
mov
dec
outsb
sbb
sbb
shl
push
lods
lcall
pushf
dec
cmp
lahf
push
fimull
nop
xlat
pusha
dec
lret
sbb
mov
cmp
in
loope
std
shrl
jbe
jmp
mov
xorl
icebp
xor
mov
pop
outsl
jmp
nop
das
jp
loop
xchg
push
jne
ljmp
pop
cmovl
jg
mov
push
sbb
sbb
xlat
in
sbb
and
dec
xchg
test
and
sbb
les
ljmp
es
add
cmpsb
cmpsb
test
push
test
dec
xchg
mov
add
and
inc
dec
inc
insb
lock
add
test
insl
mov
pop
sub
sbb
dec
test
jno
and
fnstenv
mov
repz
and
int3
lods
addl
imul
lret
sbb
sub
push
pop
push
pop
testb
and
sbb
adc
inc
scas
xchg
inc
repnz
fistps
add
jnp
stos
push
jle
push
data16
outsl
and
sbb
jnp
mov
xlat
hlt
mov
ffree
xor
lret
mov
mov
mov
fwait
lcall
mov
fisubs
adc
dec
push
int
stos
fists
adc
xor
sub
fstl
rclb
fldt
or
dec
sbb
cmp
lcall
jnp
xor
lret
sbb
mov
lcall
dec
xchg
imul
in
jl
imul
imul
jl
icebp
and
mov
popa
ss
aaa
push
dec
stos
inc
add
jecxz
dec
js
xchg
push
and
frstor
jecxz
call
out
mov
sbb
xchg
scas
cmp
addr16
stos
adc
lcall
sub
pop
loopne
mov
xchg
xor
mov
push
xorl
lret
adc
or
jne
sbb
pop
jl
mov
out
sbb
mov
sahf
test
test
add
je
roll
mov
fistl
in
out
lock
cmc
mov
aad
pop
out
and
gs
sbb
repz
xor
ret
jg
and
loopne
ret
rorl
rcrb
sbb
lods
fstps
add
and
repnz
addb
dec
popf
bound
pop
jecxz
jg
shlb
fildl
mov
ret
push
clc
fildll
daa
fs
jp
out
pop
sbb
and
iret
jne
ja
flds
daa
arpl
mov
sarl
jne
mov
sbb
push
aam
cwtl
xor
xor
mul
pop
sbb
rolb
sub
movsb
pop
xchg
scas
or
pop
shl
cmc
lea
movd
mov
xchg
dec
leave
pop
add
jne
aad
xchg
mov
or
hlt
notl
shl
xchg
loopne
jae
aam
stos
inc
cmp
xor
pop
into
sub
je
sub
or
dec
mov
fisttpl
lea
pop
mov
and
fs
mov
inc
sub
movsl
daa
or
loop
imulb
jmp
jecxz
push
push
mov
jmp
mov
cld
imulb
das
iret
or
xor
pop
addr16
ror
lahf
sarb
xorb
add
insl
xchg
stos
and
sbb
shlb
cmpsl
movsb
out
dec
sbb
test
and
adc
jne
adc
pushf
test
clc
mov
jae
push
mov
iret
dec
daa
cwtl
scas
sbb
test
sbb
movsb
adc
gs
inc
dec
cmpsl
mov
dec
jp
jp
movsl
dec
into
push
cs
outsl
push
lock
sub
mov
sbb
cmp
inc
xor
sbb
fdiv
xchg
loopne
adc
aam
loope
mov
xor
call
addr16
dec
or
mov
test
add
and
mov
jnp
mov
xchg
xchg
aam
repz
adc
push
xchg
cmpsl
aam
push
add
push
mov
movsb
jmp
lods
mov
adc
popf
mov
mov
xor
mov
xor
dec
jg
lods
ret
mov
leave
and
sbb
nop
sub
mov
fdivrs
mov
pop
inc
mov
fsubr
out
mov
aaa
cmp
or
and
mov
int
add
popf
cmp
in
pop
xchg
loope
xchg
lock
les
sub
arpl
aas
inc
daa
or
lcall
sub
push
jne
pop
cmp
cld
sub
cwtl
scas
adc
mov
push
mov
aas
stc
push
add
cmc
sbb
popa
or
mov
fimull
in
fadd
dec
push
mov
lods
ss
pop
push
dec
sbb
clc
xor
fstpl
push
mov
outsb
or
mov
mov
jnp
mov
in
cmpsl
dec
lcall
lcall
ja
jl
push
insl
adc
push
xlat
xchg
fmull
mov
iret
xchg
stc
sbb
les
into
xchg
add
repz
je
popf
jo
dec
push
addr16
mov
sarb
into
push
data16
pop
sub
xor
or
pop
jle
lcall
adc
jno,pn
test
sub
mov
inc
mov
lods
mov
cmp
pop
aas
pop
aam
xchg
cltd
imul
jl
sar
mov
dec
cmp
scas
mov
movsb
or
add
mov
xor
insb
shlb
add
xchg
mov
into
mov
cmp
jge
cwtl
and
jmp
jmp
inc
test
xchg
xor
cmp
mov
bound
add
loop
sub
mov
lock
inc
scas
sbb
scas
push
pop
lret
cmpsb
lcall
outsl
and
jmp
lahf
xchg
mov
dec
and
push
xor
pop
imul
inc
fldt
testl
divps
mov
movsl
cmp
add
fldl
sub
loop
xor
mov
push
add
sahf
inc
jle
push
sub
adc
and
lock
mov
jl
mov
nop
xchg
mov
mov
sub
jmp
shlb
mov
test
pushf
xchg
ja
jg
hlt
sub
fwait
jmp
or
sahf
roll
jmp
jns
pop
xchg
popf
pusha
sahf
mov
jge
xor
lret
xor
test
fstps
add
int
movsb
xor
mov
cmpsl
cmp
or
inc
imul
sbb
outsl
add
mov
ja
sub
dec
mov
xor
inc
and
pop
notl
cmp
lcall
pop
clc
dec
sti
testb
inc
xchg
mov
sub
xor
pop
nop
pop
ret
loop
fcmovne
lret
rcrl
orl
jge
inc
fcompl
inc
xchg
xchg
std
ret
out
jb
std
mov
shlb
pop
xchg
push
xor
icebp
mov
fs
repnz
lcall
mov
movsl
push
sbb
sub
pop
test
in
fsubr
push
sbb
sub
int
mov
lcall
pop
rclb
pop
or
xchg
jo
push
popl
sbb
cld
xchg
or
daa
js
or
pop
mov
out
dec
movsb
ret
add
jo
cmp
sub
jo
test
into
inc
mov
xchg
lods
movsb
add
out
sub
stos
insb
in
aam
mov
add
arpl
popa
scas
dec
and
xlat
pop
dec
mov
push
clc
mov
nop
insb
sub
sahf
notl
push
fdivl
mov
ss
ds
push
and
xchg
jg
adc
fildll
rcrb
sbb
clc
or
ret
pop
jnp
add
jp
call
call
shrb
arpl
or
and
loope
ss
dec
gs
pop
mov
mov
lret
add
scas
arpl
stc
sbb
add
cmpsl
pop
mov
lahf
and
sub
mov
push
outsb
aaa
xor
adc
hlt
push
or
cmp
push
imul
out
fs
mov
push
mov
jmp
frstor
es
mov
pop
pop
or
icebp
mov
xor
imul
adcl
dec
add
lock
mov
inc
pop
pop
mov
xchg
repz
and
mov
cs
mull
stc
cmp
add
or
sahf
imul
pop
leave
jo
aas
dec
lahf
add
sbb
not
mov
mov
xchg
mov
add
lds
and
in
inc
insl
dec
movsb
std
lods
nop
xor
push
bound
arpl
jmp
adc
test
int3
adc
push
cmc
clc
jnp
fiadds
rcll
xchg
ret
mulb
iret
adc
mov
das
cli
je
push
imul
sbb
shlb
and
stos
outsl
dec
lcall
sbb
pop
pop
mov
shrl
or
and
push
xchg
lahf
dec
sti
jae
lock
notl
cld
pushfw
pop
ss
in
dec
add
or
xor
mov
fldenv
cmpb
adc
test
es
jge
xchg
aam
lret
pushf
loope
push
mov
or
xchg
int
fisubl
inc
sbb
push
sub
es
mov
add
mov
push
jecxz
insl
ret
daa
cltd
push
imul
pop
fcompl
lret
dec
addr16
data16
ret
push
cmpl
push
sarl
sti
mov
jl
inc
adc
and
inc
pop
shl
roll
outsl
rclb
add
insb
in
xor
rcrl
pop
mov
aam
movsl
out
jge
int3
pop
fnsave
ja
in
push
cld
fdivs
mov
outsb
or
add
xchg
adc
loopne
cli
or
mov
pop
arpl
aam
icebp
and
inc
push
mov
mov
lcall
pop
mov
pop
or
cmpsb
or
mov
sub
sub
adc
daa
aad
add
add
loop
test
sub
sbbl
lea
push
rorl
pop
xchg
fstl
sbb
cmc
nop
clc
subl
add
xchg
push
mov
repnz
imul
sbb
xor
pop
hlt
push
sbb
cmp
movsl
fcoms
les
and
mov
jg
jg
repz
sbb
and
pop
inc
ficomps
iret
repz
lods
xor
rep
aaa
icebp
adcl
sub
add
pop
jmp
out
movsb
cli
mov
sub
cmp
out
sbb
popf
sti
daa
xor
repnz
out
xchg
xorb
jmp
loopne
stos
push
adc
and
mov
sub
sbb
mov
inc
cs
jb,pt
loope
cs
fdivrl
rcl
nop
cmp
push
insb
nop
or
outsl
insb
mov
mov
dec
lds
dec
or
gs
mov
cmovb
sbb
pop
adc
mov
pop
add
cmp
mov
mov
cmp
insb
pushf
inc
repz
mov
insb
repnz
test
xchg
ja
fldt
inc
iret
push
sahf
addr16
jecxz
push
inc
repz
dec
jnp
mov
add
jae
scas
scas
sar
decb
cwtl
addl
adc
hlt
insl
pushf
sbb
mov
push
lcall
in
jmp
fnstcw
jo
enter
mov
xor
pop
gs
inc
jl
mov
xor
cmp
xor
pusha
shll
in
sarl
dec
in
ja
loop
ss
pop
dec
jp
movsb
pop
mov
cmpsb
add
and
and
cmp
cmp
dec
popa
lods
fld
sub
cmp
sub
xchg
out
test
addr16
sbbl
sete
or
ja
inc
and
test
sbb
lea
pop
pusha
sub
xchg
pop
ljmp
loope
adc
sub
sbb
stc
xchg
repz
pop
push
loop
pop
push
pop
xor
pop
hlt
dec
lods
push
inc
sbb
xchg
test
xlat
stc
sbb
push
jo,pt
stos
call
aad
jne
pop
add
cmp
jne
sbb
push
inc
sbb
lret
mov
mov
je
dec
jae
dec
ror
lret
inc
mov
inc
call
dec
and
or
sub
daa
aad
jno
repz
adc
pop
into
sub
ljmp
and
cli
mov
lret
jp
sbb
shrl
jns
lcall
fadds
ljmp
or
fcomi
cwtl
fmull
xor
jbe
xchg
add
repz
push
xor
insl
dec
fildll
mov
in
push
das
int3
rclb
fisubrl
incb
clc
mov
rclb
aaa
lods
push
push
and
into
xchg
xor
adc
xor
dec
dec
cmpl
xchg
aaa
cmp
aas
push
dec
mov
or
xchg
loop
aas
jbe
daa
ja
adc
jbe
inc
mov
jle
mov
stos
sub
rol
clc
and
push
push
sbb
insb
push
popa
inc
ja
mov
cmc
jae
fmulp
out
data16
repnz
xor
mov
dec
out
mov
jno
and
insb
fimuls
out
jnp
idivb
daa
mov
sub
lret
and
pop
or
mov
aam
push
and
lret
arpl
movsl
jmp
add
add
movsl
mov
adc
test
mov
xchg
inc
sub
call
loop
jmp
adc
mov
fisubrl
pop
jl
pop
rcl
imul
and
or
cmpsb
divb
adc
loopne
js
jbe
loopne
mov
fstl
pop
jae
divb
and
ja
mov
xchg
sbb
stc
mov
jbe
ret
sti
xchg
jl,pt
xchg
adc
lods
bound
test
sti
xchg
jnp
cli
jmp
rcll
push
pop
add
std
pushl
dec
inc
test
xor
repz
iret
xchg
jne
and
sbb
sub
jae
enter
popa
stos
pop
rcr
iret
out
jl
sbb
rclb
add
push
fldenv
cld
lods
movsb
push
inc
ss
in
jbe
or
scas
jmp
ficoms
lods
cmp
cmp
jo
cltd
out
mov
jne
cli
aaa
sbb
fbstp
sti
pop
setns
nop
fldl
arpl
and
mov
push
inc
int3
push
out
pop
push
pop
inc
inc
push
jne
push
pop
jp
mov
out
int
sti
stos
push
or
push
mov
or
loop
mov
pop
add
aad
sbb
fcomps
push
lods
pushf
or
loope
mov
call
pop
inc
js
shl
push
shrl
daa
testl
push
add
arpl
push
sbb
mov
std
shrl
pslld
push
jl
sub
test
add
or
gs
mov
mov
test
mov
pushf
loop
jl
sub
nop
dec
lods
xor
int3
divb
mov
jae
xlat
popf
call
movsbl
cmpsl
dec
nop
je
pxor
insl
rcl
push
int3
loop
popf
pop
ljmp
push
dec
sbb
pop
inc
loope
or
mov
lds
test
iret
imul
jmp
cmp
push
shll
jecxz
or
or
add
inc
mov
inc
insl
dec
cs
inc
insb
test
out
add
repz
jo
js
xchg
sbb
mov
enter
lock
jl
jne
out
adc
loop
and
fistpll
lahf
stc
test
mov
pusha
pushf
mov
lds
std
add
dec
dec
outsb
repz
or
add
mov
scas
stc
lds
mov
jb
mov
xchg
mov
mov
in
cmp
and
call
jo
cmp
popf
andl
roll
mov
lret
mov
pop
push
jmp
das
cltd
in
mov
push
inc
pop
das
cld
cmpsb
inc
mov
fldt
cmp
lret
out
dec
test
jle
fs
sub
dec
scas
xor
cmpsl
xor
xchg
cmp
lods
jg
push
fadd
test
mov
lods
das
not
es
add
push
push
lcall
gs
adc
ficoms
jecxz
aad
arpl
in
idivl
inc
stos
and
sahf
enter
mov
jecxz
aam
cmpsb
lret
sub
sbb
call
cmpsb
aad
and
mov
jbe
dec
ds
sub
pop
shlb
fs
shrl
addr16
dec
incb
and
jne
push
mov
in
negl
and
xchg
jno
mov
sahf
add
add
repnz
push
mov
rclb
jb
and
arpl
mov
icebp
rorl
sbb
cli
dec
fcompl
outsl
call
xchg
test
inc
sbb
idivb
pop
fimuls
xor
in
aas
pop
push
std
outsl
xchg
lahf
movsb
dec
xlat
xor
mov
pop
sub
les
or
jo
mov
aam
cmp
scas
sbb
add
xlat
cmp
mov
mov
push
add
fcomps
hlt
movsb
push
jecxz
mov
cltd
insb
mov
add
adc
cld
inc
dec
in
jl
lds
jno
frstor
imul
sar
int
test
loope
test
jno
leave
inc
adcl
sub
ror
inc
les
out
repnz
popf
sub
inc
sub
mov
lea
adc
test
push
push
xchg
jle
mov
mov
dec
mov
gs
mov
inc
xchg
jecxz
cmp
xchg
stc
sub
std
mov
and
pop
dec
jnp
or
ret
fcompl
cmpl
or
cmpsb
xorb
and
aam
pop
in
sbb
cmp
dec
ficompl
push
lods
mov
lret
fsubs
es
dec
insl
mov
push
hlt
add
xor
es
stos
push
cmpsb
push
popf
add
loop
int3
lods
push
cltd
jecxz
ret
pop
pcmpeqb
rcrb
mov
cwtl
pusha
std
or
sbbb
lahf
outsb
cmp
dec
mov
sbb
xchg
sub
test
outsb
and
sbb
or
mov
pop
cmp
add
jbe
ja
jnp
sbb
fdivrs
in
bound
lds
add
std
mov
sbb
ljmp
mov
test
mov
vaddpd
mov
gs
jne
dec
inc
inc
sbb
pop
adc
pop
loope
sbb
test
orl
mov
popf
lahf
push
ss
cmp
sub
sub
pop
insl
out
adc
push
and
pop
data16
cmp
mov
adc
mov
cmp
aas
jecxz
add
mov
inc
and
out
and
pop
outsl
pop
dec
outsl
xchg
adc
and
pop
sarl
sbb
outsl
outsb
lods
sahf
add
push
jp
inc
lcall
dec
pop
jns
mov
cwtl
jb
jmp
adc
or
xchg
out
mov
adc
insb
mov
add
fdivrs
scas
je
aas
pushf
rdtsc
xchg
pop
pop
lds
lock
lret
jb
shrb
in
arpl
jp
sahf
or
movsl
call
fcmove
movsb
out
jbe
mov
mov
pop
hlt
jp
out
push
mov
sub
sbb
nop
pop
lretw
ret
and
push
in
xchg
mov
sub
mov
push
lock
and
in
fcoml
mov
pop
jp
in
adc
clc
mov
jnp
dec
add
jmp
popa
add
int
push
out
push
inc
mov
loopne
lods
into
movl
cmp
adc
call
test
jl
fwait
ljmp
insb
call
sbbb
std
lcall
bound
lret
pop
cmp
pop
fwait
pop
inc
fistpl
clc
adc
dec
mov
cmp
cmp
das
and
jl
xor
icebp
mov
or
mov
addr16
imul
push
sbbl
insl
leave
mov
jae
xchg
out
repz
inc
inc
fnstsw
jmp
jno
xchg
shlb
popa
xchg
loope
or
mov
insb
inc
and
pop
xor
ja
adc
scas
out
jno
mov
xchg
jge
inc
mov
stos
insb
rcrl
js
lods
repnz
insb
dec
or
cmp
fcompl
mov
pop
xchg
clc
repnz
aaa
cmpsb
or
in
add
scas
push
pushl
fbstp
push
lods
mov
enter
shrl
and
mov
push
aas
mov
sub
scas
js
arpl
fistps
arpl
in
adc
fnstsw
idiv
addl
push
enter
in
mov
push
xor
cs
fmuls
mov
mov
or
inc
enter
mov
lea
int3
dec
mov
sub
shll
out
xor
mov
push
mov
adc
aad
add
and
movsb
stos
add
and
and
in
jnp
lret
test
cmpsl
inc
cmc
popf
ror
push
jecxz
mov
lret
repz
cli
mov
xchg
mov
adc
or
pusha
adcb
fsubr
dec
in
push
arpl
data16
test
mov
stc
out
cld
in
jp
xchg
ret
popa
add
rcll
push
pop
cmp
or
xor
stos
sbb
and
mov
out
rcrl
mov
leave
aam
cmpsb
jl
lret
and
lea
mov
scas
js
test
cmpsl
xchg
mov
dec
sub
aad
xor
sub
xor
sar
lods
or
aas
scas
cmpsb
jl
sarb
xchg
sbb
push
imul
repz
popf
lcall
in
jle
repz
rclb
mov
js
mov
popf
adc
popa
bound
ljmp
fmull
iret
sbb
add
xchg
adc
jp
nop
sbb
cmp
jmp
sbb
scas
push
in
sub
and
adc
push
bnd
cmp
adc
mov
mov
les
pushf
int3
ja
mov
sub
inc
rcrb
push
mov
imul
loope
cmpsl
mov
dec
das
popa
adc
sbb
dec
cmp
daa
lea
mov
testb
adcb
add
sbb
imul
pop
pusha
pop
ds
cmp
xchg
out
pop
jp
ja
cs
mov
mov
mov
xchg
and
addr16
incl
pop
out
add
idivb
rcrb
pop
jnp
aad
ror
sti
in
mov
out
filds
das
roll
mov
addr16
inc
mov
mov
cmp
inc
ljmp
mov
repz
jl
jg
mov
inc
fidivrl
out
lods
movsl
mov
rep
mov
mov
in
pop
jbe
aad
cmp
jo
xchg
mov
xchg
stc
fsubs
and
pop
stos
mov
scas
lret
dec
adc
xchg
loopne
sbb
hlt
sahf
cmp
sbbl
cmp
mov
jg
inc
push
or
ret
cld
pop
mov
out
imul
clc
jg
lahf
cmp
xchg
out
subb
ljmp
fisubrl
nop
outsb
imul
cmp
add
jb
inc
or
rcl
inc
cs
subb
test
lret
hlt
adc
jmp
sbb
shrb
shrl
stos
fdivrs
ret
repnz
mov
inc
pop
imul
std
adc
sbb
or
ficompl
ss
insb
or
lods
sbb
sbb
fiadds
mov
cld
dec
int3
or
xchg
jg
xor
xchg
fldl
adc
or
scas
fwait
mov
sub
inc
xchg
cmp
pop
outsl
push
fimull
inc
je
jns
xor
lods
imulb
cmp
sbb
movsl
sbb
leave
sbb
sbb
das
rolb
lea
inc
push
jns
xchg
flds
dec
rclb
or
xlat
mov
fdivl
cs
rolb
inc
cmpsl
mov
cmpsl
inc
adc
movsb
pushf
arpl
scas
jmp
push
mov
or
cmp
ret
and
push
jle
cmp
shll
cmpsl
gs
movsb
inc
mov
jge
and
sub
adc
fisubrs
test
jg
push
inc
in
xor
lcall
adc
or
push
sbb
xor
dec
adc
mov
xchg
inc
in
into
rcrl
xchg
dec
popa
xchg
jecxz
sub
popf
adc
pop
mov
lret
pop
pop
pop
negb
push
cmp
xchg
pop
adc
out
jge
data16
rcrb
es
mov
xorl
insl
xor
loope
adc
inc
outsl
jmp
xchg
xchg
add
adc
ret
insl
cmpsl
xchg
js
xrelease
rcrl
loope
scas
neg
fcmove
lods
mov
mov
cltd
in
pop
dec
out
mov
jge
fstpt
mov
sbb
lds
repz
mov
and
aas
ds
jmp
and
cltd
mov
test
shlb
push
mov
lock
pop
jp
dec
std
int3
xsha256
cmpsb
pop
rolb
xchg
and
dec
cli
inc
int3
pop
decb
pop
cmpl
fsubrs
cmpsl
aaa
and
mov
xchg
call
rcrb
pop
into
adc
gs
mov
ss
mov
mov
es
push
je
lods
mov
enter
in
popa
sbb
int3
mov
xchg
adc
aaa
xor
out
or
lret
aad
jbe
jg
js
push
out
sbb
xor
mov
pop
jl
sahf
inc
cmp
lods
outsl
or
sub
mov
shrb
or
das
js
adc
xchg
or
lock
add
aad
lahf
call
enter
jle
lds
push
xor
xchg
inc
popf
jg
jb
push
jge
add
in
leave
inc
out
fsubrs
xchg
negb
les
xchg
data16
add
adc
sysret
mov
arpl
in
fsubrl
jecxz
mov
mov
pop
or
lock
gs
jno
lea
inc
movsl
cmpsb
cmc
sub
ret
pop
into
push
sti
decb
jle
insl
das
movsb
mov
divb
insb
or
cmc
iret
dec
test
adc
std
add
mov
fnsave
inc
or
nop
arpl
mov
adc
repnz
add
mov
in
push
pop
jg
push
enter
rorb
mov
jns
loopne
pop
push
loop
cld
mov
mov
mov
les
and
pop
xor
add
push
in
inc
clc
fwait
int3
cli
mov
iret
pusha
push
enter
sti
cmc
push
jg
les
push
out
popa
pop
dec
rol
ss
and
icebp
cmpsb
inc
fld
xor
aas
sarl
popf
jp
or
and
addr16
sub
sbb
mov
xchg
jns
mov
fiadds
inc
bound
mov
dec
push
inc
mov
test
inc
mov
adc
cmpsb
test
jne
hlt
clc
int3
jbe
loope
in
pop
mov
mov
fs
dec
sub
stc
cmpsl
cli
mov
out
neg
lock
pmaxub
adc
jne
pop
sbbl
icebp
dec
jae
pop
and
adc
push
xor
mov
arpl
in
fwait
mov
lods
addps
or
pop
adc
push
mov
jno
push
lods
aas
cs
in
into
aaa
clc
dec
fcmovnu
mov
rclb
shll
and
je
pop
push
in
inc
sub
xchg
into
sbb
stos
adc
lret
lcall
and
dec
lret
sub
lret
in
pop
sbbl
sub
push
in
pop
mov
int3
les
in
jns
in
into
inc
xchg
sbbb
aas
loope
dec
xchg
cmp
stos
les
les
adc
dec
fistpll
cmpsl
mov
and
in
pop
stos
movsb
mov
xor
dec
gs
insl
icebp
mov
pusha
mov
jle
call
rcrl
stc
mov
pop
insb
push
es
adc
xor
lea
das
out
popa
jmp
movsl
sub
mov
ficompl
fdivrl
test
lret
sub
jns
mov
lods
cltd
xchg
mov
hlt
dec
dec
adcl
popa
cmp
aam
repnz
int3
dec
iret
jecxz
daa
ljmp
dec
push
insb
test
add
and
sbbb
sub
bnd
add
fidivrl
dec
fiadds
or
jae
add
mov
dec
sbb
pushf
addr16
test
lret
sbb
mov
adc
loope
out
jl
sbb
jbe
movsl
repnz
cmp
push
push
in
lahf
orb
pop
pop
jno,pt
lea
bound
add
shll
pop
movsb
mov
jae
xchg
sbb
inc
pop
cmp
and
xor
mov
insl
xchg
sub
std
mov
push
cmpb
add
popf
sbbl
lret
sbb
pop
push
push
dec
jnp
pop
into
xchg
pop
lcall
xchg
push
aad
sbb
inc
in
cmp
pop
pop
out
cmp
ds
mov
xor
mov
mov
add
or
int3
aas
mov
int3
dec
stos
cmp
repnz
movsb
xor
and
jbe
mov
out
or
inc
hlt
ficomps
dec
int
fldl
pop
push
adc
cmp
dec
push
mov
inc
jecxz
aaa
jo
inc
adc
mov
fdivrs
aam
mov
xor
out
insl
jecxz
push
in
addr16
xchg
stos
fmuls
out
int
pop
mov
iret
pop
sti
ja
int
jbe
cmp
leave
imull
sub
sub
outsb
jmp
pop
dec
out
push
ljmp
mov
pop
rcrl
push
or
xor
addr16
push
lcall
jecxz
lds
pushl
rolb
inc
mov
jmp
ret
mov
ja
push
mov
xchg
xchg
stos
insl
je
xor
fimuls
sbb
les
adc
lahf
jno
xchg
mov
imul
nop
and
jo
mov
fmull
sub
hlt
pop
pushf
pop
xchg
lea
sbb
imulb
es
xchg
mov
inc
lret
push
in
divl
es
ret
xchg
cmp
imul
pop
push
mov
push
stos
jnp
jle
and
add
sbb
cmp
and
mov
into
jbe
je
out
ret
fcmovb
pop
add
es
pop
clc
sbb
sub
xchg
iret
mov
or
xor
lea
add
mov
call
cmp
fwait
or
inc
lret
pushf
pop
jnp
clc
in
xlat
mov
cmc
and
push
cmp
stc
aam
mov
add
push
mov
lock
push
mov
jb
icebp
push
jb
adc
cld
call
mov
loop
adc
bound
icebp
mov
aad
cmp
lcall
dec
lods
push
outsl
mov
jnp
bound
inc
popf
cltd
pop
pop
insb
push
notb
mov
mov
int3
jb
push
jg
mov
xor
mov
shl
pusha
inc
out
dec
xchg
popa
scas
cli
fdivs
sbb
jne
jp
jb
les
sub
ds
aaa
lcall
fcompl
fsubp
mov
fadd
sbb
js
les
add
and
and
divb
subb
popa
dec
out
ficoml
xor
mov
shll
int
ret
imul
insl
and
pop
xchg
into
jo
pop
jbe
cmp
inc
jne
pop
jno
rep
pop
push
dec
outsl
adc
seta
rdtsc
sti
xchg
xchg
mov
outsb
mov
fwait
pop
fbstp
ljmp
dec
jnp
sbb
add
xchg
inc
aaa
jb
lahf
inc
ja
lcall
outsl
mov
dec
push
inc
mov
mov
xchg
pushf
repz
mov
insb
fxam
add
push
and
adc
mov
jns
in
mov
nop
mov
adc
js
and
adcb
pop
rcrl
pop
inc
cmp
push
cmp
aas
or
scas
pop
adc
xchg
xchg
scas
push
fdivr
add
cmp
mov
imul
inc
ficompl
jle
lock
icebp
cltd
push
aaa
pushf
inc
sub
and
imulb
out
testb
test
clc
repnz
fdivl
subb
lods
mov
mov
jmp
cltd
sbb
mov
incb
mov
mov
dec
les
cmp
mov
push
pop
push
js
lock
inc
ret
cltd
mov
ret
ljmp
fstl
inc
lock
cwtl
xchg
jnp
add
call
cmp
cmpsl
xchg
mov
hlt
shr
mov
repz
dec
lret
in
and
cmpsb
arpl
adc
cmpsb
add
loopne
jbe
paddq
pop
mov
roll
fwait
adc
daa
lock
and
cltd
sarb
xchg
inc
dec
cld
fistpl
in
fimuls
sub
fadds
xchg
adc
stc
push
adc
jo
iret
adc
inc
setne
loopne
nop
push
or
sbb
mov
leave
lods
cmp
int
lods
ja
in
jno
ljmp
pop
ret
and
push
fisttpl
xchg
mov
mov
pop
insb
and
int3
int3
loope
aad
jle
into
out
mov
sbb
mov
ja
mov
pop
testl
mov
push
inc
jno
cmp
leave
dec
dec
cmp
push
dec
mov
pop
add
nop
popa
adc
cmp
stos
adcl
les
mov
test
pushf
bound
add
mov
push
jno
test
sub
sarl
xchg
dec
inc
add
jnp
fdivs
imul
hlt
mov
rcrb
mov
cwtl
dec
or
mov
daa
adc
out
and
cld
pop
jnp
and
mov
imul
push
push
aas
xchg
lret
push
mov
nop
pusha
daa
mov
gs
ficomps
and
pusha
es
pop
in
mov
sbb
subl
icebp
aad
adc
ficoms
gs
rorl
bnd
sbb
je
push
std
adc
dec
lea
cmp
dec
iret
mulb
scas
inc
roll
scas
movsb
dec
rorl
pop
cmp
fidivl
hlt
mov
lret
cmp
pop
inc
inc
sbb
repz
sub
jp
sbb
push
filds
jg
or
rclb
push
push
mov
pusha
cmc
or
cmp
mov
jmp
inc
mov
pop
testl
mov
pop
push
shrb
jp
pop
popl
out
jne
std
adc
lret
xchg
xor
lret
iret
inc
bound
je
jno
das
lcall
rorb
push
imul
jnp
test
adc
push
outsl
rcrl
sti
leave
or
imul
xchg
sbb
pop
sbb
addr16
sbb
ret
xlat
and
test
daa
jbe
rol
xor
sub
dec
ljmp
fs
push
push
repz
xchg
cmp
out
imul
cmp
cmc
aas
or
push
pop
mov
scas
rcrb
cmp
insb
scas
push
xor
loop
push
xchg
imull
mov
jecxz
push
mov
mov
mov
outsl
scas
testl
xchg
cmp
shrb
out
test
pop
out
aam
dec
xchg
leave
push
fdiv
pusha
cld
or
addl
cltd
outsl
mov
insl
nop
in
push
jne
dec
test
inc
fldcw
imul
inc
sbb
std
arpl
ss
ss
in
xor
fcmovnb
xchg
cmpb
dec
cmpb
pop
popa
sbb
aaa
dec
xchg
mov
add
xor
pusha
add
arpl
outsl
xchg
test
cli
push
std
stos
int3
add
mov
outsl
mov
jp
xor
sub
scas
jno
mov
mov
stos
dec
xchg
loopne
cmp
mov
mov
lret
sub
xchg
pop
mov
xchg
leave
sub
sub
lahf
mov
add
add
dec
xchg
adc
adcb
or
mulb
hlt
in
mov
adc
jecxz
add
xchg
sbb
outsl
sar
inc
add
enter
fnstenv
das
pop
jl
repz
sub
pop
out
xor
aaa
xchg
sub
in
adc
sbb
repz
icebp
pusha
jle
jge
add
lret
popf
popa
pop
mov
cmp
ljmp
jge
rcrl
gs
mov
xchg
popf
xchg
lret
cmpsl
dec
xor
orl
push
lret
imul
xchg
rcll
lret
cmpb
add
popf
adc
adc
lea
stos
in
dec
jno
adc
inc
xchg
int
inc
and
sbb
cmpl
pop
je
loopne
popa
out
les
shr
lods
jne
lods
sub
xrelease
lock
shl
movb
sbb
jo
xorl
and
out
fimuls
sbb
mov
xchg
ret
xchg
jno
ss
ljmp
and
pop
addr16
cmp
mov
sub
jp
push
std
es
xor
mov
jno
mov
movsl
fstl
add
mov
fdiv
inc
les
bound
lods
add
mov
stos
stos
adc
jl
sub
push
test
inc
mov
add
fdivrl
jg
fwait
xorl
scas
push
and
test
jp
adc
cwtl
adc
bound
dec
mov
movsb
cmp
pop
inc
fcompl
fstp
jb
mov
arpl
mov
mov
mov
fwait
sbb
sub
mov
setnp
add
and
repz
pop
jmp
in
mov
and
xor
xchg
das
test
inc
and
mov
ret
jge
sbb
imul
add
jo
fsubrl
xchg
int
ret
shrl
push
stc
sub
xchg
dec
push
push
mov
outsb
lret
inc
lods
aas
push
subl
push
cmp
sbb
mov
data16
fsubrs
cmpsb
lahf
jne
icebp
aaa
mov
xor
popa
push
cwtl
push
scas
jmp
sbb
imul
xchg
call
xchg
cs
cmp
test
or
cli
popf
adc
pop
lods
sti
sbb
add
jmp
mov
lods
push
lcall
inc
pop
jne
xor
sbb
push
mov
pushf
inc
xchg
aas
push
adc
add
jg
adc
ret
jno
cmp
mov
mov
idivb
stos
fdivrp
jbe
fwait
cmpsl
fldt
and
mov
stos
push
or
mov
push
or
outsb
jne
movsl
in
aaa
fidivl
pop
out
mov
sar
inc
pop
dec
mov
int
sub
xor
in
dec
sbb
or
add
repz
out
xchg
imul
ds
movsb
nop
jmp
adc
mov
push
loopne
orb
push
repnz
jecxz
push
jb
cmp
out
sbb
jo
mov
call
dec
xchg
mov
sub
add
sub
push
pop
sub
fstl
mov
shrb
and
lcall
out
lcall
inc
das
inc
mov
mov
mov
imull
icebp
pop
test
mov
push
xor
pop
mov
xchg
addr16
shlb
stos
pop
enter
das
mov
dec
sub
jecxz
and
je
cli
fildll
cmp
xchg
lds
sbb
insl
push
xchg
sbb
cmp
mov
mov
movsb
stc
stos
mov
sbb
fs
ss
cmp
or
xor
pop
in
imul
ret
cmpsl
inc
loope
scas
aam
aad
movsl
pop
mov
loop
mov
nop
nop
in
lods
xor
lcall
jmp
cmp
mov
cld
fsubrp
xchg
mov
mov
sub
loopne
cltd
sahf
dec
dec
mov
inc
xchg
cmpsl
jg
mov
mov
add
je
out
enter
push
inc
mov
dec
sbb
std
iret
imul
out
fwait
or
xchg
cwtl
gs
cmpsb
xor
imul
fnstenv
adc
cmp
jbe
test
mov
outsl
push
es
es
dec
in
call
sub
insl
mov
ss
dec
insl
ljmp
int
lods
push
rolb
out
test
cmp
push
cltd
repnz
dec
data16
rclb
aaa
call
into
adc
push
xchg
cmpsl
outsb
xchg
xchg
add
mov
add
jnp
jl
push
sbb
sahf
sti
mov
adc
out
fildll
push
enter
xlat
insl
repz
je
aam
fldl
inc
scas
mov
sub
les
incl
or
or
dec
iret
inc
lods
push
stos
add
jl
sbbl
insb
lock
push
or
jmp
je
sbb
mov
leave
or
dec
lods
mov
xor
push
sbb
pop
adc
xor
fs
stos
in
js
in
push
adc
loope
imul
push
movsb
int
addr16
mov
push
bndldx
add
adc
lea
jbe
lock
iret
fldcw
push
insl
sbb
cld
pop
dec
mov
ret
daa
loopne
xor
xchg
in
sbb
scas
add
pop
xchg
inc
dec
mov
mov
hlt
pop
aam
daa
pop
loop
xor
add
mov
mov
sbb
fs
scas
out
push
adc
push
xor
pop
or
bound
int3
add
jbe
mov
xchg
daa
inc
lea
mov
fcomps
mov
mov
cld
mov
pop
push
addr16
adc
dec
fnstenv
icebp
jl
add
mov
inc
aas
inc
lods
scas
sbb
adc
pop
iret
shrb
fst
push
lret
js
or
xlat
and
mov
sbb
push
adc
lods
xorb
jg
pop
push
push
fmuls
lcall
sbb
shll
dec
lahf
pop
mov
add
cld
pusha
sbb
mov
pop
test
cwtl
aaa
fisttpll
rorl
add
mov
jmp
inc
push
sti
xlat
sbb
push
xor
or
mov
pop
mov
cmp
fmuls
and
nop
lock
ljmp
dec
xor
lods
pop
jmp
lods
xchg
and
or
aam
nop
pop
mov
adc
adc
and
mov
rorb
inc
xor
push
xor
repz
and
out
fcom
sub
push
inc
dec
xlat
inc
mov
and
fsts
repz
scas
lods
test
fdivl
sub
and
rol
out
jg
pop
mov
sub
call
pop
lods
mov
adcl
jno
roll
mov
cmpb
or
into
or
je
mov
ret
in
inc
mov
mov
popa
sub
jbe
lds
pop
push
cs
and
movsl
ds
shrb
xchg
test
xor
mov
into
jmp
stos
mov
or
sbb
push
adc
lret
jo
stos
inc
lock
cmp
pop
insl
adc
insb
fisttpll
cmc
sbb
cmpsb
push
ja
mov
push
lods
and
fnstenv
repz
lret
shll
dec
dec
xor
fildll
in
jecxz
and
sub
jg
mov
mov
lcall
stos
sub
lret
lea
movsb
lods
jg
push
pop
decl
cli
adcl
jbe
idivl
sbb
jnp
orb
push
js
push
pop
je
stos
sub
daa
inc
push
pop
jno
dec
loopne
packsswb
adc
or
nop
test
out
fs
negl
mov
jmp
stos
push
imul
insb
pop
jno
rorb
arpl
movsb
dec
inc
mov
mov
insb
sub
push
pop
das
rcll
inc
in
adc
repz
inc
mov
mov
xlat
aam
mov
bnd
xchg
pop
cmp
ret
loopne
in
xor
jl
cmp
adc
rcll
int
cmp
xchg
scas
movsb
pop
in
xchg
xor
ret
xor
ror
test
dec
sbb
loopne
ja
lods
outsl
mov
mov
mov
pop
lahf
pop
push
test
mov
xchg
fmull
pop
xchg
jecxz
inc
or
test
lret
subb
int3
sar
xchg
push
cmp
inc
cli
adc
pop
pop
cmp
adc
aaa
mov
shr
iret
dec
mov
or
jl
sub
mov
icebp
push
scas
insb
call
fcomi
and
shlb
dec
cmpsl
dec
rcrl
mov
jmp
pop
mov
sahf
pusha
decl
lea
pop
in
pop
cltd
mov
js
cmp
ret
lods
cmp
imul
xor
mov
inc
mov
add
in
cmpsl
xchg
loop
add
mov
sub
adc
mov
mov
imul
sarb
push
xchg
xchg
loopne
and
jge
fnstenv
xchg
or
hlt
clc
pop
dec
test
push
inc
pusha
or
sahf
xchg
and
insl
pop
test
pop
outsb
js
pop
or
repz
or
aam
xchg
adc
jbe
cmp
xchg
inc
lret
fsub
adc
aaa
pop
sbbl
jo
and
movsb
cmpsl
out
inc
xchg
xchg
imul
lock
call
add
jnp
enter
xor
xor
inc
jge
arpl
leave
push
inc
ror
mov
add
sbb
mov
mov
ret
mov
popa
int3
fsub
inc
pusha
cli
movsb
push
add
jae
notl
mov
or
mov
mov
ret
jno
lret
cs
das
inc
inc
nop
cmp
ret
sbb
es
add
mov
jne
loope
pushl
test
add
adc
pop
cmp
inc
pop
lcall
push
xchg
ret
out
push
dec
inc
sub
pop
les
cwtl
fists
cmp
push
jbe
cmp
pop
imul
and
imul
call
inc
mov
push
in
popa
lahf
pusha
in
nop
push
adc
loope
ljmp
out
mov
jl
dec
jl
cwtl
movsb
sti
jmp
stos
jl
lcall
mov
mov
jnp
shl
lods
and
out
sarl
fisubl
cmpsl
pushf
mov
fistpll
fwait
pushf
in
sbb
enter
sbb
test
adc
imul
decl
mov
clc
ljmp
nop
daa
cmp
xor
lds
sbb
add
push
fists
xchg
mov
mov
cmp
stos
mov
sahf
xchg
in
rcrl
scas
push
cmp
lea
lcall
fldcw
xchg
loopne
scas
lret
dec
fimull
jns
fimuls
data16
dec
push
push
jle
out
bound
mov
jg
mov
jmp
lret
mov
out
lret
jb
gs
cmp
sbb
pop
pop
ja
ljmp
les
push
gs
cwtl
daa
pop
outsb
dec
inc
push
mov
and
jmp
or
idivb
push
xor
mov
mov
popf
adc
lahf
and
int3
inc
dec
pop
in
cwtl
or
mov
cwtl
je
pop
lods
stc
pop
add
negl
cli
gs
xor
les
js
lods
lods
cmpl
cwtl
icebp
adc
mov
lods
sbbb
xor
imul
mov
shll
and
dec
iret
outsl
icebp
outsl
out
inc
in
inc
mov
jg
ja
mov
jo
lock
les
jbe
push
bound
mov
gs
xchg
call
xor
into
mov
push
inc
out
mov
ltr
xor
enter
mov
inc
es
add
mov
dec
jmp
sti
or
ljmp
cwtl
or
repnz
and
pop
and
scas
pop
xlat
jmp
pop
movsl
idivb
iret
aas
leave
xchg
dec
mov
mov
add
cmp
jb
mov
mov
inc
jo
std
loopne
add
outsl
inc
mov
push
push
jg
sub
and
test
xor
cmc
sub
test
and
fidivrs
cmp
and
bound
pusha
mov
out
adc
mov
and
addr16
mov
movsb
ljmp
adc
jg,pt
push
sub
pop
scas
fildl
fimull
or
dec
pop
icebp
xchg
roll
fstl
jl
mov
jg
jle
cltd
xchg
dec
inc
mov
cmc
push
pop
jne
dec
inc
pop
lods
sbb
and
lcall
push
rol
in
shlb
jnp
arpl
stc
sbb
in
push
jae
dec
ja
xchg
mov
adc
int
movsl
mov
mov
mov
or
mov
mov
pop
add
std
es
lock
mov
push
add
xchg
inc
dec
ljmp
xor
inc
push
testb
adc
popa
push
leave
xchg
repz
cmp
jl
sbb
out
inc
hlt
arpl
xchg
mov
aad
lret
mov
test
iret
pop
call
popf
xor
lret
stos
jp
adc
inc
popf
mov
dec
out
sbb
scas
stos
jmp
bound
xchg
daa
push
lods
lahf
jno
sti
scas
cmp
jbe
movsb
xchg
loope
icebp
addb
cs
mov
inc
push
enter
or
daa
mov
inc
int3
test
mov
repnz
sbb
lock
lret
jle
sub
sbb
lock
in
scas
mov
lods
inc
mov
fistps
pushf
lds
and
inc
and
dec
jmp
jno
inc
pop
push
daa
andl
cwtl
call
adc
pop
push
shll
mov
fldl
stc
add
xor
loop
loope
lods
sbb
jmp
pop
adc
adc
sub
push
push
jb
enter
mov
sbb
cmp
cli
gs
mov
jbe
mov
out
jge
aad
push
cmp
sub
pop
adc
rcr
mov
adc
mov
jno
fst
je
push
add
dec
out
mov
mov
jnp
das
outsb
mov
push
leave
xor
loopne
pop
adcb
pop
fistl
aam
mov
mov
enter
xchg
xor
pop
test
pop
lret
sub
sahf
mov
mov
jne
popf
sub
lods
lret
or
dec
cmpsb
mov
scas
fwait
jne
sahf
aas
lock
orb
adc
stc
push
jl
aaa
sahf
pop
mov
frstor
outsb
xchg
jmp
jge
and
inc
mov
pop
shlb
into
cli
lcall
in
mov
in
lret
cltd
xor
clc
adc
or
dec
lret
in
or
in
xchg
in
test
mov
in
imul
sub
xchg
cld
adc
mov
add
sub
popa
push
add
mov
orb
loop
ficompl
in
pop
mov
pusha
mov
pop
lods
mov
arpl
jl
push
mov
fidivs
adc
aad
adc
jns
movsb
adc
fwait
jno
repz
mov
fcmovu
jnp
pop
insl
jns
jbe
movsl
pusha
leave
sbb
lahf
xor
cmp
cmpsb
adc
mov
fbld
lret
fwait
int3
cmp
movsl
adc
pop
call
les
aas
mov
add
testl
xor
pop
mov
in
or
cld
movsb
leave
inc
ljmp
sbb
inc
mov
sar
pusha
xchg
mov
rcrb
movsb
jae
jbe
clc
mov
es
cli
loopne
mov
nop
jns
and
sbb
dec
push
arpl
rcr
xor
or
xchg
mov
sub
add
push
mov
jg
incl
lahf
sahf
imulb
insb
clc
pop
mov
push
ds
inc
and
mov
mulb
or
xchg
dec
adc
sbb
inc
pop
cmpb
outsl
push
or
push
popa
scas
gs
sub
and
stos
nop
mov
je
shl
push
daa
aaa
insb
pop
and
xor
jns
loope
xlat
and
jbe
and
xor
dec
mov
sti
outsl
call
jae
int
dec
mov
and
int3
jmp
sub
aas
jg
xlat
loop
cmp
push
xchg
aas
pop
rcll
and
inc
lods
xchg
es
insb
outsb
and
mov
and
hlt
push
dec
icebp
pop
lods
cmpsl
and
pop
fldt
cmpsl
lret
push
xchg
sub
outsb
pop
sbb
out
mov
pop
xor
cwtl
call
mov
mov
inc
cld
gs
mov
movsl
inc
into
add
stos
sbb
push
in
adc
cmp
jo
dec
pop
andb
mov
push
or
add
repz
inc
dec
push
bound
hlt
mov
jns
jo
mov
lods
fndisi(8087
push
fcoml
mov
sub
mov
and
int
clc
push
lods
lods
addr16
aaa
cmp
hlt
leave
push
aad
in
sahf
inc
xchg
mov
jne
inc
nop
ja
xchg
cmp
push
loopne
mov
imul
push
out
xchg
adc
dec
imul
rcr
mov
xor
inc
mov
sahf
add
mov
loopne
dec
das
out
ja
sbb
ret
cmp
sbb
std
adc
bswap
jno
sub
stc
je
sbb
xorl
out
int
jo
shrl
mov
orb
xchg
cltd
push
adc
sub
out
xchg
jo
test
xchg
or
pop
xor
sti
inc
mov
jge
push
fadd
sbb
ss
leave
jle
mov
shrl
inc
pop
imul
jecxz
inc
xchg
and
jg
cmpsl
insb
mov
add
cmpl
jmp
sub
pop
addl
out
mov
push
pop
xchg
popf
xor
aam
and
repnz
adc
insl
les
pop
call
xchg
fcmovne
inc
nop
jp
dec
mov
ds
popf
addr16
xchg
sbb
adc
fdivl
jge
cmp
adc
out
xchg
sub
in
fstl
cmp
es
xchg
inc
push
out
jne
test
inc
adc
outsl
in
jmp
mov
fcmovb
sbb
jns
cmp
ja
mov
inc
bound
stc
pop
jmp
inc
clc
and
clc
inc
mov
stos
enter
inc
popa
lret
orb
inc
mov
call
mov
sarl
sbb
sub
pop
mov
movsl
into
shlb
xlat
mov
es
in
mov
clc
out
lods
pop
add
shr
xor
lods
in
ss
adcl
aad
fbstp
cmp
testb
sub
out
pop
sbb
outsb
mov
loop
jmp
cmpsl
push
adcb
bound
mov
ds
inc
push
cmpsb
addr16
int
daa
rcrl
aam
adc
ret
dec
adc
maskmovq
testl
lods
mov
pop
push
or
cmpsb
adc
sbb
gs
inc
fidivrl
fwait
mov
adcl
loop
test
push
rolb
add
pop
fimull
jle
dec
das
pop
imul
iret
jnp
lahf
jae
mov
stos
loop
jge
xchg
and
and
dec
xchg
aas
in
mov
or
outsb
mov
and
jp
mov
cltd
enter
add
push
pushf
add
shll
in
pop
sub
es
xchg
mov
pop
inc
fs
lahf
push
inc
out
sahf
jbe
lret
jg
xor
or
push
sarb
inc
ja
push
addb
ror
lret
stos
jns
add
mov
pop
mov
orl
shl
jns
push
es
sahf
in
sub
jecxz
popa
pop
cmp
subl
jo
inc
mov
dec
jg
push
aam
out
cs
jg
cltd
mov
dec
les
jge
xchg
sbb
or
rcrl
outsb
inc
pop
out
iret
loope
rorb
movsb
mov
cmp
out
rorl
dec
push
call
fsubp
mov
into
out
fbld
adc
inc
mov
outsb
sti
mov
cmpsl
inc
jns
jo
inc
xor
cmpsl
movsl
fsubl
jg
pushf
in
outsl
or
clc
out
iret
das
xchg
add
lcall
std
pop
inc
add
and
pop
and
push
mov
sahf
mov
cmpsb
ljmp
pop
dec
jle
and
andl
sti
push
mov
fldenv
arpl
sub
adc
push
xor
pop
jno
movsb
lcall
and
rorl
fisttpl
adc
leave
lahf
xchg
mov
mov
ljmp
sub
jns
dec
xchg
ret
cmp
subb
jne
sar
ja
inc
inc
testb
mov
inc
mov
mov
or
pop
dec
rclb
rcrb
push
fimull
cli
pop
pop
shrb
mov
xchg
pop
sbb
mov
lret
mov
outsb
xor
xor
xchg
out
xorl
mov
dec
sbb
test
jb
lds
push
shl
pop
hlt
adc
imul
xchg
fistl
psubb
in
or
hlt
push
mov
int3
add
xchg
xlat
inc
jle
or
or
enter
mull
mov
push
int
jp
mov
mov
xor
or
ja
sub
aas
add
imul
test
lahf
push
push
pop
ljmp
fcom
push
pop
adc
lret
cwtl
add
pop
pop
lahf
sbb
fistpll
sbb
test
fcompl
mov
xchg
stos
call
push
jb
xchg
rorl
push
pop
test
add
pop
in
in
xchg
call
xor
enter
ret
xchg
ss
push
test
inc
sub
dec
pop
imul
inc
ja
popf
push
scas
push
test
ds
mov
std
jbe
add
and
sahf
test
sbb
inc
cmp
jbe
push
daa
cmp
aam
in
jmp
push
out
or
pop
push
outsb
je
cmp
js
mov
dec
out
xchg
rorb
data16
mov
fldl
xlat
lahf
bound
pop
jns
cmc
lret
pushf
cmp
xor
stc
jno
sub
cmp
sbb
sahf
test
test
adc
push
out
subl
xor
sub
inc
jge
andl
outsl
jb
mov
sbb
or
in
push
sti
mov
lock
inc
jmp
insl
adc
andl
leave
into
adc
xchg
out
mov
mov
pop
lock
mov
cmp
mov
clc
push
addr16
bound
adc
rcll
inc
pop
xor
jo
popa
std
cmp
pop
xor
movsl
jle
imul
popf
cmp
sahf
data16
fwait
xchg
lds
push
mov
lea
sub
test
out
ljmp
xchg
pop
mov
fsubrs
mov
pushf
test
mov
bound
push
add
sarb
jge
rcr
cmp
jbe
cld
push
fstpl
or
scas
sti
mov
popa
jle
pusha
arpl
loopne
pop
stc
xor
jle
ja
arpl
fdivs
push
cmp
int
sub
sub
scas
stos
popl
subw
lds
and
xchg
jne
scas
loop
sub
sbb
leave
outsb
mov
dec
sbb
xchg
out
and
mov
jns
xor
daa
push
mov
loop
in
sub
xorl
ljmp
fsubrs
lods
fisttpl
es
mov
movsb
setno
scas
sub
arpl
pop
jmp
pop
or
mov
lahf
jge,pt
push
jno
jns
hlt
in
sub
inc
push
adc
jmp
jmp
mov
je
add
test
lret
cmpsl
outsb
xchg
cmpsl
rorl
fs
std
idivl
pop
push
sbb
aas
jmp
add
add
ja
mov
bound
js
lods
pushl
into
into
clc
fsts
sub
or
sbb
and
lret
jmp
scas
test
sbb
gs
xchg
inc
xor
dec
insl
stos
in
adc
out
in
addr16
je
mov
addr16
dec
add
cmp
subb
repz
and
loop
jo
sbb
jl
jns
sub
add
shlb
sub
sbb
mov
sub
mov
movsb
or
sub
out
jge
fldenv
jno
inc
push
sti
into
stos
adc
mov
add
add
inc
lret
lds
add
mov
stos
andnps
or
xor
push
jg
mov
sarb
jnp
cmp
xor
xchg
dec
out
arpl
ret
xchg
cli
pop
adc
dec
jne
pop
dec
or
mov
scas
sub
aam
jp
mov
pop
push
andb
mov
lods
loop
hlt
inc
mov
xchg
push
mov
pop
xchg
mov
xchg
leave
or
pop
mov
int3
in
sbb
mov
insb
mov
fdiv
push
jp
mov
mov
push
jne
push
pushl
jne
nop
jae
mov
call
sub
jp
cmpsl
aaa
imul
cmp
into
mov
mov
jne
push
lcall
xchg
jg
mov
fdivrl
repz
idivl
pop
jnp
test
mov
xchg
nop
ret
stos
adc
arpl
jg
push
stos
dec
xchg
jno
cmp
stos
enter
or
imul
dec
sbb
pop
mov
std
xchg
jae
movsl
mov
and
or
sub
dec
mov
rcrb
fdiv
pop
mov
mov
inc
jge
xor
sub
xlat
int
movsb
dec
xchg
and
or
loop
xchg
xchg
and
push
push
gs
jo
pusha
xchg
and
loope
mov
test
fs
ss
or
fnstcw
xor
adc
push
int3
cmc
push
out
cmp
ret
cltd
sbb
xchg
pop
aaa
or
jecxz
push
cmp
loope
mov
and
sti
dec
pop
mov
imul
pop
pop
data16
xchg
aaa
xchg
jo
push
cld
sbb
cmpsb
and
icebp
pop
mov
fisubl
xlat
or
subl
push
movsl
adc
shl
xchg
dec
xor
sub
in
nop
mov
xchg
pop
mov
mov
mov
pop
es
test
xor
mov
sub
adc
cmp
int3
push
pop
cmp
sub
inc
mov
ficoml
push
pop
dec
ficoms
inc
dec
push
sub
xchg
ret
addl
xchg
cmc
sub
add
jno
jae
mov
scas
test
jne
sahf
pop
pop
rolb
push
insl
mov
idiv
add
pop
stos
xor
sub
add
add
sbb
lahf
mov
jp
rcrb
jmp
outsl
ficomps
int3
sbb
sahf
ljmp
rcrb
add
fcompl
stos
mov
jbe
pop
in
mov
jo
movsb
fs
aas
xor
add
rolb
sub
jmp
imul
inc
in
or
lods
rcll
das
xor
lods
hlt
loop
push
mov
bound
jp
popa
and
into
inc
push
inc
push
xor
sbb
mov
outsl
les
xchg
movsb
subb
shlb
pop
popf
cld
or
clc
ljmp
bound
inc
mov
and
pop
xor
dec
jno
ljmp
inc
xor
leave
stos
bound
movsb
jle
add
imul
dec
dec
sub
cld
ljmp
ljmp
xor
jno
popa
dec
test
push
sbb
fs
daa
mov
add
out
xorb
insb
sbb
aaa
outsb
dec
push
out
mov
in
popa
inc
sahf
add
fildll
das
aam
loopne
dec
push
inc
popa
adc
push
mov
mov
inc
sub
jge
adc
or
stos
inc
mov
mov
mov
lret
adc
xchg
cwtl
repz
nop
rcr
and
aas
scas
in
pop
sahf
int
cs
adc
nop
addl
xlat
xor
jbe
xor
mov
repnz
cmc
pop
mov
std
mov
push
push
sbb
lods
push
xchg
dec
test
xlat
add
push
out
lods
xor
push
jle
out
mov
sbb
lds
std
push
push
pop
popa
xor
enter
imul
lds
pop
dec
pop
mov
dec
add
mov
jmp
cwtl
mov
push
scas
stos
cwtl
int
dec
fcmovu
add
mov
mov
push
dec
adc
sbb
add
cld
push
nop
xchg
xor
mov
dec
and
or
mov
loope
in
sub
pop
push
test
pop
xchg
jecxz
mull
jp
mov
out
add
add
xor
inc
dec
or
cmp
movl
mov
jl
movl
sub
or
roll
or
mov
or
iret
jecxz
lret
add
dec
dec
cmc
cmp
lahf
mov
inc
mov
xchg
inc
sbb
inc
ljmp
jp
addr16
ss
dec
adc
xchg
cmpxchg
icebp
add
test
mov
les
inc
in
outsb
jo
lock
xchg
mov
mov
sahf
roll
out
lock
les
fmuls
daa
testb
movsl
mov
popa
mov
insl
aad
mov
mov
dec
mov
jmp
fwait
cmp
mov
sbb
cmp
popf
push
into
adc
das
lea
lcall
pop
test
arpl
leave
and
shlb
inc
xchg
fidivs
out
fsubs
loopne
stc
or
outsb
test
inc
stos
inc
stos
ss
shrb
data16
jnp
dec
fwait
xchg
mov
adc
dec
negb
sub
push
mov
mov
insl
pop
inc
popa
lock
js
mov
mov
pushf
add
mov
mov
in
sub
xchg
xor
lds
jle
popa
or
sbb
push
cmpsl
mov
bound
fistl
cmp
jp
xchg
jge
insb
jns
inc
push
pop
mov
jmp
lods
mov
ret
imul
rcrb
out
adc
xchg
mov
add
fldenv
bound
mov
addl
out
jns
sbb
jle
nop
addb
cmp
or
fiadds
fildll
int3
inc
imul
scas
iret
ds
pushf
jmp
pop
clc
mov
enter
adc
sarb
je
int
rorb
add
xor
add
cli
xor
sbb
cmp
call
das
adc
test
inc
jge
jl
xchg
mov
gs
jns
push
cmp
adc
jns
cmp
sbb
int
in
xlat
mov
popa
fwait
cmpsl
lea
pop
mov
stos
add
xor
jl
jl
test
dec
jmp
pop
jne
outsl
dec
dec
std
jmp
sarb
inc
shl
inc
inc
cmpsb
aam
std
cmp
dec
sbb
xor
push
outsl
test
lahf
subb
pop
cmp
addr16
mov
lock
add
fcoml
icebp
push
or
mov
sbb
ret
xchg
mov
fs
mov
stos
int3
out
mov
iret
dec
dec
cmpsb
add
dec
jmp
mov
inc
push
clc
push
cmp
je
out
dec
adc
loopne
sbb
sbbl
popa
push
xor
aaa
or
and
ret
pop
sub
sbb
pop
bound
addl
arpl
jle
mov
sub
xor
add
aaa
mov
rcrl
mov
lds
adc
and
mov
mov
sbb
in
sti
jno
pop
into
dec
int3
jb
leave
mov
stos
and
mov
ficompl
ret
xor
pop
ja
xor
addl
sbb
ljmp
push
cmp
repnz
in
add
push
inc
rolb
push
dec
test
jecxz
jbe
test
ret
loop
imul
loope
or
mov
jno
jmp
mov
pop
scas
and
mov
inc
repz
xchg
lcall
ljmp
cmp
fildl
pop
mov
jae
jae
adc
cmp
xchg
mov
and
mov
das
xchg
js
lea
arpl
inc
xchg
and
pop
adc
and
lea
in
dec
rclb
mov
xchg
lock
xchg
fiaddl
sub
movb
or
cmpsl
dec
pop
mov
xrelease
rorb
das
icebp
loope
inc
mov
xor
dec
ljmp
pop
lods
in
addr16
cmp
push
xlat
add
loop
mov
sti
jbe
push
fidivrs
xor
xor
xchg
jge
add
xor
enter
add
rorl
jae
mov
mov
mov
cmpsb
cwtl
mov
cmp
or
stos
and
push
sub
cmc
es
cmp
jmp
in
adc
inc
int3
add
lcall
or
lds
divb
fs
xlat
fwait
dec
scas
fdivs
cmpsb
ljmp
lret
js
mov
cmc
mov
adc
js
sub
cmpl
out
cmp
mov
das
adc
mov
andb
jno
lods
mov
mov
pop
out
lcall
xchg
mov
aas
pop
jg
pop
xchg
pop
jmp
adc
xchg
outsb
decl
mov
popf
addb
sbb
aam
or
cmp
or
rclb
jge
sahf
sub
cmpsl
push
or
mov
daa
fcomps
stos
jns
lods
test
popf
or
xor
fiaddl
pop
sbb
leave
lods
nop
jle
sub
stc
mov
and
jo
mov
pop
clc
les
cmp
push
decl
and
scas
lahf
adc
push
aaa
mov
fldenv
shll
and
mov
xor
jp
out
xor
xchg
and
in
stos
mov
lcall
inc
push
hlt
sub
imul
imul
mov
fs
mov
rorb
mov
orb
movb
pop
sbb
inc
out
xor
cli
sub
je
loopne
mov
mov
rcrl
movb
sub
mov
dec
orl
inc
and
fdivr
mov
push
cmp
rcll
ret
fiadds
fiadds
fs
mov
sbb
xor
cmpl
ds
cmp
jle
leave
lahf
shrb
add
fmuls
inc
xchg
leave
fwait
js
ljmp
and
inc
lret
lock
sbb
inc
dec
xchg
imul
es
mov
cs
xlat
scas
sub
and
fisubl
les
xchg
or
push
and
mov
jnp
lret
inc
sbb
mov
push
sbb
pop
cltd
push
ja
adc
mov
sbb
call
cwtl
inc
and
leave
packuswb
xchg
push
hlt
test
pop
pop
xchg
or
or
hlt
pushf
enter
jno
loopne
xlat
jg
scas
aaa
pop
xchg
adc
es
mov
clc
pop
push
subb
mov
add
push
jle
and
xchg
out
mov
shlb
push
cltd
xchg
push
dec
sbb
int3
xchg
lcall
call
sbb
sbb
push
lret
fcmovb
pusha
cwtl
add
inc
cwtl
push
and
lods
hlt
imul
push
les
xor
sbb
dec
js
and
rorl
xor
or
mov
mov
cmp
and
imul
aas
cmpsl
ja
ljmp
je
or
jle
add
imul
cs
les
lods
repnz
rcll
push
push
aam
push
stc
mov
and
mov
ret
add
mov
mov
and
jmp
rcrl
test
mov
inc
pop
in
push
lock
mov
int3
jnp
adc
jnp
repz
test
mov
xchg
pop
add
jecxz
add
pop
lcall
sub
mov
das
adc
arpl
fimull
dec
lea
xchg
and
mov
ja
cmp
call
pop
inc
dec
fcomip
or
pop
mov
add
push
mov
daa
std
inc
cld
xchg
sar
sbb
int3
jecxz
jns
js
in
cmp
scas
push
adc
mov
adc
cwtl
sbb
int
loopne
add
test
pop
inc
add
arpl
jmp
shrb
insb
loop
xor
aam
ret
and
sub
add
adc
outsl
mov
xchg
sbb
dec
lahf
adc
fldcw
ss
pop
fistpl
imul
jb
xlat
jp
push
inc
gs
sbb
pop
daa
outsl
nop
dec
xor
fmuls
mov
sub
mov
std
mov
sbb
or
into
xor
aam
rorl
xchg
sbb
scas
test
jb
sbb
sahf
cmp
rorl
repnz
or
and
and
repnz
sti
sbbb
hlt
in
adc
movsb
popl
xchg
js
and
lods
stos
mov
jmp
popa
adc
or
iret
xor
sub
jecxz
stos
imul
in
stos
add
in
push
sbb
outsl
and
call
inc
fs
lret
add
popf
aaa
daa
scas
push
int3
jo
jmp
adc
dec
inc
icebp
filds
xchg
and
test
sbb
out
mov
fnstcw
les
lcall
xchg
inc
xchg
ret
lret
jmp
pushf
or
add
stos
out
enter
jl
jmp
mov
jmp
xchg
adc
mov
subb
test
mov
mulb
test
movsb
fsubp
sbb
aas
and
dec
push
sbb
stos
mov
shl
mov
pushf
inc
cld
clc
jmp
fisttpl
dec
repz
mov
inc
subb
lods
scas
sbb
std
add
imul
lods
out
mov
mov
lods
push
inc
mov
xchg
inc
jne
lods
push
mov
mov
adc
rcl
clc
jle
jbe
mov
call
sub
and
add
sbb
hlt
add
adc
jecxz
mov
jno
in
sub
jae
jmp
pop
iret
mov
iret
and
mov
mov
adcl
mov
pop
xor
out
sub
es
cmp
sahf
add
jp
shl
lret
fincstp
lret
dec
xchg
push
out
dec
mov
xchg
cmp
mov
inc
push
cwtl
jp
mov
out
mov
jmp
dec
sub
push
sbb
jb
lahf
cmp
or
sbb
jmp
in
xchg
mov
lock
orb
cmp
inc
mov
mov
aam
clc
dec
jmp
scas
filds
aas
mov
xchg
mov
jecxz
add
pop
cmpsl
loopne
fidivs
mov
mov
in
sbb
dec
imul
fwait
pop
xchg
fmuls
xor
sbb
fsts
push
pop
xor
dec
jne
in
xchg
rol
xchg
mov
cmp
dec
adc
fidivrl
cmp
and
fimull
js
cmc
int3
or
xor
push
or
mov
je
cmc
pop
scas
and
sub
push
pop
scas
lret
aad
xlat
subl
adc
std
dec
movsb
movsl
iret
push
xchg
xchg
pop
cmp
jbe
es
mov
std
js
in
lds
out
mov
jnp
arpl
and
cmc
hlt
push
push
cmc
dec
mov
cmp
out
in
xor
lret
fs
pop
mov
clc
mov
sbb
pop
nop
scas
mov
ss
dec
sub
xlat
ret
adc
mov
jmp
iret
and
xchg
cwtl
jae
push
scas
xchg
inc
dec
iret
ror
mov
xchg
out
xchg
push
adc
test
mov
pop
cmp
mov
jmp
lock
loopne
pushf
or
push
dec
mov
aad
mov
js
or
movsl
arpl
mov
cmpsl
nop
xor
nop
ja
arpl
jp
nop
bound
push
outsb
sub
xchg
les
push
mov
mov
mov
rorl
test
xchg
inc
add
cmp
mov
pop
push
and
mov
push
xchg
sbb
loopne
lret
pop
neg
xor
shrb
jne
xor
nop
add
sub
cmpsb
inc
push
daa
pop
mov
fimull
dec
in
mov
inc
negl
push
loopne
xchg
sub
shr
adc
xor
rorb
jnp
cmp
and
das
adc
jecxz
inc
test
mov
mov
ffree
je
scas
cmp
fisttpll
add
fcompl
out
mov
lea
movsb
rcl
cmpsb
rcl
fistpll
cs
shl
repz
cld
mov
stos
fwait
ljmp
fmul
mov
inc
lds
xor
sub
popa
fisubrl
inc
mov
cld
rol
lods
jb
insb
je
mov
sti
pop
sbb
push
ljmp
dec
adc
inc
out
xor
sti
mov
or
stos
stos
sbb
sub
mov
rcll
xor
adc
test
mov
sub
inc
pusha
add
mov
data16
add
adc
bnd
push
out
xor
repz
ficoms
jns
push
cltd
jl
lea
icebp
addr16
jg
xor
pop
jp
xchg
adc
xor
fsubrs
and
scas
xor
mov
jmp
push
in
sbb
aaa
mov
inc
inc
push
jno
in
adc
int3
mov
cmp
fsubrp
mov
xlat
aas
xor
fidivl
and
cs
cmp
pop
cmpsl
or
xor
pop
jmp
dec
inc
je
popf
mov
rcrb
mov
sub
add
add
sbb
inc
jp
lock
pop
imul
aaa
or
mov
mov
jle
loope
push
xor
gs
jnp
cmpsl
inc
pop
and
mov
xor
cmp
inc
jae
mov
add
mov
dec
jl
pop
xchg
in
hlt
nop
ret
aas
sbb
pop
test
imulb
in
loopne
scas
popf
add
adc
xchg
push
mov
xchg
dec
in
jns
movhps
pop
inc
add
arpl
jmp
mov
les
ja
and
pop
push
jne
loope
adc
dec
shll
mov
xchg
test
mov
and
sub
mov
jo
in
faddl
in
jl
notl
loop
xor
test
getsec
add
divb
cld
cli
jns
loopne
lret
mov
mov
add
push
pusha
lretw
movsb
mov
pop
sbb
and
pop
mov
shll
mov
inc
adc
xor
cltd
popa
inc
add
test
cmp
ljmp
sbb
je
scas
in
ret
mov
aad
imul
jno
dec
push
insb
sahf
ljmp
xchg
jbe
jp
shrl
icebp
pop
dec
arpl
mov
test
inc
rcrl
push
jns
stos
mov
jecxz
popa
jbe
out
xor
insb
lret
add
out
and
push
cmp
rorb
sub
and
clc
push
mov
sbbl
fstpt
sub
fwait
mov
les
fs
icebp
fsubl
and
mov
xorb
dec
dec
mov
xor
xchg
repz
fcom
outsb
lcall
adc
sbb
mov
arpl
push
rol
divl
fsub
fmull
and
mov
sbb
cld
repz
mov
jp
pop
cmp
cmp
dec
bound
xchg
pop
aaa
jmp
xchg
mov
icebp
out
js
xor
aad
mov
push
testb
pop
pextrw
stos
cmp
xchg
lret
sbb
repnz
sahf
sbb
sbb
jmp
js
out
js
in
xchg
ret
jmp
sbb
mov
cld
push
pop
and
push
mov
out
dec
cmpsb
sbb
ret
dec
mov
add
sub
out
pop
mov
aas
sbb
or
and
xchg
cmp
jns
aaa
xchg
ss
sub
jae
in
gs
xor
aas
push
punpckhwd
lahf
in
jmp
or
push
and
scas
jno
pop
push
mov
ds
mov
mov
pop
xor
xchg
jle
lahf
out
int
cmpsb
std
fst
and
icebp
xchg
mov
sti
sbbl
rclb
insb
cmp
sahf
sbb
cmc
mov
gs
mov
lret
push
jo
xlat
mov
js
add
sahf
adc
neg
sti
in
pop
push
rol
pushf
imul
mov
push
and
imul
das
lods
outsl
pop
adc
jl
repnz
addr16
stos
lods
loopne
test
mov
add
mov
cmpsb
mov
and
sub
pushf
test
mov
inc
std
pop
movsb
scas
sbb
add
sbb
jnp
xchg
mov
lcall
fimull
int3
mov
frstor
cmpsl
out
adc
or
mov
pop
dec
xor
jle
fwait
mov
pusha
repnz
pop
xchg
out
cmp
xchg
test
shlb
mov
outsb
adc
jle
arpl
push
or
and
adc
dec
subb
and
test
mov
adc
dec
lods
test
scas
mov
pop
daa
out
fidivs
push
mov
decb
sarb
mov
sub
popf
sub
cwtl
xlat
ficomps
xchg
ret
cltd
test
cltd
pop
dec
xchg
cmc
sbb
arpl
int
packuswb
xchg
push
mov
bound
dec
popf
mov
insb
jp
cmp
jnp
sub
dec
push
insb
push
lock
sbb
sti
mov
or
lods
aad
mov
addl
fmuls
xchg
test
push
pop
cmc
jae
or
cmp
push
push
test
pop
stos
outsl
addb
sub
lods
jb
xchg
add
cmp
mov
dec
jbe
add
push
sbbl
cmp
cmp
adc
pop
jns
ret
xor
sbb
cmp
add
sub
and
imul
adc
mov
in
loope
gs
out
add
dec
jne
std
into
iret
mov
jb
fisttpl
or
dec
mov
fnstenv
xlat
je
jl
xchg
jo
inc
inc
adcl
adcb
or
push
mov
imul
xchg
pop
aaa
nop
data16
jg
test
jns
and
scas
cltd
sbb
push
mov
scas
iret
inc
inc
mov
push
mov
or
orb
repnz
pop
sub
adc
or
mov
loop
jp
lods
mov
add
into
cmp
inc
pop
test
ja
or
fwait
in
popa
test
aam
aas
lock
cltd
bsr
outsb
data16
mov
push
repnz
push
adc
mov
mov
fnstsw
pop
xor
mov
movsl
jnp
and
sti
xchg
cmpsb
sbb
push
int
push
data16
addr16
in
mov
push
mov
daa
data16
dec
cmpsl
cmp
andb
ficoms
inc
and
or
mov
lods
jo
fwait
iret
and
and
cld
pop
fdiv
shrl
pop
dec
mov
test
xbegin
sbb
repnz
cmp
add
popf
dec
pop
fistl
data16
mov
loop
int
mov
popf
shrb
mov
sbb
fldcw
mov
push
xorl
loopne
adc
loopne
int
ret
in
xor
push
pusha
add
or
cmp
add
js
loopne
enter
je
push
jo
push
pop
sbb
cwtl
cmp
xor
ja
daa
stos
mov
lret
int
and
mov
cmp
xchg
pop
inc
ss
mov
cmc
out
mov
sub
popf
mov
adc
mov
push
pop
mov
mov
or
mov
in
nop
test
test
cmpb
mov
push
movsl
mov
pop
or
fidivrs
xchg
pop
scas
pop
pusha
mov
adc
lret
outsl
stos
pop
jo
xor
es
ret
ljmp
in
xor
aad
jno
dec
fwait
in
mov
aaa
lahf
sub
inc
das
xor
or
or
inc
cmp
lret
jg
cltd
fmull
push
mov
subb
sub
and
cld
dec
stc
insb
bound
test
pop
std
mov
ss
pop
idivb
mov
addr16
scas
mov
sbbb
test
pop
push
adc
je
bound
into
mov
lds
or
fistl
cmp
test
jl
dec
pop
push
pop
inc
cwtl
mov
fbstp
mov
scas
adc
push
push
je
add
inc
adc
pop
pop
mov
jnp
scas
cld
insl
mov
xchg
xchg
out
cmp
push
inc
fdiv
ffree
inc
jp
jb
sub
jl
inc
movsl
xchg
and
fs
test
dec
out
dec
adc
cmpsl
jnp
stc
aaa
gs
sbb
sbb
mov
xchg
and
push
dec
ds
and
leave
cmp
and
test
sahf
jae
or
inc
pop
jmp
shl
dec
aaa
push
mov
outsb
cmovae
aam
frstor
cmpsl
mov
jl
push
push
mov
mov
icebp
testb
stos
lods
into
leave
repz
or
shl
cmp
mov
sub
or
in
mov
push
pop
cmpsl
add
and
adc
xor
in
sub
jg
jne
xlat
shrl
pop
std
mov
sti
jb
pusha
jbe
jle
jge
cmp
imul
pop
mov
and
loopne
stc
shll
mov
lock
push
ret
inc
ror
cmpsb
dec
movlps
test
cli
inc
xlat
enter
loopne
mov
xchg
push
xchg
and
adc
movsb
shll
xchg
jge
pop
jp
ret
scas
xchg
stos
dec
movsl
sbb
jg
mov
fcmovu
aaa
pop
movsl
inc
ds
in
mov
shrb
subl
ffreep
jnp
call
inc
test
cmp
cmpsb
lahf
rolb
dec
ficoml
add
std
inc
dec
cltd
mov
pop
ljmp
mov
iret
mov
push
and
cmp
pop
out
mov
imul
out
sbb
xor
pop
fwait
pop
sbb
int
sub
mov
cs
sbb
sti
jne
pop
mull
es
insl
ljmp
or
xor
push
test
inc
lahf
int
dec
dec
mov
dec
jmp
jb
fcmovbe
mov
jg
or
push
jmp
xor
push
mov
and
std
pop
outsl
cmp
sbb
clc
xchg
clc
notb
testb
je
enter
push
sub
fstps
clc
push
dec
sbb
add
sub
mov
sbb
ss
push
clc
fsubs
dec
mov
push
mov
or
adc
push
test
sub
in
jle
fidivrs
mov
aas
mov
push
arpl
sub
arpl
pop
or
mov
push
or
lea
cwtl
lods
adc
lea
in
sub
mov
jmp
pop
out
das
arpl
xlat
sub
rclb
pop
jb
fisttpl
or
cltd
push
icebp
out
pop
xlat
push
sub
pop
add
mov
ds
bound
cmpsb
addb
add
rcr
call
ja
lods
push
dec
aas
test
out
mov
mov
js
movsl
sub
js
or
pop
imul
and
mov
fldt
jle
cmc
cmp
and
sbb
fldt
icebp
ds
lock
call
or
in
ficoms
icebp
adc
fiaddl
mov
sbb
or
add
mov
addr16
xchg
sub
or
cmp
repnz
mov
cmpsl
pop
xor
mov
sub
and
jmp
cltd
pop
pushl
scas
aaa
sub
cwtl
in
xchg
test
and
jge
push
jae
sub
iret
lock
mov
and
fldcw
mov
in
jb
sbb
sbb
popw
mov
dec
ss
scas
mov
xor
in
sub
fwait
sahf
sub
push
ljmp
push
pop
subb
adc
test
cs
push
arpl
mov
mov
xchg
arpl
loope
adc
subb
cltd
cld
mov
imul
add
pop
idivb
nop
jp
or
roll
jno
xchg
test
xor
or
inc
test
sahf
pop
mov
outsl
out
and
cli
outsb
rol
lods
in
mov
ret
sbb
jg
dec
xor
xor
rorb
xor
xchg
popf
pmaddwd
imul
pop
aad
arpl
imul
jmp
ja
dec
shll
aas
fimull
jne
fidivrs
shlb
cmc
fsubl
sub
adc
mov
jmp
leave
push
out
sub
shrb
jbe
mov
pop
jo
out
sbb
dec
push
cltd
mov
add
fcoms
adc
xor
test
call
test
test
mov
lcall
pop
fwait
mov
push
or
test
dec
fmul
clc
jl
cmc
mov
jnp
je
imul
jmp
sub
fldt
ss
test
add
nop
push
cmp
dec
cmp
sub
outsl
and
jnp
mov
adc
call
mov
xchg
mov
cmp
decl
imul
daa
pushl
cmpl
jmp
mov
repz
enter
and
scas
ja
stos
inc
push
mov
push
gs
rclb
gs
sub
idivl
cmp
jecxz
sbb
push
in
dec
imul
daa
rorb
pop
shll
lss
pop
push
shrl
daa
cmpsl
jle
mov
push
inc
mov
or
add
in
dec
out
repz
lods
pop
rorl
xchg
mov
inc
addl
sub
jle
cmp
loop
nop
push
push
jg
or
or
jle
imulb
rolb
or
push
push
aaa
int3
mov
inc
leave
add
fsubrl
or
fmuls
jg
jns
popf
inc
iret
adc
inc
or
mov
outsl
push
adc
pop
inc
sbb
xchg
push
mov
lock
ja
add
lds
sub
sarl
jae
sub
cmpl
stos
sbb
cmpl
mov
pop
xor
pop
fs
cld
xor
shl
jg
jne
xchg
enter
and
leave
jbe
xchg
xchg
jp
mov
xchg
dec
lcall
cld
loop
fwait
pushf
inc
push
lock
mov
jl
shl
je
aad
mov
and
xor
shlb
sbb
cli
shlb
dec
lret
pop
xchg
loop
imul
outsb
pushf
adc
adc
lret
push
fwait
jnp
sbb
or
ja
mov
inc
push
cld
andl
js
jno
add
mov
cli
or
push
cmpsb
inc
adc
pop
ljmp
lds
mov
fadds
cmp
jl
mov
clc
push
or
xchg
push
mov
sbb
push
ljmp
xor
cmc
out
jne
pop
push
mov
dec
cmp
jmp
nop
fs
les
stc
nop
clc
mov
cld
xor
sahf
push
dec
xor
inc
ljmp
stc
call
mov
mov
popa
and
xchg
or
sti
xchg
aad
fs
sub
add
xchg
push
lret
xchg
lods
push
pop
jle
pop
sahf
ret
aad
jl
mov
std
and
jmp
cmpsl
ret
mov
xchg
gs
or
xchg
jecxz
repz
stos
aaa
fiadds
inc
ret
lods
mov
pusha
sub
mov
add
jle
xchg
out
jbe
nop
rolb
push
mov
xor
jle
cld
ret
push
and
in
inc
add
xlat
push
mov
aaa
cld
adc
popa
in
dec
push
int
inc
mov
stos
pop
xchg
or
mov
nop
sub
int
cmp
adcl
aas
shll
pop
ret
mov
inc
inc
clc
cmc
popa
mov
xchg
and
jmp
orl
int
in
fistps
jecxz
lods
addr16
in
adc
imul
sbb
push
or
lret
cmpsb
repz
dec
cli
int
in
mov
sbb
out
addr16
cmpsb
add
mov
sti
jl
push
hlt
adc
and
testl
mov
leave
scas
push
dec
add
pop
push
in
push
mov
sahf
cmc
dec
fs
iret
pop
sub
or
inc
mov
mov
mov
inc
test
xchg
pop
fwait
xchg
xor
int3
inc
cmp
or
mov
call
icebp
inc
fisubs
call
xor
outsl
daa
pop
popf
dec
and
std
add
cmpsb
jecxz
aas
pop
mov
pop
xchg
fadds
xchg
fbld
sbb
inc
jns
push
stos
cmpsb
adc
test
lods
adc
repz
xor
pop
push
pop
icebp
mov
test
cli
insl
push
pushf
or
inc
adc
daa
pushf
ljmp
xchg
dec
out
cs
scas
addb
pusha
dec
fiaddl
cmc
mov
pop
mov
push
adc
xor
je
iret
push
inc
push
mov
mov
mov
push
test
and
cld
mov
push
das
outsb
out
dec
scas
pop
jmp
leave
rorb
sahf
jns
insb
push
and
jb
int3
shll
leave
jns
xchg
in
dec
add
and
popf
dec
out
cmp
fbld
dec
xor
stc
xor
mov
fcmovnb
jecxz
mov
das
aad
outsl
incb
and
rol
imul
or
mov
inc
pop
mov
and
data16
sub
sub
push
cltd
or
xchg
jb
pushf
adc
push
mov
addl
incl
mov
mov
jno
push
or
lds
outsl
mov
xor
cmp
clc
ret
add
dec
pop
sbb
pop
mov
and
and
push
fsub
pusha
sub
into
mov
inc
in
popf
pop
rcrl
xor
rolb
fsubrs
adc
mov
loopne
ljmp
mov
insl
or
hlt
insb
mov
sbbl
inc
jg
dec
dec
cmp
xorl
addr16
ror
nop
cmp
sub
xor
hlt
add
push
add
cmp
dec
jnp
pop
out
push
cmc
fisubl
pop
repz
add
bnd
cwtl
pop
les
xor
outsl
xchg
mov
aad
outsb
pusha
mov
jecxz
rcrb
arpl
add
pop
lea
adc
in
add
loope
cmpsb
mov
je
lret
mov
lfs
test
aas
icebp
xchg
btc
and
cmp
cmpsb
cmpl
bnd
mov
xor
mov
sub
test
lcall
xchg
pop
pushf
out
dec
mov
ljmp
mov
movsb
adc
or
sbb
das
rclb
mov
ret
sbb
mov
inc
lahf
les
push
add
cmp
clc
popa
add
jnp
dec
cmp
insb
mov
aam
pop
dec
into
push
mov
sub
in
jo
pusha
xor
out
jae
inc
es
cmp
sti
pop
jbe
mov
add
lret
fnstcw
add
clc
pop
mov
loope
je
test
pop
mov
loope
push
jno
sub
mull
inc
push
std
pop
lcall
out
xor
push
arpl
mov
sbb
sbb
jbe
std
inc
inc
out
sub
jle
sahf
lahf
inc
mov
jl
scas
mov
movsl
out
lcall
add
incl
pop
adc
adc
std
out
in
dec
jge
fistl
in
dec
fisubrs
leave
ss
jp
adc
es
pop
jp
cmp
scas
and
rorb
dec
outsl
stc
adc
mov
xor
adc
ss
icebp
imul
mov
call
jnp
pop
adc
adc
mov
and
insl
ljmp
sub
xchg
pop
idivb
daa
pop
roll
loope
jmp
stc
scas
aas
inc
jb
xor
lret
add
adc
lods
mov
push
push
jns
pop
mov
jg
arpl
jns
in
mov
out
mov
loope
dec
aam
out
inc
pop
stc
dec
lds
pmulhw
mov
xor
fidivrl
subb
mov
mov
dec
in
cmp
sbb
sub
dec
lcall
adc
sub
popa
nop
sti
xchg
sbb
rorb
adc
addl
jns
adc
and
out
push
aaa
ss
sbb
popl
push
jne
mov
cmp
pushl
push
call
pop
sbb
lea
inc
mov
jle
arpl
and
pop
call
filds
into
or
scas
mov
stc
jmp
aad
lahf
out
push
aam
negb
es
sub
sub
in
lcall
ljmp
lahf
lods
mov
sbb
je
cmp
xchg
mov
adc
cmp
pop
aad
scas
out
add
mov
push
rol
cwtl
mov
mov
jecxz
dec
sahf
jno
call
jp
pop
gs
fcoml
decl
repnz
scas
xchg
test
sbb
lods
addr16
scas
cmpl
aas
xor
gs
add
lea
mov
frstor
dec
ljmp
gs
cli
xchg
leave
adc
lcall
insl
cwtl
icebp
xchg
iret
pop
sbb
inc
dec
pushf
xor
sbb
das
inc
js
dec
jns
div
pop
movsb
cmpsb
es
shrb
in
mov
xor
daa
ja
adcb
outsb
fs
pop
add
in
je
xlat
aad
xor
cmp
push
cmp
lret
push
xor
jle
xlat
outsb
add
cmp
push
stc
push
xlat
fwait
pop
push
push
cltd
or
lock
and
ficoml
mov
es
jnp
loope
int3
gs
rorl
js
cmpsb
jle,pt
mov
int
inc
ja
pop
xor
in
mov
sahf
data16
and
push
xchg
ss
iret
cmp
cmp
mov
outsl
xor
ds
push
mov
mov
jae
adc
jo
test
mov
push
push
test
loope
dec
shrb
xchg
fisubrl
sub
faddl
roll
dec
test
lcall
les
cmp
xchg
cs
dec
or
inc
push
pop
cs
nop
xor
push
add
cltd
fdivl
push
and
push
mov
mov
into
xlat
stos
mov
jae
jp
inc
fldl
cmpl
mov
into
fcomip
dec
imul
sbb
pushf
jle
movsl
push
sub
cmp
and
cli
lret
cmc
sti
push
xchg
xchg
imulb
aam
cli
enter
out
and
jge
mov
pop
mov
dec
cmp
daa
xor
xchg
inc
dec
pop
gs
cmp
loopne
test
xchg
lods
nop
mov
cmpsl
lea
xlat
jl
inc
xor
insl
xchg
dec
xchg
mov
sub
cltd
in
notb
pop
lods
bound
imul
xchg
xchg
cmp
mov
and
pop
sbb
jge
aam
mov
sub
das
pusha
mov
shlb
jg
outsl
mov
xchg
add
or
pop
lcall
sbb
jae
nop
or
icebp
mov
addb
sbb
push
or
popf
pop
imul
popf
jmp
jns
shrl
sbb
outsl
mov
repnz
xchg
icebp
aaa
call
lods
dec
or
inc
lods
inc
pop
jg
cmp
arpl
xchg
out
cs
insb
ja
lret
gs
pushf
rorl
loope
push
xor
mov
mov
call
inc
fbstp
sarl
sbb
jno
bound
imul
hlt
cmpsl
dec
xchg
outsl
xchg
xlat
fs
test
mov
ds
xor
insb
pushl
jg
les
aam
cmp
test
dec
jmp
sti
movsl
adc
pop
mov
arpl
pop
jmp
pushf
es
inc
add
ss
xchg
mov
shrl
nop
icebp
test
pop
dec
xchg
mov
push
jbe
out
pop
jmp
adc
loope
push
ja
jp
adcb
repz
imul
ds
dec
push
subl
mov
pop
rcll
sbb
push
xchg
push
ja
xor
cltd
clc
push
mov
jecxz
pop
mov
jp
mov
mul
rorl
outsb
stos
dec
adcb
cmp
scas
mov
sub
leave
subl
ret
insl
aas
jl
pop
cmpb
in
cmp
imul
pusha
loop
outsl
jg
jge
cmpsl
mov
sbb
lahf
mov
inc
jmp
fs
sbbb
leave
shll
sub
cmpl
cmpsb
loop
cmp
pop
iret
mov
movsl
fistl
lea
jno
sub
sbb
xor
dec
or
push
imul
cli
mov
andb
inc
fdivr
ret
xor
sahf
stc
push
gs
mov
dec
incb
arpl
test
xor
mov
push
fbld
add
xor
ss
add
fwait
clc
pslld
jae
cld
out
and
cmp
xchg
fimull
loopne
and
push
lea
inc
push
sbb
stos
ja
push
shlb
or
ret
and
addb
in
ljmp
add
cmp
insb
and
outsl
cmp
inc
ss
fisttpl
cltd
dec
je
or
adc
nop
xchg
out
mov
jo
mov
mov
mov
lds
mov
xor
sub
adc
movsl
mov
mov
dec
gs
xor
cmp
shrb
subw
test
xchg
pop
in
sub
jbe
mov
clc
popa
mov
inc
loop
jl
sub
jae
movsl
xchg
adcb
scas
les
adc
movsb
push
aam
icebp
adc
sbb
mov
jg
int
notb
jp
call
add
mov
lret
popa
jl
mov
cld
sub
cltd
addr16
lds
in
xor
ret
mov
cld
nop
xor
mov
push
lock
jg
repz
push
negl
testl
test
or
or
sbb
xchg
or
in
int
mov
fs
lret
into
cmp
mov
inc
fcomip
cmp
pop
push
test
imul
xchg
lret
lret
pop
dec
jle
dec
int
insb
lds
gs
or
sbb
jge
out
hlt
or
inc
hlt
inc
popa
and
ss
pop
sub
scas
add
adc
and
insl
int
icebp
pop
jecxz
pop
cmpsl
insl
mov
in
cmp
cltd
daa
mov
dec
dec
mov
mov
dec
pop
cmp
push
lahf
sbb
push
xchg
std
js
sub
add
jp
inc
dec
gs
xchg
xchg
sub
imul
cld
inc
lods
std
pop
sub
push
out
mov
dec
mov
ljmp
stos
mov
in
jns
adc
enter
cmp
in
add
cltd
rcr
into
and
and
mov
dec
mov
mov
scas
jno
lods
mov
inc
ret
xchg
movsl
sbb
push
and
add
cmp
and
fldl
mov
shl
inc
inc
sub
cmp
and
mov
insl
int3
lds
orb
mov
testl
es
out
fistpll
mov
aas
sbb
dec
mov
jle
into
inc
mov
inc
cmc
add
nop
fs
lret
mov
cmp
dec
mov
shrb
push
ror
stc
xor
rolb
and
xor
lds
rcrl
cmpsl
je
pop
sub
or
sbbb
insl
leave
mov
push
orb
mov
xchg
ret
call
gs
das
fwait
leave
mov
gs
out
xor
movsl
mov
cmp
sub
inc
lds
sub
into
enter
push
movsl
xchg
inc
mov
adc
iret
outsl
mov
movsb
out
imul
lods
xchg
jb
inc
shrb
adc
subb
aad
sbb
push
daa
cld
jnp
sti
and
pop
dec
sub
jne
mov
sahf
int
dec
xchg
ss
and
mov
std
mov
mov
mov
inc
popa
out
xor
lds
push
mov
mov
or
xor
popa
xor
andl
rclb
inc
xchg
out
jno
inc
andl
or
int
in
mov
mov
sahf
iret
push
mov
adc
cwtl
test
sbb
pusha
add
sub
mov
xor
add
ja
cli
stc
sbb
add
xlat
dec
ss
jg
or
sbb
hlt
imul
rorb
push
or
mov
lea
fidivs
mov
mov
sbb
mov
sbb
and
rcrb
fdivs
push
ret
fwait
or
out
xchg
out
cli
sahf
xor
cmp
mov
jns
xor
push
add
popf
lret
mov
xchg
scas
pop
sti
or
fildl
mov
scas
mov
inc
outsl
lock
inc
mov
popa
js
mov
sub
adc
mov
push
mov
dec
dec
mov
cmp
ja
lcall
ss
das
dec
push
jg
shlb
sub
cmp
out
into
outsl
mov
sbb
inc
mov
sbb
pop
sub
js
jmp
add
aaa
das
sti
lds
jmp
pushf
jmp
push
push
lea
lods
sub
jnp
inc
loop
xlat
sub
pusha
lock
enter
push
pop
dec
cmpsb
pusha
fs
xor
cld
hlt
pop
push
insl
fnstsw
cld
mov
and
jno
mov
add
and
push
cmp
mov
dec
arpl
xchg
int
test
jae
int
out
into
dec
sbb
push
lret
add
out
out
push
decb
xchg
mov
enter
andb
test
mov
xor
insb
and
iret
dec
pop
xchg
mov
in
inc
ss
pushf
stos
mov
cmpsb
les
sbb
in
push
dec
jg
test
dec
sub
mov
lock
inc
into
sar
flds
aad
pop
ss
ret
xchg
jmp
call
push
and
popa
jne
dec
mov
push
adc
xorb
mov
mov
out
dec
mov
or
repnz
in
in
mov
clc
lods
inc
push
je
sub
or
aaa
ljmp
jo
test
cld
cltd
cli
sbb
repnz
adc
es
shr
hlt
or
stos
ljmp
pop
sahf
sbb
shll
fs
mov
xor
fwait
dec
ret
jg
xlat
inc
sti
inc
xchg
pcmpeqb
or
push
mov
das
ljmp
mov
mov
enter
iret
shlb
addb
pop
mov
xchg
push
mov
loope
fcomps
int
ret
arpl
scas
sbb
cwtl
nop
jle
lock
push
leave
xchg
jno
lret
cmp
inc
insl
sbb
add
sbb
movsb
ret
shl
aaa
repnz
ficompl
clc
shl
jb
call
jbe
or
jne
mov
adc
out
inc
fcompl
sub
jl
dec
pop
mov
or
movsb
dec
mov
mov
mov
test
jle
scas
pop
mov
cmp
pop
mov
pop
das
ficompl
sbb
cmp
lds
sub
push
outsl
or
insl
or
mov
into
ds
jnp
lahf
xchg
test
inc
lea
cmp
mov
orl
push
pop
jae
inc
stos
clc
sub
xchg
mov
or
mov
sarb
jle
push
loope
fldcw
jge
pop
loope
or
mov
jnp
jbe
pop
add
mov
lcall
push
daa
jmp
pop
insb
sub
bound
sub
mov
push
cmp
ljmp
ljmp
in
xor
push
cmp
xlat
in
ss
mov
int
insl
xchg
xor
hlt
bound
cmp
sbb
lods
rcrl
mov
mov
xor
inc
sub
out
mov
xchg
push
inc
adc
scas
pop
out
jb
stos
sbb
mov
bound
imul
out
xchg
sbb
ljmp
sti
xchg
xchg
inc
xor
lds
push
fnstenv
push
xchg
jne
lahf
jl
repz
test
push
iret
enter
mov
push
xchg
imul
push
shlb
add
jae
mov
jl
pop
adc
dec
ljmp
fists
iret
xchg
and
sub
inc
jmp
push
repnz
push
in
pushf
hlt
in
ret
mov
inc
arpl
fildl
pop
clc
push
push
add
adc
push
mov
gs
cld
bound
cld
push
xacquire
push
fsubr
int3
pushf
xchg
mov
addr16
popf
fsubrl
imul
mov
fmuls
aaa
add
adc
shl
xlat
fmull
or
fsubs
sti
cmp
ret
gs
cwtl
fcompl
mov
or
outsb
adc
fmul
adc
fs
jns
mov
adc
pop
pop
loop
cmc
sbb
pop
jae
dec
pushf
sbb
sbb
test
inc
add
cmovbe
xlat
xor
mov
pop
mov
jo
lds
jg
mov
fdivp
push
dec
stos
cmpsl
inc
inc
pop
cmp
cmp
das
test
mov
or
ret
sbb
mov
filds
xchg
dec
xchg
mov
jl
lahf
cmp
outsb
or
out
dec
repz
repnz
cs
inc
icebp
and
mov
mov
xchg
shlb
out
movsb
jne
add
fmuls
add
pop
adc
push
mov
mov
xchg
mov
movsb
pop
mov
in
lea
push
mov
mov
aad
cmpsl
rorb
mov
aaa
ds
mov
mov
sub
sahf
sar
fistpll
xchg
pop
int
and
cmp
ja
mov
daa
and
pusha
insl
xchg
in
jle
adc
pusha
xchg
mov
jmp
xor
cs
sbb
sbb
lcall
les
sti
inc
mov
mov
sbb
jo
dec
push
dec
mov
mov
leave
fnstsw
cltd
inc
leave
addr16
faddl
loopne
mov
movsb
jns
inc
cmp
pusha
arpl
inc
mov
mov
xchg
lods
mov
repnz
cmp
shr
sbb
lods
lcall
xchg
aad
andl
iret
or
stos
in
xchg
sbb
lods
jae
pop
das
icebp
cmpsl
pop
sbb
lcall
inc
shlb
sub
js
and
int3
xor
adc
xchg
scas
add
add
mov
lods
inc
popa
adc
lahf
mov
scas
inc
roll
adc
filds
push
adc
ljmp
sbb
lock
dec
mov
aas
outsb
rcr
xlat
mov
js
lods
sbb
outsb
mov
sbb
push
lock
and
enter
pop
and
dec
pop
mov
mov
and
sbb
stos
out
or
and
in
and
sbb
xchg
push
test
ss
pushf
aad
push
rcrb
es
mov
xor
mov
stc
jae
loopne
inc
jecxz
or
ret
or
jp
push
jp
mov
inc
clc
loopne
sarb
bound
push
push
sub
and
scas
ret
mov
push
ss
mov
clc
dec
and
fdivrs
imul
mov
mov
inc
pop
push
int3
ljmp
pop
fildll
mov
cld
dec
xchg
xor
cmp
adcb
inc
mov
clc
xor
andb
out
pop
mov
orb
movsb
ficoms
enter
sbb
dec
mov
insl
mov
js
xor
repz
daa
pusha
xor
jne
or
jae
in
cvttps2pi
imul
repnz
mov
mov
jp
stos
xchg
es
inc
push
ds
sub
jae
or
adcl
xor
mov
adc
cmp
inc
push
stos
test
int3
mov
outsb
cmp
inc
xor
shl
mov
repnz
jmp
roll
loope
jp
jg
movb
adc
sub
cmp
inc
mov
outsb
outsl
xchg
mov
lock
scas
test
les
es
adc
repz
lods
int
sbb
xor
mov
imul
dec
jmp
jo
add
filds
imul
jg
jae
es
xor
lock
sbb
fwait
lods
adc
or
or
mov
jmp
inc
cmpsl
xchg
sbb
xor
nop
int
xchg
sbb
push
sub
adc
or
fldl
add
lret
pop
mov
cmpb
jne
cs
lods
jmp
into
add
pushf
addr16
imul
xchg
int3
sub
push
stc
lea
sbb
mov
cmp
mull
out
pop
outsb
xlat
or
adc
xchg
xchg
lcall
mov
inc
cmp
xor
hlt
add
mov
test
cs
add
fldenv
or
ret
out
test
jp
xor
pop
sub
call
push
addr16
add
aaa
mov
repz
add
sub
and
sub
rorb
cltd
jg,pt
scas
inc
mov
leave
push
int3
mov
inc
lret
push
sar
or
jecxz
arpl
in
popa
sub
outsl
popf
push
jne
xor
xchg
js
sbb
push
imul
xorl
mov
dec
add
in
jg
mov
push
arpl
js
fldl
shll
rclb
fimuls
dec
xchg
push
mov
pop
jb
push
or
repz
mov
mov
data16
mov
shrb
ret
mov
mov
and
sbb
cmp
dec
mov
cld
and
shll
pop
clc
repz
outsl
and
xor
movsb
lret
and
fcos
int
insl
aas
stc
aam
adc
mov
dec
insb
into
lods
push
push
jnp
js
movsb
push
rorb
add
adc
es
jp
jo
ds
mov
push
jae
fcomip
inc
or
xor
add
sub
popf
adc
mov
scas
les
mov
stos
cmp
stc
dec
xor
push
push
loope
scas
pushf
xchg
mov
pop
adc
out
scas
popl
and
pop
out
into
and
dec
out
shlb
cmp
flds
ljmp
aaa
iret
ret
push
js
in
xor
call
loopne
cltd
inc
cmp
lret
movsl
dec
pop
or
mov
mov
dec
movsl
mov
mov
add
and
test
ret
rep
cmp
lea
test
cld
out
subl
sub
inc
and
inc
mov
adc
xchg
mov
jg
mov
add
inc
nop
sub
mov
cs
push
push
mov
jmp
and
in
sub
inc
fsubrs
call
pop
mov
dec
jl
add
clc
outsl
add
inc
push
and
repz
dec
aam
negl
xchg
dec
pop
cmpsl
jb
fdivl
cltd
jno
inc
inc
mov
nop
cmp
mov
cmpsl
jno
sub
stos
sbb
push
xor
sub
es
inc
dec
jge,pn
stos
imul
mov
lcall
popf
test
push
adc
sahf
dec
pop
and
mov
out
mov
scas
je
popf
sbb
in
andb
aad
and
scas
scas
lds
sbb
jns
dec
js
xor
lcall
pop
pop
addr16
jno
scas
das
dec
sub
adc
pusha
inc
push
icebp
mov
inc
mov
or
lods
scas
mov
xchg
dec
push
jg
or
push
cmpl
movsb
cmp
fcoms
dec
pushf
sub
cli
sbb
out
lods
stos
mov
or
xchg
or
inc
adc
adc
dec
jne
imul
out
sbb
add
ds
jb
pop
cmp
js
pusha
pushf
cmp
js
mov
hlt
popf
imul
sub
nop
jb
xor
je
mov
shrb
jmp
mov
insl
mov
mov
nop
iret
push
dec
daa
scas
and
popa
mov
shrb
jns
mov
mov
inc
xchg
mov
dec
mov
das
inc
daa
movsb
ja
xchg
pop
xor
out
aas
mov
xor
inc
mov
xor
lret
dec
jns
loop
and
bound
jmp
out
mov
jge
inc
pop
inc
mov
in
mov
cld
data16
xor
das
cli
add
sbb
nop
sub
lret
js
push
stos
sbb
cmp
mov
pop
lods
jmp
into
cmpsl
repnz
jns
adc
outsl
into
or
dec
or
pop
sub
bound
into
cli
fs
cmp
negl
mov
out
mov
ja
sbb
sbb
out
push
xchg
mov
sarl
cwtl
rclb
repz
cmp
fbld
pop
adc
fwait
arpl
add
ret
pop
jmp
pop
sbb
sbb
cmc
iret
cld
mov
push
xor
xchg
mov
jo
scas
sbb
rorb
push
or
je
cli
leave
mov
aad
push
mov
cmpsl
jl
pop
push
dec
loopne
cmp
sar
jecxz
icebp
pop
jecxz
dec
pop
sbb
sub
push
mov
inc
dec
lahf
mov
fnsave
and
rol
enter
jbe
sub
push
mov
sub
jmp
das
push
mov
xor
cli
out
ds
xor
cmp
icebp
ds
jp
out
iret
clc
mov
pushf
loope
fcoms
mov
mov
mov
movl
lret
rclb
movsl
pop
cmp
push
clc
pop
aad
inc
ret
sarl
sub
jp
lea
mov
mov
and
rclb
shrl
pop
sbb
imul
fdivs
movsb
outsb
sbb
daa
outsb
out
xor
cmp
pop
and
dec
test
lret
int
cmpsl
ljmp
xor
mov
mov
pusha
or
pop
mov
sbb
pop
fildl
in
mov
imul
dec
cmpb
call
repnz
xchg
jge
and
test
mov
dec
fidivl
std
xorb
mov
out
popf
or
cmp
hlt
and
pop
xchg
les
mov
sbb
pop
push
in
lods
inc
fcmovb
decl
add
fistpll
cltd
aad
arpl
mov
sbb
mov
lods
ret
fs
and
and
js
xlat
add
mov
dec
mov
push
adc
lea
aas
imul
pop
int3
cli
fcmovnbe
mov
popf
incb
mov
sti
hlt
inc
inc
pcmpeqw
stos
hlt
pop
mov
jecxz
xchg
insb
sbb
add
dec
or
xchg
pop
xor
addr16
pushf
xor
push
mov
loopne
inc
test
je
outsb
xor
or
push
add
and
mov
inc
sub
enter
xchg
in
or
add
jmp
sbb
daa
dec
cltd
jmp
and
sbb
pop
mov
enter
inc
adc
xor
cwtl
jae
or
ja
les
cmp
popf
mov
jo
dec
fwait
shr
pushf
jmp
fdivrs
push
test
sub
imul
cs
jb
movsl
out
pop
sahf
mov
push
xchg
and
inc
push
test
push
mov
lods
mov
sub
pop
movsb
add
xchg
add
mov
xrelease
rclb
imul
pushf
insb
outsl
mov
cmpsb
testb
iret
int
pop
pop
jmp
jecxz
mov
add
mov
lcall
xchg
mov
stos
test
and
vmwrite
adc
xchg
mov
add
dec
pushf
xor
mov
xor
shll
call
pop
int3
pop
pushf
cmp
adc
aas
jne
div
xor
add
mov
imul
mov
or
sbb
out
mov
xor
mov
sbb
ljmp
xor
aas
mov
xlat
pop
data16
stos
andl
mov
jmp
cs
xchg
xor
shlb
mov
mov
je
fimuls
in
dec
jns
jb
pop
mov
pop
lods
test
push
test
scas
push
gs
repz
imul
mov
adcb
iret
addr16
ds
jb
inc
scas
sub
pop
sbb
jl
in
icebp
aas
adc
sub
sbb
in
xor
imul
xchg
cmp
stos
lock
aaa
movsb
or
mov
sahf
into
mov
add
call
lds
jle
push
cld
add
in
in
pop
push
cli
icebp
lods
in
and
fwait
or
push
stc
jp
adc
and
jmp
in
jns
call
dec
cli
sub
pop
rorl
sbb
jmp
mov
jb
pop
push
pop
inc
hlt
mov
test
jg
sbb
out
fwait
je
lock
lret
cmp
cli
or
mov
cwtl
cwtl
mov
mov
dec
cmp
outsl
push
pop
or
or
jecxz
xchg
sbb
sub
shll
and
ficompl
test
xorl
xchg
xchg
xor
jge
or
jbe
add
cmp
call
sarl
push
xchg
dec
imul
mov
cli
scas
xor
lret
aad
ds
mov
mov
repz
fcmovnb
les
cmp
push
movsl
inc
jne
outsl
or
andb
cli
daa
js
add
movl
mov
fcompl
jmp
pop
cmp
push
add
cwtl
int
cmp
adc
out
outsb
or
jge
cs
sahf
sbb
mov
sti
cli
fidivl
cli
or
cmp
icebp
add
adc
mov
push
xor
fs
cmc
shll
fisubrs
or
cmp
push
daa
call
inc
dec
repnz
mov
icebp
push
or
adc
mov
test
scas
aas
push
sbb
pop
cmp
cmp
shll
shl
sub
scas
leave
mov
cmp
nop
mov
pushf
aad
sub
lds
jp
pop
mov
dec
jae
pop
cmovno
sahf
aas
sub
aad
jns
outsb
cld
push
pop
js,pn
shrb
and
xor
sbbb
test
popa
mov
mov
push
idiv
dec
iret
mov
mov
cmp
ds
cli
jmp
lods
aam
mov
mov
mov
dec
ljmp
aas
lret
pop
lret
inc
out
xor
insl
fcompl
je
inc
xchg
imul
sbb
ficoml
jb
lcall
orl
fs
and
cmp
dec
push
pop
mov
cmp
bound
and
jle
iret
mov
cmpsb
lret
xor
fistpll
and
mov
sbb
jge
in
hlt
jmp
das
dec
add
or
test
jg
dec
push
cmp
or
lods
scas
push
xlat
arpl
xor
sbb
or
pop
fimull
jne
jb
arpl
gs
or
mov
lods
faddl
movsl
int3
stos
insl
hlt
loop
lcall
dec
xchg
test
sbb
sub
pusha
addl
ficoms
ja
clc
imul
dec
out
and
fs
jle
fucomp
cwtl
jg
or
push
push
lret
or
pop
pop
cmp
out
or
adc
and
aas
push
sbb
xchg
cmpsl
insb
lds
inc
xchg
inc
jno
mov
add
scas
idiv
lds
sub
int
push
and
jp
mov
and
push
sbbb
jle
inc
or
lahf
pop
inc
inc
repnz
popa
or
cmc
dec
and
pop
mov
pop
cmp
jg
and
lds
test
mov
lods
shlb
pop
mov
sbb
mov
inc
pusha
outsb
cli
push
outsb
rcll
jne
hlt
mov
and
jo
rol
repz
xor
xchg
push
les
dec
xor
or
pop
xchg
sbb
push
jo
ss
xchg
stos
dec
and
mov
adc
pop
adc
icebp
push
and
inc
xor
sbbb
dec
mov
or
enter
fldcw
xchg
mov
mov
lds
out
push
mov
xchg
inc
mov
sti
mov
mov
aas
out
pusha
push
les
jp
iret
in
jle
bound
xchg
icebp
mov
add
out
mov
xor
les
xor
out
lods
adc
xor
adc
orb
ljmp
sub
jmp
inc
inc
fmull
daa
mov
fwait
jnp
negl
arpl
dec
push
outsl
cmp
sub
aam
rclb
sti
push
pushf
inc
jle
lret
mov
inc
inc
mov
xchg
clc
inc
push
inc
fcoms
jge
iret
mov
cli
lahf
jo
ret
inc
push
mov
aam
aam
iret
pushf
mov
ja
lock
loopne
popa
pop
and
test
inc
insl
pop
dec
ret
ds
scas
je
imul
fsubp
insl
bound
insb
call
dec
int3
push
repnz
flds
pop
es
dec
push
hlt
fistpl
adc
mov
insl
frstor
dec
and
sub
push
mov
jmp
pop
cmp
xlat
popa
cs
loop
push
shl
ds
fsubs
icebp
xor
inc
inc
sub
fldenv
xorb
lret
dec
inc
add
pop
hlt
sub
adc
rcrl
xor
ficoml
add
repz
mov
and
jp
xor
jb
fsubrs
aam
mov
mov
mov
xchg
pop
xchg
push
cmpl
call
test
ljmp
xor
repz
aam
xlat
fldt
nop
inc
jmp
test
sbb
in
mov
int3
xlat
pop
add
xor
mov
dec
movsb
or
in
push
rol
popf
adc
icebp
clc
inc
sbb
cmp
lcall
mov
loop
push
into
mov
jg
dec
out
cwtl
or
xchg
je
dec
push
sbb
xchg
jbe
flds
ret
dec
fisubl
in
out
pop
mov
andb
and
outsl
call
lahf
call
and
iret
jmp
popa
stos
jb
sahf
movsb
inc
jmp
loop
push
mov
push
xor
or
out
fs
add
fs
jmp
lret
or
mov
cwtl
pusha
scas
dec
and
sbb
imul
lcall
mov
packsswb
cmpsl
ret
rclb
in
in
cmp
enter
xor
jne
adc
mov
hlt
imul
mov
mov
out
xor
inc
inc
icebp
outsl
sbb
xchg
sbb
xchg
outsb
and
repz
adc
das
jnp
xor
cmpsl
lds
add
insb
jno
xchg
int3
test
jbe
or
push
mov
mov
xchg
nop
fs
xor
lea
and
loopne
push
xor
into
push
mov
pop
pop
std
sbb
jb
dec
jnp
mov
test
push
lds
sub
imul
ljmp
lods
test
negl
lock
shr
imul
out
lock
sarl
in
test
mov
rorl
adc
cmp
in
mov
cld
call
daa
inc
stos
mov
push
and
insb
add
std
push
mov
shl
xorb
popf
sbb
leave
lea
push
test
mov
add
stos
mov
and
sbb
jmp
pop
pop
jns
and
xchg
nop
sub
filds
sarb
loop
cmp
mov
pop
das
inc
inc
jge
ffreep
jle
and
sub
pop
loopne
sbb
mov
popa
push
lods
xor
cmpsb
inc
aam
aas
mov
sbb
lock
or
cmp
xchg
xchg
cld
dec
lock
pop
and
repz
and
pop
jne
jbe
mov
addl
inc
pop
mov
pop
outsb
adc
clc
push
scas
adc
sub
jle
and
fstps
lock
mov
mov
mov
pop
test
cmp
mov
fs
mov
xchg
in
adc
sahf
int
xchg
lods
pusha
pop
and
adc
cmp
and
dec
sti
movsl
sub
popa
xchg
sarb
aam
mov
nop
int3
mov
inc
mov
dec
loope
xchg
add
inc
mov
sub
aam
add
mov
inc
mov
pop
sbb
add
mov
push
daa
mov
mov
sub
pop
push
mov
out
jg
mov
rorb
test
js
mov
jmp
mov
mov
mov
sbb
jnp
jae
add
sub
stos
popf
sahf
lahf
out
aam
popa
out
sub
std
mov
aas
andl
ss
popf
out
add
pop
pop
imul
insl
adc
sbb
fcomip
fmuls
aad
xlat
movsb
or
push
and
pop
push
rcrb
or
loope
mov
adc
aas
std
mov
ljmp
sti
cmpl
sub
call
sbb
fbstp
mov
sbb
fxtract
pop
cld
ljmp
mov
shl
fdivl
jmp
push
mov
xchg
pop
dec
jl
test
lods
jmp
mull
cmp
push
aaa
jmp
es
push
jg
push
jnp
jge
div
xor
sub
xor
xchg
sahf
jle
ds
rcr
dec
and
rol
dec
pop
iret
pop
sbb
add
pop
lcall
mov
add
dec
mov
into
and
test
xchg
das
push
cmp
cmpsb
stc
test
sbbl
sbb
mov
xor
cmovne
or
les
pop
xchg
sub
leave
mov
jl
push
push
jns
pop
hlt
push
popa
sub
pop
outsb
pop
adc
mov
neg
jo
inc
adc
mov
lds
xor
and
aaa
xchg
xlat
mov
rolb
or
std
subb
jbe
lahf
cmp
push
mov
les
pusha
jl
es
xor
adc
push
pop
std
pusha
xchg
in
and
sahf
fimull
mov
arpl
sub
xchg
jecxz
sbb
imul
movsb
and
test
ret
inc
push
lea
add
in
pop
into
cmp
inc
mov
loopne
mov
cltd
jle
dec
mov
fld
jecxz
pop
fdivs
mov
popf
xchg
pushf
ljmp
fcoml
imul
push
xor
test
out
jae
jecxz
or
jp
mov
leave
mul
sti
and
lods
imul
push
shr
xsaveopt
mov
inc
fwait
mov
and
paddsb
lods
les
sub
dec
add
fs
dec
orl
mov
dec
push
add
leave
inc
cli
test
out
clc
rcll
sub
inc
sub
daa
leave
mov
dec
mov
es
mov
fstpl
in
jo
xor
ficoml
popf
testb
out
ljmp
jnp
jmp
lock
push
pop
pop
xchg
aad
out
and
jb
fst
jp
insl
ret
outsb
sub
ror
and
or
push
mov
popf
rclb
inc
lahf
cmp
shr
push
punpckhdq
xor
aaa
jb
push
out
pop
fwait
sbb
add
dec
ficomps
xchg
sub
std
xchg
paddusw
in
inc
lods
ss
inc
cltd
ljmp
inc
pop
rcll
ret
ss
mov
pop
ljmp
mov
pop
xchg
movsl
ret
insb
or
and
mov
pop
pop
xor
xlat
jecxz
subl
cmp
push
inc
shrb
xchg
imul
xchg
ret
movsb
pop
mov
and
xchg
xor
lret
sub
jae
push
xor
mov
jno
cmp
rcrl
loope
sub
push
rcll
loop
push
lret
sub
clc
in
addr16
mov
loop
jp
aaa
sub
dec
ds
push
pop
or
push
or
pushf
sbb
dec
cmpsb
mov
shll
movsb
jnp
pop
lret
ja
mov
leave
fcmovne
xorb
sbb
dec
fisubl
stos
sahf
mov
ret
daa
out
int3
jmp
call
inc
insl
lcall
jmp
cmp
movsb
mov
lret
imul
sbb
or
imul
push
mov
clc
rep
icebp
add
in
shlb
mov
out
inc
fisubrl
pushf
fmulp
enter
cmpsl
xor
ljmp
stc
jae
xor
imul
xor
loopne
cmp
xchg
mov
adc
leave
movsl
sbb
mov
dec
add
ljmp
fnstcw
xchg
enter
xchg
les
xor
push
cli
cmp
push
adc
lret
xchg
cmp
loop
xor
push
or
xchg
mov
push
test
loope
movsl
loop
cmc
push
sti
xchg
movsb
jnp
orb
jb
leave
pop
loope
xchg
mov
imul
arpl
ret
cmp
cli
push
out
mov
add
add
fldl
mov
shll
mov
push
sbb
sub
popa
sbb
jmp
sbb
push
adc
xor
pop
imul
inc
and
inc
push
pop
aad
push
and
push
mov
pop
dec
ficoms
xchg
clc
pop
sub
repz
add
repnz
ds
call
out
movsb
cmp
pop
sbb
test
jle
xchg
lods
test
xor
stos
dec
sub
jae
mov
ret
fdivrl
out
lcall
jg
sbb
sbb
scas
mov
cs
aad
data16
sub
mov
xor
adc
loope
cli
push
fcoms
xor
push
jp
mull
and
inc
clc
and
js
mov
xor
mov
inc
adc
adc
adc
mov
adc
mov
jnp
push
inc
mov
sbb
push
movsl
mov
pcmpeqd
out
test
pop
cltd
sbb
insl
adc
xchg
ret
sub
sub
cmp
loop
imul
mov
shll
shr
movsb
cmp
inc
lea
aas
movsb
mulb
sub
xchg
daa
daa
sub
in
push
imul
jne
int
std
lret
sub
cwtl
mov
xchg
inc
pop
lods
lcall
add
popf
inc
cld
ds
or
jge
cmp
cmp
jg
in
jecxz
mov
jg
test
arpl
cwtl
mov
lods
pop
pop
cmp
imul
in
iret
pop
push
nop
test
bound
insl
xor
popf
push
roll
in
push
jae
fstpl
pushf
cmc
and
loop
sub
ds
sub
icebp
enter
sbb
rol
jp
scas
icebp
lea
rcrl
mov
fisubrl
dec
push
xchg
and
mov
mov
das
jmp
mov
outsl
lcall
stos
cmp
xor
mov
fld
push
pop
js
ss
or
push
pop
lods
bound
xchg
push
rcll
ljmp
shl
addb
push
mov
jg
adc
shll
push
stos
test
sub
das
repnz
add
orb
les
push
outsb
ss
mov
imul
pop
xor
pop
mov
dec
sbb
loop
aaa
mov
out
data16
dec
js
xchg
dec
push
dec
xor
ljmp
call
mov
popf
arpl
iret
fcomps
ds
dec
xor
mov
aaa
lret
stos
sub
addr16
ja
xchg
popf
ret
push
pop
popa
jle
pop
testl
pop
add
lea
xor
and
add
mov
push
jbe
jns
push
sti
add
arpl
std
adc
cwtl
and
and
inc
cmp
push
mov
test
out
sbb
outsb
mov
adc
js
mov
rcr
pop
mov
push
mov
mov
daa
add
enter
clc
sub
adc
outsl
out
adc
xor
cmp
push
cmpl
les
mov
sti
dec
pop
insb
mov
mov
cmc
sarb
lret
dec
out
sbb
out
add
sub
mov
pop
xchg
pop
dec
imul
repz
mov
jb
out
addb
sbb
fwait
das
inc
adc
sub
int
je
fisttpl
fstpt
mov
pop
adc
or
fcomps
mov
fisttpll
mov
jle
outsl
pusha
scas
testl
xchg
jnp
cli
ljmp
sbb
cmc
xchg
or
ret
and
pop
xchg
xchg
sbb
mov
push
inc
push
sub
cli
gs
adc
lds
lahf
sbb
add
pushw
mov
jbe
and
xor
iret
jmp
push
mov
jae
push
notl
outsb
xchg
mov
xchg
pop
push
jne
lock
test
mov
jbe
sti
jnp
dec
mov
rolb
or
mov
mov
xchg
push
jg
stos
cmp
pop
mov
insl
xchg
fs
cld
aad
or
dec
sbb
pop
or
das
push
movsb
lock
cmp
ja
test
loopne
push
mov
push
sub
mov
xor
into
xchg
jmp
mov
fidivl
scas
push
mov
cmp
cs
fcmovbe
adc
add
and
out
inc
sub
rcrl
in
daa
nop
xchg
jmp
xor
pushf
or
aaa
xchg
cmp
cli
pmaxub
cs
dec
jg
jl
xor
and
sbb
icebp
mov
adc
xchg
xchg
in
fimull
xor
repz
aad
jecxz
ds
xchg
mov
fmuls
mov
popf
dec
incb
mov
adc
mov
fwait
lahf
add
sarb
jg
xor
cs
pop
arpl
fsubrl
mov
ficompl
and
pop
out
rcrb
xor
adc
in
lahf
xchg
loopne
jmp
add
pop
adc
scas
enter
push
jl
sub
mov
jb
popf
pop
adc
popf
in
addr16
ljmp
add
mov
add
sahf
jmp
pop
lds
cmp
jge
push
add
ss
loop
fwait
dec
inc
mov
hlt
lods
outsl
jne
cmp
and
jecxz
push
push
in
or
loope
xchg
loopne
test
push
cmp
xor
js
push
cmp
mov
mov
cltd
in
and
vmread
cmp
cld
fldt
pop
xchg
dec
dec
xchg
test
into
mov
mov
fildll
jl
sbb
mov
imul
mov
iret
stc
xor
jns
movsb
scas
cmpsb
sarb
fidivrs
push
rcll
ja
movsb
xchg
sbbl
test
cwtl
sarl
js
xor
push
in
fsubrl
xlat
pop
dec
inc
add
xchg
jecxz
test
es
jmp
dec
pop
loopne
in
pop
sub
push
mov
enter
or
int3
push
decl
mov
iret
or
in
fstpt
inc
xchg
add
addr16
mov
cltd
cmc
dec
out
icebp
jp
and
push
inc
imul
mov
jge
mov
dec
lea
push
lahf
adc
mov
mov
jmp
pop
arpl
adc
sbb
adc
es
mov
xrelease
aas
push
test
int
scas
push
adc
add
inc
mov
lret
cmp
faddl
cmp
or
pop
mov
inc
and
cmp
es
jnp
lea
xor
icebp
xor
loopne
jl
sahf
movsb
dec
lods
subb
pop
fnsave
insl
sub
fimuls
xchg
xor
loopne
lea
addb
mov
mov
push
cwtl
popf
mov
push
and
jo
adc
sub
add
lahf
jo
push
sbb
push
and
inc
cmp
out
jle
sbb
pop
adc
and
pop
jge
pop
inc
mov
ror
add
scas
call
adc
lahf
fwait
das
mov
dec
pop
dec
mov
fists
nop
lret
inc
add
xchg
in
loop
test
lret
and
sub
movsb
push
je
sahf
shll
pushl
cmpsb
and
inc
mov
dec
inc
push
stc
fcmovnbe
xor
push
push
dec
mov
sub
lcall
xchg
ja
lret
xor
adcb
xor
add
dec
pusha
sbb
adc
pop
test
sbb
xor
jo
sub
sub
sbbl
gs
inc
xorl
je
pushl
in
sub
cmp
fs
cld
cwtl
mov
xor
mov
aad
out
call
fsubrs
and
pop
iret
outsl
mov
mov
imul
test
push
fidivrl
neg
ud1
test
insb
scas
iret
mov
jg
push
push
ja
in
xchg
jmp
ret
pop
or
add
xor
fcomip
pushf
faddl
sub
or
je
out
pop
jnp
mov
cli
xor
cmp
push
push
jo
xor
sub
pop
testb
sbb
push
dec
ds
sbb
or
hlt
jmp
xor
mov
jp
mov
mov
sahf
xor
jg
sbb
mov
mov
andb
int3
xchg
xchg
jb
imull
test
iret
add
add
jle
addr16
pop
adc
pop
mov
aaa
fs
call
clc
xchg
popa
divl
sbb
jo
leave
jns
into
sub
jae
rclb
daa
aaa
jg
popa
insl
xchg
or
xor
ljmp
pop
adc
add
lret
sarl
and
jo
jg
loope
cmp
jnp
inc
mov
in
lret
jg
xor
dec
jg
es
fprem1
mov
mov
and
jge
jae
pop
cld
jbe
rolb
or
xchg
push
dec
ss
adc
sbb
je
imul
das
iret
inc
mov
pop
ss
xchg
mov
stc
xor
xchg
sbb
dec
fmull
lods
mov
ja
shrb
mov
jg
pop
dec
cmp
lods
shlb
push
lea
outsb
mov
dec
xchg
push
sbb
dec
pop
sbb
out
or
stos
out
mov
and
shll
jne
adc
fs
cmp
pop
outsb
add
lods
notb
movsl
outsl
cltd
pop
das
lea
ss
lret
lods
rcll
hlt
test
das
outsb
push
mov
xor
movsl
int3
cmp
pop
xchg
and
adc
cmc
call
adc
fstp
stos
fsubrl
cmp
inc
and
test
rcrb
xchg
and
jl
cmc
pop
cmpsb
lock
popf
mov
jle
andb
aas
fcmovu
and
fmulp
jns
rorl
ret
add
stc
fnsave
andl
jne
push
lret
popf
lret
inc
fidivl
inc
fucom
jge
add
cmp
inc
cmpsl
cltd
mov
pop
add
dec
cs
ret
xchg
rcr
popf
aad
adcb
inc
idivl
jb
or
and
mov
xor
add
push
repnz
sub
cmp
js
sub
and
or
mov
sbb
inc
out
xchg
lret
ret
out
dec
cs
sbb
lds
xchg
stc
xchg
lret
das
daa
dec
mov
pop
lds
add
pop
adc
ja
gs
mov
pop
sbb
and
jae
sbb
fdivs
ljmp
push
adc
into
aam
cmp
call
pop
push
clc
stc
stos
mov
jae
hlt
push
repnz
xor
lods
out
movb
divl
clc
cmpsl
pop
cmp
fs
cli
mov
sbb
insb
mov
int
ja
xor
adc
lahf
js
notl
xlat
popf
and
xor
xchg
mov
inc
stc
rcr
mov
dec
mov
fstpt
mov
lret
mov
test
imul
add
idivb
xor
mov
scas
fidivrl
lret
mov
adc
mov
inc
inc
shr
icebp
pop
movsb
push
xchg
cmpsb
popf
mov
mov
fwait
push
je
int3
ficoms
lods
test
adc
sbb
sahf
test
fmull
mov
sbb
mov
push
push
lods
divb
ja
add
lcall
fdivl
andb
call
out
mov
adc
add
sbbb
int
mov
cli
xorb
aad
and
ds
int3
sbb
fwait
mov
sbb
inc
sbb
inc
xor
add
xchg
lods
sti
mov
lahf
je
mov
fsubs
sub
lcall
and
mov
xor
lds
jbe
mov
test
sbb
mov
addb
mov
imul
rolb
inc
loop
mov
test
dec
mov
add
int3
cli
jmp
dec
adc
jne
add
inc
xchg
or
fstpl
push
shl
inc
rorb
ja
push
inc
fdivl
mov
xor
jecxz
dec
mov
xchg
movsl
fildl
pop
add
xchg
jo
leave
into
adc
adc
adc
mov
repnz
adc
push
insl
jge
shl
scas
fcoml
mov
iret
aam
xlat
mov
outsb
js
dec
xchg
ljmp
or
ret
pop
dec
pop
and
or
sub
test
jnp
mov
xchg
jbe
fsubs
or
jb
xchg
mov
fnstenv
cmp
je
stos
push
sbb
xlat
repz
jp
mov
fst
mov
mov
jns
fs
in
jo
movsl
ja
outsl
repz
nop
pop
xchg
movsb
jecxz
mov
push
cmc
imul
into
pop
jbe
inc
in
add
xchg
fildl
sbb
shrl
pcmpeqw
int
pop
icebp
push
jle
pop
mov
fstl
cmpsl
xchg
lret
push
dec
jmp
cmp
dec
loop
bound
xchg
mov
mov
jb
mov
adc
out
inc
inc
neg
mov
mov
and
scas
das
adc
ja
mov
mov
aam
outsb
subl
mov
sub
push
xor
pop
inc
sub
int3
jns
cmc
repz
adc
movsb
cmpsb
nop
xchg
out
scas
sti
inc
inc
loope
cmp
int
pop
adc
das
outsl
xor
jmp
sbb
mov
leave
xchg
inc
push
sbb
and
add
cs
divl
pop
or
xchg
push
loop
sbb
fs
ljmp
mov
mov
pop
mov
test
out
aad
sub
into
add
inc
inc
mov
adc
lods
ds
xlat
dec
cmpb
test
xchg
frstor
flds
call
imul
dec
pushf
iret
pop
push
test
negl
xchg
mov
inc
jno
jecxz
rcll
cwtl
aaa
inc
sahf
icebp
in
cmpsl
jb
daa
add
xor
and
mov
inc
mov
pusha
rorb
add
mov
or
lods
and
insb
sbb
mov
dec
cwtl
insb
aam
ljmp
xor
divb
dec
cld
mov
nop
push
jmp
fildll
je
xchg
push
sub
add
jo
fs
lret
int
add
mov
inc
mov
inc
cld
mov
add
stc
xor
push
push
jae
lods
cld
sbb
or
jb
cmp
or
pop
iret
fidivs
and
rorl
out
push
cmp
dec
nop
ljmp
jne
in
and
mov
adc
out
xchg
pop
jnp
aam
dec
mov
inc
jecxz
movd
xchg
jb
ret
xchg
adc
and
fwait
std
jno
insb
mov
dec
cmp
push
add
inc
insb
ja
sti
pop
xor
xchg
jb
div
jb
xor
mov
mov
push
push
sub
or
lret
push
iret
xor
adc
mov
loope
jmp
pop
pop
fbld
lcall
in
aas
xchg
inc
or
cltd
call
xorl
or
stos
hlt
push
frstor
mov
mov
inc
movsb
cli
dec
sbbb
inc
fcomps
lahf
icebp
mov
lods
mov
sbb
lret
stos
add
orl
inc
and
push
fidivs
in
push
popa
adc
fisubrl
fsubrl
dec
or
adc
das
flds
cwtl
stos
mov
fcomps
mov
mov
sti
push
and
push
cmc
jo
icebp
faddl
push
sbb
jmp
pop
shll
subl
scas
inc
in
scas
adc
adc
test
fwait
inc
jle
in
fwait
lods
sbb
pop
ss
xlat
sub
inc
jo
sahf
pop
inc
xorl
mov
insl
add
sub
out
test
jno
pop
lahf
inc
cli
repz
rorl
daa
mov
mov
je
add
data16
sbb
sub
add
ljmp
lock
cmp
or
sbb
loope
loopne
jns
adc
push
adc
ud2
fimuls
ljmp
int
and
pop
push
mov
out
adc
jae
xor
ja
mov
mov
leave
outsl
inc
cmp
pop
adc
mov
push
and
in
adc
fdivs
daa
arpl
jg
and
mov
imul
adc
out
repz
stc
mov
xchg
mov
jmp
addr16
sbb
enter
jnp
cmp
jbe
std
add
enter
sbb
out
and
leave
sbb
icebp
jne
pop
adc
xchg
fidivs
divb
xchg
xor
fcoml
xchg
adc
inc
gs
inc
loopne
shrl
jbe
push
fldl
mov
fisttpl
or
push
lock
inc
xor
mov
test
sbb
lock
mov
xor
push
ret
inc
scas
popa
sti
push
ret
ljmp
cli
outsb
stos
mov
mov
pop
clc
idivb
pop
inc
jl
leave
push
ret
mov
cmp
dec
sub
push
lds
movb
sub
push
fidivrs
push
imul
cltd
sub
sub
push
mov
popa
out
adc
fdivrl
cmp
pop
gs
ds
stos
stos
test
ret
and
and
mov
dec
pop
pushf
ficoms
mov
inc
xchg
daa
inc
push
std
inc
not
neg
or
cmp
fcomps
push
sbb
pop
lahf
sub
sub
pop
push
mov
sahf
mov
stos
pop
cmp
enter
push
mov
xchg
sub
adc
test
sub
jne
dec
sub
ja
sbb
sahf
ds
mov
mov
movsb
mov
xor
mov
dec
pop
out
mov
sbb
inc
pop
mov
jb
cmp
gs
pop
xor
add
dec
jnp
lods
cmpsl
sub
adc
xor
call
lcall
push
mov
sub
lds
out
fneni(8087
xor
inc
pusha
lods
test
pop
xchg
lcall
js
and
aaa
ljmp
pushf
sbb
out
lret
sbb
pusha
xchg
sbb
push
insl
loope
cmp
sbb
imul
mov
shlb
cmp
add
inc
jae
mov
arpl
pop
or
leave
xor
mov
hlt
enter
nop
adc
int3
fsts
sarb
setno
mull
mov
push
mov
jg
dec
sub
sahf
add
popf
push
sub
popf
adc
shll
and
mov
sub
cs
sti
out
stos
jns
cld
pop
xlat
call
insb
sub
cmpsl
pop
sbb
xor
pop
and
jae
scas
cmp
loop
mov
sbb
in
es
out
add
xchg
dec
jecxz
fcoml
jmp
sbb
sub
or
mov
lahf
clc
and
mov
es
add
mov
adc
dec
pop
pop
xchg
sub
mov
fmulp
test
or
mov
and
in
mov
out
pop
dec
test
cs
inc
cwtl
push
and
clc
out
mov
in
xor
adc
movsl
inc
sti
adc
js
data16
cld
loope
test
sti
jns
fstpt
mov
loopne
aad
outsl
jnp
sub
cwtl
jge
adc
stc
and
fidivrl
roll
imul
mov
sahf
jae
pop
push
out
outsb
push
xor
incl
and
push
or
push
adcb
cwtl
jb
adc
pop
adc
add
pop
cmp
and
xchg
sub
mov
pop
mov
jg
sbb
fsubs
sbb
jecxz
ret
sub
ljmp
jecxz
leave
loope
jle
sub
xor
or
or
int
leave
scas
push
jg
int
sub
shl
nop
movsl
lods
data16
lods
cwtl
out
jnp
aaa
jge
cli
cmp
cmpb
adc
or
popa
sub
imul
xchg
loopne
lods
push
cmp
pop
or
outsb
stos
aam
push
rol
test
fxch
fs
nop
jns
adc
push
lret
out
dec
inc
hlt
aad
pop
addr16
test
push
dec
and
push
aaa
push
jle
inc
imul
xchg
sti
add
outsl
or
jp
lahf
xor
test
or
dec
fmuls
mov
test
fstpt
enter
sub
xchg
sub
js
and
push
mov
lret
jnp
enter
test
lcall
mov
jb
jne
xor
les
lea
test
ret
loop
xlat
inc
xor
push
push
add
subl
push
or
jmp
sub
pop
cmp
scas
mov
imul
lahf
aas
imul
dec
mov
and
jb
inc
leave
pop
ja
rcll
push
stos
adc
and
inc
jecxz
jmp
shlb
aad
or
gs
out
pop
dec
push
rcrb
leave
dec
gs
inc
dec
dec
mov
mov
lret
mov
xlat
cli
jbe
push
jp
std
repnz
and
dec
fmulp
push
jecxz
scas
out
mov
jl
add
pusha
lds
push
mov
out
les
and
repnz
adc
or
lahf
mov
mov
clc
rcrl
mov
test
pop
je
pop
adc
cmpsl
cld
rcrb
mov
mov
add
mov
lods
test
dec
fstps
cmc
lods
cltd
lcall
pop
mov
mov
je
mov
sbb
in
jle
adc
sbb
outsl
pop
jmp
mov
xchg
in
int3
xchg
pop
lret
pop
sbb
ret
aaa
pop
roll
out
push
icebp
enter
mov
dec
inc
xor
cmp
cmc
push
mov
xorl
mov
xlat
inc
icebp
and
or
std
aaa
fs
jle
js
pop
addr16
push
adc
jl
jp
mov
shlb
outsl
mov
shl
rorl
cltd
clc
mov
in
push
dec
imul
daa
idivl
cmp
repz
scas
mov
pop
repnz
sub
pop
cmp
cmc
sbb
xor
int3
out
mov
in
mov
test
pop
push
push
inc
xchg
add
jge
jl
xlat
fisubl
data16
adc
rcrb
cmp
nop
push
ja
add
ja
jae
sbbl
cmpsl
test
stos
adc
mov
jae
in
loop
adc
ficoms
push
jno
sub
sub
push
lahf
into
mov
push
scas
or
adc
inc
enter
xrelease
add
mov
into
ret
mov
fisubrl
mov
pop
sahf
mov
int
sbb
lds
mov
sub
sbb
jb
sbb
push
push
push
imul
fwait
xchg
out
cltd
jmp
cmc
jmp
out
cltd
xor
sti
dec
lods
push
push
lds
arpl
pop
jne
cmpsb
popa
stos
mov
mov
fnstenv
inc
sahf
in
cmp
add
push
inc
scas
pop
fnstenv
xchg
pop
mov
mov
dec
or
mov
dec
outsl
jg
test
mov
mov
add
inc
dec
roll
cmp
shlb
add
mov
iret
into
push
add
mov
jb
add
jne
aad
push
mov
in
icebp
mov
rorl
pop
jp
and
push
inc
ret
mov
jbe
push
cld
xor
xchg
mov
les
aaa
inc
cmp
add
outsb
push
adc
frstor
mov
hlt
inc
mov
xchg
cmp
mov
xchg
test
xchg
div
popa
add
sbb
inc
sbb
adc
js
in
sbb
pop
in
mov
aad
bound
sbb
loope
pop
mov
sahf
orl
jge
cmp
and
test
loop
test
or
das
scas
ja
out
dec
and
sti
jne
clc
test
es
vpmulhuw
cltd
enter
jb
or
testb
test
pop
sarl
jo
arpl
aaa
rcrl
xor
adc
das
jmp
arpl
push
dec
test
dec
movsl
fwait
xor
lret
mov
cmp
cltd
jbe
adc
mov
xor
lcall
fistl
mov
mov
loope
and
or
in
mov
bound
pop
ret
mov
xchg
or
cmp
inc
and
popa
test
gs
inc
mov
adc
and
cli
test
nop
shll
and
out
je
add
pusha
mov
ljmp
push
mov
jns
push
and
test
aam
lret
or
sbb
xchg
dec
pop
and
sub
shll
stc
rolb
xlat
inc
lcall
add
adc
push
jge
pushf
lret
mov
pop
roll
test
mov
and
push
adc
stc
xchg
lods
cltd
sub
adc
int
sub
inc
push
pop
jbe
aad
push
sub
xchg
add
fdivrs
dec
mov
adc
or
mov
dec
mov
ja
aam
and
cmp
sub
iret
adc
sbb
add
mov
repz
jno
and
adc
mov
mov
in
add
das
xor
inc
pushf
jge,pn
pop
rcr
jmp
sbb
dec
add
dec
sub
flds
ja
insb
scas
sub
cmp
pop
imul
cmpsb
push
mov
sbb
xchg
pop
mov
test
jae
int3
cld
test
add
pop
fmull
push
mov
fsubl
and
xlat
clc
gs
dec
xor
or
ret
jno
sbbl
sub
xor
add
lret
sbb
fsub
and
ficompl
test
int
mov
push
xchg
mov
and
ja
rcrl
or
adc
shr
notb
or
xorl
idivl
repz
jg
push
lret
roll
in
inc
lock
dec
add
adc
adc
addr16
add
cmpsb
test
dec
sahf
les
ret
fldl
addr16
pop
ficomps
dec
iret
inc
out
jl
mov
test
ror
xchg
xor
mov
loopne
and
add
mov
jno
icebp
push
mulb
cmp
push
mov
push
sbb
or
push
sbb
jl
popa
out
ficomps
fwait
pop
enter
or
adc
aas
loopne
shrb
mov
cmp
fldl
cmp
xchg
adc
pop
fdivrl
pop
call
out
stos
pop
cmp
repnz
jbe
push
fmulp
and
lods
sub
jne
push
inc
push
sub
push
call
stos
movsl
pop
leave
aaa
enter
jmp
idivb
loopne
push
inc
dec
js
jno
sbb
leave
ret
inc
xlat
jecxz
call
xchg
fbld
xor
fildll
adc
jecxz
pop
mov
lret
mov
cmpsl
out
inc
xchg
jle
cmp
sarl
inc
pop
push
jae
js
pop
pop
divl
jb
aam
out
cmp
loopnew
aam
aam
rcrb
clc
xor
or
cmpsl
push
cmc
lcall
push
lea
clc
jae
test
pop
rcr
dec
jae
add
std
data16
or
dec
cmc
xchg
adc
pop
aad
sub
cmp
xchg
inc
fisttps
pop
dec
mov
pop
and
inc
adc
xchg
jmp
popf
fwait
cmp
int
ss
mov
cmp
jo
add
pop
js
mov
push
xchg
mov
je
cli
test
insl
es
imul
xchg
dec
je
dec
mov
mov
out
arpl
dec
xchg
lahf
cmp
push
outsb
cmpsl
and
pop
cmp
je
lcall
mov
pop
xchg
dec
mov
add
mov
aas
jnp
out
cs
fidivrl
dec
stc
mov
daa
out
jg
iret
sahf
add
nop
pop
shrl
xchg
and
jmp
mov
scas
in
mov
xchg
or
xchg
jo
sbb
push
lds
mov
push
mov
xchg
loopne
je
add
push
repnz
outsb
lret
xchg
call
lods
fwait
sbb
dec
fldt
adc
cmpsl
mov
stos
dec
inc
movsl
mov
fs
or
scas
sub
pop
jbe
fisubs
adc
dec
inc
lahf
arpl
pop
ficompl
pop
insb
pop
xor
stos
jmp
sti
ljmp
mov
xor
rcrl
sbb
pushf
out
mov
xchg
repz
pop
dec
loopne
cmpsl
orb
lcall
out
or
and
dec
inc
rorl
cwtl
add
popf
xchg
mov
jnp
mov
xchg
push
insl
add
js
repnz
or
adc
add
add
sahf
jg
inc
xor
pop
jecxz
hlt
xchg
cmp
cmpsb
jae
insb
sub
mov
fimull
xchg
sti
jle
scas
xchg
or
push
testl
mov
jns
imul
ss
int3
push
pop
enter
xchg
andl
ror
sbb
inc
sub
daa
into
adc
and
js
push
popa
sub
lcall
in
stc
cs
sahf
sub
cltd
or
out
lret
pop
lret
pop
inc
pop
in
inc
cltd
enter
jg
scas
jp
pop
clc
pop
aad
jns
icebp
push
cmpb
int3
push
aas
repz
imul
js
jge
mov
ss
ss
ret
inc
adc
adc
popf
iret
mov
shl
cmp
and
cwtl
jno
aam
cmpsl
lcall
test
aad
inc
imul
ja
ret
fimull
into
mov
push
sub
stc
inc
inc
xchg
jnp
out
insb
sub
add
xor
fdivl
xchg
ret
xchg
cltd
mov
les
push
cmp
lds
pop
outsb
int3
sbb
add
push
int
fs
xchg
add
push
inc
nop
cmpb
jmp
out
lods
aas
aad
jmp
pop
sbb
sbb
cmp
mov
mov
xor
lret
sub
pop
lahf
fildl
mov
iret
mov
jge
int3
mov
add
jnp
mov
push
adc
or
in
divb
lcall
dec
pop
add
fistpl
add
xchg
jmp
mov
lret
adc
ror
dec
and
cmpsb
cltd
and
aaa
fistl
clc
jne
cwtl
pop
xorb
adc
cmp
sahf
scas
scas
and
fsubs
and
sbb
xchg
and
test
orl
je
pop
nop
es
and
mov
fsubr
cmp
fucomi
mov
test
push
sbb
mov
inc
push
aaa
js
mov
xchg
adc
add
jecxz
lret
inc
sub
xor
and
cld
pop
js
and
sbb
aam
roll
dec
jae
adc
ja
outsb
cmp
loope
pop
arpl
jmp
push
lcall
jae
jge
mov
shl
xor
push
mov
outsl
sbb
jae
int3
pushf
mov
aaa
les
xchg
out
cmp
sbb
inc
loop
dec
dec
icebp
cs
xlat
cmp
xor
out
pop
enter
pop
inc
jb
addl
lods
xchg
mov
jae
mov
pop
push
fwait
jns
pop
mov
fucomp
loop
out
repnz
leave
enter
fsubl
sbbl
imul
add
mov
repnz
cmp
cmpsb
cwtl
mov
out
xchg
push
fisubrl
jge
lahf
adc
in
add
enter
lret
das
clc
jl
fbld
mov
cwtl
push
adc
xchg
add
popa
xor
ret
shl
jp
jae
popl
loope
sub
mov
lock
je
pop
test
out
or
leave
jo
pop
cld
repz
push
add
out
repz
push
popa
mov
fidivs
fsubs
lcall
sub
or
sbb
lret
test
sbb
mov
bound
std
inc
cmp
jns
push
pavgb
pop
pop
adc
push
insb
adc
or
sub
imul
insl
daa
out
adc
sub
bound
setge
add
push
dec
aad
add
xchg
dec
jle
cvtps2pd
mov
mul
add
rcrl
mov
sbb
cltd
mov
outsb
mov
scas
popf
test
xchg
adc
and
loop
jns
hlt
out
adc
add
shr
icebp
cld
push
add
es
pop
subb
mov
pop
movsb
shr
jnp
cmp
push
shll
mov
inc
movsb
ror
imul
mov
cmpsb
inc
fwait
mov
ljmp
mov
shrb
mov
xor
fnstsw
cmc
mov
dec
dec
push
xchg
pop
push
shr
xchg
sub
or
stc
mov
iret
pop
sti
cmpsl
mov
or
mov
icebp
stc
cmpsl
inc
int3
mov
subb
sbb
xor
pop
jno
mov
loopew
push
xchg
jp
cli
sub
icebp
dec
mov
adc
cmp
fcmove
add
js
mov
or
adc
ret
dec
insl
mov
js,pt
repnz
int3
cli
imul
je
push
jmp
shl
je
pop
shlb
xchg
jmp
or
push
lods
int3
icebp
aam
inc
xchg
or
add
ds
push
add
jge
or
inc
fwait
aaa
std
sbb
inc
out
mov
movsb
loop
out
cmp
icebp
push
ret
fwait
xor
mov
or
xchg
add
lea
fst
jp
push
pushf
fdivs
int3
push
pop
cmpsb
add
adc
in
bound
mov
mov
sub
lcall
push
adc
js
xchg
push
cmp
in
mov
push
push
ljmp
adc
mov
mov
xor
dec
mov
or
cmp
fs
fists
pushf
ret
idivl
fisttpl
es
sbb
cmp
out
mov
and
push
movups
mov
add
or
jmp
cltd
and
xchg
jge
iret
adc
add
js
mov
fmul
into
in
std
stos
fstps
fdivrs
mov
test
sahf
add
xchg
adc
sub
nop
sbb
and
repz
int
mov
loope
bound
mov
mov
mov
dec
xchg
loopne
sub
fwait
push
xchg
lea
mov
incb
aad
and
xchg
outsb
mov
cmp
cmpsl
ds
pop
jecxz
pop
sbb
or
sbb
lock
aaa
push
std
lock
gs
aam
xorl
nop
dec
aad
mov
inc
xor
popa
pop
xchg
testl
and
add
outsb
out
pop
sti
andb
mov
mov
jb
mov
int3
and
hlt
dec
fstps
loope
sub
hlt
and
arpl
rorb
inc
inc
clc
je
jnp
dec
dec
adc
outsl
cmpsl
jecxz
push
xor
nop
sti
xchg
mov
insb
xchg
js
pop
sti
cmpsb
mov
sbbb
mov
pop
not
ret
mov
test
in
enter
push
sahf
inc
xor
data16
dec
jnp
jne
jle
aaa
pop
mov
loopne
inc
or
jmp
rorb
pop
ret
scas
dec
inc
outsb
dec
add
pusha
mov
mov
std
xchg
pushf
push
lock
fisubl
dec
loop,pt
incb
dec
frstor
xor
sbb
mov
mov
cmp
repz
fs
add
lods
das
jmp
inc
sub
mov
cmc
cmpsb
push
mov
push
adc
scas
icebp
xor
adcb
cmp
sbbb
push
mov
cmp
sbb
std
pop
sub
sbb
int3
dec
or
push
inc
push
sbb
dec
or
mov
mov
cli
ret
hlt
bndstx
or
jl
mov
lret
je
pop
popa
imul
sub
sbb
mov
or
pop
ret
sti
lea
mov
fistpl
push
cmpl
bound
mov
jp
out
ret
xchg
cmp
jnp
xor
jbe
mov
sar
xor
aad
adc
outsb
lock
clc
cmp
das
cmp
stos
pop
cmpl
movb
rcll
xor
adc
xor
jo
sbbl
jo
mov
xchg
jl
adc
adc
fiaddl
cmp
pusha
xchg
and
cmp
lods
jmp
lods
popf
in
mov
addr16
mov
add
mov
push
xor
and
xor
push
subb
dec
lcall
dec
jno
inc
popf
hlt
adc
push
or
pop
gs
aaa
inc
and
fisttps
inc
pop
cwtl
jecxz
mov
xchg
imul
jns
insl
enter
sti
mov
mov
adc
pop
and
add
cld
fxch
cmpsb
scas
fbstp
loope
jp
and
movsl
pop
pop
adc
cmp
repnz
push
pop
dec
neg
mov
and
insb
addr16
sbb
aas
mov
repz
ror
mov
lcall
outsb
jb
dec
movsl
lahf
xchg
jo
mov
mov
inc
mov
sbb
mov
inc
push
cmp
mov
pop
pop
sbb
test
mov
jecxz
or
stos
adc
andl
add
push
add
das
xchg
and
fmuls
xchg
jecxz
pop
jmp
movsl
push
scas
lret
repz
sub
cmp
xor
movsl
dec
repnz
push
push
dec
mov
dec
and
lcall
mov
scas
test
mov
testb
stos
sbb
mov
adc
pop
or
inc
nop
leave
push
sti
xchg
sbbb
call
pop
mov
push
push
imul
mov
das
mov
psrad
fisubl
pop
jl
xchg
dec
mov
sbb
xchg
add
mov
cmpb
inc
dec
fs
push
imul
pop
mov
into
mov
pop
mov
jb
or
push
xchg
ljmp
mov
rorb
pop
adc
mov
mov
repnz
cmp
cld
sub
or
push
and
mov
dec
mov
rorl
inc
pop
mov
cmp
or
mov
jl
stos
jmp
stos
pop
jge
cmp
lcall
inc
out
imul
fistpl
mov
ss
adc
data16
scas
push
and
sbb
nop
dec
mov
popa
xchg
fnstcw
andl
xor
and
mov
xor
stc
sbb
imul
mov
mov
xchg
aas
pop
cli
out
mov
dec
jecxz
iret
xor
fcompl
push
and
test
test
mov
or
xchg
xchg
data16
shlb
out
sbb
idiv
std
mov
lahf
fimull
mov
notl
inc
divb
pushf
jecxz
add
outsl
int
cmp
pop
ss
cld
clc
mov
mov
in
or
adc
lods
stos
jecxz
mov
leave
pop
mov
jae
push
mov
sbb
dec
jbe
pop
adc
adc
push
pop
lea
loopne
or
pop
sbb
jecxz
sub
lods
mov
push
add
sbb
js,pn
psubd
repnz
mov
hlt
push
lcall
jecxz
dec
loopne
push
sbb
scas
loope
push
pop
je
sub
jp
jmp
lock
inc
pop
push
xor
lock
addl
mov
std
inc
jb
cs
inc
cwtl
in
fdivrs
gs
push
mov
lcall
aad
in
aad
xor
lock
gs
fsqrt
scas
mov
in
rorl
sub
push
test
mov
and
cvtps2pi
push
lods
xchg
adc
and
dec
js
cmp
aaa
das
mov
scas
iret
sbb
ret
or
xor
push
xchg
cmp
mov
adc
pushf
fnstsw
mov
xchg
fcomps
mov
mov
or
out
jne
xor
in
icebp
out
mov
movsb
in
mov
std
lea
fcoms
adc
imul
rcrb
cli
enter
sbb
push
cs
sbb
rol
bound
cmc
push
sub
xor
mov
inc
scas
pop
xchg
jo
mov
insb
jb
pop
push
push
shr
sub
cli
mov
mov
mov
jnp
fwait
jns
and
lds
sbbl
fnstenv
test
and
popf
xchg
popa
gs
fcoms
movsl
jbe
pop
and
ficoms
mov
imul
push
repnz
call
data16
mov
cli
mov
adc
dec
arpl
xchg
sub
push
fcomp
cmp
sbb
cmpsl
sahf
push
jne
add
into
xchg
push
xor
and
cwtl
mov
cmp
lds
movsb
cmpsl
dec
mov
pop
dec
pop
inc
mov
mov
test
test
repz
mov
mov
adc
test
cwtl
cmp
rcl
push
jg
subl
js
or
shlb
insb
mov
clc
pop
sbb
mov
mov
arpl
insl
adc
dec
xor
pusha
stos
xchg
loopne
rorl
out
cmc
lods
std
xchg
in
lea
mov
test
adc
mov
ret
testb
push
pop
push
scas
sahf
sub
bound
fdivr
cmp
ja
sahf
ss
test
sbb
add
adc
push
fs
scas
mov
fsts
addb
imul
stos
test
notl
es
daa
and
bound
mulb
aam
add
cmpsl
jge
jno
and
add
xlat
mov
dec
xchg
push
push
cmp
fbld
push
movsb
cmp
jecxz
xchg
jmp
xor
jnp
mov
lret
jb
fsts
add
and
cs
insb
xor
arpl
mov
enter
inc
imul
fdivrl
out
adc
fs
cwtl
xor
jnp
daa
pop
or
clc
mov
sti
idivl
loop
fidivs
lods
adc
jno
jle
add
push
lods
in
push
repnz
adc
push
push
mov
stos
jp
icebp
sub
lcall
sar
adc
fsubr
sbb
sbb
and
stos
xor
dec
test
pop
mov
in
iret
push
lods
daa
sub
push
stos
mov
adc
dec
dec
shll
cmc
in
mov
sub
lret
sub
xor
dec
lods
jg
int3
adc
js
sahf
lea
xor
inc
add
inc
mov
sbb
fchs
cmpsl
sub
loope
out
mov
inc
fnstcw
and
test
xor
jmp
add
push
add
adc
jo
add
lcall
scas
sbb
insb
inc
add
in
call
nop
pop
inc
dec
and
adc
mov
add
sbb
and
cmpsl
adc
lea
addl
adc
or
and
movsb
jmp
bound
ljmp
mov
mov
mov
push
jg
xor
jp
scas
sbb
test
or
repnz
pushf
push
sbb
mov
xchg
int
mov
sarb
arpl
aaa
aas
inc
into
cmc
enter
leave
shrl
cmp
fidivs
fidivrs
es
mov
push
jnp
mov
push
sbb
ds
out
mov
into
jnp
ljmp
hlt
jns
iret
jae
adc
std
xor
pop
clc
push
xor
and
jb
loope
push
jl
and
or
rcll
inc
push
mov
in
cs
and
insb
mov
in
dec
push
iret
and
xlat
loope
cmp
jno
xor
push
jge
scas
sub
iret
std
jmp
xor
sbb
shl
f2xm1
dec
dec
sbb
cmp
and
data16
and
repz
shr
push
in
lret
jne
adc
les
xchg
cmpsb
test
sbb
fcmovne
pop
adc
push
bound
repnz
arpl
loope
cmp
hlt
dec
js
or
clc
enter
hlt
aaa
mov
outsb
sar
dec
js
xchg
adc
sbb
jl
sbbb
lods
fadd
dec
loopne
out
mov
sbb
adc
repz
fnstsw
xlat
push
loope
mov
xchg
cmp
jmp
mov
loop
cmpsl
xor
dec
mov
jne
ja
shr
push
adc
cwtl
add
mov
xor
and
pop
mov
adc
dec
jg
mov
inc
icebp
orl
sbb
adc
add
das
inc
push
in
jle
testl
je
int3
jns
aas
inc
test
xchg
xchg
jae
or
add
aam
push
sub
stos
cld
and
lods
loope
fadd
stos
push
jl
inc
mov
inc
mov
ret
or
mov
xchg
xor
cli
lock
gs
and
mov
cwtl
mov
cli
test
or
pop
push
out
or
fstp
pop
fistps
or
lds
int3
addb
xlat
mov
popa
jo
mov
mov
xor
mov
sbb
int3
cwtl
fstpl
lret
fnstsw
nopl
cltd
mov
xchg
push
jmp
xor
push
mov
dec
mov
push
and
fwait
in
or
pop
add
test
mov
test
int3
ds
rcrl
fistl
ljmp
inc
push
xchg
out
mov
jp
mov
mov
outsl
or
xor
mov
jae
cld
adc
cmpsb
add
dec
mov
or
sti
push
rcrl
shlb
mov
xchg
cmpsl
lcall
cld
loope
ja
shlb
push
lahf
push
mov
push
xchg
push
add
not
inc
dec
fadds
aaa
dec
sbb
aad
cmp
mov
jb
fildll
sub
xor
jno
mov
pop
jmp
add
pop
addr16
outsb
mov
fisubl
movsl
nop
cmp
sbb
test
pop
cld
test
push
mov
sti
xchg
fiaddl
sti
arpl
sub
inc
test
mov
aam
sbb
fnsetpm(287
stc
jle
fldt
mov
inc
stos
stos
jp
mov
in
add
mov
int3
push
sbb
and
stos
add
fwait
mov
int
xchg
out
jns
cmp
inc
pop
or
in
inc
dec
std
dec
mov
and
pop
loop
sbb
dec
inc
std
sbb
add
pop
pop
jae
jo
in
js
mov
cmp
pop
das
out
scas
add
lahf
xor
pop
in
and
loopne
aad
mov
mov
fimuls
jbe
scas
xchg
int
in
lret
je
xor
push
rcrb
pop
testb
popa
or
xchg
push
pop
ljmp
jmp
jmp
jne
ret
ljmp
fucom
add
adc
call
add
adc
xor
and
push
ljmp
xchg
mov
xchg
in
mov
mov
sbb
in
mov
dec
adc
hlt
cmp
imul
fdiv
pop
test
shld
popf
xchg
mov
cltd
add
jb
xchg
bound
fs
push
push
pop
pop
mov
cmp
mov
adc
sbb
loopne
cltd
ret
pop
sub
mov
shlb
cld
fucomi
fmuls
rcrb
lea
jo
ja
mov
js
jb
in
mov
mov
decb
push
mov
push
pushf
inc
imul
mov
mov
adc
lcall
xchg
fists
fldenv
aas
sarl
fisttpl
call
outsl
lds
push
push
ljmp
inc
aam
pop
xchg
fs
das
ljmp
in
cmc
jmp
adc
sub
mov
repz
idivl
xor
pop
into
sbb
fistpll
pop
jecxz
adc
mov
adc
fs
fiadds
xor
test
fnstcw
sbb
insb
ret
sub
pop
pop
clc
fcompl
ficoms
sub
mov
mov
jb
push
xor
fstpt
cld
imul
xchg
lcall
push
sbb
inc
fsubrl
fdivl
sub
mov
jge
sbb
dec
in
fs
pop
orb
mov
xor
mov
scas
in
sarb
out
cmp
shll
stc
dec
add
gs
shl
cmp
repnz
dec
clc
mov
xchg
push
ret
fxch
lret
jl,pt
cmpsb
push
divl
imul
insl
lds
ljmp
dec
add
mov
push
outsb
shlb
outsb
mov
je
in
filds
aaa
or
jmp
sbb
and
pop
or
data16
lods
xchg
ds
int3
dec
xchg
out
pop
mov
out
das
push
mov
inc
in
xchg
outsl
push
add
arpl
sbb
push
and
sbb
nop
call
scas
add
mov
pop
mov
clc
or
fwait
jne
pop
jmp
mov
lret
push
lcall
and
xchg
push
fcmovbe
inc
testl
arpl
mov
aas
and
stc
mov
in
ror
out
lahf
lods
mov
fsubrs
jno
and
or
xchg
daa
jnp
test
push
push
pop
mov
fadds
pop
addl
pop
daa
lods
pop
insl
and
pusha
scas
dec
adc
clc
sbb
xchg
nop
mov
les
in
add
rcrb
scas
cld
js
xor
and
int
cmp
sub
xlat
outsb
add
cmp
mov
mov
int3
pop
lret
inc
movsb
xchg
cmp
xchg
jmp
sbb
fidivrs
dec
cmp
add
mov
push
fmull
dec
decb
cmp
mov
pop
cmpsb
pop
dec
les
je
ds
xchg
cmp
out
add
inc
and
xchg
stc
jne
cmc
out
inc
xor
addr16
xchg
inc
es
hlt
xchg
inc
pop
jae
cmp
push
pop
add
mov
adc
jle
fst
push
mov
sub
sbb
lock
or
push
xlat
mov
pop
nop
cmp
mov
push
sbb
inc
or
mov
cmp
xchg
notl
cmp
push
ds
sub
push
bound
push
mov
mov
xchg
daa
ficomps
in
and
leave
add
into
and
ret
dec
push
cltd
lea
iret
add
or
hlt
cs
fs
mov
push
fcoml
mov
lcall
jmp
dec
mov
dec
jge
mov
dec
push
rorl
shll
pop
fbstp
cmp
pop
shlb
jg
ds
jns
fbld
jg
inc
in
xchg
je
jl
jl
adc
test
and
cmpsb
int
pop
cmp
mov
jecxz
jbe
jecxz
rol
lcall
jge
add
add
add
cmp
sarb
inc
pop
add
pop
mov
mov
pop
adcb
je
shll
data16
gs
ljmp
les
adcl
or
adc
and
add
leave
popf
subb
loopne
fcompl
dec
lods
xor
jae,pt
dec
xchg
in
shll
repz
sub
jno
fimuls
test
lea
jecxz
xchg
or
lock
out
mov
mov
int3
std
xchg
cwtl
sub
mov
push
inc
pop
negb
dec
jl
insl
js
and
mov
jbe
sbb
jnp
lea
data16
pop
xchg
notl
xchg
push
scas
iret
push
into
js
into
in
dec
jl
fcomip
add
xchg
pusha
pop
push
arpl
cmpsb
pushf
repz
xchg
ret
sub
ja
adc
push
jmp
movb
sbb
stc
add
jge
push
dec
adc
pop
cld
mov
xchg
lods
ret
add
sahf
out
inc
mov
xor
leave
addr16
dec
jbe
js
and
addb
pop
sbb
jns
push
fwait
sbb
mov
xlat
mov
mov
mov
cmp
outsb
and
push
mov
mov
push
mov
popf
mov
sahf
js
and
fsubrp
movsb
pop
int3
xchg
and
sbb
push
mov
pop
mov
lock
fbld
cmp
cmc
cmp
imul
lret
daa
sub
lods
dec
push
inc
fldl
xchg
daa
in
inc
int3
pop
fdivl
cmp
out
dec
pop
xor
cs
mov
sarb
and
sar
addr16
stos
sbb
call
mov
mov
pop
sahf
jg
push
push
mov
jecxz
push
ret
inc
adc
pop
mov
or
adc
insb
cli
dec
decb
add
stos
dec
cmp
cmc
push
or
push
inc
inc
or
idivb
nop
sbb
mov
dec
std
stc
popf
xor
mov
cmp
in
nop
adc
ret
hlt
clc
insb
and
jg
rorb
and
stos
les
jb
ss
mov
or
push
jns
dec
mov
cmpsb
pop
scas
orb
and
sbb
pop
sub
push
les
sub
fstl
sub
sbb
mov
pop
adc
repz
push
and
mov
dec
xchg
push
jne
mov
and
outsl
je
lock
push
mov
int
sar
xlat
lods
fstl
clc
cmp
push
testl
in
xchg
pop
dec
cmpsb
jnp
xchg
add
loope
testl
sahf
loope
out
gs
xor
shl
or
mov
adc
and
outsl
test
loop
loope
pop
cmp
aad
xchg
stc
ret
fdivl
mov
jle
mov
stos
mov
mov
sbb
inc
mov
cmp
mov
mov
mov
mov
scas
xchg
js
cmp
les
adc
or
adc
cmpsl
fbld
fidivl
divb
mov
inc
xor
fwait
test
mov
mov
fidivrl
sbb
fsts
or
adc
jb
arpl
pop
fimuls
add
mulps
jl
lret
pop
mov
out
jo
cmp
xchg
imul
mov
lcall
cmpsb
fidivrs
incl
ret
cmpsb
scas
sbb
cmp
aad
sub
fucom
push
nop
hlt
roll
sub
fsts
mov
lcall
xchg
mov
or
xlat
std
ret
push
mov
loope
adc
adc
insb
hlt
xor
stos
mov
nop
fstps
pushf
pop
das
shll
cmp
unpckhps
imul
cmp
sarl
fistl
fisubrl
repnz
std
test
dec
xchg
mov
and
adc
xor
xor
lods
sub
jecxz
pop
mov
inc
xor
test
dec
imul
jmp
sub
push
les
mov
mov
jae
sub
inc
cltd
fs
mov
outsl
mov
and
xor
and
pop
lret
ljmp
mov
fldenv
test
shlb
leave
xlat
outsl
xor
cmp
je
push
mov
in
mov
popa
xchg
out
xorl
mov
push
push
mov
out
xor
sub
push
jle
in
xchg
outsl
cmpsb
push
test
fs
mov
lea
sbb
adc
adc
adc
ja
push
sahf
xchg
mov
push
iret
jecxz
xor
stc
fdivp
call
cmp
or
inc
jp
out
mov
shl
mov
and
jnp
jge
sub
call
nop
sti
mov
add
std
lock
jns
push
das
push
xchg
test
adc
test
arpl
pop
out
cmp
repnz
mov
inc
ds
fwait
cli
mov
jno
fdivp
adc
sub
mov
cmpsb
stos
sbb
cwtl
mov
outsl
xchg
test
pop
fistpll
xchg
sbb
dec
push
sub
enter
jle
ja
jmp
dec
jnp
lods
mov
dec
jle
test
sub
es
and
pop
movsb
xchg
bound
push
andl
pop
mov
ja
inc
adc
add
in
xorb
jle
cltd
or
jne
jmp
rorb
aam
push
mov
adc
mov
xorb
jmp
fcomps
pop
pop
jno
push
mov
cmp
aad
inc
jae
pop
sub
cmp
outsl
mov
jb
mov
cli
inc
imul
aas
mov
ret
mov
sbb
gs
rorl
push
pop
dec
std
data16
jmp
cmp
out
icebp
insb
mov
cltd
out
jno
jp
cmp
cwtl
jnp
or
stc
fstl
jl
push
shll
ds
adc
xchg
add
mov
daa
ljmp
mov
pop
xchg
out
cmp
xor
jb
add
push
mov
fwait
add
ret
pop
mov
cmp
out
or
cmc
out
adc
int3
xchg
jno
dec
sbb
ja
sub
push
fwait
inc
lret
popf
mov
inc
and
and
adc
add
xchg
pop
rcl
js
outsl
daa
cmpsl
cmp
xchg
movsl
pop
loopne
subb
stos
xor
mov
jecxz
xlat
lret
xor
sub
sub
sbb
mov
adc
mov
pop
fldl
inc
out
scas
es
dec
rcrb
js
mov
or
mov
decb
lods
cmp
scas
rep
xchg
ja
xor
out
inc
nop
iret
shrl
jge
push
daa
enter
mov
lret
mulb
mov
xchg
test
clc
icebp
mov
in
mov
fdivrl
stos
negb
xorl
push
mov
inc
xor
mov
xchg
out
das
imul
sbb
xchg
sbb
ret
int
mov
jne
fldcw
sbb
inc
sub
out
scas
decb
jb
int
sahf
jmp
lods
mul
fidivl
mov
cmp
push
mov
ljmp
sub
js
inc
out
repnz
jbe
sub
repz
push
jo
cmpsl
dec
call
notb
push
jmp
sub
push
mov
ret
mov
jns
shl
push
fxch
mov
adc
cs
push
outsl
pop
test
mov
lea
xchg
adcb
dec
push
and
lahf
ljmp
int3
xchg
inc
imul
cmp
xchg
mov
jge
jnp
sti
sbb
add
aaa
cmpsl
dec
mov
rcl
pop
dec
sub
push
scas
xchg
sub
add
mov
dec
ja
and
inc
dec
inc
mov
pop
loop
mov
mov
mov
and
int
mov
popa
or
mov
lods
ja
cs
mov
and
jno
in
pop
and
lods
stc
into
jae
inc
pushf
push
pop
imul
sbb
icebp
mov
mov
xor
fidivl
jmp
push
sbb
or
std
mov
imul
xor
call
les
mov
and
into
fnsave
cwtl
cwtl
cmc
push
push
sbb
cmp
cmpsl
sbb
shrl
out
shl
fidivs
into
pop
jne
jnp
lock
mov
inc
mov
sbb
fisubrl
cmp
add
push
xor
jg
jo
jb
xchg
mov
aam
jo
out
or
jle
sbb
clc
pop
outsb
xchg
pop
xor
mov
lods
stos
push
add
cld
xor
stos
xchg
pop
dec
mov
lret
adc
loop
sub
sbb
xchg
dec
add
or
inc
loopne
not
pop
jmp
xchg
bound
sub
push
inc
sub
fs
xor
and
jb
fwait
inc
shll
out
adc
pop
pop
fidivl
lea
and
and
and
sbb
int3
mov
cltd
sbb
adc
push
sub
imul
inc
inc
jmp
mov
mov
mov
addr16
mov
xchg
push
jmp
sbb
mov
fstpt
sub
out
lret
cs
ss
and
ds
cmp
dec
lods
out
andb
push
mov
xchg
data16
pop
or
pusha
push
movl
icebp
xor
mov
jmp
add
aad
lds
ljmp
jl
mul
inc
push
pop
js
mov
lods
test
out
sbb
es
lret
in
stos
sbb
loop
test
push
popf
xor
lock
pop
addb
sub
or
pusha
test
loop
jno
dec
dec
and
pusha
and
cmc
int
cmpb
jl
jb
pop
sub
or
sub
inc
fldcw
stc
inc
pop
or
data16
pop
and
enter
pop
mov
inc
sbb
jno
shll
jo
leave
jae
bound
lea
fnstsw
test
cwtl
or
int
lods
or
sub
add
std
bound
outsb
idiv
jg
xlat
adc
loop
movsb
jl
and
add
jb
loop
aas
not
mov
dec
fistpl
shrb
rcl
sbb
cmpsb
leave
push
push
lret
outsb
insb
and
adc
int
jl
pop
cmpsb
push
sbbb
test
mov
inc
cli
test
mov
pop
xor
movsb
test
jbe
outsl
fistps
daa
fdivl
loopne
mov
push
add
xchg
xchg
ljmp
jecxz
jns
pushl
xlat
or
push
xor
je
out
cmp
shll
pop
cld
sbb
xlat
in
cld
cmp
insb
jl
stc
mov
lods
mov
sub
jmp
pop
bound
adc
adc
push
imul
setne
push
xchg
or
mov
mov
and
sub
je
and
ljmp
call
repnz
adc
mov
les
mov
stc
jecxz
loop
std
push
lahf
mov
cs
aas
pop
push
pop
movd
mov
cld
ss
xor
pop
fnsave
loopne
cmc
add
fmul
leave
adc
sbb
add
jns
outsb
mov
hlt
aas
outsl
popf
cmp
mov
jnp
je
imul
mov
jno
xor
test
inc
aaa
mov
and
rcll
je
sbb
sbb
lea
pop
sahf
push
call
mov
or
fwait
pop
iret
mov
mov
sub
xor
or
jge
fdivl
add
and
push
dec
cltd
push
inc
mov
jmp
adc
lods
dec
inc
pop
shrl
pop
mov
test
roll
int3
jno
lods
jg
test
jnp
pop
je
inc
push
push
stc
scas
dec
bound
sbb
call
mov
in
pop
xlat
aas
sbb
mov
push
xlat
dec
cltd
sub
aam
jmp
aam
sub
mov
cli
arpl
and
jae
arpl
inc
push
inc
lods
xchg
or
and
mov
lret
mov
lea
fs
jecxz
inc
lcall
mov
lock
pop
cmp
outsb
adc
push
in
das
lret
cmp
jg
lods
mov
xchg
loope
adc
jae
xchg
ror
push
std
mov
ficomps
fdivrl
lods
sbb
jne
leave
sub
ja
push
mov
into
popf
jle
push
in
std
xbegin
cmp
lcall
pop
scas
je
xchg
std
daa
mov
cmpsl
scas
cltd
fistpl
pop
adc
pop
adc
je
sub
ficomps
dec
inc
addr16
and
iret
inc
mov
sahf
icebp
in
popa
fs
dec
mov
dec
insl
sbb
cltd
paddd
into
inc
adc
test
scas
sbb
aam
repz
mov
lcall
pop
and
cmp
or
arpl
add
mov
repnz
xor
sub
or
sbbl
push
mov
int
test
mov
ret
xchg
sub
andl
in
and
lcall
sbb
and
and
adc
dec
mov
out
lock
enter
nop
daa
inc
in
scas
add
add
shrb
push
in
push
insl
push
mov
test
fisubs
leave
sbb
lret
cmc
lahf
stc
lock
adc
lods
pop
lds
xchg
in
into
test
fsubr
mov
imul
popf
pop
and
jae
or
mov
xor
sub
mov
pop
sahf
enter
insl
jecxz
lret
pop
and
out
and
jecxz
les
jge
aad
dec
adc
cmp
rcrl
cmp
pop
call
add
mov
fsubrl
imul
xor
es
xor
andl
mov
into
xchg
xor
add
js
das
sub
mov
stos
daa
pop
sbb
inc
mov
aaa
jbe
lds
sub
mov
xor
and
and
inc
ret
pop
mov
lret
test
movsl
dec
add
mov
xor
jl
add
cli
pop
cmpsl
inc
into
rclb
mov
xchg
es
inc
mov
push
daa
dec
lods
ljmp
in
xchg
lret
repnz
pop
insl
shr
xor
mov
daa
shr
push
das
aas
cmp
xor
movq
add
popf
inc
call
push
lahf
inc
lcall
pusha
repnz
adc
xor
mov
jnp
and
ja
aaa
push
mov
fldenv
jmp
push
xchg
push
or
lret
arpl
sub
or
push
jno
jbe
mov
xchg
or
mov
aad
rolb
addr16
mov
mov
add
mov
or
pop
iret
sub
loop
outsb
mov
andl
mov
or
iret
mov
in
leave
push
je
mov
leave
push
stos
gs
call
cmp
jne
mov
pusha
cld
jg
mov
sbb
mov
aam
fnstenv
cmc
sbb
or
push
add
fidivs
mov
push
pop
push
dec
rolb
cmp
stos
iret
pop
les
test
out
rol
lret
ret
call
adc
or
cmp
inc
aaa
dec
jno
inc
bound
enter
add
scas
rcrl
mov
sub
scas
mov
sub
jns
pop
add
dec
fldl
repz
inc
cmp
adc
lret
mov
mov
mov
out
add
test
fmull
xor
jge
mov
mov
jle
dec
and
imul
loope
hlt
jbe
out
adc
es
cltd
jp
nop
xchg
xor
dec
lret
inc
loope
daa
into
lea
pop
test
out
sti
or
or
add
jnp
int
das
jmp
sub
cmp
rcr
and
rorl
je
jge
cld
notb
dec
dec
push
push
sub
xchg
cmp
dec
or
enter
xor
xchg
add
or
pusha
dec
cmp
scas
int3
mov
loop
add
lods
insl
mov
lock
push
inc
outsb
pop
cmp
enter
or
enter
std
or
sbb
pusha
or
xlat
iret
mov
xchg
jns
sub
cmpsb
and
std
dec
lahf
fs
dec
shlb
ret
loope
js
jo
test
mov
jb
lods
mov
adc
in
cmp
inc
ficoml
mov
pushf
lret
push
dec
push
jno
sub
cmp
in
imul
or
push
push
sti
pop
nop
pop
int3
loope
cmpsl
sub
mov
dec
gs
call
mov
jl
and
add
lret
or
gs
js
ljmp
out
sbb
adc
mov
inc
stos
lret
jnp
fstpl
xlat
aaa
mov
stos
nop
mov
rorl
jmp
lds
mov
scas
xor
pusha
dec
push
pop
mov
cltd
mov
std
fldcw
fldcw
repnz
daa
xchg
push
mov
adcl
xchg
dec
js
jg
mov
dec
stos
or
xchg
jb
mov
data16
das
xchg
adc
insb
xchg
popa
jne
mov
pop
mov
mov
xchg
shll
sti
inc
fildl
out
scas
cs
mov
mov
fdivl
cmc
std
sti
dec
push
dec
cwtl
adc
dec
pusha
in
stc
inc
out
int3
insb
aad
icebp
test
mov
add
push
dec
or
iret
cmp
xchg
std
popa
xchg
xchg
and
pushw
cmp
push
sbb
cmpsl
jg
xchg
pop
mov
in
jg
cmc
scas
pop
enter
cli
jbe
xchg
push
jns
push
jge
pushf
aaa
int3
sub
arpl
imul
mov
pop
jp
inc
filds
pop
sbb
jbe
fisubs
jmp
or
push
loopne
repz
or
and
call
inc
leave
xor
arpl
pop
and
divb
inc
xor
add
fdivs
sub
mov
xchg
sarl
jmp
icebp
ljmp
test
mov
mov
jne
sbb
enter
aad
pop
xchg
cmp
cs
sbb
sahf
push
notl
xor
lret
je
lcall
push
jecxz
imul
mov
mov
and
je
call
mov
out
pop
adc
pushf
sbb
dec
ret
jp
addb
jae
pop
adc
pop
inc
mov
sub
hlt
sub
cmp
mov
je
les
andl
lds
pop
idivl
ljmp
je
out
mov
push
insl
lret
mov
subl
add
sbb
and
aas
jle
mov
inc
push
repnz
xor
lods
pop
sbb
mov
jp
adc
xchg
push
adc
dec
sti
adc
or
imul
fistpl
ja
pop
leave
dec
repz
loope
enter
sub
xor
xor
add
pusha
out
out
sub
fmul
jne
sub
sub
ja
xchg
cmp
outsb
ljmp
inc
ds
pop
xor
sahf
and
mov
in
adc
sbb
cmc
arpl
std
push
jp
sbbb
add
jb
xor
jns
dec
adc
test
push
das
sub
std
cmp
or
pop
mov
xlat
jge
and
lahf
xor
iret
xor
jnp
mov
xchg
sbb
mov
add
aaa
das
daa
lea
jne
mov
js
jecxz
in
test
and
push
insl
aas
fcos
popf
jge
popf
jnp
daa
sahf
jmp
pop
add
mov
mov
pop
jmp
cli
test
popw
subb
sbb
pop
loopne
int3
mov
mov
jnp
cmpsb
lods
rclb
daa
xchg
mov
jb
fidivl
mov
sarl
mov
sbb
fistl
and
icebp
xor
adc
sbb
in
pop
mov
fbld
cmc
xchg
push
sub
add
in
es
xchg
and
push
sbb
imul
cmp
push
out
sub
mov
aaa
and
and
enter
sub
mov
flds
mov
lods
cs
and
repz
mov
mov
jb
jp
loopne
xchg
loop
jle
movsb
es
sub
stc
stc
inc
inc
mov
push
sbb
jecxz
jne
je
jmp
loop
xchg
orl
or
gs
loope
add
jmp
dec
jnp
push
or
inc
adc
xchg
shll
jo
fs
daa
shrl
shr
push
dec
dec
mov
out
xchg
test
push
enter
push
jo
sub
pop
outsl
inc
outsb
aad
sar
mov
mov
push
xor
push
enter
adc
lock
ret
push
gs
or
orb
insb
data16
imull
sbb
cmc
fisttpl
push
mov
pusha
movsl
loop
orl
data16
cltd
bound
stos
in
pop
aas
pop
push
inc
xchg
arpl
push
cmp
xor
pop
leave
in
pushl
pop
and
mov
insl
js
jnp
inc
pop
cmp
in
dec
push
xchg
mov
lods
pop
data16
adc
or
loope
dec
fdivs
imul
ret
mov
add
push
jne
mov
jbe
ljmp
cmpb
pop
pop
pop
add
push
cmpb
test
and
lods
and
std
dec
fcoms
push
dec
shl
in
xchg
xor
aad
daa
mov
aam
testb
daa
and
sti
sahf
or
imul
push
mov
sbb
add
fstl
imul
and
cmpsb
adcb
andb
movsb
sub
pop
aaa
rorb
push
scas
mov
enter
mov
call
ds
jle
hlt
jne
xchg
inc
mov
pop
or
dec
xchg
imul
lret
pop
jnp
in
and
sub
stos
cltd
inc
aas
lahf
or
in
pop
mov
dec
and
scas
leave
add
sbbb
add
sub
mov
arpl
cmpl
xchg
jbe
loopne
rolb
adc
std
fwait
cmp
mov
hlt
in
dec
dec
stos
xor
lret
xchg
sbb
pop
mov
or
xchg
sub
xchg
out
xor
into
shl
lock
roll
sahf
out
cmpsl
xchg
rorb
ror
js
xor
pop
sub
inc
jge
pop
out
and
mov
aad
addr16
add
jnp
xlat
rep
pop
xor
adc
test
enter
cld
pop
sub
pop
xor
ret
insb
jae
or
out
mov
mov
jbe
pop
jge
imul
iret
add
cwtl
insl
repz
jb
add
bndldx
sti
cmp
or
and
popf
dec
mov
lret
or
js
pop
jbe
jmp
push
inc
ds
pop
movsl
enter
or
lea
or
fistl
in
clc
lods
dec
and
push
jle
mov
sbb
sub
data16
in
cli
jmp
jno
fs
mov
adc
push
sub
xchg
inc
jle
aaa
mov
fs
cmpsb
loop
or
ret
xchg
ljmp
dec
mov
in
es
aas
pop
data16
sub
inc
sub
repnz
sub
adc
push
jae
xchg
dec
mov
and
mov
jae
cmp
xor
and
sarl
in
cmp
pushf
add
mov
jo
xchg
mov
pop
aad
dec
inc
jb
ja
adc
outsl
adc
das
lret
stos
and
jbe
orl
add
mov
xor
fwait
mov
xlat
cwtl
xchg
jnp
or
sahf
rorb
cmpsl
mov
mov
xor
xchg
mov
movsb
sub
cld
fisttpl
jbe
jge
cmp
sbb
in
call
xor
inc
andb
pop
imul
into
into
dec
or
cmp
stos
xor
fldl
jbe
sub
lock
mov
popa
lea
imul
jmp
mov
lahf
add
jle
jae
fistpl
sub
insb
xchg
lea
mov
in
jp
mov
aaa
call
aaa
jnp,pt
mov
mov
rorb
out
sti
cmp
mov
pop
sub
sbb
push
fisttps
call
test
enter
sub
push
xor
adc
loopne
xor
roll
inc
mov
ds
jecxz
je
jle
mov
or
jo
ljmp
cmpsl
adc
shrl
js
lea
mulb
sub
cld
repz
adc
ret
xchg
push
sbb
lock
or
fdivl
mov
xor
jle
imul
je
fidivl
or
mov
cmpsb
fisttps
push
push
vpshaq
xor
adc
pop
repz
imul
imul
pushw
pop
adc
mov
repz
xor
mov
push
shr
les
daa
cmpsb
call
test
jmp
ljmp
mov
inc
add
rcrb
jecxz
lcall
or
rorl
push
mov
fidivrs
or
push
sub
aas
ljmp
sbb
cmp
arpl
cwtl
popa
xor
roll
lahf
or
dec
pop
fisubrs
mov
add
xchg
mov
xor
out
cmp
sahf
mov
jle
into
xor
andl
movsl
mov
and
les
mov
frstor
test
fmull
cmp
inc
sbb
mov
popl
nop
xchg
jecxz
daa
push
mov
or
imul
inc
dec
int
mov
cmp
push
jmp
dec
push
dec
jge
push
aaa
and
sbb
sub
test
sub
test
hlt
and
pop
inc
leave
add
insb
insl
pop
dec
mov
lock
sub
inc
mov
push
pusha
imul
add
pop
add
sub
push
ja
jb
and
xchg
daa
sub
jp
aam
std
outsb
les
int3
sbb
es
xchg
stos
clc
pushf
or
arpl
adc
jle
mov
stos
mov
xchg
popa
insb
and
movsb
outsb
dec
jne
gs
mov
push
shll
push
push
fdivr
jne
sub
xchg
cmp
pop
sbb
lods
je
jl
mov
push
ja
int3
sub
cmp
cs
pushf
inc
in
popf
fsts
sbb
cmp
and
repnz
je
jb
jle
gs
cmp
cmp
jno
add
inc
lods
push
add
test
add
sub
xchg
mov
movsb
mov
aaa
loope
hlt
mov
mov
enter
stos
push
pop
ds
movsl
pop
mov
xlat
out
push
push
xorl
sbb
sbb
pop
mov
dec
insb
cmpsb
jnp
arpl
je
lods
or
or
insl
jo
lods
adc
scas
clc
push
xchg
vandnps
cmp
push
cmp
xchg
aam
aas
leave
xchg
mov
cwtl
inc
movsl
push
inc
adc
adc
ret
outsb
in
dec
xor
lret
movsl
xchg
push
fidivs
ror
push
jnp
push
and
sub
push
loope
loopne
sub
popa
sub
cmc
jnp
call
xlat
into
mov
cld
mov
cwtl
pop
add
mov
dec
enter
loope
jb
adc
adc
mov
dec
cs
bound
and
jge
mov
mov
cltd
test
pop
sbb
enter
jg
lret
data16
mov
mov
xchg
shrb
mov
aas
ja
cmp
sbb
andb
or
clc
dec
ds
test
fwait
pop
add
sub
lock
out
mov
in
stos
sub
sbb
hlt
shl
pop
test
or
xor
inc
jp
jl
xor
daa
xchg
cmp
stc
and
daa
sbb
add
sub
sub
movsb
lret
les
cmp
and
inc
mov
inc
fsts
jg
jne
ja
lods
pushl
adc
sub
pop
repnz
mov
dec
adc
fidivs
fnsetpm(287
outsb
outsb
hlt
mov
cmp
inc
fdivrl
pop
or
cli
adc
xorl
hlt
test
lods
mov
mov
push
nop
imul
push
mov
sbb
mov
jg
mov
cmp
enter
or
push
mov
fistps
push
int
bound
jb
pop
mov
mov
and
repnz
pusha
cmpsb
jbe
movsl
pushf
mov
push
mov
push
test
jbe
xor
sub
test
mov
inc
cmp
sbb
test
notb
lret
push
jle
xchg
ficoml
addb
aad
jns
insb
and
jmp
push
jmp
das
iret
int
das
rcll
jb
push
xor
add
jo
je
cmpsl
inc
pop
mov
jbe
jno
int3
dec
loopne
cmp
in
mov
loop
mov
inc
inc
lret
pusha
stos
sahf
leave
cmpsb
and
jecxz
popl
shll
mov
xor
pop
popf
in
in
pop
rcr
dec
ret
cmp
lret
out
sbb
stc
xchg
inc
pop
xchg
movsb
mov
rorl
xchg
call
adc
push
lret
gs
mov
lahf
mov
arpl
int3
jno
or
int
aad
fcmovbe
sbbb
dec
mov
imul
mov
or
fidivrl
sbb
es
cmp
ljmp
jno
adc
dec
mov
pop
gs
cmpb
enter
notl
sbb
outsl
xor
lods
inc
and
pusha
dec
sar
stos
sub
mov
pop
repz
mov
sub
jno
popa
cmp
mov
outsb
xchg
mov
sub
jg
xchg
pop
fsubrs
addb
mov
shr
xchg
mov
loop
es
mov
popf
or
cmpsb
mov
jno
mov
jecxz
lcall
xchg
fimull
aad
mov
cmp
cmp
add
mov
sbb
bound
sbb
insb
jae
mov
push
bound
cltd
outsl
outsl
mov
js
scas
or
ss
sub
popf
xchg
insl
iret
push
sbbb
leave
out
xchg
sbb
mov
in
add
jnp
pop
and
out
cli
cmp
push
lret
jnp
inc
inc
fdivs
mov
push
es
push
sbb
iret
jp
inc
pop
mov
es
pop
inc
cs
imul
sbb
and
arpl
ret
fsubrp
mov
and
push
sub
push
data16
xchg
roll
lods
repz
sub
jne
cmpsb
push
lret
out
ss
xor
sbb
adcb
jecxz
aaa
fidivrs
mov
addr16
in
mov
jp
clc
cld
in
push
pop
xchg
cli
add
in
fcomps
add
jl
stos
jecxz
xchg
pop
cmpsb
adc
fcompl
push
daa
push
xchg
jp
sbb
mov
push
xor
and
mov
push
cmpsl
das
inc
imull
test
into
sbb
mov
push
fidivs
xor
cmc
mov
aad
mov
jecxz
loop
ja
test
xlat
mov
jmp
dec
stos
test
repz
int
sub
aaa
mov
mov
and
sub
std
pop
adc
adc
fwait
xchg
mov
mov
dec
pop
test
aad
ficomps
push
or
adc
mov
aam
movsb
cltd
jbe
ljmp
jbe
loop
pop
cmpsb
bound
xchg
xacquire
ret
fs
mov
jae
testb
out
out
inc
pop
jp
jbe
or
xor
sbb
sbb
fwait
clc
mov
std
xchg
orb
ljmp
mov
add
mov
call
idivb
sub
mov
pop
mov
aad
fsubrs
adc
xor
lcall
inc
popa
cli
and
sub
cmpsb
dec
das
fidivl
xchg
lret
push
rol
pop
fnstcw
mov
adc
sti
mov
ja
push
pushf
or
sub
or
xchg
lret
adc
fwait
adc
dec
push
dec
adc
andl
mov
push
mov
lds
hlt
adc
push
dec
jle
cmp
add
js,pn
pop
sbb
outsb
bound
ret
and
js
xor
cwtl
pop
or
jl
push
pop
lock
mov
mov
test
insl
xor
in
cmc
adc
sbb
sar
cmp
imul
push
js
pop
jmp
sub
lods
or
leave
mov
fstl
inc
into
jbe
sub
mov
cmpsb
push
jnp
lahf
test
inc
sbb
leave
aas
inc
stos
testl
cmp
ja
outsl
rcr
inc
stos
rorl
and
cmp
dec
repnz
stos
int
repz
add
jno
xchg
or
andb
add
call
fbld
jle
rclb
loop
fnsave
and
cmp
out
and
rol
loope
sub
lret
push
aas
lcall
stos
iret
and
addb
push
scas
cld
lea
add
adc
out
imull
adc
outsb
cmovno
add
outsb
and
push
pop
mov
movsb
cmpsl
fldcw
adc
or
inc
pop
fld
adc
cmp
mov
push
daa
dec
and
inc
sub
xchg
jae
or
jbe
add
xorl
lea
pop
add
add
xor
dec
sahf
inc
aad
loope
je
xor
rcl
andb
xchg
dec
add
push
cli
sti
sub
sti
pop
out
jle
fstp
std
add
mov
mov
fistps
jmp
mov
jb
in
aas
push
ss
movsl
test
sub
pop
xchg
inc
lods
adc
ja
dec
xchg
xchg
jmp
push
rcrl
jns
jecxz
imul
dec
repnz
fbld
stc
test
stc
cld
sub
dec
dec
sarl
mov
out
jne
outsb
sbb
in
mov
add
adc
sbb
adc
dec
enter
push
bound
cs
imul
fs
les
jge
ja
jnp
fdivs
dec
ljmp
out
in
inc
stos
mov
xor
inc
mov
jno
inc
in
mov
xchg
fistpll
arpl
and
jnp
lods
xlat
xchg
dec
test
mov
or
push
pop
ljmp
lock
push
imul
pop
jo
js
in
mov
test
sbb
lahf
js
insb
cmc
mov
lret
icebp
es
lret
mulb
inc
call
mov
mov
sbb
scas
insl
insb
add
stos
mov
pop
jle
stos
pop
add
movsl
push
add
mov
movsb
xlat
jb
stos
out
test
sub
inc
mov
mov
std
jns
pop
std
daa
and
mov
jmp
cmp
add
cld
daa
sbb
shl
jbe
push
add
popa
mov
add
inc
imul
mov
into
cld
pop
or
aaa
adc
hlt
or
scas
shrb
inc
ret
sbb
dec
movsl
xor
mov
add
decb
cmpsl
test
add
mov
mov
in
pop
ljmp
lods
lret
dec
inc
mov
inc
fwait
dec
pop
imul
or
movsl
ret
lds
inc
push
lcall
fldt
clc
cmp
jns
mov
adc
cmpl
push
pushf
aam
rcrb
push
insb
xor
add
sti
stos
jge
inc
push
dec
loop
sahf
jge
or
or
dec
lret
aas
mov
jmp
inc
js
push
or
jmp
icebp
loope
fadds
xor
xor
sub
adcl
rorb
cwtl
push
sbb
fwait
inc
mov
out
sub
ret
scas
pushf
shl
add
repz
out
dec
insb
inc
pop
repz
dec
std
xor
mov
lahf
pop
dec
xchg
scas
push
adc
insl
mul
xor
les
mov
jg
bound
push
call
and
inc
sbb
xor
jge
mov
int
fisubs
push
adc
add
xchg
orb
imul
dec
xor
mov
mov
daa
sbb
shll
or
dec
cli
jge
cs
js
dec
popf
jbe
inc
sbb
test
jns
mov
in
fnsave
ja
ljmp
test
sub
jmp
int
and
mov
add
mov
xchg
and
mov
push
cmp
fsubrp
lods
lcall
inc
arpl
inc
fdivs
inc
mov
and
insb
addr16
xchg
push
pop
xchg
cmp
push
sub
repnz
push
push
ret
imul
xor
cmpsl
scas
fldenv
shlb
inc
fs
cmp
xchg
or
push
iret
adc
mov
loop
and
xchg
cmpsb
xchg
mov
or
cmp
push
pop
sbbl
inc
loop
out
sbb
pop
std
icebp
cmpsb
sub
push
xchg
xchg
in
sahf
lds
cmp
xchg
push
ficoml
stc
test
xchg
pop
int
mov
inc
loopne
jae
loop
xlat
pop
enter
inc
mov
iret
test
test
pop
scas
inc
jae
addl
iret
incl
mov
pop
lods
jb
jno
pop
mov
stos
dec
and
addr16
push
test
and
sbb
enter
adcl
xchg
cwtl
stc
sbb
in
xor
shll
cmpsl
bound
loop
pushf
jnp
jg
adc
inc
rorl
in
std
xchg
mov
and
inc
mov
xor
fiadds
jae
cmp
daa
cmp
aas
cs
loop
hlt
insb
cs
push
pushf
insl
ljmp
arpl
out
lods
cmp
or
xchg
mov
mov
out
dec
mov
sahf
push
insl
std
ljmp
or
cmp
sbb
cwtl
sbb
stos
cltd
imul
xchg
and
cmp
jbe
lcall
loop
mov
cld
cmpsb
icebp
jne
lret
fbstp
daa
das
xchg
scas
dec
bound
or
cmc
pusha
std
jg
int3
dec
andl
adc
rclb
adc
aaa
addb
mov
dec
outsb
jno
cmc
jmp
or
mov
jb
xchg
ret
imul
pop
pop
scas
jp
out
jbe
fldcw
and
aad
test
es
push
push
arpl
cmp
test
rorl
les
push
iret
loop
pop
mov
cmp
mov
sbb
mov
stc
cmpsb
sub
push
push
push
sub
push
ja
pop
xor
sbb
aam
jnp
add
out
mov
pop
mov
rol
mov
push
jge
jg
in
js
nop
scas
fstpt
pusha
xor
test
fistl
jae
sub
scas
pop
sbb
push
mov
xchg
stos
pushf
add
enter
mov
mov
xchg
es
mov
adcb
sub
or
inc
push
ret
push
mov
dec
dec
push
dec
pop
dec
pop
add
jns
dec
std
jnp
ss
loope
lret
repz
adc
or
js
fstpt
iret
dec
repz
in
add
cmp
pop
sbb
in
stos
mov
add
jb
mov
aad
mov
stos
xor
repnz
test
or
daa
test
pop
or
sbb
push
andb
fstpt
or
xchg
mov
pop
outsl
rorl
cmp
cmc
loop
mov
mov
std
ret
dec
adc
fwait
sub
cwtl
adc
pusha
mov
call
dec
inc
ss
mov
push
and
dec
mov
mov
cmp
fbld
adc
mov
xchg
mov
push
je
nop
testl
jge
mov
inc
sti
rclb
cmp
xchg
shl
xchg
xor
lret
ja
dec
pop
and
test
add
jae
out
out
mov
repnz
mov
cld
loop
dec
xchg
rcr
daa
sti
shl
and
mov
cmp
pop
xchg
imul
addb
mov
xchg
mulb
int3
sbb
call
lret
popa
cmc
push
mov
ret
negb
jl
sub
sub
fcom
int
sarb
rorl
xor
push
aas
lahf
imul
mov
mov
imul
pop
pop
cmp
sub
and
pusha
sbb
nop
pop
and
js
add
leave
fcomps
cwtl
les
outsb
ffree
stos
or
add
or
dec
fneni(8087
jo
xor
dec
dec
dec
adc
stos
push
repnz
push
inc
std
jge
js
add
push
xchg
push
jnp
data16
xor
in
les
outsl
ja
push
sbb
push
repnz
shl
dec
jne
mov
and
adc
mov
into
add
mov
arpl
push
xchg
pminsw
popa
leave
pop
ficoms
sarb
int3
pop
outsb
and
mov
and
loop
xlat
cmp
ret
insl
loope
mov
and
or
jo
cwtl
rcll
mov
dec
cmp
decl
enter
dec
cmc
ja
sub
stos
lret
insb
ljmp
rcl
push
adc
jns
sahf
mov
xchg
jnp
repnz
outsl
clc
fst
adc
call
jp
lret
les
fstps
subb
sti
xor
jnp
enter
jl
test
or
out
jmp
imul
mov
fsubl
mov
adc
cmp
mov
cmp
out
xor
xadd
xor
or
jle
jl
iret
bound
cmpb
jp
xchg
lds
ss
mov
orl
xchg
sbb
stos
adc
out
dec
pusha
gs
notb
mov
sahf
ljmp
cli
movsl
les
jae
sub
lret
scas
inc
stc
add
push
xchg
hlt
push
jg
negb
daa
mov
xor
cmc
aaa
sbb
mov
mov
or
push
fmull
outsb
cld
in
mov
sub
ja
pop
pop
cmp
xorb
inc
pusha
or
sarl
rolb
or
push
jb
icebp
es
mov
mov
mov
push
rclb
and
cwtl
push
mov
fidivl
mov
push
cwtl
nop
and
mov
shrb
pop
push
addb
xlat
mov
add
cmc
in
adc
adc
rol
sbb
ret
add
out
or
dec
push
cwtl
dec
loopne
jae
cli
leave
cmp
fs
mov
mov
fucom
xlat
mov
xchg
fadd
imul
cld
in
sbb
dec
testl
mov
push
mov
sar
xor
in
jl
mov
repnz
jle
mov
imul
push
pop
stos
cmp
dec
pop
cli
decb
mov
js
dec
mov
sahf
cmp
push
pop
std
daa
push
adc
fidivrl
sub
mov
dec
mov
idivl
cmc
mov
pop
cmpsb
ret
mov
insl
movsb
xchg
mov
or
std
add
into
shrd
sarl
inc
sub
push
jmp
xor
jbe,pn
adc
sub
jmp
dec
xor
push
push
sbb
mov
add
in
mov
insb
pop
fstpl
dec
ret
pushl
dec
or
ss
cwtl
lods
mov
xchg
aaa
mov
lret
xchg
test
dec
add
pop
xchg
pop
out
movl
inc
pop
cmpsl
jge
rorb
lea
pop
int3
sub
lret
xor
lds
or
shrl
xchg
pop
or
sbb
maxps
nop
scas
fisubl
lock
lock
mov
fidivrs
xor
add
add
int
lahf
sub
mov
lds
mov
add
lahf
mov
insb
push
in
lock
mov
ss
sbb
push
or
jp
outsb
push
imul
fmull
push
and
push
push
dec
mov
dec
sub
pop
ljmp
cmc
cli
test
ficomps
stos
xor
daa
inc
pop
adc
addb
ljmp
loope
fdiv
jbe
mov
jmp
in
pop
sub
fistl
rclb
ret
mov
pop
inc
test
jl
mov
lock
jno
movl
test
les
loopne
cmpsl
add
imul
mov
push
mov
mov
es
mov
leave
andb
push
jge
ret
lock
aam
mov
stos
sub
xlat
gs
lahf
pop
insb
aaa
test
leave
push
sub
mov
rol
outsl
push
fs
jl
push
jmp
inc
aad
jmp
clc
push
mov
adc
leave
sub
repz
xchg
mov
or
fsubl
jle
ret
mov
inc
and
cs
inc
sbb
cmp
mov
dec
inc
inc
xor
aas
xchg
movsl
rcrb
push
les
mov
mov
mov
insb
and
mov
lock
pop
sub
gs
mov
stc
in
dec
mov
lock
push
pop
or
iret
pop
lcall
mov
bound
mov
mov
jns
adc
stos
push
dec
fbld
mov
icebp
call
addr16
test
add
mov
push
clc
xchg
js
imul
sub
and
mov
mov
scas
mov
pusha
xor
pop
adc
or
xor
inc
cmpl
sub
data16
mov
aam
mov
sub
or
pop
js
inc
psubd
mov
pop
jg
push
scas
adc
push
clc
loopne
stos
scas
lock
and
inc
adc
clc
push
sub
test
das
mov
mov
adc
or
cmp
stos
inc
mov
shll
xchg
jae
sbb
xchg
popf
popf
hlt
dec
inc
mov
or
idivl
xchg
adc
or
xchg
mov
push
es
fyl2x
cltd
ja
pop
popa
add
add
shlb
popa
push
cld
and
dec
lods
xchg
jge
sub
mov
std
sub
ftst
mulb
xlat
insl
aam
jg
scas
gs
pop
jno
cld
pop
pop
sahf
xorl
div
cltd
inc
jmp
daa
jmp
pop
lods
loop
fld
out
sub
test
ljmp
adc
or
push
orl
push
cmp
pop
adc
movsl
fildl
jbe
sub
mov
pushf
xchg
fcoms
xchg
test
push
and
scas
push
dec
push
lds
mov
and
jae
js
mov
dec
insl
fdivrl
sub
ljmp
mov
xor
xor
rdpmc
out
loop
cs
ja
jo
int3
adc
dec
and
xor
test
mov
insb
sbb
mov
lcall
add
mov
aas
fwait
jp
int
pop
mov
pop
mov
movsb
incb
in
cmpsl
lds
mov
aas
cmc
mov
fs
out
push
stc
test
sub
inc
imul
jle
inc
popa
inc
sbb
lds
sbb
ret
mov
push
add
mov
pop
in
out
sarb
les
enter
lcall
mov
lds
jne
and
aas
or
pusha
push
inc
xchg
daa
subl
cmp
mov
outsb
fdivs
add
aam
sub
jp
mov
jo
xchg
cmp
mov
roll
adc
sbb
sub
in
pop
daa
pusha
xchg
sbbl
mov
jmp
fsts
test
jae
adc
ds
les
sarb
xlat
xchg
mov
jg
add
mov
ficoml
sub
pop
sub
sarb
les
stos
jne
xchg
and
pop
or
and
outsb
mov
push
repnz
ret
sbb
mov
pop
in
fldl
test
ret
js
push
pop
inc
out
sub
arpl
and
dec
mov
mov
and
pop
jo
xchg
ret
push
hlt
dec
and
popf
inc
jmp
sub
popf
and
push
cmpsb
ret
mov
or
mov
loop
insb
lea
jge
rcr
shl
or
xchg
pcmpgtb
scas
popa
sub
lcall
and
pop
jno
out
sbb
insb
fs
pushf
mov
sub
push
dec
xchg
sub
mov
mov
hlt
jmp
cmp
jle
cmp
sbb
lahf
and
dec
in
call
iret
leave
addr16
call
popa
loopne
arpl
and
push
imul
test
mov
dec
loope
scas
adc
cmp
and
mov
lret
mov
in
in
dec
enter
or
out
and
or
fcompp
jo
dec
or
lock
iret
sbb
incb
fidivrs
aaa
pushfw
or
shrl
add
hlt
cld
mov
jnp
insl
lods
push
or
in
jns
mov
pop
fwait
shrl
dec
in
lcall
dec
push
xchg
push
nop
sub
insl
add
testl
sub
cld
cs
stc
pop
mov
mov
and
push
lock
stc
push
std
jmp
insl
sub
add
xor
sahf
and
imul
mov
mov
or
shr
shrl
mov
andb
out
or
jo
xchg
add
cmp
fidivrs
mov
push
jnp
nop
js
arpl
xor
pop
or
or
stos
or
std
cmp
ret
mov
jecxz
je
sub
dec
ret
fs
out
or
push
mov
outsb
loopne
mov
push
and
cmp
ja
mov
filds
stc
addr16
push
mov
sub
ret
xchg
add
mov
test
cmp
fbld
stc
scas
cmp
push
pop
stos
xchg
mov
popf
rorl
bound
xor
lds
mov
popa
js
mov
test
outsb
jecxz
inc
ja
ficoms
cmpsl
cli
shlb
jo
sahf
insl
lods
xchg
fdivrp
xchg
pop
sub
mov
cmp
jge
xchg
lock
mov
mov
mov
or
aas
pop
mov
and
xor
pop
pop
aam
xchg
bound
cmp
outsb
xor
enter
pop
mov
nop
fdiv
mov
adc
cmp
imul
insb
cmp
xchg
mov
xchg
inc
adcb
xor
add
xchg
lods
imul
mov
cmpsb
jg
cs
jne
pusha
stos
sub
pop
fildl
jne
ficompl
in
dec
mov
fcomps
dec
cmp
jge
ret
xor
add
xlat
outsb
dec
es
sbb
mov
sbb
add
test
into
or
test
mov
add
loopne
popf
inc
dec
pop
loopne
sbb
jnp
clc
and
cmp
jge
loop
andl
lret
dec
cmp
icebp
lods
dec
dec
loop
and
loopne
xchg
or
daa
cmc
pushf
pop
div
icebp
inc
ss
jmp
lds
imul
xor
in
jg
inc
dec
repnz
inc
pop
add
repnz
in
mov
andb
inc
xchg
icebp
pop
outsb
divl
pop
sbb
xchg
fldenv
jl
cmc
ret
gs
inc
xor
adc
in
addr16
push
inc
sub
or
inc
and
pop
outsb
push
cmpsl
mov
add
xchg
les
gs
aad
lret
pushf
xchg
lret
arpl
int3
xor
mov
fdivs
jo
push
push
cmp
pop
sbb
pop
daa
sub
iret
pop
sbb
cmp
addr16
cli
ficoml
push
xchg
pop
mov
jmp
clc
lret
cmp
pop
movsb
aad
inc
repz
js
dec
arpl
or
inc
mov
imul
jb
and
xor
push
jle
pusha
adc
je
xchg
cwtl
xor
ljmp
mov
cltd
std
dec
mov
inc
sub
and
push
push
iret
push
movsb
hlt
sbb
cmpsl
insb
pop
sti
cmp
in
scas
ja
push
dec
push
or
insb
adc
push
aad
pop
aam
mov
sub
rclb
push
pop
mov
fcompl
and
das
and
ds
scas
in
notl
or
pop
scas
adc
mov
mov
and
and
int3
mov
dec
clc
add
and
cs
or
inc
imul
sbb
test
imul
push
inc
inc
icebp
adc
dec
pop
rcrb
ror
in
fldl
arpl
mov
movsl
xor
les
loop
movsl
lods
out
loopne
scas
ret
lcall
orl
jns
out
sbb
pop
arpl
or
insb
pop
lret
xchg
pop
cwtl
pushf
imul
or
cwtl
jmp
xchg
nop
jle
sub
adc
mov
ljmp
shll
clc
mov
ljmp
mov
mov
popf
or
stos
push
loop
les
pop
repz
jle
jge
jp
add
xchg
mov
loope
mov
ljmp
mov
xchg
inc
aas
mov
cs
add
mov
sub
mov
in
sub
adc
sub
addr16
rcll
ret
add
jmp
or
lcall
mov
pop
jae
xchg
or
stos
fwait
mov
incb
mov
adc
aaa
incb
xchg
mov
xchg
adc
clts
dec
jnp
addr16
data16
mul
dec
push
shrl
dec
adc
out
mov
in
shlb
mov
cmpsb
xchg
aas
lret
fwait
jle
bound
pop
xchg
imul
dec
test
lcall
sbb
je
lcall
xor
jmp
pop
lds
dec
cld
loope
mov
out
test
pop
mov
int3
cwtl
test
jo
xchg
imul
pop
rcl
fidivrl
std
mov
mull
daa
cmp
insb
inc
cmp
loope
shrl
rol
adc
inc
lods
out
and
test
sub
pop
test
xlat
push
ljmp
ficoml
pushw
pusha
cli
hlt
adc
in
and
mov
cmp
cld
mov
push
stc
test
sub
adc
sbb
mov
pop
cmp
cmc
xor
nop
aad
test
push
mov
ss
stos
aaa
scas
xor
cwtl
pop
sbb
sahf
jno
dec
add
das
leave
sub
mov
xlat
imull
sarb
cli
lahf
add
fstps
rcrb
inc
mov
or
test
sub
mov
imul
and
or
outsl
push
cmp
fldcw
and
xor
mov
jne
rcrb
aas
shlb
push
mov
sbb
xchg
dec
movsl
sbb
jle
into
or
xchg
adc
lahf
imul
dec
ljmp
or
adc
sbb
xchg
or
and
aad
cmp
scas
sbb
jge
call
scas
rcrb
fistl
sub
out
mov
lods
xlat
adc
cmpsb
sub
in
shlb
clc
mov
iret
in
inc
xchg
je
mov
or
and
lods
cltd
pop
into
or
fmul
js
sbb
ds
flds
adc
pop
and
adc
pop
mov
popa
scas
pushf
jp
inc
es
xchg
mov
xor
hlt
xor
sbb
sbb
inc
pop
cmp
shrl
ljmp
dec
aad
push
inc
test
push
aas
test
aam
stos
sub
inc
lcallw
jae
pop
std
fucomi
dec
pop
mov
xchg
test
xlat
popf
push
cmp
lods
add
lds
fnstcw
xchg
sub
ret
test
xor
sti
lods
fwait
loop
mov
mov
add
push
mov
jne
lret
aam
inc
mov
mov
lods
movsl
aas
repnz
jns
push
lods
sbb
cmp
arpl
es
mov
iret
push
jns
or
test
fdivr
cmpsb
sub
aaa
sub
cmp
js
adc
aam
push
loope
cmpl
jge
sub
jecxz
rorl
pop
pushf
pop
and
mov
insb
inc
hlt
inc
add
mov
xchg
inc
popf
popa
adc
push
push
std
and
ljmp
push
mov
sbb
mov
push
out
sub
xchg
mov
sbbl
sub
xchg
xchg
hlt
sub
loop
jp
aas
repz
sub
inc
fwait
mov
jge
loopne
mov
xor
xchg
clc
cltd
sub
jae
loope
xchg
lea
push
jnp
cmp
out
lds
dec
out
js
lds
imul
xor
xor
adc
lss
fucomi
lcall
aad
push
sbb
or
cltd
in
lret
jmp
scas
mov
push
fs
jecxz
mov
mov
add
in
lods
cmpsl
pop
lods
scas
das
movsb
xlat
ret
aad
xchg
jnp
test
add
test
add
out
lods
scas
scas
and
mov
jge
mov
ds
sbb
out
pop
xchg
mov
data16
sub
int
fdivl
scas
jmp
das
inc
xchg
xor
cmp
rcrb
ss
lock
repz
mov
out
out
xchg
mov
pop
sahf
lds
xor
mov
or
pop
add
dec
jecxz
insb
call
cmp
push
roll
imul
push
addr16
stc
lock
insl
mov
rclb
mov
xchg
jecxz
jae
clc
xchg
pop
jmp
stc
jge
inc
in
jbe
loop
xchg
repz
in
mov
das
mulb
shl
xchg
cli
jbe
call
fnstcw
gs
adc
dec
inc
xor
in
outsl
xchg
push
cmpsb
mov
cli
fisttpl
andl
xchg
pop
std
jbe
jnp
jp
xchg
in
push
sahf
mov
xchg
sbb
or
sbb
adc
fs
outsl
dec
inc
arpl
repnz
mov
fs
or
es
out
in
movsb
iret
scas
mov
ror
sbb
ss
add
push
mov
inc
fistl
jg
pop
faddl
and
xor
xor
aaa
pop
ret
push
lods
lcall
loope
and
call
ret
cli
sbb
cmp
icebp
inc
xchg
cmp
int
mov
xor
in
js
jno
pop
iret
dec
testl
xchg
xor
add
ret
lea
mov
js
popa
push
dec
dec
push
jge
push
mov
xlat
lret
pop
or
shll
lock
fimull
push
divb
int
xchg
fldl
push
or
gs
or
xchg
and
adc
repz
mov
fstpl
fs
dec
cmp
fs
cmp
fs
test
jmp
loope
push
sbb
aad
mov
mov
lea
inc
mov
adc
adc
mov
mov
xchg
test
les
push
lods
cmc
cmc
push
cmpb
sti
int3
pop
pop
or
stos
mov
push
adc
lea
movsb
mov
lret
in
push
sub
loop
lds
or
pusha
fisubrs
sub
pop
dec
or
sub
imul
mov
xor
cmp
lods
lret
clc
mov
jb
sbb
ljmp
mov
stos
out
lret
and
mov
jmp
lret
fildl
ljmp
add
dec
sub
fwait
dec
pusha
jno
popa
cmp
ds
movsl
jmp
cmp
jle
insl
pop
add
cli
mov
bound
jns
imul
xor
adc
outsb
aam
pop
jp
lcall
add
sub
push
adc
mov
mov
xchg
jne
fstl
push
mov
push
addr16
imul
jecxz
mov
adc
stos
mov
mov
ja
addb
js
pmaddwd
cmovns
outsb
into
inc
movl
push
addr16
jle
repnz
sahf
ja
adc
lock
mov
pop
repnz
idivl
insb
hlt
jmp
or
dec
mov
mov
mov
lods
add
in
sbb
xchg
jle
xchg
loope
pop
jne
mov
lcall
sahf
popf
stc
jle
pop
push
jmp
adc
ljmp
mov
rolb
stos
mov
in
sbb
jp
je
or
xor
add
cmp
add
lea
push
mov
add
repnz
ljmp
les
ja
cwtl
or
lret
sub
mov
jg
inc
cs
rorb
fisttpll
mov
arpl
mov
sub
pop
sub
cmpb
add
iret
loope
mov
inc
mov
ret
aas
sub
pop
cmp
mov
fdivrp
jecxz
adc
jne
jle
sub
lahf
add
add
jmp
and
aas
mov
pop
imul
and
js
and
ds
jecxz
cmp
or
dec
inc
push
in
add
maskmovq
negl
lods
mov
into
pop
and
xchg
push
bound
pop
fucomp
mov
mov
jne
mov
shll
xor
negl
add
inc
ss
inc
jnp
cli
xor
ret
lret
mov
test
movsb
icebp
jnp
outsl
add
mov
scas
push
xchg
inc
cltd
cltd
daa
and
mov
in
push
lds
xor
mov
test
aad
testb
pop
jno
xchg
test
add
pop
jecxz
in
push
dec
mov
test
xchg
rcrb
cli
in
xor
and
or
pop
push
roll
jbe
cwtl
add
xor
in
and
ljmp
cmp
jns
fs
push
sbb
cmpsb
aad
jne
rcrb
inc
sbb
jno,pn
xchg
cmp
test
push
jge
cmp
ljmp
sbb
lock
jecxz
sub
test
xor
dec
pop
test
xor
mov
and
cltd
push
jp
ret
xlat
popf
cmp
jmp
pop
bound
repz
xchg
pop
jns
inc
pop
pop
pop
imul
mov
inc
arpl
or
mov
pcmpgtd
mov
sti
dec
sbb
xchg
inc
jl
mov
out
pop
rcr
inc
adc
jnp
mov
jbe
mov
adc
pop
std
mov
pop
inc
mov
push
xchg
lds
jnp
lds
shll
in
jmp
ret
pop
push
cmp
gs
int
adc
and
loopne
jmp
and
fsubr
cld
mov
push
mov
add
int
xchg
xchg
xor
ds
popa
cmp
pop
mov
in
pop
je
loopne
or
icebp
repnz
les
mov
push
out
mov
mov
cmc
sub
cs
sbb
xchg
xchg
loope
push
out
sub
pop
shr
sti
in
inc
adc
into
mov
inc
mov
data16
pop
gs
sub
mov
mov
outsl
cmc
mov
adc
fadd
jle
dec
sbb
jno
and
sub
jo
mov
mov
and
in
pop
nop
insb
pop
pop
xor
pop
loopne
popa
mov
add
ficoml
dec
jecxz
mov
adc
mov
push
mov
inc
push
loop
les
daa
les
ja
clc
dec
sbb
out
sbbl
cwtl
fcoms
push
pop
test
rolb
shlb
addr16
jecxz
push
jmp
andl
scas
dec
sbb
addl
sub
into
cmpsb
in
aas
rcl
xchg
scas
shrb
insb
adc
xor
ds
shlb
int3
jg
repz
imul
loop
fsub
xor
lahf
in
sub
pop
orb
mov
loopne
pmulhuw
outsl
sti
sub
in
inc
lods
imul
movl
scas
mov
scas
jne
xchg
pop
push
out
ss
icebp
out
jne
pop
rorb
mov
mov
add
jae
add
jno
repz
arpl
or
addr16
mov
gs
cmpsl
push
imul
fstpl
xchg
movsl
movsl
iret
nop
xchg
add
mov
jmp
mov
mov
cwtl
pop
push
stos
mov
sbb
mov
rcll
mov
add
dec
test
xor
test
sub
mov
ud0
xchg
cmp
push
mov
les
add
push
dec
lods
mov
adc
sbb
jne
adc
inc
pop
adc
imul
loop
iret
cmp
push
ds
fists
or
xchg
cs
mov
dec
popa
leave
fmul
sub
stc
add
push
test
lahf
xor
addb
adc
mov
cmp
mov
cmp
test
pop
add
lcall
inc
push
xchg
cmpsl
in
mov
outsb
imul
mov
sbbb
cmp
xchg
push
add
iret
ss
enter
mov
scas
mov
inc
rclb
bound
pop
adc
or
lahf
jecxz
pop
sbb
sti
jle
sbb
jle
pop
aas
outsb
mov
jb
push
jmp
pop
test
or
jbe
push
stc
jg
and
cmp
lods
stos
nop
jbe
shlb
push
ljmp
fmuls
sbb
fmull
addb
cmp
and
fists
outsb
in
sub
mov
lret
cmc
ljmp
push
clc
test
jmp
mov
inc
push
jbe
in
inc
negl
movsl
cs
repnz
mov
xchg
cmpsb
sub
mov
test
add
jg
pop
xor
out
push
loopne
push
stos
sbb
popf
xor
push
in
or
inc
icebp
push
pushf
stc
mov
mov
jmp
fistpl
punpcklwd
inc
sub
cwtl
clc
sbb
les
out
xchg
sbb
push
in
jp
pusha
cmpsl
push
and
je
and
mov
xchg
scas
aad
inc
stc
inc
jae
out
mov
mov
lahf
pop
dec
cltd
pusha
stc
inc
out
nop
wbinvd
or
or
subl
xchg
xchg
sti
push
cmpsl
xor
push
pop
and
shrb
insb
cmp
mov
fisubrs
leave
repnz
inc
adc
pusha
shlb
outsl
enter
aaa
or
push
cmp
mov
sbb
arpl
sbb
stos
dec
jle
xlat
xor
add
out
mov
mov
add
outsb
test
jbe
mov
dec
mov
jae
in
aam
or
es
jle
mov
cmp
int
or
or
mov
and
dec
hlt
mov
rorl
arpl
sub
sti
je
xchg
scas
xor
xchg
sbbl
adcl
nop
les
sub
push
mov
daa
sub
xchg
adc
loop
lods
icebp
loopne
lret
inc
mov
xor
rcll
mov
jge
test
sbb
push
and
loopne
add
push
pushf
sub
xor
add
ds
inc
hlt
into
or
sbb
push
sub
xchg
lds
push
pop
pop
cmp
mov
mov
inc
pop
jns
xor
jg
ret
xchg
inc
push
mov
std
js
sti
lcall
je
inc
fiadds
pop
pop
add
test
pop
sub
out
push
loope
hlt
stc
cli
inc
add
push
fdivrl
xor
call
mov
addb
aam
popa
leave
sbb
dec
adc
pusha
arpl
jge
push
lea
jbe
jae
cli
loop
xchg
rcl
imul
xchg
sub
in
xor
jae
sbb
bound
push
mov
jmp
out
lock
arpl
and
inc
fdivr
call
jae
das
es
push
cs
ret
and
lcall
pop
lods
leave
in
pusha
dec
push
or
mov
jb
test
imul
add
stc
mov
out
sbb
add
shrl
pop
ds
negl
or
jno
nop
repz
ret
inc
call
push
mov
fprem
or
adc
sub
adc
ret
fimuls
xchg
movsl
into
sbb
mov
or
pop
into
pushf
mov
ja
pop
xchg
inc
xchg
test
cs
shll
fsubs
mov
and
cld
and
scas
mov
lods
ret
push
push
in
mov
mov
inc
test
mov
sbb
iret
clc
in
sbb
lds
adc
stos
jge,pt
je
fbstp
subb
and
jp
sub
scas
and
loope
les
jecxz
mov
or
call
das
and
pop
ds
add
mov
movsl
imul
sbb
idivl
sub
outsl
cmp
repz
nop
adc
push
xchg
das
mov
adc
in
sbbl
rorb
ds
xchg
loop
fwait
sbb
inc
scas
test
or
mov
inc
sub
sbb
imul
mov
xchg
add
cltd
jmp
pusha
mov
lods
outsl
cld
xor
inc
lret
push
in
ja
icebp
pop
inc
xorb
mov
fs
jmp
hlt
int
adc
inc
mov
mov
mov
pop
inc
pop
push
mov
loope
mov
repnz
lea
inc
xchg
mov
xchg
adc
mov
iret
mov
insb
mov
cmpsl
fcompl
std
add
dec
mov
into
sub
in
push
sub
mov
and
daa
das
mov
push
pop
imul
rolb
out
pop
repz
fisttps
and
dec
adc
insl
rdpmc
rcr
das
loope
hlt
or
lock
xchg
in
in
or
jo
sbb
cmp
and
into
ret
leave
mov
insb
dec
das
iret
std
ficomps
dec
aaa
and
and
adc
fnstenv
sahf
jp
in
pop
je
clc
test
cli
mov
push
cmp
sar
or
out
es
adc
mov
mov
dec
fwait
clc
sub
popf
in
out
and
adc
lock
movsl
sarb
mov
dec
ja
dec
jecxz
pusha
jae
lock
lahf
mov
push
xchg
push
and
cmp
mov
dec
xor
icebp
xor
mov
xchg
sti
test
pop
cmpsl
ret
daa
or
jnp
sub
aas
or
iret
lahf
push
ret
push
adc
mov
subb
fdivrs
or
dec
fsub
or
insb
jp
in
aaa
lea
cltd
test
mov
dec
or
xor
inc
mov
add
ret
pop
cmp
out
adcb
dec
call
dec
in
pop
dec
pop
mov
idivl
inc
loopne
mov
mov
test
mov
jne
adc
and
roll
cmpsl
lret
ljmp
xor
sbb
sahf
hlt
pop
popa
mov
jne
pop
mov
iret
pop
push
mov
inc
movb
in
loope
fidivs
and
insl
cmpb
jno
cmpl
xchg
mov
sub
cmp
stos
das
shrl
mov
mov
jl
adc
orb
rcll
out
jl
bound
inc
clc
add
js
cmp
je
xchg
cmp
int3
xor
test
jge
sub
mov
dec
cmp
push
shrl
cmc
bound
mov
add
sbb
test
and
xchg
add
ret
dec
lret
mov
sahf
inc
pop
adc
test
push
aad
or
fs
ret
daa
das
cmp
sbbl
adc
test
negl
sub
jae
cmpsl
xchg
sbb
fcompl
add
mov
pop
lcall
cmpsb
push
lods
sbb
xor
fwait
nop
dec
add
out
lcall
xor
sub
jo
and
daa
jae
inc
cmp
lods
cwtl
dec
jns
cmp
std
pusha
int
sbb
and
inc
push
cmp
sbb
pop
push
jg
sti
bound
loop
fiadds
rorl
add
or
mov
xchg
xchg
xor
fistpll
nop
jno
notb
pop
fwait
stos
scas
mov
jno
lock
test
adc
dec
bound
pop
mov
pop
mov
dec
aaa
push
mov
cld
shll
sub
push
rcl
mov
xor
and
xor
lahf
push
aas
int
push
outsl
jl
push
and
sbb
or
aad
xchg
adcb
sub
leave
xor
test
iret
jns
inc
out
dec
mov
inc
jbe
punpckldq
jg
mov
stc
xchg
int
cmp
bound
inc
mov
pop
cmp
je
adc
cmp
dec
sub
cwtl
pop
aaa
cltd
push
jp
divb
sbb
aad
stos
clc
or
adc
push
mov
add
pop
pop
sbb
jle
les
test
push
shll
pop
or
dec
arpl
mov
and
daa
ja
pop
xor
orb
andl
and
lods
sub
sub
jnp
scas
into
out
mov
cwtl
pop
push
inc
sti
lock
push
clc
loopne
push
cld
insb
sbb
dec
adc
pop
mov
cmp
mov
cmc
iret
jle
fxtract
pop
pop
dec
jmp
push
push
mov
pushf
sarl
add
push
rcr
cli
dec
bound
pop
mov
pop
lods
xchg
mov
fnstsw
popf
negl
xchg
out
idivb
or
loope
movsl
xchg
sahf
pop
filds
jge
and
jp
idivb
gs
mov
sub
das
lds
xor
xchg
insb
sub
push
jle
inc
jg
sbb
sub
fldl
inc
cmpsl
xchg
push
mov
rep
or
or
xchg
add
inc
out
jb
mov
fsqrt
lahf
repz
pop
mov
pop
sub
adc
in
push
fs
and
cmp
ffreep
sub
cmpsl
fisttpl
lea
lds
adc
out
and
jmp
xchg
xchg
sbb
and
in
add
jp
out
mov
and
mov
pop
bound
adc
out
hlt
cmp
mov
fxch
and
mov
movsl
das
fisttpl
in
insl
cwtl
push
mov
icebp
jb
mov
out
insl
xor
mov
push
andl
adc
inc
lret
or
sbb
ss
mov
xchg
sbb
enter
nop
dec
scas
or
ja
pop
repnz
fs
ret
rcr
or
or
pop
outsl
jmp
mov
hlt
jmp
call
xor
jae
add
imul
popf
dec
push
mov
js
mov
js
dec
js
mov
mov
inc
pop
test
pop
aaa
and
fadd
out
sub
push
inc
push
gs
xchg
cmp
push
sbb
mov
inc
sub
dec
setns
call
andb
sahf
xchg
mov
push
out
jle
mov
push
rolb
hlt
test
fs
ret
adc
jp
fiadds
cltd
arpl
pop
mov
popa
pop
data16
push
insl
jns
cli
fwait
mov
mov
mov
pusha
sbb
jae
insl
sbb
mov
lahf
add
cmp
imul
adc
hlt
mov
popf
dec
or
mov
inc
cmp
iret
xor
setb
rcrl
jg
xchg
int
dec
inc
mov
mov
jmp
into
mov
inc
adc
jbe
cwtl
mov
jl
nop
pushf
adc
pop
ja
test
jno
fldcw
cmp
adc
rclb
or
rcrb
out
fcmovu
mov
adc
gs
stos
mov
xlat
js
push
add
mov
call
cmp
iret
add
dec
aas
scas
mov
pop
pop
fistpll
std
sbb
push
mov
pusha
jmp
cltd
sbb
int3
test
ror
not
mov
mov
aas
leave
std
mov
mov
clc
push
fisubrs
xchg
mov
sub
je
jno
lods
cwtl
mov
inc
inc
inc
addl
sub
mov
xor
mov
jns
mul
push
jg
das
sbb
ds
mov
and
cmp
mov
mov
xlat
jnp
mov
pop
pop
inc
popa
out
or
fistpll
dec
les
insl
stos
sarl
add
sbb
pop
mov
push
mov
and
xor
ss
cltd
and
inc
add
in
xchg
test
test
in
fstpt
cmp
jle
sbb
mov
jmp
or
add
add
cmpsb
adc
xchg
sbb
pop
bnd
or
std
mov
sub
jecxz
and
mov
lcall
cmp
cmp
insl
and
inc
push
mov
scas
movsb
pop
and
repnz
xchg
js
adc
cwtl
aas
mov
sbb
pop
nop
push
push
sarl
inc
mov
ret
ss
sbb
out
iret
jo
adc
shll
inc
outsb
outsb
or
inc
shrb
pop
mov
nop
xor
mov
dec
lret
dec
fwait
outsb
cmc
lea
and
jno
lds
xchg
mov
sub
arpl
mov
pop
in
movsbl
add
cmpsb
lods
xchg
jb
add
into
iret
mov
shll
mov
sbb
sub
inc
xor
mov
js
xor
cmpsb
in
filds
jmp
movsl
outsl
fdivl
cmp
and
jge
cmp
push
jp
adc
in
or
cmp
cmp
inc
clc
mov
mov
push
daa
push
mov
lock
and
pop
stc
sub
cmp
loopne
push
push
lods
rcrl
push
add
lcall
mov
adc
sahf
cmp
orb
addr16
dec
mov
mov
or
gs
mov
add
mov
pusha
cli
mov
mov
push
cmp
lret
shrb
clc
mov
adc
out
pop
ds
mov
push
or
mov
lahf
add
pop
negb
mov
fbld
pushf
adc
inc
mov
shlb
xchg
je
xor
sub
hlt
int
cmp
ja
cmp
out
js
sbb
js
daa
xor
push
scas
daa
sub
inc
or
or
icebp
andb
cmp
cli
xchg
dec
jmp
xchg
cmp
jae
ja
popa
sbb
insl
cwtl
lret
mov
mov
adc
imul
and
test
sub
ret
add
adc
mov
add
mov
rorl
and
xor
add
sbb
sub
rcrb
inc
push
fdivrs
cld
sub
mov
dec
rorl
jmp
or
aaa
clc
setae
pop
leave
out
add
push
ljmp
xchg
inc
and
dec
fldl
cli
inc
rclb
rcrl
dec
and
es
es
sbb
sub
adc
cmp
add
mov
mov
lea
pop
jnp
arpl
add
data16
add
cmp
je
lret
xor
mov
jge
fsubrl
push
lock
jns
icebp
dec
out
mov
pcmpeqw
aam
push
lods
pop
mov
divl
mov
cmp
scas
jg
xchg
ljmp
outsl
mov
insb
jmp
daa
icebp
mov
or
out
and
push
bound
xchg
push
out
out
pop
aad
imul
push
push
jb
lods
xor
dec
xchg
mov
test
insb
sub
pop
insl
vfmadd132ps
jle
mov
inc
or
push
rorb
xchg
mov
inc
fldcw
out
jg
inc
ficoms
in
sbb
mov
ficompl
jmp
arpl
repz
dec
push
pop
movsl
rcl
mov
cld
addb
orl
movsl
outsl
int3
clc
sbb
xor
fidivrs
int
loopne
or
pop
inc
cmp
mov
and
shlb
push
dec
ret
add
outsb
or
dec
mov
lock
fsub
rol
ja
fnstenv
pop
mov
sbb
push
data16
shl
gs
cmp
out
and
and
sbb
mov
ret
mov
cmp
adc
insb
out
sbb
cmc
mov
cmc
pop
adc
std
jp
stc
mov
xchg
fcmovb
jo
cmpsl
scas
mov
inc
stos
scas
or
push
xor
cmp
lret
jmp
jp
sbb
mov
and
sahf
loopne
xchg
push
bound
sbb
loop
ror
push
lock
or
push
dec
jg
pop
inc
add
mov
jmp
push
out
jecxz
popa
inc
fidivrs
adc
cmpsl
in
mov
lahf
shrb
add
cmp
push
xchg
fucomi
ret
je
jnp,pt
mov
fsts
and
mov
shrl
int3
aas
cmpsb
movsl
out
cmpb
add
clc
mov
adc
lods
jnp
dec
mov
imul
inc
pop
jl
jecxz
lods
mov
shrb
scas
inc
mov
cmp
faddl
xchg
xchg
mov
adc
push
cmp
xchg
inc
jle
sti
aaa
incb
pop
cltd
test
xchg
mov
pushl
adc
and
jp
ja
push
mov
add
sbb
repz
jo
nop
adc
into
arpl
fldl
cmc
jnp
mov
sub
ret
mov
test
sub
sbb
lods
and
scas
ds
out
lock
in
sbb
mov
in
xor
push
mulb
xorb
in
aad
ret
dec
bound
jecxz
jnp
fsubrl
dec
popa
jmp
adc
sbb
mov
daa
insl
scas
pop
or
mov
out
fcmovb
and
stos
pop
outsl
jnp
stos
xor
cmpsl
push
stos
xchg
xchg
push
inc
stc
lcall
lahf
sub
gs
inc
popf
xor
fistpll
cwtl
sub
pop
bound
mov
lods
scas
jno
xchg
xor
sbb
xor
pop
dec
and
push
adc
mov
std
cmp
stos
mov
cmp
push
adc
push
mov
xchg
jmp
and
xchg
push
int3
cmp
iret
ljmp
jg
or
dec
in
in
mov
xor
pop
cltd
imul
jge
fdivl
xchg
add
pop
enter
cmp
inc
pop
das
lret
notl
stc
adc
int
mov
ret
dec
aad
outsl
lret
and
push
test
mov
clc
aas
or
js
jo
mov
and
jnp
xchg
dec
mov
lret
arpl
inc
subb
jns
shr
xor
imul
lret
jbe
xor
pop
repnz
cmp
leave
mov
sbb
bound
xchg
out
aad
pop
sbb
jl
mov
cmp
sub
xchg
decb
dec
loope
loope
jmp
jge
push
or
push
pop
les
int
jge
je
mov
mov
repz
iret
testl
repnz
pop
jge
das
inc
mov
adc
andl
shrb
inc
add
out
xchg
jbe
push
push
sub
mov
push
mov
pop
testl
lcall
and
push
dec
aad
les
in
out
mov
xchg
test
pusha
scas
jg
cs
xorb
popa
pop
inc
imul
pop
insl
test
mov
and
loop
pop
fsubrs
push
sub
mov
sbb
fninit
push
dec
adc
das
adc
and
and
ret
paddq
shll
lds
data16
int
enter
cmpsl
xor
jns
sbb
and
ja
lret
push
mov
fdiv
xchg
mov
push
sub
or
and
xchg
roll
dec
cmp
enter
mov
cmc
push
cmp
cmp
gs
les
test
enter
cmp
xchg
xchg
sbb
add
out
lcall
jb
pop
inc
aaa
fimuls
push
and
mov
int3
cmc
jno
xchg
sub
mov
mov
mov
gs
imul
sub
pop
xlat
notb
loopne
rclb
outsl
cmp
rorl
sub
push
pop
inc
cmp
cmpsl
enter
dec
adc
push
cld
inc
and
imul
xor
jge
add
mov
or
lods
pop
dec
mov
fs
cmpsl
lret
loopne
fidivs
aas
inc
dec
push
rolb
out
cltd
fsubrl
xor
nop
ret
xchg
fwait
andl
shrl
pop
lret
sub
mov
leave
sbb
ja
push
repz
sbb
inc
adc
mov
shll
and
jecxz
add
arpl
into
and
cmp
sbb
aaa
mov
inc
push
stc
jnp
shll
shrb
sti
scas
cmp
xchg
xchg
jb
push
ja
sahf
sub
cli
pop
push
fsubrs
mov
cld
dec
push
add
scas
dec
xchg
daa
jb
xchg
stos
mov
scas
jbe
dec
popf
jnp
mov
mov
in
jae
cwtl
mov
popa
xor
mov
in
mov
ficoml
mov
cmp
mov
in
gs
push
jmp
dec
insl
fisubrs
and
cli
out
mov
pop
movsl
call
in
movsl
pushf
push
test
test
psrld
call
push
sti
push
cmp
or
pop
xchg
add
sbb
xor
jge
cmpb
scas
mov
bound
jae
jae
enter
lock
call
pop
push
push
cmpsb
pusha
imul
pusha
lcall
and
push
sub
in
xchg
push
std
jns
inc
and
mov
imull
or
jbe
or
add
cmp
cmp
enter
dec
jle
inc
cltd
orps
mov
scas
jl
push
mov
hlt
dec
inc
testb
repz
bound
repnz
xchg
jp
and
sahf
das
xor
sahf
mov
in
es
sub
pop
add
ss
stos
pop
nop
aaa
cmp
jmp
fwait
push
jae
int
xor
inc
mov
fadds
repz
gs
dec
mov
add
shlb
sbb
pop
lahf
adc
fistpll
ljmp
pusha
aas
mov
pop
dec
mov
inc
inc
outsl
decb
inc
fisubrl
das
or
mov
cmp
jge
inc
add
dec
pop
pop
aam
fisubl
inc
repz
repnz
jecxz
lods
outsb
addl
scas
or
scas
testl
pop
push
jp
cwtl
mov
jp
and
mov
push
ficompl
sub
or
push
cmp
fs
dec
mov
aam
pusha
mull
pop
ficomps
xchg
stos
mov
addr16
out
cmp
mov
and
test
add
loop
dec
mov
dec
xchg
ficoms
popl
out
jmp
test
stos
inc
push
jl
push
jne
mov
inc
or
jg
adc
ss
dec
incl
roll
mov
xchg
leave
pushf
jb
fisttpl
mov
in
inc
stc
pusha
mov
bnd
cwtl
dec
test
pop
lds
jno
add
and
js
fcmovb
aad
xchg
pusha
push
xchg
popa
test
bound
mov
sbb
xor
andl
cmp
jecxz
es
fisubs
xchg
dec
sub
mov
jne
push
arpl
push
insl
xchg
push
and
jle
xchg
lock
in
push
xor
ja
mov
inc
pop
sbb
xlat
in
inc
insb
out
dec
jge
mov
mov
clc
jb
sub
or
scas
out
out
loope
xchg
cmp
mov
mov
xchg
dec
sbb
in
sahf
test
loope
sbb
and
and
push
sub
or
ds
repz
test
and
push
xor
roll
jp
mov
pop
mov
adc
in
rclb
fadds
scas
pop
mov
xor
es
dec
faddl
outsl
cmc
test
and
imul
aad
lock
flds
call
test
mov
test
pop
test
cmp
xor
add
dec
inc
inc
das
sub
and
aam
adc
adc
cwtl
push
rcrb
and
mov
adc
out
pop
cmpsl
adc
cmp
test
mov
mov
popf
leave
into
jnp
dec
repnz
sbbl
dec
int
xchg
mov
mov
pop
iret
lds
push
push
sahf
sub
xchg
sub
scas
cs
outsb
sub
xor
out
jae
dec
adc
add
dec
jp
inc
cmp
mov
adc
mov
inc
test
nopl
iret
rorl
mov
stos
add
xchg
add
into
pusha
cmovge
add
adc
fcompl
ja
dec
jmp
scas
lret
js
jl
mov
leave
int
ret
fcomps
push
pop
xor
xor
cmpsl
cli
lds
rclb
add
ja
push
les
enter
sbbb
adc
ret
hlt
push
push
add
sub
mov
aam
fwait
jl
pusha
test
or
fisubs
outsb
mov
xor
popa
imul
pop
mov
mov
cmp
in
nop
cltd
push
lahf
and
std
push
xchg
sub
add
add
addr16
int
dec
sbb
into
push
scas
hlt
arpl
lahf
scas
icebp
popa
dec
dec
mul
push
xchg
push
hlt
repz
and
mov
add
mov
sub
scas
add
xchg
add
pop
iret
pop
or
mov
je
mov
pop
mov
call
adc
sub
lahf
sbb
jb
sbb
adc
jno,pn
pop
sub
dec
pop
addb
ss
pop
dec
xor
or
aaa
addr16
loop
outsb
pop
dec
pop
stc
je
xor
xor
addb
dec
mov
shll
sub
xchg
jle
sbb
aam
sahf
dec
or
fwait
cmpsl
outsl
inc
cmp
xchg
pushf
cld
cmp
call
pop
or
int3
mov
insb
jb
push
push
stos
xchg
adc
cltd
adc
mov
push
jns
pop
mov
repnz
test
mov
xchg
dec
cmp
outsb
push
and
push
imul
pop
jecxz
out
out
cmp
cltd
cmp
dec
jp
mov
push
adc
lods
cld
adc
mov
jno
stc
sub
xor
call
cmp
xchg
jl
in
mov
popf
push
dec
xchg
mov
xchg
push
inc
andb
bnd
push
call
add
mov
addr16
adc
adcb
lret
and
adc
dec
mov
lods
out
popf
cmp
mov
add
sbb
mov
enter
addb
mov
ret
mov
mov
stos
push
sbb
push
scas
daa
ret
arpl
or
cmp
scas
xchg
jecxz
rcl
xchg
nop
mov
scas
rcrb
fldenv
jbe
push
mov
add
dec
test
and
out
inc
adc
mov
adcb
lea
lds
loopne
pop
andl
test
and
aad
adc
and
mov
pop
cmp
or
fsts
loopne
pop
dec
inc
cmpsl
sub
icebp
adc
fbld
repz
hlt
jnp
jo
lock
push
nop
jle
jbe
scas
aaa
ja
mov
cmp
outsb
cmpsl
mov
xor
xlat
int3
sti
xchg
push
cmc
int
mov
loope
sub
shlb
push
loope
out
dec
test
push
lods
dec
push
bound
dec
sbb
xchg
iret
adc
imul
dec
cmpsl
cmp
rorl
jns
or
pushf
ret
daa
mov
inc
cwtl
mov
xor
andb
sub
add
out
decb
inc
lret
jle
add
mov
jl
push
mov
insb
arpl
mov
inc
test
fadds
sub
pop
jb
push
into
mov
inc
push
fisubl
dec
adc
jbe
iret
xlat
lods
xchg
jecxz
in
rcl
push
dec
notl
cli
sbb
inc
pop
mov
mov
dec
jae
jmp
movsl
pop
inc
cmp
clc
or
sub
shlb
testl
mov
into
cltd
imul
jnp
sti
and
pop
movsb
mov
dec
lret
nop
inc
sub
cmp
push
fwait
mov
repz
mov
mov
lcall
ret
inc
lahf
sub
rorb
fidivs
ja
shlb
out
dec
sub
les
pushf
add
mov
pop
sti
push
lock
pop
pop
cmpsl
int3
roll
push
pop
and
ljmp
cli
xor
nop
imul
dec
lea
pop
sti
mov
pop
popa
cmc
adc
sahf
xor
lds
pop
subb
ja
repnz
xor
mov
fwait
rcl
or
out
fidivl
pop
cmp
lds
sahf
mov
and
mov
roll
adc
sbb
repz
mov
pop
cmp
cmpb
adc
mov
mov
arpl
mov
cmp
sbb
push
pop
out
test
loop
xchg
pop
sbb
push
loop
ja
ficompl
push
sub
xchg
mov
adc
cmpsb
or
sub
fchs
pop
add
shll
lods
outsb
clc
add
in
mov
inc
call
cmp
xor
xor
xor
call
sub
mov
pop
mov
fidivl
adc
jmp
add
out
sbb
lock
lock
push
loop
jbe
push
or
fdivs
iret
sbb
fstpl
arpl
sbb
ret
int
mov
mov
loope
lods
jo
dec
dec
jo
mov
lds
data16
fsubl
mov
call
pop
dec
les
repnz
xor
jae
loop
insb
jno
ljmp
add
jmp
mov
push
lock
lret
jle
pop
lahf
in
andb
or
sti
stc
rolb
inc
les
inc
pop
and
stc
std
dec
fsub
sbb
inc
out
push
mov
movsb
pop
or
pop
aas
add
out
mov
pusha
mov
ja
inc
mov
shr
popa
bound
iret
icebp
sub
lcall
sbb
push
jl
js
fadds
sti
adc
pushl
pushf
test
lcall
cmpsb
jnp
inc
movsb
push
jg
lahf
mov
adc
mov
fsubrs
jmp
push
movsb
movb
outsl
adc
sahf
push
push
scas
outsb
cmpsl
mov
mov
out
stc
scas
dec
or
idivl
adc
cwtl
xchg
mov
xchg
ljmp
fs
mov
mov
jecxz
sbb
aaa
popa
sbb
add
cmp
xor
fldenv
ret
adc
stc
test
add
sti
in
mov
ja
push
push
aaa
mov
fildl
outsb
stc
pushf
jge
in
mov
jo
mov
cmpsl
mov
out
sbb
fidivrl
flds
jge
inc
stos
test
sub
in
ret
pop
jns
jecxz
ficomps
pop
jno
je
xchg
xlat
sahf
pushf
sbb
push
mov
mov
vphaddudq
int
and
ret
pop
dec
out
xchg
adc
xchg
fisubl
add
inc
sub
mov
xchg
loop
push
icebp
push
pop
out
mov
xor
into
xor
mov
push
mov
aad
jl
in
movsb
popf
nop
pop
aaa
dec
sub
xchg
xlat
inc
pusha
xor
popf
repnz
xor
jno
lds
fiaddl
fimuls
mov
repnz
mov
mov
push
int3
or
and
dec
xchg
jge
push
int
cmpsl
sbb
sbb
xor
mov
test
dec
out
sub
jno
dec
add
mov
in
cmpsl
out
packsswb
xorb
out
dec
lcall
jno
fbstp
adc
mov
stc
xchg
and
inc
push
jl
jo
xchg
jg
mov
lahf
cmp
mov
push
lret
adc
test
lea
xchg
and
notl
outsl
sub
dec
add
repnz
out
clc
lock
lahf
addr16
lea
mov
dec
imul
scas
cmp
mov
pop
inc
add
jns
lds
mov
pop
in
jbe
inc
in
fs
shl
xchg
pop
ds
and
xlat
popa
ja
fidivrs
popf
outsl
lea
lret
inc
pushf
loop
adc
adc
enter
and
mov
gs
sbb
xor
pop
fists
pop
push
notl
cli
mov
and
repz
cmp
aaa
mov
sahf
lods
lods
xchg
mov
mov
pop
pop
and
mov
cmp
mov
xchg
mov
lods
jge,pn
lcall
xlat
popf
inc
cmc
into
aas
mov
mov
inc
test
add
scas
jmp
repz
je
pusha
hlt
or
leave
xchg
arpl
icebp
pop
into
xchg
jp
jae
or
adc
mov
push
push
lea
xorl
sti
xor
outsl
lods
jae
loope
mov
int
push
icebp
pop
cmp
add
add
xchg
loope
out
or
cmc
cmp
scas
cmp
bound
pop
dec
pop
lods
cwtl
out
das
cmc
mov
adc
sub
cmpsb
jae
jb
push
out
outsl
sbb
jg
arpl
in
mov
pop
adc
aad
test
out
rolb
mov
out
mov
fcoms
mov
xor
mov
mov
xchg
sbb
dec
cmpsb
jp
inc
cmp
cmp
out
xor
or
int
aad
mov
and
adc
dec
jbe
int
test
pop
jnp
lret
repnz
mov
sti
daa
shlb
lret
push
or
mov
dec
sbb
sbb
aad
push
test
sub
repz
fs
xor
adc
enter
xchg
push
nop
iret
lea
sub
je
push
imul
imul
decl
test
xlat
xchg
pop
mov
cld
fs
mov
aas
lea
xchg
mov
gs
or
daa
daa
imul
arpl
or
aam
bound
inc
mov
adc
inc
or
jb
pop
xchg
mov
mov
xor
or
repz
push
sub
dec
int
sbb
rcr
ja
dec
inc
icebp
in
movl
mov
scas
push
sub
add
mov
ja
aaa
dec
out
gs
mov
cmp
fildl
imul
or
jns
pop
in
cmp
movups
sub
cmc
mov
imul
ds
rcr
pop
pop
and
pop
ret
xchg
mov
pop
insb
push
nop
add
jecxz
mov
jp
jmp
pop
enter
dec
and
lea
pop
inc
mov
icebp
mov
imul
mov
movsl
pop
pop
daa
shll
jp
movsl
jecxz
clc
jns
shrb
pushl
pushf
adc
js
xchg
jp
repz
mov
popa
bound
test
push
out
pop
pusha
shlb
xchg
push
fwait
pop
add
test
out
push
xor
sub
and
mov
std
dec
jmp
cmp
and
bound
and
ljmp
adc
ret
and
addr16
js
sbb
xchg
add
ret
jbe
scas
and
sub
sbb
add
insb
adc
lock
dec
fcomps
dec
add
push
arpl
jae
xlat
jae
jecxz
sar
jg
xor
repnz
aad
cmp
or
xchg
lock
insl
out
xchg
cmp
out
inc
jmp
cld
push
cmp
mov
mov
in
aaa
cs
adc
sbb
adc
dec
pop
pop
in
repnz
jle
adc
repz
cmp
pushf
xor
push
out
or
add
adc
ret
xor
stos
and
xchg
notb
std
insb
gs
pop
push
fcmove
mov
pcmpeqd
std
or
and
cltd
dec
repz
fsubl
popf
out
xlat
dec
addb
das
sub
repnz
and
rorb
hlt
mov
mov
jae
call
mov
mov
loope
aaa
arpl
cmp
outsl
push
movsb
imul
subl
or
insl
sbb
sahf
rcrl
sahf
cld
mov
mov
mov
test
out
lea
pop
stc
ret
and
in
andb
jle
and
mov
ret
or
aam
aaa
mov
inc
mov
push
adc
out
stos
xor
cmp
cmp
int
cwtl
cmp
mov
mov
xchg
repz
movsb
adc
outsl
scas
or
cli
mov
sbb
stc
add
jl
pop
cmp
inc
movsl
shlb
roll
stos
cmpsl
fstl
rcrl
pushf
popf
xchg
jo
xor
add
xchg
test
out
cmp
out
loopne
aam
xor
jnp
push
arpl
icebp
pop
sbb
push
or
nop
fsubrl
dec
push
out
inc
imul
leave
out
icebp
in
dec
jnp
xor
xor
sbb
and
push
sbb
stos
pop
adc
lea
call
in
fwait
sbb
mov
inc
test
fiadds
repz
cmp
subl
fcoml
push
inc
aaa
dec
add
and
mov
sub
les
lret
pop
das
mov
cmp
loopne
lock
xor
shll
mov
subl
cwtl
sub
ss
loop
mov
mov
push
lret
outsl
mov
dec
out
dec
mov
in
mov
sti
adc
outsb
ficoml
mov
jbe
adc
inc
push
pop
addr16
aaa
mov
cmp
mov
mov
insb
scas
popa
imul
call
push
dec
xchg
or
mov
daa
fiaddl
cmpsl
dec
jp
js
std
dec
loope
test
test
sbb
loop
jb
lods
test
out
dec
sub
push
xchg
jecxz
aas
jno
stos
xchg
aad
lret
mov
in
fs
scas
in
sti
jle
pop
outsb
aad
mov
mov
dec
aas
jbe
pop
pop
outsl
pop
in
sti
cmpsb
and
outsw
add
call
or
xchg
jmp
sub
mov
sbb
rcll
add
add
loopne
sbb
sahf
jle
xchg
ja
or
in
add
dec
mov
sti
ljmp
fstpl
lret
pop
lcall
jecxz
sub
xchg
test
mov
cmp
ret
mov
sbb
jp
push
lret
rolb
faddp
pop
mov
jp
pop
aas
pop
outsb
mov
xchg
push
ja
inc
into
roll
dec
lret
test
cmpsb
ljmp
addr16
rcll
pop
inc
xor
inc
das
push
out
js
les
xor
insb
leave
in
cmp
sti
add
xor
inc
xchg
lock
jl
inc
mov
cmp
xor
ljmp
adc
fstps
mov
movsl
enter
into
stc
in
mov
das
and
gs
xchg
cmp
lret
jl
mov
int3
fucomi
add
movsb
pop
cmpsl
jb
andb
cs
jmp
dec
js
shrl
sar
rorb
addr16
mov
push
repz
mov
push
clc
mov
dec
jg
pop
inc
lahf
ljmp
repz
shll
mov
data16
in
xchg
push
roll
xor
dec
xchg
gs
add
negl
sbb
xchg
mov
mov
nop
xchg
loopne
popf
loop
and
arpl
xchg
and
lsl
imul
lods
ror
ss
test
movsb
mov
icebp
pop
clc
mov
imul
cmp
inc
rep
adc
add
outsl
movsb
pusha
mov
and
roll
ljmp
push
push
scas
xor
mov
and
fisttpl
int
adc
daa
lret
iret
adc
test
aas
rorb
lods
popa
hlt
sub
add
fsts
inc
test
add
lcall
mov
xchg
dec
insl
subb
lods
cmp
call
sub
call
popf
sahf
mov
jnp
fbld
push
pop
push
jnp
andl
rcr
movsl
stos
pop
popl
mov
jle
ror
dec
loop
repnz
cli
jge
test
adc
mov
push
sti
in
aad
stc
cmp
pop
push
push
rol
mov
xlat
pop
rol
repnz
mov
fs
xchg
dec
jbe
jns
jnp
ret
jge
xor
mov
sub
loope
lahf
jnp
fbld
xchg
movsb
stos
lahf
xchg
xchg
ja
xchg
movhps
in
nop
push
stc
xor
xchg
pusha
repz
push
fiaddl
clc
movsb
mov
mov
loop
or
loop
jg
ljmp
in
ffreep
idivb
ss
jl
repnz
fdivl
xor
cmp
mov
decb
xchg
movsb
test
dec
in
lods
mov
sub
mov
push
aad
jle
jae
sahf
pop
xchg
out
or
add
out
pop
mov
mov
mov
int3
cmp
js
jb
loop
xor
jl
fs
pushf
cmp
jo
testl
fwait
mov
in
pusha
jno
bound
xor
inc
mov
sub
and
push
cmp
fdivrs
pop
jbe
fs
sbb
mov
add
and
lret
lock
icebp
pop
in
xor
int3
pop
jecxz
cmpsb
pusha
add
pop
xchg
cltd
sbb
test
jbe
and
jle
enter
notb
mov
add
inc
xchg
imul
push
outsb
ret
mov
or
enter
sub
and
fwait
adc
es
shlb
sbb
jecxz
mov
pop
test
add
add
xor
pusha
dec
pop
pop
cmp
bound
dec
int3
cmpsb
aas
divl
push
jo
dec
sarb
aam
or
jae
nop
mov
lods
rolb
xchg
mov
lock
fiadds
call
js
shlb
or
insb
loopne
fcomp
popf
mov
pop
mov
fadds
sub
shl
lea
adcb
fsubr
mov
aam
cmpl
lahf
cmpsl
test
repnz
push
hlt
out
insb
jle
push
cmp
insb
add
inc
idiv
rorl
mov
mov
fwait
enter
sarb
mov
cs
in
outsb
push
push
in
aas
jae
clc
pop
jbe
push
jg
jnp
jl
or
dec
mov
cmc
cs
stos
cltd
add
in
shll
mul
mov
fists
das
dec
mov
aas
mov
xchg
mov
call
js
cmp
push
xor
jno
or
insl
or
imul
loope
je
pop
xor
mov
push
jp
dec
mov
push
in
fiaddl
fisubrl
pop
jecxz
stos
mov
decb
jge
int3
sbb
xor
mov
mov
repz
sarl
lea
lret
js
push
jecxz
adc
xchg
mov
imul
and
push
jnp
clc
adc
fbstp
in
inc
pop
mov
mov
inc
dec
ds
jmp
dec
js
lods
aad
or
shrb
xor
and
xor
dec
cli
sub
add
movsb
into
cli
jge
xchg
xchg
sub
xor
mov
pop
hlt
pop
add
jp
repnz
mov
mov
dec
mov
mov
enter
lahf
into
lahf
jne
xchg
and
push
sti
inc
ds
test
push
sub
scas
iret
out
hlt
sub
aad
dec
adc
sub
xchg
and
sub
xor
xchg
fnstsw
repnz
mov
addr16
out
ficompl
mov
push
mov
gs
or
sbb
lret
push
pop
ds
fisubl
test
fisttpl
inc
jbe
jno
xchg
sahf
pop
push
mov
xchg
cli
and
sti
ret
fwait
add
or
sbb
inc
mov
and
pop
mov
mov
mov
imul
xor
addr16
sbb
mov
mov
js
mov
int
sbb
imul
insl
aaa
sbb
in
imul
pop
dec
pop
ja
push
add
scas
jmp
stos
repnz
repnz
cwtl
pop
jne
idivb
jno
xor
and
popa
xchg
and
xchg
cmp
mov
push
mov
adc
lds
filds
aam
daa
adc
movsl
loope
test
clc
mov
mov
xchg
mov
repz
sbb
aam
inc
sub
and
mov
call
lock
push
cmc
cmpsb
cli
xchg
into
xlat
cmp
movsl
mov
cwtl
jge
pop
jne
nop
adc
punpckhdq
xor
xor
xor
jb
or
adc
xorl
xchg
mov
dec
inc
pop
jg
pop
inc
mov
dec
call
and
les
daa
hlt
and
push
add
clc
fwait
les
lods
in
adc
lcall
push
cmp
jno
sbb
clc
pop
outsb
lret
lods
ficoms
or
gs
xor
icebp
xchg
sbb
cld
fcmovne
cs
sub
pop
or
enter
pop
pushw
pop
cld
or
pop
inc
cmpb
adc
js
inc
aam
cwtl
dec
test
ret
outsl
mov
loopne
insl
ret
sbb
jne
cli
sbb
mov
push
nop
sub
repnz
xor
sub
aaa
ds
ret
ljmp
add
lret
gs
mov
lcall
dec
aam
shlb
fwait
xor
loope
adc
popa
dec
xchg
leave
or
cltd
mov
lock
jnp
outsb
add
adc
sti
inc
cmp
mov
xchg
repnz
int3
xchg
adc
sbb
loop
jge
jo
outsl
pop
adcb
and
mov
or
imul
lret
jbe
xchg
sbb
inc
cli
mov
and
inc
sahf
mov
stos
xor
ljmp
repnz
test
bswap
xchg
or
push
in
cs
and
fstpt
adc
scas
cmc
push
jb
std
lods
jle
jg
and
jne
bound
cmp
daa
inc
aam
fstpt
cli
or
dec
or
pusha
lret
mov
inc
cmp
lea
mov
fmulp
xor
jb
dec
cwtl
aam
sbb
sub
orl
in
lahf
mov
add
adc
cmp
int
roll
sub
or
sub
mov
pop
push
add
and
push
lret
loopne
or
mov
xor
sahf
andl
jecxz
jmp
fwait
mov
cmpsl
mov
inc
cmpsb
xchg
sbb
pop
push
ja
int
jae
arpl
iret
mov
loopne
xchg
pop
xchg
fsubrl
out
jne
xor
inc
daa
or
sub
mov
and
imulb
clc
jl
iret
je
mov
enter
xlat
je
xchg
out
adc
popf
xor
jno
xchg
push
or
mov
push
fadds
or
inc
cmp
jl
das
add
push
leave
xchg
pop
out
cmp
push
adc
mov
jmp
push
jo
call
sub
pop
xor
stos
adc
mov
sub
jne
loope
push
jae
mov
faddl
push
xchg
sub
mulb
mov
fidivrs
cmp
mov
nop
xchg
xchg
outsl
dec
sbb
in
out
outsl
and
fwait
push
mov
cmp
inc
jb
in
test
pop
pop
lock
stc
mov
das
and
stos
cmpsb
jbe
test
mov
in
xchg
push
popa
add
fs
mov
xchg
xor
std
xlat
inc
push
aad
fcomip
aas
cltd
xor
cmpsb
push
cmp
aam
nop
movsb
mov
mov
jecxz
push
add
leave
sub
and
inc
dec
xor
mov
das
jbe
sbb
dec
jns
mov
sbb
mov
xchg
sbb
ljmp
lret
bound
jne
mov
sbb
sub
sub
adc
push
cwtl
mov
movsb
test
cmpsl
out
daa
push
mov
inc
pop
sub
sahf
loop
adc
imul
lret
shlb
dec
pushf
inc
js
xor
cmpsb
mov
les
out
jge
mov
movsl
mov
in
movsb
call
dec
jno
test
xor
repnz
scas
mov
loop
adc
or
cli
xor
test
data16
dec
mov
neg
scas
jbe
je
pop
out
or
stos
pushf
mov
xchg
push
mov
retw
out
jmp
ret
pop
cld
mov
xor
out
popf
or
sar
int3
mov
or
mov
or
and
in
dec
addb
sub
pop
push
pop
out
sbb
sbb
sarl
stc
jg
and
test
movsl
mov
inc
jmp
fidivrl
push
movsb
int3
out
popf
adc
mov
je
mov
add
imul
jno
xchg
inc
pop
cmpsl
nop
mov
push
cmp
loopne
and
mov
cmp
add
test
dec
or
fisubrl
xchg
mov
ffree
cmp
sbb
inc
pusha
clc
mov
out
movb
dec
xchg
pop
sbb
add
enter
inc
inc
inc
lods
push
popa
mov
pop
fadds
inc
xlat
popa
hlt
mov
in
ficompl
push
or
xchg
test
addps
loopne
inc
jo
mov
dec
xchg
mov
leave
mov
jecxz,pn
in
dec
jmp
mov
cld
dec
pop
sti
push
jle
rorb
stos
pusha
xchg
repz
cmp
mov
jnp
adc
push
fdiv
inc
adc
lods
jl
pop
pop
fimull
std
shrb
sar
gs
mov
push
popf
in
movl
push
push
aam
xchg
jbe
scas
into
xchg
mov
fcmovnbe
inc
mov
push
sub
cmp
aad
outsl
int
push
sbb
or
ficoms
cld
dec
int3
fidivrs
add
daa
mov
stos
sbb
add
outsb
fldt
pop
rolb
iret
push
cmp
dec
push
cmp
mov
push
pop
cmp
loope
mov
mov
or
or
dec
mov
cltd
fnstenv
push
mov
or
movsl
sub
popf
mov
lods
bound
imull
sti
sub
stos
in
xchg
adcl
ret
js
ss
lods
test
cmpsl
xor
stc
push
jp
lret
cmpsl
sbbl
phsubw
mov
cmp
sti
push
fsubrl
xchg
movsw
rcll
sbb
cmp
mov
in
mov
sbb
int
adc
ss
xchg
jg
sbb
and
inc
sbb
jle
arpl
xlat
je
adc
in
aam
or
or
mov
xor
push
or
das
imul
cs
add
jns
dec
aad
adc
enter
cmp
adc
pop
push
ja
xor
sub
push
mov
adc
cmpsl
sub
out
bound
sbb
cwtl
js
xchg
test
push
cmpsb
cmp
testl
jle
mov
push
sub
or
lret
cmp
addb
dec
jle
xchg
arpl
mov
cmp
cld
xor
sbb
out
adc
out
jae
xor
or
adc
repnz
testl
fs
sarl
push
negl
pop
bound
out
lods
lret
mov
mov
jmp
fiaddl
fld
js
je
and
bound
adc
push
jne
movsb
lahf
adc
push
sarl
sub
jno
jp
push
mov
aaa
int3
push
dec
pushf
adc
add
lds
jno
mov
pushf
jne
jmp
cmp
cmovno
or
das
inc
push
inc
jb
sbb
push
data16
mov
ret
or
inc
daa
ss
int3
ljmp
inc
add
fnstenv
cmp
sbb
dec
cmp
cld
dec
in
shll
repnz
outsl
sbb
cli
mov
insl
sbbb
xchg
inc
fs
sub
insb
or
mov
addb
mov
icebp
adc
sub
push
inc
xchg
xor
push
gs
in
sbb
lods
addr16
les
push
decl
mov
xor
call
mov
push
mov
dec
les
xlat
ds
popf
pop
call
je
dec
lahf
dec
inc
cli
jg
sbb
add
xchg
cmp
andb
cmp
mov
inc
sbb
xchg
int
pop
sbb
mov
xchg
movsb
sar
add
mov
dec
xchg
dec
nop
pop
ds
scas
jp
data16
or
loop
xchg
mov
lret
aas
push
out
pop
call
cmp
push
mov
cmp
loop
push
fwait
push
jg
leave
std
cld
mov
dec
fwait
lods
sub
stos
shll
push
pop
lret
lcall
inc
mov
cs
mov
inc
lahf
idivl
push
add
pushl
adc
jmp
pusha
mov
notl
xor
cld
sbb
bnd
dec
insb
sbb
mov
je
out
jge
and
cwtl
ret
mov
sub
add
mov
cmp
fbstp
add
icebp
outsb
pop
pop
mov
jo
loop
les
filds
cmp
call
jns
leave
test
fwait
stc
ljmp
cli
test
aam
or
nop
nop
scas
sti
fisubrl
pop
xchg
in
and
test
fucomip
xchg
dec
jbe
hlt
or
popf
xchg
scas
add
push
push
push
insl
cld
push
pusha
fildl
inc
add
mov
aad
je
xchg
in
fcomip
jg
mov
adc
mov
or
and
add
ret
sti
push
mov
fs
arpl
xor
sub
ret
daa
push
ret
jo
mov
xchg
adc
add
lahf
rcl
cmp
cmpsb
loop
int
cmp
iret
jb
sbb
pop
adc
in
in
pusha
sub
adc
inc
inc
mov
fwait
je
push
repnz
jns
fcomps
int
mov
sbb
mov
pop
lods
sbb
lods
pop
mov
dec
sub
mov
stc
test
push
int
mov
lock
mov
mov
mov
jp
call
dec
mov
scas
cmp
sbb
mov
enter
push
sarb
js
std
ret
dec
leave
inc
loop
cmp
pop
movsl
xor
cmpsl
jbe
fs
cwtl
shrb
hlt
clc
jno
or
test
in
js
test
in
and
pop
xor
popf
dec
cmc
sti
and
out
nop
insb
lret
mov
mov
test
add
nop
xchg
call
pop
mov
xchg
add
inc
xor
call
repnz
add
imul
inc
sahf
sbb
sar
dec
out
jmp
inc
add
out
mov
ss
adc
enter
lock
push
adc
jmp
outsl
pusha
mov
movsb
mov
xchg
adc
xchg
gs
push
es
xchg
jmp
xor
movsb
sbb
and
pushf
xor
jo
or
divb
mov
cs
inc
repnz
inc
mov
orb
cmp
xchg
dec
popf
add
add
or
int
loope
hlt
mov
in
es
push
hlt
push
xor
sbb
pop
cwtl
sub
aam
test
pusha
add
adc
test
pop
push
movsb
dec
sub
dec
mov
xor
jge
inc
aad
rorl
insl
xchg
jo
cmp
mov
out
adc
into
jge
test
pop
xchg
inc
cmpsl
dec
sbb
int3
mov
sbb
cmpsl
sub
pop
nop
mov
outsl
ret
inc
aas
mov
mov
mov
ja
ret
cmp
mov
into
xor
mov
sbb
pop
cld
adc
pop
dec
push
push
mov
repnz
insb
lods
mov
rcl
and
js
pop
mov
gs
xchg
sub
sub
loopne
fisttps
pop
sbb
test
jnp
push
insb
repnz
mov
movsb
sbb
jp
jl
xchg
push
call
gs
fcomip
cwtl
add
enter
sbb
mov
test
loopne
int3
outsb
leave
adc
and
int
jo
ja
pop
pop
jo
mov
mov
inc
int3
pop
xchg
push
xchg
das
imulb
pop
and
xchg
pop
rcr
popl
dec
adc
xor
std
push
int
popf
mov
inc
cmp
lcall
fmull
fiaddl
mov
xor
xchg
enter
cld
mov
xchg
imul
sbb
in
mov
jge
stos
adc
cwtl
ror
decb
sbb
lock
mov
dec
in
sub
in
xchg
shlb
pop
js
sub
nop
and
cmc
int
insl
xchg
sbb
loop
mov
cmp
cmp
sar
sub
mov
mov
mov
push
xor
push
xor
imul
mov
insb
pop
lret
pop
movsb
rorb
adc
subb
pop
dec
jns,pt
gs
ret
add
adc
add
xor
add
push
mov
fisttpll
xlat
dec
fs
popf
ja
or
imul
adc
push
stos
rcrl
mov
inc
or
orb
loopne
xchg
lods
sbb
pop
iret
leave
mov
into
fisttps
push
push
cmp
sbb
xor
jmp
pop
fsubrl
pop
sub
dec
cmp
test
jmp
sbb
add
and
or
lret
push
ja
mov
aad
push
lret
iret
jne
jle
mov
adc
pushf
icebp
fs
add
mov
push
jbe
ja
lret
and
out
or
movsb
add
aad
cmpsb
loopne
jb
xchg
push
inc
std
sti
cmp
in
push
dec
testb
arpl
aaa
leave
fistps
test
imul
cld
ja
sbb
les
sub
test
push
mov
jge
or
inc
cltd
inc
jecxz
jp
mov
sti
sbb
frstor
movsb
dec
lds
and
iret
xlat
ret
outsl
cmpsl
push
in
xchg
js
mov
xchg
mov
mov
fsin
inc
imul
mov
les
cmp
lret
mov
dec
xchg
pop
fstps
add
hlt
jno
loopne
out
sub
add
push
adc
ret
hlt
inc
mov
fists
mov
jmp
stc
jge
xor
push
data16
dec
sbb
pushf
add
xchg
lret
dec
mov
lds
xchg
stos
aam
lret
dec
leave
es
push
push
or
pop
mov
add
xor
cmc
mov
addl
or
or
dec
test
dec
add
notb
ds
adc
push
inc
mov
inc
and
push
sbb
call
mov
xor
int3
cs
scas
adc
gs
gs
js
mov
cmp
popa
insb
pusha
mov
inc
icebp
mov
mov
ds
dec
jno
xor
stos
loop
jg
outsl
test
xor
cmp
push
and
pop
fsubs
addr16
xchg
and
dec
xchg
mov
in
xchg
mov
mov
jmp
cmp
cli
pushf
out
mov
mov
add
lcall
loope
js
lods
push
insl
in
or
aam
mov
outsb
mov
sub
pop
dec
dec
test
xor
pusha
imul
arpl
out
lret
cmp
lahf
loope
dec
add
jg
sub
jae
sbb
fdivrl
cmp
lods
mov
xchg
jnp
blsic
fidivrs
sub
xchg
out
pop
cs
scas
xchg
jl
push
mov
test
push
mov
out
insl
andl
jmp
jp
das
icebp
repz
and
mov
or
cmc
ljmp
or
sub
jnp
sbb
aaa
pop
jp
xor
movsl
bound
frstor
jg
les
pop
adc
pop
pop
sub
jl
jl
and
out
xor
and
shrb
push
or
xchg
dec
cbtw
jns
jnp
leave
sub
in
hlt
add
add
jmp
sub
mov
loop
stos
add
rcrl
ret
mov
inc
dec
xor
and
inc
cltd
inc
insl
and
fs
in
push
into
sbb
dec
ds
ljmp
jns
test
std
inc
stos
out
cmp
int3
pop
stos
out
repnz
xchg
clc
cmpsb
stos
adc
xchg
push
dec
xchg
pop
inc
jp
enter
add
mov
movsb
sbb
sub
and
mov
sbb
ja
xor
mov
mov
add
ja
in
repnz
or
inc
xchg
xchg
aas
xchg
das
call
mov
pusha
mov
push
lea
mov
xor
jb
aaa
and
mov
pop
pop
mov
push
fcomps
add
sbb
fldln2
lret
lahf
mov
xchg
jecxz
mov
out
xchg
mov
xchg
sub
or
inc
pop
sbb
ljmp
xor
test
cmp
stos
cmpsl
ret
xor
jl
ljmp
jl
xor
xor
stos
xchg
xor
add
ja
sbb
sahf
add
in
sbb
cmp
push
mov
inc
ficomps
mov
xchg
jno
adcb
movsl
lahf
subb
mov
popf
sbb
jns
insl
sbb
daa
insl
test
push
jns
dec
dec
push
and
add
mov
out
lcall
lea
inc
ds
hlt
out
mov
aaa
or
xor
sbb
sbb
dec
jg
cltd
out
mov
enter
mov
mov
jl
inc
enter
aad
jno
jge
leave
or
fnstcw
or
hlt
scas
daa
shrd
push
cmp
sbb
jns
xchg
repz
or
xchg
add
cmp
or
inc
jge
dec
dec
fcomp
aas
into
pop
add
xor
es
clc
or
outsb
pop
push
daa
push
jno
insb
scas
mov
pop
dec
pushf
lahf
outsl
mov
subl
cmp
push
orb
repz
and
xlat
sbb
or
mov
xor
insb
or
push
pop
xlat
pushf
mov
arpl
sbb
push
push
jbe
ss
rorl
dec
jecxz
jge
and
pop
inc
popf
mov
pop
xor
adc
in
inc
mov
jecxz
mov
inc
outsb
lcall
fld
pop
ja
jns
fbstp
mov
aaa
jp
ljmp
dec
mov
roll
sbb
sub
add
xchg
cmp
fistpl
subl
inc
mov
gs
ds
xor
add
icebp
nop
test
pusha
je
xor
flds
inc
movsb
clc
sbb
xor
inc
pop
cmp
mov
push
idivl
xchg
out
aam
and
fistpll
lcall
mov
sub
int3
cmp
out
test
xchg
or
inc
cmc
push
inc
or
das
pop
dec
mov
cmp
mov
rcl
jno
rcrl
scas
pushf
sbb
cmpsb
add
mov
fidivrs
inc
sub
add
cmp
xor
add
loop
push
adc
rcrb
rcrb
adc
mov
pop
pop
xchg
inc
xor
mov
aas
roll
or
pop
mov
cs
js
sbb
adc
ss
dec
mov
arpl
jg
mov
mov
daa
xor
inc
cld
aaa
loop
movsl
mov
stos
je
imul
arpl
aas
das
pop
cltd
lahf
mov
hlt
shll
sahf
int3
stos
pop
jae
jp
scas
push
int3
les
shlb
test
lock
add
push
test
lret
setg
test
leave
lods
icebp
jmp
or
pushf
loope
dec
xor
mov
mov
cs
lcall
imul
jo
sti
push
push
ret
xchg
push
jbe
pop
sub
mov
cld
mov
sti
or
lret
stos
dec
inc
stos
or
jne
add
fistpl
jecxz
pop
inc
dec
xchg
call
mov
or
test
mov
xchg
iret
cmp
in
in
scas
orb
pop
loop
adc
inc
movsb
stos
loopne
insl
mov
inc
and
js
xor
gs
or
pop
cltd
insl
pusha
inc
cmp
mov
ret
add
push
clc
aas
roll
gs
jbe
dec
movsb
ror
jmp
nop
sar
mov
das
mov
or
outsb
dec
fnsave
cmp
inc
arpl
sub
push
in
and
push
or
js
push
lahf
sahf
mov
xor
test
gs
ret
mov
es
add
test
test
cs
xor
sbb
xor
cmp
stos
push
sbb
inc
or
dec
or
inc
sbb
js
scas
add
inc
mov
dec
movsl
cmp
or
xor
mov
fadds
sub
in
lods
push
mov
iret
repnz
dec
push
popf
mov
aad
push
fmull
aad
repz
cmp
add
into
pop
into
pop
stc
mov
dec
sbb
dec
inc
adc
xchg
cli
and
sbbb
jmp
or
sub
add
lods
ljmp
shlb
aad
mov
or
mov
movsl
pop
in
sahf
mov
lret
in
push
rorl
cs
imull
ret
or
in
dec
pushf
sarl
movsb
or
sbb
out
inc
inc
pop
mov
mov
mov
pop
cmp
movsb
fnstenv
das
xor
cs
inc
stc
mov
mov
sub
dec
cltd
jp
mov
sub
cmp
mov
dec
xlat
scas
xlat
inc
sti
push
mov
inc
jl
arpl
cmp
outsl
xlat
out
add
ljmp
and
sbb
xchg
nop
sarl
or
sub
sti
jmp
sub
inc
sbb
lock
icebp
fs
out
loopne
jge
inc
pop
out
cmp
scas
sub
std
mov
call
add
mov
movsb
xorl
add
jns
adc
xchg
xchg
mov
adc
pop
daa
std
das
fcompl
in
ficompl
mov
adc
shl
insb
hlt
ror
push
movsb
mov
js
aam
push
out
inc
out
push
inc
je
mov
dec
inc
mov
sahf
aaa
lods
jnp
cmp
mov
jg
and
aad
xlat
mov
int3
xchg
jne
adc
or
xchg
xor
mov
or
cmp
xchg
std
pop
xor
xchg
ja
in
enter
inc
mull
or
aad
test
mov
pop
sub
xchg
xchg
bound
xor
stc
xchg
es
push
mov
pop
in
insl
les
cmp
stos
and
mov
daa
pop
mov
je
ret
ss
or
mov
mov
adc
jl
shll
xchg
aad
mov
add
stc
lret
pop
aam
aam
out
sbb
mov
push
jae
ja
pop
mov
je
sti
outsb
sbb
mov
js
int3
jae
aaa
call
pop
lret
leave
js
test
pusha
cmp
mov
inc
add
push
repz
xlat
sti
and
push
stos
xchg
jbe
sub
in
arpl
pop
lcall
pop
into
xchg
add
push
out
lret
cmc
cld
adc
mov
push
adc
and
imul
js
pop
mov
dec
and
fs
xchg
addr16
outsl
push
pusha
cmpsb
push
stc
shl
test
pop
jmp
pop
es
pop
add
lea
shl
stc
lds
mov
icebp
mov
ds
fwait
mov
push
fnsave
push
add
out
or
cmp
out
int3
out
inc
or
pop
fnstsw
lock
mov
cltd
xchg
je
xchg
push
clc
aam
ja
pop
in
sbb
pusha
dec
mov
ja
adc
xor
push
mov
or
in
jecxz
imul
popa
adc
bound
mov
sbb
mov
push
cmp
lea
jne
fs
xor
sbb
push
adc
or
xor
out
insl
leave
pop
xchg
and
jb
lods
xor
cmp
cmp
out
push
es
cmpb
addb
sub
cmp
add
bound
cmc
mov
nop
into
or
adc
fsubs
pop
int3
les
cwtl
sbbl
dec
jmp
adc
mov
fdivr
xor
xchg
negl
test
mov
outsb
mov
outsl
cmp
inc
fistl
mov
sub
into
and
arpl
or
sub
addl
xchg
mov
cmp
rcr
data16
mov
mov
sahf
cwtl
test
jno
or
clc
lea
pop
inc
push
adc
lret
hlt
aaa
aaa
xor
cs
mov
jle
mov
wbinvd
or
cmpsb
bound
lds
in
jbe
ret
filds
aad
dec
mov
pop
ror
xchg
mov
cmc
std
sub
repz
inc
jle
test
jmp
dec
or
clc
je
int3
movsb
xchg
inc
add
cmpb
sahf
ficompl
repz
mov
les
inc
psrld
jp
cmpsl
pop
int
sub
out
dec
push
out
jnp
jl
movsb
popl
or
ss
loopne
out
ja
leave
xchg
and
cmc
xor
movsb
movsl
sbb
or
imul
iret
iret
mov
push
outsl
and
inc
sub
mov
arpl
push
cmp
dec
and
jae
push
mov
icebp
push
or
add
jle
mov
js
mov
cli
add
sbb
int3
mov
sub
lcall
mov
push
xor
je
cmp
cmp
mov
cli
add
sbb
dec
stos
into
jecxz
outsl
jg
icebp
pushf
sbb
mov
cld
cmp
push
cmpsb
ret
jo
subl
lods
les
push
mov
mov
fcom
fs
cli
pop
aaa
jns
mov
mov
pushf
xor
pop
jmp
iret
add
push
or
and
shll
fisttpl
inc
mov
sbb
testl
lods
mov
lods
xor
dec
xchg
xor
mov
lods
jmp
out
and
jmp
inc
mov
test
in
push
pushf
mov
imull
lds
sahf
jo
cmp
sub
mov
loope
inc
lods
leave
loope
repz
mov
sub
sti
lret
addl
jmp
lods
outsb
add
push
sbb
mov
xor
cmp
cmp
pop
rcrl
lahf
pop
jns
daa
fdivl
fsubrs
pop
lret
sti
xchg
adc
mov
daa
dec
insl
adc
pop
sbb
lret
scas
push
fdivl
orb
daa
cwtl
or
cmp
push
push
sahf
loopne
inc
out
cmc
psrlw
xlat
out
std
mov
xchg
inc
addr16
hlt
push
sahf
ja
das
jl
ret
add
loope
cmpsl
xor
lods
pop
pop
add
aam
jecxz
je
xor
enter
xor
push
dec
mov
mov
xchg
mov
sub
je
pop
xchg
and
dec
or
mov
mov
inc
xor
sub
imul
rorb
pop
out
add
mov
pop
mov
jns
outsl
addb
or
dec
call
push
test
xchg
jle
mov
sbb
cmc
mov
mov
mov
sub
inc
mov
outsb
rcrb
jae
or
decb
jae
mov
imul
test
popa
stos
dec
jbe
mov
inc
rorb
add
jbe
lods
sti
fwait
pop
mov
add
stc
iret
test
es
add
mov
dec
mov
xor
bswap
dec
or
xchg
xchg
in
cs
roll
or
stc
jg
mov
pop
cmp
rcl
lret
faddl
lea
into
subb
or
mov
adc
or
xchg
push
sub
out
push
gs
shr
hlt
pop
pusha
daa
loope
out
and
icebp
test
jg
pop
dec
dec
add
dec
add
inc
shlb
mov
mov
enter
adc
and
push
mov
add
xchg
pop
out
mov
dec
mov
fs
push
rcl
mov
jle
sub
jle
inc
push
lods
loopne
loopne
pop
test
popa
jle
fcompl
add
jb
ret
cmp
into
cmc
rcll
or
xchg
push
inc
test
xchg
ror
fwait
push
add
dec
xchg
cmp
ds
or
std
mov
mov
adc
add
popf
sbb
ja
int3
push
sbb
ljmp
adcb
inc
fsubr
cmp
fiadds
push
sub
cmpsb
xchg
mov
ds
dec
push
shl
xchg
rol
fimull
ret
mov
test
mov
call
push
inc
dec
jne
cmp
js
ja
loope
aas
dec
mov
sbb
fldt
inc
dec
sahf
mov
mov
popa
push
idivb
jb
je
or
jo,pn
push
aad
and
pop
jge
or
cmp
cmpsb
jle
nop
inc
gs
inc
mov
rorl
add
jno
xchg
stos
inc
outsl
sbb
push
push
push
jmp
sub
mov
xlat
outsb
das
jne
xchg
fisubrl
mov
hlt
jge
insl
jp
push
mov
xchg
fwait
or
inc
sub
push
fcompl
lea
xchg
out
gs
xorl
ljmp
and
popf
sti
xor
les
add
sub
inc
test
popf
sbb
jp
sbb
add
dec
inc
hlt
leave
sti
addr16
decl
mov
ret
fistl
add
mull
arpl
push
test
mov
shlb
dec
and
cld
aas
clc
aam
imul
sub
or
or
push
outsl
clc
clc
and
loop
pop
jbe
leave
adc
cmp
repnz
popf
shll
movsl
adc
fcoms
lods
and
jmp
stos
and
out
int3
pop
mov
movsl
loopne
test
imul
xchg
int
negl
mov
xchg
mov
jmp
sbb
into
subl
adc
mov
das
adc
sub
mov
sub
jb
adc
addr16
jbe
inc
sbb
sbb
rcr
out
adc
mov
scas
or
adc
in
push
shl
and
xchg
push
iret
cwtl
jp
push
lods
jge
and
mov
call
push
out
sub
scas
xor
and
cmp
aas
icebp
pop
mov
mov
data16
shrl
fprem
test
movsb
repnz
loopne
subb
test
cmp
dec
lods
sub
lock
subl
sbb
std
ret
and
inc
sahf
pop
lea
sub
pop
xchg
xchg
push
pop
fs
scas
add
cmp
and
les
gs
pop
je
add
inc
push
dec
jg
sbb
adc
stos
lcall
mov
jns
js
jmp
mov
insb
mov
sub
das
aaa
pop
mov
ret
sti
sbb
mov
mov
fcomi
push
icebp
lds
mov
cmp
xor
testb
cmp
jmp
daa
mov
sub
jle
fs
imul
dec
cwtl
and
pop
pop
pop
push
mov
stos
movsl
es
and
adc
rcll
cmp
mov
fwait
jp
mov
jmp
aam
outsl
fdivr
xor
xchg
and
les
push
aad
sbb
idivl
hlt
test
cltd
cltd
daa
sbb
clc
lret
fcoms
cltd
pop
lea
ret
lret
subb
das
fiaddl
xor
sub
insl
sti
sbb
leave
popf
add
push
mov
jo
push
incb
sar
repnz
in
mov
xchg
fcoms
mov
int
lret
ret
ret
cmp
pop
lahf
lret
insl
jg
dec
mov
mov
jle
pusha
push
pop
mov
inc
mov
push
or
movsb
jbe
into
fistpll
pop
scas
push
mov
adc
jp
mov
pop
add
ret
sub
movl
mov
jle
inc
pop
push
testb
push
gs
pop
adc
and
dec
mov
and
enter
xchg
rcpps
and
xchg
jno
insl
mov
xchg
sbb
jo
mov
movsb
lock
in
dec
cmpl
negb
mov
dec
inc
sub
inc
push
sahf
cwtl
sub
in
dec
scas
inc
jmp
dec
adc
mov
jb
lcall
cli
sbb
add
and
or
repz
aaa
jg,pn
push
shlb
popa
jnp
jo
aad
adcl
jl
mov
faddl
add
add
xor
scas
std
sbb
mov
add
lds
es
data16
sbb
movsl
jl
mov
loope
rclb
enter
push
xchg
or
dec
shlb
jns
int3
or
mov
or
jge
push
ds
xor
xor
je
mov
inc
adc
mov
dec
xchg
andl
push
mov
outsl
std
add
jns
ss
pop
aas
rcrb
iret
add
xor
outsb
inc
and
or
out
jno
in
divb
sub
sub
and
jmp
out
sbb
cmp
pushw
adc
jecxz
or
gs
out
je
aad
sub
inc
mov
jmp
out
xchg
push
mov
lods
orl
add
in
push
pop
jb
push
mov
outsb
repz
cmp
rcrb
ss
clc
cli
movhlps
xor
jmp
mov
gs
sbb
cmpb
push
mov
movsl
fnstenv
mov
loope
shll
imul
push
mov
outsb
icebp
xor
fmuls
in
xchg
js
add
inc
pusha
mov
xor
and
scas
push
vcvtss2si
in
push
push
jb
jb
movsb
xchg
push
mov
das
repnz
repnz
mov
mov
or
xor
mov
fnstcw
leave
cmp
jmp
sbbl
addb
sbb
push
sar
mov
bound
dec
push
pop
inc
call
cs
jp
mov
aas
pop
dec
cwtl
sbb
pusha
loop
subb
repz
pop
xchg
adc
outsl
sub
mov
inc
aaa
int
or
scas
shll
mov
lds
insb
lret
cmp
mov
dec
xchg
inc
xchg
mov
aad
cmpsb
jge
cmp
rol
test
testl
jbe
int3
push
jne
loop
push
cmp
pop
jle
mov
cmpl
inc
clc
push
xchg
outsl
jecxz
f2xm1
fidivs
xor
mov
cmpsl
faddl
push
ds
or
add
push
in
xchg
fucomp
jnp
int3
lods
jmp
out
inc
and
xchg
scas
shld
mov
xor
pop
mov
pop
decl
sbb
mov
std
cmc
les
jno
aas
push
insb
jg
lret
jae
add
inc
shll
inc
and
mov
lods
xor
repnz
lds
pop
cld
xor
sub
stc
xchg
sbb
add
ja
xor
cmp
jge
pop
cmp
inc
mov
cli
xor
push
cmpsb
add
jo
push
mov
sbb
loope
rorb
cmpsb
jmp
dec
or
loop
push
xorl
and
pop
mov
mov
jmp
cs
pop
jae
imul
aas
cmp
fs
sbb
pop
arpl
or
aas
xorl
mov
js
mov
lea
dec
pop
and
lret
jle
sbb
xor
xor
jg
pop
clc
fisubl
jae
push
mov
push
xor
inc
std
popa
mov
or
cmp
cmp
outsb
dec
cltd
loop
lock
imul
or
pop
and
sub
dec
dec
pop
push
cltd
mov
jne
insb
cs
bound
hlt
mov
out
pop
js
sbb
cmpsb
in
adc
pop
repnz
add
cmp
cmpsl
sub
pop
sti
mov
lds
jge
inc
push
incl
or
sub
pop
mov
or
sub
sbb
inc
and
repnz
scas
xchg
sbb
adc
mov
icebp
adc
mov
out
sbbb
dec
cmp
add
pop
addr16
out
lcall
cmc
pop
jb
xchg
mov
movsl
dec
insl
pop
inc
jnp
out
sti
je
insl
sub
pop
push
xchg
sti
dec
sbb
inc
cmp
add
stos
pop
adc
insl
mov
dec
and
in
adc
mov
cmp
aaa
and
out
cmp
sub
cmp
mov
sarb
mov
scas
lock
jg
hlt
sbb
push
inc
xchg
fsub
xchg
jmp
dec
das
or
lret
ret
rorl
movl
ret
lods
scas
dec
push
cli
aam
sbb
pusha
fwait
sub
xchg
aad
cli
lret
pop
jno
jns
dec
adc
mov
stc
fimuls
sub
push
xor
ljmp
mov
xor
xor
adcb
cltd
sub
out
pop
add
or
inc
in
xchg
lds
add
out
or
pop
xchg
push
lcall
push
in
aas
adcb
inc
adc
inc
sbb
sbb
sbb
cmp
nop
and
mov
out
adc
flds
add
xchg
cltd
idiv
outsl
int
ss
pop
jmp
pop
jmp
out
sahf
jg
subl
or
aad
or
das
stos
jnp
pop
dec
sbb
std
and
xchg
scas
fstpl
push
or
xchg
jne
xchg
sub
jp
push
mov
adc
inc
push
adc
in
sub
xchg
test
cmp
cmp
push
sub
in
inc
jle
stc
sbb
add
js
jcxz
sbb
into
xor
or
test
je
hlt
sub
jg
scas
mov
cs
aaa
sbb
test
inc
push
fadds
mov
aaa
outsl
sbb
rclb
add
mov
pop
repz
roll
jmp
xchg
mov
mov
scas
enter
sti
jg
out
stos
pushf
xchg
xor
xchg
icebp
push
sub
add
shlb
shrb
xchg
cmpsl
jmp
and
out
or
stos
cmpsb
mov
cli
push
push
push
lcall
pop
sar
cltd
lds
mov
xor
pop
scas
push
shrl
imul
or
inc
inc
and
js
aaa
push
cli
hlt
add
call
adc
or
cmc
mov
and
int
mov
inc
mov
addr16
das
dec
add
andb
xchg
clc
adc
ja
fldl
jne
dec
dec
out
jmp
mov
mov
sbb
push
pop
lods
or
mov
bound
cmp
inc
push
cmp
cmc
test
dec
push
ret
pop
ror
cs
and
mov
sub
std
mov
imul
movsb
ja
adcl
and
les
outsl
adc
pop
push
pop
inc
sub
movsl
adc
sub
rorb
dec
insl
sahf
push
mov
cltd
cmp
add
in
sti
push
xchg
test
movsl
test
or
sbb
xor
mov
ss
xchg
cmp
mov
cld
je
xchg
aam
icebp
out
cmp
imul
ficomps
lods
mov
nop
dec
or
jb
or
je
pop
or
mov
fstps
push
insl
push
sbb
test
test
sub
jecxz
in
and
das
mov
cmp
ret
movb
push
or
inc
jge
enter
int3
aam
pop
inc
xchg
adc
pop
adc
xor
test
movsb
sub
or
mov
lods
cmpsl
inc
adc
cmp
inc
adc
jge
lea
data16
mov
sbb
jae
xchg
cmp
push
xchg
js
cld
xchg
int
lock
pusha
arpl
jmp
insl
dec
lahf
xchg
xchg
in
inc
ret
and
cmp
or
mov
and
sub
aam
fstps
mov
jo
es
movsb
jns
mov
jmp
idivl
sub
mov
das
in
lret
inc
ret
push
lock
loop
fildl
pop
dec
jg
and
or
imul
jp
xor
nop
cltd
xor
in
cmp
addr16
cwtl
imul
push
inc
xchg
test
cmpsb
push
xor
cmp
mov
out
arpl
and
loope
push
xchg
cmp
pop
cmp
dec
fcoml
sub
call
jb
in
adc
pop
push
pop
sti
or
popa
fcomps
nop
inc
fistl
imul
repnz
aaa
sub
pop
xchg
ss
subb
aaa
lods
jbe
outsb
jp
mov
addr16
jae
cmpsl
inc
cmp
add
xlat
int
sbb
xlat
dec
inc
mov
enter
sbb
subl
dec
fwait
and
cmc
mov
loope
ds
add
scas
les
mov
testb
jae
subb
cmp
testl
imul
lock
adc
xchg
inc
shl
pusha
or
stos
or
sbb
inc
mov
add
jns
jp
dec
loopne
aad
inc
push
lahf
clc
out
addl
clc
sub
mov
and
lods
xchg
sarb
ficomps
sbb
cmpb
test
out
sti
pop
faddl
dec
loop
sbb
or
es
movsl
sub
inc
repz
xchg
int
icebp
xchg
xchg
imul
pop
and
ret
out
xor
into
mov
inc
in
test
mov
std
shl
mov
adc
sbb
push
mov
add
nop
mov
lret
cmp
fstpl
and
xchg
cmpb
into
sbb
mov
movsb
or
shll
aad
mov
push
inc
jns
cmc
add
xor
pushf
nop
adc
dec
push
mov
jbe
jecxz
insl
insb
sub
sbb
and
mov
int3
lret
cmp
jns
je
xorb
push
sbb
xor
adc
hlt
cmc
and
dec
out
sbb
mov
je
bound
pop
xor
add
pop
jae
int
dec
aam
hlt
jge
dec
stos
add
insl
cmp
insl
dec
pop
popf
repnz
es
mov
push
and
outsb
loop
ljmp
das
jns
fmull
dec
out
test
jmp
jecxz
sahf
enter
dec
jo
les
insl
cmpsb
mov
add
repz
inc
lahf
adc
mov
push
mov
pop
rclb
insb
mov
out
addr16
xchg
pushf
and
adc
test
insb
test
repnz
cltd
cmc
stc
gs
mov
jno
push
scas
lahf
test
dec
imulb
fistpll
mov
sahf
xor
mov
mov
sub
cs
mov
xor
out
mov
test
xchg
mov
or
and
outsl
fucom
lea
sbb
mov
dec
lods
out
push
mov
push
mov
jnp
xor
es
mov
outsb
fsubrl
push
dec
repnz
hlt
dec
mov
popl
push
cmp
loop
int
add
push
xor
xor
cmp
aaa
dec
xlat
mov
lret
xlat
mov
movsl
inc
sbb
mov
jne
mov
decl
push
jle
sarb
rcl
jp
aam
fwait
pushf
lahf
sbb
lret
subl
cmpsl
or
rcr
inc
repnz
and
xchg
sub
iret
cmp
adc
shrb
sub
lea
aaa
jnp
js
shrb
cmc
outsl
mov
pop
outsl
repnz
mov
xchg
cmpsl
pop
movsb
mov
jecxz
mov
out
in
mov
mov
pop
jb
jmp
mov
jae
daa
repnz
loopne
pop
cmp
ficoms
cltd
jmp
inc
fcomp
pop
shrl
add
inc
mov
rorb
out
jecxz
out
xlat
sub
push
jne
daa
or
imul
cmpb
add
lock
and
push
pop
dec
xchg
ficompl
mov
cmpsb
lret
out
dec
aas
inc
cmpsb
push
stc
ja
mov
pushl
imul
mov
mov
out
jl
lcall
jb
and
hlt
mov
mov
mov
cmp
popf
push
xor
xor
jo
push
outsb
es
mov
es
or
imul
aas
pop
fsubrs
out
mov
or
mov
inc
iret
xchg
mov
faddl
stos
pusha
or
int3
pop
repz
mov
add
hlt
dec
xor
and
movsl
sarl
sub
clc
js
dec
popf
insl
push
fstsw
sub
pop
inc
fs
xor
outsb
sbb
insl
jns
jb
mov
mov
adc
loope
movsb
mov
and
adc
cs
inc
or
dec
shlw
or
jb
stc
lods
das
or
inc
iret
sub
add
adc
pushf
xchg
je
xchg
fisubrl
xchg
loope
cmp
adc
mov
or
fldenv
aaa
pop
xor
ret
jle
subb
jl
ret
shrb
add
inc
js
or
lret
pop
insl
lret
inc
outsl
mov
jp
inc
jb
nop
inc
lods
fadds
popa
cmp
jae
fisubl
add
dec
cmpsb
cmp
popf
addr16
sub
pop
mov
mov
adc
js
pop
ja
jmp
pop
addb
scas
in
mov
scas
fimull
aad
nop
and
rol
xchg
lcall
inc
or
mov
xchg
xor
int
lock
add
mov
mov
ljmp
fisttps
loop
jns
stc
xchg
movsl
repz
out
dec
dec
jg
mov
outsb
mov
std
pop
xor
adc
cmp
in
enter
jbe
mov
sarb
je
fcoms
or
ljmp
gs
cli
and
fsubrp
xchg
sbb
ficoml
cltd
popf
int
ljmp
and
or
or
aaa
fnstsw
cmp
mov
pop
mov
sbb
and
push
xchg
loopne
scas
jp
mov
xchg
push
pusha
mov
stos
jo
push
push
add
push
leave
shll
pop
jno
jl
js
push
xchg
stos
iret
xchg
fadds
jle
dec
cli
sbb
xor
inc
push
iret
jae
loope
mov
or
nop
add
and
nop
aaa
mov
movsl
xchg
das
mov
and
dec
movsl
jo
rcrl
sti
mov
adc
lea
mov
or
sbb
loope
ret
xchg
pop
cmc
push
sbb
sahf
das
inc
int
mov
je
sahf
aaa
xorb
fistps
divl
push
adc
and
aaa
add
push
addr16
fcomi
mull
sbb
js
push
aad
clc
xor
loopne
mov
stos
sub
outsl
cmpsb
xorl
pop
int
inc
shll
cmp
mov
mull
ds
or
and
xor
mov
outsl
inc
jbe
xor
aad
or
scas
inc
fidivs
and
icebp
mov
clc
and
nop
pop
movsb
stos
icebp
or
test
xchg
sub
clc
cmp
lds
jp
mov
imulb
test
sbb
xorb
shrl
sbb
vpunpcklwd
mov
jo
cli
or
test
in
shrb
dec
adc
and
daa
sub
jne
lock
push
dec
xchg
mov
add
jnp
pop
inc
lcall
hlt
imul
push
add
es
cmp
into
push
pushf
mov
out
cmpsl
mov
xchg
pop
pop
fldl
mov
sub
push
loop
sub
adcl
stos
adc
sub
push
loope
lods
shr
mov
pusha
fidivs
stc
and
push
data16
push
or
dec
in
adc
enter
inc
lods
push
cmc
fisttpll
sbb
clc
fmull
aas
cmp
in
xchg
and
popf
inc
lods
fcoms
push
popa
shll
dec
push
push
sti
in
mov
cmpsb
je
cltd
repz
stc
xchg
and
cmpsl
lret
in
aas
out
sarl
int3
inc
popa
das
xor
pop
jno
sub
cmp
pop
xchg
das
lcall
jo
inc
ret
jb
imul
push
fs
sub
pop
enter
cwtl
leave
repz
jmp
aas
repz
pop
aas
outsb
or
and
or
out
jg
mov
insb
dec
fucomp
fidivrl
dec
xchg
and
mov
movsl
xchg
sbb
scas
inc
rorb
in
fstps
mov
mov
sub
xorb
cmp
push
fcmovnb
push
outsb
mov
xor
xchg
arpl
xor
lcall
scas
jecxz
and
lock
mov
xchg
scas
out
aad
jmp
sbb
repz
add
pop
in
cmp
inc
ror
int3
enter
xor
and
add
mov
fsts
xchg
push
push
movl
stc
stos
dec
mov
mov
push
jae
lahf
cwtl
cmp
jmp
mov
adc
or
cmp
call
fimull
bound
xor
shll
lods
adc
cmp
xor
inc
les
shl
sbb
pop
jp
aaa
lock
mov
jo
movb
neg
push
out
mov
dec
sbb
call
and
repz
adc
pop
and
pop
jmp
mov
or
cltd
stos
pop
push
or
xorb
sbb
pop
cmp
jecxz
adc
push
iret
pushl
fdivrs
ljmp
and
je
movsl
jo
daa
sbb
sub
inc
or
jbe
sarl
out
fildl
xchg
movsl
mov
inc
dec
test
in
mov
aaa
pop
iret
jle
dec
cmp
mov
pop
aas
add
out
sarl
mov
mov
pop
mov
call
pop
mov
add
pop
rcpps
cmp
jp
sub
adc
in
add
push
mov
dec
movsb
and
or
mov
add
insl
movsb
pushf
shrl
fidivrl
add
sbb
dec
insb
in
fs
aaa
push
loope
leave
sbb
aam
ljmp
push
popa
inc
icebp
xorl
mov
add
and
ljmp
fmul
xor
icebp
aam
sub
mov
or
xchg
out
sbb
cmc
imul
jae
les
adc
lock
pop
jo
or
in
mov
lcall
les
mov
or
flds
std
movb
fistl
movsb
sbb
lods
repnz
movsl
cmp
push
xchg
mov
add
xchg
mov
or
cmp
jle
dec
sub
xchg
add
ja
fistpl
jnp
sahf
inc
stc
sbb
sub
testb
inc
movsl
ss
pusha
movsb
fnstsw
xchg
xadd
insb
sbb
and
pushl
lods
add
add
jp
cmp
out
lret
loope
push
xor
pop
mov
xor
sti
mov
push
orl
mov
loope,pt
iret
shlb
push
jg
scas
mov
fld
andl
psrad
lcall
jecxz
pop
into
push
or
faddl
xor
leave
and
insb
xor
clc
outsb
test
leave
icebp
in
cmp
xchg
or
mov
call
stc
nop
pop
ljmp
insb
adc
and
sbb
cltd
and
arpl
adc
pop
xchg
xchg
imul
pop
es
cmpl
inc
popl
mov
adc
das
xor
pop
xor
loop
int3
mov
lahf
in
mov
ss
jb
xchg
xchg
cwtl
iret
mov
das
mov
xchg
ret
mov
imul
mov
loopne
mulb
fmuls
add
cs
sbb
cmp
pushf
cmc
lds
add
cli
out
mov
out
outsl
outsl
ja
faddl
pop
mov
cmpb
mov
push
es
in
push
xchg
xchg
nop
inc
icebp
or
or
jnp
jp
dec
std
inc
aad
lea
jne
cmp
in
inc
or
call
xchg
push
imul
push
das
sub
mov
sub
push
push
and
sarb
adc
or
add
add
gs
ljmp
shlb
call
fwait
js
enter
adc
sbb
jp
xchg
inc
sub
mov
jo
call
jmp
mov
sub
mov
mov
sahf
scas
pop
es
fldcw
imul
fisubs
mov
lcall
cli
push
xchg
mov
out
orl
jae
ret
inc
test
into
inc
out
adc
inc
add
jle
sub
cmp
mov
push
xor
mov
jp
repnz
pop
stc
fchs
mov
ds
movsl
push
out
jge
mov
imul
dec
jp
add
shll
or
and
rclb
add
xchg
ficoml
push
add
hlt
push
adcb
xor
adc
test
aas
xchg
push
leave
dec
mov
mov
xor
es
js
lock
lcall
fldcw
inc
movsl
arpl
xor
jl
mov
stos
xchg
test
push
sub
mov
sbb
lahf
sahf
inc
popf
push
xor
insb
and
pop
je
shll
test
lods
roll
adc
movsl
out
mov
sub
cltd
xlat
add
pushf
jae
mov
jns
pop
aas
loopne
lahf
mov
sub
imulb
mov
xor
mov
inc
scas
mov
fs
cmp
push
movsb
add
mov
or
les
or
testb
and
in
aad
clc
cmpsl
rcrl
add
sahf
sbb
inc
jge
mov
or
fmul
xchg
mov
pushf
add
test
jmp
mov
mov
jle
loope
orl
out
mov
lea
push
cmp
stos
xchg
negb
xor
out
cmp
adc
aad
cmc
jmp
aaa
sub
jp
cmp
lret
dec
push
sbb
aaa
jno
cmp
push
ret
outsb
push
mov
jg
xchg
je
ja
js
xchg
mov
out
imul
lret
push
pop
sub
or
movsb
jbe
std
loop
imul
les
int3
test
adc
add
push
mov
and
nop
jb
outsl
mov
cmp
sbb
popa
fnsave
test
xchg
movsb
lods
push
pushf
inc
je
or
mov
pushf
xor
xchg
inc
cmp
jmp
es
out
mov
xchg
sahf
mov
push
loope
gs
outsb
fs
jb
aas
mov
sarb
int3
fiadds
push
xchg
mov
lds
clc
inc
cmp
mov
mov
shlb
mov
sub
andl
dec
xchg
sbb
jge
dec
dec
stos
mov
cmp
sarl
js
pop
dec
sub
test
cmp
adc
and
lret
test
jl
push
mov
dec
xchg
mov
mov
enter
pop
aas
jae
cld
int3
pusha
pop
loope
outsb
cmp
or
into
mov
and
in
je
inc
cmp
aaa
mov
hlt
fisttpll
jmp
outsb
pop
cmp
mov
in
enter
push
ja
aad
das
pop
and
mov
push
aas
sub
jge
lahf
loopne
or
inc
inc
and
shll
lods
push
add
xor
pop
loop
es
stos
sub
js
mov
gs
leave
jne
jae
xor
jo
pop
jae
mov
mov
inc
mov
ljmp
cmpsb
ficomps
rclb
pusha
push
pop
adc
dec
cmpsl
jo
mov
dec
add
adcb
add
mov
test
xor
add
and
pop
push
inc
cmp
push
aaa
dec
xor
out
dec
test
add
sbb
push
xor
mov
imul
mov
xlat
imul
repz
fadds
mov
popa
adc
or
add
xchg
dec
fwait
mov
in
push
in
pop
outsb
mov
in
movsl
add
lock
or
lahf
adc
andb
ja
aaa
inc
lret
inc
shr
xchg
sarl
mov
data16
jge
fsubrl
jae
popf
std
pop
test
cli
sbb
inc
in
das
or
xchg
add
sub
test
adc
inc
inc
dec
hlt
rcll
cmp
daa
shrl
movsl
icebp
rcrl
ret
leave
gs
jp
lcall
push
ret
inc
sbb
rcrl
lret
pusha
jo
gs
sti
into
dec
push
outsl
sbb
push
adc
out
fwait
or
pop
xor
push
cmp
and
xchg
in
outsl
xor
push
push
mov
push
aam
pop
push
cmp
inc
addr16
in
or
or
bound
test
add
mov
or
pop
loop
pop
int
pop
arpl
or
aaa
shl
mov
imull
ja
xor
lods
aam
dec
and
mov
out
sbb
xor
cld
jg
sbb
xorl
stos
call
and
loope
pop
push
repnz
test
add
cmp
stos
sahf
add
push
scas
in
cmpb
push
ds
mul
insl
add
mov
xchg
popf
mov
cld
push
push
mov
mov
sahf
xor
jne
jbe
adc
mov
lea
add
daa
push
lea
loop
xor
sub
cmp
aad
inc
sub
or
fidivrl
loop
xlat
pusha
xor
fwait
lcall
adc
xor
pop
push
add
lcall
xchg
cmp
in
adc
ja
dec
inc
shlb
repnz
outsl
lea
lcall
pop
lcall
xchg
pushf
out
mov
push
test
pushf
sub
or
cld
jne
imul
inc
inc
jg
mov
and
into
ja
xor
int
lcall
push
pushf
xor
and
adcl
xor
push
push
mov
add
xchg
je
inc
sbb
lods
add
xor
leave
jne
leave
pushf
shl
fstps
inc
fsubr
pop
cmp
push
dec
and
fwait
cmp
adc
sbb
pop
je
movsb
rcrl
mov
xchg
scas
pop
push
mov
inc
push
repnz
enter
scas
mov
loopne
js
push
jecxz
std
cmp
lret
and
lahf
add
lret
mov
pop
dec
movsb
pop
rcrb
testb
dec
sub
pop
jge
stc
jecxz
cmp
adc
inc
test
dec
inc
test
das
call
sub
dec
pop
jno
adc
addr16
pop
loop
cmp
xchg
movb
pop
adc
leave
int
and
lret
xchg
dec
xorb
jnp
dec
outsb
or
ds
cmp
sbb
cmpsl
xchg
and
xchg
hlt
xorb
pop
mov
arpl
ret
sbb
pusha
stos
data16
xor
xchg
mov
inc
addb
imul
mov
int3
or
lods
popf
ret
add
xchg
or
fistps
lahf
out
loop
jg
dec
call
or
ja
out
inc
gs
or
outsl
adc
aas
clc
or
divl
outsb
outsl
scas
push
mov
sarl
int3
add
hlt
fstpt
notl
aad
scas
daa
sbb
fisttpl
lret
outsb
cmp
cld
xchg
pop
shll
js
cmp
jecxz
add
cmp
push
data16
fimull
int3
popf
in
dec
les
fisttpll
out
pop
and
inc
add
out
stc
shlb
mov
xchg
in
ljmp
and
dec
pop
loop
mov
in
inc
out
jne
js
hlt
rorb
push
lock
cmp
rcrl
imul
cmp
adc
aas
je
mov
and
push
sbb
inc
js
ret
mov
in
lahf
aad
cmp
test
mov
xchg
or
xorl
adc
ss
dec
rorb
lds
das
jl
int
cmpb
out
push
xchg
fwait
adc
lea
pop
cmpsb
push
and
movsb
insl
xor
jmp
testb
iret
movsb
push
outsb
gs
adc
movl
in
mov
xorb
loopne
shlb
mov
test
cmp
dec
in
xlat
sub
push
fcomi
insb
sbb
sahf
mov
add
ret
or
lret
ja
lea
aaa
clc
arpl
mov
es
std
mov
xor
mov
cmp
xor
sbb
sahf
xlat
aaa
in
xchg
int
sbb
xor
add
jne
lret
jecxz
in
arpl
shrl
in
sahf
jl
leave
cwtl
stos
adc
ret
ds
stos
fildll
xor
cmp
pop
je
fst
pop
pop
sub
imul
pop
cli
mov
pop
pop
fimuls
xchg
add
hlt
mov
int3
stos
js
and
nop
jecxz
jbe
mov
dec
xchg
mov
cmp
sbb
mov
clc
mov
dec
adc
sub
mov
gs
xchg
pop
xchg
ret
lret
aaa
into
loop
sub
fs
int
cmp
insb
inc
lahf
shll
call
sbb
push
lods
in
lea
aam
push
addr16
mov
rcr
lods
js
pop
sub
lods
mov
xchg
shl
add
inc
insb
cmp
ret
jmp
push
mov
int3
jmp
dec
cvtps2pi
fbld
arpl
dec
adc
mov
lods
xchg
nop
inc
iret
adc
loop
cli
jg
lods
pop
je
fwait
clc
incl
data16
cmc
mov
mov
mov
imul
addl
outsl
movsl
jbe
das
and
mov
arpl
mov
mov
or
les
imul
or
pop
cli
scas
repnz
ret
sbb
scas
scas
jno
and
dec
push
addb
scas
pop
xor
arpl
stos
daa
pop
cmpsl
push
pop
mov
insb
movsb
and
movsl
pop
mov
lcall
add
das
mov
jne
js,pn
mov
adc
xchg
or
popf
pop
aad
sub
in
cmp
cmc
sbb
shlb
in
fcoms
pop
ret
cltd
push
mov
aas
xor
incb
aas
mulb
bound
mov
xor
adc
cli
inc
arpl
cmp
pop
fistpll
fiadds
ret
jge
icebp
push
test
roll
shlb
jae
jo
mov
inc
loope
daa
xchg
push
es
arpl
ss
jne
cltd
fcomi
jns
pushf
or
push
flds
rolb
mov
scas
inc
addr16
mov
ret
pop
test
inc
shrl
xor
pusha
movsb
jmp
loopne
or
push
xor
call
cmpsb
mov
xchg
inc
cmc
test
jle
jle
adc
data16
out
sub
lods
testb
inc
mov
push
dec
push
call
cmp
lods
xchg
jge
es
xor
push
xlat
push
cmp
xor
pop
adc
adc
xor
js
ja
aam
xchg
sbb
xchg
imul
rcr
aam
mov
insb
dec
mov
cld
shrb
xchg
js
push
mulb
dec
add
ficomps
test
int
adc
mov
test
aad
addr16
scas
aad
add
mov
sub
push
fildll
xchg
add
cmpsb
jge
and
out
xor
je
mov
jle
mov
js
iret
and
stos
jmp
pop
movsb
inc
inc
shlb
adcl
sub
hlt
std
dec
out
scas
call
lret
or
add
xchg
fistps
cs
daa
or
in
add
mov
pop
jae
adc
dec
or
sub
sub
adc
jg
or
stc
mov
add
inc
mov
in
dec
mov
add
jnp
dec
inc
lock
add
jecxz
jbe
test
cld
mov
cltd
sarl
lret
clc
lret
mov
push
mov
in
adc
mov
push
mov
mov
push
dec
mov
xchg
jne,pn
adc
cmp
lcall
loopne
stc
jnp
ds
imul
push
xor
inc
test
sbb
push
cmp
and
push
adc
fistpll
arpl
test
xchg
lods
stc
lock
mov
test
loop
push
push
lcall
daa
push
cmp
aaa
dec
or
push
sub
lods
hlt
xor
adc
pushf
xlat
push
cs
aaa
insb
rclb
xor
xchg
mov
in
addr16
scas
add
mov
mov
and
cmp
mov
and
lock
dec
add
iret
xchg
int
lods
jae
pop
cmp
clc
adc
nop
nop
mov
jmp
or
sti
movsb
repz
nop
xchg
test
les
rcll
and
orb
mov
mov
stos
stos
push
mov
loop
pop
pop
xchg
lock
dec
xor
data16
and
xchg
cmpsb
inc
sub
xchg
test
or
or
jnp
pop
addr16
not
int3
mov
or
jo
mov
sbbb
test
jmp
xor
lock
loopne
pop
into
xchg
xlat
cmpl
out
xor
sbb
sbb
jg
mov
add
pop
mov
repz
popf
cmp
nop
stc
and
mov
or
lret
pop
mov
stos
push
xchg
leave
repz
in
xor
sbb
ficompl
and
cld
adc
cmpsb
fabs
xlat
or
xlat
daa
sarl
pop
cmpsb
sarb
mov
fisttps
movl
inc
pusha
add
les
dec
push
pop
std
cmp
repnz
loopne
test
xchg
mov
push
scas
xor
or
bound
in
mov
and
sub
outsl
daa
ret
inc
xor
mov
sbb
inc
shlb
inc
stos
push
mov
jl
repz
xchg
cltd
push
into
ret
cmpsl
stos
push
cmp
mov
ja
mov
and
xchg
stos
xchg
sbb
imul
or
repz
out
xchg
jne
repz
lcall
pop
stos
aaa
inc
or
push
nop
push
pushf
cmpsl
fs
pop
mov
adc
je
cli
sub
jo
add
lea
mov
cbtw
addl
insb
add
jl
mov
push
sub
scas
add
cmp
mov
mov
sahf
lret
jb
enter
jle
loope
call
push
and
cmc
lret
adc
xchg
fisttps
pusha
and
mov
push
fiadds
jbe
nop
lret
xor
jp
pop
cltd
stos
adc
stos
aas
sbb
mov
popf
js
icebp
pop
push
and
push
mov
inc
fwait
jecxz
idiv
inc
mov
xlat
push
cwtl
nop
xchg
in
adc
and
addr16
lods
jae
push
mov
xchg
pop
idiv
mov
lcall
popa
mov
aad
cmp
test
rclb
xchg
test
mulb
cmp
adc
sbb
mov
das
lcall
and
imul
test
jnp
pop
dec
mov
pushf
mov
in
int3
cs
lock
fdivr
dec
in
ja
xor
sbb
inc
push
faddp
xchg
mov
push
icebp
int
add
push
push
jl
cmp
mov
pop
rclb
jbe
stos
addr16
mov
and
xor
call
es
pop
pushf
cmp
imul
inc
mov
add
movsl
aad
push
push
or
push
int3
push
rcl
inc
pop
jle
aaa
fdivrl
xchg
in
stos
cwtl
sar
jbe
lods
push
xchg
and
adc
repz
aas
mov
js
adc
adc
and
sbb
incb
pop
inc
cmpsl
cmpsb
or
mov
lret
xchg
icebp
sbb
inc
mov
rorl
xchg
xor
mov
jg
xchg
hlt
sub
call
cld
jo
gs
mov
ret
pop
pop
xor
mov
cwtl
sbb
mov
in
rcll
mov
push
arpl
jns
sbb
jle
lods
fistps
cmp
mov
test
stc
xchg
push
imul
fsubl
mov
lods
addr16
mov
xor
push
inc
lock
es
loopne
fidivrs
in
xlat
dec
mov
movsb
sub
push
rorl
rol
inc
fcomps
cld
sbb
lret
stos
out
add
jnp
daa
xor
test
stos
sbbb
jo
add
repz
jae
jno
movsb
push
scas
adc
cmp
test
mov
or
lea
push
xlat
test
lcall
aaa
sub
mov
test
out
pop
cwtl
add
mulb
out
mov
xchg
mov
push
int
arpl
cmpsb
jbe
xor
lahf
and
rep
js
sub
leave
aad
add
mov
inc
sub
inc
push
fisubrl
mov
dec
jmp
push
ljmp
push
jg
mov
mov
stc
call
adc
mov
sub
dec
cmc
lods
std
adc
aas
bound
push
pandn
or
stc
and
mov
jae
xchg
sti
lea
mov
dec
xchg
shll
or
push
mov
daa
ss
sbb
xor
sub
jbe
js
dec
cmc
imul
lods
add
mov
testl
lret
xchg
std
jns
int3
xchg
subl
ja
pop
jp
pop
mov
test
cmp
dec
dec
jg
lret
cs
pusha
sti
xlat
dec
and
push
mov
jmp
jne
mov
subb
xchg
ret
data16
and
movsb
mov
cld
insl
cltd
add
nop
in
leave
in
push
adc
mov
or
imul
test
sbb
mov
inc
imul
jle
jae
insl
push
fstpt
sub
in
xchg
cltd
lds
das
movsl
xor
sbb
iret
xor
lock
jmp
stc
xor
shrb
cmp
cli
leave
xchg
jl
push
jae
inc
loopne
popa
int3
or
aas
or
cmp
ljmp
jl
cld
push
dec
xor
cmc
fwait
test
inc
mov
lahf
into
push
jle
ds
notb
mov
cld
aam
push
lds
mov
adc
fwait
mov
fs
sbb
inc
mov
stos
pop
add
mov
inc
mov
pop
push
pushf
test
xor
popa
in
adc
aad
xlat
mov
xchg
sbb
dec
into
inc
movsb
iret
dec
cmp
mov
lock
xlat
clc
bound
shlb
fdivrl
call
mov
dec
in
adc
push
in
mov
data16
pop
outsb
ja
test
cmp
lods
mov
aas
dec
popa
fnstenv
stos
pop
rol
fstps
je
out
jbe
sarl
repz
nop
jg
rcrl
fiaddl
aad
stos
mov
or
sahf
push
fdiv
fsubs
andl
sbb
mov
pop
adc
pop
ss
xor
jnp
call
imul
dec
bound
popf
call
je
mov
sub
fstl
cli
xchg
add
lahf
stc
shr
cmpsl
popf
ds
push
outsb
pushf
pop
call
xor
sub
mov
hlt
pop
and
cmp
cmpsb
lahf
xor
sar
cli
and
imul
mov
andb
sub
inc
jp
cmp
dec
ljmp
inc
adc
aaa
aam
dec
add
sbb
adc
jae
test
sbb
out
test
xor
fwait
xor
or
clc
lahf
push
sub
mov
mov
mov
aaa
xor
xchg
xlat
nop
push
mov
test
out
push
sti
insb
adc
jge
nop
popf
or
les
das
push
cmpsl
cmp
inc
aad
inc
in
aam
xchg
pop
dec
adc
pop
shl
pop
ret
shl
sbb
add
adc
cmpsl
mov
mov
pusha
jecxz
xchg
repnz
repnz
and
jecxz
sub
adc
rclb
jge
pop
out
pushf
ret
or
jo
out
sbb
cwtl
cli
pusha
outsb
sub
add
nop
dec
push
pusha
fsubrl
xlat
inc
or
or
stos
jbe
inc
ss
lock
ss
aam
adc
dec
mov
push
inc
inc
out
in
lret
dec
sarb
imul
fmul
rol
es
fidivrl
pushf
arpl
into
lock
jg
jbe
dec
bound
cwtl
pop
and
pop
cltd
enter
sbb
add
popa
add
or
mov
jb
dec
shlb
nop
dec
and
lods
mov
inc
xchg
sub
dec
xchg
cmp
nop
adc
mov
adc
and
push
scas
int3
mov
imul
scas
aad
add
das
xchg
dec
lods
push
push
orl
leave
int3
roll
pop
addr16
xchg
push
push
jl
sub
mov
lahf
mov
and
push
inc
shlb
or
mov
add
push
out
mov
mov
stos
mov
xchg
inc
leave
jb
mov
or
pushf
sbb
inc
pop
dec
push
je
sbb
out
popf
jnp
push
lds
cmp
shll
sbbl
jg
xchg
xor
xchg
mov
mov
repnz
out
mov
jl
pusha
dec
push
and
mov
inc
or
pop
and
cmp
push
sub
es
sbb
shrl
mov
mov
popf
cwtl
and
aad
sub
mov
push
lods
xor
ss
mov
add
sahf
pop
outsb
es
push
jbe
test
rcr
cmp
cmpsb
fnclex
lahf
andl
sub
into
sbb
in
cmp
or
pop
sub
loopne
and
and
xchg
add
push
ret
xchg
es
in
xchg
je
push
mov
mov
test
mov
sub
arpl
aaa
or
repz
inc
out
xor
std
movsb
xor
pop
loope
inc
movsl
mov
rolb
push
hlt
xor
add
in
inc
call
mov
cltd
adc
nop
mov
pop
mov
add
stc
cld
push
sti
push
test
xor
inc
jbe
push
in
shl
and
xor
inc
xchg
inc
pop
jne
push
pop
pusha
lcall
outsb
mov
sub
pop
ret
mov
inc
cmp
cwtl
mov
popf
sub
in
jbe
stos
jbe
ss
cmp
test
and
scas
inc
sub
shl
xor
lret
fisttps
in
and
push
pop
je
scas
outsl
repz
out
mov
cltd
cmpsl
je
lret
mov
xchg
insb
icebp
test
cmc
xor
and
adc
enter
xchg
xchg
xlat
loope
sbb
mov
out
rolb
rcr
cs
lods
ret
mov
sbb
sub
cmpsl
lret
push
test
test
push
sbb
mov
lahf
push
shl
jmp
stos
add
pop
sub
mov
cmpsl
imul
add
xchg
das
xchg
aaa
daa
mov
andb
insl
loop
xlat
insl
adc
test
push
sub
jmp
xor
sub
lret
sarl
int
pop
inc
mov
loope
mov
in
insb
pop
loope
loope
mov
repz
aaa
sahf
dec
jle
bound
mov
mov
aam
push
pop
cltd
pop
push
inc
aam
jb
dec
dec
cmp
adc
xchg
adc
movl
push
xchg
or
fdivrl
cmp
fs
in
pop
xchg
jmp
fwait
push
sbb
xor
sbb
icebp
pushf
bound
ret
cwtl
lea
je
out
je
pop
daa
pushf
cmpsb
orb
pop
cmpsb
xchg
scas
pop
pushf
mov
mov
cwtl
mov
aam
sub
js
pusha
addr16
xchg
jg
enter
in
std
mov
push
shrb
scas
leave
fwait
es
or
cmp
cmp
lahf
test
in
sub
mov
rorl
mov
adc
or
repz
dec
movsl
pop
stc
imul
push
icebp
pop
cmp
xor
rcr
mov
and
rclb
aam
in
shll
pushf
dec
push
gs
pop
sub
in
lods
fdivrl
cmp
inc
push
call
inc
xchg
scas
cs
in
adc
xor
das
and
lock
out
inc
pop
les
xor
aaa
popf
cmp
jo
sbb
mov
lcall
lods
push
dec
dec
adc
shrb
stos
in
sub
xor
and
mov
xor
push
mov
cmp
fcmovnbe
and
and
cmp
mov
cmp
outsl
pop
adc
lods
mov
push
jnp
rclb
cmp
xchg
or
xchg
xlat
lcall
sarb
push
push
nop
jmp
mov
pop
sub
sarl
lahf
pushf
sub
xor
jge
es
adc
and
mov
push
idiv
pop
lds
cli
fidivl
jmp
sbbb
jmp
mov
xchg
ljmp
push
xor
inc
mov
cs
add
faddl
ret
inc
jns
cmc
mov
push
repz
jno
mov
inc
xchg
mov
mov
or
and
pop
mov
dec
std
cmp
sub
push
iret
lret
nop
bound
jbe
push
sbb
rolb
sub
sub
out
aaa
or
mull
sbb
push
lds
sbb
xchg
mov
fwait
scas
pop
scas
xor
sahf
jo
xchg
loopne
test
js
push
stos
mov
jnp
lods
jmp
loop
test
push
fstps
pushf
shll
test
stos
or
iret
test
nop
les
lret
adc
jg
mov
lret
addl
aas
sbb
inc
mov
fs
out
pop
jae
lret
mov
xor
nop
push
xchg
popa
cltd
fucomip
push
cs
or
push
and
insb
dec
je
scas
aam
test
push
repz
shr
inc
popf
xchg
lods
xchg
das
mov
inc
dec
adc
and
js
loopne
mov
daa
js
shlb
and
jle
adc
dec
add
inc
cs
bound
dec
push
inc
sbb
aas
jns
adc
jecxz
das
scas
mov
ret
imul
jns
jmp
mov
jmp
jae
dec
arpl
mov
aam
mov
js
int
mov
mov
push
push
pop
mov
jbe
cltd
jbe
mov
push
pop
add
adc
out
xor
xchg
cmp
xor
movsb
in
jmp
and
test
push
inc
sti
push
into
cmpsl
in
cmp
pop
inc
imul
adc
lock
orb
notl
outsl
mov
pop
mov
lea
test
lea
jle
xchg
fidivs
movsl
fisubs
mov
pop
inc
jp
movsb
add
sub
adc
add
mov
cs
mov
loop
cmp
mov
pop
mov
xor
dec
out
fisubl
push
rorl
add
out
insl
sbb
lea
add
add
pop
push
inc
out
rcl
leave
mov
inc
pop
xchg
mov
or
pop
aas
fisubs
fsubs
cmp
inc
ljmp
ret
xchg
xchg
cmp
cmpsl
aaa
xchg
add
pop
iret
in
add
addr16
push
xchg
movsl
scas
pop
mov
or
pusha
push
xchg
out
fs
aad
mov
aaa
sub
jbe
loopne
sahf
jo
test
icebp
push
sbb
mov
jecxz
mov
xchg
aaa
mov
cmpsl
mov
outsb
pop
sub
push
rcll
aad
add
mov
add
mov
and
jne
jbe
pop
lret
mov
daa
pop
or
xor
jl
jns
bound
scas
adcl
sub
imul
dec
stc
pop
sub
aas
cmp
test
je
scas
adc
movsb
testb
mov
push
outsb
dec
cmp
or
push
add
mov
cmc
push
imul
aas
rorl
add
in
mov
aaa
cwtl
js
cmp
in
lcall
es
mov
cmc
mov
mov
shll
into
sbb
mov
stc
cmc
pop
les
scas
inc
mov
xor
into
iret
and
dec
pop
mov
xor
shll
lahf
inc
stc
push
sub
xchg
mov
pop
popa
xor
fists
adc
das
xor
movsb
divl
pop
jecxz
dec
mov
add
jb
jae
outsb
inc
call
aad
pop
sub
sbb
pop
aas
test
movsb
dec
cmp
popf
sbb
movsl
or
insl
add
adc
stos
iret
lret
push
inc
cmp
sub
out
push
test
rol
jnp
arpl
jecxz
inc
daa
cld
mov
adc
movl
in
aas
pop
adc
int
xchg
loop
push
sbb
and
mov
dec
mov
jnp
incl
fdivrs
cmpsb
mov
mov
sbb
int
pop
sbbb
mov
pop
pop
lods
loopne
testl
popf
lods
pop
cmpsb
dec
rcrl
add
and
mov
shr
push
ljmp
out
jne
inc
lcall
lcall
es
sub
pop
in
mov
and
rorl
xor
mov
pop
gs
inc
loope
dec
or
test
add
sarl
cld
jns
sti
cmpsl
pop
sub
nop
mov
dec
jne
je
pop
fs
aas
xchg
aas
sbb
pop
or
xchg
clc
insl
push
lods
stc
dec
out
adc
cmp
sbb
inc
ss
push
call
mov
jle
add
pop
lds
rcr
inc
pop
mov
mov
mov
push
pop
fldcw
fnsave
ja
rorb
ficomps
sbb
inc
in
or
bound
testb
mov
mov
mov
daa
lcall
fsubrp
mov
ds
push
mov
and
and
push
or
aas
push
ret
jne
cmp
push
sbb
adc
test
iret
ret
pop
pusha
sti
test
dec
ljmp
scas
push
out
adc
mov
jae
cld
jo
push
imul
cltd
xchg
stos
fsubrs
arpl
inc
mov
dec
pop
addl
mov
sub
inc
out
mov
pop
sub
pop
das
scas
imul
addr16
or
mov
adc
jb
pop
xchg
xchg
xor
testb
mov
in
cmp
xchg
xor
fsubs
add
sar
sti
or
xchg
mov
fucomip
fisttpl
cltd
cmp
inc
movsb
fstpl
cmp
adc
xchg
rclb
sbb
xchg
rolb
dec
test
and
out
shrl
les
dec
cli
and
lahf
push
xchg
and
mov
leave
xchg
push
aas
into
add
stc
scas
mov
call
sbb
xchg
jmp
and
mov
xor
shlb
aas
sbb
or
pop
clc
mov
inc
mov
or
cmpsl
cltd
cmp
and
xlat
arpl
repnz
xor
rcrb
repz
in
es
push
mov
lock
cmp
shll
dec
push
out
jbe
pop
add
repz
fldl
fldlg2
fsts
dec
clc
mov
inc
sbb
and
sub
cs
notb
lret
cltd
test
mov
jge
mov
andb
lds
notb
dec
push
push
pop
int3
jp
adc
add
fcompl
js
inc
and
repnz
xchg
jne
add
testb
inc
dec
mov
add
repz
test
cmp
xchg
xchg
add
adc
lahf
dec
xor
addr16
fsub
outsl
cmpsl
push
es
in
imul
inc
frstor
bound
clc
mov
cli
call
mov
stc
mov
sti
insb
loop
inc
sbb
clc
push
adc
data16
out
xor
dec
loopne
nop
add
or
aad
iret
xchg
xchg
adc
mov
sub
movsl
or
addb
ljmp
mov
inc
ficompl
xor
lahf
mov
nop
or
push
rcll
faddl
pushf
icebp
push
mov
sti
mov
rcrb
inc
bound
test
popa
ret
jg
cmc
pusha
push
mov
xlat
dec
sub
push
repz
push
neg
cmp
add
scas
aas
cmp
xlat
xchg
aas
outsl
mov
lods
std
mov
mov
mov
loopne
mov
or
mov
add
jo
out
mov
dec
aam
movsl
cld
das
mov
rcrl
jg
or
cwtl
je
xor
repz
cmp
arpl
mov
orl
bnd
and
xor
adc
jle
dec
fistps
pop
sti
xchg
xor
jp,pt
sahf
cmp
mov
rorb
or
ucomiss
and
push
insl
ljmp
mov
push
fiaddl
sub
stos
mov
scas
sbb
or
decl
mov
dec
outsl
mov
xchg
xchg
xor
mov
lret
rorl
ret
in
ds
or
movsl
jl
enter
push
xchg
aas
mov
xchg
jmp
call
dec
push
rcrb
bound
xchg
adc
sbb
sub
sub
lds
roll
ja
ss
fidivrl
or
push
push
jbe
sub
push
add
jle
subl
lcall
rclb
jb
dec
out
or
and
dec
cltd
xor
pop
and
add
mov
gs
dec
fwait
aaa
orb
and
fwait
sahf
adc
xor
insl
mov
add
cli
xor
pop
popa
pop
jp
cmp
daa
lret
mov
and
fistpll
hlt
ja
test
lods
cltd
test
lods
adcl
mov
xor
push
call
pop
push
outsb
sbb
lret
pop
ljmp
arpl
in
aam
inc
jl
lds
mov
xlat
sti
adc
xor
xchg
sub
jne
stc
xor
add
pop
adc
adc
or
ret
mov
push
inc
rorb
scas
incl
call
pop
popa
pop
jmp
insl
cs
addr16
movsl
mov
or
jae
xchg
mov
pop
cmpb
push
mov
out
les
mov
jo
ljmp
jb
mov
xor
fsts
xor
cmp
stgi
mov
jne
mov
dec
mov
add
loop
popa
sbb
mov
mov
sbb
out
mov
cmpsl
push
orl
nop
clc
in
sahf
in
jmp
xchg
frstor
inc
cs
push
movhps
fsts
or
outsl
cwtl
sbb
jp
adc
je
and
ja
dec
fdivrs
arpl
je
jo
adc
cmpsb
dec
xor
mov
cs
pop
jb
in
outsl
jle
mov
ret
test
mov
mov
hlt
pop
add
out
mov
popf
sub
jae
out
out
fisubrs
fcomp
je
addr16
add
ret
std
mov
xor
movl
cmp
insb
sbbl
mov
cwtl
and
repz
jmp
cli
shlb
or
push
mov
push
jae
push
inc
mov
jl
incl
xor
testl
mov
sahf
inc
jg
add
in
push
mov
lret
push
xchg
mov
sti
adc
ja
addr16
aam
aas
sub
call
mov
test
pop
mov
cli
xchg
or
fldenvs
pop
cmp
push
mov
adc
fs
jbe
sbb
test
pop
mov
inc
sbbb
mov
repz
jns
paddb
sbb
iret
mov
fbld
adc
hlt
adcb
cmp
rclb
jno
or
xchg
mov
pop
mov
arpl
hlt
jb
dec
xchg
bound
in
jne
clc
sub
mov
xchg
push
pop
sub
mov
out
jl
in
out
and
test
mov
cwtl
dec
cmpl
mov
addr16
sub
stos
pop
lock
and
pop
xor
jmp
adc
push
sbb
jno
sub
std
or
repz
enter
insb
pop
xlat
xlat
inc
pushf
push
push
push
arpl
call
adc
or
lods
inc
mov
jns
jbe
inc
dec
adc
mov
pushf
push
push
push
int
sbb
jne
jb
jno
pop
or
ret
into
fwait
pop
std
dec
mov
lret
or
sbb
jb
pop
dec
lret
xor
stos
jns
lods
sub
gs
xchg
or
cwtl
xor
dec
jae
stos
ret
adc
jl
dec
out
inc
dec
movsb
lcall
in
xchg
inc
sahf
xchg
add
push
repz
sub
sbb
fidivrl
mov
push
movsl
pop
sbb
movsb
js
aaa
and
jns
sti
inc
in
xchg
mov
sbb
jle
imul
jge
add
fs
int3
jmp
push
mov
shlb
sahf
dec
push
out
ss
andb
mov
cmp
scas
mov
or
icebp
push
cmpsl
cli
push
mov
out
ja
jb
into
fstp
and
mov
test
lret
arpl
lret
cltd
jbe
push
cli
xor
leave
imul
sbb
divl
cltd
mov
xchg
ret
test
inc
and
xor
mov
mov
xchg
xchg
xchg
jns
idivl
jo
jno
incl
lret
out
jle
das
std
pop
xor
jae
mov
cmp
pop
xchg
loope
ds
inc
adc
in
in
xchg
loop
push
popf
add
int3
bound
sbb
lods
cmp
out
or
dec
cmp
dec
and
cmpsl
mov
adc
jp
sbb
jno
shlb
push
leave
xchg
bound
push
cmp
or
hlt
inc
test
xchg
lods
dec
sub
sti
jecxz
push
addr16
cmp
push
push
inc
ja
push
cli
notl
xchg
loop
inc
scas
out
mov
add
sbb
repnz
daa
fstpt
pop
xchg
mov
scas
push
or
mull
popa
xchg
cld
es
inc
jae
inc
mov
loopne
out
mov
lret
pop
jns
cmpsl
or
cltd
andl
jnp
sti
jg
xchg
shrb
xor
enter
mov
sbb
in
clc
xor
aaa
shll
clc
lcall
lret
out
sub
mov
pop
pop
adc
push
or
aam
iret
sahf
add
dec
inc
jo
popa
mov
fcompl
mov
scas
stos
jae
jp
xor
xlat
inc
mov
mov
aaa
mov
mov
shrl
cmp
push
pop
push
shlb
adc
arpl
gs
add
lock
sbb
cmp
popf
xlat
fistl
mov
test
jg
das
cli
or
mov
adc
xchg
icebp
mov
inc
add
add
aad
cmpsb
xchg
and
inc
aaa
addr16
add
stos
mov
jno
enter
jb
mov
lock
pop
inc
or
les
repz
lret
mov
cmpsl
lcall
leave
leave
jbe
add
les
and
push
adc
jns
or
sub
xor
lret
test
and
mov
push
jle
push
and
dec
push
jl
adc
ss
fnstcw
sbb
loope
or
subb
dec
inc
lods
mov
jecxz
mov
mov
fwait
movsb
jmp
outsl
lods
inc
lret
and
shl
inc
mov
sbb
aas
dec
lods
and
and
lods
fs
or
cmp
cmpsl
pop
std
mov
mov
add
jne
adc
nop
lahf
ret
test
sub
hlt
arpl
int3
xor
add
dec
int
add
out
xor
push
push
jmp
sti
scas
lcall
and
lds
cmp
jl
in
pop
inc
je
icebp
xchg
sbb
mov
sub
outsl
daa
sbb
jge
push
out
ficomps
dec
jb
xor
cmp
lahf
mov
mov
sti
and
and
jmp
sub
aas
add
or
mov
addl
mov
loopne
pop
sbb
cltd
mov
inc
orb
sti
lods
sub
mov
add
test
movsl
mov
mov
out
test
add
xchg
les
fnstcw
or
bound
dec
cmp
mov
lods
xlat
repz
xchg
xchg
movsl
adc
xchg
inc
and
mov
les
or
push
ja
jmp
dec
mov
lds
cmp
add
xor
fisttpl
movsl
dec
and
sub
jecxz
push
and
sbb
aaa
adc
mov
sbb
sub
cltd
adc
sti
pop
repnz
push
imul
add
in
movsl
stos
or
cli
cmp
push
pop
xchg
outsb
mov
outsb
in
pop
xchg
push
fstp
sub
cmp
and
stos
xor
lock
int
ret
lock
mov
adc
sub
dec
or
mov
jo
pop
int
mov
mov
mov
cmp
push
mov
sub
arpl
outsb
fwait
pop
or
pop
out
sbb
clc
xchg
cld
mov
cwtl
mov
sbb
mov
jno
or
mov
push
lds
les
sbb
mov
or
shl
xchg
mov
pop
xchg
dec
cs
cld
scas
in
cmpsl
inc
pusha
xor
mov
or
bound
mov
mov
out
add
jbe
push
insl
xchg
inc
jae
cmp
jge
mov
xchg
out
mov
pop
mov
pop
adc
lcall
movups
in
jg
xchg
in
mov
sbb
jae
fxch
test
lods
arpl
or
sahf
int
inc
inc
fldz
out
push
pop
mov
jecxz
in
xchg
and
xor
inc
fwait
jnp
pop
sub
inc
jl
sti
test
jbe
stos
mov
pop
ret
xor
cmp
in
and
mov
jmp
inc
xchg
pop
fnstenv
test
jb
ret
cmp
cmp
xchg
push
leave
jle
pop
add
sbb
mov
xchg
or
cmpsb
rcrb
fstps
push
dec
cmp
out
pop
pop
enter
jecxz
into
es
pop
ss
xchg
mov
xchg
pop
mov
jg
sub
push
test
lret
flds
jbe
cmpsb
cmp
add
fs
cmpsl
lock
and
cmp
dec
inc
in
dec
add
call
dec
in
jle
jecxz
xor
push
repnz
jnp
xchg
and
fisubl
imul
int3
call
sub
mov
push
sub
insb
cmp
add
test
out
sbb
outsb
jl
addr16
loop
iret
data16
pop
sub
hlt
lahf
or
pop
clc
pop
jmp
jg
lods
lods
out
jmp
sub
test
adc
mov
mov
popf
fidivrl
cmp
daa
mov
in
jecxz
out
jmp
cmp
xchg
jbe
es
jmp
clc
pop
sahf
test
sbb
repnz
icebp
jae
aam
push
leave
lret
or
push
and
arpl
pop
sbb
mov
mov
repz
fmull
lea
js
in
das
test
rcll
pop
inc
xor
sbb
sbbb
inc
dec
mov
inc
loop
jb
into
bound
ret
loopne
xchg
loope
jnp
std
dec
leave
and
fistl
gs
jge
cwtl
mov
cmp
cltd
push
add
xchg
fnsave
mov
outsl
mov
or
adc
rclb
or
jg
dec
xor
pop
mov
xchg
mov
and
mov
lcall
movsb
push
cmp
mov
push
pop
push
cmc
inc
std
mov
sbb
cmp
ljmp
xchg
ret
icebp
hlt
loopne
sbb
lahf
push
lea
push
xor
jno
idivl
cli
or
mov
pop
icebp
fmull
rclb
jmp
sbb
test
xor
fstpt
xchg
jae
mov
xor
mov
ss
or
xor
sti
paddd
lret
out
jae
jg
mov
mov
adc
mov
nop
adc
add
mov
sub
inc
fiaddl
sub
push
mov
sub
outsl
push
adcl
sbb
adc
repnz
add
notb
cmc
push
add
mov
cld
inc
mov
pop
ss
js
push
ret
adc
stos
mov
imulb
ret
cmpsl
dec
mov
enter
rolb
and
sbb
jmp
push
cli
push
loope
movsl
inc
das
inc
inc
dec
lods
pop
mov
out
pop
push
add
mov
lahf
push
mov
lock
mov
dec
xchg
xchg
add
lahf
add
sub
add
xorb
and
imul
push
fcoml
mov
push
xor
jle
mov
pop
movsl
lret
shl
shr
xchg
dec
pop
test
xor
fistl
fldt
pop
or
cli
push
sbb
clc
pop
leave
or
jmp
test
das
shlb
shrl
stos
mov
adcl
dec
pusha
and
mov
daa
mov
pop
mov
std
pusha
in
push
sarb
and
pushf
mov
fisttpll
or
xorb
xchg
scas
jmp
add
dec
loope
push
push
leave
xchg
test
ret
ljmp
je
call
rorb
mov
fsubrs
fbstp
or
and
rorb
jge
in
sub
add
call
movsb
outsl
pop
stos
mov
adc
and
pop
dec
mov
lds
addr16
sbb
divb
hlt
push
sarl
adc
call
jne
int3
fwait
movsb
icebp
cwtl
popaw
jnp
das
imul
je
sbb
mov
mov
pop
push
dec
fwait
nop
out
stos
daa
scas
mov
icebp
scas
jo
mov
sub
mov
mov
add
add
rcr
fmull
and
xchg
jo
mov
pop
cmp
mov
dec
push
dec
sarl
loop
mov
test
pop
popf
shll
je
inc
ret
sarb
std
mov
cmp
mov
mov
clc
orb
adc
fwait
mov
fsubr
mov
ss
cmp
dec
mov
push
mov
mov
addr16
push
push
fisubrl
sbb
stos
test
fsubrl
dec
push
pop
gs
jmp
and
aas
gs
push
push
mov
aad
push
mov
shl
movsl
xchg
xor
jno
fcompl
xchg
xchg
popf
and
mov
push
dec
test
sub
adc
mov
fistpll
shlb
loopne
mov
rclb
pop
mov
ret
sub
jno
dec
mov
pop
pusha
leave
in
dec
sbb
sbb
mov
insl
or
push
or
jo
fcompl
xchg
add
test
fsub
sub
imul
inc
and
fwait
aaa
dec
aaa
scas
popa
rcrl
daa
jg
inc
pushf
lcall
inc
or
inc
arpl
imul
mov
jmp
hlt
gs
mov
xchg
inc
pusha
lods
and
jbe
lods
inc
orb
jg
das
mov
pop
out
jl
push
push
jnp
and
cmovbe
push
into
pop
sub
popa
jg
lods
push
cmp
mov
sub
mov
fsub
shlb
xchg
pushf
jns
fisttps
mov
in
cwtl
push
in
xchg
inc
outsb
push
sbb
adc
cmp
and
pop
idivl
jae
lret
xor
jno
jge
mov
aad
test
push
mov
mov
inc
loopne
sahf
push
ja
xor
scas
mov
shll
aad
outsb
pop
or
sti
mov
ror
pop
mov
inc
ret
push
fsubl
and
push
ret
aam
test
mov
std
add
mov
pcmpeqd
aam
push
lods
pop
fcmovnbe
std
call
les
cwtl
and
push
in
inc
les
inc
pusha
push
sub
pushf
cmp
es
out
jg
out
aam
adc
mov
push
xchg
jecxz
aam
fcoms
xchg
scas
mov
int3
sbb
pop
push
in
ljmp
push
mov
rcl
in
or
lods
inc
fstpt
dec
hlt
xchg
fcomps
out
std
lods
call
mov
cmc
out
mov
xchg
fwait
sub
int3
or
fstps
out
add
adc
sbb
inc
ucomiss
mov
pop
add
or
ss
int3
leave
push
mov
xlat
sub
lock
out
xor
mov
aam
jg
mov
pusha
and
icebp
sub
jle
push
loope
adc
ror
stos
cmp
aas
cmp
push
jg
dec
or
push
scas
jl
insb
mov
push
xor
sbb
sub
or
int3
add
and
push
ret
les
pop
or
and
jo
int3
sub
test
imul
incb
pop
or
rep
push
mov
cmpl
inc
rol
xor
bswap
cs
inc
mov
test
adc
adc
lcall
lea
fwait
xor
popa
leave
dec
jmp
js
xlat
mov
test
aad
xchg
cmc
arpl
outsb
gs
loopne
push
popa
xor
push
in
mov
lret
mov
cmp
xlat
cmpsl
push
push
fsts
add
or
cmc
push
hlt
and
pusha
popf
xor
js
dec
cmp
xor
adc
xchg
hlt
stos
cmp
dec
lds
in
test
jae
xchg
dec
fisubrl
jle
mov
mov
fldenv
add
push
adc
inc
rorb
push
dec
inc
mov
mov
and
jo
pop
or
insl
push
jl
stc
xchg
incl
jmp
pop
mov
ljmp
inc
xchg
pop
scas
or
js
loope
cwtl
decl
arpl
aaa
fstl
add
mov
pop
repz
adc
jns
lods
decb
pop
fadds
jnp
jbe
test
out
sahf
movsl
jge
ljmp
pop
jo
out
cmp
sub
in
mov
cmp
lahf
test
scas
pop
push
out
fldenv
movsl
push
sub
mov
xchg
repnz
call
xchg
call
ret
les
sti
js
sbb
mov
xchg
xor
sti
push
int3
pop
and
popf
jg
adc
out
xor
jb
push
addr16
pop
subl
xor
scas
and
movsl
adc
jmp
fisubs
ret
pop
stos
mov
or
adc
insb
mov
stc
test
cmp
inc
fistpl
fs
xchg
rorb
pop
fnstsw
sbb
jbe
cwtl
das
in
sub
push
sahf
loope
cmp
mov
sbb
push
insl
mov
cmc
adc
jge
jg
xchg
xchg
add
aas
mov
out
ja
xor
jae
or
aas
cmp
xor
and
sbb
mov
push
or
mov
popf
lret
sbb
sarl
dec
jae
repnz
dec
stos
inc
inc
jno
sub
mov
and
mov
incl
in
or
cmp
rcl
movsl
movb
push
pop
stos
test
and
or
cmc
int
xchg
mov
rcrb
inc
sahf
cmpsb
mov
ret
es
jp
ds
test
popa
imul
jnp
and
sub
mov
mov
mov
pop
orl
xor
dec
or
inc
mov
or
popf
in
or
stc
rep
icebp
pop
mov
gs
fbld
cs
stc
or
pop
and
xchg
lea
jno
cwtl
daa
mov
or
mov
outsl
push
lahf
mov
dec
or
jp
xor
cs
fwait
mov
jnp
jg
popf
jle
cmp
mov
dec
pop
je
test
jbe
daa
bound
sbb
dec
mov
mov
cmp
cmp
xchg
and
inc
enter
sbb
cmpsl
arpl
lock
or
cli
lea
sbb
jo
xchg
mov
aaa
or
int3
out
test
xor
inc
xchg
inc
gs
lahf
adc
xchg
popf
xchg
sbbb
inc
movsl
enter
mov
outsb
loop
mov
idiv
fisubs
scas
shrl
cmp
fcomip
dec
mov
cltd
and
loopne
aas
pop
sbb
movsb
mov
push
mov
repz
mull
add
add
add
cwtl
mov
gs
js
in
stc
fs
adc
imul
outsl
or
nop
mov
dec
in
or
imul
dec
xor
sahf
lea
push
cwtl
inc
arpl
cmp
push
mov
cmpsb
aam
xchg
xor
and
int
pushf
cmp
daa
sub
mov
dec
popa
in
mov
ds
cltd
and
lods
sbb
gs
or
icebp
pop
xchg
pop
scas
cmp
addl
and
add
outsb
cwtl
inc
and
mov
dec
inc
in
sub
ret
mov
jo
je
stos
cmpsl
push
xchg
shll
jecxz
addb
xlat
enter
pop
cwtl
call
xor
xchg
or
popa
movb
outsl
and
es
and
mov
into
sbb
pop
and
jecxz
pop
loope
mov
jp
sar
xchg
dec
fisttpll
inc
stos
shlb
ret
rol
repz
fldl2e
jg
data16
sbb
cmp
cmp
bound
push
popf
imul
lods
inc
inc
mov
cld
lret
imul
fwait
dec
add
je
mov
xchg
repnz
outsb
into
in
fstp
jb
sbb
lret
fcomps
xchg
mov
adc
inc
sbb
fdivl
add
ja
notl
pop
loop
out
inc
or
cli
repz
pop
sbb
imul
or
sub
sbb
inc
mov
loop
dec
js
mov
mov
and
push
cmpsl
retw
cmpl
hlt
and
mov
dec
cmp
push
shll
cmpsb
push
aaa
sub
sbb
pop
lods
add
mov
ret
xchg
data16
push
cli
mov
das
xor
les
push
mov
out
test
mov
fs
aam
cmpsb
sbb
and
jp
aad
sub
insb
and
sbb
outsl
hlt
stos
mov
imul
push
xchg
xchg
push
mov
std
jae
xchg
pop
and
test
loop
or
adc
dec
push
pop
sbb
push
or
pop
lea
mov
mov
out
ret
and
add
stos
push
test
mov
call
idivb
mov
mov
add
pop
add
mov
lret
addl
out
mov
test
cmpsb
sbb
xor
lcall
or
xor
popa
or
gs
jae
mov
mov
cmp
dec
jno
mov
xlat
iret
mov
or
xor
ret
push
imul
int3
adcl
nop
jno
dec
mov
sub
adc
sbb
mov
inc
inc
cmpsl
adc
jnp
xchg
mov
adc
xor
aas
pop
into
scas
punpckhbw
dec
push
loope
jns
test
aad
pushf
pop
outsl
pop
xor
dec
push
adcb
xchg
cmp
insb
add
jg
scas
js
xorb
mov
jns
dec
leave
mov
push
cltd
pop
mov
and
jbe
cwtl
test
mov
push
xchg
js
jecxz
add
sub
mov
fdiv
scas
mov
inc
enter
xchg
shl
push
out
dec
jnp
mov
cmp
pusha
cmp
mov
dec
jge
add
scas
push
fcmove
mov
shlb
jno
gs
test
rcll
ds
sbb
jp
xor
and
jne
int
mov
leave
pop
adc
ljmp
and
cmpsl
ja
xor
jle
icebp
cmp
jg
cmp
mov
stc
popf
inc
adc
fwait
aad
dec
dec
mov
fnstcw
repnz
mov
adc
adc
int
dec
cmp
xchg
aas
popf
mov
dec
dec
shl
push
dec
jmp
jo
rorl
sbb
out
mov
xchg
dec
int3
xchg
outsl
mov
cmp
shrb
xchg
jbe
das
ja
and
cmp
pop
push
adc
push
les
cmc
add
pop
mov
xchg
mov
mov
cmp
fwait
mov
lret
xchg
cmp
sti
mov
push
loop
out
push
sbb
insl
push
jns
scas
sbb
adc
cld
jb
shrl
pushf
xchg
jle
js
pop
div
push
xchg
lcall
inc
stc
dec
cmp
out
mov
outsb
clc
add
nop
and
ljmp
jecxz
cs
mov
xorb
dec
mov
lret
mov
mov
out
sub
into
xor
dec
pop
xchg
jg
mov
pcmpeqd
or
inc
jecxz
mov
leave
scas
pop
pushf
jle
pop
jae
pop
cmpsb
adc
or
sub
shlb
pop
lahf
stos
mov
mov
lcall
and
xor
jbe
jecxz
push
out
add
lea
scas
sahf
inc
movsb
and
in
pop
stc
int3
cmpsb
xorl
stos
scas
inc
jge
pop
mov
js
decb
test
pop
jae
cld
movsb
add
mov
outsb
mov
pop
mov
movsb
inc
das
mov
jecxz
hlt
inc
mov
pop
inc
lock
fstps
adc
addb
inc
xchg
outsb
push
pop
xlat
add
arpl
or
int
sub
stos
clc
xchg
scas
mov
andl
adc
aam
pop
loopne
sub
dec
or
cwtl
notb
aaa
lcall
stc
mov
nop
cltd
dec
jp
cltd
jo
movsl
mov
dec
mov
cwtl
ret
in
mov
pusha
xchg
adc
cmp
mov
xor
xlat
std
out
or
jl
pop
into
mov
cmpl
adc
and
lock
movups
sbb
cli
pop
insl
dec
inc
sti
loopne
cmpsb
mov
scas
sbb
stc
js
hlt
add
dec
xchg
nop
clc
imul
stos
or
push
filds
mov
nop
rcrl
bound
jle
out
cmpsb
jg
insl
jecxz
dec
dec
sub
sub
pop
popa
repz
sbb
or
stc
or
pop
xor
and
jb
cltd
sub
pop
or
xchg
cmp
sub
fnsave
mov
xchg
add
add
sbb
mov
aas
das
pop
inc
addr16
mov
or
jbe
outsl
fwait
mov
cmp
bswap
jne
rep
cmp
and
sbb
loop
int
mov
in
scas
xchg
out
cmp
aad
xor
mov
pop
test
push
ficompl
xlat
push
lods
pop
or
sbb
rclb
insb
bound
dec
sbb
cmp
iret
andl
repz
push
pop
je
dec
jo
inc
sub
cmp
cmp
out
lock
dec
popa
jne
mov
add
sub
sbb
mov
or
push
orb
mov
shrl
ja
and
push
sbb
push
xchg
push
adc
in
push
lods
ret
into
mov
fistl
ds
arpl
shr
mov
out
cltd
stos
xchg
xchg
data16
xchg
xor
or
addb
jge
out
push
lahf
fstpl
mov
scas
out
cmp
mov
xor
push
xchg
out
mov
adc
fdivl
repnz
ret
lods
and
shll
es
cltd
in
xchg
adc
adc
loopne
mov
and
jmp
sbb
cmpl
add
movsb
xchg
shl
mov
xlat
dec
movsl
or
lock
into
mov
jns
out
jle
lods
stos
faddl
cmp
ss
jno,pn
aad
test
data16
in
pusha
stos
jbe
out
cs
inc
mov
bound
and
in
test
xor
pop
scas
adc
jbe
xchg
ficoms
mov
cmp
dec
aad
mov
fxtract
out
lods
cmp
push
add
xlat
jmp
testl
or
fs
mov
adc
daa
outsl
iret
jnp
insb
daa
gs
stos
sbb
ss
jnp
sahf
jle
movb
in
xlat
add
dec
or
scas
mov
cmp
xchg
test
ja
push
pop
filds
mov
idivb
and
xchg
xchg
call
xchg
lret
jecxz
push
add
xor
dec
mov
mov
push
cli
iret
repz
scas
and
sbb
inc
imul
lcall
xor
mov
dec
subl
sahf
nop
sbb
sub
inc
add
xor
xchg
std
popl
outsl
aad
pop
testb
sbb
mov
sbb
lods
shr
popa
sbbb
pop
cmp
push
mulb
out
push
cmp
stos
xor
mov
fwait
or
ss
pop
xchg
addr16
pop
xchg
aaa
jbe
or
mov
lock
and
popa
cmp
test
mov
sub
dec
cli
add
and
ret
mov
loop
aaa
inc
push
mov
push
scas
mov
clc
aam
mov
negb
stos
out
inc
in
xchg
repnz
xchg
xchg
sahf
push
push
mov
inc
cwtl
or
popf
push
test
repz
jmp
mov
jae
jl
rclb
mov
fstl
in
xchg
jp
jge
out
push
xor
mov
les
push
das
sahf
or
incl
hlt
dec
and
dec
xchg
icebp
call
lahf
loopne
sub
lock
xchg
jbe
push
sub
in
inc
cwtl
cmpsb
mov
neg
hlt
pushf
in
stos
mov
loopne
gs
les
xchg
fmuls
mov
outsb
rcl
imul
xchg
mov
out
and
xchg
rclb
push
xchg
push
lea
insb
mov
add
adc
xor
push
fucomi
fimull
sub
aas
clc
stos
adc
aaa
out
mov
lods
popa
mov
lods
out
push
xor
cmp
sbb
xor
aam
inc
in
jnp,pn
adc
pop
mov
mov
aas
dec
call
sbb
xchg
add
add
pop
xchg
pop
or
push
jae
nop
imul
das
decb
cld
xor
mov
sahf
aam
jg
xchg
mov
xor
icebp
mov
push
addr16
push
sbb
pop
fcomip
in
clc
lahf
testl
aam
test
int
jae
aas
mov
int
mov
cs
mov
repz
loop
aad
xchg
mov
aas
cmp
mov
add
sub
pusha
jne,pn
push
pop
mov
fwait
lods
cs
scas
stos
popa
and
stos
aas
cmp
adc
fldcw
movsl
adc
test
loope
aas
xchg
add
mov
pop
jmp
sub
imul
cmp
cmp
or
stos
cmpb
stos
sub
pop
cmpsb
pop
bound
cmpsb
push
test
xchg
lret
outsb
mov
mov
imul
xor
loope
sub
leave
ja,pn
call
jecxz
inc
jnp
sub
mov
dec
outsb
pop
or
icebp
jne
xchg
adcl
iret
pop
dec
inc
dec
mov
fcmovnbe
icebp
push
cltd
nop
test
pop
adc
ffreep
or
fwait
mov
stos
or
and
inc
fwait
bound
and
jo
jno
pop
adc
xor
fwait
test
stc
ds
lret
divb
add
lds
inc
scas
lret
and
je
in
sbbb
stos
pusha
jp
sub
mov
xchg
ror
fisttps
xchg
mov
dec
mov
inc
xchg
outsb
push
aam
roll
fsqrt
xchg
mov
rcrb
or
sub
sbb
pop
ret
popa
mov
movsb
enter
jae
loop
fmull
jmp
xor
add
mov
push
lret
je
xchg
sarl
sub
mov
aad
lret
mov
cwtl
and
movsb
loop
dec
sbb
pop
mov
mov
cmp
aaa
stos
mov
adc
stos
fwait
xchg
mov
mov
mov
and
inc
jl
or
fadds
sub
fcompl
repz
inc
inc
mov
int3
pop
std
cmp
push
out
out
sbb
testl
adc
test
ficomps
scas
xchg
insb
pusha
jnp
mov
fbstp
es
imul
mov
mov
fmul
pop
sbb
or
popf
and
negb
in
jns
out
mov
dec
pushl
insb
and
or
es
orl
loope
lcall
dec
cmc
scas
sub
ljmp
xchg
jmp
outsb
imul
cmp
mov
mov
xchg
loop
cwtl
cmc
nop
add
lea
imulb
daa
xchg
cli
push
enter
sahf
jl
cmp
sub
dec
xchg
mov
cmp
sbb
push
jle
inc
test
idivb
jecxz
movsl
lds
jae
inc
cmp
xchg
or
into
popa
xchg
sar
out
xchg
jg
sbb
movb
les
pop
scas
sbb
leave
mov
push
mulb
mov
in
jge
fisubl
or
xor
push
and
int
jmp
cmpsb
aam
test
add
pop
xor
mov
pop
imul
mov
mov
push
inc
pop
stos
or
pop
push
pop
test
and
mov
bts
insl
popa
dec
scas
sbb
sarb
std
fistl
push
ds
scas
adc
std
push
les
sub
das
dec
sbb
add
in
lods
test
call
lret
or
and
xchg
xchg
insb
pop
inc
ja
pop
cmp
sarl
or
push
sub
ret
filds
shll
dec
xchg
fsubrl
sub
push
jnp
sarb
inc
mov
pop
rclb
sub
push
leave
or
pop
pop
push
add
outsb
and
jge
and
push
xchg
out
push
and
dec
into
shlb
or
sbb
lahf
jecxz
push
stos
pop
nop
xorb
cmpsb
sub
orb
sub
int
adc
or
inc
daa
xrelease
inc
repnz
mov
fsubrl
sbbb
pop
pop
adc
shlb
or
and
dec
push
cmpsb
jne
leave
les
leave
cmp
jle
pop
cld
xchg
repz
frstor
fdivrp
lret
in
mov
es
loopne
les
mov
stos
xchg
roll
cmp
movsl
std
xlat
pushf
jnp
mov
ret
test
inc
roll
xchg
pushf
cmp
pop
or
nop
cltd
adc
push
or
mov
scas
jge
push
fisttpl
pop
arpl
dec
cmpsl
xchg
push
jne
mov
jle
sub
and
popa
enter
mov
push
dec
test
sbb
js
push
insl
pop
imul
cwtl
cmpsb
adc
jmp
fld
test
xchg
repnz
fcmovbe
push
jp
sub
js
cld
sbb
stc
sbbl
aam
lock
addr16
bound
rorb
xor
push
or
add
jg
enter
in
andb
cmpsl
cwtl
std
lods
imul
mov
enter
dec
sub
cmc
xor
or
push
neg
lret
mov
hlt
push
in
in
push
pushf
icebp
pop
int3
mov
inc
jo
cmp
faddl
daa
dec
sub
test
addr16
mov
ss
loop
in
sar
and
xchg
sub
into
aaa
inc
push
leave
cs
mov
sarb
jp
test
outsb
ss
sbb
rorb
or
xchg
ja
mov
push
imul
dec
and
lahf
sbb
mulb
insl
mov
xchg
jne
inc
test
xor
jmp
or
cmc
dec
testb
pop
ficompl
xchg
cs
lods
out
push
pop
cltd
lds
into
les
lods
mov
adc
cmp
sbb
imul
and
aad
inc
in
sbb
out
lea
dec
fldenv
jae
je
cltd
jnp
mov
mov
jns
aas
jcxz
xor
mov
sbb
jge
enter
enter
add
int3
dec
mov
sahf
fists
cs
aaa
int3
sbb
nop
pop
jae
lods
jmp
adc
cmpsb
pop
cmp
inc
and
fsubl
dec
int3
xchg
add
xchg
sub
cmp
movsb
cmp
ds
sbb
add
neg
rorl
in
xabort
pop
in
lock
adc
out
call
imul
mov
fnstcw
cmp
pop
dec
mov
xor
outsb
or
add
xor
sub
bound
and
outsl
cld
push
popa
jne
jg
imul
sbb
jne
lds
mov
ret
ja
dec
je
idivb
xlat
pusha
outsl
and
xor
lahf
mov
fistps
xchg
xchg
adc
fwait
and
pop
or
add
push
xor
aaa
jg
mov
ss
popf
push
mov
lds
mov
das
or
or
push
cmpsb
subb
enter
je
add
adcb
test
jecxz
add
sub
and
scas
and
sbbl
push
lcall
fcompl
sub
test
or
mov
out
jmp
push
out
and
sub
lock
fisttpl
mov
mov
call
adc
or
mov
cmp
mov
mov
aaa
scas
clc
ret
minps
push
fs
add
imulb
movsl
dec
cmp
shll
adc
outsl
mov
cmp
push
aaa
scas
inc
jmp
mov
dec
or
repz
mov
add
mov
lods
mov
addr16
inc
inc
mov
aas
jl
jbe
in
adc
cmc
mov
mov
aas
fstps
cmp
jbe
xor
dec
and
mov
sub
jo,pn
push
insl
push
scas
mov
xchg
cli
outsb
mov
out
aas
jno
sub
xchg
sub
sub
mov
movsl
sbb
sub
lret
mov
insb
pop
push
push
out
pop
sbb
sbb
push
mov
outsl
sub
scas
insl
leave
gs
xchg
pop
sbb
sbb
jmp
scas
xchg
dec
cltd
fistpll
into
sub
in
jmp
xor
les
jmp
and
mov
mov
push
pop
add
mov
sbb
nop
and
lea
mov
lods
sbb
daa
inc
mov
xchg
mov
cmp
xor
xchg
xor
test
sbb
insl
stos
cwtl
mov
pop
xor
imul
push
fs
es
sbb
xor
inc
adc
sbb
sub
mov
testb
insb
fs
mov
inc
adc
idivb
pusha
rorb
test
sub
xchg
and
pop
sahf
jecxz
ror
mov
rcrl
in
cltd
ds
mov
out
adc
stc
adc
xchg
nop
insb
mov
shrl
push
mov
js
pop
mov
inc
test
ja
and
or
rolb
xor
fistpll
dec
or
cmc
xlat
lds
dec
js
sub
mov
jmp
test
cmp
xchg
cmpsl
aas
mov
aad
push
inc
dec
popf
and
cmc
jg
sbb
mov
inc
sahf
jmp
test
shll
aam
pop
out
icebp
stc
stos
xchg
or
lahf
dec
fistps
jmpw
in
lods
cmp
fmull
jo
sub
mov
out
data16
adc
js
jp
out
push
and
loop
and
fdiv
mov
push
push
push
jo
lods
sbb
sub
ret
mov
cmpsb
push
mov
loop
xor
dec
std
add
lcall
ss
lods
loope
inc
mov
lock
cmp
mov
xor
dec
cmp
add
mov
mov
hlt
scas
mov
in
rclb
jp
inc
ret
loopne
lahf
jae
pop
cli
pop
mov
inc
push
sahf
lret
ret
push
iret
jne
lods
mov
adc
scas
ss
inc
or
add
shrb
adc
dec
push
in
loop
cmpb
shl
mov
loopne
stos
add
push
imul
xor
push
xrelease
scas
mov
cmc
cmpsb
cmp
sub
xchg
outsb
bswap
inc
shll
andl
push
arpl
cs
cld
push
dec
xor
add
mov
cmpsl
push
lea
cmpb
dec
xor
pusha
das
stos
test
repnz
inc
aas
inc
sbb
mov
and
cmp
stos
add
cmc
ret
xor
inc
cmp
repz
fsubs
fsubl
outsl
cmp
mov
jne
jmp
jecxz
mov
add
scas
and
mov
lds
inc
rclb
xchg
sub
das
add
aad
or
sub
flds
mov
pop
loop
xchg
add
leave
leavew
xor
push
bound
and
adc
loop
nop
je
in
mov
out
cltd
call
push
jnp
mov
popf
mov
dec
and
push
inc
int3
xchg
out
movsb
mov
adc
test
fdiv
add
sbb
pop
sbbl
sbbl
arpl
push
mov
push
test
in
xchg
mov
inc
std
inc
jge
sub
fucom
cmp
aad
dec
addr16
outsl
hlt
cli
xchg
popf
sti
push
and
pop
or
pop
aas
stos
dec
lods
pop
dec
jle
aam
cmp
in
icebp
push
loopne
out
std
pop
mov
cli
jae
sbb
mov
jns
pop
and
mov
dec
sarl
mov
pop
mov
xchg
inc
add
rcrb
lods
fs
mov
popf
adc
sub
push
sub
add
sub
adc
clc
out
mov
scas
mov
outsb
pop
test
addr16
mov
mov
fimuls
jns
inc
notl
fabs
dec
mov
xchg
leave
xor
fadd
cmpsb
adc
cli
leave
frstor
hlt
in
sbb
sbb
add
push
loop
adc
lret
js
shll
dec
insl
push
pushf
cmp
mov
pop
imul
test
adc
fdiv
or
dec
inc
jle
int3
inc
inc
es
xor
cwtl
stos
jle
pushf
pop
dec
mov
repnz
into
out
jns
jmp
xchg
xchg
gs
int
mov
xor
xor
ljmp
movsb
lea
rorl
loope
xor
mov
jecxz
mov
push
xor
mov
js
or
aam
sub
testb
xchg
pop
ljmp
mov
add
leave
imul
sub
fisubrl
push
daa
xchg
cmpsb
pusha
push
cmpb
push
and
mov
das
sahf
xchg
jl
incb
cwtl
ja
and
jb
push
test
dec
jl
adc
pop
dec
xor
push
jge
inc
imul
push
inc
lea
mull
jp
das
push
mov
or
imul
jns
addb
xor
inc
fadd
sar
out
jmp
inc
fistpl
push
dec
scas
push
sbb
addb
xchg
fcompl
pop
sti
mov
xchg
sub
push
and
sahf
ficomps
andl
imul
dec
insl
mov
gs
sbb
jmp
test
pop
push
push
mov
dec
mov
lds
jg
xor
mov
clc
mov
movl
sarb
in
xchg
sub
idivb
test
sub
out
fistps
test
xor
pop
pop
jb
push
add
sbb
jae
or
and
sub
pop
adc
cmp
rorb
je
cmp
dec
js
or
mov
clc
aam
mov
jg
jae
sub
xchg
rcr
or
loop
dec
mov
test
fisubl
mov
mov
gs
xchg
push
loop
inc
loope
and
subl
gs
push
push
cld
sahf
and
out
in
rcrl
aam
pop
call
nop
or
je
cmp
xchg
jg
pop
in
cltd
addr16
add
adcl
ror
adc
icebp
inc
andl
add
dec
pop
cmp
or
mov
fsubs
sub
mov
gs
js
pop
cmp
pop
push
sub
or
pop
mov
arpl
adc
fwait
inc
mov
popa
add
decb
insb
cltd
cs
xchg
or
xchg
push
or
or
pop
adc
mov
clc
outsb
ret
loope
mov
filds
test
pop
cld
sbb
out
repnz
loope
std
xchg
cmp
xlat
and
loopne
or
mov
sarb
xchg
fucomip
pop
ds
ss
cmpsl
xor
mov
iret
mov
mov
push
adc
push
sbb
jp
push
cmpsb
rcrb
mov
pop
xor
jno
sbb
mov
rorb
adc
jg
push
testl
sahf
mov
or
orl
mov
mov
loop
ss
out
pushf
scas
mov
mov
int
fcomp
mov
push
sbb
into
sub
add
sar
jmp
repz
jge
push
icebp
dec
pop
jns
int3
pop
jl
inc
dec
cli
les
or
mov
cli
mov
loope
mov
data16
cmc
jb
mov
into
xchg
jo
scas
lock
pop
fldt
inc
hlt
cltd
mov
push
cmp
mov
lcall
mov
lahf
mov
mov
mov
sub
gs
insl
dec
addr16
mov
es
leave
mov
or
sbb
mov
pop
into
mov
lock
mov
sub
sbb
jg
jb
and
push
and
and
sub
mov
xor
test
fistpl
adc
jle
fdivs
fadd
pop
cmc
cwtl
mov
xchg
jp
int
daa
into
add
push
test
xor
call
pop
pcmpeqd
and
cmp
add
push
aad
mov
sbb
xchg
adc
mov
aam
mov
jp
dec
push
movsb
jg
loope
push
xor
lret
jle
jae
stos
movsb
push
mov
or
repz
pop
rorl
push
ret
sbb
std
cld
divl
jbe
and
ret
lret
pop
rclb
fistps
adc
cld
lret
pop
in
push
inc
scas
push
mov
sar
sub
addl
out
repz
sub
fnsave
sub
sub
cmpsb
add
cmp
adc
aaa
notb
ret
or
lahf
in
in
push
jnp
out
fsubs
in
icebp
movsb
xor
fiadds
popa
sub
mov
cmp
jle
lret
add
mov
xchg
nop
jb
mov
leave
hlt
cs
leave
shlb
scas
xchg
adc
cmp
movsb
push
in
aas
popf
push
mov
enter
pushf
cmp
fimuls
fwait
enter
and
int3
lret
enter
cmc
ret
adc
cwtl
mov
mov
or
bswap
mov
push
pushf
aas
data16
in
int
je
cwtl
jg
andl
and
icebp
jp
and
fnstcw
jne
or
insl
stc
shl
and
pop
lcall
loope
jp
outsl
push
adc
test
sbb
sti
pop
cmp
mov
push
add
inc
sub
mov
repz
adc
into
mov
out
push
inc
dec
or
dec
pop
sti
insb
xchg
ficompl
fwait
push
mov
sbb
jp
jmp
jg
xor
jl
mov
mov
mov
mov
sbb
movsl
test
test
aaa
sbb
jno
pop
push
mov
rol
fildl
dec
fcomip
orb
jo
pop
jle
dec
mov
js
in
pushf
inc
inc
xchg
fimull
mov
push
pop
sub
test
add
test
and
sbb
sahf
and
in
xor
xor
outsb
out
fstpt
nop
iret
push
jbe
xorb
or
ror
inc
mov
cmc
xchg
sbb
fisttpll
mov
int
xor
jl
icebp
ds
int
pop
aas
mov
dec
pushf
or
js
rolb
pop
add
xchg
and
mov
adc
mov
or
repz
pop
je
cmp
std
jl
addr16
mov
nop
cmp
cwtl
lds
aam
jl
aam
roll
push
add
jg
push
popa
xor
fs
popf
add
out
loope
dec
xchg
daa
pop
lahf
xchg
enter
jmp
fbld
test
xchg
out
movsb
int3
popa
adc
xchg
mov
out
or
mov
ret
and
inc
pop
mov
add
fcmovnb
xchg
inc
mov
xor
stc
mov
scas
fstps
pop
cmpsl
loop
les
jo
adc
and
aaa
xor
mov
js
mov
xlat
add
or
scas
dec
data16
aad
enter
sbb
scas
pop
pop
pop
into
cmc
inc
dec
cltd
mov
mov
sub
mov
inc
test
stc
call
leave
int3
mov
cmp
jnp
sbb
add
sub
and
and
push
loope
cld
push
nop
shlb
sti
push
and
cmp
xchg
and
mov
aad
sbb
cld
mov
and
jle
js
add
push
jo
jae
in
sbb
inc
jecxz
mov
lods
adc
shlb
lods
cld
jbe
stc
or
mov
scas
ret
lea
push
aas
add
sub
dec
movl
xor
add
lods
jne
filds
movsb
and
lret
js
icebp
aas
push
cmp
out
clc
add
mov
fsubrl
adc
adc
mov
xor
mov
jo
xchg
les
fwait
lret
fisubs
out
ret
mov
mov
push
adc
add
sub
mov
int
push
mov
mov
test
pop
adc
mov
or
pop
insb
cmp
adc
call
mov
int3
sub
sbb
insb
bt
xchg
mov
pop
lret
cwtl
mov
sub
mov
lods
mov
and
xchg
mov
mov
mov
mov
stc
shrl
lds
iret
push
inc
xor
ljmp
xor
cmpsl
sub
and
xchg
lahf
cmp
inc
cmp
or
repnz
xor
arpl
fs
rol
out
outsl
xchg
xchg
jns
pop
xchg
ret
stc
xchg
jb
mov
cld
inc
into
in
dec
or
pop
ljmp
jg
or
aas
pop
mov
mov
xchg
inc
mov
sub
xchg
xchg
fistpl
int3
in
movsl
daa
movsl
xor
pusha
into
and
mov
xchg
push
mov
add
add
insb
cli
push
cmp
outsb
xor
fnstenv
mov
or
push
pop
hlt
pop
xor
add
add
mov
inc
sub
push
add
adc
mov
fs
icebp
sti
mov
dec
rorb
cmpsl
mov
add
push
rol
sahf
int3
lret
lods
push
lret
cmp
adcb
icebp
adc
fldl
dec
ja
shll
mov
cwtl
sbb
lahf
or
pop
xor
mov
in
mov
mov
and
mov
cmp
sarl
stc
adcb
sub
mov
cld
mov
push
pop
into
or
mov
sub
je
hlt
insl
inc
cmpsl
add
arpl
out
jecxz
mov
cmc
sub
xor
jmp
pop
jae
les
push
test
sahf
sub
and
pop
sub
push
xor
pop
lret
mov
in
pusha
lret
call
pop
pop
jns
xchg
cld
std
adc
jmp
xchg
rclb
cmc
ret
ljmp
xor
dec
das
jne
jbe
je
dec
icebp
or
mov
jnp
cmp
popf
aad
adc
mov
clc
ljmp
xor
ljmp
cmp
add
test
jp
inc
into
mov
and
cmp
xor
add
xor
dec
insb
adc
cld
pop
cltd
xchg
mov
mov
loopne
lock
pop
in
xchg
pop
int
xor
mov
cltd
mov
xor
test
bound
add
and
data16
pop
push
dec
daa
xchg
sbb
out
or
cmp
lret
xchg
xchg
jne
pop
sbb
push
shlb
inc
add
jb
or
xchg
int3
iret
imul
add
mov
jae
dec
adc
push
add
es
movsl
test
in
sub
mov
and
adc
add
loope
in
sub
loope
fnstsw
push
inc
xchg
enter
addr16
dec
imul
sarb
aad
lcall
jecxz
fs
inc
pushf
cmp
jp
fistps
dec
and
add
or
pop
hlt
mov
aam
gs
out
push
ds
inc
inc
xor
jp
add
bound
sub
jecxz
lret
stc
insl
insl
pop
inc
and
cmp
fstpl
imulb
adc
push
mov
aad
repnz
sbb
ds
pusha
lahf
push
cmp
jge
lahf
psubb
add
push
push
pop
jno
jae
sub
mov
jb
shlb
pop
pop
push
ljmp
sub
jp
daa
xchg
lahf
cli
adc
dec
pushf
mov
dec
test
push
les
cmc
call
pop
je
pop
cmpsl
sbbb
dec
mov
leave
sbb
das
xor
aad
sti
sub
fimuls
stos
mov
loopne
sbb
jl
pop
ss
lahf
into
inc
ds
push
dec
cs
stos
paddsb
pop
dec
popa
mull
out
sbb
xchg
or
xor
cmp
add
imul
outsl
imul
divl
mov
das
pop
repz
mov
add
sbb
add
sbb
jp
orl
xlat
test
xlat
mov
inc
arpl
inc
sbb
cs
aam
sub
ffreep
std
xchg
les
xchg
jle
fnstenv
shlb
in
jecxz
outsb
or
enter
mov
iret
imul
push
ss
mov
cli
cmp
pop
inc
pop
or
gs
jle
shrl
cmp
xchg
pop
push
pop
sbb
sub
loope
sahf
add
ljmp
jecxz
cltd
and
push
inc
or
rcll
xor
cmp
cmp
jmp
pop
aas
mov
sub
sbbl
and
dec
xchg
scas
xchg
stc
js
dec
gs
repz
rclb
sub
loop
or
imulb
pushl
imulb
into
push
outsl
dec
inc
negb
mov
mov
cmpsb
sahf
mov
push
sahf
fsub
in
ja
push
inc
les
and
cmc
movsb
jl
stos
addr16
shrb
scas
popa
adc
push
leave
lret
sub
cmp
mov
jg
cmp
mov
lock
fsubrs
addr16
jo
das
pop
dec
das
int3
test
adc
mov
mov
push
mov
ss
mov
and
mov
cwtl
cmp
adc
aaa
lods
cmpb
xor
pusha
sub
xor
ss
inc
pop
mov
test
cltd
and
rcl
mov
fildll
sub
add
pop
inc
inc
sub
cwtl
orb
add
dec
mov
inc
push
xchg
mov
mov
mull
testb
lret
jno
or
xchg
mov
repnz
arpl
mov
lock
mull
out
in
inc
xchg
stc
lods
pop
addb
xchg
mov
pop
neg
into
dec
pop
xchg
fwait
ss
cmp
rcl
jnp
or
fs
mov
push
insl
sub
or
fidivrs
ljmp
orl
sub
push
inc
ljmp
popf
pushf
inc
ret
in
xchg
popf
aad
loop
pop
cltd
jl
pop
jns
lahf
mov
pop
cmp
add
mov
inc
jnp
out
and
and
pop
iret
scas
xor
xchg
add
repz
push
sbb
popf
xor
mov
adc
inc
shrb
ss
xlat
add
insb
jo
cmc
lret
in
push
scas
or
lock
clc
lods
xlat
je
mov
leave
loope
fstps
div
pop
pop
adc
push
pop
jmp
xchg
pushf
enter
add
lcall
ss
push
push
xchg
das
dec
filds
shrl
mov
xor
mov
pop
cld
shll
out
in
cmp
es
test
add
int3
sahf
mov
jae
add
inc
lea
repz
push
push
ss
fadds
sbb
add
loopne
popf
dec
pop
dec
cmp
push
xchg
pusha
xchg
aam
mov
and
cltd
jne
test
ss
in
dec
jnp
pop
jbe
add
jp
sarl
test
sub
in
pop
cmp
mov
imul
fwait
push
ja
iret
jno
mov
shlb
stc
repz
ja
cmp
mov
jns
inc
fwait
stos
adc
fcomps
sahf
xchg
mov
inc
inc
pop
sub
push
in
imul
leave
cs
xor
popa
pushf
hlt
pop
inc
in
mov
icebp
outsl
push
cmp
movsb
insb
fs
insb
pop
adc
jle
jge
and
push
add
adc
rcll
dec
xchg
sbbb
outsb
adc
test
iret
stc
mov
test
rcl
cmp
mov
jnp
xchg
in
sti
xlat
shr
mov
fs
out
lret
push
in
mov
in
mov
andl
sub
push
jno
sub
stos
dec
rep
jae
add
cmpb
rorl
movsl
mov
pop
sbb
scas
loopne
add
sub
jmp
cli
mov
ret
mov
mov
fidivl
lret
pop
andl
popf
mov
cmp
and
les
test
int3
sbb
out
in
mov
add
sbbl
ljmp
xchg
dec
sarb
shlb
rcll
stos
jl
or
icebp
fildll
int3
aas
into
movsl
xchg
dec
outsb
js
xor
inc
inc
stos
popf
insl
lods
xlat
orl
leave
and
dec
cs
pop
in
jnp
stc
xchg
add
outsb
jl
push
mov
push
adc
addr16
test
je
in
and
jb
clc
push
sbb
mov
dec
test
add
ds
repz
pushl
shll
push
push
mov
repz
lea
test
xchg
cmp
xchg
add
popa
mov
dec
stos
inc
push
out
add
lret
fistpll
leave
cltd
or
jmp
daa
in
mov
frstpm(287
repz
xor
hlt
fsubl
in
outsl
outsl
test
sbb
cwtl
sub
jmp
add
or
popf
shrb
lods
xor
mov
inc
inc
in
es
push
pop
aas
fwait
push
ficoms
or
push
out
dec
cmpsb
gs
iret
aam
adc
in
outsl
adc
movsl
add
sbb
add
jle
xor
aad
cmp
cmp
sbb
sti
mov
jae
lods
fildl
add
js
ds
jae
xchg
lods
xchg
popa
subl
xor
or
jae
fidivs
adc
pusha
shr
in
mov
sub
sbb
icebp
int
jmp
inc
xor
ja
xchg
outsb
dec
cld
lods
loop
inc
cmp
push
jae
out
lods
mov
loopne
pop
push
xchg
enter
cmp
jbe
jno
or
jmp
sub
xchg
scas
push
dec
and
dec
xchg
addb
pop
adc
or
lods
xchg
mov
and
lds
mov
andb
xor
fiadds
cmc
add
daa
jo
loop
test
xorb
dec
adc
mov
pop
out
xchg
lds
dec
xchg
sarl
and
popa
jbe
sbb
sbb
mov
mov
leave
addr16
inc
dec
sub
cli
fbld
dec
das
lods
addl
xlat
push
mov
es
test
testl
mov
xchg
in
jns
adc
test
nop
xchg
sahf
insb
mov
add
mov
dec
sub
sarl
clc
ss
fdivp
push
and
idiv
pop
mov
jns
lods
bswap
push
fwait
sbb
push
divl
fwait
ljmp
je
into
dec
imul
mov
mov
sbb
pop
cmpb
or
mov
mov
cs
les
pusha
adc
lods
and
xchg
frstor
inc
mov
cmp
and
jo
mov
mov
pop
cli
jb
into
rolb
fidivl
stos
pop
xor
scas
lahf
push
sub
popf
mov
pop
jae
mov
inc
out
xor
xor
inc
mov
pop
push
mov
adc
stos
pop
jge
push
ja
jo
dec
pop
xor
mov
ss
lds
enter
xorl
dec
or
test
pop
jg
adc
push
xor
dec
mov
add
xor
fwait
int
and
or
jb
out
into
cs
pop
arpl
std
out
sub
jmp
scas
les
test
aad
ret
sub
out
mov
jl
mov
scas
das
popf
ret
mov
nop
add
fidivrl
add
ret
iret
jge
sbbb
sbb
push
pop
jg
inc
adc
mov
add
data16
inc
sbb
inc
mov
pop
adc
xchg
test
test
test
pop
sbb
mov
notl
mov
dec
lds
sub
popf
or
sbb
out
std
add
fiaddl
fdivs
inc
xchg
or
stos
icebp
push
jmp
std
mov
cmpsb
sbb
cmpsb
nop
hlt
xorl
push
lods
call
inc
sbb
fmull
mov
loope
sti
out
mov
inc
xchg
pop
mov
test
out
add
or
pop
xor
sub
xchg
pop
lret
mov
fsubp
imul
hlt
int
push
sbb
mov
mov
mov
xor
jp
push
leave
lods
cltd
push
xor
iret
pop
jbe
adc
out
xchg
cmc
in
lea
repnz
and
cmc
mov
fisubl
mov
popa
sub
jmp
jo
cmp
pop
ficoms
or
and
inc
adc
cmpsl
add
adc
inc
add
jmp
xchg
or
and
and
mov
adc
testl
mov
mov
push
mov
pop
pushf
repz
cmp
out
sub
mov
push
inc
adc
pushf
mov
push
inc
jne
jne
xchg
loope
add
cmpsl
mov
stos
xlat
cld
cmp
dec
mov
shlb
mov
cli
mov
roll
jmp
or
cmp
loop
loope
lea
lock
lcall
adc
mov
testb
pop
add
inc
test
lahf
repnz
sub
push
xor
shlb
push
mov
xchg
push
jb
pop
pop
jnp
loop
mov
xor
jb
jno
xchg
fidivs
jo
outsb
enter
cmpsl
leave
int3
mov
loopne
and
xchg
lldt
and
and
xchg
adc
sbb
push
and
mov
pop
dec
fwait
xor
add
ret
jb
mov
pop
pop
lods
jbe
leave
stc
jge
or
fstpt
mov
mov
mov
sub
cwtl
cmc
sarl
mov
addr16
or
loop
aad
hlt
mov
sahf
negb
jg
mov
or
jb
mov
js
fwait
cmpsl
and
or
mov
pop
adc
and
aas
xor
shr
lret
ja
pop
loope
mov
rol
add
leave
in
add
and
js
mov
es
mov
pop
lret
jae
jp
xchg
pop
insl
or
loope
mov
ds
rorl
fwait
movsb
jmp
stos
ljmp
jecxz
mov
dec
movsb
orl
lret
popf
push
add
bound
mov
push
push
dec
and
push
cmp
popa
mov
jae
lcall
sub
mov
mov
mov
cmp
jp
mov
arpl
push
lcall
push
iret
pop
mov
dec
jp
imul
cmp
nop
in
cwtl
cmp
fdivs
in
xchg
inc
jl
test
xchg
jne
jl
push
add
pop
arpl
in
xchg
popa
push
and
jae
cld
cmp
cmpsb
std
mov
fdiv
fwait
mov
sub
push
pop
call
pushf
jae
cmp
mov
lahf
sbb
popa
mov
shll
out
add
xchg
mov
pop
add
jne
arpl
inc
cli
rcrb
pop
push
adc
jmp
in
mov
inc
rclb
cmp
std
cltd
movsb
xchg
pusha
es
data16
and
cmp
cwtl
mov
sar
jl
mov
sbb
or
scas
pop
test
scas
mov
out
loope
rorl
xchg
push
sub
aaa
sbb
shlb
rcll
inc
call
jle
push
and
xchg
popa
cmpsb
pusha
or
inc
das
inc
xchg
lock
fistps
mov
push
pop
bound
fwait
jl
adc
or
pop
aam
or
jbe
add
xchg
aad
cmc
push
repz
fcomps
movsl
push
jecxz
cmp
cmp
jmp
and
jmp
cmp
scas
pop
ret
js
fcompl
out
mov
pop
pop
cmpsl
fildl
sti
pop
adc
push
loopne
lds
mov
pop
xor
adc
in
clc
sub
rcrb
pop
aam
pop
andl
xchg
xchg
outsl
fs
scas
lcall
xor
imul
sbbl
psubq
inc
jno
shl
adc
in
out
or
and
dec
mov
fwait
pop
pushf
insb
icebp
pop
cmp
xchg
cmc
jne
pushf
inc
idiv
int3
lods
sub
insb
aas
inc
cli
mov
jns
repz
xor
push
pusha
push
xchg
add
cmpsl
scas
scas
loop
je
loop
add
sub
or
imul
add
cmpsb
mov
push
das
scas
out
fidivrs
jno
shl
inc
je
jnp
inc
vunpcklps
inc
stos
aam
sti
or
xor
cmpsb
test
push
jbe
xorl
je
rcl
das
cltd
fs
mov
push
xchg
mov
mov
pusha
cmpsb
or
outsl
jno
mov
mov
mov
cmp
cli
mov
mov
adc
and
push
imul
dec
xor
idivl
pop
add
lret
xchg
and
jmp
jae
add
xchg
cmp
sbb
nop
sbb
and
dec
xchg
fiadds
mov
sbb
or
cwtl
jecxz
mov
ret
push
add
pop
jge
jmp
andl
xchg
push
mov
lock
mov
adc
push
test
fs
shlb
dec
ja
movsl
cmc
dec
adc
xchg
ret
int
add
push
ficoms
sub
loop
cmp
push
inc
xchg
das
insl
and
or
push
pop
jle
loopne
cmp
mov
pop
ret
into
xor
dec
imul
pop
orl
in
test
fisttpl
cmp
adc
out
aaa
sub
dec
pop
repz
dec
sahf
adc
fiadds
inc
loopne
jnp
and
cmp
jo
in
adc
popf
imul
jg
xor
add
pop
out
hlt
jp
xor
pop
in
jnp
mov
dec
lret
repz
push
sbb
stc
fs
jmp
ljmp
rorl
push
dec
aam
gs
rcll
add
jbe
ffreep
sbb
adc
mov
or
je
xor
rcrl
xchg
imul
xor
adc
loopne
adcb
mov
pop
or
lret
fstpl
repnz
rolb
and
cmp
xchg
adc
gs
inc
das
mov
sbb
jns
jne
fcmovne
faddl
mov
loope,pn
xor
popfw
aad
pop
lds
scas
xchg
jae
pop
sub
hlt
add
add
cmc
adc
cmp
ret
mov
lret
flds
xor
adc
inc
add
mov
xchg
fnstsw
jp
add
fwait
out
xchg
pop
adc
pop
outsb
push
sbb
jmp
sahf
fs
or
daa
xor
les
jle
nop
jl
push
xchg
or
nop
imul
lock
insl
lret
test
xchg
cmp
repnz
pop
inc
sbb
sbbl
cmp
push
mov
pop
and
idiv
mov
pop
subb
into
cmpsl
xchg
pop
pushf
loop
xchg
xor
in
movsb
jb
iret
sbb
push
add
mov
call
pop
mov
int3
and
xor
lret
adc
test
inc
test
loope
dec
sbb
cmpsl
inc
ss
adc
mov
xchg
pop
sbb
sub
adc
ds
lea
clc
jp
adc
stos
xor
dec
mov
loop
je
add
jno
push
fdivl
mov
xor
or
movsl
and
icebp
imul
pop
outsl
imul
lahf
lds
aas
cli
ret
inc
loopne
and
sbb
sub
repz
cwtl
and
cli
xchg
repnz
test
pop
xchg
stos
fnstsw
data16
cmp
xor
mov
loop
lcall
mov
sub
mulb
pop
dec
pop
sbb
shrb
int3
push
ss
sbb
dec
pushf
dec
xchg
add
pop
fiaddl
sbb
sbb
jmp
add
xchg
xchg
xchg
sbb
xor
mov
push
inc
mov
subl
aam
sbb
pop
pushf
lahf
mov
sbb
jle
loop
inc
std
ja
lcall
int3
notl
dec
mov
stos
xchg
mov
cmp
pop
push
jns
repz
and
subb
and
mov
sbb
fistpll
test
stos
dec
xchg
jmp
dec
sbb
sub
out
out
xor
pushl
cmp
movsl
int3
ret
cwtl
mov
fwait
or
mov
imul
imul
inc
dec
sbb
add
lods
adc
iret
jl
sbb
xor
mov
mov
push
rclb
cwtl
out
popa
lret
repz
pop
jmp
xchg
mov
int
aad
mov
mov
out
call
push
jo
fimull
popf
into
push
pop
addr16
push
pop
cmpsb
adc
into
and
in
jl
jno
rep
icebp
inc
push
mov
sub
push
movl
mov
bound
add
sub
fsts
mov
mov
push
cmpsl
mov
inc
xchg
lret
and
les
repz
jmp
push
scas
call
mov
inc
call
sub
lds
push
dec
rolb
or
xchg
mov
mov
lods
mov
out
iret
test
mov
xchg
les
cmp
jno
inc
xchg
mov
ret
cmp
adc
pop
faddl
lods
in
lret
dec
dec
and
fildll
xchg
in
ret
xchg
cmp
cmp
inc
and
rorl
push
loop
cmp
dec
or
insb
cmp
push
or
jecxz
or
mov
mov
mull
inc
mov
pusha
loop
push
and
and
xchg
or
test
push
pushf
adc
imul
sarl
cltd
test
xchg
mov
daa
inc
and
shlb
outsb
repnz
xchg
das
mov
jnp
mov
cmp
pop
rcl
adc
pusha
cld
outsb
outsl
or
lock
imul
dec
add
xchg
cmp
addl
sbb
xor
lahf
sub
enter
mov
mov
mov
repz
mov
fcoms
mov
mov
adc
dec
jmp
xor
dec
cmpsb
cld
or
arpl
xchg
inc
mov
ret
jb
push
pop
mov
and
test
xor
lea
hlt
adc
jnp
xlat
mov
adc
mov
int3
xor
fisttpl
add
fcomi
cmp
jae
jg
iret
jae
jp
dec
cmpsl
dec
and
outsb
xchg
loopne
inc
lcall
imul
push
mov
xchg
xor
jl
add
test
inc
push
xchg
mov
cltd
lock
push
dec
pop
mov
sub
arpl
jo
sti
push
inc
pop
ljmp
loopne
test
push
jle
push
pop
out
jle
inc
push
gs
xchg
fwait
aaa
jae
push
inc
sbb
hlt
stos
push
repnz
dec
adc
mov
fucomip
lret
mov
dec
test
mov
push
sub
jb
pop
into
subl
js
fcom
jae
subb
arpl
mov
test
ss
stos
cmp
fimuls
adcl
in
repnz
sarl
fistps
xchg
mov
imul
mov
cld
sbb
addr16
outsl
je
mov
imul
sub
jnp
sbb
fnstsw
iret
xor
push
roll
inc
lds
and
inc
sbb
mov
out
xchg
out
test
sub
pop
pop
xchg
xchg
imul
jl,pt
shr
lock
scas
add
mov
mov
sub
aas
ficoms
mov
add
pop
aas
movsb
mov
add
add
call
iret
xor
or
test
out
dec
push
cmp
mov
lret
les
jbe
cmp
cs
enter
test
dec
dec
dec
pop
out
sti
or
incl
inc
aam
out
mov
cs
add
in
dec
inc
cmp
mov
and
sbb
or
mov
cmp
adc
fucomi
sub
add
cli
test
push
adc
mov
adcl
and
ds
aas
pop
add
ret
mov
je
lods
xor
dec
push
inc
push
pop
and
stos
aam
aas
xchg
cltd
lock
out
inc
xchg
imul
idivl
aam
mov
orl
loop
insb
sub
mov
sbb
aam
repnz
sub
add
sub
and
add
mov
push
sti
push
daa
pop
fidivrl
push
into
jns
jbe
aas
loop
insl
mov
out
jge
jp
inc
jno
sbb
mov
mov
filds
in
int
movsl
js
sub
lea
sub
or
sti
sbb
aas
mov
hlt
jbe
inc
sbb
fdivs
adc
int
mov
in
mov
in
cld
shl
adc
or
jae
fiaddl
sbb
dec
test
sbb
ret
push
fs
sbb
stc
shrl
test
gs
out
lods
mov
daa
adc
scas
and
sub
jo
dec
sub
sub
and
fisubl
xchg
aas
add
int
popf
inc
cmp
inc
jae
cli
pop
out
ret
sbb
push
cmpsl
cmp
arpl
xor
mov
inc
jae
mov
pop
pop
sbb
ja
xchg
lahf
dec
xchg
cmp
lret
test
add
sbb
and
rorl
scas
xor
les
adc
xor
int3
mov
movsl
push
cmp
or
movsl
jo
jle
add
addl
xchg
test
stos
je
test
pop
or
ss
addr16
xchg
lods
jns
frstor
sbb
cmp
xchg
outsl
and
mov
int
stos
sub
or
or
cmp
xchg
sub
inc
lds
repnz
cmp
js
pop
daa
mov
and
lods
mov
sbb
adc
out
xchg
xlat
push
test
test
sub
jae
jbe
test
pop
adc
in
int
mov
push
vminss
dec
and
mov
je
loope
pop
add
fisubl
cmp
sbb
xor
mov
repnz
mov
adc
in
sbb
ljmp
pop
cli
gs
xor
add
mov
mov
idivb
aaa
mov
mov
jmp
clc
test
jno
mov
push
nopl
mov
jne
sbb
fsub
pop
mov
iret
cmp
pop
push
lcall
cmp
in
lock
sbb
xchg
leave
lret
test
or
loopne
scas
aam
jbe
lds
nop
out
adc
les
pop
sbb
in
popa
add
jb
insb
nop
jne
sti
lods
pop
add
cmp
pop
andb
sub
sti
mov
mov
lcall
push
mov
jmp
sub
adcl
xchg
ljmp
mov
aas
push
adc
add
pushf
xor
and
inc
inc
push
ret
mov
jmp
inc
stos
or
adc
push
outsb
loope
mov
das
ss
jmp
pop
addl
jmp
lret
dec
pop
outsb
xchg
imul
aaa
add
xlat
inc
mov
pop
lock
jb
push
in
adc
cli
sub
sti
les
adc
rclb
mov
xor
cmp
inc
push
sub
push
in
mov
sarb
scas
fbld
inc
jge
lods
in
mov
movsl
jl
xchg
jne
push
jmp
mov
jo
push
mov
jns
jle
and
fs
or
mov
mov
xchg
cmp
or
fwait
dec
mov
xchg
imulb
aam
fsub
xlat
das
in
sti
pop
out
outsb
jns
cltd
xor
nop
decl
lock
mov
or
jp
pop
fmul
out
rol
pop
sub
sbb
push
pop
cmpb
cmp
push
fimuls
fsubp
and
push
cmpsl
add
mov
pop
add
aaa
fcompl
sarl
loopne
out
cmp
imul
add
mov
out
cmc
test
test
js
mov
and
adc
fisttps
lods
lret
std
pop
frstor
sub
js
xor
mov
fimuls
es
andl
ljmp
xchg
push
lds
dec
or
inc
fadds
ljmp
jo
adc
fisubl
lret
subb
jmp
xor
pushw
push
add
lcall
lahf
negb
pop
adc
inc
outsb
inc
adc
sbb
test
pop
lret
mov
sub
popl
das
cld
pop
fistpl
jbe
hlt
lods
imul
call
in
in
fidivl
std
push
negb
pop
stos
shll
pop
inc
std
mov
jle
mov
addr16
xchg
xchg
test
fs
pusha
xchg
popa
popa
mov
test
pop
cli
bound
mov
addr16
inc
jg
ret
mov
setl
aam
pop
pop
inc
xchg
inc
out
xor
sub
mov
jg
ds
out
repz
dec
push
divl
fisttps
das
mov
insb
inc
mov
push
pop
xchg
mov
xor
xlat
negb
cwtl
sub
pop
cmpsb
sbb
push
movsb
dec
adcb
rcrl
movsl
gs
mov
sti
js
adc
out
xlat
add
repz
lret
sahf
test
xor
jmp
into
ja
jae
adc
mov
add
mov
test
arpl
add
mov
mov
mov
stos
outsl
adc
pop
cwtl
aas
lret
repz
mov
add
jecxz
pop
push
shrl
mov
test
nop
cmpsb
xor
lea
out
stos
and
data16
dec
cwtl
adc
push
stc
outsb
cld
pop
mov
xchg
fisubrl
mov
push
ret
mov
or
xlat
scas
cmp
mov
pusha
inc
inc
movsl
jae
imul
rcll
arpl
cs
cltd
dec
push
add
scas
cmc
cli
adc
add
in
out
mov
mov
push
push
andb
sub
adc
movsb
mov
pop
xor
add
mov
add
lahf
inc
jg
loopne
adc
loope
jae
aas
pop
sub
test
sub
and
xchg
sub
lret
stos
mov
shlb
pop
rorl
fisubrs
xchg
ffree
and
and
das
lds
add
in
daa
lea
sub
pop
mov
adc
cmc
sbb
daa
fadd
cmp
pop
lahf
or
pop
lock
cmc
enter
jnp
lea
shll
add
mov
xchg
pop
mov
addr16
lods
in
clc
shl
in
jns
shrl
dec
jmp
jae
aaa
ljmp
popf
adc
call
cmp
adc
cmp
pop
lods
xor
mov
push
imul
push
rcrb
cmpsb
or
roll
cmp
es
dec
arpl
int3
push
fs
xlat
adc
jns
das
xor
cmp
jle
lods
lahf
mov
mov
pop
mov
je
xchg
fcoml
call
les
flds
xor
test
or
shr
xor
out
les
jns
xchg
adc
xor
dec
mov
jo
lcall
jge
sub
cmp
test
cltd
and
icebp
pop
icebp
and
push
jae
mov
lds
sbb
ds
jnp
out
sub
icebp
or
mov
push
scas
rolb
push
pop
push
and
xchg
neg
and
jbe
jge
jmp
imul
pushf
test
ss
cmpsl
test
stos
or
leave
pop
inc
adc
mov
pop
push
movsl
push
fsin
outsl
xlat
cmpsl
jno
pop
in
jae
dec
fwait
lret
fs
fstps
xor
xchg
cmp
outsl
xchg
stos
aas
nop
pop
dec
enter
jp
sub
les
dec
cmp
push
lds
outsb
in
les
aad
in
jae
xchg
push
push
sbb
mov
fistps
shrb
insl
js
mov
mov
subb
xlat
xchg
pminub
sbb
cmpsb
jne
rcll
ret
pop
ja
mov
and
ljmp
inc
ja
and
lret
repz
mov
ljmp
and
data16
pop
inc
pop
sti
sbb
mov
addr16
dec
inc
inc
add
push
dec
outsl
add
orb
fisubrs
aaa
js
adc
dec
cmp
test
int3
jmp
mov
jecxz
psubusw
mov
popf
sbb
xor
inc
push
mov
and
in
test
aam
es
es
add
test
mov
sti
into
push
nop
dec
jno
insb
adc
push
xchg
mov
add
loop
enter
and
or
cmp
rolb
mov
xchg
xbegin
xchg
data16
cltd
inc
jo
adc
in
jo
adc
xlat
in
push
das
fmul
in
inc
in
sub
sbb
xor
pop
test
lret
test
and
add
jne
push
cmpsl
test
ret
ja
jle
adc
fwait
inc
lea
jle
push
jb
sti
dec
push
adc
and
clc
jp
idivl
mov
stc
push
insl
adc
xchg
clc
mov
inc
repz
xor
adc
adc
cmp
ja
jns
mov
addl
mov
inc
clc
lock
sub
lret
cli
call
loop,pt
mov
nop
adc
mov
xchg
or
mov
mov
push
int
pop
jle
adc
and
sbbb
inc
push
jmp
mov
add
fcoms
lea
jg
enter
xchg
and
ljmp
out
push
sbb
insl
loopne
ljmp
fcom
or
in
lret
pop
push
lcall
iret
mov
test
movsb
out
mov
in
dec
out
out
mov
out
jns
cltd
jmp
into
lret
loope
pusha
and
cmp
sub
nop
jo
aad
xchg
cmpsl
fucomp
mov
mov
xchg
test
push
out
and
test
push
dec
outsb
popa
call
je
jns
and
daa
scas
dec
xor
push
sbb
ljmp
xchg
inc
push
test
test
or
mov
xchg
sbb
inc
mov
lock
es
jb
loopne
das
cmp
push
mov
jne
mov
nop
jae
adc
inc
sub
fwait
test
repz
jne
scas
int3
hlt
adc
pop
dec
inc
and
loope
adc
fstpt
scas
cmpsl
dec
mov
cltd
or
inc
xchg
push
jmp
stos
iret
outsl
fwait
rol
cmp
mov
sbb
or
cwtl
cwtl
pop
sbb
xchg
pop
mov
mov
sahf
push
std
inc
sbb
stos
ja
out
std
and
fiaddl
jl
mov
lea
and
int
dec
push
data16
stos
sbb
lret
inc
les
je
rcl
ljmp
popf
fwait
gs
inc
sti
cmpsl
jge
fwait
dec
and
std
shrb
stos
lock
ds
pop
mov
xor
push
mov
push
push
cmpsb
pop
stos
xchg
or
xor
push
cwtl
cmp
sbb
xor
sbb
jno
not
jmp
fisttpl
rep
out
mov
or
loope
call
out
cld
jmp
adc
add
roll
mov
fistpl
ret
stc
loope
dec
adc
sbbl
out
or
js
adc
loope
add
and
and
sub
fs
fs
fcomps
and
adc
imul
lods
jl
test
imul
mov
mov
shlb
xchg
dec
xor
shrl
gs
or
jmp
jo
sbb
das
xchg
inc
adc
xor
daa
sub
aad
jg
sbb
enter
cmc
xchg
push
mov
jmp
movsl
dec
and
out
mov
or
fdivr
ret
push
dec
adc
push
bound
sti
cltd
cmp
xchg
popa
mov
jb
movsb
sub
mov
mov
out
sub
sbb
push
mov
repnz
cs
jle
idivb
ret
pop
push
insl
sbb
stos
es
les
xchg
outsb
je
mov
ret
repz
xchg
xor
mov
xchg
imull
mov
lock
inc
dec
cwtl
pop
lock
and
push
xchg
cmp
mov
loopne
fs
jo
sbb
pop
and
mov
or
std
xchg
stos
xchg
jo
fs
or
push
repnz
out
jo
lret
outsb
jns
imul
orl
repnz
pushf
add
dec
cmp
xchg
test
shrl
test
jo
ret
mov
inc
inc
or
mov
mov
fisubrs
mov
ds
add
js
xchg
inc
pop
rcrl
out
in
clc
jns
pop
insb
push
and
aad
xchg
lds
int
pushl
sbb
mov
push
or
mov
cmp
push
jne
xor
xor
ja
jp
push
aam
adc
idivl
loopne
jl
adc
in
repz
xor
aaa
push
ljmp
popf
popa
inc
je
lock
xchg
inc
jns
pushf
sti
push
rcll
adc
and
std
popa
testb
xchg
adc
push
jg
cmp
cmp
mov
mov
add
add
push
sarb
scas
push
faddl
or
jle
dec
dec
into
xor
jnp
out
pop
inc
mov
in
jp
mov
js
mov
es
arpl
scas
push
jecxz
test
pushf
mov
mov
out
mov
jno
inc
push
sbbl
adc
sbb
mov
and
xchg
fadd
push
ja
insl
sub
aaa
ror
fadd
jg
xchg
loope
outsb
sbb
dec
dec
mov
mov
push
lea
scas
dec
test
jmp
pop
int
lods
xchg
xchg
in
fldcw
pop
rcr
inc
fwait
scas
sarl
rep
pop
in
repz
addr16
sti
push
dec
adc
mov
inc
rorb
ror
js
dec
idivl
js
add
adcb
add
rcrb
and
mov
dec
loop
mov
nop
and
mov
jmp
sbb
mov
push
arpl
call
jnp
mov
mov
adc
xor
addr16
xchg
f2xm1
stos
xchg
mov
adc
outsb
lret
outsl
scas
rclb
popf
push
or
lods
bswap
inc
sbbb
sbb
inc
test
ljmp
or
push
jb
xor
cmp
pop
xor
enter
and
fadd
popa
xor
add
das
aas
in
neg
dec
movsb
jmp
pop
sbb
addr16
dec
pop
sti
xchg
pop
xor
icebp
sbb
mov
fwait
push
mov
push
lret
insb
xchg
aaa
fwait
or
mov
or
fisttps
pop
out
inc
adc
dec
pop
jg
adc
inc
jo
or
cmp
push
sbbb
inc
sub
popf
xchg
sub
inc
sub
push
fs
movsb
ds
pusha
xor
dec
and
mov
lods
popa
xchg
sub
sub
inc
ret
pop
sbb
jmp
in
push
xchg
iret
fld
xchg
dec
mov
loopne
add
sahf
mov
add
test
sbb
mov
stc
xor
xor
mov
push
jp
fidivs
adc
mov
int
cmpsb
int3
int3
fldcw
cmp
into
loopne
mov
push
movl
sarb
jae
xor
aaa
mov
pcmpgtd
mov
push
xchg
das
int
sti
pop
dec
inc
inc
jae
xchg
out
lcall
ss
lods
dec
xor
jo
not
mov
movsl
or
sahf
in
or
rclb
push
xor
popf
test
xchg
sub
sub
pop
sub
cmp
in
pop
imull
lods
jne
pop
pop
push
jecxz
scas
int3
sahf
xchg
icebp
xor
das
out
xlat
mov
in
jnp
pushf
push
ja
and
sbb
push
out
lea
xchg
push
inc
xor
xlat
mov
push
push
filds
jno
jl
aaa
ljmp
mov
sub
lock
pop
jno
mov
xlat
and
jnp
and
push
imul
add
mov
sti
mov
je
lea
rorb
fwait
std
fistps
fs
xchg
stos
and
mov
aad
fnclex
cwtl
sub
js
or
fldcw
bound
in
inc
sbb
pushf
stos
das
ljmp
pop
adcl
adc
loope
enter
repz
hlt
mov
push
xor
mov
pusha
xchg
xchg
cmp
icebp
dec
inc
clc
into
xlat
cmp
nop
sub
push
add
fisubl
pop
lahf
jns
add
push
js
movsb
pop
dec
fldcw
mov
sbbl
adc
ds
jmp
inc
outsl
xlat
lods
mov
push
jns
and
dec
shrl
into
rorb
mov
and
jo
push
add
sbb
aam
mov
jne
pop
xor
cwtl
pushf
insl
lds
loopne
loopne
flds
movsl
push
cmp
jle
mov
add
mov
ret
jo
sub
mov
jle
test
insl
or
push
test
nop
dec
push
insl
jae
bound
cmpsl
lea
jg
cmc
incl
sbb
aad
int
xchg
xor
fistps
fdivrl
dec
xchg
notb
sub
pop
lea
cmp
push
aas
xchg
xchg
sti
fcmovnu
mov
adc
push
daa
inc
sub
mov
mov
add
inc
dec
in
mov
test
jmp
jns
iret
pushf
adc
leave
neg
movsl
mov
gs
outsl
adc
movsl
das
xor
mov
inc
aaa
loop
xor
cmp
lret
or
cld
push
push
mov
sbbl
out
push
icebp
add
mov
mov
lock
es
xor
mov
scas
push
rcl
popf
adc
mov
test
imul
push
outsl
dec
cmp
xor
iret
and
mov
inc
pop
inc
fs
cmp
mov
dec
dec
add
sbb
arpl
test
aad
arpl
sbbl
xor
mov
mov
jae
testl
mov
xchg
jecxz
add
mov
jge
or
scas
out
and
icebp
mov
hlt
dec
sbb
sub
cmpsb
ret
fadds
jb
ret
cmpsl
and
mov
mov
jb
xlat
mov
xor
xchg
push
es
cs
xlat
rep
pop
out
into
adc
inc
mov
jb
cli
addr16
std
mov
nop
std
aaa
cmp
lcall
test
push
out
jmp
add
add
hlt
fldt
mov
adc
mov
inc
iret
mov
pop
xchg
or
rcrl
scas
mov
pop
pop
dec
add
xor
cmc
jge
cs
pop
nop
ret
pop
xor
dec
shll
or
sahf
idiv
cmp
xchg
dec
jne
sahf
ror
mov
jecxz
mov
outsl
test
sbb
xchg
xor
jp
add
or
inc
xchg
jb
or
pop
inc
pushf
pop
gs
push
or
icebp
into
clc
jae
fiaddl
cltd
out
enter
or
pop
mov
fisttpl
mov
mov
incb
fs
mov
jne
jae
pop
sbb
pop
icebp
push
mov
mov
inc
xlat
cmp
xlat
mov
fs
loope
std
cmp
lock
inc
mov
fmull
ret
stos
imul
mov
adc
mov
enter
push
mov
pop
mov
xor
daa
xchg
add
shll
adc
clc
sbb
dec
jg
xchg
push
cmp
xor
xor
add
add
dec
mov
fs
push
negb
invd
lods
lcall
push
dec
mov
inc
neg
pusha
mov
fwait
jle
movb
push
add
lcall
pop
mov
mov
arpl
pop
fmul
das
push
clc
dec
dec
shl
mov
stos
les
sbb
mov
idivb
inc
mov
jl
mov
push
shlb
in
ds
int
adc
std
ss
inc
enter
aad
cld
or
adc
test
addl
mov
mov
lds
ljmp
ljmp
das
mov
in
inc
shlb
push
rol
scas
out
jl
cmp
aad
cmp
or
les
and
mov
and
cmc
cmpsl
rcl
jbe
into
enter
dec
jmp
or
sub
lock
gs
mov
shlb
mov
xchg
adc
mov
pusha
mov
lahf
lock
add
ret
add
sub
and
mov
lret
ja
jno
pushw
je
cmp
imul
xor
das
ss
jno
mov
sub
std
in
imul
sbb
rcr
ljmp
jmp
mov
mov
xchg
mov
cmpsb
leave
xchg
scas
popf
imul
mov
out
adc
and
addr16
divl
dec
dec
ror
jno
test
loope
jmp
int
inc
adc
fisttpll
in
or
outsb
insb
push
push
enter
sbbb
pushf
ret
mov
repz
outsl
mov
outsl
lahf
clc
xor
push
mov
cltd
pop
lods
cmpsb
lcall
int
int
aas
cmpsl
jns
cli
xchg
add
stc
mov
pop
push
push
lcall
sbb
xor
jecxz
out
jbe
lods
movsl
sub
jecxz
sub
cmp
out
iret
lret
fiaddl
or
and
lock
in
fdiv
and
mov
push
out
sarb
repnz
pop
pop
fstl
xor
adc
xor
mov
in
cmp
rcrl
add
pop
push
and
shlb
xlat
jl
lahf
pop
mov
data16
mov
dec
hlt
mov
gs
in
jle
add
xor
hlt
jmp
in
subb
mov
testb
iret
pop
or
insb
ljmp
stos
xlat
scas
je
push
dec
nop
hlt
test
out
daa
pop
lods
pop
and
jg
insb
mov
xchg
inc
int3
pop
and
popl
push
mov
xor
pop
fnstcw
dec
cmpsl
xor
shrb
mov
xor
or
xchg
incb
roll
adc
inc
xor
mov
cmp
sub
aaa
inc
lock
fstpl
stc
xchg
mov
inc
rol
jb
repz
jae
xchg
or
ret
xchg
push
cmp
jl
mov
add
daa
in
xlat
rclb
negl
and
jl
insb
pop
or
inc
mov
insl
imul
xor
lds
push
std
pop
mov
jbe
mov
or
rcll
rolb
mov
pop
pushf
mov
in
movsl
and
decb
divb
add
add
mov
cmpb
nop
xchg
lcall
sub
cltd
mov
add
call
gs
push
xchg
mov
xor
xor
sub
fimuls
adc
sub
fnsave
cmc
ret
and
sub
mov
mov
ljmp
call
in
nop
pop
mulb
mov
dec
scas
jle
jnp
negb
in
xor
cwtl
jp
cmpsb
fucomp
insl
push
jmp
adc
lock
jae
pop
pop
or
or
fcmovu
cmpb
es
imul
mov
mov
es
push
or
cmp
jo
rcll
push
adc
sar
popa
push
jb
ds
xor
sbb
cltd
dec
xchg
loop
jae
adc
sub
nop
rorb
mov
mov
or
jmp
imul
scas
and
icebp
loope
fs
aaa
int
nop
dec
or
mov
lahf
dec
fldcw
stos
xor
mov
addb
pop
sub
lock
fsts
xlat
pop
jp
xor
adc
cmpsb
aaa
dec
adc
pop
out
sbb
mov
jae
dec
xchg
aas
jmp
rcrl
mov
cli
inc
cld
faddp
outsl
pop
or
mov
sub
mov
in
adc
jne
jno
push
sbb
fidivrl
repz
mov
scas
mov
and
dec
fbld
cmc
lods
lds
in
or
jnp
jg
pop
jno
jecxz
in
or
daa
adc
add
pop
add
jmp
inc
mov
js
mov
stc
xchg
int
fs
xor
jp
lock
addr16
lahf
jg
out
test
pop
daa
imul
mov
push
popf
gs
idivb
dec
lds
or
jnp
cmp
sub
dec
mov
push
ja
cwtl
rorl
mov
jb
fistpl
mov
sahf
ret
xorb
push
int
and
inc
and
icebp
test
xchg
and
rclb
je
cmp
out
jl
pop
mov
sbb
sahf
repnz
pop
mov
add
loope
adc
adc
mov
nop
or
push
adc
mov
or
test
fwait
pop
scas
and
inc
shr
comiss
ret
dec
sub
add
cmp
repz
mov
push
les
out
add
mov
push
aaa
sbb
out
repz
stc
es
or
enter
jmp
movb
sbb
into
push
pop
repnz
cld
dec
fistl
leave
or
pop
cmc
fs
sbbb
outsl
cmp
insl
pop
repnz
jnp
jg
lret
cs
xor
xchg
mov
push
xor
xchg
in
push
jecxz
call
test
stos
loopne
in
mov
add
out
adc
cltd
int
movl
mov
jge
mov
popa
xchg
push
aam
js
inc
dec
xor
mov
cs
popl
fstp
pop
loope
mov
push
add
cmp
push
jecxz
or
enter
push
xor
shll
mov
shlb
mov
inc
stos
daa
xchg
mov
push
add
sub
jbe
lret
out
ficompl
popa
mov
sbb
push
xchg
jnp
and
lods
dec
xchg
out
out
xchg
xor
cmp
gs
inc
ljmp
adc
mov
imul
adcb
dec
cmp
push
shl
push
rcr
and
cli
xchg
lret
xchg
out
fisubrl
push
loop
xchg
imul
add
and
or
test
pop
sbb
repz
dec
aad
mov
push
cmp
aad
xor
ljmp
test
xchg
testb
jge
xchg
jno
fdivrs
inc
xchg
jae
loope
insb
jp
pop
xchg
add
mov
fs
push
adc
xchg
push
lret
sbb
xchg
aad
cwtl
jecxz
or
adc
aam
mov
mov
adc
in
pop
adc
sub
mov
mov
xchg
je
inc
adc
sbb
jp
clc
mov
add
shrl
inc
cmpsb
bound
div
mov
lahf
mov
or
int3
mov
xchg
jl
mov
and
xor
sarl
outsl
mov
inc
aam
xor
cmpsb
or
mov
or
inc
gs
jb
shrl
jo
imul
xor
movsb
inc
sbb
adc
mov
push
mov
pop
repnz
fcoml
jne
xor
in
pop
js
test
into
cld
leave
scas
addl
enter
sbb
add
stos
lret
lret
sbb
jb
push
pop
xchg
cmpsl
sub
jg
push
inc
xor
lods
cmp
cwtl
outsb
dec
push
in
xchg
inc
icebp
imul
sub
pop
inc
mov
pop
cltd
sahf
mov
test
and
xchg
adc
jno
bound
jmp
push
xchg
jns
insb
cmp
cmp
ja
aaa
lahf
sti
scas
movsb
sub
pushf
inc
inc
ret
add
insb
mov
popf
addr16
fldt
add
push
std
mov
sbbb
sub
in
sbb
in
push
pop
sahf
or
push
iret
ljmp
shll
add
imul
push
cltd
xorl
mov
xchg
adc
fcomip
arpl
stos
test
in
out
sbb
adc
iret
push
scas
enter
lods
test
loop
xor
in
push
xchg
pop
nop
ss
lods
loopne
shll
inc
cmp
in
mov
sbb
mov
lods
dec
outsl
push
pusha
lret
fisttpll
nop
xchg
imul
loop
push
int
lahf
insb
fcoms
sub
arpl
xchg
decb
push
stos
push
scas
nop
negb
js
dec
jb
and
das
daa
test
je
cmpsb
rcr
adc
aaa
sahf
push
repnz
xchg
je
cmp
adc
inc
xchg
inc
stos
test
nop
aaa
insb
mov
inc
stos
or
push
add
dec
add
push
push
xor
xor
iret
pusha
fsubs
cwtl
stc
sub
pop
mov
inc
cmc
fmuls
jo
in
jo
push
cmp
leave
jp
out
pop
dec
leave
xchg
in
les
xchg
ss
aad
out
cmpsb
jno
lea
mov
cmp
cmp
jno
pushf
mov
sub
push
or
enter
cmp
das
aas
pop
mov
or
jae
mov
xor
rorl
sub
or
aad
cmpsb
bound
push
or
dec
shlb
xchg
cltd
shlb
xchg
pop
cmp
das
pop
mov
loope
pushf
fadds
ret
test
push
aad
sbb
lds
xchg
fst
out
mov
lea
das
std
inc
cmpsb
daa
fiaddl
stos
je
cmp
lock
cli
shr
test
test
adc
mov
push
mov
sub
inc
dec
rcl
sahf
xchg
push
leave
in
pop
adc
xchg
shr
ds
push
out
mov
push
jle
mov
xlat
gs
xor
add
ja
int
xchg
daa
cli
sbb
or
push
fidivrl
sarb
or
and
cmc
scas
jp
in
mov
inc
out
cmc
movsl
jnp
sbb
les
or
fucomi
scas
mov
lds
arpl
test
ss
js
scas
iret
repnz
imulb
hlt
jl
sub
mov
sub
jne
jnp
and
push
pop
xor
repz
adc
jns
inc
mov
inc
movsl
sbb
xor
mov
sti
jge
out
fists
push
inc
inc
daa
out
cmp
popa
or
lds
test
push
cld
mov
lea
andl
sub
cmpsb
or
dec
add
dec
mov
mov
sbb
fs
arpl
loopne
xor
mov
lea
jne
enter
xor
test
sarb
xchg
mov
inc
adc
or
xchg
xchg
dec
adc
sbb
mov
xlat
jecxz
lods
ret
nop
xchg
insb
sub
scas
dec
lcall
or
dec
movsb
insl
into
out
mov
insb
push
inc
or
arpl
lret
mov
dec
leave
mov
jle
lcall
push
sarl
fidivs
mov
cmp
popl
sub
mov
push
inc
out
push
lods
xchg
aas
dec
push
sbb
daa
adc
lret
imull
add
sbb
pop
fidivrl
pop
mov
jg
insl
pop
or
inc
sub
test
fbld
xor
cwtl
sbbl
call
cwtl
stos
in
cmpsl
push
xchg
movsb
push
pop
outsl
jg
jb
pop
mov
fildll
push
mov
push
mov
sar
push
aam
fisubrs
daa
push
mov
or
js
pop
movsl
adc
inc
pop
leave
xor
fisttps
mov
mov
jne
or
xchg
ret
xchg
push
loope
ja
call
push
test
pop
movl
mov
arpl
add
insl
xor
bound
mov
or
push
sbb
or
sbb
mov
jae
and
ss
sub
pop
lcall
repz
mov
jb
mov
cli
mov
ret
idiv
cmp
jl
ja
dec
lret
rcll
cmp
enter
push
leave
xchg
aaa
cmc
push
loope
xchg
or
adc
das
scas
loope
mov
inc
add
push
out
clc
jns
repnz
movsl
pushf
pop
mov
pop
hlt
mov
mov
mov
outsl
cmp
pop
or
int3
inc
sbb
sbb
mov
loopne
pop
mov
or
cmpsb
and
push
scas
or
xor
stos
add
xor
pop
adc
jge
mov
inc
mov
mov
out
mov
dec
push
xor
sub
orl
ds
jnp
push
outsl
and
rcll
pop
and
stos
gs
lds
int3
out
xor
mov
jge
sub
adc
xchg
lock
shrb
sbb
add
les
sbb
mov
ss
xchg
jae
cmpsb
sbb
xchg
fisubrl
je
shrl
and
pop
je
out
lret
sub
pop
enter
lods
rorl
lret
jge
insb
iret
adc
pop
cmp
stc
cli
ret
inc
in
or
ficoml
add
rorl
jl
cmp
jge
nop
stc
jmp
je
aaa
scas
das
add
mov
mov
pop
mov
movsl
in
sub
clflush
mov
out
lret
fildll
sbbb
sbb
or
dec
jecxz
jmp
jae
das
push
lcall
cmp
stos
mov
sbb
test
push
lods
sub
pop
inc
fstpl
dec
mov
push
rcll
sub
mov
adc
jne
xchg
mov
es
pop
mov
pop
popl
mul
inc
popa
add
adc
jp
adc
mov
cmp
repnz
imul
mov
xor
int
inc
xchg
jmp
je
xor
dec
fistps
insl
cmp
cmp
lahf
xchg
xlat
call
lods
jae
inc
and
mov
mov
pop
in
cmc
pushf
mov
mov
cmc
adc
pop
dec
into
adc
mov
lods
call
dec
fs
leave
push
jnp
leave
cmp
push
push
xchg
jne
mov
and
cmp
jg
sub
push
sti
adc
lods
movsb
xchg
pusha
enter
or
mov
jbe
mov
loope
pop
lcall
cmp
mov
enter
fs
cmc
mov
shll
dec
add
pop
push
and
pop
lods
aas
jmp
repz
cli
inc
xchg
cmc
aaa
xchg
insb
push
mov
xchg
xchg
mov
shll
popf
imul
cmc
push
xor
xchg
push
ret
jmp
sbb
std
sub
in
inc
inc
inc
dec
mov
out
push
lcall
xchg
inc
stc
mov
testb
dec
or
and
xchg
jecxz
cmp
pusha
repz
aas
std
arpl
or
mov
repz
jl
insb
xchg
xchg
imul
mov
int3
addb
hlt
inc
ds
cmp
add
movsl
xchg
sahf
pop
insb
xchg
and
roll
lret
gs
xchg
fmul
push
mov
jne
pop
sbb
push
pop
aam
jne
in
pop
adc
les
inc
hlt
test
cmpsb
xchg
out
lods
cmp
add
hlt
fidivl
rcrb
dec
cltd
jno
scas
sar
mov
or
push
mov
imul
out
mov
dec
ret
push
sub
jp
sub
push
hlt
ja
sbb
pmullw
pop
pop
mov
lahf
jo
jo
fnstcw
mov
add
xor
jmp
or
aaa
daa
cmp
xchg
andl
daa
dec
push
pop
fcomps
rol
pushf
lds
fisttpll
fildll
pop
pop
cmp
popf
adc
jecxz
pop
push
push
adc
clc
xchg
imul
cmp
push
xchg
mov
xor
mov
cltd
sbb
pop
pop
popa
cmpsb
xor
dec
sbb
jecxz
int
sub
insl
sub
fnstcw
out
push
push
fwait
lret
aam
adc
and
outsb
movsb
insb
or
sbb
add
inc
int3
pop
cmc
xor
inc
jmp
sub
rol
sbb
mov
xchg
pop
outsb
ficoms
or
inc
movsb
adc
mov
out
roll
out
clc
frstor
adc
sbb
xor
lahf
cmc
mulb
jb
mov
add
push
insb
aas
cld
les
and
movsl
std
inc
and
lahf
mov
pusha
popf
adc
mov
xor
xor
cmp
outsb
call
mov
inc
xor
and
jmp
push
cltd
jo
shl
adc
sti
in
loope
cmc
pusha
mov
xlat
mov
sahf
les
xchg
jle
ja
or
movsl
adc
mov
ficompl
cmp
repnz
popa
push
cmpsl
mov
mov
lret
flds
imul
out
push
es
sbb
fsubrp
pop
cmp
in
inc
pusha
dec
ss
test
cld
into
test
fists
adc
les
mov
and
sub
in
in
fchs
and
push
shlb
loop
mov
outsb
lea
fmull
shl
rcll
mov
pop
xorb
mov
cmp
mov
or
fdivrl
xor
mov
lea
mov
cmpsb
cmpsl
jge
or
mov
xor
or
cmp
adc
or
sub
into
clc
cmpsb
push
cmp
mov
mov
push
fidivs
test
test
dec
mov
xchg
mov
das
push
pushf
push
push
and
mov
cmc
hlt
dec
add
mov
pop
ja
xor
inc
mov
aad
xlat
mov
jge
cmp
push
repnz
aaa
leave
dec
pop
mov
daa
dec
incl
cwtl
cli
jecxz
or
mov
push
push
dec
outsb
and
ss
into
rcrl
cmp
sub
mov
fadd
add
cmpsb
inc
mov
xchg
stos
cwtl
inc
rcl
jmp
es
mov
xchg
jp
scas
aad
test
add
push
dec
test
arpl
xor
push
push
lock
and
fxch
and
push
cmp
test
and
ret
push
xor
mov
fdivrs
imul
orb
iret
inc
push
popa
mov
cmpsl
xlat
adc
in
xor
or
daa
cmp
out
loop
mov
jns
and
fnstsw
xor
cmp
jns
stos
jo
sub
pop
loopne
mov
sbb
mov
fdivl
pop
jns
fnsave
fisubrl
jp
push
stc
or
js
add
jmp
or
xor
xchg
jnp
push
pop
fs
mov
outsb
and
sbb
pop
cli
sar
mov
ss
jne
popf
out
xor
loope
aam
fiadds
pop
xor
xor
cmp
faddl
clc
inc
pop
imul
pusha
shll
test
pushf
divb
push
iret
pop
fistpll
xchg
mov
stc
cmp
scas
push
and
xchg
iret
bound
xlat
out
jb
sub
xor
or
sahf
lret
jb
data16
cld
mov
js
mov
mov
fwait
adc
inc
mov
movsl
xor
xchg
dec
pushf
jp
jg
ficompl
lahf
push
mov
ret
lret
or
cwtl
mov
sbb
nop
inc
mov
imul
push
mov
or
out
ss
adcl
push
add
data16
rorb
cld
xchg
sbb
sub
push
xor
out
rorb
ficoml
xor
loope
pop
repnz
das
lret
mov
in
rcl
test
js
pop
test
lret
fsubl
cmp
jb
ds
mov
outsb
cmp
test
push
sub
loop
rorl
loopne
mov
mov
adc
adc
or
push
dec
add
scas
xchg
push
sbbb
push
fmul
mov
mov
inc
test
sti
lock
dec
divl
mov
or
fidivl
das
loop
enter
dec
sbb
dec
jmp
push
sbb
rolb
push
xchg
pushf
pop
or
pop
mov
mov
adc
cmpb
lods
jp
jne
or
push
sub
subl
dec
cmp
add
jp
mov
mov
jo
in
repz
sub
fldcw
loop
xor
jno
jae
mov
test
mov
add
gs
mov
lret
add
icebp
lret
push
in
fsubs
cmp
rclb
adc
shr
jl
enter
sbb
jbe
pop
jmp
push
loopne
mov
fs
sub
jbe
lret
and
push
push
hlt
jg
jns
insl
ret
mov
jbe
fists
push
pop
iret
dec
adc
adc
mov
sbb
aas
cld
rol
int
mov
cmc
push
and
jmp
mov
push
insb
mov
cmp
mov
mov
mov
mov
out
fwait
out
adc
fwait
lock
jnp
shll
cmpsl
or
movb
int3
mov
aaa
roll
xor
dec
inc
popf
and
aad
jbe
mov
iret
das
enter
xchg
sar
daa
pop
popf
mov
mov
shrl
xor
enter
jle
inc
mov
ret
push
das
aas
mov
or
mov
xor
cld
shrb
lret
subl
fsubs
sahf
inc
adc
dec
cli
out
test
mov
roll
sarb
jae
mov
cwtl
in
rorl
pushf
test
test
pop
sub
jnp
xchg
xchg
jb
pop
pushf
insl
imul
mov
stos
xchg
jl
xor
or
test
mov
adc
adc
lret
imulb
inc
cmp
adc
nop
fsubs
mov
test
xor
int3
mov
pop
out
repnz
lret
jge
mov
dec
sbb
out
stos
nop
testl
stos
dec
add
xor
sub
inc
cmp
scas
and
mov
addb
rolb
das
mov
jl
add
out
jge
sti
popf
out
dec
cmp
xchg
mov
mov
cld
mov
std
into
or
add
pop
rcrl
fnsave
dec
data16
inc
data16
outsb
ss
xchg
and
loopne
arpl
push
adc
sti
ja
clc
add
fnstcw
sti
push
movsl
andb
and
add
sub
and
in
enter
push
dec
inc
lcall
aam
xchg
jle
or
int3
add
sub
iret
pop
imul
shrb
dec
cmp
xchg
inc
je
xchg
push
adc
lcall
mov
sub
mov
hlt
push
ds
pop
aas
loopne
lock
cltd
scas
pusha
mov
cld
andl
push
divl
xor
jg
dec
call
xchg
call
orb
loopne
aas
cld
xchg
in
and
je
inc
movsb
or
pop
mov
mov
xchg
adc
add
bound
lcall
push
aaa
andb
pop
loope
inc
adc
sub
inc
iret
jne
push
dec
pop
mov
notl
aaa
inc
add
cmp
jbe
add
sub
mov
aas
frstor
imul
sub
mov
mov
inc
out
enter
push
push
sub
out
rcrb
test
and
fistpll
lds
push
push
movsl
in
mov
xchg
inc
test
xchg
out
test
jge
dec
cld
inc
mov
stos
sarl
fildl
cmp
mov
sahf
cmpsl
jl
mov
cld
in
es
rcl
xchg
push
ror
adc
into
push
and
dec
adc
xor
cltd
cmp
lahf
adc
out
js
mov
push
dec
jle
xor
cmc
fstpt
sbb
cmc
push
and
les
cs
mov
mov
in
dec
mov
lock
and
test
aam
hlt
jmp
push
ljmp
cmp
xchg
stos
mov
add
arpl
shrb
frstor
mov
sub
pushw
arpl
or
adc
mov
loop
xchg
push
sbb
or
ss
mov
jl
and
dec
loop
fisttps
lds
and
ljmp
pop
xlat
int
into
inc
pop
jbe
dec
das
xchg
jno
jecxz
xchg
in
idivl
enter
jge
jge
cmc
ror
ss
repnz
dec
cwtl
stos
mov
jge
das
sbb
inc
sbb
popa
movsb
neg
ds
pusha
daa
dec
adc
subb
sbb
mov
jge
gs
out
cmp
cmpl
mov
gs
in
mov
inc
lods
sub
mov
and
push
movsl
cld
pop
push
out
or
stos
int
add
adc
pop
jae
cmpsb
cwtl
add
loopne
jo
je
xchg
sub
pop
subb
nop
out
jno
push
inc
jae
movsl
xor
jns
inc
sbb
dec
xchg
jnp
pop
movsb
pusha
nop
nop
scas
sub
jle
test
xchg
insl
and
idivl
shrl
mov
imul
fiaddl
inc
jp
dec
push
jbe
adc
xor
sub
inc
mov
dec
roll
aam
loopne
cwtl
adc
sbb
push
rorb
xchg
sub
rclb
lahf
xor
or
fs
aam
data16
popa
jbe
adc
mov
ja
add
lret
fdivr
mov
cmp
cltd
and
mov
dec
cmp
outsb
scas
add
xchg
pop
cmp
and
mov
push
sbb
fdivrl
mov
mov
mov
insl
fdiv
xor
and
push
insl
std
loop
mov
movsb
xchg
jle
sahf
push
or
adc
rcrl
pop
pop
mov
sub
into
jo
mov
neg
outsb
fdivrl
fisttps
pusha
stos
pop
push
out
rorl
test
addr16
jecxz
sub
std
and
insb
fwait
ss
aam
push
in
data16
dec
sbb
jmp
push
inc
addr16
sbb
repz
das
cmp
mov
leave
ds
pop
movsb
mov
shlb
addl
cld
fnstsw
dec
jmp
je
xor
push
roll
push
mov
xchg
loop
leave
gs
jno
jae
xor
loopne
aam
movsb
ret
outsb
mov
push
in
test
mov
out
mov
and
or
cmp
repnz
cmp
mov
je
and
out
inc
ja
jnp
xchg
scas
cmpsb
xlat
ds
scas
jae
ja
or
mov
push
cmp
leave
lea
xchg
push
dec
cltd
stc
jbe
cmpsl
xchg
cmp
nop
inc
cmp
testb
jns
and
stc
insb
notb
in
nop
fcmovb
in
test
std
cmp
jmp
push
pop
test
insb
adc
mov
cltd
adc
and
stc
in
mov
or
inc
int3
neg
addr16
and
sti
dec
in
and
das
xchg
jo
movsb
xchg
fs
pop
jl
push
in
jle
sub
test
sub
inc
xor
in
dec
jno
outsl
mov
scas
mov
test
mov
test
fwait
jl
fwait
adc
popl
add
xchg
inc
mov
jmp
test
lea
inc
testl
mov
inc
push
push
pop
and
sarb
sub
arpl
lcall
or
xchg
mov
cli
xchg
mov
pushf
stos
jle
ret
and
popf
out
je
push
jmp
adc
xchg
sbb
das
mov
cmp
sub
popf
push
mov
xchg
test
xchg
movsb
push
pop
je
es
push
mov
lahf
in
xor
dec
jnp
popa
push
imul
fcomps
mov
insb
test
es
and
xchg
pushf
mov
pop
mov
jne
nop
negb
pop
inc
add
leave
mov
sarb
out
in
frstor
dec
dec
sbb
lods
int
inc
sub
std
jae
arpl
ljmp
mov
lock
sbb
pop
add
adc
mov
movsb
roll
sahf
jne
push
sub
ret
fiadds
in
jnp
int
jge
cmp
adc
ror
in
out
outsb
add
jnp
shlb
lahf
adc
ret
ja
les
and
rorl
loopne
jmp
push
cwtl
jo
or
jecxz
popf
popa
sarb
outsb
sbb
test
addl
repz
cmpsl
into
enter
xlat
lods
sti
or
add
outsb
jmp
out
imul
sti
into
fidivrs
dec
sti
sub
iret
mov
cmc
outsb
movsl
adc
push
xor
gs
out
and
push
push
xchg
pop
adc
jge
mov
int3
mov
lahf
scas
inc
pop
insb
mov
aam
nop
mov
xchg
ja
mov
outsb
and
cli
loope
mov
sub
std
push
mov
add
cmp
stos
jnp
mov
sub
repnz
mov
cs
repnz
add
insl
cld
bound
xlat
jb
fists
cmp
cmpb
dec
adcl
sbb
inc
mov
ds
pop
lods
les
mov
daa
fstpt
sarb
adc
push
fcmovnbe
push
jnp
stos
sub
ds
out
push
outsb
pushf
ret
out
lret
inc
call
mov
jg
ret
mov
jmp
and
pop
lock
cld
in
testl
inc
mov
cmp
in
or
mov
sbb
loope
sbb
shll
enter
mov
xchg
push
imul
std
incb
outsb
gs
add
mov
fcmove
loope
loope
and
cmp
dec
dec
pop
test
sbb
cltd
test
cli
cs
loopne
add
jnp
test
aas
sbb
icebp
bnd
or
lcall
xchg
lds
xchg
leave
xchg
xor
adc
jae
pop
cltd
cmp
jecxz
push
fcmovu
cmpsl
pop
dec
inc
push
pop
test
mov
lods
push
stos
mov
pop
dec
sahf
arpl
scas
xor
inc
lods
and
mov
jno
cmp
pop
out
cmp
pop
jle
loopne
daa
cmp
pop
cmp
shll
sbb
inc
add
inc
movsl
sbb
add
sub
test
push
jge
scas
mov
adc
fstl
je
lock
daa
scas
popa
dec
cmp
hlt
inc
int3
out
jecxz
xchg
or
dec
cmc
jg
cmpl
lea
mov
xchg
imul
popf
push
loopne
fisubs
mov
sub
movsb
push
mov
pop
stos
or
fcmovnbe
cmp
je
xchg
dec
jp
lea
cmp
mov
cltd
xor
cwtl
mov
mov
loope
adc
mov
shlb
leave
and
bound
sub
xchg
sub
shl
or
xchg
xor
jns
dec
mov
pop
sbb
pop
call
in
outsb
movsl
test
int
insb
dec
clc
insb
fildl
pop
es
imul
mov
cmp
test
cmp
cmc
xor
popa
lahf
dec
jl
arpl
xlat
stos
sbb
or
movsl
mov
sub
jl
mov
mov
adc
and
push
outsl
lods
jg
jno
inc
add
lock
data16
and
pxor
dec
repnz
test
sbb
mov
push
repnz
and
sbb
add
je
sub
jmp
lahf
lret
addr16
add
jno
jg
add
push
pop
cwtl
leave
xchg
filds
fisubrl
js
sub
mov
fs
hlt
call
mov
push
loope
adc
std
mov
dec
mov
pop
xchg
es
lods
xchg
ss
int
xor
call
int
shl
adc
lods
lds
int3
or
hlt
cwtl
icebp
add
sbb
mov
cmp
mov
mov
or
mov
aas
inc
jmp
mov
lcall
mov
cwtl
test
fdivr
sbb
pop
and
stos
push
pop
mov
mov
sbb
xchg
pop
mov
or
ja
add
outsl
pop
mov
rorb
aas
jno
loop
inc
sbb
fnstsw
mov
sbb
adc
std
xor
lret
xchg
or
lret
pop
sti
cmp
dec
jno
xor
mov
inc
mov
cmp
sbb
xor
ret
and
sub
daa
or
movsb
pop
arpl
push
push
shrl
test
cmp
jg
push
icebp
push
xchg
xor
jnp
ds
loop
jge
shrb
mov
cmp
subb
je
std
arpl
popf
jmp
les
xor
add
push
loope
jecxz
lock
mov
dec
ret
and
aaa
pop
popa
pop
mov
in
push
add
pop
pop
es
das
mov
pop
dec
and
add
out
cmpsl
inc
jmp
cwtl
adcb
xorl
insl
push
out
aas
js
rcrl
mov
xchg
nop
sub
inc
sub
repz
sub
dec
repnz
test
and
cmp
xchg
inc
test
mov
mov
and
jl
ljmp
ret
jb
and
mov
daa
sub
push
mov
repz
push
and
pusha
inc
popf
adc
sbb
xchg
push
cmpsb
movsl
fcoml
popl
inc
ljmp
mov
lods
xchg
push
cs
loope
adc
inc
jne
lahf
sbb
movsl
mov
pop
xor
sub
add
xor
xchg
cmp
inc
jb
test
mov
mov
jecxz
push
xor
addl
outsb
mov
add
cmp
xchg
xchg
push
dec
push
outsb
cld
mov
cmp
out
test
sbb
xadd
sbb
mov
mov
call
decl
mov
mov
mov
pop
xchg
orb
jne
aam
push
cmpsl
je
icebp
out
mov
sbb
xchg
and
in
aad
cli
fiadds
lahf
sub
test
test
xor
out
and
cmp
pop
or
fisubl
sbbb
stos
inc
roll
bsr
insl
fmul
dec
or
in
popa
data16
scas
les
je
push
pop
aam
push
cmp
push
stos
add
cld
decl
int
out
adc
push
mov
add
in
iret
lods
add
int3
xorb
xor
out
sub
into
add
imul
mov
push
sub
mov
sub
mov
std
shl
mov
xor
aad
fbstp
sarl
clc
leave
dec
mov
and
mov
lcall
or
xchg
sarb
or
push
cwtl
or
je
out
sub
jb
xor
js
fstps
arpl
in
rcrl
aaa
fists
fldpi
sub
mov
pop
dec
mov
ficoml
inc
adc
mov
testb
enter
add
imul
jle
mov
ds
adc
out
pop
les
push
or
mov
cli
lea
push
adc
or
jb
out
shl
push
mov
pop
loopne
pop
xor
stos
pop
lds
add
or
fimull
sti
jecxz
aas
test
pop
adc
lcall
cwtl
movsl
lret
dec
push
fstpt
sub
add
scas
mov
pop
push
test
xor
test
push
rolb
cmpsb
fisttps
mov
jecxz
mov
jo
sub
inc
xchg
sub
xlat
lds
inc
jo
addb
xor
jg
push
inc
jecxz
cltd
pop
les
xchg
stc
and
push
xor
ficompl
dec
jno
mov
pop
ret
add
lds
push
push
dec
aad
xor
push
push
les
cmp
rcrl
fcompl
rol
xchg
dec
inc
push
orb
outsb
push
sarl
or
insb
mov
popf
lea
popa
dec
jae
add
cs
mov
cmp
xchg
insb
dec
xchg
lcall
gs
or
or
jb
scas
add
fistl
js
push
sub
je
push
out
leave
push
pop
pop
mov
and
xor
jbe
lock
insl
jb
and
std
inc
add
insb
sub
jp
push
inc
mov
pop
je
pop
arpl
pusha
imul
cli
rol
dec
test
push
xchg
xor
push
pop
insl
pop
jb
inc
push
sub
inc
inc
push
sahf
mov
or
rcl
jo
cwtl
lret
ja
or
pop
lea
cmp
je
nop
cltd
lret
and
cmp
into
cmp
mov
sub
clc
andb
test
sbbl
add
and
xlat
dec
mov
cmp
std
lret
fisttpll
and
subl
fisubrs
js
loope
mov
mov
dec
mov
stos
jnp
dec
pop
out
pusha
pop
or
fmuls
push
sbb
cmp
insb
stc
pusha
pxor
lods
add
loopne
mov
std
xchg
fwait
cltd
pop
or
or
mov
pop
fs
daa
ljmp
cmpsl
or
popa
pop
loope
mov
in
cmp
add
fisubl
int
pusha
test
nop
addl
icebp
push
push
xchg
shrl
fidivrl
rcrl
jg
inc
pop
cmp
test
inc
sub
lds
pop
ficoml
jp
test
addr16
adc
mov
mov
mov
ds
pop
push
lret
pop
les
jg
inc
add
xchg
add
xchg
aad
arpl
lods
adc
dec
aam
push
inc
mov
mov
or
inc
fiadds
mov
or
lret
push
cld
pushf
fstps
loopne
leave
or
dec
mov
jg
dec
or
movsl
out
jo
cld
test
sbb
mov
cmp
pslld
or
cmp
loop
mov
adc
nop
cmpsb
xor
inc
aam
loop
jo
xor
add
xor
cmpsl
test
movsl
loop
sarl
xor
or
outsl
mov
mov
sbbl
lods
pop
in
inc
adc
mov
divl
hlt
xchg
mov
int3
mov
add
xor
xchg
aam
call
flds
cli
inc
cmp
sbbb
jp
cld
clc
inc
jmp
jbe
or
test
aas
xor
insl
mov
jns
mov
dec
pop
push
jmp
pop
cs
rcll
mov
cmpsl
lret
mov
lcall
int
sbb
or
mov
mov
hlt
int3
push
adc
movsl
push
lret
outsb
clc
clc
and
push
in
jne
cwtl
loop
cmc
cld
pop
jecxz
lods
xchg
je
movsb
adc
xchg
fistps
arpl
xchg
rcrl
pop
sub
push
fcmovnu
repnz
mov
or
addr16
std
pop
dec
and
xor
icebp
push
inc
mov
mov
and
iret
cmc
or
xchg
sub
cmpl
and
addr16
xor
out
adc
pop
mov
loope
lret
xchg
jbe
shrl
fildll
push
lret
sub
or
sbb
jno
add
jmp
xor
dec
aas
scas
rcll
fdivl
and
aas
call
cmc
insl
out
add
xor
add
xor
jo
imul
push
adc
into
push
flds
mov
jo
outsl
leave
xor
aas
les
gs
lods
inc
fs
ljmp
iret
mov
and
pop
pop
orb
xchg
push
adc
outsl
or
mov
and
mov
and
push
test
adc
xor
test
stos
push
push
stos
pop
lret
mov
or
fsubr
in
imul
inc
insl
test
data16
jp
or
dec
call
inc
and
das
sub
sbb
pop
movntq
insb
xchg
xchg
pop
xor
dec
es
arpl
fistpll
add
pop
inc
mov
sub
mov
inc
jp
add
imul
push
push
cmp
imul
pusha
mov
jp
lock
aam
in
pop
mov
fdivs
sub
xor
jne
leave
movsb
sub
push
pop
scas
lds
outsb
push
mov
adc
add
and
lret
cmp
addr16
jp
in
dec
pop
addr16
pop
adc
add
push
int
ret
mov
xchg
repz
xchg
inc
inc
mov
jb
stos
ss
push
cld
insl
pop
lret
je
popf
aam
aaa
and
stc
cmp
hlt
loop
popa
imul
ret
mov
xchg
cmp
xor
jmp
out
cmp
push
pop
test
mov
test
xor
bound
gs
stos
in
out
jp
mov
cld
pop
aaa
jge
in
cld
jae
pop
xlat
into
dec
in
pop
xor
std
pop
pop
es
out
aaa
adc
sub
hlt
push
dec
jp
dec
adc
cmp
cli
std
xchg
mov
and
jno
jecxz
xchg
pop
cmp
xchg
jnp
fmull
mov
dec
sub
pop
out
mov
inc
enterw
jb
fdivp
mov
pusha
sbb
mov
and
xor
mov
in
jmp
mov
in
xchg
mov
ficompl
jno
xchg
jmp
stc
mov
rcll
call
cmpsb
and
mov
rclb
add
sub
push
sub
ljmp
xchg
push
inc
out
sub
xor
lcall
push
fs
orl
nop
dec
mov
mov
aam
inc
xchg
jp
ss
mov
test
scas
test
in
mov
add
mov
pop
rcrl
ficomps
sub
das
inc
xor
mov
dec
push
adc
push
inc
pop
sbb
xor
xchg
cmp
sub
jae
xor
test
sbb
outsb
jnp
inc
movsl
sbb
cmpsb
xor
xchg
xchg
rolb
aaa
pusha
scas
movl
pop
test
jl
mov
cli
mov
enter
jnp
rclb
imul
jo
lds
clc
iret
test
pop
jle
push
lcall
xor
ss
jb
pop
lods
aaa
bound
mov
mov
mov
cmp
jae
sub
mov
test
inc
jbe
insb
mov
popa
xor
jb
add
mov
js
or
fstps
aad
dec
xor
in
mov
push
sub
arpl
iret
sub
lea
ficompl
lock
stos
fstps
ds
xor
fiadds
out
or
in
pop
sub
push
dec
out
pop
lret
call
enter
push
xorb
imul
sbb
loope
xchg
je
dec
push
test
mov
cmp
push
pusha
outsl
fistpll
pop
in
jg
leave
cwtl
aad
out
pop
outsb
fs
jecxz
imul
jle
or
mov
lds
cmpsl
arpl
rorb
mov
mov
inc
out
cltd
cmp
pop
daa
cltd
je
aam
sti
cld
dec
xchg
dec
xchg
test
push
xlat
lea
pushf
sbb
mov
xchg
cmc
xor
fnstcw
sarb
aad
inc
inc
fists
sbb
cmp
out
and
scas
std
dec
cli
mov
sbb
out
adcb
add
cmpsl
dec
mul
xlat
push
roll
jno
add
ja
sbb
test
mov
mov
mov
ret
scas
jmp
xor
jmp
aam
cmc
imul
sub
mov
stos
jbe
ja
xor
pushf
in
dec
fs
sti
xchg
test
sub
sbb
aam
pop
ja
ss
xchg
mov
jmp
lds
fbstp
je
mov
or
mov
sbb
rcrl
push
xchg
sub
sbb
inc
adc
je
aas
int3
repz
loopne
adc
inc
add
lret
ljmp
adc
cmp
test
xchg
mov
es
lahf
outsl
loopne
jp
mov
test
cmc
jne
jle
jle
or
mov
lahf
test
and
loop
stos
imul
or
aas
in
stc
ljmp
pop
push
sub
lcall
cmp
or
out
ret
cmpsb
cs
lfs
xchg
iret
jb
test
mov
xorl
movsl
mov
inc
mov
add
out
das
add
xor
push
jne
addr16
sub
mov
xchg
aaa
cmp
add
push
jecxz
push
inc
lahf
call
scas
and
lret
rorb
mov
pop
popa
test
jnp
scas
imul
cmp
sbb
aam
ds
ds
inc
repnz
roll
dec
sub
push
or
lea
mov
inc
adc
lock
fs
cwtl
cmp
cmpsb
add
mov
sbbl
sbb
dec
jecxz
inc
int
enter
lret
jp
outsb
sbb
ret
adc
adc
ds
or
call
testb
jl
xchg
repz
adc
les
and
mov
or
and
mov
cld
push
fistpl
adc
cmc
lods
jecxz
lds
pop
iret
insl
aam
mov
fwait
pop
mov
jl
or
xchg
jnp
daa
push
jnp
adc
arpl
bound
les
mov
test
ret
or
sahf
clc
inc
fimull
cmp
ljmp
icebp
mov
stos
pop
lahf
lods
mov
add
outsb
and
jb
clc
pop
add
cmpsb
jns
insl
push
jge
cltd
or
fucomip
or
pushf
mov
int
pop
shrb
ljmp
cmp
push
aam
pop
mov
stc
mov
fs
and
xor
bnd
std
loop
les
int
cmpsb
adc
push
insb
shl
movsl
push
lods
inc
repz
cmp
enter
inc
out
add
mov
lcall
push
dec
aad
clc
fwait
sbbl
xor
enter
sbb
bound
rorl
jecxz
scas
nop
xchg
or
fbld
je
mov
jbe
fstpt
iret
stos
in
inc
xlat
addr16
sub
insl
pop
xchg
popa
mov
inc
adc
xor
sti
pushf
mov
rorb
in
xchg
add
fwait
mov
sti
mov
lret
add
shll
rorl
jns
leave
and
sbbl
and
adc
shll
fstpt
jge
or
ja
cmp
into
and
adc
loope
mov
or
xchg
cmc
outsl
add
or
popa
std
xor
lret
push
mov
pop
cmc
data16
push
pop
add
adc
outsl
pop
in
pop
cmp
imul
xor
sub
dec
or
lret
mov
sub
mov
cs
push
or
orb
mov
mov
mov
lahf
push
aam
push
loopne
cld
les
fiadds
lahf
cmpsb
add
negb
in
push
dec
movsb
add
jle
push
push
pop
jmp
or
pushl
xor
loopne
or
lds
mov
inc
cmp
jmp
sti
add
out
arpl
leave
cmp
pop
outsl
jae
jge
out
or
sbb
xchg
sub
aad
pop
aas
jbe
jmp
jecxz
test
inc
repnz
inc
adc
push
adc
aas
int
xor
pop
dec
cmc
or
adc
ss
ret
xchg
jecxz
dec
cltd
js
gs
dec
jae
test
inc
xchg
adc
push
lret
test
jae
shrb
cmp
fldcw
xchg
xor
xchg
fsubr
aam
bound
xchg
fsubp
xchg
out
or
stos
fsubs
add
or
dec
push
mov
mov
ja
dec
jecxz
lcall
and
push
pop
ret
out
mov
loopne
negl
sbb
add
mov
stos
jg
inc
adc
loope
das
in
test
mov
jmp
jge
fldenv
inc
into
mov
push
scas
insl
addl
inc
call
int3
fldcw
jno
repz
mov
imul
and
dec
cwtl
xchg
sub
cs
outsl
add
popa
add
xor
leave
in
push
int
push
add
cmp
icebp
jne
daa
dec
fdivp
add
dec
repz
rcrl
loopne
shrl
dec
aas
add
push
cmp
sub
push
fisttps
pop
insl
mov
popl
cmpsl
loopne
std
sub
int
mov
fwait
mov
and
cld
popa
movsb
xor
jbe
decb
mov
or
loopne
mov
push
outsl
fstps
rcr
aam
mov
aad
mov
test
into
aam
orl
test
hlt
mov
fisubrl
shll
dec
leave
or
jnp
popf
xor
cli
mov
fdivp
pop
out
mov
mov
shrl
loop
inc
mov
sbb
in
xorl
mov
cmp
jg
xorb
ss
xchg
xor
lahf
push
out
xchg
fisttpll
repz
mov
cltd
call
mov
ljmp
cmpsl
mov
xchg
push
stc
sahf
out
inc
jnp
aam
jns
add
dec
mov
jne
lcall
adcb
or
roll
push
sub
in
and
roll
repz
dec
divb
pop
in
adc
icebp
das
lods
and
or
mov
jmp
fstl
adcl
sbb
in
test
je
test
lods
fiadds
xchg
jp
push
pop
cmp
mov
ljmp
icebp
lcall
lahf
popf
out
inc
jae
dec
fsubl
cld
inc
and
jmp
into
das
iret
or
inc
addb
xchg
stc
xor
mov
xchg
sub
add
insb
mov
in
out
fistpl
pop
inc
sarb
jbe
dec
mov
cmc
xchg
cwtl
dec
test
adc
sbb
div
sbb
fwait
cli
push
cmp
pusha
iret
movsl
mov
adc
mov
imul
repz
pop
sub
addr16
pop
ret
ret
sbb
cmc
xchg
scas
mov
dec
pop
jae
jl
out
push
add
out
aaa
mov
jge
movsl
das
shll
sbb
test
xchg
scas
fisttps
cli
int3
mov
in
mov
mov
roll
imul
nop
aad
and
jle
xchg
sbb
cmp
adc
push
insb
dec
dec
pop
enter
cli
adc
or
xor
mov
sub
dec
jno
out
data16
sti
and
fcom
test
test
fistps
sbb
dec
shlb
mov
mov
xchg
and
adc
je
sub
in
sti
in
jo
sti
jne
inc
jle
xchg
jae
test
inc
adc
addr16
mov
int3
fs
ficomps
js
push
push
mov
add
in
loop
lret
inc
mov
push
fimull
inc
or
pop
fiadds
jp
xor
fists
xchg
jno
test
lock
or
sub
dec
or
cmpb
sbb
xchg
andl
ja
xor
popf
dec
xor
sbb
roll
mov
push
sub
lea
add
jo
dec
enter
jae
orl
mov
or
mov
ss
xor
adc
or
jae
popf
add
cmc
movsb
aaa
mov
fwait
loop
mov
rorl
imul
pop
ffree
bound
out
ljmp
add
sbb
pop
or
mov
insb
in
dec
insb
rcrb
sub
inc
dec
in
mov
mov
adc
jbe
cwtl
sti
shll
pushf
lcall
ss
sbb
iret
mov
ss
jns
lock
clc
popa
xlat
inc
xchg
sbbl
dec
mov
loop
std
sub
mov
cmc
push
push
sahf
mov
ffree
inc
or
iret
cmp
aas
je
push
mov
xor
cmp
inc
mov
frstor
orb
jo
xorl
ljmp
mov
aam
imul
xchg
jae
in
scas
leave
into
std
jp
mov
in
xor
xorb
out
lods
call
int3
sub
outsl
sbb
or
push
mov
rcl
sarb
shll
dec
jnp
cmp
sahf
mov
pop
pop
daa
fdivrs
and
aas
repnz
mov
add
mov
push
cwtl
pop
cld
test
xchg
cmpsl
inc
and
push
or
cmc
repnz
out
jg
pop
jmp
xor
cmp
imul
jg
xchg
inc
mov
cld
sbb
ds
jg
push
or
ja
std
push
aas
cmpsl
jne
xchg
popf
add
icebp
inc
pop
fstpt
clc
adc
test
imul
pop
mov
mov
ss
mov
mov
mov
lock
and
hlt
lret
mov
daa
jae
pusha
mov
arpl
adc
into
dec
in
test
mov
xchg
rol
mov
scas
adc
clc
mov
mov
jecxz
sub
aam
inc
popf
xlat
add
and
test
mov
jne
dec
sub
popf
add
int
pop
sbb
sahf
fnsave
lcall
pop
cmp
xchg
push
lret
lret
aad
cltd
test
jg
xchg
mov
inc
add
adc
sub
movsl
in
xlat
fnstcw
icebp
cmp
shll
adc
or
cs
pop
or
mul
inc
iret
shlb
or
sarb
push
aam
push
mov
out
or
xor
cmp
jg
rorb
rorb
lock
popf
pop
nop
sub
xorb
fisubs
cs
loop
inc
mov
lock
mov
call
pop
sarb
lods
movsb
aaa
xor
sub
blsic
push
jge
pop
adc
cmp
mov
lock
inc
push
stc
inc
fxch
repz
leave
or
leave
cmc
rolb
xchg
add
repnz
ds
push
sub
popf
outsb
mov
je
mov
in
pop
xchg
std
enter
mov
roll
dec
mov
xlat
jp
cltd
cmp
lcall
in
jne
into
pop
imul
mov
sub
fbstp
jmp
out
or
mov
add
jl
sub
pop
mov
xchg
sub
adc
xor
add
sub
push
out
mov
jecxz
sub
ret
fisttpl
shll
and
jecxz
xchg
fdivl
in
addr16
mov
dec
aaa
inc
cmc
pop
aaa
aas
lea
or
jle
stos
xor
jnp
out
xchg
xchg
sti
lods
xchg
jg
and
inc
mov
mov
or
xchg
sbb
mov
movsl
sbb
cmc
mov
pop
iret
sub
lcall
jp
arpl
cld
data16
and
pop
hlt
ret
mov
cmp
aas
int3
inc
or
add
test
push
mov
aad
push
mov
arpl
adc
sub
and
loopne
roll
ret
loope
test
hlt
sub
adc
add
adc
jbe
test
sub
pushf
lret
pop
nop
fxch
pop
add
fidivl
cli
cmpsl
mov
jne
inc
xor
adc
and
mov
pop
out
mov
loopne
rorb
enter
lds
push
xchg
test
out
movsl
xor
sbb
fwait
dec
lds
cs
test
lret
rclw
push
out
mov
test
add
out
int
lret
test
nop
xor
rcrl
sbb
xor
out
or
jo
js
pop
add
popa
sub
das
mov
sub
adc
push
out
xchg
jle
pop
lahf
mov
ja
xor
lods
icebp
scas
dec
dec
mov
inc
pop
sahf
push
pop
adc
sbb
shlb
sbb
jmp
aam
push
mov
xchg
xchg
push
pop
das
lahf
or
clc
xchg
jb
aam
jmp
call
adc
in
xchg
adc
insb
fcmovnb
mov
push
loopne
jle
cmpsl
and
pop
cmp
push
add
and
xor
negb
stos
cmpsl
pop
in
pop
jnp
sahf
push
out
xorl
add
dec
lcall
jmp
inc
int3
inc
xor
adc
aas
icebp
fisubrl
xabort
adc
sub
cltd
daa
rcrl
inc
xchg
xchg
sbb
shr
loopne
inc
loop
iret
adcb
in
in
pop
cwtl
jbe
jno
rolb
test
scas
adc
dec
sbb
iret
pop
cmpsb
fs
lds
sti
out
aas
popf
jnp
inc
add
mov
add
fimull
jnp
pop
sbb
mov
mov
inc
daa
repnz
push
jle
inc
mov
jnp
sub
jecxz
popa
mov
and
or
pop
int3
in
das
dec
xor
sub
lds
xorl
xorl
into
test
adc
jo
nop
cmp
test
bnd
fistpl
jge
int
cmp
mov
movsl
out
mov
repz
jae
add
mov
fsubrs
push
mov
adc
cmp
fisubrs
daa
bnd
das
sti
jno
imull
int
jg
shrl
arpl
cmpsb
in
adc
fdivl
inc
adc
lcall
pop
sti
or
sti
les
mov
xchg
hlt
hlt
pop
push
pop
int3
jnp
fwait
adc
addr16
jnp
addr16
jae
jb
cmovnp
gs
add
sbb
add
pop
lea
in
and
sbb
in
adc
daa
out
adc
or
lds
adc
inc
cld
jle,pt
push
mov
push
mov
mov
rorl
mov
add
xor
xor
cmpsb
cli
arpl
sbb
mov
jle
jmp
movsl
add
insl
dec
lds
rorl
sub
insb
pop
in
xchg
test
movsl
test
pushf
pop
pop
std
adc
mov
scas
icebp
add
ror
fistl
dec
mov
pop
and
lret
sbb
dec
loop
negb
insb
xchg
xchg
jnp
mov
mov
cs
mov
stos
pop
push
popa
jbe
cmpsb
stos
ds
cld
jecxz
in
out
repz
xchg
aam
push
or
mov
cmpsb
adc
loop
inc
xor
aam
aaa
insl
xchg
ds
mov
mov
lcall
mov
lret
mov
test
shrb
pop
pop
inc
scas
stos
xor
in
sbb
cld
sbb
cmpsb
loope
vprotq
jp
xchg
sbbl
ret
insl
fwait
mov
out
push
or
insb
push
lods
fwait
pushf
xor
subl
in
rol
xor
fldl
js
sbb
mov
test
hlt
aas
lret
dec
ja
mov
sti
jmp
cmp
push
aam
in
pushf
lock
arpl
aas
movsb
xchg
imul
push
jg
mov
or
cmp
cmp
mov
xchg
repz
xor
jae
js
mov
cmpsl
sbb
sbb
outsl
test
xor
in
bound
mov
rcll
mov
ds
pop
dec
fisubrs
es
fs
stc
fwait
mov
or
addb
stc
xchg
dec
je
fsub
mov
test
rolb
add
jns
add
cmpsb
and
xor
js
insl
or
and
adc
and
pop
mov
sbb
fsubrl
ret
adc
push
lcall
shl
pop
nop
mov
mov
pushf
sbb
add
sahf
pop
pop
sub
leave
or
pushf
daa
cwtl
sub
pop
push
and
and
dec
lock
and
cld
je
mov
or
sub
jle
je
dec
aas
mov
stc
rol
sti
outsb
xor
test
push
mov
mov
or
shlb
sbb
mov
cltd
xor
int
push
pushw
xchg
lds
jb
push
das
and
jo
sbb
pusha
jl
xchg
jnp
push
adc
or
mov
add
fisubs
push
push
pop
xchg
iret
xor
mov
js
sub
iret
iret
inc
jnp
mov
ja
mov
aam
or
js
loopne
aaa
das
cmp
or
push
test
cmp
pop
push
out
mov
jb
push
jno
inc
sbb
sbb
out
int
stc
cltd
popa
cmpl
jns
pop
mov
pop
daa
mov
dec
cmc
mul
sub
fmul
xor
jo
jecxz
fistpll
cmc
movsl
lcall
pushl
mov
push
push
rclb
pushf
dec
mov
in
fwait
mov
xorl
in
or
sahf
jae
pusha
push
mov
fwait
dec
insl
add
mov
cwtl
sub
sbb
sub
sub
lock
enter
add
out
jecxz
test
data16
gs
sub
xorl
shr
fisttpll
aaa
push
mov
mov
add
in
jo
scas
movsb
inc
sbb
push
test
push
mov
inc
mov
mov
imul
rclb
inc
inc
and
push
loopne
enter
outsw
mov
mov
imul
jg
data16
fcmovne
bound
out
pop
cs
xchg
sbb
xchg
xor
shr
mov
js
js
jbe
push
aad
sub
mov
out
insb
mov
dec
out
pusha
mov
sub
adc
notl
sbb
rcrb
and
dec
inc
pop
mov
icebp
daa
pushf
dec
fdivl
clc
pop
mov
inc
icebp
and
adc
adc
xchg
sbb
jbe
jno
in
out
sbb
jnp
vrcpss
leave
jle
sbbb
lods
test
or
pop
loope
addr16
add
frstor
in
or
sbb
jl
mov
pop
fmul
lret
aam
ret
or
and
or
int3
gs
sub
inc
mov
lea
ficoms
pop
jo,pn
pmaxsw
dec
add
scas
pop
add
sbb
js
add
xchg
xchg
cmp
xchg
xchg
adc
cmp
mov
lea
stc
fs
fisttpl
add
idivb
and
fndisi(8087
cmp
repnz
scas
sub
lock
fildl
jo
cmp
fnstcw
jb
pop
sub
jae
ret
cmp
add
fdivs
gs
icebp
mov
aaa
xchg
les
jp
mov
mov
imul
xorb
xchg
add
test
nop
neg
out
push
int
pop
mov
std
enter
sbb
aad
xlat
add
shl
sub
sub
adc
mov
cmp
andb
jne
inc
das
and
adc
aas
enter
pushf
loope
pop
push
or
scas
aam
mov
xchg
lods
cli
sbb
into
add
test
mov
pop
or
mov
inc
lea
bswap
aad
insl
push
inc
ljmp
call
dec
outsl
push
insl
pop
or
or
jnp
loope
or
nop
addr16
test
leave
or
mov
pop
sahf
jp
lds
leave
lret
inc
push
clc
jns
jecxz
addr16
mov
out
arpl
mov
into
xchg
xor
xor
push
sbb
enter
lods
push
jo
iret
mov
cmp
cmp
adc
movsb
xor
jns
or
addr16
push
xor
mov
sub
xchg
xchg
dec
lods
pusha
add
in
jnp
pop
cmp
jbe
add
loop
lds
mov
jns
cmp
pop
adc
repnz
dec
push
cwtl
mov
es
rcrl
test
inc
xchg
and
ficompl
inc
lret
and
sub
sub
push
and
dec
cmc
and
sub
insb
dec
xchg
adc
ljmp
dec
les
push
xchg
out
inc
mov
je
push
cwtl
inc
sti
xchg
pop
mov
out
cmp
in
pop
jnp,pn
jns
inc
jmp
inc
jb
enter
pushf
and
and
cmc
push
movsb
pop
mov
sbb
push
add
mov
cmp
xchg
mov
sti
icebp
mov
insl
or
ja
js
in
iret
add
jae
fdivrl
or
lds
xor
jp
int
ret
sub
insl
push
cmp
mov
push
pusha
jmp
and
test
movsl
scas
test
cmp
fbld
or
xchg
sbb
cmc
push
push
aaa
daa
stos
mov
cli
cmp
jp
cli
jns
clc
and
andl
adc
dec
lea
jno
jecxz
inc
cltd
std
lods
out
repz
mov
sbb
mov
jns
test
jle
sub
pop
inc
enter
pop
jo
movsl
mov
adc
xchg
pop
mov
imul
fldl
jmp
mov
mov
inc
adc
mov
add
in
jle
fstps
je
in
test
clc
fs
mov
add
rorb
scas
jg
xchg
cmp
icebp
xchg
sahf
mov
dec
dec
pop
and
push
lds
mov
sahf
mov
rolb
xchg
adc
cmp
jge
pop
fdivrl
xor
and
mov
pop
pop
sahf
data16
rol
cmc
out
shll
outsb
push
push
test
push
imul
int
adc
jo
add
and
add
dec
push
jno
fcmovb
sbb
in
cmp
dec
outsl
mov
add
mov
pusha
and
pop
xchg
pop
ficomps
sbb
repz
data16
lret
fldt
push
xchg
and
fcmovb
shrl
or
jg
cld
lds
movsb
notl
imul
lds
and
jbe
lret
ret
inc
ds
movsl
jge
sub
push
jecxz
xchg
dec
sti
in
mov
out
or
insl
lret
jecxz
dec
sbb
int
add
imul
iret
mov
and
inc
sbbl
into
and
daa
or
bndldx
sbb
scas
jle
rol
sub
in
mov
push
int3
in
inc
shrl
imul
jo
mov
imul
int3
inc
outsb
cltd
add
rolb
cmp
cmp
leave
pushf
sub
inc
js
scas
push
mov
les
lods
push
lret
jge
out
dec
stos
mov
jbe
int
mov
cmc
ret
dec
and
les
mov
aad
fs
xor
jle
fnsave
call
pop
dec
dec
movsl
cmp
cmpsb
clc
gs
les
sub
aad
movsb
test
jne
imull
sub
inc
int
lahf
mov
adc
mov
pop
ficoms
ss
ss
faddl
lcall
mov
scas
aaa
jmp
and
inc
and
mov
inc
in
or
cld
dec
sbb
popa
pop
test
jg
inc
and
and
push
mov
popa
xchg
or
mov
out
nop
cwtl
xor
aad
clc
pusha
fs
add
push
cmc
xchg
lret
or
mov
subb
xchg
inc
xor
and
ret
fisubrl
jnp
dec
mov
cli
inc
add
or
xor
movl
sbb
xrelease
cmpsb
addb
dec
mov
jb
lea
adc
mov
pusha
pop
lods
fs
loope
sub
out
mov
jae
ja
push
inc
ror
lahf
testl
jmp
shl
jae
sub
cltd
jno
push
add
dec
stos
bswap
into
mov
jmp
or
ret
xor
xor
adc
jp
lret
cmpsb
mov
and
inc
dec
nop
cmc
mov
adc
mov
outsb
pop
cmc
test
cmpsl
jmp
xchg
mov
int
je
arpl
shr
jae
push
in
add
pop
sti
inc
add
jbe
out
out
stc
mov
fcmovbe
xor
ljmp
and
add
cmpsl
dec
imul
mov
mov
rcll
es
sbb
inc
or
lds
int3
and
push
and
push
cwtl
out
jnp
pop
test
stos
push
mov
loop
nop
and
addr16
xor
and
jno
out
cmp
xor
xor
rcll
decb
cltd
cmc
push
push
orl
jmp
and
dec
aam
popf
clc
daa
add
mov
insb
lret
sbb
jmp
or
inc
xchg
xchg
inc
adc
or
xchg
jge
aaa
in
mov
xchg
pop
jmp
push
ret
insl
mov
mov
icebp
dec
outsl
jae
out
lea
lahf
add
jmp
pop
sub
adc
cli
push
call
div
jp
loopne
sti
hlt
cld
cmc
repnz
jl
das
pop
inc
xchg
leave
shlb
adc
pusha
xlat
or
test
inc
cmp
pushf
sub
repnz
orl
xchg
hlt
leave
out
sub
data16
js
sahf
and
dec
enter
fstl
aad
xlat
mov
lds
daa
lods
sub
pop
les
adc
xor
lret
in
test
dec
mov
pop
jne
dec
mov
fxch
shll
ds
stos
orb
cmp
adc
inc
repz
sub
ljmp
pop
add
cli
sti
xchg
xchg
insb
xchg
popa
or
mov
and
mov
mov
and
inc
movsb
unpcklps
xchg
les
mov
dec
fnstenv
sbb
sbbb
rorl
out
mov
mov
mov
arpl
out
inc
js
cmp
cmp
push
xor
testb
sub
mov
xchg
cli
jecxz
pop
jge
popf
and
mov
dec
fst
push
xchg
fwait
push
xchg
xchg
jno
and
add
ljmp
pop
pusha
shrb
jmp
add
sbb
jbe
repz
in
jecxz
mov
pop
push
scas
xor
add
dec
loop
jo
and
addr16
out
dec
fsub
imul
loope
xchg
sub
outsl
xchg
sbb
iret
cmp
pop
jp
pop
pop
icebp
cmp
jl
xor
scas
popl
lcall
pop
cmpsl
add
fbld
sbb
pop
push
push
jmp
inc
cmp
pop
add
popa
in
mov
in
jmp
ja
mov
pusha
push
pop
cld
mov
pop
add
sbb
jno
mov
scas
push
xor
lock
jge
fildl
mov
jb
inc
pop
std
add
cmp
jae
sti
rorl
mov
mov
xchg
mov
inc
or
cmp
pop
stc
aaa
int3
sub
in
pop
ss
xorb
and
dec
or
cmp
cmpsb
movsb
or
cmp
inc
pop
scas
jmp
push
lea
mov
sbb
sbb
push
adc
and
int
dec
or
mov
push
sbb
repnz
or
mov
lock
scas
fdivl
push
cli
xor
mov
je
loop
in
dec
popf
icebp
inc
leave
push
jmp
sub
or
sbb
data16
push
sub
loope
clc
lods
sar
inc
fldt
or
sub
lea
loop
in
fcmovu
fsubrl
bound
jo
aaa
and
outsl
xchg
xchg
pop
scas
adcl
pushf
jbe
jno
add
lahf
xchg
aas
je
push
inc
in
xchg
mov
xchg
and
mov
xchg
jbe
arpl
cmp
xchg
push
testl
mov
sarb
hlt
push
jo
inc
sbb
xchg
cmp
mov
inc
mov
jbe
xor
or
mov
jb
sti
ss
xchg
mov
push
or
push
xchg
cs
dec
xor
jno
xlat
daa
and
inc
frstor
test
push
mov
mov
sbbl
dec
lock
daa
mov
or
pop
es
push
addr16
cmc
jnp
jbe
jecxz
sbb
insb
xchg
loop
jle
xchg
ss
loope
insl
push
mov
mov
lods
das
pop
push
mov
test
jo
clc
lock
jae
jle
sbb
mov
inc
jmp
mov
xchg
mov
pop
data16
iret
xor
or
push
jg
sbb
inc
movl
mov
xor
xor
push
add
imul
notb
and
mov
inc
push
pop
fidivrl
lds
shl
pop
add
push
sub
stos
xor
or
jb
push
cld
imul
add
pop
pop
xor
mov
pop
insb
push
cmpsl
adc
dec
pop
add
sub
and
pushf
sbb
pop
pop
mov
add
cwtl
or
addr16
test
dec
dec
push
and
push
les
sbb
pop
mov
movsl
sti
rorb
shlb
data16
xorb
push
pop
repnz
mov
enter
or
int
and
pop
sbb
ljmp
cli
repnz
or
or
inc
outsb
sub
pop
insb
push
jbe
adc
mov
lods
adc
test
cltd
jns
ret
mov
sbb
and
cmpsl
xor
mov
xchg
cmp
cmpsb
mov
jmp
jge
xchg
xchg
das
cmc
jecxz
fcoml
sbb
iret
ret
inc
sub
mov
scas
mov
cmp
add
and
cmp
int
sbb
daa
push
pusha
jae
pop
cmp
roll
push
add
mov
or
inc
roll
and
xchg
dec
push
enter
in
mov
clc
pop
outsl
insl
scas
popf
ja
movsl
out
inc
cmc
icebp
scas
repnz
sbb
xchg
inc
out
fcmovu
mov
fistps
mov
outsl
and
mov
xorl
mov
inc
mov
inc
cld
push
and
xor
push
fucomp
hlt
in
inc
xor
add
dec
js
stc
jbe
cld
jns
adc
stos
mov
cmp
add
int
leave
xor
lahf
sbb
adcl
cmpsl
cld
leave
push
jno
repnz
loopne
int3
ja
push
stos
mov
into
cwtl
sarl
rol
push
imul
out
xor
xchg
pop
aas
in
test
cmp
jge
jmp
out
pop
pusha
dec
xchg
push
mov
loopne
fldcw
sbb
popa
ret
les
jmp
stos
loope
lods
push
aaa
pushf
in
cmp
cmp
adc
sub
mov
je
ret
imul
jmp
aad
ds
dec
mov
ret
pusha
pop
jle
fwait
imul
xor
inc
fsub
inc
add
mov
imul
shrb
ret
mov
sub
cmpsl
add
loope
scas
aam
pop
jecxz
cmp
push
pushf
movsb
aaa
dec
inc
aas
inc
mov
loope
das
sbb
mov
mulb
add
loop
lods
data16
mov
pop
jmp
jbe
data16
mov
das
das
lahf
scas
mov
in
pop
and
mulb
sahf
jp
in
in
movsb
mov
xor
cwtl
data16
mov
mov
dec
push
ss
add
and
push
test
push
fdivrs
push
lock
sub
or
push
sbbl
jmp
jnp
ljmp
mov
fistps
loope
bound
push
push
add
sbb
cwtl
inc
push
loopne
sbb
ficomps
adc
fiadds
xchg
jb
fsubrs
imul
jne
sti
inc
inc
push
or
sbb
out
sub
mov
popa
inc
adcl
lahf
push
jg
jg
cmpsb
das
faddp
push
jns
aam
pop
or
sub
out
and
push
in
mov
mov
loopne
enter
jno
mov
or
shll
pop
rcr
shll
fldt
push
pop
pop
dec
out
or
and
out
xchg
aam
adc
push
fiaddl
repz
xchg
lcall
sbb
xchg
push
jae
pop
mull
jae
sbb
inc
cmp
out
popf
out
mov
inc
aad
mov
les
imul
testl
mov
aam
xchg
bound
cltd
adc
popa
sub
int
dec
insl
lcall
scas
xor
jns
aaa
scas
inc
mov
sub
leave
sbb
pop
mov
popl
cmc
leave
xor
cli
jg
mov
data16
jo
xchg
int3
aaa
and
bound
ds
jmp
mov
push
mov
cltd
scas
jg
xor
and
outsl
xor
jecxz
jns
aaa
dec
pop
in
arpl
pusha
fadds
pop
xor
mov
pop
jge
xchg
xchg
inc
pop
adcl
cmc
sbb
fisubl
jg,pn
push
imul
dec
loope
sbb
jmp
ds
xor
jae
cwtl
and
lods
test
movsb
aad
xor
iret
fidivrl
lea
push
and
xchg
add
outsl
push
and
sarb
iret
stc
rorb
pop
mov
dec
mov
pop
out
push
jl
fwait
push
mov
or
pop
ds
ljmp
inc
pop
add
jle
sarl
jns
jbe
cmp
pop
mov
out
sti
xor
adc
inc
inc
nop
outsl
movsl
fdivs
or
enter
out
arpl
data16
push
sbb
sahf
jnp
push
inc
insl
xchg
pop
cwtl
pop
sub
pop
dec
rcr
ja
dec
and
fisttpl
push
fnsave
sbbl
pop
xorl
fists
jecxz
or
pushf
lahf
in
cmp
iret
push
xchg
popa
mov
jne
xchg
and
mov
les
push
je
popf
mov
nop
jbe
ja
jnp
in
push
mov
dec
lret
cmp
pop
add
nop
mov
add
aad
jmp
repz
pop
mov
faddp
adc
inc
cpuid
mov
mov
push
pop
imul
leave
xor
aaa
ljmp
add
lea
repz
and
out
rcrl
xchg
aaa
and
call
imul
idiv
jnp
dec
pop
push
gs
dec
mov
test
and
cmp
sbb
or
sbb
sbbl
push
xchg
stc
iret
stos
jnp
ffreep
roll
fisubrl
or
inc
xchg
xchg
xor
mov
cmpb
movsl
xchg
sbb
sub
pop
sbbb
in
sbb
xlat
jmp
xlat
scas
sub
stc
inc
push
arpl
not
adc
orl
mov
andl
fs
sbb
mov
jp
xlat
rol
jmp
dec
xor
push
mov
mov
mov
sub
sub
jmp
pushf
aad
sub
dec
xor
in
mov
loope
jno
inc
push
push
sbb
inc
sub
fs
push
hlt
data16
jmp
pop
insb
mov
call
inc
jno
push
pop
cmp
mov
int
mov
scas
pop
stc
loopw
fs
adc
das
and
adc
ss
insw
cs
clc
xor
inc
lock
loopne
xor
cmp
sarb
mov
lea
xlat
std
xchg
dec
shr
jns
inc
and
xchg
in
and
cwtl
test
pop
adc
mov
or
adc
inc
add
ret
adcl
inc
jge
cmp
fistl
push
inc
sub
xchg
andb
fwait
xor
jg
pavgb
in
push
pop
in
or
xchg
push
add
cld
popa
aas
lods
inc
push
loope
ret
lods
fstpt
jmp
jno
inc
cmp
mov
dec
or
mov
pop
adc
fbstp
jg
decl
pop
std
add
xchg
xor
mov
loope
mov
mov
push
cs
adc
jle
rolb
icebp
fbstp
xchg
jmp
and
push
lcall
mov
out
mov
ret
cs
mov
int3
cmpsb
cmp
and
clc
cli
xchg
xor
lock
fwait
loope
pusha
pop
push
iret
mov
and
adcb
scas
loopne
xlat
pusha
or
data16
outsb
mov
xor
call
sbb
into
and
sbbl
rcl
aad
scas
mov
push
leave
pop
jp
adc
jl
popa
shlb
stc
push
ljmp
outsb
mov
add
jge
pop
insl
aam
push
outsb
mov
jmp
iret
adc
popa
andb
sbb
push
dec
dec
in
mov
lret
or
dec
and
out
pusha
rcrb
mov
bound
in
xchg
lret
pushf
sub
int3
fimuls
pop
shl
mov
xchg
aad
push
popa
inc
shr
loop
frstor
test
and
lods
inc
pop
js
aam
xchg
fwait
jg
gs
ds
xor
test
adc
lods
jbe
adcb
test
xchg
xlat
jl
mov
mov
lock
mov
testl
push
cs
pop
int
std
loope
pop
mov
scas
lahf
push
pop
movsb
cmpsl
aad
adc
push
jbe
ror
popf
dec
push
push
sub
ja
add
sarb
out
xlat
mov
popa
push
or
cmpsl
vaddps
and
jae
scas
aam
or
loope
push
fcompl
js
mov
mov
inc
pop
pop
divb
ret
out
mov
mov
lret
jb
inc
testl
rcl
add
lock
in
add
cmp
shll
ljmp
leave
xor
xchg
push
das
stc
addr16
stos
arpl
push
pop
outsb
popf
sub
cld
inc
or
cmc
and
cmp
ss
inc
fs
inc
mov
imul
outsl
jmp
test
das
xor
jl
sub
fs
xchg
or
jae
jo
into
je
movsl
sub
out
mov
std
nop
sub
xchg
xor
jae
add
adc
pusha
pushf
imul
sub
nop
shl
push
jge
cmp
push
inc
out
or
sbb
push
pop
addb
negb
popf
pop
mov
fildll
int3
das
leave
xchg
mov
repnz
cmp
and
aam
loopne
or
leave
leave
sbb
mov
xchg
push
xchg
mov
out
push
xchg
fs
jp
fadds
pop
push
adc
sbb
add
push
inc
jb
cmp
jg
and
dec
fcmove
inc
dec
mov
lods
xor
xor
out
cld
cltd
xchg
jg
lock
xchg
add
movsl
nop
out
add
arpl
or
push
scas
inc
xor
sbb
push
push
movsl
cmp
add
or
sbb
cltd
daa
pop
sarl
test
jae
mov
sarl
in
fs
ss
mov
push
xor
jns
fucom
adc
or
push
mov
sbb
pop
xor
pop
cmpsl
fs
and
mov
outsb
outsb
aam
in
mov
pop
mov
fidivl
rolb
push
xor
popf
dec
lods
popa
mov
mov
mulb
dec
aad
cmp
test
xchg
mov
hlt
push
mov
pop
add
mov
xor
xor
mov
lahf
sbb
ss
in
cli
or
into
out
adc
or
mov
rol
push
int
jnp
dec
das
ja
mov
shlb
movsl
add
xor
rcl
fmuls
ja
mov
jbe
xor
fisttpll
jns
pop
sub
movl
pop
andb
xor
inc
shlb
int
in
cmp
jmp
push
push
inc
popa
push
test
jmp
pop
jl
push
mov
xor
aam
sbbl
scas
lret
add
jne
mov
xor
xor
jecxz
sahf
call
mov
add
or
cmp
ficompl
or
subl
mov
aas
pushf
pop
add
sbb
lcall
test
cmc
cwtl
mov
pop
es
insl
ja
xchg
insl
mov
sub
xchg
scas
push
js
adc
mov
dec
xchg
mov
cli
sar
ret
cld
mov
icebp
xchg
movsl
xchg
jle
lods
ret
fidivrl
decb
sarl
push
rcll
pop
fistps
out
adc
pop
cli
fnstsw
pusha
inc
push
mov
cs
cmc
enter
scas
mov
and
lods
add
lds
dec
mov
jg
or
movsb
add
imul
out
dec
aas
xchg
popf
lods
add
sbb
lea
orb
jmp
jae
shrb
shl
sub
cs
ja
dec
dec
jb
jns
rcrl
jo
mov
pop
adc
inc
mov
bound
scas
push
and
push
pushf
sti
dec
pop
inc
add
fucomip
mov
dec
stc
aam
ss
push
insb
outsl
jno
stos
aas
cmp
fs
test
jno
mov
xor
push
xor
icebp
xchg
test
sub
xchg
adc
and
mov
fidivrs
hlt
jo
test
xor
movb
or
outsl
xchg
pusha
xchg
mov
and
pop
mov
cmp
js
add
cltd
popa
pop
into
jne
repz
xchg
sbb
movsb
xchg
rolb
xor
xchg
add
lock
cmp
sub
ret
xchg
into
jge
aas
sub
push
jl
sub
cmc
int3
inc
xchg
xor
enter
cmpsb
dec
or
shr
sub
popf
sbbb
loop
cmp
cltd
aaa
xchg
xchg
inc
sub
push
push
mov
sbb
push
out
dec
mov
or
xchg
imul
jecxz
fidivrs
stos
add
aad
inc
js
insl
sub
stc
rorl
je
in
ljmp
daa
insb
xchg
nop
mov
and
xorl
pop
out
fistl
cltd
ret
sbb
push
pop
rol
js
pop
push
std
es
add
stc
shr
inc
mov
xorb
test
lds
mov
push
adc
mov
mov
ss
adc
sbb
mov
push
xchg
mov
in
pop
aaa
mov
scas
pop
icebp
cmp
insl
or
dec
scas
cli
popa
xchg
hlt
mov
imul
push
xchg
mov
call
ds
pop
daa
arpl
rorb
jbe
pop
lahf
push
loop
andnps
pop
xchg
xchg
mov
cld
clc
push
cld
sbb
pop
lret
add
pop
sub
iret
pop
fidivrl
scas
xor
jge
leave
xchg
add
mov
sbb
push
data16
jns
cltd
mov
sbb
inc
lret
mov
dec
or
mov
mov
sub
loop
sub
jp
mov
inc
mov
mov
cmpsb
jp
push
sbb
mov
xor
hlt
xchg
add
sbb
xor
xchg
xor
mov
jno
ffreep
cmp
inc
mov
outsb
aas
jecxz
mov
mov
mov
xchg
ss
mov
mov
push
pusha
adc
dec
mov
lret
arpl
popf
stc
imul
xorl
add
hlt
stos
xchg
xor
in
push
rclb
jno
vrcp14ps
das
and
imull
push
lea
in
jp
pop
mov
stos
xchg
sub
pop
dec
jp
sub
cmp
cmp
cli
scas
std
je
in
das
mov
bnd
gs
insl
shlb
and
sub
mov
dec
mov
mov
loope
mov
fs
pop
jae
ss
and
inc
inc
loope
clc
sub
and
xchg
xchg
mov
ja
loopne
cs
jl
dec
inc
cmp
mov
imul
lea
out
cltd
in
sub
jl
in
mov
aas
out
addl
cwtl
dec
sti
fs
pop
pop
or
cld
fcompl
cmp
lret
or
sahf
adc
lds
test
pop
fucomi
xchg
pop
and
lea
jns
cwtl
or
enter
push
jnp
sbb
add
pop
test
and
jmp
cs
sti
loope
add
jae
pop
jle
mov
daa
push
rolb
mov
ret
sahf
das
jns
xchg
jne
cmp
cmp
pop
inc
pop
inc
add
mov
pop
icebp
stos
pusha
and
movsl
xlat
in
gs
int
aad
sbb
std
cmp
cmc
mov
xor
push
xchg
mov
xbegin
les
mov
adcb
adc
cmp
and
xchg
imul
and
fbstp
jo
xchg
lfs
ljmp
test
data16
sbb
fisubl
repnz
inc
rcrl
or
addr16
fmul
pop
loop
add
xor
movsb
test
xor
jge
jl
movsb
mov
dec
fcoml
mov
lcall
xchg
inc
roll
es
mov
sbb
ret
mov
push
in
inc
push
enter
fadd
call
mov
in
push
shrb
ret
pop
movsl
std
adc
pop
pop
xor
sub
repz
lods
sub
inc
ss
ret
pushf
hlt
push
pop
add
push
sub
xchg
mov
inc
int
jns
sarb
jb
jo
stc
mov
in
mov
and
test
mov
out
jle
inc
and
out
loopne
dec
push
add
xor
xchg
arpl
shrb
pop
xchg
data16
movsl
cmpsl
scas
pop
or
insl
mov
push
call
insb
jns
push
adc
inc
ljmp
arpl
clc
cmp
inc
int
loopne
sub
add
int
ja
pop
call
mov
les
jae
aad
mov
cltd
out
add
in
clc
and
or
cmp
fiadds
movsl
imul
jns
test
dec
pop
xchg
cltd
or
stos
fsubrl
ljmp
add
or
int
ljmp
cmp
pop
adc
es
pop
test
dec
or
xchg
mov
push
stc
ds
mov
loopne
mov
les
fstpt
ret
lahf
cmp
push
test
mov
xchg
pop
in
inc
iret
es
ret
cli
mov
cmp
mov
xchg
ficoml
pop
lahf
out
push
hlt
icebp
in
jle
mov
dec
fistpll
fwait
pop
cmpsl
mov
test
imul
ljmp
cld
and
adc
out
cmp
mov
or
xchg
jae
add
iret
ret
cmp
out
rcrb
das
push
out
lret
pop
xchg
std
jno
outsb
lahf
sbb
mov
add
cmp
stos
mov
sbb
and
enter
sbb
popa
arpl
inc
add
loope
das
jg
sbb
sub
inc
lods
lret
loopne
scas
adc
sub
cmc
int3
fwait
test
jge
mov
sbb
icebp
sahf
push
sub
int3
cmp
push
jo
mov
adc
pop
inc
mov
inc
and
push
and
cmp
mov
jbe
fdivrs
sbb
mov
cs
idivb
fiaddl
repnz
leave
and
mov
add
clc
fidivl
jno
dec
icebp
test
loop
jne
jbe
les
xchg
cmp
xchg
mov
jle
dec
mov
push
rolb
mov
sbb
sub
dec
das
mov
pop
std
xchg
mov
sahf
mov
ret
jb
pop
andb
repnz
mov
and
pop
movsb
cmpsl
inc
or
pop
std
repnz
or
mov
xchg
loop
and
and
lcall
mov
push
pushf
into
cmp
xchg
jns
mov
push
negb
mov
ds
sbb
xor
push
js
ret
clc
push
lcall
pop
mov
and
test
popf
ja
sub
and
test
test
push
push
scas
stos
call
scas
stos
ds
in
adc
ficompl
in
mov
push
out
lret
add
mov
or
jbe
or
and
lret
mov
xor
push
scas
dec
filds
cmp
int3
decb
cmpb
inc
xchg
divl
inc
leave
mov
sbb
push
subl
je
xchg
iret
icebp
push
add
movl
repz
mov
fyl2x
test
aas
adc
sahf
test
cs
xchg
sbb
pop
and
sbb
push
stos
jmp
push
dec
lods
hlt
mov
sarb
cmp
bnd
out
fiaddl
fwait
jne
cmp
into
out
xchg
xor
dec
adc
jne
es
cwtl
add
jno
or
movsl
rcr
push
add
inc
adc
inc
xchg
or
popf
ljmp
push
enter
scas
mov
add
sub
xchg
xchg
inc
mov
outsl
lock
xchg
movsb
and
stos
mov
loopne
test
jmp
lds
stos
insb
pop
inc
lret
jl
fcmovne
repnz
mov
test
pushf
mov
add
incb
xorb
pop
push
xor
in
push
xchg
push
stos
mov
jmp
pop
imul
inc
mov
push
mov
test
lret
dec
aaa
and
lret
jg
inc
adc
in
aas
inc
int3
jno
frstor
insb
jbe
xor
rcl
test
test
and
mov
push
mov
pushf
jb
ss
int
lcall
adc
js
mov
sub
out
cmp
jecxz
cld
cmpsb
outsb
push
shll
iret
popa
sbb
je
xchg
shll
repz
clc
sub
lods
js
fwait
push
sti
test
les
dec
push
std
jnp
xchg
mov
enter
sbb
repnz
xor
lret
push
dec
and
fwait
sti
ljmp
aaa
mov
es
imul
and
je
jnp
test
xor
push
dec
push
pop
popf
out
pop
pop
xor
cmp
int
or
or
dec
pop
lret
andb
xlat
movsl
xchg
jbe
mov
xchg
addl
scas
lock
jo
inc
fcoml
xchg
pop
leave
fdivs
in
jmp
clc
cltd
xchg
xor
pand
mov
test
mov
lods
icebp
js
adc
fstp
adc
or
das
inc
movsl
imul
sahf
pop
andl
cmpsb
cmp
arpl
ficomps
and
int3
enter
push
push
shl
repnz
jle
jmp
outsl
cmp
pushf
add
pop
push
adc
sub
pop
fistl
dec
aad
jno
pop
into
ljmp
mov
out
mov
fsub
cld
add
sbb
or
sbb
push
bound
sub
or
adc
add
popa
jb
rcrl
sbb
aas
test
fmull
shlb
out
jmp
rol
xor
xchg
add
sbb
es
fldt
scas
mov
test
and
dec
rcrb
jp
push
aaa
lret
and
xor
mov
scas
inc
push
fiaddl
dec
ja
push
mov
jp
mov
test
mov
adc
addr16
xor
fmull
into
sub
jno
loopne
sti
mov
sub
and
mov
cmp
cld
push
imull
dec
stos
jl
or
loop
lds
inc
push
int3
aaa
ljmp
or
adc
pop
mov
jl
test
out
adc
jecxz
cmpsb
push
lods
filds
sub
enter
xchg
mov
call
pushf
add
loop
mov
cli
pusha
pop
lock
test
pusha
imulb
inc
test
push
xor
repz
and
stos
pop
mov
test
push
cwtl
arpl
mov
js
jecxz
push
js
into
cli
dec
xor
inc
cmp
rcrl
jns
pop
cmp
jp
imul
std
jno
jbe
inc
fimuls
mulb
mov
pusha
jns
cmpl
sub
push
lret
xchg
jg
ljmp
cmove
repnz
in
aas
arpl
and
inc
xchg
pop
xchg
push
aaa
addr16
push
jns
ficomps
or
jb
lea
sub
js
xor
icebp
cmp
pusha
dec
pop
xchg
xor
mov
sub
push
sub
gs
push
aaa
inc
sub
adc
andb
inc
dec
mov
add
popa
cld
pop
imul
mov
sub
jl
insb
mov
mov
out
std
pop
movsb
mov
lret
es
sub
fisttps
and
pop
jae
pop
adc
pop
outsb
mov
orb
lcall
into
cmp
push
ss
xchg
xchg
ja
mov
or
inc
jae
out
push
xor
and
cmp
dec
xchg
dec
test
xor
mov
shrb
int
scas
xor
pop
or
xor
dec
fisttpll
cmp
cmc
in
pop
leave
mov
mov
jmp
or
sub
push
adc
adc
outsl
aas
jno
mov
mov
movl
pop
aas
pop
pop
pop
and
movsl
inc
jae
data16
fucomi
sub
ret
cmp
lods
aam
jns
adc
pushf
test
ret
fnstsw
shl
or
sub
movb
imul
je
cwtl
mov
push
mov
sub
xchg
cwtl
testb
jle
adc
and
cmp
dec
inc
scas
mov
add
xlat
lret
jnp
sub
and
dec
imul
scas
sarb
mov
pop
jmp
xor
add
jbe
pusha
inc
adc
insl
push
xor
push
pop
andb
cmpsb
rorl
pushf
int3
test
lea
mov
insl
imul
adcb
or
mov
pusha
ficomps
fwait
lea
in
adc
ret
add
sub
mov
xor
mov
pop
int3
lods
je
inc
xchg
add
aaa
add
aaa
in
fs
add
add
or
mov
mov
push
sbb
mov
sbbl
outsb
or
cs
adc
leave
mov
adc
gs
out
pop
int
div
iret
in
push
dec
pop
int
ljmp
sub
or
stos
push
and
lods
fwait
adc
push
ficomps
xchg
ret
rcrb
pop
sub
sbb
mov
inc
dec
cmp
mov
xor
sar
cmp
sub
in
mov
imul
and
out
inc
or
push
pop
dec
push
pop
sub
pop
xor
outsb
xor
xlat
insl
mov
jle
mov
pop
sub
xchg
insl
xlat
dec
sbb
jno
dec
inc
pop
dec
jmp
dec
sub
inc
pop
sbb
ffree
orb
test
daa
int3
call
or
lods
pop
adc
hlt
mov
dec
pop
insb
in
cwtl
test
in
mov
gs
jno
pop
push
jge
outsb
stos
loope
mov
jle
jb
mov
inc
cmp
mov
inc
adc
adc
in
push
arpl
mov
sti
push
mov
rorb
dec
addl
cmp
dec
mov
sub
js
add
movsb
and
mov
push
pop
stc
std
repz
lret
mov
outsl
and
in
imull
mov
ja
aas
pushf
cmp
inc
loope
mov
dec
mov
cmp
mov
adc
lock
and
xchg
mov
daa
ss
mov
mov
andb
cmc
daa
cld
movsl
xor
fs
lcall
mov
mov
enter
cmp
pop
sub
in
arpl
mov
shr
jle
in
xchg
js
pop
insb
xor
imulb
mov
insb
int3
test
jl
inc
movsl
sbb
add
int3
cmp
lods
outsb
adc
mov
imul
inc
lods
or
mov
mov
scas
aaa
or
shrl
aas
adc
cmp
push
outsb
adc
aam
stos
or
sbb
and
xlat
pushf
jmp
xchg
fsubs
push
pop
adc
fistl
inc
aad
les
dec
in
repnz
mov
neg
shlb
xchg
cmp
jp
iret
aas
clc
mov
jp
sub
call
adc
lods
loopne
mov
shl
pop
cwtl
pop
sub
push
pop
aad
or
jle
xchg
aad
movd
mov
dec
movsl
lcall
inc
add
cmp
int
xchg
cmp
mov
fwait
mov
rol
mov
dec
loope
data16
aam
test
insl
or
inc
leave
scas
pushf
or
cs
fstl
ret
addr16
cmp
dec
ja
mov
xor
fidivl
lock
sbb
loop
fwait
xchg
sbb
adc
pop
adc
and
dec
test
stos
cmp
pushl
es
sbb
sub
cmp
cli
mov
mov
xor
test
test
fstps
repz
or
mov
divl
repz
out
push
pop
mov
xchg
test
cmpl
fdivrs
fstpt
push
jl
mov
cmp
or
jmp
mov
inc
mov
xchg
push
stos
inc
and
pop
inc
add
scas
inc
lret
imul
je
stos
repnz
sbb
test
push
jns
adc
xchg
adc
inc
sbb
and
cmp
and
fadds
ds
push
adc
loope
fdivl
mov
pop
iret
mov
push
out
adc
and
outsl
fs
nopl
mov
mov
mov
and
add
mov
aaa
lods
adc
scas
jo
jge
sbb
clc
movsl
dec
jg
jecxz
imul
shr
outsb
inc
push
jge
dec
repnz
xor
xor
sbb
cltd
jae
loope
sarl
mov
mov
mov
movsl
pop
xor
in
stos
xchg
or
js
gs
push
cmp
push
movsl
xor
push
mov
scas
xor
mov
xor
clc
sub
repnz
out
or
xor
mov
testb
mov
add
imul
dec
imul
or
ja
push
gs
cmc
mov
std
cmp
mov
out
bound
pop
outsb
lcall
cmp
adc
pushw
sahf
or
sbb
push
xchg
sbb
lock
notb
movsb
ficomps
dec
lcall
ret
xchg
pop
pop
cli
pmaddwd
cmp
inc
xor
aas
call
inc
lea
push
incb
jle
mov
ficoms
pop
and
push
in
xchg
jmp
arpl
inc
repnz
repnz
inc
cwtl
add
or
add
leave
and
dec
push
lea
sub
ror
inc
pop
inc
fs
jp
sbb
sub
push
push
popa
xor
enter
enter
cmp
push
add
cmp
mov
push
ja
cltd
push
xor
sti
pop
fcom
mov
push
clc
in
lds
dec
inc
fildl
aam
test
lret
ja
cmp
fsubs
in
rcll
test
lcall
mov
push
cmpsb
mov
add
gs
xchg
jnp
mov
jns
repz
cmp
dec
pop
mov
mov
mov
in
xchg
std
shl
push
stos
imull
mov
jnp
mov
stos
bound
mov
inc
xchg
cmc
cmc
cmp
out
push
sbb
mov
lcall
mov
ljmp
xchg
fst
mov
ljmp
push
fnstcw
test
pop
push
mov
mov
mov
push
jbe
push
rol
mov
imulb
ficoml
xchg
mov
xor
insb
xchg
stos
sub
daa
or
out
outsl
lahf
pop
adc
dec
push
idivl
aam
iret
inc
movsl
mov
cmp
fcmovnbe
lcall
add
stos
inc
jl
cli
pop
mov
in
int3
pop
cwtl
idivl
jns
aam
xor
fwait
iret
test
addr16
dec
add
mov
jl
lahf
jae
out
test
dec
add
out
cmp
mov
cmc
jmp
sub
xchg
mov
xor
lret
ret
dec
adc
mov
mov
fwait
xchg
mov
lods
into
aam
cmpl
push
bound
mov
mov
mov
cmp
aaa
imul
push
sub
loopne
dec
jne
ret
xchg
sbb
rorl
adc
and
xor
push
rcrl
dec
push
ja
and
pop
push
cld
pop
xor
pop
fucomp
inc
dec
jecxz
sbb
cmp
cwtl
clc
mov
fistpll
adc
outsb
mov
sbb
push
popf
push
das
ret
pop
stos
xchg
jmp
cld
ret
adc
inc
cld
das
stc
jo
inc
mov
and
les
aas
aas
sub
mov
push
mov
mov
pop
inc
cwtl
cmpsl
outsb
jge
sub
rcrb
fmul
clc
not
mov
ljmp
pop
xor
fistps
jmp
adc
dec
pop
cmp
mov
adc
inc
test
jl
hlt
pop
sbb
stc
sahf
inc
aad
sub
ret
lret
fs
lock
nop
ret
pop
mov
out
call
leave
inc
mov
fwait
daa
xchg
or
pop
loope
push
ret
mov
mov
push
std
test
inc
jle
or
dec
mov
xor
sub
repnz
outsl
fcmovb
scas
xchg
lock
cmp
and
mov
imul
mov
fisubs
inc
popl
test
or
mov
sub
xor
rolb
mov
pop
xchg
orl
cmpsl
adc
incl
imull
jecxz
sbb
dec
cld
idiv
mull
dec
sbb
into
sbbl
dec
mov
fsubr
add
cmpsl
nop
adc
dec
add
xorl
inc
dec
jmp
addr16
adcl
inc
mov
xor
push
pop
dec
mov
lret
sub
sub
scas
ljmp
xchg
inc
jo
mov
into
mov
stc
outsl
cmp
ret
adc
inc
pop
dec
mov
test
testb
addr16
cmova
les
xchg
in
and
sti
shll
push
popf
int
xchg
ret
mov
mov
inc
or
jle
cld
jmp
inc
mov
shrb
mov
in
cli
inc
lods
sub
push
leave
adc
add
nop
pushf
pop
aaa
add
mov
xchg
pop
ficoml
mov
incl
ds
les
mov
dec
bound
pop
mov
leave
and
imul
in
mov
inc
or
add
adc
pop
jg
orb
dec
cmp
xchg
ljmp
dec
test
jbe
push
jl
sub
in
xor
pop
and
out
nop
cmp
std
repz
add
jmp
cmp
outsl
pop
mov
stos
addr16
dec
push
cmp
leave
xchg
rcl
mov
xlat
pop
stc
inc
mov
add
mov
mov
call
add
sbb
inc
push
cwtl
adc
mov
cmp
cmc
mov
adc
sti
push
push
je
sbb
cmp
xor
in
xor
fs
fistpll
xor
or
sti
xor
xor
sbb
xor
mov
mov
xchg
xchg
sbb
pusha
int
data16
xchg
cmp
out
int3
jo
adc
jno
ret
xor
call
add
fstpt
cs
sbb
and
mov
mov
add
les
shrl
dec
and
and
push
aad
sbb
sbb
mov
ljmp
int
mov
dec
inc
and
push
ljmp
add
sbb
mov
jg
clc
inc
dec
adc
pop
jl
lods
lcall
mov
inc
or
out
dec
sub
push
ljmp
mov
rolb
pop
sub
cs
mov
sarb
stos
sbb
sub
mov
sbb
sub
nop
cmp
mov
scas
andb
xor
fists
movsl
iret
sub
mov
shll
int3
fs
test
and
pop
add
mov
add
xchg
cmp
in
out
lret
mov
push
jp
bswap
in
fsubrs
sub
jp
cmpsl
push
aas
mov
sti
inc
sub
mov
push
lcall
popl
std
adc
filds
jo
add
gs
push
add
loop
lods
lcall
test
outsb
push
int3
daa
jp
loope
fbld
aam
mov
pop
in
mov
adc
inc
pop
addr16
xchg
or
dec
sbb
dec
cmpsl
in
mov
pop
rcrl
call
dec
loop
out
sti
pop
out
js
sub
push
mov
inc
sub
adc
and
icebp
or
lret
cmp
arpl
cmc
jae
loope
dec
push
push
sbb
xchg
mov
leavew
push
pop
mov
push
cmp
mov
pop
lret
jb
add
adc
cmc
popa
jns
int
outsb
xchg
sti
pop
push
adc
mov
ror
pop
sahf
mov
and
pop
repnz
jo
scas
dec
push
popa
mov
or
cwtl
jle
loopne
repz
das
aad
ja
xchg
ds
sub
imul
push
inc
jl
ljmp
sub
fwait
icebp
sbb
scas
into
in
insl
sbb
cmpsb
mov
jecxz
bnd
lret
inc
js
stos
xchg
push
dec
testb
or
out
into
stos
cs
push
loope
mov
mov
mov
out
mov
imul
dec
loopne
arpl
mov
push
pop
or
imul
mov
cmpsl
jl
inc
mov
xchg
push
test
test
rcll
stc
addr16
lret
packsswb
jg
clc
sbb
add
loop
mov
and
or
addb
fcomps
inc
xchg
dec
insl
xor
es
scas
sti
sete
jmp
or
out
mov
mov
rolb
insl
les
rolb
push
aas
cmpsl
cs
in
pop
fwait
shlb
test
jge
push
jnp
mov
testb
stos
add
inc
mov
sarb
movsl
or
movsb
push
mov
xchg
pushf
out
push
inc
dec
jmp
mov
outsb
mov
and
cwtl
cld
dec
cwtl
adcb
stc
nop
inc
ljmp
es
cwtl
mov
or
loopne
cmp
cmp
es
std
push
fists
stos
sahf
jg
cmp
outsb
pop
pop
add
and
in
jecxz
jnp
push
xchg
outsb
in
mov
cmp
call
bound
mov
and
mov
ficompl
jb
imul
dec
sub
or
pop
lock
sub
inc
mov
pop
mov
stos
cwtl
aad
insl
lret
and
test
push
pusha
bound
jecxz
jnp
inc
popa
data16
mov
dec
sub
clc
dec
clc
icebp
sbbl
rcrb
test
out
xor
aam
adc
movsb
negb
dec
or
xor
lahf
cltd
xor
idivl
xchg
mov
cwtl
sub
mov
adc
rclb
push
addr16
lret
adc
jecxz
mov
mov
sub
aas
inc
gs
icebp
and
je
cmpsl
nop
inc
scas
inc
xor
out
or
jmp
mov
mov
mov
xor
mov
lret
mov
lahf
scas
idiv
push
mov
dec
mov
movsb
cmc
add
adc
mov
jmp
rcll
icebp
repz
divl
inc
sub
jp
or
push
leave
pop
pop
call
and
roll
nop
jae
adc
stc
imul
push
scas
lcall
out
adc
les
push
cmc
cld
dec
push
imul
les
sub
movsl
pop
test
repnz
adc
lahf
mov
pop
repz
ret
movsb
jecxz
loop
fisubl
arpl
pushf
ljmp
sub
sub
addl
mov
add
hlt
cwtl
xor
and
jg
jmp
icebp
lret
ja
or
nop
leave
cmp
stos
into
jl
xchg
pop
push
jmp
add
jae
int3
icebp
insl
rolb
mov
xorb
add
pop
jecxz
fcmovnbe
test
fnsave
sti
add
mov
orl
jl
inc
inc
fucomi
ds
out
mov
fmul
push
push
adc
mov
dec
adc
inc
mov
rorb
dec
icebp
dec
dec
sub
sbb
mov
lret
mov
pop
cmc
shrb
adc
out
das
pop
arpl
sbb
mov
dec
xor
push
ja
push
shll
adc
shrl
lahf
cmc
daa
jnp
loop
sub
subl
jp
ljmp
lock
cmp
jne
adc
pop
mov
lock
cmp
jo
cmpb
stos
pop
hlt
cmp
mov
js
rcr
inc
jg
mov
pop
test
fcom
loope
roll
cmpsl
mov
mov
or
cld
stos
mov
scas
std
xor
add
jo
xchg
lcall
push
push
sbb
sbb
movsl
aam
sub
add
setns
aad
or
fwait
pop
imul
cli
cli
sbb
inc
aad
mov
cmp
scas
scas
jae
addl
divl
push
cmp
dec
push
repnz
lcall
jge
inc
mov
cmp
cltd
dec
jb
enter
leave
or
aad
imul
xchg
loop
push
es
jp
cmp
dec
mov
mov
loope
test
into
cmp
lods
or
push
jbe
xor
daa
xor
add
dec
or
fwait
cmc
rorb
pushl
test
push
ljmp
jo
inc
sahf
cmp
out
cmp
loope
int
and
xchg
cmc
lcall
into
inc
sbb
cmpsb
mov
mov
inc
cmp
push
lret
lahf
and
push
mov
mov
mov
add
rcrb
pop
ljmp
cmpsb
cltd
cwtl
mov
cmp
fists
push
les
mov
in
mov
aaa
popa
inc
scas
sbb
pop
mov
pop
leave
fiaddl
add
xor
test
rcrl
ljmp
mov
push
jmp
xchg
add
fnstcw
mov
mov
add
imul
std
and
rclb
mov
js
fcmovu
fs
inc
fimuls
pushf
push
lret
lahf
aam
sbb
jns
xor
lods
sub
xchg
int
outsl
mov
lods
push
xchg
inc
cmp
aaa
rcrl
xchg
xchg
addps
repnz
adcl
outsb
div
in
test
push
xchg
adc
out
lret
xor
sti
sbb
mull
push
sbb
fwait
xchg
inc
adc
jne
pop
ds
cmp
leave
fnstenv
mov
loop
jl
nop
les
fsts
mov
stos
nop
mov
sub
cmpsl
cli
or
mov
jl
jg
hlt
scas
insl
aas
outsl
cmpsb
js
mov
mov
mov
mov
cmp
sbb
mov
adc
xor
pop
mov
fistl
or
test
mov
ss
pop
and
icebp
js
jno
div
mov
leave
add
adc
mov
mov
jg
cltd
sub
mov
subb
incl
push
cmc
pop
jg
jbe
movsb
ret
dec
cmp
jecxz
jbe
fwait
imul
cld
int
mov
dec
or
fcmove
sahf
jg
mov
daa
or
sbb
or
jp
adc
mov
in
shll
outsb
outsl
xor
imul
cmp
pop
mov
cli
mov
into
or
sbb
aaa
inc
int3
inc
xchg
mov
xchg
xchg
xchg
pop
push
test
in
dec
imul
sub
adc
shrb
daa
and
adc
clc
enter
loop
mov
cld
push
imul
shl
sub
cmp
ror
xlat
adc
mov
or
cltd
popa
dec
sub
aaa
ja
jb
adc
mov
mov
into
or
mov
pop
adcl
cmp
mov
inc
lea
ficoml
push
cwtl
and
lcall
nop
movsl
popf
mov
test
xor
xchg
sbb
and
andb
sbb
scas
in
inc
or
inc
hlt
imul
sbbl
lcall
leave
call
stos
xor
cmp
mov
sbb
jb
cmp
push
push
dec
push
cmpsl
sub
mov
mov
mov
mov
lahf
sbb
and
push
das
sti
jno
in
test
rol
out
cmp
into
sbb
and
jae
inc
jns
mov
sbb
pop
pop
sub
shll
aam
mov
repnz
sahf
cmp
ljmp
sbb
outsb
rcl
andb
scas
push
into
popf
add
hlt
data16
fidivs
mov
popa
int3
shrb
lret
out
lock
lods
sub
cmpsl
mov
je
call
mov
add
cmpsl
jb
xor
fcmovnbe
push
pop
mov
dec
fsubr
adc
shlb
jb
xor
fisttpll
xchg
faddl
repz
f2xm1
and
cmp
sbb
mov
lock
add
and
loop
into
mov
adc
cltd
inc
popf
adc
add
dec
daa
addr16
cmp
add
rcrb
repnz
repnz
mov
inc
mov
lea
scas
sbb
les
les
add
pop
loopne
mov
jg
loopne
and
mov
jnp
xchg
cmpsl
inc
add
loopne
or
push
xor
pop
lods
xchg
out
push
pop
jl
imul
in
jae
jne
icebp
idivl
mov
cwtl
outsb
fnstsw
aas
cs
add
fwait
aad
cld
xor
pop
dec
push
fldcw
push
popa
xchg
pusha
lcall
push
mov
jecxz
je
inc
sbb
push
addl
add
aad
mov
or
nop
in
data16
pop
add
lcall
outsl
adc
mov
and
jge
pop
sti
sub
push
faddl
fisttpl
cmp
sub
mov
inc
fwait
jnp
icebp
add
xor
adc
fnstsw
xchg
scas
pop
add
xor
in
adc
xchg
pop
sbb
add
mov
cli
and
push
lea
pop
push
loope
aad
notl
jo
rcll
mov
testb
mov
lcall
xchg
in
adc
not
dec
test
fstpl
cmpb
mov
in
sbb
in
jae
push
loop
cmp
imul
push
mov
sbb
dec
popf
xor
mov
fcmovnb
mov
dec
add
mov
jae
shll
push
push
jns
shrl
fld
or
lcall
mov
mov
jge
les
dec
loopne
lret
outsl
lcall
pop
leave
out
inc
lods
and
xchg
sbb
lret
dec
jp
in
shlb
inc
xor
cwtl
xor
dec
pop
sub
xchg
pop
or
movsl
cmc
jno
inc
outsb
outsl
pop
jmp
cmpsb
mov
stos
ret
fadds
jge
push
outsb
jno
or
xchg
jle
pop
adc
fistpll
sbb
scas
cmpsb
mov
xchg
js
cmpsb
pusha
fs
mov
lods
sub
imul
and
dec
cmpsb
cli
xor
mov
jl
and
sti
sub
lods
adc
inc
fildl
mov
lea
sub
rclb
out
mov
fisttpll
pop
daa
fadd
or
jle
xchg
and
xchg
ret
mov
std
mov
adc
push
cmp
xor
lcall
rorl
jae
cmp
je
stc
in
dec
imul
or
cltd
cmc
lret
mov
mov
test
je
fidivrs
or
jg
and
sub
test
xchg
sub
rcl
test
adc
lea
or
xor
and
xlat
push
push
lahf
sti
or
fwait
lods
fidivs
cmp
xchg
cli
fwait
xchg
cmpsl
gs
push
mov
or
dec
leave
data16
push
or
fwait
ret
xchg
movsl
hlt
or
cld
lods
fninit
insl
xchg
mov
add
cmp
insb
lret
loope
or
xor
scas
sbb
in
and
sub
mov
je
fsubp
mov
dec
mov
decb
pop
daa
lock
movsb
fistl
dec
inc
into
nop
cmp
push
out
jge
sub
dec
sub
xchg
push
xchg
mov
mov
inc
rclb
mov
jle
add
push
shll
xor
xchg
cmp
push
pop
fdivl
pop
push
and
lods
divl
test
sahf
push
mov
incl
mov
outsb
dec
xchg
xlat
imul
ja
sub
sub
adc
jno
shll
jae
repnz
cmp
lods
inc
mov
xchg
mov
mov
add
fwait
add
insb
mov
test
cli
add
bound
loope
jg
xchg
jb
adcl
sub
imul
jb
mov
call
push
mov
jns
push
and
sbb
imul
pop
xchg
mov
fwait
cwtl
dec
xor
push
jnp
outsl
cmp
cwtl
adcl
ja
rclb
aam
lock
cmp
int
int3
or
adcl
rclb
or
gs
cmp
mov
sahf
sbb
ja
je
sbb
jne
mov
mov
testb
lods
lds
int3
fsubs
mov
rclb
dec
popa
out
das
icebp
je
shlb
mov
leave
outsl
pop
push
pop
inc
cs
sahf
or
cmp
push
cmp
pop
pushw
sub
jg
in
ss
jge
scas
negl
js
sub
movsb
aaa
dec
adc
lods
leave
mov
add
lret
mov
scas
push
fwait
xor
ret
fwait
hlt
out
call
andl
add
pop
pop
loope
jl
out
push
sbb
jmp
add
push
nop
popf
lahf
je
push
push
call
dec
push
push
inc
push
inc
fsubrl
mov
gs
idivl
rcll
push
inc
rclb
ljmp
xchg
cmp
jns
sub
dec
push
jg
add
sbb
popf
cmp
gs
cmpsl
outsl
popf
loop
mov
mov
inc
sti
sahf
imul
lret
mov
jecxz
pop
jg
add
je
sbb
pop
stc
aaa
es
sbb
xor
mov
inc
xor
fcompl
sbb
sub
jae
push
scas
or
pop
xor
cld
out
dec
aas
jo
icebp
push
shll
dec
negb
pop
add
xor
fcompl
cwtl
enter
pop
imul
lods
testb
push
aas
sub
jmp
jmp
jmp
push
sbb
adc
mov
and
push
icebp
inc
imul
aam
pop
cmpl
and
jbe
adcb
loop
jne,pt
filds
fisubrs
and
cmp
rorl
push
lret
cld
pop
shll
sahf
enter
mov
sbb
dec
dec
add
mov
cmpsb
pop
shl
pop
fidivl
adc
push
popf
sahf
sub
xchg
sbb
jg
sub
rorl
pop
icebp
sbb
push
push
inc
jo
add
cmp
and
paddq
cld
jmp
push
pop
push
lds
lret
popa
out
sbb
add
cmp
mov
ret
in
add
mov
arpl
push
hlt
dec
shrb
cmp
daa
bnd
lret
cmp
mov
sahf
lods
stos
inc
mov
insl
and
cwtl
lcall
adc
in
bound
dec
imul
or
es
add
xor
lfence
and
jmp
mov
icebp
cld
and
and
xchg
jge
jo
mov
add
adc
adc
movsl
frstor
mov
fcompl
out
outsl
or
arpl
aas
xchg
cmp
xor
lcall
dec
mov
jp
pop
cmp
add
pop
scas
push
ret
les
fwait
mov
push
sbb
pop
cmp
inc
sahf
movsb
xchg
cs
rcr
mov
sbb
jmp
add
xor
out
test
jp
std
fmuls
stos
push
inc
jl
push
outsl
sahf
sub
jb
leave
push
add
jnp
fs
mov
push
daa
shl
lcall
aaa
decl
mov
mov
int3
out
sub
mov
xor
insl
clc
mov
shr
enter
mov
mov
push
sub
into
je
nop
cmp
sbb
mov
mov
jmp
shr
popa
shrl
je
addr16
pop
icebp
test
xor
cmpsl
sbb
push
inc
dec
js
sub
mov
pop
ficompl
xor
insl
fiaddl
sub
shll
cmc
std
sub
fsubrp
xorl
adc
dec
inc
adc
push
inc
inc
popf
and
push
mov
int
loop
adc
sub
xchg
cs
lds
mov
sub
fs
push
adc
jb
stc
stos
mov
cltd
pop
in
adc
lods
xchg
pop
orb
sbb
aaa
sbb
dec
mov
dec
scas
sbb
ja
stos
popf
inc
xor
mov
call
sub
and
xchg
fistps
or
or
loop
lods
or
js
les
push
mov
daa
cwtl
and
test
xchg
xchg
mov
pop
iret
std
mov
dec
jle
aaa
add
mov
lods
mov
shll
scas
aad
add
test
sub
outsb
adc
push
mov
xor
mov
jo
adc
shlb
xlat
or
and
popa
xchg
jno
xchg
faddl
or
jecxz
pop
and
hlt
aad
popf
xor
or
or
dec
mov
scas
lods
andl
cmpsb
decl
mov
in
outsl
jnp
inc
ds
pop
sbb
xchg
cmp
and
xchg
add
jmp
mov
cltd
inc
xchg
neg
cmpsb
sub
add
out
sub
pop
xchg
mov
jecxz
daa
dec
lock
lret
push
push
lock
mov
add
or
scas
and
jbe
pop
std
loop
dec
cmp
push
mov
popf
lock
sbb
add
scas
fcomps
aam
adc
data16
mov
ds
mov
js
in
outsl
imul
in
add
pop
jmp
jge
mov
lock
sahf
xchg
or
push
das
in
push
cmc
pop
xchg
pusha
fdivrp
es
mov
clc
jmp
and
cmc
and
movsl
jmp
das
adc
and
jg
mov
mov
cs
pop
lock
fnstenv
mov
inc
mov
lret
out
mov
out
mov
outsl
jb
pop
push
xchg
js
xchg
cmp
adc
push
aaa
mov
inc
push
push
cmp
cli
hlt
mov
lods
push
notb
adc
mov
out
xchg
loopne
mov
pop
loope
nop
mov
into
adc
icebp
dec
mov
scas
dec
jae
dec
mov
inc
mov
and
in
int3
daa
shll
cmp
push
fbld
pop
adcl
int
div
jne
stc
repnz
mov
push
pushf
xchg
push
aas
insl
or
pop
and
fists
shl
out
jle
es
outsl
aas
dec
cmpl
mov
lods
fistpl
fildll
adc
xlat
mov
into
ss
jge
pop
mov
mov
ficompl
push
popa
sbb
fdivrp
int3
mov
loope
lret
int3
ret
jp
dec
sub
sub
and
xor
jle
and
xor
adc
sbb
xorb
xor
imul
sub
mov
nop
enter
mov
popa
outsl
pop
pop
and
or
cli
add
cmp
sar
in
icebp
dec
test
aaa
add
push
and
jle
ret
outsb
mov
sbb
jno
fildll
dec
dec
inc
jae
call
mov
xchg
jle
stos
pop
mov
push
push
call
ds
dec
call
jp
repnz
mov
add
cmp
roll
mov
mov
push
inc
outsb
inc
push
cmpsl
add
jno
cmp
mov
scas
cld
ss
ret
fwait
or
sahf
aam
mov
je
sbb
sub
inc
or
or
or
adc
pop
push
jp
mov
mov
and
push
insl
stc
bound
ljmp
mov
mov
arpl
push
jmp
je
or
pop
mov
aad
push
jb
push
das
bound
in
xchg
clc
stos
jl
xlat
gs
mov
cmp
adc
push
xchg
pop
in
scas
jl
mov
mov
or
or
push
mov
into
js
mov
sub
out
mov
sub
push
push
xchg
xor
rcll
lret
jecxz
fdivrl
mov
jg
lret
test
clc
add
cld
stos
jp
std
inc
imul
cmp
inc
add
jo
cmp
mov
test
push
dec
enter
mov
or
in
out
add
or
inc
rcr
fists
sub
push
fistps
dec
or
or
aaa
xchg
add
pushf
movsb
mov
movsb
out
das
daa
dec
mov
mov
shlb
mov
jmp
leave
jo
push
movsb
and
lock
cmp
aam
ljmp
push
pop
insl
mul
loopne
push
push
fsubs
push
lret
push
sub
ljmp
mov
sub
loopne
and
mov
jnp
iret
sbbl
hlt
add
icebp
or
ljmp
clc
stos
cwtl
fwait
xlat
movsb
sti
insb
mov
jg
jno
les
ss
loope
lea
jae
cmp
adc
adc
pop
leave
fnstcw
mov
push
rolb
fisttps
int
and
adc
fmulp
mov
mov
and
sub
pusha
stos
imul
shr
sub
mov
dec
rolb
cld
pop
pusha
sub
nop
push
inc
fisubs
std
test
das
and
aad
filds
mov
lret
jle
or
or
inc
inc
mov
dec
jl
sub
adc
xchg
xchg
xchg
in
gs
pop
jnp
xchg
test
push
gs
xchg
adc
push
and
repz
sbb
push
pop
lcall
fs
add
shr
mov
mov
and
xchg
mov
enter
pusha
adc
cmp
and
iret
mov
jl
shll
stos
int3
and
or
jg
xchg
lret
xlat
out
bound
imul
mov
stos
pop
dec
push
mov
xlat
lahf
call
fldcw
data16
popf
movsl
popa
ljmp
pop
adc
xlat
hlt
adc
scas
cltd
jmp
cmpl
adc
adc
in
xchg
cmpsb
insb
push
sti
sbb
or
xorb
dec
dec
ror
xor
addr16
add
or
or
das
jge
in
cmp
jnp
jl
mov
popf
push
orb
push
std
dec
cmp
pop
cld
mov
shll
ljmp
jp
push
push
aad
loop
jle
jb
jne
ret
shrl
adc
repz
popa
mov
push
xchg
hlt
in
adc
push
push
pop
mov
jo
pop
out
jae
out
ja
pop
xchg
sarl
into
or
jle
inc
cs
add
jg
cmpsb
out
mov
add
das
jo
xor
dec
dec
xchg
jecxz
push
or
pop
in
or
hlt
push
sbb
js
daa
dec
scas
addl
lock
inc
pop
push
adc
cwtl
xchg
mov
xchg
add
sbb
pavgb
sub
mov
push
cmp
sbb
xor
pop
mov
mov
aad
adc
or
iret
mov
mov
rcrl
cld
mov
add
cmc
pop
loopne
repz
cltd
je
movsl
test
cwtl
pop
cmpsb
or
clc
sbb
or
loopne
xor
fdivrl
jo
sbb
pop
sub
fwait
test
mov
dec
out
cmc
mov
clc
dec
xor
dec
movsb
sahf
std
sbb
pop
jo
push
dec
push
sub
pop
aas
or
mov
and
jb
or
mov
mov
and
sub
js
stc
sbb
inc
mov
sbb
fcmovnbe
or
sbb
lds
scas
inc
lods
mov
mov
mov
out
mov
and
add
rclb
xor
flds
addr16
jno
sub
pop
test
das
and
icebp
sub
or
lods
and
push
xchg
js
mov
bound
dec
xchg
inc
in
data16
jns
lea
in
shlb
sbb
out
pop
add
gs
loope
inc
mov
fidivrl
fst
mov
cmpsl
test
repnz
sbb
cmp
adc
lds
out
sub
ja
pop
mov
push
lahf
pop
xor
outsl
xchg
pop
push
lcall
leave
stos
ljmp
and
lret
das
xor
cmp
in
dec
dec
mov
or
pop
out
js
aam
incl
stos
fwait
popa
lock
insl
popa
je
or
movsl
cmp
shl
vpsubd
inc
test
add
or
add
sbb
cs
cld
xchg
test
jg
jmp
ja
pop
jb
test
mov
cmp
sbb
repnz
or
push
mov
decb
cmp
enter
daa
and
bound
mov
ret
inc
dec
jge
or
xlat
mov
cld
insb
leave
js
roll
std
push
fs
enter
jmp
mov
jo
repnz
mov
insl
out
and
cmp
fwait
xor
dec
fs
sti
and
stos
and
aaa
rclb
incl
or
cmpl
lds
inc
test
loope
inc
xchg
inc
ljmp
pop
jle
and
xchg
mov
cmpsb
mov
inc
mov
ds
pop
sub
jo
int3
test
call
xlat
pushf
dec
mov
mov
fimull
movsb
mov
adc
frstor
sahf
jp
xor
or
inc
cmp
sbb
fisubl
js
push
call
jmp
pop
mov
lock
xchg
sub
insb
sbb
xchg
sar
or
ja
push
mov
pop
out
aas
je
push
test
mov
pop
mov
fidivs
xor
jp
out
movsl
cmp
test
std
sbb
dec
fwait
imull
jp
push
scas
sti
and
push
lds
fiaddl
mov
sbb
and
fdiv
add
dec
cmc
adc
dec
cmp
je
pop
test
sub
or
push
in
adc
lret
dec
cwtl
lods
cltd
std
jo
xor
in
and
cld
xchg
lods
push
repz
cli
insl
mov
ss
or
cmp
insl
jmp
add
test
push
mov
dec
in
cmp
mov
mov
inc
or
sti
loope
dec
push
dec
mov
es
push
and
daa
pushf
scas
daa
or
dec
add
int3
mov
lds
and
pop
xlat
call
sbb
loope
int
popf
cmp
imul
clc
data16
daa
adc
sbb
iret
xor
xlat
mov
icebp
jmp
mov
push
arpl
jae
cmp
pop
movsl
mov
ror
mov
pusha
xchg
rcr
mov
push
loopne
xchg
loope
push
xchg
push
mov
mov
loope
test
or
sbb
mov
xor
push
repz
test
xchg
xor
sti
mov
mov
push
jecxz
sbb
aam
jmp
mov
dec
adc
inc
outsb
inc
inc
fcompp
or
loopne
leave
divl
cwtl
rolb
add
sub
enter
sbb
in
xchg
iret
decb
xor
pop
push
jge
or
fsubl
pushf
incb
push
sarl
sub
sub
mov
sbb
imul
rcll
push
pop
hlt
decb
ljmp
mov
jle
cmpl
xchg
scas
or
jb
pop
jne
loop
sub
mov
or
sub
sarb
daa
add
cmp
gs
iret
ret
mov
es
cmp
pop
cwtl
mov
sbb
imulb
aaa
mov
or
pop
and
cli
pop
sbb
in
imul
mov
nop
push
xchg
pop
test
cwtl
enter
loopne
loope
fwait
pop
cmc
mov
sub
mov
mov
cmp
lods
sub
mov
push
add
sbb
mov
test
fists
pushf
cwtl
or
mov
addl
testl
loopne
pop
je,pt
sub
fstpt
add
mov
mov
adc
fwait
add
fisttpl
notl
fnstcw
in
loopne
xor
packssdw
clc
sbb
lahf
mov
pop
cld
mov
xor
or
cmp
iret
inc
mov
mov
or
cs
xor
add
add
adc
repz
and
cmp
mov
dec
mov
jge
pop
dec
lret
mov
inc
mov
pop
dec
inc
and
inc
repz
jl
enter
or
xor
adc
pop
rcr
fisubrs
xchg
inc
sbb
jo
minps
lret
inc
stos
pop
push
out
lea
push
icebp
pop
test
out
test
scas
repz
aad
inc
and
xor
mov
clc
imull
test
jp
cmpsl
mov
pusha
int
jb
loop
pop
and
cmp
lahf
cld
mov
or
test
aad
stc
jge
out
lret
sub
add
mov
cs
cmpb
lods
inc
ljmp
and
fnstenv
jge
sub
decl
jl
jnp
das
fisubl
push
xchg
out
mov
shll
xchg
scas
lcall
jbe
int3
add
cmp
cmp
add
push
insb
push
mov
pusha
popf
or
das
push
xor
in
leave
cmpl
mov
jo
out
lock
xor
jl
dec
scas
cmpsl
jb
loop
or
xchg
push
mov
inc
xchg
xchg
jo
movsb
test
rcl
in
sbb
adc
cmpsl
pop
or
dec
mov
ds
rorb
xchg
xor
gs
push
mov
iret
or
daa
je
and
push
movsl
and
iret
inc
mov
out
cmp
andb
pop
jnp
jge
xchg
adc
dec
mov
xor
jns
jns
sub
stos
adc
sbb
out
pop
adc
mov
or
and
add
out
pop
lock
fcmovu
insl
mov
movsl
out
mov
jo
out
ja
cmp
sub
cwtl
mov
rol
mov
dec
inc
fcomip
call
jl
mov
sbb
loop
icebp
mov
inc
or
cmp
not
cmpsb
incl
in
out
dec
int3
sbb
les
ja
aad
pop
mov
stc
xchg
iret
jl
popa
inc
int3
int
repz
test
dec
mov
lock
in
insl
sahf
fcmovb
mov
add
sti
lcall
daa
sub
testb
call
push
adc
rcll
cmp
mov
fsub
mov
ds
cld
aam
lea
jnp
test
fwait
sbb
stos
cwtl
mov
jle
add
inc
aaa
int3
lock
push
bound
in
jl
aam
movsl
aad
jp
push
inc
ljmp
gs
aas
sub
loop
je
mov
das
loopne
sbbb
dec
push
cmp
and
movsb
lds
insl
push
pusha
xchg
pop
iret
jle
cmp
and
inc
leave
aam
ljmp
sahf
cmp
add
inc
jns
mov
push
jb
push
repnz
pop
sub
mov
pop
lcall
push
mov
jnp
and
dec
iret
pop
jmp
sub
fidivs
cmp
icebp
negl
les
or
push
xor
adc
inc
mov
mov
cld
jbe
cs
jg
add
inc
adc
inc
pop
pop
loop
add
xchg
lahf
and
lds
in
xor
imul
mov
pop
push
and
outsl
lds
int
lds
push
mov
push
add
enter
lock
test
cmc
or
sub
icebp
xor
mov
mov
test
xchg
insb
lret
cmp
and
out
cmp
push
insl
lods
mov
jmp
jg
mov
sub
test
addr16
movsl
shr
stos
testb
cmp
sti
mov
inc
mov
add
lods
push
pop
pop
mov
mov
leavew
sbb
pop
add
inc
inc
pushf
push
arpl
inc
mov
lahf
pop
jp
cmp
sti
out
add
insl
mov
mov
std
cld
mov
adc
hlt
mov
ret
pop
loope
test
and
cld
int3
cmp
cmp
or
adcl
std
lea
adc
or
mov
mov
pop
sarb
mov
adc
add
insb
dec
addr16
push
lods
xor
aad
mov
inc
mov
cmp
mov
mov
subb
xchg
sbb
mov
and
mov
jmp
xchg
lods
pop
fstpl
mov
data16
xchg
cld
xor
data16
sbbb
pop
jo
cmpsl
fwait
jmp
das
sbb
sbb
push
xchg
orl
mov
mov
insb
out
xchg
ror
div
mov
in
xchg
mov
repz
dec
ret
cmpsb
mov
js
clc
adc
mov
ljmp
cmp
stc
or
aas
test
in
inc
cmp
fmulp
or
adc
mov
ret
sarb
lahf
add
mov
ret
sub
sahf
mov
out
xchg
mov
int
mov
lea
sub
adc
xchg
push
add
xor
lods
inc
call
pop
jmp
adc
cmp
ljmp
jb
cmp
out
movsb
outsb
jne
push
das
inc
xchg
ret
cmp
out
sbb
leave
jae
mov
push
in
jnp
lea
inc
rclb
pusha
pop
mov
dec
shrb
lea
stos
or
push
jno
test
int3
es
icebp
jl
mov
adc
mov
das
pop
mov
push
out
cmc
mov
dec
sub
add
pop
sub
pushf
mov
push
fwait
push
fcoms
sahf
cmc
pop
mov
sarl
cli
xchg
cmpsb
mov
fadds
je
jle
aas
sub
imul
loop
repz
filds
ja
cli
add
push
sbb
loop
mov
mov
jnp
andb
ret
fstl
sub
push
mov
sub
es
mov
fimull
std
push
fadds
outsb
xor
add
xchg
xor
inc
cmc
test
andb
jns
sub
cs
mov
sub
lea
cmp
ja
jp
and
das
shl
dec
sbb
adc
test
jg
notb
fadds
mov
ss
addb
adc
sbb
lcall
out
clc
imul
cli
pop
push
cmp
cmpsb
out
in
inc
push
sahf
mov
mov
xchg
test
cmp
arpl
int3
lret
cli
mov
ret
imul
std
ja
aaa
ss
ret
mov
inc
decb
pop
shlb
mov
pushf
nop
xchg
lahf
push
outsb
cmp
fcom
pop
inc
stos
pop
cmp
mov
add
sbb
leave
xchg
scas
sub
dec
pop
notb
mov
jae
jp
jecxz
ds
popf
movl
das
aam
lds
xor
dec
cltd
movsl
orl
arpl
daa
jge
add
lret
lret
lret
dec
adc
xchg
ficoml
xchg
sbb
and
repz
add
aas
and
mov
es
jl
out
pushf
psadbw
or
pop
shll
xor
mov
cmp
decl
sti
and
mov
pop
stos
stc
cld
dec
leave
outsl
dec
int
inc
outsb
mov
cmp
cli
imul
xchg
push
stos
sbb
inc
dec
cltd
jp
push
rcll
out
movsb
pop
xchg
add
add
incb
cs
push
sbb
je
out
mov
repz
aad
jns
sbb
shlb
or
sub
pushf
adc
mov
pop
mov
inc
cmp
scas
pop
push
aad
mov
leave
mov
daa
dec
cli
repnz
add
mov
aam
fildl
cmp
push
fsubrl
jne
dec
and
leave
shrb
or
cmp
leave
mov
inc
xlat
mov
mov
shlb
or
mov
fmuls
hlt
inc
mov
or
push
ljmp
mov
mov
ja
cmpsb
movsb
popf
jge
xchg
loopne
lret
ss
mov
loope
cwtl
je
sbbl
or
jl
imul
xor
lea
dec
sbb
fcmovbe
js
je
adc
push
inc
call
rcr
lcall
loop
mov
in
inc
jle
xchg
int3
mov
and
push
inc
pop
fucomip
adc
ss
push
jo
pusha
les
mov
lcall
fdivl
jnp
sbb
jns
movsl
jecxz
lcall
xor
out
ficomps
and
xchg
jae
inc
stos
and
add
xor
adc
mov
mov
mov
outsl
jge
push
loop
cld
xor
dec
lret
sete
aas
cmp
pop
sub
fistpl
cltd
cmp
cwtl
out
fdivl
jecxz
cmp
fwait
or
fnsave
add
pop
add
mov
cld
xchg
xchg
mov
inc
xor
scas
mov
cltd
scas
popf
repz
or
cmp
inc
ljmp
stc
inc
pop
loop
and
sbb
push
add
iret
adc
ret
pop
adc
lea
ret
sbb
or
sub
std
add
mov
test
fwait
mov
pop
imul
cmp
jno
mov
dec
fbld
adc
lret
in
sar
inc
mov
ss
pop
outsl
out
fsubrs
in
movsl
pop
int3
std
sub
sbb
iret
push
xadd
add
mov
fs
aam
sbb
mov
push
nop
adc
cmc
js
or
in
cmp
cmp
and
mov
push
and
fistps
jle
and
sub
fwait
jbe
push
sub
mov
ss
cmp
dec
xchg
sub
cwtl
xor
ret
xchg
mov
push
out
lcall
in
icebp
cmp
faddl
test
mov
and
mov
lret
fcoms
and
push
das
int
pop
xor
stos
lock
xor
ficoml
movsl
mov
addl
out
mov
movsl
xchg
mov
sbb
imul
push
test
jne
jbe
int
mov
icebp
sbb
dec
in
aad
push
scas
data16
or
clc
andb
inc
test
xchg
pop
fldl
call
push
rsm
pop
icebp
jnp
cmp
push
push
shll
lods
xchg
aas
jbe
adc
sub
cmp
adc
xchg
test
movsl
or
add
aas
pop
cs
data16
fidivl
adc
sahf
xor
insb
push
movsl
sub
lret
insb
fsub
cmp
or
fwait
ja
fs
gs
mov
sahf
cmc
mov
rorb
mov
shlb
or
jne
mov
or
mov
rcl
arpl
cmpb
das
and
xchg
lret
ffree
flds
dec
gs
mov
pop
xchg
pop
gs
mov
push
jbe
push
cmp
es
sbb
add
lock
clc
mov
psrlq
popf
add
cli
add
or
lcall
lods
fs
outsb
inc
aam
push
fdivr
xor
call
or
stos
stos
lea
js
xor
inc
gs
testl
xchg
shll
icebp
pop
jns
jmp
adc
mov
out
mov
pop
add
cmp
adc
cmp
testl
subl
lcall
imul
inc
stos
mov
shld
mov
movsl
shll
sbb
jg,pt
adc
mov
and
xor
inc
xor
cmpsb
cmp
xchg
pusha
pop
add
pop
je
and
inc
push
push
jb
jo
sbb
jnp
hlt
jp
lock
fnstenv
cli
inc
push
push
sub
in
xchg
or
dec
dec
jno
mov
xchg
dec
cld
inc
cmp
cmc
lahf
jge
flds
dec
cld
cmp
and
inc
popa
pop
and
jns
cmp
push
pop
adc
mov
sti
jp
pop
inc
stos
cmp
xlat
pop
add
xor
mov
mov
fdivl
negb
rcrb
mov
in
and
insl
inc
inc
or
loopne
or
int
lret
jecxz
xor
out
adc
hlt
xlat
adc
or
sbb
call
iret
xchg
es
cli
push
cld
subl
out
iret
and
lcall
xchg
xchg
cmp
int
pop
xor
sub
xchg
shll
aam
cmp
js
fwait
push
popf
xchg
in
and
enter
insl
lods
in
inc
sub
push
hlt
ret
daa
adc
arpl
test
mov
push
sbb
and
mov
or
out
dec
add
in
adcl
cwtl
mov
sbb
pop
repnz
aam
hlt
adcl
add
xlat
jne
pop
rcl
xchg
das
test
cmp
jno
push
mov
lret
cltd
lock
push
in
lds
pop
push
popf
sub
dec
or
dec
out
out
cmp
popf
cmpsb
mov
pop
sbb
test
and
mov
or
jmp
or
push
test
stc
loopne
call
jg
cmp
cli
ljmp
stos
ds
enter
mov
or
leave
xchg
roll
add
inc
imul
arpl
dec
in
cmp
and
addr16
fwait
ds
mov
push
push
adc
sub
insl
fiaddl
adc
jb
pop
jb
js
push
dec
add
pop
test
pop
xlat
cmp
mov
shll
mov
pop
inc
xor
inc
ss
into
pop
push
cmp
cmpsb
inc
cmp
pushf
jb
fadd
add
rolb
jae
dec
das
pop
scas
sbb
inc
sub
jnp
mov
pop
and
cmp
jb
and
aad
sarl
fwait
push
ds
pop
loop
and
mov
gs
xchg
test
xor
add
bound
movsb
sbb
fcoml
inc
hlt
xchg
lds
sbb
idivl
sbb
mov
stos
mov
xchg
int
loopne
pop
jge
mov
rclb
mov
xchg
lret
mov
ljmp
lret
test
jns
adc
sub
not
test
mov
add
sti
and
lahf
dec
enter
sub
mov
cmp
imul
jecxz
push
mov
ret
jge
cmp
mov
cmpsb
movsl
rolb
xor
inc
ds
ljmp
xor
sbb
push
inc
sub
cmpsl
je
xchg
in
cmc
sbb
stos
outsb
add
inc
xchg
xchg
mov
fs
xchg
inc
mov
shlb
push
fsubr
mov
insl
dec
shlb
hlt
xchg
jp
xchg
pop
push
or
cmp
sbb
lret
jne
mov
sbb
int3
mov
mov
jge
or
dec
sbb
cmp
repnz
push
push
stos
in
adc
adc
repz
mov
sub
aaa
jmp
sbb
push
jns
add
push
push
jp
push
and
or
shll
mov
lcall
cmp
ljmp
je
and
subl
mov
xor
cltd
ja
int3
rcr
in
sbb
shlb
dec
fdivrs
rcl
or
stos
push
pop
cld
mov
imul
xchg
push
mov
daa
dec
es
es
cmp
push
push
mov
ret
xchg
imul
jne
enter
inc
mull
insl
loope
cs
je
inc
add
rclb
mov
roll
repz
repnz
ret
lods
mov
inc
jnp
xchg
jae
in
jnp
daa
mov
lods
mov
pop
xchg
lret
pop
ret
les
aaa
shll
dec
jp
shlb
mov
imul
push
cli
aam
loopne
inc
out
adc
mov
push
pop
mov
push
push
aad
or
orb
icebp
orb
push
call
clc
sbb
stc
movsl
pushf
cltd
or
sub
loop
das
push
xchg
pusha
cmp
cltd
imul
mov
push
or
cmp
mov
shll
xor
loope
dec
cmc
sbb
add
aam
sub
call
mov
mov
and
stos
ljmp
dec
fists
jae
incb
xchg
pop
dec
out
cwtl
push
jmp
aas
xchg
movsb
push
mov
xchg
js,pt
adc
loopne
adc
mov
mov
enter
jmp
sub
pop
push
scas
leave
xchg
xor
jns
adc
mov
jnp
add
lret
pop
mov
leave
lahf
out
cltd
cmpb
dec
lods
and
repnz
lods
cmpsl
jg
int
scas
mov
pushf
mov
icebp
inc
pushf
adc
insl
out
xchg
aam
pop
dec
jl
dec
adc
popa
jnp
popf
repnz
stos
icebp
int3
mov
ret
jb
cmp
fisubs
push
sub
push
adc
jnp
xchg
aam
cwtl
dec
popf
add
lea
outsb
mov
pop
xor
xchg
xchg
jns
push
mov
ds
cmp
mov
js
push
ret
inc
lods
sbb
fwait
out
mov
test
clc
in
fcmovne
inc
lea
xchg
inc
adc
sbb
mov
into
test
dec
lods
test
lea
push
cmpsb
cwtl
mov
cwtl
lock
gs
jae
outsl
out
aaa
jae
nop
mov
shrl
call
in
jae
cmp
mov
cli
shlb
in
add
sub
leave
push
stos
add
xchg
hlt
jbe
aaa
mov
out
jae
incl
loope
subl
jmp
jmp
and
scas
loope
dec
sub
adc
cmc
mov
cmp
or
lret
push
add
dec
js
stos
cltd
aaa
dec
aaa
nop
sbb
pop
repz
xor
dec
add
cmp
pop
outsb
decl
roll
push
mov
aad
ja
fs
fmuls
sub
xor
and
sbb
pushw
mov
mov
fiadds
cmp
sbbb
aad
adc
cli
pop
mov
mov
cwtl
fistps
adc
push
or
scas
insl
jmp
ja
nop
sbb
int3
cs
jo
pop
mov
into
push
mov
aas
mov
addr16
test
xchg
aam
push
pop
mov
lahf
andb
mov
cmc
add
jg
into
and
xor
rolb
insb
loopne
add
inc
sub
push
stos
cmp
inc
fldl2t
jbe
lret
mov
inc
push
movsl
fadd
push
mov
inc
mov
jle
ds
pop
mov
cltd
jno
lods
in
cs
or
js
jl
sbb
sub
push
sbb
mov
popf
rol
fmuls
mov
jne
into
cmp
jns
add
sbb
into
mov
cmpb
xchg
push
imul
negl
jge
es
push
test
jne
mov
scas
pop
push
mov
in
jg
mov
lds
inc
filds
andl
xchg
mov
push
jne
movq
sti
lcall
enter
cmc
scas
pop
fcompl
mov
cmpsl
dec
rorl
mov
and
aas
mov
aad
lret
faddl
cltd
mov
xchg
sbb
xchg
cmp
mov
xchg
cld
out
fcomip
pop
rcl
jle
pop
das
mov
xchg
mov
xchg
out
nop
jae
xchg
xorl
add
pop
call
pusha
or
cmpsb
jecxz
clc
adcb
jae
or
into
lcall
mov
outsl
std
out
jne
clc
inc
fidivs
jo
test
cmp
pop
stos
mov
adc
cmp
pop
cmp
push
lcall
cltd
mov
shll
mov
cmp
adc
mov
jmp
jp
mov
push
inc
dec
and
hlt
idiv
popa
jno
test
ljmp
stos
insl
dec
jmp
cmc
ja
outsb
or
xlat
and
xchg
shrb
fidivrl
dec
push
push
movsl
push
lahf
dec
xchg
pop
fs
push
mov
mov
push
std
into
pop
outsb
aas
mov
cmc
pop
ret
push
xchg
shl
int
lock
mov
notl
inc
hlt
xchg
into
dec
int
fcoml
dec
sub
daa
adc
or
jbe
inc
sub
ret
loop
or
mov
push
jmp
cmp
mov
addb
fildl
jb
adc
loope
push
dec
mov
adc
rcl
and
mov
cltd
or
mov
xchg
mov
aas
mov
pop
sbb
fwait
add
lea
test
stos
insb
mov
pop
les
push
xchg
in
aaa
out
pop
mov
ja
test
mov
and
push
sti
and
sbb
cmc
call
fld
dec
pop
inc
mov
jp
xchg
jg
and
out
dec
lock
sbb
mov
xchg
push
push
in
cmp
sahf
xor
jbe
sahf
scas
test
sbb
cmc
sbb
inc
in
jnp
mov
scas
mov
mov
sub
push
add
ret
test
ss
jecxz
mov
inc
sub
jne
test
scas
icebp
xchg
sub
dec
aaa
stos
mov
adc
jns
dec
mov
push
dec
ja
rcrl
and
test
negb
popl
mov
and
dec
mov
jb
mov
and
in
pop
clc
adc
les
jmp
xor
into
cwtl
incb
rcrb
pop
arpl
and
cmpb
into
cmp
xor
jae
test
push
addb
push
jge
fdivr
cmp
push
outsl
cmpsl
lock
scas
push
sub
jbe
enter
add
cmp
inc
mov
cmpsl
jne
xchg
xchg
sub
mov
icebp
fwait
dec
ss
jp
dec
push
push
jae
inc
pop
mull
xchg
and
jecxz
call
scas
add
icebp
fdivr
insb
outsb
jnp
je
xor
lcall
mov
mov
sub
movsb
in
aas
mov
sub
or
daa
icebp
test
imul
and
sar
in
cwtl
add
ja
lahf
movb
inc
cmp
fistps
and
fisubs
enter
and
dec
adc
ficomps
js
mov
movsl
mov
in
fwait
shl
pop
add
mov
pushf
test
inc
aad
std
stos
dec
loop
ret
in
ds
outsl
lds
dec
dec
cltd
sub
pusha
repnz
jne
aas
mov
insl
add
pop
cli
dec
inc
lahf
pop
xchg
push
mov
cmp
or
std
lds
mov
cmp
sub
in
inc
xor
sarl
pop
xor
or
jno
imul
js
ljmp
ret
mov
inc
test
and
adc
lds
or
sti
clc
pop
cmp
popf
shll
inc
lods
fdivl
mov
xchg
add
pop
fcoml
jl
jp
cmp
shll
xor
mov
int3
xchg
cs
sti
pop
scas
leave
push
popf
push
fcmove
in
aas
test
cmp
dec
aas
mov
and
jb
xchg
jmp
jl
out
scas
xor
mov
pop
in
mov
jo
jmp
aad
ja
xor
inc
scas
mov
jno,pn
push
mov
es
rcll
ja
add
divl
pop
cwtl
lret
das
es
cli
push
xor
inc
sbb
rclb
negb
xchg
add
push
ds
andb
mov
gs
dec
mov
or
inc
in
dec
lea
outsb
xor
popf
stc
aad
std
sti
adc
xor
or
lcall
icebp
outsb
inc
in
out
out
or
es
iret
mov
sbb
mov
xchg
movsb
push
cli
jno
cmp
dec
lock
ds
stos
dec
cwtl
sbb
cli
out
ret
mov
inc
cmp
shlb
loopne
mov
lahf
enter
mov
and
pop
fld
iret
or
mov
cmp
sbb
je
lds
cmc
in
pop
mov
lret
pop
in
mov
add
cmp
jo
mov
mov
push
fwait
inc
out
or
push
mov
ret
pusha
jp
loop
adc
divl
jnp
sub
mov
inc
hlt
mov
sub
pop
push
sub
xchg
xlat
push
shll
pop
pop
scas
rcrl
add
fs
sub
and
add
xlat
and
popa
imul
andb
iret
cmp
jns
fwait
daa
push
push
mov
std
xor
push
loopne
or
daa
out
inc
jns
xchg
or
pop
inc
dec
and
int
test
inc
jbe
mov
aam
mov
push
xchg
in
outsb
cmpsb
or
out
sub
cmp
sbb
popa
mov
cmp
jb
mov
loop
mov
sub
dec
test
adc
popa
insb
fnstsw
pop
jo
push
push
movsl
dec
mov
jle
inc
push
gs
mov
inc
testb
lods
inc
loopne
ficoms
cli
insb
mov
pop
add
push
decb
xor
and
sbb
les
test
paddsw
adc
xor
cwtl
mov
std
ja
call
cmp
cmp
and
push
lds
xchg
out
jecxz
bnd
cmp
jnp
scas
mov
popf
in
xchg
lods
and
and
pushf
pop
and
add
adc
mov
mov
cmpsl
mov
cld
notb
lock
inc
pop
mov
test
push
xchg
sbb
fstps
cmp
or
insl
lods
and
dec
clc
jbe
sub
aad
shl
pop
mov
mov
mov
push
lcall
dec
mov
mov
and
inc
sub
or
cmp
rclb
wrmsr
lahf
jne
push
or
push
pop
xchg
xor
mov
add
push
cmc
ljmp
sub
and
fidivrl
pusha
cmpsl
push
test
arpl
mov
dec
adc
inc
das
inc
int
cltd
cmpsb
push
dec
add
lahf
sbb
rorb
js
iret
jno
call
dec
shl
push
iret
jmp
pop
ljmp
outsl
cld
mov
inc
jne
ds
push
mov
jno,pt
ror
xchg
add
cmp
jge
repnz
imul
pop
jne
mov
inc
sub
jge
adc
aam
xor
pop
pop
mov
aaa
aas
add
sahf
dec
add
xchg
sbb
mov
sbb
das
pushf
push
sahf
cmp
loope
push
rorb
mov
test
inc
push
nop
jecxz
int3
pushf
std
aas
adc
mov
sbb
in
dec
lcall
cmp
fcoms
lahf
lcall
mov
push
xchg
arpl
jnp
les
in
push
test
cmp
hlt
xor
hlt
or
or
mov
inc
xchg
outsl
and
mov
pop
in
scas
mov
mov
repnz
les
adc
gs
inc
repz
ret
cmp
ds
adcb
jns
push
xchg
nop
xor
inc
sbb
mov
and
cmp
arpl
rcll
jno
shlb
inc
push
inc
shrl
pushf
pusha
sub
xchg
push
addr16
inc
jne
jp
cmp
adc
addr16
test
jp
sub
jmp
dec
addr16
mov
pop
xchg
les
push
xchg
por
lods
loope
push
inc
push
jg
dec
fcomps
rcr
shll
xchg
inc
nop
popf
xchg
xchg
xchg
outsl
inc
sub
ja
pop
js
add
or
mov
jmp
adc
xor
add
hlt
sahf
cmpsb
xor
lret
mov
and
data16
cli
clc
sbb
push
out
cmpsl
sub
cmpsb
add
mov
out
push
pop
les
and
scas
lea
rcr
je
fidivl
xchg
lods
adc
xchg
jno
icebp
mov
sub
das
out
sub
scas
jl
cmp
rclb
push
sbb
add
lret
pop
push
mov
fcoml
jg
icebp
push
mov
into
dec
jbe
into
mov
xchg
jbe
jns
jge
fwait
movsl
stc
into
sub
test
sti
aaa
jo
lret
rolb
ljmp
data16
cltd
xchg
sub
xchg
insl
stc
pop
mov
in
aad
lret
jg
test
aam
in
jmp
sti
lahf
stos
lret
xchg
shrb
imul
jmp
push
ss
xchg
sbb
test
imul
leave
insl
ljmp
mov
bound
add
sarl
xchg
loop
outsl
out
movsb
mov
ds
pop
mov
jge
inc
pusha
add
dec
fcoms
mov
xlat
mov
lahf
popf
add
push
lods
sbb
xor
in
jp
pusha
pop
push
mov
xor
popa
adc
jecxz
ret
mov
lock
rcrl
or
repnz
scas
aad
icebp
pop
mov
sbb
adc
inc
mov
xchg
mov
loope
iret
xbegin
inc
out
pop
pop
inc
loop
pop
lock
mov
daa
dec
sbb
mov
and
dec
jl
mov
rolb
and
loope
orb
mov
pop
les
push
cmp
inc
dec
push
dec
jecxz
shrl
ds
fxch
jmp
sub
imul
sub
jb
and
ss
iret
and
pop
xor
movsb
sbb
mov
jle
sub
push
arpl
xor
cld
les
jg
arpl
cmpsb
lahf
sub
xor
imul
dec
aas
popa
mov
fs
cmp
add
int
cmc
add
test
into
push
sahf
dec
jo
shlb
xchg
movsb
xchg
cmc
mov
inc
push
mov
mov
andb
test
aaa
cltd
sub
adc
push
test
rclb
jo
pop
jp
jp
scas
roll
rol
jo
sub
push
cltd
mov
mov
ds
adc
xchg
push
lea
sub
mov
and
dec
inc
and
xchg
pop
mov
xlat
add
mov
jns
sbb
xor
adcb
ret
insl
dec
jle
paddq
data16
ret
hlt
imul
insb
xor
xchg
push
mov
mov
jmp
loop
movsb
sbb
sar
jle
adc
flds
mov
pop
pusha
or
out
mov
fcompl
movsl
inc
and
in
push
jl
int
addr16
add
scas
cmp
xchg
je
adc
mov
add
mov
and
mov
and
jnp
add
push
adc
dec
mov
or
fnstenv
push
inc
mov
cli
sub
arpl
std
pusha
pop
ss
inc
hlt
sbb
xchg
mov
and
outsl
mov
pop
cmp
push
and
push
stos
mov
fidivrl
out
lcall
aaa
sbb
mov
mov
xor
cmp
fildll
movsl
mov
dec
mov
dec
jp
adc
or
js
xchg
sbb
les
daa
loope
adc
adc
jo
dec
add
fidivl
xchg
sub
dec
jae
cmpb
mov
pop
fistpl
pop
stos
and
cmpsl
shrl
clc
sub
stos
and
xchg
iret
aad
sti
inc
jne
int3
scas
loop
jmp
sbb
cli
andb
mov
sbb
sbb
and
lcall
mov
or
or
arpl
xchg
arpl
insb
or
mov
dec
push
cmp
test
cs
outsl
enter
aad
ds
lods
shr
subb
js
lret
mov
rcll
or
push
inc
shl
bound
jmp
cmp
mov
jns
int3
jno
xchg
sub
lcall
stos
mov
jns
sbb
mov
mov
ljmp
inc
jmp
push
or
lock
push
int
sbb
xor
push
mov
mov
bound
aam
test
dec
adc
dec
sbb
hlt
sti
sub
sbb
stos
inc
ret
adc
or
mov
mov
je
jo
pusha
pushf
adc
sub
mov
cmp
xor
push
loopne
sub
push
push
xchg
loope
pop
imul
push
pop
pop
scas
xchg
cmp
orb
fisttps
pop
jbe
add
jbe
in
inc
lods
dec
cwtl
push
sbb
push
mov
mov
rorb
repz
stc
dec
or
in
mov
dec
inc
jnp
push
adc
sbb
decb
popf
cmp
les
aad
lock
jmp
sbb
fwait
adc
stos
ret
or
repz
mov
addr16
cmp
fstps
cmp
xor
sarl
or
ret
xchg
stos
xlat
or
xend
mov
sti
mov
mov
push
rorl
mov
inc
loope
in
sub
repz
or
divl
negl
in
sub
push
hlt
lret
hlt
insb
lea
jnp
repnz
out
sti
insl
or
movsl
inc
enter
testb
out
mov
loope
xchg
mov
shll
rcr
clc
cmp
jnp
stos
ja
mov
addl
stos
xor
insb
inc
xchg
or
pop
pop
andb
imul
leave
sahf
sub
movsl
cmp
out
pusha
dec
lret
adc
aaa
cmp
in
in
popa
gs
fwait
test
loope
pop
jae
inc
mov
push
es
xchg
xchg
ret
mov
or
pop
das
rorb
ljmp
cmp
popf
test
cwtl
movsl
adcb
or
adc
xor
mov
loope
out
pop
lods
lahf
and
arpl
test
lock
xchg
ret
in
divb
sbb
test
pop
fnstcw
mov
aad
in
fwait
mov
daa
dec
mov
push
int
adcb
lds
out
pop
jnp
sti
ret
sbb
sub
sbb
mov
pop
cs
lret
mulb
inc
lea
add
xchg
or
xchg
or
cmc
mov
xchg
add
cmc
jae
jmp
roll
test
mov
pop
lcall
out
in
jo
clc
jecxz
or
jp
sbb
adcb
jae
lcall
jp
aad
push
sbb
jno
xchg
lods
aam
les
popa
data16
movl
lcall
sub
jbe
mov
call
dec
int
mov
jns
insb
sub
icebp
adc
or
xlat
nop
in
and
and
lcall
out
aaa
fidivs
push
push
sbb
xchg
dec
gs
ret
stc
inc
std
sbb
adc
ja
dec
popa
cwtl
filds
loope
es
sti
mov
pop
push
sahf
jns
pop
movl
xchg
jae
icebp
dec
xchg
adcl
lds
out
test
mov
fbld
mov
sbb
cli
xlat
test
jge
jg
lcall
pop
cld
clc
sbb
shlb
add
xor
xchg
sbb
rorl
leave
movl
aad
inc
jae
cltd
addb
sbb
or
jge
inc
shrb
ljmp
pop
jnp
movsl
cmp
fmul
fstps
fucomip
ds
clc
neg
rorb
mov
adc
or
xchg
xor
leave
sti
out
pop
add
adc
lahf
mov
adc
xorl
mov
aam
xor
fistl
push
jl
ret
xchg
jp
les
int3
or
inc
stc
pop
mov
cli
iret
pop
rcrl
movsb
repz
xor
dec
jbe
push
lds
add
inc
or
pop
fcomi
aaa
ds
mov
imul
lcall
pop
cltd
jmp
pop
loop
cmp
outsl
push
cmp
adc
cld
pop
out
pop
mov
call
or
mov
les
lock
lods
fstps
leave
clc
fwait
or
mov
dec
mov
rorl
in
fistps
pushf
inc
fdivp
mov
mov
into
mov
add
jl
call
push
lahf
shll
mov
js
xchg
add
sub
aad
in
or
outsb
pop
movl
jle
lret
push
sbb
xchg
pushf
cmc
sbb
dec
lahf
lcall
fwait
dec
popa
jp
mov
movsb
cmpsl
mov
insb
ds
push
or
adc
add
dec
sahf
pop
push
sbbl
inc
xor
fst
mov
push
adc
inc
xor
mov
movsl
fimuls
add
je
mov
pop
xchg
mov
iret
mov
popf
push
ja
mov
idivl
addl
or
cmc
xor
cmp
lret
mov
test
lods
pop
mov
fbld
test
pop
mov
lret
fnstsw
xor
js
or
outsb
loopne
je
inc
mov
call
jecxz
mov
cmp
jae
je
sub
push
dec
mov
jg
loop
push
pop
or
pop
push
and
mov
sub
cmpsl
sbb
aad
cld
iret
out
cli
cltd
jmp
int3
jne
sti
and
test
mov
lds
lret
scas
sub
adc
push
push
push
mov
or
jp
push
test
add
push
xchg
push
sub
inc
sahf
movsb
gs
mov
sahf
sbb
les
and
mov
mov
insl
mov
test
movb
outsl
outsb
in
test
pop
mov
inc
stos
aaa
fwait
into
lcall
inc
fwait
hlt
and
push
jl
push
dec
movsl
dec
andl
out
xchg
insl
cmp
and
dec
and
jge
mov
push
fcoml
pushf
xchg
mov
icebp
insb
push
mov
repz
lock
cmpsl
loopne
pop
mov
enter
xchg
clc
pop
mov
subl
movsb
inc
fistps
decl
mov
push
push
sbb
push
mov
mov
int3
xchg
aaa
mov
and
mov
add
fnstenv
out
sbb
ljmp
out
lods
lock
jmp
add
mov
js
ja
rcll
jmp
sahf
sub
icebp
lds
sbb
jbe
add
into
dec
popa
mov
loope
mov
out
es
enter
jge
adc
lret
stos
push
test
ret
insb
shl
push
mov
ffreep
inc
pusha
cmp
dec
xor
icebp
mov
in
rcrb
dec
sbb
jnp
jae
xor
stos
push
xchg
repz
fnsave
jp
sbb
outsb
mov
xor
or
les
xor
arpl
add
jnp
or
loope
mov
pop
scas
stc
xchg
push
test
mov
mov
lods
push
enter
or
cmp
pop
ds
ss
test
xorl
cli
and
int3
push
inc
aad
mov
std
or
mov
clc
popa
cmpsb
or
pop
insb
jecxz
xor
pusha
pusha
jl
xchg
pop
les
sbb
mov
cmpsb
mov
xchg
mov
nop
mov
push
sbb
push
jno
ss
push
movsb
inc
sbb
or
in
jae
movsb
dec
or
out
sbbl
xor
inc
js
jne
xchg
xchg
cmp
push
repz
sub
ja
loope
cli
test
lock
and
in
cs
adc
or
aaa
and
imul
xchg
cld
repnz
inc
push
push
lock
popf
shrl
xchg
sahf
jecxz
shrb
lahf
mov
test
push
pop
les
push
aas
leave
and
fcompl
repnz
das
test
cmp
pop
iret
add
cmpsb
rcrl
es
or
jb
test
shr
pop
xor
pop
lret
push
ja
ljmp
cmp
adc
fistpl
jecxz
or
xor
jbe
xor
test
rcl
push
mov
xchg
push
pop
or
stos
stos
test
inc
jns
loop
dec
in
or
inc
dec
push
lods
fs
mov
mov
cwtl
jbe
push
out
ret
bound
lock
xor
push
push
fisttpl
test
lahf
dec
push
push
xchg
add
push
inc
std
div
std
mov
lret
add
cmp
push
aad
push
push
nop
scas
sub
cmp
sbb
cmp
or
push
jp
popf
jg
xchg
int3
cli
pop
scas
aaa
shl
mov
cld
pushf
xchg
mov
scas
fsts
lea
mov
in
imul
sahf
fs
cmp
loop
mov
out
mov
and
loopne
clc
pop
or
out
xor
jbe
xlat
xor
dec
adc
mov
add
cltd
mov
frstor
fadd
fs
push
fistps
fisttpll
adc
int3
or
adc
jae
sbb
xor
test
jle
jbe
loopne
cmp
fmull
in
sbb
loopne
mov
mov
insb
cmp
pop
fsts
push
inc
outsb
nop
mov
cmp
out
data16
sub
xor
fsub
cmc
mov
add
nop
addr16
inc
xor
orb
sub
sub
out
jge
mov
push
xchg
push
fistpll
adc
or
outsb
es
xor
xchg
mov
test
rol
movsb
leave
jcxz
cmp
mov
bound
cli
dec
mov
outsb
mov
xchg
fnsetpm(287
mov
dec
pop
sub
out
les
dec
xor
outsl
add
shll
mov
jge
add
ret
rcrl
pop
xor
add
jle
sub
inc
in
bound
jbe
adc
rcr
loope
popf
popa
gs
xchg
xor
lea
jg
xchg
and
aaa
loopne
loop
cmpsb
aam
test
jg
mov
sbb
cmp
inc
adc
mov
push
std
popa
jne
mov
pop
push
cld
fidivrl
andl
xchg
lock
stos
fistpll
push
sub
mov
fbstp
xchg
and
pop
jno
sbb
lahf
test
ds
rol
loop
jl
mov
cmp
cwtl
mov
imul
shll
inc
scas
sahf
cmp
repz
cmp
jl
pop
std
shrl
fiadds
mov
fcmovne
xchg
imul
add
data16
push
pop
fldcw
inc
or
bound
inc
inc
mov
or
mov
test
jae
inc
shr
or
aam
dec
adc
rcll
outsl
and
mov
jae
mov
filds
xchg
pop
outsl
das
xchg
iret
push
push
cltd
push
sahf
pop
cwtl
je
int
loope
push
aad
es
mov
imul
das
popl
xor
movsb
xchg
sahf
dec
mov
inc
ret
in
cld
test
aas
arpl
push
xchg
mov
mov
sub
adc
stc
int3
mov
aam
push
mov
in
jno
lret
inc
jecxz
divl
mov
ja,pt
pusha
in
insb
std
dec
std
ja
and
jns
inc
and
ljmp
nop
add
fcompl
dec
and
push
pop
es
std
loope
mov
mov
fstpl
sub
mov
insb
push
push
push
push
push
scas
repz
imul
arpl
movsb
cs
imul
rcr
fidivrs
fdivrl
js
xchg
jecxz
dec
jecxz
mov
aaa
or
sti
out
test
push
repz
and
and
cli
enter
cld
mov
adc
xchg
mov
insl
stos
jp
inc
add
ljmp
int3
mov
mov
inc
sahf
mov
in
pop
xlat
ret
mov
mov
sbb
push
fisubrs
inc
popa
mov
push
inc
sub
xlat
mov
xor
fs
pop
jecxz
push
pop
add
mov
hlt
outsl
jno
jno
in
jecxz
pusha
cld
fnstsw
mov
fidivs
pushf
mov
and
sbb
pop
mov
jb
orb
and
mov
mov
int
in
cld
notb
imul
jge
cmp
aas
cmp
pop
add
loop
push
dec
iret
hlt
cmpb
inc
sub
jae
cmpsb
xchg
or
pushf
mov
outsb
std
xchg
adc
cmpsb
jmp
fimuls
insl
xor
and
test
shl
sub
cmp
jle
mov
pop
cmp
popa
mov
xor
sbb
and
stos
sbb
ljmp
xchg
test
sbb
in
fildll
rclb
inc
inc
jb
xchg
cld
xor
adc
adc
into
clc
insl
scas
adc
out
xor
adc
cmp
xor
les
inc
mov
pop
dec
and
pop
mov
loop
fsubs
xor
xchg
dec
stos
mov
dec
push
or
loope
mov
insb
pusha
inc
ret
nop
jno
ret
xor
aam
scas
test
push
scas
out
aas
jb
orb
push
or
mov
mov
inc
ret
jecxz
mov
add
inc
add
ficoml
in
cmp
fwait
and
add
dec
xor
insb
cmpsb
and
imul
xchg
test
addr16
jmp
or
loope
add
add
inc
xor
sbb
test
sbb
hlt
sub
cli
mov
mov
iret
push
ja
pop
fcoml
mov
pushf
scas
and
pop
mov
clc
rclb
sarl
repnz
addr16
incb
shlb
mov
js
or
and
mov
pushf
push
fwait
mov
xor
loope
sti
xor
or
or
insb
and
adc
jbe
imul
mov
mov
push
and
int
es
bound
fbld
fs
movsl
jne,pt
xor
xor
mov
cmp
ds
bound
sub
in
pusha
outsb
push
mov
sub
xor
sahf
push
into
sub
mov
jg
cmc
mov
mov
push
aaa
xchg
push
rorl
xchg
mov
std
jnp
and
scas
sub
or
add
sub
push
mov
xor
xor
cmpsl
loope
ret
int3
xchg
int
xor
test
in
sub
sti
ficoml
push
flds
jne
mov
idivl
das
movsb
adc
ret
mov
sub
scas
mov
test
fnstsw
lret
sbb
lods
lcall
cs
lcall
imul
ret
leave
and
fcmovne
mov
xchg
add
mov
jle
or
mov
out
add
das
fdivl
jne
fstl
cmp
aaa
popf
out
adc
push
imul
mov
sbb
in
and
out
iret
pop
adc
aad
rol
push
mov
or
pushf
adc
push
xor
cmpl
push
dec
in
stos
xchg
cli
andb
or
sbb
adc
pop
jnp
cli
and
cmp
xor
in
stos
mov
nop
push
insl
stc
mov
sti
push
push
pop
fisubl
or
fwait
and
mov
jg
xchg
lcall
xor
fcmovnu
stc
xor
push
inc
xchg
rcrl
lret
adc
add
and
push
test
rclb
mov
imul
sbb
lods
aad
int
jecxz
xor
stc
imul
xchg
insl
sbb
jg
inc
icebp
mov
jb
aad
or
pop
shlb
rolb
pop
rcl
out
jmp
pop
lret
popf
out
fldl
cmc
and
mov
dec
jle
cmc
mov
fsub
mov
mov
cwtl
push
jle
dec
dec
pop
ret
cmp
lods
shlb
in
jle,pn
ds
mov
icebp
fisttpll
mov
cmp
xor
out
inc
xchg
mov
and
out
out
mov
out
mov
adc
mov
int3
xor
jle
jns
popa
popf
arpl
adc
adc
popf
pop
sub
mov
adc
test
lods
inc
fwait
jns
divb
lahf
cmp
in
push
pop
fstp
mov
cltd
aam
xor
hlt
fisubrs
jae
in
int
push
sbb
adc
xlat
or
mov
cmp
inc
dec
dec
dec
iret
push
sti
mov
cltd
aas
and
out
mov
into
push
movsb
xchg
pop
xor
in
mov
inc
in
sarl
xor
lcall
scas
ret
inc
sti
xchg
pushw
shll
mov
mov
je
arpl
jmp
pop
and
loopne
xlat
lret
fldln2
fcomps
leave
popa
aaa
leave
pop
pop
mov
insl
add
test
aam
movsl
or
ja
inc
loopne
xor
cmpsb
sub
lret
or
mov
daa
jmp
mov
xchg
push
sbb
jbe
nop
dec
inc
pop
sti
dec
sbb
push
mov
add
add
das
jnp
popa
push
inc
sti
adc
in
iret
inc
mov
insl
sbb
xor
imul
in
mov
fstps
or
xor
iret
imul
pop
pop
pushf
lock
cmpsl
inc
mov
cmp
mov
fsqrt
movsl
out
xchg
daa
shrb
sub
aaa
push
fbld
cs
cmc
lcall
lret
data16
insl
sub
push
sbb
cmp
adc
nop
pop
insb
jb
push
hlt
ljmp
mov
stc
and
fcmovnb
rcrl
mov
out
mov
cmp
pop
popa
mov
fbld
ljmp
jmp
xor
push
pop
jno
test
rclb
negl
in
in
add
push
or
ds
std
xor
mov
dec
icebp
imul
pop
notb
mov
rcl
pop
pop
xor
mov
arpl
repz
into
les
cld
push
sbb
add
ss
mov
inc
push
xchg
lds
test
scas
xor
cltd
aad
out
add
lahf
lahf
iret
jmp
adc
pop
fstps
cmp
adcl
dec
push
xor
pop
aas
gs
adc
and
xchg
xor
inc
imul
mov
jp
sub
lea
ret
mov
jl
mov
cmpsl
int3
pop
sar
psubw
dec
bound
test
gs
sbb
mov
lods
pop
data16
outsb
scas
xchg
mov
xchg
cld
rcrb
jb
sub
cmc
std
nop
add
in
mov
pushl
pop
xchg
add
in
xor
sub
adc
pop
test
faddl
sarb
adc
mov
or
cmpsl
jne
xchg
mov
xor
xchg
divl
sub
jg
sbb
call
jg
cs
pop
outsl
popf
mov
pop
in
dec
repz
pop
pop
sbb
into
sbb
mov
push
repnz
push
mov
ds
sbb
inc
jg
and
add
dec
jae
out
jns
mov
push
xlat
fsubs
and
or
push
dec
inc
pop
leave
decb
rorb
xchg
int3
fldt
and
mov
adc
dec
or
mov
jle
fidivs
mov
xor
mov
in
or
xor
arpl
inc
sbb
sahf
mov
cmp
inc
fcmovnu
adc
pop
push
sarl
fnstsw
and
cmp
lods
mov
push
mov
sub
mov
std
and
push
aad
jbe
push
test
pop
mov
out
mov
push
jo
out
mov
mov
mov
mov
or
fcompl
and
les
dec
dec
test
cmpsl
xchg
mov
add
test
inc
sub
js
mov
xor
sub
mov
fldcw
inc
lcall
shlb
cmp
pop
sbb
cltd
fdivs
cmp
sub
push
repz
repnz
sbb
bound
clc
enter
push
fmul
sub
cs
jae
and
push
out
push
out
inc
imul
jmp
jle
jb
xor
ja
xchg
mov
sbb
or
cmc
mov
dec
popf
mov
add
sbb
insl
movsl
xlat
and
xchg
xchg
fistpll
adc
clc
sti
in
pop
les
mov
arpl
fwait
movsl
stc
sbb
movsb
mov
add
call
sarl
lods
mov
sbb
inc
push
fimull
push
test
xor
mov
andb
push
into
mov
inc
pop
push
les
add
or
mov
fists
adc
jb
pop
punpcklbw
notb
imul
pop
aas
jae
pop
aas
mov
rclb
jb
pop
mov
out
test
rcll
mov
lcall
bound
and
xor
aam
testl
fimull
in
and
pop
fimull
jl
add
xor
loop
ficompl
inc
filds
inc
loop
dec
jns
out
mov
sub
in
dec
add
mov
pushf
arpl
cli
xor
cltd
loope
hlt
iret
or
and
push
in
fwait
aas
push
popa
movsl
sbb
dec
cmp
js
mov
push
push
sbb
dec
filds
ret
loop
in
inc
sbb
hlt
cmc
mov
popf
jns
sub
das
lock
jns
mov
jnp
inc
ja
pop
es
cmpsb
ret
xor
jno
add
dec
cmp
adc
push
ja
or
repnz
mov
dec
mov
pop
fmuls
pop
adc
mov
adc
lods
jb
dec
rclb
mov
cmp
shl
test
sub
mov
push
xlat
mov
push
icebp
jae
jnp
and
cmp
xchg
jnp
mov
pop
push
jb
jne
mov
pop
cmp
testl
mov
mov
sahf
iret
fldcw
push
lods
dec
xor
or
cmp
imul
xor
loope
push
pop
dec
mov
or
xor
dec
push
enter
sub
mov
out
aam
cltd
xlat
imul
sbb
jg
wbinvd
sbb
push
dec
add
sub
push
pop
sahf
dec
push
and
decl
mov
xchg
inc
gs
xchg
add
cld
xor
lret
mov
cmp
sbb
sub
adc
xor
push
add
mov
mov
aas
ret
sbb
fnsave
lods
inc
and
adc
stos
mov
or
aas
lcall
mov
test
mov
inc
mov
jp
loop
stos
sub
rclb
xchg
popf
push
out
mov
jle
pushw
pop
test
pop
jp
lret
insl
sub
sub
mov
pop
mov
mov
ror
jge
std
push
dec
xchg
sub
imul
adc
pop
mov
test
repnz
push
nop
aaa
mov
scas
cmc
cs
mov
mov
mov
aaa
mov
insl
subb
push
xor
push
pop
pop
and
inc
clc
ror
fisttps
xchg
inc
outsl
sbb
push
test
xor
or
testb
iret
add
fucom
dec
xchg
inc
fs
push
mov
and
sbb
shlb
xor
fldcw
mov
stc
fdivrl
inc
mov
sbbb
aam
lcall
cmp
jns
cld
dec
sub
pop
sub
ffree
outsb
push
mov
shll
aaa
in
cmc
jecxz
jbe
ficompl
mov
js
push
loopne
lret
adc
mov
shrl
out
and
mov
mov
icebp
cmp
call
mov
adc
lcall
jge
shl
leave
sbb
rcl
cmpsl
sub
lret
adc
xchg
sub
dec
lock
push
icebp
orl
stos
push
icebp
xchg
rolb
jecxz
mov
push
popf
jae
dec
into
mov
dec
sbb
mov
test
std
cmp
das
fisubs
out
in
in
bound
sbb
data16
mov
fbld
data16
mov
loopne
idivb
push
imulb
mov
pop
push
sar
mov
pop
jmp
jge
mov
xchg
std
dec
and
push
push
push
aaa
fcomps
scas
push
popf
xor
add
jecxz
pusha
cltd
outsl
mov
shll
mov
out
dec
add
jle
pop
stc
cwtl
in
fs
loope
test
lea
outsl
cmp
inc
pop
sbb
cmpsl
mov
push
ficomps
fistpl
leave
popa
and
dec
fdivrp
pop
loopne
stos
adc
negl
jae
rolb
mov
or
arpl
mov
divl
jbe
nopl
aad
pusha
dec
ret
pop
cmp
mov
lea
mov
data16
and
mull
or
std
push
lds
add
daa
fs
push
push
lods
sub
stos
jnp
jg
ss
xchg
shl
mov
pushf
mov
scas
fwait
mov
cmp
sub
or
sti
cmc
jo
sub
pop
filds
fmuls
stc
mov
outsl
lcall
repnz
pop
test
cmp
push
mov
cmpsl
xchg
fisubrs
leave
ret
mov
inc
xchg
jmp
sbb
icebp
out
sti
mov
mov
and
mov
jbe
insb
aam
mov
add
out
push
ja
sbb
xchg
cmp
test
xlat
add
fdivrl
into
mov
mov
xor
xchg
shll
xchg
inc
xor
loopne
pop
fdivp
loopne
lds
out
jae
fcmovnu
mov
pop
scas
xchg
test
sbb
sbb
pop
lret
aam
stos
mov
add
ffreep
lods
xor
in
out
push
cmpsb
imul
jl
loopne
jmp
arpl
dec
sbb
xchg
dec
jge
add
shl
and
add
mov
sub
in
fsubs
dec
test
lea
stos
jmp
dec
cmp
sub
out
xor
xchg
fisttpll
bswap
dec
into
pop
lret
push
insl
lcall
sbb
mov
fistpll
lcall
dec
cltd
pop
rcll
mov
adc
fadd
cli
or
mov
nop
sbb
xor
sarb
cltd
sbbb
push
xor
jnp
ja
rcpps
pop
pop
sub
cmp
mov
pop
push
jle
fstl
outsb
outsl
add
ja
mov
loop
inc
pop
popa
fmull
push
cld
push
stos
rclb
add
pusha
push
xchg
cmp
sbb
inc
dec
mov
push
add
insb
cmove
lahf
push
enter
inc
cmp
test
out
mov
jne
adc
pop
jg
push
sub
enter
rorl
movsl
cli
rorb
lcall
pop
pop
push
add
bound
push
xchg
outsl
sub
movsl
fiadds
shl
pusha
sbb
xchg
out
insl
push
jo
cwtl
inc
subb
push
out
out
mov
icebp
dec
aad
icebp
fdivl
pop
mov
add
scas
popa
mov
push
adc
fwait
inc
enter
cs
or
jg
cltd
daa
jle
mov
or
aad
pushf
mov
inc
push
shlb
shll
xchg
shrl
jecxz
jno
mov
push
addb
or
lcall
add
lods
fwait
sbbl
test
mov
push
push
mov
adc
mov
or
mov
pop
cwtl
movsb
add
imul
sbb
or
aam
add
test
lea
scas
jecxz
add
enter
dec
push
push
add
fwait
aam
adc
shll
mov
inc
stos
or
xchg
jo
int3
js
cmp
ds
mov
xor
xchg
nop
pop
ss
sub
xchg
xchg
mov
lea
mov
or
cwtl
push
pop
imul
out
or
sub
sbb
out
pop
sbb
cwtl
loop
and
sub
jmp
imul
push
mov
fs
xor
mov
jb
loope
sarb
xlat
push
js
lcall
rcr
stc
xor
movsb
into
outsb
sbb
das
das
cmp
push
hlt
mov
jg
int3
or
inc
subb
jbe
and
add
add
jecxz
mov
testb
loop
outsb
lods
dec
sbb
sbb
jno
sbb
jo
icebp
outsl
enter
mov
nop
in
adc
mov
mov
out
dec
cs
mov
mov
mov
aam
bound
xchg
gs
iret
aaa
es
cmp
outsl
cmp
sub
test
mov
sbb
scas
icebp
and
repz
sub
mov
loope
xor
test
test
jl
test
outsb
sub
inc
arpl
inc
dec
xor
push
mov
sti
fisttpl
fidivrs
insl
mov
xchg
hlt
jbe
sarl
xchg
jb
addl
stc
stos
ficomps
adc
test
or
mov
jg
xor
jb
jl
pop
and
sbb
jecxz
and
lret
mov
lcall
call
in
pop
fsts
mov
adc
cmpsb
xchg
imul
loopne
mov
push
popf
add
mov
pop
mov
lds
popa
push
shr
pop
mov
out
xchg
adc
pop
sub
nop
jbe
leave
sbb
pop
jno
jns
xor
xlat
push
push
outsl
jge
or
sbb
push
orb
mov
xchg
shll
mov
leave
lock
mov
fstpl
out
dec
add
mov
push
push
xor
das
ss
mov
ds
xchg
mov
fnstcw
jno
orl
mov
pop
inc
ja
in
das
cmp
in
and
sub
inc
sbb
mov
stos
lret
frstor
dec
pop
insl
ret
cltd
mov
xor
mov
jnp
arpl
mov
out
or
fwait
aad
cs
test
pop
cmpsl
pop
pop
cwtl
sbb
push
addr16
pop
ja
in
test
mov
cmp
mov
xchg
push
into
xchg
or
out
cwtl
aaa
enter
sub
lret
popf
sub
mov
sbb
test
rcll
cmpsb
sub
sbb
je
dec
push
scas
int3
push
in
mov
jl
cmpsl
push
ljmp
mov
cwtl
mov
adc
xchg
mov
sbb
insb
and
loop
ds
ret
cli
lds
inc
in
into
xchg
and
adc
lcall
imul
dec
cmp
jb
or
sub
sbb
aaa
mov
fidivrs
hlt
lret
bound
cmpsb
and
pushf
dec
iret
dec
fimuls
mov
push
sbbb
nop
xor
fsub
sub
push
jne
loopne
je
bound
jecxz
psubusw
mov
cs
and
out
push
les
call
lods
rol
fdivl
jns
fwait
and
sahf
sub
push
sub
and
add
xchg
push
mov
push
in
daa
add
jmp
inc
sub
jg
mov
cmp
mov
cmp
lock
adc
push
sub
cmpsl
test
adc
pop
dec
lods
cld
bound
add
inc
and
addr16
mov
mov
or
call
xchg
cmp
mov
out
jp
movsl
and
cmp
cmp
aas
sub
cmp
popa
out
push
sahf
pusha
xchg
xor
aad
gs
xchg
mov
mov
js
cmp
in
inc
lahf
push
ljmp
add
push
cs
das
push
pushf
xor
pop
pop
mov
pop
jp
sub
mov
gs
inc
push
icebp
fucom
hlt
dec
out
jmp
das
outsb
add
mov
loopne
mov
es
sub
xchg
loopne
and
sub
popa
fbstp
stos
cld
inc
ret
sbb
das
div
insb
nop
dec
cmc
pop
pop
fdivp
push
inc
std
mov
xor
pusha
xchg
imul
aad
xor
sub
cwtl
sbb
or
xchg
jbe
lahf
sub
adc
das
cs
pop
xlat
arpl
adcl
or
xlat
mov
popf
inc
mov
pop
dec
pop
xor
add
call
in
inc
repz
outsl
int
ret
stos
cmp
cmpl
ljmp
std
pop
cwtl
and
nop
add
push
nop
shll
int3
sbb
push
or
out
shll
pop
sti
jge
shl
daa
jg
leave
pop
inc
push
ja
xchg
orl
mov
aaa
sub
mov
push
shl
dec
movsb
aas
pop
fstpt
in
and
xlat
fldenv
icebp
je
push
shlb
jbe
not
sub
push
fs
in
jmp
and
sub
sbb
pop
sti
lahf
pop
in
cli
sub
xchg
and
in
lds
jg
mov
fldl2t
leave
aaa
fmuls
jns
test
push
shlb
cli
sbb
aas
ss
inc
into
test
mov
popa
jl
adc
test
dec
pop
popa
push
clc
pop
lret
inc
fnstsw
fsubrl
sub
mov
push
aad
shll
inc
loope
aas
and
js
pushf
iret
sub
push
mov
xchg
and
or
inc
or
out
jne
or
into
jne
bound
jecxz
cmpb
lds
jbe
hlt
jne
jbe
inc
scas
push
inc
ss
add
in
rcrb
stc
cltd
test
or
xchg
rcrl
lret
jl
and
mov
mov
in
mov
mov
sub
aad
xor
xor
in
xchg
ja
ss
mov
push
jle
ljmp
out
imul
push
rdpmc
add
mov
jmp
adc
push
mov
jo
imul
cmp
das
mov
repz
stos
les
out
shrl
xor
push
mov
mov
pop
adc
dec
fbld
or
adc
push
xchg
popl
mov
xchg
es
pop
pop
rorl
nop
popf
mov
fldl
cmp
pop
mov
imul
sub
mov
and
aad
sub
mov
inc
repz
mulb
inc
xchg
cmp
dec
aad
and
lret
sub
out
popf
or
dec
lods
push
out
pusha
or
or
xchg
bound
bound
jnp
mov
jbe
negb
add
outsb
inc
adc
fsts
add
pop
testb
cmp
repnz
test
xchg
push
aaa
ja
pop
in
cmp
ja
and
mov
jns
inc
fadds
adc
test
out
push
push
sub
dec
aas
fs
gs
test
mov
mov
mov
test
dec
icebp
cmp
in
push
push
sub
les
mov
jmp
cmp
in
hlt
fbld
fisubs
out
ror
hlt
repz
add
pop
push
sbb
popa
push
sbb
popf
es
jbe
cmp
mov
mov
and
pop
mov
mov
lods
inc
and
test
in
andb
xor
mov
push
test
dec
inc
mov
mov
shlb
jcxz
xor
jae
dec
gs
daa
mov
cmp
xor
fnstcw
pop
stc
pop
adcl
adc
and
arpl
cmpsb
mov
pop
mov
lock
clc
xchg
dec
cmp
shr
dec
and
mov
loopne
jp
cmpsb
mov
pop
loopne
xchg
push
rcrl
adc
pushf
das
add
mull
je
xchg
divl
push
push
jg
pushf
jbe
pop
ret
mov
lock
lcall
ljmp
and
pop
lds
jae
mov
sub
mov
push
inc
fisttps
jl
mov
mov
xor
mov
cli
jnp
add
jno
ret
jbe
inc
hlt
sbb
aas
push
test
and
lcall
sub
and
shrl
push
enter
aaa
cmp
test
add
jg
jo
cltd
stos
adc
sahf
test
bswap
lock
ss
and
push
jno
orl
repnz
xchg
in
lock
scas
jmp
mov
xchg
xor
push
bound
xchg
and
or
mov
es
addr16
aad
jb
inc
cld
loop
mov
xchg
int
lea
push
xor
adc
inc
adc
enter
push
cmp
mov
ret
jbe
mov
xchg
lods
out
fsubl
pop
fisttpll
adc
cs
mov
mov
inc
xchg
insb
movsb
repnz
ja
sub
add
and
test
jmp
enter
les
dec
cmp
imul
push
pop
inc
adc
xor
enter
mov
cmp
nop
insl
in
daa
enter
or
adc
and
in
sbb
and
test
add
mov
fsubrp
out
lret
cmp
xchg
inc
sub
sti
lret
ret
mov
mov
lock
mov
ret
mov
push
sub
sbb
or
push
add
lock
faddl
mov
sbb
adc
mov
dec
test
mov
jbe
xchg
mov
popa
call
push
cli
enter
push
gs
sbb
mov
jp
jg
adc
ja
xorl
xor
ljmp
mov
popf
cmpsb
cwtl
lcall
dec
adc
or
test
cmc
loopne
and
cmp
cmp
es
stos
ret
push
popf
sub
mov
lods
pop
rcrb
jnp
nop
testb
push
jo
fwait
pop
hlt
mov
inc
outsb
lock
jae
sbb
je
scas
call
jnp
in
mov
mov
adc
popf
call
jl
imul
popa
lods
movsl
sub
push
dec
push
or
add
sbb
ss
mov
js
inc
cmp
scas
sbb
out
xchg
int
fisubs
inc
bound
sarl
shl
mov
sbb
pop
or
addps
test
cmp
cld
cmp
pop
shll
and
test
daa
call
test
mov
shr
movsl
fs
data16
and
mov
iret
push
adc
aas
add
jns
lock
notb
adc
xor
fidivrs
xchg
inc
stc
mov
inc
fcmovu
aaa
pop
cld
addr16
pop
push
lods
mov
sbb
decb
std
mov
inc
xchg
int3
lock
data16
jp
mov
mov
cltd
aad
dec
fbld
gs
fs
nop
pusha
bound
dec
lahf
jb
scas
sti
sbb
sbb
orb
lods
fidivrs
adc
xchg
loope
sbb
sub
ja
xlat
mov
stos
inc
shld
repnz
imul
xorl
rcl
divb
repnz
mov
jle
sti
lea
cmpsw
clc
cmp
hlt
fidivrl
addr16
inc
add
push
push
pop
mov
dec
out
sub
ret
es
cltd
ret
fucom
xlat
ds
push
dec
cmpl
rolb
ja
shlb
mov
mov
mov
insl
cmp
out
jo
in
out
mov
mov
xor
cmp
dec
stc
loop
daa
lret
out
shlb
xchg
sub
inc
test
int3
or
dec
xchg
inc
incw
mov
in
mov
test
ret
cwtl
andb
test
xor
push
aad
inc
mov
push
or
add
xchg
or
movb
push
cld
mov
cmp
pop
cmovnp
sub
pusha
dec
mov
fs
mov
fidivl
jbe
sub
cmp
sbb
in
sbb
sbb
dec
pushf
test
mov
cmp
xchg
xchg
sbb
xlat
popf
sahf
mov
jns
push
mov
sub
je
sub
cmpsl
out
repz
fadds
and
test
mov
push
sbb
in
pop
lret
xor
push
dec
push
es
out
nop
xchg
dec
fiaddl
inc
pop
loope
and
pop
or
mov
cmp
jbe
ret
ds
daa
jecxz
bound
dec
adc
ss
mov
dec
pop
jb
pop
mov
mov
sbb
shll
dec
jmp
fdivl
stos
movsb
arpl
clc
mov
cmp
jo
iret
push
adc
xor
fcmove
repz
xchg
inc
mov
sbb
mov
inc
decl
cli
xor
fwait
adc
add
mov
outsl
jmp
pop
nop
push
negb
gs
xor
shll
test
fcoms
jge
push
xchg
inc
or
test
jecxz
mov
xchg
jecxz
loop
repz
pop
inc
out
enter
dec
lods
mov
push
aad
jecxz
xor
movsl
sahf
ja
sbbl
xlat
in
popa
test
push
push
jecxz
sub
mov
pop
xchg
jmp
adc
daa
cs
cwtl
ljmp
into
mov
dec
push
scas
xlat
jg
ljmp
add
sahf
push
popf
xor
inc
in
pop
sbb
outsb
fs
inc
inc
call
movsb
cmp
lahf
iret
xchg
sub
xchg
push
and
and
mov
lods
jb
adc
mov
fstl
xchg
or
in
xor
cmpsb
jge
mov
scas
enter
sbb
sarb
repnz
sub
adc
xchg
movsb
out
sbb
mov
lret
or
sub
mov
mov
or
mov
cmp
movsb
dec
in
lahf
inc
inc
sub
mov
int
fmull
xor
push
push
stos
adc
repz
gs
into
push
insl
lock
push
ss
mov
push
xchg
mov
mov
push
fstps
or
mov
imul
ja
ss
xor
inc
imul
xor
mov
xchg
inc
mov
and
mov
nop
cmp
cmpsb
mov
lret
out
xlat
in
mov
sbb
mov
mov
sub
and
dec
inc
sub
mov
fcmovnu
xor
xor
rcrl
imul
cmp
push
mov
ret
xchg
lock
mov
ret
adc
lcall
insb
jge
cmpsl
popf
flds
inc
fcoml
ds
int
push
ds
sub
mov
cmpsb
pop
cld
movsl
jnp
push
jge
in
fistl
jp
push
xor
adc
rorl
mov
ds
inc
sub
dec
xor
adc
sub
addl
je
imul
mov
and
popf
pushf
sbbl
xchg
aaa
xor
mov
mov
push
lds
mov
mov
sub
jae
inc
push
sti
sub
scas
dec
movsb
xor
sub
sub
lock
cltd
clc
mov
test
jne
xchg
jns
sahf
inc
ja
sbb
xchg
inc
jp
push
sbb
mov
ljmp
pop
int3
jnp
mov
mov
or
adc
stos
sahf
cmpsl
xchg
push
subb
inc
aaa
xchg
test
insb
fcoms
lock
fldcw
scas
mov
test
fildl
test
xor
and
mov
or
filds
jne
jl
mov
sub
aaa
and
shrb
pop
mov
add
pop
pop
push
adc
jmp
push
stc
leave
mov
add
pop
les
in
into
rcll
push
adc
or
andb
lock
add
xchg
and
mov
dec
shll
iret
adc
scas
or
loope
daa
cmpsb
inc
mov
stos
dec
out
nop
orl
lcall
int3
popa
sub
out
in
inc
and
mov
jne
mov
xor
sbb
dec
sbb
cld
mov
fbstp
mov
adc
fs
sbb
fwait
stos
fsubs
push
sub
das
adc
hlt
xchg
push
movsb
sub
dec
xor
inc
setne
test
push
sti
repz
xor
scas
inc
push
sbb
movsl
dec
inc
out
mov
xchg
ds
xchg
pop
cmpsl
pop
or
rol
jmp
mov
pop
sbb
notl
sbb
icebp
fcmovnu
jno
or
mov
mov
sub
inc
insb
stc
fcoml
fidivrl
popf
mov
lahf
mov
not
jle
and
sub
pmuludq
lahf
xchg
mov
std
dec
push
sbb
std
decl
push
cmp
mov
stos
mov
imull
jecxz
jbe
inc
test
adc
mov
pop
cmp
test
cmpsb
popa
pop
outsb
or
shrb
aas
sbb
adc
xchg
shlb
jg
sub
sti
mov
sub
dec
lock
outsl
sub
push
mov
fmul
icebp
pusha
dec
push
or
pop
repz
addl
outsl
in
cmpsb
lods
rorl
js
mov
mov
stos
cld
in
mov
dec
pushaw
dec
jne
lods
cmp
push
pushf
sbb
inc
or
mov
mov
cmp
sub
mov
mov
sti
sub
repnz
sarl
sbb
inc
push
jg
repz
popa
test
mov
lods
cmp
mov
aam
jne
mov
sbb
cwtl
test
scas
mov
insl
aam
std
outsb
inc
loop
or
mov
icebp
mov
cmp
or
jno
adc
and
test
loop
out
lds
iret
adc
dec
jecxz
or
dec
push
addl
insl
pop
ds
mov
jae
jno
notb
outsb
inc
repnz
pop
or
inc
hlt
add
mov
dec
pushf
es
and
and
sbb
data16
fisttps
mov
scas
les
test
test
xchg
xchg
stos
cmpsl
pop
and
daa
push
xor
enter
sub
test
imul
andb
cld
mov
imul
popf
test
jne
lods
lahf
js
repnz
mov
mov
pusha
mov
jle
push
inc
popf
sbb
icebp
push
xchg
test
mov
pop
or
pop
jne
xchg
xor
movb
sbb
add
shl
adc
jmp
test
mov
dec
std
fadds
adc
and
dec
fmuls
pushf
fimuls
mov
cltd
mov
jb
pop
loop
cmp
pop
dec
ss
imul
push
sbb
fisubrl
xchg
cmp
mov
inc
mov
pushf
push
jmp
mov
jecxz
ds
sti
adc
sarl
mov
lods
push
inc
sub
pop
lcall
rcl
cmp
aad
imul
inc
test
push
mov
push
fistps
xchg
mov
fs
scas
loop
test
cmc
lds
out
cmp
lret
lret
cmpsl
cmp
mov
iret
mov
mov
jbe
sahf
cmc
sbb
lods
into
std
das
hlt
adc
jge
jp
mov
or
mov
push
js
test
loopew
pop
daa
and
and
jge
pop
add
pushf
and
ret
roll
inc
mov
aad
cmp
mov
adc
jge
into
out
lods
cmpl
lea
adc
push
or
mov
lods
push
mov
mov
divl
xchg
cmc
adc
jbe
cmp
or
aad
leave
js
cld
dec
idiv
sub
sbb
nop
mov
pop
cmp
jno
dec
mov
cmp
je
jmp
xlat
adc
inc
jo
pop
and
daa
out
movsl
and
lret
mov
in
jo
dec
mov
xor
mov
fidivl
sub
xor
or
jmp
lcall
cld
test
pusha
xchg
daa
stc
pushl
adc
int3
into
ret
in
push
out
xchg
xor
or
ljmp
cmp
inc
dec
mov
jae
push
lret
inc
push
frstor
or
fimuls
flds
xchg
xor
rorb
pop
dec
iret
mov
lods
sbb
movups
cmp
or
repz
loop
jne
dec
push
push
adc
push
inc
cmp
shrl
fdivrl
into
mov
out
inc
les
mov
into
test
dec
aam
or
mov
xchg
pop
jno
popa
sub
lahf
sub
xor
xchg
in
pop
xor
cmp
jns
cmp
fidivrs
sbb
mov
add
mov
mov
mov
mov
ja
ljmp
sub
push
push
mov
push
pusha
repnz
scas
add
js
lret
xorps
imul
push
mov
adc
scas
mov
and
inc
lods
fildll
push
jae
out
mov
and
mov
xchg
in
ror
add
lods
addr16
mov
mov
add
jae
inc
and
or
repnz
mov
jbe
adc
mov
xor
xor
mov
mov
dec
or
sbb
movb
jne
jmp
js
out
mov
es
push
xor
mov
pop
and
movsb
adcb
mov
mov
push
adc
xorb
sbb
pusha
fdivrl
push
iret
lock
sub
mov
jmp
aam
push
in
gs
cmp
cmpsl
push
push
cmpsb
xchg
fmul
stos
gs
fistpll
lcall
jbe
in
cwtl
inc
inc
jle
adc
jae
push
mov
test
add
jnp
xor
cmp
lds
outsb
push
pop
xor
dec
lock
mov
fs
jg
add
pop
ficompl
cmpsb
pop
in
andb
push
adc
movsb
adc
arpl
mov
pop
pop
pop
mov
aaa
ljmp
jle
popf
loop
repnz
push
jnp
push
sub
push
cmp
test
stos
mov
out
add
push
add
icebp
mov
dec
in
mov
daa
lea
rolb
xchg
cli
push
pop
inc
xor
movsl
popf
lea
es
data16
cmp
test
jmp
mov
add
imul
notl
int3
mov
out
add
shll
popa
iret
pop
lahf
out
sub
out
cmp
rorl
push
test
cmc
mov
mov
xlat
test
inc
cli
jge
les
xlat
mov
call
dec
add
mov
ds
out
add
mov
jno
jbe
insl
cmp
mov
lret
mov
jecxz
push
or
cs
div
mov
sbb
cmpsb
subl
adc
inc
rclb
adc
cmpl
sub
mov
pop
repnz
int3
ficoml
jecxz
jmp
add
lret
stos
shll
push
cmp
and
and
xorl
lock
lods
push
sub
or
por
jle
xor
test
sahf
addr16
insl
out
movsb
push
mov
cmpsb
pop
test
jmp
inc
mov
movsl
fnsetpm(287
aad
cmc
jo
ss
vmovsd
pop
cmpsl
mov
sbb
loope
sub
out
stos
subb
jns
imul
or
pop
int
inc
mov
cmp
cmp
shl
jnp
sub
addl
mov
clc
aam
mov
lcall
xchg
jl
add
popa
cmpsb
cmc
xor
daa
lods
jne
clc
addr16
push
in
scas
rcll
out
je
jne
je
out
add
jmp
push
xor
stos
mov
xor
in
xchg
sti
sbb
dec
mov
mov
stos
adc
and
cmpsl
data16
fwait
cmp
leave
loopne
push
sbb
jae
cmp
sbb
fs
ljmp
push
pushf
ja
mov
outsb
leave
mov
inc
push
rcll
adc
aas
mov
sbb
leave
imul
sbb
mov
daa
ss
cmp
push
push
mov
lcall
sbb
add
jle
sub
nop
mov
fiadds
adc
outsb
clc
jno
sbb
mov
shl
jbe
pop
jecxz
mov
jnp
xor
in
cmp
jp
mov
lea
pop
lods
icebp
xchg
xorl
enter
pusha
jno
sub
pop
nop
add
sub
lret
cmp
push
sub
pop
pop
inc
cli
mov
adc
jge
lds
rorb
shlb
add
imul
mull
lock
out
push
jmp
xor
mov
outsl
xor
and
jl
mov
xchg
pop
aad
add
ljmp
jp
pop
in
rclb
icebp
mov
out
stos
in
pop
scas
aad
push
insb
in
mov
push
subb
repnz
mov
and
in
movsl
mov
int3
fldln2
arpl
les
out
test
jle
dec
pop
subb
rorb
cmp
add
lods
mov
mov
in
lahf
ljmp
mov
mov
pop
lock
adc
mov
ljmp
xchg
enter
in
xor
sbb
stc
mov
sub
or
pop
jmp
aam
push
sbb
mov
outsl
cld
pop
inc
aad
push
add
push
push
test
test
stc
mov
pop
sbb
lds
push
dec
push
inc
arpl
cmp
ror
sbbb
in
jnp
incl
mov
jecxz
push
clc
sub
lahf
out
cmp
sub
dec
mov
cmp
jl
cltd
outsl
or
aad
arpl
cmp
add
ss
pop
addr16
and
int3
clts
or
sbb
and
out
cmp
push
cmpsb
js
add
std
xchg
pop
std
dec
xor
mov
pop
xor
pmaxsw
pop
cmp
cmpsl
ljmp
fdivrl
or
jnp
insl
out
bound
add
xlat
and
jp
hlt
push
std
hlt
repz
je
jns
push
sbb
in
test
or
sbb
xchg
ret
sub
cmp
xor
cmpsb
fldt
jl
pop
push
push
test
ret
data16
in
jo
push
mov
repz
pop
inc
ss
iret
into
mov
add
addb
cmp
test
shlb
cmc
pushf
push
lcall
je
add
sahf
xor
hlt
pop
inc
test
add
lods
outsl
fdivs
aad
mov
jne
insb
push
inc
inc
insl
int
aaa
mov
fnsave
repz
or
mov
add
push
or
adc
daa
enter
cmc
cmp
jne
jb
pop
jge
inc
loope
sub
gs
and
sbb
mov
adc
stos
jno
int3
inc
rcr
mov
daa
sbb
jle
in
test
adc
test
arpl
mov
stos
les
sub
in
imul
sbb
int3
icebp
xor
mov
pop
test
jnp
cmpl
repnz
lcall
add
or
bound
or
jg
cmp
in
add
cwtl
jns
iret
xor
inc
push
mov
cwtl
cwtl
sub
cltd
stc
cmp
dec
stos
movsb
in
and
sbb
xchg
mov
inc
stos
xchg
push
xchg
and
jae
sub
fistl
pop
xor
dec
or
and
pop
pop
mov
mov
jnp
fiadds
cmp
sbb
pop
fnsave
jmp
cmp
and
jnp
sub
cmpb
inc
test
or
movsb
adc
lea
jg
iret
inc
lahf
popf
and
scas
movb
push
testl
push
pop
iret
jmp
adcl
clc
shll
and
cmp
jmp
psubd
jno
sub
fisubrl
jb
loop
or
xor
add
mov
js
mov
mov
neg
out
sbb
into
push
inc
bound
mov
mov
mov
shll
push
je
xlat
outsb
sbb
mov
lret
pop
jmp
or
sbbb
stc
or
ja
push
out
and
sbb
mov
shrl
jne
pop
sub
mov
loop
pop
mov
cmpsl
cli
test
mov
xchg
testb
fmul
add
xor
push
jae
je
lcall
sbb
inc
pop
dec
andl
push
xchg
aas
pop
mov
dec
ja
mov
insl
aad
xorl
dec
sub
fnstsw
pop
ja
lds
dec
frstor
sbb
cmp
xchg
sub
lods
ret
cmp
in
sub
sub
xchg
cmp
arpl
imul
push
mov
pop
adcl
jge
ret
outsb
pushf
xchg
dec
popf
cs
dec
jb
lock
jl
pop
mov
mov
xor
in
sub
rcll
push
pushf
dec
mov
addb
movsl
jmp
push
push
jo
jecxz
js
stos
sar
nop
clc
in
jmp
clc
jle
outsl
or
mov
sub
mov
mov
std
in
adcb
repnz
dec
push
cmp
jg
mov
test
jnp
pop
jo
pop
jmp
dec
mov
fldl
mov
pop
es
lcall
lret
sbb
movsl
pop
ss
loopne
stos
je
dec
cmp
or
mov
aaa
cmp
inc
xlat
push
pop
inc
xchg
loope
addr16
mov
and
aam
push
lahf
mov
pop
mov
icebp
sub
xchg
and
cmp
pop
xor
aad
add
add
cs
dec
movsb
dec
gs
fwait
ljmp
pop
add
imull
or
adc
clc
idivl
cltd
cmp
mov
mov
out
jmp
les
cs
jo,pn
sbb
sub
xchg
out
jmp
mov
or
je
sarb
mov
xchg
cmp
movsb
adc
sub
mov
adc
jne
inc
mov
cld
stos
xor
mov
mov
lret
pop
push
adc
xor
jo
cmc
in
clc
stos
or
mov
jmp
rcll
lods
push
test
cmp
fwait
aam
jge
adc
inc
stc
bound
bound
lret
cld
cltd
pop
dec
je
insb
repz
mov
sub
mov
and
das
shl
jno
call
jecxz
ds
jno
jb
aaa
mov
mov
outsl
mov
fnsave
inc
cli
out
movsl
add
insl
roll
fwait
xchg
pop
aad
mov
push
xor
pop
xchg
inc
jns
pop
sarb
sub
or
push
cmpb
int3
pushf
xchg
lods
jp
or
cmp
cmp
mov
pusha
mov
repnz
ret
mov
xchg
popa
add
ds
mov
pop
sub
pusha
mov
mov
cld
shl
cli
mov
jl
into
out
and
sarb
rorl
adc
inc
push
idiv
popf
in
aam
push
jg
repnz
fisubs
ja
das
push
mov
xchg
lret
push
test
jmp
or
pop
lret
std
addl
aad
test
popa
ss
sub
or
inc
cmpsb
cmp
inc
inc
outsb
adc
inc
adc
movsl
hlt
sahf
cmp
dec
test
out
mov
aam
push
or
loop
out
jbe
inc
cmpsb
mov
sti
add
testb
out
jecxz,pt
out
lods
push
je
out
xor
xchg
xchg
ja
mov
push
loopne
jno
or
cmpsb
stc
lahf
inc
inc
ljmp
push
cltd
dec
push
test
pop
stc
pop
push
cmp
add
outsb
inc
sub
mov
xchg
mov
int3
push
shrb
lcall
icebp
imul
lret
mov
iret
adc
stc
mov
stc
out
mov
add
pusha
aas
add
pusha
or
inc
mov
jmp
add
inc
add
mov
xor
add
out
inc
xorb
ja
test
mov
mov
sti
repnz
sahf
xchg
sbb
and
repz
in
inc
mov
add
ror
xor
fdivrs
ficomps
mov
cmp
mov
imul
outsb
pusha
jl
subl
sbb
push
pop
xchg
jno
cmpsb
cmpsb
icebp
mov
inc
cli
sub
dec
jnp
pop
or
lahf
sbb
push
lock
aam
sub
inc
call
scas
movsb
jle
gs
popf
movsl
mov
dec
mov
push
pop
mov
sub
dec
jle
jo
sbb
js
negl
loopne
jecxz
push
pop
inc
push
cld
sub
jl
push
jb
xchg
inc
gs
or
sub
jb
add
push
repz
mov
shlb
test
test
fcmovu
pop
sbb
out
or
xor
popf
xor
pop
adc
fsubrl
jecxz
repnz
daa
jecxz
dec
dec
call
rorl
rcll
loop
push
icebp
mov
gs
push
loope
push
mov
adc
rolb
scas
lcall
and
cli
adc
and
jb
jb,pt
sbb
aaa
in
cmp
sub
lcall
mov
xchg
lcall
fmul
pop
shr
movb
test
xchg
ja
popf
notb
data16
popf
enter
lret
inc
jge
ret
push
xchg
sub
inc
jb
cmovle
int3
jp
inc
js
add
enter
ja
inc
into
jne
sbb
push
and
hlt
mov
push
or
cwtl
cltd
or
and
dec
jb
mov
cmp
inc
add
sbb
xor
inc
jbe
outsb
roll
xchg
pop
out
dec
je
pop
loopne
leave
popl
stc
jno
gs
cmp
ret
loopne
outsl
mov
push
daa
outsl
mov
fdivrs
sbb
push
or
mov
inc
loop
outsb
mov
int3
pop
cld
inc
hlt
clc
stc
enter
push
fcmovnu
xor
push
fs
pop
cmpsl
lods
inc
xchg
negl
xor
cltd
mov
sbb
cmp
dec
pop
cmp
scas
xor
push
mov
or
addl
adc
fbstp
ds
push
dec
pop
cltd
aas
movb
sub
jbe
xor
xchg
je
add
or
xchg
in
cmp
shll
mov
xchg
jne
or
in
mov
pop
mov
cli
mov
shlb
and
lock
xchg
out
mov
cmpsb
pop
das
push
xchg
orb
or
fdivs
incb
cmc
or
cmp
out
orl
cmp
inc
adcb
movsb
ss
cmp
and
push
stc
mov
mov
iret
mov
mov
lahf
ljmp
aas
jl
sbbb
loope,pt
stos
jno
test
js
mov
loopne
fsubl
aas
ret
mov
pop
jp
jne
dec
pop
and
cmp
sub
dec
sub
push
mov
mov
inc
jb
sti
test
out
xchg
insl
jge
push
popa
or
in
mov
add
leave
iret
lahf
push
and
cmp
arpl
aaa
xchg
ret
mov
push
cmp
xchg
scas
int3
sub
imul
insl
insl
int
push
push
mov
call
xchg
inc
or
in
nop
sbb
idivl
fcoms
ficompl
lcall
setp
mov
mov
push
gs
aam
fimuls
pop
lcall
xchg
cmpsl
loopne
lods
sets
cld
hlt
jb
and
mov
popf
mov
push
cmp
shlb
push
daa
test
jg
mov
cmpsb
jmp
sub
idivb
jnp
test
clc
sbb
xor
or
or
push
lcall
xchg
mov
inc
idivl
adc
testb
mov
repnz
mov
ret
mov
and
pop
xor
sub
lret
sub
xor
ret
cmp
xchg
dec
adc
xlat
loopne
dec
ds
mov
enter
subb
push
std
into
cmp
cmpsl
cwtl
cltd
mov
fs
mull
orb
xchg
out
cli
jecxz
in
push
sahf
std
loope
pop
fmull
mov
push
xor
pop
cmpsb
pop
addb
cmpsb
pop
jmp
dec
jecxz
das
xchg
inc
push
fiaddl
xor
repz
movsb
mov
std
jns
dec
mov
push
icebp
in
inc
pop
cmp
cmp
xchg
fwait
pusha
sub
mov
mov
test
xor
fldt
pop
xor
pop
cmpsl
jp
jp
insb
sbb
lahf
adc
mov
xor
adc
jmp
call
jb
cmp
adc
loope
inc
xchg
pushf
xor
or
outsb
cs
mov
cmp
mov
sbb
out
or
or
push
movsb
lea
adc
rorl
push
sbbb
add
pop
jecxz
ljmp
pop
sub
addr16
mov
push
sbb
pop
jge
and
scas
push
shll
push
mov
mov
outsb
test
sub
gs
xchg
mov
jg
add
mov
test
ficompl
pop
out
push
enter
enter
xorb
jnp
sbb
popf
out
adc
test
cs
and
cmp
jno
adc
cmp
add
jmp
pop
pop
inc
imul
jae
insb
cmp
sub
mov
pop
pop
adc
insb
pop
pop
xchg
out
and
orl
es
iret
and
sub
mov
mov
mov
dec
xchg
lret
out
cmpsb
sub
mov
jo
and
ja
sbb
push
xchg
inc
adc
fisubrs
or
sub
jecxz
xor
gs
mov
data16
aad
sub
hlt
das
neg
dec
add
test
int3
mov
xor
clc
js
pop
pmovmskb
out
xchg
xchg
dec
jb
push
rolb
or
jne
mov
pop
dec
mov
jecxz
add
add
inc
push
pop
out
or
gs
loop
jns
call
and
leave
je
and
pop
pop
outsb
movsb
loope
and
xchg
cmp
xchg
fdivs
shlb
jg
imul
les
sub
mov
enter
sbb
je
dec
mov
or
cli
lods
lahf
es
aas
sti
and
lods
mov
push
les
sbb
adc
inc
outsb
cmpsl
in
mov
sbb
ds
cmp
mov
or
mov
adc
jle
fwait
into
shll
xchg
sti
jmp
fs
fldcw
insb
or
jo
xchg
mov
add
mov
mov
sbb
fwait
inc
add
mov
dec
aad
xchg
outsl
pushf
jecxz,pn
repnz
inc
fisttps
cmc
or
push
sbb
xchg
mov
popf
dec
nop
add
cmp
int3
sti
ljmp
insl
cli
mov
mov
outsb
or
and
dec
push
imul
jmp
ja
xchg
add
pop
flds
sub
mov
xchg
data16
push
add
lahf
int3
cmp
mov
call
push
dec
push
inc
mov
scas
pop
push
dec
aaa
cmpsl
cmp
out
fchs
dec
sub
cmp
cltd
sarl
inc
xchg
insl
and
add
fcomi
xchg
hlt
std
mov
movsw
pop
repz
fcomp
push
or
fmul
mov
scas
es
shlb
cmp
in
test
cmpsl
repnz
xchg
mov
push
mov
leave
jecxz
lods
jne
insl
test
pop
out
push
jae
scas
mov
mov
fcomps
fwait
lret
mov
and
push
adc
mov
jge
hlt
out
lea
js
clc
dec
cmp
add
ss
out
push
xor
adc
adc
adc
lds
fstps
jle
fnstenv
mov
add
pop
xchg
push
jo
jl
pop
ret
jecxz
loop
add
and
cli
test
fisttps
leave
mov
and
cs
and
push
and
sti
ret
mov
inc
sub
xor
popf
inc
jbe
pop
pop
cmpsl
lods
mov
popf
mov
pop
insb
andb
or
mov
fcmovnbe
and
in
aas
pop
jb
lahf
lock
int3
jno
xor
push
bound
xor
test
push
imul
imul
lret
in
imul
add
and
mov
es
or
int3
iret
mov
pop
cmpsl
sbb
in
cmpl
stos
cmp
add
iret
jecxz
aad
and
bound
mov
sti
jno
mov
jbe
jecxz
icebp
dec
sbb
adc
shrl
out
pop
data16
insb
in
popf
es
fdivrl
movsl
cmp
cltd
data16
loopne
sti
rcrl
mov
sbb
test
subb
mov
sbb
ss
cmp
test
in
and
idiv
out
cwtl
sahf
jl,pt
inc
push
call
shl
jl
mov
into
mov
repz
add
and
cltd
ja
lds
stos
pop
je
xlat
inc
and
shlb
loop
xchg
roll
leave
aad
cwtl
mov
xchg
xor
je
sbb
mov
scas
xchg
or
push
inc
cs
xchg
lret
clc
pusha
imul
addr16
in
and
cmp
adc
jnp
jge
mov
push
mov
lahf
dec
subb
inc
jle
push
sub
iret
icebp
jp
jecxz
ja
mov
add
sbb
out
add
and
shr
cmp
pop
xchg
test
hlt
sbb
inc
fisubl
cmp
ds
gs
push
test
adcl
inc
dec
jns
aas
ss
xor
out
mov
pushl
fimull
aam
mov
insl
add
inc
scas
push
mov
or
bound
jb
add
pop
xchg
xor
xor
shrb
sbb
adc
dec
mov
addr16
push
jmp
adc
aas
push
jno
mov
lock
lods
movsl
roll
cmp
mov
add
xor
sahf
fadd
mov
mov
lock
push
data16
mov
daa
mov
push
push
lcall
add
and
mov
sub
nop
xchg
xchg
cmpsb
or
loope
inc
cwtl
and
das
ljmp
lcall
mov
aad
clc
das
into
fadds
scas
ret
dec
cli
pop
outsb
and
addr16
data16
cmpsl
ror
xchg
subl
inc
stc
je
loope
in
push
jle
add
jno
int
ds
push
sub
mov
adcb
sti
lret
clc
sbb
in
adc
movl
nop
add
lcall
xor
sti
cltd
shlb
sarb
cmp
loop
int
les
pop
out
dec
mov
push
popf
pop
imul
mov
test
fstpt
jae
mulb
cmc
mov
lahf
movsb
leave
es
cmpl
mov
lahf
mov
shlb
xchg
mov
mov
int3
fadds
mov
or
sub
sti
push
adc
ja
push
std
popa
push
or
add
out
adc
inc
lret
xor
sahf
orb
mov
sarb
cld
inc
or
imul
stos
sub
scas
adcl
mov
cmc
mov
jo
loop
fistpll
andb
mov
mov
lahf
clc
mov
xchg
pop
and
lahf
scas
mov
adc
cmpsl
and
imul
aaa
nop
push
or
inc
mov
fisttpll
mov
lods
ret
arpl
jp
cmp
or
subb
cltd
repnz
xor
dec
sub
inc
loope
pop
popa
ret
insb
in
pop
jge
mov
push
pop
ds
pusha
std
idivl
jne
sub
js
pop
mov
ss
adc
loope
adc
aam
out
mov
pusha
ret
out
scas
xchg
int3
mov
nop
clc
dec
xchg
push
insl
pop
sub
int3
cmpsl
shlb
jnp
popf
adc
icebp
push
test
loope
mov
js
adc
lret
shrb
insb
aam
push
lods
in
xchg
in
mov
pop
rcrb
jle
cmp
xchg
int
lock
out
inc
pop
inc
pop
cltd
add
mov
sbb
into
push
imul
repz
cmp
jge
sbb
lock
movzwl
sbb
and
mov
loope
dec
int3
cmp
out
dec
fwait
ret
and
xchg
sub
jns
pushf
into
imul
daa
call
rolb
dec
sub
mov
into
cli
mov
pop
dec
sub
push
inc
stc
ss
push
arpl
mov
mov
sub
xor
iret
push
mov
ja
mov
jg
or
mov
dec
ret
sub
in
adc
fisubrs
stos
ljmp
in
sarl
cmpb
loope
pop
cmp
dec
notb
pusha
adc
pop
int3
sahf
std
lock
std
pop
add
lret
jb
or
and
fwait
push
fucom
inc
inc
jbe
ret
push
aad
mov
icebp
pop
mov
adc
les
xchg
gs
mull
out
cld
fisubs
arpl
lods
test
xlat
xchg
in
push
stos
mov
fistpll
imul
je
movsl
movsl
sbb
jmp
les
mov
sbb
add
xchg
mov
out
add
cwtl
les
test
iret
rcll
add
inc
sub
jg
mov
sub
ficomps
into
sub
mov
xor
jne
or
pop
repnz
mov
les
hlt
and
jo
shl
cld
lods
fnstsw
push
sbb
or
ja
jb
repz
aaa
shrb
xchg
sbb
or
shl
cmp
lock
inc
inc
mov
add
dec
lret
push
int
xor
sahf
leave
pop
jmp
adc
in
xor
push
popf
je
mov
pop
mov
mov
sti
sub
jecxz
popf
ss
lds
test
nop
dec
sahf
xchg
xor
xchg
mov
cmpsl
adc
subb
xchg
sub
and
popl
inc
xor
mov
js
aad
insl
jp
cmp
lahf
mov
jg
push
lods
lds
fs
pop
lea
lods
pop
jbe
pop
js
ds
add
mov
movsb
cmc
lret
xchg
sahf
mov
adc
mov
sti
dec
add
jl
xor
add
mov
int
js,pn
scas
xchg
push
ds
or
mov
stos
stos
sbb
jle,pt
call
push
and
clc
fsubrp
or
data16
pop
jp
pushf
cmp
sbb
mov
inc
test
mov
rorl
cmp
xlat
fisubrs
mov
int
add
jno
inc
aaa
pushf
mov
daa
outsb
xor
push
xchg
in
outsb
sbb
cmc
mov
cwtl
pop
jmp
rorb
stos
sbb
lret
clc
push
aam
jne
or
loope
andb
inc
mov
dec
fidivrs
adc
ret
les
mov
ss
dec
xorl
stos
adc
popf
jo
push
movsl
lods
fisubl
in
xchg
fldt
pop
mov
repnz
mov
xor
aaa
xor
in
push
sarb
inc
push
sub
imul
xor
and
cmp
clc
xor
add
test
push
nop
dec
in
aaa
add
test
adc
fsubrs
movsb
add
dec
mov
jge
sub
pusha
cmp
add
in
mov
mov
test
mov
mov
es
cmp
arpl
clc
loopne
sbb
dec
push
adc
leave
sub
push
das
mov
stos
notl
add
cmp
xchg
sbb
insl
andl
pop
test
pop
jae
mov
outsb
test
arpl
fnstcw
out
mov
xor
mov
jmp
xor
sti
rcl
in
xchg
fsubrs
insl
mov
pop
jl
add
imul
testb
add
in
push
cld
cmp
lret
lods
jmp
lods
and
ffreep
add
fcompl
popf
rcll
fsubl
test
int3
das
push
cmp
inc
xlat
cmp
stos
push
lock
sbb
je
imul
xor
or
adc
sbb
shll
rcrl
add
cli
xchg
adc
or
lea
push
lock
lods
or
in
xorl
in
add
scas
ljmp
xchg
add
into
enter
xlat
or
iret
hlt
push
pop
int3
jmp
lock
mov
incb
sbb
or
clc
xor
or
scas
ret
movsl
mov
gs
mulb
stos
mov
xchg
pop
sub
lret
push
mov
lret
out
aam
push
jg
push
aad
jbe
cmc
mov
mov
fistl
clc
mov
xor
mov
jp
nop
jo
ror
shrb
add
lods
nop
cmp
icebp
xchg
cmc
inc
out
mov
and
push
sahf
push
clc
and
add
insl
adc
mov
cmp
scas
mov
loop
xorl
cmp
outsb
sub
xlat
jb
in
imul
mov
jmp
iret
enter
lret
fnstcw
mov
and
sub
xor
outsl
add
pop
or
push
and
lock
pop
adc
lret
icebp
cmpsl
test
mov
lcall
sbb
std
push
or
mov
scas
jo
out
call
cmpsb
inc
or
xorl
sbb
call
and
shrb
fisttpl
adc
into
sbb
inc
add
fcomp
insb
lcall
adc
mov
sti
test
fstps
movsl
push
loop
sbb
lret
mov
mov
jns
icebp
mov
pop
sub
mov
stos
loop
jo
pop
andl
shl
pop
js
pop
jecxz
xchg
jnp
cld
ja
aas
and
push
xchg
fidivrl
fidivrs
jo
xchg
and
push
aas
inc
push
pop
mov
pop
stos
xor
xor
mov
add
push
mov
lods
cmc
std
mov
loope
cmp
test
add
push
mov
mov
ss
jne
clc
scas
rcrb
pop
cmp
movsl
jge
push
and
jbe
pop
fiaddl
sbb
mov
xor
mov
or
fwait
and
mov
js,pn
das
jg
push
push
jmp
int
push
out
or
mov
pop
shrb
mov
jmp
cmpsl
pop
aam
nop
or
loopne
addl
fcmovnu
sbb
addr16
or
mov
pushf
es
pop
scas
add
sahf
xchg
scas
loope
push
fstps
or
xlat
fcmovne
jle
lods
or
sub
shl
mov
scas
in
or
or
imul
xor
xor
pusha
xchg
std
mov
rolb
test
jle
pushf
push
popa
lods
sar
jae
jecxz
add
adc
loope
lds
outsb
iret
repz
test
pop
out
fdivrs
pop
adcb
cld
push
sti
jecxz
aas
mov
outsb
push
ja
imul
in
sbb
pusha
in
test
or
cmc
pop
add
cmp
or
imul
jl
xorb
jb
out
ret
and
cmp
add
and
ja
cli
andl
mov
movsb
jbe
sbb
xor
xor
out
xorl
mov
inc
xchg
mov
out
push
jbe
pop
hlt
shl
dec
dec
mov
sbb
mov
fdiv
scas
shlb
cmp
dec
jg
push
cld
pop
lds
test
stos
mov
into
xchg
mov
push
insl
fwait
pushf
fstps
push
out
out
rcr
or
enter
inc
jae
sub
in
pop
data16
adc
std
xchg
push
pop
cmpsl
dec
and
dec
or
adc
pop
shr
and
clc
loop
mov
popa
xchg
or
test
rolb
sub
inc
cmp
sub
lret
xchg
dec
mov
cmp
xchg
in
push
mov
jle
je
js
cmp
mov
mov
adc
jmp
lret
aaa
pushf
or
out
mov
pop
mov
and
inc
mov
xchg
mov
repnz
jno
ror
jle
jmp
xchg
pop
and
popa
je
into
sti
lcall
push
in
inc
jae
push
imul
fst
dec
cmp
jmp
push
imul
ret
sub
pop
pop
fwait
jecxz
mov
leave
jg
int3
jns
dec
testb
xor
cwtl
or
pop
jge
shll
addr16
addr16
add
cmp
movsl
bound
xchg
loope
push
and
pusha
xor
adc
pop
cmpb
cmc
out
mov
push
jl
lahf
lds
mov
jnp
outsb
jbe
loop
shrb
lahf
out
pop
icebp
shl
leave
lcall
mov
or
mov
aaa
sbb
insl
inc
cmp
dec
xor
shll
imull
scas
xchg
fcompl
xchg
dec
out
jg
push
xchg
mov
push
ds
rclb
sbb
add
mov
mov
jns
pop
pop
mov
leave
add
lret
inc
mov
int3
insb
or
xlat
xbegin
dec
mov
inc
sub
jmp
leave
inc
fcoml
leave
insb
outsl
out
pop
stc
or
loope
push
and
aas
xchg
push
xchg
nop
inc
loope
bound
pop
int3
mov
outsb
fwait
mov
stos
leave
push
mov
mov
dec
loope
adc
mov
rcrb
dec
pop
repz
addr16
aaa
mov
mov
loopne
and
outsb
dec
or
aas
jns
jmp
mov
xor
imul
in
fisubs
arpl
aaa
pop
mov
inc
xor
jmp
mov
in
mov
cmc
mov
fmuls
cmpsl
mov
out
leave
cmp
pop
aaa
or
or
call
scas
into
orl
sbb
push
dec
cmc
jl,pt
arpl
mov
cmp
sbb
jl
or
mov
shrl
mov
addr16
gs
incb
mov
sbb
and
push
xchg
dec
mov
cmpsl
jecxz
inc
sub
cmp
xor
add
push
fisttps
mov
cmpsl
or
push
mov
jo
or
test
test
jle
sbb
out
in
shll
stos
fstps
push
lods
scas
ret
xchg
lea
xor
xor
sbb
pop
das
popf
mov
cltd
outsl
popa
xchg
or
imul
ss
sub
push
rorl
xor
dec
xor
cmp
jno
push
mov
cmpsb
rcr
pop
imul
lds
xchg
xor
jecxz
inc
xor
ficomps
push
fistpll
pop
je
pop
andl
xchg
in
repz
les
imul
inc
jbe
leave
lahf
jae
add
sub
call
popa
xchg
cmp
xchg
out
push
mov
in
sub
leave
mov
add
fwait
push
out
pop
adc
cwtl
jl
aas
jo
cmp
aam
sahf
gs
mov
sub
adc
sarl
fwait
out
mov
dec
mov
mov
push
in
xchg
cmp
ljmp
stc
dec
and
mov
incb
xchg
scas
xchg
mov
or
aad
jmp
mov
sub
lds
mov
jne
js
xchg
mov
adc
jbe
mov
mov
or
pop
jmp
mov
xchg
insl
test
cld
lods
push
out
gs
test
push
ja
clc
jb
adc
adcb
shlb
jecxz
dec
jo
gs
sahf
xchg
inc
sub
repnz
jmp
adc
fs
fsubl
nop
and
mov
in
pop
add
inc
mov
lods
cmc
ficompl
dec
xlat
pop
add
sti
push
cmpsb
push
fs
fwait
jo
cmp
dec
push
lret
fmull
mov
fnstenv
mov
inc
sbb
ss
sub
xor
mov
mov
pusha
sahf
scas
push
mov
in
psraw
test
mov
nop
frstor
stc
mov
cmpsb
pop
pop
xor
insl
mov
popf
cmp
cmpsl
mov
xor
test
test
jae
out
in
dec
bound
jb
jb
sbb
mov
pop
jmp
or
jg
pop
mov
ja
inc
push
push
cs
loop
adc
arpl
pop
xor
notl
pop
push
xchg
cld
xor
mov
cmp
shr
cmp
push
add
add
aam
dec
mov
jne
jle
insl
fdivrl
adc
jb
fucomp
cli
mov
outsl
xchg
std
jp
and
sub
jo
test
jo
sub
addl
fists
or
jl
adc
mov
jge
ds
mov
lods
shl
stos
lods
arpl
aad
adc
adc
pushf
cmpsb
testl
dec
gs
loopne
jbe
cmp
adcl
push
and
and
ljmp
xlat
pusha
push
loope
inc
imul
sbb
jl
ret
fldl
mov
xchg
mov
out
in
popa
xor
jecxz
pop
dec
cs
popa
out
out
out
mov
int3
pop
sbb
xor
mov
lret
mov
enter
test
sub
inc
daa
mov
leave
rorb
pop
std
dec
push
mov
xor
stc
push
sbb
loopne
jbe
lods
repnz
loopne
dec
leave
out
in
jb
cmp
mov
fisubs
mov
mov
dec
sbb
fidivs
or
sub
ds
scas
inc
pop
stos
sbb
add
sti
out
jb
arpl
mov
cltd
jnp
ret
fnstenv
stos
pusha
lock
mov
mov
arpl
popf
outsb
cmpsl
push
je
das
imul
cwtl
adc
cmp
jo
shl
xchg
imul
adcb
setg
mov
sbb
sahf
bound
fistpl
xor
inc
sbb
testb
mov
mov
xchg
cmp
mov
or
dec
cld
test
mov
sub
jno
sbb
push
mov
mov
scas
cltd
sbb
lods
or
stos
pop
gs
mov
pop
out
pop
mov
scas
pop
push
bound
in
movb
dec
es
fchs
ret
leave
lea
push
cli
pop
dec
pop
mov
daa
cli
inc
aas
sti
orb
mov
rcll
jg
pop
imul
mov
adc
repnz
mov
lcall
sbb
sarl
and
add
adc
mov
fcoms
addl
out
iret
stos
sub
add
sub
sbb
xlat
inc
adc
mov
into
in
fucom
cli
xor
mov
in
stc
mov
xchg
xor
push
fwait
jmp
xor
mov
inc
les
mov
aad
sub
sbb
and
jo
dec
sub
aas
clc
xlat
leave
inc
dec
testl
gs
or
mov
cmp
sbb
lcall
test
dec
sbb
cmp
mov
add
pop
inc
cmp
dec
subb
stc
test
push
inc
sub
cmpl
inc
dec
insb
push
loop
jnp
cld
fisubrl
push
inc
mov
loopne
cmp
filds
push
push
into
outsl
je
repnz
sbb
jnp
mov
dec
xchg
outsl
scas
cs
jecxz
lret
dec
sub
in
pop
push
fstps
inc
aaa
fsubs
into
mov
sub
push
xor
xor
cmc
lea
leave
stc
imul
dec
popa
and
addr16
sbb
andb
dec
mull
dec
mov
dec
add
loop
dec
imul
lock
mov
xchg
les
jecxz
cmp
pop
cs
cs
sarb
insl
imul
pop
push
lcall
test
pop
xchg
imul
mov
int3
stos
orl
push
push
std
push
cmp
mov
cltd
orl
jl
mov
push
adc
cld
fsubs
xchg
aas
idivb
cmp
loop
adc
ret
out
insb
inc
inc
and
test
mov
and
push
in
sub
inc
pop
xor
ja
mov
jo
mov
shr
cmp
cld
das
test
dec
dec
leave
jne
and
movsl
shlb
mov
adcb
pusha
dec
das
pop
dec
js
and
iret
xor
pop
clc
bound
cmp
sub
scas
mov
cmpsb
dec
push
push
push
test
out
xorb
rcrb
pop
pop
pop
or
add
int3
sbb
int3
xor
lds
mov
pop
cmp
scas
jbe
in
neg
fistpll
push
xor
shlb
movb
xor
xchg
xchg
xor
jnp
imul
xor
push
jg
popf
pushf
jb
inc
insl
loope
pop
and
jmp
je
popf
push
lods
xor
lcall
aaa
mov
cmpsb
xor
in
push
adc
and
xchg
add
popa
mov
cld
les
xchg
lcall
dec
jne
mov
test
cmp
sahf
sub
out
and
sub
xchg
pop
icebp
aas
pop
test
mov
or
ret
push
sbb
mov
sbb
and
pop
in
push
pop
testl
or
add
divb
xchg
outsb
sbb
rolb
in
lret
mov
lock
xor
cmp
xchg
fscale
add
test
mov
test
outsb
cmp
cmpsl
sarb
add
push
test
sbb
jb
xor
push
jo
cli
mov
lret
xchg
out
sbb
jno
pop
dec
pop
inc
lock
loopne
mov
out
popa
cs
lret
fdivs
ret
je
call
sti
mov
inc
mov
lret
pop
xchg
add
push
loope
ljmp
jmp
cwtl
sub
pop
adc
or
loop
and
jne
push
sarb
cmpb
gs
jbe
and
leave
push
dec
into
pop
mov
or
xchg
bound
shrb
mov
mov
xchg
xchg
fistps
xor
ret
scas
int
outsb
ljmp
pop
and
add
jne
inc
pusha
enter
pop
jo
std
sarb
push
push
outsl
lods
andl
cmpsb
or
sti
mov
dec
mov
icebp
fwait
add
sbb
jp
lea
mov
adc
stos
orl
in
into
test
inc
inc
mov
xchg
pop
xchg
and
ss
inc
jno
jge
adc
and
pop
cmpb
cli
icebp
outsl
push
fwait
jecxz
test
mov
in
mov
adc
mov
fbstp
inc
sbb
lcall
aad
mov
mov
inc
lds
jno,pn
push
mov
adc
add
jb
pop
mov
adc
inc
in
pop
add
sbbl
fldl
aaa
xchg
gs
or
inc
jg
arpl
mov
test
jb
push
mov
inc
stos
adc
push
add
mov
lahf
push
or
jp
mov
mov
dec
xchg
jns
les
ljmp
sbb
jl
inc
popf
scas
mov
mov
mov
pop
xlat
scas
dec
or
mov
int
inc
mov
imul
orl
sub
call
adc
xlat
jl
xchg
mov
xor
push
std
cmp
aaa
loop
int
movsb
cmp
pop
cmp
aam
in
fwait
sub
pop
xlat
mov
jge
jmp
push
push
push
inc
mov
das
cmpsl
add
mov
pop
and
pop
xchg
mov
mov
out
pop
xchg
push
insb
cld
imul
fsubl
sbb
fisubrs
pushf
cli
sub
sbbb
xchg
and
push
push
inc
mov
cwtl
cmc
sbb
or
fs
cmc
outsl
loope
enter
stos
mov
pop
loopne
push
lods
mov
push
adc
inc
movsb
data16
outsb
xchg
jcxz
aaa
popf
dec
mov
dec
loopne
pop
out
push
push
sub
std
or
mov
mov
inc
hlt
push
popa
adc
mov
push
jecxz
adc
sub
xchg
cwtl
imul
sub
jecxz
inc
loope
mov
cmp
inc
add
xlat
push
xor
adc
sub
xchg
mov
pushf
mov
sub
roll
inc
jo
add
iret
pop
in
cmc
sbb
test
in
xor
push
jb
jo
roll
loop
test
stc
movb
jb
lret
adc
cli
push
xchg
sub
test
std
sbb
jae
or
lcall
add
mov
cmp
mov
mov
in
sarb
xchg
out
add
jbe
imul
fbstp
stos
in
push
mov
ds
jle
jecxz
out
pop
pop
or
pusha
pop
aaa
arpl
ljmp
jne
jmp
inc
fs
fstl
and
ds
jnp
pushf
sbb
clc
xchg
xchg
mov
pop
mov
popa
nop
mov
cmp
adc
mov
sub
into
or
push
aam
sub
mov
xlat
pop
sbb
ret
mov
into
scas
adc
adc
cmp
or
imul
insl
pop
lret
dec
dec
mov
repz
push
cmpsl
sbb
sbb
jge
pop
ja
jns
sub
cmp
je
nop
adc
cwtl
jp
xchg
push
sub
aas
push
and
sysenter
xor
jb
inc
fldcw
adc
cmp
sti
mov
push
cli
and
sarb
repz
inc
pop
fsubp
or
pop
insb
popf
pop
sbb
out
push
add
shl
add
adc
outsb
xor
gs
inc
loopne
xchg
pop
enter
pop
push
dec
mov
mov
adcl
push
in
shrl
je
jne
add
pop
fwait
andb
sbb
leave
sti
popf
inc
push
decb
xchg
xor
mov
lock
adc
push
cmc
dec
cs
sub
fwait
lods
sub
add
jle
fs
stc
or
jo
pushf
cmpsl
nop
sbb
jg
dec
or
dec
lods
ret
mov
sub
cmc
lret
adc
fs
or
scas
mov
enter
fwait
inc
push
mov
es
sahf
in
iret
or
jle
es
xchg
jnp
dec
jno
stos
fistps
cld
lea
adc
les
sbb
scas
pop
repz
xchg
outsb
in
out
or
rcll
aas
pushf
cli
int3
lock
mov
in
jne
arpl
pushf
pop
adc
mov
ror
or
sarl
xchg
lret
add
es
push
push
ret
mov
icebp
mov
pop
and
jp
loope
inc
ret
mov
cltd
mov
fcmovb
popa
push
add
adc
push
mov
xchg
stos
xchg
clc
imul
mov
mov
mov
inc
mov
lods
loopne
mov
mov
dec
jbe
idivl
mov
mov
sbb
sub
cmp
mov
hlt
mov
jns
mov
pop
int3
sub
gs
cmp
jns
mov
lock
fsub
mov
xchg
stos
jge
push
adc
sbb
inc
add
bound
add
lcall
loope
out
out
je
in
mov
cmp
xorl
mov
adc
mov
cli
stc
xchg
shr
xor
mov
and
inc
and
push
imul
scas
ret
sub
fwait
add
sarb
mov
inc
insl
data16
mov
or
mov
sbb
xlat
mov
outsb
pop
xchg
or
jns
test
xchg
push
ss
push
xchg
sti
popl
out
popw
mov
adc
test
xchg
sub
loopne
mov
inc
sub
push
out
mov
inc
cmp
sub
xor
stos
pop
dec
add
add
push
mov
sbb
push
push
push
iret
ds
js
dec
mov
mov
xchg
aas
xchg
mov
lds
xchg
cmp
stos
insl
push
push
mov
push
jmp
sbb
xchg
aam
ret
add
orb
cmpsl
jo
xor
inc
xchg
or
mov
mov
std
insb
pushl
cmc
std
mov
or
mov
aaa
mov
adc
xchg
adc
test
jecxz
movlps
jno
pop
mov
cmp
mov
inc
pop
es
cmpps
mov
shll
sub
mov
cmp
jp
xchg
popa
cmp
mov
andb
sarb
xchg
into
sbb
rorl
flds
test
dec
loope
ds
loopne
out
cli
ret
xor
cld
repz
cli
ljmp
inc
pop
sbb
in
inc
pop
xchg
lahf
lock
imulb
icebp
lds
sub
scas
mov
sub
js
int
sbb
fwait
pop
add
xlat
stc
mov
outsb
cmp
outsb
test
shll
mov
insb
imul
aad
jne
faddp
cmc
add
xor
mov
and
aaa
or
adc
shll
icebp
xor
push
adc
inc
incb
xchg
pop
push
xchg
push
push
sub
cmp
pop
xor
aad
rcr
dec
inc
aam
in
jle
and
mov
jle
pusha
call
jbe
imul
sub
cmp
push
mov
je
clc
jae
lds
rorl
aaa
ljmp
cmp
push
stos
push
jg
and
mov
int
fs
stc
ss
repz
adc
imul
cmpsb
ficomps
push
cmp
jecxz
ret
lock
iret
push
loopne
push
and
or
or
cli
ss
les
adc
sub
pushf
or
add
jecxz
ret
aad
int
enter
nop
ret
xor
mov
mov
movsl
jge
pop
adc
xor
std
sahf
enter
lock
icebp
je
fmuls
and
inc
fcmovb
outsb
xor
or
fbstp
sub
rclb
sub
cmpsl
push
jecxz
sahf
enter
mov
lock
ficompl
imul
rcr
push
loop
cmc
test
push
bound
call
sub
data16
mov
or
das
pop
shl
sarb
lea
dec
jp
adc
lahf
pop
movsb
or
scas
adc
ljmp
add
jb
fstpt
fimuls
fcoml
cmp
movsl
roll
decl
jp
push
lcall
addr16
inc
mov
mov
rcrb
pop
in
sub
push
mov
bound
or
movsb
dec
xchg
in
fs
orb
xor
xor
pop
insb
bound
test
mov
sub
enter
movsl
mov
or
xor
add
into
sti
ljmp
xor
add
sub
inc
adc
jnp
jbe
xor
jge
bound
hlt
mov
imul
xor
stos
ret
pop
jae
js
rorb
gs
lcall
arpl
pop
fiadds
pmullw
lahf
js
rclb
shl
jecxz
cmp
int
mov
pop
mov
add
pop
loop
xor
push
dec
rol
adc
xchg
stos
mov
divb
add
lahf
les
inc
std
jo
cli
lret
mov
cmp
lret
jae
xchg
loop
xchg
cmpsb
pop
fs
xchg
sbb
lea
cs
mov
ljmp
jp
lods
aaa
pop
test
hlt
cmc
jne
lret
jnp
xchg
cmp
push
sti
adcl
inc
jne
inc
aas
fildl
jo
cmp
loopne
mov
xchg
repnz
fsub
scas
mov
in
sbb
push
jg
cwtl
pusha
mov
xor
repz
jae
pusha
mov
and
js
adc
pop
loopne
ja
or
in
sub
clc
out
cwtl
test
out
stc
pop
or
std
arpl
add
cwtl
iret
sbb
mov
jl
jp
cmp
aam
inc
and
or
and
jo
or
pop
mov
cmpsl
gs
frstor
popa
jns
popa
jmp
inc
add
pop
in
mov
pop
lret
int
aas
xchg
add
arpl
es
sbb
xor
pop
fstpt
or
loope
negb
gs
sub
jno
or
dec
push
jecxz
hlt
push
ret
addb
mov
mov
out
pop
push
mov
cmp
rcrl
loop
mov
sub
or
in
dec
cmp
or
push
xchg
scas
mov
ret
pop
repnz
inc
mov
xor
sub
xchg
lret
fucomp
jnp
mov
lods
pop
pushf
add
mov
mov
std
xchg
jmp
test
xor
pop
insb
repz
xchg
mov
es
adc
test
shll
mov
data16
mov
fiaddl
dec
sbb
push
divb
sbb
test
aad
out
movsl
imul
push
inc
mov
sbb
and
push
jl
pop
cmpsb
stos
loope
jo
loopne
divl
xor
test
add
add
jge
lea
insb
cld
mov
std
sbb
out
dec
enter
mov
and
out
and
or
sbb
iret
loop
fsubs
jae
sti
cwtl
je
mov
inc
inc
nop
movsb
mov
aam
xor
fistpl
mov
dec
jbe
ds
out
push
les
jno
jl
inc
jb
pushf
filds
jae
ret
dec
in
dec
rorl
rorb
mov
add
cld
jns
lods
mov
jbe
inc
or
xchg
or
pop
jns
cmp
dec
xchg
sar
mov
cmp
jl
gs
xchg
push
sub
pop
aas
adc
es
and
add
sbb
and
lret
jecxz
or
or
dec
inc
xchg
and
jecxz
pop
aaa
mov
add
stos
xor
std
int3
cltd
jno
addl
jp
mov
iret
mov
xchg
pop
jge
push
jmp
outsl
sub
mov
imul
loopne
pop
ss
add
pop
xlat
jnp
mov
sub
sub
jo
je
test
mov
gs
out
lea
movb
in
enter
add
je
cmp
push
insb
out
lea
aam
push
aaa
stos
mov
pop
pushf
and
roll
dec
pop
xchg
and
cmp
dec
dec
jl
sub
jns
repnz
and
hlt
xor
dec
xchg
mov
xchg
dec
jae
pop
xor
and
adc
mov
mov
push
inc
ds
adc
inc
dec
mov
cmp
lret
jne
add
mov
xchg
mov
test
add
inc
out
cmp
jnp
xchg
lret
push
fmull
scas
push
jb
lret
in
dec
xchg
movsl
addl
sub
xchg
xchg
je
xlat
out
mov
adc
aad
jg
adcb
ror
pop
fsubrp
cld
cmp
sti
mov
mov
push
mov
sti
push
sub
push
cmpsb
or
xor
shlb
or
pushf
pop
aas
push
sbb
cld
loop
test
push
stos
cs
lret
addr16
movsl
bound
mov
cmpsl
sub
dec
aad
and
jne
xchg
loop
mov
pop
push
push
fbstp
popa
cmpsb
xor
mov
jl
xor
xor
and
lahf
sub
das
call
mov
enter
loop
add
negb
test
nop
lret
mov
jl
dec
das
xchg
ljmp
dec
pusha
pop
sahf
mov
pop
scas
stc
push
icebp
clc
in
and
jge
xor
dec
lret
mov
je
and
pop
adc
and
pop
jbe
inc
cli
fwait
orb
xchg
mov
stc
sub
cmp
mov
dec
adc
out
sub
cmp
and
mov
orl
mov
ja
nop
icebp
jbe
jecxz
jbe
mov
pop
ja
cmpsl
mov
xchg
aad
mov
mov
cmp
cmpl
scas
xchg
or
ret
push
pop
stos
adc
fstl
ret
enter
xchg
mov
adc
jp
stos
cwtl
xor
lods
fcmovnu
imul
mov
ja
inc
daa
xchg
cmpsl
into
negb
inc
jmp
or
xor
jp
push
test
mov
movsb
sub
jno
xchg
insb
ds
sbb
pusha
in
pop
xchg
in
outsl
sub
insb
frstor
mov
sbb
and
leave
sbb
push
rorl
nop
mov
lods
sub
add
push
ja
rcrb
jo
cli
cmp
bound
mov
popf
mov
lock
and
jl
adc
jmp
mov
jns
sti
mov
insb
sub
and
bnd
push
sub
xchg
testb
xor
scas
xor
insb
imul
cmpb
or
adc
pop
mov
mov
jns
adc
push
and
hlt
stc
and
pop
hlt
and
out
mov
mov
pop
sti
pop
addr16
xchg
gs
or
fwait
xor
mov
incb
ret
cmp
mov
push
iret
fnsave
es
push
sbb
clc
pop
jle
cld
insl
jl
lret
out
je
loop
fnsave
in
imul
add
scas
mov
jl
mov
icebp
pop
aam
inc
cmpsb
jb
mov
lods
pop
mov
cmc
push
push
push
in
and
pop
sbb
jg
mov
add
popf
mov
adc
fs
add
imul
push
pop
imul
out
cmp
out
std
lea
mov
adc
outsl
mov
stos
and
adc
cmpsb
or
jmp
es
xchg
cmp
jnp
dec
cmpl
jne
jge
ss
dec
xor
pop
shrb
dec
push
jg
add
repz
popf
das
lret
jle
int
dec
jbe
movsl
imul
jp
rolb
add
mov
in
inc
ficoml
leave
mov
inc
sbb
push
dec
jmp
push
pop
push
xor
cwtl
pop
sahf
in
fisubs
jmp
mov
xor
std
in
call
jg
out
sbb
pop
ljmp
test
rclb
sub
inc
mov
adc
fistl
inc
iret
pop
movsb
xchg
movsl
mov
pop
lahf
aaa
xchg
sti
mov
push
call
mov
cwtl
les
js
lock
mov
push
xlat
or
aad
loope
push
mov
xor
mov
mov
sahf
fimull
loopne
pop
adc
in
test
fsub
mov
int3
cmp
xchg
pop
mov
and
or
sbb
in
adc
call
cmp
sbb
xchg
pop
scas
call
push
and
cmpsl
cmp
mov
lods
adc
ds
out
and
lds
xor
das
roll
nop
push
inc
in
or
lea
les
lods
mov
das
test
inc
jne
das
ljmp
jne
sbb
rcll
xor
mov
and
pushf
iret
cltd
cmpsl
add
cmp
lret
lret
jmp
imul
inc
cmc
push
es
stos
xchg
xchg
in
adc
out
std
cltd
fstl
and
imulb
out
cli
pushl
add
inc
stos
stos
outsl
dec
adc
mov
jnp
dec
mov
xchg
dec
inc
stos
pop
pop
mov
and
mov
mov
add
popl
xchg
xchg
jbe
mov
popf
fucom
push
mov
sbb
sub
dec
or
clc
inc
jg
test
and
xchg
xchg
fwait
cwtl
push
and
sbb
iret
imul
xor
data16
xor
xchg
das
push
ja
das
adc
push
shrb
mov
popa
sub
inc
imul
sub
xchg
fnstcw
push
push
add
in
inc
roll
or
jl
mov
sar
xor
bound
sub
jns
fistl
rol
dec
jl
or
cwtl
or
orl
addr16
repz
mov
adc
push
mov
setp
mov
pop
sbb
mov
js
sbb
inc
icebp
mov
mov
push
repnz
bound
stc
xor
sahf
imul
inc
nop
movsl
icebp
sbb
popf
out
arpl
icebp
pop
push
cwtl
idivl
cli
pop
add
mov
cmp
int3
and
cmp
gs
mov
fadd
jl
addr16
xor
sub
fwait
movsb
lret
arpl
lahf
pop
mov
jmp
xor
aam
icebp
in
jmp
push
mov
jns
test
pop
mov
jmp
cmpsb
mov
movb
and
add
mov
bnd
js
mov
cmp
enter
cli
pop
sbb
fistps
xchg
jo
je
mov
test
ss
ja
cmp
fdivrl
dec
jns
out
mov
push
xor
mov
aam
jns
insl
cmp
and
sub
and
out
push
popf
mov
stos
testb
add
stos
and
aas
sbb
cwtl
shl
cltd
cmc
cmp
and
dec
sub
bound
nop
jl
push
mov
ret
dec
jns
cltd
jl
in
das
sti
sahf
sub
clc
sbb
jge
icebp
xchg
int3
movsb
mov
add
mov
imul
mov
push
pop
js
inc
test
mov
xor
jae
arpl
sub
and
mov
sbb
push
inc
sub
jb
pop
in
sub
jo
pop
xchg
jb
mov
insb
or
or
loope
sub
test
push
cmpsl
jb
rolb
pop
dec
inc
out
or
xor
les
scas
pop
add
push
xor
mov
shl
xchg
movsl
xor
cmp
imull
jle
leave
add
dec
push
pushf
lea
and
jmp
xor
fsubrs
mov
fs
loop
leave
and
cmp
loope
jmp
jmp
pop
movsl
xchg
inc
adc
imul
or
push
mov
xchg
or
scas
sbb
lret
lcall
les
cmp
add
inc
mov
push
xchg
outsl
cmpsb
aas
pop
pushf
test
and
lahf
pop
sub
lea
sbb
push
insl
sbb
mov
int3
lods
mov
or
sub
lods
std
push
sbb
outsl
xor
in
cmpb
sti
and
xor
lock
add
in
inc
lahf
sub
pop
pop
mov
mov
cltd
cmp
dec
nop
mov
outsl
or
aad
jmp
repnz
jmp
in
adc
insl
addr16
add
rcr
insl
cli
jle
sahf
pusha
and
cmp
lods
jge
inc
pop
add
pop
bound
loope
daa
sub
jg
loope
pop
jp
js
std
adc
aaa
jmp
mov
sbb
push
inc
rcrl
mov
sub
or
pop
repz
xor
or
mov
xchg
rorb
mov
mov
ret
jecxz
push
icebp
int
pop
push
jae
sub
mov
fidivrl
testb
sub
leave
push
out
gs
and
inc
pop
aad
xlat
jo
loopne
test
leave
xorl
lcall
repz
int3
cmpb
in
jp
cltd
mov
jge
xlat
sub
subl
push
sahf
pop
les
jg
out
ds
mov
or
jmp
and
ja
cwtl
mov
fsubrl
jb
out
jle
imul
pushf
faddl
ret
leave
mov
dec
inc
es
or
mov
jns
xorl
std
fsubr
aas
mov
push
jg
sahf
repz
xor
pop
popf
adc
bound
xlat
into
clc
pusha
dec
dec
gs
les
in
sti
push
fidivl
dec
mov
loopne
xorb
pop
pop
inc
nop
jp
inc
lea
push
cmp
fxch
or
mov
inc
out
insl
xchg
cmp
pop
mov
mov
aad
out
add
sub
out
mov
std
mov
lret
inc
lret
xor
xor
cmpsb
stos
repnz
add
inc
das
and
dec
fwait
adc
pop
dec
xor
sti
test
arpl
mov
hlt
mov
push
xor
and
data16
or
cmpsl
or
add
dec
xchg
inc
imul
inc
call
imul
rcl
push
or
test
addl
pop
pop
mov
bound
stos
ja
lea
mov
das
push
xchg
xor
pushf
jo
push
rcr
es
or
ret
pop
and
iret
mov
pop
jae
lock
pusha
xchg
scas
stc
jl
ret
push
insl
add
sub
sti
ds
sbbl
icebp
xor
jno
mov
jo
xchg
mov
add
sahf
int
scas
add
icebp
inc
pop
adc
out
xchg
popa
jg
lcall
or
lcall
stc
rcr
xor
mov
dec
clc
inc
dec
incl
mov
xor
rorb
je
fucomp
xchg
aam
test
mov
cli
sbbb
test
xchg
and
xchg
jb
dec
movsl
jle
mov
sub
fisttpl
xchg
orb
nop
mov
in
cltd
mov
inc
icebp
jno
mov
pop
mov
imul
mov
jp
out
insb
jle
mov
cmp
jle
xor
push
fnstcw
rcrb
mov
jge
das
lahf
sbb
dec
fs
aaa
ss
xchg
inc
pop
cmc
sub
imul
lods
cmp
pushf
xor
repnz
inc
sbb
pop
aaa
push
jecxz
cmpsb
test
inc
cmpsl
lcall
ds
or
jp
mov
mov
fdivrl
mov
mov
mov
iret
in
pop
lahf
aas
icebp
cmp
out
mov
lahf
sbb
lock
lret
fwait
push
iret
xor
xchg
arpl
xlat
jbe
adc
hlt
movsb
mov
insl
cmpsl
cmpl
adc
sub
lret
sbb
jae
aad
jg
push
call
aas
pop
mov
pop
fisubl
iret
daa
adc
fistpll
pop
or
and
pop
repz
pop
push
adc
es
insl
pop
mov
fdiv
mov
push
lret
lds
outsb
rcrw
xchg
mov
lea
sarb
push
ror
mov
enter
xchg
lock
int3
xchg
out
cmc
or
ret
sub
fs
sbb
pop
xlat
or
arpl
hlt
in
add
or
out
mov
inc
pusha
iret
mov
test
sub
or
aas
mov
aad
lahf
jp
sbb
iret
pop
jo
pop
and
mov
sbb
mov
cs
in
bound
cld
jae
and
in
lods
out
testb
fwait
or
ret
rorb
or
mov
and
mov
out
or
mov
push
popf
das
xor
push
out
and
popa
cmp
mov
inc
ljmp
sbb
inc
adc
in
push
aam
lds
jo
and
out
add
adc
cmp
aam
test
into
ret
insb
adc
mov
xchg
ss
or
add
xchg
inc
sbb
jmp
outsl
mov
gs
pop
es
dec
or
and
nop
push
cmp
sbb
cmpsb
xchg
adc
mov
adc
mov
inc
xor
xchg
ret
mov
loope
rol
add
adcb
mov
sub
mov
nop
add
pusha
lahf
inc
test
inc
in
stos
jno
sub
cmp
inc
out
imul
fmull
xchg
shrl
dec
cmp
loope
insb
and
mov
push
repnz
mov
xchg
lret
repnz
dec
sbb
insb
lods
jge
adcb
popf
imul
daa
test
cmpl
cli
mov
inc
push
jmp
sbb
pop
xor
not
ficoms
mov
fucom
xchg
sub
inc
call
pop
dec
xchg
out
lds
scas
jecxz
lods
jno
sub
inc
inc
pop
cmp
out
aaa
xchg
cmp
xor
icebp
daa
stos
cwtl
nop
or
sub
pushf
js
push
sbb
xchg
repz
xor
in
add
aam
fwait
cmp
sbb
in
sub
fisubrs
dec
pusha
or
push
shll
enter
cmp
ds
push
pop
lea
xchg
fnstcw
test
push
push
sub
inc
push
pop
push
in
add
out
aaa
cld
pusha
fs
stos
test
sarb
fstps
fwait
or
ljmp
cmc
xchg
xor
cld
add
js
or
repnz
jne
xorl
lea
inc
pop
sarl
jnp
fwait
ds
outsb
push
notb
into
rcl
rcll
stos
mov
ret
cmpsl
lret
sub
dec
cmp
and
cmp
fimuls
xchg
push
shl
add
nop
out
ror
fadds
lods
sbb
pop
jnp
ret
call
and
gs
call
xchg
or
shr
lds
xorb
mov
or
ret
sub
push
jno,pt
ret
inc
aam
imulb
int3
iret
addb
out
aaa
inc
or
test
cltd
jb
aad
mov
pop
mov
outsb
and
cmp
pushf
sbbl
jb
add
jo
sbb
adc
loope
stc
sub
leave
aam
mov
push
mov
pushf
push
out
adc
jnp
cmp
arpl
xchg
mov
fcmovb
mov
xchg
ljmp
pop
pop
test
cmp
cmp
incb
ret
in
sbb
fcoml
faddl
test
loop
or
imul
inc
lea
sti
pop
mov
ss
xor
pop
cli
repz
inc
pop
push
push
jle
fdivl
add
aad
jae
mov
je
out
xchg
jl
xchg
pop
adc
xchg
adc
scas
dec
and
sbb
fnsave
adc
les
std
jl
mov
dec
ret
dec
daa
lods
pop
xchg
push
xchg
xor
push
in
pop
cmova
lea
sub
clc
cmpsb
xchg
testl
sahf
scas
mov
shll
aaa
cmp
dec
push
cmpsl
pop
pop
cwtl
inc
in
into
mov
call
pop
dec
lret
std
test
test
mov
adc
movsl
mov
pop
or
fscale
xor
mov
push
fldl
ljmp
or
mov
ret
enter
xor
loope
mov
popa
mov
iret
sarl
pop
or
pop
xor
sbbl
gs
sarl
push
dec
sub
sarl
sub
cmpsl
dec
ss
push
lds
out
mov
mov
pop
inc
mov
insb
mov
stos
xchg
xor
sub
push
jmp
mov
pusha
xchg
mov
es
lods
xchg
stc
mov
or
icebp
jne
sarb
push
sbb
dec
mov
xchg
les
dec
in
push
xlat
repnz
movsb
clc
iret
pushf
mov
push
mov
bound
gs
aad
mov
jb
popf
mov
jecxz
cmp
adcb
rolb
mov
sbb
in
sbb
rclb
jns
arpl
mov
push
mov
xchg
scas
lods
cmpl
push
jle
or
sahf
dec
pop
push
pop
movsb
or
add
xchg
xchg
sub
mov
xor
ficompl
fwait
sti
fs
adc
andl
inc
fucomi
push
shrb
bound
sbbl
movsb
push
mov
cmpsl
jl
and
fdiv
cmp
int3
mov
cs
push
ret
adc
ss
es
mov
mov
pop
add
fistps
in
call
mulb
addr16
out
sub
cmp
jge
jnp
lret
push
sbb
jne
lods
je
jbe
int3
in
addl
movsl
cmp
lods
sub
cmp
scas
pusha
sbb
aaa
adc
outsb
or
paddsb
enter
xor
adc
sbb
dec
imull
inc
stos
dec
cld
roll
or
je
and
and
mov
xchg
jbe
dec
xchg
lea
sbb
rcr
mov
lret
inc
cltd
or
xchg
dec
out
mov
fidivs
lret
mov
inc
ljmp
sbb
sbb
jnp
nop
inc
repnz
cwtl
and
out
push
add
mov
dec
push
stos
cmp
lret
sub
push
and
jg
cld
or
loop
fcompl
cmp
addr16
int
insb
imul
imul
lds
adc
fcmovu
inc
and
pop
cmp
add
test
add
pop
sub
xchg
loope
jae
pop
add
pop
scas
es
and
xor
insl
dec
cmp
or
sub
xor
cmpsb
test
ljmp
fcom
mov
fdivr
mov
and
loope
xchg
lret
fstps
lahf
shlb
daa
in
je
cmpsb
mov
and
inc
popf
fsubrs
dec
fldl
jmp
popa
push
rclb
mov
push
out
mov
sbbl
stos
inc
imulb
movsl
outsl
mov
fdivr
mov
fs
icebp
xchg
in
adc
xchg
out
xchg
inc
jmp
cwtl
lea
inc
push
xor
adc
xor
xlat
push
push
mov
dec
inc
stc
js
ja
call
cmpsb
mov
ss
ss
clc
xor
jne
js
sbb
jp
cli
or
mov
dec
imul
mov
jl
fwait
dec
mov
outsl
rcrl
inc
dec
mov
out
and
jb
mov
dec
mov
cmpsl
inc
sarl
or
lret
jnp
imul
in
es
add
sbb
inc
jmp
fsts
popf
hlt
cmp
scas
jecxz
cmp
cmp
adc
clc
adc
mov
pop
mov
mov
std
add
lret
cmp
es
jb
lea
adc
mov
pop
xor
fisttps
xchg
cmpl
push
lcall
orb
mov
mov
imull
lret
adc
cs
or
aam
aaa
push
xchg
push
jle
and
mov
fstpl
mov
sbb
pop
lods
push
cmpsb
sub
push
lret
rcrb
out
mov
push
pop
mov
insb
pusha
pop
rolb
mov
outsl
aaa
loop
lret
cmp
movsb
push
and
mov
push
sbb
cmp
and
add
xchg
jbe
data16
mov
hlt
jne
int3
mov
pop
incb
add
and
aaa
orl
or
dec
out
gs
xorl
js
mov
cli
outsl
pop
jl
jno
and
cwtl
test
sbb
dec
mov
leave
cmp
and
in
mov
inc
rcr
pop
mov
sub
daa
testb
jno
xor
mov
push
popf
into
call
add
xor
movsb
dec
add
xor
data16
outsb
mov
mov
pop
das
lds
shll
inc
stos
and
xor
repz
int3
lcall
mov
and
test
inc
ret
cs
test
das
mov
adc
push
push
iret
lcall
dec
cwtl
jnp
aad
popf
add
xchg
insl
jecxz
mov
test
pop
in
and
pop
cli
aaa
xor
addr16
jne
mov
and
adc
call
outsl
pop
push
push
andb
out
dec
and
aaa
and
ds
add
mov
test
daa
movsb
xchg
push
cs
dec
inc
sahf
sahf
adc
jb
jo
sub
leave
jle
mov
mov
insb
idiv
sbb
fisttpl
push
dec
adc
out
lsl
sub
fcompl
jnp
pop
add
mov
movsb
push
adc
jo
icebp
cmp
scas
xor
adc
dec
push
adc
dec
loop
pop
fimull
cmp
xchg
adc
mov
adc
cmc
test
and
mov
jge
mov
sbb
aad
fs
popa
mov
leave
in
aad
mov
mov
sub
xor
out
cmp
dec
les
pop
loope
mov
cs
movsl
jb
or
mov
loope
mov
pop
decb
inc
pop
popa
and
sbb
mov
adc
xchg
cwtl
xchg
jnp
mov
movl
push
jnp
lahf
test
shlb
and
popa
and
inc
cmp
add
mov
mov
add
or
push
mov
and
or
mov
lahf
cld
mov
xchg
fwait
mov
push
jno
fwait
mov
ljmp
jmp
ret
xchg
mov
lcall
enter
ret
in
cmp
xor
adc
out
call
mov
pop
lock
sub
shl
std
pop
sub
xchg
stos
pusha
xchg
jbe
aaa
xor
and
roll
sbb
stos
push
bound
adc
mov
xor
popa
in
faddl
int
ja
pop
or
ja
xchg
or
or
sub
int
jmp
xchg
adc
fstpt
lods
sbb
rolb
jbe
cld
arpl
mov
mov
sbb
sub
enter
xchg
movsb
inc
call
aaa
cmp
cmp
push
xor
add
or
insl
push
popa
jge
pop
cs
mov
and
mov
rorb
test
push
ret
js
js,pt
or
std
aad
testl
pop
xor
mov
bound
test
ss
xchg
test
std
cmp
jno
ljmp
cmp
add
inc
inc
adc
hlt
mov
idivl
xchg
cs
rcrb
push
push
inc
xchg
or
cwtl
sbb
aas
jg
jge
nop
int
fdiv
xor
jno
jne
daa
adcl
jo
and
cmp
mov
inc
or
movsl
sarb
inc
inc
xor
adc
xor
sub
cmp
mov
out
insl
cmpsb
add
sti
mov
push
popf
repnz
iret
xor
aas
mov
ret
cmp
cmc
icebp
cmp
aas
adc
pop
loopne
out
lahf
cmp
setge
sub
mov
out
test
movsb
sbb
and
inc
mov
xchg
mov
jne
pop
fistpll
popa
push
les
mov
stos
pop
ds
push
lock
dec
mov
cmp
lret
xor
fs
add
movsl
insb
shrb
adc
test
in
adc
add
mov
sub
mov
sbbb
std
stos
inc
pop
mov
push
ja
mov
add
dec
push
arpl
jle
inc
mov
pusha
lods
add
jg
xor
jbe
push
xchg
pusha
imul
ljmp
aad
inc
scas
sbb
xor
arpl
xor
subb
imul
push
pop
shll
cwtl
mov
test
add
adc
mov
mov
inc
ss
cltd
inc
sti
popf
iret
aaa
sub
mov
xchg
imul
rorl
pop
mov
in
push
pop
fld
sarl
push
test
inc
cmp
sbb
out
stos
push
dec
fstpl
sbbl
call
andb
dec
sbb
repz
divl
add
into
cmp
adc
les
aam
insb
xor
dec
push
or
shrb
sub
daa
mov
iret
and
loop
xchg
shl
xchg
test
ds
mov
cmp
daa
movsl
frstor
xor
adc
and
and
xchg
xchg
mov
mov
xor
lret
add
pop
lcall
or
int
popf
sub
inc
shll
scas
or
mov
pop
mov
repz
movsb
mov
cmp
xchg
jns
mov
dec
jmp
mov
inc
xchg
stc
push
imul
ja
jecxz
mov
ja
cmp
add
cmpsb
or
js
or
loop
mov
and
inc
stos
adc
ret
insb
pop
mov
stos
dec
dec
sbb
xor
add
and
in
loope
xor
dec
jl
lret
sbb
std
pop
adc
decb
insb
sub
pop
cmc
mov
mov
mov
jmp
pop
add
ds
fsts
add
push
mov
jp
pop
loope
sahf
lods
es
push
push
add
adc
inc
cwtl
stos
dec
aam
lcallw
rcl
ljmp
push
fxch
push
roll
inc
mov
icebp
xchg
dec
aad
cmp
adc
ret
scas
sti
xchg
arpl
xchg
mov
outsl
xor
sbb
cld
out
sub
in
pop
rcll
sbb
ret
loopne
jl
pop
lea
push
mov
jo
mov
xor
jno
pop
inc
stos
stc
dec
dec
dec
ja
fcomip
cmpsl
icebp
fsubrl
mov
lea
mov
sbb
ret
xrelease
lahf
into
fimuls
xchg
test
mov
ret
inc
push
cmp
inc
or
push
xor
bound
out
pop
sub
xor
and
mov
dec
es
cmp
sbb
mulb
xchg
out
movsl
and
xchg
jne
stc
pop
pop
pop
push
lods
dec
in
es
mov
rep
mov
fnstcw
and
inc
sbb
movsl
nop
mov
out
lods
outsb
xchg
vsqrtss
xor
cli
faddl
add
mov
shrb
xlat
and
ja
xchg
out
mov
rclb
pushf
xchg
mov
cmp
pop
test
xchg
and
mov
mov
push
jb
sub
fldl2e
xor
mov
mov
xchg
mov
faddl
scas
add
mov
outsb
loop
and
cmp
cmpsb
inc
popa
cld
cmp
pop
es
mov
xor
and
fldt
mov
fwait
addr16
mov
fs
outsl
test
popa
sub
cmp
fcmovb
xlat
push
or
or
incb
aad
movsl
add
add
xor
dec
sbb
ss
daa
mov
sub
movsb
aaa
mov
cmp
int
sti
and
loopne
popa
jecxz
dec
jne
adc
icebp
je
jae
clc
sbb
push
sub
bound
pop
add
or
in
loope
rcl
adc
mov
fbld
mov
cmp
lahf
xchg
cmc
dec
sbb
xor
mov
push
insl
ror
mov
jb
or
xlat
imul
or
cmp
fmull
shlb
inc
xlat
cs
repz
lahf
mov
mov
pop
adc
dec
lods
xor
scas
ja
jecxz
xchg
cli
shll
test
aaa
gs
jmp
clc
xchg
ds
xchg
xor
adc
mov
subl
inc
inc
fnsave
inc
test
and
push
and
out
mov
dec
push
adc
mov
out
push
fs
addr16
andb
fildll
fcomps
or
aad
scas
push
std
dec
int3
xchg
adc
js
aad
xchg
fstp
sub
hlt
or
les
cmpsb
pop
lret
add
lahf
fcoml
inc
fbstp
outsl
pop
popa
pop
push
jns
and
xor
pop
inc
fidivs
mov
xor
push
sbb
mov
jp
orb
xor
loopne
scas
mov
pusha
mov
sbb
inc
int3
push
lret
jecxz
sbb
iret
lds
inc
adc
push
adc
mov
mov
cwtl
sbb
mov
jge
sub
mov
daa
xchg
mov
rorl
std
loope
xor
lock
jge
xchg
jnp
pop
out
sbb
jmp
jmp
fldl
cli
testl
mov
dec
sbb
cmpsl
fcomps
push
into
movb
push
adcb
pop
xor
rolb
push
out
cltd
pushf
inc
mov
mov
inc
popa
pop
ljmp
and
mov
andl
fstp
fcomip
cmp
mov
push
adc
sbbl
daa
and
sub
in
jge
cmpsb
mov
int
sub
lcall
mov
dec
ja
jmp
mov
fidivl
xchg
jne
xor
mov
dec
icebp
jnp
dec
sub
push
and
cmp
into
pop
sub
rolb
and
xor
bound
adc
sbb
push
mov
inc
repz
mov
loop
mov
orl
mov
sbb
mov
inc
addr16
loopne
cmp
rcr
out
push
lds
mov
and
addr16
cs
or
mov
pop
cli
je
pop
cmpsb
clc
cmp
stc
sub
xor
std
mov
outsl
cltd
push
outsb
test
add
aas
and
adc
mov
cltd
jl
das
mov
pop
into
jmp
jl
cld
out
mov
dec
or
sbb
aad
icebp
xlat
in
inc
add
push
stos
repnz
loopw
call
sub
iret
aaa
cltd
addb
lods
or
xchg
mov
mov
subb
jp
dec
jns
test
hlt
mov
sub
dec
xor
push
or
shlb
sub
mov
cmpsl
and
xor
pop
sbb
pop
js
pop
into
ret
push
and
xchg
into
rorb
pushf
jae
mov
cwtl
and
inc
inc
js
into
cmpsl
mov
neg
dec
jns
mov
adc
sti
push
add
push
and
orb
mov
shlb
pop
xchg
aam
xor
loop
mov
fimull
pop
mov
data16
adc
lods
inc
mov
ret
shll
dec
faddp
das
pusha
add
ret
mov
jp
loopne
mov
out
mov
mov
imul
lock
and
jns
push
sub
adc
add
es
mov
stc
inc
jbe
sbb
push
cmpsb
rcrl
and
add
dec
jo
cmp
fcomps
pop
test
es
adc
cmp
ds
sub
sahf
fs
jb
sub
nop
das
add
mov
xchg
fdivrs
xor
daa
mov
mov
mov
in
outsl
or
push
daa
xor
dec
jge
mov
push
cmp
xor
xchg
fwait
mov
inc
repnz
in
dec
add
mov
push
js,pn
ret
rclb
xor
dec
or
inc
cli
inc
sbb
movsb
ss
fcoml
ja
mov
mov
jbe
pop
and
loop
jno
idivl
ja
adc
sub
xchg
mov
pop
xchg
push
jns
dec
addr16
scas
push
in
daa
and
jo
test
lea
adc
push
cmp
pop
mov
mov
ja
enter
cs
sub
aam
mov
movsb
sub
or
dec
fdivs
and
mov
and
mov
sbb
andl
imul
jge
lret
lahf
pop
mov
iret
pusha
push
pop
loop
mov
lods
pop
imul
dec
inc
xor
xchg
and
jl
dec
mov
sbb
mov
andl
xor
mov
enter
test
sub
mov
lods
imul
out
ss
sub
out
iret
mov
mov
pop
add
push
pop
xchg
lea
inc
jb
hlt
ret
push
pop
ds
out
inc
in
xchg
std
jle
xor
stos
cli
xchg
pop
dec
sbb
cmp
jae
sub
repnz
ljmp
mov
dec
or
imul
daa
es
pop
movsl
jg
in
fdivl
pop
insl
cmp
sub
cmp
outsl
mov
dec
push
push
adc
bound
lods
mov
push
pop
jle
lret
cmc
push
mov
sbb
push
imul
loop
xchg
fisttpll
aas
aas
fadds
test
scas
and
add
outsb
ficomps
xor
lods
adc
loop
dec
inc
adc
dec
cs
mov
lahf
out
jecxz
test
mov
lods
mov
xlat
sub
jb
les
and
or
cmp
sbb
aas
cltd
pop
in
xchg
jmp
adc
xchg
xor
sti
jo
mov
mov
fwait
inc
ffreep
jmp
dec
cmp
xchg
mov
sbb
jp
cmpsb
out
out
jecxz
or
mov
dec
push
xchg
stos
dec
mov
adc
sub
inc
xor
jg
imul
inc
xorl
shlb
mov
pop
jge
xchg
divb
in
mov
out
cltd
rcrl
jecxz
mov
sub
lahf
fwait
jo
or
in
jle
push
xchg
dec
ds
std
in
cmp
pusha
insl
jo
int3
cltd
fwait
push
mov
jge
xor
mov
jmp
xchg
mov
rorl
test
or
pop
inc
push
xor
add
xchg
ds
int3
jecxz
repz
push
dec
jle
in
inc
xor
pop
aam
sub
pop
test
cmpsb
dec
dec
push
lcall
adc
lods
push
cmpsb
in
scas
add
scas
insl
lods
inc
add
adc
pop
mov
xchg
jns
sub
cmp
popf
lcall
ds
stos
lea
popf
or
cs
test
call
jno
fldenv
push
mov
adc
rclb
mov
xor
lret
jne
sub
loop
add
mov
mov
mov
insb
mov
ss
jmp
mov
arpl
mov
adc
iret
shrl
push
ds
lret
int3
dec
fnsave
mov
subb
dec
je
xchg
sub
jbe
sbb
js
addr16
xchg
mov
jge
and
jb
sbb
push
jmp
fistpll
inc
mov
dec
mov
and
fists
xchg
xor
mov
xor
movsl
mov
out
outsl
and
add
in
leave
scas
ds
cli
popf
notb
stos
and
fdivs
cwtl
popf
xor
or
shlb
mov
ret
mov
enter
movsl
cmc
incb
or
lods
mov
push
cwtl
arpl
sbb
mov
lods
sub
les
mov
dec
hlt
sub
dec
adc
idivl
or
lcall
enter
xor
adcb
and
dec
cmp
rol
out
mov
popf
loopne
mov
pop
lods
lahf
inc
xchg
cmp
hlt
pop
adc
sbb
inc
mov
jmp
push
jmp
mov
in
mov
dec
inc
or
push
pop
push
and
push
hlt
push
fildll
pusha
rolb
jle
adc
iret
xor
lcall
push
fistpll
sub
test
push
test
push
add
movsl
cmpsb
inc
mov
testb
daa
fildl
cmp
xchg
add
xorb
jmp
xchg
mov
test
mov
orl
popa
pop
pushl
add
outsl
push
sub
aam
push
adc
inc
dec
mov
lds
out
pop
inc
xchg
cwtl
aam
inc
cli
mov
std
ficompl
dec
push
icebp
outsl
mov
nop
orb
filds
aad
popa
cmpsl
clc
mov
cmp
stos
or
inc
mov
sahf
jne
inc
adc
ds
int
pop
out
sarb
inc
fsubp
mov
mov
jg
ljmp
mov
push
shll
xchg
mov
aad
aas
cmp
cmp
aam
and
pop
xchg
mov
lea
adc
or
mov
jmp
sub
adc
mov
inc
int
test
popa
scas
add
dec
jno
or
and
xor
xchg
or
xchg
mov
mov
xor
es
lock
iret
jbe
into
adc
jne
xor
xchg
dec
fldenv
xor
jmp
dec
pop
sbb
xchg
out
leave
adc
mov
fnstenv
xor
jmp
mov
aaa
scas
dec
sbb
call
push
inc
nop
xor
sbb
add
inc
cmpsl
ljmp
sbb
fcmovb
insb
xcrypt-ecb
cmpsl
adc
sbb
rcr
mov
sahf
cmc
lret
add
pusha
shrl
inc
pop
or
adc
cltd
addr16
addl
out
mov
iret
rclb
fmuls
dec
movsl
data16
xchg
xor
test
and
push
jle
ret
push
jo
hlt
movsb
repnz
into
xchg
and
sub
sbb
ret
cmp
pop
fdivl
push
loopne
repz
cmc
xchg
cmp
rcr
mov
leave
loop
addr16
ret
mov
inc
dec
insl
xchg
cmc
imul
mov
jp
inc
mov
xor
and
shll
push
and
imul
call
movsl
or
jge
lods
jg
xchg
xor
scas
pop
jno
daa
jno
add
insb
and
lods
cld
ljmp
xchg
mov
mov
and
and
jno
test
sbb
stos
xchg
add
movsl
mov
in
roll
nop
inc
or
add
fcoml
mov
imul
aam
adc
and
inc
xchg
sarb
jnp
out
sbb
sub
sub
add
jnp
sbb
into
jno
pop
repz
inc
adc
lcall
and
dec
lret
dec
add
xlat
xlat
insb
mov
imul
push
pop
les
out
leave
fsubs
scas
push
dec
xlat
dec
fiaddl
mov
and
lea
dec
push
fists
pusha
pop
pushf
fucom
into
or
mov
dec
adcb
arpl
js
decl
push
add
fiadds
fstp
lock
mov
lret
int
push
cmp
cli
xor
cmp
leave
cmp
lea
clc
aaa
pop
rcll
xor
jnp
ss
xchg
fisubrs
popa
or
push
hlt
sti
je
xor
es
int
out
aad
sub
sub
add
test
inc
notb
pop
in
add
push
dec
out
js
dec
lock
push
stc
push
dec
ja
cmp
inc
in
inc
inc
out
or
stos
pop
out
push
enter
dec
clc
daa
push
les
jo
test
jns
sbb
push
jbe
xor
inc
cmp
cmp
mov
push
fldenv
pop
mov
inc
arpl
xchg
int
movsl
scas
incl
mov
ret
sub
stc
sbb
and
mov
int3
mov
sub
jmp
loope
pop
in
in
mov
in
push
cltd
dec
nop
pop
fstps
xchg
pop
jnp
pop
add
push
dec
mov
shlb
mov
dec
fwait
stos
push
pop
pushf
push
xchg
xchg
cmpb
fiaddl
cmpsb
sub
idivb
jl
add
add
lock
inc
ja
je
popa
test
cmp
mov
adc
repz
fildll
jne
lret
add
insl
jne
pop
aam
movsb
pop
aad
adc
sub
lods
add
movsl
push
aad
xchg
mov
scas
push
test
cmp
out
das
lret
pop
addb
idivb
sub
mov
testl
inc
sub
jmp
out
inc
jo
jno
hlt
dec
lea
pushf
mov
xor
sub
add
fs
fxch
movsl
or
inc
sbb
repnz
ret
mov
or
jmp
test
ret
je
call
aas
mov
dec
cmpsb
cs
fimuls
aas
sub
rcrb
cmp
cmp
adc
out
js
and
sbb
push
inc
pop
clc
decl
pop
pop
or
faddl
daa
xchg
rolb
stc
mov
mov
mov
xor
xor
xchg
xor
jp
jbe
mov
jle
hlt
or
jo
cwtl
jecxz
repz
mov
popf
mov
dec
sahf
mov
mov
dec
nop
xchg
jp
push
dec
add
mov
outsl
and
xor
imul
ljmp
or
inc
add
test
fldenv
jne
scas
pushf
and
enter
mov
adc
lahf
fcompl
lds
and
add
lea
adc
xchg
dec
shrl
mov
fisubl
add
mov
sbb
sarb
adc
data16
jmp
push
mov
push
adc
shlb
adc
push
and
lods
push
clc
dec
or
jne
cmpsl
lea
std
sub
add
and
or
insb
dec
hlt
mov
mov
xor
mov
jbe
xchg
and
mov
mov
or
sbb
xchg
push
xchg
mov
jno
inc
dec
jmp
pop
mov
stc
stos
push
mov
mov
or
cwtl
out
dec
add
cmpsl
xchg
sbb
outsb
arpl
mov
test
xor
dec
fcmovnb
push
jecxz
cmp
pop
and
xor
xchg
inc
or
into
es
xor
mov
testb
movsl
pop
add
jg
mov
fadd
insl
sbb
leave
push
pop
ret
jmp
shlb
adc
fdivp
xor
or
jecxz
mov
cld
jns
ja
mov
clc
and
loope
push
fistpll
dec
out
cmp
xchg
cltd
mov
or
aaa
sub
cmp
jne
mov
pusha
lret
nop
inc
inc
inc
aad
pop
loope
xor
fsub
inc
cmp
ljmp
stc
cmp
lret
pop
mov
xchg
push
jns
ja
dec
sbbl
xchg
cmp
mov
ja
sti
cmpsb
mov
and
mov
mov
and
cwtl
and
ds
pop
push
outsl
mov
popa
sub
fs
mov
call
pop
negl
jo
mov
adc
mov
and
jge
pop
jbe
mov
mov
enter
pop
out
inc
inc
add
out
mov
out
mov
enter
add
add
sbb
lret
es
sbb
lahf
or
arpl
aas
movsl
test
repz
cltd
imul
inc
loopne
lea
pop
adc
mov
dec
xchg
ret
je
imul
jle
push
leave
aam
lahf
jne
mov
dec
add
jo
xchg
in
xchg
xchg
push
mov
mov
dec
xchg
sbb
fs
jmp
or
ja
js
cmc
cmp
sahf
mov
xor
xlat
jno
lahf
mov
std
cmpsl
sbbb
pop
jae
clc
subl
push
adc
lds
lods
mov
mov
mov
mov
sahf
inc
rol
das
and
pop
stos
popa
pop
pop
jge
sub
sbb
sbb
mov
fwait
scas
popf
adc
out
pop
cmp
stos
cli
popa
cmp
pusha
xchg
pusha
vunpcklps
pop
insl
in
std
cmp
test
scas
imul
je
les
insb
fistl
push
enter
lcall
cmp
cmp
xchg
sub
mov
add
xchg
push
mov
insl
flds
or
sti
inc
pop
adc
sub
push
lds
mov
outsb
lock
and
inc
xor
aas
cmp
or
fiadds
mov
xchg
sub
jns
orb
sub
xchg
mov
adc
mov
dec
push
mov
dec
repz
pushf
fbstp
cltd
inc
mov
xor
xor
jge
idivl
pop
or
fidivs
gs
lcall
sbb
int3
sbb
testl
xor
push
aaa
push
imul
cmp
ffreep
jg
cmp
mov
jae
push
pop
push
aas
mov
adc
push
lcall
mov
or
xchg
lret
pushf
stos
repz
imul
in
inc
jg
jle
push
int3
arpl
loop
dec
mov
pusha
into
sub
sbb
dec
cmp
pop
mov
stos
inc
in
gs
push
and
xchg
push
sbb
pop
shr
push
push
dec
mov
dec
mov
cmpps
not
xchg
pop
xchg
ss
mov
pop
xor
mov
ret
into
inc
jb
push
shll
pop
xchg
les
daa
jns
in
cmpsb
mov
imull
dec
inc
fld
mov
dec
hlt
test
daa
out
filds
dec
insb
cmpsb
shll
repnz
sbb
mov
or
sub
dec
dec
jae
daa
mov
mov
cwtl
idivb
ret
sar
add
repnz
leave
aam
and
xchg
mov
or
mov
icebp
mov
mov
dec
mov
call
loop
or
xchg
repnz
xor
mov
and
jge
cwtl
rcr
add
inc
rol
dec
arpl
dec
push
pop
mov
incb
test
jno
clc
nop
test
cvtps2pi
push
fwait
mov
push
pop
mov
push
lret
shr
frstor
inc
iret
aam
jl
sbb
jns
punpcklbw
inc
cmp
lret
inc
mov
pop
daa
icebp
aam
push
shlb
out
aam
sbb
cmp
sbb
add
mov
and
fldenv
add
stc
cmp
mov
mov
xchg
fildl
xchg
outsb
in
fildll
mov
pusha
ljmp
stos
les
out
cmpsl
repz
mov
adc
ss
push
sar
bound
cs
test
in
call
inc
out
frstor
adcl
dec
sbb
cltd
jge
or
adc
insb
jnp
rolb
inc
subb
shlb
lods
fimull
pushf
fldcw
pop
jecxz
rcrl
lahf
lret
call
jmp
cmpsb
add
shll
xchg
jbe
and
daa
jge
sbb
loope
movsl
or
xchg
cmp
int
fnstenv
ret
jmp
pop
push
imul
mov
sub
mov
or
or
stc
push
xor
mov
sbb
std
sti
gs
movsl
adc
adc
imul
inc
jle
jns
fwait
addr16
and
xchg
scas
push
clc
and
jecxz
mov
sbb
inc
mov
imul
mov
outsb
mov
inc
add
pop
aad
shll
and
pop
xor
pop
in
imul
xlat
movsl
flds
jb
stos
pop
out
jle,pn
test
push
movsb
repz
insb
daa
je
int
or
mov
in
and
dec
xchg
jl
adc
cs
in
lock
push
je
pop
add
mov
add
imul
lods
lret
cmp
adc
repz
push
das
xchg
inc
jbe
mov
push
adc
sbb
xchg
mov
inc
inc
adc
call
imul
hlt
xor
add
aad
imul
push
int
data16
mov
aam
jne
mov
jno
xchg
jbe
xor
pop
sarb
sbb
std
push
scas
inc
push
enter
jo
lods
xor
sub
push
das
push
subl
adc
lret
inc
jmp
pop
jne
loope
repz
jge
in
ffree
pop
mov
lcall
adc
enter
add
in
jl
loopne
add
pop
fdiv
in
xchg
bound
test
or
sub
push
pop
sbb
jmp
inc
stos
inc
mov
or
sub
fldcw
and
faddl
and
jno
leave
pop
and
and
mov
mov
stos
cmp
ds
test
std
mov
fcmovu
inc
cmp
out
jae
aaa
mov
stc
outsl
add
mov
outsl
push
je
popf
xchg
sbb
pop
and
test
pop
pushf
repnz
jmp
pop
add
pop
or
dec
roll
mov
jp
or
xchg
dec
scas
and
rclb
sub
or
js
in
outsl
push
into
insl
fsubrp
btc
sbb
fbld
inc
and
mov
cmp
pop
out
push
cmp
inc
mov
sbb
out
jp
loop
das
mov
pop
icebp
and
addr16
call
mov
adc
push
mov
add
bound
shr
dec
adc
inc
movsl
scas
insb
lods
dec
notl
fistl
popf
mov
or
xor
xor
subb
aad
lret
xorl
inc
cli
fisttpll
xor
lcall
sbb
das
nop
mov
aad
sub
inc
call
test
dec
or
in
push
enter
sub
lret
xchg
loope
cmp
aas
mov
and
xor
es
cld
aaa
push
push
xor
xchg
pop
mov
push
add
pop
pushf
ja
sbb
test
pop
jmp
je
lret
sbb
inc
jle
outsl
sbbb
inc
cmc
sbb
inc
push
jmp
loop
mov
mov
rclb
and
mov
jae
or
int
iret
adcb
xor
push
xlat
aaa
stos
adc
arpl
pop
movsl
lds
mov
jbe
adc
loop
js
pushf
fwait
sarl
jae
lock
sub
xor
push
gs
pop
cmp
push
add
or
jmp
mov
dec
add
ret
stos
sub
dec
pop
lds
dec
mov
adc
or
xor
mov
shlb
sub
sti
fidivrs
imul
popa
and
mov
mov
inc
sbb
xor
dec
mov
push
les
push
fstl
add
dec
orb
mov
xchg
imul
push
mov
pusha
aaa
cmp
scas
adc
cmovge
inc
dec
fs
iret
and
mov
push
lds
fstl
loopne
jl
jo
and
mov
lods
scas
js
rorl
aas
notl
and
pop
jl
cli
push
lret
mov
xor
aam
jp
jbe
mov
cltd
jp
rcrl
sub
rolb
mov
mov
xchg
nop
push
or
inc
fdivrl
and
loope
je
mov
mov
jg
test
scas
mov
sub
dec
cmpl
push
and
jle
xor
push
outsb
xchg
imul
cmpsl
mov
sbb
sbb
lahf
inc
into
xor
and
std
pop
fisubrl
daa
das
les
mov
jbe
mov
std
lds
add
test
mov
sbb
fcmovne
icebp
pushf
dec
push
das
roll
mov
lret
cmp
xchg
push
pop
sbb
add
push
sbb
cmp
cld
xor
push
aad
pop
inc
in
inc
ss
iret
xchg
negl
in
xchg
push
pushf
pushf
cltd
rol
das
ljmp
inc
inc
addr16
test
insb
scas
insb
popa
and
filds
js
pop
jmp
push
pop
test
add
and
imul
mov
sarb
imul
sbb
or
add
adc
pop
sub
xchg
mov
cmpsl
sub
dec
or
out
lds
in
fucom
pop
cli
cltd
push
sbb
push
add
xchg
insl
and
call
leave
dec
cmp
add
pop
pop
int3
lret
cmp
mov
aas
mov
test
leave
xor
or
into
decb
ret
or
test
sahf
mov
test
int3
jbe
cmp
push
mov
and
dec
or
and
nop
push
add
mov
xor
mov
jne
lods
scas
and
aas
in
data16
add
mov
jl
adc
sub
sub
mov
sahf
hlt
in
mov
fs
ret
bound
xor
or
mov
sub
jae
mov
inc
insb
lods
adc
insl
push
and
adc
cltd
hlt
sbb
mov
jmp
lret
test
enter
fdivl
cmpl
cltd
and
cltd
popa
lea
cmp
add
sub
lock
sbb
test
push
cmpsb
pushf
imul
dec
addl
inc
das
cli
dec
mov
in
das
dec
or
pop
call
xchg
rolb
cmp
loopne
std
jl
pop
mov
stc
sub
cmp
lahf
clc
push
mov
negl
test
cs
and
add
rcr
jns
jg
jecxz
pushf
jno
push
popa
push
mov
sub
jnp
rcl
mov
pushf
aam
cld
push
decb
inc
test
repz
pop
jle
fsubrl
xchg
fstpl
add
hlt
dec
sarb
into
sbb
out
cmpsb
push
adc
cmp
test
pushf
mov
xor
mov
inc
mov
cmc
sbb
pop
adc
movsb
dec
or
dec
dec
mov
mov
mov
cmp
test
add
stc
mov
call
dec
mov
inc
outsb
xchg
or
dec
sub
into
dec
cmp
outsb
cltd
pop
jge
shlb
jb
sbb
in
or
pop
mov
imul
fs
pop
shl
scas
das
lods
pop
sarl
xor
ret
addl
jmp
fldcw
loopne
int3
sub
bound
mov
cmp
sbb
mov
test
cmp
dec
xorl
dec
out
into
sbb
xchg
cmp
pop
out
jo
mov
xor
mov
mov
pop
pushf
out
popa
lods
xor
pop
das
xchg
fidivrl
adc
pop
sub
frstor
push
jnp
lods
adc
rcr
lds
xchg
lea
stos
dec
add
dec
xchg
popa
xor
lods
adc
mov
mov
pop
xchg
lds
cmp
mov
cmpsl
setno
out
shlb
arpl
mov
mov
dec
stc
std
call
int
scas
sub
hlt
cmp
mov
icebp
test
mov
nop/reserved
lock
mov
in
and
movsb
jns
scas
xchg
pop
dec
jo
subb
sub
fnstenv
test
or
pop
loop
or
adc
test
lock
cmp
adc
out
push
inc
test
push
or
dec
ja
adc
ljmp
xor
mov
sbb
ljmp
aaa
pop
out
movsb
repnz
mov
roll
es
cld
fmuls
or
jo
or
out
jbe
jnp
scas
sub
scas
jge
out
adc
cmp
mov
add
inc
popf
scas
fidivrl
cld
scas
jns
sbb
lock
divl
aaa
sbb
rclb
mov
shll
mov
cmp
mov
push
adc
push
and
mov
lret
insb
mov
outsl
sbb
and
dec
dec
dec
and
mov
sub
cli
inc
popa
lock
imul
jle
adc
fcmovu
cmc
adcl
call
xor
xor
inc
inc
nop
cmp
fcmovnu
jg
test
lahf
jbe
add
mov
add
imulb
cmp
cmpb
nop
cmp
lahf
pop
adc
sub
mov
outsl
into
add
inc
pushl
jp
jg
xor
dec
cmpsl
leave
lret
arpl
push
shl
sbb
or
cmp
cmp
pop
lret
faddl
lods
mov
sbbb
mov
mov
out
sbb
daa
or
jl
call
mov
mov
lods
mov
lret
ret
test
mov
sbb
fldenv
repnz
and
jbe
jle
mov
mov
insb
xchg
jo
jg
inc
icebp
jmp
xchg
cld
cmpsb
ja
mov
ljmp
dec
pop
ror
int3
mov
out
mov
push
xor
cmc
xchg
sbb
inc
mov
pop
es
jmp
rcl
mov
nop
jl
mov
aas
mov
add
sbb
xchg
cmp
out
sub
in
in
and
out
sarl
dec
inc
xlat
outsl
push
add
inc
addr16
push
xlat
pop
cmp
imul
in
xchg
add
js
and
out
out
imul
pushf
push
mov
js
adc
cmp
int3
loope
cmp
pop
inc
or
mov
dec
mov
xor
aam
inc
imul
stos
ret
xchg
sbb
and
add
adc
mov
dec
mov
jecxz
ljmp
mov
jl
mov
mov
cmpb
lods
cmpsl
and
sub
mov
rorb
and
mov
or
push
std
scas
and
push
jno
cmc
fcoms
bound
xlat
mov
adc
fisttps
add
test
pop
mov
xchg
outsl
data16
ljmp
dec
mov
xchg
add
lahf
aad
mov
push
ret
pop
push
aaa
add
xchg
inc
incb
stos
pop
jnp
stos
xchg
jo
in
fwait
rcl
mov
inc
ja
mov
mov
sbb
lcall
adc
pop
sub
js
clc
in
pop
inc
mov
xor
push
sbb
xor
fiaddl
sahf
int3
and
aaa
test
adc
in
adcl
jne
sbb
and
pop
mov
xchg
adc
adcb
mov
cld
adc
scas
push
add
cmpsb
in
mov
adc
cld
or
add
mov
add
adc
or
jle
cltd
ret
mov
mov
lcall
add
bound
popf
mov
sbb
push
iret
xchg
imul
pusha
repz
icebp
xchg
mov
xchg
inc
test
sub
cmp
push
cmp
sahf
add
out
mov
adc
xchg
adc
mov
or
loop
stos
es
cmp
pop
sub
xorl
mov
sub
push
jp
pop
jmp
jne
or
cmp
dec
repnz
lea
lea
and
aaa
rorb
xor
dec
sub
push
cmp
test
push
sbb
rcll
mov
fildll
enter
push
mov
int3
lahf
mov
lret
sbb
popf
xchg
popa
sub
adc
pop
cli
mov
sti
sub
mov
mull
sbb
mov
aad
cmc
cmp
lods
jp
push
loopne
inc
add
sbb
push
jae
popa
jp
addl
xchg
addr16
outsl
sub
sbb
fisttps
jge
xchg
mulb
fs
xchg
ss
call
jnp
insl
mov
xchg
shll
jg
jno
cld
lcall
andl
cwtl
arpl
int
stc
mov
cmpsb
out
repnz
sbb
icebp
add
push
stos
std
dec
lret
testb
pop
pop
cli
mov
pusha
cmp
js
xor
loopne
adc
add
push
je
rorl
add
cmc
std
jae
jae
data16
adc
int3
scas
cwtl
icebp
fidivrs
daa
fmul
stos
cmp
es
xchg
frstor
jo
or
mov
out
fwait
test
xor
fcomi
addr16
sbb
lret
sub
out
aam
in
das
pop
push
jae
gs
mov
push
rcl
lret
enter
outsl
dec
lret
mov
sub
dec
or
lret
dec
pop
push
in
or
and
pop
je
push
mov
pop
mov
mov
push
imul
js
fnstsw
push
push
jl
or
xlat
outsb
cld
push
ja
jbe
mov
jmp
dec
pop
mov
xchg
mov
repnz
outsb
out
inc
mov
negb
adc
sub
mov
and
push
cmp
push
mov
fs
xchg
iret
fnstenv
push
hlt
movl
popa
ja
dec
mov
les
push
xchg
sub
lahf
cld
pop
mov
cmc
cmp
jb
pop
movsb
pushw
cwtl
jp
add
fnsave
aaa
sti
hlt
cltd
mov
jnp
mov
sub
sbb
jg
mov
les
add
or
dec
fs
mov
mov
xchg
push
adc
mov
mov
mov
mov
mov
or
or
dec
inc
sbb
clc
push
xchg
mov
add
pop
sahf
sbb
push
cmp
es
jl
in
push
inc
jge
jg
psubw
fidivl
bound
popa
xchg
popa
mov
sbb
inc
xchg
cli
push
loope
mov
and
shrb
jmp
sahf
fsub
sub
add
xchg
test
test
push
mov
mov
xchg
push
in
nop
mov
sbb
gs
pop
or
push
xor
bswap
lahf
and
adc
test
repnz
sti
mov
aas
xchg
movsl
and
testb
lods
sub
test
fs
cmpsl
or
mov
push
xor
sar
push
xchg
mov
call
xchg
shlb
jb
stc
push
push
stos
stc
xchg
and
and
push
dec
ljmp
fmull
enter
mov
pop
rclb
sbb
lahf
ret
cltd
xchg
das
mov
ss
sbb
or
jns
mov
out
inc
xchg
sbb
push
jns
enter
xchg
adc
int
ficoms
mov
outsl
jecxz
jg
ja
sub
pop
outsl
imul
add
insb
in
imul
ljmp
leave
lea
roll
or
mov
mov
lds
cmpsl
imul
mov
push
data16
xchg
xacquire
lahf
jae
addr16
pop
jae
xorb
sbb
mov
sub
add
fldenv
push
mov
add
ss
imul
add
aad
test
stos
cwtl
jb
and
jne
cmc
add
jb
inc
sbb
inc
enter
add
mov
clc
and
inc
and
movsb
aam
out
int3
xchg
ja
jae,pn
loope
loope
popf
xor
cwtl
cmpsb
lret
push
push
aaa
mov
cltd
cmp
adc
in
xor
cmp
lret
jae
jge
insw
loop
idivb
fistl
mov
xchg
popf
jno
adc
mov
mov
mov
out
sbbb
xchg
jmp
mov
imul
push
ljmp
push
or
xchg
cmp
pop
fistpl
popa
movsl
pop
cmp
ds
mov
std
mov
xchg
mov
xchg
mov
cld
mov
es
pop
ret
sub
test
stos
outsl
arpl
test
bound
dec
jno
inc
mov
push
loope
lcall
loopne
mov
dec
cmp
in
test
aaa
pop
ds
mov
stc
dec
das
add
dec
jnp
pop
pop
jle
xchg
mov
pop
jns
outsb
xor
iret
mov
ja
jae
enter
pop
cli
js
sbb
jns
jnp
mov
adc
arpl
les
cltd
xchg
incl
arpl
mov
mov
and
int
sbb
es
flds
and
lret
jne
inc
sbb
int
and
lcall
outsb
xchg
inc
push
pop
mov
xor
lahf
xchg
cmp
es
xchg
add
in
or
add
mov
and
scas
scas
test
js
mov
ja
dec
lret
mov
dec
lock
in
mov
es
nop
cli
movsb
js
xchg
push
push
mov
jp
jns
aaa
arpl
lods
or
mov
adc
mov
dec
mov
or
or
xor
xchg
add
push
xchg
shl
or
xchg
in
cmp
adc
xlat
mov
sahf
jp
negl
xchg
ret
jbe
mov
daa
flds
xchg
hlt
icebp
xor
xor
lods
loope
imul
push
sub
add
xchg
sub
mov
and
movsl
pop
lret
fs
pop
ds
or
hlt
xor
mov
ja
jns
mov
inc
dec
xor
adc
sti
jbe
adc
je
sub
movsl
xor
jne
das
push
add
pop
xor
push
jns
je
rcrl
call
repnz
or
add
cmpl
ja
and
ret
add
push
dec
negb
push
rorb
add
data16
lea
imul
iret
mov
add
les
dec
inc
push
and
stos
test
cs
mov
cli
out
push
xor
cltd
jb
or
cmc
jmp
orl
loopne
dec
mov
jbe
xchg
les
mov
shlb
ja
mov
loope
lret
aas
inc
pop
jns
and
rorb
shll
mov
outsb
inc
popw
or
mov
out
lods
pop
gs
cli
aam
push
or
cmp
lds
sti
sahf
jle
jbe
adc
mov
pusha
mov
dec
xor
lcall
aaa
sub
insl
pop
mov
daa
rorb
mov
pop
sub
or
dec
adc
mov
mov
cli
mov
cmp
mov
rcrl
ret
add
sahf
iret
and
filds
jl
jo
sub
ficoms
pusha
add
or
sbb
jg
xchg
mov
test
pusha
jge
aam
push
or
push
adc
aaa
sbb
lock
push
xor
xchg
outsl
xchg
mov
ljmp
adc
int3
js
pushf
xlat
push
outsl
mov
loop
cmp
pop
adc
rol
lds
popa
push
cmp
inc
popf
and
pop
orl
jo
fistpl
dec
push
fisubs
jae
add
sub
fdivrl
mov
jae
add
sbb
idivl
pop
cmpb
dec
mov
repz
lds
dec
xor
push
cli
ds
in
std
xchg
inc
stos
cmpsl
dec
rclb
sti
sub
inc
out
dec
lcall
repnz
js
lods
push
movb
imul
test
in
cmc
sub
inc
stos
and
sbbb
js
repz
push
inc
movsl
stos
fcmovnbe
pop
out
push
fisubrl
std
jle
js
popf
rcrb
jae
cmp
out
loop
xor
xor
dec
fcompl
repnz
rcll
in
pushf
iret
test
mov
call
or
push
fmull
jns
mov
adc
mov
pop
fstpl
adc
aaa
pushf
hlt
mov
mov
push
push
xchg
jns
adc
fisubs
movsl
lret
lds
pop
xor
imul
mov
ja
adc
cmpsl
fwait
cmpsb
xrelease
dec
into
xchg
arpl
mov
lock
daa
push
xor
add
cmp
or
jle
shlb
enter
aas
xchg
pusha
push
lds
fstp
cmpsb
outsl
inc
loope
into
or
sub
pop
xchg
and
push
sub
test
mov
inc
and
push
pop
dec
cmp
push
adc
sbb
aaa
movsb
pushf
mov
cli
fwait
mov
jge
push
int
fimuls
xchg
loopne
shl
jne
jg
or
xchg
xchg
cmpsl
push
or
adc
sub
xlat
out
es
sbb
mov
rcrl
adc
pop
sub
xor
ja
stos
xchg
iret
sbbl
addl
aam
mov
outsl
xchg
cwtl
lds
and
mov
or
add
xchg
sub
movsb
inc
jg
push
or
jbe
sahf
insb
xor
push
push
xor
out
arpl
test
push
repz
mov
sub
ja
lods
sub
add
test
int3
mov
cmp
cmp
clc
mov
in
mov
ds
sub
orb
test
sahf
jmp
jne
mov
add
dec
out
pusha
and
scas
xor
pop
lahf
push
mov
adc
mov
neg
xor
aas
xor
stos
inc
js
sbb
cmp
or
jmp
or
int3
mov
fists
mov
pop
out
pusha
aaa
scas
push
aas
fmul
mov
sbb
js
ds
mov
or
xchg
sub
xchg
adc
jecxz
inc
cmpsb
cmpsl
adc
insb
inc
hlt
mov
adc
cli
movsb
ja
xchg
mov
loope
jle
mulb
add
insb
add
into
and
sub
stos
jae
mov
into
test
jbe
mov
test
push
and
pushf
sbb
mov
mov
cmp
inc
sahf
jmp
dec
sub
jmp
xchg
sbb
dec
inc
pop
xlat
cmpsl
das
dec
scas
inc
outsb
pop
cmp
lcall
int3
ss
add
cmp
cmp
sub
mov
mov
pushf
iret
stos
lods
inc
adcb
xchg
dec
aas
rcll
sub
fdivs
das
outsl
leave
jo
add
adc
insb
lea
ficoml
mov
mov
fmull
adc
mov
pop
bound
inc
pop
add
bound
sub
in
dec
cmp
inc
mov
pop
xlat
xchg
in
icebp
sub
inc
call
fistpl
cs
cmpsl
cld
adc
or
cmp
or
stc
cmp
aas
xchg
call
lea
dec
sarl
fwait
sub
push
mov
ret
enter
xor
cmp
jo
movsb
xor
mov
or
jnp
push
mov
or
fs
jae
out
scas
cmp
sbb
xor
mov
jp
cmp
and
adc
lcall
stos
and
iret
inc
js
ret
in
mov
les
pop
arpl
jge
leave
out
lods
out
lret
and
fistpll
cmp
xchg
les
xchg
cmp
push
push
mov
daa
dec
cltd
icebp
dec
xchg
cmpsb
mov
push
xchg
cmpsb
dec
sub
clc
test
sub
flds
inc
mov
pop
out
cmp
ja
inc
adc
ja
into
loope
pop
es
int3
ss
mov
jge
mov
ljmp
inc
leave
mov
test
inc
pop
xor
xchg
mov
lret
and
imul
jmp
mov
cmp
outsb
mov
andb
sub
outsl
mov
sub
jnp
leave
ja
clc
rcl
cmp
jno
xchg
cmp
nop
add
mov
push
or
cwtl
fistpl
in
inc
mov
dec
or
and
dec
call
icebp
fs
cmp
loop
outsl
jmp
cs
das
fimull
xor
dec
aas
lcall
lods
cmp
push
pop
xchg
mov
popf
loope
jbe
cmc
movsb
mov
stc
push
pop
ja
scas
loope
ljmp
ret
fdivs
add
push
jne
insb
push
push
jnp
into
into
pop
por
iret
xchg
xor
cs
xchg
fcos
or
xchg
sbb
cmpsb
ds
mull
dec
arpl
xchg
insb
call
adc
sbb
push
mov
movl
pop
stc
xor
push
jne
mov
add
test
push
shll
gs
cmpsb
and
pop
pop
cmp
mov
les
push
loopne
sbb
mov
loopne
stos
dec
sub
push
out
bound
aad
jb
rorb
dec
das
cmp
and
pinsrw
xchg
dec
xchg
lahf
cwtl
lock
push
jb
clc
fs
dec
out
ficompl
sub
jge
arpl
cltd
add
mov
js
mov
rolb
mov
shrl
or
cmp
ficomps
fstps
pop
push
cmc
bound
inc
arpl
sbb
dec
loop
rorl
movsl
and
jle
mov
sbb
xchg
cltd
jb
mov
or
nop
push
daa
cmovns
pop
cs
xor
lcall
dec
lods
sbbl
jmp
lfs
jg
enter
mov
stos
inc
adc
jg
lds
and
push
pop
aam
movsl
sub
fdivs
xchg
lret
mov
rcrl
xor
repz
movb
in
cmp
add
cmp
push
sub
jb
js
loop
pusha
mov
push
js
xor
stos
movsb
adc
push
ret
or
js
sti
imul
pop
xchg
scas
mov
inc
nop
jnp
out
lods
dec
xchg
out
sub
pop
mov
scas
jo
pop
mov
pop
mov
and
add
jle
jmp
mov
and
mov
inc
adc
in
iret
out
das
cltd
rorl
loope
adc
jbe
faddl
lods
inc
inc
or
aad
aam
dec
iret
mov
test
popf
fstpt
nop
push
cld
leave
xchg
addr16
mull
out
sub
push
fdivs
lea
xchg
xchg
add
test
xor
xchg
and
cmpsb
cmp
addr16
pusha
pop
adc
cmp
clc
movsb
bswap
add
inc
mov
nop
nop
xor
call
pop
dec
pop
test
pop
rolb
mov
mov
cmp
enter
jmp
pop
mov
mov
or
repnz
repz
pop
xor
mov
xchg
ljmp
cmpsb
dec
cmp
pushf
add
out
push
ret
xorb
lock
lcall
roll
xchg
mov
aas
scas
in
and
pop
in
cmp
mov
inc
outsb
out
jle
cli
sub
lds
rcll
sub
sub
fistps
xor
and
ficomps
fcmove
adc
js
xchg
sbb
sub
aas
ss
fchs
mov
sub
pop
mov
mov
mov
or
jmp
dec
adc
test
xor
adc
cmp
addb
test
sbb
sbb
mov
js
fidivs
xorb
pop
addr16
inc
negl
and
sbb
frstor
sub
mov
stos
aaa
mov
pop
push
dec
aaa
andl
sub
push
call
mov
or
insl
enter
dec
popw
and
pop
add
sbb
xchg
xchg
addr16
sub
fistpll
cmp
test
pushf
das
sub
mov
or
sti
fucomip
push
addr16
jge
sti
into
xor
fcmovnu
stos
dec
jo
repnz
test
sub
clc
and
pop
sbb
cmp
aam
into
cmp
sbb
push
push
stos
fildll
into
jecxz
mov
pushf
in
arpl
mov
jb
fwait
hlt
pop
cmc
xchg
xlat
sbb
add
add
sub
sti
xor
or
push
bound
push
sub
xor
mov
and
movsl
stos
mov
cmp
fidivl
xchg
cmp
ljmp
and
sub
call
out
push
or
jp
dec
scas
mov
push
pop
iret
mov
dec
mov
sti
leave
mov
repz
pop
stc
iret
popf
jg
stc
sub
sub
ja
test
fidivrs
fmuls
int
jno
xchg
imul
ds
jmp
adc
lcall
mov
lods
in
repnz
or
dec
aam
push
stos
jmp
mov
xor
mov
dec
lock
popa
jmp
scas
addr16
inc
or
pop
cwtl
pushf
or
fbstp
inc
mov
and
jle
push
dec
jmp
loop
sub
sbb
inc
mov
bound
or
std
or
pop
lret
lock
int3
cmc
test
jae
es
xor
sahf
out
adc
in
lahf
xchg
into
add
ficoms
fsubrs
add
mov
cmp
mov
push
pushf
jbe
in
dec
xchg
rol
jns
add
jle
jge
add
sti
and
mov
pushf
push
adc
test
pop
in
pop
out
sub
mov
sarb
sahf
sbb
jns
jne
jo
adc
push
lcall
das
jo
ret
cwtl
adc
cmpsb
ja
repnz
mov
fnstcw
negb
cmpsb
mov
sub
xor
or
adc
pop
pop
xchg
jo
cmpsb
push
clc
add
mul
xchg
call
cltd
cli
imul
pop
out
insl
ret
shlb
pushf
sbb
nop
pop
cmc
inc
or
add
push
xchg
sbb
cwtl
sub
pusha
inc
stos
pop
sub
and
ds
aas
and
rcr
pop
adc
xchg
ret
inc
mov
int3
cmp
out
daa
push
push
mov
out
adc
cmp
das
imul
ja
mov
icebp
js
xchg
pop
data16
fistl
and
fiadds
xor
mov
shrb
inc
and
sub
adc
movsl
or
adc
mov
or
in
ss
sbb
mov
int3
iret
enter
and
and
add
cmp
xchg
mov
aas
push
jmp
add
push
daa
sbb
sbb
adc
xor
mov
dec
es
popf
sbb
jbe
sub
movsb
adc
xor
xchg
add
js
add
sbb
ret
call
lods
jl
out
popf
sub
fdivs
in
jle
xchg
out
sub
fwait
push
roll
sub
jbe
addr16
xor
mov
ret
dec
fidivrl
add
push
mov
lahf
sbb
cmp
jge
lock
add
leave
mov
sub
inc
and
push
hlt
pop
je
cli
loope
sahf
xchg
inc
jg
pop
movsl
sub
outsb
rcrl
cld
pop
dec
outsb
xchg
ds
fcoms
adc
adc
cwtl
push
or
push
lock
xchg
jecxz
leave
loopne
roll
xlat
pushf
fdivs
and
outsb
sbb
loope
push
loope
cmp
pop
addr16
sbb
cmp
mov
mov
sub
dec
mov
cmc
fcmovne
cmpb
aas
out
cmp
lods
movsb
emms
bound
ja
jecxz
xor
xor
or
lea
jnp
dec
sub
inc
jle
pusha
in
jecxz
popa
or
jns
into
leave
xchg
cmpb
jp
std
mov
xchg
cmp
mov
jno
jmp
push
movsl
stc
scas
stos
sbb
cwtl
push
jmp
push
jge
out
cmp
rorl
add
test
fwait
bound
aaa
sub
out
fwait
mov
pop
fists
sbb
xchg
out
insb
push
and
mov
ds
pop
fcmovbe
pop
and
cmp
jne
fmull
ja
divb
xchg
push
sbb
lcall
mov
popw
cmp
outsb
pop
into
out
pop
movsb
jae
testb
orb
nop
je
pop
notl
arpl
jl
push
and
dec
mov
mov
and
push
xor
sub
mov
lds
xor
mov
add
or
adc
sub
lock
push
sbb
mov
pop
xchg
mov
fucom
mov
fbld
adc
or
push
idiv
icebp
inc
or
add
std
inc
fildl
push
mov
es
fsubrp
cmc
add
in
cld
icebp
adc
fildll
jno
int
jl
lahf
jmp
sub
in
emms
mov
xchg
enter
subl
imul
sahf
mov
lock
in
mov
lods
xchg
cmp
outsb
sbb
pop
jno
lods
mov
xor
sbb
xor
inc
cmp
scas
lahf
jnp
cmpsb
dec
shl
cmp
sbb
das
cmp
ficoms
pop
sub
push
loopne
or
aas
mov
mov
cwtl
xchg
out
test
jo
inc
dec
fwait
stos
gs
int3
mov
mov
faddp
ja
cmp
inc
repnz
clc
xchg
mov
shll
call
add
loope
push
mov
sbb
pop
gs
shll
xchg
push
sbb
jo
outsb
jmp
sub
jecxz
test
adc
push
addr16
pop
sub
mov
pushf
inc
ja
push
pop
jecxz
or
adc
cld
pop
jg
xchg
lods
mov
and
in
dec
std
mov
cwtl
cmpsb
je
add
xchg
ss
xor
push
pop
sbb
daa
cltd
clc
call
xor
fwait
out
imul
ret
fnstenv
mov
idivl
mov
jge
testl
fdivrl
and
out
cli
pop
or
aam
out
jle
lds
addl
mov
test
and
mov
xchg
sbb
xor
dec
xchg
xchg
into
jecxz
lock
xchg
outsl
aas
inc
mov
adc
mov
xchg
xchg
lcall
ja
pusha
mov
inc
inc
add
xchg
lods
movsl
sbb
faddl
stos
test
inc
and
cmp
xchg
repnz
out
imul
stos
out
xor
jl
loop
add
fcoms
shll
popa
inc
cltd
popa
scas
iret
mov
mov
xchg
pop
outsb
dec
xor
cmp
sub
push
sbb
jl
std
cmp
addr16
and
pop
fwait
xchg
jb
cmp
jns
test
aas
clc
mov
pop
cmp
or
inc
ss
das
cltd
cmpl
dec
sub
movsb
test
or
mov
dec
popa
mov
jno
icebp
bound
icebp
or
jno
jle
mov
mov
mov
dec
mov
mov
movsb
or
lds
cs
push
lcall
gs
ja
fsubrl
mov
cwtl
outsb
cmp
rcll
mov
xor
mov
hlt
mov
shrb
xchg
pusha
xor
ret
cmpsb
sbb
mov
insb
nop
push
add
xchg
test
in
lret
fisubs
mov
clc
xlat
push
inc
imul
push
pop
popf
imul
mov
cmova
jmp
add
add
out
cmc
push
movsl
or
jg
sub
jecxz
cmc
outsl
rclb
push
idiv
sub
ds
or
inc
sbbl
mov
ljmp
and
xor
mov
inc
lods
sbb
enter
je
mov
fsubrl
outsl
mov
mov
sub
in
addr16
or
outsb
insl
pusha
jecxz
ss
dec
dec
mov
adc
mov
push
scas
mov
mov
in
lcall
ret
fimuls
cltd
adc
xor
push
aaa
push
mov
sub
arpl
or
andb
and
movsb
adc
dec
icebp
pop
pop
cmp
call
inc
xor
das
stos
lret
mov
xor
dec
lds
ds
mov
sti
sbb
sbbb
mov
loope
roll
lcall
xchg
scas
add
dec
pop
mov
push
dec
leave
aas
jo
push
mov
jmp
add
stc
cmp
cmp
pop
das
test
xchg
pop
repz
sub
xor
clc
sub
add
inc
sub
repz
push
loop
jle
xchg
adc
cmp
shld
pop
mov
pusha
jp
out
jo
jbe
aam
dec
imul
sbb
lds
sub
outsb
aaa
push
cmp
movsl
js
sarl
hlt
out
aaa
int3
jmp
cmp
or
leave
cmp
mov
ss
push
adc
pop
mov
sbb
push
test
clc
and
or
xor
andl
inc
stos
je
popf
into
jl
dec
outsl
mov
xchg
mov
xchg
aaa
int3
lock
mov
daa
jmp
mov
imul
xor
or
inc
and
aam
cmp
in
push
into
and
daa
mov
cmp
mov
lods
in
ret
xor
adc
pop
dec
dec
mov
sbb
sbb
js
fmul
scas
mov
sub
pavgw
push
pusha
popf
mov
mov
jns
cmpsb
ljmp
insb
xor
jge
push
mov
fs
push
adc
dec
sbb
cld
mov
mov
ret
mov
fidivl
stc
sub
shlb
xchg
cmpsl
dec
mov
inc
pop
push
sbb
mov
sbb
jge
or
rcrl
jp
and
pop
mov
inc
shlb
iret
push
jb
pop
pop
lock
pop
frstor
mov
int3
sbb
pop
lods
push
push
lcall
outsb
test
xor
add
mov
mov
jns
dec
sub
pop
add
inc
icebp
push
mov
add
adc
popf
popf
jo
mov
test
cmp
ret
fstps
rorl
mov
cmp
ds
inc
xlat
iret
jns
lahf
sbb
xchg
rcr
jmp
dec
dec
out
out
aas
lods
fisttpl
rcrb
imul
lds
aam
jb
fldl
std
addl
repnz
push
sbb
mov
or
add
mov
cmp
loopne
cmpl
adc
repnz
fdivrl
cmc
test
jbe
adc
sbb
sbb
sbb
mov
push
arpl
inc
pop
loopne
cmp
sub
gs
mov
inc
fistpl
mov
mov
pop
xchg
lahf
jae
ljmp
xlat
les
hlt
adc
jne
aaa
sub
mov
fstpt
add
loop
inc
in
and
nop
mov
jno
in
movsb
clc
mov
push
xchg
imul
nop
das
ret
cmpsb
shlb
pop
shl
push
and
pop
mov
aaa
lahf
mov
and
sarl
push
xchg
mov
mov
fprem1
jmp
cmp
shl
inc
and
addr16
fwait
int3
fxch
jns
jle
add
pop
xor
push
mov
mov
shll
fisttpll
mov
mov
cmp
cmp
sub
adc
inc
fcoml
outsl
xor
into
std
mov
inc
iret
push
test
bound
xchg
movsb
mov
pop
dec
add
subl
mov
and
cmp
jns
and
add
sub
scas
enter
out
adc
shll
lock
push
mov
ret
jmp
mov
loopne
cmpsb
push
cmp
add
data16
sbbl
dec
mov
icebp
pop
jns
mov
ret
inc
push
invd
mov
cmpsb
add
les
decb
and
pop
scas
xchg
scas
ss
add
cmp
pop
xlat
push
rcrl
fndisi(8087
lcall
cmpsl
jle
mov
xchg
and
rclb
std
aas
testb
test
iret
lock
daa
xor
neg
clc
mov
sbb
cwtl
jmp
adc
jp
popa
shl
repnz
fistps
std
push
jp
dec
rcrl
cli
lods
xor
ret
mov
sub
jle
aas
rcrl
xlat
jl
dec
pusha
repnz
or
xchg
add
fbld
cmp
or
dec
mov
fwait
mov
scas
mov
loopne
pop
sbb
sbb
mov
mov
xlat
mov
mov
sbb
mov
mov
jp
in
xchg
es
mov
xor
xchg
test
push
adc
mov
inc
hlt
sub
push
mov
xchg
aad
pop
jnp
sbb
aad
jbe
mov
push
cld
or
mov
movsb
pop
insb
and
fstpt
push
mov
pop
sbb
xor
push
insl
pop
jns
mov
push
dec
arpl
out
mov
lock
mov
dec
inc
jnp
add
outsl
pop
aad
jge
dec
out
and
testl
cmp
xchg
divl
lock
xor
or
mov
add
jl
xchg
aad
out
inc
outsl
mov
xor
sub
pop
scas
rorb
push
push
popf
fldcw
sahf
es
mov
mov
add
and
cli
push
sub
add
not
iret
movsb
lods
repnz
fcoml
jne
push
mov
imul
and
xchg
cmp
dec
aam
sbb
cmp
int
dec
pushf
in
fdivr
xchg
icebp
pop
push
lds
es
stos
pop
shrb
or
ds
mov
push
pop
xchg
iret
leave
push
repz
push
popa
xlat
sti
inc
aaa
int3
fwait
lcall
fsubrl
shr
push
scas
insb
jl
mov
mov
rolb
stc
pushf
inc
jae
cmp
jne
mov
imul
popf
inc
into
cmp
imul
call
dec
ljmp
out
push
mov
adc
sahf
jnp
and
sar
inc
es
dec
inc
int3
jmp
dec
test
push
test
ss
pushf
movsl
jo
je
loope
lahf
je
jno
bound
shrl
xchg
pop
sub
xlat
loopne
cli
lahf
pop
push
ljmp
cmp
sarl
cmp
movsb
mov
nop
xchg
dec
jl
pop
mov
cmpsl
push
add
stos
test
sbb
ret
in
sbb
inc
lea
mov
push
loope
sub
mov
loopne
mov
shl
movsb
pmaddwd
jmp
cmp
dec
xchg
mov
shll
push
sbb
pop
add
mov
adc
popw
mov
sub
jbe
jl
pop
loop
adc
cli
cmp
repnz
dec
insb
sbb
jg
pop
sahf
pop
dec
out
pop
and
loop
sub
and
xor
push
mov
cmc
pusha
arpl
inc
stos
push
test
mov
or
xlat
or
icebp
mov
test
imul
int3
mov
jae
fwait
sbb
gs
scas
sbb
test
or
pop
pop
adc
loopne
jns
fcomps
xor
jne
and
lds
add
lods
pop
ljmp
jp
in
push
sbb
loopne
into
inc
push
add
mov
push
push
add
insb
dec
xchg
cmp
jge
cmp
in
sub
scas
sbb
jb
fisubrs
adc
push
enter
dec
xchg
and
jb
hlt
inc
mov
adc
mov
fs
leave
hlt
bound
sbb
xchg
rclb
add
pop
push
or
ret
and
dec
hlt
pop
popf
mov
lods
js
cli
jo
mov
mov
xor
aad
xchg
xor
pusha
lods
mov
lock
mov
jns
repnz
std
jg
adc
ss
mov
mov
je
insl
xchg
fdivs
clc
xchg
and
pusha
in
or
sub
push
iret
xchg
movsb
insl
out
mov
ss
ja
push
cmp
sbbb
inc
push
shll
stc
in
xchg
daa
test
push
inc
cmp
lock
pop
loopne
or
rol
push
cltd
testl
jae
inc
push
mov
ficompl
aaa
cwtl
jbe
xchg
or
inc
xchg
xor
cmp
pop
mov
movsb
das
loop
jle
xchg
jecxz
stos
rorb
repnz
xchg
sub
dec
push
sub
leave
in
cld
addr16
and
cmp
scas
xchg
movsl
repz
out
scas
mov
aas
push
scas
push
cmpsl
in
je
dec
loopne
inc
ja
push
fidivl
push
cmp
call
or
mov
push
mov
in
sbb
adc
shr
test
out
xchg
cmp
xchg
imul
pop
es
inc
sub
mov
jecxz
inc
out
push
lea
popf
add
xchg
pop
cmp
push
ret
mov
sub
stos
arpl
scas
pusha
movsb
sbb
mov
or
inc
and
dec
jle
fwait
ss
push
mov
adc
mov
dec
and
cmp
push
xor
xchg
sub
stos
push
jo
adc
aaa
jge
dec
xor
adc
push
cmp
xor
cmp
daa
or
sub
inc
xor
lods
test
push
push
leave
mov
or
es
mov
jns
stc
loop
jmp
int3
dec
jge
push
mov
jb
mov
add
or
outsb
lods
mov
and
dec
das
adc
out
lret
jmp
test
dec
movsb
test
sbb
aas
in
xor
xor
sub
xor
out
inc
stos
or
add
out
lcall
jnp
imul
push
dec
fs
sub
out
mov
push
push
xchg
insl
push
dec
sub
push
das
push
loop
mov
push
mov
out
add
and
xlat
jg
pusha
ficomps
pusha
push
leave
adc
push
or
mov
imul
mov
mov
movl
icebp
and
aaa
sub
cmpsb
cmpsl
pop
jp
xchg
aaa
sub
sbb
dec
jge
add
or
movsb
adc
loopne
xor
fdivrl
xchg
and
xor
add
jo
aad
daa
xchg
in
push
mov
mov
push
shl
outsl
lret
int
push
push
cmp
and
sbb
mov
mov
cmp
scas
cmc
add
xchg
cmp
add
leave
cmpsb
inc
aas
dec
out
sbb
insl
pop
push
in
push
jl
xchg
ja
jg
dec
mov
xchg
adc
int
enter
jecxz
add
inc
add
fsubp
loopne
jns
or
push
lahf
sub
call
and
movsb
int
pusha
xor
lds
jae
pop
push
adc
movsl
mov
stos
pop
test
push
xchg
daa
mov
mov
loopne
mov
pop
out
or
dec
cmp
fidivl
sahf
rol
xchg
ljmp
ljmp
adcl
cmpsb
xchg
jg
sbb
push
adc
shl
pop
icebp
dec
dec
jae
jmp
dec
xchg
xchg
int
fwait
jmp
inc
addr16
lods
fs
loopne
stos
jo
pop
inc
or
dec
pusha
push
enter
movsb
inc
shrb
pop
aad
loopne
mov
xchg
pop
jle
test
test
xchg
iret
jmp
repnz
loopne
fdivrp
lcall
inc
loop
imul
in
icebp
nop
adc
xor
jnp
outsb
cmp
jg
divl
mov
popl
mov
loopne
fimull
mov
cli
xor
rcrl
pop
aaa
xor
cwtl
ss
add
mov
and
cltd
movsl
jge
inc
pop
mov
repnz
fsubs
xor
bound
test
sub
sub
fsubrs
or
xchg
jne
loope
bound
and
in
ds
push
pop
inc
inc
mov
in
xor
repnz
leave
inc
adc
ret
and
ss
ret
jl
xor
sbb
fcoms
imul
mov
js
adc
lods
mov
xchg
out
add
mov
sub
mov
pop
dec
scas
push
mov
gs
fdivrl
push
ds
les
push
sbb
inc
mov
jo
fsubrl
push
inc
push
enter
jb
inc
test
push
mov
mov
outsl
and
in
ds
cmp
popf
pop
or
cld
test
jne
inc
test
inc
vsqrtps
test
push
scas
ret
out
push
pop
sub
jmp
imul
outsb
sahf
ffreep
mov
shll
xchg
inc
mov
sub
test
ret
cmp
adc
pushf
cmp
pusha
std
cs
jmp
xchg
pop
inc
not
cmpsl
cmpsl
test
xorl
aaa
testb
or
js
fdivs
insb
int3
cmp
insl
inc
pop
add
loop
or
add
push
jge
outsb
and
jmp
cmpsb
test
adc
ret
push
inc
cmp
ja
rcrb
neg
in
cmp
and
mov
enter
cmpsb
out
arpl
out
pop
hlt
pop
pop
sbb
mov
loopne
push
cmpsl
push
or
fxtract
xchg
and
xchg
cmpb
lock
xor
cli
loope
xchg
and
int
insb
leave
sbb
xor
jmp
push
aaa
icebp
into
loopne
mov
push
cmp
sahf
fdivr
stos
outsb
cmp
mov
movsb
dec
jmp
enter
mov
dec
push
push
jle
pop
mov
test
dec
icebp
mov
jl
jnp
inc
pushl
pop
sarl
adc
cmc
scas
daa
popf
pusha
rol
dec
add
inc
icebp
ss
inc
int3
fcomps
lea
xchg
and
mov
sbb
ret
mov
pusha
ja
ja
gs
fwait
and
push
jp
push
mov
fisubrl
mov
jbe
int
in
add
sbb
and
xlat
mov
cmp
dec
int
aaa
ret
sub
pusha
sbb
andl
add
int
and
mov
pop
push
jno
lahf
mov
xchg
inc
jae
sub
cmp
push
leave
leave
push
mov
and
inc
sti
jno
sarb
inc
xchg
cmpb
jbe
pop
outsl
das
jl
movsb
stc
and
jge
loopne
pusha
sub
ficoms
popf
jmp
das
test
sbb
jae
xchg
xchg
test
lock
jg
pusha
and
push
enter
mov
adc
cli
rorl
fwait
aas
dec
push
pop
loop
insl
in
xchg
add
mov
jbe
ret
inc
repz
movsl
mov
inc
loop
sbb
lret
mov
push
adc
dec
fidivrl
jno
imul
in
sahf
test
hlt
cmp
or
ret
rorb
add
add
sbb
mov
jle
xchg
cwtl
and
negl
loopne
cmp
stc
loop
insb
xchg
mov
orl
pop
mov
add
xlat
push
lahf
jl
aas
pop
data16
dec
lods
leave
outsl
pop
mov
ja
jmp
adc
sbb
movsl
sbb
or
out
pusha
pop
roll
idiv
outsl
clc
cmp
lcall
sub
push
lods
testl
mov
mov
add
add
sub
lahf
or
ficoms
sub
mov
jge
scas
pop
add
je
fcmovne
es
mov
clc
lahf
mov
gs
mov
jle
and
cli
repz
ficoms
adc
add
movsb
add
pop
fwait
in
mov
out
stos
js
clc
or
fistpl
and
dec
xlat
push
inc
or
fldl
jecxz
lahf
dec
addb
rorl
popf
jnp
sub
movsl
out
shl
cmc
nop
mov
xchg
shll
aaa
jle
imul
sub
pop
add
or
mov
jle
cltd
iret
gs
insb
in
add
xor
jnp
icebp
out
pop
jmp
xchg
mov
aaa
xor
lds
mov
cmpsb
jmp
ret
cs
jge
add
out
jb
and
push
aad
in
push
push
test
int3
lahf
pusha
lods
fists
mov
fbstp
xchg
or
in
subl
inc
mov
xchg
push
cmp
pop
push
inc
sub
pusha
lods
sbb
pop
movsl
jle
enter
out
jne
push
push
xor
adc
and
inc
push
sahf
lock
es
decb
cs
mov
mov
or
and
push
mov
pop
gs
adc
rcl
cltd
je
out
addr16
push
pop
ret
arpl
cli
pop
stos
mov
shll
sahf
mov
sti
ljmp
in
out
mov
test
jg
push
and
daa
repz
add
hlt
ljmp
and
and
adc
aaa
es
fmull
cmp
test
ss
xor
in
inc
pusha
add
aad
or
test
mov
fsubrs
popa
mov
imul
call
xchg
sbb
inc
es
add
es
out
mov
int3
cld
fldcw
or
nop
cmp
jmp
jbe
test
and
stc
dec
ret
inc
mov
cmp
das
pop
mov
inc
call
out
test
outsl
jne
xchg
test
insl
hlt
xchg
dec
pusha
xchg
fistpl
jbe
lahf
movsb
add
in
mov
loop
mov
std
popa
stos
add
divb
in
int
jmp
out
nop
pushf
out
jno
or
or
pop
add
cmp
cmp
pop
iret
dec
push
scas
sbb
and
nop
mov
pop
sbb
jg
mov
jb
sahf
mov
xchg
adc
mov
mov
cmpsb
jno
xchg
aad
inc
jae
pop
scas
pop
lods
mov
lock
rorb
enter
cmp
mov
in
dec
cld
lods
pop
pusha
jmp
adc
aam
xchg
mov
fwait
pushf
jmp
mov
lock
jb
push
fsubl
mov
sbb
jbe
push
in
in
pop
jb
sub
data16
jmp
push
stc
stos
out
imul
fcmovnu
push
roll
negl
std
std
sbb
mov
ljmp
adc
dec
mov
aam
inc
les
imulb
std
movsb
jb
in
xchg
xchg
jae
filds
lea
xorl
cli
lock
loope
adc
push
lea
cltd
or
push
mov
iret
xor
pop
mov
dec
mov
pop
int
push
xchg
jecxz
xchg
and
inc
lods
int
dec
lods
jge
testb
push
scas
xchg
mov
cli
adc
inc
mov
push
dec
mov
sub
add
xor
sub
or
adc
shll
or
stos
pop
dec
and
fistpl
imul
inc
mov
adc
push
std
cmp
pop
mov
ljmp
loopne
cli
scas
addr16
dec
js
ret
mov
and
loope
iret
test
ja
xchg
xchg
popf
add
sbb
rorb
mov
scas
push
iret
cmp
mov
pusha
jbe
outsb
out
outsb
jl
ret
inc
adc
in
sbb
ss
ja
lret
jne
xor
push
jbe
lret
popa
mov
push
or
push
scas
jle
and
cmp
sbb
inc
iret
loopne
push
push
cmpsb
cmp
add
outsl
or
cmpsb
cmp
mov
mov
dec
xchg
sarl
js
aad
or
movsl
adc
dec
cmc
aaa
and
aad
xor
xchg
cmp
data16
leave
pop
ret
xchg
movsl
cmp
sbb
jo
mov
lcall
jno
dec
push
sbb
addr16
imul
cmp
inc
movsb
push
pop
cmp
aam
lret
mov
xchg
mov
mov
and
jmp
ret
popf
sbbb
inc
xchg
jae
mov
les
inc
shr
lea
sub
rcll
sbb
inc
mov
out
push
pop
cmc
xor
roll
inc
sbb
push
dec
leave
xor
jns
mov
push
push
js
pop
repnz
jge
jo
in
mov
mov
aam
mov
pop
pop
push
stos
jge
in
mov
cmp
pop
lods
cmp
fimull
iret
cld
cli
lret
add
and
scas
dec
mov
xor
fs
jl
in
pop
mov
jmp
cmp
jne
fsubs
lretw
movl
and
mov
fwait
sbb
fsubrs
lahf
push
mov
sbb
push
inc
rcrl
mov
clc
leave
imul
popf
mov
push
mov
jge
cmpsl
stc
push
cmp
cmpsl
jmp
mov
mov
stc
imul
add
adc
inc
jnp
xor
add
mov
add
nop
xor
mov
int3
cld
cs
sbb
shrb
adc
mov
xlat
out
mov
mov
shrb
hlt
pop
dec
inc
cwtl
push
jle
pop
add
dec
lcall
scas
fisubs
fisttpll
xor
and
pusha
cmpsb
enter
stos
push
arpl
stc
xchg
lcall
xlat
sbb
cmpsl
inc
xor
sbb
pop
or
daa
fldenv
fbstp
fs
jecxz
aam
scas
das
dec
addb
mov
xchg
call
jp
lock
into
mov
jecxz
inc
shl
mov
xchg
cmp
xchg
pushf
jmp
ss
pop
jmp
jge
movsl
mov
mov
inc
mov
pop
xchg
push
fildl
or
cmp
subb
insb
xchg
shll
lret
jae
stos
push
xchg
jmp
je
shlb
mov
lods
icebp
xchg
cmp
clc
popa
or
fildll
iret
pusha
sarl
fstl
jl
and
xor
fdivl
push
and
lahf
pop
cli
into
scas
or
sub
mov
aas
fbstp
or
fsubrl
aad
mov
aaa
pop
not
sub
test
stos
shr
inc
mov
test
mov
das
xor
push
pop
scas
add
daa
subl
lods
xchg
pop
out
cs
cmp
ds
inc
jo
xlat
mov
pop
sbb
mov
in
les
lods
fcoml
inc
rorb
and
mov
rcll
nop
inc
push
xchg
insl
nop
fwait
rcrb
lods
mov
push
add
sbb
jnp
stos
aaa
xorl
sbb
dec
jo
in
push
rcrl
mov
sbb
xchg
dec
lcall
ret
adc
mov
mov
or
jns
adc
or
mov
mov
xchg
lea
pusha
insl
sbbl
out
fildll
adc
fcmovu
sbb
shr
insb
imul
push
sti
int
mov
out
lock
jle
aad
ficomps
cmp
xchg
mov
hlt
mov
jg
test
or
pop
cli
in
pop
jmp
mov
mov
inc
cmp
push
mov
rorb
fld1
add
cmp
sahf
jne
mov
loopne
int3
cltd
push
notl
ret
jg
outsl
push
fstp
mov
or
jmp
cmc
mov
mov
rol
lea
push
dec
xlat
jecxz
mov
adcl
sub
pop
mov
mov
sub
fcomi
mov
test
mov
andb
jo
sti
sbb
mov
inc
pop
lods
idivb
loop
orb
ss
xchg
test
mov
adc
jo
stc
scas
jecxz
mov
add
mov
test
push
fwait
data16
test
fdiv
data16
test
push
xor
loope
clc
and
or
mov
ja
dec
xor
clc
daa
rcrl
lea
xor
cmp
xor
andb
movl
xorb
pop
jmp
rcrb
push
hlt
push
push
mul
push
pop
and
jns
loopne
shl
pop
add
xor
ljmp
cwtl
xchg
jb
data16
inc
std
cwtl
xlat
ret
scas
adc
push
adc
call
sbb
out
pop
pop
cmp
cmpsl
in
adc
pusha
popf
jb
mov
rorb
xor
enter
push
out
or
xor
loop
daa
je
mov
push
nop
pop
or
xchg
fcomip
arpl
mov
rcll
lcall
bound
xchg
cwtl
cwtl
mov
shrb
jnp
int
loop
jecxz
test
stos
in
int
dec
ss
call
mov
dec
out
decb
sbb
les
xchg
mov
pop
xor
loop
inc
sub
jecxz
dec
insl
fcomi
in
push
sbb
jns
fs
mov
das
jmp
dec
testb
dec
shlb
insl
xchg
test
cmp
push
sbb
mov
sahf
xorb
pop
jmp
insl
xchg
lods
push
sar
fstpt
mov
clc
ret
and
cmp
or
in
aam
xlat
sub
xchg
pop
pop
gs
inc
mov
and
sbb
dec
jbe
call
jo
shl
lcall
cmp
int
lahf
je
and
pop
mov
mov
stos
jl
les
cmp
hlt
sub
xchg
lcall
das
neg
push
or
jae
repz
xchg
push
cltd
mov
pusha
cs
and
jmp
imul
lcall
cmp
add
divb
repz
xor
jno
mov
loop
subl
ljmp
arpl
mov
fwait
dec
push
lret
fimull
das
add
pop
insl
leave
addb
cmpsb
push
mov
push
push
sub
outsl
inc
iret
mov
movsl
je
ljmp
repnz
and
ficompl
xchg
fldt
push
aad
xchg
std
mov
mov
int3
adc
sbb
rcrl
ss
notl
jl
cmp
adc
icebp
ficoml
sbb
fnstsw
add
scas
in
dec
mov
adc
das
mov
xchg
jmp
fldcw
cmp
imul
and
mov
bound
cmp
jmp
andl
sbb
or
stc
fwait
leave
or
add
jno
jmp
dec
and
or
sahf
cmp
cmp
xchg
jg
clc
lea
mov
test
dec
xchg
cld
jne
mov
lds
dec
fs
in
js
lret
pop
sbb
xchg
ljmp
mov
ficompl
bound
movsb
xchg
push
stos
jo
adc
dec
xchg
mov
in
clc
lret
jbe
nop
sub
enter
repnz
or
push
mov
push
scas
in
push
sti
test
mov
jmp
jne
cld
aam
fsubrp
cmp
popl
cmpsb
popf
jg
subb
insl
push
addr16
mov
jecxz
ror
in
cli
fnstsw
inc
and
mov
pop
ljmp
inc
jbe
filds
rcpps
push
fwait
icebp
dec
roll
ror
cmp
mov
or
fs
sbb
pop
cmc
ds
filds
cmp
dec
pop
sti
int
adc
xor
dec
subl
sub
push
add
sbb
mov
arpl
mov
mov
sub
push
mov
loop
jecxz
xchg
ret
into
sbb
jbe
adc
or
cmp
pop
xor
cmp
xchg
pop
loope
add
cmpsb
mov
dec
fldt
test
lds
lret
add
push
add
mov
das
dec
nop
lea
ret
sarb
inc
insl
lods
add
jecxz
repnz
addr16
adc
repnz
adc
sub
popa
loope
mov
cmc
insl
cmp
clc
push
fmul
inc
enter
ja
insl
rcll
jb
movsl
test
data16
push
mov
cmp
and
div
loop
divl
sarb
cmpsl
arpl
outsb
xchg
js
mov
les
push
fucom
dec
add
push
xchg
and
popa
ljmp
insb
push
adc
push
or
mov
cmpsb
sbb
fwait
jo
dec
loopne
mov
jne
addb
lds
jge
mulb
test
sti
push
or
divl
push
fcoml
mov
sahf
xchg
push
push
in
insl
inc
loop
loop
popf
cwtl
in
add
inc
mov
scas
repnz
divl
fildll
mov
pop
sub
cwtl
xor
sub
push
out
mov
mov
cmpsb
jle
cmpsb
pushf
sbb
mov
sbb
jp
outsb
je
pop
leave
sbb
inc
push
lahf
movsb
lock
cmpb
lahf
dec
fstpl
add
mov
sarl
loopne
test
stos
mov
jnp
or
enter
out
mov
cmpsl
jmp
push
xchg
xchg
sub
xor
aam
leave
mov
ljmp
or
push
jecxz
into
jno
jae
inc
insl
test
stos
xchg
psrad
jno
mov
xor
das
push
xor
xor
pusha
ljmp
in
cmp
lret
cli
dec
pop
test
mov
addr16
out
in
int
sbb
test
mov
addb
mov
xchg
cwtl
loope
cmp
lods
push
dec
mov
push
mov
xchg
push
rcrb
imul
jb
shlb
pop
ret
psrlw
jecxz
adc
adc
pop
pop
xchg
pop
cmp
dec
sbb
inc
lret
clc
outsb
test
adc
test
push
incb
imul
inc
mov
pop
inc
jae
lret
mov
sahf
xor
mov
outsb
sbb
insb
xor
stc
test
cmp
dec
mov
jb
or
xchg
mov
stos
mov
cmp
mov
loope
jge
jp
inc
mov
paddd
push
out
add
repnz
add
adc
cld
ficoml
dec
push
aam
in
cmp
and
mov
jae
popf
scas
lret
dec
scas
cs
add
in
shll
inc
test
arpl
dec
pop
push
and
or
sub
push
jne
jnp
mov
stos
inc
mov
scas
or
daa
pop
adc
enter
in
sub
dec
pop
jg
xor
aad
insb
cltd
in
cltd
stc
mov
and
xchg
lds
ret
and
insb
cmpsb
push
sub
add
sbb
add
and
in
mov
clc
fstl
aad
ret
cmpsl
add
and
stos
sbb
mov
push
daa
ficomps
in
mov
mov
andb
gs
adc
icebp
inc
arpl
outsb
adc
pusha
xor
jp
nop
arpl
sti
mov
or
jnp
adc
mov
data16
jno
sub
lahf
sbb
int
xchg
lods
cmp
push
mov
addr16
clc
push
dec
dec
int3
mov
dec
xor
fdivrs
out
xlat
xchg
xor
adc
mov
push
scas
es
xor
les
adc
mov
push
lds
adc
inc
jmp
mov
test
mov
jns
xchg
jle
neg
scas
aas
and
jne
mov
idivb
dec
mov
fists
xlat
ja
sbb
out
mov
adc
ret
and
and
xchg
lea
or
cmp
loop
cmc
imul
inc
into
lret
ret
add
fwait
mov
mov
cwtl
aas
xor
mov
and
clc
into
fidivrl
dec
mov
repz
xor
scas
dec
fisttps
mov
shl
sub
add
sarl
std
ss
cmc
fdivs
outsl
and
pop
push
test
lds
xor
xlat
sbb
mov
subb
int3
jle
icebp
dec
mov
scas
aaa
pop
cmpsl
pop
daa
pop
sbb
sbb
adc
xor
push
ja
out
in
aam
jmp
scas
sub
sub
mov
adcb
jl
addr16
shl
mov
jle
inc
xchg
sar
cmp
ret
cmpsl
adc
jecxz
pop
mov
mov
aas
mov
aas
insb
andl
mov
mov
xchg
add
sbb
cmp
xor
xchg
xor
lea
mov
test
call
push
sbb
js
dec
aaa
sbbb
movl
leave
mov
cmc
mov
out
lods
cmp
adc
push
mov
mov
and
lods
sbb
out
cmp
and
cli
jle
out
pop
dec
mov
mov
dec
pop
mov
push
test
cmp
fwait
popf
inc
pop
xor
hlt
ja
mov
ret
jmp
jo
fwait
arpl
sub
jnp
cld
cmp
xchg
add
cmp
pop
fsubr
cmp
push
xorb
repnz
in
pop
adc
repz
xchg
dec
adc
cli
inc
xor
in
mov
cltd
jno
scas
data16
mov
inc
dec
jmp
lcall
add
lahf
xor
xchg
sub
mov
dec
fists
dec
aam
insb
mov
lods
stos
sbb
adc
adc
xlat
sarb
push
cmp
sub
mov
add
lcall
ljmp
mov
testb
or
ss
dec
mov
fld
pop
xchg
int
wrmsr
jae
and
aam
dec
ret
sarl
fdivrs
sahf
loop
das
clc
addr16
ljmp
mov
push
dec
jb
mov
lock
lcall
jnp
clc
cmpsb
sub
pusha
jbe
jae
ss
repnz
bound
push
mov
xchg
out
je
cli
adc
orb
cmp
push
movsl
push
or
push
adc
sub
add
cli
pop
mov
enter
js
mov
sub
int
push
add
adc
enter
mov
pop
or
scas
push
cmp
pusha
inc
enter
pop
ret
das
imul
inc
add
insl
adc
push
test
or
out
push
jae
nop
mov
or
call
setno
inc
cmp
adc
pop
test
dec
xor
loop
hlt
loope
push
ja
and
ficompl
cmpsb
lock
mov
pop
and
mov
push
cmp
cmpsb
jg
inc
or
cs
fld
add
lret
std
lcall
push
adc
xchg
ss
push
int
push
jne
pop
stc
aas
mov
aam
mov
cmpsb
test
psubq
add
fmull
jle
or
pop
cmpsb
test
mov
test
or
or
bound
loope
dec
jbe
inc
loop
sbb
filds
lea
bound
cwtl
ljmp
aad
mov
sbb
fisubrs
icebp
cmp
mov
leave
or
mov
jmp
sub
fwait
in
jns
pop
test
cli
add
shlb
lea
loope
subb
push
lock
xor
mov
pop
jne
mov
jecxz
mov
jmp
rcr
mov
fwait
push
jl
fadds
xor
push
jne
sbb
xor
psraw
dec
out
add
fidivl
lods
loopne
push
pop
das
add
pop
in
mov
sub
or
xor
dec
adc
adc
loopne
sub
mov
mov
ret
outsb
inc
pop
mov
adc
push
and
test
addr16
inc
fldl
xchg
mov
jmp
lea
movsb
ja
adc
repz
iret
or
cmp
pop
mov
xchg
lcall
pop
fwait
mov
xor
pop
xchg
imulb
jo
les
mov
fcmovne
psubb
arpl
and
bound
xchg
out
popa
dec
out
jae
orl
pop
mov
mov
jle
pop
addr16
test
pop
popf
cmp
std
mov
jne
popf
cmp
cltd
and
sub
mov
push
xor
mov
in
enter
loope
mov
js
mov
push
pusha
stos
dec
mov
aas
mov
pop
mov
jb
gs
shl
or
ret
repnz
xlat
arpl
loop
repz
stos
stos
leave
idiv
rcl
cmc
fwait
outsl
mov
xchg
mov
ja
mov
loope
add
pop
or
movsb
inc
data16
jg
xor
fdivr
sti
mov
mov
lret
mov
sarl
jae
ss
pusha
rep
imul
jno
nop
push
movsb
sub
gs
jno
cmp
sahf
out
call
ret
lret
push
pop
jo
pushf
pop
or
cmp
out
or
jge
and
aas
mov
ljmp
fucomi
adc
inc
xor
aad
pop
mov
jns
lods
cmp
pop
pop
fmuls
lcall
arpl
cmpsb
and
jge
jle
push
loop
cli
jl
xchg
or
lea
and
lret
or
cmc
or
lods
jno
rclb
lods
adc
pop
jmp
lods
cwtl
loopne
mov
movsl
dec
inc
hlt
dec
pop
push
ret
ja
lods
push
jecxz
cmp
sti
inc
jo
rcrl
in
dec
pop
test
push
dec
iret
or
and
push
ja
je,pt
ja
dec
mov
or
cmp
cli
insl
out
icebp
sbb
mov
cmp
xor
xor
dec
sbb
cwtl
call
ja
jno
clc
mov
fimuls
add
stos
pusha
mov
xor
cmp
cmc
lahf
fsubs
or
mov
mov
es
jp
cld
dec
out
out
adc
push
xchg
pop
mov
fistpl
iret
mov
cld
lock
mov
mov
rolb
in
sub
pop
sub
xchg
lret
sub
pop
adc
rorl
cmp
xlat
pop
fwait
mov
mov
xchg
movsl
push
aaa
add
xor
pusha
xchg
mov
xchg
xchg
push
pop
loopne
adc
mov
jmp
mov
in
push
add
mov
lret
aad
mov
ljmp
je
adc
jns
inc
jle
shlb
jecxz
iret
push
jb
lret
add
ss
lret
xchg
pop
sbb
lret
and
loope
sti
mov
fisubs
loopne
imul
push
cs
insb
cmp
push
xor
arpl
ret
cmp
cmpsl
popf
or
lcall
pop
aas
fdivp
mov
dec
loope
sbb
shrb
addl
push
and
scas
mov
jl
enter
or
mov
mov
pop
inc
ljmp
es
sbb
adc
pushf
push
cmp
lahf
mov
sub
popa
and
dec
and
dec
pop
mov
movsl
lahf
add
pop
inc
and
push
sbb
ss
mov
negl
and
xchg
fidivl
pop
out
inc
jmp
data16
roll
xchg
pusha
sbb
adc
cmp
sub
add
xchg
add
xor
mov
mov
shl
inc
dec
and
lret
int3
jecxz
xchg
mulb
and
mov
inc
mov
repnz
jb
cld
sub
insb
shll
aaa
iret
je
into
cmp
pop
notb
scas
inc
fcomp
js,pn
push
loopne
inc
push
or
inc
scas
xchg
clc
ss
cmp
jne
stos
push
adc
sahf
dec
dec
xchg
push
sbb
pushl
stos
and
fstps
jmp
jecxz
cld
push
inc
fsts
sbb
xchg
mov
bound
jge
flds
adc
add
mov
lea
sti
or
fmull
aaa
cmp
les
jne
inc
jno
shll
jl
ret
fs
cmp
sarl
jge
mov
psubd
insl
sub
cmp
adc
jo
fcomps
out
sub
mov
sub
xor
mov
xor
and
fwait
and
out
adc
out
cmpsb
pop
lret
aam
pop
sbb
mov
loopne
cmp
repz
sub
and
pop
popl
out
sub
int
or
rcr
int
negl
imul
test
aam
inc
pop
mov
mov
push
inc
push
insb
mov
push
sti
add
popf
test
call
pusha
sbb
push
adc
xchg
jbe
sbb
xor
inc
fwait
clc
ret
jnp
jl
fsubrl
mov
xchg
sbb
enter
cwtl
loop
fcomip
cmp
lods
sahf
leave
push
cmp
roll
testl
lahf
fcmovnbe
jg
or
cmpsl
jno
sbb
add
xorl
mov
mov
mov
mov
mov
ds
in
xchg
lea
dec
push
jbe
in
in
sub
mov
push
orl
mov
pop
adc
or
insb
or
jno
cmpsb
pop
fwait
jp,pn
dec
outsb
shl
int
mov
addl
inc
jae
push
ret
adc
pusha
xchg
pop
mov
sub
fimull
daa
mov
sbb
mov
cltd
int
ret
test
test
cld
cmp
pushl
lods
inc
aas
and
icebp
sbb
jbe
pcmpeqd
cmp
cwtl
and
rclb
inc
cmp
inc
pop
sbb
or
pop
lahf
and
adc
lahf
daa
xchg
pusha
lret
in
mov
pop
xchg
add
outsl
mov
sahf
xlat
or
and
lods
add
cmpsb
pop
inc
in
dec
out
xchg
fcompl
jl
cmc
push
shlb
sbb
add
mov
xor
mov
mov
sub
roll
adc
imul
outsl
imul
dec
std
dec
jnp
dec
pushf
dec
jmp
js
mov
fsubr
inc
out
xor
imul
mov
xor
movsb
dec
data16
inc
movsl
lret
inc
popa
sub
movsb
xchg
popf
jmp
push
inc
mov
add
cmc
mov
mov
mov
in
add
loope
sub
mov
sub
push
or
add
in
test
lea
mov
scas
xchg
and
cwtl
ficoml
add
dec
aad
dec
rcrb
sub
mov
pushf
fimuls
mov
pop
push
mov
dec
popf
cmpsb
mov
mov
inc
adc
pop
jmp
repz
repnz
or
out
cmpsl
bnd
xlat
incl
int
cwtl
fyl2x
xchg
aas
add
cmp
mov
jno
pop
dec
sbb
stos
lods
fwait
mov
pop
mov
lock
xchg
lret
imul
je
mov
inc
subb
cld
push
dec
fmull
push
mov
rclb
stc
push
jl
xlat
lods
inc
imul
shl
push
cmpsb
sarl
lcall
fmull
adc
fucomp
dec
test
adc
inc
out
push
rcll
add
fistps
icebp
lcall
flds
movsl
pop
and
fucom
sbb
sti
incb
orb
ret
das
inc
dec
mov
in
inc
notl
cli
mov
mov
cmpsb
add
ja
out
mov
int3
scas
es
int3
pop
fnsave
sub
subb
hlt
sbb
cltd
mov
mov
scas
rcll
stos
repnz
lret
jne
add
xchg
sbb
jo
inc
jmp
call
mov
pusha
add
shr
jecxz
loopne
test
popf
jb
mov
jle
jl
mov
out
stos
push
xor
mov
xlat
adc
jno
xchg
and
cld
das
sub
mov
mov
popf
cmp
push
shl
dec
xlat
sbb
loop
lcall
pmuludq
test
jnp
jns
sub
jns
jmp
pushf
push
hlt
sub
rcll
push
sbb
stc
xchg
stos
push
rcr
mov
push
push
das
mov
jbe
jmp
pop
sbb
lret
or
and
add
in
push
movsl
mov
jle
jmp
sub
or
stos
lock
rolb
rcrb
push
mov
faddl
mov
push
pop
dec
jmp
cs
ja
gs
and
pop
sub
inc
loop
roll
jne
mov
xchg
lds
xchg
out
gs
sti
mov
repz
dec
or
push
push
repnz
inc
dec
pushf
mov
mov
sti
outsb
jne
aam
out
xor
test
cwtl
in
push
dec
dec
dec
xor
push
pop
adc
mov
adc
dec
add
sbb
js
sti
imull
or
mov
cmp
dec
sub
or
jb
and
xchg
jecxz
dec
into
insb
xchg
cli
movsl
out
in
imul
xor
lahf
sub
icebp
add
mov
sbb
popa
pop
les
mov
in
xlat
add
movsb
lahf
in
xor
lahf
xor
xchg
pop
jne
xchg
int3
xor
js
mov
decl
dec
push
adc
arpl
cmp
dec
dec
movsb
mov
sti
in
rcrb
jle
pusha
xlat
add
pop
addr16
mov
icebp
dec
aad
xor
rcrl
or
lock
pop
dec
fdivr
ds
or
int
mov
inc
fcmovb
dec
fdivl
imul
or
das
xchg
popf
inc
mov
mov
jg
mov
mov
sub
sbb
shll
imul
cmc
and
push
mov
rorb
push
popf
xchg
xor
cmp
test
lock
rcll
dec
movsb
jge
mov
push
mov
jp
int3
sub
dec
push
mov
out
or
in
jg
repnz
ljmp
cmpsb
sti
notl
dec
mov
jo
fcmovnbe
stos
roll
outsl
sbb
shlb
out
push
sub
push
insb
shll
cmp
aam
sub
and
mov
push
enter
ret
add
mov
outsl
cmp
testl
inc
test
je
repnz
add
inc
shr
fisubrl
test
out
cmp
arpl
call
sbb
add
sub
pop
outsb
jae
sbb
sbb
outsl
ret
out
mov
loope
fidivrs
mov
in
mov
cmp
fwait
and
dec
ds
push
fidivrs
mov
inc
popl
rcrb
mov
push
and
imul
sbb
mov
xlat
mov
je
scas
call
data16
add
xor
je
xor
pop
rclb
mov
das
lahf
push
aas
ss
sub
dec
jmp
pop
mov
lock
push
das
cltd
testb
cwtl
cmp
callw
sub
mov
or
loopne
in
lret
xor
mov
jg
adc
adc
scas
imul
imul
mov
ss
mov
aaa
outsb
xor
or
shl
imul
dec
cmp
jne
loope
add
dec
pop
add
pusha
pop
xor
push
mov
push
lea
daa
das
sub
insb
jge
popf
pop
insb
gs
or
mov
or
insl
xor
in
popf
lds
inc
bound
shll
add
push
push
xor
pop
mov
dec
xlat
cmpsl
leave
out
mov
stc
outsb
xchg
das
lret
mov
dec
nop
mov
aas
int
outsl
or
repz
push
sbb
and
in
mov
rclb
popa
ficompl
xchg
sbb
dec
inc
xlat
push
in
and
adc
xlat
jo
inc
fdivr
push
test
ficoml
das
adc
xchg
xchg
mov
inc
cmp
inc
xchg
daa
fsubs
out
adc
and
sub
cmp
shlb
jbe
movsb
lahf
add
push
loop
xchg
filds
je
fisttps
sub
fldl
data16
inc
mov
mov
ret
jmp
pop
mov
hlt
dec
mov
xchg
push
std
or
mov
ja
add
and
push
cld
mov
rclb
loope
fidivrl
incb
out
je
xchg
fstpl
lret
inc
push
daa
leave
inc
inc
lcall
enter
out
sub
cmc
push
test
sub
ljmp
fbstp
push
cmp
test
das
sub
sub
loopne
push
sub
add
pop
ror
fidivs
data16
push
mov
imul
stos
ret
stc
popf
jmp
inc
fdivs
mov
xor
push
imul
cmp
mov
mov
pop
pop
adc
je
int3
and
cmpsl
test
lods
std
xchg
push
mov
mov
test
pop
pop
outsb
scas
sbb
nop
stos
movsb
lahf
lods
inc
jle
push
push
inc
ds
inc
insl
stc
xchg
push
inc
mov
dec
mov
cltd
sahf
xor
xor
stc
adcl
or
addb
out
adc
std
push
mov
or
enter
adc
stos
inc
mov
dec
daa
fbld
test
add
aam
leave
push
mov
mov
mov
loopne
jnp
mov
out
dec
sar
mov
ja
mov
hlt
cmp
push
sbb
test
sbb
fstp
lret
mov
inc
inc
mov
sbb
push
movsb
je
push
movsl
daa
xchg
stc
fcoml
in
push
pop
adc
xor
and
xchg
push
mov
jmp
xchg
xor
testb
inc
xlat
loop
loopne
xor
loope
pushf
jl
jp
fcompl
sbbl
jecxz
call
jne
fdivs
fdivp
push
test
fcmovu
jns
dec
pusha
es
nop
call
mov
pop
xchg
xchg
rorb
pop
sbb
imul
xor
mov
aas
adc
shrb
bound
add
mov
inc
add
xor
mov
cmp
cld
ds
sub
loop,pt
mov
and
fildll
sti
clc
std
adc
xor
fsubrl
cmp
inc
stos
xchg
adc
push
sbb
mov
mov
popa
mov
ss
push
and
cmp
sbb
pop
imul
xchg
mov
cltd
repz
push
xor
push
shlb
pop
int3
adc
mov
add
out
dec
add
mov
jmp
fs
loop
jge
or
stos
es
testl
fildll
test
jg
xor
adc
jbe
gs
xorb
mov
add
or
cmpsl
shl
sub
out
push
js
ret
jmp
add
inc
es
sarb
push
int3
jg
fildl
jb,pt
mov
sbb
xchg
int
xchg
idivl
mov
fs
mov
jg
aam
jl
es
push
fisttpl
sbb
dec
sbb
jecxz
push
mov
sahf
fldt
mov
inc
aas
outsl
rol
in
lods
scas
inc
lea
add
mov
mov
sbb
pop
imul
jne
push
cmp
mov
sub
gs
push
xlat
in
pop
mov
adc
push
fldt
pusha
int3
cld
mov
leave
jle
jge
daa
lds
adc
cmp
dec
ljmp
lahf
lods
cmc
jge
ljmp
mov
ficoms
dec
enter
pop
pushf
jno
enter
xor
sub
and
push
or
out
mov
loop
adc
lods
int
adc
movsl
sub
sub
ja
sub
mov
bound
addr16
fcompl
cwtl
sbb
iret
sub
xor
adc
jne
mov
inc
ficoms
push
jge
xlat
or
test
aas
cld
sub
jbe
mov
push
es
xor
out
mov
fptan
xchg
pushl
xlat
lcall
pop
jg
push
test
mov
lds
push
and
jmp
leave
pop
frstor
pop
ror
ss
xor
int3
push
ficomps
mov
xlat
ss
fistl
lcall
sub
mov
dec
cmp
test
and
aaa
clc
inc
iret
sub
xchg
adc
icebp
fwait
dec
inc
sahf
xor
lea
std
sub
subl
push
add
sub
ret
inc
mov
pushf
loop
les
pop
lds
and
push
add
mov
pop
mov
fcmovbe
jle
insl
scas
push
stos
cmp
and
xlat
cmpsl
or
cmp
cmpl
test
pop
dec
sub
mov
sub
nop
jmp
add
cmp
xchg
cmc
or
gs
push
sub
bnd
dec
and
mov
adc
gs
test
xchg
shrl
xlat
test
mov
addb
inc
divl
and
fcmovnu
push
fmull
scas
jl
jmp
or
ss
pop
inc
std
divb
xchg
ss
adc
es
mov
out
jae
mov
cs
xchg
xor
cmpsb
xor
movsb
lea
sub
or
push
jmp
mov
incb
xchg
add
jmp
dec
push
push
out
inc
pop
inc
mov
imul
mov
pushl
nop
dec
push
and
mov
incb
mov
jecxz
jecxz
mov
aaa
adc
decl
sub
push
fildll
stos
sub
jle
cmp
out
cmp
dec
out
adc
mov
push
xor
mov
pop
and
lods
fsubl
aas
scas
dec
roll
cltd
add
xor
ds
movb
inc
hlt
jmp
es
fcoms
lods
notl
std
aas
sarl
inc
pop
jae
sbbl
push
push
clc
xor
out
mov
pop
pop
mov
mov
xchg
icebp
gs
sarb
dec
movsb
test
dec
push
test
push
cmp
dec
lret
fsts
pop
cmpsb
fisubs
cld
add
int
dec
lret
sbb
sbb
inc
test
xchg
sbb
mov
jg
test
ret
push
cmp
ret
nop
push
ljmp
rcrl
xor
xchg
aam
cmpb
jl
std
push
pop
sub
ljmp
push
and
mov
or
popl
xor
mov
lahf
or
adc
out
xchg
ljmp
inc
leave
adc
in
leave
dec
repz
sbb
push
mov
push
rol
push
mov
sbb
lahf
hlt
insb
arpl
inc
mov
jns
and
jnp
in
into
or
aad
jp
sahf
dec
stos
jnp
xor
mov
pop
ret
push
and
fistl
cmp
inc
or
pop
lods
or
mov
pop
addr16
lcall
sbb
sahf
cmp
lods
cmp
ror
fisubrs
outsb
ljmp
mov
push
bound
jge
cmp
jnp
mov
fscale
repnz
jo
dec
xchg
push
out
jnp
ss
jb
mov
ds
pop
inc
pushf
or
das
xchg
jo
and
xchg
add
int
je
aaa
or
mov
repnz
xor
mov
out
push
sbb
test
dec
mov
imul
fstps
lds
or
push
ds
cmpsl
or
fwait
repz
adc
mov
mov
push
clc
adc
rol
cmpl
aam
add
jnp
cmc
adc
push
sub
push
and
push
add
sahf
sbb
fildll
gs
addl
pop
cmc
jle
or
ja
jle
or
mov
fistps
add
push
fwait
adc
dec
popf
iret
sub
pop
mov
inc
in
fldz
cmp
xchg
flds
dec
shlb
inc
fisttpl
repz
rcrb
clc
or
lods
push
into
push
test
inc
test
mov
push
lret
test
out
jae
sub
insl
push
jne
mov
andb
loope
xlat
cmpsl
lea
push
stos
aaa
or
cmp
cs
into
inc
cltd
mov
jmp
push
in
sub
hlt
sub
fstpl
inc
add
adc
in
adc
mov
inc
ljmp
movsb
je
push
ret
daa
mov
rclb
out
or
js
xor
and
jae
sbb
jle
scas
or
mov
nop
pop
addr16
incb
adc
pop
push
stos
rcr
leave
stos
xchg
cmp
sub
aaa
cld
cmp
test
scas
sbb
popa
dec
idivl
sbb
sub
lock
gs
daa
mov
or
lock
or
pop
add
aas
in
pop
icebp
jns
pop
arpl
movsb
in
test
lods
das
xor
je
xor
cltd
inc
jns
push
dec
pop
out
xchg
cmp
fidivs
lods
incb
adc
adc
xor
testl
dec
scas
xor
cld
mov
xor
mov
jmp
cmp
das
lods
das
test
mov
je
mov
das
fsubl
icebp
adc
pop
pop
mov
movsl
mov
syscall
ja
in
push
cmp
and
push
dec
loop
jmp
out
mov
lret
xchg
push
cltd
popa
jae
adc
pushf
mov
push
idivl
dec
lods
jecxz
xchg
lahf
dec
lret
cld
pop
xor
cmpsb
and
pop
mov
mov
mov
lea
sub
cmpsl
push
addl
xor
add
xchg
adc
xor
mov
cmp
cmp
test
sub
shrl
adc
iret
movsb
inc
xchg
xor
ficompl
mov
shlb
adcb
inc
adc
xor
pop
sarl
lods
jne
fcmovb
push
std
inc
xor
pop
pop
cltd
data16
insl
movsb
and
push
daa
cs
fs
and
orl
cmp
mov
xlat
insb
in
jb
inc
sbb
cltd
mov
push
jno
or
sbb
sbb
test
add
in
mov
int3
push
std
repnz
scas
bound
icebp
shll
call
outsl
lahf
in
mov
pop
sarl
sti
popf
movaps
lods
testl
and
inc
fadds
adc
repnz
jbe
mov
hlt
cs
jecxz
into
and
pop
jmp
fsts
outsl
adcl
addl
imul
dec
test
sbb
and
xchg
pop
and
inc
dec
and
xchg
jg
leave
jns
add
jp
and
add
pop
addl
and
dec
adc
cmp
cmpl
mov
sub
hlt
cwtl
xchg
jg
sti
lcall
mov
rorb
inc
outsl
sbb
bswap
pop
aaa
int
dec
lock
and
pop
sbb
ret
mov
xchg
inc
enter
jmp
repz
js
fstpt
lods
mov
test
dec
inc
jnp
addr16
push
mov
js
bound
int
mov
stos
notb
loope
push
inc
inc
mov
mov
aad
fdivrl
mov
mov
insb
adc
jno
popf
push
pushf
pop
and
scas
pop
xchg
jno
adc
sbb
sti
jae
adc
jl
cmc
ja
push
inc
push
int
loopne
cmc
sub
in
insb
rclb
stos
xchg
insl
lds
xlat
and
pop
jmp
push
call
pushf
push
xchg
movsb
pop
stc
sti
aas
arpl
lods
in
sbb
xchg
lret
and
cld
adcb
rolb
jo
pop
or
push
addl
testl
push
xchg
xchg
repnz
jmp
add
les
ret
sti
xor
push
mov
adc
cmp
jmp
insb
sbb
fwait
rol
adc
mov
push
jecxz
xchg
sbb
in
jp
inc
lret
pop
and
dec
pop
pop
lret
sbb
dec
push
xor
jl
aaa
and
pop
jg
and
es
frstor
push
addr16
jae
and
roll
and
push
inc
xor
and
add
mov
pusha
mov
pop
fwait
negl
or
sbb
or
push
xor
sub
outsl
cmp
mov
ss
xor
adc
jno
ss
lods
popa
mov
arpl
mulb
xor
xchg
jno
fstps
dec
pop
add
mov
xor
ret
addb
sahf
out
mov
mov
jne
xor
jecxz
out
out
push
add
add
pop
inc
ljmp
loop
push
pop
adc
insb
test
push
mov
mov
jmp
push
in
sbb
dec
popf
jecxz
mov
xchg
cmp
shrb
adc
mov
sub
xchg
or
adc
mov
jbe
adc
cmp
clc
xlat
mov
gs
mov
xor
pop
cs
jp
daa
das
jae
rcl
inc
cmpsb
psrld
push
addb
loope
outsl
sbb
sbb
add
adc
es
ja
mov
cmp
xchg
aam
data16
rcl
mov
mov
xchg
ja
xchg
int3
orl
in
and
jecxz
fnstcw
adc
fisttpll
and
andb
fisubrl
and
dec
xor
in
out
out
in
jp
int3
mov
pushf
xchg
push
insl
jp
push
sbb
cmp
xchg
push
ret
xchg
fcoms
push
xchg
ljmp
mov
xor
sub
adc
data16
jg
test
pop
and
mov
adc
sbb
or
sub
repz
and
mov
inc
loope
or
lods
or
fmull
loop
mov
sbb
jl
add
or
push
ret
fwait
outsb
push
or
cmp
lods
lcall
xchg
rcrl
mov
mov
fsubs
cmpsb
cmpb
xchg
jns
aad
nop
loopne
fisttps
cmp
jp
xor
call
pop
rcrl
xchg
dec
pop
mov
outsl
adc
das
int3
ret
aad
cmpsl
clc
icebp
and
movsl
aad
setno
and
in
repnz
or
jne
dec
lahf
popa
das
outsl
inc
orb
lret
sub
add
insb
xchg
xor
loop
pop
jo
into
jo
cmc
pop
or
test
sbb
js
fadds
or
cmp
stc
fists
xlat
ja
cmp
add
imul
stos
sub
dec
fdivrl
sahf
pusha
dec
jbe
mov
mov
xor
icebp
rcl
push
faddl
and
test
aam
jp
adc
cmp
xor
jbe
lcall
lret
ljmp
mov
cmp
mov
push
adc
mov
insb
in
clc
rorl
fs
xchg
test
lahf
mov
push
xchg
and
cmovp
jae
les
gs
les
add
enter
or
dec
dec
fwait
jl
cmpsl
fs
xor
aas
dec
and
arpl
in
shlb
loope
add
out
jb
pushf
mov
mov
pop
mov
out
mov
cmp
scas
mov
loop
mov
popf
adc
xchg
test
cmpsb
mov
inc
jno
rorl
xchg
xchg
cli
dec
inc
dec
lock
out
dec
rolb
sbb
mov
js
push
imul
xchg
xor
in
push
or
nop
dec
adc
es
push
pop
dec
inc
or
cmp
mov
sub
mov
lea
inc
add
cmp
mov
sbb
lock
nop
psubd
repz
cmp
jle
addr16
and
outsb
inc
leave
xor
aam
icebp
adc
mov
add
bound
mov
dec
in
xchg
add
cmpsl
iret
xchg
mov
nop
cmp
adc
das
xchg
xchg
pusha
xchg
leave
imul
cmp
cmp
leave
lock
push
xchg
and
cmp
push
push
push
lret
pop
lret
iret
jge
adc
and
mov
hlt
jmp
inc
test
sbb
mov
cmpsb
insl
js
ror
and
xor
nop
fadds
pop
repz
mov
jle
dec
test
sbb
dec
cmp
insl
or
pop
or
pop
and
fbld
sub
mov
sub
inc
xchg
adc
xor
cmp
mov
icebp
or
inc
jge
ficoms
mov
add
je
ds
aas
lcall
stos
loope
test
arpl
mov
aaa
clc
loopne,pt
movsb
pop
lods
sbb
ret
cmpsl
xchg
outsb
jmp
cmp
bound
add
ljmp
and
pusha
push
or
add
pop
mov
in
mov
outsl
xlat
test
std
jl
xchg
mov
aam
add
push
inc
mov
arpl
scas
push
mov
stos
xorb
nop
xchg
mov
stos
hlt
xchg
xchg
cltd
stos
mov
inc
int
and
push
cltd
mov
imul
inc
sbb
rorb
mov
aas
mov
gs
xchg
mov
shll
mov
in
icebp
or
fisttpl
dec
and
and
mov
in
fisubrs
in
push
mov
mov
js
aaa
cmp
pop
fwait
push
repz
iret
rcl
mov
cmp
outsb
jl
icebp
cmp
int3
data16
gs
xchg
xchg
cmpsb
add
int
add
fsubrl
cmp
in
insb
into
daa
xchg
nop
das
cmc
outsl
mov
cmpsb
daa
xchg
movsb
sub
add
ljmp
push
fdivs
ds
inc
xlat
rcl
arpl
call
frstor
pop
pop
adc
mov
lock
push
cmpsl
pop
mov
push
scas
movsb
scas
xchg
mov
pop
inc
mov
stc
test
jno
orb
int3
lods
pop
xchg
push
cmp
das
push
jo
mov
jg
clc
mov
mov
scas
in
xchg
add
into
out
fimull
mov
movsb
jo
cmp
pusha
pop
xchg
mov
pop
es
das
mov
sub
and
xor
icebp
inc
inc
lahf
sbb
out
cltd
mov
cmp
shll
test
xorl
dec
movsl
js
outsb
cltd
cmp
and
xchg
sub
dec
mov
sub
mov
mov
inc
add
cmp
mov
mov
dec
and
mov
sbb
lea
dec
sti
lahf
xor
cmp
pop
inc
jnp
pop
adc
js
adc
add
xchg
out
jo
pop
xchg
rorb
and
add
jl
ficomps
cmp
adc
or
fisttpll
pop
popf
inc
and
shrl
adcb
mov
test
dec
jmp
mov
inc
pop
add
mov
xor
orl
mov
inc
push
inc
popl
xor
or
inc
xor
lahf
mov
adc
loope
dec
inc
fimuls
hlt
cmp
mov
push
in
mov
push
fisttpl
adc
dec
out
pushf
into
movsl
loopne
cld
lods
rclb
xchg
andb
jecxz
xchg
pushl
jb
mov
mov
shr
in
dec
jno
push
lret
mov
mov
mov
or
dec
or
sbb
pop
add
xor
imul
loopne
lds
scas
push
add
jbe
mov
inc
out
insl
dec
fldenv
mov
loope
add
push
ja
ljmp
mov
push
imul
lds
sbb
adc
test
je
add
inc
jb
xor
pop
or
mov
sbb
inc
ret
arpl
sub
adc
out
dec
hlt
sbb
leave
out
cmp
xor
fistps
mov
negl
outsl
in
or
inc
push
xor
test
repnz
mov
mov
nop
pop
test
inc
mov
pop
cmp
push
stc
stos
jne
pop
jl
imul
cwtl
popf
dec
mov
ljmp
mov
lret
daa
popf
inc
subb
push
xchg
inc
fildll
add
daa
push
and
fisubrl
or
push
or
cmp
sbb
pop
mov
jp
sarl
mov
loop
addb
cmpsb
mov
sbb
les
xorl
clc
mov
in
cwtl
jae
sub
daa
and
cmpsl
sbb
mov
mov
xchg
jg
push
pop
mov
dec
push
loop
scas
aam
mov
jnp
mov
add
adc
add
or
in
xchg
arpl
sub
mov
sbb
mov
add
xchg
adc
sti
dec
jo
mov
or
lock
inc
in
test
iret
daa
inc
out
fwait
push
aaa
shr
mov
popa
loope,pn
in
jne
jno
jecxz
fbstp
lahf
adc
sub
xchg
sbb
adc
jne
push
iret
fildl
xchg
fdivrs
pop
in
push
out
xchg
cld
jnp
pushf
arpl
mov
pop
roll
loop
fs
sbb
sub
xchg
mov
inc
cs
cmp
and
test
in
adc
scas
fldenv
test
mov
jl,pt
xchg
sbb
mov
pop
cmp
cltd
push
mov
sbb
push
fisttps
pop
push
or
jp
mov
test
arpl
pop
aas
mov
fs
sbb
testl
out
mov
sbb
js
cli
pop
or
loopne
and
mov
test
pop
pop
or
sbb
sbb
mov
mov
mov
and
jle
imul
push
sbb
push
dec
notb
jbe
pop
int3
lods
call
push
push
xchg
cmp
leave
or
xor
sbb
xchg
ljmp
xchg
ret
push
xor
cmp
data16
cmp
or
shll
push
jb
mov
shlb
xchg
dec
mov
das
sbbl
roll
adc
push
pop
cs
aad
sar
daa
lret
mov
sub
push
xchg
mov
mov
jle
cs
aaa
int3
int
lahf
lods
cli
adc
ja
push
cmp
imul
into
xchg
jnp
jns
adc
push
mov
or
mov
in
add
int3
cmc
push
cmp
fidivs
in
or
or
or
stc
cwtl
ljmp
jbe
xchg
into
xchg
cltd
imull
or
inc
call
ja
mov
sub
iret
fnstsw
add
mov
push
jmp
cmovle
hlt
adc
dec
mov
sbb
outsl
or
fstps
push
out
xchg
jns
cwtl
das
mov
fucomp
in
or
mov
xchg
sar
push
or
ljmp
imul
push
sub
sbb
add
lea
pop
rolb
xchg
push
mov
popl
insl
sbb
mov
les
mov
inc
push
push
rclb
xor
sbb
scas
sti
cli
pop
xchg
dec
mov
cmpsb
jge
shlb
xchg
fldcw
js
push
and
jmp
popf
fdivrs
dec
xchg
xor
or
jae
jg
xor
pop
ret
popa
xchg
imul
andl
dec
sub
sbb
and
or
shrb
addr16
push
xchg
cmpsl
dec
in
add
pusha
cmp
sub
lcall
mov
lods
mov
push
push
sti
push
testb
xchg
int3
mov
enter
nop
cmp
sahf
jae
pop
mov
outsl
adcl
stc
add
pop
pusha
aaa
pop
fildl
mov
lds
rcrl
mov
ret
mov
pop
inc
fcmovnb
in
sub
filds
jmp
sahf
out
out
sbb
cli
mov
pusha
cs
out
xlat
mov
lcall
sub
sbb
mov
lcall
pop
mov
imull
sbb
push
imul
mov
inc
loope
cmp
jb
ret
loope
icebp
cmc
mov
push
ljmp
and
adcb
mov
cmc
js
pop
mov
mov
lret
jmp
dec
pop
mov
fidivrl
inc
adc
bndstx
iret
sub
cmp
mov
ret
xchg
test
cmpsl
cmp
ja
pusha
in
popa
pop
repz
int3
stos
mov
mov
test
imull
inc
pop
cmc
and
push
xlat
mov
frstor
cld
push
or
add
jnp
or
cmp
cmp
add
test
scas
cltd
jp
dec
pushf
fists
test
cmpsl
and
test
cwtl
shlb
in
xchg
sbb
ja
jge
subl
out
lock
cli
mov
ja
daa
rcll
jbe
mov
add
or
push
mov
ret
inc
mov
mov
add
cmp
inc
or
aam
push
out
pop
push
add
outsl
aaa
cmp
call
sbb
ja
cmp
xor
jae
lods
dec
stc
fsubl
fidivrs
fldl
mov
shll
cltd
imul
iret
addr16
scas
int3
cmpsb
inc
inc
xor
ljmp
mov
dec
jno
ret
stos
fdivrl
push
xchg
or
adc
mov
outsb
push
ds
movsb
adc
stos
push
adc
inc
daa
mov
dec
sub
mov
or
repnz
lock
test
insl
mov
sbb
stos
ficoms
ss
inc
addb
push
push
mov
es
sbb
aad
pop
arpl
rsm
sub
shrb
stc
inc
cltd
and
cmpsb
mov
or
mov
lds
add
nop
push
pop
pop
decl
loopne
cwtl
inc
inc
push
pop
inc
daa
pop
inc
cmpsl
test
popf
scas
push
jb
sbb
out
movsl
sub
popl
add
lret
mov
xchg
xor
out
pop
lock
mov
cmpsl
movsl
sbb
jb
daa
insb
arpl
push
add
push
cmp
lcall
or
ficomps
and
or
sub
insb
jnp
cwtl
push
mov
push
jae
dec
mov
inc
push
loopne
dec
ret
incb
movsl
rclb
out
int3
pushl
pop
in
dec
cld
idivl
add
mov
sub
cs
jl
mov
and
and
sub
add
dec
xor
aam
fsubl
push
pushf
inc
fmull
sbb
push
fwait
mov
test
inc
fwait
sti
jl
xchg
ljmp
insl
push
lods
mov
in
pop
cmp
imul
and
int3
sbb
mov
mov
xor
cmpsb
adc
jno
icebp
jno
ss
insl
mov
and
sub
les
insb
cld
aaa
js
es
lds
pop
mov
or
cmp
mov
and
jp
out
or
leave
mov
clc
add
or
and
and
imul
mov
rolb
fcomi
lock
or
nop
sub
push
jno
movsl
jl
add
mov
sahf
and
movsl
movsl
or
push
jle
xor
cmp
inc
xor
mov
pusha
push
lock
insl
mov
jae
jmp
lock
fwait
sub
mov
cmp
mov
jmp
cmp
and
lret
in
outsb
push
mov
cmp
mov
cmpl
leave
push
sbb
ret
loope
icebp
iret
or
dec
loope
sub
sbb
imul
scas
lahf
jb
sub
nop
pop
fsts
mov
aam
mov
sbb
pop
arpl
cltd
jnp
adc
jo
aaa
push
mov
mov
or
stos
mov
pop
lret
xor
lods
jp
pop
icebp
das
sub
xorl
imul
inc
cmpsl
cmp
xlat
sub
lcall
mov
stc
mov
cmp
and
xchg
mov
fxch
lcall
add
notl
mov
lock
mov
loop
adc
xor
mov
adc
push
cwtl
mov
insb
jne
push
sbb
pusha
adc
dec
pop
aad
std
in
mov
add
movsb
fucomp
out
in
stos
leave
cmp
adc
mov
dec
pop
ret
xlat
stos
push
enter
call
enter
ljmp
add
and
sbb
xchg
cltd
iret
daa
mov
mov
gs
lods
fcomp
aaa
clc
push
push
push
test
jge
out
imul
jp
clc
add
cltd
or
jo
cmp
mov
pop
lds
movb
imul
mov
xchg
lds
leave
or
cmpsb
aas
or
test
es
push
inc
insl
dec
fs
lea
fs
out
dec
outsb
inc
movsb
push
insb
dec
inc
adc
add
jne
inc
into
mov
xchg
out
jno
jbe
sti
xor
dec
sahf
sbb
xchg
mov
mov
mov
xor
pop
lcall
fsubr
xor
push
push
xchg
aam
and
bound
movsl
fcmovnb
sar
xlat
dec
push
jo
cltd
cmp
or
ret
cmp
popa
or
outsl
stos
jp
pop
sub
mov
lahf
sbb
dec
dec
mov
stc
dec
add
mov
int3
pavgb
popf
push
dec
ja
cmp
lret
inc
rcll
lret
xor
and
dec
add
or
xchg
bound
lahf
mov
mov
jg
or
jmp
int3
add
enter
adc
aas
inc
popa
mov
xor
sbb
pop
inc
or
sbb
adc
pop
jb
sub
xor
xchg
push
les
mov
clc
adc
jecxz
sbb
fs
and
sbbl
shr
popf
mov
adc
pushf
cmp
push
jge
sub
iret
ffree
sahf
arpl
into
inc
inc
inc
mov
inc
pop
add
sbb
mov
cmc
insl
adc
mov
gs
push
jne
xchg
lods
adc
add
xchg
xchg
mov
add
insl
sbb
loopne
fisubs
rcll
std
mov
inc
push
scas
pop
loope
iret
cli
adc
icebp
pop
or
mov
loope
stos
fmul
stos
lods
pop
jle
push
mov
fwait
jo
sbb
aad
dec
divb
sub
scas
dec
jge
cmp
xchg
jbe
movsl
pop
sahf
and
fadd
mov
fucomi
push
jmp
in
push
push
addr16
cmp
sti
or
out
jl
ret
movsl
test
ljmp
jmp
xchg
mov
mov
fldt
cmp
in
imul
aaa
cmp
sub
cli
iret
and
lds
pop
frstor
sarl
xchg
jne
das
fistpll
dec
in
pusha
mov
mov
loopne
aam
mov
sbb
in
sub
mov
xor
xchg
jmp
push
aaa
imul
ja
test
pop
add
test
pop
insl
les
push
aas
mov
pop
mov
aam
pushf
or
mov
int
stos
shlb
and
ljmp
out
dec
fsubl
out
outsb
gs
xchg
dec
mov
mov
filds
insb
mov
add
mov
shr
jb
stc
adc
mov
je
jl
xchg
dec
lds
cmp
ja
sbb
xchg
stos
jmp
xchg
jbe
pop
out
sti
adcl
roll
iret
push
mov
xchg
adc
inc
mov
stc
sub
arpl
push
sbb
adc
pop
mov
mov
stos
xor
cmc
rolb
ljmp
xchg
xchg
xor
jmp
jbe
adc
ja
and
aaa
pop
mov
mov
lcall
test
insb
ljmp
cltd
dec
or
in
stc
inc
lods
ss
mov
in
clc
xchg
lea
aaa
jg
sti
or
adc
xlat
ffree
jb
pop
and
inc
mov
and
ret
dec
pusha
arpl
out
mov
cmp
out
cltd
cmp
cmp
adc
loope
stos
movsb
test
in
push
insl
jnp
js
xchg
lret
and
push
ror
xor
mov
push
push
shrl
push
jne
insb
int
ret
adc
pop
xchg
inc
mov
cmp
dec
lods
xchg
sub
data16
pop
cmpsl
loop
and
cmp
and
push
cmp
adc
nop
int3
inc
inc
pushf
lea
out
in
adc
ds
das
ljmp
jg
xchg
mov
xor
fcomps
pop
in
loop
mov
push
and
adc
call
outsb
rorb
adc
movb
push
jmp
jb
ret
push
xchg
xor
loopne
lea
daa
icebp
pop
shll
xchg
stos
lcall
mov
cwtl
lret
mov
pop
loope
pop
dec
insb
fmull
mov
fimuls
jbe
pop
or
or
xor
jmp
inc
lods
xor
or
sbb
pop
enter
pop
or
andb
dec
add
mov
or
or
sbb
aad
fisubl
loope
pusha
aas
add
add
dec
lods
push
lea
lret
mov
subb
jno
in
dec
xchg
fsubl
jae
mov
inc
test
ds
fistps
ja
xchg
imul
scas
lock
jl
lret
andb
bound
aad
icebp
push
stos
scas
test
ficoms
cmp
pop
icebp
inc
loopne
mov
sahf
sub
jg
or
mov
adc
lahf
jbe
pop
xorb
popa
movsb
xchg
sbb
add
jne
or
repnz
fbld
inc
movl
call
sub
movsl
repz
adc
repz
cmc
jo
test
in
in
shlb
push
sub
and
pop
cli
sbb
outsl
dec
stc
jae
xor
pushf
aas
jmp
inc
ljmp
push
xchg
xchg
test
mov
jle
and
cmp
mov
lret
ljmp
inc
adc
std
adc
pop
mov
inc
clc
fiadds
inc
into
imul
mov
test
cmpsb
and
rclb
inc
lret
lret
negb
daa
out
fildl
xchg
push
movl
add
lret
iret
jb
jp
mov
vpsubq
in
sub
popf
and
test
jmp
pop
or
ja
sbb
jecxz
add
and
jbe
xchg
pop
lock
adc
jp
push
xor
ret
popf
iret
cmpsb
cwtl
filds
mov
jae
scas
data16
xchg
xchg
cmpsl
gs
fwait
push
es
dec
xchg
jne
xchg
jae
dec
jl
andl
cltd
sub
movsb
cmc
inc
cmp
sub
dec
inc
sbb
add
dec
sub
add
mov
scas
das
cmp
fstpt
pop
jle
inc
rolb
js
aad
das
repnz
jns
ljmp
in
mov
or
dec
sbb
or
test
popf
dec
inc
out
fwait
orl
add
fs
outsl
push
push
cmpsl
add
call
mov
xlat
iret
jmp
scas
pop
les
nop
out
out
cmp
nop
imul
and
shrb
mov
ljmp
jbe
add
repnz
test
sarb
cmp
and
and
shrb
mov
movsl
adc
in
cs
aaa
notb
cmpsb
inc
sahf
ret
sub
fnstcw
push
sbbb
insb
mov
pushf
mov
testb
dec
push
xor
inc
xlat
jmp
inc
mov
inc
jmp
fnstcw
int
test
stos
cmp
enter
push
inc
dec
shrl
clc
dec
pop
fsubrl
mov
add
stos
fidivrs
push
lcall
jmp
mov
pop
dec
jae
lock
add
push
xor
dec
les
sub
ja
mov
push
mov
pop
add
add
pop
inc
add
decb
fs
les
mov
mov
adc
outsl
or
aam
sub
lods
jbe
push
enter
mov
mov
push
pop
inc
xchg
inc
xor
xchg
pop
insl
xchg
frstor
ss
call
xchg
add
outsb
pusha
and
push
dec
popl
inc
lret
ret
out
pop
imulb
add
pop
xor
dec
push
icebp
adc
adc
shll
jae
adc
and
push
and
push
ret
adc
pop
inc
mov
cmp
sbb
xchg
lcall
add
call
icebp
adc
fsts
pusha
mov
inc
xor
mov
or
fcoms
mov
xor
adc
pop
inc
xor
xchg
pop
xor
mov
loop
outsb
cwtl
jno
cmp
or
mov
shlb
lods
sub
xor
pop
outsb
inc
dec
notb
lret
fninit
inc
idivl
sbb
push
iret
xchg
jb
jecxz
mov
int
pushf
push
test
addr16
in
and
jp
out
icebp
jge
pop
mov
int
sub
and
les
out
xor
pop
scas
jno
dec
jae
lods
insl
and
jl
shrb
jecxz
sbb
xor
pop
nop
push
dec
dec
mov
cwtl
push
imul
dec
push
add
dec
push
mov
mov
test
dec
enter
xchg
cmp
xor
push
call
mov
sub
cmp
push
pop
leave
inc
sbb
xchg
jo
inc
sub
fbstp
adc
insb
sub
sbb
add
sbb
sub
cltd
mov
repnz
repz
push
roll
fsubl
lahf
fisubrs
adc
or
ljmp
sarb
fmuls
xchg
mov
xchg
adc
adc
jmp
mov
adc
jnp
shrl
sbb
clc
lock
sbb
fisubrs
xchg
jne
and
adc
out
mov
push
in
fsubrs
ret
sub
in
das
je
out
or
jmp
leave
jecxz
jb
popf
or
xlat
popl
jae
mov
jbe
insb
mov
xlat
fs
adc
iret
imul
sub
lcall
lret
out
out
aas
in
fwait
lods
sbb
into
xor
dec
ret
or
inc
ja
stos
push
xchg
adc
lret
roll
cld
call
cmp
mov
std
and
divb
scas
push
jmp
or
leave
in
in
mov
or
push
push
sub
loopne
pop
push
push
push
les
sbb
xchg
into
jb
test
dec
negb
dec
shl
mov
xchg
mov
mov
xor
insb
dec
or
stos
shrb
jo
push
mov
lods
fcoms
xor
cmp
xchg
lds
mov
xchg
mov
scas
in
cld
in
les
mov
jecxz
ds
or
push
lcall
loope
and
std
add
ret
out
sti
arpl
mov
shl
dec
cmp
mov
xchg
lods
loopne
inc
mov
outsb
mov
fcmove
push
jnp
fisubrs
scas
jp
js
pop
or
cmp
std
inc
inc
pop
mov
or
repz
pop
pop
xchg
xchg
lds
imul
jecxz
mulb
outsb
mov
mov
adc
lea
jmp
pop
jle
cld
test
movsl
add
xchg
clc
and
pop
loopne
clc
mov
pop
add
xchg
hlt
lcall
std
roll
ljmp
nop
sbb
jmp
inc
lock
xchg
loop
lock
fdivl
push
inc
call
push
ret
or
sbb
outsb
fimull
into
jg
sti
add
pop
js
dec
std
dec
inc
addr16
xor
push
xor
dec
call
sbb
mov
fwait
push
sbb
in
lds
mov
pusha
das
push
fldenv
push
bound
jmp
mov
test
xchg
in
test
xor
fld
dec
fdivs
sahf
jb
dec
inc
push
test
repnz
fdiv
lods
or
ret
pop
insl
je
rcll
repz
jnp
and
mov
js
sbb
xchg
push
pop
mov
and
test
jecxz
loop
ds
hlt
fcoms
sbbl
adc
orl
cmpsb
mov
test
and
lock
jns
imul
in
cmp
sbb
sbb
hlt
push
cltd
mov
mov
jne
or
jg
ret
jmp
movsl
or
fildl
out
popf
xlat
cmp
mov
mov
mov
nop
jnp
in
xor
jmp
pop
push
jo
cmp
and
xchg
add
orb
jb
testb
ret
cmp
aam
mov
test
adc
jmp
out
incw
adc
adc
xchg
leave
cli
mov
mov
push
jbe
ror
pop
sbb
dec
sbb
jmp
sub
andl
fucomip
xchg
call
jl
pop
dec
inc
xlat
jl
gs
cmpsl
adc
sbb
inc
call
push
dec
jge
xor
push
adc
movsl
sub
mov
mov
andb
xchg
lcall
enter
imul
push
xchg
imul
mov
xchg
test
repnz
ljmp
or
mov
push
int
mov
jo
imul
cmpsb
lcall
mov
jecxz
pop
push
ret
push
sbb
loope,pn
pop
add
repz
push
popa
adc
pushl
adc
add
shlb
or
jmp
xchg
std
je
adc
or
adc
sbb
pop
jbe
xchg
or
mov
mov
xchg
aaa
pop
decb
or
call
add
lcall
sbb
mov
into
mov
cmp
mov
or
lock
push
adc
les
scas
mov
aaa
adc
fcmove
adc
push
in
mov
rcrl
lret
sub
and
out
test
test
enter
cld
mov
fwait
loopne
into
imul
ljmp
cmc
int
in
mov
arpl
popa
nop
call
pop
sub
xorl
xchg
stc
xor
inc
sbb
loopne
mov
mov
cmp
gs
push
cmpsl
adc
push
push
imulb
mov
jbe
daa
dec
pop
cmp
ljmp
test
xor
cmpl
push
aad
enter
jmp
xchg
sbb
jnp
xor
sbb
cmpb
ret
pop
xor
sbb
mov
xor
pop
pop
btc
sbb
pop
mov
dec
push
pop
dec
aaa
es
shlb
adc
jo
dec
mov
les
data16
in
repz
roll
cli
jp
sti
sub
mov
aas
shlb
mov
repnz
scas
xchg
inc
loop
movsl
iret
dec
sub
stos
ret
arpl
clc
pop
mov
jmp
std
adc
xchg
cmp
xor
int
add
lds
jne
mov
jb
lret
inc
xor
out
or
nop
ds
mov
addr16
repz
dec
inc
lcall
lahf
and
sub
xchg
test
and
sti
or
sub
mov
out
cmp
sbb
sbb
add
add
dec
cs
leave
mov
scas
cmc
inc
dec
stos
pop
enter
mov
pop
fmull
fcoms
leave
jg
jno
js
cli
sbb
or
dec
mov
popa
cmp
push
ja
fcoml
les
ret
dec
mov
dec
inc
popa
inc
dec
cmp
scas
lods
or
loopne
lods
mov
xchg
loopne
mov
mov
dec
call
bound
adc
out
ljmp
jb
adc
xor
add
das
psllq
sub
xchg
mov
in
inc
adc
dec
dec
test
and
and
idivl
fcmovne
jno
adc
cld
js,pn
je
ja
mov
addr16
ss
add
lahf
push
xchg
cmp
in
ja
inc
pop
xchg
add
lods
fimull
out
ljmp
clc
dec
outsb
lds
insl
xchg
shl
lcall
and
dec
inc
movsb
dec
ds
leave
mov
and
xlat
mov
xchg
loope
add
jmp
jbe
pop
jl
lea
jne
movsb
out
js
and
mov
rorb
mov
or
ds
sbb
fiadds
sbb
mov
rorb
pop
push
loop,pn
mov
imul
out
push
cmpsl
mov
out
xor
sbb
fsubrl
adc
sub
and
pop
jno
rol
cld
sub
shrb
jecxz
pop
sbb
fnstsw
out
push
into
adc
dec
fwait
jg
push
push
or
repz
xchg
pop
mov
andl
fistps
sti
das
and
mov
popa
stc
xor
jmp
pop
popa
mov
mov
mov
inc
or
lock
mov
cmpsb
testb
push
pop
cmp
adc
mov
ret
pop
inc
repz
dec
popa
xor
out
push
in
add
aas
xlat
jne
decb
dec
insb
repz
icebp
sbb
jae
dec
test
and
xchg
lcall
loope
mov
adc
scas
push
out
ret
ret
lea
push
cmpsb
pop
pop
xchg
adc
fsubl
imul
xlat
push
int3
mov
popa
cli
ljmp
ds
xorl
pop
jecxz
in
and
or
clc
inc
scas
sub
aam
inc
mov
fdiv
push
lds
and
loop
hlt
pop
dec
mov
pop
aaa
roll
data16
sub
add
in
fst
or
mov
mov
xor
or
shlb
das
roll
into
and
xlat
push
inc
filds
push
add
inc
jno
test
cmp
and
ds
call
insb
pop
nop
into
mov
adc
dec
adc
test
cwtl
repz
or
jl
mov
xchg
and
jg
dec
pop
or
add
pop
mov
and
mov
mov
popa
push
arpl
dec
fdiv
aaa
xchg
and
sub
clc
rcll
subb
dec
dec
fimull
cmp
mov
sahf
test
cmpsl
add
lods
cs
insb
aad
mov
dec
sub
mov
push
orb
jmp
pop
enter
mov
and
xor
jl
pop
jl
hlt
dec
xchg
enter
cmp
lcall
aaa
outsl
mov
fmull
mov
iret
mov
in
xchg
lods
shlb
call
sbb
ljmp
sub
adc
scas
jl
insl
push
or
ret
movsl
xchg
inc
dec
movsb
jmp
cmp
lods
ss
jb
push
fisttpl
pop
xchg
inc
add
fdiv
insl
xchg
mov
or
je
and
or
cmc
scas
pop
das
adc
or
ret
lret
mov
mov
test
dec
xlat
adc
icebp
arpl
ds
aad
sarl
loop
adc
cmp
pop
es
xchg
out
in
jmp
movb
iret
push
add
into
test
pop
imul
sarl
daa
mov
xchg
or
push
movsb
sbb
out
ss
inc
cmp
lock
lea
js
push
sahf
mov
test
sbb
cmpsl
sbb
mov
std
std
sahf
in
push
sbb
sbb
pop
shrb
and
and
sub
sbb
lcall
cmp
push
and
jns
aas
out
dec
mov
neg
dec
inc
ljmp
cld
fsubs
sub
and
push
add
test
outsl
shlb
jbe
push
shrb
xor
push
sahf
sub
adc
jbe
ja
jb
mov
fucomip
dec
cmp
les
sbb
adcl
loopne
test
fsubs
addr16
lds
stos
cld
jae
repz
mov
inc
dec
xchg
or
mov
fadds
pop
sbb
dec
push
and
add
repz
inc
test
stos
dec
cvtpi2ps
pop
data16
add
leave
mov
inc
mov
lods
sub
nop
div
std
movsb
jp
lock
stos
push
hlt
pop
mov
fnstcw
xor
jae
push
pop
jne
pop
leave
push
sbb
dec
mov
jno
xchg
test
pop
stc
sub
enter
dec
sbb
fsts
jmp
add
andb
repz
mov
mov
sahf
push
lea
push
jns
mov
outsb
inc
xor
loope
cmpsb
gs
mov
mov
adc
jmp
frstor
jne
sub
sub
testl
inc
mov
xor
dec
add
outsb
scas
xchg
imul
loope
and
outsl
inc
outsb
fcompl
test
psubusw
idivl
xor
pop
pop
test
test
data16
idivl
mov
xor
cmp
jbe
rcr
inc
xchg
pop
ss
cmp
inc
inc
push
jge
fistpl
movsb
xchg
scas
inc
jmp
out
xchg
stc
icebp
lds
pop
fnstsw
adc
add
xchg
enter
adcl
cmp
repnz
sub
add
mov
sub
inc
rcr
jns
fcmovnbe
add
setae
cmpsb
inc
pop
shlb
scas
ret
sbbb
hlt
push
int3
mov
mov
jns
adc
pop
jo
into
test
fdivl
mov
or
sub
pop
pop
sahf
mov
adc
fidivl
dec
and
xchg
inc
outsl
xchg
mov
push
push
dec
xlat
je
mov
xchg
dec
mov
es
icebp
sub
ss
push
repnz
xchg
and
mov
rcrl
pop
xor
sbb
inc
or
out
movsb
lcall
rorl
in
mov
fstps
push
scas
jo
ja
xchg
push
andl
jle
int3
repz
out
sbb
push
daa
stos
adc
jb
sub
outsl
add
sbb
add
test
sar
add
test
pcmpgtd
cmp
push
mov
imul
pushl
pop
lahf
ret
mov
rcll
jb
sub
jg
jae
pop
insb
mov
sti
sub
or
sti
mov
lret
test
fldenv
jp
and
in
push
test
mov
sub
call
imul
xor
mov
pushf
mov
inc
shl
cmpl
aaa
lcall
fisttpl
data16
jmp
fs
jno
call
or
push
ret
sub
cmp
dec
in
add
push
std
cmp
mov
enter
add
jmp
in
insl
ret
testl
enter
push
sub
mov
sub
cmpl
xchg
jg
int
test
lcall
outsb
ljmp
lods
fdivp
je
and
cmp
push
popf
aad
jo
jne
mov
push
xchg
les
xchg
leave
cmp
sbb
jae
dec
mov
sbb
jns
cltd
or
repz
dec
cs
fld
nop
jecxz
mov
pushf
jo
push
repnz
imul
sub
pop
xchg
and
or
xor
jbe
loopne
push
loopne
ret
push
pop
andb
cs
mov
rcll
inc
repz
insl
mov
pop
pop
std
leave
clc
loope
mov
shrb
xchg
inc
dec
dec
push
shlb
fwait
mov
dec
and
mov
loop
mov
xchg
ljmp
adc
or
repz
jo
adc
and
sub
mov
mov
stos
mov
cli
popa
mov
fucom
lock
xchg
fs
mov
les
sbb
sbb
adc
adc
scas
xor
lret
mov
cwtl
and
pop
aam
adc
lahf
pop
push
sbb
popa
jmp
jl
sub
xchg
jecxz
adc
ds
and
outsl
adc
or
push
mov
fldt
cld
jne
repz
cmp
lods
leave
sbb
insb
cltd
push
push
jl
icebp
push
mov
outsb
sub
mov
push
xor
frstor
int3
sub
jae
fbstp
popf
push
out
test
dec
sub
push
insb
sub
cmpsb
or
and
ds
es
lahf
je
cmpsl
fdivp
jne
scas
loopne
f2xm1
out
jbe
subb
pop
int3
jno
jnp
sub
or
int3
shrl
je
pop
cmpsl
mov
sbb
out
and
addr16
adc
pushf
cwtl
mov
inc
adc
adc
ja
lahf
pop
icebp
mov
and
jmp
add
pusha
xchg
fldcw
and
cld
shrl
gs
jae
mov
pushf
mov
xchg
cmc
fildll
lret
xchg
xor
fsubrs
or
and
push
sub
and
es
add
sarb
cmc
mov
or
pushf
hlt
jbe
push
dec
sub
loop
movl
leave
fnstenv
adc
add
outsl
mov
mov
sahf
push
pop
sahf
inc
push
in
push
inc
cmp
imul
pop
leave
sbb
data16
cmp
out
jo
out
in
pushf
lret
sbb
cmpb
cmp
cmpb
dec
mov
lods
mov
sti
mov
fsubs
iret
pop
pop
pushf
or
sub
adc
pop
pop
outsl
popf
push
push
popa
outsl
fs
clc
xor
mov
xchg
jg
lcall
mov
ja
fldt
shll
mov
dec
ror
sbb
adc
loopne
sbb
push
sub
loopne
cltd
fwait
inc
push
xchg
jb
mov
imul
lds
in
xchg
dec
ja
and
out
mov
pop
jg
lret
lret
bound
mov
sahf
cld
sbb
scas
daa
sbb
xlat
jns
cmpsb
lods
jnp
mov
enter
paddq
mov
cmp
pop
nop
nop
and
or
loope
hlt
jl
shll
scas
and
roll
sbb
pusha
and
sub
je
xchg
add
out
sbb
xor
insb
in
idivl
push
push
loop
mov
mov
or
dec
std
loop
sahf
mov
add
push
adc
xchg
pop
mov
cmp
jg
sbb
popa
sub
addl
stc
scas
jg
cmp
fiadds
lods
lods
sti
test
inc
out
cmpsb
rorl
scas
ljmp
inc
adcl
and
sbb
sub
pop
fwait
mov
in
lea
cmp
rorl
scas
movntq
out
mov
push
add
divl
pop
dec
mov
push
lret
push
fsubs
bound
mov
cmpsb
sbb
add
cmpsb
leave
decl
sub
sbb
xchg
hlt
out
xor
ret
movsl
fs
mov
sbb
mov
jmp
sbb
cwtl
clc
lds
cmp
daa
jl
fisubrs
lcall
nop
jne
scas
or
push
sbb
mov
dec
sbb
inc
lods
rol
sub
add
inc
mov
mov
dec
jp
mov
cmp
lods
inc
icebp
mov
mov
lahf
adc
jp
push
sahf
push
cmp
out
jecxz
mov
inc
push
or
inc
and
adc
push
mov
roll
xchg
pop
sahf
adc
sub
and
or
cmp
sub
add
cmp
cmp
addr16
out
bound
sar
outsl
pop
fwait
outsl
cmp
addr16
dec
pop
push
cmpsb
arpl
dec
sysexit
imul
dec
xchg
ret
xlat
in
sub
jge
inc
inc
add
and
leave
or
in
add
data16
in
aad
popa
jmp
aad
xchg
aam
sbb
cwtl
cmp
mov
hlt
data16
popf
lret
pop
or
lods
xchg
push
inc
loopne
out
hlt
jb
inc
loope
push
mov
fidivl
push
pop
fistl
ret
into
int
push
loopne
pusha
lret
sub
int3
ret
nop
call
push
fwait
or
or
xlat
fwait
mov
add
push
mov
cwtl
ret
jl
xchg
xchg
test
iret
mov
adc
cld
lret
push
jmp
sub
xorb
jb
dec
sub
stos
loop
vsubpd
fildll
mov
cmpsb
mov
xlat
push
icebp
movsb
push
mov
in
push
loopne
pop
jmpw
and
sbb
xchg
add
push
xchg
fwait
aam
sub
mov
mov
push
es
xchg
adc
popf
call
cwtl
xor
dec
push
jl
xor
fdivl
mov
xchg
int
jb
mov
sbb
fwait
mov
iret
xlat
sbb
outsb
inc
or
and
mov
ficoml
imulb
push
ljmp
fdivrp
ret
or
adc
pop
test
mov
iret
xchg
out
pop
imul
inc
outsl
push
dec
ss
pushf
pop
push
arpl
add
test
jb
mov
add
leave
cwtl
pop
push
jb
mov
aaa
mov
cmp
cmp
pop
enter
enter
shrl
push
jmp
js
movsl
cmpsb
stos
rorb
lods
xchg
cmp
and
push
lahf
add
mov
icebp
in
push
int
leave
icebp
test
mov
inc
push
rorb
cld
mov
sub
push
xor
loopne
xchg
cmc
adc
sub
mov
jg
jno
sahf
leave
das
test
push
mov
jno
sbb
mov
mov
or
rorb
add
inc
sbb
cmc
cmpsl
sub
dec
sbb
and
jmp
test
or
idivb
adc
or
ljmp
push
shl
mov
jns
cwtl
test
loopne
test
mov
inc
add
mov
ficoms
push
mov
adc
cmp
cld
and
shrl
inc
ljmp
enter
mov
scas
rorl
pop
addr16
xor
push
loopne
mov
lods
cmpsb
imul
xchg
pusha
fsubs
or
mov
xchg
mov
inc
cmp
xor
out
jmp
popf
test
icebp
or
sub
sahf
jge
bound
pop
pop
sahf
ss
and
cltd
mov
imul
shl
mov
sub
mov
mov
cmpb
sbb
bound
int
mov
pusha
fcomi
test
jge
adc
mov
and
pushf
cld
out
cmc
inc
and
cmpb
imul
jg
loopne
sub
jecxz
sti
sbb
scas
jnp
xchg
xchg
test
inc
ds
xor
ret
add
mov
dec
jne
cmp
or
jo
sub
iret
fucomp
mov
xchg
out
or
mov
jl
repnz
insb
and
fidivs
push
mov
popa
and
push
cmpsl
std
add
scas
mov
jge
mov
lret
scas
js
lds
lds
mov
jp
dec
test
push
cmp
or
je
push
jge
push
imul
ss
hlt
push
mov
push
pop
cmp
and
jle
int3
inc
push
stos
jg
cmp
jo
shl
inc
push
lret
mov
stos
aam
test
loop
insb
out
push
fwait
pop
sahf
inc
cmc
cld
sbb
clc
div
test
xchg
and
ror
jge
negl
push
lea
jbe
xor
mov
xorb
xchg
movsb
sbb
dec
imul
jo
call
xchg
inc
pop
insl
and
jecxz
jmp
shll
daa
mov
lock
mov
icebp
sub
jg
sbb
push
xlat
das
bnd
add
aaa
out
mov
sub
repnz
sbb
pop
sbb
pop
sarb
mov
jb
mov
fidivrl
sbb
inc
idivb
int
dec
js
and
cmp
pop
idivb
cmp
js
pop
cmp
xchg
shl
xchg
fs
std
movsl
test
out
xor
out
jns
cwtl
orl
popa
push
aaa
pop
adc
xchg
push
cmp
push
jmp
xchg
push
mov
inc
mov
imul
in
lret
aas
push
shrl
dec
mov
shlb
or
jl
mov
mov
fildll
mov
mov
jno
add
mov
int
pop
sarb
and
jmp
sahf
popf
jo
insl
jae
pop
push
aas
add
imul
push
push
cmp
ja
cwtl
popf
out
int
pop
mov
ja
fmuls
inc
sbb
inc
imul
data16
jnp
push
adc
aas
cmpsb
push
movsb
filds
add
testb
dec
fistpll
xor
lds
out
enter
and
lcall
mov
addr16
aad
and
aaa
mov
or
inc
and
jo
pop
stos
cmp
xchg
sub
xchg
adc
xor
pushf
jp
fnsave
pop
cld
lret
ret
and
stos
inc
aam
xchg
test
cs
inc
cld
add
lret
sti
cmp
out
dec
xor
cmpb
jb
test
add
paddw
loope
pop
pavgw
dec
mov
jo,pn
mov
mov
aaa
jo
pop
mov
cltd
add
pusha
cli
sti
cld
push
cmp
sub
push
xchg
incb
fldcw
gs
jne
adc
cld
cld
mov
push
sahf
jg
test
push
inc
jo
les
fmul
insl
hlt
out
loope
xorb
aam
outsb
mov
std
or
aad
xchg
aas
jmp
dec
push
sub
dec
insb
stc
scas
and
imul
mul
and
sub
test
incb
mov
je
cltd
jno
mov
push
mov
sti
pop
lds
push
sbb
jne
scas
dec
cmc
imul
mov
mov
inc
fsubrs
jmp
aaa
sub
ljmp
pop
dec
and
and
push
or
push
xor
or
mov
lock
cmpsl
or
es
sarb
fs
insb
loopne
aam
scas
cs
dec
outsb
mov
rcrb
mov
mov
mov
mov
mov
jp
inc
push
pop
outsb
xchg
xor
inc
insb
add
sahf
jg
mov
sub
inc
iret
in
xchg
mov
in
fsubrs
mov
lds
sub
fsubr
mov
shrb
or
push
dec
push
mov
cltd
xchg
push
jae
cmc
push
add
ficoml
cld
clc
cmp
pop
lock
xchg
pop
out
mov
lret
mov
test
decb
rorb
rolb
outsl
es
arpl
call
lret
inc
add
cmpsb
sbb
mov
mov
inc
dec
mov
nop
mov
lcall
mov
xchg
dec
in
adc
sarl
gs
push
cmp
xlat
mov
adc
sbb
cmp
pusha
push
sbb
loop
xor
ss
lahf
mov
pushf
pop
adc
and
adc
lods
lea
push
inc
mov
cmpxchg
test
iret
inc
push
or
lcall
and
out
xchg
sbbl
pop
and
pop
int
cmpsl
mov
sub
jle
in
cwtl
sbb
pusha
jns
cmc
rcrb
cmp
imulb
orl
cmp
cmp
sti
out
mov
dec
cli
ja
mov
lahf
fbstp
mov
mov
icebp
push
xlat
bound
dec
aad
fdivrl
pop
inc
sbb
fistl
pop
aaa
mov
push
sub
inc
scas
sbb
loop
loope
adc
push
lcall
ja
lret
fadd
clc
leave
lea
dec
inc
rcrb
stos
std
push
add
adc
or
pop
in
pop
aam
mov
jo
mov
out
cmp
in
jp
jmp
in
mov
stos
out
mov
sub
sub
xchg
and
jge
bound
cmp
jecxz
lret
push
leave
sub
lock
mov
inc
loope
add
data16
mov
test
sub
jnp
push
into
push
test
xor
dec
js
xchg
cmp
pop
adc
icebp
pushf
mov
push
cld
daa
mov
ljmp
jns
xor
inc
out
sbb
in
sub
cmp
pop
call
jmp
and
mov
jns
and
lea
mov
into
cmp
jo
dec
mov
and
sti
jecxz
mov
push
push
jle
into
mov
inc
int
orb
addr16
mov
jne
movsb
jnp
inc
test
push
xor
jo
fists
movsb
rcrl
dec
and
pop
inc
pop
lods
jbe
mov
loop
nop
es
sub
jecxz
xchg
clc
dec
or
cmp
pop
mov
cli
push
sbb
mov
ficompl
mov
push
out
jno
ljmp
sbbl
es
add
sub
nop
push
out
fwait
loope
xor
shrb
jmp
add
push
ret
ss
call
lret
aas
in
cmp
push
rol
and
mov
jo
ffree
movb
xor
sub
pushf
test
inc
sub
jbe
jbe
add
bnd
mov
jae
in
das
push
js
pop
mov
cmp
les
leave
mov
fistpll
in
enter
cmc
pop
leave
pop
into
nop
jo
out
xchg
cwtl
mov
xchg
insb
mov
pop
xlat
scas
imul
and
scas
inc
dec
cmp
mov
push
mov
std
outsl
gs
push
and
jmp
stc
aaa
lds
rcll
adc
adc
mov
sbb
push
lods
test
loop
stc
scas
adc
scas
insb
sub
or
cmp
call
and
pusha
rolb
inc
dec
inc
xor
clc
inc
inc
and
sub
xor
std
insl
inc
push
inc
stos
in
orl
cld
out
psubsb
pop
mov
jle
movsb
fdivp
jbe
out
inc
movsbl
mov
cmc
cmp
push
and
and
leave
pop
sbb
jp
rorb
fstp
stc
pusha
pusha
cmpl
rcll
int3
ret
xchg
push
pop
or
xor
sbb
or
mov
push
mov
loopne
js
push
clc
mov
mov
repnz
xchg
and
mov
setne
hlt
inc
lret
jae
lock
sti
out
cmp
inc
cmc
lods
popa
or
mov
dec
sbb
gs
fwait
inc
inc
sub
mov
in
daa
test
mov
lret
mov
call
adc
push
mov
idiv
fwait
loope
mov
sahf
xchg
adc
or
repz
bound
push
mov
push
sbb
outsl
cs
in
and
sti
or
insb
fdivl
xor
hlt
cwtl
or
out
test
jp
adc
fsubr
push
add
add
xchg
clc
mov
mov
inc
push
repz
sbb
in
test
rcll
int3
xchg
ljmp
jp
test
jne
jle
add
mov
push
aas
imul
inc
xchg
mov
or
arpl
inc
les
jmp
inc
mov
shr
push
arpl
xchg
inc
rcrb
or
cld
pop
mov
orb
mov
mov
xor
ficompl
push
dec
xlat
push
jg
push
iret
lret
push
lock
and
inc
jnp
imul
jb
orl
cmpsb
ja
inc
xchg
jbe
jns
mov
aas
int
dec
push
outsl
inc
rcr
and
pusha
daa
int3
cld
mov
push
pop
leave
lret
adc
add
rolb
fs
xchg
aaa
push
fidivrl
and
loopne
frstor
dec
push
mov
mov
es
popf
dec
rorb
xchg
out
sub
daa
fcmovnb
movsl
mov
stos
mov
push
mov
add
pop
mov
out
xor
mov
fnstcw
adc
nop
movsb
loopne
mov
ret
inc
in
pop
fsubs
adc
loop
std
test
mov
std
aaa
bswap
xchg
lea
fcoml
fsubl
js
push
adc
and
out
pop
popa
push
or
mov
add
popf
cmp
out
insb
push
push
push
pop
fcomps
inc
out
jne
call
dec
push
std
aad
rorb
xchg
inc
sbb
push
ja
adc
in
ficomps
inc
mov
in
jl
in
xchg
mov
pop
mov
test
pop
xchg
adc
pop
cld
mov
sbb
and
test
jns
add
fisttpll
cmpsl
adc
rorl
adc
lahf
ss
dec
xor
in
aam
out
test
dec
or
clc
nop
pop
fucomi
stc
jne
mov
dec
in
cs
inc
dec
sbb
sbb
insb
push
sub
push
dec
adc
jo
pusha
rcl
pop
cmpsl
in
xchg
push
lods
lret
jg
pop
pop
sub
pop
mov
cmp
mov
pop
mov
lods
adc
stc
jae
or
out
cmpsb
mov
jle
int3
out
add
faddl
fstl
pop
add
or
inc
test
jle
sub
or
orb
fsubr
sub
push
lahf
pop
sbb
cltd
sbb
std
icebp
lcall
sahf
add
or
movsb
cwtl
xchg
pop
pop
ret
daa
enter
outsb
scas
adc
sbb
sbb
push
xorl
sub
std
cmp
xor
movsb
mov
xor
aaa
hlt
jnp
loopne
loop
cmc
faddl
cmp
add
pop
outsb
loopne
inc
inc
mov
push
loopne
fwait
mov
sarl
popa
sahf
cli
je
les
cs
mov
inc
and
mov
xchg
jp
pop
cmpsb
ret
xchg
movsl
jnp
sub
push
pop
mov
in
jle
cmp
xor
sbb
sub
mov
insb
mov
ja
sub
lcall
fsubs
mov
mov
push
jne
and
in
cli
or
outsl
mov
sbb
test
sub
pushf
adc
jno
test
add
ficompl
mov
cmp
and
mov
sbb
std
xor
aaa
movsb
jmp
ds
jecxz
or
mov
popa
xor
mov
jns
mov
ficompl
rcr
rclb
cmp
rorb
jl
xchg
out
push
in
test
jb
pushl
push
test
jge
cld
arpl
mov
add
adc
dec
jmp
notb
sbbl
pop
or
enter
mov
in
lds
ja
push
pop
or
insb
in
movsb
jb
jle
push
jns,pn
push
or
dec
sbb
stc
push
popf
jo
aad
ja
dec
jmp
std
dec
and
pop
push
jno
mov
scas
sti
clc
inc
xchg
sub
leave
push
xor
dec
pusha
fmul
sbb
mov
shlb
sbb
fwait
inc
mov
fildl
iret
clc
xchg
pop
xor
pusha
lea
outsb
popf
addr16
xor
add
mov
xor
pop
fldl
faddl
mov
scas
inc
roll
rol
loope
mov
roll
push
add
into
and
mov
xor
shlb
aaa
bound
inc
mov
jmp
push
xor
mov
and
sub
jo
pusha
mov
inc
daa
jg
mov
ficomps
jge
data16
rorl
mov
mov
pop
sbb
outsl
bound
in
fs
dec
xor
push
hlt
mov
mov
dec
xor
add
pop
and
movsb
orb
imul
lea
jp
and
movsl
ss
pop
push
popf
js
xchg
in
scas
das
ficomps
dec
xchg
push
push
and
int
es
fwait
lods
jge
pop
or
cmpsb
lcall
loopne
repz
jno
sahf
push
pop
int3
movsb
sub
out
lret
and
insl
xchg
outsb
mov
decb
push
imull
mov
mov
cmp
lods
dec
movsb
lahf
jmp
imul
mov
lahf
sar
cmp
aam
aam
jecxz
out
mov
mov
and
or
std
jns
std
and
aaa
fdivl
rorl
je
sti
in
mov
pop
lods
push
jno
mov
lcall
cld
pop
jno
cmp
or
or
jne
cmp
rcll
leave
mov
outsl
adc
inc
inc
mov
mov
mov
lods
sub
add
add
idivb
cmpl
pop
sbb
inc
cmpsl
push
hlt
sbb
push
das
out
dec
push
mov
pushf
fmulp
rclb
insl
jl
push
or
push
mov
notb
insb
add
ja
pop
mov
lock
insb
test
sahf
outsb
shlb
fcomps
jbe
mov
xchg
imul
push
sub
ret
mov
xlat
mov
sarl
sti
es
or
jo
pop
push
bound
push
mov
aas
mov
mov
dec
cmp
dec
jae
inc
gs
push
mov
push
pop
into
sub
xchg
mov
ret
rorl
pop
jb
lock
add
cli
iret
sbb
mov
ljmp
push
push
inc
xor
mov
jge
testl
xchg
or
pop
out
dec
test
mov
insl
xor
and
sub
cmp
aas
sub
ja
adc
sahf
std
pop
fdivrl
imul
dec
push
adc
dec
mov
mov
jecxz
leave
push
lahf
lcall
cli
cltd
jne
das
push
sub
shrb
out
jp
push
aam
testl
das
dec
jno
aad
mov
jmp
ja
jo
mov
shufps
mov
sbb
mov
and
push
fldl
paddw
movsb
add
push
aam
cmpsl
fisubrl
lods
ds
aam
shrl
movsb
and
mov
inc
outsl
adc
mov
mov
dec
inc
mov
mov
cmp
movsb
inc
push
das
pop
mov
pop
cmp
xchg
adc
or
add
pop
loop
add
or
insb
popf
mov
sub
jle
mov
pop
int
cli
pop
inc
jbe
cmp
pop
into
adc
xchg
or
dec
or
outsb
xchg
pop
adc
mov
es
fistpll
les
sbb
imull
leave
iret
adc
jg
fcmove
dec
out
neg
push
inc
mov
mov
push
push
add
push
ret
into
sbb
addr16
repz
fcmovne
mov
mov
add
adc
lds
xchg
test
scas
adc
jmp
or
push
xor
sbb
pop
push
jge
lea
sub
add
or
mov
arpl
ret
sub
add
pop
pop
cmp
mov
jne
add
push
add
cli
and
cmp
lret
mov
adc
imul
inc
bound
fidivs
inc
jecxz
push
jne
push
roll
cli
lret
mov
cmp
push
out
movsl
into
pop
dec
in
push
lcall
sub
dec
pop
inc
lcall
js
sbb
outsl
sbb
sub
sbb
aad
pop
inc
pop
adc
jmp
inc
mov
outsl
or
mov
push
icebp
add
andl
fadds
sbb
adc
movsb
mov
and
adcb
jp
std
inc
xor
jecxz
xchg
out
loop
mov
jle
mov
test
lods
xchg
add
outsl
add
mov
push
add
xor
push
sbb
mov
cli
repz
stc
xor
and
mov
adc
xchg
xchg
lret
adc
push
and
jns
and
mov
adc
lahf
jle
push
lods
sbb
sbb
xor
jle
adc
lahf
mov
xlat
scas
sbb
stos
ret
into
insb
out
mov
adc
push
inc
lahf
pop
ja
cltd
cli
fisttps
xor
addr16
or
pop
pop
aas
pop
fmul
fs
js
mov
jecxz
ljmp
cli
mov
push
mov
pop
ja
shr
jne
mov
aam
dec
lock
adc
je
test
hlt
xchg
aad
repnz
je
sub
imul
add
pop
daa
imul
jecxz
inc
xchg
addb
lods
cmp
nop
dec
push
rolb
loopne
ss
test
mov
xchg
push
dec
lock
add
mov
imul
scas
mov
fwait
mov
or
inc
icebp
lcall
xchg
aad
adc
pop
pop
xchg
les
adc
adc
arpl
mov
movsb
jle
lock
movsl
adc
mov
inc
sarb
rcl
jg
out
das
mov
test
lods
out
pop
mov
cmp
push
stc
and
ret
jl
not
mov
cmp
or
out
insb
insl
jae
mov
loope
xchg
jg
lahf
aas
sbb
xor
lahf
movb
cmpsl
adc
in
or
dec
mov
mov
and
jae
sbb
les
push
sbbl
es
push
dec
stos
pop
shll
jl
dec
jnp
inc
ja
ja
imul
mov
orb
sbb
rorb
test
jne
ret
mov
mov
adc
scas
or
and
fisubs
gs
sub
jae
dec
stos
push
fdivrl
inc
xlat
or
sbb
and
int3
out
mov
dec
add
lods
orl
arpl
pop
dec
push
loop
idivb
js
push
add
mov
mov
popa
pop
adc
outsb
xchg
fdivl
mov
cld
loop
add
push
mov
mov
dec
lods
or
mov
ret
lea
movsb
sbb
inc
rcr
fsubl
adc
jle
pop
push
fwait
and
movsl
neg
repnz
movsb
mov
cld
jge
cli
inc
push
lods
cs
sub
test
lea
jno
lret
into
test
jnp
addl
pavgw
mov
mov
cmc
mov
mov
lahf
nop
mov
ds
aaa
mov
fcoml
dec
xor
xor
sub
mov
sbb
jle
mov
xchg
stos
test
popf
mov
fists
inc
into
cmp
mov
hlt
dec
adc
je
fwait
sub
into
ljmp
inc
jmp
fstpl
icebp
mov
shll
idivb
or
test
out
cmp
sub
nop
cmpl
repz
popa
adcb
in
jbe
mov
ficompl
out
pop
adc
jne
cld
mov
clc
das
shl
xor
cmp
push
in
leave
in
and
mov
pushf
add
dec
mov
jg
sbb
dec
ds
xor
push
insl
mov
xchg
adc
inc
mov
ss
mov
rcll
adc
insl
pop
cmp
jae
mov
leave
add
testb
mov
sub
jg
repnz
popa
stos
or
cld
addl
push
push
xor
dec
xor
dec
mov
loope
lea
xor
aam
mov
loope
sub
in
sbbl
adc
push
pop
push
sti
out
mov
and
add
add
xchg
jl
cmpb
es
cltd
mov
test
aaa
dec
pop
in
out
cli
in
xchg
and
in
push
ss
mov
pushf
nop
std
icebp
push
cmpsl
loopne
mov
das
adc
test
imul
in
push
cs
jge
fiaddl
pop
add
pop
lret
mov
sub
jmp
sahf
sub
cmp
lea
jp
test
fdivrl
repz
sbb
jmp
in
add
fdivrl
addl
jp
fistl
addr16
and
jbe
popa
imul
int
jecxz
out
inc
rcll
movups
gs
mov
jle
jg
cmc
pop
js
out
punpckhdq
cmp
mov
arpl
loopne
cld
mov
dec
aaa
imull
jecxz
adc
ficompl
mov
mov
stc
cli
lahf
call
add
in
imul
adc
lods
jge
testb
mov
adc
out
and
insl
dec
enter
popa
adc
or
loope
jg
pop
out
push
out
sbb
mov
roll
pop
mov
inc
sbb
stc
dec
dec
loop
lret
adc
test
jg,pn
add
jecxz
cmp
js
xchg
cmp
testb
mov
ja
fldl
push
xor
xchg
ljmp
push
adc
call
dec
jge
cmpsl
mov
les
add
push
addr16
cwtl
aas
dec
outsl
in
mov
pop
inc
and
fisubrl
xchg
push
cmpsb
iret
xor
out
mov
js
push
jle
mov
xor
adc
es
or
fnsave
clc
insb
outsl
push
cmp
fdivl
popa
mov
movsl
xor
sub
lret
sub
negl
jnp
push
jle
ror
lret
loopne
orb
sbb
in
lods
nop
sbb
inc
push
cltd
or
pop
out
or
aam
mov
and
rclb
cmc
pop
je
test
jbe
pushf
stc
push
dec
sbb
sbb
fsubs
mov
xchg
ret
shll
aas
aaa
and
out
jne
xchg
fistps
xor
cs
mov
mov
sub
into
ret
mov
test
je
test
mov
inc
nop
popa
cli
or
lcall
push
xor
into
lcall
frstor
icebp
cmpl
loope
mov
inc
out
xchg
xor
cmpsl
sub
jl
loopne
stc
push
rcrl
add
sbb
inc
sahf
mov
add
dec
lret
lahf
cld
dec
mov
add
pop
mov
xlat
xor
popf
sbb
aaa
jb
lods
adc
pop
ret
je
xchg
pop
push
movsl
dec
inc
and
idivl
add
adc
lret
mov
out
testb
movsl
mov
cmpsb
in
shr
loopne
cli
mov
sub
jle
fwait
out
pusha
cmp
lcall
dec
fnstenv
sbb
inc
mov
lcall
cld
push
or
int
test
jb
shrb
bswap
ds
int
in
dec
mov
or
pop
cmp
sbb
stos
mov
loop
push
mov
dec
test
xchg
pusha
leave
xchg
inc
in
mov
sbb
pop
and
pusha
xchg
movsl
pop
aam
sub
ret
lods
insl
adc
push
mov
loope
jo
nop
adc
jo
int3
adc
loope
ret
lret
aas
mov
mov
sbb
popf
pop
inc
push
fimuls
push
outsb
push
sbb
dec
push
out
xchg
inc
xchg
leave
mov
xor
mov
cmp
hlt
shll
cmp
outsb
repnz
imulb
adc
xor
push
stos
fstps
cmpsl
sbb
mov
setno
ss
pop
jl
cmp
push
adc
fwait
pop
push
adc
in
cmpl
push
push
cltd
inc
fistps
imul
repnz
cmc
lods
dec
aad
mov
rcll
pop
int3
or
pushl
pop
lock
loope
pop
scas
mov
xchg
dec
sahf
test
and
stos
adc
ss
pop
add
mov
je
pop
mov
jl
sahf
dec
stc
jb
ds
xor
scas
mov
and
jle
and
stc
and
mov
mov
cmp
xor
xor
scas
mov
jbe
jp
int
add
jmp
pushf
stos
xchg
push
adc
mov
mov
push
xorl
stos
mov
ret
dec
std
pop
clc
test
push
aaa
adc
pop
jle
add
out
loop
adc
push
add
sub
add
adc
adc
and
ljmp
sub
mov
pop
cmp
ss
ds
popf
repz
sub
outsl
negl
data16
repnz
add
icebp
jnp
mov
out
call
imul
and
xchg
xor
cli
es
sbbb
incl
xchg
ljmp
xor
bound
ret
xchg
inc
or
lock
jp
or
loopne
mov
push
ret
sbb
cmp
mov
xchg
stos
in
sbb
mov
out
pop
push
inc
lds
out
mov
sub
shll
scas
or
icebp
jb
arpl
push
ret
pop
jo
loope
cmpsb
add
sub
fisttpll
test
inc
dec
into
aaa
in
fsubr
pop
mov
xchg
call
inc
aad
fistpll
xchg
mov
cmp
int3
xchg
cmpsb
test
addr16
mov
popf
shll
push
stc
aam
push
pop
adc
bound
and
sahf
xchg
fistl
lods
push
out
jmp
mov
je
test
or
subl
icebp
cwtl
sti
adc
dec
test
dec
cli
fidivrs
mov
push
cmp
sbb
int
mov
push
pop
jg
jecxz
aaa
scas
cmp
adc
add
sti
jl
sub
aam
mov
hlt
push
call
ficomps
sub
add
jecxz
cmpsb
imul
filds
ds
mov
in
pop
mov
popf
clc
stos
push
inc
mov
mov
mov
outsl
fnstcw
fsubl
pop
jo
loopne
inc
idivl
lea
xor
in
js
dec
fucomp
ss
std
inc
pop
je
out
shlb
js
shlb
bound
xor
jbe
lret
lret
push
icebp
mov
stos
es
and
jg
xor
lea
dec
adc
bound
xchg
shl
clc
adc
lea
adc
cli
std
mov
sub
sbb
gs
sub
mov
xchg
lock
cltd
imul
jg
ljmp
fnstsw
dec
xlat
xchg
ja
data16
addr16
xchg
icebp
lcall
adcb
xlat
js
mov
or
jle
xchg
shll
iret
pop
lods
adc
pop
xchg
imul
aas
loopne
pop
mov
js
sbb
jge
jmp
aam
inc
pop
and
aaa
leave
jp
jno
lock
cld
scas
into
xor
mov
push
add
test
leave
mov
mov
dec
inc
pushf
and
push
push
pop
popf
lret
xchg
enter
imul
addr16
pop
out
inc
dec
jns
jnp
mov
out
xor
dec
fbstp
outsl
push
shrb
lret
ret
ljmp
cld
test
shrb
inc
inc
mov
movl
pop
mov
adc
cmp
nop
jne
add
in
jge
aas
in
aad
addb
sbb
dec
mov
outsl
int3
rclb
test
pop
push
xor
cmpsl
xchg
js
cmp
sti
and
ja
and
cmpsb
mov
int
rclb
imul
loopne
and
sbb
in
rorl
stos
add
or
jmp
xchg
push
cmpsl
xchg
iret
dec
enter
sub
cmpsb
sbb
mov
cmp
out
es
push
ja
push
mov
scas
test
and
sbb
sub
mov
add
mov
in
es
mov
cmp
jl
lods
dec
xchg
shlb
adc
scas
and
repz
inc
pop
pop
mov
mov
cmp
jae
mov
lds
insb
testb
jg
ss
test
xchg
pop
mov
call
cmpsl
xor
mov
push
jg
stos
sub
add
mov
dec
pop
gs
mov
jle
mov
xor
lock
push
cmp
scas
ficoms
push
mov
shlb
xchg
push
out
sub
pop
jecxz
jl
lds
mov
jecxz
in
out
jl
adc
xchg
push
cs
mov
cmpsb
in
jp
push
rorl
mov
lods
sub
lea
cmp
sbb
mov
mov
jnp
std
jl
push
adc
fldcw
insb
sub
test
jg
push
icebp
arpl
sbb
insb
xchg
mov
dec
inc
addb
pop
arpl
in
mov
stc
xchg
xchg
inc
ficoms
fsubrl
and
insb
pop
dec
rolb
add
mov
aad
rorb
inc
cli
mov
repnz
and
add
arpl
addr16
scas
dec
nop
test
push
das
jnp
test
lahf
lahf
cmp
movsb
push
and
mov
sub
mov
add
pop
std
loope
and
mov
das
ljmp
aam
push
imul
les
add
test
pop
mov
aad
repnz
xchg
pop
and
add
push
mov
dec
xchg
mov
fwait
xor
pop
int
or
sub
lock
pop
cmpsl
sbb
add
div
nop
adc
inc
cmp
xor
sti
icebp
nop
and
repnz
ljmp
pop
in
mov
aaa
xchg
ja
mov
add
fnstcw
jo
std
cmp
loope
loope
fnstenv
ret
inc
xchg
push
daa
fwait
adc
cmp
sbb
shr
sbb
dec
cmp
test
daa
xchg
cs
fsts
pop
fldcw
lcall
xor
mov
inc
ss
pop
loop
jo
xor
jg
inc
icebp
loope
sub
in
xchg
fwait
pop
jo
outsl
push
in
xchg
mov
mov
stc
jg
fsubs
ret
inc
jae
dec
cltd
div
outsb
adcl
or
div
aam
movsb
jbe
xchg
mov
xor
cmpsl
jb
imul
push
ret
out
cmp
ja
imul
aam
xlat
into
and
cwtl
xchg
mov
xor
sti
call
xor
sub
stos
enter
push
mov
daa
test
adc
test
rorb
mov
pop
call
roll
pmulhuw
pop
int3
outsb
sarb
notl
add
add
jge
and
rolb
mov
sbb
ror
subl
icebp
aad
xlat
mov
jecxz
mov
mov
gs
insl
lds
pusha
inc
leave
sbb
cmp
xor
fbld
mov
xor
mov
push
push
out
insl
ret
imul
into
into
idivl
shl
leave
lahf
sbb
push
lods
cmpsl
sbb
movsl
xchg
movb
inc
jae
mov
mov
or
lods
lret
dec
pushf
jmp
dec
dec
jno
xchg
cmp
push
imul
enter
jp
sbb
es
mov
push
jecxz
sub
sti
cmp
das
pop
in
rcll
push
lods
mov
test
mov
mov
mov
daa
ret
sbb
jl
mov
dec
dec
inc
lods
pop
add
repnz
stc
sbb
jb
xrelease
test
sbb
shl
push
xchg
xor
mov
mov
pusha
repnz
jnp
jmp
subb
add
hlt
fnstsw
pop
mov
inc
mov
daa
out
inc
jmp
ret
es
out
jnp
ret
xlat
aam
fdivrl
add
lock
lods
pop
pop
xchg
imul
jne
inc
and
sbb
cmpsb
jecxz
sbb
pop
in
jne
add
xchg
push
jge
and
mov
mov
or
cld
xchg
sbb
ljmp
jae
sub
inc
mov
dec
in
mov
inc
mov
pandn
mov
fsubrs
push
mov
int
rcll
sub
aas
fcomps
rcrl
aad
xchg
scas
rorb
nop
bsr
adcb
adc
or
fildll
mov
xchg
lds
push
cmpsl
outsl
adc
xchg
inc
loop
mov
xor
subb
xor
add
pop
push
xchg
cli
xor
mov
dec
sahf
rcrb
xor
dec
push
inc
leave
mov
cmp
bound
inc
fcmovnu
sub
cmp
add
xchg
mov
mov
push
sbb
test
or
iret
xchg
cli
dec
xchg
dec
sub
lcall
pop
inc
push
test
mov
sbb
jbe
inc
lock
push
xorb
out
int
lods
and
je
inc
fsubrs
dec
mov
data16
jmp
sbb
push
fprem1
mov
mov
mov
fimuls
add
mov
dec
cmp
arpl
add
enter
mov
pop
inc
pop
ds
lret
ss
lahf
dec
jecxz
mov
in
in
fwait
xchg
xchg
into
cld
cmpsl
adc
cmc
mov
sbb
jmp
popa
scas
shrb
xor
repnz
test
inc
mov
mov
das
push
push
dec
data16
cmpb
jl
loopne
fdivrs
std
xor
push
imul
in
lock
dec
lods
cmp
xchg
js
jg
jns
push
data16
or
add
sarl
pop
rcrl
ljmp
add
dec
inc
pop
push
and
pop
pop
loopne
je
xor
das
and
iret
fisttpll
jb
movsb
loop
add
sub
adc
hlt
popa
test
add
ret
sbb
hlt
mov
adc
les
or
lret
adc
cmp
adcl
clc
insb
sub
or
xchg
mov
icebp
xor
or
shrl
fisubrl
fucomi
mov
iret
data16
scas
int
fldt
xchg
cmpsb
dec
pop
xor
lahf
dec
stc
cmc
push
sub
movsl
pop
jno
mov
inc
jge
lcall
stos
aas
mov
mov
mov
mov
mov
xchg
mov
js
adc
shll
loopne
ds
imul
inc
xchg
popf
in
sbbl
dec
outsl
mov
mov
inc
inc
test
inc
pop
int
adc
and
sahf
lcall
jmp
pop
jl
in
out
push
xor
hlt
push
in
and
xor
xor
sbb
cmp
add
shr
test
mov
push
test
sbb
idiv
scas
test
pop
gs
leave
mov
jge
dec
shrl
dec
jne
roll
adc
inc
dec
dec
adc
push
es
jl
mov
xchg
stos
cmpl
inc
adc
cli
sbb
icebp
pop
into
mov
add
aaa
inc
shrl
inc
movsl
mov
shr
aas
and
pushl
fwait
push
jns
call
rcrl
cwtl
fs
lea
ja
pop
mov
xchg
dec
jnp
loop
jmp
jge
mov
ret
pop
inc
andl
rcr
sub
sub
call
inc
sub
mov
mov
dec
sub
lcall
mov
cmpsb
imul
dec
pop
sbbl
add
cmpsb
mov
jmp
xchg
popf
xlat
neg
mov
mov
add
pop
dec
dec
imul
lcall
bound
pushf
push
cmp
repz
xchg
and
cmpsb
sub
ljmp
inc
xlat
jl
or
mov
jo
and
jmp
dec
out
lods
outsl
mov
lds
inc
mov
lock
or
push
push
sub
xchg
in
mov
ss
pop
movsl
out
inc
addr16
pop
mov
fildll
jecxz
jbe
cmpb
neg
adc
outsl
lret
cld
out
repz
push
pushf
stc
out
test
notl
pop
jae
dec
adc
sub
mov
imul
add
cltd
jnp
cmp
sub
cmpsl
sarb
add
test
mov
pop
pop
sub
add
daa
enter
mov
add
adc
push
cmpsl
cmp
inc
shrb
out
adc
mov
sbbl
push
sbb
pop
daa
sbb
adc
pop
in
addr16
xchg
jp
push
ret
mov
mov
push
les
iret
adc
jge
dec
adc
jp
cltd
dec
jl
enter
int
dec
pop
mov
mov
sbb
cli
fisttpll
push
fwait
push
scas
or
add
and
lahf
cmp
mov
pop
sbb
mov
cmpb
insl
fisubrs
inc
sub
cld
push
leave
rclb
dec
popf
movsl
jl
or
out
xor
push
dec
out
repnz
aaa
stos
jl
inc
and
es
dec
and
fprem1
in
outsl
pop
call
mov
cmp
pop
fmulp
movsb
call
cmp
das
lret
jge
mov
ljmp
sbb
mov
cmp
pop
jecxz
pop
jno
mov
clc
cmpsb
pop
cli
mov
adc
push
out
jmp
sbb
bound
sub
dec
lods
and
inc
mov
mov
mov
pop
mov
mov
nop
jle
sti
sbb
out
cmp
daa
ljmp
or
loop
push
cmp
xchg
ds
xor
mov
into
scas
aad
pop
sub
sbb
roll
imul
pop
lods
dec
shrb
mull
mov
shlb
ret
nop
jnp
xor
ret
add
ds
and
mov
mov
in
out
shl
push
adc
out
and
and
mov
fs
and
sub
mov
bnd
ja
xchg
das
pop
sub
outsl
ret
mov
add
imul
mov
pop
xchg
pushf
fists
je
out
rclb
cld
stc
jle
or
cmc
xor
or
jno
mov
jge
push
mov
add
xor
insb
stos
movsb
adc
jno
in
mov
inc
rorl
mov
fwait
icebp
in
sbb
mov
inc
dec
dec
in
jmp
lods
lret
mov
sub
and
gs
clc
sub
mov
bound
insb
sub
adc
aas
add
out
mov
sti
mov
clc
stos
into
mov
rcrl
test
xor
popf
mov
push
lock
dec
jno
dec
or
push
iret
lods
outsb
sub
pop
xor
in
push
mov
addr16
push
sub
sub
ficompl
pop
int3
inc
lret
aam
mov
ret
rclb
jbe
inc
pusha
push
bound
daa
pop
pop
mov
or
test
fcoms
push
insl
inc
dec
push
rorl
test
cmc
dec
xchg
jmp
je
inc
je
imull
mov
cwtl
cmpsl
pop
xor
sahf
adc
cs
cwtl
jmp
test
jmp
movb
mov
xchg
mov
sets
jmp
es
mov
call
aam
pop
push
andl
cmp
mov
ja
mov
and
mov
call
pop
lods
sub
loope
and
std
mov
pop
out
mov
imul
divl
out
xor
addr16
insl
or
mov
movsb
out
push
mov
dec
cmpsb
roll
in
mov
mov
cwtl
cmp
jb
sub
inc
or
push
pusha
jae
push
imull
pop
stc
lret
aas
mov
xlat
ljmp
int3
add
push
scas
mov
and
sub
iret
jecxz
mov
mov
je
popf
mov
test
pop
movsl
sub
sub
adc
xchg
shl
jo
or
ret
mov
xchg
ljmp
jp
xchg
shrl
lcall
cmp
scas
pop
xor
or
sub
bound
jns
aam
ds
and
test
lods
dec
inc
push
cmp
out
subb
add
sbbb
sub
dec
and
popl
stos
orb
mov
shll
pop
push
adc
imul
out
dec
int3
out
mov
xchg
div
jno
movsb
movsb
or
mov
popa
icebp
and
jne
sbb
push
mov
xor
mov
xchg
sbb
mov
jbe
cmc
xchg
sub
pop
xlat
into
pop
dec
pop
pushf
aam
sbb
lock
add
sub
rcrb
dec
dec
inc
cli
mov
sbb
test
mov
or
and
jmp
fs
adc
cmp
negl
enter
inc
mov
into
add
sbb
lods
and
xor
repnz
adc
or
sar
and
cmp
jbe
add
ja
xchg
outsb
mov
xchg
lret
movsb
mov
lret
sbb
test
ja
xor
scas
fdivs
lret
rcrl
cltd
sbb
popa
xor
xor
inc
cmp
scas
cmp
dec
adc
mov
sbb
es
aad
movsb
jmp
and
pop
out
mov
mov
inc
pop
adc
pop
divb
fmuls
movsb
inc
dec
inc
cmpsl
cli
mov
xchg
data16
std
mov
push
xchg
sbb
push
popa
lods
sbb
lcall
add
pop
xlat
push
fcmovnu
test
ret
data16
push
xchg
sbb
mov
mov
dec
add
bound
ret
or
mov
daa
mov
cmp
imul
inc
sarb
fs
lods
inc
je
or
xor
sub
mov
test
fistps
int
xchg
rclb
mov
cltd
or
sarl
out
sbb
test
nop
mov
adc
jmp
pop
addr16
add
loop
leave
and
mov
mov
jmp
call
in
movl
test
lods
lods
jg
xor
xchg
loopne
jmpw
sub
ret
test
push
pop
pusha
mov
out
cli
fcoms
out
jge
out
sbb
jnp
std
add
into
je
cs
xor
or
enter
mov
lock
push
sub
mov
test
sbb
xchg
inc
mov
pop
loope
push
push
inc
inc
fnstcw
push
stos
or
movsb
mov
popa
dec
rorl
loop
cli
sahf
scas
sub
test
or
jmp
xlat
and
cltd
daa
adc
xor
test
mov
leave
lcall
sbb
loope
mov
pushf
fcoms
les
sbb
shrl
test
adc
shl
mov
dec
push
inc
pop
hlt
movsb
sbb
sbb
and
ljmp
lcall
enter
pop
sub
dec
xchg
jl
xchg
add
xchg
lcall
sbb
call
jne
sub
cmc
sbb
jb
adc
cmp
push
in
sub
fldcw
sub
aas
pushf
test
sub
adc
push
shl
call
mov
nop
frstor
xchg
pop
inc
mov
inc
lcall
lock
sub
xchg
mov
stc
mov
dec
mov
xor
rcpps
add
lret
lret
jle
xor
loop
imul
push
cwtl
roll
lcall
mov
movsb
jne
test
xchg
sbb
fstl
imul
fwait
dec
cmp
or
pop
or
mov
test
hlt
js
push
je
pusha
in
and
mov
rcl
xor
adc
je
cmp
jae
movsl
insb
add
mov
insl
sub
xchg
sbb
push
lock
fdivrs
imul
test
and
mov
pop
xchg
div
pushf
add
xchg
popf
mov
jmp
shrl
dec
das
subb
jno
mov
test
ss
and
sti
loopne
mov
ljmp
out
es
cli
es
push
pop
shll
pop
aaa
sarl
outsl
aam
cmpsl
inc
or
les
and
fcmovne
in
sub
sub
shr
mov
jle
pushf
out
iret
lds
adcb
std
jg
ss
sbb
xor
dec
inc
push
daa
adc
cmp
psubusb
and
cs
mov
bnd
rcrb
lahf
sub
ficoml
loope
cmc
popa
push
idiv
insl
adc
fwait
push
mov
inc
inc
cmpsb
sahf
inc
lahf
loopne
nop
cmp
out
cmc
and
stc
jbe
mov
in
add
insb
sbb
pop
pop
aas
add
popl
inc
in
shl
jbe
jae
jecxz
cmp
xchg
mov
push
clc
cld
shrb
mov
cwtl
mov
push
mov
sub
nop
pop
popa
inc
mov
jge
in
adcb
adc
mov
xchg
push
sahf
jne
mov
shll
jmp
ret
icebp
pop
inc
adc
jecxz
daa
mov
pop
and
cli
ja
nop
je
xchg
shrb
out
adc
cwtl
add
xlat
cmp
cmpl
iret
test
fwait
outsb
inc
sbb
mov
sti
cltd
data16
popf
rcr
mov
sub
arpl
jmp
xlat
sub
imul
dec
bound
sbb
pop
cmpsb
push
sub
in
repnz
add
sbb
sbb
cmp
push
jp
in
hlt
add
mov
jo
cs
jbe
test
sbb
lea
addl
mov
jle
push
enter
jl
arpl
hlt
sub
xor
and
in
mov
sub
fscale
shlb
fists
mov
lea
movsb
inc
adc
gs
sub
mov
dec
xchg
sub
enter
dec
stos
inc
test
out
sbb
sub
dec
xchg
hlt
in
jne
movsb
call
popf
test
jge
push
imull
and
ss
mov
mov
lods
fdivrp
rorl
out
cli
jmp
push
pop
mov
adc
push
or
test
and
dec
xchg
add
cmp
lret
stc
jbe
mov
mov
sub
pop
fs
leave
mov
out
sti
mov
test
sahf
in
jne
call
ds
shl
adc
and
push
and
lahf
cmpsl
and
pop
pop
mov
pop
test
ss
mov
sbb
repnz
push
lock
or
adc
xchg
lock
gs
sub
in
xchg
pop
push
jae
lods
sbb
aad
mov
mov
xchg
jns
mov
dec
push
popf
std
jae
out
xchg
push
adc
in
cmpsl
or
pushf
mov
push
ss
ret
push
dec
mov
xchg
dec
ljmp
hlt
cmc
aaa
in
and
jge
cwtl
xchg
pop
jb
mov
lret
pop
cmp
insb
fldenv
insb
fcompl
add
xchg
repz
lahf
mov
push
cmpl
add
or
sub
in
mov
repz
add
pop
repz
mov
cwtl
ja
cmp
sbb
je
sbb
stos
inc
shlb
jne
xor
roll
xlat
push
fcompl
mov
and
pushf
mov
popa
pop
push
xor
nop
test
bound
in
jge
repnz
sub
hlt
pushf
test
push
insb
jmp
mov
and
lock
lds
inc
mov
loop
popa
and
call
xor
lea
fidivrs
repz
movsl
insb
push
or
mov
es
jnp
dec
mov
xor
iret
pop
std
movsl
icebp
sbb
loopne
push
cmp
fdivr
popa
aas
jnp
test
jge
outsb
lret
sbb
pushf
push
push
xchg
cs
iret
loopne
pop
repz
dec
mov
lock
in
orl
cmp
pop
pop
inc
xor
xchg
adc
and
idivb
pop
push
mov
insb
xchg
outsb
jle
cmp
or
inc
and
xor
je
test
push
dec
jle
fisttps
jbe
jl
in
rcrl
mov
clc
inc
pop
loop
fstpt
adc
sti
das
test
jecxz
lea
loop
jmp
outsl
fs
mov
stos
dec
mov
imul
lret
das
or
popf
jb
push
jnp
jp
movsb
sbb
out
jge
repz
testb
xchg
mov
jae
sbb
or
jb
inc
lret
push
leave
mov
dec
inc
jb
inc
xchg
or
push
xor
jno
jne
gs
loop
jno
loopne
push
inc
dec
nop
dec
jp
add
jno
push
xorl
push
jmp
lds
pop
inc
push
pop
dec
lock
cmp
dec
cmp
dec
test
jno
jle
inc
scas
test
inc
jecxz
sahf
mov
rclb
adc
fcoms
mov
ret
cltd
ja
pop
cmp
cwtl
mov
add
addl
pop
jo
push
pop
adc
dec
xlat
ficompl
xor
dec
in
jno
aam
mov
cmp
adc
rolb
lret
sti
push
ja
pop
dec
es
xchg
mov
adc
sbb
cmp
rol
ja
pop
imul
jnp
call
xchg
sbb
ss
test
fisubrs
pop
and
jae
mov
lds
stos
fidivrs
push
leave
in
dec
loope
mov
xor
mov
rorl
dec
rcrl
lods
or
jp
lods
aad
mov
cmc
push
out
outsb
sub
adc
cmc
mov
or
or
lret
jno
inc
int3
stos
add
ret
cmp
lods
cltd
cwtl
mov
test
xor
pop
inc
fsubs
push
mov
out
jne
call
pop
test
mov
jns
adc
cmp
inc
mov
pop
jns
or
mov
idivl
inc
push
xor
loop
js,pn
sbb
test
xchg
mov
or
or
addr16
mov
movsb
in
int3
push
sti
imul
lock
jl
outsb
imul
insl
push
add
es
sbb
shlb
sbb
bound
jbe
mov
mov
pop
push
sbb
sub
mov
xchg
adc
ret
jl
mov
pop
cmpsb
and
hlt
ss
cmpsb
push
mov
ljmp
jbe
in
mov
mov
lds
fsubrs
fs
subl
shr
or
cmpsl
andb
cs
adc
out
adc
repz
outsl
xchg
mov
mov
jmp
mov
cmp
daa
jmp
loope
xor
mov
push
stos
xor
cmp
jle
call
sbb
int
sbb
fwait
mov
in
or
pop
inc
sub
push
movsl
dec
or
add
push
mov
nop
pop
arpl
movsl
pop
adc
leave
insl
jl
cmpb
js
push
xor
adc
sbb
movsb
out
mov
jns
fmul
push
add
cmpsl
mov
push
cmp
add
and
jnp
ret
push
xchg
mov
pusha
popa
push
adc
call
cmp
xor
dec
or
icebp
sbb
jo
cld
into
sbb
loope
cwtl
jo
pushf
sub
add
jo
hlt
int
repz
sbb
sahf
mov
arpl
push
and
stos
ja
mov
jle
fstpt
sub
aad
jb
js
inc
inc
jne
inc
push
in
cmpsb
xchg
xchg
rcrl
outsl
arpl
bound
popf
call
cmp
pop
mov
jne
push
push
or
test
jne
dec
xlat
inc
mov
lcall
aas
jge
nop
and
inc
lret
iret
out
gs
outsb
xlat
shlb
inc
out
inc
pop
mov
dec
dec
push
mov
dec
sbb
mov
push
iret
cmp
cmp
sbb
cmp
loopne
into
mov
test
mov
lock
movsb
ljmp
int
inc
fcompl
lods
push
call
sub
push
cmpsb
xor
xor
xor
mov
test
out
inc
xorl
push
jge
out
dec
push
es
sub
pop
sbb
out
mov
fists
test
roll
bound
imul
scas
popf
fwait
aas
imul
mov
outsb
mov
ljmp
mov
notl
gs
popf
lods
or
and
jmp
or
push
dec
loopne
enter
and
inc
or
sarl
pop
fucomip
cmp
aas
or
lods
jb
mov
sub
mov
ret
rclb
cmc
ja
xchg
aas
adc
jecxz
sbb
adc
push
adc
push
mov
insb
mov
dec
lret
out
in
jbe
push
int3
aad
icebp
lock
insb
popf
aaa
mov
xor
pop
mov
jl
outsb
bnd
movsl
mov
cmp
pop
iret
adc
push
or
mov
jg
mov
bnd
push
repz
data16
cmp
cli
cmp
lock
iret
pop
mov
fisubl
movsl
cmp
pusha
mov
loop
test
inc
ret
test
je
loope
inc
je
addr16
cli
push
cmc
mov
out
scas
mov
dec
mov
mov
aaa
les
pop
push
sbb
ja
inc
add
mov
add
popf
pop
fistps
xchg
hlt
sbb
adc
adc
adcb
mov
sbb
cmp
pop
jge
adc
or
out
leave
xchg
sbb
push
jae
ljmp
add
cwtl
stos
push
fcoml
aam
gs
dec
stos
fs
aaa
inc
push
data16
pop
stos
int
sbb
incl
lret
and
cs
inc
jl
dec
out
pop
adc
push
lret
or
mov
test
xor
mov
mov
bound
sub
inc
lret
xchg
ja
iret
pop
loopne
test
sbb
ds
xor
fsubrs
test
fdivr
mov
mov
xor
out
or
inc
push
jge
inc
and
dec
fbstp
jl
sub
mov
and
mov
ja
ret
push
xlat
insl
lods
subl
idivl
cmp
lds
and
sub
pop
and
gs
loope
pop
pop
cld
sub
push
cmp
dec
mov
hlt
icebp
inc
nop
and
int3
outsb
imul
jmp
mov
cmp
rclb
pop
mov
stos
push
test
frstor
push
jae
inc
test
jno
cltd
and
rcrb
add
inc
sbb
pusha
jbe
fcomi
xlat
lea
mov
es
mov
lret
push
sbb
out
ret
out
stos
xchg
fs
pop
xchg
xchg
mov
pop
js
je
add
test
push
mov
bound
fimuls
adc
sub
lock
sub
pop
pop
scas
loope
aam
jae
stos
insb
shll
shlb
push
rol
outsb
cli
in
jo
cli
pop
adc
insl
jp
sub
lock
fs
sbb
cwtl
dec
leave
lret
add
lea
ret
scas
cmpsb
pop
scas
jle
shlb
sbb
cli
jnp
push
add
fidivl
outsb
mov
ret
inc
dec
js
mov
push
fs
daa
pop
cmpsb
dec
add
aaa
add
mov
loop
mov
repnz
sbb
dec
inc
pop
out
mov
rcl
das
repnz
cmp
cmc
addb
imul
inc
sub
int
sub
jae
icebp
outsl
pop
jg
js
loopne
cmp
mov
loope
stos
es
adc
or
enter
insl
push
add
sub
mov
dec
inc
xor
in
xor
sbb
mov
scas
sub
cmpl
push
inc
and
dec
je
jp
mov
xor
pop
jecxz
mov
pusha
or
push
jns
mov
sub
or
sar
push
repnz
std
les
push
lods
ja
enter
ret
ja
cmpsl
dec
leave
mov
insl
adc
pop
les
push
das
hlt
hlt
jne
jnp
aam
jne
mov
mov
jmp
and
sub
xor
cli
jno
jg
out
ret
xchg
int3
stos
ss
adc
cld
andb
into
mov
fldt
aas
ja
and
dec
or
jb
test
mov
inc
xchg
in
shlb
cld
int
mov
rcll
fidivrl
js
pop
push
call
xchg
xchg
sub
iret
aad
ret
cli
push
adc
popf
and
bound
lea
add
in
mov
pop
out
xchg
ficoml
dec
dec
test
pop
addr16
xchg
jne
jo
int
adc
or
fcomps
aad
movsb
imul
aam
inc
stc
call
sub
ret
fsubr
cld
inc
scas
xor
pushf
push
lret
rcl
ret
push
sbb
mov
dec
scas
xor
call
push
inc
jne
outsl
or
xchg
mov
adc
push
lds
pop
into
repz
fadds
sbb
hlt
imul
sbb
nop
cs
popf
and
cmp
in
out
inc
popa
and
rclb
mov
stos
movsb
xor
xchg
xchg
aam
in
lock
jp
fcmovb
push
inc
test
pop
pop
inc
sub
fsubs
in
push
orb
and
dec
shrb
dec
pop
pop
sub
movsb
ja
test
ret
xchg
enter
popa
mov
cmp
adc
lret
fwait
pop
mov
mov
fwait
negl
pop
inc
enter
into
cmp
nop
inc
addr16
add
cld
aad
cld
mov
push
mov
insb
mov
cmp
stos
dec
cmp
ljmp
movsb
fadds
addl
ljmp
inc
cli
ret
sbb
int
int
aam
adc
jnp
dec
xor
arpl
xchg
mov
and
stc
jae
mov
js
int3
mov
dec
test
out
add
call
jae,pn
and
ret
mov
mov
xchg
xchg
popa
xchg
out
iret
mov
ret
lret
das
and
xlat
adc
pop
popf
dec
mov
pop
lods
or
xor
and
and
jp
test
sbb
mov
loope
lods
divb
rolb
pop
cld
aam
jns
dec
pop
jecxz
repz
jl
inc
pop
out
xchg
out
pop
add
xor
rclb
fistps
xor
and
enter
ss
cmp
push
lods
push
dec
push
inc
jb
pop
sbb
pop
xor
mov
and
inc
adc
cmpsb
out
out
shll
cmpsl
loop
popa
movsl
sub
sbb
rorb
aas
inc
inc
mov
subl
xor
test
inc
cmp
mov
push
ret
fnstenv
dec
outsb
in
fistpl
loope
jae
inc
jle
ret
cli
dec
mov
in
rolb
filds
mov
adc
mov
ds
dec
sub
mov
and
cmp
jecxz
pop
ds
test
push
aad
inc
mov
sub
adc
cmp
inc
lahf
add
sub
test
mov
push
xchg
lds
notl
ja
fists
ret
sub
mov
mov
stos
roll
lret
fwait
pusha
xchg
push
inc
and
lret
in
pop
insl
insb
mov
mov
cmp
popf
iret
jg
cmp
icebp
jnp
cmp
push
jno
mov
adc
xor
stos
or
stos
fisubrl
and
lahf
lock
adc
les
push
inc
ret
pop
adc
and
xor
cwtl
loop
insl
cmc
add
sub
test
test
fs
cld
rorb
jg
jp
xchg
dec
mov
or
icebp
in
and
rorb
add
jb
ret
loope
enter
pop
nop
jle
mov
mov
mov
incb
dec
stos
aad
sbb
fidivl
sub
or
dec
fwait
cs
xchg
cltd
xchg
mov
loop
or
inc
mov
mov
out
mov
mov
sbb
loop
lods
stos
adc
inc
hlt
mov
cmp
inc
inc
mov
mov
shrl
pop
jo
mov
loope
aas
push
movsb
hlt
inc
mov
dec
repnz
add
mov
or
inc
test
js
mov
ret
in
and
mov
jmp
jle
xor
push
out
dec
mov
xor
stc
mov
iret
notb
mov
fwait
sbb
aam
jae
push
cmp
std
lret
fcomip
jns
dec
std
xchg
hlt
mov
call
push
cli
xchg
dec
xor
and
xor
cmp
and
lods
cs
lea
call
dec
popa
jns
cmp
out
lods
jns
or
mov
xor
cmp
add
jbe
adcl
and
iret
push
sti
movsb
ret
test
inc
clc
out
jecxz
jne
jge
jecxz
loop
mov
dec
adc
mov
mov
mov
sbb
roll
mov
in
mov
mov
jae
je
or
pushl
je
lock
lret
mov
out
mov
mov
jl
outsl
mov
mov
mov
scas
cmpsb
jns
rolb
repnz
imul
dec
mov
mov
mov
add
frstor
je
sbb
incl
fnstenv
aam
sarl
pop
pop
pop
cltd
ret
pop
pop
or
leave
and
and
aam
loopne
sbb
dec
jle
fnstcw
push
mov
imulb
ret
mov
insl
pusha
xor
fwait
repz
cmc
movsl
ljmp
fcmovbe
push
insb
and
or
inc
pop
subl
jnp
mov
sbb
cmp
hlt
pop
test
icebp
push
fldenv
dec
clc
and
jno
and
push
dec
xchg
movsb
dec
in
sarl
js
enter
sbb
mov
into
xchg
aam
inc
dec
pop
push
cmpsl
add
fsubs
xor
xchg
dec
fistpll
pop
call
scas
and
pop
les
ljmp
and
data16
dec
stos
sbb
pop
icebp
adc
ds
mov
mov
sub
testb
mov
fmuls
jne
ret
sub
xchg
push
mov
or
aam
push
clc
mov
sub
mov
data16
xor
dec
push
fmul
sbb
mov
imull
bound
cmp
sbb
test
or
mov
test
pop
mov
shlb
test
xchg
xchg
iret
push
xchg
jmp
jmp
test
outsb
jmp
mov
sbb
push
pop
inc
gs
in
shlb
lock
dec
push
jle
push
add
mov
rcrl
int
aas
sbb
cmp
sbb
mov
mov
adc
fldenv
mov
and
scas
jo
xorb
add
xchg
lock
jne
mov
sbb
sti
enter
mov
aam
mov
cmp
push
int
adc
jmp
pop
pusha
es
xchg
xchg
adc
add
outsl
test
imulb
push
daa
lods
cli
mov
add
sub
mov
sub
div
insl
pop
insl
jl
inc
or
inc
imul
mov
into
je
sub
xor
pushf
lret
push
pushf
mov
insl
subl
les
pop
test
or
cmp
fdivrp
test
ret
xchg
mul
jne
mov
adc
scas
shlb
fimull
add
pop
mov
in
pop
and
pop
dec
hlt
push
mov
pop
test
xor
add
inc
stc
movsb
mov
mov
pop
inc
xchg
imul
stos
or
sbb
sbb
xor
sbb
fidivrs
movsb
push
aam
mov
add
mov
jmp
cmpsb
mov
sbb
dec
lods
push
ret
push
push
xor
nop
nop
jno
clc
cmp
push
fdivp
mov
sahf
xchg
insb
stos
mov
mov
mov
push
cwtl
mov
imul
loope
or
imulb
xor
ror
mov
outsl
mov
jl
test
in
xor
loopne
mov
add
and
loope
dec
xchg
mov
bound
scas
jb
or
out
mov
sbb
fcom
fldlg2
lock
stos
arpl
and
or
lock
sub
aad
loop
leave
sarb
sti
rcl
scas
addl
call
mov
mov
jecxz
sbb
cwtl
dec
in
sahf
sti
divb
and
mov
rcll
loop
push
setle
pop
mov
fsts
mov
or
loopne
testb
or
insl
xorb
and
xchg
xor
xor
lret
dec
mov
sbb
mov
mov
cmpsl
sbb
cmp
pusha
sub
lock
lds
psrad
fsub
idivb
xor
push
scas
mov
xor
sub
sarb
scas
bound
sbb
push
add
xor
lods
pop
aam
pop
pusha
aam
push
aas
mov
sub
loop
clc
push
decl
nop
adc
out
xor
ret
adc
add
imul
vmulsd
and
fcoms
ret
sub
push
gs
scas
roll
cmp
cmc
lods
rorb
add
and
jmp
cwtl
sub
cmc
jmp
mov
cmp
push
push
push
lret
ljmp
xchg
mov
fisubl
sub
mov
adc
dec
xorl
cmp
pop
lahf
cmp
mov
adc
sahf
stos
cmp
sub
mov
sub
nop
xchg
lds
inc
sub
or
and
in
adc
in
fldcw
xor
repnz
dec
cltd
frstor
mov
mov
mov
and
pop
mov
jb
daa
and
mov
addr16
pop
out
fwait
jbe
or
imul
insb
lret
pop
shl
in
push
push
lods
xor
adc
loope
fcompl
xor
lret
mov
mov
je
add
adc
mov
std
cs
repnz
test
ljmp
sub
lret
push
jnp
pop
in
mov
je
mov
mov
and
test
fisubl
sub
pop
sub
bound
pop
sub
out
xchg
mov
lret
jo
arpl
pop
das
xorb
mov
ret
scas
mov
lahf
in
test
stos
or
dec
adc
idivb
int
lahf
mov
arpl
jb
pushf
out
xchg
test
movsb
pop
cmp
rcl
push
scas
orl
jmp
mov
pop
mov
aas
sbb
jecxz
inc
pop
mov
and
fildl
imul
fstps
cmpb
push
jb
dec
les
jecxz
popa
dec
ret
lret
pop
lret
adc
pop
rorb
loope
fwait
and
mov
jbe
pop
clc
rcl
rcrl
xchg
into
push
adc
jnp
and
clc
add
ss
icebp
mov
lret
mov
filds
and
mov
pop
pop
jae
sub
and
stc
dec
jg
sbb
sti
sub
hlt
nop
add
xor
out
pop
mov
jp
xchg
mov
cmp
push
xor
xor
out
cmpsb
aaa
dec
rorb
mov
fdivrl
mov
cmc
push
pop
mov
xchg
dec
scas
data16
push
bound
scas
fdivs
sbbb
scas
push
ja
icebp
jecxz
adc
pop
jecxz
sbb
push
stos
mov
pusha
mov
or
pop
sub
pop
bound
pop
push
adc
rorb
mov
and
or
js
or
dec
flds
or
aam
aad
push
inc
sbb
lods
in
ret
add
xlat
ja
sub
fldcw
not
pushf
mov
cmp
dec
pop
dec
nop
fsubrp
arpl
or
cmpsb
mov
mov
mov
mov
xor
mov
test
jecxz
shll
jns
test
test
jne
mov
aad
jg
inc
mov
xor
pop
or
cltd
ret
icebp
sub
movsb
pushf
stos
mov
mov
pop
xor
pop
inc
mov
mov
test
mov
jbe
xlat
int
test
or
fwait
push
push
inc
movsb
pushf
mov
sub
xor
aad
addr16
movsl
lcall
cmp
dec
and
xchg
insb
pop
pop
mov
dec
or
lds
ljmp
int
aad
fdivs
adcl
lret
sbb
jo
jle
mov
add
dec
xor
sbbb
pop
call
push
imul
mov
sub
pop
inc
loopne
jno
int
rcll
pop
mov
les
mov
test
outsl
icebp
push
sbb
dec
push
loope
dec
lods
in
repz
aaa
dec
mov
dec
cmp
mov
sub
and
into
popl
inc
dec
mov
sub
lcall
orb
adc
push
inc
insl
stos
xchg
je
cmp
pop
jg
rcll
aad
lods
mov
dec
push
sbb
dec
sub
leave
dec
sbb
pop
aad
clc
insl
negl
test
jmp
pop
fstsw
pop
imul
ja
sbb
sbb
push
out
popf
daa
arpl
das
inc
inc
sbb
sarb
loope
xchg
imul
fcoml
add
jge
or
and
add
and
cmpsl
test
mov
pop
adc
jae
mov
push
repz
sbb
pop
sbb
addb
push
sahf
mov
xchg
test
in
ficoml
jno
notl
cli
out
mov
cmp
fstl
cmc
inc
or
idivb
push
sarb
pop
jg
sahf
test
and
sbb
cmpl
je
mov
jo
xchg
out
test
inc
ja
inc
sub
jl
jno
cmp
lret
mov
add
mov
and
lcall
ljmp
push
xor
rcr
jne
cld
outsl
jmp
xchg
or
ss
push
lock
pop
cs
leave
clc
inc
xlat
loop
aas
cwtl
lock
imull
or
clc
loope
ret
or
cld
mov
cmp
jl
cmc
dec
lods
xor
vpshufd
into
push
xchg
in
cmp
rcrb
push
cmp
ficoms
in
addr16
int
sti
fsts
mov
jg
xor
jae
inc
xor
cmp
aad
outsb
xor
jp
cmp
lock
xor
aad
sub
push
std
xlat
into
inc
rclb
and
push
stc
jmp
inc
mov
loopne
pop
xchg
sub
inc
paddusw
ret
cmp
dec
fisttpll
jg
mov
mov
and
inc
insb
push
pusha
cmp
loopne
js
movsl
adc
enter
sarl
imul
aas
fsubs
cmc
add
test
arpl
pop
das
test
bound
sbb
sbb
push
les
test
mov
and
inc
pop
and
and
cmp
add
aam
fucomi
cmp
loopne
mov
loopne
int
xor
or
int3
das
in
icebp
mov
or
faddl
fisttpl
xor
nop
mov
jne
or
inc
fwait
cmp
clc
inc
loope
and
ret
outsl
xchg
or
testl
dec
mov
dec
and
cmc
outsb
leave
cmpsb
scas
dec
inc
mov
push
jle
imul
loope
mov
std
sbb
xchg
push
aam
add
aam
and
clc
insl
push
jne
adc
xlat
lahf
and
pop
mov
add
mov
andl
push
and
bound
lret
popf
push
repz
or
pop
in
loopne
push
aam
mov
dec
adc
setge
mov
ficoms
mov
cmp
adc
sti
add
or
sbbb
push
int3
or
nop
push
sub
inc
xor
pop
hlt
arpl
inc
sbb
dec
scas
cmp
jb
xor
psubsb
lds
or
repz
lds
fnstcw
cmp
cmp
inc
insl
add
adc
ss
xorb
cmpsl
jne
iret
daa
das
sub
push
repz
in
xor
je
test
xor
stos
ds
jle
notb
mov
paddusb
loopne
cmp
insl
push
loopne
mov
leave
xchg
pusha
orb
lock
cmp
mov
jns
push
xor
and
xchg
mov
in
lret
or
out
or
in
xchg
or
cvtdq2ps
jl
pop
enter
pop
xor
lcall
pop
adc
mov
iret
cli
jmp
out
mov
cmp
sarb
mov
mov
scas
aam
push
add
push
adc
and
mov
nop
pop
stos
mov
mov
xchg
jg
bound
test
jle
and
mov
cmp
fstl
jae
popa
mov
dec
adc
cmp
or
push
fs
into
dec
jb
sbb
dec
mov
rcll
sub
push
stc
test
clc
jbe
xchg
push
andb
stc
int3
shrb
js
mov
fnsave
lea
jl
fnstsw
shlb
lahf
sti
pushf
shl
jno
adc
insl
mov
cmp
dec
xchg
in
dec
test
xchg
mov
cmovnp
int
mov
mov
mov
fcomps
xor
repz
push
rclb
mov
rclb
mov
out
push
xorl
mov
hlt
inc
jno
xor
push
xlat
sbb
jecxz
stos
enter
cmp
adc
mov
mov
xchg
icebp
and
das
loopne
pop
call
lea
das
scas
movsl
adc
mov
leave
shlb
xor
mov
jnp
mov
sub
mov
ljmp
xlat
addr16
push
scas
leave
mov
pop
testb
jnp
imul
leave
arpl
push
lock
sbb
lock
jns
sbb
out
mov
sub
xor
jb
xchg
cmp
sub
int3
jecxz
fucomi
addr16
add
fyl2xp1
aam
push
mov
xor
sbb
mov
stos
and
pushf
mov
cmp
leave
push
jnp
push
imulb
inc
sub
jmp
mov
jb
or
je
add
mov
push
adc
pop
dec
mov
clc
in
cmp
fmull
mov
cs
lret
cli
dec
pushf
mov
aad
mov
movsb
dec
mov
int
xchg
das
push
adc
dec
sbb
pop
push
sti
or
out
add
inc
push
popa
mov
jae
bound
lods
fnstcw
mov
clc
jle
xchg
ja
cmp
and
and
das
cmp
and
rclb
out
mov
mov
cmp
dec
shl
pop
sbb
cmp
lret
out
imul
pop
call
ss
xor
mov
rcll
inc
sbb
lcall
sbb
out
or
mov
loop
push
dec
jle
xchg
inc
scas
sub
inc
or
mov
push
vmwrite
loop
sbb
dec
les
add
jl
mov
movsb
movsl
xor
imulb
rorb
cltd
push
leave
ret
or
addr16
sub
lcall
jo
mov
mov
leave
inc
jle
lahf
dec
sbb
sbb
push
fwait
jae
pop
das
out
loope
sub
sahf
sbb
fisubs
xchg
popl
insb
mov
pop
lods
scas
sar
inc
and
jae
jb
push
test
out
ficoml
pop
sbb
mul
xor
sub
loope
adc
mov
ret
add
sbb
mov
std
pop
mov
shll
lods
sub
fimull
sti
int3
leave
mov
push
push
xchg
insl
pop
rcrl
cmc
lahf
lods
movl
xchg
std
push
pop
add
xor
inc
rorl
pushf
loope
cltd
xchg
cli
in
inc
sti
inc
dec
test
rorl
cmp
hlt
jno
cltd
pop
js
push
cmp
in
push
add
or
sbb
mov
out
xor
lock
dec
xchg
jecxz
pop
sub
mov
pop
add
not
call
adc
sti
test
mov
mov
push
pop
mov
jnp
xor
fs
loopne
or
movsl
pushf
sub
das
xor
mov
es
negl
inc
testb
icebp
fsts
addr16
fwait
sub
jp
adc
inc
cmp
sub
stos
jnp
inc
bound
dec
inc
adc
xor
enter
adc
dec
push
mov
mov
mov
or
lds
in
push
outsb
xor
adcb
ret
sub
and
std
in
cmc
pop
jmp
pop
repnz
pop
out
out
fdivrp
imul
pop
push
lret
pop
mov
adc
fsubrs
call
ret
outsl
inc
int
out
aad
stos
inc
pop
mov
mov
and
in
fwait
mov
push
add
popf
mov
push
jge
jle
pop
mov
jnp
incl
pop
pop
mov
jo
add
cmovbe
outsl
lret
xor
lahf
mov
add
aad
subb
fdivrp
adc
test
jno
adc
dec
mov
pop
pop
jecxz
pop
cmpl
mov
imul
int3
xor
cmpsl
stc
call
mov
dec
inc
adc
test
pop
fucomp
xchg
les
in
js
sub
adc
aam
adc
ret
mov
jne
jb
out
fs
lea
lods
or
mov
jge
cs
bound
pop
adc
in
repnz
in
jl
sbb
hlt
sbb
data16
xchg
mov
xor
fwait
js
fcmovnb
sub
aam
stc
sti
add
cmpsl
loop
aaa
push
testb
sbb
test
mov
mov
out
sbb
push
inc
xor
jmp
stc
addr16
lahf
fs
sbb
fpatan
adc
jge
and
cs
outsb
jg
insb
sbb
mov
addr16
lret
push
inc
or
addr16
and
inc
push
push
jmp
sbb
push
cli
push
cmp
xor
imul
pusha
mov
pop
pop
pop
mov
mov
xor
cmpsl
mulb
dec
xchg
lret
outsb
sub
lods
ja
mov
movsl
dec
mov
cmp
outsb
adc
notl
leave
adc
cwtl
mov
clc
mov
push
and
rcll
bound
ss
cmc
dec
pop
mov
sub
dec
push
cli
adc
mov
lret
outsl
add
xor
or
daa
mov
and
rcrl
insl
cmp
leave
sub
ret
loope
clc
mov
nop
daa
hlt
rorb
cli
push
mov
or
xchg
mov
call
test
xchg
imul
jmp
jecxz
push
dec
mov
popf
jne
in
mov
pop
fldcw
xchg
mov
mov
inc
andl
pusha
jecxz
pop
mov
fldenv
sbb
inc
stos
stos
mov
mov
mov
pop
jnp
xchg
es
sbb
clc
lods
jno
mov
mov
jle
inc
sahf
and
mov
repz
push
adc
xchg
insb
insl
jns
pushl
pop
cmp
sbb
sbb
movsb
xchg
push
mov
into
adc
sub
insl
pop
out
mov
pop
xchg
icebp
shl
inc
jmp
out
inc
stos
test
mov
mov
ja
repz
ljmp
mov
inc
jle
das
call
aaa
cs
adc
cmpsb
xchg
enter
sbb
mov
cmc
popa
add
mov
in
das
and
sub
and
hlt
xorl
gs
push
fcompl
insl
adc
cmp
icebp
int
clc
jbe
cltd
repnz
je
push
int
fs
jp
dec
jle
add
je
mov
mov
cmpsb
sbb
or
jbe
xchg
lret
scas
pop
push
stos
mov
lahf
jae
fldenv
in
dec
mov
lret
pop
cmp
subb
scas
mov
push
test
jnp
push
out
ret
in
movsb
lds
shrb
call
adc
mov
mov
pop
xchg
imul
cld
mov
xor
sbb
xchg
cli
das
jg
fs
or
jp
shrl
push
fwait
inc
aad
xchg
jo
leave
add
jp
das
lods
pop
jno
loop
or
fisttpl
mov
dec
sahf
lret
add
mov
inc
pop
inc
daa
push
mov
in
cltd
mov
mov
adc
sbb
lcall
loope
popf
pop
mov
fstpl
mov
insl
push
jl
mov
cmp
push
mov
popa
push
faddl
test
hlt
add
pop
fstps
xchg
xor
fmuls
add
pushf
sub
test
repnz
popf
or
or
imul
mov
pop
pop
jl
dec
cmpsb
cmpsl
jb
dec
adc
insb
sub
cmp
test
adc
jmp
imul
movl
xor
push
mov
rolb
fidivrs
xchg
jle
push
sub
lret
push
aas
mov
jmp
es
sub
aam
or
es
sahf
sbb
jmp
add
xchg
shlb
fwait
push
lcall
testb
scas
lock
or
into
jns
leave
dec
roll
out
mov
inc
cmp
mov
leave
lock
cmp
outsb
cwtl
idivl
inc
loope
mov
sbb
push
dec
loop
xchg
or
cmc
fistpll
pusha
add
or
inc
jle
in
sti
clc
sbb
adc
rorb
fldt
iret
push
adc
and
mov
test
pop
and
xchg
stos
fdivrs
pop
pop
push
inc
sbb
pushl
or
ficoms
aaa
sub
in
loopne
mov
dec
mul
inc
mov
xor
test
sbb
xchg
out
rcll
adc
inc
hlt
xchg
inc
lahf
nop
fsubrl
imul
lret
outsl
jnp
lods
ja
dec
in
arpl
add
dec
jnp
or
sahf
out
adc
popa
out
fwait
lret
outsl
lods
sbb
mov
popf
xor
mov
cli
mov
push
mov
dec
dec
mov
rcr
xchg
loopne
lds
jle
test
lcall
mov
out
outsb
cltd
aam
sti
mov
mov
push
aaa
imul
les
adc
dec
dec
pop
xorl
push
stos
cmp
pop
mov
fldt
mov
mov
out
xor
sbb
sub
clc
pop
sub
movsl
loope
inc
push
cli
xchg
inc
mov
jb
cmp
repz
repz
addb
lea
jg
insl
out
sub
push
test
cmp
push
clc
cvtps2pi
int
pop
jb
mov
push
add
xor
adc
push
out
sbb
addr16
add
sub
in
xchg
or
xor
je
or
or
rcr
mov
mov
push
inc
clc
dec
mov
aaa
imul
or
sub
xlat
inc
jb
insb
addb
movsb
xchg
dec
cld
arpl
jbe
ljmp
or
jp
sbb
fsubl
inc
xchg
gs
fists
in
fdivl
loope
leave
mov
sub
mov
cmpsb
jae
out
out
cs
cmp
cmp
movsl
inc
pop
aaa
nop
fs
ss
mov
xchg
js
sub
cmc
sub
pop
or
icebp
stc
mov
cmp
push
sub
dec
idivl
add
out
scas
inc
pop
insb
mov
sub
imul
mulb
cmp
sahf
pop
xlat
inc
xchg
add
test
nop
addb
cmp
sar
sbb
scas
and
sti
adc
iret
cmp
mov
lcall
cli
jb
cvtps2pi
mov
repnz
nop
mov
pusha
xchg
or
sarl
mov
das
movsb
dec
jnp
fsubs
ja
test
inc
aaa
push
and
adc
push
sub
or
add
push
jne
fucomp
pop
in
rcr
jb
cmp
push
xchg
cmpsl
push
addb
or
fcmovnb
add
pop
das
cmp
lods
mov
leave
aad
fiadds
pop
mov
test
xchg
gs
seta
mov
pop
orl
xor
insl
jge
and
pop
or
inc
and
lock
inc
cwtl
stc
mov
jl
stc
scas
ret
out
imul
scas
sbb
jmp
mov
mov
je
sub
jae,pt
out
mov
jmp
mov
jnp
outsl
push
shlb
ror
mov
or
ss
mov
arpl
cmp
cmp
push
pop
lods
insb
sub
out
xchg
cs
xchg
adc
mov
sbb
lret
push
xor
mov
add
daa
sti
pusha
shrl
stos
xor
inc
popa
push
in
aad
fldt
call
popf
jle
xchg
cmpsb
inc
inc
mov
into
test
imul
movsb
mov
movsb
popa
dec
dec
pop
mov
loopne
pop
sbb
shr
into
jge
xchg
pop
cmc
fwait
aaa
subl
mov
test
iret
fwait
aas
ds
xor
dec
mov
sarl
ljmp
leave
push
xchg
clc
lods
jmp
sub
and
jecxz
xlat
jno
dec
out
add
jne
pop
cmp
nop
jbe
out
in
mov
pop
cs
pop
pop
and
imul
lret
in
add
insl
lret
inc
cmp
int
lods
jae
clc
fcmovne
xor
jge
insl
movsb
jl
stc
xchg
jmp
fisttpl
cmp
push
mov
jmp
mov
loope
fildll
ret
mov
adc
mov
mov
or
ror
es
testl
sbb
mov
into
mov
xor
and
test
sbb
pop
andl
push
ja
inc
movl
sub
mov
lods
sahf
jbe
aaa
mov
mov
cmp
stc
arpl
dec
mov
pop
shl
dec
xchg
out
xor
rcrb
inc
jge
aam
or
in
mov
mov
mov
daa
xchg
sti
mov
sbb
leave
lcall
js
idivb
inc
sub
ret
fs
enter
and
sub
cmp
cwtl
xchg
ds
fisubs
insl
or
repz
pop
adc
sbb
sub
mov
test
xorl
xor
add
mov
cmp
fcos
lcall
out
arpl
sub
enter
int
add
out
js
roll
mov
shlb
xchg
and
repz
js
fidivl
imul
cli
push
cmpsb
mov
sub
stos
jns
aam
add
dec
push
gs
lods
fiadds
loopne
sbb
pop
adc
jge
fisubrs
inc
cmp
rcl
cmpsb
repnz
jg
fdivrs
jnp
mov
fwait
push
cmp
sbb
add
lock
cmp
sbb
mov
sub
mov
and
fisttpl
mov
dec
fsubl
add
jae
sbb
mov
or
mov
pop
adcb
mov
adc
in
movsb
jnp
xchg
lock
xchg
sub
push
adc
cmpsb
int3
pop
in
mov
bound
mulb
rcr
int
cmp
sbb
fs
inc
add
mov
dec
mov
cmpl
dec
outsl
push
push
aam
test
lods
sbb
mov
pop
sbb
and
xchg
mov
fsubrp
xor
sti
hlt
xor
cs
addl
jne
pop
aam
mov
aam
ret
cld
or
ds
mov
enter
and
shl
jecxz
mov
dec
xchg
add
pop
xchg
mov
push
and
insb
enter
jnp
mov
push
xchg
dec
sarl
std
pushf
stos
out
test
cmpsl
fsubl
cwtl
sub
insl
sbb
loop
sti
cltd
loope
fnstcw
sbb
call
cmp
addr16
xchg
hlt
pop
shrb
mov
jmp
push
inc
popa
cmp
mov
push
push
test
int
cli
cmpsl
neg
out
in
push
xchg
fstpl
jbe
inc
test
outsl
out
loope
cmp
pop
test
push
xchg
cmp
push
test
xor
aam
cltd
mov
inc
jg
cmpsl
sub
mov
mov
mov
sub
cmc
les
or
int3
stos
repz
jecxz
sub
dec
outsl
mov
xor
xor
idivl
mov
mov
dec
cltd
out
dec
sub
mov
lods
mov
and
scas
or
inc
sbb
xchg
out
dec
jae
pop
jg
inc
push
xchg
mov
arpl
ss
loopne
add
inc
jnp
push
std
rcrl
ljmp
sbb
pop
jo,pn
int3
sub
out
xor
stos
mov
mov
out
jnp
mov
pop
lock
jle
pop
push
push
fsubrl
cmp
aas
inc
mov
mull
jmp
inc
mov
clc
xchg
inc
leave
les
jb
aad
data16
add
bound
and
popf
and
sbb
addr16
lcall
mov
sub
cmp
aaa
int
cs
sub
imul
fmuls
mov
pushf
jns
pop
lea
into
pop
mov
dec
fwait
in
int
inc
xor
insb
mov
push
jne
cmp
push
or
mov
ja
jnp
dec
mov
jne
cmpsl
std
out
jb
aaa
push
push
loopne
dec
loop
cmp
ljmp
scas
push
outsb
aas
adc
mov
cmpl
cmp
scas
in
stos
enter
jp
mull
dec
mov
enter
xor
dec
mov
sub
loopne
sbb
dec
sbb
inc
sub
mov
out
inc
inc
fdivl
push
mov
gs
pop
lods
pop
and
lods
push
jecxz
inc
mov
loop
sbb
js
pop
sub
cmp
or
out
adc
mov
mov
and
push
dec
fstpl
loop
cwtl
call
inc
sbb
adc
push
insb
int
scas
dec
dec
rcrb
sub
insl
enter
inc
insl
mov
mov
mov
jl
stos
loope
add
push
lods
add
stos
fbstp
pop
out
xor
xchg
mov
cmp
test
cmp
out
fisubs
rcrb
sti
repz
leave
fwait
scas
gs
or
inc
cmp
adc
sbb
daa
xor
popa
push
or
in
dec
xor
fidivrl
int3
xchg
fistl
mov
lods
je
dec
jp
scas
loopne
mov
movsb
andb
jmp
sbb
mov
fcmove
jb
sti
ss
das
mov
lea
out
insb
out
push
push
lahf
push
push
jae
jne
imul
insb
lret
xchg
or
std
out
dec
mov
iret
ss
insb
mov
inc
pusha
xor
in
inc
andb
les
sub
bound
inc
testl
stos
and
push
sbb
push
jp
pushf
push
andl
pop
xor
rorb
xchg
imul
stos
inc
inc
int3
je
jge
gs
test
jle
test
rcrl
jge
adc
and
mull
sti
xchg
inc
loopne
adc
mov
fisttps
mov
inc
in
dec
inc
mov
outsb
sbb
rorl
pop
adc
cmp
mov
out
add
cltd
and
scas
in
push
jns
or
test
mov
shlb
push
loopne
rcr
fcoms
cmp
inc
sub
push
adc
inc
mov
mov
gs
xlat
pop
xchg
cmp
adc
jbe
mov
jp
fincstp
mov
les
loopnew
push
clc
mov
mov
inc
sub
xor
bound
call
movsl
cmp
into
cmp
mov
test
jp
cld
dec
dec
jns
pop
orb
add
inc
push
xor
ret
addl
call
adc
sub
sbb
and
mov
imul
cmp
testb
cltd
ret
pop
mov
ja
lds
pop
ds
inc
or
movsl
or
pop
enter
adc
inc
scas
add
mov
outsb
fwait
mov
cmp
mov
insb
xchg
cmp
mov
imul
cmc
lret
lds
xchg
lret
push
scas
xor
mov
jbe
and
mov
sub
jge
shl
mov
imul
inc
js
push
jmp
xor
int
or
stc
std
mov
push
adc
int
push
mov
xor
test
dec
int3
push
adc
aaa
fwait
push
cmp
mov
aad
xchg
push
imul
hlt
xor
pusha
call
cmp
jl
push
jp
xor
decb
jecxz
ret
cli
jbe
dec
cmp
negl
xchg
pusha
js
inc
inc
adc
adc
adc
sbbb
hlt
les
imul
cmp
cmp
lret
xchg
cs
testb
jge
add
addr16
incb
andl
add
fninit
cld
xlat
repnz
dec
fwait
hlt
and
pop
or
and
mov
push
je
mov
cmp
dec
lods
add
push
dec
and
je
into
cmp
push
loopne
cli
into
pop
loope
imul
mov
push
leave
ds
roll
inc
addr16
mov
imul
test
pop
jb
es
cli
aam
cmp
loopne
xchg
jae
outsb
aas
repz
mov
out
hlt
out
andl
ret
xchg
fcompl
lcall
sbb
mov
scas
add
or
dec
xor
mov
pushf
lcall
aam
cmp
jp
mov
jp
ljmp
push
jae
pop
mov
add
jg
xor
adc
pusha
jle
jnp
cld
lret
or
ss
push
lea
adc
lret
stc
sbb
or
xchg
mov
sub
sub
jmp
jp
inc
test
push
cmp
sarb
repnz
imul
je
movsl
adc
ficompl
and
addr16
repnz
rcll
scas
xchg
adc
mov
xor
mov
mov
mov
mov
and
imul
push
rcr
stc
mov
push
cwtl
inc
dec
fcmovu
fstpl
cmp
outsb
jnp
xor
jecxz
sbb
jecxz
jmp
or
ret
pop
into
insb
lea
rorl
not
add
xchg
faddl
add
fimuls
test
ficompl
arpl
xchg
pop
inc
sete
lea
cmp
addr16
sub
mov
jge
mov
arpl
jae
cld
test
xor
shl
cmp
stc
cmpsl
adc
rorb
rcrl
cmp
mov
push
movsb
inc
and
iret
push
push
xchg
in
pop
adc
call
push
xor
fwait
je
inc
push
popf
jp
and
mov
aaa
inc
inc
xor
je
push
sub
push
call
mov
push
insl
nop
mov
cli
cmpsb
xchg
sbb
int
enter
mov
push
lock
mov
jae
xor
aam
jns
jns
sub
mov
movl
push
dec
xchg
and
pushf
inc
in
ss
xchg
mov
jne
cs
movsb
pop
in
pop
in
pop
mov
adc
das
in
pop
insl
mov
xor
mov
in
stos
xor
lahf
repz
add
mov
jmp
mov
bound
lods
add
add
pop
dec
pop
rolb
in
cltd
jg
dec
aaa
adc
sbb
cwtl
pop
notl
icebp
lds
idivb
lahf
xor
xor
pusha
push
xchg
arpl
xor
pushf
push
ds
movl
push
inc
cmc
aas
std
mov
push
pop
or
pop
cmp
cmp
psubsb
mov
cmp
xor
push
aad
loope
pusha
test
pushf
jne
add
cwtl
testl
mov
xor
jbe
push
insb
dec
arpl
adc
ja
jecxz
adc
pushf
jno
pop
mov
lods
sbb
loopne
sbb
add
push
int3
pop
mov
cwtl
push
int3
insb
mov
aad
or
stc
cltd
mov
add
dec
mov
xor
lahf
jle
dec
xchg
push
sbb
fldcw
dec
adc
fildll
jmp
lock
je
jo
insl
and
stos
mov
fsubp
sti
decb
xchg
scas
or
sahf
js
hlt
jg
data16
fdivrl
push
lahf
in
fsubs
fbstp
es
ja
into
dec
adc
mov
pop
pop
xor
shr
pop
jge
sahf
insl
pop
data16
pop
addr16
dec
inc
outsl
adc
notb
insl
add
cmpsb
fldcw
fcomp
sub
gs
jg
dec
data16
or
pop
jne
test
ret
movsb
mov
or
psadbw
mov
jmp
outsb
clc
or
aad
push
push
dec
mov
faddp
pop
fnstsw
cmpsb
push
mull
pop
shl
xor
pop
iret
lods
and
and
xlat
jp
dec
jge
repnz
fcoml
test
dec
and
add
test
inc
in
scas
or
lods
cmp
mov
inc
xchg
neg
cld
cwtl
and
aaa
pusha
mulb
inc
and
pop
imul
popa
clc
popa
fisubl
fdiv
outsl
nop
lahf
bound
sbb
jp,pt
xchg
movsl
sti
mov
divl
nop
and
dec
pop
adc
sub
sti
out
les
jns
movsb
mov
xor
xchg
jl
xchg
pop
add
enter
cmp
mov
scas
lahf
es
add
xor
gs
ret
xorb
cwtl
ja
mov
adc
pop
sub
int3
mov
insb
cld
and
fcomps
fidivs
xchg
add
mov
jge
xchg
sti
jns
jno
pop
push
jno
cmp
fisttpl
das
cltd
push
mov
pop
xlat
push
and
inc
outsl
scas
cld
or
sub
into
je
adc
mov
stos
in
daa
stc
push
icebp
sbb
xchg
sub
lods
dec
lret
cmc
ret
cltd
cld
pop
clc
pop
outsb
mov
sbb
jecxz
pop
cmpsb
dec
push
imul
cmc
aas
add
adc
rorb
dec
or
lea
push
pop
cmp
das
out
mov
xchg
pushl
inc
addr16
push
push
sub
aaa
fimull
in
sarb
and
xlat
xchg
ja
test
in
lahf
jmp
lcall
sbb
lahf
sbb
sti
xchg
pusha
daa
dec
xor
push
cwtl
les
sbb
clc
scas
lahf
clc
jnp
rorb
or
xchg
push
fistpll
dec
inc
or
js
enter
xchg
mov
cmp
mov
out
lds
mov
mov
and
aaa
mov
stos
int3
fstpt
jg
add
mov
addl
sbb
adc
inc
xchg
mov
jl
jmp
into
dec
rcrl
xchg
xchg
cli
adc
sub
lods
pushf
sbb
pop
imul
inc
cwtl
insb
fnsave
bound
or
insb
push
add
icebp
mov
sub
fnop
enter
cmpsb
das
mov
inc
les
scas
data16
in
in
push
sub
cmp
mov
add
outsb
jg
insl
imul
dec
aam
mov
rcrb
divl
sub
push
test
fwait
ret
imul
int3
out
shrb
mov
jge
adc
mov
or
ja
mov
ds
insl
fwait
adc
xchg
movsl
sub
sti
fldl
std
sub
dec
pop
push
mov
mov
popl
add
dec
or
inc
xlat
cmp
xor
fisubl
cmp
insb
jno
lcall
xor
lds
add
sbb
dec
xor
shlb
jae
aaa
popa
xchg
loopne
in
out
mov
xchg
repz
sbb
in
jmp
ds
imul
iret
and
pusha
pop
inc
das
mov
fidivrl
lret
sbbl
shl
push
or
push
mov
les
test
cmpsb
gs
andb
pop
scas
add
pop
cmp
pop
not
push
inc
xchg
lds
xchg
imul
adc
popl
or
shrl
sbb
adc
mov
inc
mov
cmp
andl
les
scas
es
int3
loope
clc
mov
dec
es
std
jbe
pop
cmpsb
mov
insb
ret
dec
jge
rolw
lahf
inc
sarl
fs
loope
sbb
je
inc
mov
xchg
cmp
sbb
psubw
xchg
inc
adc
fbstp
fmuls
or
insl
sahf
jge
xchg
xchg
dec
stc
sub
add
pop
fwait
lret
addr16
mov
and
and
and
cltd
ret
aad
test
sbb
sarl
loopne
or
dec
jle
cmp
sarb
jge
inc
mov
push
scas
jae
and
push
dec
pop
repnz
cwtl
shrl
icebp
data16
mov
push
sub
mov
jmp
push
inc
fldcw
divl
in
ja
mov
leave
lahf
lock
sbb
into
xlat
ret
fsub
cmp
les
pop
mov
addb
pop
cmc
push
fmull
fwait
dec
push
push
xor
mov
in
inc
nop
jle
nop
cltd
arpl
and
mov
sbb
loope
cmp
sbb
mov
addb
nop
test
daa
inc
aad
test
mov
pop
es
xchg
mov
or
bound
ljmp
sub
test
ljmp
sti
mov
inc
shrl
lea
push
xor
add
hlt
jl
adc
sbb
lds
pop
pop
xchg
xlat
dec
jl
inc
xor
jmp
sbb
das
jo
pop
lock
pop
call
inc
dec
bound
pop
pop
sbb
mov
pushf
jbe
scas
jge
jnp
mov
fwait
mov
adc
andb
sbb
sub
xor
iret
jp
push
pop
mov
jbe
sti
jnp
data16
cli
cli
stc
or
mov
enter
add
ret
sbb
xchg
bound
out
push
negb
add
call
popf
jmp
cmp
jne
xchg
mov
aaa
mov
outsl
pop
subb
inc
xacquire
push
sub
sbb
jge
scas
inc
ljmp
inc
lahf
in
inc
and
or
pop
pop
xchg
pop
adc
inc
push
sub
scas
push
and
push
cmp
jno
mov
sub
repz
mov
test
xchg
aaa
xor
icebp
fadd
cltd
push
ss
cmp
loop
jp
jg
loop,pn
rcrl
jb
mov
lret
mov
lcall
aaa
push
pushf
stc
fbstp
add
lea
mov
adc
add
mov
or
lret
xchg
gs
mov
addr16
cli
arpl
negb
inc
cmp
dec
mov
xchg
cmp
push
push
add
loop
inc
aam
fwait
lahf
fidivrl
pop
jne
jmp
pop
mov
xor
sbb
bound
and
aad
mov
aam
mov
xor
pop
vcvtps2qq
jne
cli
mov
xchg
sbb
jp
xor
adc
subb
jle
andl
pop
aas
into
loope
fiadds
and
or
xchg
sub
xlat
cld
jecxz
dec
roll
or
adc
or
fidivrl
cltd
or
stc
stos
and
push
mov
mov
cmpsb
lret
dec
push
in
dec
jge
add
cltd
mov
sbb
cmpsl
sbb
push
add
xor
mov
scas
push
hlt
test
roll
fisttps
sbb
inc
bound
push
and
cmpb
jae
jge
push
cli
add
jg
or
insb
push
jb
movb
gs
in
imull
mov
sbb
cmp
insl
nop
mov
jae
cmc
mov
clc
les
push
sarl
inc
mov
jge
fabs
dec
fstpl
jmp
jns
xchg
cmp
mov
icebp
jns
movsb
mov
and
push
es
enter
inc
bound
fs
cmp
sahf
cltd
xchg
xchg
int
ret
add
xchg
aam
data16
ret
sbb
aas
or
popa
pop
notb
sub
adc
push
xchg
jnp
clc
in
jns
push
jge
ss
ss
push
fcomps
add
loope
das
xchg
rcl
int
pop
imul
lds
fdivr
in
inc
ret
js
xorl
mov
jb
inc
ret
pop
pop
out
enter
jecxz
jmp
and
push
xchg
push
fs
aad
test
jnp
xor
xchg
jmp
inc
insl
sbb
pop
cmp
add
inc
xorb
xor
adc
fld
xchg
add
scas
int3
inc
mov
pushf
out
xchg
out
aaa
pop
data16
aad
dec
jecxz
mov
aas
inc
ljmp
xlat
aaa
sahf
or
jle
scas
adc
sbb
loopne
inc
mov
ret
sarb
pop
push
lret
xchg
iret
cs
pop
cmp
or
xchg
dec
dec
fsubrs
dec
scas
xor
pop
mov
fcomps
xchg
shrb
inc
sarl
test
jg
enter
add
clc
not
aad
loope
sub
adcl
mov
jbe,pt
cmp
sub
popa
lods
mov
int3
dec
sub
outsl
adc
mov
js
pop
dec
imul
mov
push
and
and
sub
cmp
xor
mov
inc
out
pushf
movsl
pop
not
jmp
les
pop
mov
and
adc
mov
dec
jle
shll
and
aad
bound
dec
mov
loope
push
stos
xchg
jecxz
call
enter
xor
pop
shl
in
imul
adc
scas
movsb
mov
or
pop
dec
insb
scas
mov
sub
test
mov
xor
cmpsl
outsb
imul
push
jle
daa
xchg
bswap
hlt
adc
mov
push
fwait
mov
lea
jl
xchg
mov
push
push
and
in
pusha
pushf
imul
add
sub
js
push
icebp
mov
xor
sahf
loope
and
mov
inc
sbb
and
adc
jle
mov
push
imul
dec
push
push
add
mov
daa
je
push
add
ja
pop
cmp
lds
imul
cmpb
or
mov
arpl
mov
lds
jno
xlat
xor
cld
pop
lods
daa
jmp
ret
mov
cmpsb
cmpsb
pop
dec
aad
push
sub
or
clc
bound
ror
cmp
inc
push
loop
test
xchg
sub
mov
cmpsb
add
jbe
cmc
sub
cmp
adcl
mov
mov
or
movntq
and
outsb
addr16
fldt
and
jns
les
or
mov
cmpsb
aaa
push
lret
jge
jle
arpl
fildll
leave
pop
mov
cmp
adc
fdivp
lahf
push
and
stos
pop
mov
in
fdivp
out
pop
ret
stc
mov
outsb
sbb
or
mov
shr
cltd
imul
or
mov
inc
pop
jle
xchg
xchg
cmp
fwait
xchg
inc
mov
cwtl
and
adc
adc
pop
sub
sahf
out
sbb
push
mov
leave
jnp
jb
adc
rcr
stos
aaa
mov
loopne
and
movsl
dec
cmp
out
mov
cld
mov
int
in
jns
cwtl
mov
sbb
sbb
ja
mov
jo
push
mov
test
repnz
or
add
jmp
jg
fnstcw
repz
orb
rcr
cmp
cmpsb
movl
popl
add
sub
jmp
loop
dec
xor
shl
icebp
daa
lea
outsb
outsl
xorb
pop
sarl
pop
scas
aam
rolb
mov
test
sub
scas
aaa
adc
iret
test
push
daa
inc
adc
icebp
xchg
int
hlt
sub
add
pop
sbb
dec
popl
das
enter
gs
xchg
xchg
adc
mov
in
mov
pop
push
out
ret
cmp
mov
jge
mov
loope
inc
ss
xchg
dec
or
ljmp
shl
fwait
psubb
add
push
js
inc
rolb
mov
xchg
mov
inc
lods
cmp
and
sub
xor
leave
xchg
adc
pop
pop
mov
xor
lcall
mov
fildll
fstpl
cli
mov
xchg
lret
das
aad
mov
enter
or
xorb
push
test
out
mov
adc
sub
and
lcall
test
fstps
imul
pop
movsb
xchg
in
shrb
pop
mov
and
out
loope
xchg
lods
jno
in
rcrl
pop
adc
fldcw
mov
fisubrs
inc
inc
sub
dec
mov
fs
movsb
mov
cltd
xchg
sbb
and
fwait
mov
add
jmp
xchg
and
stc
stc
je
jmp
push
fmuls
cmpsl
lods
or
push
daa
and
lret
jmp
and
int3
cmp
mov
leave
dec
in
push
sub
sub
movsb
mov
divb
inc
mov
xchg
test
in
pop
add
mov
fisttpll
and
xor
and
outsb
pushl
mov
ret
mov
in
jnp
je
or
mov
sbb
mov
fsts
fisubrl
xor
sub
scas
nop
lods
test
push
mov
push
mov
xor
mov
fdivs
js
mov
or
or
dec
adc
mov
repz
dec
adc
rorb
inc
xchg
sahf
push
out
iret
sbb
movzbl
and
pop
or
sbb
pop
sti
pop
dec
aam
cli
and
xchg
out
or
push
xlat
sbb
fwait
test
in
push
or
add
imulb
sbb
imul
fisubl
push
mov
dec
lahf
adc
andl
and
negb
pusha
inc
fmuls
lods
sbb
data16
sub
in
add
rorb
and
sbb
icebp
outsb
sbb
daa
mov
mov
pop
scas
adc
inc
and
maxps
mov
inc
push
fstl
pop
bound
or
in
std
mov
xor
jmp
aaa
stos
cmp
pop
js
aam
scas
mov
xchg
std
pop
cmpsl
arpl
add
popf
inc
in
push
mov
stc
or
push
mov
mov
or
lods
mov
psraw
dec
movsb
shlb
lock
adc
mov
out
icebp
in
ret
aaa
adc
mov
addr16
ret
imul
fisubrl
hlt
pop
cmc
jne
ret
bound
xchg
ficomps
imul
cmpsl
roll
push
loop
ja
fsubrs
adc
pusha
aam
mov
xchg
data16
cmpl
subl
xchg
mov
mov
and
mov
ds
xor
iret
lods
and
idiv
pop
xchg
cmp
and
jl
scas
mov
cmpsl
xlat
mov
into
dec
imul
mov
es
je
dec
scas
mov
cmp
icebp
mov
or
add
lods
pop
hlt
push
lock
inc
or
cmp
inc
scas
dec
std
mov
add
ret
xor
and
into
aam
xchg
insb
jle
xchg
cmp
cli
aaa
cmp
popl
push
cmp
inc
aas
push
mov
test
mov
movsl
mov
inc
push
imul
jp
cmp
mov
mov
hlt
add
aad
adc
sti
mov
frstor
fwait
add
bound
mov
pop
pop
pop
nop
sbb
pop
ja
mov
sub
insl
sbbb
push
xor
js
lahf
add
or
dec
mov
jmp
dec
sti
addb
push
and
lret
notl
cmc
xchg
imul
fiaddl
jge
xchg
stos
iret
imul
push
clc
mov
adc
les
fisttpll
mov
mov
dec
xor
inc
test
sub
xchg
mov
jl
pop
inc
stc
outsl
cwtl
ds
popa
lds
jge
jae
arpl
out
mov
jb
shll
dec
adc
add
fisubrl
jmp
sbbb
mov
ret
mov
pop
rcrb
js
int3
loope
sub
sub
jmp
fisttpl
pop
jbe
jge
xchg
addl
adc
xchg
sbb
add
xchg
mov
xor
add
aad
dec
sbb
jecxz
outsl
jo
insl
or
mov
mov
push
sbbl
aas
das
push
hlt
out
pop
insb
push
add
cmpsb
or
fnstsw
lahf
pop
in
aad
sbb
ret
shl
jbe
lret
clc
aaa
inc
repz
arpl
mov
sar
or
lret
jb
xor
mov
pop
enter
lods
or
into
mov
xchg
or
jge
jo
inc
mov
cmp
adc
xor
jle
shl
cli
push
jno
mov
loopne
shrl
dec
faddp
movsb
into
cltd
xor
addr16
es
loopne
xchg
in
hlt
push
adc
and
sbb
push
hlt
push
jg
xchg
or
sbb
cli
test
dec
cmp
sti
jmp
sub
ja
les
das
inc
cli
outsl
dec
popa
inc
out
pop
xchg
pop
pop
mov
orl
sub
imull
dec
inc
mov
outsb
loopne
inc
push
xchg
imul
xchg
rclb
and
mov
aad
jl
mov
push
sarb
dec
idivb
ja
fisubrl
inc
es
es
push
ficoms
and
sub
loopne
cmpsb
pop
pusha
mov
enter
push
lret
pusha
and
and
lea
sbb
sbb
jae
jne
iret
ja
mov
adc
pushw
movsl
ror
add
add
add
mov
decl
hlt
mov
fwait
pop
sbb
adc
mov
and
sub
data16
movsb
lock
pop
sub
adc
mov
enter
xchg
sub
xchg
cmpsb
jge
hlt
sbb
or
inc
sbb
data16
sbb
sti
inc
rorb
fcmovbe
cs
jns
rorl
or
add
adc
scas
xchg
dec
sub
imul
lods
outsl
xchg
loope
pop
sub
push
lcall
and
pop
sbb
sub
cmp
cmp
adc
cmpsb
loopne
cmp
pop
lods
pop
dec
mov
sbb
mov
mov
pop
sub
add
imul
test
inc
push
clc
push
sbb
negb
xchg
lret
lret
or
xchg
test
leave
mov
notb
jae
lods
scas
inc
push
ds
rcl
hlt
jmp
dec
jg
cmpl
add
cmpsb
pop
daa
cmp
adc
sub
test
icebp
jb
test
outsb
adc
test
fs
lret
ret
imul
adc
shr
test
pop
inc
mov
sub
and
push
fwait
les
sbb
mov
movsb
pop
dec
dec
jg
push
push
aad
jge
mov
andl
les
test
loope
jmp
pop
test
aam
xor
fwait
pushf
sbb
out
fidivl
cli
jno
sub
test
adc
cmp
sahf
add
push
mov
push
cmpsb
movsb
or
sub
and
out
xchg
fnstcw
pop
clc
cmp
ljmp
and
mov
stos
mov
xor
push
inc
lcall
pop
out
sbb
scas
in
std
push
jmp
fdivrs
adc
cmp
add
mov
push
cmp
adc
std
pop
add
into
xor
insb
inc
scas
stos
sbb
jg
mov
push
xchg
in
pop
mov
andl
cmp
mov
std
pop
cmp
mov
pop
xchg
scas
or
int
ja
addr16
popf
push
inc
cld
gs
fdiv
pusha
add
push
ss
insb
xchg
shlb
add
out
push
sbb
jle
pop
or
mov
xchg
pop
mov
dec
push
addl
xor
inc
add
lcall
call
cmpsl
mov
stos
or
aad
stos
jge
jecxz
es
xchg
push
ficoml
cmp
push
push
jne
lret
lea
add
decl
adc
ljmp
sub
aad
pop
mov
or
cmp
popf
sbb
jns
fcmovnu
ss
adc
jmp
stos
jle
sarb
mov
pusha
fsts
mov
jae
testb
mov
jns
mov
add
sbb
xchg
mov
and
mov
xor
clc
test
int
incl
sub
xor
add
iret
lahf
roll
mov
out
inc
pop
sbb
mov
jnp
les
movsb
pop
add
imul
add
repnz
shlb
xchg
sub
push
xor
mov
fdivl
fmul
inc
leave
lock
hlt
add
jle
xchg
mov
es
adc
push
push
movsl
xchg
mov
loopne
pop
cmp
test
pusha
xor
mov
lahf
xchg
inc
outsb
jmp
jne
sarb
dec
rolb
adc
scas
inc
cmp
dec
mov
out
insb
sub
mov
out
sub
stos
or
cmp
pushf
sub
push
mov
movl
dec
jb
or
xor
push
movsl
out
cld
mov
lahf
mov
cmp
xchg
lods
or
mov
pusha
push
inc
int3
mov
mov
lds
add
or
out
andl
adc
xchg
jbe
cmp
rclb
jb
sub
ficoms
test
jnp
jl
outsb
jmp
lods
es
stos
inc
shll
aas
dec
and
out
cmc
jo
sub
mov
arpl
fcoms
push
mov
xor
sarl
out
dec
mov
mov
push
icebp
daa
mov
adc
mov
push
pop
movsl
mov
mov
jecxz
out
cld
cmp
lock
add
adc
fisttps
mov
inc
push
mov
dec
mov
js
jmp
cld
mov
inc
mov
test
add
in
lret
mov
paddb
jge
xor
ljmp
je
clc
xor
add
fs
sub
jle
pop
cmp
sbb
xchg
jge
jp
ret
sbb
filds
xchg
jo
dec
fidivl
paddb
cmp
lahf
test
jnp
inc
in
aam
rorb
mov
movsl
in
push
jno
aad
ja
outsb
adc
push
cld
xchg
fs
int3
movsb
mov
pop
pop
loop
imul
sub
xchg
inc
xchg
add
stc
loope
lock
or
aaa
negl
cmp
leave
pop
cmove
xchg
pop
aam
cld
fmull
adc
jb
adc
lret
cs
enter
popa
faddl
lds
push
mov
pop
int
and
fcoml
mov
into
div
jecxz
adc
inc
xchg
in
pop
lods
pop
xor
jp
inc
and
dec
insl
outsl
xchg
mov
int3
or
push
pop
dec
repnz
sbb
adcb
ja
test
shrl
push
sub
lock
hlt
mov
aas
push
icebp
jno
into
stos
jno
pop
sahf
sbb
jnp
out
fwait
insb
popf
dec
xor
xchg
sbb
xor
hlt
push
test
sbb
pusha
jge
dec
sub
cs
in
add
addb
or
pop
subb
mov
cmc
jg
lods
sub
add
sub
aaa
cmp
mov
mov
flds
stos
mov
sbb
div
push
mov
aam
mov
jmp
pop
cltd
in
loop
xchg
repz
xchg
add
cmc
cmp
pop
test
cli
dec
adc
pop
arpl
sub
cmp
jle
pop
sbb
push
mov
push
or
cwtl
push
jg
gs
or
dec
jl
adc
adc
inc
out
sbb
std
xor
out
call
lahf
adc
jae
mov
jmp
sub
or
inc
rcrb
jo
cs
mov
push
push
fimull
test
or
pop
xchg
mov
mov
in
daa
cwtl
sbb
and
addr16
adcb
sbb
pop
mov
popa
clc
mov
cmp
sub
adc
orps
std
xor
scas
mov
sub
in
addr16
sub
cmc
enter
mov
inc
mov
mov
jg
cmpsl
xchg
pslld
and
or
int3
mov
mov
and
stos
loopne
pop
mov
pop
dec
testb
xchg
pusha
xor
fstpl
cli
inc
addr16
fincstp
pop
add
mov
stc
arpl
cmp
imul
fwait
add
xchg
xchg
enter
je
popa
call
gs
jg
and
sub
push
rclb
sbb
icebp
cmpb
lock
mov
xchg
add
es
mov
jae
shrb
xorl
push
sti
dec
repz
fnsave
mov
mov
sbb
inc
xchg
subb
daa
aad
mov
or
or
xchg
add
xor
test
loop
mov
in
sbb
dec
pop
xlat
cli
mov
jl
cmp
popf
mov
sub
or
loop
or
sbb
gs
fcoml
xchg
outsl
daa
sarb
cmpsl
lea
jns
xchg
das
add
sub
inc
sbb
or
cmp
in
mov
push
fs
mov
sub
in
sub
gs
dec
call
test
sbb
test
xchg
fs
arpl
cmp
adc
fcmove
cmp
add
mov
lcall
lahf
adc
mov
pop
sarl
das
jns
ss
testb
rcrl
mov
lret
jno
adc
loopne
sub
outsl
fbld
leave
loop
pop
xor
cs
imul
mov
rcr
pop
inc
ds
ljmp
or
les
adcl
push
into
adc
movsb
scas
inc
mov
mov
mov
mov
pop
push
xor
push
jg
aas
cmp
andb
mov
pop
aas
adc
dec
into
cmp
push
incl
and
jne
sub
dec
es
add
sbb
push
aad
cmpsb
mov
mov
imulb
dec
jo
fnsave
pop
jecxz
insb
or
mov
mov
rcr
lock
push
hlt
lods
sub
push
jmp
mov
adc
std
inc
out
push
push
clc
sbb
mov
fistpl
xor
push
pop
mov
movb
sti
cltd
cwtl
aad
loop
mov
nop
xchg
mov
out
ret
sti
xor
jb
popa
xor
data16
aad
jne
test
ror
sti
stos
fdivr
ror
jns
mov
dec
test
adc
scas
jge
mov
sti
popf
fstl
sbb
mov
mov
sbb
jnp
in
cmpsl
andb
pop
cmp
sub
int3
mov
outsl
adc
or
xchg
hlt
mov
in
mov
cs
ja
mov
scas
shlb
lahf
aaa
mov
push
adc
mov
adc
mov
inc
xchg
sbb
jecxz
inc
or
test
jmp
aam
loopne
std
ss
inc
dec
in
in
fimull
enter
test
sbb
mov
sub
arpl
or
jo
inc
mov
test
call
mov
lods
je
out
mov
jne
mov
outsl
cld
pop
inc
mov
addr16
pop
rclb
enter
sahf
dec
jbe
lock
int3
gs
mov
movsb
pop
mov
in
adc
cmp
sahf
flds
loop
aas
mov
xor
jo
stc
sbb
push
push
out
outsb
pushaw
mov
ljmp
mov
xchg
sub
pop
inc
mov
adc
jbe
add
or
cld
mov
enter
push
xor
jo
adc
push
loop
mov
js
int
push
adc
lahf
or
daa
mov
pop
inc
pop
push
mov
inc
stc
cltd
mov
fsts
dec
sbb
shlb
hlt
daa
leave
jmp
sahf
jmp
rclb
jp
jbe
dec
shr
pop
ret
lods
fs
sub
push
push
xchg
cmpsl
mov
add
sarb
xchg
sub
or
mov
push
cmp
jno
sub
xchg
in
in
adc
lcall
sbb
mov
dec
enter
pop
xchg
push
xchg
repnz
fisttpll
hlt
xchg
test
jb
outsl
aas
std
dec
sti
push
lea
ret
push
mov
rorb
mov
btr
and
aam
mov
arpl
xchg
pop
dec
mov
inc
mov
cmp
and
jae
mov
cli
jp
pop
out
cmpl
in
aaa
jb
outsb
fcoml
pop
aaa
lret
sbbl
xchg
repz
xchg
mov
push
out
cmpsl
jnp
rcr
pop
mov
or
cmp
movsb
in
sbb
out
gs
sbb
or
or
pop
ds
push
test
dec
or
mov
inc
insl
mov
out
mov
and
inc
mov
xchg
inc
pop
inc
rcl
jmp
setnp
fsub
mov
jge
cmp
jmp
add
jne
fsts
in
sbb
and
outsl
adc
daa
out
dec
test
fmul
sbb
popf
mov
or
adc
out
sbb
in
outsl
xchg
mov
cmp
notb
pop
bound
push
add
push
sbb
loop
push
dec
xor
insb
js
test
pop
out
mov
insl
imul
jge
andl
xchg
iret
add
pushl
cmp
jo
jne
scas
fnstsw
jmp
push
dec
cmp
jne
mov
pop
mov
in
hlt
cmp
cmp
sub
sub
xor
push
out
inc
fsubrl
push
mov
arpl
jmp
lds
push
pushf
outsb
cmp
testl
daa
xchg
xor
jo,pt
sub
mov
lods
shrl
jge
lret
sarb
or
fcomps
rorb
insl
enter
add
hlt
pop
ret
inc
mov
jne
pop
cmpsl
xor
cmc
add
loopne
adc
scas
add
push
cmpsl
psllw
lahf
mov
pop
fimull
pop
lret
and
mov
mov
sbb
inc
leave
leave
test
pop
push
sub
jecxz
jbe
out
or
int3
push
fcmovb
lret
iret
xor
adc
add
cmpsb
shrb
outsb
out
push
jge
dec
shr
fucomp
bound
dec
jle
aaa
std
aas
or
in
testb
cmp
sbbl
clc
dec
in
inc
mov
fcompl
lds
adc
test
enter
xlat
sub
jne
xor
add
mov
cmp
jb
gs
jae
repz
fwait
notl
sub
cmp
cmp
ja
pop
mov
in
mov
sbb
adc
cmp
out
jbe
inc
fnstcw
aaa
sub
in
bound
or
jmp
fdivp
mov
jge
xchg
scas
pop
mov
sub
mov
inc
pusha
xor
push
call
or
repz
cli
stos
movsb
daa
insl
mov
jle
mov
outsb
xor
push
add
jg
xchg
adc
clc
popf
mov
xchg
xchg
lcall
jmp
popf
jmp
insb
xor
data16
cltd
test
sub
stos
scas
aam
cmpsb
jge
push
je
xchg
mov
fdivs
lcall
cmpsb
dec
sarl
sbb
jge
jecxz
sbb
les
fstl
pushf
lods
pusha
mov
push
loope
xchg
imul
xor
daa
jae
adc
mov
and
mov
push
pop
add
fidivl
xchg
pop
inc
lods
or
data16
int
mov
add
adc
out
push
enter
hlt
daa
call
test
scas
cmp
mov
movsb
ljmp
fcmovnbe
push
mov
andl
dec
leave
sbb
sub
lcall
cs
inc
adc
lahf
cltd
push
jecxz
ja
test
call
mov
ja
mov
xchg
repnz
movsl
mov
sti
test
cltd
in
mov
mov
sub
daa
jb
and
in
in
dec
fcomps
dec
cmp
outsb
sbb
outsb
lds
cli
or
stos
cmp
and
mov
mov
stos
pop
aas
mov
ljmp
jnp
adc
xchg
cltd
int3
mov
mov
jnp
fwait
mov
pop
sub
out
push
loop
add
inc
ds
xlat
stos
in
mov
mov
daa
xchg
xchg
pop
rcll
dec
xor
mov
sbb
pop
mov
imulb
inc
jg
mov
or
insb
add
lret
dec
mov
outsl
inc
sahf
loope
out
bound
lods
pop
dec
sbb
push
cmp
mov
int
out
cli
lea
pop
ret
inc
xchg
push
dec
sub
in
jo
push
push
sbbb
lods
or
shrb
cmp
pop
test
subb
aaa
dec
ds
mov
fs
outsl
mov
repnz
stc
jne
mov
ja
add
ss
cmpsb
loop
jle
push
out
bound
xchg
rcr
xchg
clc
cmpsl
mov
movsb
fs
sti
cli
shlb
mov
mov
pop
lret
pop
pop
xor
add
jl
les
mov
call
test
xchg
xchg
lcall
mov
fcmovu
or
call
imul
cltd
xor
fdivl
ret
cmpsl
inc
or
in
sahf
xchg
mov
xor
and
and
inc
dec
test
aam
ja
mov
xor
mov
xor
mov
loopne
into
das
mov
mov
jb
lock
cwtl
push
push
es
icebp
and
aam
fdivr
out
xchg
mov
mov
jge
in
xor
push
mov
aas
popf
scas
xchg
mov
xor
jecxz
mov
inc
mov
scas
jmp
inc
popa
dec
sti
mov
mov
push
enter
shll
pop
addr16
add
xchg
mov
ror
movsl
int
pop
pop
int
dec
lods
in
out
bound
pop
add
add
inc
aas
mov
cmp
dec
aaa
test
jns
aad
xor
out
jbe
fdivrs
sub
scas
jnp
push
or
push
cmp
pop
push
sbb
in
xlat
pop
mov
xchg
test
negl
push
push
ret
mov
repnz
jae
imul
scas
into
sti
xor
jb
fdivrp
cli
test
pop
leave
aaa
inc
sub
sbb
xchg
rolb
cmpsb
mov
and
fsub
cmp
idivl
rorb
lds
lods
sub
sub
sub
hlt
adc
xor
nop
pop
outsb
jno
out
neg
outsl
negb
cmc
scas
cld
dec
je
pop
rorl
cmp
mov
gs
lret
inc
or
push
out
sbb
xor
and
cmp
sub
mov
iret
dec
xor
xchg
into
je
add
jecxz
mov
xchg
decl
jnp
ficoml
mov
xchg
ljmp
out
in
adc
push
js
push
ret
dec
fwait
jbe
insl
lcall
in
push
jge
push
addr16
mov
std
xor
dec
pop
mov
and
test
push
cmpsl
faddl
pop
dec
int
xor
ljmp
imul
xlat
xor
out
out
push
xlat
sub
mov
popf
sbb
ret
xchg
daa
loope
sbb
hlt
mov
mov
js
bound
add
out
out
mov
testl
dec
xor
cmp
jecxz
jp
js
mov
jns
mov
lret
enter
sub
fsubs
repz
vptestmw
bnd
imul
arpl
and
dec
aam
inc
sub
xor
inc
xor
and
int3
cmp
test
xchg
cmc
popf
sti
and
cld
mov
lahf
ret
or
adc
dec
shlb
push
inc
adc
add
scas
dec
inc
rorl
je
xor
loop
sbb
jae
xchg
iret
das
test
pop
and
jne
outsl
mov
xor
cld
and
xor
stos
xor
lods
fbstp
outsb
std
xor
inc
push
rolb
or
mov
adc
jle
aaa
sbb
xor
cmpb
scas
push
xor
adc
and
ror
pcmpeqd
sbb
int
imul
movsb
sbb
fcomip
scas
sub
xorl
push
push
pop
add
inc
xlat
fsub
movsb
ljmp
jne
out
pusha
dec
inc
xlat
lret
stos
push
imul
out
sub
xchg
iret
ljmp
pop
mov
add
dec
repz
data16
enter
or
dec
pop
jg
daa
jae
inc
jns
repnz
pop
cmp
outsl
scas
inc
mov
xor
dec
mov
subl
cmp
mov
psubusw
inc
pop
and
jl
adc
shll
sub
shrl
jns
aam
ljmp
fildl
mov
mov
pop
lret
jmp
or
inc
sti
andb
lods
rolb
ja
dec
jecxz
addr16
imul
test
les
lret
mov
je
cmpsl
sbb
cli
test
xchg
clc
cld
ficoms
fisttps
jmp
sub
shll
cmpsl
inc
xor
fwait
inc
push
cmp
cld
inc
shll
out
inc
sbb
lahf
xchg
mov
jl
push
jno
sbb
jb
incb
push
push
cmp
fcoms
clc
fistpll
pop
pop
loope
inc
aaa
shl
xchg
pop
xor
fwait
std
sbb
fwait
popf
push
ss
outsb
addl
jg
push
fisubrs
jp
movsl
mov
aaa
sbbl
fldcw
pusha
dec
jmp
ror
push
lahf
out
sub
faddp
xor
ret
and
mov
out
and
lock
cmc
inc
aam
arpl
iret
mov
xchg
jne
cmc
sbb
xchg
mov
mov
sbb
and
sub
and
stos
clc
sbb
outsb
add
sub
rorl
mov
daa
loope
popf
pushf
ja
outsl
pusha
test
mov
push
cmp
jl
lods
aas
into
scas
adc
js
jmp
cmp
sbb
xchg
lock
xor
add
mov
data16
push
adcl
dec
inc
or
fistpl
fs
adc
ja
jbe
mov
adc
divl
mov
cmp
aas
test
aam
lods
hlt
sbb
inc
bound
imul
cmp
lahf
test
jnp,pt
jbe
xchg
into
imul
scas
pop
sbb
push
test
mov
in
das
cmp
popa
loop
and
es
push
mov
mov
call
cmp
cmp
mov
fmul
pop
test
xor
jmp
lock
jns
mov
mov
scas
push
sub
nop
xchg
insb
test
in
es
daa
jecxz
nop
je
je
cmp
sub
pop
xor
sahf
in
rcll
add
mov
pop
cltd
sbb
xchg
int
imul
jo
jge
xor
mov
bound
jne
pop
mov
jbe
out
pop
pop
and
and
jns
jmp
pop
loop
les
mov
sub
loop
mov
jb
push
mov
loope
push
adc
add
out
into
insb
or
fwait
leave
and
insl
jns
lcall
fldenv
pop
sti
pop
xchg
push
sbb
adcb
aas
fdivrs
jle
iret
mov
cmp
sbb
mov
and
test
in
in
mov
sbb
and
jl
lahf
dec
loope
lret
pop
jmp
pop
jmp
jp
mov
jge
jmp
mov
subl
imul
in
jp
arpl
jno
fdiv
mov
mov
pop
insb
out
sbbb
loopne
in
dec
sub
subl
enter
lods
cmp
jmp
push
cmp
test
imul
or
pop
loopne
pop
cmp
cmp
xchg
cli
cmpsl
scas
enter
lock
test
test
or
inc
inc
es
push
fcompl
enter
outsb
repz
sbb
mov
addb
mov
cmpsb
js
push
mov
cmp
movsl
mov
in
mov
sbb
or
sbb
lds
mov
cmp
and
imul
push
xchg
call
sub
lret
jl
movsl
xor
mov
jp
adc
stc
js
inc
add
inc
inc
orb
push
cmp
or
dec
gs
and
jnp
sub
dec
daa
arpl
dec
ss
dec
jg
pop
sub
fdivrs
ret
mov
pop
cltd
lock
sbb
testl
dec
lcall
fdivl
mov
ss
stc
push
into
jb
pop
or
fsubrl
cmp
ret
sub
jne
jge
inc
fsubp
icebp
lcall
arpl
push
xor
leave
cltd
push
mov
popf
cld
ja
inc
sbb
push
aas
je
fistl
add
adc
jne
in
adc
push
pop
pop
rcrb
add
movsl
andb
and
fwait
or
jecxz
insb
and
pop
cltd
sub
lret
rol
lds
daa
aaa
mov
xchg
into
les
cmp
push
and
int
jl
es
fwait
mov
add
or
cmp
push
pop
dec
ret
jecxz
lret
pop
mov
ret
dec
mov
mov
loopne
or
push
add
movsl
push
mov
popa
xorb
mov
js
adc
outsl
inc
adc
push
mov
mov
mov
iret
dec
dec
dec
adc
cs
xchg
dec
aaa
sbb
sbb
xchg
out
es
in
mov
andb
or
inc
mov
add
mov
ds
scas
std
pop
loopne
xor
inc
xchg
mov
pushf
jno
ss
adc
jae
push
jl
add
jnp
pop
sahf
push
fisttpl
push
pop
fwait
sbb
sub
ss
stc
mov
jmp
movsl
push
sahf
mov
xor
pop
add
pop
xchg
popa
pop
popf
mov
cmp
and
add
jno
gs
out
xlat
xchg
adc
pop
cmp
aaa
movsl
stos
je
pusha
push
sbb
cld
sub
daa
jle
lods
sbb
cmpsb
lret
xchg
inc
fdiv
push
pop
xchg
mov
imul
ret
imul
or
xchg
sahf
gs
add
adc
ret
nop
add
xlat
mov
inc
jmp
jl
lods
pop
das
cmp
mov
call
sub
mov
fdivrl
and
and
int3
ja
adc
and
insb
pop
cmp
ficoml
push
xchg
cmpsb
cmp
and
ret
test
mov
int3
xor
inc
jmp
pop
xchg
test
jne
sbb
ds
push
xchg
cwtl
xor
out
scas
sub
cltd
mov
lods
inc
lret
xor
dec
add
inc
pop
or
mov
push
inc
mov
cmp
mov
ja
sub
in
sub
fldt
sbb
fcomp
insb
adc
pop
pushl
lret
jl
fdivp
mov
mov
cmp
xchg
in
inc
adc
push
add
std
inc
pusha
mov
call
negl
pop
popa
or
addr16
dec
jmp
sub
mov
inc
ljmp
xchg
pop
shl
out
movsb
popa
push
jmp
clc
mov
in
add
xor
push
mov
repz
in
mov
data16
mov
mov
dec
into
mov
push
cmp
cmp
or
jl
popa
cmpsb
in
adc
mov
lea
and
or
add
add
cmpsb
lret
mov
aas
fldenv
popf
mov
std
dec
jnp
test
divb
ret
mulps
cmp
and
xor
cli
jmp
pop
lret
nop
sbb
and
sub
jp
out
pop
mov
jae
or
test
jnp
adc
test
repz
pop
and
pop
pushf
nop
push
cmpsl
mov
fmuls
add
cmp
cmc
call
dec
test
in
and
dec
push
negl
imul
sbb
stos
insb
mov
push
test
arpl
test
cmp
add
pop
mov
aaa
adc
inc
adc
push
jecxz
push
mov
xor
aad
loope
out
mov
test
ret
mov
or
mov
fldl
cmp
push
cmp
popf
aas
mov
jl,pt
and
sbb
mov
push
push
ja
mov
mov
and
arpl
and
cmpsl
inc
inc
cmp
xor
ljmp
lahf
shrb
rcll
xor
push
cmp
xchg
mov
mov
stos
pop
mov
sbb
lods
rorl
shll
lds
sbb
xor
test
aas
jbe
sarb
jae
lahf
outsb
test
ret
inc
repz
call
out
dec
or
pop
fsubrs
fists
and
das
jne
push
xor
stos
das
push
pop
adc
subb
hlt
mov
stos
inc
jg
hlt
adc
test
out
lea
outsb
sub
ds
or
inc
loope
push
les
xor
ljmp
or
cmp
ffreep
or
aas
jo
sub
xor
xchg
dec
jno
jmp
cmpps
clc
inc
sub
and
lods
in
test
push
loope
mov
jecxz
jbe
shrb
xchg
fidivs
jnp
push
mov
xor
repz
jecxz
daa
mov
jno
out
push
cltd
cmp
mov
mov
in
sub
sbb
xchg
and
add
cmp
cmc
xor
movsl
outsl
shrl
adc
dec
and
cmp
ret
bound
pop
adc
dec
mov
in
movsl
call
jbe
push
jmp
lods
outsb
add
call
mov
mov
out
mov
sbb
mov
daa
sub
xor
into
jnp
cli
inc
inc
sbb
jg
rcrl
bound
inc
dec
xchg
mulb
xchg
out
dec
push
stc
pop
push
gs
sbb
ljmp
fisubrs
daa
in
sti
or
cwtl
mov
leave
sarb
mov
xchg
aas
and
imul
fidivs
ds
movsl
sbb
mov
imull
pusha
punpcklwd
push
rcrb
and
pusha
mov
in
fisttpl
je
jno
mov
and
sub
call
daa
cwtl
cwtl
push
fnstcw
lods
out
dec
rclb
leave
jo
or
outsb
shr
test
sbbb
sub
icebp
sub
out
mov
in
enter
push
cwtl
popa
idivb
lret
int
cmp
add
fstps
popf
test
pop
insl
rorl
xor
mul
xchg
push
jno
jg
xchg
or
or
int3
aas
lock
outsb
sub
aaa
es
dec
in
xchg
loope
js
pop
cmovp
dec
mov
lods
scas
mov
sahf
cmp
stos
push
insl
pop
add
sbb
adc
scas
je
aam
inc
and
rcll
ror
aas
sbb
hlt
mov
or
sub
sbb
sbb
or
hlt
jecxz
or
push
inc
test
and
mov
cmp
int3
jbe
add
dec
or
mov
rcll
inc
daa
mov
mov
fld
outsb
cmp
data16
ret
lea
pop
gs
inc
jno
dec
daa
lret
jmp
sub
add
push
pop
jle
cmpsb
test
xor
loop
stos
add
rolb
push
pop
cmpsl
pop
movsb
adc
icebp
or
sti
popa
mov
iret
bound
mov
popf
outsb
shlb
mov
loopne
stos
faddl
lds
inc
mov
push
cmp
cltd
sbb
into
and
js
or
adc
adc
jmp
fwait
xchg
das
mov
mov
or
fists
repnz
lahf
ficoms
int
mov
cmp
pop
sub
ret
cmp
rcrl
mov
mov
jne
dec
cmp
movsb
jno
pop
mov
cmp
jge
testb
and
cwtl
or
push
aaa
sbb
shrb
cmpsl
jae
and
mov
repz
dec
mov
shlb
inc
push
dec
stos
das
push
sti
into
pop
push
ret
test
rolb
mov
pop
push
jns
arpl
cmp
mov
ret
mov
gs
ret
cld
lock
fdivp
and
and
adc
jnp
repnz
popa
js
adc
stc
test
ret
mov
js
rclb
sbb
sbb
sbb
jne
inc
push
stos
imul
jl
adc
or
jmp
jp
fiaddl
icebp
mov
test
xor
push
nop
icebp
push
hlt
in
ja
xchg
mov
inc
fcmovu
dec
lahf
mov
xchg
pop
hlt
add
xor
pop
stos
lock
xor
imul
lock
dec
repnz
jno
rcrl
jno
leave
mov
adc
or
push
aad
inc
addr16
mov
adc
fbstp
xchg
push
or
stc
js
mov
jo
test
sub
int3
into
loop
in
in
int
mov
dec
jno
xchg
sbb
les
add
test
sahf
imul
inc
cltd
imul
and
jae
or
mov
dec
outsb
sub
push
test
mov
mov
xchg
lods
xchg
mov
int3
test
pop
push
inc
pop
sbb
cmp
dec
or
stos
hlt
add
xor
bts
cmc
in
test
lret
push
add
jecxz
sahf
fldcw
sbb
dec
sbb
in
leave
xor
inc
repz
jge
mov
cltd
adc
int
fsubs
xchg
inc
cmpb
pop
add
fwait
arpl
pop
repnz
mov
mov
mov
adc
jl
xor
push
mov
adc
jle
cmp
das
sbbl
andb
add
and
push
jmp
cmpsb
fistl
or
mov
stos
inc
mov
add
mov
cs
out
dec
pop
mov
repz
and
mov
push
lock
pop
xchg
cmpsl
test
loope
loop
jns
mov
test
pop
mov
mov
fcmovb
loope
lods
ret
nop
mov
mov
adc
dec
sub
sbb
adc
sub
adc
xchg
test
out
es
repz
push
out
scas
mov
inc
inc
movsb
inc
out
sbb
bnd
fnstenv
cmp
ja
or
mov
mov
push
cmpsl
push
je
stc
and
shlb
in
pop
movsb
ficoms
addr16
cmp
add
or
int3
mov
lds
xor
mov
xchg
in
int
sbb
adc
jno
push
repnz
sub
outsb
call
and
aad
add
in
repz
push
jb
lret
xchg
iret
mov
cmp
cmpsl
inc
rclb
dec
or
dec
lahf
xchg
inc
int
insl
or
popf
fadd
add
push
fstl
ret
stos
dec
mov
sub
xchg
call
cld
sub
movq
sbb
add
iret
push
outsb
and
std
insb
push
mov
add
stc
sbb
push
or
push
sbb
push
jge
jg
outsb
data16
lds
add
jo
pop
enter
imul
ret
push
xchg
out
or
adc
lcall
inc
xchg
jo
pop
lea
lods
jmp
cltd
xlat
push
inc
jge
pop
inc
sti
aas
lock
pushf
push
stos
dec
pusha
sti
lods
imul
xchg
fcmovu
xchg
movsl
fnstenv
roll
pop
mov
sub
add
adc
mov
or
inc
ljmp
lods
movsb
xchg
xchg
sbb
test
dec
inc
test
push
push
pop
cmpsl
test
cmp
pxor
mov
push
xor
cmc
scas
mov
inc
sub
adc
pop
jne
lret
xchg
jp
je
add
imul
mov
aad
bound
ljmp
mov
mov
push
xor
fnsave
mov
dec
repnz
dec
xchg
cmpsb
cmp
mov
andl
and
sbb
enter
adcl
sub
fs
dec
insl
jmp
outsl
mov
push
or
xchg
fldt
sub
pop
mov
lar
jns
pushf
dec
pop
stos
pop
stos
mov
sti
add
out
rcll
dec
mov
mov
cmpsl
lods
xorl
shrl
push
push
movsl
ja
adcl
leave
sub
push
mov
adc
jo
shlb
std
xor
push
push
sbb
cs
aam
jecxz
fsub
jecxz
in
aas
imul
ja
rorl
adc
mov
cltd
jo
or
rolb
adc
in
dec
shr
dec
mulb
push
mov
push
testl
xor
andb
aad
popa
xor
dec
cli
test
addr16
fcom
or
sbb
adc
and
stc
jmp
xchg
or
jmp
movsl
mov
adc
dec
push
sbb
and
fwait
sbb
ds
jp
aas
inc
jo
cmp
cmp
jnp
sbb
ss
mov
inc
mov
and
cmpsb
add
lret
dec
dec
test
dec
adc
or
loopne
push
popf
sub
cld
pop
in
xchg
mov
fwait
orl
dec
push
pusha
push
and
enter
adcl
push
xor
lods
sbb
xchg
pop
stc
pushl
scas
leave
adc
xor
jo
sbb
pop
setae
push
pop
cmc
and
enter
pusha
pushf
jl
dec
dec
gs
dec
mov
xor
cmp
add
popf
push
pop
xor
mov
pop
iret
sub
repnz
and
mov
jg
inc
mov
icebp
stc
mov
mov
mov
pop
adc
into
xor
mov
loopne
mov
and
aad
mov
sub
sbb
pop
dec
push
mov
sbb
fmul
lds
test
in
push
and
stos
clc
sarb
adc
fistpl
jo
pop
lds
xor
test
jp
lcall
fs
leave
jne
fucomi
xchg
scas
imull
add
call
cmc
std
imul
stos
adc
jl
sbb
cli
adc
pop
outsl
mov
pushf
out
xor
in
pusha
aad
lcall
cwtl
pop
data16
push
imul
sarl
xor
jmp
jno
xchg
add
arpl
or
or
test
sub
mov
das
add
mov
xchg
pop
test
ljmp
ret
sub
pusha
je
into
sbb
test
into
sbb
jle
push
jo
lods
mov
sbb
arpl
shlb
call
cmp
fisubrs
sahf
loopne
jb
xchg
mov
rorb
insl
add
sub
cmp
test
jmp
fs
inc
and
inc
mov
insl
xlat
inc
or
arpl
scas
test
enter
outsl
sub
xchg
mov
push
adc
xchg
push
xor
aaa
push
hlt
jmp
sub
outsb
inc
mov
movsb
cmp
andl
icebp
sub
push
das
xchg
inc
inc
mov
sahf
pop
xor
adc
loope
loopne
xlat
sub
sub
xor
inc
test
and
mov
aam
scas
mov
add
negb
and
adc
mov
ret
cmp
mov
xchg
into
xchg
dec
pop
sbb
loop
orl
xchg
sub
sbbl
sub
push
mov
push
or
push
inc
stos
and
xchg
or
inc
pop
popa
xor
cmp
test
xchg
mov
loop
mov
lds
es
push
lods
lret
mov
das
out
jbe
in
pop
test
loopne
subl
mov
push
cmp
pop
and
in
mov
jnp
sbb
jbe
lret
and
mull
mov
add
or
add
xchg
sub
jecxz
adc
mov
adc
jl
test
xchg
ret
jmp
sub
or
inc
imul
push
fisubrs
daa
push
dec
pop
xor
ss
pop
sbb
icebp
sbb
inc
in
and
mov
pop
popa
mov
in
rorb
sti
sub
pop
add
xlat
lods
andl
dec
mov
xor
pushf
mov
jnp
push
imul
jae
lret
push
out
add
push
adc
int3
xchg
lds
sbb
out
jae
out
push
imul
rcrl
stos
test
ljmp
mov
in
dec
inc
sahf
imul
fucomp
inc
or
cmp
inc
jb
mov
lea
lods
pop
imul
inc
subb
outsb
fcomp
mov
push
push
mov
rclb
enter
pop
cmp
popa
mov
std
mov
xchg
stos
or
sbb
andl
sub
ror
mov
sub
push
adc
into
mov
stos
lret
out
orl
sub
cmp
mov
and
jb
mov
in
repz
adc
into
cltd
push
ja
enter
jae
cltd
mov
std
fsubs
mov
loope
insl
fwait
iret
fldl2e
pop
pusha
inc
xchg
mov
or
or
pop
push
subb
mov
jl
aam
repnz
mov
fisubrs
adc
and
add
std
pop
aas
sbb
cmc
test
push
out
in
jae
inc
adc
jmp
sbb
loopne
rcll
pop
pop
jnp
imul
cmc
adc
aas
push
arpl
fmull
mov
std
sbbl
cwtl
jle
ret
inc
xchg
cmc
mov
mov
lea
call
in
sbb
dec
in
jecxz
add
sub
int3
add
mov
les
xor
test
mov
or
jecxz
lock
pop
das
add
das
mov
mov
or
in
faddl
add
xchg
arpl
call
fcmovnbe
pop
imul
ljmp
xchg
mov
mov
dec
jb
pop
push
pop
mov
popa
fnstenv
xchg
inc
sub
mov
jmp
div
mov
loop
adc
inc
pop
inc
mov
mov
repz
push
cmc
ret
xor
pop
xchg
sub
shll
sbb
push
in
addr16
cmp
cmpsl
jp
not
mov
sub
xchg
dec
aas
negl
push
pop
out
cmpxchg
sbb
pop
jae
sub
pop
adc
mov
add
or
fcompl
cmpb
cmp
jg
lcall
jb
fs
jp
fs
and
movsb
adc
push
add
iret
jne
cmp
nop
lods
mov
aam
lret
loopne
jae
push
fimuls
jp
dec
adc
pop
jbe
ret
in
mov
lret
lods
jne
mov
or
inc
sub
rcrb
popf
popa
mov
shlb
addr16
mov
push
xchg
outsl
pop
and
imul
or
addr16
outsb
cmp
call
mov
shr
nop
cmp
pop
fcmovnbe
int3
xor
in
ja
or
push
jae
mov
imul
cmpl
cld
movsb
push
sbb
xchg
push
lods
aaa
dec
sbb
mov
aad
data16
pusha
aad
in
inc
scas
subl
dec
in
mov
cli
insl
test
cmpsb
inc
sarl
pop
mov
in
les
aam
insl
xlat
movsl
and
mov
stos
out
stos
pop
jno
int
jns
inc
jmp
js
in
fs
js
sub
sarb
iret
jbe
test
pop
mov
aas
mov
add
push
inc
dec
xor
sbb
mul
or
outsl
aad
rolb
ds
clc
subl
cltd
adc
xchg
mov
ds
or
hlt
and
dec
push
lret
add
xor
mov
xchg
mov
popa
jnp
lret
icebp
dec
cmp
lcall
mov
out
mov
jle
mov
jle
rcr
aam
mov
movsb
jmp
testl
pop
jmp
push
movb
jg
insl
popf
jnp
lea
mov
xlat
ja
mov
xchg
jne
mov
dec
ret
std
inc
jg
fdivrs
daa
inc
loope
push
js
fs
sub
inc
outsl
loopne
and
pop
adc
loop
js
sahf
outsb
push
mov
in
repz
ds
out
test
xchg
outsl
xor
cli
lds
iret
or
mov
push
inc
xor
xchg
mov
jae
mov
add
les
das
xor
lds
stc
xor
inc
mov
mov
push
iret
sbb
outsl
loope
arpl
jmp
daa
sahf
push
pop
ja
popa
adc
lahf
or
ss
lret
jbe
jle
bound
pop
adc
mov
fisubl
cmp
stos
adc
sub
jmp
movsl
popf
xor
stos
xchg
insl
mov
repz
cmp
cmp
and
subps
xchg
enter
imul
jnp
scas
fwait
in
test
sarb
outsl
sahf
data16
cmp
mov
pop
test
inc
shrb
add
xor
mov
inc
xor
lods
das
push
xchg
mov
push
outsb
into
sbb
fwait
dec
scas
in
add
cmpsb
sti
or
or
lahf
insb
test
jmp
adc
pop
fiadds
sbb
decb
fwait
pop
adc
mov
sti
cmp
fwait
push
jno
xor
rcr
je
pop
jmp
cmpsl
sbbl
shl
sub
mov
ret
nop
sbb
or
sub
insl
rol
out
inc
fistpl
mov
dec
sbb
pusha
adc
inc
pop
or
mov
out
and
sbb
test
jecxz
sub
stos
icebp
outsb
sbbl
add
popa
mov
das
ret
shlb
mov
sbb
jb
scas
js
in
inc
sbb
aaa
aas
mov
daa
cmpsb
inc
pop
jle
sub
ds
jns
lahf
sub
add
sti
cmp
mov
xor
fidivs
aam
cmpsl
pop
leave
mov
ret
pop
ds
jno
fiaddl
fcom
das
es
imul
hlt
mov
sbb
mov
mov
push
mov
push
test
pop
and
in
pushf
mov
sbb
sub
stc
cmp
pop
out
jne
enter
aad
scas
push
andl
popa
out
movsl
inc
xor
xor
popl
inc
mov
push
jg
sbb
dec
mov
dec
xor
mov
lcall
mov
xchg
cwtl
xchg
das
jo
mov
or
les
cltd
jmp
cmpsb
leave
imul
add
sbb
in
int3
and
jne
or
enter
ds
arpl
inc
push
dec
dec
movsb
test
pop
mov
xchg
cmpsl
pop
ljmp
bound
daa
xor
adc
sub
psubusb
pop
inc
mov
lods
add
in
add
mov
sbb
jo
out
jnp
sahf
pop
pushf
push
fs
inc
xchg
fsts
or
or
movsb
mov
cld
dec
jmp
shrb
stc
iretw
and
dec
sub
pop
mov
cmp
in
adc
rcrb
xlat
sbb
mov
in
test
push
mov
repnz
out
pop
fcomp
pusha
imul
data16
rcr
push
iret
jle
lds
push
fldcw
rclb
mov
vandps
addr16
add
cmpsb
mov
jp
push
out
leave
mov
repz
and
es
sub
add
adc
in
jno
add
xchg
fstpl
xor
cmp
adc
mov
jno
mov
dec
push
dec
push
push
adc
in
or
sub
addr16
mov
inc
incb
pop
nop
lahf
xchg
loopne
out
filds
lods
inc
nop
xor
jecxz
mov
push
jmp
xchg
push
adc
ja
es
dec
sbb
jno
and
cmp
mul
rcrb
outsl
fldenv
dec
pop
lret
test
imul
cmp
xchg
and
fs
or
xor
mov
imul
jecxz
jbe
dec
or
mov
xchg
sbbb
imul
jno
ret
sub
dec
stc
lret
pushf
mov
shlb
dec
jo
mov
xchg
mov
or
in
stos
push
jle
aam
pop
enter
inc
insl
inc
stos
jno
shlb
testb
lock
xchg
push
pop
add
dec
xchg
pop
and
js
dec
cmp
mov
pop
or
jb
fistpl
popf
inc
ss
and
lret
xchg
out
lods
test
arpl
in
xchg
cmp
stc
sub
data16
jnp
jnp
dec
cmc
out
inc
or
pop
xchg
inc
fs
fimuls
cmc
mov
mov
ja
arpl
fldt
repz
mov
push
mov
cmp
adc
or
jge
stos
adc
jp
xor
xor
hlt
sbb
add
dec
call
jne
push
xchg
sbb
sub
shl
outsb
jo
dec
sub
xchg
pop
les
push
aad
pop
lret
push
xchg
add
std
cmp
xchg
in
mov
pop
xchg
adc
xchg
daa
out
and
push
adc
andl
data16
iret
out
or
push
or
mov
inc
dec
mov
mov
stc
insl
fcoml
icebp
xor
cmp
das
jae
and
mov
in
mull
movsl
pop
sbb
int3
lds
inc
pop
fwait
xchg
rcll
sub
hlt
mov
cwtl
loop,pt
scas
fcomps
adc
mov
xorb
and
add
add
daa
inc
xchg
ss
push
fstps
inc
shrl
mov
dec
add
push
mov
test
and
mov
stos
mov
xor
mov
add
push
sbb
cmpl
pusha
mov
jno
sahf
dec
mov
repnz
cltd
or
dec
jbe
jae
fidivrl
sarl
cmp
inc
xor
and
lahf
addb
xorb
lods
sbb
ljmp
cld
xchg
xchg
cmp
fdivrl
cmp
ud2
push
xchg
or
adc
dec
inc
inc
sbb
xchg
mov
pop
aaa
jae
xchg
leave
pusha
je
test
mov
repnz
push
dec
fidivl
mov
imul
adc
sbb
idivb
fcmovbe
xor
orb
xor
out
inc
xchg
xchg
outsb
int
aam
mov
scas
aam
xor
cmpsl
pop
lahf
push
inc
cwtl
sub
fs
xchg
clc
inc
jecxz
inc
fisttps
mov
sub
lcall
out
lahf
xor
jle
sbb
out
fcom
insl
lock
lds
sub
filds
sbb
lret
and
ss
clc
es
xchg
jae
sbb
mov
pop
iret
jmp
outsl
or
cwtl
pop
inc
fcom
in
ds
push
and
dec
xorb
iret
inc
lds
cmp
push
pusha
fstps
adc
ds
push
shrl
jno
mov
inc
jp
cmp
xchg
and
or
ds
movzbl
ljmp
insl
xor
rol
int3
icebp
or
es
nop
cmp
scas
push
dec
arpl
jg
pop
gs
mov
pop
mov
cmpsl
inc
notl
ficoml
dec
rolb
lods
pop
cs
mov
inc
pop
cmp
xchg
push
jne
add
mov
inc
dec
fildll
push
xchg
gs
mov
mov
and
hlt
pop
imul
pop
cmpsl
jnp
pop
cld
mov
mov
xorb
mov
sub
cmp
jno
push
and
fsubs
mov
rorb
push
sbb
bts
fists
fucomp
icebp
lcall
mov
jmp
mov
pusha
scas
pop
xchg
cltd
loop
inc
cmp
cmp
adc
fnstenv
repnz
pop
sbb
call
dec
mov
pop
and
hlt
roll
or
daa
js
cli
push
ljmp
push
das
dec
or
cmc
mov
xor
out
sub
or
aam
ficomps
out
jge
mov
jo
jge
push
mov
push
aaa
sub
lret
or
mov
mov
xchg
or
fwait
sbb
mov
adc
icebp
mov
add
and
mov
lods
inc
pop
xchg
jmp
adc
jno
rcll
add
mov
or
out
in
int
inc
mov
inc
dec
inc
dec
inc
and
pushf
cwtl
mov
mov
or
xchg
inc
lea
popa
inc
or
roll
bound
mov
push
xchg
pop
repz
gs
nop
cld
inc
out
insb
inc
lods
int3
leave
xchg
push
inc
pop
mov
clc
jo
xchg
xchg
fwait
loope
pop
jo
jnp
inc
imul
rorl
jmp
aam
add
inc
and
sbb
cmpsl
or
lods
jl
and
mov
aas
and
mov
std
cltd
lds
adc
adc
insb
xchg
test
push
xlat
xchg
scas
sub
jne
sahf
sbb
dec
mov
cltd
jg
pop
mov
aaa
fists
gs
lcall
inc
dec
pop
lea
popa
jne
jns
gs
mov
adc
in
xorb
mov
mov
jl
push
lods
mov
stc
pop
pusha
mov
sti
adc
vhaddps
lcall
cmp
out
out
jmp
xchg
push
push
repnz
or
test
jo
mov
cs
lahf
mov
std
cmp
addb
jg
xchg
mov
dec
mov
iret
pop
icebp
fisubrs
xor
sub
push
mov
out
fwait
lods
mov
jne
sbb
stos
inc
mov
xchg
mov
aaa
out
sub
neg
lea
movb
into
mov
pop
icebp
mov
popa
push
lods
add
jl
push
jl
cmp
jecxz
dec
or
iret
dec
xorb
shlb
pop
push
call
nop
mov
aad
add
call
mov
xchg
ljmp
adc
inc
jecxz
mov
in
xor
jbe
adc
jecxz
push
mov
test
insl
or
sbb
dec
and
pop
push
ficompl
xor
pop
cmp
loopne
fmuls
xor
adc
or
pop
mull
pop
stos
xor
xchg
lods
leave
stc
sbb
outsb
insb
sahf
pop
rcr
call
xor
push
and
mov
dec
xor
nop
movsl
sbb
daa
jle
pop
cwtl
mov
push
hlt
mov
aas
repz
add
push
pop
outsb
add
push
pusha
fldcw
sbb
dec
out
pop
adc
and
add
jmp
inc
mov
into
jae
cli
cmpl
mov
jae
cmp
push
mov
jno
xchg
mov
push
test
and
push
cmp
int
xchg
sub
mov
sahf
push
pop
lret
popw
out
imul
pop
inc
add
nop
ret
sti
and
pop
inc
gs
pop
push
shl
push
scas
pop
dec
das
sub
or
push
aad
popa
out
jo
cld
adc
stc
sti
sub
les
out
in
mov
mov
dec
repz
into
aad
jnp
pop
push
das
sub
mov
pushf
rcll
xchg
pop
inc
fs
cmp
sbb
xor
fucompp
loopne
adc
loopne
scas
cmp
in
fisttpl
sbb
mov
arpl
mov
dec
stos
into
or
movsl
in
test
and
cs
imulb
repz
dec
mov
nop
or
lods
imul
push
inc
xchg
sbbl
fstps
push
cld
stos
bnd
or
popf
adc
adc
pop
add
lods
or
out
mov
mov
xor
cmp
testb
loopne
pop
mov
test
sub
mov
ss
pop
repnz
push
push
cld
dec
inc
xchg
mov
or
fldt
mov
inc
mov
inc
jns
mov
fisubs
loopne
cwtl
sub
pop
push
inc
push
fbld
xchg
sbb
mov
cli
mov
popf
fisubs
jle
mov
loope
stos
lds
xor
dec
jb
inc
xchg
sub
pushf
and
test
gs
push
scas
lods
push
add
vpackuswb
pop
cli
xchg
dec
xchg
add
jg
in
cmp
sub
cmp
scas
ret
xchg
jae
cwtl
add
xlat
xor
divl
push
add
or
into
lret
xchg
fcompl
adc
adc
int
loope
xor
mov
sahf
mov
imul
adc
cmpsb
and
iret
xchg
dec
clc
mov
ja
subb
stc
hlt
inc
inc
cmp
dec
ss
cmp
jmp
scas
jp
fcomps
rorl
jmp
sbb
sbb
stc
mov
arpl
pop
jae
sti
and
xchg
mov
and
das
iret
jle
ljmp
inc
mov
jno
stos
lock
cltd
dec
into
andl
push
jae
aas
mov
shrb
shrb
sbb
xor
cld
shufps
std
inc
ret
shl
cwtl
mov
dec
xchg
xchg
arpl
mov
pop
inc
movsl
cmp
divl
dec
sbb
popa
testb
loop
mov
cmp
adc
leave
dec
popa
and
mov
sbb
mov
mov
stos
lahf
mov
mov
popf
lcall
jge
rcr
add
jecxz
lods
adc
pop
shl
push
cs
arpl
xor
pop
mov
or
xor
rolb
mov
testl
jge
loop
out
loopne
hlt
repz
out
push
mov
in
mov
mov
adc
mov
xchg
fcmovb
mov
cmp
cwtl
dec
dec
cmp
shrl
in
dec
push
icebp
call
inc
stc
movsl
call
adcl
shl
xchg
data16
mov
fnstcw
lahf
lcall
pop
jmp
cmp
popf
and
inc
add
jbe
mov
mov
pop
ss
aad
mov
nop
arpl
out
dec
and
ljmp
test
addb
cli
dec
test
mov
insl
xchg
movsb
std
xchg
insl
inc
movsl
add
test
inc
scas
fs
inc
dec
cmp
jno
in
aas
inc
jb
inc
lahf
jp
adc
adc
jo
inc
nop
mov
stos
loope
xchg
iret
add
test
xor
sbb
mov
pusha
ljmp
xor
addb
sub
inc
jae
xchg
jmp
movsl
lcall
dec
fsub
jne
repnz
or
mov
mov
fnstenv
lods
leave
pop
push
sbb
mov
jno
pop
leave
enter
dec
sbb
mov
shlb
call
frstor
aas
pop
pop
cmpl
pushf
mov
addb
in
ja
xchg
fistpl
insl
cmpsb
jns
scas
ss
cmp
and
xlat
popa
les
jo
sbb
push
dec
sub
xor
adc
cmp
sbb
shl
xchg
sbb
add
mov
mov
sub
inc
jecxz
enter
add
push
out
scas
adc
lahf
popf
and
call
add
jl
push
inc
or
sub
mov
ljmp
sub
dec
pop
adc
and
cli
push
cld
ljmp
ljmp
jmp
rol
mov
int3
mov
aam
pusha
icebp
cmpsl
js
dec
or
bnd
xor
data16
mov
rcll
lret
imul
es
push
mov
loope
movsl
adc
jbe
mov
mov
shll
adc
ja
pop
mov
inc
cmp
xlat
jb
or
pushf
mov
mov
xchg
xor
sbb
cmp
ds
mov
pop
xor
cmp
inc
inc
cs
rcll
xchg
mov
ds
ja
push
test
cmc
jo
inc
pop
call
mov
mov
pop
cmpb
es
insl
out
add
push
movsb
imul
in
adc
mov
jg
lcall
xchg
or
cli
fdivl
fldcw
fldcw
xor
mov
fmuls
xor
add
sbb
and
dec
mov
jge
pusha
sarl
aaa
shl
jns
into
cmpsb
jge
mov
inc
lods
lcall
and
mov
or
movsl
mov
and
lret
in
repnz
scas
cmp
cmp
xchg
rolb
lcall
imul
pop
push
jbe
hlt
movsl
decb
add
adc
mov
sbb
mov
sub
inc
xchg
jp
cmc
xlat
pusha
jg
add
in
lods
std
or
jns
rcrb
xchg
popf
jl
test
in
rcll
cmp
push
add
shl
mov
scas
out
rcrb
push
inc
push
xchg
mov
push
or
outsl
test
mov
imul
rol
mov
fstpt
hlt
into
mov
sub
inc
mov
lahf
lock
mov
lock
daa
adc
and
loop
cmp
mov
mov
in
jl
jecxz
adc
jne
inc
pop
shl
jp
aas
ja
repnz
sbb
sarl
ja
jns
fwait
sti
bound
push
das
add
mov
push
xor
fistpll
jle
out
in
pop
ficoms
jno
xchg
push
pop
scas
popf
mov
pushf
rcrl
lods
addl
push
mov
imul
lods
and
push
dec
mov
inc
mov
xchg
push
leave
pop
dec
xchg
and
js
ret
cli
lret
sub
pushf
jnp
xchg
xor
rcl
jbe
popf
mov
cld
aad
lods
inc
in
out
mov
unpcklps
repnz
pop
pop
jp
push
xchg
push
mov
push
push
mov
sbb
imul
out
xchg
sub
in
sbb
repnz
cs
xchg
pop
bound
lahf
movsl
popa
jecxz
rcrb
jno
sub
mov
mov
rcl
loopne
adc
test
shrl
mov
popa
ja
xor
cmpsl
pop
cmp
cmp
movups
and
loopne
in
fstps
inc
hlt
lea
cmp
ret
adc
aam
lcall
mov
and
clc
xchg
in
scas
cmp
jnp
or
and
xor
lods
dec
popf
mov
xchg
loope
xchg
push
lcall
mov
add
aas
cmpsb
push
push
mov
mov
mov
es
ret
shr
js
mov
fisttpl
push
jecxz
jge
or
mov
outsl
jl
movsl
jl
xchg
addr16
das
push
jecxz
sbb
dec
mov
outsl
dec
ss
cltd
movsl
int
test
aam
popf
ret
xor
js
adc
adc
add
adc
arpl
push
pop
and
ja
push
mov
cli
inc
add
inc
pop
jecxz
sbb
iret
ret
cmp
sub
lcall
sbb
and
or
shrl
leave
rorb
out
sub
and
icebp
test
js
mov
cmpsb
in
dec
aad
push
aam
xor
and
mov
mov
cmp
xor
mov
dec
sbb
lock
loopne,pt
jo
sbb
jae
cmpsb
adcb
adc
jp
mov
or
adc
cmp
jae
lret
jns
iret
testl
bound
call
cmp
jp
mov
idivl
lahf
scas
mov
cltd
jl
enter
mov
pop
dec
scas
jg
mov
cwtl
push
testl
mov
cltd
push
dec
js
stos
jbe
lods
mov
les
pop
cmp
sbb
mov
pop
scas
cmpsl
mov
rcrl
add
cli
cmp
xchg
dec
mov
aad
out
nop
mov
mov
jb
js
jmp
adc
stc
sbb
inc
lahf
xor
push
insb
lret
sub
cli
push
cmp
out
in
jl
sbb
sub
imul
cmc
mov
imul
adc
push
cs
pop
push
fwait
ja
les
jne
in
sahf
mov
daa
mov
adc
insb
push
push
lcall
lods
repz
ret
xchg
loopne
sub
lret
pushf
sbb
inc
jnp
sbb
jo
push
xchg
lcall
data16
sub
pop
xchg
stos
sub
jge
aam
call
xorb
jg
sahf
cwtl
and
dec
popl
cmp
dec
cmp
daa
adc
mov
pop
in
jno
sub
cmpsb
aad
out
imul
mov
push
xchg
daa
negl
leave
lock
rorl
aam
mov
int
out
mov
cmc
cmp
push
stos
ss
dec
mov
shrl
movsl
pop
push
repz
adc
imul
inc
pop
gs
hlt
or
jl
std
pop
push
mov
xchg
dec
arpl
jb
sbb
cmpsl
repnz
fwait
lods
movhlps
loop
pop
xor
or
push
adc
test
inc
ffreep
jnp
in
icebp
push
aam
in
inc
stc
rcrl
lea
arpl
jnp
mov
je
jae
and
pop
pusha
subl
mov
xchg
mov
mov
mov
lock
lret
jle
nop
push
lods
adc
add
mov
adc
and
and
cmp
fwait
shll
inc
stos
mov
int
adc
sbb
fisubl
pop
stc
stc
hlt
lea
add
subl
cmp
push
stos
push
pop
addl
add
pop
dec
jmp
inc
cmp
dec
cmp
fs
loop
and
cs
jbe
imul
mov
push
xor
xchg
fsubrp
add
insl
add
push
push
cwtl
fstps
ss
cltd
sarl
sbbb
adc
hlt
pop
push
dec
pop
xlat
or
mov
nop
scas
repz
jg
and
jmp
cld
ja
cmc
lcall
or
cmp
stc
fstps
stc
lock
dec
enter
loop
mov
outsb
fistl
mov
mov
jno
out
lea
je
fiaddl
fiaddl
dec
jecxz
pop
and
mov
pop
mov
lods
xchg
dec
lret
lock
or
xchg
cld
call
repnz
push
int3
pop
jl
sbb
or
sbb
mov
mov
inc
jo
mov
sub
call
ljmp
nop
push
stos
ds
cli
cmp
sbb
sbb
xchg
add
lahf
mov
pop
jg
ljmp
or
dec
ret
inc
das
insl
mov
lds
test
mov
cs
hlt
inc
push
ret
mov
loope
out
repz
mov
in
jle
push
dec
fnstsw
add
jmp
xchg
and
les
or
xor
hlt
jl
xchg
mov
dec
inc
dec
or
dec
sar
ds
mov
subb
mov
push
mov
ret
out
push
or
fadds
scas
in
mov
pop
jle
aam
mov
xchg
pop
and
int3
cmp
mov
mov
sbb
pop
dec
lahf
dec
jns
dec
pushf
sbb
aas
inc
sub
test
out
das
xchg
sbb
stc
mov
push
lret
ds
in
mov
fldt
test
push
pop
ficompl
iret
mov
mov
cmpsl
inc
xchg
mov
inc
hlt
or
fs
xchg
idivb
rolb
xor
push
xchg
arpl
out
fs
sub
out
cmp
push
push
mov
push
fcmovb
mov
loopne
es
lret
sbb
xor
flds
mull
jno
sti
fmull
aam
in
add
gs
xchg
mov
mov
adc
ja
inc
jmp
loop
xor
gs
cmpl
inc
mov
movsb
ret
dec
xor
inc
aam
sbbl
jle
and
cli
sbb
hlt
inc
scas
iret
jne
lock
imul
xor
mov
int3
lds
mov
or
xchg
out
mov
es
sbb
lea
jp
jmp
lret
dec
cwtl
ja
outsl
or
cmc
pop
inc
cltd
inc
xchg
jne
mov
shrl
push
adc
in
and
outsl
sti
popf
imul
aam
cltd
outsl
push
insb
pop
jge
jecxz
mov
and
stos
repz
and
stc
pop
enter
lds
add
dec
repnz
lret
imul
es
imulb
jg
push
pop
jbe
sti
pop
lds
lcall
aad
dec
dec
add
adc
popa
jno
stc
stc
stos
dec
cmpsb
mov
push
xchg
or
xchg
mov
jle
jl
rol
pop
pop
mov
sbb
movsl
jmp
insb
dec
outsl
xchg
cs
jmp
mov
cmpsb
or
sti
call
addr16
cmpsl
add
sbb
adc
loope
push
jge
dec
push
cmp
xor
pop
push
push
mov
push
mov
movsl
outsl
cmc
jmp
into
mov
pop
or
out
mov
das
mov
xor
aaa
mov
or
jl
ja
imul
fadd
mov
mov
out
aas
stos
or
sbb
xor
in
add
insl
adc
cmpsl
ror
in
decb
push
cltd
sbb
arpl
xchg
inc
hlt
cmpsl
push
dec
sub
orl
inc
dec
mov
outsl
and
test
inc
cltd
jnp
inc
hlt
cmp
mov
fistl
rcll
lods
pop
push
push
sbb
mov
call
adc
in
push
aas
dec
insl
call
jne
pop
xor
inc
push
insl
or
aas
pop
cli
cmp
aaa
loopne
sbb
mov
inc
mov
mov
stos
stos
std
mov
aas
popa
push
fwait
or
mov
ljmp
xchg
shll
fldl
aaa
pushf
push
and
hlt
dec
into
test
sbb
adc
loopne
sbb
test
bound
repnz
scas
sbb
xor
into
mov
stos
adc
hlt
scas
xor
mov
cmp
or
dec
pusha
and
sbb
or
sbb
push
push
loopne
lret
add
cmp
inc
mov
outsb
bound
mov
sar
dec
push
sub
and
xchg
repnz
inc
imul
inc
in
mov
pushf
adc
sarb
jmp
dec
jb
bound
cs
cli
jb
test
add
pusha
sti
sti
sub
loopne
jmp
mov
lods
loopne
mov
inc
lods
outsb
add
or
sti
addr16
and
jmp
mov
fmulp
dec
adc
rorl
dec
push
pop
or
or
popa
inc
sub
add
jns
cwtl
xor
mov
fiadds
in
lahf
or
rol
out
ljmp
shrb
mov
icebp
fimuls
adc
push
insb
jp
addr16
in
xor
cmp
jl
cmp
scas
stos
test
cmp
test
sub
test
xchg
test
add
out
push
shlb
mov
jns
das
mov
jmp
jle
push
push
or
out
ret
out
mov
cli
xchg
pop
jg
and
aas
loopne
negb
xor
fsubrl
std
jle
js
jp
movsb
dec
movsl
add
mov
jmp
leave
mov
sbb
out
test
mov
add
cmp
cmp
aaa
sbb
outsl
dec
mov
mov
sbb
xor
and
mov
cmp
loop
insl
clc
fsubrl
adc
cmp
in
loopne
sbb
data16
cmp
inc
mov
jl
cmp
push
cmp
xor
sbb
stc
dec
insl
xor
adc
inc
xchg
in
in
or
inc
sbb
pop
int3
lods
sbb
jp
sbb
sub
xchg
or
mov
mov
xchg
into
push
ds
iret
sarl
sbb
stos
push
or
mov
fs
xchg
xchg
xorb
fcomp
iret
adc
inc
lea
int
mov
in
jmp
es
adc
cmp
or
sbb
adc
ljmp
outsb
ret
mov
pusha
insl
xlat
xchg
int
out
std
sbb
mov
ljmp
test
mov
lret
push
test
xchg
stos
or
jbe
adc
and
nop
inc
shrb
dec
xchg
jnp
fcoms
lret
push
mov
mov
inc
mov
inc
jge
les
js
test
adc
jno
push
aam
push
inc
popl
rcl
pop
rolb
cmpsl
adc
add
pop
les
mov
std
mov
pop
popf
sti
fs
ficoml
sbb
or
shrl
cmpsl
lods
jle
in
adc
shlb
cli
jecxz
leave
cmp
jle
aam
or
lock
insl
dec
fmuls
and
and
xor
popa
inc
xchg
pop
dec
sti
jmp
dec
mov
test
aam
test
out
lds
jge
jne
sbb
mov
ja
cmp
push
add
divb
outsb
pshufw
sbb
cmc
mov
and
push
mov
test
iret
sbb
pop
mov
mov
iret
inc
rcrb
add
push
dec
jge
dec
cmpsb
push
jo
mov
and
sbb
mov
xchg
cmpsl
std
xchg
mov
lea
mov
mov
and
dec
sbb
lea
or
and
push
adc
xchg
inc
shrb
sbbl
mov
push
or
pusha
into
or
stos
hlt
cli
pushf
test
insl
pop
shrb
jnp
xchg
insl
int3
inc
dec
test
mov
push
mov
jne
lahf
pop
mov
out
hlt
addb
sbb
ja
clc
imul
push
insl
or
xchg
cmpsl
mov
std
cli
xor
mov
adc
mov
js
inc
mov
pusha
xchg
jl
xor
jnp
aaa
das
push
mov
loopne
push
popa
fiaddl
sbb
movsb
inc
pop
mov
rcll
xchg
lret
mov
xchg
leave
jmp
xlat
call
and
cld
push
imul
pop
sub
leave
fcomp
jg
ja
and
xor
inc
jns
pop
rcrb
das
in
mov
out
push
add
push
rcr
dec
sub
lods
mov
add
int
dec
xlat
sub
push
xchg
aam
dec
imul
adc
out
cmpsl
int3
repnz
mov
or
mov
imul
fwait
addl
cmp
fs
decb
or
inc
push
shll
cmp
xchg
pushf
xor
inc
test
in
sbb
pushl
cmp
or
dec
push
outsl
pop
pop
jge
add
leave
lock
mov
adc
subl
xor
aaa
test
gs
xchg
sarl
icebp
cmpsl
xor
push
mov
mov
sbb
lea
rcrl
dec
adc
fs
mov
les
pop
std
sahf
mov
aad
arpl
repnz
jmp
mov
stc
push
add
test
pop
add
add
push
cld
mov
mov
jnp
adc
jle
adc
popf
jmp
push
pushf
cwtl
mov
cld
push
xor
sbb
sbb
insb
sub
testb
push
and
js
ret
or
loopne
jecxz
sbb
push
aaa
fdivrs
nop
mov
pop
bound
out
popa
adc
mov
out
jmp
shrb
fiadds
inc
pop
xlat
movl
test
push
jle
ljmp
cmpsl
daa
jl
inc
fidivl
mov
int3
dec
in
and
js
mov
mov
into
and
jle
in
xchg
mov
data16
xor
cltd
movsb
cmp
cmp
inc
mov
xor
out
inc
icebp
mov
in
inc
enter
fists
fdivrl
push
nop
cmp
push
adc
jmp
in
js
cld
in
out
mov
aaa
aad
and
mov
mov
leave
cmpsb
lea
cmpsl
in
xchg
cmp
dec
adc
enter
movb
fistpll
jae
push
rcrl
and
push
test
lock
inc
je
xor
mov
add
shlb
gs
mov
jb
ja
mov
push
adc
push
outsb
xchg
xor
pushf
icebp
popf
push
sbb
or
callw
inc
test
push
fdivl
notb
or
xchg
scas
mov
adc
jmp
dec
shll
sub
dec
shll
pop
mov
pop
orl
sub
lret
dec
nop
mov
js
aas
cmc
cmp
popf
xchg
push
and
and
mov
jecxz
or
jae
mov
rorl
fstl
add
lahf
mov
shrl
popf
xorb
daa
outsb
sub
rol
adc
push
or
gs
in
mov
lahf
inc
jp
imul
mov
jb
shll
and
out
popf
jb
cmpsl
or
test
mov
inc
add
mov
mov
in
mov
icebp
out
data16
fdivl
into
mov
jae
fisubl
int
dec
xchg
sbb
or
jmp
xor
aaa
push
mov
call
ljmp
testl
in
or
inc
pushf
dec
jge
daa
test
stos
loope
xchg
fs
orb
lret
add
or
daa
xor
adc
popf
leave
int3
rcr
int3
cmpsl
ret
add
xorl
sbb
dec
push
xor
add
push
dec
jle
jnp
cli
cmp
adc
mov
into
mov
addl
mov
and
sub
pop
repnz
add
cmp
cmp
not
movsl
cmp
or
and
push
mov
repz
mov
shrl
sbb
cwtl
movsb
out
fldt
cmc
bound
push
xchg
je
loope
mov
int3
ja
data16
and
sti
mov
ljmp
insl
pop
cmp
test
sub
daa
dec
cld
jnp
xchg
xchg
les
mov
mov
int3
add
notb
xor
adc
jle
and
sbb
pushf
inc
push
add
cltd
fists
or
rorb
mov
es
and
mov
leave
mov
out
push
xchg
das
pushf
jle
inc
pop
ljmp
sub
jnp
mov
pop
xor
push
mull
cmpsl
rolb
aas
movsl
pop
pusha
ja
flds
and
mov
sub
xchg
pusha
mov
xor
pop
rcrb
jns
sbb
call
popa
xchg
adcb
movsl
enter
decb
jae
mov
lret
das
scas
fmull
mov
sbb
imul
lods
mov
mov
stos
push
fstpt
sub
mov
sbb
daa
cld
iret
jb
or
in
lock
in
in
push
rcrl
das
out
mov
xor
mov
rolb
mov
mov
movsb
insb
cwtl
push
popa
inc
inc
add
out
jb
lods
mov
das
sahf
in
stos
cmp
pop
cmp
das
mov
aaa
jno
addr16
push
ss
xor
out
xor
jecxz
adc
daa
dec
add
xor
cmp
sub
and
nop
adc
mov
jg
push
fdecstp
add
nop
outsb
xchg
dec
les
mov
cmp
add
shrb
cmpl
pop
inc
add
sti
outsb
xchg
inc
test
push
sbb
hlt
out
mov
and
fs
sbb
into
dec
insb
loopne
and
lock
sarb
jne
sbb
adc
push
inc
popf
pop
iret
or
jnp
int
mov
adc
fbld
xchg
cmpsb
mov
or
mov
jnp
push
aaa
les
aaa
cmpsl
xchg
mov
insl
dec
mov
push
xchg
mov
fwait
das
push
jge
sbb
jmp
cltd
adc
scas
mov
and
and
dec
test
in
ret
ja
pop
sbb
jge
jnp
xorl
pop
cmpsb
mov
jecxz
repnz
loop
sub
and
aaa
dec
daa
mov
mov
arpl
and
push
mov
sub
pop
sub
xchg
jle
das
aaa
in
mov
enter
jle
pop
sahf
cli
or
jmp
jae
js
jno
cmp
push
pop
push
mov
pusha
inc
sub
sahf
xchg
xchg
push
push
push
lods
popf
divl
push
fdivrl
adc
imul
inc
pop
push
test
jl
sbb
xchg
ds
rcll
push
in
sahf
push
mov
sub
adc
test
sbb
or
insb
repz
mov
cmp
jns
insb
jae
nop
iret
gs
inc
gs
stc
mov
adc
mov
fxch
lock
sub
pop
inc
inc
out
lods
std
je
mov
jno
push
mov
nop
in
push
in
js
jl
insb
xor
cs
mov
push
and
mov
mov
pop
jnp
jecxz
imul
fcomps
loopne
mov
push
out
xchg
mov
jg
mov
dec
sahf
popa
scas
xchg
jns
mov
popa
mov
mov
movsl
mov
gs
ljmp
js
call
fldenv
jno
or
xchg
push
test
shrl
pop
lods
stos
gs
repnz
pop
sti
add
fsubl
mov
shlb
addl
pop
fwait
daa
imul
cmp
subl
sub
stos
pop
shll
mov
jno
inc
int
push
sub
ret
fsubl
jnp
sub
mov
add
add
push
xchg
push
mov
repz
arpl
decl
add
lret
and
pop
lods
jge
xor
leave
call
cwtl
push
vandps
add
aaa
fisubrs
mov
es
bound
call
push
sub
daa
or
inc
shrb
stos
push
pop
inc
ja
or
lcall
jnp
cmp
adc
mov
and
pop
push
scas
xor
jo
popf
pop
jae
sub
arpl
sub
pop
dec
shr
shlb
ja
arpl
fwait
fs
inc
pop
lock
and
cs
jmp
mov
and
pop
sbb
add
mov
add
inc
addr16
adc
cmp
pop
movsl
and
and
cmp
in
icebp
cmp
lock
int3
inc
sbb
test
lcall
dec
int
sarl
push
cmp
pusha
rorl
xlat
and
in
push
jbe
sub
aas
adc
add
add
mov
leave
sbb
movsb
test
popf
call
repz
int
cwtl
sti
sbb
xchg
xchg
out
and
mov
shrl
pop
popa
stos
sbb
cmp
in
test
hlt
movsl
lret
mov
into
rcrb
xor
pop
pop
imul
ljmp
sahf
jge
lea
int3
jl
pop
lods
fdivrs
int3
or
cmp
adc
xor
cmp
daa
out
and
jns
ss
outsl
mov
pop
cwtl
sarl
je
mov
adc
or
pop
mov
lahf
and
pop
jnp
hlt
enter
mov
lret
inc
ja
sub
jno
xchg
sub
xor
sbb
push
movsb
mov
jne
dec
shl
ret
sub
es
mov
ja
sbb
mov
jae
xchg
cmp
mov
fidivs
add
iret
and
test
push
jbe
or
xchg
or
mov
repnz
ja
clc
dec
or
adc
and
adc
or
cmpsl
mov
enter
mov
pop
mov
and
jle
push
ret
mov
in
jns
and
xor
adc
jo
xor
popa
and
xchg
out
add
out
and
inc
mov
or
aaa
pop
pop
test
lock
push
xor
js
jbe
aas
ds
push
cmp
ljmp
sbb
out
mov
adc
pop
sahf
push
mov
shlb
andb
or
mov
push
stc
mov
cmp
in
xchg
mov
mov
icebp
out
jb
push
pop
mov
inc
aas
fs
push
pop
jne
stos
jns
das
and
xor
or
pop
jne
dec
scas
movsl
jnp
fidivrs
inc
push
mov
pop
pop
lds
out
call
gs
int3
add
sub
cmp
shrb
inc
fldcw
dec
cmp
mov
xchg
test
fisubrs
sarl
lret
sar
sti
mov
or
xor
jo
mov
push
push
loopne
stos
popf
jo
cld
rcrl
dec
xchg
sbb
jp
mov
xchg
sub
cmp
mov
xor
aad
sarb
mov
ret
cmp
pushl
divb
pushf
or
insb
fs
pop
add
inc
imul
insl
inc
mov
dec
loopne
test
jb
mov
jg
dec
ljmp
loop
xchg
in
push
dec
mov
mov
sbb
or
cmc
arpl
cmc
lret
xchg
jbe
lods
ss
loop
leave
repnz
pusha
fsubrl
dec
sub
call
cwtl
and
insb
aas
adc
addl
das
aad
jl
lcall
inc
jp
lods
jne
dec
movsl
cmp
outsl
mov
adc
bound
pop
or
push
dec
push
or
adc
cltd
stc
and
jl
mov
lret
or
add
std
es
sub
icebp
sub
cmpsb
rcrl
stc
in
cmovae
int3
xchg
movsl
iret
in
inc
sbb
push
sbb
out
mov
sub
jo
mov
push
mov
scas
adc
rcrb
idivb
das
out
cmp
dec
jmp
mov
adcl
mov
ja
or
pop
pop
cmp
push
mov
xchg
jns
imul
hlt
lods
mov
sbb
cmc
inc
adc
ffree
mov
mov
jl
adc
adc
add
mov
cmp
movl
imul
add
fisubrs
push
andb
out
bound
adc
pop
in
mov
jae
xor
cmp
outsl
sbb
popa
mov
cmpsl
sub
sbb
lods
std
mov
ret
sbb
jecxz
cwtl
and
mov
xlat
stos
hlt
fldt
lcall
mov
andb
mov
or
test
and
gs
add
xchg
lahf
lahf
insb
in
outsl
ss
inc
aas
popf
outsb
adc
mov
xor
mov
orl
add
invd
dec
jne
rep
and
mov
or
lods
xlat
xor
jmp
sbb
or
lods
int
ljmp
adc
cld
sub
adc
push
movsl
ret
adc
fistl
dec
sbb
outsl
pop
xchg
nop
stos
push
imul
les
fs
mov
fildl
scas
int
cmp
stc
dec
int3
das
ficoms
xorl
loopne
add
cltd
sarb
into
push
adc
mov
in
aaa
inc
idivb
out
loop
loopne
xchg
mov
lds
add
push
lret
xor
lock
enter
mov
test
push
pop
mov
aas
pop
push
std
rcrl
popf
xor
mov
xlat
pop
xor
ss
add
jb
or
test
daa
pushf
cli
and
mov
loopne
popf
or
and
push
call
test
inc
pop
push
xlat
les
jle
inc
push
jmp
dec
loopne
lret
push
add
mov
in
pop
fidivs
loop
lcall
dec
jb
sub
mov
push
jle
cmp
frstor
out
ds
sub
insl
xor
popf
or
sbb
mov
loop
sub
das
call
fldenv
dec
adc
dec
add
mov
add
xchg
nop
adc
sub
fidivrl
into
inc
ficoms
mov
xor
test
jns
sbb
cli
push
cmp
cmp
aas
pop
jo
inc
daa
sbbb
sahf
and
addl
ror
and
mov
cmp
icebp
and
loopne
divl
ret
out
das
adc
sahf
add
cmpsl
sub
mov
mov
scas
ljmp
popa
sbb
jp
fbld
mov
dec
inc
insl
lcall
sub
xchg
push
inc
jp
mov
dec
cltd
mov
cmpsl
mov
popa
addr16
cmp
repz
inc
xor
cmp
sbb
push
push
inc
sbb
pop
mov
push
dec
xchg
xor
scas
xor
xchg
shrl
mov
imul
adc
pushf
iret
or
lahf
cmp
xchg
pusha
fldenv
push
out
push
xchg
mov
popf
nop
jle
sub
dec
cwtl
jbe
cmp
fdivrl
loopne
mov
inc
adc
cli
sbb
aam
movsl
fidivs
xor
dec
cli
xchg
in
sbb
sbb
mov
or
in
stos
dec
pop
pusha
cmp
xor
aad
or
jmp
pop
or
cmp
test
jb
outsl
insb
xchg
int
dec
push
dec
inc
rorl
push
pop
add
adc
push
cltd
xchg
out
adc
or
loop
pop
jae
mov
in
sbb
cwtl
into
rolb
jle
jne
insl
hlt
mov
fs
mov
call
xchg
pop
movsb
cmp
mov
or
imul
xchg
into
mov
in
mov
and
push
adc
sarl
xchg
popf
jo
pop
pop
cmp
cwtl
add
jge
push
sub
pop
addl
cli
push
je
and
or
lock
fcoms
xchg
xchg
and
in
int3
mov
out
push
or
sbb
add
inc
aas
movsb
cld
xor
call
dec
xchg
push
add
fidivs
test
ljmp
test
in
sub
push
scas
aam
jnp
sub
push
shll
repnz
add
or
loop
and
mov
adc
out
out
add
xchg
jmp
sahf
lcall
mov
mov
lea
fadd
addl
lahf
push
clc
rcrl
pop
lahf
dec
xlat
fucomip
and
cs
in
scas
sub
mov
xchg
out
leave
adc
fwait
aaa
inc
adc
testl
jp
adc
icebp
scas
lods
adc
aas
sarb
xchg
lods
cs
out
out
mov
mov
into
or
mov
xchg
out
sar
adc
sub
xor
lods
dec
leave
xchg
pop
pusha
push
dec
xchg
pop
ret
cmp
test
into
gs
lcall
outsb
movsl
push
popa
push
push
repnz
push
test
jbe
rolb
push
lds
scas
pop
push
cmpsb
fmull
imul
test
adc
mov
outsb
adc
mov
fs
jnp
bnd
dec
in
mov
clc
cwtl
enter
jg
sub
xchg
gs
cmp
jbe
or
mov
scas
in
sbb
loope
xchg
leave
xchg
icebp
xor
pop
or
adc
or
xlat
into
jp
jmp
pushf
fldenv
xor
stos
outsl
rcll
inc
or
int3
adc
xor
sti
aam
jbe
dec
gs
cmp
inc
jne
mov
in
xor
sbb
xchg
mov
jmp
rclb
insb
test
mov
aad
ja
sbb
cmp
add
lea
clc
jnp
sub
js
pop
ficoml
jl
and
dec
mov
clc
jg
sbb
jne
dec
mov
rclb
inc
lods
pop
sbb
mov
mov
xor
ret
stos
jp
dec
scas
sbb
dec
sub
add
shlb
in
aaa
inc
xchg
sub
push
js
lahf
cs
jnp
sbb
stc
shlb
ja
cmp
aaa
mov
mov
cmc
or
mov
int3
add
lods
scas
repz
fdivrs
xchg
das
lcall
mov
and
sub
mov
pushfw
cli
xchg
mov
cmpsl
stc
mov
add
scas
je
loope
sbb
push
xchg
jns
lods
inc
xor
mov
jp
mov
test
arpl
mov
jp
inc
pop
mov
mov
daa
popf
dec
loope
scas
repnz
dec
fldenv
pop
int3
faddl
shl
mov
sbb
add
xor
aas
push
lock
sti
out
jl
shlb
shlb
pushf
cmp
aad
jle
shl
out
repz
test
lods
adc
jmp
xor
cs
sub
stos
mov
sbb
sti
push
sub
ss
iret
imul
dec
xor
arpl
cmpb
scas
ss
cmp
jg
cs
loope
sub
mov
test
jnp
or
jne
decl
and
jae
cli
rclb
cmp
punpcklbw
and
in
sbb
shlb
lods
arpl
mov
loop
mov
cmp
lock
out
aad
aad
insb
pop
or
cld
mov
inc
ljmp
add
xchg
sub
lret
in
push
js
mov
fstps
out
adc
mov
jmp
ret
xor
mov
lahf
es
lret
enter
and
xlat
int3
shl
mov
adcb
in
insl
lcall
jp
and
xor
jnp
push
mov
inc
mov
dec
imul
je
ficompl
enter
lcall
cmp
arpl
mov
and
cmpl
push
pop
rolb
cmpsb
xor
add
xor
sub
xchg
jmp
cli
jns
pop
clc
lahf
cmpsl
in
or
cmc
cmp
nop
call
insl
js
lret
icebp
arpl
shlb
pop
jmp
into
jo
or
xor
xor
sbb
dec
fstpt
arpl
mov
sarl
icebp
xor
pop
fmuls
dec
out
insb
out
and
mov
sbb
jmp
mov
repz
xor
mov
push
adc
nop
mov
cmp
imul
adc
sbbb
mov
out
out
sbb
gs
or
aaa
push
out
xor
lods
stos
and
movlps
jno
mov
movsb
add
lock
fdivl
or
lcall
add
push
xchg
sbb
pop
mov
and
cmp
mov
icebp
add
push
movsl
addl
inc
xchg
dec
cli
mov
das
cmp
test
pop
je
nop
mov
cltd
jns
ljmp
mov
es
xchg
aas
jmp
jmp
push
addr16
jmp
es
inc
lret
add
add
popf
sbb
jo
mov
inc
pop
addr16
pop
push
stos
push
aad
addl
enter
sub
xchg
fistpll
add
jp
xor
xchg
movsl
outsl
inc
mov
call
mov
int3
and
fwait
shrl
and
repnz
mov
movsl
xor
jo
xchg
push
sub
jnp
ss
ja
or
idiv
sub
mov
push
and
rolb
and
adcb
mov
out
adc
cwtl
movsb
inc
push
movsl
mov
mov
push
dec
dec
dec
sbb
sbb
subb
insb
pop
pop
sahf
inc
lods
dec
stc
push
lar
test
adc
or
and
test
xlat
mov
leave
rorb
sub
push
hlt
jne
in
xor
jb
outsb
jmp
movsb
mov
sti
xorl
cmp
sbb
dec
or
cmpb
decb
lahf
pusha
mov
push
fmull
sbb
mov
cli
sub
repnz
idiv
push
inc
sub
xor
jl
push
inc
sbb
es
lahf
xchg
das
xchg
in
pop
sbb
fsts
ja
fiadds
pop
enter
ret
stos
mov
imul
ja
push
jnp
fcoms
test
lods
xor
outsl
loop
mov
cmpsb
loopne
xor
xor
pop
mov
es
cmp
cmc
cwtl
ss
pusha
xor
jp
aad
inc
mov
call
jle
sub
push
mov
outsb
and
dec
xor
push
push
fists
add
push
or
jg
popf
dec
lds
adc
dec
stos
mov
mov
insl
shlb
leave
aaa
pop
xor
xor
divl
push
aaa
shl
or
xchg
ljmp
jmp
in
rolb
jb
mov
adc
sti
push
mov
and
pop
lods
jnp
fistpll
iret
sub
cmp
in
push
popf
lds
add
mov
push
call
xlat
lret
test
sub
call
mov
mov
push
in
and
aaa
ret
vorps
and
pop
es
pop
push
cli
dec
pop
push
xchg
movl
setle
pop
movsl
xchg
ficoms
std
sub
dec
lahf
cld
jbe
sbb
sub
in
cmp
inc
or
lods
adcb
or
dec
pop
stc
mov
ds
in
add
xorb
pop
outsl
sbb
lock
mov
xor
mov
mov
and
pop
hlt
sti
lock
fbld
add
or
clc
push
rcl
add
sahf
bound
xchg
pop
in
fsubrs
sbb
loope
xchg
mov
outsb
mov
and
sub
jge
mov
das
test
adc
dec
cmpsb
pop
std
dec
inc
cmp
les
adc
movsl
mov
mov
ljmp
and
cld
mov
and
addr16
cmp
das
vmwrite
jns
ljmp
push
shlb
push
pop
js
sbb
mov
mov
pushf
test
jbe
dec
dec
sti
dec
sbb
add
or
shrb
shrb
cmovne
and
inc
rorb
xchg
mov
idivl
stc
rolb
test
mov
mov
lea
dec
mov
in
push
or
mov
leave
push
int
sub
idivl
mov
dec
mov
add
fstps
pop
sub
jmp
push
cltd
out
push
andl
push
mov
push
cs
outsl
sub
filds
push
movsl
add
dec
iret
nop
or
mov
xchg
nop
push
jmp
push
imul
pop
data16
jmp
sbb
mov
enter
mov
pusha
mov
cmp
xchg
xor
xchg
push
ret
mov
stos
xchg
inc
fidivs
cmp
aaa
xchg
sub
inc
mov
sbb
jnp
sub
inc
ja
dec
stc
out
and
outsl
jl
out
jne
fstpl
xor
mov
cmpsb
mov
push
xlat
sub
cmovge
je
sbb
cmpsb
fidivrs
enter
clc
lret
scas
xlat
mov
aam
mov
scas
andb
jecxz
popf
pop
sbb
dec
add
add
jo
int3
mov
push
push
jmp
sti
cli
dec
mov
jecxz
in
or
add
shll
lods
aas
rcrl
repnz
push
cmc
icebp
dec
mov
ljmp
push
addl
call
push
in
xchg
in
jae
lahf
pop
out
lods
and
xchg
or
push
shlb
adc
fnsave
in
mov
inc
xabort
es
int
xor
aas
dec
push
repnz
icebp
outsl
fsts
mov
adc
outsl
mov
mov
call
jmp
add
push
jmp
mov
mov
loopne
cmp
push
sub
xchg
xchg
cwtl
nop
and
mov
in
push
lret
sahf
jg
mov
sti
loop
add
mov
add
loope
inc
out
sbb
jne
insb
popf
arpl
test
mov
lret
into
and
scas
add
std
xor
mov
addl
outsb
jne
sbb
xchg
add
and
adc
jmp
xor
ds
ffreep
pop
shrl
and
jl
and
mov
mov
mov
dec
xor
or
jl
ds
mov
aaa
movsb
dec
or
pop
loopne
sbb
sbb
push
arpl
add
mov
movsl
cmp
in
pop
scas
inc
add
es
outsb
add
mov
mov
push
dec
leave
aad
enter
mov
sub
inc
adc
mov
push
scas
ds
or
je
xor
jns
call
dec
cmp
sub
lret
cmp
xor
testb
xchg
sub
gs
inc
add
imul
call
xchg
mov
cmp
adc
jo,pn
jo
jb
test
insl
fwait
sub
adc
add
or
mov
call
mov
pop
movsb
mov
sar
push
cmc
stos
fdiv
stos
push
aaa
push
xor
fisubrl
lds
cmp
test
and
sbbb
inc
cmpb
scas
jo
mov
dec
jb
movsb
jno
pop
push
mov
or
inc
push
dec
sbb
add
testb
inc
pop
add
adc
xorl
dec
xlat
sbb
popf
cmpl
lock
frstor
fidivrs
push
jnp
and
inc
sbb
jmp
jge
fwait
jae
dec
not
les
outsb
jbe
imul
sbb
test
adc
ret
mov
add
push
js
adc
cmp
xor
xchg
or
cmp
dec
sahf
adc
js
xor
lret
sbb
push
or
sub
outsl
adc
fistl
and
ret
sbb
adc
mov
xor
fwait
leave
in
pop
call
fs
xlat
je
out
nop
dec
add
jb
clc
push
lahf
inc
adcl
sub
aaa
outsl
aas
cmpsl
pop
mov
ror
je
out
push
inc
inc
stos
jmp
add
pushl
ds
mov
es
push
cmp
in
mov
orb
and
dec
and
and
data16
mov
fmuls
sbb
fmuls
fwait
sbb
das
int
out
inc
sub
jmp
add
js
lods
mov
mov
fistpl
cmp
dec
jno
scas
leave
out
sub
mov
cmp
imul
cltd
sub
jbe
arpl
lret
dec
adcl
push
orl
inc
dec
mov
add
push
fldl
lret
xor
pop
mov
inc
inc
lret
cmp
jb
mov
xor
mov
jg
xchg
jb
lret
div
jae
test
cmp
loop
lods
shlb
adcb
add
lds
mov
xor
jge
inc
leave
lea
mov
stos
xor
pop
sysexit
adc
icebp
push
pop
in
lods
cltd
and
cmpsl
and
rcrl
ds
divl
jmp
movl
lods
sahf
test
popa
insl
mov
xchg
xchg
sbb
ja
pop
je
lret
dec
pushf
jb
pushf
adc
out
repz
es
out
xchg
dec
enter
pop
or
fstpt
inc
cld
push
insl
cmp
mov
les
sub
js
sbb
dec
push
mov
pop
icebp
in
mov
pop
or
push
cmp
xchg
jb
scas
add
roll
cmc
in
fstl
or
or
xor
addl
test
outsb
iret
dec
lret
sub
mov
cmp
add
jmp
push
mov
jmp
into
faddl
mov
pop
mov
dec
xor
mov
jg
cmpsb
and
xor
jns
ret
cld
xchg
or
mov
push
movsb
push
sbb
mov
mov
mov
sti
addr16
insb
xor
mov
adc
push
rorl
jmp
insl
jge
jns
mov
inc
adc
jno
xchg
and
lds
cmp
mov
push
cmp
push
std
imul
insl
adc
int
es
jge
push
or
addr16
mov
iret
sbb
push
int3
popf
es
nop
mov
call
aad
sub
add
jns
inc
push
arpl
mov
push
and
cmpsl
pop
jno
out
jnp
loop
mov
repz
add
faddl
mov
xchg
loope
pop
mov
pusha
cmp
imul
xchg
test
add
mov
add
cmpsl
icebp
sbb
sub
xchg
jle
pop
cmp
stos
jae
mov
jge
xor
mov
int3
sub
xchg
sbb
cmp
add
pop
clc
mov
and
cmp
int
and
scas
pop
push
scas
adc
or
das
fs
ret
xor
popf
sti
les
or
repz
dec
cmp
faddl
dec
cmp
push
inc
in
aas
mov
dec
enter
xchg
jae
sarl
aaa
sub
out
into
lock
xchg
pop
xchg
sub
out
cmp
insl
sti
mov
int
popf
cmp
xchg
shll
sub
jns
lret
movsb
lock
neg
xor
and
xchg
xchg
cmp
clc
add
pop
or
pop
pop
push
adc
push
mov
insl
and
inc
add
sub
inc
lock
mov
sbb
testl
call
sti
test
push
cmpsb
jmp
mov
fmull
dec
stos
shll
mov
fldt
mov
mov
into
push
lods
push
orb
addr16
loopne
mov
xchg
lods
jg
imul
pop
push
and
inc
test
pusha
scas
or
into
ss
adcb
push
mov
jecxz
mov
push
outsl
pop
jle
mov
fisubl
xor
imul
in
lods
lods
mov
mull
movsb
dec
mov
cltd
and
mov
adc
mov
gs
jno
push
mov
mulb
pop
popa
scas
stos
jg
cmc
shll
test
mov
loop
and
mov
cmp
xchg
push
jge
mov
mov
fwait
cli
xor
shrb
gs
pushf
fldenv
stos
cmp
js
movb
sbb
sub
sub
bound
xchg
push
ficomps
aas
pop
jb
and
dec
ljmp
inc
lods
pop
add
xor
sub
jb
mov
popf
shll
arpl
adc
push
hlt
lret
mov
mov
mov
aas
mov
adc
addr16
adc
jle
iret
pushf
push
dec
add
insb
pop
sub
aaa
or
and
sbb
sub
mov
pop
xchg
mov
inc
mov
xchg
loope
ficomps
sahf
mov
sbb
rcrb
or
cmp
sarl
sahf
enter
cmp
in
frstor
dec
add
sbb
ss
mov
aas
ds
adc
lods
pop
out
sbb
mov
dec
rcr
adc
lds
cltd
jecxz
into
cltd
cmp
pop
test
push
adcl
sbb
ds
dec
add
notl
pop
movsl
imul
dec
aam
out
repz
xor
push
out
pushf
fbstp
sbb
js
xchg
jns
xor
dec
adc
imul
and
into
xor
inc
push
xchg
incl
dec
cwtl
push
push
in
ret
and
cmpsl
arpl
leave
shrb
dec
cmp
xchg
pop
sahf
lea
mov
mov
pop
pop
lahf
cltd
mov
test
bound
shl
out
imul
xor
push
out
mov
jb
rorb
lret
inc
jp
sbb
pop
repz
mov
inc
and
inc
xchg
adc
loop
add
mov
xorl
dec
bound
fisubrl
fdivs
jecxz
inc
test
mov
mov
pop
pop
pop
arpl
andnps
test
mov
test
or
mov
xor
adcb
jne
ss
mov
sub
push
scas
jl
aad
popa
fisubs
inc
xchg
xor
popf
iret
clc
ret
mov
cmpsl
lahf
pop
lock
push
xor
icebp
mov
mov
cli
xchg
push
nop
je
xlat
aam
pop
in
xor
jp
iret
fistpl
inc
out
int
push
adc
pop
fldl
xlat
lret
jecxz
adc
jge
pop
push
jl
push
lods
push
test
ret
adc
add
jae
cmp
lahf
cmp
roll
sbb
outsb
push
add
sub
les
inc
cmp
mov
adc
jno
mov
or
aam
or
push
jge
cmp
mov
inc
lds
inc
outsb
and
je
lcall
mov
cmpl
inc
cmp
ja
mov
xchg
push
loopne
notb
ja
and
push
jge
lods
push
repz
sub
and
jecxz
lahf
xchg
jge
scas
push
int3
ficompl
fiaddl
xchg
jge
into
blsmsk
mov
or
mov
mov
pop
ja
mov
lcall
jge
xchg
add
pop
or
inc
icebp
je
push
xchg
std
pop
out
cli
xchg
scas
xor
mov
in
mov
pop
pusha
pop
xchg
inc
xor
sub
jnp
scas
dec
cmpsb
pusha
out
pop
test
outsl
adc
loop
jbe
icebp
mov
sarl
imul
ret
lcall
fsubr
add
ret
cld
cmovns
adc
sub
stos
sbb
mov
cmp
lret
adc
rcrb
popa
jg
adc
fldl2e
or
xor
icebp
mov
add
mov
and
mov
mov
aaa
push
push
add
mov
inc
inc
std
and
addr16
repnz
add
adc
imul
test
imul
xor
shlb
inc
xor
stos
cmp
jns
sti
jns
rcrl
push
push
xchg
in
sub
sbb
test
xchg
add
pop
in
fsubr
cmp
insb
in
jge
sbb
xchg
mov
pop
sub
rcrb
xor
push
or
fmull
test
pop
cwtl
sub
inc
loopne
outsb
inc
dec
xchg
movsb
mov
inc
dec
lock
fidivs
sub
inc
jmp
iret
fsubl
pop
test
mov
int3
mov
rcrb
in
add
sub
repnz
das
int3
jmp
pop
push
mov
inc
xor
pop
sub
pmaxsw
fcomps
or
pushf
outsb
push
ss
fadds
sbb
mov
imul
notl
ret
xchg
dec
mov
xor
xor
pop
cwtl
repnz
push
sbb
adc
movsb
idivb
aad
insb
roll
in
shl
popf
mov
mov
push
and
sti
stc
pop
xor
adc
lahf
dec
insb
pop
shlb
popf
or
dec
pop
mov
adc
cs
mov
adc
xor
ret
cmp
aaa
cmp
stos
dec
ret
sti
movsl
iret
dec
xor
pop
jmp
cwtl
sahf
add
jb
mov
pusha
push
ss
push
bound
neg
fnstenv
les
mov
cmc
call
mov
jmp
loope
popa
lcall
mov
xor
cmp
ds
adc
xlat
dec
les
mov
pop
mov
mov
jno
push
and
loop
out
jmp
mov
and
push
dec
pop
or
test
int
sub
mov
jo
gs
dec
fisttps
mov
sbb
mov
add
xchg
mov
movsl
int3
arpl
cld
call
cmp
xchg
sub
jmp
xchg
pavgb
js
cmpsl
or
sbb
pop
scas
inc
mov
aad
insl
insb
push
push
insb
addr16
in
mov
cwtl
push
push
stos
pushl
fildll
nop
xor
xor
fmull
xor
jae
sbb
cmp
fcmovu
mov
jbe
mov
mov
or
xor
fcom
fiaddl
imul
and
popa
and
push
mov
and
stos
bound
out
shrl
jp
outsb
cmp
rolb
or
inc
inc
pop
or
in
inc
mov
xor
jo
pop
paddsb
pop
jp
pop
dec
add
jb
aad
sarb
int3
xchg
arpl
sub
into
je
mov
les
pop
sub
xor
jmp
dec
subb
jb
and
cmpsl
xchg
insb
jle
dec
push
push
adc
out
jno
sbb
pushf
sbb
shll
out
dec
in
inc
sub
js
rorl
or
or
mov
mov
aam
cmpsl
cltd
mov
and
sbb
popa
nop
inc
xorl
test
pop
icebp
popa
inc
repnz
jno
popf
push
sti
mov
in
popa
cmp
or
xlat
cmpsl
fcomp
xchg
pop
push
sub
sbb
lea
push
pop
cmp
in
add
in
adc
jnp
cmp
dec
or
imul
into
sub
push
push
inc
dec
movsb
mov
xchg
jecxz
or
hlt
lret
scas
inc
push
std
sahf
xchg
push
shll
or
dec
push
mov
cmp
pop
stc
neg
push
ret
jno
push
jmp
shlb
ret
mov
push
call
dec
scas
cmp
imul
pop
pop
cmpsb
arpl
fs
jg
dec
and
and
xchg
dec
mov
sub
imul
ret
sub
cmpsl
mov
int3
fnstcw
xor
mov
ret
jno
pop
add
in
sbb
push
sub
sarl
pop
sub
gs
dec
jecxz
ret
xchg
mov
sbb
out
mov
xchg
sub
xlat
popa
mov
and
sub
jne
add
test
mul
daa
loope
xor
mov
outsb
cli
inc
mov
cmp
mov
cmp
mov
or
cmpl
outsl
shrb
pop
or
sbb
xor
push
mov
jne
arpl
dec
jle
dec
sub
lahf
lds
subb
lods
lea
adc
fmull
sbb
push
and
mov
imul
jns
sti
mov
sub
mov
sti
and
mov
negb
lea
aam
lods
or
sbbb
lds
sbb
psubd
jecxz
mov
popa
cltd
pop
gs
adc
in
xlat
sub
lcall
mov
adc
push
and
out
cmp
jmp
mov
sbb
inc
testl
fadd
mov
push
cld
add
scas
int
cmp
push
fs
xchg
mov
test
mov
nop
in
mov
in
pop
in
daa
in
iret
adc
adc
enter
sub
addr16
xchg
out
jl
cmp
dec
pop
xor
outsl
out
outsl
cs
sbb
add
addr16
sarl
mov
out
lret
pop
das
or
push
or
dec
stos
jmp
cmp
adc
fcmove
mov
jp
test
inc
pop
in
cmpsb
add
pop
jge
mov
cmpb
jp
dec
stc
mov
sbbl
dec
mulb
inc
nop
rcl
xor
sub
out
xor
push
lods
sub
and
push
out
jb
inc
outsl
test
icebp
repz
out
ljmp
pop
std
into
xor
lret
ja
das
imul
pusha
js
xor
xor
xadd
in
and
push
adc
xor
stos
sbb
pop
push
lods
cmp
pop
mov
or
sub
or
push
lret
dec
cmp
mov
mov
jmp
ret
push
xor
dec
out
mov
lods
call
sbb
stos
fists
jmp
push
add
mov
sub
push
jl
sbb
mov
or
jl
stos
hlt
inc
pop
jecxz
and
outsb
and
into
xor
add
les
lods
test
in
inc
sub
xchg
sbb
jae
out
and
enter
popf
jbe
inc
ljmp
loope
mov
pop
sub
mov
xchg
mov
cmp
arpl
push
xchg
rolb
xchg
push
add
xchg
cmc
inc
stc
mov
and
xchg
lss
sbb
mov
clc
lods
mov
cmp
lcall
inc
jb
orb
std
mov
or
mov
xor
xor
push
sub
mov
cli
or
xor
xor
dec
sub
ja
ss
push
pop
sbb
std
pop
or
jl
repnz
sub
dec
push
stos
push
insb
dec
aaa
pop
jne
jge
cwtl
sub
out
into
hlt
adc
or
sbb
daa
adc
les
push
xchg
sbbb
inc
and
mov
in
mov
fwait
or
xor
mov
lods
loop
sbb
into
push
pop
pop
pop
mov
setg
loope
mov
mov
lret
inc
addb
and
dec
dec
xor
or
ds
sub
jge
or
adc
cmp
push
cmp
lahf
inc
sarl
dec
mov
mov
hlt
pop
mov
cmp
cmc
call
outsb
mov
or
daa
out
or
or
xor
nop
jb
gs
jae
rol
fimuls
cmpsl
inc
inc
lods
mov
sub
cmp
outsb
mov
xlat
xor
fdivl
dec
stos
movsb
clc
je
insb
push
xchg
fsubrs
mov
or
in
stc
mov
cmp
push
or
or
and
xor
adc
or
fmuls
cmpsl
test
dec
xor
lcall
adc
bound
dec
movsl
ljmp
es
adc
nop
scas
int3
fistpl
daa
mov
cli
ljmp
int
mov
je
push
and
jo
rorb
lock
xor
mov
movsl
mov
aaa
mov
inc
sub
mov
xor
loope
sbb
inc
mov
repnz
mov
sbb
test
xlat
adcb
jns
repz
insl
inc
push
pop
adc
dec
jnp
mov
or
mov
pop
stos
xchg
jbe
pusha
jecxz
cmpsl
std
dec
test
add
mov
gs
cmp
sub
aaa
fld
insl
and
mull
pop
xchg
out
imul
jl
and
mov
iret
ret
mov
add
inc
sbb
or
arpl
inc
lods
bound
pop
jne
xor
jg
into
je
cmp
pushf
sub
xchg
jbe
js
sbb
fcomp
aam
jne
out
pop
mov
pop
mov
es
push
jg
pushf
mov
in
push
data16
cltd
xchg
in
cmpsb
xchg
cs
xchg
addr16
test
fisubs
stc
adc
mov
rcrb
ret
scas
rol
sbb
add
mov
data16
lret
pop
leave
mov
push
mov
bound
and
lahf
pop
cmp
and
jecxz
inc
push
out
sti
pusha
ss
ss
pop
in
mov
sub
lods
dec
sbbl
pop
mov
pop
push
jle
test
loope
mov
xor
sub
pusha
std
faddl
cmp
fisubrs
sti
or
iret
cld
fildll
xor
je
mov
mov
xchg
enter
in
jbe
and
jl
cwtl
push
addb
test
adc
xor
or
lods
out
insl
push
mov
aaa
call
cs
push
jae
cwtl
cmp
sahf
fdivrs
je
lret
repz
jecxz
fcomps
out
rcl
jns
cmp
xor
pop
orl
lret
jmp
inc
repz
test
sbb
aaa
in
inc
shrb
jg
jl
js
int3
sub
push
xchg
pop
out
fists
in
jle
ret
loope
lret
fistl
je
add
cs
and
xchg
xor
shlb
lods
insl
or
push
adc
mov
leave
mov
movsb
push
lcall
or
xor
mov
hlt
mov
fucomp
or
out
lret
xor
pop
cltd
sub
mov
test
outsb
push
jns
pop
cmp
and
xor
cltd
or
lret
lret
cltd
clc
fptan
mov
pusha
jp
out
adc
dec
jp
add
iret
xor
bound
mov
lea
ja
xchg
cmp
dec
int3
lret
push
out
jmp
in
lcall
inc
mov
aam
lcall
mov
lcall
bound
rorl
sub
pop
jae
jo
test
xchg
sarl
inc
movsb
insb
outsb
and
jb
push
pop
roll
ljmp
xor
lods
in
fcmovnbe
sub
insl
and
aaa
stc
sub
gs
add
jp
test
ret
pop
and
or
das
pop
jb
cmp
es
push
xor
mov
mov
xlat
dec
sub
mov
cmp
clc
mov
test
and
xor
in
sub
mov
movsb
pop
or
push
xchg
jle
lods
call
inc
es
shr
clc
into
sbb
fcompl
sub
mov
add
cmp
inc
adc
adc
push
jno
ret
rcrb
fstpl
jg
leave
cltd
popf
loopne
mov
jecxz
pop
test
mov
mov
incb
rcl
repnz
push
and
cmp
dec
jl
out
mov
lret
xchg
std
inc
mov
mov
sbb
je
shrb
push
or
add
cmpsl
inc
cmp
sbb
loopne
pop
bound
rclb
jl
sahf
mov
mov
neg
xor
es
movsl
mov
xor
cld
sbb
or
push
das
jnp
mov
mov
pop
mov
loop
cmp
or
dec
pusha
stc
sbb
mov
sub
push
adc
cmp
adc
pop
movsl
lods
xor
inc
or
xchg
nop
cmp
pop
add
add
and
ret
ljmp
push
enter
push
push
loopne
stos
out
repz
je
std
pop
and
int
pop
pop
or
dec
xchg
add
ljmp
js
xchg
xor
jae
mul
movsl
pop
mov
dec
jnp
or
int
shrl
into
mov
xchg
cmp
aam
int3
push
sub
and
add
divb
shll
lahf
and
nop
xchg
xor
mov
xor
nop
cmpsl
push
push
ljmp
inc
mov
pop
mov
jg
dec
and
push
outsb
push
add
inc
mov
lock
lret
push
repnz
popa
pushl
jl
and
stc
into
sbb
xchg
in
mov
dec
and
push
adc
lods
scas
jge
insl
dec
pop
ret
adc
mov
pop
stos
push
push
adc
push
jno
jge
mov
bound
out
lret
outsb
dec
int
scas
in
cs
mov
mov
jmp
fs
inc
sbb
mov
push
xchg
lods
mov
les
dec
imul
add
test
lock
ds
dec
xlat
in
mov
lods
test
negl
ud0
adc
pop
imul
push
scas
fs
pop
mov
sbb
daa
icebp
xor
sub
pushf
cmp
or
inc
jb
fsubp
test
stos
cli
push
xchg
or
adc
cmp
and
sarb
mov
push
sub
mov
dec
popa
cli
call
mov
mov
and
lods
cmpsb
leave
les
fstpt
xchg
shl
fwait
repnz
fldl
cmp
fwait
xorb
sbb
popw
cmp
stos
jne
mov
jecxz
jne
sahf
xchg
cmp
and
mov
arpl
xor
test
sub
jmp
lahf
lods
xchg
sti
jmp
jns
popf
clc
fnstenv
and
outsl
testl
jnp
inc
insb
sbbb
ljmp
push
cmpsb
stc
cmp
mov
xchg
fldt
add
or
adc
jnp
decb
lcall
daa
mov
xchg
sti
mov
xchg
and
add
xor
imul
add
mov
or
aaa
jmp
push
mov
fsub
cmp
out
xchg
out
inc
add
pop
incl
out
mov
lcall
sbb
pop
cs
popf
mov
xchg
xor
test
out
addb
int
cmp
mov
jg
cmp
xor
sub
pop
adc
or
shrb
stos
mov
inc
or
rcr
or
je
lods
sbb
pop
loopne
mov
mov
sub
inc
or
lea
pop
push
dec
xor
sbb
mov
fmull
mov
mov
popa
in
push
stos
ja
pop
jae
lret
xor
enter
out
push
xchg
dec
enter
lock
into
or
xchg
jle
inc
cmpsl
dec
outsb
xchg
push
xor
cli
iret
lock
pop
repz
mov
dec
cs
lret
incb
adc
sarb
into
cwtl
jge
add
cmp
push
outsl
dec
jmp
or
movsb
pop
outsb
cmp
pushf
loope
sub
aas
imul
es
stc
and
dec
fmuls
jbe
jl
or
call
cltd
xchg
or
mov
mov
and
movsb
push
loop
jmp
xor
mov
scas
sarb
out
fiadds
xchg
jns
iret
loop
popa
add
inc
in
fs
sbb
xchg
rol
int3
movsb
cmp
fcomps
shl
inc
ds
dec
jp
mov
mov
xchg
out
outsl
hlt
je
stos
xor
mov
into
pop
push
cmp
into
lea
mov
push
xlat
dec
repz
lret
adc
imul
popa
rcrb
adc
lods
or
xchg
cmc
aad
mov
insb
sbb
cmpl
add
cmp
idiv
cmp
push
xchg
out
push
in
jg
pop
add
lahf
xchg
pop
pop
enter
psubd
shl
push
sub
lods
adc
push
dec
stc
sub
inc
pop
lcall
sbbl
push
pop
push
or
in
lret
ja
enter
and
mov
push
dec
dec
rol
inc
loope
push
cmp
mov
or
adc
sbb
les
mov
adc
clc
pop
sub
mov
xchg
cmp
pushf
mov
dec
popa
data16
sbb
aas
add
sbb
in
dec
ret
xor
dec
mov
lds
push
or
cmp
sbb
and
lcall
xchg
dec
int3
ja
repnz
icebp
xchg
daa
mov
adc
xchg
xchg
add
xor
mov
sbbl
and
mov
or
decl
dec
push
xor
jp
dec
mov
fisubrs
cs
test
push
lea
shl
add
pop
pop
push
loopne
pop
sbb
mov
aam
adc
pop
stos
lods
shr
sbb
dec
jg
push
iret
stos
adc
pushf
fsubr
hlt
lock
pop
or
mov
imul
pusha
inc
inc
or
insb
dec
movsl
roll
jecxz
lods
mov
pop
lods
inc
lods
and
shrb
cmp
cmp
stos
lcall
out
in
xchg
adc
sub
mov
sub
lret
arpl
out
xchg
inc
xchg
adc
mov
iret
xlat
aaa
mov
or
enter
mov
cmpb
nop
cs
cli
in
mov
cmp
xorl
push
lods
add
das
xor
cwtl
ret
shl
shrl
test
fsubrl
aas
push
mov
pop
fbld
dec
xlat
push
inc
jb
aaa
sbb
cmp
fdivs
mov
push
xor
xchg
jmp
sarl
arpl
sbb
pop
sub
pop
cmpsb
push
jg
out
xchg
sahf
bound
mov
mov
fisubrl
sti
hlt
xor
mov
jp
push
xor
subl
xor
pop
dec
hlt
insb
jbe
dec
lock
dec
xor
fbstp
jb
sub
mov
lahf
orl
and
jmp
imul
pop
and
xchg
xchg
pop
jp
sbb
std
push
enter
add
cmp
adc
cmpsb
sbb
mov
push
ret
leave
or
sbb
mov
lret
and
frstor
scas
push
pop
loopne
adcl
push
add
mov
push
out
and
sbb
clc
jae
push
mov
stc
pop
jne
push
dec
imull
scas
fsubrs
inc
out
adc
mov
sahf
pop
nop
jecxz
jnp
xlat
dec
jge
inc
mov
jle
repnz
sbb
orl
mov
pushf
xor
stos
mov
sbb
mov
out
clc
dec
call
iret
pop
jp
adc
add
xchg
sub
mov
lds
cvtps2pi
fidivs
pop
je
and
sub
in
jl
aad
or
stos
xchg
pop
pop
scas
scas
mov
push
mov
push
mov
stos
loop
inc
aam
fmuls
lahf
insl
mov
movsb
mov
xor
test
ror
jg
push
out
pop
add
mov
jb
ret
shlb
mov
pop
lret
dec
das
pushf
xchg
negl
shl
in
mov
test
push
jle
xlat
or
cli
aaa
ss
bound
inc
ljmp
loop
mov
jg
repnz
pushf
jl
mov
xor
mov
jmp
mov
dec
push
pop
adc
mov
movsb
sub
fdivl
cld
std
std
fsubrl
in
nop
jno
test
mov
push
push
add
cmpsl
xchg
pop
les
in
dec
pop
pop
cld
mov
add
mov
sub
fldt
jo
loop
hlt
jmp
adc
mov
mov
mov
add
sbb
sti
movsb
shlb
aas
cwtl
mov
push
or
bound
xchg
movb
or
sbb
inc
add
push
lahf
aaa
std
sub
sub
add
and
xchg
sbb
or
mov
fwait
mov
popa
loope
cs
lret
fsub
insl
test
out
rorl
ja
lcall
popf
test
and
sub
out
xchg
xchg
pusha
lahf
outsl
xor
jp
cmc
xor
push
mov
adc
test
pop
aas
sub
lods
pusha
into
shlb
mov
pop
sub
xor
lcall
icebp
int
dec
xchg
lods
or
mov
test
cmpsl
cmp
and
xchg
push
repz
adc
shll
sbb
cld
insb
daa
dec
scas
out
push
pop
std
aaa
cli
push
mov
lahf
adc
ja
popa
inc
jno
enter
jmp
push
out
imul
movsl
push
cltd
inc
and
fmull
test
sarl
fisubs
xchg
jb
xchg
xor
sbb
sti
data16
hlt
lea
pop
mov
push
dec
ret
jmp
jecxz
stos
xchg
mov
xchg
in
adc
sbb
aad
cmpsl
and
xchg
sbb
jo
stc
mov
popa
pop
inc
shlb
je
xor
xchg
and
popf
call
gs
iret
in
lcall
fistpll
nop
shlb
jmp
leave
fs
pop
sbb
scas
xor
dec
and
mov
xchg
pop
mov
dec
std
mov
and
and
xchg
pop
or
xchg
lret
hlt
in
sahf
inc
insb
addb
test
bound
inc
jb
jno
das
mov
andb
cmpsl
les
repnz
popf
push
push
or
mov
ja
xchg
sti
ljmp
sub
stos
lods
add
and
sbb
je
mov
ret
jnp
jle
pop
cmp
jb
add
sub
loopne
pop
adc
in
xor
add
pop
jge
in
adc
test
fisubrl
jge
jle
add
fwait
repnz
cmpsb
aad
fnsave
mov
push
push
push
add
mov
insl
in
mov
sub
sub
inc
js
adc
mov
into
scas
cmp
push
pop
movsb
mov
int
cmpsl
icebp
and
insl
std
or
rcrl
pop
cmpb
mov
ds
jl
ret
rorb
out
pop
xchg
mov
sub
mov
mov
inc
sub
sub
daa
push
dec
nop
jae
and
pop
cmpsb
or
jp
rorl
bound
jno
pop
lods
repz
fisubrl
sub
pop
inc
mov
xor
jb
pop
push
or
or
incb
push
push
cltd
stc
cmpsb
icebp
xor
sbb
stc
ja
adc
loop
mov
fbstp
adc
inc
dec
out
cmp
sub
dec
jno
mov
fcmovnu
lds
in
fisttpl
mov
push
dec
inc
inc
lcall
inc
insb
sub
arpl
mov
jnp
dec
inc
xchg
leave
mov
das
test
inc
mov
adc
add
mov
sub
adc
pop
pop
ss
pop
dec
inc
call
add
clc
enter
fisubl
jnp
fsubs
push
cmp
mov
leave
inc
ret
lcall
inc
in
mov
fmul
mov
mov
mov
sti
push
movsl
push
sti
pusha
mull
fwait
ret
or
xchg
mov
insl
inc
leave
icebp
and
cmp
cmpsb
push
or
outsl
push
dec
in
cwtl
cld
shlb
add
or
fdivl
cs
cmp
push
mov
cltd
jecxz
mov
cli
inc
mov
insb
and
adc
push
adc
mov
or
xchg
cmp
push
scas
test
loopne
in
cltd
out
adc
xor
inc
rorb
sub
or
lret
sub
cld
sub
imul
and
jge
lret
inc
xchg
pop
fld1
xchg
dec
or
in
xchg
lcall
jmp
and
mov
sbb
mov
jns
icebp
int3
out
in
sahf
or
clc
or
fcmovne
inc
int3
mov
mov
inc
push
scas
lcall
cmp
sub
and
mov
pop
imul
jl
sbb
lret
iret
sbb
inc
cwtl
lcall
sahf
cmp
dec
test
loopne
sbb
nop
je,pt
ja
pop
je
enter
cli
movsb
xor
lret
ret
test
jae
jb
cmpsb
or
inc
lret
mov
mov
mov
dec
in
mov
sub
ss
mov
lret
add
push
jmp
leave
loopne
adc
push
int3
push
cmp
pop
mov
js
xor
outsl
in
pop
xor
xor
mov
cmp
in
je
xor
add
stos
xor
inc
shlb
mov
pushf
jnp
rep
lods
and
fiadds
adc
cmp
das
mov
int3
std
sti
add
outsl
popa
insb
dec
shrl
push
int3
shll
rorl
add
pop
pop
push
pushf
mov
mov
mov
test
sub
idivl
movl
int3
inc
adc
stos
pop
outsl
es
inc
bnd
enter
fs
imull
pop
adc
int3
ret
sub
ds
mov
jbe
mulb
adc
movb
dec
mov
pmuludq
inc
add
mov
cmc
pop
mov
jno
mov
xor
push
jg
lsl
xchg
inc
daa
and
insl
rclb
push
shlb
out
pop
xor
enter
fstpt
pop
clc
push
inc
push
inc
scas
out
icebp
cwtl
pop
sbb
mov
inc
rep
jno
mov
jns
fisubrs
in
cmp
daa
sbb
mov
pop
add
and
xor
push
add
mov
ficoms
sub
aas
sub
or
jmp
fnstcw
shrb
push
mov
pop
sbb
and
lods
das
test
sti
filds
or
dec
cmp
xlat
jg
stc
xchg
mov
mov
add
sbb
mov
test
popa
js
adcb
test
sub
jb
cmpsb
cmp
popa
enter
and
shl
mov
call
fsts
xor
iret
pushf
or
test
adc
test
mov
dec
dec
outsb
sub
stc
pop
aaa
pop
jg
jae
dec
popf
fs
sub
pop
aad
ficompl
xchg
adcl
pop
cmpsl
test
inc
lret
xchg
and
lcall
dec
cs
add
test
and
push
adc
sbbb
push
add
mov
dec
dec
daa
sbb
fwait
sbb
cltd
scas
les
addr16
push
push
shr
repnz
gs
cld
xchg
inc
xchg
popa
xor
stos
rcrl
pop
mov
xchg
sub
sbb
jp
mov
mov
popf
cli
enter
mov
sbb
jmp
mov
and
addr16
js
in
fs
sub
mov
stc
mov
icebp
jae
call
imul
lret
jns
inc
out
fwait
test
push
lods
scas
sub
push
rcl
shlb
nop
sub
sbb
stc
es
jle
jae
je
mov
mov
es
aas
adc
into
and
mov
jns
xchg
mov
push
lcall
sub
js
xor
lea
out
cwtl
xor
ret
mov
or
stc
imul
adc
addl
mov
dec
div
shlb
dec
jae
jns
leave
push
shl
pop
xor
int3
mov
pop
addr16
add
or
xchg
inc
leave
jno
xor
rolb
mov
add
xor
mov
ret
cmp
ret
cmp
in
fbstp
cmp
test
adc
mov
in
inc
imul
loopne
pop
jae
inc
out
in
mov
and
mov
in
nop
sbb
data16
xchg
test
and
stos
iret
jns
cli
aam
pusha
pop
sbb
mov
loope
jb
fdivrl
int3
xchg
shr
pop
in
xlat
stos
pop
mov
hlt
icebp
inc
sbb
in
clc
push
lret
orl
das
push
sub
xlat
aam
jbe
daa
addl
sbb
out
loop
xchg
mov
jo
repz
or
mov
movl
lcall
inc
inc
xor
in
clc
aam
mov
subl
pop
stc
dec
cli
aas
pop
mov
fstpl
xchg
repnz
ljmp
in
cmc
popa
hlt
mov
sahf
xor
ss
mov
nop
imul
cmc
loope
jmp
aad
clc
add
xchg
xor
andl
push
imul
push
push
lea
outsl
push
mov
pop
adc
ret
jnp
cmpsl
sbb
jbe
adc
clc
mov
fdiv
aaa
add
inc
test
pop
mov
into
and
popf
test
pop
out
lea
cmpsl
and
std
daa
cld
mov
loope
adc
shl
jnp
addr16
aad
jmp
fs
jne
push
aas
movsb
iret
and
pushf
mov
xchg
dec
sbbl
sub
xchg
push
jl
mov
inc
mov
cmpsb
test
xor
pusha
ret
mov
int
lret
ljmp
mov
hlt
mov
or
cmp
jne
push
pop
fwait
in
aad
dec
pop
cmp
inc
les
stos
in
cmpsb
xor
cmc
out
test
loop
ljmp
jbe
jae
stos
pop
cmp
push
xchg
xor
divb
pop
jo
and
push
lock
enter
push
mov
sti
data16
repnz
imulb
outsb
test
rcrl
out
cs
loopne
push
out
adc
aaa
imull
jno
dec
es
xor
mov
or
push
or
dec
xor
xor
in
jmp
and
imul
add
iret
push
sbbb
push
nop
out
lahf
add
dec
ffree
aam
test
in
aas
mov
or
in
mov
adc
popf
add
cmc
in
mov
jbe
repz
call
push
rol
addb
int
mov
push
clc
pop
xchg
pop
jp
das
leave
cs
stc
mov
pop
mov
add
and
imul
xchg
and
push
jl
dec
push
add
int3
jbe
pop
mov
lret
cmc
cld
pop
cmpsl
test
aas
push
dec
adc
nop
cmpsl
cltd
xor
call
or
xor
mov
push
mov
lret
dec
mov
lea
xchg
xor
daa
pushf
or
and
add
push
pop
popa
xor
call
lret
mov
mov
lods
push
sti
cmpsl
out
vcmpnlt_uqss
pop
push
cmp
mov
leave
adc
pusha
testl
jo
mov
push
ljmp
nop
cmp
das
shrb
loop
in
jle
imul
sub
sti
adc
inc
stos
iret
xchg
and
sbbb
jle
repnz
sbb
cmc
inc
std
lret
call
sub
fisubrl
or
adc
pop
test
sarl
mov
mov
lods
sbb
out
dec
sub
fiadds
cltd
loope
ret
dec
pop
int
scas
gs
subb
sub
leave
and
push
rclb
pop
out
inc
jo
test
jp
icebp
mov
sub
xchg
imul
push
mov
stos
out
lock
std
sbb
lret
sbb
and
iret
mulb
repnz
inc
lea
add
shl
lret
les
pop
loope
sub
ret
sbb
test
push
pop
add
ljmp
test
cmpsb
add
xorb
outsl
enter
je
push
mov
mov
dec
fcomps
xor
pop
cmp
pop
inc
cmp
flds
ffreep
cmpsb
orb
push
mov
or
mov
fcomip
hlt
subl
test
pop
fsubrl
push
leave
andl
add
imul
or
dec
pushf
push
inc
add
or
in
xchg
repnz
rorb
and
addl
shrl
xlat
test
outsb
mov
mov
addb
sub
and
xor
imul
adc
pop
add
add
cmp
xor
jb
andl
nop
xchg
mov
addb
push
roll
xor
xchg
ss
jp
push
cmpsl
pop
or
cmc
lahf
cmpsb
pop
mov
pop
icebp
loopne
sub
aad
std
dec
orb
lret
push
xchg
repnz
test
adc
jp
test
mov
ja
loopne
ljmp
iret
lods
mov
movsl
dec
stos
ds
inc
xchg
or
test
mov
loope
icebp
push
fisubrl
add
pop
mov
scas
jnp
jae
push
in
push
and
out
in
test
push
repnz
xchg
mov
shrb
dec
sub
fstl
rolb
clc
sbbb
rorl
inc
mov
sbb
fs
and
xor
aas
adc
ret
jb
mov
adc
dec
or
into
lret
out
xor
mov
mov
inc
pop
cmpsb
push
imul
daa
int
mov
je
iret
stos
xor
popf
jmp
mov
cmp
popf
mov
das
mov
test
sub
ljmp
and
or
sub
inc
scas
cmp
stc
fcomps
into
lock
cmp
jb
clc
xor
xchg
and
or
pop
jo
mov
xchg
jle
popa
int3
xchg
scas
fsubl
fadds
test
push
cmpsl
iret
sbb
nop
xor
dec
add
ja
data16
pop
mov
sti
xchg
addr16
push
sbb
mov
dec
xchg
pop
xchg
and
pop
vandps
clc
or
jno
stos
test
mov
cmpl
dec
out
mov
pop
cwtl
add
jb
jle
loopne
push
lods
rcll
stc
cmp
outsb
out
imul
ret
cmp
out
cmp
cmpsb
push
xor
cmp
sbb
dec
lcall
jno
jge
lahf
nop
call
or
push
dec
pop
lock
aas
rcll
popa
repz
push
jmp
gs
or
mov
movsl
out
or
adc
stos
cmp
clc
pop
clc
ss
bound
mov
jne
and
inc
rorl
test
aam
or
adc
dec
xchg
cld
xor
pop
jbe
pop
outsb
jle
push
or
jle
push
into
bound
mov
or
mov
call
aam
push
andb
out
repnz
in
sahf
fsubrs
sub
inc
cmp
push
or
icebp
mov
mov
das
jl
or
and
jne
xor
or
leave
jle
cltd
fidivs
jge
outsl
addr16
push
mov
jbe
sti
lods
inc
pop
in
rcr
mov
mov
xor
dec
ficompl
repnz
outsl
xor
xor
mov
fmulp
pop
sbb
pop
add
jge
jo
subl
mov
bnd
pushf
sbb
mov
aam
arpl
mov
leave
daa
out
xchg
mov
fisubs
fldcw
mov
dec
inc
sbb
add
cmp
rcll
stos
or
dec
pop
test
out
jl
scas
ja
cs
pop
pusha
repz
push
aaa
or
push
insl
test
xchg
jno
stos
pop
mov
fnsave
add
push
in
jl
hlt
push
js
lcall
xchg
ret
mov
fidivrs
data16
and
xchg
add
jno
adc
incb
jne
test
ljmp
int
and
repnz
add
xchg
xorb
xor
std
inc
jle
fildl
push
fbstp
insb
jmp
cmp
jmp
push
sub
dec
pop
orb
mov
cmp
sbb
sub
mov
sbb
lret
add
popa
hlt
stos
ret
sbb
push
mov
mov
sbbb
inc
dec
cmpsb
cmpsl
dec
es
sbb
ljmp
lds
pushf
mov
fs
aam
test
xor
mov
mov
cmp
mov
xor
add
mov
mov
in
ret
push
test
cld
aad
lahf
pop
jmp
mov
xor
push
xlat
sub
xlat
cmp
iret
stc
in
sbbb
cltd
and
fwait
pop
std
hlt
jb,pt
pop
out
outsl
add
sbb
shl
jno
lock
mov
fwait
lahf
xchg
rcrl
inc
ss
xchg
push
cmp
and
js
insl
sbb
out
leave
je
mov
inc
je
add
loopne
hlt
mov
out
add
pop
cs
add
fisttps
ds
mov
mov
imul
pop
inc
ja
rcrl
jge
pop
jle
bound
inc
cmp
inc
leave
rcr
sbb
repz
jg
or
mov
ds
das
adc
data16
add
mov
jne
mov
test
stos
mov
jnp
xor
rorl
out
push
and
iret
iret
push
push
in
popl
jbe
inc
imul
and
or
leave
xchg
mov
jle
repnz
repz
xor
jmp
fnstenv
mov
jne
lcall
sahf
out
inc
or
addr16
add
pop
mov
es
cltd
mov
mov
clc
aaa
in
xor
xor
mov
push
icebp
mov
mov
sbb
bound
cmp
sbb
push
insb
cmp
or
pop
xchg
movsb
addr16
mov
fs
jge
inc
or
jo
pop
mov
outsl
sbb
mov
cmc
out
shrb
inc
lock
pushf
je
insb
jae
jge
lahf
and
std
jp
add
add
stos
mov
test
xor
pop
jo
and
mov
sbb
in
outsl
pusha
pop
addr16
ljmp
test
sbb
push
aaa
in
jae
mov
addl
scas
or
or
scas
lahf
lea
sti
xchg
jns
dec
inc
dec
pop
ret
xchg
push
dec
fstl
sbb
xchg
inc
cmp
dec
in
test
cmp
fmuls
and
cmpsb
cmc
mov
push
lea
jle
insb
and
fmull
push
mov
sub
mov
stos
loope
xchg
cmc
leave
dec
xor
les
mov
call
xor
push
fs
mov
daa
mov
mov
xlat
hlt
jae
fcoms
add
leave
js
rorl
push
mov
push
or
fwait
xor
and
idivb
cmp
fidivrl
outsl
xchg
mov
arpl
subl
sub
jno
jne
mov
mov
jbe
daa
mov
adc
mov
idivb
sbb
imulb
loope
out
push
out
xchg
jmp
inc
mov
insl
pop
push
jo
inc
clc
mov
aad
or
cmp
adc
or
mov
dec
add
ss
leave
rcrb
rcl
loope
hlt
xchg
call
pop
negl
xchg
les
cmp
jge
mov
xor
cli
jle
cli
imul
xor
and
sub
loop
popa
enter
pop
pop
pop
repnz
or
jmp
mov
aaa
sub
mov
in
mov
sbb
sub
mov
dec
or
jno
repz
pop
mov
arpl
jno
add
lods
dec
inc
sbb
sti
inc
xchg
and
mov
add
insl
inc
mov
or
mov
cmpl
rclb
or
out
push
mov
gs
push
lods
push
stos
sbb
jbe
stc
push
or
movb
enter
loop
jmp
jno
aad
jecxz
add
push
sub
test
lret
mov
in
mov
dec
icebp
pop
jae
ffreep
clc
movsb
mov
cmp
data16
popf
loopne
aad
frstor
gs
sbb
aas
dec
lds
push
pop
push
mov
jb
roll
dec
push
mov
pop
gs
mov
xchg
cmpb
outsb
inc
adc
ja
mov
mov
jbe
sti
loopne
xor
arpl
or
xlat
ficompl
nop
xor
sub
jo
imul
push
iret
cwtl
aaa
or
jecxz
out
lret
add
mov
xor
test
into
inc
xor
jbe
mov
sub
test
push
push
or
inc
sub
or
std
add
lahf
pop
aaa
ret
jecxz
mov
outsb
stos
ljmp
les
sbb
jae
jae
push
pop
jo
or
mov
mov
sub
cmpsb
mov
mov
mov
xchg
xor
sti
cmp
mov
movsb
dec
notb
sbb
clc
adc
mov
mov
xor
ret
hlt
std
mov
inc
mov
popf
mov
testl
icebp
mov
and
xchg
repnz
mov
mov
add
imul
xchg
fidivrs
repnz
and
insb
inc
xchg
sub
push
fcoms
add
jno
daa
mov
push
movsl
insb
cwtl
les
ds
jo
ret
insb
aam
fnstsw
mov
insb
sbb
jns
sbb
jo
jg
mov
cmc
push
and
std
add
cmp
push
jg
cmpsl
cmp
pop
sti
xchg
adc
loope
popa
pop
leave
loope
clc
sbb
fiadds
fs
les
insb
enter
fwait
pop
gs
sub
jb
jmp
test
shll
into
push
shrl
in
jge
test
out
pop
loop
adc
rorb
mov
jecxz
lods
stos
xchg
mov
sbb
adc
sbb
cmc
pop
lods
ja
ljmp
imul
push
lahf
loope
push
dec
into
je
test
mov
fisubs
push
jmp
pop
pushw
fistpl
cmpsl
pop
mov
in
in
stos
mov
pop
and
stc
mov
and
jb
int3
and
jle
jo
push
add
js
add
cmp
pop
dec
out
adc
add
mov
sysenter
testl
pop
sbb
inc
pushf
stc
stos
mov
and
mov
rcl
idivl
ja
add
lcall
push
arpl
add
mov
pop
fsts
push
pop
or
pop
pop
and
xor
in
jb
lcall
xor
adc
out
sbb
iret
pushf
mov
ret
add
add
pop
push
xchg
inc
or
int3
pushf
add
adc
fsubrs
mov
pop
fs
das
push
arpl
push
imul
xor
cmp
dec
es
mov
jmp
cmp
out
call
gs
adc
jl
or
inc
mov
ja
mov
push
in
cmp
ffreep
dec
push
pushf
enter
mov
setnp
jmp
in
pop
pop
lock
sbb
push
dec
andl
stos
mov
mov
popa
adc
fnstsw
sarl
fiadds
cltd
jns
sbb
or
dec
sbb
jnp
mov
push
xchg
not
xor
daa
sarl
and
into
fisubs
jne
out
test
mov
repz
outsl
outsl
imul
sbb
inc
inc
mov
or
test
shl
hlt
push
fs
nop
js
and
dec
mov
fildll
out
xor
arpl
mov
dec
or
sbb
dec
xor
fadd
xchg
sbb
inc
dec
jg
push
imul
popa
sub
mov
mov
ja
jmp
dec
push
mov
mov
mov
repz
jmp
sbb
push
mov
movsb
lods
adc
lret
pop
lods
mov
xchg
pop
xor
scas
push
daa
bound
fldcw
jecxz
or
cmpsb
imul
inc
sbb
jmp
pop
mov
std
ja
pop
or
lods
test
push
sar
stos
push
sub
cmpsb
lea
ss
or
add
sub
dec
out
sbb
mov
xor
mov
in
jnp
fsts
mov
add
sub
push
dec
cmp
lret
mov
cmc
pushf
pop
testl
loop
ss
cld
pop
sub
inc
movsl
push
sub
pop
addr16
fwait
addl
xchg
out
add
add
sbb
xchg
fsubl
test
stos
stc
adc
stc
inc
gs
mov
icebp
imul
push
xchg
cwtl
outsl
dec
xchg
pop
in
mov
push
jge
jmp
xchg
loope
jbe
jp
aas
lret
out
cmp
mov
inc
fisttps
add
adc
clc
mulb
adc
push
dec
sub
cmp
lahf
test
cmp
add
sbb
aam
leave
mov
mov
pusha
mov
mov
adc
sub
or
jecxz
dec
mov
push
pop
mov
fsubrs
shr
pop
ja
popa
insl
shl
test
dec
sbb
pop
xor
push
sub
cli
inc
std
mov
inc
mov
sti
in
adc
inc
push
push
imul
jmp
stos
leave
in
call
test
jp
test
psubusw
sbb
mov
xor
aaa
sub
adc
mov
inc
or
or
mov
add
pop
xlat
sub
test
rclb
lret
add
outsl
dec
mov
std
cmp
out
mov
xchg
and
pop
ljmp
lods
out
out
add
imul
lea
pop
and
jmp
mov
mov
and
jae
mov
mov
sub
movb
sbb
iret
jns
popf
mov
jb
dec
out
fcmovnu
jg
sub
and
adc
sub
pop
movsl
aad
or
cmpsb
rol
xchg
adc
das
std
adc
test
rol
xor
xlat
push
pop
cmpsl
movsl
inc
xchg
mov
adc
subb
pop
xor
pop
or
dec
jle
lock
sbb
inc
add
or
cmpsl
mov
decb
sub
xchg
mov
stc
adc
mov
mov
test
lock
push
call
das
out
sbb
and
pushf
aaa
jae
daa
ljmp
xchg
lret
into
push
cmpsb
push
jecxz,pt
pop
inc
adc
out
sub
popa
imul
shrb
lret
psadbw
dec
cli
mov
add
rorl
lcall
cmp
pop
bound
aaa
adc
and
hlt
jmp
or
add
dec
mov
scas
push
cmpsb
mov
ljmp
movsb
cld
sub
leave
pop
ficoml
inc
rdpmc
and
repz
cmpsl
dec
mov
loopne
and
jb
mov
inc
out
xchg
fmul
and
mov
insl
add
pop
and
cmpsl
rcrl
add
cs
ss
insb
lret
inc
aad
sbb
pop
pop
cmp
add
push
sbb
fs
inc
sub
mov
imul
ljmp
inc
test
mov
mov
mov
sub
mov
sbb
or
in
sub
inc
xor
xchg
push
cmc
adc
jle
fdivrs
cmp
clc
aad
xchg
xor
xchg
scas
pop
out
or
jae
dec
shrb
mov
pop
xchg
dec
inc
mov
loop
jnp
and
fwait
push
imul
out
xor
rcll
orb
pop
sub
mov
dec
mov
dec
jmp
and
or
pop
outsb
push
jg
mov
mov
fadds
negb
insl
ljmp
lahf
pop
xchg
shlb
jl
inc
sub
push
sbb
mov
or
push
jb
mov
and
mov
pop
cmpsl
pushf
dec
mov
mov
popa
aas
push
pushf
inc
in
dec
sahf
push
pop
mov
stos
out
int
or
lods
lock
cwtl
and
scas
jl
jle
pop
sbb
fcoml
jae
add
dec
bound
sub
imul
xor
fxch
adc
cltd
jecxz
sbb
lret
inc
mov
push
loopne
das
popa
inc
pop
xchg
adc
mov
or
lods
scas
and
push
fwait
dec
jmp
cli
das
and
ss
leave
sti
in
add
pop
nop
lret
inc
iret
jno
lods
mov
cmc
dec
in
std
xrelease
inc
mov
mull
aam
adc
jbe
xchg
mov
sti
and
sub
sub
imul
adc
insl
sbb
sti
pop
xor
movsl
dec
outsl
fsubl
popa
push
stos
stos
dec
clc
shrb
and
pop
lcall
data16
lret
pop
sbb
test
repz
popw
out
and
sbb
outsb
push
addb
jb
push
popa
fcomps
sarl
xchg
rcrb
add
sti
lods
lret
js
in
pushl
je
and
movb
aas
sbb
data16
jl
loope
in
lods
inc
push
std
or
test
orb
outsl
sub
out
push
and
fwait
inc
push
adc
and
adc
fsubl
jmp
pop
xchg
adc
test
dec
adc
push
pop
sbb
outsb
mov
out
xlat
inc
icebp
add
pop
or
cmp
fidivs
fbld
stc
insl
dec
xchg
mov
mov
mov
xchg
jbe
insl
aad
cmp
inc
scas
in
aas
xor
mov
repnz
inc
sub
ds
xchg
ds
imul
mov
or
adc
lcall
cli
jl
push
mov
jg
push
inc
and
sub
daa
inc
sti
jno
pop
mov
mov
imul
mov
and
clc
inc
adc
imul
mov
ret
cmc
xchg
test
push
mov
fldln2
mov
mov
cwtl
ja
test
rcrb
adc
jae
scas
int
sbb
adc
dec
out
out
xor
adc
stc
data16
cmovle
xchg
push
push
loopnew
lds
dec
lock
aas
mov
imul
push
cwtl
in
scas
adc
mov
fists
mov
xor
iret
leave
jmp
stos
xchg
add
pop
xor
jle
jecxz
pop
sub
mov
popa
std
mov
jns
movsb
pop
imul
push
imul
clc
xsavec
inc
shrb
jp
bound
mov
xchg
and
shll
ret
push
fisubl
mov
imul
xor
ret
or
mov
cmp
adcb
andb
into
int
adc
arpl
repz
gs
fsubs
and
lods
shrl
mov
sbb
es
or
sub
mov
divl
arpl
fmull
mov
mov
outsb
xchg
pushf
or
fwait
or
sbb
popl
imul
sbb
bound
js
xchg
stos
in
jnp
jo
adc
ret
outsb
jns
in
pop
mov
mov
pop
dec
aas
daa
imul
les
pop
in
fisttpl
xlat
iret
cmpsl
jmp
add
push
jb
sub
ud1
lret
iret
inc
jno
ds
stc
jp
pop
into
pusha
pusha
xor
pop
out
movsb
scas
add
enter
pushf
sub
push
add
bound
cmp
jnp
lds
mov
jnp
fnstsw
dec
jno
lods
dec
cmp
mov
repz
xor
push
push
mov
enter
inc
roll
mov
jmp
mov
jp
xor
out
inc
insb
imul
fistpll
push
aas
jo
sbb
pop
daa
in
inc
inc
xor
xor
fidivrl
addr16
icebp
fisubrs
mov
int3
ficomps
xchg
std
jnp
pop
lcall
ror
or
cmp
mov
aaa
outsl
mov
jne
add
test
arpl
fisubrl
orl
xchg
mov
popa
sahf
mov
sbb
sbb
sarl
outsb
rcll
cld
pop
pop
add
stos
negl
cmpsb
out
in
xor
insb
nop
cmp
jne
stos
and
mov
inc
cmovl
and
loopne
xchg
repz
mov
fstp
test
inc
cld
mov
test
mov
arpl
mov
sub
je
pusha
cmpb
aad
fwait
test
mov
adc
jmp
int3
cmp
outsl
jge
scas
pop
popf
pop
cmp
jo
mov
mov
ror
test
adc
vpunpckldq
cmc
neg
pop
sub
mov
ljmp
clc
adc
fisttpl
stos
xor
stos
std
scas
mov
xchg
xchg
js
push
mov
inc
outsb
xorb
fsubs
and
and
shlb
bound
stos
insl
or
inc
lock
xor
jae
popf
jnp
movl
push
inc
sbb
jmp
lahf
jo
dec
dec
je
xor
jnp
xor
out
add
fptan
jge
xchg
mov
iret
ret
pop
and
sub
out
mov
mov
outsb
inc
stc
data16
jb
test
xor
dec
ror
and
mov
mov
or
popa
iret
xchg
push
pop
aam
sbb
jns
hlt
cmpl
aas
call
xor
fcmove
enter
mov
mov
pop
out
inc
mov
push
sbb
iret
cmp
sbb
xchg
mov
pop
sub
out
jo
sti
fmuls
mov
pushl
pop
pop
popa
outsl
in
inc
mov
xchg
lcall
or
pop
sbb
pop
jne
mov
jae
movl
enter
add
xchg
push
or
test
push
test
insb
and
xchg
fcoms
test
roll
mov
add
leave
aam
pop
jge
adc
jo
xor
loope
sbb
pop
out
or
mov
or
mov
sbb
jl
cmpsl
mov
andb
and
xchg
sub
sub
lcall
hlt
nop
mov
xchg
mov
push
leave
jne
enter
or
mov
std
add
cli
xor
xchg
add
push
cmpsb
mov
mov
dec
outsb
push
push
jae
ja
pop
mov
sti
into
and
xchg
loopne
mov
pusha
inc
pop
cmpsb
je
sub
jecxz
dec
pop
pop
addl
subl
repz
call
rorb
cltd
or
pop
sub
enter
lret
or
das
hlt
xor
adc
call
xchg
cmp
mov
inc
ja
orl
mov
out
fucom
stos
mov
and
xchg
xchg
lock
pop
mov
or
add
pop
xchg
push
repz
inc
icebp
js
dec
push
sbb
xchg
jno
lea
sbb
pop
fsubrl
and
int3
into
mov
in
inc
pop
cs
cmp
xor
mov
fbld
pop
les
out
repnz
jns
cmp
mov
add
shl
iret
push
push
xor
dec
add
jb
xor
mov
xchg
int
adc
jmp
sbb
andl
sbb
mov
push
fldt
fxch
mov
adc
sub
insl
xchg
shl
shll
int
in
ds
and
fiadds
aas
xlat
sbb
popf
pushf
outsl
inc
test
jnp
sub
stos
push
pop
out
dec
mov
jle
sbb
call
sbb
andl
mov
scas
push
push
mov
mov
lea
mov
push
fwait
out
js
lds
push
add
out
popf
or
lahf
mov
lods
ljmp
xchg
test
imulb
imul
cmp
cld
xor
cmp
sbb
mov
xor
mov
fs
sbb
mov
lahf
xor
xor
ss
pusha
in
sar
and
cmc
cmpsl
out
pop
ds
rolb
xchg
outsb
aam
in
in
test
lahf
in
mov
cwtl
outsb
mov
fdivrs
out
add
adc
lods
hlt
xchg
sub
adc
mov
into
jae
stos
repnz
lock
and
lcall
loopne
mov
mov
jle
dec
add
in
hlt
clc
mov
xchg
ss
outsl
ret
enter
and
sti
lcall
or
or
and
or
les
or
scas
lds
adc
outsl
mov
pop
xchg
imul
sar
fldz
dec
xchg
popf
cmpsb
stos
aad
pusha
fwait
cmc
sahf
push
jo
lret
call
das
pop
push
dec
cmc
lock
lcall
dec
inc
cmp
mov
cmpsl
cmpsb
orl
loopne
int3
push
or
mov
sub
sub
adcb
es
sub
mov
dec
pop
jle
out
loop
lret
js
lret
nop
or
mov
mov
insb
xchg
ret
insl
arpl
xor
pusha
out
repz
cmp
sbb
test
pop
fisttpll
outsl
adc
loopne
mov
flds
lods
repz
je
or
fmuls
insl
sahf
dec
or
scas
aam
nop
mov
pop
mov
xorl
dec
dec
cmp
xchg
mov
insb
pop
mov
fwait
jl
fcoml
pop
pop
movsb
cmp
int
adc
ret
decl
aad
insb
sub
int
das
sub
or
mov
dec
mov
ucomiss
xor
and
popf
aas
cmc
fsubrp
and
nop
popf
lret
movsb
add
cs
inc
jl
xor
aad
ds
jno
pop
mov
or
lahf
aad
inc
mov
fst
pusha
mov
push
mov
test
mov
les
addr16
mov
jbe
in
int
outsl
push
xlat
je
and
pop
pushf
test
out
popa
jg
jl
mov
mov
jmp
sub
das
daa
add
pop
decb
aas
jp
insl
sub
or
push
fmull
add
sti
jg
and
dec
loopne
cmc
sti
popa
out
mov
xor
lods
movsb
popa
lock
stc
push
jg
lcall
gs
call
add
je
leave
and
xchg
imul
jmp
clc
enter
pop
mov
cmpsb
mov
mov
mov
push
pop
sub
rcrb
jae
clc
fildl
jmp
mov
pusha
call
jl
je
js
ja
dec
inc
jne
adc
adc
push
xchg
lret
sbb
cli
jmp
add
jecxz
cmpsl
dec
fidivs
fildl
stc
sahf
and
pop
test
fidivrs
push
aam
notb
lret
inc
push
sar
mov
sbb
fwait
push
push
pusha
xchg
xchg
bound
inc
sti
jmp
mov
outsb
push
enter
dec
sarl
scas
stc
aaa
cld
sbb
mov
cmp
add
mov
dec
or
fwait
into
cmp
adc
jae
pop
out
aad
sbb
sti
mov
mov
cmp
clc
and
xor
push
outsl
mov
add
xlat
push
pop
ja
decl
cmpsl
test
clc
inc
ja
jl
dec
in
pop
add
add
test
pop
mov
xor
push
js
imul
xchg
test
inc
jbe
add
push
cmp
out
push
daa
push
lock
sub
std
je
adc
dec
pop
jmp
pop
mov
cmp
inc
bound
pop
mov
movsl
or
mov
sbb
js
pop
jns
inc
xor
jb
popf
dec
es
adc
call
pop
addr16
fwait
cmp
js
cmp
adc
or
addr16
pop
cwtl
sti
and
mov
scas
outsb
dec
adc
ror
cmpsb
jge
ret
mov
mov
push
inc
cmovnp
mov
fildll
cmp
xorb
jns
mov
pop
hlt
mov
push
or
sarl
std
bound
aaa
arpl
mov
cmpsl
mov
ljmp
aas
xchg
dec
and
shlb
in
cmpsl
mov
aam
sub
data16
push
in
fisubs
mov
and
push
mov
in
incl
outsb
lcall
cmp
cld
outsl
rcrb
cmp
loope
push
aaa
pop
push
stos
int3
pusha
xorb
cmp
pushf
lods
imul
mov
repz
mov
cmp
jo
pop
shlb
add
loopne
lahf
xchg
inc
fnstcw
jae
lahf
inc
cmp
filds
out
imul
jb
cmpsl
mov
and
xor
dec
dec
mov
mov
inc
xor
xor
outsb
inc
mov
icebp
pusha
aad
std
movsb
sbb
sahf
cmp
fistl
insb
pop
adc
sbb
nop
xchg
jno
xchg
loope
outsb
push
pop
insb
sbb
lods
insl
pop
repnz
xorl
movd
pop
icebp
pop
test
out
dec
scas
insl
mov
xchg
mov
sbb
shrl
pop
xor
xor
jne
sub
into
insl
jns
jge
pop
jg
addr16
pop
xor
imulb
pop
sbb
xchg
xchg
test
hlt
lods
or
fsts
mov
call
test
ret
ja
jl
adc
fistpl
sbb
and
into
and
roll
xor
popa
lret
push
adc
and
ds
inc
or
add
xchg
sub
jns
pop
mov
imul
out
xor
mov
scas
xor
dec
fiaddl
adc
mov
loopne
sub
repnz
xchg
aas
and
add
sub
popa
jg
outsb
ret
jns
pushf
les
cmp
testb
je
cld
xor
sbb
es
ret
lret
mov
sub
push
sbb
mov
sub
testl
loope
push
test
call
addl
cmp
aad
sbb
test
xchg
mulb
pop
clc
rcrl
repnz
dec
imul
popa
shll
leave
or
adc
xchg
lods
enter
cwtl
jbe
sub
insb
repnz
xor
fdivrl
fisubs
out
roll
pop
pusha
sub
jnp
andb
loop
inc
cmp
inc
test
and
inc
mov
insb
outsl
flds
outsb
scas
xchg
push
cmpsl
pop
and
mov
dec
pop
jb
std
rcr
inc
addr16
ljmp
fs
movsb
mov
push
test
or
rorl
daa
push
int3
xchg
pop
scas
faddl
inc
pop
data16
cmp
push
xchg
sbb
xchg
inc
adc
fstpl
cmc
and
push
xchg
lods
aas
xlat
scas
xchg
inc
popf
mov
lods
fmuls
add
test
cmc
fdiv
mov
cld
sub
inc
jp
adc
lods
and
movhps
jle
sbb
loop
leave
out
arpl
and
cli
jne
dec
xchg
sbbb
xchg
jp
inc
sbb
or
lahf
scas
lds
test
subb
loop
js
push
lcall
popa
ret
and
inc
nop
out
in
test
in
dec
fldenv
dec
sub
pop
test
mov
mov
mov
inc
movsb
fwait
pop
ss
fisubrl
icebp
cld
iret
sti
xchg
adc
divl
xor
fwait
shl
pop
and
push
scas
jmp
push
lock
push
aam
cmpsb
add
addr16
daa
jbe,pt
shll
cmp
cmp
aas
lock
imull
sub
aam
jo
sbb
xlat
loope
in
adc
popa
pop
add
test
xlat
fmul
mov
gs
in
and
push
sub
shl
aam
fwait
sahf
xor
add
and
ret
cmp
dec
lock
jg
imul
mov
out
pop
cld
jl
mov
fcomps
pop
leave
ljmp
into
loop
sbb
xor
or
nop
push
jbe
and
divl
iret
clc
mov
xchg
dec
cmp
mov
pop
adc
shlb
add
ljmp
sub
xchg
arpl
mov
mov
stc
loope
sub
mov
hlt
inc
mov
add
jl
jae
shlb
scas
xchg
aam
out
lds
jmp
mov
les
or
xchg
push
xor
dec
les
and
imul
pop
clc
dec
mov
jecxz
pop
in
xchg
jle
or
jle
or
cmpsl
mov
sub
or
js
clc
je
pop
sub
mov
mov
in
jo
or
mov
or
sbb
roll
and
aad
out
mov
xor
fsub
mov
gs
push
lea
cwtl
sbb
clc
fs
pop
add
and
mov
loope
mov
mov
mov
sbb
mov
pop
lea
push
xor
outsb
popf
inc
add
cmp
enter
adc
int
push
out
inc
adc
mov
test
stos
imul
cwtl
and
out
dec
jno
shll
pop
movsl
mov
lock
xorl
xor
out
pop
fstps
ljmp
sbb
cmpsb
lock
push
subb
lcall
jge
movsb
add
in
sub
mov
test
mov
sbb
fildl
jns
sbb
lahf
sub
mov
cld
adc
out
cmpl
int3
dec
jbe
sbb
sbb
ret
mov
shl
into
inc
sub
add
sahf
sahf
cmp
test
jp
in
pop
daa
dec
push
std
jno
int
mov
push
in
js
rcl
ret
popf
rcl
test
dec
mov
mov
adc
int3
sbb
mov
jno
outsl
jne
scas
and
push
xor
notl
dec
lods
pushf
ljmp
imul
call
jo
mov
xchg
cwtl
xchg
stc
push
dec
or
repz
ffree
mov
dec
add
sar
sub
mov
mov
xchg
mov
sub
pop
outsb
sub
and
jp
aaa
xchg
loop
push
scas
pop
cmp
cli
movsl
push
iret
xchg
cld
in
fmuls
popf
mov
lods
or
shl
loop
push
andb
sbb
ja
mov
fcoms
dec
into
clc
inc
cmp
mov
xchg
scas
fstps
pop
rcr
pushf
scas
out
or
adc
push
inc
iret
enter
jb
imul
scas
and
jnp
or
inc
push
cmpsb
fucom
mov
outsl
and
test
jl
fwait
pop
pop
push
adc
xchg
or
sub
negb
subl
cmp
in
lods
jle
test
lret
xor
lea
adc
lcall
dec
inc
scas
or
repz
stc
dec
cli
xlat
repnz
lock
xor
nop
sbb
and
loope
cmp
leave
imul
cld
lock
jae
cmp
xor
add
xchg
xchg
inc
jmp
in
pop
mov
ljmp
sub
jne
fdivp
in
or
ret
jl
enter
cs
xor
test
and
mov
rorb
inc
mov
ss
inc
mov
and
movsb
xchg
sub
jne
mov
bound
xor
mov
mov
dec
cltd
js
js
fisubs
mov
cmp
jmp
outsl
sub
cmp
decb
xor
add
test
flds
aaa
sti
fs
decl
jl
in
inc
sbb
repnz
xlat
push
jp
xchg
xchg
cmpsb
xor
jecxz
sarb
mov
jge
jle
sub
pop
andl
cmp
jecxz
in
sub
test
pop
mov
cmp
mov
add
xlat
sub
mov
push
mov
imul
scas
sub
pop
shr
push
pop
lcall
fcom
push
aas
dec
out
ljmp
in
pop
mov
pop
aad
pushf
push
pop
cmpsb
mov
fisubl
in
movsb
pop
xor
lds
sub
dec
push
adc
xor
into
sbb
xor
sub
lret
inc
jmp
pop
mov
or
pop
fdivs
in
push
div
insl
mov
or
dec
test
mov
imul
mov
pop
mov
imul
nop
inc
xlat
pop
out
bound
xchg
fldt
shl
adc
mov
mov
sbb
mov
jmp
call
les
mov
xor
int
std
cmpsb
jle
mov
xchg
xchg
jecxz
mov
mov
xchg
xchg
daa
lcall
mov
rclb
push
jne
jecxz
addr16
xchg
inc
in
call
adc
mov
jbe
push
fsubl
pop
cld
mov
add
pop
sbb
pop
or
xor
pop
mov
icebp
addb
fxch
stc
inc
stos
and
xor
adc
mov
mov
mov
pop
test
dec
xchg
jb
jbe
lock
lea
add
pop
test
or
push
aas
mov
mov
push
add
fwait
daa
and
fwait
push
mov
xor
mov
dec
and
or
push
sbb
push
nop
cmpsb
add
fs
jne
dec
lcall
xor
sub
and
and
testb
inc
adc
clc
xor
xor
stos
lea
aaa
outsb
xchg
or
inc
std
jae
adc
ret
xchg
orb
scas
int3
mov
scas
or
mov
jecxz
adc
mov
ficompl
rorb
shlb
adc
xchg
jno
push
data16
xchg
xchg
outsb
out
stos
mov
mov
add
push
mov
in
lock
lret
or
xor
fnstcw
mov
hlt
je
ljmp
pop
mov
xor
mov
out
icebp
rcll
mov
cmc
pop
mov
repz
adc
mov
fnstcw
mov
icebp
cli
aas
mov
in
mov
lret
mov
ret
mov
cmc
mov
or
pusha
repz
xor
addr16
bound
mov
int
mov
cli
jns
xchg
push
popf
mov
xchg
in
sbb
push
push
lcall
inc
dec
ljmp
aas
bound
pop
sub
rcrb
imul
xor
xchg
mov
fsubs
jge
mov
lock
es
add
xor
lcall
pop
mov
or
pop
in
mov
push
out
sub
jne
int3
clc
into
jp
daa
imul
sub
mov
inc
outsl
push
dec
sbb
insb
in
mull
jmp
ret
push
jg
out
or
out
cmpb
cmp
aas
loope
aad
cmp
std
mov
cmpsl
adc
sub
ljmp
cld
sub
mov
push
and
push
push
dec
cmpsb
fdivs
and
or
sahf
dec
inc
mov
sbb
outsb
pop
jne
call
loop
in
mov
jge
jle
idivl
nop
add
hlt
in
arpl
mov
xor
loop
sbb
adc
out
mov
cmp
cs
leave
stos
shll
cli
push
out
loopne
int3
in
ljmp
cltd
add
jo
into
int3
mov
add
add
mov
gs
pop
outsl
gs
pop
xchg
or
gs
or
data16
dec
push
xchg
pop
sbbl
mov
nop
mov
lds
xchg
cmp
orb
in
inc
inc
lods
xchg
push
add
fsubrs
cmpsb
inc
xchg
xchg
cmp
inc
push
adc
es
icebp
aaa
jno
jb
mov
lock
mov
pop
xlat
lret
cmp
sub
add
arpl
rolb
and
je
xchg
mov
xor
inc
mov
jge
inc
push
int
mov
adc
dec
ja
or
xor
add
stos
pmaxsw
jle
std
jno
pop
stos
hlt
mov
xchg
cmp
xor
scas
fcmovnbe
push
and
mov
adc
sub
jmp
jle
cmp
or
pop
adc
repz
mov
inc
movsb
or
pop
cld
pop
cmp
gs
inc
mov
call
sbb
push
add
mov
and
sbb
inc
inc
or
pop
xorl
imul
add
add
and
cs
cmp
xchg
cmp
push
call
xor
mov
int3
lret
nop
and
pop
gs
dec
or
lods
out
sbb
cmpsl
fnstcw
sbb
sbb
and
not
cmp
aad
sub
lods
cmp
mov
mov
in
cmc
scas
xlat
push
xor
test
mov
aam
inc
and
sub
cmp
xor
xchg
dec
movsl
mov
cmc
sbb
clc
xor
insl
inc
aaa
mov
out
cmc
pop
cmp
push
pop
les
xchg
jno
xor
cltd
sbb
icebp
jb
sbb
or
mov
push
jp
pop
dec
aad
cmpsl
adc
mov
pop
lods
test
or
imul
jl
inc
enter
shl
shrl
xchg
lods
outsl
dec
fisubrl
push
dec
mov
int3
dec
repnz
pop
popa
incb
ret
sbb
ret
jae
xlat
cltd
rcl
fisttpl
push
sbb
outsl
in
jb
loopne
rcll
popa
lods
sub
decl
and
or
es
or
push
fisttpl
outsl
add
sti
sbb
cltd
loopne
stc
mov
cli
fcmovb
push
shrb
repz
adc
dec
jg
into
sub
loopne
add
in
movsl
inc
xor
add
imul
out
fnstsw
adc
in
decb
jecxz
mov
std
in
adc
xrelease
mov
or
pop
mov
cld
sbb
adc
aas
ja
or
jecxz
pop
rcrl
push
test
and
adc
fbstp
push
xor
test
xchg
sub
loopne
ss
ja
arpl
or
mov
jbe
repz
adc
das
cld
jecxz
inc
add
into
xor
mov
sub
rorb
enter
lcall
sbb
cmp
aas
cmp
icebp
cmpl
and
mov
sub
jns
iret
ret
cs
jbe
pop
jo
add
jg
sub
out
mov
jne
push
add
rclb
jns
fs
xor
shll
roll
xor
sar
insl
jg
pop
aam
inc
aas
std
gs
scas
push
es
add
das
loope
sbb
das
outsb
xor
ds
pop
push
sbb
adc
push
xorl
stos
adc
xchg
add
call
sub
xchg
push
outsb
adc
jg
repz
lcall
stc
fsts
popf
lahf
mov
sbb
jle
clc
jne
data16
sahf
and
xor
ret
rclb
leave
jmp
pop
push
dec
rcrb
das
out
push
sub
int
rcl
xchg
pop
jle
mov
cli
jp
xchg
outsl
outsb
orl
movsb
push
and
daa
mov
sbb
mov
and
xor
cmp
mov
xchg
cmp
das
mov
ljmp
cmp
cli
or
stos
rcrl
es
das
mov
inc
push
jns
mov
into
mov
xchg
dec
pop
daa
sahf
int3
sbb
xchg
mov
mov
fs
mov
mov
cmp
mov
sub
jnp
fwait
xor
pop
dec
sbb
jp
sbb
inc
lods
xor
pop
in
mov
je
outsl
dec
je
js
fdivr
movsb
pop
mov
push
je
add
pop
cld
insb
sub
add
dec
flds
aas
xor
dec
pop
insb
mov
jae
icebp
test
loop
mov
sub
sub
adcl
lock
icebp
xchg
je
fisttpl
cmp
push
call
mov
daa
scas
repnz
ficompl
sbb
es
xchg
stos
outsl
enter
or
xor
aad
test
pop
jb
lahf
inc
and
pushf
jnp
enter
pusha
adc
out
out
and
shrb
mov
mov
xor
shlb
adc
cwtl
cmpsl
fsubl
dec
sub
mov
mov
inc
sub
inc
mov
pop
shlb
bound
addr16
iret
add
xchg
pushf
or
jbe
insl
fs
mov
mov
aas
test
jge
add
pop
mov
push
cltd
jne
rorb
lea
push
jne
xchg
and
pop
jl
ds
mov
mov
lahf
loope
fwait
jp
cmp
out
fs
xor
shll
mov
psubusw
sbb
cmc
pop
jbe
push
jnp
sbb
xor
dec
outsb
inc
sbb
scas
xor
mov
cld
pop
cmp
shll
jle
pop
mov
fs
sbb
jmp
inc
fisttps
addb
mov
loopne
in
jno
fidivrl
es
jae
int3
movsb
stos
adc
sahf
or
int3
cmpsb
mov
pop
dec
cmpsl
add
mull
mov
jg
xor
xor
sahf
leave
mov
ret
cmp
loop
iret
dec
xchg
dec
jae
lahf
mov
add
xchg
xchg
popa
mov
sub
in
mov
insb
mov
or
dec
popf
sub
std
pop
sarb
ljmp
fld
pusha
adc
scas
stos
leave
mov
push
cli
scas
aam
adc
out
mov
jno
mov
sti
add
sub
mov
push
cmp
shll
jno
jg
lahf
pop
xorb
rcl
mov
jnp
jmp
cmp
xchg
cmp
sbbl
fnstenv
andb
mov
jo
je
mov
and
fsubl
bound
adc
mov
inc
ja
std
jo
inc
in
stc
mov
icebp
leave
arpl
pop
loope
leave
pushf
or
pop
jl
inc
and
sbb
addr16
inc
mov
stc
cmp
adc
cmc
jbe
iret
rcl
jp
xchg
aaa
es
fdivr
jae
je
addr16
lds
xchg
hlt
aam
ja
xor
mov
xor
xor
arpl
mov
push
idivl
fdivl
sahf
xchg
test
shll
jp
notb
dec
push
call
push
inc
movsl
paddusw
xor
ffree
aam
pop
insl
lods
fldl
stc
pusha
mov
outsl
push
xor
adc
cwtl
mov
push
adc
sbb
inc
jmp
add
addr16
sti
rcrb
rorb
xchg
add
js
xor
pop
iret
adc
push
lret
cld
cmp
scas
les
cmp
aad
sub
stos
out
dec
mov
mov
push
jecxz
push
xor
leave
mov
xchg
mov
cwtl
jae
divb
push
xchg
imul
in
inc
sbb
jge
outsl
cmp
enter
imul
les
mov
test
add
rcl
mov
out
jns
sbb
push
pop
repnz
pop
andb
shlb
cld
pop
push
xor
arpl
add
sti
lret
mov
adc
stos
subl
cmp
jnp
add
sub
insb
std
pop
mov
jl
dec
xor
mov
loope
int
dec
mov
jb
adc
cli
pop
in
ret
ret
push
add
inc
jl
adc
repnz
push
pop
pop
icebp
sbb
dec
test
outsl
pop
jp
adc
xchg
adc
dec
cltd
cmp
adc
stc
cmp
push
sbb
aam
fmul
push
popw
push
sub
hlt
cmpsb
das
xor
ret
mov
addl
xor
ss
cmpsb
mov
cs
jg
in
or
and
shrb
sub
jne
aas
int
stc
outsl
leave
enter
iret
xor
xchg
sbb
fstpl
in
xchg
xorb
dec
sar
push
jns
and
fxch
mov
xchg
mov
sub
xor
pmaxub
jmp
lea
scas
in
xchg
jecxz
pop
imul
cmpsl
outsb
and
adc
pusha
insl
push
adc
rcrb
fisubrl
jno
in
or
or
jecxz
dec
pop
lret
int
pusha
sar
roll
xchg
inc
out
sbb
or
jnp
lahf
and
daa
sti
test
cmpsb
bound
jb
sti
out
in
icebp
xor
mov
sub
outsb
pop
pop
xchg
push
mov
sub
add
add
jp
xchg
sti
in
in
and
add
fwait
mov
imul
jmpw
dec
xchg
jg
sub
aas
xchg
or
mov
xor
dec
cmp
scas
push
lods
unpcklps
jo
mov
inc
xchg
mov
mov
clc
add
dec
hlt
xchg
mov
push
leave
nop
mov
fsubp
pop
fsubrl
popa
or
fwait
mov
sub
pop
inc
mov
iret
shl
push
mov
mov
aam
daa
cwtl
mov
pop
fdiv
rclb
xchg
pusha
jge
test
pop
xor
in
frstor
adc
or
popa
lahf
shrl
pop
lods
stos
sarb
adc
pop
cmp
mov
and
pop
aaa
or
inc
mov
push
inc
mov
mov
insl
pop
push
psllw
repnz
icebp
inc
add
adc
adc
cmc
rcr
push
push
jg
xor
int3
and
jns
pop
push
test
jg
movsl
inc
adc
dec
inc
jle
pop
mov
imul
aaa
sub
mov
adc
cli
in
xor
mov
xchg
xchg
and
push
das
jle
sub
iret
bound
adc
xchg
mov
xor
cmpsl
out
mov
sub
and
lret
lret
pop
popf
outsl
dec
das
pop
fwait
and
das
sub
push
data16
imul
stos
test
imul
sbb
arpl
jl
out
jle
push
int
adc
shl
xchg
mov
mov
adc
stc
cli
orl
dec
push
sub
loope
loopne
mov
add
das
lock
jb
iret
mov
or
push
out
jmp
and
pop
jp
adc
dec
inc
clc
sub
adcb
lahf
pop
and
pop
xchg
stos
into
cmc
sbb
sbb
push
mov
fsubrl
sbb
out
add
pusha
jbe
or
jecxz
fwait
mov
xchg
stc
int
popa
sub
mov
das
xlat
mov
mov
and
pop
push
shr
je
push
or
xor
cltd
mov
or
push
enter
lds
nop
inc
xchg
or
cmpsl
ds
fildll
adc
ret
shlb
cltd
mov
fnstsw
xor
xchg
cli
pop
mov
out
sbb
daa
enter
mov
push
mov
mov
popf
clc
stos
sub
fsubl
rcrb
mov
or
push
movsl
jae
icebp
xor
addr16
push
pop
xchg
push
pop
aam
xorl
mov
and
jmp
push
mov
mov
inc
lods
pop
or
jle
push
jecxz
push
lret
cmp
rolb
data16
aas
pop
and
stc
stos
mov
or
int
aas
mov
inc
cmpsb
mov
pushf
jno
je
or
pusha
jge
enter
jecxz
and
cmpsl
fmull
cmpsb
cmp
sahf
mov
pop
inc
repz
into
xor
inc
push
pop
and
jbe
or
or
fistl
sar
cltd
outsl
iret
std
lods
out
in
cmp
ja
or
push
xsavec
pop
in
ret
stos
adc
cmp
outsl
fwait
inc
loope
lret
ja
push
ja
nop
or
push
dec
push
pop
pop
or
popa
in
xor
xor
aaa
imul
mov
pusha
les
jl
std
ss
iret
jmp
outsl
inc
pop
shlw
lds
mov
mov
push
mov
icebp
lods
lret
lahf
repnz
jnp
in
mov
scas
imul
mov
ss
dec
aam
xor
leave
push
arpl
cmp
fildll
xchg
push
pop
mov
and
clc
repnz
cwtl
movl
push
xchg
jae
aad
mov
xchg
or
ss
int
add
dec
sub
xor
stos
mov
mov
test
aad
inc
sti
lahf
xor
adc
dec
aaa
inc
and
out
inc
popa
xchg
sub
cmp
sub
sbb
movsl
pop
cltd
pop
push
mov
aad
mov
movsb
mov
or
mov
jp
mov
xchg
push
movsl
rcr
cmp
popa
add
mov
mov
sahf
jno
jp
popa
outsl
ss
je
pop
dec
mov
test
sti
mov
push
push
and
sbb
data16
jae
add
xchg
stos
push
mov
pop
xor
xchg
jg
into
sub
xchg
icebp
jp
fists
sub
mov
cmp
sarb
cmp
je
mov
push
mov
xor
inc
bound
cmp
sbb
sub
mov
pop
pop
in
jge
pop
rolb
and
xchg
mov
scas
or
test
mov
cmp
push
push
ficoml
repnz
lret
inc
push
test
push
xchg
iret
loopne
jne
and
inc
fsubr
add
in
enter
call
movsl
cld
arpl
je
daa
out
jg
pop
ja
mov
xor
sbb
mov
test
fdivrl
xor
pop
adc
pop
movntq
out
inc
inc
movsl
std
ljmp
push
imul
das
jg
dec
mov
sub
testl
test
movsb
pop
sub
dec
and
xchg
xor
adc
mov
bound
daa
mov
sbb
mov
pop
pop
loop
adc
add
and
call
loope
outsl
rclb
sahf
push
cwtl
and
roll
addr16
jo
xchg
vmovlpd
sub
cmp
jge
icebp
cmp
mov
push
xchg
mov
loopne
fs
mov
cmc
xchg
out
testl
mov
ss
cmc
and
lds
mov
in
push
cmp
das
js
add
mov
jmp
push
gs
scas
int3
lds
sub
int
orb
shrl
add
cmp
clc
adc
mov
fldcw
stos
repnz
test
push
xchg
notl
popa
xor
mov
scas
sub
cmc
cmc
scas
cwtl
xchg
jo
or
imul
push
pop
popf
mov
mov
popa
dec
push
daa
push
push
sbb
jns
lcall
repz
sbb
fisubrs
inc
sahf
xor
or
mov
xchg
fwait
mov
jnp
jnp
add
xchg
sbbl
orl
int3
or
enter
mov
mov
scas
lret
fsub
imul
jne
push
mov
jl
cwtl
pushf
cs
roll
les
dec
inc
jo
pop
gs
fisubl
cmp
jl
pop
or
lret
test
jb
jns
mov
shrb
mov
inc
in
inc
mov
jo
and
mov
imul
ss
andl
cmp
mov
add
mov
fnclex
jbe
sub
stos
or
jo
mov
ret
mov
adc
dec
rcrb
xchg
add
pop
mov
jecxz
mov
dec
sbb
dec
pop
sbb
cli
sahf
fwait
fs
dec
mov
mov
iret
xchg
inc
dec
fs
repz
pop
sti
out
sbbl
jmp
mov
fadd
xchg
xchg
loopne
mov
fcompl
loop
test
int3
js
pop
sahf
mov
sbb
std
insb
imulb
mov
cld
xor
cmp
and
jno
mov
fcom
jo
pusha
iret
outsl
shr
imul
or
jo
shl
xlat
inc
jbe
mov
hlt
jmp
inc
mov
mov
repz
adc
jmp
rcl
add
dec
sbb
int
out
scas
xchg
inc
decb
pop
mov
sar
and
mov
sub
mov
sti
cltd
xor
clc
std
scas
adc
jns
shlb
push
adc
inc
loop
insl
outsb
sbb
stos
cmp
imul
mov
loopne
push
repnz
xchg
outsb
fisttps
test
mov
imul
xchg
xchg
push
jno
xor
test
popf
lock
leave
xchg
popf
xchg
lcall
out
bound
cmc
pop
cli
bound
mov
xor
jo
jle
and
inc
imul
pop
cwtl
xor
popf
cmpsb
adc
mov
leave
fistpl
push
insb
push
xchg
jb
pop
jmp
cmpsb
or
jmp
mov
es
xchg
inc
jmp
decb
cmpsl
out
repz
subl
cmc
popa
mov
aas
xchg
xor
jne
mov
stos
js
and
mull
fwait
rclb
aas
insl
stos
inc
and
bound
test
jno
insb
lods
daa
insb
test
pop
push
imul
dec
subl
je
add
into
orb
in
ds
es
sbb
rorl
fs
push
add
jae
add
out
inc
and
pop
pop
dec
xchg
fdivrl
push
jno
pop
dec
out
out
cli
cmpsl
je
mov
jno
pop
push
outsb
adc
push
ljmp
rcr
scas
repz
arpl
mov
xchg
jmp
in
es
popa
adc
add
dec
jmp
push
cmpsb
aad
pop
push
pusha
sub
jp,pn
xchg
adc
xchg
fdivrs
pop
and
mov
scas
adc
inc
xor
int
aaa
dec
mov
xchg
aam
pop
icebp
inc
test
jl
mov
xchg
cmp
cmpsl
mov
cmc
xchg
popa
loope
mov
lea
mov
mov
cmp
in
test
sarl
test
loope
mov
jecxz
mov
les
xor
repnz
repnz
shlb
pop
push
les
pop
xchg
adc
mov
pop
jge
mov
in
and
sub
sbb
out
xchg
fwait
dec
push
jle
test
push
fsubs
pop
mov
add
jbe
daa
push
mov
int3
jp
mov
jl
or
or
inc
adc
rolb
sub
loopnew
add
icebp
mov
ljmp
scas
in
js
sti
add
inc
mov
jo
out
xchg
sbb
push
mov
outsl
imul
dec
push
xchg
das
stc
pop
in
or
fidivs
add
dec
push
sti
cld
push
lea
adc
out
adc
mov
inc
inc
sub
cmp
cmp
fdivl
jno
fnstsw
mov
cmp
pusha
stc
xchg
frstor
out
cmp
push
fisubl
loop
lock
mov
xchg
imul
loopne
xchg
arpl
sub
je
push
cltd
dec
sbb
and
aas
cwtl
dec
icebp
xor
pop
cli
inc
xchg
inc
xchg
js
jge
fdivl
punpckldq
cld
push
mov
or
pusha
jnp
rolb
ljmp
int3
dec
mov
inc
clc
jg
dec
pop
cmc
fists
inc
stc
lods
insl
lahf
fcmovne
hlt
jp
fbstp
ja
pop
test
lods
xchg
shlb
jge
mov
push
or
sti
cmc
fadds
xor
cmp
aad
add
pop
mov
and
in
adc
std
ja
adc
add
mov
scas
lea
js
adc
or
pop
or
xchg
cmp
repz
push
mov
popa
add
cli
push
sbb
out
push
fildll
icebp
push
ja
lds
dec
js
loope
mov
sub
mov
xor
jno
iret
cmp
dec
push
clts
out
lret
fnstenv
cs
les
repz
inc
cli
cltd
adc
mov
iret
add
imul
jb
pushf
test
lea
add
in
push
mulb
ret
add
dec
test
pop
sbb
push
cmp
sbbb
loopne
jmp
bnd
ljmp
in
clc
in
dec
sbb
movsl
push
adc
fstps
je
dec
aam
pop
jne
sub
mov
lea
mov
push
das
iret
add
or
imul
or
out
inc
inc
xchg
cwtl
mov
jnp
or
fldl
jp
mov
mov
sti
inc
cmp
test
cmp
stc
jbe
jno
outsl
pusha
fdiv
pop
cld
mov
rorl
add
mov
mov
inc
movsl
clc
sbb
xchg
repz
outsb
lock
ret
out
popa
stos
adc
inc
jo
xorl
jne
push
push
fnstsw
or
sub
push
outsl
jo
out
sub
xchg
xchg
sbb
leave
fwait
leave
push
repnz
xchg
scas
and
xor
lock
inc
fstpt
movsb
push
dec
insb
sub
pop
nop
pop
faddl
test
mov
call
lods
lds
shl
mov
stos
pop
xchg
mov
in
cmp
pop
es
pop
cmp
and
inc
out
lds
shlb
jae
mov
mov
dec
mov
inc
dec
fwait
adc
imul
push
das
pop
mov
jecxz
xor
xor
cmp
mov
jmp
testb
sub
xchg
fcoms
addr16
sub
mov
adc
incb
jns
call
aad
das
nop
addr16
fidivs
sarb
ror
adc
push
jb
or
add
mov
jbe
sahf
mov
mov
push
sarb
hlt
fistps
addr16
mov
movsl
in
lods
dec
and
jmp
jnp
cmpsl
xor
cmp
fnstenv
mov
mov
or
xchg
out
test
inc
add
loopne
repz
out
out
push
sbb
ds
fstl
adc
je
nop
xor
ljmp
mov
jne
iret
test
fsub
add
je
jbe
add
lods
cmc
inc
mov
ljmp
mov
mov
adc
sub
or
mov
lds
mov
adc
test
outsl
mov
scas
jbe
adc
inc
in
subb
jge
jp
dec
test
push
xchg
inc
rcl
xor
test
out
stos
loop
jp
xchg
aaa
sub
pop
add
xchg
stc
rcrb
pusha
sbb
xchg
mov
sub
xorl
cmp
pop
mov
loop
stos
adc
mov
aaa
mov
dec
adc
test
cmpsb
fs
inc
loop
test
les
pop
jp
mov
jmp
outsb
lods
and
and
adc
ret
and
cmpsl
jg
mov
fwait
and
inc
pop
fidivl
lock
mov
outsl
mov
and
mov
idivl
mov
das
sbb
cmp
mov
and
fcoms
int
jge
adc
mov
shl
fimuls
movsb
es
xor
cmpsb
mov
jae
test
scas
icebp
cli
aam
cmp
inc
push
ror
pmuludq
scas
pop
inc
sar
pop
sbb
subl
aas
xchg
sbb
cmp
xchg
cld
inc
jb
inc
dec
fimull
push
daa
xor
imul
or
ficoml
sbb
lcall
sti
inc
data16
xchg
mov
push
popf
mov
push
addr16
out
jb,pt
out
xchg
jge
push
sub
fwait
loop
hlt
jno
aad
sbbb
sahf
xor
lea
lcall
fstl
stos
sbb
fldcw
sahf
ja
push
pop
stos
or
xchg
jmp
stc
pop
jle
mov
loop
pop
adc
fisttps
lret
shll
mov
sbb
ret
leave
roll
roll
outsl
repnz
mov
lahf
je
pop
cmp
xchg
xor
stos
add
ss
pusha
cmpsb
cmp
or
mov
lock
fdivrp
dec
xor
imul
and
lret
cmp
add
rcl
divb
cwtl
arpl
adc
aad
inc
xlat
mov
sub
jb
or
adc
sub
popf
inc
inc
cmpsb
popf
rcrb
sbb
je
insl
mov
imul
pop
pusha
dec
repz
repnz
adc
jge
push
push
inc
mov
mov
jecxz
xchg
or
xchg
sub
mov
xor
in
jmp
xchg
fmulp
adc
jns
stos
jno
add
adc
fsubp
mov
sub
in
push
xor
sarl
in
cmpsb
cmp
sti
repz
iret
ficoml
lret
xchg
cmp
stos
dec
push
push
into
fisubl
mov
inc
inc
inc
jmp
fsubs
or
dec
xchg
mov
out
mov
xor
push
stc
cmp
mov
icebp
out
imul
push
out
ss
sbb
inc
shr
ljmp
fs
cltd
scas
cmp
jns
fiadds
stos
sbb
stos
xchg
mov
cmp
sbb
in
jle
push
mov
push
cwtl
mov
jmp
pop
sub
push
leave
jge
xor
pop
stos
push
hlt
rclb
push
mov
or
pop
fs
mov
ds
inc
fcomp
lret
mov
cli
jno
xchg
mov
and
outsb
cwtl
popa
sub
mov
mov
leave
and
pop
or
mov
insb
mov
mov
cmpsl
bound
mov
ret
pop
lods
pop
inc
and
push
dec
push
jae
fsubrl
add
iret
gs
pop
mov
mov
test
rolb
addr16
adc
xchg
aas
sub
xlat
andb
sub
xchg
push
pop
andl
cmp
xor
lret
into
mov
and
jb
xchg
popa
add
adc
jg
mov
leave
sbb
pop
pop
enter
push
aad
mov
xchg
cmpsl
cld
adc
and
ror
mov
cmp
mov
sbb
jle
and
clc
push
clc
jle
stc
outsl
popf
pop
add
out
or
outsb
dec
push
mov
or
adc
sahf
insb
add
mov
mov
mov
cltd
ljmp
jp
mov
add
fucomp
fcmovnb
pop
mov
out
xchg
xchg
xchg
pop
lret
mov
jns
aas
arpl
mov
jmp
ja
xchg
push
mov
sub
xchg
jo
movsl
pusha
movsl
pop
mov
insb
push
jmp
call
ja
divb
xor
xor
outsb
and
dec
movsl
lcall
cs
rcl
cmpsb
inc
stos
and
push
call
mov
xchg
mov
cmc
or
cmp
xor
in
repnz
data16
dec
fldt
or
lock
sbb
popa
cwtl
inc
test
sbb
sub
sub
pop
push
daa
iret
lock
mov
inc
pushw
mov
dec
fdivs
data16
adc
mov
xchg
dec
ficoms
adc
sub
inc
cs
movsb
mov
mov
push
divb
imul
hlt
fmul
sub
arpl
enter
sbb
jns
mov
ret
popf
jo
xchg
jno
sub
xor
mov
aaa
scas
push
js
ret
mov
push
sub
push
jb
add
test
or
sub
nopl
mov
sbbl
rcll
mov
sub
add
into
out
fistps
push
jns
mov
push
repz
push
clc
and
loopne
push
jmp
mov
inc
in
negl
sub
cmpsb
push
repnz
aam
xor
int3
dec
mov
fistpl
repnz
popa
fldt
jo
subl
ret
mov
out
jmp
add
test
push
cmp
pushf
js
sbb
call
fmuls
test
je
add
lcall
insl
repnz
push
jb
push
pusha
sbb
mov
mov
adc
fstl
outsb
pop
mov
test
push
shl
cmp
aam
sbb
stos
lock
pushf
xchg
js,pt
insb
dec
and
add
fwait
test
jmp
sub
cli
xchg
inc
xor
or
cmpsl
lods
sub
cmpsl
mov
mov
cmp
insb
push
or
lahf
sub
and
dec
xchg
sub
dec
push
xchg
repnz
and
jbe
mov
pop
mov
clc
xor
loop
xchg
inc
dec
jbe
sbb
addr16
mov
jae
int
aad
lret
push
ljmp
sbb
add
sub
adc
mov
pop
aaa
rolb
mov
das
jbe
xchg
dec
test
push
ffreep
lret
ja
mov
mov
pop
std
push
xchg
xchg
xchg
sbb
xchg
xchg
or
call
mov
ret
jb
cli
mov
push
popf
imul
push
xor
lods
test
xor
mov
mov
pop
lahf
mov
in
sahf
xchg
aam
pushf
xor
push
movsb
aas
add
adc
movsl
popa
adc
roll
out
mov
cltd
cmp
mov
jb
add
lcall
ds
fwait
les
pop
xchg
lret
arpl
and
jmp
fidivl
add
insb
push
mov
ror
int3
mov
cmp
push
clc
aam
testl
xchg
push
xor
mov
fstpt
sub
mov
fstpt
stos
repz
lcall
pop
lcall
icebp
in
mov
mov
jle
pop
lea
out
jns
jns
and
jge
fwait
aad
or
cmp
inc
jecxz
sbb
mov
iret
push
xchg
jecxz
cmpsb
inc
push
ficoml
jne
jne
add
addb
negl
sti
xchg
add
push
or
pop
push
add
mov
lret
loop
je
imul
test
clc
ljmp
ljmp
out
xor
xchg
nop
xchg
out
es
outsb
xchg
xlat
daa
mov
xor
lods
iret
add
xchg
xchg
out
xlat
addl
pop
loopne
call
jo
mov
adc
mov
scas
test
cmp
push
test
sbb
cmp
cs
jl
sub
dec
add
dec
add
cs
sbbb
imul
mov
push
xchg
add
adc
sti
lcall
mov
jae
pusha
int3
pop
ret
out
inc
cmp
xor
jp
jno
inc
imul
fadds
ss
lods
fstps
sbb
xchg
stos
sbb
push
jg
jg
fdivrs
mov
mov
aas
adc
mov
movsb
shll
data16
dec
pushf
scas
fwait
cs
outsb
aaa
mov
iret
sub
dec
gs
mov
fistpl
lcall
int
lods
sub
cs
fs
mov
mov
sbb
out
scas
jmp
mov
outsb
in
imul
mov
cmc
jg
jb
fs
xor
sub
pusha
pop
addb
xor
dec
sbb
arpl
sbb
ds
test
jl
mov
mov
cmp
cmp
daa
shl
in
ljmp
mov
dec
push
lock
mov
jl
gs
mov
sbb
int3
xlat
fnsave
and
sub
movsl
je
mov
inc
imul
test
sti
cltd
rorl
jge
gs
add
cmc
pushf
es
xchg
lret
leave
clc
dec
mov
fisubs
jae
cmpsb
cwtl
push
je
mov
or
cltd
xchg
out
mov
or
sub
cltd
xor
mov
jg
test
or
push
xor
pop
aaa
rorb
or
or
int
fdivl
pop
push
fimuls
mov
push
imul
addl
mov
adc
pop
imul
inc
cwtl
ja
push
inc
xchg
cld
fbld
int3
sbb
and
pop
es
test
dec
lds
inc
xchg
cmc
iret
mov
lds
push
ljmp
lret
pop
sbb
shrl
outsb
sbb
scas
bound
xor
xchg
popf
fmuls
dec
xchg
loop
xchg
imul
dec
les
mov
dec
add
inc
nop
lds
jge
fs
push
xor
jne
sbb
jmp
inc
pop
xchg
fcoml
imul
std
mov
dec
leave
sbb
mov
push
sbb
pop
sbb
fdivl
push
or
lret
icebp
sarb
addr16
pop
inc
cmp
jns
sub
push
pusha
movsb
mov
jecxz
mov
cmp
ss
mov
sbb
subl
popa
cmc
clc
loop
add
and
adc
sbb
and
push
inc
or
jae
es
clc
mov
jecxz
mov
ud0
in
clc
or
cmc
xlat
xchg
xor
push
int3
lock
cmpsb
or
loope
inc
cmp
addr16
sub
xor
adc
jecxz
ret
jmp
sbb
and
ja
pop
loop
pop
jmp
mov
movzwl
mov
stc
cmc
mov
cmpsl
mov
pop
mov
xchg
es
lods
and
jnp
mov
xchg
cli
aas
dec
mov
ds
jns
subb
jl
dec
mov
add
mov
clc
out
dec
loop
push
jle
in
lock
add
xor
cmpsb
in
lret
mov
imul
mov
and
stc
fwait
shlb
mov
iret
mov
xchg
stos
repz
sub
int
adc
dec
ljmp
xchg
inc
adc
cmp
adc
or
cli
shrl
es
sub
jno
nop
pop
mov
test
cmp
xchg
sub
std
or
arpl
dec
les
mov
leave
xor
fcoml
cmp
lds
nop
push
mov
or
mov
insb
sti
addr16
xchg
mov
push
test
sbb
pop
jmp
pushf
sub
pop
and
mov
cli
xor
jne
shlb
mov
stos
scas
and
inc
lcall
mov
xchg
push
push
mov
jle
mov
mov
cs
xchg
call
lret
subb
jge
pop
enter
lret
inc
mov
mov
mov
push
mov
stc
icebp
sbb
xor
cmp
push
int
ret
stos
les
push
mov
xchg
xchg
adc
leave
push
pop
ss
in
xchg
lcall
sbbb
dec
ja
inc
cltd
je
jbe
mov
repz
insl
or
pop
nop
xor
cs
xchg
push
push
imul
mov
das
dec
mov
inc
loop
mov
cmc
out
mov
xor
loop
sbb
cli
jb
shr
xor
xor
mov
inc
sbb
popa
in
jae
inc
aam
jns
mov
sub
out
shrl
mov
arpl
cvtdq2ps
out
push
push
mov
and
jp
fucom
cmp
pop
roll
or
mov
dec
xor
mov
pop
push
decb
ret
psrad
jle
push
jno
shll
icebp
imul
pushf
and
jge
xchg
imul
xor
inc
fidivl
xchg
jle
jp
repz
mov
flds
jecxz
xchg
push
in
adc
jecxz
shlb
jne
out
test
xor
mov
ret
inc
ret
jne
add
in
les
cmc
popf
or
scas
icebp
add
stos
aam
fisttps
mov
inc
clc
icebp
push
or
pop
scas
xchg
not
sub
xchg
pop
push
jae
sbb
in
jnp
jae
cmpsl
outsl
cld
int3
and
movsl
pop
mov
and
aad
into
push
mov
sbb
repz
aaa
mov
lock
and
stos
fstpt
push
mov
or
jmp
or
push
push
inc
test
adc
stos
mov
push
push
call
jmp
cltd
aas
sub
add
ss
das
outsb
cmp
jo
mov
nop
data16
cmovg
jp
daa
or
rcll
lret
inc
mov
dec
data16
push
lds
idivl
shrb
or
addl
push
aad
mov
cmp
jo
lret
xlat
loop
lret
adc
jmp
imul
xor
mov
ja
test
aas
push
outsb
rcl
inc
bound
mov
mov
mov
xchg
mov
pop
mov
mov
out
into
pop
lret
sarb
js
into
mov
mov
or
dec
add
gs
inc
ds
in
hlt
pop
dec
dec
push
sahf
inc
cmp
xor
push
les
sbb
xchg
xchg
push
gs
fwait
vpor
fwait
notb
mov
mov
push
sub
shrb
fdivrs
push
xchg
dec
lcall
push
sbb
mov
xor
out
stos
sar
mov
mov
hlt
insb
out
lods
pusha
cld
jnp
cmp
loop
mov
movsb
les
inc
sahf
fsubl
and
ss
inc
push
add
push
cmpsb
mov
xchg
test
or
nop
and
jecxz
mov
sbb
xchg
loopne
cmp
bound
push
pop
sbb
xchg
mov
sbb
aad
xchg
xchg
nop
loopne
xor
cmp
or
cmp
leave
push
pop
jns
push
xor
pushf
xor
jle
or
fsubr
lock
out
jno
out
sbb
nop
cmpsb
xchg
cs
gs
loop
xchg
sbb
imul
mov
sarl
sti
lcall
clc
repnz
lcall
in
fimuls
jae
mov
rcrb
cwtl
jo
add
loope
fistps
sub
push
jge
cmc
sub
in
cmp
cmp
rorl
jmp
xchg
data16
fldcw
ljmp
mov
mov
mov
fwait
mov
push
testl
pop
nop
fildll
movsb
xchg
mov
push
and
mov
lret
shll
pop
push
stc
nop
mov
call
mov
mov
repnz
and
call
inc
and
pop
mov
out
sub
or
sub
xchg
xor
stos
pop
arpl
inc
ljmp
xchg
dec
push
test
pop
hlt
popf
dec
mov
sbb
lods
inc
aad
xorl
mov
test
mov
jmp
mov
jo
sub
sahf
xchg
sbb
sahf
and
mov
mov
dec
pop
roll
or
adc
and
movsb
xchg
cmpsl
into
int3
iret
addr16
inc
pop
fistl
mov
add
sbb
jno
jl
out
cmp
pop
sbb
stos
mov
inc
aaa
scas
stos
push
sub
push
push
stc
ds
or
out
dec
pusha
data16
das
int3
or
pusha
loopne
int
lea
lcall
jecxz
andl
push
es
scas
or
in
dec
xchg
jl
xor
lahf
mov
and
popa
arpl
mov
fidivrs
cmpsl
fidivrl
jmp
xchg
xchg
push
and
jnp
sbb
cmp
push
mov
mov
mov
dec
jne
xchg
adc
and
cmp
repnz
cwtl
shll
jb
mov
cmc
incl
sub
or
outsl
or
jb
push
or
mov
adc
dec
xchg
sub
cmp
and
neg
loop
ret
sarl
aam
jbe
pop
mov
ss
sbb
movsl
popf
fnstenv
adc
insb
out
add
pop
mov
enter
mov
movsl
mov
inc
xor
imul
mov
std
cmp
mov
dec
xchg
pop
adc
cwtl
xor
daa
lds
call
push
cli
aad
addr16
int3
push
lret
inc
rcll
or
inc
ffreep
xor
repz
sub
ja
stos
jecxz
int3
adcl
daa
fadds
movsl
shlb
cmpsb
out
lods
cmp
int
int
js
fnstenv
push
push
add
xor
push
sub
lods
and
jle
mov
dec
int
lret
push
sbb
in
cmpsb
imul
adc
cmp
pop
sahf
xor
jle
mov
je
mov
xor
aad
sbb
ds
add
hlt
adc
sti
pop
pop
pop
add
add
dec
rorb
test
push
push
mov
fadds
lret
push
xchg
mov
movsb
in
lea
roll
daa
dec
mov
outsb
mov
pop
cwtl
bound
jno
jle
jge
pusha
jecxz
lret
xor
sbb
mov
in
cli
pop
mov
adc
stos
mov
inc
or
lods
pop
inc
scas
faddl
cmp
mov
mov
movsb
adc
pushf
or
das
ljmp
jno
cmpsb
call
pushf
addr16
mov
cmc
test
fs
fldenv
iret
cmp
push
cmp
in
mov
adc
aas
aad
std
ret
inc
cltd
inc
sbb
adc
clc
dec
mov
jge
mov
das
inc
outsb
mov
icebp
je
sbb
int3
push
out
pop
mov
test
pop
mov
xchg
cltd
or
repnz
inc
and
jne
jnp
push
push
or
ret
mov
mov
cld
jl
mov
lods
sub
adc
enter
loopne
dec
dec
pusha
fs
dec
pushf
inc
cmpsl
gs
aaa
cmpsl
out
lods
scas
cmpsl
pop
test
sbb
xor
fisubrs
aam
mov
adc
jp
xor
scas
aaa
and
stos
xor
iret
outsl
push
into
fimuls
mov
imul
std
mov
aad
insl
jne
out
fcomps
repnz
ss
push
and
cmp
pop
es
das
pop
mov
mov
sbbl
push
mov
push
lret
lods
jp
mov
in
pavgb
cmp
sub
call
pop
sub
adc
ror
insl
and
out
xchg
jl
mov
js
popf
and
orb
into
adc
xchg
jo
mov
mov
in
or
xor
push
pushf
test
inc
or
xor
insb
mov
lcall
in
jge
lea
or
shll
add
filds
stc
cmp
lods
mov
jecxz
push
mov
push
repnz
mov
pop
mov
rol
out
xor
add
ret
add
jne
icebp
ljmp
int3
jnp
mov
mov
add
pop
xchg
fldl
inc
cmp
stc
mov
pop
sahf
into
jp
jg
lahf
mov
repz
jns
cmp
cmpsl
pusha
push
movsb
cmp
cwtl
pop
pop
push
test
repz
inc
add
push
sub
sbb
pop
sti
testb
pop
clc
int
shlb
jno
push
ljmp
push
cmp
jl
mov
jbe
fs
ret
sub
adcl
mov
leave
pop
scas
fwait
jae
arpl
jbe
pop
lds
lods
mov
mov
jecxz
es
scas
mov
sbb
dec
cmp
jp
jne
mov
jns
and
or
push
mov
jno
aas
std
das
and
or
pop
in
lods
cmp
xchg
cli
push
frstor
outsb
shll
push
fucomi
sbb
inc
and
movsb
push
push
jmp
inc
test
lret
xchg
xchg
aad
inc
xchg
in
scas
jae
lods
enter
push
test
arpl
pop
push
shlb
mov
sbb
jl
out
and
gs
jb
stos
popf
mov
mov
leave
out
add
stos
jbe
repz
sub
push
sarl
pop
inc
adc
jle
mov
push
stos
inc
xor
dec
insl
mov
rcl
lods
imul
insl
pavgw
lea
hlt
fnstsw
push
mov
xchg
and
mov
cmc
cmp
jge
leave
test
hlt
jge
outsb
push
jbe
addr16
cmpl
xchg
jnp
fsubrl
pop
int
cwtl
test
aas
dec
int
or
push
shr
jecxz
mov
pop
push
cmp
push
inc
enter
xchg
aas
cmpsl
add
movsb
mov
dec
aam
add
sub
arpl
sub
test
dec
jecxz
pop
and
jb
popa
lea
jecxz
inc
dec
pop
repz
repz
dec
dec
in
nop
test
xchg
pop
jecxz
or
dec
sahf
in
cli
aaa
or
mov
pushl
insl
je
add
sbb
xchg
aam
xchg
clc
int
inc
jecxz
cs
cs
stc
loope
mov
ficoms
movsb
add
hlt
cs
dec
inc
sub
in
jne
xor
outsb
inc
bound
ret
ret
xor
sub
pusha
push
jmp
push
rorb
fistl
cmp
stos
shrl
dec
loopne
test
jecxz
stos
imul
in
jo
fildll
ret
cmp
cmc
ss
xlat
loop
jb
arpl
loope
xchg
mov
jno
loope
loope
or
or
nopl
lret
xchg
sti
lret
xchg
cld
mov
jg
fidivrs
adcl
mov
inc
add
dec
dec
xchg
jns
sbb
mov
push
cld
lret
dec
int
popf
jmp
sti
jecxz
push
popa
inc
cmp
xor
cmpsl
jmp
push
dec
jnp
xor
popf
add
imull
test
xor
icebp
jge
sbb
outsl
iret
inc
or
mov
lods
mov
idivl
mov
mov
pop
icebp
mov
pop
mov
in
out
adc
and
in
jae
mov
or
pop
cltd
filds
pusha
push
mov
notb
lea
inc
pushf
lret
inc
out
mov
lret
rol
mov
push
pop
dec
lcall
pop
aaa
ds
push
daa
sahf
mov
push
add
jge
cmp
inc
lock
pop
sub
mov
xor
js
mov
adc
sbb
data16
adc
jg
sbb
mov
adc
jecxz,pn
xchg
mov
lock
adc
jne
in
fstpl
mov
insb
mov
lock
and
fwait
out
stos
lcall
xorb
cmp
cltd
sti
xchg
aam
inc
scas
jmp
mov
mov
sbb
xorb
adc
jnp
lds
inc
fdivrl
and
mov
add
sub
adc
out
dec
fsubs
ljmp
sbb
push
sbb
jnp
cmp
inc
push
xchg
decl
int
add
lcall
icebp
shlb
pop
xchg
mov
jb
sahf
and
pusha
adc
in
push
xor
popa
mov
xor
push
iret
and
test
lods
xor
int3
imul
push
dec
add
cmc
cmp
ret
mov
or
ja
push
xchg
sbbb
inc
mov
mov
mov
mov
jg
out
sub
std
in
mov
mov
dec
sbb
push
mov
xchg
cltd
mov
adc
adc
test
cmp
rclb
pop
cmp
or
fcmovnu
ja
push
mov
mov
das
bound
out
es
xchg
loopne
in
mov
rorl
sub
push
inc
sub
shll
inc
and
pusha
jle
add
idivl
jnp
fs
mov
mov
rolb
test
mov
dec
shld
lret
and
cmp
mov
loope
xchg
sub
scas
jo
adc
dec
xorb
push
scas
pop
add
pop
lods
lea
mov
iret
stos
out
mov
mov
notb
pop
imul
lret
xchg
imulb
cmp
mov
enter
jg
sarl
fsubrs
pushf
es
loope
movsl
cmp
cltd
call
int
push
stos
push
mov
enter
jnp
jo
or
push
pop
inc
insl
dec
mov
xor
add
out
hlt
cwtl
jnp
mov
popf
je
and
std
and
adc
cmpsb
xchg
test
call
cwtl
adc
jmp
cltd
sub
test
sub
mov
cmp
fidivrs
push
add
pop
arpl
rcrl
and
xchg
xchg
daa
fs
xor
stc
push
mov
push
mov
xor
jg
lods
add
jne
cmpsl
ss
aas
sub
adc
mov
mov
sub
orb
adcb
cmp
imul
shlb
int
adc
cmpsb
in
faddl
adcl
mov
xchg
fisubrs
shl
sbb
xor
or
pop
mov
sbb
adc
lds
adc
cmp
andl
jge
lock
fcomi
and
icebp
jno
sbb
sbb
dec
jp
enter
pushl
in
lods
jecxz
enter
xchg
xchg
and
mov
es
out
pusha
pop
cld
push
xor
lea
je
cmp
or
je
das
sbb
std
mov
jmp
mov
push
xor
loop
mov
insb
in
andl
jno
or
push
xchg
stos
data16
dec
movsl
pop
insl
cwtl
pop
aaa
mov
pop
push
in
rcrl
nop
fdivl
fnstcw
aas
jb
cs
mov
push
xor
adc
jl
test
pushf
mov
and
jl
inc
add
jge
aam
mov
imul
add
in
jg
scas
adc
shlb
inc
and
or
cpuid
insl
test
out
xor
imul
mov
std
aam
push
cmc
mov
sbb
cli
xchg
and
mov
push
sbb
push
and
aaa
das
and
lahf
cmp
cmp
add
xchg
jbe
fstpl
sub
movb
jecxz
or
rcr
scas
aaa
add
in
adc
sbb
out
rorl
mov
push
test
aad
dec
push
pop
shll
xchg
pop
testl
cmp
into
leave
mov
fwait
idiv
movb
ss
mov
pop
push
mov
icebp
lret
cmp
mov
fisttpl
out
imul
hlt
mov
jmp
sbb
pop
add
push
andb
movsl
or
push
jge
xor
jmp
jns
add
or
mov
sarl
sbb
aad
leave
aam
es
inc
dec
aaa
cmpsl
leave
in
fisubl
sub
lea
ret
shlb
adc
cld
mov
test
xor
das
stos
out
push
nop
sub
mov
loop
adc
sti
stos
out
xchg
inc
sbb
pop
rcrl
test
pop
aaa
push
pop
ljmp
add
iret
fisubrl
je
out
pop
dec
add
out
push
and
imul
movsb
or
aam
lds
fs
sbb
shll
jg
int3
cmp
xchg
mov
outsl
rorl
addr16
aad
test
push
ret
fs
sbb
das
jge
testl
test
shrb
cmpb
outsb
jmp
int3
dec
mov
imul
call
push
icebp
jmp
jnp
mov
stos
mov
imul
push
push
ja
mov
sbb
pushf
sub
mov
out
stos
and
mov
adc
ljmp
mov
dec
xchg
outsl
add
jae
lret
xchg
dec
lock
mov
aad
iret
stos
jo
lods
aad
rcrb
mov
inc
mov
mov
les
cmp
sbb
std
cmc
into
or
mov
fistpll
mov
ror
icebp
js
mov
xor
test
js
lahf
jo
cmp
add
test
cmp
into
cmp
popa
inc
and
and
push
sub
sub
push
or
mov
jp
test
mov
clc
and
imul
mov
rcll
outsl
lods
outsb
outsb
mov
lret
mov
add
repz
adc
sbb
pop
dec
int3
and
test
mov
aas
or
inc
or
sbb
test
mov
filds
pop
repnz
xor
out
pushf
xor
xor
test
mov
lea
jmp
fdivrs
lret
rorl
and
repnz
ljmp
cmp
clc
xchg
negl
rolb
push
or
outsb
mov
movsl
pop
jns
mov
mov
add
out
mov
repz
aad
cmp
xor
push
incl
xor
lock
popf
sbb
roll
push
and
aad
in
imul
dec
xchg
test
cmpb
fs
int
daa
shrb
outsl
jg
mov
or
cmpsl
add
or
fnstcw
ss
rep
orl
jle
stos
and
repnz
rclb
cwtl
lret
inc
mov
ficompl
and
inc
adc
mov
fwait
push
jle
add
xor
push
scas
push
pop
ret
pop
pop
push
sbb
in
adc
pop
cli
mov
mov
es
js
sub
inc
in
rorb
lods
mov
sarl
fdivs
out
mov
add
sbbb
in
aaa
mov
jne
aaa
xor
fdivrl
test
or
test
pop
jl
add
pop
inc
and
ret
and
into
sub
movsb
jnp
lcall
inc
enter
cmc
mov
sub
mov
sub
jbe
jmp
hlt
inc
in
sub
aad
jns
daa
jmp
jno
into
rolb
xor
std
lret
in
leave
daa
pop
imul
pushf
les
or
mov
pop
into
ret
inc
cld
ljmp
pop
pop
stc
addr16
imul
repnz
pop
ret
fsubr
stos
testl
cmp
sub
pop
or
push
mov
mov
ljmp
xchg
mov
sub
test
mov
fcmovb
push
pop
int
push
fst
sbb
call
lods
mov
mov
mov
js
dec
mov
loopne
test
pop
out
sbb
dec
daa
ret
rcrl
icebp
lods
xchg
shlb
xchg
xor
cli
sbb
mov
pop
push
or
sub
xchg
sar
sub
testb
das
mov
repnz
jg
out
cli
ja
lea
lock
pop
mov
rcrl
xor
aam
inc
sub
push
xchg
cmpsl
outsb
js
fprem1
sub
outsl
pop
add
int3
mov
mov
sbb
mov
sbb
push
or
mov
dec
dec
stos
shrb
fwait
adc
jle
push
and
push
aam
out
and
stc
xchg
pop
jns
push
testl
mov
gs
rol
ret
ficompl
push
mov
mov
mov
xchg
push
xchg
mov
ret
cmp
in
fildl
xchg
dec
sbb
push
enter
cmp
sbb
mov
push
sarb
inc
push
sub
fsubl
sub
mov
lods
push
ret
or
ss
dec
sub
sub
mov
mov
test
add
sub
icebp
push
cmpsl
mov
pand
jecxz
push
imul
mov
mov
xchg
xor
jmp
push
fnstenv
jle
fucom
and
sub
dec
fcoms
ja
andl
hlt
push
fdivrl
jmp
movsb
movb
out
xchg
in
lock
push
cmc
push
jns
sub
mov
xchg
ljmp
addb
mov
rcrb
shll
push
pop
gs
jbe
stos
xchg
int
xchg
or
ret
lods
rol
stos
jo
cmp
imul
pop
mov
nop
imul
sub
sub
ljmp
mov
les
test
shlb
dec
adc
movsl
out
sbbl
mov
jl
pop
fldcw
mov
popa
cwtl
push
pop
mov
xchg
sti
sub
cmpsl
arpl
xor
dec
adc
ret
pop
sbb
inc
mov
xchg
and
aas
mov
push
imul
fnsave
cld
sti
out
idiv
sahf
imul
inc
popf
push
mov
dec
cmp
fildl
lret
scas
dec
sub
and
add
add
fistpll
adc
scas
mov
outsl
jae
cmp
pop
adcl
mov
inc
sbb
sub
stc
sbb
int
mov
aam
cmp
sbb
mov
aaa
in
js
inc
adc
inc
jecxz
cmpsb
es
adc
sti
add
cld
mov
mov
ss
repz
jno
pop
mov
pop
push
jno
mov
arpl
leave
pop
fldt
outsb
xlat
or
lock
inc
scas
pop
enter
in
add
or
adc
adc
pop
ss
mov
xlat
popf
subb
sahf
cli
sub
dec
pop
or
jno
dec
mov
xor
xlat
or
or
pop
aaa
stos
xchg
gs
push
popa
mov
mov
movsl
dec
cs
pop
dec
in
mov
lret
cwtl
xor
movsl
jecxz
xor
clc
lods
sub
imul
mov
adc
mov
mov
pop
lods
out
scas
and
movsl
push
mov
adc
movsb
jne
outsb
xchg
add
sbb
loopne
xor
mov
mov
in
repnz
pop
ds
aaa
mov
out
orb
inc
xchg
xor
sub
loopne
sub
cld
or
fdivrs
push
lods
inc
xchg
out
or
jnp
movsb
mov
in
adc
lret
mov
jae
dec
add
sub
test
jae
or
das
mov
xor
or
mov
or
pop
lcall
and
int3
or
jle
mov
sarl
mov
popf
mov
add
bound
sbb
jle
adc
pop
sarb
xchg
enter
pop
jbe
test
push
pop
dec
cmp
in
data16
dec
pop
xchg
pushf
out
dec
out
inc
or
std
in
mov
xor
sbb
clc
mov
pop
inc
scas
test
dec
imul
outsl
jno
ret
add
pop
out
stc
push
cltd
push
adc
mov
jg
iret
mov
out
mov
stc
mov
mov
dec
fucomip
int
pop
sub
push
add
add
je
lret
rorb
mov
outsl
shll
mov
mov
xor
sub
cwtl
fisubrs
cmp
push
fcoms
pop
adc
fisttpl
jno
adc
inc
mov
xchg
cmp
shlb
add
nop
in
mov
mov
jns
fistl
dec
sbb
mov
aam
jo
or
insl
rorl
xchg
into
shrb
xor
inc
cs
repnz
add
loopne
fcomip
push
call
sarl
mov
sahf
and
lahf
outsl
insl
outsb
mov
sti
push
cltd
lret
mov
push
sub
jae
ljmp
int3
inc
daa
das
adcb
mov
push
fisttpl
in
stc
inc
ljmp
cmp
rcr
fwait
hlt
lahf
dec
leave
pop
sub
cmp
pop
shll
arpl
shlb
inc
and
mov
sbb
stc
sub
jne
push
inc
mull
les
loopne
jns
xor
fwait
mov
nop
loope
mov
call
sbb
mov
jge
adc
xorb
fs
jmp
jnp
loope
jae
ds
pushf
push
shr
jbe
movsb
xchg
jns
stos
lods
in
stos
ficompl
cmc
pop
mov
shlb
jo
scas
aad
and
xor
loopne
popa
gs
je
xlat
xor
cmp
jecxz
cmp
xor
paddsw
lret
lods
out
outsl
cmp
xlat
out
fiadds
subl
in
loope
add
sub
push
sbb
pop
in
out
cld
and
and
addl
lcall
daa
mov
dec
xchg
fnstsw
inc
ljmp
out
cmp
loopne
inc
cmp
or
or
push
arpl
lods
dec
in
inc
daa
cmc
pop
rorb
jp
mov
push
into
inc
pop
aaa
inc
adc
pop
rol
xchg
sub
adc
xchg
ret
jg
xchg
sti
jno
xlat
xor
xchg
addr16
hlt
out
push
or
sbb
cs
daa
sub
pop
mov
cli
cmp
xchg
insl
cmp
push
int3
clc
cmp
xor
or
outsl
mov
cmp
mov
inc
daa
sbb
push
out
inc
mov
scas
cmpxchg
sub
imul
jo
or
xchg
flds
out
inc
xchg
loopne
sbb
pop
jb
in
dec
lea
out
jne
in
dec
fisubs
cli
and
cltd
call
mov
dec
pushl
fdivp
xor
sbb
sub
movsl
pop
adc
mov
or
adc
sub
pop
je
push
test
stos
push
add
mov
aad
loop
movsb
mov
popf
lret
icebp
pop
or
enter
sub
dec
jle
xor
mov
fsts
lcall
jno
add
daa
or
mov
or
xor
nop
jge
ds
xor
into
das
and
cmp
add
adc
lods
mov
mov
ljmp
jl
fs
inc
inc
rcr
sub
in
ret
test
mov
push
loopne
shll
adc
iret
sbb
insb
lods
jb
mov
mov
jmp
lret
fisttps
adc
leave
pmaxub
ja
sub
ja
push
cmp
loope
mov
jmp
aaa
rol
sbb
push
mov
flds
sbb
inc
aas
out
add
cmp
dec
sbb
xor
xchg
jne
outsb
push
inc
pop
sahf
rclb
insl
push
push
sub
mov
lock
out
dec
js
sub
cltd
inc
jge
adc
add
mov
scas
or
fnsave
sbbb
dec
fwait
jmp
in
xchg
out
hlt
xor
and
add
test
sti
int
test
rclb
jmp
mov
out
mov
rol
mov
fwait
adcl
dec
loope
fnsave
es
add
or
inc
pop
insb
cmp
xchg
jmp
and
bt
cmp
imul
int3
repz
shrl
dec
pop
mov
scas
mov
insl
mov
jae
pop
popf
mov
mov
mov
pop
cmpsb
decl
bound
sub
cmpl
xchg
mov
cmc
jl
cmp
mov
lret
mov
loop
dec
jl
cmp
call
or
fistpl
mov
fs
pop
nop
idiv
xchg
xchg
sti
xor
lahf
gs
out
mov
add
insl
rclb
dec
sbb
in
loope
ficoml
jge
test
sub
pop
cmovs
sbb
sub
pop
rclb
inc
sarl
lods
mov
dec
rorl
addr16
adc
outsl
gs
or
push
jecxz
mov
mov
rcrl
or
push
xorl
push
jmp
pop
adc
dec
mov
ss
mov
jb
rorb
daa
cmp
je
add
pop
lods
push
stos
inc
int3
inc
xor
mov
into
aaa
imul
nop
xor
cli
mov
adc
lds
xor
inc
lea
push
jo
or
jbe
jbe
sarb
mov
shlb
mov
bts
repz
scas
mov
mov
inc
pop
fstps
push
adc
jne
dec
cli
xchg
dec
add
add
fidivl
aam
ss
repz
adc
leave
icebp
bound
stos
enter
mov
add
xor
xor
sbb
hlt
pushf
sbb
iret
das
jb
and
or
fldl2t
je
in
or
stos
lea
push
loop
push
mov
or
stos
cmp
mov
addb
pushw
dec
stos
mov
jne
mov
scas
jmp
cmp
imul
xchg
imull
lods
xor
cltd
and
sbb
lret
out
or
je
nop
outsl
shlb
dec
mov
push
inc
cmp
outsb
lods
repz
fsts
inc
mov
inc
notl
mov
lock
add
mov
xchg
jae
pop
pop
push
divb
add
sahf
scas
int
ficomps
jl
mov
mov
pop
and
cmc
xor
inc
pop
ficoms
cs
daa
hlt
cmp
dec
xchg
rorl
mov
stc
mov
testb
cmp
cltd
imulb
mov
outsb
pop
dec
mov
cs
cmp
out
lds
jmp
pop
subl
ret
les
mov
cmp
dec
pop
push
stc
or
mov
popf
lock
jae
in
push
pop
sub
mov
push
dec
mov
cmp
cltd
lret
hlt
fs
test
outsl
jp
push
mov
in
xchg
test
sbb
call
lcall
mov
loop
sbb
sbb
mov
inc
test
xchg
mov
idivb
push
loopne
sbb
xchg
ds
xor
and
mov
push
mov
pushf
add
in
and
jae
rcll
out
insl
in
jnp
inc
repz
outsb
add
cmp
aam
adc
cwtl
jle
inc
das
sub
and
add
dec
adc
jb
fstpt
sub
add
push
addr16
adc
or
repnz
xor
jb
mov
inc
jae
mov
xchg
in
aaa
inc
add
push
xor
mov
mov
lods
xchg
xchg
in
xor
mov
imull
xchg
lea
mov
mov
test
sbb
scas
ja
cmp
ds
fucomp
push
inc
imul
bound
pop
notl
jecxz
in
mov
addl
dec
lret
or
mov
mov
cltd
iret
mov
pop
or
xchg
cmp
mov
jmp
in
jns
je
add
sub
stos
jle
fwait
cli
movsb
bnd
xorb
mov
cs
jge
mov
dec
pop
js
fstpl
fistl
xor
in
adc
adc
frstor
inc
push
scas
lods
sub
and
add
add
pop
adc
cmc
gs
sub
mov
shr
inc
mov
push
mov
mov
out
push
les
adc
cmpsb
movsb
rolb
rclb
ret
loope
fbld
fdivrl
lahf
push
xchg
les
imull
and
push
inc
pop
gs
movsl
inc
pop
repnz
jnp
mov
dec
xchg
xchg
xor
lret
xchg
data16
or
add
faddl
loopne
jo
jl
sub
fdivrl
jne
sbb
or
adc
call
or
push
push
xor
out
out
pop
push
cli
call
mov
sarb
shlb
mov
mov
cs
push
push
jecxz
xchg
adc
xor
jne
hlt
insb
mov
pop
mov
pop
js
mov
mov
enter
mov
cld
outsl
ret
jmp
mov
test
repnz
sbb
andl
scas
leave
jae
out
stos
adc
sub
or
dec
cmp
and
pop
in
dec
scas
loop
pushf
dec
hlt
or
js
sub
lods
xchg
jnp
lahf
sbb
adc
call
lods
or
jmp
dec
rcl
ret
sbbb
push
dec
xchg
inc
cmpsb
or
pop
sub
adc
jmp
std
pop
movsl
mov
rcrl
out
add
pop
add
jle
fimuls
ficomps
add
out
mov
cmp
insl
mov
mov
pop
inc
sub
test
in
pmullw
imul
sub
in
sbb
loop
or
adc
xor
cmp
push
xchg
pop
jl
pop
push
mov
fsubrl
dec
adc
fcoms
and
dec
out
frstor
repz
cmp
mov
xchg
mov
out
sbb
push
jns
push
pop
movl
xor
je
andl
shrl
stc
aam
adc
sub
stos
pop
pop
sbb
lret
flds
les
jne
fdivrl
xor
mov
dec
cmc
xchg
addb
xor
xlat
dec
dec
push
push
ja
pop
mov
stos
push
inc
push
inc
in
or
mov
mov
sbb
inc
sub
fldt
dec
aam
lea
push
cmp
pushf
aaa
xchg
shll
popa
out
cld
xor
xchg
cmp
fldl
jl
leave
dec
xlat
or
sar
repnz
fwait
rcrl
imul
sub
fldenv
cmpb
gs
aam
or
sbb
jbe
inc
aas
add
cld
data16
sti
cmpsb
push
std
jecxz
pusha
loope
orb
popl
cmp
popa
shlb
test
mov
mov
mov
mov
push
pop
mov
js
scas
sbb
test
push
adc
mov
push
loop
data16
and
or
movsb
pop
mov
popa
repnz
imull
push
pop
push
xlat
insb
outsl
mov
cmp
fiaddl
clc
push
mov
outsb
sbb
outsb
jne
repz
lds
repnz
lea
push
inc
mov
cld
loopne
std
fdivl
aam
lahf
mov
mov
pop
dec
push
xor
inc
fbld
dec
dec
mov
jae
loope
inc
loope
and
out
mov
mov
outsb
sub
push
mov
jp
arpl
cmp
outsb
clc
pop
jle
lret
rcl
and
mov
loopne
leave
es
push
leave
sbb
rol
xor
clc
push
xlat
jns
jbe
mov
stos
out
xchg
aam
pop
push
lods
aad
push
fldt
inc
push
or
xor
xor
push
inc
xchg
sub
clc
fimuls
fnstcw
cmpl
inc
xor
das
inc
ja
outsl
add
test
mov
imul
jge
sub
mov
lock
pop
fcom
jg
repnz
mov
mov
mov
pop
ss
stos
push
hlt
jne
cli
xchg
mov
xchg
cmpsl
push
aas
iret
aam
arpl
mov
pmaxsw
hlt
mov
in
insb
sbb
xchg
inc
iret
push
xchg
mov
mov
sub
sbb
cmpsb
jg
cmp
mov
xor
mov
adc
pushf
sbb
xor
call
add
es
jp
rorl
and
test
jle
lret
jecxz
adc
fnstcw
mov
push
scas
lods
cli
pop
loopne
cwtl
data16
and
imulb
loopne
shlb
fs
mov
adc
arpl
jecxz
mov
jecxz
shrb
cmpsl
call
fistl
or
sub
jbe
lock
xor
in
int3
add
out
pushf
clc
xor
xor
jp
push
adc
aas
add
pop
sub
push
push
or
imul
sbbb
xchg
aaa
repnz
xor
push
push
rorb
int3
jno
adc
pop
add
std
out
dec
jp
xchg
popf
lods
or
out
hlt
mov
jp
add
loopne
cld
andl
pop
in
mov
jnp
or
pop
movsl
sbb
jmp
stos
lods
add
out
push
movsb
inc
ss
aam
repz
imul
pop
imul
enter
out
push
dec
adc
pop
or
jp
lods
adc
mov
addl
shll
or
icebp
shrb
and
xchg
outsl
pop
scas
pop
outsb
sbb
and
mov
movb
push
cmp
ss
xchg
and
movsl
mov
sbb
pop
jle
insl
and
lahf
lahf
in
dec
cld
sbb
into
rep
xor
xor
mov
cld
in
jp
sub
add
xchg
popf
inc
loopne
test
lahf
sarb
mov
jno
je
jne
mov
repz
or
inc
fwait
xor
mov
jmp
jne
mov
rcrl
adcl
cmp
cmp
test
ffree
rorl
jg
pop
and
push
add
inc
das
jecxz
xchg
subl
lods
leave
out
into
mov
pop
cmc
pushl
icebp
aam
call
imul
inc
dec
jl
mov
sahf
inc
shll
pop
insl
jmp
xor
movsb
pop
std
or
xchg
movb
push
movsb
les
mov
push
out
mov
lahf
imul
jl,pn
aad
lock
stos
ss
push
sti
in
addr16
push
js
scas
loopne
mov
inc
sub
xchg
xlat
popf
shll
sub
movsb
frstor
dec
sub
daa
aaa
pop
test
mov
cmp
int3
sbb
mov
push
cltd
test
imul
push
lret
fcomps
sbb
push
ds
inc
cmp
sysret
xchg
loopne
xchg
xor
push
jp
cld
xchg
ficomps
mov
bound
stos
lcall
ficomps
inc
cmp
daa
cmp
std
jp
mov
dec
pop
lods
xor
icebp
jno
mov
test
lock
mov
sbb
mov
sub
mov
jmp
xchg
mov
lds
push
sbb
mov
ds
mov
xchg
push
rclb
int
mov
pop
inc
cli
xchg
int
jo
rcll
jne
sarl
iret
ljmp
lret
cwtl
ret
test
sbb
scas
cli
and
test
into
add
lods
fdivs
sarb
loopne
inc
ficoms
pusha
in
push
xchg
sbb
sub
jmp
jne
call
mov
inc
scas
or
xchg
hlt
sub
notb
xor
cmp
xchg
stc
xor
test
mov
int
jns
les
lds
mov
mov
mov
or
jnp
add
ja
loope
or
sbb
xor
xor
xchg
ss
ret
insb
xlat
sbb
or
inc
mov
xchg
sbb
jnp
outsl
pushf
jno
mov
adc
test
jbe
lock
leave
push
push
jp
clc
fisttpl
enter
data16
movsb
xchg
mov
cltd
mov
push
or
fists
adc
gs
add
xchg
mov
inc
mov
test
xchg
mov
cmp
inc
mov
in
mov
xor
lds
jecxz
adc
sbb
cmp
dec
xchg
jno
imull
mov
or
cmp
xchg
cs
pushf
xor
cmp
ss
inc
push
pusha
pop
sbb
fisubs
jb
hlt
add
loopne
pop
fwait
mov
ror
insl
lcall
gs
test
fiaddl
out
dec
subb
rorl
lods
ret
aad
test
outsl
test
jo
sub
sbb
pop
subb
sub
and
pop
mov
inc
dec
pop
es
icebp
pusha
ss
mov
push
mov
cmpsl
add
ret
outsl
xor
call
lods
mov
jns
mov
icebp
gs
icebp
bound
push
dec
sbb
rorb
lock
outsb
daa
xlat
mov
jp
mov
std
fstl
test
mov
adc
inc
fists
mov
mov
movsl
cmp
xchg
test
pop
testb
mov
adcb
mov
cmc
call
fstpl
fsts
mov
mov
andl
iret
in
loope
mov
mov
dec
cli
push
pop
pop
rclb
sub
pop
scas
mov
inc
push
std
lock
add
add
fstpt
mov
adc
js
hlt
push
mov
lods
lcall
push
mov
sub
jb
call
xor
movb
inc
pop
and
loop
rcll
popf
inc
loope
in
ds
pop
data16
ret
in
adc
sbb
inc
jmp
int3
jle
or
out
std
imul
adc
out
pop
xor
sbb
dec
pop
jae
sub
jp
pop
imul
pop
mov
cli
pop
fnstcw
pop
int3
cmp
subl
call
xlat
push
aaa
mov
nop
push
jne
outsl
in
stc
dec
jb
rorb
shl
mov
pop
stos
mov
rorl
push
jo
call
ficoms
test
jnp
inc
push
or
mov
loopne
out
ret
sub
or
cmp
into
xchg
clc
out
out
xor
stos
inc
in
dec
int
stos
mov
mov
push
or
arpl
in
adc
lret
and
pop
inc
xchg
adc
cld
dec
enter
pop
sub
xchg
xor
cli
shl
or
sub
sub
in
mov
add
xor
add
jne
std
in
push
jae
or
dec
add
mov
cli
arpl
je
push
push
divl
pop
ja
sbb
mov
fs
jne
jno
repnz
xor
sbb
popa
mov
jbe
popf
push
cmpsl
cli
mov
mov
stc
bnd
add
push
mov
dec
jge
loop
pushf
call
inc
or
shrl
stc
roll
sbb
sub
iret
jecxz
mov
daa
jle
jne
push
fisubl
jge
sbb
mov
inc
ljmp
aaa
test
xor
aas
in
in
dec
call
addb
cmp
ds
stos
cmc
lds
les
fwait
in
inc
bnd
test
inc
push
sub
sub
cltd
ss
scas
loop
insb
pop
shll
cmc
fcomps
mov
mov
and
and
push
ss
call
arpl
les
push
jne
cmpsb
insl
push
aaa
adcb
or
lds
test
mov
scas
loope
cltd
shll
pop
in
int3
repnz
lds
cmpsl
mov
adcb
gs
adc
shl
and
aaa
xor
sub
into
xchg
rorb
mov
xchg
pop
loope
mov
add
ds
fwait
add
lock
cmp
inc
sbb
and
add
rorb
dec
or
inc
jmp
in
mov
push
ficoml
out
addl
in
inc
jnp
add
dec
aam
pop
or
punpcklwd
int3
jb
call
rcrl
insl
cli
add
loope
aaa
mov
das
roll
sti
pop
sub
xor
mov
insb
outsb
adcl
imul
dec
xchg
cmpsl
sbb
or
sub
fdiv
stos
popf
je
pop
cmp
insl
and
mov
pop
sub
jle
outsl
dec
and
test
fldt
inc
andb
mov
inc
lahf
dec
jle
sub
mov
add
jbe
pop
mov
jnp
pop
rcll
test
jno
inc
pop
sahf
shl
jno
fildll
imul
mov
adc
popf
cmp
in
and
sbb
cmpsl
jnp
sub
mov
fwait
pop
sub
add
sbb
xchg
nop
int3
xlat
xchg
cltd
dec
daa
cld
repz
test
sub
or
mov
sub
clc
iret
icebp
call
lret
push
cmpl
jno
jae
add
roll
xchg
xchg
hlt
mov
lods
mov
bound
or
pop
sub
pushf
pop
mov
xor
cwtl
scas
or
arpl
adc
es
xchg
mov
cs
in
repnz
mov
es
xor
sub
aad
out
or
shlb
push
jbe
sti
and
push
jo
addl
jp
ljmp
jmp
dec
sahf
xor
stos
insb
jg
dec
push
and
dec
lret
movsl
mov
adc
xor
call
xor
push
cmp
rorl
imul
sahf
sbb
movsl
inc
shl
lret
adc
dec
out
mov
or
jne
and
pop
and
stos
pop
nop
out
int3
and
ret
mov
jno
repz
out
push
mov
dec
mov
ss
test
cld
stc
pop
add
aas
sub
negl
test
lcall
popf
jbe
into
sbb
rorl
pop
jge
add
das
testb
add
lods
jecxz
pushf
push
aam
xchg
ret
sbb
pop
mov
outsl
ja
jb
inc
repnz
push
and
mov
or
mov
fists
inc
call
notl
inc
repnz
pop
cmp
int
dec
idivl
inc
daa
mov
mov
jp
xor
rcrl
lcall
cmp
mov
call
jb
xchg
popa
push
in
inc
cmpsb
mov
pop
mov
cmpsl
cmp
incl
add
incl
dec
outsl
std
cltd
adc
mov
xor
pusha
add
push
cmpsb
push
dec
dec
xor
pop
sub
ljmp
enter
ret
xor
mov
sub
jae
push
test
clc
xor
mov
imulb
add
xchg
into
cmpsl
es
imul
cmp
pop
xor
aas
jne
sub
xchg
lcall
scas
inc
jp
cld
jecxz
cmp
cld
daa
or
loopne
movups
fdivrl
and
mov
lret
arpl
rolb
xchg
outsl
lea
push
sbb
les
xor
test
push
outsb
cmpsl
push
xchg
xchg
dec
sbb
inc
jmp
inc
mull
sub
push
outsb
jmp
add
sbb
xchg
push
lods
repz
subb
arpl
pop
push
data16
fisttpl
in
xchg
xor
inc
add
lret
jne
test
shrl
jnp
push
popf
loope
adc
fwait
jl
pand
pusha
lret
movsl
adc
add
xor
or
adc
mov
pushf
push
ljmp
pop
ljmp
push
xor
inc
jp
popa
cmpsl
inc
inc
movsb
and
rorl
mov
fnstenv
aad
xor
adc
inc
out
js
je
jne
cwtl
and
push
imul
scas
push
fsts
dec
xchg
sbb
push
arpl
fnsave
sub
cli
popa
int3
adcl
cmp
into
fs
adc
pushf
push
add
xor
aaa
pop
cwtl
add
and
fidivrs
fucomi
sarb
roll
add
andl
xchg
dec
xor
mov
in
dec
cmpsl
cltd
decl
jno
shll
jge
es
dec
mov
lock
or
dec
loop
aaa
dec
mull
dec
cli
loopne
mov
and
popa
jne
mov
outsb
xchg
inc
mov
and
imul
in
iret
jns
push
sbb
sbb
in
inc
push
pop
xor
add
and
lret
add
fnstcw
jb
loop
repnz
scas
fdivrl
leave
jns
mov
ret
lods
pop
jae
cmp
into
push
mov
add
mov
push
popf
pop
mov
push
adc
pusha
js
aad
push
bswap
daa
rolb
jp
fadd
jl
out
mov
dec
dec
mov
sbb
and
sub
pop
fcomps
cmp
test
into
xchg
push
push
or
outsb
mov
clc
xor
ss
pop
popf
xor
leave
notb
cmc
mov
cltd
in
add
cmp
in
jge
gs
popf
js
fisttpll
mov
or
dec
into
cmc
adc
call
nop
rolb
sbb
cmpsl
adc
sbb
or
rcrl
aas
jmp
out
out
mov
mov
xchg
cs
mov
scas
dec
test
sbb
daa
or
or
mov
pop
mov
jge
cmp
pop
aaa
fcomip
test
cmp
jmp
mov
mov
dec
xor
inc
imul
call
push
inc
mov
inc
push
pop
push
lcall
repnz
out
subb
dec
icebp
enter
cmp
int3
lcall
test
std
shrb
call
mov
cmp
pop
adc
push
mov
sub
push
stos
sub
sbb
lea
fidivl
fs
fcomps
cmpsb
imul
ficoml
pop
data16
aas
mov
pushl
mov
roll
sub
data16
xchg
imul
fimuls
loopne
push
and
es
out
outsb
movsl
adc
and
push
lds
lods
jge
xchg
mov
jns
dec
sub
sbb
fcompl
push
and
leave
mov
imul
das
mov
mov
nop
imul
imull
jns
push
cmp
and
cmp
cmpsb
xor
push
xchg
xor
loopne
sti
in
popf
sub
arpl
int
fidivrl
lods
adc
sub
or
icebp
mov
inc
aas
xor
mov
xchg
aad
outsl
jne
jns
call
shrl
rcll
xchg
vmovupd
std
test
daa
out
add
call
push
test
shlb
jno
icebp
fsubrp
stc
and
mov
xor
fidivrs
mov
repnz
cmp
ss
jne
cmp
mov
mov
cmpsb
sub
pop
add
jge
mov
shrb
or
jmp
loope
xor
push
popl
cli
pop
cwtl
cmp
cmpsb
mov
mov
jb
lock
push
xchg
es
jmp
mov
inc
outsb
getsec
popf
adc
orl
inc
inc
jae
notl
add
dec
lock
inc
icebp
icebp
fisttps
ds
mov
lahf
pop
push
fldt
ljmp
jle
push
ficoml
pop
test
popa
addr16
sbb
jge
int3
js
add
repz
push
mov
out
lret
les
popa
add
jo
sub
and
mov
addr16
clc
fwait
ja
in
enter
mov
es
push
scas
aas
movsl
rcrb
mov
inc
insb
insb
jl
das
push
push
insb
sbb
aad
cmp
scas
cld
aam
xchg
lret
sub
outsl
xor
push
inc
xor
mov
repnz
inc
cmp
mov
sbb
mov
ss
xor
adc
stos
lea
movsb
bound
dec
repnz
rcl
adc
xchg
xor
pop
push
je
ss
lock
adc
lock
cmpsl
dec
inc
add
push
mov
and
stos
mov
sarl
jecxz
aam
cmp
pop
sub
xchg
in
push
arpl
scas
cmp
sub
sbb
push
push
jo
cwtl
jno
dec
movsb
xor
lods
lahf
int3
iret
xchg
addr16
xchg
loope
or
std
and
inc
cld
push
lods
jb
and
adc
sbb
movsl
data16
int
sbb
xor
sub
test
out
mov
ss
bnd
div
push
in
dec
ja
and
pop
imul
cmp
sbb
mov
mov
scas
jno
bound
sahf
cmp
xor
mov
lcall
xor
mov
lea
fsubl
jle
jmp
lock
pop
mov
stc
jbe
xchg
in
dec
addr16
sub
mov
aam
xchg
sbb
jecxz
adc
stos
mov
mov
jno
repz
jge
jnp
add
push
adc
jp
push
add
inc
testl
pop
icebp
xor
ds
stc
ja
ljmp
mov
das
js
aas
sti
mull
pop
clc
jno
nop
shr
sbb
dec
inc
push
add
mov
mull
clc
sahf
out
sahf
xor
add
pop
or
or
faddp
bound
repz
push
cwtl
int3
jbe
add
cli
shrl
dec
push
cmc
cli
adc
test
xchg
mov
jecxz
mov
gs
shlb
mov
stos
fmull
decb
xchg
jnp
mov
shr
pop
fidivs
int
ds
and
sub
push
adc
xchg
shlb
popa
and
aam
xor
jl
add
xor
xor
andb
mov
mov
ss
shlb
xor
mov
xor
stc
jle
pop
out
sbb
rcrl
fwait
jnp
push
inc
mov
inc
outsb
aas
mov
test
inc
sbb
cmp
stos
sti
leave
push
mov
cmp
mov
incl
mov
sbb
pop
ret
in
push
sbb
dec
fbstp
leave
ret
push
cmpsl
lcall
push
outsb
mov
sbb
push
jecxz
jns
inc
pop
dec
cmp
arpl
dec
or
mov
fwait
adc
push
shll
dec
fnstenv
xchg
cmp
inc
jo
sub
pop
jle
mov
fs
push
or
push
push
subb
out
sarb
or
in
pop
int3
repz
out
jp
pop
pop
sub
dec
xchg
in
inc
outsl
or
lea
mov
mov
xor
xchg
push
stos
mov
sub
sbb
aas
push
mov
cmc
outsb
cmp
mov
nop
inc
fisttpll
fildl
leave
cmp
fldenv
mov
push
and
add
adc
add
jmp
shlb
mov
jns
cmp
ss
jle
cmpsl
jecxz
mov
jo
ja
mov
mov
decb
or
lods
stos
pop
sbb
xor
into
ljmp
pushl
aam
cmpsb
xchg
and
pop
imul
ror
mov
bound
push
mov
inc
or
dec
mov
std
in
xor
popa
inc
push
cmp
jno
roll
test
arpl
inc
outsl
lahf
or
fcompl
sahf
jge
in
xchg
lods
int
pop
hlt
sti
rorb
imul
out
sar
push
in
loopne
cmc
movsl
shl
inc
rcr
imul
push
popf
jno
cmp
sbb
das
lcall
or
mov
in
dec
dec
xchg
jge
or
cmp
lds
es
dec
inc
mov
insb
ret
ds
cli
pop
lret
mov
push
pop
aam
sbb
pop
jns
inc
lret
dec
pop
inc
mov
ja
xchg
or
inc
test
aaa
out
cmp
push
sub
cmpsb
ljmp
pop
pop
shl
inc
jecxz
out
dec
stos
shrl
xor
xchg
push
or
pop
loop
inc
pop
xchg
fnsave
mov
push
aad
movsl
popf
fdivl
add
add
pop
movsl
jno
mov
dec
and
xor
jne
aaa
je
int3
mov
out
xor
and
out
mov
xchg
jge
jnp
sar
cmp
cmpsb
sub
sbb
xchg
dec
jp
out
pushf
mov
loop
sub
cmpl
jecxz
test
mov
xor
sbb
sub
adc
mov
pop
adc
andb
push
xor
jns
mov
loop
jo
xchg
push
jmp
dec
xchg
inc
xchg
mov
lods
inc
shll
cmp
stc
nop
out
adc
ds
xchg
scas
fcmovnb
test
clc
int
mov
mov
das
or
mov
out
iret
out
mov
out
pop
pop
out
jno
stos
adc
je
daa
push
ret
mov
int
int
mov
pop
nop
inc
pop
sarb
gs
push
and
jmp
icebp
xchg
lahf
add
cmp
mov
aas
push
mov
jg
jl
pop
cmp
mov
sub
push
push
outsb
mov
lock
mov
mov
leave
mov
movsl
outsl
xor
push
rcl
sub
psllq
mov
inc
and
sbb
cld
mov
adc
jns
xorl
rclb
fmuls
jne
dec
test
gs
stos
ficoms
clc
lret
inc
xchg
popf
lret
dec
sub
adc
repz
loope
jne
xchg
ds
push
inc
lds
cld
pop
add
adc
aam
mov
sub
lcall
ret
rcrb
add
leave
daa
pop
inc
fidivl
mov
mov
fcomps
sbb
inc
jmp
xchg
shll
scas
cmp
push
sahf
mov
sbb
add
loopne
ja
clc
stos
and
sub
jecxz
iret
aam
arpl
mov
mov
mov
push
daa
js
xor
push
mov
inc
adc
mov
add
cmp
xorb
cmpsb
fistl
jae
push
jp
testb
jp
fidivrl
xchg
or
jmp
ret
cld
pop
les
mov
mov
jl
sub
adc
jnp
push
jp
cmp
in
mov
or
out
in
push
cmp
movsb
xchg
pop
cli
sbb
inc
lods
stos
xlat
dec
mov
dec
or
or
sti
mov
aam
mov
ja
push
repz
sub
mov
ret
push
aaa
test
aaa
sbb
jmp
or
push
xchg
arpl
and
mov
cwtl
outsb
push
pop
cmpb
addr16
mov
push
xor
dec
ficoml
ficompl
mov
cld
xchg
enter
loop
dec
adc
push
cmp
inc
xchg
out
es
jecxz
sbbb
rorl
jmp
sbb
jge
and
fmul
mov
jp
cmp
fwait
jns
lahf
aaa
mov
mov
sahf
sub
lret
scas
cmpl
incl
and
mov
mov
idiv
sbb
mov
adc
adc
cs
and
jbe
insl
insl
cmc
popw
cmpsb
or
mov
jmp
scas
nop
mov
pusha
ds
push
fcoms
repnz
lds
xchg
sbb
movsl
leave
xor
jno
in
shlb
aas
push
lock
xchg
xor
mov
es
loope
adcb
cmpsb
mov
or
adc
sbb
mov
arpl
dec
sub
push
mov
mov
jno
pop
add
addb
jb
sub
mov
inc
mov
sub
pusha
call
mov
rorl
pop
test
sahf
aam
push
adc
xchg
cmp
jg
ret
mov
dec
sbb
andl
divb
imul
mov
mov
and
adc
sub
adc
inc
shr
rorl
sbb
push
mov
outsl
mov
sahf
test
das
adc
xor
jno
or
cld
push
mov
cwtl
and
cld
add
lahf
jno
xor
addl
mov
lea
pop
jl
inc
rcr
dec
repz
sti
lret
jb
pop
leave
dec
pop
ret
fcoms
mov
mov
jne
repnz
imul
jbe
xor
aas
jo
repnz
inc
repz
icebp
mov
imul
xor
icebp
imul
jns
sbb
xchg
xchg
inc
pop
xor
pop
mov
inc
popl
repnz
pop
xor
push
ror
daa
ficoms
inc
lock
cmp
mov
ds
fwait
lret
adc
in
or
lods
outsb
sarl
inc
popf
cltd
push
hlt
add
repnz
aad
popa
out
shl
cmpsl
pusha
mov
ret
negl
movsb
sbb
xlat
cs
scas
rol
pusha
shlb
repz
rcrb
ja
xchg
outsb
enter
mov
adcb
push
fsubs
inc
mov
std
test
xchg
and
cmp
out
jg
jp
push
dec
push
cmc
outsb
cmp
xor
call
jmp
inc
rorb
in
or
push
adc
lods
cld
mov
loope
xor
cmp
leave
pop
jl
inc
inc
je
mov
test
in
jmp
or
insb
les
call
adc
mov
jg
in
in
in
and
cld
test
mov
jnp
cmp
fwait
rcrb
hlt
dec
or
es
stos
xchg
xorb
xchg
cmpb
adc
adc
adc
sbb
mov
mov
and
xor
or
inc
pop
mov
jae
push
out
in
xchg
cmc
call
adc
loope
and
sub
int
fsubrl
mov
and
js
sub
mov
mov
lock
mov
and
lret
lret
sub
scas
into
aam
dec
mov
cmp
push
xor
lds
mov
pop
push
outsb
dec
popa
sbb
mov
sub
rorl
mov
cs
insb
jmp
loop
ljmp
int
mov
lods
push
pop
leave
movsl
inc
cld
dec
sbb
xchg
add
xor
xor
rorl
mov
adc
loopne
clc
cmp
and
sub
das
es
sbb
xor
lds
fisubrs
fabs
add
xchg
pop
and
loopne
pop
hlt
inc
xchg
sbbb
ret
in
cs
and
lcall
lods
arpl
mov
jae
int
mov
and
flds
mov
dec
jae
dec
or
fnsave
out
gs
mov
icebp
imul
sbb
movsl
outsb
ss
add
scas
xor
stos
xchg
fidivl
lea
fnstcw
stos
ja
sti
sub
aaa
jne
sti
mov
dec
cmpsl
push
add
fistps
xchg
in
ret
daa
insb
jb
mov
xor
addr16
xchg
sbb
push
fcompl
icebp
mov
imul
push
incl
movsl
int3
or
dec
sbb
xor
lods
pop
push
and
subb
test
adc
in
dec
fisttpl
adc
repnz
mov
loop
mov
xlat
mov
jns
ss
rolb
push
test
leave
xor
lods
or
lods
push
fcompl
lret
or
add
adc
mov
neg
cmp
add
add
fnsave
dec
iret
and
dec
loope
add
out
inc
dec
loop
mov
jg
popa
xchg
clc
out
das
iret
xor
pop
inc
js
jg
sbb
out
aad
cmp
xor
cmc
push
les
jmp
sub
inc
orl
testl
jecxz
into
dec
sub
ja
ds
push
ds
mov
mov
in
repz
or
pop
leave
and
xor
cmpsb
or
pop
mov
cmc
push
pusha
cmp
mov
dec
mov
or
cmp
test
mov
pop
xor
push
mov
flds
stos
dec
in
sbb
sti
or
sub
lea
or
jae
fisttps
jne
mov
fwait
loope
lds
push
iret
cmp
rcl
mov
add
xchg
dec
mov
rcrb
push
xchg
icebp
pop
or
aad
out
push
mov
sub
pop
dec
mov
stos
pop
cmc
jmp
lods
or
cwtl
push
add
lret
sub
fisubs
test
mov
rclb
into
mov
ficomps
js
jb
add
sbb
adc
cli
cs
ljmp
push
ljmp
test
xchg
je,pn
mov
dec
add
test
jne
sub
push
dec
sbb
mov
push
cmpsl
rcrl
in
cltd
repnz
nop
xor
lahf
xchg
aad
fwait
sbb
in
imul
lcall
sarl
adc
push
sbb
adc
lahf
jl
push
and
out
outsb
cld
jle
mov
loope
aad
in
add
insb
call
or
jp
lods
iret
movsl
xchg
icebp
jbe
movsl
or
push
push
not
add
pop
sub
and
push
mov
aas
mov
xchg
outsl
cld
xchg
cmp
scas
ss
jmp
cmp
push
out
or
add
inc
mov
leave
xchg
fmul
push
xor
lcall
sub
movsb
inc
jb
icebp
fwait
adc
inc
inc
sbb
pop
shrl
dec
cld
in
aas
lds
jge
pop
jp
icebp
cld
dec
or
mov
dec
push
xchg
in
jge
mov
jns
jp
dec
push
aad
pop
pop
stc
dec
in
jo,pt
outsl
mov
test
pushf
xchg
bound
jle
push
xor
insl
push
test
jecxz
lret
ljmp
js
movsb
outsb
and
sbb
and
add
clc
mov
out
xlat
sub
push
in
adc
mov
cmp
xchg
jo
jne
mov
es
push
sbb
cmp
idivb
inc
js
lret
jecxz
cmc
fcoms
sbb
sbb
xchg
inc
xchg
cltd
push
pop
jbe
mov
sahf
popf
pop
test
jecxz
aam
iret
xchg
pushf
movsb
mov
push
dec
repnz
loop
loopne
mov
add
mov
outsl
icebp
daa
cmp
dec
mov
dec
fs
sarb
out
push
mov
subl
ljmp
add
lcall
test
dec
adc
and
test
xor
lds
lea
add
and
fwait
pop
push
mov
pop
shrl
adc
add
xchg
mov
ja
jae
dec
sub
sub
sub
aaa
sti
mov
or
mov
xchg
jp
sub
andl
xchg
xor
in
aas
imul
sbb
imul
push
mov
loop
pusha
jno
jnp
dec
sti
sbbl
jne
push
mov
mov
mov
cmpsl
xor
mov
jg
lds
sub
imul
adcb
dec
bound
jg
popa
rclb
or
sub
sbb
ja
cmp
push
out
cmc
int
ficomps
mov
stc
rcrb
es
out
ljmp
clc
cmp
push
mov
fistps
inc
fstpl
int3
stc
sub
icebp
adc
movsb
loopne
icebp
fs
das
gs
jno
push
movsb
aam
pop
shl
pop
mov
jmp
dec
test
popf
dec
or
or
icebp
mov
or
pop
nop
jae
add
adc
test
cmp
add
sbb
push
xor
jmp
fcoml
cmp
mov
iret
movsb
lret
lahf
imul
pop
inc
gs
lods
pop
lods
push
mov
sbb
mov
and
pop
push
insb
out
or
push
sub
dec
daa
lods
rclb
or
fdivrl
add
push
das
ss
xchg
stc
scas
mov
loopne
adc
jp
push
repnz
in
nop
jae
cmp
loope
jbe
cs
jge
push
add
imul
add
imul
arpl
pusha
popf
loopne
sub
jnp
mov
push
push
sbb
pop
mov
pop
add
jbe
cli
cmp
xorl
shr
push
xchg
scas
rorb
inc
arpl
lods
js
mov
sub
xchg
popf
lret
call
sub
fdivl
inc
je
or
fdivs
daa
rcll
call
stc
add
rorb
sub
push
dec
jns
leave
mov
xchg
xor
mov
sub
ret
repz
std
lods
mov
movsl
and
jmp
jecxz
add
fs
fsubs
sub
xor
clc
sub
cld
inc
sub
test
aad
adc
fstpl
aam
lret
fdiv
in
cmpsb
add
push
les
push
int3
imul
loopne
push
inc
out
mov
xor
ja
jb
lret
inc
xchg
xorb
push
ds
je
idivl
aad
mov
fwait
aas
js
sbb
int3
jb
aaa
ret
push
push
fisubrl
lods
cmp
inc
popf
insl
test
jno
ds
xchg
cli
jmp
push
or
jo
sahf
iret
stos
popf
sub
movsl
jecxz
int
or
cmp
xchg
hlt
jbe
push
jl
in
dec
pop
and
fsubrl
mov
int
and
mov
add
cli
loopne
pop
pop
stos
repnz
sbb
out
sub
aaa
out
push
fsubrl
popa
jcxz
les
sar
dec
sub
faddp
jmp
jns
call
rclb
adc
xchg
bound
mov
jmp
xchg
lret
push
xor
out
out
jecxz
push
inc
jo
fcoms
fsubp
and
jae
std
lahf
sbb
mov
and
mov
add
cld
jmp
jle
push
sub
das
movsb
push
mov
imul
cmp
fsub
xchg
xor
mov
sub
xchg
or
ficompl
mov
push
lea
mov
ret
hlt
lock
in
push
std
or
push
lret
xchg
adc
pushf
in
dec
arpl
test
hlt
ds
arpl
les
dec
outsl
call
dec
jae
adc
movsl
sub
fimuls
cmc
mov
dec
movsl
mov
jno
dec
ja
stos
in
add
out
xorb
cltd
fldcw
sbb
test
repnz
pop
ret
and
sub
int
out
test
mov
in
jmp
outsl
aas
xchg
pop
xor
cmc
xor
xor
test
xchg
shrb
add
xchg
rcrl
add
scas
jecxz
push
jg
out
mov
dec
jnp
jle
bound
int
mov
jmp
jmp
stos
addl
leave
aad
in
fsubs
data16
test
or
jbe
sbb
out
pop
xchg
clc
fbstp
shl
jbe
adc
pop
jne
xchg
adc
stos
or
dec
add
cmp
mov
mov
xor
lods
lods
movsl
aas
cmp
out
inc
out
insl
negl
inc
ret
nop
sbb
in
aaa
lret
pop
sahf
push
in
pop
je
dec
ret
std
in
adc
and
push
mov
imul
mov
or
aam
jno
nop
jecxz
cmp
ret
lahf
adc
add
mov
push
mov
dec
sub
das
testl
test
mov
addr16
xchg
jne
loop
les
in
sahf
lret
xlat
int
mov
popf
push
dec
insl
pop
inc
cmc
or
das
imul
adc
inc
cmp
test
mov
mov
mov
lret
xchg
dec
cmc
in
xchg
xchg
fbstp
inc
mov
inc
sbb
jp
mov
pop
add
jmp
and
push
push
mov
test
mov
loope,pn
dec
into
mov
pop
es
and
sbb
dec
push
jmp
popf
test
add
negb
pop
aad
je
jle
push
sbb
xchg
mov
ja
or
ss
jmp
out
ret
add
add
lods
push
in
mov
mov
std
xor
push
ds
xor
ljmp
loope
and
mov
mov
pop
sbb
sbb
movsb
and
cmp
mov
stc
mov
adc
scas
fildll
dec
and
push
insb
in
sbb
stc
mov
int
aaa
mov
push
loopne
and
push
mov
in
aas
mov
cltd
ljmp
mov
xchg
fs
and
or
leave
fs
negl
shl
idiv
shl
adc
clc
adc
insb
push
mov
call
lahf
cltd
sub
stos
pop
gs
jmp
test
add
mov
jecxz
aaa
cltd
mov
stos
gs
lds
mov
repz
dec
cmpb
xor
aaa
pusha
je
mov
adc
cltd
mov
jmp
cmp
add
sub
cmc
inc
shr
jb
fcmovnbe
lods
push
cld
xchg
inc
xchg
mov
mov
stos
cmp
cmp
fldt
movsl
mov
xchg
jg
fucomip
adc
in
cltd
sti
cmpsl
ret
mov
push
mov
sbb
mov
sbb
cwtl
cmpsb
ss
in
stos
xor
icebp
xchg
insl
loopne
das
fcmovnu
repnz
cmp
scas
enter
xchg
lahf
adc
xchg
ss
fildl
push
jae
lods
xchg
adc
lods
sub
fwait
addr16
aam
popa
mov
jne
es
pop
sbb
lret
nop
sub
and
sub
std
sbb
sahf
mov
hlt
jmp
mov
xorl
pop
pop
sbb
fsts
dec
int
xor
mov
or
push
inc
popa
sub
jecxz
mov
int3
loopne
mov
or
arpl
push
jmp
pop
les
hlt
lock
jmp
insl
stos
jmp
xor
mov
scas
outsb
fcoml
mov
and
ds
and
jmp
cmp
cmp
dec
sahf
insl
popf
jo
jecxz
test
xor
fistpll
scas
lods
or
ss
xchg
dec
repnz
out
lods
lahf
mov
inc
ss
mov
cmp
mov
mov
push
dec
fimull
out
shlb
xchg
xor
xchg
jb
lods
push
inc
popa
mov
adc
add
cmpsb
add
jecxz
andl
in
adc
xorb
cmp
push
dec
or
popa
shl
scas
aam
sarl
insb
test
jg
fsubrl
adc
sub
out
pop
dec
fucom
dec
int
mov
or
ljmp
cli
jno
mov
in
lds
icebp
xchg
adc
mulb
sbb
jge
ds
cmp
loopne
adc
dec
loopne
movsb
sbb
or
mov
les
das
cmpsl
fsubs
les
ret
sub
dec
or
lods
lds
cmp
imul
stos
xchg
enter
and
out
push
adc
in
add
cmpl
mov
sub
add
mov
adc
sbb
inc
loope
mov
rcrl
jge
es
jb
pop
pmulhuw
push
pop
fwait
scas
inc
pop
jge
test
mov
enter
inc
movsb
xchg
scas
sarb
lret
jb
or
out
bound
push
dec
adc
add
clc
rcrb
or
mov
data16
shr
xchg
ret
pop
jg
mov
rcrb
cmp
mov
ds
ret
std
shl
jae
movsl
push
cltd
mov
nop
xlat
sub
out
push
imul
mov
popf
sub
shll
hlt
push
pop
xorl
mov
das
xchg
and
outsb
js
mov
movsl
aam
dec
addl
sub
add
xchg
xchg
sub
lods
sub
out
rcrl
popf
stc
test
xchg
les
cli
push
ss
xor
xor
sahf
jnp
lds
jbe
cwtl
and
adc
xchg
xchg
loopne
test
cmc
repnz
inc
loopne
das
pop
xchg
push
clc
outsl
pop
push
arpl
cmpsl
add
out
or
inc
sbb
adc
outsl
mov
dec
xor
cmc
inc
mulb
adc
and
es
or
jno
sub
xor
jecxz
mov
pop
xor
cmp
out
movsl
fists
mov
enter
test
loopne
fidivl
sub
popf
and
imul
shrb
fidivs
insb
ja
xor
mov
idivl
cmc
out
lods
fs
pusha
lahf
addr16
mov
mov
cmp
js
rolb
xor
add
mov
pop
imul
or
dec
enter
sub
mov
push
push
sub
pop
and
jnp
cmc
xor
js
xchg
mov
add
dec
popa
shrb
mov
and
loope
mov
and
seto
inc
aaa
push
mov
push
or
push
mov
adc
xchg
cmc
call
and
push
push
cli
in
pushf
push
or
hlt
push
xor
out
mov
scas
mov
in
sub
inc
mov
stos
sub
inc
push
sub
xor
xchg
std
sub
mov
jnp
cld
and
dec
push
jb
rcrb
jo
in
mov
cmp
aad
adcb
sub
xor
xor
mov
andl
negl
jmp
lret
loope
mov
ret
ja
mov
mov
dec
mov
jp
rol
cwtl
or
sub
jnp
pop
lahf
daa
gs
das
enter
std
movsl
push
in
test
pop
push
cmp
cmc
shlb
dec
mov
pop
pop
test
jb
pop
scas
dec
lahf
cwtl
cmpsb
and
sbb
rorb
xor
sub
cmp
add
in
sub
sub
subb
push
aad
sbb
mov
adc
hlt
test
int
and
outsl
sub
or
enter
jnp
ret
std
and
out
pop
fldcw
jge
push
mov
mov
test
repz
jmp
xor
mov
mov
xchg
sbb
sti
cmp
out
push
pop
sub
lock
jnp
mov
and
jb
adc
addb
loopne
add
pop
inc
jb
out
stos
xor
dec
ret
sbb
int
out
imul
cmp
stos
jle
ds
out
inc
mov
sbb
cmpl
xor
sub
inc
mov
sahf
mov
sarl
adc
in
dec
and
and
cwtl
std
pop
insb
sbb
mov
and
leave
xchg
push
and
cmp
dec
into
dec
imul
repz
aam
xchg
dec
push
dec
out
in
shll
push
imul
xchg
in
mov
das
dec
hlt
push
lods
fcmovnb
int3
xchg
and
insb
std
and
dec
fstl
jle
or
pusha
and
mov
or
scas
fistps
sti
xchg
mov
and
arpl
fdivl
xor
bound
pushf
mov
pop
xchg
push
arpl
sbb
rolb
cs
adc
xchg
jg
fisubrs
movswl
fcomps
sbb
sbb
pop
aas
dec
ja
cs
loope
mov
add
push
divb
shl
arpl
adc
push
test
mov
mov
push
xchg
jbe
subl
arpl
sbb
aas
loope
movsl
or
cs
inc
mov
addr16
gs
lock
iret
ror
cmp
pop
stos
dec
sbb
push
push
icebp
aas
popa
fdivrl
pop
stc
or
fdivrs
mov
sbb
or
mov
icebp
mov
icebp
stos
lret
inc
add
dec
jae
imul
xchg
test
mov
xchg
push
inc
sbb
outsl
arpl
or
es
into
push
xchg
std
pop
popl
sarl
fsubs
inc
fucomi
lcall
jge
adc
jp
dec
add
xorl
mov
sbb
cmp
mov
and
addl
ja
jmp
jns
imul
std
fiaddl
add
fbld
and
lds
fmuls
insb
push
loop
lods
pop
loopne
or
and
dec
mov
shlb
pop
div
mov
or
mov
xchg
fidivrl
mov
mov
pop
fildl
test
mov
pop
mov
std
adc
notb
jg
mov
sub
shlb
mov
lods
leave
scas
jae
repnz
test
shrl
popf
ret
xor
xchg
lods
arpl
mov
mov
cmp
in
addr16
aam
sub
pop
push
inc
lods
mov
adc
int3
out
xchg
leave
xchg
iret
or
push
cmp
mov
les
fisubrs
lea
sbbl
jp
add
sbb
in
lock
push
aam
jg
dec
push
fimuls
out
cmpsl
popa
ds
pop
stc
lret
sub
adc
pop
xorb
shrb
shll
inc
mov
jne
mov
push
push
mov
jae
sbb
cmp
andb
test
xchg
insl
xor
outsb
sub
cs
lret
sbb
push
js
xchg
outsb
mov
test
lea
or
inc
sbb
cmpsl
push
inc
inc
mov
mov
cmp
imul
fimuls
jmp
das
imul
pop
pop
repnz
lock
add
inc
push
xchg
repnz
push
repz
fcoms
add
fiaddl
adc
xchg
push
or
add
outsb
mov
sarb
stos
into
and
jge
mov
xchg
xor
shl
push
xor
dec
loopne
pop
mov
mov
or
or
sti
inc
jp
and
jecxz
fnstcw
in
iret
call
lods
in
cmc
xor
sbb
inc
jbe,pt
dec
mov
rolb
mov
cmpsl
dec
and
scas
pusha
lahf
push
pop
sub
pop
xchg
mov
add
das
icebp
jp
es
pop
mov
fdivrl
push
lods
adc
dec
mov
pop
adc
dec
loope
jne
adc
lahf
cmp
mov
pushw
jle
bound
adc
rorl
xor
dec
inc
loop
lea
std
ljmp
cmp
sub
cmpl
mov
roll
repnz
aam
mov
sub
ds
insl
shll
xchg
add
sahf
fdivl
mov
inc
xorl
call
pop
mov
mov
or
imul
mov
icebp
or
shrl
lods
lahf
aas
xorl
leave
divl
inc
outsb
push
js
leave
shrb
mov
cmpb
and
std
push
lock
sbb
pop
mov
mov
aam
sbb
mov
clc
ret
fidivs
cwtl
cwtl
sub
inc
dec
insl
mov
into
std
loop
inc
aad
rcl
fadds
movsb
push
push
inc
dec
fidivrl
out
cwtl
sahf
lods
and
and
in
pop
shl
mov
je
xchg
mov
inc
jg
and
dec
mov
dec
jecxz
xchg
mov
sarb
aam
btc
js
cmp
jle
and
cmp
cld
mov
loope
mov
mov
out
pop
shll
xchg
dec
lock
aad
jp
in
inc
and
jns
imul
dec
push
pop
sub
rcrl
data16
mov
xor
mov
xchg
pop
aaa
or
pop
dec
sarb
scas
inc
mov
sbb
fs
adc
xchg
aad
aam
lods
clc
testl
adc
xchg
sub
add
push
cld
ja
xchg
lods
mov
mov
ss
mov
jns
popa
ret
movsb
push
jnp
ror
push
movsl
fstpt
addr16
cmpsb
mov
add
push
imull
mov
xor
xchg
test
mov
out
mov
jns
or
lea
loop
lods
mov
fcoml
std
scas
shlb
negl
repnz
cmp
dec
roll
jmp
dec
lds
mov
mov
xchg
dec
mov
stos
out
sub
dec
sub
cmc
ja
sbb
push
add
enter
insb
mov
sarl
ss
dec
das
outsl
jle
imul
popf
dec
push
pop
and
test
cmp
sbb
lods
mov
or
popf
fmul
imul
movsl
push
push
test
mov
xchg
add
cmp
shrl
push
xlat
sub
xchg
inc
lods
cs
push
jmp
je
clc
dec
or
andl
jecxz
outsb
xchg
jns
ja
int
jb
dec
or
mov
das
stos
scas
lock
xchg
sbb
ret
nop
inc
in
fsubrs
adc
xchg
shll
jle
enter
movsb
ret
pop
in
push
jg
int
ljmp
push
repnz
pop
adc
push
das
mov
jae
add
fildll
popf
mov
mov
stc
cs
push
icebp
fsubl
dec
xchg
repnz
ja
xchg
sbb
int
fsubrs
dec
in
xchg
popf
adc
stc
test
leave
andl
jg
xlat
roll
popf
roll
pushf
aaa
arpl
daa
clc
rcl
mov
mov
push
out
add
fisubl
and
sub
outsb
aas
scas
data16
xor
xrelease
sub
mov
push
enter
mov
sbb
cmp
pop
inc
stos
dec
mov
pop
mov
test
cmp
xor
xchg
jne
mov
cmp
call
and
fwait
push
cmpsl
lret
xchg
mov
icebp
push
dec
lea
jae
dec
fcmove
mov
fcoml
or
xor
dec
jno
sbb
add
and
in
cmp
clc
sub
out
or
andl
push
inc
shll
loop
or
mov
xlat
xor
push
inc
ret
xchg
nop
cmp
mov
iret
dec
and
jb
cltd
mov
pop
inc
xchg
cld
mov
cs
jge
push
fldl
xchg
jl
mov
sahf
arpl
pop
mov
stos
fwait
lret
fcoms
nop
add
jno
int3
and
mov
movsl
sbb
leave
mov
shlb
jecxz
leave
mov
bound
mov
faddl
lret
test
in
out
fcmovne
mov
jo
mov
add
pop
stc
shll
decb
pusha
decl
iret
pop
jbe
inc
outsb
push
call
je
pop
arpl
repz
lret
xchg
xor
mov
iret
sub
pushw
into
add
nop
xor
cmc
xchg
scas
adc
sbbb
pop
jge
fadds
sbb
lret
cmp
xor
pusha
iret
pop
jbe
cltd
add
dec
lret
sub
adc
xor
jmp
xor
mov
inc
push
clc
enter
arpl
dec
pop
or
pop
push
xor
pop
lcall
in
movsb
pop
lcall
and
push
cld
aaa
arpl
pop
cmp
das
loop
sub
ss
int3
or
mov
xor
fdivrs
sti
cmpsl
minps
sbb
sub
mov
sub
cmc
cmc
lock
dec
jmp
sti
cmp
shlb
ficompl
mov
jecxz
fisubl
push
in
xchg
mov
bound
ret
or
mov
cmp
int3
push
pop
pop
sub
je
adc
cs
adc
pop
mov
insb
bound
xchg
dec
push
sti
push
pusha
stc
mov
mov
xchg
aaa
aad
je
les
xchg
pop
mov
dec
stos
out
mov
add
pop
ret
int
mov
lods
adc
inc
and
aas
hlt
mov
insb
out
out
out
and
xchg
add
movsl
inc
js
shrl
ss
mov
fdiv
ss
pop
lock
nop
mov
xor
sti
std
rcll
mov
fisubl
inc
or
inc
push
imul
dec
jb
js
pop
in
je
cmpsb
movsl
xchg
pop
loope
loopne
mov
faddl
add
test
xchg
pop
inc
vphaddudq
dec
jle
dec
outsb
pop
sub
lea
icebp
in
out
xchg
dec
mov
bound
mov
push
lcall
mov
js
aad
xor
xor
in
inc
aaa
push
loopne
inc
jl
mov
incl
out
pop
add
jo
ret
adc
repz
adc
or
pop
sti
fcoml
sub
fnstenv
movsl
rolb
fisubl
pop
push
dec
dec
loop
jl
adc
cmpsl
adc
ljmp
pop
aas
test
loop
mov
test
mov
pushf
dec
mov
push
mov
push
inc
dec
pop
into
scas
adc
sti
in
pusha
mov
inc
movsl
sbb
adcb
aaa
push
insl
dec
aaa
mov
dec
call
mov
loope
mov
inc
sahf
pop
mov
es
shll
aaa
fsin
lds
push
ds
dec
in
iret
fnsave
xchg
cmp
mov
imul
or
lret
call
pop
rclw
lahf
in
je
mov
mov
ljmp
push
push
mov
xor
cmp
fwait
mov
mov
call
inc
inc
inc
xchg
lret
mov
stos
inc
movb
fisubrl
out
or
loop
dec
in
xchg
fisttpll
mov
cmp
mov
xor
xor
sarb
test
inc
jge
pop
fdivrl
mov
std
fs
push
daa
add
fwait
es
mov
out
in
test
insb
popa
rorl
in
aad
dec
je
mov
loope
movsl
xor
mov
dec
in
adc
lea
xchg
lret
push
push
in
insb
ss
mov
cs
mov
push
push
fdivs
stos
jmp
push
sub
inc
add
cmc
arpl
xchg
dec
xchg
sub
sbb
add
mov
clc
inc
sub
push
add
aam
das
fcomps
push
icebp
lret
cmc
lret
mov
test
and
sub
les
add
xor
cwtl
in
nop
jle
push
mov
or
mov
adc
cltd
cmp
mov
cld
mov
test
imul
sbb
jno
lea
sbb
pshufw
mov
add
nop
aad
test
test
xchg
mov
nop
lock
and
jmp
fdivl
xlat
add
jge
insl
andl
fiaddl
or
cmp
push
fnstsw
push
push
inc
push
stos
insb
mov
mov
lock
jg
jo
arpl
das
adc
out
arpl
mov
orb
lock
cmp
mov
adc
loopne
sub
push
test
aad
test
outsb
xor
nop
cmp
jg
cltd
insb
pushf
sbb
mov
popf
lret
xor
lret
mov
loop
outsl
xor
movsl
cmpl
pop
xchg
rcrb
jae
icebp
sub
add
lret
mov
cld
frstor
in
jno
ret
cmpb
and
cwtl
cwtl
in
sti
add
mov
imul
outsl
mov
xlat
notb
shr
mov
or
rorb
sbb
push
pop
lods
adc
mov
xor
and
and
bound
xchg
scas
ret
and
lret
cmpsl
inc
cwtl
xchg
xlat
mov
mov
stos
insl
aam
outsb
push
jnp
mov
or
mov
mov
nop
sbb
fcomps
mov
sbb
jnp
xor
aaa
imul
and
sub
fsubrs
out
lock
or
popa
call
in
push
roll
inc
and
addr16
je
ret
xchg
push
fmuls
jmp
ljmp
mov
int
notb
in
sub
pop
jg
insl
inc
sub
mov
add
stc
negl
mov
add
fs
jp
and
jmp
push
xchg
or
ret
pop
outsl
add
das
push
mov
es
or
sbb
push
aaa
add
mov
adc
lock
mov
lret
cmp
iret
fstps
into
sahf
das
pop
shl
dec
pop
fstpl
in
adc
pop
adc
xor
mov
xor
adc
int
jp
icebp
push
pusha
mov
fsubrs
cmp
ret
inc
daa
std
dec
jg
data16
sbbl
xchg
ds
jge
push
sub
jecxz
and
xchg
shlb
pop
adc
lods
cmp
pop
daa
addb
aaa
adc
int3
popa
dec
xchg
repnz
pop
mov
or
add
pusha
dec
popa
out
insb
insb
push
addr16
mov
dec
ffree
sub
inc
mov
mov
sub
jecxz
pushf
mov
sti
cmp
ds
or
lds
mov
lahf
ss
into
les
pop
insl
outsl
jns
ficoms
sub
xor
ss
ret
lock
inc
xchg
mov
jb
loope
fwait
xlat
fisubl
in
sub
mov
daa
mov
sti
push
psrlw
stos
insb
gs
add
lea
mov
insl
push
pop
jmp
in
ljmp
gs
or
dec
pop
lock
mov
fsts
inc
inc
mov
adc
or
cmp
fsubrs
scas
daa
cld
nop
cmp
loop
mov
pop
sub
jg
or
out
jns
xor
nop
add
leave
std
in
mov
iret
mov
dec
in
jnp
enter
test
and
lcall
sbb
insl
cmp
sub
mov
and
jae
sbb
outsb
pusha
aas
mov
lds
int
add
popf
pop
adc
sub
jp
cmp
pop
fsubs
pop
mov
xor
push
mov
inc
sbb
xchg
adc
mov
mov
sti
stos
insl
sbb
push
aad
stc
sub
aad
out
mov
sbb
pushf
jge
mov
pop
in
or
stc
fldt
and
cmp
les
cmp
pop
fs
or
sbb
push
mov
fs
ffreep
ds
lods
ljmp
loopne
hlt
call
aaa
popf
xor
cli
aas
mulb
pop
sbb
lea
mov
xchg
pop
mov
lods
xor
stos
cld
imul
shrl
sahf
clc
xorl
fdivrl
xor
add
or
jg
add
inc
pop
addr16
icebp
imul
fucom
pop
lea
popa
sub
jbe
sub
enter
or
mov
testb
je
inc
mov
pusha
fdivs
adc
pop
test
ljmp
movsb
stc
cli
sbbl
fiaddl
movsb
push
mov
push
loope
out
pop
adc
loop
mov
cmc
mov
clc
sub
in
daa
push
mov
and
and
pop
pop
mov
and
scas
loopne
lods
aad
fstps
push
scas
leave
inc
push
xchg
xlat
xchg
ljmp
repnz
add
shll
das
jge
push
gs
xchg
jmp
mov
int
inc
lret
aaa
jne
add
std
jno
shr
fs
lock
enter
rclb
adc
imul
les
in
and
mov
sub
mov
push
xlat
movsl
fstps
pushf
sbb
mov
jl
sub
add
jno
lret
out
test
lret
dec
push
ficoms
pop
cmp
pop
sbb
test
jl
mov
mov
pop
sub
cmp
loop
in
xchg
int3
inc
inc
and
out
and
sbb
adc
mov
xor
cld
mov
negb
sahf
jge
pop
ret
int3
jnp
mov
add
mov
ljmp
lods
loope
out
jp
push
stc
ret
mov
mov
shll
xchg
mov
cld
pop
out
or
push
pushf
jl
fwait
sub
movsb
fs
cmp
arpl
jne
adc
movsb
xchg
movsb
stos
mov
incb
mov
iret
jp
xchg
out
call
scas
push
push
jo
mov
mov
data16
jne
lcall
call
mov
dec
push
jmp
jge
popf
or
mov
push
mov
shlb
es
fsubrp
sbb
in
fdivrl
movsl
call
jmp
imul
sahf
push
in
aas
out
out
cwtl
mov
shll
add
pop
push
pop
rcrl
clc
inc
mull
jge
divb
sub
ss
cmpsl
cwtl
sub
push
pop
inc
sbb
lcall
arpl
sbbb
outsb
sub
push
iret
out
jbe
push
mul
xchg
cmc
cmp
sahf
scas
in
jno
pop
sub
cmpl
dec
dec
pushw
aad
adc
adc
xor
sub
sbb
pop
add
ret
xor
xchg
les
dec
ds
stos
adc
add
xchg
call
dec
pop
ja
or
inc
inc
hlt
out
add
scas
pop
jnp
xchg
sub
push
cmp
adc
or
sbbl
movsb
int3
cmp
fdivr
mov
and
sub
sahf
xchg
push
add
ss
cli
pop
add
sahf
or
sub
mov
or
lds
pop
xchg
mov
adc
jp
push
sbb
out
pusha
add
sti
inc
mov
std
popf
bound
push
xchg
pop
xchg
imul
inc
inc
jnp
out
pop
fstps
lock
adc
inc
stc
mov
push
add
loop
sbb
rcrb
in
mov
daa
or
add
mov
int3
stos
jle
sbb
xchg
xchg
test
adcl
rorl
mov
fucomp
jne
lahf
adc
nop
nop
mov
ret
add
out
je
sub
leave
inc
mov
test
lock
and
xor
fcompl
sub
jp
push
in
loop
nop
xorb
adc
mov
jp
cmp
mov
push
loop
inc
add
xor
ret
sub
leave
rcr
cmpsb
fisubl
es
xchg
lods
push
xor
pusha
call
pop
in
jnp
mov
xor
loopne
cmpsb
mov
lahf
adc
test
push
pop
cmpb
scas
cwtl
fildll
fstpl
movsb
insl
mov
mov
cmc
js
iret
xchg
rorb
pop
xchg
mov
pmaddwd
insl
in
add
and
pop
lods
adc
lock
ss
jmp
stos
push
mov
scas
loopne
push
cld
sbb
inc
xor
daa
or
dec
shl
popf
or
xchg
mov
cmpl
adc
push
data16
push
cmp
jnp
xchg
pop
push
jge
mov
push
imul
xor
popf
add
adc
push
repz
bound
jae
xor
hlt
dec
push
ret
mov
adc
icebp
imul
testb
movsl
in
push
rcrb
mov
sub
xchg
shlb
popl
inc
pop
mov
mov
xchg
hlt
fcoml
leave
pop
sub
dec
inc
into
inc
xchg
sbb
fdivrs
sbb
sub
cwtl
shrl
imul
push
inc
sub
lock
mov
inc
sub
mov
fmuls
in
mov
lods
mov
jl
daa
fdivrl
sub
pmovmskb
adcb
xor
imul
pop
push
mov
jb
pop
pop
dec
cmp
xor
gs
cmpsl
pop
test
xor
pusha
push
bound
addl
cmp
pop
mov
daa
sub
adc
jmp
xor
icebp
test
out
or
int3
std
sbb
and
xchg
jae
into
cmp
xchg
test
dec
pop
xchg
rcll
xor
pop
cs
adc
and
dec
subl
jle
inc
or
in
dec
ja
stos
out
dec
xchg
std
inc
add
jmp
lea
dec
shrb
inc
fidivl
and
bound
aam
xor
lods
sbb
dec
call
adc
aaa
insl
fstpl
or
sub
sub
pop
ds
sub
in
mov
adc
jmp
cmpl
mov
fldt
repz
ss
mov
inc
and
lahf
xor
sarl
or
loop
cmpsl
das
jge
and
and
lea
sbb
cmp
push
pop
repnz
pushf
lret
adc
and
test
scas
sub
mov
outsl
and
sbb
or
test
sub
cmp
and
sub
jb
push
jbe
ds
outsb
sbb
or
push
pop
decb
jne
cwtl
into
ljmp
pop
daa
test
sbb
push
push
pop
pop
test
sub
loop
pop
jp
inc
jecxz
mov
cld
test
dec
adc
dec
jg
jns
out
lock
loope
pop
cmp
insb
pop
xchg
pop
pushl
cltd
sub
in
xor
push
das
xchg
nop
cs
clc
sub
and
loop
roll
rclb
int3
sub
jle
and
pop
xchg
sbb
add
push
sbb
outsb
push
mov
xchg
lea
lret
jmp
mov
mov
mov
ja
loope
shlb
rcl
repnz
cs
and
orb
push
dec
addr16
mov
stos
out
pusha
push
jg
jl
xchg
xchg
aam
aam
scas
int
push
pop
cwtl
imul
xchg
push
sar
shrb
popa
push
fsubrl
notb
xchg
or
daa
mov
adc
cmp
test
and
fcmovne
dec
imul
sub
jl
rorl
mov
or
cmp
in
sti
fdivrl
xchg
pop
pop
lret
xor
cmc
push
in
sbb
fcompl
dec
out
std
dec
repnz
mov
movsl
pop
sbb
incl
sub
ret
inc
xchg
test
lds
out
sub
mov
shlb
int3
add
mov
adc
aad
cmp
mov
data16
fstl
sbb
push
fistps
sbb
lcall
shl
pop
bound
jno
aaa
inc
jbe
xchg
cld
insb
or
fidivs
bound
pusha
and
xchg
mov
sbb
xchg
hlt
and
cli
xchg
sub
jns
lret
push
sbb
repz
and
cli
inc
push
adc
insl
pushf
adc
mov
push
cmp
or
ds
ds
lods
cltd
mov
lret
push
mov
pop
push
jae
fldcw
xchg
imul
and
add
call
fcoml
scas
hlt
and
cltd
imul
mov
out
aaa
pop
popa
arpl
rol
mov
add
push
mov
and
mov
frstor
add
mov
xlat
cmp
sbb
insb
popf
sub
mov
lock
push
fdiv
and
in
ret
push
ds
movsb
sbb
mov
xor
enter
jle
repz
cwtl
or
jmp
mov
jp
add
cmp
cmp
adc
mov
aad
call
mov
je
dec
rcrb
into
int
sub
popa
subb
inc
and
xor
aam
sahf
mov
jae
mov
xor
bound
dec
xchg
mov
pusha
push
bound
movsb
pop
cltd
js
or
adc
pop
test
ficomps
into
ds
jns
notb
stos
mov
das
jecxz
cmpsb
mov
pushf
aas
adc
and
pop
push
loope,pn
and
rolb
pop
add
push
scas
mov
sbb
dec
js
adc
stos
jg
xchg
in
test
xchg
inc
adc
push
push
mov
sbb
rorl
jbe
ror
pop
andb
ss
repz
inc
mov
jecxz
fbstp
pusha
dec
and
popf
mov
sub
subl
xor
xchg
mov
jge
ja
int3
orl
call
or
or
aas
into
ljmp
push
in
push
and
call
into
rclb
in
cmpsl
dec
lock
stos
aas
in
push
cmp
jb
idiv
mov
arpl
in
call
sbb
repnz
or
loopne
arpl
ds
insb
mov
cmp
lea
add
sti
push
mov
enter
sahf
mov
ljmp
mov
adc
pop
in
mov
bound
sub
movsl
cmpsl
and
jle
aad
cli
decb
sbb
adc
xlat
fwait
mov
popa
cmp
cmp
movsl
imul
rorb
dec
popa
dec
cmpsl
xor
aam
pop
mov
mov
cmp
mov
in
add
dec
cltd
ljmp
fisubrl
arpl
push
decb
std
movsl
loopne
iret
and
push
enter
xor
out
mov
subb
fldcw
push
int3
cld
clc
rcll
mov
fwait
jne
mov
sub
add
outsb
sub
mov
shr
test
fildl
lea
adc
mov
fisubrs
pop
lock
push
adc
nop
jo
lods
out
mov
or
mov
decb
das
shrl
outsb
sub
dec
jae
loopne
xlat
push
fldl
scas
jp
cmc
aam
sahf
pop
rep
jb
pop
pop
jmp
loop
xor
scas
adc
pop
pop
pop
and
xchg
push
into
jbe
jae
lock
push
jle
cmpb
mov
or
push
cld
adc
int
bound
stos
movsb
xchg
aas
dec
sub
push
pop
jge
inc
les
jl
xor
fstpt
cmpsl
xor
daa
xchg
push
sahf
shl
bound
ss
sahf
loopne
std
and
pop
cmp
push
mov
sarl
xchg
loopne
repz
pop
dec
insl
push
pop
cld
test
xor
sub
subl
sbb
add
xchg
pop
je
mov
push
xchg
inc
push
jns
inc
jo
inc
jl
lods
add
data16
cmpsl
pop
stc
repz
enter
out
mulb
dec
es
pop
mov
and
imul
add
mov
sarb
jg
icebp
lods
mov
stos
xor
pop
das
push
divl
cmp
mov
pop
data16
fcmovu
mov
stos
repnz
jecxz
pop
dec
push
sbb
stc
or
sti
ds
xchg
cmpsl
xor
or
je
cwtl
sub
pop
or
mov
mov
xchg
in
scas
rolb
mov
dec
sbb
aad
xor
arpl
jle
negb
aam
cmp
test
pusha
mov
push
sbb
gs
jge
cmp
inc
jg
rcr
aaa
ja
sub
movsb
hlt
inc
cld
call
mov
inc
inc
or
dec
orb
fcompl
movsb
out
and
pop
loope
fistpll
xchg
inc
dec
pop
bound
sbb
or
gs
in
xchg
sub
jge
sbb
or
pop
dec
mov
cmove
rorb
imul
call
int3
jbe
jmp
sahf
inc
mov
out
jbe
icebp
pop
das
xchg
loop
pop
inc
cmpsl
test
lcall
ret
add
pop
out
in
dec
dec
in
sub
jae
dec
hlt
or
inc
xchg
add
outsb
testb
xor
push
push
sub
push
dec
jae
jg
sub
fldenv
jo
popa
pop
sub
push
xchg
push
or
je
push
call
cli
jle
insl
push
insl
add
das
loopne
stos
mov
ret
add
in
push
fidivrs
add
and
add
add
and
dec
dec
loopne
jns
js
xor
out
int3
push
and
jne
cs
sahf
jecxz
inc
jb
push
xchg
xor
sar
movsl
dec
adc
pop
inc
mov
pop
jo
add
pop
push
jl
or
in
aad
imul
out
mov
into
jnp
je
jo
bound
nop
je
cmp
jae
jb
lods
imul
lods
fs
mov
xor
cs
test
xor
sbb
aam
fcmove
and
cmpsl
inc
out
sbb
scas
sbb
xchg
inc
es
mov
test
jo
lods
int
mov
ja
pop
nop
xor
jae
shrb
push
test
pop
add
mov
inc
sbb
fsubs
add
loopne
pop
movsl
subl
jmp
sbb
icebp
pop
and
fimull
in
jl
mov
mov
insl
sarl
pushf
idivb
add
je
inc
mov
scas
push
mulb
movb
push
stc
loope
push
pop
scas
jge
jbe
scas
cmp
test
test
xor
inc
or
bound
push
xchg
test
cmpsl
push
sbb
and
loopne
fwait
pop
or
insl
sub
lods
cmpsl
stc
xor
sbb
adc
sbb
mov
cmp
add
nop
mov
mov
loopne
rcrl
fwait
subl
pop
push
jno
repnz
fsubs
mov
repz
jo
mov
mov
and
ja
mov
cltd
push
or
ja
xchg
jmp
push
sub
mov
or
fwait
cmp
mov
out
mov
out
mov
mov
and
mov
loopne
ds
inc
lret
ljmp
cmp
insl
mov
and
mov
pusha
loop
jecxz
je
mov
add
int3
icebp
mov
int
arpl
inc
dec
stc
dec
xchg
jns
fldlg2
adc
dec
lock
fnstcw
stc
lret
and
adc
mov
xchg
sbb
insb
lahf
aas
outsb
cmpsb
push
xchg
lret
mov
incl
test
call
aam
enter
orb
rorl
pop
mov
aas
outsb
mov
ljmp
fs
aas
sbb
arpl
mov
int
fsubrs
mov
inc
rolb
and
in
popa
pop
sbb
hlt
push
dec
or
jno
int
mov
cwtl
pop
ja
in
mov
sbb
leave
dec
xchg
cli
xor
movsl
inc
xchg
ss
jo
jae
add
in
cltd
jmp
sbb
jge
push
xlat
aas
pop
dec
loope
enter
arpl
fnstenv
je
push
hlt
push
shll
jmp
inc
jae
in
rcrb
aad
push
stc
mov
js
or
lods
mov
loop
rcll
push
xchg
icebp
jp
jecxz
shl
ljmp
and
daa
cli
add
or
cmp
inc
pop
and
or
into
sbb
popf
cmpsl
mov
push
jmp
in
cmp
cli
adc
ds
fs
inc
add
mov
pop
adc
push
popf
decb
mov
sahf
call
push
lret
jmp
sahf
jno
jno
sub
jae
int3
pop
inc
push
adc
cli
sbbl
outsl
xor
sarb
push
dec
mov
inc
lret
ret
mov
lods
fcoms
rcrl
add
pop
mov
lds
stc
test
mov
data16
cmpsb
out
pop
andl
stos
dec
iret
dec
lcall
leave
mov
popf
es
mov
pop
ljmp
test
sbb
lret
jns
stc
ss
sbb
mov
daa
jg
nop
int3
daa
cwtl
lret
rorb
xchg
cmp
lea
push
ds
cmp
or
addr16
add
add
add
outsl
sbb
popa
lock
je
mulb
sarl
lods
xor
dec
add
scas
fcmovne
and
xchg
imul
xor
pop
mov
out
in
lods
jo
movsb
insb
inc
mov
jecxz
xchg
xor
adc
mov
or
repz
out
les
xchg
xlat
notl
daa
pop
stos
lods
jb
jbe
cmp
aad
xor
les
jns
add
incb
idivb
out
leave
cli
popa
or
jae
and
push
leave
push
cmp
jmp
add
push
imul
xchg
stos
dec
in
je
ljmp
popf
sbb
orl
mov
aas
sbb
test
ja
xchg
push
lsl
lods
xor
int3
inc
add
inc
mov
jae
daa
dec
jmp
pop
sbb
scas
clc
pop
mov
inc
das
dec
xchg
sub
stos
adc
xor
jl
repnz
sub
xor
hlt
cmp
iret
xchg
repz
mov
xchg
mov
mov
push
testb
mov
jp
add
ljmp
dec
mov
sti
loop
loop
xchg
cmp
xor
test
mov
and
pushf
adc
cltd
add
sbb
push
lock
inc
paddb
nop
outsb
or
jp
xchg
cmp
adc
pop
and
ds
adc
insb
icebp
inc
les
jno
sub
adc
pop
cmp
addl
loop
int3
push
adc
add
jmp
mov
popf
mov
cmp
aaa
push
stc
sahf
sbb
and
mov
gs
dec
cmpsb
pop
repnz
icebp
add
lods
or
add
cmp
pop
divb
cmp
ffreep
xor
lea
lret
ds
sbb
rol
pop
mov
outsb
fs
and
repz
cmp
sub
fsubr
adcb
sbb
dec
pushf
bound
fs
cmp
mov
xor
push
ret
pop
push
mov
idivb
cli
repz
cld
pop
jb
das
add
cltd
dec
outsb
test
or
mov
push
adcb
sub
scas
inc
sbb
push
jl
cmp
test
mov
jne
nop
pop
cmp
das
pushw
ljmp
dec
test
fcmovne
push
dec
aas
pop
loopne
add
sbb
jle
out
jbe
add
push
mov
pop
lods
xchg
adc
imul
jno
bound
push
out
xchg
out
es
ja
and
adc
popa
jnp
fsts
inc
cmpsl
in
dec
ja
bound
push
or
std
pop
jmp
adc
mov
push
adc
pop
lds
and
rclb
pop
frstor
repnz
dec
cli
stc
sbb
and
dec
imul
inc
stos
in
mov
jge
dec
enter
inc
pop
into
mov
add
roll
jne
fdivrp
data16
mov
insl
shr
repnz
fwait
pop
cmp
inc
into
mov
push
clc
inc
and
sti
test
sub
ss
dec
or
aas
call
inc
test
push
addr16
pop
idivb
sti
cld
adc
aas
pusha
ja
xorl
and
mov
or
sahf
fadds
mov
and
outsl
cmc
or
mov
stos
jns,pt
sub
or
xchg
int3
bound
outsb
lock
into
aaa
and
clc
loopne
inc
add
cmp
mov
inc
push
mov
movsl
mov
xor
jae
les
pusha
sub
or
fildl
inc
mov
pushf
mov
call
dec
out
fs
fsubl
inc
dec
dec
xor
inc
pop
mov
daa
or
and
jns
add
mov
int3
lcall
and
fsubl
lcall
xor
lods
pop
mov
popa
cmp
and
pop
loopne
mov
xor
cmp
insl
movsb
test
or
stos
jns
les
call
mov
sbb
sti
push
mov
test
cwtl
fistl
in
clc
pop
mov
clc
nop
bound
inc
out
sub
out
test
xor
jbe
pop
xchg
testb
fnsave
adc
cmp
ljmp
leave
int3
mov
xchg
rcl
clc
pop
addb
add
sbb
aaa
pop
ret
popf
in
shll
inc
mov
pop
pop
mov
inc
lods
xchg
movsl
inc
cs
outsl
push
add
or
add
cmp
jo
pop
subl
mov
pop
in
and
loope
loop
test
pop
test
outsb
call
push
sub
mov
es
imul
sbb
shlb
stos
jecxz
adc
mov
cltd
popa
insb
lods
es
dec
jmp
jp
in
out
fidivs
cmp
or
dec
mov
inc
lea
inc
xor
mov
push
aas
adc
fs
or
dec
inc
and
mov
scas
mov
jecxz
cld
ss
shlb
cli
xor
xor
test
daa
xchg
and
pushf
cmpsb
std
repnz
sbb
je
pop
or
orb
xchg
out
aam
inc
push
mov
das
dec
sarb
rclb
pusha
shlb
les
xchg
clc
js
stos
rclb
mov
outsl
mov
pop
inc
cmp
shrl
mov
fs
or
mov
push
sarl
lea
push
arpl
cmp
mov
sub
or
add
jno
add
mov
xchg
es
out
movsl
je
mov
mov
addr16
and
mov
inc
test
adc
pop
and
fnstenv
sahf
or
out
stos
outsb
ret
pop
xor
les
mov
in
aas
aam
xor
bnd
jg
out
test
popa
es
or
dec
test
xchg
rorb
enter
int
cld
jge
movsb
test
cmc
adc
jae
lds
push
inc
in
pop
dec
cld
push
jg
push
std
xchg
mov
mov
outsb
jle
mov
daa
pop
jae
stos
inc
jecxz
adc
inc
jg
dec
inc
stc
sbb
aas
fsts
jp
popf
push
sti
lods
fs
mov
out
or
add
cltd
loop
add
sti
jecxz
aad
sbb
mov
fmulp
inc
or
push
and
cmc
jnp
adc
test
and
hlt
jnp
xlat
mov
dec
repnz
or
out
bound
cmp
es
test
or
orb
mov
mov
sbb
inc
pop
dec
mov
sbb
adc
and
mov
cmc
jecxz
sub
test
out
adc
or
sbb
mov
and
pop
adc
sub
movsb
sti
mov
js
mov
mov
out
sub
fistpll
mov
mov
mov
push
xchg
outsb
adc
adc
sbb
cmp
xor
std
sahf
mov
stos
mov
rolb
inc
sbbb
fdivrl
push
dec
negb
outsl
sbbl
jmp
xchg
push
sub
aaa
jecxz,pn
sbb
lea
mov
add
sbb
sar
lods
out
cmc
sub
pop
scas
in
add
sub
xchg
jle
push
xchg
int3
movsl
push
outsb
xchg
inc
fldcw
mov
sti
xchg
cmp
pop
cmp
into
mov
pop
or
orb
sub
sub
gs
sti
mov
ja
cmp
lds
addr16
add
push
mov
rorb
pop
push
sub
inc
push
movsl
aaa
fucomi
in
mov
push
shlb
ss
mov
jmp
div
xor
jno
shrl
mov
push
inc
aam
das
das
and
rolb
ffreep
or
out
sahf
xchg
xchg
cli
pop
shlb
leave
jge
out
fcompl
lock
push
push
lret
stos
in
rolb
pop
lock
mov
mov
or
add
in
in
loopne
shrb
out
and
mov
jb
jmp
dec
das
and
in
mov
push
shlb
and
scas
cltd
cmp
push
jno
jno
adc
xchg
les
adc
call
fbld
inc
and
adc
dec
stos
insb
jmp
out
loopne
hlt
push
repnz
mov
lret
mov
data16
pusha
xlat
push
adc
addb
jmp
cld
sub
daa
mov
test
pop
sbb
ja
inc
dec
mov
outsl
pop
pop
mov
fstps
sahf
pop
repz
xchg
stc
mov
jge
jbe
xchg
loopne
sub
xchg
pop
cmp
test
out
xor
adc
mov
xchg
or
sub
stos
pop
pop
sarb
fdivl
hlt
add
and
loop
incl
adcb
adcl
testb
fcmovnbe
mov
xchg
cmp
mov
movsl
pop
dec
inc
shl
push
sub
pop
jge
insl
cld
xor
adc
orl
incb
mov
outsl
pushf
adc
inc
jg
cmpsl
int3
pushl
lcall
std
shll
pop
pop
sub
gs
sahf
adc
sub
xchg
loope
mov
and
mov
and
in
or
fists
popf
xor
adcb
movsb
xchg
repnz
add
push
addl
xchg
push
sub
lods
mov
lds
sub
loop
cmc
test
adc
mov
imul
nop
mov
outsb
cmpsb
cmp
in
mov
and
and
jmp
in
cld
rcrl
or
or
inc
idiv
aad
cmp
mov
jo
out
jp
retw
shr
sub
insb
bound
mov
add
add
out
rclb
call
popa
push
test
jno
nop
jle
xor
bound
adcb
push
orb
sub
inc
repz
jnp
xchg
lcall
mov
jnp
jb
mov
inc
sbb
fsubrl
sbb
repz
out
xchg
push
cmp
or
jmp
fdivl
scas
add
and
es
fisttpll
outsl
jge
jle
push
scas
dec
mov
push
repnz
insb
jge
adc
pop
dec
cli
dec
lahf
hlt
push
sbb
pop
mov
dec
js
push
inc
xchg
movsb
push
hlt
inc
mov
cmp
xlat
leave
lcall
mov
cwtl
aad
das
enter
scas
testb
xchg
sbb
mov
into
xor
dec
jmp
or
adc
adcl
addr16
int
xor
sbb
std
test
loopne
or
repz
dec
mov
mov
mov
mov
sub
orl
imul
test
mov
dec
or
or
cmpsl
rorl
mov
or
insl
shll
scas
inc
shlb
les
add
xor
data16
adc
add
xor
or
mov
out
push
dec
mov
mov
and
mov
and
popa
xchg
sub
pop
sahf
je
addb
xor
loopne
bound
negl
repz
xor
or
add
mov
or
xorl
in
sub
aaa
fldcw
pop
or
add
popf
clc
jmp
jecxz
arpl
and
inc
rolb
orl
jns
lret
das
pop
cmp
stc
sbb
mov
adc
into
sub
jne
sub
ljmp
outsl
mov
testl
xor
icebp
iret
fwait
cli
xlat
scas
test
sbb
fnstcw
insb
sbb
icebp
sbb
mov
fcoms
sbb
out
scas
orl
out
ljmp
push
dec
add
dec
and
out
dec
aaa
jle
mulb
fisttpll
ud2
mov
je
pop
sti
jnp
pop
pop
mov
adc
fadds
bnd
pusha
push
cwtl
insb
out
dec
rcll
icebp
pop
ss
or
js
jb
pushf
jmp
push
movsb
addr16
sbb
cmpsb
and
cli
in
daa
adc
ds
sub
loopne
cmpsb
mov
stos
cmpsl
in
das
mov
js
repnz
divl
nop
dec
int
push
and
xor
mov
mov
das
push
push
push
into
ret
mov
mov
sub
daa
sub
arpl
cmc
xorb
mov
pop
dec
bswap
or
inc
pop
sbb
call
je
les
or
and
lret
test
ja
mov
pop
pusha
mov
repnz
aad
xchg
sub
rolb
sar
sub
nop
mov
test
data16
stc
mov
andb
or
arpl
push
cmpsl
or
lods
sti
add
int
push
push
outsl
ja
in
push
add
cli
inc
enter
add
xchg
cmp
cltd
mov
jle
xchg
insb
sub
inc
iret
push
or
pop
dec
out
aas
mov
gs
cmpsb
jecxz,pt
adc
sahf
leave
scas
jmp
pop
push
imul
rcrb
dec
stos
fisttpl
or
popf
stos
shlb
repz
or
test
daa
ss
jns
jge
pop
mov
inc
movsl
xor
addb
mov
add
ds
ja
sti
in
js
xorl
add
cmpsl
in
sbb
aaa
pop
mov
ficoml
xchg
add
inc
adc
and
leavew
sub
jns
shrl
pusha
inc
aam
xchg
scas
dec
pushf
rcr
pop
repz
cmpsl
pop
jbe
ret
xchg
add
aad
xchg
jne
bnd
cmp
fs
scas
mov
xor
push
pop
fwait
lods
clc
out
pop
stos
mov
rcrb
mov
sub
enter
xchg
jns
stos
xchg
pop
scas
cmc
mov
jl
sub
bound
ss
jmp
adc
xor
or
je
pop
aaa
gs
fnstsw
lock
jbe
push
mov
or
jle
jl
push
adc
mov
sbb
cmpsb
push
adc
sti
sti
lods
pop
lahf
pop
test
inc
ret
inc
je
adc
pop
cmp
rclb
mov
lock
dec
notb
cmp
and
mov
and
xchg
jl
jmp
nop
mov
test
psubb
fisttpll
fisttpl
sub
pop
sub
mov
lods
fidivrl
fdiv
jg
push
outsb
ss
mov
lods
lret
daa
jne
idivb
adcl
mov
clc
sub
mov
outsl
sub
dec
inc
roll
cs
insl
into
lret
add
int3
sbb
divl
ljmp
std
fwait
out
xchg
xor
shl
and
xor
and
into
push
or
out
movb
or
sti
aas
jecxz
out
repnz
les
fdivrp
jne
int
add
cld
push
call
sti
pop
dec
and
xorl
mov
mov
lods
sbb
outsl
xorl
adc
sbb
xor
add
jle
cmp
mov
lahf
dec
jb
dec
hlt
ficompl
cmp
push
xor
rorb
mov
aam
jb
fbld
aad
adc
mov
mov
lcall
adc
jae
sub
or
repnz
fdivs
lock
daa
pop
outsb
xor
sahf
or
xor
push
loopne
mov
fsts
imul
jecxz
sbb
cli
jns
cmp
jae
aas
pop
adc
dec
push
in
test
mulb
jns
int3
leave
icebp
jg
fwait
dec
rcrb
ret
xchg
jl
mov
add
push
cmpsl
sub
jg
sub
mov
sbb
add
push
lock
add
mov
cmp
clc
or
aam
or
jl
dec
push
mov
enter
adc
out
xorb
shlb
out
shll
dec
stos
xor
inc
jg
sub
xchg
push
push
push
mov
or
add
push
xor
loopne
adc
sti
sub
mov
pop
aad
xchg
or
fistpll
dec
or
or
fistpll
add
and
cli
inc
or
dec
xor
out
mov
lahf
mov
fcom
aaa
sbb
jecxz
clc
andb
filds
aad
inc
or
push
in
shl
push
sbb
xchg
inc
dec
fimull
test
aam
cmpsl
les
fidivrl
mov
je
and
in
ja
out
jbe
iret
repz
push
adc
and
sahf
fldcw
dec
mov
push
jb
shlb
pop
pop
jo
repnz
pusha
adc
add
leave
imul
inc
jne
repz
jmp
mov
adc
shl
jge
jo
mov
jle
xor
pop
xchg
lock
lret
lods
xlat
pop
out
cmp
ror
sbb
add
mov
push
repz
aaa
mov
or
mov
daa
int3
xor
push
push
sub
in
pop
push
pushf
push
test
and
std
and
inc
stos
and
mov
xchg
pop
sub
test
mov
sbb
sbb
nop
call
mov
push
inc
pushf
ss
mov
jle
loop
push
into
cmp
and
inc
ret
xor
cli
es
xor
lahf
mov
push
adc
pop
and
xchg
lods
push
lret
stc
xchg
fcmovnbe
out
jno
lcall
pop
test
scas
loopne
ss
popa
popa
cld
bound
jg
popf
imul
push
inc
sbb
mov
and
inc
mov
xor
xor
mov
mov
cmp
out
add
into
sub
pop
xchg
xchg
movsb
inc
out
orw
adc
push
sbb
push
mov
cmpsl
ret
bound
test
loopne
cmp
cmp
test
xchg
fpatan
push
inc
jne
push
arpl
addl
imul
imul
test
push
lock
jnp
pop
sub
push
pop
ret
ss
dec
cli
fisttpl
daa
adc
addl
addr16
jno
stc
pusha
and
mov
xchg
jge
mov
add
push
xchg
lods
or
sub
jl
sub
sarl
inc
sub
out
fstps
mov
std
mov
in
xchg
xchg
pop
mov
mov
fildll
and
xchg
inc
dec
popf
cmp
in
fs
pop
jge
dec
hlt
loope
inc
bound
cmovp
sbb
mov
mov
cmp
dec
xchg
cmpsl
pusha
mov
ja
adc
in
and
dec
xor
mov
xchg
js
pop
test
cmpsl
iret
inc
test
mov
mov
adc
out
push
sbb
inc
push
orb
jns
mov
xor
jae
inc
and
inc
push
and
fs
push
xor
int
sub
or
iret
popa
aas
pop
lret
aas
xor
in
es
nopl
ret
push
push
ret
pop
push
fadd
push
jl
cmp
sub
jns
inc
sub
fsubp
dec
xchg
and
lods
push
jbe
push
int3
push
test
into
and
popf
fbstp
ret
cmpl
push
mov
push
xlat
or
jbe
sbbl
cmp
gs
add
mov
int3
in
ja
dec
lcall
es
sbb
cmpsl
mov
call
cmp
adc
inc
popf
cmp
imul
mov
popf
adcb
xor
cmovbe
mov
inc
cmp
jnp
imul
pop
jp
sti
mov
adc
mov
aas
jne
aaa
dec
xor
mov
cwtl
es
and
repnz
cmpsb
dec
jl
push
sbb
inc
cmp
inc
test
aaa
push
dec
sti
cltd
ss
xchg
aam
jge
jns
repnz
popw
loopne
jmp
or
pop
and
inc
xchg
std
push
and
divl
and
call
aaa
pop
jns
dec
inc
cmp
cmpsl
in
in
xchg
daa
sti
and
push
add
out
fs
or
ret
xchg
pop
mov
nop
push
je
mov
jg
pushl
mov
mov
ffree
pushf
mov
jns
sbb
xchg
sub
call
and
inc
fnstcw
sub
mov
nop
sarb
cmp
sub
mov
jbe
repnz
loope
lahf
push
mov
sub
dec
inc
pop
push
inc
push
mov
adc
scas
inc
cmp
out
call
je
pop
inc
test
cmpsb
iret
sub
push
es
sbb
sti
lcall
adc
sub
ja
mov
push
and
jp
jmp
add
or
insb
imul
pop
rol
cs
jae
adc
std
and
pop
jns
lds
pop
cmc
mov
clc
aam
std
adc
mov
es
stc
mov
add
dec
sahf
leave
testl
insb
or
pop
mov
faddl
push
clc
mov
fisubs
or
and
jl
inc
sti
loopne
outsl
repnz
sbb
push
mov
out
shrl
jbe
jae
ss
mov
pop
loop
pop
jno
inc
movsl
sub
xchg
int
pandn
lcall
and
je
mov
push
sbb
test
lahf
jbe
xchg
lods
sub
je
inc
cmp
sub
ljmp
adc
mov
notl
lods
cmp
dec
fstps
gs
sub
clc
cmp
inc
push
movsb
idivb
not
push
sahf
xor
lea
mov
shll
sahf
mov
and
pop
scas
shlb
mov
imul
cmp
mov
dec
cmp
jae
movb
jno
hlt
pop
fiadds
mov
dec
lcall
jl
push
cmp
lret
jge
or
mov
or
lahf
int3
inc
mov
sub
sbb
repnz
imul
sti
pop
call
sbb
aas
pushf
out
jnp
sti
sbb
dec
sbb
js
jnp
shrb
xchg
subl
and
daa
lret
lahf
xchg
into
and
mov
lock
jbe
jae
loop
mov
cmp
imul
aaa
cmp
subl
mov
jmp
or
ja
xchg
jno
fwait
pushf
repz
cli
sbb
lret
int
mov
cmp
sahf
outsl
jno
in
jnp
rclb
mov
mov
enter
push
and
das
sbb
and
fst
mov
pop
push
push
popa
call
push
jae
jb
popf
loopne
dec
ret
add
or
mov
cmc
dec
sti
inc
addr16
dec
sbb
push
fstps
jnp
push
add
xchg
jecxz
jnp
add
repnz
jmp
addb
je
push
mov
inc
pop
sub
mov
ja
or
shr
loop
daa
stos
leave
xor
arpl
push
mov
pop
sarb
pop
mov
scas
insb
lock
xchg
popa
jg
pop
mov
mov
mov
push
cs
jg
out
push
insb
xchg
and
rcr
pop
sarb
inc
sarb
jge
mov
lods
mov
movb
and
test
out
push
dec
cmp
pop
push
popf
xchg
add
jmp
int
repnz
fistl
inc
mov
pop
mov
cmp
xchg
pop
mov
push
es
cwtl
lea
iret
fistl
test
out
rcll
push
imul
rolb
lods
pop
sbb
xlat
push
pop
xchg
pop
jp
or
jns
mov
cld
cltd
in
nop
add
inc
lods
inc
xchg
cmp
les
das
xchg
add
bound
jb
cmc
xchg
pop
add
inc
loope
stos
lds
andb
fcmovnbe
jge
mov
inc
push
and
add
mov
repnz
adc
jg
or
xor
cltd
nop
xchg
je
pop
fsubr
xchg
xlat
imul
mov
fsubrl
jo
int
push
dec
aad
imul
enter
fsubp
mov
xchg
jae
fstps
xlat
sub
test
mov
xchg
dec
pop
shrl
stos
lock
mov
add
lcall
loop
cmc
insb
rclb
jmp
out
or
cmp
add
mov
add
aaa
gs
inc
fsubr
insb
sub
adc
divb
mov
std
daa
sahf
mov
xor
push
jmp
dec
lret
outsb
mov
mov
xchg
aam
insl
lret
pop
mov
rorb
inc
dec
xor
gs
mov
bnd
push
inc
jb
into
adc
xlat
adc
mov
mov
and
les
xchg
out
rclb
std
sbb
xchg
mov
in
scas
sti
loopne
inc
popa
mov
push
inc
sbb
sub
ss
pop
lods
jl
fsubl
push
push
dec
inc
mov
or
ljmp
test
cmp
push
mov
je
out
aas
lds
mov
add
sbb
stos
int
jnp
adcl
insb
xchg
sbb
out
rcll
sub
test
leave
add
in
xor
cmc
inc
sti
xchg
ss
pop
mov
xchg
shll
sbb
and
lock
addr16
lret
sbb
sub
cmpsb
pushf
mov
ja
in
cmp
cmp
or
fldt
mov
push
push
pop
inc
mov
sbb
xchg
cli
test
mov
xor
fidivrl
xchg
pop
jne
fiadds
lret
pop
mov
sub
ljmp
mov
push
fwait
das
data16
mov
or
xor
pop
and
jp
adc
leave
dec
rcrl
pop
int3
cmpsb
adc
lcall
or
push
js
lret
test
or
add
cmc
cmp
cmp
pop
jmp
cltd
jnp
test
pushf
mov
dec
cltd
mov
stos
xchg
mov
bound
inc
sbb
or
xchg
sbb
jmp
movsb
test
arpl
jbe
or
jb
sbb
dec
mov
lea
test
dec
jle
xor
je
popf
push
aaa
add
std
aad
es
iret
cmp
push
pushf
sbb
mulb
or
in
icebp
bound
xor
insl
fistpll
pop
sub
fidivrl
mov
pushf
and
push
jle
xchg
pushf
and
das
fnstsw
fucom
ja
push
push
push
mov
jb
or
inc
and
push
or
fsubl
lods
inc
lahf
popa
xor
popa
packssdw
pminsw
test
stc
clc
mov
dec
mov
push
cs
stos
sbb
hlt
movsb
fcmovu
inc
scas
leave
dec
bound
inc
ss
rcrl
fwait
push
xorb
mov
or
arpl
cltd
or
adc
inc
sub
call
cmp
gs
lcall
inc
sbb
adc
cmpsb
inc
mov
ljmp
scas
ja
dec
xlat
cvtpi2ps
jmp
outsl
cmp
pushf
ret
sbb
fisubs
jb
popa
and
jno
ljmp
mov
scas
inc
xlat
leave
sub
test
pop
shll
call
fs
in
rorl
movsb
sub
jl
iret
enter
fwait
test
pop
mov
test
adc
cmp
sti
mov
mov
es
shll
mov
enter
fsubrs
sahf
or
lock
mov
adc
and
and
out
jne
dec
aaa
dec
imul
stos
push
xor
outsb
push
mov
jns
insl
push
cmp
sarb
dec
lcall
push
sub
xchg
lret
sub
ret
add
push
pop
outsl
push
push
jg
or
xchg
in
inc
icebp
fwait
xchg
jne
pop
fstl
mov
mov
leave
shll
dec
dec
inc
push
dec
jno
addl
das
js
xchg
push
out
pcmpgtd
pop
lret
pop
and
dec
leave
scas
jb
cs
aad
lock
cmp
add
push
popa
or
push
insl
push
jl
mov
jmp
and
ss
subb
pop
flds
jp
sbb
nop
sub
imul
mov
pop
aam
jp
in
ja
sbb
sbb
xchg
cmc
pop
scas
push
fnstsw
adcl
mov
lret
dec
add
scas
pop
xchg
lea
jge,pt
push
or
xchg
inc
mov
lods
push
dec
xor
orb
out
mov
add
fnstcw
inc
mov
xlat
movsb
sub
enter
in
xor
lcall
jo
pusha
enter
inc
xchg
dec
fmull
adc
in
ljmp
fdivs
ljmp
mov
movsb
cld
sub
pop
arpl
or
inc
popf
es
js
mov
jmp
lock
popa
adc
mov
jnp
pop
nop
fsub
test
mov
lds
xchg
xchg
inc
jge
lcall
sti
mov
pop
pushf
push
jl
dec
imul
mov
jae
sti
xlat
imul
push
xchg
push
loopne
jae
pop
inc
lcall
int3
push
addr16
lcall
lret
test
xor
shlb
cmp
test
pop
in
ljmp
mov
or
adc
or
dec
mov
jg
call
mov
jp
jo
sbb
ficoml
mov
fidivrs
jnp
mov
mul
fstl
and
dec
lock
sarb
mov
or
leave
ja
dec
icebp
mov
invd
loope
movsb
dec
in
cmp
leave
int
nop
dec
paddw
ljmp
xchg
addr16
adc
nop
sbb
test
aad
pushf
push
and
stos
add
aas
std
je
adc
out
push
daa
in
push
adc
popf
popf
sub
repnz
out
fdivrs
add
inc
fwait
lcall
cmp
xchg
popf
mov
dec
clc
inc
lahf
add
pushw
push
lock
push
mov
add
or
cmp
xor
repnz
pop
jmp
mov
cmp
xor
jnp
shrb
inc
cmpsl
inc
and
mov
decb
adc
mov
movsl
sub
jl
cld
or
and
push
jle
mov
lea
rolb
sub
push
out
inc
xor
arpl
jmp
lret
mov
or
jg
jle
out
scas
call
aad
daa
xor
stos
xor
js
imul
push
mov
mov
cli
xor
lods
pop
cmpsl
outsl
lods
test
mov
cwtl
loope
mov
out
shrb
mov
stc
or
test
xchg
out
jns
out
in
cli
sub
push
inc
test
cltd
clc
jns
inc
jmp
not
movsl
mov
xchg
test
imul
lret
testb
in
cmpsb
jns
jae
mov
add
pop
ljmp
negb
int
test
fstpl
pop
push
dec
inc
rclb
mov
mov
xor
into
sbb
cmp
lret
scas
jne
jmp
cmp
cmp
push
dec
in
mov
and
cmpsb
add
dec
sti
mov
iret
loope
inc
mov
imul
mov
jecxz
jg
cmp
mov
jmp
outsl
push
jbe
push
push
jp
jg
jnp
ret
dec
aas
cs
jb
mov
not
clc
pop
inc
addl
ss
mov
or
test
sbb
mov
mov
out
xlat
mov
mov
and
loopne
mov
mov
pop
lock
outsb
cmp
lock
gs
mov
xchg
loop
xor
movsl
stos
cld
xlat
sub
nop
xchg
push
dec
aaa
insl
jae
stos
or
sub
mov
or
and
inc
lcall
pop
push
out
scas
or
mov
fsub
push
fwait
xor
push
stc
testl
push
mov
daa
push
insl
aad
fnstenv
add
fcmove
scas
outsl
or
xchg
and
sub
cltd
push
xor
addb
lret
cli
or
into
fucomp
pop
into
punpckldq
faddl
adc
sbb
sub
push
cmp
mov
fisubs
flds
xor
aam
lds
pop
not
cmp
inc
das
and
pop
out
push
fistpl
sbb
add
add
dec
xchg
bound
mov
aaa
pushf
in
cmp
ficoml
lock
scas
int3
test
dec
sub
add
push
mov
mov
orb
cmp
mov
sub
out
push
test
pushl
push
int3
xchg
insl
jmp
push
jecxz
cltd
cld
jbe
sub
addb
mov
daa
jmp
xchg
mov
cld
movsl
mov
pop
and
out
out
fstpt
mov
jnp
pop
iret
sahf
add
aam
rol
test
and
inc
xor
sbb
mov
lret
sub
xor
lahf
test
nop
cltd
inc
in
mov
ds
push
enter
loop
ret
aas
icebp
lret
push
adc
ret
push
loopne
rol
sub
push
fsts
pop
mov
sar
mov
mov
pop
lods
out
mov
jnp
clc
and
mov
jb
sub
subb
dec
xlat
andl
xchg
push
jge
mov
and
push
test
out
aad
in
ja
sbb
imul
inc
popa
fwait
push
pop
int3
ret
int3
dec
jnp
mov
push
push
pop
xchg
mov
ret
in
rolb
dec
shlb
cwtl
inc
ds
lock
pop
mov
mov
xchg
push
cmp
xchg
das
loopne
out
mov
enter
xor
mov
sub
inc
push
js
les
or
cmp
out
mov
push
xlat
pop
lahf
xor
adcl
push
insl
push
lds
inc
push
fmuls
sti
mov
mov
and
mov
fdivrl
lcall
jnp
sub
insl
shlb
dec
fcoml
sbb
das
mov
or
jo
ret
imul
das
add
mov
and
inc
sub
out
in
mov
sti
or
mov
dec
push
popf
and
cmp
andl
in
mov
jbe
sti
gs
cmpsl
sbb
lahf
andb
mov
lret
inc
std
dec
and
jb
dec
outsb
icebp
sbb
movups
pop
cmp
mov
xchg
mov
ds
scas
adc
or
dec
stos
jge
cmp
outsl
scas
or
jp
push
fstps
jle
cltd
add
jbe
lock
movsl
mov
jp
cmp
mov
sbb
and
inc
inc
es
ret
xchg
or
push
lcall
and
sbb
pop
out
test
data16
lock
push
jne
and
outsb
popa
push
xorl
out
or
cs
ljmp
dec
pop
mov
lret
sbb
test
sub
push
or
or
sbb
repz
jb
mov
mov
shll
clc
pop
std
shl
in
outsl
sbb
fwait
pop
cwtl
sbb
and
xchg
sahf
dec
cli
fistps
add
sahf
sub
add
into
int3
dec
scas
and
call
adc
rol
inc
inc
mov
push
lret
aas
bound
inc
mov
sub
loop
pop
repnz
mov
cmpb
int
add
fcoms
decb
push
stos
repz
cmpsl
cmp
fsubp
pop
cmpsb
and
sbb
sub
fsubrl
xlat
jbe
push
fmull
mov
fsubr
out
loop
mov
or
icebp
test
movsb
insl
fsubrl
sub
pop
cmp
popf
iret
sbb
out
dec
adc
adc
dec
aas
pop
inc
loope
xor
es
sbb
lods
add
mov
cmp
lret
jl
test
lods
xchg
sub
in
jno
mov
mov
popa
imul
test
data16
aaa
pop
and
xor
movsl
sub
lock
lods
dec
lahf
ret
cmp
addr16
or
inc
sbb
notl
insb
bound
ljmp
lret
repnz
cmp
into
pop
sahf
jmp
cmp
aam
in
ljmp
pop
add
push
cmp
xchg
imulb
leave
fdivrs
mov
mov
out
fucomp
roll
mov
fbstp
pop
xchg
push
mov
shlb
xchg
inc
xchg
ftst
jnp
xchg
xlat
mov
loopne
add
mov
cmp
jle
add
inc
jle
mov
hlt
jge
xchg
insb
mov
pop
add
push
sbbb
cmp
aad
dec
jo
inc
push
loop
push
in
mov
lds
inc
dec
rclb
and
bound
or
popl
jb
sub
pop
fbstp
sbb
push
daa
scas
sahf
jmp
lods
lret
scas
inc
lcall
cld
and
cmp
xchg
add
mov
jbe,pn
repz
jg
or
add
adc
sub
cltd
xchg
add
lcall
and
scas
jle
adc
mov
pop
test
in
into
addl
enter
sbb
adc
in
clc
insl
sarl
test
push
enter
and
lods
nop
ret
repnz
cwtl
imul
pop
es
inc
pop
lods
jp
adc
sub
scas
in
stos
scas
cld
fndisi(8087
lret
ss
or
inc
jns
cli
push
cmp
push
popf
push
ljmp
mov
orl
cmp
repz
xor
sbb
insb
pop
cli
pushf
enter
les
mov
fs
popf
repnz
popa
inc
insb
xchg
lret
sub
int
adc
mov
mov
cmp
loope
inc
push
mov
js
mov
fwait
inc
dec
mov
inc
add
filds
xor
sub
sbb
addr16
xchg
mov
test
imul
inc
in
lock
fcomi
subl
stos
xor
adc
test
das
mov
jne
pop
hlt
dec
bound
lcall
repnz
out
jmp
and
jnp
lret
daa
pop
cmp
xchg
jbe
int3
stos
xor
pop
mov
or
adcl
aaa
outsb
jl
ja
xor
les
cmp
sahf
mov
mov
jge
add
mov
and
leave
adc
int3
adc
or
incl
xor
loope
rol
repnz
lcall
pop
call
mov
mov
xor
jp
mov
jo
dec
add
sahf
xor
fistps
or
insb
shll
es
cmp
push
sahf
dec
sub
xchg
dec
jno
cld
inc
dec
xor
xor
mov
fbstp
fistpll
cld
ljmp
rol
fwait
sbb
outsl
ljmp
cmp
xlat
adc
pop
mov
mov
jmp
sbb
lock
int
add
imul
test
push
xchg
pop
cmp
mov
add
cmp
ret
addl
jne
lret
sbb
std
xchg
mov
inc
lret
pop
mov
mov
lock
rclb
pop
lcall
inc
xor
xchg
push
cmpsb
sub
pop
xchg
jbe
in
xor
sarl
mov
shl
shrb
pop
fidivs
popa
jmp
dec
sbb
xchg
lea
lahf
mov
xchg
sub
add
sbb
sub
dec
add
inc
add
mov
dec
sbbb
jo
lret
mov
ss
pop
imul
inc
adc
cmc
sub
ja
sbb
stos
add
or
mov
loope
sub
dec
mov
insb
and
mov
and
adc
jnp
adc
lahf
leave
inc
pop
mov
mov
mov
dec
mov
pop
or
pop
add
repnz
andb
inc
xchg
push
and
cmp
mov
andl
lods
mov
adc
push
cltd
fcmovnbe
or
xchg
mov
inc
inc
notb
jb,pn
orb
leave
fdivl
inc
testb
dec
xor
xchg
decl
xchg
mov
andl
push
add
nop
or
pop
pop
into
jae
push
mov
sbb
imul
cwtl
dec
movsb
xor
loop
scas
push
test
out
push
in
pop
push
scas
fisubs
cltd
jne
jne
sbb
mov
nop
pop
adc
mov
popl
sub
addb
mov
mov
aad
cmp
repnz
sub
jbe
fdivp
movsl
shr
push
insb
mov
xor
jg
movsb
or
mov
push
sbbl
or
mov
fidivs
sti
sti
sub
push
sub
xchg
xor
in
fmull
sbb
int
or
mov
or
cbtw
jbe
xor
fwait
adc
mov
enter
iret
lods
jb
sbb
imul
lds
imul
push
cmp
mov
push
cwtl
mov
cmpsb
orl
mov
dec
sub
pop
ror
push
or
test
scas
mov
mov
cmp
testb
xor
xchg
lock
xchg
push
adc
xlat
fldl
pop
shrl
repnz
pop
adc
mov
sahf
pop
mov
mov
inc
mov
mov
jecxz
fmuls
scas
mov
or
pop
shlb
hlt
enter
jmp
fdivs
push
pop
in
mov
xlat
aas
fcmovne
mov
movlps
mov
stos
xlat
fisttpll
jo
insb
ficomps
call
nop
mov
out
sbb
sti
or
push
push
add
leave
mov
xchg
movsl
xchg
mov
in
xor
out
aad
adc
fdiv
xor
sub
sub
lock
mov
shl
imul
adc
cmp
jecxz
mov
adc
sub
rorb
sub
fbld
xchg
jmp
and
loope
ja
mov
adc
loope
xchg
push
insb
jnp
adc
jbe
fnstsw
rolb
leave
jno
cmp
push
and
ss
add
cmp
ds
mov
sbb
movsb
mov
adc
push
insb
jb
sbbl
inc
fcoms
ljmp
pop
fidivs
add
fwait
test
pop
aad
push
mov
fdiv
outsl
ret
xlat
cmpsl
sub
jns
ss
mov
mov
daa
cmpl
pop
pop
pop
in
pop
add
int
lea
stos
xor
ret
andw
int3
sbb
arpl
add
out
mov
xor
sub
push
or
shlb
test
test
pushf
neg
cmp
pushf
sbb
lock
ljmp
arpl
pop
and
fxch
cmpsl
pop
xor
xor
pop
aam
ljmp
jg
daa
adc
xlat
jbe
push
inc
dec
rorb
or
inc
ret
dec
inc
pop
pop
cli
in
push
mov
mov
bound
cld
mov
xchg
cld
xor
ja
imul
andl
and
xor
das
orb
lea
jg
add
mov
inc
mov
bound
mov
int
and
ja
std
mov
jle
cmp
in
in
or
into
jp
push
xchg
dec
shl
adc
daa
lds
enter
xchg
out
in
dec
inc
push
pop
repnz
sti
cmp
sbb
mov
push
outsb
popa
cwtl
or
xor
xchg
ds
scas
test
jge
xchg
mov
test
mov
into
sub
and
xchg
std
jecxz
dec
lds
mov
inc
inc
xchg
mov
int
mov
push
das
adc
ja
push
sbb
test
inc
xchg
and
addr16
in
pop
xor
cmpsl
jle
and
lret
lret
lcall
cmp
cmp
push
mov
rcrl
add
mov
push
loope
repnz
adc
andb
and
lods
dec
xor
fstps
mov
ret
jne
sub
add
insb
dec
pusha
pop
lock
xchg
aaa
push
lret
dec
test
mov
bswap
cld
inc
xor
rcrb
inc
mov
hlt
repnz
addr16
lods
fmull
adc
aam
int3
aas
in
call
mov
hlt
xchg
push
jmp
aam
sbb
and
iret
imul
in
cmp
into
repnz
xor
in
add
and
inc
mov
movsb
inc
je
cmp
cmc
mov
and
push
pop
insl
sbb
mov
adc
push
fstps
inc
das
lea
push
in
mov
mov
xor
inc
push
mov
pop
lock
imulb
adc
fists
cmp
cltd
int3
in
or
int3
xor
rcll
imul
test
fldl
rorb
test
dec
xor
dec
incl
inc
sbb
inc
clc
int
xor
aad
push
or
out
sub
jp
out
or
lock
lods
adc
imul
cltd
jo
xlat
xchg
fidivrl
ja
mov
lods
sub
push
shll
sbb
das
fldt
sti
icebp
adc
dec
in
orl
pop
loopne
and
inc
jae
inc
out
inc
xor
aam
xchg
mov
mov
lds
orb
xor
inc
mov
popa
enter
shl
adc
imul
sub
ss
loope
js
pop
add
cmp
xchg
mov
stos
pop
shll
jle
pop
dec
sub
pop
sbb
cltd
out
push
xchg
ret
jae
pusha
and
ljmp
dec
jbe
mov
cltd
pop
rcl
out
jp
aas
jns
enter
jnp
insb
loope
ret
or
aaa
dec
cmpsb
loope
and
and
jp
push
int3
sbb
xchg
push
mov
andl
cltd
mov
pop
and
aaa
mov
sbb
test
repnz
jg
das
and
out
arpl
insb
insb
call
cld
xchg
ljmp
dec
adc
jo
jae
add
adc
sbb
cwtl
aas
cmp
je
inc
dec
aad
inc
cmp
pop
cltd
dec
in
out
jnp
les
fbstp
mov
in
movsb
sub
mov
pop
sti
dec
mov
scas
mov
xor
xchg
pop
aaa
outsb
inc
push
add
shll
in
mov
and
shll
loope
push
xor
enter
fcmove
xor
mov
push
out
dec
xor
sub
in
std
jge
rcll
pop
repz
cltd
lock
jb
push
out
adc
sub
lea
adc
adc
jne
out
sbb
sar
imul
mov
leave
and
or
pop
jl
loope
jbe
and
in
cltd
mov
jno
nop
jle
jge
fsts
fimull
inc
repnz
into
addb
rclb
test
lcall
mov
je
add
jae
shll
push
mov
cmp
cs
jmp
mov
xchg
aas
pop
sbb
mov
sub
les
int3
lret
outsb
dec
insb
pop
je
pop
test
cmp
push
test
stos
add
xlat
push
loop
mov
in
insl
sub
fwait
int3
or
push
sbb
cld
mov
loop
adc
in
pop
sbb
fs
pushf
xor
add
adc
sub
leave
jle
leave
inc
and
jp
lods
xor
mov
sbb
push
int
inc
lahf
mov
out
pop
ss
push
dec
jbe
clc
aas
rcl
adc
sbbl
mov
mov
mov
ror
sar
cmp
mov
into
inc
xchg
or
mov
outsb
test
pop
rol
adc
pop
xor
adc
jbe
xor
lcall
mov
xchg
cmp
and
jp
sarl
mov
sahf
inc
nopl
add
std
repnz
sub
xor
and
cmp
in
jb
fmuls
loope
sub
cmpsb
sub
lock
dec
shll
inc
xor
mov
lcall
sarb
stos
mov
ss
gs
out
cmp
shlb
sub
mov
pop
bound
lcall
in
in
lods
inc
test
cmp
dec
inc
stc
mov
pop
sbb
xor
das
jmp
xor
jbe
add
pop
xor
pop
mov
std
mov
jg
mov
ss
push
xchg
scas
int
test
add
jg
jo
push
popf
out
testl
mov
push
test
cmp
dec
stc
dec
fcmovnbe
mov
xor
ret
push
fidivrs
pop
test
leave
aam
lcall
push
and
sub
popa
push
xlat
popf
stc
jle
or
loope
idivb
or
dec
test
sub
ljmp
sbb
in
cmp
pop
sub
xchg
inc
imul
lock
lret
mov
mov
lret
incb
add
xor
xchg
sbb
es
imul
hlt
inc
ja
divl
ljmp
add
and
sub
jb
jp
xor
rolb
add
xchg
std
sbb
imul
imul
sahf
cltd
and
icebp
pop
outsl
sub
ljmp
inc
jp
lahf
push
mov
repz
push
xchg
push
mov
sub
cwtl
mov
adc
outsl
out
xor
lcall
mov
lods
cld
call
fbstp
fimuls
jmp
cld
sbb
mov
in
inc
in
cmp
or
pop
sti
jbe
ljmp
adc
movsb
mov
lcall
cmp
lret
pusha
cmp
xor
or
fs
lahf
push
data16
xor
sbb
js
xchg
lods
test
pop
cltd
ljmp
push
fwait
call
xor
jmp
sbb
fldenv
in
mov
ljmp
mov
cmp
push
or
sbb
push
pop
xchg
push
pushf
pop
mov
cli
dec
daa
and
sbbb
sub
pop
pop
jp
lret
scas
mov
iret
push
movsb
push
xchg
pop
fwait
nop
sub
jno
sbb
adc
sub
inc
sbb
adc
and
insb
dec
pop
xor
inc
sub
rorl
loop
dec
mov
into
xchg
out
mov
mov
xlat
rcll
fldenv
inc
cld
insb
mov
in
daa
fwait
cmp
testl
pop
push
aad
xchg
je,pn
jle
aas
test
aaa
dec
mov
les
or
xchg
or
stc
btl
cmp
xchg
cmp
mov
ljmp
cmp
fimuls
loope
push
out
test
std
cwtl
xor
pop
rclb
js,pn
fists
rorb
sarb
enter
jge
int3
sti
xor
popf
push
ds
popa
sbb
dec
sub
jnp
add
movl
adc
mov
test
testl
add
and
xor
in
adc
lret
cmpb
cmc
dec
lock
leave
in
pop
sub
data16
mov
repz
dec
xor
jo
mov
add
leave
ret
jo
incl
jle
xchg
insb
fcoms
cltd
clc
div
xlat
pop
ljmp
xchg
adc
mov
ret
fwait
rcll
cmpl
int
mov
and
sbb
sbb
sbb
scas
jmp
lock
pop
and
iret
addr16
sub
imul
test
sbb
add
jns
popa
cld
add
stos
pop
cmp
add
std
push
fisubrl
popa
pop
movsb
lcall
pop
fcmovb
jmp
mov
adc
data16
or
loopne
or
inc
and
mov
sarb
cmp
xchg
jb
mov
mov
loope
push
cmp
and
add
sbb
ficompl
idivb
fstp
pop
gs
enter
cmp
mov
cmp
jmp
icebp
jl
jbe
rcrl
icebp
add
mov
mov
mov
leave
push
repz
add
roll
dec
cmovne
notl
call
int
mov
rol
xchg
bound
add
ret
in
ret
lcall
adc
rcrl
addl
cmp
sbb
xor
in
cwtl
outsb
mov
jnp
push
arpl
ds
and
xlat
test
loop
in
lods
mov
mov
js
adc
add
sub
insb
out
imul
pop
jnp
xchg
cli
sarl
xor
mov
pusha
call
inc
in
push
test
dec
mov
or
mov
lahf
and
loopne
mov
ret
push
cmp
insb
fdivrl
loop
jns
mov
lret
cwtl
sbbb
adc
int
js
xchg
jbe
and
dec
int
imul
sbb
pop
call
rorl
dec
js
lret
rcrb
jle
mov
in
fs
les
lret
cmp
and
jo
or
pop
dec
aas
pop
and
cmp
jmp
sbb
or
sbb
dec
dec
mov
clc
pop
je
cmp
into
or
imul
in
mov
add
sub
gs
test
roll
and
test
adc
pop
jge
dec
cmp
ja
in
lahf
inc
aam
inc
addl
ljmp
imul
mov
mov
and
jmp
adc
repz
into
fstps
dec
sbb
test
jb
cwtl
and
sbb
sti
xchg
mov
dec
or
int
adc
lea
xor
and
sub
sub
cmp
jno
xchg
dec
out
jbe
int
mov
xor
arpl
or
pop
jbe
sbb
nop
xlat
push
sub
push
push
sti
adc
mov
into
mov
orb
aaa
mov
insb
push
divb
out
shlb
mov
cwtl
test
fisubrs
lds
insb
andb
xchg
push
pop
shrb
push
pop
dec
hlt
jne
ds
or
bound
xor
popa
jb
jo
aam
push
test
xor
insb
in
insb
lea
xor
in
inc
mov
lock
dec
scas
movsl
xchg
popa
jbe
xchg
test
fcmove
repz
outsb
xor
loopne
or
daa
dec
dec
push
loopne
sub
pop
je
imul
ja
cmpsl
bound
aas
jnp
clc
int
shrb
bound
or
sub
add
mov
arpl
push
clc
sub
xor
push
rol
sbb
mov
clc
sbb
mov
cmp
sbb
shrb
sub
sub
mov
or
setno
sbb
fldenv
outsl
push
decl
add
inc
les
jae
imul
movsb
pop
ret
jp
push
and
lods
cmp
pop
and
jnp
sub
cwtl
rorb
movsl
jae
add
cld
cld
lcall
xchg
sbb
mov
add
mov
push
stc
mov
jbe
adc
cmp
std
leave
ficoms
push
mov
inc
js
jecxz
xchg
inc
sub
cmp
and
or
shld
data16
out
test
aad
pop
xchg
mov
jns
insb
adcl
mov
mov
and
sbb
cmpb
roll
mov
sbb
in
push
inc
aam
fs
xchg
test
lahf
loope
mov
mov
sub
adc
jns
sub
out
out
cmp
hlt
sbb
mov
fwait
out
xchg
push
mov
cmp
out
xor
add
lds
pusha
sbb
test
js
sub
xchg
test
pop
rcrl
jnp
out
add
imul
cmp
in
push
data16
addb
imul
std
or
mov
rorb
jg
hlt
out
mov
sarl
cld
jb
jno
test
mov
dec
mov
xchg
xor
in
mov
test
ss
lret
lret
pop
ljmp
jo
push
test
cmc
int
cmc
jns
imul
pushf
and
add
ret
pop
and
flds
jecxz
mov
call
icebp
mov
ljmp
ficomps
shlb
dec
test
hlt
fsubrl
ret
fxch
xchg
cmp
bound
and
mov
stos
mov
sub
out
loope
test
inc
je
fwait
adc
inc
stc
insl
sbb
jmp
cld
neg
cmpsb
sub
leave
xor
fdivrs
shrl
scas
je
xchg
xchg
stc
add
pushf
js
xchg
pop
mov
stos
outsb
pop
insl
adc
sub
inc
adc
inc
jns
jne
mov
fcom
cmpsl
sub
daa
sbb
jns
divl
sub
in
movsb
mov
and
or
je
jle
insl
stos
mov
es
outsb
push
xchg
add
or
out
lea
jae
int
jge,pn
daa
int
lea
xor
lret
outsl
ret
pop
pop
out
sub
nop
test
repnz
test
out
fcomps
adc
cmp
into
push
and
addr16
shlb
dec
movsl
test
mov
ss
int
jno
or
jne
xor
clc
stos
sbb
push
cmpb
lcall
dec
ja
cwtl
push
mov
out
ret
jae
dec
imul
or
test
xchg
cmp
jns
mov
push
xor
mov
in
jns
test
sbb
xor
out
push
decb
push
pop
jmp
frstor
fcmove
adc
add
fwait
jecxz
or
repnz
push
rorl
mov
mov
xchg
movsb
hlt
push
add
mov
and
mov
sub
pusha
ret
dec
or
xchg
mov
dec
fstp
inc
sub
ja
in
xchg
jmp
cmp
jp
fiaddl
and
icebp
push
mov
dec
pop
or
test
roll
lcall
cmc
mov
popf
xchg
insb
mov
and
pop
mov
pop
scas
or
xlat
mov
imul
stc
dec
aaa
mov
sbb
jle
icebp
sub
sahf
iret
dec
adc
pop
enter
cmp
out
xchg
mov
negl
jb
inc
xchg
test
or
cld
jnp
or
cltd
xchg
lock
mov
sti
sbb
dec
gs
jmp
inc
sbb
aas
xor
movsl
cli
mov
pop
cmpsb
adc
mov
in
dec
pop
repnz
in
shlb
pop
jb
inc
xlat
sbb
lds
loop
mov
or
mov
icebp
lcall
xchg
ret
frstor
mov
jnp
das
jns
and
jg
sbbl
or
loope
pop
outsl
jl
sub
or
dec
ljmp
mov
imul
push
movsl
pusha
movsl
movsl
mov
jne
aad
push
mov
sarb
inc
mov
movsb
push
inc
loop
push
into
cltd
out
mov
jo
cs
loope
ss
mov
mov
repz
jge
pop
or
sbb
dec
mov
sub
in
jno
cmp
fistpl
call
sub
dec
mov
int
mov
mov
adcl
stos
cltd
outsb
int
add
repz
xchg
scas
jmp
nop
jle
add
sti
scas
imul
add
cmpsb
ja
mov
movsl
fisttps
popf
mov
cs
dec
jbe
repz
subb
cmp
inc
shlb
and
mov
sbb
mov
jbe
push
push
mov
dec
cwtl
jno
hlt
fadds
jnp
shll
mov
sarl
enter
rolb
mulb
imul
sub
mov
cs
xchg
fwait
popf
rcrb
stc
lock
xchg
pop
out
clc
cmpsb
mov
je
adc
mov
hlt
fldcw
adc
ss
test
xor
sub
jg
dec
invd
sub
je
mov
in
lret
vpsrlq
mov
or
xchg
test
fbstp
imul
mov
xchg
xor
dec
sbb
xlat
ds
jnp
stos
aam
les
and
das
or
pop
pushl
test
jg
sbb
jecxz
sbb
mov
cmp
mov
cld
cltd
mov
testb
stos
repnz
jmp
sub
aas
mov
cmp
adc
jno
push
or
or
pop
xchg
mov
fst
inc
mov
or
lds
out
subb
cmpsb
pusha
or
stos
lds
jl
enter
inc
jl
mov
lcall
stos
clc
cld
outsl
jno
push
dec
inc
int3
lock
mov
cmp
sub
mov
sub
js
lea
ja
cmp
mov
fistps
pusha
popa
xchg
xor
shll
dec
pop
mov
sbb
sub
call
push
cmp
scas
je
jae
xchg
dec
fsubp
dec
loop
pop
mov
xlat
and
jmp
gs
xchg
push
lock
pop
or
aad
jb
mov
pop
mov
dec
adc
stc
test
jo
sub
out
jb
sbb
scas
cmp
out
aad
or
movsb
lock
mov
jne
cmp
mov
mov
inc
ret
enter
aam
adc
xchg
jae
push
adc
adc
pop
mov
inc
popa
sarb
xlat
sub
mov
or
jg
jl
test
ja
bound
xlat
add
sub
and
cmpsb
in
inc
sbb
jo
adc
mov
xchg
jb
loop
jp
xchg
js
pop
and
jns
mov
ror
movsb
mov
insl
lds
mov
ret
movb
xor
xor
cmp
pop
fdivrp
popf
rcl
and
mov
ds
ss
lea
das
mov
movsl
xchg
mov
mov
cltd
sub
adc
cld
jno
mov
xchg
add
add
sahf
sub
xor
and
mov
push
rcr
into
das
popf
bound
outsb
mov
shlb
sbb
or
mov
das
loopne
fbld
imul
xchg
sbb
inc
xchg
mov
inc
adc
dec
sub
jmp
xor
pop
das
push
jns
addl
mov
xchg
xor
pop
fnstcw
cwtl
add
cwtl
dec
pop
pop
lods
or
pop
fxch
js
cs
jnp
lods
lret
cmpsb
ficoml
cmp
es
mov
jb
cmp
orb
sub
sbb
cs
cwtl
sub
dec
rclb
dec
js
test
lret
les
dec
imul
mov
addl
lea
ror
iret
cltd
test
das
or
and
into
sub
in
decl
jne
xchg
std
dec
jmp
mov
rcll
mov
and
fdivr
push
mov
mov
pop
pop
hlt
cmp
inc
lods
xchg
pushf
loopne
ret
sbb
int
push
out
aad
arpl
sub
js
xor
andl
and
clc
jb
adc
jnp
jg
imul
fdivrl
leave
sbb
fwait
sti
mov
outsl
push
clc
lea
jecxz
orl
dec
mov
dec
xor
decl
rcrb
jns
nop
dec
inc
xor
add
pop
and
cmp
fucom
and
je
mov
add
daa
pop
sbb
or
les
aas
push
pop
jl
or
mov
aaa
cwtl
add
mov
jno
cmp
stos
test
jno
stos
into
cmpsb
pop
sub
mov
xor
lcall
sub
sbb
arpl
sarb
in
jbe
push
and
mov
mov
imul
lea
xor
sahf
jo
inc
repz
sub
clc
aaa
out
rolb
sbb
mov
sub
xchg
mov
xlat
inc
std
out
fadd
out
js
xchg
cmp
pop
add
cmp
gs
mov
jmp
cmp
ss
mov
aas
inc
mov
push
jbe
xor
imul
pop
movsb
popa
jp
int3
scas
pusha
sub
and
cmp
and
stos
pop
pop
std
out
adc
mov
icebp
cmpsb
add
mov
jmp
in
bswap
jge
jmp
sbb
shlb
and
push
jb
inc
popf
inc
cmpsb
pop
sbb
jmp
cltd
ljmp
int
imul
addr16
cmp
mov
add
and
pop
add
pushf
mov
sbb
xor
into
xchg
dec
loope
xchg
and
jnp
sub
iret
cs
adc
xor
pop
add
fstps
ret
sbb
outsb
pop
and
call
sbb
push
inc
add
in
mov
jne
mov
fwait
loop
or
inc
mov
test
xchg
aam
popf
jle
into
push
icebp
testl
fdivl
sti
aam
jmp
cs
jge
xchg
je
lcall
sbb
sti
shl
cld
or
sbb
ret
gs
scas
pop
or
mov
sub
sbb
inc
insb
cmpsb
jnp
or
sbb
xor
lret
mov
movsb
push
bound
jl
fsts
shl
cmp
add
xor
mov
test
test
dec
push
mov
mov
sti
sbb
mov
testb
mov
bnd
fnsave
pushf
and
scas
mov
sub
xchg
int3
xchg
rcrb
push
and
sbb
sbb
pop
in
test
xchg
inc
ljmp
jge
ljmp
push
popa
mov
jmp
dec
popf
addr16
lock
notb
dec
sub
inc
ficoms
orl
cmp
mov
lods
stos
sti
das
scas
jmp
clc
sub
orl
jb
out
jae
notb
mov
scas
xchg
lret
stc
cltd
dec
sbb
repnz
pop
je
scas
sbb
les
and
xchg
jo
mov
xchg
and
je
rclb
sub
inc
and
add
mov
mov
in
add
leavew
or
sahf
mov
jo
sti
or
movsb
adc
mov
xor
addl
xorl
insb
dec
jecxz
lods
xchg
jle
adc
adc
in
sbb
sbb
sub
xchg
jae
sub
dec
jae
sarl
lcall
ljmp
repz
mov
int
in
sti
psubq
pop
std
sbb
pand
insb
into
sub
gs
xorb
pushf
jle
ret
inc
xor
aad
pop
or
imul
mov
dec
dec
pop
push
xor
adc
mov
iret
pop
push
arpl
adc
or
out
imul
add
mov
mov
das
fcmovnu
stos
inc
xchg
add
pop
or
adcb
sahf
repnz
outsb
or
out
mov
xor
push
cmpsb
cmp
adc
cltd
shr
push
iret
clc
lahf
roll
lahf
stos
insl
loope
popf
sub
inc
rorl
icebp
out
shr
in
or
xchg
cli
vmovsldup
mov
insb
adc
leave
nop
roll
push
cmp
cwtl
mov
sub
push
jne
hlt
cmc
pop
ss
adc
fsubrs
mov
in
imul
mov
dec
push
aam
xchg
pop
mov
jg
dec
or
dec
jae
lock
fsubrl
out
mov
imul
js
outsl
shll
pop
push
pop
enter
outsb
inc
arpl
iret
and
pop
xor
mov
push
into
in
outsb
fisttps
leave
nop
in
dec
inc
sub
lahf
nop
es
mov
cld
xchg
clc
pop
inc
rcrb
ret
mov
scas
in
arpl
xchg
mov
lret
adc
test
xchg
fs
imul
rcl
aad
jmp
jl
cmc
sub
emms
fistpl
rorl
outsb
xchg
sub
outsb
sub
rclb
xchg
into
or
jbe
cmp
dec
adc
and
stc
js
fisubrl
in
cs
insb
push
cs
adc
inc
lods
cmp
cmpb
mov
movsl
sub
dec
add
sarb
mov
adc
and
mov
xor
test
mov
cmp
and
xor
loopne
test
insl
mov
sbb
insl
push
out
mov
xchg
dec
cwtl
add
jo
out
subb
leave
jp
loope
jl
add
mov
fsubrs
and
cld
shrl
or
add
arpl
cmp
sub
dec
sub
inc
addr16
pop
sub
mov
imul
imul
jbe
sbb
test
or
push
inc
sub
sbbb
outsb
ss
and
cmp
enter
aad
jo
mov
nop
push
loopne
add
adc
lret
cs
sub
pushf
pop
call
lcall
adc
push
cld
pop
xchg
mov
fisttps
je
or
loope
call
addr16
mov
sarl
add
pop
xchg
pop
insl
cmpsb
jle
add
dec
xor
adc
loope
cmp
inc
pop
ret
movsb
inc
lea
xor
mov
inc
inc
test
fidivrl
fimull
ds
outsb
cld
push
jns
fmuls
mov
mov
lret
gs
loop
icebp
sbb
cs
into
inc
sahf
rcll
arpl
push
pop
sbb
xor
rcr
jge,pt
push
jno
push
add
sbb
push
cmp
arpl
stc
icebp
xchg
sub
aaa
jg
out
and
test
mov
dec
mov
cmpsl
out
push
adc
loopne
roll
push
sub
or
pop
inc
inc
pop
and
ret
push
je
push
mov
mov
jb
lods
ja
hlt
loopne
lds
rol
inc
dec
pop
jecxz
inc
or
pop
rcrb
adc
sbb
lahf
sbb
mov
shll
sti
xchg
jg
sub
cld
mov
jl
cmp
adc
test
jno
and
iret
ret
out
adc
and
or
ja
xor
mov
out
cmc
in
mov
jb
test
aaa
int
jno
jb
mov
jle
push
outsb
sub
fsubs
push
dec
shl
push
inc
out
push
adc
aam
mov
cmpsl
add
mov
jo
popa
test
and
imul
sti
and
push
dec
outsl
or
outsl
jno
and
xor
jle
inc
pop
adc
mov
push
dec
jmp
and
shrl
xchg
mov
mov
push
push
lods
mov
int3
cmc
lret
stos
jmp
dec
stc
or
fstps
pop
xchg
cmp
icebp
mov
test
fwait
insl
stc
or
mov
imul
sbb
add
mov
or
in
test
out
sbb
xchg
shrb
aaa
mov
jmp
or
inc
insb
xchg
das
cs
lea
loopne
mov
repnz
push
adc
pusha
filds
pop
xchg
xlat
testl
fnsave
aas
out
dec
mov
jbe,pn
mov
sahf
xchg
mov
xchg
inc
xor
sbb
adc
fcoms
jl
add
nop
bound
enter
mov
lahf
add
shll
xchg
push
inc
ja
loop
push
push
push
sbb
repz
nop
std
lret
lahf
xchg
pop
dec
insl
cli
icebp
or
sahf
mov
out
xchg
lods
mov
and
subl
mov
mov
pop
pop
out
sarb
dec
cs
and
loopne
mov
mov
fstl
test
clc
aad
psrld
adc
push
sub
mov
fs
stos
mov
mov
daa
cmpsb
mov
dec
xor
adc
outsl
shlb
adc
int
fistps
cmp
xor
add
fcomps
inc
call
sarb
enter
add
add
insl
push
xor
add
int3
sub
in
pop
shr
jp
std
pusha
icebp
mov
movsb
mov
pusha
inc
out
xchg
das
or
fbstp
imulb
outsl
imul
jmp
cltd
movsb
pop
shl
pop
mov
movsb
cmc
inc
repnz
cmp
xchg
imulb
mov
jne
mov
out
lods
adc
into
mov
lcall
cmpsl
dec
fsubl
jns
in
dec
xchg
jno
xchg
cmpsb
cmpsl
fucomip
mov
leave
int
in
ficoms
cmp
js
je
aad
push
mov
mov
sbb
aam
mov
add
pop
xchg
dec
adc
ljmp
js
scas
mov
aaa
sbb
dec
dec
test
loop
mov
inc
subb
movsl
add
pop
pop
or
push
or
inc
inc
xchg
movsb
pop
enter
inc
int
add
or
lds
or
pop
stos
cwtl
mov
jge
in
mov
xor
rclb
jns
sti
add
stos
jnp
xchg
mov
pop
sub
nop
xor
jle
rcr
inc
dec
outsb
sbb
push
pop
xchg
adcb
mov
sbb
leave
test
fdivs
inc
shll
outsl
mov
push
pusha
inc
adc
scas
dec
iret
mov
ljmp
sub
stos
pop
mov
movsb
pop
hlt
stos
mov
and
insb
and
sbb
and
scas
into
push
out
cmpl
stc
test
jecxz
or
pop
jl
movsl
repnz
jo
pop
aam
pop
in
cmp
ja
cmp
mov
cmp
lea
xchg
cmp
les
mov
rol
popa
fdivrs
daa
push
lods
stos
out
cwtl
mov
pop
scas
jne
aam
scas
decb
into
adc
jne
imul
jge
lcall
cmp
jl
xor
add
jne
repz
inc
jb
lret
scas
imul
testl
popa
adc
xchg
push
jnp
adc
mov
pop
push
outsb
pop
mov
push
mov
sarb
stos
cmp
mov
xlat
mov
cs
push
push
leave
js
xor
cltd
jecxz
ds
and
and
pop
xor
sahf
adc
add
movsb
sub
mov
mov
movl
shrb
lahf
shl
fwait
rcl
xorb
adc
lret
inc
xor
jg
xor
rcr
into
adc
mov
ret
cmp
dec
xchg
sahf
clc
inc
shr
lahf
sub
ss
mov
mov
or
mov
clc
cli
ss
mov
xchg
sub
jmp
aam
sti
pop
mov
pop
inc
dec
xchg
mov
cmp
push
ret
xor
cli
jb
aam
and
and
or
and
inc
mov
jb
shll
jmp
sbb
or
mov
mov
fidivrl
adc
adc
sub
jbe
pop
out
sbb
dec
lret
mov
sahf
sbb
and
jmp
push
mov
dec
fsubs
out
jle
and
pusha
into
lock
mov
out
xor
inc
in
sarb
pop
pushf
mov
add
shrl
add
pop
push
xchg
or
cmpsl
in
or
push
lret
test
je
and
and
ja
adc
test
jecxz
dec
stos
jne
push
inc
add
mov
out
into
xchg
mov
and
jmp
dec
stos
push
cmpb
xchg
paddusb
mov
aam
repz
adc
push
and
xor
jmp
inc
scas
fists
enter
cmp
cmp
mov
cmp
js
xorb
and
adc
mov
fidivrl
mov
iret
xlat
movsl
jmp
xchg
and
and
and
nop
sub
pop
sub
jl
pause
cmpsb
incb
adc
lret
leave
xchg
shrl
dec
fnsave
out
lretw
cmp
mov
notb
sbb
out
scas
je
xor
inc
sub
push
sub
pop
pop
add
out
gs
fstpt
ds
cmpsb
dec
pop
popa
lcall
pop
int3
gs
cmp
mov
mov
je
test
mov
push
ret
xor
xchg
pusha
in
inc
jmp
aaa
pushf
dec
aad
ljmp
pusha
jae
and
movsb
fmul
adc
inc
add
jbe
outsb
jg
xchg
pop
popa
scas
rcll
and
test
pop
or
sub
mov
repz
sub
pop
pop
add
cmp
cmpsl
add
out
xchg
in
push
ljmp
mov
ja
iret
popf
test
lds
adc
jle
insl
sbb
sbb
mov
das
popa
push
add
mov
loop
aam
and
dec
arpl
push
jbe
ljmp
test
add
sbb
push
orb
push
mulb
and
jge
pop
push
xchg
inc
xchg
inc
into
cli
xor
push
daa
xchg
sbb
xchg
sbb
pop
lcall
rcrb
jl
ljmp
jecxz
fidivrl
outsl
and
test
outsb
push
add
arpl
mov
cld
mov
int3
pop
inc
add
rcl
sub
adc
stc
fcompl
out
jl
test
jmp
mov
push
mov
ds
sub
pusha
pop
pop
das
loope
fbstp
xlat
data16
out
lcall
pushw
xchg
fs
push
cmc
addl
fldl
adc
push
mov
pop
xchg
in
or
add
pushf
hlt
adc
outsl
aad
adc
push
push
leave
stos
push
imul
movsl
dec
lret
pop
mov
cs
mov
cmp
inc
in
jmp
popa
mov
mov
sub
popf
aam
test
push
or
or
or
pop
jmp
lcall
push
sbb
cltd
or
in
lods
add
aad
loopne
in
dec
shrb
pop
stos
inc
sbb
mov
pop
pop
movsb
iret
lahf
dec
cmp
adc
sbb
jg
andb
or
scas
ret
mov
inc
jne
pusha
push
stos
cli
inc
inc
sbb
hlt
fstps
cmp
js
scas
outsl
cli
xor
pushf
cmpb
mov
arpl
cwtl
mov
dec
test
push
into
in
mov
iret
fisubrl
push
stos
mov
push
jl
sbb
popf
push
imul
loopne
ss
mov
fdiv
in
test
xchg
loop
es
aad
jp
pop
std
mov
out
lahf
mov
fisubl
daa
pop
sub
test
inc
pop
fadds
jae
mov
inc
mov
imul
adc
aam
imull
cmp
dec
add
fmuls
push
sti
out
negb
mov
add
sti
cmpsl
in
mov
sahf
sub
cli
inc
lea
adc
shll
imul
lea
imul
sub
scas
push
push
mov
add
dec
fidivrl
mov
mov
arpl
mov
pushf
rclb
ss
fucomi
cltd
push
mov
leave
mov
in
inc
mov
mov
shll
loop
add
lahf
cmp
ficompl
jmp
out
sbb
pop
test
sbb
cld
incl
std
sarl
cmp
mov
dec
push
xor
stos
inc
div
push
addr16
lds
cmovae
push
jl
ljmp
add
pop
lcall
arpl
cmp
enter
stc
aad
lret
push
mov
inc
cwtl
or
loop
jecxz
or
jbe
shll
cld
sub
mov
shrd
leave
or
mov
push
inc
mov
sahf
or
cld
add
ror
push
fldl
movsl
loopne
bound
popf
cmp
loope
xlat
inc
fistps
mov
xor
mov
pusha
push
lea
sbb
in
and
fs
pop
ss
pusha
scas
mov
cli
add
xchg
jge
vpunpckldq
mov
inc
mov
lods
aaa
es
repz
pusha
gs
push
stos
mov
js
xor
or
mov
cltd
dec
cmc
cmpb
mov
cs
add
mov
jl
cwtl
repnz
iret
inc
lock
sub
xchg
aam
inc
push
mov
push
aas
cmp
push
inc
push
loopne
data16
pushf
daa
addr16
fnsave
ret
insb
addr16
subb
add
inc
lods
cltd
cmc
inc
xchg
rorl
insl
jge
or
xor
push
xchg
pop
xchg
ds
test
mov
das
fsubp
test
iret
fs
gs
mov
pop
jnp
scas
mov
dec
hlt
divb
mov
ret
stos
push
xor
in
test
lret
push
cmp
or
int3
ljmp
mov
inc
xchg
cli
mov
aad
add
adc
and
fdivrs
dec
dec
shl
dec
stos
and
add
pop
push
or
fwait
jp
sub
sbb
dec
lods
pop
xchg
push
fidivrs
dec
xchg
jne
sarb
or
popl
sti
aam
gs
lock
sbb
mov
scas
pop
mov
imul
mov
mov
dec
dec
ja
sub
add
outsb
nop
and
add
cmpsl
insl
add
ds
push
lcall
shll
enter
bnd
xor
push
xor
push
sti
and
push
lods
in
push
sbb
inc
ret
inc
xchg
jl
enter
jno
push
lret
push
cli
outsl
imul
mov
jo
enter
frstor
mov
daa
inc
add
xchg
push
pop
sub
insl
loop
adc
fcmovbe
lods
imul
dec
data16
js
mov
bound
sub
scas
popa
test
adc
addr16
pop
iret
jg
fmull
std
or
aas
xchg
stos
dec
mov
cli
xchg
push
pop
out
mov
jnp
mov
push
out
jp
lods
pop
lret
popf
imul
in
fdivl
ficoml
cwtl
mov
sub
mov
int
add
insl
push
sqrtps
sbb
popa
dec
mov
or
stos
enter
mov
stc
sub
inc
mov
or
xchg
mov
cltd
pop
ret
movsb
xchg
test
shlb
sbb
sbb
xchg
pop
dec
mov
aaa
xlat
shll
mov
loopne
jae
jb
sub
test
out
add
lods
mov
ja
ret
cmp
or
push
dec
clc
fstpl
imul
pop
push
into
cmp
stos
daa
mov
int
loopne
stc
cmpb
jno
or
push
jbe
pop
test
int
mov
or
notl
out
mov
inc
jmp
inc
fiaddl
jl
nop
adc
divl
inc
pop
inc
test
mov
jae
adcb
iret
test
add
test
js
js
sbb
std
or
mov
add
addr16
popa
fwait
loope
or
fnstenv
shrb
lret
xchg
push
mov
cmp
xor
movsl
shlb
js
jns
xchg
and
popf
js
in
mov
fsts
pcmpgtd
push
ret
xor
lea
cmpsl
test
dec
fbstp
outsl
fldcw
addr16
sub
mov
aas
mov
xchg
roll
repz
fcompl
out
xchg
pusha
mov
cmp
pop
pop
movsl
add
push
nop
lret
cmp
nop
leave
add
mov
jp
push
push
or
subl
inc
lea
mov
cwtl
mov
daa
repz
les
imul
add
fadd
lret
filds
stos
stos
pop
xchg
out
sub
push
mov
push
cmpl
daa
fisubrs
push
cli
inc
cmpl
lret
add
in
call
les
jg
jnp
rolb
jb
push
jnp
inc
sbb
lret
data16
xchg
in
xchg
repz
fdivrs
aam
jle
ljmp
out
lret
dec
cmpl
loop
pop
test
fistpll
jge
inc
adc
bound
pushf
fs
out
adc
rcrb
clc
xchg
mov
mov
pop
outsb
movsb
sbb
fsubrl
aad
imul
jmp
add
xchg
cli
jg
jne
cmc
push
jge
gs
ss
mov
fsubl
test
sahf
jp
fdivrl
repz
gs
inc
mov
stc
sub
jne
add
xor
mov
mov
mov
movsl
push
pop
push
jp
es
inc
in
data16
pop
repz
daa
lock
negb
daa
and
mov
dec
push
and
adc
jo
lods
lds
cwtl
ret
mov
out
jmp
scas
daa
dec
andl
pop
mov
inc
adc
mov
ja
shrl
jle
js
stos
ret
sub
lea
daa
jmp
adc
and
repz
xor
mov
test
mov
mov
push
sub
or
int3
jge
addb
roll
int
dec
rcrl
sub
pop
fstpl
adcb
scas
inc
mov
cli
pop
cli
lock
loope
dec
cmc
mov
xor
cmp
xorl
out
pop
sbb
aam
sti
add
std
ss
hlt
push
mov
xor
call
scas
arpl
fwait
inc
xchg
cmpsb
std
cmp
lods
pop
mov
pop
pop
stos
mov
lods
mov
flds
dec
dec
jge
adc
jo
push
push
out
clc
fcmovnu
adc
in
cltd
data16
aaa
clc
mov
jmp
imul
es
pop
stos
jg
repnz
loopne
sar
jne
enter
int3
call
mov
bound
lahf
cmpsb
dec
push
fstpt
cmp
sub
outsb
es
mov
stos
leave
jbe
cs
push
mov
shl
mov
push
sar
dec
in
out
xchg
in
stc
mov
cmp
xchg
fwait
cmp
mov
adc
movsb
std
push
xor
out
cmp
mov
loopne
enter
dec
jge
jae
movsl
std
dec
loope
add
cmp
movsb
pop
push
imull
test
or
ds
push
inc
dec
xchg
ret
mov
mov
ljmp
addb
lcall
shrl
arpl
popf
fidivrs
je
push
jmp
or
lods
cmp
xor
jp
mov
jp
push
ja
rclb
pop
insl
std
sbb
into
or
mov
push
shll
xor
cmc
rol
shlb
cmp
mov
pop
and
mov
dec
and
loop
fstl
cld
inc
mov
imul
push
pop
xchg
stos
add
pop
jae
cmp
xor
xchg
add
daa
sub
out
push
xchg
lret
jns
xlat
pop
sub
loope
das
adc
cmp
mov
popa
jp
les
mov
aas
sbb
shlb
lret
add
dec
adc
lods
mov
jno
ret
adc
jecxz
es
mov
mov
in
arpl
mov
clc
or
mov
gs
out
aaa
cmpsb
mov
and
ja,pn
std
or
mov
dec
imul
das
fsubl
xchg
stc
jmp
dec
dec
mov
out
ud0
dec
jp
pushf
loope
in
clc
push
les
lret
jnp
xchg
sbb
fisttps
dec
inc
mov
pop
cmpsl
pop
mov
mov
and
mov
movsb
xor
sub
ja
cmpsb
pop
jno
mov
or
aas
add
inc
sbb
push
jl
in
adc
sbb
add
pcmpeqb
dec
sub
jl
sub
cs
cwtl
inc
add
ret
push
push
cmp
or
add
dec
les
adc
in
xlat
add
push
pop
ss
daa
jnp
adc
or
outsb
aas
mov
sub
and
movsb
sub
test
inc
test
xor
push
addb
push
xchg
ficoms
dec
mov
gs
out
lret
jae
test
pop
dec
faddp
xchg
xchg
clc
and
push
gs
xchg
test
inc
jb
repz
push
lds
in
and
fs
outsl
shrb
adc
mov
inc
inc
dec
pop
jne
mov
in
addr16
repnz
adc
data16
jbe
aas
xlat
daa
add
pop
adc
lea
cltd
sbb
pop
pop
rcll
loop
push
pushf
mov
push
mov
in
xor
pop
cmpsl
push
mov
mov
ds
stos
push
add
jnp
test
add
loope
push
adc
adc
addr16
adc
adc
cmp
xchg
mov
roll
mov
mov
sbbb
jmp
fwait
pop
shlb
repz
pop
sub
cltd
loopne
jecxz
push
push
add
ret
lcall
push
sub
mov
push
cmp
mov
push
outsb
hlt
xchg
pop
pop
sbb
mov
shlb
sub
xor
loopne
add
mov
dec
or
xor
push
adc
fmull
cmp
lss
cmp
adc
cltd
aad
mov
adc
pop
int
xchg
jo
ret
dec
xor
cmp
cwtl
mov
mov
jnp
cld
mov
mov
inc
out
push
pop
push
jb
mov
lock
xor
dec
pop
mov
and
pop
fstpl
movsl
xchg
popa
inc
cmpsb
adc
mov
leave
jo
ret
or
pushf
jle
mov
or
push
les
mov
fadds
and
rcrb
mov
rcll
test
and
enter
add
or
les
lea
sub
cwtl
pop
dec
adc
xchg
mov
jno
pushf
test
jbe
and
clc
stos
or
jbe
dec
aaa
push
gs
inc
negb
scas
repz
das
les
and
xchg
xchg
jmp
mov
cwtl
mov
pushf
insb
xchg
adc
push
sbb
popf
stos
xor
jne
fistpl
clc
pushf
sti
loopne
and
sbb
cmp
xor
rorl
xor
mov
sub
cmc
scas
clc
add
add
insb
inc
shl
mov
cli
inc
cmp
lea
inc
hlt
jle
push
adc
sar
inc
shl
sbb
cmp
adc
mov
jl
xchg
and
mov
in
lds
clc
lods
ljmp
imul
and
add
out
movlps
sub
jb
jmp
lods
adc
xchg
sbb
jecxz
inc
aam
push
inc
or
je
leave
cwtl
std
or
add
in
in
jl
outsl
add
push
adc
jg
push
lret
push
jl
loop
mov
inc
and
xchg
pop
mov
mov
sub
stos
outsb
dec
test
cwtl
outsb
jp
popf
ss
repz
jl
cli
fdivrp
mov
sub
leave
cltd
out
mov
and
pop
mov
insb
les
jp
repnz
pusha
xchg
add
pop
sbb
inc
pop
shll
pop
add
dec
cmpsb
dec
fs
imul
sbb
test
push
out
bound
add
test
adc
arpl
xchg
fsubl
insl
mov
sti
test
cmpsl
mov
push
loop
aaa
cltd
mov
xchg
sahf
out
mov
rclb
pop
jg
pushf
jo
pop
aas
push
stos
shll
push
xor
call
cwtl
ljmp
dec
cmc
sti
sub
mov
inc
stos
sbb
and
test
mov
xchg
aas
movsl
test
mov
mov
pusha
sub
jnp
stos
movsb
sbb
xlat
popf
mov
mov
pop
dec
inc
mov
icebp
idivb
inc
aad
loopne
jne
jle
pop
in
ss
cmc
aad
mov
jns
jle
cmpsl
add
ljmp
lret
in
inc
cli
or
sub
fwait
pop
fcmovbe
imull
add
fidivrl
aad
sbb
mov
ds
mov
aaa
xchg
and
inc
aaa
push
mov
add
repnz
dec
mov
cld
inc
or
mov
test
pop
inc
cmpsl
js
jge
fs
stos
push
or
jecxz
inc
inc
push
les
int3
rcrb
aad
shlb
jmp
or
sbbb
mov
loop
nop
andl
loop
das
and
push
sbb
jb
adc
push
div
scas
fcomi
add
add
xchg
xor
xor
je
xchg
cmc
call
or
scas
dec
mov
and
clc
jno
mov
std
outsb
and
lods
pop
cmc
ljmp
fiadds
mov
sbb
ret
ss
and
cwtl
inc
mov
jo
gs
sub
mov
pop
dec
add
xchg
test
mov
not
es
paddb
shrb
jge
dec
lods
js
test
aam
xlat
stos
insl
ficoms
push
test
jae
rorl
sbb
leave
mov
mov
sbb
push
lahf
pop
push
push
addl
add
xchg
popf
fidivl
dec
cmp
leave
inc
or
lods
xchg
enter
xor
push
mov
and
jns
dec
push
pop
in
jmp
pop
cmpsb
jb
data16
mov
ja
imul
add
inc
cld
dec
inc
lods
arpl
inc
pop
fbld
xlat
xor
sub
adc
cmpsl
pop
cmp
mov
mov
scas
into
push
popf
mov
popf
xor
mov
lods
push
nop
mov
and
out
and
scas
xor
mov
sarb
mov
gs
scas
cmp
mov
sub
sub
push
sub
sub
fcompl
and
xor
lret
test
xchg
inc
out
jmp
pop
jae
push
jge
mov
sti
inc
sti
add
xchg
jo
std
mov
imulb
ror
mov
shll
dec
mov
insb
sbb
mov
inc
jno
imul
inc
lret
int3
sbb
movsl
cmpsb
or
mov
fsqrt
pusha
jl
jg
in
mov
sub
aas
sbb
xchg
push
dec
add
cmpb
cwtl
nop
loope
decl
sub
cmpsl
in
and
pop
jle
mov
mov
xchg
js
out
rcrb
mov
adc
or
stc
jl
bound
push
push
mov
ljmp
jae
js
jmp
aad
inc
imul
lock
out
lea
adcl
pop
ds
in
and
popa
push
and
pop
mov
jb
in
xchg
jg
ss
rcrl
mov
ja
dec
lods
mull
jmp
iret
mov
and
jo
or
out
push
sarb
pop
cmp
stc
xchg
cmpsl
mov
cmp
mov
push
movsb
loopne
add
mov
xchg
xor
loope
or
lea
jae
das
js
lock
cwtl
outsb
fisubrs
push
and
outsb
pop
sahf
inc
pop
xlat
add
mov
push
in
xchg
mov
movsb
daa
cli
or
rcrb
insb
rcll
or
clc
test
cltd
dec
mov
push
pop
xchg
outsb
out
dec
and
outsb
mov
insl
testb
cmc
dec
dec
mov
daa
sub
addl
push
and
negl
mov
movsb
xor
add
mov
repnz
movsl
aaa
push
dec
mov
inc
iret
mov
adc
int3
shlb
mov
fwait
dec
fcmovnbe
lcall
xor
cmpsl
scas
pop
jb
cmpsl
aad
mov
add
mov
dec
jp
push
lods
add
pop
cmpb
sub
pop
mov
fdiv
loope
je
sub
lds
xchg
sbb
cmp
addr16
cmp
pop
xor
xchg
sub
add
clc
scas
cmp
cltd
ds
dec
scas
pop
mov
cmp
das
sbb
push
add
cmp
enter
stc
cltd
enter
xchg
lods
out
sub
xchg
push
fisubrl
test
xor
stc
add
mov
addr16
in
sbb
cmp
ret
sbb
xor
jne
data16
mov
xchg
rcrb
mov
sub
rep
or
cmp
adc
int
sbb
lret
loope
inc
ret
jecxz
pop
hlt
vpunpckhqdq
mov
adc
iret
and
or
cli
push
jecxz
outsb
out
out
arpl
xlat
dec
and
cmp
mov
sbb
cs
pop
push
mov
insl
mov
sbb
insb
jbe
jle
cmp
and
inc
sub
or
xor
pop
cmp
mov
xchg
in
xchg
sub
sbb
rorb
push
push
xchg
xchg
lock
sbb
or
mov
xor
imul
jo
ds
pusha
sbb
mov
ds
dec
popf
xor
lods
jp
mov
jl
bound
fwait
adc
adc
xor
mov
je
gs
and
les
mov
je
mov
mov
mov
fisttpll
in
ja
mov
leave
out
pop
out
jg
jge
out
cmp
sub
jne
rcrl
push
repz
adc
xchg
stos
pop
fmull
fcomps
stos
and
sahf
pusha
stos
repnz
cmpsb
push
in
cmp
les
lea
pop
pop
je
push
cmp
aaa
jle
in
push
add
or
int
fcmovbe
out
fs
in
xchg
mov
inc
sti
push
pop
sub
addr16
sbb
dec
scas
aaa
dec
mov
xor
pop
jnp
xor
mov
lcall
mov
xchg
icebp
inc
pop
push
call
rcll
ja
lock
pop
outsb
stos
pushf
in
lcall
add
jbe
mov
mov
test
xor
and
mov
push
xchg
out
mov
adc
adc
out
jne
into
dec
cmp
fcmovu
in
dec
leave
ljmp
push
idiv
in
adc
inc
sti
leave
mov
xor
adc
sub
pop
adc
stos
jp
xor
or
push
iret
or
dec
pop
pop
sbb
fwait
jo
dec
dec
test
gs
mov
inc
outsb
push
lods
inc
push
shrl
lods
mov
xlat
fidivl
cwtl
insb
xchg
stos
push
adc
xlat
pop
mov
push
cld
push
aam
and
xor
shl
push
sbb
fcomi
push
xchg
mov
cmp
jecxz
pop
stos
sbb
push
inc
jo
dec
cld
out
imul
aam
mov
push
xor
filds
aad
dec
sub
aam
cli
cmp
cmp
and
stc
add
insl
and
xchg
jnp
sbb
jae
inc
mov
xchg
in
mov
pop
jmp
sub
pushf
xchg
jmp
cs
push
jno
xor
fs
push
aaa
adc
rclb
je
cmc
imul
sti
cmpsb
cmpsl
push
fcmovb
or
pop
out
test
push
mov
xchg
push
pushf
sbb
sbb
idiv
pop
pop
jg
outsb
inc
icebp
inc
mov
or
xchg
in
inc
aas
fnstenv
adc
push
dec
aaa
outsb
xor
sbb
or
mov
xchg
sub
adc
dec
movsl
push
aad
in
xor
or
shlb
mov
xor
call
daa
mov
jns
insl
sbb
orl
call
push
ret
cmp
out
or
jmp
fwait
mov
incb
lock
cltd
mov
cmpsl
or
les
hlt
or
pop
pop
aas
adc
les
push
jae
in
shll
push
loopne
rclb
cmpsl
xchg
aas
aaa
push
leave
fcompl
cmp
jle
test
lds
loopne
jg
loope
jge
fmul
pop
stos
subb
push
subl
mov
stc
jmp
jp
pop
out
inc
lods
fldpi
out
js
or
adc
ja
push
pushf
stc
pop
xchg
cmpsl
outsb
movsl
aam
stc
jle
ret
or
fstl
jg
xor
sarb
outsb
dec
cwtl
cmp
and
inc
cmp
xor
repnz
pop
pop
sarl
out
sbb
dec
fs
mov
sub
stc
add
mov
mov
gs
inc
add
xchg
cmp
fsubrp
hlt
cmp
pcmpeqb
mov
jge
fdiv
sub
add
scas
sbb
pusha
loopne
fsubrl
jbe
pop
insl
mov
imul
lret
dec
sbb
int3
sub
in
sbb
inc
and
and
cmp
cmp
arpl
pusha
cmp
mov
jbe
daa
test
ljmp
sub
je
adc
js
jae
mov
aam
pop
dec
dec
repnz
shlb
mov
frstor
sbb
ja
pop
xchg
pop
ja
cmp
ret
cmp
nop
xchg
fs
push
not
je
pop
hlt
jmp
sti
pop
cmpsl
cs
pusha
stc
rcll
sub
bound
hlt
das
pop
adc
cmp
je
xlat
cmp
jno
cwtl
and
pop
imulb
xor
pop
lock
bound
cld
leave
xchg
jecxz
cmp
push
xchg
out
xor
rclb
test
imulb
sub
push
xchg
or
nop
cltd
ret
sbb
add
int3
bound
add
fdiv
pop
rol
dec
push
or
cvtps2pd
les
cmp
scas
and
inc
xchg
call
dec
stos
push
pop
adc
cmp
jae
ljmp
sbb
ja
lahf
and
test
or
jecxz
adc
jns
call
push
cmc
addr16
stos
push
scas
mov
leave
in
fcomip
int3
add
ss
test
pop
aaa
xorl
adc
and
sbb
mov
xchg
movsl
inc
mov
imul
push
mov
jmp
mov
sbbl
aas
jbe
test
mov
jo
enter
daa
xor
pop
cmp
dec
xchg
xor
fs
add
inc
rorl
in
mov
mov
push
test
sub
lret
rorb
inc
and
cmp
ficoms
adc
mov
or
pop
pop
in
scas
leave
jle
cmp
jnp
sbb
sub
mov
cmp
rcrl
dec
in
dec
mov
mov
sbbb
or
dec
iret
insb
rorb
insl
adc
adc
mov
jno
cmp
xchg
mov
adc
test
mov
repnz
xchg
xchg
or
add
inc
sbbl
mov
mov
lcall
adc
cltd
xchg
jbe
lret
lret
ret
in
adc
bnd
clc
or
mov
jno
push
mov
inc
mov
jp
add
or
sar
call
add
in
adc
mov
in
xor
xor
jl
jne
fsubrl
mov
lods
loopne
not
filds
adc
jmp
xor
fbstp
adc
test
js
arpl
outsb
loop
mov
mov
sbb
lock
jo
imul
and
roll
add
xor
inc
mov
dec
ds
loopne
inc
xor
jl
lahf
sub
aas
test
test
cli
in
outsb
lock
aaa
pop
cltd
ret
ret
dec
mov
out
xor
mov
out
test
inc
push
push
out
repnz
lret
xor
cmp
int3
sbb
popw
iret
mov
stc
popa
insl
xchg
arpl
or
fwait
xor
stc
cmp
cli
xor
dec
cmp
dec
movsb
mov
fcomi
loopne
and
lret
dec
jbe
push
adc
enter
xchg
push
mov
jmp
jbe
sub
push
mov
stos
cld
addr16
int
aas
xchg
inc
push
mov
shl
mov
imul
mov
push
mov
add
jbe
and
or
movsb
mov
mov
mov
es
orb
rorl
xchg
repnz
mov
mov
and
test
cld
cmpsb
xchg
enter
and
mov
test
shl
or
adc
and
movsb
and
inc
pop
mov
cwtl
ja
movsb
cwtl
fs
xchg
int3
dec
insb
xor
fiaddl
arpl
hlt
rclb
jns
lds
sub
push
imul
push
clc
pop
stos
add
mov
mov
adc
push
mov
push
sbb
mov
std
std
sarb
gs
fnstenv
icebp
outsl
cs
mov
stc
mov
rclb
sbbb
jns
mov
xchg
mov
stos
test
and
inc
mov
fwait
xor
je
jmp
push
in
mov
mov
lea
adc
repnz
xor
fistps
ja
jp
sbb
inc
pushf
push
xor
mov
loop
xor
in
outsl
jge
xchg
fcomps
mov
inc
out
adc
adc
out
loopne
jl
xchg
clc
fisubl
add
mov
add
in
stc
sti
js
sbb
mov
sbb
je
cltd
pushl
xor
dec
jno
icebp
jns
push
gs
and
cltd
push
icebp
js
mov
arpl
pop
sub
jne
pop
dec
insl
movsb
sbb
rolb
add
fnstsw
outsl
sub
sbb
repz
rclb
jle
sbb
das
xchg
aam
jl
xor
xchg
or
mov
imul
mov
push
cmpsl
dec
insb
add
movsb
dec
es
jo
pop
cltd
cmp
push
jl
mov
push
and
out
mov
int
xor
loope
aaa
mov
arpl
and
mov
xorb
pop
sbb
adc
dec
or
push
jno
sahf
inc
push
les
or
call
push
enter
cli
xorl
rcrb
mov
pop
aam
cwtl
jns
jns
mov
mov
imul
ja
dec
dec
cld
or
adc
mov
mov
andb
push
fisubrs
dec
lds
sbb
mov
insl
lock
inc
outsb
sub
mulb
std
xchg
mov
inc
mov
pop
mov
add
lahf
rol
jge
test
dec
mov
test
jl
push
xchg
sub
xorb
jbe
cmp
addr16
addr16
cwtl
push
sbb
lcall
out
xchg
jle
cmp
inc
or
iret
sbb
sub
fs
sahf
sbbb
push
loop
movb
sti
or
aaa
and
xchg
shr
cmp
sbb
int3
lret
jl
mov
cwtl
xchg
cltd
jg
loope
xchg
daa
cmp
aas
dec
fs
cltd
fidivrs
adc
daa
cmp
movsl
adc
fsubrs
cld
pop
ljmp
enter
cli
jb
daa
popl
xchg
mov
sbb
inc
decl
dec
lds
fldl
cmc
mov
shl
xor
jge
ret
mov
addb
pop
xorps
push
sub
jg
movsl
mov
pop
bound
sbb
mov
or
xor
cmp
fstpt
adc
inc
xchg
lahf
clc
mov
das
in
aam
sar
ud2
scas
and
or
cltd
imul
xchg
xchg
xchg
jecxz
adc
jns
cwtl
int3
push
mov
or
push
sbb
push
mov
xchg
mov
cmpsb
into
lcall
sbb
adc
sarl
in
fdivp
xchg
lret
push
and
ficomps
es
cmpsl
jbe
test
fnsave
jno
dec
mov
in
add
push
pushf
jbe
lds
mov
mov
push
push
cmc
jbe
mov
or
fstpt
jl
jo
pop
iret
push
ja
and
pop
sub
and
mov
and
clc
or
inc
stc
mov
imul
loope
sub
add
lret
clc
add
adc
inc
push
lret
mov
std
adc
jnp
ss
repnz
pop
sbb
xchg
sbb
sub
xchg
out
mov
fwait
pop
jg
lods
pusha
mov
lea
sbb
dec
in
test
loope
push
movsl
or
sub
mov
inc
sbb
ljmp
inc
xchg
out
push
jl
sub
xchg
jecxz
sbb
pop
xchg
imul
adc
loope
subb
subl
cmpsl
jno
adcb
dec
les
xor
cmp
aam
jl
jns
fwait
test
in
insl
mov
inc
cmp
jae
push
jl
xor
bound
aaa
stos
dec
sub
xor
loope
call
les
cmp
or
aaa
pop
cwtl
xchg
add
jns
aas
xchg
sub
sbb
mov
es
cmp
jle
sarl
pop
dec
pop
pop
xor
adc
out
daa
lock
pop
ss
aas
pop
cmp
push
adc
push
imul
inc
xor
sbb
mov
pushf
inc
daa
fisubrl
push
ficoml
shlb
cltd
and
lds
aam
push
aaa
sti
push
mov
jl
repz
jae
mov
aaa
popa
inc
mov
cmp
xor
scas
shr
fcoml
cli
and
ss
sub
xchg
mov
data16
nop
sbb
int
push
lea
sub
jmp
mov
sub
or
jge
sbb
ss
inc
xchg
scas
bswap
rorb
addr16
pop
cli
adc
jmp
or
lock
lock
sbb
in
in
jecxz
ljmp
lods
xchg
testb
scas
xchg
inc
push
fnstenv
outsb
sbb
push
je
or
dec
push
mov
dec
xor
inc
mov
popf
jbe
jnp
fstl
fidivl
negl
sbb
and
xchg
mov
stos
aam
inc
jl
inc
aas
rolb
or
mov
cmpsl
push
pop
icebp
mov
lods
sbb
dec
and
cmp
sbb
lods
mov
jb
imul
sub
fst
sahf
outsb
mov
pop
adc
xchg
push
xchg
fisubrs
push
xor
daa
sub
jb
jb
aas
lahf
fisttpl
popa
nop
or
jbe
jmp
testb
dec
push
xchg
cmp
add
lret
in
xor
out
fstl
out
xor
leave
js
clc
xor
dec
mov
push
pop
ret
pop
cld
mov
ret
popf
inc
add
in
jb
cmp
ss
add
sar
dec
sbbl
mov
xor
jne
adc
int
push
lret
ficoms
push
mov
out
mov
sub
xor
fistpll
push
repnz
out
stos
jmp
pop
xchg
mov
dec
dec
add
out
inc
ss
arpl
cmp
dec
sub
int
std
stos
pop
pop
stc
add
push
sub
pusha
cmp
jnp
or
jnp
jmp
call
stos
push
cmp
mov
mov
dec
jns
jno
jns
cmpsl
cs
or
mov
ss
pop
cmp
fadds
mov
push
movsb
inc
cwtl
pop
aaa
jno
jne
mov
adc
gs
mov
loope
jecxz
xchg
dec
sbb
data16
popa
loopne
lahf
imul
xor
popa
ret
sub
sub
sbb
inc
cld
push
sub
push
xchg
add
imul
or
in
sahf
push
int3
hlt
ret
or
mov
inc
pop
xor
sbb
mov
xor
jnp
mov
mov
rclb
out
pop
adc
je
dec
stos
or
jecxz
push
and
insb
pop
movsl
mov
inc
jle
adc
subb
arpl
inc
adc
out
in
notl
test
mov
rolb
stos
movsl
mov
insb
mov
icebp
mov
cmp
cmp
ds
and
xchg
jae
pop
loop
notb
mov
mov
and
lea
xchg
ljmp
or
push
into
addl
out
inc
arpl
and
insb
push
mov
xchg
js
sbb
pop
push
push
jnp
fwait
pusha
out
inc
lods
out
push
add
pop
loope
cmpsl
mov
sbb
mov
xchg
push
sar
lret
mov
rcll
out
inc
pop
frstor
addl
xchg
icebp
mov
cli
pop
xchg
mov
xchg
dec
sub
xchg
push
out
mov
addr16
xor
or
fabs
xor
cmp
repnz
stos
jmp
xchg
push
jne
sahf
cmp
bound
testl
mov
jae
xchg
jmp
xchg
mov
xor
pop
fcomps
and
mov
xchg
dec
mov
in
leave
mov
inc
push
in
iret
outsb
sub
sub
out
mov
push
shll
in
cmp
daa
mov
imul
lcall
in
mov
add
mov
and
mov
add
jle
xor
xorl
fldt
fisttps
jmp
hlt
inc
std
ucomiss
pop
in
xor
add
mov
lock
fildll
imul
cmpl
cmpsb
mov
xchg
mov
cmp
jb
mov
les
or
stc
push
lret
xor
or
inc
stos
and
adc
push
jg
push
mov
sahf
xlat
or
cmp
lret
lods
jbe
cmp
mov
jb
push
aam
push
sub
mov
and
dec
add
sub
movsl
dec
dec
and
xchg
adc
dec
jne
mov
test
xor
jecxz
lds
sbb
repz
sub
add
fsubl
xor
fiadds
cld
cs
pop
push
sub
adc
xchg
andb
xor
sarl
mov
push
jnp
pushf
xor
inc
mov
inc
test
lea
cs
outsl
imul
cmp
mov
pop
push
mov
xor
pop
popa
cmp
pop
add
xor
adc
xor
push
and
add
data16
pusha
sbb
cwtl
cmp
gs
push
sti
lahf
cmp
iret
dec
pop
cwtl
jmp
sub
sti
push
xchg
test
cmpsb
or
sub
outsb
sub
cmpsl
jb
aas
lods
adc
add
inc
and
cltd
pop
mov
or
add
cmp
pusha
pop
mov
into
push
or
jbe
and
cmp
xorl
lock
mov
std
xor
mov
jecxz
fld
cltd
sbb
pop
mov
loope
mov
pop
icebp
add
aam
mov
aas
in
xchg
or
mov
xor
lcall
fwait
cmpsb
mov
lret
mov
jno
jmp
dec
lea
mov
add
ss
int
sti
mov
mov
out
lahf
adc
shrb
aad
cmpsl
push
idiv
mov
sub
iret
pop
scas
out
cmp
jo
insb
int3
mov
pop
les
xchg
dec
loop
xchg
outsb
das
lahf
adcl
andb
cmp
cmpsb
mov
andl
jbe
sarb
cmp
popa
insl
pop
fcompp
shrl
aas
mov
mov
and
xchg
fwait
and
xchg
mov
add
fs
add
cld
sub
cli
aad
scas
popa
cli
out
popa
scas
xchg
push
push
ret
sbb
cwtl
mov
pusha
test
nop
scas
int3
fistpll
test
push
loopne
lods
imul
testl
inc
cmpsl
notb
xchg
dec
cmp
ret
icebp
fiadds
pushf
popa
mov
sbb
sub
sub
out
popf
push
lods
call
cmp
xchg
lods
aad
mov
enter
mov
popa
fisubrl
fs
dec
xor
and
xchg
xor
shlb
push
xor
cmpsl
mov
inc
adc
fistpl
add
pop
lret
test
iret
sarb
push
mov
xorl
shll
cmp
xor
push
and
fs
scas
jl
pop
inc
pop
mov
mov
adc
out
xchg
cmp
in
hlt
inc
in
jl
imul
xlat
adc
clc
mov
push
cmc
mov
jg
xchg
sub
add
sbb
shlb
loop
sti
inc
mov
mov
pop
loopne
xchg
push
jge
push
jbe
out
and
xchg
xor
aad
outsl
les
jle
push
jp
cmc
adc
adc
fcomp
mov
out
out
aas
imul
jb
pop
addb
xor
aaa
call
pop
pop
jle
lods
mov
xor
lock
inc
dec
or
jp
fisubl
adc
lods
mov
dec
lret
pop
xlat
mov
out
int
and
push
cmp
or
inc
stos
xchg
test
ja
test
mov
push
call
mov
jbe
push
dec
inc
pop
push
mov
mov
or
mov
jo
mov
fwait
add
push
mov
sar
rolb
cld
fists
in
adc
jne
sub
mov
push
cmc
pop
jle
sub
jno
lea
mov
sub
inc
lret
push
dec
lock
push
imul
jmp
mov
pop
in
sti
sbb
sub
mov
imul
and
mov
jge
jo
insl
xor
mov
adc
inc
scas
outsb
imul
sbb
cmp
cmp
xchg
mov
loop,pt
ljmp
mov
pop
sub
or
push
sub
mov
sbbl
pop
xchg
pop
and
popf
mov
jnp
fiadds
jg
rorl
movsl
or
dec
jns
test
imul
and
mov
insb
sub
scas
cmp
lret
test
pop
repz
sbb
xor
lea
in
leave
subb
sbb
lret
pop
das
sub
hlt
in
mov
mov
cli
add
push
fisubrl
and
adc
mov
arpl
add
test
jns
push
pop
fcom
in
dec
ret
shl
mov
repz
test
sub
mov
mov
mov
adc
les
mov
and
es
xor
inc
mov
movups
pop
inc
test
push
push
imul
sbb
je
mov
popw
pop
lock
movsl
and
pop
jnp
ret
push
xchg
sub
jge
cmpb
sbb
mov
lret
push
js
jnp
push
notl
aam
pop
mov
scas
dec
lret
xor
popf
iret
jg
xor
jns
mov
xchg
pop
and
jp
cmp
mov
or
push
mull
in
xor
cmc
push
rorl
sub
sub
ja
sbb
mov
dec
test
decl
pop
pusha
adc
stos
cmp
push
mov
ds
int
aad
adc
lods
pop
fdivl
clc
mov
cltd
dec
imul
inc
call
push
cmp
and
cmp
loop
or
popf
xor
dec
push
mov
mov
loopne
stc
scas
sub
stos
fidivl
sub
cmp
jg
js
add
loop
mov
es
push
sahf
pop
mov
and
and
xchg
daa
popf
push
fildll
jb
shlb
loope
dec
mov
scas
xor
dec
dec
enter
ja
xchg
loopne
or
mov
mov
add
popf
adc
cli
enter
stos
insl
rolb
call
fsubl
push
ss
pop
cwtl
mov
add
cmc
push
imul
xor
jae,pn
mulb
in
fs
mov
xorb
and
cmc
sarb
inc
jb
pop
jle
cmpsl
jae
sub
inc
xchg
mov
sub
or
or
mov
loopne
lds
pusha
or
lea
fdivp
mov
pop
add
repnz
cmpsl
add
push
fsubl
or
test
cmp
ret
in
push
add
pop
dec
stc
out
cmpsb
cmp
add
in
cmc
test
test
aas
lcall
pop
and
xchg
cmp
mov
sbb
add
cmp
leave
pop
aam
xchg
icebp
mov
mov
fldcw
stos
mov
mov
js
cwtl
lret
xor
mov
push
fxtract
or
test
jae
ror
mov
scas
add
je
sbb
xchg
push
cmp
insb
enter
jg
inc
xchg
fbstp
test
test
arpl
lds
push
sub
cltd
mov
scas
dec
add
pop
jg
xor
gs
aaa
shrl
jnp
push
and
push
out
inc
fidivl
mov
jnp
aas
sarl
pop
ret
push
fistl
out
mov
mov
pop
jno
add
sar
loope
in
and
sbb
repnz
and
popa
xchg
cmpsl
pusha
shr
push
mov
inc
sub
mov
jl
sub
jge
sub
mov
inc
rolb
lock
out
divb
sarl
ss
loopne
sbb
je
xor
mov
sbb
popa
cmpsl
cmc
sub
pop
jo
cmp
pop
aam
idivb
dec
pop
test
mov
stos
sbb
xchg
lahf
and
xorl
mov
lea
pop
out
dec
fwait
fwait
repz
jb
aad
fisttpl
movsl
mov
sub
mov
or
sar
cld
mov
enter
push
jmp
out
push
xor
xor
hlt
cld
addl
mov
mov
inc
add
das
and
jno
mulb
xchg
dec
mov
adc
pop
jno
ss
push
int
or
lods
test
andb
fadds
cmpsl
dec
jne
pop
fists
hlt
pop
inc
fildll
jg
mov
lea
ss
lret
ss
adc
mov
inc
mov
insl
adc
movsb
sub
dec
jno
mov
or
lds
sarb
cld
sub
ret
add
test
sbb
jae
sub
sbb
fnstsw
xchg
pop
sbb
leave
in
cmp
dec
mov
clc
cmpsb
and
icebp
frstor
fimuls
fwait
push
xor
out
push
or
pop
data16
out
jp
jecxz
adc
fs
add
sahf
std
sub
push
out
mov
stos
mov
adc
pusha
or
cmp
shr
mov
pop
sarl
rcrl
jg
push
xor
scas
test
hlt
mov
dec
or
dec
lahf
adc
clc
addb
loopne
rcrb
test
shl
mov
jecxz
jne
jmp
negb
mov
mov
jne
push
insl
pop
xchg
loop
xor
fidivs
fwait
in
xor
test
mov
test
sbb
sbb
int3
adc
xor
js
mov
cltd
xchg
jp
adc
cmpsl
inc
sub
push
ret
jl
test
cmp
pop
mov
or
mov
pop
jmp
stc
subb
ds
cmpsb
pop
les
lahf
cmpsl
es
sub
lods
and
xor
test
sti
xchg
sub
ljmp
xchg
adc
and
int
or
arpl
jne
mov
push
inc
mov
addb
out
mov
in
sahf
rcrb
cmpsb
sbb
pop
cli
sub
mov
pusha
sub
in
js
pop
stc
jbe
cmp
cmp
cld
add
leave
imul
std
push
cltd
out
mov
loopne
out
xchg
movsl
jmp
sbb
movsb
pop
bound
jns
ljmp
in
fisubs
enter
fdivr
adc
and
ds
lock
jns
inc
xchg
clc
mov
movsb
sbb
xchg
xchg
add
imul
lds
nop
add
das
adc
stc
sbbb
cmp
cmpsb
xchg
adc
push
mov
rorb
mov
repnz
push
sti
int
mov
decl
aaa
push
nop
mov
call
mov
inc
in
mov
add
jae
mov
insl
and
fimull
mov
insb
loop
int3
fdivrp
mov
sub
adc
addb
out
sub
sar
int
mov
cli
push
lret
adc
mov
sub
stos
mov
sbb
pop
cmpsb
in
mov
cmp
push
cmpsl
fcompl
xor
xchg
test
pusha
jns
insb
js
stc
movsl
lock
cli
cmp
out
dec
dec
lahf
dec
les
xor
aaa
xchg
addr16
pop
into
imul
pop
movsl
inc
and
inc
fwait
sub
push
xor
dec
xchg
fldl
lret
jb
rclb
int
out
loop
dec
lret
sbb
lea
inc
push
cmp
rorl
and
loope
push
fwait
dec
inc
cmpsl
jge
mov
fdivr
sub
call
xor
mov
repnz
xchg
not
hlt
push
jns
mov
sbb
lock
ror
cmpl
push
test
mov
insb
or
and
stos
xor
and
cmpl
js
cli
sbb
push
mov
lcall
push
mov
mov
call
sbb
pop
lcall
fadds
js
shl
mov
sahf
sbb
sbb
dec
rolb
jp
ficoms
pop
xlat
mov
pusha
and
subl
or
inc
mov
mov
and
mov
jp
sub
ljmp
sub
jecxz
inc
mov
decb
add
xor
ja
cmpsb
lds
cmp
lcall
dec
mov
jle
scas
or
jbe
or
movsl
scas
inc
sbb
cmp
call
rep
dec
xchg
dec
or
out
popa
rcrb
or
cmp
adc
and
pop
dec
out
cli
pusha
cli
mov
xchg
inc
std
mov
inc
mov
divb
ja
mov
test
es
add
and
ss
lds
popf
mov
xchg
in
push
add
sub
movl
mov
sbb
insl
rcrl
addr16
xor
cmpsb
jp
sub
xor
ffreep
and
pop
cwtl
loop
stos
and
ret
popa
les
cld
shr
call
sub
adc
je
sti
mov
push
jae
jae
loopne
cmc
imul
mov
rorl
fistpll
pusha
inc
out
xchg
cmovnp
ljmp
mov
daa
test
int3
xchg
sub
dec
pop
jns
lret
iret
fcmovne
icebp
add
fdivs
subl
daa
sub
cld
hlt
mov
outsb
dec
cmpsl
call
adc
adc
das
movl
jmp
lods
dec
adc
imul
scas
cltd
mov
adc
pop
pop
xchg
inc
jb
ja
clc
mov
dec
add
xchg
cmp
gs
loope
daa
stos
insl
pusha
mov
xchg
out
push
mov
dec
and
xor
pop
fucomip
es
lcall
push
jne
xchg
sahf
and
mov
fwait
lret
push
fmull
js
mov
cld
push
add
cmpsb
inc
aam
imul
xchg
or
shlb
cli
and
clc
adc
arpl
mov
sbb
cmp
adc
cmp
push
in
pcmpeqb
test
jmp
cltd
sbb
mov
shll
push
inc
movsl
cmp
adc
mov
add
mov
popf
test
mov
xchg
cmp
dec
neg
xor
mov
sub
cltd
in
inc
xchg
stos
fsubrs
dec
mov
lods
mov
adc
pop
inc
and
cmp
sub
sbb
adc
ret
or
repnz
mov
mov
std
jo
es
and
inc
gs
cmpsl
or
and
ret
data16
popf
sbbb
in
inc
pop
jne
pop
jmp
mov
es
cwtl
cmp
sub
cs
roll
les
pushf
fistl
mov
and
pop
ror
jnp
fldenv
dec
jl
mov
sub
and
jge
in
mov
push
sbb
mov
aad
jl
jle
sbb
sbb
int
mov
pop
ljmp
or
and
in
mov
adc
jmp
sarb
mov
ds
add
sbb
das
test
popf
stos
std
inc
arpl
cmp
push
mov
jg
xor
femms
mov
or
and
and
lahf
cmpl
push
jmp
lret
test
mov
push
ja
divl
adc
push
sub
in
mov
movsb
ret
sbb
xchg
fnstenv
sbb
xchg
dec
add
pop
aad
pop
push
test
fisubl
adc
push
and
into
dec
es
dec
mov
rclb
or
mov
arpl
or
daa
stc
sub
in
mov
jecxz
lahf
jbe
adc
outsb
stc
xchg
notb
jg
add
inc
lret
or
rorl
aaa
mov
adc
cmpsl
cld
jp
addr16
nop
pop
in
adc
int
call
jle
divb
cmp
cmp
ljmp
push
jnp
sbb
test
lret
push
or
rolb
jp
xchg
sti
divl
pop
cmp
mov
inc
inc
imul
cmp
test
dec
dec
mov
aam
scas
push
int3
cmp
dec
insb
mov
dec
insb
scas
cmpsb
repz
mov
mov
sub
ljmp
mov
out
mov
mov
xchg
and
xor
insl
orb
sub
push
xchg
test
or
and
cmp
test
fsincos
pop
lock
dec
das
jbe
adc
and
pop
dec
test
out
mov
fldl2t
lds
add
loope
es
add
xlat
lods
jge
push
jmp
in
aad
imul
dec
jge
dec
stos
mov
pop
pop
adc
adcb
arpl
cld
dec
repz
lret
and
adc
xchg
adc
xchg
push
out
jo
push
push
sub
scas
jns
dec
dec
addr16
push
mov
or
aad
mov
pop
dec
and
andl
push
add
pop
jmp
adc
mov
mov
mov
fmul
push
cmp
iret
sbb
pushf
add
orb
fisttpll
xor
adc
in
sub
cmp
dec
push
mov
scas
xchg
out
test
lods
shlb
add
lcall
and
and
dec
sub
lret
add
std
pop
and
lahf
and
jle
or
jb
cmp
cmp
xor
aam
jmp
lds
inc
loop
subl
lods
dec
outsl
mov
pop
cmpb
int
test
adc
mov
int
dec
cmp
jecxz
sub
in
mov
adc
stos
and
push
pop
mov
int
sbbl
adc
shrl
add
xlat
lahf
xlat
stc
lods
negb
cld
test
jge
stos
stos
inc
mov
jo
push
leave
add
pop
inc
lods
loop
enter
shlb
hlt
insb
push
fldl
push
jp
mov
test
lcall
popf
jns
sub
add
dec
jp
clc
repnz
enter
icebp
mov
cmp
and
push
cmp
pop
mov
jecxz
cmp
or
outsl
jle
push
or
test
arpl
add
inc
in
test
jle
xor
mov
shll
dec
adc
es
cmp
aam
inc
adc
and
cmp
push
fnsave
xchg
sti
mov
out
sti
stc
loope
dec
dec
xor
fdivs
testl
test
out
sbb
sub
das
sub
adc
add
or
xchg
pop
lahf
jno
jns
insb
pop
cmp
test
adc
imul
shlb
fnstsw
inc
aas
mov
in
xchg
test
fnstenv
dec
pop
lods
push
shlb
jbe
or
stc
mov
dec
fdivr
repz
pop
call
out
and
adc
xchg
mov
add
out
pushf
fsubr
test
xor
sub
stos
mov
sbb
xchg
mov
nop
shlb
int
sbb
mov
shlb
sahf
push
outsb
stc
fstpt
ret
scas
inc
jg
fnstenv
pop
sbb
sub
dec
clc
mov
cltd
daa
push
aad
pop
sahf
or
xchg
jb
movsl
pop
fmull
mov
pop
mov
mov
lcall
pop
inc
sbb
mov
out
cs
push
aad
adc
iret
shlb
fs
add
jno
mov
imul
into
pop
leave
lds
int
ljmp
lea
push
xchg
ficompl
out
cmp
jle,pn
aaa
mov
cmpsb
push
lcall
sub
mov
dec
xor
inc
mov
jno
bound
aas
push
outsb
xchg
sbb
or
out
pusha
xor
aaa
std
call
sbb
sahf
cld
adc
in
addr16
mov
mov
adc
jne
add
int3
inc
xchg
ror
push
aaa
pop
movsb
xchg
sbb
jle
lds
dec
inc
stos
sub
push
xor
fistps
mov
adc
loope
add
dec
cmc
ss
subb
mov
aaa
dec
and
xor
shl
sar
pop
pop
and
insb
mov
mov
jmp
jb
and
adc
pop
incb
inc
sahf
push
push
lods
sbbb
cmp
push
das
js
dec
pop
pop
imul
in
or
dec
in
mov
insl
inc
push
cld
aad
dec
and
aas
loope
mov
bound
inc
leave
sub
or
xor
das
sub
shr
cwtl
js
or
cmpsb
pop
or
cwtl
movsb
dec
or
out
test
cmp
and
out
inc
push
dec
and
lret
dec
movsb
lock
cmp
xchg
fstl
cmp
mov
dec
bound
stc
lret
sub
out
or
adc
or
test
es
jge
sar
sbbb
rorb
pop
je
jae
pause
in
cmp
sub
scas
orl
or
out
ljmp
inc
in
pop
mov
inc
lret
ret
data16
add
inc
in
or
mov
gs
sbb
xchg
lods
and
lods
inc
xlat
mov
shlb
pop
cld
cmpsb
inc
inc
loopnew
add
shlb
rcrb
sub
inc
xchg
add
jae
aad
imul
inc
xor
pop
in
sub
in
or
cmpsl
fnstenv
dec
mov
cmc
ljmp
sub
in
fcompl
jno
or
and
xchg
mov
idivb
sbb
push
and
xor
jae
push
or
dec
mov
push
in
iret
cltd
aad
sub
nop
scas
outsl
stos
cwtd
push
sub
xchg
xor
push
or
xchg
jnp,pn
int
sub
pushf
bound
cmp
scas
xchg
xchg
fisubl
hlt
int
push
repz
sbb
je
mov
cmp
lods
insl
movsl
xchg
fs
push
sbb
rcl
inc
mov
xor
nop
or
enter
ds
adc
jle
outsl
jo
jbe
and
or
or
hlt
mov
push
in
add
insl
cli
add
push
push
jne
rol
add
shlb
adc
dec
add
xchg
add
mov
adc
and
in
ret
mov
bnd
xchg
movsb
cwtl
rorb
insb
pop
pop
dec
mov
js
jnp
jno
mov
sub
xchg
movsl
sbb
test
push
adc
jmp
setb
test
outsb
iret
popa
and
push
add
push
clc
mov
adc
sbbb
cmp
adc
push
stc
es
and
mov
sbbl
mov
add
aaa
and
or
bound
iret
xchg
jl
clc
int3
push
jge
dec
out
into
jno
ret
sahf
cmp
mov
sbb
xor
mov
pop
fwait
das
lods
aas
dec
sub
lcall
sub
loope
outsl
in
rcr
xor
xor
popa
jae
repnz
cmp
mov
mulb
ficomps
cltd
aaa
add
loope
and
mov
or
icebp
push
cs
add
push
xchg
push
dec
call
popa
xchg
mov
mov
into
xchg
jnp
inc
iret
xchg
pop
ljmp
aas
jno
pop
inc
lret
nop
dec
cltd
inc
jp
or
mov
daa
cmp
lea
mov
mov
scas
mov
insb
mov
testb
movsb
push
dec
lods
xchg
push
pause
cmc
or
sub
push
repnz
ds
xchg
test
pushf
popa
sti
imul
shll
pop
cmp
ss
sub
and
outsl
jecxz
sti
cmp
lods
test
and
ret
sbb
std
cmp
mov
mov
cmp
cmp
mov
add
sbb
loope
push
dec
push
mov
sub
fisubs
sub
loop
xlat
xlat
dec
lods
daa
inc
sbb
xchg
add
sahf
cmp
cwtl
gs
lds
dec
pusha
xor
movsl
fldenv
sahf
xor
push
push
pop
aas
push
xchg
jmp
sahf
cli
es
mov
mov
ficompl
loop
stc
sub
lods
push
loop
mov
or
je
cs
idivb
xchg
sub
mov
popf
pop
out
push
jl
inc
adc
pop
arpl
fcmovbe
mov
push
cltd
dec
push
xchg
fmul
out
jae
sub
rorl
lea
test
ret
sar
adc
push
dec
dec
das
dec
loop
ljmp
adc
inc
lock
sub
repz
int3
int3
stc
cld
xor
dec
xor
cwtl
adc
fldl
shll
ds
rorl
shl
add
cmp
js
imul
lret
pop
pop
daa
add
outsl
sahf
or
and
hlt
push
dec
inc
inc
and
jl
and
jb
cmp
ss
sbb
aas
pushf
rcr
xor
in
je
repnz
add
push
xchg
jb
loope
pusha
jbe
enter
jl
call
cmp
nop
loope
push
pusha
into
daa
inc
cmpsb
addb
add
mov
mov
icebp
test
bound
inc
divl
or
and
fdiv
sbb
insl
int
int
testb
dec
addr16
dec
fisubrs
jp
mov
adc
push
popa
inc
mov
icebp
fsubs
jae
out
in
jmp
aad
enter
fidivs
aam
or
dec
mov
xor
xor
sbb
and
mull
test
icebp
pop
aam
inc
repz
and
push
cmp
lret
dec
dec
out
or
ss
pop
xchg
xor
sub
or
inc
loop
and
int3
popf
or
lret
mov
adc
cmp
sbb
clc
mov
mov
dec
adc
in
das
xorl
insl
jg
lods
inc
popf
push
add
sub
adc
cmpsb
testl
int
add
ds
inc
push
outsl
inc
mov
pop
cmp
jge
cmp
mov
outsb
mov
fnstenv
sbb
mov
add
mov
mov
jae
fs
xor
ljmp
inc
xchg
pop
int3
add
iret
inc
xorb
fdivs
cmc
add
jnp
test
in
xor
fdivr
jmp
sub
fwait
mov
cmp
inc
add
jb
lea
xchg
push
lcall
es
pop
call
or
inc
cli
sbb
sbb
loop
int3
cmp
mov
inc
pop
aas
push
pop
and
cli
inc
ficompl
imull
xchg
add
mov
cmp
adc
sub
mov
add
mov
dec
mov
cmp
incb
stos
xlat
mov
or
cmp
push
mov
stc
dec
xchg
push
sub
sub
adc
dec
bound
and
or
test
jp
popa
xchg
dec
or
fdivl
cwtl
pop
insb
movb
jb
sbb
sbb
mov
imulb
repz
mov
divl
jecxz
frstor
xor
sub
mov
shll
xorl
pop
fldcw
sbb
and
int
and
cwtl
mov
ljmp
mov
dec
xchg
push
cld
xchg
sbb
lock
movsl
push
loope
popf
mov
imul
aad
xchg
sbb
lods
inc
xchg
mov
inc
jnp
sub
xchg
cltd
xorb
fcompl
sub
jb
push
inc
and
shrb
push
cmp
push
push
xor
dec
imul
loop
mov
fdivl
mov
out
cltd
out
or
add
mov
lods
sub
inc
negl
mov
ss
sbbb
jnp
int3
mov
cwtl
cmp
mov
mov
adc
xor
pop
and
rorb
add
jnp
stc
push
xor
adc
pop
cmp
ds
mov
mov
mov
jae
pop
cli
pop
sub
cmpsb
stc
mov
jle
adc
inc
adc
stc
pextrw
insl
sti
adc
fsubr
fs
out
xor
push
pop
ljmp
outsb
pop
dec
out
mov
xchg
subl
les
orl
stos
aad
cmp
push
pop
outsl
mov
ret
add
push
mov
cwtl
gs
leave
pop
cmp
push
add
repnz
cmp
push
mov
lret
cwtl
shrb
and
sbb
inc
inc
adc
movsl
jmp
lahf
aaa
and
mov
in
movsb
add
mov
xchg
mov
nop
in
sahf
or
shlb
mov
jmp
movsb
les
ret
aad
lret
dec
mov
xor
out
jo
shll
add
add
jbe
jmp
std
ljmp
and
cmp
jp
lahf
fcmovnb
imul
push
ljmp
subb
mov
mov
sbb
call
fists
jmp
xor
arpl
mov
jle
jle
jo
ljmp
fwait
cmp
push
aad
inc
xor
fidivrs
mov
jnp
dec
inc
cmp
inc
cmc
out
out
fists
xchg
dec
out
sub
sub
pop
dec
pop
sbb
dec
inc
dec
xchg
dec
out
inc
pop
mov
cmp
ljmp
xchg
daa
push
les
cmpxchg
sub
iret
lret
pop
mov
sbb
into
cli
insb
int3
pop
lret
mov
jmp
scas
sbbb
pop
xchg
jbe
mov
int3
add
in
sub
mov
pop
loopne
test
test
jge
adcl
adcl
dec
and
aam
jbe
pusha
sub
fstps
jae
sub
xchg
xchg
cmp
enter
mov
repz
pop
xor
inc
mov
and
adc
push
push
push
xchg
and
dec
adc
sub
cli
dec
loopne
stos
mov
adc
xor
jns
or
das
cmp
sti
cli
dec
loope
in
out
cmpsb
ss
mov
mull
cmp
push
xchg
push
scas
adc
mov
or
xor
jecxz
frstor
stos
jns
mov
pop
arpl
cltd
dec
pop
add
test
mov
inc
sbb
stos
xor
ss
sub
lahf
mov
lds
jae
cmc
fdivrl
les
add
out
in
gs
shll
xchg
xor
and
test
sbb
rclb
mov
jns
push
inc
cmpsl
vcmpss
int3
jns
fmull
ret
imul
pop
adc
mov
jg
fsts
add
orl
shll
outsl
fistl
leave
cmpsb
mov
mov
xchg
stos
and
jno
aas
pop
lahf
aas
add
sbb
or
pop
sub
loopne
mov
inc
lcall
addr16
lods
and
mov
fsubl
jae
xor
dec
push
sbb
push
xor
out
aas
jb
push
out
divb
mov
fs
aaa
fcmovnbe
push
incb
lock
fmuls
mov
test
pop
movsl
call
mov
lahf
xchg
jp
adc
mov
fisubrs
shrl
sub
sub
js
jl
in
sahf
inc
bound
shll
stos
push
xor
lret
sub
pop
cs
sbb
add
xchg
inc
xor
xchg
push
mov
xor
sbb
subb
rdmsr
mov
call
test
gs
cmp
orl
cwtl
fcmove
shll
cmp
mov
mov
mov
dec
dec
xorl
mov
mov
inc
sti
bound
inc
mov
cmp
ret
push
das
movsb
and
jle
repnz
aad
pusha
addl
aam
loop
mov
lret
jne
clc
mov
sub
ljmp
btc
pop
push
sbb
sbb
ja
addb
push
mov
sbbb
jns
js
mov
mov
or
stc
out
jecxz,pn
shl
js
out
pop
movsb
icebp
push
sti
push
imul
pushf
xchg
rcrl
icebp
out
sub
add
pop
fldt
jmp
sbb
cmp
call
sbb
stos
dec
jae
push
or
cmp
lods
fstps
add
imul
inc
ret
mov
mov
and
lods
int
std
lock
adc
and
and
aam
pop
adc
scas
lahf
aad
cmp
xlat
fisubrs
or
lcall
adc
cmc
mov
in
cmc
dec
add
add
mov
stos
stc
push
mov
and
stos
adc
call
loop
xchg
gs
mov
mov
mov
out
sbb
out
xchg
xor
cwtl
aad
mov
xlat
test
jl
pop
repnz
fdivs
sti
jmp
jmp
lahf
mov
int3
sbb
in
push
xchg
loope
mov
push
pop
jae
addl
hlt
push
nop
xchg
mov
and
push
xchg
lock
mov
mov
ja
jcxz
test
dec
xor
inc
add
sub
je
es
fidivl
cmp
aad
int
lock
mov
flds
cltd
pop
inc
lret
dec
cmp
fcom
xchg
notb
add
lods
push
cmpb
pop
mov
mov
inc
shll
push
in
fstpl
sbb
fildl
or
mov
inc
mov
mov
movsb
sbb
adc
imul
mov
cmpb
push
pop
lock
push
dec
mov
rorb
fcomp
push
pop
push
xor
jmp
clc
mov
and
jno
sbb
xor
fsubrs
insb
mov
fs
arpl
mov
sar
outsb
xchg
push
testl
sahf
push
test
out
cld
mov
addr16
call
pop
rcrl
popa
in
mov
mov
stos
adc
lock
sti
inc
std
sbbl
mov
or
test
fwait
mov
hlt
xor
push
mov
into
inc
or
sub
and
fnsave
dec
lds
jbe
cltd
adc
icebp
andl
jb
out
ja
add
inc
ds
mov
std
and
mov
xor
pusha
xchg
adc
jae
inc
popa
vpshufd
xchg
nop
stc
cmp
dec
xlat
andl
inc
dec
or
les
push
sbb
lds
inc
inc
rcrl
rolb
les
and
enter
cmpsb
imul
cwtl
mov
cmp
sahf
je
adc
cs
push
cmp
andl
ret
sub
mov
int3
outsb
insb
mov
inc
insb
xchg
stos
cmp
pop
shll
jbe
mov
xor
in
push
and
shrl
jae
mov
movsl
rol
shrd
jnp
cwtl
popa
push
imul
mov
mov
push
sub
inc
sub
leave
pop
and
lahf
ljmpw
cmc
mov
nop
cmp
jb
adc
sub
loopne
mov
mov
aas
xor
jle
sub
das
scas
divb
inc
pop
mov
pop
test
pop
jbe
mov
jecxz
pop
mov
insb
cmp
in
dec
xchg
jge
jbe
sub
mov
xorl
js
inc
fisttps
inc
aad
gs
mov
and
fyl2x
pop
fs
pop
mov
out
mov
scas
ds
pop
int
pop
ljmp
repz
fcompl
insl
and
mov
adc
sbb
roll
out
out
pushf
in
mov
out
call
mov
lcall
xor
and
data16
ljmp
xor
lea
jns
test
jg
cli
xor
and
xorl
repz
adc
in
sarb
inc
jle
push
cmp
push
ljmp
ds
push
shr
push
lcall
dec
out
inc
jb
aaa
and
push
mov
adc
rcll
jno,pn
sbb
jge
vsqrtsd
sub
loop
orl
cmp
shl
add
jnp
jne
pop
js
roll
add
jmp
sbb
add
clc
xchg
xchg
pop
loope
jecxz
dec
lcall
push
xchg
pop
mov
movsb
push
and
std
mov
pusha
inc
stc
jb
leave
mov
or
in
fisttpll
test
sbbb
pop
dec
xlat
sub
sub
cmp
js
mov
mov
jge
in
adc
shll
mov
sub
mov
pop
cmpsl
popa
test
fidivrs
lahf
iret
mov
mov
pop
stc
das
pop
jmp
sub
push
stos
repz
xor
pusha
addb
jg
jnp
adc
fisubs
cmp
dec
jg
fmuls
add
sbb
shl
lock
sbb
mov
lds
int3
push
push
or
pop
xor
sub
test
mov
inc
add
add
mov
mov
xor
pop
in
sub
roll
pop
add
jecxz
int3
sub
xchg
aam
fimull
cltd
jnp
adc
sub
push
pop
dec
sarl
push
and
xchg
pop
xchg
or
cmp
mov
dec
arpl
mov
sub
and
add
ja
xor
pop
xchg
dec
push
hlt
mov
or
push
dec
orl
fnstenv
dec
dec
and
fisubrs
xchg
imul
add
xchg
sbb
inc
or
xchg
hlt
in
nop
push
jl
lcall
fmull
ficomps
push
dec
jo
fidivs
rol
shrl
aad
ja
cld
push
mov
pop
mov
pop
mov
aad
push
dec
xchg
stc
in
cmp
sbb
icebp
cmp
xchg
dec
leave
scas
jnp
test
inc
sub
mov
std
add
fadd
mov
popa
addr16
insl
pop
jns
jg
xlat
iret
mov
test
add
inc
lock
and
insl
pop
mov
lret
cmp
inc
jp
cmpsl
sbb
pusha
repz
mov
rol
in
mov
push
sub
pop
mov
pop
and
test
cmp
sub
sub
mov
sub
inc
push
ror
and
cmp
rcll
mov
in
jbe
aas
lahf
stos
mov
lret
adc
xor
xchg
rol
sbb
gs
leave
test
jb
cmp
iret
cmp
es
je
mov
mov
int3
push
mov
push
out
and
mov
push
adc
push
mull
cmp
pop
shr
cmp
pop
jo
xlat
sbb
cmp
sbb
sub
clc
mov
pop
rorl
stos
xchg
jae
push
data16
lret
enter
fists
movsl
jecxz
mov
mov
inc
in
inc
pop
sbb
imul
xchg
icebp
ds
orl
mov
mov
pop
xor
fs
cmp
test
sbb
into
xchg
dec
in
imul
ficoml
push
in
jmp
or
inc
sbb
dec
loop
in
sbb
xchg
sbb
and
cld
flds
pop
mov
dec
repnz
arpl
in
inc
fistps
sbb
sbb
push
pop
adc
rorb
incb
icebp
shl
inc
sbb
lret
mov
imul
int
ret
arpl
push
xchg
popa
xchg
mov
add
fwait
inc
pop
cmpsl
popf
xor
out
sub
mov
shlb
ljmp
mov
mov
jnp
add
adcb
lret
ret
mov
outsb
imul
push
sub
pop
and
sbb
pop
rorl
mov
sub
pushf
jne
sbb
loope
popf
frstor
push
xchg
mov
movsb
pop
or
adc
dec
jne
pop
add
sub
loopne
arpl
repnz
std
xchg
loope
gs
adcb
push
outsb
not
push
jle
sahf
daa
mov
pop
push
jb
dec
ret
loopne
cmpsb
aad
ret
int
mov
pop
xchg
iret
scas
stc
jae
insl
clc
cmpsb
addb
mov
movsl
inc
pusha
cmp
mov
nop
cmp
lods
cld
hlt
and
jmp
leave
scas
rorl
repnz
mov
cmpb
dec
test
or
lahf
fs
lahf
rclb
cmp
arpl
test
inc
xchg
es
gs
pop
sub
xor
adc
dec
mov
aam
movsb
bound
addr16
sub
loopne
lret
or
ljmp
dec
mov
in
gs
idivl
adc
addps
popa
fucompp
mov
adc
adc
adcl
jle
icebp
push
pop
imul
popa
mov
sub
xor
and
push
mov
mov
push
cmp
pop
shrb
mov
ja
lret
je
ljmp
ret
xor
add
fcmovnb
ret
out
leave
stc
push
sbb
nop
inc
shrb
ja
adc
shrl
push
mov
ret
inc
insl
xor
ret
outsl
lcall
xchg
pushf
call
fistpll
dec
sbbl
mov
sbb
inc
mov
xchg
sbb
xor
popf
flds
les
repz
adc
jl
into
sarb
pop
std
jge
cmpl
xchg
mov
out
cmpsb
adc
decl
movsl
mov
mov
cmpsl
xor
stos
addl
icebp
jmp
repnz
shlb
mov
leave
enter
sub
jmp
loope
jb
or
popa
cmp
xor
scas
mulb
mov
cmp
outsl
outsb
xlat
xchg
arpl
push
mov
sti
adc
stos
outsl
insb
lods
aam
leave
mov
mov
popa
jb
push
into
pop
inc
xorl
std
cmpsl
xchg
fdivs
push
div
push
dec
and
in
xchg
stos
jnp
cmc
filds
addr16
cmp
mov
loopne
xchg
add
xor
pop
je
dec
les
aas
mov
dec
dec
or
lds
and
jp
or
adc
pushf
cmp
dec
loope
cld
add
fdivrs
imul
adc
hlt
jb
mov
shrl
insl
iret
dec
push
mov
pop
mov
sub
iret
popa
sub
subl
mov
shll
cmp
mov
je
inc
popa
xchg
movsb
leave
mov
movsb
roll
lods
sahf
add
push
jl
cmp
jge
adc
popf
in
cwtl
sbb
mov
push
jnp
add
fiaddl
jge
dec
into
jo
lds
push
pop
aas
adc
and
test
cs
inc
mov
sbb
movsb
rcll
dec
pcmpeqb
js
push
loopne
mov
mov
cwtl
loope
jmp
cmpsb
mov
jg
push
and
mov
lock
jnp
shrb
in
xor
pusha
sbb
mov
cmp
xor
pop
icebp
and
adc
xor
fnsave
imul
mov
and
jp
lods
sbb
in
repz
sarb
lods
push
lret
daa
push
mov
out
cld
pop
pop
xor
mov
sahf
pop
cmp
jae
cmpsb
pop
jge
aaa
stos
dec
push
ja
jno
push
ds
scas
lds
pushf
push
pop
movsl
clc
data16
mov
clc
mov
out
into
xor
dec
int3
jp
mov
pop
add
and
popf
mov
inc
xchg
rorb
stos
dec
mov
xor
lcall
cmc
dec
inc
fistpll
inc
add
mov
xchg
ficoml
jno
xchg
icebp
xchg
pop
adc
sbbl
xchg
scas
std
call
fdivr
testl
test
cwtl
int
inc
ljmp
les
shll
cli
cmp
add
pusha
aaa
cmp
cli
sbb
sahf
adc
test
rolb
lahf
loopne
inc
ds
lret
inc
addl
or
adcl
and
aad
inc
aas
cltd
sti
jb
xchg
sar
dec
lret
mov
cmc
adc
aas
pop
lahf
call
cs
fists
into
adc
das
iret
lret
in
inc
fidivrl
sub
ret
dec
mov
ds
push
dec
xor
popa
lea
add
fistl
dec
aaa
out
hlt
pop
and
xchg
cmp
xor
push
adc
ror
mov
cmpsb
dec
push
lahf
cmp
arpl
push
push
jmp
stc
lret
dec
or
fisubrs
inc
sbb
cmc
pop
jb
pushf
mov
or
xchg
js
pop
data16
jo
pop
push
fwait
jo
enter
or
xchg
inc
aad
inc
nop
les
ret
mov
or
dec
sub
lret
add
adc
repz
adc
adc
and
les
rorb
and
cmp
cmp
arpl
push
pop
xchg
jp
and
mov
push
out
mov
push
rclb
mov
pop
inc
push
and
jle
iret
std
push
mov
push
sbb
mov
push
adc
or
pop
repnz
rcrb
jne
xor
or
les
scas
icebp
dec
pushf
ret
popl
mov
pop
scas
clc
add
xchg
sub
sbb
and
xchg
in
mov
xor
cmp
xor
mov
addb
mov
lret
push
fmuls
cli
cmp
pop
lods
lock
mov
or
scas
sbb
ret
in
sub
jbe
loopne
jge
pop
cltd
imul
adc
push
call
sub
xchg
jmp
dec
add
xchg
sbb
cli
push
cld
xchg
and
xor
popf
push
out
icebp
test
es
aaa
or
mov
scas
or
orl
or
xlat
data16
mov
cmc
sti
pushf
xchg
outsl
imul
cld
ret
out
pop
mov
int
aas
and
pop
repz
mov
lods
out
rcll
xchg
mov
aas
adc
lods
jge
push
cs
xchg
and
lods
out
loope
arpl
pop
mov
push
cmovns
iret
xchg
pop
popf
push
push
jl
mov
idivb
fnsave
sbb
xchg
stos
xchg
test
cmpsb
test
push
out
dec
aad
cmpl
push
sub
inc
mov
stos
or
es
subb
mov
push
shlb
or
insl
push
test
push
int
aad
push
pop
or
adc
jg
mov
enter
cld
push
add
testb
jmp
add
inc
ja
mov
add
call
mov
je
out
int
lret
bound
cmc
cmp
push
dec
mov
hlt
out
stos
mov
mov
lds
push
fwait
int
dec
push
mov
and
xchg
or
subb
bound
out
dec
lods
punpcklwd
jle
or
bound
loopne
xchg
rolb
div
pushf
jmp
fsubl
push
mov
jo
mov
mov
xor
ljmp
int3
sarl
jmp
sub
mov
in
cmp
add
sub
inc
ret
push
out
jp
sub
and
imul
loop
sbb
ror
or
cmc
or
dec
out
push
aad
lret
bound
scas
sub
out
rorl
test
testb
inc
clc
test
je
lea
mov
dec
fistpl
mov
dec
bndstx
sub
or
ret
adc
add
jno
adc
fstl
es
adc
mov
cmp
xlat
daa
xchg
pop
repz
dec
lahf
ficoms
ss
or
fbld
inc
movsl
add
movl
ret
push
fwait
out
cmp
gs
cmpsb
popa
mov
mov
rorb
in
jae
out
js
pushf
dec
pop
mov
jmp
hlt
stc
mov
mov
inc
inc
movl
mov
cmpsb
daa
dec
cmc
gs
adc
iret
xor
frstor
ret
std
xor
xchg
add
mov
pop
rol
jg
adcl
repnz
cmpsl
sub
dec
mov
mov
jle
nop
mov
ret
in
sarb
mov
pop
addb
dec
dec
cmp
je
sbb
mov
pushf
inc
loope
shlb
pusha
jns
xchg
imul
lods
mov
push
mov
pushf
dec
int
dec
adc
xchg
aaa
stos
and
clc
push
mov
sbb
out
jge
test
int
jno
mov
push
and
cld
aas
aam
ret
aas
dec
sahf
popa
push
int
icebp
or
shr
sub
sub
loopne
aam
aad
push
adc
and
repz
iret
sbb
das
lret
daa
cs
out
imul
xchg
pop
lods
mov
fwait
sarb
icebp
xlat
mov
scas
daa
add
stos
pushf
mov
fistps
outsl
icebp
mov
scas
pop
test
rcrb
mov
mov
es
out
or
cmp
nop
repnz
sbb
push
xor
jnp
outsl
test
xor
lock
filds
das
pusha
loopne
imul
cwtl
jle
imul
xor
insb
push
dec
mov
fldl
sahf
mov
mov
xor
cs
fstl
divb
ja
add
gs
gs
push
mov
push
jecxz
dec
push
fwait
subb
lods
sub
mov
dec
js
mov
sub
xlat
adc
xchg
pop
fmuls
push
xchg
sbb
repz
pop
sbb
test
dec
frstor
loope
add
nop
js
je
jb
sbb
dec
jae
or
aam
movsl
push
pop
andb
fcomps
xor
jno
scas
ja
jns
push
inc
loope
pop
cmp
xor
jns
sbb
mov
cmp
mov
xchg
push
ret
ja
out
movsb
mov
rorl
sbb
dec
ss
jb
pusha
or
jb
outsl
in
movsl
sbb
or
push
fisttps
insb
and
add
and
mov
xchg
insl
and
in
xchg
sti
mov
or
pop
insb
mov
cmpsl
or
sbb
push
fistpll
adc
and
pop
int3
pop
xchg
adc
push
pop
cs
ror
or
idivl
or
aam
sub
or
stos
sub
aaa
loope
dec
push
shlb
and
jae
lea
pop
push
int
call
inc
jge
dec
fimuls
repnz
lret
pop
sahf
and
rorl
mov
stos
jp
dec
jg
mov
notb
loope
xor
and
repnz
dec
in
cmp
mov
leave
popf
jno
sarb
ss
das
cmc
loopne
out
mov
inc
inc
jl
fs
push
cs
sti
std
cmp
pop
mov
add
mov
xchg
lret
rclb
mov
inc
in
arpl
push
repnz
lock
or
mov
sub
push
sbb
mov
pushf
xorl
scas
push
in
inc
test
push
decl
xor
xchg
dec
or
shl
popa
or
cli
imul
iret
mov
dec
daa
int
jg
cwtl
cmp
mov
inc
rclb
decl
xor
mov
add
pushf
xchg
add
sub
pushf
std
adc
fbld
mov
mov
dec
add
ret
push
imul
out
ds
jge
mov
int3
push
and
imul
insl
loop
cmp
dec
dec
mov
out
stc
popf
or
lret
jmp
fwait
loopne
sbb
add
lret
enter
inc
stc
fdivr
mov
and
push
aad
test
call
rcl
xchg
ficoml
push
jmp
push
push
iret
cmp
ret
and
and
mov
divl
mov
xchg
insl
push
xchg
sbb
inc
mov
xchg
cmp
jns
adc
rcrb
jns
sub
dec
lret
lock
jl
jl
or
xor
mov
rorb
xchg
push
out
les
call
pop
cmpsl
out
add
jg
into
leave
mov
adc
call
mov
pop
popf
loop
in
fsubrp
jge
sbb
lret
sbb
pop
das
push
mov
push
or
test
jb
pop
sti
xchg
push
inc
sahf
inc
fadds
rolb
adc
sub
loop
addr16
inc
repz
mov
loop
je
mov
add
rcl
add
cmp
lods
cmp
jge
imul
repnz
fldl
mov
inc
add
shrl
aad
mov
ret
and
pop
icebp
movsl
cmpsb
pop
and
clc
lcall
add
pop
xchg
int
dec
mov
movsb
jl
out
hlt
mov
xchg
clc
mov
aas
int3
dec
jo
sbb
sti
mov
inc
push
xor
jbe
imul
push
xor
push
stos
in
mov
adc
xor
mov
movsl
in
divb
and
mov
push
es
orb
movsb
xchg
xchg
std
lcall
xchg
dec
xchg
aas
cmpsb
dec
sub
xchg
mov
aam
loope
cwtl
add
push
jns
sbb
imul
jno
mov
ret
adc
cld
ret
out
lret
sub
hlt
add
outsl
xchg
dec
mov
cmc
jl
outsl
roll
stos
scas
lods
or
and
push
outsl
add
xor
push
mov
push
test
in
ja
and
outsl
mov
data16
sbb
xor
addr16
addr16
les
leave
negb
and
loopne
sbb
es
ror
pop
fwait
sbb
xlat
and
sti
mull
int3
mov
lds
out
xor
adc
das
jno
dec
mov
rclb
push
mov
cmp
push
outsb
sub
unpcklps
sbb
rol
push
cmpsb
into
scas
push
sub
push
scas
xor
test
jbe
mov
aaa
push
je
testl
rcrl
and
xchg
push
inc
cmp
jge
pop
out
xchg
pushf
xchg
popf
subl
add
sub
mov
cmp
and
mov
mov
testb
cmpb
add
mov
icebp
mov
pop
stc
mov
ljmp
test
jmp
mov
pusha
jno
stos
jge
cmp
subl
jl
adc
xor
cmp
fdivl
enter
bound
xchg
lahf
mov
adc
lds
dec
gs
push
pop
je
xchg
les
mov
mov
ret
ret
call
push
movsb
pop
add
leave
mov
adc
test
sub
mov
enter
sub
add
mov
sub
xlat
pop
aaa
sbb
sbbl
sbb
pop
sbb
xchg
std
cmp
insl
xlat
inc
and
enter
ss
jb
cmpsb
lds
and
mov
ret
cmp
sbb
faddl
rcl
fmull
cld
mov
jecxz
pop
ja
lcall
out
je
pusha
ja
or
or
inc
cmc
cmp
mov
or
push
cltd
sub
into
mov
pop
in
lcall
jmp
stos
lret
inc
pop
push
adc
ja
cli
test
inc
je
aas
out
mov
pop
gs
cltd
addl
mov
sub
adc
stos
ja
in
roll
out
aas
mov
cmp
sub
lcall
std
ja
roll
jl
pop
sbb
or
xor
js
aaa
gs
push
movsb
cltd
add
fdivrs
xchg
test
mov
testb
enter
loopne
fwait
sarl
sti
xchg
cwtl
push
mov
add
jbe
and
int3
jle
pop
in
popf
loopne
mov
rcll
mov
adc
pop
add
mov
stos
int3
pop
in
std
xchg
addb
cmc
add
push
sbb
ss
jo
push
pushf
push
jp
fmull
or
dec
dec
sub
mov
mov
and
repnz
setb
wbinvd
test
xchg
and
out
adc
and
xchg
es
lea
mov
sub
jmp
or
push
out
sub
sbb
xchg
push
frstor
out
ja
push
and
mov
lcall
adc
dec
xor
xchg
fstps
push
scas
lret
push
add
and
and
jl
cs
sub
dec
fiadds
shlb
mov
out
roll
dec
inc
out
or
out
pop
mov
lcall
pop
mov
sub
pop
adc
popf
sub
loopne
push
sbb
scas
cmp
cld
pop
mov
pop
and
fistps
aas
xchg
and
cltd
out
cmpsl
push
and
inc
sbb
cmp
fwait
clc
imul
hlt
sub
mov
in
int
les
pushl
mov
sahf
mov
icebp
mov
mov
adc
or
jp
sbbb
ret
jae
inc
adc
mov
movsl
xchg
mov
xor
popf
rol
add
in
insl
mov
les
shr
and
aaa
repz
loop
loopne
imul
or
sahf
cmpsb
adc
mov
shlb
jb
dec
inc
lahf
daa
fwait
xor
aas
popf
jle
outsb
in
jo
notl
je
repz
popa
mov
jne
xor
add
loope
and
addr16
xor
shlb
push
push
sti
ret
mov
ret
movsb
imul
xchg
sub
xchg
imul
mov
lods
push
sub
mov
stos
pop
leave
xchg
aad
popa
or
jae
out
daa
adc
lods
cmpsl
in
inc
clc
das
and
add
into
push
or
sbb
int
xchg
in
or
icebp
fidivs
test
push
and
mov
dec
fdivrs
in
adc
divb
xor
lea
fisubrl
add
sub
cmp
ds
and
and
mov
cmp
push
dec
jae
jle
push
ja
sbb
lret
out
sub
sbb
sti
mov
je
inc
or
imul
loope
fdivrl
fildll
jae
scas
lock
aam
jae
cmp
rcll
mov
cld
sub
xor
xchg
jl
pop
push
xchg
dec
mov
or
ds
jg
cmp
ret
enter
add
rcrl
add
in
iret
imul
cmp
in
popf
fs
jmp
fists
sbb
popf
lock
int3
fs
mov
push
lahf
pop
sub
sbb
addr16
and
in
stc
add
dec
push
es
pop
xchg
inc
shl
inc
roll
out
mov
loop
sbb
pop
decb
rol
insl
sbb
sahf
jae
push
into
dec
and
loop
xlat
inc
jp
cmpb
pusha
jne
in
cmp
mov
loop
aam
adc
push
mov
cmp
loope
sub
fmuls
mov
cmc
mov
std
cmp
mov
inc
push
pop
mov
inc
mov
inc
int3
pop
jae
mov
cs
inc
popa
add
mov
aad
stos
push
out
dec
je
xchg
mov
out
sti
mov
mov
inc
sbb
enter
push
or
fbld
arpl
sub
sbb
mov
push
push
into
dec
jmp
or
fs
pop
arpl
lods
mov
lea
xchg
lcall
outsl
xchg
inc
dec
orb
cmp
sub
mov
jnp
mov
mov
inc
push
scas
lock
xchg
dec
in
jno
dec
mov
pop
jno
xchg
push
les
movsl
test
pop
call
in
sub
mov
jb
iret
cmp
mov
sti
jp
pop
push
cmpsb
xchg
jae
cs
stos
fcoml
mov
fcmovu
fcomi
int3
xchg
lea
push
push
xor
nop
mov
adc
cmc
addl
loop
stc
jecxz
lods
push
inc
insb
mov
jbe
sbb
cmp
push
testb
pop
lock
inc
shl
sub
push
lcall
cmc
push
test
jo
lret
and
lret
jo
cld
cmp
push
movq
rcrl
and
mov
and
int3
popa
adc
dec
cmp
pop
pop
shlb
test
add
punpcklwd
fs
pop
into
or
ret
push
pop
inc
stc
sbb
call
sarl
mov
fsts
test
pop
fcompl
dec
repz
int
cwtl
xchg
mov
test
mov
push
xchg
sbb
push
xchg
test
in
mov
or
fmull
sbbb
cltd
les
pop
outsl
sahf
jecxz
fisubs
pushf
movsb
hlt
ret
loopne
shll
in
arpl
xor
mov
mov
orl
jno
mov
pop
mov
mov
fnclex
movsl
int
sbb
jle
sbb
imul
sarl
xchg
movsl
sbb
rorl
cmp
popa
cmp
popa
xlat
and
xchg
dec
push
xchg
push
lret
cmpsl
fdivrl
lods
add
xor
mulb
cli
inc
mov
bound
imul
sub
iret
and
ret
push
adc
orb
jg
rclb
sbb
xchg
fwait
les
into
jg
sbb
andb
adc
add
cltd
adc
cmp
repz
in
dec
xchg
jle
add
push
int
in
pop
or
push
push
stos
jae
pop
cmpsl
sub
jbe
push
stc
pop
dec
lret
outsb
inc
ljmp
int
and
mov
xchg
push
lds
roll
jb
mov
pop
and
fdivs
xchg
jp
inc
fidivl
sub
mov
push
jnp
mov
push
mov
imul
dec
movsl
fwait
lods
ret
cli
add
xchg
adcb
outsl
xchg
add
addr16
into
mov
test
bound
pop
sbb
mov
mov
lods
or
mov
insl
xchg
movsb
filds
sub
js
loope
push
les
jmp
vcmpps
jle
int
or
add
out
and
pop
ret
pop
mov
lock
push
out
ds
mov
xor
shlb
mov
push
pop
jne
sarl
in
and
mov
andl
jle
jp
lods
dec
or
movsb
pusha
es
mov
out
mov
jp
loope
xor
push
push
dec
int
subb
mov
cmc
sub
xchg
jb
stc
xchg
dec
or
imul
xchg
sub
xor
jl
add
mov
mov
mov
mov
cs
pushf
fistpll
inc
and
out
int3
dec
cmpb
adc
push
or
sbb
adc
inc
and
mov
sbb
sub
push
pop
push
sbb
daa
jae
cmp
jmp
dec
or
stos
popa
loope
rcll
jae
jmp
ljmp
sbb
clc
mov
iret
push
cltd
xor
lahf
mov
sbb
arpl
jle
lret
pslld
ja
lea
sbb
sub
in
push
sbb
in
jne
pop
testb
mov
std
loop
jp
xchg
fsubrs
mov
jns
push
push
mov
test
iret
vpshufd
loopne
dec
and
dec
mov
mov
fnstsw
cmpsb
adcb
into
out
in
mov
push
jge
stos
mov
or
in
daa
mov
jle
adcb
aas
jl
sub
bound
aas
arpl
add
xlat
mov
sub
je
mov
xchg
push
test
and
bound
div
jnp
pop
nop
cmp
xchg
mov
test
popf
jo
adc
rcrl
or
cmp
mov
insb
cmp
dec
mov
out
lcall
hlt
sbb
mov
call
xchg
sub
outsl
jae
sub
rol
xlat
test
aam
sub
mov
stc
das
je
mov
psrld
or
cmp
pop
pop
in
ds
loopne
in
jns
lds
mov
or
mov
or
pop
fldt
daa
cli
jns
push
adc
outsl
lds
into
insb
xchg
xlat
dec
or
dec
mov
arpl
pop
test
call
sti
in
fsubr
aam
xor
add
jnp
orl
pop
sbbl
mul
add
stos
mov
sahf
aad
les
jl
adc
and
mov
push
mov
movsl
push
mov
out
mov
push
in
das
pop
adc
cmp
out
mov
inc
out
jae
cmp
xchg
ficomps
stos
adc
cltd
inc
addl
and
int3
jo
cld
adc
mov
shll
sarb
loopne
or
and
mov
and
mov
cmp
and
push
ljmp
adc
push
insb
rol
ja
push
lock
aam
inc
xorb
inc
shr
push
push
xor
push
out
ret
jmp
fsubrl
cmp
das
xor
and
mov
imul
mov
jnp
scas
hlt
std
dec
adc
ret
test
incb
push
fsubl
push
decb
adc
jae
jnp
xor
and
fs
pop
sub
clc
insb
mov
dec
insb
xchg
pop
fwait
test
es
incb
subl
lock
mov
decb
ljmp
je
add
dec
repnz
sahf
dec
ret
sbb
add
sub
pop
stc
pop
sub
sbbl
or
enter
push
sub
fistps
push
out
push
pop
mov
les
push
std
sub
adc
dec
outsl
in
sub
mov
sti
xchg
inc
fdivl
fsubs
xchg
in
inc
sub
in
push
dec
or
ret
aad
test
jecxz
shlb
lcall
sub
repnz
jl
ja
adc
clc
pop
movsb
lods
outsl
jp
leave
jecxz
imul
jbe
inc
push
outsl
adc
test
rcrl
push
adc
addl
scas
cltd
mov
ljmp
lds
lret
jmp
dec
lret
out
jle
lods
clc
inc
mov
sub
stos
fs
ds
cwtl
jmp
inc
push
fcmovnb
pop
mov
ja
mov
das
jmp
jecxz
daa
and
push
or
cltd
fld
insl
mov
or
jns
movsl
mov
das
sti
sbb
xor
pop
repnz
pop
les
pop
fsubrs
add
and
mov
mov
sarl
xor
shl
add
mov
lcall
dec
and
lret
lea
pop
sub
inc
cmc
cmp
inc
sub
stc
lret
rorl
cld
sub
lahf
negl
lcall
pop
cmpl
cmc
js
and
xchg
xor
in
push
cltd
ret
fucom
insl
cmp
mov
outsb
mov
cmp
cmpsb
movb
inc
in
idiv
add
add
int3
push
xchg
mov
sbb
xor
arpl
sbb
dec
sub
loop
inc
mov
clc
div
mov
nop
sub
cwtl
dec
sub
mov
mov
scas
jecxz
sub
sbb
adc
cmp
sti
out
add
ret
sbb
lods
mov
jo
jg
inc
push
cld
push
jb
pop
mov
dec
in
cmpsl
dec
test
es
pusha
mov
sahf
cmc
notl
lcall
sbb
and
idivl
jb
fisttps
cmp
jae
icebp
cltd
push
dec
adc
call
jp
cmp
mov
outsl
sub
cmp
ja
mov
rolb
xor
sub
or
adc
popf
push
jl
add
stc
int3
ja
out
fnstsw
mov
jb
test
and
mov
nop
mov
jo
push
je
xchg
mov
nop
mov
inc
xor
iret
bound
je
jno
daa
push
cmp
xchg
pop
push
mov
mov
mov
sub
lcall
or
cwtl
test
and
xchg
decb
subl
or
sti
mov
pop
jmp
cli
sbb
xor
push
inc
sbb
loop
cmp
xchg
flds
hlt
xor
cmp
fnsave
loop
and
rcl
repz
loopne
sub
cld
rcrl
ret
mov
pusha
ja
movsb
jle
test
sub
jl
imul
push
xchg
cmp
push
mov
or
popf
outsl
mov
daa
jne
xor
bsr
jno
jb
andl
xor
xlat
mov
aaa
popa
cs
js
and
mov
das
mov
inc
ret
mov
mov
cmpsl
push
std
lret
mov
cmp
stc
jbe
jmp
jo
imul
mov
add
xchg
fimuls
inc
lods
in
int3
adc
test
xor
pop
call
cmp
rorb
enter
jp
mov
dec
or
or
sahf
insb
mov
sbbl
and
hlt
xchg
in
gs
ret
test
pop
sbb
add
push
das
xor
stc
sub
daa
lret
fdiv
repnz
inc
negb
xor
dec
xchg
jecxz
add
xor
push
and
arpl
hlt
fldenv
je
cmp
pop
ds
mov
inc
addr16
jmp
and
mov
sub
pop
in
pop
cmp
xor
jns
daa
mov
in
mov
and
pop
dec
inc
mov
mov
imul
frstor
sub
lds
in
pop
sti
pop
sbb
lock
aas
ds
subb
mov
dec
shl
mov
or
test
adc
mov
add
adc
jbe
sbb
and
push
push
ret
mov
enter
pop
mov
cmp
imul
mov
xor
cltd
push
idivl
xchg
or
xchg
cwtl
in
cmp
pop
jb
fidivrl
or
cmp
add
sub
mov
lock
pop
pop
xor
ds
andl
test
mov
das
lret
rcl
pop
fcomi
mov
out
or
loop
inc
xor
push
ret
jne
jb
stos
adc
jb
push
pop
adc
and
sbbb
cwtl
jae
adc
sub
pop
sbb
imul
push
jp
inc
mov
mov
iret
sub
xor
add
mov
insl
pop
push
jecxz
mov
ja
dec
pop
mov
add
xor
ljmp
bound
mov
pminub
fstl
add
pop
shll
loopne
mov
xchg
aad
out
mov
xchg
mov
add
mov
sbb
jle
mov
imul
int
js
cmp
sbb
pop
sub
jb
ljmp
jp
lahf
int3
hlt
and
and
loope
rorb
adc
rcll
popf
int
sub
push
sbb
or
fisttpll
jmp
int
std
mov
inc
js
xchg
mov
sbb
pop
ret
mov
sbb
push
cld
jns
movsl
adc
in
mov
pusha
jne
and
stc
xor
inc
or
mov
sbb
test
jg
or
into
xchg
adc
inc
lds
test
adc
jne
lret
sbb
jecxz
xchg
repnz
repz
gs
mov
jmp
clc
and
push
adc
cli
call
inc
ds
movsl
mov
or
jo
in
fidivl
sahf
out
jmp
jmp
push
pushl
add
dec
lods
data16
aaa
lock
cltd
fs
ss
cmpxchg
push
cmp
mov
pop
mov
or
cli
cmp
rcr
jl
sbb
cmp
lret
subb
test
les
push
mov
dec
das
pmulhw
xchg
jge
mov
adc
cmp
loope
pop
fcmovbe
or
fsincos
adcb
and
es
int3
and
pushf
pushf
mov
pop
inc
repnz
in
stos
add
pop
int
inc
int3
add
movsl
fmuls
jg,pn
xchg
mov
dec
sar
cld
icebp
std
jle
push
dec
sar
and
cmp
pop
add
pop
push
in
ret
push
ror
pop
or
addb
push
cld
pop
mov
ja
mov
add
adcl
sbb
sub
test
adc
jmp
fimull
aam
fs
mov
enter
cmp
add
inc
mov
or
xchg
and
cmc
loop
cs
les
push
pusha
lods
mov
inc
push
xor
adc
dec
pop
mov
jbe
mov
adc
arpl
out
jmp
or
cmpsb
pop
idivb
divb
dec
fstpt
jne
jno
sub
xchg
test
cli
fisubl
xchg
icebp
mov
sbb
inc
inc
adc
jge
out
cmp
xchg
ret
mov
inc
inc
push
cmp
out
xchg
sbb
out
mov
cmp
data16
rclb
scas
pop
out
shl
xor
std
sbbb
sbb
aam
adc
and
or
xchg
out
and
add
mov
addb
call
stos
mov
add
std
out
bound
dec
scas
dec
inc
and
sub
lds
pusha
add
xorl
popf
jg
jl
cs
in
fistpll
and
in
imul
mov
test
movsl
xchg
and
mov
imul
pop
popa
cld
iret
shll
mov
ss
jge
hlt
jg
xchg
shll
cmc
pop
ret
inc
xchg
sub
mov
popf
inc
in
xchg
or
cmp
xor
inc
arpl
loope
into
mov
add
loopne
push
mov
inc
popf
adc
call
pop
in
ds
mov
stos
xorl
add
inc
pop
mov
js
stos
dec
push
push
mov
push
pop
frstor
adc
or
sahf
inc
mov
test
mov
sbbb
jecxz
xor
ja
andl
in
pop
jbe
and
sub
pop
mov
and
inc
jle
ret
loope
sbb
push
jle
dec
jno
push
cwtl
adc
cmp
testb
lahf
jb
repnz
mov
mov
shrb
mov
push
and
dec
imul
lahf
xchg
mov
mov
clc
pusha
fs
sbb
std
inc
mov
jb
imul
sarb
xchg
and
aad
xor
xor
nop
sbb
rcl
pop
xchg
sub
mov
sti
mov
mov
sar
pop
outsl
dec
inc
push
jle
shll
cwtl
sub
loope
push
dec
cltd
out
mov
cmpsb
clc
mov
push
push
int3
xor
jnp
mov
mov
pop
icebp
mov
dec
xor
and
in
loope
dec
data16
or
mov
xor
imul
xlat
shl
pop
movsb
filds
or
stc
push
adc
jns
addr16
fisttps
lock
popf
xor
lcall
je
cltd
mov
xchg
mov
lcall
stos
shlb
imull
add
clc
jg
inc
rcrl
mov
mov
into
and
push
xchg
xchg
fst
push
pop
ficompl
movb
loop
xor
or
loop
lret
out
aas
loop
jle
lea
jne
or
hlt
loope
pop
add
push
int3
fmul
or
xor
xlat
xor
jp
arpl
lret
lahf
mov
fwait
sub
mov
movsl
sbb
bound
pop
jge
push
lea
mov
push
and
mov
push
lcall
pop
or
or
out
pop
mov
clc
andl
cmpsl
test
ss
push
inc
and
je
sub
inc
cld
aaa
sahf
push
cs
ds
in
scas
scas
and
xchg
bswap
adc
mov
sub
mov
jg
movsb
shrl
pop
inc
dec
inc
es
push
out
fldenv
dec
adc
test
xor
inc
je
movsl
jp
adc
lahf
mov
mov
push
cs
add
push
outsl
lret
imul
ss
mov
add
jl
out
ret
push
out
aas
pop
xor
xor
xchg
mov
enter
cmp
jge
mov
fldenv
and
dec
shlb
cmp
xchg
mov
xor
sbb
clc
in
rolb
lret
cli
push
orl
jle
dec
in
jle
push
sti
cmp
mov
in
cmp
std
lods
fdivrl
idivb
jne
xor
lods
push
sub
or
and
xor
fnstcw
mov
push
jge
and
jge
gs
cld
xor
out
xor
xorb
lahf
xor
jp
sub
fs
test
lahf
sahf
mov
push
insl
cmpsb
sub
out
mov
cmp
adc
add
sti
cmp
sub
notb
loope
ret
jnp
and
dec
stos
lock
enter
sbb
js
or
jl
jmp
add
mov
xor
std
sar
pop
xchg
loop
xchg
cmp
pushf
push
inc
pop
lret
js
mov
bound
outsb
hlt
push
outsb
adc
stos
jmp
je
fdivrs
cmc
add
ud2
das
xor
sub
xor
js
jbe
call
jmp
scas
sbb
xor
jns
mov
movsb
push
jbe
fsts
adc
fsub
mov
fistpl
xchg
dec
xchg
cmc
ss
adc
cli
jae,pt
in
iret
lock
sti
and
cli
jecxz
xchg
cmpb
push
jae
xlat
push
lcall
dec
xchg
dec
mov
inc
in
ja
push
sti
push
adc
imul
inc
and
cmc
and
insl
pop
test
sub
insb
sub
mov
cmpsl
popf
xor
scas
rcrb
or
call
push
mov
xchg
xchg
daa
and
jae
and
cmp
movsl
pop
mov
dec
mov
sub
cmp
jns
add
cmpsb
insb
fwait
cmp
push
mov
idivb
mov
fisttpll
sbb
dec
aas
and
testl
scas
ljmp
punpckldq
sbb
fistl
xor
stos
jo
mov
dec
mov
into
add
xor
lahf
and
fistl
dec
popf
xor
fmuls
pushf
sub
aas
mov
push
jne
cmpb
push
out
lods
pop
pushf
stc
ret
xchg
cmp
pop
cmp
add
icebp
xchg
or
cmc
outsb
les
mov
push
icebp
pop
pop
ret
aas
mov
jecxz
push
ja
and
jne
dec
xor
mov
jbe
je
insb
out
xlat
inc
in
das
fwait
in
imul
pop
push
cmpsb
pop
pushf
loope
lret
pop
mov
test
cmp
jns
xor
movsl
mov
out
addr16
dec
pop
jae
popa
or
sub
leave
push
data16
roll
ljmp
rcll
jl
xor
repnz
stc
mov
ret
pusha
inc
stos
mov
sbb
aad
jle
lret
gs
pop
and
adcb
sbb
and
push
out
int3
add
push
push
jne
shll
jns
push
or
cmpsb
test
and
fs
jo
inc
cmp
mov
pushf
fisttpll
test
mov
cmpsl
daa
hlt
mov
and
pop
and
daa
cld
rorl
and
popf
rcl
sub
jg
push
adc
loope
loopne
out
cli
fldenv
inc
mov
stos
push
iret
outsb
pusha
cmp
add
xor
dec
inc
mov
adc
or
jl
rorl
push
jle
xlat
lea
popa
pop
and
mov
mov
and
subl
icebp
outsl
dec
lods
es
mov
std
and
outsl
ret
fbstp
cltd
add
push
pop
int3
jns
sahf
push
insb
andb
jns
sti
push
sahf
jo
jnp
pop
dec
sbb
in
cwtl
mov
and
repnz
stc
pop
mov
jmp
jmp
faddl
fwait
add
xchg
xorb
lods
mov
gs
jmp
out
sbb
sub
leave
adc
int3
mov
push
lret
xchg
lret
aas
lret
lea
lea
push
mov
xchg
adc
sub
mov
and
test
pop
mov
movsb
rorl
negb
sub
dec
fildll
lods
mov
cmc
cmovns
lds
mov
pop
sub
lcall
mov
adc
test
mov
push
push
jno
xchg
int
stos
sbb
adc
push
shrb
test
pusha
mov
adc
fs
lahf
ss
jne
push
push
sub
in
xchg
add
adc
adc
imul
movsl
adc
dec
push
cmpb
test
imul
call
xor
in
std
fsub
aam
sbb
movsl
sti
mov
movl
xchg
dec
lret
lret
notb
aas
lret
mov
jno
into
sbb
dec
testl
fs
xor
imul
cld
ds
add
popa
cli
add
jne
jg
ret
repnz
lretw
cmc
cltd
in
pop
mov
sbb
pop
in
loop
leave
inc
adc
mov
test
mov
mull
sbb
jp
mov
imul
aas
loope
mov
sub
dec
inc
clc
adc
lds
xchg
mov
sub
dec
loopne
in
js
mov
cmpb
push
arpl
rolb
mov
je
mov
pop
mov
pop
ret
xchg
sbb
adc
popf
scas
cmp
mov
xchg
dec
pop
shlb
test
xor
mov
mov
lahf
add
push
movsl
fs
mov
xorl
jmp
lcall
stc
cmp
lret
mov
add
fidivs
or
fucomip
imul
mov
pop
out
inc
push
sbbb
xchg
xchg
cld
jno
adc
mov
dec
leave
pop
out
rcrb
lods
sbb
mov
inc
sbb
xor
inc
jns
mov
jle
jno
mov
daa
mov
lods
das
out
arpl
sbb
dec
mov
out
enter
pop
dec
jmp
dec
je,pn
mov
jle
dec
cmp
mov
ja
into
testb
fidivs
mov
dec
adc
add
pop
fidivrs
inc
mov
ret
jecxz
sub
sub
push
dec
cmp
push
subb
fdiv
imul
lock
xlat
inc
fsub
xchg
and
jmp
jl
and
fwait
jmp
adc
mov
sub
dec
cmp
push
add
pushf
sub
inc
stos
mov
xor
add
mov
popa
xchg
jbe
pop
popf
push
pop
and
xlat
sbb
in
xchg
xorb
fimuls
push
jmp
mov
enter
shlb
jb
lcall
mov
shlb
push
xor
fildll
dec
or
movsl
xchg
cmp
push
std
lods
andps
pop
ljmp
cmpsb
outsl
cmc
inc
loope
call
cmp
mov
mov
xbegin
ljmp
mov
cmpsl
dec
sbb
lret
in
xchg
lahf
cmc
mov
add
pop
or
movsb
popa
fdivl
test
outsl
mov
fstpl
sbb
imul
and
stc
paddw
mov
cld
cs
orb
scas
popf
fadd
mov
add
dec
adc
adc
cmpsb
aad
fwait
adc
sti
inc
adc
pushf
call
inc
ja
insl
adc
sub
out
aas
xchg
int3
repnz
mov
pop
or
nop
sbb
loopne
xchg
jle
incb
sub
or
imul
rclb
fists
icebp
int
mov
cmpsb
addb
cmpl
jne
push
cmpsb
mov
divl
lea
mov
je
mov
mov
adc
out
loop
rol
lcall
das
cli
mov
ja
sub
push
cld
push
ret
nop
inc
sbb
push
mov
testl
imul
xchg
xor
sbb
inc
jl
sbb
push
movsb
add
fidivrl
dec
imul
fstpl
mov
jne
jne
out
dec
sub
pop
cmpsb
repnz
pop
stos
lods
aas
test
mov
push
jg
cmp
and
mov
int3
mov
jl
lahf
imul
jg
call
fcom
lock
mov
inc
push
addr16
outsl
mov
and
repnz
aas
pop
mov
loop
ss
fst
push
xchg
push
test
mov
cmp
mov
outsl
fisttpll
sbb
pop
loope
std
sbb
sub
jne
adc
mov
mov
cmc
adc
xchg
mov
or
dec
mov
ret
or
aad
jbe
mov
ja
sub
sub
aaa
sarl
repnz
xchg
outsl
mov
sarb
lret
xor
cli
or
or
es
divl
bnd
mov
out
and
fucom
fmul
out
mov
push
dec
pusha
loopne
inc
and
pop
inc
lock
dec
imul
jl
fcomps
xchg
data16
and
sbb
or
mov
sbb
cmp
push
inc
fwait
mulb
mov
xor
insl
bsr
push
movsb
in
sbb
mov
fisubrs
clc
inc
pop
and
mov
mov
sbb
arpl
mov
mov
or
lcall
mov
andl
or
dec
sbb
repnz
add
les
xchg
out
add
sbb
and
cmpsb
repz
mov
cmp
push
mov
lret
lcall
cmpsl
fwait
xchg
cld
inc
mov
stos
popf
xchg
mov
pop
fadds
das
add
dec
mov
adc
icebp
cmc
daa
push
push
push
mov
jnp
aam
jle
fmulp
mov
or
in
add
scas
pop
sub
and
mov
xchg
mov
dec
push
pushf
or
pop
aas
fildl
xchg
icebp
imul
inc
dec
xor
js
sahf
jnp
ret
nop
jmp
xor
cs
cmc
mov
mov
sbb
jmp
clc
mov
js
stos
aad
push
sub
cmp
inc
mov
xchg
movsl
push
xor
or
push
inc
lret
and
dec
sbb
ret
in
xchg
mov
jle
insb
je
addr16
lock
jecxz
ljmp
ret
or
in
adc
cmc
ds
into
mov
cmpsb
adc
cmp
pop
jns
andb
xchg
and
loope
lock
push
xchg
mov
inc
xchg
mov
jne
popf
jo
call
or
cli
aas
xchg
or
xor
lret
ja
scas
sbb
cmovno
mov
stc
cmp
lds
test
sub
lds
mov
pop
xchg
xor
inc
loope
adc
stos
push
push
add
add
movsl
xchg
mov
dec
scas
stos
pusha
cmp
jmp
pop
cmpsb
testb
icebp
out
cli
xchg
cwtl
jno
inc
sub
inc
pop
mov
orl
sti
jb
repnz
aas
rolb
fidivs
je
inc
gs
in
idivl
jo
inc
mov
into
mov
sbb
push
sub
inc
std
lods
jle
popf
mov
in
lods
aaa
fdivrs
lods
jmp
std
loope
xor
push
inc
jl
scas
jae
rcll
jb
mov
es
add
sti
xlat
aam
cmc
add
in
popa
pushf
les
jae,pn
popa
shlb
loop
sbbb
nop
shl
inc
insb
sti
cmpsl
dec
pop
and
lods
xor
xchg
jne
adc
ffree
xchg
imull
mov
mov
pop
and
test
in
add
or
mov
sub
cmp
shll
jmp
out
les
pusha
insb
xchg
js
dec
faddl
bound
cmp
mov
aaa
bound
out
lea
push
negl
cmp
xchg
mov
sbb
jnp
jo
mov
ss
xlat
or
sbb
in
inc
cmp
jp
dec
outsl
test
test
mov
test
lock
mov
mov
int
lret
mov
sbb
ret
std
xor
in
mov
das
push
fildll
dec
push
lahf
xchg
mov
or
in
and
or
daa
jne
imul
inc
aad
cld
xlat
mov
or
dec
mov
mov
insb
aam
cmp
mov
cmpsl
loope
and
std
cld
ss
hlt
lds
ja
popa
ret
pop
jl
mov
fcomps
xorb
int3
repnz
mov
ja
jbe
scas
lods
adc
sahf
dec
int
or
scas
leave
shrb
add
mov
mov
movsl
andl
adcl
in
push
bound
addr16
bound
fdivrs
leave
loope
cmpsl
jl
jns
cs
ds
or
xchg
jmp
xlat
xlat
cli
bound
daa
shrl
int
mov
push
adc
adc
cmp
pusha
cmp
push
cs
enter
mov
cld
inc
fstpt
add
nop
mov
jp
xor
out
popa
loope
push
test
mov
dec
mov
sbb
imul
and
xor
dec
cwtl
add
and
push
mov
pop
jge
cmc
push
mov
push
inc
dec
adc
jp
out
mov
xlat
xchg
data16
cmp
cmpsb
mov
icebp
mov
inc
bound
lea
sub
ret
inc
cmp
jmp
adc
icebp
sbb
in
and
dec
mov
push
std
popf
movsb
push
pop
enter
scas
movsl
jo
sahf
jecxz
inc
mov
or
sub
leave
dec
sar
arpl
int3
outsb
jl
mov
js
sub
mov
xor
jl
inc
xorb
jb
xor
lahf
cmp
call
in
fildll
fdivrl
pop
adc
lret
push
lods
cmp
rclb
ljmp
mov
movsl
stc
scas
int3
lcall
dec
mov
outsl
jne
rolb
addb
push
addr16
mov
sub
adc
mov
popa
pop
inc
fucomip
xchg
pop
test
in
imul
push
insb
xchg
cli
scas
enter
sbb
pop
dec
mov
rolb
aad
mov
mov
jmp
data16
fsubrl
loop
mov
lods
icebp
xchg
mov
es
pop
add
push
and
aad
jo
push
fcmovu
mov
lret
in
adc
adc
sbb
cmp
inc
or
es
xorb
or
ret
fcoml
jp
jbe
xchg
mov
mov
inc
inc
cmp
aaa
aam
adc
js
out
sti
les
xor
mov
xchg
rclb
negl
xchg
xlat
pop
xor
xor
scas
rorb
inc
mov
ja
icebp
fnstcw
jle
mov
push
outsb
iret
outsb
inc
add
in
and
into
push
mov
mov
pop
std
mov
push
sbb
jne
xorb
ror
not
cmp
shl
fidivl
sub
push
aas
inc
mov
rclb
mov
jp
lahf
lahf
ficoms
gs
or
cmpsb
pop
out
xchg
add
test
out
in
bound
or
push
pusha
xor
and
add
xor
in
fbld
pop
sbb
cmp
imulb
adc
inc
int
in
dec
and
push
outsl
lea
test
mov
pop
mov
in
xchg
notl
ss
jecxz
fsubs
test
xchg
dec
insl
jne
cmp
mov
call
or
add
push
out
inc
rorb
mov
ja
sbb
ror
mov
lock
pop
push
mov
push
adc
sbb
sti
pop
in
lcall
pop
lea
aad
std
fcoml
les
dec
cmp
xchg
sti
mov
xor
jp
cmpsb
mov
scas
es
sub
xor
pushf
fdivr
mov
cs
mov
out
enter
mov
cmovo
mov
sub
arpl
in
scas
pop
push
pop
bound
das
int3
and
push
mov
cmpsb
xchg
sbbb
jg
xchg
push
pushf
jl
sub
mov
xor
lret
xchg
mov
sub
push
xchg
xor
repz
notl
xchg
pop
ljmp
ss
sub
push
cwtl
xchg
xchg
stos
das
pop
jno
roll
push
sbb
pop
adc
ds
loop
stos
jne
cld
ret
movsb
push
dec
dec
sub
xor
ss
xchg
dec
stos
ds
push
cwtl
cli
xorb
sbb
in
jae
les
xchg
dec
fbld
mov
xchg
cmp
ja
push
mov
add
lock
cmp
dec
imulb
movsb
rclb
ret
inc
push
mov
fldt
adc
enter
jb
inc
mov
fsub
fcmovnb
sahf
inc
pusha
cmp
adc
nop
ljmp
stos
das
fwait
adc
mov
cs
rcrl
fs
insl
je
adcl
xrelease
lods
es
mov
or
mov
ss
cmp
outsb
movsl
out
push
jne
cmp
fbld
dec
or
scas
cmp
lods
aas
adc
icebp
xchg
sub
sarl
jne
fadd
xor
outsb
pop
idiv
sub
fcmove
and
jp
and
cmp
aaa
fistps
subl
fcmovb
pop
pop
test
mov
nop
in
bound
lahf
dec
scas
adc
in
mov
add
inc
pop
ret
push
push
jg
hlt
push
fsubrs
insl
rolb
cltd
int3
add
jnp
mov
mov
shlb
push
lods
mov
in
pop
pop
xor
imul
mov
xchg
leave
cmpsl
gs
jns
push
lods
add
into
cmc
pop
pop
in
cmp
imul
add
fnsave
mov
push
cld
fdivrl
test
js
adcb
les
xor
sub
loop
lret
out
nop
dec
mov
cmp
xchg
loop
cmpsb
out
or
movsb
ljmp
mov
sub
sub
mov
xor
shll
sub
xchg
cltd
mov
fwait
out
add
sbb
dec
push
sbb
int
mov
xlat
mov
outsl
test
mov
rcrb
inc
aas
cmpsl
mov
mull
stos
mov
wbinvd
arpl
rcrl
xchg
ss
inc
es
inc
sub
xchg
adc
in
scas
mov
repz
test
xchg
test
adc
lea
mov
imul
lds
ror
cld
pop
xchg
xchg
in
rorl
std
sbb
fidivl
repz
scas
push
jno
inc
push
jns
fcmovnb
negl
enter
orb
mov
daa
bound
popa
shll
iret
pop
pop
xor
pop
cmp
loope
dec
scas
sarl
dec
cld
push
lds
aam
mov
xchg
mov
cli
xor
xchg
arpl
les
or
mov
xor
std
lock
ret
add
mov
bound
cmp
mov
outsl
dec
das
lea
out
or
push
sbb
aas
and
sub
sbb
out
out
mov
inc
pop
push
iret
dec
int3
xchg
inc
lcall
or
push
insb
add
in
add
ret
mov
push
cs
jecxz
pop
sbb
and
pop
cmpsb
out
pop
mov
push
cmc
lea
into
jp
je
or
push
add
mov
push
push
lret
inc
push
lds
push
scas
sbb
or
mov
mov
jb
loop
fiadds
insb
dec
xchg
rep
jp
push
mov
mov
mov
sbb
shrb
sti
adc
lcall
je
cmpsl
in
push
sahf
aas
lahf
adc
fimull
out
sbb
ficoml
lret
lret
in
call
inc
sub
mov
add
sarl
add
flds
fildll
ss
adc
dec
loopne
mov
mov
mov
shlb
push
andb
jle
rcr
mov
xor
dec
sbb
jnp
adc
les
lods
mov
ljmp
mov
and
push
movsl
movsb
add
fisubrs
test
rorl
inc
xchg
inc
es
or
retw
and
sub
jg
xor
loop
leave
popa
xchg
cmp
insl
mov
cmp
cmpsl
add
test
dec
lsl
rcl
mov
mov
jb
imul
pop
mov
test
xor
repnz
jl
es
xor
ror
icebp
xor
or
jmp
movsl
leave
call
jge
seto
inc
fsts
fwait
les
add
movsl
dec
not
jecxz
mov
mov
int
mov
xchg
jo
in
sbb
inc
xchg
imul
inc
mov
jmp
jecxz
jo
xchg
orl
xor
sub
inc
adc
xor
fistpl
cli
mov
xlat
negl
mov
aad
or
inc
cs
ror
outsb
sub
sub
xchg
rolb
adc
gs
mov
stos
cmpsl
pop
mov
jle
add
repnz
inc
shlb
xchg
mov
inc
inc
lcall
push
loope
out
sbb
int3
xlat
outsb
and
repnz
repz
mov
gs
or
test
nop
and
std
popf
xchg
and
scas
push
movsl
hlt
enter
ja
jbe
cmp
jmp
pop
xchg
cs
dec
pop
cmpb
pop
cltd
cmp
in
sbb
ss
push
push
dec
arpl
and
popf
fmuls
fidivrs
fcomps
fidivrs
mov
pop
or
xor
arpl
and
pop
mov
sahf
sbb
mov
hlt
inc
in
and
xchg
xor
and
mov
shlb
mov
lods
jo
jns
xchg
xchg
cld
mov
lods
mov
push
pushf
flds
xor
inc
punpckhwd
nop
pop
aam
xchg
fsubl
push
mov
mov
test
push
push
frstor
lahf
sti
int
cld
movsb
and
xchg
stos
pop
jo
adc
ja
mov
and
insl
jl
lcall
inc
cmp
adcb
int3
cmc
dec
xchg
pop
push
inc
xchg
adc
mov
nop
pushf
subb
je
inc
lea
rorl
fsubl
push
xchg
pop
imul
dec
int3
and
xor
pop
decb
sub
in
fwait
outsl
xchg
jmp
cli
pop
cmp
sbb
pop
cmc
out
fsubrp
cmp
pop
fwait
and
sub
jne
idiv
ljmp
repz
lahf
mov
ljmp
dec
and
in
pop
mov
lret
lods
sbb
pop
notb
inc
test
sbb
lahf
add
movsb
and
jle
pop
nop
mov
cmpsb
push
out
jo
mov
outsl
and
or
sbb
dec
pushf
adc
lahf
adc
fs
loopne
xorb
cmc
pop
mov
out
scas
mov
movsb
test
into
inc
lods
mov
std
int
xchg
fnstsw
mov
xchg
mov
out
ljmp
into
sbb
call
dec
loope
sub
fsubs
xchg
leave
adc
insb
scas
cmp
adc
insb
adc
aaa
das
mov
xchg
and
and
loop
cld
inc
fs
repnz
gs
cltd
test
lcall
rclb
mov
out
xchg
lds
ljmp
pop
or
leave
ret
shrl
ret
pop
mov
hlt
xor
out
add
or
mov
jb
dec
xchg
sub
outsl
push
lods
sbb
data16
mov
sbb
mov
adc
or
movsl
cmp
xchg
sahf
cmp
adc
insb
fnsave
orb
mov
pop
xlat
insl
in
inc
mov
add
pop
stos
lods
and
dec
shlb
push
push
test
jl
cmpsb
jns
xchg
cs
repz
and
ja
push
mov
add
mov
mov
inc
mov
aam
pop
dec
cmpsl
int3
pusha
sbb
fidivs
enter
adc
test
stos
std
inc
sbb
in
mov
gs
pushf
cld
jns
test
jle
adc
subl
insl
fisubrl
jle
in
popa
into
sub
add
mov
fistpll
xlat
fistpll
xlat
cli
mov
movsb
out
jb
jl
cmp
in
push
clc
and
fnclex
dec
imulb
test
iret
clc
call
or
cmp
jne
jmp
push
pop
mov
xor
call
push
lahf
mov
scas
adc
outsl
dec
inc
push
test
out
and
scas
mov
mov
hlt
jne
mov
xor
ds
adc
pop
inc
xor
inc
fiaddl
enter
add
je
dec
cli
or
ficompl
pop
ds
cmpsl
cld
iret
jbe
sarl
or
add
out
hlt
sub
ds
mov
addr16
push
mov
pop
mov
sbb
jle
push
pop
push
fwait
pop
scas
mov
sti
ss
jno
inc
inc
or
mov
mov
fisubs
out
test
js
add
je
sbb
sti
fs
xchg
xchg
dec
adc
mov
jle
inc
insb
mov
xor
push
sahf
in
pop
sbb
sti
adc
xor
mov
bound
out
cmc
test
popf
dec
mov
cs
push
test
pop
pop
lods
gs
jnp
xor
mov
add
pop
insl
fmuls
jecxz
push
mov
jns
xchg
mov
jne
or
add
gs
xchg
dec
pop
push
sub
xchg
out
test
adc
das
cli
and
mov
mov
mov
add
popa
out
mov
xchg
xor
dec
shll
das
inc
or
lret
pop
xchg
add
mov
adc
mov
sbb
pop
push
jns
pop
lods
cmp
icebp
cmpsb
stc
adc
mov
divps
shlb
pop
mov
stos
sbb
incl
push
lea
xchg
repz
xor
xchg
pop
mov
scas
aas
push
fiaddl
cwtl
dec
add
xchg
cld
stos
adc
push
pop
pop
pop
mov
jnp
cmp
push
daa
dec
push
pop
sbb
mov
ret
fsubl
repz
ljmp
sti
sub
das
imul
shr
outsl
rcrb
xchg
iret
imul
outsl
cltd
xchg
add
xchg
jb
aaa
je
mov
xchg
sahf
insl
inc
mov
dec
push
xorb
sub
rorb
testl
jnp
lock
fxch
mov
adcl
and
popa
sub
pop
add
daa
in
ds
orb
jbe
cmp
adc
xor
xor
or
insl
lcall
dec
sbb
jp
cmp
mov
xchg
mov
outsl
sub
aad
in
mov
into
divb
fucom
mov
fiadds
push
cltd
enter
dec
dec
hlt
lock
hlt
jo
sub
adc
cmpsl
fisttpl
pushf
int
push
pop
push
push
pop
fxch
pusha
mov
mov
push
sub
dec
xrelease
sub
add
inc
xor
mov
xor
les
lahf
cmpsb
sbb
mov
sar
sub
jnp
dec
and
movsl
cmpb
cmp
lods
inc
mov
pop
nop
loopne
movsb
mov
sbb
mov
push
mov
cmp
fsts
in
push
adc
mov
jle
int3
push
dec
shll
push
jnp
push
into
xchg
repnz
dec
add
xor
adc
xchg
and
jns
lea
mov
sub
push
ret
push
and
sub
dec
wrmsr
call
mov
lods
jns
stos
bound
pop
orb
or
iret
jae
mov
mov
call
fildll
fldenv
dec
mov
out
test
xor
call
push
out
and
cltd
mov
inc
dec
jmp
ja
lock
push
cld
fcomp
nop
movsl
hlt
push
ret
sub
aaa
add
xchg
in
mov
imul
sub
push
pop
lock
sbbb
leave
and
xchg
xchg
dec
mov
into
daa
arpl
mov
out
lds
call
shll
mov
movsl
or
xchg
nop
cmpsb
out
fistl
sub
stos
adc
test
jecxz
mov
sub
in
je
pop
outsl
xchg
push
adc
ja
ror
sahf
cltd
data16
pop
pop
clc
mov
lcall
js
inc
sbbb
sbb
push
push
mov
lock
push
or
imulb
loop
add
and
sbb
int
mov
fisubs
add
xchg
jmp
jbe
jge
fcompl
test
outsl
bound
ja
lret
inc
mov
test
mov
or
adc
jno
lods
pop
pop
cmp
nop
mov
mov
inc
pop
sub
jecxz
add
inc
and
sbb
gs
push
or
test
lds
adc
movb
dec
in
imul
movups
ficoms
invd
pop
lods
xor
add
rorl
push
sub
lcall
in
pop
in
mov
pop
mov
ret
dec
ja
adc
gs
dec
cmpsb
stos
adc
cmpsl
fnstsw
inc
mov
icebp
out
xor
sbb
push
ret
neg
sahf
fldl
in
push
mov
enter
jb
pop
nop
mov
les
int
pusha
or
out
clc
add
rolb
cld
fisttps
cmp
loope
out
ja
in
adc
test
fstl
gs
sbb
shl
mov
mov
mov
lret
aas
les
xchg
loop
dec
mov
sub
jmp
test
dec
xor
mov
loopne
adc
lcall
cmp
scas
push
cmpsl
push
and
dec
cmpb
aaa
push
aaa
mov
add
sbb
scas
das
mov
out
mov
pop
data16
adc
jbe
test
int3
fld
xor
stos
negl
movsl
or
mov
fidivl
sub
gs
add
jno
loope
lods
and
push
pop
aam
mov
not
adcb
mov
loopne
ds
inc
test
mov
pop
xchg
ror
cmp
ss
icebp
or
push
mov
inc
xchg
inc
mov
xchg
test
insl
inc
cltd
push
scas
cld
xor
adc
adc
lods
inc
inc
dec
or
mov
xchg
mov
xchg
cmc
xchg
repz
rcll
adc
imul
dec
sbb
dec
shll
mov
jl
add
lret
fldl
lret
push
mov
shl
test
out
in
push
pushf
and
push
add
and
lret
cmp
das
inc
popa
and
cld
sbb
lds
jo
jmp
push
bswap
jmp
jmp
push
pusha
scas
jp
repnz
cltd
pushf
jl
sbb
aad
sar
out
fistpl
sbb
cli
mov
int3
cmpsl
xor
ds
es
scas
mov
cmp
jmp
jle
scas
or
sbb
xchg
inc
cwtl
lods
xor
cwtl
mov
mov
mov
push
sub
fisubs
sbb
pop
mov
mov
sub
inc
adc
daa
icebp
xor
jl
test
sbb
dec
filds
lock
loopne
or
loope
jo
pushl
mov
lret
add
add
inc
cmc
or
xchg
add
ja
cmpsl
les
add
add
jo
mov
push
out
inc
and
mov
lds
sub
push
pop
xchg
push
cmp
lods
out
mov
jae
insl
cwtl
addr16
insb
jo,pn
cmp
jb
and
out
pushf
mov
sahf
loopne
jmp
xchg
out
leave
leave
enter
jl
jle
test
pop
mov
shl
sbb
outsb
cli
push
mov
jecxz
jae
push
jne
std
insb
pop
cmc
fisttpll
test
mov
cli
or
inc
pop
lods
out
bound
dec
or
rcr
adc
push
cmp
jecxz
lods
rcr
fstl
or
mov
xchg
or
popa
mov
fwait
pop
sub
push
fisttpll
push
in
dec
movb
pop
int3
inc
or
and
ljmpw
jb
xor
dec
mov
mov
out
lret
fnstsw
jne
dec
mov
stc
mov
mov
push
sub
scas
js
mov
xchg
xchg
sbb
or
mov
jbe
mov
outsb
xlat
xor
loope
add
adc
scas
mov
sbb
xor
movsb
and
dec
stc
and
int3
hlt
inc
push
mov
iret
pop
sub
int
xchg
movsl
cwtl
mov
xchg
push
jle
out
pop
or
jb
test
loopne
jge
sbb
cmp
adc
fisubl
lret
cmp
adc
push
mov
jae
jmp
addr16
xchg
pushf
mov
das
sbbb
mov
push
repnz
bound
pop
dec
lcall
sbb
fistps
stos
pop
imul
pop
add
jne
cmp
or
xchg
fyl2x
cmp
cld
mov
stc
push
add
hlt
adc
jg
shrl
mov
aaa
dec
es
adc
push
push
lea
cmp
cs
or
loopne
insl
into
mov
mov
in
rorb
ljmp
add
adc
cmp
cmpsl
cmpsl
mov
iret
and
inc
fcompl
fldcw
jnp
mov
pop
popf
adc
inc
dec
or
jbe
or
dec
cmp
outsl
sub
cmpsl
dec
adc
mov
andl
adc
add
inc
mov
mov
pop
repnz
jle
and
xchg
xchg
push
cmp
orb
lds
lahf
ficomps
sbb
or
inc
repnz
in
imul
iret
jle
aaa
fildl
add
inc
sti
jmp
cmp
imul
xchg
pop
cmpsb
in
sbb
arpl
or
nop
mov
lret
mov
icebp
push
pop
xchg
jb
cmp
test
push
pop
sbb
subb
fistpll
add
push
cmc
or
cmp
les
repz
cmp
or
loope
sti
jb
int
arpl
xor
sub
sar
xor
dec
mov
aad
leave
jecxz
mov
ds
add
movsl
dec
gs
mov
scas
dec
pop
and
sbbb
mov
pushf
xchg
sbbb
testl
dec
add
imul
push
test
push
into
cltd
mov
movsb
dec
sub
out
inc
push
pop
adc
out
rcll
jl
jle
popf
xchg
and
sbb
ja
mov
mov
gs
out
jl
cmc
mov
mov
xor
sti
ret
xchg
aam
add
or
sarl
lcall
cmp
sahf
inc
sub
lods
clc
sub
je
out
loope
lcall
loope
adc
dec
cmp
outsb
jno
neg
ficoml
xor
stos
push
jnp
inc
jno
fs
arpl
sub
adc
sub
dec
sbb
xchg
int3
jge
test
les
cmp
sub
les
pop
loopne
xlat
mov
popf
fbstp
jb
jl
xor
lods
cmp
gs
mov
ror
cmp
mov
push
test
repnz
inc
movb
xchg
push
lds
cmpsb
jb
sbb
sbb
sbb
daa
dec
inc
cmpsl
clc
popf
loope
dec
aas
cmp
or
or
or
xor
cmp
push
out
rcll
cmp
lret
push
out
cwtl
popf
sbb
test
out
loop
ret
outsb
pop
lahf
pop
sub
loopne
mov
int
or
je
cld
xchg
xchg
js
jno
adc
cltd
xchg
hlt
cmc
pop
outsl
inc
scas
mov
or
loop
nop
ja
adc
int3
pusha
lods
sti
mov
sarl
in
cmp
test
push
mov
aad
pop
lret
jg
mov
adcl
icebp
shlb
ss
lret
lahf
mov
movsb
and
and
stos
int
dec
sbb
fisttps
popa
dec
cmp
stos
adc
fdivl
xor
in
and
fwait
xor
inc
jg
aas
out
cli
and
test
mov
and
xor
mov
movsb
mov
cs
mov
std
ret
cld
sarb
ret
push
cmpl
jnp
addb
out
jecxz
inc
mov
xchg
inc
imul
fimull
xchg
add
fmull
lret
loop
mov
mov
mov
insb
jae
mov
rcrb
or
add
jne
sbb
iret
aam
push
aas
inc
sub
inc
xor
dec
xchg
sti
dec
or
fs
int3
stos
inc
mov
add
mov
inc
jg
insl
sbb
add
add
cmp
pop
js
das
and
dec
fld
repz
and
hlt
ja
sarb
movsl
cmc
insb
movsb
jo
rorl
xchg
in
push
outsb
xchg
xchg
sahf
pop
cmpsl
add
xchg
sti
sahf
imul
jno
jecxz
loopne
scas
sub
sbb
das
cmp
test
mov
aas
mov
clc
cld
nop
xchg
and
sbb
sub
mov
push
movsl
fwait
enter
inc
or
data16
repz
pop
sbb
pop
push
pop
and
push
shl
or
dec
mov
pop
mov
xor
cwtl
call
mov
push
dec
in
test
pop
add
lret
mov
mov
mov
ss
or
mov
mov
daa
cld
xchg
lods
xchg
pop
jle
inc
das
leave
sbbl
dec
inc
arpl
ds
fwait
push
add
dec
xchg
or
repz
add
sub
inc
and
and
ret
cmp
mov
mov
mov
jnp
mov
mov
sbb
in
pop
jg
jno
dec
sbb
pop
sahf
pop
pop
xchg
aad
mov
fidivrl
faddl
mov
or
and
jo
jg
call
dec
inc
lea
dec
in
jno
cltd
mov
in
xor
add
in
and
loopne
scas
sti
jge
xchg
mov
mov
mov
xor
sub
inc
imul
bound
xchg
mov
lahf
dec
test
ret
in
mov
es
push
int
sub
push
ret
sub
test
lret
loope
scas
aam
adc
adc
mov
add
loopne
outsb
sti
jno
ret
xchg
cmp
out
fdivs
mov
daa
mov
sbb
push
ret
or
rclb
jns
adc
mov
fstpl
cmpsb
pushf
lea
arpl
shl
jb
xchg
jo
sbb
sarl
mov
in
call
les
dec
mov
sbb
sbb
aam
sbb
out
addb
push
inc
sbb
dec
adc
pop
fists
jl
jne
add
inc
repz
ds
xchg
mov
sub
ljmp
add
mov
jne
dec
cs
inc
cld
jge
jb
push
fmul
jle
xor
push
pop
xchg
in
push
jcxz
or
vcvttps2dq
test
mov
jns
mov
jecxz
sbb
std
push
cld
adc
lea
push
mov
add
xchg
jmp
jmp
mov
aaa
pop
or
or
in
lods
mov
sbb
das
mov
jl
nop
adc
pop
subb
rolb
pop
add
and
dec
sar
stos
pop
jne
pop
aas
inc
negb
cs
bound
cld
dec
inc
bnd
mulb
push
lret
xchg
mov
addl
mov
jns
ret
jnp
jne
sbb
js
inc
aaa
bound
pop
lods
incl
or
lret
push
mov
sub
or
xchg
mov
pop
gs
stos
insb
fcomps
or
pop
mov
outsl
inc
xor
dec
das
mov
push
cwtl
testb
xchg
cmp
dec
fwait
js
add
xchg
repnz
ud1
mov
loope
mul
test
push
jg
popl
push
xor
mov
mov
dec
mov
rolb
lock
mov
or
fxch
mov
push
and
lods
sarl
ficomps
pop
push
jmp
aaa
mov
leave
call
xor
mov
lock
push
das
or
rcrb
xor
outsl
pop
sub
adc
cwtl
xlat
mov
lcall
jb
inc
sbb
jb
cli
decb
repnz
das
add
repnz
ret
aas
shlb
inc
daa
insl
pcmpgtd
movsb
rorl
xchg
loopne
sbb
or
aad
loope
cmp
cltd
popa
lret
mov
out
xor
cmp
insb
push
push
lahf
cmp
or
inc
push
pop
push
stos
into
pop
push
outsl
iret
imul
lock
xchg
mov
lds
push
ror
test
cld
shll
cmpsl
loop
mov
mov
add
imul
mov
leave
cmp
orb
stos
mov
pop
in
insl
xchg
je
adc
arpl
insb
jg
sbb
hlt
arpl
and
hlt
subb
sub
or
xchg
xchg
jnp
aam
test
add
mov
fs
js
aas
push
xor
stos
xchg
jmp
into
ds
pop
jno
pop
xor
or
pushf
gs
inc
std
xchg
push
and
mov
sbb
sub
ljmp
js
icebp
push
fiaddl
mov
stos
sub
fisubrl
sbb
xchg
jae
sbb
mov
mov
jo
sbb
stos
add
sub
push
push
mov
inc
xchg
push
jle
js
arpl
inc
xchg
mov
divl
or
mov
lods
mov
adc
nop
pop
pop
in
sub
xchg
out
add
cmpsl
dec
shrl
loop
scas
push
push
sahf
loopne
cltd
std
popf
xchg
inc
into
enter
lret
push
popf
sbb
outsl
adc
test
and
push
lea
mov
mov
jg
cltd
aam
insl
fadds
xchg
fcmovne
jmp
ror
inc
xor
cmpb
clc
dec
outsb
jecxz
arpl
enter
arpl
sbb
imul
mov
adc
jbe
movsb
pmulhw
pop
rorl
add
add
pop
hlt
gs
push
sbb
pop
adc
rcl
and
fwait
push
pop
xchg
rcll
sti
pop
out
shrl
or
cli
and
cmc
decl
jbe
add
cmp
pop
orl
aas
mov
in
add
das
jmp
leave
add
pop
lea
into
clc
jno
dec
push
or
push
nop
es
add
mov
icebp
mov
mov
test
lcall
ret
dec
pop
lret
xor
decb
roll
in
jmp
inc
inc
loope
jle
loopne
inc
pop
shl
sahf
fisubs
dec
sub
push
stos
jnp
testb
pop
nop
stc
bound
and
dec
out
fisttpll
lds
ljmp
xlat
movsb
xorl
push
ja
in
filds
pop
das
mov
inc
les
in
ret
ljmp
icebp
mov
ds
imul
push
mov
pop
jmp
and
adc
mov
jp
negb
out
lea
xlat
out
lea
out
in
addr16
or
push
mov
jp
stos
jno
lods
dec
push
xchg
dec
push
add
jmp
int
imul
push
call
push
inc
push
inc
addl
stos
adc
les
mov
jns
add
or
lds
scas
into
mov
inc
add
jns
jecxz
adc
push
and
test
pop
in
xchg
imul
push
cltd
loopne
das
lahf
dec
adc
cmp
adc
and
rep
sbb
loop
adc
mov
cmpl
sbb
pusha
mov
dec
add
mov
jecxz
jecxz
insb
fimull
in
out
cmpsb
sti
xchg
mov
push
pand
inc
push
push
sahf
add
add
lret
push
out
pushf
and
cmp
sub
pushf
jmp
sub
cmp
mov
fs
cmp
stos
popa
cltd
jbe
leave
dec
mov
lret
push
mov
shll
mov
notl
dec
inc
dec
stos
add
test
xor
push
and
adc
fldt
mov
fwait
or
test
cmpsb
cmp
leave
popa
inc
push
push
imul
jg
gs
hlt
pushf
mov
daa
fldcw
mov
pop
repz
enter
mov
loope
out
imul
mov
scas
add
xchg
jo
jp
addr16
mull
jae
mov
fidivl
fwait
mov
ss
push
lahf
mov
jne
jge
push
inc
js
pop
adc
jns
sbb
mov
jecxz
shr
jae
ret
data16
repz
aas
push
xor
or
or
repz
mov
mov
push
out
xchg
sbb
sbb
es
sub
inc
and
sbb
xor
xchg
out
sbb
fildll
ret
xor
sti
js
pop
push
or
loop
hlt
imul
pop
repz
mov
out
stc
les
mov
insl
call
movsb
lahf
aaa
adc
pushf
adc
and
inc
je
stos
xchg
outsb
popa
sarb
dec
inc
fisttps
cmp
int
inc
test
lds
jb
jge
xchg
out
fcmovne
leave
pop
and
test
shrl
repnz
jle
push
dec
and
push
adc
jne
mov
jge
rcr
popa
outsb
fstl
mov
jg
pushf
pop
int
pop
std
cltd
lea
out
cmp
adc
movsl
and
mov
mov
push
adc
mov
adc
fcom
or
ja
lcall
jge
xchg
add
cmp
inc
or
lret
in
lods
pop
dec
out
das
repnz
orl
dec
cli
scas
cmpsl
and
movsb
out
sbb
enter
icebp
pop
xchg
cmpsb
arpl
push
stc
jecxz
cli
mov
call
lea
adc
sbb
push
or
inc
dec
aaa
sahf
scas
or
insb
pop
in
stos
push
leave
jns
dec
mov
push
hlt
fcomp
xor
jno
fisubrs
mov
jg
jbe
xchg
test
push
jo
adcb
adc
outsb
xor
push
int3
jne
and
mov
jle
add
movsl
ret
inc
in
mov
or
push
sub
pusha
incb
leave
stos
add
push
mov
and
sbb
jg
cs
pop
inc
movsl
flds
ret
inc
arpl
dec
daa
push
xchg
push
add
jmp
in
loop
xor
sahf
scas
xchg
add
sti
xchg
add
cmp
aas
xlat
sbb
dec
inc
enter
fldenv
add
inc
adc
mov
inc
in
jne
aam
and
and
mov
lret
loopne
mov
and
mov
in
imul
cmc
mov
pop
add
imulb
inc
mov
xor
push
mov
scas
mov
xor
mov
fldt
inc
mulb
jnp
xchg
and
xchg
adc
sahf
add
xchg
adc
mov
or
jp
push
and
xchg
push
or
adc
mov
stos
push
icebp
adc
dec
push
cs
loop
mov
repz
movsb
dec
daa
sub
imul
adc
sub
popa
mov
xor
pop
pop
flds
fcomp
xor
inc
jg
int3
std
push
ds
push
xchg
add
sbb
mov
jmp
add
ss
push
push
stos
stos
pusha
fcomip
lret
popf
sub
xor
imul
scas
mov
fisubrs
subb
fsubrs
xchg
push
mov
and
mov
sbb
mov
xchg
rorl
cli
mov
shl
jmp
push
lahf
pop
fdivrs
sbb
add
push
in
test
mov
loopne
daa
int
popa
mov
cwtl
ffree
mov
aam
inc
in
xchg
rcl
adc
jns
fidivrs
sti
ja
pop
inc
mov
dec
jecxz
idiv
rep
and
daa
adcl
mov
sbbl
out
mov
out
lea
xor
fwait
sbbl
dec
mov
sbb
in
xor
fstpl
mov
inc
add
xchg
push
jmp
jp
xorb
xchg
jmp
stos
or
int
cmpsl
mov
test
xor
cli
add
mov
cmp
fadds
cmp
cmp
nop
pop
mov
cmp
scas
mov
cmp
jbe
cmp
lds
and
pop
mov
pop
and
jns
aas
call
sub
inc
mov
add
jb
mov
into
sti
mov
aad
mov
aam
aas
repnz
adc
leave
mov
fs
and
mov
repnz
mov
inc
movb
cwtl
xchg
and
mov
and
mov
mov
mov
icebp
ret
push
cmp
sub
aad
lea
jo
inc
cmp
aad
mov
pop
xor
pop
mov
lea
adc
mov
ja
jmp
loopne
fiaddl
add
pop
push
lds
mov
sub
cmp
inc
cmp
fidivs
push
shll
dec
leave
test
push
or
clc
mov
into
xchg
push
mov
insb
mov
mov
lock
mov
pusha
mov
pop
dec
push
cmpsb
mov
pop
dec
into
scas
lods
insb
push
adc
mov
leave
or
inc
jp
fs
add
sub
pop
lods
or
in
dec
xchg
or
sbb
mov
adc
xchg
push
outsb
dec
pop
cwtl
xchg
popa
pushf
subb
mov
dec
cmp
push
out
fs
push
pop
js
jl
imul
pop
cmp
lret
repnz
add
lret
aad
notb
pop
lods
out
pop
imul
pop
xchg
dec
xor
adc
xor
mov
popa
test
jno
nop
scas
push
sbb
pop
lock
cmpl
shr
lods
mov
jns
inc
xor
inc
adc
sub
push
iret
movsl
or
lds
rclb
add
out
mov
mov
xchg
xchg
aad
lahf
push
outsb
mov
imul
call
cltd
jne
test
dec
push
cmp
ljmp
xor
movsb
arpl
cmp
gs
leave
mov
xchg
cmpsb
cmc
mov
pop
fadds
sbb
jo
add
and
push
jb
mov
mov
xor
fisttpll
loop
fs
in
or
mov
xchg
and
sub
push
pop
inc
pop
ljmp
jle
dec
lahf
pushf
orl
sbb
ret
xchg
fwait
cs
push
xor
push
pop
cmpsb
xchg
cmp
lods
cmc
mov
mov
fwait
jb
mov
imul
adc
cmp
stos
mov
sti
push
cmp
xchg
add
es
icebp
inc
ljmp
xor
jae,pt
scas
pop
orl
push
sub
xchg
push
and
leave
xchg
jbe
mov
jne
filds
and
cmpl
in
mov
mov
mov
dec
push
cmp
test
stos
into
sti
mov
xor
repz
adc
stos
pushf
orb
adc
jge
mov
scas
neg
imul
aaa
adc
cmp
push
movzbl
xlat
lret
bound
sub
cltd
les
mov
adc
mov
pop
fsubs
movsl
rcrb
fwait
add
push
fs
and
call
loope
in
mov
lea
cwtl
mov
cli
cmp
imul
test
pop
jno
bndldx
les
pusha
dec
and
arpl
out
into
test
sub
or
lds
scas
xor
and
iret
pop
jecxz
stos
sbb
jns
in
into
push
loop
mov
mov
cmp
std
push
dec
mov
xchg
pop
add
pop
repz
jmp
lods
test
and
popa
adc
and
int
adc
or
cld
out
mov
jns
dec
fldenv
movsl
stos
insl
and
pop
sti
xor
adc
xor
push
push
mov
push
lahf
mov
divb
and
push
jg
ret
dec
mov
jg
lock
adc
mov
mov
jne
dec
jb
es
push
xor
ret
cmpsb
xchg
aaa
ret
rcll
xchg
call
movsl
jae
cmp
or
lcall
aam
pushf
int3
jo
xchg
lock
rcrl
arpl
or
nop
shll
fidivrl
inc
add
and
dec
adc
xchg
mov
sbb
push
and
mov
xor
scas
std
je
push
insb
inc
sar
rcrb
sbb
pop
nop
lods
outsl
or
inc
roll
icebp
dec
sub
push
inc
fcompl
hlt
xor
mulb
movsb
lods
adc
arpl
sub
lahf
mov
jmp
mov
mov
das
cli
roll
or
sub
dec
adc
sbb
pop
jae
stos
dec
cltd
lods
and
xchg
popa
xor
xor
xor
and
mov
xchg
cmp
add
and
add
rcr
pusha
stos
mov
clc
notb
test
add
iret
fs
iret
cmp
pop
ja
jl
out
inc
in
mov
es
loopne
call
inc
mov
hlt
aas
pop
stos
loopne
shrb
sub
and
dec
ret
arpl
mov
sbb
shrl
sub
push
mov
int
rcrl
cld
outsl
repz
repnz
or
push
mov
and
stos
and
aaa
loope
fidivrs
mov
and
xor
xlat
jo
pop
popa
scas
loopne
dec
gs
mov
or
push
sbb
hlt
push
arpl
pop
or
pop
inc
movsb
insl
jnp
fistpl
enter
and
ds
lret
push
shr
push
mov
aas
loopne
les
les
cmp
in
adc
xchg
add
mov
in
push
aad
lea
sbb
out
xor
sbbl
loop
aaa
aas
shll
pop
pop
je
sti
test
rcrl
sbb
cmp
mov
daa
push
stos
cmp
sahf
rcll
fldenv
and
int
sbb
divl
inc
cmp
inc
mov
xchg
nop
icebp
imul
cli
push
cmp
sahf
aas
xchg
jg
jb
xchg
fnsave
mov
and
insl
lods
lahf
gs
pop
out
pop
xchg
out
int3
mov
inc
out
and
push
in
sbb
adc
jne
inc
inc
shlb
mov
les
rolb
dec
sub
pop
cld
pop
xchg
aas
add
sub
mov
mov
mov
dec
sub
scas
mov
jns
aaa
roll
push
fwait
adc
je
daa
xor
ret
push
xchg
cmpsl
or
out
mov
xor
push
icebp
push
jmp
mov
loopne
or
pop
out
or
daa
ret
mov
jle
pop
aas
pop
inc
loopne
jecxz
call
aad
stc
xchg
vunpckhps
or
push
xor
add
into
lret
push
cmpsl
mov
jae
lea
test
test
mov
sti
and
in
lret
stc
stc
push
xchg
hlt
mov
xchg
dec
out
mov
adc
mov
xor
sbb
mov
negb
add
jecxz
dec
mulb
fcmovnb
lret
jae
das
pop
gs
ja
sub
add
mov
jno
xchg
in
lock
lahf
pushf
sarl
popf
je
loope
jmp
xchg
pop
cmpb
or
mov
sbb
iret
or
repnz
out
and
xor
repnz
push
push
test
push
mov
cwtl
ret
mov
jp
sti
aaa
add
sbb
out
mov
outsl
inc
ja
outsb
rolb
iret
mov
mov
cmc
push
jbe
pop
test
push
inc
arpl
inc
outsb
and
jb
push
sub
xor
add
mov
jb
out
dec
jmp
mov
je
test
mov
in
cli
mov
lahf
movnti
mov
pop
inc
repz
pop
push
notl
sub
int
ror
xchg
icebp
in
sti
and
sbb
stc
jno
repz
addl
pop
test
and
aad
mov
sbb
out
push
aad
idiv
movsl
dec
dec
clc
xchg
lds
shrb
loope
pop
dec
lock
int3
mov
pop
push
mov
cmp
cmpb
jns
jnp,pn
jne
daa
loop
cmp
jnp
and
pop
fidivs
daa
das
jnp
xor
in
or
lods
cmpsl
insl
or
dec
std
je
scas
test
in
jae
push
mov
xchg
into
fists
mov
pop
push
clc
loopne
xchg
xchg
sbb
lods
xchg
mov
cmp
out
xchg
mov
jge
iret
lds
das
jp
inc
jae
test
pop
rcrl
cld
xchg
cmp
add
dec
aas
jle
mov
or
cmpsb
xchg
dec
jmp
and
leave
cmp
xor
out
clc
std
hlt
imul
add
xchg
js
adc
fildl
mov
adc
push
inc
ljmp
cmp
popa
fwait
in
aaa
shll
or
adc
popa
iret
mov
bound
mov
bound
jle
or
push
sbb
clc
daa
dec
sbb
jbe
fdivl
jbe
mov
insl
mov
xchg
sbb
adc
adc
add
outsb
and
insl
lahf
push
pop
mov
pop
cmpsl
dec
adc
pop
jp
and
imul
jmp
push
stos
sbb
jnp
sub
imul
cmpsl
mov
repz
lods
dec
lret
inc
dec
div
pop
fwait
scas
stc
jecxz
les
int3
mov
sbb
je
loopne
insb
aaa
mov
xor
sub
sbb
cmp
push
pop
mov
dec
cmpsl
fnsave
fucomp
mov
xchg
add
jmp
paddusb
aas
adc
pop
test
pop
mov
mov
push
push
xchg
aas
sbb
mov
js
xor
push
ljmp
mov
insl
mov
push
jle
xchg
jl
and
mov
adc
jg
cmp
adcb
and
push
pop
outsl
movsl
aaa
sub
dec
inc
das
xchg
xchg
mov
mov
mov
out
sub
xchg
outsb
pop
dec
mov
in
out
loop
mov
insb
xchg
int
jne
sub
insl
or
ret
xchg
mov
into
aad
psrad
icebp
inc
inc
xor
int
xchg
lods
dec
cmp
push
jecxz
out
sahf
jb
mov
ret
or
xchg
cmpsb
cld
add
out
inc
adc
aas
jb
mov
lcall
xchg
test
and
or
xchg
mov
in
out
aaa
leave
add
clc
pop
pop
pusha
fwait
inc
into
push
adc
push
mov
add
dec
sub
fidivl
repnz
sub
mov
jge
out
repnz
sbb
sbb
adc
or
movsb
loop
sub
sub
sti
cli
js
ret
std
loopne
xor
popa
fildll
div
sarl
negl
push
jecxz
jl
mov
push
out
jmp
sbb
mov
jb
dec
adc
in
lcall
push
jmp
push
sbb
orb
mov
in
cltd
pop
xchg
inc
cwtl
jp
and
loope
icebp
xor
lret
cmp
cltd
jg
dec
sub
cmpsl
sbbl
sbb
push
xchg
insb
movsl
mov
fs
add
idivl
imul
stos
lcall
add
imul
xor
inc
sub
and
sbb
push
cmp
mov
dec
insb
out
std
add
jae
insl
in
push
leave
and
imul
pop
insl
xchg
add
push
dec
cld
add
int3
mov
ss
xchg
jno
cmp
pop
int
jne
into
and
lock
inc
rolb
cmp
jmp
xor
cs
xor
inc
into
ret
repnz
sub
pusha
adcl
ja
sub
push
mov
cs
mov
cmpsb
out
sbb
int3
adc
xchg
stos
xor
and
dec
mov
xor
test
data16
call
mov
jae
xchg
sbbb
icebp
or
push
movsb
xor
das
out
out
out
jmp
pop
mov
cmpsl
nop
adc
pop
movsl
movsl
xor
pushf
repz
loope
loope
push
in
mov
loope
cmp
pop
mov
in
pop
or
ret
add
ja
adc
pop
call
push
sub
imul
lods
das
jle
je
or
dec
xchg
xor
sbb
mov
das
stc
inc
ret
pop
out
cs
pop
arpl
scas
or
ficoms
mull
std
bound
cmp
sbb
clc
cli
dec
xor
mov
xchg
scas
mov
movsl
rorl
mov
orl
arpl
or
das
test
divl
imul
sbb
xor
inc
push
fidivs
add
jmp
dec
mov
iret
stos
and
push
fisubrl
mov
inc
xchg
xchg
add
int3
mov
test
fxch
jp
aaa
icebp
ret
mov
cli
mov
jp
rorb
pop
sti
cwtl
pop
imul
mov
outsb
jo
xchg
adc
sahf
idiv
and
mov
outsb
ds
xor
adc
jnp
jl
fsts
cwtl
xor
sbb
loope
jbe
push
add
jbe
push
test
pop
add
adc
jmp
insb
rolb
in
loop
push
jo
addl
cmp
adc
decl
testl
call
xchg
fcoms
push
out
insb
jmp
movsl
scas
mov
fstps
int
and
ss
repnz
push
stos
add
xlat
mov
mov
enter
cmpsb
xchg
xchg
cmp
xchg
inc
pop
adc
xor
pop
ljmp
outsl
xor
jg
and
push
scas
into
insl
dec
out
out
push
push
ljmp
pop
fimull
sub
xor
inc
sub
push
cs
jmp
in
fsubs
push
xor
add
push
sbb
mov
mov
mov
mov
pop
xchg
inc
inc
sub
testl
and
or
dec
add
notl
sub
addr16
ljmp
mov
rcrb
xchg
dec
fcompl
mov
mov
mov
adc
or
mov
xchg
sub
pop
das
test
inc
je
add
orb
mov
adc
xor
pushf
lcall
push
and
sub
lds
mov
xchg
je
cltd
outsb
or
mov
or
cmp
inc
stc
add
sarl
loope
repnz
sbb
jmp
pop
add
lods
lods
je
gs
mov
ret
imul
dec
rcrl
fs
or
xor
test
popf
mov
insl
inc
xchg
xlat
repnz
pop
mov
push
mov
fs
in
mov
jmp
xlat
mov
out
xor
int
mov
stc
cmp
lods
clc
jb
frstor
jae
push
ljmp
dec
sbb
sbb
pop
jl
test
sbb
out
pop
pop
add
ret
dec
shl
xchg
pushf
push
inc
xchg
and
xchg
shlb
and
mov
int3
loope
adc
lea
push
mov
sub
fmuls
inc
pop
ljmp
mov
aam
adc
jmp
flds
pop
sbb
push
pop
call
aam
pop
scas
jbe
inc
inc
mov
lds
lret
adc
jl
dec
addb
mov
mov
out
iret
push
cmp
aad
mov
mov
xchg
push
pop
ja
scas
xchg
ds
fstpl
scas
je
xchg
aam
test
mov
mov
sub
pop
clc
in
les
cmp
mov
or
mov
adc
shrb
rcll
mov
sbb
add
xor
call
leave
mov
mov
imul
lret
out
movsl
push
test
mov
jne
xor
fnstenv
inc
dec
push
adc
add
inc
in
addb
inc
mov
pushf
or
test
or
aaa
pop
fdivs
sbb
es
jns
mov
dec
jge
pop
out
jno
sahf
sbbl
xlat
jg
lret
ficompl
adc
dec
in
and
sbb
xchg
xchg
cmp
pop
mov
inc
inc
ss
int3
mov
test
fdivrl
test
lahf
sub
rorl
xlat
cld
scas
jmp
hlt
in
movsl
lods
ret
dec
mov
adc
mov
mov
xchg
jle
dec
lcall
jae
or
rcrb
mov
icebp
or
ret
cmpsb
bound
sbb
mov
push
pop
movsl
xor
adc
cwtl
cmpsb
pop
dec
lods
cmp
pop
pop
andl
mov
rorb
pop
mov
js
roll
dec
mov
stos
lret
lret
dec
jle
lock
sti
dec
mov
into
pop
sub
into
adc
and
fsubrl
out
ljmp
shll
nop
insb
ficomps
jp
xor
dec
js
mov
push
push
jo
daa
shll
sahf
inc
pop
dec
lds
aas
cmp
pop
fwait
sub
mov
cwtl
and
jmp
mov
test
cmp
mov
ja
xchg
aas
mov
and
imul
hlt
mov
in
push
js
or
mov
mov
out
cltd
add
sub
shl
sub
cmc
std
pusha
mov
mov
bound
jnp
stos
rcll
das
paddw
lock
repz
cld
into
iret
fwait
xchg
jle
push
sbb
pop
adc
inc
lea
outsl
stos
sbb
sub
cmp
lret
outsl
sub
dec
or
push
mov
sar
mov
mov
movsb
add
inc
test
loop
or
test
jl
and
push
decb
xchg
es
adc
cmpsl
xor
or
mov
jnp
and
jae
adc
lret
repz
and
outsl
shll
std
inc
push
push
ja
fldenv
test
mov
dec
add
pop
lods
mov
or
jnp
push
jecxz
mov
aad
cmp
sub
or
into
sbb
subl
jecxz
xchg
into
and
stc
mov
xlat
repz
mov
adc
mov
imul
xor
xchg
mov
movsl
out
add
test
inc
push
add
and
xor
mov
mov
inc
fwait
add
enter
adc
mov
mov
mov
xchg
lods
sahf
dec
lods
jle
sarl
pop
pop
add
popf
jp
mov
ds
jo
inc
daa
ja
sbb
xchg
into
jnp
cmc
push
fadds
or
xchg
iret
aam
dec
push
pop
adc
mov
mov
sbb
mov
sbb
mov
push
dec
push
repz
out
and
mov
pop
push
pop
cltd
mov
repnz
jae
mov
insb
fs
out
cmpsl
xchg
add
cmpsb
add
je
imul
test
lods
lret
out
push
insb
jnp
jmp
in
cmpsl
push
mov
adcl
ljmp
shrl
cmp
fs
mov
lock
pop
sub
mov
cmp
lods
cmp
push
les
andl
sbb
cmpb
adc
jp
rcll
mov
xchg
pop
lcall
push
outsl
ret
dec
cmp
push
inc
cs
push
add
jbe
fs
int
mov
lods
int
push
fstpt
movsl
out
sti
jg
test
scas
mov
push
repz
mov
movlps
negb
inc
and
inc
and
mov
loope
das
nop
and
and
mov
cmp
dec
clc
push
xchg
sbb
cmpl
xchg
mov
jge
and
insl
orb
nop
and
sti
aam
aam
std
cmpsl
dec
ds
test
loopne
sub
rorb
xlat
into
cmp
in
xor
pop
repnz
ljmp
xor
out
xor
pusha
dec
sbb
popl
mov
mov
cli
aas
inc
sub
jge
in
addr16
inc
popa
pop
jle
xchg
sahf
mov
mov
shrl
pop
movsb
andb
fwait
push
call
jnp
std
scas
bound
inc
jbe
or
enter
jecxz
jnp
rorb
push
xchg
jno
shll
jne
mov
dec
daa
fwait
scas
es
cwtl
insl
aaa
and
jmp
aaa
subb
mov
or
dec
test
fldl
mov
popf
mov
gs
mov
pop
mov
and
and
jnp
sbb
leave
mov
jae
xchg
sub
scas
scas
sub
jne
aas
mov
dec
lahf
sbbl
mov
push
scas
cmc
mov
mov
add
pop
pop
lahf
pusha
sarb
xchg
mov
sub
test
adc
insb
outsb
mov
repnz
lods
add
cmc
cmp
popf
insl
mov
mov
scas
jle
loope
or
push
inc
lcall
mov
mov
test
fiaddl
vcvtsd2si
cs
jne
sub
mov
cltd
push
jecxz
add
fdivrl
scas
xlat
sbb
clc
jo
jl
hlt
and
jp
or
sbb
test
pushf
dec
pop
adc
push
sub
sahf
xchg
or
jno
xchg
push
push
adcl
and
inc
push
into
clc
lea
pusha
sbb
loopne
in
pusha
and
add
pop
jmp
mov
lods
out
repnz
icebp
push
pusha
or
add
cmc
shll
and
jmp
cmp
aaa
test
in
add
gs
aam
mov
out
cwtl
lret
rclb
mov
ror
and
mov
sub
les
sbb
dec
sbb
aam
int3
jo
out
mov
cmp
aaa
cs
stos
mov
adc
mov
movsl
into
xor
cld
js
adc
pop
fisubrl
icebp
cmpsl
mov
std
movsl
add
fstps
pop
mov
jp
adc
aaa
out
and
dec
dec
shll
jne
outsb
or
xchg
pop
dec
mov
pop
rolb
mov
sbbl
sbb
in
add
sub
test
cmp
jge
stos
sub
das
daa
shlb
adc
jo
sbb
popf
inc
push
outsb
daa
xlat
mov
adc
hlt
addl
jno
xor
pop
lret
mov
jbe
jecxz
dec
outsl
jne
cvtps2pi
out
dec
push
ret
pushf
push
lods
add
or
and
push
and
add
les
add
adc
push
adc
sbb
mov
inc
popf
repnz
push
jg
pop
notl
inc
stos
movsb
push
shlb
ret
sub
mov
and
mov
xor
sbb
test
push
mov
jmp
fwait
inc
adc
mov
mov
stos
xor
push
stc
add
and
inc
icebp
mov
xor
int
popa
dec
xchg
inc
and
jo
jecxz
je
jp
fs
pop
xchg
adc
pop
jo
in
pop
subb
outsb
adc
add
jnp
dec
mov
std
jl
test
push
int3
cmp
filds
imul
cs
data16
sahf
inc
xor
lcall
inc
mov
clc
push
and
inc
adc
sbb
mov
xlat
js
clc
lahf
xchg
shlb
inc
add
push
stos
sub
rcrb
sbb
sbb
adc
loope,pt
adc
cmp
fxam
shlb
or
in
rol
push
in
jno
push
ja
pop
mov
mov
xor
call
push
aam
jo
pop
sahf
outsb
pusha
jp
adcl
stos
test
nop
mov
imul
or
lods
loope
rcrl
push
mov
mov
xor
mov
lds
movsb
or
and
out
lret
and
lcall
insb
push
push
and
sub
sub
fwait
push
dec
leave
or
jns
imull
mov
sbb
pushf
xchg
jmp
dec
lea
lcall
jg
pop
pop
add
das
sahf
mov
stos
cmc
mov
and
push
bound
inc
fbstp
bound
adc
lods
cmpsb
jne
adc
push
inc
sbb
int
fstpt
aas
jl
aas
push
loope
mov
pop
jae
push
movsb
dec
ds
in
jb
cli
xchg
pop
aas
popf
out
cmp
xor
into
pop
cld
xchg
call
les
mov
jae
fsubp
jmp
jl
xchg
xlat
sahf
int
scas
and
dec
repnz
ror
rcll
roll
xor
movsl
sbb
or
xchg
je
push
gs
push
mov
add
lret
mov
xor
push
and
or
add
imul
add
mov
sbbl
xor
jb
xchg
push
jmp
inc
push
cmp
std
test
inc
in
inc
mov
js
fldcw
lods
arpl
sbb
add
mov
in
sarl
xchg
jecxz
jo
pushf
xlat
scas
loopne
aaa
scas
or
xchg
inc
lds
imul
xchg
lods
popa
push
out
push
dec
jl
sub
jle
nop
outsl
xor
leave
sub
jns
jle
jns
arpl
outsb
push
dec
ds
inc
call
and
push
cmp
cmp
and
inc
lahf
mov
out
push
add
arpl
out
xor
push
repz
jl
push
xor
lds
pop
shr
pop
in
inc
repnz
push
sbb
cmp
in
mov
repz
push
loop
rep
push
cmp
and
ss
stc
fldt
push
imul
movsl
test
ret
adc
js
push
fmuls
mov
movsl
cmp
cmpb
leave
mov
or
sub
repz
mov
mov
mov
jg
outsb
pop
xchg
es
ja
inc
lock
cltd
mov
sub
out
or
mov
insl
dec
sbb
fdivrl
cmc
fs
adc
in
test
cmp
mov
mov
movsl
nop
loop
cld
or
enter
jmp
testl
aaa
pop
or
das
jp
xor
cmpsb
push
inc
lds
xchg
in
fcomps
leave
test
add
fs
mov
int3
mov
xlat
jb
test
mov
sbb
push
xor
xor
inc
or
das
push
cmpsl
shlb
clc
dec
adc
insl
dec
imul
pop
cli
aaa
outsb
out
ficoml
mov
loopne
jae
pop
sub
jnp
mov
push
test
ljmp
pop
mov
push
int3
jb
jl
xchg
stos
out
and
icebp
pop
xchg
loope
xor
lea
enter
cmp
repz
pop
dec
mov
and
roll
and
lea
xor
push
sbb
xchg
push
cmc
jge
sub
cmp
cmp
repnz
push
ror
in
jl
out
dec
inc
cwtl
dec
fwait
in
xchg
and
mov
push
sub
stos
pop
enter
xchg
pop
decb
les
push
test
cmp
data16
mov
pop
xor
push
test
push
sub
test
fdecstp
scas
shll
mov
or
mov
lahf
mov
rclb
mov
push
fucom
aam
cltd
jno
inc
out
loopne
mov
test
stos
sahf
pusha
out
jge
lods
imul
mov
popa
dec
popf
gs
aas
fistps
fsubrl
dec
cmp
xchg
lods
mov
dec
add
xchg
repnz
outsl
xchg
sti
call
cmp
icebp
add
sbb
outsb
sti
dec
xchg
in
pop
jp
jge
imul
insb
and
inc
jl
adc
std
roll
stos
push
aad
cmp
or
dec
in
mov
jg
ss
cmp
ret
push
sbbb
and
popf
bound
leave
mov
mov
enter
sbb
mov
jle
push
adc
pop
iret
pop
shrl
push
dec
dec
inc
cmp
push
popf
lret
and
jne
imul
push
add
sub
jne
xchg
in
sarb
add
ret
inc
test
lock
div
rorb
cmp
and
mov
cmp
aas
sbb
dec
dec
mov
rorl
push
push
jecxz
lea
mulb
push
insb
jmp
test
lods
mov
sub
mov
pop
dec
rcrb
dec
out
pop
push
idiv
pushf
out
jns
aad
cmc
mov
ret
cmp
jo
inc
push
rclb
push
jp
aam
icebp
jno
negb
lods
shlb
bound
push
dec
leave
sahf
pop
lock
out
mov
or
sub
jnp
jnp
dec
mov
sti
loop
push
out
mov
jge
roll
cli
repz
mov
scas
aam
in
lahf
cmp
divb
or
ret
out
clc
aam
lret
popf
in
inc
mov
mov
mov
repnz
cmp
mov
xor
mov
mov
pop
fcoml
push
movsb
inc
push
popf
mov
xchg
inc
and
push
les
jle
jno
int3
insb
call
push
fisubrl
mov
sbb
nop
cld
sahf
stos
or
sub
jp
pop
xlat
sub
mov
inc
stc
scas
pop
popf
fimull
fs
inc
cmpsb
dec
cltd
or
clts
insl
jne
clc
fcoms
outsl
jg
das
pop
sbb
hlt
aas
push
ds
cmp
pusha
adc
stos
rcrb
popa
push
js
cmc
fists
test
sbb
or
movsb
inc
xor
adc
mov
jg,pt
mov
aas
xbegin
in
or
outsb
aaa
xchg
adc
or
adc
xlat
adc
shl
mov
stos
int
fnstsw
inc
in
sarb
into
lea
adc
adc
cli
xor
cld
pop
icebp
scas
pusha
js
in
sbbb
aas
movsb
daa
loope
mov
push
jns
mov
jb
mov
cwtl
push
fildl
aas
fisubs
hlt
mov
lret
push
cmp
mov
arpl
or
out
and
pop
bound
int
xchg
cmpsl
lods
jno
popf
sbb
adc
daa
xor
xchg
xor
sbb
pop
lock
dec
cmpsb
ljmp
xchg
sti
or
outsl
clc
and
ja
push
insl
and
fs
lock
cmp
jne
xchg
std
ja
mov
ret
in
out
inc
fisubs
lods
ret
push
jnp
lock
mov
outsl
nop
mov
fwait
cmp
gs
mov
call
mov
hlt
dec
push
or
loopne
sbb
cltd
dec
add
mov
cmpsl
out
or
mov
fs
pop
fdivp
aad
jle
movsl
in
loop
or
jg
xchg
jge
push
dec
or
leave
inc
lods
xchg
popa
fstps
mov
les
add
inc
xor
repnz
and
inc
dec
rcl
push
xchg
mov
sarl
sbb
push
add
sub
sbb
cli
jmp
inc
popf
repz
push
in
push
cli
and
dec
leave
mov
pop
cmp
or
add
cwtl
pusha
fs
mov
push
jae
sarl
arpl
fstpt
mov
int
fstpl
fwait
aad
lret
js
xor
cmp
push
int3
notl
incl
std
mov
xchg
or
lret
jbe
dec
stos
mov
sbb
fs
dec
cwtl
dec
js
cmpsb
push
data16
inc
push
or
and
push
and
mov
pop
mov
popf
sbb
gs
in
scas
in
out
test
mov
add
mov
lret
inc
xchg
lret
mov
and
outsl
fidivrl
ret
testl
mov
imul
sbb
aaa
mov
mov
and
test
lahf
cmpl
out
mov
mov
push
das
xchg
xchg
in
dec
pop
stos
cmc
add
cmp
adc
or
jno
aad
enter
enter
test
in
mov
jne
gs
fwait
lahf
inc
jmp
cmpl
lret
es
cs
inc
andl
dec
sub
mov
sbb
jl
fsubrs
in
push
cmpsl
popf
fs
sbbb
push
fucomp
cmpsb
pop
lds
insb
push
jp
popa
jo
sahf
into
addb
js
xor
stos
aam
pop
adc
pop
xchg
xchg
aam
mov
jg
pop
call
sub
xor
out
mov
bound
jecxz
cmpb
sub
push
movsl
daa
sbb
rep
lods
sbb
jmp
sahf
aas
cmp
jl
std
or
test
loopne
and
xor
and
pop
cmp
sub
dec
in
fisttpll
stos
cmp
test
je
ret
sbb
sub
cld
movd
pop
aam
mov
pop
jle
lret
pop
enter
mov
movsb
mov
push
subb
jb
clc
mov
lds
inc
repz
sub
xchg
jb
dec
lock
fucomi
imul
call
inc
cmp
mov
mov
xchg
rcll
and
mov
add
mov
fisttpll
jle
fsubs
mov
inc
clc
push
daa
ja
push
pop
orl
mov
loope
popa
push
nop
and
add
mov
dec
sbbb
sbb
fsubrp
out
cltd
out
inc
mov
pusha
push
in
mov
pop
in
mov
mov
scas
mov
test
and
imul
lret
xorb
xchg
aas
rclb
sbb
fildll
push
filds
and
loopne
loope
scas
xor
or
jb
sub
loopne
js
xorb
adc
xor
mov
pop
push
js
xor
adc
xchg
das
mov
movsl
mov
int3
add
or
xchg
xor
leave
mov
sub
xor
sbb
jecxz
xchg
adc
inc
push
sbb
pop
adc
inc
xchg
pop
xor
cmp
lahf
repnz
or
jb
push
mov
stos
das
xchg
xor
add
push
clc
push
addr16
cmp
loop
sar
fwait
add
int
pusha
xchg
mov
js
call
adc
adc
int3
push
fnstenv
shrl
dec
xor
hlt
repnz
or
dec
adc
popa
xchg
xchg
inc
sbb
insb
in
mov
sub
test
jno
mov
stos
mov
cmpsl
test
dec
in
push
fwait
xchg
pop
std
add
aas
cmp
pop
cmp
rcl
hlt
in
rorl
fcmovu
mov
jo
mov
in
push
sbb
rcrl
xor
aaa
ljmp
cmp
loope
xor
cmpsl
movsl
adc
jg
jl
jno
and
rep
sub
aad
push
pop
inc
out
jno
dec
aam
push
push
or
shrb
or
pusha
mov
cmp
popf
aaa
outsb
jae
add
push
js
mov
dec
in
std
fistps
dec
and
mov
jnp
sub
mov
idiv
leave
xchg
subl
rcl
cld
inc
movsl
cmp
sbb
loop
push
repz
pusha
mov
mov
or
aas
idiv
xchg
cli
pop
xor
repz
pop
lahf
dec
int
insb
inc
loope
and
icebp
mov
add
dec
pop
loop
add
xor
jb
xchg
sub
ret
int
call
xor
cmp
imul
mov
cmpsb
lock
pop
xor
lret
pop
push
lods
cmp
sbbl
hlt
mov
push
frstor
fadds
dec
inc
negl
dec
pop
loopne
mov
mov
lock
sub
push
cltd
rcrl
mov
adc
ficoml
ret
inc
mov
data16
imul
dec
push
jne
ds
push
repz
xchg
push
das
add
pop
outsb
mov
stc
sub
sti
xor
push
fdivp
ljmp
out
sbb
fmull
mov
jbe
mov
cltd
or
cmp
mov
cmpsb
lock
lods
mov
lea
lds
int3
aaa
rorl
xchg
push
out
loopne
in
jge
mov
mov
test
xchg
je
sbb
xchg
daa
jo
add
cwtl
cs
sti
push
push
orb
add
inc
add
cmp
mov
and
movsl
cmpsb
push
sbb
mov
dec
adc
sbb
mov
xor
push
and
dec
adc
pop
mov
pop
test
jecxz
pop
jecxz
stc
movsb
pop
pop
cmpsb
shrb
enter
in
es
mov
inc
andl
loope
and
out
jae
out
pop
fsin
bswap
ja
and
call
or
leave
inc
add
or
sub
jl
cld
jns
xchg
cmp
mov
mov
jo
cmc
in
add
loopne
sahf
jae
sbb
mov
jmp
addr16
pop
adc
divl
rcrb
pushf
mov
inc
xchg
repz
das
shll
adcl
jns
xor
xor
lods
inc
push
shrb
js
or
sub
rep
and
jns
cmpsl
xchg
lcall
xchg
insb
divl
mov
jg
rcrb
mov
or
sub
sub
and
inc
pmaxub
pop
sub
or
call
jge
sub
dec
pop
nop
add
cmp
mov
xor
shll
fdivl
jb
fldl
or
push
jecxz
adc
add
int3
ret
in
leave
lds
scas
xchg
inc
push
add
lods
mov
fisttps
xor
push
adc
adc
outsl
sbb
xchg
xor
lcall
mov
mov
aad
jne
pop
push
sub
sub
mov
stos
push
cmp
addl
out
mov
mov
inc
rsm
cmpb
push
sbb
adc
mov
and
out
lret
mov
iret
faddl
add
lahf
dec
fimuls
scas
mov
or
xchg
jae
ret
lcall
loopne
fcomp
repz
push
push
in
and
mov
mov
push
sarl
cmpsb
sbb
fucomi
cltd
jmp
stos
bound
pop
loop
in
data16
test
cmp
call
lret
inc
addr16
or
mov
movsl
jmp
dec
gs
imul
xlat
xchg
gs
xchg
test
rorl
xchg
adc
orb
xor
fcomi
push
pop
sahf
xchg
mov
ss
loop
cli
jbe
adc
out
mov
pop
push
mov
push
xor
cltd
lsl
jns
es
jae
loopne
adc
loope
mov
and
cmp
xchg
mov
clc
xchg
xchg
jns
hlt
cmp
add
ja
fnsave
aas
jmp
mov
dec
xor
pop
mov
jne
cmp
nop
loop
and
cmpsb
push
jo
jb
pushf
lods
mov
ljmp
das
fstpt
ljmp
add
sub
inc
dec
ja
inc
mov
in
popa
int
dec
jae
lcall
jbe
idivb
push
and
inc
inc
xchg
in
push
iret
jle
inc
sub
mov
mov
ljmp
out
sub
jbe
and
pushf
sti
add
int
test
jmp
mov
sbb
outsl
jl
or
test
sbb
fiadds
and
mov
adc
or
push
bound
aas
lahf
test
loopne
inc
js
xor
xchg
notb
sbb
mov
mov
mov
imul
call
mov
inc
icebp
jge
stc
test
mov
loope
test
pusha
push
push
mov
stos
fildl
fisttpll
push
pop
mov
fildl
movsb
pop
inc
out
cmpsl
sbb
jb
in
pop
sahf
mov
xchg
sarb
fcmove
popf
cmc
lcall
das
xor
stos
negb
lret
lock
or
in
xchg
and
jmp
mov
dec
adcb
and
adcl
xchg
ljmp
mov
negl
jne
aaa
jnp
sub
xchg
jg
and
sbb
loopne
mov
inc
inc
pop
cltd
pop
cmpb
push
arpl
addr16
lret
or
mov
stc
jnp
rcr
mov
cwtl
adc
lret
ja
jmp
lods
outsb
scas
pop
jbe
ret
jnp
mov
mov
pop
xchg
cmp
push
mov
std
xchg
lret
push
pop
push
das
add
aad
sub
inc
jmp
outsl
fisubs
enter
in
push
xchg
lock
or
shrl
adc
rol
movsl
mov
loope
sub
movsl
add
pop
jmp
icebp
insl
scas
sub
imul
sub
rcrb
pop
add
mov
xchg
mov
pushf
cmp
sbb
mov
inc
mov
js
test
add
mov
fidivs
rcll
mov
lahf
lret
xchg
pop
ja
clc
cmp
inc
adc
mov
rcl
sub
push
sub
movb
sahf
jg
daa
ficoms
stos
inc
icebp
stos
pop
flds
sub
and
xchg
aaa
jne
push
fmulp
pop
int
mov
icebp
dec
cmp
cmp
fwait
add
push
xchg
out
sahf
jnp
enter
in
inc
ret
enter
xchg
mov
rcl
xchg
cmpsb
cmp
mov
push
test
ljmp
ljmp
xorl
mov
push
mov
lock
test
xchg
movsl
or
hlt
pop
push
mov
imul
pop
stos
xor
lcall
out
mov
sbb
out
pop
mov
push
test
sub
xchg
ljmp
ret
daa
sub
cmp
icebp
test
jp
xchg
imul
jbe
sbb
out
pop
push
xchg
adc
xchg
pop
sbb
sub
xchg
lahf
addl
sar
jns
testl
xor
icebp
out
fwait
jns
or
dec
mov
lahf
enter
xor
pop
fadds
adc
movsb
imul
mov
fwait
rcr
dec
add
stos
or
sub
and
outsb
stc
xor
dec
jg
pusha
xchg
pushf
shll
mov
dec
sub
out
lcall
les
or
mov
outsl
lea
jle
dec
shlb
sbb
lock
mov
mov
lcall
insb
dec
mov
orb
mov
jae
cld
es
ret
mov
iret
mov
pop
std
add
and
xchg
outsl
and
scas
xorb
add
dec
pop
sub
nop
mov
cmp
cld
pop
jg
pop
aas
mov
add
ss
inc
or
or
insb
movb
pop
es
mov
loopne
aad
cmp
outsb
rolb
pop
xor
jbe
stos
cmpsb
or
ja
adcb
je
lods
mov
imul
xchg
dec
adcb
fwait
repz
test
xchg
lcall
inc
jle
jp
push
cmp
test
mov
mov
or
daa
ret
sti
aad
inc
or
inc
enter
repnz
pop
push
sbb
jnp
sub
pop
sbb
push
mov
push
sub
adc
dec
clc
mov
mov
mov
fmul
or
in
idivb
mov
ret
sub
sub
mov
mov
lods
pushf
shr
add
sbb
mov
mov
shrb
xchg
mov
sub
lock
mov
sub
pop
dec
dec
test
adc
push
or
mov
push
ljmp
int3
repnz
fisubs
lea
shrl
insl
outsl
out
lods
rcrl
mov
jl
in
lds
cmpsb
sarb
and
push
jge
xchg
faddl
sahf
pop
jne
add
adc
mov
xor
data16
repnz
mov
sti
pop
out
push
dec
push
add
or
push
cmp
movb
dec
mov
ret
mov
inc
sub
movsl
xchg
int
int
dec
sub
xchg
es
pop
jb
jle
iret
and
xchg
sbb
loopne,pn
xchg
sub
mov
std
in
mov
sbb
dec
in
rcr
mov
adc
fwait
jl
cmp
lret
js
and
add
dec
test
js
adc
xchg
mov
and
cmp
jecxz
call
fisttpll
pusha
sub
in
daa
test
push
sub
and
fidivrs
cwtl
or
shrb
es
inc
insb
mov
xchg
mov
and
test
mov
mov
int3
aad
inc
idivl
sahf
pushf
sub
shll
xor
pop
mov
jbe
dec
sbb
and
pop
push
pop
mov
dec
dec
sbb
mov
shrb
mov
pop
pop
dec
dec
dec
adc
jle
cld
jl
ss
mov
jle
call
add
dec
push
push
adc
dec
shrb
push
aad
cmpb
mov
loopne
jae
mov
pop
pop
inc
xchg
aaa
lods
in
repz
movsl
cmp
push
movsl
movsb
mov
rclb
ljmp
mov
movsl
pop
mov
lock
test
xchg
cmp
int3
cmpsb
adc
inc
mov
andl
push
orb
in
lahf
subl
out
mov
xor
stos
jno
mov
cs
bound
jae
xor
int
mov
sub
adc
out
dec
push
fnstenv
push
fcomps
push
adc
loopne
icebp
cmp
filds
add
or
js,pt
icebp
cmp
cs
out
xchg
psubsw
cmc
mov
xchg
xor
push
imul
rclb
lds
pop
fisttpl
ret
cmpsl
mov
mov
add
or
mov
jmp
hlt
sub
mov
xchg
push
adc
dec
test
sub
add
cwtl
and
lret
ud1
dec
lods
insb
add
cs
ret
add
xchg
aam
cld
pop
popa
mov
in
andb
xor
popf
pop
dec
fistpll
pusha
jmp
or
xchg
pusha
jb
lock
xchg
jno
push
lock
out
mov
clts
inc
in
es
jmp
popf
mov
pop
or
mov
mov
add
fmuls
shr
xchg
call
iret
lods
notl
in
jno
mov
out
cwtl
dec
pop
xor
xchg
enter
in
push
jmp
aad
inc
cmpb
jmp
pop
jp
sbb
je
or
or
ret
andb
mov
mov
jno
jg
add
mov
loope
cmp
bswap
outsb
or
repnz
adc
adc
mov
enter
clc
lcall
adc
fisttps
and
pop
scas
fwait
sub
mov
mov
fs
mov
and
and
test
pop
in
xchg
push
jae
sub
cmc
add
adc
mov
add
mov
cmp
leave
loop
cmp
stos
jp
imul
test
pop
jno
arpl
int3
push
cmp
add
push
out
sbb
cmp
cltd
lcall
pop
pop
cmp
xor
push
cmp
adc
int
pop
and
mov
cmpsb
xchg
push
in
xor
sbb
aam
movsl
cmpsb
xchg
sarb
cmpsb
pop
sbb
sbb
pop
repnz
ret
test
pop
xor
dec
daa
jp
add
ret
scas
and
mov
jns
insl
lock
pop
lcall
loope
push
lret
andl
rcrl
test
punpcklwd
or
jmp
cmpsb
cmp
lods
mov
movb
jmp
dec
or
out
ret
loopne
xchg
mul
outsb
je
pop
divb
jmp
adc
mov
outsb
div
leave
subb
out
popf
hlt
jns
pop
dec
sbb
inc
pop
in
cwtl
test
scas
or
imul
ret
dec
ja
icebp
mov
mov
inc
pusha
ja
dec
xlat
push
cli
jp
adc
shlb
mov
push
loope
fcom
push
out
cmpsl
insb
icebp
mov
sahf
or
jle
clc
int
cltd
std
or
lret
and
test
cmp
pop
popa
xchg
cmp
in
push
lret
in
push
loope
arpl
xchg
and
pusha
ss
mov
jbe
mulb
sar
fcomps
inc
icebp
xchg
lds
stos
mov
in
jg
lods
jne
ficompl
outsb
pop
ja
push
sbb
add
jl
ljmp
js
lcall
mov
stos
test
sbb
loope
or
push
sub
loop
pop
mov
pop
jb
cmp
sbb
std
mov
pop
add
enter
or
cmpsl
lahf
sbb
push
pop
je
dec
jp
ret
fisubs
in
push
sbb
ret
add
jp
lret
loopne
shll
shrb
or
jno
and
push
mov
jge
inc
aas
sbb
jp
shlb
pusha
jl
and
xor
sub
adc
jmp
adcl
jge
xchg
pop
inc
loopne
hlt
pop
cmc
popf
shlb
in
cmp
mov
jmp
xor
dec
in
mov
out
fwait
mov
xor
hlt
outsl
pop
test
or
cmp
pop
cmp
mov
cmp
mov
xor
pop
jbe
fdivrs
lret
sub
out
into
cmp
push
mov
and
dec
ljmp
jg
repz
sub
pop
xchg
int
xorps
icebp
jns
jne
and
fwait
mov
push
add
lods
lahf
inc
jl
push
lret
aad
mov
lods
out
pusha
jmp
comiss
mov
inc
in
dec
lahf
mov
ja
xchg
dec
pop
jmp
push
lods
or
scas
add
movups
jne
adc
sti
push
xor
jg
cld
jb
cmp
pop
icebp
popa
jmp
inc
es
fwait
shl
inc
mov
sub
xor
int
jg
push
mov
dec
popa
into
mov
in
dec
fiaddl
xchg
loope
pop
inc
clc
cmp
xchg
dec
fstl
sbb
mov
add
xchg
xor
adc
addl
fwait
ds
bound
and
loope
adc
sbb
mov
subl
pop
mov
pop
push
jae
push
inc
cmp
hlt
andl
and
nop
dec
movsl
inc
lea
adc
xchg
xor
adc
mov
lahf
pop
fisubl
or
and
mov
test
add
out
sbb
js
pop
push
mov
gs
out
push
shrb
mov
rolb
es
xchg
cmp
cmp
mov
ss
mov
add
lahf
sti
mov
movsb
xor
mov
xor
gs
jl
ljmp
sub
or
lods
cld
xor
gs
int3
dec
sub
jno
pushl
mull
inc
or
shl
cltd
pushf
sbb
mov
sub
out
mov
sahf
movsl
divb
jnp
loop
cmp
lock
lret
pop
pusha
and
dec
pop
mov
popa
or
pop
lahf
mov
lods
dec
ja
dec
loope
sub
lret
adc
cli
ja
rolb
xchg
js
pop
pop
dec
inc
std
xor
sar
data16
jnp
sub
jno
mov
sahf
or
icebp
sbb
lret
sbb
jmp
or
stc
cltd
jae
and
dec
popf
stos
mov
jecxz
jbe
hlt
shll
loopne
aas
add
add
cmp
or
test
xchg
mov
cwtl
lea
rcrb
cltd
daa
jmp
lret
sub
sub
cmpsb
xchg
adc
inc
and
hlt
xor
sub
jnp
lcall
pop
popf
ja
push
rclb
pusha
or
jb
adc
cmp
or
sub
popf
sahf
inc
xor
mov
mov
sahf
xor
repz
getsec
mov
push
pop
cs
xchg
and
jne
sar
loop
pop
push
movsb
imull
das
ja
push
sbb
adc
inc
repnz
and
popa
and
jae
int
adc
push
lret
cwtl
sub
mov
push
dec
in
add
insl
push
insb
xchg
lcall
push
mov
rol
fisttpll
jmp
das
in
push
mov
cwtl
pop
mov
outsb
or
push
in
sbb
push
ljmp
mov
rorl
sbb
sub
pop
mov
jmp
xchg
hlt
pusha
aas
int
js
adc
jbe
in
popf
pop
adc
push
lret
call
and
fstpt
jge
mov
lock
cmp
in
add
jo
dec
inc
pop
dec
lock
mov
push
out
adc
call
dec
fwait
sub
jae
data16
cmp
mov
and
fs
incl
mov
repz
xor
jmp
sub
jae
fdiv
je
sub
int
inc
push
idivl
cmp
mov
dec
scas
xchg
pop
bndldx
sarl
loope
push
mov
int
mov
scas
sub
adc
mov
and
jo
sbb
push
jp
sbb
sbb
bound
pop
frstor
insb
xchg
xchg
or
std
push
mov
xchg
mov
clc
addr16
or
sub
cmp
mov
and
push
xorl
lret
jecxz
xlat
testl
or
mov
mov
adc
sub
in
sti
data16
cmp
mov
adc
add
pop
cmp
inc
xorb
push
clc
pop
or
aam
lock
aad
cltd
js
pop
addl
popf
and
leave
cs
pushf
decb
subb
mov
bound
ss
pop
pop
xchg
dec
sub
ljmp
repz
cmp
adc
daa
jbe
arpl
push
popf
mov
pop
xor
fbstp
and
pop
in
nop
lods
cmp
xchg
add
mov
decl
sbb
mov
cmp
decl
cld
inc
dec
sub
fs
mov
inc
int3
loop
outsb
lcall
imul
test
addr16
sub
sbb
scas
subb
outsl
loop
sbb
mov
sub
jno
xor
stos
mov
jge
nop
or
push
pop
stos
movsb
enter
add
ljmp
movsl
pusha
das
mov
cwtl
pusha
mov
pusha
out
enter
outsb
jmp
int
mov
stc
in
pop
int
adc
pop
xor
mov
xor
stc
add
ljmp
pop
int3
adc
nop
outsl
fistpll
inc
shlb
mov
in
add
clc
jo
rcl
xchg
push
or
fdivs
sub
je
cmp
mov
cmp
loop
and
xor
mov
pusha
ljmp
cmp
xchg
push
data16
inc
pop
int3
xchg
or
aad
mov
or
fistpll
adc
rol
inc
push
lahf
dec
xchg
rcl
sete
mov
pusha
test
sbb
xchg
inc
mov
sub
jnp
fucomp
or
mov
inc
jmp
mov
pop
mov
xchg
repnz
or
jmp
mov
add
mov
push
sti
push
int
dec
inc
rorb
jnp
into
push
sbb
push
inc
test
push
movsb
sbb
ret
ja
mov
sub
lods
or
mov
mov
sbb
stc
xchg
fnstsw
sub
mov
mov
pop
sub
roll
mov
aam
add
cmp
inc
out
repz
es
and
out
movsl
dec
decb
test
addw
insl
imul
daa
sbb
pop
mov
cmp
mov
insl
les
lret
sbb
pminub
jge
sar
nop
add
push
jl
repz
divl
shl
or
call
jecxz
jp
call
out
sbb
xlat
rcl
sub
cmp
rorl
pusha
fisubl
jmp
mov
leave
leave
jmp
mov
leave
repnz
add
out
repz
and
stos
orb
adc
sbb
mov
adc
dec
loopne
dec
add
dec
mov
daa
mov
stos
jp
in
scas
sbb
inc
xchg
or
pop
aad
and
inc
jp
into
lods
lea
scas
fadds
xchg
push
lods
arpl
aam
mov
sub
and
xchg
ja
adc
in
lret
out
int
xlat
arpl
call
mov
inc
pop
loope
out
sahf
ja
punpcklbw
mov
mov
imul
push
dec
dec
out
std
cmp
js
int3
mov
ror
pop
fisttpl
bound
and
and
push
mul
nop
push
or
push
hlt
cmp
std
out
sar
sub
aaa
je
rcll
push
stos
sub
lods
fisubl
cld
cld
out
fs
inc
cli
negl
push
and
fstpt
mov
sbb
push
call
or
cmp
mov
int
pop
xor
inc
add
xor
mov
and
ret
or
cmp
jno
shll
dec
cmp
fists
cld
dec
sti
cld
jg
lret
push
pop
push
into
cs
adc
in
mov
inc
pop
mov
mov
jo
cmp
mov
sub
movb
cwtl
add
adc
lahf
adc
xor
iret
cmp
jmp
pop
jb
repz
push
mov
mov
xchg
ret
hlt
fidivs
or
popa
adc
cmp
jmp
std
push
in
fdivl
test
fwait
out
fs
add
popa
add
loop
cltd
pop
mov
lret
ds
lods
addb
aas
jnp
xchg
xor
int
shll
dec
jo
jns
addb
test
imul
cld
loope
out
and
and
aas
xor
imul
pushf
cmp
mov
sub
enter
mov
dec
mov
test
jl
std
or
pop
js,pt
daa
push
xchg
mov
xchg
andb
out
mov
xor
mov
sub
sub
sahf
fs
dec
into
xor
ljmp
mov
or
push
out
pop
test
mov
imul
pop
loope
mov
xor
add
shlb
sub
out
pop
sub
fsubrp
pusha
popf
mov
out
pop
add
daa
out
scas
jp
ret
pop
iret
scas
mov
les
or
lock
lret
push
pusha
loope
mov
xor
ficompl
inc
sub
out
inc
add
xorl
fwait
cmp
out
test
mov
adc
into
lahf
fistpl
in
xchg
jae
add
popf
jne
adc
jecxz
and
icebp
fidivrs
cmp
pusha
xchg
mov
mov
push
jg
out
mov
mov
das
sti
rcrb
inc
cmpsl
leave
push
sbb
add
dec
dec
movsl
fcmovu
mov
movsb
fstpl
push
imul
cmp
xor
mov
test
lahf
or
out
inc
pusha
sbb
mov
nop
sub
cs
imul
std
pop
push
pop
inc
sbb
mov
cmpsb
iret
ret
imull
ja
adc
cmp
popf
fcmovbe
fdivr
je
insl
out
and
mov
sub
and
fsubrs
mov
xlat
jl
aam
insl
xchg
fdivl
xor
cld
inc
fwait
mov
mov
loope
mov
adc
js
adc
jmp
inc
lods
mov
mov
leave
dec
mov
dec
shl
mov
xchg
xchg
movsb
loopne
pop
iret
pop
inc
out
pop
aaa
jp
or
popf
sbb
add
xchg
aas
push
cld
and
inc
enter
sub
dec
push
jmp
test
xchg
hlt
fimull
in
pop
filds
jo
fst
xor
or
cmpsl
dec
out
leave
movsb
movsb
stc
xchg
in
iret
mov
daa
cld
dec
and
cmc
sub
cmpb
inc
inc
add
mov
mov
cs
mov
jnp
dec
and
xchg
or
inc
xchg
inc
out
mov
repnz
cmp
push
into
bswap
ja
pop
adc
sub
lret
jmp
shrl
aad
push
jae
jo
pop
loop
shll
sbb
xor
in
jecxz
jp
and
sub
test
inc
or
in
push
mov
xchg
xchg
mov
sub
cli
pop
sbb
sbb
dec
js
add
dec
ds
jle
std
sbbb
cs
fwait
jmp
xor
mov
mov
icebp
push
icebp
cli
cmpsb
sbb
test
adc
mov
or
xor
mov
mov
sbb
rorl
lods
jl
mov
dec
ret
lods
loop
mov
rorl
out
adc
mov
outsl
jle
push
mov
dec
dec
and
in
pop
into
cld
jmp
or
push
repnz
testl
in
std
in
sbbb
xchg
pop
ret
push
lret
mov
mov
add
dec
cmp
xor
or
movsb
imul
jne
add
sbb
mov
int
inc
clc
dec
dec
push
pop
inc
dec
pop
add
sbb
leave
nop
xchg
pop
jmp
cmp
ljmp
jnp
lds
inc
cmp
mov
pop
jge
xor
inc
xchg
int3
and
jbe
hlt
int3
or
cmp
sub
and
ja
notl
or
stc
arpl
sub
push
adc
add
ret
xchg
push
std
out
pop
jo
push
gs
in
xchg
xor
pop
pop
sbb
shr
mov
push
loopne
jb
jae
outsb
dec
add
pop
push
test
aas
jge
inc
imul
and
filds
cmp
test
jecxz
into
and
mov
inc
nop
push
xlat
adc
mov
into
lcall
pop
faddl
loopne
fs
aam
add
fs
mov
fwait
or
fs
adc
xchg
xor
lahf
pop
lret
rolb
test
adc
jo
and
mov
dec
lret
dec
jb
inc
cld
adc
ljmp
stc
mov
push
pop
xchg
dec
cmp
enter
je
gs
cmp
push
jne
nop
scas
outsl
fdivl
ss
cld
push
jmp
ljmp
mov
mov
lahf
shll
clc
lahf
push
or
mov
dec
cmp
jno
push
arpl
or
test
or
xchg
cs
adc
mov
fbld
jp
sti
dec
les
pusha
push
mov
jle
dec
cmp
in
cmc
jl
mov
sbb
fiadds
xchg
inc
mov
xchg
pop
negl
iret
pusha
mul
push
out
std
inc
cli
ds
gs
pushf
xor
sub
test
aaa
adc
sub
imul
sub
pop
ror
push
out
fwait
mov
js
insl
hlt
push
popf
and
inc
das
sti
mov
mov
sbb
sbb
hlt
rolb
shlb
push
lods
xor
mov
fldenv
lods
jg
outsl
imul
adc
sarb
stos
push
jns
sahf
lds
cmp
or
scas
sub
fdivrs
subb
adc
lods
xchg
sar
bnd
xlat
mov
jl
mov
mov
cwtl
insl
or
cmc
xchg
rol
cmp
mov
xchg
push
jne
xor
cmp
sbb
jmp
mov
nop
fs
enter
int
xchg
push
cmp
pop
sbb
sub
lds
out
inc
mov
mov
sahf
inc
pop
ret
dec
cmp
mov
and
shr
ret
mov
fstpt
inc
scas
jno
push
or
addb
cs
or
test
ret
arpl
and
enter
insb
popa
jo
fmuls
faddl
repz
pop
cli
lret
mov
mov
cwtl
ret
xor
fxch
insl
dec
imul
sbb
cmc
loop
jg
shrb
shr
cmp
stc
and
imul
mov
push
enter
outsb
pop
sub
pop
jns
add
mov
pop
mov
pop
dec
lods
insl
push
mov
push
jl
cmc
bound
jbe
jne
fisttps
leave
nop
sub
sub
imul
jmp
outsl
push
cmp
dec
bound
inc
sub
dec
pop
shlb
rorb
xor
adc
adc
lret
mov
pop
push
add
sbb
inc
jp
mov
test
fndisi(8087
inc
cmp
lods
aas
sub
xor
xor
pop
subl
sets
call
shll
mov
nop
test
fnstcw
jp
insl
sub
std
xchg
mov
scas
push
inc
pop
rcr
pop
pop
and
fildl
mov
call
xchg
out
mov
push
adc
enter
push
push
shll
incl
cmp
inc
in
sar
test
sub
pop
out
xor
addr16
int
add
pusha
out
adc
xchg
out
or
inc
mov
fnsave
inc
pop
roll
xchg
jp
cmpsb
xchg
movsb
adc
outsb
scas
xor
dec
jle
into
or
in
sub
dec
loop
sub
push
sbb
mov
outsl
pop
stos
ss
das
popf
push
jae
mov
rclb
arpl
mov
jbe
in
jne
jp
fwait
inc
xlat
aam
pcmpeqb
dec
push
aam
lahf
fs
dec
sbb
xchg
adc
mov
cmp
pop
and
mov
add
push
fnstsw
shlb
fwait
or
in
pop
cli
movups
pop
mov
in
loope
inc
mov
hlt
dec
sbb
dec
je
inc
jle
jb
clc
push
adcl
call
mov
dec
and
add
push
cld
pop
lret
mov
jg
faddl
push
cmp
mov
mov
mov
jno
jge
xchg
push
sbb
cmp
out
ljmp
out
xor
push
dec
inc
sub
cmc
xor
decb
pop
cmpsb
sbb
push
aad
mov
idiv
clts
inc
dec
popf
xchg
test
lret
adc
inc
loopne
xor
inc
cmp
lcall
sub
enter
stos
lahf
sbb
stc
scas
inc
push
cmp
pop
mov
sub
jmp
int
jmp
pop
sarb
iret
fwait
lea
outsb
insl
push
mov
push
nop
testl
jo
adc
and
jge
mov
hlt
clc
bound
outsl
pop
outsl
jbe
pusha
dec
jg
sbb
cmp
jmp
adc
inc
dec
xchg
pop
cmp
jbe
insl
ja
cwtl
or
bound
bound
or
pop
pusha
mov
xor
push
dec
scas
push
inc
push
cmp
sub
lret
dec
roll
jno
or
xor
fbstp
cmp
mov
insl
xor
rcll
not
lods
pop
add
lahf
jl
in
push
xorb
mov
sbb
cmpsl
push
jp
sbbl
xor
imul
or
jbe
repz
in
sahf
jmp
dec
adc
cli
or
popa
or
fidivl
mov
mov
inc
lcall
xlat
das
jecxz
outsb
daa
cs
stc
popf
inc
xor
fstpt
xchg
hlt
shlb
fcomp
outsl
js
in
stos
mov
scas
ss
addr16
into
loopne
rcll
mov
lcall
in
lods
sub
int3
pop
mov
repnz
fsubrs
mov
or
inc
pop
das
out
nop
or
mov
jno
test
sbb
into
cli
out
add
push
push
fstpl
add
inc
jmp
ja
cld
pop
xchg
jle
scas
lods
sub
lods
push
mov
je
lret
aaa
subl
pusha
xor
or
int3
in
and
bnd
and
sub
push
sahf
iret
jl
ja
in
add
mov
jne
rcr
cmpsb
rcrb
iret
sub
nop
inc
xor
pop
int
pop
dec
ds
adc
cmc
pop
ror
jmp
leave
rorl
loopne
sbb
movsl
gs
sar
fnstenvs
or
into
hlt
sahf
dec
mov
mov
sub
roll
leave
iret
scas
cmp
mov
push
jo
rolb
mov
add
insb
test
je
hlt
out
push
jg
inc
arpl
jns
leave
andl
aam
adc
adcl
xor
push
sbbl
rorl
movsb
pop
and
inc
pusha
gs
jne
inc
aaa
mov
lods
std
adc
xor
mov
lcall
insl
xor
in
cmpsb
adc
fdivp
aaa
das
cmp
or
movsb
jne
gs
popa
pusha
cmpsb
scas
je
es
fmuls
loope
orl
movsl
push
add
dec
sub
scas
divl
ret
outsb
jno
inc
ds
push
sub
lock
lret
lea
adc
ja
cmp
imul
and
rcl
daa
push
or
lods
and
out
lock
sbb
jmp
xchg
cmp
ret
movsb
int3
xchg
cmp
mov
sub
insb
mov
ljmp
test
push
popa
pop
sbb
xchg
into
xor
movsl
test
mov
sub
jg
dec
daa
pop
mov
fwait
loope
idivl
lea
je
addr16
pop
adc
mov
lret
dec
cmp
pushf
cld
insb
fidivs
pop
fwait
sub
xor
rorl
es
into
push
repnz
iret
dec
scas
in
ss
or
xor
pop
push
ficoms
push
jne
sub
lock
or
mov
mov
int
mov
lret
dec
dec
sbb
push
fs
clc
es
in
outsl
in
mov
push
jmp
popa
mov
mov
cmp
inc
jmp
cmp
xor
jmp
mov
shll
mov
adc
jb
in
mov
adc
mov
lods
cmp
add
inc
rcl
pop
gs
pop
xchg
in
int
sub
pushf
xchg
testb
imul
inc
lcall
outsb
push
out
xchg
je
dec
push
fwait
cmp
les
xchg
inc
jnp
xor
jno
mov
jmp
insl
arpl
cwtl
iret
push
jb
sub
stos
dec
and
arpl
adc
xchg
xor
jmp
pop
dec
lea
jg
and
fsub
jecxz
push
dec
shll
sub
mov
lods
adc
sub
adc
pop
inc
pop
std
stc
decl
sbb
inc
es
and
scas
and
inc
lret
ret
mov
mov
pop
ljmp
popa
scas
sbb
xor
jge
jne
sar
mov
mov
ja
sub
lahf
cld
imul
pop
xor
int
add
mov
in
jb
test
ss
mov
inc
dec
mov
jnp
test
leave
inc
pusha
shll
sti
push
repnz
mov
sbb
ss
lahf
std
jge
outsb
aad
xchg
inc
imul
and
out
test
xor
les
shr
adc
std
ljmp
stos
rcr
les
das
addr16
insb
lahf
mov
out
lock
or
nop
repnz
out
mov
jmp
cmpsl
lahf
pop
or
addr16
mov
arpl
push
nop
or
pop
out
or
and
lods
push
jne
xchg
and
push
pop
loop
lahf
dec
out
idivb
stos
fnstenv
pop
dec
test
out
aad
popa
mov
mov
and
loope
mov
rcll
inc
out
mov
iret
mov
ret
stos
rorb
jne
xlat
popf
xor
arpl
jbe
lods
pushf
aam
enter
mov
cmpsl
sbb
in
mov
sub
pop
xor
dec
mov
sbb
je
arpl
mov
mov
fidivl
sbb
dec
push
in
shll
scas
push
sub
and
mov
pop
pop
sub
cld
mov
lds
or
lret
add
pop
mov
sbb
adcl
push
outsl
lcall
aam
aam
test
dec
xchg
adc
sbb
and
sub
lahf
pop
lds
or
mov
shr
and
xor
adc
cmp
mov
jnp
pop
test
sbb
in
add
push
pop
cwtl
addl
out
xchg
fbstp
cltd
adc
psrad
pusha
sbb
fldenv
jl
rcr
push
push
mov
cmp
inc
or
mov
xlat
cltd
mov
test
cmp
push
mov
mov
lret
mov
dec
mov
add
inc
jmp
mov
sub
xchg
xchg
test
hlt
add
repz
lock
inc
icebp
push
cld
jle
pop
lock
mov
ljmp
mov
jno
scas
cmp
aaa
fidivl
mov
mov
movsl
loope
cli
sub
mov
push
xor
fimuls
test
enter
lret
dec
ljmp
dec
loop
xchg
mov
cmpsb
idivl
xchg
sub
cmp
jne
or
jne
jp
das
pop
mov
lahf
mov
scas
gs
je
or
push
adc
aad
in
sbb
jbe
add
gs
dec
das
and
mov
div
jae
mov
lods
jb
js
and
jmp
shlb
gs
ds
adc
aas
adc
push
jns
ret
idivl
pop
xchg
andl
cmp
xchg
sub
lock
mov
jl
pusha
mov
leave
xor
cs
sbb
mov
push
mov
out
loope
aad
mov
scas
and
sti
or
popf
fdivl
dec
out
movsl
push
fwait
cli
and
int3
cld
or
xchg
xchg
inc
dec
dec
fists
nop
loope
rcll
mov
jge
push
sbb
lea
dec
xchg
adc
in
mov
bound
js
es
cmp
xchg
ss
lcall
jnp
lahf
sbb
mov
in
pushf
test
mov
cmp
dec
jns
insl
idiv
jae
stos
inc
xor
sbb
cli
xchg
outsl
mov
in
xor
nop
cmpsb
xorl
xor
mov
out
or
jnp
imul
iret
jle
sahf
dec
pop
or
lret
adc
xchg
fistpl
in
test
imul
iret
repz
popf
lods
mov
aaa
in
sbb
inc
push
xchg
cmp
sarl
adc
mov
mov
push
mov
lods
cld
mov
shrb
dec
shrl
adc
jge
addl
mov
arpl
loope
pop
loope
loopne
iret
lahf
mov
sub
and
stos
push
push
sbb
or
push
stos
pop
push
mov
mov
pop
stos
cltd
aaa
dec
ja
enter
gs
mov
sub
xchg
add
cmp
addr16
cmpsb
pop
pop
mov
or
out
xchg
mov
orl
sub
lea
cs
scas
imul
jmp
push
inc
imull
insl
xor
fildl
insb
fmuls
sarb
ljmp
jge
pop
in
mov
testl
mov
out
push
shlb
jp
shl
push
cmp
mov
xor
scas
push
pop
inc
cmpsb
inc
jnp
das
inc
fs
mov
call
mov
adc
loopne
xchg
cwtl
lahf
bound
mov
gs
pop
dec
addr16
jmp
subb
sbb
sahf
lods
scas
add
outsb
int3
add
nop
sub
lcall
leave
stc
push
mov
inc
or
filds
rcll
ds
or
pop
fwait
mov
lret
mov
dec
cmp
pusha
cltd
adc
iret
sbb
adc
xchg
sub
idivb
push
addb
xchg
shlb
jne,pt
mov
jne
out
iret
mov
imulb
adc
lods
lock
push
lret
mov
int3
mov
fisubrl
dec
call
sub
sub
mov
xchg
or
iret
ljmp
lret
mov
inc
pop
scas
mov
stos
aaa
pop
rorl
xchg
lahf
cbtw
push
xchg
in
cmpsl
xchg
sti
add
push
cmpsl
ret
xor
mov
dec
ret
xchg
dec
insb
mov
jnp
shrb
add
lret
das
push
jl
les
jnp
repz
pop
lahf
mov
cmp
pop
xlat
mov
and
xlat
and
xor
push
aam
xchg
cwtl
sub
push
mov
jge
hlt
mov
sbb
xchg
sub
fnstsw
popf
leave
mov
cmpsl
inc
aaa
imul
cmp
adc
cli
adc
xor
imul
mov
cmp
ja
test
xchg
fdivl
adc
inc
pop
mov
jbe
push
xor
test
mov
adc
push
mov
int3
leave
sub
test
jmp
and
jae
lods
mov
adc
push
movsl
cmp
push
loopne
jge
add
sub
sub
push
sub
shr
sbb
xadd
or
stos
push
lock
sub
mov
push
les
pop
test
inc
add
jnp
scas
xchg
mov
cmp
lret
insb
lods
iret
stos
lods
fcomps
imul
idivl
mov
dec
mov
ljmp
sbb
mov
mov
popf
shll
adc
pusha
push
decb
pop
mov
jno
sub
sbb
pop
aas
call
xor
xchg
pop
jbe
add
cmpsb
nop
or
pop
cmp
cmp
sbb
dec
icebp
addl
hlt
ljmp
outsb
xchg
jmp
lahf
cmp
loopne,pn
sti
sub
dec
or
and
popa
adc
das
mov
paddq
pop
loop
lods
lods
aam
shll
das
ljmp
cmpsl
and
cmp
out
mov
jg
adc
or
cltd
loop
sbb
dec
adc
dec
leave
or
stc
and
out
and
jnp
cltd
cmp
jbe
out
push
mov
cmp
xor
dec
out
sbbb
cld
jecxz
mov
ret
pmuludq
or
and
and
and
dec
test
pop
stos
or
xchg
add
xchg
cmp
sbbb
jb
adc
cmp
mov
xchg
cmp
sub
out
loope
sahf
lret
fcomps
shll
shll
mov
in
mov
cli
jb
adc
mov
adc
pop
mov
ja
xchg
movsb
dec
sahf
aas
pop
dec
loopne
mov
sahf
mov
lods
sbbl
or
sub
lds
fidivl
pop
inc
rcr
sarb
adc
in
popf
jl
xor
jp
add
add
idiv
insb
int
cli
cmp
daa
jb
scas
imul
sub
clc
std
xchg
sbb
gs
xchg
out
iret
inc
shrl
pop
cmp
sbb
sbb
push
mov
cmp
loopne
jmp
cmp
scas
mov
add
cmp
xchg
push
xor
imul
and
cmp
icebp
shrl
jmp
pop
mov
pop
push
aam
scas
pushf
fld
cmc
adc
hlt
xchg
rcll
into
test
mov
push
sub
fstpt
mov
lods
fimull
add
test
mov
fs
imul
xlat
jecxz
inc
out
stos
add
push
xchg
fs
fimuls
das
or
push
mov
mov
popa
orl
repz
popf
add
imul
pop
adc
sbb
xchg
and
inc
ljmp
adc
push
jne
stos
jb
and
pop
mov
scas
cmp
stos
jno
dec
mov
mov
or
leave
cmp
test
cmpl
push
jb
rorl
sarb
xchg
jno
int
or
inc
cmp
push
cltd
pop
les
fstpl
pop
xor
push
shlb
pop
jne
mov
out
pusha
adc
pop
fisubrl
inc
jnp
pusha
jb
push
push
dec
clc
sti
mov
dec
xor
cmpsb
pop
mov
cld
xor
lahf
add
mov
xchg
sti
sub
cwtl
xor
popf
subl
jne
push
jne
mov
pop
sbb
cmp
arpl
push
incl
test
dec
push
ret
pusha
sarl
pop
adc
mov
sbb
add
mov
ss
xchg
imul
shll
lret
adc
andb
mov
mov
add
loope
mov
mov
push
xor
je
or
lea
mov
or
push
daa
out
mov
xchg
std
mov
xchg
fdivr
jo
insb
adc
add
lret
mov
mov
cld
je
fwait
push
test
mov
int3
fstl
arpl
inc
into
or
sub
cs
xor
int3
out
add
test
cmp
sbb
dec
and
stos
jg
sub
jb
hlt
leave
pop
out
cmpl
std
movsl
test
push
mov
in
dec
pop
adc
mov
divl
fwait
mov
pop
cmp
dec
mov
movsb
data16
in
inc
imul
repz
jbe
mov
sub
fistl
stos
or
cmpxchg
mov
icebp
mov
movsl
add
int
stos
dec
cmpsl
jecxz
mov
mov
pop
leave
adc
mov
xorb
pusha
mov
jge
pop
push
in
adc
cmp
and
sub
inc
add
sbb
mov
shll
push
sbb
push
jns
lret
lahf
fldcw
cmp
jno
pop
imul
mov
add
adc
test
push
test
cmp
mov
push
jl
rol
cmp
fwait
mov
xor
add
jne
and
ret
sub
push
adc
jmp
lock
jmp
dec
sarb
movsb
and
lahf
cmpb
fisubrl
test
jne
pop
xchg
push
xchg
stos
cmp
test
and
mov
jno
andl
xchg
inc
faddp
adc
cmp
add
push
fistps
dec
push
btr
stos
shl
rcrl
and
in
or
dec
outsl
testl
push
fdivr
dec
push
and
push
xchg
sti
bnd
jg
push
inc
cmp
pop
mov
inc
xlat
adc
divb
xorb
or
lahf
jmp
rorl
call
sahf
fs
lock
pop
or
lea
out
and
pop
add
cmp
or
xchg
mov
jp
lret
jl
bound
adc
sub
jns
dec
pop
sub
add
shlb
dec
inc
jnp
popa
lods
xchg
negl
ret
and
push
rcll
inc
jmp
jle
pop
cli
loopne
sbb
rcr
mov
lds
mov
pop
and
mov
inc
sahf
jle
cmp
mov
pop
xchg
add
mov
outsl
inc
pusha
int3
push
stos
add
arpl
add
insl
addr16
ret
push
mov
in
lcall
pop
rclb
inc
xchg
xchg
dec
movsl
lds
dec
daa
js
push
fmul
rorl
jl
mov
fs
mov
dec
lea
mov
cmp
mov
repnz
xchg
mov
xor
pop
lods
xchg
mov
mov
lods
xor
mov
jmp
clc
mov
push
pop
mov
or
cwtl
jecxz
jnp
pop
and
adc
inc
xor
sbb
cmp
pop
leave
fidivs
cmp
stc
out
inc
pop
bound
cmp
and
sbb
pop
push
push
je
es
repnz
int3
movsl
and
popf
cld
mov
sbb
shrb
pop
sahf
jns
stos
repnz
ljmp
enter
fsubrs
xchg
dec
stos
daa
add
add
dec
mov
sbb
sub
and
cmp
mov
ds
cmpsl
out
xor
jecxz
aad
lcall
cmp
inc
scas
mov
js
jp
and
jae
cmp
mov
sbb
xor
mov
dec
int
rcrb
pop
pop
les
out
pushf
sub
mov
sbb
ja
in
sbb
sbb
fdivrs
ret
rcr
pop
mov
or
mov
fisubl
mov
xor
push
nop
gs
inc
xor
inc
lea
sbb
imul
clc
mov
js
nop
pop
in
ljmp
add
mov
lcall
lret
mov
xor
cmp
cmpsl
xlat
clc
adc
mov
aam
jl
shrl
jg
sub
pop
jg,pn
push
icebp
jbe
mov
push
add
fistps
cmpsw
or
cli
iret
or
push
inc
mov
adc
mov
js
mov
les
lcall
inc
sub
push
push
gs
lods
out
push
sub
std
adc
das
out
sarl
add
mov
xor
cmpsb
loop
push
outsl
sti
ja
lcall
rcr
sub
dec
in
xor
dec
shlb
mov
inc
sbb
sub
sbb
push
xchg
pop
and
cmp
mov
ds
pop
inc
aaa
xchg
arpl
jge
pusha
mov
inc
add
lods
lock
jns,pt
call
inc
xor
sub
enter
mov
rcrl
cmp
ret
mov
pop
aas
mov
imul
jo
int
jecxz
push
repz
movsl
cli
iret
jbe
cmpsb
lret
fsub
pop
push
pop
jns
insb
inc
cmp
cmp
movsb
cmp
int
inc
bound
inc
shr
and
testl
dec
xchg
shll
inc
adc
rcl
or
in
jno
sbb
xchg
xchg
jp
push
movsl
adc
sarb
dec
pop
inc
gs
data16
js
mov
out
add
sub
adc
sti
and
sbb
mov
sbb
rorb
aas
cld
andl
sub
and
mov
xchg
ret
inc
mov
adc
pusha
mov
pusha
cli
test
insl
cmp
scas
clc
inc
ja
mov
sahf
cli
cwtl
dec
nop
pop
inc
pop
stos
call
test
inc
pop
jle
test
sbb
xchg
test
add
andl
repz
iret
enter
xchg
inc
add
and
ss
sbb
cmp
sbb
je
pop
loopne
jmp
fisttpl
stc
popf
inc
in
add
push
out
std
test
sbb
jp
or
cmp
xchg
out
sub
test
mov
cmp
in
movsb
mov
jno
lods
dec
lods
pop
adc
stc
das
pop
pop
fistpl
std
mul
mov
pop
outsl
xchg
inc
imul
pop
shll
inc
fbstp
inc
outsl
gs
dec
add
adc
adc
sti
sbb
dec
push
jae
and
daa
adc
pop
inc
in
test
movsl
lcall
push
jnp
rcrb
insb
jecxz
mov
cmp
in
imul
push
call
or
ds
iret
out
or
pop
mov
or
ja
cltd
bound
lock
push
xchg
mov
sub
add
dec
mov
cmp
jo
fsubp
pop
jmp
lods
sbb
es
adc
push
dec
push
rorl
xchg
iret
mov
mov
push
insb
mov
inc
cmp
push
das
lods
es
ss
sub
jns
inc
mov
cwtl
push
cs
xchg
sub
pop
sbb
sbb
add
lods
out
aam
daa
in
out
insb
push
ljmp
sbb
call
pushf
mov
push
jne
cmc
arpl
aam
test
scas
call
pop
push
push
jecxz
cmp
jg
adcl
cmp
pop
lret
mov
pop
xor
pusha
cmp
pop
mov
hlt
ja
mov
cmp
and
icebp
cmp
adcb
addr16
mov
cmc
cmpl
in
and
cmp
outsl
je
push
xchg
mov
repz
aam
dec
out
imul
mov
aad
cmp
pusha
add
insb
jmp
cmp
mov
add
repz
testl
jmp
lahf
pop
dec
sbb
int
jns
sbb
sub
sub
int
iret
xchg
push
insl
std
popa
in
xorb
lret
inc
cmp
lcall
enter
stos
jae
mov
mov
ficoms
sbb
sahf
push
fldcw
or
jno
aam
fsubr
scas
arpl
jb
xlat
mov
js
mov
and
mov
addb
sbb
jle
mov
in
push
jp
std
push
xor
push
xchg
jns
mov
xchg
fisubrl
jge
cmpb
add
mov
shlb
loope
movl
enter
ror
ds
int3
mov
xchg
loope
mov
push
push
inc
or
mov
rcrl
push
mov
fidivs
add
jp
jo
repz
hlt
pop
es
repnz
push
add
cmpb
pop
jns
ss
pop
cmpsb
mov
sub
pop
push
xor
sub
clc
mov
push
movsl
aas
pop
cwtl
ja
adc
aaa
bound
lret
sbb
dec
cmp
xor
pushf
bound
mov
scas
mov
mov
and
jno
popa
mov
cmp
cwtl
fistpll
pop
mov
loop
mov
mov
loopne,pt
mov
imul
push
std
and
mov
test
sub
insb
jl
xor
mov
sub
xor
out
fmul
adc
xchg
das
jne
pop
int
testb
lock
inc
leave
or
jne
mov
and
and
loopne
aas
jno
cmp
lock
jg
push
mov
adc
pop
jns
adc
adc
mov
push
cmp
jmp
jp
xrelease
nop
or
jl
stc
adc
fsubl
jo
icebp
test
arpl
fiadds
push
cli
or
cs
js
aaa
pop
cmp
ret
or
imulb
scas
xor
mov
inc
lea
or
xchg
mov
mov
jp
stos
in
xchg
bound
dec
mov
push
nop
jne
cwtl
repz
cmp
out
sub
inc
scas
adc
mov
sahf
push
mov
inc
mov
bound
jg
out
and
xor
ret
inc
push
inc
jb
jae
inc
nop
mov
pop
clc
fidivl
loop
shrb
mov
xchg
clc
cltd
clc
xchg
xor
sub
mov
insb
dec
xchg
inc
jae
dec
mov
sub
xchg
dec
sarl
jbe
jle
jp
repnz
cmc
pop
les
pop
insl
out
repz
in
repnz
xor
scas
and
xorl
out
pop
adc
into
mov
mov
push
and
stos
add
negb
or
lret
and
loopne
mov
repnz
mov
gs
in
sub
xor
repz
subl
dec
cmp
repz
scas
sbb
shll
pop
dec
sahf
mov
mov
clc
lock
and
icebp
mov
push
daa
mov
cld
subb
inc
sahf
pop
mov
mov
mov
push
cli
pop
pop
aam
push
icebp
lahf
sarl
divb
mov
inc
mov
push
and
aam
sub
data16
push
stos
clc
lods
cmpsl
pusha
cld
pop
mov
out
sbb
jp
mov
jmp
xor
movsl
xor
mov
out
mov
addb
pop
aad
mov
enter
adc
dec
mov
mov
sti
inc
sahf
cmpsl
lret
jl
out
cmpsl
unpcklps
enter
popf
in
inc
mov
nop
xchg
ds
ljmp
and
arpl
sub
cmp
pop
lds
nop
lahf
xchg
xchg
shrl
dec
cs
inc
inc
sub
in
push
ret
shl
jno
mov
inc
jno
stos
daa
sub
les
pop
pop
nop
fistpll
movsb
cmpsl
fs
icebp
xchg
mov
das
mov
mov
and
mov
aad
mov
and
adc
cli
ret
fwait
xchg
pop
lds
cmc
push
mov
aam
pop
cwtl
inc
push
lock
sub
test
pop
inc
lods
pop
mov
lods
movsl
shrb
pop
out
and
mov
xor
or
jbe
mov
jp
je
lahf
mov
dec
mov
and
ret
flds
inc
repnz
mov
lock
cmpsl
or
test
inc
sbb
push
fcoml
fdiv
repnz
repnz
hlt
push
push
inc
add
push
add
movsb
inc
pop
jo
lods
test
sub
fldenv
loopne
hlt
ret
loope
mov
or
push
add
mov
xchg
and
and
cmp
shl
sub
je
je
cmp
or
fucomi
shrl
xor
xor
or
aad
jmp
mov
xlat
fldt
add
lods
das
data16
in
test
push
sub
jns
xor
dec
and
ficoml
icebp
mov
adc
push
movsb
ja
ds
mov
or
dec
cmpsl
xor
jo
call
les
fistpl
push
mov
mov
jge
loopne
mov
imull
jl
pop
shl
jge
daa
or
or
lret
lods
push
dec
test
sub
cmpb
das
mov
out
loopne
stos
mov
bound
inc
loop
jmp
ret
or
lret
ret
lds
xor
mov
sahf
outsl
fistl
sub
setne
movsb
fdivrs
mov
addr16
loopne
lock
and
pusha
add
icebp
fdivrl
jo
push
dec
xor
fisubrl
shrl
push
stos
mov
movsb
xchg
inc
mov
or
cld
inc
or
ss
push
sbb
fwait
push
sbbb
inc
pop
fistl
push
mov
dec
jl
mov
inc
xlat
mov
sbb
mov
sar
or
or
mov
stos
adc
mov
imul
aaa
in
push
push
mov
in
leave
outsl
stc
lock
negb
mov
lcall
sub
outsb
aam
jo
and
mov
jae
aas
mov
testl
test
rcrl
push
fs
pop
icebp
mov
push
cmp
mov
loop
enter
push
int3
ljmp
mov
push
icebp
push
push
imul
or
and
push
inc
imul
sub
sbb
lret
repz
inc
jae
mov
icebp
push
rolb
pop
pop
xchg
js
ja
inc
out
jo
mov
in
dec
inc
fildl
sbb
gs
ja
lret
lds
xchg
add
xchg
and
push
mov
push
dec
nop
mov
xchg
mov
cmp
outsl
push
jp
arpl
lret
pop
mov
add
js
push
lds
aaa
xchg
fcoms
mov
fldz
std
js
aaa
dec
mov
adc
outsb
xchg
add
push
mov
adc
icebp
jg
packuswb
xor
fwait
and
int3
cmp
andl
movsb
xlat
out
cli
pop
xchg
fimuls
or
movsl
ds
cwtl
in
sbb
push
mov
insb
in
pushf
or
gs
in
jne
aas
shl
xor
xchg
pop
addl
mov
jne
fists
inc
imull
dec
lret
cmp
fisttpl
or
fnstsw
movsl
out
pop
test
jno
rcl
xchg
mov
push
pop
mov
add
xchg
add
out
aad
adc
scas
xchg
cltd
sarb
mov
lods
iret
and
adc
out
rcrb
pop
pusha
cmp
adc
fildll
sbb
ret
or
in
inc
dec
or
dec
fcmovbe
sub
mov
repz
add
sbb
push
inc
std
lret
push
in
shrl
stos
mov
pop
push
dec
test
dec
fisubs
cwtl
sub
pop
dec
mov
adc
xchg
inc
lcall
lock
cmp
stos
adc
mov
push
fnstcw
dec
mov
fwait
sbb
sub
dec
loopne
dec
cmp
adc
nop
add
int
lock
cmc
mov
pushf
dec
inc
jp
iret
push
es
fcoms
fcoml
and
stc
fcomps
xchg
xchg
mov
js
idivl
aad
dec
mov
mov
enter
cmp
popl
push
mov
push
add
cmc
pop
mov
or
mov
inc
nop
or
push
fdivs
lods
test
in
inc
sub
mov
jns
mov
enter
sbb
cmc
xchg
mov
or
xor
lcall
out
mov
fdiv
ret
out
mov
cltd
insl
mov
loopne
pop
mov
xchg
jle
sbb
call
cmp
cmp
daa
or
arpl
push
fs
pop
std
mov
push
xor
enter
dec
add
dec
test
xor
mov
mov
lea
roll
dec
jo
pop
xchg
xchg
outsl
movsl
rclb
mov
mov
outsb
loope
push
jmp
mov
mov
adc
jne
cmpl
or
inc
cmp
xor
inc
jle
cmp
adc
add
repz
push
int
push
scas
jmp
pop
gs
push
pop
clc
and
pusha
xchg
rcll
es
mov
mov
stc
lods
push
cmpsb
out
sbb
stos
lcall
movsb
lcall
pcmpgtb
out
fildl
sub
icebp
xor
push
sbb
xchg
roll
xchg
call
sbbl
push
sbb
xlat
sbb
pop
adc
test
imul
out
xor
mov
cmp
das
in
sbb
into
in
jnp
xchg
mov
in
sbb
jno
add
jl
lods
mov
cli
adc
fsubrp
lea
ljmp
adc
out
sbb
sbb
pop
or
and
cmp
xor
repz
rclb
jl
mov
cld
addb
addr16
sub
sbb
mov
pop
xor
bound
jb
and
fiadds
sbb
aaa
outsb
jo
adc
pushf
bound
hlt
cld
std
loopne
pop
dec
fs
mov
mov
daa
push
fwait
sbb
dec
sub
scas
push
imul
or
ljmp
jp
aam
push
sbb
sbbb
sti
xchg
stos
setg
call
repnz
inc
icebp
cmp
cs
dec
ljmp
repz
and
mov
movsb
stos
jge
in
mov
adc
xor
pop
lret
rcrb
test
stos
cmp
dec
fwait
jle
adc
mov
daa
mov
test
mov
mov
aad
int
cmc
add
mov
fisttpll
sbb
add
pushf
sbb
addr16
or
inc
sbb
orl
test
loopne
fs
stos
xchg
pop
jmp
fcom
insb
xchg
push
add
inc
mov
sbb
test
cmp
outsb
out
mov
jg
sub
pop
and
jbe
push
or
push
mov
ret
cmp
shlb
add
std
daa
lret
fldl
sarb
fimull
bound
pop
jns
xlat
jo
xor
jle
cs
mov
mov
pop
adc
movsl
sti
jg
leave
adc
xor
cmp
inc
inc
and
js
cmp
inc
xchg
in
xor
xchg
iret
jb
adc
mov
mov
mov
outsl
mov
ss
cmp
pop
pop
aas
inc
fs
inc
mov
inc
push
leave
fiadds
and
sahf
sbb
dec
mov
mov
sbb
pop
push
addl
cmpsb
outsb
pop
arpl
dec
movsb
push
cs
mov
mov
inc
test
push
flds
hlt
jp
movsb
mov
jecxz
sub
push
and
xor
xchg
ds
inc
daa
scas
lods
mov
pop
xchg
xor
cmpsl
mov
mov
je
shrb
clc
and
mov
out
les
mov
xor
jl
push
dec
fimuls
cmp
movsb
xlat
push
mov
sahf
imul
lock
mov
icebp
hlt
icebp
push
pop
inc
into
xchg
pushf
mov
push
ljmp
pushf
mov
inc
loop
add
xchg
xchg
aas
outsl
push
mov
in
test
insb
inc
iret
sub
loopne
mov
xchg
stos
jmp
sbb
sub
data16
sbb
jmp
jnp
je
cwtl
arpl
scas
sub
repnz
xchg
incb
push
add
adcb
shr
or
and
push
sti
ljmp
out
cmp
ret
cli
pop
lcall
dec
mov
aad
sub
jp
sahf
inc
jp
repz
cmpsl
ja
popa
test
in
bound
daa
push
pop
mov
jge
mov
cs
call
or
mov
cs
jmp
mov
imulb
dec
fcoml
cmc
es
xchg
sub
daa
jg
ds
dec
jp
sub
sahf
xor
mov
mov
int3
pop
enter
add
cmp
add
add
push
nop
aad
dec
ret
and
xchg
xchg
pop
jns
int
cmpsl
mov
test
xor
pop
or
dec
rcr
cld
mov
daa
xchg
mov
lods
nop
fdivrl
xchg
cmp
dec
pop
sub
adc
cmp
jmp
xor
sbb
push
mov
jl
repz
adc
lcall
inc
inc
pop
test
jg
mov
test
neg
dec
cmpsb
pop
repnz
dec
xchg
add
sbb
sub
mov
mov
adc
repnz
xor
in
push
cmp
mov
loop
push
scas
addb
mov
sbb
xchg
cmp
dec
dec
stos
cmp
ds
mov
push
push
inc
cmp
dec
lock
xor
cs
das
mov
and
mov
cli
mov
dec
stos
aas
jno
hlt
dec
push
popf
repz
or
ret
mov
dec
sub
into
jle
das
and
insl
mov
enter
shll
imul
sbb
dec
cli
iret
sbb
pop
adc
cwtl
lock
ljmp
xorb
sahf
lret
divl
enter
shll
jecxz
pop
fisubrl
and
jl
aad
or
aaa
cmp
add
mov
pop
cmp
scas
testl
data16
push
ss
sub
jne
mov
js
cld
dec
jmp
inc
push
adc
stos
mov
jnp
fists
xchg
fdivrs
lret
pop
fxch
jmp
mov
lods
push
dec
jmp
xchg
enter
fidivrl
ret
test
add
inc
nop
out
sub
pushf
imul
lcall
rcrb
int
outsb
pop
jmp
fcomps
and
mov
jae
dec
cmp
sbb
xchg
adc
jnp
rcl
out
sbbl
jo
mov
jae
push
sti
and
sub
mov
insl
add
shrb
rcll
es
jns
cmp
neg
fcoml
mov
adcl
adc
inc
out
inc
and
hlt
shlb
sub
sbb
jl
cmc
das
outsl
adc
adc
movsl
push
sbb
xchg
cs
js
or
out
or
fldl
pop
xchg
roll
addr16
clc
ss
ds
daa
push
out
cmp
dec
cld
xor
cmp
xchg
out
mov
or
adc
ss
dec
add
sub
out
das
sub
ret
lcall
loopne
fsubl
mov
pop
pop
mov
sti
and
cs
test
mov
int
mov
push
cwtl
xchg
and
test
adc
sub
ja
mov
cmp
sbb
inc
out
cmp
xchg
push
aas
jno
push
cmpsb
enter
andb
fimull
sbb
aaa
push
sub
imul
pop
sub
outsb
in
loop
bnd
or
lods
loop
jle
push
mov
repz
sub
roll
iret
mov
repz
mov
mulb
xchg
ficompl
mov
lret
dec
dec
bound
insl
sbb
and
lret
aad
dec
ja
shll
jns
push
or
xor
add
sbb
aam
pop
pop
imul
lret
cmp
jp
aad
fsts
mov
mov
andl
or
daa
daa
pusha
jae
jg
jb
add
outsl
xchg
dec
mov
mov
addb
jae
mov
repnz
lods
inc
xchg
aas
repnz
jmp
mov
inc
repnz
call
adc
mov
inc
sub
scas
and
sbb
sbb
lods
jle
inc
test
fdivrl
out
dec
test
cmc
push
jg
addl
stos
out
cmp
sub
fidivs
cmp
sarb
push
shrb
movsl
aad
xchg
jbe
xchg
xchg
lods
fmull
cmp
loopne
pop
push
inc
jns
gs
add
pop
enter
test
sbb
outsl
in
mov
cmc
dec
mov
inc
popf
je
stos
ja
jmp
cmp
out
push
insb
and
mov
loopne
cmp
in
sbb
add
stos
and
ja
decb
xlat
jnp
mov
add
mov
xor
mov
and
dec
lds
iret
pushf
jp
inc
adc
imul
sub
xlat
sub
adcl
leave
mov
sbb
jne
ss
movsb
mov
iret
ret
lret
mov
push
xor
xchg
mov
loopne
pop
pop
or
adc
xchg
inc
xchg
js
stos
ds
in
ds
fdivr
outsb
jle
mov
ja
popf
cltd
lock
mov
push
push
cs
cmp
test
jb
xchg
aad
xchg
inc
xor
add
enter
aaa
and
adc
adc
inc
mov
push
lahf
out
into
test
xchg
fimull
jbe
das
xor
fbstp
dec
push
add
sar
fs
cmp
iret
push
xor
sbb
inc
enter
orb
out
nop
xchg
in
inc
imull
and
enter
shll
std
pop
popa
stos
inc
addl
shll
jne
mov
pop
mov
sahf
and
stos
dec
push
fs
push
out
scas
clc
aad
jmp
xchg
cmp
push
cmpsl
dec
repz
pop
sub
repnz
ret
ds
js
mov
mov
cld
push
loop
push
dec
out
pop
adc
xlat
adc
mov
jne
pusha
mov
lds
mov
inc
jl
dec
out
and
mov
sbb
loope
cmp
pop
test
loopne
test
push
cmp
fisttpll
lret
push
icebp
fisubl
test
mov
push
movsb
add
cwtl
pop
outsl
xlat
hlt
add
jp
inc
rorb
imul
mov
mov
rol
outsl
fidivrl
pop
icebp
jne
jle
sbb
and
stc
cs
sub
sbb
sbb
mov
cmp
mov
cmp
out
pop
jns
stc
movsl
adc
lea
lcall
xlat
inc
sahf
rcl
or
aas
push
out
xor
pop
push
push
push
outsl
mov
notb
cmpb
cltd
pop
mov
add
add
sti
jge
cltd
add
fsubr
mov
popa
mov
jl
lret
bsf
in
and
ret
and
fimuls
jl,pt
scas
adc
mov
push
lea
out
leave
repnz
push
sti
inc
xor
scas
jae
sub
mov
dec
pop
lods
sub
lods
mov
cmp
sti
xchg
push
push
jne
jle
push
mov
lahf
mov
out
sahf
aam
inc
pop
adc
push
inc
sahf
out
mov
pop
and
hlt
mov
mov
fdivrl
imul
mov
push
repz
cmp
dec
inc
mov
push
add
test
and
hlt
imul
fmulp
dec
out
sbb
into
sti
and
in
xchg
adc
aas
js
inc
or
clc
pusha
xchg
push
jmp
loopne
lret
mov
std
loopne
lock
loopne
rcr
leave
sti
sub
dec
cmp
pop
test
jbe
jg
scas
mov
pop
test
cld
push
inc
jno
and
imul
in
jp
cmpsb
ss
nop
add
insl
ja
cmovp
xchg
adc
push
je
outsb
ret
lea
push
fs
test
mov
jp
cmp
nop
int
sbb
or
inc
nop
and
mov
pop
iret
and
or
loope
ljmp
mov
xchg
adcl
adc
out
inc
push
fstl
push
mov
in
std
clc
mov
lcall
pushf
xchg
aam
xor
lcall
imul
les
popa
dec
inc
add
xchg
js
sbb
mov
mov
adc
adc
cmp
add
je
data16
or
jbe
out
inc
dec
jg
or
mov
pop
mov
dec
sub
sub
mov
adc
lods
pop
or
sub
dec
roll
pop
dec
inc
mov
cs
xlat
adc
ret
xchg
icebp
in
cwtl
outsb
xchg
mov
bound
sub
pop
in
cmp
sbb
cmp
in
ljmp
add
sub
dec
mov
push
adc
mov
cmp
push
dec
lods
lret
mov
inc
cmp
inc
inc
xor
jl
push
stc
jno
imul
mov
lods
mov
outsb
aaa
dec
mov
jo
or
repnz
rclb
fadds
test
or
xorl
lahf
add
mul
mov
mov
out
js
dec
jecxz
popa
inc
dec
cmp
mov
push
iret
jns
adc
mov
js
ljmp
mov
mov
ljmp
test
sub
subl
mov
fs
sbb
or
je
adc
rolb
pushf
jnp
xor
xor
jg
sub
mov
jmp
mov
sbb
outsl
adc
dec
jmp
cmp
shlb
sbb
pop
ret
pop
mov
and
and
cmp
fnstenv
aaa
fldl
cltd
cmp
dec
push
adc
cld
call
in
xchg
xorl
push
push
pop
fldl
add
out
lock
gs
add
std
jg
pop
dec
sub
cmp
mov
push
clc
stc
inc
push
popa
push
jle
mov
stos
and
sub
shll
dec
jl
jne
xchg
test
mov
push
shrb
bound
xchg
cmpsl
in
lea
sub
add
dec
push
jbe
inc
or
scas
mov
int
pinsrw
pop
sbb
arpl
jo
sbb
lcall
push
out
aad
arpl
faddl
nop
pop
and
adc
outsb
xchg
add
mov
scas
fs
push
add
dec
push
mov
dec
sti
rcrl
xlat
jg
into
xchg
cwtl
xlat
adc
dec
std
fcompl
dec
loopne
subb
std
sbbl
cld
test
lret
push
sbb
mov
test
or
jge,pn
cmp
xlat
iret
jae
pushf
pop
and
cmp
xor
lock
sub
repnz
jle
js
inc
xchg
mov
cld
dec
ds
mov
lods
add
popf
xchg
push
jb
add
push
iret
nop
adc
push
sarb
clc
lcall
mov
cmp
aaa
mov
mov
or
jae
xchg
in
xchg
outsl
fwait
sbb
xor
mov
dec
mov
sbb
inc
mov
popf
movsb
cmp
cmc
inc
call
mov
xchg
sbb
dec
push
jg
shr
dec
divl
ss
jae
ffree
mov
inc
mov
mov
or
in
daa
repz
pushf
adc
push
push
fwait
movsb
jle,pn
out
pusha
cmp
mov
jmp
push
mov
popa
mov
inc
neg
idivl
mov
enter
sub
push
scas
jnp
pop
or
and
mov
rcrb
les
push
xor
outsl
inc
mov
fldenv
pop
adc
int3
jge
xor
test
call
jo
jecxz
pop
je
je
rep
xchg
pop
pop
sub
mov
sub
pushf
add
lea
insb
lcall
cmp
adc
ret
fcmovne
movsl
mov
aas
je
scas
xlat
xchg
dec
sub
pop
test
pop
leave
popa
cmpsl
out
and
adcb
ja
stos
add
jg
call
and
andl
arpl
cwtl
adc
xchg
int
mov
stos
sub
lods
jmp
out
imul
cld
pop
stc
cli
rcrb
stos
inc
out
add
push
inc
cmp
pop
sbb
loop
dec
jmp
sbb
pop
mov
sar
xchg
data16
mov
mov
in
sub
arpl
mov
into
cmp
push
pop
enter
cltd
sub
jl
and
jp
out
clc
xchg
repz
cmc
addr16
adc
cmpsl
push
mov
add
ja
xchg
xchg
push
sbb
add
and
mov
lods
push
pop
scas
add
scas
ljmp
pop
or
std
jle
xor
mov
bound
jle
insb
fildll
or
aad
xlat
stos
stos
push
push
loope
and
loop
pusha
add
inc
pop
mov
outsb
or
lds
xchg
or
cltd
outsl
fnstcw
or
ret
dec
dec
push
imul
fst
pusha
mov
decl
jb
ja
aad
pop
rorb
inc
xor
out
add
stc
popa
mov
outsb
orb
lea
out
mov
movsl
jne
sub
shll
sub
pop
cmpxchg
insl
repnz
lock
pusha
lret
jno
or
das
mov
dec
push
sahf
loop
push
inc
test
shll
fiadds
mov
negl
dec
shll
pop
ficomps
in
adc
or
mov
mov
or
cmp
test
leave
add
mov
das
in
rol
or
out
ret
mov
imul
sbb
lea
add
jecxz
stc
divl
sub
shrl
push
clc
jl
addr16
mov
xor
notl
jb
adc
or
sub
inc
inc
imul
add
inc
outsl
xor
xchg
ficoms
iret
rorl
sets
xchg
mov
subl
stos
add
loopne
dec
leave
sbb
and
and
jns
mov
enter
bound
loopne
ja
push
inc
jecxz
imul
or
into
into
je
sub
push
dec
loope
test
sbb
iret
bound
add
xlat
add
test
xor
popa
dec
add
in
mov
in
daa
pop
sub
popa
cmp
stc
lock
imul
push
mov
stc
adc
out
xor
sbb
push
mov
data16
test
ja
adc
aaa
jl
inc
pop
jno
cmc
mov
andl
out
adc
shlb
and
jmp
out
in
test
mov
sub
pop
xchg
andl
adc
fnstenv
out
aad
movsb
pop
cld
mov
subb
mov
fs
push
mov
pusha
xchg
mov
andl
out
or
outsb
add
aam
mov
mov
movsb
cmp
test
lcall
push
jge
sti
inc
pop
add
cmp
mov
fidivrl
cwtl
aam
mov
jl
test
scas
scas
inc
jle
xchg
aas
cli
mov
xchg
jno
adc
ss
rcl
xchg
mov
and
xor
lods
lods
mov
repnz
stc
xchg
mov
inc
mov
out
incb
push
push
push
testl
bound
fwait
pop
cmp
cmp
push
lret
push
sbb
mov
test
orl
psubb
xchg
mov
push
adc
xchg
cwtl
cmp
cmc
or
xor
and
pushl
cmc
ret
adc
test
xlat
lcall
mov
mov
or
repnz
sbb
inc
rcl
loope
and
adcb
xchg
movsb
lods
xchg
out
inc
push
aaa
dec
mov
sub
cmpb
clc
pop
arpl
shrb
sbb
xchg
ss
jo
ss
movl
dec
dec
lods
call
pop
mov
subb
jns
cmp
add
fwait
dec
push
and
push
mov
xchg
mov
inc
scas
xchg
pop
sub
adc
push
or
stos
std
fdivrs
push
jno
sti
popa
rcll
jae
jmp
dec
mov
in
mov
rcr
leave
es
lods
and
out
and
fmul
adc
push
dec
imul
aam
in
xchg
push
push
and
shll
mov
test
dec
sbb
or
data16
jb
loope
inc
iret
ds
inc
test
sahf
jnp
movsl
xor
xchg
outsb
bound
daa
das
and
iret
dec
jp
xchg
imul
fsubrl
mov
pop
in
dec
out
outsl
adc
out
cmp
fisubrs
pusha
jge
add
push
in
sub
es
das
add
mov
push
xchg
lret
cmp
fnstenv
testl
jno
aas
dec
and
pop
or
adc
jecxz
scas
int3
xor
and
add
fsubl
data16
xlat
mov
out
sub
cmp
mov
xor
jno
fstps
push
outsb
pop
loop
arpl
xchg
sub
sub
jg
stc
pop
sbb
iret
add
and
lods
dec
pop
xor
daa
mov
cwtl
jbe
push
cmp
mov
xchg
adc
das
mov
jae
test
xchg
sub
scas
push
in
mov
fsubrp
sahf
push
jo
mov
pop
mov
sbb
hlt
or
les
nop
sub
in
cmp
ret
cmpl
shll
lcall
popa
jmp
std
push
mov
or
mov
mov
mov
fs
leave
es
mov
inc
incb
dec
repz
idivb
sbb
push
adc
sbb
inc
push
inc
lret
xchg
xchg
or
push
out
mov
mov
push
ficompl
jmp
cmc
and
xor
jmp
mov
jns
pop
dec
out
jecxz
insb
and
jo,pn
xor
inc
int3
jmp
jae
sti
ljmp
mov
stc
jle
test
sub
mov
fdivrl
sbb
daa
xchg
mov
decl
cltd
sbb
jg
cmp
xor
mov
test
loopne
stos
xor
mov
fisttpll
and
push
push
pop
adc
lret
sub
ficoml
inc
jl
add
int
inc
ret
arpl
pop
popa
ret
out
dec
cmp
stc
iret
lods
xchg
sub
hlt
loop
push
scas
fs
movsl
sub
ret
push
mov
xchg
pop
xchg
ret
dec
mov
jb
je
dec
movsb
push
ljmp
in
enter
das
push
pop
ror
xor
not
pop
cltd
add
test
lock
mov
in
lcall
and
mov
add
mov
xor
test
pop
adc
mov
cmp
xchg
gs
xchg
or
or
mov
dec
cltd
jmp
js
rclb
mov
rclb
dec
fnstsw
pusha
add
pushl
dec
adc
ja
cmpsl
ja
mov
test
xchg
xor
mov
adc
xor
cmp
sti
movsb
out
leave
jle
inc
adc
dec
mov
xchg
mulb
lock
mov
jae
sbb
std
xchg
jnp
aam
push
not
inc
cmp
std
outsl
hlt
jns
repnz
pop
sbb
xchg
mov
loopne
xchg
cmp
out
addl
ljmp
xchg
mov
pop
fwait
das
or
push
mov
pushf
mov
and
nop
push
sti
shr
mov
or
out
and
push
test
imul
je
push
fnsave
subb
orl
pop
push
pop
cmp
rol
adc
sbb
jmp
sub
cmp
sub
pop
outsb
outsb
fiaddl
adc
call
and
jle
push
dec
push
dec
lods
jno
sbb
shrb
jbe
insb
add
cmp
xchg
mov
out
stos
movsl
or
repnz
test
or
xchg
sbb
out
stos
outsb
and
xorl
stos
aaa
ds
sbb
and
int
stos
movsl
dec
data16
xorb
add
clc
add
std
popa
cmp
fadds
cmc
push
mov
sbb
jp
popf
mov
jae
push
lds
ss
mov
pop
pop
cwtl
adc
nop
mov
or
aas
and
inc
push
mov
lret
mov
mov
xchg
sub
xor
jb
xchg
mov
test
cli
xor
cmp
or
idiv
jb
push
scas
ret
sub
xor
out
xchg
sub
mov
shl
mov
addr16
outsb
repz
cmp
push
sbb
cld
aad
dec
push
push
les
xor
int
arpl
dec
imul
push
jno
pop
push
sub
lret
dec
inc
pop
add
or
jns
mov
and
mov
mov
pop
inc
jns
in
test
sbb
clc
and
mov
lods
aam
lds
dec
jne
lret
mov
mov
je
std
pop
sbb
lods
loopne
dec
xchg
push
mov
addr16
scas
dec
bound
and
lahf
pop
imul
mov
sub
mov
or
insb
lret
mov
scas
lods
dec
pop
adc
arpl
or
std
mov
jge
mov
xchg
mov
je
test
xor
es
push
inc
into
sar
cwtl
testl
lods
mov
arpl
add
aaa
inc
jmp
aas
cmpsb
cbtw
ds
pop
and
jp
stos
rcl
dec
mov
push
sbb
inc
xchg
push
jb
rcrl
lock
int3
jo
xlat
out
stos
cld
dec
or
pop
cmp
gs
fucom
out
push
std
and
add
test
or
sbb
xor
outsl
andb
pop
lock
out
lods
xchg
sub
xchg
cmp
dec
mov
mov
jne
sbb
mov
sbb
fidivrl
popf
push
lahf
xor
add
int
clc
push
xchg
iret
jle
test
adc
nop
in
cld
xor
shll
fdivrl
push
jne
lcall
inc
loopne
push
adc
push
lret
sbb
cmp
sti
or
leave
xor
out
ficompl
mov
dec
out
jg
fwait
sbb
pusha
fs
sti
std
add
jl
aad
cmp
fistpl
test
sub
inc
and
push
fcoms
sub
stos
fisubl
cli
and
movsl
sub
add
push
lods
or
lahf
mov
sub
cmp
gs
sbb
cli
push
fwait
out
add
cmp
xchg
lods
das
lahf
xor
pop
jge
cs
dec
pop
jbe
pslld
pop
cmp
in
bound
andb
arpl
jbe
js
fistl
jp
test
adc
rorb
xor
cmp
and
call
pop
out
push
nop
xchg
xchg
push
out
adc
mov
arpl
sahf
sub
dec
cwtl
pop
pop
hlt
cld
jecxz
or
or
xor
mov
lds
pop
mov
jne
push
cwtl
mov
xor
xor
dec
out
push
xchg
xchg
call
inc
push
and
arpl
push
addl
roll
jecxz
out
cmp
sbb
lahf
jno
std
jae
xor
sbb
das
push
or
neg
cmp
loopne
sub
inc
hlt
cmpsb
xchg
xor
sub
jne
push
and
nop
fcmovb
sbb
pop
ret
ficomps
movsb
ror
pusha
xchg
adc
stc
fsts
mov
mov
pop
bound
sub
inc
pop
daa
outsl
es
mov
mov
enter
mov
addl
into
push
add
bound
rolb
pop
pushf
add
jecxz
pusha
dec
lahf
xchg
daa
cmp
orb
mov
outsb
loopne
jle
enter
ljmp
cs
loopne
jbe
pop
stc
jp
clc
push
shll
xor
bound
out
repnz
outsl
adc
lret
ss
dec
fwait
xchg
cmp
dec
mov
rcr
lcall
insb
cmp
push
push
out
mov
sbb
js
scas
fimuls
std
xchg
push
cltd
lock
rcrb
pop
jge
ja
sbb
int
arpl
xchg
xorb
movsl
cmc
and
in
lcall
cmp
inc
mov
mov
sub
lret
ja
mov
xor
aam
jns
dec
fisubs
imul
cmp
jp
inc
inc
sub
pop
xor
arpl
mov
sahf
cmc
xor
lcall
jo
xor
mov
push
sbb
adc
mov
push
out
push
ficoms
mov
in
jg
arpl
pop
popf
test
adc
lock
jne,pt
test
imul
cmp
bound
cli
push
fbstp
mov
pop
int3
sar
bswap
in
fisubl
jb
mov
dec
pushf
call
bound
sbb
loopne
or
in
jmp
or
add
insb
sub
lock
add
aam
pushf
cmp
cmp
push
sub
mov
sub
pop
negl
xchg
stos
mov
jns
clc
and
lea
jbe
outsl
lds
mov
lds
ljmp
notb
in
inc
aam
into
imul
mov
roll
mov
lea
cmp
pushw
mov
pop
jp
inc
ret
out
pop
dec
mov
fildll
cmp
push
outsl
sarb
pop
xchg
push
mov
or
and
pop
sbb
lcall
and
sbb
test
in
cmp
inc
pop
call
mov
jp
rcll
cs
sub
add
jg
xchg
insl
ss
adc
pop
aas
sbb
test
mov
mov
scas
pop
xor
sub
lret
cmpsl
add
icebp
xchg
xor
ficompl
aam
add
in
clc
dec
filds
test
jecxz
pop
hlt
inc
arpl
stos
cwtl
push
mov
xchg
out
cs
xchg
out
sbb
lea
int3
inc
inc
loopne
mov
fdivrs
sbb
stos
cmp
jmp
lcall
fimull
lret
lcall
inc
mov
nop
and
push
push
mov
jl
mov
es
rorb
xorl
pushf
mov
inc
pop
imul
imul
add
xchg
xchg
popf
dec
in
loope
push
pop
xchg
or
arpl
mov
pop
in
sub
mov
mov
dec
jg
imul
pop
pop
add
jecxz
jne
xchg
seto
jne
jmp
je
jg
cmp
mov
dec
scas
scas
ror
dec
out
or
cs
inc
cs
jge
int3
mov
cmp
movb
pushf
pop
xchg
and
cltd
sbb
mov
cmp
addr16
loope
pop
arpl
int3
mov
insl
xor
cmp
or
xchg
add
out
jo
xchg
leave
jne
cmp
mov
popf
gs
adc
xchg
sbb
into
xchg
cmp
test
pop
hlt
push
jns
push
jb
adcl
fs
push
and
std
cmpsb
aad
sub
dec
mov
lea
cli
leave
lahf
jae
in
test
sbb
lock
pusha
popf
lcall
add
int3
inc
sarb
pop
mov
stc
in
in
in
aas
jl
addb
jae
push
arpl
stos
cmp
dec
and
cwtl
inc
cmp
aaa
xor
lea
ja
ljmp
lcall
je
mov
push
adc
in
add
les
sti
push
js
cmp
sahf
jle
jne
insb
sub
outsl
test
ret
mov
mov
les
fcom
shll
lock
fabs
mov
jl
fnstsw
mov
in
sub
adc
inc
ret
jp
mov
lcall
orl
fs
xchg
push
mov
sbb
aas
aam
ret
dec
pop
jae
inc
xchg
inc
insl
jmp
push
call
test
push
push
dec
mov
push
jae
test
sbbl
sbb
or
inc
popf
pop
xchg
sbb
pushf
pop
lahf
jg
in
mov
xchg
arpl
imul
adc
cmc
mov
jge
inc
sbb
inc
push
out
stos
mov
cwtl
mov
or
cwtl
add
fsubrp
rol
inc
shll
cmp
xorb
mov
enter
adc
sti
cmp
lahf
mov
inc
cs
cs
test
movl
mov
jne
mov
fmull
xor
notl
movsl
jge
mov
cli
mov
mov
dec
fstpl
adc
movsb
shrl
push
dec
xor
or
and
outsb
jp
mov
mov
xchg
and
popf
lcall
das
mov
out
test
inc
dec
push
adc
inc
gs
jns
and
push
sub
push
das
mov
fimull
cmpsl
stc
fwait
rep
xchg
movsb
xor
aam
add
pop
es
orl
ret
mov
aas
xchg
cmp
sbb
ja
or
popa
jne
mov
test
sub
pop
int
xchg
ss
push
push
xchg
push
lar
imul
test
and
jae
mov
mov
pop
je
pop
rolb
adc
push
mov
stos
sbb
xor
dec
push
es
fistps
js
push
lods
in
shl
sub
or
jnp
add
mov
mov
div
daa
mov
pop
outsl
and
and
jp
fwait
jne
ljmp
pusha
or
inc
add
lds
jno
iret
xchg
stos
and
dec
cmp
and
fsubrp
inc
push
inc
lea
xor
jp
or
pushf
or
sub
movsl
mov
clc
adc
push
in
rorl
xchg
push
cmc
stc
pusha
xchg
cmp
stos
xlat
sub
pop
jmp
cmpsb
cld
pop
dec
lock
bound
cld
addb
lods
ljmp
idivb
lods
pop
lds
xor
roll
pop
push
jle
call
jbe
sbb
ret
cmp
xor
adc
cltd
decb
mov
faddl
or
and
test
fadds
mov
into
jp
xor
add
sbb
add
mov
cs
arpl
aam
cltd
dec
jg
stos
lahf
xchg
ficomps
fwait
push
jns
test
stc
sub
stos
in
insb
and
cld
push
cmpsl
mov
xlat
cmp
push
jle
xor
jne
xchg
dec
mov
cmp
mov
add
adc
mov
adc
rolb
jno
jp
rcll
mov
test
push
test
xor
data16
jne
in
jmp
pop
xor
lods
clc
push
sbb
jo
ss
lret
insb
xor
incl
sti
mov
dec
cmp
rclb
add
dec
stos
push
mov
fdivrl
les
mov
sub
cwtl
cwtl
pop
pop
xchg
cmpsl
repz
dec
cmp
cmp
pushf
mov
pop
insb
lret
cmp
pop
inc
and
test
xor
cmc
mov
sbbb
dec
sahf
add
cmp
xor
mov
mov
mov
sbbl
push
shrl
fidivs
and
add
fs
adc
loopne
push
xchg
sahf
or
pop
into
cmp
xchg
mov
rcrb
jnp
pop
addr16
xchg
adc
insb
jmp
adc
xlat
pop
push
stos
push
cmpsl
repz
mov
cmp
pop
int3
outsb
xchg
mov
push
or
pop
or
fnstcw
pop
mov
sarb
push
sbb
and
aam
pop
into
imul
mov
inc
outsb
enter
insl
inc
cmp
rcr
js
pop
xchg
mov
repnz
cli
aaa
popa
sub
xlat
imul
out
lss
je
and
add
push
add
push
in
out
test
std
or
sub
loope,pn
test
or
mov
into
lret
outsl
int3
xor
lock
mov
mov
div
sub
ret
push
neg
in
push
out
xchg
fs
lods
mov
sub
cmp
das
mov
popf
push
mov
inc
pop
push
mov
sub
rcrb
dec
jnp
jbe
pop
nop
loop
jae
sub
test
test
adc
dec
and
mov
aad
sbb
or
scas
test
lods
fidivs
push
je
cmp
std
sub
int3
popf
pop
xchg
loope
push
xchg
mov
jnp
push
outsl
iret
imulb
popa
stc
dec
jle
lret
fidivs
cmp
push
xchg
clc
add
jnp,pn
pusha
stos
je
int3
jno
add
fsub
push
cmpsl
fistpll
daa
push
push
test
mov
sbb
imul
push
push
lea
jb
jl
push
pop
fcoml
sub
ret
jl
mov
mov
mov
inc
sti
nop
pop
sub
leave
jle
insb
push
cwtl
adc
daa
out
bound
mov
inc
adc
js
arpl
das
lcall
lea
and
in
dec
mull
inc
add
jg
push
clc
in
push
stos
push
dec
daa
ja
push
sub
scas
mov
xchg
fisttpl
or
dec
xlat
inc
sub
xchg
adc
ja
sbb
or
jae
dec
into
fdivrl
movsb
call
or
cmp
dec
lcall
popa
add
push
cmp
xor
pop
js
xchg
adc
icebp
rolb
adc
add
push
sbb
popa
dec
movsl
sbbb
jecxz
add
push
ret
push
add
std
dec
cmp
mov
jb
lock
mov
mov
loope
sahf
adc
fs
fcompl
mov
jl
xor
xchg
movsl
jno
mov
outsl
xorl
imul
sahf
dec
sub
cmc
pusha
daa
lret
xor
pop
and
mov
mov
or
xchg
into
mov
idiv
loop
sbb
pop
mov
in
or
and
mov
es
rcl
fildll
push
xchg
pop
xor
pop
rcrl
out
in
jle
int3
or
add
movsb
cmp
les
sub
jno
roll
adc
mov
sub
fnop
ss
ss
inc
in
insb
pop
fnstenv
mov
pop
lods
movsb
add
push
int
ds
inc
test
sti
xor
fwait
fwait
jo
sar
cltd
es
std
fstl
adc
mov
fnstcw
xlat
mov
test
data16
fcomip
es
dec
xor
mov
adc
imul
loopne
adc
shrb
int3
inc
pop
into
cs
popa
fdivrs
iret
mulb
inc
push
loopne
cmpb
clc
imul
int
add
mov
cmc
sbb
sbb
xchg
dec
dec
and
xchg
test
dec
stos
sbb
test
sahf
mov
jg,pt
sub
and
mov
movsb
fs
nop
mov
fstps
leave
sub
pop
int
xrelease
aad
rorl
dec
mov
dec
push
pop
fisubrl
cld
scas
add
jmp
lret
out
gs
inc
imul
pop
and
test
pop
jmp
insl
sub
sub
cmp
mov
mov
adc
in
and
mov
push
subb
add
mov
cltd
mov
jecxz
shll
stos
fs
push
nop
jno
jae
sbb
faddl
rorl
lods
mov
adc
int3
sbb
or
inc
sub
push
sbb
jbe
aam
sub
lcall
push
arpl
ret
mov
xchg
mov
ret
test
popf
xchg
sbb
mov
inc
cmp
xor
jnp
push
rcr
cmc
mov
mov
notb
cwtl
cld
cld
outsl
cmc
insl
je
xchg
fsubrl
cld
mov
dec
jbe
xchg
mov
mov
sub
mov
add
dec
sub
aaa
inc
lret
inc
les
int
add
or
cwtl
mov
pop
dec
mov
mov
xor
ret
mov
imul
jae
jmp
sub
aam
xlat
iret
lret
xor
adc
fcmovbe
xor
mov
fld
and
into
xchg
jns
gs
sbb
mov
mov
cwtl
rorb
pop
in
xor
pop
mov
mov
xchg
shrb
mov
test
mov
std
out
or
dec
push
adc
lods
pop
pop
push
fistl
cmpsl
in
fcmovnu
mov
mov
cmp
sub
mov
cmp
pop
push
xchg
mov
mov
ss
aas
addr16
or
addr16
fbld
jns
mov
sbb
xchg
push
int
adc
push
dec
and
inc
mov
mov
sti
jp
add
leave
sub
mov
add
dec
dec
outsl
insl
mov
enter
pop
lock
mov
rcrl
jle
loopne
lret
dec
mov
jo
inc
mov
cld
js
mov
add
mov
clc
xor
lods
ror
inc
sbb
in
adcl
ja
sti
rcrl
inc
push
mov
rcrb
sub
push
xchg
sbb
aam
fsubp
xlat
dec
jns
daa
in
lea
xchg
mov
dec
pusha
xchg
popw
or
cs
push
stos
add
out
out
cs
xchg
jg
xchg
and
push
jecxz
mov
pop
ja
lahf
jmp
aad
push
pop
jl
es
fs
xchg
sbb
repz
adc
outsb
push
rcrl
xor
or
mov
xchg
mov
pop
pop
loope
xor
xchg
inc
in
call
pop
out
mov
clc
xchg
cs
sbb
std
iret
sub
ja
lea
mov
mov
dec
fprem1
pop
int3
xor
ds
xchg
mov
cli
dec
sahf
data16
adc
std
daa
mov
sbb
outsb
les
xchg
ss
repnz
movsb
call
push
add
xor
push
les
inc
int
xor
pop
fwait
popa
fwait
xchg
push
shl
jge
jg
rcl
xlat
fsubl
mov
in
pop
std
inc
mov
jecxz
nop
sub
rol
orl
ljmp
outsl
lea
mov
sbb
dec
sbb
mov
pop
std
cmc
out
je
sbb
cmc
pop
push
sbb
pop
rcrl
xchg
push
inc
sbb
scas
sbb
xor
ljmp
gs
pop
dec
fisubrl
add
jne
cmpb
lea
or
adc
movsb
mov
jbe
push
movsl
sbb
cli
repz
dec
sub
inc
xchg
insb
cs
dec
jno
sti
imul
fisubrl
mov
sub
dec
add
mov
sub
inc
das
mov
mov
test
dec
or
pop
push
cmp
cmc
repnz
mov
mov
lcall
dec
popa
insb
mov
sub
xor
lret
jns
xchg
dec
fdivrl
lock
mov
popa
pushf
adc
cmp
insl
adc
fs
test
adc
push
call
orl
push
dec
mov
fdivl
pushf
icebp
outsl
mull
cmp
stos
fistpl
dec
sub
fs
mov
sar
sub
cmc
mov
sub
imul
lret
pop
pop
cmp
xchg
outsl
xor
adc
push
je
jmp
jnp
jge
inc
mov
mov
sbb
inc
paddb
push
sti
std
push
mov
mov
ret
push
lds
fbld
or
and
stc
xchg
mov
outsl
adc
neg
mov
outsb
push
or
mov
mov
aad
sbb
frstor
in
add
les
sahf
daa
cli
mov
adc
jp
test
and
push
and
lcall
bound
xor
dec
or
sbb
mov
in
add
and
adc
or
popa
mov
adc
imul
ss
mov
push
ret
jg
xor
popf
sbb
dec
cmp
frndint
dec
cmpsl
inc
jne
jle
dec
cmp
cmp
scas
movsb
into
scas
in
xchg
testb
push
push
fdivl
inc
mov
lods
sub
xor
into
inc
xor
inc
push
pushf
sub
pop
rorl
sub
cmp
jge
and
and
int
and
frstor
nop
mov
gs
xchg
fadds
insb
inc
xchg
sub
cltd
cmp
pop
into
pop
outsb
adc
dec
xor
push
imul
and
popa
mov
icebp
mov
mov
xchg
leave
hlt
inc
xchg
fbld
aas
mov
push
xchg
imul
test
int
fs
jl
sbb
mov
adc
adcl
das
scas
pop
test
fidivs
add
scas
dec
data16
negl
push
push
mov
jge
test
scas
stc
sbb
mov
xor
js
cmp
xor
lcallw
sbb
and
test
and
ret
cmc
sbb
mov
sbb
ret
filds
push
or
xor
pop
ds
or
cmp
mov
test
es
loope
das
mov
int
insl
stos
leave
add
add
jecxz
sbb
mov
cltd
cs
inc
daa
daa
cmp
xchg
shlb
cmp
cld
insb
sub
adcl
icebp
gs
int
and
addr16
icebp
aas
and
loopne
inc
jbe
popf
xchg
fcom
add
sbb
inc
sbb
testl
or
mov
out
mov
mov
mov
idivb
sahf
insl
mov
rcrl
test
shl
jp
sub
pop
aad
in
push
xchg
bound
mov
cmpsl
cmp
xor
fldt
inc
or
mov
inc
call
cmp
out
nop
push
jl
cmp
lret
mov
push
pushf
test
int3
inc
inc
enter
dec
xorb
push
jnp
push
xchg
mov
mov
push
xlat
mov
jg
xorb
aas
mov
fisttps
popa
jb
pop
les
insb
in
shrb
pop
lock
cmp
xor
clc
jne
into
pusha
fisubrs
pop
dec
push
daa
xchg
cmpsb
pushf
mov
ds
push
and
roll
mov
rclb
gs
int
shlb
xchg
ret
fs
inc
test
and
jp
aas
in
xor
shl
test
sub
push
ret
jmp
xchg
or
inc
and
or
jae
push
pusha
push
pop
cmp
sub
mov
mov
and
mov
xor
scas
sub
loopne
xlat
inc
dec
aad
and
mov
pop
ficoms
out
popa
popa
or
push
mull
adc
aam
and
inc
xchg
popf
adc
les
cld
lfs
add
lahf
ds
sbb
sub
bound
adc
rep
test
xlat
aas
add
pop
fmuls
cmp
mov
fsubl
inc
loope
in
jns
scas
adcl
xchg
jge
pop
insb
ss
or
je
mov
jno
aam
gs
adc
xor
mov
sub
or
test
and
rorb
mov
cmp
bound
pop
mov
lret
outsl
pop
and
outsl
mov
jno
arpl
jmp
mov
test
adc
bndstx
cmc
adc
sarb
push
int
or
lods
stos
xchg
push
dec
inc
push
sub
cmp
mov
scas
jne
adc
dec
sub
lods
add
fs
lods
fs
sbb
jns
push
jmp
mov
mov
jg
pop
ficoml
leave
xchg
mov
sbb
movsb
jbe
rcl
jno,pt
push
and
call
in
fistpll
cmpsb
nop
fwait
mov
jecxz
fmuls
mov
icebp
inc
adc
mov
arpl
outsl
and
jno
push
cmpsl
jae
ja
test
mov
lret
dec
mov
sub
hlt
mov
push
shl
xor
movsb
pop
aam
pop
jmp
stc
adc
xor
scas
outsb
cmp
jo
jae
lock
mov
sub
pop
mov
test
pop
sbb
add
xchg
scas
stc
outsb
xchg
aad
jge
sub
in
or
shl
dec
data16
movl
inc
or
movsl
stos
mov
mov
mov
dec
icebp
pop
xor
mov
or
xchg
dec
lea
jo
adc
jmp
fwait
adc
push
cmpsl
sbb
jb
dec
add
jo
pop
pop
sub
xchg
jne
shll
and
sbb
sbb
push
xor
pop
add
imul
or
lcall
lock
mov
addl
inc
xor
and
xchg
cmc
sbb
repnz
xchg
rcrb
xchg
mov
sbb
cmp
ja
xor
inc
adc
std
sbb
pop
mov
and
pop
inc
in
mov
xchg
fwait
cmp
push
inc
pop
test
xchg
andb
push
xor
lcall
jg
loop,pn
mov
add
jle
jg
in
outsb
jne
imul
cli
stc
push
add
cmp
nop
or
test
xchg
rcll
mov
mov
outsb
fidivl
xor
inc
mov
sub
adc
mov
add
in
sahf
inc
jmp
enter
adc
mov
movsl
dec
or
cmc
into
das
inc
sbb
lock
fcmovnbe
les
fdivl
addb
mov
add
stc
inc
ljmp
add
iret
lea
shlb
js
popa
xor
lret
test
ss
mov
cmp
fwait
pop
xor
cmpb
repnz
daa
mov
mov
pop
cld
sub
fists
je
ret
cmpsl
xchg
sti
mov
mov
lahf
rcrb
and
mov
addb
jb
lods
sub
sbb
push
add
push
and
pusha
push
out
jmp
popf
push
jne
out
aas
push
mov
jo
mov
add
por
and
xchg
jno
es
mov
cmp
hlt
pusha
dec
fidivl
sub
lds
repnz
dec
inc
arpl
ret
shlb
stos
mov
js
xchg
jne
sahf
stos
cwtl
movb
xor
es
sbb
sub
and
out
and
dec
int3
ljmp
xor
adcb
test
aam
sub
pop
loopne
and
dec
vprotd
repnz
movsb
jb
repz
add
mov
or
sbb
push
jle
pushf
or
icebp
jne
mov
sub
popa
fcomip
cltd
push
cmp
stc
mov
sub
sar
xchg
inc
inc
xor
mov
add
push
ss
dec
mov
push
mov
sub
inc
jno
add
fnstcw
pop
arpl
mov
call
repz
mov
sub
sub
mov
dec
pushf
jns
std
rolb
or
adc
fmuls
outsl
mov
test
andl
mov
and
add
lods
push
lret
or
popa
add
aad
jg
or
pushf
jno
pop
ficompl
add
mov
mov
lret
jecxz
sbb
loopne
xchg
add
push
shr
cltd
outsb
je
mov
test
in
shr
add
daa
add
sub
pop
adc
loope
call
pop
pop
jl
in
in
out
cmp
dec
jge
leave
push
inc
jge
add
push
rcll
hlt
push
mov
dec
je
mov
sbb
adc
and
into
add
xchg
sbb
jb
movups
or
pop
or
inc
add
call
adc
pop
out
in
sbb
add
mov
pop
popf
jl
pop
mov
lahf
sarl
pop
push
mov
or
das
jle
inc
mov
dec
js
es
cwtl
cld
fwait
not
lods
add
fldenv
cmp
jae
xchg
movsl
mov
decl
xchg
pop
or
stc
dec
inc
into
jbe
in
cmc
jmp
idivb
je
shl
je
mov
push
ret
ljmp
sbb
cmp
add
jno
mov
or
mov
jnp
es
lods
aam
mov
add
das
lea
xor
cmp
mov
jl
inc
xor
mov
jmp
inc
jo
out
jae
imul
or
add
mov
dec
ja
mov
mov
fidivl
decl
dec
mov
dec
xlat
aas
call
add
pushf
sbb
arpl
jns
add
xchg
popa
pop
test
loope
sahf
fimuls
mov
fdiv
push
es
add
inc
push
or
lcall
mov
mov
ds
idivb
sub
adc
push
jg
jnp
cmpsb
cmp
push
add
pop
aad
repnz
and
aam
dec
pop
testl
push
test
add
repnz
repz
xchg
rcll
xchg
js
adc
dec
fstp
push
sub
fildll
jo
mov
pop
sahf
push
shrb
push
fucomp
aas
xchg
dec
pop
mov
inc
jno
xor
fwait
jmp
pop
stos
adc
pop
stos
mov
xor
ljmp
inc
repnz
leave
and
add
mov
adc
aam
dec
aam
xchg
in
push
enter
mov
pop
aas
inc
aaa
jle
mov
push
popf
mov
mov
cmpb
das
mov
test
in
aad
push
pop
mov
out
insb
adc
sbb
pop
xor
cli
imul
rcll
sti
stos
jecxz
jmp
setg
cld
push
bound
ljmp
mov
mov
ret
push
ss
xchg
orl
mov
lods
cwtl
inc
pop
jmp
lock
fdivrl
jnp
push
jbe
fmulp
adc
gs
mov
xchg
xor
in
mov
stos
dec
mov
pop
pop
and
inc
leave
and
aas
pop
fldl
cmp
mov
adc
xchg
sub
push
jge
sub
arpl
in
xchg
int
andb
ss
cmp
or
icebp
mov
mov
pop
fwait
les
in
inc
inc
in
mov
mov
mov
incl
ja
aas
aaa
aaa
xchg
mov
and
jns
xchg
and
lret
mov
sahf
sbb
imul
push
mov
sub
jnp
inc
lcall
inc
scas
xor
hlt
fsubrp
test
iret
stos
push
sub
mov
jae
jo
and
mov
out
adc
shrl
icebp
loope
dec
jle
mov
push
mov
popf
add
in
nop
fwait
inc
and
movsl
rcrl
inc
jns
push
and
xchg
xor
sbb
mov
mov
add
sbb
mov
dec
and
sbb
lock
std
in
shlb
adc
and
shlb
out
test
sbb
xor
dec
adc
outsb
pop
inc
inc
outsl
mov
xor
xor
fwait
mov
mov
movsb
push
shrl
pop
mov
rcr
xchg
shll
ss
jno
add
jae
and
testl
and
idiv
inc
sub
jo
cwtl
mov
mov
add
xor
addb
pop
mov
stos
jb
mov
or
bound
iret
and
adc
xchg
mov
mov
pop
push
loop
aas
test
ss
sahf
sbb
out
call
push
outsb
and
fsubrl
shl
push
push
sbb
jl
cmp
add
div
bound
adc
ds
hlt
or
or
dec
cwtl
mov
push
pop
jae
jmp
xchg
sub
repnz
xor
cli
mov
ret
jnp
js
test
fisubl
std
pop
aad
outsb
xor
in
pop
outsb
mov
nop
out
xchg
add
loop
inc
cmp
dec
ljmp
gs
add
or
mov
imul
mov
div
test
mov
jle
jl
or
pushf
aad
nop
or
push
cmpsb
lret
test
add
cmp
mov
sbb
adc
cwtl
in
es
lret
rclb
dec
dec
inc
test
push
and
xor
into
pop
xor
xchg
mov
sub
sbb
es
std
inc
mov
repnz
or
loop
mov
lods
in
xchg
shl
xchg
jmp
jns
pop
adc
repnz
mov
scas
jns
test
mov
jns
mov
and
jnp
nop
pop
jnp
nop
sbb
jp
sti
mov
mov
clc
push
dec
xor
jmp
aas
fwait
outsb
jp
jmp
cmpsl
fistps
dec
inc
testb
arpl
test
fdivrl
stos
cmp
sub
mov
loope
sbb
cmp
and
adc
stos
daa
pop
mov
insb
adc
stos
add
lds
dec
sbb
xor
cmp
dec
push
out
push
loop
cmpb
mov
bound
sbb
out
pop
jno
fcomps
lock
xchg
lock
push
sub
mov
notl
aaa
mov
and
iret
xor
popf
fwait
jns
in
cltd
fisubl
les
jmp
push
std
fnstenv
jl
rcl
adc
add
sbb
sub
or
mov
arpl
into
std
es
cmp
jg
add
addb
cmp
sbb
in
in
adc
fs
popf
xchg
gs
xchg
lock
and
pop
inc
fs
inc
ja
leave
stc
push
pop
mov
mov
xchg
sub
sbb
inc
icebp
fisttps
sbb
push
into
roll
add
sbb
shr
test
cmp
popa
pminub
add
popl
dec
or
adc
call
shll
jno
cmp
push
xor
pusha
sbb
movsb
incb
cltd
test
push
sub
negl
movsb
imul
mov
sbb
mov
sub
int3
out
sub
pop
js
mov
and
xchg
iret
jo
cwtl
pop
adc
fcomps
jg
imul
data16
fcoml
xchg
adc
xor
loope
test
bound
fwait
jb
fcomps
outsl
enter
repz
popf
rcr
subb
pusha
pop
lock
dec
add
insl
je
fmuls
mov
mov
daa
jo
push
fsubrl
sahf
clc
jp
inc
sbb
dec
aam
xor
stc
jp
lods
clc
cmp
mov
insl
pop
jnp
testl
iret
movsb
loope
push
dec
movsl
mov
and
aam
fidivrl
cmpsb
cmp
jmp
cmp
push
add
pushf
add
popf
pop
aas
mov
mov
fs
int3
rcrl
test
xchg
outsb
dec
pop
add
icebp
aad
xor
or
test
imul
pop
pop
sbb
xchg
shlb
cmpb
mov
lods
rcrb
mov
push
js
jecxz
dec
cmpsb
pop
inc
mov
dec
adcb
cmpsb
cmp
in
push
add
xor
jge
hlt
iret
cmp
and
adc
ret
cmpsb
xlat
pusha
pop
aas
rorl
push
mov
mov
cld
sbb
push
and
movsb
stos
mov
test
orb
adc
pop
cs
stos
cwtl
jne
adc
cmp
fbstp
mov
in
jg
cmp
xchg
xchg
and
mov
in
dec
xor
inc
stc
cmp
stc
inc
divl
mov
jae
pop
inc
adcb
loope
xchg
repz
das
popa
jo
mov
mov
dec
xchg
in
lock
and
pop
mov
mov
popf
bt
pusha
flds
ror
into
popa
dec
outsl
sahf
enter
iret
dec
mov
insl
inc
cmp
dec
aam
add
mov
dec
enter
scas
cmp
adc
push
mov
roll
je
out
and
repz
pop
push
in
rcrb
jbe
int3
stos
mov
push
pop
cmpsb
mov
mov
cwtl
pop
jl
inc
push
gs
sti
lods
push
stos
dec
data16
and
fdivp
jg
leave
addr16
pusha
mov
xor
adcb
ss
xor
mov
test
dec
adc
pop
enter
mov
jnp
xor
inc
cld
add
outsl
rclb
jo
jno
movsl
loope
loopne
pusha
ja
jno
fimull
leave
hlt
jne
cmova
shr
xor
or
sub
add
mov
pushl
mov
shl
cmpxchg
xchg
push
rcrb
add
sbb
loopne
mov
in
lcall
push
loopne
cmp
clc
arpl
std
and
mov
and
jp
movsb
lods
shl
ja
ljmp
sub
adc
push
inc
into
pusha
andb
push
aad
pop
push
out
in
ss
movsl
gs
sbb
test
rclb
in
test
ja
xor
pop
iret
jge
bound
dec
out
sbb
insl
xchg
sbb
andl
cmpsl
add
ljmp
mov
inc
mov
movsl
out
cltd
jle
cmp
jecxz
dec
fildll
xlat
mov
iret
nop
dec
cmpsl
movsl
sbb
das
cmp
xor
out
int3
sbb
loopne
dec
ljmp
push
sub
lahf
pusha
xchg
add
clc
mov
jl
fadds
jae
or
xchg
rcrl
jns
outsl
pop
mov
loopne
daa
leave
adc
aad
pop
inc
dec
lret
mov
sarl
mov
pop
xchg
mov
cltd
push
pop
faddl
push
test
mov
pop
jo
jecxz
aaa
jb
movsb
popl
mov
ficoml
inc
aaa
ss
pop
lock
adc
jecxz
xorb
jmp
scas
imul
mov
dec
sub
cmp
aad
mov
and
cmpsb
fidivs
xor
cmp
jge
add
cmp
jmp
sub
mov
stos
mov
jl
sub
lret
rcll
dec
cmpsb
and
jge
sub
fcompl
sarb
jg
pop
push
inc
push
add
pop
cmp
into
pushf
jecxz
fcoml
adc
mov
into
add
jp
fsubrl
sbb
shrl
incb
pop
mov
cmpsl
lods
push
in
push
lret
pop
ret
xchg
scas
jbe
or
push
jne
outsl
cmp
add
mov
int
js
gs
push
mov
inc
cltd
sub
mov
push
sub
enter
dec
stos
call
enter
xor
push
ds
mov
out
mov
in
cwtl
shll
lds
lret
jns
jnp
sub
shlb
pop
movzbl
std
cwtl
mov
mov
sbb
and
rcll
movl
jle
mov
mov
sbb
dec
js
sub
lahf
adc
ja
or
clc
cltd
add
mov
pop
adc
data16
mov
adc
jle
cmp
adc
fyl2x
mov
cmp
and
repnz
or
sub
mov
sub
pop
lock
int3
popf
stos
aad
hlt
iret
and
push
call
xor
xchg
xor
fmuls
add
insb
lahf
in
pop
data16
lock
aas
out
iret
xchg
jae
es
inc
popf
cld
mov
jb,pn
stc
es
or
xor
push
sbb
xor
popa
mov
ror
xchg
test
mov
scas
sbb
jbe
clc
ret
imul
push
push
xchg
fwait
ljmp
xor
fbstp
and
mov
enter
in
popa
jno
jg
mov
arpl
inc
jl
mov
scas
cmp
pop
adc
shr
aad
jp
jmp
push
cltd
and
cmpb
lock
sti
loop
xchg
push
mov
stos
jle
sbb
sti
mov
repnz
push
stc
add
movsl
ret
outsb
add
xor
add
xchg
or
ficompl
xchg
out
pop
pusha
xchg
or
jecxz
in
or
xchg
out
cmc
fwait
sub
loop
out
and
cmpsb
pop
mov
out
sti
mov
jo
push
popf
inc
pop
xchg
inc
addl
std
fildl
sub
mov
xchg
inc
test
sub
cmp
lcall
hlt
sbb
enter
addps
adc
dec
sahf
pop
sub
inc
xchg
rclb
pushf
sarb
adc
jmp
dec
push
and
cmp
rcll
mov
xor
cmp
sbb
loope
or
out
add
pushaw
leave
hlt
incb
mov
in
movsl
shll
mov
adc
lea
sbb
fiadds
fwait
je
cmpsl
adc
adc
jle
and
pop
mov
sub
push
xor
cmp
jge
pop
mov
xchg
mov
icebp
and
jno
ret
add
push
into
es
or
adc
movsl
shr
jo
inc
cmp
call
leave
jo
jecxz
lds
scas
in
pusha
xchg
lret
jg
sbb
mov
movsb
cld
int
in
out
mov
popa
jno
mov
sbb
or
mov
mov
jg
clc
fxch
gs
xchg
test
adc
popf
stc
in
cli
fsts
out
in
push
mov
addr16
fs
or
pusha
sub
mov
xor
icebp
outsb
js
xchg
sub
aam
dec
mov
jp
loope
jo
xchg
je
hlt
xor
mov
mov
adc
inc
add
stc
push
xchg
pop
and
ljmpw
or
arpl
mov
notl
leave
and
adc
xchg
std
in
xchg
mov
push
adc
rcr
jle
cmc
fistpll
xor
push
adc
in
sub
insl
and
jecxz
mov
pop
sub
adc
push
mov
dec
mov
or
pop
lret
jg
cmpsb
mov
mov
adc
popa
pop
int3
lea
in
movsb
add
insb
in
or
mov
in
inc
push
es
pop
mov
adc
push
imul
lret
adc
adc
cmc
rcll
sub
xchg
mov
mov
xor
push
test
sub
jo
lock
inc
insl
xchg
sbb
and
dec
repz
mov
pop
lahf
pop
pop
mov
mov
stos
mov
int3
sub
push
sarb
fimull
xor
jl
jecxz
dec
je
mov
inc
mov
inc
nop
fmull
xchg
imul
iret
xor
dec
nop
cli
insb
aam
dec
sbb
and
mov
dec
xor
xor
add
mov
inc
js
flds
inc
repnz
test
pop
add
push
mov
pop
fwait
nop
fmul
loop
sbb
cmp
mov
or
icebp
adc
fildll
jmp
jbe
ret
mov
lods
test
jg
jl
or
xchg
hlt
cmc
sbb
cwtl
push
repnz
aad
mov
fs
sarl
rclb
or
jbe
or
ret
lock
dec
lcall
dec
cmp
mov
jmp
idiv
aad
fisttpll
jmp
in
push
subb
cmc
call
loop
mov
inc
insb
and
sti
pop
pop
mov
cmpl
push
ret
incl
rorb
imul
cmp
pop
jbe
mov
in
mov
stos
nop
pop
sub
lock
bound
cmpb
xor
rcrb
aam
pop
inc
mov
jle
scas
lods
pop
mov
aaa
or
insl
leave
xor
sahf
out
mov
pop
cmp
lods
push
push
fmull
pop
rolb
int
idivl
fbld
incb
xlat
cmp
mov
out
adc
push
movsb
xor
aam
cmp
std
mov
cmp
jp
stos
sub
add
in
jg
xorl
pop
and
inc
jmp
insl
push
mov
pushl
mov
dec
jno
adc
xchg
pop
lret
xor
push
repz
mov
inc
adc
mov
add
inc
sbb
ret
ret
dec
mov
jbe
push
cltd
mov
adc
sahf
iret
mov
fisubrs
cli
dec
into
fbstp
adc
lock
cmc
and
idiv
xor
xor
pop
cwtl
push
dec
repnz
jp
xorl
inc
imul
lret
inc
imul
push
loop
add
push
mov
and
loope
mov
faddl
cmp
mov
jg
mov
inc
pop
fcomip
std
pop
sub
aaa
movsb
jne
movntq
cmpsl
cmc
mov
xchg
xlat
cltd
movsl
nop
jo
int3
sti
cltd
cmp
fidivl
cltd
fmul
popa
jae
xchg
cmp
testl
or
jg
push
outsl
subb
std
inc
add
shll
lret
or
and
lods
sbbb
mov
jae
cli
xchg
dec
jg
lods
adc
negl
loop
call
and
mov
mov
add
jno
xor
repz
jg
push
push
sbb
cmpsb
fsubl
cmp
stc
jge
xacquire
add
imul
imul
les
mov
orl
mov
into
loop
adc
negl
pop
jnp
aaa
rcll
and
mov
mov
cmp
dec
fs
xor
test
mov
stos
shlb
sar
and
lret
stos
jecxz
xchg
int
fldt
je
shr
pop
inc
shll
add
lea
add
sbb
inc
aad
movsb
mov
mov
pop
mov
cmpsl
cltd
push
sbb
inc
out
xor
std
nop/reserved
cmp
imul
roll
sub
shll
push
call
testb
call
xlat
and
push
mov
push
in
mov
loop
push
in
jne
loopne
in
outsb
inc
mov
mov
int3
in
repz
adc
jbe
cmpsl
ficoms
mov
int3
rol
xchg
lret
bnd
mov
mov
mov
cltd
mov
fiaddl
jae
sbb
jl
cld
push
or
mov
mov
fisttpll
sub
insb
push
outsb
mov
scas
popa
in
mov
cmp
pop
adc
sbb
sbb
rol
popf
fwait
sahf
push
add
cltd
xor
and
mov
fs
xchg
ror
mov
adc
dec
push
lods
ret
inc
xor
stos
fnstsw
jl
or
stos
int
arpl
daa
imul
or
loopne
sbb
ret
cmc
jns
ficoms
adc
xchg
arpl
dec
dec
in
imul
add
mov
les
stc
in
scas
jns
ss
out
pop
pop
cltd
ficoml
cmpsb
lds
mov
loop
nop
xchg
mov
jecxz
jmp
test
in
arpl
pop
mov
inc
cmp
mov
sbb
xor
aaa
jo
std
pusha
xchg
jb
in
out
cltd
data16
push
add
pushf
test
addr16
ret
and
inc
mov
orl
fsubrs
and
bound
mov
add
jg
jp
dec
inc
sbb
jno
xor
mov
lret
mov
pop
inc
add
xchg
aad
into
and
data16
jne
or
mov
xchg
adcl
mov
pusha
xchg
cmpsl
mov
out
or
fimuls
lds
and
outsl
hlt
fldl
sub
or
mov
out
inc
adc
mov
test
add
push
hlt
idiv
push
out
jb
aam
ja
mov
fdivrs
stos
or
sub
fimull
les
or
mov
ret
jno,pt
push
mov
push
jmp
xlat
add
aad
rcl
pop
lock
and
mov
fistpl
shlb
stos
movsl
dec
lret
ljmp
jp
je
aaa
jp
repz
and
dec
jp
stc
les
dec
pop
xchg
push
rol
adc
push
rolb
jmp
rcll
xor
mov
cmp
movsl
pop
cs
adc
test
roll
cmp
je
stos
dec
sub
into
stos
lahf
lea
cs
push
dec
xchg
dec
out
pop
cwtd
inc
pop
fsubs
stos
xchg
adc
jne
xor
enter
adc
pop
jo
ret
inc
insl
orb
or
ds
cmc
sbb
pop
jbe
test
data16
mov
inc
shl
ljmp
jp
and
pop
loope
int
fwait
mov
mov
dec
and
sub
mov
jmp
sbb
arpl
push
dec
sti
push
sti
repnz
into
and
mov
mov
enter
push
lods
sub
movsl
sbb
jne,pt
add
loopne
mov
das
jg
pop
movsb
and
sbb
dec
pop
jp
jno
rolb
sti
add
lahf
mov
in
jle
mov
jne
and
movsl
mov
outsb
ret
lret
out
cmp
mov
jecxz
rcrl
sub
loope
inc
mov
shll
mov
add
mov
inc
in
loopne
jl
add
pushf
adc
stc
subb
iret
lock
pop
fnstsw
pop
cmc
arpl
cli
ljmp
xchg
and
dec
and
xlat
mov
enter
or
push
inc
stos
hlt
sbb
adc
aam
dec
sub
and
and
andb
js
adc
imul
mov
mov
ret
xchg
loopne
xor
cli
jbe
jl
pop
out
test
movzbl
push
and
loope
pop
mov
xchg
or
movsl
inc
pop
and
sub
jle
and
or
mov
loope
je
adc
mov
popa
sbb
stos
cmp
xlat
or
in
stos
jo
out
add
and
movsl
sbb
mov
mov
mov
xchg
clc
outsl
jne
adc
adc
and
cmp
les
add
pop
jae
mov
packsswb
iret
push
push
popf
jecxz
adc
cld
xchg
pop
mov
loopne
fwait
cltd
scas
nop
cmp
fwait
push
sub
imul
mov
pop
out
pop
test
lods
sbb
pop
sub
aas
loopne
sbb
push
mov
dec
cwtl
popl
mov
xchg
jbe
lods
xlat
rcrl
cld
ret
jmp
repnz
or
push
call
cmpsb
jge
jecxz
xor
pushl
clc
call
cmp
mov
ja
and
xchg
stos
xchg
movsb
inc
inc
mov
push
lock
loopne
mov
cld
jno
loope
inc
cmp
loopne
sub
movsl
inc
dec
out
push
mov
stc
out
or
loope
jge
or
rol
lret
rcrl
cmp
cltd
mov
dec
cli
js
ret
xor
lock
outsb
adc
mov
aas
cmp
je
push
test
lock
movsb
pop
fs
push
jb
add
loop
lret
push
xchg
aad
push
xor
or
inc
stos
or
lretw
ljmp
lret
enter
cmp
push
adc
pop
das
mov
in
ljmp
int
mov
shrl
pop
or
sbb
add
insb
fwait
and
xchg
loop
leave
push
dec
in
lock
popa
push
jno
sub
cmp
out
icebp
sbb
mov
or
scas
pop
pop
jb
mov
ret
scas
pop
mov
or
mov
sbb
dec
ds
incb
ret
add
jae
shrl
testl
xor
clc
mov
xchg
lret
aas
add
xor
aas
jns
sbb
stos
mov
jmp
loopne
imul
mov
rorb
pop
cmpsb
sub
jecxz
sub
call
xchg
arpl
sbb
idiv
cli
cmp
push
scas
mov
in
push
cmp
jb
push
lcall
sbbb
push
mov
mov
ja
outsb
adc
icebp
daa
xchg
cwtl
fmuls
icebp
fisubrs
add
mov
mov
pop
sbb
dec
pop
fdivrs
cmp
or
movsb
xchg
dec
push
push
orb
jle
in
cmp
inc
loop
inc
xchg
aas
pop
sub
insl
inc
cmpsb
or
jge
pop
adc
test
and
jecxz
out
int3
mov
cmpl
sarb
jp
mov
mov
inc
outsl
add
pop
xchg
push
cmp
in
mov
pushl
add
cmp
dec
sub
lcall
adc
int
pop
adc
cs
jl
inc
adc
cmpsl
add
mov
lea
cmp
es
dec
push
sbbl
ss
ss
push
clc
adc
pop
and
out
ret
fstps
lret
jecxz
nop
xchg
out
mov
insb
das
int
or
test
jp
cmp
jle
xlat
int3
or
ja
int
sub
shrl
mov
dec
bound
mov
mov
int3
pop
popa
in
jne
gs
pop
adc
add
cwtl
shlb
fnstsw
fimuls
cmp
test
push
movsb
stos
cwtl
not
or
and
mov
idivl
jbe
adc
adcl
enter
add
add
outsb
cltd
push
adc
loopne
mov
adc
sbb
lods
std
adc
push
idivb
sub
pop
mov
or
pop
into
inc
jno
jg
mov
sbb
out
scas
cmp
enter
insl
daa
push
fs
outsl
xor
add
sub
pusha
pop
int
das
push
test
and
inc
mov
cli
xor
lahf
movsl
inc
test
add
fbstp
push
pop
js
xchg
inc
stc
addl
sahf
repnz
fsubrp
cs
inc
fdivr
xlat
jecxz
pop
mov
fcmovnu
iret
clc
xchg
or
push
sub
in
push
or
cmp
add
out
mov
jb,pn
cmp
ret
lcall
nop
cmp
rorl
xchg
and
jns
jns
outsl
xchg
fcom
inc
inc
js
or
xchg
inc
jo
inc
jnp
int
push
inc
push
adc
adc
push
jb
pop
dec
aas
das
or
dec
scas
leave
jbe
push
jbe
dec
mov
cmp
mov
js
cli
sbb
shrb
dec
test
xlat
sbb
xor
mov
clc
repz
xorl
mov
call
xchg
push
aas
xchg
shrl
popf
clc
mov
lret
mov
xor
cmp
out
sbb
adcb
lods
push
add
es
testl
adc
sub
sbb
in
in
cmp
xor
negb
jnp
sub
mov
aaa
push
call
jnp
movsb
pop
dec
sbb
mov
adc
mov
stos
stc
js
stos
clc
xchg
pop
in
mov
xchg
iret
xchg
jb
cmp
sbb
mov
mov
out
xor
fisubrl
dec
sti
dec
enter
cmc
das
and
mov
adc
sbb
xlat
movsb
out
stos
adc
dec
xor
mov
or
xor
jp
mov
jae
jae
cmp
int
sbb
icebp
jno
pop
inc
mov
imul
popa
sbb
dec
mov
xchg
or
and
ss
stos
mov
fdivl
mov
add
jg
mov
outsl
mov
xchg
and
shlb
push
sbb
dec
addr16
dec
cmp
xchg
sub
insl
imul
pop
in
cmp
jp
sub
daa
and
jbe
loop
xchg
or
pushf
gs
outsl
dec
mov
mov
dec
adc
mov
mov
adc
fs
sbb
jne
push
imul
popa
out
sbb
test
mov
ret
mov
dec
mov
cmp
test
mov
xor
xchg
xchg
pop
dec
shll
scas
mov
cmp
jns
sbb
cld
jno
mov
movsb
fistps
push
pop
leave
inc
adc
and
int3
insb
sub
scas
sahf
call
clc
xchg
lock
idivl
imul
aam
rol
hlt
lret
inc
nop
lahf
jmp
pusha
pusha
test
push
cmc
lods
enter
ret
int
sub
mov
nop
sub
push
ret
mov
sub
mov
xchg
out
mov
push
mov
shl
pop
out
test
sbb
or
insb
nop
out
ret
dec
test
xor
out
cmpsb
gs
push
xchg
dec
xchg
outsb
leave
xchg
add
mov
push
scas
mov
jecxz
sbb
jecxz
imul
mov
mov
inc
addr16
and
jp
pop
out
mov
pop
dec
mov
cmp
ds
xchg
cmp
pop
jne
push
dec
mov
mov
sbb
push
jl
fs
xchg
ret
clc
popa
adc
fcomps
scas
dec
jo
pop
lcall
inc
out
xor
in
test
or
push
inc
shll
daa
lds
xor
mov
jbe
lods
cmpsl
dec
mov
dec
mov
rclb
popl
push
inc
mov
scas
pop
lret
pop
mov
idiv
rcr
ljmp
cmp
loopne
mov
lret
and
jne
int
lock
sbb
sbb
mov
mov
dec
push
add
outsl
pop
ds
testb
clc
stos
xor
movsb
ljmp
and
adc
fcomip
inc
icebp
dec
imul
out
jnp
mov
testb
push
icebp
aas
test
leave
imul
stos
or
sarb
test
mov
inc
xlat
push
mov
pushf
loop
jb
xchg
sbb
mov
fisttpl
fs
mov
pop
rcr
jg
sbb
adc
lahf
mov
pushf
outsb
xor
dec
sub
mov
js
mov
fsubrs
insb
loope
pop
xor
jle
add
cmp
aam
cmc
cwtl
add
mov
sbb
mov
lret
cwtl
sahf
mov
stos
orb
dec
cli
loop
push
inc
ret
push
sub
cmpsl
cmp
vaddsd
jnp
mov
xchg
or
hlt
fidivs
and
leave
stos
shlb
mov
xor
xor
addl
jne
sbbb
inc
and
dec
pop
jne
inc
sbb
cli
and
sarl
mov
adc
test
jl
leave
push
sub
mov
push
lea
mov
into
movsb
xor
repnz
out
daa
negb
sub
dec
bound
gs
mov
mov
fsubs
addr16
std
std
push
outsl
aad
loope
mov
out
adc
mov
xor
in
ficoml
fistpl
movsl
sub
add
and
dec
xor
inc
adc
shrb
test
xchg
cs
pop
stos
aad
les
mov
decb
and
dec
sbb
repz
pop
mov
mov
shlb
or
shlb
test
iret
fadds
pop
aas
out
lcall
mov
imul
add
and
lcall
dec
into
insb
cmc
fucom
cli
mov
and
jg
test
cwtl
push
stos
outsb
pop
sbb
test
push
mov
xor
xlat
cmp
xchg
or
cmc
mov
xchg
mov
xchg
icebp
xchg
cwtl
sbb
stos
jae
xlat
ret
test
arpl
lea
stos
dec
popa
in
lods
mov
mov
dec
int
inc
fmuls
jg
fisttps
scas
cli
scas
push
or
sarl
insl
jl
xchg
inc
mov
xchg
adc
inc
mov
xchg
and
ds
inc
mov
push
int3
aas
out
pop
add
inc
je
icebp
lcall
jo
or
ja
fstpl
xor
xor
mov
ficomps
pushl
dec
jmp
js
out
mov
sub
dec
pop
mov
inc
sahf
mov
push
add
aad
ret
sarl
mov
sbb
cltd
cmp
add
fidivl
lret
add
aam
rcll
xchg
cs
or
imul
lods
pop
push
dec
mov
sbb
mov
fadds
hlt
xor
bound
int3
mov
test
mov
lea
in
outsl
and
xor
jmp
dec
pop
cmpsb
fsubr
cmp
adc
jne
jns
push
jg
xor
xor
mov
lods
mov
pop
movsl
inc
or
pop
repnz
loopne
test
fdiv
orl
inc
sub
in
les
or
jne
and
push
icebp
jle
xor
mov
out
inc
cltd
inc
lods
add
movsb
nop
call
dec
jecxz
mov
movsb
adc
inc
scas
mov
inc
xchg
idivb
scas
andb
ss
xchg
push
scas
pop
xchg
int3
popf
mov
int
outsb
insl
ficoms
adc
adc
mov
cmpsb
xor
xor
popa
imul
jns
mov
lahf
rcrl
test
mov
test
ret
dec
sbb
adc
sahf
sub
mov
xlat
mov
push
cmp
jg
dec
push
dec
push
adc
xchg
rorl
mov
nop
push
ss
sub
push
or
insb
test
sub
xorl
out
sub
mov
xchg
and
lahf
adc
mov
cmp
sti
mov
adc
sbb
and
pop
cmp
pop
rcl
movsl
into
push
in
mov
pop
insb
xchg
cmpsl
repz
call
shrb
xor
js
mov
jne
push
mov
dec
mov
push
mov
lods
test
xchg
mov
es
or
xchg
inc
and
xor
fiaddl
xor
iret
iret
in
outsl
sub
mov
in
mov
jno
mov
mov
inc
gs
leave
xor
sub
xlat
mov
or
dec
in
xor
jns
mov
cmp
cmpsb
push
cmp
xor
dec
or
mov
cmp
in
scas
daa
jl
in
xchg
mov
and
inc
mov
ljmp
jge
mov
gs
push
mov
iret
jl
jle
add
mov
out
xor
movsb
sub
mov
stos
lods
inc
dec
dec
data16
test
imul
sub
fsub
shlb
cmpsl
inc
xchg
jge
jns
inc
popa
sbb
xchg
fisubl
sbb
lock
jmp
xchg
icebp
leave
mov
mov
sub
pop
inc
movsb
mov
xor
mov
fsts
push
loop
or
aad
mov
mov
mov
out
push
es
lcall
add
inc
adcl
lock
shrl
cmp
lret
hlt
jns
clc
bound
mov
dec
jmp
sub
push
aam
divl
test
cmp
outsb
stos
roll
lods
pop
jmp
imul
js
shll
push
rcrb
mov
stos
sbb
push
ss
cwtl
insl
incl
jb
mov
cmp
cli
xchg
and
mov
xor
mov
mov
sahf
pop
in
pop
addr16
rcr
mov
nop
dec
stos
arpl
jns
rcr
and
sbb
movsl
les
sbb
cmpsb
adc
sub
out
jo
fs
mov
jp
dec
push
add
lock
outsl
sbb
sti
cs
pop
adc
test
shlb
jne
inc
pop
pop
cmp
shll
shrl
repnz
xchg
pusha
xor
push
sub
adc
cmp
fcoml
dec
int
pushf
test
cmp
sub
cmp
or
es
mov
and
xor
pop
dec
into
lcall
test
xchg
jmp
jae
rcr
jl
cmpsl
add
cli
ja
jmp
xlat
push
out
mov
adc
data16
fwait
les
ret
or
push
movsb
push
push
adc
int3
insl
sarl
jp
rclb
cmp
in
mov
out
test
xchg
cmp
adc
pop
ficomps
mov
out
cmpsb
addr16
dec
mov
repnz
cmp
sub
mov
stc
mov
les
scas
inc
mov
mov
repnz
push
mov
mov
pop
cmpsl
scas
push
xchg
test
jge
cwtl
ja
jb
jo
xor
jl
andb
popf
enter
lea
xchg
xchg
fdivrl
sbb
adc
adc
cmc
jmp
or
jnp
sbb
icebp
push
pop
cltd
cltd
test
xor
xchg
xchg
push
iret
lods
loopne
mov
pushf
movsb
mov
lcall
and
xchg
outsl
mov
mov
fs
test
aad
jne
cmc
inc
sarl
adc
dec
decb
icebp
stc
dec
fisttps
mov
ja
xor
and
fsubrs
push
or
jl
sub
jl
out
daa
push
sub
rcrb
lock
loope
mov
ja
push
mov
cmp
cmp
mov
ds
mov
out
jg
jecxz
repnz
or
ss
cmp
mov
push
mov
dec
rorb
fstl
pop
mov
hlt
icebp
push
dec
jecxz
nop
inc
std
shll
call
bound
jecxz
shll
lret
out
daa
imul
inc
daa
andb
cmp
fists
sub
aam
fsubrl
jp
mov
pop
push
les
and
pop
mov
movsb
fiadds
jp
insb
fstpt
cmp
adc
ja
jae
popa
cmp
insl
or
fdivs
pop
lods
jmp
fdivrp
push
push
movb
ljmp
mov
in
fnstsw
pop
mov
scas
pop
dec
push
mov
fidivrs
sub
push
inc
jb
dec
inc
mov
data16
fwait
dec
inc
cmp
pop
fisttps
arpl
mov
in
adc
push
dec
cli
xchg
das
cmpsb
lcall
aad
sub
ret
mov
mov
ficomps
and
in
pop
cmp
or
sbb
into
add
dec
xorb
int3
push
and
out
inc
jle
pop
and
incl
imul
mov
int3
pushf
jl
inc
lahf
jle
pop
cmpsl
gs
bound
mov
add
pop
leave
outsb
mov
stos
adc
or
sbb
lods
lahf
inc
dec
add
seta
call
pop
jne
test
cmp
mov
add
and
jno
pop
pop
dec
les
cs
xchg
das
test
fimull
jbe
dec
popf
adc
mov
sbb
dec
sbb
lds
les
add
les
inc
add
mov
and
pop
mov
lret
push
mov
loop
lret
rorl
pop
pop
leave
or
inc
xor
jp
cmpsl
pminub
mov
inc
fsubrs
test
dec
and
test
push
movsl
inc
mov
mov
clc
in
mov
mov
stos
and
push
add
cmpsb
dec
mov
js
jb
clc
aam
icebp
test
mov
add
outsl
aad
dec
insl
fbstp
dec
mov
or
mov
sbb
movsb
fisubl
fptan
mov
inc
mov
es
outsb
sub
fimuls
xor
mov
cltd
mov
test
adc
dec
enter
mov
or
call
inc
scas
mov
lea
jle
adc
stos
xchg
sub
scas
in
xchg
popa
cs
jae
ror
outsl
lret
int3
mov
aas
dec
test
sbb
cmp
fnstenv
cld
jp
inc
sub
or
push
lock
add
andl
add
test
jb
leave
jge
or
mov
js
mov
adc
adcl
push
jb
push
pop
push
cmp
or
mov
push
and
outsl
xor
push
xchg
fnsave
mov
int
dec
sub
adc
lcall
mov
out
pop
scas
rorb
xor
icebp
jp
xchg
cmpsl
push
movsl
sbb
push
std
xchg
xor
adc
dec
cmpsl
fiaddl
call
xchg
aaa
lahf
stos
mov
les
or
jge
pop
jae
icebp
jg
cmp
out
mov
gs
ret
jmp
loope
xchg
jp
subb
int
inc
jns
jns
adc
xchg
xchg
and
push
add
loope
movsl
mov
mov
mov
mov
xor
icebp
scas
ja
out
dec
or
xor
loop
xchg
dec
sahf
enter
mov
insl
loop
xor
shrl
rcr
scas
lock
sub
mov
adc
je
adc
loope
subl
pop
in
xchg
popa
adc
add
xchg
inc
int3
popa
in
scas
jno
cmpsl
push
cmp
xchg
je
pop
hlt
testl
xor
fdivs
lret
mov
int3
cltd
xlat
add
xchg
or
in
push
jae
jns
mov
cmp
sti
mov
mov
dec
fcoms
mov
nop
mov
aad
and
das
and
repz
hlt
repz
in
pop
sub
add
mov
mov
push
pop
mov
inc
shlb
test
enter
add
mov
jp
aad
mov
xchg
stc
jns
aaa
dec
xor
stos
adc
data16
adc
sbb
mov
add
outsb
subl
icebp
pop
and
insb
cmpsl
jnp
adcl
lods
je
push
push
shufps
cwtl
in
fisttpl
pop
adc
mov
pop
push
sbbb
xlat
lock
jnp
inc
add
lds
dec
shll
je
loope
or
loopne
or
push
jo
pop
in
push
lahf
mov
sub
mov
aam
or
dec
aad
add
push
dec
cmpsb
dec
mov
and
cmp
adc
cmpsb
jle
scas
addr16
aam
jo
mov
je
fbld
and
mov
or
mov
mov
xchg
test
popf
fcmovnbe
dec
jno
into
call
add
add
mov
imul
add
sub
fidivrl
mov
mov
sbb
xor
jno
and
ds
jge
fcmovu
enter
stc
and
int3
in
cli
push
ss
push
scas
mov
xchg
xor
bound
sub
xchg
mov
hlt
xchg
xchg
jnp
and
adc
adc
hlt
and
jb
jle
imul
add
mov
inc
test
jl
push
mov
sbb
test
int3
scas
outsw
movsb
insl
test
add
loopne
sbb
call
sub
fsubrs
lods
mov
aad
fsubrl
ret
xor
jne
mov
mov
adc
pop
xor
add
mov
fisttpl
fmuls
or
inc
pop
dec
call
jo
jns
fcomps
scas
xorb
sbb
inc
xor
mov
ret
in
xchg
test
insb
jecxz
sub
jo
adc
xor
jle
xor
cwtl
mov
out
or
pop
das
stc
or
inc
push
out
dec
imul
jge
xchg
mov
add
jl
shll
mov
inc
push
or
and
js
push
dec
pop
sbb
push
hlt
insb
cmp
sqrtps
mov
jb
mov
lods
int3
cmp
pop
xchg
pop
mov
mov
jne
cmp
or
mov
xor
push
fsubrs
sub
orl
dec
dec
outsb
adc
stos
int
or
mov
clc
ret
loope
xchg
shl
mov
or
and
fiaddl
mov
jb
cmpsl
incb
std
scas
lea
jne
jp
adc
jmp
fnsave
mov
mov
jl
cmp
mov
or
inc
das
push
xchg
and
push
ljmp
pop
idivl
sbb
mov
icebp
xchg
sbb
mov
adc
sahf
push
out
push
or
shl
adc
dec
lahf
loopne
enter
fidivl
repnz
bound
sti
popa
mov
movsb
filds
pop
pop
sub
or
insl
cwtl
adc
mov
psrlq
add
jns
push
adc
sub
aam
loop
lods
orb
insb
mov
or
mov
xor
sub
shlb
rclb
cmpsb
jecxz
pop
arpl
inc
or
pop
repnz
sbb
ljmp
jp
rcr
jle
imul
mov
add
add
sbbl
ljmp
std
jmp
stos
es
jg
mulb
mov
jb
scas
mov
add
jb
dec
xchg
push
sahf
int3
ret
jbe
jmp
fdivrl
sub
add
loop
enter
lret
cmp
sub
adc
lea
into
out
fsts
in
loop
add
outsl
outsb
pop
sbb
pop
jmp
adc
fwait
test
cmp
aad
sub
fdivrp
cmpsb
cmp
stos
adc
pusha
pop
sub
out
inc
les
imul
xor
pop
sarb
jnp
add
js
push
insl
ljmp
xor
test
mov
cmc
test
mov
jecxz
repnz
sbb
aas
jmp
cld
shll
mov
cmp
xchg
outsb
xor
gs
sbb
in
adc
sbb
mov
mov
loope
xchg
xchg
call
loop
movsl
cmp
imul
jl
jg
ljmp
sub
xchg
stos
or
xor
ret
add
jne
sahf
xlat
or
in
jg
cld
sti
or
test
iret
pop
xorb
and
or
enter
int
mov
sbb
mov
mov
fisubs
lock
adc
mov
xchg
push
scas
sbb
mov
ljmp
xchg
lock
aaa
scas
inc
je
add
gs
std
add
inc
test
sbb
dec
repnz
sbb
les
stos
push
das
jl
jecxz
fwait
lret
std
inc
into
xor
push
ss
ds
inc
fdivl
mov
bound
and
jge
int
out
mov
xor
negb
ret
js
sbb
sub
lock
sahf
xchg
mul
xchg
mov
pop
insb
pop
lods
xchg
dec
jge
loop
outsl
sbb
arpl
cmp
jle
sar
or
cmpsl
sar
insb
push
insb
add
inc
negb
sbb
setle
xor
xchg
xchg
pop
loopne
inc
pop
jns
or
das
lods
mov
push
movsl
dec
outsb
jno
into
xor
std
repz
jecxz
iret
outsl
leave
lods
cmp
es
test
mov
dec
jmp
xchg
outsb
push
xchg
inc
out
pop
pop
xchg
cmp
enter
jns
mov
jge
add
std
xchg
inc
sbb
xchg
mov
repz
insb
lret
fs
dec
sbb
jecxz
out
popl
test
js
dec
jl
pop
rclb
mov
mov
and
inc
pop
pop
mov
movsb
dec
clc
insb
jbe
stos
push
pop
jmp
jae
ljmp
cmp
jl
into
push
jns
xchg
aam
fisubl
or
sub
xchg
add
lods
pushf
or
loope
cmp
popa
dec
aam
or
outsb
shr
and
ljmp
fistpl
fildl
jmp
nop
adc
adc
jge
mov
sub
int
jge
or
cmp
jne
jne
sub
popf
adc
and
cs
test
push
pop
xor
dec
adc
xchg
xor
in
push
clc
pop
in
gs
mov
mov
pop
test
xchg
jae
inc
push
push
mov
lods
enter
lea
call
pop
enter
je
and
ds
inc
insl
mov
or
mov
das
outsl
sbb
mov
jae
test
repz
out
mov
push
push
enter
subb
test
incb
icebp
hlt
fsubr
xchg
pop
mov
push
imul
cmc
inc
sub
and
sbb
sbb
push
sub
and
fisttpll
gs
add
pop
lahf
cmpsb
xchg
push
imul
xlat
mov
add
add
push
mov
or
add
icebp
xor
and
pop
cmpsl
dec
cmp
fwait
hlt
icebp
lea
mov
sbb
jp
mov
lret
cmp
pop
pop
pop
inc
daa
test
push
cs
dec
sbb
test
lods
or
push
ds
stos
xchg
out
ljmp
out
xlat
mov
xor
loop
loop
mov
jecxz
push
sub
add
lret
mov
add
mov
dec
test
sbb
sbb
adc
mov
into
rcr
sti
jp
inc
call
push
xchg
sbb
loop
xchg
xchg
or
in
or
sub
mov
test
test
jmp
sbb
inc
repnz
mov
cmp
fcoms
in
jle
cltd
jb
mov
bound
in
sti
lret
popa
incb
inc
mov
inc
jbe
pop
cmp
fwait
js
scas
ret
push
int3
xor
aas
setne
pop
pop
xorb
popf
mov
sub
mov
jne
fistps
jge
jbe
jp
inc
repz
test
xor
ret
aas
sub
stos
cmp
sbb
inc
jno
cwtl
sbb
fcmove
push
mov
and
adc
scas
fwait
or
xorb
mov
jecxz
das
push
outsb
cmp
jl
lret
xor
sub
xor
add
imul
bound
jo
push
or
mov
mov
daa
mov
inc
add
jae
in
ds
in
fnstsw
cmpsl
pop
lret
insl
in
ret
xor
xchg
inc
xchg
sbbb
movsb
out
mov
fcom
xchg
add
arpl
aam
jae
call
cmp
xchg
push
jne
mov
cmpsb
push
cmp
data16
mov
daa
cmp
jo
sub
add
and
fwait
cwtl
in
mov
xchg
js
ss
sbb
dec
and
push
xchg
test
into
shrl
andb
cld
xor
pop
mov
imul
cmpsl
cmpsl
in
jecxz
mov
mov
inc
gs
cltd
xchg
lcall
pop
mov
jbe
enter
in
jge
mov
push
mov
lea
cmp
xorl
lods
push
pushf
xchg
mov
and
jb
pop
xlat
call
dec
and
pop
inc
sahf
cmp
mov
mov
xor
add
leave
std
inc
lret
xchg
movsl
int
xchg
jl
push
xchg
ret
add
cmpsb
ficomps
or
pop
popf
jge
cwtl
icebp
pop
dec
ds
jp
cli
mov
outsl
mov
mov
fnstenv
push
dec
xchg
inc
je,pt
dec
mov
outsl
xor
pop
out
pop
adc
ljmp
cmp
lods
adc
sub
ret
jl
hlt
insl
jbe
inc
push
mov
je
rorl
das
sub
pusha
mov
cmpsl
lock
push
imul
mov
inc
mov
sbb
inc
xor
jnp
out
or
mov
ss
adc
jno
jecxz
fimuls
xchg
add
pop
ljmp
and
stos
sub
push
inc
insl
adc
outsb
xor
xchg
outsl
iret
push
jmp
in
gs
or
dec
mov
mov
nop
cmp
pushf
pushf
fistps
jmp
xor
test
dec
push
test
sti
jns
mov
push
mov
fdivs
adc
je
imul
push
test
enter
sbb
push
leave
add
int
xor
adc
push
mov
cs
dec
jl
cmp
inc
push
gs
adc
mov
xor
out
imul
fidivrs
dec
insl
shlb
mov
lcall
dec
xchg
test
iret
cltd
ds
cmpl
cmp
scas
les
cli
mov
lea
fstl
test
cmpsb
xor
jne
fs
mov
cmp
sahf
ss
xchg
xchg
int3
push
xor
dec
xchg
jae
inc
fimull
cmovnp
nop
in
xchg
pushf
pusha
call
lret
and
mov
arpl
popf
pop
adc
xchg
mov
cmp
out
out
add
cmp
fldl
mov
js
mov
and
insb
or
movsl
ss
movsl
fcoml
enter
loope
add
sbb
add
mov
push
shl
or
test
daa
cli
gs
push
out
pop
xchg
insb
pop
dec
scas
and
pop
adc
pop
mov
lahf
mov
lock
clc
cmp
imul
add
js
and
insl
movups
lcall
jmp
and
cmp
mov
or
fxch
xchg
cmp
and
pop
cwtl
inc
mov
rorb
mul
notb
test
addl
pop
push
es
lds
rcrb
lahf
add
loop
aam
push
xchg
in
jno
shl
pusha
repnz
addb
dec
sbb
sbb
jnp
scas
mov
mov
push
adc
lcall
adc
idivl
imul
push
xor
xchg
pushf
mov
movsl
adc
cli
addr16
hlt
xchg
sub
jns
cmc
repz
jp
out
lret
repnz
pop
lcall
dec
pusha
loope
and
add
adc
sbb
shll
mov
inc
mov
rcrl
and
rcr
and
mov
idivb
dec
cmp
or
insb
in
ljmp
in
iret
mov
xor
cmp
xchg
cmc
mov
ss
rcrb
mov
inc
lcall
fisttps
imul
mov
mov
lea
xchg
fisttps
or
clc
gs
fsubrl
and
scas
or
popa
loop
in
test
adc
fnsave
mov
movsl
and
leave
add
mov
dec
add
add
in
cmp
cld
scas
adc
dec
mov
cltd
lods
jbe
jae
hlt
leave
into
mov
lret
mov
pop
movl
imul
dec
adc
mov
xchg
pop
aas
out
rorb
or
xchg
scas
out
mov
mov
lock
xchg
dec
pop
fiaddl
js,pn
push
test
mov
add
pop
jle
cwtl
adc
insb
shll
sbb
fidivs
mov
push
mov
adc
inc
sbb
add
sub
pop
push
xlat
push
push
mov
in
pop
adc
test
stos
out
ja
mov
push
loopne
mov
lods
sub
sbb
sbb
mov
inc
inc
jae
stc
pop
xor
inc
jae
pop
insl
inc
xor
sbb
mov
lret
sub
adc
adc
jge
sub
jecxz
xchg
fsubr
mov
lret
pop
stos
je
and
mov
push
bound
sbb
push
je
divb
push
pop
push
or
iret
pushf
lcall
dec
dec
or
loopne
aam
stos
ss
push
push
aam
add
lock
roll
stos
into
jne
push
in
push
mov
repz
cmp
mov
lds
je
add
push
shll
addr16
sarl
add
lgs
cmc
pop
aam
cmpsb
push
or
scas
cwtl
jno
add
out
ljmp
sbb
kandnb
or
mov
cli
adcl
jg
inc
cltd
imul
pushf
int
shrb
fsubr
inc
movsl
dec
push
stc
ja
addr16
je
cld
pop
sub
outsb
clc
jnp
xor
aad
adcb
and
adc
pop
movsb
xor
adc
cmpsb
int
xor
inc
pop
mov
jns
adc
push
dec
scas
lods
xor
into
in
lock
popa
fwait
push
imul
repnz
or
sbb
lods
xchg
popf
xchg
mov
es
mov
stos
roll
inc
pop
ret
xchg
pop
inc
mov
push
fcomps
or
and
pop
mov
jo
dec
sub
pop
aaa
add
ret
insl
xchg
dec
movsb
push
adc
cmp
stos
loope
pop
or
sbb
mov
ficoms
movsl
jg
popa
lock
cpuid
jge
pop
loopne
inc
out
or
push
ljmp
das
sbb
and
shlb
inc
clc
xor
sub
xchg
xchg
cmpsb
popa
pop
sbb
sahf
xchg
scas
xchg
bound
pop
cmp
and
or
lods
pop
add
mov
ret
pop
pop
jno
xor
adc
pop
sbb
cs
sub
jge
cltd
outsb
outsl
push
xchg
push
pop
jne
mov
mov
add
out
and
movsb
insl
sub
iret
or
jno
iret
imul
imul
xlat
xchg
add
daa
mov
adc
add
add
mov
inc
in
and
jl
sub
out
push
mov
mov
into
nop
xchg
ljmp
xchg
ret
cmp
das
out
xor
sub
das
pop
icebp
outsl
test
enter
or
sbb
test
push
in
mov
insb
imul
xor
push
lahf
popa
inc
jnp
fwait
gs
lods
loopne
xchg
test
aad
fstl
aad
cmp
dec
and
pushf
fisubl
push
mov
xor
xor
push
cmp
out
sbb
dec
jns
aad
mov
adc
movsb
insb
dec
bound
loop
je
xchg
mov
xchg
pop
cltd
rorb
stos
loope
adc
mov
push
and
stos
stos
push
and
lahf
xor
pop
push
enter
sub
ljmp
or
ds
pop
mov
mov
push
repz
andb
sbb
xchg
sbb
rolb
adc
aad
loope
out
popa
sub
jg
rcll
daa
arpl
and
out
pop
movsl
sub
cmpsl
shrl
sub
cmpsb
add
mov
adc
ja,pn
push
imul
enter
mov
cmpsl
inc
adc
pop
ret
in
xchg
movsb
pop
pop
pusha
fcoms
lret
imul
jae
dec
hlt
push
add
xlat
mov
push
mov
inc
mov
mov
inc
lods
scas
jg
lcall
mov
cmpsl
roll
imull
test
push
nop
xchg
inc
leave
fistpl
rol
jmp
or
shr
sbb
sub
cld
push
push
xor
ficompl
sub
dec
icebp
outsb
cmp
fdivl
loopne
xchg
jns
push
lret
lods
or
and
pop
mov
jmp
dec
js
repz
mov
outsb
push
mov
mov
in
add
cmp
outsl
lock
int3
or
insb
cmp
gs
out
dec
adc
fs
mov
add
and
stos
jle
cmc
push
mov
popa
xlat
ja
and
xor
pop
mov
out
popf
or
enter
cmpsl
add
add
sti
cmp
lds
scas
arpl
popf
ds
lea
fldlg2
arpl
pop
pop
pop
inc
adc
or
xchg
rcrl
cld
sbb
jno
call
xor
addr16
and
push
lahf
scas
sti
adc
pop
mov
rclb
adc
test
ds
loop
pop
in
in
cmp
pop
push
push
cwtl
cmp
mov
xchg
int
stos
fisttps
mov
jo
aas
sbb
dec
dec
loop
jl
mov
add
push
jo
mov
or
repz
idivl
movsl
xor
repnz
add
mov
cmp
inc
out
inc
ror
dec
stc
in
inc
mov
loope
pop
jns
test
add
icebp
loope
scas
lcall
pushf
push
dec
ret
stos
fbstp
or
mov
outsb
iret
push
mov
mov
lea
insl
push
mov
push
add
gs
insb
mov
test
inc
lret
ds
andb
cmp
std
cmpsb
sbb
dec
into
mov
imul
test
add
pop
jl
clc
vandps
lret
aad
stos
sbb
xchg
insb
fisttpl
in
dec
inc
fnstsw
rol
ljmp
and
insb
inc
pop
sbb
push
loop
mov
mull
out
fstl
jns
andb
push
arpl
sub
push
movsb
push
or
jle
inc
nop
add
or
jl
mov
cld
stc
out
test
cmpsl
adc
fldcw
mov
xor
clc
aas
cmc
dec
jnp
pop
jle
mov
loopne
sub
nop
mov
jb
sub
mov
xor
das
loope
push
push
mov
or
pop
sub
push
fbld
cmp
xor
pop
stos
mov
jecxz
jne
cltd
lret
xorb
jle
lret
cltd
mov
popa
pop
ljmp
cmpsb
dec
mov
into
aaa
test
sub
enter
jne
lds
rclb
xchg
push
lods
pop
ficomps
mov
lret
outsl
enter
scas
into
mov
sbb
pusha
push
cmpsl
nop
mov
js
pop
push
clc
sub
data16
push
sti
cmp
shll
fdivr
jl
push
pop
sarb
xor
cltd
xor
cli
bound
jbe
pop
lock
jecxz
dec
inc
push
sbb
leave
cmp
mov
xchg
loopne,pt
mov
mov
sbb
adc
dec
and
aad
mov
sbb
mov
inc
fsts
daa
adc
out
dec
aam
push
aad
stos
out
add
mov
mov
sub
sarb
and
sub
sbb
adc
data16
cmpsl
int3
rorb
addr16
daa
enter
lcall
pushf
add
aad
xor
negb
test
aaa
add
mov
imul
pushf
pop
push
imul
repnz
add
inc
in
mov
mov
jp
mov
dec
cmc
inc
std
pop
and
bound
sti
cli
dec
jmp
jp
xor
mov
daa
clc
jle
imul
pop
cld
imul
shr
cmpl
ds
not
sub
in
mov
outsb
inc
ret
hlt
stos
pop
mov
in
push
pop
out
fs
in
clc
cmp
mov
cmc
ficompl
rcr
add
fdivr
mov
xchg
aas
sbb
lret
repnz
mov
or
or
adc
and
cmp
iret
int3
push
jle
movsb
inc
imul
mov
xor
insb
scas
pop
fiadds
push
mov
push
inc
jbe
inc
pusha
sahf
sub
inc
bound
call
push
je
cmp
stos
xchg
mov
es
ss
hlt
cs
insb
pop
rclb
xchg
and
jmp
or
adc
mov
jno
cmp
mov
lds
mov
sbb
fldt
stc
or
push
das
stos
int3
out
xor
fwait
xchg
popa
adc
pop
jmp
ja
add
clc
pusha
int3
sub
jno
fcoms
scas
mov
sub
mov
add
mov
xchg
ret
repnz
ret
mov
mov
movsl
xchg
pop
fmuls
roll
jne
out
clc
push
add
in
lds
rolb
andnps
call
mov
nop
inc
sbb
xor
loopne
test
jo
popf
push
mov
adc
data16
int3
es
cmp
dec
push
imul
ret
leave
mov
mov
enter
adcb
cmp
xchg
mov
daa
cmc
cmc
mov
ss
mov
orb
cmpsl
jae
pop
cmp
sub
lcall
cmp
icebp
out
sub
adc
mov
jb
xchg
test
outsb
pop
jnp
jnp
mov
inc
add
aas
inc
std
pop
inc
scas
or
inc
cltd
adc
push
lds
inc
xlat
subb
cltd
mov
lods
sahf
push
push
adc
std
push
dec
push
jns
call
xchg
popa
jg
scas
in
and
jmp
adc
pop
jp
xchg
adc
mov
addr16
mov
inc
jne
pop
jbe
addl
scas
lea
popf
sbb
fstl
out
inc
mov
mov
adc
es
cmp
and
ss
mov
popa
cmp
mov
jne
imul
inc
pop
cmp
movl
mov
push
xlat
leave
out
cmp
insl
les
push
popa
es
push
add
jno
jns
ror
mov
outsl
and
xchg
cmpsb
mov
testl
add
rcl
jae
push
fcmovnb
sbb
and
pop
sbb
xor
js
adc
adc
sub
shl
lea
fsubrs
daa
xchg
pop
inc
fwait
out
mov
sbb
lods
outsl
mov
mov
mov
push
sarb
divl
push
inc
add
or
jmp
push
sub
mov
push
ljmp
xchg
push
jmp
pop
aad
les
fadds
sbb
push
xor
inc
adc
xorl
cmp
mov
pop
pushf
js
loop
jg
fwait
push
iret
push
fldt
cmp
jbe
push
outsl
insb
xor
xor
test
sbb
cmp
jno
mov
cltd
insb
loop
mov
adc
push
lcall
mov
inc
fwait
iret
push
add
xor
aam
out
mov
xchg
fidivl
dec
mov
adc
je
aaa
xor
push
test
pop
cmp
or
push
push
xchg
dec
mov
xchg
pop
lods
sub
pusha
lods
mov
jmp
leave
mov
por
push
xor
jbe
leave
dec
sub
shlb
mov
outsb
lret
sbbb
xchg
cmp
cmp
pop
mov
cmp
sub
jo
inc
jmp
nop
mov
and
push
cs
ret
cld
add
inc
pop
pop
loopne
xchg
test
popa
mov
inc
das
inc
xchg
std
call
test
mov
inc
je
jbe
and
push
jnp
cmp
ret
nop
inc
mov
mov
mov
sbb
loopne
mov
push
jg
lock
and
aas
cli
mov
pushf
movsl
dec
bound
loop
or
adc
imul
sub
sbb
adc
fucompp
dec
std
jae
ljmp
and
inc
jle
fsubs
mov
repnz
fildl
inc
push
jnp
ds
pop
inc
jp
mov
in
movsb
push
push
loop
adc
cmpsb
mov
xor
ds
mov
shrl
xlat
and
fstpl
dec
push
pop
in
pop
mov
mov
popa
jl
mov
or
test
dec
push
cmpsl
shll
dec
data16
xchg
jp
sbb
shrb
mov
add
xchg
mov
and
es
es
xor
xchg
sbb
sbb
lock
push
and
dec
pushf
arpl
mov
xchg
addr16
aam
fldcw
push
arpl
mov
cmp
in
in
repz
adc
jge
lret
in
nop
std
or
push
movsl
pop
or
jns
push
lds
pop
mov
aam
xchg
sbb
ret
cs
pop
out
adc
xor
aam
mov
sarl
dec
aaa
jbe
xchg
lcall
or
repz
sahf
pop
mov
xchg
loop
lock
dec
jmp
adcb
push
mov
test
adc
arpl
pop
or
cmp
dec
cmp
sub
in
adc
mov
mov
and
pop
push
xchg
test
adc
add
jns
cmp
mov
xchg
das
inc
shlb
and
pop
or
leave
dec
mov
pop
xlat
push
adc
aam
sub
fcoms
dec
xchg
stos
outsb
aaa
out
mov
mov
jp
dec
and
arpl
jo
imul
lods
sbb
cmp
push
and
adc
adc
sti
roll
repnz
andl
out
inc
into
sbbb
or
or
and
push
loopne
and
mov
inc
jecxz
and
jno
and
push
sub
fnsave
mov
adc
scas
pop
out
into
les
aad
mov
mov
out
mov
xor
sub
enter
pop
scas
and
push
popf
cmp
or
fnstenv
lret
fnsave
and
push
sbb
data16
stc
lahf
add
mov
mov
dec
xor
repnz
pop
faddl
sub
lret
arpl
mov
push
cs
or
inc
pop
and
int3
xchg
xchg
sti
loop
add
xor
cmc
cmp
lahf
cli
jb
out
insl
mov
leave
cmpsb
cmp
imul
adc
imul
push
cmp
popa
cli
fstp
call
push
lods
push
lret
dec
push
cmp
lcall
lods
sbb
or
dec
sbb
or
cmp
in
stos
lods
dec
stos
or
xchg
xor
adc
xchg
icebp
shll
mov
sahf
mov
and
adc
rcrl
jb
bound
gs
xor
pop
mov
sahf
loope
lcall
sbb
xlat
fsubl
inc
outsl
fwait
jmp
adc
jecxz
in
mov
mov
das
rolb
fisttps
or
mov
cli
mov
mov
stos
sub
lahf
movsb
or
cs
pop
mov
or
ss
js
dec
jns
jp
cmp
in
stos
jge
mov
scas
scas
cltd
outsl
cltd
ljmp
imul
pop
mov
inc
mov
push
sub
lds
push
es
dec
xorb
leave
stos
jecxz
pop
jmp
rcrl
les
cltd
loop
lods
adc
out
jbe,pn
aam
mov
ret
lcall
cld
dec
push
add
nop/reserved
jnp
push
roll
and
mov
cltd
stc
fdivl
push
scas
fimull
shlb
jg
mov
mov
aad
inc
cmp
outsb
cli
and
addr16
sbb
mov
sarl
push
push
sbb
nop
aaa
or
fldl
aas
sbb
mov
xchg
lock
into
fidivs
or
in
lret
and
sti
xchg
mov
sti
sahf
jg
mov
imul
leave
xor
cmp
inc
cmp
cmp
push
ljmp
in
push
xchg
scas
ljmp
es
repz
jb
repnz
psadbw
dec
cmp
dec
jb
push
insl
mov
cmp
popa
popf
push
xor
lcall
out
lods
add
push
lods
add
push
mov
xchg
mov
mov
push
fsubrs
imul
testb
mov
sbb
dec
ljmp
fstpt
repz
movaps
stc
stos
cmp
cmp
popf
inc
fwait
inc
mov
das
inc
cwtl
outsl
mov
ljmp
inc
clc
insb
dec
ljmp
jno
add
sub
push
aaa
call
xchg
push
mov
cmp
pop
test
fstpl
adc
jmp
pop
insl
adc
push
jp
adc
inc
inc
ret
inc
adcb
call
clc
pop
xlat
imul
xchg
dec
stc
xchg
out
shl
cmc
jbe
clc
push
mov
imul
push
adc
popa
and
xchg
imul
xchg
in
push
add
enter
in
movsl
enter
pop
in
jb
popa
add
movsl
xor
scas
xlat
push
mov
xchg
icebp
mov
push
jb
sub
cltd
push
mov
popl
pop
xor
push
test
and
xor
mov
mov
test
test
cli
or
mov
fmulp
jg
aad
sub
pop
popa
dec
insl
stos
mov
mov
sub
imul
sbb
jnp
jb
sub
int
pop
stos
sbb
push
in
xchg
push
xchg
or
lar
push
or
pop
cld
es
sbb
and
pop
cmp
cmp
cmp
or
subl
out
pop
cwtl
inc
sub
and
adc
and
inc
ret
out
adc
adc
inc
sar
imul
lds
xor
in
mov
int3
jmp
pop
jg
gs
cmp
or
jp
sub
sbb
pop
ljmp
mov
xor
mov
sbb
pop
cwtl
movsb
mov
inc
or
xchg
cmp
popa
pop
inc
test
xor
dec
arpl
add
inc
mov
aas
mov
in
ficoms
jl
shld
lods
ja
imul
lcall
mov
ss
dec
mov
or
pop
ljmp
sbb
push
into
sbb
lret
adc
lock
lahf
or
inc
pusha
inc
adc
adc
lods
sub
mov
xchg
jmp
inc
mov
push
shl
ds
cvtps2pd
mov
into
call
bound
push
xor
fldl
jae
loope
or
push
out
sbb
sbb
lods
out
adc
fidivl
mov
ret
lods
cld
dec
fdivs
cmp
cwtl
or
jo
xor
ret
insl
jmp
int
xor
add
test
imul
pop
mov
mov
imul
jns
addr16
cmpsb
es
pop
movsl
xchg
enter
aaa
or
cmp
addr16
push
test
xor
adc
call
int3
xchg
jge
test
xorb
into
enter
mov
jne
mov
call
add
add
sub
pop
js
jmp
out
loop
jbe
jnp
movsl
add
push
cld
cmp
lahf
gs
xchg
cmp
cltd
test
sbb
xchg
icebp
mov
pushf
cmp
lods
lock
or
push
inc
cld
jno
jae
push
mov
lea
les
sub
cwtl
jae
cmp
lea
sbb
jnp
mov
cmpsl
std
hlt
mov
repz
ljmp
push
adc
call
push
sbb
enter
in
je
cmpps
adc
jo
xor
lahf
pop
or
subb
and
ret
sti
mov
push
fdiv
xor
dec
int3
pop
inc
dec
lret
pop
pop
xchg
pop
dec
mov
fisubrs
jb
cmp
xchg
pushw
or
pop
sti
stos
aad
push
mov
inc
cmp
fcmovu
adc
sub
cmc
aam
mov
xor
cmovbe
jmp
mov
mov
rol
and
in
jno
mov
inc
test
xlat
and
jo
mov
cmp
fwait
lret
movsb
test
jo
je
movsb
or
daa
sub
lods
mov
and
stos
lock
rcrl
outsb
fbld
inc
ja
mov
int3
mov
mov
loopne
cmp
pop
cmc
dec
into
mov
clc
adc
pop
repz
popa
ret
les
mov
mov
or
mov
repz
lds
mov
mov
js
mov
inc
inc
in
pop
testl
in
mov
test
shl
aad
sub
mov
cmp
xchg
push
stos
push
mov
xchg
adc
mov
add
cmp
lret
popf
sbb
adc
or
out
push
sub
jns
jne
ror
jg
adc
in
inc
aas
sbbl
sbb
cmp
sbb
stos
clc
xchg
or
inc
out
cmpsl
sub
cltd
test
xlat
in
dec
out
or
std
add
movsl
and
xchg
mov
jmp
enter
jo
mov
cld
or
je
add
jb
pop
add
sbb
xor
push
mov
xor
pop
aad
jl
push
pop
mov
jbe
cltd
and
jno
push
dec
pop
jnp
cmp
lock
rcrb
fwait
adc
or
xor
mov
add
ljmp
shlb
inc
outsl
sarl
iret
leave
ds
clc
addl
jno
sbb
adcl
dec
inc
push
xor
adc
jo
xorl
popf
xchg
mov
and
sub
pusha
mov
jnp
jne
lea
fcmovu
stos
pushf
fmull
adc
push
inc
adc
mov
or
inc
xor
and
mov
jo
clc
push
mov
cs
sbb
push
mov
movsl
mov
popa
jle
mov
xor
ret
xchg
imul
adc
dec
inc
push
xor
and
adc
stos
xchg
movsl
in
push
pop
sub
mov
fisttpll
lea
cmp
mov
dec
fmull
sarb
mov
inc
lds
andb
scas
adc
add
mov
call
cmp
sbb
mov
jmp
aaa
inc
push
test
sbb
add
mov
dec
xchg
push
mov
ja
rcrb
into
call
addr16
push
or
mov
scas
pop
inc
lock
ljmp
sub
mov
add
enter
fisubrl
inc
shrb
inc
movsb
and
push
push
pop
add
mov
movsb
repnz
enter
add
vorps
xor
andl
or
sbb
adc
push
inc
ljmp
lods
stos
sarb
aam
and
loope
cmpsl
xor
add
sbb
cmp
mov
mov
call
mov
cmp
mov
pusha
sub
jmp
mov
out
xchg
jp
sbb
out
loope
mov
js
xor
adc
sub
shr
fsub
jo
das
add
jmp
sahf
cs
fistpl
sub
lods
mov
iret
pushf
fistps
and
xchg
xor
mov
ja
or
jae
fidivl
icebp
mov
inc
push
ds
fnstenv
movsl
je
xchg
lea
fisubrs
sbb
test
xor
mov
pushf
lods
in
pop
sbb
lods
loope
or
mov
mov
adc
hlt
test
rorl
inc
ret
adc
or
inc
mov
in
cwtl
ret
in
push
inc
add
cld
mov
arpl
stc
xlat
aad
shll
pop
mov
aad
aaa
sub
jmp
repnz
or
daa
repz
mov
addl
rorl
sub
jae
or
xchg
mov
adc
in
imul
jle
popa
insb
jle
lret
cmp
aam
add
pop
add
cmp
push
mov
sahf
lret
cltd
mov
sahf
push
mov
push
cltd
aas
testl
lret
and
adc
shrb
fwait
call
test
or
pop
sbb
add
arpl
ds
xchg
sbb
jge
adc
jg
icebp
add
adc
push
fdivs
testl
inc
adcb
push
bound
pop
dec
add
imul
mov
lea
sub
pop
cmp
xchg
mov
jg
iret
cmp
cwtl
fcomi
inc
scas
out
fcomip
sbb
xchg
jns
pop
je
cmp
repnz
mov
dec
sbb
sbb
mov
sbb
aas
or
enter
cmpsl
xchg
bound
and
in
add
inc
movb
enter
push
adc
je
stos
xlat
dec
xor
sub
mov
rolb
cmc
sub
inc
pop
iret
sub
cmpsb
mov
cltd
icebp
aad
add
and
push
cld
xrelease
xor
push
xor
sbb
mov
cmc
ds
insl
mov
mov
out
bound
xor
push
aaa
mov
xchg
lods
imul
sub
mov
inc
aam
imul
lods
lods
mov
jno
movsb
jp
and
push
daa
dec
sbb
insl
cmp
mov
imul
out
mov
mov
icebp
cli
xor
mov
std
in
out
insl
xchg
sub
push
out
movsl
and
cmp
mov
jle
push
outsb
dec
fmuls
rcrl
sub
sub
into
mov
sahf
aas
movsl
adc
imul
pushl
push
xchg
fdivl
dec
not
nop
inc
cwtl
xlat
or
fldenv
push
int
or
idivl
out
push
fsub
fsubrs
cmp
mov
push
push
add
mov
test
stos
orl
xchg
lods
add
je
loop
xchg
mov
sub
addr16
vfmadd132pd
cmpsb
stc
jo
loop
and
or
lahf
outsl
bound
cmp
mov
xor
mov
scas
push
popa
rol
or
pop
mov
iret
pop
cmc
push
inc
jmp
fiadds
fcoms
mov
cli
stos
or
iret
movsb
jg
mov
outsb
xchg
cmpb
push
pop
mov
xchg
jg
loope
cs
push
adc
and
orl
jno
and
sbb
loop
insb
aaa
enter
aad
lea
dec
mov
cmc
xor
sar
add
add
inc
movl
icebp
mov
movsb
sbb
lea
cmp
stos
nop
dec
mov
sbb
inc
addr16
lods
divl
lods
sbb
push
xchg
or
pop
mov
shl
daa
push
pop
shlb
loope
int
imul
push
loop
mov
aad
aas
pop
push
mov
inc
test
mov
enter
jb
int3
xor
push
dec
pop
icebp
mov
insl
ljmp
push
jl
push
mov
pop
jns
pop
and
push
dec
sub
std
dec
mov
xor
dec
fimuls
loop
fildl
mov
sahf
cmp
roll
mov
enter
sbb
std
lret
test
repnz
negl
vpmacssww
lods
sub
clc
loop
mov
mov
xchg
stos
arpl
add
mov
sbb
gs
scas
dec
test
sub
pushf
idivl
adc
xchg
call
mov
sbb
add
js
add
inc
mov
sahf
jo
decl
mov
sbb
repz
xchg
test
dec
in
mov
mov
dec
aas
xor
mov
adc
mul
and
mov
add
int3
sbb
call
les
push
enter
das
out
outsl
sbb
xor
xor
leave
sub
pop
pop
imul
lds
xor
adc
push
sahf
pop
adc
shl
pop
or
ljmp
rorl
pop
push
push
jb
sub
les
bound
notl
scas
cmp
imull
push
pop
loopne
enter
mov
mov
inc
lods
mov
sbb
popf
push
ret
inc
ljmp
out
or
jl
or
dec
push
ja
mov
mov
lcall
inc
addb
stos
insb
cmpsb
or
into
dec
loopne
dec
sbb
add
pop
xlat
lock
decl
push
mov
notb
mov
mov
mov
xchg
les
jbe
in
pop
subl
mov
mov
mov
xchg
push
xor
push
les
shll
mov
aad
imul
sub
dec
mulb
inc
push
mov
cwtl
popf
mov
sub
add
cmp
sub
sbb
jl
jno
ljmp
mov
out
sti
adc
cmpsb
hlt
sbb
push
jnp
xchg
je
std
jecxz
int3
ret
sub
test
ljmp
cs
dec
pop
fdivl
mov
shll
daa
and
jg
push
or
inc
jb
pop
cwtl
in
in
mov
out
dec
out
mov
arpl
ss
mov
mov
lret
rcll
cltd
test
scas
lds
mov
lcall
cmpsb
push
xchg
jmp
es
idivb
cmp
mov
push
insb
addr16
add
fwait
mov
lea
pop
mov
mov
jne
mov
sbb
lcall
clc
jge
push
out
and
cmpsb
inc
jg
push
ret
jle
scas
shl
xor
lea
divl
and
xchg
cmpsb
pushf
sub
pop
cmc
insb
fcomps
or
ds
out
inc
popa
popw
cwtl
push
and
jl
pusha
fcoms
mov
mov
xchg
push
xchg
loopne
dec
xchg
ljmp
adc
jecxz
or
jns
inc
lea
rorl
out
xchg
loope
mov
les
lret
ljmp
sub
icebp
dec
push
adc
pop
pop
mov
std
xchg
lcall
fldt
jo
inc
pop
cmp
cmp
pop
outsb
push
add
mov
mov
std
dec
lahf
pop
push
jmp
in
or
pushl
loope
or
insl
xchg
add
std
clc
dec
push
add
lods
or
je
idivl
movsl
ret
cmpsl
fidivrl
xchg
pop
fldenv
fldl
jb
arpl
popa
xchg
mov
xor
jmp
cwtl
pop
push
int3
mov
mov
std
rcl
adc
test
mov
pop
cmp
pop
cwtl
sbb
xor
mov
sbb
lock
ror
enter
lret
ljmp
stc
es
inc
mov
clc
clc
push
xor
mov
mov
ficompl
and
mov
stos
movsb
mov
das
push
out
out
mov
test
aaa
repnz
lahf
mov
mov
mov
cmpb
dec
adc
sub
cmpsl
in
cmp
out
dec
push
pop
lods
xchg
les
aad
adc
jmp
movsl
fdivrl
aas
stos
gs
pop
push
and
pop
and
mov
imulb
int
pop
or
nop
pop
sahf
imul
cli
subl
pop
pop
mov
into
pop
xor
pusha
test
js
jl
fldt
aam
mov
insl
push
pop
mov
je
mov
adc
mov
push
bound
jmp
add
push
bound
loopne
or
pushf
xchg
sbb
ss
pop
int3
shl
icebp
cmp
lea
mov
aas
out
insb
lret
cmpsb
fs
cmp
xchg
arpl
dec
dec
adc
pop
ljmp
sub
lret
sbb
xchg
aam
outsb
pop
mov
mov
shll
stos
adc
inc
xor
xchg
cmc
mov
shr
repnz
push
push
jmp
pop
stos
jbe
mov
jo
inc
je
test
add
ret
sbb
cmpsl
scas
pop
bnd
test
pop
bound
mov
push
repnz
cld
mov
pusha
and
in
dec
jo
fiadds
jecxz
cmp
repz
sarl
cwtl
or
mov
mov
jge
cmp
cltd
popf
sahf
lods
aad
dec
fbstp
xchg
mov
inc
lcall
pop
loopne
jns
lret
stos
inc
test
nop
addb
clc
inc
add
fistps
or
das
stc
nop
inc
inc
clc
lret
cmp
jae
cmpsl
dec
mov
loopne
sub
add
pop
popl
test
stc
mov
add
xor
shll
or
loopne
or
pop
and
xchg
inc
in
push
pusha
cwtl
inc
push
push
stos
pop
cltd
in
xchg
xlat
or
lods
xchg
mov
cmp
icebp
sbb
mull
ja
mov
out
push
jns
jae
cwtl
mov
mov
pop
test
add
cmp
lock
xorl
in
cmc
aam
gs
mov
lea
test
jne
data16
leave
add
push
stc
adc
mov
gs
aad
outsl
jb
xor
jb
ret
fs
push
jl
inc
sub
fsubrl
xchg
or
adc
and
xor
cmpsl
xchg
gs
clc
iret
sbb
jle
fistpl
in
sub
dec
loope
sbb
bound
pushf
adc
pop
dec
or
in
xor
or
fildl
movsl
push
pop
pop
lds
ljmp
rorb
mov
notb
inc
subl
out
and
push
outsl
in
mov
sbb
in
mov
adc
cmpsl
adcl
stc
cmp
add
insl
enter
fcomi
aam
in
ja
or
cwtl
test
jl
stc
adc
dec
ss
xchg
call
jmp
fwait
push
cmp
mov
jns
jnp
jnp
adc
dec
pop
add
jnp
test
rcr
lods
push
sub
outsl
adc
dec
mov
ret
lret
fdivr
out
testl
mov
sbb
enter
push
dec
lret
je
arpl
fs
sbb
jecxz
arpl
movsb
xor
push
mov
cmpb
pop
fwait
adc
fisubrs
mov
and
lret
push
mov
lds
inc
loopne
jae
stos
pop
out
sti
ja
pop
shlb
std
lods
mov
arpl
mov
out
jno
jge
mov
mov
push
lahf
adc
aaa
repz
lret
jmp
icebp
lahf
cmp
xor
data16
outsb
lds
sub
mov
pop
xor
loopne
mov
fldt
incb
xchg
mov
test
pushf
push
inc
push
mov
loope
jle
mov
mov
jle
imul
adc
jecxz
jecxz
jg
in
in
mov
or
xchg
push
idiv
sub
or
decl
mov
je
in
rcll
cmp
and
mov
lods
ja
icebp
cmp
das
xor
in
xor
or
xorl
ss
xor
movsl
xor
test
jle
push
add
jge
mov
mov
sbb
mov
add
cs
jo
popf
std
or
leave
aad
xchg
aas
in
les
shlb
pop
cmp
lds
or
jnp
jecxz
fimull
mov
xor
sahf
push
popf
sbb
xchg
cmpsl
mov
dec
xlat
pop
cmpsb
add
es
inc
xor
pop
lcall
pop
rorl
inc
sub
fcmove
mov
pop
mov
nop
aad
icebp
add
sbbl
push
mov
jg
in
aas
mov
sub
jne
test
jp
out
jo
mov
dec
cmp
pop
icebp
in
cmp
add
outsl
je
lahf
adc
xor
jecxz
dec
popf
jle
jl
sub
out
js
imul
lret
mov
lds
pop
lods
xchg
and
rorb
xor
cwtl
inc
mov
lret
cmpsl
sub
lahf
mov
lret
in
dec
fsubs
pop
sbb
iret
push
add
in
or
or
andl
jecxz
dec
cmpsb
jg
adc
pushf
inc
dec
push
xchg
cmp
cli
stos
add
cmp
adc
push
mov
cmp
loop
jne
sbb
push
push
xlat
jp
mov
xor
inc
inc
test
loope
ja
or
iret
and
in
faddl
add
fnstsw
dec
xor
adc
les
xchg
sbb
jg
lods
outsb
out
rcr
insl
cmc
jae
or
pusha
jns
or
push
push
in
mov
enter
je
cmpsb
sbb
leave
inc
in
ret
mov
or
mov
sbb
and
mov
jb
jge
fbld
mov
fcomps
inc
fcmovnb
or
jecxz
pusha
push
test
incl
cmpsb
mov
sahf
jno
xor
pop
fbld
jno
dec
fcomi
sbb
dec
pop
xchg
xchg
loop
pop
int3
mov
mov
lock
es
or
shlb
mov
adc
shlb
and
mov
adc
in
addr16
js
mov
lods
andl
dec
or
das
and
arpl
adc
xchg
sbb
jns
stos
icebp
lds
stos
xor
outsl
icebp
inc
inc
adcl
outsl
mov
mov
ljmp
scas
out
or
pushf
xor
mov
stc
mov
mov
dec
int3
xor
lea
jo
or
cli
scas
je
xor
or
out
test
hlt
mov
adc
bound
outsb
pop
jae
loop
mov
fisttpl
orl
cmp
push
cmp
ss
mov
mov
pop
xchg
addr16
les
sub
stc
inc
dec
lds
das
bound
enter
jp
jbe
pop
xor
sub
inc
xchg
lret
lods
jge
or
mov
fcoms
xor
outsl
decl
cmp
inc
jne
pushl
mov
lods
arpl
mov
jno
and
xchg
push
fnstcw
mov
or
and
xor
jns
jo
cltd
adc
aaa
push
int
mov
fwait
or
push
repnz
into
mov
jne
adc
xchg
inc
ljmp
jmp
xchg
repnz
sub
add
cli
insl
cmp
insw
inc
sbb
sbb
or
lcall
das
jmp
ret
aas
pop
psrlq
rcll
xchg
sub
xchg
push
mov
cmp
adc
into
pop
data16
sarl
push
adc
repnz
lea
jle
stc
push
cmp
fldl
push
push
loop
subb
hlt
std
cmpsl
lahf
outsb
pusha
xor
and
and
sbb
push
mov
dec
outsl
adc
or
aad
rol
mov
aad
imul
and
fsts
inc
scas
inc
dec
adc
cmp
cmp
mov
lret
mov
cmp
xor
sbb
sbb
in
popa
das
sbb
ret
jnp
in
movsb
imul
mov
fs
movsb
dec
xchg
mov
mov
flds
js
inc
out
xor
pushf
fwait
test
test
xlat
or
lods
dec
ss
fstps
fdivs
out
fidivrl
fdivrl
xchg
fimuls
and
fidivs
mov
sbb
aad
fldl
mov
cmp
orb
xchg
int3
pop
lods
pop
scas
lret
arpl
xor
adc
cld
adc
fdivp
mov
shlb
sbb
pop
aas
imul
mov
xchg
stos
xlat
out
lods
mov
imul
ret
mov
mov
sub
or
add
xchg
cwtl
mov
mov
and
mov
outsl
pop
sub
pusha
push
or
jle
and
adc
jnp
xor
pop
sbb
aad
rcll
xchg
movsl
mov
std
cmp
xor
pop
push
jno
inc
sub
cmp
shlb
push
xor
sbb
or
cmpl
xchg
mov
mov
jb
sub
pop
insl
fisttps
decl
sbb
ss
shll
in
cmc
test
and
clc
push
sbb
enter
test
loope
adc
pop
or
adc
pop
loopne
mov
add
adc
jmp
inc
into
xchg
cld
fdivr
daa
int3
js
andb
subb
sub
push
pop
lea
int3
pop
xchg
arpl
dec
les
xchg
rcl
push
pushf
inc
pop
and
loope
add
cmp
andb
lcall
out
insb
push
push
inc
pop
jmp
or
mov
mov
or
or
ja
mov
cmp
sbb
or
mov
and
cmp
pop
lretw
cmpsl
rorb
test
add
dec
fcomi
stos
jnp
ret
addb
loope,pn
loop
xor
loopne
cmp
inc
inc
ja
or
mov
pop
jmp
jo
aad
mov
lcall
xchg
test
cmp
ror
add
lret
jmp
cli
pop
lds
insb
xorps
cmpsl
ss
jmp
popa
pop
pop
dec
in
xlat
xlat
push
push
inc
jne
jmp
xor
adc
out
jl
sbb
push
mov
gs
jle
aad
inc
fdivs
sbb
jo
stos
andb
repnz
xor
inc
add
in
cwtl
icebp
mov
adc
sarb
popf
outsl
push
lods
fmull
test
push
mov
adc
ficoms
add
loopne
sbb
ret
fistps
mov
jmp
dec
shlb
lcall
call
mov
mov
adc
addr16
js
jb
sub
pop
fdiv
or
adc
jecxz
lods
cmpsb
inc
inc
gs
movsb
push
je
dec
mov
mov
add
movsb
cli
mov
lods
mov
adc
mov
mull
cmp
movsb
imul
repz
jns
in
hlt
rcr
xchg
mov
xchg
outsb
mov
mov
mov
in
or
cli
roll
pop
iret
ret
pop
pop
push
push
xor
sbb
shrb
sbb
push
je
mov
scas
xor
pop
les
mov
adc
push
jg
adc
fadds
sub
dec
xor
loopne
xor
pop
lock
ret
cwtl
mov
jp
aam
jecxz
cltd
pop
test
in
fwait
pop
je
push
or
pop
sbbb
ljmp
stc
fdivs
inc
loopne
insb
into
cld
into
add
popf
sti
lods
ljmp
cmp
scas
push
sub
mov
addb
cmp
aam
sbb
mov
mov
lret
sahf
daa
shll
shlb
andw
shll
adc
pop
mov
ja
pop
mov
lret
adc
mov
and
mov
cmp
cmp
fisttpll
sarb
cmp
sbb
jae
adc
les
loopne
stc
or
fs
or
adc
scas
mul
cli
cmpsb
cmc
mov
ljmp
dec
addr16
jle
fnsave
sub
icebp
adc
std
xor
xchg
cmc
cli
pusha
pop
loop
arpl
addl
mov
test
repnz
cmp
in
inc
mov
scas
xor
js
xor
lock
jp
adc
and
bound
clc
icebp
mov
fsub
dec
loop
sbb
mov
test
ds
cs
jl
add
jae
xchg
in
into
pop
inc
pop
jae
add
cmpsb
sar
aad
movsl
lea
data16
ss
sbb
and
jnp
nop
in
mov
mov
adc
loopne
std
push
sub
cmpsl
pop
scas
movsl
jmp
sub
aaa
jmp
jmp
lds
sub
test
adc
in
xchg
shlb
popa
repz
push
inc
dec
xor
jnp
sub
in
loopne
data16
jl
mov
out
pop
adc
mov
xor
cmp
push
inc
sbb
cmp
push
adc
repnz
ret
mov
jg
ret
and
repz
fsts
xor
insb
xor
add
inc
xor
lock
inc
sarl
movb
idivb
jmp
shll
xchg
xchg
and
leave
dec
and
and
inc
jnp
aam
jbe
or
inc
dec
adc
dec
add
andb
pop
cmp
scas
and
mov
inc
sub
jmp
scas
push
xchg
in
ficoml
xchg
mov
push
dec
and
xor
inc
adc
lret
fsubrs
out
movsl
jns
inc
push
call
lret
push
test
imul
mov
dec
mov
lret
adc
add
add
xor
inc
push
mov
mov
pushl
cld
mov
jne
sub
or
jecxz
bts
lret
inc
shlb
and
pop
pop
neg
mov
mov
sbbb
rolb
fildll
cmp
out
lret
mov
and
sbb
xchg
or
push
sub
lahf
jnp
inc
add
in
shrl
loopne
sub
out
lcall
inc
lar
xor
xchg
iret
jne
push
sbb
cmp
mov
scas
jns
cwtl
fmuls
ljmp
mov
lret
xlat
lds
enter
scas
or
mov
bound
inc
and
aaa
mov
and
divl
popf
mov
adc
cmp
adc
outsb
dec
adc
clc
mov
lahf
sahf
fistl
cli
cltd
lods
mov
inc
and
mov
push
sbb
xor
pop
cmp
dec
cmpsb
test
mov
ja
sub
jecxz
pop
inc
sub
xlat
popf
xchg
xor
insl
xor
or
in
adc
insb
daa
push
xchg
rcrl
mov
outsb
jl
push
push
in
into
inc
cmp
in
pop
pop
mov
jge
mov
loope
lods
cmp
stos
notl
incb
push
gs
xor
xabort
sti
rcrl
scas
mov
call
push
push
insl
out
cld
scas
mov
cmp
fld
ljmp
mov
add
dec
jp
jmp
sbb
aas
inc
xor
dec
mov
les
rcrl
sub
mov
dec
jg
in
dec
add
fwait
and
mov
push
adc
bswap
cli
ficoml
scas
cmpsb
fwait
and
cld
scas
arpl
jns
lock
arpl
ds
cltd
xchg
pop
xchg
inc
or
outsb
in
mov
jae
imul
jb
outsl
fisttpll
xchg
push
pop
xchg
cmp
mov
js
daa
jnp
loope
popa
xchg
mov
cltd
mov
aam
pop
sub
mov
push
out
enter
ja
inc
xorl
arpl
out
xchg
push
ss
cmp
ret
lea
std
or
ret
ret
cmpsl
repz
sbb
inc
scas
insl
fs
fdivrs
in
out
bound
hlt
loop
test
pusha
leave
and
xchg
mov
push
movsl
int
inc
not
imul
adcl
stos
lods
mov
xor
lahf
out
cld
inc
insl
pop
ljmp
gs
or
leave
movsb
enter
push
xor
inc
jo
test
add
sbb
mov
pop
inc
stos
loopne
sbb
xor
lahf
sbbb
out
sti
mov
pushf
add
clc
pop
xor
cmp
es
pop
mov
dec
dec
sub
pop
push
jg
and
push
test
out
mov
daa
negl
xchg
pop
cmp
rcrl
add
insl
pop
xchg
enter
add
pop
mov
sub
imul
sbb
push
arpl
mov
inc
cld
push
mov
jmp
inc
or
sbb
xor
ljmp
cwtl
mov
test
push
filds
mov
shrb
and
rcl
jb
xchg
sti
or
inc
and
mov
std
call
xchg
fdivrs
push
mov
bound
dec
xchg
cs
jle
les
mov
int
add
xchg
or
mov
dec
add
stos
fisubrl
sbb
fidivs
fucomi
mov
aas
lret
pop
xor
sbb
mov
das
pusha
daa
icebp
sarb
or
cmp
addr16
push
mov
and
mov
sahf
pop
dec
jecxz
xchg
lret
sub
dec
rclb
enter
xor
cld
lcall
mov
jecxz
mov
popa
imul
iret
dec
push
imul
inc
outsb
fmuls
cltd
pop
mov
add
arpl
mov
push
stc
cmp
jg
aam
xchg
test
sbb
insl
or
sbb
lret
sbb
push
sub
iret
push
iret
add
jns
cmp
scas
cmc
cmpsb
push
push
ja
rolb
mov
pop
test
dec
mov
cwtl
sbb
imul
dec
jecxz
cwtl
jae
inc
sub
fsubs
inc
and
sbbb
outsb
ficoms
sbb
xchg
sbb
rcrl
imul
push
mov
pushf
iret
enter
clc
jb
push
and
fldcw
les
enter
xchg
test
xchg
cltd
imul
mov
push
aad
mov
add
hlt
int
rolb
aad
mov
in
jle
sbb
ljmp
mov
xor
outsl
lret
gs
scas
lret
movsl
or
adc
je
out
push
adc
inc
ds
dec
scas
dec
sbb
iret
aam
push
xchg
daa
push
jle
clc
or
push
sub
jl
or
les
ss
jmp
adc
sub
rcll
push
add
xor
dec
adc
test
sub
mov
int
loop
movsb
cmpsl
pusha
jno
sub
pop
inc
sti
push
inc
popa
gs
or
push
mov
imul
jle
push
mov
jge
sbb
jae
imul
jg
push
mov
jns
ja
lcall
add
mov
add
inc
subl
rolb
sub
dec
iret
subb
shr
in
mov
jle,pn
mov
push
and
xchg
dec
ljmp
ss
xchg
jbe
mov
and
xor
inc
sarb
jbe
lret
loop
mov
inc
cmp
fstpt
ljmp
push
sahf
inc
in
push
icebp
je
test
cwtl
lahf
inc
jns
jge
mov
or
cmpps
adc
xor
xchg
jge
xchg
cmc
inc
jp
dec
int3
lret
pusha
aaa
xchg
xchg
or
movsl
imul
pop
rcrb
cmp
pmaxub
inc
and
outsb
push
xchg
lods
in
and
add
adc
lock
outsl
ficomps
pop
cmp
pop
or
sbb
mov
add
mov
jno
and
inc
out
je
adc
fldcw
mov
popf
dec
or
jne
into
fsts
or
sbb
adc
pop
xchg
mov
lock
aaa
sbb
mov
rcrb
in
sbb
shlb
outsb
mull
outsl
cmp
xchg
pop
xorb
ret
test
mov
pop
push
mov
cli
cli
sbb
repnz
jecxz
insl
add
pop
jecxz
fistpl
mov
dec
insl
mov
mov
fsubrl
xchg
sub
pop
sbb
pusha
sti
rep
test
jmp
adc
aad
lcall
fldt
and
push
sub
dec
adc
jb
mov
testl
mov
or
cltd
or
pop
dec
out
enter
xchg
jo
rclb
cmpsl
jno
out
in
mov
xor
pusha
js
and
ss
xchg
mov
sub
lcall
xchg
mov
test
adc
pop
xchg
push
shrb
sbb
push
sahf
and
inc
stos
adc
or
sub
rorb
push
enter
es
jp
adc
out
fstps
loope
dec
clc
jp
xchg
mov
cmpsl
push
orb
movl
out
lcall
mov
adc
inc
mov
test
stos
ljmp
pop
jmp
push
pop
mov
jp
test
icebp
xchg
pop
jne
sub
fidivl
jecxz
or
pop
xchg
and
stos
inc
sub
mov
add
aam
fs
add
mov
and
xchg
and
adc
int
dec
sarl
pop
xor
push
add
nop
adc
mov
mov
scas
mov
jno
js
xorl
lret
daa
sbb
mov
cmpsb
lock
ja
repnz
mull
cmp
or
nop
mov
pop
stos
cmpsb
pop
jge
scas
cmc
cltd
divb
daa
cmp
int
fsubl
sbb
fmul
push
jae
pop
mov
lret
push
outsl
ret
mov
sbb
jle
add
out
mov
mov
pop
adc
js
out
shrl
push
pop
fs
mov
cmp
stos
sub
dec
mov
in
aas
adc
or
loope
scas
js
mov
xor
inc
jp
push
ja
adc
fsubp
push
lret
fwait
dec
sub
popl
in
int
sub
test
push
pop
lahf
xchg
int3
fistps
pop
pop
cmp
test
sub
jae
in
out
sbb
push
push
scas
je
dec
dec
test
in
aas
scas
loope
jno
insb
mov
in
dec
inc
into
push
das
xor
das
data16
call
rolb
sbb
or
mov
das
outsb
push
js
dec
cmp
arpl
cs
scas
xchg
lahf
dec
ret
fildl
pop
push
cli
pop
jecxz
stos
xchg
ret
stos
or
sti
fs
mov
jns
repz
mulb
insb
js
pop
aaa
pop
xchg
int3
shrl
imul
ret
push
push
pop
mov
cmpsl
pop
addr16
sbb
fadd
repnz
dec
mov
dec
adc
rorl
pop
sahf
cmp
lret
jne
rcr
mov
mov
and
inc
cmp
out
leave
jno
hlt
out
dec
sbb
mov
sub
fsubs
out
scas
inc
and
jge
and
cmp
cmpsl
jl
lcall
xor
dec
mov
mov
lea
sub
loopne
mov
fisttpll
or
icebp
mov
xor
xor
jbe
xor
inc
subl
jb
fidivrs
push
push
sbb
adc
jle
push
test
push
outsl
enter
leave
in
shr
push
cld
dec
or
arpl
cltd
jle
jmp
xchg
in
mov
dec
pop
mull
mov
pop
mov
test
push
jns
mov
sahf
insb
icebp
insl
xor
xchg
jne
pop
mov
inc
xchg
bound
inc
testl
fcomip
arpl
mov
sti
movsl
fcompl
das
mov
call
mov
push
test
call
iret
add
shrb
push
xor
cmp
jno
out
fcomi
xchg
mov
outsb
mov
cmc
and
xchg
dec
push
gs
stc
mov
rep
sbb
mov
adc
fwait
cwtl
cmp
mov
test
shlb
and
pop
xchg
stos
mov
lods
jb
mov
add
sub
and
enter
inc
mov
daa
sbb
xchg
mov
jne
jl
inc
fistpl
dec
testb
shrb
push
shll
repz
pop
jecxz
adc
dec
xor
mov
stc
mov
sub
or
loopne
sub
iret
shlb
xor
mov
mov
jnp
pop
mov
pusha
and
out
out
push
sti
cmpl
jp
mov
aas
push
andb
cmp
mov
cltd
pop
sbb
daa
aaa
jbe
lods
sub
sbb
mov
lock
jmp
lahf
int
and
push
mov
xchg
jno
in
sti
lret
popf
adc
push
stos
adc
xor
pop
sbb
das
jnp
pusha
sub
dec
xchg
push
rcrl
aas
dec
mov
push
pushf
xchg
pop
insb
scas
mov
pushf
mov
pop
arpl
mov
mov
lahf
out
iret
loop
inc
mov
js
jecxz
jl
aaa
cmp
into
add
xorl
dec
cmp
cli
aam
repnz
test
mov
dec
xchg
xor
cmc
in
outsl
shlb
outsl
dec
insb
xchg
mov
xor
or
push
push
push
mov
xchg
out
mov
push
push
sub
aam
imul
xlat
repnz
mov
jae
jne
movsl
pop
in
mov
or
mov
mov
adc
adc
sbb
cmc
loop
mov
cwtl
add
ja
push
or
aam
pop
adc
mov
lcall
adc
int3
aas
lock
sub
ret
or
cmp
mov
sub
and
sbb
out
cmp
orl
in
icebp
mov
mov
cmp
mov
cmp
xchg
fstpt
mov
mov
cmp
cmpw
mov
inc
nop
xchg
or
sahf
jno
ret
stos
pusha
push
xor
dec
jg
dec
mov
jb
jge
rolb
jno
fdivl
mov
je
mov
xor
and
mov
push
jecxz
mov
sub
fisttpl
fisubrl
dec
cmp
aaa
mov
js
xchg
movsb
add
pop
add
out
xor
mov
jmp
inc
std
mov
dec
mov
add
js
pop
sub
lahf
and
fdivrp
js
pop
jg
dec
or
movsl
xor
sbb
or
inc
push
je
adc
xor
and
jo
fs
repnz
fiaddl
loopne
pop
lret
nop
mov
leave
rep
pop
test
fs
push
dec
xchg
push
inc
dec
and
jge
das
addr16
in
pop
lods
inc
lods
mov
shll
xor
inc
sub
push
sub
cwtl
aam
mov
add
mov
xor
adc
imulb
pushf
mov
cmp
insb
or
jge
jae
inc
dec
and
sub
test
mov
ret
inc
jmp
pop
bound
mov
lret
pop
outsb
int
mov
call
sub
cmp
dec
mov
jmp
add
ja
dec
mov
xchg
sub
fstcw
push
enter
push
addr16
sub
push
and
xlat
jge
jmp
mov
mov
pop
cmpsl
ret
pop
sti
mov
hlt
sti
mov
mov
ja
sub
pop
mov
mov
iret
mov
sti
inc
jmp
or
pushf
pop
and
cmp
push
and
mov
adcb
lret
or
popf
adc
inc
mov
mov
xchg
stos
lds
int3
pop
enter
out
xor
and
add
ss
mov
cltd
bound
mov
sbb
xchg
cmp
sbb
repnz
es
dec
sub
clc
inc
jns
fistpl
lcall
sbb
enter
xlat
sbb
scas
push
dec
dec
inc
lods
clc
aad
add
or
adc
push
js
jg
or
xchg
es
jg
or
shll
inc
enter
imul
movsb
loope
shrb
or
fadd
in
sahf
or
es
fimuls
repnz
sarl
dec
cmpsb
xor
int3
sub
mov
xchg
bound
fistpll
push
jg
xchg
rol
loop
in
sarb
lock
cmp
rorl
jno
xor
jnp
xlat
mov
mov
adcb
scas
add
out
in
stc
stos
insl
lds
or
pop
inc
mov
sbb
movsb
pop
mov
jnp
lret
sbbl
fldl
sub
enter
lahf
jle
inc
jne
jno
ffreep
xchg
adc
out
loopne
outsl
fdivl
fistpl
sbb
mov
add
std
xchg
popf
sbb
lods
std
push
pop
ret
mov
data16
shrl
mov
lcall
mov
mov
mov
or
push
sbb
dec
jmp
addr16
adc
dec
test
sbb
insl
and
mov
or
insl
inc
pop
popl
iret
mov
adc
aam
mov
jl
aaa
aaa
out
cld
repnz
xor
pop
xchg
mov
add
add
loopne
cmp
xchg
insb
leave
js
xchg
dec
lea
sub
inc
sarl
fs
imul
mov
mov
push
push
enter
adc
mov
cmp
aad
pop
loope
dec
mov
jno
jno
inc
dec
jecxz
pop
test
dec
xchg
fwait
cs
shr
xchg
ljmp
loopne
mov
or
in
jle
imul
shl
xor
dec
xchg
out
xchg
mov
fdivrl
test
pushf
push
sarl
shll
popl
cmp
aad
inc
rolb
ret
frstor
add
ret
mov
mov
andps
scas
xchg
lock
mov
rep
sti
or
pushf
and
popa
adc
or
xchg
leave
mov
std
popa
and
in
call
mov
fadds
pop
dec
xor
int
xchg
sub
inc
iret
jg
add
gs
xchg
jmp
orl
dec
int3
adc
cli
cli
outsl
jb
push
call
xor
insl
mov
ja
adc
mov
push
dec
fists
sub
test
xchg
scas
lcall
or
rcrb
xchg
aam
cmp
lret
andl
clc
jp
ds
add
clc
mull
ja
mov
rol
sbb
pop
test
jno
inc
es
and
xor
adc
sbb
aad
pop
into
in
lea
sbb
lock
adc
mov
mov
lods
sbb
fistl
inc
or
mov
push
sarb
fstpt
mov
mov
xlat
fwait
jbe
mov
adc
mov
dec
xor
mov
into
test
test
cmp
stos
repz
sahf
aad
xor
jp
fsubrs
inc
mov
aad
shl
out
scas
mov
dec
inc
jecxz
sbb
jp
xlat
iret
mov
pop
cmc
repnz
sbb
popa
xchg
lods
mov
and
and
fdivl
rcr
mov
sbb
arpl
dec
pop
enter
ret
push
icebp
ret
xor
daa
jbe
jnp
inc
inc
mov
bnd
test
pop
push
cwtl
adc
jo
sti
shll
pop
int3
mov
mov
vpsrld
outsb
add
xor
stc
push
lret
push
mov
js
sti
jo
dec
mov
mov
xor
loop
mov
mov
mov
ss
lock
push
jmp
mov
xor
sub
and
jbe
pop
fsubp
push
jbe
repnz
icebp
nop
rorl
arpl
mov
in
ds
sub
leave
shrl
sbb
and
xchg
push
stc
in
aas
and
or
inc
add
fnstenv
xlat
lods
scas
mov
jmp
mov
and
pusha
xchg
pop
movsl
inc
ret
dec
ret
in
pop
sub
cltd
sub
mov
shl
jae
outsb
mov
fbld
int
out
cmpsl
lcall
int
mov
jecxz
int
imul
loopne
xlat
rolb
cs
adc
stc
pop
lret
hlt
inc
sbb
jno
and
icebp
dec
jp
add
clc
in
stc
mov
repz
push
es
dec
sub
ss
pop
aam
and
jnp
xchg
cmp
xchg
lea
jecxz
popa
test
lods
aas
push
jns
xor
push
pop
aad
dec
movsb
rcrl
xchg
cmc
pop
or
fisubl
arpl
jb
mov
pop
or
stc
lods
lret
or
sbbb
cmp
add
ljmp
mov
es
mov
push
adc
sbb
arpl
aad
fdivs
dec
ficoml
or
jno
dec
jbe
arpl
xor
test
cs
sub
aas
clc
push
pop
lret
dec
dec
and
aaa
sub
xchg
push
jle
insl
bound
cmp
iret
outsb
in
leave
orb
hlt
cmpsb
ret
pop
aam
mov
cmp
xchg
dec
and
or
inc
or
adc
xchg
aas
sbb
adc
add
adc
jne
outsl
lahf
sub
push
mov
cmp
add
mov
int3
in
adc
ss
movsl
or
sub
push
cmpsb
inc
dec
push
movsb
push
push
pop
lret
xor
ret
leave
dec
stos
push
xchg
int
imulb
mov
inc
stc
pop
cmpsb
mov
iret
sbb
and
out
cmc
inc
dec
mov
ja
fwait
xchg
stc
fcmovnbe
loopne
adc
inc
jno
adc
test
pop
cmp
shll
sbb
shl
dec
test
push
sbb
lock
push
or
fcoms
cwtl
fmull
std
jo
ljmp
mov
mov
dec
jp
inc
or
dec
stos
jnp
adc
fists
mov
sub
inc
xor
repnz
mov
push
ljmp
call
pop
or
test
mov
mov
dec
xchg
ret
cli
insb
imul
mov
aas
lds
sub
adc
in
adc
fsts
jns
xlat
xor
mov
les
mov
rolb
cmpsl
dec
xchg
jle
jle
adc
jns
xor
insl
rorb
sub
jp
cs
imul
pop
or
dec
mov
lcall
test
jnp
jne
out
aad
aas
mov
push
rcl
pusha
out
cmc
pop
pop
inc
pop
pop
test
stc
push
mov
jle
push
mov
fdivrp
mov
sub
divl
fs
popa
push
push
sahf
ss
arpl
mov
mov
call
pop
or
jo
adc
push
mov
mov
dec
inc
in
rcl
or
into
lds
imul
pop
mov
aam
lret
jp
into
sub
lret
jbe,pt
push
lcall
fildl
push
nop
ja
pop
stos
enter
jg
test
mov
add
sbb
mov
adc
and
push
stc
ficoms
es
jle
lahf
clc
add
pop
ret
add
outsl
add
or
adc
cltd
out
pop
cmp
sub
stc
adc
fdivs
mov
stos
les
mov
and
dec
std
test
cs
cmp
imull
adc
out
jecxz
or
xchg
es
adc
psrld
aad
mov
cmc
or
inc
pop
mov
mov
adc
jbe
int3
mov
fcomps
pop
lock
xchg
scas
in
gs
mov
data16
vmovlps
pop
loopne
int
xchg
stc
rolb
mov
mov
repnz
insl
pop
mov
inc
push
orl
aam
hlt
arpl
dec
aad
cwtl
and
loopne
out
pop
push
sub
cmc
mull
pop
and
sahf
and
and
dec
popf
cld
sub
mov
in
push
rorl
push
mov
in
xchg
cs
jge
rclb
mov
xchg
mov
sti
and
xchg
pop
lock
pop
mov
inc
mov
subl
add
orl
pop
adc
xchg
incb
xor
xor
and
clc
imul
sti
pop
sub
insb
sub
cwtl
daa
lock
loop
loope
clc
repnz
outsb
jb
or
mov
jo
lahf
sarl
scas
add
inc
inc
or
jns
mov
xchg
jno
cwtl
fidivrl
mov
pop
xchg
xlat
pop
shrl
shll
push
jns
cmc
xlat
dec
divps
xor
add
jb
pop
imul
mov
mov
lret
cmp
adc
sbb
in
out
movsb
push
and
cmp
sub
mov
dec
fstpl
mov
stc
lods
jbe
xor
jmp
jmp
sbb
clc
cld
int
mov
mov
mov
cmp
sbb
mov
jnp
or
sub
movl
insb
mov
xchg
xchg
in
movsl
loope
lret
jne
es
push
mov
arpl
and
pop
pop
cld
sbb
push
mov
pop
loope
push
ja
jns
outsb
fnstsw
pushf
cld
xchg
jns
push
int3
push
jl
or
add
xor
add
adc
sbb
xchg
mov
shrb
push
and
daa
aas
cmp
inc
pop
ja
dec
in
les
mov
push
cltd
mov
nop
mov
icebp
jb
cld
ss
jmp
inc
nop
push
cmp
bnd
fdivp
push
pop
mov
lods
mov
lahf
js
sbb
lret
dec
push
ss
pop
push
sbb
pand
push
mov
and
ss
sbb
lds
insl
rclb
mov
or
cmp
dec
test
lods
lea
pop
and
xchg
cwtl
xchg
dec
test
bnd
mov
daa
divl
enter
test
scas
push
jo
into
jb
fcmovnu
notb
shlb
addl
lahf
test
in
add
cmp
jb
es
and
push
inc
and
push
call
pop
pop
cmp
addr16
or
ffreep
jnp
jne
xor
lods
pop
xchg
or
xchg
jecxz
xor
iret
dec
shl
mov
jecxz
pop
jae
mov
jge
push
cld
inc
aas
mov
in
mov
scas
jno
fnstenv
sub
mov
adc
xor
scas
push
pusha
mov
xor
sbb
inc
loope
mov
mov
dec
and
ja
mov
pop
add
dec
xlat
add
dec
and
cmpsl
push
jg
aas
dec
test
xorl
mov
adc
or
aas
sahf
mov
push
xchg
jmp
mov
add
push
sbb
and
sbb
jmp
pop
mov
rcll
push
inc
adc
cld
in
inc
cld
pop
rorl
mov
xchg
arpl
int3
jge
lret
aam
pop
xchg
dec
mov
push
popa
push
loope
lods
pop
cmp
test
adc
xor
mov
sub
rcl
cmpsb
jge
push
add
cs
mov
fwait
xor
or
xchg
sub
lea
xchg
shll
pop
les
outsb
push
xchg
add
js
push
loopne
mov
idivl
xchg
call
lds
lods
mov
jle
sub
add
mov
rorb
ljmp
push
push
and
pop
jo
sbb
cmp
aaa
dec
repz
sbb
add
adc
ljmp
lods
push
add
mov
jb
sub
mov
sbb
jg
push
test
daa
sbb
xor
sub
jp
mov
mov
add
inc
push
add
lea
imul
mov
ret
in
mov
lods
add
sti
ret
mov
cmpsl
mov
gs
and
loopne
movsl
lcall
xor
inc
jns
fldl
mov
cmpsb
stos
cltd
into
add
out
jo
mov
repnz
shll
inc
ljmp
mov
mov
sub
repz
xor
imul
test
pop
out
lock
sbb
sti
fiaddl
out
ret
ja
addr16
pushf
lods
mov
lods
mov
sub
test
xor
adc
repnz
add
ret
scas
jmp
lret
test
jb
push
lcall
jo
int
sbb
fs
test
mov
xchg
loopne
add
inc
sbb
imul
sbb
rolb
es
and
inc
addb
xchg
or
repnz
jne
rcrl
stc
xchg
push
xlat
mov
loopne
cmpsb
mov
testb
ret
int
jb
adc
mov
mov
and
lahf
and
sarl
lahf
push
push
jmp
cld
xchg
sbb
test
lock
repz
fcmovne
xor
pop
adc
mov
out
insl
cli
rorl
xchg
out
inc
jl
je
pusha
sub
stc
imul
fstps
fs
les
data16
fadd
les
adc
out
popf
fldl
pop
lds
lret
jg
pop
int
jecxz
cmp
out
mov
jge
mov
int
fdivs
out
xchg
add
lds
or
lea
sub
add
jno
mulb
shrl
xchg
or
xor
sub
sahf
and
dec
xchg
shrl
iret
aas
mov
movsb
push
nop
cmpsb
jmp
sub
mov
and
adc
test
inc
pushl
cli
xor
inc
leave
cs
sbb
sub
cltd
or
sub
adc
dec
xchg
test
loope
or
repnz
add
push
imul
test
mov
pop
pop
jmp
pop
scas
ljmp
clc
xchg
addr16
inc
test
and
popf
addl
sbb
lret
mov
cld
mov
fstl
sti
pop
dec
mov
ret
sub
hlt
icebp
lock
jne
and
cmp
dec
mov
dec
pusha
ret
int3
repz
lret
and
adc
push
out
and
shrl
je
popf
push
inc
outsb
in
es
nop
sbb
jp
repnz
data16
ljmp
clc
push
adc
add
scas
and
push
mov
mov
sbb
cmp
int3
data16
orl
push
test
jno
imul
jge
insl
jo
lods
mov
fidivl
dec
sub
inc
ret
fisttpl
cmp
adc
daa
cs
cmp
fisubl
daa
test
cld
rorl
pop
sub
test
adc
inc
or
pushf
cmp
mov
dec
cli
xchg
iret
cwtl
and
pop
adc
lea
xchg
stos
lahf
mov
call
mov
shr
stc
or
cmp
andb
sub
out
dec
insl
sub
jbe
and
dec
and
shlb
shll
cmp
in
xlat
hlt
bound
es
cmp
jp
shll
clc
pop
push
jo
outsb
mov
fisubl
ret
xchg
stos
xchg
sahf
jnp
cmpsl
in
loop
jecxz
lret
dec
imul
mov
inc
mov
cmp
inc
jle
mov
add
cmp
daa
out
and
jb
xchg
jmp
aad
and
inc
dec
or
data16
aad
jl
test
lcall
pop
aad
xchg
ljmp
mov
sbb
jg
test
std
mov
jno
insb
lods
clc
repz
inc
xchg
cmp
sub
push
fildl
fmuls
movsb
push
xchg
jmp
imul
xlat
jg
sub
mov
addl
cmpsb
xchg
mov
loop
repz
mov
imul
pushl
dec
xor
addr16
out
rorl
xor
inc
sub
sub
leave
loopne
dec
aad
jno
rorb
add
test
sti
cmpsl
sbb
in
sti
mov
dec
xchg
rorb
adc
rcrb
cmpsb
push
sub
inc
jg
push
lahf
jbe
outsb
or
ret
out
mov
mov
and
xchg
push
xor
pop
xchg
aaa
mov
shll
xor
lret
dec
daa
push
gs
cmp
movsb
arpl
adc
aas
mov
in
and
cmp
gs
enter
ds
orb
mov
popf
mov
sbb
adc
pop
test
push
add
jle
jo
iret
jno
hlt
sahf
insl
into
dec
xor
rclb
movsl
jns
cld
or
leave
cmp
pop
add
ficoms
push
adc
data16
out
jle
add
pop
sub
xchg
mov
test
cmp
js
jo
inc
jne
and
lock
or
test
mov
xchg
jne
dec
inc
ret
pop
xchg
cmpsl
test
adc
lock
jl
sub
add
mov
jb
push
mov
cli
das
mov
push
repz
push
arpl
iret
shr
xchg
daa
inc
dec
push
jbe
mov
mov
adc
sub
int
sbb
push
out
push
stos
add
int3
or
aas
cs
mov
scas
push
mov
int3
incb
mov
dec
inc
dec
fsub
push
arpl
addr16
in
pop
and
repz
pop
jp
push
adc
out
test
cmp
fs
mov
mov
sbb
xchg
push
jmp
lret
in
hlt
fs
fildl
xchg
cld
xchg
dec
jns
mov
mov
adc
popa
sub
push
call
mov
aad
xchg
scas
push
aad
popa
scas
or
jg
scas
inc
jmp
aas
cmpsb
loopne
mov
nop
in
sbb
inc
cwtl
test
xchg
jb
in
mov
inc
addb
loop
movsl
es
imul
ficoml
inc
or
data16
cmp
or
imul
ret
push
inc
or
addr16
jns
orl
xchg
xorb
dec
xlat
pop
jge
ret
dec
shlb
mov
push
out
add
cmc
out
je
addl
fdivs
cmpb
nop
jl
movsb
lock
mov
cmp
push
out
sub
int3
out
or
push
sbb
scas
mov
push
sub
aas
xor
jmp
shrb
pop
out
push
les
dec
call
stos
lret
add
push
sbb
sbb
add
mov
dec
push
mov
into
ret
dec
pop
jecxz
call
pop
stos
popf
idivl
out
mov
gs
les
and
mov
idivb
cmp
add
cmp
lods
sub
enter
mov
inc
pop
lret
lcall
aam
mov
sbb
pop
sub
or
adc
ds
rclb
lret
adc
mov
or
scas
sbb
and
mov
pop
mov
pop
sbb
push
add
sar
cli
cmp
pop
add
outsl
jae
shll
inc
loop
les
inc
jbe
push
testb
or
pop
or
nop
into
lods
add
cs
js
sbb
pusha
pop
sub
sbb
test
loop
jae
pushf
cwtl
lea
pop
mov
dec
adc
cmpsl
es
push
mov
push
push
sbb
mov
fucomi
dec
push
or
addl
ja
popf
test
push
hlt
es
and
inc
inc
add
and
cld
xchg
mov
mov
and
outsl
add
clc
roll
testl
jnp
mov
mov
cmpsb
mov
inc
cltd
orl
add
pop
sarb
adc
sbb
push
lret
xor
mov
popa
xor
pop
add
and
popa
cmp
les
cmp
cs
addr16
mov
ja
js
mov
out
and
inc
leave
outsb
cmp
mov
sbb
cld
cmp
adc
sub
popa
mov
sarl
dec
xchg
jb
add
or
inc
jne
jge
stos
jecxz
push
enter
mov
sub
cmp
mov
invlpg
mov
or
push
lret
in
loop
mov
bound
test
push
push
inc
sti
hlt
repz
sub
fisttps
mov
jns
sub
push
add
cmc
in
cmpsl
jg
scas
push
fisubrl
in
sub
sub
dec
in
cmp
or
insb
cmpsb
ss
enter
in
iret
pop
lea
xchg
sbb
ja
arpl
leave
jle
xlat
movsb
push
adc
icebp
fcomip
sti
jnp
cmp
mov
mov
push
cmpsl
dec
ret
cmpsb
push
add
fucom
pop
xor
sub
sbb
imulb
popf
mov
mov
pop
rcr
mov
leave
cmp
mov
jg
and
xorl
cmpb
mov
xchg
pushf
in
inc
nop
pop
call
jbe
dec
fiadds
inc
lcall
fisubl
pop
mov
js
add
and
mov
mov
cmp
mov
fwait
dec
stc
cmp
xchg
pop
pop
sub
jns
sub
imul
sahf
push
faddl
cmp
xor
iret
jmp
jl
add
fcomi
mov
call
call
pop
push
ret
or
mov
xchg
mov
test
mov
jmp
mov
out
pop
xor
decb
fistl
xor
mulb
fldl2t
dec
sarl
mov
leave
mov
iret
iret
mov
repnz
cmpsb
popf
mov
lods
imul
cmp
les
int
xchg
gs
inc
lea
inc
popa
adc
cmc
dec
xchg
cli
dec
cmp
jae
fs
jmp
js
daa
enter
inc
push
sub
test
push
xchg
pop
pop
push
movsb
std
sbb
cmp
and
int
mov
lds
and
iret
dec
mov
sbb
cmp
sbb
movsl
and
sub
xchg
aas
das
fdivs
flds
push
jl
mov
inc
cmp
movsl
movsb
push
lahf
cli
out
or
cmp
stos
hlt
in
mov
mov
push
fstl
and
notl
and
push
repnz
sub
bound
mov
xchg
lds
movsb
adc
xchg
sub
mov
inc
stos
cltd
stos
adc
pop
movl
pop
mov
jnp
aas
movsb
fisubl
push
bound
rclb
aam
add
xor
hlt
subb
jl
sub
mov
or
imul
loop
cli
inc
in
in
or
aaa
sti
das
sbb
cmc
popa
insb
jnp
mov
mov
cld
nop
repnz
pop
cmp
clc
or
movsb
pop
ja
out
test
push
mov
add
xchg
jno
enter
add
add
rcl
ss
push
test
mov
push
mov
scas
cmpl
pusha
mov
pop
add
fstpl
inc
mov
mov
adc
mov
shll
dec
stc
add
sub
pop
mov
cwtl
push
adc
pop
movsb
popfw
cld
lret
enter
insb
data16
shlb
out
dec
lds
insl
test
jl
lret
inc
mov
cmp
insl
xor
mov
pop
or
icebp
pop
pushf
nop
rcl
mov
mov
push
pop
xchg
outsl
jne
xrelease
mov
add
iret
xchg
jo
sbb
pop
push
shrl
enter
pop
out
sub
pop
add
nop
cmc
fdivrl
cmpsl
cmpsb
cmp
in
sub
je
ret
imul
repnz
in
mov
add
stos
pushf
je
pop
sbb
sub
mov
mov
xor
add
add
pop
fs
aaa
push
xchg
sti
pusha
push
lahf
mov
sub
pop
sub
mov
shrl
cmp
lcall
aam
adc
xor
jns
pop
outsb
mov
mov
jnp
mov
xchg
cmp
jg
lods
mov
dec
arpl
outsb
push
rcll
mov
mov
and
popf
push
xchg
int3
xor
test
aaa
aad
xchg
loop
inc
mov
clc
and
inc
push
sahf
aam
fidivs
pop
sub
sbb
push
pusha
push
xor
data16
push
dec
daa
insb
int
daa
int
mov
lods
mov
dec
adc
ja
fidivrs
pop
sbb
mov
push
or
shlb
stos
nop
adc
xchg
cwtl
push
push
sub
dec
test
test
lods
call
and
add
mov
out
sarl
std
hlt
test
add
xor
mov
in
lret
adc
dec
mov
sahf
fcmovnb
jp
mov
cs
jb
or
dec
push
sbb
ret
jae
rcrb
popa
sbb
ja
imul
fmul
imul
loop
sbb
inc
and
xlat
ss
mov
or
fwait
jb
sub
cmpsb
inc
sub
out
push
xor
or
inc
pushf
mov
or
loopne
aam
cmp
or
add
daa
test
xor
pop
popa
stos
jo
pop
pop
xlat
sub
enter
fs
cmp
mov
xchg
add
lods
sub
sbb
dec
jae
js
rol
mov
mov
iret
mov
imul
push
lock
lret
aad
movsl
fwait
adc
std
leave
and
lret
push
jo
popf
mov
les
pop
dec
ja
out
dec
xchg
sub
jbe
or
test
inc
stos
cmpsl
mov
jl
push
push
jmp
add
out
mov
or
sub
xlat
aaa
cmpsb
cs
ljmp
clc
test
aaa
jmp
std
mov
test
lret
or
cli
pop
mov
aad
rcrl
outsl
lods
in
sbb
cmp
enter
stos
shrb
jae
fs
daa
jne
je
addr16
aam
test
sbb
inc
jb
in
outsl
mov
lahf
std
seta
and
add
inc
loop
sbb
popf
inc
jg
cli
out
inc
lret
bound
cs
pop
in
lcall
jge
movsb
mov
push
mov
xor
insw
daa
sub
test
bound
dec
inc
lahf
leave
into
push
dec
and
cltd
cltd
xchg
test
and
icebp
pushw
shrb
stc
std
inc
movsl
popa
or
push
mov
dec
jl
andb
maxps
adcb
in
push
adc
into
add
jbe
subl
mov
xchg
dec
es
cmp
fisubrl
lret
lds
inc
mov
test
test
aas
push
loopne
bound
adc
and
pushf
rorl
pushf
popf
push
or
test
cwtl
xchg
add
push
or
pusha
pop
frstor
in
cli
imul
repnz
not
pop
pop
rclb
arpl
mov
xchg
mov
mov
mov
popa
push
xchg
mov
dec
mov
cmpsl
pop
sub
aas
jmp
xor
cltd
outsl
movsl
xchg
pop
addb
or
mov
jecxz
add
js
jmp
inc
aam
aaa
cmp
sbb
repz
leave
ret
mov
pop
adc
sub
cmp
cmp
and
jae
mov
add
dec
into
xor
cmp
push
out
or
sbb
fbld
jno
bound
out
dec
and
nop
mov
test
pop
sub
xor
shrb
xor
jb
sub
push
call
push
mov
clc
loop
mov
pop
xchg
mov
loop
je
ret
sbb
sub
cwtl
cmp
shrb
mov
sub
aaa
xor
out
jbe
mov
mov
out
sub
push
push
cwtl
push
ret
stc
sub
adc
lock
cmpsb
push
xchg
rolb
out
adc
or
sti
mov
cmp
mov
outsb
jge
hlt
pop
push
cmp
rcrb
scas
jno
ret
fisubrs
jbe
jge
setge
and
sti
or
fcomps
inc
jmp
mov
scas
out
ret
mov
sub
pop
or
insl
dec
incb
rcll
adc
arpl
movsl
pop
adc
fsin
push
cmp
push
xchg
fisttps
mov
outsb
xchg
movsb
mov
xor
cmpsl
int3
cltd
or
push
xchg
xor
mov
add
cld
jno
mov
stos
lock
sub
ret
xlat
or
and
add
xchg
mov
stos
dec
jno
call
xchg
xlat
rorl
inc
sub
icebp
out
push
pop
pusha
in
mov
aaa
in
cmpsb
rol
rcr
mov
repnz
xchg
mov
insb
stos
xchg
pusha
inc
xlat
hlt
ret
xchg
xchg
loope
jns
adc
mov
push
xor
aam
cmp
and
sub
mov
cmpsl
call
cmpsb
xchg
push
ret
or
or
test
sti
inc
icebp
add
push
push
xchg
mov
outsb
push
dec
dec
cmp
adc
shl
ficompl
mov
in
mov
imulb
jge
loop
mov
aas
add
dec
or
loope
mov
and
daa
in
daa
loop
xchg
test
movsb
push
jmp
inc
jbe
sbb
xchg
stos
sub
iret
cmp
and
cwtl
lcall
inc
subl
push
cmp
popf
push
movsl
call
popa
dec
out
lea
push
or
mov
in
aas
nop
push
in
mov
mov
or
in
hlt
nop
sbb
pop
or
fnstcw
sub
mov
mov
cmp
mov
test
leave
xor
jns
mov
xchg
sub
adc
push
stc
push
call
pop
cmp
es
out
mov
inc
sahf
movsl
mov
daa
mov
sub
imul
pop
notb
lret
ja
push
out
ss
push
fsubs
xor
or
subb
dec
mov
and
rcrb
mov
cmpsl
cmp
decl
nop
adc
rdmsr
push
loopne
push
add
cmp
arpl
mov
jmp
xchg
jl
sub
lret
jae
push
aad
mov
push
push
pusha
aad
sbb
xchg
xor
lock
sbb
cmp
pop
push
aaa
aas
test
mov
dec
addl
cmp
in
aaa
xchg
mov
xchg
out
push
fs
add
and
cmp
mov
pop
jg
pop
mov
xor
pop
int
ss
shl
and
dec
jl
in
lock
popf
inc
loopne
or
adc
sbb
out
adc
or
sbb
mov
and
mov
and
fsubrl
xor
xchg
push
inc
xchg
jmp
jp
mov
movsl
idivb
or
lock
add
pop
mov
push
fistl
push
dec
sti
pop
std
test
out
leave
aad
add
inc
es
shr
hlt
mov
dec
jbe
and
push
clc
jp
push
cmp
fs
stos
cmp
mov
and
insl
sti
xlat
push
mov
shll
adc
stc
icebp
roll
loope
xchg
and
inc
lret
rclb
lods
inc
js
lcall
add
into
xor
sub
cmpsb
sti
lret
mov
and
das
out
xor
test
push
and
lods
sti
add
fisubrl
mov
fs
sbb
sbb
lahf
mov
into
xchg
movsl
jmp
cwtl
jmp
cmp
jge
add
in
imulb
xor
adc
aaa
cmp
xchg
push
push
test
jp
outsb
lock
mov
add
or
jae
stc
in
in
and
stos
or
sbb
jns
adc
jge
push
add
xor
jecxz
dec
es
rcrb
mov
inc
jae
sub
adcb
jecxz
gs
or
push
testl
imul
testl
dec
push
xor
sti
add
xchg
fildl
xchg
jp
add
pop
scas
pop
dec
subl
imul
jno
lods
scas
inc
mov
xchg
sub
ds
adc
mov
pop
sbb
pop
adc
push
xchg
xor
pusha
movsl
pop
push
cmp
fdivrs
jae
jg
dec
test
std
inc
les
int3
shl
imul
shrl
and
sar
sbb
adc
cmp
xlat
out
ljmp
lcall
roll
das
loope
xor
and
fldcw
addr16
test
fldt
push
mov
xor
push
and
jmp
push
sub
xchg
push
out
fstpl
lcall
jne
cwtl
ja
xor
out
xchg
pop
pushf
cld
sub
dec
clc
jnp
jbe
jo
out
shrb
mov
stos
daa
out
mov
xchg
pusha
icebp
out
lret
dec
mov
cmp
mov
repnz
adc
sbb
sarl
pop
rolb
repz
arpl
xchg
or
cs
sub
sub
test
mov
adc
and
mov
pop
lea
xchg
std
lahf
xchg
call
lds
std
enter
test
sahf
ja
mov
jne
push
jb
ret
and
lret
in
sarb
mov
pop
inc
mov
lcall
cwtl
inc
sbb
scas
jb
repz
add
fidivs
dec
xor
xchg
aam
and
cmc
add
lret
sahf
lea
cmc
pop
fadds
push
test
cmpsb
xor
mov
outsl
lds
insb
mul
into
sub
mov
decl
fwait
push
sbb
sarb
std
nop
lret
jl
xchg
push
cmp
mov
mov
fld
mov
in
loope
push
xchg
outsl
imul
add
arpl
or
and
lret
jae
mov
sub
fcompl
pop
out
dec
pop
sti
iret
hlt
bound
jo
jle
xchg
arpl
testl
in
int
or
sub
or
jmp
popf
scas
cld
jns
xchg
cmc
fisubrs
xchg
inc
pop
cmp
cs
fldenv
shlb
fcompl
mov
fisttpll
leave
add
sub
mov
lock
push
leave
pop
roll
lahf
fadds
push
mov
das
aaa
movsb
fldl
sbb
arpl
iret
ret
and
dec
in
cmp
es
cmpsb
or
dec
gs
jge
fucomip
mov
mov
fisttpl
aas
add
out
inc
cli
repnz
lds
push
mov
push
movsl
nop
sarb
sbb
int3
lods
xlat
cmp
js
mov
jmp
testb
dec
test
in
scas
xlat
je
loope
mov
mov
add
bound
lahf
ss
das
jns
inc
push
in
stos
add
loop
call
or
cmp
and
sbb
aaa
and
jnp
scas
pushf
mov
lea
cwtl
ret
xchg
pop
ja
sub
sbb
sbb
js
inc
pop
fistps
adc
int3
lcall
mov
mov
push
cli
inc
mov
mov
pushf
push
cmp
push
lcall
or
stos
test
ret
out
push
pop
subb
jns
push
sbb
int
das
sub
popa
and
push
xor
icebp
in
das
testl
loopne
sti
add
stos
pop
test
loope
mov
and
aaa
loope
jl
add
sbb
xlat
mov
xor
ljmp
xchg
and
pop
sub
push
cs
mov
cmp
mov
insb
lds
mov
mov
jge
jae
adc
insl
lea
scas
das
out
push
jnp
ss
pop
cwtl
and
cmp
loope
mov
jbe
cwtl
dec
fisttps
xchg
sbb
push
loop
add
cli
jbe
add
inc
pop
test
sti
jnp
sbb
call
xor
pushl
fidivl
clc
int3
lret
scas
sbb
aam
daa
xchg
cmpsl
sub
add
cmp
fadd
shlb
dec
stos
shrl
shl
jb
pop
inc
out
xor
cmp
cs
xchg
sub
test
sbb
sti
sub
scas
pop
pop
addr16
xchg
sub
xor
mov
push
cmpsb
dec
les
sub
lcall
jno
push
push
inc
das
add
int
mov
mov
push
sbb
sub
int
push
ss
out
xlat
xchg
insb
adc
mov
addr16
jmp
cltd
repz
mov
enter
xchg
scas
aad
cmp
pusha
sub
mov
sub
xor
sbb
or
nop
fcom
cmp
dec
addl
popa
stos
jne
cmp
add
add
lods
and
add
insl
aaa
mov
clc
aaa
dec
rorb
xor
fisubs
sub
mov
sbb
push
mov
push
leave
dec
das
mov
and
xchg
fstps
push
xchg
xchg
mov
mov
push
jmp
push
out
adc
ss
push
mov
sub
xchg
fstpl
loope
insl
rclb
sbb
add
int
rorl
sub
adc
out
mov
cmp
xchg
xorb
jl
xlat
jbe
cli
ja
and
fcmove
leave
mov
popa
icebp
mov
cwtl
xchg
insl
lcall
mov
mov
adc
idivb
enter
dec
add
pop
fsubrl
xchg
mov
loope
push
inc
popf
inc
xchg
xlat
push
push
jecxz
dec
sub
add
clc
or
out
inc
dec
or
out
jp
sahf
xchg
movsl
filds
pop
jne
faddl
jae
or
mov
fdivl
ficoms
fisubrs
or
inc
into
cmp
repnz
adc
shrl
out
mov
lds
sub
jmp
addr16
dec
mov
inc
dec
lret
push
add
lods
es
jnp
add
sbb
mov
jb
data16
lods
push
mov
mov
test
mov
hlt
scas
adc
inc
bound
mov
ja
cmp
sub
mov
push
rcrb
dec
aam
divl
std
je
scas
pop
xchg
mov
jecxz
lcall
mov
jo
cltd
iret
idivl
add
out
stos
xchg
hlt
popa
or
cmp
sbbl
nop
into
mov
xor
pop
jl
lea
jno
dec
add
dec
cmp
xlat
xrstor
xchg
shll
adc
sbb
fisttpl
push
sbb
xor
adc
mov
std
cwtl
inc
les
mov
imul
gs
pop
pop
ret
or
dec
push
test
mov
mov
sub
dec
push
nop
jae
xchg
adc
test
das
jb
in
shl
emms
notb
ljmp
cmp
movsb
test
int
and
add
adc
stc
pop
sbb
stc
sub
lea
or
in
cmpsb
fcomps
inc
xchg
loopne
mov
xor
test
push
popa
loop
lods
cmp
js
sub
dec
out
pop
sub
or
stc
cmp
pusha
push
sbb
rcr
mov
pop
jae
imul
lret
testl
sub
lds
divb
add
add
mov
jl
or
jno
pop
cmc
jno
jnp
shrl
sbb
mov
ret
decl
pushf
cmp
mov
push
jle
lret
clc
lock
std
arpl
aaa
pusha
xchg
ret
mov
insb
fimull
mov
sbb
in
fstl
inc
push
sahf
scas
adc
sarb
loop
inc
shrl
or
fs
xchg
sbb
or
push
and
and
rcr
jge
pop
xor
adc
pushf
pusha
int
mov
andl
je
mov
inc
xchg
inc
dec
lret
lods
xlat
pop
xchg
xchg
mov
jl
push
mov
aad
cmp
std
xor
sub
pop
mov
es
or
mov
lcall
data16
pusha
pop
test
icebp
cmpsl
pop
or
jg
inc
xchg
pop
sbb
adc
jmp
das
cmpl
add
mov
jg
mov
les
jg
lret
enter
xchg
movsl
fs
cli
ljmp
scas
pop
sub
rorl
stos
rolb
pop
loop
fcomps
mov
out
jecxz
stc
je
in
pop
pop
dec
sub
mov
arpl
or
in
mov
into
aas
mov
jno
mov
outsl
bound
jns
fs
xchg
ja
and
add
mov
sar
std
mov
scas
push
inc
cmp
loope
xchg
sub
sti
push
mov
pop
jb
gs
cmp
mov
jne
decl
movsl
push
mov
scas
push
xchg
inc
ja
mov
loope
jle
addb
xchg
xor
mov
sarb
push
scas
add
mov
push
push
jecxz
and
mov
jmp
xor
cwtl
pop
test
stc
cli
cmp
dec
jne
lret
imul
cld
das
fildll
sahf
pusha
gs
inc
imul
cmc
mov
cmp
mov
jo
fs
or
push
idivb
pop
xor
popf
loopnew
add
xorb
cs
mov
and
ficompl
dec
out
inc
andl
xchg
loop
add
jg
add
jl
jae
mov
fs
cs
aam
sub
xor
jno
lods
fwait
inc
xor
mov
outsl
adc
aam
cmp
pcmpgtb
stos
leave
mov
stc
andl
jnp
xlat
push
push
xor
rorl
orb
adc
data16
jno
pop
loope
adc
mov
pusha
gs
mov
jbe
xchg
sbb
cmpsl
push
lcall
test
mov
popf
stc
lret
test
inc
jns
xor
out
icebp
lods
cmp
mov
mov
mov
frstor
aad
rcl
fstps
inc
rolb
pop
mov
push
jns
sti
mov
pusha
push
les
scas
sbb
inc
test
push
and
xor
in
adc
adc
das
push
cmc
fucomp
cld
xor
or
bound
iret
pop
in
or
xlat
fstpt
loope
pop
incl
fmull
push
lret
jmp
push
mov
dec
cld
test
gs
pop
cmc
jne
jmp
lret
leave
pop
pop
push
inc
or
out
les
mov
lods
push
jmp
lods
cmp
lcall
jl
rorb
in
jo
cmpb
stos
adc
push
inc
adc
lret
push
mov
daa
cmpsb
aam
outsl
sbb
bound
adc
rcrb
sete
outsb
push
xorl
lcall
cmp
dec
xchg
push
sbb
test
cwtl
vpcomuw
imul
cld
pop
jb
push
push
test
leave
push
shr
mov
sub
test
pop
xor
das
ret
negl
sbb
mov
sub
lret
mov
out
fdivrl
lahf
gs
pop
bt
sbb
jbe
xchg
stos
in
sub
adc
cmp
xor
stos
or
and
jns
loopne
cs
or
hlt
push
inc
nop
push
negl
imul
xchg
mov
push
and
dec
cmc
das
mov
xor
pop
enter
dec
shrl
ret
in
sbb
cmp
cli
sti
pop
pop
out
xor
mov
in
pop
incb
sti
dec
shll
ds
mov
add
xchg
push
pop
mull
pop
imul
add
scas
int
cmp
pop
hlt
inc
mov
out
clc
jns
rcl
mov
mov
add
stos
push
clc
add
mov
mov
jle
pop
inc
add
fildl
inc
cmp
test
mov
popf
or
dec
or
ret
cmp
push
inc
cmp
in
xchg
mov
push
mov
pop
sub
ljmp
adc
jo
mov
dec
test
jge
push
add
jno
in
push
adcb
test
xchg
dec
fildl
sub
lods
subl
cwtl
xor
sbb
xchg
test
pushf
cltd
imul
fs
cmpsb
pop
or
inc
pop
in
adc
lcall
xchg
movsb
and
ljmp
je
sub
push
and
push
inc
fadd
inc
pop
aad
mov
xlat
inc
mov
xor
mov
pop
fidivs
push
jae
rorb
xchg
shlb
push
dec
ficomps
adc
mov
mov
add
inc
pop
lock
inc
popf
mov
lods
fisubrs
fldenv
mov
lahf
sub
sub
xchg
je
adc
jb
shl
hlt
or
pop
nop
xchg
add
push
mov
push
sti
push
push
movsb
mov
arpl
sub
repnz
push
inc
adc
mov
test
xor
push
inc
xchg
clc
aas
out
loopne
dec
jns
lods
in
subb
push
cld
mov
and
es
sti
mov
xchg
inc
cmp
jmp
sahf
mov
push
add
cltd
mov
outsl
cli
fcomp
shll
push
add
out
ret
in
dec
inc
cli
mov
jae
sub
and
cmpsb
pop
mov
aam
stos
mov
test
push
daa
jp
imull
xchg
test
sbb
push
das
push
hlt
je
jne
mov
push
push
std
dec
ret
xchg
add
push
out
add
xchg
mov
mov
out
scas
in
lret
out
jge,pn
shrl
lods
loope
leave
add
mov
lret
roll
push
push
jbe
xchg
in
and
mov
lret
ds
test
iret
cmp
push
jp
stos
ljmp
aas
loopne
xor
mov
xor
sub
jbe
insl
dec
sub
sbb
xchg
mov
repnz
and
pop
jno
add
cltd
jno
testl
push
out
jmp
mov
mov
sbb
inc
lahf
sarb
lcall
sbbl
jge
adc
js
mov
mov
sbbb
mov
dec
pop
pop
hlt
or
mov
add
xor
test
dec
and
and
sbb
int3
mov
icebp
xorb
pusha
sub
cmp
mov
sahf
int
cmp
stos
movsl
push
jnp
stos
push
sub
cmpsl
and
and
push
or
in
pop
xlat
mov
pop
cmp
aad
mov
sub
jne
pop
mov
xchg
int
sbb
mov
xchg
or
dec
lods
xor
ret
dec
xor
popf
lea
push
mov
es
push
dec
repnz
cs
xlat
out
loop
and
sbb
mov
adc
sbb
push
or
in
mov
imul
sbb
pop
sub
xchg
mov
hlt
mov
mov
outsl
mov
inc
dec
or
neg
insl
mov
lahf
movsb
mov
xchg
sti
push
gs
lods
orl
xor
xor
bound
mov
mov
mov
test
std
insb
pop
fnstenv
xor
or
lods
mov
mov
sub
fimull
insl
fimuls
sub
mov
xor
out
mov
loope
subps
jbe
cld
push
int
adc
in
push
bswap
cmovle
mov
mov
jp
and
push
ljmp
jne
movntq
push
sahf
adc
lea
jbe
out
mov
sbb
dec
inc
dec
aam
or
gs
adc
jb
js
lret
enter
mov
ja
outsb
fisubrs
cmp
ja
adc
loope
mov
cs
jae
mov
fadds
pop
lods
mov
jl
movsl
inc
arpl
pop
push
stc
xchg
iret
fidivs
popf
call
gs
lods
fs
or
sub
cltd
out
inc
addb
stc
sbb
add
iret
aam
mov
je
cld
std
and
rolb
jns
xchg
nopl
outsb
cmp
aad
and
push
xchg
inc
sbb
mov
addb
mov
sub
sub
rcrl
adc
jns
insl
jns
and
sub
das
cmpsb
sbb
sbbb
stos
cmpsl
das
or
pavgb
scas
cmp
or
out
stc
leave
fisttpll
ror
sub
sbb
sbb
fdivrl
ficomps
xchg
andl
dec
punpckhwd
dec
cmp
and
mov
mov
cmpsb
jnp
mov
sub
dec
push
nop
jae
outsl
mov
jae
xchg
in
sub
aad
fisubrl
push
push
mov
sub
mov
inc
mov
gs
fildll
add
lret
jle
adc
inc
leave
inc
push
add
cmpsl
test
pop
jns
inc
hlt
pushf
bound
aam
add
jmp
push
adc
ficoms
ret
je
ljmp
pusha
cmp
shrb
dec
sarb
xchg
xchg
xor
shll
mov
xchg
mov
arpl
xchg
or
push
jmp
inc
in
pop
fists
cli
aad
ja
mov
xchg
bound
dec
or
divb
cmpsb
iret
cltd
dec
out
es
sub
push
mov
repz
mov
jnp
cwtl
call
sti
mov
insb
insl
xor
or
mov
jb
fwait
or
enter
sahf
pop
xor
cmp
clc
dec
in
and
xor
mov
hlt
fsts
mov
jns
sbb
into
cmp
std
or
pop
mov
xor
fistpl
xchg
out
fisttpll
dec
sub
add
mov
flds
jo
aaa
push
js
popa
fxch
js
in
xchg
cmp
js
sub
mov
sub
add
test
mov
sub
sbb
mov
jge
cltd
mov
add
sub
add
and
adc
adc
jl
mov
mov
jp
add
xor
sbb
imul
movsl
iret
aad
push
sub
mov
in
jne
adc
and
daa
jo
pop
adc
js
fsub
add
push
sbb
and
jae
repz
push
icebp
or
sbb
fimull
jp
cwtl
popa
int3
sbb
pop
and
sbb
lods
iret
es
mov
mov
pop
das
adc
loop
sub
xchg
xor
jns
lods
imul
popf
orb
adc
fbld
jo
loopne
pop
lret
lahf
mov
xor
inc
sar
jnp
pop
sbbl
mov
es
inc
lahf
push
sbb
movsl
addl
xlat
mov
ret
add
cmp
fs
loopne
cmc
mov
xor
fs
jmp
mov
lret
ja
sub
or
scas
loopne
and
add
aam
test
imul
or
and
cmpsb
jbe
pop
xchg
stos
divb
cmpsl
lea
mov
fnsave
lods
inc
scas
sub
lret
push
pop
pushf
loopne
inc
stos
fsubrs
or
fiadds
cli
aam
scas
movsl
leave
cli
mov
pop
and
sub
scas
sti
sbb
std
mov
sbb
addr16
jae
jg
pop
imul
mov
xlat
push
sbb
sub
and
pushf
dec
jmp
movsb
daa
jb
mov
mov
loop
fisubrs
adc
jae
add
pop
mov
loopne
pop
sbb
imul
test
add
xor
pop
jo
data16
sub
aaa
jge
fisubrs
loopne
sub
cld
jle
lret
out
paddb
push
leave
aam
data16
pop
push
pop
jg
jae
scas
test
pop
sub
cli
mov
mull
mov
pop
lahf
cmp
mov
scas
adc
js
sub
out
sub
pop
jns
clc
jno
test
push
shrl
addr16
lods
pop
lcall
mov
sbb
cmp
in
push
push
fs
incb
ror
ja
push
sbb
rcll
mov
mov
jge
orb
jno
cmpsb
sub
lcall
cmp
hlt
fcmovne
inc
or
movsb
int3
cmp
imul
xchg
dec
loop
addb
xchg
fimuls
push
out
jp
sbb
bound
or
mov
and
adc
sub
and
fcom
pop
fildll
mov
jl
fwait
push
cmp
cmp
mov
int
outsb
inc
jne
dec
cmp
ds
xchg
sub
arpl
sbb
xchg
in
dec
stos
out
test
jo
lea
mov
inc
sbb
dec
arpl
mov
push
mov
sarb
fucomi
sub
imul
pop
cld
out
sbb
leave
or
cld
lds
push
loope
cmc
sbb
testb
aas
mov
stos
popa
xor
or
test
jo
movsl
sub
push
xor
adcl
mov
xchg
sti
mov
outsl
or
dec
cmp
dec
call
push
and
out
push
stos
push
jns
sahf
andl
cmp
push
xchg
and
jmp
pop
adc
mov
clc
arpl
push
xor
dec
push
lds
cmp
cld
add
pop
inc
aaa
push
imulb
mov
data16
xlat
movsl
mov
dec
jle
sub
popf
sub
gs
in
mov
mov
aaa
adc
add
cmpps
push
test
cmp
jb
mov
mov
lea
xor
mov
scas
arpl
sub
sub
loop
push
pusha
sti
pop
mov
movsb
sub
das
pop
pop
insl
dec
dec
test
rclb
push
out
das
scas
dec
or
sub
dec
mov
xor
ds
mov
push
mov
or
cmpsl
xchg
add
in
call
imul
mov
xor
mov
stos
pop
pop
ljmp
jecxz
mov
in
or
sbbl
lret
and
aam
adc
icebp
mov
ljmp
xchg
mov
jle
test
or
and
mov
cs
or
out
jp
fstl
jge
inc
mov
pop
roll
push
test
sub
repz
push
mov
and
mov
pushl
jno
xchg
mov
rcrl
mov
jno
sti
mov
int
test
stos
add
and
mov
in
and
cmp
stc
hlt
mov
inc
pop
fidivrl
loope
jp
pop
mov
mov
xchg
adc
fwait
mov
movsl
outsb
repz
in
inc
loope
mov
fcoms
iret
das
decl
addr16
cmp
xchg
hlt
out
fimull
push
arpl
and
in
jl
les
push
sbb
shlb
jnp
shll
xor
xor
xchg
rdmsr
pop
lods
popa
jb
roll
cmp
jns
or
int3
lret
or
lcall
lods
and
lods
loopne
pushf
out
scas
xchg
push
xchg
sbb
sub
cld
inc
test
cwtl
jbe
out
aam
or
loope
ja
minps
jge
sti
dec
ljmp
rclb
leave
pop
push
movsb
xor
out
fbld
push
pop
nop
popf
movsb
jg
rcll
and
fwait
into
dec
sub
cli
xchg
cmp
shlb
loopne
cmpb
sub
xchg
bound
jae
shrl
xchg
test
jle
pop
pop
adc
jecxz
sbb
sub
pop
mov
pop
cld
mov
push
sbb
cmp
pushf
and
or
xor
pusha
pop
psrad
mov
ss
and
mov
cld
cmp
cltd
ds
out
int3
nop
sbb
sub
fimull
lea
es
fisubrl
cltd
mov
mov
rcll
add
test
mov
xor
mov
push
and
je
out
xorb
out
lods
jo
in
xchg
ljmp
cmp
call
xor
loope
mov
or
pop
push
dec
lret
xchg
leave
icebp
fsubl
outsb
xorl
mov
in
stos
orl
add
shrl
or
cs
mov
arpl
mov
rcrb
mov
js
repnz
test
mov
push
lcall
popa
rcr
jp
or
aam
enter
cmp
dec
adcb
or
or
scas
iret
aaa
divl
or
loopne
arpl
dec
insb
mov
add
pop
cli
ds
cmp
mov
add
push
loop
in
mov
aaa
call
sub
pusha
rolb
pusha
or
inc
sbb
fdivs
aas
and
subb
add
adc
inc
add
and
push
aam
outsl
insl
push
pop
iret
popf
jg
mov
cltd
xchg
call
cmp
in
leave
packssdw
xchg
fistl
cmp
sbb
lock
xor
inc
call
adc
cmp
stos
in
in
add
mov
and
sbb
xor
add
pusha
xor
push
or
lret
or
rsqrtps
jg
cmp
cwtl
inc
xor
popf
sbb
lods
pushf
pop
loop
cmpsb
inc
sbb
arpl
cmpsb
fmul
mov
icebp
xor
mov
sbb
push
rorl
cmp
sbb
test
out
lret
ss
xor
sbb
adc
pop
lcall
pop
jne
je
shlb
inc
mov
push
cmpsl
aad
popf
mov
cmpsb
scas
shrb
insb
or
ss
pop
sub
cmc
push
mov
jns
jecxz
pop
jae
in
sbb
stos
mov
sbb
adc
xchg
movsl
mov
inc
sub
fistpll
pop
pop
add
daa
dec
mov
add
lods
ss
add
push
pushf
sbbb
and
adc
pop
cmpsl
add
repnz
xchg
mov
inc
xor
fisubrl
xchg
mov
in
shll
push
scas
mov
outsb
pop
mov
arpl
nop
sbb
and
ljmp
in
arpl
and
or
mov
sar
es
ds
mov
fistpll
and
sbb
in
mov
cmp
sbb
pop
cmp
insl
xchg
cmp
jbe
xor
movsl
sahf
jne
dec
arpl
cmp
xor
call
mov
iret
addr16
hlt
shrl
push
fistl
xor
dec
xchg
add
cmp
lret
int
fistps
mov
loope
fdivrl
mov
cs
nop
aam
mov
pushf
push
enter
gs
sbb
fistps
jb
enter
dec
sub
repz
mov
jecxz
out
inc
pop
mov
mov
and
je
scas
dec
cmp
out
push
sbbb
add
cmp
pop
lahf
cli
and
scas
test
and
push
sub
pop
test
movsb
pop
cld
jno
and
inc
xchg
pop
std
jae
push
in
mov
mov
mov
mov
xor
mov
jecxz
clc
fs
xchg
jg
mov
mov
jae
dec
jb
das
xor
outsl
fstp
or
cmpl
push
popf
pop
test
outsl
rol
push
repz
shrb
cli
test
cli
stos
mov
or
mov
fwait
dec
repz
dec
cmp
push
repnz
cmp
pushf
or
insl
and
pop
pop
and
mov
repnz
leave
sbb
push
and
sub
fst
jmp
sbbl
js
adc
jg
mov
and
pop
arpl
shrl
nop
test
sti
test
mov
ds
xor
add
in
rcrl
out
push
cmpsl
sbb
mov
mov
orl
int
sbb
mov
out
gs
cmp
sbb
sti
xchg
test
add
add
lret
mov
iret
mov
data16
fwait
pop
adcb
and
ficompl
jae
in
les
jle
test
push
bts
push
jl
je
cmp
sub
and
fstpl
loop
push
or
rorl
insb
jg
sub
mov
fmull
repz
insb
dec
ret
adc
imul
flds
jecxz
adc
cs
test
xchg
xchg
pop
jp
xlat
ficoml
aad
adc
mov
mov
xchg
subl
and
dec
mov
mov
xchg
or
in
addb
xchg
mov
inc
pop
outsl
cmc
in
sbb
lds
mov
enter
ljmp
in
push
lcall
in
inc
mov
mov
jmp
outsb
cwtl
push
adc
stc
bts
div
inc
mov
mov
movb
pop
mov
dec
lea
jo
rclb
lahf
cmp
fstl
sub
repnz
out
and
cmp
test
into
push
lret
inc
fucom
out
pop
fs
fldcw
fdivp
sbb
aad
imul
xor
movsb
insl
andb
fcoml
fcompl
xor
xor
sub
clc
ror
sbb
into
or
jl
adc
sbb
dec
xchg
insb
aaa
out
pop
sarl
cmp
stos
add
fimuls
das
inc
dec
orb
aad
push
sbb
push
xchg
ja
xchg
inc
stos
rorl
rorb
nop
scas
mov
or
out
inc
mov
dec
adc
xor
fidivs
ja
scas
pop
pop
cmpl
push
and
ds
xchg
enter
ds
and
xor
or
sbbl
std
dec
cwtl
push
ss
sbb
xor
cli
lods
mov
fld
scas
call
roll
in
mov
add
lea
cmp
push
fmuls
imul
loop
ds
pusha
mov
and
shl
ficompl
les
inc
mov
cmp
std
sbb
xchg
insb
daa
out
dec
push
mov
adc
shll
fwait
and
aaa
or
push
dec
enter
xchg
std
fs
or
in
ljmp
jge
sbb
lcall
mov
sbb
xchg
push
dec
push
filds
cmc
outsl
xlat
jl
xor
lret
sbb
or
repz
jmp
jo
jmp
nop
sbb
insl
leave
adc
jle
popf
cwtl
cmp
dec
mov
sahf
and
icebp
mov
js
mov
adc
mov
adc
loopne
shrl
and
or
test
std
jne
jb
xchg
and
int3
shld
and
dec
popf
subb
std
in
jns
ja
sub
cmp
jbe
cmp
ror
xchg
mov
add
mov
nop
adc
pop
mov
addl
lret
insl
dec
inc
mov
adc
movsb
mov
mov
mov
inc
jnp
xor
xchg
outsb
push
sti
jecxz
lea
sbb
aas
loopne
cmp
hlt
shr
lea
xlat
jmp
dec
test
mov
mov
sbb
fstps
rcpps
loopne
jmp
dec
loope
or
xor
mov
dec
adc
je
add
scas
repz
es
xchg
pop
rorb
sbb
les
inc
inc
xchg
or
mov
jecxz
cmpsl
arpl
js
je
pop
xchg
xchg
jo
bound
cmpsl
push
jnp
outsb
std
imul
push
pushf
adc
xor
mov
not
nop
pop
push
sub
scas
mov
or
sbb
sub
mov
insb
or
sub
pop
jns
lods
sub
mov
mov
mov
ds
mov
aaa
dec
push
xor
rcll
or
mov
push
shll
xchg
push
outsl
testb
dec
stc
rcrl
add
test
mov
adc
scas
add
sub
sbb
cmpsb
xchg
rcrb
sbb
insl
add
aam
mov
jnp
jp
xor
mov
es
movsb
mov
jbe
cwtl
xchg
int
inc
movsb
xor
loopne
mov
aam
jne
sub
cmp
xchg
xor
jo
shrb
jns
int
call
dec
cmp
mov
mov
mov
mov
lahf
dec
jg
jns
es
mov
pushf
or
ja
pop
mov
lret
clc
mov
call
xorl
xchg
push
or
xchg
push
sub
dec
fldl2t
out
and
call
adc
lds
lcall
mov
xchg
test
mov
adc
mov
mov
lock
daa
leave
out
inc
outsl
clc
data16
and
sbb
inc
push
dec
nop
mov
lock
pop
loop
xor
shrb
or
imul
aaa
push
cmp
mov
repz
cmp
inc
js
leave
fs
ret
add
xchg
shrl
dec
enter
inc
or
fnstenv
dec
enter
jmp
sub
mov
mov
ja
jae
xor
out
stos
lcall
mov
mov
mov
stos
movsl
in
nop
adc
icebp
orb
fmull
ds
sub
mov
mov
aaa
ljmp
inc
and
loope
push
aas
cmpsl
cltd
dec
imul
xchg
out
mov
sbb
ret
adc
push
cmp
fdivrl
cmc
mov
out
stos
in
jp
test
jns
push
imul
xchg
fdivrs
hlt
mov
leave
and
cs
mov
nop
outsb
scas
jmp
jmp
mov
lret
sub
mov
repz
lret
into
cwtl
pusha
push
jmp
test
add
adc
cmpb
iret
clc
and
and
and
out
sub
pop
cs
ret
sub
sarb
xor
jbe
add
std
cmpsb
outsb
mov
sub
test
scas
out
lds
mov
mull
cmp
js
pop
xchg
mov
xor
in
rep
test
in
outsl
mov
imul
pop
or
vpmacsdqh
push
sbb
push
scas
mov
inc
sub
sysret
sub
adc
daa
out
push
push
popf
inc
adc
inc
ss
adc
outsl
inc
cmp
dec
mov
inc
loope
imul
jle
inc
js
xor
dec
mov
andb
sbb
in
popa
outsb
add
cmp
dec
sbb
mov
pop
pop
movb
pushf
shlb
daa
xor
lock
add
fmuls
mov
addl
out
cmp
inc
pop
les
int3
pop
sbb
test
lret
mov
rorb
push
out
out
in
loopne
sub
fwait
push
sub
or
int3
adc
out
cs
jmp
loope
adc
sub
sbb
xor
xor
cld
pusha
out
enter
fstpt
mov
pop
xchg
xchg
mov
jle
push
cmp
shl
aad
lods
and
xchg
and
in
sub
adc
cmp
dec
jg
dec
jbe,pt
ljmp
sbb
scas
mov
mov
sub
xchg
jge
xor
mov
mov
into
aaa
inc
adc
mov
and
gs
cmp
cld
iret
aas
xchg
fiadds
add
cmp
inc
xchg
in
mov
sbb
push
sbb
and
shrl
push
push
lods
out
mov
in
sahf
or
sub
mov
je
mov
ljmp
sub
pop
mov
int
mov
mov
xchg
adc
xchg
pop
in
or
popa
pop
push
sub
push
ja
push
popa
adc
imul
dec
sub
ljmp
sub
ret
ja
dec
fwait
outsb
sti
push
or
ret
mov
sub
es
push
jle
loop
lret
insb
pop
sub
inc
or
xor
ja
pushf
aam
roll
add
sbb
mov
xor
dec
xchg
push
sub
data16
mov
or
pop
cmp
dec
sbb
sub
cmp
lret
xor
inc
adc
mov
xchg
std
cmpsl
push
popf
mov
pushf
adc
aaa
loop
addr16
push
jmp
adc
fnsave
test
stos
jg
pusha
insl
cmpsb
adc
mov
das
pop
insb
mov
roll
jbe
cs
adc
insl
adc
jmp
ret
in
pop
roll
add
repz
push
fdivrs
fldl
iret
mov
pop
cmp
pop
loopne
add
outsb
adc
ficoml
dec
sbb
or
xchg
sahf
lcall
je
and
and
mov
sub
out
pushf
or
or
test
mov
jecxz
inc
jns
fs
lcall
loop
test
rclb
cmp
push
mov
jge
fistl
dec
pop
adc
std
jl
xor
and
lcall
sbb
stos
in
add
jns
pop
dec
mov
pop
stos
adc
fildll
insl
dec
loope
dec
mov
lds
cwtl
jecxz,pt
cmp
es
in
jg,pn
jecxz
seto
mov
popa
test
les
out
pop
pusha
and
pop
pop
sub
rep
sbb
inc
xchg
bound
adc
sbb
gs
xchg
cmp
fs
ss
pushf
fcomps
mov
and
lock
ds
push
imul
cmpsb
bound
sub
sbb
push
sub
int3
in
sub
sub
pop
xor
jb
loope
fldl
xchg
sbb
dec
test
ljmp
xor
lock
pop
stos
test
and
mov
fldenv
mov
ds
jbe
out
jo
jl
stos
mov
add
inc
mov
jge
aad
pop
repnz
add
dec
repz
dec
je
test
loopne
mov
jnp
scas
sbb
mov
jle
lcall
in
xchg
subl
aam
out
filds
je
test
outsl
outsb
xor
cmp
stos
add
loopne
mov
cld
mov
mov
xchg
push
pusha
push
jmp
adc
mov
imul
inc
imul
fstl
test
in
sub
push
lret
stos
fs
mov
xorb
inc
add
jge
push
imulb
push
lret
xor
sub
addb
outsb
lods
pop
or
mov
mov
fsubrs
or
out
adc
push
into
aas
nop
mov
sti
cmp
mov
or
mov
sbb
cmp
fst
adc
xchg
and
mov
clc
mov
mov
add
dec
mov
sbb
add
inc
cmpsb
jb
rcrl
cmp
adc
test
jl
stos
out
sbb
rorb
xlat
lret
in
lods
push
pop
add
and
dec
neg
lcall
out
pop
addb
push
not
insb
push
ret
mov
les
mov
dec
addb
into
aas
cmp
add
lods
or
xor
out
mov
gs
pop
inc
lods
cmp
jo
xchg
and
cmpsb
add
sub
imul
pop
mov
mov
inc
and
jns
imul
mov
jmp
sub
and
flds
jp
sub
sub
pop
dec
or
je
mov
aas
mov
push
add
sahf
fbld
sbb
cs
xorl
inc
xchg
mov
push
push
sub
test
xchg
insb
cs
xchg
cld
mov
jno
leave
jg
out
pop
push
inc
pop
nop
pop
stc
arpl
inc
popa
cmp
imul
test
cltd
les
and
push
fld
xorb
in
dec
inc
insl
inc
aad
je
jno
hlt
xchg
jg
pushf
into
cmp
cmpl
rorb
into
or
cmp
cmp
push
js
lea
mov
pushf
in
inc
sti
pop
je
and
lods
int
mov
adc
sti
dec
xor
int3
cmp
in
pop
xor
inc
outsl
movsl
cmpsl
sub
les
stc
xchg
pop
xor
mov
sbb
fidivrs
fidivrs
imul
mov
jb
fprem1
dec
in
rorb
sti
sahf
sbb
aas
mov
fisubs
add
jg
fwait
incb
sub
cmc
xchg
daa
pushf
xchg
int
or
dec
xchg
cmpl
cmc
aaa
mov
dec
iret
add
icebp
adc
enter
mov
imul
mov
jo
and
dec
je
ficoml
les
into
mov
adc
fsub
insb
fdivrl
dec
mov
jb
dec
xorb
jle
cmpsb
fwait
aas
lea
ficompl
xchg
ret
out
sbb
cmpsb
aas
mov
push
or
add
xor
jmp
lock
xor
mov
movsl
mov
jae
lahf
dec
push
clc
sbb
gs
cmpb
sbb
ja
jmp
mov
lods
fdivrl
clc
add
repz
inc
pop
flds
cltd
inc
pop
adc
mov
mov
push
add
jle
xor
cmp
mov
mov
mov
fistl
xchg
shll
xchg
adc
and
push
inc
lods
push
adc
mov
out
dec
call
add
add
aaa
dec
add
jmp
sahf
aas
aas
aas
aas
outsl
pop
mov
add
add
sub
push
push
push
pop
pop
pop
add
pop
mov
pop
pop
pop
mov
push
jmp
mov
mov
xorb
loop
mov
jmp
nop
nop
mov
jmp
mov
nop
nop
nop
nop
mov
mov
add
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
jmp
pusha
call
jmp
push
ret
call
jmp
mov
add
.byte
.byte
