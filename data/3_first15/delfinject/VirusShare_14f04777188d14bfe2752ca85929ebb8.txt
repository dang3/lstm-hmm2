push
loop
sbb
push
pop
mov
jge
mov
jns
add
push
cmp
cmp
addr16
js
fisttpll
push
mov
sbb
ljmp
repnz
pop
es
stos
daa
push
hlt
xlat
adc
test
pop
nop
sub
or
mov
addr16
outsl
push
rcll
add
dec
fisttps
mov
scas
addl
dec
jecxz
push
xlat
pop
daa
gs
mov
andb
pop
outsb
stos
shr
push
lods
jno
adc
sub
lods
icebp
test
pop
fiaddl
adc
inc
jo,pn
push
jno
fistpl
pusha
mov
adc
cld
mov
sub
or
or
cmpsl
mov
test
inc
push
mov
mov
aas
pushf
movsb
xchg
mov
mov
xor
ja
repnz
push
and
std
adc
das
inc
shr
cmp
dec
in
outsl
lcall
inc
lods
add
mov
cmpsb
pop
clc
jns
addl
mov
cmpsl
dec
mov
pop
cwtl
hlt
and
fadds
pushl
or
pop
jecxz
and
push
push
clc
mov
push
or
mov
mov
pop
cmp
stc
pop
push
addr16
rclb
lahf
pushf
mov
mov
enter
imul
adc
mov
nop
std
and
inc
jbe
mov
mov
fwait
sub
pop
bound
lods
stos
jecxz
jo
adc
inc
cmp
push
sub
adc
out
pop
pop
xor
push
cmpsl
int
mov
sub
mov
leave
shlb
js
sbb
in
inc
ret
pop
and
loopne
fldl
das
lock
fidivrl
jecxz
popf
stos
sub
ss
xor
in
jl
dec
sbb
mov
cmc
std
repz
rcrb
cwtl
mov
pop
pop
adc
adc
fstpt
sub
jg
mov
mov
cmc
xchg
dec
jmp
xchg
sub
pop
pop
das
out
push
int3
popf
xchg
stos
xor
push
push
mov
sub
sub
mov
adc
push
leave
js
lret
mov
jns
fbstp
pop
mov
mov
ret
xchg
fsts
and
push
inc
test
push
je
mov
stos
jl
hlt
pop
sbb
call
cwtl
adc
inc
stos
push
ficomps
mov
add
test
imul
push
stos
out
sbb
negb
cmp
imul
clc
xchg
ja
ja
sbb
sub
ja
stos
xchg
test
adc
ja
inc
jns
fstpl
push
inc
mov
xlat
cmpsl
aam
pop
pop
mov
adc
enter
adc
dec
iret
psubd
pushf
xchg
push
push
pop
push
fsubrl
stos
sub
jns
aaa
push
adc
bound
popw
inc
jae
fimuls
mov
test
lret
add
jle
or
fstp
mov
jbe
lahf
jmp
hlt
test
clc
xchg
mov
ljmp
lahf
xchg
pop
mov
jge
fldl
jge
dec
jp
pop
fs
pop
mov
gs
enter
test
stc
and
mov
xor
popf
lcall
outsb
xlat
cmpb
xchg
cmc
pop
fs
divl
push
mov
pusha
pop
sbb
cmp
in
sbb
mov
filds
cmc
push
sbb
or
jl
xor
ja
push
push
and
movsb
xor
lret
or
push
inc
jp
sbb
mov
pop
adc
popa
adc
lods
test
or
add
jae
leave
movsl
sbb
and
mov
sti
pop
stos
adc
fs
adc
call
mov
scas
adc
jp
cmpsb
pop
or
xchg
sub
ljmp
jne
fcompl
sbb
pmuludq
sbb
dec
inc
addr16
aam
ljmp
push
cwtl
fisttpl
push
mov
mov
mov
cld
dec
lds
int3
add
out
aas
jecxz
mov
out
bound
call
xchg
pop
push
add
ljmp
pop
sti
mov
inc
push
inc
inc
fimull
xchg
pop
or
or
pop
out
dec
dec
jne
push
int
fisubl
cmp
inc
cli
add
or
imulb
test
push
sbb
sti
mov
popa
mov
ja
xor
ja
push
push
xlat
popf
lock
outsl
lods
pop
nop
je
or
dec
sbb
repz
ss
and
sbb
jl
jnp
mov
xchg
xchg
mov
pop
cmp
pop
call
aad
and
sahf
pop
in
xor
mov
push
inc
les
jp
data16
stos
jno
mov
and
lds
out
pop
jno
jmp
bound
outsl
pop
aas
mov
adc
test
xchg
stc
pop
cmp
or
aam
lods
fs
ja
jge
pop
jno
cli
rclb
arpl
inc
pop
sti
xor
sub
mov
push
outsl
sbb
cmpsb
add
mov
push
mov
into
aas
je
sbb
jne
imul
push
mov
xlat
xchg
stc
bound
jl
rolb
out
pop
push
ja
push
xlat
cwtl
xorl
call
xor
inc
add
sub
ljmp
dec
ror
mov
adc
inc
into
je
cmp
inc
shlb
lret
mov
jno
ss
loopne
aad
xchg
test
loopne
pushf
cli
sub
pop
dec
movsb
stc
push
cmpl
sbb
push
push
stos
stc
aam
sbb
mov
push
stos
daa
cmp
fdivl
inc
lds
in
mov
scas
xchg
leave
jo
aam
pop
sti
es
ljmp
fcoms
shlb
pop
fstpl
push
jecxz
mov
cmp
adc
pop
in
lcall
in
aam
and
test
lcall
mov
clc
xor
mov
jne
std
fwait
jno
pop
jg
inc
rcr
rclb
stos
aam
sbb
test
hlt
call
inc
adcl
aaa
inc
pop
push
aam
stos
leave
aam
dec
cwtl
push
insb
inc
sbb
push
mov
out
mov
shrl
clc
jecxz
in
cmpsl
ret
push
adc
mov
loop
andl
faddl
jle
pop
xor
test
iret
ret
test
pushf
push
popa
add
scas
iret
aaa
popf
mull
add
test
test
sbb
jo
pop
jle
sub
pop
mov
aam
loopne
inc
and
inc
orl
jns
cli
add
shld
int3
inc
lcall
outsl
sbb
push
loope
scas
inc
addl
aam
xchg
add
mov
adc
rorb
mov
adc
add
lea
and
add
rclb
push
sarl
pop
mov
pop
inc
adc
xor
fs
pop
push
jne
and
xchg
lret
jg
aam
outsb
or
jg
inc
int
inc
sbb
xor
fwait
xlat
pop
call
cmpsl
xchg
and
sub
lods
xchg
imull
pushf
jg
push
or
ret
dec
mov
sub
fs
mov
movsb
push
add
inc
mov
out
aaa
stc
pop
sub
adc
and
inc
xchg
pop
pop
xor
add
pop
cmpsb
mov
inc
scas
mov
call
push
inc
sub
in
aam
pop
mov
inc
fwait
out
dec
imul
jmp
call
rol
jp
push
xchg
jae
loopne
mov
lock
sub
cmp
mov
icebp
or
aas
cltd
sbb
jle,pn
xor
in
cwtl
dec
lea
int3
inc
pop
in
shrb
push
insb
lds
mov
push
jmp
sbb
inc
push
pop
sarl
mov
aaa
clc
ficoms
xor
js
cmp
aas
stos
shl
rcll
mov
pop
jg
pop
loopne
daa
xlat
lret
pop
add
mov
stc
cld
icebp
adc
dec
push
xorl
data16
xorl
xor
mov
rolb
clc
out
hlt
xchg
dec
pop
mov
xchg
mov
and
mov
push
stos
add
lret
aas
loope
int3
or
rclb
push
int
mov
rolb
jmp
mov
fists
add
jmp
pop
pop
xorl
xchg
lods
dec
fdivl
mov
mov
mov
or
sbb
xor
incb
stc
xor
shrl
push
popa
mov
gs
pop
in
call
ret
push
and
pop
jmp
lahf
inc
pop
arpl
cmc
mov
add
aam
fwait
in
test
loope
nop
cld
adc
lret
dec
jmp
sub
rcl
sbb
adc
mov
mov
xor
lock
and
sbb
inc
jno
lret
fdivrs
dec
push
js
aad
push
aaa
dec
mov
into
clc
out
pop
jg,pt
lcall
xor
xor
xor
fdivr
enter
add
mov
sbb
adc
mov
rolb
push
fstpl
fidivl
shlb
mov
mov
cs
mov
sub
aam
dec
into
mov
push
mov
loope
or
test
adc
inc
jns
jl
pop
mov
push
jb
adc
mov
lods
mov
adc
pop
in
std
aad
add
lds
xchg
in
mov
mov
fcmovnb
push
std
xlat
push
jne
cs
mov
mov
inc
ja
sarl
push
out
out
pop
cwtl
test
ss
push
mov
push
hlt
aam
lods
mull
fwait
gs
stos
sbbb
mov
xorl
aad
pop
fs
or
jne
ja
jmp
xchg
lods
std
fwait
pop
movsl
in
lods
mov
test
je
dec
pop
shl
ficomps
rcl
rorb
outsl
add
cmpl
xor
adc
sbb
add
inc
mov
jle
stos
or
dec
xchg
cmp
aad
addr16
lcall
ljmp
cld
aas
nop
or
jle
mov
out
repnz
pop
aad
sbbb
fadd
lea
and
mov
jmp
pop
les
xchg
enter
dec
lahf
or
dec
sbb
push
in
xchg
or
fwait
aam
loop
or
mov
cmp
mov
lods
sbb
jbe
mov
push
rdpmc
hlt
cld
out
and
test
mov
in
cmpsb
nop
test
pop
jmp
adc
fidivs
pop
and
aad
mov
xchg
fbld
inc
sahf
pop
mov
push
add
in
std
fidivrl
ss
sub
out
ret
and
call
cmp
adc
aaa
loope
and
cmp
lock
sub
int
popf
jb
pop
inc
data16
fs
pop
and
cli
sbb
xchg
leave
aam
fadds
icebp
dec
inc
jl
and
mov
xchg
sti
mov
xchg
xor
ljmp
and
repz
jo
jne
sbb
mov
fstpl
add
clc
sti
push
sti
ljmp
int3
jg
add
and
cld
lea
shr
mov
dec
push
push
add
lea
pop
push
mov
mov
xlat
call
decb
inc
shrl
jge
pop
push
test
pusha
stos
dec
cmp
subb
sbb
add
call
xchg
mov
into
add
loopne
insl
sti
xchg
lret
stc
sarb
gs
push
and
push
test
xlat
mov
cmp
inc
stos
pop
outsb
add
and
jmp
imul
fcmovu
popf
sub
sbb
call
jns
pushf
pop
cmp
sbb
movsb
sbb
push
test
sub
in
ret
push
xchg
mov
testl
aam
fdivrp
xchg
pop
sub
repnz
add
jmp
movsl
outsb
adc
and
test
pop
cltd
adc
insb
and
fstpl
jp
xchg
notl
idivl
dec
stos
fwait
pop
fwait
push
and
and
sub
sbb
lret
stc
daa
aaa
mov
test
dec
adc
es
mov
xchg
xchg
arpl
push
mov
data16
sub
imul
mov
gs
push
pop
cmp
push
movsl
cltd
push
sbb
jb
xchg
mov
call
stos
leave
inc
rclb
jns
enter
mov
mov
xchg
aad
xchg
clc
adc
cli
aam
pop
fcoml
mov
lods
rsqrtps
roll
fdivl
in
dec
adc
out
cmp
pop
enter
cmpsl
scas
or
daa
cmp
xchg
add
xchg
in
lods
ret
pop
stos
jo
pop
add
movsl
mov
xchg
in
adc
sub
rclb
shlb
inc
adc
test
cwtl
ja
jne
loope
addb
inc
xchg
pop
out
dec
inc
xchg
xchg
daa
shlb
inc
or
add
out
dec
lahf
mov
popf
inc
les
cs
inc
clc
test
lahf
out
dec
cmp
pop
push
mov
pusha
insl
pop
lret
cltd
lahf
add
dec
cs
rorb
test
inc
pop
adc
xchg
lcall
add
sub
xchg
push
daa
out
mov
iret
imul
xor
xchg
jle
dec
push
es
int
mov
xor
xchg
stos
call
sub
daa
ljmp
push
jae
cmc
xchg
jbe
jecxz
jae
scas
data16
pop
shll
dec
popa
ret
jno
cli
pushf
jle
push
adc
pusha
inc
stos
hlt
adc
push
stc
push
shll
loop
or
or
test
fbld
ret
pop
shrl
lahf
or
inc
fisubs
cmp
and
or
and
es
xlat
mov
bound
mov
mov
fnsave
sbb
pop
push
enter
imul
call
sub
mov
add
cmp
mov
add
popf
fisubs
cli
aas
jbe
push
ja
aaa
and
iret
iret
sarb
xchg
cmc
movsl
das
cmpsl
mov
jns
packuswb
and
jo
sub
call
in
mov
les
jle
aaa
into
shll
shrl
push
sti
pop
cs
cmp
scas
stc
jmp
adc
fwait
popa
pop
ficoms
lods
cmp
mov
dec
or
pop
mov
xchg
rorb
loop
xor
mov
fdivrl
pop
xor
adc
mov
push
and
push
repz
push
add
push
daa
jl
mov
int3
aas
popa
cmp
mov
xchg
out
pop
xlat
pop
shl
ds
ljmp
bound
das
movsw
mov
cmp
leave
nop
je
xchg
mov
and
mov
mov
int3
push
or
aaa
xor
test
int3
mov
dec
sub
push
fists
cli
mov
inc
lods
push
push
adc
out
loope
sub
out
or
lret
scas
cmp
push
pop
xor
lahf
ja
jmp
lods
mov
test
data16
out
inc
push
fistpl
imulb
mov
xchg
loopne
pop
xchg
jae
aas
movsl
xchg
mov
in
repz
je
insb
push
sub
shl
outsl
mov
data16
repnz
repz
add
cwtl
psubb
mov
pop
outsb
xchg
outsl
push
stos
xchg
aaa
mov
xor
jl
test
push
lcall
pop
adc
mov
sbb
mov
jp
mov
stos
mov
fdivr
sub
movsb
jb
ss
outsb
jbe
fsubs
mov
icebp
push
push
lcall
inc
ror
imul
stc
add
sahf
adc
xchg
and
subb
movsb
and
aaa
rolb
testb
cmp
adc
add
pop
scas
fimuls
orb
test
or
popf
xchg
mov
jle
aad
scas
arpl
pushf
cmp
inc
insl
pop
sbb
adc
out
lcall
pop
and
ret
dec
int
icebp
pop
addr16
and
or
add
je
push
out
sub
lods
icebp
shr
sbb
lock
or
add
fs
xor
repnz
mov
lea
inc
lock
mov
adc
xor
inc
in
cmp
xlat
push
cmpsl
xchg
imul
movsl
xchg
jecxz
xchg
inc
dec
jno
mov
mov
jbe
push
das
jno
and
pop
cmp
xor
cwtl
cld
add
cmp
cmp
out
cld
js
xchg
es
push
jae
adc
test
mov
call
leave
fsubs
mov
pop
jae
clc
pop
pop
jae
mov
aad
cmp
push
icebp
pop
fdiv
sub
adc
data16
movb
sbb
pusha
pop
in
dec
cmp
inc
pop
pusha
jmp
pop
xor
call
xlat
cmp
or
xor
fs
setp
or
jmp
xlat
stos
arpl
lcall
jae
lahf
jbe
mov
enter
xchg
sbb
xchg
icebp
push
add
iret
inc
mov
and
jne
add
aaa
mov
in
in
popf
call
outsl
fistpll
lahf
cmpsb
mov
sarb
cmc
push
scas
sub
enter
ret
cmp
nop
lcall
push
jmp
subl
pop
hlt
dec
adc
push
pop
roll
push
or
pop
and
sub
repnz
mov
dec
imul
shll
test
pop
and
in
mov
xchg
insl
xchg
aaa
mov
iret
fwait
rorl
adc
adc
push
aam
push
xlat
pop
sbbl
jns
inc
jg
cmp
adc
imul
stc
bound
sub
lds
rorb
mov
xchg
loopne
cltd
in
js
mov
stos
shrb
push
and
test
aaa
cld
in
push
mov
xor
mov
in
gs
stc
pop
testl
inc
fwait
std
rol
fidivs
jp
sbb
sub
arpl
and
push
fsts
repnz
xor
scas
fnsave
adc
cs
pop
lds
ficoms
call
sub
pop
movsb
aaa
popa
outsb
sub
sub
repz
cmpsl
std
lahf
mov
jmp
hlt
inc
pop
and
in
imull
movsb
rcll
jno
add
mov
or
ret
xor
xor
cltd
addr16
lahf
shlb
push
lret
sbbl
dec
xor
daa
inc
sbb
xchg
jge
sub
iret
mov
sbb
pop
mov
sti
sub
clc
push
adc
pushf
ss
cs
shrb
mov
cmp
pop
in
push
push
xchg
mov
jecxz
sarl
xor
lret
sbb
dec
push
icebp
arpl
aaa
add
mov
inc
adc
fisttps
mov
cli
insb
dec
testl
and
xchg
leave
rcrb
into
or
fiadds
cmp
cmp
dec
sub
std
push
cvtpi2ps
enter
rolb
pop
and
out
xchg
dec
popf
in
lret
jl
inc
lds
adc
mov
iret
lods
adc
push
fbld
inc
adc
pop
and
mov
ficompl
xchg
xchg
fwait
push
and
pop
icebp
cmp
or
adc
mov
aas
lds
out
adcl
ja
push
ds
addr16
es
scas
fcompl
loope
inc
in
and
xlat
adc
inc
es
dec
push
mov
cmpsb
push
jae
pop
mov
jno
xor
xchg
xor
call
jl
fisubrl
adcb
pop
daa
inc
loope
and
add
adc
push
xchg
cs
xchg
notl
arpl
insl
clc
pop
sbb
test
je
stc
mov
pop
repz
xchg
lods
neg
adc
bound
and
dec
adc
fcomp
fistl
sbb
mov
test
stos
sti
jmp
adc
xchg
sub
xchg
ja
push
fstps
lret
push
ja
pop
es
and
jns
repnz
xchg
hlt
mov
lret
das
repnz
loopne
sub
pop
sahf
inc
pop
jg
gs
movsb
test
in
adc
fildll
leave
or
and
fs
nop
adc
aad
adc
mov
push
push
and
cltd
ss
or
das
in
push
xlat
lods
in
dec
outsl
lret
jl
ret
aaa
iret
dec
nop
mov
jmp
lret
lods
lret
jle
push
aas
jno
push
sahf
lcall
inc
ror
lahf
mov
insb
pop
and
testl
dec
sbb
fisubrs
test
or
aaa
faddl
jae
mov
mov
mov
jmp
pop
add
inc
iret
test
inc
shll
adc
imull
adc
pushf
jae
sahf
jno
sahf
or
jge
ret
xchg
pop
negl
inc
xor
fidivrl
aad
mov
xor
jb
leave
jae
popa
mov
mov
mov
daa
cli
outsl
cli
push
push
fists
stc
or
pop
or
outsb
mov
hlt
js
enter
in
clc
stos
mov
jmp
cmp
inc
insb
add
lcall
adc
stos
xchg
pushf
xchg
mov
shl
mov
push
push
inc
ja
sbb
lods
pop
enter
mov
mov
cwtl
loopne
xchg
mov
sarl
inc
cwtl
mov
xor
iret
dec
stos
sbbl
sub
push
pop
xor
fcoms
rol
push
cs
jl
mov
inc
jne
clc
pop
cmpsl
xor
lock
mov
cmp
jo
pop
lds
sahf
fistpl
adc
sarl
cmp
xor
inc
test
aam
lock
pop
mov
adcb
pop
mov
and
jno
lcall
jl
sbb
xchg
mov
cmp
sub
ss
sbb
sub
data16
fists
xor
sarl
int
pop
cmp
xchg
pop
cmc
and
inc
shll
pusha
pop
jne
ss
hlt
stc
push
fwait
imul
inc
push
test
jno,pt
clc
push
push
stc
cmp
dec
mov
leave
push
imul
js
sbb
sub
cmpsl
lods
sti
scas
sub
jl
push
jg
push
mov
push
xchg
or
outsl
lret
pop
mov
xor
lret
sbb
adc
hlt
add
data16
ljmp
adc
js
jno
mov
mov
mov
pusha
sahf
sbb
lret
stc
and
fcmovb
ljmp
mov
ror
jmp
mov
fidivrl
jne
adc
cmpsl
outsb
aas
push
add
xor
adc
inc
in
hlt
jns
iret
pop
xchg
pop
mov
jmp
stos
repnz
inc
inc
sbb
outsl
ss
lock
call
pop
imul
subl
xor
add
in
cs
nop
std
xor
repnz
cmc
xor
cmp
push
insl
jbe
or
cli
xor
mov
cmp
mov
sbb
mov
sbb
lret
cmp
push
xchg
xchg
xchg
cmp
push
mov
cmc
out
pushf
inc
out
or
sbb
dec
stos
fcos
in
adc
push
dec
inc
mov
lods
je
mov
xchg
xchg
xor
out
imul
cmp
lods
cs
fstp
lds
daa
push
dec
cltd
pop
xor
outsb
adc
mov
test
fdivrs
push
xchg
int
jne
xor
add
push
les
ficoms
shlb
inc
stc
aas
inc
loope
jae
cs
mov
lds
mov
fcmovbe
das
lods
mov
fdivrs
lret
test
pop
and
shll
addr16
mov
pop
in
cmpsb
fisubrl
scas
sbb
mov
aad
sub
mov
dec
mov
out
inc
shll
dec
jne
addr16
stc
push
xor
popf
shl
sub
test
mov
pop
jb
cltd
int3
fisttpl
inc
cli
jno
enter
pop
mov
sti
sub
mov
ss
aad
jl
lock
inc
shl
jbe
stos
shrb
mov
lahf
int3
push
lret
push
xchg
xor
adc
fwait
jno
shlb
je
cmpsl
sbb
add
add
adc
mov
inc
std
aad
xchg
int
and
imul
mov
pop
shrl
or
test
pusha
mov
xor
inc
scas
xlat
xchg
cmp
jmp
fsubs
repnz
cmp
cli
out
js
adc
es
mov
xchg
fsubr
inc
pushf
mov
jo
and
lds
jl
sub
je
inc
test
cli
ds
insb
push
hlt
pop
inc
adc
in
mov
adc
cli
inc
iret
inc
xchg
inc
adc
sub
cwtl
loope
mov
shlb
or
jnp
cli
push
fs
sahf
pop
push
mov
rclb
movsl
lock
pop
ret
jp
popf
lcall
sarb
jg
imul
das
stos
mov
mov
pop
ds
or
adc
push
sahf
loope,pt
inc
cmpsl
mov
push
cmc
sbb
lcall
mov
in
test
shlb
stc
pop
pop
mov
movsl
fidivl
mov
mov
sbb
xchg
dec
sub
add
ja
dec
call
or
pop
add
stos
gs
das
pop
into
pop
xor
jo
mov
add
fcoms
xor
mov
cltd
lock
jae
mov
out
mov
xchg
mov
cmovge
mov
mov
inc
cwtl
xlat
into
push
mov
lock
jecxz
lock
lahf
inc
insb
xchg
jns
push
pop
xchg
mov
push
dec
pop
lock
nop
inc
pop
imul
sbb
pop
or
fidivrs
xor
xchg
popa
push
inc
pop
out
jp
fs
cmpsb
mov
and
repnz
add
sbb
xor
push
jl
or
dec
div
insb
stc
cmp
fucom
test
push
sarb
mov
sbb
pop
call
popf
mov
or
sahf
push
dec
mov
popa
rcrl
push
testl
cwtl
test
jae
xchg
ficompl
xchg
sbb
outsb
inc
daa
outsl
cmp
mov
lods
dec
repz
or
sahf
mov
cmp
sar
adc
das
out
ss
add
popa
push
push
mov
sub
jae
pop
sbb
pop
and
cmp
mov
movsb
or
xchg
movsb
sub
cmp
das
sub
in
xchg
fnstcw
jg
lods
push
dec
fwait
adc
fstpt
sub
push
cmc
fwait
lds
dec
inc
lods
ret
or
imul
xlat
xchg
mov
lods
fwait
pop
cld
popf
imull
sahf
addl
jmp
mov
int
mov
arpl
or
out
pop
dec
cmc
cltd
cmovge
sbb
push
in
ficoms
fsubp
call
jae
jne
pop
jge
xchg
mov
push
lcall
bound
lcall
adc
mov
xchg
in
stc
mov
pop
xchg
sidtl
cld
ja
inc
ficoms
jle
mov
arpl
sbb
out
in
dec
sbb
xlat
push
xor
pop
addr16
inc
arpl
sbb
sbb
int
mov
xchg
xor
add
push
cmc
arpl
mov
out
int3
push
stos
inc
lds
loopne
mov
or
pop
add
mov
dec
add
iret
rol
pushf
xchg
mov
add
div
mov
pop
cmp
mov
or
adc
fiaddl
pop
xor
shr
sub
and
cli
sub
shlb
ljmp
jge
mov
mov
xchg
dec
test
stc
inc
xchg
es
lcall
dec
dec
bound
xchg
or
imulb
sti
aam
jo
call
push
xchg
jnp
push
orl
pop
cmp
movsb
pop
mov
ds
sub
sub
push
lods
stc
shll
std
jne
dec
into
push
sub
push
sub
fcompl
sarb
icebp
and
fdivr
sub
jl
sarl
pop
pop
jp
ds
mov
xchg
pop
and
jmp
mov
push
iret
push
iret
sti
xchg
stc
mov
shl
dec
mov
dec
xor
cld
ja
adc
jns
imul
cmc
popf
test
test
push
fldt
cld
xchg
sbb
push
push
pop
sub
and
xor
push
stos
jge
int
dec
das
cld
sub
or
mov
sbbb
mov
jge
in
jg
push
fsubrs
xor
pop
adc
jmp
mov
imul
xchg
nop
rcll
cmp
push
ljmp
outsl
inc
scas
adc
xor
xchg
inc
xor
dec
add
inc
sub
pop
fwait
mov
sbb
iret
push
mov
jne
pushf
fistl
or
sub
pop
xchg
cmpsb
mov
int3
add
push
inc
xchg
cli
outsb
jg
mov
cmp
pandn
add
popa
push
lret
outsl
iret
rclb
fstl
icebp
xchg
cmp
ds
idivb
lahf
icebp
scas
and
aas
movsl
aam
add
je
rcl
rcll
mov
jne
arpl
push
pop
arpl
push
pop
out
loopne
das
test
inc
fs
movsb
sub
xor
aad
mov
popf
push
dec
aam
sub
cmp
icebp
push
aaa
loop
xchg
js
mov
dec
stc
push
pop
mov
push
ss
sbbb
push
fstps
rolb
pushf
repnz
pop
push
jl
inc
sahf
pop
mov
lcall
cli
iret
jne
lahf
sub
dec
xchg
stc
push
pop
mov
in
pusha
repz
xor
pop
mov
dec
jmp
clc
pop
add
cs
xchg
ds
stos
pop
int3
fdivs
das
imul
sbb
jb
push
sub
shll
shrd
sub
sti
push
outsl
sbb
rcrl
or
scas
mov
mov
pop
out
movsb
stos
adc
cmp
shll
pop
mov
and
xchg
addr16
cld
int
mov
dec
dec
adc
cmc
or
test
cmpsl
mov
dec
pop
xchg
mov
xchg
lahf
test
mov
mov
inc
call
stos
lret
gs
stos
shll
stos
xlat
jl
cltd
fistl
xor
push
push
les
xchg
pushf
mov
xor
or
stc
rcrb
mov
mov
aaa
icebp
mov
daa
stos
test
pop
adc
or
and
lea
pushf
faddp
cmpsl
xchg
leave
rolb
pop
ss
lods
push
notb
call
jmp
pushf
cmpsl
dec
sbb
mov
arpl
pusha
mov
adc
sub
sbbb
mov
cmp
xor
js
stc
dec
push
pop
outsl
nop
adc
js
adc
daa
sub
insb
movsb
and
and
pushl
mov
xchg
jb
sbb
dec
and
push
sub
xlat
push
jno
and
pop
es
lds
mov
jge
xor
mov
jge
push
and
xchg
icebp
leave
lahf
or
dec
pop
shr
adc
xchg
adc
lret
sub
out
and
sub
pop
push
dec
xchg
sbb
ret
pop
dec
adc
mov
ss
cmp
fnstsw
out
addl
add
icebp
adc
inc
test
push
dec
aas
lods
mov
pop
fs
sbb
addb
adc
lods
inc
aaa
in
lcall
mov
xchg
aam
xchg
inc
push
adc
add
das
jge
out
cmp
or
shl
adc
loop
fsubp
rcrl
sbb
or
mov
lds
pop
jmp
push
or
push
adc
adc
sub
flds
jge
lret
aas
imull
pop
add
sub
pop
fwait
mov
sub
dec
mov
lds
and
pop
lret
clc
jl
and
nop
jmp
sbb
xchg
addr16
jae
mov
xchg
aad
rorb
rorb
mov
xlat
and
in
mov
mov
pop
ret
mov
cltd
sub
xchg
xchg
es
jmp
push
hlt
jno
push
mov
pop
adc
fs
imul
sbb
test
jb
test
enter
sub
rcl
cs
stos
cmp
rcr
fidivl
imul
lods
movsb
inc
push
sbb
inc
xchg
ds
negb
jo
arpl
and
sub
xor
xor
pop
shlb
push
mov
lret
adc
mov
data16
out
inc
aad
pushl
adc
lahf
lcall
gs
aam
push
mov
jecxz
in
out
adc
push
pop
add
test
lcall
lds
test
mov
or
xlat
icebp
pop
pop
lret
pop
not
mov
adc
xchg
ret
aad
and
pop
inc
iret
pmaxsw
fs
pop
push
lret
mov
movsl
mov
push
inc
aad
jo
inc
sarl
mov
mov
add
cmpsb
jge
sbb
dec
push
adc
mov
or
and
cltd
out
and
cmpsl
dec
sarl
sub
shrl
xchg
sbb
call
pop
sbb
jo
or
pop
lcall
xorb
push
jg
cmc
pop
push
setnp
add
and
pop
cmp
lods
cli
pop
or
aaa
xor
adcl
rorl
pop
shl
fsubr
mov
xchg
add
cmc
pushf
xor
add
fcompl
cmp
pop
test
add
pop
xor
mov
adc
fdivrp
insl
lds
cmp
outsl
ss
adc
push
mov
lds
mov
rcrb
aad
stos
aad
xor
pop
mov
add
cltd
das
cwtl
mov
push
sub
jl
xchg
mov
inc
arpl
sbb
sub
add
cmp
pop
icebp
fcmove
or
mov
cmp
xchg
mov
and
adc
cltd
out
push
hlt
or
pop
sbb
add
inc
mov
imul
imul
pop
dec
shll
sub
jmp
aad
or
fdivl
jge
call
lret
movsb
fldl
inc
cmpsb
push
mov
pop
mov
or
movsl
sub
insb
mov
mov
decb
mov
pop
sbb
xor
inc
sub
inc
jb
cmp
pusha
insl
add
inc
push
xor
xsaveopt
scas
jmp
fld
repnz
push
clc
sub
pop
sub
and
pop
fisubrs
in
jns
pop
lahf
lock
push
jge
loopne
mov
stos
cmpsb
xor
mov
cld
iret
push
dec
stc
or
pop
push
mov
call
push
jg
sub
jl
pop
or
rol
ret
mov
adc
push
xor
or
pop
xchg
cmpsb
mov
rcl
inc
push
cltd
test
mov
fldcw
adc
out
clc
rclb
xchg
and
push
popa
rorl
sbb
gs
das
das
sbb
lahf
mov
mov
cmc
out
sub
fwait
pop
in
popf
mov
push
xchg
push
mov
mov
in
cmpb
cmp
ds
or
xchg
ret
lock
in
or
xchg
test
jns
mov
pop
xchg
cmp
push
mov
outsl
mov
cmp
jle
addb
insb
ret
jmp
xor
mov
or
sub
xchg
gs
insl
fs
shll
ret
cmp
push
jp
daa
mov
outsl
hlt
lods
push
dec
sbbb
sbb
js
arpl
mov
ds
popa
inc
mov
sbb
sub
out
std
mov
or
push
dec
sbb
adc
add
push
fistps
mov
push
and
mov
test
add
pop
add
leave
mov
stos
shrb
shl
xchg
dec
cld
fs
rol
add
rolb
jo
js
dec
mov
xchg
stos
mov
bound
into
jp
or
mov
dec
pop
jge
lods
std
daa
push
repz
jg
cmp
pop
push
mov
andl
ret
xor
lock
lods
mov
imul
xchg
jmp
inc
in
push
xor
stos
inc
mul
fildl
lea
sbb
inc
out
xchg
stc
xchg
aad
xor
or
xor
jae
cmp
stos
movb
jge
imul
xor
inc
enter
push
xor
gs
imul
lods
cmp
push
or
ss
adc
mov
xlat
test
jb
movsb
shrl
movsl
xlat
mov
or
daa
and
fsubs
rcr
aad
aas
orl
dec
addl
rorb
rclb
stos
out
cmpps
sbb
inc
mov
push
out
cmp
and
add
fldcw
pop
jns
repnz
xchg
data16
push
lock
aaa
jecxz
push
rcll
jp
mov
push
mov
orb
push
mov
shlb
repz
loop
sbb
push
int3
pop
mov
fsubs
push
imul
out
lea
sub
push
orb
xlat
mov
in
hlt
jle
fsub
pop
repnz
jae
cmc
ljmp
cltd
mul
call
cmp
ljmp
push
call
jnp
dec
cmp
xchg
outsl
aam
lds
jg
in
bound
sbb
gs
adc
je
push
out
lods
pop
pop
or
addr16
frstor
mov
xchg
cmpsl
lds
mov
and
imul
aam
xchg
xchg
std
sbb
insb
cmp
or
cmpsl
test
icebp
fstpl
fsubr
dec
cli
loope
lret
mov
dec
jne
jo
loope
pushf
add
xchg
nopl
iret
or
push
fsubp
jge
xchg
lods
mov
adc
in
push
mov
mov
icebp
and
cmp
aaa
lds
jle
into
dec
dec
jl
fwait
add
sbb
imul
js
loope
and
iret
lret
xchg
pop
sbb
ret
js
scas
sbb
cvtps2pi
test
pop
push
pop
jb
cmpsb
adc
mov
imull
jge
add
xlat
jo
mov
mov
or
push
aad
and
jge
mov
inc
mov
imul
cmc
shrl
repz
movsb
nop
mov
ss
fs
dec
lods
mov
xorl
jmp
aaa
or
xchg
mov
mov
rolb
pop
inc
rcrl
mov
pushf
aam
cli
mov
xor
dec
sti
xadd
negb
ljmp
xchg
sbb
aad
fsubs
scas
adc
cmp
adc
dec
dec
inc
das
fucomip
out
lods
mov
aad
xchg
push
sbb
rcrb
xchg
cld
int3
jns
cmp
mov
mov
jmp
cmp
pop
out
stc
pop
sbb
mov
sub
xor
fsts
cmp
adc
push
dec
jl
xchg
pop
repz
jg
add
mov
ljmp
psllq
or
icebp
push
cltd
sub
repnz
stc
in
rcrb
cmp
hlt
fscale
rorb
jle
push
dec
lahf
sub
movsl
mov
push
xchg
jns
inc
jno
imul
dec
lock
push
adc
cmp
cmpsl
fldt
lock
sti
xchg
test
ret
add
or
add
fildll
pushf
aad
inc
xchg
sub
out
adc
adcl
and
pop
jo
sbb
fsqrt
in
cli
and
pop
pop
or
sahf
out
lock
and
inc
pop
cmp
pop
mov
cltd
mov
xchg
jmp
push
fwait
xchg
cltd
mov
test
or
aaa
cmp
push
xchg
cmpsb
push
aam
movsl
dec
mov
out
xor
dec
aad
mov
movsb
or
cld
jnp
dec
cli
insl
push
mov
lret
xchg
pop
rcrl
add
mov
sub
aad
push
jno
out
ss
fldl
lods
enter
shlb
sahf
pop
mov
and
into
ds
jae
in
fbld
sbb
mov
js
sbbl
iret
mov
stos
jno
jge
iret
jg
push
adc
outsl
insl
xchg
sub
rsqrtps
sub
out
mov
cmc
inc
je
or
inc
dec
xlat
dec
mov
shlb
clc
cmpsb
hlt
in
pop
int
stc
dec
sbbl
orl
mov
insb
jae
push
push
sbb
roll
loope
cmp
lock
roll
cld
mov
sbb
aam
push
sub
stos
pop
in
fldt
call
leave
xlat
cmp
jns
push
in
add
push
push
dec
idivb
stos
cmpl
clc
lret
sahf
imul
inc
pop
mov
subb
mov
inc
hlt
xor
pop
cmp
mov
mov
add
pusha
hlt
sbb
add
or
into
in
pop
cmp
insb
inc
sub
out
push
iret
push
xor
cmp
faddl
pop
pop
xchg
aas
div
or
sbbl
ss
psrlq
or
cmpsb
add
mov
mov
cmp
hlt
inc
stos
sub
fwait
push
mov
ss
mov
lea
jmp
inc
cli
dec
mov
xchg
or
loopne
mov
iret
and
mov
fcmovnu
inc
cmp
pop
dec
inc
pusha
daa
aaa
fwait
sahf
hlt
or
jg
icebp
and
or
mov
mov
addl
or
enter
jae
out
cmp
icebp
pop
xchg
or
repz
pusha
test
mov
cwtl
mov
arpl
sahf
inc
pop
stos
gs
cwtl
iret
loop
xor
and
rcrb
or
shlb
push
xchg
add
push
out
scas
pop
dec
test
mov
push
ss
inc
cs
fwait
out
cltd
mov
or
std
sub
push
xor
cmp
push
addr16
testl
lods
add
mov
mov
push
mov
pop
dec
mov
stos
mov
jmp
sbb
aad
fstps
push
dec
loopne
pop
dec
pop
test
jae
iret
or
mov
jmp
outsb
aaa
push
cld
mov
jnp
and
push
popa
sbb
imul
push
rolb
mov
push
and
sub
cmp
ror
push
cmpsl
lds
xor
or
inc
mov
test
or
out
sbb
pushf
sub
mov
or
and
lret
fbld
mov
icebp
adcl
push
xchg
arpl
xchg
mov
jle
fstp
cmp
stos
icebp
notl
inc
pop
sahf
ret
fsubl
aam
inc
and
gs
dec
xlat
sar
cltd
or
test
out
aad
mov
das
cwtl
mov
jb
mov
pop
or
push
and
push
ret
inc
std
icebp
scas
jae
adc
jge
inc
mov
jb
pop
inc
sub
rorl
cmp
cmc
sbb
aam
cmpsb
push
cmp
repz
das
insb
cwtl
or
sbb
inc
mov
inc
inc
cmp
mov
sub
hlt
negl
pop
sub
sub
push
rcl
cmpsl
aaa
adc
jnp
cmc
insl
cmp
out
loope
lock
into
shl
mov
shl
out
and
movsb
movsl
ret
mov
movsb
dec
cmpsb
rcr
push
cli
cmp
notl
xchg
outsl
push
pop
aam
mov
pop
ret
les
jp
or
pop
out
push
inc
mov
test
pushf
int
mov
mov
push
jno
lods
out
call
xor
dec
push
mov
lods
pushf
outsb
cmp
dec
inc
xchg
dec
jle
pop
jns
mov
push
xor
mov
add
xchg
adcl
push
pop
shrb
loope
movsl
fcmovne
lods
das
mul
clc
imul
push
mov
decb
lret
aam
dec
lahf
aas
xchg
push
mov
and
cmp
into
inc
scas
dec
int
xorl
inc
sarl
sti
pusha
xchg
mov
stos
pop
lret
aas
and
lcall
repnz
sahf
repnz
outsb
cmp
mov
adc
popa
inc
jp
adc
push
pop
or
rclb
repnz
push
sub
pop
cmp
xchg
xor
jg
lret
sub
addr16
gs
repz
inc
mov
xchg
mov
mov
inc
roll
inc
ja
xchg
and
push
xchg
std
icebp
cld
sti
jb
lcall
push
imul
cmp
out
stc
mov
sbb
rcr
jnp
je
lret
aad
mov
dec
sub
pop
bound
mov
shrw
and
lods
sbb
push
sbb
jbe
add
sub
xlat
scas
or
or
testl
or
inc
or
pop
movsl
jne
mov
test
dec
and
add
and
adcl
mov
imul
lds
test
les
fnstcw
or
addl
popf
push
std
mov
cld
inc
stc
test
mov
xorl
pop
jb
test
adc
mov
addl
ss
pmaxub
in
int
sub
sbb
rcl
pop
leave
loopne
xchg
or
push
in
mov
daa
dec
lock
push
out
in
dec
bound
add
fiadds
fmuls
rclb
pushl
lahf
dec
add
sbb
rcrl
push
pop
push
cs
dec
push
xchg
push
divl
imul
jle
mov
in
repz
iret
mov
xor
and
xchg
or
cmp
jnp
aam
mov
adcb
jb
mov
mov
rcrl
jne
inc
mov
xlat
popf
inc
xchg
addr16
and
pop
stos
divb
ljmp
ret
jmp
push
pop
sub
popf
jo
addr16
lock
inc
and
fsubr
rolb
push
mov
push
fdivrs
test
mov
and
ja
movsl
leave
mov
mov
sti
sbb
jns
les
in
xlat
out
mov
outsl
xor
fs
ss
jmp
add
inc
out
lock
jae
mov
xor
clc
cmpsb
stos
dec
push
stc
ror
lret
out
cmpb
loopew
mov
scas
outsb
pop
pop
in
cmc
fsubrs
scas
repz
aad
and
and
jmp
fsts
ficomps
push
jl
mov
jp
xlat
aad
pop
xor
sub
xor
inc
cmpsl
mov
xor
mov
jns
jecxz
stc
movsb
mov
dec
sbb
mov
mov
inc
pop
in
mov
pop
push
outsb
int
xlat
jo
daa
pop
cmc
adc
rcll
jmp
fst
mov
nop
mov
jp
test
push
push
pop
xlat
lcall
rcrl
movsl
lods
xchg
lods
fisttpll
inc
lods
xchg
jg
insb
push
fwait
adc
sahf
mov
cli
and
lds
or
insb
cwtl
les
push
cli
scas
mov
jmp
repz
xchg
mov
jne
jno
int
into
or
jle
fwait
in
xchg
inc
xor
je
stos
enter
adc
jmp
sub
mov
cmp
lods
mov
int
ja
aad
jmp
ja
andb
stc
mov
div
and
cmpsb
adc
xchg
mov
or
lock
subl
jnp
test
call
adc
sub
out
xchg
inc
fs
sub
mov
sub
ja
fcmovb
call
les
push
loope
je
mov
loope
push
add
rcr
pop
sbb
test
aad
pop
inc
mov
jge
mov
mov
mov
rcll
test
negl
push
lret
rcrb
dec
push
xchg
mov
mov
dec
cmc
mov
jmp
inc
fisubrs
mov
cmc
test
pop
arpl
mov
sub
insb
inc
in
and
inc
nop
lret
mov
adc
xor
lahf
rcrb
lret
les
movsb
sbb
cmp
fs
orb
dec
mov
test
sub
mov
adc
inc
sub
inc
rorb
in
imul
cmpsb
and
sbb
int3
call
sub
or
jp
mov
scas
mov
xchg
sahf
pop
pop
ljmp
es
jecxz
loop
lret
lcall
mov
in
sbb
xchg
inc
ljmp
sahf
xor
push
mov
push
subb
fsubl
in
das
test
repnz
jno
inc
fcompl
aaa
outsl
cld
arpl
rcll
scas
das
xor
js
mov
push
popf
mov
lea
fistps
or
movsl
out
leave
adc
or
mov
insl
sub
outsb
movsl
push
pusha
pop
out
popf
mov
jno
das
lods
aad
push
in
mov
mov
je
mov
cmpsb
xchg
pusha
fs
imul
push
mov
jmp
idivb
inc
cmp
inc
sbb
and
inc
pop
sbb
rorb
push
add
push
push
pop
adc
xchg
notl
xor
jne
test
jecxz
dec
shl
addb
ja
out
shrd
xlat
notl
addr16
push
pusha
stc
dec
gs
test
shlb
mov
and
mov
dec
notb
lret
and
sub
push
or
jp,pn
xchg
mov
mov
and
pop
adc
mov
clc
lods
add
ja
scas
mov
pop
push
pop
aas
push
std
lcall
mov
mov
std
pop
pop
getsec
loop
movsl
enter
inc
sbb
sti
sub
inc
pop
dec
in
mov
ret
arpl
adc
lahf
cmp
adc
xor
mov
cmp
xor
iret
sti
jle
outsb
push
lea
les
scas
dec
sub
pop
scas
sarl
insl
rclb
mov
out
pop
int3
xor
pop
out
inc
and
push
aam
cmp
mov
pushf
add
xor
jmp
xchg
arpl
cmp
and
int
xchg
dec
and
ss
xchg
inc
insb
idiv
jo
outsb
popf
or
adc
movsl
cli
movb
pushf
push
dec
or
xor
cld
inc
pop
mov
adc
mov
pop
dec
jmp
jecxz
sbb
fldenv
sub
icebp
test
pop
or
adc
dec
fildll
xchg
xchg
cmc
add
jecxz
inc
aam
sub
mov
adc
push
aas
xchg
adc
mov
or
lock
cli
in
mov
lods
insl
imul
cmp
push
mov
sbb
stc
inc
iret
daa
inc
mov
xchg
push
xchg
loopne
xor
in
daa
xchg
dec
lock
inc
imul
add
stc
mov
fcomps
aaa
cmpsb
test
je
insl
int
cmp
loopne
test
adc
imul
adc
mov
enter
xor
mov
mov
xor
mov
push
adc
fsubr
loopne
pop
out
insb
aas
fcmovnu
loope
dec
push
and
sub
mov
leave
xchg
imull
add
or
push
mov
mov
mov
jl
push
push
adc
mov
fbstp
inc
push
add
fnstenv
jp
adcb
div
pop
mov
cmp
call
jge
sub
push
xor
xor
popf
dec
mov
mov
adc
dec
mov
ja
xor
sbb
arpl
mov
nop
cmp
sbb
xchg
cmp
push
cld
inc
jmp
jecxz
pop
clc
pushf
pop
mov
decb
push
mov
pop
mov
pop
add
mov
popa
jecxz
add
pop
cld
cmpl
xchg
xchg
shl
gs
std
push
addb
repz
lahf
loopne
dec
xchg
push
stc
sub
iret
cmp
jmp
inc
lods
test
cwtl
push
outsl
fwait
mov
push
leave
outsl
xchg
shll
stc
jae
mov
jmp
add
popa
xchg
cmp
pop
xchg
clc
xchg
cmc
addb
xor
daa
mov
sub
inc
or
pop
shr
push
mov
loope
aas
ror
and
sbb
and
push
xchg
jle
fs
addb
mov
cld
dec
ja
pop
jae
push
test
nop
cld
mov
jmp
or
lahf
daa
push
sub
xorl
push
inc
stc
and
dec
or
or
xor
leave
sub
lods
pop
xor
cmp
inc
rorl
sti
imulb
ss
fistpll
adc
int3
inc
divl
test
mov
or
adc
sub
roll
and
nop
stos
push
sub
mov
and
xchg
and
loop
cs
loope
cmp
cmpsl
jb
mov
scas
lods
hlt
mov
pop
xchg
ficompl
xor
hlt
dec
cmp
mov
loopne
mov
push
sahf
fwait
mov
rolb
xor
mov
dec
test
xor
xchg
sbb
fldl
adc
out
mov
lahf
mov
mov
sbb
mov
sahf
loopne
mov
shlb
xor
outsb
js
dec
fs
and
out
add
xchg
clc
xchg
cs
in
sub
arpl
fdivrs
push
cmc
jg
push
mov
sbb
xor
mov
loope,pt
mov
jecxz
cmp
dec
test
leave
ds
cmpsb
insb
mov
dec
addr16
inc
or
dec
sbb
sub
add
adc
mov
subb
mov
jns
mov
outsb
sub
mov
ljmp
push
mov
out
sub
xchg
xorl
icebp
pop
fildll
xor
mov
imul
imul
test
mov
nop
hlt
ja
mov
lret
add
or
xor
adc
jns
mov
jge
fwait
add
xchg
adc
sub
pushf
cmp
adc
insl
imul
fwait
cltd
nop
je
das
vandpd
adc
mov
subb
andb
xlat
int
stc
xchg
jne
adc
mov
push
xchg
jle
lods
mov
inc
push
inc
test
mov
ds
scas
nop
sub
pop
shr
insl
push
jmp
sar
fstpl
hlt
pop
adc
sbb
cmp
add
rcr
or
jb
sub
lods
xorb
adc
sbb
mov
sub
mov
xor
add
lds
jecxz
arpl
inc
sbb
and
sub
adc
mov
ss
mov
push
pop
cmp
jge
lahf
mov
push
add
xchg
fadds
mov
arpl
push
pop
adc
sti
sbb
lds
aam
lret
mov
pop
or
adc
pop
pop
test
mov
cmp
pop
lds
mov
pop
pop
pushf
inc
cld
cs
adc
push
jno
add
mov
jno
or
pusha
dec
cmp
pop
lret
add
pushf
and
call
pop
fwait
push
sub
dec
xor
mov
aam
and
fsubs
outsl
adc
sbb
scas
pop
xchg
sub
rcll
cmp
in
and
clc
mov
sbb
aam
stos
cs
jb
adc
mov
cmp
xchg
jne
pop
add
out
shrl
inc
fucompp
cmp
test
lahf
jne
in
push
fsubs
jp
lock
xcrypt-ecb
cmpsl
lea
cmpb
xor
leave
leave
insb
push
and
sti
mov
popf
mov
push
xor
lahf
jp
mov
in
rcr
std
cmpsb
xor
js
dec
fst
xor
jmp
mov
mov
adc
outsl
adc
test
fcmovbe
or
mov
inc
outsl
sbb
pushf
mov
rcll
loope
cwtl
lahf
push
inc
mov
jmp
imul
adc
xor
sti
inc
add
mov
or
adc
and
shlb
xlat
fildll
xlat
jo
notb
fisttpll
orb
hlt
lock
xchg
jo
sub
mov
xchg
rorb
insl
popa
popf
pop
test
lods
sbb
mov
cmp
orb
stos
stc
sbb
bound
mov
out
mov
dec
add
add
dec
mov
or
add
pushf
xchg
sbb
mov
adc
fisubs
and
cmpsl
aas
push
into
lods
mov
adc
inc
xchg
iret
and
xor
sbb
mov
cmp
xor
push
sahf
out
xor
dec
push
sbb
xchg
negb
and
lret
mov
pop
pop
mov
lahf
std
das
xchg
popf
sbb
xor
xchg
inc
popa
inc
aam
mov
imul
push
fs
cmp
addb
rclb
outsb
jae
add
fdivl
pop
sbb
xor
test
sets
aam
mov
cltd
push
push
fiadds
in
jb
jle
fidivs
cltd
mov
out
mov
test
scas
mov
xor
push
mov
add
sub
pop
loope
stc
scas
pop
mov
test
mov
repnz
push
cmp
mov
mov
push
js
ljmp
das
dec
push
shll
mov
dec
push
push
call
aas
std
frstor
rep
mov
inc
mov
pop
xchg
add
lret
sbb
ds
les
adc
xchg
cltd
pop
mov
push
cmpsb
ss
js
push
pop
jmp
push
jmp
andb
or
movsl
sub
cwtl
das
sub
lret
adc
mov
notl
or
jmp
orb
repz
fucomi
add
jns
or
dec
mov
imul
mov
push
fiaddl
sub
mov
xchg
mov
xor
and
pusha
outsl
pop
loopne
lods
push
jg,pt
mov
cmp
mov
insl
inc
pop
cmp
insb
mov
fldl
loope
and
or
pop
mov
and
jl
add
mov
fidivl
adc
aad
sarl
or
xchg
sbb
hlt
out
movsl
or
xchg
pusha
jge
sub
lahf
ds
stos
xchg
sub
sbb
roll
sbb
mov
sbb
jle
inc
dec
or
cs
sub
cmc
mov
pop
xchg
lods
jno
std
int3
xchg
push
imul
imul
jp
stc
xchg
adc
data16
test
jp
out
js
ret
arpl
xor
jne
dec
jecxz
mov
ljmp
fistps
sub
fldl
fadds
pop
sti
loopne
and
and
pop
pop
icebp
std
pop
adc
pop
xor
jb
mov
rcr
xchg
and
scas
pop
xchg
xchg
mov
sbb
dec
inc
daa
shrl
inc
mov
jno
dec
jge
mov
sub
leave
pushf
cmp
or
push
xchg
push
xchg
pop
rolb
int
lods
cmp
mov
mov
ret
and
fs
fnstcw
mov
cs
sub
rclb
pop
movsl
arpl
pop
sti
push
dec
ret
in
xor
mov
xchg
pusha
inc
cmpsb
mov
push
adc
negb
insb
cwtl
inc
pop
incb
jecxz
or
out
dec
imul
loop
int
nop
dec
nop
xor
push
clc
mov
xchg
pop
adc
sub
or
cmpsl
and
pop
push
mov
imull
xchg
and
aad
pop
shll
mov
or
or
mov
jp
in
movsb
nop
fnstsw
pop
movsb
mov
mov
xlat
mov
xor
std
or
xchg
xor
inc
std
mov
mov
jecxz
xor
out
jmp
popa
mov
test
or
test
push
pop
mov
leave
dec
les
push
pusha
xchg
push
jmp
push
pop
fisubrl
pushf
sysret
dec
movsl
dec
xchg
lods
test
add
pop
or
in
pop
cmp
add
test
aad
inc
in
psubsb
repnz
lahf
ja
addr16
add
fidivl
sub
shlb
xlat
mov
mov
test
push
stos
pop
add
ret
push
clc
push
mov
mov
cmpsl
std
xor
stc
out
lods
into
mov
sub
inc
jge
test
xor
cli
mov
jne
lods
xchg
imul
mov
rcll
iret
sbbl
jnp
xchg
push
loope
add
loopne
jnp
sbb
jne
push
inc
mov
testl
lahf
cld
cltd
int3
sbb
icebp
dec
ss
jecxz
scas
ss
stc
ja
sbb
push
mov
movsb
notb
clc
test
les
xchg
movsl
cmp
xor
mov
add
mov
mov
pop
punpcklbw
and
jg
test
aad
test
inc
mov
adc
add
fs
xchg
mov
push
fwait
mov
fwait
inc
cwtl
in
add
push
or
iret
add
mov
adc
inc
pop
sbb
sub
push
icebp
scas
push
shrb
jp
and
dec
dec
out
add
icebp
xchg
cmp
cltd
js
popf
and
nop
or
xorb
clc
in
les
adc
pushf
icebp
push
icebp
stc
sbb
leave
jl
and
xchg
pop
mov
inc
jbe
cmp
adc
jo
mov
ja
push
mov
sub
inc
push
pop
sbb
in
aaa
push
mov
pusha
and
mov
xchg
mov
push
pxor
pop
xchg
lods
lds
aam
repz
xchg
test
lods
xor
pop
mov
mov
adc
in
divl
sbb
push
sbb
dec
cmp
mov
xchg
les
xlat
idiv
adc
push
and
fdivrs
mov
in
mov
dec
imul
in
and
call
push
inc
inc
addr16
xchg
fildll
sub
xorl
test
fwait
shll
dec
sub
mov
in
sar
xchg
test
and
jecxz
xchg
mov
int3
in
mov
cmp
int
cmp
cltd
cmpsb
sub
mov
ljmp
sbb
std
inc
outsb
push
sub
fldcw
xchg
inc
cwtl
int
mov
or
mov
inc
push
lods
ficoml
ljmp
cli
test
popf
or
xchg
inc
sbb
push
lcall
lock
mov
or
loopne
mov
inc
xchg
subl
insb
xor
cmp
pop
fldl
and
push
pop
mov
dec
call
out
pop
repnz
inc
cmp
cmc
test
pop
jno
xchg
or
jg
mov
adc
xchg
pop
xor
add
mov
jnp
pop
jge
push
rcl
pop
fs
adc
ret
fistps
sbb
fbstp
outsl
arpl
sbb
and
addb
clc
je
dec
mov
adc
movsl
xor
icebp
mov
mov
lods
xlat
jg
ja
cmc
push
ja
xorb
push
mov
push
push
or
dec
cmp
cmc
lods
stos
fiadds
stos
mov
aaa
or
and
dec
test
or
cli
mov
out
pop
jmp
call
test
int3
mov
loope
out
fbld
cmp
mov
push
jl
rcrl
shr
mov
pop
sbb
in
push
aad
aam
add
les
inc
punpcklwd
ja
mov
fsubrs
sub
stos
clc
cmc
add
lods
sub
lock
fidivrl
stos
xchg
jmp
pop
sti
pop
adc
add
aas
ss
push
inc
cmpsl
jno
sbb
sbb
push
ja
cmp
mov
or
leave
pop
jp
movsl
shll
lret
add
mov
faddl
adc
leave
lds
dec
push
iret
enter
fistpl
pop
push
lcall
shll
test
sub
aad
push
add
rcl
out
push
xlat
aam
xchg
lock
clc
out
jb
std
sub
dec
pusha
call
leave
jae
ljmp
stos
mov
xchg
stos
outsl
popa
xchg
push
xor
div
out
jge
fnstenv
or
hlt
sbb
dec
scas
add
push
or
mov
and
shll
addb
ret
repz
xchg
out
shld
shrl
xchg
icebp
idiv
fnstsw
outsb
rolb
in
or
insl
xchg
inc
out
inc
dec
int
popf
pop
dec
and
mov
or
pop
jl
push
dec
xor
dec
fwait
adc
and
jecxz
fstpl
mov
or
inc
lret
pushf
das
xchg
jno
inc
dec
push
mov
out
mov
adcb
pushf
xchg
iret
inc
push
pop
lret
jmp
inc
mov
jns
lcall
in
leave
stos
adc
mov
push
sbb
or
sub
pop
cmpsl
push
mov
xchg
xchg
aad
fistl
xlat
xchg
idiv
cmp
das
cmp
jge
into
xchg
or
push
or
xchg
imul
fcmovnbe
ljmpw
jo
xchg
push
jns
stos
mov
lcall
popl
jl
pop
mov
sahf
outsb
addb
push
push
jno
sbb
ds
mov
mov
pop
aam
lcall
pop
cmp
dec
les
xlat
jecxz
cwtl
sbb
adc
mov
lea
xor
bound
or
xlat
ror
inc
sub
pop
out
mov
mov
loopne
cmp
ss
das
loopne
sbb
pop
idivl
sbb
faddl
cmp
xlat
cmp
cmp
or
dec
popl
daa
xchg
ret
int
out
popa
clc
outsb
int3
scas
or
sahf
ret
sbbl
pop
mov
lods
je
add
repz
mov
mov
cmpsb
or
xchg
das
dec
pop
lock
xchg
mov
pop
int
rolb
cmp
mov
and
lds
cli
jmp
add
gs
test
loope
es
jmp
xor
aaa
and
push
rcl
pushf
arpl
adc
in
dec
jmp
cltd
dec
or
push
bt
mull
sbb
xchg
xorl
xchg
lods
mov
mov
in
sub
xchg
jo
push
leave
inc
push
cmp
mov
adc
sbb
jl
push
sbb
sub
js
loope
cmp
daa
ljmp
push
xor
iret
mov
jle
ja
jge
push
leave
mov
repz
test
push
adc
sub
adc
push
push
pop
das
xor
out
mov
jno
lcall
push
and
leave
std
out
push
stos
lods
pop
jmp
lea
mov
inc
scas
dec
loop
pop
or
repnz
dec
xlat
mov
dec
js
mov
cmc
dec
ficomps
xor
cs
fisubs
std
orb
sahf
dec
sub
push
inc
sbb
stc
and
clc
dec
jl
mov
mov
push
xlat
lds
mov
mov
push
cmpsl
mov
outsl
push
ds
ret
out
cwtl
xchg
sbb
push
xchg
pusha
out
icebp
adc
nop
push
push
mov
jae
mov
lods
mov
cmpsb
lret
decl
inc
xchg
add
mov
int3
ret
mov
jmp
lock
lea
sub
repnz
mov
sbb
mov
adc
mov
in
xchg
rorb
leave
jle
pop
mov
cmpsb
ret
andb
sub
fmuls
xchg
push
mov
mov
stc
hlt
std
test
mov
imul
pop
dec
ficompl
push
inc
lret
jmp
mov
shl
in
arpl
out
dec
xor
ja
popa
mov
lds
pop
dec
sub
or
out
fdivrl
bound
inc
addb
mov
in
adc
xchg
notb
xlat
and
outsb
pop
push
in
fwait
adc
pop
lods
hlt
call
and
fnstsw
ficoms
or
cmp
cmpsb
ja
jmp
aad
rclb
mov
mov
shr
out
fucomp
cmpsb
xchg
ljmp
inc
cmp
pop
repz
xor
pop
dec
dec
nop
and
sub
int3
mov
pop
cld
xchg
shl
daa
aas
fcomps
jne
mov
jmp
xor
fimuls
out
out
ret
sti
xchg
not
pop
xlat
sub
sbb
inc
insl
popf
adc
and
jmp
scas
push
jo
clc
xchg
test
outsb
popa
mov
pop
cmc
add
stos
sbb
cmpsb
lods
pop
sbb
inc
addl
pop
mov
mov
daa
rorl
int
jmp
push
sbbl
not
icebp
mov
int3
or
movsb
fbstp
das
dec
pop
adc
movsb
xor
ret
pop
or
dec
cmp
cld
mov
sahf
daa
cmpsl
jbe
cmpsb
mov
adc
popl
aad
test
mov
sbb
jmp
in
shlb
out
movsl
lret
adcb
popf
sahf
and
add
je
in
and
mov
cmp
out
jno
into
fsts
outsl
sti
ja
mov
cltd
fistps
and
sub
call
stos
mov
inc
ljmp
enter
cmp
in
dec
clc
roll
jo
call
outsl
mov
sub
pop
icebp
add
divb
push
out
rorl
in
lahf
aaa
lock
cmp
mov
inc
adc
cld
add
xor
enter
pop
movl
int3
jae
add
and
fidivrl
xor
cmpsb
lods
pop
adc
in
loopne
push
xor
iret
and
push
adc
mov
push
push
bound
xchg
mov
addr16
mov
les
call
mov
sbb
loope
push
mov
sbb
mov
xor
in
mov
cmpsl
into
mov
push
xor
inc
xchg
std
iret
daa
fwait
pop
jno
jle
das
fst
or
mov
dec
enter
inc
adc
jo
add
pop
inc
push
push
jg
ss
stos
xchg
xor
sub
dec
mov
add
xor
lret
hlt
or
inc
jle
sahf
sarb
loopne
popf
sahf
flds
push
fldenv
xor
daa
es
pop
mov
dec
scas
mov
das
mov
imul
xchg
cmp
inc
cli
xchg
cmpb
mov
popf
cmpsl
mov
sbb
mov
xchg
and
sub
pushf
aas
or
dec
push
rcll
dec
jo
int3
test
scas
es
inc
enter
jmp
mov
or
add
mov
popf
dec
jo
ret
dec
fstpl
inc
xchg
mov
and
es
cli
lret
dec
xor
lods
or
in
insb
or
mov
fcoml
pop
mov
int
ja
inc
push
mov
pop
cmp
sbb
outsb
jmp
loopne
rcrb
mov
cmp
rcrl
push
flds
cs
push
sbb
dec
dec
mov
mov
insb
int3
mov
mov
cld
lret
sub
mov
xchg
xchg
aam
cmp
dec
or
push
shl
lock
push
jno
add
xor
pop
fcmove
mov
js
mov
or
cmp
and
push
lahf
scas
xlat
sub
insb
fsub
xchg
gs
mov
cmc
push
push
aaa
pop
or
arpl
bound
scas
xchg
mov
push
mov
push
ret
not
aas
int
mov
jg
xchg
cltd
xor
hlt
idiv
rclb
jb
push
sub
cmpsl
lock
mov
test
cmpsb
inc
shrb
and
pop
idivl
adc
or
lock
imul
mov
pop
sub
mov
jmp
mov
cmp
in
js
movsb
mov
fbld
xchg
js
aam
adc
sbb
adc
cmpsb
lods
or
and
mov
adc
out
hlt
shrb
mulb
adc
sub
sub
pop
out
jno
sbb
in
es
mov
pop
or
or
std
rcll
cmpsl
pop
loopne
xor
jne
in
sub
and
leave
mov
test
pusha
mov
add
mov
lods
jmp
mov
cmp
pop
mov
pop
out
ss
nop
cs
lret
mov
jbe
aam
inc
test
lods
sub
inc
jb
xchg
xchg
adc
shrb
repz
add
or
fwait
inc
bound
or
test
cmp
and
mov
dec
fs
nop
pop
icebp
sub
test
rolb
rcrb
add
and
addr16
pop
jns
add
decl
fbld
test
xchg
adc
loop
scas
xchg
adc
fildll
pop
push
lods
mov
je
xor
mov
fstpl
sub
xchg
mov
and
mov
mov
xchg
or
in
mov
mov
test
imulb
ljmp
insb
fisttpl
mov
hlt
sbb
adc
gs
shlb
jae
std
lahf
test
call
pushaw
outsl
push
jp
sbb
negl
outsl
mov
adc
push
mov
xlat
and
mov
stc
mov
xchg
dec
or
call
fwait
lock
mov
dec
mov
sbb
in
ret
mov
into
pop
pusha
jb
bound
mov
or
xchg
into
test
push
push
xchg
divb
test
jp
cmp
mov
rolb
imul
mov
dec
xchg
push
sub
or
out
sarl
in
xchg
mov
push
cmp
jmp
mov
cmp
mov
loop
test
cmpsb
push
xlat
pop
and
cmp
push
inc
xchg
mov
cmp
popa
out
and
mov
pusha
int
jge
sub
push
das
ja
inc
adc
pushf
aaa
aas
xchg
hlt
fdivrs
xchg
push
and
aam
stos
popf
repz
inc
fcmovbe
jecxz
std
call
sti
push
sub
sbb
jo
xchg
out
mov
sbb
leave
mov
pop
cwtl
aas
sub
in
pop
lea
mov
jo
xlat
push
xchg
mov
pop
jne
test
and
mov
xor
ret
das
fildll
icebp
insb
mov
das
into
push
xchg
fcomip
cmp
lock
cmc
sarb
fldl2t
inc
or
test
or
shlb
xchg
cld
lock
scas
movsb
sub
sbb
mov
shr
cmp
jl
adc
push
stc
sbb
push
test
flds
int3
sub
inc
call
out
dec
hlt
ret
mov
addr16
mov
aas
fwait
xchg
xor
dec
rcrb
push
sahf
fcmovnbe
inc
mov
sti
jne
sub
push
data16
test
add
pop
sub
jb
xchg
jb
push
pop
repnz
mov
stos
icebp
insl
ret
mov
jp
cmc
outsb
in
xchg
pop
and
jle
push
mov
xchg
sub
xlat
rorl
push
ficoml
mov
xchg
mov
jp
dec
push
aaa
rcrl
inc
cmp
std
xchg
push
add
insl
ja
mov
jo
mov
insb
imul
fimull
fucomp
loop
shl
push
dec
dec
mov
out
push
popf
scas
aaa
pop
out
mov
push
cli
sub
lock
cld
rclb
rcrl
mov
popf
rcrl
mov
filds
fcomps
sub
out
and
and
lock
fnstenv
lods
adc
call
shld
lcall
cmpsb
push
pop
ret
cltd
into
rclb
dec
out
out
xchg
push
les
aaa
inc
cmpsl
fsubrs
cwtl
lea
enter
stc
fs
and
cs
sahf
jno
jl
rcrl
mov
dec
or
jns
pop
shlb
rcll
or
mov
iret
das
push
mov
popl
add
mov
mov
andl
pop
xor
mov
mov
insb
mov
movsl
cmp
je
cmpsl
bound
inc
xor
jmp
push
xchg
nop
std
arpl
roll
imul
or
jl
push
test
leave
incl
xor
testl
test
dec
push
lds
mov
inc
push
es
xchg
imul
inc
xor
hlt
xchg
fildll
add
and
mov
lret
cltd
add
icebp
js
pop
rclb
leave
loope
jl
outsl
push
mov
daa
sbb
cmp
sbbb
lods
push
sbb
mov
lcall
and
pop
push
jmp
test
pop
push
notl
mov
push
adc
aas
mov
sub
and
shl
das
dec
inc
inc
jl
push
outsb
test
cmp
mov
mov
sbbb
and
push
xlat
lock
and
mov
xchg
xor
push
adc
imul
test
inc
cltd
sbb
cmp
jge
call
lods
cwtl
ret
cmp
icebp
dec
jge
mov
xchg
cmpsl
xchg
mov
mov
sti
push
cmpsl
clc
inc
dec
aam
in
pop
xor
cmp
and
xor
repz
clc
mov
dec
cmpsl
dec
cmp
jmp
nop
das
icebp
jnp
inc
xor
cmpsb
js
sbb
cmp
xor
sub
lret
shll
inc
movsl
jle
bound
jge
mov
mov
imul
out
pop
push
arpl
and
xor
dec
movsl
sti
js
push
adc
xchg
stos
pop
outsl
and
or
adc
leave
inc
and
jg
mov
stos
push
add
and
or
mov
loope
test
movsl
lods
out
inc
mov
pop
pop
xor
shlb
div
test
mov
push
ret
jg
shl
cmp
ror
pop
jno
loope
jge
shl
mov
cltd
and
ret
loope
pop
inc
icebp
int3
push
icebp
push
lea
dec
nop
cmpsb
shl
pop
lods
mov
jno
test
mov
push
ret
pop
mov
jge
test
rcrb
and
mov
in
mov
dec
popf
push
jle
fadds
insb
int3
adc
pushf
fmul
jnp
mov
inc
mov
aad
out
out
cmp
shlb
push
dec
ljmp
neg
fwait
pusha
push
mov
into
xchg
daa
imulb
sub
enter
test
jno
add
xchg
dec
add
jecxz
repnz
xor
fidivrs
pop
das
sub
sub
pop
lea
push
cmc
shll
xchg
adcl
pop
adc
sub
repz
inc
pop
mov
ret
mov
pop
int
inc
cmpsl
js
cmp
or
or
sub
mov
pop
mov
in
popf
adc
xorl
dec
xchg
dec
jle
sub
lret
xchg
mov
bound
lds
int
pop
sbb
sbb
cmp
mov
test
imul
leave
ret
jne
orb
lds
shlb
or
xchg
dec
dec
xor
jle
call
insb
ret
test
dec
xor
xlat
push
push
add
test
pop
sub
cld
int3
inc
xchg
cmp
leave
repz
std
sbb
mov
das
jecxz
fs
xor
dec
push
sahf
xor
mov
fdivr
jne
mov
adc
inc
sbb
dec
mov
mov
xor
mov
cltd
rolb
add
sub
push
jns
out
push
cmpsb
mov
jge
outsl
sarl
in
jne
mov
mov
xchg
stos
js
add
cmp
stc
jno
movsb
lock
xor
mov
aas
lahf
xchg
sbb
nop
cmpsb
mov
stos
lock
adc
fisubl
jmp
jecxz
insl
jo
sub
dec
leave
in
xchg
cmpsl
xor
xlat
pop
test
shll
dec
inc
sbb
push
sub
ljmp
xchg
in
jecxz
inc
inc
mov
bound
andb
dec
jns
testb
test
ds
out
xchg
and
mov
and
push
iret
int
fdivrp
cmp
out
pop
shll
loopne
push
cmp
shr
popf
in
mov
fs
add
cmp
mov
testb
xchg
jae
loop
nop
push
xlat
lock
stc
add
adc
cmc
outsl
sbbb
sub
sbb
mov
add
adc
inc
shl
pop
add
add
adc
xor
mov
shl
or
pop
cmp
jo
sub
outsb
jnp
mov
lret
pusha
xchg
cs
std
and
pop
push
inc
lods
cmpl
xchg
push
aad
loop
mov
adc
fstl
stc
jae
scas
loope
push
mov
movsl
push
fdivrl
lods
push
inc
inc
push
dec
inc
movsl
pop
jl
dec
or
pop
push
lock
or
and
jno
lock
fucom
fucomp
test
cmp
cmc
cli
pop
inc
outsl
or
das
pop
xchg
montmul
cmpsb
add
adc
testl
ret
mov
out
std
negb
repz
ror
punpckhwd
std
push
fdivrs
mov
sub
shrd
shll
inc
repnz
iret
dec
push
xlat
or
push
bt
ficoms
cmc
xchg
pop
dec
dec
imul
lods
cmp
sub
outsb
xchg
jge
fwait
xchg
pusha
sbb
jg
shlb
cmpsb
decl
inc
push
aam
push
sbb
pop
or
jns
frstor
iret
xlat
push
lock
xlat
push
repz
shrl
std
sub
sub
mov
aam
aad
sub
sub
jge
enter
sub
cmc
cmp
push
pop
adc
xlat
sub
icebp
cmp
cmp
rorl
pop
lcall
adc
clc
cltd
push
lock
fstpl
sub
nop
and
push
daa
dec
inc
add
mov
aam
sub
and
out
enter
cmp
pop
xlat
fiadds
mov
push
popa
bound
adc
inc
jg
sub
nop
test
pusha
mov
jg
ficoms
dec
insb
push
mov
mov
lods
dec
mov
test
sti
ret
mov
cmp
pop
sbb
and
loope
xchg
jp
sti
ss
dec
mov
and
scas
lods
and
pop
mov
mov
xlat
jo
pop
das
out
adc
js
je
mov
jo
pop
mov
in
cmp
std
lods
adc
xchg
notb
inc
mov
ljmp
push
mov
sahf
adc
daa
sahf
insb
in
je
and
gs
out
mov
mov
push
popl
lahf
or
adc
lcall
and
sti
stc
mov
push
clc
lock
dec
mov
out
mov
sub
adc
fstpl
in
andl
push
mov
lret
dec
lds
push
xchg
lahf
xor
rclb
dec
push
cmp
mov
ljmp
mov
mov
lcall
jo
imul
out
rorb
adc
jo
push
jmp
jmp
adc
jno
fsub
xchg
mov
in
aad
and
repz
shl
xchg
das
sub
hlt
inc
cmc
lds
mov
mov
aam
loope
into
mov
aam
je
or
in
adc
gs
aam
fldenv
pop
cwtl
dec
and
cli
roll
fwait
jns
mov
jo
pop
cmpsb
sub
cli
jg
jle
mov
loop
divl
fistpll
aaa
clc
popf
pop
out
std
mov
jbe
lods
outsb
lahf
add
inc
lret
cli
cmp
roll
lock
mov
or
push
sub
aas
mov
test
push
popf
jmp
xchg
loop
pop
daa
push
inc
filds
jno
inc
push
xchg
std
inc
mov
movsb
adc
daa
rol
inc
inc
popl
popf
cmc
and
iret
ja
icebp
adc
inc
mov
add
jno
imul
test
aaa
in
call
les
mov
sub
aad
mov
aad
dec
mov
push
iret
inc
mov
push
mov
mov
aad
push
imul
lret
mov
cmp
cltd
xchg
or
dec
jge
lahf
xchg
inc
popf
insl
cmp
rcll
psubsw
push
std
test
pop
lock
mov
xchg
mov
xacquire
inc
lret
sub
cltd
fisubrs
dec
inc
stc
cli
daa
sub
test
mov
test
push
xchg
mov
loop
cltd
out
rclb
pop
fistpl
fdivp
add
fists
mov
loope
stc
mov
cmpsb
das
fstl
cmp
inc
pop
xchg
je
or
pop
mull
mov
jns
enter
out
mov
push
xchg
rorl
and
jmp
xchg
mov
inc
in
xor
in
rclb
shl
lods
fildll
dec
xchg
xlat
cmp
add
xchg
shrl
lea
loop
pop
mov
popa
cmp
or
out
incl
ljmp
fsubr
movsb
iret
jp
in
fbstp
icebp
pop
movb
mov
cmp
popw
cmc
add
pop
cli
jg
js
fisubs
cli
iret
jnp
add
hlt
das
lret
cltd
mov
cwtl
push
or
movsl
push
call
lcall
scas
stc
mov
pop
inc
std
sbb
iret
mov
sub
shrb
lret
out
jmp
mov
lods
lret
or
rcrl
stos
adc
rorl
and
dec
fsub
gs
push
fisttpl
test
fdiv
movsl
rorb
rorl
sahf
mov
cmpsb
and
pushf
xchg
pushf
mov
ss
lods
pop
add
pop
cmpsb
cld
adc
fmulp
dec
pop
rol
outsl
jmp
addr16
cmp
in
je
lea
cmp
lea
jle
mov
sub
sub
mov
push
lods
push
call
or
test
dec
mov
pop
adc
jb
sbb
add
adc
lret
jg
and
aad
cmpsb
rorl
and
out
lods
arpl
call
insb
cwtl
add
cltd
and
in
popa
mov
cs
mov
repz
mov
push
mov
mov
lahf
movsb
mov
mov
sbb
das
ljmp
jl
and
sub
pushf
xchg
das
cmpsl
inc
insl
pop
sbb
mov
outsl
ret
mov
jb
lods
loope
inc
popfw
mov
inc
cmp
push
jg
popa
mov
inc
xor
pushf
leave
adc
cmp
lea
and
mov
jno
push
and
push
inc
sbb
lahf
adc
lea
push
loopne
add
shrb
in
mov
cmp
in
push
ret
int
jo
hlt
clc
or
cmpsb
adc
dec
jne
or
jb
push
iret
jnp
add
mov
nop
out
in
stc
xor
rcrb
mov
mov
dec
push
fdivrs
leave
cmp
xlat
and
sahf
js
movsb
xchg
push
aad
pop
icebp
out
js
push
pop
icebp
cltd
mov
cmp
mov
cwtl
adc
int
and
jmp
aad
fst
and
and
fbstp
fwait
pop
cmp
ja
scas
push
and
fidivrs
inc
pop
jno
adc
inc
mov
cmp
sti
mov
gs
ss
rcl
cs
sbb
dec
into
pop
fdivrl
iret
enter
stos
pushf
mov
sbb
jns
rcl
push
and
gs
les
sti
insl
adc
xorl
pop
out
xchg
jl
xchg
insl
rcrl
ja
dec
rorl
sbbl
xchg
lret
adc
test
jle
pop
test
popf
aas
das
lahf
je
fwait
cmpsb
xor
mov
xchg
repnz
or
cli
ret
jmp
enter
and
adc
mov
inc
push
in
popf
jl
jecxz
out
push
mov
push
jb
fs
cmp
jb
inc
out
insl
lds
dec
xor
dec
repnz
adc
pop
pop
icebp
sub
or
mov
fadds
call
or
test
addb
adc
push
lahf
jmp
repz
sub
mov
and
clc
sub
lcall
enter
push
lret
in
mov
sub
sti
jo
adc
jo
mov
adc
call
cmp
pop
movsl
aas
pop
negl
aas
jl
insb
cmp
jnp
dec
xor
sub
adc
inc
and
push
jb
gs
mov
or
loopne
push
xchg
test
push
icebp
pop
ds
dec
push
mov
and
aam
sub
mov
xlat
dec
dec
je
cmp
in
mov
ret
inc
mov
xor
pop
sub
faddl
mov
popf
xchg
fsub
shrb
popa
inc
test
inc
pop
pop
or
mov
sbb
movsb
sbbl
loope
nop
or
xchg
adc
shll
fdivl
daa
pop
pop
inc
dec
sahf
test
sub
dec
xor
or
test
clc
push
jg
mov
adc
roll
cmp
subb
push
pop
lahf
cmp
mov
or
mov
and
rolb
mov
xchg
ds
xchg
enter
jp
mov
sarl
pop
inc
pop
ss
and
shlb
mov
mov
das
shrl
jge
aaa
xchg
divl
punpcklwd
sbb
mov
sahf
test
leave
shrb
jb
out
fs
push
xchg
or
lods
insl
sbb
add
xchg
jmp
ret
ss
adc
cpuid
xor
cmp
inc
fsub
sub
sub
jg
in
cltd
sbb
sub
mov
xchg
cmp
add
out
push
mov
daa
popa
aam
jg
add
daa
xor
mov
test
nop
aam
clc
mov
cmc
adc
insl
scas
pop
daa
add
mov
stos
mov
pusha
xor
sbb
cltd
pusha
cli
adcl
xchg
jp,pn
xchg
icebp
mov
and
shrl
cltd
rorl
or
inc
je
sahf
or
test
mov
jecxz
std
in
add
mov
adc
scas
lds
scas
cmp
mov
add
je
xor
adc
repz
cmpsb
sub
dec
jge
ret
inc
push
out
fistpll
popf
adc
subl
movsl
adc
or
test
mov
pop
decb
push
pusha
or
mov
sub
out
outsl
test
pop
lahf
in
fnstsw
test
lods
aaa
push
shrb
sub
mov
mov
inc
adc
or
popa
or
cs
or
aad
and
out
mov
pop
adc
push
push
test
test
and
mov
mov
adc
shl
lcall
lock
xchg
ss
jle
push
and
sub
stc
cld
xchg
rcl
test
test
sub
xchg
rcl
aas
push
fcom
test
lods
les
mov
ret
inc
stos
mov
stc
add
dec
mov
sbb
jle
mov
insb
push
jnp
pop
inc
mov
bound
repz
jg
arpl
lret
lods
ret
aas
sbb
xor
jecxz
lcall
pushf
and
lea
lret
jmp
sahf
out
inc
ds
mov
rorb
or
icebp
push
bnd
xchg
test
push
xchg
std
rclb
idiv
add
mov
fstl
aaa
xor
out
rcrl
sti
mov
mov
repnz
inc
inc
pusha
inc
mov
ds
add
push
js
mov
add
xchg
ss
or
mov
sub
xchg
je
dec
pushf
xor
mov
int
testl
daa
adc
cmp
adc
pop
mov
aad
dec
or
mov
int3
in
shrb
push
push
xor
xor
inc
mov
into
out
jno
int
out
int3
jge
insl
xor
jbe
jmp
adc
xor
push
cli
loope
or
aad
aaa
dec
scas
and
mov
test
dec
imul
mov
push
add
popa
icebp
cli
xchg
sbb
or
xor
bswap
cwtl
ficomps
mov
mov
outsb
mov
fsubp
adc
int3
js
sbb
dec
mov
sti
dec
loopne
aaa
pop
aam
xor
cmc
mov
dec
push
jb
jb
mov
rclb
sarl
in
jecxz
push
dec
jb
push
popa
jno
insb
aam
or
cmpsl
in
xchg
clc
jmp
fcoml
lcall
mov
out
mov
rcll
mov
aad
sti
daa
jmp
idivl
movups
lock
or
mov
filds
outsb
out
push
pop
enter
add
leave
xchg
sub
pushf
rorb
or
mov
mov
sub
sub
pop
inc
daa
xchg
inc
out
cmp
mov
out
decb
jecxz
sbb
addr16
shr
add
mov
mov
add
pop
cmp
lret
jl
movsl
out
add
cmpsl
cld
adc
mov
inc
sbb
psubusb
sub
repz
dec
pop
push
outsb
lods
mov
lret
jae
sub
sbb
inc
mov
sub
leave
fstps
cmpl
push
in
outsl
push
adc
inc
mov
std
clc
dec
outsl
sub
sub
cmc
add
outsb
or
jae
or
mov
push
loopne
pusha
mov
jge
aam
push
cmpsb
xchg
mov
shr
lods
push
adc
push
adc
addr16
das
inc
xlat
jge
aad
dec
mov
divl
sub
pop
inc
push
std
add
pop
dec
repnz
adc
fs
xor
psubusw
pop
push
or
aaa
scas
push
and
out
inc
in
mov
rorl
mov
sarl
pop
jle
lahf
dec
push
arpl
xchg
and
add
and
jge
in
lcall
xlat
push
lahf
fisttps
sub
push
jo
cltd
mov
sub
pop
pop
or
test
pop
popf
pusha
jg
fcompl
jno
add
push
jns
xchg
jnp
inc
mov
cld
test
cmc
jbe
lds
jnp
fwait
insl
sub
nop
leave
mov
jecxz
push
pop
sbb
subb
add
push
icebp
xchg
or
in
lcall
push
shlb
fwait
sbb
fcom
daa
test
mov
adc
aaa
push
pop
test
mov
mov
push
decb
aaa
popf
mov
adcl
scas
aaa
jbe
jbe
fsubrp
fists
pop
mov
lock
fldt
mov
push
in
fldlg2
inc
fdivs
ret
xchg
jp
imul
add
mov
dec
or
inc
sbb
dec
pop
in
ss
dec
lahf
mov
sbb
adc
pop
repnz
leave
pop
lret
sub
call
rcll
decb
int
sub
pushl
popf
rorb
popa
mov
jmp
pop
int
popa
and
pop
lea
sbb
jo
adc
cs
sarb
fisubrs
xor
dec
xor
rorw
pop
pop
lret
cmp
stc
or
lcall
loop
xor
ret
push
pusha
push
cmc
adc
test
mov
add
and
insb
xchg
jle
inc
xchg
pop
js
shrb
mov
dec
jecxz
icebp
push
les
pusha
jmp
rcrl
xchg
aas
xchg
leave
mov
pop
inc
add
fnstenv
scas
pop
mov
or
fcoml
ss
jge
leave
inc
cmpsb
icebp
jg
pop
int
lds
fstpt
xor
ret
stc
push
pop
std
inc
push
xchg
das
dec
dec
xor
dec
ret
jge
popf
enter
popf
sbb
test
jp
fistl
test
rorb
divl
es
inc
dec
repz
in
mov
or
shll
pop
fsubrl
inc
xlat
mov
loopne
jl
sbb
test
lret
addr16
and
push
ja
daa
and
test
pop
fninit
adc
adc
mov
mov
push
add
rcrb
sbb
mov
pushf
lea
mov
lahf
scas
pushf
adc
or
test
hlt
add
jl
data16
lods
clc
loope
dec
or
xchg
jle
sub
mov
enter
mov
nop
dec
pop
add
ja
stc
add
sbb
pop
in
dec
leave
jge
and
sub
fdivr
mov
in
fbstp
xorl
clc
popf
push
scas
lock
pop
push
jmp
fmul
cld
or
adc
sti
aaa
fnop
sub
dec
pop
leave
push
push
pop
sti
lds
loope
fsubrs
mov
enter
mov
lds
mov
repz
fs
inc
sub
aad
mov
mov
lds
gs
sbb
push
sub
aad
mov
shr
mov
data16
inc
fsubrs
or
repnz
pop
leave
sub
inc
insl
xchg
mov
mov
xor
mov
cmovb
dec
and
xchg
sub
sbb
fadds
scas
fdivrl
push
jl
xchg
xchg
repnz
sbb
hlt
and
add
loopne
stos
es
cwtl
lahf
cmp
jo
adc
aaa
insb
mov
xor
std
insl
int3
int
adc
cmc
and
fidivrs
cld
lret
lods
jae
ret
gs
bswap
nop
sbb
iret
jne
aad
adc
das
dec
cmp
mov
loope
clc
cmp
add
lret
or
dec
jno
or
mov
xor
stos
xchg
sahf
mov
mov
pop
jmp
push
cli
addr16
jg
notb
push
fistps
nop
and
fs
stc
or
push
jg
add
pop
in
mov
and
dec
push
jp
mov
xchg
jae
nop
aas
inc
repz
repz
xor
pop
int
ljmp
and
jp
pop
mov
pop
orb
cmpsb
stos
fcompl
pop
and
cld
inc
cli
shr
movsl
mov
jmp
rclb
mov
inc
xor
xor
loopne
dec
test
push
sbb
insb
popf
into
mov
loopne
lods
jge
adc
pop
push
mov
sbb
int
inc
dec
out
inc
sbb
sub
adc
add
pop
testb
popa
pop
mov
xor
fcompl
or
ficoml
pop
aad
adc
sub
pop
ja
pushf
cmc
push
std
subl
inc
shlb
pop
test
cmp
pop
dec
add
std
ljmp
pop
stos
cmp
xchg
ljmp
je
and
dec
out
xchg
adcl
or
enter
test
shrb
inc
jle
add
vunpcklps
dec
mov
mov
cmpsb
addr16
inc
xchg
xor
or
vmaxpd
xchg
stc
dec
mov
mov
xchg
dec
push
rcrl
sub
push
jne
das
mov
lea
mov
aam
mov
cmovae
adc
jnp
inc
cld
mov
iret
cmpsb
xchg
lret
test
aas
adc
sub
add
inc
add
pop
xor
mov
loop
mov
test
fildl
mov
inc
je
inc
mov
data16
and
sbb
popa
les
insl
push
cs
inc
inc
jb
push
or
arpl
cld
and
out
jmp
sbb
shl
filds
sarl
mov
into
push
sub
cmp
mov
sub
notl
push
iret
ret
sbb
call
loop
mov
test
jo
mov
inc
mulb
out
or
and
push
mov
mov
test
mov
flds
jo
test
pop
and
mov
aad
sar
pop
cmp
adc
popl
pop
pop
mov
inc
and
jecxz
add
mov
xchg
and
cmp
cmp
add
lahf
cmp
rcl
je
cli
mov
insl
mov
movsb
push
xor
aad
popa
repz
ficomps
adc
inc
mov
adc
roll
arpl
out
shrb
push
mov
ret
mov
jl
aaa
push
mov
mov
push
rorl
in
in
pop
dec
in
fists
mov
bound
fmul
xchg
fstl
fldl
iret
jae
add
imul
adc
jo
cmp
lods
fwait
adc
lret
cmp
and
cmp
and
out
ljmp
push
dec
mov
insl
jae
fs
shll
rcl
mov
mov
jnp
push
push
out
or
mov
jb
or
adc
lods
and
ds
test
mov
xor
sub
fisubrl
bound
or
lea
push
rol
mov
sbb
dec
aam
pop
repnz
sub
adc
dec
mov
das
aaa
pop
pusha
rorb
push
mov
cltd
adc
sub
mov
and
mov
add
lods
js
imulb
jnp
xchg
push
mov
mov
cmp
xchg
mov
mov
dec
test
ljmp
rcll
xchg
mov
inc
mov
and
lods
lods
add
in
jl
ret
adc
rorl
inc
aad
xchg
cli
xchg
jge
mov
xor
inc
repnz
inc
mov
cmpsl
out
push
push
mov
push
in
mov
sahf
sbb
jno
xchg
in
push
std
leave
rcrb
das
jns
fst
adc
jo
cs
mov
into
push
fsubrs
shlb
aas
cmc
loopne
addb
xchg
xchg
mov
xchg
stc
push
repnz
mov
jmp
std
jno
inc
adc
rcrb
dec
call
xchg
icebp
and
jno
inc
test
pop
stc
pop
mov
jno
push
bound
and
imul
rorb
xchg
lea
xchg
add
sub
mov
ret
sub
pop
jno
mov
popa
ja
iret
xchg
aas
pop
stos
rol
mov
loopne
jl
or
mov
jle
push
test
mov
lahf
adc
mov
mov
outsl
jmp
mov
adc
rclb
std
jo
jmp
mov
push
leave
sub
adc
sti
xlat
lods
loopne
test
shll
insl
xor
xchg
mov
inc
cmpsb
and
iret
sub
je
jb
fdiv
loopne
je
outsl
lods
pop
lahf
sbb
inc
xchg
or
fs
adc
cwtl
mov
lret
xchg
or
xchg
xor
push
dec
jbe
les
testb
xchg
jge
ret
not
cmp
sbb
inc
mov
in
shlb
dec
adc
sub
mov
aaa
push
dec
out
dec
std
pop
daa
sbb
mov
cmpsb
mov
dec
xor
daa
gs
cmp
jle
mov
lret
repz
or
jne
push
pusha
imul
div
jg
cli
inc
dec
add
jl
push
jbe
xchg
mov
adc
sub
cmp
nop
adc
inc
xor
push
xchg
movsb
pop
xchg
mov
push
and
xchg
lret
xor
push
and
mov
push
cli
mov
lea
push
push
mov
aaa
outsb
mov
fiadds
push
stos
stos
jecxz
pop
jae
leave
aam
mov
fs
cmovno
popf
add
sbb
mov
mov
enter
fnstenv
es
mov
cmpsl
jns
xor
adc
repnz
popf
push
mov
imul
lods
sbb
sbb
adc
loopne
mov
dec
mov
push
inc
imul
inc
jbe
sbb
mul
xchg
ja
push
sahf
popf
sahf
hlt
push
test
push
test
js
in
push
lahf
iret
daa
out
fdivrl
push
add
sub
add
xor
xchg
inc
or
int
lahf
adc
push
clc
cmp
add
xor
lds
je
push
push
xchg
and
fs
push
push
xor
fldl
xor
sub
insl
mov
sbb
mov
push
add
sbb
push
xor
mov
xchg
mov
mov
xor
pusha
and
test
dec
out
jnp
ret
and
cmpsb
add
lods
lds
and
or
loope
rorb
test
add
pop
ss
mov
push
lock
adc
imull
mov
sarb
pop
stos
sbb
cmc
xor
inc
push
test
lret
inc
sub
ljmp
or
push
sbb
fwait
icebp
mov
jecxz
sbb
mov
int
jns
xchg
leave
ljmp
dec
scas
comiss
push
dec
cmpsl
int3
pop
scas
fdiv
fs
into
inc
push
dec
jle
sub
mov
fidivrl
subb
mov
leave
fscale
xlat
rcl
sub
push
inc
mov
mov
push
test
or
lahf
push
mov
insl
sbb
jnp
movsl
test
xchg
xor
in
imul
mov
pop
insb
push
int
aad
loop
pushf
out
mov
scas
xor
ss
xor
xchg
ja
or
test
imulb
xchg
pop
add
inc
pop
subl
adc
mov
adc
jp
push
mov
dec
push
test
into
int3
loopne
stc
adc
jae
pop
shlb
pop
adcb
pusha
imul
or
inc
sub
shlb
cmpsb
std
xchg
in
sarl
imul
sbb
xchg
pop
addl
idivl
imul
bound
push
pusha
test
pop
test
mov
jae
jno
mov
cmpsl
mov
rorl
int
dec
mov
imul
sbb
icebp
ficomps
aaa
ret
mov
outsb
mov
and
jl
and
aaa
lret
stos
pushf
mov
xor
test
cmp
scas
sub
adc
es
out
xchg
and
icebp
ret
dec
ret
fcomip
mov
aad
sti
shl
das
ss
rep
pop
sub
cld
fcompl
das
insb
sbb
mov
pusha
inc
in
inc
je
mov
dec
popf
jmp
or
fnstenv
fiadds
add
pop
push
xchg
sbb
inc
pop
nop
popf
cmpsb
sub
loopne
jbe
shlb
pop
push
add
icebp
mov
or
xchg
nop
or
lcall
jb
dec
pop
xchg
sbb
fs
js
andb
data16
push
inc
idivl
xchg
lret
insb
pop
xor
adc
dec
test
subb
mov
les
out
test
or
jge
jp
mov
bnd
adc
jae
mov
pushf
fnsave
call
jae
fsubs
inc
pop
ror
mov
jl
sbb
pop
inc
cmp
rorb
inc
addr16
sub
sub
xchg
call
fstps
int
loope
cmc
popa
and
rcl
xor
mov
mov
adc
dec
rol
mov
adc
xchg
jl
sbbb
xchg
aad
push
sub
outsb
mov
inc
sbb
xchg
daa
fwait
inc
movsb
xchg
in
push
xchg
and
enter
out
rcrl
jnp
and
or
dec
rep
dec
sbb
pop
repnz
test
sahf
nop
sbb
fs
add
ja
sahf
pop
inc
sbb
fmull
ljmp
repnz
arpl
aas
outsl
in
jne
xor
xor
test
jecxz
arpl
test
and
loopne
cmp
ret
scas
sahf
dec
repnz
enter
sbb
xor
rol
mov
outsl
xchg
dec
sbb
adc
out
sub
xchg
in
ret
inc
aaa
jg
shl
std
js
icebp
lea
in
cmpsb
iret
sbb
adc
in
lods
dec
fwait
cltd
jae
es
push
data16
push
jne
in
cmp
lret
addr16
sbb
pop
mov
push
mov
out
addr16
mov
leave
insl
int
stc
cmpb
loop
lcall
js
mov
in
and
cmpsb
data16
adc
out
or
mov
cli
ss
in
inc
loop
loope
add
mov
cmp
pop
aaa
hlt
pop
mov
int
or
xchg
inc
sub
movsl
inc
sub
pop
int3
push
out
enter
adc
fdivs
sbb
imul
dec
out
loope
iret
rcll
testl
pop
in
jo
shlb
mov
jmp
insb
das
bound
inc
jp
xor
mov
mov
sbb
enter
outsl
jno
adc
dec
shr
insl
jo
in
push
repz
dec
push
pop
pop
fdiv
and
push
push
in
pop
pop
hlt
inc
shll
daa
jmp
sub
leave
xor
mov
and
jae
filds
stos
cmp
out
mov
xor
xchg
cmc
mov
adc
loop
hlt
out
cmpl
jnp
ss
leave
aad
popf
sub
cmc
or
and
jge
insb
mov
cmp
push
cmp
mov
lea
and
rcrl
das
repz
das
daa
push
mov
popa
xor
hlt
sbb
mov
jmp
movl
inc
sub
adc
cmp
and
xchg
pop
stos
repnz
loopne
inc
popf
push
jno
std
push
adc
mov
lods
or
imul
and
jecxz
adc
mov
xor
movsl
push
mov
xchg
sbb
shll
mov
push
pop
ss
ja
inc
shll
pop
shll
pop
aad
fld
pusha
loope
mov
mov
lret
mov
pop
stos
aam
xchg
mov
leave
mov
xor
dec
in
or
cmp
bound
cmp
xor
shll
xor
jae
jne
cmpl
xchg
shll
pusha
inc
xchg
add
ret
test
mov
imul
xor
push
cmp
adc
jns
popa
sbbb
inc
and
pop
xor
addr16
mov
and
in
stc
out
inc
sbb
sub
mov
in
adc
stc
scas
gs
xorb
sbb
ret
inc
in
sarl
mov
clc
pusha
lods
push
mov
cmpsl
rolb
mov
xchg
mov
pop
xchg
les
dec
push
push
scas
imul
inc
jb
cmpsb
adc
cmpsl
fsubrs
jnp
inc
insl
pop
push
lods
xchg
push
call
sbb
pop
sub
cmpsl
and
out
xchg
testb
mov
or
sbb
scas
je
fwait
stc
mov
test
sbbb
rol
push
pop
push
mov
jae
push
into
push
xchg
test
ja
sahf
sbb
and
xchg
jb
adc
filds
lret
jo
sub
pop
mov
or
out
xor
adc
xchg
loop
jmp
ret
jmp
and
mov
movsb
mov
pop
adc
in
in
sbb
adc
mov
xor
mov
add
test
lods
xchg
jae
push
not
cltd
and
adc
nop
jo
sbbb
jge
mov
xchg
imull
ljmp
cld
adc
test
nop
insl
lea
in
sarb
pushf
dec
and
push
xchg
mov
lahf
cmp
or
les
pop
out
xorl
sub
push
xor
xchg
xor
adc
mov
pop
pop
clc
fwait
test
dec
and
push
or
and
es
mov
loope
cmp
jg
xchg
leave
sarl
cmp
cltd
enter
pop
and
lods
adc
cmpsb
aam
dec
iret
jge
sbb
scas
fistpll
rcrl
imul
leave
jmp
lods
xor
sbb
mov
xchg
rcrl
aam
leave
inc
mov
xor
cmp
loopne
sub
inc
mov
or
sub
fiadds
gs
or
cmp
ss
sub
je
mov
subl
rcll
and
aas
test
dec
xor
xchg
jmp
sub
outsl
repnz
stc
push
clc
mov
rclb
arpl
xchg
xor
lods
mov
xor
sub
adc
ja
pop
stos
scas
dec
dec
sub
sbb
lds
pop
adc
inc
loope
lds
das
push
jno
push
jne
jp
outsl
cmpsb
insb
inc
mov
insb
and
jno
lret
cltd
lret
mov
pop
mov
rcl
xlat
sub
inc
sub
xchg
lret
jbe
push
xor
push
out
negl
iret
sbb
rcll
mov
or
mov
shr
inc
push
mov
xchg
jns
rcll
or
pop
sbb
dec
xor
sar
inc
add
test
scas
lds
lods
push
inc
pop
push
and
pop
das
xorb
outsl
in
dec
popfw
push
dec
jo
inc
mov
into
add
jle
jecxz
mov
push
jl
std
inc
fisubrs
inc
jmp
ret
cmp
mov
ljmp
jp
mov
cmpl
mov
jno
aad
mov
fdiv
push
push
xor
pop
cli
clc
dec
xchg
popf
loopne
adc
dec
push
ret
push
out
lea
popf
in
ds
pop
popf
push
je
dec
pop
movsl
push
mov
pop
push
stos
mov
dec
fidivl
adcl
mov
and
sub
jecxz
jno
data16
mov
sbbl
pushf
add
fldenv
iret
xchg
mov
sbb
add
xchg
shlb
sub
iret
pop
adc
cmp
push
or
imull
fisttps
pop
jne
call
or
popa
ljmp
and
mov
loop
lea
aad
cmp
das
fnsave
push
fdiv
and
popf
ret
das
push
jg
test
pop
xor
inc
xchg
aaa
pop
jecxz
xor
push
das
inc
fwait
push
cmp
popa
shrl
jbe
mov
mov
in
out
add
mov
xchg
mov
jecxz
adc
sub
jno
js
mov
xchg
adc
dec
cld
add
mov
pop
into
dec
push
scas
popa
ja
das
ficoml
xor
movsb
clc
icebp
aaa
pop
in
adc
scas
xor
add
cmp
sbb
mov
ja
jle
add
stc
inc
xor
mov
das
or
push
xchg
stos
xlat
xlat
imul
and
icebp
jmp
or
lea
idivb
fidivl
out
xchg
lret
fwait
hlt
push
mov
mov
loop
nop
jbe
mov
dec
call
xor
lods
xchg
cmp
pop
mov
push
jmp
push
lcall
lret
inc
roll
shll
mov
push
mov
int3
inc
sub
or
mov
adcl
adc
cmp
dec
adc
repz
shl
js
push
and
dec
sub
sbb
xlat
jno
rcll
aaa
cmp
test
pop
aad
pop
pop
or
inc
dec
or
sub
mov
pop
call
in
ret
mov
mov
pop
sub
cmp
test
push
rcl
scas
stc
js
add
sbb
inc
into
push
iret
test
push
out
xchg
jmp
repz
sti
jne
out
mov
mov
jle
or
mov
or
inc
stc
iret
pop
std
cmpsb
gs
mov
cmp
mov
inc
jnp
pop
cs
jg
leave
repz
mov
gs
xchg
out
mov
or
mov
xchg
sbb
popf
mov
and
scas
sub
imul
leave
cmp
or
jnp
lahf
mov
out
xchg
mov
es
jns
rcrb
and
aam
add
mov
mov
sub
mov
lods
aad
test
adc
lcall
in
and
mov
jl
icebp
pop
inc
adc
test
movsb
xchg
jae
dec
lea
push
rcl
jp
hlt
jns
fbld
or
shl
fwait
lea
inc
daa
jp
sar
cmpsb
cmp
mov
jl
push
pop
jge
pop
lahf
loop
movq
icebp
jae
int
xchg
in
lret
or
mov
filds
pop
std
jecxz
push
lret
pop
ret
push
mov
out
or
and
mov
jno
sub
iret
in
sbb
inc
hlt
jp
lea
or
das
iret
inc
test
repz
rcrb
jmp
out
dec
push
fs
out
loope
pop
mov
call
xor
ret
pop
iret
movsl
pop
jbe
mov
pop
xor
les
test
dec
fdivs
push
pop
inc
push
xor
sahf
sub
vpacksswb
mov
fistpl
push
push
pop
pop
adc
cmpl
testb
sub
or
mov
and
fs
in
mov
icebp
push
jne
pushf
adc
fs
ja
inc
lahf
mov
sbbl
and
and
popf
in
jno
mov
fadd
hlt
shlb
cld
pop
idiv
icebp
adc
cmp
je
call
les
loope
stos
pop
lods
dec
and
or
les
push
push
jl
xchg
loope
or
addr16
push
dec
dec
inc
jmp
jle
push
popf
cmpb
das
nop
stos
enter
repz
jns
xor
xchg
pop
jecxz
fcoms
fucomip
rclb
adc
ja
pop
push
xchg
or
dec
or
sub
add
mov
fst
cmp
jb
out
mov
ss
pushl
mov
mov
cs
mov
icebp
or
pusha
stos
lret
add
aas
andl
out
pop
stc
sub
nop
jno
js
sub
xor
mov
cmp
mov
mov
cmovbe
lds
add
outsl
add
dec
jo
out
mov
inc
mov
jne
inc
xor
pop
lahf
out
mov
rolb
dec
fsts
idivb
aam
fists
lret
sub
cmpsl
stc
ds
decl
sub
popl
pop
lret
in
jns
repnz
push
stos
ret
push
iret
dec
in
mov
sub
xor
xchg
jg
rorb
leave
inc
insl
sbb
push
call
fcompl
lcall
adc
jb
enter
add
shll
popa
enter
jp
lret
push
out
out
insl
add
and
in
sbb
xor
ficoms
xor
xlat
dec
pop
insb
sub
fwait
xor
insl
sub
vpminub
stc
jecxz
xchg
mov
daa
repz
inc
pusha
push
sti
adc
or
jg
add
mov
fistl
jl
std
std
mov
sub
inc
add
movaps
adc
ror
in
aas
js
push
mov
fsts
push
pop
pop
mov
mov
pop
lret
sub
lahf
push
pop
add
jle
and
mov
orl
cmp
in
imul
roll
mov
mov
jg
ret
and
lret
icebp
or
sbb
jp
mov
mov
data16
fbstp
das
dec
hlt
push
pop
aad
test
fsubr
cltd
inc
xchg
mov
das
push
or
inc
jne
push
cs
sarb
lcall
mov
inc
sub
mov
scas
xor
je
mov
adc
jbe
out
aam
fisubl
rep
inc
pop
sti
ja
imul
hlt
aas
lds
and
sbb
push
int3
je
aam
int3
movsb
addr16
daa
aam
pop
adc
out
push
lahf
xor
in
stc
dec
push
or
pop
aas
push
aaa
mov
mov
xchg
movsb
shll
cmp
jno
or
push
push
cmp
dec
cmp
sahf
lods
mov
call
les
punpckhbw
rclb
imull
jne
insb
aaa
fisttps
and
clc
sti
inc
popf
shlb
pop
xchg
dec
pop
lock
pop
cmp
cmpsb
movsb
mov
jnp
hlt
mov
xchg
inc
mov
mov
ljmp
or
jmp
inc
cs
test
aad
mov
mov
pushf
ret
sbb
lret
mov
push
or
or
pushf
pop
mov
push
shll
xchg
call
pop
xchg
adcb
sub
insl
cmp
jae
jge
pop
dec
mov
mov
push
dec
mov
jne
testb
popf
add
cmp
sbbl
pop
rcl
xchg
cmc
add
pop
cwtl
mov
or
scas
out
in
pop
repnz
cmp
ljmp
cmc
fdivrl
jg
dec
pop
xor
lcall
movsb
pop
jl
inc
cmpsl
aaa
aaa
gs
sti
dec
or
jno
dec
clc
dec
jmp
popf
push
push
loopne
ljmp
pop
add
push
fistpll
aaa
push
testl
jmp
inc
lock
or
xlat
mov
inc
rcrb
fsubl
xchg
enter
mov
jl
push
cmp
push
adc
dec
fmull
jl
stc
mov
mov
sahf
jno
lahf
mov
xorb
inc
inc
cli
add
mov
xlat
mov
aas
out
std
hlt
inc
rcl
dec
into
in
test
in
jge
mov
xor
xchg
outsl
negb
sbb
rcrb
push
mov
outsl
xchg
pop
push
mov
pop
icebp
mov
xchg
jp
stos
xchg
testl
sub
dec
cmp
jae
leave
shr
sti
cmpsl
xor
wbinvd
dec
cmp
aas
push
push
stos
in
cmpsb
subb
data16
cld
shlb
shlb
pushf
jg
dec
mov
outsb
adc
pop
or
adc
out
mov
cmp
adc
insb
rcrl
push
outsb
jb
cmpsl
arpl
inc
cltd
add
sbb
cmp
sub
pop
mov
popf
outsl
mov
and
shlb
popa
jp
xchg
divl
and
out
cwtl
clc
test
je
xchg
aam
jno
add
fistps
sbb
nop
sahf
add
mov
mov
sub
fmuls
inc
inc
std
in
xor
rorb
aad
cmpb
rol
and
mov
push
clc
mov
aam
mov
movsb
iret
and
aas
arpl
shr
jecxz
pop
incl
xchg
movsb
insb
push
in
inc
in
jle
xor
scas
xor
adc
mov
adc
test
outsl
cwtl
mov
subl
dec
out
pop
fnstsw
push
or
icebp
movsb
sub
jne
mov
mov
mov
jo
cmc
je
push
movsl
pop
jne
aaa
movb
hlt
mov
push
out
cs
divl
jae
dec
out
stc
mov
lret
mov
sbb
loope
lea
xchg
jne
dec
mov
addr16
scas
inc
dec
mov
push
dec
mov
inc
imul
push
dec
inc
xchg
aam
lock
jns
je
cld
cld
enter
jmp
sarb
xchg
mov
sbb
rolb
inc
sub
out
faddl
jbe
pop
adc
jmp
mov
mov
mov
jge
ljmp
mov
pop
shl
fiadds
dec
test
dec
xchg
ret
ret
lds
mov
fsubrl
aad
lods
inc
repnz
stos
adcb
pop
and
faddl
mov
insl
mov
es
test
pop
jle
in
je
movsb
pop
inc
lds
sub
loope
push
shll
int
xor
mov
call
adc
mov
mov
and
mov
frstor
mov
mov
jmp
cltd
movb
repz
out
cmp
cmp
stc
test
inc
xchg
dec
aad
leave
inc
and
cld
les
xlat
mov
jae
mov
jns
adc
jae
pop
xchg
mull
into
std
daa
int
cmp
stos
fdivr
test
loope
iret
mov
push
fwait
in
movsl
movsb
faddl
and
test
movsb
xchg
inc
sub
call
gs
scas
xchg
sub
loope
jnp
cmp
bound
inc
or
mov
adc
imul
aam
sub
ss
sub
and
repnz
movsl
mov
xchg
cmp
popa
lahf
movsl
loopne
pop
shll
mov
loopnew
xchg
movb
ret
popf
das
rolb
lods
or
dec
push
imul
movsb
or
xlat
in
xchg
fistps
jg
lahf
les
and
out
out
cmp
mov
inc
mov
sub
push
notl
adc
in
pop
dec
dec
mov
inc
dec
xchg
add
lea
adc
dec
mov
xchg
fs
mov
outsl
push
push
mov
aad
je
mov
rclb
cld
sbb
aam
in
mov
sbb
pushl
push
je
lds
aad
loope
jmp
and
pushf
sar
jae
jb
inc
inc
repz
mov
sub
dec
test
repnz
mov
fnstenv
or
xor
mov
popa
insb
je
and
and
into
push
mov
and
push
push
xor
mov
fwait
jae
xor
and
inc
sub
lea
inc
jl
adc
jo
mov
pop
icebp
stos
push
insl
or
loope
adc
leave
push
ss
mov
push
adc
jle
jbe
xlat
inc
or
lods
jo
in
inc
ja
iret
aaa
movsl
dec
jb,pt
jbe
out
cmc
ret
idiv
loope
and
inc
inc
out
inc
pop
sbbb
adc
push
lret
out
rcl
mov
xor
leave
mov
or
in
push
leave
mov
adc
icebp
lods
dec
lds
dec
push
insl
out
push
mov
scas
sbb
rcrb
stos
scas
jb
sub
dec
test
mov
jle
lret
dec
xchg
scas
leave
scas
call
inc
xor
pop
pusha
cmc
push
shll
dec
mov
movsl
jns
adcb
jle
or
sub
int3
mov
js
dec
mov
filds
dec
es
and
adc
add
movsb
loopne
fxch
push
adc
stos
mov
mov
into
outsb
test
ja
adc
leave
insl
les
js
push
test
rcrb
push
outsl
xchg
insl
scas
loopne
push
pop
inc
pop
cld
cmpsb
jg
push
push
es
lock
xor
test
loop
stc
jg
call
jb
enter
data16
inc
pop
dec
cltd
push
push
sub
push
movsl
xlat
test
fidivs
cmpsl
aad
xor
aad
hlt
sub
pop
push
pop
subl
adc
leave
enter
gs
and
pushf
push
stc
into
ljmp
dec
cmp
fucomip
mov
ja
cmp
icebp
mov
lods
in
and
mov
sbb
pop
aad
mov
dec
psrlw
mov
add
push
and
mov
inc
fistps
aaa
push
add
cld
sbb
or
fsubl
mov
and
and
push
daa
popa
jecxz
mov
push
es
push
hlt
icebp
adc
loopne
sub
aas
adc
jbe
jbe
and
mov
lock
ret
lods
xchg
jmp
push
sti
dec
pop
jl
addl
scas
ja
movsb
fisttps
fldl
pushf
mov
sbb
iret
sub
mov
pop
jg
sub
push
mov
xor
jbe
aad
test
cmp
bound
inc
cmpsb
lcall
xchg
icebp
cmp
push
xchg
jmp
sar
pop
clc
push
mov
mov
jecxz
shrb
and
inc
fst
jbe
add
push
lahf
push
rcrb
push
movsl
std
pop
rorl
mov
pop
es
enter
push
aas
mov
mov
out
cwtl
sar
repnz
dec
xchg
orl
in
popf
mov
sub
mov
cltd
in
in
pop
out
adc
adcb
inc
ja
mov
fimull
cli
push
mov
rolb
jns
jb
xchg
xor
adc
lods
mov
int
mov
scas
pop
pop
push
dec
inc
jp
add
js
mov
sarl
popa
scas
ret
pop
pop
pop
sub
dec
repz
sbb
mov
dec
fisubs
in
sahf
test
les
outsb
call
pop
pop
cmp
xor
xchg
pop
dec
xor
add
fnstcw
sub
xor
bound
outsb
sahf
out
add
test
movsl
dec
fimuls
push
jno
push
stc
push
xchg
mov
or
jo
sbb
in
hlt
cmpsl
xlat
push
adc
lods
lods
adc
mov
leave
or
leave
cmovg
dec
fcoml
movsl
lock
loope
pop
xor
cltd
enter
shrl
adc
inc
shl
jo
test
rolb
pop
loopne
mov
test
arpl
mov
sub
push
cmp
iret
jmp
fldcw
shr
ffree
jnp
inc
jb
fmuls
add
inc
mov
pand
fcmovnbe
int3
dec
lds
call
push
sahf
jno
push
shlb
xor
push
js
dec
push
aad
aam
fistl
mov
cmp
mov
sti
shlb
test
outsl
sti
shlb
inc
movsb
sbb
sbb
into
aam
sarb
push
push
xor
or
push
into
add
mov
ret
mov
pop
cmp
mov
fdivrs
loope
add
mov
mov
mov
mov
lods
aad
mov
dec
leave
clc
and
popf
lret
int3
adc
cmpsb
dec
mov
jne
jne
aam
push
sti
sarb
scas
sub
fmuls
jmp
shl
arpl
repnz
not
in
or
mov
cwtl
or
inc
cmp
pop
sti
cmc
fsts
add
jmp
mov
jae
pop
mov
sbb
dec
sbb
sahf
nop
pop
xlat
jne
subb
aam
inc
mov
ret
jecxz
ds
repnz
mov
dec
push
sbb
ss
fsubp
cmp
and
adc
xor
fisttps
jmp
adc
mov
fisubrs
adc
jle
imul
mov
cmp
out
loope
inc
addr16
pop
pop
repz
pusha
popf
sbb
aas
mov
pop
test
cmova
addr16
scas
clc
in
loope
pop
test
out
and
sub
mov
test
push
push
cs
enter
sbb
push
stc
push
add
inc
jmp
inc
mov
mov
ljmp
cmpsl
add
mov
inc
jne
lcall
ljmp
das
mov
lods
stos
inc
shlb
cmpl
test
scas
sbb
cs
and
shlb
mov
jns
sub
sub
push
into
mov
jmp
or
stc
mov
adc
ljmp
and
into
adc
jo
popa
sti
lea
mov
mov
mov
mov
cwtl
add
test
adc
inc
mov
mov
sahf
sub
pop
adcb
push
fidivrs
push
xlat
push
pop
mov
inc
test
fbld
jne
stc
xchg
bound
mov
dec
es
push
in
or
mov
pop
mov
addr16
and
sub
jmp
testl
mull
ds
sub
lock
or
sub
sub
jns
fs
aam
sbb
aad
inc
pushf
inc
pushf
inc
and
or
push
adc
out
cmp
mov
fwait
lock
sbb
or
or
and
push
push
sbb
sub
mov
fisttpl
rclb
arpl
lods
orb
push
dec
or
insl
pop
mov
dec
and
movsb
push
mov
movsb
sub
dec
and
iret
xchg
test
push
xchg
jmp
xchg
cmc
jno
je
jb
call
pop
jbe
mov
pop
mov
jecxz
dec
mov
jp
mov
aas
out
fs
push
sbb
inc
aaa
mov
aaa
sbb
xchg
pop
popf
push
aam
xchg
js
pop
shrb
mov
jl
sbb
sbb
and
sbb
fdivl
and
adc
rorl
adc
scas
add
pop
adcl
imull
int
fldl2e
negb
add
leave
dec
cmp
lret
faddl
enter
pop
cmp
push
cld
jno
pop
adc
dec
mov
mov
pop
pop
mov
cli
dec
imul
out
ficoms
cld
xchg
popa
sbb
xchg
loope
testl
pushf
ja
dec
scas
shrl
jl
iret
xor
in
pop
pop
inc
mov
pop
aam
xchg
lds
out
fmull
lock
inc
adc
add
or
pop
xor
or
jae
pop
mov
outsl
lret
push
mov
repz
into
in
xchg
ret
fdivs
arpl
pop
std
leave
pop
shrl
push
shrl
loope
jp
aam
sbb
xchg
cmpsl
int3
in
in
mov
mov
clc
and
dec
adc
mov
dec
sarl
lods
out
xor
test
add
aaa
pop
outsl
cmp
mov
jle
loopne
fs
aam
lds
inc
xchg
addl
cwtl
iret
out
ret
arpl
inc
outsl
iret
test
jbe
outsl
scas
aad
icebp
ficompl
mov
xorl
mov
rcrl
dec
fisubrs
and
xor
inc
sbb
movsl
in
aas
adc
xor
adc
pop
out
jo
mov
cmp
xor
push
xor
and
mov
lea
mov
mov
push
jno
mov
insb
aad
xor
jecxz
psrlw
inc
lds
sbb
imul
dec
push
insb
rclb
int
cs
fidivrs
mov
movsl
lds
in
dec
pop
aam
aas
pop
loop
xor
or
mov
fldcw
mov
inc
mov
sub
adc
dec
mov
jo
dec
sbb
push
xorl
and
insb
xor
jmp
dec
cmpsl
ss
aad
lcall
insl
mov
xchg
out
aas
repz
in
pusha
or
push
pusha
sub
clc
inc
push
in
inc
dec
outsl
mov
fsubrs
dec
cmp
and
cmp
push
subl
and
fildl
enter
sub
push
call
xor
jecxz
fdivrs
jge
ljmp
mov
adc
jno
ss
fidivl
xor
inc
mov
xchg
pop
imul
imul
iret
iret
adc
sbb
and
add
ljmp
fdivr
adc
jbe
add
lret
add
inc
ret
xor
loopne
int
sub
pushf
js
cmc
daa
xor
insl
nop
mov
jno
aam
mov
shlb
out
or
fcompl
sbb
or
out
leave
insb
dec
xchg
std
jb
mov
and
mov
jbe
lods
inc
jmp
or
adc
xor
sub
xor
je
xchg
cmp
aad
leave
inc
lret
test
fldl
sub
and
ret
push
jg
fistl
or
xchg
aad
fldcw
leave
and
adc
sub
popa
push
ja
mov
ja
xchg
stos
xlat
stc
jae
jne
psrld
xlat
add
xchg
imul
popf
add
xor
jb
lret
xor
pop
lret
scas
stos
std
sbbl
add
shrb
sbb
std
sub
sub
push
add
frstor
dec
push
fwait
outsl
cmp
mull
popf
je
pop
xchg
je
ss
dec
jae
movsb
sbb
pop
rorl
gs
xor
push
dec
mov
into
sar
jg
lret
cmp
mov
mov
xor
fwait
rorb
stos
adc
out
imul
jmp
ss
pop
mov
hlt
dec
dec
hlt
lcall
dec
jg
cmp
lret
jae
pop
imul
jb
pop
xor
in
dec
sbb
shr
fcom
addr16
dec
dec
bound
inc
cmp
mov
je
jno
adc
sbb
jge
jmp
and
xor
sbb
inc
iret
cmpsl
test
cmp
pop
ror
mull
mov
mov
movsl
cs
push
std
outsl
jmp
cmpsl
pusha
gs
sbb
in
mov
bound
sub
stos
xor
inc
xchg
shl
lret
loop
xchg
jns
gs
vaddss
inc
lea
ja
ja
stc
inc
arpl
ret
adc
xchg
pop
out
leave
std
lods
test
cmp
fcomps
push
adc
sub
jbe
cmc
movsl
repnz
std
inc
mov
std
js
jb
je
jmp
xchg
cmpsl
adc
inc
shrb
popa
aad
stos
mov
aas
pop
adc
cmpsl
xor
and
sbb
pusha
ljmp
push
mov
sub
in
and
push
fbstp
adc
mov
cmp
es
pop
cmpsl
jge
push
mov
inc
pop
sub
push
sbb
jge
mov
std
int3
popf
add
icebp
adc
int
push
mov
pop
sti
sub
outsl
jb
shrl
popf
aad
xchg
ret
lea
subl
cmc
jg
inc
scas
movsl
in
pop
pop
fstl
jmp
sahf
outsl
jg
inc
push
popf
adc
in
rcrl
std
xchg
std
arpl
mov
dec
mov
cmpsb
or
data16
leave
jno
test
ficoml
testb
lret
gs
loopne
lods
adc
jl
add
in
pushf
lea
aad
inc
push
sub
add
inc
popf
clc
mov
ret
sbb
lahf
mov
add
std
adc
sbb
popf
nop
shrb
in
leave
push
adc
mov
jne
popa
xor
sub
fs
les
test
test
iret
leave
jecxz
aaa
cmp
pushf
sub
dec
imull
int3
xchg
add
or
xor
xor
jns
mov
inc
clc
fmuls
mov
pushf
movsb
cmp
scas
or
xchg
aaa
fcmovb
cmpsl
dec
std
xor
inc
idivb
inc
push
inc
xor
aas
xor
lods
sub
adc
and
xchg
inc
cmpsl
and
mov
inc
outsl
outsl
mov
lret
cwtl
pop
push
push
jmp
mov
lods
pusha
mov
inc
xor
xlat
pop
loopne
dec
mov
mov
xor
rcll
cmp
add
js
or
lret
jbe
add
and
test
jg
or
sub
mov
mov
jge
aam
xchg
xchg
dec
inc
movsl
lock
lock
imul
xchg
mov
cmp
sub
mov
sbb
jl
iret
les
repnz
adc
scas
mov
inc
inc
and
idivl
push
lods
outsl
in
and
lods
in
xor
sbb
sub
cmp
xor
addr16
xchg
sar
cmpsb
xor
add
loopne
ja
sbb
fwait
xchg
cmova
int
mov
xchg
in
stc
push
test
inc
outsl
rolb
push
daa
or
rcr
dec
cmp
mov
test
pop
cmpsl
push
mov
dec
jle
loope
inc
in
lock
push
jne
jg
mov
je
xor
les
mov
pop
adc
lret
mov
push
pop
int3
icebp
test
cs
mov
out
push
adc
in
mov
rcr
jae
sbb
sbb
roll
imul
rclb
xor
xlat
push
mov
pop
in
aas
fdivl
dec
ss
cli
xor
test
push
cmp
pop
repz
fisubl
addr16
imul
push
std
inc
pop
pushf
cmp
js
mov
jno
out
mov
push
test
shll
stos
mov
push
sub
fnstenv
xor
jg
pop
push
sahf
unpcklps
mov
sub
xor
mov
inc
cmpsb
aad
push
imul
sbb
or
lock
mov
ja
adc
stos
adc
or
jns
adc
xor
stc
ja
mov
stc
dec
dec
jae
mov
std
jne
jge
test
pop
xchg
push
outsb
test
push
cmpsl
inc
lods
leave
mov
mov
shrl
cmpsb
test
adc
mov
lock
push
rolb
test
popf
pop
out
mov
xor
clc
xlat
push
and
adc
repnz
iret
stc
and
mov
mov
cmp
mov
push
push
dec
pop
jnp
mov
es
fmuls
pop
test
or
mov
gs
ljmp
sbbl
adc
inc
mov
mov
inc
insl
enter
leave
xorl
imul
sbb
cwtl
xchg
mov
sarb
test
aaa
test
roll
cmp
pop
pop
sub
cmp
inc
inc
fiadds
gs
test
outsl
pop
dec
pop
ret
repnz
movsl
jno
cltd
adc
imull
jns
lds
pop
adc
mov
adc
mov
insb
push
pop
push
in
mov
dec
cmp
insb
pop
or
sub
adcb
mov
or
push
out
cmpb
xlat
js
xor
jg
fs
sub
jne
repz
sbb
xor
sub
sub
or
mov
and
jecxz
sbb
aam
mov
int
cs
jle
in
cmovns
or
inc
jl
cmpsl
cmpsl
pop
push
lret
xor
and
mov
push
movsb
call
cmp
adc
mov
lea
jp
mov
ja
cs
iret
pop
int
jg
enter
mov
loopne
xchg
sub
movsl
inc
test
sbb
loopne
mov
idivb
test
inc
mov
roll
fisubs
pop
dec
sbb
pop
dec
xchg
mov
inc
fdivr
insb
inc
dec
sbb
lds
xchg
mov
cwtl
add
sub
or
jle
ja
mov
hlt
loopne
mov
orl
sub
pop
xchg
lods
sub
mov
jg
dec
sahf
leave
push
cli
cmpl
and
out
movsl
shlb
popl
mov
lahf
je
ljmp
repnz
jno
push
mov
mov
in
or
jbe
jno
sbb
xchg
jo
outsl
cmp
lret
mov
int
icebp
ud2
dec
int3
mov
or
xchg
push
and
xor
xor
je
mov
inc
sar
cmc
add
inc
out
into
mov
xchg
sbbb
fwait
nop
imul
das
fbstp
xchg
push
icebp
xorl
push
mov
or
jne
popf
ds
iret
clc
sub
dec
dec
decl
xor
sbb
xchg
pop
rorb
out
push
repz
cmpsb
cld
leave
mov
imul
je
jno
xor
xchg
pop
mov
and
cmp
mov
and
xor
ror
sar
pop
ret
push
es
shll
ljmp
jmp
data16
cmp
mov
pushf
sarb
pop
negl
mov
cmp
cwtl
popa
and
jnp
pop
jb
aas
andl
xchg
sub
pop
add
pop
sub
jne
lret
or
inc
mov
mov
in
cli
je
lock
xor
stc
inc
adc
lods
data16
movsb
jl
clc
cli
xchg
mov
imul
jb
add
adc
stc
lock
mov
dec
dec
scas
mov
push
test
in
pop
insb
jmp
xor
pop
adc
popa
testb
jnp
sub
inc
dec
sbb
fs
loop
inc
lods
mov
push
jns
mov
pop
hlt
popf
test
xchg
jge
mov
jae
push
das
push
hlt
xchg
sbb
ljmp
pop
cmpsl
fstp
popf
sub
push
hlt
xlat
xsavec
xlat
pop
testb
lret
jge
mov
sub
mov
addr16
repnz
call
out
rcrl
dec
test
lods
jno
mov
inc
mov
or
ja
icebp
aam
jge
iret
jl
cmpsl
faddl
subl
cmpsb
stos
xor
add
push
and
stos
xchg
je
or
jne
leave
adc
aaa
and
pop
mov
int
roll
push
int
mov
adc
repnz
jg
aam
cwtl
push
push
mov
nop
movb
jl
and
push
idivb
sar
adc
in
enter
das
cld
sbb
sbb
adc
jne
movl
rolb
std
frstor
add
cmpsl
jg
icebp
inc
icebp
sbb
and
sub
movsl
test
repnz
ret
pushf
iret
xchg
outsl
orb
iret
cmp
pop
xchg
push
in
das
xor
mov
popf
mov
xchg
rcrl
test
fists
inc
mov
mov
adc
fwait
xor
fwait
pushf
mov
jge
adc
inc
and
shrl
pop
pop
inc
cld
add
aam
or
int
mov
jbe
fstps
sbb
clc
lret
lock
shl
ror
dec
scas
mov
fstp
test
sub
jmp
and
insl
fs
stos
ret
pop
sub
jne
mov
xor
icebp
pop
into
adc
mov
out
insl
jne
mov
frstor
cltd
movsl
testb
and
fs
mov
jge
or
outsl
sbb
stos
lcall
xchg
push
or
andl
xchg
lods
push
push
push
test
enter
jno
push
xchg
sub
ds
decb
or
add
icebp
out
mov
sub
repz
cmp
test
and
sub
not
add
fnstenv
lahf
les
out
push
pop
push
push
leave
inc
xor
ret
xchg
filds
cwtl
ja
rorl
sub
or
push
div
loopne
xchg
mov
dec
outsb
pop
pop
mov
repz
dec
rcll
xchg
mov
push
add
rcr
lock
gs
sti
and
cs
andb
jmp
sbbl
xchg
mov
in
rcrl
dec
mov
shlb
add
lods
loope
and
daa
sbb
out
jmp
xor
pop
pop
inc
and
jb
jge
mov
xor
clc
cmp
add
jns
pusha
dec
arpl
lock
and
jnp
dec
hlt
sbb
add
leave
mov
cmp
aam
mov
jo
or
inc
add
dec
jbe
sahf
stos
and
jb,pn
sub
lcall
cmpsb
shr
out
pop
ret
shll
mov
push
fstp
lahf
mov
push
iret
mov
xchg
test
cld
test
cmp
add
stos
les
sbb
adc
out
hlt
adc
jg
aam
cmpsb
xor
xchg
scas
mov
push
test
and
add
aam
pop
popa
cli
dec
or
pop
out
insl
jo
or
mov
and
or
fs
fldenv
fsubrs
leave
cmp
out
dec
inc
stos
mov
and
jecxz
mov
or
notl
xchg
icebp
in
sbb
and
adc
inc
mov
mov
icebp
mov
jno
stos
mov
xchg
lret
add
bound
cltd
sbb
loopne
aas
adc
xlat
sbb
enter
aam
jne
inc
hlt
out
icebp
mov
push
sarl
inc
rcl
pop
push
push
mov
push
fimuls
in
and
stos
xchg
sub
push
insb
imul
inc
pop
ficoml
hlt
int
fstpt
sahf
push
sub
testb
mov
into
mov
shrl
lods
push
pop
inc
xor
sbb
inc
xchg
pop
cmpsb
and
nop
xor
add
fs
xchg
stc
mov
cmp
sbb
ret
fdiv
into
add
jg
lahf
jmp
call
or
adc
aam
rcrl
pop
xor
fldt
cmpsl
ret
inc
ja
mov
test
push
stc
jle
jmp
fldt
sbb
gs
fst
add
sub
pop
in
movsl
xchg
pusha
stc
inc
sbb
repz
push
rcll
mov
xchg
mov
xor
push
cs
jle
cmp
adc
xchg
xchg
popf
repnz
jo
or
stos
andl
outsb
mov
inc
xchg
ljmp
jo
cmc
icebp
into
pop
xchg
pop
iret
popf
add
cld
fiadds
pop
adc
rorb
cmc
int3
mov
out
clc
cld
pause
fstp
roll
xchg
cmpsl
shrl
ja
cld
in
in
push
lret
lahf
popf
cmpsb
in
mov
or
les
mov
imul
sub
lret
xchg
push
xor
cmp
xor
xor
xchg
dec
jge
adc
scas
sub
rclb
outsb
ljmp
pop
sbb
sbb
push
add
loope
outsb
pop
mov
aad
jp
cld
push
cltd
repnz
adc
addr16
adc
or
cld
jb
insb
test
xorl
jmp
mov
and
pop
aam
in
add
mov
sub
push
lret
jo
call
pusha
xchg
adc
iret
leave
xor
fsincos
lock
jp
jb
inc
roll
or
mov
adc
lret
dec
push
pop
mov
push
xor
pop
movsb
and
xorl
scas
dec
sbb
and
js
shrl
and
adc
rcrl
int3
clc
aad
lds
inc
xchg
gs
loop
mov
push
lods
inc
jns
or
jmp
movsl
lea
dec
dec
add
inc
stos
icebp
ret
fwait
imul
out
push
cltd
fdivrp
cmpsb
nop
out
push
push
ret
repz
mov
jle
jg
scas
aam
and
push
push
push
gs
cmp
xchg
push
cs
iret
sbb
or
aam
cmp
pop
ss
mov
fwait
aad
and
fdivl
push
pushf
stos
jnp
mov
xor
or
lret
add
js
inc
and
rolb
sbb
frstor
cmp
inc
outsl
adc
cmp
cmp
xchg
xchg
sbb
pop
push
es
adc
cli
icebp
lock
sub
and
dec
pop
int
push
cmp
cmp
pop
push
call
sub
mov
jge
xor
and
adcl
icebp
or
leave
sub
shlb
jmp
enter
pop
out
xor
pop
aas
add
fiadds
dec
lods
mov
pop
cmp
aam
cli
mov
xchg
jle
loope
lods
mov
pop
inc
fistpll
pop
int3
and
andb
xor
mov
cmpsb
add
pop
xchg
or
in
or
push
dec
fidivrs
sbb
adcb
outsl
jp
mov
push
pop
out
incl
lret
and
or
repnz
dec
std
jmp
push
fwait
or
call
sbb
and
cmc
les
mov
inc
push
insb
dec
lock
callw
ja
sbb
scas
sbb
dec
mov
cmp
pop
cwtl
mov
roll
xchg
ficoms
icebp
jmp
icebp
pop
sbb
lret
sbb
push
fucomip
and
jg
nop
add
and
xchg
push
pop
jns
or
mov
jmp
dec
sahf
ret
aas
or
loop
lea
test
bound
xor
cmpsl
ljmp
jno
gs
and
lahf
pop
xor
pop
repz
dec
push
mov
jp
lcall
xchg
add
dec
mov
icebp
flds
dec
fs
scas
imul
loope
xchg
jmp
and
cmp
cli
pop
mov
inc
jp
fildll
aam
inc
fs
idivb
push
iret
sub
icebp
jno
addr16
cld
lock
outsl
pop
push
jne
push
ret
mov
or
push
mov
jg
mov
stos
ss
leave
pop
dec
ss
sbb
into
cwtl
cld
adc
ret
adc
addr16
pop
cmpsl
add
lds
adc
pop
aad
xor
fstps
adc
cltd
cmp
repz
adc
lods
stos
inc
push
push
jbe
je
or
cmp
cmp
into
xchg
mov
in
push
push
cmp
ljmp
popf
popf
int3
push
imulb
jl
jmp
scas
dec
sbb
sarb
or
lods
inc
inc
icebp
lret
jge
subb
adcb
insl
pop
mov
push
std
xorb
or
cld
data16
cwtl
sbb
pusha
dec
scas
stc
out
fsubrs
test
mov
mov
outsb
das
ja
sahf
sbb
pop
faddp
pop
or
int
add
dec
and
sub
xor
xchg
xor
popf
pop
daa
mov
inc
imul
xchg
cmpsl
inc
and
rclb
addr16
out
push
pop
inc
dec
repnz
dec
add
mov
ljmp
es
arpl
mov
cmpsl
pop
test
xchg
mov
cmp
mov
xchg
jge
lcall
push
dec
imull
pop
movsb
dec
test
jl
dec
les
lea
jno
inc
add
push
mov
inc
xchg
push
aaa
xchg
xor
adc
aam
push
fdivl
sbb
outsl
in
push
aam
pop
push
out
add
or
or
mov
inc
cmp
jle
dec
push
push
pop
xchg
pop
inc
movsb
mov
dec
les
push
push
or
fnsave
mov
sbbl
xor
imul
push
cmp
outsb
sub
mov
dec
out
dec
pop
aas
dec
jg
outsb
push
mov
jl
add
mov
mov
pusha
repnz
outsb
pop
imul
mov
mov
xchg
stos
adc
cwtl
pop
sti
shlb
nop
inc
cmp
mov
out
outsl
push
ss
outsl
add
jl
inc
mov
push
cmp
aad
bound
in
test
iret
popf
dec
cmpsb
cmp
jnp
ja
mov
and
xor
cmp
adc
adc
iret
or
adc
xchg
rclb
xor
loope
aad
loopne
sbb
or
push
push
lds
ret
das
je
mov
mov
scas
dec
xchg
jae
or
xchg
jnp
cmp
std
fs
mov
mov
out
dec
out
xor
iret
ss
inc
mov
lock
das
js
mov
fsts
ret
xor
push
test
add
jg
sub
adc
mov
mov
add
or
sbb
roll
test
or
mov
lret
pop
out
enter
lds
popa
cld
comiss
sub
ds
ljmp
lret
int3
adc
mov
fnstsw
pop
leave
cmp
xor
or
gs
mov
xor
sub
iret
ds
and
loop
push
insb
push
mov
adc
insb
and
dec
lret
scas
mov
mov
or
sub
jnp
das
xchg
fcomps
lock
hlt
mov
pop
sub
stc
shr
and
jmp
test
loope
aaa
popa
rol
dec
ficoml
pop
mov
fneni(8087
call
mov
sarl
cmp
mov
aam
aad
cmp
sbb
lods
stos
std
jne
add
lods
notb
add
outsl
pop
lds
insl
cmp
pop
push
add
test
pop
lods
mov
or
cltd
hlt
adcb
xchg
sub
push
inc
ds
hlt
pop
int3
hlt
sub
rcr
inc
test
popf
lock
xchg
in
lret
lds
out
ret
dec
ljmp
xchg
es
sbb
je
pop
cltd
push
jg
or
cmp
int
cmc
push
insl
je
jae
sbb
sub
mov
sub
dec
test
shlb
or
xchg
mull
sarb
or
lret
adc
cmpsl
mov
or
inc
sub
push
loopne
jns
inc
dec
xchg
xchg
sub
cmovno
sub
jne
out
mov
or
push
pushf
fists
ficoml
subb
cmp
out
call
cmp
pop
sub
mov
xchg
in
fbld
out
xchg
mov
subl
adc
pushf
and
movsl
out
jns
movsb
dec
jle
sbb
mov
xchg
sahf
cmc
out
mov
jns
and
push
addr16
addl
out
fldenv
fstps
cmp
mov
test
loopne
addb
fildll
fwait
es
std
shll
incl
inc
xchg
lods
and
nop
and
mov
das
adc
inc
cli
rorb
pop
or
jmp
xor
in
add
pop
push
fisubrl
jae
mov
andb
inc
aad
ret
dec
mov
add
adc
aam
icebp
cmp
xor
push
sub
lret
addb
loopne
lods
shlb
and
call
inc
jns
mov
nop
or
sbb
mov
cli
aad
lret
cmp
push
sbb
cmp
cmp
fwait
inc
cmpsb
in
outsl
mov
sbb
jae
test
lock
test
test
xchg
mov
xchg
mov
push
jl
loope
or
popf
icebp
xor
dec
mov
icebp
cmc
ja
jmp
fbld
test
out
popf
mov
adc
rolb
xchg
pop
scas
mov
jmp
inc
lret
lret
dec
lds
scas
data16
adc
es
fcmovu
lods
fstpt
dec
aad
mov
movsb
lcall
jmp
xor
imul
or
lret
xchg
lods
push
jae
loop
xchg
sbbl
mov
pop
fmul
cmp
xor
popf
hlt
mov
lret
subb
fistps
js
xchg
in
mov
icebp
inc
clc
es
pop
cmpsl
nop
icebp
stos
iret
inc
aad
aaa
sbb
and
arpl
sub
fldl
movsl
bnd
mov
add
push
call
jnp
mov
sbb
pop
fists
and
jge
and
jae
ficoml
dec
inc
in
push
dec
mov
outsb
adc
aam
push
xchg
fucomip
dec
cmp
mov
sti
inc
xchg
divb
popf
lcall
fisttpll
lods
clc
adc
push
out
stc
stc
add
push
pop
mov
xor
add
fsts
xchg
popf
scas
loope
push
das
inc
inc
les
jne
sbb
adc
xor
or
or
jge
aaa
jmp
or
test
shll
icebp
sbb
arpl
orl
and
mov
cs
fsubs
jbe
push
mov
mov
bound
inc
lcall
lods
in
push
push
inc
jmp
in
cwtl
fdivs
add
xchg
mov
xchg
pop
and
std
pop
cli
add
out
inc
scas
bound
into
in
jp
std
pop
pop
adc
loope
xor
jno
scas
sub
push
leave
mov
push
insl
scas
lods
shll
mov
and
adc
inc
popf
test
imul
es
jmp
fstpt
in
imul
xchg
lock
and
cmpsl
popa
subl
out
mov
jno
mov
sub
add
xor
mov
int3
inc
cmpsl
in
ja
in
jae
imul
cmp
sub
ljmp
outsb
sbb
sub
lods
jb
push
or
iret
add
xor
mov
and
shll
inc
repz
lret
test
sarb
sbb
std
loop
scas
lahf
xor
mov
dec
sub
dec
sub
int3
pop
jno
push
mov
mov
fwait
addb
lret
ds
mov
mov
mov
push
jae
jmp
dec
test
cld
lahf
pusha
dec
cmpsl
cmp
lret
pop
dec
or
xor
shrl
cmp
inc
pop
add
sub
call
loop
adc
outsb
xchg
and
out
nop
xchg
ret
add
xor
and
push
mov
dec
add
leave
pop
movsl
in
push
pop
sti
xchg
into
or
mov
shl
mov
dec
mov
fs
stos
sub
sub
jns
cmpsl
xchg
xor
xchg
adc
mov
aaa
inc
mov
xor
cmc
or
aas
push
mov
aas
leave
ss
movsb
cmp
outsb
rcrl
inc
sub
rorl
lds
and
popf
stos
negl
fsub
mov
inc
rolb
es
cs
data16
sub
push
dec
fwait
ds
loop
shll
mov
mov
xchg
inc
jb
int3
dec
pop
mov
mov
loopne
lock
pop
mov
sbb
outsb
pop
test
cmp
arpl
insb
pop
xchg
mov
push
mov
insl
sub
fs
out
divb
cwtl
pop
lea
lcall
rolb
cmp
gs
mov
inc
fdivp
shl
mov
push
pop
pop
repz
fisttps
dec
cmpsl
cmp
xorb
xchg
sbb
adc
mov
xor
sbbb
inc
jne
lcall
mov
mov
mov
adc
sbb
nop
add
out
and
xchg
loop
pop
test
ret
dec
xor
and
sub
fdiv
adc
jb
jg,pt
pop
std
lahf
js
xor
rcrl
sbb
sub
xchg
test
insb
mov
in
jp
cwtl
popa
adc
popf
std
inc
and
mov
sbb
int3
xchg
sarb
fimuls
inc
mov
ljmp
and
mov
or
xchg
xchg
adcl
mov
mov
ret
pop
pusha
int3
push
push
mov
dec
into
es
push
dec
push
jl
add
jne
jmp
mov
in
scas
mov
jne
filds
in
xor
test
dec
sbb
test
arpl
pusha
bound
cmc
jb
arpl
mov
test
fadds
dec
jl
into
das
mov
cli
fdivrl
and
lret
stos
xlat
add
mov
out
xor
cmp
test
xchg
test
out
adc
add
ret
xchg
and
outsb
aad
pop
jo
int
dec
and
jl
jmp
call
sarb
lods
mov
sahf
sahf
fnstsw
std
and
mov
int
inc
stc
pop
icebp
sub
lds
inc
cld
ja
jle
add
add
mov
and
jno
push
mov
sub
push
push
push
addr16
fidivrs
jecxz
pop
lcall
or
addr16
mov
lahf
mov
dec
movsl
scas
or
cmp
and
mov
pushf
pop
sti
mov
push
pop
adc
ret
mov
and
mov
and
push
aaa
scas
mov
jns
pop
out
sub
and
lcall
dec
jmp
loop
out
and
ret
pushl
cmpsl
jo
repz
sbb
daa
or
sbb
jnp
rcrl
pop
add
adc
pop
fwait
cmpsb
js
imul
jg
xlat
mov
neg
cmc
mov
cmp
loope
xchg
shll
lods
lahf
mov
mov
and
pop
or
push
xlat
outsb
ljmp
addl
push
dec
test
loopne
lret
sbb
das
inc
jmp
jmp
mov
test
jbe
jns
notl
js,pt
xchg
add
lods
cmp
add
adc
xchg
pop
inc
adc
mov
inc
inc
int3
push
test
push
repz
xchg
insb
movsb
inc
xor
and
movsb
sub
xorl
mov
hlt
stos
lea
push
jno
add
pop
into
popa
les
mov
jbe
jns
or
in
or
js
xchg
jle
jns
arpl
xchg
stc
or
sub
push
inc
pop
cmp
mov
pop
out
adc
pop
add
mov
leave
mov
inc
adc
adc
hlt
cmp
cli
fdivrs
pusha
xor
fwait
adc
inc
divl
pop
push
test
push
pop
adc
mov
sub
mov
pop
pop
or
incl
shl
inc
push
pop
mov
or
mov
aam
or
push
out
in
dec
mov
shlb
jg
pop
outsb
push
aam
adc
in
stc
shr
adc
jno
mov
test
sbb
aam
cld
popf
imul
inc
leave
das
xchg
mov
pushf
sti
cs
or
sub
push
stos
popf
jno
ss
add
mov
nop
in
in
rcl
ds
in
aam
fisubs
inc
xor
push
jo
fidivrl
popf
dec
dec
push
mov
xor
sub
mov
mov
dec
cmp
nop
mov
jg
andb
and
outsl
fs
rcll
mov
mov
pusha
stos
cwtl
orb
mov
pop
ficoms
shll
aad
int3
cmp
ret
adc
dec
rclb
sbb
popa
add
lds
mov
mov
pusha
dec
mov
push
std
mov
mov
jae
mov
pusha
int3
out
or
or
mov
clc
add
shlb
mov
xchg
out
and
pusha
adc
pop
mov
adc
neg
jge
test
frstor
push
aaa
pop
cmp
jne
dec
leave
lret
mov
out
faddl
mov
pop
jmp
push
lds
mov
ret
dec
mov
es
xchg
insl
mov
fldl
daa
add
ja
add
jns
test
lods
mov
dec
adc
sub
sbb
pop
adc
iret
aam
adc
std
cli
mov
jno
call
push
jg
pop
in
jno
or
inc
add
inc
sbbb
notb
int3
shlb
push
pop
fstl
imul
cmp
lock
jae
jns
and
ss
outsl
jge
lret
sub
shll
stc
push
addl
test
gs
sbb
fnsave
pop
pop
mov
icebp
fsubrl
push
lahf
dec
adc
loopne
into
lods
clc
sub
push
push
and
and
and
xchg
adc
push
in
enter
sbb
cltd
lods
lock
mov
mov
sub
jbe
cmpsl
ffreep
fnsave
jnp
sub
lgs
outsl
js
loop
scas
icebp
je
xchg
lds
cltd
movsl
dec
fwait
cmp
les
pop
or
inc
stc
jne
int3
pop
mov
aaa
test
pop
jecxz
adc
cmp
dec
xor
mov
aaa
sub
mov
stc
pinsrw
jno
mov
mov
and
push
adc
xlat
sbb
xchg
xor
ror
outsl
je
or
push
add
xor
insb
addl
adc
test
je
ret
lods
lret
in
adc
ds
fisubs
inc
adc
adc
int
mov
jmp
std
lods
js
inc
fildll
and
add
decb
xchg
pop
popl
mov
ficoms
push
push
loopne
jl
pop
pop
cs
hlt
xchg
test
xchg
mov
rorl
aaa
bound
push
push
rcll
inc
push
mov
push
adc
and
mov
or
out
cmpb
mov
cmp
repz
mov
or
into
ja
lds
inc
mov
aam
add
dec
mov
mov
xor
cmpsl
pop
test
xor
inc
add
test
adc
inc
mov
jae
push
sub
adc
lods
dec
add
lcall
xlat
mov
adc
sub
jmp
push
js
xorl
cmp
sbb
mov
mov
xchg
in
push
imul
icebp
daa
fldlg2
outsb
add
sti
roll
cltd
add
fldt
xchg
mov
push
dec
lock
clc
outsb
push
xchg
loopne
scas
cmc
sti
xchg
adcb
cmp
dec
mov
jnp
insb
or
shr
dec
push
loope
pop
aas
cmp
out
pop
pop
cltd
push
in
push
and
mov
cs
sub
int3
sbb
sub
push
ds
ret
sbb
arpl
xchg
inc
lcall
subl
jge
call
stc
sti
inc
lock
out
xlat
push
insl
xor
ud0
loopne
sbb
xlat
in
cmp
ljmp
icebp
pop
inc
ja
loopne
outsl
aad
and
push
jae
adc
scas
mov
scas
es
popf
jl
cmovb
sbb
jbe
test
std
out
test
icebp
aad
rcrl
pop
cmp
mov
xchg
aad
in
fdivl
dec
push
lea
inc
jae
ffree
mov
cmp
push
ret
add
jno
fsubr
hlt
cmpsl
cs
ljmp
inc
in
jmp
sub
rcl
mov
or
mov
in
inc
sub
aad
sub
dec
jns
stc
inc
dec
mov
add
sbb
sub
xor
push
test
push
lcall
lock
push
in
in
repz
ja
lock
or
pop
ss
test
jae
cld
outsb
loope
out
mov
sub
sub
cltd
fimuls
sarl
fwait
ljmp
xchg
dec
sahf
fcomp
iret
sbb
in
xor
test
pop
in
push
mov
nop
sbb
es
xor
daa
mov
les
leave
push
inc
cmpsl
xchg
adc
rolb
dec
sub
fldcw
mov
test
add
push
sbb
fimull
mov
out
mov
call
mov
xor
push
scas
icebp
les
push
repnz
jae
or
mov
jle
icebp
dec
pop
push
add
push
or
mov
cmp
sub
bound
scas
adc
mov
xchg
mov
mov
pop
or
leave
addl
push
imull
add
dec
fstps
shrl
in
mov
pop
sub
add
loopne
jno
sbb
push
mov
xchg
add
ss
jae
push
mov
push
add
push
cmp
xlat
sti
and
stos
in
push
inc
hlt
jge
dec
stos
xchg
movsb
mov
pop
testb
stos
pushf
jns
mov
mov
xlat
ret
add
shll
dec
or
mov
cmp
lret
loopne
inc
sahf
sbb
das
mov
decb
ret
call
jno
mov
movsb
cmp
loopne
inc
xor
rorl
cmp
push
dec
filds
or
out
xor
xor
ss
fimull
push
adc
mov
lea
or
add
addr16
dec
rorl
loop
int
stos
and
aaa
aad
lret
jno
lds
icebp
stos
fisubrl
pop
arpl
cs
repnz
mov
imul
mov
sti
push
bound
pmulhw
into
mov
inc
sahf
mov
std
gs
pop
stos
lahf
xlat
insl
lahf
pop
inc
sub
pop
fsubs
in
shlb
insb
mov
adc
imul
cli
sbb
out
fldt
mov
ja
loop
mull
jmp
xchg
stc
jle
cmp
je
sbb
mov
fisttps
popl
mov
les
in
inc
adc
mov
xor
in
cmc
push
or
mov
dec
lret
fmull
lea
mov
out
mov
push
jae
mov
imul
fisubrs
mov
jp
jmp
jge
push
insb
sbb
xchg
cmpsl
sbb
test
pop
dec
jp
dec
sbb
stos
fiadds
push
adc
xchg
or
je
sub
iret
inc
ja
iret
jecxz
aas
jb
and
adc
dec
mov
push
and
xchg
pusha
es
or
shrl
std
mov
jno
cmp
mov
mov
rcll
mov
mov
push
aad
pop
mov
xchg
in
add
test
cmc
stos
rcrb
mov
enter
push
sub
cmp
sti
and
mov
xchg
fidivrs
inc
or
test
sbb
mov
pop
rorl
sbb
and
cs
add
std
fs
data16
dec
xor
ficoms
js
mov
imul
lahf
xchg
push
aam
movsb
pop
decb
sti
push
xchg
in
sub
inc
cli
cmp
loopne
pop
mov
roll
je
aad
es
push
dec
mov
xchg
lret
mov
push
rorb
xchg
aas
inc
sbb
roll
int3
popf
scas
push
add
into
addl
push
push
jne
repz
stos
jge
push
repz
mov
shlb
data16
out
mov
mov
incl
dec
jns
pushf
mov
aam
jmp
xor
das
cmp
jl
fmuls
sti
mov
emms
inc
mov
mov
negl
add
sub
sub
stc
imul
sbb
add
outsl
jmp
fisubrl
and
mov
sbb
scas
stos
movsl
in
mov
or
cli
rorl
lret
sbb
inc
pop
lds
sub
lds
pushf
stos
mov
lock
icebp
push
out
mov
lods
sbb
loope
outsb
sbb
or
push
ja
std
out
or
aas
popa
rcl
int
sub
lea
dec
xor
subb
leave
rolb
mov
dec
sub
cmp
clc
inc
push
outsl
or
icebp
adc
add
xchg
jge
dec
cmp
jg
mov
push
pop
fcompl
jno
mov
pop
lods
fstp
inc
inc
xorb
insl
cmp
or
add
sub
ror
mov
or
clc
xlat
loope
inc
lock
sbbl
mov
pop
roll
aad
nop
leave
lds
das
clc
xor
out
gs
inc
or
push
cmp
leave
bound
or
pop
or
adc
jmp
scas
movl
enter
adc
xor
movl
pop
out
out
jl
pop
pop
mov
mov
pop
and
mov
rclb
push
test
icebp
shl
je,pt
cli
add
test
jle
mov
xchg
or
jp
or
sbbl
movb
fiadds
pop
aaa
jmp
xchg
ret
pop
sub
pop
mov
ret
mov
sbb
lret
and
dec
aaa
jp
repz
mov
sbb
cli
mov
mov
jb
loope
imul
cltd
int3
loope
mov
test
dec
add
enter
outsb
fsubrs
stc
fadds
test
push
movsb
lods
sbb
jne
xor
jge
mov
aam
push
leave
cmpsl
or
sub
bound
insb
ret
scas
out
clc
jno
fistpll
adc
xchg
sbb
ja
and
cmc
mov
mov
movsb
mov
push
stos
pop
inc
loopne
loopne
lret
push
xchg
call
mov
or
inc
pop
cmpsb
lods
sti
rcl
xor
dec
and
outsb
jae
and
pop
xchg
push
dec
mov
mov
cwtl
lods
jo
xor
mov
outsb
ja
cmpsb
xor
jp
lcall
sub
out
sub
push
out
sarb
rorb
fisttps
xor
mov
pushf
in
stos
push
add
add
xchg
sbb
lcall
hlt
lds
shrb
push
lret
pop
aas
popf
sbbl
je
adc
rorl
inc
mov
lea
rclb
dec
and
push
mov
addl
xor
out
inc
cwtl
inc
pop
outsb
lret
out
test
cmp
jp
call
mov
rol
in
shlb
add
movsl
nop
adc
je
cmovno
aad
es
lea
pop
push
dec
shl
setnp
jnp
lods
pop
repz
inc
shl
int
test
arpl
pop
lds
das
shlb
arpl
xor
mov
xor
clc
dec
jb
lahf
push
push
iret
in
xchg
jae
repnz
inc
add
divl
mov
cmp
jle
cld
rcrb
jno
or
push
push
call
push
movsl
lock
or
cmpsb
xor
sbbb
test
dec
mov
fstps
repz
jmp
xor
push
cmp
inc
adc
xlat
ret
and
dec
test
inc
sbb
je
adc
enter
pop
ja
cmp
jo
sub
fimull
lcall
repz
cwtl
jo
add
lea
pop
add
std
mov
pop
adc
inc
std
inc
daa
xchg
repnz
mov
ja
icebp
shll
sub
and
push
scas
pop
pop
push
pop
push
pop
pop
das
out
das
jl
mov
xchg
in
jg
xlat
mov
adc
iret
aad
les
hlt
in
out
pop
xchg
xchg
xor
fldenv
push
jns
insb
push
aad
jmp
dec
mov
inc
cmp
fnsave
mov
hlt
aaa
dec
out
push
add
outsb
or
xchg
lock
push
sub
cmpsb
popf
dec
iret
mov
add
cmp
mov
cmpsl
sub
add
imulb
aas
push
adc
stc
mov
or
lahf
mov
jge
lods
pop
push
xor
mov
pushf
push
imul
aam
inc
jb
dec
cmc
lea
shll
fsubp
insb
lret
fwait
lock
lea
xchg
adc
aad
mov
and
inc
fstpl
sub
inc
mov
add
mov
in
test
pop
movsl
shlb
and
leave
or
clc
pop
sahf
es
int3
xchg
lea
adc
loopne
inc
cli
add
insb
pusha
aaa
lods
jae
push
mov
jg
mov
pop
or
add
mov
pop
iret
roll
jp
fcoms
push
mov
pop
in
pop
scas
pop
rorl
push
sbb
mov
arpl
adc
cmp
imul
xchg
enter
dec
fisttpl
insl
pop
stos
addl
je
jmp
xchg
les
pop
push
inc
pop
cmp
shrb
hlt
cmpsb
stos
repz
pushf
push
mov
xchg
mov
sub
xchg
and
cmc
fmulp
loop,pt
cmpsl
mov
lret
cli
mov
stos
mov
shrb
cmp
lea
mov
movsb
sbb
push
and
clc
orb
outsl
stos
in
adc
ja
pop
sbbl
lea
sbb
push
rcr
aas
ret
and
inc
pushf
lret
xchg
std
xchg
stos
fwait
jnp
andl
inc
or
or
inc
rorb
cmp
push
jle
mov
push
dec
xchg
int
xchg
dec
repz
or
jb
inc
repnz
cmp
out
adc
fists
popf
lds
daa
mov
sbb
pop
push
in
bound
repz
les
mov
rcr
idivl
dec
jb
fwait
insb
xchg
pusha
xor
lock
mov
out
xorb
jmp
push
loope
daa
loopne
sub
je
xor
or
pop
cmc
and
xchg
mov
push
xor
xchg
test
pushf
test
mov
out
and
sbb
xor
dec
cmpsl
or
leave
sub
pop
loopne
adc
scas
clc
lock
jmp
and
cltd
or
sahf
rclb
mov
and
push
mov
in
and
ja
or
sbb
mov
xor
and
repnz
inc
push
mov
scas
lahf
sahf
in
scas
les
or
sbb
dec
fsubrs
stc
ljmp
cmp
stc
inc
mov
sub
pusha
xchg
lods
and
fdivrp
jne
jge
mov
xor
jg
inc
or
lods
jo
xor
jno
xchg
leave
cmc
sbb
aam
lcall
aam
mov
add
nop
and
nop
xchg
or
cld
sub
dec
lahf
jbe
dec
xor
ficoml
mov
popf
decl
pop
add
xlat
hlt
les
lahf
xchg
inc
xor
and
sub
push
dec
pop
mov
mov
popf
jne
aad
idivl
push
roll
into
cmp
inc
or
popf
loopne
das
xchg
push
or
mov
shl
inc
pop
cmpsb
aas
aaa
loope
cmpsb
je
ljmp
daa
add
cmp
pop
mov
or
out
leave
cmp
jg
fists
rorl
sbb
lret
shrb
mov
sbb
xor
dec
in
stos
adc
rorb
addr16
pminub
ja
sub
scas
sahf
fnstcw
mov
and
repz
mov
shll
pop
movsb
test
int3
pop
pop
xchg
cmc
jnp
mov
sahf
mov
mov
lret
cmp
cmp
cmp
adc
xchg
adc
sbb
les
cs
adc
and
pop
int3
sbb
out
fstps
icebp
jmp
scas
mov
cmpsl
jns
xchg
cmpsl
inc
and
push
mov
aas
cmp
push
xorb
shll
mov
push
push
mov
xchg
ds
call
or
jno
and
pop
gs
movsb
xchg
dec
dec
rcrl
fistps
jb
or
xchg
sub
iret
movsb
in
mov
iret
xchg
or
fimuls
and
aam
dec
jecxz
push
outsl
fisttpll
sub
sub
pop
xor
stc
jb
lahf
mov
ljmp
cmp
or
sahf
mov
fsts
or
nop
out
pop
rorl
cmp
inc
rclb
cli
mov
jle
or
jb
cmp
fcoml
adcb
ds
shrl
sub
gs
cmc
mov
outsl
mov
out
dec
and
out
push
add
js
aad
fistpl
or
adc
movl
ja
cwtl
and
pop
push
mov
test
mov
ret
fs
inc
jb
rorl
dec
push
ss
sgdtl
push
fisttps
ds
add
idivb
xchg
lds
cmc
jbe
sub
or
stos
mov
icebp
sbb
push
xor
xlat
in
or
nop
mov
inc
jbe
mov
movsb
push
jge
sub
cld
fildl
rclb
dec
rcl
jmp
or
and
adc
ficoml
jbe
mov
adc
test
stc
xchg
mov
stc
cmp
sti
mov
pop
test
or
xchg
adc
fstp
xchg
adc
jmp
xor
mov
jne
lds
inc
frstor
pop
jl
jl
das
mov
inc
lea
cwtl
mov
iret
push
cmp
fldt
mov
mov
mov
mov
ds
cld
out
mov
out
jle
repnz
lahf
inc
mov
dec
add
or
pop
dec
xlat
pushf
jns
cli
ds
shll
dec
push
popf
inc
cmp
mov
fs
push
add
hlt
stc
popf
rorl
in
or
movsl
cltd
or
repz
jno
inc
insb
pushf
xchg
loopne
adc
cld
push
out
in
mov
int3
jg
push
test
cltd
cmp
and
and
inc
pop
xor
mov
add
mov
std
imul
addl
ljmp
sub
aad
and
mov
dec
int3
lods
pop
stc
dec
data16
std
xor
int
dec
repnz
imul
fsubs
mov
inc
or
mov
shrl
xchg
sub
jno
pop
out
jecxz
lods
mov
cmp
imul
in
dec
inc
push
lods
imulb
ror
jmp
test
fbld
mov
data16
pop
stc
push
cli
cmc
mov
dec
loope
int
rcr
cmp
movsb
pop
jg
inc
xchg
das
mov
lcall
add
ror
mov
leave
cmp
xor
insl
clc
sahf
test
push
mov
movsb
ret
xor
les
adc
xor
outsl
jb
fisubrs
cli
fadd
test
mov
sub
push
daa
dec
pop
cmc
pop
gs
cld
mov
enter
iret
sub
dec
sbb
test
incb
fistps
inc
in
es
xchg
loop
sbb
rcr
sbb
insb
adc
insl
pop
movsl
jmp
pop
pop
ficoml
push
notl
das
jae
mov
mov
shl
jmp
pusha
xor
ret
call
cltd
jbe
aam
dec
pusha
lahf
stos
or
jl
fcmovbe
jmp
dec
std
shll
sahf
pushl
sbb
clc
lahf
test
push
pop
popf
jo
loop
addr16
mov
mov
sbb
insl
mov
hlt
ds
insl
lahf
adc
xchg
adcl
in
insl
mov
pop
insl
push
roll
sub
jbe
les
sub
lcall
fnstenv
adc
fs
in
and
cmpsb
rolb
xchg
rcr
inc
cmpsl
and
xor
call
std
aaa
cmp
sbb
pop
fisubrl
sar
std
xor
jae
pop
or
cmpsl
push
mov
nop
stc
mov
and
mov
pushf
pop
sbb
sub
mov
mov
int3
into
stos
test
or
enter
fmuls
popf
mov
fbld
cs
aam
pop
mov
lret
aas
jl
shrb
into
dec
sbb
sbb
xchg
and
test
xor
movsl
mov
cs
aad
push
adc
xlat
pop
mov
fldl
dec
adc
ret
jp
outsl
je
fcoml
pop
in
roll
mov
lock
jle
sahf
push
push
enter
call
adc
lcall
in
movsl
or
inc
adc
sub
imul
dec
lcall
call
pop
xchg
je
mov
ljmp
bound
imul
add
jle
bound
jns
neg
lock
dec
inc
inc
scas
ret
mov
stos
outsl
jg
insb
xorl
std
fsubrl
je
shrb
sbb
xor
mov
stc
xchg
mov
xchg
mov
pop
lret
inc
dec
push
xchg
andl
adcb
enter
jb
test
repz
mov
cwtl
mov
pop
aaa
frstor
mov
cmpsl
test
mov
sub
pop
std
test
ret
inc
lock
fmull
popf
lcall
js
std
out
mov
and
lock
fsubp
rcrb
xlat
xchg
push
stos
das
xchg
xor
rcll
cmp
shlb
repnz
sbb
jno
loopne
adc
clc
inc
fistl
cmp
xor
icebp
add
jmp
pop
xlat
adc
fs
sbb
jmp
push
sub
sti
and
arpl
call
cmp
sub
mov
push
out
adc
pop
in
and
pop
pop
sbb
pop
lods
imul
aas
int3
jmp
inc
push
xchg
les
jno
adc
arpl
lods
inc
xor
mov
int
les
pusha
xchg
inc
mov
insl
jo
rcrl
jmp
pop
fnstsw
cld
mov
addr16
mov
sahf
dec
nop
outsl
lret
rcr
aas
cmp
jg
and
jo
add
sahf
xchg
rcrl
jmp
lret
push
inc
pop
cmp
rorl
fsubp
cwtl
mov
cmpsl
ret
int3
sub
test
xor
jno
out
pusha
pusha
stos
pop
xor
pop
idivb
jge
inc
push
jno
push
inc
mov
and
push
jne
in
and
sbb
dec
inc
aad
pop
xchg
faddp
sub
clc
mov
fimull
mov
int
ljmp
sbb
pop
rol
xchg
xchg
xlat
mov
icebp
jnp
or
jge
dec
adc
sub
and
lock
xor
decl
pop
adc
and
nop
jl
pop
adc
sbb
aam
leave
out
push
sbb
movsl
mov
lds
daa
leave
pop
das
test
dec
stos
push
imul
xchg
mov
scas
fists
sbb
rcrl
mov
test
pop
popf
shll
xchg
es
mov
xor
icebp
sub
pop
pop
and
lods
jns
sarb
fucomp
sbb
cmc
mov
xor
clc
mov
rep
inc
in
jecxz
mov
lods
pushl
repnz
xor
call
lds
mov
xchg
jle
mov
cmc
dec
pop
sub
outsl
adc
dec
inc
mov
xlat
dec
add
jo
add
roll
xor
pop
ljmp
dec
cli
jnp
mov
and
call
pop
movsb
aad
pop
mov
ja
push
out
mov
mov
aaa
or
xchg
jge
pop
sbb
shrb
ja
lcall
ret
dec
adc
and
nop
pop
ror
jl
or
push
or
pop
shll
add
rcrb
repz
aad
decb
push
movsl
test
xor
push
addr16
and
cmp
imul
pop
pop
add
xor
fyl2x
je
xchg
mov
lock
cwtl
sub
gs
sbb
jb
sub
sbb
cmpsl
pop
cmp
stc
mov
add
jp
fstl
mov
mov
fxch
out
inc
rclb
jns
cltd
idivl
hlt
fidivl
add
out
adc
push
test
or
shrl
ret
dec
sbb
pop
mov
pop
jmp
popa
mov
lcall
iret
dec
and
movsl
push
and
mov
loope
inc
lods
xor
in
xlat
ds
aaa
shlb
xor
cmp
jbe
clc
shll
adc
and
ljmp
shlb
add
mov
loope
scas
jae
add
sbbl
mov
add
push
fildl
hlt
push
daa
mov
xchg
jns
cmp
or
pop
shlb
mov
pop
adc
add
mov
xlat
js
and
mov
loop
cli
or
cmp
add
cmp
test
dec
push
incl
mov
sub
xchg
clc
dec
enter
sub
jo
fst
and
mov
mov
xor
push
mov
push
cmpsl
mov
scas
stos
jmp
mov
scas
mov
mov
in
add
jns
mov
jb
or
xor
jb
mov
mov
push
pop
xchg
mov
ljmp
mov
xor
pop
lods
mov
movsb
push
insb
xor
xor
dec
outsb
popf
rol
in
fs
xor
pop
inc
jmp
adc
xchg
sbb
shll
pop
adc
leave
inc
inc
int
add
jecxz
pop
fsubr
push
pop
jne
lods
jne
mov
mov
and
aad
cmp
mov
fsubrl
aad
insb
jb
and
cmp
or
and
pop
es
dec
sub
fldcw
mov
loope
imul
jno
mov
sbb
lret
lret
test
icebp
movsl
fistpll
in
inc
push
mov
leave
add
arpl
addr16
xlat
in
push
stos
or
or
and
sbb
cmp
enter
filds
sbb
dec
cmp
dec
xor
stos
add
in
xchg
call
jg
mov
push
nop
test
add
test
push
xchg
fwait
iret
stos
pop
mov
mov
fisubl
sahf
sbb
fcmovbe
cmc
in
pop
pop
or
adc
mov
jecxz
sub
lret
sti
inc
je
outsb
mov
aas
jns
rorb
add
icebp
in
mov
pop
insl
js
mov
es
pusha
cwtl
inc
push
out
int
addb
and
dec
cmp
notb
cmp
jbe
add
scas
pop
idivb
lahf
jnp
xor
bound
ds
jns
add
ud1
fisttpll
stos
sahf
test
lcall
or
adc
popf
push
roll
gs
adc
jl
pop
cmp
adc
iret
sahf
roll
mov
addr16
or
lret
cli
rolb
mov
aaa
inc
fistpll
push
xchg
shll
push
clc
jp
and
xchg
mov
mov
push
dec
cwtl
pushf
rcrl
insl
adc
andl
std
fistl
scas
xor
cmp
jmp
or
mov
dec
add
xchg
xor
push
daa
jge
xor
and
inc
inc
sbb
notb
cmp
adc
inc
adc
xor
aaa
jae
xor
aam
lcall
mov
dec
test
iret
adc
xor
jge
push
insl
jno
lods
push
movsl
outsl
jmp
jno
mov
ss
and
mov
push
jg
cmpsl
loop
jg
lods
mov
xor
mov
inc
inc
ss
aas
or
es
lds
das
lcall
shrb
inc
cmpsb
std
adcl
in
ret
fld
outsb
lods
movsl
shlb
cmpsl
stos
sbb
les
sub
test
or
aaa
pop
sbb
dec
mov
cmp
cmp
sti
add
push
mov
pop
bswap
jno
push
jb
xchg
rcll
sub
out
mov
mov
add
mov
mov
add
jecxz
xor
lret
out
rclb
jno
xchg
dec
push
mov
pusha
test
and
add
dec
sub
lea
jb
adc
mov
into
mov
sbb
xchg
inc
dec
cmp
into
bound
iret
and
mov
dec
test
sub
xchg
ret
out
movsb
sahf
xchg
inc
icebp
bound
rol
rcrb
mov
neg
in
and
ljmp
jne
push
repnz
faddl
out
xchg
ret
push
jne
cmp
test
mov
cmp
pop
inc
xchg
jbe
dec
push
std
sbb
inc
nop
mov
adc
dec
jo
mov
inc
cmp
aaa
subb
dec
dec
xor
xor
xor
or
rorl
cld
std
mov
mov
jb
ja
ja
push
pop
push
mov
insl
dec
enter
lods
arpl
and
out
outsl
in
jl
xchg
inc
add
pop
stos
xlat
mov
rcrl
xor
push
jb
filds
cmpsl
xor
pop
adc
inc
out
mov
or
cmp
xchg
iret
mov
xlat
in
es
pop
cmp
jp
loopne
jno
aam
jle
int3
rcrl
push
mov
mov
sub
sbbl
fistps
fst
in
push
es
xor
call
inc
xorl
mov
sbb
jmp
dec
push
mov
mov
icebp
lds
mov
jle
lea
cmc
stos
aas
fwait
shll
in
fistpll
pop
push
xchg
hlt
pusha
call
or
mov
mov
stc
sub
ret
pop
add
jmp
arpl
mov
dec
or
es
mov
pop
ret
aad
or
xor
ja
shr
cmp
sbb
and
add
aad
fstpt
sub
adc
cmc
mov
adc
jle
jecxz
rcl
jl
push
lds
inc
int3
mul
xchg
or
je
sbb
in
add
fimull
arpl
lds
fiadds
ds
rclb
mov
roll
std
sbb
pop
xchg
mov
mov
sub
adc
jb
or
std
jmp
and
xchg
and
test
pop
adc
fcomip
sarl
jns
ret
aas
popa
xchg
lock
leave
mov
lods
or
and
outsb
adc
arpl
mov
mov
daa
rorl
js
jle
xchg
adcl
push
adc
sub
std
mov
inc
outsl
loope
enter
xchg
pop
std
stos
call
into
lods
sub
fbld
adc
pop
daa
fimull
sub
ret
andl
sub
adc
das
aaa
mov
push
das
mov
gs
jge
add
mov
arpl
imul
pop
popf
lahf
fcmovnb
dec
lahf
and
jmp
add
lea
mov
cmpsl
add
jmp
mov
pop
sub
adc
add
xchg
fs
pop
mov
lret
push
xchg
jg
int3
cmc
push
fwait
sub
mov
lret
rol
rol
jae
sbb
sbbl
jno
add
hlt
and
or
lock
ja
insb
ja
push
pop
test
xchg
or
cmp
mov
daa
adc
sbb
ss
push
int3
out
inc
pop
mov
and
xor
icebp
inc
in
xor
std
sbb
in
inc
sub
mov
fmull
or
push
or
push
and
inc
cmpsb
and
or
clc
aas
xchg
and
addr16
aas
xchg
cld
cwtl
ja
int
jl
mov
or
sbb
movsl
in
xchg
jns
sub
mov
loopne
mov
push
lahf
mov
movsl
rorb
iret
push
pop
inc
mov
mov
jo
je
push
ret
stos
les
aad
ret
push
out
ja
dec
push
adcl
xchg
or
mov
mov
sub
jns
or
pop
leave
push
pushf
add
inc
dec
jnp
mov
sbb
mov
jl
pop
shlb
addr16
or
inc
iret
xchg
sbb
daa
jno
pop
mov
pop
sahf
pop
sti
fisttpll
mov
push
sub
inc
jge
push
push
fmulp
cmp
mov
jg
mov
pop
cmpsb
xchg
inc
and
mov
and
xor
mov
aas
mov
dec
ret
iret
jg
stc
and
sub
imul
cmc
cs
push
scas
sub
sub
inc
sti
xchg
sbb
inc
icebp
pop
test
fnstenv
push
nop
les
ja
xor
push
mov
loope
sbb
xor
mov
xor
add
sub
inc
add
jns
mov
fldt
incb
aaa
push
sub
mov
pop
cmp
xchg
jae
mov
das
insb
lret
or
test
into
add
jp
jmp
mov
push
add
sbb
cmp
daa
and
mov
cmp
dec
packuswb
lock
inc
jo
jo
xchg
sarl
bound
les
mov
outsl
shrb
fbstp
mov
or
cmc
pop
xor
daa
test
loop
nop
cmp
sbb
or
into
outsb
pop
pop
insl
adc
inc
aam
nop
inc
mov
inc
idivb
aas
insl
or
pop
popa
gs
aad
pop
ss
das
jnp
pop
push
sahf
lock
jl
adc
aad
lahf
mov
les
and
jno
fistpll
movsl
sbb
ret
pop
into
stos
rcl
jg
mov
test
mov
sbb
sbb
pop
fbstp
cld
call
push
push
repnz
cmc
ds
cli
adc
jbe
shlb
mov
faddl
and
inc
sub
fwait
fnstcw
mov
xor
cmp
jnp
rcr
mov
push
pop
bound
mov
fwait
inc
and
mov
das
iret
int3
pop
and
mov
push
xchg
scas
rcrl
push
mov
test
jmp
dec
call
mov
inc
pushf
adc
sahf
add
and
stos
test
loope
les
js
xchg
push
cmp
xchg
cmp
rol
sub
repnz
das
add
inc
ret
xor
xor
shr
jae
push
cld
or
js
and
jnp
add
icebp
fisttps
xchg
mov
ret
sub
adc
sti
jge
pop
adc
popf
jg
push
pop
adc
test
pop
aaa
and
add
jnp
add
flds
fildll
inc
xchg
ljmp
push
mov
les
dec
dec
dec
nop
dec
add
pop
ljmp
xchg
call
sub
stc
inc
in
mov
icebp
sub
pop
or
call
out
sahf
cmc
dec
mov
sti
int3
jg
aad
fsts
aaa
pop
adc
cmp
aaa
fadds
cmp
add
mov
sub
or
mov
adc
jno
xchg
stc
pop
push
in
sbb
xchg
leave
movsl
jmp
push
xor
icebp
push
pop
inc
imul
les
movsb
and
or
or
jno
push
shll
sub
xor
fiaddl
mov
mov
scas
pusha
xchg
subb
sahf
test
dec
out
ss
hlt
add
cmc
call
xchg
adc
psraw
loop
divl
adc
or
or
cmp
in
jns
jae
lea
cs
test
repz
push
push
pop
jl
dec
xchg
xor
test
stos
gs
fdivl
jle
stos
lcall
sub
pusha
xchg
test
icebp
add
orl
jbe
push
pop
out
pop
and
jecxz
je
addl
adc
fistps
mov
inc
or
jmp
jge
cmp
ds
push
sbb
cwtl
in
xor
insl
lea
ficoms
cld
xor
icebp
add
pusha
jmp
pop
incb
mov
out
shr
fnsave
pop
and
jb
push
dec
add
mov
add
inc
leave
mov
jo
subl
iret
jne
xor
in
dec
pop
aas
jle
jno
movsb
pop
das
adc
jg
pop
jo
inc
inc
mov
push
and
stc
inc
std
xchg
insl
cli
dec
push
movsb
sti
cmc
mov
push
sarl
test
pop
sbbb
rcl
push
in
pusha
out
aad
sub
pop
mov
hlt
adc
std
sbb
adc
inc
mov
lret
movsb
ja
xor
cmc
jae
popf
mov
mov
pusha
mov
sbb
and
cmp
test
cmpsb
shlb
not
in
fwait
sar
push
mov
ja
rorl
dec
xor
cmp
adc
pop
insl
ror
sbb
jbe
inc
addb
sbb
xchg
movsb
jg
add
dec
daa
shrl
test
cmp
xchg
or
pusha
ret
cmpsb
imul
ds
sub
pop
push
dec
out
dec
pop
mov
sub
jmp
cwtl
pop
inc
sbb
push
repnz
insb
lret
sbbb
mov
jl
xlat
shr
movsb
icebp
xlat
stc
test
sti
pop
cmp
mov
out
mov
adc
movl
outsb
mov
lret
jne
mov
scas
xchg
xlat
sti
add
xor
sub
cmp
test
cmpsb
popa
addr16
outsl
or
mov
insl
ds
push
mov
das
or
adc
xor
ss
or
out
or
pop
daa
insl
out
scas
add
mov
push
shlb
in
out
dec
in
mov
imul
aaa
lock
clc
xchg
out
dec
mov
stos
dec
add
mov
out
daa
mov
dec
movsl
ja
jbe
test
mov
push
loope
aad
nop
and
shrb
fdivrl
jne
test
mov
bound
leave
add
loope
push
adc
push
mov
xchg
add
ja
add
les
xor
mov
mov
aaa
mov
pop
in
fmull
clc
scas
sbb
push
test
imul
ret
ja
push
in
repnz
mov
pop
test
push
lahf
sub
imul
mov
inc
out
stos
mov
enter
lea
outsb
and
addr16
fstsw
jmp
inc
jmp
or
cld
xchg
xor
add
ljmp
cwtl
mov
jns
fisubl
jae
add
push
test
fwait
add
cmp
cmpsl
insl
divb
ljmp
dec
out
jge
test
push
sub
ret
and
jns
jo
lret
adc
mov
movsl
jge
sbb
cli
xchg
sub
lahf
ret
stos
xor
imul
fisubrs
or
popf
icebp
sbb
ja
mov
sbb
sbb
jge
mov
xor
pop
and
icebp
jle
leave
dec
xchg
cmpsl
dec
rcll
sub
mov
lods
pop
dec
jg
stc
into
cmp
movhps
cmp
stc
cmpsb
cmp
lcall
mov
pop
push
push
repz
pop
aad
sar
aam
ss
mov
les
rorl
cld
xor
loope
shlb
loop
stos
push
dec
mov
push
cmp
stc
enter
test
cmp
push
adc
nop
es
iret
paddb
mov
add
aaa
cmp
cli
or
push
ja
xlat
dec
fisttpll
lods
adc
enter
loop
add
add
push
mov
in
xchg
fcomps
leave
or
xchg
dec
out
int
shlb
jge
mov
pop
pop
or
mov
mov
sarl
sbb
dec
cmp
mov
fsubs
pop
mov
shr
mov
int
orb
add
test
push
jl
jno
arpl
push
and
or
repnz
sahf
cmpsl
lock
push
xchg
cmp
dec
inc
das
repz
cmp
cmp
mov
push
xlat
jp
mov
push
aaa
ret
repz
pop
push
add
xchg
imull
push
push
sbb
imulb
fldcw
scas
and
jp
sub
ret
in
inc
ss
vandnpd
mov
addr16
adc
xchg
push
pop
lods
xlat
jnp
sarb
stc
mov
mov
mull
mov
sahf
add
ja
ret
jp
push
mov
popf
lods
jg
fs
push
dec
pop
stc
int
xchg
out
std
and
test
loopne
xchg
cmp
or
mov
inc
inc
mov
stos
stc
loope
or
sub
xorl
rol
pop
lahf
std
rcrl
inc
psubb
lret
fdivl
stc
lcall
mov
out
jle
push
inc
mov
pop
dec
test
mov
aam
out
call
xchg
adc
dec
xlat
out
pop
data16
shl
shlb
jbe
mov
test
push
roll
mov
or
push
and
push
mov
and
sbb
jp
iret
xor
jge
popf
lret
jno
in
shrl
cwtl
cmpsl
cmc
rcll
aam
clc
imul
hlt
adc
xchg
inc
push
das
dec
cmp
pop
addr16
gs
insb
sarb
add
insb
push
mov
pop
arpl
imul
movsl
mov
or
gs
push
lret
lret
push
lret
mov
fdivrp
xchg
rolb
inc
lea
mov
addr16
or
dec
nop
pop
jl
shl
sbbl
mov
repz
lahf
mov
push
cwtl
jb
push
xor
daa
sbb
cmp
mov
inc
in
mov
fsubl
xchg
push
jno
sahf
jae
out
test
and
mov
adc
lcall
rcl
add
mov
out
aad
push
out
mov
shrl
clc
test
mov
push
test
je
leave
and
or
push
int
ret
sbbl
and
and
sahf
jl
mov
sbb
mov
xor
stc
push
in
mov
xchg
lahf
ret
xor
dec
lds
js
xor
mov
shll
out
fisubl
int3
pushf
push
aam
jae
or
ret
jmp
add
pop
xchg
cmp
les
lds
jo
jmp
arpl
adc
sub
scas
adc
sub
je
sub
stc
jmp
movb
sbb
popa
push
fs
inc
or
icebp
pop
rorl
test
xor
pop
in
xchg
push
push
imul
in
in
xor
cltd
aam
sbbb
aad
cmc
mov
mov
imul
clc
in
aas
add
mov
mov
jp
mov
scas
xchg
ror
sbb
test
stos
in
inc
sub
test
xor
xchg
xacquire
incb
jl
enter
mov
jmp
xor
or
mov
lds
ljmp
lahf
pop
pushf
mov
pop
lcall
aam
stos
jmp
xchg
inc
les
pop
push
push
fldenv
push
insb
icebp
and
cmovae
inc
inc
jns
aam
pop
loopne
mov
mov
stos
xchg
les
fdivr
repnz
and
pop
adc
mov
sub
insl
lds
jl
jecxz
ret
scas
lret
mov
dec
sub
lahf
faddl
pop
aam
std
dec
popf
mov
mov
xchg
mov
jp
ror
mov
cmc
insb
out
iret
sub
mov
je
outsl
aam
das
cmp
xor
das
bnd
and
dec
je
inc
test
cmp
mov
test
addr16
data16
stos
out
inc
out
fstps
outsl
inc
lds
mov
cmpl
lahf
int
and
rolb
mov
cmp
add
in
cmpsl
enter
cmpsb
rorl
mov
into
xchg
arpl
lret
aaa
and
icebp
movsb
jle
mov
sub
xor
nop
test
clc
mull
xchg
call
pushf
aad
push
je
jmp
clc
pushl
xor
sub
in
cmp
sahf
in
sarb
pushl
xchg
inc
mov
or
dec
insb
ret
clc
shrb
movsl
ja
push
dec
mov
sub
and
cmc
insl
xor
jmp
leave
mov
push
in
cmpl
loopne
adc
pop
and
test
pop
cmp
bound
fs
add
movl
stos
jmp
pop
in
mov
mov
xchg
fisttps
or
insb
mov
pop
shlb
xchg
mov
andnps
or
adc
lock
mov
sub
xchg
insl
dec
and
sbb
lds
push
pop
sub
stos
mov
leave
lea
sub
decl
enter
adc
cmp
jbe
mov
icebp
sub
int
mov
add
ss
push
rcrl
and
out
push
jg
and
lods
int3
or
in
mov
inc
sub
mov
pop
adc
dec
enter
les
add
lret
cld
cmpsl
adc
inc
mov
adc
inc
jbe
fildll
fnstcw
jbe
mov
lods
xor
mov
push
pop
inc
xor
scas
enter
jno
pop
pop
dec
xchg
int
test
push
add
call
je
mov
aad
xor
aaa
dec
pop
jle
test
pop
jbe
xlat
mov
pop
ret
inc
pop
pop
push
xor
aam
inc
sbb
notl
sub
out
jecxz
xrelease
fsubrl
scas
cmpsb
bound
mov
fmuls
ss
xchg
not
add
or
call
inc
out
push
adc
fldl
jne
lock
xchg
pop
pop
sahf
push
iret
xchg
and
dec
mov
in
or
jae
mov
aaa
sbb
sub
leave
push
cmp
test
or
cwtl
lock
stos
shlb
in
sub
mov
sbb
push
mov
push
push
std
sub
dec
out
icebp
cmp
cli
data16
add
cltd
loope
cmpsl
cmp
xchg
mov
mov
lods
flds
mov
mov
mov
jo
add
xor
jp
daa
lock
popl
and
js
out
daa
cmc
mov
inc
cmp
call
cltd
filds
or
nop
leave
imulb
pushl
mov
fcmovbe
lock
addr16
mov
push
mov
scas
mov
jl
push
cmc
clc
jne
call
jp
fildl
mov
pusha
shrl
pusha
jmp
hlt
sub
push
or
pop
push
imul
clc
mov
xchg
adc
xor
push
in
inc
dec
stos
xchg
jl
lea
dec
xchg
lahf
pop
xchg
outsl
ja
icebp
mov
ljmp
sbb
or
int
rcll
insl
fidivs
and
pop
test
push
mov
sub
xor
in
rolb
out
jb
sbb
push
je
scas
stos
mov
shlb
push
xlat
fs
and
jmp
push
pop
out
cmpsl
lahf
jae
ss
and
outsl
or
adcb
fidivs
jns
and
mov
out
pushf
mov
das
cmp
icebp
push
test
out
scas
loopne
push
loop
and
sbbb
enter
dec
rclb
adc
dec
jbe
mov
cmc
dec
test
mov
daa
xchg
cmpsl
xor
adc
test
push
test
mov
xchg
pop
popf
dec
inc
iret
test
xchg
and
inc
sub
push
jne
xchg
xor
rcrl
xchg
popa
sub
lcall
lret
pop
or
pop
stc
and
push
pop
sub
outsb
mov
add
scas
adc
sbb
push
in
lds
jmp
lea
popa
imul
cmp
pop
mov
lret
clc
inc
cld
ja
add
incb
xor
test
out
xor
mov
mov
nop
mov
mov
sti
aaa
out
xor
dec
pop
imul
and
jne
mov
or
xchg
adc
jae
cltd
nop
aam
stc
cmc
rcrb
sbb
and
mov
out
xchg
sbb
cmp
pusha
sti
int3
xchg
in
ret
mov
jno
or
popa
sub
sub
pop
pop
dec
into
xchg
outsl
sbb
in
stos
cmpsl
jo
dec
daa
jle
xchg
cmpl
in
repnz
push
mov
pop
inc
nop
lods
mov
push
pusha
leave
clc
inc
mov
adc
mov
pop
daa
cs
pop
cmpsb
xchg
dec
adc
lahf
insl
jp
dec
lahf
xor
cld
sub
ljmp
and
aam
push
jg
mov
sbb
pop
inc
push
insb
push
movsb
push
cmc
push
cwtl
mov
in
xchg
shl
xorb
stc
pop
fstps
ja
xchg
sbb
stc
or
scas
xor
incl
adc
mov
repnz
jb
dec
bound
test
push
adc
aas
push
push
adc
mov
xor
test
mov
lods
mov
xor
adc
sub
add
mov
lea
inc
dec
jo
rcrl
sti
push
jno
bound
out
jg
mov
lds
stos
popf
cmpsl
push
daa
sub
push
cmpsb
or
popf
icebp
sub
jne
dec
mov
cli
mov
jl
mulps
sub
icebp
icebp
xchg
pop
fwait
adc
pop
lock
fsubrs
sub
or
sbb
adc
popa
mov
xchg
lods
movsb
mov
mov
sub
decl
loope
cmc
insb
pop
stos
rcll
add
xor
pop
push
stos
inc
mov
dec
push
jo
push
mov
lods
lods
jp
fsub
add
test
or
inc
jge
pop
fisttps
aas
xchg
mov
xor
mov
inc
or
sbb
fstl
pop
pop
adc
fwait
push
fidivs
jns
sbb
jg
cltd
jnp
jge
xor
sbb
sbb
lock
or
xchg
jge
mov
add
sub
pusha
inc
add
pushf
test
sub
in
push
loope
incl
aas
adc
push
out
ds
in
negl
pop
push
xlat
jge
in
dec
insl
and
loope
movsl
lods
fisttpll
mov
inc
push
pusha
mov
pop
or
xchg
aas
pop
sbb
mov
div
lret
or
xor
incb
mov
cmpsb
jge
or
xchg
and
fstl
sbb
mov
ss
cmp
roll
popf
xchg
jmp
ss
or
jl
mov
inc
inc
push
push
stos
fists
adc
sbb
inc
mov
fcomip
mov
les
lahf
pop
and
fiadds
xor
popa
js
sbb
out
xchg
dec
ffreep
in
push
jecxz
jmp
in
stos
lahf
push
push
push
setb
orb
cld
mov
cltd
pop
inc
mov
mov
iret
adc
inc
xlat
mov
adc
aam
in
icebp
sub
mov
leave
xchg
cmp
test
inc
lods
sahf
add
and
cmc
in
mov
data16
loopne
push
dec
das
lods
jl
mov
add
mov
les
cld
or
sub
mov
sbb
int3
dec
cmpsb
jle
dec
add
dec
add
leave
call
stc
sub
xor
inc
jg
scas
lds
decb
or
xchg
cmp
iret
das
icebp
mov
mov
stc
pop
mov
jg
add
scas
into
stc
sbb
cli
pop
push
xlat
inc
iret
sub
aad
or
jbe
push
test
xchg
inc
xorl
or
adc
ljmp
notb
xchg
ja
fwait
aam
cmp
xchg
loope
lcall
popf
mov
jb
hlt
xchg
idivb
test
inc
mov
fisttpl
push
sbb
psubq
adc
mov
lret
mov
loop
and
xchg
jg
and
into
cmp
loope
iret
or
sarb
and
adc
cltd
jecxz
testl
sub
incl
mov
cmp
mulb
dec
out
jmp
test
push
popa
xor
adc
ljmp
outsl
or
xchg
xchg
hlt
lods
adc
xchg
sarl
xor
sbb
test
cmc
xchg
jle
cmpsl
loop
out
pop
addl
pop
dec
mov
and
stos
push
rolb
xor
ret
adc
aad
loop
leave
jo
shrb
scas
xor
inc
enter
dec
push
lock
and
es
mov
cmp
sbbb
cmp
shlb
ds
rorb
cltd
mov
cmp
jmp
cmp
xor
dec
lock
sahf
xlat
insl
inc
xlat
in
push
dec
shlb
cmp
pop
insl
fldl
adc
push
inc
pop
push
mov
lea
xchg
int
sub
add
adc
pop
addr16
cmpsb
pushf
adc
adc
mov
jecxz
fdivs
cmp
mov
and
dec
adc
js
xor
cmp
mov
sahf
lds
sarb
adc
add
sub
or
adc
aam
inc
test
lea
cld
push
imul
stc
dec
push
dec
xchg
outsb
ja
add
xchg
and
hlt
fbld
in
xchg
jnp
data16
dec
mov
adc
rcll
loope
aam
xor
and
push
push
paddusb
aad
std
clc
roll
sub
and
ds
mov
sbb
rcl
xlat
ror
jb
xor
fdivl
stc
add
ja
leave
stos
rclb
fs
and
pop
fiadds
aam
loopne
push
test
movsl
push
sub
pop
icebp
sub
out
es
sar
sub
out
ror
movsb
sbb
mulb
sarl
fs
xchg
aam
leave
clc
in
ljmp
dec
in
or
stc
jp
insb
xchg
jns
push
push
add
popa
mov
testl
mov
pop
ds
inc
adc
xchg
stos
int
aam
sahf
test
mov
repz
clc
lret
cltd
sub
push
xchg
adc
stc
add
outsb
fs
repz
cld
ret
shrl
lret
jl
stc
cmp
cmpsb
cmpsl
cmp
jne
jg
pop
iret
dec
inc
mov
rolb
movsb
in
cmc
adc
in
enter
or
sbb
cmpsb
nop
push
fs
shl
stos
icebp
mov
rcrl
xchg
insl
and
mov
or
mov
js
das
pop
pop
push
push
or
sub
lods
in
je
enter
out
fsubs
rorl
pop
aam
mov
mov
pushw
inc
pop
mov
inc
or
lds
xchg
jl
fsubrs
aad
pop
xchg
andb
push
bound
jno
loopne
clc
out
xor
aaa
pop
ret
mov
sahf
sub
fisubl
js
arpl
mov
pusha
and
pop
fsubs
leave
mov
sti
push
mov
scas
enter
cs
cmp
mov
sbb
lock
in
mov
fcmovnbe
imul
test
sbb
cld
nop
cmpsb
push
fdivrs
jne
out
loope
sahf
rcll
imul
mov
into
gs
int3
les
jno
notl
ret
mov
fs
or
insl
adc
inc
mov
xor
dec
aad
inc
aam
inc
ss
or
out
inc
lcall
pop
adc
and
dec
cmc
div
dec
mov
sbb
cmp
data16
pop
inc
jle
sbb
aam
inc
int
and
inc
mov
or
sub
xor
cmc
inc
ss
jno
mov
push
ljmp
in
adc
fbstp
clc
push
xor
shrl
arpl
xchg
xchg
mov
and
jle
or
invd
jle
cld
std
inc
shll
enter
mov
inc
ss
push
cmp
xor
icebp
mov
aas
fmuls
add
push
push
or
mov
mov
ret
out
push
test
push
mov
popf
nop
push
or
leave
jmp
adc
jg
dec
xor
inc
and
mov
mov
jle
addr16
jge
mov
cmp
sub
or
lods
std
mov
shrb
es
dec
cmp
xor
cmpsb
add
xchg
mov
jbe
mov
jne
mov
adc
xor
sbb
aaa
mov
sbb
sbb
mov
push
loopne
mov
sahf
ret
mov
ror
add
iret
addr16
js
dec
sbb
xor
incb
xchg
push
das
xchg
in
adc
sbb
fcoms
add
ds
sub
pop
cmp
sbb
mov
mov
and
loopne
mov
loopne
out
xchg
out
jmp
dec
loop
xor
jo
mov
jb
mov
jl
mov
jle
or
push
lods
or
lret
std
ror
jg
fs
incl
push
pop
xchg
movsb
jmp
enter
push
aas
std
push
rclb
jne
int3
push
xor
xor
sbb
mov
movsl
sbb
dec
lea
arpl
pop
mov
mov
mov
push
inc
int
cli
and
flds
mov
fstpt
push
pop
and
out
mov
dec
icebp
cmp
mov
jns
inc
inc
outsb
sbb
dec
ljmp
sti
xchg
addl
xlat
dec
test
loop
cli
rolb
sub
test
dec
fcmovu
push
psubb
mov
insb
aas
add
test
and
inc
rcl
adc
mov
dec
jl
jbe
scas
or
cmp
mov
or
jbe
sbb
ficompl
pop
enter
cld
ret
sidtl
stos
stos
loop
movsb
adcl
and
push
pop
push
xchg
pop
ud1
popf
loop
xchg
jns
push
out
lods
mov
pusha
insl
push
fdivr
or
xor
jne
lret
int3
xchg
push
mov
ror
notb
daa
loop
push
gs
icebp
nop
testl
jne
or
jge
pop
adc
mov
and
fbld
push
daa
and
xor
ret
les
lret
cs
lock
inc
add
jo
xchg
out
not
stc
pop
jne
das
std
or
sub
cmp
jle
xchg
fiaddl
jb
test
push
adc
sub
pop
jne
xor
andl
mov
fwait
cmp
repz
xchg
loopne
iret
mov
push
icebp
cmp
shlb
cmp
inc
mov
add
scas
scas
xor
nop
or
xchg
cmp
enter
fimull
or
cmp
stc
mov
fiaddl
xchg
mov
insb
imul
dec
lock
test
cmpsl
data16
or
imul
faddl
lock
cmp
inc
pop
in
out
lods
mov
or
sti
push
into
cmp
popf
sub
stc
cmp
out
scas
inc
lods
nop
jae
in
adc
loopne
arpl
push
push
mov
out
mov
and
lods
popa
adc
fprem1
mov
fs
shrb
adc
mov
rcrl
lods
pop
xchg
cs
inc
aad
shrl
jnp
add
jle
fcomps
jbe
shlb
inc
mov
and
in
sbb
sub
inc
push
shl
adc
sbb
push
mov
sbb
js
inc
iret
sub
testb
xor
xchg
jo
mov
in
pusha
ret
leave
call
adc
fwait
sbb
ss
dec
cmp
dec
push
push
adc
ret
xchg
pop
or
fildl
pop
fwait
xchg
sbb
test
es
mov
and
jge
mov
lock
mov
sti
adc
ljmp
lret
or
aas
push
je
lcall
jns
inc
fnstsw
xchg
data16
imulb
inc
xchg
jnp
mov
in
sub
add
adc
pop
sti
out
sub
pop
clc
dec
jl
fxch
push
and
pop
leave
repnz
push
xor
mov
mov
or
js
xor
jmp
and
jecxz
fs
xchg
sbb
add
sbb
add
mov
inc
and
push
pop
xlat
inc
stc
cmpsb
sub
adc
dec
adc
pop
fmull
mov
stc
dec
rcll
mov
adc
sub
stc
inc
int3
pop
xlat
xor
rorl
cli
mov
cli
push
and
and
fisttpl
xchg
ficoml
mov
popf
leave
outsl
sub
mov
mov
je
dec
lcall
xor
jb
addr16
pop
pop
in
lods
das
and
pop
pop
jg
mov
push
inc
out
shrb
jae
inc
xorl
ljmp
push
and
pop
xor
add
or
add
mov
pushf
shll
inc
sbb
mov
sbb
dec
lret
dec
mov
cmp
outsb
dec
sti
cltd
dec
jp
push
inc
mov
rcrl
into
rcr
out
xchg
sar
cmp
ficoms
gs
paddw
jge
inc
ja
pop
in
cmp
test
xor
adc
dec
dec
pop
adc
or
push
adc
mov
push
cmp
sub
shll
xlat
xor
imul
rclb
fisubl
cltd
nop
repz
mov
mov
xchg
jp
dec
adcb
fwait
lock
ret
test
dec
out
leave
gs
xlat
fisubs
push
sub
aad
popa
leave
sbb
jno
xor
jne
jmp
mov
imul
pop
sub
pop
sbb
mov
ss
rclb
mul
xchg
xchg
pop
ret
fdivrl
pop
xchg
pop
add
rolb
push
inc
faddl
fimuls
push
arpl
mov
xor
xor
jge
lods
adc
push
push
addr16
add
pop
pop
aad
rcll
sub
push
mov
xor
dec
cmp
les
rorl
push
ret
rcrl
and
ja
jo
fisubrl
orl
inc
xchg
mov
mov
fs
and
outsb
shll
xor
adc
jecxz
jge
add
dec
mov
js
sub
aad
push
cmp
cmp
jle
nop
jbe
cmpsl
fidivrs
adcl
pop
xchg
lock
jnp
adc
out
cmpsl
shr
push
cvttps2pi
cli
jg
inc
mov
or
mov
mov
into
jecxz
mov
xchg
mov
pop
pop
mov
adc
jp
sub
ret
dec
ja
jp
jns
dec
jg
shr
xor
cmc
stc
dec
repnz
push
jmp
daa
sti
xlat
rcr
rclb
sbb
ds
push
adc
arpl
adc
mov
pushf
lret
inc
fsubrs
repnz
mov
negl
js
push
cmp
add
js
mov
out
inc
sub
or
loop
and
xlat
add
loopne
add
add
xor
pop
or
ret
call
mov
mov
ds
jmp
in
inc
mov
lods
push
outsl
sti
add
cmp
dec
sbb
jg
out
inc
cmp
mov
arpl
lods
rorb
mov
jns
cmp
pop
sub
test
mov
fwait
jle
add
fsubl
mov
pusha
push
or
cmpsb
sub
cmp
push
dec
pop
lods
inc
push
testb
inc
bnd
xchg
jge
popa
mov
inc
jne
je
repz
mov
lock
jae
or
cmp
xchg
inc
or
and
sub
les
inc
out
shll
hlt
or
mov
in
cmp
in
es
lahf
mov
shlb
clc
adc
sub
pop
pop
leave
xlat
jo
sbb
pop
aam
das
cmp
popa
sbb
cld
lret
inc
ja
mov
lods
pop
mov
test
push
sbb
icebp
ret
out
sbbl
nop
std
lret
cmpsl
fdivs
sbb
inc
pop
push
in
push
jbe
movb
fsts
mov
inc
fimuls
in
cld
test
xchg
adc
push
mov
pop
fnstcw
pop
cli
cmpsb
jno
mov
dec
or
popa
dec
mov
mov
mov
inc
shll
adc
shll
test
cmp
aam
stc
jns
out
adc
mov
xchg
pop
xchg
adc
push
adc
rolb
aas
push
xchg
cltd
aaa
mov
enter
adc
xor
mov
sub
adc
popa
sub
xor
jo
push
adc
mov
rcll
shr
adc
shrl
mov
inc
call
insl
repz
popf
xchg
jnp
sbb
std
aad
movl
insl
shll
int
in
test
out
jmp
in
fmul
mov
aam
ss
insl
stos
or
push
imul
mov
dec
ds
ret
repz
push
cld
add
dec
stos
dec
ret
sbb
jge
sarl
outsl
outsb
popf
push
ret
jp
dec
jg
or
enter
xchg
rorl
rcl
or
mov
pop
jmp
sub
ja
pop
stos
pop
shrl
push
jne
je
dec
jns
minps
out
push
sbb
shr
adc
add
xchg
fstpl
push
pushf
cwtl
in
ss
sahf
or
xlat
lahf
xor
mov
jns
xor
insl
xor
mov
xchg
test
or
mov
push
push
add
jae
xlat
lock
fists
sbb
xor
dec
inc
sub
lret
inc
lret
and
aam
or
cmp
das
xchg
dec
xor
and
or
pop
lcall
mov
push
jmp
rcrl
aam
aaa
dec
stos
pop
mov
int3
mov
aas
sahf
sbb
ret
fistps
inc
adc
mov
xor
sbb
inc
xchg
insl
dec
iret
jmp
fs
jl
stc
pop
repnz
in
arpl
out
jnp
adc
into
or
pop
pop
mov
or
ret
pop
rcrb
pop
inc
lds
pop
or
mov
add
popf
sub
rcll
or
sbb
xchg
mov
xlat
stos
imul
xchg
add
jg
hlt
enter
jbe
push
cld
ljmp
push
scas
ss
call
lret
ljmp
pop
mov
rclb
dec
ret
xlat
and
in
dec
add
test
sub
and
sar
aam
js
std
ljmp
iret
cli
clc
inc
and
fwait
in
jb
jg
cmpsl
cmp
outsl
mov
jl
xchg
aam
jbe
mov
and
call
mov
pop
test
xor
sub
and
sbb
xchg
xchg
mov
test
sub
dec
mov
cld
xchg
push
mov
hlt
sbb
pusha
push
cmc
test
jns
enter
and
sahf
xor
and
movsl
loopne
add
mov
mov
push
cltd
mov
jne
faddl
aad
pop
pop
xchg
sub
pop
stos
jmp
out
insl
add
jb
daa
out
lahf
enter
and
inc
inc
ja
lret
pop
or
push
adc
out
roll
jne
sti
jb
in
das
xchg
sbb
and
pusha
test
xchg
or
ljmp
jle
ret
lods
xor
into
leave
inc
inc
arpl
gs
test
bound
or
push
lock
stos
icebp
ret
lcall
lock
or
movsb
push
ror
jno
aad
mov
adc
pop
inc
lock
cmp
jno
xorl
adc
jge
inc
cmp
dec
pop
mov
jp
mov
mov
jae
adc
mov
and
into
mov
je
add
xchg
adc
and
daa
push
xor
mov
add
mov
push
jo
iret
daa
cmp
leave
in
xor
sub
arpl
popf
cmp
pop
mov
ljmp
ja
sub
pop
add
jne
aad
jo
and
jle
mov
sbb
sbbl
mov
jl
xor
pusha
xor
xor
scas
push
sti
xor
xchg
adc
add
ret
into
mov
out
push
and
pop
mov
and
lock
cmp
decl
lcall
inc
divl
dec
popf
xor
xchg
jo
ss
lock
push
iret
clc
inc
add
icebp
jmp
int3
jno
mov
fwait
adc
xor
mov
in
test
arpl
inc
sbb
ret
lds
lea
out
jns
les
push
aad
std
dec
cmp
into
test
sti
pop
divb
lods
jno
fisttpll
push
push
adc
icebp
xchg
sub
inc
and
aad
push
cmp
mov
dec
cltd
movsl
cmc
push
out
lds
pop
mov
sub
or
pop
call
aam
imulb
push
xlat
sub
sbb
mov
mov
mov
loopne
jle
xor
imul
call
hlt
push
rcr
lds
aaa
ljmp
xchg
adc
push
sti
adc
rcr
ds
sbb
mov
mov
xchg
cmp
sub
xchg
xor
jp
jp
pop
outsl
cmp
outsl
cmp
xor
lahf
arpl
mov
cld
in
es
xor
out
in
std
pushf
xchg
ljmp
adc
lods
aaa
mov
sbb
push
push
and
push
xlat
int
lea
mov
pop
pop
sub
push
aaa
sub
jo
inc
sbb
rclb
sub
lret
pop
dec
out
xchg
rcll
les
or
inc
sbb
mov
pop
pusha
and
mov
ret
out
call
loope
mov
pop
cmp
xchg
lea
and
push
xchg
mov
push
aaa
jnp
icebp
int3
sahf
sub
jns
mov
ljmp
jge
sti
adc
shlb
in
push
push
dec
and
cmp
jge
shlb
cltd
inc
pop
adc
push
jns
and
pop
insl
xchg
jp
out
pop
in
xor
cli
stos
push
pop
repz
jbe
ljmp
push
pop
fmuls
int3
pop
fistps
icebp
inc
fildll
lahf
ljmp
test
sbb
xor
aam
jns
sub
in
xor
add
pop
jae
lock
popf
pop
jl
inc
and
inc
imul
cmpsb
test
push
testl
into
inc
jno
sub
dec
xchg
scas
mov
dec
cmp
mov
outsl
jbe
test
ss
adc
jbe
lea
je
fsubr
xchg
cltd
mov
sarl
mov
and
jl
cltd
fstpl
jp
in
js
inc
js
mov
lret
in
loope
mov
xor
cmp
lret
jne
xor
fsubrl
scas
cmp
cmc
pop
jne
ffreep
jae
mov
and
test
mov
bound
ret
scas
inc
sti
push
jmp
sbb
mov
aad
sub
xchg
ja
aaa
dec
sbb
push
adc
push
and
bound
rorb
sub
setl
adc
scas
sub
add
dec
popa
test
lea
mov
div
cs
repnz
push
xlat
xor
mov
fadd
sbb
lds
mov
sbb
pushf
fucomi
mov
mov
sub
notl
pop
xchg
adc
cmpsb
fcomip
fdivl
fnsave
test
das
add
dec
std
out
inc
xlat
call
enter
lods
mov
negb
cld
xchg
jbe
cwtl
jne
lcall
pushf
sub
mov
cli
icebp
lods
mov
pop
in
rolb
sbb
std
dec
add
popl
mov
jns
lea
pop
push
inc
imul
push
mov
loope
popa
fidivl
xlat
cmpsl
inc
jl
cmp
xchg
cmp
and
out
jne
rcrl
aas
insb
lods
jbe
pop
lds
bnd
dec
dec
dec
sub
push
je
test
or
mov
xlat
push
cmc
frstpm(287
fwait
cltd
xchg
push
xchg
das
mov
add
lods
clc
clc
xchg
inc
xor
jge
pop
dec
insl
xor
pop
add
rcl
sub
je
inc
in
mov
lods
mov
add
add
clc
scas
jne
dec
lret
xor
in
mov
mov
mov
xchg
lcall
mov
sub
jl
addl
int
xchg
pop
adc
outsl
cmp
pop
push
add
xor
nop
cmp
inc
sarb
das
pop
push
outsl
ja
add
ret
in
sbb
xchg
in
jp
jae
mov
lahf
pop
jo
adc
adc
cmc
xor
mov
push
scas
jns
dec
mov
dec
push
jb
sub
cmp
test
dec
gs
xor
scas
aad
and
xlat
dec
aam
cmp
fmulp
imul
adc
dec
or
push
xor
sub
inc
rol
fwait
rcrl
gs
or
outsb
test
push
push
outsl
xor
pop
adc
out
out
das
lea
stos
pop
push
adc
shr
insb
adc
stc
jle
cwtl
mov
sbb
adc
inc
sbb
pop
or
test
js
clc
dec
icebp
pop
pop
or
mov
in
ss
sbb
cmpsl
shrl
fisttpll
xchg
or
fdivrs
mov
stos
inc
bound
scas
das
cmpsl
xchg
sub
dec
inc
mov
push
dec
ljmp
pop
cmp
shrl
inc
pushf
popa
dec
imul
popa
in
in
inc
jno
cmp
movsl
pop
push
mov
xlat
pop
adcb
js
add
les
in
fsubl
mov
scas
in
mov
mov
aas
stc
jmp
into
add
insb
std
loope
fwait
jmp
push
lds
push
mov
enter
subb
jl
push
loope
sbb
pop
xlat
xchg
lea
scas
inc
repnz
xor
mov
dec
mov
test
push
mov
jnp
dec
mov
cmp
dec
iret
jge
pop
out
dec
adc
aam
daa
insb
pop
pop
jno
mov
or
fwait
or
push
push
mov
cmp
dec
shr
movsb
sbbl
pusha
rol
cmc
inc
sbb
enter
cmp
push
jns
pop
insb
mov
adc
loope
dec
cmpsb
insb
adc
adc
xchg
mov
test
in
in
or
cli
mov
mov
movsl
mov
subl
xor
xchg
ret
cmp
xchg
les
cmp
inc
rorb
je
inc
roll
add
xlat
lock
jge
loop
sarb
aaa
ret
nop
clc
inc
pop
clc
pop
push
sti
mov
and
imul
push
push
aam
inc
pop
xchg
aaa
push
fisttpll
cltd
ds
xor
xchg
test
xchg
and
push
das
push
es
mov
jae
test
push
fs
into
push
fildll
rcrb
xor
and
push
out
fbstp
leave
mov
loopne
mov
jnp
adc
inc
cmp
or
fs
push
je
add
mull
dec
mov
push
lcall
in
add
sub
sub
test
insb
dec
xor
or
fnstcw
lret
and
movsl
xchg
xchg
in
popf
std
add
dec
push
push
dec
ds
loopne
jo
pop
mov
aaa
dec
incb
shrl
dec
and
push
inc
pop
and
scas
and
es
jo
push
das
lods
mov
pop
add
jb
dec
inc
mov
dec
aam
or
jecxz
pop
inc
xchg
imul
ret
orl
mov
or
fstps
cmpl
add
les
pop
adc
xlat
daa
xchg
inc
mov
inc
xchg
sub
in
pop
mul
icebp
pop
sar
subb
sub
fwait
fs
mov
mov
test
popa
aaa
inc
test
in
mov
jge
andl
mov
shll
aad
pop
dec
and
decb
pop
xchg
test
pop
call
shrl
xor
insb
mov
jl
or
add
iret
ja
pushl
cltd
call
push
fdivrp
xchg
jle
lcall
leave
fsubrl
inc
push
jns
xchg
mov
cli
loope
cmpsl
out
ret
push
insl
inc
imulb
sub
cmp
je
lahf
scas
test
sbb
dec
data16
lods
enter
ljmp
pop
jle
test
mov
push
pop
push
add
stos
insb
call
lods
loop
fsubs
shll
mov
jo
mov
sub
add
cmp
testb
inc
fwait
test
lods
xchg
fadds
out
mov
adc
lcall
insl
xchg
jae
fwait
cmp
es
aas
push
mov
clc
popl
stc
pop
mov
mov
cmpl
fcomps
sbbb
insb
lods
sbb
leave
scas
add
out
cmc
addr16
addb
xorb
outsb
or
jl
sbb
push
rcr
and
cwtl
or
aam
and
push
das
test
pop
stc
jg
jno
jle
sti
out
jae
push
cwtl
xor
fbld
shrb
lret
pop
loope
fldlg2
xchg
stc
dec
lds
sbb
inc
adc
mov
sbb
jmp
push
sub
lods
xchg
jmp
aam
mov
icebp
insl
fcoms
js
js
jmp
or
lods
push
push
cmc
jp
outsb
xchg
aam
dec
bnd
and
push
aam
mov
loop
fistl
mov
pop
stos
add
inc
sub
icebp
aad
cs
inc
call
out
cmc
and
mov
mov
inc
test
loope
mov
mov
mov
test
inc
xor
push
test
ljmp
mov
lea
icebp
jmp
dec
inc
sti
push
push
cs
jb
xor
jne
fwait
outsl
adc
sbb
xlat
dec
stos
xorb
push
in
xchg
and
jns
mov
sbb
das
or
push
jb
mov
cli
inc
inc
and
fadds
fbld
pop
inc
aad
sbb
push
das
aam
cmp
stos
rcr
push
jne
inc
mov
mov
dec
xorb
test
les
iret
fsubp
inc
lock
loope
out
dec
cli
lock
decl
cld
push
xor
xor
and
xlat
pop
addr16
mov
sahf
add
lock
test
les
fistl
sub
xlat
pop
testl
test
sti
das
xchg
movsl
dec
push
mov
mov
jae
lret
jmp
cltd
rcl
in
cmp
enter
jl
pop
mov
dec
jle
sti
pop
iret
mov
adc
pop
icebp
mov
push
add
mov
push
pop
inc
push
shrl
or
test
aaa
pop
addr16
and
clc
mov
sbb
jno
mulb
loopne
fs
push
mov
mov
sbb
lea
ret
sub
mov
jo
sub
sbb
inc
mov
sbb
in
repnz
sub
xor
inc
mov
mov
roll
push
xchg
repz
lcall
repz
pop
fmuls
lret
xchg
or
je
cmp
add
pop
inc
xor
xor
pop
test
mov
sahf
sub
insb
lds
addr16
addb
rorb
jne
test
dec
les
adc
lock
pop
push
mov
mov
leave
sti
mov
jne
mov
movsl
jmp
movsl
std
aas
cs
jl
inc
pop
jae
xchg
xor
lds
shr
das
jbe
in
pop
or
xor
jns
rorl
push
jne
mov
dec
es
aam
je
rcr
pop
dec
cltd
mov
cmp
xchg
adc
inc
sti
inc
xor
stos
dec
cmp
fcompl
sbb
pop
add
dec
cld
push
adc
xchg
outsl
mov
inc
out
cmp
jl
insb
xor
lea
inc
dec
les
push
andb
pop
cwtl
inc
pushf
push
sbbb
aad
jno
xchg
idivb
xchg
inc
sub
cmp
ficoml
loop
jb
fs
out
shl
jl
mov
fs
nop
sbb
push
lock
lcall
aam
mov
or
dec
test
clc
lods
fstl
dec
jnp
cmc
push
lock
leave
push
repnz
push
data16
xchg
xchg
pop
xchg
aaa
scas
xchg
aas
xchg
and
stc
test
inc
icebp
jae
int3
jmp
sbb
mov
cmp
adc
stos
lret
shll
sbb
cmp
stos
aaa
shlb
lea
dec
dec
inc
sbb
dec
decl
fisttpl
push
add
imul
je
push
mov
jbe
les
push
dec
in
jno
push
inc
pop
fs
xchg
jo
jecxz
inc
sbb
sti
dec
and
stc
movsb
sbb
mov
xchg
addl
push
mov
mov
adc
mov
aam
dec
addl
xor
and
xor
sbb
mov
popf
ja
icebp
lea
mov
mov
fsubr
aaa
rcll
push
leave
rcr
arpl
repz
roll
sbb
push
int3
hlt
mov
adc
and
and
jg
xchg
icebp
xor
and
addr16
push
add
in
xor
push
push
lahf
or
push
mov
xchg
sbb
push
fs
add
mov
inc
cmp
ret
adcb
popa
out
inc
loop
adc
pusha
mov
scas
xchg
inc
cmp
inc
push
add
imul
and
popf
push
test
loope
insb
xor
subl
sub
pop
add
in
fistpl
nop
rorb
pop
cli
mov
jns
lock
add
sahf
das
pop
add
jl
inc
cmp
push
lcall
push
mov
rorl
ror
push
mov
call
push
or
testl
ljmp
pop
pop
ljmp
sahf
std
push
fiadds
out
leave
idivl
mov
mov
loopne
orb
bound
in
sbb
xchg
es
icebp
xor
mov
mov
aas
test
jmp
inc
das
shrb
jl
jo
cltd
push
mov
imul
clc
jge
pop
sahf
rcrb
add
out
pop
push
rcrl
cs
push
ret
ret
jle
dec
pop
out
adc
fbstp
sub
pop
mov
mov
lds
nop
cmpsl
in
stc
gs
adc
ds
sub
cmc
nop
inc
or
xchg
scas
mov
push
pop
fnstsw
out
mov
push
mov
aad
cs
mov
in
ficoms
xchg
xor
repnz
xor
mov
mov
cwtl
mov
shr
cmp
stos
xchg
pop
pop
ljmp
in
jbe
dec
ss
mov
and
push
add
sub
outsl
mov
mov
xor
xor
adc
dec
icebp
imul
lahf
out
addr16
nop
push
icebp
icebp
lock
mov
shrb
mov
xor
push
dec
inc
pop
push
mov
jl
pop
fcomip
iret
xchg
movsl
pop
out
icebp
outsl
and
push
mov
dec
aad
test
lahf
scas
nop
push
mov
push
loopne
aaa
pop
nop
cmp
xor
push
aam
push
ficomps
xor
sarb
fwait
outsl
adc
push
pop
lss
std
cwtl
xor
dec
sbb
cmp
inc
or
mov
pop
adc
leave
xlat
push
xchg
scas
roll
lock
testb
jecxz
sub
sub
icebp
mov
lods
adc
std
inc
adc
add
fdivp
movsl
cwtl
sbb
in
mov
and
out
mov
mov
mov
dec
xchg
add
inc
bound
adc
pop
push
mov
cmp
int
shl
fiadds
shll
jle
inc
gs
imul
jno
xchg
adc
jno
mov
movsl
rcl
jl
jo
push
imul
cmp
ljmp
pop
jle
imul
cmp
push
lea
dec
cwtl
scas
jbe
stc
jge
incl
sbb
and
fcompl
inc
fdivrl
pusha
fists
pusha
xchg
sub
mov
and
cli
daa
xchg
add
cmp
mulb
xchg
scas
lds
inc
fwait
sub
scas
pop
cmpsb
rcl
nop
movsl
icebp
mov
xchg
mov
cld
inc
sub
sbb
pop
cli
popa
lock
cmp
add
aaa
icebp
inc
imul
mov
and
testl
and
mov
or
in
lods
mov
pshufw
pop
push
dec
jecxz
incb
sub
icebp
push
inc
sti
mov
mov
dec
jb
cmpl
lods
sub
outsl
inc
addr16
rcl
fistpll
inc
adc
into
cld
imul
mov
mov
push
sub
fmull
xchg
rolb
cmp
pop
pop
test
not
mov
sti
xchg
or
mov
sbb
in
jecxz
sbb
in
xchg
ficoms
dec
cmp
xchg
mov
pop
xchg
xor
sbb
imul
jge
sbb
lahf
scas
dec
dec
lret
push
cwtl
psrld
jmp
push
push
lods
dec
lret
or
sbb
mov
xchg
xor
sarb
addps
lods
or
dec
xor
adc
daa
out
push
out
int
mov
testb
jae
push
lods
orb
cmp
add
insb
jl
xchg
movsb
mov
lock
fldcw
pusha
shll
iret
out
aad
int
pop
jo
cwtl
inc
nop
nop
adc
lds
jecxz
jnp
pop
shll
pushf
testb
xchg
jl
or
rcl
movsb
inc
fstpt
mul
or
testl
ss
push
leave
orl
inc
insb
cmpsb
lcall
movsl
push
pop
push
pushf
pushf
jo
hlt
inc
popf
jae
out
je
inc
cmpl
loopne
enter
dec
lahf
inc
leave
lret
aaa
test
fldcw
insl
mov
ja
adc
insl
repz
cmp
addl
jge
in
push
xor
pop
xchg
adc
or
push
cmp
adc
sub
mov
lea
cmpsl
xchg
push
add
cmp
loope
mov
add
pusha
ficompl
ljmp
aad
aad
mov
js
dec
adc
imul
pop
fmull
mov
push
gs
pusha
iret
out
cli
push
stc
out
into
xchg
cltd
push
es
adc
stc
pop
pop
je
stc
sbb
cmp
mov
lahf
shl
dec
repnz
pop
test
dec
xchg
pop
shll
fcomps
xchg
mov
jae
test
out
sub
mov
ja
cmc
mov
sub
shll
rorl
fbstp
jecxz
sbb
inc
repnz
iret
scas
loop
dec
aas
inc
xchg
dec
loop
hlt
mov
cmp
mov
nop
fdivl
inc
pop
and
sub
aam
lahf
mov
repz
add
and
pop
push
xor
add
test
sub
loope
push
lret
mov
xchg
iret
mov
mov
xor
push
jo
fmull
add
jo
cmc
adc
jbe
mov
in
testl
inc
in
dec
lods
out
and
sbb
push
js
lods
inc
pusha
pushf
xchg
jg
cld
jo
or
dec
inc
and
scas
popa
jp
cmc
and
adc
mov
bswap
movswl
jge
fimull
mov
in
fldt
inc
sub
inc
cli
xchg
nop
sti
movsl
scas
shr
push
cltd
int3
clc
ret
pop
aaa
push
leave
out
pop
scas
xchg
nop
mov
leave
inc
or
mov
lods
lods
bsf
or
es
sbb
mov
pushf
add
sub
xchg
and
insb
pop
pop
mov
sub
lea
stos
xchg
mov
inc
jne
sbb
or
mov
jno
pop
inc
shlb
lret
push
unpcklps
cmp
iret
mov
jns
push
out
lods
xor
xchg
andl
mov
sbb
push
push
mov
shrb
mov
out
xor
or
iret
cmp
shlb
shll
popa
inc
or
xor
mov
lds
data16
mov
ret
add
in
aaa
popf
jnp
shll
pop
aas
xchg
incb
xor
test
mov
ja
inc
sub
lods
mov
jle
test
cmp
dec
xor
and
mov
push
lods
stos
sti
xor
xor
aad
mov
inc
std
pop
cmp
test
jmp
clc
loop
in
cmp
hlt
push
xor
call
mov
movl
inc
test
mov
mov
xchg
push
fldl
dec
in
sbb
jmp
lock
mov
pop
lds
orl
lods
jl
test
lods
ja
pop
ds
clc
outsl
lea
jp
fs
xor
in
mov
roll
fiadds
xorb
pop
jmp
cmp
and
lcall
adc
clc
pop
jp
push
loope
in
sbb
incl
xchg
into
int
out
loope
jbe
push
fdivp
iret
add
cmovl
ret
data16
mov
push
mov
mov
lahf
adc
icebp
sahf
adc
sbbb
jnp
xorb
jo
cmp
mov
roll
inc
push
push
add
jp
cld
lods
or
lock
test
jno
sbb
mov
push
cmp
cmpsl
inc
popf
sub
dec
popa
pop
pop
imul
gs
add
pop
jge
mov
jp
pop
lahf
mov
inc
std
sub
cmp
push
pop
test
cmp
inc
add
pop
je
or
inc
push
std
incl
sub
int
lds
mov
sbb
adc
daa
es
std
push
lret
rcr
or
xor
hlt
aaa
out
or
sub
test
sbb
mov
and
pop
sbb
dec
test
pop
mov
roll
pop
out
adc
push
in
fs
inc
stc
insl
add
push
jnp
cmc
cmpsl
adc
mov
das
lcall
pusha
movsl
xchg
sbb
in
das
mov
xchg
pop
xchg
scas
mov
fcoml
subb
push
dec
mov
loop
daa
stos
in
and
arpl
sarb
mov
jmp
dec
mov
sbb
ja
cmpsl
sub
sti
adc
lods
push
insl
mov
lock
test
hlt
sbbl
popf
cmp
and
dec
sub
out
test
cmp
pushf
mov
mov
mov
int
adc
sahf
push
mov
pop
dec
dec
jmp
cld
loopne
mov
sbb
add
mov
shll
xchg
jge
pop
pop
and
out
pop
iret
push
and
aam
fwait
and
icebp
push
andnps
loope,pt
inc
xor
add
xchg
fwait
cmpsb
xchg
js
mov
int
inc
leave
test
inc
aaa
in
fnstcw
inc
stos
jbe
jae
sub
inc
fs
mov
and
push
sbb
aam
aad
cmp
lds
ss
add
mov
jp
mov
stc
testl
and
adc
push
jb
aaa
test
das
jbe
ss
test
inc
int3
xchg
push
pop
aam
enter
stos
adc
test
shrb
sbb
lock
enter
and
lret
sahf
or
out
xchg
popf
pop
mov
movups
repz
mov
add
adc
outsb
adc
jnp
dec
sub
mov
cld
sbb
les
xchg
cmc
xchg
and
jne
pop
fstps
adc
pop
jno
rclb
mov
cltd
jns
jmp
jg
sti
xchg
inc
jp
shlb
mov
sbb
iret
daa
sahf
shl
mov
mov
mov
mov
xchg
lret
clc
repnz
call
ret
push
pop
pop
push
jp
sbb
mov
and
jle
mov
push
dec
rolb
sub
jg
test
sbb
das
mov
sub
icebp
andl
stc
push
mov
add
insl
xlat
dec
mov
in
mov
aaa
dec
sub
push
insl
jno
cmp
dec
push
xchg
pop
test
add
addr16
push
shr
fistps
lea
in
xor
or
subb
or
mov
popf
aad
sbb
out
dec
sub
bound
popa
inc
dec
sbb
mov
jbe
xchg
cmp
mov
jg
or
ds
leave
call
icebp
inc
sti
pop
mov
push
adc
push
stos
cmp
jmp
xchg
jle
adc
adc
sbb
int
push
insl
add
pop
cs
xor
movsl
sbb
lahf
xlat
sbbl
lret
andl
pop
or
xchg
mov
cmpsl
sti
iret
jl
add
hlt
int
xchg
nop
popf
nop
jl
and
ds
xor
mov
nop
fcompl
dec
add
mov
push
add
inc
rorb
cmp
jno
orl
or
inc
test
xor
je
jge
andl
fldenv
test
jne
loopne
mov
mov
mov
xor
jne
xor
jno
shrb
and
ss
xchg
loopne
lock
cmc
xchg
out
sub
cwtl
cmpb
xor
ss
imull
lcall
or
in
jno
stc
sbb
dec
jecxz
mov
and
dec
mov
das
sbb
sbbb
pop
adc
je
jl
cs
movl
cmp
out
enter
lea
sub
icebp
add
pop
dec
movsl
mov
dec
repnz
sub
pushf
jns
adc
arpl
sti
movups
or
icebp
in
aaa
add
leave
dec
and
out
lea
cmp
or
mov
ret
push
mov
inc
mov
cmp
aad
mov
mov
sbb
hlt
ljmp
dec
mov
leave
movsb
adc
inc
jl
fsubr
mov
fsts
enter
xchg
push
xchg
push
adc
xchg
bound
push
daa
push
or
shrl
xchg
aas
loopne
or
inc
or
xchg
sbb
cmp
fidivrs
cmc
inc
movsb
jae
jae
loope
sub
push
fmul
cmpsl
es
sub
cwtl
lret
dec
cmp
jae
pop
addl
xor
rol
mov
xor
test
sahf
jo
mov
jbe
pusha
insb
data16
jne
idivb
mov
inc
fwait
fwait
and
cmp
pushl
fnstenv
aam
push
sub
mov
sbb
aad
fstl
pop
scas
cmp
fistpl
push
jnp
inc
enter
cmc
adc
pop
lods
ficoms
or
movsl
add
pop
cli
push
ss
and
call
push
ljmp
mov
cmpb
push
gs
pop
sahf
inc
outsb
mov
pop
lahf
mov
add
xor
sub
adc
mov
pop
sarb
push
sarb
pop
cmp
or
mov
testb
lods
repnz
jle
sub
jbe
sbb
stos
outsb
or
sbb
shr
mov
notl
popf
out
imul
aad
clc
mov
test
es
xchg
ret
adcb
jl
arpl
inc
push
sub
cwtl
fsubrl
lds
dec
into
xlat
hlt
mov
mov
jecxz
pop
mov
or
pop
add
inc
dec
or
inc
or
or
push
stos
popa
jmp
and
cwtl
shr
sahf
mov
mov
add
push
jns
pushf
push
jp
cwtl
pop
dec
sbb
adc
sub
push
xchg
xchg
std
add
clc
adc
notb
insb
cltd
push
lret
popf
and
dec
stos
adc
lret
adc
add
pop
xor
ret
aam
lods
pop
setbe
push
test
arpl
icebp
jmp
stos
cmpsl
xchg
fsubr
rcl
cmc
sarb
jl
shl
movsl
push
dec
popa
loope
mov
adc
ficomps
sti
xchg
or
mov
jnp
mov
sbb
ret
out
hlt
lahf
jns
pop
mov
stos
aam
add
pop
sbb
pop
dec
push
mov
into
and
jnp
cld
paddw
jp
out
les
push
ja
mov
je
pusha
out
aad
cli
cmp
jecxz
jge
and
jmp
sahf
jb
lret
rclb
pop
test
push
sub
std
pop
add
ficoms
pushl
jb
dec
or
repz
sti
mov
push
mov
or
sbbl
aas
jne
in
ret
mov
mov
out
adc
stos
pop
clc
push
add
mov
adc
add
rol
rcrl
lods
or
inc
and
cli
sarb
jecxz
pop
int3
dec
sbb
jp
mov
scas
inc
clc
jb
test
and
mov
das
add
loope
inc
mov
outsl
shrb
xor
aas
filds
test
or
mov
pushf
cmp
mov
sub
out
icebp
repz
addr16
testb
or
movsl
mov
sbb
aad
int
cmpsl
dec
cmpsb
int3
push
loopne
ja
cmp
popa
call
push
jge
stc
jno
test
aam
sub
scas
int
or
inc
push
repnz
setle
fnstcw
popf
push
sar
out
sub
pop
add
mov
cli
gs
dec
mov
and
sbbb
sar
pop
int3
xor
xchg
out
cmp
push
out
outsl
test
add
or
test
mov
stc
scas
mov
xchg
xchg
inc
fwait
mov
sub
dec
not
mov
pop
dec
in
cmp
adc
ljmp
pop
icebp
jbe
push
inc
dec
mov
test
and
adc
and
into
dec
cmpsl
dec
lahf
jle
sub
push
clc
sbb
iret
rol
imul
scas
pop
daa
dec
jge
mov
lock
inc
shrb
clc
js
adc
xchg
mov
pop
clc
shlb
repnz
shll
mov
lar
dec
add
mov
stc
fcom
jge
lods
jbe
aad
push
or
xchg
xor
pop
pop
mov
stos
out
insb
pop
jae
ret
into
arpl
hlt
outsb
testb
inc
out
sub
jns
push
push
std
pop
int
or
aam
xor
sub
sub
mov
adc
ficompl
hlt
push
inc
xchg
mov
mov
aas
cmpsb
test
or
rcl
fsqrt
push
adc
sub
jle
dec
inc
jmp
inc
addr16
add
sti
rclb
mov
pop
in
mov
outsb
push
test
mov
pop
jg
testb
or
and
inc
xchg
cwtl
in
and
xchg
push
clc
cmp
or
call
cli
inc
sahf
loopne
jge
jbe
inc
inc
mov
daa
test
std
inc
mov
stos
jb
dec
mulb
add
pop
hlt
pop
dec
push
inc
sbb
cmp
sub
jne
ds
movsb
adc
inc
jg
bt
sub
sub
mov
or
loope
outsl
pop
jnp
inc
pop
adc
mov
mov
stos
inc
popa
shll
int3
nop
pushf
in
sbb
es
enter
outsb
fists
es
lods
add
aad
aas
push
mov
jne
jno
ljmp
mov
mov
mov
push
mov
cmpsb
test
gs
ret
ja
inc
gs
lret
jge
popf
pop
dec
adc
decb
mov
mov
test
sbb
and
pop
adc
dec
or
and
stos
mov
push
stc
fs
or
add
gs
xor
fidivs
lret
and
jno
push
aaa
inc
pop
aaa
int3
mov
pop
test
mov
test
mov
fwait
movsl
bound
jae
pop
cmpsb
push
outsb
add
jge
lret
out
adc
sti
dec
sbb
js
dec
mov
mov
mov
aas
clc
shlb
mov
sti
cmpsl
inc
jno
insb
fidivs
fst
test
stc
test
mov
push
mov
mov
add
stc
gs
aas
mov
pop
repnz
into
adc
cmp
negb
sub
loop
les
ljmp
daa
jmp
test
mov
aas
sahf
mov
aad
inc
in
testb
add
mov
roll
add
aaa
or
sub
sub
and
xchg
loop
inc
sbb
add
xlat
push
cmp
cmpsl
out
mov
fwait
mov
stos
rorb
or
or
add
push
orl
cmpsl
xchg
mov
xor
cmp
xchg
rol
jecxz
enter
addr16
pop
popf
xchg
js
cmp
icebp
hlt
and
push
icebp
push
repnz
and
or
mov
or
sbb
icebp
ficoml
leave
jg
not
aad
aaa
or
inc
mov
rolb
out
lods
or
fisttpl
gs
aad
es
leave
xchg
mov
fwait
pop
jmp
cmpsb
lahf
dec
push
jle
and
add
or
out
pop
xorb
mov
xchg
xchg
sbb
mov
pop
xchg
mov
movsb
sbb
adc
shll
insb
mov
inc
dec
cmp
mov
leave
stos
fldl
dec
fsubs
scas
cmpsl
inc
jo
repnz
dec
pusha
inc
out
mov
ret
lret
jecxz
and
lret
fldcw
ss
mov
cmpsb
sub
cmc
dec
clc
xchg
mov
pop
adc
and
es
ret
insb
int3
aad
pusha
call
stos
cmc
sub
sub
fldcw
arpl
xor
fs
mov
fcoml
sbb
cmp
cmp
test
daa
push
test
test
or
cld
jno
push
mov
jecxz
or
gs
lods
aas
lods
test
cmp
cmp
add
push
jg
dec
sbb
adc
out
and
stos
pop
sahf
jecxz
mov
stc
xchg
pusha
add
test
push
fsubl
sti
pop
dec
shl
pop
ds
stc
test
pop
xor
jae
mov
scas
mov
add
dec
jmp
dec
dec
push
sub
mov
cltd
loopne
test
shll
test
dec
mov
adc
dec
xor
out
mov
shlb
hlt
stos
cmp
imul
xor
scas
out
inc
dec
push
jge
aad
sub
inc
pop
pop
adc
pop
and
sar
movsl
incl
and
dec
stc
xchg
and
pushf
insl
xchg
out
and
dec
negb
mov
inc
outsl
xor
aad
lods
in
pop
dec
xchg
jbe
push
imul
rclb
mov
dec
xlat
jg
add
mov
jmp
and
xchg
popa
add
dec
fsubrl
pop
fucomp
test
mov
lahf
lea
xor
ffree
push
or
vmread
mov
fstl
add
xor
inc
sarb
pop
test
cltd
arpl
push
adc
inc
je
push
jns
adc
std
in
int
pop
mov
mov
push
gs
into
or
pop
mov
xlat
lods
rorb
xlat
mov
xchg
sti
scas
cltd
in
clc
lock
mov
pop
mov
pop
xchg
mov
insb
dec
push
push
in
ret
mov
mov
or
dec
leave
mov
pop
movsl
cli
je
test
xchg
xchg
pop
arpl
movsl
bound
xchg
imul
or
outsb
fnstenv
cli
rcrb
xor
fucomip
out
repz
inc
out
aam
pushf
andl
sbb
lds
out
jecxz
xlat
push
lods
pop
mov
inc
fs
xor
popf
jmp
lret
leave
adc
lldt
mov
ja
pop
push
xor
into
sti
sub
mov
mov
lahf
lea
pop
dec
stos
mov
call
in
dec
cmp
out
mov
or
repz
push
or
mov
sub
mov
aad
popa
xchg
lcall
sbb
adc
and
push
outsb
scas
bound
dec
sub
scas
mov
cmp
fmull
xchg
xchg
or
xor
xchg
gs
jnp
xor
neg
xchg
sub
xor
stc
pop
scas
add
mov
xchg
push
out
cmc
fwait
jo
scas
loop
adc
fcompl
into
aaa
test
daa
pop
ficoms
dec
cmp
mov
push
pop
cmpl
or
aad
cmpsl
frstor
rcr
pop
loope
mov
js
fiadds
lcall
in
lret
xchg
lods
adc
sub
jg
sub
push
pop
push
jbe
addr16
and
in
sbb
pop
mov
mov
outsl
addl
addr16
js
fists
faddl
push
dec
xlat
push
rcrb
popf
adc
and
cld
xor
ljmp
mov
rcrl
dec
xchg
xor
mov
sbb
xchg
iret
xchg
xchg
enter
not
or
bound
in
icebp
out
stos
aaa
xor
or
dec
loope
and
movsl
push
jne
or
jp
push
insb
inc
out
jle
repz
xchg
fsubs
fldcw
test
cmp
inc
pop
sub
mov
pusha
orl
mov
xor
jno
add
inc
lods
movsl
movsb
data16
sub
adc
test
mov
loope
push
pusha
stos
xchg
nop
daa
sbb
dec
inc
mov
mov
loopne
into
mov
xor
pop
mov
aaa
je
or
mov
adc
lock
adc
fsts
cwtl
cmp
mov
push
cmpsb
test
push
test
mov
loope
test
aad
testb
nop
fbld
cli
dec
dec
xchg
inc
dec
sarb
fldenv
inc
sub
cmc
popf
xchg
xor
sub
or
push
cmpsl
in
in
scas
hlt
inc
fldl
inc
mov
shlb
pop
xlat
sub
rcrb
gs
sub
cs
sbb
mov
rcr
insb
mov
cltd
mov
inc
das
loop
loope
mov
mov
sbb
outsb
mov
mov
push
arpl
jl
xchg
xor
pop
rcrb
sub
in
dec
lret
je
test
roll
cmp
jno
sbb
mov
mov
out
loopne
push
les
push
imul
cmp
or
inc
jbe
int
fnsave
adc
orl
cmp
mov
push
mov
or
sahf
mov
xchg
packuswb
push
aas
or
scas
stos
movsl
adc
movsb
or
out
mov
sub
into
lcall
cmp
rorl
adc
loope
mov
ja
mov
dec
daa
incl
mov
fucom
lret
push
cmp
std
sbb
jb
push
cli
and
or
jnp
cltd
pop
dec
ret
or
outsl
xor
jnp
sub
repz
push
and
scas
test
subb
xor
mov
ss
push
push
popa
cli
mov
out
movsl
cmpl
mov
cmp
jge
xchg
push
xchg
call
add
mov
mov
cmpsl
ret
andb
repnz
leave
inc
dec
mov
outsl
fcmovu
cmpl
sub
sahf
mov
jmp
ficoml
jbe
dec
adc
fs
stc
data16
cmpsl
in
xor
jle
or
int3
and
in
test
jg
xchg
jle
mov
rclb
test
dec
test
push
in
cmp
fdivrl
mov
sub
mov
adc
out
loopne
dec
rcl
test
js
push
fsubr
jecxz
es
les
sbb
rorb
cmp
js
sbb
jl
loope
push
out
inc
sar
jle
push
aas
ficomps
dec
out
and
add
daa
jg
fucomip
mov
imul
jmp
sbb
adc
push
sbb
loope
push
cli
jae
lods
lret
ficomps
push
mov
ret
adc
jb
mov
push
cmp
push
pop
lods
test
jo
mov
dec
jno
pop
call
push
std
aas
adc
xorb
into
push
or
hlt
in
jecxz
dec
hlt
mov
push
sub
shll
pop
mov
dec
dec
xor
mov
scas
xor
push
sbb
fists
or
cld
mov
test
mov
mov
mov
mov
or
test
pop
das
mov
lods
insb
add
sub
sahf
jecxz
test
adc
aad
pop
add
mov
stos
cmp
adc
test
out
lcall
adc
cmc
rclb
scas
inc
mov
dec
nop
pop
repnz
mov
or
push
repnz
mov
rclb
aam
subl
movsl
jmp
pop
shl
mov
aad
rorb
cmp
inc
movsb
push
jbe
pop
nop
dec
dec
xchg
jns
mov
or
adc
pop
push
pop
dec
jl
jl
out
in
repnz
add
push
pop
mov
inc
stc
mov
xchg
lods
mov
mov
jle
fwait
dec
jb
outsb
enter
sub
movsl
lcall
dec
scas
push
movsb
xor
ret
cmp
xacquire
fsubl
pop
test
out
push
es
out
andl
rcrb
stos
shlb
ds
mov
sbbl
add
push
or
mov
rclb
rolb
lds
test
pusha
mov
loope
pop
iret
lds
add
addb
ret
dec
adc
and
inc
cwtl
mov
cmp
push
and
cld
sub
and
push
dec
jnp
add
lock
sbb
sbb
inc
lret
int3
inc
or
pusha
jle
int
dec
push
imul
push
imul
pushf
in
mov
test
sub
push
out
cmp
test
inc
add
dec
push
sub
adc
icebp
shll
jp
sub
push
cmp
cmp
cwtl
xlat
stc
pusha
shrl
mov
jp
gs
sub
mov
and
and
shlb
push
inc
aad
stc
test
fistpl
in
xchg
outsb
out
adcl
jne
arpl
enter
scas
call
out
jno
int3
and
and
mov
xor
imul
inc
lea
aad
sbb
rol
xchg
push
popa
cmc
scas
shll
and
jae
push
push
sti
aam
jmp
dec
add
sbb
adc
pop
or
out
repnz
cmp
dec
xchg
lret
stos
jnp
lret
cmp
int3
in
icebp
sbb
repnz
mov
lret
imul
jnp
and
sbb
fbstp
sbb
test
xor
push
pop
shll
test
jb
sbb
jae
shrb
xchg
int
xor
les
and
in
lock
xor
shrb
adc
jbe
fisttps
aam
sti
pop
push
stc
cmp
leave
inc
test
mov
popa
pop
mov
adc
mov
or
sub
adc
icebp
sub
or
adc
mov
into
fwait
iret
ja
push
xchg
mov
mov
push
lods
ds
js
ljmp
rcr
loope
sbb
movsb
push
or
lret
iret
clc
cmc
andb
xchg
leave
rcl
mov
xor
das
notb
inc
subb
inc
lcall
pusha
add
fisubrl
idivl
dec
ja
lahf
cmp
mov
jmp
xchg
xlat
subl
stc
pop
scas
stc
je
mov
pusha
pop
jg
xchg
adc
out
and
xchg
xchg
lock
std
lahf
cld
lods
add
cmpsl
pop
pop
push
mov
jmp
and
mov
adc
jns
les
inc
test
sub
xchg
and
rcl
mov
test
push
les
mov
iret
aas
in
sti
test
shrl
lcall
pop
cli
sub
push
xor
xor
xlat
shrl
or
mov
or
ret
sub
arpl
repnz
adc
decl
adc
sbb
aaa
xchg
cmp
popf
xor
out
leave
sbb
mov
jp
jno
imul
fwait
xlat
lock
out
scas
les
stc
mov
or
mov
shrl
fistps
xchg
push
hlt
ficomps
mov
out
clc
sti
shlb
pop
dec
jne
pop
adc
cmpsl
dec
lds
lret
es
inc
and
int3
mov
inc
in
inc
pop
test
sar
mov
test
mov
jne
in
push
fucomi
punpckldq
frstor
icebp
and
aas
fcmovnbe
fimuls
xchg
dec
push
outsb
dec
xchg
push
sbb
lods
stos
push
ljmp
out
pop
clc
add
jne
mov
mov
das
jae
popa
aas
lret
clc
pusha
mull
movsb
adc
cwtl
adc
add
mov
mov
push
mov
scas
lods
testl
popf
cli
push
pushf
rcll
jmp
ret
bound
push
lret
mov
lods
clc
push
and
mov
cmpsl
adc
jne
jbe
loopne
jg
jb
es
xchg
in
test
ds
addr16
loope
xchg
lock
lock
cmpsl
lret
lods
in
mov
xchg
aad
daa
dec
push
in
orb
sbb
mov
mov
in
dec
mov
mov
and
fcomp
push
push
addl
push
int3
aad
dec
jnp
mov
lods
cwtl
xchg
movsl
pusha
add
mov
gs
js
iret
pop
sarb
cwtl
stc
or
sahf
push
sbb
adc
fisubs
push
mov
cwtl
cmp
test
xor
ljmp
int
aaa
and
jo
ja
cmp
push
jg
xor
cmp
xchg
mov
adc
insb
ror
stc
jb
das
stos
leave
or
mov
scas
in
loope
push
repnz
cs
sub
mov
sbb
xchg
push
adc
sub
pop
push
fstpl
xchg
xor
sbb
std
movsb
leave
jg
lcall
dec
push
dec
push
fcmovnbe
mov
imul
lds
xchg
pusha
sbb
outsb
dec
clc
and
test
cmc
stos
test
xchg
fistl
insb
jno
and
daa
and
subl
imul
mov
pop
imul
int
cmp
jecxz
mov
mov
sub
push
je
adc
xchg
dec
xchg
or
add
add
lods
cmc
incl
daa
rorl
data16
push
sub
adc
testl
lahf
iret
jecxz
pop
shrb
jg
xor
xor
scas
and
push
out
pop
dec
inc
mov
pop
addr16
inc
cli
movsb
push
stc
leave
loop
jbe
or
xchg
or
inc
mov
sahf
and
push
stos
repz
stos
or
dec
pop
outsb
popa
scas
pusha
dec
push
pop
shl
mov
dec
push
mov
mov
lcall
hlt
imul
ja
rcrl
pop
lds
insb
pop
je
add
fnstenv
cli
cltd
sub
and
jle
sbb
je
out
cmp
xchg
jge
xor
xchg
and
dec
xor
into
and
push
roll
sub
pop
sarl
fmull
les
inc
sbb
mov
push
loop
or
inc
rcll
pop
es
and
inc
inc
and
fimuls
fucomip
js
sbb
xchg
rol
mov
pop
pop
push
repnz
call
or
addr16
rcr
push
xchg
roll
lret
das
lahf
inc
add
and
imul
inc
fsts
dec
mov
shl
repnz
or
push
sub
adc
mov
pop
arpl
adc
in
push
sbb
or
movsb
sub
mov
xchg
jne
jb
shufps
roll
adc
mov
push
out
fidivl
cli
fistpll
sarl
movsl
fstl
pop
inc
and
pop
adc
cs
push
in
cmpsb
xchg
cmp
sub
push
cltd
cmp
mov
out
xchg
roll
out
test
pop
pop
scas
xchg
test
fmuls
xchg
inc
test
xchg
mov
push
insl
outsl
cmp
xor
xchg
je
sbb
pop
mov
or
xchg
mov
sbb
push
lods
xor
outsl
mov
out
pop
push
dec
mov
popf
mov
pop
je
rorl
fcompl
and
cmp
xor
and
sbb
out
mov
scas
pushf
mov
add
inc
scas
jno
mov
pop
std
adc
mov
jne
or
push
test
dec
push
and
cmp
mov
call
lcall
scas
test
icebp
rcr
cmp
in
push
sub
call
xchg
xor
test
xchg
push
aad
lret
push
stc
cwtl
into
fnstcw
add
dec
loop
pop
repnz
hlt
out
aad
jb
loop
lea
stc
cmp
pushf
das
sub
repz
cs
xlat
pop
outsb
lods
jmp
pop
mov
xor
sub
clc
testl
dec
std
push
shll
push
dec
lcall
pop
lea
xor
cwtl
push
dec
pop
idivb
subl
sbb
dec
js
test
aas
mov
out
xchg
lds
mov
repz
pop
push
add
xlat
adc
insb
jne
xchg
hlt
loop
push
adc
mov
add
adc
leave
jnp
mov
push
jg
nop
pop
inc
cmp
add
ja
clc
inc
insl
pop
aas
inc
aam
out
xlat
mov
mov
mov
test
xor
sbb
pop
xchg
jg
lods
fwait
or
lds
and
push
mov
ljmp
sbb
rorb
mov
mov
outsl
sti
jmp
push
sub
jge
jle
adc
cmp
xchg
cs
es
mov
dec
add
mov
mov
sub
add
mov
lock
out
jecxz
sbb
hlt
ret
das
add
mov
lret
pop
sbb
lds
mov
repz
mov
imul
or
sub
rcl
mov
je
ret
jae
xchg
push
mov
xchg
mov
clc
xor
or
or
pop
paddb
call
push
aas
xor
dec
into
test
aas
push
jb
flds
lret
push
inc
push
push
fcoml
add
sbb
hlt
dec
push
loope
mov
mov
jp
pop
out
add
pop
clc
add
lret
rol
inc
in
add
hlt
stos
pop
xchg
lock
mov
push
fstp
dec
loopne
scas
cmpsb
sbb
xchg
sti
movsl
stc
or
inc
mov
mov
add
aas
pushf
mov
mov
and
mov
int3
mov
dec
iret
jg
aaa
push
inc
cmpsl
subb
pop
mov
cli
and
mov
dec
or
push
jmp
out
das
popf
lea
lret
xchg
and
roll
enter
dec
and
mov
or
mov
mov
mov
pop
add
sahf
cwtl
nop
cmp
icebp
jle
add
fisubl
insb
cmpsl
pop
sbb
out
mov
pop
in
movsb
push
insb
int3
pop
pop
repz
jle
jne
push
sub
push
jno
mov
cmp
stos
push
inc
cli
loopne
jecxz
daa
fidivrl
xchg
and
cwtl
mov
lret
stos
and
mov
fildll
sbb
popa
and
inc
add
sbb
out
xchg
sbbl
hlt
es
test
pop
push
cmc
add
cmp
sub
dec
in
inc
mov
xchg
xchg
cli
lret
sbb
stos
inc
adc
das
cld
dec
sbb
mov
dec
mov
sub
and
cmp
in
les
call
sbb
adcb
scas
roll
movsb
js
test
push
aas
mov
mov
mov
sar
sbbb
repnz
or
cmc
out
nop
sub
push
sbb
mov
gs
pop
sbb
hlt
cltd
sbb
mov
and
jnp
in
roll
adc
data16
inc
movsb
ss
pop
or
xorb
adcb
cmp
aaa
adc
cmp
not
jmp
and
imul
fists
addr16
dec
xor
pop
jmp
pop
and
cmp
mov
push
movsl
icebp
subl
dec
xchg
lea
pop
out
les
inc
mov
iret
lds
leave
rclb
cmp
cltd
inc
les
and
fsts
cltd
roll
xchg
pop
repnz
xor
xchg
pop
fidivrl
adc
addr16
popf
inc
call
dec
or
daa
add
ljmp
sub
repz
shll
jno
paddq
scas
std
addl
inc
or
shrl
test
lahf
xchg
inc
xor
sub
xchg
das
stc
fsubr
stc
xor
dec
js
mov
test
or
mov
inc
clc
nopl
mov
jmp
cld
cltd
shll
jecxz
adcl
insb
xchg
add
pop
inc
mov
das
es
rcr
sbb
or
fwait
into
adc
js
jbe
jo
outsb
xchg
idivl
dec
aas
mov
shl
and
or
push
push
mov
jg
push
jg
push
adc
pop
mov
loope
stc
adc
or
jns
jl
inc
aam
flds
xor
adc
into
sbb
in
sub
jbe
mov
xorl
fs
push
pop
mov
lea
aad
xchg
in
jb
lret
fs
mov
je
jbe
jge
xchg
addr16
xchg
adc
sarb
push
or
fwait
push
dec
pop
ja
or
movsl
xor
sbb
mov
test
dec
or
cmp
push
dec
test
test
fnsave
xchg
push
and
call
mov
mov
pop
rcll
bound
int
pop
arpl
test
pop
cmp
add
hlt
les
dec
add
ret
scas
out
add
das
and
roll
sub
int3
lods
aad
clc
add
push
rcrl
pop
add
popa
xor
jb
loop
stos
lahf
fxch
inc
mov
push
jecxz
std
jae
dec
negb
cmc
mov
mov
rcr
jno
mov
jo
lret
xor
dec
cmp
mov
jbe
jmp
ret
arpl
rol
or
divb
mov
sub
lret
test
mov
lea
ja
test
mov
movb
cmp
sub
adc
ja
mov
xor
stos
pop
out
fistps
jp
imul
mov
xchg
inc
push
aaa
cmpsb
sub
jmp
adc
jo
jg
cmp
mov
or
add
cld
shrl
out
push
lock
and
adc
popf
sbb
and
aam
vpmulhw
lahf
cmp
cmpsb
jmp
movsl
push
pushf
or
pop
jg
jecxz
pop
lahf
je
movl
std
xor
cld
fisttpl
sbb
mov
test
filds
adc
enter
rcrb
sub
out
loop
xlat
mov
das
inc
xchg
mov
loop
movsb
adc
bswap
in
mov
aad
jecxz
test
xor
jmp
fmuls
inc
jle
clc
jge
fsts
ss
test
ktestw
mov
out
and
lahf
subl
clc
daa
repnz
xchg
mov
and
inc
and
divl
loope
pop
repz
in
jg
test
mov
mov
jns
dec
clc
cmp
clc
push
add
xchg
sub
mov
adc
xchg
mov
call
sar
filds
push
das
mov
jns
aaa
notl
out
and
fadds
xchg
iret
mov
lret
rcl
cmp
mov
ret
push
into
aas
cmp
dec
xchg
xor
rcrl
in
xchg
mov
mov
and
sub
mov
and
addb
sbb
or
ret
adc
fsubrs
adc
xchg
stos
clc
mov
enter
jle
add
lods
inc
or
xchg
daa
or
push
jno
mov
out
adc
xor
lret
les
pop
jae
adc
xchg
mov
mov
icebp
fsub
pop
xor
xchg
inc
xor
lahf
js
xor
cmp
mov
mov
jle
or
cmp
loope
jae
mov
addl
and
out
and
jne
sbb
jge
dec
jp
mov
call
push
jl
je
xor
pop
enter
and
in
lods
sahf
sbb
xchg
stos
inc
aaa
js
pop
outsl
xchg
sbb
jns
jns
push
add
push
push
push
and
jno
and
pop
rcr
sub
pop
pop
push
pop
lcall
enter
in
push
aad
xlat
rclb
adc
imul
sub
out
test
aas
pop
in
shll
adc
scas
movsl
xchg
movsl
mov
cmpsl
mov
push
xor
stos
xor
inc
test
pop
mov
aas
ja
mov
dec
jle
or
scas
in
xchg
std
mov
mov
sbb
sbb
cmpl
out
pop
je
fs
movsl
cmpsl
int3
sub
in
adc
aas
movb
inc
pusha
imul
movb
in
adc
mov
mov
pop
cmp
pop
xchg
xlat
cli
stos
or
xchg
fdivrl
std
inc
inc
daa
push
jne
xor
clc
mov
pop
enter
adc
jmp
mov
das
pop
test
cmpl
jo
mov
clc
pop
test
xor
xchg
fucomip
cwtl
shr
jno
imul
hlt
mov
inc
lea
xchg
ficompl
test
adc
jno
pop
fstpl
aad
aaa
mov
adc
jecxz
sbb
push
sahf
int
faddl
rorb
mov
inc
push
mov
sahf
add
sarb
inc
mov
sub
cmp
pop
mov
pop
xchg
std
mov
or
in
xchg
and
insb
xchg
test
pop
jbe
sbb
or
push
loope
aaa
adc
ja
adc
lahf
in
dec
rorl
adc
sti
pop
or
push
sarl
shll
adc
dec
pop
loope
pop
cmc
lcall
aad
xchg
mov
aam
enter
adc
pop
sub
pop
imul
dec
mov
mov
xchg
mov
or
push
push
ret
call
aaa
aas
std
adc
mov
in
push
and
and
cld
xchg
and
or
and
push
dec
mov
test
jecxz
mov
push
mov
scas
jno
add
or
lock
test
mov
jmp
xchg
pop
inc
flds
arpl
pop
fwait
push
aas
test
inc
xor
stc
push
stos
adc
adc
js,pt
pushw
lret
inc
sbb
cltd
sbb
cli
dec
xor
repz
subl
cs
and
pop
sub
lea
stos
gs
jl
je
decb
loope
push
xor
or
inc
ljmp
mov
push
fcmovu
test
sub
cmp
mov
addl
lds
and
sbb
inc
mov
adc
mov
cmp
sub
scas
repz
xor
adc
lcall
inc
std
sahf
roll
mov
fbld
lods
add
daa
mov
mov
add
lds
cmp
jge
or
ficoms
movsl
movsl
out
lea
addr16
or
lret
dec
mov
mov
mov
enter
or
mov
fs
cmp
mov
adc
dec
idivb
outsb
sub
mov
call
incl
fldl
sub
icebp
mov
pop
mov
leave
adc
jo
pop
rclb
fisttpl
adc
push
cmpsb
cmpsl
cmp
icebp
jp
fnstsw
repnz
xlat
ret
xor
mov
not
jne
rorb
popf
setle
jne
iret
imul
fcompl
inc
xorl
jmp
sub
push
sub
jne
mov
sbb
stc
inc
sbb
orl
push
inc
outsl
dec
fstp
sub
mov
clc
adc
aaa
jo
add
xchg
jge
adc
jno
je
test
mov
and
leave
or
push
sbb
outsb
push
cmp
test
js
dec
sti
xsavec
xor
push
popa
repz
pop
inc
cs
ffreep
cld
sub
dec
test
jae
jle
rcl
dec
fisubrs
jne
inc
or
inc
loope
stos
js
jmp
dec
xorl
sub
jo
sub
popa
sti
sbb
ret
dec
adc
sub
xorl
lahf
mov
push
out
scas
xchg
cltd
cmc
ss
xchg
and
movsl
lea
mov
pop
clc
ret
out
test
rolb
adc
mulb
xchg
jg
mov
push
mov
xchg
pushf
mov
sbb
cmp
sub
rcrl
les
shll
nop
pop
movsb
add
idiv
adc
jmp
cltd
pop
repnz
mov
or
jae
push
std
mov
ds
add
xchg
mov
xchg
push
stc
repz
dec
mov
and
scas
xlat
mov
dec
mov
push
jge
out
lcall
inc
imul
xchg
dec
mov
lds
shll
incb
js
adc
dec
inc
xor
pop
subl
repz
adc
jecxz
aaa
dec
iret
gs
sub
cmp
add
dec
push
mov
fstp
push
lea
pop
stc
pop
mov
sahf
sti
inc
lock
push
push
mov
ljmp
and
mov
cmpsl
mov
ja
pop
pop
sub
and
sbb
mov
push
mov
aam
inc
and
mov
dec
test
mov
stos
xor
sbb
inc
loope
add
jle
sbb
test
xor
lea
xchg
sbb
adc
dec
inc
cltd
mov
push
ret
adc
jb
fistpl
mov
sbb
mov
imul
add
adc
fwait
and
xchg
sub
loope
leave
scas
repz
movsl
and
mov
cmp
rol
jb
test
xchg
dec
sbb
push
push
div
aam
fldl
rcl
push
insl
rcll
sbb
mov
dec
mov
push
inc
repnz
cli
pop
adcb
xchg
lods
pop
xchg
cmp
inc
popl
push
cltd
and
test
ret
sbb
int3
fildll
into
push
jns
dec
outsb
inc
xor
cmc
mov
in
inc
jecxz
jle
xchg
jae
test
rorb
rcll
xor
cmpsl
dec
pop
and
adc
push
mov
cltd
mov
xor
faddl
inc
cmp
sub
test
mov
mov
sub
sarb
imul
and
scas
cmp
push
adc
stos
lods
push
ds
notb
push
sbb
inc
jecxz
ja
push
outsl
jo
test
sahf
xor
insb
sar
push
xchg
mov
iret
insb
inc
lret
paddw
adc
add
xchg
stc
rclb
enter
inc
xor
mov
inc
fs
sbb
call
test
jg
mov
aam
xchg
xchg
imul
shr
movsb
mov
stos
push
imul
sahf
icebp
inc
sbb
jmp
xlat
cmp
in
divb
inc
or
repnz
add
mov
popf
xor
stc
mov
ds
add
imul
ficoml
inc
inc
shl
xor
push
mov
stos
jb
fistpll
push
adc
inc
stos
pop
dec
or
sub
cs
fstps
sar
adc
mov
cmc
das
repnz
or
or
in
fistpll
mov
dec
outsl
xchg
push
out
jecxz
mov
add
das
sbb
dec
popa
push
fmul
mov
int3
xor
pushl
lods
cmp
fwait
call
stos
les
imul
ret
jb
jge
cmc
stc
jnp
adc
add
pop
in
cmp
or
out
jg
adcb
cmp
add
fiadds
fbld
cmc
out
and
inc
dec
popf
repnz
xchg
addr16
push
arpl
add
mov
test
push
pop
enter
mov
out
rolb
push
mov
push
ds
pop
mov
orl
jo
inc
imul
pop
pop
mov
adc
clc
jae
adc
mov
xchg
mov
out
mov
sub
popf
enter
sbb
and
and
cmp
dec
mov
insl
mov
push
fldt
mov
je
pop
push
aaa
loop
notl
ja
mov
mov
rcrb
pop
dec
jnp
pop
pshufw
int3
cmc
out
sti
sbb
popf
inc
std
adc
push
cmc
nop
mov
xchg
sub
or
fisttps
js
mov
adc
enter
aas
jo
fptan
push
pop
fwait
leave
outsl
adc
icebp
addr16
shlb
shl
sub
xchg
sub
sbb
xor
xchg
xchg
dec
lcall
push
push
cli
mov
xlat
mov
nop
rclb
femms
js
sbb
lret
jge
leave
sbb
mov
shll
in
jge
dec
cmp
sub
jno
mov
js
pop
loopne
aad
xor
push
sub
iret
push
shll
loopne
dec
or
xor
sub
or
imul
jmp
jns
pop
pop
shlb
fmull
and
xor
fdiv
push
jge
outsb
jnp
xchg
cmpsl
dec
pushf
out
arpl
fstpt
fcmovbe
out
sti
lock
iret
pusha
sahf
cmp
push
in
das
jmp
rcrl
mov
fnsave
jg
and
jo
xchg
mov
inc
dec
dec
scas
push
loop
test
lds
jl
jb
leave
fwait
and
pop
cmpsb
xchg
cmp
inc
sbb
stc
aam
mov
push
dec
fcoml
imul
mov
dec
adc
testl
and
call
test
dec
lods
aaa
cmp
fcoml
notl
adc
roll
fcompl
loop
aam
and
fsubrl
rclb
std
mov
icebp
lods
mov
jne
xor
mov
div
xor
insl
push
stc
mov
xor
mov
add
jle
bound
cmp
int
inc
repz
add
push
out
jbe
jne
mov
xor
inc
int3
stos
sbb
arpl
arpl
scas
out
loopne
dec
insl
cmp
repz
and
xor
sub
popf
and
ror
stc
xor
shll
pop
in
scas
jl
fisttpll
and
sysret
push
rol
push
fisubrl
add
push
cltd
out
mov
mov
rorb
out
xchg
sub
add
lret
sub
out
mov
pop
push
in
mov
lret
jl
xchg
pop
les
mov
subl
xchg
std
sbb
adc
adc
add
sub
jne
sub
cmp
sbb
jmp
mov
mov
xor
sahf
push
sbb
cmp
sub
mov
push
popa
xchg
lea
dec
mov
mov
iret
roll
idiv
mov
je
outsb
cli
rcll
fbstp
cmp
ja
cmc
repnz
adc
mov
es
pop
xchg
add
cmp
aad
sbb
mov
stos
cs
adc
add
adc
decl
cltd
outsb
mov
push
pop
movsl
movsl
xchg
in
cli
in
push
mov
inc
sbb
lret
add
in
xchg
push
inc
and
aaa
inc
dec
popf
outsb
sub
xchg
mov
bound
pop
sub
xor
out
pop
pop
inc
xchg
cli
or
or
aad
pop
and
out
fwait
pushf
pop
cmp
rcr
mov
jecxz
push
es
xor
and
cwtl
lret
icebp
push
lods
xlat
loope
and
das
and
sti
sub
cmc
divl
xchg
jecxz
jg
testl
xchg
int
mov
xor
inc
jns
setns
es
jg
sti
aad
popf
loope
stc
les
aam
dec
lret
xchg
popf
aas
popf
mov
mov
in
jne
repnz
adc
mov
aam
push
imul
or
addl
fstpt
insb
cmp
pop
push
fstl
inc
add
movsl
xchg
and
cmp
cmp
mov
daa
xor
dec
ss
mov
int
inc
cmc
mov
jp
push
test
mov
ja
jle
or
adc
aad
andl
pop
jno
xchg
or
xchg
orl
lods
stos
fisttpl
stc
dec
jecxz
insb
cli
hlt
pop
das
insl
es
popf
mov
test
cmp
sar
jl
mov
imul
xor
xlat
jo
inc
lods
push
cmc
test
icebp
inc
das
lret
fsts
data16
scas
inc
pushf
inc
pop
xchg
stos
adc
repz
sub
jl
mov
xchg
outsl
pop
lods
cwtl
dec
movsl
aad
jbe
xchg
test
mov
sti
sbb
aaa
bnd
in
push
inc
pop
call
pop
xchg
fcomps
cmp
pusha
jo
insb
nop
and
lock
mov
ja
adc
sub
push
cmpsl
jmp
out
push
pop
pop
cmp
adc
cli
addl
scas
xchg
dec
aaa
inc
shl
xchg
lock
pop
popf
leave
js
sbb
add
push
arpl
clc
mov
mov
lahf
shll
jae
sub
mov
mov
mov
push
pop
movsl
cli
dec
fs
mov
push
xor
push
sbbb
pushl
dec
clc
imul
dec
add
cmpb
shll
add
lods
xchg
js
dec
mov
ret
jno
inc
xor
xchg
dec
xor
add
mov
or
jae
jae
mov
ret
ffreep
mov
out
pushf
leave
push
iret
jecxz
and
mov
mov
adc
mov
fimuls
mov
adc
sarb
and
call
lds
xchg
add
mov
lds
sbb
nop
inc
jns
jno
pop
push
cmp
mov
xor
and
addr16
push
push
int3
xor
mov
push
sub
mov
sub
pop
cmpsl
inc
cmp
pushf
pop
inc
xchg
ljmp
stc
sub
push
aas
aam
fs
jg
cmp
cmc
mov
sete
push
adc
fwait
rcll
or
sbb
mov
arpl
nop
xchg
sarl
mov
jmp
ret
adc
mov
aad
pop
mov
popa
push
push
icebp
jns
loop
sub
rclb
xor
sub
sub
jno
outsl
push
andl
push
push
mov
fnstsw
mov
add
sti
cli
ficomps
daa
out
lock
mov
xchg
stos
into
lods
ret
shlb
cmp
test
lahf
andb
std
sbb
mulb
mov
push
test
in
jmp
fld
dec
es
push
das
rcll
cmp
xor
outsl
std
jnp
xlat
fld
cltd
arpl
xchg
mov
add
test
adc
jno
cli
jge
repz
mov
pushf
inc
add
icebp
lock
mov
sub
test
dec
out
enter
lret
lds
fadds
aam
xchg
pushf
lods
scas
icebp
into
or
pop
jb
dec
mov
lahf
stc
push
cwtl
lret
dec
add
test
lcall
out
imul
xchg
xor
push
fiadds
mov
or
lret
adc
out
ffree
add
push
inc
pop
sbb
cli
push
or
jmp
aad
data16
jno
imul
data16
lahf
sbb
mov
jne
jno
sbb
or
jle
in
push
jnp
movsb
arpl
cwtl
ficomps
int
rcrl
movsl
push
popa
or
pextrw
push
ret
int3
gs
lods
imul
out
or
push
js
inc
mov
pop
xchg
sti
lret
xchg
adcl
adc
jns
jo
fwait
sbb
adc
movsl
cli
jo
mov
push
aam
imul
xor
inc
dec
sbb
int
in
push
das
mov
adc
mov
jnp
aaa
xchg
lods
mov
or
push
or
sti
das
pop
mov
addl
or
jns
mov
dec
pop
push
les
fsubr
ret
jo
jae
xor
addr16
cvtps2pi
out
jnp
inc
or
pop
repz
add
inc
insl
shlb
sahf
push
mov
xchg
dec
adc
bound
fbstp
pop
pminub
pop
mov
xlat
dec
push
jmpw
sub
lods
add
leave
mov
lret
jg
icebp
mov
js
push
insl
push
call
and
insb
add
dec
pop
andb
in
add
lahf
js
mov
mov
rorl
sub
sbb
dec
scas
push
cmp
icebp
mov
add
add
mov
sbb
insl
movsb
adc
popa
push
loopne
pop
popa
jo
push
and
ja
mov
or
pop
pop
das
xchg
addr16
insl
mov
fisubl
lcall
xor
stos
adc
shl
inc
test
xchg
push
leave
sbb
xor
loopne
jo
push
dec
pop
or
inc
push
cmp
in
mov
andb
xor
cmpsb
iret
out
repz
dec
hlt
lea
bound
clc
out
pop
xor
rclb
push
aaa
push
ret
jno
cmp
test
cmpsl
push
rorl
push
jl
inc
shll
inc
push
fnstenv
push
repz
ljmp
or
insl
movsl
inc
scas
stos
pop
insb
mov
jbe
rcpps
sub
test
rolb
out
pop
pop
cmc
fsubl
cmp
mov
shlb
repz
push
sbb
fwait
bound
push
cmp
add
cmpsl
pop
js
mov
push
int
and
jae
pop
arpl
pop
inc
addl
imul
decb
mov
out
mov
dec
lahf
lret
sbb
cwtl
push
cltd
lret
fdivrp
or
add
xor
xor
sbb
adc
outsl
clc
loopne
pop
or
movsl
std
fdivrs
je
fisttps
leave
pop
out
das
mov
lahf
out
cmpsb
jge
add
dec
adc
addb
clc
ds
movsl
enter
xor
xchg
pop
fcmovnbe
pop
xchg
movsb
push
sbbb
out
mov
xchg
xchg
mov
dec
mov
out
cmp
lcall
movsl
dec
jmp
dec
and
mov
stc
sub
inc
outsb
test
in
mov
push
push
popf
and
mov
cmc
lods
fldcw
adc
jmp
cmp
adc
aam
jecxz
out
shll
call
shr
mov
and
in
je
mov
jb
xchg
add
push
xor
jnp
scas
in
pop
add
les
pop
inc
cs
and
dec
sub
jle
pop
sbbb
mov
lds
jne
or
mov
and
mov
outsb
dec
aaa
pop
sti
mov
jo
mov
clc
pop
jmp
jb
pop
test
fsts
and
pop
shlb
xchg
or
in
mov
aas
jg
rcll
jno
mov
dec
pop
je
cmp
mov
je
cmp
push
dec
outsl
push
mov
mov
nop
and
and
xchg
rcrb
sti
addl
sbb
add
rcll
lods
push
and
daa
dec
and
movsl
pop
daa
lods
and
fdivrs
imul
leave
inc
adc
jno
rcrl
and
mov
jb
call
jl
xchg
sti
cmp
adc
sub
pop
adc
lahf
frstor
mov
test
fs
xor
xor
cmp
orb
add
pop
xor
das
mov
repnz
cltd
adc
sbb
xor
arpl
insb
add
cs
adc
sbb
mov
jl
sub
xor
addr16
xor
adc
subl
mov
mov
dec
mov
lds
dec
scas
cmp
jge
xchg
push
pop
adc
pop
push
inc
sub
call
loopne
jmp
pusha
insl
push
xor
int3
sti
inc
je
stc
fldcw
sub
loop
mov
mov
sbb
aaa
mov
push
mulb
addl
into
adc
lds
jns
sbb
ss
int
mov
jecxz
push
ret
cmp
or
out
outsb
pop
inc
dec
mov
lea
xor
sbb
xchg
sahf
add
mov
test
test
icebp
and
test
mov
pop
and
mov
mov
add
outsl
push
xchg
in
icebp
mov
sbb
pop
aad
adc
lods
sbb
test
fucomp
iret
ja
test
rclb
mov
xchg
sahf
pop
or
lret
add
sub
push
sub
cmpb
lock
sahf
gs
inc
inc
repz
test
and
xchg
sbb
and
sub
imul
inc
push
fisttpll
sbb
into
adc
shr
and
jge
out
dec
lret
or
stos
outsl
inc
push
adc
push
int3
dec
subps
std
stc
aam
adc
rclb
xchg
inc
mov
aad
adc
iret
popa
push
xchg
jnp
outsl
or
icebp
xchg
mov
iret
cmp
push
jns
test
out
lds
rclb
loop
or
add
jb
clc
sbb
add
xchg
cwtl
jmp
and
jae
xchg
adc
mov
and
push
pop
pop
out
pushf
inc
rcl
mov
fnsave
loop
fisttpll
cld
inc
rclb
std
pop
or
xchg
imul
daa
gs
mov
jg
jecxz
rcll
arpl
or
sbb
in
jns
jns
or
xrelease
mov
and
dec
dec
aam
enter
add
rcrb
sbb
ss
xor
sub
and
cmp
and
cmp
fldl
sti
nop
pop
data16
add
out
pop
xchg
sub
cmp
repz
mov
popa
push
inc
sbb
inc
jnp
test
jnp
popa
lahf
add
clc
jg
mov
jge
sub
mov
lods
lock
pop
sbb
je
sub
divl
std
mov
pop
testb
adcl
fistl
call
push
testl
mov
fwait
cmp
popa
pop
pop
mov
cmp
push
pop
cmpsl
mov
jle
push
lret
jno
stc
ja
cmpsl
repnz
push
inc
movsl
lods
cmpsl
leave
pop
int3
pop
mov
enter
or
sub
imul
popf
inc
push
add
inc
jg
cmpb
in
lret
test
xor
lret
jge
arpl
sub
jnp
inc
or
pop
sbb
daa
fwait
movsb
pop
out
or
pop
nop
cmp
or
jno
fistpl
inc
xchg
push
mov
loop
push
and
or
clc
xor
pop
push
mov
jne
jbe
jbe
pop
inc
nop
inc
dec
cmp
ret
fcoml
xor
mov
ja
ret
aam
push
jno
pop
stc
aam
add
int3
mov
ljmp
repnz
fisttps
dec
lcall
or
js
dec
rcrl
imul
mov
ljmp
push
inc
mov
inc
xchg
sub
test
inc
push
fstps
movsl
xor
mov
sbb
sbb
cli
pop
icebp
sbb
insl
fldcw
ja
jae
loopne
daa
add
rolb
push
ficoml
rolb
sbb
dec
push
es
jl
xchg
jno
stc
pushf
in
fs
sti
xor
popf
gs
pop
repnz
add
dec
jb
je
daa
call
sbb
int
dec
fwait
push
add
lahf
jne
add
out
cs
mov
test
ret
nop
mov
cmpsb
scas
rcrl
mov
and
addr16
je
lret
inc
fistpl
xor
or
in
sbb
jae
cmp
lods
sbb
jo
adc
pop
xchg
sub
cs
and
add
lods
cmp
in
icebp
fstpl
das
push
and
loope
xor
inc
xchg
mov
or
jge
mul
and
and
mov
ss
cli
mov
nop
sbb
sbb
rcll
movsl
outsb
add
push
adc
loopne
movsb
cmp
adc
pop
push
inc
mov
sti
mov
in
in
push
out
sub
in
pop
es
aas
sub
es
addr16
or
pop
xor
sub
out
popf
andl
fwait
mov
inc
jp
imul
jg
xchg
mov
and
loope
sahf
sub
fwait
push
dec
add
sbb
cmpsb
dec
roll
out
pop
xchg
and
daa
sbb
lahf
push
mov
sbb
and
sbbb
pop
push
fstps
stos
jl
negb
lret
xor
mov
leave
shrl
or
dec
int
or
mov
push
jns
test
movsb
adc
mov
insl
and
setb
outsl
push
push
sahf
call
in
xchg
xchg
pop
mov
or
rorl
jo
stc
std
push
pop
push
xchg
add
and
filds
mov
vmovss
inc
les
sbb
mov
or
repnz
int3
andl
fsubs
inc
mov
cmp
sub
sub
inc
iret
lldt
into
mov
push
js
xchg
negb
mov
push
data16
into
jge
xchg
into
dec
jb
negb
fdivs
shl
adc
fistps
add
leave
and
mov
mov
push
imul
sub
or
push
inc
push
nop
sarl
sub
add
das
jecxz
pop
test
mov
xlat
sub
fisubs
push
jnp
xlat
mov
xchg
mov
mov
push
or
cwtl
lock
aad
cmc
jl
mov
push
stc
cli
push
bound
push
sbb
lret
inc
dec
sbb
call
pop
int3
iretw
sbb
insl
jp
push
xchg
stos
stc
stc
push
leave
pop
push
pusha
or
jne
aam
adcb
rol
jns
mov
pop
mov
arpl
sub
sub
data16
fadds
loopne
imul
mov
pop
mov
jo
lcall
pop
dec
in
bswap
push
aam
jae
xchg
pop
mov
es
xor
push
adc
inc
fisubrs
push
add
in
sbb
pop
imul
cli
adc
jb
fmul
dec
cmp
inc
mov
adc
dec
lods
jmp
add
add
fwait
icebp
les
hlt
cmpsb
lea
and
dec
mov
jmp
outsb
ret
push
testb
sub
xor
sahf
out
movsb
sahf
cmp
dec
ret
mov
cmpsb
shrl
insb
fwait
xor
mov
out
cmp
push
sub
push
and
lahf
pop
hlt
add
dec
imull
jmp
hlt
inc
mov
xlat
jne
xchg
shlb
test
das
push
mov
outsl
mov
dec
ficoml
stos
insl
jno
fcomi
das
and
or
adc
lcall
fbld
int3
rorb
pop
mov
out
inc
adc
or
xor
aam
jno,pt
pop
fdivs
adc
shlb
sub
insb
xchg
fsts
arpl
mov
or
dec
enter
call
mov
cmp
sub
jecxz
dec
or
addr16
rcr
jmp
lret
loop
cmp
mov
add
adc
icebp
jns
cli
stos
adcl
arpl
xor
xor
mov
cmp
repnz
rcl
cli
jle
loope
es
das
or
adc
lret
leave
inc
call
shll
mov
sub
cs
dec
out
dec
adc
ljmp
jle
insb
or
out
cmp
mov
mov
test
fdivrp
lahf
mov
addr16
mov
lret
or
pop
pop
scas
jl
mov
inc
xchg
std
mov
jge
cli
cmpps
imul
jg
ljmp
sub
inc
ret
mov
xchg
jne
jp
jmp
out
hlt
adc
sti
in
jb
stc
lahf
inc
movsl
dec
cmp
in
in
rcrb
pop
imul
sub
mov
and
bound
gs
pop
fcom
gs
xor
popf
call
xor
add
mov
out
push
les
mov
out
inc
xchg
ljmp
sbb
push
and
lcall
nop
shl
pop
ja
ja
xor
push
adc
test
cmp
iret
leave
icebp
mov
test
hlt
aam
dec
je
sarl
jl
in
and
orl
clc
dec
leave
cmp
sub
les
imul
mov
inc
jmp
and
shld
mov
mov
xchg
xor
sbb
popf
sub
out
lea
inc
das
push
rorb
pushf
fmull
and
cmp
jmp
lock
cmpsb
pop
jp
in
stc
test
enter
jne
test
cmpsl
push
adc
dec
pop
scas
pop
push
mov
leave
jg
inc
push
leave
jmp
mov
xchg
popf
pop
loopne
jae
adc
add
cs
push
ss
add
pushf
pop
cmpsb
mov
pop
and
lret
ds
or
popa
cmp
cld
push
arpl
dec
lret
sbb
pop
adc
mov
push
call
push
dec
pop
fwait
test
repnz
and
mov
out
aad
enter
adc
lret
in
xchg
shll
lahf
dec
xor
or
jns
mov
and
loop
adc
xchg
std
cwtl
inc
fstl
sarl
imul
and
inc
clc
dec
pop
sub
repnz
jb
ffree
repnz
push
in
xor
dec
lahf
stos
icebp
sub
xchg
inc
push
inc
imul
divb
mov
data16
dec
mov
js
mov
xor
and
pop
mov
push
add
jno
lods
jmp
test
adc
jbe
mov
xor
idiv
jae
or
mov
push
jno
add
jne
in
cwtl
inc
mov
adc
ret
nop
fisubrs
push
mov
add
jmp
add
pushl
xor
pop
fisubs
repz
lock
mov
dec
mov
lret
in
cmp
push
pop
xorl
repnz
sbb
ret
sbbb
data16
cmp
xchg
repnz
push
dec
aas
int
test
dec
pop
scas
addr16
cmpsl
cmp
adc
fildl
dec
call
cmc
stc
pop
push
lods
fidivrl
dec
cmp
in
xlat
add
popa
mov
rcll
sub
add
cmp
leave
jbe,pt
push
sbb
pop
addl
push
adc
jg
test
rcrb
sbb
pop
addr16
add
insb
sub
sbb
out
icebp
or
xchg
ja
push
pop
jne
movsb
rcrb
imul
inc
xchg
jbe
xor
test
mov
or
cmpsl
xor
repz
movsl
test
test
xchg
mov
imul
jns
push
push
inc
je
loopne
xchg
jno
mov
in
arpl
xchg
adc
jmp
cmpsl
inc
inc
push
js
cmp
mov
cmp
xor
insl
and
stos
popf
xchg
and
ror
push
addb
insb
and
xlat
pop
jg
mov
xchg
lds
ja
jecxz
cltd
sub
cltd
mov
mov
in
mov
imul
lret
push
loope
scas
sarl
push
fs
mov
inc
shll
cltd
jle
xchg
push
jmp
aam
loop
mov
and
jbe
ds
ret
push
mov
cmpsl
fucomp
and
std
imul
pop
mov
rcrb
jmp
push
pop
or
adc
test
xor
std
rorl
test
stc
cmp
loope
jne
pushf
leave
mov
loop
jle
gs
mov
or
mov
mov
testb
mov
jecxz
push
push
xor
lcall
add
js
dec
test
mov
mov
sub
das
fistps
shl
insb
pushf
lods
rolb
jge
cmp
flds
sub
popf
jg
outsl
js
popl
pop
mov
inc
mov
inc
sbb
adc
xorb
icebp
divl
and
xorb
lret
xlat
cmp
xor
aad
jne
sub
insl
pop
stc
sti
xor
les
std
popf
les
aad
test
rcrl
clc
push
and
cmp
fcmovbe
outsl
cmpsl
dec
jle
cltd
adc
sbb
mulb
hlt
xchg
clc
enter
push
lahf
or
xlat
dec
sti
dec
mov
test
push
adc
lahf
adc
iret
leave
push
repnz
jg
mov
mov
mov
mov
sbb
test
inc
cmpsl
sbb
sub
xlat
inc
lds
out
popf
outsl
mov
mov
adc
mov
out
pushf
inc
push
xchg
add
xlat
add
push
jp
fwait
inc
icebp
daa
add
push
inc
ja
sar
adc
cmpsb
mov
cmp
push
nop
xor
test
cmp
out
lcall
or
aam
and
jo
lock
mov
mov
xlat
and
pusha
push
lret
mov
jl
in
jbe
mov
push
lret
lea
rclb
and
scas
fsubrl
or
subb
repz
sbb
clc
mov
mov
mov
or
dec
dec
jecxz
push
adc
arpl
push
rcrl
outsl
xchg
std
inc
sti
ficoml
xor
cs
cmpsl
stos
mov
and
stos
daa
sbb
sarl
stc
sbb
out
or
fcmovnu
and
xor
insl
repnz
jo
or
add
pop
stos
ja
dec
push
imul
call
scas
pop
movsl
rcll
adc
and
xchg
jmp
int3
mov
cmp
pop
clc
icebp
inc
mov
cwtl
loope
pop
aaa
mov
inc
mov
clc
mov
lret
out
mov
jle
icebp
stc
scas
mov
xor
data16
stc
push
test
jl
enter
dec
aaa
push
jge
jle
movsl
xor
mov
mov
cltd
inc
out
aam
mov
sahf
and
fldcw
inc
dec
lods
nop
sbb
push
int
sub
lods
pop
mov
idivl
and
cmp
mov
xchg
xor
iret
sbb
test
outsl
mov
add
sahf
push
jge
mov
sbb
mov
jnp
out
jb
popf
mov
sbb
cmc
inc
pop
xlat
inc
cmp
sbb
mov
std
dec
add
mov
outsl
into
loopne
iret
fldenv
inc
fiadds
fcomps
push
es
mov
jo
stc
psubq
ffree
cmc
jl
lock
mov
pop
ljmp
add
imul
xchg
aaa
cmp
addr16
and
test
add
test
add
inc
pop
and
mov
pmaddwd
divb
ret
inc
loop
dec
icebp
fwait
adc
fwait
xor
out
mov
inc
test
pop
jmp
mov
push
fsubr
inc
xchg
aaa
ud0
dec
jmp
mov
pop
in
in
test
or
leave
push
dec
mov
lds
dec
jbe
not
dec
push
inc
adcb
icebp
stos
xor
xlat
negl
push
adc
xor
insl
cmp
test
repnz
hlt
dec
repnz
cltd
pop
mov
mov
test
insb
insb
hlt
bound
nop
push
adc
cmp
mov
cmp
sbb
arpl
gs
mov
dec
cmp
pushf
pop
cmp
adc
lahf
imul
mov
push
mov
ret
xchg
iret
mov
mov
out
in
mov
out
pop
sbb
and
mov
jno
jno
movsb
sub
dec
sahf
lods
mov
testb
filds
or
sub
xor
outsl
imull
pop
sbb
fs
icebp
mov
rolb
dec
mov
nop
clc
out
cltd
jnp
mov
ja
dec
fstpt
dec
adc
rorl
jno
jl
pop
sysexit
popf
ret
xor
jmp
cmp
push
lds
sub
jecxz
push
add
mov
subb
or
and
stos
xor
iret
popa
je
pop
lods
adc
xchg
das
movsl
addr16
lock
pop
xchg
jg
into
lahf
hlt
and
ds
arpl
pop
popf
push
popa
fcom
popf
dec
adc
test
por
insb
adc
insl
idivl
aam
adc
out
mov
sar
xor
sub
or
jecxz
das
adc
xchg
loopne
out
sbb
pop
sbb
repz
iret
and
movsb
subl
fs
sub
es
push
das
std
xchg
xor
testb
test
sub
mov
popf
pop
leave
fs
dec
es
push
fs
inc
pop
xchg
and
fsubrs
in
adc
push
or
ljmp
mov
mov
mov
mov
add
imul
fimuls
jle
mov
adc
fcmovne
xchg
mov
mov
push
cmp
shll
movsl
sar
mov
dec
pusha
mov
sub
push
idiv
mov
rol
jnp
dec
xor
repz
or
xchg
nop
imul
std
mov
shrb
lret
js
icebp
inc
xor
leave
xlat
ret
nop
mov
push
cmp
icebp
mull
aad
pop
outsb
and
xor
repnz
lods
les
les
push
imul
stc
push
mov
outsb
mov
adc
or
push
adc
push
aaa
mov
lcall
jmp
rcrl
xor
lret
test
mov
shlb
push
xor
cld
mov
mov
pop
add
in
or
push
decw
ja
movsl
adc
push
dec
mov
les
push
jo
mov
arpl
inc
add
and
stos
inc
insb
lahf
stc
jg
xor
sub
sub
push
ss
fistps
aam
dec
dec
lock
outsb
dec
aam
pop
mov
xchg
das
repnz
jle
mov
lods
ret
adc
adc
mov
cmp
adc
int
ss
cmp
hlt
and
lret
mov
imul
test
mov
int
or
addr16
in
jno
loopne
shrb
inc
mov
pop
and
dec
rcrb
inc
in
aas
mov
popa
pushf
test
push
adc
sub
jge
cmp
xor
sbb
fldt
dec
mov
or
sbb
imul
inc
cmp
cld
rolb
xchg
ljmp
pop
pop
call
mov
add
lock
push
and
push
js
xchg
inc
subl
and
repz
insl
je
lds
adc
pop
aam
dec
mov
push
out
push
xchg
je
cmp
not
mov
fstpl
out
cmp
bound
pop
pop
daa
ja
icebp
js
nopl
dec
xor
popf
xor
movsb
es
out
add
xchg
ja
ret
into
fs
ret
inc
aaa
leave
sbb
pushf
stc
scas
adc
mov
js
add
add
aaa
inc
cwtl
imul
in
xor
and
mov
cmp
dec
das
aad
loop
jle
cmp
mov
out
clc
cmp
aad
int3
mov
shll
push
push
mov
adc
and
int3
test
add
dec
test
jl
xor
insl
ss
clc
cmc
jecxz
scas
cld
jo
mov
inc
jbe
scas
divl
ret
mov
mov
addl
dec
mov
mov
fs
stc
jno
sub
push
rcll
push
rcrl
in
insb
je
in
in
sbb
sbb
add
cmp
icebp
inc
popf
mov
in
inc
lcall
jmp
xor
scas
leave
mov
inc
imul
inc
adc
jmp
sbb
das
mov
pop
das
or
jmp
fcoms
adc
data16
push
stos
and
mov
add
mov
push
gs
adc
and
or
scas
nop
hlt
aam
cmpl
movsl
jbe
push
mov
push
lods
fwait
mov
arpl
subb
mov
dec
call
movsb
in
arpl
xor
addl
mov
outsl
test
push
sbb
or
pop
push
scas
mov
push
jb
in
mov
andb
and
icebp
inc
cmp
mov
iret
cmpsb
pop
cmp
mov
fdivr
les
rcrl
insb
inc
lds
sarl
add
fcmovne
add
shll
cmp
sub
ss
stos
pop
jns
cmpsb
jnp
out
jg
lods
std
add
je
fwait
das
rcrb
leave
adc
dec
cmp
mov
and
jbe
pushf
adc
inc
into
lea
mov
int3
sub
fcomps
sub
jb
pop
cmp
xor
inc
fldt
or
sbb
gs
and
lahf
xor
lods
cmp
jmp
loopne
adc
push
in
jge
inc
fisttpl
and
ja
xor
lds
add
rol
scas
movsl
and
cmc
mov
adc
hlt
sbb
add
outsl
sar
int3
cmp
popa
ret
mov
jns
ficompl
pop
out
pop
jmp
cld
out
jmp
push
sti
and
icebp
call
or
adc
shll
xor
ljmp
in
pop
ljmp
aaa
in
loope
test
sbb
jno
xchg
in
cli
out
call
out
jae
int
inc
dec
test
test
jno
les
xchg
cli
adc
pop
push
int3
jnp
roll
dec
push
dec
xor
and
adc
xlat
cld
cmp
rcl
and
stos
ja
pop
pop
cmp
pop
add
arpl
pop
push
in
loope
push
or
cs
cbtw
adc
xchg
push
inc
and
scas
mov
jecxz
mov
mov
data16
imul
insl
push
fs
mov
mov
and
push
pop
dec
je
pop
mov
enter
shl
fucomp
push
pop
ror
sub
ja
or
pop
rcl
cmp
mov
popa
xchg
cmp
bnd
xor
push
pop
inc
jno
pop
imul
aad
dec
cmpsb
jge
adc
or
shl
or
mov
sub
and
repnz
pop
xor
aam
adc
xchg
je
xchg
push
ss
aad
test
icebp
fnsave
pop
clc
aas
xor
adc
aaa
popa
pop
jb
ja
cmp
adc
jge
xor
mov
inc
js
sahf
pop
dec
aad
leave
mov
xchg
jne
push
js
pop
clc
mov
pop
bound
or
cmp
xchg
roll
test
popf
cs
or
dec
mov
das
sub
fisubl
cmp
pusha
adc
es
shl
test
incb
mov
pop
stos
rcll
sarl
faddl
or
xchg
sub
cmp
sub
xor
fnsave
cs
call
dec
sbb
inc
leave
popf
aad
mov
add
std
ja
add
js
sub
add
push
mov
aaa
inc
stos
aad
and
jge
pop
enter
xlat
pop
lock
adc
add
add
rorb
fiadds
icebp
push
not
cmp
divb
enter
push
adc
in
inc
add
pop
ror
inc
in
add
pusha
int3
rcl
lea
sbb
leave
pop
xor
dec
dec
xchg
dec
inc
dec
jno
push
mov
inc
mov
movl
es
and
daa
push
int3
bound
pop
sbb
pusha
leave
mov
mov
mov
std
shll
rcll
cs
hlt
ljmp
adc
int3
ror
popa
cli
mov
rcpps
cmc
inc
sahf
enter
inc
mov
cmpsb
shr
jl
mov
xor
jbe
sub
mov
lret
aas
cs
adc
adc
jno
nop
insb
push
mov
into
jno
dec
cld
ja
sbb
jl
roll
jnp
jmp
mov
xor
out
out
pop
popa
out
cld
std
inc
ja
insl
dec
sub
mov
xchg
dec
icebp
lods
push
mov
lods
dec
sub
mov
mov
sahf
ljmp
xchg
lock
inc
leave
repnz
test
adc
scas
std
xor
jl
popf
test
test
out
add
push
out
inc
shrb
or
or
test
or
fistpl
pop
push
loopne
aas
mov
mov
xchg
xor
stos
leave
leave
pop
das
sbb
sub
inc
popf
jo
push
mov
xchg
inc
mov
push
xor
adc
dec
inc
and
in
jne
push
cmp
push
repnz
push
xor
aaa
shll
inc
sbb
sbb
push
adc
mov
aad
aad
jl
insl
jle
dec
sub
xchg
sbb
cmp
je
test
lods
adc
pop
dec
imull
sbb
cmp
adc
in
add
sbb
popa
stos
pop
sub
loopne
mov
xor
inc
add
adc
pushf
stc
pop
aas
pop
inc
jno
or
xchg
inc
adc
mov
jle
sbb
in
fs
popf
ror
repnz
pop
jns
xchg
push
stos
movsb
pop
loop
leave
fcos
jno
jne
sbb
fdivrs
cmp
pushf
cmp
bound
popf
xor
cmpsl
cmp
adc
sub
dec
xorl
shll
xor
fisubrl
mov
cltd
cli
mov
fs
mov
cmc
jns
ret
xor
xchg
mov
lods
repnz
or
test
lret
jae
jne
jae
sub
xchg
lea
pop
fistl
mov
xor
popa
lcall
in
mov
push
int
pop
push
aam
inc
stc
frndint
add
lods
cmp
xchg
fcomip
nop
jno
addr16
ret
mov
aas
jnp
pop
xchg
xchg
or
or
push
repz
mov
pavgb
flds
adc
inc
loope
test
int3
jae
push
add
shl
mov
add
mov
arpl
jo
inc
leave
push
pop
mov
stc
add
stos
lea
sbb
cld
cltd
xor
lcall
jae
inc
lcall
enter
bswap
adc
loope
pop
add
das
inc
shrl
in
pop
cli
adc
pop
outsl
in
mov
adc
pushf
xchg
mov
xlat
aad
ret
test
jle
loope
mov
pushf
jae
les
adc
clc
movsb
push
sub
xor
push
add
jb
xchg
ret
pop
dec
fs
or
or
cltd
sub
mov
sbb
mov
repz
push
or
sbb
loopne
call
fistl
and
pop
repz
mov
stos
inc
insl
popf
outsl
dec
push
loop
inc
sahf
cmp
loope
push
sbb
inc
test
repz
outsl
negl
andl
ljmp
mov
pop
cmpl
lock
pop
clc
sbb
xchg
add
mov
or
notb
adc
mov
ljmp
dec
in
pop
aaa
ret
xor
movb
jbe
loope
inc
fiadds
sbb
xchg
fdivrl
sarl
mov
inc
ja
cmp
fucomi
movsb
jle
inc
rclb
adc
push
fisttpll
jp
jmp
hlt
rolb
jno
xor
jnp
loope
out
popf
lds
dec
xchg
xchg
popa
shr
aam
rorl
mov
or
xor
cld
add
dec
stos
adcl
xor
mov
cmp
cs
fcmovnu
cwtl
adc
test
cli
aam
mov
cwtl
movsb
push
cmp
cmp
jl
pushf
les
out
push
sub
and
push
sub
lods
cmc
dec
sbb
out
add
pop
out
xchg
sti
stc
aam
ret
push
xor
pop
daa
mov
adc
jmp
sti
aas
mov
outsl
mov
pop
sbb
fcomps
inc
int3
and
std
cmp
jge
and
stos
pop
fldenv
sbb
outsl
repnz
or
sbb
and
pop
lock
sub
outsl
xchg
addr16
pop
add
out
out
fldcw
mov
push
push
ss
sahf
cmp
sbb
or
ret
add
cwtl
iret
adc
xor
sbb
sbb
cmp
pop
or
scas
mov
xchg
mov
adc
fmuls
xor
sbb
popf
jle
ss
mov
push
mov
leave
add
jmp
or
popf
and
lods
jb
test
stc
xor
sbb
adc
adc
jae
push
lret
xchg
xlat
sub
push
fucomi
or
out
icebp
call
mov
mov
xchg
arpl
test
test
movsb
adc
cmc
mov
stos
psubd
ret
clc
je
mov
fdivrs
outsl
sarl
push
jmp
push
aam
jge
push
or
xlat
std
xchg
pop
aas
fsubrs
jp
shll
gs
pop
clc
out
outsl
gs
mov
pop
stos
mov
leave
nop
sub
add
inc
xlat
push
or
mov
inc
fs
out
aad
repnz
mov
lods
pop
mov
inc
inc
ret
push
xorl
stos
subb
subb
shll
xlat
xlat
mov
sbb
lahf
insb
jne
stc
jb
xchg
aad
xor
push
mov
int
mov
jle
inc
sbb
aaa
stos
push
mov
pop
ljmp
ljmp
cmp
push
push
xchg
adc
xor
in
jl
mov
sbb
sbb
jmp
dec
mov
pop
jmp
inc
sbb
test
push
aas
xor
wbinvd
xchg
mov
fcmovu
mov
fwait
clc
shrl
je
das
inc
mov
jnp
inc
mov
and
scas
popf
mov
adc
loopne
mov
lcall
lahf
inc
sarb
imul
imul
daa
dec
in
pop
inc
push
mov
mov
js
sahf
fnsave
jecxz
mov
or
loop,pn
movsl
aam
add
scas
lock
into
xchg
xor
inc
in
mov
pop
pop
mov
insl
enter
repz
cmp
cmp
in
pop
xchg
xor
mov
lods
cmc
ret
add
pop
jb
xor
push
mov
sub
ret
sub
xor
rorb
out
mov
movsl
dec
xchg
aaa
xchg
or
in
cmp
cmp
push
sti
mov
push
cmpsl
or
adc
lods
or
cwtl
inc
add
pop
daa
popf
out
mov
aam
stc
dec
mov
jl
push
jge
push
sub
enter
add
jle
mov
inc
cmp
leave
stos
jl
and
adc
shrb
out
in
lods
inc
lahf
mov
xchg
insl
jbe
testl
ljmp
out
dec
sbb
mov
jo
sub
in
into
jp
imul
ja
out
arpl
in
xlat
or
xchg
sub
xor
mov
pop
enter
leave
daa
jno
mov
imul
rorl
lahf
lods
aad
movsl
push
stos
jns
or
rcll
inc
pop
hlt
jmp
sbb
stos
scas
roll
inc
add
in
fidivrs
test
jmp
sahf
jp
jp
clc
outsb
sahf
mov
test
neg
add
inc
jmp
jns
sbb
mov
sub
dec
imul
inc
jbe
in
mov
jns
test
inc
and
lret
loope
movsb
mov
cmp
sbb
inc
inc
inc
scas
stc
or
push
push
cmpsb
enter
or
jbe
pop
mov
pop
stos
xor
mov
mov
mov
les
sbb
cmpsl
mov
ss
jb
pop
aaa
out
in
add
lahf
daa
adcb
es
xchg
ss
jmp
mov
das
cmp
cmp
dec
pop
cmp
jmp
and
fnsave
dec
push
rcrb
fmuls
push
pop
les
xchg
sub
dec
sub
xchg
lds
jle
sub
je
xor
pop
cmp
push
jb
jae
mov
movsl
clc
inc
mov
rcr
xchg
stos
pop
out
and
cmp
jmp
dec
call
test
call
sub
inc
push
filds
dec
mov
and
jmp
pop
rorl
mov
fstl
jg
mov
aad
push
dec
jb
daa
js
mov
push
cmpsl
rorl
test
and
rcrl
leave
sub
inc
jo
or
xor
fxch
adc
shrl
ss
sub
adc
stc
inc
adc
addr16
or
dec
mov
adc
loopne
sub
setge
mov
ret
adc
pop
adc
inc
ss
xor
and
xorb
popf
or
pop
sbbl
mov
movsb
insl
imul
adc
pop
incl
jl
sbb
fnsave
mov
arpl
sarl
xchg
jne
xor
jb
sbb
jbe,pt
and
inc
jg
mov
fs
ret
in
lret
mov
xchg
popf
inc
mov
adc
pushl
sbb
mov
mov
mov
gs
sub
inc
fbstp
xchg
mov
movsl
dec
jo
mov
ret
sub
loop
clc
xchg
xchg
ja
aaa
mov
ja
jbe
fistps
mov
dec
or
inc
lret
pop
add
out
orl
add
das
cli
icebp
fs
out
pop
insb
xorl
cwtl
mov
in
xor
ljmp
fstps
shrl
cmp
sub
mov
xchg
cmp
shrl
pop
loope
push
xchg
xsha256
cmpsb
xchg
call
data16
ja
loopne
jg
adc
lret
mov
and
aas
scas
test
aam
dec
adc
push
ret
or
xor
fcom
aaa
outsl
incb
add
fcmovnbe
push
dec
and
inc
roll
mov
sub
sub
mov
and
pop
test
lcall
mov
fs
rcll
mov
cwtl
xchg
lcall
add
les
adc
scas
xor
out
ljmp
in
mov
push
cmp
scas
iret
rolb
cld
aam
mov
lret
mov
cs
mov
and
aas
hlt
ret
popf
or
aam
add
fdivl
inc
les
test
push
outsb
xor
aad
or
mov
dec
scas
push
fcmovbe
jbe
leave
adcb
pop
lahf
push
std
fstp
call
mov
add
mov
repnz
imul
xchg
rcl
add
dec
lret
mov
lcall
jne
scas
pop
push
add
or
jp
mov
fwait
roll
sub
mov
das
jbe
leave
popa
xchg
sti
pusha
loopne
ss
or
jge
repnz
push
mov
outsb
inc
xor
incl
mov
ja
xchg
lods
shll
push
cmp
jge
cwtl
sarl
xor
sbb
ret
push
xchg
push
mov
dec
cld
pop
in
pop
cwtl
adc
aaa
scas
mov
cmp
aas
out
cltd
mov
mov
inc
mov
adc
jg
int
mov
lahf
mov
mov
pop
fistl
cltd
popf
fdivrl
dec
js
dec
in
fsub
xchg
popf
jbe
pop
frstor
xchg
leave
addl
xor
ret
test
push
jno
jg
cmpb
test
and
push
popf
jle,pt
mov
pop
test
xor
in
cli
push
pushf
xchg
xor
insl
xchg
aad
sahf
or
shlb
scas
push
iret
icebp
mov
lret
mov
push
sbb
jecxz
jge
cmpsb
xchg
push
cli
cmpsb
clc
jo
fcoms
xor
inc
mov
add
pop
aaa
mov
and
jo
mov
or
out
cmp
jb
fisubs
mov
insl
sbb
fidivs
jmp
push
sti
lock
jp
push
rclb
and
mov
xor
and
lods
add
pop
mov
rclb
lahf
mov
hlt
fbstp
and
push
push
das
pop
out
pop
push
dec
cld
in
mov
ss
mov
cli
pmulhw
pop
popf
mov
int3
pop
cltd
sub
nop
mov
sbb
arpl
je
cmp
push
test
mov
call
xchg
xchg
aam
jmp
mov
inc
and
jbe
sub
ja
mov
ficoms
mov
movsb
cli
imul
dec
cmpl
rcl
stc
movsb
test
call
and
in
icebp
mov
sub
dec
fsubrs
mov
xchg
aas
testb
ja
mov
sbb
dec
pop
scas
out
movsl
inc
mov
cmc
movsb
lret
xor
mov
xor
push
pop
xlat
sub
mov
mov
sbb
inc
aad
mov
std
xor
movsb
xor
clc
dec
movl
pop
lcall
mov
and
or
sub
outsl
pop
fldl
xlat
fcomp
xlat
into
gs
jno
jecxz
daa
lds
jl
test
inc
lret
sbb
push
test
xchg
or
cmp
mov
adc
xchg
cmpsl
imul
inc
mov
aas
shll
arpl
rcr
movsl
or
and
popa
shll
jmp
out
xchg
jns
pop
xchg
popf
ds
ret
push
sub
inc
pop
jbe
adc
mov
mov
mov
in
cmp
inc
imul
std
jmp
jecxz
xchg
push
inc
shlw
sti
pop
rol
in
fdivs
xchg
sub
ret
aas
jl
hlt
sbb
mov
ljmp
inc
ljmp
fwait
cld
xchg
add
lahf
xor
jp
js
xchg
fiadds
push
stos
fdivs
xchg
cmp
mov
xor
xlat
lea
pop
enter
rcrb
das
cmp
in
shll
ljmp
in
dec
sbbl
lahf
push
add
dec
aad
loope
jl
jbe
ret
popa
pop
dec
test
jge
mov
push
lea
mov
sbb
insb
rol
lods
lock
or
pop
mov
xchg
inc
out
subl
mov
cltd
xor
mov
sbb
push
test
push
lahf
inc
pop
dec
aad
leave
outsl
jl
les
inc
aam
lahf
jg
daa
enter
std
inc
pop
xchg
pop
push
pop
cwtl
push
adc
jno
lds
dec
outsb
idivl
leave
sub
test
dec
movsl
div
fisubl
jno
addl
test
fdiv
ljmp
js
inc
jmp
jns
inc
mov
jbe
fisubrl
inc
push
dec
dec
add
xchg
xchg
stos
sbb
das
xchg
dec
adc
mov
dec
arpl
adc
mov
repnz
xchg
mov
fucomi
iret
cld
cltd
mov
push
shrb
icebp
test
xor
testb
push
lods
cltd
rol
push
stc
or
mov
jno
testb
popl
ljmp
orl
add
mov
xchg
daa
les
icebp
and
or
and
pop
mov
mov
mov
insl
pop
lock
call
adc
aad
mov
addl
jns
movsb
insl
xchg
and
icebp
orl
mov
cmc
pop
stc
movsl
mov
shlb
shrl
test
mov
cwtl
sbbb
stos
mov
pushf
xor
daa
jbe
xchg
add
clc
incb
dec
xor
sbb
test
or
xchg
mov
pop
jbe
dec
popa
jnp
pop
stos
xor
shlb
sub
jle
cmp
mov
adcl
pop
scas
aaa
lcall
frstor
sbb
rcrl
jge
jnp
sub
sub
inc
outsl
mov
push
mul
cmp
push
imul
jle
mov
stos
pop
inc
jle
adc
push
mov
repnz
cli
aam
cmp
push
cli
mov
cmp
outsb
dec
inc
push
imul
sub
rorb
fiaddl
cmp
sub
or
xchg
pop
pop
xchg
jecxz
inc
pop
aaa
adc
imul
ret
stos
xor
cmp
add
mov
sbb
fdivs
fstps
xlat
aam
cmpsl
pop
ror
fwait
pop
push
sub
movb
push
pop
addr16
test
loope
loope
push
mov
sbb
push
mov
adc
loop
pushf
js
out
test
ffreep
mov
mov
test
mov
sub
inc
shl
mov
mov
mov
call
mov
inc
push
mov
jns
loopne
and
pop
mov
fdivrp
sub
stc
dec
mov
push
cmp
xor
add
or
aas
push
mov
mov
pushf
fbld
ffree
push
push
pop
pop
loopne
fwait
pop
xchg
aam
mov
aad
int3
push
mov
mov
push
test
push
fstl
add
into
mov
push
cli
ret
sarb
mov
bound
inc
mov
adc
jge,pt
fnsave
mov
jne
pop
sbb
sahf
jl
inc
mov
cwtl
push
lods
inc
addr16
xchg
ret
rorb
dec
aam
xchg
pushf
pop
push
js
push
pop
enter
orb
mov
jge
push
adc
xchg
mov
inc
cltd
jl
mov
out
push
in
push
es
sarb
mov
insb
mov
sub
stos
rcll
imul
outsl
int
out
add
scas
xor
inc
pop
mov
jnp
sbb
pop
add
imul
push
insl
xchg
xchg
mul
movsl
mov
call
jno
sbb
inc
rcl
insb
popa
cmp
cmpb
pop
repnz
rorb
out
je
mov
xchg
pop
push
mov
jns
negb
push
orl
add
pop
dec
ror
mov
jno
test
push
adc
fnstcw
jge
xor
es
outsb
push
vphsubdq
or
xlat
pop
pop
sub
dec
ret
mov
loope
mov
sub
push
xchg
stos
shrb
test
lret
or
pusha
das
dec
shrl
pop
push
fcmovnb
push
hlt
jne
sub
mov
adc
outsl
jle
inc
imul
dec
inc
inc
jbe
pop
popf
popf
mov
xchg
mov
push
mov
aaa
dec
add
xorl
xchg
enter
arpl
xlat
xorl
add
push
xchg
sub
enter
test
adc
scas
aaa
jg
mov
daa
sbb
sbb
aad
dec
paddq
mov
test
push
xlat
test
cmpsl
or
out
xchg
pop
into
dec
cmp
addr16
or
push
pop
js
adc
cmp
stos
dec
stos
lret
fucomip
inc
cmpl
cld
jns
fsubl
adc
addr16
xchg
mov
arpl
dec
jge
iret
in
push
inc
push
ret
hlt
sbb
hlt
pop
or
movsl
test
mov
popf
dec
jb
cmp
sahf
dec
adc
mov
inc
rclb
pusha
int
test
int3
shrb
stc
ljmp
dec
test
mov
add
pop
push
cmc
insl
jo
sub
fcompp
jmp
and
shll
cmp
cmc
shr
lods
lret
mov
push
ds
or
icebp
sub
or
fsts
xor
ret
shll
mov
xor
jb
adc
or
in
push
je
xchg
lock
out
pop
cld
lea
or
fisubs
lea
loope
clc
cmp
aam
pop
xor
push
addb
mov
add
or
inc
and
outsb
mov
xchg
cmpsb
dec
mov
dec
mov
adc
xchg
push
fcompl
or
cwtl
dec
mov
dec
mov
dec
add
push
bound
cmp
in
and
adc
and
daa
movsb
rcll
popa
daa
fstl
les
leave
testb
pop
ret
add
jno
jno
inc
aad
mov
cld
out
dec
and
add
popf
mov
push
ss
pop
dec
iret
rcll
adc
xchg
dec
out
cmp
dec
mov
adc
or
andl
cmpb
divl
je
enter
shlb
iret
jg
fs
ret
ja
jecxz
popa
lds
bound
push
cwtl
and
xlat
or
pop
sti
hlt
inc
lods
aaa
xchg
mov
push
sbb
dec
aaa
jns
test
cmove
pop
mov
add
adc
jne
xchg
scas
addr16
jg
fs
ret
sahf
addr16
inc
icebp
aam
mov
or
jnp
mov
sbb
mov
stc
sbb
push
xchg
cmp
shl
in
push
add
fildl
pop
js
inc
fs
dec
movsl
pop
aad
and
and
ljmp
insl
xor
icebp
mov
jle
cmpsl
adc
pusha
pusha
and
aaa
add
loop
data16
jmp
aam
cmpsl
aad
cmpsb
dec
outsl
fsubrl
clc
cmc
dec
icebp
sbb
jno
rol
or
mov
or
movsb
daa
mov
cwtl
xchg
jle
jb
enter
rorl
ja
aas
xor
pop
stos
arpl
sti
les
lock
adc
cmp
cmc
in
fstps
icebp
push
in
lahf
cmpsb
orl
mov
nop
pusha
sarl
xlat
mov
ror
pop
ja
cmpsl
es
jb
mov
or
sbb
lds
out
lahf
repz
pop
lods
adc
pushf
repz
mov
sbb
lahf
repnz
mov
out
aaa
fcmove
mov
xchg
ud1
ud1
mov
lret
pop
xchg
hlt
inc
adc
or
repnz
cmp
outsb
jne
mov
mov
call
lret
mov
stc
add
push
sub
jb
shrl
popa
push
pop
jns
push
add
enter
movl
mov
xchg
cmp
push
rclb
movsb
daa
aam
mov
jbe
in
adc
jp
add
cli
in
sbb
xor
sub
rorl
int3
xlat
lods
dec
ret
cli
shll
xor
lret
call
mov
xchg
fwait
inc
or
nop
jno
fdivl
fmuls
dec
mov
xlat
lds
xchg
aaa
in
and
adc
dec
xor
idiv
inc
xor
dec
sbb
lahf
jle
inc
pushl
xchg
outsl
lds
push
ja
push
push
lods
lcall
outsl
nop
pop
sbb
pop
iret
stc
jecxz
xor
dec
jecxz
int
push
in
rorl
sarb
xlat
mov
and
insl
and
jns
xchg
int
mov
or
cmp
jbe
test
inc
mov
sub
shrl
mov
sub
jns
pop
dec
xchg
movsl
xchg
xchg
add
cmp
dec
pop
das
pop
sub
bswap
test
notb
idivb
push
adc
adc
dec
add
enter
jp
shrb
movb
push
insb
mov
into
sub
dec
enter
xor
stos
xchg
xor
rclb
xchg
adc
and
mov
je
pop
push
stos
arpl
sbb
int3
ds
pop
pop
pusha
stos
lds
decb
dec
int3
xor
pop
gs
repnz
sbb
data16
leave
scas
lock
stc
jmp
stc
shll
out
dec
sahf
cmc
xor
mov
jno
dec
les
inc
or
pop
in
iret
jmp
inc
arpl
push
stc
test
cmp
jbe
daa
mov
icebp
fiadds
xchg
sahf
pop
mov
clc
ret
mov
add
add
mov
xchg
mov
jns
rorl
inc
shlb
pop
mov
mov
out
sbb
jg
mov
rcl
xor
xor
sub
icebp
subl
dec
mov
dec
popf
xor
data16
mov
out
pop
movsl
cmp
push
jb
cmc
in
lcall
push
ret
add
xchg
or
sub
xor
aas
push
test
sbb
hlt
cmc
pop
mov
add
test
fidivrs
mov
cmp
or
ljmp
int
mov
mov
xchg
nop
mov
sar
ret
cltd
rcl
mov
test
lret
fdivl
mov
and
stos
lods
xchg
jo
outsb
add
aaa
iret
cmpsl
cmp
jne
sbb
fisubs
shlb
call
and
or
or
jns
xchg
test
xchg
inc
xor
xchg
push
lcall
mov
push
or
jns
cwtl
sbb
mov
or
sbb
sbb
inc
push
push
jmp
mov
int
ds
dec
push
adc
mov
push
in
pusha
lods
cwtl
popa
mov
pop
jno
jge
adc
rcrb
add
xchg
push
inc
push
cmp
sar
lea
xor
mov
or
pop
nop
aad
mov
fiaddl
adc
fwait
mov
add
xchg
push
mov
imul
bnd
es
ret
gs
adc
cmp
inc
ss
add
aad
adc
shl
push
jp
lds
jmp
js
insl
dec
shlb
pop
aaa
mov
iret
push
jo
addr16
aam
add
loope
dec
into
mov
mov
popf
mov
mov
nop
sub
and
lods
or
pop
jl
repz
icebp
pop
or
sbb
add
mov
lods
pushf
add
test
inc
out
test
push
ror
push
pop
fisttpll
gs
in
push
lcall
mov
leave
das
mov
std
sbb
mov
subb
xor
pushl
push
and
mov
test
or
cmc
pop
xchg
or
adcl
xchg
sarl
pop
leave
and
cltd
jcxz
push
or
rcll
cmpsb
mov
cli
daa
insl
and
mov
xchg
sahf
lock
jb
mov
loopne
dec
pop
xchg
mov
fldenv
xchg
push
mov
cli
xchg
lahf
jecxz
and
sbb
jg
sbb
and
mov
andps
leave
fimuls
faddl
in
xchg
pop
xor
or
cmp
rorb
pop
sub
rcrb
push
or
jae
adc
cmp
sub
jns
adc
mov
cmpb
imul
xchg
adc
sbb
fsubrl
dec
add
dec
rolb
arpl
push
lods
dec
lcall
test
jg
sub
decl
lret
fdivr
sti
cmp
fistps
jnp
cmp
xor
aam
pop
push
test
ret
inc
jnp
imul
and
rclb
mov
mov
and
push
test
xor
lea
adc
inc
and
mov
mov
push
call
hlt
sub
push
in
jle
mov
jmp
call
outsl
xor
xor
cltd
xchg
popl
add
and
jo
xchg
jbe
sbb
xchg
xor
push
xchg
push
leave
xor
test
jbe
xor
mov
push
xchg
shrb
or
gs
sbb
sbb
loope
push
cmp
or
add
shr
ret
xchg
test
and
stos
out
or
sbb
aad
add
aaa
cs
xchg
and
sti
mov
push
push
repz
movsl
cmc
nop/reserved
es
insb
int
cld
scas
fwait
cmpsb
imul
jmp
rcrl
mov
pop
cmp
lods
xchg
stos
negl
inc
or
cmc
arpl
in
pop
xor
mov
stc
idivl
lods
lahf
loope
inc
dec
jae
push
mov
idivl
out
in
mov
loopne
leave
inc
and
sbb
cs
push
ss
jb
cmpsl
lock
jmp
dec
inc
pop
pop
fwait
xchg
lock
dec
shll
sti
lret
ffree
jno
leave
xchg
js
push
cltd
mov
xchg
shrb
sahf
pop
xlat
andl
dec
mov
aas
int
ja
cmpb
fnop
stos
lcall
push
out
jno
movsb
fucomp
test
inc
in
xchg
std
decb
xor
fisttpll
daa
mov
push
xor
add
mov
xchg
dec
divb
pop
and
in
hlt
mov
or
or
mov
in
xor
call
mov
xlat
adc
adc
sar
test
xor
shll
ja
mov
insl
inc
xchg
jge
lahf
cmp
shll
icebp
mov
jp
jne
sub
xchg
sub
and
cwtl
pop
fsubrl
cld
sbbl
or
mov
stos
push
adc
mov
mov
lock
pop
ss
mov
test
jne
pop
dec
outsl
ffreep
mov
mov
cmp
xor
inc
pop
rcrb
pop
scas
aaa
dec
leave
mov
xchg
mov
jl
mov
fldt
fadds
lahf
repz
jno
push
mov
xor
fwait
test
mov
xchg
or
and
movsl
jle
and
pop
mov
popa
add
xchg
pop
addr16
adc
push
pop
arpl
popf
pop
sbb
mov
fdivl
adc
xchg
push
or
mov
sub
rorl
repnz
adc
mov
jnp
dec
pop
mov
dec
test
push
je
or
pushf
inc
push
mov
in
cld
jns
mov
ret
test
push
rcrb
aam
xchg
pop
nop
push
pop
xchg
loope
push
sbb
mov
sub
pmulhuw
or
adc
xor
daa
inc
movsl
xchg
inc
out
inc
mov
push
lahf
mov
sbb
mov
adc
dec
stc
lahf
cwtl
jnp
andl
in
mov
movsl
inc
xchg
fisttpll
imul
jmp
in
adc
jl
imul
cmp
pop
fcom
xchg
sarb
fwait
pushf
popf
xchg
adc
shrb
jns
jne
call
cltd
daa
mov
repnz
mov
xchg
xchg
pushf
mov
jmp
push
and
pop
add
repnz
inc
fldcw
mov
mov
sbb
cs
cmp
and
adc
xchg
call
pop
iret
inc
jge
xchg
xchg
inc
aas
cld
je
jl
ret
sbb
push
push
imul
adc
add
dec
jg
arpl
add
and
fwait
inc
jb
stc
test
in
repz
xor
in
xorl
idivb
xor
aad
insb
add
xchg
sbb
aam
xchg
jg
popf
fbstp
dec
subl
dec
jo
jge
xor
jl
push
jne
loopne
pop
adc
mov
add
dec
pop
les
stos
jmp
call
inc
cmp
xlat
jae
fcomip
adc
rcll
mov
adc
lahf
sub
and
outsb
loop
or
mov
jl
lret
sbb
add
jbe
jb
pop
stc
mov
lea
test
shl
icebp
add
addr16
std
cmpsb
sub
add
jp
cmp
dec
and
js
jmp
gs
aas
rcr
mov
adc
add
cli
add
scas
sbbb
in
faddp
mov
filds
lds
xchg
inc
iret
and
mov
sbb
clc
pop
test
js
xchg
addr16
jno
pop
mov
and
in
inc
jecxz
add
sub
inc
aas
outsb
ficoml
dec
scas
movsl
sub
leave
dec
jle
mov
lret
lods
cld
fiadds
jecxz
mov
mov
sub
adc
test
insl
xacquire
or
sbb
push
mov
mov
movsl
xchg
lret
sub
cmpsl
stos
out
jle
fimull
sahf
sbb
fldenv
aam
fnstenv
sbb
adc
pop
ret
lcall
sti
aad
mov
adc
adc
int
jb
pop
test
mov
lea
adc
jp
into
jno
jp
inc
push
std
enter
into
pusha
fisttpll
mov
fwait
fwait
mulb
push
out
push
adc
lret
mov
xchg
ret
dec
icebp
inc
fiaddl
xchg
mov
mov
push
pushf
push
xchg
scas
add
xchg
iret
movsl
shrl
dec
or
gs
and
aam
and
test
hlt
adc
push
xor
and
ret
adc
lahf
fsub
push
and
and
add
loopne
mov
clc
popa
pop
int
sbb
movsl
ds
xchg
lods
cmp
xchg
arpl
ret
mov
bound
outsb
adc
lea
bound
xchg
xor
mov
mov
inc
cmpsb
cli
enter
aad
pop
hlt
dec
sub
sti
mov
sbb
int
lret
jae
lcall
jne
pop
adc
dec
xchg
fmuls
mov
mov
bswap
call
leave
or
repnz
pop
adc
stos
je
jae
mov
mov
push
xlat
stc
sbb
inc
movsl
ds
mov
popf
shll
pop
mov
leave
push
jle
hlt
leave
iret
xor
inc
sbb
xchg
loope
out
shlb
adc
test
jbe
aas
push
aad
dec
or
rolb
lods
mov
int3
mov
repnz
push
lcall
mov
call
xchg
push
mov
in
xor
ljmp
out
jg
inc
adc
addr16
cmp
popf
cld
pop
insb
mov
popa
adc
xor
push
in
std
subl
mov
and
sub
dec
imul
add
in
mov
jle
push
shlb
sbb
sub
add
jp
mov
pop
outsl
loop
js
xchg
and
inc
popf
lret
xor
mov
mov
xor
sub
mov
xor
dec
sbb
mul
jo
fldenv
mov
jp
mov
and
aad
ret
fs
ja
cmc
pop
cmpsl
stos
test
ds
insb
xchg
xchg
aam
pushf
mov
xchg
movsl
adc
mov
je
mov
sub
fdivrl
fistps
rorl
mov
imul
xchg
ljmp
jl
and
xchg
pop
fistpll
addb
outsb
idivb
cld
jmp
mov
xchg
sbb
xor
scas
adcl
xchg
cld
pop
jno
les
inc
ss
out
xor
mov
or
out
out
cmpsl
rorl
stos
sbb
pop
jbe
cli
add
aad
cmpsl
pop
xchg
cmc
add
ja
and
cli
xchg
jne
mov
xchg
jecxz
mov
push
lret
jae
lret
incb
ljmp
enter
ret
inc
xchg
jne
adc
ds
xchg
mov
nop
inc
add
rorb
ss
ret
dec
jg
mov
je
cli
xchg
lds
cmp
cmp
popf
dec
mov
lcall
cmp
adc
xchg
std
std
test
pushf
add
addb
sub
icebp
push
dec
nop
xchg
mov
das
stc
aam
or
xorl
or
sub
sbb
mov
jne
pusha
insb
popa
test
loope
aad
movsb
stc
sub
xor
loope
xor
xchg
aad
adc
xchg
ljmp
out
adc
mov
xor
or
mov
inc
push
idivb
sub
int
adc
and
jne
hlt
movsl
push
adc
inc
mov
test
push
lahf
push
push
dec
xchg
mov
xchg
sub
test
addr16
inc
jno
sbb
insb
push
in
xchg
adc
aaa
adc
scas
imul
jns
mov
call
push
popa
mov
mov
cmp
outsb
cmp
adc
das
inc
ljmp
push
pop
mov
sbb
add
adc
jnp
cmp
shl
data16
gs
icebp
or
lahf
push
sbb
push
jbe
adc
in
and
aad
mov
dec
adc
inc
jge
cmp
jmp
cs
dec
cli
sub
arpl
movsb
jbe
and
xchg
jno
xchg
cmp
and
xor
fldcw
adc
aam
loope
movsb
jp
mov
icebp
dec
cmpsb
rorb
inc
in
xchg
pop
cmpsl
inc
out
add
stc
or
jge
mov
xor
sub
xor
ret
lock
dec
inc
mov
es
fisubl
pop
jmp
mov
arpl
mov
hlt
adc
test
ds
push
sub
add
fs
stc
xlat
dec
and
test
rcrb
xor
rorb
push
and
shll
pop
push
gs
adc
fs
dec
jge
fisttps
inc
dec
inc
jno
mov
in
push
lahf
mov
cmpsb
hlt
pushf
addr16
sbbb
mov
mov
jnp
jbe
xlat
dec
jmp
push
jo
idivb
iret
dec
or
xchg
les
js
jle
xor
adc
mov
fiaddl
lahf
leave
lret
pop
lds
push
pop
movsl
fwait
add
test
ret
out
inc
xor
adcb
sahf
mov
rclb
test
shrb
adc
cld
add
jno
inc
mov
adcl
and
mov
push
adc
orb
movsl
or
not
sub
leave
dec
enter
ljmp
mov
icebp
incb
cmpsb
pop
cld
cs
push
mov
in
hlt
lods
ja
adc
inc
push
inc
jmp
jns
fldt
mov
arpl
js
ja
or
and
and
mov
push
leave
icebp
cmp
jl
shll
adc
push
gs
fdivs
add
adc
push
xor
out
flds
fucomi
scas
cs
add
sub
into
mulb
jmp
fistpll
mov
daa
loop
adc
mov
iret
add
sub
push
jp
mov
stc
sub
or
add
xchg
fidivs
leave
xchg
test
pop
leave
add
push
dec
cmp
xchg
mov
out
sub
sbb
mov
dec
movsl
mov
lock
mov
repnz
pop
push
push
popa
sarl
sub
xchg
add
mov
jecxz
icebp
iret
mov
stc
xor
pusha
add
orl
pop
testl
cmpsb
sbb
fcoms
sub
aaa
and
fmull
hlt
mov
sbb
xor
es
enter
roll
cmp
cmp
scas
cs
jo
mov
push
jno
push
xchg
pop
ljmp
mov
out
out
jns
subb
sub
mov
lods
imul
bound
push
stc
mov
sub
in
imull
pop
jne
pop
mov
gs
pop
push
call
enter
enter
adc
std
stc
jmp
enter
sub
add
fisttpll
lods
lret
jg
out
mov
adc
add
fmull
push
and
add
add
idivb
jmp
dec
negl
push
and
xchg
sub
in
mov
out
pop
mov
out
add
std
ja
test
and
cmp
mulps
mov
movsl
in
inc
insl
aaa
adc
div
gs
loopne
adc
outsl
aaa
add
int
push
xchg
rcll
mov
sub
loope
dec
xchg
test
xchg
mov
push
inc
stos
fs
add
mov
clc
shr
dec
add
cltd
lret
push
jge
xchg
mov
ret
ret
shlb
stos
cmp
inc
adc
push
adc
mov
scas
mov
lret
inc
scas
call
mov
std
or
cmp
scas
aas
cmp
loop
xlat
mov
scas
in
bound
jo
ficompl
and
sbb
ljmp
popa
rcrl
sbb
mov
xchg
pushf
loope
aas
mov
push
adc
inc
or
push
or
fimuls
mov
mov
jo
pop
mov
add
mov
pop
ljmp
rcrl
subl
out
add
cmp
repz
aad
fimuls
dec
cmpsl
leave
inc
jns
jmp
jo
sbb
orl
lea
adc
pop
adc
pop
cmpsl
xchg
or
cld
scas
push
movb
pop
out
and
ljmp
pop
sub
fsubrl
insb
je
pop
rorl
jo
push
push
sub
loope
ret
pop
jne
imul
cli
mov
mov
fildl
inc
incb
jecxz
cmpsb
add
mov
gs
dec
aas
xchg
cmpsl
rcrl
outsl
xlat
add
std
cld
mov
ret
inc
mov
xor
dec
add
out
lods
jb
je
push
sbb
mov
ljmp
ror
pop
cmc
rcrl
jb
push
out
repz
adc
loope
stos
ret
pop
test
aaa
fcmovnu
jnp
push
repnz
lds
cmc
rolb
add
andb
mov
sbb
vpunpckldq
pusha
int
jns
loop
shl
cli
inc
push
dec
push
sbb
mov
pusha
mov
adcl
and
cmp
cld
int
mov
mov
push
inc
seto
hlt
jno
xchg
sub
aad
sub
test
or
insb
inc
mov
xchg
jl
lcall
push
je
xor
inc
mov
xchg
aaa
dec
sarl
push
in
rol
les
lret
icebp
sub
daa
mov
xor
pop
es
jl
test
les
popf
shrl
enter
fidivrl
inc
pop
push
and
adc
pop
addb
scas
mov
stos
lahf
dec
inc
iret
jmp
sub
adc
fwait
xchg
ja
lods
cmp
cmp
lods
repz
xchg
rcll
jmp
push
popl
mov
out
insl
mov
jne
stos
rorb
pusha
orb
jp
ret
popa
push
add
sarb
dec
dec
test
xlat
push
mov
or
xchg
xor
sbb
scas
in
decl
push
fsubs
sahf
dec
xchg
bound
pop
aas
nop
fs
jl
inc
in
jnp
jecxz
enter
loope
mov
daa
leave
sbb
xor
adc
xlat
cmp
shrb
adc
stos
in
or
sub
mov
push
inc
leave
movsb
inc
cmp
stc
or
pop
mov
add
ret
sub
jmp
inc
xchg
movsl
sub
insb
movsl
cmp
mull
xchg
inc
sbb
test
daa
xchg
lret
pop
pextrw
add
dec
sahf
pop
dec
dec
cmovge
sub
jle
sub
sbb
cmpl
iret
ret
xchg
je
sbb
out
jo
push
iret
add
insl
nop
inc
jg
stos
cwtl
inc
nop
stos
mov
inc
dec
les
lds
shll
pop
std
iret
es
daa
sti
push
scas
xchg
pop
add
sub
ja
test
ja
cmpb
popf
jecxz
icebp
lock
test
mov
ficoml
insl
jecxz
adc
push
decb
scas
sub
mov
xor
arpl
dec
rol
or
xor
icebp
adc
jo
inc
xchg
imul
mov
frstor
push
rclb
pop
cmpsl
inc
leave
stc
or
or
inc
filds
ja
mov
dec
pop
xchg
ss
stos
mov
mov
mov
popf
hlt
jno
movsl
test
xchg
out
add
inc
stc
clc
dec
mov
jbe
imul
pop
add
cmpsl
out
xchg
mov
insb
movsl
mov
cwtl
insb
popf
mov
mov
or
add
sarl
orb
or
push
xor
jns
jp
xchg
cmpsl
and
push
sub
inc
cmpl
fs
test
icebp
lahf
dec
mov
lock
imul
fisttps
dec
arpl
negb
fdivrp
mov
dec
mov
int
fwait
xchg
loope
mov
mov
pop
iret
imul
add
rcrl
loope
cmpsb
cltd
fs
jae
lods
or
push
lea
jp
lds
xchg
aam
out
pop
mov
push
inc
xlat
rorl
sbb
mov
fcoms
addb
xchg
adc
push
ss
in
fldlg2
inc
pop
jecxz
int3
call
inc
sbb
stos
fs
adc
sbb
xor
mov
ljmp
mov
adc
and
scas
jbe
icebp
mov
aas
cli
pop
push
loop
add
mov
jo
cwtl
enter
ret
pop
push
mov
add
xchg
mov
xor
mov
inc
gs
cmp
dec
adc
int3
inc
push
adc
out
add
mov
mov
sti
aad
mov
adc
ja
push
lock
lock
cmp
inc
fwait
dec
es
lods
std
jae
xchg
lret
mov
or
inc
ror
push
jae
xor
insl
ret
push
bound
mov
je
aad
xchg
clc
cmp
adc
fs
xchg
enter
inc
jle
cmpsl
pmullw
pushf
mov
sbb
pop
add
sub
or
mov
cltd
pop
adc
pop
xchg
xlat
lret
popa
xor
jl
adc
scas
xchg
adc
push
icebp
mov
mov
and
ret
arpl
and
mov
lock
and
inc
roll
int
ljmp
idiv
xorl
rorl
inc
subl
lods
aam
leave
testb
sbb
sti
je
pop
arpl
aad
xor
mov
pushf
arpl
les
jl
jmp
iret
mov
dec
stos
sbb
fcmovne
add
push
inc
in
rcll
pop
stos
daa
and
dec
ja
cmp
lcall
xor
add
pop
aad
pop
inc
outsl
sbb
xchg
push
dec
push
test
lea
sub
or
pop
and
flds
sbb
xchg
and
jno
push
xchg
xchg
leave
bound
into
jb
mov
rcll
test
imul
sub
pushf
lret
aad
fimuls
addr16
xor
pop
cli
sbb
aam
sbb
and
rorl
push
or
mov
ret
insb
sbb
repnz
sahf
or
mov
dec
pop
push
flds
rorl
daa
xor
inc
test
fsubr
dec
popa
and
aaa
xor
loope
int3
dec
dec
hlt
int
std
and
cmp
jbe
push
sbb
sub
sarb
xor
rol
into
pop
insb
jne
test
mov
lock
test
inc
jg
testl
xchg
xchg
lcall
cmc
fsts
adc
movsb
pusha
jo
test
mov
add
lock
pop
mov
nop
leave
xchg
dec
jmp
add
mov
int3
xor
and
jecxz
dec
out
imul
xchg
hlt
pcmpeqw
cmp
or
jle
xor
jmp
movsl
call
dec
out
mov
aam
inc
xchg
mov
jle
adc
cmp
mov
cmpsl
cmc
fnstenv
xlat
xchg
hlt
pop
mov
and
repnz
push
js
test
int3
push
xchg
xchg
xor
push
sti
push
idiv
adc
and
mov
lahf
out
sbb
test
fstl
fimull
xchg
int3
sarl
mov
cmp
add
and
xor
mov
xorb
aad
or
inc
stos
aam
mov
fsubl
ja
or
test
leave
hlt
aad
jo
adc
push
xchg
loopne
stc
sub
aam
add
cmovno
out
xlat
test
fs
loop
or
mov
or
repnz
jne
sub
jmp
push
into
lock
jae
pop
pop
stc
les
push
jl
mov
sbb
stc
lods
in
popf
clc
pop
enter
stc
xchg
mov
sbb
push
jmp
mov
or
inc
push
leave
mov
jmp
sub
lods
mov
loopne
dec
xlat
xchg
jp
mov
std
push
ljmp
push
add
shlb
add
lds
rolb
pop
cwtl
pushf
mov
call
xlat
sub
xor
icebp
rolb
inc
pop
in
subb
fisttpll
lods
dec
icebp
and
sub
push
clc
or
mov
sub
push
movsl
cmpsl
std
and
aad
pop
xchg
xchg
jp
ja
inc
clc
imul
pushf
jge
loope
jge
push
aaa
mov
fs
push
cmp
shr
sub
gs
pop
dec
adc
cmp
sahf
fisubl
dec
or
add
movsl
and
push
mov
in
lock
clc
pop
jne
push
push
mov
inc
into
jp
jmp
dec
inc
test
rol
dec
fnsave
pop
sbb
or
mov
pop
rorb
orps
je
add
fwait
pop
in
mov
xorb
jo
inc
fstpt
lcall
pop
push
repz
jl
ret
cmpsb
dec
inc
jbe
shrb
int3
or
push
xchg
push
dec
pop
pop
and
pop
pop
les
pop
mov
in
fwait
sub
sti
adc
and
icebp
add
cmp
push
fstl
pop
popa
sbb
fwait
mov
push
mov
push
aas
daa
add
sbb
mov
mov
outsl
fucompp
cmp
jmp
leave
jp
pop
push
movsl
loopne
out
outsb
add
lds
test
das
icebp
rcl
mov
std
lock
lea
adc
cmp
notb
cmp
cmp
dec
mov
cld
mov
jl
adc
xor
lods
imul
mov
add
imul
sub
push
insb
jle
enter
mov
xor
popf
cmp
sbb
xor
inc
into
mov
cmp
mov
push
incl
movups
pop
mov
cmpsb
inc
ljmp
push
movsl
jno
sub
or
jo
pop
lods
in
xlat
cmc
adc
jecxz
enter
xorl
insl
enter
dec
pusha
mov
adcb
stos
inc
imul
and
mov
and
inc
repz
push
push
scas
fstp
and
lds
fsts
pop
shrl
ficoms
pop
and
adc
sbb
jnp
mov
push
pop
and
sub
push
push
into
icebp
sub
mov
fldcw
les
adc
stos
hlt
call
cwtl
arpl
shlb
sub
mov
push
and
mov
adc
andl
mov
and
stos
add
and
std
out
xor
jb
gs
or
and
addr16
and
xchg
push
gs
pop
inc
and
jg
test
lods
scas
incb
xorb
sub
push
scas
pop
mov
outsl
ljmp
jno
adc
jne
gs
loop
or
sub
addb
cmp
adc
rcrl
popa
scas
mov
lcall
mov
fcoms
xchg
rcrl
jo
add
aam
loope
aad
xor
lds
sub
fldcw
dec
mov
mov
xor
stc
xchg
imul
fmul
inc
sarb
movsl
hlt
push
out
mov
ljmp
dec
movsl
pop
enter
xor
xor
push
shll
pop
mov
rclb
push
jnp
leave
leave
out
jns
test
push
outsb
iret
xchg
mov
mov
push
les
mov
inc
xchg
mov
pop
les
xchg
and
shll
xor
fdivl
sub
movsl
nop
jno
repnz
mov
fiadds
push
dec
rol
in
cltd
xchg
dec
jne
inc
out
loop
cmc
and
pusha
push
dec
test
cli
int
or
pop
xchg
add
pop
lock
test
push
mov
sti
jecxz
lds
test
data16
test
outsb
mov
fcomps
cmc
out
fstpt
lds
cmova
lret
stc
mov
mov
inc
iret
xchg
clc
pop
stc
sahf
and
push
add
loope
fldl
mov
fsub
sub
or
fucom
fistps
roll
enter
cmpsb
xchg
es
cli
cmpsb
pop
or
mov
push
sub
es
xchg
shrb
movsb
and
loop
push
jle
shl
jg
jg
fld
mov
bound
call
aas
or
dec
push
testb
incl
add
mov
dec
ret
shll
mov
sbb
xchg
jno
repz
adc
xchg
lods
dec
orl
cmp
or
add
lds
and
dec
iret
pop
incl
dec
test
or
push
push
popa
mov
clc
cmpl
sbb
inc
movsl
ja
jne
nop
outsb
fldt
and
cmp
inc
sar
cmpsb
mov
rcrl
mov
cmp
mov
fiadds
subl
push
sahf
test
push
out
xchg
pop
outsl
rclb
jge
popf
mov
lret
fisubrl
imul
mov
sub
xor
aas
mov
scas
std
pop
lahf
pop
push
inc
rcll
push
enter
adc
inc
ficoms
aad
int3
call
push
add
xor
testl
sarb
aaa
inc
xchg
push
div
fistpl
push
pop
jne
add
adc
dec
iret
sub
pushf
scas
loope
or
bnd
xorl
pop
mov
sub
mov
sbb
mul
into
notl
cmpb
add
jg
xlat
fxch
ljmp
mov
mov
pop
ret
out
int
jo
dec
xchg
stc
jp
sbb
cld
and
ret
pop
popa
push
fdivp
adc
dec
ds
dec
sub
fistpll
inc
dec
dec
bnd
cld
xchg
ljmp
jno
in
and
sbb
sub
cli
sub
add
or
popa
cmc
push
loopne
dec
subl
and
in
out
inc
fdivr
inc
cmpb
hlt
mov
dec
sub
xchg
sbb
push
std
pop
ret
pusha
mov
add
jp
mov
in
pop
nop
pop
pop
dec
cmpsl
mov
push
jp
sarl
cld
inc
repnz
scas
mov
mov
cmp
xor
loope
mov
test
cmp
pop
xlat
ljmp
cmp
fucomp
adc
adc
adc
and
stos
mov
fyl2x
nop
aas
add
push
mov
push
ss
xchg
stc
enter
jno
and
sub
add
push
aam
sarb
mov
xor
imul
adc
and
enter
mov
inc
fcomps
and
push
push
add
fistl
push
gs
jg
movsb
dec
cmc
pop
nop
test
adc
cwtl
pop
test
test
test
inc
stc
mov
and
cmp
and
mov
aaa
xor
push
pop
push
shl
movntq
jl
pop
or
pop
aad
data16
repnz
arpl
outsl
add
test
data16
and
jns
dec
cmp
mov
fcomps
enter
cmc
aam
xor
jno
gs
not
jecxz
rcl
cld
cmp
mov
jg
int3
lock
cmp
xchg
xlat
xchg
in
fcomi
mov
scas
sub
aam
push
fwait
sub
pop
mov
test
sbb
sarl
sub
cmpsl
hlt
sti
outsl
gs
inc
inc
test
inc
add
inc
rorl
jns
jno
insl
lret
mov
jns
subb
mov
test
fdivr
jnp
dec
leave
mov
dec
stos
aas
inc
or
cmc
ljmp
cld
sub
sbb
push
sbb
cltd
aad
lcall
scas
mov
loop
loop
loope
sti
pop
imul
mov
movsb
push
sub
pop
xchg
inc
mov
scas
xchg
jnp
stos
xchg
xchg
mov
cld
mov
dec
mov
shrd
cmp
lods
cmc
mov
aaa
lods
mov
sbb
mov
or
lods
test
pop
lods
cltd
mov
adc
pushf
mov
and
test
lcall
push
inc
pop
test
out
fisttpl
and
lret
pushf
xchg
mov
lea
push
adc
sub
shl
xchg
push
ret
jo
std
xlat
insl
lcall
pop
cmp
inc
lods
js
fcom
fwait
test
bound
mov
inc
int
mov
int3
not
or
push
ror
push
add
js
test
inc
test
pop
out
cmp
lods
js
push
cmc
xchg
movsl
movsb
push
sti
xchg
decl
mov
pop
adc
test
imul
mov
movsl
pop
xor
int3
and
shl
fstl
test
mov
jle
aad
dec
pop
sub
sub
sub
sub
push
mov
fs
movl
addl
mov
xchg
imul
subl
aam
fstpl
inc
pop
xchg
jg
push
out
roll
das
push
outsl
adc
addl
insb
sbb
dec
adc
sti
dec
adc
inc
xor
push
lock
stc
imul
cmpb
mov
xchg
cmp
rclb
mov
dec
stos
push
add
fwait
mov
mov
cmp
xor
sub
xchg
push
mov
sub
pusha
stos
loop
xor
rclb
or
fwait
repz
fildl
cmp
sbb
pop
cmp
add
add
xor
loopne
jno
dec
push
loopne
or
sbb
cmp
nop
fmuls
aas
sbbb
fxch
fisttpll
hlt
mov
add
stos
and
xchg
xor
test
bound
in
pop
adc
fdivs
je
sti
pop
adc
xorl
popa
push
ret
shlb
xor
xchg
push
jns
mov
xorl
addr16
cmp
outsl
shrl
aam
lds
cmp
lcall
gs
push
push
dec
adc
push
xor
loope
les
fdivl
pop
std
mov
sub
push
mov
aad
mov
jbe
mov
xor
xlat
adc
push
jae
jne
xlat
sbbl
in
lods
or
push
mov
mov
adc
shrl
out
mov
adc
js
add
lods
dec
gs
cmc
and
pop
sub
test
shlb
test
adc
mov
or
daa
aaa
mov
xchg
xor
mov
testl
filds
repnz
cmp
pop
adc
pusha
fdivl
dec
fiaddl
test
jne
in
push
clc
cmc
es
loop
imul
shr
fstpt
out
cli
dec
jno
test
rol
lret
mov
pop
jae
shll
sub
mov
push
and
pop
sub
sub
mov
int3
and
std
add
cli
adc
ljmp
arpl
push
sub
cli
lods
mov
ljmp
in
sub
adc
lock
sahf
inc
stos
adc
leave
adc
arpl
iret
mov
jge
push
inc
pop
and
xchg
je
enter
test
pop
xor
push
xor
shll
js
pop
pop
add
fistpll
negb
jmp
push
jb
mov
push
cmp
mov
push
ja
push
inc
fwait
test
mov
addr16
not
dec
add
pop
adc
das
lea
xchg
clc
lods
pop
xor
int3
popa
rcrb
mov
push
xchg
cmc
enter
movsl
shrb
fisubs
pop
orb
fst
mov
loopne
rol
xchg
rclb
dec
inc
sub
fcomps
or
mov
arpl
sbb
pop
js
jle
or
push
rol
cld
mov
enter
xor
pusha
bound
pop
dec
or
les
scas
xor
xor
pop
jb
aaa
and
push
ja
jno
lret
sbb
mov
xchg
popa
mov
push
fiaddl
inc
mov
and
ja
jmp
inc
lds
inc
push
insl
pop
scas
es
dec
das
sbb
adc
dec
fdivr
adc
fisttpl
leave
loope
and
sti
xorb
rcl
int
movsl
hlt
fimuls
pushf
int3
adc
fwait
shrb
pop
or
lahf
jl
dec
pop
jle
shll
in
fimull
add
add
and
test
adc
jae
mov
jge
lret
incb
push
xlat
sub
roll
cld
xlat
fistpll
mov
mov
lret
push
xchg
sahf
xchg
or
pop
pop
inc
push
aam
sbb
mov
test
push
pop
inc
push
pusha
sti
aaa
pop
in
or
jge
push
dec
sub
mov
shlb
push
dec
pop
sti
inc
pop
loopne
jbe
push
or
out
fldl
notb
and
icebp
mov
leave
icebp
cmp
mov
push
pop
popf
pop
mov
inc
pusha
int3
mov
sub
mov
cmpsl
pop
xchg
sub
sarb
dec
iret
jle
movsl
adc
xor
push
int3
insl
outsb
aad
cmpsl
and
push
movsl
arpl
fstpl
push
cmp
imul
push
cli
fnstcw
shl
push
sub
mov
pop
sub
into
call
push
sahf
aam
icebp
gs
cs
xchg
push
inc
cmp
int3
and
mov
mov
push
pop
ret
jp
sbb
add
outsl
and
push
pop
gs
test
daa
pop
inc
leave
stc
gs
out
jecxz
shr
test
test
pop
lahf
push
sub
flds
mov
add
cmc
or
xor
or
in
inc
ret
cmp
push
xlat
int
or
xor
int3
daa
pop
dec
cmp
push
pop
sub
mov
fbld
clc
dec
into
or
pop
loop
pop
adc
mov
push
cli
test
shl
sbb
xor
divl
js
adc
popa
and
inc
ret
xchg
bound
repz
movsb
inc
jp
dec
and
mov
push
in
rorl
jbe
add
mov
push
and
mov
subb
sbb
das
dec
fstps
or
popa
subb
lock
icebp
or
ret
ret
idivb
xchg
popa
xchg
xchg
add
cmp
jp
push
fwait
cltd
ret
jge
fsts
pushf
imul
imul
in
loope
stos
inc
in
clc
fstl
popl
add
aas
fpatan
arpl
hlt
or
sbb
aad
xchg
fcomps
bound
inc
out
ret
mov
call
xor
sbb
popl
sbb
ret
inc
mov
aam
dec
rolb
int
jo
or
jns
jg
sub
mov
loopne
dec
mov
rcr
push
pop
sbb
imul
inc
pop
xchg
andb
or
adc
jo
cmpb
push
add
outsl
sbb
jne
add
sub
sbb
lds
sub
mov
jae
aas
in
sub
ficoms
out
jg
clc
cmp
jo
repnz
insb
mov
or
mov
andb
and
pushf
adc
les
cmp
ret
test
ljmp
dec
fisubrl
nop
lock
insl
mov
xchg
push
jnp
das
fcom
push
push
imul
jl
pop
adc
aaa
movsb
sbb
sbb
cmp
addb
out
adc
xchg
addr16
push
popf
in
pop
dec
sahf
mov
inc
stos
int3
nopl
xor
out
pushl
and
dec
pop
clc
decl
cmp
leave
stos
subb
xor
and
jne
xorb
push
adc
xor
loope
push
addr16
mov
shrb
mov
faddl
push
mov
cs
shll
mov
cmp
in
out
and
sbb
add
lret
ss
mov
and
cmpsl
es
sub
mov
add
call
mov
lcall
cli
lock
add
add
xchg
test
call
lock
xor
cmpsb
push
ljmp
movsb
inc
mov
mov
sar
rcr
mov
inc
fwait
loopne
mov
into
aaa
out
jl
jecxz
mov
mov
push
ljmp
aas
repnz
clc
inc
out
fwait
and
xor
and
lahf
in
inc
add
arpl
sub
lea
mov
inc
xchg
lret
adc
rcr
mov
lock
dec
add
sub
cmp
cmp
lods
clc
out
daa
add
inc
loop
cld
sub
sub
xor
inc
dec
test
inc
push
sbb
out
mov
push
mov
div
dec
ror
sub
lret
push
jge
lcall
xor
pop
sub
repnz
jns
pop
xchg
push
fstl
dec
icebp
idivl
mov
pop
mov
xor
insb
movsl
add
mov
mov
mov
out
cmc
push
icebp
xchg
pop
adc
not
jno
jp
push
add
inc
hlt
js
arpl
mov
and
std
sbb
push
jp
or
clc
fsts
subl
cmpsl
fmuls
or
lods
xlat
push
std
jbe
stc
inc
pop
ljmp
inc
iret
outsl
es
or
aas
pop
inc
jp
test
push
xchg
sub
test
sub
cltd
fldl
mov
xchg
mov
sbb
sti
add
insl
pop
icebp
or
pop
sbb
or
xchg
ljmp
sub
icebp
push
enter
add
push
enter
jecxz
fiaddl
ljmp
mov
push
bound
test
stos
idiv
lock
mov
shrb
retw
or
rcll
jb
test
test
jmp
out
mov
dec
xchg
addr16
int
mov
rcrl
ss
inc
test
cmp
inc
mov
sbb
leave
xlat
jno
into
popa
pop
push
mov
mov
lcall
and
pushf
insl
xor
ret
mov
mov
mov
xor
popf
xor
and
cmp
mov
andl
ret
out
sbb
xor
cmp
sub
xchg
dec
xor
in
aas
lcall
mov
shlb
mov
sti
inc
sub
aaa
push
jmp
orb
push
bndstx
lret
lods
test
cmpsl
push
data16
jno
mov
mov
or
scas
mov
pop
and
fcoml
jae
notb
jge
push
iret
cmp
sbb
and
add
mov
and
lcall
and
push
pushf
js
jno
jno
mov
sub
fwait
jge
and
xchg
dec
and
cmpsl
cmp
ficoml
fiadds
dec
pop
adc
or
icebp
xchg
enter
adc
xor
loope
call
mov
mov
adc
push
jae
outsl
push
sbb
inc
cwtl
sub
lea
push
fildl
and
popa
ja
cmp
pop
mov
bound
popa
add
and
adc
sarl
push
xchg
mov
ss
pop
xchg
pop
inc
pop
in
xor
xchg
and
push
adc
fadd
xchg
dec
sbb
je
std
sti
mov
enter
xchg
jmp
mov
cmp
mov
adc
je
jecxz
iret
dec
stos
call
pop
leave
lahf
pop
mov
fists
shrb
adc
xchg
mov
mov
lds
imul
in
add
lcall
negb
idivb
push
hlt
fsts
sbb
mov
fcomi
xchg
and
xor
lods
popf
mov
jmp
cli
movsl
inc
cmp
jae
pop
mov
inc
mov
sub
filds
leave
inc
inc
imul
aam
pop
dec
adc
daa
sbb
dec
adc
cmp
scas
out
popa
movb
fdivr
testl
aad
mov
mov
test
stc
lock
pop
cld
cmpsb
jge
mov
jl
inc
cmp
inc
cli
dec
imul
mov
add
mov
cld
jnp
or
pop
adc
jge
mov
cmp
stos
das
ret
repz
inc
jo
sarl
add
imul
inc
lahf
mov
pop
lea
push
xchg
jb
popf
insb
ret
sahf
imul
imull
jne
insb
icebp
aam
sahf
mov
push
scas
out
jno
mov
in
lahf
fistl
repz
jne
int
shll
test
pop
adc
call
out
cmc
push
imulb
pop
ds
and
rcl
aaa
pop
xchg
aad
int
in
jge
aam
fcomip
jmp
roll
arpl
repnz
pop
jne
gs
jmp
jmp
mov
xor
push
pop
sbb
jl
push
cmp
and
imul
sbb
lock
xchg
ret
fiadds
stos
movsb
int
xchg
ja
cmpsb
pop
adc
adc
popa
stc
sbb
fildll
fisttpll
or
nop
dec
test
sub
imul
test
pop
in
xchg
into
mov
int
test
cmp
fs
in
dec
iret
cmp
pop
popf
and
enter
mov
inc
ror
xor
daa
mov
and
pop
inc
stc
cld
push
rorl
jmp
add
dec
sbb
fs
cmp
in
in
xor
loopne
stos
stos
pmullw
sahf
pushf
out
xchg
sub
fisubrs
jge
mov
int3
lods
pop
rolb
cmp
les
sar
popa
dec
xchg
pop
sub
mov
xchg
shrl
lds
adc
jns
adc
xchg
jnp
cmp
inc
and
in
aam
mov
fs
jecxz
lcall
data16
dec
sub
mov
push
arpl
inc
repz
daa
fstl
pop
push
pushf
mov
lock
and
xchg
push
sarl
push
pop
cmp
arpl
mov
aad
mov
inc
gs
out
dec
mov
pop
in
std
adc
jge
mov
hlt
mov
lahf
scas
adc
jl
add
jnp
fwait
push
and
mov
mov
nop
add
insl
jne
in
testb
shlb
pusha
nop
sub
sbb
jmp
sahf
jp
push
or
xchg
lret
adc
mov
pop
not
icebp
icebp
shll
loopne
sub
sbb
out
pop
cmp
hlt
sub
mov
or
jb
push
aas
into
test
adcl
scas
lods
ret
adc
cmp
cmpsl
pop
cmpb
dec
je
jne
inc
fists
lock
pop
sub
push
inc
push
push
push
inc
jnp
std
fmull
xchg
xchg
fistpl
loop
aad
jmp
add
addr16
push
cmp
xlat
push
push
push
enter
lcall
xchg
pop
and
mov
aam
cmc
sub
push
pop
in
aam
fistps
sub
push
inc
mov
bound
inc
lret
lods
push
sbb
pop
into
jns
pop
dec
xor
mov
popf
add
fsubs
mov
and
adcb
test
inc
fsubrs
scas
cmp
add
fstpl
movsl
xchg
imul
not
repz
lret
sub
aas
repz
and
popf
les
inc
jno
and
sbb
ja
insl
mov
jno
cmpsb
push
outsb
lods
mov
vmptrst
mov
jg
jmp
inc
test
adc
dec
in
scas
jle
shl
inc
cmp
cld
test
mov
lret
push
mov
dec
inc
inc
pop
arpl
xchg
pop
push
mov
push
lahf
or
pusha
inc
sbb
int
cmp
test
sub
or
dec
push
xchg
repz
test
xchg
leave
mov
aad
iret
dec
lods
inc
imul
rorb
push
mov
out
pop
and
mov
lock
in
aas
insl
xor
jle
and
shr
loope
mov
loope
xlat
mov
out
fdivl
cltd
jl
in
imul
mov
cmp
icebp
lods
icebp
pop
push
push
xchg
jo
sub
xor
mov
add
sub
fistpll
lret
bound
push
pop
fimull
jp
sub
mov
jmp
adc
dec
mov
sub
dec
paddd
push
xchg
fisttpl
cmp
jmp
ficoml
cmp
mov
test
leave
mov
add
jne
arpl
leave
loop
cmp
lret
mov
fadd
test
dec
inc
out
adc
gs
xor
dec
pop
mov
push
pusha
fdivl
into
aaa
pop
xor
lcall
pushf
jne
dec
xchg
dec
xchg
add
ja
mov
lods
mov
mov
sbb
sub
cmpl
sub
fs
out
push
sbb
jmp
push
push
lret
mov
push
pop
lods
int3
bound
lods
clc
add
xor
add
stos
mov
rol
jbe
xor
xchg
hlt
movsl
mov
out
cmpsl
push
xor
mov
and
xor
push
aad
xchg
lods
stos
sbbl
and
mov
or
testl
shr
pop
mov
mov
imulb
adc
fcomp
sbb
rcll
add
mov
hlt
or
rcll
in
push
dec
mov
fsubrl
xchg
std
mov
popl
add
popf
scas
dec
sbb
fimuls
es
ret
mov
add
cmc
cvtps2pi
dec
cmpsb
andl
mov
xchg
dec
es
jo
sub
lret
add
jl
fidivrs
loop
and
push
add
mov
lds
mov
ja
lret
dec
dec
cs
shll
cwtl
aad
js
push
mov
loopne
scas
mov
pushf
or
ret
or
ljmp
test
mov
jmp
adc
cmp
jbe
mov
std
int3
sub
push
xchg
fcmovnb
mov
fwait
leave
sub
xchg
and
xor
and
push
and
cmp
xchg
mov
inc
push
mov
std
push
inc
xchg
rolb
jae
loopne
push
jb,pn
lds
inc
call
in
sub
popa
sub
cmp
repz
jg
add
cs
mov
scas
push
xchg
mov
xor
xor
out
cmp
mov
aas
jbe
stc
sbb
scas
orb
adc
cs
sbb
lret
mov
jbe
sarl
sub
jle
xchg
inc
iret
dec
push
out
adc
sub
xor
pop
leave
sub
mov
pop
cmpsl
inc
adc
xchg
push
hlt
sarb
call
lahf
sahf
test
xor
imul
fdivs
popa
dec
rcrl
aas
or
push
dec
lahf
icebp
sti
sarb
scas
fidivrl
add
mov
ret
sub
cmpsb
sub
xor
fidivrs
lcall
push
push
and
gs
cmpsb
dec
es
xorl
iret
adc
xchg
in
subl
and
fstpl
pop
fnstenv
call
lock
jns
sub
fmul
adc
inc
ds
add
test
push
xor
ds
das
mov
or
les
mov
xor
mov
stos
mov
cltd
jecxz
xchg
dec
cmpsl
xor
daa
pop
aaa
out
push
jnp
test
fiadds
inc
nop
rol
sub
scas
int
and
and
mov
je
cli
pop
ljmp
lea
mov
push
dec
mov
or
stc
push
dec
and
sub
lcall
out
inc
add
cmc
sbb
fsub
sub
inc
in
in
sbb
ljmp
aad
out
stos
lret
cmp
fisubs
test
int3
adc
ja
sub
xor
sub
pop
jae
stos
lcall
cmp
add
aam
sbb
jae
and
sahf
imul
jae
popa
inc
clc
ret
test
pop
mov
adc
clc
push
ss
mov
dec
jl
mov
pop
inc
mov
popf
sub
cmp
push
sti
out
mov
jg
stos
sbb
cmpsl
jae
add
test
add
lss
dec
dec
lret
mov
les
mov
pop
mov
sbb
mov
fdiv
mov
sahf
adc
inc
adc
mov
jmp
bound
mov
xchg
call
add
jno
mov
inc
cs
fwait
shrb
pushf
fistps
add
pop
dec
int
mov
lds
mov
pop
sub
scas
adc
jp
add
sbb
jnp
jge
push
sbb
ja
mov
and
gs
pop
push
ret
sahf
push
xchg
mov
imul
ret
enterw
js
xor
xchg
rcll
push
test
jno
mov
inc
inc
and
xor
in
nop
sbbl
movsl
inc
xor
inc
sbb
mov
cltd
mov
gs
imul
jp
sbb
fbld
xlat
fdivrl
jb
lea
jno
gs
inc
cmp
stos
shll
mov
ret
push
test
mov
faddl
adc
push
and
shrl
jp
aad
pop
pop
enter
mov
rcrb
add
cmc
lds
jns
test
cmp
sub
and
adc
fdivr
into
and
lods
dec
mov
mov
lods
jg
insl
cmp
ret
jle
aad
mov
pop
xor
enter
xchg
push
inc
jns
out
fnsave
bound
xchg
mov
xchg
loope
pop
enter
pop
lret
fstpl
test
fiaddl
test
fistl
popf
js
cmc
lret
popa
je
in
jns
test
jne
or
push
or
ja
nop
rorl
repz
stos
xchg
mov
add
and
mov
scas
jmp
xchg
dec
loop
pop
inc
out
test
int
ja
jle
es
push
popf
add
add
rcll
mov
inc
lret
imul
rorb
jle
adcl
lock
and
cmp
jnp
mov
push
cltd
out
sbb
jp
or
cmp
mov
xor
out
cmc
sub
add
out
loopne
repz
jne
int3
in
int
xchg
testb
adc
stos
xlat
push
add
popa
daa
inc
sub
stc
adc
add
popf
call
push
inc
cmc
insl
pop
and
xchg
sahf
aad
and
daa
mov
mov
ss
pushf
xchg
push
add
push
outsb
inc
mov
pop
and
clc
insl
pop
mov
push
sti
popf
push
test
shrl
xchg
push
and
sahf
and
nop
stc
sarl
xchg
and
loope
jb
push
mov
cmpsb
shrl
dec
and
push
dec
enter
sbb
scas
pop
or
jns
mov
or
pop
and
push
pmullw
nop
push
xor
nop
arpl
push
push
xchg
xchg
in
xchg
in
popf
xor
lahf
push
call
gs
and
push
loop
jmp
and
add
sub
stos
call
aam
jmp
in
xchg
popa
pushl
cmpsl
and
pop
sbb
incl
push
enter
inc
and
out
mov
popa
xchg
and
pop
or
add
xchg
jnp
lahf
dec
or
adc
leave
inc
adc
push
lea
and
daa
roll
repnz
aas
ja
lea
sub
xor
subl
inc
ficomps
imul
cmp
and
gs
pop
int3
mov
pop
mov
xlat
sahf
rolb
repz
sub
lods
cmpsb
mov
dec
sub
or
rorb
adc
pop
lahf
mov
xchg
inc
adc
mov
push
push
xor
ret
out
inc
mov
dec
lcall
fwait
lds
imul
mull
lock
mov
test
xchg
mov
adc
cmc
jg
pop
xchg
sub
adc
inc
stos
sbb
cmpl
movsl
and
sbb
rclb
pop
sub
loop
enter
jmp
xorb
dec
mov
push
dec
jge
loop
subl
sar
mov
adc
xor
or
hlt
jno
lods
and
and
mov
add
add
adc
sub
adc
cmp
pop
shrl
xor
xrelease
jno
xor
push
stc
cmp
cltd
inc
addr16
jg
lock
movsl
jbe
inc
jne
or
jmp
or
mov
inc
push
xchg
aad
clc
push
adc
dec
jle
cli
push
dec
jb
xor
insb
imul
ds
push
out
adc
es
gs
pop
out
mov
out
cmp
sbb
leave
mov
jmp
dec
mov
loop
lret
scas
xchg
in
data16
popf
cmpsb
rolb
lcall
out
movsl
pop
std
rclb
in
mov
push
mov
ljmp
mov
xorl
aas
mov
jg
jnp
push
push
outsb
mov
adc
jo
adc
mov
inc
sbb
adc
dec
frstpm(287
cmp
test
cmp
sub
scas
arpl
jo
dec
mov
add
xchg
sub
into
sahf
mov
dec
ss
out
mov
pop
sub
fwait
mov
mov
es
jbe
in
loope
add
jbe
sahf
pop
jp
pop
mov
popf
sbb
push
in
push
call
mov
lds
jge
iret
aad
mov
inc
push
cli
fists
dec
hlt
xor
pop
add
lahf
and
dec
outsb
scas
inc
lods
in
adc
lock
sahf
dec
xor
sti
xor
rcrl
cs
push
lds
push
mov
bound
cmp
mov
jne
arpl
mov
mov
loop
sub
and
xchg
or
xchg
std
jne
sub
mov
pop
xchg
addb
cmp
push
outsl
mov
pop
cmc
xchg
imul
pop
push
xchg
mov
jp
daa
sbb
cmp
fnstsw
xchg
sbb
mov
inc
dec
fisttps
push
pop
xchg
inc
add
mov
imul
mov
pop
gs
out
inc
int3
mov
ljmp
push
xor
sahf
mov
ret
dec
xlat
push
xchg
xor
pop
pop
pinsrw
mov
pop
push
sbb
pop
movsb
pop
mov
mov
dec
nop
and
hlt
push
shrl
sub
jecxz
adc
gs
adc
xlat
inc
xor
ffreep
push
test
dec
test
call
insl
dec
xchg
push
mov
sub
xorb
aam
jp
adc
mov
scas
aam
adc
jno
rol
mov
aam
xchg
js
push
xchg
ret
pop
pushf
call
fdivrs
dec
and
jne
scas
testl
push
xchg
jecxz
faddl
adc
punpckhwd
adc
scas
icebp
sbb
push
jb
ss
jg
xchg
sub
aas
or
cli
mov
pop
dec
out
test
and
dec
mov
and
sub
imul
cmp
inc
push
arpl
mov
inc
in
rol
mov
cmp
cmp
repz
lahf
xchg
push
aam
test
dec
inc
dec
loop
xchg
out
std
int3
lret
pop
add
cld
cmp
mov
in
idiv
push
lahf
mov
movsl
gs
inc
xchg
pop
mov
jae
adc
jecxz
test
fld
xchg
cmp
mov
add
subl
push
add
push
int
dec
pop
mov
sbb
jae
in
pop
gs
push
xchg
jnp
cltd
icebp
in
bound
push
jns
jae
out
cwtl
mov
jmp
in
mov
loop
pop
mov
adc
test
and
push
inc
dec
fildl
leave
mov
jge
sbb
fstpl
pop
xlat
in
cmpsb
pop
push
adcl
xchg
inc
test
sbb
adc
cli
outsl
aad
mov
pop
mov
xor
inc
jmp
clc
mov
jmp
mov
xchg
leave
xlat
cltd
mov
pop
jge
ret
jmp
push
sarb
out
push
lahf
push
sarb
xor
outsl
ret
sub
mov
orl
adc
in
mov
xor
jne
and
pop
xchg
dec
xor
mov
fwait
stos
test
mov
in
pop
sub
mov
cld
sbb
stc
aas
jecxz
and
sub
push
push
lock
xchg
push
out
bound
xor
fisttpll
adc
push
daa
and
cltd
push
jno
mov
jg
faddp
rorl
out
jge
adc
jecxz
sti
test
rcl
filds
and
fcompl
jg
xor
and
sbb
add
pop
add
sbb
dec
inc
push
and
pop
xchg
std
inc
push
xchg
add
out
sbb
ljmp
xchg
mov
and
push
adc
jo
pop
xor
xchg
mov
fsts
push
test
pop
in
test
xor
push
test
mov
xorl
dec
fstl
jo
add
cmp
push
movsb
xchg
addr16
or
lret
cs
mov
test
push
sub
test
shrl
mov
and
fstl
cltd
nop
nop
ud1
inc
shr
cmpl
mov
fsubrs
adc
dec
gs
adc
add
or
and
adc
lea
cmp
mov
std
mov
sarl
sub
imul
push
shlb
aaa
dec
inc
scas
cmp
aas
jge
and
cld
scas
sbb
adcl
stos
icebp
jp
mov
jns
pop
lea
inc
mov
mov
xchg
fucomp
inc
scas
adc
jno
fldcw
ret
sbb
mov
ret
aam
pop
arpl
fldenv
add
push
add
insb
mov
push
cli
gs
mov
jno
and
sbb
call
insl
dec
dec
dec
xchg
lock
xchg
sub
inc
cwtl
or
out
rcrb
xor
std
stc
or
loope
xlat
lret
adc
jno
cmp
stc
int
add
in
pop
fisubl
mov
xchg
xchg
sbb
mov
loopne
leave
clc
popf
testl
std
add
frstor
and
fwait
or
les
dec
fs
movsl
addb
sub
nop
add
test
repz
push
dec
pop
cmpsl
cli
add
mov
adc
mov
mov
lret
mov
mov
xor
sub
lcall
mov
cld
pop
cmp
stc
adc
fldcw
imul
test
fisubrs
movsb
scas
fs
out
mov
fisttps
cmp
dec
ja
mov
inc
lret
mov
xchg
jns
test
inc
jb
aam
sub
push
bound
icebp
push
pop
sub
jae
subl
add
xorl
stos
aam
iret
gs
fucomi
inc
adc
xorl
jmpw
test
popa
mov
aaa
imul
addr16
testl
stos
inc
cmpsl
pop
std
jo
lret
mov
cmp
sub
mov
xchg
in
push
pop
insb
push
push
sbb
repz
mov
pop
cmp
pushf
and
mov
sub
fbstp
push
xor
in
mov
jo
push
rorb
lret
gs
rcrb
xchg
xchg
mov
test
jnp
into
dec
rclb
popf
xchg
stos
mov
pop
rorl
fsts
and
inc
hlt
cmp
ljmp
rcl
fldt
inc
xor
sub
adc
arpl
dec
push
jmp
int
faddl
movsl
adc
pop
out
pop
shr
dec
mov
push
fadd
pop
jb
in
jle
push
jno
icebp
sub
rorb
aad
dec
sbb
mov
clc
jb
adc
scas
pop
cmpsl
and
push
sub
pop
dec
inc
xchg
pusha
jmp
stc
sysret
inc
rorb
xchg
rcrl
js
rorl
pop
data16
out
in
leave
stos
jl
pop
pop
dec
inc
mov
aad
rcll
jnp
imul
icebp
jae
xchg
xchg
and
sti
push
dec
sarl
cmpsb
cmpl
mov
divb
or
dec
add
mov
insb
mov
jge
nop
shlb
iret
mov
arpl
mov
mov
push
mov
outsl
sbb
mov
mov
push
and
negb
rcrl
mov
in
sahf
les
bound
arpl
nop
xchg
xchg
sub
lods
ds
xchg
divb
jno
ja
push
add
inc
jae
pop
mov
jo
adc
nop
and
inc
fsubrs
bswap
ljmp
mov
adc
inc
imul
adc
push
xor
out
std
seto
sub
xchg
inc
add
pop
jb
imul
adc
mov
call
xchg
aaa
add
cld
and
test
sub
or
mov
pusha
xor
adc
sbb
movsb
nop
movsb
add
jg
cmpsl
stos
adc
sbb
push
aas
in
push
hlt
lcall
xchg
pop
leave
dec
or
int
add
enter
xlat
xor
jl
insb
mov
mov
mov
jns
lds
mov
adc
ret
xor
mov
bound
pop
pop
push
mov
and
xchg
pop
push
inc
sbb
xchg
inc
inc
rcrl
test
outsb
test
pop
enter
sub
push
popa
sbb
pop
lret
lds
mov
scas
andb
data16
mov
dec
cmc
mov
mov
mov
mov
test
popf
and
jns
test
mov
das
mov
pop
and
movsl
pop
inc
adc
nop
mov
rorl
lret
jns
jmp
inc
sub
pop
imul
neg
sub
int3
xchg
test
rcrb
aam
call
lahf
dec
push
int3
aaa
ss
cmpsb
sti
adc
outsl
push
dec
ret
in
je
popa
ds
jo
jae
pop
jns
roll
and
hlt
fcmovnbe
sub
insl
sahf
push
jbe
or
sbb
shlb
out
ret
inc
insb
testl
mov
dec
pop
data16
aas
ja
rolb
nop
fmul
fwait
push
call
inc
les
fisubrs
sbb
pusha
mov
xchg
push
add
mov
stos
cmp
jo
mov
pushf
push
pop
pop
xchg
sbb
leave
add
push
pop
mov
imul
mov
mov
mov
out
icebp
add
push
inc
cmp
or
add
int
das
pop
xor
movsb
sarl
stos
repnz
mov
or
jae
xchg
insb
sbbb
sbb
test
xchg
push
dec
popa
into
dec
in
sub
adc
mov
icebp
leave
cmp
push
rclb
arpl
xor
shrb
sub
xchg
push
sarb
test
sbb
inc
mov
sub
sti
and
mov
mov
sub
cmp
sbb
pop
push
pushf
pop
ja
sub
arpl
mov
cmp
dec
lcall
cmp
xchg
add
fstpt
push
gs
jnp
push
stos
lret
frstor
xchg
in
jmp
inc
xor
sbb
mov
lret
loop
pop
fists
inc
jbe
int3
sbb
xchg
mov
and
jno
in
outsl
rclb
imul
shl
fs
out
sub
xchg
pop
decl
loopne
sbb
popf
jae
leave
nop
jo
dec
xor
push
test
add
mov
lea
dec
and
jns
xchg
mov
aas
push
mov
jmp
xor
insb
mov
popf
push
pop
mov
push
movsb
jl
std
cmpsl
nop
inc
inc
jns
jmp
and
inc
jnp
push
in
insb
cmpb
cmpsb
mov
sbb
imul
imul
in
lock
and
popa
mov
xchg
outsb
into
pop
sub
mov
cmp
outsl
inc
or
xchg
in
or
push
or
fwait
out
mov
test
lods
xor
and
dec
test
iret
loop
fcmovb
stos
lds
imul
mov
fsubrs
divb
add
xor
stos
mov
jnp
sbb
and
sbb
testb
add
mov
rclb
xlat
sub
and
fistps
mov
push
push
xchg
adc
cld
add
xchg
jbe
and
mov
clc
inc
mov
sbb
lcall
push
ds
push
pop
push
mov
aaa
jle
lcall
adc
xor
push
jbe
xor
es
jmp
inc
mov
mov
inc
je
or
adc
add
sub
xchg
shrl
popa
cmp
lea
push
pop
dec
out
add
and
aas
mov
rorl
inc
inc
adc
sahf
je
inc
ds
arpl
cwtl
xchg
sbb
mov
fcompl
mov
out
adc
pop
xchg
jmp
rcr
stc
xor
orl
inc
outsl
push
fwait
call
xchg
add
pushf
jns
pop
std
negb
ljmp
fcom
jg
xchg
xor
int
shlb
push
sub
xchg
adc
ret
xchg
sbb
aad
movsl
jns
mov
cmc
dec
xor
fwait
sub
leave
inc
sbb
out
cvtps2pi
adc
add
pop
pop
xor
or
movsb
add
je
push
inc
adc
inc
inc
cld
icebp
lods
test
repz
pushf
inc
sbb
pop
lock
out
clc
test
jl
ficoms
pop
es
in
push
push
xchg
cmp
icebp
sub
dec
mov
or
or
stos
mov
jno
xor
jns
jge
outsl
dec
call
cmp
loopne
rcll
push
faddl
adc
fxam
ljmp
jno
mov
ljmp
add
jbe
push
movsl
push
dec
fistps
xor
movsl
mov
push
das
leave
cwtl
sbb
pand
sbb
sbbl
scas
repz
int3
xchg
add
xlat
adc
jl
or
mov
jns
roll
loopne
push
mov
xchg
stos
and
xchg
mov
jmp
inc
movsl
xorb
mov
pop
lea
mov
sub
push
add
mov
in
jbe
data16
fcomp
jg
cmpsb
add
into
mov
movsb
pop
push
out
mov
ret
cmp
repz
jmp
stos
inc
cmp
xchg
mov
push
shlb
or
sti
push
add
test
fcomps
movsl
test
push
add
mov
loope
les
lret
jnp
mov
add
fdiv
lods
mov
add
sub
insb
push
into
lret
cs
movsl
pop
jecxz
adc
push
mov
jne
jno
sbb
cmpsb
out
iret
or
subb
xchg
xor
clc
pop
aaa
popf
push
aad
rol
and
cmp
mov
or
ficompl
jl
movsl
test
and
xlat
ds
fisttpll
loop
cli
out
jae
xor
or
add
out
rorl
jno
add
lahf
or
push
mov
mov
sub
cltd
les
cli
ljmp
pop
movsl
into
push
and
xchg
xbegin
in
aam
arpl
arpl
or
and
adc
sbb
add
cmp
or
mov
incl
mov
jmp
subl
dec
sub
fidivl
dec
fldenv
jmp
adc
loopne
outsl
mov
mov
sbb
xor
mov
push
scas
pop
fsts
mov
jl
iret
mov
jle
push
movsb
lods
cld
xchg
into
fldl
xchg
movsl
shr
jne
outsb
push
imul
icebp
pop
lds
jbe
xchg
test
lods
mov
pop
sbb
faddl
aam
jecxz
and
rolb
int3
neg
push
push
dec
decb
aad
pop
cmpsl
js
dec
sub
fdivrl
fs
int3
lods
shrb
inc
cwtl
movsl
in
fmulp
les
mov
jnp
mov
cmp
xchg
jl
sub
fstpt
sahf
inc
repnz
icebp
pop
pop
and
cld
pop
movl
lods
dec
pop
push
add
shl
xchg
fimull
aam
mov
jne
movsl
dec
or
sub
mov
aas
mov
loopne
jle
mov
fcomps
xlat
fstp
inc
push
rcrb
xchg
inc
push
scas
es
jo
push
pop
mov
xor
sahf
push
test
xor
nop
push
repz
repz
xchg
xchg
mov
dec
mov
fisubrs
mov
enter
aas
xor
rorb
inc
xlat
pop
adc
repz
sub
ss
push
lahf
sti
incb
fcomip
jne
loope
mov
xchg
or
pushf
or
nop
cli
push
cld
mov
inc
push
shrb
popf
mov
outsl
pop
in
nop
divl
into
fucomi
cld
bound
rcl
push
je
in
sub
mov
sbb
cmpl
fs
daa
push
outsb
mov
add
push
mov
aas
mov
jo
repnz
js
aam
clc
xor
mov
pop
jae
mov
arpl
enter
sbb
lock
jp
stos
push
inc
aam
mov
sti
push
push
mov
ficompl
nop
pop
test
movsl
ficomps
sti
pop
into
push
mov
sbb
lods
jo
adc
mov
int3
pop
xor
or
mov
adc
les
sub
push
add
push
std
sub
pop
dec
push
in
mov
sbb
sub
cmp
enter
and
xor
les
xchg
push
mov
sbb
fmuls
sub
scas
stos
arpl
xchg
out
and
fwait
dec
xchg
or
lret
mov
mull
lods
pop
aas
and
push
vpaddq
inc
jnp
xor
push
enter
cmc
push
push
mov
test
loop
arpl
adc
pop
nop
pop
xchg
jo
mov
jmp
push
imul
cmp
iret
jno
xchg
push
int
fdivr
cwtl
inc
das
mov
gs
mov
pop
xchg
pop
and
addr16
imul
shrl
mov
xchg
nop
cmp
cmp
lret
push
pop
and
adc
and
xchg
inc
orb
in
jne
popf
cmovbe
inc
xchg
jmp
jge
testb
ret
inc
inc
les
insb
pop
cmpb
loopne
mov
test
or
call
or
pop
ret
in
jnp
pop
xchg
lock
xlat
xor
les
push
dec
test
pop
repnz
stos
nop
leave
mov
mulb
lahf
aad
and
mov
jo
pop
out
stc
pop
and
rcll
jecxz
adc
lahf
lcall
call
jecxz
adc
and
mov
scas
jo
ja
xchg
xor
cmpsb
inc
jmp
aad
cmp
daa
push
inc
cli
aad
xchg
mov
lahf
insb
jp
stos
out
xor
repz
rcrl
outsl
aam
and
and
insl
cs
divb
xchg
bnd
sub
aaa
xor
mul
xchg
inc
cld
or
jle
insl
push
xchg
xor
sar
enter
cmpsl
fdivrl
in
int3
icebp
notl
sub
or
push
sub
dec
ss
mov
jae
add
push
or
sbb
hlt
cmp
stc
or
fadds
xrelease
leave
jg
daa
outsb
gs
negl
xor
push
sarb
mov
lcall
jno
xchg
pop
sub
stc
adc
jae
pop
and
imul
inc
cli
cmp
ffree
movsb
lahf
clc
dec
jp
movsl
es
lahf
mov
outsb
inc
mov
cmp
push
cmp
push
xor
sub
or
xor
sbb
push
in
jne
mov
jecxz
std
mov
pop
aad
jb
adc
adc
hlt
jne
in
add
xchg
popa
stos
inc
and
lea
mov
sub
adc
and
jle
loop
dec
iret
imul
repnz
adcb
icebp
dec
inc
pop
xor
sub
jne
arpl
stos
lock
imul
sub
das
adc
sub
mov
dec
add
xchg
pop
push
and
addb
sub
xchg
adc
and
mov
pop
inc
decl
push
dec
mov
test
loop
lea
mov
jno
cmpsl
pusha
mov
lret
das
push
mov
dec
inc
rol
xorb
sub
fcomp
in
push
adcb
sub
leave
jl
je
sbb
xor
mov
push
cld
push
das
and
adc
jg
loopne
and
adc
jecxz
pop
sbb
cld
cmp
xor
andl
out
and
inc
jg
adc
sti
xchg
addr16
mov
push
lret
inc
cmpsb
sbb
add
inc
xchg
sti
add
loopne
shlb
enter
setno
lds
push
iret
icebp
push
daa
sub
int
lods
jp
dec
xchg
mov
fisttpl
push
pop
jge
pop
imul
or
aaa
aas
or
call
divl
popl
bswap
shr
pop
mov
aad
movsb
add
jmp
sahf
dec
inc
adc
sbb
std
aam
push
mov
inc
fdivl
mov
inc
mov
cmp
ljmp
xchg
inc
in
cmpsb
popl
imull
mov
inc
or
cvtps2pd
xor
loop
pop
fistpll
adc
adc
das
sbb
mov
dec
mov
mov
xchg
xor
push
mov
or
cmc
sub
add
xchg
and
scas
and
sbb
sbb
loop
mov
repnz
push
icebp
add
es
and
repz
mov
jb
lret
lret
pop
mov
pusha
aaa
out
outsb
es
dec
mul
lret
test
and
lock
xchg
xor
ljmp
fisubs
push
sbb
adc
or
sub
ret
or
shll
pop
jo
inc
jae
mov
imul
and
xor
roll
shlb
ret
push
aad
mov
sbb
or
jae
mov
inc
and
xchg
scas
fidivrs
mov
imul
pop
movsb
imul
mov
jp
test
sar
lea
add
inc
xchg
add
jp
jns
jle
pop
push
push
xchg
sti
or
iret
mov
in
jge
sbb
dec
leave
mov
xchg
imul
pop
cmp
ficoms
rorl
pop
les
mov
adc
jmp
inc
mov
or
sub
inc
aas
xchg
daa
mov
or
lods
aas
mov
cmpsl
xchg
fwait
jecxz
fcoms
cmp
push
and
sysret
scas
imul
lods
mov
push
dec
fstl
pop
jbe
scas
popa
out
mov
pop
cmp
or
mov
scas
inc
xor
and
aas
int3
sub
and
cld
mov
xor
cmc
data16
and
push
xchg
jmp
adc
lret
shl
push
js
sbb
or
ss
jmp
jle
rorb
xlat
outsb
xor
dec
and
add
mov
mov
jno
or
jp
outsl
jo
cwtl
and
add
sbb
xor
jno
enter
push
cwtl
lods
call
lods
in
mov
inc
xchg
xchg
out
jmp
out
add
fsubs
inc
lret
imul
cmp
shrl
movsb
jmp
or
testl
inc
mov
repnz
dec
repnz
test
pop
cli
inc
in
sub
xchg
leave
sub
into
in
insb
xchg
inc
int
xchg
lds
mov
xor
push
out
movsl
inc
mov
mulb
jl
push
sub
lahf
cmp
in
push
js
daa
daa
mov
ret
jb
jmp
mov
dec
fidivrl
push
pop
or
shr
testb
cli
lahf
in
lock
stos
sti
xor
sub
ret
pop
scas
rol
in
test
mov
les
xchg
jp
or
loop
gs
sti
stos
test
int
hlt
jle
push
sub
sbb
push
mov
jno
rcll
jp
mov
push
dec
clc
dec
sarl
xchg
insl
adc
jnp
push
mov
lret
mov
or
rolb
jae
ret
xchg
jnp
mov
insb
std
arpl
jae
inc
xlat
ret
out
call
jp
loopne
adc
sar
mov
jb
leave
cmpsl
jns
lds
test
xor
test
fdivrs
ss
cmp
xor
xchg
pop
pop
popf
jbe
enter
add
es
cmp
dec
jp
int
jp
dec
cmpsb
sarb
in
fmuls
pop
sub
sbb
xchg
lret
andl
lret
or
sbb
je
dec
pop
insb
cli
inc
sbb
and
call
cli
mov
add
es
inc
xchg
andl
mov
inc
ret
ljmp
stos
jo
or
add
or
out
pop
mov
fcomps
cmp
xchg
outsl
outsl
cltd
xor
push
pop
adc
mov
fstpl
repz
xorb
shlw
lock
out
adcb
bound
int
jo
and
and
push
mov
je
out
dec
push
xorb
mov
out
pop
cmc
mov
cltd
enter
push
or
incl
popf
cltd
clc
aas
sbb
mov
mov
ss
pop
mov
dec
jecxz
push
movsl
mov
fwait
and
stos
jmp
fsubs
xor
lcall
mov
jnp
jb
xor
scas
hlt
sar
mov
imul
mov
mov
call
dec
das
bound
lods
xchg
repnz
jno
jae
fimuls
add
pop
jno
pop
push
push
cmc
pop
pop
push
push
sahf
ffreep
outsl
cmp
jge
add
cmp
imul
aam
mov
imul
mov
jge
loop
xor
in
add
push
adc
enter
icebp
int
hlt
sub
sub
stos
inc
jo
rcrl
cli
inc
fadds
adc
sub
inc
mov
sub
mulps
push
add
imul
imulb
stos
dec
jg
lcall
fs
and
add
mov
xchg
and
or
inc
push
dec
push
mov
cmp
pop
inc
lods
mov
ds
cs
cmp
mov
mov
movsb
and
jle
lock
mov
loope
sti
sub
lds
shlb
mov
adc
inc
mov
jno
and
loopne
push
or
add
mov
jno
out
dec
imul
cmp
adcl
adc
push
clc
outsl
fisubl
inc
adc
ret
cli
dec
push
movsl
jg
rclb
xchg
cwtl
pop
out
push
std
insl
jo
add
adc
pushf
xchg
dec
mov
repz
jl
dec
pop
lcall
xor
add
push
repz
or
xchg
dec
push
shll
or
xor
aaa
sub
cmp
movsl
enter
aaa
inc
pop
inc
dec
or
movsb
xchg
jecxz
add
xor
xchg
popf
add
test
pop
movsl
xlat
arpl
out
adc
outsl
aad
xor
jb
je
fwait
imul
clc
pop
lock
leave
and
lods
cmp
fsqrt
loopne
mov
jns
mov
divl
jl
dec
test
push
mov
outsl
aaa
sar
imul
in
xlat
ljmp
pusha
in
push
leave
stos
jae
jmp
or
or
fistl
loope
add
jl
out
in
cmp
jne
stc
xchg
nop
sub
roll
push
daa
aad
and
clc
cmp
pcmpgtd
pop
lea
sub
and
pop
lock
sbb
mov
sub
mov
test
clc
adc
mov
cmpsl
pop
ss
inc
dec
mov
rorb
lods
push
dec
test
jl
and
pop
inc
and
repnz
aam
sub
ljmp
sti
pop
ja
movl
adc
mov
testl
rcll
addl
mov
fiadds
ret
iret
xchg
pop
cmp
lcall
aas
vphadddq
aam
lret
lock
pop
test
dec
cld
xchg
cli
mov
popf
xchg
mov
neg
mov
push
xchg
add
cld
add
popa
cmp
pop
sarb
imul
lret
push
ljmp
inc
rorb
xchg
sahf
in
sbb
sub
pusha
mov
jle
in
mov
cmc
shrl
shrl
jecxz
ss
aam
shl
fisubs
leave
fwait
addl
sub
adc
popf
lcall
add
xlat
loop
arpl
sub
dec
or
jne
jb
inc
cmpsb
jmp
mov
push
jp
test
jnp
dec
rclb
xchg
loopne
lods
add
popf
popf
outsb
xor
pop
dec
mov
jmp
movlps
outsb
jp
sti
fdivr
xchg
cmpsb
lcall
xchg
arpl
push
mov
pop
fisttpll
inc
ss
adc
imul
sbbb
repnz
test
mov
mov
fwait
pop
ss
dec
cli
pcmpgtw
mov
cmp
jmp
mov
shlb
push
enter
rcrl
dec
insl
incb
xchg
xchg
inc
mov
stc
push
addr16
rorl
out
dec
adc
add
stc
je
push
adc
push
clc
push
test
inc
movsb
add
je
push
adc
pop
insb
movsb
xchg
add
xchg
dec
sub
mov
inc
fidivrl
sbb
popf
and
pusha
movsb
jbe
and
push
xor
int3
push
sub
sub
adc
ficoms
stos
jno
pop
icebp
gs
out
xlat
dec
push
adc
lahf
xchg
loope
cmp
mov
pop
xchg
dec
push
jno
imul
pop
hlt
inc
iret
das
dec
flds
shll
cmpsl
in
push
enter
or
in
mov
int
aaa
inc
lea
or
xorb
clc
stos
add
out
cmp
mov
popa
imul
pop
push
orb
lods
lods
pop
aam
mov
jno
test
adc
adc
jno
jo
nop
loopne
lcall
nop
xchg
or
fcmovb
ds
or
pop
pop
cmc
sbb
push
mov
push
lret
sub
imul
pop
or
xor
daa
sbb
aam
cmpsb
pop
icebp
shlb
sub
mov
cmpb
or
sub
cmp
mov
lea
test
ret
jl
jecxz
xchg
repnz
je
sub
mov
sbb
jae
xor
hlt
xchg
mov
dec
xorl
call
aad
imulb
cli
nop
adcb
pop
mov
stos
inc
push
dec
out
push
std
mov
xor
dec
mov
pop
test
lock
mov
ret
pop
mov
outsl
push
dec
daa
mov
lret
lret
outsb
int3
daa
mov
add
cwtl
das
or
test
adc
jge
je
sbb
mov
das
mov
xchg
rcl
push
pushf
adc
clc
in
xchg
jae
loop
jmp
dec
xchg
rorl
pop
ljmp
mov
sub
push
push
xchg
scas
sub
out
and
pop
cmp
push
out
cmc
pop
inc
popa
sub
xchg
mov
lods
inc
and
test
sbb
jb
push
jae
out
rol
sbb
lock
rcr
mov
out
adc
inc
fwait
dec
mov
iret
divb
dec
daa
out
mov
sub
test
xor
aaa
mov
fcompl
xlat
idivb
negl
inc
rolb
xchg
in
add
and
mov
sbb
sub
sbb
loope
aas
outsl
adc
nop
ss
xchg
dec
cli
mov
sub
adcl
and
and
gs
pop
dec
mov
fcomip
sub
pop
sarb
push
ss
ret
daa
mov
lods
xchg
mov
fs
sti
cmp
adc
bound
inc
mov
roll
fnstcw
push
sarb
sarb
mov
cwtl
dec
js
decb
ret
xor
out
and
dec
pop
adc
sarb
lret
or
cmp
shrb
sbb
std
fcomps
adc
cmp
cwtl
jle
or
mov
iret
mov
push
add
mov
push
ret
jb
sbb
or
popa
cmp
js
jge
test
insb
inc
push
push
inc
adc
and
and
aad
outsl
xor
xchg
roll
imull
push
cmpsb
daa
imul
fistps
imulb
lret
inc
cwtl
sbb
cmp
shr
or
push
cmp
push
bound
and
mov
popa
cmpsb
sbbl
mov
mov
push
add
aas
neg
or
mov
pushf
cmpsl
mov
push
stos
jmp
sub
add
dec
test
inc
push
jno
xchg
inc
pop
dec
sub
push
jle
mov
cmpsb
jp
icebp
lods
mov
inc
mov
fildll
and
dec
jle
jo
push
ficompl
pop
jbe
clc
sub
add
insb
lret
push
enter
sbb
popf
cmpb
imul
sbbb
fbld
stc
inc
adc
and
test
shrb
xorl
sarb
jge
stos
insl
push
fadd
mov
cli
sbb
call
sbb
call
jns
movl
jecxz
pop
arpl
fs
xchg
enter
pop
ret
jp
cs
inc
ss
xor
xor
mov
aaa
mov
jae
pop
enter
push
jbe
daa
enter
or
cs
dec
es
add
ds
jns
fwait
inc
mov
stos
xor
xor
add
aas
aas
sbb
rolb
test
jge
cmpsb
xchg
push
sbb
aad
xchg
cltd
test
or
aas
sub
popa
xor
in
push
ljmp
in
adc
dec
xchg
xor
call
test
pop
or
mov
add
incb
daa
sbb
push
lahf
pop
cmpb
rcll
pop
xchg
adc
hlt
mov
test
jnp
mov
out
test
les
mov
mov
fcoml
xchg
loopne
insb
add
and
dec
dec
loop
sbb
out
xor
in
popa
pop
in
ss
ret
mov
mov
js
add
decl
inc
xchg
jno
add
scas
xchg
mov
jecxz
jg
fadds
and
fs
in
push
mov
sub
aam
cltd
bound
jp
ja
clc
adc
ret
jmp
lea
es
mov
inc
pop
jp
orl
outsb
fildll
lret
mov
sub
notb
fdivrs
xchg
inc
aad
hlt
and
lods
shll
test
mov
ja
or
stos
clc
adc
aam
dec
popa
push
insl
mov
jle
lds
repnz
cmp
cvtps2pd
inc
dec
adc
inc
jg
inc
pop
mov
jle
mov
stc
dec
mov
mov
iret
pushf
sahf
ja
scas
mov
push
cmp
jbe
jle
push
leave
push
mov
adc
test
icebp
enter
mov
adc
fstl
sbb
sahf
push
dec
ja
lret
sti
imul
or
imul
adc
adc
or
mov
push
bound
loopne
add
clc
mov
scas
stos
rcll
in
fs
pop
push
out
xchg
jp
movsl
inc
enter
mov
dec
std
iret
xor
incl
leave
loop
pop
mov
out
cmp
mov
xchg
mov
lock
mov
push
in
dec
call
mov
mov
jnp
add
gs
aad
sub
lock
mov
stos
push
push
add
enter
mov
es
pop
push
pop
outsb
test
mov
das
loope
fucomi
popf
jp
call
roll
fwait
hlt
outsb
in
ss
lea
daa
mov
imul
inc
pop
xchg
lock
push
pop
int
push
int
clc
push
jne
addr16
movl
xor
lcall
lods
jo
mov
or
dec
dec
movl
inc
mov
aaa
mov
shr
cli
pop
mov
adc
leave
pop
lahf
inc
ljmp
mov
cmp
mov
dec
lods
outsl
addl
mov
orb
pop
mov
xor
roll
push
ss
push
xchg
js
dec
or
sbb
lahf
cmc
adc
push
es
pop
push
inc
ffreep
sti
push
and
ljmp
in
pop
xchg
ret
jmp
adc
inc
daa
loope
mov
push
es
ja
adc
inc
ds
jno
mov
add
mov
pop
stos
push
pop
adc
aas
xlat
push
jne
pop
jge
repnz
adc
jae
jne
adc
js
sub
fiaddl
fstp
pop
xchg
out
leave
jns
pop
movsl
insb
jb
jl
icebp
popf
cmp
or
fbld
add
mov
fsts
ret
int3
jg
or
push
mov
lret
arpl
cmp
jp
imull
and
sbb
sbb
xchg
popf
dec
and
test
popa
shll
adc
les
in
lcall
adc
xchg
push
inc
cs
mov
cmp
fstpt
int
addr16
imul
adc
jno
jno
es
clc
das
stos
out
call
sbb
in
in
aaa
mov
or
jg
stc
jo
lds
popa
imul
mov
ss
imul
test
clc
mov
mov
popa
sub
aam
ror
js
loopne
out
adc
pusha
sub
jb
movsl
push
inc
add
mov
push
fnstenv
pop
mov
das
out
cwtl
repz
sbb
test
lods
scas
adc
dec
mov
mov
xchg
das
pop
inc
dec
xor
sahf
xor
leave
mov
nop
pop
ljmp
cli
adc
sub
adc
lret
movsl
and
das
xchg
imul
out
push
test
sti
xor
push
xchg
cmpsb
dec
test
xchg
movsb
out
ja
scas
add
pop
out
and
clc
scas
daa
inc
and
xchg
loopne
sbb
test
adc
movntq
out
push
in
sarl
pop
jae
adcb
and
or
dec
lock
dec
lret
dec
mov
sub
dec
xor
inc
div
mov
insl
bound
mov
inc
in
dec
loope
andl
in
inc
in
out
mov
jne
stos
sbb
inc
ja
pop
bound
dec
pop
jge
cmp
js
insb
shrl
dec
xchg
or
movsb
cli
pop
inc
addb
sbb
fdivrs
and
fldt
stos
out
jmp
cmp
in
and
dec
push
lods
dec
pop
and
dec
xchg
cmpsb
push
sub
aaa
cld
aam
in
xor
push
or
ret
push
pusha
in
pop
std
cwtl
lret
in
out
mov
jle
lahf
push
dec
dec
out
lock
std
push
mov
into
outsl
inc
lret
pop
xor
lret
ficompl
cmpsl
inc
push
sub
imul
test
inc
inc
cli
lea
xchg
jp
loopne
xor
adc
sbb
jle
stos
cli
test
pop
cmpsb
adc
pop
mov
xchg
and
orl
xlat
and
dec
mov
mov
jne
cmpsb
add
test
adc
rolb
jo
adc
cs
add
jg
sub
imul
mov
das
mov
xchg
sbbl
sbb
cmp
scas
jge
xor
push
mov
dec
hlt
ror
push
pop
movsl
xor
popf
sarl
mov
arpl
mov
pushf
jno
or
jge
jl
push
scas
jae
pop
int
mov
inc
in
lds
sub
rol
or
pmaxsw
ret
xchg
sbb
pop
shrb
outsl
in
cmp
rcll
mov
push
jecxz
cmp
popf
ret
imul
adc
or
sbb
cmp
pop
es
inc
mov
inc
mov
call
pushf
mov
mov
add
lahf
rcrl
push
and
aad
sbb
pop
pop
xchg
sbb
mov
pushf
adc
jae
das
lods
mov
inc
adc
ret
sub
jae
cmp
cwtl
pop
orb
cld
pop
cwtl
xchg
fists
aam
dec
popa
jbe
jb
push
cmp
jg
loope
sub
std
imul
pop
jl
push
imul
test
xor
push
divb
dec
gs
inc
xchg
mov
sub
inc
xchg
shll
sub
dec
pop
out
sbb
cmp
and
jbe
xchg
add
push
pop
adc
sbb
sbb
scas
orl
addl
les
sub
xor
add
iret
inc
cli
mov
movsl
shll
addr16
pop
stos
add
mov
sbb
jno
lock
rcrl
scas
movsb
add
shll
icebp
stos
inc
sar
aam
pop
ret
fidivrs
test
mov
cli
dec
cmpsl
mov
sub
test
lds
fistpl
sub
pop
and
test
out
shll
sbb
push
loop
jne
xchg
pop
dec
mul
jb
sub
dec
jge
mov
cwtl
pop
repz
jno
jl
push
je
push
sbb
sti
xchg
xor
roll
das
pop
xchg
pop
mov
jo
mov
jg
xor
shll
cmp
adc
cli
outsl
pop
out
iret
stc
sbb
repz
shl
and
xchg
aam
inc
jmp
push
or
mov
pusha
add
idivb
fsubs
mov
xchg
cmp
jbe
and
adc
addr16
jne
stos
jmp
pushf
gs
mov
insb
xchg
xor
push
cmp
cltd
xor
and
rcll
pcmpeqd
mov
jns
aad
icebp
adc
outsl
xchg
inc
int
test
repz
test
and
or
mulb
rorl
and
out
mov
shll
idivb
adc
pop
mov
pushf
rorl
sub
mov
popa
ret
out
pop
mov
push
cld
pushf
cmp
cmp
dec
movl
push
aad
xchg
mov
pop
inc
es
cmp
adc
cmp
sub
out
mov
and
inc
inc
add
xchg
inc
mov
xchg
mov
subl
xor
cli
or
repnz
and
push
icebp
dec
jne
or
sbb
arpl
mov
jle
push
negb
pop
es
adc
jno
stc
lret
sbb
cltd
jne
insb
mov
lret
shll
add
in
lock
xchg
jns
add
and
mov
fbstp
leave
pop
xchg
out
xor
xor
dec
push
xchg
dec
stc
in
call
inc
add
inc
fisubrl
mov
xlat
inc
pop
xlat
inc
cli
fisubrs
sbb
aam
idivl
push
iret
cli
pop
mov
and
imul
mov
pop
icebp
mov
add
inc
or
dec
pop
mov
les
dec
pop
dec
dec
fstpl
das
mov
ffree
jle
lds
lea
fs
sahf
cmp
adcb
leave
aam
rcll
rcrl
or
or
push
lock
leave
push
mov
xor
mov
fwait
jno
dec
xchg
add
push
inc
sub
cmp
rcll
out
mov
jb
jmp
rcr
outsl
adc
adc
xchg
rcr
add
inc
push
rclb
inc
popf
repnz
push
fimull
and
rolb
std
cmp
mov
inc
lret
mov
sarl
or
sub
inc
lahf
cmp
ljmp
popf
iret
lcall
arpl
xchg
ror
adc
into
sub
mov
fiadds
cmpsl
outsb
insb
adc
sahf
pop
pop
mov
outsb
sbb
test
ljmp
je
mov
shlb
mov
nop
icebp
std
mov
imul
fdivrs
pop
jecxz
popf
das
or
aad
cwtl
push
jbe
ds
inc
enter
sbb
imulb
jg
into
xor
mov
std
xor
rorl
ret
push
adc
push
loope
jno
xor
pushf
push
lret
jno
push
cmp
aam
and
lds
pop
pop
xchg
mov
sub
mov
adc
iret
bswap
mov
popa
mov
mov
scas
pop
out
mov
jp
add
test
into
jb
jne
mov
adc
inc
popf
test
out
sbb
into
movsl
pushf
adc
lock
pop
jbe
sub
es
iret
adc
lret
mov
std
fdivp
pop
or
cltd
add
sahf
pushf
jp
add
xor
jns
mov
mov
mov
mov
fwait
mov
dec
pop
sbb
fadd
cmc
sbb
xor
dec
test
jb
mov
call
test
fbld
sbb
mov
add
hlt
sub
enter
out
rcrb
cwtl
or
cmp
loop
dec
push
mov
mov
movaps
roll
mov
mov
push
pop
stc
push
pop
jnp
sub
inc
movsl
test
or
pop
pushf
mov
mov
add
bound
sahf
push
out
sub
ja
jnp
adc
ljmp
mov
les
adc
scas
aam
xchg
lret
mov
sbb
xor
lret
out
xor
jnp
dec
repnz
jle
xchg
mov
pop
jnp
incl
dec
inc
inc
fcmovnu
clc
pop
ss
inc
and
into
push
sub
xlat
insl
mov
lret
call
pop
cli
jae
addl
ds
popf
jae
ret
jbe
stos
xor
fcmovnu
push
cmp
cmc
aad
loopw
sbb
notl
sti
outsb
cmc
xchg
das
push
repz
ljmp
xor
mov
or
mov
cmp
fildl
mov
mov
push
pop
push
sbb
call
shrb
inc
or
out
or
not
and
jp
fs
movsl
ret
inc
mov
imul
addb
rcll
jecxz
jl
push
add
hlt
adc
test
outsl
jecxz
imul
cltd
addr16
dec
scas
push
nop
ja
loope
enter
push
test
iret
mov
sbb
add
push
inc
jbe
lcall
or
xchg
and
and
and
pop
lahf
cpuid
push
mov
call
lahf
jmp
pop
loopne
xchg
mov
mov
jno
cli
lea
or
sbb
mov
arpl
gs
xchg
adc
stos
dec
pushf
dec
jae
aaa
dec
push
jge
pop
loop
fisubrs
and
lods
gs
pop
mov
fs
pop
jno
xchg
call
cwtl
aaa
lods
test
add
roll
or
jbe
sbb
pushf
xchg
xor
lahf
sub
sbbl
les
test
rorb
insb
and
push
std
aaa
mov
aaa
out
ljmp
or
jmp
shll
add
mov
scas
xchg
inc
popf
lahf
repnz
sub
jo
sub
mov
xchg
arpl
test
jmp
mov
rol
sub
pop
int
les
dec
ljmp
mov
hlt
cmc
out
or
rcll
inc
scas
push
stc
cmp
xor
mov
mov
cmp
ror
cmpsl
adc
mov
aaa
call
call
pop
out
inc
xchg
jbe
xor
sub
insb
jbe
pop
inc
test
gs
mov
stc
sbb
stos
dec
imul
leave
xchg
into
push
mov
push
out
xorb
cmp
cmc
cli
sbb
xor
sbb
mov
inc
jae
enter
dec
fcmovbe
mov
and
jp
add
pop
mov
pop
pop
es
mov
mov
ja
pop
out
pop
rcl
shrl
pop
pop
subl
ss
fdivrs
rolb
or
dec
xor
or
add
and
roll
push
pushf
mov
pop
stc
mov
lods
xor
cmp
sbb
shr
add
inc
ss
cmp
lods
push
filds
rcrb
mov
dec
shll
popf
push
adc
icebp
repz
ret
movsb
cmp
clc
int3
mov
cs
inc
cli
sbbl
sarb
pop
cmp
xchg
push
fs
hlt
pop
sarl
mov
add
mov
cwtl
scas
and
lods
xchg
stos
mov
or
add
ja
push
or
pop
mov
out
pusha
adc
cli
pop
or
cmp
outsb
or
xor
adc
cmp
repz
in
push
jbe
add
xchg
sub
cmpsl
dec
pop
xor
xchg
fisubrs
lcall
jb
sub
mov
jne
push
xchg
aas
cltd
mull
cld
icebp
ljmp
mov
insb
in
or
jbe
sub
andl
or
roll
and
pop
cmpsb
je
pop
inc
xchg
pop
stos
push
shlb
ja
xor
add
aam
sbb
rcr
in
and
mov
mov
sub
sbb
add
xchg
cmp
fisubs
scas
push
jo
insb
adc
adcb
jl
aam
in
and
inc
sahf
pop
mov
adc
in
stos
push
call
fs
outsb
js
out
jnp
mov
in
xchg
xchg
xor
mov
insl
notb
ss
jae
lea
scas
dec
int
jbe
cmp
cmp
sub
sub
rclb
insl
testl
call
push
xor
outsl
inc
pop
cmc
testb
xor
sub
dec
pop
or
mov
pop
test
insb
rolb
loopne
shll
lds
pop
dec
pop
notl
call
mov
hlt
and
inc
cmp
xor
add
scas
std
mov
xchg
jb
test
push
pop
outsl
aam
or
and
add
dec
jno
sbb
loopne
cli
dec
cwtl
cmp
xchg
int3
shll
sbb
stos
jmp
rolb
or
and
pushf
stos
std
outsb
out
sbb
add
rolb
or
mov
aas
xchg
jmp
jno
xorb
pop
sbb
mov
cmpsb
fwait
jmp
popa
push
imul
ret
xor
outsl
adc
cmp
jns
mov
jbe
enter
inc
push
xchg
cli
icebp
out
aas
sub
add
imul
hlt
stc
mov
sbb
shrb
mov
cmp
loope
fsubl
fdivrl
jle
lcall
and
dec
fstpt
push
addr16
aad
adcb
cmpsl
sub
push
out
movsb
ret
pop
out
in
mov
popa
outsl
addr16
jbe
shll
testl
aad
sbb
test
out
sbbb
cmp
pushf
mov
cltd
mov
sti
bound
sub
clc
mov
jo
mov
jnp
aaa
loope
rcrb
push
jl
and
mov
fstpt
push
xchg
sub
xchg
and
sbb
dec
popa
sbbl
inc
arpl
psubusb
icebp
sbb
xchg
sbb
stc
adc
test
sbbl
inc
xchg
dec
daa
fcoms
enter
or
fldenv
xchg
jecxz
mov
push
arpl
jp
ljmp
inc
jno
add
andb
ljmp
dec
mov
pop
imulb
cmc
jbe
icebp
sahf
dec
fst
icebp
jge
icebp
outsl
xchg
test
jne
shll
sbb
lock
push
cld
xor
mov
add
or
rorl
cltd
push
xchg
enter
jle
movups
clc
sub
dec
sub
inc
xchg
xchg
iret
ss
lods
mov
pop
ja
shr
cmp
imul
jecxz
dec
les
cli
sub
xlat
sahf
stc
xchg
or
enter
std
or
out
rolb
cmp
sub
aas
shrl
fmuls
jecxz
add
push
xchg
in
pop
push
mov
push
pop
mov
lahf
js
int3
inc
std
push
sbb
jns
dec
jne
mov
inc
imul
add
mov
and
bsr
fistpl
jbe
movsl
jg
inc
cmp
mov
stos
inc
rcr
inc
push
fisubrs
xchg
shll
adc
test
hlt
test
push
neg
jecxz
mov
push
in
hlt
mov
cmp
xchg
leave
mov
add
fildll
dec
push
and
sbb
and
xchg
mov
adc
sbb
xchg
add
or
jns
aad
ja
repz
pop
dec
cwtl
gs
add
dec
rclb
ret
andl
inc
xlat
std
jmp
sbb
hlt
xchg
xchg
dec
jne
adc
in
std
xor
rcr
sbb
adc
test
iret
nop
dec
idivl
test
jmp
int
xlat
xchg
shl
add
shlb
std
aaa
inc
outsb
and
test
cmp
or
or
push
sub
out
fists
mov
outsb
bound
into
push
or
dec
imul
sub
into
xchg
jmp
jo
imul
sbb
mov
mov
jo
shrb
mov
int3
mov
adc
ror
or
cmc
test
clc
ds
scas
addr16
add
pop
cwtl
hlt
inc
push
add
popa
lret
adc
std
push
in
xchg
decl
mov
insl
loope
mov
arpl
sub
jecxz
xchg
iret
adc
ss
lret
jno
lahf
dec
ja
adc
or
aam
fsubs
sar
cmp
out
ss
add
ja
mov
mov
pop
or
es
dec
mov
std
fs
push
mov
fnsave
adc
mov
aas
mov
xlat
adc
xchg
xor
sbb
dec
add
pop
pop
sbb
xor
es
out
movsl
push
out
xchg
or
adc
stos
aam
push
mov
das
add
ds
mov
pop
stos
popa
mov
mov
repnz
addb
std
mov
sbb
shll
shll
inc
sub
dec
sbb
cmpsl
sbb
fstpt
sti
cmpsb
cltd
mov
mov
out
call
repnz
mov
push
cmp
loope
test
hlt
roll
jl
mov
sub
inc
pop
xor
shrl
dec
inc
or
fistl
xchg
or
stc
sti
cmpsl
and
call
icebp
aaa
xor
add
mov
scas
ror
xchg
addr16
iret
mov
incl
mov
or
mov
fisubrs
cld
push
jbe
lret
lea
xchg
push
lret
out
or
hlt
loopne
mov
mov
push
mov
mov
dec
filds
push
jns
jg
bound
aaa
push
push
es
dec
jge
cmp
stc
stos
mov
xchg
mov
loope
sti
mov
xor
sub
pop
or
sbb
jb
jg
push
shlb
mov
inc
les
fstps
jne
mov
enter
int
mov
jmp
dec
push
pop
cmp
js
nop
test
push
and
insb
fwait
and
lret
push
xor
push
lods
in
jl
aam
cli
movl
adc
insl
mov
scas
test
pop
addr16
sarb
mov
xor
sub
pop
frstor
inc
out
pop
mov
imul
clc
pop
and
mov
sub
lcall
xchg
or
pop
out
add
rcl
mov
jl
jmp
aad
mov
aad
ja
out
cmpsb
leave
ss
sti
in
jp
push
mov
inc
lret
sub
mov
cld
jae
xchg
mov
pop
scas
mov
or
call
jnp
fs
push
outsb
ss
sbb
sub
ss
mov
and
cmp
sahf
push
fsubrl
imul
jle
mov
mov
mov
sti
sbb
dec
std
pop
push
sub
add
pushf
xor
and
shr
adc
and
fwait
inc
pop
js
out
mov
out
int
add
or
ljmp
fxam
lods
dec
push
pop
cli
jbe
mov
sbb
mov
sub
xlat
lret
push
rorl
rcll
xor
das
xchg
lahf
pop
pusha
dec
push
es
orl
adc
ret
mov
push
push
and
mov
pop
cs
and
cmp
int3
xchg
fistl
push
ret
cmp
ljmp
sahf
push
add
fcoms
mov
frstor
lret
inc
pop
neg
rcll
push
imul
gs
inc
fnstcw
aam
jmp
ljmp
jmp
in
in
adc
jg
sub
int3
pop
mov
insl
lea
jae
lahf
sbb
mov
pop
and
mov
repz
icebp
fcomps
push
orb
jno
add
int
popf
sarb
cmc
or
inc
insb
mov
adc
popa
das
xchg
push
in
sti
sub
cmp
popf
or
inc
fistl
mov
dec
pop
flds
les
aas
int3
dec
adc
xlat
pop
clc
out
mov
mov
idivl
pop
cltd
ljmp
xchg
pop
jmp
mulb
inc
repz
cwtl
out
minps
pop
pop
or
dec
sbb
inc
ljmp
ficomps
nop
mov
daa
hlt
fsubrs
sbb
xor
xchg
faddl
iret
ret
adc
insb
test
jmp
je
or
daa
xchg
adc
push
dec
push
shlb
addr16
lock
mov
push
sbb
fs
andl
out
and
fwait
movsl
lret
outsl
cmp
jns
xchg
fadds
enter
dec
add
divb
sarb
sub
mov
fisubl
inc
add
call
sbbl
lods
lahf
sbb
pop
and
shrb
sub
rcrl
pop
pop
mov
mov
fdivrl
jb
out
and
sub
repz
sub
add
xor
nop
inc
add
ror
imul
je
mov
sbb
addr16
fadds
aad
pop
out
add
leave
mov
push
shlb
repz
repnz
push
out
pop
lods
lods
push
dec
shll
inc
xchg
xchg
inc
inc
jnp
add
repz
repnz
cltd
xor
sbb
cmp
fdivp
loopne
mov
mov
out
xchg
jo
mov
and
cltd
out
jp
les
sub
test
mov
int3
cs
push
mov
dec
xchg
stos
stc
cmovge
sub
sub
xor
adc
sub
jb
dec
cmc
dec
and
mov
mov
imul
push
cld
sbbl
xor
adc
push
xchg
xor
out
addb
add
inc
dec
enter
jmp
dec
fwait
or
mov
popf
enter
cmpsl
dec
or
jg
pop
xorb
lret
jo
adc
rclb
sti
jmp
jmp
lret
inc
push
jb
pop
repnz
push
lahf
mov
jge
push
lret
repz
mov
xchg
das
movsl
push
xlat
enter
popa
lret
cmp
popf
push
daa
lock
sub
jbe
imul
popf
js
cwtl
mov
addl
cli
add
out
das
fistpll
mov
test
lods
mov
pop
xchg
xchg
cltd
aam
icebp
push
dec
or
inc
cmpsl
dec
test
in
push
or
or
and
popf
sub
dec
dec
sbb
mov
das
adc
xor
pop
inc
push
or
icebp
add
or
movsb
adc
test
jmp
rolb
jle
cmpsl
cwtl
push
push
lahf
dec
inc
jo
std
pop
test
or
cmp
ror
mov
sbb
lret
aas
jg
int3
adc
fucomip
sub
ret
fildl
mov
add
push
adc
call
pop
fcmovnbe
sbb
adc
fyl2xp1
scas
or
add
xchg
mov
lock
lods
mov
sub
in
es
cmpsl
push
adc
mov
xor
sub
jg
fidivrl
fistpll
or
sub
pop
test
pop
mov
push
and
aam
pop
jp
and
inc
pop
cmp
adc
dec
ss
adcl
mov
call
cli
fisubl
pop
mov
pop
adc
mov
stc
lods
pop
cmpsb
stc
mov
stc
mov
pop
je
hlt
fildll
sahf
mov
stos
dec
dec
push
mov
push
ficomps
jge
cmp
out
sub
mov
ret
inc
out
inc
adc
mov
mov
sbb
das
push
mov
mov
inc
mov
xor
test
imul
mov
loope
icebp
cli
jno
pop
sub
fstl
icebp
test
add
incl
add
inc
icebp
outsl
push
aas
sub
test
in
pushf
outsl
dec
pop
out
adc
pop
subb
popf
outsb
ja
in
shlb
cmpb
aad
fcmovnb
inc
shl
push
out
pop
out
ss
movsl
sbb
loope
cmpsb
xchg
dec
jmp
test
mov
mov
imul
sub
cwtl
and
lock
dec
outsb
popf
pop
push
mov
sbb
fs
mov
mov
dec
sbb
js
cwtl
mov
repz
aam
push
adc
dec
inc
jae
or
xor
ljmp
or
push
dec
ret
inc
rol
nop
cli
clc
pop
icebp
shll
push
fisttpll
push
jle
adc
push
cmp
inc
push
cmc
jmpw
add
pop
jno
cli
pop
and
mov
lods
adc
loopne
call
icebp
imul
fs
fwait
lret
dec
push
inc
icebp
aad
fildll
lea
jae
xchg
aad
mov
jecxz
jno
lods
loope
mov
and
lods
mov
test
lock
push
repz
xor
dec
xor
lds
dec
and
ret
cmp
aad
dec
idiv
add
addr16
out
mov
or
insl
jb
into
jl
adc
movsl
lods
mov
mov
xlat
pusha
push
hlt
add
xor
sub
imulb
xor
xchg
cld
mov
in
rcl
sti
xchg
cld
scas
mov
or
pop
xchg
xor
mov
js
test
mov
shll
pop
stc
jg
shrl
xchg
out
dec
mov
inc
push
imul
mov
loopne
cltd
ret
test
xor
push
push
stc
out
clc
mov
xlat
adc
pop
popa
pop
sbb
add
aad
cmp
cmpsl
sub
pushf
mov
push
pop
out
sub
call
jmp
je
inc
mov
lock
pop
mov
les
subl
hlt
mov
ret
pop
xchg
scas
in
add
pop
jge
sarl
mov
cmp
shrb
lods
xchg
sbb
inc
pop
clc
xor
dec
loope
jp
and
cli
lods
int
adc
inc
sub
out
adc
int
xor
and
mov
popf
pushf
pop
push
in
dec
jnp
test
xor
lret
or
movsb
push
dec
leave
adc
dec
jmp
mov
pop
das
pusha
jge
cmp
mov
inc
and
adc
dec
xor
add
subl
adc
inc
test
lods
inc
mov
dec
mulb
pop
rclb
sub
sbb
inc
test
or
les
aad
xor
shll
sub
inc
pop
shlb
push
mov
daa
dec
icebp
pop
mov
lahf
int
xlat
mov
add
sub
adc
insl
mov
push
sbb
ja
sahf
sahf
push
lahf
mov
and
sti
mov
dec
ja
and
ror
leave
sbbb
xor
lret
inc
into
mov
imul
sti
insl
or
sarb
imul
rorl
das
dec
out
dec
push
dec
push
in
jno
loope
xlat
ret
cld
push
jg
shl
mov
adc
and
add
cwtl
mov
add
addr16
sbb
pop
pop
insl
add
or
jge
ja
insb
mov
repz
jb
cmpsl
sti
rcr
push
sbb
lahf
add
push
and
cs
adc
call
aad
rcrb
add
push
xor
cmpsl
pop
sub
das
dec
testb
add
or
divb
popf
inc
xlat
sbbl
fxch
les
fbld
outsb
add
sbb
xchg
pop
shl
dec
in
scas
mov
psubusb
fcoms
xor
dec
mov
cmpsb
push
mov
mov
ja
pop
testl
pop
pusha
sub
xor
bnd
adc
lods
addr16
icebp
pop
rcrl
and
pop
lret
rcrl
mov
push
adc
enter
addr16
xchg
jg
and
insl
ja
outsl
stos
and
push
push
mov
call
and
out
shll
out
dec
sahf
mov
dec
mov
ljmp
xchg
in
into
lods
xorl
arpl
gs
xchg
popf
icebp
insb
mov
xchg
lods
rorl
outsl
push
and
lods
xor
sub
ret
ja
rcl
xchg
cs
in
movsl
aam
scas
jl
add
ficoml
jmp
test
dec
rclb
push
jmp
stc
repnz
xlat
cmp
cltd
je
jle
addb
mov
mov
add
mov
mov
insl
inc
pop
add
jge
outsl
hlt
stc
fnstenv
jp
pop
mov
test
iret
popl
sub
push
xchg
xchg
pop
add
testl
inc
xor
cli
dec
out
mov
imul
outsl
sbb
ja
adc
jmp
out
outsb
shl
jmp
mov
mov
jae
mov
out
cwtl
or
fiadds
and
test
out
push
adc
sub
iret
push
test
stos
mov
inc
add
jl
clc
imul
out
or
ror
adc
div
fnstcw
xchg
mov
mov
lock
orb
pop
leave
and
mov
loop
pop
jl
sbb
mov
pop
out
dec
js
jbe
pop
dec
jp
dec
cwtl
roll
movsb
xchg
nop
pop
out
or
push
or
push
inc
jo
test
cli
pop
or
pop
fldt
pop
lods
mov
pop
jg
fnstenv
sbb
inc
xchg
xchg
out
out
adc
jg
sub
mov
or
pop
sub
sarb
dec
add
dec
mov
ret
add
mov
adcl
add
add
lds
mov
in
leave
subb
xor
cmc
loope
jmp
stos
fsub
sarl
sbb
repnz
inc
cmp
pop
jge
inc
xlat
mov
insl
xchg
in
scas
pop
adc
aad
add
cmp
mov
scas
scas
out
and
out
mov
lcall
sbb
iret
test
pop
lcall
icebp
sub
rol
dec
and
stos
cmp
cmp
inc
popa
std
js
bnd
sub
inc
inc
cmpsb
sub
sbb
stc
push
lahf
outsb
out
add
or
inc
xchg
aas
pop
pop
div
ja
and
movsb
fs
or
pop
arpl
pop
aaa
gs
test
pop
xchg
test
push
stc
rcr
test
ljmp
cmpsl
int3
xor
add
xchg
les
adc
rorl
and
xor
and
and
push
imul
add
ljmp
dec
or
outsl
add
aas
and
call
push
imul
jae
cmp
cmc
or
push
notl
sub
stos
fnstsw
inc
ss
addb
adc
mov
addr16
add
into
and
mov
test
inc
cld
pusha
mov
sub
pop
jmp
push
pop
push
inc
fcmove
call
scas
sti
pop
loopne
sbb
mov
in
int3
jo
mov
es
in
test
adcl
dec
and
es
cli
mov
inc
stos
pop
lds
mov
adc
lret
movsl
push
add
jg
xor
dec
or
mov
orl
test
or
icebp
or
xchg
int3
pop
out
mov
movsb
gs
cmp
in
icebp
mov
sahf
fidivrl
dec
into
mov
mov
scas
jle
or
jae
push
pop
test
movsl
lret
cmpsb
in
fidivrs
and
mov
test
lcall
jle
cli
leave
ja
iret
add
cld
btr
aam
sbb
popf
or
or
dec
clc
test
pop
adc
minps
in
imul
hlt
adc
dec
add
std
and
loop
mov
leave
stc
test
mov
fistpll
rolb
repz
jmp
sbb
clc
loop
mov
aad
and
outsl
aad
sub
push
cltd
stos
cmp
cltd
xlat
hlt
sbb
sti
je
adc
insb
pop
inc
or
fcomps
icebp
pop
rsqrtps
add
jb
fdivl
daa
sub
add
pop
xor
daa
push
lcall
and
jg
and
push
jecxz
cmp
sbb
pop
inc
ret
aaa
mov
xchg
ds
dec
or
or
cmp
mov
out
lods
and
lea
dec
rorl
lahf
dec
dec
push
cmc
fldcw
rcl
daa
mov
sbb
xor
xchg
xor
ficompl
mov
pushf
inc
sub
adc
and
ret
inc
adc
rcll
aam
sbb
mov
xchg
sub
sbb
std
fmulp
pop
in
pop
hlt
test
mov
sub
and
jmp
xor
jo
leave
sti
mov
xchg
push
mov
dec
inc
adc
xchg
shlb
and
mov
pop
fsubs
hlt
stos
sbb
dec
sahf
or
loopne
sbbb
xor
fcmovnu
lahf
fs
xchg
subb
add
inc
cmp
jno
repnz
sub
pop
stos
mov
lds
test
cmp
and
jp
ds
hlt
pop
xlat
stos
ret
and
jae
xor
adc
repnz
inc
xchg
int3
lods
rclb
or
subb
inc
cmp
loop
popf
sub
push
xchg
aad
xchg
popa
icebp
dec
push
popa
inc
ret
pop
jl
es
test
pop
push
xor
xchg
leave
pop
dec
xchg
cmp
in
test
cmp
in
pop
and
and
jo
das
cld
idiv
xor
sbbb
cli
pushf
into
ds
mov
out
jae
xor
in
stos
jecxz
sub
fnstsw
dec
fs
or
inc
repnz
fistps
dec
or
ds
lods
out
repz
pusha
pop
imull
sub
in
lds
adc
mov
call
sbb
in
ficoms
faddp
lods
insl
mov
jns
hlt
jmp
inc
or
int3
scas
sub
sbb
push
sbb
cmp
xchg
inc
dec
movsl
inc
hlt
mull
movsl
cltd
enter
jnp
les
xor
sub
cmp
bound
xchg
ret
xchg
add
xlat
outsb
cmove
sbb
add
je
push
sbb
aam
fisubrs
or
push
mov
xor
loope
push
push
pop
mov
fstl
test
and
adc
jg
pop
inc
out
icebp
popf
xor
dec
mov
ja
pop
scas
adc
sti
negl
inc
movsl
push
or
dec
cmc
mov
dec
inc
adc
and
push
dec
inc
jp
lods
sbb
xchg
lcallw
jae
pop
test
adc
mov
mov
out
and
ffreep
test
push
jl
ljmp
test
mov
cmpsl
bound
lret
sub
in
dec
push
cli
pop
lret
jo
pop
les
xchg
adc
jge
dec
cwtl
push
xor
sbb
fsts
stos
cmpb
push
imul
add
or
int
iret
sub
sbb
outsl
js
push
rcrl
jo
aad
gs
push
push
xor
pushl
mov
mov
leave
sub
int3
lds
jo
enter
mov
loop
mov
inc
mov
mov
pop
inc
bsf
adc
or
jl
iret
pop
fldl
shrl
xchg
mov
xchg
push
scas
sbb
stos
push
mov
sbb
daa
in
insl
ret
pop
lods
lds
shll
movsl
mov
jmp
mov
mov
gs
subb
repz
leave
add
sub
mov
or
bound
aad
cmc
cmp
cmpsb
ret
jmp
mov
adc
push
mov
adc
nop
daa
shlb
jbe
mov
cmp
icebp
cmpsb
mov
pop
adc
ret
jge
imul
jnp
pop
mov
mov
xor
jae
push
add
and
fs
outsl
jno
setge
icebp
rclb
loop
sti
into
inc
mulb
jle
xchg
rclb
adc
loop
jnp
cmpb
mov
lret
dec
or
into
roll
lds
or
pushf
push
and
push
cmp
dec
push
fs
push
mov
loope
sbb
orb
pop
cmp
xchg
add
xor
popf
push
lcall
mov
lret
adc
gs
adc
mov
stc
loop
jb
pop
mov
xor
cmp
or
insb
pop
mov
jmp
scas
cmp
pop
in
shl
mov
shl
repz
out
icebp
aam
mov
sbb
rorb
xchg
popl
insb
cmp
inc
mov
add
inc
ret
dec
cmp
dec
bnd
sub
push
pop
lock
xchg
punpckldq
or
ds
loopne
jne
int3
mov
insb
mov
gs
xor
dec
ficoms
out
dec
xor
xchg
xor
and
scas
mov
push
jmp
xchg
lret
icebp
movsb
bound
xor
scas
arpl
inc
xor
mov
mov
popf
scas
lret
cs
xor
xchg
mov
xabort
fmull
cmp
loop
pop
mov
sub
or
mov
ja
aas
adc
pop
adc
jecxz
cmp
and
out
dec
mov
rclb
sbb
or
in
mov
cmp
insl
clc
out
sub
jge
stos
pop
nop
jnp
out
repz
cmp
sub
jo
out
movsb
sbb
js
sbb
popf
ljmp
mov
and
int
xlat
arpl
mov
test
divb
mov
push
bswap
leave
mov
scas
aas
and
outsl
test
mov
enter
mov
jb
pop
mov
xchg
mov
repz
fcomi
jo
push
push
sub
jb
xchg
pop
or
sbb
lods
mov
mov
sub
xchg
shrb
cmp
inc
pop
ljmp
lods
sar
int3
test
test
xchg
test
insl
mov
cmp
int3
aad
mov
push
rcrl
rol
repz
je
iret
pop
cmp
xchg
mov
movsb
stos
shlb
ljmp
add
adc
xchg
test
pop
cmp
int
sbb
or
push
popf
scas
jecxz
cmpsb
movsb
adc
push
mov
addb
pusha
jl
add
enter
ja
out
push
repnz
test
lds
shl
scas
in
psrlw
leave
xchg
add
adc
sbb
add
shl
mov
daa
daa
sub
movsl
inc
inc
jecxz
shrl
out
inc
stc
movsb
aam
sbb
push
adc
cmpsb
sub
pop
push
insb
rcr
pop
jo
sub
lods
push
fistpl
push
leave
xchg
hlt
lods
out
sub
lret
sub
mov
inc
cmc
sbb
mov
jno
shrl
cld
sub
push
cmc
xchg
imul
push
out
jp
std
out
xchg
and
movsl
data16
jl
cmp
adc
loopne
sbb
and
call
movsb
fldl
inc
cmc
mov
notb
shrb
push
std
xlat
nop
cmpsb
jp
xchg
adc
stos
mov
adc
cmp
pop
ret
mov
push
aad
adc
arpl
cmp
pop
fs
cmp
mov
mov
mov
push
out
mov
in
lahf
sbb
and
ss
adc
mov
inc
sub
imul
dec
leave
imul
lcall
ret
call
xor
cmpsl
lods
movsb
mov
dec
fists
imul
pusha
pop
add
and
leave
outsl
sub
pop
jge
sub
loope
mov
fadd
aad
xchg
dec
add
dec
and
pop
ja
mov
and
adc
hlt
aas
addr16
mov
mov
imul
leave
push
lret
nop
sub
inc
loope
jle
int
jle
outsl
mov
clc
cmpsl
js
cmp
sbbl
std
out
jnp
add
inc
push
or
dec
adc
das
lret
mov
xlat
or
mov
call
inc
leave
adc
pop
mov
xor
pushf
xchg
fwait
hlt
xchg
imul
scas
mov
mov
xchg
std
daa
add
xlat
jl
mov
cmp
jnp
div
inc
out
popa
mov
daa
and
push
mov
xor
lahf
xor
xchg
enter
ljmp
loope
pop
xchg
add
cmpsl
stos
add
in
inc
sbb
cmpsb
test
aad
incl
push
pop
xchg
std
push
sarl
push
scas
in
add
int3
and
ss
push
push
imul
push
add
sti
and
sbb
add
push
add
jecxz
int3
mov
cltd
mov
mov
mov
inc
dec
sub
adc
decl
ljmp
clc
lea
mov
imul
push
andl
test
aas
push
test
aam
xor
xorl
div
popl
inc
cmc
shlb
stos
push
or
fdiv
in
fnsave
cmp
imul
movsb
inc
pop
int
pop
scas
add
add
mov
and
aaa
out
mov
jae
xchg
pop
push
outsl
cmpb
fs
jbe
sbb
scas
lods
cmp
fstpt
mull
adc
addb
maxps
sti
or
mov
dec
out
andl
sub
ljmp
mov
push
xchg
and
in
dec
rorl
inc
push
xor
lock
sbb
in
movsl
sub
add
add
xchg
test
jmp
jmp
xchg
negb
sub
int3
xacquire
dec
in
fildll
shrl
les
insl
cmc
mov
add
leave
cmp
adc
pop
lock
aam
inc
cltd
xchg
aam
add
add
into
pop
mov
mov
mov
stos
mov
mov
xchg
in
shlb
imul
fwait
popf
in
xchg
loopne
inc
ljmp
mov
push
shr
stos
sub
cmp
frstor
sbb
stc
fcmovnbe
inc
cmp
idivl
outsl
sti
pop
jnp
test
ficomps
movsb
fisubrl
bound
iret
out
jle
xchg
mov
ja
imul
push
mov
icebp
jne
or
fs
aas
rorb
leave
popa
dec
adc
lds
ljmp
int
sti
jecxz
push
cmp
aaa
lea
sbb
rcrl
and
or
xor
push
imul
pop
test
and
xchg
mov
push
push
sub
adc
out
fldl
pop
xor
es
pushf
cwtl
adc
adc
mov
and
das
in
aaa
add
and
data16
test
ror
mov
mov
jp
fdiv
xchg
xlat
fsts
or
or
xchg
in
cmp
cmp
pop
arpl
rol
jbe
lock
xchg
cmp
add
or
push
pop
mov
rcll
in
jmp
or
add
jmp
iret
mov
cmpsb
adc
psraw
jbe
orl
push
xchg
mov
adcl
inc
aad
mov
mov
imul
push
adc
fdivl
mov
xor
dec
and
insb
push
das
and
icebp
cmp
push
mov
inc
jno
jae
fstpt
sbb
cld
jmp
cmp
and
sbb
test
je
and
adc
pop
in
xchg
sub
pop
hlt
mov
pop
inc
dec
repnz
push
inc
pushf
icebp
pop
fsubl
enter
pop
push
jae
mov
inc
xchg
or
addb
out
pop
jecxz
lock
ljmp
call
push
fdivl
mov
sbb
xor
xor
bound
pop
popf
test
shll
aad
pusha
mov
push
movsl
lods
aaa
dec
xchg
push
pop
leave
cs
shlb
dec
daa
or
iret
cmp
xchg
inc
ljmp
xchg
filds
movsl
into
idivb
xlat
fcoms
std
dec
jecxz
pop
rclb
adc
adc
cs
fists
adc
testl
std
xchg
mov
inc
popa
call
call
jne
scas
movsb
pop
xchg
cmpsl
lods
cmc
aas
aad
sarb
inc
cmp
sub
push
in
xchg
das
mov
ss
push
sti
les
out
push
sub
rolb
jg
sub
aam
dec
aaa
dec
out
or
insb
jno
mov
or
iret
mov
or
pop
ja
subl
mov
mov
dec
inc
mov
jl
aam
push
push
repnz
xchg
fldenv
std
sub
in
ljmp
push
add
scas
sub
mov
rcl
jge
fsubr
aam
xchg
outsl
pop
leave
scas
add
std
daa
add
dec
fcoms
adc
daa
rorb
enter
shl
aam
sub
mov
mov
add
imul
inc
es
into
ret
loope
or
xlat
xor
jmp
lds
push
lock
scas
aam
jle
or
cs
jne
or
test
cmpsb
movsl
push
loope
sbb
xchg
cltd
sbbb
add
addr16
inc
mov
dec
iret
cmp
les
loope
fsubrp
xchg
or
xchg
pop
es
push
aas
sbbl
lds
dec
pop
push
out
les
xor
mov
jle
push
shrl
mov
xchg
inc
fs
aam
icebp
push
mov
test
jae
push
and
pop
mov
in
sbb
xchg
jl
mov
inc
pop
movsb
push
pop
cmp
inc
mov
imul
fnstcw
dec
sub
popl
adc
lods
xchg
and
add
fwait
adc
or
xor
int
or
and
xor
in
je
dec
icebp
loope
frstor
or
lcall
stos
mov
jae
add
lcall
lock
dec
xchg
cmpsl
xlat
push
xlat
sub
inc
pop
in
push
iret
ror
push
mov
sub
aas
pop
adc
cmpsb
jbe
jmp
mov
repnz
insl
push
int
leave
or
test
stc
push
out
shlb
dec
jg
inc
mov
add
push
lcall
mov
notb
jae
mov
mov
and
fstps
mov
es
mov
lcall
jg
in
shr
hlt
in
mov
sub
xor
xchg
adc
inc
mov
pop
iret
call
lret
lock
jo
push
movsl
add
pop
add
jmp
mov
arpl
push
ret
pop
sbb
test
xchg
ficomps
adc
or
and
adc
repz
rcl
hlt
pop
sahf
aad
in
xor
mov
popa
mov
in
movsb
lock
pop
mov
adc
push
aad
mov
js
lods
mov
xchg
sub
sahf
sti
xchg
cmp
addl
mov
pop
push
push
int3
dec
test
cmpb
adc
pop
jno
aam
popf
lods
mov
push
adc
mov
push
adc
es
mov
aas
dec
add
add
add
jno
sbb
mov
inc
xor
cld
out
jmp
pop
cli
jl
xlat
push
sbb
jb
adc
xor
jo
les
push
in
lret
or
frstor
pusha
adc
shl
in
ja
mov
and
fildl
lret
mov
pop
lea
orl
mov
adc
jne
jns
das
imul
xlat
or
dec
mov
sbb
push
pop
push
loopne
pop
sub
mov
out
mov
int3
mov
pop
mov
sbbl
push
adc
mov
fcomps
inc
adc
sti
out
iretw
pop
insb
and
and
push
mov
pop
ret
fsubl
out
sub
rcrl
inc
dec
sbb
or
mov
add
je
inc
popa
lock
jp
dec
dec
jle
xchg
sti
lret
mov
adc
dec
jne
cli
mov
mov
push
rorl
aas
out
rcl
xchg
pusha
push
movsl
jge
stos
and
insl
fs
xor
cs
loopne
jge
or
mov
add
dec
jg
stos
inc
outsl
xchg
mov
mov
add
test
dec
xor
faddl
rolb
notb
mov
movsl
jb
fwait
add
sbb
mov
push
int
fldenv
notb
test
in
int
les
fwait
cmp
dec
in
mov
aas
mov
add
out
mov
mov
out
clc
xchg
ret
add
fcmovnbe
stc
rcrl
add
mov
cmp
loop
es
push
sbb
pop
xorb
inc
adc
jl
xchg
mov
dec
pop
sbb
mov
loopne
pop
icebp
lahf
jl
adc
mov
int3
adc
inc
enter
sub
lods
insl
mov
int3
and
lods
pop
mov
imul
lret
les
bnd
mov
out
xor
push
shlb
cmp
and
jbe
fdivl
mov
or
mov
sub
adc
cmpsb
sbb
shll
imul
fwait
add
xchg
push
xor
xor
push
inc
and
inc
hlt
inc
pop
loopne
repnz
dec
clc
loopne
int
xor
inc
mov
test
call
addr16
call
and
push
inc
and
and
ret
insl
jne
emms
xor
ret
xor
clc
dec
mov
std
ret
pop
out
mov
or
icebp
add
jl
enter
push
cmpsb
cltd
in
dec
rcrl
ljmp
jp
movsl
and
jnp
movsl
xchg
cmp
fnstcw
aam
mov
jp
push
rcl
data16
and
xchg
fisubrs
sub
out
xlat
aaa
pop
cmp
ret
mov
or
std
push
fdivrl
mov
inc
cmpsb
fmuls
pop
or
scas
into
movsb
inc
aam
das
mov
lds
ja
sub
pop
or
sti
fsubr
pop
scas
and
mov
sbb
pop
fistpll
inc
pop
fidivrs
jg
cmp
les
setae
popf
out
adc
je
and
bsf
pop
mov
lds
sbb
adc
push
dec
movsb
push
push
xchg
mov
roll
sub
dec
push
add
inc
fsts
xor
and
lods
andl
fidivrl
in
push
out
outsb
in
mov
add
push
mov
stos
push
sub
bswap
sbb
jns
mov
fidivl
jnp
dec
lret
cli
in
std
test
add
addr16
das
hlt
fs
cs
mov
cmp
sqrtps
out
lea
adc
jae
ds
or
neg
xchg
outsb
or
cs
xor
and
adc
popf
scas
mov
dec
jo
mov
clc
jl
xchg
push
sbb
insb
aas
cmp
outsb
inc
lds
mov
ds
mov
adc
sbbb
repz
pop
clc
sub
sub
inc
and
popa
jge
aas
sub
out
pop
mov
rorb
enter
or
xlat
xorl
movl
daa
inc
jb
hlt
add
test
movsb
out
outsl
clc
dec
into
negl
adc
or
mov
test
pushf
dec
ror
mov
daa
std
fs
inc
sbb
bnd
mov
clc
stc
cmc
jecxz
mulb
inc
add
add
xchg
stos
sbb
cmc
fnsave
mov
call
out
lods
clc
or
sbb
js
adcb
or
push
roll
ficoml
inc
pop
stos
push
ficoml
out
orl
or
push
les
pushf
nop
hlt
mov
mov
jns
mov
aaa
mov
ficompl
cmp
fadds
inc
mov
add
xchg
or
mov
pop
xchg
dec
andl
sub
jo
pop
push
mov
pop
cld
int
repz
rcll
or
add
lods
mov
jmp
xchg
aam
dec
adcl
push
rol
pop
movsl
or
push
sub
ja
out
cmpsb
mov
mov
gs
leave
aam
adc
outsb
popa
and
rcl
dec
pusha
push
jmp
cltd
add
xchg
cmp
jl
pusha
pop
std
int
push
repnz
mov
cld
inc
orl
std
lock
decb
sbb
sbb
fs
shrb
std
pop
jbe
add
clc
shlb
xor
sbb
add
push
data16
sarb
shrb
dec
insl
popa
sub
and
out
repnz
jmp
sub
cmc
adc
jb
mov
fcompl
pop
push
shrb
pusha
mov
fildll
sti
sbb
cmc
stc
pop
aaa
inc
lods
adcb
scas
sbb
jo
sar
aas
adc
xor
out
daa
adc
dec
test
aam
cmp
enter
sbb
mov
or
push
xchg
ficoms
cmpsl
mov
dec
mov
in
xor
jle
lock
gs
test
or
xchg
sbb
decl
aam
pop
loopne
jno
pop
insl
lods
notb
cmpsl
adc
andb
scas
sub
das
push
call
leave
ss
gs
bsf
add
mov
out
push
push
adc
or
fwait
xchg
std
dec
push
loop
inc
jno
dec
sbbb
pop
sub
add
mov
fnsave
cmp
dec
jbe
jb
pushl
xchg
dec
jg
aaa
mov
clc
pusha
or
dec
xchg
push
push
or
test
adc
je
lea
or
pop
sub
sub
or
add
push
fst
xor
popf
pop
pop
movq
pop
out
imul
adc
sbb
repz
shlb
xor
push
jno
push
sub
lds
xor
adc
jge
xchg
pop
aaa
add
aam
shrl
lock
sub
aaa
push
aam
ficoms
rcll
arpl
push
bnd
ss
frstor
pop
dec
jge
push
push
adc
xchg
fldl
inc
iret
js
cmp
subps
xlat
or
add
mov
pop
push
mov
dec
mov
mov
cmp
sti
or
jge
sti
adc
mov
push
lcall
push
inc
add
xchg
icebp
push
clc
jge
lcall
adc
aaa
repz
shl
mov
aas
shll
mov
js
aas
mov
pusha
das
push
mov
jo
test
out
mov
push
shr
lods
in
xor
and
in
out
mov
xchg
sahf
incb
push
out
xchg
and
divb
lret
dec
cmpl
icebp
push
movsb
mov
lds
push
dec
enter
dec
adc
test
adc
ja
int
mov
mov
sbb
xlat
push
xchg
bound
imul
pop
setp
mov
cli
jle
fadds
jge
push
dec
ss
jmp
push
push
xchg
in
pop
push
sub
mov
sbb
add
sbb
aaa
lods
cmpsl
mov
ss
dec
and
cmp
add
loop
ror
ret
ret
sub
aas
ret
sbb
cmp
sub
sub
xchg
mov
mov
es
repz
lds
movsb
into
sbb
imul
jae
arpl
shrl
jo
jnp
sbb
push
and
mov
mov
dec
sub
mov
cmp
sti
xor
pop
mov
fisttps
je
lea
fbld
test
ret
cmp
sbb
adc
inc
repz
aas
in
rol
int
add
push
orl
popa
popl
mov
or
scas
pusha
out
dec
dec
lcall
add
rolb
jg
push
int3
les
repz
out
cmpsl
fucomp
rorl
imul
loope
out
call
inc
mov
and
xor
scas
fdivrs
push
mov
scas
outsl
sbb
icebp
mov
lock
push
mov
aas
mov
stos
dec
test
inc
mov
sub
and
stc
js
arpl
out
adc
in
jb
ffreep
and
lcall
or
test
imul
inc
hlt
popf
imul
sbb
or
scas
inc
lret
hlt
mov
pop
fdivrl
mov
pop
sbb
mov
or
pop
adc
xor
pusha
add
les
pop
mov
mov
daa
popa
cld
mov
sahf
mov
pop
or
lods
pop
test
or
insl
jns
in
fidivrl
sub
xlat
in
mov
cli
fdivrs
mov
faddl
add
dec
stos
sub
andb
aaa
xchg
pusha
lods
iret
lods
sar
cmp
lock
iret
mov
std
dec
push
mov
out
call
ret
popa
inc
scas
icebp
or
enter
mov
frstor
aad
mov
xchg
mov
dec
ljmp
je
sub
lods
shrb
insb
jbe
jmp
dec
pop
add
aam
jp
lcall
repz
aam
fcmovne
jl
pop
push
xchg
and
inc
lret
jne
mov
andb
jge
out
inc
loope
push
xor
add
push
jl
lret
or
or
mov
scas
shll
mov
xchg
fmull
or
cmc
cmp
dec
nop
mov
or
or
lret
aas
xchg
jno
or
aad
push
shrb
jno
mov
pop
sub
xchg
pushf
rclb
fidivrl
jge
push
ret
dec
fdivrs
inc
cwtl
les
fcoms
xor
in
xchg
out
adc
lods
cmp
xlat
push
push
addr16
sbb
sub
popf
dec
jne
jbe
jmp
xchg
out
rcrl
cmpsl
inc
icebp
loop
fsubl
bound
scas
mov
es
test
and
add
or
push
dec
add
stc
and
push
mov
inc
dec
cli
daa
and
nop
es
hlt
pop
test
aad
push
insl
out
repnz
add
mov
pop
xor
icebp
add
add
jne
inc
aad
adc
jge
cltd
xchg
adc
xlat
enter
mov
mov
jne
dec
push
mov
push
jne
sarl
and
rcll
fsts
add
lock
sbb
sbbb
inc
aam
js
sar
js
fsubs
jle
xchg
pop
pop
cmp
xchg
jns
outsl
ds
ja
mov
cmpsl
xor
fnstcw
loope
repz
lds
mov
out
sub
push
in
sbb
pop
movsb
push
out
and
adc
andl
jae
or
mov
inc
sub
test
fwait
ds
enter
stos
clc
ror
pop
stc
sbb
push
add
sub
add
imul
out
push
inc
mov
mov
pop
xor
adc
lret
out
nop
add
xchg
popf
or
lock
mov
cmp
outsl
in
cmp
sub
andl
rolb
push
push
inc
out
fcmovnbe
dec
mov
mov
clc
pop
jb
pushf
jl
adc
stc
or
cltd
call
xor
xor
and
jae
stos
xorb
sbb
cmpsb
clc
xor
hlt
cs
cld
scas
fwait
lods
xchg
or
xchg
or
lds
jmp
mov
lahf
and
arpl
inc
gs
xlat
or
push
sbb
in
inc
pop
mov
rcrl
adc
out
sbb
jecxz
stc
add
inc
push
xchg
in
xor
and
cmc
xor
aas
ret
ds
dec
enter
rcrb
jecxz
out
cwtl
and
jp
cs
cmpsb
pop
enter
lock
xchg
scas
in
add
add
cmp
add
adc
movb
pop
gs
lcall
inc
test
pop
daa
add
icebp
mov
idiv
iret
fildl
jmp
xchg
rol
xor
cmpsb
pop
cmp
cmp
scas
mov
outsl
imul
aam
rolb
sbb
add
pop
jno
lods
repnz
sub
mov
or
push
push
dec
out
enter
movsb
adc
and
aas
mov
push
lcall
mov
jg
sbb
fdivrp
daa
cld
cli
push
call
icebp
fildl
adc
cmpsb
mov
cld
xor
inc
mov
xor
ljmp
in
and
rolb
cld
mov
inc
clc
dec
mov
sbb
xchg
aaa
pop
mov
test
cmp
out
cmc
mov
int
xlat
jmp
iret
in
lea
ret
pop
adc
inc
lret
pop
into
ret
add
cwtl
loop
adc
inc
adc
fdivrl
movsb
push
mov
mov
pop
icebp
jp
dec
pop
mov
insb
or
jns
jl
fidivs
push
cs
sub
int
xchg
jb
sub
push
jecxz
out
push
dec
mov
cli
dec
xor
test
fcmove
mov
xchg
lods
lods
add
mov
mov
mov
fwait
pop
shl
pop
adc
cmpsb
das
mov
enter
mov
push
sbb
jmp
stc
call
xchg
lea
jg
sbb
sub
fucom
push
lahf
mov
mov
fxam
and
pop
xrelease
jg
fadds
lret
aam
test
add
jle
cmovg
add
inc
xor
aam
push
xchg
in
out
push
cmpl
xchg
and
cmp
popf
push
mov
loop
pop
sarl
mov
and
sbb
or
dec
icebp
inc
dec
inc
push
imul
xor
les
pop
in
shlb
pop
addb
fwait
out
pushf
addr16
enter
pop
or
cwtl
cmp
cmp
cld
repnz
out
xrelease
stos
mov
call
mov
aaa
dec
cmp
mov
es
adc
pusha
fucomp
adcl
lods
adc
add
and
or
mov
and
imul
lret
mov
rol
rorb
push
cmp
adc
push
popa
mov
lea
sbb
test
fsubs
lahf
icebp
insb
jne
ds
mov
jl
cmpsb
iret
pop
js
pushf
shr
or
cmp
mov
int3
shrb
mov
movsl
shlb
mov
mov
and
cmp
leave
shlb
faddl
and
ret
push
out
insb
xchg
div
push
inc
xchg
pusha
iret
jno
loopne
out
std
call
jmp
outsl
dec
shl
xchg
shl
or
hlt
push
pop
mov
aaa
iret
jnp
jp
sbb
mov
das
icebp
mov
mov
inc
jb
sbb
lcall
pusha
movsl
hlt
push
fadds
fmull
push
test
in
leave
fldl
xchg
repnz
insl
mov
push
aam
sbb
push
push
cmp
scas
imul
xchg
sub
push
sar
dec
adc
xchg
push
aam
gs
out
inc
pop
lods
sub
or
scas
xor
or
lods
ret
cmpsl
jo
jg
aam
jo
data16
icebp
or
mov
xchg
cmpsb
or
in
jns
dec
cli
fxch
push
sbb
add
in
mov
sub
fcoml
mov
sub
jno
icebp
mov
movsl
jnp
push
mov
out
enter
imul
sub
adc
aaa
pop
dec
arpl
jno
in
add
xchg
mov
mov
sysret
repz
aas
pop
xor
bound
push
arpl
in
mov
sub
xor
mov
out
fsubrs
ljmp
int
test
aaa
pop
adc
push
out
fsub
out
nop
icebp
inc
adc
das
movsl
dec
pop
outsl
inc
sbb
test
shrb
add
stos
adc
aas
lods
mov
lea
add
fldcw
pop
jno
dec
into
aad
fsubs
adc
and
xlat
jge
inc
add
push
outsb
inc
lahf
or
lea
xchg
in
andl
xchg
mov
xchg
xchg
lret
test
jg
push
pop
pop
adc
stos
outsl
adc
jmp
inc
xchg
cmc
jg
pop
adc
mov
inc
jbe
fadd
jmp
sbb
dec
push
jge
icebp
pop
adc
sub
inc
aaa
mov
push
fmuls
pop
repnz
xor
fcomip
push
pop
mov
enter
ja
mov
jg
mov
push
hlt
insl
fmull
push
in
inc
ret
shll
lret
mov
sub
jl
rclb
push
lret
add
mov
jecxz
cmpsb
mov
sbb
dec
mov
aad
filds
daa
push
bound
mov
mov
fiadds
sub
sub
pop
cli
pop
pop
cmp
jp
pmaxsw
jne
mov
dec
mov
mov
cmp
stc
outsb
add
mov
pop
push
mov
imul
inc
and
adc
xor
pop
lds
mov
jbe
xchg
lcall
and
movsl
sbb
imul
xor
ss
lret
and
sbbl
ret
or
jnp
cmc
mov
ja
cmp
aas
stc
nop
insb
sbb
mov
jle
shll
cltd
jmp
jg
mov
pop
inc
popf
or
out
sub
fsubs
lahf
mov
dec
shrb
movsb
pop
sbb
or
push
push
mov
mov
push
outsl
sbbb
sbb
cmpsb
sti
insb
xchg
in
repnz
jo
mov
fs
lret
mov
outsl
xor
ficompl
popf
movsb
dec
jo
fidivs
je
jnp
inc
popf
sub
jo
or
dec
adc
mov
mov
and
sub
ret
movsb
dec
pushf
push
adc
ljmp
sub
xchg
jae
mov
ss
pop
jne
jbe
inc
dec
popa
sarb
dec
mov
push
dec
mov
inc
test
mov
xchg
mov
lock
aas
mov
arpl
hlt
cs
add
dec
lret
mov
out
stc
mov
out
outsl
add
in
jne
dec
dec
ss
int3
xchg
dec
sbb
inc
fcmove
in
dec
xor
movsl
jle
dec
sbb
rclb
in
xor
push
xchg
cmpsl
jecxz
push
xor
push
adc
int3
in
xor
push
scas
sub
aad
imul
jae
push
cld
add
ja
ja
loop
mov
in
adc
out
stc
cli
mov
std
inc
jge
mov
pop
inc
lods
aad
insl
jno
pop
fs
lcall
cmp
out
mov
pop
cmp
cmpl
and
int
mov
out
xor
testb
arpl
ss
repnz
inc
lret
data16
jno
pop
cmp
loope
test
and
cmp
cmp
mov
jae
frstor
nop
and
ljmp
mov
mov
shl
cld
inc
pop
push
dec
xor
sarl
push
rclb
mov
leave
jmp
push
pop
pop
aad
cmp
dec
push
iret
enter
pop
inc
jno
inc
xchg
sub
clc
ret
mov
push
test
shlb
pop
jne
mov
call
pop
jge
adc
xchg
repnz
imul
mov
sbb
les
adc
stc
fwait
inc
cmpsl
scas
mov
cmp
adc
out
out
inc
ret
adc
sbb
call
dec
mov
sbb
lcall
adc
pop
test
xor
push
dec
xchg
test
and
inc
shll
std
das
arpl
jo
stc
pop
int
lods
inc
inc
mov
clc
sbb
int3
xchg
jb
cld
xchg
out
pop
shl
mov
nop
and
rorl
addr16
mov
sub
imul
or
stc
xchg
adc
test
cltd
les
adc
cli
mov
fcoms
insb
jle
cmp
scas
out
rcrb
sti
in
sahf
fidivl
dec
push
adc
andb
lea
dec
dec
xchg
inc
cli
mov
push
add
xchg
cmp
cwtl
pop
mov
sbbl
dec
push
ret
xchg
inc
push
les
addl
fstl
mov
pop
adcl
pop
ss
call
jle
push
cmp
in
sahf
or
mov
popa
fldz
adc
push
add
mov
mov
shlb
xlat
mov
out
and
sahf
adcb
jle
cmp
outsb
inc
adc
aad
push
fdivl
mov
mov
or
int3
stc
cmp
pushf
lcall
cmpsb
add
retw
bound
mov
rcll
xor
dec
shl
jae
and
ss
or
test
ljmp
jae
movsl
mov
xchg
aad
out
push
pushf
ljmp
jb
xor
gs
sti
movsb
jo
in
xchg
jmp
mov
scas
popf
mov
ljmp
loopne
mov
xchg
pop
pop
xor
xor
sti
jle
adc
dec
test
movl
les
jecxz
adc
xor
scas
popa
xchg
dec
stc
or
fidivrs
fists
rorl
pop
inc
mov
in
sbb
ss
adc
inc
in
movups
push
call
test
or
adc
popa
jmp
hlt
inc
fsubs
iret
test
adc
pop
mov
lds
sub
dec
shrb
xlat
sub
xor
inc
sub
xor
sub
mov
cmp
fistps
and
movsb
lock
add
cld
mov
lret
std
popf
and
rorb
out
scas
lret
mov
jno
pop
pop
mov
xchg
dec
pop
push
aaa
push
fsubp
dec
pop
leave
pusha
incb
shrl
mov
push
loope
pop
das
jmp
xor
dec
jge
mov
sub
mov
lods
loop
aam
std
and
lahf
hlt
mov
sbb
mov
int
xchg
adc
add
movsb
push
adc
dec
xchg
xchg
mov
imul
push
enter
aaa
pop
inc
das
mov
xor
push
pop
jne
xchg
ret
aas
repnz
int3
sar
imul
add
fsubrs
gs
sahf
inc
push
lahf
into
clc
mov
and
ja
jne
rorl
xchg
stos
lret
out
adc
jmp
ljmp
cld
mov
sub
adc
mov
in
insb
sbb
psubq
into
lds
jo
int3
sti
sbb
cmp
mov
mov
loop
jae
orb
mov
leave
inc
mov
fdivrp
mov
leave
or
mov
cmp
inc
xchg
lods
repnz
dec
or
adc
aad
xchg
adc
pop
mov
enter
aaa
mov
push
popf
mov
mov
test
mov
popf
fcompl
mov
mov
test
push
cmp
mov
sbb
add
das
loop
popa
mov
scas
mov
imul
cmpsb
insb
inc
stc
add
rcll
ret
lea
rol
sub
push
xor
das
push
imul
insl
int
xor
push
mov
inc
mov
call
divl
js
jl
xor
sub
xchg
pushf
adc
xchg
fldt
fcmovb
mov
push
popa
fidivl
stos
cmp
arpl
ljmp
outsb
pop
jno
pop
adc
mov
adc
sbb
sbbb
or
xchg
pushf
inc
push
idivl
std
jo
sub
mov
std
in
rorb
sbb
fs
dec
xchg
shl
jge
mov
mov
sub
jl
dec
xchg
arpl
mov
or
xchg
fsubrl
lock
cmp
mov
or
xor
roll
ret
popl
add
push
mov
inc
xor
and
rorl
xor
inc
add
test
mov
inc
fdivr
sub
mov
sbb
pusha
jo
push
mov
pop
js
pop
ret
add
in
mov
les
lahf
sbb
mov
push
in
cld
out
mov
adc
jg
xchg
mov
nop
clc
outsb
adc
out
cmp
adc
mov
push
xor
daa
add
jge
mov
inc
aaa
add
or
ss
cmp
push
mov
test
dec
ljmp
in
test
push
push
rolb
fstpt
stc
cltd
dec
notb
imul
xlat
sbb
jbe
mov
gs
and
adc
repz
aam
mov
hlt
lret
mov
aam
jae
xchg
pusha
or
ljmp
jmp
mov
inc
out
mov
sub
aad
imul
jg
jne
test
sub
mov
in
pop
mov
and
xor
push
jbe
push
push
adc
add
adc
mov
and
mov
push
leave
push
pop
cmp
sub
xchg
cmc
dec
mov
and
das
scas
inc
or
rorl
test
dec
cmp
out
xchg
pop
cmp
dec
sub
add
movsl
fs
scas
sbb
sbb
popa
fmull
outsl
lahf
lods
xchg
pushf
test
push
add
push
stc
or
jnp
pop
push
and
lods
xchg
js
and
imul
push
jb
mov
pop
mov
mov
mov
sub
mov
inc
repz
adc
pop
jno
cli
mov
roll
pop
addl
leave
xlat
xchg
xchg
xchg
lahf
ret
mov
fcoms
inc
aad
icebp
mov
ljmp
imulb
fcomps
xchg
and
push
call
xchg
xlat
mov
das
cld
xor
inc
icebp
rcl
mov
push
scas
xor
jo
jno
aam
pop
cwtl
mov
ja
push
insl
lock
fcmovnu
notl
das
into
push
sbb
sub
pop
call
pop
leave
test
inc
iret
jae
adc
rolb
push
pop
test
pop
xor
inc
mov
jo
push
jae
mov
das
add
xchg
jno
adc
lods
rorb
adc
rclb
and
incb
in
cmp
rclb
xchg
cmpsl
cmp
iret
adc
inc
inc
mov
mov
aas
outsl
lcall
loop
shrb
pushf
mov
xlat
jb
dec
or
aam
sub
pop
fildl
push
cmpsb
xchg
hlt
dec
fiaddl
shll
inc
dec
inc
rcl
aaa
inc
out
test
pop
and
test
std
jns
in
jo
pop
inc
scas
clc
adc
shrl
aad
mov
jb
xchg
inc
aam
enter
push
xchg
in
sbb
shl
xchg
fidivl
inc
loop
ret
stos
aaa
inc
clc
jnp
pop
push
dec
ss
cmp
lret
inc
ss
mov
aaa
inc
clc
outsl
test
addr16
jne
pop
aam
into
jecxz
dec
enter
push
xchg
mov
inc
add
fstl
mov
scas
sahf
popa
xchg
inc
mov
ret
pop
push
inc
lret
das
cmp
clc
das
push
cmp
xlat
mov
inc
xor
clc
mov
adcl
or
arpl
fadds
adcb
mov
lahf
das
inc
stos
adc
out
push
std
cli
fsub
push
in
insb
jg
fstpl
mov
dec
xlat
jge
mov
and
jecxz
adc
fildl
push
and
rcrl
loop
nop
ds
mov
pop
stc
push
int3
jg
lgdtl
faddp
popa
push
std
pop
arpl
aad
scas
push
test
in
and
mov
fiadds
lcall
jmp
sti
imul
loop
into
add
icebp
sbb
cmp
pop
xor
push
popf
cmp
sbb
sub
addr16
adc
cmpsl
rcll
cli
je
loopne
jbe
add
dec
mov
xchg
mov
and
adc
jne
pop
pop
cwtl
mov
xor
popa
les
xor
rclb
xchg
aad
rorl
in
stos
nop
push
loope
sub
fwait
xor
icebp
or
ret
sub
sub
push
adc
clc
cwtl
fstl
gs
pop
jg
inc
xlat
data16
and
jo
push
lods
das
xchg
sub
xchg
adc
fisttpll
and
lea
cld
push
enter
xor
dec
mov
or
jl
mov
ljmp
mov
repz
dec
cli
mov
pop
ficoms
add
aaa
insl
insl
aas
les
aas
add
lea
ja
adc
inc
lret
into
lret
mov
or
das
jp
loop
nop
push
inc
add
stos
xor
inc
leave
test
pusha
jle
push
dec
aad
popa
push
push
arpl
xchg
and
mov
mov
inc
cmp
pop
popf
cmp
pop
in
sbb
push
pop
shl
rcl
mov
lret
out
aam
es
push
jb
adc
stc
ja
jge
add
idivl
push
fdivr
mov
mov
enter
jle
mov
lock
inc
jg
test
pop
xchg
shlb
sbb
mov
xchg
sbb
adc
push
lret
jecxz
inc
or
in
or
dec
fmull
sub
cmp
fs
or
mov
add
add
push
jo
mov
ss
ss
or
clc
lods
add
stos
push
jmp
cltd
aam
bound
mov
dec
xlat
loope
lahf
push
lods
adc
mov
mov
pushw
out
lock
sub
adc
adc
sbb
fstl
test
pusha
lock
cmp
out
popa
adc
mov
outsl
repnz
and
rclb
into
jge
jge
inc
jns
inc
and
loop
adc
arpl
shrl
jae
mov
sub
popf
or
in
inc
dec
xchg
ja
es
sub
mov
cmp
adcb
inc
adc
data16
ficoml
or
mov
rcll
cmp
mov
or
mov
and
out
js
and
xlat
mov
fwait
dec
adc
mov
arpl
nop
es
rolb
lret
mov
mov
cmp
cmc
ljmp
call
add
lahf
jnp
outsl
mov
mov
repnz
into
xor
xchg
popa
push
and
andl
stos
lahf
add
sbb
pop
nop
ret
ljmp
imul
in
inc
push
es
fs
jb
adc
arpl
inc
xchg
ja
xor
jle
xchg
fldl
push
dec
daa
mov
push
push
lods
shrl
aam
pop
je
negb
push
std
jne
test
cmc
mov
inc
pusha
pop
out
int3
mov
xor
sar
aam
jge
out
pop
sbb
mov
push
and
js
mov
incl
jmp
add
jl
lds
lcall
pop
cmp
jb
inc
mov
sub
xor
cmpsb
out
mov
lods
sbb
or
out
divl
mov
popa
mov
movntq
out
cltd
sbb
shlb
out
or
imul
cli
inc
add
add
sub
adc
mov
decb
mov
push
inc
sbb
out
push
rolb
adc
or
rorb
mov
incl
jg,pn
jge
jbe
bound
sbb
inc
jge
in
aas
call
cmp
mov
arpl
or
or
jl
jmp
jecxz
sub
pop
xchg
cmp
adc
cwtl
inc
repnz
jmp
in
xchg
cmp
jle
sbb
lods
dec
cmp
jne
mov
bound
or
sub
mov
in
push
sub
dec
pop
and
fs
shrb
add
testb
adc
test
jl
or
adc
dec
sbb
mov
mov
pop
xor
repnz
mov
or
in
and
fs
pop
adc
cmp
test
pop
gs
loope
std
in
adc
add
jbe
lock
mov
dec
testl
mov
addr16
ljmp
movlps
ds
push
ja
fucom
xchg
ficoml
lret
or
cmpsb
sbb
fidivl
cmp
jnp
mov
out
or
pop
lds
cmp
sbb
negl
leave
inc
mov
mov
daa
push
ljmp
mov
inc
pop
std
pop
mov
lock
lret
in
inc
mov
xor
dec
ljmp
jmp
cmp
les
cmp
lret
ljmp
adc
adc
push
sarb
cmp
rorl
fsubr
xchg
dec
repz
add
lahf
xor
sbb
arpl
loopne
int
dec
fnsave
stc
lock
jle
xchg
push
mov
lret
inc
xchg
and
inc
xchg
fisttpl
pop
push
out
and
push
lock
inc
outsl
pop
jge
or
xor
adc
or
add
mov
jbe
shll
pop
xchg
bnd
pop
sub
lret
out
pop
inc
jmp
sbb
mov
or
adc
jae
vmovss
gs
out
jnp
ret
jecxz
cltd
pop
sti
mov
cmp
jecxz
dec
mov
out
cmp
cmp
lods
call
lock
lods
jg
lods
jno
mov
pop
xor
sbb
add
sbb
cli
test
push
shrb
bound
hlt
nop
aaa
lcall
std
mov
jle
loop
pop
mov
inc
inc
push
sbb
cmc
push
mov
inc
jle
xorb
adc
int
daa
int
sahf
fdivr
pop
sub
xchg
loop
xchg
inc
lods
mov
test
cmp
lods
xchg
fst
into
push
sahf
sti
inc
cltd
pop
inc
insl
loop
push
cmp
or
aam
aam
jle
jmp
sarb
out
test
loopne
rcl
repnz
jne
sub
sub
cmpl
in
inc
shl
mov
scas
xor
dec
mov
std
sub
pusha
test
add
dec
add
scas
jns
xchg
lods
stc
push
push
and
test
jbe
sahf
stos
je
add
pop
and
add
adc
jmp
mov
adc
cld
icebp
xchg
inc
mov
mov
dec
or
mov
xor
scas
push
jp
cmp
icebp
inc
pop
xor
push
mov
xor
adc
lods
pop
test
movsl
xor
sbb
test
shr
mov
cmc
add
gs
dec
and
cltd
daa
iret
add
cld
add
mov
scas
fbld
xchg
mov
and
jge
xor
outsl
popa
jle,pn
imul
mov
ss
add
push
mov
sbb
jp
dec
inc
shrl
stos
pop
lds
and
dec
aaa
inc
xchg
mov
jle
movsl
xchg
and
sbb
and
shlb
scas
shl
xlat
dec
mov
jge
push
gs
push
lahf
cs
fs
repz
in
mov
ljmp
jno
ljmp
nopl
es
pop
inc
les
mov
xchg
jmp
addr16
bound
into
aas
or
and
lcall
push
pop
std
pop
shl
xchg
stos
sub
jb
mov
jmp
push
pop
mov
jl
cmpsl
sub
in
ret
imul
fsubrl
clc
icebp
arpl
cmp
inc
rcrb
sub
iret
mov
xor
pop
pop
or
jns
add
cli
fadd
fdiv
lret
clc
insb
jp
push
fisubl
or
jg
cli
adc
cmpsl
movsl
lcall
shll
or
int
push
xorb
xor
or
sbb
pop
jno
mov
insl
cmp
add
in
leave
mov
psubq
aaa
out
pop
pop
xchg
addl
dec
ss
int
jne
mov
cld
loope
pop
pop
out
mov
mov
sbb
popa
fistpll
dec
inc
aad
mov
or
xchg
inc
ja
mov
aam
sbb
lods
std
xchg
sbb
inc
push
popf
jge
pop
xchg
cltd
gs
and
cli
aam
dec
xor
bound
mov
xor
inc
push
roll
pusha
mov
aad
aam
adc
xchg
push
jae
sbb
mov
xor
xchg
xchg
out
pop
in
dec
push
cld
lret
add
push
jbe
test
adc
inc
aad
xor
cmp
pop
setns
lods
push
aad
or
jg
pop
movsl
cs
andb
stc
jbe
pop
jne
aas
fists
subl
mov
xlat
mov
pop
add
gs
adc
xchg
jmp
jbe
xchg
xor
sub
sub
adc
jg
add
mov
rorl
lcall
outsb
xor
or
mov
inc
sub
mov
mov
pop
pop
cmp
pop
inc
push
pop
test
bound
iret
adc
jge
mov
orl
pop
into
cmc
fbld
mov
or
dec
and
add
addr16
ljmp
cmp
hlt
int3
add
pmuludq
mov
dec
leave
testl
cltd
paddw
es
or
rorl
dec
cmpsl
movsb
mov
cmp
iret
dec
xchg
adc
imul
std
jmp
scas
adc
xor
cmp
adc
mov
add
test
push
es
sbb
mov
mov
lret
fcmovbe
out
shrl
xchg
fidivrl
rolb
inc
mov
adc
movb
cmpsl
mov
movsb
jle
cmp
jle
xorl
pop
inc
call
xchg
sti
mov
pop
mov
ds
xchg
pop
inc
mov
gs
pop
aad
daa
xor
sbb
lahf
movsl
or
jp
or
mov
rorb
cmpb
xor
loop
cmp
xchg
fwait
enter
cmp
jle
or
mov
sub
or
xchg
sub
outsl
outsb
jmp
xor
mov
cmc
pop
imul
popf
icebp
das
outsl
ljmp
pop
ret
lds
add
adc
sub
sbb
sub
sbb
xchg
aam
adc
stos
mov
lret
iret
call
or
cmp
or
jg
movsb
nop
mov
popf
add
fidivrl
in
out
and
cmpb
stc
and
gs
leave
rcl
sbb
cli
ds
out
push
je
repnz
pop
xchg
push
mov
mov
push
push
mov
xor
ljmp
xor
rclb
out
data16
mov
sbb
test
adc
push
lods
shll
jae
inc
pop
daa
xor
push
repnz
inc
cmp
clc
ds
lock
inc
cmp
xchg
out
insb
cli
mov
push
inc
or
mov
repz
xchg
sbb
push
mov
adcb
aaa
xchg
in
inc
ss
test
xchg
in
xlat
jae
mov
pop
and
test
jge
cmpsl
leave
adc
int
test
push
inc
mov
leave
xchg
je
add
push
mov
pop
dec
sub
sub
cltd
push
mov
cld
pop
inc
rorb
leave
lret
push
mov
and
lock
push
insb
or
stc
add
adc
push
test
xor
pinsrw
xor
scas
adc
sub
add
inc
fs
cmc
leave
push
aas
xchg
mov
adc
addr16
mov
push
lods
lods
popa
mov
inc
jno
jbe
or
fldcw
arpl
xchg
insl
mov
cmc
sbb
movsl
xchg
dec
lahf
das
sbb
f2xm1
pop
mov
mov
mov
xchg
pop
test
push
xchg
loope
shll
cwtl
js
mov
dec
adc
xchg
sbb
dec
inc
xor
push
out
or
stc
cmc
and
adc
push
std
pop
add
xor
adc
cmp
std
mov
out
inc
aad
pmuludq
cmp
mov
imul
lret
adc
jg
cmpl
scas
adc
mov
or
sub
iret
daa
pop
push
fidivrl
pop
xchg
fisttpll
aaa
and
scas
add
and
or
gs
sbb
sub
daa
fsubrl
testl
in
xor
adc
fstpt
cmp
data16
gs
aam
add
pop
enter
scas
mov
out
mov
sub
mov
cli
rcl
mov
cmpl
sbb
pop
fisubrs
fs
jg
xor
add
in
stc
mov
pop
or
mov
fwait
call
cmp
dec
jmp
mov
inc
popa
xchg
gs
mov
aas
xor
push
daa
test
jb
jae
mov
out
aaa
xchg
mov
dec
pop
enter
insl
cmp
out
sub
sub
cmc
outsl
addr16
dec
mov
arpl
xchg
test
pop
jns
pop
mov
push
xchg
xorb
push
aam
xor
adc
xchg
or
out
jno
pop
jmp
test
cmp
cmp
ja
jno
push
push
outsl
popf
sti
jb
xchg
aas
mov
pop
out
mov
ret
orl
in
or
xlat
adc
xchg
xchg
clc
ja
ss
cwtl
test
dec
mov
mov
xor
fcmovnb
push
loope
cltd
mov
ja
sbb
inc
repnz
inc
adc
inc
nop
lods
pop
jp
xchg
and
add
scas
lcall
cmp
idivl
pop
lret
sub
xchg
push
pop
lret
adc
jecxz
xor
into
das
sub
sbb
repnz
lret
adc
bound
sub
out
pop
push
xchg
xor
addl
cmpsl
movsl
and
pusha
or
jl
cs
dec
popf
movsl
inc
addl
inc
inc
ja
arpl
aad
xlat
stos
jae
shrl
in
rcrb
inc
leave
xor
mov
and
push
push
mov
pop
pop
pop
insb
popf
dec
xor
popa
scas
cmpb
mov
and
fdivrl
add
pop
xor
sahf
mov
mov
add
push
jmp
xchg
and
adc
daa
push
shr
inc
frstor
push
sub
cld
scas
rcl
xor
data16
mov
mov
pop
adc
xor
pop
adc
dec
cvtpi2ps
add
xorl
xor
push
push
mov
dec
popa
cltd
leave
outsl
and
mov
jnp
sub
dec
cmc
mov
mov
scas
rol
mov
fistpll
and
push
jg
cli
test
or
lods
cmc
out
aaa
inc
fistps
roll
iret
out
adc
dec
xor
jecxz
ljmp
in
inc
mov
sti
push
aam
fimull
mov
sub
out
ficomps
add
js
push
adc
push
sub
push
mov
pop
mov
and
sub
or
mov
mov
add
xor
fildll
dec
or
loop
sahf
in
dec
xor
fdivl
xchg
std
pop
and
lods
cli
lds
push
je
cmp
fwait
or
mov
out
or
mov
orb
xlat
or
fcoml
push
pop
sbb
jp
add
xchg
or
push
push
shr
cmpsl
shr
cmp
push
sbb
enter
aam
stos
xchg
mov
ret
sub
dec
std
sbb
in
loopne
mov
xorl
cmc
int
leave
mov
int3
jns
imul
mov
lahf
dec
lret
add
adc
pop
jge
fdivrl
mov
rorb
mov
in
mov
jno
jle
repz
dec
call
sub
push
dec
in
add
lret
xorb
mov
enter
push
scas
repz
fidivl
adc
xchg
cmp
pop
push
and
dec
sub
and
iret
jmp
mov
imul
mov
cld
aas
or
xor
loopne
pop
out
or
mov
jo
in
mov
daa
xor
movsb
out
imul
jbe
cmpb
jb
xor
insl
cmp
and
ret
les
das
mov
jo
jns
jg
mov
mov
lret
int3
inc
je
sub
aaa
or
add
inc
das
das
js
cmc
sarl
sahf
sbb
faddp
rolb
mov
call
icebp
pop
lahf
shl
sub
adc
call
jle
pop
leave
rcrb
std
test
lret
adc
int
and
jne
fdivs
stos
cmp
xchg
and
adc
and
sbb
add
sahf
xchg
test
adc
jns
cmp
jmp
xchg
mov
gs
test
dec
push
cs
outsb
xor
xchg
leave
fistpll
test
movsb
out
imul
pushf
or
push
sbb
jl
dec
ja
or
or
ja
adc
pusha
cld
or
jo
xor
adc
cmp
fs
add
das
loopne
hlt
ret
adc
mov
popf
lds
or
lock
dec
dec
push
or
push
ffree
add
add
xor
add
add
cmp
mov
std
addw
stc
out
mov
sub
or
push
add
dec
sbbb
or
mov
movsl
int3
enter
and
mov
push
mov
in
mov
icebp
test
push
repz
out
dec
mov
dec
movsl
sub
lods
or
call
sub
mov
sbb
aas
mov
cmpsl
inc
inc
ret
inc
adc
xchg
mov
aaa
mov
mov
push
ret
or
push
mov
jb
adc
add
popf
inc
cwtl
mov
icebp
bound
cli
xor
dec
fdivs
lods
and
adc
out
and
ds
loopne
cli
lret
adc
loop
sub
mov
adc
adc
popf
sti
ss
mov
fidivl
lcall
out
in
adc
dec
mov
push
aaa
xchg
sub
cmp
test
inc
idivl
inc
dec
shlb
cld
mov
pop
ret
std
inc
push
add
negb
pop
cmp
mov
call
push
aas
sub
outsb
jo
push
out
adc
or
sub
mov
pop
push
adc
daa
in
das
xchg
jb
xchg
add
dec
fiadds
sub
push
fnstenv
sti
push
aad
lcall
pop
add
pop
out
pop
sbb
mov
jge
rcl
int
aas
fsts
je
add
ret
mov
stos
push
insl
push
pop
push
dec
mov
xor
jmp
rolb
call
sti
out
arpl
cmp
mov
test
loope
mov
xlat
shlb
add
js
jno
fsubl
xor
pop
fcom
or
cli
jmp
xor
pop
xchg
add
aam
stc
rcrl
ljmp
pop
cmp
cmp
push
in
mov
jne
pop
lret
xchg
stos
fdivrl
inc
and
jne
mov
aaa
adc
imul
adc
js
jmp
movsb
mov
js
lret
pushf
test
sub
movsb
rorb
mov
iret
iret
lods
int
in
sub
lahf
rclb
call
outsb
idivl
lds
sub
lock
outsl
dec
ffree
aas
jns
test
outsl
scas
inc
in
popf
sbb
es
push
dec
dec
inc
test
xor
enter
cmpsb
pop
pop
push
in
je
inc
mov
push
out
insl
push
mov
push
decb
shrl
jmp
jb
cmc
leave
push
sar
dec
inc
rcrl
inc
negl
in
push
sub
dec
outsl
pop
shlb
jge
ja
fstpl
je
push
roll
ret
out
pop
shrb
scas
cmp
push
inc
adc
mov
push
xchg
inc
stc
dec
dec
inc
inc
inc
insl
add
pop
repnz
cmp
divl
jge
push
sbb
xor
xchg
mov
sbb
mov
cmp
add
jo
push
fwait
out
fsts
neg
adc
pop
mov
cli
cmp
shll
mov
inc
jg
pop
rcll
ret
xlat
push
nop
daa
test
sar
fstp
sarl
sbb
aas
sbb
or
jae
movsl
lcall
xor
call
sub
inc
push
xor
jns
mov
and
push
incl
xlat
sbb
lds
dec
pusha
cs
xchg
jnp
pusha
sbb
popl
jle
cmp
adc
jns
sub
cmp
push
adc
mov
shl
cmp
mov
cmp
pop
sub
jp
pop
sub
pop
data16
pop
dec
cld
icebp
inc
roll
pop
mov
sbb
aas
rcrl
xchg
fcoml
push
sbb
sbb
inc
adc
mov
stc
add
inc
push
push
mov
std
sub
jl
lcall
fcmovnbe
sub
lds
add
sub
push
add
lahf
int3
cltd
mov
rorb
adc
pop
test
cmc
fcmove
test
mov
into
imul
mov
sbb
push
xlat
enter
push
outsl
cmp
inc
pop
pop
sub
cmp
imul
adc
test
xlat
push
push
xor
or
xor
movsl
push
call
xor
mov
and
test
aam
inc
lea
and
sub
adc
push
in
leave
shrl
inc
sbb
pop
jp
aad
sti
outsl
lock
pop
enter
cs
ds
and
mov
es
adc
jae
push
lret
nop
dec
jg
push
or
and
adcb
inc
pop
adc
push
or
mov
jo
hlt
cmp
mov
cmp
push
out
lods
rcl
push
xor
push
test
cli
sub
sbb
rorl
sub
pop
xchg
das
cli
aaa
xor
adc
mov
js
scas
jmp
dec
and
scas
shlb
call
mov
jecxz
aas
push
rcrl
pop
jns
add
adc
inc
adc
repz
jmp
ds
or
cmp
inc
jmp
out
scas
mov
lahf
or
push
in
xchg
mov
dec
and
mov
add
aas
daa
jne
gs
test
cmp
dec
push
bound
das
es
shrl
mov
leave
shl
mov
sub
mov
lret
test
popa
pop
sti
inc
push
pop
sbb
pop
jecxz
pop
xorl
loop
push
sub
ret
in
stos
iret
jg
pop
call
inc
mov
loop
icebp
shlb
adc
mov
lock
in
jmp
scas
dec
mov
inc
scas
mov
mov
cmp
mov
ficomps
jb
pop
bnd
pop
repnz
ds
cmc
mov
cld
pop
mov
iret
push
adc
outsl
xlat
mov
sub
pop
sti
pop
sub
int
push
jmp
xor
cld
dec
jne
jmp
roll
push
ja
jmp
dec
xlat
in
rcrl
jb
dec
fistpll
call
xor
and
pop
sub
test
inc
jge
jle
and
je
dec
sub
add
lea
leave
jp
shlb
clc
sbb
mov
fadds
push
rcrb
mov
jae
stc
and
mov
push
cmp
mov
or
sbb
cmpsl
dec
jg
ljmp
repz
fcomp
push
inc
es
cs
testl
jle
xchg
adc
data16
cmp
jg
lock
test
sub
lock
shl
clc
mov
pop
cli
push
xor
mov
mov
std
jmp
sbb
mov
push
je
add
dec
mov
popf
push
mov
mov
lock
mov
push
into
mov
push
xor
ficoms
movsb
rcl
and
sahf
in
mov
cmp
js
sub
scas
or
and
push
fwait
mov
or
sbbb
inc
jns
xor
push
mov
mov
mov
and
dec
xchg
and
pop
into
fidivrl
jl
dec
dec
lahf
pop
mov
rolb
or
pop
and
call
pop
mov
push
dec
fnstenv
mov
lea
stos
or
mov
add
xchg
repz
mov
mov
pop
stos
stos
mov
xor
push
mov
clc
mov
cltd
cmp
int
dec
mov
sbb
jne
pop
sbb
icebp
xchg
add
lea
jb
repz
mov
mov
xchg
dec
cmpsl
and
mov
es
adc
and
push
xor
cmpsl
add
cmpsl
jle
sbb
xchg
or
mov
inc
cmpsb
jge
into
ret
push
jb
outsl
lea
cmp
adcb
xor
pushf
movsb
inc
cmc
lock
cmp
and
lea
fcoms
data16
stos
pop
xor
adc
cld
xor
add
jge
xor
jb
push
xchg
jle
inc
in
xchg
adc
dec
pushfw
jp
sbb
sahf
bound
or
jne
lock
mov
loop
cld
mov
push
dec
xchg
not
sahf
std
insl
mov
jle
mov
dec
pushf
sbb
mov
mov
ljmp
fnstcw
pop
mov
and
inc
jnp
sub
push
mov
pusha
ds
push
imul
cmp
push
loopne
cmp
xorl
xor
ljmp
pushf
push
add
fildll
pop
inc
push
xorb
repz
ds
data16
jb
pop
sub
sbb
jns
push
iret
push
fdivrs
sub
outsl
in
or
div
pop
cmp
rclb
sub
mov
divb
test
cltd
mov
stos
pop
adc
sub
inc
loope
jp
leave
or
dec
in
les
push
xchg
cmp
xchg
cltd
sbb
fdivrs
test
andl
in
fwait
adc
mov
mov
jmp
dec
xchg
and
xor
and
mov
adc
dec
mov
dec
addr16
mov
mov
dec
dec
out
adc
pushl
ljmp
movsb
add
aaa
cmp
sub
mov
or
or
mov
pushf
aaa
xor
pop
inc
shlb
jnp
adc
xchg
in
xchg
push
ja
sarl
stos
pop
stos
js
xchg
add
leave
ja
mov
add
adc
xchg
ret
sub
jo
bound
and
sub
stos
sahf
fdivl
cmp
mov
js
mov
rcr
lret
inc
mov
inc
inc
ror
imul
add
fcoml
das
dec
fiadds
clc
mov
cmp
nop
faddl
test
push
lret
fbld
sbb
fidivrs
or
xor
sub
inc
push
in
jge
in
outsl
pslld
dec
cmp
sbb
notl
jle
mov
or
push
dec
adc
stos
push
insl
sbb
stc
fildl
aad
shrb
inc
outsl
mov
or
inc
icebp
int
inc
pusha
cli
lret
cmc
push
adc
xchg
pop
pop
push
mov
les
jecxz
adc
inc
fimuls
inc
lods
sub
popa
ljmp
push
rcll
rcl
dec
addr16
adc
mov
push
mov
mov
push
dec
outsl
adc
push
mov
int3
cmp
inc
sub
inc
cmpsl
xor
fucomip
jl
sbb
inc
add
add
xorl
rcrb
dec
sub
pop
imul
or
add
push
add
imul
rclb
addr16
or
pusha
fucomp
ljmp
cmp
jno
ds
call
pop
jb
addr16
mov
mov
nop
daa
out
lock
push
adc
filds
push
cld
sbb
or
jnp
ret
ja
bound
mov
cmp
fcmovnb
pop
xlat
add
cs
adc
stc
xor
add
stc
rcll
cmc
scas
and
popa
lods
out
cmp
enter
test
mov
dec
std
ret
in
mov
loopne
adc
sbb
mov
test
outsl
imul
fistps
adc
inc
stos
pop
test
imul
repz
mov
inc
or
sbb
js
xchg
dec
or
cmp
lret
or
mov
mov
or
insl
cmp
sti
fmul
mov
sar
xor
or
test
loopne
aad
movsb
dec
pop
hlt
sbb
jle
sbb
and
jns
fildll
rcll
cmp
adc
xchg
adc
xchg
je
xlat
lock
pop
push
mov
or
add
movsl
jle
jno
orl
repnz
scas
shlb
mov
loopne
lret
ret
int3
xor
cld
int3
dec
popa
fidivrs
sub
and
mov
fisttpll
rclb
test
fwait
test
js
ret
aad
inc
mov
mov
dec
int
icebp
ljmp
pop
add
mov
data16
push
lret
scas
inc
call
es
push
mov
iret
sub
push
roll
faddl
lahf
pop
inc
push
xor
fistps
or
ss
sti
jno
jg
inc
fstl
repnz
adcl
int3
daa
out
fwait
add
dec
clc
push
add
xchg
arpl
call
push
sbb
jge
out
sbb
orl
mov
add
aam
fsubrs
cli
mov
in
decl
paddw
pop
jle
adc
std
std
adc
in
inc
shr
sbb
sub
jge
repz
movsl
inc
dec
lods
jno
pop
mov
daa
mov
fidivrs
jecxz
jbe
mov
mov
sub
adc
lret
insl
icebp
mov
jl
lahf
push
enter
gs
fisttpl
jno
cld
or
ret
out
shlb
arpl
adc
not
fistpl
mov
inc
mov
mov
std
call
shll
loopne
xor
xchg
and
adc
xchg
pop
push
inc
push
pop
ret
mov
xchg
inc
push
pop
pop
cltd
mov
xlat
call
cltd
adc
sbb
ja
aaa
jle
or
hlt
xchg
push
movsl
shll
lods
mov
orb
xor
push
pop
cld
and
andl
xor
or
inc
and
sub
sbb
das
out
or
or
jae
xor
pushl
shr
push
push
push
fwait
aas
or
cs
dec
pop
fldl
fsubrl
adc
mov
enter
add
rorl
sbb
adc
out
jmp
in
sbb
fxtract
mov
xor
dec
jne
push
xchg
jnp
adc
rcl
xchg
adc
jge
push
inc
push
fs
pop
push
and
stc
pop
cld
jg
out
xor
push
fsubrl
xor
movsb
dec
add
xor
inc
jmp
icebp
dec
xlat
pop
insb
in
sbb
test
imul
add
jecxz
mov
jmp
pop
in
lds
inc
imul
cli
inc
inc
dec
out
push
push
aam
aad
xor
add
inc
or
inc
rorb
adc
and
jbe
xchg
out
shl
jle
test
stc
xor
push
gs
cmc
aad
inc
fldcw
lcall
jnp
jmp
frstor
stc
enter
in
jl
jb
jmp
getsec
aas
add
lods
lret
sub
rolb
sub
xchg
jle
imul
and
cltd
subl
cmc
add
sub
adc
aam
jge
out
mov
lods
stos
lods
inc
insb
out
or
sbb
adc
shlb
cmpb
and
mov
iret
lret
jb
lods
fisttpl
adc
test
inc
rcrb
mov
sub
xlat
xlat
sub
outsl
inc
xchg
ss
xchg
pop
sbb
xchg
push
add
fcomi
ss
sahf
loope
fwait
in
mov
addr16
shr
inc
pop
negl
xchg
aam
stc
xchg
or
jp
lahf
mov
mov
sub
adc
push
mov
jbe
mov
add
pop
push
inc
and
call
pop
and
add
sbb
xchg
cmpsl
add
pop
gs
xor
jno
adc
scas
xchg
decb
inc
sti
xchg
enter
pop
mov
add
xchg
rcr
add
add
xor
push
mov
aas
mov
fwait
sbb
popf
sbb
mov
scas
int
fidivrs
push
outsl
out
icebp
mov
dec
mov
jp
mov
fcompl
lds
mov
ja
pop
ljmp
and
xor
fnsave
pop
pop
sub
xchg
mov
in
enter
stos
xchg
push
ret
push
sbb
push
fnstsw
mov
push
imul
cli
adc
fnstenv
sub
mov
jecxz
inc
push
dec
inc
test
sbb
rcrl
push
cmc
rcrl
das
movsb
dec
leave
push
testb
cmp
mov
mov
xchg
out
jle
ds
es
repz
mov
mov
aad
xor
nop
and
mov
push
pop
movsl
lods
lods
lahf
testb
aad
xor
leave
jle
xor
inc
inc
add
add
in
pop
test
adc
adcb
mov
fisttpll
jno
fists
push
das
mov
shlb
test
pushf
inc
sti
sub
in
sbb
imul
xchg
jecxz
mov
xchg
jecxz
jg
jmp
mov
rolb
test
int
xor
xchg
test
add
test
clc
lds
cwtl
stos
mov
cmp
and
sbb
mov
fstl
mov
popf
xchg
xchg
icebp
sar
sub
lds
sub
dec
cmc
push
adc
adc
or
addr16
decb
push
into
lds
pop
jbe
and
mov
jle
add
pop
leave
jbe
sub
js
dec
xchg
add
in
or
mov
or
add
fwait
inc
push
lock
cmp
xchg
shr
mov
add
lret
cli
cwtl
dec
inc
in
inc
push
xor
xor
or
mov
les
hlt
xchg
mov
mov
out
in
out
cltd
popl
pop
repz
mov
pop
mov
andb
jp
insb
fbstp
or
imulb
xlat
xchg
icebp
push
cmp
pop
and
push
es
aam
xor
push
das
push
or
aam
negl
pop
imul
sub
loope
add
add
fistpl
add
xchg
mov
loope
pop
cmpl
mov
fsubs
or
bound
popa
xor
dec
shll
add
add
stc
pop
push
jns
adc
rorl
repnz
repnz
pop
push
cltd
into
jae
xor
in
pushf
add
arpl
int3
jno
hlt
fs
pop
test
rorb
aaa
push
jnp
test
jl
stc
mov
das
fmuls
cli
xor
fstpl
scas
mov
sbb
in
iret
rcrl
or
or
rcll
decl
rcr
scas
push
and
ret
outsb
lock
je
sbb
push
cmc
mov
mov
cmpsl
and
shlb
sub
mov
sub
pop
cmp
arpl
imull
lea
pop
shrl
rcr
int3
rclb
sbb
ja
jae
stc
adcb
jmp
cmp
stc
mov
call
xchg
aad
push
xchg
insl
push
push
std
insb
nop
mov
cmp
clc
shrl
out
push
iret
inc
sti
int
dec
pop
sahf
sbb
pop
roll
and
xchg
fcomps
enter
dec
mov
ja
sub
lods
repz
xchg
fdivs
push
lret
popa
push
lock
icebp
frstor
cmpsl
repnz
or
flds
xlat
xor
rcl
sub
mov
std
mov
decl
pop
add
negl
cmpsb
adc
push
mov
cmpsb
adc
arpl
sti
std
add
xchg
movsl
in
mov
out
inc
cmp
sahf
add
cmp
enter
adc
insl
lock
lods
cltd
aad
jp
dec
cs
jns
mov
ja
xchg
lds
jne
shll
rcrb
or
out
mov
imul
add
sub
adc
push
jle
das
dec
mov
xchg
pop
jmp
cmp
pusha
mov
push
xchg
push
ret
add
cmp
mov
push
leave
rorl
pop
and
sahf
pushf
jge
mov
fdivrp
or
inc
mov
adc
enter
clc
pop
test
jno
jno
in
aad
dec
cmpsb
push
enter
mov
rcrb
push
inc
test
mov
inc
les
pop
rolb
pop
cmp
xchg
dec
negb
push
out
push
xchg
cli
mov
es
and
pop
call
mov
push
lds
mov
xor
pop
lret
call
cmp
popl
jae
mov
ds
incb
mov
mov
pop
jbe
mov
jae
test
mov
dec
pop
aad
dec
mov
adc
dec
add
sbb
inc
fstpt
push
mov
push
mov
insb
lods
out
fidivrl
inc
sarb
lea
aad
imul
add
test
push
lods
sub
add
inc
test
mov
fisttpll
jns
mov
xlat
adc
gs
in
sub
fwait
pop
push
and
pop
add
sub
test
sub
push
mov
add
divl
jmp
std
pop
mov
stc
data16
movsl
and
inc
fists
dec
jl
mov
imul
mov
push
test
pop
shll
push
out
imul
fucomp
or
xor
push
mov
lds
outsb
pop
sub
xchg
mov
out
inc
aad
aam
in
fbstp
rclb
mov
mov
push
add
in
iret
jmp
imul
leave
fdivrl
in
aad
ret
or
push
sbb
adc
cmovo
fldl2t
push
inc
xlat
xchg
out
je
pop
mov
mov
push
cmpsb
add
sbb
arpl
stos
rcl
jmp
jecxz
out
bswap
jge
mov
lret
jae
dec
sbb
or
mov
out
mov
dec
add
fstpl
addr16
cmp
in
insl
pop
pushf
outsl
push
lock
mov
shl
dec
notl
pop
jle
jg
add
or
jg
hlt
aam
dec
fldt
jmp
insb
dec
lea
sbbb
add
lret
fsubrl
sub
pop
jge
inc
fsubl
xchg
adc
dec
mov
sub
xchg
xor
xchg
sbbl
or
or
scas
out
sti
xor
movsb
push
stos
add
repnz
sub
shlb
pop
les
jmp
jmp
in
sarb
bound
adc
push
sub
ja
enter
mov
orl
cwtl
stc
inc
pop
inc
inc
mov
loope
shll
or
lret
test
popf
lds
pop
stos
pusha
lods
mov
popa
mov
mov
pop
push
add
sbb
pop
pop
add
sahf
test
mov
push
sub
cmp
mov
aad
jnp
sbb
ja
cmc
cmp
popf
pop
dec
sub
mov
lods
aad
xchg
mov
push
in
xchg
loopne
leave
decb
sub
lea
pop
xor
mov
out
push
or
sti
mov
mov
adc
mov
je
ljmp
inc
lea
leave
loop
mov
shl
mov
insl
stos
in
xchg
test
lret
xor
insb
lods
adc
add
or
mov
outsb
or
lock
stc
pop
and
jo
fimull
mov
test
pop
insl
inc
jno
mov
sbb
push
pop
mov
fdivr
bound
js
jo
cmpsb
or
enter
aas
mov
jl
iret
or
mov
mov
push
shrl
push
mov
mov
cs
add
sti
out
out
addr16
gs
std
xor
pop
stos
mov
add
mov
xchg
in
inc
mov
int3
sub
xor
mov
fisubs
add
cld
sbb
lock
stos
jle
fstps
into
mov
xchg
pop
push
push
pusha
push
mov
pop
mov
and
mov
ficoms
iret
jl
or
dec
pushl
out
aaa
dec
inc
xor
push
lcall
sbb
loopne
dec
mov
pop
int3
pop
in
movsl
pop
cmc
xor
rcrl
sub
arpl
test
pop
lahf
imul
test
popa
adc
pop
dec
repz
add
push
jmp
cmp
pop
mov
xor
mov
gs
mov
jge
test
stc
jno
imul
inc
and
repnz
xchg
pop
jp
das
out
xchg
cmp
mov
sub
sbb
repz
loop
sub
fstp
add
ret
daa
jno
push
ret
and
scas
roll
das
rolb
inc
xor
push
in
aad
adc
or
jge
mov
cmp
mov
push
pop
jmp
insb
mov
pusha
xor
xchg
lahf
xchg
loop
dec
jb
inc
xor
inc
sbbb
mov
jmp
int3
lret
icebp
jae
ret
fsubs
sbb
imul
xor
and
dec
stc
cmp
int3
orb
or
push
sarb
mov
sub
in
cmpl
dec
test
addr16
sub
sub
dec
stc
fidivs
rol
dec
aaa
and
es
or
push
loop
add
ja
iret
mov
lahf
lcall
xchg
jecxz
mov
dec
in
clc
insl
push
add
daa
lret
arpl
sub
mov
and
flds
or
jg
lods
sub
aas
pop
test
stc
jb
inc
mov
jno
push
xchg
add
sub
inc
cmp
inc
sti
loope
adc
ret
cmova
scas
lahf
movsb
icebp
pop
daa
dec
fmulp
outsl
arpl
add
aas
scas
push
or
mov
sbb
idivl
in
ficoms
fsubl
push
outsl
xchg
flds
test
cmp
mov
call
in
inc
scas
jmp
xchg
out
imul
popa
cld
push
lcall
mov
jae
popa
and
popf
jmp
push
enter
sbb
loope
into
andl
ret
jnp
mov
shlb
mov
sbb
jle
push
roll
push
js
xchg
mov
add
inc
xchg
mov
arpl
mov
push
movsl
xor
jp
or
iret
shrb
cmpsl
push
cmpsl
fadd
aas
in
push
push
add
adc
orb
fnsave
inc
daa
aas
jmp
mov
push
mov
faddl
push
push
test
lock
test
dec
jns
dec
ds
or
or
push
jno
out
push
jmp
sbb
pop
push
xor
imul
sub
test
xor
push
lods
pop
sbb
mov
push
inc
push
das
icebp
sub
jge
sub
out
jle
roll
fidivrl
dec
cmp
mov
sub
es
sahf
jge
sub
push
inc
aam
push
lret
jecxz
test
mov
stos
movsb
or
mov
clc
rcrb
pop
dec
jg
or
gs
enter
mov
mov
xchg
xchg
jne
adc
addr16
hlt
sbb
jg
add
jns
enter
pop
fdiv
iret
stos
mov
jge
push
mov
sbb
ljmp
lret
shrl
sub
pop
sbb
sub
test
push
in
or
jne
adcl
lahf
or
cmpsl
dec
mov
shll
negl
test
popf
inc
sub
jle
enter
adc
int
vcmpss
pop
sbbl
jne
aaa
mov
jle
shrl
cmpsl
add
pop
enter
shll
cmp
scas
mov
negl
jg
adc
popf
inc
lret
mov
call
push
jbe
pop
push
jns
repnz
aad
push
fmuls
arpl
shrl
enter
adc
pop
mov
cmp
insl
adc
mov
outsl
and
cmp
loop
and
shll
hlt
push
imul
cmp
lds
adc
mov
or
sub
pop
clc
out
in
repz
pop
ss
das
and
or
sar
push
xor
xorl
push
test
sti
out
scas
inc
mov
jo
repz
rorl
stc
sbb
add
and
sub
out
out
xchg
jge
xchg
jns
pop
mov
out
jns
loope
shlb
into
mov
xor
cmpsl
int
cmp
stos
xor
imul
lods
aas
jecxz
jle
sub
fdiv
movsl
add
out
push
mov
sbb
cmpsb
push
mov
fiadds
popa
fnstsw
std
shll
pop
or
sarb
push
push
pop
mov
and
jno
mov
push
jbe
pop
jnp
enter
test
mov
nop
aaa
js
dec
cli
mov
xor
mov
stos
mov
pop
nop
and
xchg
sub
out
stc
adc
xchg
sbb
adc
or
sti
mov
jmp
xor
xor
clc
fwait
jnp
pop
mov
stc
stos
pop
and
sub
in
pop
in
gs
in
jge
pop
jmp
inc
cmpsb
jae
mov
nop
leave
sbb
js
push
dec
ja
dec
xor
imul
dec
inc
jl
std
rcll
cli
nop
popl
mov
flds
js
fs
fstps
push
int
xor
sub
cmpsl
cmp
jno
or
mov
dec
popa
cltd
hlt
dec
push
cmp
iret
lds
mov
pop
jg
mov
xchg
xchg
jno
rcll
aad
fisttps
pop
shll
or
je
inc
stc
out
call
pop
ljmp
adc
sbb
add
mov
dec
out
jp
out
popa
js
dec
jbe
mov
cmp
bound
push
adc
and
adc
push
andb
xor
cmp
xor
push
fdivrs
push
inc
and
jecxz
pop
hlt
mov
xor
sbb
outsb
aaa
push
flds
pop
push
ss
ljmp
ja
call
mov
movsl
dec
fisubrl
cmp
outsb
testb
mov
cli
jge
jg
xchg
jge
inc
sbb
mulb
ret
pop
dec
out
icebp
loopne
out
push
bnd
js
sub
repnz
js
stc
mov
add
mov
popf
stc
aam
data16
imul
adc
rclb
mov
std
test
outsb
sub
scas
add
mov
mov
sbb
pop
std
aam
stos
and
push
incb
adc
jg
sbb
fists
mov
lahf
in
jl
nop
add
aam
or
hlt
pop
fisttps
mov
push
stc
in
stos
std
loope
and
inc
xchg
icebp
xor
pop
dec
push
jae
jne
mov
sub
add
nop
mov
outsl
cmp
mov
mov
sub
sub
arpl
mov
adc
xlat
movsb
push
add
shll
jle
mov
test
mov
xor
daa
decb
dec
and
aas
mov
das
ret
mov
or
xor
jg
mov
pop
ret
sub
sti
sahf
ror
int3
mov
add
xor
fs
in
sbb
lahf
push
imul
pop
push
int
jp
cltd
pop
inc
xchg
or
lahf
adcl
and
stc
lock
push
lcall
jbe
dec
rol
mov
enter
xor
dec
loop
fldl
sti
mov
popa
bswap
jae
in
add
in
jl
inc
dec
outsl
cmpl
cmp
in
add
rcr
mov
cmp
test
mov
outsb
lea
add
mov
pop
cmp
xchg
jg
dec
das
roll
scas
push
pop
sti
sarl
mov
leave
adc
and
xchg
xchg
aad
movl
mov
lret
loope
sbb
das
mov
push
cmp
push
fsubp
insb
pop
push
or
dec
outsl
dec
clc
sub
pop
xchg
cmpsb
push
dec
dec
into
jae
inc
ds
sbb
inc
cmp
mov
dec
cli
in
add
imul
movsl
mov
imul
fmull
nop
insl
test
aad
lock
aaa
pop
into
mov
jge
jmp
ficomps
or
mov
jno
cmp
stos
cmp
je
xor
testl
daa
sub
inc
rcrl
fcoms
ret
jmp
daa
cmp
fcos
rolb
leave
push
pushf
lret
sbb
in
ja
dec
or
popa
dec
int
xchg
dec
xchg
idiv
pop
jae
jle
into
inc
adc
testb
sbb
fstps
cmp
cmpsb
mov
test
and
adc
cld
mov
test
cmpsb
pop
jmp
sub
dec
pushf
nop
fildl
aas
int3
mov
and
rclb
ret
shll
push
fidivs
in
mov
lea
lds
popf
push
mov
int3
mov
jb
cmp
and
jmp
ljmp
cli
jne
inc
out
mov
xchg
sbbb
std
adc
mov
lds
das
enter
sub
and
roll
hlt
hlt
xchg
and
fstl
xor
les
jecxz
loope
xlat
cld
jg
sbbl
mov
scas
mov
sbbb
xor
repnz
add
cmpsb
sbbb
adc
das
jge
inc
jle
cs
std
dec
mov
mov
adc
in
pop
mov
scas
bound
inc
jo
mov
and
outsl
mov
scas
sti
mov
mov
xchg
inc
inc
nop
add
fs
jne
mov
repnz
lods
filds
push
outsl
lret
lds
pandn
push
xor
fadds
jmp
xor
lret
outsl
out
gs
push
rclb
les
test
es
sub
inc
push
lahf
mov
std
cld
inc
mov
jns
add
push
mov
mov
mov
les
xor
add
hlt
jle
nop
imul
mov
insl
aas
sti
xchg
cmpsl
bound
sub
out
xlat
loopne
in
jg
ret
movsl
into
xchg
out
inc
pop
push
les
inc
les
sahf
mov
repnz
stos
pusha
out
pop
or
adc
sub
push
inc
push
or
cmpsl
adc
jle
hlt
mov
fwait
sbb
xchg
iret
fstps
add
xchg
fisubrs
or
nop
repnz
push
cmp
cld
lods
and
inc
jnp
xchg
fbstp
into
pop
fcmovnbe
addr16
mov
push
xor
fists
cmp
gs
fs
scas
pop
pushf
push
rcl
pusha
fcoml
mov
sbb
inc
mov
sbbb
xor
mov
cli
nop
cmpsl
lret
out
fdivrs
shrb
or
mov
dec
add
out
stc
jno
stos
pusha
push
fimull
lcall
mov
pop
push
imul
out
test
fmull
add
mov
dec
andl
out
xor
mov
mov
jno
pop
fs
das
jl
in
shr
push
xchg
ror
cmpsb
scas
dec
jns
jp
clc
adc
xor
push
dec
mov
or
adc
icebp
stc
mov
mov
push
cmp
sub
loopne
push
mov
lds
push
dec
popf
sbb
mov
cmp
sahf
sbb
or
pop
shr
jbe
dec
negb
xchg
push
push
mov
dec
sbb
aas
jp
xlat
add
popa
xor
xchg
in
and
call
xlat
ficomps
add
jmp
psrad
mov
sahf
sub
lods
mov
mov
xor
push
inc
fisubs
cmc
test
dec
popf
push
clc
loope
inc
sbb
mov
clc
pop
loop
fcomps
mov
iret
imul
das
mov
dec
push
in
jne
cmp
mov
add
push
ja
cmp
dec
cmc
xchg
fistps
rol
shr
and
bound
mov
rcrb
and
fcmovnbe
in
jns
dec
add
lds
ja
xchg
adc
sub
pslld
mov
test
mov
imul
sbb
xchg
lds
in
dec
cmp
pop
pusha
jp
push
add
jbe
push
dec
cli
or
inc
jns
fnstsw
xchg
inc
ret
add
fwait
cmp
js
dec
je
loopne
rorb
add
cmp
dec
cs
stc
stos
adc
or
mov
mov
jp
sahf
popf
movsb
shlb
pop
pop
jle
fcoml
mov
hlt
inc
cwtl
sbb
jb
inc
mov
mov
add
icebp
aad
jg
xchg
fcompl
pop
pop
xchg
stc
adc
loopne
inc
loope
adcl
xor
fcoms
xchg
mov
in
dec
jae
lcall
inc
lahf
mov
pushf
test
pop
dec
adc
scas
test
mov
sbb
rol
idivl
pop
dec
aaa
jns
adc
ja
xor
hlt
or
fs
jb
aaa
in
lds
sub
jg
in
mov
ret
cwtl
jg
jno
pop
or
xor
iret
sub
nop
sbb
sub
inc
mov
fcmovnu
pop
mov
aad
test
out
mov
xor
cmp
jne
shl
test
mov
repnz
les
iret
inc
dec
add
fdivrs
pop
jbe
mov
in
fbld
adc
jo
repz
xchg
out
and
insb
fcmovnbe
scas
test
dec
inc
xor
add
stos
sub
cmpsb
xlat
cld
icebp
testl
dec
lods
and
push
cmp
ljmp
ds
aaa
xlat
arpl
dec
mov
std
jge
mov
and
das
lds
scas
xchg
fcom
xor
sahf
mov
jb
aam
out
sbb
gs
mov
gs
add
jo
scas
or
sub
inc
push
je
or
xchg
jns
in
repz
cmp
push
jo
mov
dec
and
push
clc
sub
mov
xor
aaa
sub
test
cld
stos
push
out
lods
imul
inc
pop
sub
clc
iret
push
ja
inc
and
insb
xchg
cmp
add
fcomps
adc
jae
inc
xor
dec
push
call
or
xchg
fimuls
or
hlt
cltd
mov
add
imul
lea
lret
mov
test
test
outsb
mov
ret
repnz
fstps
ljmp
hlt
mov
xor
mov
push
mov
or
lea
and
jbe
je
in
add
sub
rolb
cmpb
and
pop
inc
jl
cltd
icebp
xchg
add
push
dec
inc
movzwl
add
lods
push
insl
pop
and
sbb
xor
add
and
add
jno
into
jae
ljmp
es
in
pop
rorb
jae
dec
xlat
shll
cmp
pop
mov
out
fbstp
add
popf
icebp
repz
mov
ret
or
add
pushf
icebp
add
push
hlt
icebp
fildll
push
loopne
aam
dec
push
add
mov
inc
out
jbe
cmc
icebp
jmp
push
sarl
push
inc
shl
gs
add
jle
sbb
mov
jle
dec
movsl
cmp
je
out
jns
fldl
or
sbb
arpl
xor
sbb
pop
ficoms
loope
cmpsl
fbstp
in
hlt
and
sub
lods
insl
pop
lahf
mov
inc
rolb
enter
repz
scas
mov
mov
and
and
pop
shr
rolb
mov
sbb
test
sub
pop
adc
es
pop
push
sub
mov
inc
and
push
repz
mov
xchg
bound
aam
in
mov
les
std
outsb
dec
and
test
shrl
sahf
inc
fiadds
and
fstl
pop
inc
mov
repnz
insb
imul
sub
mov
inc
jmp
sti
enter
nop
dec
repnz
dec
test
test
sbb
pop
xchg
imul
addr16
es
dec
aas
imul
push
bound
andb
push
fcoms
push
call
aad
fsubrl
and
sbb
addb
jne
adc
addb
in
in
imul
push
jno
daa
or
jo
fisubl
sub
push
xlat
sahf
movsb
sarl
pusha
pop
mov
xchg
add
push
call
add
push
daa
jle
pop
and
mov
int3
lcall
js
dec
icebp
mov
push
in
adc
inc
icebp
xlat
arpl
jmp
mov
ja
jecxz
out
pop
aad
mov
sar
inc
adc
aad
addr16
mov
sub
hlt
xchg
scas
aaa
pop
pop
out
mov
std
cmp
lock
cs
and
aas
push
push
jns
adc
xchg
cmove
inc
or
mov
cwtl
mov
lret
push
dec
inc
adc
push
in
jp
add
dec
lcall
sti
int
mov
repz
jmp
cli
pop
xchg
pusha
shlb
inc
gs
rcl
lock
outsl
xchg
jle
jae
add
call
mov
inc
adc
push
and
cmp
outsb
xchg
add
rclb
lock
sub
jmp
mov
repz
fistl
std
aaa
data16
dec
xchg
rcrl
repnz
add
into
jns
dec
hlt
dec
mov
fisubrl
and
ret
add
scas
or
or
and
out
cmp
push
arpl
mov
ss
or
mov
lcall
dec
clc
push
sbb
xchg
stc
testl
cmpsb
inc
ret
xchg
mov
add
adc
inc
adc
jl
leave
sbb
pusha
js
mov
out
sub
stos
aaa
bound
jl
xor
xor
adc
or
scas
aas
shrb
clc
into
or
sub
xor
push
cmp
cld
aaa
push
out
in
popf
cmpsb
imul
ljmp
xor
js
add
jp
push
cmp
jbe
sahf
sub
fstps
aam
sbbl
pop
push
insl
xchg
icebp
popa
adc
es
call
rolb
fsubl
cmp
mov
rolb
mov
test
call
add
dec
aam
jl
insl
pop
outsl
push
pop
pop
testl
gs
insb
scas
adc
loope
mov
call
insb
ss
xor
out
xchg
or
addl
aas
dec
cli
push
fnstsw
hlt
dec
and
jp
mov
fnstenv
pop
loope
mov
outsl
inc
push
xor
add
or
and
pop
iret
sbb
inc
in
ss
mov
fadds
sbb
inc
icebp
mov
call
mov
jno
inc
push
dec
inc
xchg
std
and
lods
addr16
push
jno
xchg
mov
cmp
jne
call
mov
or
outsb
lcall
mov
inc
icebp
icebp
imul
mov
bound
aad
mov
cmc
scas
test
mov
jno
adc
test
jp
clts
addl
scas
xchg
mov
incl
pop
pop
dec
xchg
xchg
xor
sarl
imul
rolb
aaa
push
xchg
bswap
add
mov
jge
lods
aam
lret
and
mov
push
cmc
fisubs
adc
outsl
das
or
pop
mov
out
aam
and
int3
inc
mov
sbb
jle
out
daa
push
mov
loop
push
in
movsb
jo
stos
scas
pop
mov
test
xor
or
pop
pop
add
sbb
adc
push
jp
outsb
sbb
aad
stc
xchg
and
lret
test
test
add
pop
mov
cmc
mulb
pop
es
sub
dec
add
xor
ficompl
push
aas
in
inc
adc
sub
push
ss
dec
mov
xchg
jp
push
clc
in
lea
aam
dec
daa
jno
pop
jg
sahf
test
xchg
outsb
xor
jl
cmpsl
push
movsb
pop
jb
dec
lock
fimuls
push
mov
cmp
or
jo
sarl
push
sbb
mov
bound
sbb
aad
ret
cli
adc
movsl
jg
test
mov
lock
or
xchg
sbb
lret
out
shlb
jne
mov
add
ret
mov
mov
stos
ds
push
lea
fstps
in
arpl
adc
cmp
imul
jno
mov
and
and
shrl
adc
in
mov
push
inc
jge
dec
pop
push
scas
jae
imul
repnz
mov
icebp
icebp
outsb
mov
jmp
scas
std
int3
stos
in
push
ret
aas
and
je
subb
sub
jno
adc
repnz
sbb
in
push
mov
out
sub
sbb
jns
negl
aam
push
fisttps
clc
dec
icebp
mov
int
pop
fiadds
or
mov
sbb
jl
mov
outsb
scas
call
shr
pop
ja
inc
dec
add
push
sub
xchg
rcl
daa
scas
ljmp
ds
movsl
mov
call
je
out
and
insl
push
and
jmp
je
sub
fs
jl
ds
movsl
pop
jae
insl
add
pusha
jae
xchg
inc
rcll
jg
je
xor
add
xor
and
rcrl
dec
pop
in
rolb
and
test
jne
testl
outsl
scas
jl
movd
xchg
nop
or
frstor
ja
adc
jle
lds
pop
jecxz
daa
or
mov
loop
into
cli
add
lods
insb
jnp
sti
add
inc
int3
in
push
mov
inc
std
mov
repz
sbb
repz
mov
aaa
dec
imul
mov
nop
pop
scas
out
sti
aam
push
ljmp
loop
data16
icebp
in
orb
adcb
pop
leave
jno
test
pushf
add
adc
and
das
xchg
dec
push
fnstcw
mov
stc
int3
int
fs
or
ret
jl
xchg
cs
mov
lea
pusha
pushl
fimuls
cwtl
sbb
shl
ss
add
fucomp
inc
ret
enter
xor
testl
cmp
jb
lods
adc
xchg
jmp
fcmovbe
pusha
pushf
adc
repnz
out
push
dec
pop
test
or
repnz
sub
jo
fxch
cwtl
adc
hlt
cmp
adc
add
jge
popf
jno
loopne
inc
mov
jmp
das
jb
js
push
fistps
sub
pop
in
or
sahf
loop
arpl
jecxz
fsubrl
iret
std
push
fcmovb
xchg
sarl
imul
or
cmp
leave
in
jge
cwtl
dec
sbb
sub
std
sub
inc
out
pop
out
stos
imul
adc
scas
cltd
in
pop
hlt
addb
jg
xchg
xor
leave
add
mov
jp
add
lods
push
test
inc
cmp
dec
addr16
inc
jmp
lahf
xor
adc
mov
pop
mov
pop
lods
test
js
in
jmp
out
inc
sarb
pop
movsb
es
aam
push
add
aad
add
sub
push
lahf
push
div
xchg
stos
rcll
cld
mov
mov
lds
ret
jb
jmp
jne
adc
pop
fstl
mov
inc
std
into
testl
cmpsl
leave
adc
fnstsw
xchg
fisubl
pop
sub
hlt
jns
movsl
cld
das
cmp
out
push
aas
lds
sub
dec
mov
call
fidivrs
inc
test
pushf
adc
and
cmpsl
push
sub
fisttpll
jns
shr
push
lret
arpl
dec
lret
ret
ja
xor
scas
xor
movsb
addl
inc
xchg
or
lods
inc
imul
pop
leave
loopne
push
push
pop
xor
push
jl
push
and
mov
dec
jecxz
cltd
and
inc
inc
jge
adc
add
in
imul
test
nop
popf
add
jecxz
into
in
xchg
and
popf
imul
jge
test
dec
adc
mov
dec
push
sub
and
lds
cmpsl
sbb
xor
int3
add
jno
and
aam
fcomps
jb
add
adc
mov
sahf
pushf
pop
xor
mov
mov
xor
sbb
jl
add
push
and
sarl
iret
insb
and
test
idivl
jle
subl
lock
pop
adc
ret
fnstsw
or
add
aam
sbb
push
or
add
mov
mov
lea
in
movsb
pusha
cmp
aad
and
aad
mov
sbb
sub
jb
es
inc
or
add
in
bound
xor
adc
or
iret
andps
in
sarb
add
dec
mov
cmpsl
rcrl
or
add
sbb
jp
mov
xchg
roll
fcoml
lds
mov
xor
mov
adc
lods
dec
push
or
dec
iret
add
push
dec
ret
je
push
mov
inc
inc
rcrl
push
ljmp
mov
mov
adc
mov
enter
push
ret
dec
popf
movsl
push
std
xchg
aam
jae
xlat
movsl
mov
push
divb
jnp
adc
fldl
jne
mov
std
and
jae
sub
or
hlt
rorl
sar
pop
inc
or
hlt
in
xchg
mov
lret
sbb
inc
es
aas
xor
and
jecxz
jge
test
ds
mov
and
adc
sbb
in
fcom
mov
sub
je
jo
cmc
dec
xchg
iret
sarl
xor
jg
clc
xor
imul
xor
out
jle
mov
test
or
and
insl
dec
adc
lea
sahf
mov
jne
inc
push
addr16
movsl
out
rcrl
mov
stc
fnstsw
mov
nop
popa
mov
dec
sub
push
xor
push
jmp
jb
test
mov
sti
rcr
pop
pop
cmp
jae
pop
rolb
sbb
lock
dec
fdivr
test
and
xor
dec
xchg
mov
jno
inc
rol
or
push
insl
add
bound
xchg
and
fisttps
mov
aad
xchg
and
push
push
hlt
pop
rol
adc
sti
clc
cmp
repnz
lea
fs
mov
cmp
jmp
ljmp
cmp
insl
shll
xchg
stos
cmp
fwait
cmc
ja
mov
adc
lcall
lcall
faddl
enter
xor
jne
addr16
or
push
mov
push
pushf
dec
ret
mov
data16
cmpsl
xchg
adc
paddw
or
inc
sbb
call
mov
aam
push
int
dec
es
into
leave
xor
mov
xchg
pop
jmp
leave
or
push
scas
aam
sbb
and
mov
push
cmpsl
xor
ret
cs
inc
dec
push
inc
out
in
jmp
push
in
fcompl
outsl
xchg
mov
sub
addr16
ret
push
test
xor
loopne
jecxz
aas
mov
arpl
mov
jo
out
and
rcr
pop
xchg
push
mov
cmpsb
inc
push
push
enter
testl
out
icebp
jge
or
pop
xchg
mov
lea
insl
in
imul
jno
lea
in
sbb
pop
pop
popf
push
mov
mov
xchg
mov
jmp
out
dec
xchg
roll
mov
sbbb
dec
xchg
xchg
out
mov
rorb
push
jecxz
sti
sub
push
test
cmp
push
sbb
mov
push
jecxz
mov
pop
inc
jle
fsubrl
and
mov
test
repnz
jge
ja
sub
push
inc
int
and
das
xor
jecxz
shll
aas
das
sub
push
push
xchg
mov
ss
xorb
in
or
dec
mov
lea
adc
xor
mov
and
jmp
je
clc
movsb
sub
popa
and
xchg
leave
xor
adc
cmp
and
mov
jmp
jmp
sarl
add
xlat
xor
dec
jge
add
dec
push
xor
hlt
pushf
xchg
jbe
fistps
pop
subl
fdivrs
out
push
push
inc
int3
mulb
test
push
out
mov
dec
pop
rorb
sbb
jae
int3
cwtl
popf
in
pop
addb
push
out
adc
inc
jno
fwait
mov
push
lret
sub
repz
mul
in
idivb
call
and
add
jl
in
arpl
jp
bsr
into
mov
pop
dec
out
mov
pop
mov
je
mov
pop
movsb
xchg
pop
sti
lcall
outsb
les
push
xor
xchg
cmp
mov
ljmp
gs
xor
les
incl
test
mov
push
pop
push
aam
and
aad
dec
sbb
sbb
in
adc
sbb
mov
pop
pop
dec
sbb
imul
insb
inc
sub
insb
or
push
insl
ret
xor
leave
mov
not
sbb
dec
cli
jge
pop
jge
shrb
mov
mov
inc
jno
or
ret
std
mov
das
lds
sarl
mov
push
out
sbb
xor
xchg
imul
mov
mov
addr16
imull
scas
fmul
mov
mov
jo
mov
cld
push
popa
lret
mov
shlb
shll
sub
inc
movsb
out
push
icebp
ljmp
jne
out
sbb
enter
rorl
arpl
push
icebp
inc
lret
call
cmovbe
gs
mul
jge
push
or
jp
xorl
insb
cmp
sbb
mov
pop
xchg
push
fiaddl
xlat
hlt
or
in
mov
cli
mov
jg
frstor
push
jecxz
std
mov
cmp
jg
cmp
daa
mov
shrb
stos
shl
out
std
jecxz
or
mov
pop
loopne
mov
stos
jbe
dec
xchg
aaa
jno
arpl
shrl
adc
call
outsl
pop
divb
and
pop
pop
mov
pop
jle
xchg
ret
orl
xchg
or
jnp
into
lcall
repz
fisubs
jb
movb
push
jbe
mov
cli
fcompl
popl
fst
dec
add
add
adc
cld
add
shrb
jo
mov
sti
aad
scas
test
adc
sbb
cwtl
adc
aas
add
jge
and
mov
mov
cld
xchg
adc
sbb
push
xor
and
stos
gs
dec
mov
out
sbb
ljmp
lcall
cli
jae
or
movsl
shr
rcll
mov
mov
dec
fists
out
dec
mov
mov
repz
clc
decb
jbe
xchg
icebp
push
adc
inc
inc
or
in
mov
pop
in
and
es
cltd
xchg
sub
xor
mov
mov
ljmp
imul
inc
inc
mov
push
outsb
movsb
cmc
out
cmp
mov
push
std
xchg
xchg
sbb
scas
fstpl
mov
mov
push
out
fwait
xchg
jmp
cmp
sub
arpl
adc
lds
mov
jns
mov
mov
push
and
fwait
mov
in
fdivl
jo
mov
or
std
adc
popf
xor
stos
sbb
dec
sub
mov
clc
mov
sub
icebp
icebp
and
push
pop
xchg
cmpsl
aam
adc
movlps
stc
sub
stc
cli
ljmp
adcb
lahf
jl
xchg
sbb
ds
push
mov
addl
xor
shll
pop
cmp
pushf
mov
loop
jno
sti
inc
pop
sar
in
jo
sub
std
jnp
adc
in
cmp
rolb
shlb
shl
ret
mov
mov
enter
mov
mov
outsb
xchg
lret
pushf
jmp
popf
push
pop
cmc
lods
sub
cmp
mov
out
into
shlb
shlb
push
sub
jg
ror
add
aaa
aam
mov
aad
xorl
and
mov
sub
mov
dec
xor
dec
int3
mov
push
push
push
shrl
iret
test
int3
and
and
es
adc
adc
testb
stos
pop
adc
jmp
mull
iret
mov
add
aam
cli
pop
insl
adc
push
jmp
jmp
mov
sbb
or
add
xor
aaa
aas
cmp
or
dec
push
push
outsb
int3
xor
insb
sbbb
pop
icebp
inc
stc
test
mov
call
pusha
rolb
add
xor
aam
push
inc
in
imul
fcmovnb
inc
std
hlt
push
adc
add
lret
fisttps
rorb
insl
add
stos
add
pop
inc
lret
xlat
and
inc
popa
push
pop
xor
inc
xchg
inc
int
fisubrs
in
push
and
fidivrl
stos
mov
sbb
lock
aam
push
call
jne
aaa
dec
mov
orb
or
cmp
daa
push
pop
mov
aad
adc
dec
out
leave
xchg
daa
mov
mov
filds
stos
xchg
fdivrl
add
inc
jmp
int
mov
xchg
pop
loopne
cltd
push
dec
ds
jo
and
shlb
xchg
push
cmpsl
xor
and
dec
sbb
pop
add
push
mov
ljmp
mov
jg
fstpl
mov
jbe
out
push
pop
out
or
lcall
pop
leave
stc
jnp
int3
mov
mov
add
adc
add
mov
sub
pop
xchg
pop
xchg
push
mov
fsubrl
jmp
in
stos
dec
gs
cmp
orl
aaa
jns
sub
cmp
in
jbe
push
cwtl
sub
xchg
mov
andb
mov
subb
repz
xor
fistpl
push
in
inc
jge
mov
inc
call
xchg
jae
jmp
lods
pusha
cmp
inc
xor
push
cld
mov
push
cld
push
jle
test
xor
jl
or
adc
xchg
aas
xlat
stos
push
fidivrs
adc
call
xchg
notb
out
cmpsb
mov
aaa
inc
aad
dec
or
stos
arpl
mov
and
cmpsl
stc
cmpsb
jmp
mov
inc
inc
sahf
adc
mov
push
test
cwtl
gs
pop
pop
sbb
outsl
ds
sahf
popf
das
movsb
cltd
jecxz
push
inc
andl
sub
std
lret
orl
push
fnsave
push
lods
inc
shrl
xchg
cmpsl
loop
pop
or
sti
loop
int3
jecxz
repnz
cmp
pop
cmpsl
notb
int
aas
push
aaa
xor
mov
loope
mov
cltd
idiv
mov
mov
std
jne
ds
inc
lahf
sbb
sub
clc
xchg
adc
or
push
dec
mov
cli
jae
jecxz
les
adc
pop
mov
decb
scas
iret
movb
push
test
add
outsb
mov
movsb
jo
pop
ret
and
or
inc
mov
sub
popf
nop
sbb
into
mov
xchg
dec
push
inc
and
les
das
stos
test
mov
or
sub
insl
inc
push
sarb
ficompl
ss
shrb
jecxz
fs
xorl
sub
mov
pop
or
cmp
xchg
test
mov
loopne
push
mov
test
and
add
mov
sub
push
jae
mov
cltd
stc
dec
nop
decb
cmovns
clc
mov
inc
les
frstor
or
xor
jne
push
gs
jae
shr
inc
push
add
xorl
sub
fldz
into
test
xchg
inc
push
mov
shlb
test
add
out
push
add
jne
xchg
inc
cmp
push
pop
adc
and
xchg
mov
shrb
pop
sub
push
adc
fwait
insb
or
mov
mov
jl
sub
push
cmp
scas
in
flds
inc
rcrb
cmp
lret
mov
lahf
hlt
dec
in
rclb
pop
nop
addl
fwait
adc
mov
test
sbb
jbe
push
adc
pop
dec
data16
std
lds
dec
or
fsubs
inc
pop
jae
aam
imul
mov
hlt
cmp
icebp
shrl
pop
mov
dec
mov
sbb
adc
mov
xlat
test
xchg
dec
scas
shr
xor
mov
lahf
cmpsb
cmc
cmpsl
out
call
mov
adc
adc
shlb
dec
cmp
adcl
icebp
jae
sub
mov
leave
je
jmp
push
pushl
nop
hlt
sbb
push
lcall
andb
fnsave
jmp
fsubrs
outsl
inc
xor
pop
mov
insl
das
cmc
xchg
or
inc
addl
hlt
loope
cmpsl
les
mov
add
leave
aas
popf
mov
sbb
pusha
arpl
xchg
sarl
out
add
pop
add
stos
add
sbb
js
or
adc
fdivrl
iret
inc
cmp
pop
jns
stc
push
incb
das
je
stc
xchg
mov
into
and
js
mov
cwtl
dec
mov
out
adc
mov
sbb
pop
cmp
jmp
push
bound
mov
icebp
ss
mov
push
cltd
and
xlat
test
dec
push
push
loop
dec
dec
arpl
xchg
sbb
push
into
int3
and
jne
sub
mov
shll
leave
dec
imul
pop
out
xchg
pop
sub
mov
test
es
loop
iret
and
fldl
pop
mov
btc
in
insl
lret
ss
cmp
sti
add
sbb
pop
and
push
in
jle
mov
mov
mov
jae
xchg
mov
sub
fcompl
jmp
aaa
xor
lds
add
pop
repz
rorl
out
push
lods
aaa
jae
sub
and
scas
lret
or
hlt
lea
scas
xchg
pop
mov
aas
insl
xor
sub
call
dec
or
stos
xlat
or
andl
aam
jmp
dec
mov
lea
sub
jmp
out
push
push
insl
or
fidivrl
adc
aas
mov
mov
mov
inc
negb
or
ljmp
lea
cmp
inc
jge
cmpsl
int3
std
cwtl
xor
mov
jl
hlt
jmp
mov
dec
and
ljmp
xor
add
test
inc
lcall
cmp
push
push
push
sbb
repnz
sbb
sbb
dec
dec
jae
mov
lea
inc
lea
jno
aaa
sub
out
xor
imul
hlt
arpl
addr16
adc
pushf
or
clc
lcall
rcll
out
adc
push
xor
xor
bound
arpl
or
jle
pop
in
dec
sbb
aad
sahf
push
jns
lds
popf
mov
mov
in
fchs
fs
sahf
xor
mov
and
das
cli
and
sub
pop
enter
loop
pop
test
sbb
sti
push
ret
repnz
rcll
popf
push
mov
dec
mov
inc
adc
xchg
int3
fdivl
lret
xchg
ljmp
mov
xor
clc
stc
push
repnz
sbb
xor
push
lods
out
or
inc
pop
push
jmp
ret
cmp
push
xor
inc
ret
mov
ja
sbb
ljmp
aam
pop
jo
inc
std
rclb
mov
shrb
scas
andl
cwtl
movl
add
enter
out
sbbb
imul
push
div
stc
or
inc
xchg
jnp
cmp
cmpsb
call
cmp
rcl
fisubrl
ffree
shlb
negb
push
sub
push
add
lret
fidivl
mov
or
roll
lea
loop
xor
xchg
jl
rcll
int
mov
lcall
xchg
mov
pop
out
movsl
or
das
adc
cmp
sbb
loopne
aam
aad
leave
das
dec
add
xor
pusha
cmp
cmp
push
mov
insl
ret
mov
shrb
mov
xor
dec
jmp
pop
add
jle
mov
dec
arpl
push
mov
sbb
jmp
test
mov
test
mov
sub
mov
aad
or
add
cld
fsts
jne
push
ds
inc
call
cmc
dec
jb
dec
imul
negb
adc
mov
lret
push
daa
shl
mov
pop
mov
cmc
std
add
mov
push
adc
pminub
cmp
cmp
and
clc
push
mov
adc
incl
outsb
repz
fmull
cmp
lock
lds
mov
clc
dec
push
mov
lods
push
stos
sub
adc
loope
jne
cs
mov
lcall
loop
cmp
lock
lea
out
adc
mov
rorb
movb
insl
xchg
addl
mov
or
pop
and
sub
jp
divl
popa
ret
jle
scas
mov
es
nop
push
sti
imul
pop
cmp
rclb
sahf
ljmp
dec
dec
adc
out
jge
mov
ja
ds
pop
mov
popf
jg
flds
imul
int
pushl
bound
jo
and
pushf
mov
cltd
inc
xor
jne
or
lods
xor
xor
gs
cmp
pop
int3
inc
pop
fldl2t
sub
mov
loop
or
and
pop
hlt
scas
inc
and
cmc
shll
out
shll
sti
xchg
hlt
ret
imull
push
xchg
movsl
aas
lds
les
repz
xchg
pop
idiv
xlat
push
dec
xor
std
and
jns
hlt
ja
adc
sub
sbb
sbb
loopne
push
enter
mov
pop
sub
sub
popl
jb
nop
in
sub
cmp
imul
daa
xchg
movsb
mov
pop
lahf
xor
lahf
nop
push
loope
mov
shll
repnz
xchg
mov
mov
xchg
pop
pop
mov
add
push
jl
repnz
fmul
ror
cmc
fsubl
cltd
or
dec
xchg
mov
lret
mov
mov
aad
fdivrs
mov
popf
ljmp
cmpsl
mov
data16
clc
aad
pop
lahf
lds
stos
fsubl
add
adc
mov
adc
mov
insb
push
sub
sbb
out
inc
mov
icebp
rclb
jp
jmp
movl
mov
mull
aad
inc
inc
insw
and
cmp
inc
jb
push
ret
addr16
fildll
iret
dec
or
push
dec
jno
jge
ja
out
mov
stc
sub
gs
fwait
sub
ret
adc
dec
rcrb
ja
lods
inc
call
clc
lods
popf
mov
and
adc
xchg
cmp
andl
xchg
inc
insb
push
das
push
pop
dec
push
sub
xor
xlat
sbb
scas
loope
fcmovnbe
nop
cmc
in
and
xor
mov
mov
push
sbb
mov
jnp
stos
mov
dec
test
dec
sbb
addb
mov
inc
jb
je
lret
xchg
sub
inc
lock
add
scas
fldl
dec
mulb
stos
add
pop
negb
outsl
enter
call
idiv
int
mov
push
fldl
pop
inc
mov
jp
mov
out
mov
fdivrl
fwait
jne
cli
sbb
push
and
cmp
es
or
inc
popa
xlat
and
lods
adc
mov
stos
out
in
imul
pop
shll
insb
int3
outsb
cmc
inc
ljmp
in
dec
sub
pop
stc
sub
sti
jmp
popa
in
mov
cwtl
int3
frstor
inc
in
cmp
movsl
xlat
aaa
and
dec
je
push
cmpsl
sub
push
mov
mov
hlt
movsb
xchg
sahf
dec
cmp
push
add
movsl
pop
icebp
push
ficoml
std
lea
movsl
sbb
adc
adc
mov
out
add
int3
mov
lret
cmpsb
cltd
enter
mov
rorb
fsubs
jp
out
and
fidivrs
aaa
jmp
stos
mov
pop
jns
arpl
push
test
out
out
fisttps
std
rcrb
test
jb
fisubrs
or
mov
xor
fwait
arpl
xor
mov
mov
jae
ss
orl
rorl
stos
lahf
scas
inc
mov
add
dec
mov
dec
lret
add
cmp
fisttps
orl
std
repz
rclb
cmp
push
movsb
pop
jne
lods
test
test
shll
scas
das
lods
inc
lret
xor
movsl
aaa
pop
mov
loope
and
sub
and
cmp
mov
scas
push
sbb
movsb
jns
das
push
cltd
add
pop
test
add
jno
dec
push
stos
mov
mov
out
incl
iret
fdivl
push
add
enter
mov
pusha
leave
jmp
iret
insb
sar
test
jb
std
clc
pop
in
jb
mov
lock
ret
and
mov
cmc
test
aad
fistl
dec
mov
xcrypt-cbc
cmpsl
pop
stos
fwait
mov
inc
lock
popa
mov
icebp
inc
mov
popa
inc
cli
arpl
add
jge
push
into
sahf
inc
shrl
push
icebp
cmp
inc
xor
int
das
cld
push
sbb
sbb
add
ljmp
out
pop
js
stc
divb
and
jge
mov
out
push
inc
and
fwait
sar
jmp
sub
dec
mov
scas
je
lret
or
outsl
repz
lret
icebp
push
xchg
push
loopne
mov
push
jmp
mov
ss
stc
ss
lret
and
jecxz
lock
aad
pop
push
pop
leave
jecxz
sbb
jbe
xchg
cmp
cld
adc
lcall
sti
mov
mov
popf
mov
mov
outsl
mull
mov
xchg
pop
out
xor
pop
adc
out
jmp
adc
mov
icebp
pop
pop
mov
loope
outsb
scas
lock
repz
rcll
decb
lock
pop
cmp
push
shlb
fdiv
push
or
adc
out
jle
aam
jge
rorl
add
adc
mov
sti
aaa
dec
fadds
pop
add
sets
jle
fsubrl
push
xchg
mov
mov
in
jle
dec
movl
outsb
pop
mov
ds
and
dec
nop
mov
shll
in
jecxz
mov
rcl
and
insl
pop
inc
jmp
bound
jmp
push
call
adc
leave
xorb
xor
int3
jnp
dec
push
bnd
mov
in
jae
adc
shll
movsb
or
sbb
push
stc
mov
int
xor
pusha
xor
sub
lock
xchg
outsl
fcomp
das
mulb
mov
in
aaa
cmp
aaa
aaa
movsb
dec
pop
in
xchg
mov
jp
js
testl
stos
repz
scas
fwait
adc
out
xor
gs
push
jns
lret
xor
movb
je
mov
xchg
inc
sub
mov
jno
es
push
sub
xchg
enter
andnps
adc
mov
ret
mov
jnp
xchg
jl
aas
vpaddd
das
xchg
lods
repnz
inc
sar
int3
aad
lret
push
decb
notb
cmp
mov
add
push
loop
stos
repnz
fnsave
cmp
cmp
das
jge
mov
into
enter
pushf
adcl
rcll
int3
orb
xor
or
fldt
inc
ret
jge
lock
and
loope
dec
rcll
in
push
add
sbb
repnz
jle
jne
js
mov
and
xor
xchg
sub
sub
xor
aad
xchg
das
inc
sbbl
call
jle
pop
call
cmp
lahf
lret
inc
cmpsb
addr16
jge
adc
int3
and
int3
xchg
popa
scas
lahf
jmp
inc
leave
addr16
sub
push
out
add
rep
mov
out
pusha
sub
dec
mov
adc
ja
lret
dec
orl
cmp
in
xchg
fwait
mov
xchg
pop
es
jb
shlb
pop
jb
or
shl
jno
push
pop
daa
ja
lds
out
sub
cwtl
dec
dec
js
mov
mov
push
mov
and
lods
cli
cmp
loopne
adc
enter
adc
add
iret
pop
mov
or
notb
dec
subb
mov
pop
cli
cwtl
shrl
and
out
stos
shlb
popa
xlat
push
push
or
push
jo
inc
adc
ljmp
icebp
mov
or
sub
and
decl
jl
inc
mov
adc
adc
xchg
fstpl
popa
dec
or
ss
dec
cmpsb
push
mov
adc
scas
or
mov
mov
inc
test
shrl
pop
cmc
pop
inc
nop
fstl
pop
aad
and
push
insl
lcall
push
mov
xor
xlat
outsb
fdivr
movsl
lret
sahf
shlb
cmc
pop
jae
mov
and
mov
gs
add
cmp
leave
push
incb
push
inc
fistps
push
loope
ud2
icebp
mov
not
xor
adc
je
sub
enter
xorb
imul
mov
xor
scas
cli
dec
inc
test
in
dec
repz
lds
mov
push
xor
lea
test
mov
push
mov
daa
js
mov
loop
sbb
ret
outsb
add
xchg
pop
dec
adc
xorb
xor
pop
das
and
clc
imul
insb
shll
ret
add
dec
mov
inc
leave
inc
lret
push
cmc
adc
lea
dec
adc
xor
jg
add
bound
mov
enter
sbb
out
mov
inc
aas
into
cmpsl
xor
hlt
out
imul
jp
scas
imul
mov
cmpsl
fmuls
mov
sub
lock
inc
xchg
div
call
mov
sbb
int
add
mov
sbb
mov
adc
movsl
into
push
leave
pop
xor
shll
jne
cmpsl
cld
xor
in
lds
mov
dec
jge
mov
shrl
lret
jecxz
lcall
mov
cli
adc
inc
mov
mov
insl
aad
les
dec
dec
pop
jg
xchg
inc
dec
add
mov
cli
sub
push
aad
popa
leave
xchg
mov
mov
mov
movsl
sub
shrb
pop
movsl
movsl
sar
jb
subb
lock
stos
sub
leave
mov
inc
in
xchg
jbe
aad
stos
inc
and
enter
sbb
nop
fwait
xchg
enter
cmp
jg
mov
movsl
push
mov
fs
jp
pop
cmp
negl
dec
fistpll
lods
mov
fiadds
repnz
lahf
mov
into
aam
sub
lcall
mov
cmp
xchg
mov
rclb
icebp
shrl
das
push
imul
or
lds
lods
cwtl
inc
pushf
je
push
fwait
inc
subb
inc
pop
cmp
xchg
data16
gs
push
std
mov
pop
lret
cmp
arpl
mov
jmp
xlat
or
jl
in
shrb
jg
push
data16
ljmp
imul
push
or
jo
test
sbb
jno
lahf
shll
in
jno
je
push
xchg
ljmp
pop
sbb
jmp
in
stc
fnstsw
dec
pusha
jl
lret
jge
pop
and
cltd
jae
push
adc
insb
push
out
inc
cmovbe
jno
insb
adc
push
cmpsl
cwtl
out
aas
test
jmp
enter
scas
shrb
xlat
jb
cmpsl
aam
adc
or
cltd
insb
rcrl
jl
popl
jmp
insl
imulb
mov
jmp
sbb
ja
cmp
jmp
gs
inc
xchg
movsl
cmp
sub
mov
hlt
rol
mov
xchg
in
enter
pop
int3
mov
sbb
push
add
xor
flds
cld
jae
sbb
xor
ss
out
adc
shlb
xor
shlb
mov
or
aad
mov
movsl
arpl
jne
popa
sub
test
push
neg
sbb
daa
in
push
mov
cltd
sub
dec
pop
lds
scas
outsb
data16
lods
into
jp
movsl
mov
pop
lods
jcxz
push
scas
lret
or
fwait
insb
leave
jp
adc
nop
rcrb
sbb
cmp
push
jecxz
cmp
divl
sub
lret
das
dec
or
cmp
push
adc
jno
or
out
xor
sbb
lcall
xchg
cmp
gs
ss
es
es
xchg
imul
or
pushf
dec
cli
stos
out
xchg
sub
iret
in
cltd
xlat
sub
cwtl
ja
aam
imul
sbb
mov
mov
jae
xlat
mov
sti
sub
dec
js
and
movups
gs
mov
outsl
aaa
rcrl
les
add
mov
jle
outsl
pop
inc
fsts
cmp
xchg
push
je
test
leave
push
lcall
pop
xchg
xor
cmc
in
xchg
push
push
add
push
jo
or
shrl
les
and
movsl
inc
dec
aas
xchg
xchg
test
jne
jb
sub
popa
sti
pop
adc
aaa
shll
scas
sahf
mov
jge
sbb
pop
nop
lock
xchg
leave
lds
in
inc
jne
rcrl
sbb
inc
clc
fists
jge
lea
adc
or
jnp
cli
inc
or
mov
mov
jmp
push
xor
out
jmp
lahf
test
pop
leave
mov
push
lret
dec
and
lcall
ljmp
in
inc
sub
adc
push
sti
or
mov
and
xchg
mov
add
icebp
jl
xor
fsubl
mov
loopne
jno
adc
jno
push
cs
and
mov
int
pushf
jp
sbb
xchg
push
cs
pop
and
cmp
mov
ficoms
pop
push
cwtl
pushf
sub
inc
sbb
rclb
mov
movsl
push
and
ret
lods
inc
xlat
xchg
or
mov
xchg
cmp
jbe
mov
in
test
inc
adc
sahf
xlat
call
aad
in
or
je
fs
mov
xor
mov
mov
mov
ret
aas
push
adc
movsb
xor
pop
mov
fs
std
mov
lock
cld
xchg
cmp
xchg
mov
repnz
aam
pop
test
int3
cmp
jb
mov
jno
cmpsb
adc
dec
outsl
mov
sbb
add
pop
sub
ret
rolb
in
push
push
ss
add
pop
insb
in
xor
adc
xchg
mov
cmp
pop
mov
pop
inc
jmp
testl
fistpll
pop
xor
cltd
mov
pop
scas
push
lods
aad
mov
pop
rolb
addl
mov
out
jne
xor
sub
repnz
jbe
xchg
enter
xor
add
xor
add
or
xlat
scas
movsb
mov
mov
lcall
sbb
and
inc
dec
cmp
xor
lret
jecxz
sub
and
jnp
add
scas
xchg
dec
sti
fcomps
int3
jne
cmpsl
push
inc
xchg
aas
sti
mov
addr16
or
mov
in
dec
aaa
nop
ficomps
xor
xor
push
push
add
mov
lods
push
jl
sub
scas
shld
mov
pop
mov
jle
mov
cld
push
imul
pop
ret
push
lds
push
call
add
pop
call
jp
je
dec
inc
roll
jecxz
xor
in
scas
jnp
leave
or
shll
clc
mov
push
lds
sub
rcrl
and
dec
int
cmpsb
mov
push
xchg
push
pop
sbb
inc
mov
jge
pop
pop
xchg
scas
add
mov
mov
in
push
mov
imul
dec
jle
iret
pop
cmp
add
mov
adc
sub
dec
fsubrs
aam
xchg
test
mov
mov
data16
pushf
pop
adc
cmpsl
xchg
or
jb
jge
stos
sarl
sbb
popa
fmull
movsb
aas
sub
dec
sbb
jl
push
cmc
fisttpl
pop
jp
inc
cmc
stos
imul
mov
xchg
mov
or
mov
push
popa
js
adc
shl
jne
filds
cs
and
loopne,pt
push
mov
stc
sbb
xor
les
xchg
or
push
jg
cs
pop
cmc
mov
ja
mov
sbb
pop
xchg
cltd
jge
or
push
cmp
popa
mov
mov
fadds
in
inc
or
outsb
aaa
dec
test
scas
daa
pop
leave
popf
or
mov
mov
inc
int3
fnstenv
fstl
mov
xchg
out
js
sub
inc
and
in
les
jae
xlat
sub
movsl
inc
call
xchg
cld
pop
sahf
dec
sbb
xchg
std
jg
movsl
pop
sbb
xchg
mov
int
sub
add
jg
out
sub
lea
in
adc
paddb
ret
sti
je
into
xchg
pop
je
bound
or
xchg
pop
push
test
mov
ret
stos
ret
test
sub
mov
sub
xchg
mov
adc
or
out
rcll
adc
hlt
xor
pop
iret
lahf
jl
int3
jg
jecxz
fucom
inc
add
sub
xor
insb
test
aam
mov
sbb
lret
sbbb
inc
adc
xchg
daa
mov
fcompl
add
sarb
dec
enter
rolb
sahf
xchg
mov
ret
es
sbb
pop
and
xor
push
aad
in
adc
jae
pushf
ret
cmp
pop
mov
pusha
xor
gs
pop
inc
dec
fwait
xchg
loope
loope
inc
rcll
inc
loop
inc
aaa
xchg
clc
fists
add
sub
call
pop
mov
push
and
dec
pop
pop
es
xor
shl
cmpsb
out
cli
xor
push
aad
repz
pop
jns
fidivs
out
push
cmp
adc
into
test
xorb
pop
adc
adc
xchg
fsubrl
aaa
popa
rorl
pop
or
xchg
fwait
xor
repnz
sbb
inc
pop
cmp
repz
pop
ficomps
fisubs
daa
icebp
jmp
int3
in
mov
ss
inc
inc
data16
inc
je
shr
inc
mov
add
jle
and
inc
lret
out
sbb
pop
xor
jge
xor
mov
sti
pushf
bnd
and
cmpsl
cmp
sbb
cmp
rorb
shlb
out
or
sub
xor
jp
int3
push
pop
cmp
add
adc
push
mov
bound
or
pop
mov
rclb
cld
sar
lods
push
imull
jns
fcompl
inc
inc
dec
xor
cmp
adc
lea
mov
sbb
cmp
pushf
jb
inc
stos
shlb
xor
test
jnp
push
xor
popa
jae
subb
cltd
mov
mov
test
or
aad
leave
jns
enter
cs
orl
and
arpl
mov
clc
mov
getsec
shl
imul
icebp
enter
xorl
fldz
aam
push
xor
add
insl
cmp
sub
rcrb
cmp
push
xchg
bsr
mov
or
inc
and
loope
ret
add
sbb
cli
arpl
fimuls
jmp
incl
mov
push
xchg
sub
rcrl
ffreep
fistpll
xlat
and
cmp
in
cmp
xor
shl
in
ja
sbb
adc
inc
fists
push
inc
sub
call
mov
mov
inc
cs
xlat
sub
das
mov
int
jne
jbe
cmpsl
add
test
aas
insb
mov
sub
push
sarb
dec
xchg
add
pop
scas
or
xor
arpl
adc
gs
lret
adcb
cmp
ljmp
cmp
dec
and
xlat
arpl
mov
hlt
xchg
adc
pop
roll
inc
call
test
pop
cmp
cli
cli
mov
rcrb
cmp
mov
sub
ljmp
cmp
push
xor
xor
push
jp
jl
push
xchg
repz
mov
das
aas
mov
push
call
nop
and
mov
das
ljmp
dec
adc
test
or
shrl
shlb
js,pn
sbb
cmp
stos
or
aad
lret
pop
shl
mul
cmpl
or
mov
sub
aam
inc
mov
pmovmskb
xchg
sub
out
movb
repnz
push
ret
jne
sub
push
lret
push
and
adc
sub
in
adc
push
pop
mov
shl
adc
lahf
imul
int3
out
arpl
xor
lahf
aaa
or
icebp
aam
mov
jns
sbb
mov
daa
fimull
jo
dec
dec
icebp
push
ds
jno
lret
out
imul
hlt
dec
ljmp
imul
push
stos
fstp
inc
push
xor
outsb
addr16
inc
push
jns
cmc
lret
enter
loope
testb
mov
xor
ljmp
xchg
pusha
mov
sub
ret
xor
in
shrl
or
out
pop
sub
cmp
int3
mulb
mov
sub
stos
cltd
mov
push
mov
sub
pop
pushf
mov
sub
cmc
jno
cltd
jmp
shll
hlt
and
fdivs
fcmove
or
js
sbb
in
adc
imul
cwtl
or
imul
and
xchg
in
xchg
icebp
repnz
adc
jle
loopne
add
fs
jl
or
jle
test
bound
in
xor
hlt
or
mov
ja
ja
push
cld
shlb
pop
jnp
int
mov
or
cmp
cli
fstpt
stc
ljmp
push
les
lock
inc
ss
xor
jbe
scas
dec
cmp
imul
pop
cli
pop
sbb
and
dec
outsl
aam
movsl
pushf
in
push
inc
cmp
lock
lret
cmp
mov
or
fs
dec
sti
add
and
mov
dec
add
sbb
and
fmuls
adc
shrl
dec
add
cli
mov
pusha
pop
adc
or
adc
shll
imull
push
out
add
xor
cmp
pushf
adc
push
icebp
pushf
adc
push
cmp
sub
or
test
outsw
push
add
cltd
inc
jns
mov
rclb
cmovs
jecxz
nop
push
cli
pop
aas
or
data16
jmp
sbb
lock
insb
jle
jecxz
xchg
mov
lds
xor
pop
and
out
rolb
xor
scas
add
push
or
pop
icebp
push
popf
add
test
sub
add
mov
inc
imul
shll
shlb
xor
and
enter
or
pop
mov
mov
aam
adc
addl
lahf
das
cld
inc
sahf
inc
lds
lods
int3
fstpl
insl
pop
push
jno
mov
in
loop
movups
xchg
push
cmp
divb
std
add
sub
dec
ds
lock
lret
push
jae
or
lds
add
or
mov
scas
jbe
mov
sarl
xor
mov
testl
clc
add
or
mov
push
add
das
mov
rcpps
cmpsb
aam
push
hlt
or
inc
call
pop
cmpsl
and
jmp
outsl
mov
scas
fdivs
mov
jmp
adc
mov
cmp
jmp
shll
int3
xor
jo
ret
scas
mov
lods
cmp
out
test
fildl
xchg
test
mov
pop
out
adc
mov
adc
cmpsl
cld
pusha
mov
cli
adc
shll
and
xor
add
mov
loopne
scas
adc
cltd
std
jns
bound
int
cmpsb
push
push
xchg
mov
push
jno
movaps
outsl
jns
cld
outsb
dec
int
in
add
fbstp
ficompl
rorb
jnp
push
dec
int3
loop
lock
push
aam
loope
hlt
pop
clc
ljmp
pop
fs
daa
dec
and
jbe
sar
xchg
inc
push
lcall
xor
in
out
pop
stc
inc
aaa
rcll
add
pop
sbb
stos
aas
cs
lcall
xor
arpl
pop
jne
hlt
mov
push
push
dec
shl
mov
xchg
jmp
fs
pushf
fnstcw
push
jo
cmp
mov
cli
sbb
idivl
or
aam
cmp
cmp
pop
pop
add
pop
int3
push
push
jle
test
push
mov
rcll
and
scas
push
les
jo
sbb
into
pushf
pop
out
push
and
pop
les
aam
dec
das
xor
enter
xor
test
fsubrs
stos
pop
and
sub
aam
mov
cmp
arpl
cwtl
aam
in
cmp
mov
mov
aas
cmp
pop
in
ja
loope
std
adc
sbb
pop
fs
test
std
add
mov
mov
lea
mov
mov
and
inc
add
testl
adc
add
mov
push
pop
loopne
and
sar
cmp
aam
and
ds
es
mov
pop
mov
andb
call
mov
outsl
sub
cmp
out
cmp
test
shl
in
cmp
inc
lea
lods
adc
lahf
lahf
fcmove
scas
lods
adc
xor
push
fildll
mov
push
add
push
mov
xor
lock
cltd
addl
imul
xchg
int3
sbb
mov
sub
and
pop
jmp
adc
add
mov
xchg
in
std
leave
mov
mov
push
outsl
or
mov
imul
mov
sub
lea
punpcklwd
jb
es
test
daa
push
push
mov
add
mov
mov
dec
lret
test
mov
shrb
aam
in
jbe
mov
add
fimuls
clc
das
fdivs
ret
pop
adc
out
out
inc
xor
outsb
xchg
dec
mov
xchg
imul
jno
fmuls
cwtl
adc
jge
into
add
jecxz
inc
aaa
sub
inc
jno
dec
jg
sahf
insb
jge
aaa
mov
adc
lret
in
lret
into
push
jbe
std
roll
push
pop
test
inc
sub
xor
mov
jl
sti
inc
adc
dec
pop
notl
xor
adc
test
arpl
cmpsl
leave
lods
jecxz
adc
sub
cld
enter
sub
imul
lock
pop
jle
repz
dec
pop
add
out
or
cmp
or
or
cmp
push
fcomip
and
orb
addr16
dec
aad
fidivrl
pop
cli
xchg
lds
in
lcall
ja
adc
in
jmp
sahf
mov
xchg
lea
fcoml
mov
outsl
xorl
cmc
inc
aam
fidivrl
adc
jns
or
les
push
sub
sub
mov
fbld
and
jle
dec
dec
loop
cmp
lret
fistpll
in
pop
xchg
lds
jo
subb
mov
adc
insl
call
inc
cld
xchg
jl
jmp
out
inc
sbb
mov
lret
cmp
xorb
cmp
pop
pop
in
xchg
sti
rclb
mov
jo
pop
test
inc
jne
adc
iret
cmp
sub
sbb
leave
rcrl
mov
aas
push
fst
mov
fwait
rclb
test
mov
xor
cmp
popa
enter
iret
pop
ret
xchg
loop
out
add
ja
xor
xchg
add
cmp
mulb
leave
push
cmp
add
nop
int3
or
mov
and
imul
xor
hlt
sbb
inc
fsubl
lea
xor
mov
call
jb
dec
push
adc
test
push
popf
mov
aad
outsl
int
add
push
inc
shlb
lret
fdivs
jge
push
movsl
test
ds
mov
or
fisttpl
gs
sub
js
lds
cld
inc
addr16
push
fsts
scas
cwtl
roll
push
and
adc
in
mov
mov
fidivl
fisttps
int3
into
mov
mov
fsts
pop
repnz
adc
xor
push
sub
inc
xchg
mov
js
fimull
pusha
pop
sub
ficompl
xor
idiv
inc
cmpb
test
or
aas
push
jle
pushf
inc
repnz
and
out
iret
pop
jno
ficoms
push
roll
sub
push
mov
dec
sbb
mov
movl
cli
add
and
incl
and
cmp
mov
test
add
xchg
xor
pop
loop
repz
pop
xchg
push
xchg
lods
adc
xor
inc
mov
mov
movsb
cmc
pop
out
rcrl
rclb
ret
arpl
sub
cmp
rclb
push
lahf
imul
cwtl
adc
add
subb
repnz
insl
jb
test
sub
mov
xlat
pop
dec
ror
mov
jb
cmpsl
or
push
mov
adc
mov
paddw
sub
adc
testb
aam
xchg
inc
test
sarl
sarl
sub
cmc
jno
xlat
lds
jg
lods
xchg
add
add
and
imul
and
scas
data16
mov
jl
and
adcl
sub
test
psubusb
cltd
adc
xor
and
push
or
aaa
fmull
pusha
sub
clc
test
pop
leave
bound
pop
sub
dec
mov
push
jne
sbb
stos
jmp
clc
mov
inc
xor
imul
in
cmpsl
jae
pop
add
or
jecxz
adc
iret
mov
movsl
fadds
inc
pusha
mull
cmp
adc
iret
js
test
scas
pop
lock
clc
pop
push
es
rcll
sbb
or
cmp
jmp
push
push
add
popa
jae
adc
dec
mov
pushf
jno
shll
or
roll
ljmp
call
cmpxchg
and
mov
loopne
in
mov
cmp
jnp
lods
into
dec
add
ret
addl
insl
push
jbe
and
in
or
add
not
loopne
mov
xor
dec
lods
cmc
push
mov
xlat
mov
int
pop
mov
xchg
daa
sti
fs
scas
aam
pop
imulb
pop
jne
cli
inc
dec
icebp
mov
or
fcomps
sbb
aas
cmp
xchg
and
cs
xchg
sub
faddl
add
jnp
pop
mov
push
ljmp
dec
pop
xchg
ljmp
add
push
call
sti
jg
sbb
cld
jns
sbb
repz
fs
mov
inc
sub
or
cli
lods
ss
lock
ror
punpckhbw
out
test
dec
push
incl
inc
add
popa
sbb
stc
je
push
int3
loope
jl
out
movsl
outsl
and
sbb
cmp
mov
push
imul
test
into
xor
rorb
mov
jge
test
jmp
dec
xchg
xchg
sti
pmaxsw
mov
cmp
insb
fsincos
sbb
push
or
jno
daa
jnp
cli
sub
sbb
mov
push
shrl
je
xchg
jp
les
adc
sub
dec
mov
shll
adc
repz
or
pop
das
mov
arpl
repz
xchg
aas
push
test
sub
mov
icebp
ja
add
cmpsl
pushf
rcl
add
fisubl
pop
dec
stc
out
xor
fisubrs
rcll
cmp
add
add
xor
inc
inc
movsb
inc
push
or
sbb
loope
inc
aas
or
mov
adc
movsb
icebp
icebp
cwtl
nop
and
mov
in
aam
fsubrl
inc
mov
pop
stc
xchg
xchg
xor
fisttps
ja
pop
sub
cltd
sar
sub
aaa
inc
lods
ret
push
mov
pop
sbb
jae
mov
cmpsb
mov
mov
cmpsb
mov
cmpsb
js
in
leave
and
aad
in
mov
mov
and
insl
xor
addr16
cmc
lds
shr
es
aas
dec
sub
jns
ljmp
jmp
lret
mov
push
icebp
fcomi
pop
mov
daa
test
inc
outsl
lahf
mov
pop
cmpsb
movsb
dec
cmp
push
mov
xlat
sub
int
fdivrp
mov
dec
and
pop
loopne
cli
lds
and
repz
push
insb
lahf
jp
cmp
shrb
jl
loop
negl
imul
out
mov
dec
push
mov
xor
repz
loop
cs
pop
sub
pop
dec
push
lods
cmpl
xchg
jno
sbb
enter
push
in
mov
push
cld
push
movsb
jmp
sbb
push
sub
shr
jmp
test
cld
cmp
and
lcall
shrb
pop
sub
repnz
fadds
mov
fucomp
and
les
inc
sbb
fcom
pop
pop
cmc
mov
pop
data16
jmp
out
add
es
adc
push
mov
shll
mov
das
fsub
pushf
mov
mov
inc
push
dec
cwtl
jl
outsb
stos
add
adc
shrb
lahf
push
shlb
iret
decl
xchg
std
enter
pop
mov
mov
pusha
xchg
icebp
jl
lcall
mov
push
mov
dec
and
push
mov
rorb
cmpsb
pusha
pop
imul
subb
cli
or
fisttpll
andl
stc
mov
pop
push
dec
pop
pop
mov
xorb
orl
or
sbb
lods
jbe
es
dec
mov
loopne
loope
dec
je
add
mov
aas
dec
addl
lds
out
stc
mov
xor
jbe
mov
lcall
cmp
jp
mov
pop
adc
ds
stc
pop
jp
ficompl
and
test
or
xchg
or
sbb
call
lock
inc
adc
mov
loopne
rorb
test
nop
in
int3
mov
lret
out
mov
iret
inc
push
cmp
mov
sub
push
pop
shrl
inc
int3
mov
rol
cltd
scas
xchg
inc
bound
punpcklbw
lcall
pop
dec
bound
sbb
pop
pushf
mul
adc
bound
test
and
std
js
icebp
sbb
repz
mov
out
or
fxsave
in
in
sub
jmp
and
pop
cmp
popa
loop
inc
repz
repnz
lret
mov
out
sbb
shr
call
jg
adcb
or
pop
push
xchg
movsl
cli
stc
sbb
jo
jbe
jo
pusha
in
loope
and
fld
scas
xor
cmp
inc
dec
mov
xchg
inc
or
int3
add
js
or
lods
cltd
stc
xlat
movsb
mov
mov
and
lcall
jp
test
push
dec
fsub
adc
inc
jbe
daa
sbb
icebp
stc
or
jmp
pop
cmc
sub
shll
scas
push
in
aaa
in
mov
lcall
add
xor
in
ljmp
popa
lret
jno
add
lcall
pop
arpl
xor
fs
dec
mov
mov
pop
pop
mov
fsubrp
cld
popf
subb
jno
std
loop
and
shr
jbe
dec
jmp
or
lods
jmp
sbb
icebp
and
fcompl
add
adc
xchg
mov
pmaxsw
cmp
and
xor
add
or
mov
xchg
movsl
adc
sub
mov
mov
aam
inc
jmp
addr16
sub
inc
rol
call
mov
and
sub
lods
insl
movsl
sub
popa
pop
out
scas
and
lcall
clc
arpl
pop
adc
mov
popa
ljmp
mov
jmp
scas
scas
and
lcall
ret
shlb
cmp
xor
and
insl
jno
movsl
push
inc
cmp
sbbb
mov
rcr
mov
push
mov
in
dec
or
push
imul
test
shlb
pop
push
adc
lcall
cmp
sub
jg
jno
fdivrs
add
fdivrl
or
daa
sub
aaa
inc
and
mov
test
dec
aad
xor
xor
jg
loop
jae
jle
and
add
adc
pop
and
lock
sbb
in
inc
xchg
stc
xor
jmp
mov
rcll
dec
push
dec
adc
push
lds
adc
add
sbbl
aaa
mov
iret
xor
xchg
dec
jae
xchg
arpl
jge
mov
sub
sbb
or
xor
pop
lret
xchg
outsl
es
data16
sarl
add
cli
add
xchg
pop
mov
icebp
data16
ss
xor
mov
add
xor
stc
test
jg
fcomp
push
in
movsb
xor
inc
leave
lret
repnz
mov
lahf
push
les
or
cmp
push
daa
repnz
inc
data16
mov
jne
add
ds
cmpb
and
lahf
cmpsb
cmp
out
sbb
or
inc
leave
cvttps2pi
insb
inc
sub
cmp
push
sub
add
adc
test
cmc
mov
sbb
stos
roll
stc
idiv
jo
pop
je
movsb
mov
stc
inc
data16
es
or
shll
popf
ficoml
fs
xor
xor
stos
adc
mov
jmp
in
lods
rcrl
out
mov
xchg
mov
stos
mov
ljmp
mov
fs
inc
test
testl
mov
inc
icebp
in
jle
xor
push
call
fmuls
mov
xor
push
push
xchg
inc
test
push
daa
xor
xchg
aam
add
dec
push
lods
por
loopne
xor
pop
call
mov
test
and
sub
mov
lahf
or
outsb
mov
sbb
inc
lret
push
loope
test
aad
sub
stos
cmp
in
or
mov
push
shr
jbe
add
shll
not
xchg
xchg
jns
and
fs
cmpsb
in
loope
adc
cmp
push
xchg
push
jp
rorl
les
ljmp
adc
and
insb
fwait
add
sarl
int3
dec
xchg
out
insb
xchg
cmpsb
ss
sub
in
lods
hlt
push
in
xchg
jns
lock
aas
xor
or
or
push
jp
ja
jl
jnp
dec
call
xchg
pushf
and
in
inc
add
repz
pop
lods
imul
dec
cmovg
push
cmp
lods
xchg
shll
or
lahf
lcall
sbb
ret
pop
or
aad
adc
xchg
shlb
jecxz
mov
mov
mov
lods
lcall
jno
imul
adc
push
mov
insb
out
push
cmpsb
nop
mov
imul
fmull
imul
mov
test
mov
cwtl
push
jge
push
push
xchg
jne
jo
jmp
aaa
push
jno
orl
popf
push
bound
pusha
sbb
movsl
in
cmp
cltd
stc
inc
inc
cmp
lock
fstp
ja
punpckhdq
adc
in
gs
adc
inc
shl
inc
push
lods
cmpsl
push
popa
jne
adc
popa
test
xchg
inc
cmp
int3
and
fwait
sub
clc
icebp
lret
add
inc
leave
or
out
lock
es
leave
pop
mov
mov
xchg
lock
fs
cwtl
jmp
adcl
push
adc
xlat
sub
aad
stc
inc
jg
mov
jle
mov
out
shll
mov
mov
or
push
xchg
int
lods
mov
inc
rcll
hlt
packsswb
ja
fldenv
cmp
iret
les
pop
adc
lret
das
outsl
or
pushf
pop
dec
jmp
xor
xchg
jae
xchg
jno
xchg
hlt
push
aas
mov
lcall
inc
nop
push
mov
not
dec
push
add
fidivrl
incb
std
and
loope
les
out
xor
lahf
rorb
dec
andb
hlt
mov
fs
sbb
popf
adc
fildl
cmp
clc
das
popa
xchg
inc
xchg
or
ja
mov
cmp
out
mov
ud0
dec
fiaddl
mov
outsl
popa
popf
mov
cltd
in
clc
mov
cmp
imull
or
sbb
jp
cmpsl
mov
mov
stos
pop
scas
sbb
insb
mov
pop
lock
ja
popa
es
pop
or
lret
mov
mov
lods
jg
mov
and
dec
idiv
cli
adc
lods
fistpl
push
jp
mov
mov
mov
sub
insb
test
insl
in
js
shlb
stc
lods
jge
pop
push
sub
cwtl
jne
push
imul
adcb
adc
pop
xorl
sbb
lds
sub
pop
dec
inc
rcrb
lods
in
les
in
cmpsl
aam
push
jg
loope
aaa
mov
and
or
xchg
mov
hlt
push
testl
stos
movsb
int
xor
pop
inc
scas
nop
mov
mov
je
loop
andl
repnz
enter
mov
mov
jbe
xchg
decl
in
sub
pop
pop
repnz
mov
push
xchg
cld
loopne
pop
jmp
cmp
mov
mov
outsl
in
scas
and
sub
arpl
imul
mov
lds
bound
pop
sbb
cmpb
mov
xor
shlb
push
xor
mov
call
repz
jo
push
xor
int
adc
test
mov
push
out
pop
iret
pushf
jp
es
in
cmc
xor
push
push
shlb
mov
push
ds
or
enter
push
push
add
shr
push
or
mov
insl
dec
add
and
xor
push
sub
sti
jae
push
call
mov
xlat
pop
js
adc
mov
mov
xor
cmp
add
lds
icebp
add
jae
xchg
mov
mov
mov
inc
orl
lahf
fldenv
rcrl
dec
loope
push
cmpsl
in
arpl
push
fnsave
fadd
icebp
jb
add
das
mov
pop
add
test
nop
mov
popf
in
inc
not
stos
pop
inc
mov
xchg
mov
mov
enter
arpl
inc
mov
enter
mov
mov
das
mov
adc
ja
xchg
scas
dec
inc
cwtl
mov
out
repnz
mov
mov
xchg
gs
aam
xor
dec
repnz
inc
or
pop
xchg
insb
pop
cltd
ret
jns
mov
pop
xor
lea
jb
push
pusha
jge
xor
je
movsb
mov
lea
jno
mov
dec
dec
incl
xchg
push
test
add
xor
in
incl
fmull
dec
jl
jb
out
push
sub
in
cmc
or
push
rcrb
cmp
dec
outsl
fucom
aam
cmpsl
addl
or
shlb
rorl
mov
loop
in
js
sub
js
dec
in
push
repnz
sbb
push
loop
mov
mov
add
cmpsb
scas
inc
cltd
xor
ja
and
add
cli
pand
addb
jecxz
cmp
lret
sub
pop
das
xchg
jg
push
jb
mov
dec
adc
shll
pushf
xchg
push
dec
enter
xlat
and
cld
sub
fildl
dec
jb
pop
sbb
dec
lret
sub
mov
xor
add
mov
push
jne
dec
xor
ljmp
leave
dec
mov
mov
pop
adc
insb
cltd
push
jo
test
cld
or
adc
popf
insl
pop
rcrl
push
test
pop
test
jl
mov
cmp
mov
sbb
push
mov
aad
push
pop
dec
fsubr
pop
ljmp
bound
push
xor
ljmp
jo
pop
test
decl
divl
and
dec
push
pop
in
pop
insb
das
cld
pop
icebp
aad
movsb
outsl
pop
test
out
push
inc
fidivrl
sahf
mov
pop
leave
das
xchg
fildll
pushf
mov
push
rcll
imul
test
sbb
inc
push
adc
sub
push
mov
pop
into
test
jae
pop
sub
jns
out
sub
jb
mov
pop
push
subl
insb
ret
pop
imul
nop
sbb
je
pop
popa
push
aad
fistl
sbb
mov
xchg
sub
or
push
push
rcrl
outsl
mov
xlat
dec
push
push
mov
cmp
lret
ljmp
push
aas
cltd
jne
andl
fbld
adc
cld
or
adc
lea
cmc
enter
mov
sbb
popf
in
mov
pop
inc
jae
test
loope
and
mov
stc
leave
cmpsb
or
add
sub
adc
add
fmulp
or
shrl
incl
sbb
sbb
sbb
add
jbe
ss
pop
fidivrl
loope
sbb
adc
mov
lds
add
mov
mov
dec
addr16
sub
inc
xor
fwait
pop
inc
pop
mov
mov
pop
leave
pushf
sub
jnp
push
incl
icebp
pop
or
sub
xchg
jl
in
insb
adcl
adc
jge
adc
pop
inc
std
add
decb
adc
pop
xchg
mov
int
rcll
xor
adcb
or
es
pop
popf
xor
jae
or
shrl
insl
pushf
test
out
fs
dec
pop
imul
mov
lock
enter
loop
cli
jb
xor
lcall
addl
cmp
aam
push
xor
and
adcl
std
mov
rcll
je
jne
adc
jl
sub
into
lret
sbb
gs
pop
sub
roll
scas
out
cmp
inc
sbb
gs
inc
fistps
addr16
cwtl
jae
add
cmp
cmpsl
jecxz
pop
pop
in
ja
mov
rdpmc
pop
clc
pushf
add
push
clc
or
inc
adc
push
sbb
push
addr16
fmul
pop
in
imul
inc
mov
popa
cltd
sub
leave
nop
pop
sbb
jecxz
mov
inc
inc
jge
shr
or
and
push
js
iret
inc
add
adc
mov
scas
insl
mov
push
daa
cmp
jns
xchg
lds
sub
mov
dec
fbstp
or
xor
icebp
pop
push
rcrl
jno
push
sbb
push
sbb
adc
stos
dec
adc
sbb
add
xlat
lock
add
movsl
add
sub
std
cmpsl
pop
stos
int
and
clc
xlat
cmp
ljmp
testb
scas
ds
dec
stc
mov
shll
and
xor
gs
mov
cwtl
and
je
lds
movsl
push
mov
rclb
add
lahf
jb
pop
mov
fdivrl
idivb
dec
or
xor
insl
repz
xlat
cmp
xor
and
adc
mov
or
ljmp
sti
mov
dec
add
enter
push
and
in
dec
inc
push
jo
jecxz
jb
push
in
movsl
push
pop
loope
mov
out
jge
movsb
dec
push
cs
in
stos
pop
pop
aad
pop
out
push
xchg
sub
adc
iret
shll
push
sbb
arpl
bound
jo
icebp
fs
xor
pop
pop
and
sub
pop
out
sub
pop
pop
das
mov
pop
pop
aad
leave
clc
jge
adc
adc
jmp
xchg
lret
bound
imul
xchg
into
dec
sub
jbe
in
rorl
loop
mov
add
pop
adc
mov
sub
and
scas
gs
adc
in
push
dec
fwait
out
les
int
stc
xchg
clc
ror
in
mov
je
ret
stos
adc
or
pop
imul
pop
or
fucomi
pop
jne
mov
mov
mov
dec
pop
cmp
hlt
leave
sbb
lods
rcl
xlat
sub
stc
dec
mov
loopne
jns
cmp
movsb
outsl
repnz
stos
cld
rcll
lret
imul
or
xor
imul
mov
in
jne
scas
cld
lcall
mov
dec
daa
fdiv
xchg
movsb
inc
dec
xchg
std
cwtl
lea
sbb
lahf
push
mov
fwait
les
test
test
xchg
mov
push
pop
add
jns
bound
xchg
insb
push
shlb
cmpsl
incl
dec
and
lods
test
mov
adc
push
adc
jno
sbb
adc
xchg
fs
inc
mov
pop
sti
dec
das
push
ret
or
push
fildll
mov
jl
movsl
nop
dec
push
ss
das
inc
fstl
pop
fsts
aam
cmp
fcompl
jp
lods
xchg
sub
mov
testl
das
adc
lods
rcrl
mov
test
gs
mov
xchg
xchg
dec
mov
inc
push
js
cmp
mov
cltd
nop
decb
icebp
jmp
inc
sub
stos
inc
jne
rcll
inc
repz
mov
fdivrs
pop
jmp
adc
cmp
jecxz
cmp
fcoms
test
orb
stos
mov
inc
lahf
and
pop
xor
fs
aam
insb
fisubrs
sub
cli
aam
ljmp
ret
lcall
push
jae
adc
out
push
pop
cli
lahf
iret
add
xchg
in
test
pusha
cmp
aaa
jo
mov
imul
loope
pop
sub
pop
jl
dec
mov
lods
mov
lret
jb
dec
cmp
xchg
icebp
xlat
divl
popf
outsl
inc
ret
pop
nop
mov
rclb
shrl
roll
rorl
mov
inc
inc
outsl
adc
clc
mov
adc
cwtl
pop
mov
jo
lret
test
add
scas
sbb
mov
out
mov
pop
xchg
xchg
cmc
stc
icebp
sarl
imul
sub
dec
lock
cmpsb
js
stos
test
imul
cmpsb
add
rcrl
scas
dec
int
movsb
inc
aad
divl
stc
or
sbb
out
aaa
pop
xchg
cmp
pusha
sar
push
out
or
mov
jmp
fldl
push
leave
inc
and
dec
jbe
dec
adc
dec
jl
test
pop
sahf
mov
jmp
iret
cmc
lahf
push
dec
sbb
sub
insl
aad
sub
push
inc
xchg
xchg
inc
ret
pop
xor
inc
xchg
loopne
xchg
inc
fldcw
pushf
insb
out
aas
int3
adc
dec
and
mov
xor
subl
inc
inc
pop
jge,pt
push
aad
js
cmp
mov
sbb
shll
lahf
adc
add
into
xor
pop
push
aad
gs
sbb
add
or
fistl
adc
or
cmp
in
mov
cmpsl
mov
gs
pop
mov
in
outsb
fdivrl
cs
add
lret
sbb
push
adc
adcb
mov
jb
lods
test
nop
cs
stos
dec
loop
add
and
call
jmp
jno
stc
push
adc
and
push
lret
mov
sbb
jns
add
leave
jno
insb
adc
add
push
cmp
pop
inc
xchg
mov
out
push
xor
sub
lods
mov
pop
xchg
stc
gs
pop
pop
enter
mov
fisttps
lcall
cli
inc
jle
xchg
push
int
or
filds
bswap
cs
jg
insl
stc
lds
cwtl
push
sub
inc
inc
rcr
pusha
adc
aam
pop
pop
stc
mov
out
mov
or
hlt
or
or
ds
sbb
repnz
test
xor
mov
add
icebp
insb
dec
stc
pop
mov
jns
insl
or
lcall
adc
mov
nop
loopne
cmc
ss
shrl
data16
add
pop
dec
test
dec
adc
pop
in
push
ss
jo
cli
add
ljmp
outsl
cmp
push
icebp
sub
lods
inc
xchg
jno
xor
mov
data16
add
out
int
mov
mov
stc
into
rcll
jae
std
cli
xchg
xchg
xchg
insl
pop
les
adc
or
add
outsl
jo
xchg
sti
push
sbb
pop
mov
inc
xchg
lods
lods
into
in
push
inc
cmc
push
adc
in
jb
mov
pop
ss
and
or
out
lret
cmp
shlb
jmp
stc
sar
jmp
pop
and
loop
notb
sub
mov
flds
mov
adc
mov
cmpsl
fisubs
mov
xchg
xchg
cmp
jae
dec
sbb
es
sub
pop
and
sub
xchg
fldt
jno
sar
push
push
cltd
int
inc
push
sahf
xchg
ss
in
pop
cli
aas
inc
fsubrs
rorb
sbb
fdivl
inc
ror
orb
ss
pop
mov
mov
jle
aad
pop
push
dec
stc
test
push
ss
outsl
fs
lret
lret
int3
xchg
sbb
sbb
adc
jb
mov
jbe
loope
icebp
and
sti
mov
and
adc
out
mov
push
orb
icebp
sub
sti
addr16
push
loope
in
fmul
jge
and
clc
lea
stc
test
daa
dec
test
call
rcll
fcom
js
insb
xor
xor
sbbl
lcall
ja
shll
repnz
inc
jl
push
sahf
pop
mov
je
sub
fwait
mov
pop
lock
fadds
sahf
push
addr16
cli
adc
adc
mov
cmp
jne
pushf
cs
shl
and
aas
pop
xor
and
pop
add
xchg
cmovp
stc
leave
sbb
in
lock
sbb
shr
negb
cmp
gs
in
mov
push
push
cmp
mov
add
js
dec
sub
dec
jne
adc
fcmovnbe
aas
inc
cmp
imull
aad
lds
fisubrs
sbb
stc
lods
imul
mov
push
loopne
cwtl
mov
dec
or
rclb
xchg
ja
and
repz
sbb
dec
or
jo
mov
test
addr16
xchg
pop
outsl
cli
scas
lock
mov
push
mov
dec
test
notl
jmp
adc
ss
jl
pushf
adc
mov
inc
mov
stos
and
sub
mov
pop
pop
in
aas
adc
inc
inc
jmp
sub
and
xchg
dec
and
xchg
cmpl
daa
xor
xchg
ja
js
pop
jl
leave
mov
cwtl
xor
or
mov
push
lds
mov
dec
stc
ds
push
xor
add
inc
sub
push
ss
xor
test
sti
sbb
sub
cmp
xor
xor
push
inc
mov
decb
addr16
lods
xchg
jae
imul
xlat
mov
jle
loop
les
jno
mov
xchg
xchg
nop
mov
inc
mov
test
int3
mov
xchg
push
rcl
push
and
in
or
bound
subl
js
xchg
pop
adc
shlb
fcom
loop
aad
scas
incl
je
push
mov
add
cmpsb
outsl
test
stc
mov
xor
ljmp
gs
inc
or
mov
mov
fcoml
mov
jae
inc
xor
mov
push
pop
sahf
jle
test
pushf
add
mov
xor
pop
add
or
sbb
out
out
inc
jne
pop
inc
push
mov
fdivrs
sub
outsl
mov
fmull
stos
out
ficompl
jne
int
xor
xchg
adc
mov
cmpsb
jle
cltd
xchg
jp
dec
mov
dec
adc
daa
jb
rolb
and
xor
rorb
dec
adc
xchg
sbb
cmc
icebp
test
in
xchg
dec
jp
sub
mov
mov
pop
rcr
xlat
sbb
dec
fwait
sub
outsb
add
inc
adc
xchg
mov
jbe
ja
fimull
push
test
xchg
repz
fildl
repz
test
xchg
push
add
fsub
std
xor
add
shrl
sbb
mov
sub
call
adc
cmp
pop
jo
shl
cmp
repz
mov
cld
cmp
ljmp
cmp
cli
lods
sahf
pop
loope
loope
mov
outsl
orb
cmp
popf
out
and
shl
push
ja
into
xchg
xchg
dec
iret
cltd
sub
pop
dec
cltd
push
sub
add
sub
inc
mov
mov
push
inc
insb
mov
jge
loop
sarl
dec
or
outsb
popf
push
aaa
shrb
jmp
jl
lds
shrb
clc
out
or
adc
rcr
inc
movsb
mov
divl
ss
xchg
jg
clc
inc
movsb
jmp
ficoms
mov
mov
data16
sub
imul
ja
js
ss
popf
mov
push
aam
dec
mov
xchg
arpl
in
dec
inc
mov
aas
les
cmc
mov
fdivr
xor
or
testb
sub
orb
pop
out
xchg
aam
popf
inc
push
xor
dec
xchg
push
xchg
das
push
inc
mov
add
jbe
adc
push
addr16
mov
mov
or
cs
adc
out
push
inc
mov
aaa
test
rcl
ret
insb
into
mov
mov
lahf
movsl
push
repnz
jno
xchg
daa
push
jecxz
dec
aad
xor
adc
pushf
out
das
xor
push
shll
nop
nop
inc
push
cmp
dec
lcall
and
add
xchg
and
jecxz
sub
out
and
cwtl
xor
fcompl
imul
inc
lahf
pop
test
pop
aaa
push
mulb
sub
scas
fwait
cmp
mov
jo
push
negl
aam
push
add
loopne
test
push
mov
mov
push
bound
out
sub
divb
add
pusha
adc
adc
in
bound
add
pop
add
sub
pusha
cmp
repnz
mov
jp
dec
lods
jmp
mov
xor
test
mov
rolb
test
push
hlt
push
xor
out
aaa
negl
clc
test
fcoml
add
cmp
fists
xchg
fsubrp
xchg
sub
and
mull
das
cmpsl
das
sbb
push
and
and
lret
fmull
notb
mov
jmp
outsb
ja
push
mov
enter
dec
cmp
jmp
mov
add
dec
cwtl
xchg
stc
and
cmp
jp
aaa
ds
nop
lahf
inc
pop
shrl
jo
dec
addr16
rcr
xor
ss
cmc
outsl
lcall
xchg
test
clc
adc
xchg
xorl
test
ljmp
cmc
nop
jle
aad
mov
out
jne
sub
cmp
mov
js
dec
jge
push
dec
lahf
mov
ror
pusha
push
dec
mov
jmp
sub
rorb
or
pushf
sub
test
sbb
dec
insl
mov
cmp
hlt
movsl
dec
inc
inc
mov
and
aad
ss
pop
outsl
inc
repnz
aaa
xchg
daa
xchg
movsb
mov
nop
dec
xchg
xchg
rcrb
inc
stc
push
lret
lea
shl
and
xor
mov
mov
out
cwtl
lret
filds
aaa
dec
xchg
mov
shrb
mov
inc
mov
mov
fcomi
cs
cltd
xor
enter
into
stc
orb
cmc
mov
cli
fstpl
pop
jp
inc
jl
test
push
push
cmp
xchg
pop
or
push
sahf
xor
xchg
clc
fcmovnbe
mov
xlat
pop
pop
gs
mov
sub
cli
dec
xor
pop
jp
and
dec
sbb
pop
push
or
hlt
xchg
in
push
pop
test
pusha
or
flds
inc
push
cli
in
imul
inc
inc
call
mov
and
iret
or
and
rcr
cltd
aad
and
inc
cli
sub
popa
dec
fistpl
icebp
or
jle
inc
mov
jmp
adc
push
xchg
out
outsb
sbb
leave
or
popf
pop
orb
xlat
jo
adc
leave
das
push
push
lds
stc
pop
clc
push
ss
icebp
push
jbe
pop
sbb
pop
dec
inc
aam
ljmp
in
sbb
fs
popf
xor
mov
xchg
push
cltd
fistpl
adc
call
fwait
into
std
lcall
pop
insb
divl
scas
xchg
cmp
in
fildl
inc
iret
shrb
pop
rclb
or
cltd
bound
fldl
mov
jl
pop
fcmovb
or
push
pop
repz
or
lret
cld
xor
pop
cmp
xorl
loopne
ja
jge
div
and
loope
inc
mov
inc
inc
mov
or
movlhps
mov
jecxz
inc
sub
push
dec
sti
mov
push
push
add
cmc
repnz
sub
cltd
sti
lock
xchg
aam
lods
cwtl
hlt
pop
dec
push
inc
jo
loope
lahf
ss
ljmp
cld
push
mov
popf
push
sti
jl
mov
cmpsl
and
repz
xor
jno
xchg
lahf
pop
sub
adc
push
lds
inc
aad
adcl
das
imul
mov
inc
jmp
jmp
jle
jae
pop
push
ret
fstpl
or
insl
cmp
daa
aas
inc
fadds
inc
push
inc
test
popa
sub
or
xor
adc
cmpb
scas
mov
aas
fdivrl
sarl
mov
mov
cmpsb
out
lcall
mov
dec
push
or
sbb
adc
xchg
add
cmp
add
mov
inc
mov
xor
mov
or
mov
fimuls
and
out
ret
jb
dec
pop
xor
mov
pushf
or
dec
inc
outsl
push
and
mov
hlt
cmpsl
int3
dec
sbbb
cmp
jg
mov
adc
nop
sti
mov
jns
mov
pop
out
xchg
les
and
xor
xchg
push
fldcw
lock
dec
xchg
xchg
js
int3
xor
pushf
cld
push
rcl
xchg
or
or
mov
sub
mov
mov
dec
and
mov
or
push
xor
sbb
add
in
into
jae
or
std
mov
orb
ficoml
mov
mov
push
xchg
inc
pop
int
pop
push
lahf
mov
cmp
or
scas
adc
icebp
adcl
jo
mov
jle
mov
jns
jl
lods
add
hlt
push
shrb
mov
pop
push
into
int3
pmaxsw
sub
cli
add
icebp
bsr
inc
sbb
dec
xchg
push
movsl
inc
sarl
mov
cli
subb
cmc
sbb
inc
aaa
push
cmp
xorb
push
lahf
outsl
aas
dec
std
lea
jge
and
xchg
pop
das
mov
lret
push
aas
testl
shrl
inc
pop
jp
sbb
inc
or
dec
or
fstpl
xor
inc
data16
pop
add
jecxz
mov
fmull
fcomps
nop
mov
mov
dec
mov
add
imul
push
dec
fsub
das
cli
stos
clc
sbb
pop
or
aas
mov
repz
mov
inc
lods
in
adc
loopne
pop
ja
mov
xchg
or
push
mov
fbstp
testb
pop
rcrb
jne
sub
pop
in
std
pop
gs
aam
fisttpl
or
rcll
mov
xor
ret
cmp
je
das
adc
cmp
dec
push
inc
es
inc
xchg
fs
sub
pop
test
std
icebp
xlat
aam
std
aad
jne
rcr
iret
and
mov
lea
negb
jae
pop
or
mov
mov
mov
gs
add
ret
xor
cltd
xchg
cmp
or
in
cwtl
cli
shrb
jnp
add
mov
and
lcall
or
inc
into
sahf
jge
shll
sbb
ss
hlt
push
xchg
mov
sub
test
push
sbb
adc
push
xlat
xchg
cwtl
aaa
jo
faddl
nop
push
dec
cmp
push
test
jg
loop
xchg
jns
push
adc
outsb
sbb
scas
inc
and
pop
leave
fimull
lock
das
loope
mov
dec
mov
imul
mov
lret
fisubrs
sub
mov
push
repnz
int
or
fsqrt
lcall
xor
loopne
cmpl
mov
adc
mov
out
out
mov
loop
ficomps
shll
lret
cli
dec
jno
pop
adc
out
daa
adc
sub
shrb
mov
dec
inc
cmp
mov
out
jb
icebp
or
int
lods
lret
shrb
fistps
sub
mov
and
popa
adc
je
int
dec
lea
inc
lds
push
pop
pop
test
pop
mov
xchg
lock
fmulp
push
sub
sti
shlb
jmp
int
jnp
mov
cmp
scas
pop
mov
pop
dec
ret
xchg
dec
xor
sub
je
jecxz
lds
mov
dec
mov
jno
gs
mov
repnz
mov
subb
sub
loop
dec
jge
pop
es
sahf
pop
daa
push
pop
shlb
inc
pop
dec
and
adc
aad
mov
aaa
mov
jmp
sub
lea
add
fnstcw
popa
or
test
pop
push
mov
movl
cmp
xchg
inc
pop
add
cltd
xchg
ret
loope
int3
cmc
int
xlat
test
xor
xlat
hlt
push
fldenv
jg
push
mov
loopne
pop
jmp
leave
add
push
pop
adc
or
iret
lds
test
cmpsl
lret
inc
fldl
roll
into
es
ja
decb
adc
sbb
ljmp
fadds
cmp
int3
xor
aas
int3
pop
lcall
imul
fildll
jge
leave
pop
xor
int
or
out
xchg
push
xchg
jno
pop
lret
jl
inc
popf
movsl
sbb
and
xlat
cmpps
sub
imul
mov
rcr
and
sahf
mov
mov
jl
jl
lret
sub
dec
fcomip
xlat
push
add
and
push
ret
in
rcll
jle
pop
sub
push
push
fdivl
cltd
lock
pop
repnz
cmp
decl
int
xlat
add
sbb
rorb
arpl
shr
mov
xchg
pop
inc
adc
sarb
dec
ficoms
mov
shlb
or
fstl
lds
inc
sbb
inc
rorb
cwtl
enter
in
ficompl
repnz
mov
neg
imul
dec
mov
lds
dec
cmp
fisubl
push
sbb
push
ljmp
fisttpll
jp
ljmp
xchg
inc
or
scas
cmpl
xchg
mov
in
lods
es
push
dec
movsl
mov
inc
xor
xchg
mov
pop
out
daa
enter
push
adc
mov
mov
test
rcl
test
xor
inc
rorl
push
inc
sub
and
dec
sub
or
loope
mov
inc
shll
dec
xor
fists
mov
dec
in
insl
inc
sub
loop
sbb
or
push
xlat
push
or
repz
pop
jne
aaa
push
fidivl
cmpsl
push
daa
pop
enter
push
shr
push
sub
lcall
pop
hlt
cmp
xchg
lods
call
imul
push
push
mov
int3
sarl
lock
lods
mov
or
les
pop
jno
pusha
cltd
push
pop
jbe
cmpsl
leave
dec
and
imul
xlat
mov
push
lahf
ret
imul
cmc
aam
leave
push
push
mov
mov
das
lds
push
stc
fnstsw
repnz
inc
push
or
sbbb
mov
lret
push
clc
push
or
hlt
les
mov
mov
adc
inc
mov
fiaddl
scas
mov
xor
fnstsw
dec
neg
pop
mov
lock
cmp
shr
add
leave
jl
leave
iret
jmp
mov
push
cmovl
adc
cltd
pop
or
adc
scas
add
scas
add
in
cltd
in
test
sub
mov
adc
or
sarb
mov
inc
add
lea
popa
pop
mov
imul
jo
lret
call
mov
push
faddl
stc
cmpsb
jge
fsubs
sbb
jbe
or
aam
fsubrl
repnz
mov
xor
add
push
push
movsl
in
lods
cltd
sbb
cmpsl
mov
cld
xchg
push
xchg
xchg
push
hlt
xor
movsl
ret
mov
loope
lock
xor
popa
mov
pop
adc
lock
mov
cmovg
repnz
or
jno
imul
xor
aas
cmp
iret
mov
cld
aam
push
cmc
dec
sbb
subl
jle
adc
sbb
or
push
dec
mov
inc
sbbl
lahf
test
das
iret
out
fucomi
popf
jmp
pop
pop
mov
ret
sbb
out
sahf
lods
mov
mov
sub
or
cwtl
inc
testl
andb
mov
cmpsl
lcall
mov
push
addr16
aam
sbb
decl
mov
ja
adc
pop
fidivrs
xchg
lods
lods
mov
inc
sub
cmp
shrb
add
inc
jne
cmp
addr16
push
pop
dec
push
cmp
cs
stos
push
jb
jg
sbb
fcom
mov
mov
cltd
insb
bound
pop
lahf
inc
xchg
push
in
pop
mov
movsl
jbe
fdivrs
xchg
int
insl
mov
nop
in
inc
inc
dec
adc
mov
hlt
and
mov
cmc
mov
fnstsw
daa
out
cmp
cs
and
aad
cmp
xchg
cpuid
faddl
pop
scas
add
neg
adc
pop
cs
sub
push
push
xor
mov
cld
or
das
xchg
inc
pop
lds
leave
xchg
mov
and
or
fdivr
pop
cmp
mov
icebp
scas
andb
and
and
jne
xor
std
in
adc
test
addb
pushf
lods
pop
pop
imul
mov
pop
push
cmp
push
loope
cld
mov
push
std
stos
nop
sub
pop
pop
outsl
lahf
adc
inc
jg
lea
test
xchg
fdivrp
mov
clc
cmp
das
loop
mull
scas
lods
sahf
xor
outsl
and
mov
aas
push
cli
and
pop
xchg
iret
mov
cmpsl
iret
jmp
lock
into
xor
les
sub
jae
mov
pop
pop
push
or
hlt
adc
xchg
movsl
xchg
sub
push
sbb
lds
aam
push
pop
mov
sbb
pop
sub
xchg
fcoms
in
jbe
inc
pop
inc
push
jge
in
pop
pop
js
ret
pop
sbb
jmp
add
jns
push
sbb
push
jno
sub
stc
mov
insb
or
out
adc
sbb
xchg
ljmp
cmc
sbb
sbb
fistl
sub
and
data16
and
int
test
push
add
icebp
sbb
popf
fcmovb
and
xor
divl
lret
adc
inc
movsb
das
fldcw
sbb
jge
fisubs
movsl
add
fwait
call
add
loop
sahf
adc
jmp
xchg
mov
repz
roll
out
jl
xlat
cli
leave
xor
mov
adc
add
insb
or
jno
mov
aad
sub
cli
push
dec
rclb
pushf
sub
or
or
std
pop
xchg
bound
xlat
mov
das
mov
dec
imul
dec
push
gs
pop
adc
push
or
fsubrl
xchg
dec
xchg
cmc
add
dec
mov
xchg
clc
push
mov
repz
rcrb
cmc
mov
push
pop
xor
cli
lods
outsl
add
xchg
or
mov
push
sahf
repnz
in
dec
repz
pop
fwait
enter
mov
inc
bound
popa
cmpl
cmpsl
mov
dec
test
pop
push
scas
rolb
mov
xchg
jg
fbld
loop
sub
jb
adc
mov
jbe
int3
aad
and
xor
imul
xlat
lar
ficoms
jecxz
or
push
lcall
dec
cmp
dec
aam
dec
cmp
and
pushf
addb
pop
cwtl
aad
xor
push
sbb
das
xlat
shlb
mov
cmp
pop
xchg
dec
inc
rcrl
adc
inc
xchg
lock
pop
xchg
push
and
aaa
xchg
pop
imul
shr
sub
xor
add
int3
ja
addr16
mov
cmp
roll
dec
push
xor
in
jns
mov
sbb
dec
pop
dec
cmp
movsb
pop
cmp
cmpsl
cmp
sti
les
test
xor
fsubs
test
std
in
adc
push
popa
inc
shlb
jno
sub
adc
leave
mov
or
lods
call
ds
jne
add
xor
divl
in
adc
pop
aam
or
mov
jns
bound
adc
xchg
pusha
aaa
xor
sub
int3
les
jo
pop
and
push
aam
xlat
jge
add
xchg
loopne
clc
mov
test
xor
xchg
pop
movsb
dec
jnp
xor
icebp
movsl
adc
pop
sub
aad
fs
aad
xor
inc
and
ds
and
mov
jo
and
insb
push
fs
xchg
mov
les
std
in
cmp
test
mov
jl
adcl
jo
sbb
sub
or
lods
pop
scas
push
jne
add
aaa
dec
xchg
idivl
fnstenv
jno
cltd
scas
addb
sub
loopne
sub
adc
out
lret
in
push
or
inc
sbb
clc
mov
fs
jno
pop
scas
rolb
insb
fmull
mov
mov
dec
cli
cmpsb
outsl
aaa
test
movsl
push
jecxz
test
ss
jo
jne
jno
inc
leave
outsb
fs
lods
call
loope
jne
add
xor
in
xor
pop
pop
aam
or
mov
sub
xor
jno
jo
stc
scas
pusha
add
adc
mov
mov
dec
cli
adc
test
scas
cmp
jns
loope
adc
xchg
xorb
dec
xor
enter
sub
push
jle
nop
inc
sbb
sub
dec
leave
in
pop
sbb
roll
sbb
jo
jne
jno
inc
leave
andl
push
cwtl
mov
fdivl
add
movsb
inc
xchg
add
jle
sbb
shll
add
jno
jno
insb
cmc
lea
testb
cmc
cmp
sub
adc
mov
jae
popf
add
xor
push
sub
sbb
mov
mov
fs
pop
jl
pop
mov
push
daa
push
sbb
sub
pop
adc
xor
cmp
add
jns
inc
addr16
xlat
jo
orb
stc
shlb
rorl
imulb
js
cli
sbb
nop
mov
movsl
ljmp
movsl
mov
test
jg
add
xchg
clc
mov
lods
aad
mov
rcl
out
inc
sbb
scas
xchg
jno
add
sbbb
dec
das
mov
int
out
add
xor
jo
lret
mov
test
lahf
or
push
adc
cmp
mov
sub
rorb
sub
out
fst
ss
icebp
mov
insl
inc
mov
fsubs
subb
aam
xlat
pop
shrb
fstl
jne
test
stos
xlat
mov
ret
std
rcll
outsb
push
xchg
push
dec
cltd
or
imul
push
mov
inc
jp
jno
aaa
clc
xlat
add
jns
out
xlat
sbb
cmpsl
gs
xchg
fnsave
and
jae
adc
xor
or
loop
fcom
push
cmp
lahf
fadds
push
or
sub
xor
adc
dec
xchg
jl
mov
mov
or
push
rorl
xor
or
fwait
stc
adc
mov
daa
pop
leave
nop
and
xchg
pop
lods
sbb
in
xchg
sbb
push
mov
push
gs
inc
cmp
out
je
int3
sub
adc
or
stos
mov
sub
imul
push
leave
hlt
mov
in
mov
cli
pusha
dec
fwait
xor
adc
insb
int3
dec
mov
addr16
inc
lea
gs
sahf
adcl
addb
add
mov
or
mov
push
or
mov
outsl
loopne
push
cmp
pushf
repnz
mov
mov
adc
cmp
mov
pusha
mov
shll
dec
pop
sub
pusha
in
inc
xorl
lea
adc
aam
aam
aam
lods
cmp
pop
or
xor
sahf
pop
xor
call
pop
push
dec
shrw
stc
inc
in
add
mov
sbb
daa
rorl
push
out
jl
in
lret
push
jg
aaa
pop
iret
push
mov
loop
inc
aam
fmul
inc
mov
outsl
xchg
push
or
xchg
and
jecxz
pop
adc
and
cli
mov
push
insb
adc
add
and
pop
push
xor
cmp
jo
loope
jb
fstps
push
mov
mov
sub
add
aaa
mov
mov
xchg
pop
xor
mov
sub
push
idiv
pop
repz
mov
cmp
repz
or
pop
jno
jle
sbb
daa
sldt
pop
push
sahf
pop
test
test
je
xchg
dec
sbb
lock
and
pop
dec
dec
cmc
ficoml
js
iret
mov
add
or
repz
inc
push
xchg
rol
inc
std
lret
icebp
mov
rcrl
jnp
pushf
ret
aad
sbb
mov
addb
fisttpll
cmpsb
bound
or
js
cmp
mov
xor
test
add
mov
rcll
xchg
and
mov
fiadds
int3
cmp
mov
adc
cmc
mov
fiadds
xchg
nop
dec
pop
aad
push
pusha
loopne
fidivl
mov
add
sbb
pop
insb
jnp
jo
sub
movsl
outsb
into
inc
xchg
inc
push
cmp
xchg
push
mov
scas
cs
adc
mov
ja
aam
add
mov
jns
std
xchg
jl
inc
pop
in
test
lret
pop
mov
jge
inc
push
popf
jno
push
mov
sti
mov
addr16
pushf
lret
mov
gs
push
int
bound
and
pop
xchg
stc
cltd
xchg
inc
cmp
aad
in
xor
xor
or
push
addl
lea
outsl
mov
out
sbb
pop
sub
je
mov
mov
mov
xor
arpl
lea
popf
cmpl
arpl
and
jp
add
jg
subb
push
popf
cli
imul
aaa
cmp
cmc
test
mov
loope
lea
xor
pop
mov
push
xchg
jl
pushf
sub
ja
popf
mov
pop
clc
lret
add
cmp
das
test
aad
inc
decb
xchg
dec
xchg
inc
das
pop
in
dec
fstpl
adc
jb
fadd
out
mov
enter
fbld
icebp
fistpl
pop
xlat
push
dec
das
mov
mov
and
loopne
mov
sti
mov
scas
movsl
ljmp
mov
loopne
mov
push
sahf
mov
nop
cmpsl
xor
dec
mov
aad
mov
xor
xchg
xor
lea
paddsb
fisttpll
jnp
mov
sahf
int3
out
fwait
hlt
mov
inc
mov
cmp
rorb
enter
neg
mov
sub
cmp
mov
rolb
loope
mov
outsl
inc
push
cmpsb
rcll
mov
adc
jnp,pn
mov
imul
inc
jae
gs
add
lahf
aas
popf
mov
xchg
sahf
adc
sub
push
mov
jle
mov
dec
xchg
icebp
or
mov
adc
pop
pop
aaa
sbb
push
es
adc
jns
pop
ss
and
stos
mov
aas
shll
enter
xor
icebp
cmpsl
push
xor
icebp
int
imul
add
out
clc
pop
rol
pop
mov
sub
inc
inc
pop
mov
lcall
or
mov
push
mov
aaa
mov
inc
mov
cmp
lea
loop
dec
dec
or
pop
jbe
out
fnstenv
and
lods
jp
mov
clc
les
adc
add
test
rcrb
mov
lods
dec
cmp
stos
pop
scas
cmp
sbb
cli
and
in
sub
faddl
scas
xchg
cmpsb
lock
sub
sub
popf
pop
jp
shrl
iret
push
cmp
push
adc
xchg
fwait
pop
and
int
xchg
rclb
mov
mov
add
sub
fbld
cmpsl
xchg
in
fcoms
inc
sahf
ja
fs
add
les
shlb
jl
cltd
xchg
mov
ret
test
jle
cmpsl
in
outsl
inc
movsl
negl
pop
popf
add
test
fwait
xchg
icebp
iret
outsb
or
pusha
lock
bound
enter
add
gs
insb
inc
cmp
mov
test
in
loop
ficomps
aam
jl
lcall
sub
mov
out
adc
push
xchg
xor
mov
fwait
jge
fiadds
sub
add
loop
popf
addl
push
je
scas
es
pop
fmull
in
sbb
push
lds
ljmp
adc
sbb
xor
xchg
test
adc
dec
mov
jb
outsb
sbb
mov
dec
imul
mov
ljmp
xchg
push
movsb
push
cmpsl
fsubrl
clc
pop
stc
cmp
ja
push
rcr
leave
and
lret
xchg
cmp
or
cmp
push
sub
daa
inc
stos
ds
xchg
sbb
sti
lahf
stos
push
cmpsl
daa
aas
pop
xchg
jmp
mov
imul
test
adc
mov
pop
push
mov
jns
leave
inc
mov
pop
dec
int3
mov
lret
or
scas
ss
into
fwait
aaa
fs
adc
andl
iret
cs
and
fisubl
les
aaa
push
les
das
and
enter
mov
ds
fwait
lods
ds
pop
jg
dec
cmp
lods
cmp
push
cmpsl
das
pop
pop
loopne
test
add
push
dec
or
sub
aad
ja
sub
jo
sub
pop
or
out
mov
mov
loop
test
pop
fbstp
sub
stos
mov
add
inc
inc
push
fucomi
iret
test
xchg
adc
xor
mov
scas
fdivrl
sbb
repnz
movsb
dec
nop
mov
divl
aad
mov
sub
lock
push
push
push
mov
adc
push
mov
add
pushf
or
ret
test
cmp
test
popa
fcomp
inc
pop
call
xor
notb
jmp
dec
mov
rcrb
mov
mov
push
mov
in
xchg
stc
inc
jg
add
xchg
daa
or
out
xchg
mov
das
mov
andl
pop
dec
xor
cmp
push
js
test
jns
mov
sbbb
fidivl
loope
push
and
push
xchg
test
sub
imul
adc
rolb
adc
movsl
adc
pop
sbb
scas
call
dec
push
xchg
cmpl
stc
or
stos
jo
jge
or
std
sahf
jbe
sahf
push
cmp
inc
cmc
add
sbb
enter
push
or
int
adc
movsb
popf
sahf
cmp
imul
jns
arpl
fcmovne
inc
pop
cmp
push
frstor
push
decl
jge
movsb
jecxz
decb
pop
leave
mov
push
out
sahf
xchg
pop
sbb
pusha
jae
ja
and
jnp
test
or
mov
push
inc
and
jmp
sub
or
inc
push
cltd
test
jge
idivb
adc
sarl
and
ret
xchg
inc
xchg
lods
arpl
push
xor
xchg
xchg
mov
pop
push
push
inc
test
loopne
sbb
cld
dec
pop
cs
pop
cld
add
jl
cmc
inc
loopne
mov
dec
mov
fistps
lods
cmpsb
decl
jne
push
cwtl
push
push
insl
lret
stos
pusha
jmp
push
cmp
enter
out
sti
mov
or
sub
in
lret
es
mov
scas
mov
mov
pop
test
push
xlat
insl
cmpsl
push
lcall
lock
or
sub
enter
cltd
dec
out
mov
and
sub
out
inc
push
or
mov
movsb
stc
jne
mov
pushf
shrb
mov
mov
stos
scas
sahf
loopne
movsl
lds
test
inc
pop
xor
lods
testl
sbb
gs
xchg
mov
out
mov
pop
outsl
adc
rcl
cmp
in
adc
in
test
pop
call
xchg
call
lods
aaa
mov
rcl
iret
xor
les
addl
inc
out
mov
sub
cmp
xchg
pop
sub
arpl
fstl
out
outsl
sarl
popf
cmp
imul
enter
test
xchg
fwait
xor
jecxz
lahf
mov
jl
mov
pop
or
int3
push
xchg
int
jbe
fiadds
iret
pusha
loope
adc
loopne
cmp
shr
xchg
std
jge
inc
jp
test
jne
push
mov
xchg
scas
test
sub
mov
mov
jns
callw
das
in
rolb
lods
push
movsl
pushf
add
leave
and
leave
into
lret
xor
fcomi
gs
daa
add
jne
mov
sub
pop
jg
fs
stos
rcll
stc
add
or
mov
imul
jno
lret
add
call
ljmp
cmp
push
mov
pushf
mov
adc
sbb
out
push
movsb
js
pop
mov
outsb
fucomip
lea
sub
add
imul
cs
std
push
pop
cmp
push
jo
jnp
push
xchg
fcomi
les
leave
psadbw
mov
mov
cmp
lock
mov
insl
clc
popf
push
xor
adc
test
jl
and
push
fmull
out
cmp
add
add
insl
xchg
insl
mov
mov
mov
hlt
mov
push
jle
jecxz
je
fbstp
ficompl
sbb
cmp
decl
push
push
stos
dec
adc
jge
jmp
push
push
or
sub
aam
popf
mov
jp
xchg
and
mov
pop
test
sub
pop
stc
stc
sbb
mov
loopne
sub
jae
sub
push
jl
stc
lds
adc
and
mov
jb
lea
cld
push
aad
sub
mov
mov
push
xchg
and
cmp
insl
ror
mov
adc
subb
jno
xchg
sahf
mov
les
roll
scas
mov
push
add
data16
and
xchg
mov
add
adc
out
sub
xor
stos
popf
hlt
mov
adc
cmpsl
pop
insl
xor
adc
fstpt
mov
or
adc
mov
scas
push
out
mov
xchg
loopne
std
outsb
jo
add
scas
push
movsl
xchg
mov
push
add
inc
cmp
jge
mov
pop
dec
les
push
or
sbb
push
outsl
mov
xchg
xor
shrl
pusha
adc
push
ror
jle
and
or
xchg
jne
jne
add
pop
es
sbb
mov
decb
out
lret
rclb
jb
jb
sbb
stc
pop
out
out
mov
jbe
fldl
jo
xlat
in
pop
aam
add
jmp
int3
clc
mov
sbb
pop
cvtpi2ps
les
fwait
mov
test
les
push
nop
add
bound
and
lahf
nopl
hlt
xchg
pop
inc
mov
scas
lret
mov
fisttps
or
int3
movsl
cmp
jmp
adc
lret
cmp
orb
xchg
push
sbb
inc
stos
jcxz
cmc
icebp
outsl
sbbl
sar
les
sarl
rcll
rcr
loope
gs
scas
imul
add
sbb
jne
iret
mov
xchg
jl
xlat
xor
or
test
mov
lods
repnz
push
daa
inc
mov
sub
hlt
xchg
daa
and
mov
push
adc
imul
pop
sbb
xchg
lock
test
les
mov
outsl
enter
popa
add
mov
ja
xor
in
rcrl
stc
mov
xchg
pusha
adc
xchg
sbb
push
inc
mov
sar
mov
rclb
dec
sbb
in
nop
es
stc
push
add
mov
insb
cmpsl
or
rorb
add
mov
xchg
add
mov
out
mov
sarb
sbb
incb
sbb
inc
cmp
inc
adc
mov
es
push
jb
jae
leave
mov
ret
jl
outsl
inc
inc
push
aad
jb
mov
fnstcw
adc
dec
cmc
jb
jmp
push
fstp
je
or
mov
in
arpl
out
mov
flds
jo
adc
in
push
cmpsl
aaa
xchg
js
test
push
in
mov
mov
dec
add
scas
jbe
mov
xchg
add
push
add
loope
movsb
andl
cmp
adc
icebp
stos
xor
mov
jg
das
in
dec
insb
pushf
hlt
scas
lahf
outsl
jo
pop
xchg
push
mov
lahf
add
push
out
cmpsb
ja
mov
test
push
pop
mov
scas
aam
or
inc
push
xchg
jno
sub
ljmp
cmp
adc
leave
and
leave
jne
out
ss
xor
lods
push
mov
or
repz
jg
and
dec
test
cmpsb
xor
fmulp
pop
loopne
cmp
xchg
xor
add
inc
pop
hlt
ret
ljmp
adc
dec
bound
fiaddl
mov
cmp
xor
jae
out
outsl
shll
mov
xchg
repz
jns
dec
lahf
std
pop
mov
std
pop
jl
mov
and
jp
xchg
mov
cmp
fcmovnb
ret
std
push
dec
dec
imul
mov
clc
shll
mov
jae
popa
addr16
push
jne
jo
dec
shlb
pop
sbb
stc
mov
fs
mov
dec
jne,pn
dec
or
push
lods
jb
sbb
jne
test
pop
push
dec
or
dec
add
xchg
mov
push
adc
pop
inc
push
loope
sub
fs
ja
jne
add
add
mov
jb
stos
jle
out
xchg
sbbb
adc
ret
out
outsl
jne
fs
or
dec
mov
xchg
or
or
out
push
fcmovnbe
xchg
cmpsb
push
sti
pop
pop
adc
mov
mov
cmp
out
scas
sahf
movsb
adc
aaa
aad
inc
push
stos
dec
mov
cwtl
jp
cwtl
ds
adc
testb
lea
out
pushl
out
stc
pop
cs
mov
push
xor
daa
sbb
mov
negb
or
dec
pop
enter
and
icebp
mov
addr16
add
adc
sbbl
mov
dec
add
mov
add
inc
or
outsl
cmpsb
es
sub
gs
ret
mov
xor
mov
repnz
aam
das
aad
jne
lcall
test
ficoml
test
stc
and
stc
xor
xor
ljmp
das
clc
xor
outsb
leave
mov
push
or
es
jle
inc
inc
cmp
cmp
mov
xchg
arpl
in
ror
cmc
cmp
ret
jg
divb
scas
adc
push
ret
fisttpll
or
mov
repz
adc
jg
rcl
lods
movsl
pop
push
aas
xlat
jp
jl
in
or
imul
mov
mov
xchg
out
inc
inc
loopne
push
xchg
add
add
stc
xor
lahf
or
and
icebp
mov
mov
fildll
and
mov
mov
addb
sar
xor
jg
xchg
add
lds
add
fildll
sub
fsubl
jg
sbb
lea
pop
push
daa
xchg
jb
sub
fsubrl
push
mov
into
push
popf
nop
js
push
jnp
pop
loop
adc
stos
inc
leave
outsl
movsb
push
cmc
mov
inc
outsl
mov
in
adc
jmp
sub
repz
cmp
add
xchg
jl
mov
stos
mov
add
add
mov
and
shll
in
pop
int
push
jnp
jb
cmpsl
or
and
into
pop
jmp
dec
cli
or
std
mov
gs
jae
roll
adc
add
dec
adc
mov
xor
mov
jne
pop
jge
and
ret
cmpsl
inc
popf
xchg
in
call
xor
pop
arpl
pop
dec
jno
in
push
sub
adc
sbb
xchg
cmpsl
xor
jmp
faddl
out
out
inc
add
push
movsl
pop
push
xchg
mov
sarb
pop
xchg
jp
arpl
pop
jno
xchg
ret
and
push
cmp
inc
dec
das
scas
rorl
insb
push
in
in
jmp
mov
repz
out
inc
mov
dec
mov
notb
push
dec
into
lods
push
leave
xlat
dec
jp
xor
out
pop
inc
vaddsubpd
jae
mov
cmp
jns
adc
adc
xor
push
rcrl
fstp
rcrl
push
sub
xchg
mov
insl
cmp
popa
xchg
xor
repz
divb
xor
icebp
xor
ret
std
or
push
pop
sbb
add
shlb
inc
inc
pop
push
adc
fistpll
jno
lods
and
scas
sbb
cltd
xchg
or
inc
rcrb
mov
push
aad
cmpsl
xor
mov
lods
pop
shll
mov
push
xchg
repz
loope
push
lods
pop
push
loop
lret
in
xchg
jno
jne
sub
gs
popf
mov
or
call
addr16
adc
arpl
stc
scas
frstor
pop
imul
lret
pop
cmc
gs
js
sbb
data16
leave
mov
jbe
fldenv
out
cmp
xor
aaa
fists
sahf
mov
enter
jge
cli
neg
imul
test
fcompl
cmpsw
jmp
cmpsl
lods
inc
int3
cs
xchg
pop
xor
mov
bound
cmp
insb
xchg
add
push
in
xchg
xchg
shlb
fisubs
ss
adc
pop
repnz
lods
inc
sbb
push
jmp
inc
pop
arpl
mov
pop
in
pop
jne
cmp
sub
mov
mov
flds
push
mov
in
addl
mov
stc
pop
int3
xchg
sti
dec
subl
mov
aaa
push
mov
or
popa
sbb
dec
adc
or
jmp
jne
jle
sbb
dec
pop
mov
loopne
out
mov
mov
sub
add
test
adc
dec
das
rcl
sub
cltd
int
mov
es
jno
arpl
sub
lds
lret
orps
dec
test
sbb
lods
sar
jns
xchg
jg
in
xchg
lods
cmpsb
mov
lret
popf
xor
xor
jo
inc
jno
aad
jo
inc
loope
mov
fists
xchg
subl
cmp
shrl
sub
jg
push
shrl
cmpsb
inc
inc
xchg
std
pop
sub
adcb
idivb
add
xchg
jae
out
pop
cmp
cs
enter
pop
ficomps
scas
push
movsl
push
adc
push
mov
cmp
mov
dec
outsb
pop
lea
lret
sbb
inc
push
push
inc
pushl
subl
into
jo
sub
test
inc
ds
icebp
aad
lret
xlat
sbb
out
pop
or
jge
add
xchg
fstl
add
pop
stc
inc
out
leave
sbb
jge
cmc
das
and
adc
mov
dec
add
cltd
jo
xor
sbb
push
xchg
bnd
das
mov
shrb
in
daa
lods
push
sbb
dec
test
inc
movsb
clc
dec
iret
je
in
scas
or
jns
push
xchg
cmp
mov
cmp
add
clc
arpl
rcll
xchg
pop
push
call
sub
xchg
dec
dec
jmp
frstor
add
mov
cmpl
test
add
push
xor
lods
out
ja
cmp
xor
adc
or
dec
std
outsl
sub
xchg
test
addr16
or
dec
push
xchg
popa
push
sbb
jno
lret
sahf
mov
fcmovb
lock
lods
cmp
outsb
call
cmp
addl
xchg
xchg
aad
xchg
jnp
repz
or
sbb
std
mov
cmp
cltd
in
cmp
loope
mov
jno
cmp
test
inc
lds
mov
or
int3
arpl
movsl
vunpckhps
or
xor
cwtl
cmp
push
sbb
addl
inc
rcrb
rol
imul
movsb
leave
jno
cmp
cmpsl
and
mov
sarl
fldl
popf
adc
jge
adc
cmpb
aas
adc
sub
sbb
mov
adc
cmp
push
xor
and
mov
xlat
lods
and
std
add
inc
roll
stos
or
jne
sub
outsl
mov
push
test
fcomp
xor
mov
xchg
push
xchg
aad
pushl
lahf
mov
rcll
xchg
pop
push
test
pop
rcll
cmc
insl
sub
fnsave
sbb
shl
fxch
cmp
jmp
or
lds
add
push
imul
repnz
and
ds
adc
jg
mov
mov
mov
ret
shll
mov
rcl
js
enter
xorl
int
inc
imul
test
nop
mov
mov
dec
es
jns
ret
repz
leave
aad
xor
movl
pop
sbb
xchg
gs
cld
mov
lock
pop
push
cli
lods
cld
push
ss
pop
les
dec
xlat
fwait
lea
push
or
stos
lahf
jo
jne
jnp
fdivl
inc
mov
sbb
shlb
dec
and
jo
inc
sub
pop
cld
jge
jge
andl
jmp
std
adc
push
imul
mov
mov
inc
jp
scas
dec
loope
pop
jo
pop
test
mov
repnz
adc
mov
es
aam
shll
mov
xor
mov
aaa
jne
rcll
std
pop
jnp
enter
imul
dec
cmc
outsl
lret
push
ret
pop
and
inc
xor
rcl
push
push
dec
mov
stos
push
mov
rcrl
dec
dec
pop
inc
insl
inc
or
test
shr
icebp
imul
dec
add
daa
push
adc
cmpsb
or
icebp
leave
arpl
xchg
xor
mov
clc
aam
inc
push
enter
mov
pop
mov
std
dec
jle
fisubrs
sbb
mov
dec
cmp
xor
test
popf
shll
daa
jl
cmp
jge
xchg
lock
aam
cmp
mov
inc
adc
test
pop
sub
pushf
lds
rcrb
push
dec
jno
mov
popa
push
mov
popa
adc
mov
and
adc
popa
adc
adc
out
jmp
adc
jae
cmpsl
insl
jae
cmpsl
dec
jae
cmpsb
inc
jno
jp
filds
xor
shl
dec
sub
push
rolb
sub
xchg
sub
aad
jno
popa
xchg
jae
jge
jae
cltd
out
adc
xchg
inc
xor
jmp
adc
pop
ss
add
sub
cs
dec
dec
xor
rclb
dec
lahf
mov
clc
addr16
xlat
in
arpl
pop
mov
jo
xor
icebp
cltd
push
xlat
push
aam
sub
inc
xor
inc
lea
inc
test
scas
std
inc
push
mov
stc
dec
push
push
and
adc
dec
jb
adc
adcb
jno
push
add
jno
push
mov
sub
mov
add
clc
jecxz
sbb
leave
jnp
roll
mov
insl
adc
mov
xor
xor
jno
mov
popa
es
popa
and
iret
xchg
iret
jl
push
insl
test
pop
dec
test
pop
inc
scas
sub
pop
xchg
or
pop
xchg
push
lods
pop
rcl
xor
scas
xlat
cmp
stc
push
je
gs
fsubs
jbe
jge
mov
cltd
inc
cli
push
adc
xor
pop
jge
push
xchg
inc
adc
dec
or
dec
pop
icebp
fdivrl
dec
mov
mov
pop
int
fsubrs
repz
loopne
jle
insb
xchg
das
cmpsb
xor
pusha
and
mov
lods
outsl
into
out
ss
xchg
cltd
mov
stc
rcrb
leave
ret
dec
shr
push
ja
mov
add
jl
into
out
call
lds
push
mov
adc
and
lods
movsb
jo
jle
orb
movsl
lock
sbb
test
mov
jne
push
sti
pusha
xchg
test
pop
sbb
std
popa
push
lret
mov
cmp
xchg
sahf
nop
aas
push
push
call
andl
push
lcall
std
fisubrs
push
mov
adc
out
aaa
inc
dec
scas
imul
les
xorl
fsub
bound
and
iret
rclb
pop
mov
test
sub
pop
xchg
pop
or
sbb
fisubs
loop
push
rcrb
aad
xchg
outsb
int3
xchg
addl
in
iret
push
imul
roll
ljmp
pop
das
xchg
imulb
xlat
xchg
mov
sbb
push
mov
xchg
mov
scas
in
xchg
outsb
rorl
and
pop
rcrl
sarb
lds
pop
lcall
sub
aas
add
xchg
or
mov
sbb
loope
mov
leave
flds
xor
inc
fsub
and
push
loopne
out
push
jp
imul
insl
jno
call
shlb
dec
mov
aad
dec
push
jb
mov
dec
data16
sub
mov
outsl
adc
push
cmp
cmp
jmp
cli
push
cli
lods
xchg
cmp
data16
repz
mov
out
in
les
lds
movsb
mov
xchg
push
adc
pop
xchg
sbb
aas
inc
in
jge
xorb
sub
pusha
subb
cmp
fwait
in
cmpl
inc
add
lds
sbb
and
push
inc
fs
orb
push
out
aam
call
push
push
int
mov
sbb
rcll
mov
push
jnp
lds
add
sub
sbb
pusha
add
inc
sbb
cmpsl
daa
mov
dec
sub
xchg
push
test
shll
data16
jecxz
mov
xor
inc
jb
cwtl
xchg
xor
cmpsb
mov
leave
sub
fdivs
sub
int
xlat
xor
push
jno
inc
dec
aad
pop
adc
dec
xor
js
cld
test
sbb
push
adc
pop
jle
shlb
shrl
sub
test
push
sahf
cmpsl
fcoml
pop
fcoms
arpl
stc
call
sub
stc
add
rorl
lret
sbb
xchg
or
pop
ss
dec
aas
mov
bound
dec
dec
outsl
jl
es
adc
pop
and
inc
mov
xchg
adc
mov
dec
popl
or
add
loopne
jns
or
cmp
lods
or
xor
pushf
lret
movsb
pop
sbb
cltd
rcrl
push
pusha
inc
mov
adc
cmp
and
inc
push
adc
loope
adc
xor
cmpsl
push
cmp
icebp
out
lret
std
push
jne
rorl
push
push
clc
sti
cli
sub
daa
xlat
jge
stos
dec
fistpll
das
xchg
test
mov
dec
mov
push
rol
pop
push
mov
outsl
lds
mov
out
and
mov
mov
cltd
lret
js
out
into
xor
pop
push
sub
arpl
stc
jg
mov
inc
out
mov
inc
xchg
rclb
inc
pop
jl
stos
test
lods
xor
or
mov
xchg
movsl
in
scas
lods
enter
mov
mov
mov
rcll
movb
pop
jbe
push
or
mov
scas
mov
push
sbb
adc
fs
les
lods
mov
push
jmp
mov
jbe
inc
aam
je
aaa
push
es
jbe
inc
aaa
and
push
test
jg
std
sarl
push
fcoml
mov
jmp
pop
enter
lret
xor
lea
cltd
pop
pop
ficoms
pop
xor
or
adc
fsubs
xor
ret
enter
pop
in
test
sub
lret
popf
imul
and
inc
cmp
arpl
dec
push
add
mov
and
mov
jnp
push
idivl
aam
hlt
lds
fstpt
sub
push
out
fwait
and
jo
jp
fstl
xor
sub
push
repnz
push
lret
rcll
cmc
jp
push
push
in
cmp
ret
stos
rcrb
lea
mov
movsl
mov
adc
ret
jne
cmpsb
insl
jne
and
add
loope
add
stos
les
push
popf
repnz
cmp
xchg
xchg
iret
xchg
test
les
imul
in
mov
insl
lret
and
icebp
mov
jmp
out
xor
pop
fidivl
xchg
xor
or
and
sti
shlb
scas
popf
js
out
mov
lcall
orl
sahf
clc
fldl
pop
push
cld
push
inc
das
ss
and
jp
push
sub
cmpsb
jl
iret
lock
push
adc
ficoml
test
dec
mov
imul
outsb
mov
outsl
inc
fdivrs
and
test
pop
lret
inc
fld
out
movsl
push
fiaddl
push
shll
cmpsb
icebp
lret
xlat
pop
and
push
shr
jno
inc
xchg
and
mov
pop
push
iret
test
rcrl
adc
enter
cmc
das
mov
inc
push
subl
fbstp
push
gs
clc
mov
pmullw
aas
mov
inc
jge
xchg
jno
lcall
push
pop
add
jno
or
xor
ljmp
pusha
clc
shll
sbb
jno
aad
jb
add
iret
test
jge
lahf
pop
addr16
jb
aam
ret
addr16
jmp
dec
adc
mov
mov
inc
push
subl
fimuls
mov
in
test
mov
inc
sub
mov
popf
jg
in
xlat
cltd
icebp
or
dec
pop
mov
push
shll
data16
mov
dec
sbb
push
pop
imul
adc
push
das
loopne
dec
xchg
xor
dec
test
push
xchg
aaa
pop
cmp
inc
push
addl
inc
pop
cmp
mov
lods
scas
les
inc
mov
mov
fistps
repz
dec
lret
cmp
push
jg
inc
adc
jnp
inc
ret
out
test
push
fidivrl
pop
lret
popa
push
xchg
push
lods
lods
das
xchg
push
test
enter
sub
psubb
add
sahf
adc
cmp
mov
aam
pop
loope
jne
enter
dec
ss
xchg
sub
outsb
insb
push
mov
mov
or
or
sub
lods
mov
push
lock
sub
fdivrl
lret
pop
mov
in
das
popf
popf
sub
neg
in
push
jg
jle
aam
sub
lods
or
in
mov
adcl
mov
inc
push
gs
enter
mov
lret
or
sarl
mov
fsubl
dec
pop
push
inc
mull
int
les
push
pop
add
adc
pop
lods
lcall
loopne
aas
pop
or
ror
inc
cmpsb
scas
stos
mov
cltd
mov
adc
add
sbb
hlt
rcl
mov
pop
pop
pop
mov
pop
lods
inc
lds
std
mov
mov
jmp
mov
mov
loope
rcr
mov
inc
test
jg
mov
pop
aad
jl
mov
mov
mov
ret
sub
mov
pop
in
and
int
add
pop
jge
rcll
adc
sbb
jb
dec
incl
rorl
cpuid
jecxz
in
popl
mov
jg
sbb
mov
sbb
loopne
and
and
mov
push
ret
insb
xchg
pop
or
and
jle
lret
inc
xor
mov
add
mov
sbb
les
sub
scas
icebp
leave
dec
push
test
lahf
aas
jne
insl
xchg
aad
addr16
sub
icebp
inc
imul
shlb
fsubl
pop
xchg
popa
add
les
xchg
shll
ljmp
mov
in
imull
inc
sbb
cmpsb
pop
and
icebp
push
mov
jb
inc
pop
dec
add
mov
lret
mov
rolb
in
clc
xchg
pop
inc
jle
mov
fcomps
cld
adc
jne
pop
xchg
cld
mov
int
xchg
push
repz
iret
cld
in
xor
mov
cmp
std
popf
nop
mov
aas
repz
mov
inc
jbe
push
push
fsubr
js
dec
jne
idivb
mov
inc
xchg
pop
inc
outsb
inc
out
push
ljmp
fmul
and
dec
in
sub
rorb
stc
push
pop
fiadds
push
mov
pop
jmp
nop
dec
sub
aam
mov
sbb
out
leave
mov
test
les
ss
fsubrs
lea
call
xchg
sbbl
cltd
sbb
jo
lret
movsb
aam
paddq
mov
xchg
jecxz
cmp
cmp
iret
mov
jecxz
movsb
outsl
aas
scas
mov
or
pop
vpmaxsw
fdivs
enter
sti
cmp
adc
inc
and
push
push
maxps
fwait
or
add
hlt
jmp
test
filds
pop
xchg
jg
sub
gs
push
pushf
call
sbb
mov
in
cmpsb
es
push
and
pop
adc
daa
idivl
out
lods
leave
push
ficoms
sahf
pop
aaa
fcompl
sbb
sub
pop
mov
ja
adc
mov
enter
mov
shll
out
sbbb
or
cmpb
out
inc
adc
clc
rcrl
jno
lea
fsubs
sahf
add
test
push
pop
xchg
mov
pop
mov
aad
or
adc
lret
xchg
inc
adc
pop
cwtl
xchg
ljmp
loope
xchg
stos
cmp
push
xorl
es
in
inc
cli
cltd
outsb
sti
xchg
into
rorb
ret
inc
in
ljmp
ret
lock
pop
jg
loope
sar
shrl
xchg
mov
xlat
inc
xor
call
lret
shl
mov
in
inc
push
pop
jbe
push
ljmp
push
aaa
jmp
int
negl
sbb
int
add
sbb
pushf
add
ja
out
adc
jns
fdivrs
pop
das
push
int3
mov
call
jno
mov
pushf
lea
stos
jecxz
dec
rorb
dec
push
lods
imul
cwtl
xor
leave
xor
ja
daa
adc
insb
mov
push
push
jmp
popa
sbb
lcall
sbb
dec
cmpsl
dec
or
data16
cwtl
or
aas
leave
lock
xchg
mov
or
cmp
clc
or
sbb
nop
or
fisttpll
and
sub
xchg
add
cmp
incb
nop
shlb
push
inc
pop
outsb
inc
or
out
xchg
sbb
int
pop
adc
inc
fiadds
je
inc
cmpsl
mov
pop
dec
lret
popf
inc
aaa
xchg
jo
cmp
inc
js
xchg
sub
mov
bound
dec
push
jo
xor
out
jns
inc
xchg
push
inc
mov
rolb
cmpsl
sub
mov
jb
xchg
gs
xchg
roll
adc
leave
xor
mov
push
mov
add
fldl
xor
adc
jl
cmp
shlb
stc
cld
int3
jo
rorb
fwait
addr16
imul
jle
cmc
or
adc
mov
and
push
andl
xor
pusha
or
xchg
cmpsb
push
mov
push
jecxz
rcrl
decb
add
call
lds
xlat
test
jno
xor
repz
jo
out
and
or
xlat
cmc
lahf
movsb
cmp
je
les
lahf
adc
aaa
iret
jnp
es
aad
push
dec
arpl
mov
jmp
andl
mov
sar
cli
add
mov
jge
in
fmuls
sub
inc
push
sub
adc
push
loop
out
test
insl
push
adc
jg
mov
pop
ja
pop
icebp
push
rcrl
xor
xchg
push
outsl
je
sub
push
imul
das
push
enter
mov
rorl
xor
cmp
jo
outsb
repz
dec
test
lahf
adc
or
aad
xor
sahf
sti
xor
imul
addr16
fmuls
mov
dec
jge
inc
inc
jb
or
xchg
jg
pop
adc
or
int
xchg
out
ja
test
inc
hlt
mov
dec
cmp
push
rcll
cmpsb
xor
xchg
mov
pop
jbe
jle
inc
rolb
cmp
fsubp
popf
jae
sub
shrb
adcb
out
push
nop
pop
mov
int3
daa
cli
cmp
xor
sub
xchg
lods
cmpsl
jle
and
push
data16
add
leave
clc
ja
in
call
jno
bswap
pop
jae
push
inc
or
repnz
out
stc
or
mov
jl
cmpsl
fldcw
pushf
jo
out
fildl
jb
lods
sub
or
push
insl
sbb
mov
imulb
jp
leave
stc
pop
xchg
add
mov
jo
xchg
daa
or
lahf
loope
push
fldl
ret
jl
jo
mov
ja
jb
repz
loop
enter
mov
xor
mov
pusha
mov
sub
jae
repz
mov
hlt
cmp
pop
sarb
push
xchg
sti
jle
stc
pop
and
sub
dec
stos
and
fstpl
sub
shlb
in
rcr
jmp
sbb
push
jg
inc
pop
xchg
inc
sahf
aaa
repz
adc
jno
imull
cmc
les
leave
xor
mov
iret
mov
mov
sub
mov
push
jae
rorb
mov
sti
cmc
pop
daa
mov
std
stos
enter
faddl
test
test
out
push
add
sbb
aad
push
sarl
inc
xor
pushf
clc
sbb
test
push
ss
dec
or
and
push
xchg
or
pushf
int3
xchg
jbe
push
cmp
xchg
sub
scas
pusha
pop
sbb
out
sbb
cmp
aaa
fstps
hlt
das
mov
stc
hlt
xchg
ret
mov
cmpsl
xorl
orl
nop
bound
fistl
pop
add
sbb
mov
sbb
mov
sbb
pushf
adc
in
jl
pop
xor
pop
mov
fnstsw
std
loope
ficoml
jb
inc
push
sub
aaa
popl
fldl
mov
cmpsl
les
gs
mov
xchg
hlt
in
sub
pop
ret
xchg
sbb
fsubl
cld
rorl
cltd
pop
mov
aam
jmp
jmp
mov
outsb
inc
jae
jo
dec
inc
je
enter
adcb
pop
aas
ljmp
jl
pop
sub
adc
fnstcw
pop
out
xchg
mov
bound
push
inc
test
scas
xchg
sbb
fcmovu
fmul
leave
sbb
push
mov
sbb
popf
inc
cmp
and
dec
sub
push
sbb
adc
in
adc
mov
movsb
cmp
pop
xchg
aad
push
clc
push
aam
cmp
xchg
inc
adc
mov
sub
push
das
movsl
sbb
inc
sbb
push
mov
pop
out
adc
dec
jno
xchg
icebp
push
cmp
ja
push
sarb
inc
sub
jl
adc
insb
mov
xchg
push
push
ret
into
mov
cmp
push
inc
xor
cld
fsubrs
dec
mov
lds
xchg
iret
outsl
dec
push
inc
loope
sbb
jb
jbe
fsubs
or
jo
cmp
stos
mov
inc
push
xchg
xchg
and
cmpb
pop
mov
or
cmpsl
rcl
clc
push
pop
add
lds
test
push
andl
sub
inc
mov
sar
mov
daa
push
cmp
pop
iret
inc
pop
fadds
icebp
xchg
pusha
mov
cld
faddl
scas
lea
es
sub
add
insb
jb
and
or
repz
loop
jmp
add
pop
fildll
pop
inc
xchg
imul
push
std
push
cmpsb
lcall
cmc
es
mov
sub
lret
cmp
or
enter
scas
ljmp
ret
pop
js
int
cmp
mov
addb
fstps
push
pop
lds
sbb
rolb
cmp
mov
sub
pop
inc
scas
sti
xchg
test
int
and
mov
adc
in
nop
mov
push
jb
pop
push
lahf
push
call
orl
icebp
iret
aaa
dec
rcr
add
mov
or
rcrl
fs
cmp
push
call
adc
and
in
mov
inc
push
pop
pushf
daa
xchg
mov
bt
stc
mov
cmc
mov
popa
sahf
push
jmp
mov
mov
xor
fisubrs
jne
jmp
mov
in
fwait
aas
mov
or
ret
pop
in
imul
out
ja
stos
sbb
test
pop
in
mov
push
ljmp
pop
into
test
cli
dec
pop
aad
ret
cmp
lods
add
xchg
js
cmp
or
push
ss
stc
sti
jne
fsubr
push
push
out
adc
lea
mov
xchg
xor
sub
sarb
pop
int
mov
jne
push
mov
jmp
int
adc
push
mov
ficoml
dec
cmc
das
pop
movsl
sbb
cmpsb
cli
xchg
out
ljmp
and
inc
int3
jg
push
add
mov
lods
xchg
or
pop
pop
xchg
enter
and
cmp
ss
cmpsl
pushf
aaa
stc
xchg
pop
dec
bound
shll
push
test
push
sbb
mov
and
sahf
lahf
lods
mov
ja
int
leave
insb
pop
es
aas
out
mov
lcall
xchg
adc
imul
xor
movsl
aam
sbb
stos
lahf
aas
stos
mov
cmpsl
mov
scas
inc
enter
push
insb
ss
jp
daa
and
add
sbbl
outsl
test
bound
add
data16
mov
in
insl
jle,pt
pushf
xor
inc
in
jo
movsb
jb
mov
mov
lea
repnz
roll
mov
or
fsts
es
int
in
jle
fimull
or
pop
dec
repz
dec
mov
iret
mov
lret
imul
int
xor
insb
fwait
loope
enter
xchg
std
addr16
lods
jge
addb
test
add
jecxz
jo
or
insb
cmp
femms
dec
push
repnz
out
ljmp
popa
mov
lcall
fstpt
cmp
ficompl
pushf
lret
mov
sbb
mov
out
dec
inc
xchg
enter
ja
bound
push
aas
inc
add
into
es
mov
lds
sbb
std
es
rclb
fsubl
xchg
popf
or
pop
jne
mov
pop
sub
lret
xchg
pop
mov
jne
and
or
icebp
xor
mov
jb
call
cli
sbb
ret
roll
mov
lcall
pop
sub
fisubrs
sti
jo
out
dec
cs
jae
stos
shrl
pop
lds
sub
add
add
fidivrl
jo
outsl
incl
dec
popa
iret
sbb
out
addl
insb
sbb
sbb
xor
or
data16
and
clc
jg
jecxz
mov
jmp
stos
push
cmp
pop
cmpsl
adc
js
popa
fmul
xor
popf
lods
sub
shll
sti
aas
aam
nop
popf
movsb
push
mov
mov
test
out
and
inc
and
addl
scas
push
mov
in
sub
jnp
mov
inc
fidivrl
aas
or
adc
rcl
aas
movsl
ljmp
mov
shll
fwait
lret
fucomi
dec
leave
sbb
inc
sub
lea
aaa
push
movsb
in
imulb
negb
adc
dec
stc
leave
or
pop
insb
inc
cmp
jge
rcrl
mov
cmpsl
movsb
mov
add
cmp
or
mov
arpl
fdivl
fistps
enter
rcll
mov
cli
add
xchg
add
push
sarl
inc
cwtl
push
dec
stos
inc
push
add
sbb
lods
test
dec
mov
sbbb
movb
add
out
add
testl
push
pop
mov
leave
ret
sbb
loopne
repnz
std
lock
push
sbb
stos
cmc
lock
jmp
fcmovnbe
test
repnz
out
mov
movsl
sti
sbb
pop
clc
xor
test
inc
push
xor
aad
js
fstl
aad
push
pop
push
push
pop
or
sbb
adc
mov
arpl
push
dec
jge
pop
xor
test
xor
movsb
inc
mov
pop
pop
sub
je
roll
arpl
add
add
mov
aaa
jbe
jg
mull
ret
adc
mov
fadd
leave
or
rcr
add
dec
ljmp
mov
ret
fnstsw
dec
mov
enter
add
fsts
jp
sti
nop
jmp
repz
lea
adcl
push
cmp
gs
pop
pop
sub
and
jae
jae
clc
js
ja
dec
sbb
lret
inc
loope
push
cmp
cli
aad
add
inc
and
mov
mov
sub
popf
aam
aam
adc
xchg
and
aam
fnstenv
jmp
je
lods
xor
popf
mov
pop
out
jmp
leave
jnp
xorl
or
orl
cmp
pop
push
popf
jl
and
fists
inc
and
popa
imul
mov
int3
fcomps
cmpsl
fisttpll
xlat
ret
mov
sub
xchg
in
pop
sbb
scas
fstp
pop
in
ja
test
and
mov
rolb
daa
push
cwtl
aam
cltd
imul
inc
in
mov
or
xchg
push
dec
aam
shl
adc
mov
gs
aas
std
xor
test
push
mov
lahf
mov
adc
adc
mov
or
push
pop
dec
ret
adc
adc
dec
into
insb
pop
out
xor
arpl
lea
jl
ja
mov
adc
je
dec
cli
sti
xchg
out
and
test
cmp
and
pop
or
shll
cld
push
add
movsl
jno
inc
adc
push
arpl
push
dec
ret
sub
pop
push
daa
push
dec
movsb
bound
cli
jb
mov
fists
pop
inc
mov
and
int3
int3
outsl
repnz
mov
inc
mov
cmp
lods
hlt
push
dec
or
lock
adc
aad
leave
push
pusha
mov
aaa
insl
push
pop
and
ss
outsl
mov
inc
pop
sbb
lds
ljmp
das
out
dec
add
stos
mov
jnp
xor
jl
outsl
ljmp
sub
jns
xchg
enter
xor
cmp
push
mov
repz
int3
cltd
sub
in
pop
lods
adc
and
dec
add
gs
ret
out
es
fstl
mov
shll
std
xchg
add
addr16
inc
clc
inc
cmp
repz
or
xor
fwait
and
aad
and
out
or
leave
pusha
inc
arpl
mov
in
cmp
clc
inc
mov
in
or
jae
pop
fistl
rcl
cmp
popa
jne
mov
jge
je
xor
cwtl
or
lods
xchg
pop
shr
fnstsw
pop
insb
popa
in
xchg
push
push
push
mov
std
inc
into
mov
jle
int
sub
add
sbb
loopne
pop
xor
lahf
std
in
shrb
repz
call
cli
pop
aad
pushf
rcl
adc
pop
mov
pop
sbbl
dec
sub
jnp
cmp
push
jmp
push
sti
sahf
je
andl
aad
loop
dec
pop
xlat
popa
mov
ljmp
cmpsb
or
sub
mov
mov
adcb
xchg
push
iret
divl
out
js
inc
jb
sbb
mov
and
jne
shll
pop
test
and
dec
insl
sbb
jbe
roll
stos
into
sub
add
rcrl
popa
xchg
sub
scas
mov
adc
inc
ds
out
and
mov
push
mov
mov
das
xor
mov
jo
imul
lcall
xor
xlat
stc
leave
lret
pop
cmp
and
lock
and
xchg
ja
mov
push
test
dec
push
lcall
addb
jb
dec
ret
lea
push
push
daa
pop
in
push
pop
xchg
mov
dec
xlat
mov
fiaddl
push
call
std
push
cwtl
lods
mov
lods
jae
jne
push
stos
iret
das
fldl
xor
dec
stos
cmpsl
test
ret
dec
leave
sub
in
decb
pop
sub
dec
jmp
pop
test
fisttpl
bound
fisttpl
mov
flds
ljmp
inc
sbb
lcall
lahf
mov
mov
xchg
in
aam
in
rcll
jbe
or
shrl
push
ja
xor
add
mov
inc
out
mov
jno
imul
and
jl
and
inc
pop
dec
addl
fnstcw
test
pop
sub
mov
shrb
mov
pop
sti
sbb
and
cwtl
jae
aas
xchg
mov
cmp
xchg
sub
andb
out
popa
push
mov
cmp
jbe
pop
aad
popa
jno
dec
sbb
push
add
jle
inc
fidivl
int
rcrb
movsl
jmp
bound
pop
inc
mov
mov
lods
cmp
ficomps
cmp
sbb
add
xlat
ficoml
jnp
pusha
rorb
addr16
mov
cli
cmp
rcll
into
push
std
dec
pop
lods
lret
and
inc
fwait
xor
or
cwtl
ret
cli
push
inc
mov
icebp
lea
incb
test
mov
push
test
fisubrl
push
adc
or
push
rcll
mov
scas
add
fwait
and
lock
and
fwait
xor
pop
sub
outsl
push
push
add
popa
jecxz
jmp
das
push
and
adc
addl
cmc
shrb
sub
sub
add
sbb
pop
push
shlb
push
and
inc
push
outsb
fcomip
jle
pop
cltd
add
push
pop
je
aas
or
pop
imul
cli
das
cmc
mov
cmp
push
and
call
dec
dec
lahf
cli
mov
stc
mov
aas
dec
add
addr16
inc
rcll
xor
cltd
mov
add
pop
or
incl
pop
mov
adc
lcall
jo
mov
or
cltd
and
cmpsl
loope
dec
push
sub
cmp
fwait
sar
in
stos
xor
sbb
dec
lea
mov
mov
inc
add
addr16
subb
xchg
or
add
inc
shll
inc
int
std
jecxz
jno
test
cli
je
loop
mov
mov
pop
cwtl
repnz
loopne
adc
jns
aaa
xor
lods
lcall
loopne
cwtl
ds
push
daa
jo
and
in
bound
mov
mov
cmpsl
adc
xchg
or
jbe
mov
push
and
mov
and
icebp
and
ficoml
lahf
lods
adc
xchg
push
test
shll
xor
xchg
jne
adc
das
and
subl
push
fsubs
aas
dec
sub
ficomps
es
ja
mov
lods
das
cld
xchg
adc
cmpsb
inc
aam
movsl
mov
int
rclb
insb
push
mov
vmread
mov
fs
test
pop
inc
inc
xor
jae
outsl
lahf
mov
faddl
cmp
aam
dec
dec
leave
aaa
inc
xlat
aad
pushl
mov
jno
jmp
adc
test
dec
fadds
neg
mov
and
cmc
dec
mov
mov
or
inc
sbb
pop
xchg
pushf
rcrb
pop
sbb
mov
test
jno
adc
test
sbb
push
shlb
aas
inc
scas
jae
sub
or
lods
lahf
lahf
jle
push
rclb
inc
add
sub
call
mov
fdivs
mov
mov
xor
jg
sub
xchg
mov
xor
nop
sbb
andl
popf
inc
rcrb
push
dec
mov
cmc
scas
xor
push
mov
add
dec
enter
rol
fisttpll
repz
inc
adc
std
inc
filds
and
in
sbb
inc
bound
outsl
or
or
push
out
pop
nop
mov
xchg
and
and
movsb
xor
push
dec
mov
fdivs
out
mov
xor
adc
inc
mov
push
je
or
shr
hlt
xchg
push
test
out
xlat
sub
push
xlat
pop
and
or
in
sub
jg
movsl
pop
movsb
mov
jb
stos
mov
push
xchg
xchg
out
cmovp
pop
lret
loope
mov
and
leave
pop
push
pop
lods
dec
adc
inc
jge
leave
pop
mov
jmp
mov
or
cmp
std
in
and
push
outsl
imul
jl
int
sbb
notl
es
mov
mov
mov
data16
lods
or
mov
inc
or
mov
sub
jae
push
or
call
test
and
adc
mov
jecxz
sar
je
mov
rorl
adc
mov
xor
mov
jo
xchg
lds
sub
cld
fwait
xor
sbb
sbb
ss
xor
pop
in
sub
clc
add
mov
dec
mov
mov
inc
xorb
leave
pop
cmp
or
adc
and
and
or
sub
mov
lods
inc
cmp
fistps
int
pop
mov
push
mov
xchg
incl
repnz
fst
push
pop
adc
lcall
jl
lahf
pop
and
pop
mov
std
popa
sbb
movsl
shr
orl
xchg
stos
xor
dec
icebp
cmp
testb
pop
inc
sti
outsl
mov
dec
das
xchg
dec
sub
pinsrw
sub
mov
jle
xor
sti
dec
enter
fldcw
mov
incb
sbb
jne
stc
mov
call
mov
decl
xor
mov
ss
sbb
mov
xor
jne
mov
adc
movnti
or
popa
mov
insl
out
movsl
outsb
xchg
pop
jb
xchg
add
pusha
les
testl
mov
fs
repnz
xchg
xchg
or
lock
test
add
dec
push
sub
adc
dec
cmpl
test
push
pop
or
jae
mov
xchg
testl
aas
mov
stc
push
lret
call
xchg
bound
aas
loop
fstps
daa
jno
inc
test
imul
ss
add
jns
mov
inc
xor
sub
in
inc
out
inc
lret
add
and
fwait
pop
mov
xor
push
call
jmp
xor
imul
pop
mov
adc
popa
shrb
mov
inc
and
fstpl
andb
jmp
testl
icebp
sub
fnsave
mov
scas
adc
cmp
push
xor
xchg
loope
jno
dec
dec
loope
adc
das
addr16
add
roll
setbe
jo
mov
sub
jne
inc
icebp
xchg
sbb
mov
push
jmp
lret
dec
xchg
rcrl
out
inc
rcl
dec
dec
ja
pop
add
ret
std
testb
ja
movsl
hlt
pop
fcoms
stc
ret
out
out
push
stc
push
dec
mov
jecxz
shl
lret
hlt
dec
mov
popa
jg
stos
or
hlt
mov
add
xor
push
repnz
fnstenv
jno
lock
cltd
jb
divl
daa
scas
shlb
outsb
roll
sub
movsb
push
add
pusha
cmp
adc
mov
inc
sub
sahf
lret
or
popa
sahf
xlat
sub
dec
sbb
pslld
scas
je
jle
mov
xchg
xor
lea
mov
jmp
scas
lods
into
pop
mov
cmp
push
ss
sbb
push
mov
cli
jnp
in
sarl
xlat
mov
pop
pop
ficompl
int
cmp
cmp
div
jno
pop
jg
pop
cltd
jo
xor
imul
push
stc
aam
movsl
jle
cmp
and
mov
lock
adc
test
add
mov
inc
xchg
sti
add
and
stc
or
vcvtsi2sdl
cmp
jmp
mov
cld
lahf
rcr
sub
cmpsl
daa
popf
xchg
clc
icebp
std
xchg
les
or
cs
inc
jno
mov
jbe
aam
test
push
push
repnz
out
push
imul
fmul
cwtl
in
test
inc
out
mov
jmp
std
push
imul
jb
ss
xchg
or
inc
mov
push
dec
addl
add
mov
xor
addr16
shlb
push
enter
push
mov
jbe
loopne
push
shlb
xor
and
mov
xlat
leave
push
jno
jle
test
test
sbb
xor
xchg
ss
adc
das
cs
gs
add
dec
pop
mov
cs
fdivrl
or
push
leave
adc
dec
adc
or
jo
or
into
xlat
jl
popa
stos
jno
pop
push
jb
cmpsl
dec
cs
cltd
or
and
sbb
lock
pop
xchg
add
adc
xchg
imul
stos
adc
testl
dec
mov
fs
jae
dec
push
or
jg
data16
push
sbb
xchg
cmc
mov
xchg
xor
js
inc
pusha
test
mov
mov
sahf
popa
fsubs
ror
mov
subb
pop
sub
ret
dec
xchg
mov
stc
pushf
out
or
lahf
out
add
mov
ret
add
cmp
popf
push
adc
test
scas
and
imul
push
xchg
push
cmp
jno
mov
jbe
jmp
push
mov
mov
mov
add
rorb
insb
xchg
cmovnp
dec
push
jno
pop
stc
icebp
flds
inc
mov
inc
neg
sbb
fwait
les
leave
rcrl
pop
imul
ss
fcoml
push
jno
pop
or
and
adc
push
fstps
mov
rorl
or
shll
mov
add
sub
test
mov
inc
jmp
mov
mov
and
add
fld
inc
push
les
sbb
into
fwait
movsb
cmp
lcall
hlt
inc
sub
push
rcr
inc
insb
test
cmp
iret
xlat
or
xor
push
mov
xor
je
leave
ja
aam
mov
jns
xchg
and
fisttpll
outsb
inc
sbb
js
cmp
mov
jb
add
in
pop
xor
mov
jo
push
aas
xchg
mov
movb
out
inc
cmc
mov
dec
fistpl
sbb
mov
mov
mov
pop
mov
sahf
shlb
lcall
lahf
ljmp
das
push
in
cmp
loopne
int
add
jae
pop
and
mov
dec
mov
dec
and
movsl
cmp
mov
sbb
int
jp
inc
inc
imul
lock
pop
inc
stos
sbb
push
sub
std
adc
xor
sub
jns
mov
repnz
sbb
jmp
pop
iret
or
mov
pop
jge
aad
int
mov
mov
adc
clc
gs
and
mov
gs
mov
movsb
loope
ljmp
cmc
mov
cmp
ret
cmpsl
popa
pusha
inc
fwait
fwait
push
mov
addr16
pop
lahf
and
icebp
call
inc
cltd
je
adc
bswap
fidivrs
adc
test
cmp
adc
cmpsl
movl
xorl
inc
lea
sbb
pop
aad
out
push
int3
into
daa
lahf
add
shl
mov
jp
jmp
ds
fstpt
ja
push
das
shlb
sub
test
rolb
mov
push
daa
call
dec
mov
sub
sub
pop
xor
outsl
and
and
adc
fisttps
lcall
and
stos
outsb
sbb
test
faddl
stos
mov
ja
or
aaa
dec
loopne
stc
mov
jp
lds
jnp
int3
adc
int
sub
add
lea
push
sbb
xchg
xchg
cmp
push
outsl
and
mov
or
mov
inc
cmp
rclb
cmp
inc
xchg
mov
adc
push
jbe
mov
js
jno
add
push
leave
lret
repz
jnp
and
cltd
adc
lds
inc
mov
icebp
mov
loopne
push
push
adc
stos
and
add
cmpb
aas
enter
push
lret
loop
add
xor
mov
add
mov
adc
jo
mov
lret
int
pop
adc
adc
pop
ds
lcall
popa
popa
pop
or
pop
into
mov
icebp
out
mov
stos
decl
fucomp
inc
imul
repnz
dec
add
outsl
test
cmp
cld
mov
push
addr16
lods
adc
xchg
adc
mov
xchg
xor
js
xor
fs
sub
idiv
dec
andb
cltd
mov
xchg
sbb
mov
test
or
mov
push
clc
int
test
sub
xchg
adc
xchg
imul
cmp
outsb
stc
dec
xchg
push
cli
pop
pop
adc
out
sub
lret
rorb
leave
ja
aad
mov
outsb
pop
jp
test
fwait
pop
lret
pop
sbb
pop
jb
repz
std
addr16
mov
sbb
sbb
push
xor
ffreep
push
adc
xorl
xchg
fidivrs
pop
ror
pusha
divl
jecxz
mov
inc
adc
or
or
add
leave
sahf
cmp
shrl
lret
pop
lret
and
push
insl
sub
mov
ret
lret
xlat
insl
arpl
or
xor
dec
add
push
lahf
flds
push
fstpl
adc
lods
cmp
sbb
test
or
or
dec
stos
icebp
ss
adc
insl
call
shl
sbb
and
sub
inc
push
add
std
mov
xchg
jb
mov
cmp
push
xchg
pop
mov
jb
lret
out
je
stc
subb
movsb
xor
push
push
imul
xor
lahf
inc
cmp
mov
sbbl
stc
and
jge
fadd
outsl
xchg
dec
xchg
movsb
jmp
imul
out
fwait
xor
out
out
cmpsb
into
movsl
mov
in
mov
sbb
nop
push
push
dec
aaa
lcall
xchg
daa
inc
mov
out
out
out
jno
jne
mov
dec
sbb
jecxz
inc
ret
add
sbb
rcrb
mov
fwait
mov
mov
jg
sti
xchg
hlt
aas
sti
cmp
dec
in
pop
cmp
mov
shlb
mov
js
add
into
adc
daa
add
jge
pop
mov
xlat
ja
cmp
xchg
es
adc
pop
cld
fwait
lds
add
lods
icebp
aad
and
out
xchg
sbb
jne
imul
dec
out
data16
ja
pop
mov
in
mov
adc
mov
mov
out
stc
imul
adc
es
fisubs
inc
push
push
pop
cmp
inc
xorb
leave
or
pop
inc
testl
loopne
pop
rcll
arpl
xchg
arpl
mov
sub
jp
xchg
push
xchg
lds
add
fwait
xchg
scas
adc
xor
add
push
outsb
mov
repz
cmpsb
pop
icebp
lea
nop
inc
leave
pop
aad
inc
ret
mov
or
pop
sti
scas
mov
out
mov
mov
int3
inc
xorb
std
test
ss
iret
adc
dec
xor
add
push
mov
cmc
dec
repnz
xchg
mov
dec
fimuls
sub
js
popf
lret
in
jno
and
or
out
lods
in
add
shlb
sub
gs
sbb
shrl
cli
pushf
dec
adcl
inc
popf
pop
sbbb
call
scas
leave
ret
mov
rcrl
call
mov
out
xor
testb
test
stos
add
inc
aaa
cmc
fstps
cli
out
cmp
add
sbb
insl
or
popl
sahf
lock
sbb
sub
out
inc
jecxz
sub
mov
push
push
test
dec
sbb
mov
mov
push
fdivrl
sub
adc
cmp
mov
inc
mov
mov
push
add
out
cmc
rcr
das
jl
dec
xchg
fldenv
test
clc
mov
outsl
sti
sbb
or
xchg
fwait
inc
cmpl
jge
xchg
mov
std
lret
jl
loopne
stos
xchg
cmp
enter
lcall
cmpsb
sbb
pop
jno
stos
dec
sub
fwait
std
aad
lret
leave
and
ret
jg
cmp
push
aas
icebp
xor
mov
cmp
mov
pop
lods
rcrb
test
adc
stc
or
adc
add
and
loope
add
arpl
push
lea
popf
and
push
test
lock
adc
sbb
mov
scas
mov
pavgw
push
pop
push
mov
ss
cltd
hlt
inc
out
sub
sub
int
mov
mov
test
mov
mov
cmc
repz
repz
mov
pop
dec
jg
shrl
cmp
adc
pop
cs
pop
pop
imul
fstpl
sbb
sbb
xor
out
pop
jo
les
jnp
std
cmc
in
inc
inc
repnz
add
mov
jae
cwtl
adc
fsub
sbbl
ds
shll
std
cmp
sbb
xor
adc
push
adc
rcr
add
or
mov
sbb
pop
pop
enter
add
leave
ret
xchg
int3
cmpsb
popf
mov
cmpsl
das
adc
rclb
and
dec
mov
jns
js
mov
ja
push
in
outsl
adc
mul
not
sar
shl
cmc
sbb
xchg
sbb
std
sbb
cmc
outsl
adcl
push
fcmovnb
leave
neg
and
enter
sahf
ret
mov
pop
aas
dec
setno
cmp
outsl
lods
push
sahf
ret
adcl
push
xchg
in
push
push
imul
xchg
in
nop
add
daa
adc
xchg
add
fisubrl
ret
or
mov
mov
or
insb
mov
stc
fwait
movb
call
je
pop
and
js
in
jmp
jnp
lret
les
out
cwtl
scas
adc
stc
ja
cmp
pop
inc
aam
push
cmpsl
pop
repnz
lds
int3
cmp
lock
xor
add
cpuid
adc
pop
stc
ret
push
lcall
push
test
xor
icebp
xchg
xchg
inc
cmp
aam
push
xchg
stc
adc
mov
iret
lods
cmp
mov
mov
jg
rcrl
or
in
lock
lock
sbb
dec
mov
cmp
js
cld
movsb
mov
clc
scas
stos
adc
gs
les
cltd
mov
shlb
sti
mov
push
push
pop
adc
test
mov
shrl
jp
iret
andl
out
sub
add
and
sar
jae
cwtl
jae
lods
sbb
les
sub
mov
aad
out
out
sub
add
jp
mov
mov
dec
xchg
inc
xchg
pop
in
cli
adc
pusha
sub
gs
push
out
cmpsb
cmp
cmp
mov
xlat
inc
mov
add
jnp
and
xchg
test
jno
xchg
popa
in
shrb
and
les
xor
pop
and
adc
jne
mov
cmp
scas
jge
dec
add
xor
bound
dec
mov
std
push
push
cltd
sbb
stc
enter
unpckhps
flds
mov
outsl
repz
into
js
in
sbbb
daa
mov
push
fbld
inc
sub
push
fsubs
xchg
cmp
imul
mov
dec
daa
movsl
pop
push
mov
mov
cmp
mov
out
test
addl
jmp
insb
daa
sub
enter
xor
mov
sub
cmpb
movsb
push
inc
mov
inc
icebp
mov
jnp
xor
adcl
shlb
rorl
cmp
dec
jne
mov
cmc
add
xorb
pop
push
jno
mov
push
inc
mov
aam
sbb
mov
push
adc
mov
mov
xlat
jae
jge
adc
push
and
jle
mov
mov
fwait
or
mov
stos
xchg
jo
jecxz
xchg
aam
mov
xlat
shll
push
repz
xchg
jno
mov
dec
mov
stos
adc
ret
sub
mov
cltd
pusha
stos
xchg
movsl
in
mov
sub
leave
or
shl
pop
jno
pop
sbb
cmp
nop
jb
adc
shrl
movsl
sbb
xchg
mov
lcall
fstl
mov
sub
push
movsl
gs
xchg
in
clc
fdivrs
lahf
ds
pop
sub
push
aad
mov
rorb
dec
loopne
sbb
pop
mov
test
sbb
incl
mov
jmp
enter
es
jmp
fldlg2
sahf
xor
push
jl
and
dec
mov
ret
pop
stc
aas
mov
pop
pop
test
nop
inc
orb
in
imul
insl
shr
test
push
push
fxch
pop
sub
xchg
sbbl
xorl
sbb
sub
idivl
popf
ror
xchg
clc
xchg
sub
xor
ret
rcrl
test
xor
inc
xor
inc
in
xchg
nop
lock
inc
xor
into
sub
test
shl
cmpsl
daa
xlat
xchg
in
cld
adc
adc
shlb
gs
mov
rorl
dec
push
fwait
jnp
adc
add
std
es
push
hlt
push
sbb
sti
repz
popf
lods
and
xchg
cmp
sbb
mov
das
cmpsl
out
sbb
fnsave
push
sub
mov
dec
aam
mov
lret
dec
je
setnp
cwtl
push
push
enter
sbb
add
insl
jle
iret
mov
inc
sub
daa
dec
out
addr16
idivl
fnop
xchg
adc
mov
adc
roll
jno
mov
rclb
jns
add
pop
cld
cli
push
push
push
shrb
jmp
sbb
mov
xchg
xchg
pop
ljmp
ret
sti
mov
leave
jp
stos
and
add
popa
xchg
jle
mov
lea
mov
out
mov
jne
std
pop
inc
in
add
mov
mov
push
mov
hlt
ret
arpl
xchg
mov
inc
arpl
push
pop
lret
mov
pop
jns
sub
cmp
xlat
pusha
pshufw
sub
cli
nop
fwait
jnp
pop
add
cwtl
daa
xor
enter
xchg
and
push
repnz
repnz
xchg
neg
inc
aam
push
push
xchg
mov
inc
pop
arpl
cwtl
pushf
cmc
cmp
fnstsw
or
mov
mov
pushf
mov
insb
mov
add
mov
mov
aaa
sub
dec
sahf
add
xor
lods
add
push
sbb
mov
popa
ret
xchg
jo
sbb
clc
loope
add
int
push
rcrb
add
lds
xchg
or
iret
cmp
shrb
in
xor
push
xchg
orl
lods
sti
xchg
jbe
je
imul
xchg
xchg
xchg
xlat
mov
xchg
mov
xor
inc
lea
shlb
into
xchg
sub
js
inc
lods
int3
sti
pop
inc
mov
mov
adc
xchg
push
jl
lock
xchg
sbb
add
lahf
and
lea
arpl
jne
or
cld
mov
sub
adc
sbb
inc
pop
sbb
out
xchg
gs
xor
mov
orb
rcrl
jo
cmp
jnp
leave
pop
fs
jge
and
xor
sahf
sub
pop
fnsave
or
sbb
repnz
cmp
jge
clc
sub
push
and
arpl
xchg
inc
jg
out
mulb
sbb
cltd
das
cmp
andl
jge
push
cmpsb
out
movsb
lret
out
test
outsb
jno
in
jae
test
mov
scas
jp
jo
inc
cmp
nop
pusha
test
mov
sahf
pop
xchg
aad
dec
push
mov
into
scas
jge
jle
add
dec
daa
fsubs
mov
sbb
mov
add
dec
pop
sbb
in
inc
mov
rolb
mov
pop
loopne
inc
jo
rorl
sub
scas
int
outsb
cmp
fstpt
fwait
stc
push
jns
sub
insb
cmp
or
iret
dec
not
fdivrp
mov
arpl
je
jno
add
lret
les
dec
repz
or
movsl
pop
in
ret
mov
data16
popf
fwait
loope
adc
ret
clc
in
jmp
nop
movsl
dec
or
stos
add
push
cli
adcb
out
mov
jge
aaa
popf
int3
subb
shl
xlat
adc
lahf
out
mov
rorb
push
and
lock
or
cmp
pop
cli
mov
loope
scas
mov
pop
inc
es
in
mov
icebp
push
in
cs
xchg
in
cwtl
or
aam
sub
inc
add
ja
movsl
jp
adc
cmpxchg
pop
rcll
and
pop
lods
incb
jbe
jle
add
push
mov
sub
jge
mov
lods
aam
sti
push
cs
mov
aaa
cli
lods
sub
adc
aas
daa
push
call
mov
xchg
jo
push
jnp
lods
enter
dec
xor
sub
jne
pop
les
dec
pop
scas
add
xlat
push
add
push
and
popf
lods
sbb
inc
push
jmp
sub
enter
hlt
jge
cmp
jmp
inc
sbb
add
mull
mov
repz
seta
xor
mov
and
scas
push
into
rcrb
xor
cltd
xchg
les
sarb
in
push
or
dec
imul
or
fnstcw
sub
sti
xchg
aas
cmp
pushf
lcall
push
inc
int3
inc
mov
insb
xchg
pusha
or
pop
jo
sarb
or
cwtl
mov
ds
rcll
bound
xchg
rcrl
adc
xchg
arpl
push
test
jge
inc
shlb
add
jge
cmp
aaa
dec
sub
or
inc
inc
ss
rolb
pop
pop
arpl
sub
sub
inc
in
jno
jb
es
jmp
lds
fs
add
jge
push
scas
out
mov
mov
mov
xor
jmp
fdivrl
jbe
hlt
dec
pop
adc
cmpsb
mov
push
out
aad
mov
cmp
stos
ret
sub
imul
dec
and
push
popf
ror
movb
cmp
jo
push
outsb
mov
int3
ret
fbstp
pop
xor
mov
ror
mov
scas
push
sbb
pop
sti
rclb
dec
fcmovnbe
jp
sbb
imul
cld
hlt
jnp
dec
clc
xchg
push
outsl
dec
add
cli
repnz
jb
mov
sub
int
nop
adc
mov
xchg
xor
pop
mov
fs
in
ljmp
mov
mov
inc
enter
ja
lea
push
sbbb
or
adc
lods
loope
popa
cld
insl
into
movl
in
xor
push
pop
sub
mov
push
lods
daa
out
idivl
mov
mov
sbb
pop
loopne
fadd
call
push
or
jno
cmp
jno
rcrb
maskmovq
idivl
clc
pop
bnd
aad
ror
push
fldenv
mov
jmp
adc
add
xlat
or
or
or
iret
paddq
lcall
mov
jp
mov
and
sbb
enter
jge
movsl
arpl
in
mov
lahf
fcoml
mov
push
adc
inc
ss
inc
int
jnp
loope
dec
sub
das
add
cmpl
in
lods
sub
iret
scas
fcmovb
inc
inc
add
arpl
jns
dec
adc
fbstp
into
dec
mov
dec
inc
ret
dec
std
xlat
adc
in
movsl
out
sbbb
mov
sub
fldl
dec
imul
sub
dec
out
and
repnz
jp
pusha
or
aas
jmp
in
test
mov
xchg
cli
fucomi
lods
hlt
inc
sahf
or
or
jno
jl
test
add
fimull
jno
fs
lahf
xorb
cmc
mov
mov
mov
std
xchg
aad
push
mov
pop
ffree
inc
add
jnp
fldenv
mov
add
movsl
pushf
pop
sti
cs
es
jne
push
fdivrs
outsl
push
adc
push
insb
das
add
cwtl
xor
outsl
add
pusha
xchg
dec
or
dec
scas
mov
xchg
out
lahf
jno
jle
pop
sub
mov
jle
push
test
je
ret
test
pop
mov
mov
sti
jbe
mov
rorl
mov
stos
xchg
lea
lahf
xchg
rorl
mov
psubb
shll
lahf
es
mov
stc
insb
iret
lock
sub
cmp
jge
aas
aas
rolb
inc
jne
jno
insl
or
xchg
std
mov
inc
adc
repnz
cld
repz
jno
pop
shll
pusha
scas
mov
mov
jnp
nop
loop
test
inc
inc
dec
clc
pop
in
repnz
jg
insl
aam
lahf
aam
mov
stos
jl
inc
inc
mov
imul
xchg
push
clc
scas
loope
lcall
mov
sub
and
cs
daa
lock
sub
repz
out
mov
xor
cmp
lret
xchg
lock
cwtl
jnp
pop
dec
jle
or
addr16
out
loop
jo
popa
mov
outsb
xchg
dec
dec
jns
inc
addl
inc
fs
jl
mov
adcl
pop
stos
cltd
mov
imul
xor
push
push
mov
adc
inc
rol
sarl
xor
cld
popf
scas
cmp
xor
push
outsl
push
pop
addr16
or
cs
shrl
bnd
and
dec
aas
xor
sbb
mov
mov
push
or
mov
mov
inc
push
push
push
jae
pop
sbb
les
sub
mul
or
jg
fxam
pop
push
jbe
frstor
cmc
pusha
xchg
push
pcmpgtd
stos
xor
arpl
int
inc
cld
icebp
fbstp
addr16
shlb
cmc
mov
push
xchg
dec
mov
int
repnz
xchg
cmp
insb
jg
sub
js
mov
xor
dec
jmp
or
cmp
inc
cmp
mov
add
mov
mov
mov
inc
jl
xchg
pop
aaa
jo
rcl
inc
sub
rcl
mov
cli
push
push
push
dec
aam
xlat
mov
mov
fisttps
push
push
pusha
adc
arpl
inc
mov
pusha
fdivrl
popf
pop
fwait
mov
idiv
or
jns
lods
pop
sub
and
xchg
cmp
lea
ja
and
dec
or
es
dec
cmp
fmuls
mov
mulb
pop
mov
push
sysexit
out
sbb
adc
test
sbb
jno
movsb
dec
inc
pop
sub
rorb
jne
cmpsb
sub
aam
les
xor
mov
xor
psraw
ljmp
popa
insl
jb
adc
xlat
sub
mov
cmp
fwait
mov
xchg
pop
and
xor
rolb
add
mov
xchg
sar
adcl
cli
rcl
aam
xor
fidivs
dec
dec
or
flds
xor
push
pop
push
add
add
adc
add
movsl
stos
std
pop
sub
cmc
push
add
js
aad
xchg
test
test
ficomps
add
ret
add
push
or
jnp
out
cltd
cmp
test
xchg
cmc
push
and
jp
mov
mov
test
loop
and
hlt
and
xchg
test
xchg
data16
adc
fldl2t
ds
xchg
xchg
bound
dec
and
std
lret
es
aaa
scas
pop
cli
cltd
lcall
mov
ljmp
jbe,pt
and
adc
nop
push
aas
or
mov
jb
bound
inc
cmp
cmp
push
push
sub
mulb
in
xlat
xor
sti
mov
lret
sysret
aaa
mov
lret
fdiv
or
les
popa
xchg
sbb
data16
inc
daa
push
mov
and
icebp
mov
push
and
xchg
cltd
push
stos
xchg
adc
mov
rcrl
sti
mov
faddl
jno
ret
shll
shl
cltd
mov
out
ret
adc
mov
xchg
scas
cltd
jns
imul
add
mov
xor
adc
dec
dec
xor
and
adc
inc
mov
sahf
dec
xor
xor
pop
lock
mov
testb
imull
cs
enter
call
sahf
divb
xchg
filds
inc
mov
mull
sbb
aam
les
xor
test
lret
cmp
movsl
repz
les
rcr
mov
mov
xor
xor
xor
sub
mov
ljmp
dec
icebp
test
push
hlt
push
pusha
jne
movsb
jge
fdivs
shll
mov
or
cmpsl
out
cmc
xchg
and
repnz
jo
cmp
sbb
je
inc
jb
dec
mulb
int3
lea
fisttps
fcomi
repnz
stos
fs
fsts
out
sub
sub
mov
jo
pop
sbb
loope
aad
adc
sbb
push
call
add
fldcw
add
js
nop
js
jns
loop
xchg
pop
pop
pop
clc
jo
lds
loope
testl
insb
testb
cmc
add
ja
and
xchg
rcll
fists
loope
dec
and
repz
test
pop
cli
pop
sbb
inc
xchg
pop
popf
repnz
xor
clc
daa
mov
les
xchg
jge
pushf
incl
aaa
data16
push
adc
test
pop
xlat
and
and
jbe
mov
clc
daa
std
cs
push
scas
pop
adc
xor
cmc
pop
filds
mov
shrl
jo
push
jge
mov
jo
dec
mov
mov
inc
shll
mov
mov
lods
jnp
movl
repz
enter
jle
jecxz
adc
jmp
sbb
jecxz
mov
xchg
mov
adc
dec
xchg
pop
testl
lds
stc
dec
loopne
or
test
int
aas
loope
leave
std
jne
sahf
rol
push
jp
iret
in
mov
or
xor
mov
mov
xor
push
mov
hlt
mov
cld
orb
xor
inc
test
ljmp
adc
push
sub
adc
jns
fidivrl
jmp
mov
fnstcw
inc
idiv
adc
es
testl
out
lock
cli
test
add
aad
jo
mov
popa
std
addb
jbe
cmpsb
mov
mov
and
std
xchg
xor
push
cld
lret
mov
std
push
mov
dec
loop
jns
stc
xor
cmp
or
dec
in
xor
repnz
aam
jo
mov
shlb
popa
ret
xchg
adc
jmp
icebp
inc
mov
pop
mov
out
sub
and
jecxz
icebp
or
out
sub
cmp
inc
xlat
or
mov
loope
adc
dec
jbe
add
mov
jg
aam
adc
int
imul
jmp
sub
repz
adc
fbld
std
dec
xor
jle
or
mov
dec
fs
scas
ret
and
stc
push
mov
int
out
roll
fnstsw
repz
mov
adc
push
lea
ljmp
jb
pop
xor
jo
dec
rolb
je
lock
subl
rclb
inc
or
stc
insb
add
xchg
lods
jmp
or
jne
inc
jecxz
jg
call
inc
and
addr16
notb
and
add
and
cmpsl
jns
cld
xchg
out
sarb
cltd
enter
adc
rolb
cmc
cwtl
jo
scas
sarl
xor
test
js
mov
dec
shll
pop
jb
xorl
inc
scas
fistps
fs
xchg
call
xrstors
mov
jl
jp
addr16
sub
xlat
sbb
xchg
jno
shrl
push
jl
sahf
xor
pop
mov
movl
das
push
fs
lock
scas
pop
xlat
rorl
dec
xor
pop
js
in
adc
popf
out
stc
enter
mov
sub
cmp
add
stc
insl
jle
dec
jg
push
gs
jne
dec
xlat
test
xchg
pop
pop
inc
push
pusha
test
out
jns
dec
pop
inc
add
daa
or
mov
xor
xchg
adcl
mov
push
mov
pop
iret
sbbl
sub
jmp
insb
xchg
inc
jmp
lea
cmc
js
popa
dec
decl
stos
jne
or
in
gs
ss
test
mov
xchg
in
flds
push
jp
pop
pop
rclb
sti
jno
pop
ljmp
iret
pop
movsl
cmpl
cli
imul
pop
adc
ret
mov
xor
add
fstl
stc
push
shlb
pop
jno
xchg
or
jl
das
adc
dec
inc
adc
jg
pop
rcl
or
lcall
cs
pop
push
sbb
addr16
xchg
mov
jge
sub
mov
xor
scas
std
addl
or
mov
aad
add
aas
aam
enter
shll
insb
cmp
push
mov
adc
lret
popa
pop
fcmovnb
jle
stos
mov
and
call
pop
inc
adc
mov
loop
mov
dec
pop
lret
dec
push
adc
std
jmp
pop
addr16
rclb
xor
movsl
frstor
in
pop
ret
jg
and
jle
loope
mov
dec
and
xchg
xor
push
faddl
rcrl
pop
push
sbb
inc
dec
fst
dec
aaa
movl
dec
dec
pop
add
jge
xor
pop
inc
jno
dec
les
pop
frstor
clc
out
lea
pusha
sub
rorl
cmc
fld
test
popf
stos
divl
stc
push
int
sub
mov
aaa
stc
cmp
hlt
inc
aas
imul
pop
or
out
jle
push
pop
mov
pop
aaa
dec
daa
fcoml
fdivp
repnz
xchg
adc
lret
std
lock
addl
jge
xlat
insl
loopne
icebp
pop
cmp
int3
jne
stc
out
rcrl
mov
pop
inc
xchg
lret
jo
inc
outsl
frstor
sub
iret
mov
fisttpll
fbld
icebp
dec
adc
out
test
sub
ret
jne
lods
mov
stos
lds
jmp
and
addb
cmpsl
pusha
fadd
insl
xchg
or
hlt
filds
add
clc
fcompl
add
pop
inc
sahf
fs
pop
pop
jns
add
mov
stos
add
mov
getsec
sbb
ret
int
packsswb
push
dec
ja
push
test
ja
xchg
lds
out
jo
push
dec
cmpsl
xor
xchg
xchg
imul
gs
fmul
sub
jp
add
jg
pop
and
mov
icebp
and
test
inc
or
call
shrb
icebp
insb
je
in
test
dec
sub
popa
aad
insl
push
mov
add
mov
pop
push
fstl
leave
lret
push
or
into
outsb
mov
int3
sbb
or
and
les
in
jo
fmul
call
imul
cmc
sub
cmp
aaa
fstl
cmova
rorb
outsl
jp
mov
fwait
push
imul
sub
or
cmp
xor
push
add
aam
mov
call
decb
arpl
cmp
out
test
and
sbb
pop
add
xchg
int
es
dec
xchg
rcll
hlt
mov
dec
dec
push
das
jns
jecxz
sub
enter
test
jge
sarb
push
fwait
pop
xor
adc
mov
fwait
or
loope
pop
fists
dec
push
dec
and
stc
cld
dec
pop
nop
mov
repnz
push
push
cmc
out
movsb
in
and
cmp
inc
ss
popf
mov
jl
xchg
mov
pop
out
pop
xchg
out
sbb
stos
outsl
cwtl
adc
push
or
leave
in
dec
mov
mov
mov
in
xchg
iret
push
cli
lods
mov
push
and
jmp
adc
mov
mov
mov
mov
adc
rolb
push
mov
cmovns
push
sbb
leave
inc
xchg
xchg
push
dec
iret
aad
cmp
aas
mov
and
xchg
nop
out
mov
mov
sub
fildll
push
add
or
push
mulb
mov
mov
into
icebp
movsb
dec
fstpt
pop
mov
mov
out
mov
xchg
cmp
mov
mov
pop
aad
inc
lret
imul
mov
fs
jge
cmp
mov
mov
bound
cwtl
mov
dec
mov
std
or
push
or
push
lcall
pusha
es
cmpsb
stos
dec
fimull
lods
xchg
jmp
mov
pop
shl
xchg
dec
mov
out
icebp
js
sub
movsb
mov
test
or
sar
scas
outsb
xor
imul
or
pop
fnstcw
xchg
cmp
and
sahf
setnp
push
rolb
ffreep
repz
es
jge
jb
shlb
xchg
xor
sbb
and
roll
sarl
jmp
addl
pop
shrl
insb
sbb
mov
cld
lcall
test
xchg
mov
mov
push
mov
fdivp
add
xor
imul
xchg
out
lods
in
add
cmpsb
and
add
sub
xchg
popf
movsl
hlt
scas
fucomip
je
xor
fisubrl
dec
daa
add
ds
lahf
std
leave
cltd
cmp
push
push
shrb
pop
cmpsl
ss
and
xor
fnsave
pop
pop
jbe
mov
and
loope
lods
rcrl
iret
push
inc
mov
clc
stos
push
inc
push
cmpsl
adc
inc
fnsetpm(287
in
out
lods
mov
adc
shl
lods
loopne
push
in
push
add
xchg
or
cmp
popa
mov
xchg
adc
sti
jnp
cmpb
and
dec
fsubrl
push
pop
push
shll
pop
insl
or
push
jmp
add
sti
dec
sbb
push
sub
call
popa
adc
push
cld
pop
std
movsl
adc
mov
cli
js
aad
test
imul
test
into
and
mov
cmp
mov
jl
in
clc
int3
xchg
icebp
stc
mov
jecxz
mov
dec
loop
call
notb
cmp
iret
in
jno
mov
pop
in
dec
push
dec
repnz
in
pop
out
mov
sahf
or
mov
mov
pop
faddl
push
mov
hlt
lcall
jo
sub
sti
inc
fdivrs
out
lcall
inc
data16
les
in
mov
call
pop
rolb
fimuls
test
in
pop
xor
iret
mov
addr16
sub
movsb
xchg
int3
int3
shrl
jnp
lahf
subl
cmp
bound
out
es
inc
sbb
ja
lock
mov
mov
mov
mov
jnp
cmp
sub
or
in
lods
test
cmpsl
and
dec
mov
scas
in
ficoml
push
push
test
pop
add
rcrb
mov
push
shll
icebp
sub
and
pop
add
and
das
and
adc
outsl
mov
xor
es
xchg
jl
pop
jg
sub
sbb
int
nop
mov
outsl
stc
mov
into
inc
repnz
shrb
fildll
into
sub
push
dec
mov
push
popf
sbbl
or
mov
cmpsb
loop
pushf
inc
sahf
xchg
stc
fcmovnbe
add
test
sub
pop
jne
call
and
dec
shr
sti
imul
mov
in
iret
int
das
add
sbb
and
popa
fstpt
dec
icebp
mov
or
jge
lods
push
push
pop
popa
inc
fcmovb
adc
bound
mov
das
add
inc
cli
adc
ds
push
out
sbb
addb
ds
ret
ret
xlat
rcrl
push
mov
sbb
inc
xchg
dec
mov
cmpsl
push
and
stos
xchg
xor
pop
jmp
ljmp
add
adc
mov
into
mov
jnp
loop
xchg
dec
xor
test
aas
test
sbbl
shr
les
int3
scas
cmpsl
push
xor
in
sub
sbb
dec
ljmp
and
cmp
lock
fwait
sbb
xchg
ja
out
sub
xchg
lret
inc
cmp
fimull
push
inc
cmpsb
movsl
in
and
call
jg
insl
dec
push
pop
int
les
cmp
subps
cld
idivb
jb
pop
es
and
data16
push
das
cmp
cmc
push
inc
inc
cmp
pop
les
dec
shld
sbb
adc
add
sbb
aaa
dec
aad
sub
testb
scas
push
in
sbb
dec
out
dec
push
xchg
dec
cmp
pop
loope
aaa
jb
pop
aam
inc
push
inc
mov
aaa
xchg
arpl
movsb
out
std
cltd
movsb
sahf
mov
sbb
mov
out
out
fld
xchg
sbb
pop
mov
jl
test
mov
or
daa
sub
lcall
jmp
sub
mov
in
call
call
scas
popf
cmp
out
and
sub
inc
adc
xchg
iret
add
xlat
xor
xchg
pop
xchg
ljmp
negl
into
dec
mov
test
or
jne
mov
push
pop
mov
enter
test
imul
ds
fcmovb
in
lods
mov
daa
xor
cwtl
add
adc
push
xchg
push
std
ljmp
out
jae
cmp
das
nop
sti
in
lods
scas
es
xlat
mov
cs
adc
imul
ds
fisttps
jne
scas
pop
jmp
out
and
dec
cli
adc
pop
popa
mov
inc
and
mov
jbe
sbb
xor
mov
adc
sahf
adc
xchg
and
test
sar
lcall
popf
loop
jo
std
js
std
mov
mov
dec
xchg
inc
fcmovnbe
fwait
enter
xchg
test
and
or
aas
pusha
bnd
rcrb
mov
lret
loope
inc
movsb
add
adc
lret
iret
rolb
pop
inc
popf
arpl
sarl
push
bound
out
pop
mov
rolb
js
adc
or
loopne
in
pop
and
mov
rcrl
push
xor
inc
or
idivb
movl
das
push
aas
pop
ja
pop
mov
lret
xchg
push
mov
leave
lock
push
mov
fnsave
aam
enter
ljmp
in
test
push
dec
mov
cmp
and
mov
movzbl
mov
push
push
adc
or
fstpl
roll
std
cli
pushl
sbb
and
inc
mov
jle
mov
lahf
mov
scas
jp
mov
adc
dec
lea
jno
xchg
xchg
adc
enter
xor
fmull
ss
shrl
insl
filds
push
imul
lock
popa
lret
cmp
jo
mov
jecxz
mov
jle
fisubs
lret
sbb
aas
sub
gs
repz
jecxz
cmpl
mov
jbe
push
jne
out
or
or
inc
cli
push
xlat
push
lahf
mov
xchg
aaa
xchg
mov
pop
pusha
dec
lea
pop
in
cmpsl
push
lahf
rcrl
dec
mov
xor
outsb
flds
lret
adc
mov
jo
lret
subl
ss
shll
popa
xor
dec
popf
scas
mov
and
loop
es
scas
pop
jno
or
int3
pop
loope
xchg
rcrl
pop
insl
repz
ja
shll
into
ret
rorl
enter
sbb
dec
test
sbb
mov
cmp
and
shll
or
ds
xor
jae
mov
sub
aad
js
jno
dec
movsb
jge
fldt
xchg
jmp
test
push
not
aaa
xchg
clc
out
lea
fsts
push
pop
mov
pop
xor
clc
fildl
or
int
dec
adc
clc
std
test
aaa
out
lret
sbb
inc
repnz
aaa
push
stc
xchg
std
cltd
js
flds
jo
pop
jmp
aam
xchg
fs
lods
push
mov
inc
in
fidivl
mov
xor
lea
arpl
push
and
fisubl
dec
loope
mov
pop
xchg
iret
fidivrl
add
jp
and
rorb
xchg
aas
jecxz
adc
cmc
lcall
into
cmp
push
enter
out
nop
sbb
mov
sub
icebp
mov
and
pushf
sub
lcall
fwait
loopne
adc
in
jbe
xchg
mov
add
lahf
loop
cwtl
ss
sub
mov
dec
sbb
cmp
push
mov
movsl
outsb
pop
add
mov
add
push
shll
inc
jo,pn
fsts
or
mov
scas
scas
push
outsb
and
xor
popa
sahf
pop
rcll
in
mov
jno
out
test
test
loopne
pop
xchg
test
inc
cmc
jno
je
cltd
cmpsl
add
ja
ret
movsl
xchg
mov
fisttpll
adc
mov
inc
adc
mov
push
xchg
and
add
addb
test
ja
xor
jno
jl
mov
xor
and
sbb
push
push
xchg
sarl
mov
mov
aam
mov
shll
arpl
mull
sub
mov
mov
ja
loop
stos
mov
test
add
imul
divb
pop
pop
cmp
imul
xor
out
ss
add
popf
jnp
loopne
idiv
lahf
mov
ljmp
xchg
adc
xor
adc
sbb
test
and
clc
out
sahf
pop
xor
push
aas
imul
sahf
fbld
fbstp
push
fs
sub
in
test
sub
xchg
inc
pop
bound
pusha
imul
sarb
test
mov
int
pop
test
mov
loope
test
shlb
xorl
jmp
mov
adc
sbb
add
sub
jmp
decb
pop
mov
andl
jno
xor
inc
jb
cmpsb
mov
sbb
pop
xlat
fmul
push
scas
scas
push
mov
sahf
jnp
dec
pop
jp,pt
push
ret
jno
mov
pop
fbld
inc
mov
fsts
and
fsubrl
out
dec
and
jmp
mov
inc
ficompl
inc
add
enter
push
lret
jmp
fcoms
lahf
inc
dec
mov
popf
lret
inc
bound
add
out
int
push
inc
insl
lods
mov
imul
fisubl
adc
dec
arpl
test
ds
out
mov
repnz
scas
aam
out
jmp
jmp
mov
push
in
and
insb
xchg
test
mov
aas
cmp
insl
popf
jns
lock
push
push
inc
loop
lcall
loopne
jb
xchg
pop
setns
push
inc
or
shll
ljmp
inc
push
adc
mov
or
daa
jae
lock
fwait
and
mov
jle
aam
mov
clc
fmulp
inc
mov
stos
loop
repnz
xchg
cmp
jne
mov
loope
pop
xor
fistpl
sarl
cltd
jecxz
inc
lods
mov
xchg
jbe
lcall
jb
xchg
xchg
pop
loopne
stc
movsl
jo
mov
add
icebp
popa
mov
add
lahf
lods
xchg
dec
mov
loop
mov
sti
jbe
stc
repz
cmpsb
sub
aad
mov
xchg
push
outsb
and
jo
test
jno
in
fisubrl
loop
inc
sbb
mov
enter
test
inc
add
jp
sub
adc
inc
pusha
fcoml
dec
pusha
and
aaa
cld
mov
ret
out
xor
movsl
xchg
fisubrs
dec
mov
sub
test
jo
inc
mov
fmull
mov
fidivl
out
jno
inc
test
xchg
adc
jno
fs
jge
mov
pop
mov
pop
mov
xchg
ja
mov
jmp
jno
mov
fmul
sti
pop
and
xor
fsubrs
int3
leave
xchg
ficoml
sbb
mov
cmp
test
cmp
or
or
pusha
addr16
arpl
add
pop
sbb
push
add
dec
and
cltd
popa
enter
fnstenv
out
subb
xlat
pop
sahf
jle
mov
xor
push
bound
xchg
xchg
imul
or
mov
lcall
dec
dec
mov
jb
mov
rcr
xorl
xchg
lret
mov
in
ret
pop
add
sbb
sbb
incl
xlat
shrl
pop
leave
mov
sub
scas
sbb
or
xor
cld
xor
mov
js
xchg
mov
adc
xor
xchg
repz
rcrb
into
jge
jb
mov
popa
shlb
cmpb
pop
add
push
jg
idiv
sub
cmp
imul
test
jns
loop
mov
iret
adc
les
pushf
andb
mov
jmp
adcl
jecxz
jno
jmp
inc
xlat
popf
aas
inc
lcall
gs
mov
insl
pop
loop
xchg
sub
dec
daa
sahf
mov
imull
sub
mov
mov
or
adc
sub
sbb
test
loopne
lds
pop
adc
inc
or
cwtl
ss
or
inc
inc
iret
push
xchg
sbb
cmpsb
aas
shlb
aas
in
mov
xchg
punpckhwd
pop
dec
lret
xor
orb
add
xor
mov
rcrb
pusha
push
mov
aam
jns
clc
pop
bound
pop
jge
xchg
jno
mov
pop
ss
cmp
repz
sti
sti
xlat
push
iret
xor
cwtl
inc
inc
push
push
jmp
mov
das
inc
rcll
xor
push
jb
fyl2xp1
xchg
jecxz
pop
sub
pop
jae
jl
push
popa
fstl
imul
jbe
int
hlt
jns
shlb
aam
out
push
xchg
movzwl
das
fwait
push
filds
inc
fcompl
ret
mov
pop
xlat
cltd
sarb
lock
jno
push
or
pop
push
sbb
xchg
dec
or
push
dec
cs
fildl
out
fwait
inc
cwtl
or
jmp
pop
mov
int
mov
mov
mov
aam
test
cld
in
fists
mov
stos
rcr
sub
pop
add
pop
not
adc
xchg
fldcw
xor
mov
mov
stos
test
out
test
addl
fmuls
sti
cmp
or
and
jecxz
loope
xor
hlt
lcall
cmp
aaa
and
filds
leave
mov
in
and
jge
cwtl
outsl
test
cmp
lcall
mov
sbbl
jno
and
jno
adc
dec
xchg
mov
and
loop
fnsave
mov
push
fmul
push
mov
pop
pop
and
mov
push
mov
inc
pop
clc
jns
mov
push
dec
pop
mov
mov
inc
mov
fdivrl
adc
add
adc
xlat
mov
mov
dec
movsl
and
jno
mov
jno
mov
aad
add
jp
adc
ds
push
subl
daa
ljmp
gs
or
insl
jge
sub
cltd
push
adc
cltd
fsubrl
lret
cltd
and
or
jge
aad
pop
outsl
push
push
scas
xchg
jo
xchg
mov
into
jns
rcr
repz
popf
push
pop
jle
dec
test
xchg
pusha
or
es
out
loopne
xchg
jl
mov
cmovns
mov
push
repz
mov
dec
and
cmp
ret
push
notl
ficoms
rcrl
call
mov
jb
scas
out
pop
pop
jne
popf
mov
sbb
fs
sti
pop
push
outsl
cld
add
push
clc
cmp
jne
mov
inc
lahf
mov
bswap
fistl
cmpsl
lcall
je
mov
sahf
aam
pop
ret
cwtl
dec
popf
xor
jle
mov
mov
outsb
aam
mov
aam
pop
mov
cltd
jnp
mov
test
shrb
cmp
mov
mov
xor
scas
mov
negl
les
popf
popf
xchg
movsb
ret
fcoms
jo
mov
jb
push
mov
xchg
xlat
lea
rcrl
decl
dec
xchg
in
sub
add
imul
pop
sbb
adc
std
mov
xchg
jg
test
daa
ret
cli
inc
dec
adc
jge
addl
adc
pop
int
xchg
popf
xchg
mov
shll
je
xchg
jb
sbb
pop
fadds
add
out
mov
or
xor
adc
leave
insl
lahf
stos
inc
out
movsl
xchg
adc
cmpsl
inc
cmpsb
std
pop
sub
outsb
imul
push
lds
stos
sbb
addb
stos
mov
incl
cld
sub
sbb
xchg
mov
subb
fimuls
sub
mov
leave
pop
daa
add
test
lret
scas
jo
cwtl
enter
cmpsb
jle
sbb
mov
test
addl
popf
xor
fstps
sub
mov
out
xor
mov
sub
adc
pop
sbb
stc
push
mov
mov
movsw
in
adc
sbb
xchg
in
fists
and
lret
adc
or
hlt
jl
mov
filds
push
cmp
enter
xchg
cmc
out
jle
jg
imul
jno
mov
mov
push
inc
cmp
fcmove
data16
mov
movsl
insl
and
xchg
idivb
stos
repnz
cmp
test
pop
adc
nop
jl
mov
sti
frstor
fadd
jmp
xchg
push
xchg
jecxz
pushf
leave
pop
outsb
insl
mov
xchg
pop
mov
rorl
aad
jle
push
push
cmpsl
xchg
sbbb
add
inc
inc
and
loope
mov
adcl
xchg
dec
and
or
push
imul
sbb
das
xchg
xchg
mov
xchg
mov
adc
mov
cli
sbbb
mov
loopne
scas
dec
jge
sar
jnp
push
jge
jecxz
adc
pop
mov
iret
add
aad
jbe
idiv
pop
mov
ja
and
int3
adc
cwtl
and
or
bound
int
or
xchg
xor
inc
mov
add
inc
add
xor
pop
inc
or
mov
shll
mov
xor
je
out
add
sbb
inc
setb
jno
mov
jmp
sub
pop
lds
wbinvd
out
push
scas
push
cli
mov
or
xor
xor
clc
mov
push
pop
cmp
das
aam
mov
sub
inc
jo
aaa
mov
ds
or
test
or
dec
mov
xor
jle
or
lods
xorl
mov
pop
popf
jecxz
aam
mov
rorl
out
insl
xor
out
dec
sub
in
xchg
mov
pop
sarb
adc
cmp
loopne
cmpsb
sbb
and
subb
lods
push
iret
mov
xchg
and
mov
and
jmp
out
fwait
jbe
not
scas
sbb
and
xchg
daa
fidivl
mov
loopne
rolb
adc
xchg
push
xchg
mov
xchg
jg
cwtl
movsl
xor
jmp
mov
and
push
out
jns
jae
xchg
shrb
inc
aaa
mov
lcall
xor
mov
add
sub
add
mov
adc
jnp
xor
jecxz
gs
loopne
sbb
mov
inc
testb
pushf
pop
out
rcll
xchg
dec
jle
fwait
mov
sbb
jl
mov
lahf
dec
adc
test
or
not
mov
push
or
dec
testl
pop
mov
jnp
xchg
mov
push
push
test
jnp
mov
push
cltd
or
xchg
sbb
fiaddl
cmp
fstpl
lods
mov
je
stc
xchg
mov
aad
lret
fbld
inc
and
jb
loopne
faddl
scas
pop
popf
inc
sbb
sub
rorb
int3
pop
mov
xchg
pop
std
sbb
jle
iret
das
xchg
cmpsl
sub
xchg
in
adc
xchg
xchg
add
sbb
ja
cmp
shll
aas
in
in
lods
inc
aad
adc
cltd
xor
or
fisubs
daa
jns
xchg
xchg
addb
repz
push
mov
negl
in
fsubrs
xorps
mov
inc
mov
subl
dec
adc
xchg
xchg
mov
sub
mov
cmpsl
sub
mov
xor
into
xor
jb
or
xor
rcrb
arpl
pop
and
dec
lods
push
insb
int
sub
xor
jo
or
jmp
mov
cs
adc
mov
lret
sar
das
cmc
pop
cmc
sub
movsl
stos
jl
insb
mov
ret
mov
shlb
inc
and
mov
cmpsb
pop
scas
flds
insb
mov
lret
sub
rcll
and
int3
loope
ljmp
test
loope
push
fwait
rolb
sbb
sbb
inc
sbb
push
mov
sub
add
call
adc
add
je
mov
je
mov
fs
mov
cmc
dec
out
jge
daa
add
js
xchg
stos
sbbb
inc
rolb
sub
jp
aad
cmp
lock
push
jl
arpl
sub
or
mov
addl
cli
popa
dec
and
es
mov
es
cli
xchg
je
push
nop
push
lret
cltd
sbb
add
inc
dec
sub
jmp
mov
push
dec
nop
stc
icebp
mov
xchg
pop
pop
rcrb
jae
inc
mov
filds
dec
bound
aad
xchg
pop
bound
adc
xor
gs
sub
ja
dec
xor
leave
mov
xor
adc
adc
inc
test
popa
lret
leave
and
roll
push
stc
cmpsl
inc
aam
dec
lds
jnp
leave
insl
mov
jae
cltd
in
cltd
mov
outsl
lret
icebp
mov
out
adc
mov
mov
mov
pop
dec
movsl
xor
jp
xchg
and
pop
out
xorb
add
xor
push
or
in
sub
imul
popf
mov
xlat
xchg
into
leave
scas
adc
sub
xsaves
mov
lods
ds
outsl
pop
cmc
pushf
push
dec
push
push
inc
mov
sub
stc
divb
mov
cmp
sbb
xor
movsl
pushl
mov
mov
inc
mov
xor
push
stos
cld
fstpl
fisubs
sbb
stos
cmpsl
fmuls
outsb
push
mov
sub
dec
jne
loope
mov
pop
xchg
insb
ss
add
mov
and
nop
cld
inc
mov
sub
sub
sub
sti
adc
and
out
popa
adc
aas
call
inc
sarl
mov
mov
jne
push
sub
xchg
cs
imul
pop
pop
jbe
and
adc
xor
test
gs
leave
es
add
hlt
sbb
shrb
xchg
ss
pop
sub
dec
and
xchg
mov
jbe
jecxz
pop
dec
pop
xor
mov
pop
jle
hlt
add
loope
cli
sub
pop
sub
enter
aaa
push
roll
or
add
rcl
loop
mov
jg
cmpsl
ja
mov
incb
fstl
or
sbb
pop
jns
dec
in
mov
pop
test
lds
fldenv
repz
out
insb
adc
xchg
scas
loop
adc
cltd
jl
stc
cmpsl
leave
lret
mov
loopne
cmpsb
nop
cmp
sbb
lahf
pop
orb
push
addl
push
pop
nop
stos
stos
lds
ja
fstps
clc
push
push
fdivrl
jge
dec
rcl
scas
test
adc
dec
popa
out
sub
pop
subl
inc
cmpl
pop
mov
into
inc
insb
mov
push
lods
icebp
addl
sahf
iret
adc
dec
lcall
divb
int
movsl
add
jp
xor
gs
or
dec
ds
imul
mov
push
jge,pn
adc
mov
jo
leave
jne
add
xor
add
jns
cmp
imul
scas
mov
adc
push
sahf
in
push
imul
cs
lds
xlat
push
xor
xor
cmp
dec
dec
scas
test
push
rol
xchg
cwtl
nop
int3
mov
or
hlt
or
dec
pushf
out
rcrl
xchg
arpl
shll
sahf
mov
movsb
push
ret
pop
aam
and
out
stos
movsb
int
or
mov
jp
mov
mov
xchg
cmp
push
aad
mov
jnp
std
insl
popa
stos
mov
ret
mov
sbb
push
adc
mov
push
add
cld
sub
outsl
pop
mov
jne
add
xchg
shrb
add
and
ja
sbb
add
or
cmp
cmp
jl
repz
dec
mov
push
pushf
sbb
scas
hlt
jno
push
out
jecxz
iret
add
pop
out
push
xorb
xlat
aas
popf
xor
mov
cli
xchg
sub
fsubrs
cmp
cmp
aam
push
xchg
jle
mov
cmp
scas
cmpsb
setae
mov
fcmovbe
and
dec
cmpsl
into
adc
idivb
cs
pop
loop
sahf
xchg
fidivl
adc
pop
jl
ret
popa
add
add
inc
pop
sbb
lock
dec
or
and
pop
mov
add
call
out
rorl
xor
call
jne
scas
sarl
mov
adc
in
pop
mov
mov
mov
addr16
and
in
cmp
xor
gs
cmpl
mov
jb
xchg
inc
movl
mov
das
rclb
jecxz
enter
xor
jb
sbb
add
rorl
repnz
mov
adcl
cmp
ljmp
or
pop
insb
jl
or
pop
push
les
jb
and
inc
nop
cwtl
dec
xchg
xor
loop
stc
xchg
jge
outsb
incb
pop
mov
ds
aas
sub
js
popf
cmpsb
int3
jne
je
inc
cmc
aam
pop
cmp
sub
icebp
push
aas
sbb
adc
xor
pushf
loope
xchg
add
int
fisttpl
dec
add
addr16
shlb
stos
adc
cmp
fisttpll
mov
shrb
mul
jle
jge
and
cwtl
iret
or
and
arpl
iret
scas
shl
movsl
jno
push
dec
xor
test
jno
and
cmp
ja
lret
fwait
movsl
adcl
dec
test
das
inc
sti
lret
enter
jecxz
cmp
out
imul
aad
out
aas
ljmp
hlt
clc
test
insb
aas
sub
push
mov
jl
dec
sbb
repz
and
lods
leave
out
inc
andl
dec
mov
xlat
inc
insb
dec
out
dec
jecxz
inc
push
pop
out
lods
sub
lods
in
out
mov
mov
cmp
insl
test
xor
mov
push
xor
dec
loope
scas
adc
adc
ds
jns
and
xlat
mov
jae
lods
pop
loope
push
jl
push
mov
fcoms
mov
test
lods
sbb
jge
push
das
ror
inc
mov
mov
fs
xchg
call
lods
shll
sub
jmp
adc
aaa
out
sub
sbb
inc
loope
sbb
orb
jge
test
and
cmp
gs
ss
stos
cmp
push
pop
in
out
je
push
xchg
leave
mov
push
outsl
mov
mov
xchg
cmc
cmp
or
mov
loop
movsl
adcl
movsb
dec
inc
pop
movsl
inc
in
pop
pop
push
cld
test
jle
push
mov
stos
xchg
pop
jne
dec
stos
cli
sub
cwtl
and
pop
dec
hlt
aas
mov
stc
push
xchg
sub
fldl
lahf
out
or
in
mov
shll
cmc
add
and
push
and
or
jne
sarb
in
movl
fsub
aaa
sahf
sub
fwait
sub
mov
pop
xor
and
mov
jecxz
fs
lret
inc
push
sub
adc
xor
sbb
lods
sub
cld
jns
and
icebp
dec
mov
stos
xor
out
lods
idivb
ret
js
into
xchg
sub
imul
or
arpl
stc
in
sarb
addl
aad
jge
mov
jge
sbb
pop
shl
xchg
test
jge
repz
aam
idivb
dec
sub
sub
ljmp
fildl
mov
fcmovnu
sub
dec
adc
popf
sbb
mov
rcrl
adc
aaa
popf
js
aas
pop
jo
and
leave
stos
inc
ss
dec
std
pop
xchg
mov
jmp
xchg
lret
cmp
loope
jp
jl
push
sbb
inc
int
pop
outsl
jns
dec
fwait
rcrl
and
dec
stc
scas
adc
push
fdivl
imul
jge
push
adc
inc
cmc
out
std
xor
imul
outsb
fnstsw
add
lcall
mov
pusha
xchg
jg
push
mov
push
repz
mov
xchg
and
mov
xor
push
fistl
shl
insl
adc
mov
std
cld
mov
xchg
pushf
push
push
add
aad
xchg
outsb
mov
fs
int
jecxz
pop
idivb
cltd
pop
cld
dec
lret
mov
xchg
mov
jecxz
inc
and
cld
imul
data16
or
flds
push
add
pop
cli
shlb
mov
mov
je
push
stos
scas
fcmovbe
popf
and
or
mov
jbe
inc
mov
fs
aaa
movsb
jae
addr16
cmp
outsl
xchg
or
scas
lea
daa
test
das
aam
pop
xchg
gs
dec
and
jl
inc
insl
ret
insb
ret
add
pop
push
mov
daa
inc
lods
imull
mov
mov
pop
sub
push
mov
jmp
push
inc
xlat
das
jge
and
outsl
rcll
xor
mov
xchg
aaa
sub
cmpsb
inc
hlt
inc
ret
inc
push
add
sub
jecxz
and
jp
sbb
hlt
cmp
adc
mov
dec
popf
xchg
cmp
push
shlb
pusha
rcl
push
outsl
mov
mov
push
aaa
or
jp
sti
stos
xchg
pushf
cwtl
push
add
insl
xchg
out
mov
daa
sub
add
lods
repz
sbb
mov
stos
and
in
pushf
and
test
push
ds
pop
popf
popf
cmp
adc
xchg
lods
fisubrl
jno
rcrb
jle
cmp
stc
out
daa
dec
lcall
jo
mov
xchg
outsl
xor
dec
adc
inc
mov
test
xchg
ja
adc
scas
fcmovb
jb
stc
rcll
aaa
mov
fidivrl
adc
rcll
arpl
and
or
loope
iret
push
and
jg
jno
stc
jne
pop
ja
ret
popf
out
push
cmc
jb
mov
mov
stc
jmp
mov
clc
mov
lahf
mov
pop
shrl
add
push
in
inc
cwtl
aas
pop
bound
scas
ffreep
adc
in
sub
mov
out
mov
aaa
xor
adc
out
mov
repz
sub
or
mov
test
inc
inc
dec
sbb
pusha
filds
mov
adc
cmc
dec
ss
push
clc
xchg
jg
inc
ljmp
fdivs
mov
xchg
jg
dec
dec
repz
add
xchg
in
xchg
and
in
and
negb
sbb
adc
nop
cmp
adc
rcr
jne
mov
je
divl
mov
ss
jecxz
sarl
xchg
leave
nop
cmp
adc
jns
sub
xchg
pop
mov
push
iret
pop
and
add
sbb
out
mov
pop
pop
sub
frstor
sub
out
fcoml
data16
sbbl
push
xor
adc
push
pop
and
lea
pop
or
mov
xor
out
out
mov
das
mov
inc
jmp
cli
xchg
mov
adc
adc
out
or
xchg
push
or
imul
jmp
and
fdivs
sbb
push
push
xchg
mov
push
arpl
lret
dec
jo
pop
mov
rcrb
into
cmpsl
mov
add
sbb
pop
lods
ds
cmp
sbb
dec
outsl
std
sbb
cmpl
pushf
xor
xchg
dec
cld
jns
jg
mov
not
fadd
mov
xor
adc
out
dec
jp
jne
fldl2t
mov
jne
mov
pop
roll
and
je
mov
adc
in
mov
push
or
xchg
sbb
cmp
ret
add
push
imul
xor
mov
inc
pop
in
sbb
ss
jge
or
movsb
jns
inc
xor
mov
out
mov
pop
loope
jmp
shl
call
out
fmul
mov
inc
adc
cmp
jns
xchg
ja
sarb
jbe
inc
push
or
ret
sarb
sub
movsl
add
aad
cmp
adc
aas
pop
or
fnsave
push
addr16
dec
or
push
adc
jge
lds
nop
adc
in
clc
insl
ficompl
jmp
mov
lds
xor
or
test
aaa
es
aam
outsb
dec
and
or
and
repnz
shll
gs
ret
mov
push
lods
add
xor
pushf
loopne
aad
cmp
sahf
loopne
mov
jo
adc
sub
jecxz
pushf
aad
jb
mov
xor
lret
and
test
push
pop
sub
loop
or
sbb
xorl
testb
loope
fisubrl
mov
mov
pop
push
xchg
add
sub
jecxz
or
sbb
cmpsb
test
adc
xor
mov
je
sbbb
ret
movsb
sbb
orb
and
out
fmul
jnp
test
repz
call
punpcklbw
sbb
sub
xchg
ljmp
imul
jo
mov
outsl
mov
pcmpeqd
loop
mov
insl
or
or
pop
mov
shrl
adc
loope
ficoml
jae
add
dec
mov
inc
in
or
dec
jnp
dec
or
leave
push
in
dec
pusha
int
sarl
sarl
lods
rcr
inc
call
fstpl
ss
xor
movsb
aas
mov
jnp
or
daa
out
ficompl
mov
pop
je
inc
dec
mov
sub
or
in
push
pushf
loop
roll
lea
inc
lret
adc
out
loope
into
mov
gs
lds
push
mov
mov
aad
lret
add
xchg
xchg
mov
jne
aaa
or
adc
mov
int
sbb
jecxz
inc
sub
sbb
jge
xchg
cmpsb
repz
mov
out
lcall
lea
stos
or
loope
mov
cmp
inc
sub
sti
push
lret
shl
pushl
mov
ret
cmp
mov
jmp
in
lock
mov
bound
xor
movsl
les
xchg
xchg
adc
xchg
scas
xor
push
xchg
lret
jmp
scas
out
sub
add
mov
add
outsl
shll
testl
fimuls
dec
call
add
dec
in
std
loopne
fisubs
lds
mov
ret
lahf
mov
outsl
xchg
jne
pop
sbb
testb
jns
arpl
mov
insl
sbbb
out
sbb
mov
outsb
push
sahf
loopne
lds
and
into
pop
jnp
add
sbb
sbb
or
xchg
scas
call
cmpsl
fdivrs
mov
sbb
ret
loope
jnp
sub
adc
lret
xchg
pop
aaa
in
js
jno
cs
mov
adc
xor
lods
cmp
les
out
adc
lret
mov
ja
pushf
fmuls
mov
jno
aaa
jmp
sbb
and
gs
lret
xor
xor
dec
mov
insb
aad
pop
test
xchg
lea
add
adc
in
add
movsl
push
dec
push
adc
aaa
scas
lret
sbb
jg
je
pusha
out
je
lods
jg
inc
into
ret
in
jmp
faddp
mov
push
nop
sti
or
icebp
repz
adc
and
mov
push
adc
out
or
push
jmp
cwtl
jne
push
sbb
pusha
add
mov
sub
or
add
repz
lret
in
xchg
dec
add
loopne
roll
fimuls
xchg
mov
mov
lret
rolb
sbb
sbb
jmp
aam
bound
mov
out
and
inc
test
mov
out
ss
xchg
in
aad
scas
test
movsb
movsb
ret
cmp
shl
int
pop
adc
cmp
xchg
jg
jns
orl
mov
btr
inc
pop
popa
out
cmp
pop
testb
add
mov
loop
std
cmp
ljmp
sub
mov
pop
add
out
xchg
fisttpl
mov
add
outsl
jp
jge
jae
out
outsb
add
stos
or
popf
jg
and
xchg
sub
xor
push
dec
add
dec
xor
cmc
loopne
dec
adc
pop
aad
or
out
stc
imul
adc
es
loop
jb
iret
jne
dec
ljmp
push
ljmp
mov
jg
adc
scas
mov
lods
adc
push
and
push
or
sbb
je
cmpsl
pop
jecxz
std
jl
mov
or
add
es
pushf
mov
jo
mov
xor
adc
mov
and
inc
adc
or
sbb
out
insl
in
pop
mov
movsl
xchg
loopne
mov
cmc
popf
adc
sbb
lret
xchg
es
andb
mov
mov
sub
sub
xor
nop
sub
fsubr
cmpsb
test
mov
fs
rorb
cmp
lock
lret
cmp
loope
jae
or
mov
daa
rclb
dec
mov
mov
pop
xchg
inc
dec
adc
je
stos
lock
insl
lret
fsincos
xlat
insb
adc
and
pop
xlat
xchg
and
scas
jmp
lea
cmp
adc
sbb
dec
ret
sbb
sbb
addr16
lods
push
enter
sbbb
mov
lods
scas
inc
andl
mov
mul
addr16
mov
pop
cmp
ret
mov
or
push
mov
mov
and
adc
mov
popa
mov
stos
jno
cmp
pop
mov
push
insl
cmpsl
mov
sbb
adc
subl
outsb
loopne
or
mov
mov
add
cmp
sub
repz
movsl
jno
jne
adc
mov
adc
push
test
test
in
aas
mov
popa
add
sub
into
je
adc
movsb
mov
sbb
in
jno
or
out
arpl
adc
out
shll
or
cmp
lahf
sbb
mov
dec
cmpsl
cmp
pop
pusha
push
idivb
dec
cli
aaa
loope
sub
cmc
jbe
fs
aaa
or
mov
jle
decl
dec
push
and
lods
or
xor
jecxz
pusha
mov
mov
out
mov
std
mov
nop
call
call
cmc
jge
mov
sarl
dec
adc
scas
rcrb
dec
mov
push
adcl
push
mov
out
or
mov
je
dec
cwtl
jecxz
std
aad
mov
adc
push
push
fistpll
clc
and
jl
sub
jns
iret
aad
jg
dec
sbb
aad
mov
cmp
rcl
insl
dec
cmp
mov
sbb
adc
cmp
rcrl
pop
mov
adc
je
dec
subb
fidivrs
adc
fwait
inc
inc
xor
std
adc
xor
adc
xchg
shll
push
adc
outsb
out
mov
repnz
push
mov
cmp
inc
dec
insb
bound
pop
divl
movsb
push
mov
mov
pop
adc
pop
ror
mov
add
cltd
and
pop
cmpb
xor
or
dec
lds
imul
xchg
imul
mov
testl
movsl
mov
fbld
sub
xchg
in
shll
ret
js
pop
test
cmp
loop
xchg
pop
jo
das
jne
pop
loopne
movsl
movsb
out
pop
sbb
sbb
xlat
fld
stos
sub
addr16
adc
pop
inc
sbb
xchg
mov
sbb
jno
xor
in
cmpsl
clc
pop
xchg
mov
cmp
int
jmp
xor
xchg
xor
jno
lret
lods
mov
ret
adc
rcll
cmp
in
mov
xchg
jb
in
jmp
or
mov
lods
jl
mov
mov
push
data16
jbe
mov
mov
mov
sub
mov
jmp
jmp
push
data16
jbe
mov
testl
xor
xchg
add
mov
pop
fdivl
sbb
rclb
xchg
jns
adc
aad
jae
xor
out
mov
jb
out
lea
movsl
inc
or
in
mov
scas
cmp
out
jge
aaa
movsb
push
cmpsl
in
dec
and
arpl
inc
iret
int
dec
inc
xchg
sbb
and
pop
cmp
in
inc
xlat
outsb
fcmovb
xchg
das
mov
imul
int
ljmp
stos
xchg
jp
mov
imul
xlat
fistpl
pop
scas
and
cmp
ret
inc
icebp
loope
fcompl
loopne
sbb
ret
xlat
int3
mov
xlat
sbb
mov
aaa
mov
in
loope
jecxz
dec
stos
arpl
sub
push
ljmp
in
mov
push
in
mov
cmp
imul
insl
outsl
or
lods
xchg
xlat
maskmovq
mull
sub
push
push
mov
jg
mov
je
mov
je
push
repz
shrb
push
add
out
addr16
xchg
cs
ds
pop
loopnew
call
addr16
stc
addr16
mov
push
dec
push
or
or
test
fiaddl
sbb
les
mov
jo
or
sbb
stc
movb
mov
add
nop
decb
and
mov
sbbb
adc
add
je
pop
hlt
pop
in
xorl
add
adc
lret
cmp
mov
fldt
dec
std
outsb
and
dec
leave
xchg
ret
cmp
mov
shll
jnp
push
cmc
dec
lds
adc
pop
lcall
ja
pop
xor
mov
inc
loope
add
test
ss
jle
push
inc
jne
rorl
adc
or
mov
cmp
dec
mov
or
leave
movsl
and
mov
js
or
sub
inc
push
add
add
pop
loope
mov
xchg
add
in
hlt
lods
jo
das
es
adc
out
xchg
rorb
in
out
sub
or
xor
sub
pop
out
repnz
cs
mov
sub
loop
jp
es
loope
in
add
xlat
scas
loopne
mov
jl
shrb
push
mov
push
insb
xchg
mov
jmp
aaa
jae
push
in
mov
loope
xor
push
xchg
ds
mov
insb
jo
mov
shr
in
add
sbb
xor
jb
je
in
xchg
fwait
dec
testl
add
setnp
mov
out
addr16
mov
fs
fwait
jne
call
inc
lods
sbb
jo
jno
add
adc
fsub
lock
pop
lahf
sbb
mov
icebp
test
notl
pushf
ljmp
in
jge
push
inc
xor
bound
jno
js
call
aam
dec
mov
push
cmp
mov
adc
loope
and
pop
lahf
dec
mov
cwtl
jecxz
imul
xor
lea
lret
mov
mov
loopne
mov
call
icebp
cltd
nop
adc
xor
xorb
push
rcrl
movsb
pop
aas
mov
xor
mov
iret
xchg
mov
lret
je
pop
mov
jg
insl
cli
ret
int3
adc
or
mov
xchg
or
and
pop
jbe
adc
movsb
js
mov
and
push
jl
push
pop
mull
sub
inc
jmp
dec
xor
mov
cltd
sbb
ss
outsl
cmp
xchg
xor
sbb
sbbb
inc
cmpsl
jge
xchg
int3
insl
nop
or
add
movsl
pop
ja
int3
dec
lods
add
lods
mov
push
sub
ret
mov
scas
xchg
out
mov
add
lcall
mov
jnp
mov
ljmp
push
jmp
dec
mov
arpl
sahf
ret
insl
ds
or
adc
jne
rolb
js
jp
pminsw
loopne
scas
out
enter
push
popa
es
ret
js
gs
ja
gs
gs
mov
scas
adc
notl
icebp
add
stc
out
inc
or
gs
adc
pushf
xchg
push
dec
sbb
xor
call
jno
dec
fs
sahf
scas
in
loopne
cli
dec
out
into
xchg
in
pushf
inc
xchg
sbb
sub
divb
dec
fs
mov
xor
dec
mov
jge
int
cwtl
or
add
mov
or
dec
and
sbb
ja
shll
fldl
or
xor
mov
lret
std
orb
lock
mov
movswl
mov
pop
out
imul
aad
xchg
and
jp
mov
or
inc
les
or
imul
xor
icebp
fs
mov
fs
jge
xor
mov
inc
jbe
xor
in
sbb
push
lea
imul
gs
cmpsl
mov
test
aas
fcmovb
push
mov
rcrl
stos
das
ficoms
out
insl
data16
mov
dec
jg
test
icebp
mov
loop
mov
mov
pushl
pop
and
bound
dec
xor
repnz
bound
aad
shll
jbe
es
daa
push
sub
add
and
inc
pop
fcompl
sub
pop
or
adc
push
fs
das
xor
cwtl
mov
mov
mov
daa
cmp
jo
jns
addr16
jecxz
xchg
sbb
push
mov
push
mov
mov
arpl
add
mov
insl
mov
cld
pop
fbstp
xor
add
xor
sub
fistps
aam
iret
xlat
mov
dec
pop
data16
mov
insl
fildl
jne
mov
and
in
add
ret
adc
in
push
rorl
cmpsb
std
es
mov
xor
loop
cmpsb
adc
sub
push
shll
fisubl
jp
and
sarl
into
inc
mov
fidivrs
lock
inc
rcl
dec
aaa
fcoml
sub
mov
xchg
xchg
mov
sbb
inc
mov
scas
sbb
xchg
arpl
sbb
pop
cli
stos
and
nop
int3
jge
es
popf
rorb
fisubl
xor
mov
in
scas
add
add
test
sbb
xchg
dec
les
popf
insb
adc
mov
loope
test
mov
pop
flds
or
lods
repz
sub
sar
pop
dec
std
pop
mov
test
pop
shl
xor
ficoml
cmpsl
push
push
inc
testl
pop
lcall
add
xchg
mov
test
sub
jne
xchg
dec
cmp
xchg
jle
fistps
sbb
and
sbb
js
mov
sub
adc
xor
and
jmp
push
bound
cmpsb
fisubrs
dec
sbb
adc
add
sbb
push
pusha
lds
fistps
daa
sti
test
fwait
add
push
jp
icebp
test
adc
sbb
lods
rorl
dec
cltd
inc
pop
lods
dec
dec
and
test
sub
mov
pop
adc
dec
add
in
fs
or
pop
movsl
rolb
roll
sbb
pop
imul
xchg
cmp
sub
push
and
adc
mov
out
mov
arpl
sbb
loopne
jae
inc
outsl
mov
jbe
and
or
push
loope
push
or
iret
mov
mov
stos
jp
pop
jo
cmp
push
cmp
cmp
dec
xor
xor
cmpsl
js
lcall
jno
and
lret
dec
and
pop
mov
test
jl
movsl
loop
xchg
sbb
pop
xchg
dec
xchg
ret
jno
into
sub
jb
scas
outsb
and
inc
pusha
push
clc
push
rorl
rclb
push
int
mov
and
ficompl
mov
push
pop
scas
mov
mov
aaa
aad
mov
adc
mov
jmp
pop
adc
and
pop
jp
rcr
xchg
gs
xor
aam
xchg
cmp
dec
daa
jmp
push
jae
push
clc
pop
or
push
mov
decl
inc
or
sbb
aam
sarl
push
and
aaa
mov
out
xor
aas
add
das
mov
in
std
std
mov
movsl
loop
lret
js
push
xchg
push
ljmp
jl
jo
mov
arpl
inc
mov
test
add
ja
test
and
fmul
pop
sbb
lahf
jae
inc
jecxz
leave
jmp
push
std
daa
jmp
and
add
xchg
outsl
xchg
mov
fs
loope
push
add
pop
push
lea
push
mov
es
sahf
mov
cwtl
in
adc
lock
pop
adc
arpl
xchg
repz
inc
shlb
or
aaa
inc
adc
test
in
and
imul
aad
push
movsb
sub
adc
stc
jo
fdivrs
jo
or
mov
stc
inc
loopne
push
pusha
repz
cmc
mov
lcall
jbe
dec
or
sbb
mov
test
jge
jg
mov
inc
adc
loope
imul
loope
imul
jle
mov
aam
sbb
push
inc
mov
cli
cld
int3
xlat
ja
pop
and
out
mov
inc
daa
adc
mov
aas
push
mov
xchg
into
mov
gs
pinsrw
imul
pop
sbb
js
inc
jmp
int
mov
adcb
cmp
fs
jbe
mov
lret
jno
cmp
jno
jne
sbb
mov
insl
mov
fisttpl
sub
sub
leave
sbb
pushf
addl
xchg
jle
mov
mov
mov
xchg
push
xchg
inc
jnp
push
push
xchg
push
stos
inc
sahf
inc
aas
or
rorb
sub
sbbb
xchg
out
xchg
dec
mov
sbb
push
pop
push
sahf
clc
pushf
cwtl
cmc
push
and
push
sub
xor
adc
leave
xor
pop
cmp
jle,pt
in
out
sti
orl
jg
dec
iret
mov
inc
out
sub
ficomps
aaa
enter
push
or
jne
cmpb
push
pop
jae
jle
push
ss
push
push
sbb
pop
adcl
lock
mov
sti
push
inc
sub
testl
jnp
sbb
test
push
jb
and
inc
sti
and
fiadds
lahf
outsb
push
rcll
xchg
inc
sub
icebp
sarb
jl
negl
push
pusha
and
lret
mov
mov
xchg
sbb
in
push
repz
das
pop
jb
shrl
int
mov
pop
movsl
daa
xchg
rclb
aas
insl
and
pop
jmp
mov
mov
xor
add
mov
xor
or
sbb
adc
jno
adc
je
add
subl
xor
leave
popf
adc
xor
pop
or
movsl
inc
das
aad
mov
jo
cmc
adc
pop
push
icebp
repnz
dec
pop
int
dec
push
mov
xor
mov
loope
and
test
sub
push
or
push
fsubrs
xchg
inc
xchg
xchg
adc
mov
push
push
nop
ja
adc
sbbl
and
mov
mov
mov
dec
shrl
xchg
sahf
flds
clc
pushf
lds
adc
push
add
and
or
fisttpl
ds
mov
mov
jmp
inc
jae
inc
jp
daa
ljmp
push
or
nop
cltd
das
aad
push
enter
ficoms
sbb
rol
xor
test
fwait
rorl
pop
ret
sbb
push
out
lcall
bound
inc
out
pop
mulb
pop
push
in
add
rclb
std
mov
xor
enter
ret
aad
add
mov
int
enter
movsl
int
test
xor
fdivrs
xorb
mov
pop
xlat
int3
push
dec
in
push
mov
lret
rcrl
cmp
adc
mov
enter
bound
cltd
jno
mov
paddd
mov
mov
push
or
push
adc
mull
fists
sub
icebp
jg
in
dec
cld
jmp
jb
and
fs
push
xchg
lret
stc
dec
xorb
ret
fsubs
pop
or
mov
mov
stc
mov
mov
sub
nop
pop
xor
xchg
mov
leave
xchg
iret
sub
js
scas
pushf
push
push
push
les
popf
xchg
sbb
arpl
out
cltd
cmpsb
imul
lahf
sub
int3
icebp
int
stos
or
xchg
stos
adc
movsl
repnz
mov
in
shr
cmp
sub
movsb
pushf
xchg
and
jge
cmpl
outsl
fldenv
loopne
call
popa
cli
outsl
mov
test
xlat
mov
xchg
test
unpckhps
lock
add
shrl
or
or
add
push
out
hlt
movsl
fstl
sbb
lahf
adc
out
or
shll
lods
add
sbb
lea
and
push
mov
ds
push
inc
adc
jb
addr16
mov
inc
inc
daa
xor
mov
popl
outsb
xorl
movsb
and
xchg
pop
imul
jl
jl
dec
das
jbe
cmp
in
add
cmp
int
xchg
ret
push
jmp
push
cmp
stos
nop
pop
and
scas
jle
jno
sahf
xor
cmc
out
lock
std
clc
idivb
add
movsb
xorps
pop
imul
jne
push
in
pop
in
and
in
mov
aad
aas
pop
popf
imul
sub
mov
mov
test
pop
rcl
ret
xor
aaa
iret
jno
adc
cmp
outsb
xchg
dec
or
push
pop
mov
sbb
xchg
dec
int3
movsl
rcrb
popf
scas
inc
je
lods
lods
xchg
dec
pop
pop
sarb
iret
pushl
andl
cmp
out
inc
sahf
stos
xor
mov
mov
decl
xor
fbstp
pop
jo
fadds
cli
xchg
in
in
out
or
inc
mov
mov
js
adc
lods
jno
aad
pushf
jg
andb
div
and
rcll
out
aam
or
jge
push
repz
shll
fdivs
jbe
dec
aaa
jl
movsb
int
dec
xor
test
enter
mov
and
test
pop
push
testl
push
sahf
rcl
scas
mov
add
pop
repnz
jl
pop
dec
decb
mov
cli
popa
mov
jbe
jne
dec
adc
xchg
push
out
subb
mov
xchg
mov
add
mov
in
popa
jecxz
inc
mov
bswap
push
data16
jno
jb
adc
inc
das
pop
in
dec
fnsave
adc
jno
pand
test
add
sbb
jle
arpl
jmp
std
xor
cs
adc
das
jns
mov
dec
cmp
cmp
jle
aam
daa
inc
push
sub
mov
or
sub
in
pushf
mov
sub
push
cmp
jle
test
adc
mov
or
adc
push
mov
lahf
leave
fs
icebp
ja
aas
das
mov
push
das
mov
dec
jbe
js
inc
je
lock
pop
sub
mov
out
aad
mov
popl
xchg
test
xchg
xchg
test
addr16
adc
inc
ficompl
or
pop
dec
push
adcl
das
jbe
out
inc
mov
rclb
in
inc
lcall
jnp
dec
rol
pop
enter
rol
mov
or
mov
cmp
jmp
rolb
repnz
cltd
and
outsl
outsb
nop
test
adc
or
cwtl
push
jge
into
aam
mov
dec
lahf
sbb
cmc
in
ljmp
xchg
cmpsl
inc
inc
das
jno
or
insl
adc
imul
sub
shlb
in
mov
jae
mov
push
jge
movsb
ja
scas
mov
shrl
mov
dec
and
inc
pop
cmp
mov
jmp
faddl
leave
cld
sbb
scas
inc
notb
mov
popl
fstl
repz
inc
insb
adc
cmp
jl
jl
dec
and
lods
rol
sub
aam
lcall
and
lret
mov
inc
xor
std
inc
sub
js
mov
cmp
aas
inc
mov
sbb
dec
adc
sbb
add
mov
imul
dec
arpl
mov
ret
pop
imul
rol
xor
fsubrp
inc
dec
or
mov
mov
iret
inc
in
jae
in
xor
icebp
sbb
sti
pop
pop
in
out
cmp
imul
fnsave
inc
mov
test
fcompl
test
test
sti
cmp
ss
fistpl
popf
add
mov
sti
pop
jbe
xchg
popa
adc
xchg
loopne
psrld
xchg
mov
mulb
xchg
iret
scas
dec
cltd
cwtl
mov
jp
lock
add
adc
add
inc
sti
sbb
imul
inc
shll
ror
sbb
cs
enter
add
push
mov
in
mov
and
inc
movsb
not
insl
std
test
xor
movsb
mov
loope
push
fmull
mull
xchg
imul
je
outsb
push
shl
aam
xlat
add
icebp
xchg
mov
into
cmc
mov
lods
cltd
cli
stos
pusha
arpl
aas
and
xchg
test
mov
push
fstl
cmp
pop
out
dec
mov
xchg
in
xor
gs
mov
loopne
xor
mov
jb
xchg
ds
jb
push
outsl
sbb
rolb
and
sbb
pop
xor
adc
push
aam
fiadds
push
in
add
jns
clc
rclb
movaps
jno
inc
sub
in
aas
xor
add
jmp
sbb
inc
dec
and
out
stos
stc
jbe
or
filds
mov
addr16
in
movsb
ror
das
lret
std
cmc
ror
and
push
and
adc
jo
and
das
xchg
stc
push
lods
stos
pushf
scas
push
outsb
insl
sbb
out
jae
inc
jae
test
sbbb
pop
iret
mov
adc
cmp
add
dec
faddl
das
lcall
mov
mov
in
pop
inc
stc
lea
cli
les
shll
mov
jge
inc
jmp
sti
inc
lock
pop
dec
xor
xchg
fiadds
jmp
stc
notl
cld
inc
mov
jo
cli
aam
ret
bound
mov
adc
mov
sub
idivl
mov
xor
cmp
stc
cs
inc
push
aad
cmc
mov
stos
mov
pop
mov
push
and
mov
push
push
sub
icebp
std
push
push
xor
aad
jle
adc
pop
mov
pushf
shlb
rcrl
fidivrs
pusha
call
mov
call
cmp
dec
stc
and
xchg
imul
mov
popf
adc
je
xchg
clc
push
flds
xor
es
test
cmp
arpl
cmp
movsl
dec
repz
pop
dec
xor
pop
pop
dec
xchg
test
adc
jb
mov
jg
xor
or
add
adc
stos
jecxz
mov
adc
incl
pop
dec
adc
lret
jns
in
dec
add
aam
mov
mov
add
lds
imul
cld
les
loopne
adc
dec
shll
and
xchg
lods
ret
xchg
push
aad
xor
mov
loope
pop
ds
rcrl
lret
fsubs
push
add
adc
mov
push
pop
scas
mov
mov
cmc
mov
inc
lcall
inc
bound
xor
add
lods
lock
dec
xchg
xor
mov
das
adcl
fsub
xchg
push
adc
mov
add
pop
es
cltd
jo
lods
mov
sahf
jp
or
mov
mov
mov
push
push
or
mov
xor
jae
push
lods
pop
faddl
cmc
xchg
inc
add
ljmp
push
hlt
mov
mov
dec
mov
cmp
inc
jmp
scas
aam
imul
pop
popf
out
jp
jle
or
add
inc
aam
inc
int
sub
and
int
scas
aam
cmp
jnp
shr
mov
xchg
test
dec
cmp
mov
dec
mov
andnps
movsl
jbe
mov
lcall
push
dec
xchg
mov
mov
push
outsl
pop
movsb
in
mov
ljmp
adc
cmpsl
cmp
out
xchg
lahf
or
gs
or
or
pop
addb
sahf
xor
mov
idiv
dec
or
sub
and
das
loope
in
stos
sahf
mov
ljmp
or
lods
mov
sahf
xchg
pop
roll
add
pop
repnz
adc
dec
and
int3
jbe
and
add
cmpsl
push
mov
dec
test
out
cmp
push
pop
adc
xor
cmpsb
dec
scas
subb
lcall
add
push
xchg
push
insl
leave
dec
scas
enter
push
sbb
aam
jae
inc
into
insb
decl
ljmp
fistl
into
jno
icebp
sub
add
adc
mov
mov
rcll
lock
enter
lahf
arpl
imul
or
aaa
adc
adc
adc
sub
std
xor
fsubl
xchg
jnp
jp
stos
cmpsl
xchg
popf
iret
jp
hlt
xchg
xchg
mov
test
jge
adc
mov
push
jge
sbb
mov
xor
adc
push
fcoml
inc
mov
inc
mov
insb
lea
jecxz
in
insb
push
pop
push
jmp
inc
inc
lods
xchg
jle
in
push
popf
mov
and
sbb
lret
popf
cwtl
outsb
sbb
push
mov
sbb
mov
mov
add
push
push
jmp
xchg
inc
mov
test
aad
sub
ret
push
jecxz
fistps
sub
mov
pop
lea
into
xchg
push
aas
adc
lahf
stos
pusha
jno
dec
xchg
jecxz
push
dec
xchg
ja
dec
or
lar
mov
je
add
scas
adc
mov
xchg
out
daa
jno
stc
mov
pop
cli
mov
xchg
in
dec
movsb
or
and
adc
add
jno
popf
sbb
dec
push
fidivs
insl
repz
mov
out
mov
mov
ss
and
dec
enter
add
jge
jmp
jl
mov
xchg
and
jno
lods
movsb
pushf
add
inc
xor
imul
or
stc
inc
ret
aam
lds
or
jmp
cmp
push
mov
sub
xchg
or
outsl
xor
cmpsb
std
adc
push
repz
adc
pusha
mov
test
cmp
cmpsb
and
filds
push
lret
sub
sbb
hlt
adc
or
jp
lods
nop
add
and
lds
std
adc
rcll
xor
addr16
neg
leave
mov
sub
and
stos
dec
stc
daa
fsts
pushf
adc
pop
mov
xor
cs
repnz
gs
clc
jne
test
mov
mov
push
in
mov
jge
jne
fbld
aaa
adc
lods
aad
mov
pcmpeqw
jno
and
ja
push
in
inc
pop
jg
sub
inc
pusha
sbb
adc
shl
and
cmc
sahf
lock
cmp
cmpsb
mov
rcr
fisttpll
inc
pop
lods
outsb
out
outsl
pop
inc
lahf
add
fstpt
fcoml
push
xor
test
sti
cmp
aas
push
add
fwait
addb
dec
sub
xchg
rolb
or
sti
push
jmp
or
int3
xchg
lret
mov
sub
dec
cmp
cmc
mov
movsb
aas
xorb
mov
rcr
bound
aaa
push
pop
sub
mov
jle
adc
stos
cli
cmp
into
add
aam
inc
into
cwtl
and
or
js
out
xor
pop
in
jp
jbe
jae
out
push
ret
rcrl
jno
nop
hlt
sarb
pop
bound
push
or
adc
int3
cltd
fdivr
sti
in
loop
test
shr
mov
xor
out
rcl
inc
jge
mov
lret
jle
mov
add
cmp
mov
mov
xlat
jo
fcomp
jo
sbb
lock
mov
or
xchg
add
out
sti
outsl
xor
fisttps
fidivrl
in
sbb
inc
cwtl
aaa
xchg
and
mov
xchg
aaa
add
in
sub
dec
pop
mov
mov
fdivs
lock
mov
imul
ret
les
inc
mov
push
push
in
sub
stos
add
call
or
sar
pop
loope
mov
js
ja
stc
xchg
leave
jmp
pop
or
sbb
xchg
scas
lret
pop
mov
mov
mov
jp
scas
lods
xor
cmpsb
push
adc
data16
cld
mov
aad
push
outsl
jo
cmc
rcrb
sub
jne
aad
mov
push
ljmp
pop
add
jmp
lods
adc
jp
add
fcoms
xchg
pop
and
lret
cwtl
pop
jo,pt
jbe
fwait
xchg
mov
xchg
sysret
sti
add
sahf
xchg
jne
fisttpll
cmpl
outsb
stos
xchg
testb
imul
das
mov
dec
imul
popf
sbb
arpl
or
mov
push
mov
and
push
sahf
out
jo
push
cmpsb
in
es
dec
add
xchg
inc
stc
push
jae
inc
lea
and
stos
inc
and
sub
pop
mov
aad
mov
push
imul
add
int
or
mov
ficoms
frstor
vmovntdq
pop
pop
mov
ficomps
xchg
mov
sbb
out
fadd
ret
jmp
mov
jbe
mov
xor
xor
test
pushl
faddp
ja
shll
dec
push
mov
fbstp
bound
and
inc
push
or
loope
pusha
jno
jl
setb
das
fists
shl
xorb
pop
cmp
sub
or
sbb
test
decb
sbb
not
jecxz
sahf
movsb
out
mov
and
push
sbb
stc
push
repz
pusha
insl
aaa
jecxz
in
fcos
adc
rdtsc
sub
add
mov
adc
cmp
outsl
cmp
dec
inc
cmc
jg
mov
fwait
mov
jg
pop
xchg
shrl
leave
xor
daa
cld
fistps
pop
loope,pt
dec
adc
data16
test
xchg
pop
sub
fbstp
cmc
sub
push
fs
insb
clc
cmp
jecxz
or
scas
addb
out
out
and
mov
xchg
imul
xchg
faddl
xchg
push
iret
cwtl
loopne
push
les
shrl
test
inc
or
or
test
daa
adc
jb
popf
jo
jns
push
lods
stos
dec
mov
jo
mov
shll
pop
push
push
xor
rorl
or
adc
cmpxchg
andb
lret
lea
inc
neg
not
sbb
scas
stc
in
and
jb
repz
data16
mov
push
stc
cmp
jb
sbb
mov
pinsrw
push
adc
add
push
and
mov
pop
js
cmpsl
and
xor
and
or
sub
push
jo
push
icebp
cmp
xor
loopne
and
dec
and
aaa
sahf
or
lods
adc
cltd
sbb
pop
leave
cld
fdivs
or
aam
xor
adc
jg
mov
and
loopne
lods
icebp
and
aad
push
lods
iret
in
aad
aad
sub
push
vunpckhps
ret
das
xor
and
jae
jge
daa
or
sbbl
pop
jne
pop
aam
lret
mov
loope
fadd
pop
ss
add
inc
sbb
test
xor
jg
lahf
jl
mov
stc
mov
jp
lods
and
je
push
and
mov
dec
sbb
bnd
shl
inc
into
xor
xor
mov
mov
rcrb
cld
jae
mov
je
notb
pop
cmp
stos
or
popa
inc
or
rcl
shr
pop
mov
jns
popfw
xchg
shrl
addl
push
enter
sbb
xor
ret
adc
outsl
cmp
sbb
xchg
lds
jb
ret
cltd
aad
ds
leave
jae
sbb
iret
mov
jl
popa
sbb
mov
and
mov
loope
in
jecxz
loopne
fistl
int
push
test
fiaddl
mov
adc
shrl
cld
in
dec
lods
sub
mov
inc
outsl
je
pop
dec
dec
and
xor
icebp
fidivs
mov
sub
add
and
adc
addl
rol
outsl
sub
aad
sbb
inc
fucomip
adcl
lret
mov
jno
enter
inc
mov
repnz
shlb
xor
pop
cmpsl
mov
stc
inc
in
inc
or
xchg
mov
aam
stos
pusha
loop
stc
pop
mov
cltd
dec
xchg
enter
dec
pop
mov
mov
mov
add
cltd
cmp
sub
push
outsb
cmc
dec
adcl
jnp
jbe
movsl
xor
xor
inc
cmp
scas
orb
fidivs
add
popf
ffreep
add
add
scas
pop
and
shr
inc
push
imul
dec
mov
add
test
aam
movsb
mov
adc
rcr
add
jle
incl
ret
lds
ljmp
sub
push
lods
dec
jae
cmp
mov
add
std
and
loopne
scas
roll
sbb
push
cmpsb
test
imul
mov
inc
jnp
hlt
aaa
jl
cmp
adc
shll
jo
pop
xor
fldl
dec
pop
add
mov
dec
insl
jbe
ret
rep
mov
leave
imul
loope
incl
aas
inc
mov
fcoms
mov
cmp
loope
scas
cmp
mov
sub
ret
fiadds
das
sbbb
mov
imul
loopne
mov
mov
pop
mov
cli
insb
enter
fs
mov
pop
dec
and
aad
test
mov
sub
rcrl
mov
add
sti
pop
fidivrs
out
jge
add
mov
mov
imul
divl
jl
cltd
inc
lret
enter
clc
xorl
jae
movsb
mov
das
pop
mov
pop
pop
rcl
lret
fnstsw
xchg
rorl
hlt
out
pop
mov
or
xlat
sub
and
pop
dec
mov
ficoms
aaa
clc
push
mov
xchg
stos
fnsave
xor
lock
dec
add
adc
mov
lds
arpl
xor
enter
andb
sbb
shrl
mov
jge
jmp
jmp
mov
sbb
cs
adc
and
xor
jge
mov
mov
adc
and
add
stc
sbb
push
loope
pusha
inc
inc
cmc
jo
inc
or
inc
int3
xchg
mov
mov
loop
jbe
mov
lcall
mov
ja
add
xchg
aas
mov
adc
lahf
xor
mov
pop
loop
sbb
repnz
add
push
jg
cmpsl
test
test
xor
xor
iret
mov
arpl
xchg
shrb
insb
popf
test
cmp
jl
push
das
xchg
ljmp
mov
xlat
das
cli
and
mov
pop
xchg
gs
lahf
inc
push
add
mov
fs
sub
mov
jge
test
stc
xor
outsl
and
fistpl
mov
xlat
push
jae
aad
hlt
inc
adc
inc
lret
shl
cwtl
out
push
inc
cli
aad
dec
cmp
out
push
shrl
repz
xlat
push
cmp
or
loope
filds
sbb
rcr
jmp
stos
ss
inc
and
addr16
retw
mov
inc
sub
dec
adc
jp
pop
insb
ja
pop
mov
inc
mov
inc
out
icebp
xor
mov
rorl
ud2
cmpl
inc
push
jge
pusha
insb
nop
push
push
in
cli
cltd
dec
and
sub
jmp
jne
outsl
xchg
xchg
mov
int
cmpsb
cmpsb
or
dec
jecxz
adc
les
es
pop
inc
aad
aad
jmp
pop
dec
mov
sub
dec
aam
xor
mov
adc
addb
jbe
xor
test
xchg
repz
jnp
mov
inc
les
add
or
test
out
ds
push
push
xor
iret
rcr
adc
jp
leave
sub
stc
mov
lods
rorl
icebp
push
mov
jnp
inc
inc
xchg
fdivr
push
stos
or
dec
add
cmp
aam
call
xchg
test
je
xchg
mov
leave
inc
cli
cwtl
mov
push
stos
imul
subl
sub
jo
out
lods
pop
xor
push
les
xor
daa
adcb
sub
sub
dec
fnsave
cmpsl
mov
dec
lcall
jb
pop
lods
pop
xor
jne
out
xchg
popa
ja
mov
fistps
cs
hlt
jns
add
add
clc
cmp
lahf
shlb
out
xchg
rcl
in
sub
mov
dec
fistps
inc
jle
shlb
mov
mov
xchg
sub
xorl
or
push
mov
sbb
fiaddl
jae
jns
dec
loope
lods
cld
push
jnp
inc
sub
cmc
xchg
int
cmp
jne
jecxz
xchg
cmp
leave
repz
or
and
in
clc
cwtl
adc
lret
in
dec
jmp
xor
imul
adc
cmc
cmp
push
movl
adc
mov
and
sarb
mov
cmpsl
je
push
fiaddl
push
enter
imul
adc
fldt
cmc
rcl
and
pop
jo
dec
into
xchg
fcom
xchg
arpl
ljmp
jbe
xchg
popf
cmpsb
pop
jb
fcom
cmp
jmp
lds
add
lock
inc
dec
or
lea
inc
into
adc
and
out
push
jl
addl
pop
mov
repz
adc
popa
adc
cmp
fisttpll
movb
pop
ljmp
sti
pop
movsl
jle
into
neg
aad
jno
xor
lcall
sub
aaa
loope
cmpb
mov
jecxz
cmp
test
mov
es
mov
push
js
repz
ds
outsl
je
inc
jmp
cmpsb
fisubs
jno
xchg
xor
sub
jo
lods
add
inc
les
or
jbe
and
jae
or
inc
aad
stc
dec
cmpsl
mov
out
jbe
cmp
call
in
mov
cmp
mov
shl
andl
add
ds
out
enter
xor
and
mov
bound
and
sar
int
jns
mov
sbb
pop
adc
adc
js
pop
xchg
jo
fs
cmp
popf
flds
jae
arpl
inc
test
pop
addb
call
xchg
sub
clc
jg
sti
jne
divl
inc
insb
sbb
jno
push
mov
mov
xor
mov
movl
mov
sub
repnz
push
sti
pop
cmp
sbb
xchg
pop
push
sub
shrb
test
mov
jo
mov
test
cmp
and
jbe
rorl
ljmp
out
mov
nop
orb
outsl
jl
jno
insl
xchg
mov
inc
cmp
pop
in
jno
and
jle
inc
dec
ret
sub
sub
fidivl
aas
call
andl
mov
icebp
mov
sbb
mov
test
pop
fcoms
push
dec
inc
inc
xchg
mov
inc
insl
mov
daa
sarl
orb
adc
imul
dec
mov
inc
push
aad
sbb
sub
je
out
cld
insb
stos
das
inc
vpshufd
push
or
add
cmp
ds
add
add
mul
inc
lret
mov
xchg
xlat
movsl
and
adc
mov
outsl
jmp
push
jae
fidivs
scas
incl
xchg
mov
dec
fsubrl
push
into
stos
push
ja
ds
repnz
test
mov
cmpsl
push
sbb
jo
inc
mov
stc
and
popf
ror
repz
dec
push
cmpsl
xchg
pop
jae
mov
jbe
push
or
addb
xchg
ja
xor
xchg
cmp
push
adc
mov
cmp
xchg
imul
fadd
in
mov
mov
js
sti
aad
jns
addr16
into
sub
out
push
clc
xchg
mov
mov
and
or
mov
jmp
mov
jbe
shll
adc
nop
mov
sub
xchg
loope
aad
stc
lea
aaa
mov
cmpsb
jb
repz
jp
or
pcmpeqd
cmp
mov
adc
clc
imul
aaa
icebp
pop
pop
adc
fcom
cmp
cmp
leave
dec
mov
jae
xchg
cli
frstor
pushf
dec
cmp
lods
shr
or
fs
pop
push
dec
jecxz
outsl
lods
addr16
mov
pop
mov
sbb
icebp
lods
xchg
rcr
xchg
lea
in
xor
xchg
push
mov
leave
test
jp
cmpsb
push
shl
push
push
sbb
fadd
fisubrs
lret
sbb
fidivrl
mov
jne
adc
fsts
out
xor
pop
pusha
jo
ss
std
test
add
cwtl
outsl
add
dec
sti
inc
int3
xor
dec
push
out
pop
pop
cmc
mov
dec
cmp
push
add
test
xchg
add
jb
jbe
cli
aas
popf
mov
xchg
sbb
xlat
or
or
push
xchg
int
jno
gs
test
mov
test
adc
lret
aas
not
push
and
jae
sub
mov
bswap
lods
aad
gs
je
out
gs
sarl
popf
lret
cmp
sbb
mulb
or
mov
dec
or
xor
lods
pop
jmp
icebp
xchg
jno
jb
movsl
sbb
adc
mov
or
mov
and
dec
push
xchg
sub
jae
dec
insl
je
fsubr
and
das
mov
and
mov
mov
inc
mov
dec
xchg
xor
inc
cli
inc
pop
dec
sbb
popa
or
xchg
xchg
into
push
ljmp
and
test
pop
icebp
and
mull
or
sbb
sbb
sub
mov
out
inc
test
fnstcw
movsl
hlt
sbb
mov
insb
xchg
in
and
test
cmp
push
std
xchg
cmc
pop
in
test
push
sub
and
push
das
mov
insl
aaa
mov
xchg
sub
dec
insb
mov
and
jb
stos
in
push
arpl
fpatan
cmc
aam
call
add
jl
mov
add
adcl
cltd
aam
mov
into
cld
and
test
inc
dec
jo
mov
jle
popa
inc
add
nop
int
out
sahf
xor
into
lea
sbb
loop
imulb
xor
add
adc
in
pop
mov
js
inc
out
scas
shrl
daa
std
and
ret
mov
incl
jbe
sub
xchg
out
cmp
mov
sub
push
ss
adc
push
fs
push
scas
pop
jmp
rcrl
jle
in
mov
movsbl
inc
sahf
stc
push
call
nop
data16
sbb
push
inc
addr16
add
mov
popa
sarl
adc
leave
push
mov
dec
pop
xchg
add
xor
jbe
sbb
shr
xchg
ja
mov
pop
in
nop
jo
mov
push
cmp
dec
loop
lock
jnp
pop
rcrl
push
test
sti
mov
sarl
or
jp
leave
xchg
jge
fs
outsb
push
inc
or
leave
clc
fcmovbe
mov
negb
pop
push
lahf
cmp
jge
or
and
dec
cmp
sbb
adcb
and
push
out
mov
push
xchg
cmp
xor
inc
mul
xchg
pop
adc
insl
rorl
addr16
jo
jno
fcoml
dec
pop
push
xchg
mov
sbb
jge
decb
pusha
aaa
mov
add
sbb
pop
push
cwtl
adc
ret
pop
into
xor
dec
je
fisubrs
mov
push
std
add
push
pavgb
xor
popl
test
arpl
jno
pop
mov
push
jl
scas
addr16
stc
mov
push
scas
loopne
fisttps
in
mov
lods
out
and
dec
in
aad
rclb
inc
sbb
dec
mov
sti
popf
pop
in
inc
adc
rcl
push
mov
call
pop
pop
jns
in
data16
or
fwait
das
adc
push
aas
or
cmp
xchg
in
xor
fstpt
jle
ret
pop
dec
outsl
sub
lea
rorb
mov
or
sbb
repnz
push
jae
or
mov
jae
fwait
or
jno
mov
leave
adc
and
enter
shll
sub
or
icebp
fwait
sub
test
push
adc
mov
aaa
sbb
or
sub
push
mov
nop
dec
and
push
pop
jl
push
sar
imul
sub
cmp
and
loopne
mov
inc
shlb
jb
nop
jmp
je
enter
push
push
enter
xor
sbb
mov
cmp
or
lcall
addl
or
inc
sti
mov
cmp
sar
mov
pop
dec
stos
fwait
mov
jns
stc
shl
in
add
cwtl
loope
ds
xorl
jp
jno
jns
popa
push
jnp
mov
dec
outsl
gs
pop
mov
mov
inc
push
inc
sbb
and
movsl
cld
mov
pop
fisubrs
std
inc
adc
mov
or
outsl
or
wrmsr
inc
ljmp
pop
push
bound
ret
adc
sbb
pop
push
pusha
sub
inc
mov
cld
sbb
flds
pop
test
mov
pop
jg
lret
outsb
mov
sub
loop
inc
inc
mov
and
hlt
or
mov
jae
mov
push
sbb
lock
lcall
data16
push
shrb
or
cmc
inc
lods
push
push
hlt
pop
mov
dec
pop
jmp
fnsave
sbb
aas
inc
fisttps
push
pop
shrl
or
sub
sub
shrb
push
lahf
sub
sub
dec
adc
orl
push
lods
loopne
dec
lret
aam
push
pop
cmpsb
xchg
rcrb
xor
mov
insl
into
or
mov
bound
test
pop
xchg
add
jmp
push
lret
fwait
cmp
scas
cmpl
icebp
das
sub
in
xchg
clc
jbe
rorl
mov
jae
mov
pop
sub
sbb
jne
mov
in
dec
push
jmp
pop
insb
in
or
xor
in
xchg
push
mov
adc
sbb
lcall
test
pop
adc
mov
sub
dec
js
jnp
lret
popa
and
shl
in
aam
cmp
movsb
and
fidivrl
shl
xor
or
insb
test
loope
movsb
ffree
es
xchg
fs
lock
std
pop
rcrl
outsl
fcomi
sbb
data16
es
inc
leave
stos
mov
xchg
into
pushf
push
out
ljmp
cmpsl
sbbb
mov
cmp
fs
add
stos
sub
sub
or
inc
mov
mov
adc
daa
cmp
outsl
cmpl
xchg
pop
inc
pop
js
ljmp
pop
jl
dec
mov
js
jns
mov
xor
jno
xchg
out
xchg
xor
sbb
rcl
popa
pop
cmp
pop
add
leave
pusha
out
pop
pop
cmpsl
pop
es
jno
mov
stos
cld
outsl
xchg
push
ret
test
inc
out
push
mov
inc
xchg
fucomi
push
xor
and
push
push
inc
pop
es
out
cld
mov
test
and
stc
xchg
jne
add
jb
inc
int
push
lea
out
pop
stc
sub
push
dec
cld
add
adc
jns
sbb
push
sbb
fcomps
fnstsw
cmp
aas
pop
inc
push
xchg
out
xlat
fidivl
test
mov
loope
pushf
je
int
rclb
add
pusha
jo
fnstenv
push
mov
shll
dec
and
cs
out
cltd
pop
js
out
push
fsubrs
xchg
xchg
mov
mov
inc
and
stc
dec
jg
and
and
and
call
mov
lods
dec
fwait
inc
cmp
shrb
mov
add
sbb
push
orl
cltd
and
jno
mov
aad
xor
jne
inc
loopne
test
arpl
test
sahf
add
data16
lahf
adc
aaa
push
imul
inc
out
inc
xorb
xchg
fisubrs
mov
xchg
mov
fisubrs
in
fisttpl
arpl
daa
test
pop
mov
and
mov
fwait
mov
addr16
mov
rcl
out
mov
movl
ss
sub
adc
cwtl
mov
lods
xchg
dec
and
mov
lds
xchg
scas
clc
xor
cmpsl
in
xchg
jmp
push
pop
cmp
adc
jae
fwait
popf
cltd
lods
mov
shr
out
ljmp
clc
cwtl
xchg
pop
stc
xchg
mov
push
wbinvd
or
push
and
cmp
clc
int
or
dec
fs
xchg
and
sub
fs
mov
daa
call
jbe
xor
inc
pop
xor
mov
xorb
js
into
add
sbb
stc
xchg
xchg
dec
jg
inc
xchg
test
mulb
popf
mov
push
into
lods
jle
pop
cmpsl
sarb
je
negb
and
test
push
cwtl
lods
in
je
xchg
dec
arpl
jg
rcrl
aam
push
mov
fsts
adcb
push
repz
mov
cltd
lds
adc
or
push
das
enter
test
cmpsb
das
mov
popf
jmp
add
int
aam
stos
addb
insb
mov
add
scas
jmp
lods
xor
cmpsl
jmp
pop
aas
aam
sbb
mov
push
push
sbb
mov
incb
sub
scas
pushf
mov
stos
daa
dec
icebp
into
nop
enter
sbb
ds
incl
in
movb
jg
mov
adc
cltd
daa
pusha
clc
lahf
stc
leave
or
into
mov
movsl
sbb
ret
sbb
push
xor
mov
stos
bound
std
and
jns
add
xlat
mov
add
popa
scas
jno
push
inc
pop
jno
out
mov
lods
jmp
push
mov
loope
jmp
sti
outsl
addr16
cld
rcl
mov
jae
mov
inc
dec
ja
mov
jns
int
iret
fst
jno
dec
sahf
aam
xchg
repnz
adc
adc
lock
cmp
pusha
scas
repnz
stos
push
add
aad
cmpsl
xor
push
or
lea
inc
xor
sbb
add
sub
jle
lret
pop
xor
popa
dec
repz
das
inc
xchg
mov
sti
mov
addl
push
inc
stos
mov
push
ficoml
xchg
adc
ds
xchg
jae
mov
loop
gs
scas
adc
mov
or
out
and
icebp
push
xor
push
dec
scas
idivb
jmp
insl
dec
cmp
stos
dec
push
or
es
add
in
loop
xor
pushl
or
je
fbstp
mov
cli
jmp
mov
and
fdivl
push
cs
leave
mov
mov
sbb
jns
inc
sbb
mov
push
pop
push
in
insb
add
jno
stos
sahf
imul
adc
mov
rclb
lcall
xchg
push
dec
jp
lret
xchg
popf
or
ficompl
jmp
sbb
pop
cmpsl
dec
js
xchg
shrb
cmp
add
stos
xchg
jp
iret
pop
cmp
loope
jno
sub
adc
xchg
adc
rclb
sub
add
cmp
pop
mov
addr16
inc
cwtl
shll
ljmp
mov
aam
fcmovb
mov
imul
adc
and
lcall
add
xchg
add
inc
mov
pop
aas
sub
mov
inc
std
mov
outsl
es
test
hlt
pop
push
jae
daa
fs
cmp
daa
and
loopne
fdivrl
dec
lea
inc
jo
mov
xchg
es
subl
add
xchg
or
enter
stc
push
cli
cltd
adc
mov
sbb
sbb
mov
gs
cmc
mov
xor
addr16
rol
inc
repz
imul
test
pop
inc
fisttpll
inc
in
in
push
ljmp
shl
sahf
aad
mov
cmp
sbb
insb
sti
mov
inc
aam
icebp
fwait
test
cmp
mov
int
fcoml
add
imul
add
xor
out
rcr
out
ret
dec
nop
dec
rcrl
imul
pop
cs
pop
es
sbb
add
les
in
mov
sahf
shlb
popf
dec
mov
mov
pop
adc
pop
sub
pop
sbb
and
sub
cmpl
sub
loopne
or
cmpsl
movsb
jns
mov
repz
mov
jl
jl
xor
dec
rcll
jmp
mov
shrl
jb
jae
adc
cmp
repz
popa
push
adc
pop
mull
lods
inc
cmp
cltd
fists
pushf
mov
negl
je
or
lods
out
cs
repnz
inc
add
xor
cmc
fisubrs
lret
xor
push
popf
lea
sbb
xorl
pop
scas
jb,pn
mov
cmpsl
imul
xchg
jns
stc
dec
sbb
mov
cmp
fnstenv
cmp
push
rcr
pop
sub
xchg
add
lret
enter
call
test
roll
push
cli
inc
in
xor
jg
out
push
jns
lods
mov
push
jo
popf
and
dec
shll
pop
sub
repnz
jns
addr16
push
in
sbb
negl
mov
ja
repnz
mov
rcrb
pop
subl
sbb
scas
stos
cltd
jae
das
icebp
lret
std
int
mov
call
lcall
inc
cmp
sbb
aas
jae
mov
mov
std
roll
add
add
cld
iret
adc
shl
std
and
cmovg
cs
inc
fdivr
fwait
aad
lret
shl
icebp
sub
outsl
jns
pop
aaa
test
repz
or
scas
cmp
adc
stc
xor
scas
dec
pusha
dec
enter
push
ficomps
out
pop
push
les
outsl
lds
mov
in
mov
fwait
pop
movsb
and
mov
test
jmp
pop
orb
adc
cld
rol
mov
fmulp
or
inc
push
scas
pop
rcrl
leave
shlb
adc
out
sbb
sbb
xor
aam
stos
sub
fldl
sahf
icebp
mov
dec
mov
aad
je
push
pop
sub
xchg
inc
mov
adc
fildll
push
mov
mov
cmpb
test
push
outsb
sbb
cs
stos
adc
inc
dec
push
adc
jno
xchg
stc
jmp
aam
popa
ret
stc
roll
sub
xchg
pop
lods
test
xchg
aaa
test
cmpsl
inc
xor
mov
popa
int3
xchg
int3
movsl
pop
cmp
dec
adc
pop
loopne
sbb
inc
into
mov
and
popa
scas
adc
es
dec
das
sub
jno
into
pop
add
lret
lods
inc
jg
jno
cmovae
mov
aas
insb
mov
inc
jbe
add
mov
bound
cmp
les
sbb
ret
fwait
cltd
sti
call
mov
mov
imul
fcmovnbe
insl
or
jnp
push
push
inc
fcompl
outsl
xorb
clc
jbe
loop
xor
hlt
pop
cmp
stos
int
xchg
push
imul
adc
xor
xchg
xor
and
xchg
pop
ss
scas
dec
mov
pop
inc
mov
cwtl
mov
faddl
out
stos
in
stos
shl
ds
addr16
inc
js
pop
fbstp
sbb
or
daa
outsl
jne
jo
aas
clc
add
or
push
std
das
and
xchg
movsb
lahf
add
outsl
rol
jae
orb
and
xchg
das
xor
sti
scas
lock
dec
mov
fstpt
fildll
sub
std
in
loope
lods
repz
and
leave
sar
xchg
xchg
sbb
dec
push
push
jo
pop
xchg
fdivrs
mov
push
daa
cmp
sbb
ret
pop
call
ja
sbb
xor
pusha
push
inc
cmpsb
iret
sub
pusha
dec
lret
insb
arpl
mov
sbb
mov
dec
jo
loop
pop
dec
add
sti
test
adc
mov
dec
ficoms
xchg
rclb
lock
add
fwait
mov
push
and
dec
fdivs
adc
test
jge
fbld
sti
icebp
nop
sbb
rcrl
adc
adc
test
inc
in
sub
pop
imul
inc
pop
mov
mov
stc
out
ret
xchg
mov
xchg
mov
xor
dec
dec
push
pusha
cmp
fisttpl
mov
adc
and
fnsave
xchg
pushf
mov
xor
mov
xchg
aam
mov
adc
insl
daa
mov
in
pop
xorl
ret
movsl
mov
pop
imul
jp
testl
lret
mov
xor
jl
pop
jo
into
cli
and
imull
mov
xor
stos
xor
adc
icebp
scas
cld
sbb
lea
test
imul
test
xchg
cmpsb
mov
popf
lahf
xor
daa
and
test
push
jae
inc
imul
or
pop
sar
sahf
shrb
cmpsl
cmp
or
xchg
out
mov
bound
loopne
adc
in
les
out
insb
test
pop
dec
sbb
std
xchg
lret
sub
xchg
lret
idiv
cmp
in
mov
test
push
mov
mov
ds
das
lds
pop
rcrl
mov
mov
jno
cltd
test
jg
xchg
bound
sub
jb
dec
pop
adc
push
and
dec
rorb
gs
addr16
in
in
and
addr16
jns
cmpsb
or
xchg
cmpsl
mov
mov
push
js
jg
xchg
dec
popf
stc
cltd
jbe
pop
test
pop
roll
stc
jne
xchg
pop
mov
mov
pop
les
inc
cmpsl
aaa
mov
sti
pop
jl
dec
les
stos
in
adc
sarl
dec
and
dec
mov
fdiv
std
test
jl
xchg
in
push
and
int
mov
lea
movsl
shl
sub
lahf
mov
lea
cltd
jne
xchg
jns
test
xchg
fs
add
or
fcmovne
inc
stos
adc
or
pushf
mov
xor
lret
push
lock
sbb
dec
je
mov
adc
and
sbb
pop
dec
xlat
dec
enter
aam
pop
jge
xor
cmp
in
test
push
in
push
add
dec
sub
or
mov
fstps
sti
mov
jns
repz
xchg
imul
mov
push
inc
fistps
cmp
sbb
ja
fisttpl
scas
rcl
sub
das
jmp
adc
out
sub
mov
lret
cmpsl
out
push
inc
scas
push
and
ret
and
cmpsb
pop
inc
imul
or
test
pop
out
and
iret
and
sub
stc
dec
or
add
sub
fildl
dec
mov
and
dec
les
or
and
push
add
pushf
mov
fidivrs
pop
pop
aad
jbe
ret
mov
add
aas
outsl
adc
xchg
xchg
mov
stc
leave
xchg
cmp
lret
movsl
xor
cmpl
jno
inc
mov
inc
aad
enter
add
mov
fcoml
lfs
call
gs
xchg
dec
sbb
cmp
imul
aam
aas
jns
jge
in
repz
and
cltd
repnz
jnp
mov
jne
out
dec
test
sbb
xchg
adc
outsl
xchg
adc
in
fmul
stc
popf
adc
inc
xchg
into
jo
pop
mov
xchg
push
cli
add
sarb
std
int
jnp
mov
scas
mov
and
jnp
push
adc
push
iret
insl
icebp
repz
mov
insl
int
lods
xchg
adc
push
push
push
push
push
scas
fiaddl
sbb
mov
int3
mov
jg
leave
decb
xchg
leave
movsb
pop
and
jmp
sahf
xor
inc
clc
cld
dec
xor
aam
cmpb
pop
popa
mov
mov
mov
lock
mov
and
or
icebp
mov
xchg
dec
pop
out
xchg
aas
xlat
inc
sub
insb
in
sub
imul
sub
pop
fidivrs
inc
leave
mov
sbb
shlb
pop
outsb
xor
stos
mov
out
gs
ja
xchg
ljmp
lahf
scas
imul
cmc
pop
cli
mov
push
orl
inc
pusha
pop
movsb
push
cld
xor
sahf
sbb
jg
xchg
push
subb
lret
mov
rolb
or
inc
lock
fwait
mov
dec
int
inc
or
stos
inc
std
divl
dec
jne
andb
xchg
add
or
mov
daa
pusha
mov
sub
ret
jno
xchg
xchg
mov
jns
add
arpl
pop
mov
sbb
jo
jbe
enter
int
out
cmp
inc
sub
ss
push
subl
pop
push
sbbb
push
cmp
fwait
pusha
mov
xor
push
mov
ficoms
mov
sbb
ret
je
into
xor
pusha
es
fwait
in
and
mov
pop
negb
sub
sbb
adc
std
xor
clc
pop
test
movsb
jno
imul
jmp
jg
sub
in
or
popa
cli
pop
or
inc
push
int
dec
mov
lret
dec
lds
jle
inc
hlt
dec
in
mov
jae
pop
xchg
adc
jl
jne
mov
pop
cmp
aad
shl
stos
adc
fstps
or
adc
call
add
std
jno
lcall
cmpsb
popf
sbb
pushl
call
stos
cmpsl
lds
addb
add
cmpsl
fstpt
sub
cmc
adcl
jnp
shl
das
pop
add
push
mov
cld
sbb
mov
test
cmp
lods
xor
dec
dec
dec
mov
movsl
lods
xor
data16
int3
nop
jmp
dec
xchg
sbb
pop
addb
pusha
lret
mov
out
ret
ficoml
jnp
jnp
andl
push
rcrl
mov
mov
and
dec
lock
sbb
int
fcmove
cltd
and
push
arpl
jne
xlat
add
loop
adc
pop
loope
jnp
inc
cs
aaa
mov
das
lea
mov
into
nop
and
mov
aaa
ficoms
fsubrl
hlt
mov
in
inc
cmc
push
or
test
adc
sbb
fldcw
push
inc
imul
jo
fdivrs
xchg
jle
xchg
push
into
and
cmp
xor
aad
lock
fisubrs
adc
repnz
enter
and
mov
inc
xchg
mov
push
popa
xor
sub
sub
repnz
lcall
mov
push
push
jo
dec
jo
inc
fimull
mov
mov
imul
repz
and
fisttps
stc
sti
shrb
push
xor
bound
cmp
mov
shl
jge
adc
dec
repnz
fstl
sbb
dec
lds
sarb
push
dec
les
fs
sbb
push
aad
sbb
testb
jle
lods
lret
mov
dec
outsl
mov
and
mov
or
mov
inc
jle
jnp
leave
inc
mov
jg
les
add
pop
jg
or
jmp
idivb
sarl
mov
mov
sub
pop
jae
xor
icebp
test
push
jbe
fucomi
into
sahf
fstpl
movb
mov
inc
addr16
add
push
or
rorb
sub
sbb
popf
push
sbb
inc
in
add
pop
xchg
jmp
mov
das
sub
arpl
add
push
pop
insb
push
xchg
push
or
add
pop
sbb
pop
push
jmp
cmp
fwait
and
add
nopl
add
mov
sub
mov
clc
jne
adc
std
jb
inc
adcb
jge
add
inc
fistps
repz
cmp
push
adc
add
jns
push
scas
gs
in
repz
les
adc
mov
inc
jg
and
mov
pusha
xchg
roll
imul
mov
lret
jbe
outsb
dec
xchg
inc
lods
push
mov
scas
adc
lret
sub
cmp
stos
out
xchg
sub
adc
sub
xor
adc
jp
lret
cld
in
or
movsl
shlb
hlt
pop
xor
mov
pop
int
pusha
loop
jmp
enter
mov
cltd
xchg
mov
mov
lret
fistpll
sbb
lds
mov
insb
sbb
icebp
or
les
imul
rcrl
pop
in
lret
jl
cwtl
xor
jge
ret
lahf
sbbl
rcll
cmpsl
cmp
pop
rcrl
rorl
cmpsl
or
aas
jbe
jbe
xchg
cmpsb
mov
push
mov
dec
xor
mov
sarl
es
or
mov
leave
and
add
iret
orl
subb
dec
and
xchg
mov
rcr
int3
mov
pop
push
mov
and
imul
inc
fildll
in
cmp
inc
mov
pop
or
pop
fdivrp
push
cmpsb
scas
push
stc
adc
js
pop
dec
push
jno
inc
int3
enter
out
jp
xor
adc
xor
sub
or
inc
bound
cld
test
inc
loop
sbb
dec
pop
addr16
fwait
mov
shrb
cmpsl
mov
loope
xchg
mov
es
out
jmp
sbb
jo
jp
inc
nop
nop
stos
jae,pt
in
xchg
mov
push
inc
adc
or
xor
push
push
xchg
call
insb
and
das
add
xchg
jmp
fidivrs
push
mov
fcmovb
dec
movsl
std
jl
dec
ja
pop
adc
push
inc
lea
lock
dec
mov
adc
rorb
outsl
inc
mov
xor
roll
sbb
lock
arpl
dec
push
jl
fsubl
inc
pushf
ljmp
cmp
mov
jbe
jns
adc
decl
sbbl
mov
pop
cltd
and
adc
add
mov
pop
dec
cwtl
addl
mov
and
aam
fidivrs
xlat
mov
shll
push
addr16
dec
or
mov
enter
insb
cmp
mov
pusha
jl
pop
adc
inc
sbb
popf
push
push
and
cli
sub
nop
cld
repz
cmp
and
aas
cli
mov
popf
mov
jnp
dec
add
jmp
or
xchg
adc
xchg
cmp
push
sbb
mov
insb
movsl
push
xchg
mov
fisubl
mov
sub
std
mov
adc
push
fistl
imul
pop
dec
lods
fs
into
mulps
and
cmp
nop
adcb
fbld
fdivrs
or
popf
and
push
in
xor
lods
inc
and
push
xchg
or
mov
mov
jp
test
mov
pushf
cmp
mov
jnp
mov
or
sub
jg
cmp
jl
enter
inc
xchg
pop
test
bound
fadds
out
mov
testb
in
lds
pusha
sar
sbb
sbb
adc
popa
jns
inc
mov
faddl
push
cltd
add
fiadds
jmp
cmc
xchg
sti
jg
lcall
jb
or
movsl
gs
jl
mov
adc
mov
loop
mov
mov
cmp
dec
inc
mov
xchg
shrb
out
add
pushf
lods
cli
or
movsb
push
hlt
das
push
notl
fsubr
xchg
in
and
push
sahf
inc
dec
test
flds
test
into
into
repnz
pop
mov
fimuls
sub
jmp
icebp
arpl
dec
push
aad
inc
call
inc
stos
dec
lret
cmovg
out
test
lock
out
add
sub
adc
mov
in
enter
iret
aaa
int3
pop
bt
ficoml
out
mov
mov
sbb
add
sub
adc
mov
sbb
push
push
test
lea
or
dec
jg
andl
stos
out
mov
add
and
xchg
mov
xchg
dec
sub
fmull
lds
into
aaa
leave
hlt
add
jns
shrl
mov
pop
dec
pop
or
push
pop
sti
lds
push
xchg
andb
icebp
jp
lock
cmp
adc
ja
jp
mov
lock
aam
mov
pusha
les
xchg
out
test
mov
xchg
stos
std
inc
push
sar
lods
in
les
test
pop
in
cmp
dec
aam
scas
fdivrs
sub
cmp
push
insl
aas
aad
gs
inc
push
or
in
push
xlat
clc
push
mov
sub
sub
aam
and
popf
pop
adc
stos
jmp
es
and
js
stos
pop
repz
aas
test
xchg
lods
push
push
aaa
add
mov
ret
fldt
lcall
fidivrl
imul
popf
rclb
add
dec
sub
repnz
cmc
or
mov
mov
sub
inc
rorl
and
and
pushf
movsl
les
shll
rclb
loope
xor
sbb
es
dec
sub
cmpsl
lods
inc
cltd
jge,pn
mov
negb
pop
cwtl
imul
outsb
xchg
ljmp
push
mov
xor
sbb
jge
dec
scas
insl
xchg
roll
jg
jecxz
mov
jno
dec
mov
outsl
xor
pop
inc
mov
mov
jbe
test
push
sti
sub
pop
stos
sbb
add
sbb
sarl
test
and
and
mov
popf
aam
mov
std
arpl
sub
sbb
xchg
mov
pop
sbbb
ret
xchg
enter
or
outsl
and
idivl
fists
xchg
mov
shlb
xor
mov
gs
or
shrb
and
loopne
andb
ret
or
call
push
loop
push
and
data16
cmp
or
in
jmp
call
mov
fisttpll
into
mov
sbb
cli
fildll
test
mov
cmpsb
jle
test
adc
mov
outsl
cmpsb
int3
aaa
repnz
xor
and
push
lods
dec
xchg
imul
push
xor
push
out
sub
enter
imul
jp
fildll
mov
push
insl
sbb
and
cwtl
rorb
sbb
sbb
clc
lock
inc
mov
dec
aad
arpl
mov
inc
mov
clc
cs
sarl
cmp
mov
mov
fisttpll
dec
push
push
lods
xor
enter
mov
stc
addr16
push
inc
outsl
sub
xor
les
dec
cmp
add
pusha
pop
lcall
lock
lds
loopne
pop
push
pop
jg
paddq
dec
xchg
mov
clc
pop
jb
sbb
adc
lea
inc
std
cwtl
push
scas
sbbl
push
add
je
shrl
jmp
rorb
adc
dec
fsts
lret
mov
popf
pushf
jae
xor
sub
mov
je
pop
sub
mov
les
cmpsl
mov
shr
aaa
divl
xor
inc
pop
mov
daa
outsl
rcrl
daa
jno
xchg
imul
pop
pop
shrl
mov
rcl
ljmp
xchg
xor
test
mov
lock
out
shrb
sub
cmpsl
jl
push
frstor
lock
add
push
addr16
inc
jl
dec
xor
pop
dec
loopne
sub
pop
pop
jbe
data16
data16
loope
mov
xor
xor
mov
inc
xchg
arpl
xlat
adcl
cs
enter
cltd
push
cmp
xor
and
arpl
sub
mov
add
clc
or
push
out
jno
int
std
test
mov
adc
sub
pop
leave
rcll
test
hlt
dec
dec
fcomps
sbb
lcall
mov
fldcw
into
cmp
xlat
push
add
adc
sub
add
addb
aam
sbb
lds
sub
xor
jl
add
xorl
into
xchg
add
das
imul
push
lret
outsb
mov
jmp
jbe
or
lea
mov
std
imull
inc
cmp
sbb
sbb
leave
sbb
jbe
pop
loop
inc
or
rorb
movsl
lret
cmp
fadds
pop
push
xlat
lock
aad
xor
jns
pop
dec
xchg
inc
pushf
cmpsb
dec
pusha
jp
sub
xor
in
add
iret
int
push
movb
cmpsb
pop
mov
lods
shr
fildll
pop
cmp
and
ret
movsl
stc
rorb
cmpsb
icebp
pop
mov
into
paddusw
pop
mul
mov
and
xchg
cld
mov
jmp
lcall
mov
or
addr16
jl
mov
sbb
out
test
pop
xchg
clc
mov
decb
inc
pop
push
cmpsb
enter
scas
test
pop
sub
mov
cmpsl
sub
pop
repz
and
dec
dec
int3
sub
gs
sbbb
hlt
shrb
stc
mov
sbb
adc
test
lds
dec
aad
out
pop
ror
cmpsl
push
adc
push
rcr
ficoms
jo
xchg
adcl
sub
roll
sbb
xchg
test
pop
ss
clc
cmp
mov
dec
mov
pop
cmp
movsl
aam
sbb
movsb
inc
jmp
pop
push
jge
lahf
inc
or
mov
jl
xchg
mov
sbb
movnti
mov
loop
push
pop
les
pop
or
mov
outsl
xor
sub
or
cmpsb
pop
loopne
dec
rsqrtps
xor
xchg
pop
inc
push
leave
dec
sbb
xlat
adc
or
int3
sub
xchg
out
and
ret
hlt
dec
insb
dec
jb
push
mov
push
inc
push
adc
das
cmc
mov
jbe
dec
adc
pop
fstpl
in
sar
filds
pop
test
out
pop
fs
jb
sbb
mov
pushf
clc
jno
test
rcr
rclb
ja
jmp
jg
std
and
int3
pusha
sbb
jl
push
fbstp
inc
adc
aad
cmc
xchg
popa
mov
adc
jns
push
jp
rol
insl
adc
pop
popa
jl
rolb
int
out
cmpsl
dec
jmp
frstor
fstps
js
dec
pop
dec
mov
cld
jne
cs
lods
mov
jmp
dec
pop
adc
xchg
scas
scas
data16
inc
ss
mov
or
mov
lods
fadd
and
dec
lds
idiv
mov
push
inc
cmpsl
arpl
sti
std
and
inc
xor
rorb
shl
and
shll
mov
out
mov
xor
mov
push
cs
jne
push
xchg
cld
rorl
dec
pop
jl
movsl
and
clc
outsl
test
jle
inc
inc
out
in
lret
pop
jno
data16
testb
jle
pushf
lret
imul
ret
or
es
jb
push
int3
sub
rorb
jns
in
and
mov
inc
adc
cmp
xchg
sub
std
and
leave
jno
scas
xor
test
rcrl
stos
xchg
out
sub
adcl
in
cmp
mov
lahf
lahf
cmp
xlat
dec
push
jo
cmp
or
out
loopne
lcall
or
push
mov
orb
insl
rolb
jnp
lret
test
in
mov
pop
stos
lret
in
xchg
jns
insl
xchg
and
push
dec
pop
fucomi
fcomps
pop
scas
mov
pusha
lahf
mov
inc
cmc
pop
daa
sub
loope
cmp
pop
rorl
fisubrs
pop
mov
leave
aam
pop
dec
add
or
stos
lds
xor
popa
mov
lahf
imul
xchg
stos
dec
lea
int3
fistl
clc
pop
daa
int3
adc
xor
pop
rcr
and
insl
dec
incl
adc
dec
scas
mov
loop
cs
cmp
icebp
push
call
icebp
inc
push
enter
shrb
sbb
jmp
cs
sbb
roll
loope
inc
xor
cvtdq2ps
cmpsb
or
popf
xchg
fdivs
mov
cmpsb
push
scas
mov
lds
daa
jmp
inc
and
or
in
jle
lods
aaa
or
xor
dec
or
pop
notl
dec
and
clc
or
xchg
ja
inc
adc
adc
cmpsl
or
enter
jnp
adcb
jge
loope
out
xchg
movb
iret
or
and
lret
cwtl
and
test
cmpsl
gs
leave
jmp
push
add
adc
push
mov
mov
fcoml
cltd
sub
fisubrs
call
mov
xchg
sbb
mov
in
cmp
fsubrp
aad
rcrb
pop
cli
popa
jl
test
mov
mov
cmpsb
leave
or
jne
mov
loope
xchg
pop
xchg
jle
mov
push
shlb
xchg
xlat
test
sub
cmp
rcrl
dec
and
fildll
fisubrl
sahf
pop
xor
push
and
jo
dec
xchg
ret
mov
pop
dec
xchg
add
cltd
jno
mov
dec
pop
fcomp
jp
mov
adc
aaa
fcoml
test
pop
imul
adc
mov
xchg
cli
shrl
mov
or
bswap
pushf
imul
leave
scas
repnz
sub
inc
or
inc
lds
popf
lds
ss
shlb
cmpsl
jb
imul
and
fwait
or
cmp
xchg
outsl
divb
add
push
or
dec
lret
xor
mov
push
stc
je
iret
pop
rcrl
das
aam
aam
popf
mov
dec
dec
dec
popf
push
lret
lcall
push
addr16
adc
daa
mov
add
pop
or
fwait
or
sarl
stc
sahf
mov
adc
jmp
es
mov
push
jge
add
pop
inc
ss
mov
in
scas
sub
fs
sarb
js
mov
mul
xchg
hlt
cmp
lret
push
pop
scas
and
cmp
ficomps
rcr
aad
idivl
scas
sbb
sti
rol
fwait
ror
ja
sahf
jge
pop
mov
cmp
lret
cmp
movsl
test
ret
adc
push
sbb
mull
testb
push
mov
dec
dec
imul
ret
test
or
sbb
add
xchg
scas
push
pop
xchg
addl
fistps
push
lahf
pop
push
shlb
mov
in
adc
je
fldenv
das
xchg
je
and
ljmp
stos
pop
mov
jo
push
cmp
inc
add
outsb
js
dec
cmp
cmp
cmp
out
sti
das
lock
push
pop
inc
jg
sahf
and
jo
test
sub
pop
test
mov
movsl
push
and
ret
push
int
cltd
insb
cli
std
addr16
jno
mov
mov
jg
js
push
dec
fdiv
cli
mov
imul
movsl
xor
xor
imul
std
inc
mov
in
jns
push
imul
adc
fidivs
bound
sub
fsubrs
sub
or
cmp
movsb
xor
lock
std
jns
adc
fnsave
test
xchg
mov
in
test
push
sub
in
test
lea
out
jg
jp
mov
out
cmc
sub
out
inc
pop
imul
dec
or
inc
or
adc
cld
iret
xchg
pop
push
cld
int
jo
aas
sub
lret
adcl
arpl
push
sub
and
jmp
icebp
jle
clc
jg
pop
fucom
rcrb
sarl
push
push
jl
jb
fildll
jmp
dec
and
mov
lock
dec
mov
in
jbe
test
cltd
push
cmpsl
outsb
out
xor
mov
xor
cld
push
and
xlat
add
sub
test
pop
testl
mov
jbe
mov
into
dec
xchg
in
pop
mov
mov
xchg
xor
xor
into
pop
movb
mov
aam
xor
addr16
lret
inc
inc
sub
leave
mov
mov
jp
dec
xchg
pop
or
or
lret
iret
lods
push
test
test
sbb
xchg
lahf
iret
and
mov
aaa
pop
sbb
push
inc
icebp
add
jle
rorl
adc
icebp
mov
push
push
xor
jb
cmp
pop
mov
push
out
cmp
shl
rcrb
cwtl
dec
adc
pop
aam
lret
test
mov
xor
cmp
mov
out
pop
roll
mov
add
aaa
xchg
decb
jbe
addr16
fnstsw
mov
loop
xlat
cmp
mov
jp
ss
pushf
repz
or
fucomip
pushl
inc
mov
jmp
pop
icebp
icebp
std
cmp
ds
cltd
test
sub
mov
xlat
xor
sbb
notl
cld
out
mov
nop
jo
and
test
push
push
push
push
cmp
inc
rep
mov
mov
mov
jo
mov
test
das
pushf
in
pusha
jne
pop
pop
mov
jno
pop
mov
fcompl
and
and
sbb
cli
xchg
out
jmp
adc
sub
push
fistps
cli
sub
xor
subb
cmp
or
inc
add
push
or
daa
ljmp
jnp
fadds
in
aas
cmp
out
inc
xor
daa
push
pusha
loop
loop
cwtl
push
push
aad
loopne
adc
loope
test
popa
xchg
fs
inc
jne
sbb
sub
cmp
mov
fxch
xor
movsl
adc
pop
clc
cmp
rorl
testb
xor
cli
mov
shll
dec
cmp
test
cmpsl
pop
mov
sarl
inc
sbbl
test
enter
fistpll
sbb
or
mov
push
out
push
xchg
ret
test
adc
adc
mov
xchg
push
push
mov
popf
rcr
not
cs
pop
xchg
repz
outsb
or
shlb
mov
mov
mov
loope
popf
shlb
mov
mov
cmpb
fstpl
pop
insl
bound
mov
cmpsl
out
mov
mov
imul
sub
mov
lret
xlat
movsl
fldt
sub
mov
sbb
pop
lock
mov
cmpsb
adc
dec
fildl
ret
mov
pop
insb
inc
stc
pop
rol
and
and
push
xlat
jo
mov
cmpl
pop
imul
push
jns
out
iret
cwtl
in
loop
aas
sub
xor
ret
les
xchg
test
cmpsb
lods
inc
or
jo
xor
stc
jae
mulb
clc
jmp
cmp
xorb
xchg
mov
aaa
fwait
add
inc
pusha
aas
outsb
or
das
mov
jns
repz
enter
pop
in
mov
lock
push
mov
inc
icebp
xor
fwait
push
jecxz
je
push
and
leave
and
imul
and
pop
mov
pop
inc
xchg
in
notb
inc
push
sarl
dec
mov
mov
cmpsl
cmpb
sub
cli
les
sahf
push
scas
mov
push
or
cmp
or
into
jl
mov
iret
push
std
add
mov
nop
je
inc
leave
mov
or
cmp
icebp
popf
subl
arpl
data16
lea
out
mov
test
and
sbb
pushf
sar
adc
mov
scas
cmp
lcall
push
enter
push
dec
imul
sub
inc
and
xor
mov
ja
test
jp
jae
xchg
pop
mov
sub
adc
cli
shlb
sbb
and
jge
fadd
mov
mov
xchg
push
jne
das
xor
jb
rcll
sbb
stc
popf
jg
mov
ret
jne
dec
sbb
mov
loop
xchg
mov
sbb
add
rolb
loopne
fisttps
sbb
std
sub
push
pop
and
cmp
loop
fisubrl
jg
push
leave
rclb
pop
jbe
add
inc
inc
jp
aas
lods
repz
xchg
xchg
push
xchg
cmpsb
fistpl
sub
aad
sarl
sbb
pop
jge
in
jnp
sbb
jecxz
pop
pop
mov
lahf
sahf
inc
addr16
or
into
sub
fcmovnu
lods
fsubrl
ror
inc
es
push
push
mov
shrl
in
xor
push
mov
jno
stos
cs
notb
mov
push
sahf
adc
jg
mov
mov
pop
cmc
enter
mov
and
cmc
rorb
lods
imul
inc
jp
or
sbb
adc
stos
inc
mov
orl
inc
jge
mov
inc
add
mov
xchg
popf
test
js
mov
hlt
ljmp
leave
mov
push
testb
pop
push
jle
jne
roll
inc
xchg
mov
xchg
lods
xchg
add
insb
adc
int
pop
ljmp
lret
pop
xor
dec
or
add
mov
orps
loop
ja
jge
mov
cmp
movsb
clc
xlat
rclb
fimuls
movq
call
push
sti
rclb
push
xchg
xlat
cmc
fmul
ss
es
pop
shrb
sarb
jo
cmc
push
cwtl
jne
xchg
sbb
cld
cli
xchg
dec
fbld
and
mov
jb
shl
or
repz
js
in
cltd
xor
push
rclb
leave
sbb
in
xlat
call
dec
jbe
lods
stc
mov
xor
and
test
not
cltd
xchg
movsl
sbb
lcall
adc
testl
inc
sub
cmpsl
dec
icebp
mov
xor
std
shrl
sarb
dec
das
andl
jle
enter
addr16
push
pop
dec
or
repz
or
push
xor
stos
and
and
xchg
adc
fistpl
mov
bound
and
mov
in
fisubrs
mov
sahf
sbb
jns
pop
jge
lds
pop
rcr
int
jecxz
cmc
in
sub
and
pop
xchg
sub
push
adc
imul
aam
push
push
stos
sbb
xor
mov
sbb
movsl
mov
cmp
repz
faddl
jl
jp
je
inc
popa
inc
in
jge
inc
adc
jecxz
iret
lea
jo
fucom
adc
leave
les
insb
pop
popf
or
aad
or
fsubl
cmp
int
or
inc
pop
adc
xchg
fs
test
inc
jns
xchg
inc
mov
xchg
inc
adc
ja
notb
inc
nop
jge
rcrl
scas
filds
insl
movl
stos
pop
cs
pushf
std
jo
in
mov
mov
shll
repz
rorb
cmpsb
xor
dec
or
jne
push
shrl
scas
pop
sbb
gs
add
cmp
xor
in
xchg
int
mov
shll
sbb
imul
leave
mov
stc
jmp
scas
jge
jg
std
insl
xor
ljmp
dec
int
out
push
xchg
xchg
loop
andb
cmpsb
or
pop
adc
imul
cli
lret
xor
mov
shrl
fldl
cmp
jne
mov
fisubrl
out
pop
in
or
jne
mov
cmp
out
pop
lahf
fistpll
popa
mov
shrb
jnp
scas
pop
aad
rorb
sub
push
aam
bound
sbb
into
scas
adc
out
mov
jne
mov
xchg
cmp
scas
inc
pop
xchg
jge
pop
popf
xchg
mov
mov
inc
sahf
cmpsb
popf
pusha
push
add
pop
adc
imul
inc
pop
adc
sbb
stc
or
mov
hlt
mov
out
add
imul
xchg
xor
push
jle
cmp
inc
inc
jae
cmp
insl
rcll
gs
gs
or
mov
aam
repz
xchg
xor
test
mov
fldenv
imul
pop
lea
xor
hlt
push
xchg
in
repz
xor
notl
push
mov
or
in
mov
das
mov
pop
stos
inc
jl
loopne
mov
dec
dec
mov
cmp
xor
clc
inc
push
stos
sti
movsb
jae
push
dec
sahf
or
sub
ss
stc
lods
fisubrs
sbb
daa
mov
stos
push
push
adc
inc
icebp
mov
jne
lods
popf
xchg
push
xchg
shr
mov
inc
in
push
sti
and
mul
jns
sub
adc
ljmp
xchg
out
inc
push
sub
push
xchg
stos
mov
fs
cmc
mov
or
jmp
outsb
push
dec
cmp
es
ja
jl
into
fistpl
mov
cli
loope
lods
stos
pshufw
out
outsl
add
xchg
rol
rorb
pop
inc
sub
mov
mov
cli
movsb
pop
mov
dec
out
push
fmull
inc
cmpsl
dec
sub
inc
push
cld
jo
mov
xchg
push
xchg
addl
lret
aad
scas
cmc
aad
popf
push
push
lea
pop
lcall
adc
jo
rcll
icebp
mov
mov
adc
lds
not
std
popa
and
ret
adc
mov
xor
movsl
ret
xor
out
mov
xchg
adc
xchg
test
notl
icebp
xchg
lods
xchg
arpl
sbb
push
or
fldpi
mov
hlt
addr16
insb
ret
outsb
pop
fxch
movsl
mov
jae
add
aas
stc
or
push
int3
jle
jmp
ret
cli
aaa
inc
lret
sbb
or
arpl
mov
or
pop
cld
lret
mov
mov
push
dec
cmc
mov
mov
jo
mov
inc
mov
sub
xchg
in
and
stos
pop
js
pop
fcoml
gs
adc
ds
xor
dec
fiaddl
flds
icebp
pop
rclb
mov
in
dec
and
aad
call
andl
xchg
and
mov
cmp
xchg
insl
push
dec
movsl
pop
xchg
and
movl
std
popf
dec
cmp
xor
pop
adc
inc
pop
bound
lcall
das
stc
repnz
dec
inc
mov
mov
lock
adc
push
jecxz
inc
enter
adc
int3
repnz
out
outsl
push
pop
lock
sbb
loop
push
pop
mov
lea
jmp
aad
mov
dec
scas
lahf
addr16
sbb
mov
je
mov
inc
pushf
in
jo
inc
sahf
push
icebp
jle
dec
sbb
xchg
ret
adc
inc
sbb
imul
mov
stos
scas
sahf
lods
mov
sub
dec
fs
xchg
adc
shlb
add
cmc
shll
fbstp
xlat
add
inc
xlat
mov
jo
popf
daa
sahf
cmpsl
ljmp
inc
push
gs
push
cmpsl
icebp
xchg
push
sbb
popa
test
inc
lret
push
pop
test
les
lods
scas
adc
fildll
clc
xor
adc
jmp
sub
jl
push
or
negb
lock
imul
inc
xor
dec
dec
and
jae
dec
fsts
xchg
imul
xlat
call
add
iret
test
incl
mov
sti
stc
or
lret
jle
jbe
das
ror
repnz
xor
in
loope
push
call
mov
inc
add
mov
mov
adc
jno
sub
mov
aad
mov
xor
jne
cmpsb
shlb
in
xchg
push
stos
mov
or
jl
popa
leave
add
gs
xor
cmp
mov
xor
jns
call
rcrb
jecxz
adc
aam
aad
lds
jb
jne
mov
mov
cmp
shll
scas
sbb
mov
xor
test
push
xorl
push
xchg
sbb
jl
mov
in
fwait
jno
and
jnp
sbb
pop
adc
pop
mov
aas
push
std
lock
push
adc
aaa
sbb
enter
out
out
mov
addr16
xlat
push
cmp
dec
dec
in
xchg
std
xchg
insb
into
sbb
xor
xchg
xor
aad
dec
in
shl
mov
cmpsl
or
js
dec
pop
test
sub
cmp
mov
ljmp
inc
clc
pop
repnz
adcb
push
insl
popf
icebp
pop
xchg
movsb
sub
in
stc
pop
int3
push
scas
loopne
cli
mov
pop
adc
pop
or
xor
xor
in
and
fidivs
shlb
loope
mov
fidivl
xchg
inc
addr16
pop
nop
imul
cmp
js
xchg
mov
jne
push
fdivs
or
dec
push
cmpsl
jl
xor
jb
inc
push
or
movsl
and
jns
pop
cld
fstpt
hlt
insb
aam
cmp
sti
dec
rcll
stos
mov
jbe
inc
jl
and
xchg
jg
rcrl
jl
add
xor
stos
icebp
xchg
leave
arpl
fs
mov
xchg
mov
pop
sub
sub
test
movsl
rcll
je
jecxz
add
and
popf
inc
xchg
popa
adc
mov
cmp
push
rcl
and
shll
rorl
popf
les
cld
xchg
aam
jae
aaa
jle
jp
fstpl
mov
mov
xor
aam
jl
test
out
scas
add
pop
rorb
xor
test
xor
sub
pushf
das
inc
in
outsl
ds
xor
xchg
pop
jo
jle
cmpsb
cltd
jbe
addr16
pusha
push
cmp
add
sarl
call
into
push
enter
or
sub
jg
cwtl
movl
lret
pop
movsb
adc
sbb
repz
aas
imul
shrl
add
test
addr16
insl
xor
xbegin
push
jae
mov
cmp
scas
or
lods
rorl
sbb
inc
imul
or
inc
jle
outsl
push
xlat
clc
jno
push
sub
test
fdivrs
nop
sarb
pop
cmp
inc
inc
adc
sub
lods
clc
stos
add
es
xchg
rorl
js
xchg
jo
out
aad
sub
cmc
adc
aam
dec
inc
mov
adc
sub
pop
inc
adc
sub
xchg
int
aam
gs
jbe
mov
mov
dec
jg
sbb
adc
adc
pop
ss
xchg
stc
jg
pop
aas
dec
outsb
inc
xor
push
xchg
pop
jno
mov
xchg
inc
cmc
fwait
add
cmp
fs
jecxz
fnstsw
push
jb
scas
mov
jmp
or
test
inc
popf
add
pop
or
pop
bound
out
sub
mov
out
loope
bnd
std
scas
pop
adc
les
mov
push
sbb
rcr
jl
in
fisttpl
int3
leave
lahf
shrl
test
dec
xor
push
hlt
aaa
fcmovu
out
rcrl
push
sahf
fisubs
mov
jge
mov
jg
aam
daa
movsb
movsb
and
pop
add
cwtl
push
std
sub
hlt
inc
loop
push
xchg
outsl
pop
repz
mov
mov
dec
xchg
mov
dec
mov
mov
push
out
adcb
push
push
rorb
ret
inc
bound
mov
scas
bnd
or
rolb
adc
iret
shll
jmp
test
or
in
adc
xor
dec
je
lret
out
mov
fs
mov
fucom
dec
pop
add
mov
inc
sbb
or
mov
jne
int3
mov
daa
incl
pop
push
testb
es
fs
and
hlt
in
xchg
outsb
push
mov
cmp
jge
xchg
sub
das
data16
xor
push
inc
jle
add
sbb
aaa
jmp
sub
pop
mov
popa
or
xchg
addr16
inc
test
push
adc
pop
pushf
jge
in
lods
fptan
inc
sub
mov
lods
add
data16
push
sbb
push
and
mov
daa
push
clc
adc
dec
xchg
jge
xor
jg
xor
sbb
cmpsl
cli
out
push
leave
int
add
mov
xchg
testl
adc
lock
loop
xor
sub
push
jbe
cltd
neg
fcom
sbb
xchg
adc
inc
rcl
jnp
sbbb
icebp
push
dec
shr
add
sbb
jnp
sar
sub
pop
inc
int
idivb
push
add
mov
push
es
imul
lea
sar
jno
jmp
addb
dec
jg
popf
cltd
mov
stos
pusha
mov
jecxz
xchg
mov
xor
adc
mov
arpl
mov
and
cmpsl
push
gs
push
les
inc
pushf
test
dec
test
mov
es
push
les
push
int3
xor
push
mov
xchg
xor
addr16
aad
xchg
aam
xchg
sahf
jle
and
pop
xchg
xlat
int3
inc
push
push
jecxz
xorl
mov
xor
cmpsb
xchg
addr16
addr16
cmp
out
call
mov
or
cmpsl
cld
jecxz
jb
pop
cli
addr16
aad
mov
ret
loopne
inc
mov
xchg
scas
nop
pop
scas
fisttpll
mov
xchg
loopne
lock
js
adc
jns
inc
pop
js
sub
pop
add
pusha
jl
cmpsl
fs
sub
shll
jo
and
ret
sti
sub
pop
push
sub
clc
lahf
dec
jnp
mov
jns
jo
add
aam
ret
push
xlat
sbb
push
scas
jg
jno
fimuls
sub
sub
lcall
ficompl
out
mov
lret
insl
cwtl
or
or
jmp
ficomps
cmpsl
les
mov
rcrl
xchg
aam
arpl
lods
adc
daa
mov
mov
in
adc
jb
adc
and
pop
dec
mov
inc
repnz
ret
push
es
movsb
xchg
sbb
clc
mov
movsl
aas
inc
mov
push
jno
movsl
sbb
adcl
imul
mov
ficomps
mov
fs
sub
xchg
dec
lret
ficoml
dec
loopne
jl
adc
push
adc
rcll
dec
mov
sbb
popf
les
mov
and
push
pop
xchg
pop
sbb
or
decb
pop
pop
pop
ss
jge
adc
jle
movsl
aaa
jge
faddl
fcom
push
rolb
ja
xchg
cmpxchg
test
xor
sub
xchg
jge
mov
jg
scas
jmp
fisttps
xlat
lahf
pop
stos
test
jl
bound
and
cli
mov
int
pop
xrelease
cmpsl
jmp
mov
adc
and
xchg
lret
mov
xchg
adc
popf
dec
shrl
rolb
outsb
int
adc
es
adc
es
cmp
add
push
xchg
sub
sbb
add
mov
jno
dec
jle
jne
mov
int
or
sbb
xorl
aam
nop
xchg
in
movsl
sbb
cld
or
gs
jmp
adc
mov
imul
stc
mov
jo
jb
adc
mov
in
mov
inc
pusha
mov
ror
sub
inc
sub
sbb
mov
cmp
pop
insl
xchg
jg
push
dec
jno
negb
jmp
pop
adc
pop
inc
int
idivb
rcll
dec
sub
or
cltd
push
aas
xchg
shlb
iret
jb
inc
add
dec
jg
popf
cltd
mov
in
imul
sbb
jne
aaa
pop
leave
mov
rorl
adc
jnp
adc
cmp
push
popf
popa
out
int3
outsl
xchg
xor
or
fbstp
sbb
out
sarb
sbb
mov
or
or
sbb
int
bound
in
jecxz
dec
mov
aad
bound
jmp
dec
pop
cld
jle
cmp
mov
push
cmp
inc
jns
sahf
mov
test
sahf
cmpsb
inc
sub
cmp
lds
ds
pop
popf
add
or
jg
sub
inc
add
xorb
mov
mov
ja
pop
sahf
cmpsb
cmp
pop
aaa
aam
dec
ficompl
lea
shll
lds
pop
leave
xchg
jno
mov
ret
dec
or
jno
aaa
jle
jne
mov
jno
test
insb
pop
popf
adc
cmp
jp
and
std
popa
pop
jl
add
jo
or
int
repnz
xor
push
js
shrl
xchg
sbb
in
cli
xlat
inc
popf
cmp
insl
arpl
jno
xchg
jno
aad
mov
cltd
cmp
and
jle
mov
inc
xchg
jns
dec
pop
ret
jb
cmp
fs
inc
cli
sbb
inc
xor
xchg
fwait
push
roll
push
mov
fildl
jmp
stc
ds
sbb
xchg
les
lret
imull
lret
insl
or
pop
mov
mov
mov
lahf
aas
jmp
clc
movsl
inc
sbb
jne
ret
in
jg
stos
notl
xchg
decb
lret
and
and
push
sbb
popa
mov
push
pusha
pop
int3
inc
pop
daa
rorb
mov
fildll
fidivrs
aas
mov
std
dec
scas
mov
xor
sahf
andb
adc
push
and
popa
xor
mov
lahf
cmp
jge
ds
mov
lds
imul
push
shll
jmp
jg
jmp
das
dec
add
shll
dec
shrb
pop
xor
mov
xor
ja
cmpsb
xchg
cmp
lret
jo
mov
mov
xchg
xchg
mov
inc
pop
sub
int3
inc
repnz
aam
adc
pop
daa
out
aam
pop
sbb
stos
repz
inc
imul
sub
mov
clc
in
loopne
ljmp
and
icebp
scas
hlt
add
pop
iret
cmp
jnp
ret
pop
pop
cmpsb
adc
jb
pop
sbb
inc
int
lcall
or
sbb
cmp
cli
lret
rclb
sbb
adcl
inc
ja
imul
cmp
pop
adc
imul
xchg
dec
adc
inc
mov
mov
jp
cmp
xor
cmp
insl
fists
push
add
dec
cmpsb
sub
clc
loopne
stos
lahf
inc
jno
adc
jno
addb
je
cmpsl
cmp
mov
les
leave
or
inc
clc
inc
sbb
incb
pop
inc
shl
sbb
xor
pusha
push
cmp
xor
pop
lret
push
cmp
pop
xor
mull
call
add
pop
xchg
scas
into
cmp
cmpsl
jl
sbb
subl
sub
sub
or
jns
sbb
and
sar
sbb
pusha
xorb
je
mov
stos
mov
das
iret
je
cmc
pop
rclb
adc
mov
rcr
mov
das
les
or
xchg
lret
lcall
push
out
rolb
or
and
pop
leave
fcoml
jle
std
push
or
gs
xchg
loopne
lods
aad
lret
or
push
pushf
push
push
imul
fstl
sub
add
mov
add
out
sbb
xor
sbb
adc
or
inc
sbb
cmp
push
push
inc
leave
and
fbstp
cli
sbb
loopne
or
adc
ja
inc
pop
or
cmpsl
aaa
or
leave
adc
fnstsw
adc
or
enter
daa
jne
jl
popa
inc
add
rolb
lods
mov
in
sbb
sbb
mov
add
shlb
jge
xor
cmpsl
aam
scas
mov
fwait
xchg
mov
int
jecxz
mov
sti
cli
dec
and
sahf
pop
sbb
xor
rcrb
outsl
xor
test
movsb
jmp
enter
popa
xchg
scas
movsb
sub
dec
mov
test
sti
push
movsl
pop
cs
mov
fst
xchg
lods
inc
inc
xchg
pop
mov
add
popa
nop
add
arpl
mov
or
shl
lea
pop
mov
cmp
push
xchg
adc
inc
loope
push
dec
jge
add
aam
xchg
sub
popa
stc
or
gs
pop
push
sbb
pop
jno
movsb
mov
aam
cmp
test
pop
movsb
and
inc
push
aad
cmp
ja
mov
stc
loopne
icebp
sbbb
push
hlt
jg
sarb
sub
jno
or
pop
lods
in
test
or
loop
aad
lods
pop
dec
jne
repnz
push
sub
out
mov
fs
aas
hlt
mov
pop
xchg
jnp
jo
ja
daa
pop
mov
dec
call
cmp
aas
inc
cmc
mov
push
inc
loope
scas
inc
and
outsl
mov
push
rorl
jnp
push
lret
and
add
or
mov
push
inc
adc
cltd
cmovns
xor
mov
jle
sbb
sub
out
fcomps
test
and
xchg
jmp
mov
push
mov
clc
lock
out
push
pop
mov
sub
inc
lods
pop
push
sub
add
push
scas
adc
rcr
hlt
push
push
jg
and
mov
jmp
push
push
dec
adc
mov
sbb
das
outsl
mov
push
adc
xchg
clc
dec
in
sbb
mov
aaa
lods
aaa
push
jbe
xorb
mov
jecxz
sarb
and
int
stc
mov
das
adc
inc
xor
mov
jmpw
test
push
stc
mov
push
loopne
dec
sahf
pop
dec
ret
es
clc
sbb
adcb
rcrl
push
fwait
xor
fdivrl
lds
std
mov
xchg
adc
push
fs
pop
mov
mov
lcall
cltd
push
mov
sti
movsb
push
pop
icebp
xor
jnp
xchg
les
mov
or
xchg
dec
dec
pop
movsl
sbb
cmp
jbe
pop
add
sbb
repz
fidivs
fisubrs
clc
jb
loop
jge
frstor
push
loop
cmp
scas
inc
cmp
dec
pop
mov
xchg
jnp
fisttpl
cmp
adc
int
lret
dec
mov
cmp
xchg
sub
vsqrtsd
lcall
xor
mov
and
push
mull
adcl
pop
les
repnz
jns
pop
in
in
xor
mov
call
mov
pop
mov
movsb
stos
push
inc
cli
fildl
lret
out
pop
or
pop
add
adc
add
sbb
pop
iret
pushf
jns
push
inc
mov
xchg
pop
clc
mov
in
icebp
add
loopne
add
adc
psadbw
pop
push
jmp
int3
cmp
or
in
in
add
mov
mov
cmp
add
jo
add
rcl
cmp
inc
push
push
push
inc
add
cmp
rolb
adc
cmpsl
jnp
rcrl
in
adc
inc
sahf
lds
addr16
in
mov
add
jmp
ficomps
lahf
pop
jmp
lea
sub
je
repz
mov
loope
add
rcrb
mov
dec
add
dec
mov
inc
pop
cmp
insb
pop
popf
inc
mov
shrl
incb
cld
mov
test
add
dec
mov
mov
adc
add
arpl
jle
mov
pop
add
mov
inc
inc
jmp
mov
cmpb
loop
cltd
push
or
in
add
adc
add
xchg
mov
cld
add
lret
mov
bswap
xorb
xchg
movl
push
lds
inc
cmp
pop
arpl
ret
dec
add
daa
push
testb
lea
xor
mov
or
jl
rcrb
pop
es
and
pop
imul
push
pavgb
push
testb
jge
pop
outsb
pop
andl
mov
rolb
sbb
jo
sbb
pop
lahf
xor
cmp
mov
aam
pop
cmp
cmp
clc
xlat
cmp
lods
imul
imul
enter
les
cmc
sbb
xchg
cmp
aas
mov
add
cmpsb
mov
mov
xor
jge
inc
pop
clc
and
mov
test
xor
adc
cld
pop
push
test
adc
inc
dec
mov
sbbl
test
std
iret
cli
aaa
dec
pop
jp
popf
push
add
add
sti
xchg
cmp
fbstp
stc
rcrl
testb
lea
sub
test
sbb
mov
pop
dec
jno
xor
jo
pop
mov
mov
ja
or
ja
adc
mov
inc
movsl
dec
cli
mov
iret
adcb
inc
or
outsl
out
loopne
int3
nop
and
aas
add
xchg
adc
scas
rcrb
or
sbb
aas
adc
ds
iret
cmp
push
jecxz
lahf
pop
inc
xorb
lret
jp
icebp
mov
pop
jg
je
and
aad
mov
jno
pop
mov
std
cmp
push
les
mov
aam
mov
rorb
ret
fcoml
fistl
dec
jb
adc
aam
adc
adc
mov
xor
sbb
cwtl
pop
stos
pop
xor
xchg
adc
xchg
add
je
pop
sub
sbb
jae
adc
loope
cmpsb
pop
jb
mov
pop
outsl
gs
sub
jb
lret
adcl
xlat
adc
testb
push
adc
xchg
ret
iret
fcoms
vpaddq
data16
cmp
aam
push
pop
xlat
push
rcrb
xor
mov
inc
adc
adc
sti
push
adc
fnstenv
aam
ds
add
mov
jo
in
xchg
pop
sbb
aam
je
insl
aas
shll
pop
leave
sbb
jg
lods
xchg
lds
dec
or
push
push
mul
mov
push
icebp
mov
daa
pop
insl
add
aas
int3
inc
fxch
fdivs
aad
sub
pusha
test
unpcklps
scas
xor
adc
mov
lea
clc
ret
xor
push
filds
std
out
lret
in
or
jne
mov
dec
int
jno
fistps
orl
out
push
negl
xchg
testl
or
xchg
inc
insl
push
dec
pushf
xor
sbb
dec
push
xchg
int
adc
aam
sbb
popa
push
lret
jae
popa
sbb
cmp
lahf
jb
push
push
xchg
and
fmull
fildll
push
aaa
lret
int3
fcomps
or
or
mov
add
add
stc
adc
mov
rclb
jne
stos
aaa
mov
shrb
xor
or
les
outsl
xchg
pop
xchg
sub
sbb
sbb
hlt
in
insb
pop
popf
cmp
adc
mov
int
sub
xor
or
mov
adcl
sbb
icebp
push
cmp
movsl
push
jo
or
xchg
push
jb
sub
add
push
jb
push
loopne
cmp
xchg
jae
xchg
push
inc
sahf
cmpsb
stc
pusha
inc
add
pop
adc
xlat
mov
out
pop
in
in
sub
jae
in
inc
jle
sbb
sub
push
adc
push
dec
cmp
enter
pop
mov
fisttps
rcrl
push
cli
std
sbb
test
out
test
inc
mov
add
aaa
aam
clc
xor
add
xchg
ret
dec
sub
int
loop
pop
xor
jb
loop
aam
pop
lahf
mov
in
jne
mov
sbb
dec
sarl
leave
ret
dec
jmp
or
int
fcomip
push
and
std
and
les
sub
push
push
pushf
sahf
mov
test
ja
nop
adc
data16
int
sbb
push
push
int3
jecxz
cmp
xor
in
idivl
mov
sub
sbb
fucomip
sub
mov
stos
inc
jno
mulb
inc
sub
xor
flds
fsub
shrb
aaa
mov
xor
lods
cmovl
push
dec
xchg
call
cmp
mov
or
xchg
cld
jecxz
scas
jmp
fs
sbb
fcompl
in
inc
inc
xlat
xchg
shll
xor
or
popa
call
mov
ja
pop
sahf
cmpsb
sub
sub
stc
jge
mov
stos
pop
adc
std
pop
out
in
mov
add
imul
sub
out
call
lahf
lea
add
gs
or
cmp
xor
in
outsl
jle
repz
dec
adc
popa
sub
out
jnp
out
inc
sahf
cmpsb
loope
xchg
out
into
or
movsl
call
mov
ja
test
xchg
dec
mov
ljmp
into
stos
or
mov
mov
xorl
frstor
add
pop
adc
test
xor
mov
jno
add
or
test
sbb
shrb
movsl
pop
xchg
sub
sbb
cli
call
aad
jnp
arpl
and
push
aas
cmp
out
stos
inc
mov
sub
out
lret
movsl
rclb
mov
xchg
int
leave
mov
cwtl
dec
std
in
add
insb
pop
popf
xchg
mov
popf
stos
sarb
add
scas
cmp
adc
cmp
xchg
push
sbb
imul
lahf
inc
mov
adc
mov
xor
mov
sub
ret
sbb
mov
mov
pop
xchg
pop
add
mov
push
mov
adc
pop
out
push
pusha
clc
mov
stos
lahf
inc
add
cli
pop
sbb
lahf
jb
push
xchg
cmp
xchg
pushl
and
imul
xchg
out
lret
in
out
scas
pop
jno
aam
out
mov
jne
in
inc
cmp
xor
neg
in
out
in
fstpt
mov
mov
sub
push
out
stos
sahf
jb
push
pop
js
cmp
js
fcoms
loope
arpl
test
lods
xchg
push
mov
push
inc
push
push
or
ja
decl
stos
pop
jbe
mov
nop
mov
mov
dec
mov
hlt
sub
ficomps
cmp
aam
movsb
insl
pop
lahf
xorb
cmp
daa
push
inc
repnz
push
jne
jno
pop
dec
sub
and
jle
or
leave
jmp
adc
movsl
inc
xor
inc
inc
add
push
adc
sub
inc
call
jle
sub
adc
cld
pushf
sarb
insb
adc
xor
in
mov
loope
mov
jg
test
aas
jge
ljmp
scas
cld
xchg
movsl
rcrb
jns
in
jmp
mov
loope
dec
out
in
lcall
push
push
mov
jecxz
std
push
in
lods
xchg
xchg
jecxz
jg
test
bound
adc
loop
aad
insl
jmp
loopnew
adc
test
loop
popa
mov
xor
pop
std
xorb
mov
das
in
mull
outsb
xchg
aaa
xchg
popw
push
xchg
jns
pop
les
xbegin
jns
mov
jg
dec
jb
jmp
aam
ljmp
push
and
mov
in
sbb
out
clc
mov
cmpsl
arpl
pop
sbb
lds
insl
jno
adc
ss
add
adc
movsl
testb
lea
loope
xchg
loop
mov
popa
xchg
scas
add
ret
mov
mov
push
loope
loop
jecxz
icebp
insl
cld
xchg
dec
insb
fistps
insl
pop
cmp
gs
ljmp
xor
loope
cmp
fwait
dec
rcrl
inc
call
movsl
push
pop
jp
dec
xchg
loope
and
lods
insb
pop
mov
lea
push
aas
xchg
mov
cli
pushf
in
iret
pop
jmp
dec
enter
xchg
add
insl
pop
fwait
pop
insl
gs
dec
cli
in
lret
aaa
pop
jmp
pop
movsb
mul
aam
cmp
sub
and
lahf
mov
push
mov
jmp
aam
mov
add
popa
jno
popa
dec
test
notb
jno
and
fs
js
out
xchg
or
mov
jg
call
sbb
pop
pop
mov
mov
out
dec
cli
cmc
out
lret
test
xlat
adc
testb
pushl
movsl
push
shl
out
aaa
cmp
shr
movsl
testb
lea
in
xchg
push
fidivrl
hlt
pop
cli
push
out
lret
and
jmp
adc
mov
lea
fidivrl
repz
cli
lcall
cmp
xlat
adc
mov
sub
lods
pop
jbe
and
out
mov
aam
daa
xlat
cmpsl
sarb
sub
adc
inc
sbb
stos
lret
add
cld
xchg
and
aam
push
cmp
aaa
mov
inc
loope
imul
repz
adc
pop
addr16
pop
js
sbb
xor
shlb
mov
divb
pushl
js
adc
popa
lods
mov
enter
out
mov
jle
push
push
aas
mov
and
pop
ret
insb
loopne
xor
mov
mov
cmp
in
xchg
push
or
jbe
je
stc
jmp
scas
jbe
jg
cmpsb
push
or
dec
jns
cli
lcall
pop
adc
leave
adc
jmp
icebp
iret
clc
xor
cmp
push
cmp
cmc
and
je
loop
pop
fcmovbe
lods
leave
sarb
adc
push
xchg
es
sub
xchg
lret
inc
rcll
xor
push
xchg
fildll
cld
test
push
dec
fsubrs
jp
shrl
pop
orb
fistpll
xor
jmp
iret
fmull
sbb
jae
sbb
call
stos
fdivr
nop
adc
shrl
dec
iret
leave
notl
mov
cmp
sbb
rclb
cmpsb
fcoml
sti
sbb
std
mov
mov
clc
push
or
mov
push
ret
push
fdivr
sbb
sbb
shrb
icebp
shrl
mov
fwait
adc
xchg
pop
sub
outsb
mov
rcr
fiaddl
or
dec
in
in
dec
das
sarb
imul
adcb
std
shll
push
mov
adc
push
rorl
stc
cmpsl
in
shll
push
test
inc
pushf
and
add
adc
jmp
push
stc
mov
xor
or
push
shll
fsubrs
out
and
and
jb
sbb
mov
leave
loopne
mov
push
push
mov
clc
sbbl
shrb
mov
aad
sbbb
sub
mov
dec
shr
cld
pop
lcall
dec
insl
cmpb
stos
xor
jno
xor
test
aam
jge
cmp
mov
and
sub
cmp
sbb
pushf
je
divl
jns
xchg
dec
xchg
scas
xlat
cmp
cmpsb
repz
dec
mov
jge
xorl
idivb
aad
cltd
push
sub
mov
jge
ret
rcrb
cmp
ljmp
sbb
sbb
cmc
sbb
mov
and
mov
pop
lds
mov
out
push
adc
cli
add
roll
pop
sbb
addr16
pushf
xchg
add
mov
cs
pop
std
pop
xlat
push
shlb
xchg
idivb
xchg
push
ss
js
popa
in
enter
sbb
aam
push
mov
xlat
and
xchg
scas
mov
lods
sub
mov
sbb
mov
jo
inc
sub
pop
jp
mov
sbb
inc
jmp
dec
jb
test
cs
cs
push
pop
test
loope
xchg
dec
cmpsl
mov
rclb
insb
push
pop
test
inc
mov
dec
mov
cli
jnp
push
lock
mov
cmp
jae
sbb
and
cmp
add
xchg
enter
icebp
xor
in
jle
sub
dec
mov
sti
mov
adc
mov
mov
add
mov
lods
adc
data16
shrl
and
stos
mov
ret
stc
sub
clc
cmp
imul
cmp
cltd
insb
outsl
std
dec
daa
xor
insb
or
clc
bound
push
mov
scas
mov
dec
clc
movsb
fincstp
dec
dec
mov
mov
clc
sub
idivl
mov
dec
xchg
mov
adc
in
mov
test
pop
cmp
movsb
sarb
adc
adc
adc
sbb
sahf
dec
xchg
outsl
ret
add
fninit
repz
cli
out
adc
add
and
push
aas
fimuls
pop
scas
mov
push
mov
pusha
ljmp
sbb
push
xchg
stc
inc
push
das
lods
divl
stos
lock
cld
mov
aad
mov
loop
xchg
inc
xchg
fisttpl
stos
out
data16
lret
jns
cmpsb
cs
or
in
icebp
aaa
shl
test
push
or
jmp
xchg
mov
or
aad
sti
xor
cmpsl
dec
sbb
nop
ljmp
mov
mov
dec
call
mov
dec
xchg
in
js
and
pop
and
inc
mov
sub
dec
ja
xchg
or
addr16
fcmovnbe
cwtl
loop
stc
shlb
mov
clc
mov
sbb
jnp
push
jne
loope
gs
dec
rcr
arpl
sub
sahf
sbbl
jecxz
decl
fistl
pushl
dec
lock
daa
jno
push
iret
call
test
sub
popa
scas
mov
mov
ds
loop
aam
xchg
cmpsb
xlat
pop
jecxz
inc
pop
test
rcrl
aas
aam
popf
sbb
pop
dec
add
pop
sbb
test
push
inc
test
subb
loop
jb
and
filds
push
and
in
rcrl
push
enter
out
ret
cmp
inc
enter
repz
push
jg
popf
test
test
xchg
jg
sar
jo
sti
pop
popf
jb
fprem
inc
test
rcrl
jbe
cmp
test
xor
clc
test
and
enter
xlat
popf
out
repz
out
xchg
sbb
sbb
or
xchg
sub
push
mov
orb
dec
imul
cmpl
out
sti
cli
mov
pop
cmp
push
in
mov
aam
dec
jle
push
xchg
jmp
jne
mul
xor
mov
xor
pop
cmpxchg
loop
cmpsb
xchg
sub
jge
insl
cmp
jle
out
fnstcw
jmp
int
das
sti
pop
iret
das
mov
rclb
aad
call
pusha
push
or
adcb
aaa
jns
outsl
cmp
pop
adc
jge
ret
jecxz
jo
dec
mov
mov
scas
jp
mov
cmc
jno
and
nop
mov
inc
jmp
jmp
data16
jns
dec
mov
jns
dec
cwtl
rclb
loope
pop
aas
cvttps2pi
mov
out
cmpl
lods
push
and
jb
xorl
popf
or
inc
negb
jbe
notl
jb
hlt
and
mov
pop
mov
popf
cmp
fiaddl
inc
xor
sbb
inc
adc
dec
in
inc
pop
mov
movsl
xchg
popf
jge
dec
fwait
adc
mov
rcrb
gs
sahf
cmpsb
rcrb
int3
and
lahf
sub
lret
xchg
push
ret
inc
cwtl
dec
pop
scas
fimuls
inc
aad
jg
loopne
sub
subl
push
outsl
pop
sti
cmp
enter
sub
insl
nop
pop
pushf
mov
jge
and
cmc
out
or
inc
inc
rcll
sbb
xchg
adc
dec
sbb
adc
dec
or
xor
adc
mov
jno
out
fmull
mov
adc
jns
xor
pop
in
mov
aam
fcompl
mov
push
jne
mov
loope
jg
leave
aam
insl
in
inc
inc
movb
shr
sbb
jns
sbb
insb
jb
lahf
xchg
insb
clc
lahf
decl
mov
mov
mov
adc
sub
or
sub
aaa
add
into
push
pusha
lods
iret
add
mov
iret
leave
into
mov
mov
lcall
jnp
dec
lea
dec
testb
lea
dec
push
pop
mov
mov
loopne
decl
loop
jge
pop
mov
or
dec
addr16
inc
jle
jne
jo
cmpsb
shlb
fistps
ja
mov
ja
vmovapd
sti
ret
pop
fcoml
jo
mov
popa
pop
xor
pop
fdivrp
lods
and
jmp
dec
int3
outsl
xchg
adc
std
jb
xchg
push
leave
scas
jno
out
jno
mov
addr16
pop
dec
or
dec
add
mov
aas
mov
add
push
mov
sbb
jmp
jno
test
mov
mov
test
jb
adc
mov
leave
jmp
sbb
mov
rcrl
inc
vrcpps
mov
cli
xor
insl
mov
outsl
pop
sbb
pop
gs
sub
stc
ror
pop
shl
inc
xlat
adc
dec
testb
push
cmpb
mov
cmpsl
push
imul
outsb
ret
stos
std
pop
inc
outsl
stc
push
popa
mov
mov
dec
les
adc
and
add
jmp
add
pop
jno
fwait
pop
adc
add
bound
add
dec
shrl
dec
inc
gs
cmp
ja
outsl
shlb
cmp
xchg
rcrl
pop
xchg
mov
dec
gs
sub
pop
cmc
and
inc
icebp
pop
inc
pop
dec
movsb
jae
or
mov
jmp
mov
jl
jecxz
dec
enter
xchg
pop
dec
fistps
dec
pop
dec
push
dec
mov
mov
sub
rcll
shl
inc
inc
jno
sbb
test
aas
popa
mov
jne
scas
mov
push
add
pop
push
aad
and
nop
or
stos
aam
dec
scas
rcll
inc
testb
lea
inc
push
cmp
cmp
sub
inc
jno
test
cmp
xchg
inc
flds
add
push
imul
adcl
push
inc
add
pop
enter
mov
sarl
add
das
xchg
add
jno
jb
lret
mov
dec
and
or
inc
push
xchg
inc
adc
int
lcall
clc
ficomps
fsubl
mov
in
pop
inc
pop
cmp
lods
iret
sub
inc
into
or
ret
xchg
inc
xchg
cmp
insb
inc
adcb
gs
shll
mov
repz
inc
xor
shll
mov
stos
lahf
jo
push
stos
dec
ss
xchg
das
jbe
iret
dec
cli
push
lret
pop
pop
iret
loopne
pop
xlat
adc
inc
testb
mov
mov
cld
mov
jg
lret
aaa
jno
inc
out
test
pop
push
ret
sub
sahf
jb
push
cmp
fiaddl
icebp
hlt
out
movsb
xchg
leave
fcoml
leavew
dec
jb
lds
add
xor
jo
bound
push
inc
gs
sub
je
or
lret
leave
and
cmp
inc
cld
xchg
lods
inc
filds
inc
push
es
aaa
inc
push
fsubl
mov
ret
lock
pop
ja
jl
cld
cmp
out
cltd
in
xchg
ja
inc
xchg
jno
jbe
imul
mov
inc
gs
shlb
cmpb
pop
xchg
lret
leave
incl
cmp
fistps
inc
gs
jno
xchg
xchg
and
pop
test
test
push
mov
pop
daa
test
fbld
inc
stos
xor
dec
jb
lahf
daa
test
aaa
mov
dec
jb
rorb
shl
in
mov
cli
mov
push
xchg
sti
cmp
inc
cld
xchg
xor
adc
repnz
popf
sub
or
jno
dec
jle
js
pop
inc
or
icebp
arpl
inc
sub
xchg
mov
shlb
push
divl
cmp
dec
repnz
cmp
xor
decb
jbe
add
add
fsubrl
jno
notl
shrl
push
int
mov
lahf
jo
dec
sahf
pop
sbb
loope
aam
pop
gs
std
das
cmp
adc
xchg
push
jmp
into
inc
aad
xor
inc
cltd
lock
add
popa
outsl
push
adc
rclb
pop
loop
pop
push
gs
sub
adc
lret
inc
pop
xlat
loopne
pop
xlat
adc
testb
lea
pop
push
and
mov
inc
mov
scas
push
shll
out
enter
jp
xor
add
das
lock
adc
pop
icebp
cmp
mov
out
mov
or
aam
or
inc
push
push
incl
clc
cld
push
sub
sub
les
xchg
imul
jle
arpl
fsubl
sbb
out
jmp
popa
outsb
cmpsb
stos
xchg
loope
jns
mov
call
clc
inc
cmc
lcall
add
add
sbb
cld
xchg
inc
sub
js
das
movsb
shrl
mov
rorl
lcall
cld
pop
xlat
adc
testb
mov
pop
xchg
add
mov
stos
xchg
stc
cmp
cld
xchg
enter
jecxz
pop
ds
gs
dec
cli
xchg
lret
push
shl
cmp
adc
into
jo
sub
pop
inc
movsl
add
or
pop
out
nop
scas
sarl
cld
add
inc
stc
add
pop
jno
mov
adc
jno
ret
fcoml
neg
dec
jb
rorl
mov
push
les
inc
xor
pop
popf
inc
mov
lods
stos
ss
cmp
xor
in
xchg
rcll
scas
test
jo
push
add
aam
jg
inc
push
cmp
add
and
add
pop
jno
lea
roll
rorb
ret
fcoml
dec
fisttpl
aad
aam
aam
repnz
lret
out
aad
jo
pop
jecxz
jmp
dec
mov
clc
fldcw
sub
movsb
cvtps2pi
in
cmpsl
jns
xchg
lds
rcrl
mov
dec
into
cmp
jno
sbbb
fnsave
jne
sub
adc
xorl
sbb
mov
add
pop
adc
aas
into
pop
sbb
mov
inc
jne
mov
cmp
out
adc
in
roll
in
cmp
pop
adc
int
cmp
in
sahf
dec
cmp
fnstcw
cmp
xchg
cmp
xor
out
jae
les
jge
fdivr
test
dec
lret
xchg
outsb
inc
xorl
adc
mov
ja
mulb
cmp
inc
adc
pop
inc
mov
jno
jle
jbe
insb
cli
dec
testb
pop
push
ret
mov
mov
adc
loopne
jne
mov
lock
push
adc
test
mov
std
inc
enter
inc
mov
xorl
dec
xchg
xchg
xchg
movsb
mov
cmp
test
inc
pop
jb
jno
lods
adc
dec
jne
mov
aad
sbb
jp
out
dec
adc
popf
sub
shlb
mov
popa
mov
pop
mov
xorl
out
sub
cmp
adcl
mov
sbbl
cmc
ffreep
fstp
jg
and
push
inc
inc
jle
fisubs
cli
mov
adc
xor
lret
xlat
adc
cltd
adc
iret
mov
add
push
cmp
add
and
push
inc
xchg
imul
mov
inc
stos
sar
sub
jo
in
stos
jns
pop
lods
mov
pop
fs
jb
adc
pop
pop
inc
xchg
mov
jbe
adc
push
lret
jp
pop
jo
sub
and
and
push
adc
and
out
and
adcl
cmp
mov
sub
dec
mov
inc
jg
jbe
enter
xor
mov
xorl
jle
enter
inc
inc
cltd
mov
push
jge
sub
jg
add
sbb
fmuls
test
sbb
daa
popf
cmp
insb
jo
int
xchg
inc
cmp
mov
mov
mov
aaa
dec
sub
int
out
mov
aaa
shr
push
popf
loope
add
mov
adc
int3
lock
pusha
and
add
lahf
rclb
outsb
dec
sbb
jbe
mov
ja
mov
pop
jl
sti
in
gs
lahf
xlat
pop
xchg
and
xor
fdivr
ror
pop
dec
pop
clc
std
les
adc
xchg
dec
mov
scas
adc
popa
or
sahf
xorb
jecxz
push
and
fidivrl
cmp
jmp
adc
std
les
jg
outsl
push
aas
and
mov
out
mov
add
inc
stos
das
push
hlt
push
mov
xchg
lret
sbb
mov
movsl
rcrb
add
inc
lds
addr16
in
pop
fs
lods
psubw
fmulp
in
daa
jno
adc
popa
icebp
icebp
cltd
dec
pop
mov
mov
dec
in
lock
jno
push
mov
leave
inc
jge
cmp
pop
lds
aaa
push
mov
nop
repz
pop
sahf
xchg
js
sbb
lea
dec
cmp
dec
jnp
aad
dec
cmp
enter
sbb
outsb
cli
loopne
ss
pop
test
popa
dec
incl
jns
jg
icebp
jecxz
imul
pop
add
mov
testb
or
aaa
arpl
xor
xor
scas
xor
out
sub
rcrb
rclb
pop
rorb
xchg
add
lahf
adc
xor
xchg
jge
mov
sub
push
jg
stc
sub
and
pushf
aaa
aad
fwait
push
notl
inc
and
dec
add
push
gs
cmp
fldcw
fwait
or
xor
clc
in
pop
mov
jb
push
outsl
lds
cmp
shll
xor
sbbl
orl
clc
mov
jmp
cmp
lret
movl
sar
int3
cmp
pop
sbb
adc
xchg
pop
adc
xor
lock
adc
pop
inc
hlt
lret
adc
aam
xchg
push
cmp
sbb
stos
jb
mov
mov
jb
leave
stc
jno
push
stos
push
jmp
jecxz
aam
lahf
movl
mov
rcrl
loope
push
lahf
adc
out
cmp
jo
xchg
cmc
inc
test
jo
pop
mov
imul
push
aas
xchg
sbb
loope
jns
jmp
mov
push
dec
rcrb
dec
push
aad
shr
sbb
mov
mov
push
jno
iret
jno
inc
rcrl
xchg
push
arpl
mov
xlat
int
or
sbb
xchg
mov
xor
xchg
inc
adc
aad
imul
imul
adc
dec
push
sbb
xchg
jnp
fs
inc
adc
into
push
cmp
sbb
adc
inc
push
es
cli
lods
out
xor
les
popa
addb
xor
les
dec
cmpb
jnp
xor
jmp
aad
jnp
fs
adc
cmp
mov
push
push
aad
xchg
mov
xorb
out
mov
pop
addr16
cmp
sub
enter
rorl
lahf
or
mov
dec
aad
adc
push
add
cmc
dec
fs
jecxz
xchg
sahf
xor
mov
push
or
insb
mov
stc
xchg
xchg
mov
inc
push
xchg
fnstsw
cmp
popf
repnz
pop
dec
jg
idivl
out
jg
jno
out
pop
adc
dec
xchg
imul
pop
out
lcall
mov
ds
shrl
inc
push
and
xlat
leave
mov
daa
out
or
pop
dec
inc
push
xchg
add
sbb
scas
outsl
and
or
dec
cmpsb
pop
shl
push
int
ljmp
lret
sub
cwtl
insb
clc
mov
js
rolb
dec
dec
bnd
ja
xchg
rcl
cmpsl
push
jno
in
push
mov
cs
lahf
pop
lcall
ficomps
arpl
popa
push
bound
mov
aad
loopne
dec
push
inc
filds
jo
pop
mov
or
sbb
jno
sub
sbb
sbb
push
and
lret
pop
pop
mov
inc
jmp
cmp
aaa
push
cs
mov
cmpsb
test
in
xor
mov
addr16
mov
cmp
scas
loop
gs
out
fdivrl
test
adc
xchg
lcall
sub
jae
sar
xlat
jecxz
out
in
pop
jp
jb
xchg
xchg
or
fistps
fisttpl
xchg
jb
leave
lea
in
push
shll
mov
adc
movsl
pop
and
dec
call
and
rcl
sub
fisttpll
int
movsl
cmp
dec
imul
xchg
shlb
cltd
scas
mov
mov
xchg
cmp
add
fxch
loop
ja
shl
test
daa
or
fwait
push
ret
pop
jp
or
sub
ss
in
jns
movsb
in
push
in
dec
xchg
add
ss
sub
movsb
jbe
pop
out
es
push
or
sub
stc
mov
cmp
repz
ss
in
jo
pop
aam
cs
decl
cmc
clc
scas
test
dec
lcall
pop
pop
repnz
or
pushl
push
aas
dec
les
inc
into
lds
repnz
out
pop
dec
mov
cmp
xlat
xor
test
in
imull
xlat
out
xchg
je
jle
aam
jnp
les
fcoms
xor
cwtl
in
add
iret
test
cmp
sub
xchg
test
rcl
fsub
add
orb
in
jle
cld
inc
xchg
mov
cwtl
xchg
fwait
in
xlat
ror
cli
mov
cmp
push
push
push
mov
inc
sub
int
push
or
lock
pop
lret
faddl
push
roll
je
dec
out
pop
out
rcrb
in
and
push
rcll
jmp
fldl
xor
cmc
stos
or
test
aaa
lcall
push
std
push
mov
lret
xor
fdivrp
mov
cmp
pop
push
or
in
or
frndint
mov
cmp
inc
push
sbb
jle
data16
pop
mov
stos
dec
flds
scas
push
cmp
in
les
mov
xchg
pop
aad
or
in
or
popa
fildll
inc
push
and
jecxz
out
test
push
push
adc
dec
mov
addr16
push
nop
lea
aam
dec
jle
lea
nop
fwait
in
xlat
pushf
movb
aas
push
rclb
or
in
les
sti
mov
xor
inc
push
ret
fdivr
jg
out
rorb
pop
mov
mov
call
inc
or
in
icebp
fdivrl
popa
icebp
cs
mov
xchg
out
ljmp
enter
lret
nop
ret
adc
adc
xor
add
push
xchg
cmp
xor
aam
aam
aad
or
das
inc
out
std
lahf
mov
rcrl
test
fwait
leave
cld
lock
mov
adc
rcll
xor
cwtl
shlb
stos
sbb
fs
pop
or
mov
sbb
das
aam
and
sbb
pop
jecxz
aam
fdiv
icebp
pop
xchg
xchg
jecxz
mov
inc
mov
adc
jno
int3
imulb
lea
push
arpl
inc
loop
add
pop
jge
xor
dec
out
cli
in
loope
int3
rcrb
cmc
rcr
sahf
in
mov
add
or
aaa
mov
fists
ds
in
jno
aam
mov
popa
jecxz
aad
test
xor
lret
xchg
dec
jp
outsb
push
cmp
iret
push
fsubs
xchg
ror
repnz
cmp
push
loopne
test
fsts
notb
inc
xchg
lret
pop
push
stos
adc
cwtl
pop
mov
iret
xchg
movl
mov
cmp
rcll
add
xchg
icebp
mov
cmp
test
cli
lods
mov
push
pop
xchg
push
jp
jecxz
adcb
loopne
jbe
fnstenv
fiaddl
and
add
sbb
aam
push
cmp
dec
insb
mov
adc
and
push
pushl
ja
adc
dec
mov
mov
out
stos
shlb
mov
cmp
scas
mov
jnp
pushf
dec
mov
pop
pop
dec
das
int
pop
cmpsl
aam
leave
mov
xlat
scas
enter
push
xchg
jne
cli
inc
jbe
fcoml
jle
rcl
aaa
fldcw
xchg
test
push
xchg
mov
rcrb
xchg
mov
inc
inc
push
jne
aaa
pushf
clc
iret
test
sti
pushl
cmp
sti
test
pop
jno
inc
jo
inc
dec
sbbl
insl
pop
test
add
sbb
add
dec
icebp
jno
mov
es
mov
cmp
mov
inc
jo
outsl
pop
jb
xchg
lea
out
leave
pop
cmc
jns
xchg
mov
xor
daa
aam
push
arpl
push
inc
xchg
pop
jne
test
das
xor
enter
insl
push
adc
stc
daa
or
push
mov
aas
inc
cmp
lea
or
mov
add
jnp
inc
mov
mov
inc
ja
mov
mov
xchg
jbe
vmovaps
jns
inc
pop
sub
add
mov
fcompl
mov
xchg
mov
xlat
jmp
loope
imul
sub
fwait
adc
mov
pop
adc
std
push
aad
xchg
pop
outsb
jecxz
or
mov
cmp
adc
inc
in
cwtl
pop
bnd
xor
stc
pop
or
add
inc
pop
sbb
sbb
out
xor
mov
loopne
sbb
inc
mov
cmpb
sbb
jns
inc
mov
push
sub
idivl
call
inc
aam
out
out
inc
inc
dec
ja
xor
inc
pop
pop
popf
enter
mov
dec
ljmp
cmp
fcoms
rol
pmaddwd
sub
sbb
lds
sti
pop
icebp
inc
sub
pop
test
in
adc
jns
push
xchg
out
cmp
or
push
xchg
subb
fdivr
xchg
xchg
push
jo
xchg
out
mov
push
bnd
pop
clc
jg
sbb
cs
and
cmp
add
mov
pop
push
adc
pushf
leave
inc
adc
lock
in
movsl
icebp
js
mov
dec
js
pop
movsl
mov
pop
popa
jae
stc
in
mov
inc
jnp
in
insl
mov
mov
sbb
and
dec
fdivr
mov
lcall
mov
xor
imul
mov
cld
pop
mov
inc
fwait
pop
fidivrl
test
xor
jge
in
mov
in
xchg
xor
jp
inc
xor
dec
ss
addr16
push
shrl
leave
or
jmp
pop
jb
push
movsl
pop
xlat
leave
in
xor
inc
jbe
int
out
movsl
lahf
inc
inc
and
in
std
jno
sbb
push
push
mov
int
mov
pop
aaa
into
jno
inc
js
rclb
pop
clc
pushl
jl
loope
idivb
push
stos
jbe
js
mov
jno
and
add
pop
mov
push
jle
jp
leave
mov
repnz
enter
shrl
loope
sti
cmpsl
mov
out
cmpl
test
sub
or
ja
cmpsl
call
sub
and
call
mov
mov
shll
pop
cwtl
cmp
xorb
inc
sar
sbb
push
xchg
xchg
cmpsb
loop
aaa
mov
inc
pushf
int
shrl
cmp
in
imul
sub
shll
sub
leave
sub
jp
xchg
mov
inc
int3
pop
inc
dec
xlat
mov
fiaddl
int
push
jb
xchg
imul
test
fbstp
pusha
dec
shlb
stc
jmp
xchg
sub
loope
out
ss
imul
es
js
push
pop
mov
pushf
xor
dec
cmp
das
push
fxtract
das
rcr
sbb
shll
stc
pop
test
das
ja
fnsave
adc
pop
and
fsts
add
fbstp
in
push
pop
ud2
mov
pop
iret
jmp
adc
push
sub
dec
push
jge
ss
push
xchg
pop
pinsrw
loopne
push
pop
jne
push
incl
repnz
adc
mov
stos
cmpsb
push
mov
aam
iret
xor
push
les
xchg
aad
shl
sub
dec
inc
test
movsb
outsb
mov
cmc
sbb
jno
mov
xor
mov
jno
roll
xchg
bound
adc
push
adc
xchg
and
inc
stos
add
cmp
fstpl
xchg
sub
or
push
loopne
sbb
es
bound
push
fstps
sub
sbb
sub
aad
fnsave
inc
adc
repnz
scas
lahf
mov
pop
pop
or
sub
jmp
lret
inc
xor
pop
aas
icebp
mov
jg
jnp
mov
lret
mov
sub
hlt
push
sti
adc
push
sti
aam
xor
inc
jmp
lahf
inc
leave
ret
inc
adc
mov
pop
popf
inc
sub
lods
adc
add
inc
dec
incl
pop
in
jmp
je
jg
inc
mov
imul
mov
xorl
inc
pop
or
in
jmp
adc
pop
popf
adc
and
jo
lods
testl
cld
jb
mov
adc
sub
mov
out
call
fwait
stos
cmp
xor
xchg
test
loopne
mov
fldenv
bound
cld
ret
jp
push
mov
fs
push
lock
jle
mov
jne
xor
sbb
cmp
dec
ret
in
sub
xorb
gs
repnz
addr16
stos
mov
and
add
aad
pop
adc
outsl
xlat
jmp
rep
xor
jb
clc
mov
mov
sub
inc
popa
fisttps
mov
out
mov
dec
mov
lock
xlat
sbb
xor
push
pop
and
xchg
jae
dec
imull
aas
mov
cli
push
sub
sbb
mov
sbb
aad
mov
cmp
mov
es
xchg
or
pop
xchg
out
jno
mov
insb
icebp
mov
and
mov
jo
jmp
and
pop
mov
fnstsw
pop
sub
hlt
negb
lea
xchg
and
jo
sub
outsl
scas
addb
fisubrs
cmpsl
insb
push
je
jb
mov
jne
aaa
aad
repz
fwait
add
xchg
negl
aaa
sbb
add
popf
xor
cmpsl
fistl
sahf
inc
movb
cmp
leave
xchg
mov
add
mov
adc
dec
shll
pop
pop
jmp
test
or
mov
and
mov
sbb
pop
out
xchg
cmpl
mov
xchg
sbb
aad
mov
jno
adc
fst
xchg
adc
xor
shll
pop
test
add
fisttpll
mov
pop
bound
pop
sub
pop
pop
sbb
stc
cmp
jmp
lock
add
xor
sbb
push
push
test
fs
xor
fcompl
push
test
inc
jg
cltd
aam
xlat
out
push
loopne
icebp
xrelease
inc
ret
inc
repnz
jp
xchg
inc
out
ja
fabs
out
fldl
add
stc
mov
adc
ret
sarl
add
int
mov
push
lods
js
out
sub
shl
rolb
and
loopne
inc
mov
mov
bound
xchg
ja
adc
and
call
pop
lods
mov
adc
loopne
inc
mov
mov
push
mov
sub
testb
stos
adc
scas
xchg
ljmp
jnp
cltd
cmpsb
test
sarl
lds
shlb
in
rorb
pop
mov
fsubrl
dec
pop
jnp
jmp
sti
shlb
lods
out
mov
xchg
sbb
adcb
pushf
add
xchg
hlt
adc
mov
mov
jg
shrd
and
dec
cli
scas
or
insb
and
mov
cmpsl
out
cs
mov
adc
filds
lds
dec
loope
push
push
ret
mov
icebp
fdivrs
shrb
dec
mov
pop
das
and
fdivs
adc
or
leave
arpl
jns
pop
add
int3
jne
cmp
xor
fdivrs
adc
cld
rcll
xchg
cmc
idivl
and
pop
mov
mov
outsl
xchg
test
sar
inc
leave
jae
adc
rcr
jmp
outsl
xor
dec
lahf
xlat
or
inc
push
push
outsl
jp
inc
jno
cmp
xchg
mulb
jns
mov
mov
jae
mov
into
shlb
mov
ret
ja
int
adc
or
adc
push
pop
adc
pop
jo
cltd
inc
mov
mov
lret
pop
mov
sub
inc
mov
mov
push
mov
cli
push
out
or
fnstsw
cld
mov
inc
mov
into
xchg
adc
nop
jbe
ljmp
adc
iret
shrl
stos
add
jmp
xor
test
sub
dec
adc
dec
pushf
aad
pushf
repz
lret
sub
push
or
or
dec
pop
cwtl
pushf
fmuls
xchg
in
sub
cmp
stc
jns
sub
sub
arpl
aaa
clc
sbb
ja
ja
mov
pop
cwtl
adc
jae
pushf
add
lahf
xor
pop
fwait
jo
in
push
cmc
sbb
pop
roll
icebp
inc
in
loope
test
leave
fwait
sbb
pop
mov
inc
jp
leave
inc
dec
ds
dec
test
stc
loope
orl
aas
jno
xchg
daa
jbe
cmc
outsb
in
leave
aas
or
add
sub
jne
inc
hlt
adc
sar
and
test
cli
inc
xor
adc
inc
scas
mov
sti
inc
cmpsl
clc
dec
test
outsl
xor
mov
pop
adc
inc
mov
cltd
jno
adc
iret
pop
fcom
cli
inc
xorl
inc
test
cmc
inc
xor
pop
aam
push
daa
mov
test
jge
jns
test
xor
test
inc
mov
sar
in
dec
pop
test
loopne
ret
inc
push
sub
pop
sub
inc
inc
pop
jae
adc
aad
adc
inc
fidivl
js
push
adc
int3
ret
shll
push
lret
add
cld
adc
popf
popf
test
inc
movsl
jae
adc
dec
add
sbb
pop
lds
push
push
lahf
pop
pop
sti
sar
out
or
adc
aaa
popf
cld
push
cmp
cmp
rclb
push
sbb
adc
imul
xchg
ljmp
dec
and
mov
push
and
sbb
xor
xor
sahf
in
je
mov
sub
add
pop
cmp
mov
and
sub
lds
mov
popf
pop
ds
movsb
sbb
sahf
cmpl
inc
lcall
sti
jl
lcall
adc
or
xchg
enter
insb
pop
repnz
pusha
xchg
roll
and
fidivrs
je
daa
cmp
dec
rorl
cmp
das
or
pusha
adc
sub
or
xchg
mov
pop
xchg
stc
xor
push
cmp
mov
das
push
push
jno
loopne
lret
pushf
sbb
dec
lods
call
lds
inc
popf
push
or
mov
popf
or
sbbl
mov
xor
mov
push
popa
inc
cmp
pop
je
pop
push
rcrl
inc
in
mov
fiadds
pushf
xor
or
pop
sub
daa
in
mov
or
fidivrl
maxps
pop
jle
push
jno
fsts
jbe
mov
cmpsb
cmp
mov
pop
sbbl
inc
fcomp
or
xor
cld
aad
jb
test
enter
sahf
pop
mov
int
mov
inc
adc
divb
test
lahf
rcrl
nop
addr16
test
in
dec
addb
sub
pop
popa
fstpl
pop
roll
push
push
fwait
enter
in
test
out
rclb
push
mov
leave
fildll
lods
into
push
xchg
pop
push
sbb
dec
outsl
pusha
pop
mov
negb
mov
adc
pop
mov
adc
push
int3
push
daa
xchg
inc
int
andl
adc
adc
sub
movsl
inc
xchg
pop
mov
xor
aam
nop
sbb
leave
not
sbb
pop
lcall
pop
cli
fwait
mov
pop
add
test
test
pop
movsl
push
call
inc
imul
scas
test
inc
loop
mov
push
xchg
xchg
adc
inc
inc
mov
cmp
or
rcrb
sbb
xor
stos
lock
adc
push
inc
sub
icebp
pushf
pop
insb
add
mov
add
jl
add
lds
mov
popa
inc
cwtl
mov
pop
pop
xchg
dec
leave
int3
fnstsw
jns
rsm
mov
jecxz
jbe
inc
stos
popf
ds
cmp
mov
test
fsubrs
pop
bound
aad
inc
inc
push
ret
add
shlb
pop
sbb
jne
push
mov
daa
push
adc
in
mov
jae
mov
push
imul
decb
adc
gs
shll
leave
inc
jns
pop
xor
out
pop
mov
sbb
pop
test
ja
push
stc
test
inc
scas
repz
and
push
push
xchg
cmp
inc
scas
mov
cmp
dec
adc
mov
jmp
xchg
jl
iret
lahf
rorl
adc
xor
or
movsl
not
sbb
cs
fldt
in
sub
sub
inc
aaa
push
in
and
flds
bound
pop
mull
and
je
push
jg
push
nop
jo
or
pop
cmp
loope
push
mov
pop
cmc
xor
lock
roll
cmp
sub
lods
jl
fidivrl
pop
xchg
pop
jp
pop
adc
in
ja
icebp
int
addr16
leave
and
inc
cmp
mov
test
inc
mov
rclb
push
scas
xchg
cmc
fstpt
out
pop
cmpsl
filds
outsl
lcall
jecxz
sti
cmc
test
inc
in
sahf
adc
rcrb
push
pushf
jne
cmp
icebp
ret
hlt
fmuls
xor
lret
mov
int3
js
mov
sahf
xor
mov
popl
or
loope
sub
rclb
pushf
fadds
cltd
xchg
add
out
or
adc
iret
cmp
lcall
xor
mov
pop
test
dec
lahf
xlat
jno
mov
bound
out
pop
ficompl
jns
mov
adc
dec
xor
lds
neg
xchg
push
fwait
xor
push
inc
pop
xchg
dec
cmp
dec
push
and
adc
xor
sqrtps
xchg
pop
cmpsb
stc
loopne
stos
jl
iret
scas
shr
adc
add
jmp
ljmp
jno
pop
sub
pop
inc
jo
jge
notb
add
xor
push
fcomip
not
jno
and
iret
rcrb
outsl
mov
mov
jne
jns
imul
pop
ds
push
mov
movsl
jb
cmp
xchg
sbb
js
daa
mov
lds
sub
sbb
jns
cmp
mov
cmp
dec
xlat
cmpsb
adc
and
jne
fbstp
lret
lods
xchg
sar
call
pop
into
test
inc
jae
adc
rcr
out
xchg
out
push
push
addb
dec
repnz
xchg
adc
jns
lahf
fcoms
push
ret
cmc
aad
lock
jns
fwait
movsl
sub
aad
pop
int
lea
iret
mov
call
lret
stc
fildll
lock
sar
leave
xchg
lea
test
hlt
mov
cmc
pop
add
xchg
jae
leave
daa
ret
push
xor
dec
pop
pop
imul
xor
dec
xor
push
xchg
xor
out
pop
sbb
inc
sub
std
pop
jmp
mov
sub
mov
dec
ret
and
ret
xor
jne
mov
jp
push
shlb
mov
rcrl
adc
jo
dec
in
cmp
scas
mov
jnp
ret
stc
pop
jb
fadds
inc
xchg
or
dec
js
and
out
clc
cmc
xor
inc
orb
aad
adc
dec
das
mov
mov
in
inc
jae
adc
xor
addr16
js
mov
jb
fmuls
fxtract
popa
popa
cli
pop
inc
das
jle
sub
xlat
push
dec
cmpl
popa
add
jbe
jno
xor
pop
jb
fdivs
out
cmc
inc
mov
in
fistpl
add
inc
dec
mov
pop
loopne
mov
push
sahf
mov
xchg
lret
ret
popa
jno
cmpsb
loopne
mov
rol
adc
fstpt
dec
sbb
xor
es
or
inc
add
push
gs
fstpl
adc
jb
fdivrs
sti
cmc
push
mov
cmc
xchg
or
test
mov
daa
mov
cmp
aam
jg
hlt
addr16
js
dec
mov
pop
xchg
cmp
jb
cmc
xor
cwtl
scas
push
pop
cmp
add
push
cmc
clc
and
loope
sbb
mov
aas
loope
mov
push
sahf
xor
fdivrl
dec
movsb
add
xchg
sbb
addr16
fsubrs
cmc
cmpsl
movsb
lea
ret
cmc
push
sahf
out
fwait
xor
addr16
js
dec
shll
mov
fstpl
adc
cs
out
inc
stos
sbb
mov
push
loopne
mov
sub
xor
das
jle
cmp
pop
js
pop
jb
fdivs
pop
or
dec
cmpsb
mov
jp
sahf
fidivl
push
xor
addr16
in
sbb
cmpsl
aaa
jecxz
xchg
in
dec
xchg
xchg
jb
loopne
inc
movsb
lahf
loop
pop
in
mov
xchg
iret
and
loopne
inc
mov
mov
xchg
repz
loopne
inc
mov
mov
xchg
cmp
jb
out
pop
inc
mov
mov
xchg
xchg
and
loopne
inc
mov
mov
add
jb
out
jbe
mov
mov
add
cmp
lcall
out
add
out
jp
stos
cmpsb
mov
out
add
push
jp
bound
lock
lcall
mov
and
or
cmc
ja
mov
mov
sbb
sub
xlat
pop
mov
roll
dec
clc
fwait
test
xorl
out
or
push
cltd
faddl
and
mov
inc
adc
xor
cmp
aam
inc
push
push
fbld
pop
addr16
pop
jg
in
shrb
lret
test
test
sarl
fidivrl
mov
and
test
mov
sub
daa
jle
nop
adc
sub
jbe
lods
stc
data16
pop
jnp
imul
cmp
ja
or
mov
gs
dec
cmpsl
popa
mov
mov
adc
ja
add
pop
push
sbb
add
das
inc
cli
bound
pusha
lds
push
mov
or
push
rclb
inc
subb
ret
stc
das
jb
incl
cmp
aad
inc
aas
jmp
push
push
jae
xor
mov
jle
dec
sub
call
mov
sbb
inc
mov
jb
out
sub
aas
mov
cld
lock
sbb
daa
cmp
add
jbe
jbe
mov
pusha
faddl
insb
test
ret
jno
adc
adc
jbe
insl
push
xor
mov
inc
in
or
add
dec
cmp
sti
xor
pop
mov
leave
or
insb
mov
pop
cld
mov
xchg
jns
or
rcrl
dec
inc
mov
inc
jmp
out
mov
fstps
jmp
and
stos
leave
rolb
sub
stos
add
ficoms
aam
movsl
xchg
inc
mov
out
lret
and
or
and
fdivl
in
fcompl
in
fistps
in
filds
in
filds
in
fsubrp
inc
add
lret
notl
xchg
scas
fstps
das
cmpsl
shll
jl
mov
sbb
lods
push
in
mov
push
rorb
sbb
add
popl
push
or
out
fiaddl
add
push
aaa
mov
orl
lods
add
jge
scas
add
xor
fstl
and
pop
int3
adc
push
sbb
enter
out
pusha
mov
jns
mov
ficoml
inc
jmp
xchg
insl
push
jmp
neg
sub
adc
inc
inc
scas
ss
out
pop
push
shrb
pop
or
adc
loopne
cmpsb
xor
inc
shrb
lock
arpl
sbb
lods
orl
add
cli
rcrb
cmp
scas
xor
fcomp
mov
lds
stos
fs
sbb
lock
add
sarb
mov
add
aad
cltd
cld
test
cmpsb
nop
imull
cs
std
and
push
sub
push
cmc
mov
aad
aam
jno
stos
aam
adc
xor
call
xchg
movl
or
sti
rcl
mov
pop
cmp
lods
xlat
out
mov
dec
inc
xor
js
gs
xor
xchg
enter
sbb
mov
out
or
push
decl
adc
push
jae
push
frstor
cmc
inc
and
pop
lcall
jg
mov
mov
xorl
pop
mov
cmc
pop
mov
sahf
xchg
in
lret
jle
sbbb
dec
in
xor
sbb
inc
mov
mov
in
xchg
mul
push
cmp
mov
cmp
pusha
insl
push
pop
int
pop
xchg
mov
les
or
call
test
bswap
push
fnsave
mov
mov
test
adc
jecxz
pop
adcb
icebp
daa
xor
lea
inc
sbb
sub
cmpl
push
sub
out
jne
push
sub
aam
adc
in
mov
cmc
dec
lret
jmp
inc
pop
push
and
mov
jns
jns
rclb
mov
jl
jo
push
xchg
pop
xor
shll
xor
insb
cmp
popf
imul
std
leave
xor
dec
mov
sbb
in
pushf
or
adc
push
dec
push
adc
xchg
frstor
cmc
lahf
cmp
insl
adc
inc
pop
mov
outsl
mov
mov
fstp
push
mov
push
sub
cmc
fisttps
cmp
testb
xlat
mov
xchg
sbb
faddl
cltd
loopne
mov
push
mov
jae
adc
xchg
push
and
cmc
or
push
dec
das
lret
jno
adc
iret
not
cmp
jmp
aad
dec
xchg
test
jg
sbb
dec
stos
xlat
leave
adc
inc
cmpsb
mov
fists
nop
sarb
sbb
xlat
jns
shrl
fadds
das
sub
icebp
test
inc
add
rolb
push
aaa
xchg
call
push
shrl
adc
adc
int3
sti
rcrl
leave
pop
movzwl
popl
int
jecxz
test
aad
je
iret
jae
mov
mov
imul
xlat
pop
adc
inc
adc
jno
outsb
adc
inc
push
mov
in
cmp
fstl
xchg
cli
jmp
mov
mov
mov
or
cmp
rorb
outsl
lcall
jae
mov
and
or
sbb
cmp
adc
int
out
xchg
dec
pop
xlat
icebp
mov
arpl
sub
addl
shll
fnstenv
insl
inc
mov
adc
pop
aam
adc
inc
jb
jns
pop
fcoms
push
push
xor
sbb
mov
outsl
push
inc
jno
adc
enter
cmc
jae
adc
xchg
gs
push
aaa
xchg
incl
push
in
xor
cmp
adc
iret
or
pop
jp
inc
mov
iret
mov
insl
adc
add
cld
pop
xor
aad
addr16
jae
mov
mov
test
mov
xchg
test
shl
inc
ds
outsl
and
insl
jno
adc
iret
xor
in
sbb
cwtl
xchg
sub
fcomps
jno
adc
iret
sti
rcrl
sub
test
dec
stos
xlat
xor
sti
dec
shrb
cwtl
cld
mov
dec
xlat
aad
xchg
inc
mov
ja
mov
and
jae
adc
aaa
pop
call
sbb
fdivs
out
xchg
iret
sbb
in
das
pop
push
ffree
in
sub
stos
xchg
cmc
repz
std
stc
push
pop
adc
iret
lahf
sarl
roll
dec
xor
shl
testl
mov
jmp
cltd
inc
inc
mov
outsl
lcall
sub
rcrb
outsl
add
lea
adc
daa
jge
outsb
sbb
xor
fadds
push
adc
enter
lds
adc
sarb
push
filds
orl
popa
adc
iret
fwait
shll
roll
xchg
test
inc
movsl
jno
and
pop
xor
adc
inc
push
mov
outsl
mov
test
adc
das
sub
lret
inc
loope
xor
cmp
sub
sub
cmc
daa
xor
mov
mov
xchg
leave
jge
xlat
xchg
cmc
repz
adcl
jnp
add
inc
xor
popa
test
inc
popf
jae
or
stc
dec
xor
sub
shlb
xchg
pop
sub
cmc
aas
xor
das
sbb
jno
adc
iret
ror
adc
add
lcall
xor
mov
dec
test
dec
cmpsl
xlat
jmp
cltd
inc
inc
mov
outsl
cmpsb
shr
in
dec
decl
mov
and
rclb
xchg
mov
push
xor
lock
sub
mov
xchg
xor
gs
xlat
cmp
and
mov
cmpsb
mov
out
pop
adc
lods
ljmp
add
sub
jae
adc
mov
lods
xchg
xchg
clc
push
pushf
xlat
sub
jmp
mov
gs
sarl
and
int
imulb
adc
sbb
mov
gs
test
inc
imul
mov
outsb
notb
dec
sub
mov
xchg
sbb
xor
dec
sbb
stc
mov
jae
lods
adc
xor
gs
inc
mov
scas
adc
adc
mov
adc
inc
pop
mov
int
mov
cmp
shlb
xor
idivl
jmp
cmc
adc
jge
fwait
inc
mov
push
mov
jns
xlat
cmp
and
mov
jae
movsl
adc
xor
jne
insl
inc
lods
jae
adc
ja
mov
cmp
outsl
outsb
fadds
sbb
add
jno
adc
iret
psrlw
adc
shr
or
xchg
cli
pop
cmp
push
xchg
jno
adc
iret
mov
jns
xlat
add
push
xor
xchg
test
inc
iret
stos
add
sub
jae
adc
pop
mov
xchg
inc
icebp
push
and
icebp
outsl
loop
or
adc
int3
jecxz
std
adc
ror
and
out
xchg
xchg
das
fcmovu
or
adc
iret
xor
push
mov
adc
rclb
insl
xchg
pop
popf
push
je
mov
outsl
adc
cmp
pop
jl
enter
cmc
jae
adc
rcrb
push
incl
in
das
inc
xor
out
mov
xchg
adc
ret
xchg
gs
int
shlb
movsl
cmc
xchg
cmp
fstl
outsl
sahf
rcl
or
dec
decl
int
test
inc
cltd
jae
adc
xchg
test
pop
stc
test
inc
loope
adc
ror
xor
std
fwait
repz
xor
out
add
pushl
xor
mov
inc
test
dec
xor
adc
inc
cs
sub
jp
addr16
push
pusha
xor
pop
pop
fidivrs
mov
push
lods
dec
orl
and
ds
stc
cltd
xchg
pop
add
xor
jg
inc
rolb
inc
xor
fsub
mov
sub
cmc
test
out
lods
mov
cmpsl
shrb
aad
sti
fildll
sbb
cmpsl
icebp
enter
inc
rcrb
loopne
inc
popa
inc
addb
ja
inc
mov
loop
mov
push
sub
fdivr
inc
jne
pop
dec
dec
add
adc
push
out
je
rclb
push
mov
imul
cmp
test
aad
add
adc
jae
popa
bound
jae
pusha
jle
xor
mov
pop
or
leave
xchg
std
sbb
jmp
sbb
clc
gs
rorb
pushf
jo
decl
xchg
and
xor
jecxz
scas
leave
ja
lea
add
sub
jmp
scas
sub
xchg
ja
nop
inc
test
rcl
repz
and
jmp
sarb
imul
out
clc
inc
push
sbb
jle
mov
in
insl
clc
jg
test
sarb
sbb
out
outsb
mov
test
or
jmp
jb
dec
aas
cmp
leave
pop
xchg
fbstp
fmuls
jno
loop
popa
test
fyl2xp1
aam
dec
jmp
aaa
xor
nop
inc
loop
insl
dec
test
adcl
xor
xor
cmp
cmpsl
jmp
jns
xor
and
cmp
xchg
call
mov
test
mov
mov
je
fstpl
lods
sub
mov
sarb
add
jecxz
aas
out
aad
mov
sub
imul
cltd
loopne
add
lods
dec
out
cmpsb
enter
hlt
shl
icebp
mov
out
push
sub
roll
lret
pop
movsl
movsb
jb
cmpsl
movsb
cmp
mov
sbb
push
aad
sti
das
jae
test
lock
inc
sbb
pop
movsl
les
inc
test
orl
jmp
sub
inc
fs
pop
push
push
inc
inc
jge
shl
sbb
test
add
and
inc
push
mov
shlb
dec
jg
dec
cmp
lahf
cs
mov
aad
sbb
rorl
mov
cmpsb
pusha
xor
popa
in
add
stc
lock
in
int
mov
test
xor
out
rcr
jge
mov
popa
mov
ja
je
mov
sub
or
xchg
sti
pop
lret
movl
mov
cmp
and
call
jmp
in
pop
jg
mov
dec
outsl
sahf
iret
push
addb
idiv
add
gs
cmp
sbb
mov
pop
sarb
or
enter
mov
ret
mov
loopne
sbb
mov
sub
jmp
push
sbb
mov
aaa
cli
jae
cltd
dec
stos
jge
test
mov
pop
inc
mov
jl
pop
ja
mov
xchg
add
clc
insl
or
lret
or
jb
add
ret
jge
test
bound
icebp
bound
and
jmp
dec
call
pop
testb
xchg
sbb
cmp
inc
js
push
sub
xor
add
pop
clc
lods
push
popa
mov
lods
lock
adc
nop
mov
pop
insl
fwait
mov
cld
cmp
pop
pop
popf
adc
mov
out
push
xor
icebp
shlb
fmull
cmp
inc
inc
pusha
jo
push
aad
add
call
loopne
jno
jmp
jo
sub
aad
mov
push
lock
in
mov
test
icebp
iret
pop
jb
hlt
push
pop
enter
inc
aaa
xchg
adc
pop
xor
and
mov
pop
mov
fwait
pop
cmp
push
aam
dec
hlt
shlb
and
sbb
dec
hlt
stos
cmpsl
lods
out
inc
fisttps
dec
movsb
sti
dec
hlt
xlat
mov
fldl
es
dec
dec
icebp
mov
inc
xor
jns
pop
bound
out
pop
in
mov
ljmp
insb
and
and
push
aad
das
push
popa
jle
cmpsl
push
push
ficomps
inc
jmp
fldenv
aas
mov
adc
test
inc
cmc
ljmp
out
pop
jmp
jnp
add
cmp
ret
mov
mov
daa
mov
in
popf
push
in
adc
dec
cmpb
call
loop
ljmp
pop
ljmp
pminsw
loop
ljmp
call
in
lods
pop
gs
pcmpgtd
stos
aas
data16
sub
sub
pop
data16
dec
data16
jg
pop
stos
outsl
data16
stos
lahf
mov
dec
stos
mov
data16
pop
fbld
sbb
aad
lcall
in
stos
pop
data16
pcmpgtd
stos
pop
data16
dec
push
or
imul
xlat
idiv
stos
cltd
adc
sub
push
pusha
lcall
movsl
xchg
fisubrs
mov
frstor
sbb
add
out
daa
cmp
out
sti
add
xlat
cmp
push
fnstcw
adcb
push
out
pop
pop
jle
addr16
mov
mov
push
cmpsb
loop
gs
push
mov
popf
outsb
int
movsl
fisubs
loopne
lcall
jecxz
inc
jp
lods
test
scas
pop
iret
gs
cltd
mov
into
std
inc
stc
pop
push
rcl
inc
fidivrl
cmp
je
call
jnp
lcall
sarb
clc
adc
nop
xlat
inc
rolb
movsb
repz
push
loopne
enter
ds
or
jo
xchg
rcr
js
mov
sahf
lahf
ja
jns
nop
mov
loop
das
xchg
xchg
lods
das
nop
and
sub
sub
or
jg
mov
mov
inc
int3
or
leave
or
jecxz
rcll
sbb
bound
in
mov
icebp
test
data16
fdivs
hlt
or
les
jp
mov
mov
pop
push
idivl
popa
lock
sub
imul
mov
call
scas
popa
jnp
stos
mov
jns
sbb
lcall
test
mov
loop
jae
adc
push
fnstsw
or
ret
leave
or
ret
and
call
jg
push
pop
mov
xchg
cmc
mov
cmpsl
icebp
cmpsb
std
les
dec
xor
and
gs
mov
aam
or
pop
insb
adcl
aad
xor
out
das
in
iret
push
jecxz
fsubrl
mov
xchg
and
jb
loope
rcrl
pop
out
pop
pop
push
mov
dec
xchg
mov
mov
and
mov
sbbb
mov
loopne
ja
or
cli
mov
out
jmp
ss
movsl
mov
repnz
lods
lret
adc
xchg
mov
testl
out
aam
loope
jnp
loopne
les
push
popa
in
push
in
pusha
inc
cmpsl
scas
movl
cld
xor
icebp
sbb
and
pop
out
out
lods
std
popf
call
xor
out
xchg
inc
cmp
ja
or
inc
jg
jnp
mov
fisubs
adc
ret
out
and
imul
out
and
jbe
ret
ret
xchg
testl
gs
xchg
stos
stos
sub
sub
pop
or
dec
and
loope
fnstenv
imul
xchg
loop
ljmp
xor
sti
push
loop
cmp
inc
mov
mov
loop
ljmp
mov
arpl
movsl
ljmp
push
lret
arpl
arpl
mov
xchg
movb
xchg
leave
mov
mov
leave
ficoms
aam
ret
outsb
jge
mov
scas
popf
cmpsb
sbb
add
sub
and
sub
and
sub
and
cmp
mov
mov
xchg
inc
stos
andl
mov
mov
mov
ret
call
mov
mov
lea
jp
lods
xchg
push
fstl
lret
xchg
cmp
sbb
xchg
mov
sub
in
nop
dec
inc
dec
cmpb
mov
in
mov
lea
mov
mov
in
lods
sub
or
lods
cli
mov
add
cmc
lret
jnp
in
aas
jmp
sbb
cmp
or
lret
in
cmp
and
lret
scas
std
cmpsb
cmp
sbb
cmpsb
mov
sub
out
mov
xchg
dec
int
lcall
popf
test
or
mov
sub
int
lret
and
sub
and
sub
and
sub
and
loope
pop
dec
mov
jge
mov
inc
popf
or
inc
lea
or
mov
lods
or
fisttpll
fildl
or
inc
std
or
inc
in
push
sub
insl
mov
lcall
xchg
push
adc
inc
rclb
jecxz
jmp
loop
ljmp
lods
ljmp
int
sbb
cmc
mov
xchg
xchg
adc
mov
loop
and
sbbb
or
repnz
ret
repnz
adc
xor
and
and
jae
push
not
lret
mov
subl
adc
sub
and
daa
pop
and
jge
mov
and
sub
and
sub
int
lret
and
sub
and
sub
and
sub
add
add
adc
push
pop
jb
es
and
jb
push
loop
xchg
outsl
add
cltd
and
out
and
loope
jp
leave
call
popf
mov
mov
lahf
lods
or
stc
adc
movsl
add
imul
imul
push
movsl
inc
imul
movsl
pop
imul
inc
std
ja
mov
addr16
loop
ljmp
mov
jno
cmpsl
ljmp
jmp
hlt
jns
pop
cmp
out
cmpsb
cwtl
scas
pop
cmpsb
mov
aas
mov
pop
jle
addr16
sahf
dec
inc
mov
scas
outsl
cmpsl
sbb
sub
mov
sub
and
sub
add
jge
xchg
inc
stos
mov
in
stos
sarl
mov
icebp
pop
add
mov
xchg
fdivrs
imull
cmp
out
and
ljmp
cld
mov
fisttps
push
sahf
gs
es
adc
out
and
out
and
out
and
out
and
out
and
jno
pop
out
and
cltd
movsl
imul
movsl
mov
mov
fcomi
ret
jo
leave
inc
xchg
roll
or
lahf
cmpsb
or
mov
je
adc
jge
cmpsl
sub
stos
sub
jge
mov
mov
sub
popf
faddl
inc
ret
pop
or
jae
mov
dec
mov
add
adc
xor
sbb
sub
and
and
sub
pop
and
inc
cmpsl
xchg
push
movsl
mov
xchg
movsl
mov
test
popa
add
repnz
cli
xchg
imul
in
imul
sbb
imul
sub
movsl
jno
push
movsl
jns
dec
movsl
push
imul
inc
imul
xchg
push
movsl
popf
jg
xlat
xor
cmc
add
orb
in
mov
or
stos
and
stos
pop
data16
push
data16
dec
pushw
stos
inc
push
mov
fimuls
mov
setb
mov
jae
mov
fistpll
lods
loop
ljmp
mov
jmp
loop
ljmp
imul
xor
jecxz
ljmp
daa
ljmp
js
push
out
out
lods
std
xchg
rclb
xor
leave
cltd
mov
je
mov
test
xor
mov
inc
jecxz
and
or
inc
cmp
jmp
or
sub
pop
ret
inc
or
dec
or
inc
xchg
add
inc
mov
jne
cmpsl
or
inc
repz
inc
decl
sub
sahf
out
mov
mov
dec
ffree
aad
cmc
adc
scas
xchg
cmpsb
or
cmpsl
cmpsb
fs
mov
cmpsb
aam
scas
and
xchg
and
cmp
adcl
xchg
fwait
movsl
mov
out
mov
dec
jmp
jmp
push
movsl
dec
add
sub
push
movb
pop
pop
lret
inc
lret
xchg
leave
mov
movsb
leave
mov
jle
adc
mov
imull
mov
mov
test
cmp
sti
test
nop
mov
jns
scas
or
gs
or
stos
cmp
stos
push
data16
insl
pop
out
lds
notl
inc
out
mov
stc
ss
imul
cmp
push
and
movsb
xchg
lock
leave
ret
cld
imul
add
cwtl
xchg
mov
cmp
sbb
and
mov
fiaddl
rclb
mov
fnstcw
arpl
out
xchg
push
loopne
in
scas
xor
outsl
test
not
cmp
add
jecxz
push
inc
jo
leave
cmp
sub
and
cwtl
and
and
pop
fnstenv
arpl
and
rol
dec
clc
shlb
in
in
push
inc
nop
gs
adc
cmp
or
loopne
push
out
push
dec
inc
push
inc
outsb
movsl
mov
mov
mov
jne
dec
jmp
lahf
or
pop
pusha
mov
fadd
out
in
mov
cmpsl
es
insl
mov
fucomp
out
std
jl
out
jnp
ja
orl
sahf
fwait
into
pop
sub
pop
mov
and
and
or
mov
cli
sbb
sub
cmp
je
push
cmp
mov
cmc
out
push
pop
faddl
int
or
add
cmpsl
push
ret
imul
mov
mov
fs
stc
xor
hlt
inc
cli
iret
lds
in
in
mov
outsl
xchg
fstpt
ret
mov
pop
in
addr16
aaa
out
frstor
daa
inc
push
and
push
out
push
mov
outsb
xor
loopne
jnp
js
cli
mov
push
lods
adc
fs
mov
data16
dec
orps
or
fstpt
shrl
cmc
push
iret
jcxz
xor
or
pop
or
push
pop
inc
and
jl
sbb
stos
xor
or
jmp
mov
popf
cwtl
int
popa
stc
iret
and
adc
scas
mov
icebp
mov
mov
test
ja
mov
lods
cmp
ljmp
and
jno
scas
jmp
hlt
sub
add
mov
out
cmp
cmp
std
inc
pop
jle
int3
data16
lahf
sbb
add
jmp
daa
adc
lret
push
loopne
xchg
lods
mov
popf
insb
cmp
mov
jbe
push
jecxz
xchg
and
add
mov
xchg
mov
js
pop
out
rorl
sbb
fldt
cmp
cmp
mov
jl
push
jns
jge
mov
push
fimull
outsl
xor
xlat
jb
jp
mov
call
mov
lret
sti
mov
pop
ja
adc
push
push
loopne
repz
push
add
mov
cmp
repnz
aaa
sbb
push
int3
pusha
push
sarl
push
mov
mov
mov
xchg
cmp
mov
into
xchg
rclb
xchg
cltd
mov
imulb
orl
call
fiadds
dec
dec
call
call
ja
lahf
cli
mov
lret
sub
repnz
aad
fistps
mov
daa
mov
cmp
push
mov
push
sbb
push
pop
dec
ret
lea
movsl
aad
cmc
movsl
movsl
in
in
loop
icebp
xchg
xor
mov
push
mov
addb
push
jns
dec
shr
rorl
and
mov
cmp
test
dec
in
popf
cmp
xor
fwait
or
stc
nop
mov
sbb
xor
sub
push
add
ds
cmp
data16
inc
data16
xor
imul
cltd
push
movsl
lods
mov
ret
sbb
mov
jg
lret
std
dec
sbb
add
mov
xchg
and
mov
pop
lcall
fucomp
loop
ljmp
jg
nop
clc
insb
add
shlb
adc
mov
cli
push
dec
ljmp
mov
sbb
leave
cmpsl
shl
mov
int
jl
sub
ljmp
inc
cmp
jno
gs
test
add
xor
mov
movsl
cmpsb
std
imul
clc
lahf
pusha
sbb
xchg
xor
andl
stos
sub
jp
sbb
jb
push
nop
or
mov
lods
cmp
push
lret
push
leave
mov
dec
lret
pushf
xchg
lds
cmpsb
jmp
les
popl
jmp
mov
ret
shrb
mov
daa
insb
mov
ret
test
lds
dec
mov
xchg
movb
xchg
leave
mov
movsb
xchg
into
xchg
push
popa
jnp
mov
sahf
dec
sbb
sub
mov
imul
pusha
ret
jne
pop
mov
xor
icebp
in
or
xchg
loope
daa
fcmovnbe
inc
ja
lds
push
int
jge
out
and
imul
dec
mov
out
out
pop
cli
inc
jno
or
lahf
or
mov
je
cmpsl
jl
dec
cmp
dec
push
sahf
gs
test
mov
mov
ja
dec
icebp
xor
dec
sbb
jmp
xchg
repz
mov
jmp
in
mov
mov
sti
cmp
push
cmc
add
cmpsl
outsl
pop
sbb
adc
push
nop
mov
je
push
mov
ret
andl
fmull
or
lret
pop
mov
clc
mov
jge
xor
inc
imulb
outsb
cltd
mov
add
mov
inc
std
pop
sub
adc
mov
aad
adc
lcall
scas
lock
add
fidivl
es
mov
aam
shr
push
insl
movsl
das
dec
or
inc
xchg
repnz
push
xlat
arpl
sbb
std
pop
loope
xchg
pop
ja
xchg
cmp
mov
gs
test
and
sbb
arpl
inc
lahf
arpl
loope
xchg
scas
out
cmp
pop
xchg
gs
mov
cld
in
jecxz
mov
pop
out
cmp
push
mov
ds
ror
cmp
mov
test
js
sti
popa
jo
pop
cltd
cmp
push
dec
sbb
lahf
scas
adc
xchg
cmp
stos
xor
inc
add
mov
sbb
bnd
add
movsl
repz
mov
push
popf
pusha
loopne
add
push
jno
aam
insb
jns
mov
cld
inc
jbe
test
lods
sub
hlt
mov
sub
mov
cmp
mov
bound
mov
sbb
mov
js
insl
lock
sub
adc
or
and
aad
jb
lds
pop
movsl
mov
test
aad
fwait
cltd
pusha
loop
ljmp
stos
ljmp
popa
lret
mov
cmp
xor
push
pop
mov
cs
ret
sbb
shrb
fdivrl
les
mov
mov
dec
sarl
js
inc
popa
and
xor
out
hlt
arpl
mov
clc
xchg
mov
push
or
jecxz
pop
stos
sub
sbb
pop
call
jae
inc
and
sub
cmc
stos
lock
mov
dec
push
rorl
sbb
stos
sub
jecxz
gs
push
cmp
aad
add
arpl
mov
pop
xor
mov
popf
xchg
leave
aad
sahf
aaa
adc
in
dec
mov
pusha
das
shlb
bound
sub
and
or
sahf
test
dec
lea
dec
inc
int
xchg
xchg
repz
xchg
and
sub
and
sub
and
sub
adc
dec
mov
pop
pop
jnp
sub
imul
loop
ljmp
add
fs
mov
mov
imul
out
push
cmc
das
outsb
lret
leave
inc
cmpsl
xchg
push
jae
or
cmp
jge
push
dec
movsl
pop
adc
shll
shlw
add
xchg
movl
or
fists
arpl
iret
and
mov
and
shrl
or
mov
inc
fisttpl
sub
lods
jecxz
inc
test
or
cmc
sbb
filds
les
fnstcw
jns
fistps
xchg
mov
je
add
push
cmp
cmp
mov
aaa
mov
mov
push
push
std
dec
iret
aas
ret
popf
or
cmpsb
push
lahf
add
gs
xchg
mov
jl
shl
sbb
icebp
cmp
lock
loop
pop
or
loop
xchg
sub
ds
and
pushw
push
fsubp
fnstsw
fists
jns
imul
mov
loope
fistpll
mov
xchg
jns
ds
or
add
enter
pop
fstps
fsubrs
sbb
movsb
in
cmp
dec
push
sbb
stos
adc
stos
or
mov
mov
or
jne
stos
push
data16
dec
mov
rorb
iret
cmp
dec
add
push
out
inc
sahf
fs
out
sub
imul
hlt
mov
lahf
adc
and
in
test
pop
cmp
xchg
sub
rcrb
push
adc
or
jns
push
add
jecxz
and
les
inc
or
cmp
cmp
sub
push
fdivrp
lea
insl
or
sti
pop
dec
test
dec
mov
aaa
add
mov
or
jno
leave
fcoms
repz
cmp
mov
mov
push
loop
fsubs
out
push
add
lods
nop
xor
aas
jp
jl
or
xchg
data16
mull
jno
data16
popa
data16
mov
and
pop
repnz
in
inc
cli
lret
lds
ret
shlb
cmp
stc
add
mov
popa
push
lea
add
xlat
stc
sti
leave
inc
sbb
xchg
cwtl
mov
inc
or
aad
repnz
add
dec
mov
jne
cmpsl
xor
cmpsl
lods
mov
repz
gs
scas
xchg
and
and
cld
scas
and
jo
push
js
dec
pop
xchg
loope
mov
pop
test
mov
fs
cmp
fistl
addl
lahf
insl
int3
sti
sub
adc
xor
push
daa
popa
std
scas
data16
mov
loopne
inc
movsl
sbb
adc
jle
or
mov
mov
push
orl
inc
pop
mov
mov
pop
xchg
test
iret
lret
lods
sarl
push
jae
movsl
cmp
xchg
pop
push
scas
push
jno
adc
lock
jmp
lahf
xchg
test
test
sub
mov
enter
sub
mov
loope
adc
sub
xor
mov
mov
lret
call
fxch
aas
int3
fbstp
adc
les
mov
pop
mov
decl
stos
pop
and
xchg
repz
dec
and
ja
cmp
ljmp
add
arpl
ret
outsl
cmp
and
mov
and
cmc
jmp
es
loope
mov
out
int3
repnz
ror
leave
pop
mov
add
notl
xchg
icebp
push
ja
shl
push
std
dec
repz
sub
mov
mov
cwtl
mov
int3
out
inc
pop
ret
push
mov
repnz
loopne
stos
sub
sbbl
inc
add
cmp
cmpl
jnp
inc
pop
push
mov
sahf
movswl
mov
shlb
mov
cmp
scas
fisttpll
inc
fsts
xor
int
sub
inc
jmp
dec
stos
rclb
rclb
scas
adc
xchg
dec
aad
pop
sahf
daa
pop
mov
xor
lea
push
and
jne
inc
test
fdiv
movaps
jno
nop
test
dec
enter
mov
dec
addr16
add
xor
out
push
mov
jmp
gs
mov
mov
jne
and
xchg
xor
mov
icebp
sbb
repnz
fsubs
pop
pop
lret
loopne
sarl
and
fsubr
jecxz
ljmp
adc
mov
sbb
sub
adc
int3
fwait
je
std
jo
jg
in
inc
test
push
sti
imul
add
imul
or
out
and
and
sbb
rcrb
pushf
sub
xchg
jb
jg
mov
pop
aad
loopne
or
pop
adc
lods
es
cmp
sbb
sub
or
jp
in
inc
jge
outsl
movsl
test
adc
icebp
insl
andb
mov
aad
mov
imul
daa
ja
mov
test
sub
test
xor
scas
mov
shl
pop
aas
nop
xor
aad
aaa
push
in
insb
frstor
mov
ja
add
mov
es
les
ret
xchg
das
adc
ljmp
loop
mov
mov
or
int
inc
pop
mov
add
iret
jno
call
mov
sbb
repz
rclb
scas
fldenv
int3
jge
mov
sbb
lock
imul
jp
jo
das
mov
out
jg
add
fdivs
dec
fcmovb
cmp
movl
ret
sbb
mov
test
pop
lret
mov
in
loopne
dec
icebp
mov
pop
adc
mov
pop
adc
cmc
repnz
mov
add
mov
fsubl
sarb
ljmp
cmp
mov
mov
or
sub
scas
loope
iret
and
cmp
daa
fnsave
xchg
int3
sbbl
sar
cwtl
aad
nop
xor
iret
mov
mov
push
fwait
cltd
and
ret
aaa
add
das
aaa
movq
fstl
mov
fidivrl
mov
jo
in
fs
sbb
and
adc
mov
mull
movsl
lret
cmc
inc
push
xchg
lahf
daa
xchg
out
pop
loop
into
add
ret
stc
push
cwtl
mov
sub
jecxz
aas
fnstsw
jmp
pop
in
adc
xor
lcall
icebp
dec
fsincos
outsl
jo
push
nop
movsl
inc
imul
add
sub
lret
sub
and
out
mov
push
mov
add
dec
sub
add
push
pop
xor
aaa
push
push
push
xor
mov
adc
mov
addl
inc
sub
xchg
cmp
das
aas
sti
arpl
xchg
pop
fldz
jp
mov
in
mov
add
insl
xchg
lcall
les
push
andl
les
cs
lss
ror
push
pop
test
and
cmp
fisttpll
fidivl
add
mov
jle
addr16
insl
pushf
or
xor
cmp
fisttpll
sub
cmova
testl
or
mov
jae
mov
or
xor
daa
dec
ja
pop
and
jnp
dec
ds
inc
xor
aas
sarl
lcall
rcl
fwait
xchg
push
push
loop
rolb
dec
daa
sbb
sub
test
popf
incl
and
push
mov
xor
adcl
mov
mov
pop
ss
cmp
in
scas
icebp
lods
nop
jecxz
stc
test
mov
sarl
mov
adc
or
mov
cmc
mulb
addr16
pop
clc
and
lock
ss
in
add
jbe
fmuls
sarb
scas
sub
out
xor
mov
xchg
stos
mov
popf
fisttpl
nop
mov
outsl
in
arpl
xor
push
repz
push
adc
les
ja
stc
add
add
jbe
fs
jle
cld
pop
mov
cmpsl
loop
inc
jno
mov
push
fwait
dec
mov
sbb
and
dec
and
adcl
cwtl
pop
add
rorl
jnp
xchg
movsl
mov
jae
mov
push
mov
push
jle
lret
sbb
movsl
inc
imul
rcrb
add
cli
ds
jp
xchg
cmp
rcr
jge
js
scas
sub
int
mov
aaa
mov
dec
ds
pusha
mull
pop
xchg
in
mov
push
pushf
push
pop
repnz
or
dec
add
in
sub
cmpb
lods
or
cs
pop
imul
push
pop
pop
inc
jnp
pop
mov
mov
xchg
xchg
jmp
xchg
in
or
mov
mov
mov
test
mov
pop
cmpsl
dec
cli
pop
xor
daa
mov
dec
stc
data16
loope
adcl
cmp
mov
xor
sbb
stc
xchg
inc
rorl
lea
xchg
mov
imull
mov
pop
mov
add
test
mov
orl
fbld
roll
scas
push
ret
cmp
jge
mov
jp
jae
or
jne
mov
lret
rclb
iret
jge
imul
std
push
xchg
testb
mov
notl
and
add
cmp
push
ret
cwtl
fdiv
inc
mov
lcall
or
stos
les
pop
mov
adc
loope
push
int3
inc
imull
mov
ficompl
mov
cmpsb
shl
mov
hlt
ficoml
cmp
loopne
movsl
out
cmp
repz
sub
sub
push
jge
dec
inc
test
popa
imul
cmp
iret
mov
enter
pop
mov
clc
fsubrs
cmc
shl
or
in
cmp
or
mov
mov
stc
or
dec
inc
mov
in
les
mov
cmpsl
leave
stos
dec
scas
xchg
das
pop
popf
in
or
es
and
or
cmpsl
rcrb
ret
imul
rcrl
outsl
fs
ljmp
loope
lahf
dec
mov
ds
dec
lds
insl
or
test
loopne
cmp
insb
sub
xchg
lret
dec
scas
test
insl
push
xchg
test
fxch
addr16
add
push
jp
dec
pop
add
inc
adc
leave
scas
repz
repz
mov
cltd
hlt
jae
imulb
icebp
ljmp
fiaddl
mov
push
test
scas
ja
jno
add
icebp
and
dec
mov
push
dec
das
imul
mov
sub
pop
imul
pop
jno
dec
cmp
jmp
jae
test
xlat
loope
sub
jno
and
sub
imul
imul
add
out
roll
sarl
aad
lret
and
lret
out
loope
jmp
pusha
sub
mov
sbb
roll
lea
test
xchg
fistpl
aad
push
cmp
jp
fwait
loop
sbb
fcomps
test
mov
add
fs
push
jae
push
mov
adc
push
sbb
fwait
mov
jl
mov
in
data16
pop
push
aam
xor
dec
lret
stos
dec
sti
push
andl
and
int3
sub
mov
ret
or
dec
jnp
filds
mov
add
icebp
pop
in
push
sti
or
ret
dec
jl
push
push
popf
push
out
jmp
not
jg
inc
pop
imul
sub
and
ja
cmpsb
push
arpl
cmp
pop
popa
aad
sbbb
add
pop
sbb
mov
dec
and
xchg
jecxz
mov
sub
sub
test
cmp
mov
out
mov
pop
xor
adc
cmp
lret
gs
xlat
lahf
loopne
call
data16
jae
ljmp
inc
les
maskmovq
mull
les
je
lods
and
fisubrs
mov
sbb
in
add
xchg
movsb
into
pop
rorb
add
hlt
adc
pusha
and
pop
mov
lahf
leave
xor
jne
sti
inc
or
lods
ss
es
sub
cmpsl
adc
xchg
or
push
rorl
fmuls
xorps
and
add
xchg
sti
xor
xchg
jge
mov
stc
add
test
sbb
pop
cmp
push
jl
xchg
inc
lea
test
xchg
ljmp
jg
xchg
adc
dec
in
in
ficoms
and
jb
mov
cmpsb
pop
add
xchg
loope
xchg
into
scas
inc
or
mov
xor
enter
stc
add
sub
sbb
push
inc
inc
cmp
out
mov
sbb
js
cmpsb
hlt
mov
stos
ret
out
adc
int3
nop
loope
adc
lahf
or
dec
cmp
mov
mov
orl
daa
andb
jno
outsb
push
movl
sar
incl
mov
sbb
stos
xchg
inc
sbb
sarb
movsl
adc
pop
mov
cmp
ret
popl
shlb
pushf
sarb
xor
out
and
out
nop
xchg
inc
mov
imul
xchg
mov
out
pop
adcl
cmp
outsb
sub
mov
iret
mov
ficompl
jg
cwtl
and
clc
sbbl
and
adc
mov
and
xor
mov
cmp
push
lods
popa
xlat
daa
adc
lahf
cmc
scas
cmpb
fisubs
popa
sub
xchg
adc
and
lcall
xchg
xor
jmp
idivl
test
out
push
fstl
sbb
pop
int3
xor
aas
outsb
int
sub
cmpsl
aad
orb
xchg
xchg
into
cmp
daa
jns
inc
mov
and
repnz
stos
cwtl
orl
das
rorl
lret
dec
push
lods
xchg
loop
cmp
prefetch
scas
aad
push
in
lahf
pop
mov
or
mov
inc
popf
lods
sbb
push
ds
xchg
mov
jg
mull
scas
lahf
or
jg
push
imul
pop
pop
divb
xchg
push
inc
nop
cmpb
sbb
inc
sub
jae
mov
pop
dec
adc
add
test
mov
mov
adc
cs
sub
test
insl
repz
lea
arpl
pop
mov
pop
imul
jo
shll
adc
add
orl
mov
and
or
repz
sahf
xlat
jne
aaa
or
xor
ljmp
ret
cmc
ret
adc
cmpsl
loop
adc
nop
add
cmp
sub
xchg
test
add
sbb
mov
insb
shr
jp
xchg
out
and
imul
add
mov
xchg
mov
push
iret
push
jbe
shlb
imul
push
or
aad
icebp
popf
js
jecxz
ret
roll
xlat
ss
das
adc
iret
xor
out
stc
adcb
pop
call
ret
xor
sbb
data16
loope
addr16
push
ja
stc
cwtl
and
test
push
inc
sarb
int
mull
cmp
pusha
or
push
lods
mov
cwtl
in
jmp
cmpsl
jg
adc
push
cmp
mov
mov
or
or
ret
or
push
out
pop
aas
push
test
push
popa
lods
nop
fwait
rcrl
std
ljmp
cs
pop
jnp
aas
cmp
push
xor
ficomps
cmp
in
add
xchg
xchg
inc
lret
adc
clc
sahf
dec
loopne
dec
mov
mov
mov
aas
mov
xor
sub
icebp
add
sarl
imul
mov
subb
or
movsl
or
in
and
in
push
cli
das
lods
jp
inc
pop
inc
jno
push
lock
jle
or
out
xlat
daa
cmpsl
dec
pop
pop
mov
mov
jnp
sbb
jnp
ret
or
in
test
pop
xor
cmp
imul
int3
lret
cs
cwtl
cmc
js
mov
test
jmp
cmc
bound
std
imul
out
inc
cld
pop
rorl
mov
cmc
cld
lret
dec
mov
xchg
xlat
sub
sub
pop
mov
hlt
lods
aam
mov
in
adc
adc
push
jge
imul
dec
cwtl
jns
scas
rcl
fs
add
cli
in
pop
sub
arpl
nop
cltd
and
inc
jecxz
mov
loope
mov
mov
push
sbb
jmp
cli
inc
mov
mov
mov
repz
push
push
pop
lahf
rcll
cmpsl
xchg
xor
scas
nop
xchg
inc
es
roll
iret
push
shlb
sub
mov
jno
stc
mov
sub
in
push
cli
jl
cmpsl
pop
test
xchg
xchg
mov
adc
jecxz
lods
cmpsl
adc
xor
and
cmp
mov
xor
xor
xlat
xor
push
or
sub
enter
or
push
sbb
adc
jnp
ret
iret
daa
mov
add
arpl
out
push
push
push
sbb
repz
lcall
mov
cmp
mov
nop
mov
rcrl
fidivrs
cmc
andl
mov
aaa
ljmp
int3
popf
pop
jl
test
xchg
dec
ljmp
jnp
mov
daa
arpl
int3
xlat
daa
pop
ljmp
gs
and
cmp
jl
mov
fstpt
imul
push
or
xor
xor
test
push
and
sbb
push
cmp
das
fsubrp
dec
hlt
jb
shl
hlt
movsl
push
or
sbb
cmp
push
sub
jg
insb
cli
pushl
jne
icebp
mov
movsl
pop
fists
mov
pushf
scas
cmp
xchg
and
mov
push
fildl
cmc
mov
out
jb
pusha
ficoms
dec
and
jl
das
int3
and
add
mov
add
adc
lret
bt
pop
lea
sbb
mov
ficoml
push
cld
jmp
in
ss
movsb
cmc
sti
cmp
outsb
push
mov
aam
xchg
cmc
pop
and
arpl
pusha
jl
jmp
push
jno
pop
dec
add
and
setno
mov
xor
leave
outsb
sbbb
cmpsl
int
leave
mov
pop
and
jl
push
cmp
enter
or
lds
ror
add
inc
add
jl
push
stos
jae
push
xchg
cmp
aad
int
inc
push
mov
cmp
pop
les
xor
mov
pushf
pushf
xor
sti
lds
test
test
lret
clc
stos
mov
adc
lcall
pop
nop
xlat
fucom
shrl
cmp
cli
cli
jmp
fs
pop
dec
ss
push
mov
jnp
xchg
pop
sar
xchg
xor
cmp
inc
xor
mov
out
nop
sub
dec
cmp
mov
xchg
sbb
inc
call
lret
ja
cmpsb
out
cltd
shl
cmpsl
adc
decl
imul
out
call
sub
cli
cmp
add
mov
xor
sub
jo
mov
sbb
push
cmpsb
jno
sbb
ror
mov
jmp
and
inc
loope
jbe
data16
adc
sub
xchg
lcall
mov
cmp
cmp
push
jnp
mov
ret
addb
scas
push
fadd
and
mov
xorb
cmp
jl
sub
jmp
repz
iret
dec
fildl
xlat
sbb
mov
dec
ret
movntq
cmpsb
adc
pop
lcall
sub
mov
cmp
jbe
cli
pop
xchg
push
xchg
popf
mov
or
mov
fstps
out
jnp
sbb
mov
les
rclb
xchg
push
out
push
fstpl
das
xchg
mov
inc
jae
pop
rcll
adc
add
cmpsl
sbb
xchg
mov
in
sbb
ret
inc
sti
mov
and
mov
jno
insl
addr16
outsl
xchg
mov
jnp
movsl
cmp
divl
mov
bound
into
mov
mov
mov
xchg
mull
iret
subl
and
fistpl
xor
or
hlt
notb
repz
in
inc
dec
imulb
add
fnstenv
mov
push
jmp
sub
mov
in
int
sub
outsb
mov
mov
sub
sub
jmp
je
test
adc
jnp
lcall
mov
xchg
fistl
and
cwtl
shr
rcll
call
mov
mov
sub
movsl
repz
iret
xchg
clc
ljmp
fldt
leave
lods
dec
gs
pushf
add
cwtl
in
jl
in
cwtl
cwtl
pop
fwait
lock
sub
jl
sub
inc
push
in
sub
fidivl
xor
inc
lret
fimuls
ret
sarl
lcall
scas
js
jnp
out
jno
ss
push
cld
sbb
pop
and
pop
or
imul
lods
loopne
inc
out
imul
outsl
lret
lret
ret
dec
mov
das
ret
dec
arpl
pushf
cli
sarl
jae
pop
adc
cmpsl
mov
stc
add
cmp
cltd
xchg
out
jnp
add
fidivs
adc
inc
popf
test
dec
stos
and
pop
idivl
inc
jns
adc
aas
xlat
add
mov
pop
adc
and
cltd
call
pop
pop
lea
inc
mov
sub
mov
inc
or
jo
inc
pop
adc
xor
push
push
adc
and
sbb
and
into
mov
cmp
push
stc
push
out
or
add
fwait
sarl
jle
mov
cmovae
fldl
push
shl
adc
cmpb
inc
daa
lret
inc
imull
adc
cltd
pushf
cmp
pop
mov
mov
xchg
inc
cmp
pusha
mov
movsl
imul
rcrb
mov
and
addl
lock
leave
leave
std
xchg
enter
adc
scas
adc
sub
jl
pushl
cmp
pop
sub
pop
stos
jne
mov
pop
and
test
pop
mov
cltd
cmp
adc
scas
test
test
and
push
stos
loope
cmp
ret
jl
xchg
shll
test
sub
jns
sub
or
dec
jbe
pop
cmp
fs
mov
scas
xchg
mov
xchg
fnstenv
xor
push
xor
out
xor
fdivrs
mov
pop
mov
push
int
mov
loope
mov
cltd
inc
mov
test
mov
out
test
xor
movsl
outsb
adc
jmp
mov
sub
and
or
dec
mov
cmpsb
fstpl
mov
adcb
pop
xchg
sti
mov
or
sbb
outsb
xchg
je
aaa
push
lret
mov
cmp
in
jge
rclb
push
jno
fs
mov
nop
xor
mov
sbb
or
nop
movsl
adc
cs
push
mov
jno
out
mov
je
movsb
inc
loope
add
push
pusha
mov
loopne
xchg
push
push
outsb
clc
bound
sbb
fdivr
nop
cmpl
mov
sbb
adc
jl
js
mov
sti
xor
fstp
fildll
mov
xor
dec
bound
push
xchg
mov
bound
idivb
les
pusha
lock
mov
sub
mov
out
repnz
pop
xor
leave
in
add
and
shr
ja
pop
lret
mov
outsl
and
xlat
dec
fstl
in
dec
into
cmp
hlt
stc
xor
lahf
dec
lcall
into
inc
xchg
lea
lcall
sub
sti
int3
mov
lret
xchg
xlat
in
sti
int3
lock
aas
xchg
test
dec
mov
jno
xor
adc
gs
push
lods
icebp
mov
icebp
shlb
ss
jne
cmp
pop
inc
dec
pop
inc
dec
add
pop
cmpsb
dec
pop
cmp
sbb
jns
xchg
xor
mov
and
pushw
push
adc
adc
inc
popf
mov
fwait
pop
test
popa
loop
push
jmp
xor
xor
add
xchg
sbb
add
loop
fdiv
sub
pop
xchg
lcall
stc
dec
cmp
ljmp
sbb
iret
cmpsl
into
jg
fnstcw
add
xchg
lret
scas
xor
mov
ja
lahf
es
xchg
cmc
cli
das
mov
inc
popa
lret
movsl
dec
imul
mov
out
mov
pop
cmp
push
mov
dec
push
inc
mov
xor
jne
cmpsl
adc
jno
push
aaa
nop
sbb
loope
imul
xchg
cmp
ja
xchg
dec
mov
fwait
leave
scas
mov
rcr
jns
mov
sahf
sti
jb
fiadds
sub
notl
mov
test
pop
mov
or
pusha
scas
movsl
or
out
mov
hlt
or
int
xor
adc
jmp
cmp
gs
mov
in
xlat
mov
sti
add
mov
fs
das
into
xchg
js
or
and
es
mov
int
rorb
cmp
push
in
jge
pop
or
dec
paddw
jb
jnp
pop
das
shrl
outsl
or
ret
mov
push
mov
adc
mov
mov
ret
fbld
jg
iret
xchg
pushf
sub
and
idivl
notl
sbbb
dec
push
pop
ret
jbe
jnp
bound
lahf
test
out
repz
leave
hlt
pop
xor
mov
push
adc
mov
rcl
pop
jns
push
dec
dec
xor
out
out
cli
cli
and
insl
add
sti
xor
mov
jb
aam
in
adc
movsl
popf
cmpsl
mov
jne
idivl
repz
sahf
jns
xor
aad
jge
arpl
mov
xor
pop
add
adc
out
add
enter
mov
jg
in
mov
ficomps
mov
mov
pushf
mov
stc
mov
pop
repnz
xchg
pusha
mul
xchg
xor
dec
mov
rolb
xor
inc
mov
push
mov
jl
cld
leave
mov
std
out
and
outsl
cmp
je
mov
fsubrs
push
and
lods
push
mov
jnp
mov
add
jbe
mov
lds
xchg
jecxz
fsts
leave
jns
cmp
sahf
movsl
fs
inc
adc
mov
jno
dec
fwait
push
lret
inc
lret
std
sbb
jge
or
sub
dec
dec
jp
addr16
test
mov
and
mov
adc
add
adc
cmp
mov
and
lret
cmc
ds
dec
mov
addb
mov
dec
xchg
and
mov
add
adc
je
push
xchg
pop
jno
mov
notb
fwait
rorl
sub
mov
lret
stc
pop
push
fldenv
jge
fldt
iret
subl
jns
jecxz
dec
inc
aas
fdivrs
fs
lds
mov
cmp
aam
sbb
or
bound
idivb
jmp
inc
sar
imul
dec
movsl
outsl
dec
je
cld
movsl
cmpsb
jo
movsb
hlt
xlat
mov
fldl
push
int
shlb
jge
sub
cmc
jp
out
jp
int3
pop
push
pop
jbe
gs
mov
cmp
inc
fbld
mov
mov
shr
dec
loop
sarb
mov
fdivp
mov
lret
arpl
mov
hlt
xchg
outsb
xlat
xor
sbb
jb
fisubrs
cmp
repz
ds
jle
rolb
pop
jge
andl
dec
xchg
dec
dec
pop
test
sti
add
clc
mov
into
mov
or
rcll
mov
pop
mov
loopne
mov
fistpl
jne
leave
xchg
loopne
cli
and
loop
nop
pushf
std
sbb
cltd
out
out
stos
mov
sub
mov
nop
cmpsl
push
and
pop
mov
rcrl
xchg
mov
xchg
inc
les
mov
pop
iret
pop
mov
or
mov
lock
mov
cmpsl
out
cltd
imul
stos
das
scas
jl
add
jecxz
xor
mull
mov
add
mov
adcl
mov
call
push
mov
mov
mulps
idiv
xchg
scas
cmp
gs
jmp
jns
pop
mov
clc
pop
adc
cmp
repz
lcall
mov
mov
pusha
jecxz
orb
bnd
cli
mov
mov
fld
add
pop
je,pn
in
sbb
repnz
sti
aad
test
cltd
out
mov
mov
clc
leave
addl
push
in
xchg
jns
stos
cld
fsubl
xchg
lds
shl
mov
out
test
into
movsb
add
or
outsb
mov
stos
inc
mov
int
add
aad
in
adc
adc
shlb
test
jge
in
into
fcmovnbe
popf
mov
xor
xchg
cmpsl
pushl
repz
mov
sub
loope
test
test
out
inc
hlt
jnp
fistpll
stc
inc
cld
lcall
repz
add
push
jmp
sar
aam
push
ds
push
xor
mov
jp
push
imulb
in
mov
mov
rorb
jl,pn
inc
or
fs
mov
mov
in
popf
fstpt
pop
je
sub
and
sub
lcall
jnp
pop
stc
call
aaa
pop
jmp
pop
mov
mov
rorb
lock
les
stos
test
insl
jge
js
nop
mov
jg
sub
mov
xchg
cwtl
xchg
xchg
cli
aaa
addl
es
jmp
aas
test
in
pushf
pop
in
lods
aam
xchg
into
cld
stc
mov
mov
jo
mov
mov
inc
shlb
or
add
sbb
fucomi
add
orb
dec
pop
test
repz
dec
sbb
xor
push
leave
sub
jns
or
dec
loopne
inc
adc
push
cmp
cmpsl
sub
gs
lods
dec
push
shl
pusha
ret
pop
push
movsl
jo
jbe
idivl
int
shll
push
jo
pop
push
or
mov
jns
and
ja
aad
jl
push
fnstenv
loope
sub
aam
loopne
xlat
xchg
cmpsl
sbb
into
xchg
sti
aaa
jle
outsb
mov
scas
pop
daa
xchg
adc
jnp
mov
shr
and
push
nop
and
inc
icebp
xchg
insl
jbe
lahf
dec
xlat
ljmp
add
xchg
outsb
mov
sbb
or
cmp
test
jns
push
pop
xchg
mov
cmp
jno
sub
sub
out
aas
sub
mov
das
mov
lret
call
sbbb
movsl
xchg
mov
cld
jp
lds
pusha
adc
popf
sub
ljmp
popa
xor
xchg
dec
mov
or
jmp
data16
cmc
sbbl
stos
jns
stos
icebp
xor
jle
ja
jno
popa
arpl
outsl
mov
sbb
mov
xchg
bound
cmp
push
pop
sub
cmp
clc
push
std
pop
les
push
sub
dec
cmp
aad
dec
inc
jmp
and
xor
pop
loopne
stos
xchg
mov
xchg
les
lcall
xchg
pop
xchg
call
xor
sbb
or
pop
push
mov
sti
mov
jns
movsb
cltd
out
loopne
mov
cmc
mov
and
push
in
in
jb
mov
das
xlat
stos
push
add
xchg
outsb
leave
shll
out
mov
sbb
jg
inc
out
imull
xchg
and
inc
pop
and
fldcw
push
fstl
push
mov
xchg
int3
fisubl
push
mov
iret
mov
aad
in
out
aad
aaa
cmpb
inc
divl
add
in
hlt
pop
cwtl
in
mov
insl
cmp
sar
sbb
inc
mov
pop
aas
jnp
inc
hlt
or
pop
into
outsb
mov
call
les
adc
imul
xor
mov
and
stos
xor
mov
cwtl
and
addr16
outsb
push
imul
rorl
daa
jmp
in
jns
cmp
inc
fisttpll
ja
mov
sub
je
in
sahf
lahf
nop
std
xchg
sub
pop
mov
adcl
cld
xchg
jmp
mov
call
icebp
or
nop
mov
mov
out
dec
push
add
xor
dec
mov
in
push
jg
inc
dec
loopne
or
stos
xchg
loop
or
sbbb
mov
adc
mov
push
pop
popl
rolb
mov
sub
push
daa
mov
inc
stos
andb
mov
mov
dec
lret
test
addr16
sahf
adc
test
xlat
cmp
decl
jns
aad
or
stos
cwtl
add
adc
mov
ret
mov
and
sahf
lock
aad
cmc
inc
jmp
movsl
shll
xor
and
pusha
and
cwtl
xchg
repnz
scas
jl
mov
or
push
popf
dec
out
dec
ja
and
push
ljmp
inc
cmp
repnz
xor
jecxz
cmp
push
adc
lcall
xchg
mov
icebp
jge
mov
adc
out
sahf
jecxz
xchg
or
push
adc
xchg
cmpl
mov
xchg
addr16
lods
or
movsl
or
inc
fisttpll
fisttps
xchg
mov
mov
es
in
xchg
shlb
jge
fwait
mov
xlat
or
loop
ljmp
in
nop
leave
xchg
mov
pushf
out
jle
jae
inc
nop
inc
mov
dec
into
mov
cwtl
jne
mov
fwait
mov
nop
out
int3
cmp
scas
ljmp
fmuls
mov
mov
add
adc
sahf
or
into
inc
sub
fwait
mov
loop
fldt
cwtl
imul
outsl
movsl
and
lock
jnp
aas
ljmp
add
sbb
shrl
pop
and
into
mov
push
das
inc
es
nop
mov
pop
add
divb
add
xor
mov
rorl
ret
data16
xor
mov
cmp
out
ljmp
hlt
je
push
push
xor
jecxz
cmp
pop
push
or
ret
xlat
dec
lcall
pop
loope
or
lea
bound
cmp
or
push
and
ror
mov
ja
cli
jns
mov
xor
jp
fsubl
out
push
pop
mov
cmp
es
rcrl
inc
mov
inc
lods
adc
xor
jb
mov
hlt
movsb
in
call
cmp
push
mov
jno
push
pop
mov
popf
gs
dec
mov
adc
or
jbe
xchg
dec
ss
jb
add
pop
pusha
pop
jnp
adc
out
jge
leave
into
jno
dec
sbb
sub
xlat
xlat
test
jle
jge
mov
and
sbb
shrl
aaa
pminsw
shrb
out
pop
test
mov
aaa
popf
mov
cmp
jmp
ret
xor
fistl
sbb
add
sbb
fwait
icebp
jmp
ficompl
sti
cmp
testl
pop
movsl
icebp
lods
mov
in
adc
xlat
dec
jno
mov
jp
sub
lret
and
or
mov
sub
pop
xor
mov
ficoml
daa
and
dec
lods
mov
cmp
adc
xor
test
loope
sbb
inc
xchg
sub
pop
je
pop
pushf
call
and
das
push
ret
fldl
scas
addr16
and
mulb
jp
mov
jnp
lock
movsl
pop
sub
push
add
xchg
fsubr
or
dec
mov
ret
sbb
imul
ret
adc
aas
lods
xchg
sub
xchg
xor
js
out
loopne
fcmovbe
aam
pushf
push
and
pop
fiaddl
test
out
pop
aaa
lock
sbb
aas
int3
push
or
sbb
inc
xor
es
test
shrl
pop
shl
pop
cmp
jl
pop
add
inc
lret
loop,pn
rorb
pop
mov
lods
inc
and
fidivrs
mov
pop
jle
pop
sbb
cli
push
pop
and
xor
sbb
fstl
ret
dec
rclb
mov
mov
loope
scas
dec
dec
mov
fmulp
adc
mov
outsl
mov
loope
and
mov
adc
mov
jo
dec
jns
mov
and
xlat
shlb
ds
or
cmp
add
xchg
pop
hlt
xchg
lahf
mov
clc
mov
aaa
ljmp
cmpsb
xor
add
mov
int3
loop
dec
iret
or
sub
mov
leave
sub
add
or
arpl
sahf
cmp
mov
mov
pop
imul
fidivrs
inc
sbb
std
or
int
sbb
cmp
pop
or
dec
pop
jecxz
add
leave
aad
stos
andl
pop
lret
fwait
xchg
test
fisttps
ficoml
jns
mov
out
and
xchg
lahf
dec
or
in
cmp
cmp
push
mov
mov
imul
arpl
jno
leave
aas
pop
add
inc
mov
cmp
mov
xor
not
cmc
inc
push
daa
daa
int3
mov
addr16
jmp
pop
std
cmpsb
lret
push
dec
nop
roll
jno
jmp
jo
int
mov
dec
clc
inc
and
add
xchg
xor
stc
push
pop
dec
add
sar
mov
mov
in
std
mov
aad
clc
rcrl
rorb
mov
mov
pop
xor
jno
rcl
sub
mov
sub
bound
int3
subb
jno
mov
mov
inc
xchg
inc
add
cmpsb
or
jbe
in
push
leave
inc
jmp
andl
jp
sar
xchg
cmp
cmp
mov
cmp
loop
loope
adc
mov
sub
popa
mov
lods
addb
stc
insl
inc
push
mov
adc
sub
je
jae
dec
xor
test
in
jae
xchg
xor
mov
test
cmp
popf
and
cmp
das
jmp
xchg
cmp
and
into
in
dec
jbe
adcl
inc
mov
pop
je
jnp
sbb
arpl
lahf
mov
jne
xchg
lds
cmpsb
out
iret
loop
xchg
movl
std
frstor
push
push
nop
jb
sti
mov
sub
leave
xchg
notl
or
adc
xchg
mov
xor
out
xor
jo
push
leave
jns
pop
std
xchg
stos
call
popa
jge
add
xchg
xor
pop
sub
sbb
xor
clc
sub
shr
jge
loopne
jecxz
sbb
mov
cmp
das
cltd
mov
jmp
shrb
repnz
outsl
sbb
cld
sti
mov
shll
jmp
xchg
jmp
dec
fimuls
cld
lahf
and
mov
bound
repz
dec
fstps
lahf
mov
mov
cmp
loopne
mov
testb
cltd
fs
lods
inc
popa
mov
pusha
aas
add
mov
push
mov
jnp
adc
adc
lret
pop
loope
mov
daa
mov
pop
orl
lret
push
mov
sub
arpl
jl
push
pop
jmp
mov
or
lods
mov
pop
mov
in
jge
inc
repz
sub
jnp
push
out
cs
insb
mov
pop
lds
jmp
mov
popa
mov
popf
sbb
pop
in
gs
lock
fstpt
rcl
and
stos
out
xor
sbb
cmp
mov
jmp
in
aaa
push
jns
mov
iret
adc
call
pop
mov
jl
add
sub
dec
xor
arpl
jp
push
and
xor
sbb
lods
movsl
cwtl
push
in
dec
jg
pusha
nop
outsl
mov
in
lret
aas
aaa
adc
jo
mov
scas
push
sbb
mov
push
jne
daa
xor
rcll
mov
and
ljmp
shrl
cmp
leave
aaa
mov
jmp
xor
jne
gs
fucomp
icebp
adc
adc
adc
dec
repnz
call
es
movsl
pop
push
ss
cltd
pusha
mov
sbb
les
loop
push
in
cmp
sbb
mov
mov
lea
dec
mov
xchg
dec
frstor
clc
push
cmpsb
in
adc
fwait
ss
ja
pushf
xor
gs
xchg
cmpsl
and
jae
icebp
dec
xchg
pop
mov
or
pushl
shlb
shll
orb
cmp
adc
pop
mov
mov
and
into
or
addl
iret
mov
mov
leave
pop
in
jo
arpl
insl
inc
stos
bound
shl
loop
inc
nop
jge
out
push
dec
cmp
inc
ret
enter
sar
xchg
clc
neg
mov
je
mov
mov
fldcw
loope
lods
jns
pop
sub
jns
mov
xchg
leave
xlat
shrl
sti
dec
call
or
xchg
movsl
xlat
and
ss
jg
mov
sar
cmpsb
divl
xchg
test
xchg
mov
imul
push
mov
cmpl
aaa
push
clc
aas
adc
mov
xlat
mov
pop
nopl
pop
and
cld
popa
xlat
adc
fistps
mov
inc
mov
test
fdivrp
out
ffreep
pop
aaa
push
fisttps
mov
mull
shl
and
lret
push
out
outsb
pop
out
fistpl
sbb
clc
sub
add
loope
sub
jnp,pn
lret
adc
dec
and
mov
push
mov
das
fiaddl
out
pop
subb
mov
loop
pop
or
jno
sub
lods
test
dec
add
gs
cmpsl
aam
out
cltd
push
push
scas
adc
inc
jbe
mov
sbb
and
lock
jg
xlat
inc
mov
xchg
mov
repz
or
jle
std
dec
xor
fdivrs
out
aaa
mov
xchg
xor
push
xor
ret
andb
jns
mov
xchg
lahf
mov
pop
mov
sub
xchg
jmp
data16
std
aas
xlat
or
pop
push
mov
cli
stos
inc
mov
repz
push
outsl
inc
xchg
adc
test
rcll
mov
mov
xlat
idiv
scas
icebp
mov
mov
fnstsw
and
dec
xor
neg
fiaddl
mov
lds
push
subl
aaa
jmp
bound
xchg
and
or
mov
cmp
mov
call
mov
das
dec
add
xchg
xchg
push
inc
nop
pop
in
pop
lahf
in
testl
push
es
jecxz
fdivs
lea
nop
jae
xlat
daa
stos
push
test
pop
adcb
out
sarl
stos
sbb
cmpsb
movsb
mul
push
fsubs
pop
ss
pop
adc
ss
pop
dec
sti
cmpl
aam
jmp
push
cmp
lcall
mov
enter
ljmp
cltd
inc
dec
pop
stos
lods
adc
into
cs
or
cmp
mov
int3
mov
arpl
cld
pop
in
inc
mov
mov
loope
out
ds
je
arpl
sbb
out
and
sbbl
in
dec
loope
dec
mov
sub
out
sub
mov
inc
cmp
mov
adc
gs
xchg
fists
ror
mov
je
sub
fldl
fs
xchg
xor
push
je
shlb
add
mov
test
fldl
add
lods
jge
push
push
push
out
push
jno
jge
add
aad
fildll
shr
das
push
aad
lods
push
dec
jno
dec
sarl
mov
pop
push
sub
and
push
shl
mov
xor
jo
mov
xchg
loope
sbb
push
sub
lods
cmpsl
inc
fidivrs
jns
lods
push
shrl
in
pop
mov
in
sub
push
jmp
arpl
sbb
mov
inc
jno
xor
xchg
and
stc
test
rcll
adc
mov
insl
sahf
pop
add
or
addl
or
stc
cmp
jb
push
xor
test
or
fst
jae
adc
repz
idivl
inc
in
and
lahf
fwait
ja
push
daa
icebp
int3
and
xchg
mov
fs
pop
inc
daa
mov
jl
mov
mov
bound
or
leave
gs
mov
xor
xchg
pop
lea
jne
push
mov
and
mov
jg
ds
or
test
roll
push
xchg
xchg
xchg
test
xor
std
xchg
stos
mov
jl
inc
xor
cmp
addr16
pop
in
cmp
scas
xchg
adc
cmp
jl
and
es
dec
aas
test
addr16
adc
aad
push
push
lock
jge
iret
add
and
pop
outsl
das
push
int
ja
int
inc
testl
push
adc
push
stos
pushf
mov
add
sbb
push
shll
rol
adc
sbb
sub
cmp
and
dec
jle
test
dec
push
adc
jle
das
in
mov
dec
into
xor
xchg
call
loop
or
idivl
xchg
inc
nop
imul
sbb
jb
push
sarl
cmpsl
dec
nop
pushf
jl
mov
sbb
je
pop
shll
sub
clc
jp
mov
lcall
arpl
pop
cmpsl
out
stos
jns
and
mov
xchg
repnz
scas
shrl
xchg
adc
mov
xchg
xchg
aas
lahf
lds
jmp
mov
adc
push
cmp
xchg
sbb
lods
testb
stos
cmc
aaa
popf
or
test
scas
push
cltd
pop
inc
insl
icebp
int
jno
cmp
or
mov
jb
adc
cltd
xchg
or
xchg
nop
mov
push
shrl
cmp
sti
jns
pop
mov
movsl
pop
or
inc
stc
icebp
cmp
js
call
dec
push
sub
icebp
sbb
call
inc
mov
gs
sti
mov
test
aas
jns
pop
jg
cmp
shll
icebp
mov
idivl
xor
xor
imul
shrb
jns
push
mov
push
xor
xchg
jl
repnz
mov
ljmp
xlat
xlat
adc
in
sahf
pop
cmc
cmp
xor
pop
test
jp
nop
icebp
adc
adc
test
mov
xchg
dec
arpl
fwait
hlt
scas
or
fistpll
add
and
pop
xchg
ja
pop
cs
jecxz
stc
gs
mov
and
in
mov
out
fisubl
push
test
xor
xor
fwait
jne
movsb
push
jecxz
lretw
rorb
xchg
lret
loope
cmp
aad
push
sub
pop
adc
mov
inc
sub
dec
and
push
inc
inc
mov
decl
mov
pop
or
mov
xchg
fisubrl
push
jp
popf
xchg
sbb
hlt
scas
add
push
popf
pop
adc
popa
add
xchg
cmpsb
out
xchg
push
loopne
mov
cmc
mov
jmp
imul
lods
add
xchg
pop
je
movsl
fildl
sbb
xchg
mov
leave
ja
and
sti
fwait
imul
push
les
lcall
sti
in
scas
xor
dec
sbb
add
and
jmp
jns
mov
mov
cmp
and
aad
pop
xchg
pop
mov
mov
ret
cltd
sarb
daa
add
pushf
and
lret
lock
and
aad
mov
addr16
jl
sub
push
popa
in
cld
push
jecxz
xchg
test
jnp
mov
fld
sarl
loope
decb
and
jnp
jne
jne
imul
pop
loope
mov
cmp
or
mov
scas
rorb
add
filds
cwtl
faddl
jp
fcmovu
mov
scas
scas
ja
xor
repz
popa
jge
mov
cmp
pusha
xchg
popf
xchg
push
sti
dec
stos
fs
loop
daa
mov
call
mov
cmp
and
push
or
test
fstl
arpl
mov
cli
add
sti
rcrl
lahf
das
sbb
idivl
sub
fsts
pop
insb
pop
add
mov
popa
stos
xchg
movsl
adc
leave
out
int3
sub
orl
shll
stc
sbbl
xor
xor
push
mov
mov
or
push
test
lret
out
mov
mov
ret
sub
inc
lahf
int
std
dec
jmp
pop
cmp
dec
lcall
jle
jns
inc
lds
cmpsb
mov
push
fsubrs
sti
jns
pusha
push
mov
mov
add
cs
xchg
flds
inc
mov
mov
test
jne
lods
pop
sbb
fcoms
sub
dec
mov
dec
xor
mov
outsb
xor
inc
add
aad
dec
rcll
sti
jg
jae
cmp
push
mull
nop
cmc
imul
mov
dec
mov
jl
jmp
loop
fiaddl
or
movsl
ret
jle
pop
fcoml
xchg
lcall
scas
sbb
ret
int3
aam
add
sub
mov
rol
sbb
pop
or
lock
lods
cmpb
mov
adc
movsl
adc
lret
jg
mov
out
inc
arpl
add
push
in
xor
mov
xchg
addl
xlat
mov
inc
mov
test
push
rcl
arpl
dec
push
jb
dec
and
cli
cmpsl
xchg
stos
inc
nop
jae
push
int3
push
mov
subl
cmpsl
cmp
out
push
pop
or
sub
notb
inc
lea
out
mov
cmp
dec
jge
js
mov
test
and
out
xchg
pop
out
push
cs
das
iret
adc
and
adc
and
mov
in
lds
ss
and
jae
mov
cmp
stos
pop
lret
repnz
insb
rcrb
into
jg
mov
lret
cmpsl
imul
mov
jbe
mov
adcl
scas
mov
lock
mov
mov
push
rcll
fxch
sti
shl
outsl
pop
mov
dec
mov
or
jno
test
jns
mov
out
lea
push
std
cli
sahf
push
push
and
pop
inc
mov
adc
mov
repz
adc
es
sbb
push
outsb
cltd
dec
cmp
adc
mov
fyl2xp1
mov
add
ljmp
cmpb
aad
stc
mov
rcrb
sbb
clc
jle
add
cmp
ret
gs
mov
push
rcrb
jecxz
lcall
xor
pushf
xchg
jno
call
ret
pop
mov
adc
push
dec
sbb
jb
repz
stc
dec
ret
xor
ds
inc
dec
call
push
push
std
mul
jb
cmp
jae
cmp
mov
test
cwtl
sbb
test
push
insl
xor
push
jp
gs
lea
stos
mov
sub
jnp
test
or
push
xchg
push
sub
sbb
mov
add
add
inc
stos
inc
jl
jmp
mov
mov
ret
sarl
xchg
nop
mov
xchg
loopne
ljmp
cmp
xor
jnp
lea
repnz
jge
rol
adc
call
movsl
jo
lea
imul
insl
in
add
xor
sub
push
ror
rcll
cld
mov
movsl
int
and
stos
xchg
jbe
adc
f2xm1
sub
ffreep
dec
or
xor
out
orb
push
xlat
jb
xor
and
sub
ja
ja
adc
jmp
jl
clc
and
jbe
add
mov
imul
out
icebp
roll
cmp
out
push
sub
imul
lea
ljmp
loope
or
lock
scas
inc
shll
and
outsb
shlb
mulb
fbld
or
daa
andl
dec
outsb
aas
stos
dec
jle
pushf
push
and
loope
aam
enter
adc
and
jp
mov
push
in
mov
in
jo
sti
lock
into
test
pop
out
lock
cmpsl
push
inc
daa
insl
inc
inc
push
mov
scas
cmp
hlt
or
cmp
mov
int
jmp
xchg
push
xchg
out
in
arpl
subl
enter
in
cmp
jnp
cs
rorl
xor
gs
lahf
mov
inc
or
roll
cmp
lea
sarl
leavew
aad
jecxz
push
int
inc
rorl
pop
fldl
xor
cli
mov
aam
adc
out
add
popa
mov
ljmp
or
loopne
test
jge
cmp
sti
repz
lds
push
inc
jmp
and
das
shrl
pusha
clc
rcrl
movsb
jnp
inc
adc
loop,pn
nop
mov
cmp
mov
loop
addr16
ds
out
outsl
cmp
fcmovnbe
adc
mov
jns
lods
adc
aas
rol
pop
icebp
outsl
repnz
cmp
cmp
or
push
test
in
mov
inc
in
orl
xchg
cmpb
loope
lea
hlt
rcrb
push
mov
stos
test
pop
adc
lret
test
aas
mov
imul
xchg
repz
and
icebp
mov
stos
loope
xchg
cltd
rorb
mov
mov
xor
mov
and
movsb
repz
data16
jg
cld
push
cmp
test
ret
mov
shll
dec
roll
imul
or
fcompl
imul
mov
data16
out
dec
push
adc
fsts
fdivrp
mov
xchg
outsl
cmc
popa
jge
pop
adc
sub
scas
pop
fildl
aam
rorl
sbb
out
mov
xor
pop
jbe
dec
xor
jns
push
sti
mov
push
adc
pop
flds
outsl
xchg
xchg
push
loop
add
ret
cmp
push
mov
push
cmp
mov
std
mov
lcall
xchg
jnp
add
push
and
and
mov
mov
sub
in
adc
icebp
inc
xchg
add
clc
mov
add
das
xor
stos
lahf
jg
arpl
jge
push
loope
repnz
xlat
adc
inc
fmuls
jl
or
mov
int3
push
mov
in
pop
jnp
lods
das
and
dec
frstor
dec
cmp
jl
mov
push
lret
adc
pop
cmpsl
fimull
hlt
inc
cmp
arpl
pop
sbb
aas
mov
xchg
pop
dec
icebp
insb
pop
cmp
adc
mov
sbb
mov
mov
push
lcall
mov
out
aas
test
pop
xchg
mov
repz
dec
or
sub
xor
xchg
sbb
mov
pop
addr16
faddl
adc
cmp
in
mov
sti
in
and
mov
mov
in
sub
xchg
cltd
fistl
ret
movsb
push
xchg
push
jecxz
cmp
push
xor
cmp
scas
in
stos
aam
addr16
pop
in
int
out
stc
and
movsl
hlt
xor
icebp
or
jb
in
in
sti
shr
xor
adc
jns
jecxz
pop
imul
test
inc
loope
mov
cmpsl
adc
lods
jge
sbb
lahf
shll
xchg
xchg
push
enter
mov
daa
push
add
outsl
xchg
fdivs
xchg
mov
hlt
ret
lds
xchg
inc
xor
inc
outsb
pop
cltd
fildll
fs
sbb
adc
xchg
sub
ret
inc
mov
orl
and
mov
jl
loopne
pop
in
jg
inc
mov
nop
cmc
pop
repz
jge
mov
adc
adc
loop
icebp
jns
mov
in
ret
scas
or
cld
push
call
in
cli
mov
arpl
std
mov
daa
add
mov
pop
inc
rorl
lahf
lods
mov
mov
outsb
outsb
jl
popf
push
adcl
mov
dec
cmpsl
imulb
sbb
jg
in
or
scas
insl
in
cs
jmp
imul
rcrl
lahf
int
sub
sub
mov
rcll
loope
sarb
pop
out
cmpsl
insl
sbb
fsub
shrb
xor
cmp
cltd
shrl
jne
lods
enter
mov
mov
insl
pop
xchg
lods
xchg
test
xchg
ret
pop
inc
dec
lret
jg
sti
pop
rclb
out
cli
fidivs
jae
lods
jb
data16
cmp
loopne
push
mov
imul
dec
pop
mov
adc
push
andl
lret
pop
mov
mov
sub
dec
cmp
cmpsb
popf
enter
js
out
cmp
xchg
dec
pop
out
rcrb
pop
jbe
and
gs
cmp
inc
in
stc
jg
push
jl
cli
dec
arpl
xchg
cmc
sub
cmpb
xorl
pop
sub
add
mov
add
pop
aas
iret
jg
cmpsb
cmp
inc
or
icebp
roll
aaa
repnz
arpl
fdivs
pop
aas
xchg
mov
mov
ja
and
roll
orb
push
sbb
cmp
push
aas
mov
push
jge
mov
sub
es
jg
jae
xchg
or
mov
mov
mov
lods
cmp
cwtl
test
mov
mov
shrl
mov
je
push
jne
stos
pop
sbb
stc
xchg
sbb
mov
test
pop
ss
loope
loop
pop
mov
ret
mov
jle
adc
lret
sub
imul
andl
fstl
or
insl
montmul
cmpsb
add
xor
daa
stos
push
xor
cmpsl
sub
cmp
add
or
repnz
lds
iret
mov
sbb
jne
fsubrs
add
out
pop
ds
push
jg
in
lahf
jg
fists
jmp
hlt
shll
out
inc
loope
jae
imul
and
lds
data16
xor
mov
ficomps
sbb
stos
jno
cmpsl
sub
adc
inc
test
fistl
mov
add
pop
rcll
jnp
nop
inc
cmp
cld
cld
aaa
fwait
daa
cmp
aaa
pop
jge
scas
dec
aad
adc
xchg
in
cmp
or
data16
gs
mov
test
and
sbbb
push
pop
mov
jecxz
xchg
outsb
shrd
sub
popa
movsb
in
std
nop
mov
dec
xchg
jo
jl
aam
fldt
push
sti
sub
mov
and
mov
popf
in
aas
add
pop
mov
fistps
ja
mov
dec
sub
cli
cmp
inc
push
jns
adc
inc
mov
inc
push
inc
gs
mov
nop
or
scas
pop
rcrl
ja
mov
sti
aam
in
mov
addl
mov
test
xor
mov
push
aas
aaa
push
roll
fnsave
lahf
fidivl
or
xchg
mov
int3
call
jge
jno
mov
cmp
mov
iret
hlt
in
jmp
movsb
hlt
stc
lret
pop
mov
stos
mull
arpl
shlb
inc
in
aam
cmp
xlat
mov
repnz
and
out
out
inc
jecxz
sub
and
fldenv
or
xchg
loop,pt
ljmp
cmp
mov
jb
movsb
pop
push
daa
cmp
aas
negb
clc
jns
push
stc
sub
cltd
addb
in
or
mov
test
cmp
push
arpl
jae
subl
xchg
jge
cmpsl
inc
xor
ljmp
mov
ret
and
in
sub
leave
xchg
xchg
xchg
adc
movl
ror
fldl
out
arpl
xchg
roll
push
pop
mov
into
mov
cmpsl
inc
jnp
mov
dec
add
jno
jmp
mov
or
sbb
adc
sub
cmp
pop
mov
mov
sub
lock
shll
dec
sub
sub
sub
adc
loope
sbb
outsl
rclb
data16
stos
jmp
sbb
lahf
and
pushf
rcll
or
cld
popa
sbb
sub
dec
pop
fnstcw
sbbb
ds
stc
cs
test
pop
add
dec
dec
pusha
push
jecxz
pop
aam
repnz
sub
cmpsb
sbb
mov
cwtl
call
mov
and
test
daa
pop
ret
mov
mov
aas
adc
and
push
xlat
shrl
mov
mov
xchg
xchg
mul
in
mov
cmp
inc
cwtl
mov
xchg
jae
pop
push
cmpsl
jmp
lret
push
nop
sahf
dec
mov
add
mov
sti
or
mov
std
test
fdivs
push
jle
in
pop
out
mov
push
xor
push
mov
cmc
push
jp
push
cmpsb
and
adc
scas
pop
shrl
je
fmuls
and
les
xchg
mov
jp
and
dec
out
test
cmp
inc
mov
ficoml
in
inc
cmpsl
iret
add
ret
fnstcw
das
push
xchg
in
adc
aam
loopne
mov
cli
mov
mov
jno
adc
jne
push
push
aaa
or
mov
sub
stc
and
add
test
rolb
in
xchg
mov
psubsb
orl
mov
sahf
pop
int
sub
ds
jne
jge
adc
daa
or
out
scas
inc
push
mov
fistl
jg
ret
js
sbb
pop
push
mov
ret
shl
adc
lcall
add
ljmp
mov
imul
push
fidivl
dec
iret
shrl
in
sti
jl
shlb
mov
jne
stos
pop
sti
idivb
push
or
xlat
inc
les
inc
hlt
mov
jno
cltd
out
push
mov
adc
jmp
jmp
test
outsb
xor
mov
fs
ds
stos
pop
xorl
icebp
idivl
mov
mov
inc
clc
icebp
push
jno
dec
add
movsl
and
fnstcw
cmp
lds
lret
pop
xchg
mov
xchg
outsl
jbe
xor
mov
arpl
in
adc
push
cli
cld
sbb
std
lahf
movsb
call
sbb
push
push
xchg
in
imul
sbb
adc
insl
popf
jl
sbb
cwtl
sbb
sub
dec
mov
pop
das
lock
pushf
sti
inc
imul
fs
adc
out
xor
call
arpl
in
pop
mov
cmc
fmull
fxch
enter
div
jl
cltd
inc
mov
cmc
lea
in
sbb
or
xor
sbb
add
adc
loop
shlb
scas
jge
cmp
and
je
into
sub
out
and
lds
cld
fdivr
stc
add
stos
adc
out
ret
pop
pop
push
js
mov
jne
and
pop
out
mov
mov
shll
pop
cs
stc
stos
fsubrs
test
pop
mov
ret
pop
loope
mov
in
adcb
jle
add
aas
jo
cmp
mov
nop
in
or
inc
xchg
loope
or
xchg
push
stos
mov
cmp
xchg
stc
pop
test
inc
dec
add
push
clc
and
fcomi
add
push
sbb
out
daa
adc
test
or
nop
adc
enter
and
sahf
push
push
jns
xchg
clc
mov
cmc
xchg
mov
lret
dec
insl
push
fidivl
lret
inc
scas
cmp
ret
xor
cmp
mov
adc
jb
sbb
mov
sbb
dec
sbb
shlb
cmc
outsl
mov
adc
scas
jno
xor
xchg
lods
push
fs
mov
jmp
push
xorl
cmp
aad
cmp
in
xchg
xchg
mov
hlt
js
jne
gs
loope
pop
stos
repnz
ret
jne
pop
pop
xor
fcom
out
int3
mov
xchg
mov
int3
inc
das
leave
out
add
pop
out
fisubl
xor
inc
loope
add
rorb
add
dec
jp
leavew
inc
outsl
arpl
mov
push
loopne
dec
mov
testl
xchg
xchg
xchg
push
jo
xor
mov
and
push
mov
cmp
jne
mov
idivl
cmp
inc
sub
push
add
fisubs
cmpsl
pop
ror
xor
mov
jl
je
or
mov
stc
pop
cmp
mov
adc
call
rorl
das
jle
ret
lcall
mov
sub
inc
je
dec
mov
mov
xchg
mov
lret
adc
pop
nop
mov
jae
xchg
inc
sbb
dec
movsl
data16
push
and
adc
pop
and
mov
mov
mov
sbb
push
insb
fsubrs
push
iret
sub
lods
into
xchg
arpl
cltd
jno
inc
shll
and
jo
adc
in
push
mov
in
or
sub
lods
xchg
jl
testl
ljmp
bound
loop
incl
dec
mov
jecxz
mov
in
push
repnz
lret
int3
inc
jg
out
shr
adc
xchg
loopne
test
fldenv
ficoml
cmpsl
cmp
mov
mov
enter
xchg
add
pop
xchg
hlt
loope
mov
xchg
mov
mov
cmpsl
and
and
shll
idivl
ljmp
pop
dec
xchg
lret
cmpsl
clc
pop
push
or
repnz
in
orb
adc
or
mov
in
lahf
hlt
adc
leave
test
and
xor
mov
lcall
xchg
or
add
insl
inc
inc
ret
dec
in
sub
cmp
daa
adc
cmpsl
movsl
cmp
ja
mov
mov
aam
mov
jge
call
std
loope
shll
int
push
sub
sbb
or
sbb
in
inc
pop
test
movsl
pushf
pop
rcrb
cli
icebp
mov
scas
jbe
dec
sarl
mov
pop
arpl
jne
pop
dec
cli
nop
jmp
inc
lcall
aaa
xchg
jmp
inc
xor
cmp
shl
adc
mov
movsb
cmp
inc
iret
lea
mov
cwtl
mov
push
xchg
xchg
repnz
in
icebp
shr
out
add
inc
mov
dec
outsb
mov
pop
lds
imul
test
mov
psllw
gs
mov
push
mov
jns
gs
nop
out
dec
es
sub
jmp
xor
inc
adc
adc
mov
lds
jno
xor
push
int
movsl
xor
push
or
nop
in
push
leave
mov
add
sti
inc
xchg
into
adc
movsb
popf
lahf
mov
rcr
add
push
add
mov
pop
in
add
fldcw
add
mov
aas
sub
or
inc
pop
add
mov
pop
xchg
pop
mov
adc
pop
icebp
icebp
loope
int
add
daa
aas
jge
pop
add
in
cmp
or
pop
mov
jno
or
dec
popa
dec
cmp
repz
inc
scas
jmp
imul
cmp
sti
push
push
sub
pop
mov
jmp
movsl
push
and
cmp
pop
hlt
pop
dec
faddp
or
cmc
mov
nop
mov
addr16
fisttpll
adc
fnstcw
xor
scas
loope
xchg
mov
cltd
push
shl
push
imul
dec
or
and
ljmp
inc
xor
mov
rclb
scas
xor
out
outsb
and
pop
xchg
mov
add
adc
cmp
das
or
lahf
nop
fistps
test
cli
mov
pop
fstpt
shrb
rcrb
sarl
movsl
aaa
mov
jb
imul
data16
push
insb
in
jne
xchg
test
sar
mov
mov
dec
out
and
das
shr
xchg
faddl
and
push
scas
or
mov
jecxz
sub
pushf
mov
lcall
xor
outsb
sahf
out
lahf
xchg
sbb
out
fisubs
enter
stos
bound
in
insl
pushf
nop
cld
out
sahf
sarl
rcll
popf
lret
imulb
fisubs
push
shl
xchg
and
mov
loopne
inc
lret
mov
mov
jg
add
dec
stc
lods
adc
or
jge
adc
mov
inc
mov
jns
mov
leave
mov
mov
neg
jl
pop
aam
adc
add
vmread
pop
das
stos
fnstenv
push
pop
sbb
push
icebp
mov
mov
and
inc
inc
jp
pusha
push
xchg
mov
pop
add
xor
jbe
add
inc
push
icebp
push
test
mov
jne
push
adc
cmp
addr16
das
mov
xchg
sbb
add
lret
add
sub
cmc
adc
xor
mov
sbb
mov
jno
inc
lock
scas
and
add
xchg
cmp
das
rol
pushf
dec
out
jmp
into
imul
popf
cmp
mov
jmp
push
jmp
sbb
scas
fucomp
fs
sbb
inc
test
cmc
fcmovnb
mov
test
loop
flds
cmpl
gs
addl
mov
loop
rolb
mov
push
iret
lret
stos
mov
lret
test
mov
adc
int3
inc
ds
jmp
std
xor
mov
add
popa
adc
cltd
into
mov
dec
sbb
mov
pop
jge
jl
mov
mov
sbb
sbb
xchg
jne
or
push
mov
mov
push
push
xor
mov
xor
cmc
dec
popf
out
sub
cmpsl
ds
jmp
movsl
and
push
lret
sub
mov
movsb
out
jb
jne
push
mov
movsl
and
xchg
mov
ja
cmp
mov
dec
mov
cmc
push
popa
out
lods
andb
in
sub
mov
pop
push
jnp
pop
push
outsb
and
imul
pop
pop
jns
mov
mov
xlat
push
sub
adc
ds
push
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
mov
mov
add
movsb
mov
adc
adc
push
ljmp
cmpsb
add
or
mov
adc
loope
fs
pusha
and
jb
jo
fs
push
aas
outsl
push
cltd
inc
and
jmp
add
lock
ja
or
mov
cwtl
add
push
hlt
test
mov
gs
imul
in
push
add
clc
xor
aam
call
in
mov
mov
mov
pop
test
mov
je
mov
in
dec
mov
ds
and
ds
add
call
lcall
or
inc
aad
loop
xchg
dec
pop
inc
push
mov
subl
fsubr
add
ljmp
sub
adc
mov
inc
mov
cmpl
and
cltd
adcl
incl
ss
fsubl
inc
leave
ret
inc
add
dec
in
inc
lea
mov
or
test
inc
push
lea
mov
inc
mov
mov
sub
daa
inc
lea
orb
add
rcl
cld
movnti
dec
jne
mov
ret
inc
push
inc
dec
inc
inc
sub
inc
sub
popa
mov
test
cmp
inc
jb
add
push
sub
mov
jmp
or
ret
pop
test
jne
mov
push
call
rorl
rclb
fcoml
popw
cmpsb
dec
sbb
push
push
push
xor
add
sti
cmp
and
mov
dec
sbb
sbb
inc
pop
test
cmpsb
addr16
mov
orb
jnp
inc
mov
mov
je
mov
mov
xchg
mov
pusha
ret
sub
cmp
shl
rorl
rcrl
ljmp
rclb
ljmp
cmp
je
adc
add
adc
movb
fwait
ds
jns
aaa
mov
popf
mov
je
lret
push
call
movsl
mov
push
jmp
mov
cmp
je
test
out
lea
inc
add
dec
inc
mov
int
hlt
rolb
out
cmp
jne
xor
lret
add
pop
je
test
jge
cmp
add
out
and
rolb
cmp
mov
imull
repz
pop
test
je
ja
pusha
xor
ret
ss
int3
push
add
pop
mov
pop
fmul
arpl
arpl
adc
into
adc
adc
jmp
cmpb
je
ret
jb
add
jbe
add
or
adc
inc
inc
inc
cmpsb
pop
insl
subl
clc
int
mov
cmp
out
ss
or
movsb
sub
lea
jg
clc
dec
pop
insl
adc
test
push
hlt
adc
arpl
pop
cmp
loopne
ret
xor
fisttpl
xor
or
cmp
shr
jns
and
addr16
push
cmc
hlt
ret
or
adc
sbb
arpl
and
add
lock
fsubr
movb
mov
int
jbe
fldcw
orl
cmpb
mov
stos
cmp
xor
jo
rcll
mov
cmova
cli
mov
add
sub
jbe
jle
or
xorl
pop
into
mov
icebp
ds
rorb
add
or
xchg
aas
add
push
imul
sbb
xchg
mov
ds
sbb
lock
icebp
fsubr
pusha
push
and
pop
pushw
inc
mov
xor
cmpb
pop
add
adc
clc
cmp
inc
ret
cmp
cs
adc
push
dec
in
in
nop
sub
test
add
xchg
add
mov
jne
in
mov
sbb
iret
in
sbb
mov
mov
repnz
xorb
pop
xor
adc
icebp
shlb
cmp
js
sub
seto
cmpsb
or
jle
xor
test
stc
xor
mov
aas
ja
or
xor
xor
mov
inc
sbb
jmp
les
dec
and
adc
cmpsl
push
push
mov
adc
push
bound
mov
or
xchg
inc
push
lods
inc
faddp
pop
lret
leave
push
jmp
sti
enter
and
push
and
push
les
in
pop
pop
add
mov
add
push
jo
cmc
mov
mov
adc
add
pop
sub
clc
cli
jnp
xor
pop
in
fwait
or
inc
inc
push
les
ds
popa
andb
jmp
inc
ret
or
out
test
and
vmread
lret
pop
ret
andl
sub
add
pusha
les
mov
push
adc
add
adc
lret
inc
pop
mov
push
ds
enter
cmc
xor
and
fs
cmp
adc
mov
rolb
inc
xchg
ret
or
or
in
inc
das
jmp
xchg
push
lods
push
inc
je
adc
xchg
out
xchg
and
inc
push
les
inc
loopne
pushf
xor
loope
mov
mov
mov
adc
sbb
sbb
adc
sbb
inc
jno
sbb
add
inc
cmc
xor
xor
add
fsubrl
pop
ds
jbe
das
or
imul
adc
add
mov
out
and
dec
fs
xor
aam
enter
push
nop
ja
or
int3
adc
or
push
cmp
and
add
pusha
mov
bound
cmp
js
cmovno
mov
rol
adc
jmp
dec
dec
shl
and
mov
nop
orb
scas
sub
fwait
pop
xchg
ljmp
in
pop
add
push
add
push
in
shl
sbbb
add
outsb
repnz
cltd
push
lds
inc
sbb
mov
sub
fs
pop
sub
cwtl
xchg
mov
mov
inc
shlb
jmp
icebp
xor
stos
xor
pusha
ret
jns
ljmp
sbb
mov
into
mov
jno
sub
add
inc
xadd
jae
lret
andb
test
sbb
das
jo
xchg
lret
fadds
loop
int
pop
andb
push
dec
push
loopne
push
test
out
mov
lock
icebp
in
cmc
fwait
mov
loope
jl
mov
xchg
enter
and
shll
out
push
inc
mov
in
test
push
push
xchg
cmpb
shlb
sbb
fdivs
push
xor
sub
jl
cmp
xchg
add
push
lea
dec
sbb
pop
jo
popa
ret
inc
sbb
mov
cmp
fwait
stos
inc
mov
cltd
or
into
and
mov
aas
add
jae
or
mov
call
add
fldl
and
shl
test
sbbl
lds
mov
lret
incl
cmp
xchg
fmuls
jbe
pushf
lret
cmpsb
or
sub
inc
js
sbb
and
orb
jae
pusha
jmp
pop
adc
xor
cmp
jecxz
add
lds
sbb
mov
ror
in
das
mov
or
insb
dec
inc
dec
jbe
loope
add
andl
xor
test
dec
dec
imul
mov
xlat
jecxz
or
jmp
add
std
push
cwtl
add
xlat
inc
xor
movsl
sbb
and
mov
imul
sbb
psadbw
cmp
mov
sub
loopne
xor
or
das
mov
pop
negl
pop
jecxz
cmp
add
outsb
push
pop
push
xchg
jbe
dec
xor
cmpb
cli
mov
pushf
xor
loope
sbb
pusha
jl
stos
clc
test
sarl
xchg
lock
cmp
xchg
sbb
insb
jl
sub
pop
test
sbb
add
testl
xor
inc
mov
sub
xchg
andb
push
repnz
add
dec
out
jbe
ret
adc
pop
add
push
fiadds
add
or
lret
rorl
test
cmpb
mov
jl
and
add
test
fcomps
sbb
sbb
push
cmpsl
fsts
push
ljmp
pop
sub
mov
outsl
cltd
xor
jb
bound
movsb
mov
pop
mov
loop
push
pop
add
hlt
xchg
fadds
adc
and
lret
add
pop
lods
leave
lahf
in
adc
push
aas
sti
mov
fistl
andb
xchg
add
pop
inc
cwtl
dec
loop
sbb
add
mov
sub
add
daa
pop
pop
in
xchg
mov
cs
pop
in
ret
xor
mov
sbb
inc
jb
adc
sbb
sub
test
xor
mov
repnz
push
sub
cmp
scas
subb
cmpsb
out
pusha
cmp
rolb
and
and
inc
pusha
or
add
mov
pavgw
fsubrs
cmp
inc
xor
negb
pop
mov
fnsave
jne
mov
inc
push
jb
pusha
fsubl
mov
out
les
push
mov
xchg
push
inc
xor
in
shl
push
push
pop
popa
incb
fs
xor
cmp
mov
lahf
pop
lret
sbb
jge
sub
dec
and
cmpsb
call
rclb
clc
cmp
cmp
add
stos
call
cs
cwtl
cmp
pusha
jp
movsb
and
xor
lods
or
sub
fs
mov
shll
add
dec
ljmp
loope
cmp
sbbb
and
fimuls
adc
insb
inc
icebp
pop
mov
sbb
add
push
or
push
es
sbb
icebp
jns
mov
mov
lret
jo
mov
orl
es
lss
in
mov
icebp
outsb
and
imull
cld
rorl
aad
xchg
and
sbb
pop
lock
mov
cld
mov
and
jp
xchg
adc
in
sarb
hlt
cld
dec
or
pop
push
sbb
xlat
icebp
xor
and
cld
push
imul
lcall
xchg
jns
outsl
sub
imul
pop
loope
call
lods
in
ror
setle
popa
pop
sbb
xor
clc
call
sbb
loop
rcrb
pusha
or
shlb
inc
jbe
cmpl
leave
adcb
inc
inc
js
push
inc
pusha
repz
jmp
aad
inc
add
dec
jg
cmp
mov
fisubs
xchg
jae
scas
fnstcw
dec
dec
cmp
andb
xor
nop
xchg
cli
mov
inc
clc
inc
and
lea
rcr
daa
lret
sarb
sub
fcomps
sbbl
dec
or
in
push
nop
xor
mov
adc
shrl
and
mov
add
test
paddsb
mov
es
stos
cmp
dec
scas
xor
and
add
add
mov
jp
or
push
in
mov
adc
jge
clc
xor
add
mov
sub
push
jb
js
inc
xchg
mov
pusha
or
loopne
jns
clc
cmc
sub
ljmp
cmp
xorb
mov
imul
adc
out
xchg
rcrb
adc
push
int
test
add
ucomiss
mov
data16
sbb
mov
inc
repnz
lahf
repnz
inc
push
mov
mov
mov
loope
leave
cmp
adc
add
push
cs
mov
les
jb
lret
mov
mov
frstor
shrb
cld
out
pop
loopne
mov
inc
dec
push
das
cmc
pop
xor
int
cmpsl
xor
in
cmp
arpl
mov
arpl
sub
dec
add
negl
loope
cmpsl
aaa
xor
add
mov
fnstcw
add
out
push
jno
ds
int3
push
or
xor
sbb
shr
inc
mov
leave
add
popf
jp
fucompp
xor
movb
and
rclb
loop
mov
or
mov
subl
pop
adc
iret
inc
or
xor
cmp
push
fidivl
mov
dec
adc
pusha
cmp
sub
mov
or
cltd
rcrl
andb
icebp
adc
das
rorl
inc
clc
scas
test
adc
rorl
das
movsb
out
inc
push
enter
cmp
popf
inc
leave
fdivl
sbb
aam
xchg
imul
scas
sbb
es
scas
cmp
roll
gs
mov
rcll
mov
cmp
xor
pop
mov
adc
jno
sub
pop
cmp
adc
mov
dec
imul
add
fstps
mov
call
push
les
jl
push
cmp
es
mov
movsb
gs
dec
sarl
and
das
add
mov
fstps
dec
iret
jle
pusha
das
shrl
lods
push
add
les
out
sbb
cmp
and
sbb
aaa
cmp
mov
test
xor
sbb
mov
inc
mov
push
lret
lret
jo
add
ss
clc
mov
inc
sub
or
xchg
pushf
inc
or
push
sub
mov
nop
or
sub
in
add
lds
fs
cwtl
pop
ret
pop
popa
or
adc
lock
jge
clc
pop
je
scas
shrb
lds
xorl
enter
test
popa
and
in
jle
mov
stc
aas
add
out
add
insl
and
mov
cmp
pop
movsb
lret
sbb
pop
pextrw
lods
mov
pusha
sahf
push
mov
and
xchg
mov
pop
nop
fadds
jo
pop
push
jne
fisttpll
push
sub
inc
addr16
mov
aas
data16
mov
cs
inc
cmpb
push
xchg
movsb
jns
je
and
sbb
sbb
imul
add
pop
cmc
rol
add
ja
cwtl
pop
mov
sbb
mov
pop
adc
test
rorb
xor
aaa
add
mov
pop
dec
cmpb
xchg
jmp
cwtl
mov
bound
jae
data16
pusha
and
and
jbe
cmpsl
or
pop
add
xchg
xchg
xchg
pop
mov
pop
ret
sbbb
movsb
repz
add
aaa
or
movsl
add
insl
in
or
or
xchg
popa
mov
add
gs
mov
in
mov
ja
int
pop
stc
pop
sub
xchg
push
add
pop
mov
mov
sahf
mov
aam
sbb
outsl
cmpl
jno
jae
xchg
push
rcrb
mulps
lcall
arpl
mov
fwait
int3
pop
add
pop
fs
mov
gs
cmpb
sbb
push
add
xchg
cmpsb
outsb
mov
add
dec
pusha
and
sbb
push
movsb
fs
addb
scas
cmpsb
jo
cmpsl
or
inc
or
aas
ret
add
push
add
pop
push
and
jecxz
lods
adc
repnz
std
lret
mov
cmp
out
cli
lcall
add
xor
add
ret
sbb
lcall
pshufw
dec
rclb
fsubrs
leave
movsb
aaa
jmp
or
jp
xchg
shll
cli
mov
push
sbb
jp
xchg
fiadds
jb
push
movb
jnp
add
mov
cmp
ret
xor
or
aas
sub
pushl
fnstenv
add
insb
push
xor
mov
fs
cmp
jbe
mov
cmp
ss
xor
les
pop
ret
inc
popa
addr16
test
push
pop
jnp
mov
scas
stc
loopne
daa
lock
in
xor
add
dec
movsl
push
das
dec
clc
pusha
push
jmp
add
xchg
sbb
xor
ror
push
adc
ret
notl
add
xor
xchg
pop
mov
mov
xor
ud1
mov
mov
or
and
sbb
int3
repnz
xchg
mov
and
add
mov
cmp
inc
js
iret
sub
movsl
adc
into
jp
sub
sub
fdivrl
aaa
lahf
xor
int
insb
xor
loopne
testl
insl
inc
test
sub
movsl
mov
xor
pop
add
andl
cld
xor
imul
clc
dec
loope
mov
dec
pop
popa
cli
jecxz
scas
cmp
push
jmp
mov
xchg
push
repnz
xchg
pop
test
add
sub
xor
cmp
int3
pushf
and
daa
aas
sub
je
inc
ficoml
sub
sub
adc
mov
jecxz
xchg
dec
and
cmpsb
mov
clc
loopne
cmp
aas
clc
xor
push
pop
cli
pop
loope
jns
sub
pop
movsb
add
adc
inc
or
push
les
add
hlt
in
in
out
jmp
pop
mov
repz
xorb
jmp
and
pop
andb
fldl
bound
mov
or
mov
in
add
cld
aas
push
xor
cmp
es
add
out
mov
test
popa
sub
hlt
rolb
sbb
sbb
icebp
cld
mov
jmp
add
jecxz
cmpsl
stos
jmp
jp
xchg
test
xchg
xchg
out
lock
jl
clc
scas
fbstp
jmp
xchg
dec
test
add
aam
pop
sbb
xor
xchg
ljmp
jns
js
adc
inc
int
pushf
nop
pop
test
popf
adc
scas
mov
movsb
cli
flds
mov
cltd
pop
push
cmp
pop
push
shrb
icebp
adc
addb
es
fldl
insl
dec
sub
pop
and
mov
jae
and
sub
xor
jmp
stos
mulb
leave
push
xor
inc
adc
and
xor
shr
ljmp
test
mov
dec
pusha
ret
mov
pusha
call
pushw
in
jle
or
loop
shlb
and
mov
sub
inc
sbb
and
add
rolb
sub
dec
fstpl
cltd
or
xchg
testl
add
lds
push
cmp
mov
lock
fsubrs
fcom
or
jnp
jns
add
test
mov
arpl
sub
add
adc
and
mov
mov
enter
mov
jns
sti
add
xchg
inc
pop
mov
idivl
cmp
jmp
mull
in
and
cli
inc
mov
in
xor
mov
adc
cmp
cmpsl
cmp
ljmp
mov
fimuls
sbb
ljmp
cltd
mov
or
shll
insl
xorb
inc
cwtl
xchg
or
es
xchg
in
testb
xor
add
mov
lret
pusha
mov
push
jo
add
push
out
and
cmp
inc
pop
push
or
movb
in
cmp
in
xchg
es
push
int
mov
sub
xchg
mov
pop
testb
int3
cmp
sub
test
adcl
xchg
and
add
int3
popf
mov
sbb
mov
call
int3
xchg
dec
or
imul
add
or
or
push
add
cld
mov
pop
add
mov
rcll
mov
pop
vmread
add
insl
mov
inc
insb
test
dec
outsl
out
mov
sub
adc
bound
inc
repnz
pop
dec
loope
enter
rolb
es
ljmp
dec
and
mov
je
add
jno
jne
add
inc
lea
push
sub
outsl
add
mov
push
imulb
xchg
call
mov
insb
and
and
pop
dec
adc
push
or
loopne
sbb
sahf
mov
adc
add
cld
int3
pop
mov
add
aam
mov
pusha
add
incl
repz
pusha
sub
inc
fildll
rol
add
mov
sarl
sub
es
push
fnsave
andl
lret
xor
cmc
jno
mov
ss
push
and
mov
cmp
pop
sbb
cwtl
add
mov
lahf
inc
fwait
adc
lods
cmp
xorb
xchg
pop
xor
pusha
daa
flds
sub
loope
xchg
sbb
push
xor
xor
repnz
ret
cmp
out
dec
mov
jb
adc
add
push
sbb
pop
fnsave
pop
je
out
push
and
xor
pop
pushf
add
andl
cmp
sub
fwait
mov
dec
and
dec
out
or
pop
mov
das
cvttps2pi
adc
sub
jp
fmuls
pop
mov
nop
in
jecxz
adc
add
xor
adc
popf
mov
in
add
mov
aam
fs
adc
bound
mov
cmp
inc
or
movsb
loop
jecxz
movsb
pop
xor
add
in
insb
add
mov
add
iret
xor
and
or
pop
cmp
icebp
and
xor
cld
popa
cmpsl
and
add
addr16
nop
xor
imul
aaa
fs
pop
xchg
mov
test
add
push
nop
dec
xchg
or
push
in
outsb
rsm
daa
cltd
xor
inc
xchg
sbb
cmc
mov
popf
pop
push
xorl
mov
mov
stos
gs
addb
adc
fs
add
ja
imulb
jns
out
pop
mov
and
mov
movsl
es
sub
pop
hlt
add
leave
push
enter
xchg
add
mov
insb
push
daa
cmp
jge
add
ljmp
lock
int3
andb
dec
xor
jmp
add
fldcw
js
ljmp
add
or
cs
add
jno
mov
fwait
cmpsl
jo
add
ror
mov
stos
cmp
mov
cmc
mov
jnp
das
xor
fisubrl
sbb
adc
xchg
dec
sub
adc
mov
add
lds
aas
mov
sbb
jno
sbb
cmp
mov
add
loop
jno
jmp
aaa
or
pop
rcrb
or
adc
clc
jecxz
inc
inc
adc
add
and
pop
inc
in
in
pusha
inc
mov
loopne
mov
xchg
inc
adc
jo
sub
mov
aas
push
test
sbb
pop
call
hlt
out
das
mov
jge
sub
les
inc
loop
xor
inc
pop
and
jns
adcl
popa
mov
cld
jmp
inc
test
pop
mov
aam
jge
addr16
jns
cmc
pop
sbb
mov
fcoml
mov
insl
cs
fisttpl
mov
pop
int3
mov
mov
cmp
loop
add
inc
sub
mov
aas
mov
mov
pop
sbb
loopne
gs
mov
add
add
xchg
mov
mov
push
mov
test
es
inc
jl
mov
dec
or
xorl
or
pop
push
ljmp
xchg
xor
xor
jg
inc
add
subl
sub
inc
in
insl
inc
xor
xor
and
ret
xchg
es
cs
or
dec
mov
jmp
lret
in
cmp
cmp
pop
xchg
sbbb
call
bound
cmpsb
popf
das
mov
shlb
nop
int3
add
mov
mov
je
and
mov
pop
xor
insl
dec
mov
inc
pop
sbb
jae
movsl
shr
jmp
add
out
push
sahf
mov
test
std
and
test
push
or
add
mov
pop
pmaxub
fstpt
dec
mov
xchg
imul
sub
sub
cmp
testb
lahf
mov
gs
stos
pop
lods
in
test
or
mov
xor
mov
fadds
xor
cmp
jne
or
aaa
movsb
mov
leave
ljmp
cmp
and
xchg
add
push
push
int3
rol
sub
add
add
add
rol
push
imul
add
jmp
cmp
das
mov
shrb
nop
addb
or
es
mov
add
xlat
js
or
dec
and
enter
movsb
movsb
or
fdivrs
mov
mov
cmp
mov
cmp
xor
mov
inc
clc
mov
dec
xchg
enter
add
pusha
inc
and
pushf
les
add
hlt
mov
mov
rorb
cmpb
mov
or
ds
fdivs
push
mov
xlat
jns
nop
shlb
in
mov
add
loopne
push
xlat
mov
sbb
hlt
sub
clc
cld
xchg
xor
rcrb
add
inc
mov
cwtl
dec
xor
and
or
add
add
lcall
sub
mov
mov
add
add
xlat
add
mov
dec
push
jb
adc
xchg
test
jp
ret
adc
decl
inc
cmpsb
shll
repnz
add
inc
sbb
mov
cmp
je
clc
jbe
shll
mov
sub
adc
mov
std
sbb
or
push
push
scas
adc
inc
bound
fcomps
out
push
hlt
mov
jp
xchg
repnz
dec
mov
inc
ret
lods
mov
push
rorb
push
ss
stc
xor
adc
jl
daa
inc
inc
cmp
adc
push
add
cltd
pop
dec
shr
xchg
mov
xor
faddl
mov
sub
cmp
mov
pusha
sub
xor
cvtps2pi
fdecstp
pushf
mov
mov
orb
repz
mov
mov
lcall
cmp
add
in
cmp
daa
scas
lods
xchg
mov
mov
int
sarb
movsl
cld
push
enter
pop
cmp
and
mov
aas
jp
add
dec
andl
rcrb
dec
xchg
sub
push
cmp
ret
jecxz
inc
rcl
lcall
fs
push
pop
scas
jp
adc
xor
mov
and
iret
inc
mov
xchg
add
pop
call
xchg
mov
arpl
jl
add
pop
out
cmp
pop
mov
fxsave
cmp
xor
lcall
test
call
clc
loop
dec
mov
sbb
loope
push
cmp
add
pop
dec
fisttpll
xor
dec
ja
inc
and
xchg
sti
cltd
ret
cmp
mull
outsl
push
pop
add
mov
inc
xchg
jnp
xorb
jo
clc
adcb
insb
cmp
jb
and
mov
jb
cs
in
or
xchg
mov
and
imul
xchg
cmp
mov
jp
add
and
test
mov
mov
dec
daa
inc
test
mov
sbbl
or
add
into
das
gs
cmpsb
inc
ret
inc
jp
dec
cwtl
cmp
or
movsl
push
cmp
jb
mov
xchg
dec
xchg
ja
and
loop
or
aaa
test
lcall
out
mull
es
sub
xor
mov
mov
int3
and
mov
mov
movsb
and
gs
dec
iret
xor
sahf
push
pusha
inc
fmuls
stos
popa
and
adc
xchg
jo
and
mov
mov
pusha
test
mov
lfs
push
setb
xor
inc
sub
aam
fdivl
inc
push
inc
imul
add
jp
push
add
jns
sbb
adc
jle
insb
xchg
aam
repz
add
push
dec
daa
sbb
test
sbb
call
adc
inc
fs
jae
add
inc
imulb
xchg
xchg
mov
icebp
and
mov
in
das
pop
jg
pop
push
test
mov
push
aam
mov
or
es
cld
shl
cmp
test
call
add
divl
mov
add
xchg
sar
jmp
dec
rclb
inc
aam
fisubl
mov
mov
shll
flds
ficomps
stos
mov
add
cmc
fs
and
or
inc
rol
arpl
icebp
and
add
loopne
add
fwait
das
roll
pop
fisubl
lahf
in
xor
out
jns
or
les
jo
fisubrl
adc
movsb
inc
icebp
add
test
lods
mov
xchg
push
stos
nop
xorb
push
lods
or
addl
inc
std
add
pop
testb
iret
mov
dec
and
cli
jae
dec
insb
scas
mov
test
xor
adcl
ja
subl
dec
pop
mov
pop
dec
bound
pusha
mov
mov
adc
int3
add
xor
adc
cld
mov
in
push
adc
sub
int3
inc
cmp
fiadds
cmpsb
sbb
dec
orl
clc
shrb
bound
add
aaa
lahf
mov
adc
test
mov
je
sbb
fcmovb
xor
jo
mov
pop
aam
lods
mov
shl
cmp
cwtl
lsl
inc
mov
ret
mov
cmpsl
cmp
or
test
push
cwtl
adc
out
push
lea
lods
fidivs
pushf
jp
sub
dec
add
cli
add
add
test
or
mov
and
test
aam
pop
add
jo
fcomps
andb
mov
inc
and
out
enter
and
xlat
pop
adc
or
pop
add
incb
roll
inc
cmp
inc
ret
test
add
mov
xor
or
cmpsl
rorl
ljmp
xor
inc
or
push
xlat
je
mov
enter
inc
pop
xor
cmp
dec
sub
icebp
iret
and
adc
add
hlt
fs
in
je
jbe
pop
sbb
aaa
mov
enter
inc
or
sbb
data16
push
shll
and
fsubs
inc
cmp
pop
mov
inc
xor
fsubs
in
fsubrl
jne
mov
clc
and
push
jle
mov
sti
hlt
inc
cmp
push
or
mov
xchg
add
stc
sbb
sbb
aad
in
jne
sti
xchg
cmp
jecxz
or
clc
sub
mov
xor
mov
and
jnp
xor
and
test
dec
adc
xchg
addb
ljmp
jmp
cmp
and
out
push
pop
and
mov
or
sub
cmp
jb
shl
les
add
repnz
sub
es
dec
in
subb
mov
mov
add
aam
pop
ss
mov
push
push
sbbb
inc
mov
adc
xchg
add
mov
pushf
and
sbb
dec
add
aas
jo
or
and
pushf
test
add
mov
mov
sbbb
pop
jae
sub
cmove
or
das
mov
jo
pavgw
stos
inc
mov
cmp
add
push
loope
inc
jo
addr16
sub
add
repz
cmc
add
subb
daa
xchg
push
mov
adc
xchg
in
mov
std
xor
dec
mov
add
sub
xor
cmp
add
cmc
fwait
mov
out
push
mov
arpl
adc
mov
dec
and
adc
add
pop
fildl
test
and
sbb
orl
cld
push
jno
addl
jno
lods
push
imul
test
loope
fildll
in
sub
subb
mov
lock
sbb
test
lods
insb
add
mov
xchg
add
loope
in
sub
mov
enter
hlt
jle
test
stos
cmpsb
es
xchg
in
sbbb
sbb
cmpsb
or
cld
xor
out
fwait
dec
cmpsl
aaa
jae
mov
lods
or
jp
shlb
pushf
xchg
fdivl
jge
adc
lock
sub
or
sub
fiadds
mov
cmp
pushf
mov
xor
rcrb
subl
push
mov
mov
and
addb
leave
and
push
inc
inc
pop
jno
jns
sbb
aam
mov
hlt
or
sub
mov
xor
lods
add
dec
shll
add
data16
js
jmp
push
mov
mov
cmp
daa
loope
mov
cmp
sbb
mov
and
stos
mov
xor
lret
imul
add
jp
pop
and
pop
mov
imul
xor
cld
orb
and
push
je
adc
test
add
dec
aas
es
shlb
aaa
lahf
lods
jb
fsubrs
ds
xchg
add
xchg
xor
bound
dec
inc
cmp
cmp
push
andl
sub
push
mov
lret
push
mov
inc
les
pop
fistl
sbb
xchg
jnp
mov
int3
fnsave
mov
sub
pop
aaa
sarb
sbb
outsb
lods
add
mov
dec
cs
int3
cmpsl
int
dec
pusha
lar
adc
cmp
dec
sar
xlat
push
push
loopne
imulb
dec
pop
pusha
test
pop
rclb
xor
or
inc
repnz
lock
mov
adc
add
cmp
sub
hlt
cmpsl
pop
adc
inc
es
and
daa
or
rorb
and
in
insb
cmp
mov
cmp
xor
daa
jle
sti
or
add
shlb
inc
inc
xor
add
pusha
repz
mov
cs
mov
bts
loop
repnz
xor
scas
mov
or
or
adc
inc
mov
xor
pop
insb
test
push
adc
jmp
in
ror
jno
rolb
jle
mov
insb
lcall
cmc
sbb
add
or
pop
adc
dec
push
add
and
imul
loopne
add
sub
out
push
popa
jb
mov
lcall
sub
and
push
or
leave
lods
cmp
sub
int3
cltd
mov
les
lock
xchg
rolb
lods
and
mov
add
xlat
stos
mov
mov
sbb
mov
or
imul
sbb
adc
xchg
mov
inc
das
xchg
xor
sbb
rclb
ret
rcrb
or
inc
repnz
and
mov
sbb
jmp
add
gs
jg
lods
push
leave
mov
or
dec
popf
sbb
pop
std
fnstsw
dec
cmp
xchg
adcl
xor
mov
adc
mov
orb
adc
lock
push
loop
sbb
roll
stc
call
mov
shll
mov
inc
test
and
adc
mov
in
mov
mov
mov
sarb
inc
pop
das
mov
sbb
es
dec
push
ds
std
mov
push
push
lea
jmp
repnz
int
xchg
pop
test
scas
scas
and
stc
push
add
push
pop
imul
adc
cmp
cmp
mov
in
or
mov
sub
loop
iret
sar
and
fs
adc
dec
movsl
mov
pop
arpl
or
jp
sarb
inc
nop
and
sbb
or
ds
in
outsl
add
nop
cmp
or
mov
rolb
push
imul
movsb
mov
push
sbb
jnp
fnstenv
or
out
call
aam
add
sbb
pop
add
fbld
cmp
inc
jnp
and
iret
add
popa
adc
mov
push
daa
jnp
dec
aam
aas
addr16
add
loopne
lahf
loope
xor
pop
popa
adc
push
dec
outsb
mov
cmc
into
inc
daa
and
test
fs
or
xchg
and
mov
add
xor
xchg
and
movsb
mov
mov
outsb
sub
inc
gs
push
pop
stos
aaa
clc
ljmp
or
mov
stos
mov
clc
inc
inc
add
cs
scas
aaa
dec
push
ss
mov
dec
inc
mov
mov
test
push
jnp
movsb
js
sub
mov
add
mov
add
adc
test
push
xchg
pusha
and
pop
xchg
sti
out
adc
mov
test
cli
adc
in
orl
sbb
fs
push
js
cmpsb
mov
es
inc
repnz
xorb
mov
inc
add
and
mov
cmp
test
hlt
cmp
loop
loope
icebp
dec
push
js
add
adc
xchg
daa
cmp
mov
add
inc
push
or
sub
xchg
xlat
or
nop
outsl
or
push
aaa
test
iret
je
test
lcall
es
mov
loop
xor
push
mov
sub
dec
add
enter
clc
stos
jecxz
mov
es
and
jo
out
nop
add
gs
mov
je
push
test
adc
aas
cs
jmp
scas
into
sub
sbb
mov
sahf
pop
sbb
es
xlat
andb
jge
adc
fcompl
xchg
push
mov
sar
shl
ja
ss
pop
cwtl
sub
xorb
or
lock
rclb
sub
push
aad
mov
ret
pusha
xchg
loopne
inc
mov
dec
adc
push
jp
shrl
test
cmp
xor
popf
xor
add
sbb
iret
and
adc
in
xor
ret
insb
dec
push
inc
cmp
daa
mov
into
jl
arpl
in
lock
push
xor
or
out
add
mov
sar
mov
add
mov
cmp
mov
sbb
ret
testl
cmp
push
pusha
inc
daa
inc
inc
rclb
jae
icebp
mov
adc
dec
lods
call
cmp
ret
xor
and
add
stos
repz
shlb
pop
adc
adc
add
adc
mov
stos
jle
inc
shr
adc
xor
pop
sub
enter
test
inc
filds
cmp
and
outsb
dec
push
add
sub
int
dec
adc
andl
adc
test
leave
rcll
mov
hlt
mov
pusha
dec
loop
fcmovb
mov
or
xorl
push
adc
xor
imul
push
cltd
inc
push
loop
hlt
clc
xor
testb
bound
jmp
movsb
movsb
pop
push
nop
mov
cmpsl
inc
int3
popa
inc
add
or
fisubl
mov
pop
add
inc
aam
sbb
xchg
int
lds
in
mov
aam
dec
clc
repz
push
mov
imul
ret
test
xchg
les
lret
sbb
mov
pop
or
lcall
adc
es
push
mov
push
repnz
inc
mov
dec
daa
out
mov
ljmp
adc
cmp
and
mov
sbb
out
es
inc
pushf
jl
fisubl
sbb
xchg
add
cmp
cltd
sub
adc
sbbl
daa
mov
in
inc
sub
cli
mov
push
scas
test
mov
inc
enter
jp
add
push
cmp
mov
mov
pop
sahf
or
xchg
xchg
add
adc
sub
xchg
test
push
or
sub
mov
xchg
and
lods
fsub
mov
mov
sub
lret
nop
dec
lock
xor
pop
mov
xchg
mov
xchg
mov
add
fdivl
add
dec
push
mov
ss
xor
lock
loopne
jecxz
xchg
test
cmp
lcall
push
jl
les
aam
xchg
pop
push
es
push
arpl
dec
mov
xchg
mov
cwtl
or
mov
pop
xchg
mov
jno
or
rcr
pop
jnp
ror
scas
sbb
fs
add
xchg
js
outsl
addr16
mov
out
push
jne
leave
lea
xchg
and
pop
mov
subb
mov
mov
aas
push
into
subb
push
scas
dec
mov
rolb
lock
cwtl
or
sahf
inc
mov
push
dec
or
pop
cld
pop
mov
scas
stc
add
ret
mov
in
xchg
adc
outsl
data16
daa
stos
lea
xchg
mov
adc
jmp
flds
call
icebp
test
mov
pop
push
les
xor
mov
repnz
xchg
loopne
and
and
mov
loop
and
clc
shrb
pop
or
cmovno
or
add
and
xchg
add
dec
int3
sub
xor
cwtl
test
push
inc
stc
inc
add
sbb
mov
adc
adc
xlat
test
mov
mov
pop
adc
rolb
les
add
sub
imul
sub
sbb
push
mov
imul
push
add
pop
push
add
ss
test
ret
enter
loop
cmp
jmp
xchg
int3
cwtl
popf
in
xchg
xchg
push
adc
pushf
fsubrp
dec
js
stc
test
lock
hlt
enter
popa
xor
mov
movsl
push
xor
movsb
add
es
mov
pop
mov
call
add
push
test
cmp
push
pop
lock
pop
test
mov
insl
sbb
sbb
mov
pop
jg
push
dec
mov
jnp
mov
add
mov
enter
lret
pop
lcall
pop
pop
xor
xchg
scas
adc
icebp
adc
jmp
in
mov
or
aaa
or
push
dec
sti
lcall
mov
dec
sahf
lods
bound
mov
pop
xlat
outsb
push
add
or
xor
pop
inc
rcl
inc
mov
push
push
pusha
dec
and
mov
push
adc
fninit
mov
dec
lea
int3
jb
mov
pop
setns
lret
in
enter
das
lret
fsts
inc
sahf
cwtl
add
pop
mov
aam
add
frstor
es
xor
lcall
cmp
es
xchg
pop
xchg
pop
pushf
add
bound
jb
or
es
or
aam
das
stos
jnp
pushf
into
jl
and
xchg
adcb
mov
adc
mov
sub
inc
scas
push
stos
or
mov
dec
mov
and
cmpb
clc
xor
sarb
in
clc
cmpb
loop
add
inc
pop
add
xchg
pop
jns
jns
daa
xlat
ss
enter
cli
sbb
nop
les
cltd
adc
popa
jl
ljmp
mov
cmp
test
aam
push
arpl
add
and
xchg
jns
and
fstpt
icebp
mov
xchg
in
inc
add
ret
mov
add
xor
int
mov
jbe
in
es
push
adc
jmp
fistps
push
aas
and
nop
lock
add
dec
inc
xchg
dec
es
push
or
imul
xor
movsl
test
popf
insl
movsb
adc
add
mov
fld
pop
xchg
add
jae
adc
popf
jecxz
xor
inc
test
iret
jmp
inc
dec
outsb
rcl
mov
rcrb
adc
and
ds
popf
fsubl
and
jmp
push
jmp
mov
outsl
push
cld
cmp
fidivl
adc
xorl
hlt
lahf
inc
or
js
inc
ljmp
in
inc
add
mov
rolb
js
test
mov
bound
ss
std
push
inc
dec
jecxz
sbb
loop
pop
mov
mulb
xor
or
mov
add
test
int3
imul
hlt
pop
lahf
add
adc
mov
jne
inc
push
popa
mov
push
jg
ljmp
stos
push
pop
adc
mov
add
cmp
dec
cmp
xchg
add
and
mov
push
adc
and
lods
jmp
iret
cmpsl
ret
loopne
add
cmp
add
test
je
mov
add
pushf
loope
ss
js
or
xchg
mov
sbb
inc
push
cmp
or
pushf
das
mov
jg
cmp
mov
mov
pop
add
movsb
adc
or
and
inc
bswap
bound
xchg
dec
add
sbb
push
xchg
add
shrl
add
mov
in
or
pop
xor
inc
imul
adc
out
hlt
aam
sub
fmulp
adcb
addb
cmpb
sbb
or
jne
sbb
push
push
into
mov
or
addl
subl
cmp
mov
addb
data16
xchg
jge
mov
or
std
push
sbb
add
mov
or
cmpb
lds
lret
xor
sbb
int3
or
ljmp
mov
inc
push
pushf
or
pop
lea
dec
test
outsl
inc
adc
sub
and
and
sbb
sbb
sbb
les
and
cwtl
mov
cmpsl
lods
addb
cmp
mov
cltd
hlt
inc
dec
add
in
cltd
sub
popa
or
adc
out
inc
cmp
push
mov
sbb
or
loopne
jae
inc
mov
and
and
bound
and
dec
pushf
and
repz
xchg
sarb
mov
add
mov
out
add
inc
adc
mov
push
fisttpll
mov
and
adc
std
sub
sbbl
or
je
adc
xlat
sbb
outsl
sub
push
test
testb
add
cli
loop
or
jp
add
mov
test
and
mov
mov
xchg
sbbb
popa
mov
inc
inc
push
and
xchg
in
test
push
addl
inc
mov
sbb
bound
sbb
fisubl
push
push
and
or
enter
adcl
jbe
xchg
jmp
xor
subb
adc
jle
scas
inc
insb
mov
mov
cmp
pop
testl
add
es
adc
jmp
jle
mov
movsl
sarb
ss
loopne
cmpsb
les
dec
into
rorb
sbb
sbb
jmp
push
out
add
rorb
fdivp
es
filds
js
xor
mov
mov
aas
pusha
sbb
mov
push
mov
mov
xchg
mov
shrl
ds
rol
pop
pop
loopne
repz
dec
mov
jge
adc
mov
out
cwtl
or
cmp
addb
mov
test
dec
dec
cwtl
xor
nop
std
repnz
jmp
and
add
iret
sbb
add
cmp
mov
test
inc
fsubl
jb
jne
xchg
clc
pop
notb
inc
push
pop
test
or
sbb
sub
rcl
in
cs
loope
scas
inc
xchg
mov
clc
adc
adc
mov
push
repnz
mov
adc
mov
sub
jo
movsb
adc
cmp
pop
mov
mov
mov
daa
or
ja
jno
aas
es
lret
fldl
mov
shll
adcl
mov
sarb
xchg
daa
xchg
es
lds
xchg
adc
push
repnz
lret
xor
jo
inc
pop
mov
jno
mov
and
sub
int
sbb
add
push
sbbb
aaa
cmp
sbb
test
mov
adc
adc
push
push
jbe
add
leave
and
xor
fsts
xlat
hlt
adc
add
cmp
lret
mov
fwait
gs
inc
sarl
push
xor
pusha
jl
cmpb
inc
pop
dec
std
push
push
ljmp
add
push
sbb
shll
mov
test
cltd
xor
push
pushf
add
lret
int3
sub
xor
fiadds
mov
inc
scas
mov
movsb
lods
sub
sub
xor
cmp
nop
js
dec
and
dec
jmp
sub
mov
or
pop
loopne
add
test
mov
mov
mov
xchg
mov
mov
outsb
or
add
push
push
bound
mov
jp
xchg
lea
dec
jp
add
mov
movsb
mov
int3
cmove
inc
scas
fwait
ret
dec
enter
inc
call
and
or
lret
sbb
push
mov
jp
mov
push
inc
dec
push
inc
nop
cmp
cwtl
cmp
xlat
jg
int
lret
or
dec
push
or
adc
cmc
pusha
push
mov
add
sub
push
xchg
orb
or
inc
unpcklps
sarb
and
repz
cmp
loope
or
cltd
mov
mov
sub
repnz
pop
lcall
loope
enter
mov
adc
push
push
xchg
add
xchg
mov
xor
inc
add
dec
loopne
mov
cmp
mov
cmpsl
cmpsb
sbb
ss
xor
add
xchg
push
insl
mov
push
pop
loop
jne
push
add
mov
leave
lods
and
iret
mov
pop
cmc
fwait
push
mov
add
ret
add
lock
shl
rorl
mov
inc
add
dec
push
popa
mov
daa
es
rolb
gs
sbb
pop
mov
jne
leave
out
add
push
and
inc
nop
pop
dec
dec
adc
mov
mov
adc
add
les
sub
mov
sub
insl
shll
adcb
rcll
aam
or
loopne
inc
mov
jne
rcll
pushf
test
movsb
and
aaa
into
icebp
stos
rorb
rclb
adc
jle
push
or
test
or
sub
lods
xchg
adc
cmpb
in
pusha
xor
pusha
inc
and
das
xchg
mov
testb
xchg
mov
notl
sbb
test
out
lcall
mov
dec
mov
push
xchg
jg
and
das
loope
int3
mov
pop
or
sub
pushf
xchg
add
xor
std
popf
add
out
rorl
loope
dec
mov
sub
rorb
fiadds
dec
fmul
pop
iret
push
pusha
mov
sub
fldl
out
add
inc
or
iret
mov
or
inc
sbb
pop
sub
inc
call
or
test
jnp
jne
dec
enter
sbb
movsb
ds
or
lahf
add
sub
call
add
or
mov
xor
and
pop
lahf
mov
cmp
xor
cld
stos
call
add
adc
lock
mov
adc
jp
mov
xchg
ror
or
enter
out
loope
loopne
int3
push
or
inc
push
testl
sub
es
lock
rorb
test
push
lahf
insb
push
cmp
in
iret
mov
fadd
dec
cltd
enter
pusha
lock
mov
pusha
js
cmpsb
jge
pop
mov
sub
es
cmpsl
loopne
dec
cmp
pusha
mov
xor
mov
fwait
pusha
xchg
dec
and
inc
add
mov
xchg
push
sub
inc
and
nop
mov
std
adc
testl
pop
adc
mov
push
jl
ret
ret
out
jp
add
add
jo
add
jo
push
inc
lret
mov
in
mov
test
mov
dec
aaa
loop
call
adc
pop
mov
loopne
push
adc
ss
das
xchg
mov
or
pop
mov
fsubl
add
leave
testb
movsb
mov
out
and
mov
add
pusha
in
aaa
and
sti
adc
add
sbb
mov
mov
xchg
cli
xor
dec
in
add
push
add
mov
mov
and
mov
in
sbb
dec
xor
imul
dec
aam
call
jnp
loopne
xor
fcompl
push
jne
rol
adc
inc
add
xor
add
xchg
adc
pop
push
lods
je
mov
stos
fdivr
pop
ds
dec
movsb
daa
mov
divl
mov
adc
inc
aam
mov
push
xchg
adc
and
dec
lcall
inc
addb
xchg
push
in
out
rorb
push
movsb
orb
sarb
lahf
pop
add
xor
or
sahf
scas
mov
cli
mov
xchg
mov
jl
jbe
je
cltd
test
mov
out
xlat
loope
xchg
jnp
cmpb
push
jl
or
loopne
mov
mov
fidivl
popf
xchg
cmc
jae
xor
push
dec
adc
shlb
iret
jns
add
mov
mov
pop
push
mov
cld
mov
call
pop
sbb
ret
adc
push
add
adc
lret
add
or
dec
add
cmp
stos
cmpsl
xchg
push
es
shrb
pusha
out
lcall
dec
mov
dec
stos
add
push
movsb
outsl
cmp
daa
ret
divl
jbe
pusha
loopne
push
in
les
mov
mov
lahf
cmp
adc
adc
dec
imul
push
movsl
add
lret
adc
call
shlb
repz
adc
mov
nop
mov
and
push
clc
lock
dec
popa
add
lcall
adc
stc
jecxz
pop
loope
in
mov
pop
xor
xchg
jo
ret
mov
and
es
das
sbb
push
es
popf
nop
add
add
adc
jnp
jmp
cmp
mov
adc
and
sub
mov
in
mov
sbb
les
test
xlat
jmp
jbe
add
mulb
push
xor
cld
arpl
or
dec
jge
add
push
push
pusha
bound
and
loop
cmp
dec
and
lcall
and
mov
add
sub
andb
push
inc
pop
add
sub
std
push
pop
bnd
sarb
cmp
es
adc
add
pop
testl
pop
movsl
int3
flds
inc
fwait
adc
xor
dec
xchg
xor
sti
jg
pop
and
mov
rclb
or
add
stos
cmpsb
jmp
pop
push
pushf
jge
add
mov
xchg
adc
iret
adc
lock
insl
mov
cmpsl
aaa
inc
xor
cmpsb
add
pushf
orb
sub
das
jb
add
pop
cmp
add
pop
sub
loopne
dec
rcrl
loope
daa
xchg
push
dec
movsb
pop
push
rcr
sbb
pop
popa
pop
mov
jl
pop
cmp
pop
sbb
es
shrb
bound
insb
cwtl
les
dec
dec
inc
xor
add
test
push
xchg
nop
pop
dec
mov
adc
add
insb
add
aas
loope
push
xor
lock
gs
xor
lods
pop
inc
pop
or
inc
xor
fsubrs
les
daa
inc
xor
adc
mov
mov
test
cwtl
adc
adc
xor
cmp
cmpsb
xor
cmp
fs
cwtl
hlt
movsl
jne
rolb
pushf
pop
lcall
sbb
sub
stos
cld
sbb
pop
std
insl
es
imul
es
scas
nop
lret
inc
dec
into
and
mov
rclb
push
pop
pop
stos
mov
push
out
pop
add
fbstp
mov
call
test
inc
aaa
add
xchg
fldl
adc
push
fcompl
lock
pop
xchg
sbb
pop
stos
sahf
adc
mov
inc
xchg
jae
adcb
int
scas
div
lock
js
mov
sub
xor
jge
aaa
in
push
mov
lods
push
or
pop
adc
pop
rolb
movsb
shr
int
in
sub
add
movsb
push
cmp
test
adc
lock
cmp
loope
add
add
lock
sub
mov
sarb
jo
icebp
cmp
loop
push
and
sbb
lret
cmp
jae
imul
xor
rol
push
xchg
shll
inc
fcompl
shl
fucomi
xchg
and
popf
jl
inc
lds
mov
sbb
dec
sahf
sub
sbb
popa
hlt
lret
push
inc
or
cmp
and
dec
push
mov
aad
cmp
lock
cmpsl
push
adc
sub
test
test
sar
add
cmpsl
ret
or
inc
repz
sub
cwtl
jbe
jno
mov
cmp
into
adc
dec
scas
push
loopne
mov
fs
lds
or
jl
push
push
or
mov
iret
es
nop
dec
mov
mov
mov
imul
jle
dec
mov
cmp
test
lock
testl
jb
mov
jp
jns
enter
outsl
push
rcrb
inc
mov
add
push
jmp
push
ret
and
push
push
stc
loop
mov
jp
push
mov
loopne
cmpsl
sti
add
push
sbb
clc
mov
test
aaa
add
add
ror
popf
fimuls
jmp
pop
cmp
push
xor
mov
cmp
and
pcmpeqw
and
push
mov
cmpsl
adc
cmc
into
push
sub
push
hlt
adc
mov
aaa
fmul
push
jge
pop
divb
les
cmc
insb
test
inc
les
or
jnp
jl
movsb
pop
incb
jp
push
loop
and
int3
insl
add
sbb
push
cmp
mov
pop
outsl
add
push
aad
inc
mov
jmp
das
and
add
sahf
fmulp
add
fwait
cmc
xchg
jecxz
fs
call
mov
jl
dec
xor
les
clc
or
lods
mov
adc
lret
es
cmpsl
xor
dec
adc
push
sub
mov
in
and
loope
cmp
test
test
xchg
rcrb
pushf
addb
or
dec
mov
dec
jnp
add
imul
pop
stos
cmpb
pop
push
cmovne
xchg
sarl
sbb
scas
and
pop
pop
and
mov
dec
sbb
inc
add
ret
adcl
in
pushf
or
xorb
pushl
fsubl
sbb
popa
add
sub
cmpsb
das
mov
mov
pusha
push
cmp
add
adc
test
test
adc
add
es
push
call
pop
mov
xor
dec
add
and
push
cmp
cmp
clc
mov
dec
jno
les
push
lods
fldl
push
lret
popa
fs
lea
decb
cmc
xchg
add
icebp
xchg
cmp
mov
insl
cmp
and
push
js
das
shll
sbb
dec
mov
inc
fadds
lock
sub
pop
inc
mov
add
cld
push
arpl
rcll
hlt
movsb
cld
subl
adc
repnz
xor
add
adc
cmp
mov
or
push
pusha
test
pop
lret
and
add
inc
push
lock
pushf
andb
cwtl
loopne
mov
ljmp
pop
inc
lret
xor
xchg
icebp
inc
adc
xor
sahf
mov
inc
lods
icebp
mov
xor
push
push
push
dec
es
xor
sub
fnstsw
jecxz
orl
ljmp
adc
and
and
jge
rolb
add
addl
jp
imul
into
sub
or
lret
xchg
les
sub
dec
xor
push
loopne
ss
test
aas
push
mov
add
mov
repnz
mov
add
stos
inc
ljmp
inc
sbb
aam
nop
into
dec
filds
and
sbb
push
sbb
push
inc
stc
enter
roll
insb
add
xchg
adc
add
mov
mov
dec
daa
cmc
lds
add
leave
and
mov
fidivrs
scas
add
jge
or
stc
in
popa
es
cmp
fistpll
dec
or
mov
add
dec
dec
or
inc
or
jmp
gs
add
dec
sbb
jecxz
push
cmp
cli
fiaddl
push
mov
jb
ds
add
mov
wrmsr
sahf
aaa
pop
imul
add
jp
out
fiadds
js
xor
adc
dec
mov
jmp
adc
les
test
pop
sbb
test
jge
stc
dec
xor
idivl
pusha
in
sub
shrb
add
mov
pop
add
jnp
out
out
pop
sbb
push
cmp
fwait
mov
dec
scas
in
inc
mov
push
push
adc
addl
or
lea
inc
mov
shll
out
clc
cmp
mov
dec
dec
push
sub
mov
adc
add
jnp
dec
cmp
and
iret
stc
mov
mov
fisubs
dec
js
sub
shrb
mov
hlt
push
cmc
push
je
les
cmp
mov
popa
ja
push
dec
and
jno
adc
add
mov
paddb
cltd
and
push
sbb
jbe
in
pusha
sub
sub
scas
cli
sbb
int3
rol
mov
ljmp
and
jbe
mov
jb
pop
and
loop
jle
in
dec
jb
cmovbe
jmp
and
and
pop
nop
pop
cmp
mov
bound
loopne
cltd
scas
or
xor
in
shr
cld
and
lret
movsb
adc
or
lock
jg
push
jl
sub
add
pusha
mov
add
cmp
mov
adcb
lea
repz
mov
js
push
or
popf
rorb
push
jg
inc
pusha
add
pop
mov
push
and
imulb
stc
movsb
insb
mov
roll
and
sub
adc
aam
pop
jbe
orb
sub
mov
xchg
push
add
aad
dec
add
test
inc
enter
add
in
sti
xlat
mov
and
xor
xorb
pop
ret
pushf
aaa
mov
shlb
jle
add
addl
loopne
sbb
in
or
cmp
inc
ret
bound
cmp
rolb
push
jg
mov
fbstp
jbe
jae
lret
mov
xchg
push
sbb
xor
inc
flds
sub
movsb
add
popf
enter
push
and
mov
sub
movsl
sub
imul
cmp
clc
das
add
mov
add
push
push
jmp
in
inc
cltd
pusha
movb
mov
xor
add
xor
pop
es
in
cmp
test
enter
loopne
popa
add
or
sbbb
jns
cltd
rol
pop
mulb
lock
pusha
cld
ja
imul
mov
nop
push
in
scas
rcll
fsubp
bsr
dec
pop
add
lret
data16
sbb
sahf
out
clc
mov
inc
fbstp
adc
xor
insl
ss
or
std
add
xor
cld
jg
xor
pop
mov
push
jl
int3
lcall
adc
mov
cmp
inc
sti
jl
mov
and
nop
pop
cli
out
add
and
loopne
imul
cmp
sub
insb
pop
mov
sbb
js
fcoms
leave
or
pop
dec
add
push
dec
cmp
mov
and
addl
jmp
scas
shll
rorb
scas
lea
cmpsb
rcr
dec
es
push
std
in
xchg
aaa
mov
out
add
andb
dec
mov
repz
mov
jbe
rcrb
dec
jg
test
js
mov
xor
scas
and
es
cmovo
pop
push
xor
ljmp
js
daa
nop
add
mov
xor
and
cmpsl
test
dec
clc
xor
add
sbb
lods
rorb
push
test
inc
mov
js
adc
jbe
das
test
xor
inc
fdivr
movb
int3
add
mov
jge
call
jg
push
scas
into
pop
adc
js
scas
and
sahf
dec
test
add
cs
mov
repnz
add
cmp
cmp
jg
test
ss
and
add
mov
cmp
add
addl
nop
jge
ljmp
faddl
or
cs
lahf
add
dec
and
lods
cmpsb
dec
mov
cltd
scas
int3
inc
negb
js
fcompl
cmp
mov
push
sub
stc
and
lahf
cmpsl
int
adc
in
cmc
shrb
pop
popa
lods
xor
orb
loopne
mov
dec
adc
rorl
inc
adc
call
int
xor
icebp
ja
add
fsubp
and
sbb
mov
mov
sbb
lock
and
lcall
jle
add
and
sbb
dec
movb
sub
in
inc
pop
mov
sub
sub
lods
sub
add
jge,pn
push
jo
mov
jle
or
mov
andl
sbb
sbbl
test
out
aam
and
pop
call
add
aam
jbe
addr16
daa
enter
mov
push
mov
xor
aaa
sbb
mov
ficoml
fiadds
cmp
aas
popf
jo
xchg
getsec
push
ljmp
jge
pusha
add
dec
cwtl
xchg
push
pusha
sbb
jle
sbb
in
mov
xor
mov
sbb
sub
xor
mov
or
popa
ficoms
sarb
enter
fs
pop
add
addr16
sbb
es
sbb
sub
popf
push
and
adc
or
enter
lods
leave
nop
inc
loopne
push
fcmovnb
push
cmc
daa
mov
and
out
mov
les
dec
xor
bound
rclb
mov
test
mov
or
sbb
cmpsb
adc
js
mov
in
lahf
mov
clc
xchg
ljmp
sub
and
and
adc
cmc
xchg
movsb
add
cwtl
insb
pop
and
jb
addl
xor
inc
lock
js
push
test
xchg
dec
orl
movsl
lock
mov
repz
and
clc
sbb
xor
mov
aam
adc
lock
pop
test
pop
bound
mov
rclb
fwait
and
add
add
scas
pushf
adc
js
sbbb
jo
pop
sbb
jecxz
or
das
add
adc
inc
inc
jmp
add
jo
and
imull
cmpsb
shll
xchg
mov
ja
xchg
cmp
popf
adc
add
jbe
leave
lds
repz
mov
mov
add
fsubrs
jbe
scas
icebp
lahf
pop
mov
mov
adc
enter
mov
cmpsb
je
rclb
es
pusha
push
out
call
fwait
sbb
adc
xorb
call
fsubs
testl
out
sar
inc
jle
ljmp
je
adc
xchg
js
mov
jae
mov
nop
mov
push
movlps
inc
hlt
mov
pop
xchg
unpcklps
inc
fs
int3
and
dec
jle
in
mov
in
dec
jne
inc
scas
clc
add
fsubrs
pop
mov
jecxz
dec
dec
jl
scas
adc
hlt
sbb
sub
cmp
aas
or
pop
leave
fists
dec
call
dec
and
adc
ffree
xor
cs
push
add
sbb
xchg
in
out
pop
hlt
out
int3
add
mov
scas
pusha
pushf
mov
outsl
ret
mov
out
ret
sbb
jle
nop
mov
sar
add
sar
adc
mov
cld
pop
std
adc
add
jmp
clc
loopne
mov
mov
push
and
pop
frstor
mov
out
cmp
sbb
mov
pusha
mov
push
ljmp
in
or
pop
cmp
mov
in
push
ljmp
push
or
inc
mov
imul
ljmp
cmp
push
inc
xor
lock
jmp
jns
mov
arpl
cwtl
jb
and
lret
mov
nop
shlb
sub
aaa
decb
xor
push
push
push
mov
dec
clc
rol
jmp
outsl
scas
inc
cmp
call
lret
xor
ljmp
push
pop
call
in
test
ljmp
out
or
or
fs
dec
test
ja
mov
sbb
mov
out
jmp
mov
jae
jg
and
mov
jge
xor
or
mov
repnz
pop
les
hlt
mov
dec
mov
and
sbb
sub
imul
mov
jne
xor
ljmp
sbb
add
and
or
clc
sub
push
rolb
adc
xor
addb
adc
ljmp
popa
xorb
add
repnz
xor
and
cs
and
add
inc
pop
push
mov
xchg
cmp
jno
xchg
lock
pop
fidivrs
xor
and
movsb
ss
les
in
fimuls
int3
imul
out
add
mov
add
cmpsb
add
add
push
adc
sbb
dec
femms
rolb
sub
xor
mov
inc
push
mov
idivl
lods
xor
xchg
jle
loop
adc
push
xor
adc
hlt
fadd
mov
inc
inc
das
sub
ret
add
jg
push
xor
add
push
sub
push
xorb
shlb
push
mov
andb
pop
cmpsb
sbb
sarb
ljmp
push
dec
movsb
dec
xor
leave
adcl
mov
sbb
add
out
call
loope
xor
pop
rolb
cmpsb
pop
mov
lcall
loope
and
or
and
into
inc
push
mov
daa
sub
push
cwtl
sub
or
xlat
sub
sbb
inc
es
addl
pushf
call
inc
mov
rcll
dec
icebp
inc
call
fs
xor
lcall
cltd
addr16
and
rorl
iret
daa
jne
push
and
pop
inc
nop
jae
jp
pop
add
fucomip
sub
and
mov
cmp
adcl
ret
rorb
jecxz
inc
dec
mov
hlt
and
cmp
push
xor
pop
sub
jmp
cmp
out
xor
imul
mov
mov
pusha
sbb
push
fs
add
and
testb
mov
adc
ret
pop
enter
xchg
mov
cmp
lahf
jecxz
jo
pop
xor
xchg
outsb
popa
ljmp
enter
xchg
cmp
inc
xor
dec
clc
out
jae
pusha
add
and
negb
mov
push
xor
pop
imul
cmpsl
pop
mov
aaa
rdtsc
shl
sub
ljmp
xchg
add
mov
add
adcl
test
xchg
enter
or
cs
add
xor
pop
pop
push
push
dec
dec
fwait
or
mov
mov
jnp
jle
sti
inc
push
ret
pop
mov
dec
subb
decl
ljmp
add
jnp
adc
or
ljmp
dec
mov
movl
cli
jg
dec
ret
enter
or
test
adcb
add
dec
sbb
daa
mov
repnz
or
mov
and
call
cmp
jp
cmp
adc
subb
andl
mov
lret
addr16
adc
clc
mov
mov
inc
outsb
adc
enter
xchg
icebp
pop
ljmp
addr16
imul
mov
mov
les
xchg
push
lahf
or
inc
xchg
arpl
pop
adc
jl
inc
int
cmp
push
mov
sbb
push
sub
test
push
jo
sub
mov
sub
sub
cmp
and
insb
popa
cmp
adcb
sub
or
push
insb
loope
cmovb
inc
test
add
mov
add
std
and
add
pop
xchg
pop
test
imul
jecxz
clc
pop
sbb
jg
sbb
push
mov
dec
add
or
push
bound
arpl
iret
nop
mov
or
insb
xchg
lahf
or
les
pop
pop
add
pop
das
dec
xor
call
ss
push
push
aam
les
jnp
iret
pop
and
rcrb
jg
jo
jo
mov
add
or
jbe
jge
es
push
mov
push
xor
xchg
dec
sbb
xor
fldl
imul
loopne
push
shr
subl
sbb
fs
or
add
dec
xor
ret
push
imul
fmuls
inc
mov
adc
imul
loop
pop
and
ret
and
and
jne
sbb
icebp
add
cmp
push
fldenv
mov
and
push
and
ljmp
add
in
push
inc
mov
nop
imul
lcall
pop
shr
xchg
push
pop
sub
or
mov
clc
loope
adc
adc
mov
sub
xor
fprem
dec
ja
push
jns
push
add
mov
or
push
xor
mov
pop
lahf
inc
sbb
adc
push
mov
sub
out
cmp
push
movsb
pop
push
push
jmp
ficoml
fisubrs
xor
xor
neg
add
mov
ret
sbb
cs
push
rcll
sahf
adc
mov
inc
in
xchg
testl
push
add
ffreep
jno
orb
pop
push
jmp
lods
add
xor
pop
pusha
jae
push
jmp
jne
cwtl
xor
in
dec
dec
sub
mov
movups
push
sti
int
mov
fimuls
adc
fadds
sti
push
push
aad
cmpsb
add
stos
push
sbb
mov
push
inc
ljmp
popa
rcl
or
cmp
pop
loop
jg
fcoms
mov
and
or
mov
jecxz
jns
sub
pop
inc
dec
add
mov
daa
les
outsb
mov
push
sbbb
inc
pusha
sub
sbb
sub
call
adc
push
das
jbe
sbb
xor
out
mov
or
cmp
sub
or
jmp
add
push
ljmp
jmp
les
jno
icebp
inc
add
lock
aam
orl
andl
bswap
jl
roll
rcrb
add
sub
jmp
mov
xor
out
add
pop
cmp
orb
sub
lahf
out
add
add
rcl
mov
push
mov
push
push
mov
or
insl
and
inc
or
pop
cwtl
add
in
loopne
xorb
pop
xchg
pop
mov
inc
fwait
push
adc
mov
dec
inc
fwait
or
je
rorb
add
movsb
std
popf
or
sarb
cmp
xor
or
int
xor
sahf
or
jae
repz
aas
mov
arpl
shl
mov
and
inc
lahf
test
push
dec
pop
or
xorb
out
push
add
pop
aad
add
popa
xor
cmp
add
pop
scas
insb
add
sti
jmp
mov
push
adc
fwait
sub
cmp
inc
fistl
aaa
sub
cmp
inc
xor
mov
and
dec
cmp
mov
dec
and
add
pop
jle
and
sbb
fsubrs
out
dec
add
or
pop
mov
in
add
pop
jmp
mov
xor
imul
pop
shr
imulb
dec
or
cmp
movl
pop
or
push
leave
inc
lret
pop
in
gs
mov
or
ror
xor
add
aas
cmp
fldl
repnz
repz
test
jnp
dec
movl
lods
ret
add
or
push
les
neg
cmpsb
out
ret
jmp
inc
pop
loope
xor
es
mov
push
mov
sub
fs
dec
dec
mov
sbb
jmp
test
mov
orb
or
push
mov
mov
fs
mov
xor
push
mov
bound
inc
jo
push
stc
pop
and
mov
push
imul
neg
xor
mov
pop
adc
leave
adc
mov
mov
pop
sub
xchg
adc
mov
and
or
fdivrs
test
es
in
jmp
imul
pop
pop
push
jmp
popa
mov
jbe
inc
mov
insb
xor
cmp
nop
mov
inc
xchg
sbb
push
lods
jae
sub
mov
xor
jnp
das
test
shl
mov
xor
xor
icebp
lret
push
and
cmpsb
add
popa
and
xchg
xor
sarb
or
pushl
or
pop
push
and
in
and
insb
or
xor
push
adc
outsb
ret
movzbl
rorb
xor
sbb
ret
cmp
loope
bnd
jle
xchg
push
sbb
lahf
out
dec
lds
aad
inc
cld
mov
pop
xchg
shr
arpl
xor
cmc
enter
inc
and
ja
aam
sub
lcall
xor
sub
mov
pop
pop
add
aaa
clc
cli
pop
add
cmp
pop
and
outsb
xchg
sbb
les
jno
xor
adc
jp
sub
lret
cltd
int
aad
sub
or
frstor
and
ror
or
add
loopne
into
cmp
scas
inc
not
addl
icebp
and
pop
pop
xor
pop
add
pop
call
addl
push
jmp
roll
jo
enter
push
shrl
sub
mov
loope
ret
das
mov
add
mov
mov
mov
mov
mov
dec
inc
push
pop
mov
mov
or
shr
iret
push
add
loop
sbb
cmp
xor
sbb
push
nop
movl
or
mov
inc
mov
leave
jmp
out
adc
test
mov
jp
adc
out
lcall
outsb
sbb
push
jmp
xchg
and
mov
push
and
test
xchg
add
movsb
add
sbb
scas
cmpsl
push
in
ljmp
add
push
push
hlt
inc
sub
lds
mov
pop
cmpb
rorl
xor
into
int3
mov
add
xchg
imull
stos
sub
mov
adc
pop
out
clc
es
out
cmpb
push
lock
add
push
inc
lahf
addb
out
xchg
inc
and
pop
sub
sub
test
pop
push
jno
cmp
or
push
mov
or
testl
mov
and
rcr
in
jmp
jmp
ljmp
lret
pop
jge
xor
or
or
lds
and
mov
ds
loope
sbb
adc
pop
and
pop
xchg
cltd
fs
push
insb
es
cli
push
mov
push
ret
shll
out
and
pop
xor
loope
pop
dec
sbb
ret
push
mov
rcrl
sbb
cmp
dec
push
add
inc
enterw
fwait
insb
cmp
jmp
cmpsb
xor
push
sub
or
jmp
xchg
out
jmp
mov
das
stos
jg
jns
xlat
mov
push
mov
adc
add
lcall
outsl
leave
or
push
sbb
ficomps
mov
xchg
dec
shr
push
mov
cmp
xor
or
mov
pop
shll
je
in
pop
out
push
adc
fidivl
leave
mov
out
xchg
jl
cmovs
sub
or
mov
in
inc
push
jmp
out
lds
in
inc
dec
mov
pop
repz
dec
sub
and
add
int
dec
testl
ret
shr
add
pop
sub
mov
out
mov
cltd
test
mov
push
shl
loopne
push
shl
andl
aad
nopl
pusha
add
pop
addb
jle
dec
pop
sub
loop
pop
inc
pop
jecxz
add
sub
cli
notl
in
push
inc
ficompl
mov
rclb
out
add
out
iret
xor
pop
int3
ret
mov
inc
mov
pop
test
mov
jmp
add
pop
loop
shl
nop
mov
ret
les
imul
push
inc
mov
sub
adc
sub
lret
pop
mov
popf
subl
mov
mov
faddl
dec
pop
adc
test
loop
xchg
adc
add
repz
xchg
cmpsb
rorl
push
xchg
scas
mov
pop
arpl
xchg
negl
popa
adc
fimuls
pop
dec
subb
pop
push
cmp
xor
push
pop
or
popa
repz
xor
push
leave
add
sub
subl
movsb
scas
dec
inc
test
or
mov
mov
fstpl
call
jo
iret
cs
pop
rcll
or
mov
and
xor
add
shr
xor
or
add
pop
sub
movb
push
push
jb
lock
mov
add
cmp
and
adc
or
sub
movsl
lret
mov
and
add
repz
mov
mov
ficomps
addr16
lds
and
push
in
add
ja
jns
int3
mov
data16
jmp
or
cmp
mov
adc
push
jmp
inc
popa
lret
xor
push
push
jmp
sbb
rorb
cmp
sub
inc
or
push
rcr
and
aas
and
adc
data16
xor
outsl
nop
cmp
pop
push
hlt
pop
push
adc
xchg
loopne
and
sbb
xor
or
push
or
cmp
or
pop
outsl
mov
filds
int3
sbb
dec
pusha
mov
dec
sqrtps
xor
mov
xlat
cwtl
fsin
lods
xor
fsubs
adc
dec
lahf
jmp
sub
lahf
and
mov
xchg
fsubs
mov
push
mov
jmp
subb
inc
aas
mov
cmp
pop
pusha
sbb
fcoms
pop
xor
or
insb
mov
mov
int3
sbb
xchg
or
jmp
inc
pop
sbb
pop
xor
adc
mov
pop
push
out
jmp
out
push
out
sti
mov
pop
pop
or
push
ret
jmp
sub
add
jmp
jno
sub
xor
or
xor
fs
inc
jo
loop
xor
cmp
or
sub
fbstp
leave
xor
add
jp
and
flds
add
sbb
pop
pop
jmp
add
fdiv
xchg
mov
icebp
dec
xchg
or
add
jle
dec
cld
sbbl
movsl
add
add
je
add
shl
jmp
gs
jns
out
pop
mov
jmp
rcll
lret
push
dec
inc
ljmp
pop
push
adc
call
lods
loope
cmc
lret
push
pushf
pop
and
xor
mov
jnp
or
jmp
cmovae
pop
sub
and
data16
push
pop
xor
jno
jle
sub
jmp
pop
fmulp
mov
push
insb
jns
push
push
pop
mov
inc
jmp
cmp
sub
pop
sub
inc
jmp
xchg
mov
andl
push
div
jmp
daa
jecxz
test
and
roll
out
pop
add
adc
int3
add
and
sbb
xchg
jae
fsubr
inc
pop
lods
add
dec
outsb
outsl
mov
xchg
imul
jbe
add
int
add
jmp
test
and
dec
and
or
jmp
sbb
mov
dec
ret
repz
ljmp
jl
adc
pop
or
lcall
inc
push
and
pop
lcall
or
adc
sub
pop
addr16
sub
cltd
iret
jae
popf
add
xor
jmp
cmpb
push
sub
pop
mov
enter
aaa
arpl
add
dec
jo
jae
add
out
add
cli
mov
lock
jecxz
repnz
repz
pop
mov
push
in
lods
push
jne
or
scas
pop
int3
adcl
jmp
jae
xchg
pusha
fmuls
push
sub
mov
pop
push
or
push
cmpsb
gs
repnz
adc
ret
addr16
mov
mov
or
xchg
mov
inc
jmp
push
xchg
insl
and
in
je
cmc
or
nop
fbstp
add
cwtl
inc
add
jmp
movsb
sub
rclb
fnstcw
sub
sbb
sbb
inc
push
sub
add
fistpl
push
xchg
sbb
and
and
inc
dec
push
sub
aad
dec
pop
mov
iret
enter
leave
mov
push
ds
int3
pop
mov
lds
mov
mul
ss
cwtd
mov
jg
lods
sub
pop
icebp
daa
cmpsl
and
mov
inc
in
push
jmp
inc
adc
mov
nop
inc
push
bound
imul
and
pusha
jecxz
push
push
mov
mov
cmp
movsb
ret
pop
pop
push
shr
addr16
bound
add
int
pop
jb
int
enter
push
and
cmc
mov
js
fs
lahf
test
loopne
in
push
insl
aas
jmp
sbb
pop
add
sti
cmp
orb
enter
scas
mov
popf
push
lret
cmp
subb
add
jo
clc
or
ret
ficoms
mov
aaa
pop
and
mov
pop
dec
insb
cmp
push
push
rcr
dec
add
and
push
and
out
cld
nop
or
pop
dec
cs
mov
adc
push
in
add
pop
pop
xor
cmpsb
jbe
ja
out
call
mov
adc
scas
or
dec
imul
and
mov
mov
loopne
mov
mov
push
sub
xor
pop
push
or
cs
or
inc
adc
or
xor
inc
lds
getsec
sub
pop
cmp
lods
fiaddl
jmp
add
push
movsb
xorl
popa
js
loop
and
sbbb
and
arpl
and
aam
xchg
filds
dec
scas
pop
cmp
fdivrl
dec
shr
pusha
xlat
mov
inc
es
test
sbb
leave
addb
jns
shlb
movb
pop
pop
mul
sub
dec
scas
add
lock
sar
stos
orb
rol
mov
data16
jge
clc
inc
dec
pop
les
pop
jl
pop
dec
push
cmp
jle
cltd
cmp
xchg
fs
jmp
pop
popf
xor
jl
or
fwait
cmp
fimull
inc
mov
mov
add
pop
mov
sub
roll
out
scas
int
fwait
cmp
imul
cmp
adc
ror
sub
lahf
push
nop
add
icebp
or
and
mov
mov
add
xor
jmp
dec
leave
add
mov
mov
stc
loopne
jge
subb
and
inc
pop
add
ret
pop
push
js
inc
incb
push
scas
push
inc
push
or
fs
fildl
or
push
mov
shl
icebp
lret
iret
xlat
movb
bound
inc
lcall
inc
shll
jg
cwtl
and
mov
enter
les
hlt
repnz
in
jl
fpatan
push
fbld
adc
nop
decl
sbb
add
pop
xor
xchg
push
nop
push
adc
push
sahf
movsl
add
pop
pop
xchg
cmc
into
xor
mov
mov
dec
adc
imul
sbb
or
or
and
jnp
iret
push
lahf
test
addr16
fmulp
dec
cli
add
xor
rcrl
mov
mov
push
inc
das
mov
inc
mov
or
or
jnp
add
push
gs
mov
loop
insl
dec
movmskps
push
mov
jno
cli
sbb
fs
in
aad
popf
push
insb
roll
sbb
or
sub
inc
mov
mov
pop
repz
pop
lret
add
push
cwtl
cli
mov
sub
add
jne
mov
xor
rolb
lds
mov
mov
push
pop
lock
xchg
mov
rcrb
lret
cmp
mov
push
repz
cmp
jbe
jns
add
fstps
enter
and
jmp
adc
push
testb
or
lret
mov
stos
push
jmp
inc
cmp
inc
pop
scas
adc
cmp
xlat
xchg
jne
mov
mov
inc
sarb
xor
in
mov
jp
jbe
shl
pop
out
icebp
sbb
movsb
in
inc
add
in
in
lea
dec
shl
pop
aaa
add
mov
shr
xchg
and
xorb
cs
sbb
jb
fcoms
pop
loop
pop
pop
add
xchg
jno
dec
push
addr16
nop
fdivs
xor
mov
push
pop
push
notb
pop
jmp
shr
outsl
xchg
out
pop
xchg
pop
xchg
dec
ret
cmc
push
push
hlt
dec
sbb
scas
je
loop
add
adc
aaa
add
mov
cli
fnstsw
push
and
sbb
mov
push
adc
decb
je
sub
jmp
xor
xlat
or
pushf
dec
dec
add
inc
out
pop
ret
ljmp
sub
inc
pop
cltd
sub
cmp
lock
loope
aam
push
mov
in
xchg
sub
add
add
cmp
cld
jl
popa
sub
pop
gs
add
push
add
inc
mov
popf
inc
movsl
mov
mov
rolb
add
jmp
in
div
ds
push
cmpsl
sub
addl
shll
mov
rclb
enter
es
ja
es
sub
mov
and
sbb
xchg
adc
sub
sbb
sub
xor
lcall
jne
inc
pop
mov
pop
rcrb
iret
mov
daa
add
scas
add
loop
repz
inc
add
sbb
daa
jbe
sbbl
rorl
pop
fwait
inc
mov
push
push
jmp
jbe
lret
dec
mov
dec
mov
inc
and
xor
stc
popf
adc
dec
add
pop
mov
mov
mov
aam
enter
aas
ljmp
loope
sbbl
cmp
inc
testl
cmpsb
and
das
pushl
push
push
push
dec
pop
cmp
add
sub
insl
mov
jno
pushf
incl
dec
test
aad
subl
stc
or
adc
jp
jo
add
xchg
adc
or
jmp
ja
sbb
pop
dec
sbb
xor
insb
fwait
xchg
mov
inc
test
call
pushf
xor
pop
xchg
xchg
jne
outsb
sub
push
sbb
pop
pop
es
dec
xorl
in
mov
sub
adc
mov
enter
and
cs
push
orb
mov
jmp
lret
neg
xchg
shrb
dec
inc
mov
push
test
mov
fs
xor
mov
pop
andl
fstl
inc
sarl
xor
fmulp
pop
adc
sarb
xorb
movsl
fiaddl
das
mov
inc
pop
add
xchg
sbb
xchg
mov
or
imul
jbe
and
dec
nop
iret
bndstx
xor
or
inc
push
fs
out
sub
push
add
orb
jp
pop
jb
xchg
xchg
test
sub
jb
adc
or
std
pop
inc
negb
push
sub
test
lods
ret
cmp
fiaddl
mov
xchg
mov
lods
xchg
push
mov
push
pop
jns
dec
or
and
pop
pop
xor
push
pop
push
dec
xchg
xor
sbb
movsb
es
lods
rcr
mov
and
orb
xchg
adc
push
push
add
pop
imul
clc
lret
in
jl
mov
jmp
scas
insb
and
addl
pop
sar
test
lret
jnp
outsl
sub
pop
pop
inc
mov
in
inc
jmp
pop
mov
mov
jo
or
jmp
mov
pop
inc
push
dec
lock
cmp
pop
adc
adc
add
shr
add
push
add
es
jl
dec
pop
add
push
jo
mov
ja
jmp
test
or
pop
outsl
and
lock
or
arpl
iret
add
and
cli
pop
push
mov
push
mov
pop
ret
ss
sarl
pop
adc
rcrl
jl
add
jmp
pop
push
push
fs
mov
mov
add
fcomps
call
push
mov
popa
pop
add
clc
inc
cmp
fmuls
ret
pusha
sub
xor
mov
aam
jmp
loope
xor
mov
dec
jnp
cs
dec
loop
cmp
fs
and
sub
outsl
sbb
rorb
push
add
test
pop
lock
jmp
mov
imul
or
fwait
insb
xchg
mov
sbbb
mov
xchg
loope
lahf
or
shlb
adc
sti
arpl
in
jne
lahf
jo
add
sub
aas
push
das
sbb
gs
cmc
add
pop
addr16
call
stc
jo
fwait
mov
enter
xor
sub
jmp
repz
popa
fistl
cmc
jae
jmp
or
dec
rorb
add
iret
adc
and
xor
cmp
sub
clc
or
pop
or
inc
lea
add
daa
and
add
add
repz
shl
imul
stc
out
cmpb
mov
mov
push
icebp
push
shlb
lret
pop
push
sbb
inc
adc
push
mov
xchg
hlt
lock
add
mov
andb
pop
or
xor
mov
xor
fucomip
jmp
repnz
ret
fidivs
mov
lds
shr
xor
sbb
inc
repz
xor
mov
mov
push
pop
loope
sub
mov
fucomi
test
std
inc
das
dec
xchg
and
add
inc
nop
bound
cmp
pop
pop
and
push
add
rclb
sub
add
or
rcrb
mov
iret
jmp
pusha
mov
sub
mov
shrl
insb
pusha
leave
jo
or
cli
or
sbb
mov
ss
insb
rcll
push
push
daa
sub
dec
push
cmp
jp
roll
das
ja
rcr
dec
mov
mov
cld
pop
fisttpll
add
or
xor
inc
or
dec
pop
sub
dec
in
inc
cmp
shrb
dec
lret
jmp
movsl
data16
rclb
mov
or
subb
add
add
push
mov
sbb
jecxz
loop
mov
mov
fwait
pop
and
add
mov
mov
out
cmp
push
jmp
mov
adc
rolb
pop
popa
in
pop
in
inc
pusha
rcll
dec
jae
inc
pop
sbb
sbb
pop
int
sahf
aas
dec
adc
bound
or
jmp
lea
sbb
pop
inc
call
orb
push
add
mov
jae
mov
and
nop
addr16
add
add
cltd
ds
push
xor
jb
mov
pop
add
push
mov
in
xor
dec
in
lcall
imul
or
cmp
std
add
sbb
in
ljmp
cld
adc
and
add
add
dec
or
das
add
clc
add
pop
imul
inc
pushf
insl
inc
jnp
shll
popf
add
loopne
notl
and
sub
or
nop
ljmp
lret
popa
or
dec
in
out
sub
dec
pop
sub
daa
lods
fstpl
push
and
incb
adc
and
push
adc
dec
cmpsb
xchg
and
shll
dec
fstps
add
add
and
and
mov
inc
out
outsl
mov
bound
addr16
pop
sbb
adc
lret
mov
aad
mov
int
out
dec
dec
cmp
xchg
xorl
jmp
sub
mov
fs
and
les
xchg
into
pusha
rorb
xchg
and
fnstcw
push
mov
pop
jge
cmp
dec
mov
adc
sbb
icebp
pop
inc
fimull
or
push
adc
mov
or
lret
rcrb
sub
or
add
loope
rcl
iret
sbbb
cmp
and
shl
cmp
add
mov
pop
jge
dec
int3
imul
lods
xchg
xor
push
sbb
sbb
leave
jl
pop
jb
pop
push
cwtl
in
fwait
lahf
adc
inc
and
addb
shll
repnz
add
popa
pop
jge
repz
sbb
cmp
jno
push
or
js
or
sbb
push
xchg
sbb
lock
imul
mov
mov
cmc
aas
inc
push
or
incb
das
test
loop
mov
daa
movd
lds
adc
dec
pop
mov
rolb
mov
lods
push
sub
cmp
xchg
movsb
cmp
ret
adc
fmuls
fisttpl
cmp
ss
add
sahf
xchg
pop
xor
fadd
out
gs
add
shr
xchg
loopne
push
xor
fbld
imul
bound
nop
in
repnz
inc
dec
das
xor
pop
inc
fnsave
push
dec
or
leave
into
dec
xor
inc
mov
fisubl
js
mov
jb
add
add
push
cmp
dec
push
jbe
iret
xlat
cltd
push
call
imul
xor
pop
mov
out
add
je
test
jmp
ret
push
push
imul
sub
loopne
xchg
pop
das
jmp
aam
cmp
test
sub
fsubp
dec
jecxz
aam
xor
jp
jb
xor
or
ds
or
jmp
xor
pop
push
hlt
sub
and
shr
fmul
icebp
iret
adc
xchg
cmp
and
push
mov
add
mov
or
icebp
sub
or
fsubl
or
pop
sub
bound
dec
or
in
add
and
in
add
rcrb
cmc
aaa
pop
jp
jle
pusha
pop
and
adc
cmp
add
push
pop
sub
mov
mov
mov
jo
xor
aas
mov
clc
lods
xchg
mov
jmp
and
mov
pop
sub
arpl
add
xor
pop
sub
dec
pop
fsub
loope
mov
pop
scas
ds
cwtl
pushf
ljmp
mov
stc
or
pop
adc
cmp
jmp
sub
mov
inc
jg
scas
rcrl
fwait
mov
in
or
jmp
cmp
ljmp
jae
mov
pop
cmc
or
insb
fcomip
js
lahf
xchg
idivb
and
adc
sub
test
mov
mov
dec
adc
call
jb
xor
jae
sbb
cmpsb
repnz
push
imul
jnp
add
xchg
dec
das
popa
lret
mov
cmp
cmp
movsl
loop
add
sub
mov
cmp
pop
call
sub
jmp
fcmovbe
pop
add
mov
cs
dec
scas
sbb
adc
mov
test
jecxz
or
dec
xor
or
cmpsl
and
push
or
add
stc
xor
or
dec
shl
mov
call
outsb
dec
cmp
push
mov
and
pushf
imul
xor
jmp
leave
xchg
cli
ficoms
sbb
popa
mov
jo
xor
lock
ljmp
mov
mov
mov
and
push
xlat
mov
ljmp
in
or
xchg
notl
cmp
cli
or
push
mov
mov
sub
call
and
adc
shlb
adc
shl
or
pusha
cmpl
cld
out
mov
cmc
vcvtdq2ps
ud1
ljmp
push
add
sub
inc
mov
mov
das
in
jns
jne
sub
lock
push
push
dec
xor
xor
lock
cmp
ret
push
repz
shl
add
add
pop
add
popa
pop
in
movsb
jecxz
sbb
imul
out
insl
pop
dec
mov
cmp
jne
sahf
mov
sti
pop
ficompl
add
sti
push
cli
or
testb
dec
ljmp
les
and
mov
or
xchg
xchg
add
int3
cmp
push
mov
pop
inc
je
push
jbe
dec
ljmp
sub
sub
mov
add
sub
insb
or
jmp
xchg
icebp
nop
or
movb
xlat
test
loope
lds
push
mov
stc
daa
cmpsb
in
outsb
add
push
roll
sbb
mov
xor
movsl
mov
mov
mov
dec
fdiv
jmp
movsb
sbb
sub
fs
pop
sub
shr
or
pop
push
sub
std
inc
fmuls
or
mov
sub
push
popf
push
adc
adc
rol
or
dec
pop
cs
imul
movswl
pop
jne
ja
or
dec
es
fbld
push
cmc
pop
or
or
sbb
adc
lods
or
arpl
push
and
xchg
jbe
ss
pop
and
lock
mov
add
cmp
orb
mov
and
jae
lods
adc
repnz
or
pop
push
jmp
mov
repnz
ret
adc
inc
fsubr
ret
fbstp
in
ds
sub
xor
cmp
xor
pop
cmp
das
push
arpl
repnz
fcoms
add
xlat
xor
push
shr
insb
inc
add
out
push
sbbl
jl
add
push
dec
mov
jnp
or
popa
sahf
push
fsubrp
das
push
add
addr16
pusha
loope
pop
sub
mov
daa
int3
cmp
sbb
push
or
ret
sbb
and
push
mov
and
repz
ret
insb
and
jmp
push
fs
lods
incb
jo
xor
mov
pop
or
pop
add
xchg
adcl
or
add
jmp
cmpsb
mov
jle
jp
into
cmp
and
inc
add
add
decb
mov
xorb
in
in
xchg
add
adc
inc
mov
xchg
inc
jno
pop
jmp
mov
add
sub
stc
ljmp
pushf
and
add
mov
and
pop
repnz
les
in
lock
lods
jb
popf
mov
inc
arpl
and
lock
test
ds
mov
cltd
and
addr16
nop
pop
push
test
mov
sbb
dec
gs
push
sbb
mov
dec
daa
cmpsb
and
adc
pop
and
push
in
add
jp
mov
xor
add
mov
dec
add
or
add
push
pop
pop
push
mov
mov
loopne
add
repz
mov
addb
sub
pop
pop
dec
pop
shlb
push
mov
jmp
xchg
mov
xor
sub
ret
push
adc
sub
mov
std
je
or
in
sarl
fwait
out
xchg
add
les
stos
sbb
leave
inc
stos
add
sbb
cmp
sub
push
mov
neg
or
loope
test
push
pop
aas
ffree
daa
xor
jmp
add
jnp
pop
xchg
xor
add
sahf
das
jbe
addr16
xchg
scas
push
int3
imul
xchg
xchg
adcb
and
push
popf
or
frstor
push
cwtl
dec
cmp
test
jmp
sub
fiaddl
push
pop
mov
hlt
add
cmp
lret
fs
jbe
repnz
fwait
in
shll
dec
scas
adc
out
cmc
cltd
hlt
mov
cwtl
stc
jne
or
adc
std
or
or
mov
lds
mov
lahf
xor
push
cmp
movsl
std
jae
daa
leave
mov
in
mov
jg
ljmp
add
sbb
xlat
inc
lret
outsl
xchg
loop
or
jo
jae
sbb
push
add
data16
stos
ljmp
and
and
xor
jno
push
add
and
mov
xor
cmc
dec
adc
cmp
push
mov
clc
sub
aad
pop
mov
sub
sbb
pop
psubusb
or
push
xor
mov
mov
cmpb
add
gs
lcall
jmp
psubw
xor
pop
jne
push
pop
rorl
pop
int
mov
sub
cld
je
pop
ds
es
inc
adc
cwtl
push
pop
rclb
imul
pop
cmc
or
cs
add
lcall
pusha
stc
mov
adc
inc
push
fcomps
jmp
nop
add
dec
inc
adc
out
pop
test
adc
push
popa
addr16
lods
inc
lret
ljmp
mov
xchg
add
push
into
scas
out
stos
pop
mov
push
add
dec
sarl
pop
and
xchg
push
xor
mov
mov
dec
adcb
mov
nop
push
push
jne
int3
aas
pop
xchg
jne
mov
leave
call
imul
inc
inc
push
arpl
mov
pop
sub
sti
lret
or
push
pop
inc
xchg
pop
jge
insb
in
inc
or
je
and
dec
push
adc
pop
xchg
lods
rorl
int3
pop
pop
pop
aad
movsl
push
adc
lea
pop
xor
or
mov
incb
xchg
ret
cmp
icebp
aam
jne
sbb
dec
cmpsl
add
iret
jmp
stos
xor
push
in
lods
adc
subb
and
inc
lcall
inc
jmp
jmp
rcll
jnp
loopne
or
je
int3
addr16
mov
xchg
xor
mov
push
jnp
and
mov
adc
sub
sbb
hlt
aaa
out
sub
dec
lea
shrl
lahf
pushf
dec
add
jg
jmp
shrb
and
ja
lahf
sub
adc
sbb
hlt
cmpsb
pusha
shl
movsb
rolb
fs
push
push
push
pop
or
bound
in
lods
loopne
dec
adc
rclb
jns
sub
pop
hlt
test
inc
mov
dec
mov
shrl
int
lds
inc
mov
hlt
mov
add
jge
das
and
data16
outsl
pop
push
push
dec
jecxz
mov
fmuls
mov
lret
pop
loope
test
add
xor
test
in
inc
mov
or
pop
shll
xchg
fists
adc
inc
inc
jo
jno
push
daa
pop
out
movsl
jno
dec
jno
dec
hlt
push
pop
add
sbbb
dec
pop
aad
adc
fs
andl
adc
sbb
inc
jmp
push
mov
inc
stc
dec
addb
fucomi
jae
pop
pop
fcomps
dec
add
inc
push
mov
popf
in
mov
ss
call
mov
aad
dec
mov
cs
mov
fnstsw
movsb
pop
pop
icebp
push
mov
mov
xchg
or
mov
inc
movsl
sub
lret
sub
test
push
push
pop
pop
or
enter
inc
push
mov
sub
das
xchg
push
push
push
rcll
sbb
adc
dec
cmp
cltd
jge
jbe
add
mov
sub
adc
rcrb
xchg
inc
mov
push
test
adc
xchg
addr16
fsts
addr16
sub
xor
xor
fiaddl
xor
or
inc
popf
nop
movsb
adc
pop
mov
pop
jmp
push
push
push
or
loopne
mov
mov
or
out
sarl
dec
sbb
jnp
push
aad
pusha
mov
inc
jb
out
push
add
mov
int
pop
push
fimull
in
js
gs
rcl
or
jnp
popf
addr16
push
clc
jmp
add
and
xor
scas
push
inc
push
mov
cmp
inc
push
mov
and
hlt
jmp
mov
mov
jp
mov
popa
xlat
sbb
test
xor
jne
push
mov
pushf
rclb
xchg
and
push
push
stos
fiadds
jne
xor
mov
and
sbb
jmp
and
add
inc
test
cmp
sub
addr16
xor
mov
lods
dec
bnd
cmp
mov
mov
add
aas
adc
call
push
mov
or
sti
cmp
jne
mov
fs
dec
jns
mov
or
movb
mov
mov
jnp
sbb
or
ljmp
push
inc
loopne
mov
push
mov
xor
iret
shlb
in
stos
push
es
ret
inc
frstor
xchg
aas
lahf
jmp
add
push
shll
pop
push
mov
mov
pop
cmp
push
sub
sub
push
and
and
adc
add
sbb
push
das
pop
addl
imul
addb
pop
mov
cmp
movsb
and
adc
pop
add
sarl
sbb
and
xchg
imull
or
les
push
test
neg
jno
cmpb
mov
adc
in
enter
jns
mov
js
ds
push
mov
or
pop
jno
mov
xlat
push
jg
clc
pop
mov
std
aam
orl
js
test
shl
loope
mov
or
shl
push
cmc
jmp
daa
xorl
adc
xor
add
add
mov
dec
mov
mov
push
testb
icebp
shl
adc
mov
inc
dec
mov
iret
xor
repnz
cs
sbb
mov
add
aad
and
aas
cld
fimull
test
pop
dec
push
add
fdivs
xor
adc
mov
arpl
xor
jne
jmp
xchg
or
or
aas
add
std
sbb
adc
jns
das
test
mov
add
push
add
pop
or
pop
sub
lret
pop
sti
dec
das
dec
jp
push
mov
inc
inc
shlb
repz
hlt
rolb
ret
push
lret
sbb
dec
sub
idivl
pop
add
sbb
pop
jmp
add
dec
jne
or
pop
sub
lds
xchg
inc
loopne
xchg
add
mov
and
jno
leave
jbe
and
enter
jmp
pop
enter
mov
and
inc
orb
dec
add
stc
adc
adc
movsl
mov
pop
pop
push
cmp
pusha
daa
jne
imul
mov
gs
xchg
stc
mov
jge
add
dec
rcll
adc
aaa
ds
jnp
jns
or
xor
leave
sub
push
jle
lods
stc
pop
js
push
or
add
adc
es
jl
sub
or
fisttpll
cmp
jnp
sbb
ds
pop
push
xor
dec
test
test
scas
sub
inc
addl
push
push
pushw
in
push
cld
push
xchg
aad
pop
enter
sbb
add
ret
push
adc
xor
pop
push
push
jecxz
test
sbb
lock
pop
insb
push
and
inc
mov
lock
cmp
notb
imul
incb
nop
adc
and
ja
add
and
adc
add
orb
or
or
sbb
outsl
sbb
push
xor
or
inc
push
sub
out
test
inc
out
add
xor
std
and
and
xchg
pop
jo
push
jmp
pop
xchg
jmp
xlat
mov
loop
xor
shlb
xchg
adc
popa
or
pop
addl
fstl
mov
jmp
push
ror
xchg
pusha
adc
addr16
jle
sub
pop
add
rclb
sub
fs
and
xor
add
add
shlb
in
dec
pop
xchg
mov
xchg
xor
mov
push
xor
xor
cld
mov
or
pop
sahf
add
push
xchg
shr
shll
mov
int3
or
bound
repnz
add
mov
cwtl
inc
shll
mov
shlb
pop
or
cld
inc
add
sbbb
sarb
js
sub
movsl
adc
mov
or
adc
add
and
clc
xchg
xchg
push
or
rolb
xchg
js
loop
jp
jmp
sbb
cmpsb
xor
mov
js
add
test
mov
mov
mov
pop
mov
jp
rcrb
pop
pop
inc
call
or
mov
notb
push
xchg
dec
mov
dec
mov
jns
fidivs
mov
push
xlat
mov
mov
repz
xlat
sub
mov
dec
dec
dec
mov
add
jno
jno
shl
stos
scas
mov
or
xchg
jp
lret
jno
sub
sbbl
fldenv
sub
movsb
clc
notl
cmp
in
xlat
lret
lods
fcmovne
movsl
push
add
adc
push
sbb
out
xor
push
and
cmpb
jmp
adc
or
adc
inc
or
push
addb
jp
or
test
cmpsl
inc
mov
sub
push
ret
addb
push
add
loope
and
inc
and
inc
sub
sub
mov
dec
in
aam
xchg
cmpsl
add
jo
cwtl
dec
sub
enter
pop
or
sahf
and
cmp
add
imul
mov
and
push
test
aam
gs
test
mov
mov
sbb
loop
pop
in
das
and
lods
outsl
mov
lret
dec
mov
push
cmp
out
or
pushf
cmp
dec
push
movsb
iret
xchg
test
ds
push
cli
xor
dec
jp
test
out
pop
cmpb
ja
jle
and
push
ljmp
dec
outsl
fnstenv
pop
inc
xchg
das
lcall
pusha
out
sbb
add
inc
pop
dec
push
inc
in
orl
cld
add
fcomps
add
out
add
aas
jl
stc
aas
mov
clc
and
mov
lret
stc
or
nop
sbb
mov
adc
shl
daa
mov
mov
cmp
neg
shr
jl
call
out
loope
sub
pop
jmp
ja
aas
xor
push
into
lods
adc
xor
xchg
jmp
loopne
inc
push
test
subb
test
stos
pop
add
mov
jge
xchg
repz
xchg
cmc
pop
test
inc
pop
xor
add
notb
int3
mov
call
push
es
pop
test
push
repz
das
mov
jmp
imul
add
pusha
jl
sbb
inc
dec
jle
in
jle
pop
in
push
or
adc
aas
daa
inc
and
sub
mov
pop
pop
hlt
sub
jmp
ds
and
cmpb
cmpsb
sub
jo
test
movb
pushf
dec
icebp
inc
inc
inc
dec
js
add
pusha
jmp
dec
shl
or
jmp
mov
loopne
or
sub
rol
add
xor
push
outsl
mov
and
fstps
gs
mov
or
mov
repnz
dec
and
mov
lret
test
imul
xor
pop
xchg
xchg
inc
push
add
rorb
xor
fcoml
add
sub
or
int
loop
jle
dec
shll
addl
nop
roll
jmp
fists
negl
test
iret
pop
lods
out
mov
in
xchg
not
or
in
push
inc
sbb
out
xor
inc
rcl
or
sub
xor
or
adc
push
pop
xchg
dec
jns
das
sub
orb
cmpsl
imul
xchg
jnp
add
data16
ss
sbb
bnd
in
jle
dec
mov
outsl
int
inc
aad
in
iret
lahf
int3
rcrb
rorl
inc
add
loope
push
push
dec
js
adc
mov
jbe
mov
xor
sahf
jmp
cmp
pop
xchg
sub
dec
fbld
xchg
cwtl
add
inc
or
pop
call
lcall
imul
add
dec
jns
inc
inc
xchg
repz
outsb
loopne
and
fldt
add
imul
pusha
mov
cmp
idivb
inc
fs
sbb
lock
sbb
sarb
xchg
and
mov
adc
mov
xorb
xor
or
dec
popa
xchg
pop
negl
inc
add
jp
nop
mov
pop
loopne
dec
mov
mov
xchg
lret
sbb
push
pop
xchg
stc
pop
push
push
insl
shll
jle
es
sti
add
fimull
or
mov
xchg
add
jne
loop
scas
imul
out
adc
loop
rolb
push
pop
pop
xor
sub
jns
push
sub
cmp
jmp
cmp
dec
hlt
cmpsb
xchg
adc
or
add
cmpb
sub
sub
sub
push
and
adc
dec
loope
btr
sbb
xchg
sub
mov
jno
insb
shrl
push
add
mov
push
cmc
sub
sub
pusha
inc
pop
jno
and
dec
stos
addl
push
pop
addr16
xchg
push
jmp
xor
push
mov
cld
loop
popf
add
ss
dec
mov
popf
and
dec
xor
sub
adc
test
inc
or
push
mov
inc
jl
add
enter
inc
dec
lock
and
pxor
add
dec
dec
insl
mov
push
sub
mov
xchg
xchg
loop
push
imul
pusha
add
xchg
jno
jne
andl
cltd
scas
pusha
enter
mov
sbb
cmc
jmp
loop
push
popw
jnp
or
add
js
pop
repz
and
roll
test
shl
sti
aam
imul
push
dec
movsb
lret
test
mov
insl
das
push
push
pop
lret
sbb
popa
push
cltd
mov
sub
dec
and
xor
pop
aad
imul
and
sub
sub
dec
push
shlb
not
jae
leave
pop
hlt
fildl
or
sahf
or
inc
dec
outsb
int3
sbb
sub
push
jmp
fiadds
insb
dec
dec
xor
lock
pop
or
jmp
insb
loop
push
test
pop
xchg
jmp
mov
mov
mov
call
mov
xor
cmc
sub
jns
pusha
shr
push
mov
and
jg
fwait
jns
mov
xchg
lret
lods
icebp
mov
clc
js
mov
and
and
mov
jo
int3
das
push
push
or
les
xchg
fwait
and
or
xlat
rcrb
scas
mov
hlt
outsb
jmp
lret
sbb
cwtl
mov
cmp
or
imull
fmull
movsb
xchg
and
shr
js
in
jnp
cmp
mov
jecxz
jmp
icebp
or
dec
and
lahf
inc
fldl
jnp
arpl
cmp
xchg
add
clc
test
mov
add
imul
cmpsb
push
loopne
inc
add
jb
jno
jmp
loope
mov
adc
and
psubb
push
adc
jp
xor
in
sub
sahf
dec
pop
inc
push
int3
push
sbb
jmp
push
lahf
outsl
rcrb
or
loope
sti
push
dec
xchg
and
inc
imul
movsl
fs
scas
jp
repnz
icebp
test
je
mov
dec
pop
popf
xlat
mov
pop
int3
inc
pop
mov
and
inc
sti
add
jmp
lahf
ljmp
xchg
push
pop
mov
movsb
mov
push
sbb
add
and
clc
xchg
mov
test
xlat
std
movsb
add
mov
adcb
sbb
jmp
mov
jle
adcl
or
mov
loope
nop
mov
add
jo
or
pop
sbb
add
lock
lock
xchg
lret
dec
adc
add
in
ljmp
loopne
loope
or
pop
inc
cmc
push
int3
cmp
shlb
jns
xor
adc
jecxz
pop
and
pop
nop
cmc
filds
pop
jns
scas
dec
or
out
pop
pop
push
fwait
std
jmp
mov
bound
cmp
fabs
insb
shlb
lcall
shl
add
mov
in
int
loope
mov
dec
xrelease
aad
or
test
jg
push
stc
int
jle
aad
mov
add
xor
daa
js
dec
in
leave
add
add
and
and
addr16
push
jno
scas
rorb
loop
jne
iret
mov
xchg
mov
lcall
jp
add
add
lsl
lret
add
push
pop
jbe
sbb
ja
and
dec
lret
push
cmpb
dec
es
dec
je
add
mov
dec
xchg
mov
loop
inc
mov
test
inc
dec
and
dec
shll
push
out
jmp
rcll
and
daa
mov
inc
int3
mov
push
jo
stos
and
cmovb
xchg
dec
and
push
mov
and
daa
dec
xchg
adc
fsts
lcall
gs
mov
jmp
xor
int
cld
sbb
inc
in
jp
push
push
mov
cmp
mov
push
adc
mov
jmp
test
lret
rclw
push
add
mov
jmp
push
push
mov
stos
pop
popf
repnz
xchg
hlt
pop
dec
add
cmp
lods
dec
out
jg
dec
sbb
xchg
jecxz
mov
cmpsl
int3
push
movsb
dec
loope
ss
dec
rcll
xchg
push
and
pop
divl
rcrl
adc
fiadds
aaa
data16
test
and
jp
push
push
add
xor
das
or
pop
sub
pop
push
or
mov
std
ja
iret
dec
mov
out
sahf
ret
sub
and
add
hlt
mov
cmp
cs
addr16
mov
push
sbb
repnz
mov
inc
aas
fmul
outsb
icebp
dec
std
mov
xor
pop
sub
adc
shrl
push
int3
imulb
add
and
std
inc
adc
les
lods
push
pusha
in
dec
pop
or
sub
xchg
pop
mov
add
shrb
addr16
or
into
test
loope
rcrl
pushf
mov
rolb
xchg
inc
and
cltd
ds
fisttpl
jp
cmpsl
cmp
xchg
ja
add
pushf
cmp
arpl
loope
mov
sbb
addr16
mov
das
pop
xor
mov
sti
int3
push
lea
dec
xchg
xor
mov
push
lcall
es
mov
test
xor
jmp
sub
cmp
push
inc
jl
jo
fcoms
pop
jmp
mov
pushf
ret
fistps
or
xchg
add
or
fsubl
mov
cmp
xchg
pop
mov
cld
inc
ficoms
test
in
mov
push
jl
dec
popa
sbb
mov
sub
add
push
stos
stos
adc
mov
adc
cli
add
and
in
xor
outsl
or
aaa
jno
dec
sbb
pop
jle
push
jmp
hlt
and
rcrl
and
inc
imul
cli
inc
mov
insb
push
iret
dec
cmp
sub
jp
mov
out
or
js
mov
outsl
push
jmp
add
into
mov
bound
mov
inc
mov
data16
jp
add
pop
mov
mov
roll
jb
neg
mov
jmp
int
push
jne
sbb
mov
sub
xchg
fnsave
inc
adc
jp
cmp
adc
ja
mov
jmp
mov
inc
dec
call
lret
xchg
clc
mov
mov
mov
and
je
inc
idivb
sbb
pop
or
leave
inc
pop
aas
jmp
cmp
pop
popf
adc
mov
test
inc
mov
inc
mov
sbb
scas
xchg
pushf
outsl
or
jbe
xchg
movsl
mov
xchg
pop
cld
imul
or
dec
inc
add
sub
push
dec
pop
lods
sbb
push
mov
add
and
in
je
add
leave
int3
adc
adc
sub
mov
or
sti
inc
xorb
mov
add
or
popa
imul
sub
or
xor
imul
mov
fsubs
dec
arpl
lcall
je
jmp
rolb
pusha
jns
mov
mov
or
xchg
pop
pop
or
lea
push
jno
cs
inc
ljmp
mov
cld
lods
pop
adc
add
jmp
addps
imul
xor
cld
mov
mov
sbb
scas
dec
add
sbb
rclb
outsl
test
shr
xor
jmp
pop
push
add
and
je
mov
jnp
daa
push
pop
scas
mov
fistpll
or
scas
add
mov
out
mov
jae
jmp
pop
movsb
mov
cmp
pop
or
and
sbb
add
inc
or
pop
push
and
pop
in
and
mov
daa
loop
jns
ja
mov
push
lret
aaa
inc
xchg
jl
pop
push
jo
dec
lds
sub
sub
cmp
loopne
jo
dec
icebp
mov
pop
pop
or
in
rolb
dec
sub
push
push
mov
dec
divl
lods
jl
pop
dec
mov
jecxz
ret
adc
mov
add
js
inc
or
xor
das
jle
ja
push
inc
shr
sti
inc
ss
ficoml
shrb
or
and
cmp
mov
pop
mov
xchg
mov
inc
das
ds
push
les
pop
pop
mov
sub
loope
and
adc
ret
das
push
lods
mov
repz
iret
sub
fisubs
or
pop
jmp
xlat
push
fnstenv
adc
dec
mov
cmc
pop
push
jle
insb
and
outsl
mov
xchg
inc
or
xchg
or
in
xor
popa
push
push
mov
mov
mov
lret
sub
loop
xchg
loope
sti
popf
add
xor
fstps
sub
add
sub
add
adc
daa
pop
lahf
sub
test
jmp
imul
and
hlt
daa
push
test
pop
mov
data16
ret
ja
fwait
sub
pop
and
jmp
lret
push
adc
mov
pop
in
push
mov
in
dec
pop
andl
push
test
mov
and
roll
sbb
leave
adc
jmp
sahf
mov
push
nop
lods
daa
fidivrs
nop
xchg
add
iret
pop
mov
push
cwtl
xchg
enter
nop
push
cs
sbb
push
dec
sub
out
inc
sbb
cmpsb
fsubs
xor
or
sbb
xchg
addb
sub
sub
and
mov
mov
dec
sub
ror
inc
pop
pop
inc
add
sub
ds
dec
jecxz
inc
mov
mov
adc
popa
cmp
xor
mov
enter
sub
in
xchg
adc
lods
mov
or
add
cmp
mov
stc
cmp
adc
arpl
jmp
push
xchg
jl
je
loopne
sbb
pop
dec
add
mov
mov
out
sub
adc
rclb
push
xchg
mov
sar
outsl
add
adc
loopne
jmp
sub
or
rcrb
popa
cmc
test
or
pop
jg
sbb
pop
sbb
dec
push
testl
xchg
loopne
test
ja
dec
mov
dec
push
cs
out
mov
and
push
push
jnp
loopne
pop
jp
dec
or
push
out
mov
sub
mov
mov
jl
out
dec
negl
xchg
repnz
lds
out
mov
push
popa
push
lret
cmpsl
mov
mov
jne
in
call
cwtl
lds
call
xorl
jl
addb
rcr
xchg
mov
sub
lahf
cmp
mov
out
aam
daa
repz
add
cmp
in
adc
lret
out
adc
mov
push
xchg
xchg
sbb
outsl
mov
enter
sbb
bnd
test
xor
lret
stc
add
push
add
mov
in
mov
cld
stc
movsb
hlt
das
loop
dec
clc
cmp
scas
sub
dec
mov
pop
je
or
ret
adc
adc
adc
add
scas
inc
add
xchg
pusha
cmpsl
loop
shl
and
xor
daa
jmp
cli
pop
push
ror
jle
fsubrl
aaa
leave
nop
mov
je
mov
push
push
sbb
xchg
and
cmp
sbbb
mov
jmp
movzbw
aad
sbb
pop
inc
outsb
dec
aam
adc
push
inc
or
push
clc
scas
pushf
jno
inc
mov
es
mov
jae
cwtl
les
pop
and
fadd
push
mov
xchg
push
and
add
push
dec
jmp
and
testl
sub
and
pop
pop
cld
adc
cld
jbe
dec
jecxz
sub
add
pushf
add
loope
adc
scas
jno
pop
xlat
xor
xchg
pop
in
enter
pop
push
or
imul
daa
dec
mov
sub
lea
pop
es
arpl
mov
jbe
out
lods
stos
rorb
push
pop
sub
or
push
jmp
sub
stos
jnp
adc
add
dec
sbb
jo
pop
enter
cmp
jmp
mov
shrb
aas
inc
or
jge
testb
add
shlb
xchg
lock
adcl
mov
arpl
mov
mov
push
insb
push
xchg
mov
sti
imul
out
addr16
rclb
push
jle
and
pop
push
orb
pop
pop
sbb
nop
repnz
dec
dec
push
push
xchg
jmp
cmp
jb
out
adc
mov
mov
sarb
jnp
inc
punpckldq
pop
and
adc
push
jmp
pop
popf
push
outsl
jmp
or
sbb
int
add
rcrl
push
setp
dec
pusha
push
adc
lret
shl
adc
loop
jmp
clc
ret
add
movaps
or
inc
icebp
pop
mov
xor
inc
shl
pop
sahf
add
inc
add
mov
pusha
fsubl
pop
sub
sbb
push
insb
sbb
pop
repnz
and
push
push
pop
aam
in
daa
add
mov
adc
aam
or
pop
and
mov
add
addr16
add
dec
sub
out
push
notb
adc
mov
push
bound
push
hlt
mov
or
xor
push
popa
movsb
aam
dec
aas
movsb
roll
call
mov
mov
xlat
icebp
daa
adc
das
pop
pop
sbb
in
hlt
dec
inc
add
sub
push
jg
ds
add
sbb
pop
rorb
push
outsl
add
lret
daa
adc
add
fidivs
into
cld
lds
shrb
lahf
out
xchg
andb
ficoml
pop
pop
push
and
fiadds
adc
test
xchg
fcomps
das
or
es
cs
pop
neg
mov
cmp
or
outsl
sub
sbbb
xchg
xorb
orl
cmp
les
mov
add
mov
dec
pop
cld
call
mov
jge
nop
sub
jmp
sbb
adc
jb
jle
dec
dec
push
dec
add
pop
xchg
push
or
pop
push
push
push
mov
mov
sub
cmc
lock
jge
xchg
lret
jmp
and
cmp
and
dec
add
jmp
mov
add
pop
or
shl
add
or
sub
xchg
aad
adc
int3
or
pop
ljmp
xchg
add
mov
loop
jle
mov
mov
dec
sub
pop
sub
cli
push
les
pop
mov
test
and
push
push
inc
cs
lahf
cmpb
or
scas
adc
mov
or
das
aam
test
xchg
loop
roll
not
test
jle
xor
dec
jmp
inc
outsl
add
test
dec
in
inc
inc
scas
lock
xchg
pop
cmc
cmpb
movzwl
mov
jg
lods
sbb
filds
cmp
cmp
pop
cwtl
cld
lods
outsl
cs
das
add
cwtl
test
jg
adc
negb
push
sub
out
push
filds
lock
sub
push
push
and
xor
addr16
push
mov
jg
clc
jmp
testl
stos
inc
mov
mov
and
out
das
or
jmp
les
push
bound
filds
fwait
xlat
xchg
push
mov
dec
rcrb
jle
mov
push
and
and
mov
sti
test
add
jmp
hlt
add
int3
sbb
add
in
repz
sub
mov
insb
sti
jp
mov
adc
push
add
inc
xor
dec
mov
es
add
lods
imul
dec
jnp
mov
cmp
lahf
mov
push
push
push
fdivs
push
jne
mov
jp
sahf
or
std
mov
addb
mov
insb
sub
out
sbb
pop
jbe
and
adcb
hlt
test
push
adc
xor
lret
dec
mov
sub
add
leave
inc
call
rcrl
inc
lret
jl
lahf
push
sti
xorl
std
fxtract
les
mov
ljmp
nop
xchg
jmp
push
adc
push
adc
jo
cli
adc
inc
mov
adc
pop
dec
pop
rolb
xor
xor
int
jg
xchg
lret
xchg
sbbb
out
add
sub
arpl
clc
pop
in
add
pusha
mov
or
inc
ficompl
cmp
bound
outsb
jecxz
insl
jae
add
cwtl
orb
xor
mov
pop
xlat
movsl
mov
aad
and
out
cmp
push
xchg
dec
push
cld
lock
sbb
mov
adc
xchg
loopne
pop
jno
pusha
jns
shrb
pop
imul
gs
movsb
or
pop
pop
movsb
lcall
jmp
outsl
in
ja
cmp
xor
sbb
inc
inc
orb
fsts
inc
mov
jne
xchg
sbb
in
aam
je
rcll
mov
xor
push
pop
enter
add
orb
aas
or
imul
inc
inc
outsb
add
movsb
pop
mov
inc
inc
inc
aad
icebp
sub
pop
and
pop
stos
sub
mov
popa
popf
mov
bound
jg
repz
jb
pushf
dec
bound
fdivp
dec
jle
jmp
push
mov
sub
inc
xor
add
inc
xor
rclb
into
sbb
cwtl
orb
mov
mov
fsubl
or
cmpb
aas
fildll
fcoms
mov
enter
adc
imul
lock
or
add
ret
aam
push
loop
dec
xor
sbb
cwtl
scas
push
sar
pop
les
cmp
popa
mov
mov
push
xor
or
add
xchg
or
jmp
jb
or
repz
mov
dec
fcomps
xchg
jp
dec
sub
cs
sub
xchg
mov
in
and
xor
push
es
dec
pop
cli
pop
shrl
push
and
sti
xorb
push
sbb
or
sub
inc
sbb
es
aaa
lods
jb
xchg
rcr
cli
cmpsb
pop
iret
rcl
mov
push
cmp
cwtl
subl
pop
push
repz
jne
cmpsl
aas
mov
rcr
and
fs
dec
sub
jg
add
ja
shlb
inc
push
or
das
sarb
popf
dec
xor
fsqrt
or
push
cli
add
inc
sub
sub
shll
dec
in
ja
pop
pop
negb
add
add
loop
or
xchg
mov
stc
jmp
outsb
and
aaa
push
das
inc
imul
and
jmp
fadds
add
outsb
jae
adc
xor
mov
shrb
pop
mov
pop
and
pop
adc
inc
mov
outsb
lret
add
dec
jmp
push
xchg
cmpsb
movsb
adc
cwtl
dec
stos
add
pop
pop
mov
inc
xor
and
jg
loope
inc
test
into
mov
mov
cmp
das
aas
adc
cwtl
pop
push
jno
mulb
stos
outsl
fsubrp
add
push
mov
cwtl
or
push
jne
mov
cmp
addr16
or
add
cld
xor
icebp
mov
pop
jbe
rclb
push
jmp
xlat
mov
xor
sub
mov
and
movswl
mov
push
fwait
inc
or
cmp
rorb
jbe
add
cmp
fdivl
mov
push
rorl
and
xchg
cmp
jno
xchg
imul
jge
sub
jmp
or
lret
pushf
inc
shl
je
add
fsubrp
adc
push
add
stos
into
cltd
push
mov
adc
inc
inc
and
sub
and
xchg
orb
mov
adc
mov
jne
jne
push
lds
lahf
fldz
mov
mov
lcall
dec
and
es
or
push
dec
out
shl
idivb
fs
add
mov
gs
add
icebp
xchg
pop
fsubrl
rorl
pop
cs
daa
sub
add
call
jp
push
test
xor
out
jge
mov
fisttps
push
in
jb
fs
ret
sbb
pop
or
test
lods
clc
mov
es
fidivrs
inc
xor
out
cltd
std
mov
xchg
outsb
xor
cwtl
push
dec
xchg
or
lret
inc
lea
negb
jnp
jp
adc
sub
pop
pusha
test
mov
je
inc
pop
cmp
or
jge
faddl
cltd
fnstsw
arpl
push
pop
and
mov
lahf
sbb
add
es
mov
push
lret
leave
faddl
mov
flds
xor
add
lods
pushf
pop
fsubs
push
fildll
test
lea
push
rcrb
aaa
notl
fdivrs
cli
xor
mov
add
jbe
imul
sar
add
ljmp
jmp
js
sub
andb
lock
push
mov
incb
mov
or
push
xchg
popa
lock
xchg
push
push
nop
or
or
xor
dec
fucomp
cmc
add
sub
sub
or
ret
or
pop
pop
and
or
int3
in
sbb
or
movsl
or
pop
jp
jmp
xchg
or
add
sub
sub
inc
xor
mul
cmc
dec
dec
jb
popa
dec
xorb
cmp
dec
mov
cwtl
jnp
dec
jge
add
xchg
cmp
fs
out
sti
daa
cld
repz
pusha
mov
mov
mulb
mov
jmp
jne
andb
stos
jmp
sub
call
daa
pop
gs
inc
pop
ds
mov
jbe
pop
es
std
cmp
or
in
and
lret
lret
push
and
cmc
mov
mov
jae
jmp
out
sub
jmp
mov
jg
and
push
and
ja
mov
jp
jp
pop
lahf
pop
cmc
and
insb
xchg
mov
das
imul
shr
es
cwtl
lea
lds
fadds
push
add
imul
jg
test
std
call
dec
cmp
out
jb
or
push
ds
inc
sti
iret
pop
hlt
pop
adc
dec
loopne
sub
outsb
insl
or
pusha
dec
jb
jbe
lds
retw
inc
push
xor
dec
push
cli
lea
outsb
popa
test
push
xchg
jmp
lret
inc
xchg
mov
mov
or
cmp
mov
fimull
aad
mov
pop
jnp
pop
pop
inc
shl
xchg
aas
cs
sysexit
add
andb
dec
and
icebp
push
gs
jp
push
pusha
and
aas
cmpb
lds
and
jg
lds
push
outsl
call
xchg
sub
dec
outsl
dec
cmp
bound
dec
neg
inc
bound
ljmp
mov
jmp
leave
push
push
mov
rcll
or
mov
add
push
cmp
aaa
daa
pop
stc
por
or
cwtl
js
inc
cmp
push
lret
clc
cmpsb
in
gs
test
bound
mov
sti
and
mov
jmp
arpl
adc
aam
test
xchg
cs
lock
pop
add
scas
and
fdivl
mov
sub
push
push
ror
add
push
push
inc
test
add
incl
std
aas
outsl
insb
pop
inc
sub
xchg
jo
xchg
push
pop
push
jmp
enter
and
dec
sub
sti
fiaddl
shrl
out
adc
xlat
outsl
inc
push
push
push
xor
or
cs
adcb
cmp
push
jmp
enter
arpl
or
mov
bound
ror
nop
pop
push
cmp
pop
shr
jo
mov
in
iret
ret
xlat
xor
dec
or
xor
inc
and
dec
xchg
nop
divb
mov
mov
addr16
xor
aad
mov
pusha
push
xor
lds
fisubs
jmp
lods
pop
outsl
push
into
jl
push
mov
call
xchg
jmp
popa
push
movl
outsb
jmp
sti
push
sub
pop
xor
cli
mov
or
jne
jo
aas
push
frstor
add
or
sbb
xchg
in
pop
pop
add
out
xor
je
xor
into
add
pop
jno
and
bound
cmpsb
adc
rolb
sbb
or
sub
mov
jo
add
stc
sbb
xchg
jmpw
mov
incb
aam
lds
cmp
pop
mov
inc
out
xchg
jno
adc
rorb
jl
pop
pop
xchg
decb
lds
sarl
lea
add
jno
sti
lods
mov
push
lds
jge
mov
in
xchg
xorb
hlt
adc
out
and
add
insl
std
ret
adc
pushf
in
faddl
adc
mov
sub
push
sbb
mov
jns
xchg
push
mov
jb
or
mov
push
shr
add
adc
popa
aas
das
sub
mov
sti
daa
push
fdivp
das
mov
add
dec
add
test
lret
jmp
shlb
or
imull
cmp
repz
imul
xchg
pop
or
mov
jmp
push
jo
jg
clc
in
lds
not
ret
sub
outsl
or
adc
jp
icebp
push
jmp
lret
xchg
notl
stos
adcl
btc
sub
cs
push
sub
mov
sbb
pop
adc
shll
xchg
push
mov
arpl
or
jb
adc
sub
jmp
and
xor
push
enter
aad
orl
cwtl
inc
test
aad
lcall
sbb
jmp
mov
xor
and
add
ret
sub
push
add
dec
sub
mov
dec
jne
pop
and
sahf
filds
inc
je
sbb
rcl
mov
add
pop
xor
mov
and
in
test
dec
lock
divl
mov
mov
icebp
or
pop
dec
popa
popl
out
cld
movsl
sbb
cwtl
xlat
shlb
add
es
pop
sub
mov
inc
xor
inc
jmp
jle
pop
xchg
mov
jmp
sbb
push
fbld
addl
adcb
shrl
dec
sbb
jne
mov
add
inc
xor
cmp
push
das
xor
jb
pop
xchg
call
call
dec
les
gs
inc
xorl
or
fnstsw
add
sbb
adc
inc
mov
sub
outsl
inc
scas
mov
jnp
mov
pop
mov
sub
xchg
add
or
lcall
pop
sub
sbb
or
adc
add
inc
jge
sub
insl
cs
and
fs
mov
aas
orl
push
inc
lret
sub
pop
shll
jmp
push
mov
and
and
pop
pop
orb
aas
add
sbb
mov
xchg
shl
jle
adc
mov
and
pop
loopne
xor
pop
jmp
adc
pop
stc
test
push
xchg
out
xor
or
jmp
add
jns
not
push
add
out
or
and
and
inc
aad
push
fldl
ret
adc
shrl
cmp
mov
add
sub
test
inc
adc
ljmp
adc
sbb
aaa
push
jp
jl
loop
shl
rcll
pop
mov
mov
inc
cmp
fs
push
mov
pop
adc
lock
or
or
push
jb
mov
daa
stc
cmp
pop
clc
std
repnz
push
pop
pusha
dec
dec
xchg
push
cwtl
push
mov
call
adc
mov
popa
sbb
mov
jmp
cmpsb
push
dec
outsl
subb
adc
mov
jmp
in
mov
or
push
or
or
fnstenv
push
insb
outsb
rclb
sbb
mov
rorl
add
dec
fsubs
decb
mov
sarl
jbe
not
inc
jmp
xchg
movsb
arpl
and
jo
hlt
fstpt
add
imul
cmpb
push
pop
cs
adc
imul
clc
fisttps
bound
lret
jmp
pop
test
sahf
dec
bound
addr16
pop
out
push
adc
imul
vcvtpd2psx
and
mov
inc
xchg
out
enter
icebp
pop
pushf
js
xchg
aas
sub
jmp
fs
or
lret
xor
andl
ss
incb
ja
jl
out
sbb
dec
pop
pop
icebp
dec
outsl
icebp
pop
movsl
push
pop
jecxz
js
pop
add
sub
push
jmp
pop
or
nop
push
or
pop
mov
js
outsb
or
push
push
xchg
inc
xor
fs
mov
or
sub
jp
or
lock
sub
cld
dec
xor
pop
push
clc
add
stc
dec
pop
pop
mov
inc
add
xor
enter
pop
add
jmp
loopne,pn
jmp
or
adc
subb
mov
fmuls
push
or
jle
cltd
andb
push
jmp
add
xor
rorl
mov
leave
addr16
std
fwait
mov
lds
jp
xchg
mov
in
push
mov
mov
pop
jle
dec
clc
add
xor
inc
dec
and
nop
dec
or
mov
and
ficoml
cmp
shrl
repz
adc
and
sub
popa
or
gs
mov
pop
call
std
icebp
sbb
sub
cmpsb
sahf
cmp
add
cmp
das
and
push
adcl
add
push
push
repz
push
jp
pop
fistpll
out
pop
and
dec
xor
mov
shlb
sbb
xchg
mov
xchg
je
inc
sub
add
adc
xor
pop
and
mov
mov
xchg
out
sub
pushl
mov
in
and
push
insb
mov
pcmpeqw
adc
ret
sub
push
mov
push
mov
loop
mov
pushf
ret
aam
pop
mov
movsl
ljmp
add
xlat
pminsw
outsl
rcrl
push
jmp
mov
push
stos
cmp
jmp
repnz
pusha
xchg
leave
push
mov
or
push
xchg
roll
dec
aaa
cld
pop
sbb
xor
push
jo
cmp
xchg
jno
repnz
push
or
outsb
sub
mov
insb
adc
xchg
sub
js
lahf
inc
mov
mov
jmp
xorl
pop
pop
add
inc
add
pop
xchg
pop
shlb
or
jl
dec
test
or
jne
mov
mov
xor
jg
dec
aas
dec
lock
in
jg
imul
rorb
xchg
jecxz
jbe
lea
adc
cmpsl
or
cmp
bound
test
mov
mov
aaa
aam
or
lock
or
movsb
mov
and
jge
mov
jecxz
pop
fwait
dec
mov
or
jle
lea
fdivrs
lret
mov
xchg
xchg
pop
dec
pop
lods
sub
test
dec
cmpsl
fwait
mov
insl
mov
jmp
jae
or
push
mov
pop
jno
xchg
dec
add
adcb
sti
pop
orb
mov
push
jle
xchg
mov
aaa
fs
out
jne
mov
mov
inc
ret
push
push
mov
addr16
outsl
loope
jle
inc
aas
sbb
dec
mov
xchg
adc
cli
pop
jle
xor
mov
inc
rolb
mov
cmp
dec
test
add
int3
cmp
andl
outsl
orb
mov
aam
inc
push
push
dec
test
xor
ja
pop
jmp
mov
inc
sarb
push
mov
lret
ja
add
jmp
mov
mov
cmp
loope
push
sub
pop
rclb
sbb
fldt
pop
or
mov
popfw
and
dec
dec
fisttps
xor
popa
adc
jmp
xor
ljmp
in
stc
sub
loope
aas
inc
or
pop
xchg
mov
jbe
jl
dec
dec
push
rorl
fdivs
insl
aaa
cmp
sbb
not
pop
xchg
out
jg
out
cmc
out
xor
fimull
xorl
or
icebp
push
sbb
jb
fwait
ja
lret
dec
lods
pop
cmp
cwtl
xor
jle
mov
pop
add
out
pop
pop
les
xchg
mov
lret
outsl
cmpl
push
jnp
cmpsb
push
hlt
xchg
lret
mov
dec
xchg
cwtl
cli
enter
inc
dec
movsl
inc
inc
push
pushf
inc
dec
pop
jns
jmp
imul
js
stos
push
mov
pop
xor
fadds
lock
xor
in
andps
add
lods
scas
inc
add
push
insl
and
sbb
and
inc
pushl
mov
int
add
mov
push
mov
jp
dec
arpl
pop
ret
gs
add
pop
dec
adc
and
and
ficoml
mov
nop
sbb
fsubrl
mov
and
aaa
jge
lahf
mov
mov
sti
das
pop
xor
mov
push
sahf
test
mulb
mov
jl
push
push
repz
shrl
cmp
pop
lds
and
adcl
add
cmp
loopne
enter
loope
pusha
jo
pop
sub
stos
inc
mov
and
shl
jmp
inc
xchg
xlat
xchg
cmp
or
mov
jmp
dec
pop
xlat
lea
push
mov
pop
dec
xchg
jno
dec
inc
arpl
and
je
ja
adc
jmp
cmpsb
mov
sahf
inc
ret
or
daa
and
fimull
xor
jo
jmp
in
cli
dec
es
rcrl
mov
mov
add
inc
je
cli
mov
test
out
daa
shr
mov
fldenv
cmp
adc
es
adc
das
or
mov
add
xor
jmp
pop
shlb
xor
inc
or
lret
jmp
mov
pop
or
scas
dec
clc
xchg
testb
adc
xor
lret
pop
adc
pop
dec
mov
pusha
or
pop
pushf
mov
je
dec
mov
aam
les
xchg
or
data16
xor
or
dec
pop
lea
push
add
push
or
das
subb
inc
js
or
repz
insl
jle
push
sbb
adc
negl
sahf
int
sbb
insl
enter
cmp
sub
outsl
jae
or
jo
pop
pop
test
shlb
mov
jnp
mov
mov
mov
sub
mov
daa
popf
pop
decl
cmp
in
sbb
les
push
cmp
fbld
add
sub
xor
bnd
clc
inc
push
out
adc
jmp
pop
dec
xor
pop
jg
mov
sub
iret
jnp
pop
push
xor
add
xlat
and
lds
push
or
inc
jns
lahf
xchg
stos
jo
mov
jbe
inc
push
clc
xor
dec
sbb
into
pop
shl
pop
inc
shlb
pop
test
push
push
push
gs
insb
or
popf
insb
mov
mov
mov
and
xorb
out
sub
adc
ds
or
add
add
pop
shl
call
imul
adc
sbbl
test
mov
pop
lods
adc
test
or
fcomps
iret
popa
jmp
add
jmp
orl
insl
andb
stc
sbb
cmc
inc
out
incb
mov
shl
add
ljmp
xor
stos
andb
push
jl
mov
cli
pop
mov
xor
aas
loope
cs
dec
cmp
lods
ret
add
or
sub
loope
jmp
dec
push
aas
sub
and
jle
cwtl
imul
add
mov
sbb
xchg
icebp
mov
dec
xor
imul
or
je
aas
mov
lds
dec
or
or
adc
clc
movsl
mov
jmp
mov
cmp
jmp
dec
lahf
lea
ret
jnp
jmp
dec
pop
sbb
adc
dec
xor
mov
popf
inc
cmp
lcall
popa
dec
xchg
push
popf
push
push
ss
cmp
mov
aas
out
out
xor
xchg
mov
aas
xor
lret
es
pop
clc
cmpsl
jo
add
test
lds
test
and
pop
cmp
out
ss
jp
ljmp
push
jb
mov
mov
in
xor
add
mov
cwtl
and
into
dec
cmpsb
pop
jecxz
or
das
aad
xlat
add
sbb
mov
dec
add
dec
out
cwtl
add
jg
jmp
jmp
pop
xchg
imul
jbe
add
mov
cmp
and
adc
gs
scas
push
push
or
adc
popf
adc
bound
jp
rcrl
pop
cmp
mov
adc
out
cs
jno
dec
cld
inc
out
pop
pop
repz
stos
jb
pop
push
mov
sub
adc
adcb
add
test
mov
jb
sbb
mov
push
add
cmp
fcmovu
add
inc
sbb
not
sbb
dec
mov
cmpsl
clc
push
mov
repnz
pop
orl
cli
adc
adc
inc
mov
push
jmp
lds
sub
mov
popa
sbb
dec
add
adc
jnp
loope
ret
dec
sub
sti
adc
add
nop
daa
icebp
mov
fnstsw
push
mov
push
leave
mov
and
insb
cmpsl
das
inc
add
fldl
sahf
stc
mov
ror
fsubrs
add
lret
orb
lcall
add
push
daa
adc
stos
out
push
or
adc
movsb
insb
xlat
out
aas
and
add
fcoms
or
push
mov
pop
and
int3
repz
ds
add
repnz
sub
nop
nop
add
or
and
popf
pop
stc
dec
ficoms
pop
mov
dec
sbb
push
sub
push
cwtl
push
add
lods
jge
push
jne
sar
adc
pop
in
mov
lods
xor
std
adc
push
out
sub
xor
sarb
clc
jmp
rcll
rolb
xchg
push
negb
jecxz
jbe
leave
add
pop
arpl
pop
jns
das
xor
dec
and
ret
mov
and
jle
sbb
test
or
push
adc
dec
test
iret
roll
pop
jg
mov
test
rolb
movsl
xchg
iret
mov
adc
sbb
daa
das
cld
rcrl
sbb
add
sti
les
icebp
mov
add
out
cmpsb
jns
push
jp
adc
movsb
aas
jmp
pop
repz
adc
cmpsb
mov
int3
dec
enter
push
mov
push
dec
shl
loope
hlt
sbbl
xor
std
jo
test
into
jb
push
xchg
idiv
testl
addr16
cltd
fidivrs
pop
fucom
stos
lods
stos
jmp
mov
insl
sub
xchg
pop
pop
and
pop
adc
cs
push
mov
cld
and
xchg
shrb
mov
push
stos
je
add
outsl
rcr
jmp
sub
mov
es
dec
roll
dec
pop
call
es
stos
aaa
pop
lds
pop
hlt
loope
cmp
xchg
aam
sub
std
shll
lea
jbe
and
mov
xor
inc
ret
dec
cld
int3
push
push
ret
nop
add
sbb
imull
lcall
repnz
loope
pop
sub
sbb
data16
push
mov
or
fisubrs
popa
stos
or
and
inc
rclb
insb
and
mov
push
add
add
fldenv
push
add
ret
or
pop
cld
out
divb
add
inc
dec
pop
add
nop
push
or
bound
fcmovu
orb
xor
or
call
or
mov
enter
adc
sub
ret
ljmp
push
sub
jge
xor
cld
dec
loopne
cwtl
adc
dec
dec
lods
daa
in
push
mov
cmp
xchg
pop
add
inc
ret
push
pushf
je
add
jmp
into
push
mov
mov
cli
dec
jbe
xor
pusha
dec
jno
daa
pop
es
addb
pop
mov
insl
arpl
jl
repnz
ret
inc
inc
arpl
js
xchg
not
or
push
pop
xor
xchg
rcrl
mov
jmp
lock
ja
in
cli
cmp
sub
adc
loop
or
jne
mov
ljmp
jge
push
adcb
or
sub
loope
icebp
addb
mov
mov
jo
cld
sti
add
psubd
xor
xor
xor
jg
sahf
in
pop
adc
pop
push
in
adc
es
popa
call
enter
jg
lock
cltd
dec
add
push
cmp
jns
or
std
pop
pop
imul
push
jmp
ret
push
xor
repz
push
jb
pop
or
pop
stc
pop
add
inc
adc
rorl
mov
xor
ret
mov
imul
pop
mov
je
sub
cmp
add
xor
cltd
movb
icebp
idivl
jne
add
insl
fbld
xchg
stos
in
pop
add
sub
pop
mov
not
mov
add
pop
mov
jg
into
push
cmp
cmp
and
hlt
inc
sahf
push
adc
xchg
fnstcw
and
xor
in
jge
mov
inc
or
jge
sub
sbb
sbb
mov
mov
js
dec
insl
sub
push
ret
test
movl
and
mov
or
mov
sub
and
mov
pop
push
mov
mov
jmp
hlt
lcall
xchg
push
dec
ja
sbb
idivb
xor
pusha
roll
xchg
adc
or
sub
ljmp
sahf
add
push
orb
cmpsb
add
mov
lds
push
lcall
mov
mov
mov
and
jmp
lods
cmp
jbe
cli
jl
add
adc
cmp
add
pop
xor
pop
cmpsl
push
cmc
loopne
and
mov
outsb
push
jl
bound
clc
fists
cmp
add
ds
jo
push
ret
mov
or
xor
outsb
loopne
popf
mov
jmp
gs
push
aaa
push
fisttpl
cmpsb
xor
into
push
imul
push
jmp
jnp
cmp
test
test
imul
dec
and
jbe
pop
jl
pop
and
or
push
jb
and
pop
push
data16
add
and
inc
cmp
mov
bound
in
mov
out
cwtl
movb
xor
daa
dec
mov
cld
or
mov
add
inc
scas
lret
sub
sti
inc
mov
mov
push
orb
daa
push
and
xchg
pop
fcoml
lcall
in
out
dec
sbb
repz
jg
sub
xchg
add
scas
adc
sbb
push
ds
xor
andb
xor
mov
pop
inc
xchg
add
push
test
jmp
or
addr16
sbb
jg
cwtl
ss
aas
mov
clc
pop
nop
leave
xchg
xor
fists
movsb
js
pop
shr
test
outsl
cmp
incl
inc
push
or
pop
jns
add
cli
sub
sbb
inc
and
mov
cmpsb
in
std
xorl
ja
bound
pop
test
cltd
jmp
gs
or
add
stos
je
xchg
leave
es
jmp
mov
pop
lea
pop
push
push
mov
mov
or
sbb
cltd
andb
sbb
add
aad
out
pop
dec
sbb
inc
sub
das
inc
dec
add
test
js
aas
add
xchg
test
xchg
adc
lock
pop
rorl
and
and
xlat
mov
jmp
push
lods
lock
xor
adc
push
ret
insl
mov
inc
inc
adc
xor
movsb
xlat
adc
cmp
cmpsb
negb
pop
and
sbb
jp
mov
lret
sub
movsl
or
pushl
jnp
pop
jecxz
push
add
or
clc
dec
push
out
imul
pop
push
repz
ljmp
push
mov
pop
sbb
pushf
std
sub
test
pop
sbb
pusha
xor
icebp
inc
pusha
sbbb
popa
mov
out
push
sbb
call
jg
loopne
sti
push
repnz
test
xchg
mov
sub
pop
xor
fsubrs
cwtl
and
mov
push
push
rcll
fmull
js
mov
and
pop
push
data16
loope
xlat
and
test
inc
sub
jmp
push
loope
inc
jmp
leave
into
jg
or
inc
push
incb
pop
push
roll
push
push
and
adc
int3
pop
or
pop
jmp
jb
dec
testl
in
xor
in
addr16
loopne
cmp
mov
dec
push
stc
cld
stos
mov
dec
rclb
adc
sub
out
repz
sub
mov
loopne
cwtl
sbb
adc
push
mov
push
loope
cwtl
or
bound
mov
fbstp
movsb
test
cmp
rclb
rclb
dec
lods
ss
add
fcomps
je
mov
mov
pop
out
jle
push
sub
xlat
movsb
add
mov
mov
xor
call
dec
pushf
cwtl
test
add
into
incl
stos
add
jmp
fnstsw
ret
arpl
push
pop
pop
pop
mov
xchg
out
cs
add
data16
stc
mov
mov
lods
add
jae
push
pushf
int
mov
cmp
pop
push
mov
and
mov
mov
mov
adc
mov
mov
into
je
jbe
jae
add
push
sub
lcall
out
lods
jo
dec
mov
neg
xor
in
dec
dec
lds
fdivs
call
cmpsl
pusha
pop
push
inc
sbb
shll
jo
add
testb
or
adc
push
dec
and
mov
push
pop
movsl
notb
push
adc
popa
inc
adc
fisttps
repnz
das
stos
and
lret
dec
push
and
jns
js
sub
push
push
adc
test
loope
xor
adc
mov
pop
std
sbb
push
leave
std
and
pop
push
pop
icebp
xor
insl
jb
mov
dec
xor
and
cwtl
mov
pop
push
mov
sbb
mov
scas
shrl
loopne
push
adcl
and
or
mov
imulb
xchg
jbe
and
pushf
std
aaa
sub
push
mov
scas
mov
pop
std
sbb
dec
movlps
jl
dec
scas
cmp
es
mov
loop
mov
adc
sub
adc
jg
lret
jae
daa
cmc
stos
add
pop
mov
xor
push
push
ret
pop
push
xor
push
and
mov
ret
add
shrb
ror
pop
arpl
or
inc
xor
out
or
sahf
es
pop
in
rorb
idivb
int
xor
enter
inc
cltd
jnp
popl
mov
cmp
stc
mov
push
push
jae
push
enter
imul
movsl
dec
ja
inc
fs
movsb
scas
popa
cmc
nop
call
add
xchg
jmp
fcompl
and
jle
and
pop
jecxz
or
adc
fwait
or
sbb
jp
or
jmp
cmp
loop
push
push
adc
mul
mov
in
push
fdivrl
mov
pop
pop
jmp
out
push
movsb
pop
insl
pop
jmp
push
cld
xchg
movsb
dec
inc
jmp
cld
sub
pause
and
mov
jge
ljmp
inc
or
xor
jns
gs
mov
push
test
xor
dec
mov
imul
or
xchg
mov
mov
inc
cmpsl
inc
push
fiaddl
fs
pop
mov
dec
lods
cmp
cmp
jns
arpl
mov
inc
jo
dec
push
xchg
xor
clc
mov
aas
cmpsl
rcll
outsb
xchg
pop
je
cmc
pushf
and
mov
xor
and
leave
movsb
xor
push
pop
cmp
les
dec
xor
lcall
insl
push
and
pop
call
cs
call
icebp
mov
jne
test
insb
add
cmpsb
inc
push
mov
out
leave
mov
dec
loope
into
in
dec
jle
inc
call
pop
adc
push
pop
aas
xorl
sub
sbbb
ret
pop
add
push
or
sub
push
out
pop
cmp
ja
push
or
or
pop
out
icebp
adc
inc
pop
mov
or
mov
jg
pop
call
mov
movsl
xor
pop
cmp
das
fidivs
mov
mov
imul
lret
mov
jle
sub
jne
inc
negb
out
bound
jmp
mov
mov
movsl
cmpsb
mov
lods
sub
push
negb
mov
test
or
mov
ret
jno
imul
mov
jle
lret
lret
push
add
mov
xchg
or
mov
rcll
add
push
mov
fcmovnbe
add
push
mov
fldl
jge
xorl
mov
adc
pop
adc
adc
or
push
popa
filds
lods
sar
dec
pop
xor
inc
loopne
mov
ja
je
xor
or
inc
jmp
aaa
adc
and
popf
imul
jmp
orl
pusha
lret
add
add
pop
jmp
fisttps
or
andb
cmp
pop
ds
mov
mov
mov
mov
lods
xchg
pop
xor
gs
and
push
and
and
push
push
dec
cwtl
stc
jns
orb
pusha
push
pop
insb
dec
es
adc
dec
call
push
sub
add
xlat
outsl
ret
outsl
ffreep
xor
pushf
je
sti
jp
inc
jl
jge
push
lods
nop
mov
mov
dec
cmpsb
inc
pop
lret
inc
test
push
xlat
mov
adc
push
daa
movsl
inc
cmp
mov
jecxz
jge
mov
movsb
aas
push
cltd
sub
pop
jb
aam
add
scas
inc
jmp
sub
es
add
gs
enter
inc
fwait
movsl
out
bound
adc
xchg
ss
inc
mov
mov
add
ret
in
neg
mov
icebp
mov
inc
inc
lock
dec
push
out
and
ds
insb
iret
sub
int3
in
aad
cmp
jae
movsb
arpl
jl
daa
out
and
jnp
pop
adc
pop
pop
pop
jae
inc
pop
xor
ret
xchg
stc
incb
pop
xchg
push
xchg
in
jmp
sub
clc
pop
sarb
jns
pop
popf
add
ja
adc
push
inc
push
add
aas
jle
ss
or
and
xchg
pop
xor
jne
roll
repz
lahf
out
inc
and
push
xchg
lret
pop
jmp
cmpsl
xchg
sub
test
dec
test
mov
cmpb
pop
mov
mov
or
scas
jl
sub
sti
movsb
mov
adc
add
push
push
dec
sbb
and
or
test
sub
push
add
hlt
jmp
jbe
jp
std
popa
in
push
mov
jecxz
dec
jmp
testb
ss
repz
mov
xchg
ds
adc
mov
xor
sbb
xchg
push
adc
aad
sbb
push
dec
push
add
outsb
out
clc
imul
xchg
xorl
popa
mov
fisttps
push
jmp
sbb
bound
push
aad
mov
pushf
shll
cmc
mov
testl
icebp
adc
pop
pop
add
mov
int3
push
add
push
jbe
jno
push
and
jmp
inc
jp
mov
sarb
arpl
ds
sbb
push
push
cltd
ret
jo
and
pop
arpl
out
sbb
je
jecxz
imul
out
mov
gs
inc
cltd
sub
aas
xchg
sub
xor
lret
cmp
pop
and
popf
jae
or
aas
jo
and
out
mov
repnz
test
or
add
adc
and
mov
test
aas
stos
repnz
cmp
dec
loopne
out
pop
cmpsb
push
add
xor
jo
cmp
repnz
shr
xchg
pop
mov
sub
daa
inc
pop
push
xor
out
add
mov
dec
or
lret
shrb
mov
jg
int
jmp
inc
and
cmpsl
push
daa
jmp
test
adc
cmpsl
dec
dec
lods
mov
jle
cmp
and
mov
cld
out
fwait
out
dec
mov
jmp
std
add
movsl
pop
and
pop
lcall
xlat
pop
and
out
fadds
std
jg
inc
push
add
push
lods
or
pop
inc
xchg
mov
mov
mov
ds
std
pop
mov
mov
les
mov
or
cltd
jecxz
cmc
sub
jmp
push
pusha
or
xchg
ljmp
stos
sbb
addb
das
mov
shlb
dec
int
in
mov
popa
aas
dec
movsb
jle
inc
cmp
dec
into
or
xchg
in
mov
inc
mov
push
div
test
mov
ja
xchg
mov
jmp
mov
movl
pop
or
add
mov
pop
mov
mov
clc
or
iret
cld
xchg
lods
lods
ret
fld
jmp
sub
dec
outsl
mov
roll
rorl
push
dec
test
adc
clc
pop
lods
pop
mov
mov
push
push
lcall
into
adc
ret
test
push
loop
stos
jno
adc
arpl
inc
das
push
mov
inc
nop
dec
shrb
dec
mov
pop
mov
or
outsb
adc
xchg
ljmp
or
lock
nop
fldl
leave
cmp
sub
int
or
add
mov
push
and
int
xchg
sub
ret
sub
add
add
add
in
or
inc
pop
dec
dec
cmc
xchg
mov
jae
adcb
xor
push
push
jne
sbb
or
push
inc
lock
mov
cwtl
dec
cmc
jmp
mov
and
dec
pop
mov
rorl
push
and
add
jo
orb
push
fnstenv
out
push
ss
cmp
push
outsb
imul
sub
jl
and
add
add
ror
clc
add
in
xchg
push
inc
cmpsb
in
add
pop
push
jns
lret
jno
mov
imul
in
in
inc
or
jo
sbb
xlat
bound
jmp
mov
add
stos
xchg
dec
pop
loope
mov
sarl
adc
int
pop
rolb
push
add
les
lods
loopne
jo
mov
xor
sbbb
pop
dec
testb
pop
add
shl
in
push
jb
add
sbb
repz
or
fmulp
aaa
or
dec
cmpsl
adc
dec
mov
in
xchg
adc
ljmp
sub
out
repz
xchg
or
sbb
jmp
cwtl
push
add
jns
push
pop
mov
xchg
dec
cmp
not
xchg
add
inc
and
orb
mov
dec
mov
pop
sub
movsb
sbb
or
sub
jmp
cmp
or
sbb
add
in
push
fisttpl
mov
jbe
xor
lahf
fstps
cmp
mov
xor
sub
pop
in
inc
mov
cmp
fmuls
pop
pop
push
mov
push
mov
inc
aad
stc
xchg
fdivrp
insl
push
jl
sub
lods
cmp
jmp
pop
cmp
test
aas
xor
mov
test
add
cld
add
je
scas
iret
std
add
mov
push
jp
imul
inc
sbb
push
test
mov
sub
fisubl
shlb
xor
add
fmull
mov
test
bnd
call
es
jmp
andb
and
pop
lret
icebp
pushf
scas
mov
pop
inc
xchg
sbb
jne
or
cli
lret
lds
mov
sub
cltd
out
xchg
or
adc
pop
xchg
call
shl
jmp
add
ja
push
cld
mov
aas
cmpsl
call
xchg
fnstcw
sbb
out
cmpsl
int3
pop
pop
xchg
addr16
push
jo
inc
mov
loope
mov
xor
jae
imul
mov
mov
push
cli
outsl
fs
sbb
addr16
jb
pop
mov
pop
mov
lret
imul
mov
sub
adc
push
sbb
add
cmp
shrb
cwtl
xor
sub
mov
cmc
lods
dec
dec
jb
or
lock
stos
mov
and
or
jmp
shr
mov
adc
xchg
fnstcw
or
pop
pop
xor
andl
cmp
jg
xchg
push
roll
mov
and
push
xorb
sbb
and
mov
mov
jmp
mov
fcoms
jmp
pop
inc
aam
xor
mov
cmpsl
pop
frstpm(287
add
mov
xlat
jp
lds
cmp
pop
sbb
mov
pop
jnp
dec
add
sub
push
sbb
jne
xchg
bts
dec
push
movsb
jo
ljmp
xchg
pop
jmp
add
cld
mov
dec
sub
ss
repnz
or
xor
loope
pop
pop
test
into
jmp
loope
adc
or
ja
dec
mov
mov
inc
mov
stos
jns
outsl
mov
inc
stos
sub
sbb
pop
lods
xchg
push
mov
aaa
push
rolb
or
out
pop
cli
push
pushf
dec
push
lock
xchg
mov
adc
and
test
add
add
aad
cmp
jmp
jmp
mov
push
mov
mov
cmp
pop
mov
adc
inc
xchg
cld
or
pop
mov
push
mov
movsb
push
stos
and
inc
xor
out
jge
loop
daa
vmptrld
jmp
movsb
out
add
mov
sub
pop
push
mov
adc
inc
mov
addb
mov
inc
adc
push
or
sub
call
repz
inc
lods
inc
sub
mov
gs
shl
push
add
lret
dec
add
xchg
call
or
mov
out
pop
idiv
cwtl
add
sub
jmp
sbb
or
push
mov
lds
and
arpl
insl
adc
jno
andb
cs
inc
or
lret
loopne
push
or
xchg
pop
xchg
mov
or
mov
jecxz
dec
sbb
loopne
push
add
mov
sub
das
jbe
and
cmp
into
gs
xchg
fneni(8087
ud2
cs
jbe
arpl
add
mov
adc
out
xor
jl
jnp
mov
and
pop
mov
add
test
pushf
mov
sbb
adc
pop
lcall
xor
adc
mov
mov
cmp
sbb
push
sarl
inc
bound
shl
adc
mov
pop
lods
popa
xchg
jecxz
in
dec
dec
dec
xchg
add
sbb
rcr
add
aam
sbbb
jge
sahf
fs
pop
pushf
push
xor
test
fnstcw
adc
fstl
js
insl
and
and
fnstenv
push
movsl
aam
cmp
xor
imul
xor
cwtl
adc
mov
cmp
add
mov
out
les
mov
dec
add
add
xchg
sub
notb
jo
fsubrs
mov
mov
or
popf
out
lea
popa
arpl
cli
insb
pop
mov
cmp
or
push
adc
jmp
cmp
push
dec
add
add
popf
xor
loope
sub
jle
mov
dec
sbb
cmpb
leave
lods
xor
pop
mov
xchg
jmp
mov
mull
and
jmp
negl
std
mov
out
push
jnp
mov
or
push
ret
leave
dec
repnz
adc
pop
shr
mov
stos
add
or
clc
inc
aas
mov
enter
xor
js
add
lret
out
xchg
leave
adc
jge
cmpb
ret
pop
pop
xor
popl
data16
cmp
out
adc
add
pop
inc
leave
sbb
mov
push
dec
jb
push
sub
es
inc
xchg
cmp
cmp
repz
add
jb
push
mov
xchg
leave
aad
cs
loop,pn
sub
movsl
push
mov
jns
inc
dec
shlb
mov
cmpsl
mov
xor
inc
xor
cmp
pop
pop
daa
aas
pop
ret
fdivrl
jmp
ds
add
push
dec
mov
push
gs
sub
xrelease
rcrl
clc
xchg
cmp
mov
push
in
jecxz
push
mov
imul
jmp
loopne
ficoml
std
add
subb
sub
inc
cmc
mov
jge
or
push
loop
cld
pushf
pop
add
or
dec
mov
adc
outsl
mov
fistl
jl
mov
jb
mov
mov
mov
movsl
adc
pop
xor
pop
dec
push
jmp
push
mov
out
adc
sarb
inc
jmp
js
add
repz
mov
dec
and
push
bound
add
fldl
lock
jnp
inc
or
and
dec
cli
sub
push
dec
pop
dec
add
xchg
jmp
ja
cmp
outsl
lock
out
push
outsl
das
ss
mov
pop
dec
pop
out
cmp
inc
cs
mov
scas
je
sahf
das
leave
fidivrs
mov
pop
sti
adc
or
sti
pushf
pop
arpl
ss
jne
jo
pop
jbe
adc
cmpsb
lahf
push
or
adc
mov
pop
xor
fisttpll
idiv
fiaddl
stos
push
jne
out
lds
pop
push
dec
mov
ja
insl
das
das
add
mov
xor
rorl
stos
popf
lds
lcall
ljmp
test
jecxz
test
or
rol
in
push
popa
jmp
dec
addb
cs
repz
loope
inc
dec
dec
outsl
xorb
push
lcall
pop
push
icebp
movb
pop
aad
shll
cmp
and
loop
dec
mov
dec
jp
add
stos
loopne
mov
pop
and
dec
in
pusha
inc
inc
in
jnp
push
jns
push
lock
rcll
cmpsl
cmp
and
add
out
addr16
jmp
int
inc
cmp
ret
movsl
mov
neg
sbbb
pop
ljmp
ret
jl
xchg
ds
adc
pop
sub
fiaddl
cs
push
or
dec
imul
push
xor
pop
das
fstl
jp
in
sub
xlat
addb
sub
mov
sbb
push
pop
jmp
mov
sub
icebp
dec
xchg
fldenv
jmp
mov
cld
orb
pusha
cwtl
out
and
jge
jo
push
jle
pop
pop
push
std
and
sbb
clc
sti
lahf
sbb
lock
andb
leave
bound
jo
popa
sub
mov
jge
mov
cmp
sub
pop
cmp
inc
pop
push
mov
lret
lcall
cmp
sbb
cmp
jo
jl
sbb
negl
xlat
add
jbe
dec
ds
adc
mov
lcall
test
dec
data16
mov
xchg
not
xchg
or
call
sub
adcb
roll
outsl
adc
dec
push
adc
jo
repnz
pusha
mov
loop
cmp
cwtl
add
inc
push
lods
shrl
and
jmp
ljmp
jmp
dec
pop
cltd
out
insb
sub
inc
arpl
in
pop
inc
and
into
push
sbbl
jmp
sti
subb
jecxz
vmovq
movsl
dec
pop
ds
lea
mov
jge
add
out
cld
test
lock
rorb
jle
push
add
fcoml
aas
cld
call
dec
jmp
les
or
daa
dec
lods
xchg
xchg
arpl
mov
xor
push
shl
mov
or
jo
jg
addl
popf
add
cmp
xchg
clc
jmp
pusha
in
mov
dec
push
jge
mov
add
push
bound
cmp
push
push
ret
ficompl
movsb
hlt
cmp
lods
and
dec
jl
movsl
in
cmpl
sub
aam
jp
das
into
pop
adc
in
popa
push
aad
jmp
push
add
and
dec
and
cmp
mov
xchg
repnz
inc
pushf
push
mov
adc
les
fistl
adcl
xchg
fadds
add
dec
mov
jmp
or
pop
jno
push
pop
add
bound
xchg
adc
pop
and
addl
iret
imul
or
int
push
or
sahf
lods
in
or
push
popa
movb
and
movsl
scas
dec
scas
add
dec
dec
inc
and
test
xchg
jnp
xlat
push
dec
sub
or
push
cmpsb
sbb
js
mov
jg
insl
rorl
insb
or
pop
lret
lret
addl
xlat
inc
andb
xor
call
faddl
and
fstps
pop
sub
sub
sti
test
push
mov
clc
and
or
les
pushf
push
cwtl
adc
jnp
rclb
xor
sysret
pop
aaa
icebp
ds
stos
mov
adc
xor
and
mov
pusha
data16
out
lods
das
inc
sub
push
jo
repnz
mov
jne
xor
dec
xlat
xchg
lods
pop
jmp
mov
xor
mov
jmp
xchg
cld
fisttpll
movsl
cs
dec
outsl
add
aam
adc
cltd
enter
push
loop
mov
add
fsubrs
lahf
sbb
into
jg
add
test
cmp
push
adc
lahf
dec
rcl
inc
push
shrl
xlat
jb
adc
enter
cmpb
in
or
pushf
aaa
inc
test
int3
adc
stos
and
adc
sahf
imul
jnp
mov
ret
mov
inc
aas
sub
mov
adcb
add
inc
shl
not
add
adc
mov
leave
xchg
mov
push
shlb
push
pop
into
pop
inc
cmc
jl
sub
aad
call
jo
and
sbb
into
push
div
dec
add
add
pusha
into
push
adc
pop
add
pop
sub
push
mov
pop
test
js
std
xor
mov
jo
stos
adcb
popf
sbb
push
gs
ds
lret
inc
xchg
enter
aaa
into
or
das
mov
pop
mov
test
jb
out
adc
adc
sti
add
sbb
jg
push
push
repz
or
jecxz
xchg
pop
rcll
sbb
lcall
xchg
lahf
movsl
imul
adc
enter
nop
cld
cmp
jp
jnp
pop
pop
aaa
cld
cmp
mov
xor
fldenv
mov
push
jmp
pop
pop
out
test
adc
jl
and
cmp
push
lret
ljmp
jmp
fs
mov
and
outsl
pop
pop
xor
sbb
push
and
clc
mov
cltd
mov
xchg
xchg
loop
fwait
aam
adc
lahf
fsubs
lds
movsl
arpl
cld
les
xor
or
jmp
sar
aad
add
cs
adc
test
lods
popf
sbb
int
add
jmp
jp
dec
testl
or
xor
jae
popf
int
mov
std
xchg
pusha
push
or
movlps
dec
movsl
es
lcall
and
adcl
pop
mov
lret
jle
cli
jg
dec
data16
das
jbe
inc
daa
jmp
ret
fwait
aas
cwtl
xorb
jmp
or
or
jmp
mov
and
jno
dec
repz
mov
or
or
jno
pop
sub
fimull
ret
repz
andl
aad
nop
inc
mov
pop
lcall
cmpsb
fidivrl
movsl
idivb
bound
lret
mov
shl
add
iret
pop
incl
push
test
test
daa
push
mov
pop
pop
mov
in
popf
xchg
or
mov
push
add
mov
sbbl
dec
repnz
or
push
fwait
lock
sub
push
jp
sub
repz
scas
or
dec
push
sbb
mov
js
loopne
mov
xor
mov
pop
xchg
je
sub
lods
push
adc
andb
addr16
insl
mov
orl
outsl
fld
aas
rol
push
or
loopne
and
lret
hlt
jmp
jmp
add
xchg
dec
call
shll
jmp
in
push
push
adc
jmp
add
cs
lcall
cmp
cmpsl
loop
and
dec
sbb
mulb
adc
add
lret
mov
addl
lret
out
cmp
sarb
popf
push
sub
push
xchg
dec
push
jg
inc
pop
or
cmp
das
int3
mov
adcb
fwait
adc
sbb
or
jo
scas
pop
xchg
xor
movsb
pusha
fisubs
adc
popl
out
dec
sub
mov
cwtl
cmpsl
aad
add
popa
mov
adc
inc
cld
mov
mov
pop
push
sub
jb
das
adc
jno
ss
cli
nop
int
lods
mov
jmp
test
push
mov
pop
rcrl
mov
loope
jmp
lret
dec
adc
adc
pop
inc
mov
add
pop
sub
fisubs
pop
in
cmp
movsl
jbe
ret
push
test
sti
fsubs
inc
pop
pusha
lcall
xchg
outsb
dec
ret
mov
push
adc
pop
rorl
adc
mov
pop
ljmp
mov
xor
or
push
bound
inc
push
jle
push
insb
adcb
add
xchg
into
movsb
add
in
push
rolb
add
sub
and
jmp
jg
sbbb
inc
fidivrs
rorb
adc
dec
mov
sbb
mov
scas
bound
stos
icebp
out
jnp
mov
lods
test
push
mov
shr
filds
mov
cwtl
and
add
mov
add
and
hlt
jmp
es
xchg
fistpl
pop
mov
push
movsb
mov
push
shl
fimuls
jbe
push
rcrl
jge
xor
fidivrs
jmp
or
out
pop
inc
add
mov
fs
pop
jmp
push
mov
pop
inc
mov
push
sbb
push
jne
mov
fsubrl
roll
loop
sub
ret
cmp
pop
dec
jg
pop
pop
mov
shl
push
xchg
cli
mov
push
pop
push
and
fnstenv
dec
sub
decl
sbb
ss
inc
and
out
jmp
sub
pop
ret
lret
cmp
out
fisubrl
add
daa
jmp
lods
mov
leave
out
xor
xchg
adc
add
xor
lods
mov
push
push
rcl
dec
inc
sub
mov
sub
movsb
cmc
scas
push
xchg
jmp
scas
ret
movsb
jmp
aaa
clc
out
pop
sbb
mov
not
add
es
dec
ret
inc
imul
inc
pop
scas
xchg
out
cli
adc
pop
adc
mov
push
or
or
rorb
repz
push
add
xchg
pop
xchg
sbb
lods
shld
aam
in
out
pop
and
out
xor
mov
mov
mov
jnp
scas
add
leave
stc
inc
mov
xor
loopne
imul
sbb
sub
add
or
dec
pop
cld
clc
sbbl
sbb
outsb
cmp
xchg
xchg
sbb
pop
cmp
js
mov
adc
repnz
and
call
es
movl
pop
cmp
repnz
add
in
mov
cmp
and
pop
push
popf
loopne
add
dec
icebp
add
jmp
pop
mov
xchg
add
pop
lret
adc
test
or
mov
in
and
or
addr16
das
xchg
scas
push
add
mov
orb
lret
sbb
mov
cmp
push
jmp
dec
sub
jmp
scas
add
jmp
rcll
add
int3
sub
push
inc
fdivrl
fldenv
lret
push
ficomps
push
lret
or
push
sbb
sti
fsubs
xlat
dec
cld
adc
adc
sarb
mov
sub
pop
neg
shrl
mov
in
mov
xor
pop
sub
xchg
mov
and
cmp
int
adc
xchg
mov
lret
fdivl
push
push
stc
jo
movsb
dec
pop
in
in
aam
or
inc
xor
stos
pop
clc
ffreep
mov
push
cld
lahf
adc
xchg
clc
inc
or
imul
out
cmpsb
mov
addl
jns
dec
push
inc
or
hlt
hlt
xor
inc
sub
pop
cmp
rclb
jae
push
sbbl
and
lcall
push
dec
outsb
call
pop
jmp
or
push
sbb
mov
outsl
setg
mov
pusha
mov
sbb
call
dec
das
dec
pop
and
roll
adc
mov
add
adc
adc
clc
push
and
adc
lods
out
cmpsb
icebp
sbb
mov
xchg
std
call
imul
pop
ja
lahf
ret
jb
xchg
adc
mov
adc
or
rorl
xor
jne
push
aam
cmp
sub
jmp
lock
and
dec
xor
xor
cmp
pop
jnp
into
pop
push
call
adcb
pop
inc
or
int3
mov
scas
xlat
mov
das
inc
subl
inc
and
enter
cmp
lret
mov
out
pop
add
rclb
mov
and
adc
aam
mov
jns
clc
adc
pop
stos
scas
or
leave
or
jbe
push
push
sub
add
sub
insb
test
add
pushw
shll
mov
sub
in
pop
mov
pop
inc
adc
push
add
cs
mov
or
dec
sub
xchg
pop
xor
or
sti
aaa
or
outsb
add
xor
test
ds
add
mov
and
xor
insb
into
dec
outsb
dec
adc
dec
or
push
jns
xorb
fs
mov
and
in
adc
pop
inc
adc
outsl
cmp
push
mov
in
sub
out
pop
aaa
ret
inc
notb
push
call
xchg
mov
mov
push
iret
push
and
cmp
push
sub
ret
mov
div
push
jmp
add
mov
add
inc
xchg
push
sub
inc
xchg
or
inc
push
pop
pop
pop
iret
dec
in
lcall
idivb
inc
push
jg
pop
sub
notl
fldl
jmp
dec
mov
push
dec
rorb
adcb
xchg
xchg
insb
push
push
shl
mov
mov
jecxz
pop
cwtl
push
mov
pop
mov
sub
xor
or
and
data16
sbb
out
cld
clc
dec
cltd
inc
pop
orb
pop
cmp
cmp
lock
xchg
sbb
jg
loop
ds
jmp
outsb
repz
roll
push
clc
or
dec
cwtl
psraw
mov
sub
inc
sub
push
stos
adc
xchg
out
out
add
sbb
dec
aas
xchg
xor
in
sarb
sbb
sub
push
push
fildl
fs
imul
dec
and
add
loopne
into
aaa
jne
in
out
push
adc
xchg
dec
mov
push
pop
or
lods
ficoml
fcompl
lds
inc
jg
dec
shl
xor
lods
or
into
test
pop
cmp
sti
rclb
mov
cld
cmpsl
pop
mov
sub
push
sti
xor
push
and
sub
add
fiadds
adc
jo
movsl
push
jmp
cs
or
pop
out
add
int3
rcr
sbb
ds
sub
xchg
testl
fists
lahf
fnstenv
out
adc
stc
push
mov
lahf
ret
xchg
inc
cmpsl
int3
push
pop
mov
jns
out
mov
jmp
inc
cmp
sub
pop
mov
cmp
ret
fnstenvs
dec
adc
and
mov
push
push
push
and
data16
inc
inc
or
in
xor
push
int3
sub
mov
pop
sub
aas
lea
rcll
dec
mov
cmp
pop
push
or
and
pop
enter
ret
dec
pop
stc
out
shl
add
outsb
aaa
enter
add
pop
or
sub
imul
pushw
es
pop
es
xchg
pop
ret
pop
xchg
daa
jg
data16
mov
jnp
xchg
repnz
in
js
stc
shl
bound
or
push
mov
imul
jbe
dec
sub
es
pusha
scas
pop
sbb
or
and
shrb
outsl
popf
mov
sub
pop
nop
shl
jmp
lcall
push
cli
lea
pusha
cmpb
and
jne
mov
jb
imul
adc
inc
movsb
or
jmp
aad
adc
pop
ret
push
addb
jmp
cmp
xchg
mov
std
stos
jne
cld
test
inc
or
jg
out
insb
xchg
sbb
adc
outsl
add
or
cltd
xchg
call
pop
stc
aas
adcl
push
pop
push
and
es
pop
push
aam
add
adc
pop
dec
mov
inc
out
xchg
or
ja
mov
and
mov
xor
adc
sub
lea
cmpsl
sub
mov
push
add
xor
add
sub
mov
shr
mov
into
and
sbbl
sahf
test
fisubrl
dec
mov
das
sahf
push
dec
lret
mov
adc
jae
sbb
jge
pop
jge
inc
mov
xchg
int3
pop
or
and
cli
scas
lea
fsubrs
lods
call
out
push
leave
adc
out
cmpsl
push
pop
imul
mov
jmp
jns
push
push
mov
push
cmp
lcall
and
jo
add
loop
lahf
dec
inc
sub
jmp
and
push
and
js
mov
xchg
daa
jne
aad
cmp
push
pop
add
bound
popa
cwtl
cs
jmp
dec
sahf
jae
push
push
ret
ret
fdivrl
cmpsb
add
inc
int
sbb
adc
push
gs
outsl
imul
lahf
fdivs
and
adc
fs
daa
mov
aad
adc
push
push
mov
cld
stc
and
movsl
out
mov
mov
pop
add
pop
outsl
jne
aad
es
xchg
sub
aad
orl
leave
add
in
lods
fwait
add
ljmp
clc
add
mov
pushf
pop
std
insb
jp
mov
mov
lret
fldenv
mov
mov
call
push
jl
pop
pop
xor
insb
sub
popa
jmp
mov
popf
push
out
adc
jbe
shlb
je
pushf
dec
cld
test
lods
leave
lock
and
xor
jle
mov
xchg
cvtdq2ps
sbb
nop
jo
mov
lods
xchg
mov
in
cli
cmp
jns,pt
dec
aad
mov
dec
sbb
nop
pop
xlat
push
ret
shr
stc
xor
jno
cmp
adcl
jl
or
push
das
shrb
ds
sub
cld
out
mov
sbb
mov
pop
mov
aad
fcompl
into
add
int3
out
pop
push
pusha
pop
push
push
dec
push
scas
jl
jmp
into
jns
jp
fldl
add
jl
pusha
and
cmp
out
pop
or
scas
adc
lods
das
imul
loop
push
inc
or
repnz
insb
bound
aas
mov
push
xor
inc
cmp
jmp
pop
imul
xor
mov
scas
cmpsl
loope
mov
xor
push
pop
mov
ret
fcmovnbe
adc
das
adc
add
jle
pop
sub
fadds
or
in
aad
pop
dec
xor
stc
cmc
out
mov
push
push
push
sbb
adc
inc
sub
orb
or
in
cwtl
sbb
or
add
xor
pop
mov
es
imul
mov
shlb
push
or
and
hlt
dec
fxam
xor
cmpsl
jns
cmp
add
das
xchg
pop
push
inc
test
notl
imul
lods
movsb
test
ds
pop
mov
adc
inc
mov
adc
sub
inc
rcrl
adc
mov
lods
adc
arpl
push
rorb
filds
xchg
push
adc
sbbb
inc
or
cld
dec
push
pop
call
push
fisubrs
adc
out
xchg
add
movsl
sub
and
mov
pop
mov
push
pop
push
fsubr
jp
push
lret
push
not
imul
test
mov
mov
pop
sub
lahf
out
push
and
xorl
xor
push
xor
push
inc
lret
sbb
je
pop
popa
idivl
add
adc
mov
pushf
pop
adc
sub
push
pop
and
push
jge
fadds
mov
loopne
nop
aaa
rolb
push
test
ss
or
testl
jmp
rclb
fwait
sub
pusha
loope
push
sbb
cmp
hlt
bound
push
jg
push
out
rclb
and
jmp
es
or
pop
mov
push
add
xchg
sub
push
lds
sub
push
in
add
jns
lock
insl
pushf
inc
xchg
dec
push
pop
insb
outsb
adc
test
pop
fmuls
push
notl
pop
xor
mov
dec
dec
mov
xor
add
icebp
jns
cld
ret
add
fcoms
scas
mov
cmp
insl
pop
lret
push
popa
inc
sub
rcll
addr16
dec
mov
cmp
sub
jp
mov
ret
push
addb
lcall
jns
cmc
or
in
sub
mov
shl
aas
mov
jmp
jp
mov
repz
fidivrl
ja
xchg
mov
jmp
mov
inc
sbbl
mov
and
inc
call
dec
add
daa
test
xchg
sub
rcrl
movsb
push
add
int3
aam
stos
cmpsb
pop
sub
or
push
xchg
jae
outsl
sti
adc
cwtl
aas
dec
adc
callw
push
fwait
sahf
dec
xor
dec
add
jno
lods
inc
add
cli
xor
pop
out
add
pop
rorl
jo
or
ret
and
popa
jns
add
cmpsl
sbb
jnp
cltd
xchg
repnz
add
pop
or
pusha
shl
push
or
sbb
mov
jb
lahf
pusha
mov
iret
fbld
jg
in
fimuls
lret
lods
lods
pop
mov
mov
add
add
adc
or
es
shr
loopne
das
sub
mov
and
les
faddl
mov
cmp
hlt
ret
mov
sbb
pop
and
je
pop
and
jmp
jnp
dec
inc
pop
xchg
push
pop
leave
flds
mov
sub
test
addl
mov
dec
mov
sub
not
xchg
into
jmp
and
adc
inc
mov
imul
dec
jg
jb
and
push
pop
stc
mov
and
mov
jno
pop
add
mov
adc
dec
fcompl
jecxz
sti
xchg
cltd
dec
jmp
jbe
dec
ja
loop
movsb
cmc
mov
push
movsb
adc
sub
mov
mov
aas
or
add
ss
jge
push
ret
push
sarb
add
ds
sub
sub
pop
dec
push
add
adc
dec
imul
shll
insl
pop
pop
lcall
mov
xchg
dec
dec
js
rcrl
out
das
clc
adc
sub
call
shrl
pop
out
sbb
ficoms
stos
add
sbb
cld
push
loope
or
lret
jns
pop
sub
add
xchg
mov
int
sbb
out
jne
ljmp
push
push
andnps
push
mov
subb
or
push
push
loopne
jbe
xchg
fwait
dec
leave
cmp
xchg
dec
add
pop
enter
push
in
xchg
push
mov
jns
test
sub
popf
cmp
sub
rol
xor
sbb
xor
or
sar
ss
test
mov
push
cmp
in
mov
jmp
outsl
add
push
adc
sti
and
add
dec
add
aam
add
insl
cmp
jmp
xchg
lods
shlb
inc
add
dec
lods
cmp
jns
adc
lock
es
jbe
adc
popa
cmp
and
icebp
push
inc
mov
or
mull
testb
cli
add
sub
dec
or
inc
cmp
stos
push
leave
sbb
imul
mov
or
add
push
aaa
sbb
pop
mov
mov
jno
iret
lds
fcoml
dec
int
sbb
push
push
add
sub
xor
js
sbb
pop
nop
cli
pop
and
mov
xor
rcrl
mov
iret
mov
xchg
jae
das
jbe
mov
add
lock
xor
ss
or
popl
lock
add
pop
pop
jmp
push
and
mov
push
icebp
pop
lods
call
stc
jg
popa
inc
sub
lret
fadd
push
mov
fisttpll
inc
sar
push
mov
leave
fistpll
test
xor
shll
ret
add
jecxz
cld
mov
iret
dec
push
mov
shlb
cmc
les
out
jae
lahf
sub
subb
divl
ds
fstps
data16
dec
fisttpll
adc
lcall
dec
add
dec
cmpsb
mov
xchg
push
mov
push
push
mov
shr
add
iret
xor
pop
and
out
jle
add
lahf
push
mov
add
jno
pusha
add
and
jg
inc
shl
hlt
clc
out
leave
mov
push
pop
fsubr
iret
cmp
cmc
rolb
or
pop
popf
nop
pop
cmp
inc
jmp
or
lret
nop
push
fcoml
jmp
insl
shlb
xor
cmp
test
fdivrs
rcrl
cld
mov
push
sub
push
or
add
xlat
roll
repz
out
and
loope
push
cld
dec
imul
or
pusha
mov
mov
outsl
pop
and
add
neg
fsubr
cmc
add
mov
pop
sub
xchg
sub
ss
dec
sub
cmp
icebp
test
aam
jne
dec
and
dec
pop
repnz
jecxz
push
stc
cli
or
xchg
hlt
lret
adc
rcl
lds
and
mov
jnp
test
xlat
lock
orb
repnz
js
sbb
shl
into
andl
dec
and
push
jne
shlb
cmp
pop
xor
xlat
std
pop
in
and
sbb
adc
in
push
mov
jno
cs
add
cmpsb
adc
into
aas
lock
dec
inc
inc
adc
adc
rorl
lahf
lods
pop
push
lock
pop
mov
push
andl
out
scas
adc
mov
mov
dec
cwtl
adc
jle
inc
sbb
sub
call
cmp
test
push
xchg
mov
ds
add
jp
sub
jp
xchg
leave
popl
mov
xor
and
lock
sar
loop
test
stos
jb
push
cld
movsb
fiaddl
cmpsb
pop
test
mov
dec
imulb
xor
sti
fdivrl
xor
xor
and
mov
lret
inc
push
adc
test
jmp
sub
pop
shl
dec
int
cmp
neg
rcr
aas
mov
mov
sub
push
mov
sbb
mov
filds
jbe
push
push
arpl
out
icebp
invd
pop
call
adc
push
and
add
or
iret
mov
loope
mov
pusha
ss
aaa
dec
inc
test
adc
and
add
je
into
sbb
aam
lret
rorb
push
imul
inc
adc
stos
das
pushf
xor
pop
std
cmpsl
and
push
add
jmp
push
jnp
dec
mov
jmp
shrb
lret
xor
add
or
lret
add
jmp
pop
adc
movsl
mov
jnp
pop
mov
or
push
imul
dec
bnd
pop
mov
into
and
call
popa
mov
stc
pop
and
or
adc
mov
jmp
sar
add
push
mov
loope
aad
in
dec
sub
inc
dec
jle
pop
jne
int
add
mov
add
aaa
fistpl
clc
lret
pushf
idivb
mov
pop
pop
orl
data16
pop
inc
add
or
das
fcoml
pusha
jmp
sub
jbe
push
lret
movsb
pop
nopl
or
test
xor
jne
xor
jg
mov
mov
imul
jp
call
shrb
xchg
jmp
push
inc
punpckhwd
mov
dec
pop
inc
aas
rcl
push
jecxz
sbb
lahf
jl
arpl
in
cmpsb
dec
lcall
pop
xchg
inc
lock
dec
cli
pop
push
dec
leave
dec
clc
aas
jnp
inc
out
cmp
out
enter
ds
dec
cmp
lcall
sbb
or
pop
pop
lcall
xlat
xchg
sub
push
cmp
pushf
push
rcll
sub
out
mov
push
jne
popa
cmpsb
xor
lret
std
scas
insl
adcl
dec
adc
add
jg
mov
and
fdivr
xchg
aas
pop
push
add
dec
clc
push
in
int
jle
dec
outsb
subl
push
cmc
ds
xlat
das
test
pop
pop
push
pop
pop
inc
xchg
xchg
pop
cld
sub
arpl
or
xchg
cs
jbe
fsubr
xchg
bound
sub
je
jmp
dec
imul
sahf
adc
sub
test
nop
imul
mov
sub
mov
mov
jbe
or
adc
mov
pop
push
and
or
es
inc
sbb
cmpsl
loopne
push
push
push
cmp
pop
pop
sub
push
sbb
or
adc
jp
notl
dec
pop
sbbb
pop
shr
push
in
push
call
je
sbb
imul
or
add
sub
push
adc
and
cmp
inc
pop
out
add
rolb
adc
xchg
pusha
addb
fsts
scas
sbb
decl
dec
sbb
cmpsl
add
xchg
aad
sub
adc
test
push
popf
xorb
mov
or
std
xor
cmpsl
pop
push
push
adc
ret
push
add
push
and
mov
aad
inc
stc
subb
movl
mov
es
in
and
out
xchg
mov
arpl
lds
jbe
push
jle
jmp
inc
xor
jb
mov
jp
xchg
xchg
daa
sbb
pop
xor
xor
mov
mull
sub
pop
cmp
les
push
jns
shll
js
lock
outsl
mov
das
in
outsb
imul
jecxz
out
pop
repz
xchg
mov
and
push
cmp
cwtl
dec
test
dec
test
jns
sbb
jle
das
je
in
call
idivb
popf
jns
sub
xor
push
push
or
pop
inc
add
in
out
bnd
sub
stc
scas
adc
sub
lret
imul
cmp
xchg
pop
sbb
pop
pusha
imul
pop
push
jbe
dec
clc
orb
jne
shr
mov
sub
fisttps
mov
je
add
push
into
push
enter
dec
add
add
or
adc
rolb
sbb
dec
movsb
push
out
pop
xor
aad
subl
repnz
jmp
mov
jbe
cltd
pusha
shrl
sbb
mov
push
or
pop
adc
xor
and
and
loope
fsub
dec
push
mov
inc
xorb
scas
sbb
shl
add
xchg
add
pushl
mov
push
mov
sbb
pop
pop
and
std
fnstenv
inc
popf
push
adc
and
mov
inc
sbb
rolb
jbe
pop
dec
mov
daa
jae
cmpl
sub
or
int3
add
xchg
jg
ss
cwtl
in
scas
push
or
ds
push
clc
adc
or
inc
cld
mov
rclb
xor
pop
sti
sub
add
xchg
sbb
jle
jl
jge
jbe
and
sbb
sarb
jl
lret
sub
shlb
pusha
pop
in
push
push
addl
xor
cltd
fs
iret
clc
movsb
inc
inc
mov
mov
outsb
pop
sarl
pop
shrb
roll
jno
mov
push
xor
and
cltd
jnp
cmpb
clc
clc
pop
xor
adc
dec
nop
iret
mov
aaa
or
adc
pop
into
test
aad
gs
or
jle
shr
sub
xchg
dec
and
std
and
push
mov
mov
dec
pop
pop
cmp
xor
cmp
mov
loopne
xchg
inc
insl
or
sbb
add
sbb
div
fists
push
cmp
dec
push
xor
inc
pop
adc
clc
shrl
lods
cwtl
into
sub
call
cmp
in
xlat
adc
mov
repz
scas
jmp
cld
imul
sub
pushf
and
cmp
into
jmp
add
arpl
pop
pop
stc
or
push
xchg
shlb
movsb
test
inc
cwtl
rcrb
hlt
and
xchg
movsb
aad
and
mov
xchg
scas
btr
dec
lcall
xchg
jp
fimuls
jmp
sti
and
add
inc
push
testl
sbb
addb
dec
and
ds
mov
push
pop
mov
push
or
jbe
jecxz
xor
aas
or
push
sub
jmp
pushf
adc
mov
push
adc
scas
inc
jne
pop
sti
fisttpll
bound
leave
bnd
int
loopne
mov
das
test
add
push
inc
fldl
iret
jmp
insl
sub
mov
jns
dec
das
mov
fcoms
mov
and
adcl
push
inc
push
add
pop
lret
adcb
xchg
cli
or
je
iret
push
mov
div
sub
add
inc
dec
mov
jne
mov
orl
dec
es
add
push
stos
shll
add
cmp
fistpll
xor
push
xchg
push
cwtl
fisttps
jnp
je
pop
fildl
lret
adc
fcmovnbe
jmp
jmp
mov
and
add
xchg
adc
or
push
in
icebp
arpl
sub
stos
or
outsl
inc
add
xlat
pop
shlb
fists
add
mov
cli
mov
add
mov
sti
push
push
mov
leave
push
jne
mov
jmp
sub
jp
stos
in
jp
adc
xchg
ret
ljmp
add
mov
push
int3
adc
mov
scas
add
mov
int3
sarl
jle
sbb
sbb
scas
pushf
fldenv
in
pop
xchg
shl
mov
push
das
push
jle
add
cmp
fucom
cmp
hlt
mov
dec
lea
aas
and
sahf
push
aam
shrl
jl
fstps
iret
push
adc
je
mov
jle
cmpsl
adc
int
cmp
fmuls
cmp
xor
jns
mov
cmp
rclb
sti
cmp
pop
and
add
cmp
imul
xlat
dec
pop
or
mov
jmp
call
dec
push
sub
icebp
jne
stc
sub
pop
cs
in
mov
push
pop
mov
addr16
push
outsl
inc
icebp
not
repz
lock
iret
mov
push
or
add
push
add
cs
cmpsb
push
add
xor
and
mov
adc
test
jbe
jg
inc
insb
add
scas
test
popa
add
xor
rclb
int
loopne
mov
fs
cld
and
inc
or
cmc
xor
pop
push
xchg
inc
jbe
popa
in
lock
shl
neg
inc
movsl
xorb
xchg
push
sub
mov
in
add
jl
sub
mov
or
insb
add
outsl
imul
ret
xchg
sub
nop
pusha
dec
shlb
add
dec
je
push
or
addr16
cmp
sub
rclb
push
jmp
pop
xchg
inc
scas
popl
pop
and
fwait
lods
add
sub
mov
test
xchg
je
sbb
lods
sahf
dec
rcrb
pop
xchg
pop
in
pop
cmp
push
mov
xchg
out
mov
pop
jmp
xor
push
adc
rolb
ds
imul
or
xchg
push
inc
sahf
mov
stos
dec
and
pop
ret
cmpsl
mov
add
add
sbb
mov
pop
das
add
aad
pop
fs
addb
in
jge
xchg
sub
inc
dec
and
jnp
jne
or
adc
or
ljmp
jmp
imul
cmp
fadds
xchg
test
xor
addr16
aad
dec
mov
xchg
add
jmp
or
clc
and
icebp
lock
pop
cwtl
addr16
adc
and
inc
ljmp
push
and
stc
sub
cmpsl
jno
popa
push
loop
sub
add
arpl
and
mov
xor
dec
xchg
xor
pop
inc
cmp
out
add
add
adc
pop
dec
shl
das
paddw
lret
ljmp
push
adc
jge
pushf
add
fisttps
daa
xor
movsb
add
rcll
inc
popf
push
ds
nop
xor
mov
pop
in
add
out
push
jge
rcll
rcrl
shlb
call
jmp
mov
dec
rorl
sub
pusha
aad
xor
jb
aas
popf
sbb
mov
filds
and
xchg
pop
xor
jne
jp
daa
movsb
out
xor
dec
sub
test
dec
mov
xor
jmp
lahf
xchg
mov
mov
mov
iret
dec
mov
cwtl
aaa
adc
pop
push
inc
pop
xor
ja
sub
add
es
shrb
jl
mov
or
mov
int3
orb
movsl
cmp
xor
cltd
add
dec
mov
or
out
sub
inc
xor
sub
movsl
add
cltd
lcall
addl
leave
cmc
and
mov
mov
sahf
movsb
lahf
pop
jbe
fcmovu
xor
es
inc
jmp
cwtl
push
adc
in
push
sarb
dec
scas
lret
out
jmp
pop
push
pop
sbb
push
mov
clc
daa
pop
mov
push
cmp
fbld
aad
fcompl
push
es
and
and
dec
jg
mov
mov
or
or
jmp
out
mov
imul
std
or
push
xor
inc
shl
xchg
push
jo
bound
and
iret
orl
mov
rcrl
or
testl
out
push
lock
ja
pop
push
xor
aam
or
inc
fdivrl
mov
pop
ds
xor
or
les
xor
fcomps
fwait
mov
add
xchg
sti
rcr
push
icebp
xchg
imul
xchg
sbb
adc
or
in
insl
in
hlt
ret
push
add
sub
daa
push
pop
and
or
int
xchg
inc
out
mov
inc
insb
jg
subb
inc
mov
push
imull
jmp
xchg
icebp
xor
push
push
mov
xor
and
dec
pop
iret
repz
mov
push
push
lahf
jns
add
ret
jle
imul
aam
pop
cmp
enter
cltd
sahf
add
dec
ret
sbb
in
pop
mov
popf
inc
add
jle
cmc
repz
sti
jecxz
jns
and
xor
push
pop
idivl
outsb
xor
cmp
hlt
insl
or
sbb
xor
push
cmp
inc
cwtl
xchg
pop
add
aad
mov
in
mov
jge
cmc
pop
popf
jne
in
loope
push
mov
xchg
stos
fnstenv
adc
push
push
jmp
mov
xor
ljmp
ret
pop
jne
int3
add
adc
or
push
pop
pop
or
insl
mov
add
push
push
push
push
mov
mov
add
pop
push
dec
lock
ljmp
or
mov
loope
mov
sub
adcl
bound
stc
arpl
dec
lahf
cs
sbbl
sbb
add
clc
mov
push
sbb
pop
add
xor
adc
cmp
jb
push
jmp
movsl
and
lea
lds
cmpsb
or
dec
stos
add
and
mov
xor
out
add
jge
sub
xor
add
repnz
xor
mov
pop
xchg
mov
jl
pop
cmp
cmp
cmp
add
imul
loop
or
js
adc
xor
inc
popa
xchg
std
in
repz
movsb
xor
adc
cmp
sub
add
jmp
push
mov
xchg
dec
jl
fldl2t
dec
loopne
push
insb
lret
push
popa
fcoms
sub
sub
and
xor
xchg
adc
push
movsl
xchg
mov
mov
mov
push
push
pop
sub
pop
cmp
cmp
js
stc
or
sbb
pop
pop
and
jp
add
hlt
pushf
push
jmp
add
shrl
cmp
jmp
shlb
jbe
push
jmp
inc
not
jle
mov
cmp
dec
sarb
mov
inc
icebp
test
mov
das
or
nop
or
mov
sbb
shll
and
jnp
xchg
aad
add
mov
sub
lds
in
sbb
pop
pop
jl
cs
dec
cmp
fmul
mov
or
data16
jp
subb
xchg
adc
flds
loopne
add
rcrl
test
jbe
sar
jecxz
cltd
sub
jne
mov
out
pop
or
stos
mov
adc
repnz
jnp
jge
xlat
adc
daa
pop
pop
frstor
mov
mov
or
data16
lods
inc
mov
mov
ret
out
dec
movsl
pusha
shr
bound
enter
insl
add
or
repz
push
mov
out
andl
ret
imul
jmp
or
jle
jae
dec
mov
lea
shr
fdivrl
jl
push
test
scas
dec
mov
xchg
dec
cmpsl
idivb
xchg
push
mov
repnz
lods
mov
push
js
imull
outsl
imulb
inc
jmp
push
jecxz
push
and
enter
mov
jmp
xchg
push
out
imul
jmp
jle
mov
jns
es
sbb
sub
xor
lcall
in
hlt
push
out
pop
mov
pop
pop
bound
daa
push
mov
ja
lret
push
mov
adc
cld
sub
dec
lods
rorb
add
shll
aaa
adc
scas
inc
scas
mov
mov
cmc
xchg
das
pop
test
lods
push
aas
add
add
int3
pop
push
into
pushf
jno
mov
mov
add
inc
fistpll
sub
jbe
dec
int
xchg
nop
cmp
test
jae
pop
lods
testb
sub
nop
add
xchg
nop
add
jl
sub
push
mov
mov
mov
in
fnstsw
jno
sub
add
or
jbe
and
or
mov
pusha
insb
lret
add
pop
shl
test
dec
popf
mov
orl
sub
dec
and
in
mov
push
xor
cld
mov
shr
xor
mov
xchg
push
dec
sub
pop
push
push
lahf
add
std
xor
pop
dec
pop
or
or
or
out
inc
lcall
or
fnstenv
xchg
mov
or
xor
cmp
lea
repnz
hlt
bound
mov
or
mov
je
subl
shll
jb
adc
and
sbb
lods
adc
cld
sbb
jb
imul
sub
or
dec
add
fs
push
add
aas
push
inc
std
inc
and
xor
cmp
lds
sbb
loope
mov
or
andb
push
mov
stos
cmp
mov
and
test
mov
push
or
repnz
xor
add
jne
and
leave
jno
subb
lcall
adc
aaa
imul
xor
sbb
test
ja
sbb
push
leave
adc
mov
add
jg
outsl
mov
jno
test
icebp
mov
dec
sti
cwtl
sbbb
sbb
add
fwait
pop
cwtl
sub
jns
les
loope
or
or
push
mov
sub
icebp
mov
pop
cmp
insb
adc
mov
cld
les
jb
pusha
add
stos
cmpsb
test
push
pop
arpl
or
aad
popa
mov
inc
or
sarl
mov
mov
loope
or
cmp
push
push
aaa
mov
test
mov
xchg
cltd
mov
inc
sub
test
aas
mov
sbb
arpl
mov
sub
and
or
lock
xor
sbb
add
cmp
inc
stc
add
popa
add
loopne
dec
lods
push
and
imul
in
add
adc
sbb
sbb
push
into
add
lea
mov
pop
rclb
mov
iret
xor
mov
adc
cmp
rolb
xchg
add
inc
pushf
cld
call
cmp
mov
mov
mov
sub
add
adc
cmp
inc
leave
jne
testl
roll
dec
xor
sub
lods
jle
in
pop
mov
cmc
jp
dec
in
out
pop
pop
mov
test
inc
add
dec
sar
inc
sbb
pop
ret
pop
mov
outsb
pop
add
icebp
xchg
sub
dec
and
popa
nop
sbb
insb
cmp
ret
add
inc
incl
adc
pop
sub
push
adc
sub
jmp
pslld
sbb
cld
or
iret
push
pop
mov
int3
pop
push
mov
das
jecxz
jno
jp
sub
test
test
or
xchg
pop
dec
insl
add
cmpsb
mov
cld
xchg
arpl
imul
ror
loope
cli
sub
sbb
jg
arpl
sbb
ljmp
or
stc
adc
jge
sub
pop
mov
pop
addl
mov
addr16
or
es
insl
ja
and
repnz
std
in
pop
mov
xor
jmp
pop
push
jmp
clc
in
ja
cmp
insb
dec
loope
add
pop
pop
push
stos
sub
movb
push
add
sahf
cs
sub
hlt
addb
pop
arpl
pop
nop
jmp
push
jmp
or
shlb
or
cmp
jnp
ret
mov
push
cmp
dec
shlb
shl
cld
xchg
mov
xchg
dec
push
movsb
mov
cltd
sahf
or
mov
add
inc
sub
xor
ret
or
daa
hlt
pop
add
push
add
movsb
mov
pop
pushf
jge
mov
push
ret
jo
push
push
js
sbb
pop
out
fadds
push
icebp
clc
push
mov
dec
inc
add
add
xchg
or
push
or
jne
inc
jecxz
outsl
inc
lock
es
inc
jbe
add
arpl
xchg
nop
sti
xor
jmp
jmp
movsl
jp
test
xchg
outsl
iret
icebp
pop
mov
push
pushf
mov
lret
arpl
cmp
or
mov
clc
jno
pop
jne
std
pusha
mov
and
pop
dec
mov
daa
repnz
cld
testl
icebp
imul
inc
aam
sbb
jbe
pop
mov
loope
das
push
test
push
adc
add
out
das
mov
push
dec
dec
add
and
jmp
test
popf
je
pop
jg
jnp
imul
inc
or
data16
lock
pop
push
adc
lods
lock
call
mov
or
cs
enter
mov
es
jne
jns
aam
push
lock
aad
incb
sbb
cmp
enter
jo
popf
rorb
jp
popf
sub
cvtps2pi
inc
and
mov
outsl
and
mov
push
pop
mov
cmc
and
movsl
sarl
or
in
daa
hlt
movsl
push
jmp
push
and
push
cmp
xchg
xor
mov
icebp
adc
xchg
adc
subb
imull
and
add
sub
and
test
sub
sbb
lds
inc
mov
add
push
or
add
push
or
mov
fsub
add
sub
jne
mov
cmp
fdivrl
pop
sub
inc
adcb
sub
jne
ficompl
in
jmp
adc
lock
sbb
sub
shrb
filds
js
dec
add
cmp
les
cli
pop
pop
inc
jbe
xchg
pop
push
mov
mov
add
outsb
xor
xor
dec
xchg
mov
fdivrs
or
movsl
in
push
fstps
pushf
mov
add
js
push
in
cmp
leave
adc
aad
mov
push
clc
outsl
icebp
adc
jns
addl
push
out
mov
test
ljmp
fldt
or
or
lock
push
std
mov
add
sub
adc
xor
dec
leave
sub
pop
das
jae
inc
jmp
sarl
pop
adc
loope
cmpsl
push
or
sub
xchg
loop
fstpl
movsl
dec
das
daa
rcrl
loopne
push
pop
adc
jmp
test
dec
cwtl
in
pop
and
sub
loope
add
imul
jl
mov
jecxz
aad
scas
xlat
in
cmpsb
cmc
xor
add
inc
lret
inc
aaa
and
iret
es
push
push
jmp
loopne
jns
loopne
test
test
pusha
cli
stc
jmp
push
and
lret
pop
mov
pusha
arpl
jmp
mov
or
xor
cli
sub
pop
lods
add
push
ret
ret
jmp
push
es
fisttpl
enclu
out
clc
sub
lea
int
loopne
jne
mov
insl
in
xchg
inc
mov
cmp
loopne
cmpsl
or
dec
loopne
mov
pop
and
leave
je
push
jmp
pop
mov
adc
ja
pop
and
push
sub
pop
cs
jbe
mov
add
sub
les
pop
ljmp
xchg
icebp
sub
cmp
inc
xchg
add
mov
mov
lcall
les
xor
adc
mov
jnp
aaa
jo
cmp
add
push
and
lods
sub
stos
or
fadds
sub
mov
jle
lret
xchg
orb
add
sub
dec
or
push
mov
add
jg
mov
lahf
fiaddl
repnz
insl
jecxz
add
push
xchg
mov
pusha
sub
jbe
jp
sub
mov
in
jb
jmp
out
mov
xchg
mov
fildl
repz
cmpsb
inc
xor
sbb
dec
jmp
test
xor
mul
add
xorb
jae
and
cmp
push
sbbb
sti
pop
test
adc
cwtl
xor
es
or
push
sub
cltd
lret
cmp
adc
mov
or
ret
jmp
mov
add
xor
mov
pop
push
and
add
enter
cmc
mov
dec
dec
shl
notl
inc
pop
jle
mov
or
inc
sbb
dec
adc
sbb
leave
cs
pop
aaa
cwtl
push
xor
xorb
rol
loopne
xor
push
add
xor
jl
cmp
cmpb
push
cltd
dec
out
push
pop
aaa
sbb
fists
sbb
jnp
pop
inc
mov
sbb
clc
push
in
into
sbb
push
xchg
cmc
cmp
dec
jl
or
bound
outsl
push
jp
sub
xor
fstl
or
ja
rclb
jae
sub
sbb
in
pop
bound
jmp
add
and
sub
mov
arpl
dec
mov
inc
pop
or
into
popa
push
cmp
mov
push
or
push
and
fcomps
pop
add
xchg
fs
inc
add
inc
jbe
hlt
adc
add
fsubrs
fstpl
inc
mov
adc
xlat
addb
shl
mov
rolb
cs
push
mov
cli
pusha
sahf
or
inc
pushf
test
or
in
stc
pop
xchg
je
lods
mov
dec
jecxz
mov
pop
mov
idivl
aad
or
mov
jmp
mov
pop
adc
imul
cmp
lock
or
adc
cmp
dec
push
aas
ret
dec
jno
mov
sahf
push
sbb
andb
xchg
stc
addl
ret
inc
lahf
mov
jo
push
adc
push
push
cwtl
push
clc
lcall
mov
or
rcll
jmp
stc
dec
push
scas
cs
test
ljmp
xchg
movsb
adc
mov
push
clc
pusha
imul
push
add
sub
jmp
enter
leave
loope
xchg
pop
pop
mov
arpl
sbb
ret
inc
or
jp
inc
cmpl
das
shl
cld
test
add
cmpsb
mov
lods
xchg
mov
rolb
pop
push
push
mov
ljmp
negb
sahf
jbe
sub
cmp
scas
add
loope
push
dec
lret
repnz
or
cmc
fstl
xchg
std
into
sub
push
dec
jge
cmpb
add
push
fwait
jb
dec
inc
or
notl
pusha
icebp
imul
pop
pop
jmp
inc
xlat
ret
call
inc
or
mov
imul
push
pop
push
sti
into
cmp
lock
inc
push
xchg
addl
dec
cs
repz
or
cltd
je
cmpsb
lock
add
daa
or
arpl
xlat
xor
xchg
icebp
push
nop
xchg
add
notl
cmc
scas
mov
daa
shll
out
sbb
push
pop
jmp
cs
push
mov
enter
nop
xlat
or
mov
imul
and
sahf
pop
push
add
popa
inc
jp
insl
inc
sbb
pop
jmp
mov
addr16
mov
or
flds
imul
into
jmp
out
rcrl
dec
popf
imul
cmp
push
xlat
sbb
xor
iret
stos
cltd
rclb
and
stos
fcoml
xchg
lret
pop
pop
sbb
mov
xorl
mov
sti
out
jge
add
lds
hlt
mov
mov
das
cmp
pop
sub
test
shl
push
or
jae
fidivrs
fsubr
xlat
jo
loopne
mov
clc
das
pop
loop
rcrb
jmp
rcrb
adc
xor
test
xor
dec
rcrb
sar
sbb
mov
mov
scas
mov
dec
jg
jns
or
and
enter
xchg
jmp
push
push
out
xchg
icebp
lret
pop
xchg
xlat
jmp
mov
mov
pop
sbb
xchg
lods
mov
push
sub
push
lret
xchg
sti
jne
rolb
pop
std
inc
lock
dec
jl
add
arpl
push
push
pop
and
cmpsl
dec
push
aad
fcoml
dec
inc
mov
push
or
xchg
or
or
loope
daa
sti
outsl
push
or
and
xor
pusha
dec
jns
and
pop
pop
ja
dec
cwtl
push
int
and
lods
out
lahf
enter
cmp
sbb
pop
add
add
jbe
dec
mov
add
mull
inc
sub
adc
pop
xor
rolb
add
adc
cmp
sub
inc
sbb
or
and
outsb
daa
and
xchg
movb
ss
sar
cwtl
aad
popf
mov
or
mov
lods
mov
and
push
or
add
or
lock
pop
add
push
and
pop
cvtpi2ps
fnstenv
cld
adc
into
adc
or
push
mov
sub
sbb
adcb
outsb
sub
hlt
cmp
mov
sub
push
int3
mov
sbb
shrb
stos
outsl
add
or
ds
jmp
movl
into
push
jg
dec
mov
lock
xchg
xor
bound
cmp
jg
popa
mov
pop
ja
cs
cmp
fiaddl
or
aas
and
jno
mov
adc
adc
jle
es
or
sbb
leave
in
mov
andb
mov
scas
mov
push
outsl
fs
cltd
dec
negl
clc
cmp
push
scas
xor
sbb
imul
jo
arpl
xchg
add
arpl
inc
lret
mov
push
or
xchg
movsb
push
es
neg
push
add
jb
imul
cmpsb
outsl
pop
add
sbb
and
icebp
sub
jo
cld
and
or
xor
shlb
adc
adc
push
lcall
fsubrl
xchg
imul
loopne
gs
stc
add
dec
push
mov
daa
lock
sbb
jae
shrl
aas
or
subb
js
jno
or
jp
jo
test
push
push
insl
dec
neg
jmp
sar
jge
test
jmp
push
repnz
dec
les
and
mov
imulb
cld
aad
or
pop
pop
repnz
inc
add
rorb
mov
push
lock
mov
in
add
cmp
add
pop
outsl
and
icebp
loopne
and
mov
sub
pop
mov
pusha
pop
dec
sti
dec
mov
mov
or
inc
out
cltd
cmc
cwtl
fimuls
outsl
xor
add
lret
pop
and
mov
mov
shlb
les
das
cmc
sub
inc
pop
adc
mov
jle
gs
dec
or
xor
push
jne
dec
and
jle
xor
or
xor
xor
xlat
loopne
movsb
xor
popf
or
jecxz
add
nop
jle
mov
shlb
lods
add
mov
into
or
push
jl
gs
int
es
or
sarl
arpl
push
mov
ror
adc
push
inc
inc
mov
aas
lret
fwait
and
outsl
movsb
sbb
jecxz
pop
mov
pop
out
into
cmpsl
xor
push
stos
test
sub
sbb
xchg
and
mov
adc
jnp
out
or
out
xorb
mov
mov
pop
cmpsl
push
dec
shr
add
repz
scas
inc
sub
pop
pop
test
rorb
pop
jno
mov
aam
push
lods
aas
push
push
lcall
icebp
inc
push
or
fwait
inc
xor
cmp
sub
enter
lahf
push
sbb
out
daa
icebp
cmp
dec
sbb
sub
xchg
push
je
in
mov
repz
push
orl
push
xchg
stc
sub
pop
std
push
add
test
inc
xchg
icebp
pop
lret
or
cmc
cmp
dec
sub
fs
shlb
repz
cmp
push
xchg
jmp
jmp
hlt
outsl
mov
pop
mov
push
je
rcll
jne
jae
adcl
xor
dec
pop
gs
dec
sub
sbb
pop
cmp
aas
pop
lods
mov
mov
lods
icebp
ret
cltd
mov
xor
fistps
pop
push
cmpb
push
and
in
push
adc
stos
or
lret
pop
push
sbb
dec
or
push
xor
sbb
jl
cmp
pop
sub
mov
js
and
push
test
jecxz
nop
jno
dec
adcb
push
cmp
or
inc
or
ret
pop
and
outsl
out
pushf
add
mov
xor
sti
in
push
add
cld
jmp
sub
lock
push
pop
cmpb
insl
and
in
push
cmpsl
jge
mov
ja
cmp
cld
add
repz
adc
rcr
xor
lods
add
mov
xor
pop
lret
xor
jbe
roll
sbb
add
pop
sub
lds
pushw
xchg
and
cmpsl
pop
cmp
iret
push
inc
cmp
xchg
pop
testb
movsl
out
sbb
push
repnz
das
pop
add
adc
es
mov
jmp
clc
xchg
lret
test
gs
xchg
dec
jbe
mov
mov
mov
xor
imul
jnp
dec
fs
dec
pop
ljmp
or
add
and
xor
in
mov
stc
js
sbb
leave
inc
push
mov
xchg
inc
repz
jo
push
push
push
cltd
xor
push
dec
adcb
pop
stos
cmpsb
int3
xlat
out
mov
and
lcall
loope
std
cmp
es
sbb
lods
jns
xorl
mov
push
or
pop
incl
leave
and
mov
sbb
adcl
neg
push
mov
fs
addb
jmp
cmpsl
rolb
mov
cmp
jge
scas
adc
stc
and
jl
lods
push
xchg
and
jno
push
or
rol
lret
in
clc
addr16
cmp
leave
push
lret
fdiv
fmuls
xchg
mov
mov
or
xchg
movsl
jecxz
dec
dec
das
rcl
sbb
cmp
pop
lcall
add
mov
andb
test
je
dec
mov
ja
xor
loope
stos
sbb
jge
out
and
ud2
pop
xor
and
sub
pop
or
das
pop
mov
or
mov
push
loope
cli
insl
fwait
cs
mov
inc
in
mov
leave
push
add
das
loop
lahf
ds
mov
imul
ret
gs
cmp
xor
mov
jmp
dec
pop
fucomp
adc
and
cmp
sub
jle
and
xor
jmp
push
dec
cld
or
xchg
cmp
stc
lock
adc
mov
std
mov
andl
mov
mov
lahf
test
add
sub
clc
push
lock
ds
repnz
adc
and
adc
or
imul
inc
dec
shl
ret
cmc
sbb
add
adc
xor
xor
or
pop
cld
pop
bound
addr16
int
and
sbb
int3
add
cmp
sub
cmpsb
roll
jno
js
addr16
jg
jae
push
lds
jmp
lds
sbb
movsl
pop
not
xchg
push
mov
addr16
pop
add
and
or
rorl
xor
lret
xor
and
sbb
dec
inc
inc
lahf
arpl
mov
xchg
jae
inc
pop
bound
les
scas
popa
aad
in
leave
enter
add
cli
jmp
mov
idiv
mov
push
dec
scas
xor
push
jge
dec
sub
sbb
sub
push
test
add
test
out
mov
loop
pop
fistps
mov
xor
test
test
sub
lret
ret
push
insl
and
test
jp
test
popf
jae
xchg
sub
bound
jecxz
gs
xchg
or
add
mov
or
aam
push
pop
cld
lods
mov
sarb
cs
popa
or
jno
mov
xor
adc
idivb
daa
dec
inc
roll
adcl
push
cld
jno
popa
jmp
shl
mov
sub
in
pop
add
xor
jmp
add
jno
cmp
leave
test
dec
andb
ja
scas
clc
outsl
add
dec
out
je
subb
ljmp
mov
push
ret
jo
adc
ror
or
js
add
pop
dec
cmp
int
and
jmp
popa
push
push
add
sub
adc
cmc
cmp
push
pop
xor
cs
jl
or
subb
das
fdivrl
pop
mov
xlat
in
push
xchg
sbb
inc
jmp
lret
fiadds
jns
addl
mov
or
sbb
icebp
lret
mov
mov
and
pop
dec
mov
push
mov
std
pop
push
loopne
mov
loope
outsl
cld
xchg
mov
cmp
or
pop
icebp
movsl
xchg
pushl
pop
rcr
lods
and
iret
int
aam
jg
add
dec
adc
mov
and
xor
sarb
sbb
out
cmp
outsl
or
pop
fimull
xchg
jo
ficomps
jbe
loope
cwtl
push
daa
push
jle
adc
pop
sahf
dec
and
dec
add
or
jns
mov
adc
mov
lret
mov
scas
adc
cmp
pop
scas
into
sub
xor
xlat
jmp
dec
pop
cli
js
jmp
mov
nop
nop
or
adc
adc
dec
out
sbb
test
sub
add
sub
push
icebp
inc
in
mov
cld
sub
andb
pop
jbe
cmp
xor
add
jne
inc
xchg
mov
push
mov
testb
push
sub
push
roll
das
test
cwtl
or
cld
cmp
xchg
cli
pusha
xor
mov
ret
or
mov
cld
stos
push
adc
pop
outsb
loopne
push
bound
stos
sarb
push
add
dec
xor
xor
and
mov
sub
mov
xchg
bound
lcall
test
sub
pop
push
pop
xorl
or
mov
ret
outsb
mov
xchg
std
mov
std
mov
popf
cwtl
daa
mov
xchg
js
cwtl
adc
or
mov
add
or
jle
push
push
arpl
mov
fs
add
cmc
shll
sub
fcompl
mov
jecxz
push
loope
pop
sti
mov
sub
inc
jmp
je
sub
sub
xor
mov
jae
out
add
stos
mov
inc
jg
sbb
pop
jl
imull
aad
test
cmp
adc
push
aaa
das
shll
xorb
adc
add
fucom
sahf
dec
mov
sub
mov
fsubl
pop
lods
sbb
dec
mov
sahf
enter
mov
push
xor
push
std
inc
sub
fisttpll
push
jmp
adc
jno
jmp
push
pop
js
aad
lea
mov
sub
xor
ljmp
rclb
idiv
push
or
add
into
imul
inc
push
jmp
cmp
pop
adc
adc
adc
lods
or
rolb
cltd
push
imul
pop
jg
push
add
xchg
xchg
sbb
loopne
push
nop
fiaddl
sub
sbb
cmpsl
pop
divl
xorl
pop
pop
mov
mov
push
call
pop
xchg
xor
jmp
add
imul
std
mov
jo
shlb
pop
ret
mov
push
sbb
les
sub
hlt
cmp
jnp
push
inc
pcmpgtd
or
cltd
pop
or
bound
push
sbb
std
sbbl
jp
out
cwtl
repnz
push
cwtl
aas
add
inc
outsl
mov
jl
mov
imul
and
jmp
in
adc
repnz
stc
push
imul
invd
or
bound
pop
out
xchg
push
in
stos
pusha
shrb
aaa
test
mov
sar
fistps
ljmp
pop
adc
pop
sub
adc
jl
lods
or
cmovnp
push
pop
mov
add
pop
add
cmp
push
fadds
or
cmp
ret
dec
mov
add
and
in
out
or
inc
in
pop
xchg
dec
pop
add
je
popa
cmp
addb
repnz
cmpsl
adc
ds
bound
imul
pop
inc
or
cli
or
or
mov
aad
adc
jmp
jl
icebp
xor
sbb
cld
insb
pop
push
out
insl
ljmp
cmpb
or
pop
pop
cmp
andl
push
or
jl
mov
inc
ljmp
aas
cmp
test
rcrb
or
les
imul
push
add
inc
in
js
and
insb
jl
jo
xor
in
popfw
inc
push
push
push
dec
mov
push
rcl
aam
and
adc
jb
xor
jecxz
push
mov
daa
sbb
add
push
sbb
xor
dec
xlat
loope
jmp
mov
test
rcrl
or
xchg
push
cld
shrb
sbb
inc
stos
outsl
and
pusha
mov
sub
out
lcall
loopne
gs
aaa
or
outsl
fsubrp
daa
adcb
mov
pop
sub
cmp
dec
pop
scas
ret
gs
es
jae
mov
ror
movsl
test
pop
lods
data16
pusha
xor
daa
stos
push
clc
adc
out
rcrl
pop
add
loope,pn
mov
pop
js
in
loopne
mov
js
dec
mov
inc
pop
jmp
ds
inc
enter
jno
adc
xor
leave
into
in
pop
sbbl
ja
loopne
fnstcw
pop
mov
push
add
gs
cli
sub
push
in
leave
sbbb
cs
sbb
mov
mov
push
adc
add
mov
or
cmp
loop
dec
mov
mov
xorl
pop
test
sbb
les
lahf
xchg
dec
adc
mov
inc
push
sub
loop
push
cmpb
xor
mov
test
pop
adc
fbld
ss
inc
stos
daa
pop
xlat
cli
and
xchg
aas
mov
mov
loop
jmp
jmp
fs
xorb
fisubrs
or
pusha
add
add
shr
inc
movsl
arpl
jmp
clc
jecxz
xchg
imul
adc
inc
dec
xor
jno
shl
cld
or
sarl
repnz
mov
lods
ret
out
imul
adc
or
sub
mov
add
jns
or
cmpsb
push
imul
jae
push
bound
add
and
daa
fistps
mov
or
xchg
or
cmp
xchg
sbb
inc
add
pop
jmp
fwait
jle
popf
in
out
nop
pushf
pop
mov
and
or
dec
push
icebp
bsf
pop
or
push
inc
scas
jno
fldl2t
shrl
and
addr16
clc
pop
add
jno
pop
add
xchg
adc
jbe
jmp
mov
inc
fcmovb
sub
pusha
inc
jge
sub
cmc
add
jmp
in
xchg
mov
or
add
movsb
repz
cmpl
sub
js
mov
sbb
push
pop
fmull
pop
mov
inc
repnz
pop
xchg
imul
xor
aad
test
sub
jmp
cmp
in
adc
ja
add
add
mov
loope
test
push
movsb
jb
iret
add
lret
adc
inc
inc
fcmovb
decl
or
sub
and
mov
ds
scas
sbb
sub
pop
insb
add
roll
sbb
add
mov
lds
mov
jb
out
mov
js
mov
sti
mov
dec
pop
not
ja
shl
cmp
aam
xor
push
or
xor
data16
pop
adc
sub
mov
outsl
std
test
dec
cmp
or
js
cmp
out
nopl
shl
aaa
mov
orb
pop
mov
adc
es
test
and
lds
push
push
mov
fdivs
andb
lcall
inc
pop
outsl
mov
mov
jnp
jmp
jno
lahf
push
addb
das
lret
bound
enter
dec
add
mov
push
pop
lret
in
movsl
jmp
sub
imul
rcll
lcall
push
movsl
rcrb
ja
sbb
mov
and
add
and
pop
and
push
dec
jmp
sahf
or
inc
adc
sub
and
or
add
fmul
jmp
nop
jmp
jbe
xchg
add
jmp
pop
adcb
jl
push
pop
outsb
push
daa
xchg
test
and
in
out
je
fstl
loop
dec
and
cmp
popa
add
jne
adc
pop
aaa
add
bnd
mov
cltd
rorl
mov
xor
dec
daa
in
repz
pop
rcll
in
lret
push
push
push
pop
pusha
push
jne
out
lahf
je
les
movsl
lret
xor
in
or
pop
mov
add
out
repnz
sbb
ss
cli
jo
ret
mov
sub
test
addr16
daa
jg
xchg
mov
movsb
push
shlb
or
pop
out
lret
rcll
xchg
adc
fnstsw
not
xchg
jle
loop
inc
mov
or
data16
sahf
push
mov
or
icebp
pop
cs
cmp
mov
mov
popa
cmpsb
enter
pushf
jno
sub
daa
je
bound
in
adc
pop
sub
sbbb
daa
adc
jle
push
inc
sbb
sub
jb
outsl
add
lcall
sbb
sbb
clc
roll
cbtw
mov
dec
jle
mov
hlt
jmp
nop
mov
xor
jo
das
cld
and
mov
outsl
sub
jmp
push
push
mov
cld
adc
mov
adc
mov
out
pop
xorb
and
sub
movsl
adc
repz
sub
sbb
pop
mov
mov
fdivrp
xchg
or
push
fs
arpl
mov
lcall
pop
mov
sbb
push
or
add
not
jmp
mov
shr
push
add
and
in
sub
jmp
jmp
adc
push
fistl
xchg
cmp
sbb
adc
adc
clc
stos
fnsave
mov
dec
scas
jl
jmp
ja
xor
cmp
and
sub
hlt
mov
lea
mov
cmp
dec
push
ret
or
dec
das
je
xchg
and
xor
push
imul
sub
adc
push
push
outsb
jne
sub
adc
cltd
and
pop
lods
inc
add
sahf
push
ret
stos
mov
or
inc
and
mov
popf
push
iret
cmp
xor
or
xchg
cmp
xchg
mov
imul
xorl
and
repz
shll
outsb
and
and
xor
nop
incb
out
mov
sub
les
testb
add
lret
adc
add
insl
insb
sub
xor
and
xor
or
data16
and
stc
inc
adc
add
fidivrl
mov
cli
ja
mov
mov
fstps
push
or
fstl
jo
loop
add
imul
mov
sbb
inc
jmp
call
popf
stos
popa
pop
faddl
std
inc
add
xchg
mov
mov
inc
sub
int3
jmp
loopne
loope
sub
xchg
jle
add
mov
ds
cli
mov
call
jecxz
hlt
inc
in
stos
aas
add
dec
mov
inc
or
sbb
sub
arpl
aas
sbb
push
jmp
outsl
add
sbbl
cli
les
sbb
lret
or
cmpb
arpl
jmp
push
mov
jns
or
cmp
inc
mov
mov
dec
cli
shrl
loope
cltd
inc
call
sub
push
xor
add
adc
adc
xchg
or
push
mov
out
xchg
out
jmp
add
push
lcall
lea
cli
pop
outsb
adc
pop
out
sub
inc
int3
jns
xor
test
leave
or
jmp
repz
xor
stc
pop
inc
out
xor
and
arpl
jns
mov
dec
jl
jge
xlat
jae
push
and
sbb
xor
xchg
inc
mov
sti
mov
jmp
sub
inc
mov
jb
je
mov
inc
lds
repz
loopne
mov
mov
xchg
adc
add
adcl
sub
leave
and
mov
push
popa
idiv
sub
les
lret
pop
mov
mov
sub
xor
jmp
dec
inc
bound
pusha
testb
dec
lds
aaa
jmp
dec
and
lods
mull
push
sbb
adc
and
adc
adc
adc
iret
mov
mov
pop
loopne
out
pop
push
mov
push
mov
push
mov
pop
neg
dec
dec
jmp
and
dec
pop
mov
dec
cmp
jle
adc
dec
ss
inc
nop
scas
or
js
add
mov
ficompl
mov
xchg
fistpl
push
add
jmp
lret
addl
push
push
push
out
cmp
add
push
pop
pop
jae
or
jg
insb
dec
shrb
test
mov
in
pop
mov
sub
pop
jmp
outsb
daa
es
add
in
sub
ffreep
in
dec
mov
aas
dec
sbb
loopne
jle
imul
test
fs
adc
xchg
cmp
int
sub
lods
xor
and
mov
jno
sub
rorb
cmp
lidtl
out
pushf
in
daa
xchg
jl
dec
cmpsb
add
jle
and
jmp
lea
xlat
jmp
shl
sbb
out
or
sbb
in
pop
daa
xlat
and
hlt
std
test
push
dec
scas
mov
sbb
xchg
push
clc
in
jmp
ljmp
push
pop
stos
pop
jno
ljmp
dec
jb
loope
mov
jnp
flds
aam
inc
ljmp
xor
mov
sub
mov
mov
inc
xchg
add
int3
sub
push
mov
lahf
push
pshufw
ds
pop
imul
push
xchg
cltd
sbb
xchg
xor
xor
add
popf
adc
mov
mov
pop
push
mov
mov
add
fld
lcall
or
in
pop
add
in
add
sub
imul
loopne
idivl
sbbb
push
test
jmp
out
cmp
cmc
ret
add
pop
in
pusha
inc
fdiv
in
sbb
mov
pop
pop
xchg
jne
ss
sbb
cmp
push
add
ret
inc
add
fldt
insl
add
dec
outsb
add
rcrb
push
or
daa
and
jge
pushf
cmp
enter
pop
and
clc
xlat
adc
add
pop
push
adc
stos
push
cmpsb
or
pushf
add
xor
sbb
pop
adc
inc
je
inc
push
ret
and
dec
mov
out
pop
cmp
loopne
add
jnp
int3
sub
push
jl
dec
dec
lea
insb
imul
fyl2x
jp
pop
inc
and
xor
dec
inc
lea
jle
mov
sub
out
mov
adc
out
add
movb
subb
mov
outsl
ljmp
es
adc
xor
push
sbb
jns
add
add
cld
and
ds
push
scas
adc
test
mov
in
divb
lret
popa
jg
xchg
and
push
out
add
push
mov
andb
pop
mov
and
rcrl
outsl
jp
aaa
mulb
dec
sti
shr
xchg
test
ljmp
flds
orb
sub
push
shl
daa
xor
pop
pop
add
ljmp
lock
adc
push
sbb
scas
add
fadd
cli
jne
fwait
adc
or
pop
loop
xchg
loop
rcll
pop
sbb
sarb
or
jns
adcl
mov
add
je
dec
clc
mov
cmp
das
push
popf
and
aad
mov
bound
adcl
test
rclb
in
test
ret
outsb
incb
jmp
gs
jmp
push
int
or
pop
jns
push
add
mov
pop
xchg
in
adc
jne
sbb
mov
dec
pop
sbb
cmp
daa
sbb
jno
int3
dec
adc
fisttpl
xlat
std
sub
and
bnd
mov
mov
inc
in
mov
dec
add
in
mov
cld
jmp
inc
cwtl
sub
popf
push
xchg
xor
push
push
push
imull
add
pop
push
mov
ret
test
adc
stc
pop
adc
xlat
out
hlt
mov
test
mov
and
push
in
lret
cmp
and
cld
mov
loopne
stos
jne
mov
jmp
or
pop
test
xor
inc
ljmp
ss
shll
or
xor
adc
repz
cmc
push
sub
push
int3
pusha
sub
fnstsw
pusha
std
mov
pop
cmp
push
mov
xor
pop
pop
mov
sub
scas
sub
push
cmp
or
jge
rcll
into
and
scas
imul
jo
push
jmp
push
pushl
fstpl
jnp
or
add
sub
movsl
ret
or
sbb
andl
sti
orb
shr
jae
sbb
rep
mov
sub
enter
mov
xor
jmp
add
xor
scas
shl
pop
jno
mov
js
lahf
shl
xchg
pop
cli
je
mov
sbb
hlt
or
push
and
andb
push
pop
stos
mov
or
jb
xor
pop
pop
pop
aaa
add
and
push
push
rcrl
jmp
xor
cmp
xor
add
push
or
dec
add
sub
or
xor
out
leave
adc
adc
sbb
sbb
cmc
ficomps
stos
dec
sti
mov
cwtl
cmc
mov
push
arpl
jmp
in
mov
jge
daa
clc
and
testb
dec
lret
jecxz
xchg
stos
xor
scas
test
cmc
mov
push
xor
adc
cmp
scas
imul
sti
sbb
xchg
into
aaa
lds
sti
sub
mov
dec
lds
push
dec
pusha
jmp
mulb
test
cltd
pop
push
jnp
in
jg
mov
mov
and
mov
mov
or
test
es
or
pushf
movsb
or
push
adc
mov
fdivrs
ss
inc
cld
add
jmp
xchg
add
push
pop
push
mov
sub
movl
shr
hlt
aaa
xchg
inc
int
in
enter
push
sbb
mov
and
push
and
lods
pop
cld
inc
cmp
fcomps
pop
add
sbb
xchg
adc
xor
and
imul
adc
or
rcll
pop
mov
ds
das
dec
sub
push
adc
mov
shr
cmp
add
jnp
gs
cmp
cmp
es
cli
xchg
ljmp
push
pop
icebp
popa
add
xor
ret
jecxz
or
add
imul
or
inc
mov
or
iret
jne
fbstp
loope
sub
cmp
pop
mov
arpl
aad
adc
loop
jle
sahf
sbb
add
and
xor
jle
aaa
or
jno
dec
xchg
jno
lds
sarl
mov
orb
pop
push
mov
flds
imul
js
dec
mov
sbb
daa
inc
pop
adc
adc
xor
test
mov
mov
or
lcall
or
arpl
and
push
ret
dec
sbb
cmp
dec
ljmp
push
push
xchg
sbb
cmpsb
gs
xlat
sbb
lods
imul
and
mov
pushf
je
jmp
jno
xor
in
negb
push
loope
call
aad
out
sti
jmp
or
pop
imul
xor
jne
add
sbb
jle
pushf
pop
jno
mov
push
mov
outsb
sbb
test
or
stos
ja
mov
dec
or
loop
jmp
mov
dec
insl
divl
sbb
dec
and
popa
add
fidivrl
lock
rcl
jmp
insl
jnp
or
loop
adc
cltd
ds
push
adc
loop
ror
xor
cmp
ljmp
sub
scas
scas
pop
or
mov
test
ficomps
push
cwtl
mov
and
scas
pop
fiadds
dec
add
or
adc
jp
pop
fadds
jl
daa
adc
and
pop
dec
dec
xchg
and
cwtl
push
xchg
incb
les
jnp
orl
adcb
add
or
cmp
sbb
enter
mov
call
lods
lahf
sub
adc
call
jmp
addr16
push
push
pop
cwtl
and
imul
decb
ljmp
or
les
sub
shrl
aad
ss
mov
or
cmp
clc
repnz
test
bnd
incb
mov
xchg
add
push
xor
mulb
repz
rcr
popf
push
push
push
inc
test
pop
pop
lock
jp
gs
jmp
xor
lock
xor
fucom
int3
lret
jmp
jo
mov
aaa
jb
sbb
sub
pushf
loope
fmuls
in
or
xchg
sub
jnp
adc
repnz
out
dec
mov
xchg
cmp
mov
add
pop
pop
sbb
push
sub
out
xchg
jp
dec
out
sbbl
sub
dec
rep
mov
or
push
push
lea
testb
adc
pop
pop
stos
lcall
dec
and
pop
sub
rclb
adc
lds
fildl
mov
xchg
jo
jecxz
fcoml
fbld
lods
dec
xchg
in
add
negb
xchg
ljmp
jne
mov
xor
je
push
js
jae
pop
dec
loopne
fisttps
bound
in
adc
test
inc
enter
dec
push
or
jns
xor
popa
test
pop
arpl
jl
lds
or
pop
pushl
sbb
loop
add
mov
pop
je
dec
out
test
xchg
jb
add
push
cmp
jo
mov
mov
or
jecxz
and
push
jl
mov
dec
push
aam
ficompl
pop
push
or
fstpl
lahf
cld
pop
jp
adcb
aad
jle
push
mov
push
testl
xchg
pop
lret
lods
push
aas
scas
pushf
mov
adc
inc
loope
or
adc
sub
adc
push
pushl
cli
cmp
adc
or
pop
xor
add
dec
dec
and
daa
lcall
pop
push
out
ds
push
pop
jmp
clc
sub
mov
roll
jg
cmp
jmp
neg
orl
mov
imul
push
sub
dec
pop
es
add
or
js
popf
push
fisubs
mov
sbb
fs
scas
das
arpl
or
jge
or
test
imul
xchg
push
jge
jecxz
or
mov
push
std
add
mov
or
push
push
fsubs
in
clc
mov
xor
add
ret
sub
popf
stc
test
movsl
pop
cwtl
push
push
push
in
fistps
add
cwtl
cli
pop
xlat
xchg
scas
and
pop
jg
mov
fdivrs
imul
add
jge
out
movsb
idivb
mul
out
enter
push
add
jge
stc
or
inc
sarb
inc
sbb
vpperm
nop
adc
or
pusha
orl
mov
inc
test
and
lock
jp
in
xchg
add
mov
enter
cltd
mov
mov
push
pop
push
andb
das
insb
les
mov
mov
push
imul
cwtl
fsubr
hlt
add
dec
bound
cmp
lret
adc
cmpsl
movsl
in
push
nop
dec
dec
pop
xor
lret
das
sbb
pusha
jno
dec
mov
pop
push
mov
jns
repnz
icebp
lock
es
push
cmp
cwtl
push
xchg
sbb
shlb
or
jmp
out
xchg
pop
push
fimuls
adc
push
test
xor
or
jns
cmp
into
jecxz
adc
push
push
ja
add
jmp
jno
adc
xchg
pushf
or
lahf
pop
inc
xchg
notl
in
inc
shll
dec
jle
stos
adc
loop
cmp
and
ret
aas
jo
lret
roll
insb
xor
lods
and
mov
or
shrl
not
stos
cmpsb
test
xor
push
adc
jns
xlat
test
push
jnp
sbb
jmp
or
daa
mov
inc
ljmp
mov
incl
sahf
jnp
cmp
ds
movsb
pop
sub
adc
or
popa
and
aas
jbe
pop
or
or
andl
add
pop
xor
or
ret
jmp
lret
or
push
xchg
mov
adc
push
int
in
jecxz
adc
mov
shrl
jp
mov
and
add
pop
mov
or
push
jp
xorb
in
popf
fcoms
jmp
mov
fdivs
rclb
loope
push
gs
adcl
add
comiss
scas
test
ljmp
and
loope
cmp
shlb
int
iret
fldenv
push
adc
push
sarb
rclb
dec
icebp
add
push
mov
mov
lret
sahf
inc
xor
xchg
mov
mov
xchg
in
mov
enter
and
push
cmpb
lret
fs
jge
roll
out
push
pop
shlb
mov
stos
mov
test
pop
mov
flds
cmpb
cmp
push
pop
pop
add
insb
adc
movsb
push
das
incl
pop
sub
xchg
subl
fdivrp
out
add
in
cmpb
ljmp
mov
push
mov
push
out
and
xor
lods
sbbl
mov
scas
xor
xor
xchg
jns
mull
inc
jle
fldl
ds
pop
mov
cld
negl
mov
test
jmp
xchg
sti
cmp
int
mov
jmp
or
mov
bound
cmp
push
inc
sub
jmp
lcall
inc
add
pusha
adc
mov
shll
loop
jno
in
jl
lock
mov
je
add
adc
dec
or
sbbb
push
push
inc
cs
imul
movsl
or
xor
jg
xor
test
ljmp
pop
sahf
push
add
mov
push
cwtl
ljmp
into
xorb
mov
sub
push
in
sub
insl
sbb
test
cs
pop
mov
or
fwait
mov
sub
xchg
js
sarb
daa
sub
and
repnz
call
sub
cmp
in
jmp
dec
lods
add
repnz
jge
addl
aad
insb
cmpsl
js
and
daa
rol
nop
shlb
ja
in
hlt
push
aas
jle
ret
out
shlb
cmp
data16
push
or
bound
jno
inc
orl
pop
daa
xchg
shlb
push
ljmp
mov
iret
nop
jp
clc
dec
push
loopne
call
mov
jge
not
cmp
ret
push
or
adc
sbb
sub
out
in
xor
jge
loope
add
pop
cld
jns
in
lods
add
inc
or
pop
pusha
sbb
sub
stc
mov
push
mov
in
mov
jecxz
jmp
lcall
ret
outsb
andb
cmp
dec
mov
mov
jb
and
jb
adc
mov
xor
pop
push
mov
xchg
adc
adc
jl
jmp
clc
or
lahf
and
shrl
orb
push
jno
jecxz
mov
mov
lock
mov
movsb
fisubrs
rorl
cs
add
or
stc
mov
loop
dec
add
mov
shrl
jb
repnz
cltd
mov
inc
pusha
push
add
insb
add
loop
push
sbb
jae
imul
jg
arpl
stos
inc
lods
out
and
mov
inc
add
addb
cmp
or
inc
or
lret
repnz
adc
and
pop
sbb
subl
cmp
bound
pop
jnp
shlb
or
stos
jle
and
shll
add
adc
or
xor
add
sti
sub
outsb
pusha
xor
inc
int
add
push
xlat
adc
jae
xchg
mov
lret
cmp
xchg
adc
xor
add
jmp
mov
sar
push
fisubs
shlb
aaa
and
movsl
add
imul
jmp
enter
and
dec
fwait
movsl
dec
das
add
mov
pop
scas
mov
pop
and
jnp
scas
addl
mov
repz
fwait
leave
pop
lds
dec
mov
stos
sahf
mov
xor
repz
sub
dec
mov
inc
fcoml
ja
pop
sub
xchg
mov
pop
mov
add
es
push
pop
pop
testl
push
push
cmp
mov
gs
data16
mov
or
in
cltd
pop
sub
imul
push
sbb
outsl
mov
pop
inc
movsb
pop
push
adc
mov
repz
pop
out
adc
push
shl
int3
jecxz
mov
clc
aam
hlt
test
inc
or
sub
sarl
pop
push
sub
rclb
les
cli
push
pop
fisubs
dec
call
sub
je
int3
or
mov
dec
inc
pop
xchg
add
mov
mov
shrl
mov
adc
mov
fs
cmp
jge
and
mov
movsb
ret
aas
pop
push
pop
mov
repnz
sarb
mov
insb
jl
loope
test
sub
enter
js
loopne
and
fs
mov
xchg
pop
jge
jge
cwtl
dec
dec
cmp
dec
mov
inc
pop
mov
push
jns
out
es
and
sub
or
push
adc
rclb
mov
dec
or
pop
mov
xlat
xlat
imul
or
ds
push
jp
push
cmp
adc
lcall
adc
jo
xchg
push
in
stos
mov
out
ficoml
mov
loopne
fs
arpl
mov
push
lock
push
cmp
xor
outsb
mov
dec
stos
xchg
insl
inc
movsb
jmp
push
dec
push
ja
aad
or
inc
mov
inc
lods
pop
pop
lcall
adc
and
testb
or
clc
cltd
xchg
push
xchg
iret
jmp
xchg
or
cmp
inc
mov
inc
mov
out
adc
mov
mov
mov
adc
add
mov
dec
stos
dec
jmp
xor
add
adc
lahf
jecxz
mov
fiadds
mov
insl
sar
js
mov
ljmp
pop
jmp
or
adc
jmp
jno
sbb
push
inc
jns
cmp
jne
imul
mov
pushf
sub
fimuls
shrb
loope
dec
stos
sti
dec
add
repnz
fsubrs
sub
adc
pushf
cmpsb
and
ljmp
dec
mov
xor
adc
sub
add
sbb
add
add
testl
pop
jne
xor
jge
pop
jo
add
popa
ljmp
or
dec
mov
jae
hlt
pop
xchg
push
mov
test
fs
outsb
rorb
stos
ja
mov
dec
add
ja
push
ljmp
out
xlat
jmp
sub
negl
or
xor
gs
push
mov
and
mov
pop
loope
filds
dec
pop
sub
push
je
push
mov
aaa
repnz
add
insb
sbb
inc
pop
pop
push
les
fsubs
xor
dec
mov
mov
stc
ffreep
push
mov
jnp
mov
sbbb
fstps
push
lcall
pop
rorb
pop
pop
shr
dec
pop
lret
imul
push
push
or
rcll
and
add
cltd
xor
jle
or
fwait
js
daa
mov
shlb
xchg
lods
mov
lret
jl
jmp
mov
add
xor
dec
xor
cltd
jne
cs
ja
push
cmpsl
or
ret
add
mov
pop
add
xchg
cs
add
mov
push
mov
lock
cmc
xchg
dec
bound
into
jl
rolb
jbe
pop
rorb
jmp
fnsave
sub
ficoml
out
push
das
jb
sbb
sbbb
inc
js
pop
push
xor
stos
cmp
call
push
dec
pop
cmpb
mov
pop
sub
std
and
mov
repz
lret
scas
dec
or
cld
cli
hlt
mov
test
adc
pop
stc
imul
mov
bound
dec
inc
test
sar
je
nop
out
push
test
sarl
data16
ja
ret
and
sbb
ret
ret
add
mov
repz
loope
ss
fmull
or
pop
cmpb
fsts
aas
xor
hlt
adc
lock
cmp
jle
xchg
sahf
mov
adc
mov
shl
adc
ret
pop
or
push
sbb
or
arpl
xchg
jne
push
int3
sub
fwait
push
mov
or
or
daa
pop
inc
push
sub
xorb
outsb
pusha
dec
adc
push
rcr
push
and
or
push
jmp
or
inc
sbb
rol
imul
pop
inc
sub
pop
adc
mov
stc
mov
adc
rolb
mov
int
in
int3
push
inc
sub
stos
adc
or
cwtl
insb
aad
push
mov
rorl
movsbl
push
push
clc
gs
insl
jle
idivb
fiadds
ret
mov
cli
dec
cmp
mov
cmp
jb
ljmp
inc
loop
imul
sub
jae
add
xchg
jmp
dec
mov
cwtl
or
pushf
lret
mov
leave
icebp
out
mov
stos
mov
adc
sub
jae
jge
sbb
mov
daa
jmp
jno
mov
ret
ljmp
xorb
gs
push
xor
mov
xchg
jnp
inc
push
ficoms
pop
loope
lds
pusha
mov
pop
add
xorb
rdpmc
mov
lods
sbb
std
xchg
sbb
add
pop
push
push
clc
std
cld
call
lret
idiv
js
push
jmp
inc
ret
pop
cld
inc
inc
inc
rcll
add
dec
dec
sbb
ljmp
insb
jecxz
lea
add
push
push
jmp
or
enter
sub
pop
jg
pop
inc
jmp
adc
jge
mov
mov
add
mov
cmp
pop
pop
cltd
or
fiaddl
enter
xor
jmp
out
and
and
scas
pop
nop
call
daa
sub
out
add
xlat
fmull
dec
xor
cwtl
arpl
lods
xor
sub
sub
xor
pop
cmc
jecxz,pn
xchg
clc
jg
std
cmp
imul
adc
loopne
push
add
mov
in
mov
pop
int
or
mov
ficoms
aam
xlat
nop
and
xor
aaa
jmp
popa
shrb
cltd
fistpll
dec
push
dec
in
jmp
xchg
inc
adc
xchg
jno
mov
dec
and
mov
gs
add
adc
add
dec
jge
es
jg
mov
lret
imul
cs
fsubrs
cli
scas
lcall
movsb
add
add
stc
sbb
sub
repnz
push
and
and
pop
or
xlat
add
adc
popa
inc
jns
dec
or
add
rol
es
push
or
rcrl
test
and
push
jmp
nop
test
call
push
mov
adc
jg
sti
mov
adc
pop
fcompl
mov
insb
push
dec
pop
and
cs
and
movsb
sbb
or
stos
decb
test
out
mov
dec
push
mov
pop
in
movsl
mov
stc
add
pop
or
sub
mov
push
and
cmpsl
shll
xchg
sub
in
lock
movsl
pop
decl
das
sbb
jecxz
shlb
pop
in
dec
rclb
or
fnstsw
jbe
adc
mov
jle
lock
and
out
or
mov
lret
jg
mov
into
push
adc
add
and
outsb
or
das
add
cmpb
mov
xor
cmp
dec
sbbb
or
inc
lods
pushf
push
jl
push
daa
sbb
xchg
add
cmovno
sub
pusha
sub
aaa
pop
neg
push
loop
sub
xchg
test
add
jl
xchg
push
dec
cli
jge
add
mov
sbb
pushf
mov
in
push
push
sub
rcrb
cwtl
mov
adc
or
iret
mov
pusha
mov
xor
inc
mov
daa
add
inc
sbb
sub
popf
insb
or
or
jg
pop
gs
mov
jecxz
ja
scas
imul
dec
in
mov
in
test
push
mov
sbb
or
je
sbb
adc
ljmp
lds
xchg
push
pop
loope
cld
push
imull
sbb
mov
pop
fidivrs
jmp
inc
push
ret
push
rcrl
mov
adc
sbb
rcrl
sbb
jb
fbstp
mulb
jmp
and
adc
out
pop
push
rolb
add
mov
jmp
push
mov
popa
pop
test
test
notl
lods
fistpll
jb
aad
aad
pop
test
adc
shrl
xchg
and
sbb
out
inc
inc
sub
ret
mov
jl
or
and
ds
out
ljmp
push
mov
aaa
loopne
fidivl
pop
pop
sbb
dec
ds
add
mov
mov
jmp
add
pop
test
or
pop
jns
or
les
push
rclb
test
adc
inc
test
mov
fdiv
enter
lcall
mov
lea
clc
xchg
or
inc
pop
xchg
not
jnp
std
xchg
pop
fsubs
xor
jg
fiadds
pop
jmp
mov
mov
ljmp
dec
pop
pop
jmp
imul
mov
xlat
mov
lea
xor
xorb
xchg
dec
and
les
jbe
cld
mov
mov
and
clc
jmp
test
adc
rcr
mov
lock
push
mov
das
and
je
pop
repz
jno
lahf
bound
xor
es
jl
inc
pop
xchg
out
xor
add
dec
jmp
addb
inc
sarl
push
out
mov
scas
push
push
pop
jmp
mov
clc
adc
add
sub
stos
daa
mov
sbb
inc
jbe
mov
add
jge
and
shlb
shufps
or
pushf
loopne
mov
pop
not
and
xor
stos
stc
mov
pop
mov
xor
cmpsb
push
push
and
loop
stc
sti
add
adc
and
sti
pushf
xchg
fwait
inc
sub
mov
adc
mov
add
ljmp
push
ja
xchg
add
pop
mov
daa
add
dec
in
adc
inc
inc
cld
lea
pop
and
mov
add
lds
movsb
or
or
in
dec
mov
push
mov
popa
jmp
lods
dec
daa
pop
jg
cmp
jns
es
mov
jle
das
ret
test
push
xor
jmp
mov
cmp
add
push
jb
hlt
inc
pop
sub
or
pop
fmull
push
nop
or
fstpl
xchg
test
jle
icebp
pop
addr16
pop
test
mov
lahf
or
movsb
push
mov
pop
xlat
add
push
push
push
pop
ret
pop
and
inc
or
shl
sbb
mov
sub
jmp
push
pop
pop
add
push
sub
out
adc
mov
int3
and
testb
ljmp
xchg
pop
push
test
xchg
int
lods
xchg
in
inc
push
mov
add
sbb
in
std
jno
push
pop
shlb
iret
insl
dec
cmp
ss
push
shlb
adc
or
stos
ljmp
push
andl
or
or
rdmsr
popa
mov
icebp
arpl
lods
popf
inc
inc
and
cmp
add
jo
xchg
inc
rolb
mov
jle
push
pop
push
dec
testb
push
push
or
adc
mov
mov
ret
pop
dec
pushf
lcall
xchg
imul
and
jmp
sub
es
mov
sub
fiaddl
sub
out
jne
add
push
dec
out
orb
cmp
push
cmp
es
leave
daa
sbb
adc
push
into
push
out
push
fldt
jmp
push
iret
dec
push
or
test
jecxz
bound
jae
bound
xchg
test
jno
cli
cltd
dec
cmpsb
stos
sub
add
rorl
pop
inc
add
dec
outsl
pusha
or
inc
sbb
jb
mov
iret
adc
mov
add
cmpsl
push
xor
jo
outsl
neg
cwtl
mov
filds
add
add
push
add
fildl
imul
inc
lock
xor
or
jecxz
add
adc
pop
cmpsb
adc
fdivr
enter
jnp
bnd
jge
fmuls
out
jmp
push
push
inc
test
mov
xchg
inc
jle
lahf
stc
ret
pop
adc
loop
vmovlps
lods
jo
push
add
and
mov
movl
not
decb
inc
dec
push
cmp
cwtl
jbe
jecxz
stc
mov
cmp
mov
pop
push
cmpb
or
sbb
xchg
dec
mov
bound
int3
leave
popf
dec
xor
dec
bound
mov
ret
cmc
jb
dec
add
push
outsb
add
pop
shrb
fs
and
fldl
lock
xor
gs
add
popa
pop
mov
mov
push
or
jmp
test
add
pop
push
push
add
jae
jmp
inc
mov
or
lea
mov
pop
add
sub
outsb
shlb
sub
pop
mov
ljmp
or
add
jnp
sbb
inc
or
imul
rcl
xchg
jmp
fldcw
sahf
rolb
div
ret
jg
dec
dec
movsb
adc
in
pop
jg
out
je
bound
mov
sub
xchg
jae
or
dec
ja
or
add
cmp
cld
pop
shlb
ret
or
mov
mov
addl
cli
push
cmp
add
push
mov
jno
lcall
xor
cmp
stc
sub
sbb
cmp
fcomps
adc
loop
into
mov
cmp
mov
xchg
or
andl
lret
ret
inc
sub
mov
mov
push
jo
ficoml
and
stos
xchg
fnstenv
inc
push
mov
dec
maskmovq
shl
dec
mov
xchg
daa
xchg
mov
lahf
pop
loopne
add
mov
jne
mov
shr
mov
jl
loop
fs
lret
adc
jmp
inc
sahf
push
hlt
jmp
imul
dec
xor
cmp
jo
inc
dec
aas
cmpsb
push
or
dec
lock
call
xor
inc
pop
je
or
xlat
adc
sbb
push
push
mov
sub
cmp
cmc
xchg
rorb
jmp
cmp
cmp
nop
sub
mov
sub
push
sbb
and
xchg
sub
sti
loope
enter
xchg
decb
hlt
xchg
shll
mov
xchg
pusha
mov
pop
dec
iret
into
push
jp
inc
and
xchg
push
pusha
mov
outsl
mov
mov
loope
jmp
xor
add
daa
add
outsb
xor
and
xor
and
arpl
lods
fmuls
pop
add
lahf
test
lret
cmp
pop
dec
inc
push
outsl
adc
cmc
lcall
or
dec
or
or
add
lock
jno
fists
mov
xlat
lods
add
leave
pop
pop
push
inc
xchg
push
jno
mov
mov
adc
mov
mov
mov
jle
xor
je
icebp
ljmp
int
add
invd
in
inc
inc
clc
mov
loop
stos
pushf
and
dec
pop
rolb
arpl
aas
pop
mov
pop
repz
aas
cwtl
imul
pop
dec
scas
lret
fs
mov
roll
daa
icebp
push
jg
push
mov
adc
movl
cli
or
repnz
pop
sub
push
push
jmp
aad
add
add
out
sub
test
push
add
les
stc
push
dec
stos
cmp
or
sti
adc
jecxz
push
push
jmp
pop
and
pop
push
mov
into
sbb
jno
daa
jmp
or
sub
push
iret
call
mov
call
les
stos
add
aas
imul
inc
mov
andb
pop
mov
fdivrs
loop
xor
iret
fimuls
popa
adc
sbb
mov
imul
and
mov
std
mov
mov
push
popf
xchg
rep
pop
jne
lret
lods
pop
lods
loopne
nop
mov
inc
mov
enter
or
imul
add
andb
jl
cmp
pop
pushf
xchg
movl
cmp
mov
lods
jmp
sbb
pop
push
mov
cmc
cmpb
mov
mov
xchg
push
mov
lods
jl
fcmovu
fsubr
pop
icebp
mov
jl
pop
add
add
add
and
cltd
ljmp
cwtl
and
adc
neg
shl
imul
sbb
ret
std
data16
dec
subb
jmpw
mov
nop
cmp
in
fstl
ja
lods
ffreep
sbb
pop
and
and
mov
inc
fsubrl
loop
push
cs
or
push
mov
xchg
xchg
sbbb
shlb
jecxz
pop
or
sbb
imul
pop
addr16
sbb
lds
mov
cmp
add
dec
test
pop
adc
sbb
jl
out
aad
mov
jmp
pop
popa
push
test
jecxz
bound
inc
pop
pop
pop
add
and
jle
inc
lcall
pusha
inc
xor
loope
and
sbb
mov
ds
cmp
mov
jmp
mov
mov
mov
sbb
push
mov
jbe
cmp
push
ret
push
pusha
jo
sbb
or
mov
stos
or
aaa
in
add
mov
lahf
dec
test
and
or
cmp
cmp
outsl
test
adc
test
jmp
or
mov
dec
test
out
loop
inc
pop
sub
or
mov
je
leave
fisttps
push
push
imul
adc
insl
mov
inc
xor
bound
and
test
leave
fldt
pusha
ret
push
lahf
mov
xor
mov
popf
mov
pop
mov
imul
pop
mov
adc
bound
arpl
out
push
clc
lahf
orb
inc
popa
mov
fsubrs
and
movsl
inc
cmpsl
pop
xchg
fmuls
nop
adc
scas
dec
cmpsb
jo
lret
pop
push
cmp
sub
nop
and
push
sub
jo
imul
or
pop
xchg
je
mov
addb
jmp
dec
cmp
popf
cmp
jmp
fcompl
enter
je
imul
lds
pushf
negl
in
adc
mov
ret
test
add
test
out
repnz
scas
sub
ficompl
inc
cli
jecxz,pt
inc
enter
dec
fildl
or
imul
int3
sti
inc
shlb
mov
pop
ffreep
xor
fsubrl
or
movzwl
xchg
pusha
aas
xor
js
pop
rolb
dec
jno
mov
add
daa
mov
lds
es
adc
dec
cs
pop
add
jmp
push
adc
cltd
cmp
adc
dec
movsl
rol
mov
cmp
jb
push
or
aad
imul
add
pop
xchg
addb
dec
xchg
clc
push
jmp
outsb
dec
pop
dec
int
movsl
xlat
outsl
in
push
xchg
mov
sub
and
loopne
cmpsb
lods
loopne
into
inc
ds
imul
mov
mov
not
aas
dec
pop
scas
push
out
pop
adc
ficompl
rclb
popa
lahf
push
out
ret
or
jb
sbb
sbb
add
sub
adc
mov
push
xlat
add
fadds
pop
lock
jmp
jnp
lods
mov
cwtl
mov
mov
lods
push
aam
push
jae
mov
dec
mov
and
ds
jg
pop
cmp
mov
jg
bound
inc
nop
sub
ds
inc
sbb
jb
push
pushf
adc
test
pop
xchg
lods
cmc
sbb
inc
xchg
lock
in
js
and
and
fs
loope
sub
sahf
adc
shrl
dec
pusha
imul
aaa
push
inc
inc
jns
mov
push
clc
mov
xor
jbe
lahf
ljmp
dec
inc
mov
iret
dec
jp
mov
rolb
out
dec
out
enter
cmp
inc
mov
adc
sub
jl
ljmp
leave
stos
add
or
and
in
arpl
add
notl
cs
mov
pop
orb
or
sub
cmp
lret
pop
adc
adc
je
enter
cmp
rcrl
pop
aas
enter
dec
popf
fnsave
or
inc
jecxz
cwtl
pop
addr16
add
imul
xchg
cmpsb
adc
push
push
xor
shll
popf
andl
adcl
xchg
mov
cmp
jmp
loopne
lock
jne
nop
ljmp
pusha
frstor
pop
arpl
clc
inc
adc
jo
std
jl
pop
shl
adc
jbe
jmp
cli
xchg
das
mov
inc
ja
adc
pop
and
inc
and
lret
pop
movsb
and
adc
lret
jmp
mov
xchg
xchg
pop
jb
insl
call
aaa
sbb
dec
mov
movl
cli
sarl
cmpsb
jmp
adc
sarb
dec
mov
add
neg
ja
add
mov
pusha
leave
cli
xor
adc
cmp
imul
ja
popf
imul
loop
stos
and
cmc
add
pushf
sub
add
inc
jl
mov
pop
aam
push
fldcw
ret
popl
jmp
cmp
std
or
push
push
pop
jmp
jo
pop
sahf
int3
out
mov
dec
shr
movhps
cli
jno
jns
mov
neg
push
dec
and
or
xchg
fs
jno
inc
push
dec
ljmp
and
sahf
dec
mov
shl
shr
les
xchg
gs
lret
adc
fisubrl
mov
add
mov
testl
dec
mov
pop
push
mov
adc
add
pop
dec
mov
nop
cmp
pusha
shrl
xor
pop
jno
adc
add
subb
push
mov
and
cltd
enter
cltd
jae
cli
out
and
xchg
arpl
add
pop
stos
repz
into
das
jbe
lea
sub
or
leave
mov
stos
je
ljmp
mov
sub
stos
or
sbb
out
loope
sub
sbb
pop
sub
sub
in
out
add
dec
inc
or
push
sbb
mov
inc
test
push
or
in
mov
subb
rorl
mov
xchg
mov
pop
pop
idiv
sbb
int3
adc
leave
test
icebp
in
cmpsl
dec
insb
pop
jmp
xor
jo
jp
dec
repnz
dec
push
xchg
subl
scas
mov
and
push
adc
mov
lret
clc
push
outsl
test
add
sub
dec
add
adc
test
stos
push
jo
cmp
pop
mov
or
call
iret
aas
and
jl
cwtl
add
pop
pop
cli
mov
adc
nop
sbb
fincstp
bound
mov
inc
std
outsb
mov
ret
or
pop
xchg
mov
or
jo
adc
pop
aad
push
daa
xor
jbe
sbb
add
popa
jae
sub
push
pop
shrb
push
xchg
xchg
adc
mov
xchg
leave
in
cs
inc
testl
in
jl
icebp
inc
adc
out
popa
lea
xor
sub
mov
mov
sub
lret
push
mov
sbbb
leave
dec
neg
inc
fadds
push
inc
aam
in
aad
push
adc
adc
push
adc
mov
and
rcr
cmpsb
push
fdivrl
mov
dec
lods
std
add
fstl
mov
rcrl
lret
add
xor
push
movsb
xor
dec
mov
jae
int
andb
incb
lret
inc
xlat
movb
cmp
imul
adc
adc
sub
test
movaps
mov
out
negl
cs
inc
addr16
dec
sti
pop
adc
or
je
enter
jecxz
movsb
sahf
cmp
dec
mov
dec
insl
outsb
jmp
push
inc
bound
mov
add
pop
hlt
ja
mov
xor
cmp
in
cmp
jmp
pop
adc
sub
sbb
daa
loopne
cli
cmp
gs
push
popf
popa
test
jecxz
mov
imul
jmp
mov
lods
jge
jo
es
jge
mov
sub
and
mov
mov
sbbl
sbbl
mov
push
or
daa
inc
inc
sub
pop
jbe
push
cmp
jg
or
aad
push
mov
incl
and
add
aas
addl
in
xchg
pop
dec
or
mov
or
pushf
xchg
call
mov
push
adc
jg
lds
movsl
filds
je
push
cmp
or
stc
add
adc
int3
jmp
mov
rorb
scas
add
aad
mov
out
push
fmuls
mov
ja
addr16
movsl
cmp
das
xor
add
jg
or
clc
in
add
push
or
push
or
and
dec
arpl
jg
popf
pop
or
scas
arpl
loop
add
inc
xchg
ljmp
mov
fmull
cmc
xor
jl
pop
pop
xor
loopne
jmp
mov
popf
jne
lahf
pop
mov
addl
sub
mov
mov
push
ja
scas
push
and
into
fisttps
rcrl
in
sbbl
adc
xor
loop
sub
pop
add
inc
loope
inc
fdivrl
jp
and
xor
sub
sub
and
sub
push
mov
and
dec
jmp
xor
mov
cmp
add
cmp
inc
and
enter
daa
les
mov
in
push
sub
sbb
insl
xchg
xor
sar
or
sbb
scas
mov
aaa
arpl
ret
insl
adc
gs
cmp
pusha
addb
jae
push
dec
cli
add
test
ret
idiv
clc
pusha
das
push
jecxz
pop
sub
ljmp
cli
cmp
sbb
rcrl
lea
sub
scas
add
fucomp
mov
or
sbb
adc
or
push
sarl
andb
js
out
xor
sbb
outsl
movsl
dec
inc
fiaddl
mov
enter
xchg
rep
mov
pop
shl
es
aaa
xchg
sub
mov
in
pop
pop
dec
add
mov
jmp
mov
inc
pop
push
sarb
iret
pop
mov
or
call
cmp
xor
pop
pushf
mov
out
pop
cmpsb
sub
mov
aam
scas
ud1
push
dec
cli
pushf
mov
in
cmp
stos
add
jo
loop
negl
test
popf
fwait
mov
sub
lret
add
pop
dec
and
cmc
loop
stc
movb
movsb
push
pop
sbb
lahf
push
pushf
mov
fildll
inc
sbb
dec
call
pop
sub
lds
in
insl
iret
mov
inc
jg
rclb
mov
fidivrs
and
lcall
stc
pusha
cmpsb
fistl
into
adc
ret
xchg
mov
push
sub
lock
daa
out
fstpt
and
push
popf
pop
imul
lret
mov
arpl
mov
not
sbb
add
xchg
mov
pop
push
adc
lods
adc
rcll
adc
jle
cmp
jmp
mov
neg
mov
jle
mov
cmp
xor
addl
push
or
dec
or
push
add
stc
mov
pop
cs
dec
dec
icebp
dec
fmull
out
cld
add
add
in
add
imul
daa
xchg
push
sub
mov
hlt
mov
xchg
adc
push
sub
dec
xchg
shr
sbb
inc
sub
stc
fsubl
lock
addb
or
jmp
rorl
out
sbb
les
inc
adc
ljmp
lahf
cltd
jne
rorl
pop
xchg
push
cmpsb
rcr
or
cltd
push
ds
inc
cli
in
sbb
int
movsb
sub
dec
jp
push
sbb
adc
cmp
pop
push
gs
cmp
inc
pop
dec
jmp
daa
jne
add
rcrb
sti
xchg
cli
push
pop
xor
dec
jl
nop
js
pop
pop
call
jle
daa
sbb
das
pop
sub
jb
adc
testl
cmp
rol
call
jg
int3
jge
add
xor
popf
jl
cltd
pop
mov
sbb
add
shl
sub
push
add
lds
push
jp
push
xor
aad
pusha
push
xchg
inc
cmp
push
mov
in
in
xchg
mov
pop
fisubrs
in
sub
pop
adc
mov
rclb
insl
adc
int
add
sbb
rol
test
mov
xchg
scas
mov
pop
mov
stc
mov
fcomi
dec
jge
xchg
ds
mov
jmp
and
hlt
and
jp
dec
ds
xchg
popl
insb
add
sub
push
pop
mov
das
sub
outsl
xchg
mov
sbb
jmp
in
and
inc
jle
out
imul
hlt
es
loope
mov
testb
ds
in
jl
mov
lea
push
xor
jmp
xlat
adc
mov
test
call
lret
xchg
jo
loopne
pop
sub
pop
jmp
aas
shl
mov
adc
js
pop
xchg
adc
jmp
push
imul
sbb
jmp
mov
sub
pop
or
cmpsl
insl
iret
add
inc
and
inc
in
xchg
dec
cmp
mov
and
cwtl
rcll
and
loopne
mov
jmp
pop
cmp
xor
add
imul
pop
mov
notb
push
lea
stos
ja
scas
aam
mov
add
add
test
xlat
scas
mov
pop
mov
data16
add
jno
pusha
xchg
icebp
pop
xchg
aam
add
cmp
dec
add
imulb
jo
fstpt
and
inc
fadds
mov
loope
shll
js
push
push
dec
add
add
adc
sub
pop
cmp
jmp
push
clc
sub
int
loop
mul
testb
cld
popa
iret
xor
push
scas
pop
addb
xor
loop
sub
test
mov
mov
mov
jge
sub
push
and
aam
and
or
orb
mov
push
sub
push
jns
jnp
xchg
pop
lret
adc
jmp
dec
ret
ss
js
cmpb
adc
add
push
adc
testb
add
mov
dec
stos
and
xchg
stos
pop
sub
mov
rorb
jnp
std
pop
push
push
push
and
or
cmp
mov
add
inc
sbb
add
js
mov
sub
mov
das
jp
push
movsb
inc
cs
test
pop
ret
pop
fdivrs
dec
pop
and
jmp
outsb
xchg
mov
cmp
xor
adc
icebp
mov
pop
add
xor
lds
push
cmpsl
cmp
xor
or
mov
ret
lcall
pop
dec
jmp
adc
inc
outsl
jecxz
mov
ret
adc
scas
adc
js
and
ja
add
rcrb
dec
xor
pop
xchg
fldl
test
das
pop
jno
add
jmp
sub
test
in
ret
mov
and
sbb
push
mov
rclb
imul
fs
or
jl
loopne
dec
jns
cwtl
shrb
pop
cld
or
rolb
and
push
push
xchg
fldt
outsb
jne
mov
mov
add
push
aam
int3
pop
pop
inc
pop
mov
mov
enter
push
enter
mov
push
or
pop
push
or
cmp
add
mov
fsub
cmpsb
cs
outsl
loope
nop
ret
enter
pop
mov
cmp
or
push
add
pop
cmp
add
addr16
stos
sub
in
inc
add
std
nop
add
iret
jnp
iret
push
cmp
dec
loop
das
dec
sub
or
adc
pop
add
fs
push
inc
leave
inc
movsl
iret
jg
mov
imul
cli
imul
in
add
cmp
inc
sub
aam
or
push
push
lahf
add
test
ror
mov
lods
mov
push
ret
movsb
out
adc
dec
push
in
or
fcoml
add
or
add
bound
jmp
sbb
mov
icebp
jle
pop
push
xchg
loope
mov
pop
dec
mov
mov
lods
hlt
cmp
fdivr
add
rorb
jmp
adc
insb
in
adc
mov
rolb
dec
or
adc
mov
and
add
les
add
or
xchg
cmp
das
pop
daa
movq
shr
lock
mov
sub
call
adc
ja
mov
std
mov
mov
jo
pop
lret
xchg
mov
or
mov
adcb
ljmp
add
rorb
push
loopne
clc
jmp
xor
add
rcrl
rol
sarb
das
pop
push
cli
mov
dec
jmp
frstor
rcrl
nop
notl
cmp
pop
iret
pusha
sub
jl
ds
adc
pop
mov
push
loopne
mov
daa
cmc
jge
lea
or
push
out
xor
lret
pop
push
push
test
cmc
lret
cmpsl
repz
int
jno
imul
or
adc
in
scas
push
ljmp
sbb
scas
sub
pop
mov
pop
outsb
fisubl
jbe
jno
cmp
sbb
pop
in
add
and
dec
and
xor
js
adc
sub
les
push
mov
xor
cwtl
or
and
neg
push
movzwl
out
and
jb
xchg
add
jmp
out
stos
and
adc
ror
mov
pusha
add
xor
mov
fucomi
lcall
int
jp
or
lret
mov
dec
aas
xorl
fisubl
or
test
leave
sbb
push
pop
lcall
push
outsl
arpl
cli
sub
leave
or
shrb
int
pop
xor
mov
cmpb
mov
in
mov
sbb
shlb
ret
sub
fnsave
push
or
ds
add
int3
or
lock
ds
ljmp
or
push
and
jmp
pop
lea
or
pop
push
xchg
je
or
into
in
mov
icebp
pop
jg
fiadds
aad
cmp
adcb
cld
add
stc
fidivrl
xor
decl
push
es
fldl
in
loop
lret
gs
push
mov
xor
xchg
bnd
or
dec
or
lret
mov
test
push
mov
clc
arpl
loope
cmp
cmp
cli
cmp
das
add
and
adc
shr
adc
dec
cmp
testl
jmp
sbb
in
mov
or
inc
dec
xchg
push
mov
test
in
cmp
adc
jmp
inc
mov
xor
or
les
or
daa
dec
mov
xor
cld
pop
add
sub
jne
pop
mov
jmp
adc
pop
aas
hlt
xor
add
sbb
negl
arpl
xchg
mov
ss
xchg
stos
add
sbb
inc
push
into
adc
and
scas
xor
adc
or
push
add
das
cld
scas
pop
inc
lock
dec
mov
mov
mov
add
fs
jmp
lds
jae
add
mov
adc
cs
push
dec
add
or
cmc
mov
rclb
in
adc
cli
pop
inc
xor
sub
bound
jmp
sti
xor
repz
ret
stc
pop
add
xor
sbb
mov
sahf
loop
adc
dec
int
xor
sbb
aam
push
jne
aam
in
test
mov
xchg
sub
outsb
sub
jne
sub
adc
cmp
jecxz
jmp
cmp
rclb
roll
mov
jb
inc
cmc
mov
rcrb
icebp
mov
outsl
in
lock
loopne
or
inc
dec
jmp
jbe
rcrl
cmpsb
push
push
call
push
test
div
sub
loopne
lods
pop
sub
out
in
push
inc
dec
adc
repz
ja
xchg
push
loope
jmp
shlb
leave
scas
sub
adcb
ljmp
insl
or
add
jp
inc
jg
inc
sub
bsr
out
xor
lahf
inc
mov
cs
insb
cmc
or
jae
pop
inc
add
push
pusha
xor
pop
push
mov
push
out
mov
sbb
xor
push
daa
jmp
flds
jnp
xchg
imul
dec
inc
push
cmpsl
dec
adc
or
insb
jmp
push
mov
xor
div
fmul
and
fldl2t
stos
add
push
mov
jns
dec
and
add
mov
pop
add
test
dec
mov
jp
jb
and
xchg
push
or
fdivrp
cli
push
data16
inc
add
pop
push
test
sub
rorb
push
sub
aaa
dec
jnp
adc
ljmp
mov
ljmp
cmpsb
lods
cld
loopne
sbb
or
popf
out
lock
outsb
lahf
or
js
adc
xor
sahf
add
imul
nop
and
cmpsl
jle
push
daa
jmp
aas
pop
stos
cmp
xlat
rcll
pop
pop
fmull
or
jge
xchg
pop
fsubrs
mov
inc
adc
add
dec
fdivrs
push
lock
pop
pop
mov
ret
sbb
add
pushf
sub
call
jmp
dec
adc
jg
movsl
push
movsl
mov
enter
sti
mov
pop
xlat
cli
and
push
or
popf
jo
das
xor
aad
or
adc
jns
and
push
xor
jp
mov
pushf
icebp
jl
pop
insb
incb
xor
outsb
or
shl
mov
sbb
adc
cmp
jmp
inc
mov
push
in
dec
jb
out
xchg
jmp
adc
clc
push
dec
mov
sub
mov
dec
inc
inc
pusha
mov
out
push
pop
sub
lock
xorb
or
adc
sub
xor
sub
stc
pop
outsl
inc
popa
clc
cmp
or
xorl
ficomps
pop
jg
jb
jne
push
push
lock
js
dec
adc
push
stos
loop
dec
loop
add
out
outsb
inc
pop
sub
dec
or
xor
insb
rep
pop
jno
es
cmp
add
mov
cmp
loopne
mov
iret
xor
fwait
arpl
jmp
push
pop
mov
pusha
les
or
pusha
loop
sbb
or
inc
xor
adc
daa
push
xor
adcl
pop
shrl
ss
xor
cmpb
lods
addr16
nop
xchg
ds
sub
pop
push
jmp
cmc
adc
sbbl
pop
movlps
mov
fadds
push
dec
hlt
pop
inc
jp
sub
jecxz
add
mov
xor
les
jmp
fistl
cltd
testl
aam
mov
or
imul
mov
repz
pop
cwtl
daa
xchg
dec
jb
shlb
add
call
or
adc
pop
ljmp
pop
icebp
pop
mov
inc
xchg
lret
sti
mov
xchg
mov
imul
and
stos
lret
xchg
xchg
bound
xor
add
cmp
jmp
xlat
adc
insb
xchg
lods
sbb
mov
adc
xor
jl
mov
lcall
hlt
cmc
pop
sub
mov
lock
push
add
mov
daa
pop
xor
cli
sarb
rcrl
jnp
adc
lods
xor
mov
pop
jmp
inc
jmp
movsl
loop
out
lahf
push
jo
xor
xchg
sub
and
cmp
cmp
addl
test
sbb
sub
add
lock
cmp
outsb
les
mov
jle
push
jg
arpl
xchg
dec
outsb
add
push
cld
jae
or
jmp
adc
into
std
aas
push
mov
aad
push
pop
pusha
fucomp
and
js
push
push
mov
stos
out
or
pop
and
scas
pop
jmp
cwtl
test
xor
mov
push
sbb
pop
and
xchg
jo
clc
dec
add
or
stc
pop
test
popf
insl
addr16
xchg
xchg
mov
push
xchg
or
loope
push
das
push
xor
ljmp
mov
add
push
and
pop
inc
jmp
mov
and
xchg
or
xor
in
push
aam
dec
repz
or
insb
or
orl
xchg
push
push
xchg
je
std
push
das
aaa
clc
mov
pop
push
in
movb
icebp
add
adc
add
push
pushf
xchg
add
sbb
xchg
xorb
xchg
aam
mov
scas
adc
sbb
mov
jbe
rcll
sarb
add
jmp
adc
mov
pop
adc
daa
jge
loope
mov
push
aam
add
add
dec
xor
fwait
scas
loope
mov
add
pop
imul
and
repnz
mov
cmpsb
dec
and
lods
hlt
rorb
and
les
ds
xor
jle
outsl
insb
xor
add
mov
mov
fldpi
sti
lods
mov
idiv
inc
insb
add
sahf
mov
xor
out
dec
sub
ret
lret
pop
push
mov
xor
addr16
add
pop
lock
imul
cmp
out
rcrl
fsubr
inc
adc
icebp
mov
cwtl
dec
sub
imul
sti
jmp
or
mov
push
pop
push
and
cmpsl
shr
sub
xchg
lods
mov
pop
sbb
and
mov
push
add
mov
xor
hlt
push
dec
dec
fyl2x
and
push
sbb
jmp
or
xor
add
ret
sbb
enter
pop
push
negb
xor
pop
or
rorl
nop
add
xor
out
mov
push
aas
mov
sbbl
dec
push
subl
mov
jb
or
or
out
add
adc
xor
jmp
aad
mov
add
dec
clc
adc
test
js
outsl
push
negl
adc
xor
and
rorb
sub
stos
sub
inc
inc
fildll
add
dec
sahf
inc
pop
cmp
repnz
add
mov
jmp
pusha
ficoms
not
cli
adc
addr16
sbb
ret
data16
jg
pop
pop
mov
mov
jmp
mov
and
in
jno
push
aas
ds
hlt
pop
xchg
pop
xchg
fidivrs
data16
in
pop
sarl
add
imull
or
add
lock
scas
js
jmp
add
and
js
divb
xchg
mov
jle
cs
mov
add
inc
mov
dec
jmp
pop
in
adcb
call
mov
push
lahf
sahf
add
pusha
jmp
mull
std
dec
pop
ds
sbb
popa
or
inc
xchg
iret
mov
xor
mov
sub
jno
inc
jp
or
repz
in
pop
push
pop
adc
add
fwait
and
rcrl
pop
clc
mov
out
add
push
push
pusha
js
push
icebp
adc
dec
mov
and
call
arpl
push
jo
pop
in
mov
ds
enter
not
in
lds
xor
fsub
test
inc
push
mov
sbb
cwtl
add
bound
add
push
inc
jmp
out
add
add
sbb
push
lds
jge
or
pop
retw
cmp
pop
inc
jmp
mov
movsb
shrl
mov
add
jp
cmp
and
xchg
mov
inc
inc
mov
popf
loop
adc
popa
xchg
mov
into
inc
in
shlb
dec
mov
pop
push
jmp
popf
stc
int
cmp
and
or
cvtdq2ps
and
mov
jle
lock
icebp
xchg
fmulp
stos
push
adc
sub
mov
lods
xchg
ja
inc
pop
cmp
leave
pop
jge
fldenv
cmpsb
dec
or
add
test
divb
bnd
mov
cmp
je,pt
push
xchg
jb
clc
jo
aaa
pusha
adc
outsb
adc
rcrb
lods
jnp
mov
addr16
lea
ja
xchg
fstpl
sahf
adc
test
arpl
push
push
sbb
jg
xchg
cli
imul
dec
pushf
adc
arpl
pop
sahf
call
addr16
inc
adc
mul
test
mov
test
cmpsl
mov
cmp
repz
inc
jp
cmpb
sbb
xlat
pusha
sbb
aaa
negl
popf
js
andb
insl
pop
jmp
mov
jp
fadds
pushw
pop
enter
add
out
int3
ss
pop
sbb
pop
pop
roll
in
mov
cmp
mov
jmp
je
leave
aad
lret
mov
adc
jno
jne
cmpsb
orl
inc
call
adc
aam
aas
rorl
jmp
pop
cli
arpl
jno
push
push
pusha
test
lret
lcall
push
and
ret
fstl
xchg
cli
sbb
out
cmpsb
mov
out
popf
fwait
and
fs
mov
add
fwait
inc
jl
add
jns
pop
push
mov
xchg
cmpsb
loopne
sbb
or
inc
sahf
and
sub
add
cmpsl
pop
xchg
sbb
out
shrl
jmp
and
jne
clc
or
mov
loopne
pushf
dec
push
mov
sbb
ret
sub
out
mov
adc
or
cmp
int3
aam
xchg
bound
jno
push
adc
jle
loope
add
mov
xor
aas
repz
xchg
lret
push
pop
lcall
push
xchg
jmp
psubsw
sub
dec
scas
mov
jg
bound
mov
and
jae
aam
arpl
pusha
test
adc
adc
pop
les
mov
adc
mov
notl
js
pop
js
repnz
je
xor
add
sub
aam
and
and
sbb
jmp
fstl
and
mov
mov
or
dec
dec
jp
lahf
bound
pusha
pop
or
cli
not
aad
loop
insb
pop
ljmp
add
xor
or
sbb
or
and
add
xor
adcl
dec
mov
loop
pop
push
push
jl
inc
and
jo
add
dec
in
inc
jmp
lods
add
inc
or
cmp
les
ja
inc
adc
test
mov
mov
pusha
pop
or
inc
xchg
sbb
lret
inc
and
rorb
or
out
xor
sub
popf
jge
inc
rorb
adc
dec
into
push
xor
pop
mov
jmp
int3
add
dec
dec
les
dec
dec
movsb
jle
ljmp
push
rcrl
dec
jg
mov
dec
cld
das
mov
lret
sub
imul
aad
fistpll
adc
push
push
cli
push
mov
push
sbb
ss
fisttpll
insb
cmp
dec
inc
pop
push
faddl
loop
dec
mov
add
jbe
jmp
loopne
push
lock
add
add
mov
inc
adc
sub
pop
adc
jecxz
inc
fnstcw
push
dec
addl
jmp
aad
jg
fs
add
aas
sub
and
dec
pop
xlat
pop
mov
outsl
xor
inc
insb
add
pop
mov
pop
inc
mov
jp
mov
fimuls
test
add
sbb
ja
jbe
outsl
xchg
and
sbbb
mov
mov
sub
sub
cltd
addb
mov
not
call
mov
xchg
add
daa
and
testl
cmp
pusha
mov
jmp
push
push
push
das
jmp
inc
scas
jg
dec
roll
xor
out
and
sub
add
jmp
out
jl
cli
pop
sub
pop
aas
cwtl
fildl
test
jnp
pusha
add
xlat
xchg
cmp
and
lds
pop
cld
test
fs
adc
or
pop
pop
xor
cmc
jmp
mov
call
cmp
inc
xor
push
mov
or
xor
sub
jmp
sbb
cwtl
pop
mov
idivb
ja
jg
add
cmpsl
out
lahf
xchg
jl
pop
jb
xor
inc
ds
adc
icebp
lea
hlt
subb
arpl
pushaw
jno
or
inc
rolb
outsb
jl
mov
repnz
jmp
repnz
fadds
adc
jmp
adc
inc
pop
jbe
or
fdivl
out
or
or
adc
or
mov
push
or
adc
sub
fists
fxch
xchg
lods
stos
jge
xchg
adc
pop
shlb
sub
getsec
shr
inc
mov
add
jle
loop
cmp
lock
sbb
sbb
pop
bound
dec
inc
aaa
xor
add
fwait
add
hlt
test
pop
mov
and
nop
push
ret
push
das
jnp
cmp
je
pop
adc
in
push
ja
sub
fdivl
jnp
mulb
push
sbb
cli
rolb
adc
pop
pop
sub
mov
bnd
inc
push
insb
lcall
aam
adc
pop
sti
and
xchg
jns
inc
icebp
pusha
add
cmpsb
adc
add
fs
sbb
shlb
xchg
and
cwtl
pop
jb
pop
push
inc
out
adc
xchg
insb
incl
jmp
call
lret
clc
inc
fidivrl
movl
leave
cmp
mov
pop
cmp
jmp
xchg
sub
jne
jno
dec
push
mov
outsb
pop
mov
add
cmp
jl
mov
sub
add
jb
pop
jmp
inc
mov
iret
aaa
rcl
aam
aam
inc
out
xor
in
lea
sbb
xchg
dec
fildll
push
add
in
adc
or
xchg
mov
mov
cmc
or
mov
adcb
pop
sbb
and
xorb
push
loop
inc
dec
mov
or
ret
retw
in
push
das
cmpsb
push
nop
pop
leave
pop
adc
test
out
daa
imul
dec
in
notb
dec
aaa
adc
pop
cmc
pop
mov
dec
idivb
mov
outsb
mov
aad
push
dec
shlb
call
xor
mov
daa
cmp
and
cmc
mov
sub
ficomps
cli
push
or
call
push
lods
ss
add
in
mov
push
add
or
jmp
cmp
adc
push
or
loop
jp
jge
test
pusha
outsb
and
sub
ret
or
popf
jle
dec
sbb
push
or
push
dec
test
test
mov
jmp
ret
fwait
add
nop
std
and
jbe
xchg
jmp
push
mov
jno
pusha
repz
mov
enter
leave
imul
jno
dec
or
adc
addb
stc
movsl
inc
jmp
aam
jae
cwtl
imul
outsb
repnz
xchg
or
loopne
add
pop
xor
jbe
daa
pop
and
loopne
push
out
mov
inc
nop
mov
jecxz
js
jmp
mov
sbb
js
imulb
inc
fldl
pop
push
mov
jns
sub
sbb
cmp
or
rorl
mov
lock
cmp
jmp
icebp
push
movsb
cli
into
addl
in
insb
adc
adc
add
shr
aad
mov
ds
dec
lds
pop
pop
add
sub
call
popa
js
test
or
sub
jmp
ret
and
jae
sbb
sbb
push
or
sub
jle
cmp
mov
mov
mov
or
call
jmp
roll
jns
jbe
jmp
pop
repz
and
push
push
mov
sub
push
test
mov
lret
xor
mov
fsts
push
pop
imul
jo
jo
pop
and
pop
jmp
mov
adc
cli
mov
push
push
lods
jne
sub
sub
xchg
inc
and
adc
scas
ss
push
inc
or
hlt
pop
call
shl
sub
pop
cmp
idiv
cmp
out
ret
ficomps
jmp
inc
lods
pop
rolb
dec
jmp
add
daa
pop
xlat
mov
daa
jle
or
pop
pop
cld
inc
mov
and
mov
jae
or
mov
sub
jno
jle
cmp
dec
adc
pop
and
fcoms
fs
inc
or
add
and
arpl
push
mov
mov
and
add
mov
lods
jbe
or
push
xchg
pop
xor
mov
cmp
xchg
or
mov
lock
pop
xlat
push
xchg
xchg
jmp
aad
ljmp
inc
test
xor
adcw
int3
repz
leave
or
push
mov
call
lds
mov
popa
rol
mov
mov
xor
adc
loope
inc
sbb
xorb
fdivr
iret
fs
mov
push
mov
fucompp
pop
xchg
mov
ret
and
arpl
sbb
jb
mov
or
in
pop
mov
jp
or
mov
mov
inc
or
fnstsw
imul
dec
pop
jmp
mov
xchg
decl
mov
push
inc
cltd
cmpsl
dec
xor
mov
add
out
adc
jmp
cwtl
adc
sbb
out
sahf
jge
fs
clc
xchg
daa
push
add
fisubrl
mov
daa
jmp
lds
ljmp
aad
xchg
pop
and
xlat
xlat
jo
mov
and
push
mov
pop
stos
dec
imul
fimuls
cwtl
adc
push
in
jge
cs
dec
inc
daa
not
xor
jp
add
jo
jmp
loope
sbb
leave
cld
adc
push
jbe
hlt
xchg
repz
cmp
das
cmp
dec
mov
mov
xor
jl
es
add
dec
popf
inc
cmc
addr16
cmp
adc
repz
and
push
daa
pop
daa
sahf
inc
fsubrl
stc
pop
out
xor
adc
shlb
jb
xlat
add
int
inc
mov
fldl
push
fwait
and
inc
mov
movsb
icebp
or
loopne
pop
jmp
hlt
push
sub
mov
mov
push
xor
imul
inc
addl
inc
sbb
cmp
jne
xchg
inc
and
dec
and
bound
stos
mov
adc
pop
and
inc
add
or
jle
jo
fs
test
fmulp
inc
sub
push
xor
mov
mov
inc
pop
dec
incb
mov
mov
push
sti
jle
sahf
out
dec
and
jne
add
in
addb
push
or
push
or
enter
shrb
cwtl
or
cmp
dec
movsl
push
shl
xchg
into
fldl
das
jg
insb
push
push
add
jecxz
sbb
add
or
dec
jp
out
fstps
add
test
inc
jmp
aam
add
sub
jbe
fcomip
or
xchg
xlat
sarl
mov
or
pop
pop
int3
xchg
dec
loope
cs
cmp
cmp
sbb
and
jecxz
dec
pusha
xchg
jo
mov
inc
sub
mov
rorl
jle
stos
cmp
imul
jbe
adc
or
or
pop
push
pop
and
jns
addb
lock
mov
je
push
test
jecxz
les
lcall
loopne
fsubrs
xor
xor
lea
push
pop
pop
rcrb
or
cli
add
fiadds
dec
sub
sub
dec
jne
enter
loop
push
out
cld
cmpsl
mov
enter
adc
ret
push
add
dec
push
enter
bound
jmp
imul
push
mov
xorl
inc
push
addr16
adc
frstor
sub
push
shrl
jmp
add
sar
or
imul
sub
lock
mov
roll
jmp
jmp
and
pop
push
mov
lods
sbb
pop
push
mov
mov
push
mov
leave
fistpll
cmp
sub
stos
leave
mov
insl
xchg
ds
fmuls
jmp
roll
ljmp
inc
or
addb
ds
adc
mov
mov
push
pop
lds
pop
rolb
add
inc
add
xlat
pop
xchg
or
sbb
ss
orb
xchg
mov
push
insb
sub
pop
xchg
push
add
xor
add
out
xlat
inc
sbb
test
jnp
in
testb
pop
ret
push
mov
filds
int3
ret
adcl
lret
into
mov
adc
fucomip
out
xchg
lods
push
push
test
pop
cli
insb
adc
outsl
dec
pop
push
cmpsb
dec
xchg
rclb
adc
or
nop
pop
ds
scas
outsl
mov
push
scas
imul
decb
test
mov
push
dec
mov
sub
cmp
mov
cmp
cmp
inc
push
adc
or
dec
inc
enter
pop
je
adcb
pop
pop
bound
xchg
mov
or
jmp
sub
or
push
jmp
push
pop
xor
pushf
xchg
xor
push
add
xchg
pop
in
or
testb
in
xlat
push
sub
inc
adc
ja
jg
mov
cmc
add
push
adc
mov
pop
xchg
sbb
cmc
inc
inc
mov
ja
cmp
push
popf
enter
mov
lods
mov
sbb
int
lret
lds
lock
jne
and
sbb
jb
rclb
daa
jne,pn
and
dec
cmp
das
movsb
outsl
mov
xchg
jmp
mov
enter
gs
sub
mov
outsl
icebp
add
stc
leave
iret
out
push
inc
mov
lock
xchg
or
push
push
jecxz
test
shrl
pop
bound
inc
cld
and
out
imul
push
push
sbb
jbe
xor
cmp
mov
and
aaa
add
inc
inc
flds
jb
add
stos
shrb
pop
push
add
fldenv
clc
jne
sbb
shlb
scas
dec
sti
or
das
gs
mov
mov
or
test
push
aam
cwtl
cltd
push
jae
notl
or
inc
test
and
mov
sub
test
pop
popa
dec
je
inc
push
add
pop
add
outsl
jp
dec
ret
add
outsl
or
dec
or
xchg
loop
pop
shll
mov
not
xorb
hlt
pop
imul
add
xor
ret
jo
ret
push
xor
repnz
lods
pop
add
fincstp
nop
paddq
popf
sahf
rcrb
sub
push
sbb
push
mov
popf
inc
add
test
mov
pushf
ss
or
sub
addb
pusha
jns
push
test
ficompl
xor
jns
lret
sub
add
pop
jno
xor
ja
jge
jne
fcmovb
pushl
jmp
dec
cltd
outsl
cmp
adcb
push
cmc
ret
and
cmp
jne
push
cmp
cli
adc
pop
das
mov
or
out
pop
cmc
dec
pop
stc
bound
mov
std
sbb
push
pushf
nop
daa
jnp
hlt
push
inc
loop
dec
cmp
sub
mov
sar
ret
inc
or
or
xor
jge
adc
aas
dec
adcl
out
or
sub
lret
cmp
mov
sub
jmp
scas
adc
add
mov
mov
fmull
or
cmp
sub
stos
inc
sbb
les
sbb
cmp
jge
jge
fidivs
sar
shrl
pop
lods
xchg
pushf
sub
mov
pusha
inc
mov
sti
add
pop
mov
xlat
adc
test
add
push
inc
popf
in
push
js
or
xor
jo
mov
sbbb
les
dec
ljmp
mov
add
xor
decl
sbb
fisubrs
inc
shr
add
dec
test
add
cwtl
cmp
fs
push
dec
rcrb
mov
mov
xor
sub
rcr
inc
jmp
dec
xchg
xor
xor
shl
push
das
ljmp
push
xchg
add
dec
sub
add
outsl
sbbl
push
push
cwtl
inc
pop
sbb
in
mov
xor
mov
faddp
add
lret
popa
shlb
sub
mov
pop
mov
mov
jnp
sub
pop
sbb
push
or
mov
fbld
pusha
add
and
xor
mov
adc
jge
cmpsl
or
dec
jg
inc
xchg
call
xor
jne
mov
push
outsb
cmp
cmp
adc
movsb
or
xor
dec
popa
xchg
das
jge
out
adc
aad
push
das
shrl
cwtl
xchg
fs
sub
popa
inc
adc
and
les
shl
mov
lcall
mov
jns
nop
and
pop
xchg
add
mov
or
jecxz
call
pop
jmp
mov
xchg
mov
pop
push
dec
mov
enter
and
leave
ds
add
loope
dec
xchg
adc
xor
and
cs
popa
and
aam
add
nopl
cmp
leave
add
pop
add
sbb
xor
xlat
stos
movsl
je
pop
scas
inc
add
dec
loope
scas
xor
outsl
fwait
neg
jmp
imul
rorl
push
out
jp
cs
or
push
stos
rolb
xor
in
aas
push
bound
je
fs
push
jmp
mov
cmp
sub
daa
ja
mov
jmp
outsl
test
jecxz
imul
and
add
ja
inc
add
or
fmuls
jmp
push
ja
into
shrl
add
mov
cmc
adc
loopne
decb
cmp
mov
add
push
sub
shr
out
and
or
push
push
fucomi
flds
fstpl
mov
inc
call
hlt
pop
xchg
mov
xor
cmpb
test
add
or
sub
dec
outsb
std
pushf
inc
or
cmpsl
add
cld
jne
shr
ja
and
xchg
mov
test
aas
mov
adc
dec
push
test
fisttpl
lret
sub
lret
push
stc
pusha
add
dec
sub
or
mov
or
or
sbb
jmp
mov
rolb
mov
xchg
shrb
inc
std
scas
inc
add
xlat
xor
pop
cmp
or
mov
mov
lods
inc
movsb
mulb
pop
fisubs
scas
rcr
les
and
pop
add
and
popa
shrb
dec
loop
add
adc
mov
int3
scas
rcll
inc
add
xchg
pop
jecxz
cmpsl
fisttps
lods
lea
add
into
cs
pop
pop
pop
bound
pop
xlat
adc
out
adc
pop
mov
rorl
std
push
cld
out
popf
shrl
sub
pop
add
jp
test
jne
push
inc
lahf
outsl
daa
xor
stos
js
inc
popf
loopne
mov
add
pop
dec
and
aad
mov
inc
int
pop
pop
pop
and
xchg
push
mov
inc
fwait
movd
insb
ss
pop
inc
test
stc
pop
aas
rclb
or
pop
sbb
adc
mov
ret
push
out
push
pop
add
inc
xor
pop
pop
lcall
xlat
das
mov
sti
cmp
or
jmp
mov
inc
nop
jb
fldl
adc
push
test
xor
out
xchg
decb
jle
push
sbb
xchg
gs
push
dec
scas
arpl
inc
pop
stos
or
lods
push
lret
adc
xor
xorb
sbb
fs
scas
rorl
mov
in
pusha
daa
pop
add
sbb
sbb
push
xorb
lock
adc
and
jle
or
xor
jns
or
adc
add
or
negb
jmp
addr16
pop
dec
lock
mov
leave
testl
or
jne
inc
ret
xor
cmc
mov
in
mov
sbb
push
xor
jmp
inc
mov
jp
xlat
push
add
data16
sbb
inc
add
pop
jnp
xorl
test
out
or
cmp
pop
in
push
hlt
mov
jno
out
cs
roll
addl
inc
jmp
sahf
lods
lret
xchg
lods
push
je
out
lods
test
insb
test
jg
sbb
out
mov
neg
jmp
cli
je
test
sub
mov
cltd
jl
dec
clc
into
mov
adc
and
push
inc
sbb
sbb
jae
data16
mov
scas
pop
jg
mov
adc
test
sti
int3
in
xor
ljmp
cli
inc
jnp
mov
xor
icebp
sbb
adc
adc
jns
push
dec
pop
pushf
cmc
or
lret
dec
xor
sarb
xchg
push
frstor
in
mov
hlt
add
mov
and
mov
mov
inc
jmp
add
bound
adc
ljmp
dec
mov
lcall
push
xor
push
push
orb
jmp
ret
decb
fbstp
je
sahf
ljmp
mov
lea
daa
jns
inc
xchg
inc
push
call
push
mov
stos
sub
imul
push
sbb
jg
dec
sbb
repnz
or
jle
sub
enter
add
hlt
and
fwait
push
adc
sub
jno
cs
adc
inc
ficoml
pop
test
adcb
push
or
adc
cli
dec
out
adc
dec
das
push
jle
fdivl
and
add
jae
lahf
adc
rcr
jo
fwait
repz
adc
or
mov
cmpsl
add
jmp
ljmp
leave
aam
es
cmp
jno
mov
cs
addr16
sub
clc
fcom
daa
and
xor
push
es
pop
or
stc
jae
or
push
cwtl
sbb
add
sbb
fcomps
inc
icebp
cltd
js
mov
dec
mov
pop
xor
and
cmpl
test
sbb
cmp
add
push
cld
add
test
adc
mov
xchg
clc
sar
xchg
xchg
xor
in
pop
pop
lret
out
jne
outsb
movsb
xchg
adc
cmpsl
ret
out
push
add
mov
push
nop
iret
mov
and
pop
push
gs
mov
push
and
or
movsb
hlt
mov
cmp
and
push
ljmp
div
jb
das
jmp
das
andb
jmp
jmp
mov
jmp
push
add
sub
shr
repnz
jg
lds
aas
sbb
push
or
enter
xlat
mov
lds
jbe
cli
loope
pop
mov
or
in
add
sub
and
or
insl
rcrb
add
loopne
cltd
dec
orb
xchg
and
push
orb
mov
jge
incb
push
pop
adcb
pop
sbb
and
add
incl
gs
int3
push
pusha
cmp
neg
push
cmpl
sub
sub
xor
add
dec
sbb
dec
in
xchg
or
in
cli
pop
inc
repnz
adc
fidivrl
mov
lcall
dec
xor
cmp
adc
adc
mov
pop
push
iret
cmp
sti
add
fsubr
xchg
xchg
or
rclb
mov
jmp
dec
pop
cltd
cmpsb
or
push
push
in
jbe
sub
jne
punpckhbw
inc
dec
jmp
out
shrb
fisttps
pop
stos
pushf
test
pop
mul
push
or
dec
cmp
and
sbb
sub
and
cmpb
xor
push
push
imul
pop
pop
fisttpl
cwtl
pop
dec
fld
sub
push
sbb
add
or
inc
xchg
sar
jmp
dec
neg
cwtl
and
rorb
or
jae
lock
mov
inc
dec
jp
mulb
mov
mov
es
adc
inc
jmp
inc
pop
jmp
ds
mov
aad
jnp
orps
mov
loope
push
xchg
outsl
jo
push
xorl
stc
inc
lock
pop
or
mov
sarl
jle
in
jne
ds
sbb
or
sar
cltd
xor
jecxz
cmp
mov
jl
or
ja
ja
jno
fsubs
into
push
jne
dec
notl
jp
pop
mov
je
jg
es
push
cmp
or
xlat
add
add
pushf
sarl
loop
push
push
dec
imull
dec
arpl
lret
sub
mov
pop
jne
mov
mov
xor
add
sti
jo
adc
sbb
push
sub
hlt
push
inc
pop
xor
add
mov
xorps
dec
xor
pop
jmp
jp
mov
push
adc
xor
sti
mov
push
out
shrl
and
sti
nop
push
jmp
dec
mul
add
loopne
jmp
addb
in
fcomps
mov
stos
das
mov
mov
std
test
or
mov
cmp
rcll
mov
pop
aad
mov
nop
mov
xor
mov
into
inc
popa
adc
mov
rorb
int3
jmp
adc
push
or
adc
mov
pop
xor
fnsave
enter
pop
decb
sub
bound
sbbl
pop
out
repnz
add
aad
in
out
push
sub
cmp
dec
dec
loop
push
fwait
jnp
add
push
push
adcl
and
push
mov
shl
cmp
fadds
pop
addb
pusha
xadd
push
rorl
push
mov
dec
pop
fs
stos
adc
inc
adc
push
nop
push
xchg
jge
adc
neg
scas
testb
add
cmpl
jmp
sub
ja
imul
add
inc
cltd
push
inc
test
or
jno
jmp
push
mov
bound
stc
mov
inc
mov
mov
shr
pop
xor
add
and
and
adcl
and
ret
and
call
mov
scas
dec
arpl
adc
add
std
imulb
enter
loope
in
add
popf
add
in
pusha
cmc
push
or
out
dec
cmpl
push
int3
add
mov
jae
push
dec
aam
push
lock
sub
repz
jmp
incb
jl
inc
sub
bnd
xchg
jg
mov
dec
das
out
sub
leave
adc
ds
outsl
insb
adc
call
sbb
dec
into
test
scas
cmp
push
adc
xchg
sti
push
cmp
mov
sub
inc
int
jb
cltd
pop
test
mov
jnp
jp
inc
push
popf
xor
jmp
push
mov
jo
dec
orl
mov
cli
or
jle
cmp
insb
push
ja
adc
imul
sub
jge
out
dec
popl
or
xchg
test
arpl
dec
adcl
jbe
lahf
dec
pop
lods
hlt
test
dec
scas
mov
shll
cli
sub
outsl
adc
repz
in
cmpsb
test
and
jmp
fmul
adc
lahf
scas
adc
push
cmpsl
test
or
adc
daa
aam
jns
das
test
loop
pop
sub
cltd
bound
or
adc
push
push
xor
out
dec
add
pop
std
xor
jecxz
test
push
pop
lds
in
je
or
jle
bound
inc
daa
cwtl
xlat
adc
add
stos
lret
inc
cmp
push
mov
jmp
pop
push
dec
aas
mov
push
pushl
inc
scas
add
inc
addb
cmp
jbe
push
ja
enter
mov
push
ficompl
push
popa
je
xchg
add
pop
push
mov
fs
add
mov
movsl
leave
popf
inc
mov
push
pop
mov
adc
add
jp
lock
xchg
andb
std
xchg
and
xchg
in
sbb
cwtl
jne
je
mov
fs
out
aas
es
dec
ljmp
daa
add
ret
cmp
adc
fsub
cltd
sub
daa
add
mov
nop
rorl
movsb
add
or
push
xchg
sbb
xchg
jne
pop
add
mov
loopne
movsl
xlat
or
adc
or
mov
mov
or
repz
das
adc
cmc
mov
xor
popa
push
adc
xor
pusha
lds
out
jmp
scas
mov
xchg
jp
rclb
sub
jne
ds
pop
or
or
add
sub
push
fstpl
jg
test
inc
xor
lahf
mov
fistpl
push
push
pop
add
pop
fdivl
int
les
rcrb
add
sbb
loopne
push
sub
push
sub
adc
mov
push
xchg
aad
cltd
and
jne
lahf
cmp
and
in
add
mov
sti
inc
sbbl
or
dec
mov
adc
es
mov
sub
sbb
sub
dec
pop
jle
adc
adc
icebp
sbb
push
pop
xor
add
dec
push
in
sbb
lods
stos
pop
fsub
lods
lods
and
inc
dec
pop
shll
sub
rorl
sbb
addr16
aam
pop
insb
cmpsb
push
and
and
or
or
inc
inc
cli
jbe
or
lret
mov
sahf
adc
or
lea
cltd
repnz
jmp
std
cmp
mov
dec
sbb
sti
rclb
popf
inc
lods
aaa
jg
pop
lods
jl
imul
add
push
xor
daa
pop
subb
nop
lock
pop
adc
loop
imulb
push
and
add
push
ja
je
push
pop
and
test
add
rcpps
enter
sbb
mov
sub
dec
lods
add
add
dec
popf
jo
lret
or
push
push
rcll
push
xchg
cmpb
mov
add
inc
add
fistpl
jnp
divps
xlat
push
repnz
jg
mov
sbb
mov
xchg
mov
mov
inc
in
jae
xchg
dec
cmp
shrl
pop
jns
push
mov
aad
inc
add
xlat
pop
jg
adc
jb
add
jg
or
mov
jmp
jge
sub
cwtl
popf
mov
or
sbbl
push
xchg
jbe
push
push
test
ja
adc
jne
jmp
pop
jns
jmp
ret
add
cmc
mov
xchg
mov
not
jne
inc
mov
stc
add
lcall
loope
mov
pop
jnp
cltd
test
sbbl
inc
or
scas
ret
lea
add
mov
inc
push
push
mov
dec
jmp
or
es
push
add
dec
sub
bound
lahf
cmp
xchg
dec
lds
jg
mov
and
jnp
or
cmc
inc
adc
mov
in
adc
gs
enter
neg
repnz
xchg
sub
bswap
sbb
mov
xor
loop
pop
jecxz
and
inc
and
roll
cli
popa
dec
push
sub
and
push
cmp
call
pop
es
pop
or
jge
or
inc
loope
push
loop
ds
rolb
cli
cmp
inc
aaa
cmp
add
add
pusha
pop
bnd
mov
sti
pop
shlb
cmp
fmull
movsb
jle
jmp
outsl
xchg
loopne
jmp
push
push
adc
xor
test
or
lods
das
add
xor
add
orb
or
pushf
jp
jae
cmp
std
sbb
out
push
cwtl
inc
repz
lret
jne
sbb
mov
aaa
dec
add
dec
fistps
sbb
ret
pushw
push
stc
lea
fcoms
add
icebp
pop
pop
dec
push
in
loope
scas
inc
cmp
rol
sbb
inc
mov
dec
popf
push
push
inc
mov
jbe
push
xchg
mov
xor
arpl
pop
xor
int3
iret
fidivs
neg
adc
test
sub
out
pop
and
fcmovb
xchg
push
jecxz
inc
or
or
mov
adc
mov
push
mov
pop
push
andb
pop
daa
shlb
shlb
or
jmp
mov
sub
pop
xor
es
push
ficoms
xor
xchg
fisubrs
mov
sub
popf
repz
arpl
xor
adc
pop
fimuls
mov
inc
jnp
jle
mov
cltd
clc
jecxz
nop
dec
or
jmp
cwtl
scas
or
inc
pop
pop
adc
xlat
sub
sbb
dec
cmp
mov
add
or
jmp
outsl
xchg
xor
jnp
and
push
popa
les
add
mov
out
add
add
mov
pop
cmpsl
cmp
ljmp
test
inc
jno
jge
jp
mov
jmp
cltd
mov
or
push
jmp
shll
inc
pop
mov
push
xchg
jge
jp
sub
push
cmp
pop
daa
repnz
adc
stos
shll
inc
repnz
inc
arpl
imul
push
aam
imul
pop
xor
push
jl
sbb
dec
lds
and
or
lahf
or
add
pop
sub
xor
sti
and
mov
popf
jg
rorb
add
jmp
and
shlb
push
lock
pop
bound
jnp
push
mov
add
lret
jae
xor
shll
jns
adc
xchg
enter
sbb
pop
out
and
dec
xchg
push
pop
out
sbb
leave
jmp
mov
lret
mov
push
iret
sub
lret
push
xor
mov
sub
pop
testb
ja
ja
mov
rcll
movsb
pop
pop
mov
add
ret
mov
cmp
in
cmc
repnz
dec
inc
loopne
cmp
cmp
cltd
and
out
dec
inc
bound
loop
or
add
and
call
or
xor
test
cmc
fidivrs
imul
inc
add
leave
imul
in
push
rorl
js
mov
and
inc
cli
jbe
jbe
pushf
push
js
mov
push
jns
dec
leave
cmpsl
xor
jnp
xchg
and
or
testb
shl
xchg
sbb
adc
or
notl
jle
sub
xchg
pushl
fists
mov
data16
adc
data16
push
jnp
add
cmpl
adc
enter
gs
neg
dec
inc
mov
dec
es
jne
add
mov
mov
jb
imul
push
scas
mov
pushf
adc
dec
push
xor
cmp
adc
adc
add
xchg
out
ret
push
adc
push
das
notl
sbb
pop
lods
jmp
aad
dec
sub
add
and
ss
adcl
mov
adc
out
mov
add
es
popf
leave
mov
jo
push
mov
or
ror
jl
pop
push
mov
add
outsl
and
dec
stos
leave
jg
mov
and
test
in
add
push
fldpi
cmpsl
or
push
sbb
negb
out
fcomp
lcall
daa
push
int
sahf
sbbb
add
fbstp
loope
std
stos
dec
das
mov
rol
mov
or
test
cmp
sub
add
dec
fwait
cs
push
pop
jnp
fcoms
push
decb
fwait
cmp
mov
pop
xchg
es
outsb
add
lret
sub
jns
and
mov
mov
cmp
xchg
pop
mov
cmpb
shll
or
push
jnp
jo
xor
push
arpl
jne
sbb
xor
pop
inc
mov
mov
jmp
xor
dec
loope
in
inc
movsl
jmp
cmp
lock
jle
iret
or
mov
imul
lods
xchg
adc
in
mov
or
repz
push
pop
stos
add
ret
lock
add
jmp
jecxz
pushl
push
push
loope
xchg
sub
mov
jecxz
in
aas
cmpsb
js
pop
in
inc
pop
das
add
in
add
jmp
scas
dec
scas
pop
jge
lret
push
inc
enter
hlt
orb
add
dec
lock
dec
or
mov
sub
xchg
mov
xchg
fdivrl
cmp
dec
mov
pop
data16
call
push
mov
adc
in
add
jmp
orl
lds
add
rcrb
insb
inc
pusha
push
xlat
gs
jge
loop
loop
push
push
mov
jle
mov
outsb
outsl
and
nop
xor
movsb
jnp
or
scas
mov
fwait
scas
push
out
test
enter
push
jle
mov
push
lret
adc
pop
cmp
xchg
nop
lock
adc
fcmovne
push
roll
imul
into
push
nop
inc
clc
jg
iret
jl
pop
pop
ficomps
cmc
cltd
dec
dec
pusha
or
std
je
seto
stc
jae
das
sub
adc
int
sub
or
pop
lock
mov
and
iret
imul
push
push
arpl
cltd
adc
mov
sub
mov
jbe
jle
je
ja
pop
dec
clc
out
mov
jl
pop
in
pmullw
xorb
out
pop
repnz
dec
sbb
inc
ja
mov
jp
inc
pop
mov
adc
and
jg
fstl
inc
or
nop
jmp
mov
pop
xor
lcall
inc
lea
lock
mov
pop
outsl
in
push
add
xor
add
sub
andb
push
adc
out
in
and
push
pop
inc
add
sbb
xor
sub
sar
leave
pop
mov
stc
push
pop
xchg
insb
pop
pop
out
cwtl
enter
xchg
lahf
inc
test
dec
pop
outsb
daa
jns
and
sub
or
cmpsl
pop
je
jb
in
imul
call
in
add
ljmp
dec
fs
testl
mov
jle
and
or
adc
fadds
dec
gs
leave
xor
push
leave
repz
in
cmp
mov
insb
in
xchg
jno
xchg
movsl
xlat
into
pusha
std
push
mov
mov
rorl
jae
js
cmp
pop
push
rolb
xchg
mov
mov
jp
sub
and
cmpsl
nop
fsubrp
xor
pand
sub
arpl
int
scas
push
imul
push
mov
or
int3
cmp
or
add
bound
dec
adc
inc
mov
xlat
pop
push
pop
addr16
mov
or
cmp
daa
sbb
and
jmp
aad
insl
leave
imul
pop
pop
das
jbe
in
pop
adc
stos
fdivrs
clc
clc
orb
xor
adc
xor
mov
sar
dec
mov
int
filds
je
rclb
pop
push
sarb
or
cmp
arpl
xchg
xchg
dec
pop
nop
sarb
dec
bound
xchg
push
add
jle
adc
sar
pushf
sub
dec
fimuls
fiadds
enter
xor
pop
and
add
jbe
add
in
push
inc
add
xor
repnz
adc
test
mov
sbb
mov
push
sub
rep
xchg
xchg
jle
pop
jge
xchg
sub
jae
inc
xchg
iret
rorb
push
adc
cmc
das
popa
dec
sub
jp
dec
shr
sub
icebp
pop
pop
iret
sbb
push
add
or
cs
add
aaa
adc
push
lahf
fistpll
jo
push
add
adc
pop
push
jl
or
sub
fistpll
or
or
test
xlat
jno
push
loope
sub
ret
push
dec
dec
add
xchg
lods
adc
inc
xchg
jge
ret
and
aad
or
movsl
fcoml
outsl
in
mov
jmp
ss
push
jge
test
add
fcompl
jmp
dec
movsl
mov
icebp
sub
sub
and
lds
call
sbb
sub
pop
jns
hlt
ret
push
mov
cmp
pop
push
pop
bound
idivl
push
dec
pop
jmp
insb
jbe
push
fnsave
inc
pop
clc
and
pop
cld
stos
jno
fadds
jecxz
xchg
nop
out
sub
push
push
out
loopne
out
sub
ret
xor
and
jmp
adc
rclb
push
sbb
cld
add
rolb
ljmp
lret
jno
mov
int
xor
and
inc
outsl
orl
daa
jmp
gs
sbb
rcrb
pop
not
out
push
int3
out
xor
inc
mov
out
test
shlb
pop
dec
js
xchg
add
and
or
or
or
cmp
add
add
das
inc
jmp
lock
adc
xchg
mov
push
mov
mov
mov
out
cmpsb
das
loopne
repnz
pop
in
loopne
cmp
scas
sbb
loopne
mov
movl
cwtl
cmpb
pop
xor
sub
or
data16
aas
pop
mov
pushf
add
or
add
nop
xor
push
test
push
add
rclb
push
jo
jp
pop
mov
ja
mov
pop
jae
in
add
sbb
pushf
rorl
fistpl
pop
lret
adc
jmp
sub
lock
lock
adc
and
dec
rclb
loop
push
jg
sub
jmp
cmc
adc
lahf
scas
mov
mov
mov
jecxz
mov
adc
xor
pop
divb
nop
pop
xor
mov
xchg
ljmp
incl
push
inc
push
sahf
aas
and
adc
gs
out
fidivrs
and
in
add
jbe
cmp
rcll
and
arpl
xchg
jae
ds
lret
scas
enter
nop
adc
loop
mov
inc
or
icebp
push
mov
mov
mov
add
fucomip
or
ficoms
scas
add
pop
adc
push
rcrb
inc
cli
jo
sub
adc
or
push
push
outsb
adc
pop
push
sub
xchg
cli
cmp
popl
add
mov
es
insl
das
jnp
clc
mov
pop
or
mov
cmpsb
cltd
pushf
jp
add
jg
inc
mov
shl
insb
xor
pop
mov
cmp
sub
fadd
pop
out
je
pop
jmp
in
add
add
mov
sbb
mov
lds
shr
or
push
adc
lods
dec
mov
add
pop
mov
adc
pop
xchg
loop
scas
icebp
jmp
dec
push
mov
sbb
icebp
out
aad
push
daa
xchg
cmp
repz
mov
and
push
add
jbe
dec
jle
imul
jo
cmp
push
xchg
mov
cs
in
jno
int3
sbb
jge
pusha
inc
add
jmp
subb
hlt
inc
sarl
pusha
mov
pop
cmp
mov
clc
or
cltd
add
outsl
or
sub
add
ds
push
push
xlat
cmp
lock
cmc
orb
subb
mov
lods
sub
pop
inc
adc
xchg
aas
xor
inc
push
lcall
and
pop
mov
sub
cmc
and
imul
jp
jne
js
ret
xchg
mov
daa
inc
adc
jmp
push
push
jl
ret
pop
je
jp
divl
mov
lds
and
rcrb
std
mov
adc
repnz
js
lahf
jl
loope
btr
mov
mov
mov
push
jno
loopne
cmp
addb
or
pop
popf
call
mov
jo
cmp
testl
stc
xchg
in
or
jmp
pop
movzbl
jmp
mov
les
push
push
ss
jmp
por
repnz
jp
xchg
xchg
jg
add
shll
imul
pop
pop
adc
ljmp
repnz
pop
pop
adc
xor
or
sub
add
lock
and
pop
cmc
js
and
sbb
lock
inc
int3
movsb
pop
push
bnd
pop
cmpsb
jmp
sub
sub
xlat
jno
inc
pop
sbb
and
stc
leave
and
add
jl
ljmp
inc
scas
dec
fdiv
cli
sbb
adc
jns
insb
ljmp
ljmp
lcall
pop
iret
repz
inc
jns
rcrb
and
lds
jmp
mov
and
subb
inc
fnsave
call
dec
fiadds
lods
outsb
push
movsl
rcrb
or
addr16
loopne
jg
cmp
xor
adcb
xor
in
push
and
shrl
jp
mov
stc
outsb
repnz
ret
sub
xchg
fisubrl
push
dec
inc
dec
dec
lock
fsubrs
and
dec
jle
arpl
adc
add
subb
testl
shr
test
cmpsl
orb
xlat
rcr
sahf
sbb
cmp
push
sub
movsb
nop
or
mov
sbb
push
or
push
lret
std
and
loopne
or
gs
inc
aad
sti
repz
lret
sub
pop
xchg
jo
jne
shrl
xchg
and
popf
push
andb
leave
xchg
cmp
add
aaa
mov
lods
cmp
add
into
jmp
sbb
clc
mov
mov
pop
dec
inc
js
push
enter
mov
and
jbe
mov
xor
jg
push
and
idivb
out
jmp
jecxz
sub
add
jno
not
jmp
inc
add
push
add
js
outsb
loopne
jne
or
add
sub
nop
cmp
dec
call
orb
pop
lock
inc
fwait
jae
jb
dec
inc
add
sbb
int
cmp
and
ljmp
adc
add
jl
jmp
push
jp
push
jmp
mov
and
aam
test
or
cmp
imul
ds
adc
and
pop
loope
push
xchg
imulb
jae
cmp
pop
xchg
cmpl
rclb
ret
pop
or
and
icebp
pop
popa
xor
dec
mov
cld
adc
xchg
mov
neg
and
sar
inc
lods
push
pop
or
xor
sbb
jmp
inc
add
cmp
or
inc
out
decb
or
shlb
jecxz
inc
scas
daa
mov
cmp
and
cs
popa
push
dec
add
call
jmp
pop
pusha
ljmp
add
dec
cs
pusha
test
imull
sbb
out
icebp
sti
dec
jmp
mov
pop
ja
pop
mov
jne
mov
push
mov
jbe
fs
pop
jmp
jmp
imul
stc
jl
std
push
xchg
test
pop
repnz
icebp
push
inc
adc
dec
and
leave
test
clc
mov
xchg
sbb
fimuls
xchg
lds
fs
daa
push
mov
xor
push
cmp
push
mov
jmp
pop
out
pop
pop
mov
xor
push
fsubs
xor
add
push
xchg
mov
nop
ljmp
arpl
sub
add
push
and
shr
pop
xor
and
arpl
cs
xchg
xchg
das
add
mov
jp,pt
aam
add
pop
mov
mov
adc
and
andl
je
jnp
pop
jmp
push
out
mov
pop
cli
and
insl
mov
dec
adc
xchg
xchg
mul
fisttps
pop
push
stos
jmp
sbb
inc
mov
cmp
xor
mov
cmpb
cmp
fdiv
adc
sub
sti
cmp
data16
movzwl
cltd
test
lock
cmc
mov
cmp
or
adc
sub
lods
mov
jge
or
and
inc
mov
stc
inc
cmc
sbb
jb
pop
stc
mov
loope
xor
xchg
std
add
xchg
jmp
out
pop
imul
pop
cmp
jmp
sbb
mov
not
add
cmp
daa
push
jne
push
addr16
test
push
addb
inc
pop
inc
adc
movsl
fstl
mov
push
dec
lods
inc
test
imul
add
or
dec
je
adc
stos
repnz
jne
sbb
or
stos
sar
lret
xchg
lahf
inc
inc
nop
les
or
xor
inc
inc
subl
sub
mov
ficoml
popf
jl
pop
lret
popf
lods
adc
push
pop
add
enter
pusha
mov
int
cmp
lock
dec
gs
mov
pop
inc
push
mov
mov
addl
lods
xchg
jle
stc
sahf
pop
pop
arpl
popf
xchg
jmp
cwtl
in
shrb
mov
lahf
in
mov
test
sar
jns
fidivrl
sub
jnp
imul
dec
mov
jge
xchg
out
les
mov
pslld
mov
shr
loopne
xchg
sbb
cwtl
fimuls
fdivs
jp
xchg
adc
sub
stc
orb
clc
push
jae
sub
add
or
add
pop
xchg
jle
loop
faddl
notl
shll
pop
shl
push
jnp
adc
and
pushf
mov
xor
jno
jle
cmp
xlat
xor
pop
cli
mov
inc
ds
adc
ror
jbe
jo
lds
mov
pusha
push
push
popf
aad
fdivrl
dec
das
insb
je
mov
and
mov
push
lret
pop
or
or
jne
enter
push
jae
lret
dec
dec
jecxz
dec
in
pushl
stc
inc
push
inc
icebp
dec
xor
cs
shll
jbe
mov
sub
loop
lcall
addr16
push
mov
push
xor
jae
es
daa
pop
call
pop
pop
imul
mov
xchg
sub
or
sub
push
push
pop
pop
fidivs
add
fs
inc
push
and
cmp
dec
lret
je
or
icebp
clc
push
jb
jp
or
mov
mov
push
push
pop
jnp
xchg
xchg
mov
sti
mov
adc
push
ds
xchg
mov
imul
push
rcrb
scas
mov
sub
pop
stc
fstpl
nop
lds
daa
jne
push
inc
add
sub
into
dec
scas
lret
pop
mov
dec
push
bound
mov
repz
dec
xchg
decl
rolb
push
lea
rcrl
fsubl
cmp
adc
add
inc
stc
xadd
push
sahf
aas
or
xor
insb
mov
test
mov
mov
sti
daa
push
pushf
insb
xchg
test
popa
stos
jb
jle
daa
aad
pop
sub
dec
sahf
push
and
lock
push
sbb
push
push
ds
jmp
push
popf
and
push
js
cmc
aas
loop
out
and
loop
sbb
pop
push
mov
dec
stc
sbb
call
test
dec
je
imul
lods
loopne
push
jmp
dec
scas
sti
dec
and
mov
fs
lret
jmp
mov
add
rolb
fimull
mov
das
xor
inc
cmp
jb
sbbl
sbb
xchg
pop
and
test
push
pop
orb
or
in
sub
sub
clc
shrb
mov
dec
mov
shll
pop
push
mov
pop
pop
mov
add
add
testl
lods
jb
insb
filds
lret
in
not
es
add
cmp
movlps
add
or
daa
dec
fdivr
dec
or
adc
xor
in
ret
or
shr
popa
arpl
test
and
jmp
or
jle
sbb
push
adc
pop
pop
add
cs
rorb
pop
xchg
dec
sbb
sub
or
shr
push
cmpsb
jne
aam
and
std
sbb
or
adc
push
aas
mov
mov
xor
pop
xor
out
dec
mov
fsts
shrl
cs
mov
ljmp
es
lahf
add
xor
roll
push
jg
jmp
pop
outsl
and
push
mov
mov
add
jg
adc
jmp
mov
jecxz
movsb
and
and
jno
inc
jmp
pop
pop
jmp
cmp
mov
inc
leave
push
gs
roll
mov
scas
add
sbb
cwtl
pop
mov
push
ja
push
push
jmp
mov
not
rolb
out
std
pop
loope
les
push
push
aas
pop
cli
ret
pop
shr
out
mov
mov
push
into
add
push
inc
jae
mov
ja
or
nop
inc
lock
ljmp
push
push
push
mov
faddl
pop
push
das
loop
and
call
and
mov
shll
push
dec
out
fadd
sbb
pop
ja
es
adc
mov
decl
aam
outsl
add
nop
ljmp
pusha
xchg
pusha
pop
imul
push
ja
lods
addr16
lds
out
adc
sbb
mov
imul
xchg
inc
out
mov
pushf
sub
adc
sub
pusha
sahf
jp
xor
push
or
sbb
ljmp
add
mov
or
fcoms
push
sbb
mov
push
mov
push
inc
sub
cli
repnz
xchg
xchg
rolb
push
mov
add
pop
add
jmp
push
add
sub
gs
into
hlt
movsb
adc
incl
std
pop
inc
icebp
jge
adc
push
hlt
mov
mov
inc
pop
and
inc
out
or
add
cmpsb
sub
add
addr16
dec
sti
insl
loope
inc
ficompl
cs
daa
fstl
mov
lock
lock
xchg
test
jmp
inc
cld
clc
sahf
lahf
inc
xor
sub
pop
bound
scas
or
ret
or
cmpsb
and
test
fwait
sub
mov
mov
add
sub
aaa
jmp
cmp
jnp
jg
sub
jecxz
adc
popa
loop
dec
mov
lahf
cmp
sti
pop
sub
adc
xor
adc
inc
push
dec
sbb
and
sbb
inc
dec
mov
out
inc
pop
stc
pushf
les
jmp
sub
mov
fidivl
test
icebp
cmp
jmp
jp
dec
iret
pushl
or
inc
push
test
scas
mov
pop
popf
pop
sbb
dec
call
sub
pushf
dec
inc
mov
and
dec
and
inc
jg
fnstenv
xor
icebp
pop
mov
pop
pop
pop
add
xor
sub
mov
xchg
jp
add
jle
push
and
lea
add
sub
loope
adc
adc
xor
adc
push
add
scas
lock
call
fdivr
or
in
jb
dec
mov
cld
or
add
jg
push
rcrb
stos
fstpl
jmp
xorb
sub
push
or
clc
push
orl
lret
loope
and
lods
push
xor
push
cwtl
ja
int
inc
xchg
sbb
adcb
xlat
push
das
jmp
xchg
dec
jmp
add
xor
sbb
lcall
movsl
pop
cmp
fcmovnb
jecxz
sti
imul
adc
add
shll
rorb
push
pop
ljmp
dec
mov
sub
lahf
std
js
lahf
mov
push
or
sahf
mov
pop
mov
add
cmp
adcb
inc
imul
testl
pushl
jnp
mov
mov
inc
xlat
jnp
les
mov
mov
cmc
fildl
jg
subl
jmp
js
jg
mov
sub
xlat
js
dec
add
xor
lcall
bound
cmp
mov
xor
popa
sbb
jl
movsb
jmp
sbb
mov
repnz
sub
push
mov
leave
pop
xlat
jae
inc
jmp
loop
cmpb
mov
and
fisttps
push
outsl
sbb
dec
out
sarb
push
lret
sbbb
push
lcall
sub
mov
xor
mov
add
sbb
pop
and
decb
in
lret
or
push
lods
add
js
fnsave
pop
xchg
pop
sub
rclb
jae
lds
cmpb
daa
sub
xchg
cmpsb
repnz
daa
enter
clc
and
pop
arpl
test
cmp
xchg
xor
ror
js
cmpl
add
pop
jecxz
push
mov
sbb
daa
ss
loopne,pt
sub
xchg
mov
dec
xchg
xrelease
sub
add
xor
adc
pop
inc
jge
jae
adc
insl
out
and
imull
popa
push
mov
mov
dec
jb
hlt
daa
cld
pop
out
dec
call
jne
mov
fs
mov
pop
jmp
and
sbb
and
rcrl
push
clc
clc
insl
or
push
push
add
mov
or
dec
icebp
jne
rcl
mov
mov
sub
adc
cmc
push
pop
adc
cmp
or
push
sbb
aad
orl
or
push
imul
not
add
sub
out
mov
add
js
insb
jne
insb
imull
or
jo
mov
or
sahf
inc
fnstenv
add
lds
xchg
bound
int
jmp
out
lret
movsb
mov
fdivrl
movsb
fiaddl
mov
mov
inc
sub
hlt
cmpsb
sahf
xor
adc
dec
fwait
or
dec
inc
dec
cs
mov
shlb
fldenv
jo
and
xchg
test
movsb
rclb
ret
je
or
inc
movsb
sahf
jmp
add
fidivrl
push
jp
dec
rorb
and
pop
int3
cmp
test
insl
dec
pop
pop
fcoms
dec
jge
aas
jle
leave
xchg
add
lods
sub
mov
or
bound
xor
or
in
cmp
pop
mov
sarb
in
cmpsl
adc
add
jg
or
fisttpll
test
orb
gs
pop
cltd
xchg
in
or
shlb
xchg
sub
fucom
sub
pop
filds
push
inc
xor
out
pop
push
sub
sbb
push
sub
inc
jle
and
dec
jns
lcall
xchg
pop
ret
add
dec
shl
and
out
cmp
push
test
sub
icebp
xchg
sub
or
or
push
and
or
in
out
pusha
test
or
add
scas
orl
xchg
xchg
xchg
cltd
ja
mov
mov
push
scas
cmp
inc
in
cmp
icebp
cmp
inc
lds
loop
aam
icebp
lds
lock
mov
jmp
and
fwait
cs
sti
or
pop
pusha
xlat
int
out
addr16
stc
ficoms
push
sub
pop
xchg
adc
out
test
loop
push
jecxz
adc
ret
cltd
mov
pop
test
adc
or
pop
out
sub
sbb
add
and
pop
icebp
jmp
iret
mov
inc
or
xchg
mov
sub
xchg
and
mov
push
insl
xchg
mov
in
jge
test
push
or
jb
mov
jo
dec
dec
aad
psadbw
and
insl
jb
pop
sub
flds
rol
pop
jp
mov
cmpsb
jmp
movsb
pop
call
sub
roll
push
push
mov
mov
mov
xor
enter
jnp
cs
pop
stos
push
sbb
dec
cmp
jae
push
dec
cld
testb
bnd
pop
pushw
sbb
or
fisubrs
mov
mov
jmp
or
pop
or
inc
data16
and
dec
pop
inc
or
xchg
inc
js
or
popfw
ds
movsl
jbe
inc
mov
push
sub
shlb
fsubrl
push
dec
pop
mov
lock
dec
add
mov
and
sbb
sub
imul
cmp
call
push
repnz
add
push
mov
sbb
xor
imul
mov
imul
xchg
hlt
incb
pop
cld
push
dec
push
push
sub
or
push
xchg
mov
jb
mov
and
sbb
je
cs
in
sub
jmp
fs
stc
out
out
or
dec
repnz
shrb
push
pop
and
js
fistpll
std
mov
push
fadds
mov
push
sub
dec
shll
pop
in
add
mov
sub
icebp
jp
scas
jp
insl
loopne
xchg
addl
inc
or
int3
cmp
pop
push
ja
mov
pop
ds
lds
mov
insl
adc
mov
push
pop
adc
ljmp
movb
dec
pop
pop
sub
xchg
adc
lret
sbb
cld
movsl
push
push
nop
add
jae
sarb
insb
sbb
or
ljmp
xchg
sub
cld
lahf
mov
sub
jl
dec
mov
mov
js
test
and
pop
sub
icebp
mov
arpl
int
out
test
pop
jmp
out
pop
iret
mov
mov
enter
inc
or
fnstenv
in
push
sarb
mov
push
mov
lcall
or
ljmp
lahf
push
mov
or
lret
ss
mov
sub
xor
cmp
push
sub
outsb
jmp
jmp
pop
clc
mov
cwtl
mov
pop
out
addr16
dec
shrl
addr16
insb
rcll
add
hlt
lds
sub
push
mov
xor
adc
ret
push
mov
incl
pop
adc
dec
push
xchg
in
mov
push
or
or
sbb
pop
jmp
cmc
test
in
pop
pop
inc
arpl
orb
mov
push
pop
les
xor
jecxz
adc
and
add
shlb
pop
jnp
fildl
mov
push
cmc
call
and
mov
sbb
out
xchg
mov
pop
inc
testl
sub
pushf
js
lock
or
cmp
inc
clc
cmp
sub
jo
or
ds
pop
movd
push
aas
negl
pushl
push
lcall
mov
ret
shl
push
mov
shl
add
cmpsb
gs
mov
adc
mov
pop
mov
jne
mov
cmpl
ret
dec
add
adc
sub
mov
shlb
or
dec
test
shr
cmp
pop
add
jno
sub
cmpsl
dec
xor
pop
pop
cltd
fisubrl
xchg
pop
or
xchg
daa
pop
sbb
sbb
push
jnp
adc
loope
add
add
adc
and
mov
idiv
orb
test
inc
add
fwait
adc
pop
ds
pop
data16
inc
add
xor
or
loope
push
ret
in
mov
dec
out
fcmovu
or
ficoms
rcr
inc
and
mov
jg
dec
push
hlt
xor
fwait
xor
in
xchg
outsb
push
ljmp
jge
pop
or
add
mov
xchg
out
sub
lds
or
add
push
push
aaa
add
mov
lret
mov
mov
push
pop
push
mov
addr16
add
out
cwtl
add
and
xor
xorb
hlt
lock
pop
sahf
cmp
xor
jne
add
jp
and
mov
cltd
pop
push
inc
mov
sub
or
add
add
and
xchg
sahf
outsl
dec
in
xor
pop
cmpsb
or
dec
dec
cwtl
xlat
inc
aas
dec
clc
mov
jecxz
and
sub
scas
and
or
pop
ficoms
dec
and
cmp
std
mov
lret
fmul
push
loopne
sub
add
pop
pop
add
test
sub
pop
popa
or
and
jo
xor
add
pusha
ljmp
jmp
pop
adc
mov
pop
push
push
xchg
repnz
cmc
jle
dec
pop
les
push
pop
dec
pop
add
lret
pop
popf
dec
inc
mov
mov
das
aam
or
pusha
lcall
add
pusha
pop
jb
xor
movsb
mov
stos
daa
sub
or
aad
icebp
mov
sub
inc
xchg
cwtl
mov
fistps
dec
jnp
inc
test
outsl
push
inc
lods
lods
inc
sar
mov
incb
loopne
push
pop
inc
xchg
xchg
xor
cmp
pop
jns
mov
and
jmp
shrb
enter
add
sub
mov
enter
mov
cmp
or
jno
out
sub
mov
cld
or
loope
popf
ds
cli
mov
insb
cmc
dec
sbb
xorl
xor
push
iret
push
das
push
shl
ds
push
loopne
repnz
ds
xchg
add
dec
dec
lods
or
fwait
test
add
jge
pop
pop
jmp
addr16
fisttpll
int
mov
sahf
jge
mov
pop
data16
pop
push
orl
ljmp
jmp
pop
add
ljmp
test
jbe
or
dec
test
add
sub
xchg
inc
cmc
inc
xchg
dec
jae
ret
in
testl
imull
dec
fs
dec
pop
mov
sarl
push
repz
mov
and
xlat
rorb
jmp
or
and
test
movsl
push
daa
pop
push
cld
pop
jp
hlt
in
test
mov
ja
fcomps
outsl
aam
cmpsl
lock
xor
testl
mov
idivb
pop
cmp
xor
adc
in
push
ljmp
and
into
xor
out
inc
into
test
pop
addr16
iret
ljmp
pop
jno
inc
out
test
loopne
insb
outsb
or
mov
call
mov
std
dec
sbb
jmp
sub
int3
xchg
mulb
cld
int
ds
lods
addb
popa
dec
dec
adcb
jae
insl
and
or
push
or
cmp
jg
dec
jecxz
dec
addl
add
and
pop
dec
jecxz
out
std
cmpsb
cs
push
jmp
mov
pop
test
inc
lea
jle
pop
not
push
mov
push
fucomip
mov
jae
cmp
xor
getsec
sub
pop
xchg
js
testb
xchg
push
test
dec
add
mov
jmp
cmp
sub
jmp
dec
push
mov
adc
shr
pop
add
push
jge
clc
fcmovbe
push
ret
ljmp
pop
push
inc
aas
mov
dec
add
dec
scas
fistpl
ljmp
rcr
jb
add
jge
xor
mov
sub
add
in
jmp
lret
push
loopne
sub
inc
repnz
cmp
jns
pop
and
add
add
dec
jp
scas
lods
fs
or
nop
add
mov
jl
loop
jg
pop
daa
fdivrp
push
shlb
jmp
sub
add
and
lock
mov
dec
jb
inc
mov
adc
aaa
imulb
mov
inc
imul
sbb
pusha
pop
add
jmp
jl
mov
es
jae
or
pop
add
call
add
dec
add
adc
ret
pop
lock
pmullw
addl
imul
in
sarl
inc
jle
jmp
mov
add
cmp
mov
jmp
mov
and
xchg
cmp
push
cs
inc
leave
out
and
xor
in
pop
sbb
repnz
jmp
pop
jg
pop
out
push
cs
sbb
imul
jge
xchg
fstl
add
bnd
leave
sti
fistpl
add
lea
cld
or
and
and
add
push
loopne
mov
mov
jo
pop
push
sub
jmp
inc
imul
into
int3
xor
adc
add
cmp
dec
adc
fldcw
into
mov
jg
inc
push
xchg
xchg
push
dec
pop
dec
rolb
mov
loop
mov
xor
xor
notb
jmp
jg
test
icebp
pushl
out
out
nop
mov
add
fdivs
jbe
add
add
fs
stos
jmp
pop
mov
inc
jns
testl
jle
push
sub
imul
pop
xor
add
xor
adcb
stc
in
lods
cld
adc
mov
negl
add
sub
sub
mov
and
jmp
je
out
pop
divb
inc
push
cmpb
push
aas
sti
xor
imul
in
das
fs
and
pop
inc
cmp
sub
aad
dec
hlt
add
jg
adc
ficoml
dec
sub
jno
mov
xchg
jle
lahf
add
jmp
pop
push
cwtl
loop
imul
cltd
and
repnz
scas
sbb
xchg
jne
loopne
inc
push
enter
and
sub
mov
pop
add
cmp
or
aam
push
pushf
ficoms
fistl
dec
fldt
ljmp
pop
dec
add
xor
gs
out
repz
pusha
adc
or
sub
sbb
or
sbb
or
mov
addl
negl
clc
adc
push
stos
inc
aas
dec
pop
cmp
jbe
cmp
mov
das
cmp
pop
sub
jl
push
xchg
out
add
fmul
jl
sbb
and
daa
pop
push
cmpsl
lods
andl
cmp
orl
dec
pop
jle
pop
pop
push
sti
icebp
push
jo
cmp
jmp
and
pop
call
push
jb
inc
push
push
jmp
and
jge
dec
or
or
mov
inc
or
pushf
ret
add
and
cmp
outsb
arpl
faddl
in
jbe
inc
fdivs
orb
jle
and
pop
shr
jns
outsb
jo
cmc
mov
or
add
add
add
pop
enter
adc
pushf
ja
imul
rclb
jmp
inc
mov
xor
daa
sub
andb
rol
cli
add
dec
add
or
jge
sarl
test
jmp
addb
inc
lret
cmpl
subb
pop
test
mov
mov
sbb
sub
out
add
add
adc
mov
jle
rclb
cld
add
jmp
mov
fbld
and
mov
test
inc
mov
repz
outsb
cmpb
jmp
inc
sub
cmp
mov
lock
fstps
xchg
inc
adc
lahf
pop
jmp
jno
mov
dec
push
mov
sbb
fdivrs
cli
inc
stc
jmp
clc
xchg
mov
leave
xor
pusha
xlat
sub
add
sub
push
xchg
sub
sub
xorl
or
icebp
mov
jmp
in
cli
dec
push
pop
push
inc
cmp
xchg
pushf
jmp
cmp
add
push
sub
in
pop
dec
pop
cmp
fdivr
sbbl
in
cmp
outsl
lods
scas
mov
and
and
sarl
inc
jmp
sub
and
clc
mov
scas
fiadds
pop
loop
sahf
cmpb
aas
jg
dec
push
jbe
xor
dec
mov
pop
push
add
jns
jp
fcomip
mov
cwtl
push
jl
and
cmp
jl
jecxz
call
cmp
das
pop
pushl
cld
sub
dec
cs
dec
out
test
add
jmp
pop
xchg
xor
pop
scas
cmp
mov
hlt
push
mov
adc
insb
pop
dec
jb
push
and
xchg
cmpsb
lea
lock
jo
popf
push
stos
pop
outsl
repnz
decl
inc
inc
push
pop
push
stos
jl
jmp
mov
data16
testb
xor
pusha
ja
dec
fists
inc
or
push
por
sub
pop
pop
daa
and
fsubr
stc
sub
mov
or
pop
mov
cld
lods
mov
adc
inc
inc
push
cmp
jbe
sub
sub
cmpsb
inc
cltd
add
xor
subl
pop
adc
testb
lock
pop
jmp
dec
dec
out
sbb
and
stos
xor
pop
loope
dec
sbb
roll
xor
or
push
dec
add
xchg
or
sarb
add
or
dec
aaa
in
andb
test
les
jne
mov
mov
mov
sarb
push
insb
mov
movb
imul
stos
movsb
sti
xor
pushf
and
aam
mov
cld
inc
push
mov
xor
push
jb
adc
sbb
bound
in
inc
inc
or
addb
cmp
sub
xor
jle
sbb
ljmp
and
stos
cmp
test
scas
addr16
jmp
mov
out
test
cwtl
dec
pop
pushl
and
ss
pop
adc
imul
fists
jns
imul
or
ja
ret
add
fimull
dec
jmp
pop
mov
sahf
stc
and
sub
adc
fwait
les
scas
or
sub
xchg
push
movsb
jmp
push
lret
xor
insl
xchg
push
mov
lds
js
roll
xor
mov
and
jne
mov
not
repz
lea
pop
int3
clc
pop
dec
push
je
ljmp
adcb
and
rcll
movsl
push
jno
or
aam
xor
mov
nop
movsl
jle,pn
lret
jnp
or
xor
xchg
adc
aam
fisttps
sub
sbb
jmp
or
mov
imul
add
and
ja
add
and
mov
roll
loop
dec
pop
adc
mov
les
and
pop
mov
int3
sub
xchg
jo
in
pop
mov
sbb
dec
push
add
xor
aam
sbb
jle
jmp
dec
dec
or
or
mov
jp
addr16
jae
fstps
mov
adc
lea
jae
push
loopne
or
sub
or
inc
mov
dec
lods
mov
jle
xchg
sub
lds
dec
test
and
arpl
cmp
xchg
xor
xchg
mov
cmp
mov
xor
addr16
sub
xchg
testl
cli
sbb
jmp
or
push
adc
mov
cwtl
or
lret
jo
mov
rol
add
rcl
sub
int
stos
mov
imul
sbb
int
fisubrs
add
in
xor
shll
pop
ljmp
daa
sub
mov
xorl
or
jnp
xor
add
push
jo
movsb
cmpb
aam
es
or
inc
pop
push
js
gs
and
dec
in
fnsave
sub
or
push
out
sub
ss
push
or
or
or
jp
fsubs
dec
xor
pop
sbb
popf
pop
cmp
aas
push
xchg
sbb
jmp
out
add
add
and
call
or
test
mov
inc
lret
ja
xor
add
in
pushf
mov
adc
mov
into
pop
shll
andb
or
jo
movsl
mov
push
cmp
and
sarl
adcl
jae
in
xorb
xor
or
gs
cmp
sbb
jo
xchg
xor
cmp
lods
insb
add
sub
out
or
pop
adc
outsl
scas
push
mov
and
jmp
adc
ret
test
xchg
inc
add
sbb
pop
ret
inc
sahf
decb
pusha
fstpt
or
dec
push
cmp
js
ret
or
daa
pusha
inc
sbb
imul
pop
pop
push
mov
cmp
inc
into
outsb
dec
add
xor
and
or
add
push
jbe
mov
pop
push
lock
jmp
loop
sbb
ficomps
push
out
push
jmp
arpl
pop
and
ret
jl
dec
and
xchg
aas
movsl
ja
sub
xor
push
or
xor
das
sub
or
adc
cmp
add
push
add
sbb
add
push
and
push
cmp
stos
popa
pop
lahf
hlt
add
sub
cmc
jg
or
sub
es
movsb
push
test
jo
jp
pusha
sbb
add
pop
and
je
out
std
sbbb
adc
or
mov
out
sub
daa
push
jl
pop
popf
jg
dec
mov
lret
or
arpl
cli
das
lcall
xor
mov
xor
pop
xor
and
pop
pop
jno
call
inc
test
adc
repnz
popa
xchg
sbb
outsb
in
mov
adcb
cli
xor
scas
mov
mov
pusha
mov
test
cmpsl
jp
pop
mov
mov
push
mov
cmc
andb
mov
inc
ret
cmp
addr16
xlat
stos
mov
mov
stc
mov
lret
push
xor
dec
add
sub
das
fadd
lret
add
jecxz
sarb
int3
icebp
pop
mov
mov
pushf
in
add
jmp
pop
popf
dec
pop
lock
add
push
or
ljmp
fcoms
sub
xchg
xchg
add
inc
imul
jbe
inc
sub
xor
cmp
jno
orl
pmaddwd
scas
cld
lods
js
lds
nop
sub
add
pop
stos
sub
aas
clc
or
icebp
lret
adc
fdivr
rclb
push
inc
sub
loopw
pusha
repnz
push
push
mov
mov
or
test
jnp
or
add
pop
add
fistps
mov
lock
test
sub
jmp
jnp
arpl
mov
sbb
dec
sub
lcall
and
pop
mov
mov
xlat
jno
ds
jecxz
xor
push
in
and
mov
adc
xchg
add
cmp
leave
test
xchg
dec
stc
add
cmp
filds
jb
push
push
add
mov
jge
outsl
inc
xor
outsl
jg
jl
dec
xchg
or
outsb
outsb
dec
dec
xor
dec
and
lcall
cmp
aaa
andb
dec
push
add
fsubr
cmpl
jmp
or
xchg
call
int
fnsave
cmc
pop
and
cwtl
cmp
jecxz
aam
xor
and
add
int
cwtl
jg,pn
mov
addr16
data16
sbb
rolb
mov
inc
repnz
push
fdiv
xchg
pop
mov
fldt
push
test
sarl
movb
ds
add
hlt
in
test
sub
or
lds
mov
xchg
sub
imul
add
in
dec
call
add
mov
jne
ja
mov
loopne
ds
add
push
jmp
cltd
inc
mov
push
push
xor
pop
mov
std
jbe
pop
hlt
shll
or
push
sub
xor
js
je
mov
push
ror
sti
cli
inc
stc
and
ja
add
push
or
pusha
out
push
hlt
adc
xchg
mov
pop
mov
movsb
push
orb
lret
sarl
jne
jecxz
or
mov
lret
mov
dec
bound
pop
seta
lock
mov
adc
ljmp
ficompl
adc
jg
xchg
add
inc
imul
in
icebp
and
sub
ficoml
aaa
adc
add
jl
push
push
movswl
divl
mov
loopne
dec
lea
add
mov
sbb
xor
push
scas
push
mov
int
adc
cs
add
pop
inc
shl
add
push
and
sbb
mov
or
xlat
roll
fdivp
pop
push
add
pop
cmp
int
cmpsl
cmpsl
inc
cs
jnp
jg
pop
cmp
xchg
movsb
daa
ljmp
aad
adc
sub
pop
and
pop
xor
not
add
in
and
aam
push
roll
pop
insl
add
rorl
jmp
jae
lahf
add
mov
adc
out
inc
in
xchg
pop
popa
imul
movsl
lock
pusha
daa
mov
lock
sbb
dec
aam
xchg
mov
jecxz
add
push
fistps
push
fwait
imul
push
jmp
add
movsb
sub
pusha
push
xor
enterw
ss
fs
iret
adc
jb
ds
js
jle
sub
pop
push
jecxz
inc
loope
ja
in
sub
xchg
inc
rcl
pop
ja
jmp
sbb
pop
xchg
fists
add
test
fimuls
addr16
and
imul
sbb
or
stc
in
into
adc
scas
notl
xchg
repnz
lret
sbb
daa
insl
push
jbe
pop
cmp
outsl
mov
bound
movsb
out
xchg
dec
jp
cmpsl
out
pop
jnp
daa
push
addr16
ret
or
xor
dec
adcl
sbb
and
loope
adc
arpl
add
icebp
ds
cmp
push
jb
sbbb
xor
or
iret
aas
jmp
enter
les
or
xor
fisttps
sub
jle
mov
mov
and
not
jmp
xchg
dec
stos
dec
or
repz
mov
jne
gs
mov
push
les
add
negb
add
loope
sub
jecxz
sbbl
pop
push
out
mov
pop
and
sahf
cmp
mov
mov
push
mov
and
jb
push
push
pop
insb
mov
mov
rorl
ret
mov
add
popa
jmp
mov
and
ret
les
xlat
pop
or
adc
ss
aad
scas
adc
in
jmp
mov
loope
jp
in
pop
xor
aas
ljmp
dec
add
and
inc
add
cs
fs
incl
or
cmc
sbbb
repz
cmpl
lret
cmpsb
cmc
sbb
jbe
stos
inc
insl
adc
cmp
repz
push
or
pop
pop
sub
and
mov
mov
call
repnz
cli
shlb
lock
add
pop
pop
xchg
cmp
imul
pop
pop
mov
or
mov
xor
cmc
push
jmp
nop
jae
push
sub
mov
out
in
add
pop
lahf
or
mov
repnz
push
mov
test
push
jecxz
mov
cs
xor
mov
jb
jg
sbb
and
push
add
pop
fists
sub
inc
xor
add
loope
movsl
dec
fcompl
add
inc
xchg
cs
and
ljmp
dec
pop
shll
push
out
push
push
add
push
sbb
cmp
js
js
das
not
push
mov
js
xor
adc
jae
mov
and
xchg
pop
mov
inc
cmc
ss
test
movsb
shlb
mov
jmp
insb
push
push
pop
shr
inc
dec
in
ljmp
jno
xor
adc
insl
jl
aad
mov
add
xlat
icebp
into
dec
mov
inc
xchg
outsb
xchg
pop
loop
dec
loop
jp
cmp
and
fisubs
outsl
jne
loope
add
test
adc
add
push
add
jbe
mov
xchg
cmp
push
notb
push
and
jge
fnstcw
jb
outsb
lods
jmp
enter
dec
cmp
jmp
enter
add
push
arpl
loopne
cmpl
xor
rcll
aas
sub
loope
and
js
call
xchg
push
xchg
out
xchg
lods
inc
push
adc
pop
mov
icebp
sub
or
fimuls
dec
add
sub
sub
ds
adc
gs
add
shll
add
or
dec
in
imul
mov
sbb
aad
jmp
mov
sub
adc
fs
mov
inc
leave
jmp
inc
neg
sub
push
sub
xchg
jmp
scas
cmp
in
mov
adc
add
and
dec
mov
sbb
dec
out
dec
adc
scas
popf
movsb
dec
fwait
add
leave
jae
dec
push
subl
inc
cli
adc
fistpl
cmp
rorb
push
add
sbbb
push
fs
ret
jb
int3
sbb
inc
loop
incb
pop
add
jmp
inc
or
push
pop
add
mov
push
ss
and
andl
std
add
mov
test
cmp
std
pop
sbb
mull
jg
into
mov
dec
cmc
mov
xchg
divl
sbb
push
cmpsb
popf
sub
loope
sub
sar
or
test
xchg
les
mov
cmp
sahf
jp
jge
xor
xlat
mov
mov
clc
loop
popf
stc
stc
mov
rclb
add
lret
loope
pop
adc
jecxz
cmp
or
or
sbb
cmp
add
insl
jmp
or
or
andb
add
cmc
repz
ret
out
sbb
xchg
mov
xlat
add
add
neg
lods
mov
out
adc
xor
pop
mov
outsb
adc
fwait
sub
cs
out
and
mov
add
and
pop
add
add
clc
adc
jnp
pop
fwait
xchg
mov
jno
mov
sbb
test
pop
xor
xchg
mov
push
dec
test
jb
pop
out
push
add
add
inc
mov
cmpsb
inc
adc
xchg
mov
popf
dec
xor
push
cmp
sub
rol
cmp
adc
sub
xchg
sbb
sarl
cmp
out
cmp
das
jmp
adc
jecxz
ja
xlat
push
add
cmpb
jne
sub
push
jno
sbb
rclb
loop
mov
out
iret
push
daa
add
rclb
push
xor
addr16
mov
fimuls
push
mov
sub
pop
sti
addr16
mov
daa
nop
add
ja
cltd
leave
movsl
or
stos
mov
jns
and
movsl
jp
imul
shlb
xor
fmull
in
xlat
mov
dec
fwait
nop
pushf
repnz
push
lret
pop
and
push
jl
lds
push
movsl
mov
and
and
loop
jmp
xchg
je
movsb
loop
ja
inc
fs
insl
scas
notb
push
or
rcrb
add
mov
lods
mov
sbb
addb
mov
xchg
pop
pushf
jno
test
scas
adc
stos
jecxz
mov
pop
js
in
rolb
pop
int
sbb
test
add
or
or
movsb
jnp
cmp
daa
fcomp
xchg
mov
mov
jb
mov
jnp
lcall
sub
pop
jmp
in
jl
mov
xorb
ss
adc
dec
sub
out
outsb
int3
mov
pop
fists
scas
loope
dec
cmp
rcrb
adc
scas
roll
lcall
mov
sub
xchg
inc
pop
mov
pop
inc
push
push
jmp
mov
je
pop
shr
mov
lock
addr16
shlb
cmc
dec
adc
jmp
stos
mov
dec
mov
mov
jmp
add
sbb
cmp
jbe
add
or
add
mov
cmp
hlt
sub
mov
jno
xor
lret
add
dec
inc
repnz
xchg
das
and
push
xchg
das
gs
adc
test
mov
rcll
loope
xor
add
push
pop
jle
mov
jno
cmp
dec
jns
sub
pushf
inc
pop
or
fstl
cmc
xor
cmp
xchg
or
and
popf
inc
sahf
add
push
sub
inc
sti
sub
jo
jbe
xchg
pop
adc
adc
and
ds
jo
or
fimuls
lods
add
out
incl
mov
or
mov
fs
call
xor
cmc
lcall
jge
pop
popa
rclb
jnp
push
add
mov
lret
mov
and
scas
mov
gs
inc
pop
mov
pop
sbb
or
and
xor
or
push
int
adc
or
and
jo
aad
fdivrl
xor
int
or
push
stc
scas
inc
jmp
sbb
cmp
dec
add
pop
push
jp
sub
cmc
iret
mov
inc
mov
not
das
push
push
jno
sub
loopne
es
fstpt
add
sub
call
lods
adc
cmpsl
xchg
pop
or
and
inc
pop
add
pop
sbb
in
add
inc
and
push
pop
dec
clc
mov
lret
dec
jge
push
loop
ljmp
or
inc
or
ret
jns
popa
push
mov
mov
ret
jmp
ret
add
push
dec
les
out
dec
mov
jmp
pop
inc
rorl
int
sub
jp
push
pusha
je
pop
shlb
outsb
adc
jge
in
add
in
mov
ljmp
lock
push
sub
ljmp
xchg
adc
xchg
imul
sub
xchg
jns
push
aad
pusha
sub
dec
sbb
add
inc
add
ror
mov
push
push
inc
mov
cmp
aam
jb
js
ds
pop
dec
mov
aad
jmp
movsb
lods
mov
imulb
jbe
pop
push
or
inc
pop
scas
mov
inc
adc
out
adc
ljmp
cmp
dec
rcll
push
movsb
cmp
loope
sbb
lods
or
inc
sub
xchg
in
push
daa
sahf
je
scas
sbb
int3
scas
insb
sbb
js
jg
jecxz
sbb
pop
not
nop
hlt
pop
dec
push
insl
add
inc
ljmp
inc
mov
incl
push
mov
add
pop
add
jo
adcb
std
jnp
ds
push
mov
rol
dec
in
std
mov
push
jmp
dec
mov
sbb
loop
or
stos
cmp
add
mov
sub
xor
cmp
sti
sub
lret
pop
and
pop
mov
add
jle
inc
cmp
pop
pop
sub
ret
pop
pop
pop
stc
and
push
clc
sub
sub
loopne
das
cli
sub
add
popa
push
dec
pop
fstl
aas
lock
ss
and
mov
mov
pop
insb
pop
addr16
push
shr
pop
pop
jno
orb
add
bound
ss
push
decb
test
addb
dec
add
shrb
mov
lods
adc
push
cmp
iret
ret
sub
in
cmpsl
pop
enter
andb
pop
mov
es
movsl
pop
mov
adc
sarb
stc
sub
sbb
stos
ds
pop
xchg
add
dec
sub
pop
stc
aad
cmp
sub
mov
push
lret
push
rcl
dec
dec
cmp
push
enter
add
or
adc
push
insb
fwait
nop
lds
dec
fimull
pop
sub
hlt
dec
ret
movsb
pushf
out
mov
jp
jmp
lcall
fdivrl
xor
sbb
jno
jl
adcl
gs
out
xchg
cmc
jbe
add
call
or
or
movb
ss
cmp
into
sub
orl
or
or
and
jle
popf
daa
in
jge
inc
add
daa
sub
movsl
es
or
xor
outsl
adc
inc
xor
sub
cmp
shrl
sar
loopne
jns
retw
std
lock
ret
push
or
or
mov
xor
or
pop
jne
mov
aam
cmpsl
call
or
cmc
sub
daa
int3
jg
out
imul
adc
dec
ss
mov
mov
add
movsl
mov
add
pop
imul
or
hlt
ret
xchg
arpl
andb
push
das
jns
js
orl
push
adc
push
sub
and
jbe
nop
mov
dec
inc
inc
and
push
dec
dec
mov
cli
mov
push
mov
or
popa
push
dec
imul
adc
adc
loope
shll
test
add
lcall
and
sub
mov
cli
fists
fisttpll
mov
xchg
loope
cmc
dec
nop
lcall
push
sahf
out
dec
push
lock
stc
mov
inc
aaa
jge
dec
scas
loop
inc
or
cs
xor
mov
data16
xchg
pop
imul
inc
jmp
pusha
loop
iret
daa
jl
mov
jecxz
mov
fucomip
clc
in
inc
mov
lods
add
add
mov
push
xchg
inc
ljmp
mov
outsb
lods
or
xor
nop
push
or
ret
or
and
xchg
jmp
jmp
mov
lret
popa
sub
push
ds
xchg
imul
rcll
in
or
xchg
mov
or
stc
mov
add
and
push
dec
insl
insl
mov
es
out
and
cmp
xor
push
push
add
inc
incl
testl
mov
add
pop
clc
mov
addb
sti
imul
or
dec
inc
inc
and
int
add
ret
push
cmpsl
or
pop
test
xchg
scas
in
sahf
ficoms
vpsubusb
cmc
dec
pop
clc
inc
icebp
push
push
pusha
andb
jns
pop
lods
cmp
js
scas
pop
inc
add
iret
test
mov
add
das
jmp
addb
lcall
stc
int
jne
push
pop
rorb
add
and
xor
in
push
adc
pop
or
add
add
mov
push
out
nop
xor
push
sti
mov
xor
push
mov
rolb
pop
adc
mov
xchg
cli
subb
lahf
pop
sbb
movsb
inc
xchg
mov
fcompl
push
pop
stos
cmp
test
je
cli
xor
sbb
sahf
push
dec
or
mov
mov
adc
rorb
test
daa
pop
dec
cltd
cmp
lcall
into
push
std
out
adc
bndstx
push
orb
roll
mov
or
sub
add
notb
xor
jle
jnp
mov
in
or
bound
sbb
clc
add
sbb
mov
or
pop
aaa
clc
or
pop
or
jne
mov
and
and
and
and
and
and
sbb
ficomps
leave
xchg
adc
adc
sbb
divb
xchg
enter
sti
inc
sbb
icebp
fisttpll
adc
pop
or
cmpsb
sbb
das
add
cmp
add
xchg
add
add
pushf
sahf
push
xor
or
std
and
and
xor
jo
das
popf
loopne
ret
add
sub
add
and
pop
xor
or
xrelease
mov
xor
out
sbb
aas
add
mov
jge
or
or
adc
jl
sbb
sub
icebp
movsb
in
insl
xchg
dec
movsb
adc
es
adc
xor
or
adc
pop
in
mov
shll
ret
out
jb
add
dec
sub
cld
mov
mov
inc
add
cmp
movsl
xchg
inc
and
and
mov
push
inc
in
test
int
andb
test
or
xor
mov
out
dec
push
sbb
cltd
stc
mov
icebp
cmp
jg
adc
addb
sbb
xchg
jmp
inc
sbb
lea
pop
sub
and
and
scas
pop
and
arpl
inc
stc
adc
iret
adc
clc
shlb
and
and
adc
jle
add
fnstcw
dec
adc
sub
cmp
imul
inc
out
or
hlt
jae
jns
mov
mov
nop
cmp
imul
xchg
lcall
ret
push
push
frstor
jbe
mov
jmp
loopne
push
jg
inc
push
sahf
mov
pop
roll
xor
jg
sub
sub
mov
imul
mov
sbb
int3
enter
adcb
mov
jmp
jnp
not
or
push
dec
es
rcll
jns
rclb
xor
push
sbb
jnp
inc
bound
lods
in
sbb
push
sbb
mov
cld
mulb
push
inc
sub
push
jb
xor
imul
inc
popa
jmp
in
push
test
add
xor
cwtl
ror
adc
cmc
stc
cmp
loope
cs
mov
push
adc
or
cld
push
shll
cmpb
add
xor
xor
fs
or
push
loop
pop
sub
aaa
xor
xor
popa
ret
jno
test
int3
adc
or
fstl
inc
clc
pusha
clc
aad
subl
add
and
rolb
dec
sti
int3
or
jmp
sbb
cmp
stos
sti
sub
cmp
or
shlb
push
in
paddsb
cmp
cmc
or
or
jo
mov
xor
pop
data16
in
inc
icebp
aas
add
sub
into
and
and
cmp
or
xor
jno
xchg
addb
or
not
push
inc
mov
iret
clc
mov
xchg
push
call
mov
cmpsb
orb
mov
cmp
cwtl
cmp
pop
or
xor
lahf
imul
xor
mov
sub
cmp
push
std
push
jecxz
push
ret
divb
in
inc
dec
iret
out
add
mov
cmp
clc
mov
pop
xor
rorb
cwtl
mov
jno
test
data16
into
or
mov
cmp
inc
add
sub
mov
xlat
loop
sarl
add
push
mov
fisttps
xlat
pop
aad
in
sbb
sbb
jnp
sbb
loop
ret
cli
adc
pcmpeqw
sub
mov
fistps
sub
pop
sub
fdivrl
or
mov
shrl
mov
jns
xchg
in
and
push
push
add
jg
mov
xor
js
inc
out
push
pop
mov
xor
test
enter
mov
int3
jo
lahf
jne
xchg
daa
jmp
xchg
clc
mov
push
mov
and
arpl
xlat
cmp
mov
jg
imul
out
sub
xor
xor
cmp
add
xor
jmp
sarb
js
hlt
mov
jno
pop
daa
xor
hlt
xchg
dec
fldcw
fwait
icebp
and
add
dec
adc
ret
sbb
xchg
pop
js
or
xchg
cmpsl
sbb
sub
fiaddl
cmp
movsb
inc
mov
shlb
or
repnz
scas
pop
adc
add
lea
jle
arpl
stc
sub
sbb
fsubl
add
out
pop
outsl
testb
push
adc
mov
loop
sub
out
sub
or
out
jmp
pop
ds
call
neg
adc
test
push
sahf
mov
mov
cltd
lea
notl
sahf
popf
mov
or
loopne
push
or
jne
jge
inc
xor
gs
imul
das
mov
jmp
sub
or
push
and
jae
mov
sbb
sub
and
pop
pushf
sbb
cmpsb
les
movsl
mov
mov
aad
mov
lahf
dec
and
lock
mov
mov
push
adc
and
inc
in
xor
cmp
adc
pop
xchg
aad
repnz
pop
adc
sbb
mov
popf
in
jo
push
pop
push
stos
pop
mov
scas
lods
pop
pushf
add
pop
stos
aad
bound
jge
mov
mov
sbb
outsb
test
div
cli
push
insl
push
inc
xchg
cmp
aaa
jns
jbe
xor
xorl
dec
sub
and
mov
push
sbb
mov
stc
loop
push
cmc
mov
jmp
pop
in
add
pusha
pop
rorb
mov
loope
push
or
adc
std
loop
inc
outsb
lret
out
adc
or
mov
mov
and
add
adc
dec
jns
push
push
add
inc
sub
pop
roll
loopne
pusha
es
int3
or
jg
xor
xor
leave
fldcw
jge
fnstenv
inc
sbb
pop
iret
sahf
subl
sub
repz
sub
xorb
dec
sbb
js
rolb
inc
or
or
rclb
dec
mov
xchg
shlb
pusha
jmp
jns
mov
shll
and
xor
jge
or
aad
fwait
push
mov
jae
jbe
mov
inc
sbb
bound
sbb
sub
nop
xor
mov
pop
mov
dec
adc
test
lcall
ljmp
enter
mov
insl
and
das
les
adc
cmp
and
mov
pop
std
aas
sub
in
or
jne
inc
mov
or
leave
inc
and
add
ror
fwait
pop
jg
mov
cli
repnz
adc
je
pop
mov
xchg
push
pusha
push
mov
sbb
adc
rclb
pop
orl
adc
add
or
aam
pop
lds
mov
or
aad
int3
aam
fcom
cmp
mov
push
btrl
idiv
lret
xchg
sub
jge
sbb
sub
int3
dec
push
daa
push
push
icebp
repz
insb
popa
jb
adc
cs
repnz
mov
dec
setp
subb
inc
push
cmp
mov
add
mov
add
fs
pusha
sub
repnz
and
dec
jecxz
push
bound
xor
jmp
rclb
dec
bound
add
push
mov
aad
sub
jo
lcall
pop
pop
xor
ja
mov
adc
xor
fs
cltd
pusha
js
mov
into
test
outsl
inc
lock
or
mov
stc
dec
push
repnz
test
mov
add
jb
add
sub
add
popl
push
mov
lahf
test
push
xlat
lahf
push
scas
out
icebp
pop
adc
push
push
jns
repnz
pop
adc
sbb
lds
pop
or
push
xlat
sub
and
adc
push
fsts
push
out
aam
ret
loope
dec
sub
stc
xchg
adc
jge
add
push
pop
mov
jmp
inc
nopl
cmc
dec
push
test
add
adc
js
int
data16
int3
xchg
imul
xor
popa
cli
jle
call
lods
sti
cmpl
jecxz
loop
push
sbb
negl
cmp
in
int
and
sbb
cmp
sti
inc
jg
imul
xchg
sbbb
mov
rcr
or
push
dec
xlat
mov
ja
lahf
fsubrs
mov
mov
add
fs
add
pop
imul
xor
cmp
sub
loop
pop
test
jecxz
push
sbb
ret
push
xchg
cld
in
jmp
cmpsb
sub
stos
sub
cmp
gs
add
adc
push
mov
hlt
push
pop
adc
inc
test
mov
out
imul
jge
sub
sub
mov
in
mov
and
roll
pop
jmp
int3
pop
and
testl
adc
fstps
pop
jbe
xchg
xchg
add
fadds
mov
dec
mov
nop
in
mov
repnz
push
mov
pop
jbe
js
repnz
in
or
push
xchg
inc
or
adc
xchg
jnp
adc
cmc
dec
mov
imul
add
cmpsl
fdivp
add
jmp
push
push
mov
icebp
push
rcrb
or
aad
loopne
jmp
aas
in
mov
xchg
shll
adc
loop
ljmp
dec
or
cmp
or
popf
negb
mov
in
aas
and
sub
jecxz
cmpsb
push
shlb
pop
jl
int3
add
int
jmp
cli
cmc
jo
cld
jne
gs
jne
cmp
clc
adc
out
xor
scas
push
push
jmp
mov
pop
andl
and
popa
and
mov
cmp
pop
pop
adc
notl
dec
cmp
cmpb
mov
ret
loope
push
mov
or
int3
adc
mov
out
push
cld
mov
js
sarl
jl
push
xor
aad
out
nop
xor
pop
das
adc
test
and
add
shrl
add
jmp
sbb
fwait
stos
cmp
fdivrs
jecxz
ds
push
sub
rcll
mov
test
mov
push
lods
addb
xorb
xor
pop
mov
push
nop
and
arpl
sub
out
dec
rcl
in
jmp
mov
dec
add
mov
out
push
cmp
addr16
xchg
pop
test
adc
xor
gs
sub
gs
pop
cli
mov
das
fisttpl
dec
pop
scas
fsubrs
push
int
sbbb
lahf
pop
sbb
pop
push
mov
jmp
stos
ja
jns
rcll
aad
xor
adc
dec
ret
testl
sarl
xor
fdivl
shl
jno
or
pop
test
subb
fstpl
mov
imul
mov
push
or
scas
jp
jnp
or
xlat
push
xchg
aas
add
movsb
and
jmp
push
sbb
mov
add
adc
rcrb
push
push
push
dec
lods
lds
popa
ret
add
jmp
int3
repz
fstpl
ljmp
inc
fs
xor
mov
push
or
out
fldl
xchg
push
add
xchg
jl
pop
add
dec
sbb
push
or
jns
pmaddwd
enter
imul
mov
lahf
push
in
adc
fstl
std
cltd
rorl
adc
rcrb
add
push
rolb
sbb
xchg
jl
ljmp
popl
mov
sub
and
mov
pop
cmp
add
or
push
mov
cs
dec
ret
jge
mov
cmp
cs
xchg
shll
sbb
mov
add
or
mov
dec
push
hlt
mov
les
leave
rolb
or
mov
push
sub
or
in
push
lcall
mov
xor
mov
imul
popa
xor
xchg
je
or
pop
xchg
cli
adcb
mov
or
pop
call
adcl
fbld
mov
repz
sub
cli
add
jnp
or
bound
jo
inc
mov
gs
or
es
pusha
popa
sub
sahf
mov
sbb
xchg
cmp
add
out
gs
cmp
add
daa
in
jbe
sar
jno
and
push
pop
enter
mov
lahf
inc
mov
mov
pop
push
add
std
pusha
add
mov
jmp
push
ret
hlt
push
icebp
sub
jb
mov
and
cmp
push
mov
jne
jp
test
mov
call
sbb
hlt
mov
jbe
or
xor
call
ljmp
subb
jmp
call
xchg
daa
xchg
enter
jmp
xor
dec
std
mov
adc
mov
ljmp
scas
cmp
fcoms
pop
in
daa
adc
out
shl
addr16
push
mov
addr16
mov
shlb
lea
push
mov
js
xchg
xchg
iret
xchg
stos
lret
sub
scas
add
dec
dec
in
mov
xchg
test
lahf
inc
mov
dec
into
aam
mov
loopne
cmp
xchg
dec
mov
test
sub
loopne
cmc
jle,pt
sub
mov
sub
sbbb
addr16
mov
push
fildl
xchg
outsb
or
pop
jmp
subps
dec
add
add
fildll
xchg
mov
enter
mov
push
xlat
imul
pop
cmp
pop
jae
mov
push
xor
loopne
mov
testb
adc
cmp
inc
dec
test
xchg
ficoml
cmpsl
adc
sbb
jne
pushf
lret
inc
lds
mov
jmp
jge
dec
divb
je
rcll
loope
sub
cmpsb
fsubl
out
add
inc
mov
inc
pop
adc
js
xchg
push
int3
dec
jmp
pop
adc
js
outsl
jg,pn
lds
push
jmp
shll
cmp
sarl
inc
sub
cmp
ret
iret
cwtl
adc
in
outsl
mov
test
mov
inc
je
sbb
xor
adc
jbe
loopne
insb
ja
mov
fucomp
ficoms
xchg
mov
push
data16
orl
dec
pop
ljmp
jecxz
pop
jns
mov
not
or
sub
daa
jmp
and
jno
into
das
imul
scas
dec
js
cwtl
rcrb
add
xlat
andb
add
sub
repnz
xchg
adc
pop
pushf
adc
pop
lock
pop
iret
ret
andb
dec
pop
add
inc
sbb
jmp
pop
add
fildl
in
scas
pop
aas
scas
adc
or
mov
push
jns
shrb
push
popf
clc
fwait
lahf
push
add
pop
xchg
ja
mov
xchg
xor
adc
into
dec
sbb
sbb
test
mov
cli
inc
decl
sbb
les
pop
cmc
scas
pop
clc
fcmovnb
sbb
sub
jo
push
sbb
data16
adc
adc
mov
push
push
push
addr16
movsl
lock
and
js
cmpsl
push
xchg
xor
enter
pop
sub
sub
mov
call
adc
jmp
jmp
mov
les
outsb
clc
aad
out
jle
dec
aas
std
add
popf
jnp
std
push
mov
mov
cmc
lret
jnp
lock
cmc
daa
mov
lcall
mov
ljmp
int3
cmp
enter
adc
lods
inc
cmc
mov
repz
stc
in
std
loope
ljmp
sbb
sti
add
sub
or
jmp
jmp
cmp
jg
push
jmp
mov
sar
jmp
mov
gs
sub
addr16
out
orl
popf
jno
dec
push
out
dec
sbb
pop
mov
cmc
adc
cld
push
pop
cld
scas
gs
lods
sub
pop
jno
push
lret
add
jle
or
out
loop
xchg
pop
push
mov
not
dec
fiadds
add
or
jns
sub
or
out
or
push
add
sub
dec
jmp
pop
and
xor
cli
leave
push
fsin
cmp
push
add
add
mov
cs
rclb
xchg
aad
sti
nop
fcmovb
dec
mov
aas
rcrl
inc
mov
add
jbe
mov
sahf
daa
mov
jmp
testl
jmp
mov
add
and
jmp
lea
xor
popa
insl
add
mov
iret
mov
stos
loopne
gs
mov
repnz
push
mov
pop
or
push
jmp
jne
or
rcll
leave
push
pop
inc
or
pop
cmp
popf
lds
jle
push
jge
shrb
aad
lret
push
or
jl
adc
xchg
xor
scas
jmp
fisttps
ficoml
pop
shrl
or
add
test
cwtl
add
push
daa
sub
jmp
mov
outsl
fsts
insl
aaa
and
push
pop
fsubr
cs
sbb
mov
scas
add
adc
xor
das
jp
dec
push
cltd
icebp
mov
adc
decl
pop
jl
or
jmp
cmp
push
and
push
sub
xor
adc
aas
inc
inc
cld
push
jmp
push
fidivrl
push
mov
lods
add
test
or
into
mov
mov
push
cmp
pushf
xor
inc
sbb
mov
cmp
ffree
outsb
add
hlt
pop
das
pop
cmp
lods
nop
das
pop
inc
in
imul
xlat
or
out
add
and
push
push
pop
lds
fbld
jmp
aad
xchg
cwtl
pop
cmpsb
mov
icebp
jns
popf
dec
xor
jge
push
or
ljmp
or
int
push
push
push
add
ljmp
mov
jp
jmp
adc
mov
add
iret
push
adc
mov
jmp
in
cs
ja
es
jae
cmp
push
rcrb
add
iret
add
dec
ss
add
ja
adc
cmp
ret
xchg
or
jle
xchg
and
cmpsl
xorb
in
pop
das
js
or
pop
adc
jbe
cmp
push
dec
pop
ret
cld
rorb
sahf
mov
flds
cmp
mov
adc
adc
mov
dec
cwtl
jno
sbb
mov
or
in
enter
ret
mov
inc
jmp
icebp
outsl
roll
cmp
mov
inc
fsubrl
or
pop
push
push
cli
sub
xchg
add
jnp
loopne
lret
mov
mov
out
jecxz
add
scas
popa
mov
xchg
iret
out
outsl
and
and
not
sub
sub
and
sub
aas
cmp
pop
or
push
mov
testl
hlt
stc
subb
in
aam
and
jnp
inc
ja
push
jle
bound
es
cmp
jne
stc
inc
ret
jmp
pop
dec
mov
push
sub
sbb
jmp
inc
add
pop
sub
rcll
xchg
adc
push
pop
cwtl
ljmp
add
inc
outsl
xor
jl
icebp
clc
lret
fs
adc
jmp
or
inc
rorb
popf
add
mov
push
inc
sub
orb
inc
loop
outsb
xchg
jbe
out
push
add
jg
push
adc
movsl
loopne
sub
push
loop
rclb
out
popa
popa
sub
cmp
aam
adc
push
nop
pop
lds
cs
insb
dec
pop
pop
xlat
sbb
daa
push
or
outsl
pop
mov
mov
ljmp
sbb
push
jp
add
jmp
push
mov
inc
mov
das
push
test
sub
sub
mov
outsb
push
mov
or
adc
test
mov
imul
adc
mul
and
xchg
jg
jecxz
push
adc
adc
mov
xor
cmp
ret
jmp
dec
pop
adc
cmp
mov
outsl
push
mov
jecxz
out
and
push
mov
pop
aad
test
sub
idivb
cli
jl
test
repnz
outsl
fstpl
lret
mov
cwtl
xchg
pop
ja
lock
scas
iret
cmc
dec
mov
add
addr16
xchg
inc
loope
or
ret
dec
pop
mov
mov
pop
in
adc
sub
inc
enter
pop
and
or
sub
popa
add
adc
jmp
shlb
mov
rolb
xor
and
jmp
inc
dec
jo
ss
or
adc
rorb
dec
dec
mov
push
inc
ret
shl
add
jp
xchg
mov
mov
fldt
es
adc
mov
push
jmp
cwtl
mov
adc
jae
or
stc
subl
jmp
out
and
out
dec
pop
add
daa
pop
pop
and
jmp
xchg
out
xor
outsb
jmp
push
cmp
dec
inc
std
pop
mov
out
ds
adc
push
sub
add
push
xor
jmp
adc
pop
aas
xchg
roll
sub
adc
std
jp
or
jo
mov
jmp
jae
xchg
inc
mov
daa
sub
sbb
aam
mov
or
pop
or
idivb
lds
sub
cli
repnz
cmp
inc
adc
scas
cwtl
clc
push
jp
hlt
int
sbb
es
and
or
xor
jae
and
icebp
and
pop
jl
jns
add
sub
xchg
xor
inc
dec
xor
lret
sub
add
push
loope
cmp
addl
out
fiadds
dec
cmp
mov
lock
dec
imul
in
sarb
aam
ret
jge
hlt
in
or
fwait
pop
mov
xchg
pop
test
andb
dec
neg
shl
jmp
shrl
xor
hlt
mov
pop
xchg
push
mov
sub
cs
fldcw
test
push
gs
movb
add
mov
ficomps
pop
sub
or
jo
je
and
jmp
adc
in
mov
sub
es
mov
out
push
xor
sti
test
adc
rclb
fmul
sub
pop
pusha
mov
xchg
sub
xor
push
inc
inc
pushf
lock
cs
test
and
or
pop
sub
xchg
push
cmp
mov
cmp
xchg
shll
add
scas
and
jle
push
scas
int3
scas
sahf
inc
sti
inc
ja
ja
sub
xor
and
or
dec
add
mov
or
and
adc
pop
push
mov
pop
lds
ljmp
lcall
sub
outsl
lea
ljmp
fs
popf
loopne
inc
cmp
pop
mov
daa
sub
mov
push
jp
fstl
dec
sbb
idivl
adcb
insl
fistl
popa
mov
cmp
aaa
sub
fsubp
pop
insb
mov
scas
into
rorb
call
addb
std
pop
sbb
add
sub
xchg
adc
je
pop
xchg
imul
dec
dec
pop
xor
pusha
push
add
xor
dec
jmp
adc
sbb
popa
push
sbb
xchg
lcall
lcall
cmp
cmc
lods
pushf
mov
pop
movsb
imul
shl
pusha
add
push
xchg
pop
lods
pop
test
sub
mov
inc
fcom
xor
push
mov
sbb
mov
inc
push
inc
shrl
xor
inc
sbb
mov
or
push
pop
mov
in
mov
or
or
data16
add
and
ss
xchg
ficomps
add
inc
jmp
jno
xor
lods
inc
insl
test
mov
add
imul
inc
jge
add
ljmp
mov
xor
cs
mov
add
sub
sub
data16
push
dec
adc
add
test
mov
or
pop
fadds
inc
aad
xchg
pushf
mov
mov
jg
pop
dec
mov
cmpb
and
xchg
cld
sub
jmp
pop
sbb
test
jge
push
mov
out
cld
icebp
in
inc
sub
dec
xchg
inc
cwtl
jne
sub
stos
mov
sarl
int
add
sub
sub
adc
pop
sub
xor
push
adc
btr
inc
ljmp
add
ss
add
inc
push
addb
add
inc
xor
mov
and
jmp
xor
pcmpeqb
dec
lahf
lods
add
adc
jge
adc
mov
xor
dec
nop
inc
add
rcll
pop
lock
mov
and
cli
pop
in
xchg
jge
jmp
in
std
jmp
push
or
push
sbb
jmp
jne
dec
pop
and
out
push
mov
push
insb
and
mov
add
jb
add
xor
rcll
inc
notl
mov
or
dec
inc
fsts
mov
push
jmp
lret
popf
sar
rcl
push
mov
pop
movsl
pop
leave
pop
cli
icebp
xchg
insl
or
sbb
push
mov
pop
pop
adc
stos
pushf
inc
push
inc
jnp
lret
and
clc
push
or
or
shll
inc
add
mov
xor
add
lret
aam
and
out
jg
repnz
pop
push
adc
mov
add
add
cli
mov
dec
inc
cmp
ljmp
jl
lgdtl
ja
aaa
not
movsl
add
enter
and
xchg
out
lds
jmp
cli
mov
pop
inc
or
das
or
pop
outsb
outsl
fs
add
or
sete
sbb
arpl
dec
mov
xchg
add
jno
je
add
push
clc
repnz
or
add
xor
test
ficompl
mov
out
fwait
in
push
or
je
adc
cld
xor
mov
and
dec
shr
aaa
jbe
cmpsb
add
push
inc
stc
mov
pop
push
lret
add
adcl
nop
cmpsl
mov
add
mov
loopne
dec
iret
inc
xchg
add
sub
inc
mov
xchg
mov
xor
popf
pop
mov
addl
and
mov
repnz
jne
pop
mov
sub
outsl
cld
aaa
adc
pop
orl
les
test
sbb
not
or
icebp
mov
pop
scas
popf
das
and
adc
popa
push
in
jo
or
and
icebp
sub
nop
addr16
pushf
cmp
lahf
xor
push
mov
daa
xor
and
push
adc
scas
cmpsl
sbb
xchg
aad
lock
sub
js
or
ds
shl
add
roll
push
test
push
daa
rorb
into
inc
adc
dec
mov
outsb
mov
add
out
shrl
pusha
clc
orl
dec
mov
aam
mov
jecxz
cmp
sub
or
inc
imul
cmpsl
dec
js
loope
pop
ljmp
sub
std
aaa
leave
ret
or
push
mov
mov
mov
mov
scas
fwait
nop
enter
adc
mov
inc
test
push
mov
and
adc
mov
hlt
es
addb
out
cmp
mov
test
jmp
pop
add
mov
popl
xor
leave
repnz
adc
mov
jmp
aas
xchg
rcll
ljmp
gs
add
dec
push
xor
loop
rcll
xchg
cmpsb
scas
and
ja
cmpps
push
les
test
in
jnp
mov
cmp
mov
sub
rorb
enter
pop
shlb
ljmp
jp
insb
cld
aam
mov
divl
ljmp
int3
mov
and
pop
or
rcrb
add
push
les
repz
imul
dec
lds
jmp
pop
mov
mov
sub
cmp
xrstor
enter
adc
or
add
cwtl
inc
pop
mov
adc
push
push
cmpsb
inc
pop
imul
daa
pop
sarl
push
adc
and
stc
mov
andb
mov
loope
cmp
out
pusha
lock
mov
mov
cwtl
jmp
mov
repz
pop
outsb
jb
shll
xor
pop
cmp
pusha
popa
jle
jp
das
xchg
and
push
sub
aad
push
movsb
mov
add
sub
sub
lea
mov
scas
mov
out
xchg
jmp
cltd
or
mov
or
or
push
dec
cmp
in
sti
shl
incb
pop
sub
cmp
lds
dec
pop
inc
jmp
push
or
inc
add
add
lock
mov
pusha
dec
sbb
add
gs
add
mov
rol
add
adcb
pop
mov
sub
or
jmp
xor
pcmpgtw
pop
dec
jmp
fadds
loopne
sub
call
inc
data16
inc
dec
cmp
sbb
cmc
fucomp
xlat
push
xor
pop
adc
sub
lds
popf
inc
fcmovbe
test
test
ret
inc
aaa
sar
mov
les
pop
popf
jo
daa
jle
fcompl
ficoml
lahf
das
or
jge
or
inc
pop
push
mov
testl
fcoml
mov
sub
pop
pop
fstpl
jnp
add
jmp
sub
in
in
jle
sbb
call
cmp
inc
add
mov
sub
mov
data16
lcall
mov
xchg
mov
lgs
out
cmpsl
out
dec
xchg
sub
pop
and
sub
and
scas
mov
pop
sub
push
cmpsl
and
xor
aaa
shl
ficompl
in
jns
jl
push
add
scas
sbb
push
inc
fsub
scas
jo
popf
push
shll
lret
adc
out
loopne
dec
and
add
cmpsl
inc
add
aad
fsubrs
imul
sub
daa
lock
jge
into
adc
jmp
addr16
test
push
dec
cmp
fcmovne
adc
bound
cmp
push
movsb
pushf
dec
xchg
mov
mov
shl
adc
push
loopne
add
push
add
mov
dec
out
cwtl
mov
push
or
push
rolb
jmp
add
mov
pop
push
aas
testb
sub
lcall
scas
or
mov
cmpsl
pop
mov
adcb
add
dec
out
inc
cld
out
int
lods
es
mov
inc
outsl
call
mov
add
jp
imul
into
sbb
push
outsb
xchg
pusha
jp
add
mov
jne
push
mov
mov
push
fwait
add
fisttps
rcl
inc
outsb
lea
jnp
dec
adc
or
sub
ret
or
pop
inc
add
jmp
xchg
pop
xchg
pushl
sbb
jne
or
dec
jge
mov
xor
loop
inc
push
inc
push
mov
push
mov
outsl
ja
js
jle
lock
mov
inc
shl
in
in
cmp
dec
jl,pn
add
jl
lods
jg
lret
xchg
push
insl
pop
ret
push
pushf
shr
jmp
jb
sbb
rcrb
cli
xchg
cwtl
loope
xchg
roll
popa
mov
rep
lods
fwait
nop
dec
fcoml
imul
rcll
les
lret
cmc
adc
or
xchg
stos
call
test
arpl
pusha
pushf
pop
inc
push
push
push
push
push
push
shrb
jmp
xchg
pushf
mov
pop
add
add
dec
sub
jmp
sar
inc
jbe
sub
cmp
pop
mov
jae
jg
adc
jno
jne
shr
xor
jmp
xor
sub
push
sbb
adc
sbb
sub
mov
add
inc
aaa
mov
das
jnp
jmp
pop
inc
pop
mov
push
enter
mov
xor
lods
adc
jne
sub
and
push
xchg
pop
jmp
je
std
pop
lcall
test
jne
cli
imul
dec
int3
clc
add
ret
and
add
mov
dec
shll
xor
call
movsb
inc
push
and
movsb
nop
inc
jmp
add
push
inc
add
inc
fidivl
shr
cmp
inc
or
into
sbb
pop
int3
insl
add
repz
test
dec
cld
sahf
movsb
les
adc
mov
sub
daa
fisttpll
and
adc
fwait
aam
xlat
aam
pop
fsubs
andl
jns
push
lret
xor
adc
jae
inc
inc
and
not
mov
dec
stc
and
jne
or
jmp
sub
xchg
inc
sub
mov
push
mov
inc
dec
lods
pop
dec
add
adc
xchg
push
xor
pop
ret
or
xor
mov
jmp
pop
push
aad
movsl
dec
pop
out
jne
outsb
dec
adc
xlat
adc
sbbl
cli
push
daa
sub
xor
jg
cs
lcall
add
pop
inc
fmuls
enter
inc
dec
xor
push
sarl
jge
and
es
fbld
clc
adc
mov
shll
int3
das
loopne
mov
xchg
push
xchg
inc
cld
test
lret
filds
inc
mov
cwtl
cmpsl
and
fucom
inc
outsb
stc
pushf
movsb
out
hlt
push
pop
pop
addr16
and
cmp
shr
mov
push
dec
test
add
lock
sbb
sahf
das
fnsave
cmp
les
ret
mov
popf
out
repnz
pop
or
inc
shr
mov
aad
add
sub
addr16
cwtl
jmp
hlt
sahf
dec
pop
mov
add
mov
in
das
or
add
sub
js
roll
xor
jle
xor
stos
mov
xchg
fst
lret
xchg
dec
mov
fidivl
mulb
pop
push
xchg
push
add
jl
stos
mov
xchg
flds
sub
pop
f2xm1
shrb
pop
pop
jmp
or
sub
push
dec
mov
inc
mov
stos
fdivr
cwtl
pop
adc
xchg
loop
ret
xor
mov
xor
inc
or
pop
fcoms
xor
lret
mov
ret
xchg
rorl
jb
pushf
dec
test
adc
in
aam
inc
xor
jnp
push
scas
cmc
mov
mov
add
cmpsl
adc
jmp
icebp
dec
pop
mov
push
mov
jmp
sti
mov
pop
sbb
out
mov
cmp
push
mov
jp
leave
push
lret
pop
dec
mov
push
mov
fidivs
dec
or
sbb
push
dec
mov
jbe
xchg
popa
scas
adc
jecxz
push
or
dec
call
or
loopne,pn
add
mov
lock
test
dec
and
daa
repnz
pushf
or
hlt
push
add
mov
jge
add
or
cli
xor
lret
mov
shr
sub
mov
and
add
xor
jmp
xchg
inc
mov
pop
clc
jno
cmp
cld
add
push
sub
xor
push
and
daa
pop
jmp
push
test
or
and
out
sti
xchg
adc
mov
loop
and
or
or
or
shl
pop
pop
dec
clc
jmp
pop
or
or
sahf
in
and
xor
cwtl
pop
mov
ja
repz
sbb
xchg
dec
cld
stos
and
fstpt
pusha
sbb
and
and
ror
and
dec
and
cld
sbb
push
inc
push
outsb
cmpsl
xchg
push
cli
lods
adc
shlb
inc
and
and
jl
jl
and
dec
pop
in
xor
pop
push
pop
pop
orl
xchg
mov
shl
inc
out
or
xchg
aad
repnz
mov
not
daa
dec
jbe
and
inc
sbb
and
clc
push
and
and
pop
ss
sub
mov
or
or
loop
xorl
and
je
push
jmp
imul
or
xchg
shl
rclb
jne
adc
fcmovnbe
cmp
test
loop
sbb
add
add
in
push
fldl
jnp
jge
iret
fistps
jg
out
add
pusha
inc
hlt
push
sbb
sbb
outsl
and
jae
into
mov
jno
pop
xlat
or
ja
subb
mov
jns
xchg
jbe
push
in
or
mov
repz
enter
neg
push
mov
rorb
in
push
mov
in
or
sub
mulb
jb
loop
lds
cmp
shlb
and
cmp
jmp
stos
add
push
sbb
jg
mov
mov
cmc
in
mov
xor
movsl
aaa
je
ljmp
mov
rclb
dec
stos
adc
loope
sub
iret
addb
pop
mov
loopne
and
notl
call
jl
add
sub
mov
bnd
out
stos
test
and
dec
das
popl
loopne
pop
jmp
inc
loope
call
push
add
pop
pop
sub
leave
mov
repnz
in
push
das
mov
inc
xor
fs
pop
xor
sub
push
inc
sti
sub
adc
mov
add
std
fistpll
mov
push
jecxz
ficompl
repnz
aam
jmp
xor
add
repz
add
inc
cmpsl
or
mov
jg
cwtl
idiv
jne
ficomps
sbb
jmp
mov
fs
mov
pop
dec
cmc
adc
cwtl
repz
xor
out
fnstsw
pop
std
pop
das
xchg
cmp
out
mov
and
das
shl
push
inc
pop
sub
jnp
pop
or
pop
into
lods
pop
mov
mov
pop
cmp
cmpsl
cld
lea
clc
jg
mov
and
dec
pop
push
faddl
pop
mov
xor
sbb
and
inc
pop
adc
cwtl
jmp
stos
sub
imul
and
sbb
jp
mov
loope
movsl
jae
cs
mov
adc
jmp
jne
cltd
xor
and
sub
outsl
popf
sbb
add
mov
sar
loop
jle
mov
imul
fs
dec
or
sti
pop
stc
leave
or
push
lcall
adc
jg
inc
sub
testb
add
xor
ljmp
push
jl
dec
push
adc
pop
mov
mov
or
inc
pop
sub
les
push
add
pop
push
mov
jae
mulb
pop
pop
andl
cmp
cmp
add
fldcw
addb
es
add
sub
sbb
cs
loope
fdivp
js
pop
cmp
iret
dec
hlt
pushf
roll
mov
adc
pop
fidivl
push
sub
pop
push
lods
pandn
popf
inc
mov
cmp
sti
dec
add
sbb
in
cmp
pop
and
pop
or
test
idivl
adc
or
sub
shl
inc
mov
mov
inc
sbb
popa
or
test
sub
ret
loop
cli
jg
mov
popf
sbb
sarb
xchg
inc
cmp
cld
bound
repz
cmp
dec
cli
or
loope
enter
lret
push
fs
fdiv
add
popf
or
dec
shlb
loope
push
or
insb
inc
add
aas
adc
scas
jmp
fdivl
inc
push
les
lret
out
out
jnp
repnz
rcrl
push
loop
loope
pop
sub
inc
repnz
int
mov
andl
xchg
or
stos
sub
inc
jp
aad
mov
ret
xchg
cmc
sub
testl
pop
push
add
es
xor
push
lahf
call
push
lds
pop
xchg
inc
inc
test
test
test
rolb
jmp
es
scas
add
mov
xchg
push
and
push
xchg
push
inc
mov
jns
iret
or
das
imul
mov
pop
cmp
jnp
mov
pop
dec
pop
adc
lods
mov
or
sub
mov
push
mov
xor
sbb
jmp
push
mov
or
cs
insl
adc
add
ret
into
inc
ds
adc
dec
ja,pn
fwait
or
xor
xor
push
mov
push
push
mov
dec
lret
ljmp
dec
sub
add
sbb
and
jb
pop
aaa
std
cmc
xchg
hlt
pop
dec
pop
mov
scas
add
shrl
mov
jnp
cvtpi2ps
vcmpps
dec
and
add
push
mov
dec
or
lcall
repz
or
stos
lret
and
jnp
push
fisttpll
dec
jae
inc
push
push
filds
sub
mov
lcall
cltd
pop
xchg
loopne
mov
decl
pop
ljmp
xor
add
jae
ljmp
clc
pop
test
fs
int
cmpl
and
pop
xor
pop
out
xorb
mov
ret
mov
sub
jae
dec
jmp
rclb
jge
xor
idivl
pop
inc
jmp
adc
inc
pop
outsb
fnstcw
inc
pop
cmp
and
jg
ss
fadds
test
dec
mov
push
jo
insl
cmp
rsm
test
add
push
mov
push
sbbb
xor
pop
xor
xor
cmp
shl
dec
sub
xor
das
ljmp
adc
push
cmp
pop
mov
loope
push
mov
mulb
xor
shr
nop
pop
adc
rcrl
mov
aad
push
in
mov
add
push
add
out
add
dec
and
lret
xor
roll
dec
repz
or
pusha
insl
pop
cld
cmp
cli
mov
dec
in
jns
repnz
cmp
push
or
jmp
sub
cwtl
cmp
dec
mov
or
pop
inc
cld
ljmp
scas
or
or
and
xchg
xor
mov
push
mov
xor
shl
pop
icebp
add
mov
in
lahf
fsubs
or
adc
loop
mov
test
imul
test
ss
push
adc
and
jno
pop
dec
sbb
push
sub
daa
lret
dec
daa
push
cltd
and
push
or
lock
pop
cld
mov
mov
rcrb
xor
xor
and
sar
aas
xchg
test
outsb
or
dec
or
inc
dec
xor
and
bound
add
adc
jbe
and
and
outsl
xlat
add
add
lods
cmpsl
shlb
push
shrl
aas
cli
dec
lret
jle
out
adc
cmp
stos
aad
call
int
outsl
mov
adc
inc
test
sti
cmp
sub
dec
insl
mov
stc
nop
jecxz
or
cwtl
ds
dec
sub
scas
or
repnz
and
jmp
clc
fisubrs
ss
push
lds
pop
iret
ljmp
push
jmp
jns
cmp
dec
mov
inc
push
mov
dec
sub
push
add
addb
das
xor
std
push
mov
iret
ret
and
push
ret
xchg
into
mov
mov
mov
pop
mov
mov
clc
repz
jecxz
inc
sar
dec
pop
sbb
in
pusha
mov
adc
cmp
fimuls
int
and
inc
stos
cmpsb
jo
xchg
je
adc
dec
and
sti
xchg
fldcw
es
scas
pop
loop
fistl
int
inc
inc
jmp
xor
ret
repnz
inc
adc
ret
flds
insl
aam
xchg
push
stos
int3
jbe
adc
popa
add
mov
scas
push
jmp
push
imul
jmp
push
loopne
push
push
jg
sarb
test
inc
xor
pop
add
or
adc
jp
sti
mov
aad
arpl
or
mov
cmc
sbbb
shr
or
push
push
bound
mov
mov
lret
jecxz
pop
or
adc
add
jmp
xor
push
mov
adc
push
pop
pop
push
jp
cs
push
lret
push
sub
or
jmp
jmp
sbb
jmp
sti
fiadds
gs
mov
enter
fmul
xchg
push
mov
movsl
xchg
testb
aas
jp
fisttps
dec
jg
jg
cmp
cmp
push
cmpsb
inc
add
into
mov
leave
xor
mov
mov
sti
inc
inc
imull
adc
add
shrl
out
je
add
adc
jo
arpl
hlt
mov
and
jle
sahf
xchg
subb
ret
gs
sub
leave
add
shl
insb
fwait
mov
push
shr
xor
jle
and
jge
and
and
lahf
pop
xchg
shll
pop
mov
jg
or
xor
addr16
mov
xor
ficompl
in
or
mov
cld
mov
jg
sub
bnd
lcall
scas
mov
daa
ljmp
hlt
test
mov
imul
push
add
jns
cwtl
loope
lret
mov
into
mov
call
and
test
repnz
dec
pop
leave
cli
and
push
cmovs
aam
xorl
pop
xor
pop
jbe
enter
sub
js
mov
adc
push
mov
pop
jecxz
or
adc
adc
lret
or
add
rol
daa
sbbb
incb
dec
stos
shll
jp
orl
and
push
sub
ja
out
pop
xor
push
mov
push
mov
inc
les
mov
sarl
mov
popa
inc
pop
imul
fstps
testb
cltd
xchg
ret
ret
test
cmc
rcrl
addr16
mov
cmpsl
rol
out
xchg
jno
sbb
pop
rolb
mov
push
jb
sbb
inc
add
push
ret
lcall
xchg
push
xor
jmp
push
sub
hlt
mov
cs
or
sub
daa
ret
xchg
push
pop
xchg
int
cli
arpl
or
subb
adc
out
sbb
negb
mov
jnp
je
addl
adc
fisttps
gs
negl
adc
in
add
pop
adc
inc
leave
adc
imul
or
decl
and
push
pop
jmp
add
add
sub
mov
add
pop
rclb
cmp
push
jbe
jmp
cli
out
add
mov
add
jmp
gs
lods
inc
loope
ret
cwtl
int3
push
push
testb
mov
sbb
inc
mov
lcall
and
cmp
push
xor
repnz
arpl
sbbb
js
xor
movsl
sbb
rolb
fs
jno
in
xor
add
add
push
xor
mov
int
aad
mov
stos
sarl
jmp
mov
rcll
insb
dec
adc
push
jmp
cmp
pop
lds
leave
insb
cs
es
pop
dec
adc
jmp
cmc
pusha
push
ja
les
ss
add
pop
cmp
mov
cmp
out
mov
or
mov
icebp
mov
ss
or
pop
or
das
add
dec
inc
outsl
jbe
jmp
adc
pop
leave
and
in
dec
xchg
stos
rcll
push
sub
outsb
je
rcrl
dec
add
cs
jle
data16
lods
inc
mov
mov
and
lock
lock
xchg
and
mov
int3
adcb
lock
hlt
jb
test
lods
lods
jecxz
sbb
fcoms
nop
movsl
add
add
sub
cmc
ret
in
out
mov
adc
pop
adc
push
xchg
jns
leave
add
add
pop
mov
sub
add
js
or
inc
add
sub
and
push
jmp
mov
jne
cltd
adc
dec
repnz
repz
mov
and
pop
inc
adc
and
cld
stc
movsl
inc
add
outsl
push
or
inc
or
iret
stos
dec
or
movsl
jg
cld
mov
insb
xor
fcompl
jnp
psubsw
ss
mov
js
repz
shr
sub
shl
add
xor
fiadds
mov
pop
pop
add
out
xor
outsl
mov
into
adc
push
xchg
inc
pop
jmp
stos
stc
pop
add
mov
inc
loope
mov
dec
sub
add
jmp
imul
xchg
dec
sbb
add
loopne
hlt
out
orl
push
dec
jb
dec
push
nop
out
pusha
cmp
cmc
das
xor
mov
push
imul
test
or
imulb
jge
test
loop
fcompl
sar
sub
fiaddl
fsubrl
dec
neg
pusha
add
add
rcll
mov
repnz
inc
xorl
leave
mov
sub
je
push
sarl
cmp
or
loope
push
sub
add
scas
pop
rorl
pop
push
mov
jge
mov
sahf
fcomps
mov
and
cmp
xchg
jo
xchg
push
sahf
cmp
insl
xchg
push
mov
mov
sub
movswl
popf
dec
loope
and
data16
sub
or
rclb
or
xchg
push
dec
xlat
pop
pop
xor
les
pusha
add
xchg
adc
sti
movsl
and
lea
add
jmp
stos
add
jp
dec
test
pop
gs
stos
in
into
xchg
insl
lahf
jbe
add
sbbb
mov
xor
cmp
shl
or
test
imul
imul
scas
or
bound
outsb
mov
adc
jge
movsl
lods
aas
adc
jecxz
cli
rcrl
scas
ffreep
mov
xor
xor
mov
sub
in
sub
and
idivl
dec
incb
das
inc
loop
ja
dec
jp
adc
cmp
push
or
lret
or
out
mov
addb
push
dec
jmp
jmp
adc
les
jp
sbb
add
sbb
cs
mov
fldcw
ficomps
dec
or
xchg
push
pop
inc
adc
std
xchg
fisttpll
fcmovnb
add
or
and
daa
stos
sub
test
ret
push
add
pop
enter
xor
insb
cld
push
test
inc
das
jno
mov
push
inc
xor
jecxz
adc
or
push
sbb
jmp
fistl
mov
fwait
jmp
jns
mov
jmp
out
sub
js
inc
xchg
shl
inc
jmp
push
push
mov
xchg
call
xchg
jae
mov
aad
jp
add
fs
mov
dec
lods
mov
call
push
repz
addb
mov
add
ljmp
inc
bound
mov
ror
mov
stos
pop
not
dec
andb
xor
push
cli
aas
jne
and
or
inc
leave
push
add
cmp
int
jno
and
aas
daa
mov
repz
add
cwtl
sbb
adc
jmp
popl
mov
sbb
sub
xor
sbb
push
jmp
or
into
mov
add
xor
pusha
xor
and
xor
mov
daa
dec
mov
push
inc
jecxz
aam
sbb
hlt
cwtl
mov
lock
cmp
pop
cltd
in
das
in
sub
mov
push
clc
jmp
xchg
popf
jg
ja
inc
xor
out
cwtl
mov
enter
das
pop
inc
push
out
pop
mov
jg
pusha
push
into
or
mov
add
mov
jmp
inc
repz
cli
dec
or
add
sub
shll
push
xor
lret
or
push
sub
insl
xchg
inc
subl
mov
in
mov
clc
inc
repnz
cwtl
jge
sub
sub
fcompl
shlb
lock
adc
pushf
pop
dec
push
mov
and
push
shll
sub
sub
or
pop
stos
enter
fmull
mov
mov
das
jb
out
ds
dec
jg
cmp
repnz
cli
gs
jp
adc
pop
dec
aaa
popf
mov
stos
lret
pop
mov
ret
push
call
sbbb
call
adc
mov
imul
lds
addb
add
push
inc
push
leave
jp
xchg
aad
pop
pop
push
or
call
push
insb
mov
addb
sbb
std
lret
cmp
lods
push
adc
rorb
inc
dec
stos
out
or
sub
adc
dec
and
fucomp
js,pn
jmp
push
aaa
xchg
insb
test
test
mov
dec
stos
fwait
mov
insb
pop
push
adc
dec
cmp
test
adc
mov
incl
sahf
or
pop
popf
decb
inc
jmp
push
jnp
jo
cmp
mov
mov
flds
cmc
and
jmp
jae
sub
aaa
mov
add
shrl
or
not
setae
repnz
dec
push
push
and
loope
mov
adcb
push
adc
popa
aas
pusha
pop
sahf
pop
pop
mov
sti
xor
dec
fists
jg
adc
adc
mov
into
stos
jle
movsb
cmp
xchg
inc
enter
inc
push
test
sahf
fdivrs
loopne
fstpl
or
out
jmp
mov
or
fldenv
add
gs
inc
sbb
xchg
jge
mov
push
inc
popa
adc
jo
icebp
or
jg
jo
xchg
mov
aad
jnp
jmp
gs
ss
add
dec
cmpsl
lahf
andb
rcl
jnp
aam
mov
xor
lret
ret
add
clc
aaa
sbb
test
xchg
jmp
cmp
jmp
clc
and
sti
ficompl
sbb
js
cmp
inc
push
sbb
mov
mov
loope
adcb
sbb
stos
mov
mov
pop
loopne
movsl
outsl
in
pop
ret
shr
or
xchg
adc
add
fs
xchg
mov
loop
int3
mov
pushf
lods
and
sti
js
ja
scas
cmp
dec
mov
mov
jmp
jno
inc
das
sbbl
mov
aas
or
mov
sbb
in
sarb
xlat
cmpsl
cmp
sub
ljmp
sub
mov
sub
cmp
sahf
cmpsb
mov
mov
shl
out
js
xchg
pop
decb
mov
sbb
imull
leave
fbld
out
pop
imul
push
push
pop
pop
jns
adc
xor
push
shr
out
dec
xor
mov
jns
lret
mov
fwait
dec
icebp
mov
push
fcomps
iret
pop
inc
jge
ret
out
inc
add
idivb
push
data16
cwtl
mov
out
addr16
mov
dec
leave
mov
and
jno
add
or
or
hlt
jg
adc
dec
xchg
sbb
ret
dec
test
loop
fiaddl
pusha
jge
mov
mov
xor
lret
or
jl
xor
test
jle
pop
mov
adc
push
and
dec
bound
dec
pop
jmp
and
xchg
pop
iret
push
adc
fnstsw
xchg
sbb
xchg
or
sarb
icebp
or
or
sub
loope
div
inc
outsl
xor
lock
pop
cld
xchg
xor
movzwl
hlt
push
mov
mov
movaps
hlt
mov
mov
rcrb
mov
icebp
cmp
and
push
sub
loopne
sub
lret
cmp
ret
mov
jo
or
jmp
fistpl
adcb
add
adc
ja
push
adc
mov
nop
dec
cmpsl
push
popf
push
sbb
mov
and
jmp
imul
daa
aaa
out
gs
cmpsb
cltd
xor
dec
scas
into
jmp
adc
or
aad
add
das
dec
add
adc
pop
push
mov
jl
push
xor
mov
sub
sub
movsl
aad
and
jmp
dec
test
es
inc
xor
cld
out
pop
test
add
js
rorb
call
mov
bound
pushw
mov
test
sub
les
lea
jne
loopne
and
inc
adc
shlb
hlt
push
add
xorb
jo
or
xor
std
das
inc
adc
movsb
inc
notl
jp
and
or
push
adc
incl
jb
lret
pop
sub
pop
and
setae
into
ret
mov
jno
pop
stos
pmaxub
cmpsl
pop
or
pop
xor
push
sub
push
popa
mov
mov
out
mov
dec
sub
add
xorl
lret
out
jne
ret
sub
fnstcw
pusha
dec
fdiv
mov
pop
cwtl
sub
pop
pop
imul
push
sbb
or
xchg
mov
push
mov
jbe
adc
sub
popf
xor
pop
scas
push
inc
jno
cmpsb
xchg
xchg
add
movsb
cmp
or
jp
sub
ljmp
inc
push
movl
jo
push
out
or
pop
xor
push
inc
push
inc
aam
lods
xchg
xor
seto
imul
into
mov
and
or
mov
push
js
push
adc
cmp
dec
add
inc
or
popa
ja
dec
jmp
adc
pusha
sti
cmp
inc
mov
mov
lahf
fisubrs
arpl
pop
inc
mov
stos
and
lret
roll
lahf
cmp
clc
stc
push
push
clc
push
xchg
jge
mov
cmpsl
enter
adc
aaa
mov
push
fistps
mov
adc
and
mov
movsb
adc
repz
sbb
cmp
and
shr
push
add
popa
int
xchg
add
cmp
movsb
mov
cli
and
and
out
hlt
testb
xchg
jne
and
pause
stc
xorb
test
aam
test
pop
outsb
adc
add
lock
js
rorb
pop
out
pop
inc
or
cli
push
inc
push
icebp
sub
movsl
inc
leave
lcall
or
or
add
and
repnz
sub
fsts
inc
adc
jle
push
repnz
out
popf
push
hlt
cmc
mov
push
jns
dec
ljmp
adc
daa
xchg
dec
addl
mov
insl
sbb
rorb
jge
fs
shrb
cmpsb
pop
addr16
mov
enter
fstpl
jl
push
or
inc
pop
fldl
xor
pop
nop
adc
push
pop
sub
inc
pop
xor
jbe
add
pop
stos
ja
movsl
push
jno
add
fsincos
stos
mov
jge
idivl
push
sub
mov
adc
dec
sbb
pop
pop
rcll
loope
inc
push
lods
clc
outsb
pop
push
mov
add
fisttpll
and
xchg
mov
leave
add
sbb
or
add
push
jmp
mov
mov
xor
imul
ret
sub
or
adc
fstpl
or
inc
sbb
push
or
sahf
and
pop
ret
jbe
clc
cmp
add
and
test
xchg
scas
icebp
lds
nop
push
mov
lret
jmp
test
inc
clc
xlat
or
sbb
and
or
dec
shl
div
sub
fcoms
mov
or
test
arpl
divl
push
pop
pop
popa
imul
mov
sbb
push
mov
pop
mov
xchg
jbe
out
addb
int
dec
xor
and
in
push
jg
add
xor
scas
cmp
ja
adc
shr
mov
psrad
ss
dec
int
ja
popa
lds
inc
push
mov
jb
clc
and
inc
adc
and
inc
jns
dec
daa
adc
sbb
push
mov
add
mov
push
testl
push
nop
lret
push
xor
ds
mulb
cmp
dec
popa
scas
push
ret
mov
jae
sub
or
rcll
mov
mov
jg
jmp
lock
cld
mov
incb
cmp
push
jecxz
lret
ja
push
mov
aad
sti
xchg
mov
push
cmp
cmp
adc
push
loope
out
cmpsb
cmc
aaa
cmp
jne
xchg
xchg
shll
dec
mov
ljmp
jns
ds
add
loop
jmp
pusha
lret
sbb
es
cld
cltd
mov
sub
loop
icebp
pop
dec
rcrb
inc
dec
or
ja
xchg
cmp
or
pushf
xchg
lea
and
push
mov
or
mov
cmp
sub
dec
das
mov
and
or
push
mov
push
sbbl
aad
pushf
int3
sub
dec
jmp
push
mov
pushl
mov
push
mov
and
nop
pusha
inc
bound
jmp
imul
pop
and
adc
or
std
adc
rcrb
aam
cmpsl
xlat
mov
ss
pop
mov
mov
mov
mov
or
or
nop
sahf
add
shrb
cmp
add
add
pop
pop
mov
push
xchg
in
out
sub
add
and
inc
out
sub
push
repz
and
adc
mov
les
xor
adc
mov
jge
and
popa
out
dec
iret
lea
jmp
mov
add
jecxz
inc
subl
push
or
sbb
push
push
jmp
call
mov
mov
xor
pop
cmovp
mov
and
cmc
pop
jno
pop
jmp
out
jl
jmp
pop
and
lods
mov
jg
adc
sbb
mov
les
clc
int
xor
mov
bound
cmpsl
xchg
push
lds
lds
mov
pop
add
into
popf
sub
sub
lret
pop
adc
cmp
pop
jnp
jge
das
pop
sub
push
jmp
cmp
jp
add
push
or
push
pushf
enter
xchg
pop
lret
ficoml
cmp
es
mov
push
mov
pop
xor
mov
jle
leave
jle
int
jo
or
cmp
flds
pop
test
mov
xor
loop
xchg
adc
fs
mov
lcall
and
pop
pop
jns
push
xor
repz
lahf
pop
sahf
add
movsl
and
jle
inc
cltd
pusha
inc
mov
mov
clc
gs
test
pop
cmp
xor
add
rolb
in
push
arpl
jbe
cli
cld
lret
inc
sub
push
mov
test
jecxz
adc
lahf
pop
push
into
movsb
out
mov
pop
add
and
std
das
pusha
cld
iret
cmpsl
js
out
push
movsb
jo
ret
scas
jne
popa
daa
hlt
and
push
fs
test
fisubs
cwtl
jg
xor
lahf
loopne
push
mov
cmp
clc
pop
not
mov
aam
push
mov
xor
xrelease
movsb
adc
add
pop
xchg
mov
and
adc
push
inc
mov
xor
add
std
insl
in
sub
jl
ret
push
inc
mov
icebp
jg
arpl
push
stos
push
push
or
or
push
and
lret
or
xchg
dec
push
push
mov
sub
pop
push
pop
shr
rolb
dec
js
dec
pop
adc
jb
arpl
pop
in
aad
movsb
cli
mov
shrl
xchg
repnz
stos
sbb
jle
je
push
scas
shll
sar
jle
xchg
add
popa
lods
out
ret
and
addl
insb
dec
fldenv
sub
push
repnz
cmc
inc
and
in
dec
sub
pop
test
stos
fcmovnb
sub
jl
xchg
sub
pusha
pop
testb
pop
dec
test
shr
add
pop
lods
iret
xchg
out
dec
bound
not
stos
daa
pop
dec
jge
stos
js
subl
sbb
or
test
inc
faddl
xlat
ja
push
repnz
push
testl
mov
inc
and
cmc
in
and
sti
jmp
add
mov
das
cs
or
push
and
cli
out
jns
nop
testl
mov
ficomps
jns
movsb
adc
insl
jo
push
cs
or
ljmp
dec
pop
je
push
rcrb
pop
jge
jnp
push
sub
jb
mov
std
jns
shl
fisttps
push
dec
jmp
cli
pop
sbb
loop
mov
enter
out
dec
pop
inc
xor
divb
adc
cli
mov
mov
adcb
or
pop
cmp
xlat
jmp
adc
jmp
mov
loopne
inc
jmp
or
jae
addr16
sub
sbb
cmp
shll
mov
scas
adc
call
or
push
testl
enter
sub
fdivrl
add
or
ds
sub
xlat
ds
shll
add
subb
mov
cmc
cmp
add
sub
adc
adc
mov
jp
sti
mov
inc
push
stos
cltd
sub
rol
cmp
push
mov
das
jb
adc
nop
sbb
inc
sbb
sub
sbb
xchg
mov
lahf
or
inc
mov
xchg
xchg
les
and
jl
clc
sbb
or
sub
sbb
and
dec
pop
stc
ret
or
sbb
sub
sbb
and
or
cs
scas
std
mov
and
test
repz
add
ss
and
inc
out
in
xor
mov
or
call
pop
scas
add
fs
add
imul
mov
dec
imul
add
stc
cld
push
add
xor
push
xchg
xorl
adc
jb
mov
iret
dec
out
lcall
mov
jb
scas
sbb
int
inc
or
rorb
mov
mov
jmp
repz
mov
dec
in
add
jmp
sbb
fistl
jmp
fld
bound
sahf
xchg
mov
jns
mul
add
and
adc
add
mov
aad
push
push
sub
add
sbb
sub
das
jmp
pusha
sbb
or
dec
pop
push
add
repnz
popf
adc
or
pop
sbb
sub
leave
dec
mov
pop
addl
or
lret
mov
push
jmp
subb
cmpsb
mov
fnstenv
xchg
add
pushaw
and
inc
adc
scas
sub
add
mov
test
or
adc
mov
add
shrl
jb
outsl
add
cmp
bound
or
add
mov
nop
and
cli
sub
push
adc
mov
loop
jge
mov
rorl
call
dec
add
mov
inc
pop
int
and
imul
ds
mov
jbe
adc
add
xchg
add
dec
hlt
push
pop
push
dec
push
cs
inc
fstl
test
mov
mov
pushf
scas
cmp
dec
dec
jo
push
push
jmp
add
adc
les
xor
sub
daa
dec
leave
sub
xor
jbe
sbb
lret
xchg
mov
stos
sbb
aam
out
mov
adc
sub
xchg
int3
or
mov
outsl
dec
shll
mov
repz
jmp
mov
push
dec
daa
ret
imul
inc
dec
and
jne
or
pusha
imul
xor
pop
jbe
fxch
or
repz
sub
test
lock
mov
or
ret
cmp
xchg
mov
daa
xor
sbb
cmpb
addl
ja
std
inc
add
sbb
jmp
jmp
adcl
mov
mov
or
push
push
gs
imul
sarb
push
dec
cwtl
inc
add
add
xchg
fidivs
push
xor
div
sbbl
out
testb
std
push
inc
and
push
adc
imul
mov
add
xchg
add
dec
sub
cmp
add
xor
jbe
pusha
add
pop
sti
and
cs
mov
daa
pop
cmpsl
sarl
pushf
sbb
aam
mov
sub
mov
jb
in
popa
xchg
scas
rorb
jp
mov
and
fisubrl
dec
mov
xlat
nop
inc
ja
fimuls
cltd
andl
inc
les
pop
pop
jo
push
add
mov
test
xor
out
and
scas
cld
sub
popf
inc
orb
fwait
pop
jecxz
loop
test
rcrb
popa
inc
cmp
xchg
shr
push
loope
add
aaa
xor
xchg
in
xor
testl
sbb
sub
mov
mov
jne
dec
sbb
jb
loop
xchg
push
and
pop
cltd
outsb
jmp
jnp
lret
hlt
or
jns
or
xchg
es
cs
xchg
or
ret
cmp
inc
adc
data16
mov
std
inc
call
jbe
pop
mov
push
stc
add
mov
xor
jmp
mov
push
hlt
fldl
sub
jo
sub
dec
add
jmp
xchg
cmp
jmp
ds
xchg
test
fidivs
mov
inc
or
stc
mov
aad
jl
pop
pushf
push
jg
and
jp
and
imul
jge
cmc
mov
scas
inc
lds
iret
push
sub
or
in
das
std
outsb
dec
cmpb
test
pop
stos
sub
push
imul
push
movsb
scas
mov
pop
mov
ds
pusha
cwtl
pop
sub
lret
daa
pop
stc
repz
bound
and
jnp
dec
outsl
pop
pop
mov
dec
xor
add
pop
sarl
xchg
cmp
and
xlat
lock
leave
out
push
mov
xchg
ret
aaa
jbe
cmp
adcb
cs
popf
jae
push
out
rcr
add
jmp
cmp
loopne
cwtl
fistpl
add
mov
out
addb
mov
jmp
popf
inc
push
add
jge
lahf
in
mov
popf
dec
pop
scas
das
or
jmp
mov
pmulhuw
xor
add
enter
dec
into
pusha
xor
add
and
xchg
popf
inc
int3
cld
inc
stos
jo
data16
cmp
fdivrp
div
int3
mov
inc
push
xor
pop
mov
lds
mov
cmp
xchg
cmp
push
fwait
rolb
mov
jle
sub
mov
or
repz
and
jmp
mov
sub
dec
or
mov
in
push
push
adc
and
out
pop
popf
jne
xorb
cmp
aaa
push
nop
dec
adc
sub
jle
inc
add
mov
pop
aas
or
cmc
pop
incl
test
add
pop
jmpw
sub
repnz
pusha
sbb
sub
mov
enter
adc
lock
int
daa
sahf
xor
div
rorb
idivb
add
lods
scas
aam
mov
jmp
pushf
jg
repz
insl
loope
inc
divb
pop
sub
add
mov
add
push
lcall
push
fwait
add
pop
pusha
push
fs
loope
cmp
jge
loopne
ret
in
cmpl
lcall
sahf
jae
pop
xchg
pusha
or
xchg
cmpsl
sbb
fnstenv
add
dec
pop
mov
pop
mov
push
mov
xor
push
sti
mov
es
rolb
js
jnp
push
pop
sbb
adc
or
pmulhw
jns
inc
scas
sub
pop
adc
cmp
sti
pop
inc
mov
pop
xchg
loopne
mov
or
test
pop
mov
jg
inc
ret
push
sbb
cs
rcrl
fdivl
cwtl
ret
mov
outsl
and
xor
stos
imul
push
mov
dec
adc
in
mov
mov
dec
jp
fistps
cmpsl
fstl
lods
jb
in
movsl
or
andb
inc
mov
repnz
and
adc
pop
add
jge
xor
pop
sub
std
xchg
mov
sub
or
push
rolb
jmp
dec
mov
jge
test
cmp
mov
mov
jns
jae
sbb
pop
out
adc
out
cmpsl
out
jne
shrl
adc
popfw
jmp
icebp
mov
add
sub
mov
sbb
cmpsl
xlat
lea
jp
fiadds
sub
push
mov
sub
inc
push
cwtl
js
inc
es
and
adc
cs
push
mov
test
das
shrb
sub
push
jmp
out
gs
out
enter
stos
mov
dec
mov
out
and
or
lock
jmp
jb
pop
or
jmp
pushf
sub
add
aas
sbb
mov
add
es
xchg
fnstsw
movsb
f2xm1
push
ds
push
xchg
jmp
pusha
fcmovnb
jo
aas
aaa
imul
pop
or
adc
push
jge
icebp
mov
jne
inc
xchg
push
cmp
xor
dec
repz
and
and
inc
push
add
cmp
jmp
pop
cwtl
mov
aaa
lahf
mov
test
push
mov
cli
dec
sub
xor
pop
cmp
xor
cmpsl
and
jp
adc
mov
mov
cmp
push
out
setae
push
loop
jne
or
xchg
or
insl
and
nop
jge
fisttpl
add
mov
push
jle
sub
stos
idivb
pop
push
fidivrl
adc
pcmpgtd
sbb
push
popa
loope
loope
add
xchg
push
inc
daa
aad
adc
pop
add
xor
loop
into
aas
neg
scas
ficompl
sbb
sub
orl
mov
dec
das
add
scas
push
or
inc
nop
cli
movsb
das
dec
jg
pop
inc
pop
add
fsubr
adc
pop
mov
mov
aas
and
sahf
pop
xchg
add
or
enter
out
xchg
mov
ret
out
mov
jmp
add
outsb
outsl
pop
inc
pop
inc
add
sub
jmp
inc
sbb
dec
mov
or
test
pop
xor
dec
bswap
test
xchg
or
aaa
loop
cmp
stos
aaa
pop
ret
fidivs
aam
sbb
jp
xor
pop
push
cwtl
sbb
jne
imul
jle
dec
jge
push
or
test
das
add
ja
in
pop
jne
push
cmovl
sub
lods
filds
jnp
test
xor
stos
mov
inc
test
jl
out
jae
call
cmc
jle
mov
mov
add
xor
inc
add
adc
shrl
jmp
ljmp
sbb
inc
js
cmp
movsb
pop
mov
sbb
arpl
rorb
mov
push
push
jmp
jne
or
fiaddl
dec
pusha
aaa
or
imul
sbb
in
out
jge
xor
sub
adc
jmp
mov
vaddpd
test
leave
sar
dec
add
jle
in
and
mov
in
aas
dec
les
xlat
in
aam
std
stos
add
mov
adc
rolb
add
adc
or
sbb
or
or
in
push
xor
fwait
jo
or
imul
and
or
out
xchg
adc
jne
lret
xor
imul
cmp
xchg
mov
fisubrs
push
sbb
inc
push
int3
mov
mov
pop
mov
stc
pop
jmp
xor
int3
xorb
loopne
ret
push
pop
and
xchg
jl
test
leave
lea
fwait
sbbl
out
dec
jae
sub
add
ret
inc
pop
or
push
pusha
mov
in
pop
icebp
push
fists
das
in
lret
loop
lock
rcrl
inc
int
add
add
add
test
push
repz
push
push
push
add
xorb
jmp
add
testl
cmp
inc
or
jbe
pop
jmp
aaa
push
popf
inc
or
jle
sbb
sub
inc
or
std
or
or
jmp
nop
aam
imul
jge
push
loopne
sub
and
mov
fimuls
jae
fistpll
jmp
jge
sbb
add
xor
andb
or
cmpxchg
mov
rolb
sbb
stos
jns
sub
test
mov
push
sub
or
or
jge
and
cmp
icebp
cmp
and
pop
jge
dec
add
leave
xor
aas
inc
lock
sahf
test
fistps
xchg
test
aam
scas
js
jmp
mov
outsb
dec
inc
jo
mov
jecxz
push
jmp
push
test
and
add
ret
inc
inc
je
mov
and
pop
scas
mov
pop
test
rolb
sub
push
out
and
cmpsl
out
mov
mov
mov
or
and
insl
mov
cli
inc
popf
dec
mov
mov
pop
lock
pop
sbb
outsl
movsb
sub
push
stos
mov
dec
push
jbe
xchg
adc
push
push
daa
pop
out
cmp
cmpsb
cs
mov
sbb
int
adc
loope
and
dec
cmp
nop
or
shll
fs
loop
xchg
push
sarl
mov
cld
add
xor
outsb
icebp
jbe
or
mov
mov
push
loopne
sub
hlt
rorl
push
inc
mov
icebp
es
or
les
adc
mov
jg
repnz
or
es
js
daa
fcmovnb
decb
jo
inc
int3
ss
dec
fbstp
add
inc
cmpsb
scas
push
incl
loope
mov
add
push
sbb
jp
adc
push
bound
or
pop
mov
and
add
cmpsl
stos
test
xor
imul
or
jmp
rolb
dec
push
daa
sub
test
add
imul
or
jbe
out
movsb
xor
fsubr
inc
mov
movsl
insl
dec
sub
jecxz
or
pop
add
adc
and
std
aas
xchg
clc
xchg
addb
push
pop
push
push
aad
fisttpl
jle
cmp
icebp
or
imul
push
int
xchg
mov
fcompl
mov
pop
pop
add
or
lods
jle
add
out
shr
pop
pop
imul
lods
divb
dec
nop
bound
push
pop
xor
adc
test
cmpsl
iret
test
lea
or
les
insl
cmpb
cmp
push
adc
inc
movsl
loopne
sbb
lea
push
jno
cmp
repnz
sub
or
add
adc
mov
daa
hlt
inc
fsubrp
pusha
add
daa
das
sahf
adc
adc
mov
pusha
jmp
std
imul
pop
xor
mov
push
ljmp
adc
sub
and
repnz
pop
loop
mov
jo
push
lods
add
lds
daa
je
pop
lods
adc
jg
sbbl
xchg
cmp
lock
add
or
shlb
and
mov
repz
sti
push
push
push
or
loopne
loopne
mov
loopne
andb
sub
stos
lahf
sbb
or
push
mov
shl
xchg
aad
rol
or
pop
pop
imul
and
xlat
clc
mov
cmp
hlt
sub
and
outsl
mov
push
sarb
dec
inc
scas
fmuls
jg
loope
sub
jmp
lahf
and
std
es
xchg
cmp
pop
adc
icebp
sbb
mov
dec
mov
cmp
movsl
jns
je
add
push
mov
mov
or
mov
jmp
arpl
push
cld
rol
jmp
insb
sahf
jmp
mov
cmpsl
rcrb
lret
mov
movsb
sub
in
xor
push
clc
adc
mov
and
or
adc
aas
lods
movsl
daa
mov
scas
jecxz
dec
orl
scas
rclb
clc
add
mov
ret
sahf
aaa
pop
mov
cmp
dec
dec
inc
test
ret
rcl
jle
pop
into
scas
daa
mov
adc
cwtl
loope
sub
rclb
sub
in
xchg
xchg
gs
popa
add
add
loopne
fs
adc
jno
add
mov
mov
xor
inc
stc
imul
dec
es
push
dec
dec
jp
dec
pop
clc
jg
mov
dec
sbb
mov
inc
lock
and
sahf
add
cmp
aad
dec
jmp
and
stos
cmpsl
pop
les
sbb
ds
and
or
and
or
and
rcr
push
jg
sub
dec
jne
add
mov
arpl
add
popa
mov
rorl
test
sub
sahf
inc
dec
adc
xor
jo
cwtl
addb
rorl
mov
movb
push
mov
in
xor
rcrb
test
in
dec
test
popf
sub
jmp
mov
repz
lock
and
xchg
fisubrl
rclb
xor
cmpsl
or
jg
sbb
pop
icebp
incb
adc
pop
pop
aad
lret
mov
push
js
test
push
dec
outsl
rcl
aam
adc
mov
ret
push
push
out
hlt
cmp
mov
mov
inc
sbb
shlb
and
dec
mov
pop
sbb
movsb
outsl
pop
xchg
add
sub
xor
mov
and
xor
jb
mov
push
and
cld
add
dec
data16
push
dec
add
mov
cmp
loopne
cmp
lea
test
cmpsl
test
mov
adc
pop
jo
pop
dec
push
push
cmp
pop
flds
push
jns
xchg
cwtl
out
sub
andl
hlt
and
das
fmul
fistl
popa
movsb
sti
ds
jns
pop
cwtl
push
and
in
cs
mov
adc
pop
test
cmc
test
loope
insb
int
loopne
add
dec
cwtl
xor
sbb
xchg
daa
sub
add
repz
test
mov
ja
add
out
or
xchg
add
mov
sar
cltd
lret
sub
inc
les
fstsw
lahf
pop
push
push
int
add
shlb
shll
push
adc
mov
sub
and
and
je
shl
add
enter
sbbb
push
movsb
xchg
fidivs
inc
push
pushf
cs
lret
adc
loop
pushfw
add
cwtl
mov
lea
pop
ja
add
jo
xchg
sub
shll
inc
adc
and
jae
sub
inc
cmp
dec
fisubrl
std
mov
les
addl
mov
pop
push
leave
jbe
or
stos
sub
and
sarl
rorb
pusha
pop
dec
jnp
pop
test
and
incb
fstpt
enter
ds
bound
pop
jae
cmpsb
add
call
push
adc
sti
mov
xchg
add
mov
and
push
add
jne
lods
sub
xor
cmp
js
xlat
jmp
mov
loope
xor
test
push
mov
imul
adc
dec
mov
cli
loope
jnp
or
pop
test
cmp
movsb
cmpsl
jne
jmp
out
inc
ljmp
addr16
js
xchg
add
push
subb
faddp
aas
add
add
cld
leave
sub
ljmp
pop
xor
enter
icebp
incb
je
pop
adc
sub
push
jge
pop
shll
call
jle
pusha
jg
add
or
es
add
stos
pop
into
mov
divb
add
push
fbld
std
adc
and
jne
jbe
add
aaa
or
xor
fcompl
xor
lods
dec
adc
sbb
ret
popa
push
xlat
pop
add
push
push
mov
mov
jbe
popa
imul
cmp
mov
jns
pop
push
sbbl
mov
add
les
adc
test
jg
in
int3
imul
inc
sub
sbb
sub
inc
je
imul
aam
icebp
push
inc
rclb
popl
push
sbb
not
or
cmp
and
jne
fs
test
data16
xchg
scas
jg
sti
aam
sbb
and
jl
sbb
push
push
neg
add
fbld
push
xor
dec
sbb
xchg
pop
mov
mov
das
mov
sub
cmp
and
movsl
bnd
sub
or
add
imul
aam
ljmp
mov
addb
dec
and
pop
and
jge
jne
insl
fisubrs
adc
xchg
sar
xor
loopne
sub
push
pop
repnz
push
imul
jbe
roll
addb
mov
gs
sub
push
lds
aas
or
out
jmp
neg
or
jno
shr
xor
jle
jge
mov
and
imul
mov
sub
jno
in
and
test
jge
aad
dec
add
test
push
mov
xor
pop
pop
ret
int
loop
pusha
inc
lret
adc
push
nop
pop
sub
and
push
ljmp
inc
mov
add
adc
sub
test
and
or
scas
jae
pop
shrl
out
dec
aaa
jl
subl
aam
adc
jmp
pusha
ss
and
or
lods
xchg
mov
jp
dec
subl
push
xor
fsts
into
jecxz
xor
or
enter
xchg
xchg
or
divl
dec
andb
jmp
movsb
mov
push
insl
jmp
xchg
xchg
or
stos
lret
mov
sub
push
test
adc
inc
push
jmp
rorl
mov
mov
pop
xor
mov
adc
movsb
lods
mov
in
pop
mov
lds
mov
insb
movsl
cmpsl
add
mov
mov
clc
xor
inc
or
leave
mov
pop
push
xor
cmp
pushf
jmp
inc
push
add
lods
aam
jmp
mov
sahf
sahf
adc
movsl
data16
and
cmp
mov
in
jno
inc
add
push
sbb
loop
js
sbb
dec
sarb
push
sub
push
pop
push
out
inc
push
push
mov
es
dec
and
sbb
dec
test
and
xor
ret
fidivrs
pop
sahf
icebp
out
xchg
leave
daa
sbb
roll
jmp
add
and
in
mov
lcall
addr16
mov
cld
cmpsb
loopne
fistl
mov
jl
js
ret
dec
push
outsl
add
push
or
adc
cmpsl
xchg
add
jle
sbb
mov
arpl
add
lds
mov
lret
xchg
fmull
cmc
scas
inc
cmpsb
xchg
loopne
je
dec
push
aam
mov
inc
or
add
lds
dec
test
push
scas
iret
sub
xor
repnz
lock
fdiv
sub
test
inc
jg
mov
mov
xor
pusha
or
add
pop
xor
clc
scas
gs
jnp
sti
sub
idivl
adc
fwait
sbb
ret
mov
cmp
mov
pop
sub
lahf
mov
jnp
push
fdivrs
punpckldq
or
jmp
imul
mov
jbe
bound
pop
int3
and
rol
ret
add
outsl
push
clc
inc
jae
pusha
cmp
mov
xchg
sub
aad
push
cmp
xchg
loopne
sbb
inc
or
push
cmc
pop
jne
cld
mov
les
call
mov
outsb
cltd
lods
das
mov
mov
lahf
or
jmp
cmc
fs
ja
jbe
orb
loopne
xchg
roll
push
iret
mov
and
in
fidivl
aam
push
pushf
jo
push
pop
pop
sub
jg
lds
pop
xlat
out
mov
adc
iret
inc
xor
pop
rcl
xor
jmp
push
repnz
and
lret
push
jmp
inc
arpl
dec
lret
js
int3
test
dec
clc
sub
outsb
and
mov
test
or
sbb
jg
jo
mov
fistpl
adc
int3
adc
add
xor
stos
clc
lods
in
inc
ret
out
iret
repnz
lds
xlat
mov
lods
push
mov
jg
lods
les
adc
dec
aas
dec
cmc
ja
sbb
add
cmpsl
or
mov
cmc
cmp
popa
bt
sbb
adc
mov
jns
jo
jns
andl
jo
dec
clc
xor
xorb
sub
in
pushf
adc
mov
test
mov
out
imul
or
jecxz
add
repnz
nop
lods
pop
movsb
pop
jmp
les
push
pop
test
and
and
hlt
mov
cmpb
mov
inc
adc
or
std
scas
popa
aaa
in
std
loopne
pop
sbb
inc
or
sti
and
jb
ljmp
add
test
out
sub
pop
out
jnp
and
or
outsb
sub
ret
sbb
or
insb
mov
data16
inc
stos
lahf
inc
jmp
add
push
lock
cmp
sti
jne
fsub
mov
mov
inc
in
push
insb
cmpsb
and
sarl
xchg
in
adc
out
pop
test
leave
inc
cmp
cmp
arpl
add
xor
imul
das
out
push
dec
dec
jmp
fstl
cmp
add
pop
mov
mov
sbb
mov
loop
mov
push
sub
sub
mov
enter
or
dec
lods
xchg
pusha
mov
mov
dec
inc
stos
mov
add
add
push
sub
mov
cmp
jno
xchg
testl
push
jmp
xor
pop
push
xchg
or
or
shlb
adc
dec
pop
repnz
sub
js
and
cmpl
sbb
cltd
pop
inc
stos
cmpsl
push
sub
mov
pop
shlb
repnz
pop
jns
sub
arpl
adc
dec
add
not
scas
add
dec
add
adc
out
shr
sub
or
aam
cmp
rorb
mov
cli
add
jns
imul
cmc
daa
push
xchg
sarl
mov
inc
pop
sub
push
push
mov
push
pop
imul
add
jb
mov
jmp
push
std
mov
lahf
adc
int3
rcrl
rcrl
or
jle
loop
imul
xchg
xor
inc
sarb
pop
or
pop
pop
xchg
nop
outsl
lds
pop
or
xlat
adc
jmp
dec
sub
or
aas
imul
mov
outsb
test
dec
cld
mov
outsl
mov
in
mov
sti
jne
jb
arpl
xor
ja
cwtl
add
or
sub
dec
jns
mov
push
push
jl
into
imul
gs
addb
loope
dec
rolb
xor
xchg
add
jecxz
pop
xor
iret
in
xor
jmp
out
pop
xchg
je
insl
aad
xchg
pop
insb
lea
out
pop
notb
xchg
push
cmp
jg
mov
inc
jge
lock
cld
add
mov
mov
ljmp
push
add
jo
or
add
xor
lods
inc
das
test
mov
arpl
xchg
sbb
xchg
stos
push
mov
lods
push
xor
push
fs
add
call
and
jg
fwait
in
lods
pop
pop
sub
xchg
jne
cld
imul
dec
in
je
lock
aad
fs
test
pop
hlt
add
jp
movq
pop
pop
ret
decl
sbb
push
mov
xor
adc
sbb
jns
in
xchg
cmp
orl
and
shrl
sub
in
pop
push
imul
iret
jno
stc
sub
jmp
es
ds
add
jbe
negl
or
inc
add
mov
icebp
sbb
ror
cli
jae
mov
pushf
in
rcl
xor
jmp
mov
movl
cmpsl
notl
dec
sbb
sbb
mov
fwait
movsb
mov
cli
jbe
jp
push
dec
push
mov
jle
aas
mov
jne
jnp
push
cmp
mov
cs
pop
cmp
shlb
pop
xchg
adc
dec
incl
xchg
inc
add
sbbb
fsubr
mov
call
fists
add
inc
cmpsb
cmovo
dec
sub
or
or
rorl
aas
dec
fcmove
or
push
mov
cmp
pop
push
push
inc
sub
int
inc
add
pop
inc
jmp
mov
lea
pop
sub
add
mov
mov
xor
and
orb
fs
mov
pop
test
cmp
pushf
jmp
push
cmp
mov
or
outsb
out
xor
adc
jl
daa
mov
dec
jne
xchg
inc
sub
andl
xchg
pop
imulb
push
jge
adc
mov
mov
and
imul
aam
push
mov
or
out
addr16
pop
aaa
inc
mov
out
idiv
or
add
and
fwait
or
add
adc
adc
js
push
ja
mov
push
push
orl
cld
daa
gs
aam
imul
push
or
and
andb
ret
adc
xor
sub
add
push
mov
leave
mov
push
nop
orl
add
andb
lds
sub
mov
mov
xchg
mov
pop
cli
nop
loope
iret
inc
pop
ja
out
pop
test
lock
sbb
mov
add
bound
es
sub
insl
jmp
xchg
xchg
cmp
js
or
call
inc
xor
mov
scas
mov
push
push
pop
or
into
jae
mov
sub
cwtl
pop
pop
lods
xor
pop
mov
sbb
in
inc
das
data16
out
or
lcall
rcl
imul
and
lods
dec
add
push
dec
add
pop
mov
jl
add
add
xchg
jno
or
arpl
add
mov
dec
add
inc
fmuls
aaa
xchg
cmpl
mov
into
xchg
xchg
and
sub
jne
push
test
pop
sub
repnz
js
sub
out
lret
rcrb
pop
int
loope
icebp
sbb
pop
adc
add
decl
adc
loope
out
add
inc
inc
mov
jmp
sub
clc
dec
outsb
pop
jnp
iret
push
int
push
test
mov
push
mov
or
sub
dec
movsl
and
xlat
dec
insb
lea
jle
fwait
push
xchg
repz
dec
lret
push
adc
pavgw
dec
mov
adc
push
gs
test
push
sub
sbbl
pop
pop
fcoml
add
dec
push
mov
sub
mov
out
jo
mov
mov
or
jbe
sbb
repnz
pop
add
pop
add
adc
push
mov
loopne
add
lock
push
fs
jl
pop
add
repz
leave
dec
jne
push
dec
mov
or
push
pop
hlt
add
pop
mov
mov
mov
jmp
cmp
or
lods
xchg
push
idivl
push
push
leave
push
and
repz
daa
mov
push
push
xchg
rcrl
mov
leave
neg
test
ljmp
push
sti
add
sbbl
ljmp
lods
mov
loop
push
inc
leave
pop
loopne
outsb
xorb
call
inc
stos
ror
lock
test
aaa
in
lds
mov
imul
cmp
mov
call
jge
sub
push
jmp
test
cld
push
dec
and
pop
sub
or
sbb
es
jl
hlt
or
jns
rcrl
pusha
lods
or
dec
push
add
add
outsl
fldl
sub
out
inc
push
pusha
scas
dec
inc
lret
xor
in
and
xorb
inc
sar
subl
in
xor
add
loope
cld
push
ret
pop
mov
adc
and
testl
fbld
hlt
or
test
stos
clc
push
adc
and
stos
mov
or
push
pushf
std
cmp
sub
xchg
lds
stc
or
push
fmuls
cmp
shll
negl
cli
fs
incl
jmp
sti
test
jmp
enter
push
push
xor
loope
pop
das
xor
xchg
movsb
dec
lret
nop
adc
pop
sti
repnz
test
imul
ja
mov
inc
mov
xchg
ja
arpl
xchg
subl
add
or
add
xchg
inc
push
mov
xchg
clc
scas
pop
cs
jbe
add
dec
dec
mov
daa
add
mov
jmp
jmp
imul
mov
push
scas
insl
pusha
ret
mov
xlat
ret
outsl
mov
or
jb
dec
test
pop
sub
pop
sbb
mov
dec
mov
shrl
add
pop
adc
fs
mov
cltd
add
sti
cld
mov
bound
pop
js
and
push
jmp
dec
lock
and
sub
das
ror
das
jmp
inc
and
add
repz
repnz
and
mov
push
outsb
out
cmc
jmp
addl
cwtl
orb
pop
out
sub
daa
pop
movsl
movsl
popa
add
pop
lods
rorb
mov
adc
daa
add
dec
mov
sbb
ljmp
addr16
mov
lret
sbb
xchg
xor
mov
shrd
dec
pop
mov
pop
mov
daa
inc
xchg
addr16
les
push
loopne
jmp
add
roll
dec
sbb
ret
add
xchg
adc
mov
xor
inc
mov
add
stos
cmp
jae
incb
adc
add
cltd
mov
inc
pop
fstpt
and
pop
jle
repnz
jne
jne
xchg
ret
roll
add
scas
int3
mov
push
mov
and
mov
xor
push
and
test
add
lret
xor
leave
add
and
mov
mov
pop
add
dec
je
jmp
sti
jecxz
push
mov
push
mov
repnz
jmp
rolb
mov
dec
std
push
call
push
jg
inc
inc
bound
jne
pop
out
pop
mov
mov
pop
shr
or
jns
sbb
and
rorl
and
inc
add
xor
or
push
push
pop
mov
mov
neg
sarb
push
cli
mov
int
cmp
jmp
push
outsl
xor
enter
shlb
sub
lock
or
inc
sbb
sub
lret
outsl
add
and
mov
mov
aam
int
jne
cmp
push
cli
push
pop
stc
dec
scas
sub
sub
jecxz
sub
and
inc
or
jg
repnz
adc
push
xor
xchg
and
inc
je
jno
and
sub
sub
in
cmpsl
add
or
scas
mov
cmpb
add
sub
movsb
inc
jge
dec
aam
imul
orl
sub
or
stc
das
test
xchg
mov
xor
dec
push
mov
rep
add
incb
mov
cmpsb
dec
and
jno
bound
fisttpl
push
inc
lahf
xchg
cmpsl
jle
inc
mov
popa
mov
pop
add
mov
imul
cs
sbb
inc
pop
push
push
nop
mov
xor
scas
and
jbe
push
cld
push
mov
mov
and
ss
inc
andb
add
jmp
and
adc
bound
push
aam
loopne
jnp
adc
inc
jmp
js
and
xchg
cmp
pop
pusha
rep
cmp
push
mov
mov
imul
daa
push
push
dec
stc
or
negb
pop
sahf
pop
subb
je
movb
mov
ret
sti
inc
daa
push
inc
lock
mov
pusha
aaa
push
ret
mov
jbe
xchg
push
jmp
mov
inc
xor
fcompl
inc
flds
sbb
mov
and
fimuls
fucompp
ret
outsb
mov
sbb
add
or
incb
xor
out
add
popa
loope
push
push
negl
lods
pop
jns
test
mov
mov
jp
inc
shr
xchg
sub
clc
daa
sub
pop
dec
xchg
adc
out
mov
and
or
arpl
movsb
jg
inc
ret
jmp
xor
subb
add
jne
xor
jmp
in
add
push
movsb
scas
inc
mov
cmp
adc
aas
in
imul
sub
mov
xor
push
mov
mov
mov
dec
cmp
jne
jo
sub
jb
and
out
shrl
insl
push
sti
pop
pop
movsb
ficompl
adc
jmp
leave
add
jo
push
pop
push
sar
repnz
in
or
leave
add
mov
in
fisttpll
mov
inc
or
jno
sarl
mov
sub
mov
or
add
adc
in
xor
lcall
into
nop
movlps
jmp
ljmp
xchg
sub
out
jns
lods
push
mov
jmp
call
jmp
pop
out
ja
jo
cmp
hlt
xor
js
aam
mov
dec
pusha
addr16
out
push
push
adc
pop
push
push
push
jbe
add
neg
stos
mov
dec
sarl
push
xchg
inc
push
cmpsb
in
adc
jmp
mov
xchg
push
outsl
or
push
out
or
adc
in
test
fidivrs
shr
and
push
push
jmp
mov
lds
push
pop
out
add
xchg
data16
sar
add
or
mov
mov
sbb
jne
in
leave
mov
lock
xchg
push
push
push
pop
jb
aaa
loop
or
loop
pop
insb
jne
into
xchg
or
cmc
iret
dec
mov
xchg
in
popf
pushf
push
mov
mov
in
add
test
push
pop
jle
addr16
mov
xchg
jmp
push
out
out
dec
leave
jge
cli
rcll
mov
fsts
mov
and
sub
jl
rcll
lea
mov
je
jl
xchg
push
stc
addl
movsb
jb
loopne
dec
xchg
shlb
pop
adcb
enter
jnp
push
loopne
pop
cwtl
mov
lds
jmp
cmp
ja
icebp
cmp
jae
rolb
add
imul
jne
adc
dec
gs
push
mov
mov
adc
scas
adc
dec
lock
push
nop
lock
fidivs
sub
out
xlat
sub
jnp
and
test
lahf
je
and
dec
fwait
jle
sbb
loop
push
in
addl
or
push
xchg
dec
fcoms
xchg
jmp
in
sub
mov
jmp
js
mov
stos
roll
add
cmp
or
adc
lret
sbb
xchg
out
add
or
and
addr16
xor
loope
shll
pop
jmp
xchg
gs
add
movl
cmpsb
lds
cmpsl
lods
lret
pop
pop
lds
sbb
jmp
into
fisubl
outsl
inc
xor
mov
fisttpl
adc
mov
inc
sahf
mov
pop
jno
bound
ds
push
adc
mulb
aas
mov
pop
cli
cmpsl
shrl
imul
dec
pop
out
push
aad
mov
pop
sub
addr16
dec
arpl
lea
imul
add
cmp
or
jmp
dec
jno
das
jo
notb
jmp
inc
dec
and
jmp
mov
mov
loop
cmp
and
cld
mov
subl
or
movsl
pop
inc
outsb
add
dec
jmp
xchg
ljmp
mov
mov
xchg
dec
xchg
adc
cs
add
dec
pop
sub
sub
jmp
sub
mov
or
pop
pop
lea
test
sub
cwtl
into
in
pop
ja
xchg
sub
dec
push
mov
adc
js
clc
ljmp
dec
fdiv
cmp
sbb
dec
int3
les
xor
inc
mov
dec
jp
into
mov
mov
clc
in
daa
addr16
cmp
ficoms
adc
sbb
bound
xor
add
inc
cmp
cmpb
mov
inc
lret
into
aad
jnp
jmp
dec
les
cmp
inc
pushl
mov
push
mov
cmp
push
mov
in
scas
mov
leave
je
sbb
loop
adc
ljmp
jge
xchg
dec
sbb
sbb
shlb
add
jmp
xchg
divl
es
push
add
xor
jmp
xchg
push
push
sub
adc
call
pusha
or
xor
je
pop
push
pushf
jae
xor
cmpsb
sbb
loope
mov
es
std
cmpsl
std
mov
dec
or
pop
cmpl
lock
call
cmp
adc
mov
push
cmp
push
fldt
test
add
or
inc
jg
cli
cmp
cmp
push
and
sti
cmp
jmp
pop
fistl
push
test
sbb
insb
inc
das
sbb
jecxz
xchg
sti
sbb
rcrl
and
mov
push
addb
push
jmp
push
push
aaa
fldl
gs
jmp
sbb
lds
mov
pusha
xchg
icebp
sub
jmp
inc
push
addr16
sbb
out
inc
test
pop
rclb
imul
add
fldl
js
outsl
test
xlat
scas
ret
fwait
popa
movsb
adc
add
sub
add
leave
addl
and
inc
shll
lret
cmp
push
int
das
cs
outsb
add
add
or
sbb
cld
lods
mov
or
out
daa
jbe
lods
testb
pop
repz
jmp
sub
dec
es
push
loop
add
out
dec
push
loopne
pop
je
pop
rclb
test
mov
out
dec
sub
jo
sub
pop
mov
repz
outsl
inc
imull
push
out
mov
shll
test
xor
icebp
cli
imul
das
mov
js
std
push
push
movl
cmc
and
mov
leave
in
push
nop
mov
outsl
adc
movsb
sti
enter
and
mov
inc
dec
rorl
xchg
scas
flds
imul
adc
add
lcall
pop
sub
and
imul
mov
sub
iret
mov
adc
mov
nop
pushf
cmpsb
jnp
cmp
inc
lds
hlt
call
lods
sbb
orb
lock
mov
out
stos
shll
add
push
gs
mov
das
in
jmp
mov
add
jmp
fadds
push
xor
shll
dec
add
fwait
jnp
jle
ljmp
mov
insb
lret
dec
mov
or
sub
les
push
pop
icebp
dec
lock
inc
cmp
in
fdivrl
test
out
adc
sub
fstl
lret
mov
pop
mov
push
pusha
xchg
add
ss
pop
pop
outsl
imul
test
dec
or
add
leave
test
shll
mov
inc
mov
pop
xchg
imul
in
test
dec
in
fadds
jle
push
call
cmp
decb
cmp
jae
not
push
sbb
loopne
leave
das
cwtl
push
adc
cli
mov
push
adc
mov
sbb
orb
add
lret
rcll
lahf
inc
das
jno
or
orb
pop
pop
push
push
add
mov
jmp
leave
or
mov
inc
fnstcw
mov
inc
js
das
push
cld
adcb
sub
movsl
adc
mov
mov
add
inc
xchg
call
adc
or
pop
dec
lea
sub
add
push
jae
sbb
ret
inc
xor
sbb
testb
or
call
lret
dec
pop
sahf
mov
dec
stc
cmp
inc
mov
cli
mov
mov
lods
push
es
js
mov
jbe
push
mov
inc
fstl
outsb
into
sbb
mov
mov
sub
or
dec
les
or
test
movsl
rolb
inc
mov
lahf
sub
pop
insb
js
inc
cs
mov
mov
inc
push
jg
pop
cs
cmp
push
or
incb
stc
out
add
std
jnp
sub
repnz
mov
dec
enter
add
xchg
lods
push
test
lahf
or
inc
push
out
call
pop
xchg
js
stc
or
out
aas
loopne
sub
popa
push
xchg
mov
xor
xor
stc
cltd
or
ret
sub
pop
xor
lods
shlb
or
pop
mov
rcll
adc
cli
push
dec
sub
into
rclb
xchg
xchg
jns
fisubs
push
inc
dec
add
xor
xchg
pushf
popf
add
dec
outsl
xchg
push
sub
orb
popa
imul
mov
push
and
jb
mov
ja
lret
jae
orb
repnz
cmp
dec
push
aas
stc
movsl
push
je
es
or
adc
push
loopne
and
testl
imul
insl
testb
repnz
repnz
adc
daa
insl
and
add
xorb
stc
ret
xorb
jns
xchg
mov
adc
or
inc
pusha
sub
add
add
pop
and
test
jge
sub
push
jp
inc
sub
add
jecxz
and
lods
cwtl
mov
adcl
add
push
inc
jno
inc
enter
add
jg
cld
pop
dec
rcrl
pop
fstl
pop
adc
push
mov
les
xlat
mov
add
sub
add
es
pop
mov
dec
into
cmp
mov
xchg
and
mov
pusha
mov
jmp
jecxz
mov
sbb
scas
jo
jae
pop
mov
push
and
mov
dec
jns
mov
fmull
aad
mov
inc
push
mov
insb
or
sbb
or
push
cld
sbb
outsb
int
add
jae
scas
jmp
push
jge
cld
xorb
int
jecxz
lret
sub
xchg
jl
inc
adc
and
or
flds
pop
adc
pushf
bound
cmp
addl
sub
stc
inc
xchg
and
mov
pusha
jb
jg
adc
add
les
cmp
adc
repnz
add
jne
cmp
pop
cmp
adc
test
add
push
xchg
and
push
mov
jbe
testl
out
xchg
testb
inc
mov
and
jno
bound
lock
test
add
mov
push
xor
outsb
rorl
add
nop
incb
es
mov
cmp
xchg
push
adc
lock
mov
xchg
add
cmp
jle
cmp
mov
out
xor
adc
sbb
and
jae
add
les
cmp
lods
adcl
jo
mov
int3
ret
xlat
add
mov
add
fwait
mov
xlat
hlt
in
fdivl
in
or
je
cmp
insl
cmp
addr16
leave
subb
add
cmpsb
and
xchg
add
jbe
or
mov
int3
xor
dec
lahf
subb
aas
or
pop
add
push
hlt
pop
nop
lldt
testb
mov
mov
add
pushf
out
pusha
add
push
mov
inc
jge
sbb
jno
mov
add
mov
push
inc
fdivr
test
pop
je
and
xchg
jne
add
nop
xchg
mov
xor
or
push
sahf
mov
adc
inc
aaa
adc
adc
test
add
mov
push
je
xchg
aam
xor
sahf
push
add
imul
add
mov
push
push
stc
imul
pop
cli
pop
outsb
daa
test
inc
add
arpl
test
das
stos
adc
leave
mov
add
cmpsb
pop
jns
les
and
test
inc
push
add
shlb
jno
add
add
sbb
cmp
push
es
cwtl
sub
filds
in
shl
test
add
xchg
lret
pusha
and
popf
nop
stos
add
out
das
xchg
add
fnsave
cmp
out
xchg
aas
jns
dec
jl
push
xlat
movsb
call
inc
mov
adc
add
jmp
pop
mov
shr
mov
ficompl
or
cmp
push
int3
and
or
inc
inc
insl
cmp
jg
add
clc
sbb
or
fs
mov
es
push
add
js
insl
pop
xchg
repz
ficoms
xor
sub
add
addb
add
push
mov
add
push
sbb
xchg
and
jl
add
mov
mov
arpl
dec
psubb
mov
add
fsubl
add
jns
repz
xchg
dec
add
dec
sub
in
xchg
add
scas
add
mov
pop
fwait
inc
fisttps
sbb
addb
push
cli
lds
sbb
rorb
sub
jle
add
fsts
pop
jae
cld
es
sbb
movsl
cmp
and
inc
mov
or
adc
lahf
lock
pop
imul
pop
lret
sub
arpl
out
sbb
cmp
adc
inc
jle
add
inc
dec
rcrb
inc
add
push
mov
or
mov
cmp
add
push
enter
cli
add
push
add
negl
add
mov
js
pop
stos
out
xchg
cmp
scas
add
icebp
cwtl
mov
add
sub
cmp
dec
jae
test
mov
xor
jno
and
mov
pop
fildl
pop
rolb
shrl
int
movsl
fdivl
nop
mov
mov
mov
add
addb
orl
inc
xchg
pop
add
xor
pop
shlb
ja
pushf
pop
mov
add
mov
pop
in
add
xor
pusha
push
push
adc
jb
inc
shrl
cltd
add
mov
jl
pop
mov
out
mov
rolb
mov
sbb
dec
cmp
call
inc
add
dec
pop
popf
jmp
inc
push
idiv
les
add
sub
stos
add
pop
addl
cli
scas
lds
xchg
in
rol
shlb
aad
loopne
shr
cltd
inc
cmp
cmc
out
jns
adc
push
push
adc
repnz
or
addr16
js
lret
cmp
inc
pop
mov
adc
inc
jo
jae
test
pop
mov
out
and
add
push
imul
stc
sbb
cli
sbb
mov
mov
testb
push
dec
xchg
mov
stos
les
loope
jmp
and
cltd
lock
push
aaa
add
mov
lret
adc
push
cmpsl
lock
adc
cmp
inc
icebp
sbb
sub
pop
add
les
mov
add
imul
scas
fsubrl
jp
dec
in
add
and
fildll
inc
aam
shll
arpl
ss
add
leave
jecxz
mov
unpckhps
jno
fs
iret
scas
add
and
int3
arpl
addl
cmp
inc
rcr
xchg
mov
sub
adc
dec
stc
popa
and
mov
cmpb
sahf
push
or
cmp
xlat
cmp
sbb
in
enter
add
and
clc
sarl
es
rolb
or
lret
dec
cmc
in
sub
add
push
mov
out
sub
pop
out
cwtl
add
ljmp
xor
mov
cmc
aad
add
lods
or
je
dec
jne
jnp
add
adc
sub
and
popf
xor
es
pop
shrb
jno
imul
rorb
add
negb
add
and
icebp
dec
popl
pop
push
sub
lea
add
addr16
jbe
out
sahf
rorl
mov
enter
push
mov
repz
in
adc
shlb
pop
sbb
xor
jno
in
das
pusha
cltd
stc
lock
popa
adc
or
fsts
inc
mov
cmp
adc
adc
mov
hlt
inc
clc
pusha
frstor
enter
int
test
xor
push
fsub
pushf
adc
adc
dec
add
inc
mov
ljmp
addr16
push
movsl
pop
push
inc
push
jmp
mov
inc
rolb
shlb
nop
ja
add
repnz
dec
lock
jb
pop
push
add
inc
cld
hlt
jae
loop
add
test
or
add
stc
shlb
jo
jg
jle
add
and
sar
adc
fsubrp
fimull
jg
loope
mov
xchg
clc
jne
jl
jbe
adc
lcall
cld
xchg
fistps
jns
pop
sbb
dec
in
fsubr
test
adc
sbb
stos
stc
inc
test
push
addb
mov
jl
fsubr
insb
fst
jae
add
add
lahf
nopl
add
cmpb
clc
sub
xchg
stc
add
loopne
movsl
push
pop
mov
les
testb
jmp
js
adc
stos
add
sbb
add
lock
lods
out
pop
cmp
pop
repnz
lods
xchg
movsb
jp
pushf
jecxz
sub
inc
es
sub
pop
sbbl
xor
dec
add
out
or
mov
ja
mov
lret
xchg
mov
mov
aaa
pusha
and
jb
add
fbstp
push
mull
js
jno
imul
dec
add
into
or
xchg
and
sub
inc
add
testl
jo
push
lcall
icebp
cmp
jns
cwtl
add
scas
push
sti
insb
or
mov
xchg
add
cmp
in
dec
clc
mov
xchg
jmp
aad
test
add
int3
xchg
mov
sub
test
js
push
rorb
cli
cmp
sbb
pop
ds
lret
or
push
mov
add
popa
add
or
add
insl
nop
fadds
daa
loope
stc
add
push
xor
or
adc
push
rcrb
inc
hlt
dec
add
sub
ljmp
sbb
or
loope
xchg
sbb
xor
cmp
push
pop
push
dec
add
out
and
sub
js
inc
adcb
stc
cmp
push
out
mov
insb
addb
dec
dec
popa
cmp
xchg
pop
ja
sbb
cmpsb
jle
sub
lret
shlb
mov
mov
popl
cmp
les
cmp
cld
add
fidivs
repnz
into
jge
add
insb
pop
adc
add
setbe
hlt
or
lock
pop
sbb
mov
sbb
mov
dec
ds
add
pusha
push
mov
xchg
add
daa
or
in
je
testl
cwtl
adc
add
popa
pop
push
or
pop
adc
test
mov
fcmove
cmpsb
loopne
je
lret
jmp
add
hlt
mov
ljmp
push
paddsb
dec
movsb
les
cmpsl
leave
ljmp
loop
out
cmp
mov
xchg
loopne
inc
scas
sbb
orb
fwait
arpl
mov
cs
inc
test
jb
dec
pop
loopne
in
add
aaa
scas
fs
mov
or
into
xor
pusha
pop
or
lods
inc
and
add
outsl
in
and
dec
lretw
add
cli
stos
movsl
pop
or
mov
sbb
out
xor
mov
jno
sub
mov
sub
pop
mov
popa
add
testb
cs
repnz
sub
adc
jg
stos
push
sub
xchg
scas
inc
fmull
pusha
das
xor
in
mov
mov
mov
outsl
xchg
xlat
jo
andb
setg
mov
add
cwtl
rcr
sbb
adc
adc
or
add
aas
inc
and
add
cmp
and
filds
lock
add
adc
push
push
add
inc
popa
or
icebp
ret
leave
test
xor
lods
dec
hlt
fdivrs
pop
or
int
lret
xor
adc
dec
jl
jle
xor
add
or
sbb
pop
and
incl
repz
jns
push
lds
test
addr16
pop
and
loop
imul
add
outsl
xor
stos
cmp
jge
push
push
add
push
pop
and
ds
imul
repz
push
cmpsl
daa
movsb
ss
pop
call
or
dec
xor
ret
pop
roll
outsl
fldl
test
sbb
jns
data16
add
imul
add
inc
iret
cmp
and
pop
mov
sbb
jge
jbe
out
nop
andl
ffreep
rcll
test
xlat
iret
addl
fs
add
incb
fmuls
jnp
out
and
jle
add
cmpsl
sahf
cli
loope
push
aaa
inc
jns
sbb
imul
and
sbb
xor
pop
inc
imul
rcrb
add
icebp
jno
out
lahf
add
lock
mov
add
idivl
add
out
out
xor
inc
js
and
leave
pop
adc
shl
add
push
cmpsb
inc
mov
push
jns
lods
jge
add
dec
mov
xchg
or
pushf
lock
mov
add
jns
js
add
mov
push
fsubrl
insl
in
cld
inc
test
bound
dec
and
leave
add
jmp
arpl
cmpsl
mov
inc
xchg
pop
sub
test
adc
clc
jg
cmp
andl
push
rcrb
jge
and
add
mov
sbb
inc
add
push
add
pop
mov
xchg
movsl
cmp
jge
jp
pop
jecxz
mov
aad
add
mov
push
imul
and
loop
push
pop
fdivs
and
add
int
adc
mov
push
in
add
imul
js
negl
in
cmpsl
dec
mov
push
shrb
stos
jnp
sbb
xor
push
add
cmpsb
push
sbb
or
or
repnz
js
pop
fsubp
push
add
pop
scas
add
add
add
jne
mov
jns
lahf
jbe
adc
sbb
lods
mov
adc
adc
pusha
add
add
mov
xor
mov
hlt
add
push
dec
adc
pop
sub
jl
cs
add
lahf
adc
in
mov
add
pop
inc
int
data16
jbe
loop
xchg
adc
je
fs
aaa
movsl
cmp
pop
cs
dec
inc
xor
mov
mov
popf
xchg
testl
in
adc
and
insb
mov
pop
lcall
xor
imul
xchg
push
add
aad
out
imul
loop
sahf
jne
mov
add
push
les
aaa
or
lods
mov
lea
add
ret
lret
add
punpckhwd
sbb
add
inc
inc
rolb
test
insl
add
fists
xchg
cmovp
cli
mov
inc
adc
addr16
lret
imul
mov
inc
add
jmp
jmp
ja
jbe
xor
popf
or
lahf
add
mov
jae
jno
movsb
loopew
jge
add
cld
adc
adc
fnsave
or
loope
aas
lods
rcrb
js
and
pop
es
jl
jge
push
cmp
sbb
cmp
lret
aaa
pop
adc
shlb
cltd
or
pushf
out
mov
add
sbb
call
and
dec
push
pop
mov
cwtl
gs
adc
stos
stc
rcl
cli
xchg
fiadds
push
repz
mov
fwait
pusha
push
mov
call
lcall
sbb
dec
and
lds
outsl
mov
arpl
stos
push
jae
inc
roll
dec
shrb
mov
mov
jne
stos
sbb
je
add
inc
pop
add
lcall
push
popa
pusha
pop
jbe
aaa
hlt
addl
or
jnp
and
add
leave
ss
les
aaa
xchg
adc
mov
pop
add
data16
dec
nop
dec
inc
shl
pop
fsubp
adc
rolb
ja
lret
add
incl
mov
rcrb
xchg
pop
add
in
movsl
dec
das
or
sarl
push
stc
add
fldcw
mov
push
add
cmc
push
cli
jmp
pop
dec
cwtl
add
inc
scas
loopne
lret
rolb
pop
movsb
pop
jbe
jecxz
stos
jo
inc
mov
out
scas
add
loop
stos
ja
das
outsl
popa
xchg
adc
repnz
loopne
jl
mov
movsb
cmpl
vpcmpgtb
sbb
add
shr
lds
cmpsb
popa
push
adc
push
xlat
pop
and
fadds
dec
fcoml
out
lds
cmp
xchg
push
sbbb
insb
les
cmp
xlat
in
or
sbb
xchg
rep
add
push
adcb
out
rorl
add
lock
dec
adc
xor
shlb
sbb
jl
call
adc
repz
adc
adc
imul
adc
lods
jecxz
cld
cmp
out
adc
ss
push
xchg
test
imul
add
mov
mov
xchg
loope
outsb
sbb
pop
pop
pop
mov
add
mov
xor
push
jmp
cld
movsb
testb
test
mov
bound
mov
add
popa
push
sbb
loopne
or
cmp
mov
nop
popa
outsb
xchg
cmp
insb
or
cwtl
inc
mov
out
pop
inc
sub
lret
and
and
or
cltd
dec
aad
adc
push
or
or
sbb
or
rol
int
sahf
mov
aam
jns
loop
or
push
push
out
sub
imul
pop
into
mov
mov
xor
inc
push
jl
aam
test
lock
inc
js
push
test
cmp
and
movl
in
bound
sub
fldcw
daa
mov
lods
shll
mov
xor
lret
rclb
and
movsl
std
adc
pushf
scas
subl
jecxz
mov
je
sub
mov
and
mov
pop
lret
out
arpl
mov
and
jmp
add
daa
or
sbb
std
ja
test
loopne
push
dec
clc
sub
pop
inc
sbb
movb
shr
push
loop
and
mov
imul
mov
incl
xor
push
fs
test
aam
push
sbbb
fs
push
andb
mov
arpl
xor
push
inc
sub
xchg
dec
inc
xor
enter
inc
in
adc
mov
mov
dec
inc
enter
or
cltd
sbb
dec
inc
inc
jl
dec
adc
inc
fs
ficoml
pushf
cmpsl
movsb
jbe
test
stc
fs
or
int3
gs
and
enter
popa
push
bnd
and
and
clc
xorl
pop
dec
in
ret
and
js
stos
out
jmp
shrb
aam
xlat
stc
adc
das
test
or
sbb
pop
dec
dec
dec
stos
sub
inc
iret
test
cli
xorl
movl
repz
fisttpll
les
repz
fidivs
pushf
repz
cwtl
cmp
pop
and
mov
xorb
cmp
je
cmp
xor
movsl
mov
add
ret
cmp
testl
cmp
ljmp
ja
mov
cmp
fwait
or
ret
add
xchg
jo
push
cmc
in
dec
jg
add
pop
scas
sbbl
add
mov
mov
adc
jb
sub
mov
rolb
xlat
sahf
cmp
push
add
adc
xchg
jl
push
ja
pop
sub
add
lock
pop
dec
sub
mov
mov
and
xor
popa
hlt
xchg
dec
jge
aas
icebp
cmpl
imul
cmp
adc
inc
or
dec
dec
popa
push
cmpsb
popf
fmul
addb
mov
ret
add
stos
adc
mov
pop
add
mov
addr16
push
in
repz
push
sub
xor
xchg
pusha
and
xchg
dec
pop
adc
popf
shlb
mov
jg
sbb
stos
cmp
or
push
pop
mov
rcll
pop
xchg
cmp
and
cmpsl
pop
sbb
and
pxor
cltd
js
jecxz
push
inc
sar
ja
and
fidivrs
cmc
cmpsl
and
in
shrb
cmp
adc
ror
add
adc
sbb
or
mov
imul
push
jo
fucomi
outsb
sbb
cmc
sbb
lret
push
lahf
mov
cli
outsl
and
push
scas
es
aas
pop
jo
mov
pusha
sub
add
dec
xlat
lahf
dec
sti
or
jmp
or
pusha
push
int
xor
xor
hlt
and
add
mov
iret
cltd
jae
pusha
sbb
cmpsb
mov
add
insl
addr16
sub
je
pusha
push
push
inc
cmp
in
add
adc
mov
mov
xor
pop
adc
sbb
fcomps
pop
ss
jecxz
pop
sbb
movsl
xor
push
aam
call
scas
inc
cmp
sbb
sub
sbb
sub
push
push
rcrl
loopne,pt
cltd
jns
push
aas
cmp
lods
xchg
mov
push
push
mov
ret
cmp
test
mov
add
sub
jmp
adc
testl
std
sbb
cmp
xor
loop
mov
mov
cmpsl
shrl
mov
add
stos
jb
daa
inc
pusha
lcall
jne
dec
and
imul
js
int
aas
xchg
mov
sbb
xchg
mov
int
test
add
mov
adc
xchg
repnz
movsb
inc
jo
push
jns
fwait
ret
inc
xor
les
push
sbb
pop
add
and
jno
inc
lods
and
jae
scas
pusha
cmp
sbbb
add
push
sub
xor
dec
adc
cmp
mov
cmc
xchg
sahf
fsubrs
xchg
or
adc
pusha
aas
mov
add
ss
das
mov
call
jns
add
cld
xor
adc
nop
pop
add
dec
or
andb
push
scas
into
push
or
add
push
ljmp
cmp
xor
push
addb
or
xor
sub
test
inc
xor
jnp
jl
mov
push
dec
push
mov
or
dec
and
cmp
es
stos
and
jl
adc
insb
fbld
orb
mov
addl
cltd
push
mov
mov
inc
sahf
adc
movsl
xchg
xchg
jle
popa
jne
add
sbb
add
dec
divl
stc
cmpl
cmp
dec
lods
add
xor
add
xchg
clc
mov
addl
cmpsl
push
jo
adc
lock
loopne
xor
adc
push
mov
add
mov
je
fists
movsb
aam
or
push
or
adc
ja
and
pop
hlt
add
clc
dec
jnp
ficomps
add
int3
jo
cmpsb
or
pop
sbb
test
xchg
adc
sbb
pop
cld
inc
push
sub
adc
das
cltd
push
xlat
in
dec
pop
xchg
add
ds
inc
scas
enter
add
dec
mov
jle
lods
add
pop
push
add
js
dec
push
sub
int3
xor
bswap
xor
test
cwtl
fwait
push
pop
cwtl
pop
and
sbb
push
lock
dec
js
dec
or
and
and
xchg
cmp
xchg
xchg
filds
hlt
inc
jnp
test
ljmp
imul
add
movsl
iret
push
and
add
or
dec
mov
adc
repnz
and
xchg
div
js
add
inc
pop
pop
cmpsl
mov
xchg
add
shll
mov
add
cltd
nop
sbb
sbb
filds
movsb
or
popa
adc
add
sti
add
ja
ds
and
enter
pop
or
inc
fcomp
mov
repz
xchg
mov
inc
jbe
fsubrs
sbb
addr16
xor
adc
cwtl
and
pop
xchg
add
stos
outsl
out
ds
xchg
rolb
int
nop
push
add
jmp
mov
sbb
out
pusha
aad
dec
movsb
xor
inc
sbb
jl
and
mov
sahf
addw
adc
push
push
mov
lcall
ror
js
jb
inc
and
lahf
lods
xor
mov
ret
in
or
mov
add
and
cmp
enter
outsl
xchg
pusha
or
xstore-rng
cmpsl
inc
and
xor
cmp
pusha
jne
inc
fs
icebp
pop
mov
and
dec
xchg
push
mov
dec
nop
les
adc
xorl
mov
pop
repz
push
or
pop
xor
jns
or
xlat
aaa
adc
inc
push
lods
outsb
imul
push
cwtl
sub
adc
stc
pop
and
and
cmpsb
test
sbb
and
xlat
or
or
ljmp
jne
xor
sub
xchg
adcb
add
xor
testb
andb
pop
add
fldl
cltd
repz
ja
push
inc
xchg
add
sbb
xor
add
dec
and
xchg
and
add
dec
jmp
sub
es
sub
std
enter
and
movnti
aad
inc
push
lods
mov
sub
add
jl
fsubrl
ret
loopne
fmuls
lcall
xchg
mov
add
xlat
and
lcall
xchg
and
inc
stc
sbb
out
cmovbe
or
add
call
push
xorb
pop
jl
movzbl
movsl
add
mov
jbe
sbb
fimuls
inc
fnstenv
mov
sub
movsb
insb
inc
frstor
xor
mov
inc
insb
mov
imul
jb
cwtl
aam
jae
call
stos
cmp
jb
xlat
shll
sub
ret
push
call
lds
fldenv
xor
push
fstpt
cwtl
sbbb
mov
push
sub
stos
pop
mov
push
cmp
movsl
enter
movsb
loopne
shlb
xor
and
pop
fistpl
jbe
cwtl
mov
push
cmp
pusha
mov
in
add
dec
shl
dec
or
repnz
fwait
sbb
bound
test
lea
sub
sbb
push
daa
xor
jl
jl
mov
add
je
sub
ja
inc
inc
or
inc
cs
je
sub
dec
sub
rcrb
out
inc
adc
mov
enter
movsb
pop
ret
adc
rolb
cmc
bound
push
dec
inc
in
sub
sti
divl
xor
add
inc
cld
dec
add
gs
push
xor
in
push
dec
cmpsl
add
xor
mov
dec
js
dec
and
and
test
mov
repz
imul
add
xor
and
push
and
jge
add
and
jno
or
inc
add
iret
mov
or
pusha
nopl
aam
push
or
adc
and
xor
inc
or
inc
shl
and
and
test
inc
mov
xchg
inc
push
mov
scas
push
cmp
pop
adc
mov
js
cltd
xchg
or
sbb
pop
adc
add
push
popa
inc
lods
or
pop
cwtl
hlt
or
pop
nop
je
sbb
iret
js
adc
add
sbb
cmp
rol
push
sbb
sub
arpl
enter
imul
dec
ror
jns
insl
pop
add
test
add
test
inc
lods
add
test
movsb
inc
cmp
out
xor
les
xor
or
jb
or
fmuls
repz
fistpll
mov
adc
pop
mov
push
mov
fs
mov
sti
add
rcrb
xchg
mov
les
aaa
xlat
mov
insb
ljmp
and
inc
add
jnp
pop
lret
movsb
sub
into
inc
sbb
xchg
fdiv
add
arpl
jno
push
jp
mov
sbb
sti
mov
jbe
cld
cld
cmpsl
add
orl
pop
jecxz
cmp
loop
add
and
xchg
jle
pop
add
jbe
leave
test
xlat
pop
push
shrl
sub
xchg
pusha
lods
outsl
lods
pushf
icebp
jno
lds
inc
mov
or
push
das
ret
aaa
sbb
mov
add
stos
or
push
pop
or
sub
pop
shll
int3
out
fwait
push
xor
lods
inc
ds
push
xchg
push
sub
mov
pop
add
das
ds
pop
inc
stos
lock
mov
roll
pop
shrb
enter
addr16
add
push
out
roll
cmc
xchg
sbb
jg
xorl
add
add
fildll
mov
inc
adc
pop
ljmp
lods
pop
or
xor
sbb
int
add
sub
sbb
add
cmp
test
add
mov
sbb
add
adc
pop
xor
fwait
cmovbe
mov
inc
int3
push
fbstp
pop
push
dec
adcb
mov
js
xchg
inc
out
inc
lahf
add
pop
mov
push
jo
in
inc
scas
sub
mov
add
imul
and
push
add
jne
pop
pop
jb
adc
add
xchg
pop
out
jbe
push
mov
mov
add
jl
xchg
push
mov
movsl
add
inc
rorl
dec
fisubl
add
unpckhps
mov
std
repz
or
and
pop
jecxz
dec
mov
subl
push
cmp
enter
sbb
ja
xor
cmp
std
add
jbe
xlat
mov
jl
sbb
mov
push
lods
fwait
mov
push
aam
add
xlat
cli
test
add
test
and
push
add
out
in
pop
fneni(8087
in
or
les
add
and
jmp
add
iret
pop
out
lock
rorl
addb
inc
and
int3
pusha
lock
sbb
pop
sbb
mov
lcall
cmp
popf
mov
rolb
sub
and
pushf
dec
xor
imul
mov
add
cli
dec
subb
les
add
cmpsb
xor
ret
mov
mov
mov
cmp
fiaddl
mov
mov
sahf
outsl
add
and
lock
dec
push
adc
mov
mov
mov
or
or
push
inc
mov
or
mov
call
test
mov
add
xchg
xchg
pop
xchg
or
sbb
ret
lahf
lock
add
adc
push
popf
pop
lods
xchg
mov
pop
jmp
dec
sbb
mov
xchg
cwtl
add
fs
and
ficompl
add
ja
xchg
in
and
ret
bound
push
cltd
imul
fcmovu
xor
lahf
je,pt
add
pushl
push
mov
xor
and
add
sbb
mov
test
add
push
xor
mov
in
mov
cmp
sbb
mov
out
push
cwtl
dec
aad
movsl
dec
jl
xchg
inc
add
ljmp
sbb
out
adc
scas
xor
cmc
cmp
jne
shrb
js
and
mov
add
cmp
cmpsb
jp
sbb
sahf
mov
test
insb
adc
add
push
es
inc
out
fsubr
daa
paddd
push
adc
orb
add
mov
cmc
aas
push
fcomps
pop
sbbl
adc
js
dec
shl
mov
mov
push
dec
cld
incb
sub
sub
and
and
call
jb
hlt
add
ret
adc
nop
cltd
push
xchg
out
add
popa
or
mov
add
shll
mov
ret
fldenv
xchg
jb
jp
pop
cmp
roll
pop
outsb
pop
cwtl
leave
push
jne
sbb
lret
repz
pop
push
sub
add
outsl
loope
pop
adc
cwtl
xor
cmp
aaa
xor
fsubs
imul
outsb
push
jb
add
mov
pusha
or
push
lea
adc
repz
mov
dec
xor
adc
test
addl
xchg
lds
test
sahf
adc
add
ss
call
push
push
cmp
rol
or
ret
or
test
inc
xchg
mov
rorb
jno
xor
test
and
movsb
xchg
jb
les
push
mov
pop
xlat
add
dec
and
roll
adc
cmpl
je
lds
mov
jb
les
mov
jbe
sti
add
adc
add
xor
jmp
divl
clc
or
lret
test
add
mov
or
sbb
add
scas
popa
std
add
jns
sti
loop
mov
add
mov
cmp
pop
xor
add
jmp
inc
bswap
aaa
push
ret
cmp
sbbb
lret
xor
adc
xor
jle
int3
sbb
xor
fs
add
mov
cmp
mov
sbb
lods
mov
add
ret
lock
mov
mov
add
stos
imul
adc
xor
daa
fwait
jp
mov
aad
nop
lods
mov
and
or
sub
ret
lret
sub
cmp
pop
jno
adc
jb
adc
adc
add
lret
dec
sub
mov
push
pusha
stc
adc
out
cmc
sbbb
mov
sbb
add
or
push
mov
push
loop
xor
pusha
data16
mov
and
sarl
add
and
lods
add
dec
jo
mov
ret
push
scas
cmp
testl
mov
inc
loopne
jge
jmp
mov
pop
add
sub
sub
pop
das
sub
sub
aas
inc
pop
mov
dec
hlt
inc
int3
xor
sub
jns,pn
aas
stc
add
xchg
mov
add
negl
pop
dec
inc
std
mov
jg
push
fidivrs
inc
add
inc
and
xor
add
and
dec
add
lods
jbe
add
dec
cmp
xor
je,pt
cmpsl
sub
pop
ds
scas
pop
loopne
fimull
shrb
adc
lock
inc
vmsave
jne
add
cmp
iret
xor
mov
aam
inc
lock
adc
inc
push
sbb
adc
leave
loopne
sbb
pop
pop
adc
rcrl
sbb
std
clc
inc
out
repz
pushf
dec
js
mov
add
jmp
fbld
xchg
sarb
in
lahf
add
out
mov
xor
leave
push
popa
jp
cmp
add
jno
push
rorb
mov
aaa
dec
inc
pop
xor
adc
xorb
jns
mov
jno
sbb
jo
or
stc
sahf
popa
scas
rclb
push
jl
add
dec
jl
lods
or
xor
shrb
sbb
call
and
and
xor
and
subl
sbb
pushf
or
js
hlt
push
aam
mov
adc
js
rolb
sub
mov
setge
pop
xor
mov
or
add
gs
cmp
repnz
or
sahf
dec
psubsw
sub
fs
cwtl
pop
pop
stc
ds
add
in
xchg
inc
xor
add
std
int3
jbe
add
dec
testb
fmuls
or
jnp
js
pusha
push
add
dec
push
ds
ds
int3
inc
pop
push
fbstp
cltd
call
inc
test
pop
aas
jecxz
xchg
lods
push
add
shll
shl
in
lcall
jbe
push
hlt
xor
rorb
cmc
mov
mov
adc
aaa
sub
rclb
xor
add
push
and
xor
addr16
in
adc
aaa
es
fisttps
fidivl
mov
test
push
mov
sub
cmp
aas
dec
ds
cmp
cmp
mov
dec
push
xchg
add
add
add
and
and
data16
hlt
gs
mov
movsl
add
sub
fisttps
push
out
mov
xor
lock
hlt
jp
xor
xchg
xor
sahf
add
pop
cmc
sbb
push
mov
inc
inc
inc
popl
mov
aam
or
add
mulb
add
lods
xchg
xchg
cwtl
mov
mov
pop
hlt
cmp
inc
les
pop
lods
push
mov
inc
mov
fmuls
ss
hlt
adc
add
and
adc
cltd
push
out
pushf
adc
ljmp
into
popa
push
cli
mov
push
in
sbb
sbb
imul
rcll
sub
shlb
inc
add
das
call
shl
inc
pushf
xor
jmp
hlt
cmp
ret
pop
fisubs
add
dec
sub
loopne
add
sbb
mov
call
jecxz,pt
push
dec
stc
pop
push
inc
sbb
sub
je
add
dec
cmp
hlt
ficomps
int3
daa
sub
push
inc
sub
push
dec
cmc
and
inc
mulb
push
filds
and
sbb
mov
sbb
pusha
cwtl
inc
jmp
inc
cmpsb
sbb
daa
cmp
pop
add
sub
pusha
xchg
fldlg2
stos
or
and
adc
mov
pusha
sbb
push
ds
out
dec
or
push
fildll
inc
add
les
add
adc
jge
mov
popl
cmp
jmp
dec
dec
repnz
dec
adc
inc
rcr
in
loope
push
and
and
cld
cmovle
ljmp
pop
loop
xor
filds
in
sbb
adc
add
cmp
daa
cmp
or
pop
and
jb
or
stc
sub
and
es
jmp
addl
cmpsb
push
lods
je
or
loope
nop
mov
sbb
inc
adc
and
dec
dec
add
xor
fs
mov
inc
or
add
pop
stc
repz
cmp
adc
pop
add
add
or
cld
adc
les
push
rol
push
inc
push
icebp
daa
call
sub
jecxz
adc
inc
or
and
pshufw
xchg
push
xorb
arpl
daa
inc
adc
dec
sbb
out
sbb
inc
mov
dec
push
lea
loope
loopne
jmp
push
jl
mov
add
add
icebp
and
ficoml
pop
call
and
push
hlt
rcrl
pusha
iret
mov
sbb
clc
add
jo
add
dec
sbb
push
std
and
incb
call
stc
adcl
rolb
mov
pushf
or
testb
sub
push
and
clc
dec
inc
pusha
mov
mov
test
cmp
int3
or
mov
jg
pop
cmp
fdivs
clc
push
pop
les
or
mov
movsl
in
in
push
nop
shr
clc
pop
daa
and
call
sbb
dec
clc
bnd
pop
dec
and
and
add
or
icebp
and
pop
clc
mov
dec
inc
pop
sub
mov
or
in
sbb
dec
pop
push
push
stos
in
or
fdivrs
xor
leave
test
sub
cmp
pop
sbb
aad
inc
sub
inc
xor
jecxz
push
push
dec
hlt
add
fs
pop
inc
sub
sbb
test
daa
push
cmp
push
cmp
jo
sub
or
fs
pop
add
shll
dec
add
dec
pop
inc
dec
cmp
iret
push
pop
cmp
sbb
daa
cwtl
call
push
push
std
sub
xchg
and
daa
xor
cmp
sbb
sbb
pop
ficoms
sub
and
cmp
daa
dec
jp
dec
cmc
pusha
fcoml
push
and
lock
xchg
and
push
pop
ds
daa
frstor
loopne
dec
add
inc
hlt
nop
add
stc
rolb
sub
add
push
jge
shlb
sub
icebp
je
push
inc
enter
lret
nop
cmp
hlt
daa
mov
or
jecxz
loopne
dec
add
pop
call
clc
je
scas
clc
push
adc
cmp
sbb
and
push
dec
add
adc
push
add
hlt
in
dec
les
andb
add
sbb
or
inc
inc
xchg
ljmp
fadd
mov
daa
sbb
sarb
inc
cld
shll
inc
adc
push
dec
push
sbb
addb
push
ds
mov
push
lock
jmp
stos
sub
or
ds
pop
and
adc
je
push
push
push
mov
and
dec
inc
sub
movsl
xor
add
push
and
inc
lock
add
push
data16
sub
or
dec
inc
cmc
inc
sub
jo
and
inc
dec
pop
adc
cltd
mov
inc
fstps
es
xor
or
and
repz
dec
fstps
js
mov
xor
push
add
push
sbb
and
sub
dec
lahf
or
push
cmp
inc
filds
xor
push
and
sub
add
jmp
sub
int
test
or
jge
jecxz
cltd
jp
xchg
mov
add
xor
dec
lret
arpl
test
fwait
xchg
lcall
sbb
daa
clc
sub
xor
enter
imul
arpl
loop
xchg
xor
jno
push
shlb
dec
cmpsl
add
cmpsl
and
mov
rcll
or
fstl
xor
test
iret
add
testb
scas
fsub
dec
jg
imul
xchg
xor
adc
jge
mov
add
rcrb
in
outsl
xchg
add
call
loop
xor
fs
insb
and
aad
mov
pop
add
pop
test
jmp
dec
ftst
dec
sbb
xor
mov
notl
and
mov
lcall
in
sbb
mov
test
cwtl
js
adc
mov
or
inc
mov
inc
and
in
push
in
filds
mov
inc
jnp
add
getsec
pop
cmpsb
sbb
ljmp
ret
mov
out
mov
xor
sub
mov
pop
imul
loop
lea
int3
inc
push
aas
mov
fmull
js
pop
add
aaa
pushf
jmp
xor
or
add
hlt
das
pushf
mov
xor
dec
pop
add
iret
adcb
push
arpl
push
clc
add
mov
movsb
test
lds
mov
jno
ja
mov
test
sub
das
inc
nop
cld
and
bound
out
add
adc
cmp
loopne
xor
push
mov
test
sbb
add
pop
in
pusha
xchg
and
or
movsb
xor
fdiv
out
inc
mov
scas
pop
or
scas
loopne
addr16
rcll
inc
hlt
mov
sbb
rclb
mov
add
mov
mov
adc
or
fs
out
jbe
bound
xchg
pop
cmp
xlat
xor
and
out
add
fisubl
movsb
inc
xor
sbb
add
mov
or
mov
or
rol
jae
fwait
insb
add
adc
jb
mov
fadds
and
rcrl
pop
jbe
test
cmc
xor
cli
add
mov
call
mov
cmp
lea
iret
in
xorb
sub
inc
hlt
push
add
imul
dec
fbld
cmp
xchg
add
push
adc
in
je
sbb
pop
rolb
xor
lds
mov
shll
add
in
adc
inc
dec
xchg
in
cvtdq2ps
into
arpl
mov
sub
mov
cmp
fs
jns
lret
sub
stc
clc
pop
inc
lods
movhps
sbbb
xchg
sti
xor
in
add
and
outsl
xchg
sbb
push
adc
pop
jo
cmp
jns
add
lock
cmp
add
mov
dec
arpl
subl
add
lods
cli
mov
add
ret
xor
and
push
and
push
adc
xchg
adc
adc
jge
push
enter
push
int
daa
rcrl
push
inc
scas
xchg
loop
lds
push
or
push
and
cmp
adc
pcmpgtd
rol
push
imul
mov
xlat
push
pushf
ds
iret
add
nop
pop
cwtl
mov
fbstp
rolb
out
cmpsb
test
in
pop
xchg
loope
pusha
push
xchg
push
adc
jecxz
mov
xor
inc
int3
sub
addb
xchg
xchg
cwtl
or
ret
ret
and
xlat
pop
inc
icebp
sbb
loopne
xchg
ret
test
adc
mov
in
push
loopne
popa
pushf
cmovno
adc
dec
test
add
dec
jmp
mov
adc
adc
jmp
pop
add
xor
mov
arpl
xchg
pusha
inc
cwtl
cld
add
sbb
jge
adcb
pushf
mov
roll
out
xor
cmp
jmp
int3
mov
sti
into
add
xorl
cmpb
push
jae
cwtl
or
mov
rcll
shll
std
inc
mov
jne
mov
mov
sbb
out
or
xchg
add
in
push
lret
aad
dec
add
sbb
push
gs
stos
mov
add
inc
pop
push
cmp
stc
sbb
fsubs
gs
sub
xorb
call
shl
pushf
jg
rclb
les
repnz
pusha
dec
dec
push
sub
inc
xor
push
jecxz
sub
mov
or
adc
mulb
pop
cmp
push
xchg
jo
cmp
sbb
sub
repz
mov
out
adc
mov
adc
pushf
inc
enter
and
cmp
popf
jge
shll
je
xchg
add
bound
mov
lret
ret
jno
xchg
nop
adc
jae
pop
cli
cmp
mov
int3
and
js
out
scas
and
mov
xchg
push
pusha
and
das
mov
mov
mov
pop
pop
inc
cmp
jne
xor
inc
pusha
pop
mov
shrb
iret
sbb
popa
icebp
add
adcl
jecxz
or
loop
mov
icebp
fs
inc
sub
cmp
adc
xor
push
in
adc
sbb
rcl
mov
je
add
inc
mov
insl
xchg
sbb
push
sahf
aaa
mov
loopne
les
iret
andb
in
js
out
mov
out
dec
push
aam
and
pop
fidivrs
cmp
add
rcrl
mov
fwait
or
stc
sbb
addr16
mov
dec
jmp
or
cmc
push
or
mov
xchg
clflush
jge
and
mov
imul
and
in
mov
test
cwtl
insb
sbb
sbb
or
fs
cwtl
cwtl
inc
sub
add
cmp
in
in
nop
jbe
jecxz
inc
adc
jl
mov
roll
jmp
inc
inc
xor
jecxz
aas
imul
pusha
cmp
repnz
inc
add
ja
lods
ret
leave
xchg
add
test
mov
mov
cmp
pusha
mov
fs
std
and
xor
jae
inc
push
and
jns
add
inc
dec
nop
aam
mov
cmp
jae
imul
mov
insb
push
pop
xchg
pusha
inc
xlat
sbb
aas
cmpb
in
push
mov
add
imul
imull
shl
add
hlt
xor
push
inc
aaa
push
xchg
int3
je
stos
push
stos
xor
scas
movsl
ret
sub
add
add
cltd
test
or
scas
jnp
mov
es
cwtl
leave
xor
ds
xchg
and
icebp
push
and
test
sub
cmpsl
or
addr16
mov
push
bound
sahf
mov
push
sub
xchg
pop
lahf
sub
loopne
pop
mov
jecxz
mov
or
stc
mov
dec
imul
leave
bound
dec
test
add
out
adc
aam
repnz
jbe
jp
cmp
xor
mov
dec
fwait
andb
mov
enter
cmp
outsb
mov
shll
dec
repnz
add
pop
sbb
rcr
insl
sub
push
out
ret
mov
arpl
adc
test
test
add
add
mov
fwait
lds
cs
and
xchg
mov
add
and
pop
incl
fs
pop
cmc
xor
add
or
rcrb
in
dec
pop
inc
and
sbbb
push
fisttps
rclb
jbe
in
sbb
mov
jmp
add
or
movsl
dec
cmpsb
cmp
in
pop
pop
dec
or
add
sub
test
or
inc
cmc
xor
lods
shl
inc
inc
push
sahf
mov
add
xor
mov
pushf
lock
mov
pop
adc
xor
test
fsub
dec
pushf
rorb
data16
loopne
xchg
aas
add
jno
cmc
mov
orl
cmp
xchg
add
mov
popf
push
sbb
cmp
fs
add
test
pop
dec
mov
add
mov
mov
add
mov
sub
xchg
mov
imul
jle
pop
sbb
adc
ficoml
js
sbb
xorb
rclb
pop
dec
jne
jae
shlb
stos
lock
add
faddl
mov
push
inc
cmp
add
loop
fstl
js
mov
add
push
cmc
gs
testl
mov
xchg
lods
mov
aam
movsb
inc
add
out
cli
nop
cltd
mov
push
push
push
aaa
or
and
sahf
jns
mov
add
adc
xor
xchg
cltd
and
jno
add
mov
mov
sbb
mov
or
aas
xorb
mov
xor
popa
xor
enter
and
hlt
push
outsl
jl
rcrl
adc
leave
sarb
xor
lret
or
cmp
shrb
dec
add
cmpsl
cmc
cmp
add
sub
xor
pop
sbb
jmp
insl
mov
sbb
pop
add
adc
xchg
mov
jl
mov
clc
or
testl
and
je
mov
inc
loopne
adcb
ljmp
jo
push
mov
jns
mov
aas
jnp
add
das
pop
outsb
jnp
xchg
jbe,pt
fs
sarb
scas
pop
and
cwtl
pop
loope
push
adc
les
inc
xor
lods
lret
add
push
xchg
mov
ds
sbb
cmc
orl
sbb
mulb
inc
xlat
xor
mov
mov
sbb
fsubrs
ja
test
cmp
xchg
xor
rorb
xchg
clc
cld
dec
stos
pop
sub
fisttpll
scas
dec
in
sbb
dec
jmp
and
push
stos
xlat
mov
shrl
sbb
push
rcrb
addr16
or
out
sub
and
loope
add
push
or
bound
xor
push
pushl
add
cwtl
lods
aad
outsb
call
or
adc
push
xor
mov
add
jmp
cs
jno
add
mov
sbb
sbbl
add
aas
je
xchg
inc
insb
rorl
ja
pusha
mov
aaa
loopne
sbb
mov
inc
mov
xor
mov
dec
and
in
adc
ret
sub
jns
cli
jg
add
fisubrl
lahf
inc
sbb
xor
outsb
add
pop
popf
mov
sahf
xor
fsts
sub
sbb
push
xchg
add
cmp
mov
insb
add
hlt
xchg
fildl
mov
loopne
sarb
fsubr
cwtl
adc
or
dec
out
xchg
sub
inc
push
adc
incb
cmpsb
dec
mov
ljmp
or
mov
js
andl
xchg
mov
inc
in
cmp
testb
inc
or
in
sbb
jnp
mov
xor
daa
dec
mov
cmovs
iret
mov
inc
push
gs
ljmp
hlt
mov
repz
movsl
pop
or
and
add
call
mov
aas
add
ret
arpl
in
push
add
cmc
imul
cmp
xchg
test
scas
jge
lds
popf
and
sahf
pop
add
cmc
aaa
pushf
xchg
scas
jae
lret
ret
lock
lods
xor
cwtl
xchg
add
pop
loopne
stc
dec
inc
or
xorb
mov
jae
mov
or
add
adc
mov
movsb
dec
sahf
add
cld
and
or
xlat
adc
fmuls
dec
mov
pop
adc
subb
insl
mull
add
mov
mov
mov
pusha
dec
push
inc
ja
mov
stos
add
cmc
jo
sub
mov
add
mov
in
ss
sub
xor
clc
or
mov
sbb
adc
pusha
lods
and
add
jb
mov
and
lcall
xchg
add
and
lock
fistl
js
pushf
cwtl
add
rcll
xor
pop
add
sbb
int3
sbb
nop
adcb
add
lock
dec
inc
nop
fs
inc
hlt
and
add
inc
inc
andb
mov
cmp
and
pop
test
adc
out
push
imul
jns
cmp
outsl
lret
dec
cmove
addb
enter
or
inc
xlat
pusha
dec
inc
in
and
arpl
testl
inc
shl
dec
mov
shlb
mov
jnp
xor
push
hlt
les
cmp
fcomi
sbbb
fiadds
in
add
push
inc
jle
js
mov
shrl
pop
in
add
adc
aam
fadd
lahf
lock
add
jnp
adc
jns
dec
pop
push
adc
je
dec
lcall
fistpll
mov
jl
xchg
rcll
adc
sysexit
or
arpl
js
sbb
or
sahf
inc
and
ja
fmul
clc
xchg
mov
mov
and
leave
xorb
add
je
or
repnz
rcl
push
hlt
add
in
jecxz
sahf
aaa
arpl
popa
xchg
and
push
add
stc
scas
testl
jle
add
outsl
dec
nop
or
pop
outsb
inc
fldenv
fwait
cmpsl
sahf
add
jl
outsb
test
cmp
inc
sbb
add
in
jmp
fsubrs
cmp
mov
xor
loop
addr16
mov
nop
add
adc
lods
mov
out
negb
add
addl
jb
cmpsl
push
xchg
inc
or
clc
push
mov
andb
inc
add
adc
dec
and
pop
cmp
js
push
jl
and
pop
mov
add
xchg
adc
xor
mov
imul
push
push
mov
sarb
mov
lahf
sub
and
mov
sarl
mov
jo
arpl
lock
ds
lods
xor
add
lcall
sbb
js
pop
xchg
enter
jmp
mov
mov
loopne
fld
adc
push
jge
inc
adc
cmp
out
cmp
ss
arpl
adc
pusha
mov
pop
shl
and
pop
cmp
sub
jle
imul
imul
addr16
adc
rolb
sar
cmc
xor
rolb
jl
sub
loop
add
test
scas
addb
pop
push
lods
xor
add
push
pop
lods
les
aas
cmp
xchg
in
rorb
sub
lret
cmpl
add
adc
add
andb
imul
adc
sti
aad
fwait
add
je
lcall
xor
imul
and
test
or
and
sahf
sub
pop
cmpsl
sub
add
sub
sbb
add
sub
dec
xor
or
test
pop
add
enter
ficompl
and
adc
mov
stc
pop
xor
mov
fadds
pop
xchg
cmp
fsubp
push
adc
lods
outsl
and
add
mov
sbb
mov
test
aad
dec
arpl
cmp
andb
fwait
dec
sbb
mov
mov
xor
lods
mov
adc
pop
nop
adc
pop
insb
sahf
push
and
nop
cmpb
jbe
mov
les
add
shll
adc
sbb
cwtl
mov
pop
inc
repz
jns
and
mov
test
leave
out
cmp
aam
jmp
pop
aam
subl
nop
adc
pop
mov
and
dec
mov
stos
mov
jo
xchg
cmp
into
subl
mov
pop
mov
xor
out
cmp
or
rcr
enter
add
cmp
lods
outsb
inc
cmp
pop
inc
or
inc
sbb
jge
jl
inc
loopne
mov
out
dec
test
les
je
pop
sbb
lret
cmpsb
sbb
sbb
int3
dec
inc
movsb
hlt
cmp
cmp
aas
mov
js
mov
push
mov
jl
mov
sahf
xchg
pop
sub
xchg
sbb
xchg
sarb
and
adc
pop
mov
sub
mov
cmc
cmp
adcl
test
int3
sbb
shrl
lock
cmp
mov
add
inc
mov
in
cmp
cmp
ffree
xchg
adc
or
dec
or
and
cltd
rol
rcrb
add
push
inc
inc
push
lock
inc
out
jo
fists
add
add
mov
popa
mov
pushl
jo
sbb
call
pop
ret
in
dec
jl
and
add
inc
push
ret
xchg
mov
mov
cmp
push
ret
pop
ret
xchg
mov
mov
pop
ret
das
out
mov
adc
aam
and
xchg
test
mov
pusha
add
mov
jns
pusha
add
push
mov
pop
lea
push
mov
adc
add
mov
push
push
int3
mov
shl
inc
xor
push
push
pop
ret
inc
mov
and
ret
aad
movntps
mov
sbb
sarl
incl
std
test
and
xor
or
add
adc
xchg
push
push
and
mov
and
ret
into
add
jg
lcall
add
or
lock
xor
call
out
add
mov
inc
sub
call
dec
and
or
gs
ret
shrd
test
jb
and
dec
cmp
push
add
sti
xchg
or
aas
pop
ret
mov
mov
jmp
mov
into
nop
jmp
jge
sbb
inc
push
sbb
ret
mov
push
add
lea
push
xchg
push
sub
add
xlat
sub
test
add
sub
fisubrl
sbbl
push
rorb
sub
rcll
sbb
out
mov
add
popa
inc
movsb
leave
pop
addb
and
jns
dec
rorb
mov
and
adc
mov
lcall
les
or
lea
push
ret
roll
mov
adc
pop
or
pop
pop
and
pop
adc
icebp
loop
xor
push
jmp
and
test
sbb
sbb
call
or
test
lea
jmp
outsl
jb
popa
inc
mov
adc
add
test
adc
push
pusha
and
push
xor
pop
cmp
fsubrs
rcrl
mov
pop
or
push
sub
push
adc
add
lods
call
daa
bound
mov
cmpsb
push
es
adc
rorb
stc
sbb
sti
xchg
sbb
mov
add
popa
fsubr
or
adc
inc
add
dec
hlt
dec
repnz
clc
add
sub
adc
test
dec
pop
add
mov
pop
enter
inc
xchg
imul
popf
dec
add
repnz
sub
fbstp
pop
dec
mov
push
popa
pop
ret
enter
xor
lods
add
cmp
jnp
push
stc
cmovl
xor
mov
pushf
in
mov
fucom
add
push
sub
inc
shll
or
pusha
inc
loope
es
popa
fmulp
xchg
sbb
and
jmp
adc
ss
adc
aas
jle
aam
aam
rolb
into
movl
jns
les
sub
rorb
add
jle
aaa
mov
adc
pop
ret
fcompl
add
add
add
push
cmp
sbb
adc
call
lea
divb
sbb
push
dec
into
inc
loope
sbb
dec
xlat
push
das
cmpsl
and
jg
mov
push
jge
push
add
or
push
and
leave
es
mov
notl
and
jg
pop
fisttps
es
mov
push
iret
xchg
adc
xchg
out
sub
sahf
scas
fcomip
and
xor
mov
or
push
dec
sbb
pop
sbb
loopne
jp
xor
xor
sub
out
xor
or
dec
mov
mov
test
jns
push
shll
pop
or
mov
loope
adcb
pop
or
or
xor
sub
push
inc
popf
add
lcall
mov
setne
and
inc
sub
mov
jb
add
add
ljmp
fists
pop
adcb
push
jle
push
adc
pusha
xchg
push
enter
adc
cmp
jmp
scas
add
and
std
push
mov
push
rolb
out
xor
inc
jp
call
pop
rol
inc
mov
push
jmp
sbb
add
add
in
repz
xor
sub
jae
jmp
shll
jmp
xor
mov
orb
sub
adc
loope
dec
movsl
pushf
dec
daa
sbb
cld
xor
sub
call
sbb
jno
mov
xor
pop
and
pop
cmp
ljmp
xor
sub
adc
jl
sbb
sub
sub
sub
jle
mov
int
jmp
rorl
cmp
es
sahf
inc
int3
addb
mov
lock
cmp
xor
pop
pop
adc
cwtl
push
adc
and
fs
into
jo
sbb
lahf
mov
mov
je
mov
mov
jno
adc
adc
mov
out
cmp
mov
push
shll
scas
add
cmpsb
and
inc
add
fsubl
cld
dec
add
insl
loop
movsb
mov
sub
rorl
pop
ja
xchg
dec
loopne
add
pop
push
or
int3
cwtl
mov
xor
es
mov
subb
sarb
sbb
xchg
add
xchg
pusha
dec
in
pop
sbb
jecxz
scas
movb
loopne
jmp
cmp
mov
or
push
push
out
sbb
adc
imul
sub
add
lret
pop
iret
imul
jne
add
mov
add
inc
adc
scas
andl
scas
ja
mov
sar
xchg
push
add
cmpsb
adc
in
lock
lcall
test
or
dec
adc
pop
xor
xor
inc
adc
xchg
xor
or
pop
gs
lret
mov
sbb
push
sbb
lret
ds
pusha
pop
fisubrl
add
mov
das
ds
and
stc
fmuls
aam
call
or
jge
sbb
jmp
sbb
les
inc
aas
add
push
xchg
enter
fcoml
add
push
mov
sub
push
push
xor
mov
loope
sbb
lods
stos
pop
in
test
jns
add
mov
xor
dec
sti
xor
pop
mov
sbb
push
mov
leave
mov
inc
pop
fidivrl
dec
mov
adc
mov
mov
stc
dec
xor
fwait
push
hlt
mov
adc
clc
out
inc
pop
in
pusha
ja
jns
sbb
imull
add
or
fcmovnb
jns
xchg
out
inc
ja,pn
or
ret
iret
mov
loope
loopne
and
sub
push
out
dec
pop
notb
add
dec
cmpsl
or
js
push
pop
inc
add
lods
iret
mov
mov
push
inc
inc
call
out
in
mov
sub
mov
add
mov
out
push
stc
repnz
or
xor
or
mov
pusha
or
push
out
jl
and
xchg
out
jae
popa
movsb
mov
mov
inc
mov
cmp
pop
and
add
inc
fs
add
loopne
call
scas
pop
push
out
jle
add
outsl
out
mov
sub
pop
cld
pop
mov
add
loop
std
je
sub
fcoml
mov
or
ljmp
dec
sbbl
jae
shll
or
stc
insb
ljmp
dec
clc
lret
cmp
pop
add
pop
cs
pusha
xor
sub
push
adc
popf
stc
orb
out
movsl
bound
call
mov
cwtl
mov
inc
or
test
sub
cmpb
pop
fs
xlat
pop
les
or
xchg
rol
call
movsl
push
cltd
notb
daa
mov
dec
sarl
shrl
outsb
and
or
std
rcll
cmp
mov
xlat
cmp
mov
popf
adc
and
aad
cmp
cmp
test
jno
rcrl
sbb
add
xor
xchg
or
sub
add
or
mov
push
sub
add
inc
lods
mov
sub
pop
and
mov
mov
add
repnz
mov
loopne
xchg
sub
mov
movsb
inc
or
das
sub
rolb
inc
jge
out
in
jg
in
sbb
dec
out
add
xor
sub
sub
xchg
fdivr
push
mov
leave
and
inc
insl
cs
and
pop
xchg
sbb
sbb
std
add
test
sahf
lock
adc
jle
add
fsub
bnd
ret
mov
pusha
jp
nop
test
bound
dec
subb
push
stc
push
or
mov
rorb
loope
push
and
fdivrp
lods
sbb
add
xor
pop
cmp
xor
in
cmp
test
add
jp
push
or
or
mov
fisubl
mov
into
cmp
enter
es
pop
mov
ljmp
sub
adc
and
mov
jl
add
daa
nop
in
mov
push
fsubs
jae
add
push
adc
jnp
pop
jge
sub
les
fwait
icebp
rorl
addps
addl
movsl
inc
add
xchg
mov
add
movl
jbe
andb
js
loop
sub
sub
sti
jle
adc
loop
push
and
cmp
jle
xchg
iret
push
add
fsubl
or
add
fnstsw
imul
stc
or
lds
add
sbb
push
in
add
sbb
or
mov
add
push
enter
ret
notb
sahf
push
leave
and
pop
ret
mov
push
or
adc
adc
out
out
pop
repz
fdivrl
mov
add
push
fdivrs
lds
push
mov
shrb
mov
mov
or
and
sbb
jmp
xchg
cmp
pop
iret
fistps
push
push
inc
out
sbb
mov
cwtl
or
lock
jb
jbe
repnz
not
imul
cld
fldl
loop
shll
inc
sbb
xor
insl
cwtl
adc
cmpsl
mov
mov
dec
lea
cmp
addl
mov
fcomps
add
sti
in
sub
push
mov
xlat
pop
jmp
adc
dec
xchg
dec
cmpsl
sub
inc
pop
mov
mov
aam
lock
xchg
add
ret
xchg
lcall
jns
sbb
jnp
int3
jp
pop
es
adc
ds
dec
sbb
jbe
nop
sub
notl
add
repz
push
ficoml
pusha
cmpsl
sbb
ret
dec
xor
jl
test
sbb
cmp
inc
and
mov
mov
test
nop
lds
sbb
stc
adcb
mov
push
test
dec
fs
inc
sub
lods
sbb
push
dec
shrb
lock
add
popa
es
out
add
xor
jge
push
push
or
test
jne
pusha
inc
push
fldt
dec
rclb
orl
xchg
xorb
and
cmp
or
add
fsubrp
inc
idivl
xor
leave
and
push
daa
xchg
gs
sub
add
xchg
mull
cmp
jne,pn
cmpsb
data16
and
push
rorl
xor
mov
cmp
daa
add
rcrl
test
mov
inc
insl
sbb
mov
pushl
cmp
pop
rorb
mov
insb
lods
xor
push
mov
les
pop
or
pop
sbb
sub
inc
adc
or
jmp
sarl
pop
xor
mov
inc
add
jp
mov
xor
add
rcl
sub
cmp
jmp
xchg
orb
mov
mov
add
scas
and
shlb
add
mov
loopne,pn
xor
inc
int3
jno
jns
sbb
sub
ljmp
inc
pushf
jecxz
rcrb
stos
jno
jns
add
sti
loopne
test
orb
adc
or
add
loope
inc
or
in
bound
dec
adc
mov
das
aaa
add
sub
pop
xchg
inc
or
lahf
or
andl
andl
add
out
ret
mov
and
in
cmpsb
xchg
cwtl
sub
aaa
inc
mov
or
dec
dec
jmp
gs
adc
push
pushf
pop
pop
cwtl
mov
cmp
inc
and
push
ret
inc
inc
cmp
sbb
xlat
add
add
mov
xchg
jle
call
cmp
jne
pop
aad
movsl
lret
sbb
push
test
dec
shrl
add
add
xchg
adc
es
or
mov
and
jno
clc
stos
hlt
add
push
xor
adcl
mov
mov
test
int3
ret
pop
fstps
push
mov
loop
or
inc
xlat
mov
inc
call
lods
clc
mov
arpl
and
nop
in
and
xor
nop
pop
in
sub
xchg
repnz
jge
inc
mov
mov
pop
push
or
push
lea
decb
je
sbb
gs
pop
in
shll
lea
xchg
pop
add
gs
cmp
repz
lcall
add
pop
scas
rcrb
or
adc
mov
enter
stos
mov
stc
je
pop
pop
arpl
and
sub
pop
daa
mov
cs
mov
or
test
pop
mov
xchg
mov
loope
sub
xchg
mov
dec
xor
inc
sub
push
adc
dec
mov
sub
sbb
push
mov
and
push
in
mov
insb
imul
cwtl
adc
pop
push
mov
mov
rcll
in
gs
rclb
cld
daa
fsubs
mull
and
cwtl
in
aam
shlb
and
inc
add
mov
fdivrl
and
int3
dec
sub
imul
xchg
and
es
push
mov
pop
jg
fadd
in
addr16
dec
aas
mov
adc
call
mov
cmp
rorb
pop
je
and
xor
insb
or
outsl
cmp
out
xor
out
mov
call
add
mov
jg
cmpl
sbbb
push
add
inc
jmp
cmc
xor
xor
mov
popa
add
addb
mov
jge
in
je
addb
gs
imul
outsb
retw
popa
mov
push
insb
gs
jae
sub
arpl
sbb
jae
pushaw
jb
jl
jle
jge
jns
divb
ja
imul
arpl
jae
mov
imul
cli
jne
or
add
add
sub
pusha
jae
inc
push
push
dec
jne
pushl
inc
sub
bound
jns
or
fisubrl
sub
addl
mov
push
inc
call
dec
setno
push
push
cmp
jg
mov
cmp
nop
repz
mov
cmp
lret
mov
sbb
dec
sub
bswap
sbb
unpcklps
add
ss
jb
mov
rclb
stos
push
in
pop
test
and
sbb
inc
les
gs
jle
and
push
xor
icebp
daa
or
and
les
add
sti
xor
stos
push
out
or
in
stc
repz
and
push
and
push
xor
xchg
xchg
pop
xchg
pop
sbb
inc
and
add
les
inc
ret
aam
cmp
or
xchg
outsb
rolb
inc
adc
dec
mov
adc
push
adc
repnz
adc
mov
adc
repnz
adc
adc
add
or
int
pop
dec
inc
fsts
push
push
test
or
pop
sbb
or
inc
inc
and
mov
out
enter
stos
cmp
xor
test
or
push
and
xchg
sbb
rcrl
shll
cmc
andb
push
scas
push
push
es
nop
mov
sub
xchg
clc
lcall
pusha
call
mov
sub
clc
push
xchg
add
jle
aam
lock
push
add
sbbl
aaa
enter
mov
fsin
clc
sub
jb
jle
mov
test
roll
insb
xchg
mov
mov
xor
pop
push
jmp
rorb
movl
repz
shll
test
mov
pop
dec
lods
ja
inc
adc
mov
popa
adc
jmp
loopne
mov
and
jo
add
mov
sub
jmp
mov
lods
aad
ljmp
aaa
aas
gs
inc
adc
pusha
fadd
mov
imul
add
addl
inc
push
cmp
add
call
push
push
pusha
ja
xchg
sbb
cld
mov
dec
push
fistl
mov
mov
mov
mov
int
jo
xchg
aaa
lods
or
or
jge
in
movaps
test
dec
pop
movsb
ret
or
popa
sti
mov
loopne
add
movl
adc
outsl
adc
xor
fnstenv
mov
and
lret
es
sub
jno
or
popa
mov
sbb
cmp
mov
push
push
inc
push
fisubrl
lcall
add
mov
push
mov
pusha
leave
sub
push
add
inc
pop
push
popa
ret
loopne
dec
cwtl
cli
sbb
dec
inc
pop
cltd
les
add
scas
xchg
jno
lahf
xchg
orb
shlb
jle
sarb
pmulhuw
jmp
mov
into
push
add
add
mov
add
enter
mov
pop
add
pushf
pop
rcrb
add
test
and
add
xchg
mov
popa
repz
adc
inc
movsl
inc
pop
adc
jbe
push
inc
imul
dec
cmpsl
mov
nop
push
mov
rolb
into
xchg
add
outsb
pop
out
sub
add
xchg
es
fdivs
xchg
in
cmpb
add
dec
pop
mov
inc
int3
pushf
pop
jecxz
fsubrl
xchg
sbb
inc
push
xchg
push
mov
xor
dec
add
mov
lcall
add
pop
inc
sbbb
inc
mov
leave
lcall
out
sahf
pop
pop
rcll
adc
push
sbb
repz
rol
test
sahf
add
leave
lds
jns
mov
sub
adc
cld
sahf
add
ss
lock
push
add
add
add
sub
sub
pop
xchg
pop
add
negl
cmpl
push
pushl
jo
mov
sub
xor
sub
add
test
or
add
incl
add
jmp
adc
sbb
enter
mov
xor
xor
cmpsl
or
sbbl
cld
dec
lcall
pop
dec
or
inc
push
mov
sahf
and
sbb
sbb
xor
cmpsb
and
lock
add
dec
rorb
add
arpl
movsl
inc
aas
lahf
or
jnp
xchg
icebp
add
das
repnz
int
sub
xchg
cmpsl
add
mov
cmp
inc
fsubs
popa
or
jmp
pushf
mov
push
sarb
popl
add
fidivrs
ret
cmp
xchg
shlb
sbb
push
int
mov
cwtl
js
add
adc
test
addr16
test
xor
inc
in
cld
sbb
and
sbb
bound
xchg
xchg
adc
and
nop
leave
xchg
iret
jb
add
xchg
and
inc
mov
or
test
mov
loopne
fs
dec
dec
push
cwtl
and
lock
sbb
imul
xchg
addb
adc
sbb
roll
add
loopne
fnsave
push
sbb
xchg
call
add
movsl
sbb
fs
lock
dec
push
xor
fstpt
mov
jno
mov
mov
shll
jne
jno
sbb
popf
cmp
and
jge
push
sbb
pushf
inc
popf
inc
sbb
ds
sbb
adc
add
pop
add
test
hlt
sub
and
dec
or
xchg
adc
test
dec
rolb
inc
jge
in
std
and
sahf
jns
add
fmul
mov
add
test
dec
lds
nop
sub
cmpsb
add
pop
jle
xor
and
mov
xchg
lock
add
insb
pop
xor
mov
or
adc
sbb
andl
cmp
mov
in
sbb
sbb
sqrtps
repz
fwait
cld
divl
adc
xchg
fisttps
inc
rorb
add
out
add
xchg
add
push
sbb
add
xchg
pop
daa
ret
fiaddl
add
rol
xchg
jae
inc
in
adc
xchg
sbb
outsb
pop
enter
in
push
sbb
mov
cwtl
push
test
sub
iret
or
inc
sub
push
sbb
pop
or
pushf
adc
add
adc
sbb
mov
lret
fiaddl
push
sahf
cwtl
leave
inc
dec
adc
xor
and
fisttpll
push
inc
cmp
repz
test
adc
add
inc
std
push
push
sbb
jle
sub
adc
mov
nop
comiss
inc
xchg
cmp
shll
add
cmpl
xor
ret
inc
lahf
mov
int3
rclb
lods
sub
dec
fisttpl
lcall
js
outsb
imul
mov
push
cmpsl
inc
mov
mov
cwtl
or
add
sbb
cmp
daa
xchg
and
add
shll
inc
jb
or
jmp
fcoml
xor
into
lcall
mov
pusha
xchg
and
int3
lock
adc
mull
call
or
mov
add
and
mov
push
sub
test
std
jo
mov
les
xchg
shrb
pop
adc
add
pop
sbb
in
pop
pop
jg
insb
fninit
mov
icebp
mov
cmc
xchg
or
int3
cli
add
jb
or
push
mov
pop
aas
add
cmpsl
jb
jmp
and
jmp
in
cmp
imul
push
in
sbb
int
xor
sbb
inc
hlt
add
shl
mov
sti
push
and
push
pop
insl
pop
hlt
dec
pop
cli
cwtl
xor
shl
and
pop
xor
cmp
pop
add
sti
mov
ja
imul
add
jl
add
les
aaa
orl
ss
jnp
adc
add
cmp
lret
add
cmp
add
mov
add
nop
aas
add
jecxz
ds
fs
xchg
and
push
push
cmp
das
pop
mov
add
mov
ds
push
mov
shlb
add
xor
dec
add
push
out
popf
sub
incb
lret
adc
repnz
xchg
dec
mov
push
mov
add
dec
mov
add
mov
sub
int3
push
mov
xor
dec
jmp
inc
jg
repnz
call
imul
cmp
add
pop
xchg
das
lcall
aas
xchg
add
sbb
movsl
sub
add
xorb
mov
insb
ret
cmp
scas
mov
add
rorl
loop
pop
mov
rolb
add
shlb
add
mov
push
xchg
jae
sub
loopne
mov
xchg
sbb
rorl
pop
in
sbb
inc
ret
push
jecxz
sbb
dec
out
mov
fidivl
mov
call
fnstcw
mov
lret
or
xlat
pop
enter
les
mov
aaa
jnp
cwtl
js
add
bound
lret
or
shrl
jle
test
mov
pushf
jle
add
movsb
and
add
add
nop
pusha
les
xchg
out
push
int3
add
test
popl
xor
dec
adc
iret
xlat
cmp
add
mov
add
stos
outsl
add
adc
data16
ljmp
clc
cmp
or
mov
add
push
dec
pop
xchg
xor
std
sarb
clc
jbe
mov
pop
mov
lock
lds
mov
push
and
sub
adc
ret
add
lods
inc
filds
jo
add
pop
in
adc
mov
jbe
cmp
cltd
nop
out
sub
jmp
mov
outsb
mov
cmp
xlat
test
inc
unpcklps
jbe
cmpsl
mov
lods
andb
prefetchw
add
add
and
aas
adc
pushf
scas
dec
jbe
add
lret
clc
fists
movsb
lds
xchg
or
add
cmp
sub
sbb
push
and
adc
inc
xchg
loope
cmp
or
jno
outsl
aam
adc
mov
into
push
xchg
dec
mov
sbb
sbb
push
and
lock
test
adc
shlb
outsb
loope
sbb
add
loopne
sbb
add
jne
roll
mov
mov
push
add
stos
test
xchg
addb
loopne
lds
daa
dec
and
cmp
in
dec
inc
loopne
mov
inc
in
or
std
mov
mov
ljmp
andb
push
add
dec
add
fcoms
add
jg
xor
push
xor
pop
add
xchg
add
add
outsb
push
push
cmpb
add
push
lea
xchg
cmp
aad
rol
add
sbb
push
dec
add
cmp
add
in
fsubrl
leave
push
xchg
pushf
add
hlt
in
xchg
or
addb
aam
cs
sbb
pop
adcl
test
jmp
mov
rcr
sub
adc
push
sahf
push
shrb
data16
outsb
ljmp
dec
push
adc
and
aaa
xchg
mov
in
mov
mov
push
scas
sub
rorl
or
popf
mov
std
xor
jl
loop
sub
hlt
test
add
mov
add
mov
dec
jl
inc
pop
nop
cld
test
add
sbb
sbb
add
leave
stos
mov
mov
sbb
dec
pop
mov
jge
add
rclb
cmp
mov
mov
leave
in
mov
sub
rorl
rcrb
dec
pop
subb
sub
fistl
xlat
push
ds
push
loop
mov
addr16
lods
cmp
jmp
add
popf
xchg
mov
sarb
imul
enter
dec
push
mov
dec
mov
add
adc
in
sbb
sub
pop
pop
add
sti
lret
xor
add
out
mov
adc
mov
fisttps
cli
insb
add
pusha
out
sub
jmp
mov
stos
rcl
add
or
mov
push
push
xchg
push
popa
push
pop
push
movsb
or
insb
shl
mov
xchg
cld
pop
sbb
inc
ret
add
test
add
shrb
or
daa
fistps
cltd
rclb
les
xchg
sub
add
xchg
insl
in
pusha
sbb
lock
pop
nop
int3
jl
cmc
add
lods
push
push
cs
ja
mov
lcall
jmp
dec
push
rolb
in
and
fstl
add
fstps
lock
pusha
cmpsl
cmp
push
insb
xchg
fcoml
xor
mov
adc
out
pop
jno
pop
mov
cld
cmc
shl
loope
add
mov
into
dec
pop
insl
sub
call
inc
mov
jb
add
mov
fwait
rolb
add
ficompl
dec
out
add
or
and
flds
inc
dec
push
and
dec
dec
dec
add
shll
notb
or
sub
pop
xchg
mov
sub
cld
rcr
sti
jbe
stc
je
movsl
push
addr16
adc
rcl
fsubrs
fcmove
add
cmpsl
in
rcll
test
dec
sti
or
and
add
cmp
scas
ds
cmp
sub
sbb
xor
inc
xor
pusha
lret
adc
into
fmuls
add
js
fcompl
lcall
in
jnp
repnz
add
cmpsl
xlat
push
lods
ljmp
dec
cld
add
aaa
js
dec
data16
jmp
cmp
lret
sbb
adc
orb
addb
test
mov
push
xchg
add
mov
cmc
pop
add
xchg
mov
pop
xchg
pop
fists
addb
scas
jp
fidivrl
mov
xor
loopne
mov
pusha
jo
imulb
jae
add
arpl
xchg
add
cmpsl
add
push
out
adc
rclb
mov
xor
sbb
sbb
pop
lret
ds
mov
dec
mov
xor
add
pop
mov
movsl
lret
add
and
xchg
push
cmp
lret
add
adcl
rorl
adc
lods
add
dec
clc
or
cmc
dec
add
mov
popa
xor
int3
add
push
dec
lods
lds
add
mov
mov
cmp
mov
in
jge
movsb
pop
or
push
gs
push
fwait
jb
pusha
pop
aaa
dec
sbb
gs
add
cld
int
shll
divb
sbb
into
add
repz
cmpsl
pop
fdivl
ret
adc
push
and
jns
mov
pop
mov
test
inc
in
adc
aam
jbe
aaa
std
cwtl
mov
in
xchg
add
jecxz
push
or
or
ja
adc
mov
add
leave
jno
jne
sub
push
andb
push
dec
push
cmp
enter
pop
or
xchg
fadds
insb
out
lods
lea
call
cltd
ret
mov
dec
mov
jb
add
ds
xor
les
add
mov
inc
push
pop
inc
jbe
jmp
push
pop
inc
cmp
pop
push
pop
mov
xchg
stos
adc
pop
lret
jge
es
push
xchg
pop
call
pushf
out
jmp
addb
test
add
inc
add
rclb
mov
xlat
rclb
clc
pop
sbb
fcom
xor
pop
add
pop
add
enter
add
jnp
mov
nop
imul
cmc
outsl
shlb
push
sbb
add
sub
sbb
pusha
adc
and
add
fwait
jae
out
jo
add
push
push
sbb
mov
inc
or
jg
mov
dec
cmp
or
sbb
lahf
add
xor
mov
xchg
and
test
aas
mov
xor
add
add
pop
fdivr
add
mov
daa
jg
xchg
and
test
inc
pusha
rcrb
jp
xor
sbb
fs
push
adc
mov
inc
xchg
cmp
ss
mov
mov
xchg
ljmp
jl
jns
adc
mov
xchg
xchg
adc
mov
scas
adcl
cs
pop
out
xchg
mov
sbb
lret
aas
cli
popl
not
mov
imul
dec
in
arpl
mov
pop
fidivl
push
push
add
adc
push
add
add
mov
push
jno
sti
cmp
mov
cmp
pop
mov
bound
out
xchg
xchg
into
ss
loop
cmp
movups
inc
jl
mov
clc
xchg
stos
pusha
add
pop
jae
add
cwtl
stos
in
sti
add
addl
add
jne
daa
add
mov
cmc
sbb
mov
cmp
inc
aaa
add
daa
mov
xchg
add
movsl
pop
rolb
fsts
push
icebp
push
cmp
and
add
mov
and
pop
inc
cmp
mov
enter
adc
pop
mov
add
adc
and
fdivrs
jg
and
mov
pusha
ljmp
add
xchg
into
dec
cmp
pop
orb
add
inc
stos
or
or
xchg
inc
shlw
add
out
cmp
outsb
adc
js
dec
add
inc
mov
stc
scas
icebp
int3
int3
cwtl
xor
add
out
xchg
das
test
rolb
insb
mov
sbb
push
add
ret
sbb
call
or
add
mov
dec
ljmp
clc
xchg
movsb
xlat
push
loop
push
pop
sahf
data16
jne
es
mov
imul
gs
push
loope
adc
add
mov
add
iret
lret
das
cwtl
int
add
cmpsl
add
add
test
insb
mov
push
push
ret
es
dec
jbe
outsb
mov
fstpt
ljmp
mov
jo
dec
gs
jno
loop
pusha
lea
loope
push
out
repz
orb
add
inc
jle
xchg
mov
push
jecxz
lock
xor
adc
xor
xor
pushf
and
jb
add
mov
loopne
pusha
testb
xchg
int3
adc
cwtl
cmp
inc
push
loopne
add
test
xor
lcall
mov
outsl
aaa
inc
mov
add
orl
test
daa
push
lahf
sbb
inc
jne
mov
cmp
int3
pop
dec
cmpsb
inc
or
ja
jb
sbb
pushf
aad
pop
jae
jno
add
dec
call
xor
add
repnz
push
mov
js
add
lds
nop
in
sbb
dec
loop
negb
add
push
mov
add
scas
sub
test
xchg
outsb
add
cmp
aad
into
repz
jg
inc
add
mov
or
jecxz
push
jo
out
sbb
cmpsb
cmpps
fcmovnbe
push
mov
or
mov
jo
icebp
and
popa
rorl
adc
insb
rolb
mov
test
jb
cltd
fldt
pop
popf
xor
mov
cmp
add
rorl
cmp
inc
push
movsb
pop
pop
insl
popa
flds
hlt
jne
inc
scas
jns
test
jno
adc
add
push
mov
sti
sbb
add
mov
cwtl
outsb
pop
xchg
incl
add
lods
cmpsb
sbb
sbb
mov
pop
mov
jl
push
je
fidivrl
movsl
fs
shlb
sbb
xor
mov
cld
out
jecxz
and
cmp
add
add
sbb
popa
mov
xor
push
imul
lock
std
xor
inc
jnp
cld
lcall
adc
push
sbbb
std
popa
jmp
add
sbb
pop
add
outsl
add
cwtl
jne
sub
and
cmpsl
sahf
movsb
add
push
test
push
add
es
lock
add
adc
cld
cmp
xchg
dec
rol
repz
inc
pop
repnz
add
cmp
out
fcoms
add
movsl
fdivl
divb
jno
add
pushf
and
push
gs
ficomps
add
lea
xor
inc
jmp
stc
inc
stos
push
out
sub
and
loopne
jbe
or
stos
std
jb
and
icebp
shrl
cwtl
push
add
pop
xchg
dec
cld
and
xchg
rolb
dec
rcrl
inc
push
push
add
out
repnz
mov
and
test
mov
into
outsl
sbb
mov
xor
adc
insl
scas
add
jns
subb
inc
add
add
jge
movsl
cmp
pop
fwait
pusha
dec
and
push
jmp
icebp
xorb
add
cmp
cwtl
out
pop
aas
js
sub
test
push
adc
dec
add
adc
sbb
mov
insl
es
or
mov
pop
mov
sbb
xchg
rcl
add
mov
dec
jge
rorb
pop
xor
pop
cwtl
jb
xlat
sub
pop
lret
xchg
cli
adc
sti
aaa
pop
add
and
cmp
shlb
outsl
cmp
add
dec
bound
test
call
xor
sub
enter
cmp
pushf
jge
sub
inc
add
in
insb
add
inc
and
adc
mov
jp
xor
cmpsl
pop
clc
dec
clzero
mov
pop
xor
flds
adc
shrb
xor
cmp
cmpsl
cmp
ret
cs
movsb
sub
add
bound
das
inc
xor
xchg
xchg
add
mov
add
jae
out
pop
adc
inc
sbb
pusha
lods
xor
mov
jg
push
pop
lahf
popa
ljmp
add
or
movsb
jl
int3
pop
les
mov
mov
mov
add
and
dec
lds
sbb
xor
jns
add
adcb
out
add
ret
clc
jmp
adc
rolb
mov
add
mov
sbb
out
inc
add
test
daa
enter
sub
inc
or
push
lods
data16
outsl
cmp
es
out
dec
pop
test
out
icebp
orb
rcrl
faddl
aaa
jo
sub
incb
mov
les
mov
cmp
adc
fiaddl
add
lds
call
in
xchg
add
inc
mov
aas
sub
jecxz
or
pop
sub
iret
xlat
push
hlt
add
xchg
adcb
add
push
dec
sub
xchg
repz
push
xlat
mov
cld
lahf
sub
addr16
arpl
add
out
or
enter
int3
cmp
insl
hlt
push
pop
mov
or
mov
fidivrl
sbb
dec
pop
inc
leave
add
mov
mov
les
xchg
add
and
xsha256
cmpsb
ror
pushf
inc
push
stos
sbb
push
adc
in
outsl
into
loopne
js
jge
hlt
pop
add
lret
psrlq
loop
cmp
and
add
vmptrld
or
add
loopne
add
iret
bound
add
shll
add
and
dec
outsl
xor
gs
add
add
sub
aaa
arpl
gs
or
pop
shrb
mov
push
push
pop
lock
enter
mov
mov
ja
ljmp
aam
fcoml
test
adc
pop
or
push
subb
add
mov
imull
les
lret
and
shrb
and
or
addl
xchg
cmp
fcmovbe
dec
sub
iret
add
xor
sub
and
sub
lds
data16
andl
add
pop
lds
popa
ret
xorb
inc
xchg
push
or
push
movsl
add
add
bound
or
or
mov
insb
sbbl
fnstsw
cmpb
jle
add
cwtl
cmp
cltd
pop
jne
xor
xchg
and
lcall
xor
mov
movsb
pusha
mov
sarb
add
imul
add
divl
call
movsl
int
add
shlb
push
xchg
pushf
arpl
cwtl
js
sub
pop
cmpsb
les
sub
sbb
arpl
cltd
jmp
mov
push
add
fildl
test
std
cmp
fcompl
mov
cwtl
or
push
lahf
cmp
or
in
fisttpl
imul
push
sbb
hlt
mov
xorl
push
js
mov
add
sub
lods
mov
sub
imul
psllq
pop
xor
add
xlat
add
dec
jp
outsb
cmp
xchg
jecxz
add
mov
sbbb
pop
in
repz
fwait
or
xor
sub
adc
xchg
test
fucom
jnp
pop
enter
mov
outsb
inc
movsb
sbb
add
daa
inc
add
stos
add
pop
xchg
or
idiv
add
flds
add
pushf
mov
pop
rorl
minps
xlat
or
push
fsts
push
out
jb
out
adc
jp
and
dec
das
add
aad
mov
add
in
mov
dec
movsb
add
xor
fisttpll
addr16
dec
and
or
add
add
or
test
xchg
push
jl
mov
add
jae
jns
popa
jnp
add
sub
jo
jp
ret
or
dec
cmc
ja
push
pushf
xor
pop
add
adcb
aad
ja
pop
and
and
push
pop
adc
xor
dec
or
inc
xor
add
bound
ret
push
mov
or
inc
push
push
test
decl
dec
or
or
test
inc
sbb
loop
mov
or
sbb
lahf
test
dec
cli
inc
push
push
and
and
cmp
mov
addb
inc
mov
and
jge
mov
or
aaa
mov
test
mov
or
inc
cwtl
jb
and
mov
subl
scas
std
out
mov
add
jecxz
loopne
roll
lcall
xchg
cltd
pop
xchg
lret
xchg
cwtl
and
jl
add
jl
fisubl
clc
add
mov
push
add
xor
xchg
cmp
mov
cmp
in
dec
sarb
int
add
imul
xor
jp
jmp
or
popf
lret
add
data16
and
pop
cmp
and
rep
in
stc
dec
nop
fdivs
add
orb
sbb
ljmp
sub
aam
addl
lret
push
pop
mov
add
xlat
outsb
cmp
insl
or
sbb
cmpsb
mov
push
and
in
add
sbb
adc
dec
xor
fbld
dec
cmovg
imul
add
stc
mov
bound
cld
push
inc
loopne
fs
add
xor
outsl
cs
lock
add
cmp
sbb
shrl
stos
test
xorb
xchg
and
add
aam
gs
xchg
add
cmp
cmc
add
cmpb
push
das
mov
in
mov
sub
test
add
adc
add
mov
or
mov
mov
sub
add
mov
out
pusha
orb
cmpb
jne
imul
mov
cwtl
pop
mov
add
push
jl
mov
and
jg
add
cmp
sub
push
sbb
mov
push
jae
add
ljmp
sub
push
add
lea
add
inc
scas
es
jle
sarb
mov
xor
jns
jge
xlat
test
add
xor
push
loope
lods
mov
sub
adc
jne
add
insl
inc
add
dec
sbb
jbe
mov
push
bound
shl
jg
adc
in
fadds
int
inc
sahf
mov
flds
lahf
inc
inc
xchg
mov
fwait
xchg
add
insb
lret
icebp
mov
or
sbb
mov
inc
mov
cmp
cmp
divb
jg
add
in
add
subl
cmpb
ss
xchg
cli
adc
cmp
mov
loope
mov
lret
adc
mul
mov
mov
push
aas
shl
pop
xor
sbb
jo
cmc
mov
adc
paddusw
sbb
mov
cmpsl
add
cmpsb
shl
mov
ss
xchg
rcrb
int3
cld
and
lret
or
mov
pop
jmp
sub
mov
mov
inc
mov
add
mov
mov
or
cmp
xchg
jno
add
mov
loopne
adc
xchg
add
fstpt
cmp
mov
popa
push
cmp
sarb
sub
add
test
int3
loopne
push
sub
cli
outsl
mov
test
xchg
and
mov
add
stc
repz
mov
fistpl
add
and
xor
mov
pop
push
adcb
xchg
ds
mov
daa
add
lea
xchg
aaa
shlb
and
sarl
aas
add
jbe
pop
subl
add
inc
scas
mov
xlat
das
push
fs
lea
sbb
addl
or
test
pop
and
push
xor
adc
lea
inc
popa
mov
int3
and
sti
hlt
out
push
or
pop
cmpb
outsb
pusha
sub
cli
roll
xor
test
or
cmpsb
and
push
cmp
movsl
push
sbb
fistpl
fxch
test
mov
out
shlb
fstpt
pushf
xor
cmp
mov
outsl
xlat
mov
xchg
inc
mov
andl
movups
cmpb
fsts
dec
add
insb
ror
lcall
add
mov
fisubrl
add
je
cmp
mov
sub
aas
sbb
int3
sub
stos
xchg
add
jg
loop
dec
scas
outsl
jo
out
pop
mov
jnp
data16
dec
leave
and
xchg
sub
or
add
pop
ljmp
sbb
cmpsb
jl
inc
sub
add
push
jo
orb
or
fidivrl
ljmp
mov
add
out
fimuls
lcall
fcoml
fwait
adc
iret
fnstcw
add
cltd
scas
loope
scas
mov
ret
pushf
xchg
test
sub
xor
cmp
mov
pusha
int
add
jle
push
push
cmp
gs
stos
add
lahf
mov
push
filds
out
mov
push
subl
insl
adc
and
add
cmp
test
pop
mov
and
or
jne
xor
sti
cli
xor
jo
subl
inc
sbbb
pop
mov
sbb
das
xchg
add
stos
and
rolb
mov
insb
or
mov
int3
add
loopne
add
cltd
pop
xchg
fwait
daa
xor
or
incl
insb
add
and
xchg
and
xor
ljmp
cli
mov
stos
out
loope
lock
test
hlt
lahf
sbb
push
ss
inc
inc
xorl
inc
mov
in
add
scas
enter
adc
xor
xacquire
add
fadds
xchg
add
out
xchg
pop
movsl
enter
hlt
adc
push
int
cwtl
or
ror
ret
xchg
cmpsb
xchg
add
dec
pop
cmpsl
add
icebp
cmp
push
sbb
pmulhuw
jae
addl
push
mov
add
mulb
add
adc
sarb
testb
nop
jl
cmpb
and
mov
mov
pushf
xchg
hlt
push
xor
pop
sarb
incl
cmpsb
xor
nop
stos
mov
pop
subl
add
clc
cmpsb
enter
popf
pop
in
hlt
push
or
insb
subb
xor
fldenv
adc
jp
xor
or
add
or
cmp
aas
mov
push
addl
ljmp
add
cmp
fs
repz
add
jmp
or
movsl
jno
mov
xchg
mov
enter
filds
jae
xchg
mov
add
mov
lock
fwait
mov
lret
inc
xor
sub
cmpsl
lahf
mov
xchg
jo
sarb
out
mov
cwtl
and
aad
and
pushf
outsl
or
addb
sub
shlb
add
iret
push
cmp
rolb
lock
es
mov
inc
pop
rclb
cmpsb
mov
shlb
in
adcb
pop
insb
lret
ss
addr16
fcmove
mov
add
xchg
sti
xor
movsb
mov
mov
mov
inc
xchg
mov
scas
add
stos
lea
lds
add
fsubrl
insb
jge
imull
fnstenv
insl
adc
loop
rol
ret
add
test
add
call
add
addr16
outsl
jp
sbb
ds
jge,pt
pop
test
fdivrl
sbb
xor
add
dec
push
pop
ret
xorb
test
pusha
add
push
pop
jno
fadds
add
loope
lods
inc
push
inc
mov
arpl
inc
dec
push
sbbl
xchg
or
add
sub
mov
ficompl
out
scas
add
imul
mov
ficompl
xchg
imul
add
jmp
fmull
dec
mov
sub
mov
nop
dec
fmull
add
in
hlt
shr
rcl
xchg
ja
sub
cmpb
stc
and
ds
lahf
jp
les
sub
and
xchg
mov
and
push
lods
fmuls
or
push
sbb
enter
push
add
in
xlat
jle
add
fnstcw
cli
adc
add
adc
or
jl
add
loop
jb
sbb
add
and
mov
sbb
fsubl
fists
add
shr
es
push
and
clc
std
add
loop
xlat
loopne
shlb
add
loope
pop
int3
jle
mov
imul
call
sbb
movsb
divl
or
mov
add
add
lcall
add
out
in
add
roll
stc
add
pop
or
dec
mov
test
mov
mov
daa
adc
nop
lods
aam
cld
add
mov
mov
ljmp
mov
daa
add
stos
cmpsl
loope
aam
imul
dec
jns
ja
in
mov
ret
jb
inc
stos
dec
into
inc
push
mov
rcrb
arpl
in
dec
dec
out
mov
and
dec
pop
inc
jne
sbb
pop
aam
dec
in
das
sbb
sbb
add
add
cwtl
cltd
test
xchg
hlt
add
mov
mov
jp
inc
jo
add
push
mov
xchg
sahf
vmread
add
mov
inc
popf
sbb
mov
shl
incl
je
out
sub
addr16
add
and
mov
lock
cmpsb
jno
cmc
jbe
add
addr16
lea
ret
mov
pop
fnstsw
fmuls
std
loop
cmp
lods
add
lock
push
add
in
mov
sub
adc
xor
mov
and
mov
cmp
jo
ljmp
loopne
inc
icebp
pop
sbb
dec
pusha
out
cli
mov
arpl
jno
aam
pop
stc
xchg
add
shlb
es
or
test
lods
cmp
add
adc
addr16
leave
rcr
lods
push
stc
add
xchg
popa
jnp
fldl2t
addl
cmpsl
fcmove
cld
add
sbb
cmp
fwait
pusha
cmp
add
dec
ret
jmp
pop
cmp
stc
sbb
sub
add
aas
mov
push
xor
mov
jp
sub
fisubrs
jo
inc
mov
mov
popf
sub
loop
cmp
add
fcoms
out
mov
ficompl
xor
ja
push
mov
dec
or
pop
fs
in
xchg
mov
lds
mov
mov
jne
cmp
sub
push
push
es
mov
in
ret
into
cmp
fildl
addr16
mov
add
push
aad
or
adc
sub
cmp
or
add
push
in
jg
add
jnp
mov
loopne
idivb
repnz
je
cmpsl
popa
sarb
jmp
sbb
cs
mov
mov
incb
xchg
gs
inc
mov
iret
add
addr16
adc
mov
sub
fsubs
add
negb
iret
jns
orb
in
mov
mov
divl
push
xor
std
sarb
mov
dec
notb
ljmp
and
iret
dec
pop
xor
xor
pop
fsubl
daa
sbb
jno
shlb
mov
pop
ljmp
fwait
jns
sbb
inc
ss
das
mov
xchg
push
lahf
pop
inc
xlat
push
add
mov
mov
es
add
out
push
or
inc
in
dec
bound
add
shlb
enter
out
xchg
push
sti
hlt
add
cmp
in
negb
repz
fdiv
add
jb
ds
mov
loopne
pop
daa
cmpsb
inc
xor
and
inc
xor
stos
cmp
pop
or
mov
or
movsl
loopne
lret
popf
pop
pop
pop
xor
xor
test
cli
repnz
push
jmp
testl
ds
push
mov
inc
fwait
int3
in
lret
add
lcall
xchg
add
inc
mov
dec
rolb
jne
sub
sbb
lock
add
outsl
cmc
aaa
inc
jl
xchg
or
sub
enter
xchg
xchg
rorb
clc
cmp
add
outsb
fsubrl
nop
ljmp
push
movsl
push
adc
rorl
movl
test
add
popw
cmp
or
xchg
push
in
in
dec
andl
pusha
lods
adc
sub
add
adc
mov
mov
add
mov
nop
bound
sbb
dec
mov
add
pop
cs
mov
lods
xor
and
add
jmp
sub
test
pop
in
pusha
jbe
mov
pop
mov
mov
mov
stos
lea
mov
scas
nop
or
sub
push
xchg
fadds
pop
mov
rolb
aad
scas
divb
xor
fadds
push
test
mov
xor
movsb
sbb
pop
xchg
pop
rclb
xchg
das
add
pop
add
add
and
adc
add
dec
push
aas
sbb
pop
mov
sti
lods
and
cmp
bound
push
outsl
mov
cmpsl
dec
sub
xor
push
or
es
pop
flds
out
mov
pushf
push
pop
fmuls
inc
add
sbbb
movsl
add
arpl
push
fcmovnbe
jl
idivb
adc
pop
rclb
out
cmp
jge
movb
pop
add
mov
mov
add
dec
ret
hlt
adc
jg
jmp
loopne
flds
in
icebp
add
test
sbb
nop
and
pusha
testl
add
dec
shrl
shrl
adc
pop
dec
add
fbstp
add
rcrl
adc
xor
int
int3
test
pop
scas
xchg
mov
xchg
inc
lods
mov
adc
ret
stos
ja
clc
fistpl
dec
push
cmpsl
cmc
in
pop
add
into
pop
fwait
pop
mov
xchg
das
int
dec
shrb
ret
push
inc
pop
ret
add
clc
mov
outsb
add
shrb
lods
adc
andl
adc
cmpsl
add
or
mov
dec
push
add
js
pop
and
sti
lret
add
add
ljmp
jmp
rcl
dec
gs
adc
inc
nop
add
xchg
add
xchg
int
sub
xor
mov
cmp
std
adc
or
push
fisubrs
jo
and
daa
aaa
or
sbb
sub
or
ds
push
add
or
and
inc
sub
pop
ficoml
dec
push
mov
pop
movsl
add
add
push
jp
xor
mov
fxam
xchg
inc
cmp
arpl
inc
add
push
sbb
lcall
popf
orb
inc
enter
out
ficompl
jg
clc
cmp
inc
pusha
or
inc
add
in
jb
mov
push
or
pop
rorl
xchg
jb
add
sti
mov
stos
callw
add
jle
test
inc
test
inc
stc
out
cmp
push
jne
subb
mov
jb
add
adc
ljmp
add
lcall
push
movsb
inc
rol
lock
adc
daa
add
jne
jl
subb
rcrb
sbb
lock
sub
mov
lcall
aaa
add
sub
hlt
or
fwait
movsb
adcb
sub
cmp
pusha
int
cs
shlb
pop
dec
repnz
test
adc
sub
shrb
shr
or
popf
call
xorl
cmp
lret
and
out
push
out
sub
test
jecxz
jl
add
pop
mov
out
adc
inc
imul
ja
cmp
lea
pop
inc
push
jae
push
xchg
outsb
rol
push
sub
cmovae
testl
int3
jmp
outsl
push
add
fimull
sahf
cli
pavgb
mov
add
js
or
add
inc
lds
jno
cwtl
lods
add
inc
jmp
es
xor
dec
lea
add
xchg
scas
dec
les
push
je
sbbb
addr16
test
pushf
mov
or
pop
pusha
test
pop
je
hlt
and
adc
lcall
mov
repz
sahf
sub
push
jl
add
rcrl
testl
add
cmp
push
pop
jmp
xchg
outsb
inc
adc
add
sti
test
sbb
idiv
mov
out
or
fisttpl
push
or
pusha
popf
daa
jp
add
scas
add
fcoml
add
jg
cmp
data16
iret
adc
sahf
lcall
int3
cmpsl
in
pop
arpl
sbb
mov
add
jnp
arpl
roll
loope
in
daa
es
mov
and
ds
add
into
adc
ja
lret
add
out
arpl
xchg
adc
add
mov
shrl
jmp
shrb
cld
sbb
movsl
xor
fildll
jge
add
rcll
xor
incb
test
cltd
xchg
pop
aam
mov
dec
add
xchg
cmp
add
and
sub
insl
mov
dec
loop
cld
rclb
popf
fnstenv
add
ss
ret
add
iret
repnz
adc
add
mov
aad
out
loopne
mov
rorl
push
add
lds
dec
sbb
xchg
mov
sbb
fcoms
mov
mov
or
mov
cmpsl
cmpsb
push
enter
lahf
dec
push
cmp
shlb
or
ja
jg
setae
lock
icebp
fldl
jb
in
inc
dec
adc
add
sbb
popa
add
ret
adc
mov
add
sub
cmc
pushf
dec
es
and
out
inc
jbe
add
xchg
mov
push
rorb
loopne
inc
icebp
mov
jne
jo
or
sbb
pop
dec
inc
pop
xchg
mov
cmp
xchg
pop
inc
and
test
cmp
dec
inc
add
rcrl
add
jns
cmp
call
add
pop
or
adc
pop
dec
lcall
ret
lds
je,pt
mov
pop
aas
pop
xor
scas
jcxz
add
or
out
or
fwait
jns
add
inc
pop
xor
lock
xchg
sbb
cmp
mov
add
push
pushf
aam
sbb
imul
mov
movb
lock
scas
es
add
push
mov
nop
xchg
fiadds
lahf
mov
call
dec
lea
dec
je
add
jno
xchg
int
inc
sub
aam
xor
pop
sub
push
inc
pop
sbb
mov
pop
mov
insb
inc
push
sub
push
stos
sbb
mul
dec
add
push
gs
mov
sbb
mov
xchg
dec
mov
shll
jmp
mov
jns
in
mov
adc
out
roll
dec
test
xor
insl
mov
movl
icebp
sbb
push
sbb
xchg
and
fiadds
and
lahf
out
jnp
add
testb
inc
add
lods
push
or
rol
ja
add
aad
popa
pop
add
ud0
xchg
stos
mov
es
mov
rclb
jmp
mov
sub
xchg
gs
aas
rdmsr
aas
sbb
xchg
rol
repnz
iret
and
add
cmp
loopne
fstl
scas
incb
outsb
inc
shl
enter
cmp
cwtl
js
push
xor
mov
mov
sub
sub
adc
mov
rcrl
add
dec
aad
xlat
rcrb
cwtl
dec
cmp
push
loopne
popa
hlt
stos
add
inc
out
pop
mov
and
or
cli
cld
jg
test
and
cmp
cmpsb
ds
adc
add
jecxz
lahf
add
ss
repnz
into
jnp
xor
add
popf
sarb
ljmp
and
dec
or
sub
push
test
sub
xor
dec
jne
scas
xlat
loopne
loop
outsb
jmp
lds
sbb
filds
pop
adc
fnstcw
test
sub
jmp
xchg
nop
stos
add
adc
mov
fists
xor
inc
daa
jle
in
mov
xchg
pop
mov
xor
xchg
roll
sub
jnp
mov
xor
mov
add
je
dec
xor
js
xchg
std
pop
jle
aam
lods
push
xchg
or
testl
cld
inc
jns
aas
xchg
sbb
lea
test
int3
push
jno
sub
cmp
add
out
add
lea
add
aas
lcall
data16
fwait
lods
in
mov
das
lret
push
fsubs
push
xchg
inc
lods
pop
add
jmp
push
adc
inc
imul
pop
jo
mov
dec
and
adc
hlt
jp
pusha
xor
add
movsl
xchg
pop
sub
flds
call
scas
mov
loop
call
sub
jae
dec
mov
ret
add
stos
mov
loopne
js
inc
imul
pop
inc
cmp
in
mov
lea
mov
pusha
jge
movsb
and
adc
pop
cs
mov
int3
add
loop
push
push
popf
add
jbe
cmp
fistpl
mov
cmp
scas
sbb
rcpps
and
pushf
prefetch
or
pop
enter
add
cwtl
cmpsb
sbb
xchg
imulb
xor
and
push
cmp
shr
mov
dec
pop
cmp
enter
lahf
test
xor
sub
jbe
mov
add
lds
and
pop
imul
dec
mov
jp
push
or
dec
xor
mov
push
cmp
repz
fcoms
and
sbb
xor
mov
cmp
xor
or
and
ficomps
push
test
out
pushf
adc
and
mov
push
add
test
in
pop
xor
push
xor
sti
pop
pop
cmp
cmp
mov
out
cli
xor
cld
lret
shrl
pop
ds
add
or
fsubl
fwait
push
cwtl
add
inc
pop
andb
pop
add
mov
xchg
mov
push
or
push
xchg
or
jno
add
jl
std
lret
push
loopne
add
test
repnz
fisubs
mov
inc
or
cmp
sahf
add
movsl
int3
xor
add
push
lock
cmovg
push
xchg
adc
sarb
aas
push
iret
lods
pop
mov
mov
clc
mov
add
jmp
sbb
filds
negb
mov
popa
or
pop
xor
cmp
hlt
out
test
and
decb
sub
fstps
xchg
sbb
inc
add
mov
jno
lahf
pushf
out
push
rclb
scas
inc
sahf
or
stos
xchg
add
push
rolb
mov
lret
test
add
push
xchg
sbb
shrl
nop
lea
xchg
ret
xchg
cmp
jge
sub
add
maxps
loop
xorb
adc
insb
addr16
add
sub
xor
hlt
lea
cmpsl
mov
and
push
mov
icebp
add
add
mov
add
jl
daa
mov
cmc
jo
out
add
stos
scas
push
loopne
in
and
pop
jle
and
cld
sbb
sti
add
adc
adc
ds
mov
loopne
xlat
stos
add
cmc
loope
orb
pop
cmp
jecxz
xchg
add
ret
or
mov
jno
int3
add
inc
call
movsl
mov
jnp
jns
xchg
pusha
imul
pop
add
push
fsubrp
sbb
adc
mov
xor
pop
mov
mov
clc
mulb
sbb
ds
inc
outsl
insb
popf
addl
adc
add
xorb
rolb
cmpsl
in
sbb
iret
ljmp
push
out
pop
sub
mov
cmpsb
dec
clc
fs
jne
and
dec
fbld
jae
pop
hlt
cld
popa
jno
pop
or
in
flds
push
jmp
lret
call
pop
jg
push
cmpsb
or
ret
sbb
mov
ds
adc
and
or
pop
xchg
repnz
ds
jne
scas
xchg
pop
js
add
push
neg
push
mov
mov
js
into
sub
rol
in
add
lcall
jno
shll
fimull
sbb
cli
std
cmpsl
jbe
mov
loop
cmp
jecxz
les
aas
cmp
out
sub
cmc
add
mov
bound
mov
fs
sti
sub
push
mov
in
add
mov
repz
add
inc
sub
xor
mov
push
cmp
ret
add
dec
and
das
cs
bound
add
test
mov
orb
mov
mov
xchg
mov
stos
add
jle
mov
jecxz
mov
clc
sub
mov
rorb
jns
jnp
sbb
push
call
lock
cli
push
add
outsb
jecxz
pop
rorb
pop
inc
mov
int3
or
mov
add
aas
dec
lods
add
mov
enter
sarl
pop
out
shlb
xchg
fsubs
xchg
cmp
orb
add
sub
cmp
xor
leave
cld
xchg
pop
lock
add
mov
sbb
fisubrs
in
add
inc
bnd
xchg
ja
mov
jecxz
ss
imul
nop
or
in
les
rorb
repnz
rcll
sub
push
shlb
rcll
aaa
sub
faddl
mov
mov
dec
in
jg
mov
pop
cwtl
xor
push
test
jns
mull
mov
subb
jne
rorl
xchg
shlb
mov
aaa
shlb
imul
test
shrl
iret
sbb
and
les
pop
sub
sbb
icebp
popf
push
mov
ss
iret
or
test
sub
in
mov
insb
inc
imul
or
mov
xor
dec
xchg
lock
sbb
add
pusha
mov
cmp
in
push
adc
xchg
push
mov
add
jmp
or
jl
cld
xchg
and
inc
loopne
jp
cmp
scas
sub
sbb
fisttpll
imull
mov
gs
pushf
lods
loopne
xchg
and
fdivs
hlt
add
loope
insl
inc
rcrb
call
jge
lock
mov
mov
xchg
mov
cmpsl
jg
in
or
mov
bswap
jno
shlb
jns
incl
call
xor
add
nop
push
shr
pop
jo
xchg
add
imul
stc
xchg
add
sub
or
hlt
dec
or
push
subl
and
scas
divl
push
inc
xchg
inc
jb
js
adc
add
cmp
add
pop
fdivrl
inc
scas
call
xlat
push
jge
xor
pop
mov
or
and
adc
pop
nop
jnp
popf
lock
cli
ja
xchg
sti
add
lods
test
leave
xor
dec
sub
test
xor
add
inc
mov
jno
adc
inc
cld
insb
add
xchg
mov
cmp
fmuls
lea
js
and
mov
mov
sahf
pop
sbb
ds
push
loop
inc
test
cwtl
std
jbe
shlb
dec
or
add
jb
pop
das
fstps
arpl
outsb
fiadds
dec
fistpl
repz
stos
cld
test
add
test
jl
push
inc
ja
add
xchg
mov
mov
mov
loope
add
sbb
pop
mov
in
dec
pop
rcll
cli
push
stos
pop
psrad
xor
ljmp
dec
cmp
std
add
jg
loop
stos
cmp
push
add
mov
aam
cmp
sbb
xchg
int
sub
int3
jo
cmp
cmpb
clc
mov
dec
fisubs
int3
pop
or
sti
sbb
or
mov
pop
jnp
orb
add
jge
jg
pusha
mov
jecxz
subb
add
dec
imul
jns
jle
lcall
dec
adc
repnz
js
lock
inc
out
mov
mov
mov
jmp
pop
add
xchg
jecxz
add
sub
cmp
add
outsl
add
pusha
jl
push
repnz
mov
jecxz
hlt
stos
in
sub
addr16
jp
add
pop
dec
jnp
mov
mov
stos
cmp
mov
pushf
cs
xchg
ret
push
in
pop
aam
ret
loopne
mov
addb
scas
jbe
sbb
sub
movsb
mov
jge
push
mov
xchg
xchg
sub
jae
nopl
mov
je
fcmovnb
daa
fldl
das
adcb
pusha
idiv
call
popa
rol
dec
xchg
add
out
push
pop
pop
cmp
mov
jb
sbb
cmpsb
pop
or
test
outsl
sbbl
push
les
pop
or
sub
pop
xchg
inc
adc
add
pushf
add
push
xor
mov
loopne
fs
pop
add
ja
mov
inc
fisubl
rcrb
cmp
outsl
inc
cmp
mov
jecxz
push
enter
fwait
dec
cmpsb
idiv
pop
add
jmp
scas
or
into
popa
push
les
pop
sub
or
inc
add
iret
mov
sub
dec
cmp
icebp
xor
aad
or
add
sbb
add
and
hlt
test
jp
jl
cs
imul
add
mov
mov
push
leave
je
inc
dec
fidivrs
out
dec
add
jle
pop
addr16
cwtl
jecxz
jo
in
out
add
out
orl
cmp
sub
inc
and
or
mov
add
imulb
stos
pop
js
cmpsb
dec
xchg
cmp
jae
mov
and
sbb
rolb
clc
mov
lock
add
mov
std
clts
mov
pop
jge
rcrb
dec
shr
sti
lods
hlt
mov
ja
xchg
insb
cmp
jl
out
int
fdivrs
mov
jmp
out
add
icebp
mov
sbb
push
pop
scas
cwtl
mov
adc
or
dec
add
dec
xchg
xchg
and
pushf
sub
jbe
sub
mov
int3
dec
add
adc
fsubs
adc
mov
aam
pusha
sub
pop
push
sbb
std
push
xor
das
sub
popf
stos
mov
test
jmp
mov
sbb
imul
std
pop
scas
leave
stc
inc
insl
sbb
lods
in
add
es
in
jecxz
xor
or
inc
cld
hlt
add
inc
add
lods
fcoms
mov
add
jg
jne
imul
xor
and
xor
call
test
pop
leave
xchg
data16
fiadds
es
cmp
sbb
push
lods
pop
cmp
nop
mov
rcl
std
scas
popa
jmp
movsb
pusha
lret
mov
rcrb
or
adc
mov
push
and
mov
test
fists
bound
dec
inc
aam
add
fmull
loop
rorb
inc
inc
cmp
rcrl
mov
xchg
mov
rolb
and
jecxz
and
xor
add
ret
lcall
lds
mov
push
addb
inc
xor
push
xlat
inc
out
je
mov
cmp
mov
enter
clc
repnz
dec
sub
jno
add
std
lea
xchg
dec
test
insb
mov
fstl
push
fcoms
jns
push
cmp
bswap
xlat
jmp
cmp
mov
dec
add
cmpsb
xchg
xor
imul
repnz
or
loopne
or
and
call
pushf
sub
add
jb
addr16
push
add
subb
andb
cmp
iret
gs
rcrb
pop
fs
adc
hlt
inc
cld
add
popa
clc
mov
xor
push
add
push
pop
and
scas
or
pop
push
cmp
or
ja
mov
bound
dec
aam
nop
in
and
jmp
test
add
and
shl
test
lock
rorb
inc
sbb
popl
pop
sbb
fildl
push
push
jl
xchg
mov
adc
call
clc
push
mov
mov
jg
orb
pop
lahf
and
out
mov
pusha
ss
lock
lcall
and
aam
das
pop
mov
push
dec
test
fldcw
add
ss
cmp
sbb
add
repnz
mov
and
xchg
nop
jno
sbb
jp
push
sbb
fs
enter
data16
test
pop
aas
add
push
into
pop
mov
and
jb
pusha
fst
in
stc
test
loope
rol
sub
xchg
add
test
jo
sbb
ljmp
jecxz
pop
sbb
mov
ficompl
ficomps
mov
push
insb
pop
ja
std
call
mov
imul
xor
inc
addr16
dec
adc
test
shlb
repnz
sbb
sub
testl
decb
out
jp
dec
add
jmp
stos
pop
cmp
xor
add
push
gs
in
loopne
es
test
add
rcrl
sub
mov
inc
xchg
dec
scas
mov
and
mov
jmp
add
sub
jnp
in
add
mov
add
stos
xor
add
mov
dec
arpl
xchg
enter
push
daa
mov
mov
test
push
pushf
outsb
sbb
add
push
and
aam
sub
into
arpl
inc
dec
loopne
xor
rcrl
subb
dec
dec
icebp
lods
shll
and
out
cwtl
xor
push
push
dec
or
call
fnstcw
and
add
push
ds
rorb
ret
cld
cwtl
push
xlat
pop
cmp
inc
cmp
test
push
add
mov
int
sar
adc
dec
inc
cmp
push
adc
adc
in
and
inc
dec
inc
clc
mov
add
out
xchg
xchg
loope
jo
icebp
fucomp
mov
jne
push
jns
and
clc
adc
cmp
bts
test
xor
and
push
dec
cmp
mov
aad
iret
or
push
jle
push
aam
mov
cmp
inc
nop
test
dec
popa
pop
sub
or
out
fdivrl
mov
cmp
pop
pop
cmp
add
xchg
jge
jo
sbb
lock
add
add
pushf
xor
je
enter
lods
or
dec
add
mov
hlt
movsl
add
mov
fmull
stos
and
inc
call
xorl
pop
cmpsl
movsl
out
inc
aam
pushf
add
push
mov
add
sbb
in
xchg
push
add
mov
xor
stos
lret
dec
add
jb
mov
loopne
icebp
pop
jg
add
mov
or
call
mov
inc
xor
or
adc
mov
outsl
jle
add
add
insl
lcall
push
cmp
lea
inc
push
shlb
imul
rcrl
jne
mov
adc
data16
add
xor
mov
add
cli
movb
movsb
into
movsl
adc
add
jb
sub
insl
add
adc
inc
shll
incb
xchg
das
add
jne
sub
jbe
hlt
shl
scas
sbb
adcl
lret
sub
int
sub
test
pop
popa
cmp
or
xchg
lds
add
out
sub
adc
test
fiaddl
loopne
inc
add
dec
pop
lret
mov
aaa
les
out
cmp
faddl
leave
mov
mov
lcall
push
arpl
add
arpl
subb
jno
fstps
sbb
xor
add
inc
push
jecxz
xchg
mov
sti
jle
pop
mov
pop
xchg
mov
inc
push
loop
iret
lcall
or
mov
imul
xlat
inc
jbe
cs
pusha
insl
je
sub
mov
outsb
div
add
jo
aas
cmpsl
fs
mov
out
push
and
or
jb
fnstcw
add
rcl
dec
mov
out
mov
push
add
outsb
js
push
pop
ja
fisubrs
dec
mov
mov
decl
cld
sahf
into
xchg
mov
dec
add
xchg
sbb
movsb
pop
cmp
das
data16
daa
pop
lea
into
mov
add
inc
cmpsl
jnp
rol
stos
mov
add
ret
popf
xchg
xorl
lods
out
or
add
call
stos
xor
lahf
jo
lods
add
shrb
leave
mov
dec
lods
dec
jl
lods
out
mov
xor
lock
xchg
or
cmp
shlb
push
scas
or
cmp
sbb
ret
add
inc
jo
outsb
push
pop
jmp
push
aas
scas
and
add
pop
fmull
sub
add
jbe
sub
jns
inc
push
xchg
rolb
xchg
add
in
into
add
add
das
add
int
add
arpl
sahf
stc
and
mov
add
enter
xchg
xor
jl
movsl
pop
bnd
mov
sbb
fists
js
insb
pop
cmp
cmp
jo
inc
test
inc
dec
jge
imul
sub
hlt
ret
ret
or
sub
cs
jecxz
andb
add
mov
das
mov
dec
mov
std
gs
mov
popf
fadds
insl
dec
sbb
je
or
ljmp
jne
adc
pop
or
mov
add
movsb
adc
add
cmp
or
pop
scas
stos
das
inc
lcall
adcb
das
in
popf
adc
add
clc
xor
std
and
mov
rol
stos
inc
cs
lret
sahf
int
push
xchg
add
das
shl
pop
andl
or
outsb
test
add
andl
push
cmpsl
clc
cmp
push
mov
pop
and
shlw
xchg
cmp
test
push
add
push
jle
test
add
and
pop
pop
add
pop
xchg
sti
test
in
fildll
ret
jmp
xchg
push
dec
cltd
mov
add
push
fnstcw
aas
movsb
or
mov
pop
jle
sub
subb
pushf
xor
xchg
adc
test
push
fsts
xor
nop
dec
or
popf
adc
je
add
loopne
out
push
jb
insb
push
aad
std
or
jno
ljmp
mov
inc
add
jp
shll
movsb
cmp
xlat
out
loop
hlt
and
fldt
loopne
mov
and
xor
dec
pop
testl
adc
mov
add
call
xchg
add
fcomps
xor
push
test
mov
mov
add
andl
adc
pop
add
xorb
ficomps
mov
and
add
leave
push
push
push
push
push
int3
nop
add
jp
add
popa
push
inc
aas
aam
pop
push
shl
inc
cwtl
add
jmp
fistl
xor
mov
sbb
jle
shlb
leave
inc
in
cs
test
inc
dec
mov
adc
sbb
cwtl
fs
cmp
lods
mov
adc
xor
and
sub
negb
xchg
sub
outsl
dec
mov
addb
aam
add
aas
add
add
fnsetpm(287
mov
std
dec
lret
popa
cmpsb
adc
sub
add
out
leave
daa
add
addb
xor
pop
addr16
jb
add
add
popf
mov
and
sub
add
push
dec
outsl
pop
sbb
rcl
xchg
mov
or
aas
push
sub
pop
mov
in
inc
popf
add
scas
rcrb
dec
int3
sub
fstl
mov
pushf
cmp
aas
repz
lret
jnp
test
jp
mov
add
subb
mov
insb
pop
dec
mov
addl
and
out
outsb
pop
sub
push
flds
sbb
fcoms
pop
fists
dec
pop
fsubrp
add
leave
mov
add
inc
sbb
sub
or
ret
adc
rolb
jne
or
jne
push
push
cmpsb
sub
insl
xor
mov
or
add
jne
imul
out
pop
push
inc
dec
xchg
cld
add
jne
leave
xor
sbb
adc
sub
in
cmpsb
add
xor
pop
sbb
aaa
inc
sub
mov
test
cmovns
xor
xor
cmp
inc
aad
xchg
imul
pop
lds
push
inc
pop
ss
shr
and
andl
and
subb
ret
add
lds
std
arpl
push
add
sbb
dec
dec
mov
jle
jg
sbb
mov
cmpb
adc
cli
out
icebp
or
push
push
xchg
loopne
adc
or
arpl
pop
outsl
lods
pop
or
daa
ljmp
add
jo
add
repz
dec
lea
add
shlb
xchg
adc
adcl
jo
add
mov
lret
popa
pop
sub
xchg
mov
inc
pop
sub
pusha
jae
hlt
outsl
sub
mov
xchg
mov
push
jo
add
dec
dec
imul
ret
xchg
fadds
clc
pushf
movswl
andb
cltd
jno
add
test
or
std
loope
jecxz
xchg
bndstx
push
clc
push
int
pop
iret
data16
mov
xor
xchg
or
rolb
das
adc
outsb
mov
jne
mov
jecxz
sbb
sarb
dec
movsb
xor
mov
xchg
mov
cmpsb
push
pop
push
sarl
in
movsl
mov
or
aas
cmpsb
sub
jl
inc
pop
sbb
cs
stc
inc
add
sub
add
add
cwtl
test
cmp
xchg
cli
push
or
lods
sbb
inc
imul
call
mov
push
and
add
mov
add
test
xchg
push
mov
mov
xchg
test
paddd
xchg
rorb
pop
daa
out
addl
or
jbe
dec
or
add
cmp
and
ljmp
jno
add
or
jb,pt
add
add
inc
sahf
adc
in
ret
stos
pop
jne
inc
jmp
cmc
addr16
cmp
pop
or
aaa
cld
adc
add
push
in
mov
jl
adc
push
xlat
aam
lret
enter
orps
and
inc
push
mov
cld
and
sbb
movsb
mov
hlt
mov
dec
stc
je
rolb
push
xchg
add
das
out
fiadds
daa
mov
ret
test
jecxz
addb
lock
loope
aam
sarl
push
les
jmp
pop
mov
cwtl
mov
mov
lock
jae
add
add
aam
hlt
aaa
cs
xor
insb
bound
push
xchg
and
add
cwtl
inc
sbb
lcall
xchg
fcoml
push
push
xor
add
cmp
cmc
sbb
mov
adc
adc
mov
cli
fidivrl
fs
xchg
test
push
call
popl
xchg
add
js
ljmp
pop
imul
mov
xchg
or
add
inc
in
jg
pop
jae
or
enter
rorb
sahf
pusha
int
call
ds
pushf
inc
cmp
xchg
sbb
sub
lods
shlb
ud2
cltd
ss
mov
xchg
pop
and
fdivl
push
jns
icebp
mov
jp
cmp
add
fcmovbe
or
add
or
adc
xchg
rclb
xor
adcl
and
jns
add
mov
dec
push
out
loop
mov
mov
cwtl
int
loopne
dec
jge
cld
cmp
pop
test
lcall
mov
mov
cmp
xchg
pop
imul
adc
add
ds
dec
divl
xor
or
cli
pushf
fidivs
sbbl
adc
out
add
insb
cmp
mov
and
xchg
jle
out
inc
jmp
xchg
inc
lock
test
and
xor
test
xchg
adc
mov
mov
add
cli
test
out
clc
jb
dec
jecxz
pop
pusha
repz
mov
movsl
loope
add
es
fcomip
loop
push
pusha
stos
sar
jns
dec
or
ret
and
popf
lods
dec
mov
mov
loope
hlt
gs
xor
push
mov
andb
cwtl
add
inc
cs
mov
mov
push
pop
xchg
mov
aad
inc
add
sub
roll
out
dec
stos
mov
loop
push
movsb
adc
add
lods
pop
cmp
jl
aad
jp
std
popf
and
and
jmp
sbb
and
mov
lock
push
neg
and
mov
pusha
ja
repnz
add
je
mov
call
mov
movsb
lock
sbb
cli
ja
mov
scas
mov
adc
add
gs
add
out
insb
inc
ficompl
rclb
push
inc
loop
call
shll
add
cwtl
repnz
inc
sub
and
rolb
mov
add
and
mov
lret
loope
xor
out
aaa
or
fs
jno
push
push
cmp
adc
in
push
pop
or
movl
hlt
clc
xor
bswap
repnz
push
add
or
lret
xchg
and
jb
or
mov
push
mov
jb
sbb
push
pop
test
mov
mov
movsb
aaa
dec
xchg
les
jge
dec
or
mov
sbb
mov
cs
adc
mov
mov
aad
jecxz
lock
imul
repnz
mov
icebp
push
add
popa
sub
pop
add
imul
add
insb
cmc
fidivl
push
pop
and
cmp
add
icebp
mov
ror
hlt
or
cwtl
call
es
test
add
ljmp
fadd
inc
pop
add
mov
leave
repnz
sub
push
lret
pop
cli
movsb
adc
aad
and
add
or
mov
add
je
and
pushf
dec
dec
or
push
xor
push
bound
out
adc
mov
out
hlt
in
pop
js
lods
add
cmp
cmpsl
xchg
das
mov
inc
pop
jbe
add
cmp
out
sahf
pop
adc
aas
lods
add
or
cltd
shlb
add
pushf
fsubl
dec
mov
push
or
add
fbld
in
cwtl
jne
inc
cld
int
add
mov
pop
lods
cmpsl
mov
call
rcrl
inc
cld
push
inc
call
xchg
jb
out
pusha
mov
hlt
pusha
pop
lods
dec
add
push
jmp
mov
adc
mov
sarl
fiadds
fnstenv
adc
jecxz
lock
aad
fldl
cmp
data16
dec
pop
mov
dec
add
dec
fmull
jnp
sub
insb
test
cmp
data16
repz
scas
add
in
scas
inc
add
sarb
loopne
inc
inc
adc
add
xlat
mov
por
cmp
dec
add
pop
dec
sbb
xchg
jae
outsb
out
or
add
cld
or
aaa
das
add
and
dec
ljmp
dec
mov
sbb
rorb
sub
add
pop
es
nop
or
ds
in
mov
shl
lahf
sbbl
cmc
sbb
push
mov
leave
out
rorl
frstor
xor
pop
mov
or
test
add
lock
movb
mov
mov
add
xlat
dec
ja
jle
add
imul
xor
int
mov
in
in
add
bound
add
jae
fidivs
repz
dec
mov
js
and
xchg
inc
add
hlt
jg
add
mov
add
gs
pop
sub
xchg
jb
insb
inc
jnp
adc
mov
push
and
cltd
fsubl
jecxz
sub
add
loope
aad
fwait
sbb
sbb
xchg
xchg
mov
repnz
roll
imul
or
sahf
into
push
mov
lcall
add
lods
stos
ljmp
mov
hlt
jle
test
add
andl
add
iret
xlat
out
lods
or
pop
xor
jo
andb
cli
data16
xor
push
in
cld
cwtl
lret
fadds
pop
mov
xchg
xor
outsl
cli
xor
pop
add
cmp
push
jmp
and
mov
sbb
mov
shlb
dec
xchg
mov
das
jno
js
cld
jns
add
inc
pop
or
arpl
xchg
add
mov
jge
xchg
gs
sub
lret
add
cwtl
jl
ret
add
repnz
cld
sub
or
jae
mov
mov
leave
pop
fnstenv
jbe
cmp
scas
sbbb
sbb
mov
push
into
xchg
pop
push
xor
mov
mov
mov
rcrb
insl
adc
inc
add
jb
nop
xor
dec
add
les
test
add
pusha
stos
xor
out
sbb
mov
pop
icebp
adc
xlat
clc
enter
jo
lods
mov
push
in
pushf
adc
push
insb
xchg
and
add
loopne
cmpsl
repnz
hlt
mov
jae
daa
adcl
jnp
dec
rclb
pop
jne
and
mov
daa
movsb
pop
jl
cmpsb
inc
mov
dec
fnstcw
pop
pop
add
mov
repnz
cwtl
push
outsb
jmp
add
inc
adc
jp
xor
addr16
add
pop
fdivp
xchg
pop
aam
aas
cmpsb
adc
mov
cmp
in
add
sub
add
push
inc
roll
lcall
loope
mov
xor
inc
jecxz
neg
add
in
shlb
xor
push
sub
add
sbb
mov
xor
mov
pop
xchg
arpl
push
jns
loop
fbstp
add
fs
cli
cmp
aaa
adc
roll
push
push
add
mov
push
jg
pop
lds
popa
dec
int3
inc
cld
mov
add
rcll
push
or
push
jo
dec
or
sbb
inc
cmp
jnp
sarl
jae
loop
mov
xchg
subl
fcmovb
pop
leave
pop
pop
xchg
push
or
add
xor
and
aad
loop
mov
mov
addb
sbb
sbb
in
in
add
rclb
dec
ds
scas
and
mov
pushf
jns
je
xchg
add
add
pop
dec
inc
mov
sbb
pop
adc
rcrl
pop
or
out
jp
and
mov
out
sub
or
shll
ja
xchg
xchg
test
ja
add
mov
add
sbbb
pop
mov
jno
enter
lret
out
icebp
cltd
mov
mov
dec
sar
popf
push
cmc
add
push
sub
pop
mov
lock
mov
mov
lretw
and
sub
outsl
add
popf
fst
and
cwtl
sbb
jmp
data16
in
or
push
pop
add
and
js
inc
fiadds
inc
push
imulb
arpl
add
adc
pop
int
pop
sub
fmulp
adc
and
add
fmuls
cmp
dec
mov
cmp
pop
inc
push
int
pop
add
mov
adc
add
bnd
bound
loop
pop
in
jle
jo
jns
mov
outsb
push
mov
cmp
sub
repnz
aam
je
mov
lods
cld
and
mov
add
add
insb
mov
or
xor
mov
imul
sbb
push
add
lods
bound
add
out
cmpsl
repz
or
mov
cltd
mov
adc
imul
jge
inc
cmpsl
movsl
fwait
mov
fnsave
cwtl
jl
dec
in
inc
add
mov
dec
imulb
mov
shr
jae
add
scas
push
lcall
movsl
iret
into
dec
sub
call
push
add
jnp
scas
in
push
cmp
xor
mov
sub
outsl
inc
push
mov
js
out
outsb
adcb
push
dec
add
lock
call
xor
pushf
pop
mov
pop
adc
add
inc
insl
cld
dec
shll
pushf
xor
add
mov
adc
movsb
mov
add
imul
sbb
xchg
add
test
nop
addb
daa
mov
cld
and
dec
push
push
not
mov
pop
inc
loopne
mov
sub
adc
nop
incb
sbb
cltd
lcall
jle
adc
cmp
imul
jb
mov
loopne
pop
pop
add
cmp
push
and
aam
xchg
daa
cli
or
jbe
add
cli
inc
insl
and
add
insb
stos
push
xor
pop
mov
out
add
repnz
dec
jae
jp
lret
sub
es
add
or
add
rolb
add
jne
int
mov
pop
pop
loope
inc
add
and
in
add
xchg
inc
mov
adc
ds
xchg
cmp
ljmp
inc
push
and
cmp
pop
loopne
aaa
sbb
dec
mov
pop
hlt
mov
hlt
stos
dec
mov
xchg
or
fisttpll
sbb
leave
std
fsubr
sbb
add
xchg
mov
xchg
dec
pusha
add
scas
dec
mov
or
mov
mov
arpl
loop
add
loope
jnp
pusha
stos
mov
xorb
xchg
xchg
int
jge
add
xchg
divl
sti
jb
scas
mov
mov
scas
jno
fstl
lahf
add
hlt
xchg
repnz
pop
loopne
mov
add
sub
mov
jmp
lds
add
mov
add
int
jge
mov
or
cs
pusha
and
addb
add
lcall
call
aad
loopne
sbbb
jg
addb
popa
sbbb
das
xor
dec
add
shr
or
aad
clc
or
mov
stos
dec
mov
add
sub
nop
add
ret
xchg
lds
add
mov
lock
sbb
adc
mov
pop
push
sbb
jbe,pn
mov
push
pop
mov
or
lcall
lret
pop
adc
jle
test
pop
repz
pushf
int
stos
aaa
pop
inc
pop
push
dec
push
or
mov
out
xor
fadd
jae
xchg
andb
mov
cmp
mov
jo
sar
stos
add
shlb
cwtl
incl
pusha
lock
dec
mov
add
shlb
jae
cmp
mov
and
jmp
sbb
adc
mov
pusha
xor
enter
shll
or
mov
jb
inc
push
pop
out
add
and
mov
stc
mov
mov
lahf
outsl
idivl
mov
cld
sub
add
fisubs
ds
imul
rol
xchg
jno
pop
jg
fsubs
or
arpl
jmp
cmpsb
addr16
add
push
sbb
xorl
sar
jp
sbb
and
sbb
xlat
add
into
stos
in
cmp
mov
cwtl
aas
push
adc
add
fs
push
cld
popf
add
adc
pop
xchg
add
xchg
xor
cmc
inc
movsb
add
orb
pop
test
inc
sub
sbb
jle
xor
and
ljmp
les
push
xor
cs
or
das
in
shl
pop
add
loop
stc
in
bnd
sti
mov
mov
cmp
add
lock
push
sub
jge
push
and
sub
fistl
ja
push
mov
jg
xor
sti
rorl
inc
dec
adc
inc
mov
or
testb
add
xor
and
sbb
das
dec
sarb
es
flds
pop
cmp
mov
imul
mov
add
outsb
push
fs
sbbb
pop
or
clc
push
mov
fdivrl
pop
popa
testl
loopne
add
cmpsl
es
outsb
cld
movsb
add
push
enter
add
and
pop
cmp
push
sti
inc
jp
inc
movsl
call
push
data16
aaa
jmp
jae
lcall
adc
nop
pushf
xchg
mov
iret
cmp
mov
xor
mov
fcoms
imul
js
dec
mov
fdivl
roll
notb
dec
pop
fidivrl
clc
and
sub
pop
mov
cs
xor
outsl
cmp
xor
dec
fistps
pop
pop
add
add
hlt
or
push
mov
jmp
bound
and
dec
jb
hlt
xchg
roll
es
ret
pusha
inc
xchg
orl
sub
add
fwait
xchg
inc
cmp
call
lock
add
add
lret
dec
sbb
les
xor
add
push
sbb
cmp
repz
push
incl
and
aam
lock
ja
add
fisubs
in
stos
or
mov
sub
inc
add
or
or
shll
stos
repnz
xchg
incl
pushf
cmp
fnstsw
pushf
mov
mov
pushf
loop
adc
and
ret
nop
test
cmp
or
xor
jnp
push
sarl
mov
push
jmp
sub
push
lcall
pop
inc
push
xchg
or
add
and
jg
add
xchg
mov
mov
mov
pop
in
pusha
push
fs
call
adc
sar
dec
add
test
mov
adc
aad
add
loopne
jno
stos
dec
add
sub
and
cmp
dec
jl
shl
jno
add
push
inc
jge
ret
fsubrs
bound
sub
pop
add
push
out
pop
testb
sub
in
sti
mov
daa
pop
enter
fcoms
enter
push
sbb
js
add
push
jnp
inc
cli
out
add
jns
pop
mulb
hlt
pop
pop
add
sar
pop
xor
dec
ja
mov
jnp
das
push
dec
mov
xchg
sbb
xor
push
push
add
lcall
jae
add
repnz
repz
pop
jle
lea
pop
test
add
pusha
pop
push
add
add
int3
and
popf
sbbb
iret
sarl
sahf
push
or
and
popf
and
jns
nop
or
in
test
and
ret
and
dec
sbb
popl
paddb
pusha
xchg
pop
jae
push
add
cmpsb
outsb
cmc
std
push
pop
cmp
push
and
adc
mov
pop
push
pop
inc
xor
test
pusha
xor
mov
mulb
add
lret
movaps
mov
sbb
add
mov
popa
vpunpcklbw
xchg
jle,pt
arpl
cmp
jge
pop
push
add
push
mov
pop
add
xlat
nop
and
or
dec
push
pop
push
inc
dec
pop
inc
test
popf
stc
add
xor
xor
movsb
pop
sub
cld
add
notb
in
imul
push
add
test
sub
scas
addb
dec
out
scas
adc
add
into
jb
ds
cmp
add
mov
sbb
add
lods
imul
imul
and
xchg
cmpsl
fsubrl
mov
add
xor
adc
clc
icebp
jecxz
xchg
sbb
insb
adc
xor
jg
rolb
and
dec
movsl
mov
insl
insb
pusha
rclb
cmp
add
cld
and
xor
aas
aas
cmpsb
orb
in
daa
adc
and
mov
nop
mov
and
in
and
jg
sbb
inc
push
sub
mov
rcrb
add
sub
or
test
jle
in
add
popf
add
out
push
cmp
pop
pop
loop
and
cmpsl
mov
pushl
add
or
push
or
fdivrp
and
xor
add
data16
mov
xchg
jnp
out
push
icebp
daa
je
sbb
movzbl
fwait
and
fdivrs
jle
xchg
mov
mov
sahf
jnp
lock
mov
push
xchg
add
sub
sub
add
mov
cmp
and
add
inc
insb
jmp
jae
cmp
inc
mov
xor
mov
loop
fwait
out
popf
add
pop
add
je
sub
mov
sar
sbb
cmp
int3
jecxz
fldl
xchg
push
xchg
inc
data16
or
sbb
pop
adc
loopne
lcall
push
stc
cmp
mulb
mov
push
adc
nop
sub
int3
bound
and
sbb
dec
data16
es
les
in
or
mov
icebp
xor
inc
lahf
lret
dec
or
fbstp
xchg
call
cmp
adc
fwait
xorl
mov
push
aaa
fdivl
xchg
mov
aas
push
pop
cmpb
idivb
mov
mov
hlt
lret
jns
lock
xor
sbbb
shrb
test
scas
cmpsl
add
push
pop
inc
daa
rclb
add
nop
dec
leave
xchg
adc
add
adcb
xchg
cmp
cmc
push
sbb
dec
adc
sub
mov
int3
add
stos
or
aaa
insb
sahf
jae
add
mov
jg
mov
push
pop
mov
enter
out
incb
sidtl
js
fs
mov
add
add
les
in
xchg
xlat
cld
push
add
imul
jo
mov
mov
or
xlat
add
mov
movl
enter
add
push
lock
push
lods
jle
fcompl
into
push
adc
or
jns
in
in
fldl
jge
js
or
sbb
jmp
and
fwait
mov
sub
mov
add
cmpsl
fsubrp
pop
into
inc
mov
daa
imul
sbb
fs
jmp
pop
repnz
add
xchg
pop
pop
or
stc
clc
sarb
sbb
or
pusha
nop
bound
arpl
rorl
lods
or
xor
fiaddl
xor
ret
das
push
rolb
mov
push
inc
sahf
fwait
ret
push
loopne
add
add
jno
mov
dec
push
sti
add
sub
sub
pop
sbb
or
fcompl
loopne
mov
add
repnz
xor
lcall
ds
ficompl
loopne
in
add
jp
sbb
mov
in
test
xlat
daa
rclb
jb
arpl
sarb
lds
test
addl
push
pop
add
xor
add
popf
push
pop
pop
rcr
add
xchg
sbb
movq
add
test
jo
jnp
and
sbb
xlat
mov
mov
inc
jge
inc
jae
jno
cmp
or
add
cmp
adc
ret
jae
lea
adc
mov
add
mov
mul
addl
xchg
jp
mov
or
test
cmp
add
pop
mov
test
ja
add
shl
fimuls
push
ja
sub
cmp
pop
add
popa
nop
inc
repnz
in
mov
fsub
add
sub
imul
adc
shll
stos
ficoml
inc
pusha
cmp
xchg
lret
stos
and
mov
dec
in
cwtl
mov
push
pusha
lock
ret
es
or
rorb
popa
add
shlb
add
and
sbb
shr
in
sub
push
pop
add
xor
xchg
mov
cmp
stos
cmpsl
jge
aam
add
mov
pop
es
add
lods
adc
into
mov
sub
fistpl
add
and
inc
enter
add
insb
add
inc
mov
lock
out
ljmp
faddl
rorb
jecxz
cwtl
push
outsb
add
mov
shl
xor
add
outsb
fimull
or
inc
xor
and
add
mov
adc
setle
loope
les
or
fs
add
and
out
ljmp
push
nop
addl
scas
in
shlb
cmp
ja
sarl
movl
loop
add
fcoml
dec
cs
int3
adcb
pop
xor
inc
call
or
jg
add
xlat
lea
xchg
add
xor
lcall
inc
inc
dec
and
xor
jle
xor
mov
std
dec
and
xlat
imul
dec
pusha
cmpsl
clc
and
xchg
aas
out
or
jbe
sub
stos
daa
push
roll
or
push
push
add
sahf
add
insl
add
jns
leave
adc
and
incb
mov
cs
push
lock
mov
or
aad
and
out
inc
jg
add
cmpb
sbb
and
ret
loop
add
loope
xor
mov
pop
lods
xadd
add
repnz
sub
mov
push
xchg
xchg
dec
in
mov
jmp
mov
or
call
clc
cld
nop
cmp
repz
sub
adc
pop
jbe
add
lcall
mov
add
and
xchg
cmp
lods
fists
or
leave
jge
dec
cmp
lds
add
repnz
add
xchg
or
mov
add
scas
in
mov
subb
pop
insl
push
add
jp
add
dec
xor
mov
popf
idivl
mov
out
push
add
aaa
push
and
cmp
lret
pop
add
dec
mov
adc
lcall
sbb
cltd
orl
mov
add
movsb
imulb
mov
pop
sbb
mov
stos
in
sbb
inc
out
mov
sbb
push
mov
int
addb
xchg
aad
xorl
add
jge
push
mov
jle
fst
xor
jge
xchg
inc
dec
mov
add
aam
inc
push
add
cmpsl
cld
outsb
rorb
add
xor
pmullw
cli
stc
dec
add
jle
ss
inc
fmuls
push
lds
dec
and
pop
pop
inc
jmp
shr
sbb
and
mov
xor
icebp
out
add
cmpsb
fucomp
push
iret
inc
inc
add
and
rclb
mov
push
aam
lcall
in
leave
pop
inc
icebp
fadd
jo
aad
sbb
push
push
sub
or
jo
inc
sbb
daa
push
pop
das
mov
pop
mov
add
lods
add
je
mov
mov
xchg
pop
xor
out
jae
rcll
inc
cmpps
in
cld
add
xchg
dec
cli
push
xchg
pop
lret
inc
addl
sti
push
sahf
pop
loopne
outsb
orb
loop
call
lock
inc
lahf
push
and
cli
mov
xchg
test
and
ja
add
mov
add
mov
add
lods
aam
fstps
pop
add
sahf
into
dec
xchg
inc
add
je
cld
das
xchg
cmp
rol
int
jnp
jmp
dec
sbb
mov
mov
cmp
push
or
dec
lahf
mov
jns
fldcw
push
cltd
cmp
pusha
lea
aad
push
lcall
int
cmpsl
pop
imul
push
mov
sbb
rcrb
movsl
and
stc
cmp
inc
mov
add
jecxz
xchg
popa
ss
and
adc
pop
sbb
lods
mov
sub
xor
dec
imul
ret
cwtl
int
cli
icebp
mov
and
and
cmpsb
daa
cmp
dec
es
xchg
mov
mov
incl
les
add
lahf
sbb
sbb
pushf
xchg
cltd
jns
idivb
in
cmpsl
std
outsl
int3
and
fistl
pop
js
add
xchg
clc
xchg
or
test
fsubs
lcall
insb
fdivs
push
repnz
in
add
loop
filds
jp
test
into
pushf
jae
add
pop
fsubs
add
lock
add
mov
and
xchg
sarl
mov
xor
ja
jae
subl
push
push
jl
xchg
push
fldl
push
add
sbb
sub
movsb
mov
and
push
push
jl
icebp
jns
fsubrl
add
and
cltd
adc
mov
mov
push
js
call
lds
add
mov
jp
push
ud1
or
push
sbb
icebp
cwtl
push
add
pop
js
repz
fwait
xchg
add
enter
and
and
rolb
es
jge
ja
fstp
roll
and
int
adc
sbb
add
lret
inc
add
sbb
fs
mov
add
sarl
popa
push
push
shrl
inc
pop
jae
add
push
cmp
ret
add
mov
call
insb
pop
ljmp
dec
fisttps
out
test
loop
add
jmp
data16
and
fldl
shll
pop
add
ljmp
sbb
cmp
cmp
add
mov
dec
push
mov
adcl
and
daa
inc
je
mov
sub
mov
add
sbb
cwtl
ja
add
cmp
inc
lret
add
mov
iret
loopne
jecxz
int
lcall
push
pop
addr16
inc
jp
pop
jne
pop
rorl
pusha
adc
cmp
inc
lds
pop
mov
cmpl
add
jne
sbb
cltd
bound
xchg
sub
or
fcmovne
sbb
jno
sub
faddp
popa
push
or
fldl
rcrb
aad
int
add
fdivr
lahf
adc
add
or
out
mov
xor
stc
cmp
ss
lret
das
iret
dec
sbbb
in
push
and
or
jp
mov
add
insl
push
xchg
add
or
push
cltd
ficoml
lldt
sbb
sbb
xor
getsec
pop
pop
sub
or
loope
xchg
push
or
pop
pop
data16
dec
inc
popa
pop
push
inc
aam
scas
add
push
outsb
xchg
addr16
pusha
rcl
dec
pop
sbb
lock
inc
data16
add
inc
mov
fcom
lods
mov
or
inc
add
or
lahf
aas
loope
adc
xor
cmp
rcrl
fcomps
leave
cmp
add
and
mov
call
and
aas
or
fldl
sti
cs
xor
rcll
xchg
add
lds
mov
lcall
test
adc
out
sbb
push
rol
and
idivb
test
or
or
imul
mov
mov
mov
cmpunordps
add
inc
in
adc
xor
movsl
pop
and
xchg
or
pop
or
and
dec
movsl
xor
mov
cmpsb
aas
or
jo
cmp
mov
mov
push
cmp
lods
add
mov
cmp
addr16
inc
bound
adc
push
push
inc
pop
jp
push
stos
iret
pop
and
add
pop
cwtl
adc
mov
pop
pop
mov
mov
pop
jl
pop
xchg
lret
xchg
inc
aas
inc
add
adc
jmp
outsl
addb
das
cmp
mov
push
andb
dec
pusha
ret
repnz
and
or
fistpl
cltd
mov
mov
insl
pop
xchg
add
xlat
xor
adc
incb
add
ds
daa
mov
add
clc
xor
xchg
icebp
test
aaa
push
add
mov
push
mov
clc
adc
mov
fs
fistps
ret
rolb
xlat
add
out
mov
icebp
add
movb
les
nop
iret
xchg
lahf
pop
inc
lods
dec
lcall
add
cmp
jge
mov
popa
xor
inc
out
mov
cmp
in
add
sbb
xor
pushf
add
sub
mov
cmp
jnp
and
outsl
hlt
pusha
lret
test
dec
add
in
inc
cmpsl
mov
or
es
sub
jb
sbb
call
xchg
xor
cmp
sbb
and
pop
or
adc
jne
fiadds
mov
add
addr16
sub
adc
or
rolb
jg
orb
aam
mov
mov
cmp
jb
insb
and
add
sbb
pop
sbb
in
pop
in
push
roll
xchg
ret
cld
les
popw
adc
xor
add
movsl
aas
pop
addr16
lock
jne
xchg
mov
int
add
sbb
mov
jae
mov
pushl
aaa
inc
or
add
and
int3
enter
cld
mov
or
pshufw
mov
dec
add
daa
mov
pushf
mov
icebp
sbb
inc
inc
mov
inc
add
pop
imul
add
and
data16
arpl
cmp
add
rorb
inc
mov
cmp
xor
xchg
pop
fs
push
xor
fnsave
out
fsubrl
add
in
fwait
jae
xchg
scas
in
cld
xor
or
cmpsb
cmpsl
mov
jno
xorb
fcomps
mov
mov
and
or
jo
mov
inc
pop
cs
dec
inc
adc
andl
dec
sbb
and
add
mov
outsl
and
sahf
mov
pop
out
insl
lock
dec
pop
loopne
aad
mov
xor
dec
mov
loopne
dec
movsl
jo
cmpsb
int3
add
ret
dec
sbb
cmp
pop
xchg
add
add
insl
lret
or
xchg
js
fildl
mov
sbb
or
mov
sub
pushf
out
sti
cmc
test
and
je
or
push
push
adc
insl
add
add
push
fmul
pop
push
pop
and
mov
lds
in
xor
aam
xor
add
iret
xchg
adc
fcoms
addr16
inc
rolb
xor
cltd
test
dec
lahf
xchg
hlt
inc
fbstp
cltd
cltd
les
lret
loope
pusha
add
mov
lods
bound
inc
add
scas
mov
adc
and
and
push
cld
arpl
repnz
cmp
dec
cmpsb
xchg
push
imul
mov
adc
sub
int
add
xor
push
fs
sbb
mov
mov
or
jg
sti
shll
mov
cli
imul
sbb
cmpsb
push
pop
leave
add
xchg
test
and
out
mov
cmp
pop
mov
add
out
mov
stos
dec
daa
cmpsb
add
adc
fcmovu
shrb
ljmp
sbb
daa
sarl
popf
jl
pop
mov
inc
jne
and
lods
add
call
add
dec
loope
xchg
push
loop
jo
and
pushf
mov
dec
pusha
rcr
repnz
jp
jg
or
fcmovnb
inc
shl
pop
jne
push
push
inc
in
mov
push
add
and
push
and
inc
pop
cmpsl
stos
cmp
add
cmp
scas
pusha
push
push
sti
jnp
ds
gs
jecxz
add
cmp
cmp
push
testb
in
repz
outsl
inc
nop
jl
cmp
pop
fildl
stc
sti
mov
adc
adc
xchg
mov
aad
add
std
mov
mov
mov
ljmp
push
or
and
aam
add
movsl
xor
dec
bound
and
f2xm1
mov
sbb
mov
iret
lret
mov
inc
fdivrs
add
arpl
xchg
cmp
adc
add
and
dec
mov
pop
clc
iret
adc
mov
js
shr
in
pop
sbb
add
jbe
sub
push
sbb
pop
mov
adc
gs
addr16
insl
and
xor
jge
dec
or
fucomp
shl
cmpsb
add
outsl
in
pop
pop
and
mov
mov
push
cmpsl
ja
ljmp
cmp
andb
fbstp
dec
mov
jge
cmpsl
aas
testl
inc
add
and
idiv
fs
cmp
ds
sbb
xchg
push
rolb
pop
adc
pop
xor
adcb
jmp
push
popf
pop
or
sub
sub
mov
fiadds
hlt
xchg
lods
pop
arpl
xchg
into
sub
pusha
fcomi
pop
xor
int
scas
and
add
lock
jbe
add
push
cli
sbb
inc
pop
shl
ror
mov
mov
adc
fnstenv
mov
into
xor
push
in
mov
out
mov
loope
addb
fsts
icebp
sbb
in
mov
sar
pop
add
pusha
xchg
push
cmpsl
imul
dec
lock
out
inc
jg
fwait
addl
shrb
paddb
in
xchg
daa
and
loopne
call
mov
cmpsb
xchg
mov
mov
push
ljmp
xor
sbb
arpl
push
mov
mov
fs
add
mov
adc
cmp
mov
and
xorl
fistps
and
add
bsr
pop
ljmp
test
enter
jno
rorb
jne
adc
xchg
aas
sbb
xchg
pusha
and
lea
jmp
fld
xchg
test
subb
js
pop
mov
popf
shlb
pop
sbb
add
std
inc
adc
es
mov
inc
into
pop
xchg
rcrb
inc
aaa
and
pop
enter
rcl
fimuls
mov
jo
push
sbb
adc
dec
bound
adc
mov
inc
cwtl
out
mov
jo
and
div
jl
and
sbb
les
incl
push
jge
pusha
shl
pop
mov
lahf
rcll
or
jle
or
into
fcmovb
and
js
add
mov
or
xchg
fnstcw
arpl
jb
shlb
add
lret
inc
aaa
and
mov
adc
jb
sub
xor
adc
das
mov
outsb
inc
mov
mov
addb
mov
fs
in
push
mov
xchg
or
mov
jnp
and
jbe
mov
inc
mov
pop
xchg
xor
inc
dec
sbb
iret
nop
arpl
fidivs
js
mulb
add
push
sbb
or
push
cmp
fcoml
clc
leave
add
ret
jo
out
ja
push
das
ret
lock
leave
loopne
xchg
addr16
cs
mov
sbbb
ds
jnp
add
add
sbbb
jge
loope
or
mov
nop
adc
jne
daa
les
mov
out
popf
inc
rclb
test
jne
xchg
pop
add
mov
push
movl
or
add
fistpl
or
sbb
sub
adc
outsb
mov
push
sti
andb
mov
add
mov
stos
sub
jns
mov
cltd
arpl
inc
out
adc
sbb
shlb
xor
mov
cmp
imul
jmp
jo
mov
add
or
push
jle
push
out
and
add
adc
or
mov
mov
mov
lods
rcrb
outsl
add
dec
rcrb
cmp
add
negl
cmpb
jge
adc
mov
in
push
inc
movsb
add
cmp
cs
mov
out
inc
sbb
out
iret
in
mov
leave
daa
shl
xchg
icebp
or
inc
stos
adc
sub
dec
and
sbb
lea
shrb
adc
fisubrs
adc
lock
add
and
xor
int3
or
popa
rolb
aaa
leave
mov
cmp
push
into
out
adc
add
rcrl
or
ret
mov
aas
sbbl
in
data16
jb
add
push
inc
xor
lods
sub
push
mov
rcl
mov
shl
shrl
and
outsb
and
movsb
sbbb
push
add
into
jo
or
repz
shll
mov
add
inc
cld
fdivr
sbb
sbb
dec
sar
push
sti
add
add
pop
pusha
mov
mov
fnstcw
das
shlb
rcll
mov
mov
mov
fsubl
mov
mov
xor
leave
in
pop
inc
push
imul
cmc
add
sub
inc
pop
push
lret
pushf
adc
mov
aaa
add
sbb
mov
movsb
jb
inc
mov
pop
push
cmp
sub
test
shl
pop
xor
lds
and
imul
lods
in
mov
mov
imul
adc
or
movsb
mov
js
pop
xorb
add
out
mov
or
orl
jbe
dec
push
push
push
jp
cs
inc
sbb
test
push
mov
lock
xchg
xlat
xchg
ret
in
clc
mov
mov
or
data16
jne
scas
pop
and
pushf
and
add
insb
divl
and
mov
in
push
xor
stc
add
sbb
mov
bound
es
imul
lds
and
sbb
dec
sbb
inc
push
popa
add
or
sar
pop
enter
jle
sub
pop
inc
add
mov
cwtl
adc
sbb
scas
mov
enter
mov
iret
inc
xchg
dec
sbb
jecxz
add
mov
mov
xor
sbb
add
xlat
pop
sahf
jp
cld
repz
adc
pop
jg
or
add
xchg
sbb
push
pop
pusha
jo
mov
sub
pushf
pop
mov
rorb
lcall
lock
into
mov
and
inc
add
ret
and
enter
loope
pushf
sub
push
iret
mov
subb
sbb
aad
adc
shlb
sarb
sbb
movnti
mov
push
push
add
std
xorb
rcrl
loope
aas
adc
ret
cwtl
stos
out
add
lea
sub
push
lret
sub
push
xchg
push
sub
jne
add
mov
xchg
arpl
out
call
nop
inc
mov
cmp
testl
push
jecxz
into
orb
rcrl
push
push
add
out
add
xorl
test
xchg
or
shlb
inc
adcl
and
sbb
cmp
decl
push
jg
mov
mov
test
call
movsb
lods
and
lahf
adc
add
jno
cld
sub
fadds
out
shrb
pop
add
push
mov
push
loope
jl
movb
mov
mov
into
inc
or
or
in
shrb
mov
lret
cmp
cmp
mov
aad
mov
out
cmp
or
testl
dec
sub
mov
insl
adc
jl
xor
les
add
stos
loope
mov
add
and
pushf
cmp
aas
into
mov
mov
cmp
sbb
or
pop
add
add
inc
mov
push
cmp
push
ljmp
mov
sbb
bound
xor
in
push
inc
loopne
inc
adc
dec
lret
push
stos
mov
js
loopne
add
cmp
repnz
xchg
mov
inc
pop
and
sub
scas
andb
pop
das
aam
push
sar
sbb
jne
sub
push
lret
jl
inc
fs
mov
add
cs
popa
lods
cmp
sbb
dec
aas
lret
int3
dec
negl
leave
dec
jg
add
movsb
mov
dec
inc
xchg
xor
rcrl
push
pop
nop
imul
add
ljmp
movsb
add
adc
mov
rclb
stos
das
cmc
lcall
xchg
adc
mov
sub
or
inc
shlb
add
es
and
scas
xor
pop
xchg
sete
or
mov
or
das
inc
dec
or
mov
add
int3
stos
rclb
xor
stos
sub
pop
pushf
jns
sbb
mov
dec
rorb
mov
or
or
das
mov
mov
xor
add
jl
outsl
push
pop
in
cmp
mov
pop
xchg
ljmp
mov
xchg
loopne
add
inc
mov
out
xor
in
orb
pop
imul
cmp
pop
xor
call
fstl
mov
es
dec
fmull
cmc
orb
mov
clc
xor
lock
cld
push
lods
pushf
mov
mov
das
mov
repz
xor
xlat
mov
ret
push
shlb
fiadds
jl
mov
jb
fisubl
mov
or
adc
sub
xor
push
xor
inc
mov
andb
mov
add
stos
pop
int3
loopne
gs
sub
iret
and
fidivrs
ja
rolb
push
add
jne
or
flds
mov
add
out
xor
dec
ret
push
xchg
mov
andl
fwait
pushf
sub
push
or
movsb
and
jb
ja
sahf
push
in
push
pusha
pop
shrb
hlt
sub
mov
xor
push
mov
xor
add
mov
or
jno
sub
cltd
push
and
push
pop
mov
mov
add
sbb
add
aam
es
lock
xchg
xchg
ficompl
leave
jne
push
add
loope
add
sbb
bound
pushf
mov
rcrb
jne
imul
push
call
adc
or
movsb
lock
imul
add
insl
inc
ret
rorb
rolb
pcmpgtd
xor
sbb
mov
call
push
push
or
jb
push
les
pop
add
js
mov
imul
dec
shrb
xchg
xchg
inc
mov
adc
add
pop
lea
mov
aas
aam
call
dec
cmp
cmp
pusha
and
nop
cmpsb
int3
pop
xchg
cmp
inc
fdivs
jae
enter
add
sahf
mov
scas
pusha
pop
in
or
jle
cmpsl
les
inc
adc
clc
jbe
out
jmp
jnp
mov
mov
lock
pop
mov
insb
xchg
push
mov
insb
sarl
sbb
sbb
pop
inc
ljmp
inc
mov
pop
dec
js
cmp
clc
and
mov
ret
andb
adcl
hlt
and
dec
pop
push
jo
les
push
inc
int3
imul
and
push
shl
xlat
fsubrs
cmp
and
shlb
leave
dec
cmp
push
cmp
xchg
jmp
inc
xlat
pop
add
sub
mov
inc
adc
push
lea
and
sub
mov
xor
mov
or
push
clc
adc
addb
jle
ljmp
nop
lret
push
xchg
mov
out
out
mov
cmc
fadd
lret
outsl
outsb
stc
dec
call
imul
mov
jno
sbb
mov
pop
sub
stos
rol
stos
in
test
les
pop
imull
fsubs
pop
sbb
call
xor
mov
stos
pop
andl
dec
push
or
sub
scas
cmp
push
mov
add
cwtl
add
jge
add
or
cli
fwait
xor
incb
jnp
es
pop
inc
ja
mov
arpl
lcall
popf
mov
popa
or
std
xor
inc
jb
adc
xor
jbe
loopne
lret
pusha
scas
or
loope
cwtl
pop
sbb
cltd
dec
mov
mov
xor
sahf
push
inc
shlb
outsl
sarb
lock
sub
mov
dec
sti
cltd
nop
in
add
pop
cmp
inc
stc
cmp
pop
sbb
das
mov
xor
or
inc
cmc
adc
mov
lods
js
add
cld
and
xchg
jmp
adc
insl
frstor
iret
in
fdivrs
dec
ja
rolb
orl
shlb
lock
push
jnp
adc
add
testb
nop
push
mov
out
add
fstps
add
insb
dec
pop
adc
mov
loopne
call
inc
adc
aad
add
mov
mov
enter
or
daa
in
cs
mov
test
into
pop
idivb
mov
add
xor
fadd
aad
xchg
or
dec
cmpb
roll
mov
jmp
lret
sub
sbb
inc
in
faddl
cmc
pop
mov
lcall
push
cwtl
jo
sbb
mov
mov
or
es
in
lods
rcr
hlt
cmp
mov
adcl
mov
add
and
out
add
push
mov
subb
inc
mov
or
add
dec
add
test
mov
add
aaa
int3
lahf
cltd
add
cwtl
pop
lock
shll
pop
dec
negl
rolb
adc
cmp
or
call
inc
xor
call
repz
les
rorb
and
inc
je
push
out
add
xchg
add
into
repnz
sub
pop
imul
mov
shl
adc
cmp
cmpsb
aam
push
inc
dec
mov
add
add
sub
mov
xor
mov
jb
test
mov
cltd
add
aas
loop
xchg
mov
add
adc
jmp
fs
in
dec
inc
pop
inc
cmp
repz
pop
mov
fisttpll
imul
loop
loopne
sbb
dec
jno
lods
int
mov
lock
mov
repnz
or
jl
add
test
rcrb
sub
fildl
pop
in
clc
inc
or
andb
jb
addb
sub
andb
add
push
dec
jne
sarb
add
adc
bnd
js
jle
and
mov
test
lahf
scas
push
mov
cs
or
call
inc
jp
add
outsb
stos
dec
nop
and
mov
mov
ss
test
fwait
stos
and
pushf
in
pusha
dec
aad
push
leave
mov
jmp
in
mov
leave
jb
mov
push
and
mov
test
adc
movsb
movsb
adc
int3
mov
add
adc
ret
add
mov
xchg
pusha
adc
sbb
daa
rorl
add
xchg
add
scas
test
lret
cwtl
enter
jo
mov
push
xchg
jmp
sti
cs
and
inc
mov
inc
leave
and
cmp
leave
hlt
cmc
mov
sti
mov
ds
outsb
iret
daa
push
hlt
add
pop
inc
jg
and
sbb
sahf
mov
shll
lar
mov
push
ror
jns
sbb
cmp
sysenter
add
dec
sub
push
aam
pop
into
push
inc
mov
adc
arpl
and
loope
inc
stos
jl
sub
jg
xchg
sub
jo
add
icebp
cld
xor
sarl
inc
adc
enter
shll
pop
add
lods
mov
dec
xchg
ds
push
mov
push
xchg
loope
and
stc
pusha
xchg
cltd
sub
push
pop
push
stos
xchg
xchg
push
rclb
test
and
add
pop
or
add
inc
inc
push
test
jmp
and
add
sarl
add
add
jbe
pop
inc
cli
cmp
push
pop
pushf
in
dec
adc
popa
xor
sbb
mov
adc
scas
add
push
aad
add
adc
add
lea
pusha
lret
and
mov
pop
inc
mov
lods
clc
mov
jp
mov
ficomps
pusha
jge
or
and
add
rcll
xchg
cmp
and
add
jno
pop
push
or
add
xor
pusha
xchg
add
and
rclb
xchg
mov
nop
mov
divl
lock
add
mov
pop
mov
insl
pop
mov
inc
jno
push
pop
imul
pop
rcrb
push
jne
add
cli
inc
mov
loopne
pop
int3
je
pop
sbb
mov
outsb
mov
es
cmp
pop
daa
push
insb
in
xor
adc
rcll
imul
ja
and
outsl
stc
jo
daa
nop
lock
or
stc
loope
rorb
push
bound
and
jecxz
jle
add
jbe
cmp
popa
push
pop
inc
xchg
rcrl
insb
test
inc
in
inc
fisubrl
nop
dec
dec
sbb
mov
test
push
or
xchg
adc
jle
test
add
cld
test
aam
push
inc
cmc
adc
mov
adc
pop
sbb
sub
mov
imul
xor
aaa
mov
setae
imul
inc
xor
gs
jle
test
cmpsl
push
mov
lds
mov
outsl
ret
jle
cli
mov
and
loope
addr16
dec
gs
les
or
pop
xchg
adc
mov
repnz
xor
and
nop
insb
inc
ja
pusha
scas
cmp
repz
or
popf
fstl
cltd
test
sbb
add
dec
mov
into
fs
cmpsl
bound
push
enter
icebp
and
lods
inc
jmp
push
push
add
arpl
inc
jge
push
lcall
add
lahf
std
add
xchg
out
jb
aaa
inc
call
and
adc
sbb
xor
pop
int3
mov
mov
sub
mov
in
mov
outsb
add
mov
and
xchg
pushf
inc
loope
fwait
call
int3
enter
scas
add
lds
incl
cmpb
mov
add
mov
data16
rolb
int3
ret
adc
jno
sub
add
aas
sub
out
mov
adc
sbb
add
mov
icebp
in
mov
or
mov
fldl
or
lret
inc
and
scas
adc
movsb
repnz
bnd
jne
sbb
outsb
push
ret
pop
push
inc
push
mov
jp
fsubl
add
pop
mov
add
jns
sbb
test
and
inc
cmp
sub
and
inc
mov
ja
das
pop
sar
jl
mov
mov
jo
xor
outsb
mov
mov
sbb
add
popl
insb
std
add
xchg
movsl
mov
xor
andl
add
dec
add
mov
jb
add
add
mov
add
pop
dec
mov
andb
int3
add
sbb
sub
jno
call
lods
int3
pop
add
or
orl
add
lcall
mov
xchg
addl
sub
add
xor
aas
xor
xchg
mov
sbb
add
pusha
lret
jmp
lret
mov
leave
cs
lcall
dec
rcrb
imull
std
ss
adcb
xchg
jno
sbb
jnp
add
add
imul
mov
and
rcll
repz
or
or
test
fs
push
add
mov
and
add
add
insl
das
or
add
les
test
add
cld
mov
sbb
shlb
pop
inc
pop
and
fisttpl
pop
push
repz
mov
test
imul
add
cmp
mov
rcrl
and
popa
jmp
or
cmpsl
add
sti
inc
mov
stos
in
lret
and
andb
pop
jb
mov
adcb
pop
int
sbb
add
sub
sub
addb
stos
dec
sbb
or
and
in
loopne
mov
or
and
sbb
mov
enter
out
adc
sbb
inc
mov
and
and
dec
addb
iret
add
ret
fisubs
add
sub
mov
cli
out
bound
cmp
pop
add
test
aad
add
fs
pop
lahf
es
add
jns
xchg
or
mov
mov
stos
aas
add
dec
cwtl
mov
jb
add
out
iret
pop
ficoml
xchg
clc
les
sub
sbb
rclb
mov
inc
pop
mov
inc
mov
enter
popf
add
mov
dec
outsb
add
pop
fisttpl
bound
push
data16
mov
fwait
sub
rcrl
loopne
inc
add
sbb
push
or
clc
xor
pusha
fidivs
push
pop
add
ds
aad
jnp
cmpsl
add
add
and
inc
and
stc
jle
add
cld
fisubl
outsl
xchg
add
loopne
add
mov
test
outsb
iret
pop
stos
sti
movsb
fidivl
or
jge
sub
aas
out
xor
or
popf
sbb
add
cmc
jno
xor
fldt
add
xchg
xlat
pop
rclb
call
cmpsb
fstpt
xchg
jns
pop
or
mov
push
xor
pop
xchg
ja
sbb
xchg
add
cmp
add
add
xchg
add
fnsave
push
int
loope
pop
add
out
pusha
negl
push
insb
ljmp
bnd
lods
add
repz
pop
movsl
push
inc
pop
fld
pop
out
push
add
das
fs
add
mov
push
inc
nop
out
and
push
lret
mov
addr16
rclb
and
xchg
enter
mov
add
sub
inc
dec
push
addl
sub
loopne
sbb
mov
xchg
push
dec
push
rorb
lods
dec
xchg
add
iret
and
xchg
dec
push
or
push
and
add
cmp
inc
enter
ljmp
hlt
rcr
jg
mov
or
cmc
xor
add
adc
add
ret
pop
xchg
add
fnstsw
add
mov
mov
inc
push
leave
pop
mov
pop
push
mov
push
or
cli
xor
sbb
loopne
add
jmp
pop
stos
ljmp
adc
add
int3
repz
inc
fldcw
sub
in
jns
add
frstor
push
push
fistps
ret
add
stos
cs
cmp
jle
inc
xchg
mov
cmp
add
iret
mov
icebp
jne
xor
lea
xor
stos
cmp
add
and
lock
add
push
out
push
inc
mov
stos
mov
push
popl
mov
and
add
mov
inc
clc
xchg
fsts
pop
mov
add
cmpsl
cmp
sahf
inc
les
out
or
cmp
test
lahf
cltd
mul
mov
push
push
rcrl
mov
mov
dec
divb
or
jecxz
pusha
les
xor
jnp
push
sub
and
enter
sbb
dec
push
or
incl
jl
add
test
xchg
cld
mov
adc
rol
push
in
push
add
mov
sub
or
sub
add
pop
pop
roll
inc
xor
lock
xchg
shlb
lret
push
mov
inc
or
mov
ds
in
mov
adc
test
stos
scas
rcrl
stc
pop
add
in
aam
add
clc
cmp
fdivrl
int3
ret
push
add
iret
mov
or
fcomps
xorb
cmp
push
test
in
add
xor
clc
mov
mov
sbb
negl
jae
cmp
mov
and
sub
or
push
add
cld
push
inc
adc
sub
push
cmpsl
fdivs
daa
lahf
mov
pop
adcl
arpl
add
shl
mov
dec
add
push
mov
testb
jg
or
and
cltd
mov
iret
sahf
out
add
repz
outsl
fimull
icebp
movlps
dec
dec
test
sub
push
out
add
mov
loopne
xchg
cmp
loopne
outsl
jns
add
sub
jmp
add
mov
jns
pop
sbb
jp
push
mov
pop
stos
lret
lds
pop
add
outsb
les
cmp
in
addr16
call
adc
add
sarb
sub
nop
xchg
andb
cli
pop
xchg
sbb
inc
mov
cmpsb
lret
ficoms
jnp
xchg
add
jmp
xlat
mov
and
cmp
inc
push
pushf
adc
pop
je
dec
gs
jne
add
in
rcll
inc
js
fisubs
sbb
sub
scas
jo
cli
add
jno
imul
add
dec
xchg
mov
and
fiaddl
and
rclb
mov
sub
mov
stc
xor
dec
mulb
jl
sub
jns
popf
xor
loopne
dec
lods
flds
je
loop
ret
enter
inc
test
loopne
fidivrl
push
dec
inc
mov
mov
jnp
sbb
add
cmpsl
stos
xor
insl
lock
jno
xlat
dec
mov
xor
cmp
sbb
jae
push
sub
lahf
out
orb
add
or
jnp
or
jmp
xchg
stos
dec
lcall
mov
push
mov
scas
out
mov
xchg
lahf
jmp
and
xchg
add
loope
out
outsl
int3
movsl
orb
mov
scas
jl
cmp
jb
pop
sub
rcrl
mov
sub
or
outsb
in
in
movsb
adc
lods
or
out
sbbl
inc
mov
xchg
add
pop
iret
daa
inc
add
ret
add
outsb
sti
stc
es
insl
hlt
adc
lods
div
add
fcmovne
add
mov
pop
mov
mov
add
aam
sbb
cmp
int3
movl
or
mov
mov
and
scas
cmc
inc
dec
testb
inc
push
xorb
rcrl
mov
sbb
js
fcmovb
aam
push
int3
mov
add
adc
adc
mov
xchg
mov
sbb
out
add
xchg
rcrl
testl
and
adc
fs
aam
aaa
and
es
cmpb
addl
fiadds
stos
and
in
add
lods
lret
pop
jbe
add
pop
or
cli
pop
test
cmp
icebp
scas
pop
ret
push
fstpt
nop
rolb
xor
fs
dec
push
clc
cmp
xchg
shl
enter
in
imul
sti
or
movsb
pusha
dec
mov
xor
nop
outsl
dec
and
add
insb
xchg
ja
dec
xchg
pop
jle
inc
xor
push
gs
icebp
inc
add
sahf
jne
xchg
in
add
or
or
pop
xlat
push
adc
jb
inc
push
xor
and
cmp
shlb
fsubs
mov
out
sub
xchg
repnz
test
xor
pusha
sbb
jno
faddl
inc
mov
lock
add
adc
add
jmp
lahf
add
scas
adc
lret
add
add
pop
add
negl
pusha
lods
pop
and
push
xor
jmp
mov
cmp
sub
xchg
pop
sbb
mov
cs
xchg
push
outsl
insb
mov
not
inc
clc
xor
or
fsubrs
fnstsw
shlb
mov
sti
js
shrl
loope
les
out
sub
cmovle
lret
xor
dec
fwait
pushf
aas
add
fcoms
fnstenv
dec
jnp
out
dec
xchg
adc
sub
pusha
xchg
jg
fstps
jl
add
lea
push
loopne
xlat
jecxz
xchg
dec
inc
out
stos
fildl
out
inc
je
add
dec
rcll
daa
mov
dec
add
sbb
inc
dec
stos
add
mov
subl
dec
adc
flds
or
adc
ljmp
leave
in
mov
pmuludq
cli
repnz
dec
adcw
es
xchg
pushf
add
xchg
mov
sbb
je
subb
rcrb
add
into
dec
insb
or
fistps
mov
xlat
roll
mov
dec
rolb
sti
mov
and
sbb
add
int
lahf
inc
nop
aas
pop
add
fsubrl
pop
push
xchg
dec
add
movsb
add
iret
cmp
add
jmp
add
outsl
xchg
add
andl
mov
loop
mov
pop
mov
cmp
imul
in
cmp
add
frstor
add
popf
aaa
pop
addr16
out
jmp
sbb
nop
imul
sarb
loopne
lock
add
in
clc
or
or
in
xchg
cmpsb
adc
sahf
add
xlat
jnp
pop
out
adc
mov
xchg
add
ficompl
add
sub
or
push
repz
xchg
pop
cwtl
sar
pusha
jbe
mov
data16
add
or
xchg
ficompl
cmp
xchg
and
ljmp
cs
ret
push
imul
add
push
add
push
jp
add
mov
add
out
push
mov
add
jmp
mov
insl
add
mov
and
add
fcomip
lcall
inc
incl
scas
pop
bound
add
inc
inc
movsl
pop
add
test
movb
popa
sbb
mov
add
cmc
mulps
cld
inc
aaa
dec
inc
add
imul
jno
pop
iret
add
fdivs
add
aaa
test
mov
loopne
into
pop
ljmp
jnp
add
mov
lock
sub
nop
js
sahf
add
cltd
push
fcmovu
icebp
pop
add
xor
cmpsl
sti
push
shlb
add
adc
dec
add
xchg
or
xchg
mov
roll
pop
shl
xor
sub
sbb
push
scas
or
add
dec
pop
add
insl
mov
mov
jecxz
ljmp
inc
mov
jg
fcomi
call
pop
adc
add
xor
addr16
and
stos
add
pop
mov
filds
sub
in
add
sti
adc
jbe
scas
ja
adc
adc
jae
icebp
sbb
xor
xchg
fadds
sub
aad
shlb
or
lret
test
in
add
push
push
sub
ds
fwait
xor
or
out
imul
mov
insb
and
mov
cmp
xchg
in
dec
add
or
or
cmp
add
out
pusha
cltd
mov
dec
cwtl
jge
inc
add
ss
rclb
testb
clc
imul
push
addb
inc
dec
fcomps
idivl
sub
js
popf
addb
or
movsb
cmpsb
inc
sbb
iret
cmc
xchg
je
popf
adc
add
in
mov
jo
lahf
rcr
shlb
pop
push
adc
jmp
add
test
mov
pop
addr16
or
cmp
pop
repnz
mov
xchg
jo
in
add
cmp
jmp
xchg
jb
adc
mov
mov
push
mov
xor
rcrb
cmp
aam
lret
add
in
pushf
lds
arpl
add
jecxz
nop
mov
pop
cmp
add
aad
cmovge
add
imulb
iret
in
or
lods
xchg
or
popa
dec
add
test
adc
vmwrite
sbb
aas
jne
pop
mov
addb
inc
shll
stos
sbb
add
nop
movsl
mov
arpl
add
cwtl
icebp
fimuls
and
xlat
mov
imul
outsb
xor
fs
or
push
xchg
test
out
xchg
adcl
push
clc
in
add
mov
add
push
jecxz
xor
outsb
sar
in
sbb
lock
fcoml
lret
mov
add
in
inc
pop
fnstenv
inc
lret
or
adc
js
adc
add
sub
or
lret
lcall
out
shll
xor
aad
jl
xchg
insl
icebp
aas
inc
bound
mov
popa
mov
jecxz
adc
sbb
aad
push
push
andl
jecxz
mov
fsubl
popf
mov
out
das
in
lock
sbb
mov
fstpl
test
pop
add
mov
pop
ret
fmull
push
shrl
add
xor
mov
inc
rcrb
and
push
push
jp
or
dec
test
stos
dec
shrb
mov
iret
pusha
add
inc
sbb
adc
push
ror
cltd
pusha
js
bound
shrb
scas
outsb
mov
pushf
cs
sbb
dec
dec
lcall
stos
mov
xchg
or
xchg
lea
add
fbld
cmp
sbb
fildl
jmp
in
cmp
mov
das
js
in
dec
arpl
pop
sub
cwtl
les
or
xchg
das
add
push
in
jmp
inc
orl
xchg
dec
sarl
cmp
out
fwait
ja
add
das
sub
pop
dec
cli
jne
xor
jae
call
mov
enter
pop
sbb
das
shlb
mov
cwtl
sub
lea
dec
ja
les
stc
mov
lods
jo
add
or
fiaddl
add
scas
rolb
xor
loop
fiaddl
mov
ret
mov
dec
das
xchg
sub
std
jns
dec
and
dec
arpl
pop
push
in
popf
mov
sub
hlt
mulb
add
push
imull
add
rcl
cli
or
imul
xor
xchg
mov
test
add
les
add
jge
xchg
adc
or
es
icebp
ret
push
cmp
insb
or
mov
nop
mov
cmp
fisubs
mov
popf
flds
xor
push
ja
and
ds
fidivs
je
add
stos
sbb
aaa
rorb
orl
nop
inc
fldl
cmp
inc
dec
add
leave
in
and
ss
aas
adc
sbbl
add
inc
and
inc
jne
aad
aas
add
inc
pop
arpl
pop
cmp
movsb
jge
mov
gs
sbb
and
inc
push
pop
inc
inc
add
pushf
pop
xchg
mulps
and
add
push
enter
popl
loop
shrb
add
je
mov
leave
orb
xor
jnp
pop
andb
daa
sbb
aas
jg
adc
push
add
fwait
test
xchg
xchg
mov
cmc
in
and
cmpb
add
and
int3
pop
mov
add
or
jae
fadds
and
xchg
cltd
cmp
pop
jg
or
mov
mov
outsl
sbbb
nop
call
push
pop
add
sub
mov
add
adc
jo
add
adc
sub
pusha
or
add
adc
cmpsb
jnp
xchg
pop
sbb
lods
adc
call
mov
xchg
cs
xorl
pop
mov
or
inc
push
and
mov
jne
popf
nop
xor
lahf
movsb
pop
inc
pop
pop
frstor
and
add
ret
add
xchg
cmpsb
cli
cld
cltd
adc
pusha
push
in
sbb
add
movl
into
inc
jle
sbb
cli
outsb
xchg
xor
sahf
cvtpi2ps
in
sti
test
push
flds
bswap
cmp
add
aam
xor
mov
mov
push
mulb
mov
fstpt
lret
adc
sbb
cmp
pop
push
and
orb
jl
lock
push
rol
add
in
push
lahf
and
add
xchg
aam
rcll
dec
inc
push
rclb
adc
jns
add
jbe
pop
xchg
push
mov
ficomps
dec
adc
test
xor
cs
add
mov
lock
mov
into
movsl
adc
add
es
sahf
cmp
and
cmp
xor
fsubrs
push
cwtl
ljmp
sarb
push
jb
add
or
mov
inc
adc
sbb
loopne
adc
not
fstpt
movsb
jne
add
loope
fisubrl
push
leave
push
jo
cmp
mov
int
loopne
aas
and
xor
clc
pushf
repz
add
cli
push
in
jo
push
add
mov
add
inc
sub
in
mov
push
mov
pusha
push
push
pop
out
cs
push
adc
in
jne
call
or
repnz
pop
mov
les
and
xchg
js
sub
call
add
jnp
shlb
lods
nop
pusha
add
scas
mov
mov
stc
add
sub
adc
jp
daa
jne
pusha
lea
nop
cld
pusha
stos
aas
add
adc
dec
test
add
jae
out
xchg
rcrb
add
add
adc
mov
push
add
lret
ret
inc
push
mov
add
cltd
dec
cmp
or
dec
lahf
fmull
add
ret
leave
loopne
xlat
xor
mov
shll
mov
add
sub
loopne
adc
movsl
adc
add
out
or
and
push
nop
and
cmp
pop
cmp
add
mov
call
out
cli
pusha
xor
or
leave
out
sti
jb
dec
pop
adc
shl
test
aam
dec
nop
fsubrl
mov
jp
mov
cmp
test
pop
movsb
sti
fstl
test
add
shrb
mov
add
mov
jnp
stos
imul
ljmp
push
xchg
into
and
cld
sub
scas
addb
insb
clc
jge
xchg
add
ret
mov
cwtl
scas
andl
in
std
pop
out
adc
or
inc
or
mov
xor
ss
stc
push
sbb
sub
dec
xor
pop
loopne
das
test
mov
inc
push
mov
add
jnp
sbb
pop
jne
dec
cmp
and
mov
sti
stc
xchg
inc
jl
es
mov
sub
shll
xchg
je
scas
add
fisubs
pop
jg
ljmp
push
mov
out
sbb
cmp
cmp
loopne
nop
arpl
fldl
neg
loopne
rcll
hlt
mov
cmp
xor
add
add
cli
mov
sbbb
in
and
jl
fstpl
cmpl
cmp
popa
pop
pusha
andb
sbb
dec
dec
adc
lgs
mov
sahf
insl
addr16
cltd
dec
adc
inc
arpl
sub
xchg
mov
add
loopne
shll
aas
lock
add
dec
je
fwait
in
aad
mov
mov
xchg
add
jae
xlat
inc
int
sbb
aad
shrb
dec
cmp
hlt
aas
testb
pop
fistl
mov
push
js
add
into
mov
insb
fnstcw
aaa
sbb
movl
lock
xor
push
addr16
fists
mov
icebp
fcoms
sub
mov
add
cmp
jnp
lock
cmc
ror
adc
add
aad
rcl
inc
stos
add
push
shrb
in
icebp
xchg
pusha
mov
xlat
xchg
sub
and
sahf
dec
cmp
xor
filds
mov
shrl
sbb
popf
fs
sbb
add
lret
fsub
mov
push
jne
dec
or
pop
icebp
add
jno
inc
push
mov
ds
cmpsb
mov
mov
push
mov
cltd
addr16
add
mov
fucom
es
lret
add
pop
mov
xchg
fidivrl
cltd
add
lret
inc
inc
push
sub
mov
add
insb
lock
divb
add
add
dec
sub
mov
call
jbe
dec
aaa
adc
push
sbb
xchg
mov
add
pop
cmpsl
mov
aaa
add
mov
stos
cmp
cmp
or
or
or
xlat
incl
add
push
fdivr
add
push
mov
orb
hlt
xor
sbb
lahf
into
xchg
add
lock
sbb
xor
sub
test
mov
adc
hlt
xor
repnz
rclb
add
aam
les
int
dec
in
jp
cmp
subl
mov
sbb
push
pop
add
je
sub
or
add
cltd
in
roll
adc
cli
add
loop
pop
add
add
outsb
add
inc
dec
mov
add
bound
in
arpl
dec
call
xchg
and
cmp
subb
in
or
jo
xor
movb
pop
imul
sbb
mov
subb
cmp
dec
and
sbbb
add
cmpsl
mov
lds
or
loopne
mov
add
mov
outsl
add
push
mov
cmp
mov
and
rorb
and
pop
daa
mov
aad
add
cmp
and
mov
sub
sbb
add
jo
add
shr
cmp
outsl
popa
and
push
mov
addb
fnstcw
mov
mov
sbb
xchg
jns
ret
add
movb
add
popa
test
sbb
mov
idiv
xor
out
cmc
xlat
sar
pop
add
outsb
jns
sti
xchg
aaa
mov
idivb
add
sub
sbb
push
jmp
inc
mov
ljmp
and
add
nop
xor
hlt
in
dec
pushf
btc
addr16
repz
add
add
rorb
push
or
es
inc
and
pusha
mov
sbb
pop
lret
xchg
add
fidivrs
cmovnp
push
stos
stc
push
push
insb
add
push
jo
add
fcmovu
sahf
jae
cmc
add
push
and
pusha
mov
push
jne
xchg
fsts
push
jbe
fiadds
pop
loop
ja
xor
add
test
push
ret
add
jge
shl
push
push
leave
cmp
adc
or
loope
and
ljmp
out
enter
xchg
outsl
lret
cmp
adc
inc
sti
les
mov
lcall
addb
shl
sub
cs
sbb
cmp
jns
inc
movsb
push
or
aad
add
sbb
mov
pusha
in
add
in
push
add
add
setb
arpl
dec
add
out
add
mov
int3
cld
xor
and
sbb
loop
adc
sub
jmp
repnz
rcrl
and
cmp
or
ja
sub
imul
nop
flds
in
mov
xor
test
add
push
repnz
sbb
cmp
xor
cmp
mov
pop
pop
cltd
and
and
testb
push
data16
jp
mov
add
add
cmp
arpl
repnz
jbe
aas
and
add
inc
xor
add
mov
xor
pop
daa
add
jecxz
cltd
add
sbb
add
out
pop
lret
cmpsl
add
or
jmp
repz
lds
inc
mov
push
addb
stos
push
sbb
cmp
push
scas
out
inc
pop
cli
popa
orl
xchg
sbb
add
sub
popf
mov
adc
lock
jecxz
in
fistpl
ljmp
adc
dec
xchg
repz
shl
outsl
ret
fs
int3
pavgw
lahf
or
add
stc
jb
sysexit
scas
and
or
stos
data16
push
stos
dec
add
add
nop
aaa
mov
cli
add
add
mov
mov
mov
addr16
add
paddw
iret
push
clc
or
packsswb
xor
out
pop
into
jecxz
push
pop
ljmp
add
adc
f2xm1
mov
pop
cmp
xor
add
mov
add
std
sub
push
cmpsl
pop
push
jnp
adc
lds
jp
arpl
cwtl
inc
lock
pop
cwtl
out
mov
insl
add
stc
rorb
pop
mov
cmpsl
mov
fsts
fsubl
mov
sbb
cmpsl
pop
dec
jne
in
arpl
sub
dec
and
sub
pushf
xchg
cmp
mov
xor
xchg
sti
and
mov
shrl
imul
xchg
aas
adc
pop
and
icebp
xchg
cmp
sub
int3
jbe
nop
mov
pop
adc
pushf
pop
jb
add
out
ret
in
jnp
add
out
add
sub
lahf
pop
fwait
and
pop
aas
xchg
in
sbb
mov
pop
out
mov
jmp
xchg
and
aas
xor
es
pusha
rorl
outsl
add
mov
or
cmp
out
jo
adc
push
dec
cmp
std
add
mov
cmpsb
lods
add
adc
iret
pop
push
mov
push
or
jns
mov
pop
push
andl
add
out
lahf
repz
lds
int
adc
push
sbb
pop
call
addps
jmp
add
mov
push
add
inc
rcll
out
aad
mov
xor
jae
cmpsb
jl
xor
dec
outsb
push
in
aas
rcr
fcoml
push
add
add
xor
xchg
or
cmp
aam
push
sbb
push
mov
imul
pop
sbb
push
xor
inc
push
iret
jl
push
push
inc
insb
and
ret
mov
mov
mov
cli
ds
mov
add
jno
jge
push
jo
sub
lock
adc
sarl
lret
jl
lock
add
lcall
push
add
pushf
mov
repnz
mov
flds
sub
pop
sub
test
sbb
xlat
sub
aam
imull
jo
inc
cmp
xorb
jns
add
in
lods
mov
add
repz
pop
enter
sbb
or
jg
je
orb
xor
mov
add
sbb
daa
inc
lcall
aaa
sbb
cmp
mov
repnz
push
cli
cltd
sbb
mov
mov
aad
xchg
inc
jle
adc
push
mov
lret
xchg
jo
mov
enter
xlat
push
or
or
cmpl
xchg
cwtl
add
fwait
xchg
es
or
leave
popa
and
call
loope
sahf
push
inc
sbb
movhps
mov
adc
mov
and
adc
mov
jmp
xchg
mov
add
ficoml
push
and
add
mov
addl
push
inc
outsb
test
add
mov
cltd
dec
mov
addr16
add
cmp
mov
fadds
rcrl
push
fcomip
faddl
lea
cld
test
push
imul
mov
mov
xchg
push
ret
jns
or
mov
jae
dec
add
insl
mov
cmp
mulb
adc
ljmp
mov
inc
mov
sbb
xchg
push
sbb
jl
lods
scas
add
stos
enter
add
lcallw
pusha
stos
fs
push
imul
jns
and
jae
and
add
inc
push
stos
sub
pop
adcl
fnstcw
sub
inc
fs
std
push
or
mov
js
insb
cwtl
add
xchg
sub
pavgb
add
sub
enter
cli
add
je
pushf
outsl
scas
mov
cmp
fs
pop
jge
pop
clc
jne
inc
int
pop
dec
xchg
push
add
hlt
jnp
out
push
push
adc
sarb
mov
sbb
jbe
inc
movsl
xor
mov
aad
adc
mov
rolb
aam
out
sbb
fdivrl
jmp
or
sub
test
je
pushf
cld
mov
dec
aam
add
loop
mov
sub
mov
insl
ja
inc
or
cwtl
loopne
add
jnp
shlb
sub
mov
cs
in
add
imul
call
je
mov
xchg
push
nop
roll
fnstenv
sarb
lods
add
out
mov
orl
cld
and
add
insl
push
or
icebp
xchg
xchg
mov
pmaddwd
xchg
add
rcr
lock
arpl
fcmovnb
scas
inc
adc
nop
adc
or
push
xchg
add
fcmovnb
mov
in
push
add
mov
test
pop
or
jae
add
neg
imul
add
dec
add
or
sub
dec
inc
or
test
hlt
adc
js
add
jle
ljmp
jge
js
add
fucom
mov
gs
inc
sbb
incb
pop
push
fstpt
push
pusha
mov
jbe
pop
inc
add
mov
adc
test
adc
stos
mov
ror
adc
or
cmpsl
test
xorb
mov
insb
sahf
jb
add
jns
or
push
and
shll
push
add
addb
inc
shrb
xor
rorb
or
in
loope
or
insl
out
pop
dec
jbe
sbb
dec
mov
imul
in
test
shlb
push
testb
jg
pop
test
clc
outsb
inc
lods
mov
adc
addr16
add
movsb
hlt
and
add
push
test
test
cmp
in
nop
sbb
cli
xchg
pop
repz
fildl
pop
and
add
jmp
xor
dec
ret
cld
add
jmp
xchg
jns
pop
mov
xchg
and
push
stos
test
add
push
jbe
in
mov
insb
cmp
subl
jmp
push
mov
aad
cwtl
mov
dec
loopne
pop
dec
cld
add
arpl
adc
mov
movsl
jne
insb
jb
nop
clc
sbb
mov
int3
or
and
popf
loopne
jmp
sub
add
pop
jecxz
je
add
fidivrl
push
xadd
or
lret
addb
stos
add
jno
jne
mov
nop
mov
loopne
cld
lods
pop
stos
rcl
pop
xchg
jge
mov
mov
mov
test
lea
mov
pop
sub
pop
dec
mov
mov
xchg
push
add
out
xchg
mov
setle
dec
mov
push
push
add
push
inc
jle
rclb
mov
or
fsubs
add
out
stos
adc
dec
mov
jge
shll
push
in
pushf
setge
sub
xchg
mov
add
push
xchg
add
test
jne
pop
push
icebp
repz
jg
xchg
jge
mov
or
mov
xchg
jne
pop
lea
pop
xchg
push
jnp
mov
or
mov
pop
ljmp
mov
xchg
aam
addb
push
je
jns
sbb
gs
pusha
pop
xchg
cmp
add
popf
pop
ret
sub
rcr
or
cmp
and
cs
jbe
mov
add
mov
and
mov
and
pop
sbb
mov
add
jo
xchg
loopne
adc
addb
cmp
cmp
aaa
add
test
mov
outsb
repnz
jo
leave
test
xchg
push
sarb
in
arpl
popa
inc
push
mov
call
or
inc
enter
and
sub
lret
sbbb
xor
xor
push
je
cmp
test
gs
add
mov
imul
clc
arpl
les
add
add
hlt
lock
lret
xor
jecxz
mov
jo
jle
xchg
push
js
jecxz
movsl
clc
xchg
push
orl
adc
xchg
filds
fldenv
or
add
pop
cs
bound
sbbl
jge
mov
and
add
add
jns
mov
popa
int3
mov
jb
add
cld
pop
dec
xor
xor
or
jge
xchg
sub
test
lds
and
lret
leave
push
movsb
xor
rcrl
adc
sbb
mov
sti
and
mov
loopne
mov
bound
and
fildl
jg
mov
daa
jne
addr16
adc
fistps
cmovl
sub
cs
sbb
cwtl
add
mov
je
scas
pop
xor
jmp
icebp
sub
lods
out
movb
mov
xchg
xchg
sarb
loopne
mov
mov
setbe
mov
push
dec
cwtl
hlt
call
push
mov
gs
shlb
sub
and
or
sbb
scas
andps
cltd
iret
adc
cmp
test
insl
pop
test
std
dec
jp
pop
xchg
imul
jae
xchg
jo
add
sub
sbb
addb
mov
pusha
pop
in
nop
sub
jbe
fcomps
sub
les
mov
pushf
sbb
sub
dec
les
ss
cwtl
sbb
pop
in
out
or
shll
sub
pop
test
jmp
ja
add
jb
rolb
roll
fwait
xor
mov
mov
pop
scas
or
mov
shlb
sbb
push
repnz
mov
add
sbb
cmp
pop
rcrb
fnstenv
arpl
inc
ret
push
lods
mov
mov
pop
lods
fwait
ja
cs
inc
jg
and
lds
jbe
push
add
out
inc
repnz
cmp
mov
in
mov
adcl
mov
xor
dec
jbe
mov
adc
or
mov
add
js
cmp
or
sti
sub
push
sub
inc
or
add
pop
jno
jo
add
mov
rolb
scas
fnstcw
ljmp
mov
pusha
push
sub
dec
inc
fdivs
dec
or
sbb
push
or
push
sarb
or
scas
xorb
loopne
mov
adc
cmp
subb
enter
mov
mov
push
xor
xchg
add
daa
sbb
mov
dec
in
and
cltd
dec
push
add
clc
jae
mov
adc
clc
mov
out
add
xchg
sbb
add
lcall
call
icebp
mov
loopne
add
dec
and
xchg
fwait
sub
mov
jo
mov
sbb
movsl
cs
and
pop
aas
mov
mov
mov
mov
lods
xchg
pushf
or
sub
je
mov
jecxz
sbb
cltd
or
mov
insl
cmp
mov
in
xchg
nop
and
test
lret
and
mov
push
push
add
mov
pop
ds
add
dec
inc
mov
popf
add
jnp
push
arpl
cltd
or
scas
pop
enter
push
sub
nopw
or
scas
cltd
sub
mov
les
jg
xchg
and
jns
jo
xchg
shr
out
push
mov
adc
pusha
xchg
loopne
xchg
xor
fcoml
pushf
add
insl
lock
int3
pop
pop
dec
adc
pop
or
insb
dec
mov
inc
and
adc
xchg
cs
mov
test
insb
out
jns
or
andb
repz
test
rcrb
pop
jge
pushf
jae
dec
gs
xchg
je
add
xchg
inc
pop
cmp
mov
pop
je
and
adc
inc
and
xchg
in
push
int
sbb
push
jne
mov
cmp
inc
push
arpl
mov
pop
pushf
nop
pop
mov
cld
nop
inc
jns
or
lahf
stos
loope
lods
sbb
outsl
js
mov
mov
loop
lods
inc
push
push
or
push
or
hlt
jns
sbb
mov
dec
add
push
and
lock
lock
aam
and
inc
dec
in
and
es
pop
inc
mov
das
loopne
test
insb
jle
rclb
inc
xchg
adc
inc
cltd
loopne
imul
add
xchg
js
mov
mov
sbb
sub
cmpsb
mov
add
adc
fs
aaa
inc
xlat
jnp
pop
push
adc
cmp
xchg
loopne
mov
lcall
xor
orb
add
jb
add
loop
sub
xchg
jnp
pop
sub
push
inc
lods
jo
push
inc
add
sbb
in
jl
out
or
and
jno
sbb
or
bound
cmp
push
jl
jle
push
sbb
xor
clc
dec
add
and
dec
sub
pop
push
jns
stos
jno
add
mov
dec
sahf
mov
pop
dec
sub
pop
adc
int3
rcrb
sbb
jb
add
pop
imul
inc
mov
pop
cmpb
xchg
out
and
dec
cltd
jmp
pop
mov
in
and
sti
loop
and
push
dec
imul
push
pop
andb
imul
repnz
outsb
dec
push
leave
sub
push
jo
push
add
add
pop
xor
inc
repz
insb
data16
mov
data16
fcompl
repz
ret
fs
or
loopne
dec
mov
cmpsb
mov
sub
cmpsl
out
add
mov
mov
sub
repnz
dec
add
push
adc
les
pop
mov
mov
sbb
loopne
cmc
inc
add
and
add
mov
imul
out
mov
cmpsb
mov
adc
add
movsl
mov
dec
rorl
jo
adc
adc
or
call
mov
loop
cmpsb
adc
pop
dec
out
pop
add
sub
mov
loope
xchg
mov
mov
xlat
and
or
mov
in
fwait
dec
fdivl
push
xchg
xor
js
and
ret
lret
adc
push
pop
in
or
pop
mov
mov
sub
mov
rclb
bound
xchg
dec
push
mov
out
cltd
xchg
pushl
rcll
stc
int3
or
add
sbb
int3
jg
mov
sahf
inc
xor
mov
cli
adc
and
enter
xor
mov
and
or
mov
pop
test
xor
adc
repnz
cmp
jl
sbb
mov
mov
test
mov
inc
ja
icebp
pop
sti
iret
insb
mov
mov
inc
or
enter
add
xchg
scas
in
out
inc
les
loope
ljmp
adc
pop
inc
sbb
test
add
sub
out
sub
dec
fsubl
subl
lcall
add
sub
mov
repnz
jecxz
add
mov
call
push
test
sub
adc
inc
insb
sub
xchg
push
and
and
clc
mov
das
movsb
add
hlt
add
adc
loop
arpl
pop
push
xor
push
pop
mov
add
add
js
pop
ret
jl
mov
inc
inc
gs
pop
rolb
inc
add
inc
push
pop
das
movsb
jl
pop
bound
push
mov
xor
lret
and
loop
insl
fs
push
pop
in
sub
mov
jge
push
mov
insl
inc
xor
jecxz
ds
test
pop
ror
push
rol
rcrb
lods
fldt
cmp
cmp
test
in
in
pusha
fisubl
cltd
inc
inc
xorb
xchg
dec
sahf
orl
xchg
cld
push
add
mov
fs
ror
add
push
sbb
jl
gs
or
fwait
pop
pop
sub
jne
loope
loop
cld
xchg
bound
loopne
in
cmc
mov
push
iret
and
adc
std
pop
cmp
and
mov
and
setno
fistl
add
xor
pop
adc
push
cwtl
jecxz
mov
xor
scas
add
in
addr16
call
and
and
jno
jae
xchg
jp
call
iret
push
fistpll
push
push
add
bnd
hlt
cld
out
sbb
xor
xor
lods
mov
stc
cmp
mov
and
stos
add
notl
pop
nop
pushf
add
inc
mov
xchg
pop
mov
adc
sbb
mov
in
pusha
enter
inc
andb
mov
loope
add
jae
push
das
mov
cmc
in
mov
inc
jb
mov
mov
mov
xor
jne
or
loop
add
jmp
fcompl
and
xlat
mov
and
scas
or
insb
pop
mov
add
mov
push
or
test
mov
add
jecxz
sbb
test
js
push
push
pop
repnz
xchg
xor
and
fdiv
push
movsl
fsubrs
insb
and
mov
out
push
mov
dec
and
cmp
xor
lea
mov
cwtl
insb
daa
mov
dec
pop
pop
lea
jge
mov
jno
scas
push
fcompl
lcall
push
xchg
jge
pop
pop
ss
int
loopne
mov
push
mov
fdivp
inc
inc
popf
sbb
adc
push
add
push
inc
push
add
pop
adc
jmp
and
imul
sub
in
orb
rolb
pop
xchg
add
xchg
sub
xor
jp
dec
in
loopne
push
cld
fwait
rcl
jae
dec
add
mov
cmpsl
push
add
in
mov
add
outsb
dec
insl
mov
loop
movsb
shrb
xchg
adc
add
loope
push
fiaddl
in
adc
out
mov
loopne
loop
add
and
mov
es
divl
sti
add
cltd
sub
bound
sbb
pushf
filds
push
movsb
dec
pop
or
sbb
mov
jne
daa
push
jmp
int3
cmp
jne
rcrl
xlat
cmp
popf
lock
dec
mov
xchg
mov
clc
push
or
cli
add
and
pusha
sbb
rolb
sbb
movsb
pop
ljmp
subb
dec
or
and
movb
subl
scas
add
xchg
fwait
lock
incb
pop
enter
mov
ja
mov
xor
sub
and
add
cmp
cmp
sbb
jmp
inc
xchg
mov
lock
add
stos
sti
push
and
pop
stos
inc
add
scas
lds
dec
pop
sub
jb
sub
mov
lods
imul
lcall
sbbl
dec
popa
pop
loop
inc
adc
std
cmpsl
outsl
clc
jne
push
sahf
cmp
add
push
mov
cs
add
bound
aaa
shrb
insb
clc
add
ja
outsb
sub
inc
and
movsl
add
pop
dec
rcrb
mov
ret
test
xchg
or
aas
idivb
pop
jmp
xor
fists
cmp
push
test
cmp
sbb
idivl
xchg
nop
repz
out
in
add
inc
daa
or
fistl
nop
or
pop
cld
movsb
adc
sti
inc
sub
sbb
pop
in
mov
or
add
loope
sub
cmp
nop
or
inc
enter
cmp
bound
cmc
cmpsl
loopne
inc
mulb
rol
and
adc
add
cmpsl
and
cmpb
clc
xor
call
adc
jo
test
sahf
add
movsb
shll
ja
add
mov
out
dec
push
test
into
adc
mov
inc
call
or
rorb
and
add
repnz
push
ret
in
and
mov
hlt
int
pop
out
loopne
cmp
subl
pop
int3
mov
inc
aas
insb
popa
inc
je
lret
and
arpl
jo
or
and
sar
adc
stos
jmp
dec
cmp
or
add
cmp
daa
inc
and
sbbb
in
shlb
mov
pop
out
fldl
int
cmp
and
add
mov
cmpsb
cltd
dec
adc
lods
bound
iret
ljmp
adc
sub
rolb
incl
stc
dec
mov
das
leave
xchg
aaa
out
loop
mull
jbe
and
xadd
out
jnp
mov
sbb
xor
mov
add
jae
push
cltd
mov
notb
or
call
cmp
pop
and
dec
mov
push
ficompl
adc
add
mov
add
jmp
lret
imul
or
lods
cmp
mov
mov
call
dec
subb
jno
jo
add
icebp
cmp
stc
inc
jnp
stos
test
ds
xor
ljmp
cmp
shlb
fidivl
add
jecxz
loope
lods
inc
push
sbb
shlb
clc
clc
or
repnz
add
sarb
jge
pop
dec
push
stos
inc
call
pop
push
mov
push
pop
push
xchg
jae
fcoms
loopne
xor
sbb
sub
in
push
or
repnz
mov
mov
jl
je
out
shll
rcrb
rclb
dec
adc
xor
aam
add
icebp
push
leave
adc
scas
xor
decb
insl
cmp
sub
leave
inc
mov
roll
popa
inc
cmp
in
sub
or
and
add
or
pop
das
int
ficoms
stos
in
add
test
or
push
jg
jmp
out
test
andb
push
inc
xor
sahf
popf
flds
cmp
jne
daa
dec
xchg
pop
pop
loop
add
or
sub
add
insb
add
and
mov
testl
xchg
cmp
cli
xor
pop
add
adc
mov
push
mov
addb
dec
add
add
cmpsl
stc
cmp
fiadds
hlt
mov
mov
fs
into
fsubrl
fs
add
sbb
je
sub
jnp
or
or
test
arpl
xchg
add
arpl
or
loopne
xchg
outsl
cmp
mov
sbb
and
popa
aas
cmp
int3
inc
idivb
call
mov
les
lahf
jnp
sbb
sarl
add
leave
in
je
lods
add
fildl
mov
adc
xor
jbe
mov
sbb
lahf
pop
or
andb
sub
push
add
dec
inc
push
clc
movsl
mov
sub
fdivs
out
dec
xchg
inc
cmp
add
inc
stos
bound
or
and
sahf
add
dec
iret
xor
xor
cwtl
push
and
inc
sbb
cwtl
push
cmc
add
and
inc
jle
add
cmpsb
mov
loop
icebp
movsl
add
ljmp
add
loope
bswap
push
or
and
add
pop
sub
pop
push
inc
add
jb
fistps
jl
mov
and
or
and
and
add
nop
in
sbb
std
data16
dec
pusha
int3
enter
pushf
popa
js
xchg
sbb
mov
js
jnp
fdivs
lds
add
fdivrs
inc
lahf
and
loop
pandn
jne
add
sub
push
fcomps
jnp
push
sahf
test
filds
or
popa
add
test
hlt
add
inc
imul
lcall
addr16
adc
or
and
arpl
jbe
push
mov
lods
das
or
pop
add
sub
add
test
mov
add
cmpl
sbb
sub
movsl
bound
sahf
cmpsb
stos
sub
ds
outsl
xchg
jl
jle
xchg
outsb
sub
jg
or
fcoms
jae
cmp
rcrb
pop
scas
pop
out
adc
add
sub
mov
jno
inc
adc
mov
lock
es
fldt
pusha
sub
icebp
or
movb
lret
hlt
inc
jge
adc
add
shlb
add
xor
and
adc
sub
push
imul
out
testl
mov
adc
mov
filds
lret
sub
jg
pop
sub
test
enter
shl
sbb
repnz
sbb
dec
add
add
mov
clc
mov
jbe
mov
mov
test
mov
loope
int3
cwtl
bound
jae
flds
aaa
stos
pop
mov
push
jecxz
add
push
jno
sbb
sub
and
jnp
shlb
pop
and
je
lahf
mov
nop
insb
mov
pop
nop
icebp
mov
xchg
adc
cmpsb
push
or
leave
sarb
lret
adc
cmp
mov
bound
and
sahf
sbb
fs
addl
xchg
dec
or
stos
and
nop
mov
fst
andb
mov
jle
xor
sbb
pusha
jns
cmp
int3
mov
jo
jno
loope
cmp
mov
aad
add
xchg
sub
test
jno
ja
ss
js
pop
adc
test
push
lods
adc
cs
inc
push
mov
push
sbb
jge
pop
jnp
and
iret
adc
add
scas
lret
xor
jnp
mov
mov
add
lds
cmpsl
fdivl
rcr
inc
nop
mov
dec
jl
je
jp
cmp
nop
mov
add
rclb
xchg
add
movzbl
sbbb
dec
movsb
and
add
mov
adc
lret
sarl
fwait
push
xor
xchg
and
adc
fcomp
and
into
cs
jo
cmp
dec
add
in
in
ror
and
aaa
mov
push
mov
cmpsl
inc
push
js
inc
inc
cwtl
cmpsl
jne
dec
jo
fistl
pusha
nop
clc
dec
stos
pushf
or
dec
loopne
movsl
ror
jo
and
dec
cmpb
pusha
fstpl
roll
mov
popf
add
push
push
int3
add
in
sub
sub
xchg
imul
notl
sbb
and
jmp
rolb
add
sarb
inc
arpl
movb
inc
jl
data16
and
add
pop
pusha
or
pop
pop
pop
sbb
loopne
add
add
mov
mov
adc
pusha
jg
inc
sbb
mov
push
xor
adc
and
mov
sub
sub
pop
daa
add
fcom
dec
lods
or
ja
inc
das
and
pusha
sub
cmp
data16
xchg
add
mov
pop
push
add
jle
push
roll
out
inc
add
cmp
roll
jnp
xor
or
xchg
cmp
testb
shll
cmpsb
in
cmp
jmp
pushf
push
mov
add
insl
call
or
jno
lahf
ret
scas
addr16
ss
jl
sbbb
mov
cli
leave
sub
xor
rcl
add
or
aam
or
cmp
cmp
js
add
dec
out
test
add
inc
shl
cmp
cmp
push
xchg
fnstenv
aad
add
dec
mov
test
and
sbb
sbb
mov
mov
lea
jne
and
xor
xor
cmp
fcomp
and
les
xor
push
jnp
pop
xchg
rol
in
and
inc
add
into
mov
lahf
mov
dec
fnstcw
cld
lahf
add
mov
mov
cwtl
sarb
jnp
inc
dec
and
add
testb
mov
and
jmp
push
xchg
adc
xchg
dec
popa
outsb
mov
movsb
push
dec
hlt
test
pop
pop
lret
adc
cmc
sbb
jge
dec
push
xchg
push
mov
inc
cs
inc
stos
pusha
xor
add
mov
lods
pop
les
push
shll
aam
jg
and
push
pushf
xchg
pusha
add
mov
pop
or
mov
lahf
add
rcrb
pusha
xor
jne
cmpsl
pop
adc
pop
xorb
and
lahf
sub
sbb
nop
test
pop
outsb
fcoml
cmc
xor
adc
inc
sub
test
ljmp
ds
adc
cmp
adc
add
call
scas
stos
cmpsl
lahf
inc
mov
in
sti
jp
fs
inc
enter
ss
js
inc
aaa
jnp
popa
add
andl
adc
xchg
sub
dec
mov
inc
sub
ja
pushf
movsl
push
xor
add
popa
addr16
sbb
into
inc
in
lahf
adc
in
push
sub
rorl
inc
outsb
mov
ljmp
lahf
sub
push
sub
inc
add
add
out
shlb
cmpsl
mov
fs
add
or
sub
or
mov
cmc
push
scas
push
xor
add
or
je
addr16
pop
pusha
xchg
push
sbb
lds
mov
add
je
cmp
insl
movsl
cmpb
dec
jmp
add
or
xchg
aaa
mov
repz
pop
call
sub
imul
add
dec
mov
cld
repnz
xor
int3
dec
add
out
push
mov
ljmp
dec
les
data16
adc
movsb
adc
add
insl
pop
in
and
xor
fldcw
fwait
imul
sahf
and
test
or
mov
imul
add
sbb
lcall
cmp
nop
and
inc
cmp
mov
fistl
dec
jns
sbb
daa
cmpsb
mov
pop
movsb
sub
mov
fwait
popa
ja
insb
fdivs
fwait
pop
add
sbbl
shl
jns
mov
and
adc
adc
test
or
es
fcoml
adc
lods
mov
lds
dec
inc
in
sub
shll
loopne
jo
or
jo
inc
testb
cmc
xor
pop
jmp
pop
lcall
dec
insb
add
icebp
jbe
js
cmc
mov
addr16
int
gs
stos
les
inc
je
cmpsb
fmulp
dec
data16
sub
cmp
cltd
pusha
cmp
jl
cmpsl
push
adc
sub
out
and
stos
xor
pop
add
nop
in
in
xor
or
add
mov
xor
nop
mov
dec
jae
mov
pop
adc
enter
mov
sbb
call
pop
mov
add
stos
addb
dec
jo
add
mov
sbb
stc
add
adc
and
cmp
inc
inc
and
inc
pop
les
cld
push
mov
jns
test
fld
cmp
hlt
sub
fnstcw
pusha
and
mov
repz
loope
int
mov
out
inc
sbb
jb
ficompl
sub
push
fisttpl
pop
add
shl
lock
or
rcr
add
xor
call
add
push
int
les
cltd
frstor
sbb
pop
push
or
jge
int3
or
scas
and
pusha
inc
ds
pop
dec
les
mov
das
test
adc
push
add
adc
out
pop
insb
inc
aam
sub
addb
adc
lret
cmpsb
pop
add
cmp
pop
cwtl
inc
cli
inc
je
pop
xor
dec
lods
add
or
push
int
in
mov
mov
cmp
subb
test
inc
xchg
add
push
jp
inc
jno
pusha
arpl
push
bound
jmp
mov
addl
rcl
sbb
push
sbb
sbb
xchg
clc
les
bound
inc
or
adc
cmp
les
and
clc
mov
xchg
mov
and
es
mov
loopne
jle
test
pop
enter
cmp
test
cmpsl
jo
lcall
cmc
mov
and
fs
aam
popf
pop
cmpsb
adc
icebp
sbb
pop
shll
test
push
cmpb
add
jmp
repz
out
inc
repnz
repz
aad
cmpsl
js
cmp
mov
lds
aaa
shrl
clc
into
shlb
and
loope
ror
dec
mov
mov
dec
push
dec
stos
inc
fsubrs
push
add
jnp
dec
pushf
mov
add
pop
pop
add
test
mov
pop
fimuls
dec
push
xchg
imul
pop
shll
sbb
fidivl
and
sub
subb
mov
xor
out
mov
push
cli
mov
leave
inc
cmp
int
add
pop
adc
dec
faddl
lret
mov
pop
shrb
shl
imul
add
mov
sbb
jno
xchg
enter
jl
xor
mov
ffree
je
loope
sbb
pop
and
pop
fimull
and
rcrl
push
aam
into
shrl
mov
pop
loopne
fwait
or
add
xlat
cs
inc
out
in
je
sub
mov
cmp
in
pop
push
aam
in
mov
test
test
inc
adc
pop
sub
js
lods
xor
inc
enter
pop
sbb
push
int
sub
push
cmpsl
dec
dec
outsl
ljmp
fbld
loopne
cmp
lock
mov
push
inc
inc
rolb
stos
jecxz
cmpsl
xor
dec
mov
rolb
xor
sub
sarl
out
lret
push
jno
mov
andb
mov
and
push
jns
and
pop
pop
jno
clc
or
mov
pop
push
push
push
adc
mov
sub
xchg
std
je
add
xchg
ja
stos
mov
sub
adc
aam
lahf
mov
cmp
in
mov
stos
sbb
mov
repnz
dec
mov
mulb
subb
wbinvd
dec
sub
adc
add
or
ret
jo
or
jo
stc
xchg
jbe
mov
in
hlt
je
jg
xchg
mov
xor
xor
mov
aad
sub
add
in
imul
loope
sub
js
rol
cld
add
notl
nop
inc
subb
pop
mov
xor
fdiv
xor
mov
or
xor
pop
adc
out
pop
fwait
mov
jne
jnp
or
sub
and
adc
mov
dec
mov
push
pop
jle
and
scas
iret
jns
or
or
pop
adc
dec
jno
push
fdiv
fldenv
in
bound
andb
dec
xor
test
push
adc
jno
cmp
pop
cwtl
pushf
loopne
iret
in
sub
test
jg
or
stc
jecxz
mov
mov
ja
jo
push
mov
movsl
xlat
push
das
clc
and
pop
mov
mov
xor
stos
mov
icebp
and
int3
mov
shrb
imul
sbb
dec
push
mov
fistl
xor
js
test
cmp
les
sbb
add
outsl
leave
cs
vmovlpd
cmc
add
cmp
jmp
stos
add
lret
cmp
push
mov
add
mov
sar
inc
js
or
cwtl
adc
out
data16
insb
pop
inc
cmp
mov
stos
lods
pop
mov
hlt
or
out
and
jo
sub
xor
or
in
mulb
and
add
aam
dec
jge
inc
rcll
sub
and
aas
sahf
mov
add
adc
mov
movsl
in
outsb
mov
loope
int3
pusha
mov
loope
jbe
inc
sbb
cmovs
add
add
push
cs
cmpsl
sbb
and
ljmp
jo
adc
sub
xchg
mov
xor
or
popf
push
je
sub
adc
jp
adc
sbb
lods
and
mov
xor
movsl
mov
popf
in
ret
add
sbb
fcmovu
imul
inc
add
movsw
sbb
loop
xacquire
paddusb
push
mov
xchg
sub
xlat
es
add
cmpb
call
pop
loopne
aaa
or
pop
mov
in
sbbb
cmp
and
mov
add
dec
adc
dec
xchg
and
stc
adc
xchg
gs
fwait
jnp
daa
jo
rcll
cmp
enter
dec
insb
adc
jbe
sarl
into
mov
arpl
ds
mov
xchg
or
pop
cmpb
sbb
sbb
cmp
movsl
adc
repnz
ljmp
inc
add
shlb
addr16
xor
jl
cmp
outsb
push
xor
stos
inc
push
rolb
mov
mov
enter
bound
ss
imul
fmul
add
pop
mov
fs
xor
les
and
test
or
add
ljmp
je
fdivrl
or
sbb
dec
dec
stos
rcrb
iret
idivl
add
push
out
test
rolb
ljmp
xor
movsb
push
inc
push
xchg
inc
and
adcb
test
pop
pusha
push
inc
pop
push
cmc
icebp
mov
pop
mov
jle
xor
sub
repz
xor
jo
xchg
adc
arpl
jbe
clc
movsb
aam
mov
fsubr
add
andl
and
das
add
mov
pushf
je
xor
les
mov
jbe
fisttps
add
mov
cmp
loop
and
sub
sub
dec
mov
lcall
in
pop
mov
push
mov
or
adc
add
and
test
sub
cwtl
popf
pushf
bound
insb
cmp
std
inc
pop
cmpsl
lahf
add
add
xchg
in
pusha
jl
lods
adc
dec
fwait
add
and
insl
les
or
xor
nop
test
jle
inc
mov
rolb
mov
dec
shlb
sub
mov
outsb
or
sub
pop
or
sub
js
jne
cmp
outsb
mov
dec
pop
fildll
add
pop
mov
hlt
jno
add
addr16
cltd
movhps
inc
and
pop
jge
cmp
pop
inc
into
dec
enter
out
movsl
add
xor
in
adc
pop
add
hlt
and
mov
lds
enter
xor
int
mov
add
dec
outsl
cld
lods
je
jg
ljmp
call
lea
popf
mov
sub
pop
test
pop
test
adc
lret
or
hlt
rorb
pop
add
adc
add
iret
cmp
test
sbb
or
mov
fiadds
sub
mov
adc
pop
add
clc
bound
jp
pushf
inc
rorl
xor
mov
inc
xor
daa
mov
xorb
inc
push
shll
in
js,pt
pop
add
dec
jbe
or
ds
jle
in
xchg
push
ljmp
add
out
mov
std
pop
mov
into
or
lahf
int
push
imul
mov
shrl
sbb
mov
ja
add
cmpsl
outsb
push
fildll
stc
inc
ret
movsb
in
pop
pop
aaa
add
push
adcw
mov
or
sbb
icebp
jle
mov
fsubr
xor
in
nop
pusha
out
mov
orb
test
push
and
add
and
pushf
pop
add
pop
xchg
aam
xlat
test
cmp
or
fdivrl
add
dec
or
addl
lods
lcall
jmp
mov
pop
add
add
orb
lds
and
add
or
sub
and
sbb
inc
ds
stos
add
call
leave
movsb
mov
dec
adc
jl
cmpsl
pusha
xchg
dec
sbb
push
jo
aaa
xor
mov
xchg
mov
hlt
sbb
pop
and
mov
test
lock
adc
or
ret
dec
sarl
add
adcb
inc
cwtl
and
in
js
fwait
and
add
jo
sub
add
lock
popf
inc
cmpsl
add
cwtl
rcrl
push
push
inc
lods
movsl
mov
push
add
nop
push
fcmovnb
mov
dec
cmp
idivb
add
aad
xchg
mov
mov
add
sub
mov
add
sub
sub
enter
add
add
xor
inc
cmp
mov
fadds
vmovlps
inc
push
xadd
and
push
dec
int
pop
ja
dec
jmp
shlb
arpl
add
pop
cs
fcompl
cwtl
test
cmp
pop
add
add
pop
jbe
cmp
push
mov
repnz
test
add
jl
xchg
mov
or
jae
jo
js
aad
outsl
dec
movsl
adc
push
pop
xor
or
xchg
cmp
shl
loopne
pusha
cmpsl
popa
push
cs
imul
movsl
mov
adc
pop
add
fst
fsubl
jg
aam
repz
aam
xlat
adc
sub
out
fmulp
rorl
xchg
add
pop
add
cmp
and
gs
inc
or
insb
jns
add
out
test
test
es
sub
xor
pop
push
leave
mov
lock
shll
sbb
or
cmpsl
insl
movsb
inc
rcrl
jecxz
adc
and
sub
enter
push
pushf
jns
sbb
ljmp
add
loop
icebp
push
loopne
pop
test
mov
inc
add
adc
push
adc
adc
adc
ror
add
push
pop
out
add
push
jo
push
shl
mov
pushf
fldt
cmp
notl
pop
add
sti
loope
and
into
rorl
test
jg
add
dec
sub
mov
sbb
dec
cmp
loop
pop
push
je
gs
jecxz
bound
call
xchg
mulb
or
fiadds
mov
pushf
fcom
sub
jmp
enter
cwtl
js
test
int3
stos
js
clc
ret
fs
push
mov
pop
jae
and
test
push
out
mov
psllq
add
inc
test
push
cmp
lahf
test
cmp
scas
cmp
mov
mov
add
int3
dec
shll
sub
xor
ljmp
rcrl
and
imul
out
and
popl
mov
loopne
xor
sbb
or
or
nop
push
mov
pop
jg
lock
popf
inc
loopne
or
xor
mov
mov
in
dec
xchg
jns,pt
add
pop
inc
jl
mov
fs
js
testb
int
flds
jno
pop
pop
dec
cltd
or
andb
or
insl
rolb
adc
clc
pop
dec
jle
mov
inc
mov
or
lcall
stos
sub
and
add
shrb
es
jle
or
jl
shlb
clc
pop
push
shrb
cmp
in
jbe
pop
pop
daa
adc
xchg
pop
out
cwtl
and
inc
lret
sub
xor
dec
sbb
aas
add
lock
pop
movsl
push
add
loop
idiv
jl
cmp
repz
daa
and
daa
test
inc
nop
imul
add
and
mov
add
cmpsb
or
sub
cmp
cmc
or
jge
jg
cli
inc
dec
jnp
xchg
divb
loopne
cmp
mulb
jne
nop
add
lret
loopne
popa
adc
adc
pop
and
popf
or
bound
mov
inc
dec
add
and
loopne
or
dec
mov
add
mov
cld
int3
mov
jle
adcb
sti
hlt
jb
mov
in
fst
sbb
ss
mov
loopne
dec
sahf
mov
movsb
add
fchs
repnz
fcoms
outsb
sbb
aam
les
and
and
iret
add
out
outsb
cmpsl
ficomps
or
fildll
cmp
mov
jmp
fmulp
insb
xchg
idivb
loopne
sbb
gs
add
mov
xchg
xchg
aam
inc
aaa
or
or
dec
xchg
enter
xor
fstl
repz
push
addb
sub
or
les
add
mov
aaa
jge
imul
imul
and
add
mov
mov
lds
inc
lahf
add
cwtl
aad
push
repnz
mov
and
dec
mov
mov
cmp
sbb
adc
cmp
enter
jne
inc
dec
out
cmpsb
mov
push
test
sbb
mov
push
jge
shlb
das
inc
pop
jae
push
roll
push
xchg
outsb
push
add
pop
xchg
add
sub
fadds
rcrl
lcall
jl
mov
enter
lods
adc
jo
mov
add
xor
aad
test
data16
xchg
push
les
mov
loop
call
push
adc
das
push
pusha
or
pop
popf
or
push
sbbb
loopne
sub
mov
arpl
popf
lods
xchg
pop
sbb
mov
das
or
sub
adc
lock
enter
jne
add
jns
daa
jbe
outsb
ljmp
das
ss
xor
adc
das
inc
repnz
in
rorb
add
out
push
mov
adc
or
insb
jmp
dec
jl
dec
nop
jo
pop
fcmovb
sub
xchg
lret
cld
faddl
in
push
jecxz
xorb
push
adc
nop
xchg
aas
or
jle
adc
cwtl
pop
js
lret
into
push
addr16
add
outsb
cmp
add
loop
jae
outsl
mov
jno
lret
pop
mov
sbbl
lods
push
rolb
icebp
add
aas
and
iret
adc
shr
sbb
xlat
cmp
and
add
les
imul
insl
mov
imul
xchg
or
pop
cmp
mov
xor
xor
lock
dec
xlat
int3
push
jo
fs
xor
pop
lret
adc
rclb
xchg
sub
shl
jns
sbb
in
cs
popl
lea
fimuls
or
stc
jne
xor
sti
push
call
mov
pop
inc
rorl
inc
add
add
inc
pop
mov
test
mul
adc
jmp
adc
lret
mov
daa
aas
jo
lret
shl
push
test
dec
lret
xor
pop
lret
sub
test
add
aam
add
and
add
pusha
imulb
int3
cmp
popf
fs
fcomps
xchg
xchg
pushf
outsb
pop
test
es
outsl
ds
add
mov
rorb
popa
repz
add
cli
mov
add
rorb
sbb
mov
in
inc
ret
inc
int3
pop
inc
mov
push
mov
cmp
hlt
clc
and
cmpsl
pusha
call
mov
stc
clc
insl
imul
and
stc
sbb
rcl
mov
xchg
jbe
rcll
insl
lock
jne
dec
add
mov
aaa
add
mov
or
adc
jne
xchg
and
rcrl
add
insb
add
mov
cmp
rol
push
add
je
pop
jae
gs
sub
inc
pop
lock
pop
out
add
dec
into
ret
test
out
ret
test
push
cld
xor
add
inc
cmp
ret
add
fiadds
xlat
lods
cmpsb
aam
les
pop
adc
loopne
shlb
cmp
adc
sub
mov
and
add
shll
outsb
or
movsb
cld
pop
dec
in
test
and
push
or
cmpsl
cmc
or
inc
add
cli
mov
xchg
outsl
push
cmp
rcr
imul
clc
int3
test
outsb
test
add
xchg
push
movq
rorb
clc
sbb
cmp
mov
inc
xor
sub
test
push
sub
xchg
repnz
stos
cwtl
push
xchg
out
lahf
xor
popa
mov
test
mov
js
fwait
push
mov
fs
rorb
push
mov
sarb
or
and
rorb
and
jmp
stos
push
je
push
sahf
jne
dec
add
arpl
xchg
ror
mov
roll
push
jecxz
sbb
lock
mov
call
mov
int
push
cmpsl
stc
dec
test
inc
or
les
inc
mov
mov
gs
inc
lods
pop
mov
and
popa
retw
xchg
clc
jl
repz
fs
repnz
je
shrb
outsb
fs
jl
fxch
mov
dec
cmp
jbe
inc
repnz
frstor
mov
ljmp
dec
cmpsb
cld
loopne
pop
test
adc
sti
movsl
repnz
imul
add
xchg
mov
mov
adc
repnz
xchg
or
cmpsb
hlt
shrb
sub
rclb
icebp
hlt
sbb
fsubrl
sub
lahf
cmp
outsb
add
mov
fldl
stos
cmp
jo
cmc
cmp
sub
ficoms
lcall
in
add
xor
add
sbb
ja
enter
or
dec
test
daa
jge
add
add
cmpsl
js
sub
sub
test
les
push
xchg
test
rcll
add
or
lock
inc
dec
jnp
ljmp
add
jl
out
dec
push
int
and
and
jecxz
xchg
mov
push
or
test
pop
push
fdivr
ja
adc
or
fsts
and
loop
sub
mov
xorb
je
stc
push
cld
sub
lods
xor
pop
das
fimull
cmp
xor
cld
adc
out
mov
and
cmp
mov
push
cwtl
xchg
loopne
sub
push
negl
cmp
xchg
add
mov
pop
and
iret
push
dec
adc
mov
popa
or
cmpsl
test
fdivl
mov
fwait
incl
arpl
xchg
pop
adc
xor
push
add
roll
nop
sub
inc
and
iret
add
xchg
lock
repz
jg
dec
stos
push
push
mov
add
stos
in
stos
in
jb
adc
mov
sub
hlt
or
xor
add
mov
fs
aaa
adc
pop
nop
fdivrl
or
lret
pop
add
cmp
adc
cmpsl
fucomip
and
lret
xor
jno
push
xor
adcl
fcompl
jo
pop
push
nop
add
adc
lcall
jecxz
call
fdivs
xchg
cmp
ret
cwtl
pop
add
jnp
jo
push
ret
mov
push
int3
add
outsb
sub
ja
jb
mov
or
and
addr16
imul
loop
ljmp
mov
ljmp
nop
inc
inc
loopne
test
cmp
mov
add
icebp
in
aad
xchg
out
enter
jmp
fcoml
mov
mov
xchg
aam
fsubs
dec
dec
loopne
mov
hlt
call
cs
ret
test
outsb
mov
scas
add
ret
push
mov
fwait
add
shll
js
fsubs
in
cmc
mov
xchg
xlat
andb
test
jo
xchg
cmpsb
sbb
xor
xchg
loop
loopne
sub
dec
mov
push
dec
adc
xor
mov
xor
frstor
clc
fmuls
jg
enter
shll
sbb
aas
and
stos
pop
push
add
push
addb
mov
movsl
mov
cmc
mov
sub
mov
cld
add
mov
popf
scas
cmp
sub
pop
adc
push
ds
push
cmpsl
mov
dec
lret
mov
pop
js
mov
jle
fcoml
mov
sub
lahf
leave
lcall
or
fmull
mov
jecxz
dec
lahf
cmp
dec
lods
outsb
mov
or
inc
rol
jl
les
je
loop
or
in
add
jecxz
out
adc
push
inc
xchg
push
cmp
push
scas
add
ret
fdivr
xlat
push
add
and
jl
incb
cld
ror
jg
test
test
adc
rcll
add
lfs
push
hlt
int3
pop
add
cmp
inc
add
cmpsl
lret
mov
pop
les
sub
dec
inc
mov
test
call
add
pop
das
loopne
loope
sar
adc
sti
enter
pop
xor
or
or
cmpsl
fidivl
sbb
push
jl
fs
test
dec
dec
jg
inc
jl
cmpl
nop
adc
lret
test
int3
in
out
xor
cli
add
sbb
das
pop
xchg
rcrb
inc
shl
sbb
and
test
inc
sub
js
movsb
pop
mov
push
push
mov
outsb
pop
add
or
mov
xor
leave
ret
pop
sbb
pop
dec
mov
shr
cs
imul
push
mov
add
loop
lea
jbe
xor
fadds
mov
push
jecxz
push
ja
outsl
push
add
xor
sbb
pusha
popa
or
sbb
and
fcmove
sarb
pushl
jne
nop
pusha
fiadds
jmp
cmp
sub
andl
popa
movswl
mov
hlt
stos
fdivl
mov
out
into
adc
adc
in
outsl
add
ficoml
dec
bound
cmp
div
hlt
lea
push
jb
add
jg
push
movzbl
popf
in
sbb
sub
mov
jle
mov
mov
or
adc
adc
lcall
adc
notl
sbb
pusha
in
xchg
mov
sbb
xor
xchg
movsl
xlat
insl
ja
pop
imul
cmpsl
mov
pushl
sub
mov
cmpb
xchg
add
xchg
jmp
cld
add
lahf
mov
cmp
getsec
xchg
pop
fs
push
mov
cs
and
push
pop
or
call
je
loope
movsl
push
jge
dec
xchg
xlat
mov
adc
mov
mov
pop
out
outsl
adc
popf
pop
sarl
or
xchg
test
mov
loope
jns
lock
sbb
repnz
jmp
imul
xor
mov
mov
je
pop
daa
cli
mov
test
pop
aad
hlt
ss
imul
fwait
call
bound
xchg
cmpl
dec
pop
icebp
mov
sbb
jecxz
popa
nop
mov
call
js
test
ja
sub
jnp
lahf
test
hlt
sbb
pop
and
incl
and
inc
sub
addr16
sub
fs
fstpt
rolb
mov
jle
cli
mul
mov
stos
xlat
add
pop
test
imul
and
or
adc
adc
pop
hlt
inc
pop
inc
xchg
mov
pusha
add
insl
and
jns
push
iret
push
cmc
mov
mov
imull
xchg
movsl
jae
stos
and
adc
in
push
xchg
jecxz
jae
iret
mov
fiadds
jmp
ret
mov
les
pop
stos
and
and
push
je
or
push
xchg
adcb
out
movaps
xchg
adc
lret
lret
add
addb
push
jle
mov
clc
ljmp
iret
lahf
pop
mov
enter
inc
cmp
lcall
bound
inc
lea
ljmp
nop
js
mov
adc
xchg
add
bound
add
insb
fistpl
push
mov
push
jmp
in
lret
inc
inc
in
out
ret
mov
nop
lcall
add
add
jo
fisubl
imul
mov
aas
iret
mov
or
popf
sbb
adc
rolb
les
out
cmp
xchg
push
pop
xor
push
popa
pusha
sub
jmp
add
cwtl
pop
jle
outsl
popa
sahf
mov
daa
je
adc
es
sub
or
dec
cs
mov
push
jne
out
xchg
popf
add
ret
mov
ds
lea
xor
mov
rorl
xor
scas
faddl
rcrl
imul
popa
xchg
adc
mov
and
adc
inc
dec
add
andb
xchg
roll
mov
pop
js
out
push
pop
xor
jns
adc
add
call
lods
add
and
and
push
pop
popa
and
mov
dec
lods
mov
rcll
dec
jmp
loop
push
add
icebp
je
loope
cmpl
mov
mov
inc
add
mov
pop
call
lods
and
fdivr
add
mov
fdivl
out
xchg
sbb
sub
scas
adc
push
popa
inc
jo
push
or
or
sarb
sbb
mov
out
scas
or
push
dec
mov
dec
not
ret
and
scas
jns
mov
or
leave
mov
aam
or
lahf
push
inc
rcrl
cmp
mov
nop
cmp
loopne
out
fistpll
test
mov
adc
pop
repz
gs
push
popf
mov
push
mov
mov
out
das
ljmp
adc
adc
mov
mov
sahf
and
mov
enter
subb
pushf
pop
shlb
xchg
push
leave
push
das
mov
cs
shll
loopne
ds
cs
sbbl
mov
adc
xor
inc
sub
shr
mov
dec
fwait
and
cltd
jns
pop
dec
dec
daa
testb
in
or
lock
and
adc
shlb
clc
aaa
sub
cmpsl
mov
push
sub
dec
mov
jo
mov
sbb
xchg
pusha
jmp
pop
add
mov
xor
mov
xor
pop
sbb
dec
sarb
std
sub
xchg
jbe
das
and
mov
mov
cmp
test
inc
add
loop
push
pop
sbb
xchg
and
loop
pop
push
nop
int
adc
es
jb
or
push
pusha
pop
loop
mov
xchg
add
gs
outsl
repz
les
inc
sbb
push
ret
add
rcll
adc
clc
pop
push
sbb
dec
push
in
or
push
loopne
jmp
cmp
pusha
sarb
sbb
and
and
mov
xchg
sub
sbb
mov
lock
mov
pop
mov
and
add
push
pop
rolb
sub
lds
adc
cmpsl
fiadds
sahf
and
iret
jge,pn
cmpsl
add
dec
mov
insl
push
and
sbb
mov
out
es
mov
arpl
call
stos
ja
cmp
sub
fstps
gs
scas
cwtl
inc
das
pop
xchg
fbstp
add
fwait
mov
popf
sub
xorb
pop
sbb
jmp
jne
movsb
loop
add
xchg
pop
and
std
jmp
call
aas
scas
pushf
jl
add
cmp
pop
mov
and
pop
pop
pop
aaa
leave
popf
jmp
push
test
shll
sbb
push
mov
adc
pop
pop
push
or
lock
sbb
bound
repz
addr16
add
fdivl
insl
sub
xchg
jmp
lock
in
jmp
jnp
or
pop
add
sbb
sub
push
hlt
idivl
test
rep
add
jb
cmp
in
call
ss
push
push
xchg
adc
sub
or
xorl
xor
std
test
test
fidivrl
push
add
popa
adc
pop
pop
sti
fiadds
lock
mov
mov
or
in
cmc
push
add
test
mov
js
movsl
add
jle
xor
icebp
and
mov
bswap
inc
ret
cmp
and
mov
add
loopne
lcall
lcall
cmpsb
pop
ljmp
xchg
or
cmp
jno
test
les
sbb
insl
and
sbb
popf
and
sbb
dec
add
neg
ja
push
jns
in
ficompl
jo
lods
pop
dec
pop
add
mov
pop
push
adc
sbb
pop
or
jo
push
cli
or
cli
cmp
cmp
add
aaa
movsl
ret
cmp
adc
out
cmp
push
mov
add
mov
xchg
or
push
or
pop
shrl
ljmp
jp
repz
fldl
popa
mov
nop
push
mov
sub
pop
xor
push
sbb
push
mov
adc
aaa
lea
out
fdivrs
loope
lea
and
sbb
out
sub
rcr
orl
les
rolb
pop
xor
mov
fmuls
jb
add
cmp
addr16
sub
mov
cmpsl
inc
in
in
add
mov
push
enter
mov
pop
pop
daa
sub
adcb
lcall
push
adc
jno
imul
adc
faddl
mov
and
jge
cltd
das
adc
xchg
inc
push
stc
push
add
out
add
dec
xchg
pusha
rcrb
into
pop
mov
data16
call
mov
dec
or
sub
and
fsts
clc
fwait
inc
test
xor
movsb
sub
sbb
inc
sahf
les
sub
adc
mov
push
decb
cld
xchg
and
bound
cld
stc
mov
imul
add
or
adc
mov
add
sbb
daa
ret
push
roll
je
pusha
xadd
xchg
jb
or
mov
fidivs
icebp
daa
mov
call
or
add
xchg
stos
mov
or
mov
out
fadds
into
jnp
mov
jo
jne
adcl
lds
add
in
repnz
out
xor
add
cmp
xchg
xor
dec
mov
stos
aad
add
outsl
jne
mov
or
xor
loopne
sbb
mov
mov
xor
test
or
push
inc
clc
daa
add
xchg
sub
jnp
xchg
imul
mov
mov
aam
mov
notl
lret
jp
ret
out
add
jnp
and
jl
dec
xor
fisubs
dec
cmp
add
jg
pop
test
pop
testl
or
add
mov
clc
push
pop
add
imul
and
and
and
adc
dec
push
call
add
cmp
sbb
xor
push
jns
xchg
cwtl
mov
xor
lcall
push
loop
cmp
xchg
jno
and
lcall
cs
xchg
test
cmpb
ja
xor
pop
and
add
xchg
dec
subl
ret
add
shll
call
pop
pop
add
pop
sub
sbb
jae
add
fstpt
push
fists
adcl
shll
dec
add
rcrb
stos
mov
andb
or
adc
jne
inc
stc
cmc
push
push
xor
xor
sub
and
add
mov
and
pop
lea
jmp
ljmp
andl
push
mov
aad
ret
cwtl
mov
cmc
mov
jnp
cmp
orb
sbb
pushf
divl
jp
add
mov
aaa
pop
pop
icebp
rcrl
shrb
inc
add
aam
sub
add
sti
clc
repz
adc
pop
out
ret
lock
xchg
imul
outsl
add
push
fdivrl
push
sbb
in
push
dec
mov
jecxz
test
mov
or
fiadds
fcoms
cmpsl
gs
pusha
bound
mov
aaa
xchg
int
out
pop
add
loopne
pop
push
movsb
adcl
push
nop
in
push
mov
hlt
mov
adc
movl
orl
add
lahf
push
sahf
cmp
or
in
mov
addr16
and
xchg
pop
cwtl
in
sub
pusha
mov
pop
out
jge
test
cld
cmpsb
aaa
add
and
mov
jnp,pn
add
movsb
pop
imul
mov
push
pop
push
mov
in
mov
sub
xchg
push
movsl
mov
jnp
adc
add
lock
push
mov
rorb
add
jge
push
fstpt
sbb
inc
test
popa
cwtl
cmpsb
repnz
icebp
add
inc
lock
push
mov
movsb
imul
mov
mull
or
dec
add
fwait
test
mov
push
pop
inc
add
and
fstpt
inc
loope
or
push
xchg
aas
cmpb
test
mov
push
mov
andl
mov
aad
cltd
repnz
xor
lods
sub
and
xor
out
and
ficompl
mov
orb
xor
push
addr16
mov
cmpsb
add
pusha
mov
xlat
lcall
or
push
mov
sbb
and
add
outsl
cmpsl
xor
insb
mov
push
pop
jg
or
jbe
sbb
sbbl
pop
repnz
cmpsl
lea
test
arpl
and
pop
and
and
enter
daa
mov
push
mov
mov
stos
and
mov
aaa
push
xchg
testl
lret
cld
sbb
nop
pop
mov
adc
pop
sbb
popf
std
adc
or
adc
and
sub
mov
push
rorb
add
jmp
jnp
cld
add
movb
pop
mov
test
and
or
adc
sub
mov
xor
adc
xchg
push
add
rorb
add
stc
mov
mov
or
mov
push
push
int3
fistpll
stos
imul
loopne
jae
incb
mov
xor
push
add
mov
xor
and
loope
or
loop
xor
and
xchg
dec
sbb
jns
stos
cmpsb
mov
dec
sub
pop
pop
fstpt
subb
mov
adc
or
sti
mov
aam
mov
push
or
or
cmp
pop
xor
sbb
or
jl
movsb
push
xchg
or
sbb
movl
in
scas
mov
jmp
popa
int
loopne
jo
cmpsb
add
fcomps
add
sub
add
adc
dec
add
xchg
xor
add
jns
movsb
xor
jmp
popa
popf
jmp
or
and
mov
repnz
or
call
xchg
pop
out
leave
daa
jnp
inc
dec
fisubl
pop
add
pop
clc
push
fisubrl
pop
jo
pop
into
xor
cmc
sbb
mov
shl
pop
pop
ffree
sub
pop
iret
iret
filds
adc
mov
andb
dec
adc
jmp
fstp
pop
mov
push
int
pusha
lds
sarb
mov
dec
pop
ret
popf
mov
add
adc
add
and
adc
jnp
mov
add
mov
xor
inc
daa
das
stos
or
out
xor
adc
out
add
fisttps
add
les
in
mov
inc
leave
shlb
pop
sbb
and
xor
jl
mov
dec
fdivs
cmpb
sahf
nop
pop
and
add
push
cwtl
pop
imul
fstps
and
jb
test
cmovg
sbb
sarb
nop
out
sbb
add
cmpsl
mov
add
cmc
and
std
movsb
adc
test
aas
jmp
push
sub
add
repz
push
ljmp
add
popf
ja
mov
sub
inc
shrd
jb
add
and
sub
mov
sub
xchg
pop
outsb
mov
adc
imul
adc
or
push
out
dec
pop
add
add
fisttpl
stos
out
mov
mov
sub
enter
jl
lea
or
jle
pusha
xor
adc
in
dec
push
cmp
mov
xchg
or
jnp
mov
pop
cld
add
popf
std
cld
dec
pop
mov
add
xchg
lret
push
jge
add
add
push
nop
mov
dec
jno
andl
enter
js
cmc
popa
mov
add
cmp
adc
xor
sbb
sub
and
push
mov
cmp
or
test
dec
push
stc
mov
int3
sub
jnp
std
outsl
test
mov
test
aam
jo
or
xchg
cmc
add
push
sub
sbb
loop
popa
jp
and
mov
ror
sub
rolb
jmp
in
shll
and
punpckhbw
adc
fisubrl
scas
push
enter
lds
push
ja
or
std
insl
add
jle
stos
and
or
or
faddl
fwait
shrl
mov
popf
sbb
jnp
or
push
and
cmp
ds
pop
dec
mov
xor
xchg
sbb
or
enter
adc
xchg
jno
dec
scas
xchg
pop
fbstp
mov
call
mov
adc
test
jmp
dec
es
fnsave
mov
add
add
and
movsb
cwtl
xorb
gs
arpl
mov
push
lret
mov
insl
mov
push
mov
mov
popf
xchg
sarl
and
leave
cs
jmp
sbb
jmp
add
fadds
outsb
data16
inc
jmp
jae
rol
sub
ret
mov
shr
stc
add
add
sub
pusha
mov
inc
pop
add
jge
xor
cld
mov
imul
verw
add
enter
push
mov
addl
jg
aaa
les
mov
or
xchg
cltd
ficoml
jmp
ja
loope
nop
je
jne
dec
adc
insb
sbb
sub
jo
fstpt
dec
push
test
push
sbb
dec
push
pusha
sbb
mov
add
imul
inc
push
fldcw
pop
sarb
xchg
pusha
enter
dec
pop
fimull
fisubs
cmp
cli
xor
push
xor
jo
pop
adc
nop
add
mov
xchg
mov
dec
dec
pop
mov
rcl
push
rcrl
into
sbb
stos
aas
add
stc
data16
mov
push
or
jg
mov
popf
adc
mov
push
cli
push
or
lods
adc
jg
mov
sar
or
dec
pop
mov
adc
pop
rclb
sbb
add
out
subb
stos
hlt
movsl
dec
inc
movb
cld
inc
lret
bound
int
pop
adc
and
movsb
pop
es
or
mov
lods
adc
adc
iret
dec
cmpb
movsb
mov
test
pop
mov
fmuls
in
or
dec
fidivl
test
insb
add
gs
insb
loop
mov
fnstenv
add
push
xor
mov
mov
subb
in
add
xchg
pop
stos
or
mov
pop
lcall
push
sbb
mov
rclb
das
jmp
sub
mov
adc
adcl
push
dec
add
insl
jno
loope
adc
fxrstor
enter
lock
mov
push
pop
cltd
and
dec
sbb
sub
push
pusha
mov
scas
daa
xchg
adc
into
push
inc
mov
inc
cmp
imul
call
aaa
mov
fisttps
pop
push
dec
xchg
inc
dec
stc
out
fstpt
ret
xchg
pop
rcrb
jmp
add
cmpsl
push
scas
sub
xchg
das
rcrl
mov
dec
and
lds
mov
popa
pop
push
jbe
or
jp
sahf
mov
movsl
push
movsb
push
popa
andl
and
and
xchg
pop
rclb
test
or
in
ret
pop
fsubr
inc
pop
mov
mov
aaa
inc
imul
mov
dec
loop
jb
mov
xchg
adc
xchg
adc
nop
sub
jp
mov
sahf
bound
push
mov
cld
lds
fisubl
cmp
mov
or
mov
into
shl
pushf
aaa
sbb
lea
sahf
test
push
push
mov
mov
push
adc
mov
rcll
add
aas
adc
jp
and
insb
sbb
xchg
in
mov
cmp
lea
test
push
pop
sub
cs
clc
inc
add
jg
faddl
pop
sbb
out
xor
lods
mov
addl
aad
popf
pushl
jo
sbb
pop
xchg
pop
or
and
and
and
inc
jmp
out
or
dec
pop
and
mov
adc
fiadds
test
or
in
pop
push
je
stc
nop
in
gs
addr16
lcall
cmpsl
sbb
mov
icebp
int
out
imul
add
mov
cmpsb
and
pop
adc
push
add
jmp
lea
jle
scas
xor
sub
jmp
sti
add
xor
mov
jp
dec
mov
xchg
adc
ljmp
dec
add
xor
push
mov
sub
insb
dec
push
adc
mov
lret
cmp
add
int
adc
jae
push
push
ret
bound
icebp
sbb
mulb
jg
sahf
mov
xchg
sbb
arpl
sub
or
les
cmpsl
push
sbb
sti
inc
or
dec
push
cmp
aam
rcll
adc
dec
sub
sbb
add
mov
jmp
jl
mov
mov
pop
mov
test
xorb
les
decb
rorl
adc
sbb
xchg
test
mov
adc
sub
or
add
popf
push
jbe
adc
xor
cmp
test
lods
dec
mov
xor
mov
xor
clc
pop
cltd
rcrb
cmp
xchg
arpl
call
push
in
ret
fwait
outsl
jb
mov
xchg
push
xchg
and
in
xor
add
subb
pop
or
call
sbb
ljmp
popa
clc
ljmp
cmp
pop
inc
push
shll
cmp
xchg
add
in
xchg
scas
or
test
or
fdivp
stos
das
adc
adc
and
pop
sbb
dec
and
fwait
lock
add
or
mov
sbb
adc
adc
es
and
sarb
data16
fs
iret
jnp
push
pop
mov
xlat
es
sub
adc
fdivs
jle
cmp
ffreep
ror
test
mov
adc
jmp
mov
add
xchg
push
lahf
jl
sarb
les
ret
je
add
xor
sub
inc
pop
cmpb
popa
xchg
scas
sub
cli
push
adc
loopne
jnp
push
popa
fucomp
or
mov
test
in
adc
outsb
in
xchg
std
ds
or
aam
adc
fwait
mov
stos
lret
popf
and
subb
and
sub
xor
pusha
jbe
pusha
xor
push
mov
popa
test
loopne
jge
ljmp
dec
pusha
mov
int
aaa
mov
jmp
dec
push
mov
mov
add
icebp
int
mov
push
imul
popa
inc
bound
sti
fisubl
dec
add
add
popf
add
mov
mov
pop
rolb
mov
in
and
sub
xor
lods
mov
or
and
sbb
lea
sbb
pop
mov
pop
add
out
adc
xchg
mov
mov
adcb
mov
push
jmp
leave
rol
hlt
cmp
add
icebp
dec
cmp
movsb
nop
add
inc
sbbl
sub
test
mov
lock
or
adc
shlb
adc
loopne
mov
cmp
subb
xor
add
stos
int
xor
lret
fisubrl
jno
mov
call
popf
insl
lret
enter
out
cmp
lods
mov
js
pop
popa
mov
pop
dec
mov
je
inc
inc
mov
jns
add
mov
mov
call
data16
cltd
lret
pop
fdivrl
cli
push
inc
xchg
xor
dec
mov
outsb
fmuls
jecxz
call
jge
xor
lret
mov
mov
insl
mov
in
cld
arpl
stc
cs
jmp
adc
jns
daa
cmc
jge
ljmp
pusha
jle
hlt
mov
cmp
je
push
add
jae
mov
pop
rclb
jne
popa
repz
xor
dec
dec
add
mov
jnp
icebp
in
mov
xchg
loope
iret
call
cli
subb
adc
popa
or
jae
jl
cmp
std
out
xor
add
cmp
fwait
test
mov
aas
in
mov
xlat
rclb
std
xchg
jge
insl
cmp
pop
adc
mov
mov
popf
jg
aas
sbbb
repz
daa
hlt
shrb
fisubrs
sub
jbe
add
dec
imul
xchg
in
mov
sub
mov
pop
pop
cmp
test
mov
mov
pop
xor
or
pop
dec
mov
and
or
mov
jne
adc
lcall
inc
pop
mov
sbb
push
mov
sbb
sub
mov
cmp
fwait
mov
pop
in
out
loopne
mov
inc
imul
into
imul
pop
sahf
lcall
cmp
jne
dec
mov
or
add
push
and
push
repz
sbb
sbb
ret
sub
jb
add
lcall
push
inc
mov
ret
or
repnz
loopne
stos
mov
add
xchg
cmpsb
bswap
and
pop
aas
xchg
ljmp
je
fisubs
fwait
sarl
xchg
xchg
loopne
stc
repnz
not
add
and
ja
cmp
lret
push
jecxz
sbb
xchg
xor
lods
sub
out
dec
pop
xor
xchg
loop
push
les
ljmp
nop
add
jno
mov
add
jae
lods
pop
push
clc
stos
add
shl
in
dec
sub
xchg
push
aam
xor
xlat
and
sbb
lret
je
push
stos
pop
fsubr
shrb
ret
rcr
jp
add
push
add
ja
push
adc
rcr
addb
les
adc
leave
cs
in
push
add
jp
jl
jecxz
xchg
add
adc
in
js
aaa
aas
add
ret
dec
pop
shlb
std
into
add
mov
cmp
ror
rcrb
pushf
outsl
mov
jo
and
push
adc
dec
shlb
add
pop
lcall
jecxz
add
rcrb
shl
fnstenv
push
rol
sub
adc
add
repz
std
and
gs
pop
lea
nop
fwait
ss
add
and
addr16
aaa
xchg
bound
mov
jbe
cmp
jg
shll
bound
cs
mov
dec
loop
add
sahf
sub
push
add
rolb
icebp
inc
mov
mov
ret
sub
jmp
rcr
ret
sti
push
das
icebp
cmp
sbb
push
jp
stos
in
cld
adc
mov
sub
jecxz
add
es
and
add
imul
nop
enter
jne
mov
mov
fdivrs
cmp
out
inc
mov
iret
jl
shll
add
jecxz
add
lret
sbb
nop
aas
lods
or
mulps
fs
rol
icebp
ljmp
add
popf
aad
shll
sbb
dec
in
scas
loopne
dec
sbb
or
adcl
daa
sub
outsl
jmp
lahf
jg
movsb
or
xchg
mov
out
repnz
dec
add
in
in
cli
adc
adc
cmp
or
ffreep
adc
mov
push
mov
xor
lret
xchg
xor
jmp
pop
xor
mov
mov
sahf
cmp
ss
add
inc
in
dec
add
mov
add
sub
add
sub
mul
or
or
inc
cmpb
negl
inc
movl
xchg
add
mov
pop
cmp
call
sti
pusha
iret
xchg
addl
daa
lcall
push
and
mov
or
jo
cmp
adc
repnz
roll
and
sbb
bound
testl
push
xor
xchg
cwtl
call
add
inc
dec
push
or
xchg
fisttps
roll
out
mov
rol
out
enter
pop
mov
sbb
imul
and
aam
stos
add
or
repz
pop
dec
movsl
dec
mov
xchg
arpl
lods
fiadds
stos
repnz
pop
inc
mov
cmp
cmpl
jo
push
cwtl
addl
sub
cld
adc
mov
xchg
das
push
nopl
mov
mov
or
mov
pop
cltd
jp
mov
cmpsl
inc
imul
cltd
cmp
nop
dec
popa
inc
loop
pmullw
mov
push
in
in
push
mov
divb
iret
jne
add
call
adc
or
sbb
add
jg
push
push
xor
into
orb
add
jns
test
xor
clc
sbb
aam
mov
lods
stos
and
push
std
or
scas
add
sub
lret
sbb
or
or
addb
jb
push
pop
dec
and
andl
das
gs
fnstcw
jns
std
cmc
jecxz
sub
push
mov
notb
adc
adc
adc
adc
cmpsb
pop
pop
call
cmpsl
adc
adcb
xchg
pop
dec
clc
mov
jge
push
repnz
outsl
xor
cli
mov
xchg
sub
int3
loop
scas
cmpsb
mov
pop
sti
test
call
jg
add
sub
pushf
push
add
cmc
or
sbb
sub
push
fwait
jnp
mov
dec
jnp
adc
jno
dec
andb
or
adc
mov
dec
add
fbstp
xchg
inc
ret
loop
add
nop
in
fistpl
test
cltd
out
cmc
es
in
addr16
mov
adc
testb
data16
xlat
loopne
loope
lods
add
cmp
push
inc
or
mov
pushf
add
inc
inc
dec
push
orb
cltd
xchg
add
test
or
mov
cld
mov
test
push
sub
push
movsl
push
mov
or
imul
inc
cmpsb
sub
mov
rcl
divb
add
push
add
and
fidivs
xor
shll
add
in
ljmp
mov
mov
scas
add
insl
into
jle
push
add
fdiv
jae
pop
lret
and
push
stos
xchg
mov
mov
adc
arpl
and
xlat
adc
or
mov
incl
and
aas
pushf
test
xor
movsb
xchg
or
je
bound
add
ja
cld
pop
sub
and
jo
push
testl
repnz
out
dec
sub
popl
xchg
jne
stos
or
cmpsl
add
fmul
and
push
push
pop
dec
mov
nop
dec
lock
push
cmc
loop
xchg
mov
sbb
fidivrl
pop
mov
add
lahf
sub
nop
add
movsb
sub
mov
mov
add
addr16
adc
iret
pusha
imul
dec
push
jnp
repnz
das
mov
mov
add
jb
bound
xor
add
or
dec
outsl
enter
xor
daa
mov
fs
add
jns
mov
pop
push
js
pushf
or
and
paddd
push
mov
hlt
pop
jge
push
or
lods
sub
sahf
sbb
jns
rclb
add
lea
xchg
rol
das
xchg
stos
or
mov
mov
sbb
jo
insb
loopne
pop
pop
sqrtps
in
lds
jp
add
add
sub
jmp
out
inc
add
mov
loop
into
ljmp
in
xchg
add
dec
out
lods
dec
insb
fdivs
loope
push
cwtl
ja
inc
loopne
pop
movb
std
mov
jae
sti
push
adc
int3
fsts
cmp
cmp
sub
sbb
cmp
fldl
clc
cmc
push
lahf
in
cmp
add
aas
je
sbb
sbb
jbe
fidivrs
push
loope
cmpb
shlb
push
in
add
sub
xchg
xchg
je
out
test
and
or
jge
daa
xor
mov
incl
add
iret
and
jnp
pop
pop
xor
add
sub
cmp
cwtl
sti
kmovw
xor
outsl
and
mov
roll
jl
sbb
movsb
or
rcl
lock
mov
adc
cmp
add
movsl
rorb
fsubrs
cmp
fiaddl
ljmp
add
ljmp
jbe
sti
adcl
faddl
or
lds
jno
cmp
mov
mov
cs
ret
in
mov
movsl
mov
repnz
adc
lods
inc
push
rcll
push
lods
inc
or
fnstenv
lcall
test
sbb
loope
shrl
xchg
and
mov
push
push
mov
or
pop
add
push
jp
dec
sbb
jmp
adc
or
add
mov
pop
push
and
adc
mov
lret
jmp
sbb
incl
les
sbb
sahf
cmp
mov
lcallw
lds
push
mov
sbb
mov
jg
add
push
leave
sub
repz
pop
jmp
mov
test
popf
notl
std
mov
fisubs
loop
add
or
cmp
jl
cmp
push
fiaddl
lcall
in
mov
lds
mov
call
jl
push
shrb
pop
popa
ret
shl
jmp
lds
add
add
cld
mov
les
leave
and
push
inc
jecxz
insb
test
stc
addl
add
adc
and
or
orb
adc
and
into
cs
xor
mov
sbb
sbbb
pop
push
into
aad
push
or
ss
repz
incl
out
inc
sar
or
ffree
jmp
idivl
add
mov
jae
aas
mov
sub
and
or
xor
popf
and
adc
leave
fstps
push
mov
pop
mov
pop
ret
push
xchg
in
push
mov
or
add
shlb
push
incl
dec
adc
add
or
jae
add
pushf
mov
sbb
add
push
push
mov
out
add
movzbl
inc
mov
repnz
push
xor
leave
sbb
xchg
mov
push
sahf
sbb
jmp
cmp
stos
inc
or
std
cmpb
xorb
add
or
iret
inc
sub
xchg
adc
sbb
std
int
clc
out
sub
test
gs
cmpl
cli
enter
jne
test
cmc
or
arpl
mov
leave
cmp
imul
test
adc
shr
push
lods
add
add
mov
adc
mov
add
and
mov
shr
or
jmp
ret
adc
cli
xorb
iret
fimuls
xor
sbb
mov
mov
scas
orb
loop
into
es
int3
cli
xchg
mov
push
or
lahf
mov
xor
mov
add
or
in
or
xchg
mov
pop
lahf
lods
cli
inc
add
jo
cmp
enter
sub
sub
filds
or
in
mov
add
rorb
insb
cld
push
lods
sub
or
sbb
push
and
mov
push
jne
sahf
data16
adc
mov
mov
xor
pusha
in
jbe
and
cmp
sbb
lahf
pop
sbb
dec
xchg
adc
cmp
adc
xchg
adc
and
test
and
pop
mov
decl
cmp
fadd
cmpl
pop
xchg
call
cmp
xor
stc
mov
add
push
rolb
jae
push
lahf
in
test
mov
adc
xchg
and
xchg
adc
adc
aas
pop
pop
add
sbbb
sub
mov
mov
outsl
icebp
dec
dec
mov
jns
lea
ficoms
mov
jle
xor
mov
ja
ret
testb
or
in
jl
sub
push
pop
int3
jae
bound
jo
or
and
sbb
out
or
xlat
dec
pop
ss
in
ds
sub
stos
and
call
jle
mov
pop
xor
sub
repnz
mov
mov
push
faddl
cwtl
mov
stos
adc
pop
dec
sbb
fisubrs
hlt
pop
loop
cmc
ret
lods
push
dec
sbb
hlt
push
lds
xchg
and
leave
mov
clc
sbb
ss
addl
add
cmp
mov
mov
rol
jbe
sub
adc
movsb
lods
or
lea
mov
push
jno
lret
das
cmc
jo
xchg
in
and
lcall
sub
push
es
dec
and
gs
les
std
or
sub
rorb
push
push
insl
dec
lds
mov
lods
popf
mov
add
pop
ljmp
stc
or
imul
dec
outsb
add
stos
mov
dec
pop
in
fdivrl
iret
or
movsl
inc
mov
fidivrs
xchg
jb
shlb
movsl
loop
pop
mov
add
mov
call
mov
call
outsb
stos
add
xor
xor
rol
xchg
test
pop
les
or
push
sub
rol
scas
outsb
xchg
pop
sbb
push
dec
rclb
pusha
mov
adc
lods
rclb
ss
mov
scas
int
rolb
mov
das
shl
dec
add
cmp
call
xchg
stc
add
aam
mov
fdivs
xor
stos
xor
sub
pop
mov
add
or
or
and
jmp
clc
call
sub
jns
cltd
cmp
out
push
jle
push
adc
ret
daa
mov
inc
add
pop
in
mov
lds
lds
daa
or
ja
hlt
jp
add
mov
popf
sbb
adc
repnz
adc
add
jp
add
pop
je
push
andb
test
push
daa
fbstp
ja
icebp
sbb
jne
cwtl
mov
sti
jecxz
dec
pushf
add
movsl
push
dec
ja
jecxz,pn
js
test
cmp
test
outsl
test
push
repz
jecxz
or
pop
icebp
or
les
fdivrs
inc
test
mov
pop
in
inc
bound
loopne
xorb
enter
adc
sub
or
mov
and
lret
cmp
add
fwait
arpl
pop
xchg
cwtl
pop
inc
add
pop
pusha
popa
pop
mov
and
lods
out
push
inc
mov
dec
cwtl
cmpl
cmp
in
fbld
cmpsb
pusha
cmp
or
loopne
pop
dec
add
frstor
xchg
lea
pop
push
outsl
or
gs
test
or
popa
out
shl
icebp
sub
repz
jno
push
push
pop
mov
or
add
loopne
push
pusha
das
add
sti
push
sbb
pop
mov
add
xlat
dec
sub
into
fs
mov
sahf
andl
imul
xor
mov
and
jae
shlb
xor
mov
adc
sub
cs
adc
mov
into
shll
pushf
nop
mov
add
es
ss
pop
sub
add
adc
lds
mov
jae
enter
mov
and
xchg
dec
adc
add
icebp
jae
cltd
fmull
and
cmpsb
outsl
add
mov
lahf
fcoms
push
addb
push
jmp
mov
add
or
test
add
stc
outsl
add
fstl
outsb
pop
sub
add
or
loope
mov
fdivs
dec
add
sub
push
ds
dec
push
sub
stos
push
adc
mov
imul
adc
push
addl
dec
jg
dec
inc
mov
push
or
mov
mov
scas
imul
pop
mov
cmc
mov
loopne
mov
pop
lods
and
mov
xor
add
sbb
push
sub
or
shlb
push
fidivrs
jns
add
xchg
inc
push
leave
bound
or
rorl
scas
xlat
and
push
cmp
clc
mov
or
sub
sahf
push
mov
mov
mov
in
and
and
stos
fistpl
mov
xchg
mov
sub
jnp
sbb
push
pop
mov
hlt
popf
std
mov
adc
in
movq
int
cli
outsl
pop
adc
pop
add
int
fidivrl
push
in
mov
sbb
mov
andb
sbb
adc
call
push
xchg
rdtsc
enter
add
out
cmp
shl
push
add
inc
dec
mov
movsl
add
mov
pop
push
push
cwtl
pop
popa
nop
push
sub
xor
adc
mov
and
scas
adc
loopne
pop
add
sbb
dec
int
push
aam
in
mov
insb
lods
nop
inc
xor
and
push
hlt
roll
add
mov
lock
inc
push
push
sbb
fmull
aaa
xor
jecxz
ljmp
sahf
cmp
fisubs
js
sbb
sub
dec
xor
fisubrs
fwait
inc
outsl
int
cmp
imul
xchg
call
pop
in
mov
cmp
mov
fmull
mov
push
pop
dec
mov
fstps
cmpsl
mov
mov
dec
push
mov
pop
xor
sub
pop
rcll
lea
pusha
mov
or
pop
jo
xchg
pop
testl
xchg
mov
fsubs
shll
jo
cs
fadds
mov
loope
ljmp
shll
jge
push
ss
inc
ljmp
adc
adc
dec
out
loopne
mov
pusha
mov
inc
roll
push
jo
hlt
outsl
std
add
jae
adc
popa
mov
movsb
and
push
sbb
out
mov
lds
push
and
push
adc
pop
pop
sub
dec
pop
loop
inc
popf
les
jg
cmp
mov
push
sub
mov
lds
dec
test
cmp
imul
test
and
movsl
adc
lods
inc
mov
test
fdiv
mov
stc
popa
adc
add
mov
inc
adc
sub
xchg
mov
pop
and
mov
inc
fsub
jo
daa
jmp
pusha
jnp
adc
ret
inc
add
pusha
xor
or
mov
add
mov
cs
push
dec
out
loop
mov
enter
xchg
pop
sub
mov
ficoml
sub
aaa
gs
jno
pusha
rcr
cmp
cs
adc
xchg
test
sti
adc
clc
jp
add
sahf
aas
test
stos
rclb
pop
sub
popf
popa
adc
cmp
lcall
inc
mov
popf
das
std
xor
gs
jmp
test
push
bound
movsl
sbb
adc
mov
mov
cmp
xor
lea
popf
pop
sbb
push
rcr
jb
out
add
lcall
lret
dec
pop
testb
aaa
and
nop
pop
imul
cld
pusha
addb
lcall
incb
xchg
arpl
std
lock
flds
cld
mov
add
cmp
icebp
cmp
xchg
adc
or
rcrl
mov
adc
add
dec
ret
cmp
lcall
roll
add
hlt
cltd
jnp
adc
xor
icebp
inc
call
je
decb
xor
and
mov
adc
movsb
cs
pop
mov
add
lea
inc
sbb
in
leave
nop
insb
pop
xchg
sub
adc
push
mov
imul
loope
jnp
stos
daa
ja
mov
and
mov
stos
testb
add
or
shrb
dec
or
push
pop
pop
mov
mov
dec
js
dec
inc
jne
mov
sub
jle
and
add
mov
mov
jno
xor
push
je
jmp
les
add
aaa
call
pushf
dec
and
xor
das
movsb
jb
mov
and
add
jbe
pusha
sub
jmp
or
pop
pop
and
sbbl
repnz
pop
outsl
pop
add
or
hlt
out
popl
xor
popf
push
or
sub
mov
sbb
mov
jl
test
sbb
cmp
push
xchg
push
in
xchg
out
or
pop
nop
dec
sub
push
shlb
hlt
cmpb
xor
pop
dec
push
mov
push
aaa
inc
pop
jmp
add
repz
mov
add
mov
lret
nop
inc
cmp
jbe
mov
js
clc
pop
ljmp
arpl
nop
clc
fildl
inc
adc
jo
mov
pop
adc
mov
pop
xor
or
mov
jmp
ret
daa
mov
and
mov
inc
jp
adc
sahf
call
jae
fadd
or
lahf
add
shll
shll
sub
nop
lea
sbb
push
push
sarb
aam
mov
sti
in
sub
and
or
xor
dec
add
and
or
arpl
sub
add
mov
dec
call
stos
pop
mov
icebp
test
inc
fdivrp
sbb
cmpb
xchg
mov
lret
popa
inc
bound
out
dec
pxor
mov
cld
xchg
xchg
sbb
and
mov
test
add
jge
push
addb
loop
shll
xchg
pusha
mov
xchg
sbb
or
jmp
jnp
mov
inc
jns
aaa
add
xchg
jne
or
add
and
test
push
push
rolb
and
add
dec
xlat
repnz
in
mov
pop
or
arpl
xchg
mov
adc
test
xchg
movsl
jg
adc
ja
add
test
mov
sbb
lcall
xor
lea
push
mov
adc
out
pop
aam
mov
jle
sbbb
mov
xlat
mov
jns
icebp
push
sub
jmp
loope
les
xlat
mov
sbb
adc
leave
add
pop
push
xchg
dec
loop
pop
push
mov
out
ss
sub
push
sub
and
add
sbb
push
int
jecxz
push
loopne
xor
add
and
dec
popa
iret
pop
add
mov
sub
pop
loopne
aaa
lret
test
adc
outsl
push
add
pop
push
dec
sahf
mov
dec
pop
sub
jmp
dec
daa
adc
jne
sbb
add
jp
sbb
adc
out
add
sarb
fsubrl
jle
ret
adc
xchg
push
mov
mov
mul
outsl
pop
add
xor
hlt
sbb
daa
pop
in
lret
add
arpl
xlat
xchg
push
sub
or
adc
sbbl
jp
leave
push
aaa
lea
scas
pop
mov
imul
scas
std
mov
sti
xchg
dec
adc
call
test
popf
jno
and
das
xchg
sub
jg
mov
fbld
ret
clc
push
mov
mov
pusha
mov
mov
mov
push
jp
adc
sub
pop
and
pushf
pop
lret
leave
loope
sti
mov
adc
mov
lock
add
push
adc
adc
jne
lar
das
and
xchg
imul
arpl
mov
add
mov
fidivrl
adcb
push
fistpll
insl
jae
xchg
outsb
push
add
xchg
sbb
iret
xor
dec
mov
cld
ret
pop
aaa
mov
inc
sbb
mov
out
add
cltd
icebp
push
out
mov
lahf
movsl
pop
iret
adc
in
or
cs
adc
mov
in
jnp
dec
add
xchg
add
in
fistl
inc
sub
push
pop
adc
xor
dec
push
mov
mov
mov
jge
add
loop
jl
movsb
imul
lea
stc
test
add
or
sbb
mov
pop
sbb
mov
mov
push
adc
iret
sub
and
xor
popa
loope
sahf
inc
sbb
and
mov
pop
pop
xor
in
aad
or
adc
popf
gs
mov
mov
or
sub
popa
and
pop
andb
cld
cmp
cmp
pop
add
or
out
dec
fwait
mov
fs
and
cmp
xchg
add
loop
cmpsb
shll
adc
mov
cmpsl
adc
hlt
aaa
roll
pusha
xor
jbe
orl
out
inc
addr16
pop
push
test
jmp
jnp
jo
imul
mov
insb
aad
sub
jl
test
push
mov
mov
push
outsl
push
add
mov
sub
pop
fs
adc
adc
or
add
insl
mov
inc
sub
push
pop
pushf
mov
cmpb
or
mov
inc
adc
scas
aas
ret
dec
fnstcw
xchg
inc
pop
add
fsubs
pop
sub
xor
push
xor
adc
jnp
sbb
daa
pop
push
mov
push
xchg
or
pop
out
imul
pop
pop
and
or
jmp
movsl
mov
mov
mov
pop
sub
sub
xor
nop
lret
or
sub
and
cmpsb
jae
fsubr
sbb
mov
jg
in
pusha
inc
paddsb
mov
or
pushf
push
adc
xchg
fdivp
and
add
dec
jl
daa
nop
push
inc
jne
stos
jg
push
inc
mov
rcll
sarb
pop
mov
sub
sahf
pop
pop
movsb
scas
popa
sti
cwtl
mov
dec
cmc
xor
test
and
mov
adc
in
gs
icebp
jno
mov
hlt
daa
push
dec
sbb
adc
rorb
jns
ss
inc
mov
xor
adc
or
cmp
pop
in
add
nop
inc
movsl
add
jge
int
adcl
or
call
dec
inc
pop
outsl
dec
pusha
pop
lcall
cmpsb
push
dec
mov
inc
popa
jo
stos
ficoms
add
negb
imul
and
inc
pop
and
add
pusha
fimuls
add
sub
lds
add
sub
xchg
push
insl
sub
cltd
pop
or
imul
adc
bnd
adc
dec
mov
aaa
add
test
or
inc
out
mov
rclb
xor
inc
popf
leave
adc
jae
call
xchg
and
enter
sub
add
jecxz
inc
lock
xchg
adc
push
daa
pop
mov
testb
lahf
int
push
jo
add
xchg
je
mov
ss
pop
fdivrl
or
and
sub
jmp
and
fstpt
arpl
mov
and
xor
cwtl
and
mov
iret
mov
push
movsl
sbb
mov
loop
fcmovbe
stos
adc
inc
pop
fsubrl
movsb
cmp
mov
popf
xor
movntps
dec
and
jae
insl
pop
mov
xchg
sbb
test
pop
int
into
jae
cmp
push
mov
push
mov
add
lods
adc
cld
mov
pop
shrb
leave
pop
add
dec
and
divl
call
push
loopne
sti
adc
fildll
add
pop
xchg
cs
pop
sub
sub
inc
and
xchg
cwtl
cmc
pusha
mov
pop
fcompl
lods
jno
mov
jae
daa
sti
ret
adc
jnp
sub
int3
loop
sub
mov
and
fstl
or
jmp
out
outsb
jbe
sahf
mov
and
popf
shll
pop
int
add
mov
xchg
lret
mov
push
sub
icebp
pusha
cwtl
mov
and
icebp
mov
pop
shrl
sti
cmp
ds
pop
mov
dec
lds
dec
xchg
sbb
sub
push
push
and
movsl
inc
daa
pop
loop
and
and
mov
xchg
or
movl
mov
push
mov
inc
mov
sub
jl
push
fildll
add
inc
test
adc
insl
add
into
mov
jg
cmp
add
cmp
push
xor
push
shl
mov
add
out
gs
mov
xchg
add
ret
cmp
push
sarb
or
cwtl
sbb
add
bound
sub
fnsave
fcoms
jg
jb
mov
push
popf
fsubrs
test
mov
pop
scas
pop
add
xor
inc
mov
pop
pop
repz
icebp
pop
das
je
mov
fistps
xchg
dec
inc
in
jns
scas
jns
movsl
faddl
push
lahf
mov
fistpll
jno
xchg
mov
int3
shl
fs
adc
sahf
pop
xchg
push
test
je
mov
in
fwait
mov
add
frstor
lds
lsl
fildl
jne
cmpsl
adc
icebp
testl
jae
pop
cmp
stos
sahf
fnstenv
lahf
fcoml
jecxz
andb
xchg
test
xlat
hlt
ss
add
imul
dec
mov
cwtl
push
or
mov
mov
mov
loop
rcrl
push
aad
add
dec
push
shrb
adc
pop
jmp
loope
and
adc
xlat
adc
cmovs
add
xchg
jmp
test
inc
add
add
sbb
mov
xlat
daa
loope
cmp
sbb
icebp
dec
das
leave
pushf
jo
xlat
dec
jne
int
negb
fmuls
xchg
dec
lods
bound
inc
pop
mov
cmpsb
dec
fucom
imul
mov
insb
ljmp
addr16
push
add
xchg
add
adc
pop
xchg
mov
sbbl
push
xchg
xor
and
notl
push
mov
imul
aam
xor
gs
and
dec
adc
outsb
mov
push
jecxz
dec
push
inc
movsl
jle
faddl
push
loopne
data16
and
cwtl
icebp
adc
repnz
pop
push
mov
popa
pushf
faddl
stos
fsubl
lcall
xchg
or
pop
imul
xchg
adc
jb
mov
sub
xchg
mov
loopne
push
pop
add
test
sub
das
sti
popa
jnp
xor
and
bound
mov
mov
mov
cmp
mov
add
loopne
ja
cmp
daa
adc
jno
add
fdiv
add
or
push
lock
insl
rol
pop
cmp
loopne
icebp
xor
pusha
mov
jb
mov
add
insb
xchg
scas
cmp
sbbb
ret
stos
add
aas
and
mov
cltd
dec
jle
in
iret
add
adc
rorb
ja
test
xor
mov
add
adc
adc
movsb
sub
mov
imul
pop
push
xchg
in
add
ljmp
jbe
out
clc
sbb
ja
mov
sarl
loopne
or
xorb
jns
movsl
fistpl
inc
add
insl
test
dec
mov
sbbl
jno
aas
or
push
jl
inc
sbb
and
in
mov
mov
test
or
jo
xchg
sbb
adc
loop
shl
daa
loopne
pushf
pop
add
ret
xchg
addb
out
add
pop
mov
rcrb
jae
cmp
lea
push
jge
psubsb
subl
imul
js
mov
cli
pushf
add
and
jne
or
test
sbb
iret
mov
enter
add
faddp
jne
dec
jb
add
outsl
jbe
mov
sbb
xchg
call
cmp
test
pop
aad
mov
mov
loope
mov
and
add
mov
push
rclb
lds
icebp
sub
cld
add
dec
sub
cmpsl
pop
data16
mov
xor
pusha
mov
sbbl
mov
out
add
mov
aaa
dec
sub
test
call
xlat
push
xor
insb
test
mov
and
or
daa
add
xor
aam
adc
sbb
push
lods
popf
je
movsl
js
mov
lock
fcmovnb
add
es
xchg
adc
add
push
orb
popa
mov
shr
pop
sarl
cs
xchg
shlb
push
mov
lods
fistps
xchg
xchg
stc
imul
xchg
mov
push
les
nop
mov
addl
mov
and
dec
and
mov
push
inc
push
fstl
and
push
loope
cld
int3
lret
mov
fsqrt
sub
sbb
adc
test
jecxz
ror
push
adc
dec
adc
cmp
push
xchg
lret
push
mov
add
xor
mov
push
push
inc
pop
das
and
sub
xchg
adc
lods
add
lret
xor
dec
rorl
and
repnz
or
push
into
cltd
jecxz
push
clc
push
adc
ficoms
pusha
adc
push
sbb
ret
popa
out
es
ror
add
jno
fisttpll
enter
jo
or
or
mov
pop
xor
lock
push
inc
loop
dec
xor
mov
push
mov
adc
mov
sub
imul
dec
loop
sub
mov
popf
jmp
xchg
add
mov
test
pop
pusha
sti
cmp
leave
inc
popa
push
bound
lea
push
lcall
xchg
outsl
adc
clc
push
mov
imul
testb
adc
cld
mov
std
movsl
inc
adc
dec
push
aas
ret
or
addr16
rorl
lcall
fs
mov
iret
arpl
cld
das
pop
popf
hlt
dec
imul
aaa
add
sub
outsb
mov
add
adc
mov
xchg
in
inc
scas
je
add
and
add
call
xchg
ds
mov
int
pop
inc
and
push
fdivs
lret
aaa
add
add
and
lahf
mov
add
cmp
mov
test
pusha
inc
sbb
xchg
adc
add
cmpsb
das
add
mov
mov
in
negb
in
das
sub
shll
mov
cs
sbb
in
dec
fisttpl
add
pop
jle
jg
mov
sbb
push
mov
add
mov
addr16
ja
std
add
xor
mov
add
pop
jecxz
push
and
pop
xchg
out
mov
fildl
jae
loopne
popf
dec
adc
cmpl
clc
and
add
and
dec
mov
add
std
subb
aam
push
adcb
pop
xchg
mov
es
ret
or
dec
popa
sub
and
pop
rcl
sbb
popa
test
or
pusha
add
pop
push
repnz
or
pop
jne
push
frstor
roll
push
push
out
outsb
dec
in
aaa
add
out
xchg
mov
cwtl
ds
into
dec
outsb
and
mov
pop
mov
mov
aad
mov
sarb
jg
in
push
push
jo
xchg
add
sti
jae
cmp
std
sub
jne
push
pop
addl
outsb
arpl
out
pop
mov
test
shll
mov
mov
cmp
sbb
add
orb
jbe
inc
lock
push
xor
cmp
test
pop
mov
jnp
ja
jbe
xor
push
pop
add
add
popa
xor
mov
cwtl
add
xor
lret
lds
jno,pn
push
xor
push
sub
mov
xchg
add
mov
shr
adc
sbb
jge
fldenv
ds
xor
popa
mov
dec
push
fstpt
cmc
or
fdivrs
cmpsb
jmp
test
outsb
jne
call
adcb
pop
mov
jmp
xor
pop
sbb
xor
adc
lods
inc
out
int
andl
add
shll
and
inc
repnz
dec
mov
xor
or
sbb
mov
movsl
adc
dec
loop
loop,pt
add
pop
mov
fstpt
add
mov
push
dec
xchg
jbe
loope
and
pop
dec
pusha
clc
scas
xorb
pop
adc
mov
xchg
dec
nop
ja
dec
es
pop
mov
popa
sub
nop
xor
fcomps
mov
cmovl
sti
sar
push
sarl
mov
add
dec
pushf
js
push
sbb
push
adc
add
mov
shrl
xchg
mov
or
jns,pt
pusha
or
jl
jns
mov
and
pop
dec
jmp
in
loopne
jno
loop
lahf
rolb
movb
pop
add
sbb
pop
xchg
popf
in
inc
dec
pop
and
scas
negb
nop
mov
mov
call
mov
and
cmp
ja
or
mov
xchg
and
pushf
sub
cmp
fldl
cmpsb
or
movsl
clc
push
mov
add
mov
lock
lcall
sub
sti
pop
xchg
outsb
mov
jecxz
ds
cmp
mov
sub
outsl
xchg
cmpsb
jns
and
in
sbb
outsl
dec
dec
cmc
cmp
xchg
mov
jmp
mov
add
add
fnsave
negb
fstl
cmc
mov
mov
hlt
add
add
mov
mov
into
push
das
gs
push
xchg
imul
or
mov
adcl
mov
fists
or
pop
das
clc
sbb
push
inc
pusha
mov
mov
jnp
dec
sub
cmp
mov
jo
popf
in
test
icebp
add
sub
inc
mov
popf
and
out
xchg
push
popa
fwait
test
adc
xchg
sub
mov
popa
mov
test
pop
ret
pop
push
pop
jns
in
add
femms
mov
push
lds
push
pop
addl
jno
dec
or
popa
xchg
xor
fisubrs
in
je
jmp
jl
xchg
xchg
or
aaa
mov
xor
lock
adc
aad
repz
pop
mov
jg
lcall
sbb
lret
push
dec
cmp
inc
cmp
js
mov
push
das
add
push
fisttps
add
xchg
inc
ljmp
cld
or
mov
adc
rcrl
mov
and
xchg
jmp
or
iret
add
test
stos
jle
out
mov
in
xor
test
push
adc
loope
popa
jnp
push
cld
roll
xchg
cmpsb
dec
fdivrs
push
pop
nop
jb
dec
fsubr
nop
jp
dec
bound
xorb
push
xor
repz
popa
nop
out
loopne
mov
int
mov
pop
dec
hlt
or
mov
lcall
dec
hlt
cmp
call
dec
mov
popa
push
in
pop
loop
faddl
mov
popf
and
cmp
adc
lock
test
and
test
loope
mov
adc
in
out
adc
mov
test
pop
mov
xchg
daa
test
add
xchg
shlb
mov
data16
loopne
xchg
push
xchg
aad
cmpsl
js
xchg
jb
in
add
mov
les
sbb
fldl2t
imul
mov
insb
adc
sar
repnz
ds
jns
and
jnp
pop
push
add
hlt
mov
mov
sbb
dec
repnz
dec
lds
add
mov
popa
xchg
inc
mov
jb
push
mov
cmp
pop
add
mov
sbb
xchg
sub
push
xchg
inc
dec
lahf
lret
call
lds
pop
xchg
in
or
cld
call
and
xchg
sbb
push
mov
pop
out
addb
push
out
int
or
push
mov
or
mov
push
repz
lcall
pop
push
push
mov
and
pop
aad
add
idivl
icebp
jmp
pop
mov
pusha
jp
mov
add
mov
add
in
pop
stos
cmp
movsl
pop
in
mov
icebp
leave
imul
cmp
add
loop
xchg
pop
fsubrl
pop
cli
mov
lret
jp
out
in
add
das
inc
xchg
xor
lcall
inc
push
push
push
inc
mov
cmp
or
das
jns
or
and
push
das
and
add
call
jp
jg
xor
add
sbb
pusha
and
mov
cli
outsb
xchg
flds
mov
mov
inc
call
sub
imul
inc
or
add
mov
mov
or
shl
test
mov
in
rcll
ja
in
push
cld
cld
add
add
sub
mov
pop
add
js
jmp
add
imul
add
mov
xorb
pop
xchg
mov
push
or
or
mov
sub
dec
rorl
gs
push
jg
push
push
cltd
add
dec
arpl
adc
subl
popa
aam
das
pop
cmp
or
fsub
popa
xor
dec
mov
mov
movsl
adc
mov
lock
imul
inc
pop
adc
inc
or
and
mov
cmp
js
push
mov
sbb
cmp
mov
inc
shl
sarl
add
inc
sbb
xchg
pop
sbbl
lock
loopne
mov
std
movsl
add
lds
mov
push
push
out
pop
cld
add
or
adc
ja
adc
ljmp
aad
add
sarb
inc
nop
popa
test
dec
clc
fistl
xchg
pop
sbb
push
mov
pop
add
sub
push
sbb
int3
sub
sbb
rorl
adc
mov
std
into
mov
add
aas
bound
xchg
sub
mov
neg
mov
jg
inc
test
lods
jle
add
addl
add
push
fimuls
add
shl
mov
jnp
fildll
and
mov
cmp
or
fidivs
push
loope
aaa
loopne
cmpsl
divb
jnp
adc
mov
or
dec
cmpb
fstl
ljmp
inc
adc
fidivrl
insb
jp
out
popa
imul
ljmp
jle
push
rcr
inc
fnstenv
clc
pusha
push
mov
js
add
repnz
inc
out
xor
mov
loopne
cmpsl
cs
mov
cmp
call
shrl
pop
add
dec
cmc
add
or
mov
mov
je
inc
push
jg
std
jae
insl
lret
js
push
cmp
push
xchg
mov
adc
mov
into
pop
xor
sbb
fnstsw
add
out
pop
add
push
and
loop
testl
jp
or
sub
pushf
xchg
mov
jmp
xor
jae
jo
loop
pop
or
xor
mov
pusha
and
adc
fiadds
push
arpl
add
stc
out
test
xchg
inc
add
enter
dec
in
aad
jae
add
mov
cltd
xchg
pop
jmp
lds
jmp
inc
sbb
popf
add
pop
pop
rcl
mov
popa
mov
shlb
sub
jge
mov
sbb
pop
xor
loope
inc
in
call
add
adc
push
dec
arpl
lret
idivl
pop
and
push
aam
stc
xchg
mov
or
dec
negb
outsl
les
inc
dec
test
xchg
ss
test
or
aaa
je
and
mov
sub
nop
fnstenv
daa
fdivr
add
and
pop
mov
xchg
add
sbb
dec
jl
mov
add
lods
popf
test
add
outsb
rcl
clc
dec
fisubl
or
movsb
jbe
or
sbb
add
stc
popa
repnz
add
dec
in
pusha
jne
push
loope
call
and
repz
cmpsb
addl
mov
or
add
inc
mov
pop
xchg
sbb
aaa
sub
add
arpl
mov
inc
pop
lods
adc
inc
add
push
mov
push
std
sub
jo
xlat
push
inc
test
loope
xor
xchg
sub
shlb
aad
sub
lret
addl
call
cmp
add
clc
adc
int
pop
dec
jmp
add
aam
xchg
pop
fidivs
in
add
pop
or
popf
xor
xchg
pop
loop
lret
xor
or
dec
jle
or
rol
mov
jbe
pop
fnsave
sub
loope
xchg
repnz
ljmp
test
dec
dec
or
adc
mov
inc
mov
out
sti
xor
push
mov
ret
dec
addr16
jmp
xor
bnd
fmull
lds
aad
push
add
fwait
sbb
mov
rcl
cmp
jno
push
imul
das
lods
stc
jl
inc
scas
cs
test
in
pop
add
popf
or
mov
popf
or
push
cmp
pop
cmp
scas
aam
mov
orb
sti
lds
adc
stos
aaa
nopl
add
sub
fs
pop
popf
stc
pop
adc
mov
cltd
add
pop
hlt
sbb
faddl
dec
sbbb
negb
pusha
and
push
movsl
int
inc
pop
mov
stos
xchg
push
add
pop
add
sarb
idiv
addr16
lds
outsb
call
xchg
cmp
enter
push
adc
push
ds
add
je
fidivrl
jns
dec
adc
movsl
or
push
xor
or
inc
daa
pop
stos
loopne
shll
in
cmp
pop
or
cwtl
leave
mov
mov
lahf
iret
stos
pusha
push
jge
xlat
dec
add
push
insl
xor
addr16
test
bound
loopne
push
jo
add
lret
and
sub
cmpsl
int3
mov
xor
cmp
stos
mov
mov
pop
sbb
aaa
gs
ja
test
and
sbb
add
add
outsb
out
call
shl
xchg
add
test
jmp
push
fcmovnu
pop
in
cmp
fbstp
aam
in
add
popf
xchg
xor
js
push
repnz
cld
sub
jp
sub
mov
dec
mov
push
repz
xchg
jge
jnp
fs
lahf
and
add
adc
pop
mov
sbb
aas
cmp
xor
scas
lea
call
nop
nop
loopne
sub
push
call
scas
pop
sbb
mov
mov
rcll
sar
mov
mov
in
adc
add
lock
mov
mov
cmp
mov
cmp
mov
push
add
mov
nop
call
shr
inc
incb
jns
sub
adc
arpl
lock
push
and
into
fidivrs
fcompl
jecxz
imul
jge
xor
mov
cmpsl
dec
mov
into
jl
xchg
dec
idivb
push
mov
call
scas
mov
sub
imul
addb
popf
or
lods
and
cmpsb
mov
inc
pop
lahf
add
addr16
or
push
mov
arpl
outsl
or
mov
je
enter
mov
push
xorb
dec
scas
mov
sub
pop
adc
test
shll
add
add
cmpl
fisttps
jno
push
ljmp
movsb
dec
icebp
int
jo
daa
popf
adc
xchg
mov
out
sub
xbegin
dec
fs
inc
push
fnstsw
out
push
daa
cmp
mov
repnz
pop
pop
in
movsl
insl
call
rcrb
cwtl
adc
outsb
ljmp
movsl
leave
sub
cmpsb
cmpl
imul
xchg
mov
shrl
push
dec
xor
jbe
outsl
jne
pop
dec
mov
add
stc
out
or
jns
jae
jno
and
jmp
repz
xor
pop
ret
roll
je
leave
cmp
mov
pop
sbb
lds
dec
fsubl
push
jbe
sbb
inc
outsl
les
add
je
sub
or
rcrb
mov
xor
je
ja
push
imull
mov
lcall
mov
movsl
cli
rcll
movb
inc
scas
in
scas
lret
test
and
jmp
mov
jne
or
sbb
push
in
sub
jnp
movsl
sbb
mov
xchg
jb
mov
mov
adc
notb
fisubl
push
repz
out
adc
ja
movsb
pop
push
mulb
cld
mov
or
sbb
xlat
out
addl
cmpsl
add
dec
icebp
add
jp
int3
pop
inc
push
sub
sbb
mov
mov
out
mov
sub
jo
insl
ret
dec
pop
mov
sbbb
or
fs
ljmp
or
ss
sub
pushf
mov
cli
testb
hlt
push
leave
jmp
lock
mov
dec
push
push
fisttpl
movl
mov
push
mov
or
aaa
rolb
adc
mov
cld
cmp
dec
mov
jne
outsb
sbb
ss
mov
mov
sbbb
fiaddl
cmp
add
loope
shrb
jno
cmp
mov
repnz
xchg
xchg
movsl
inc
pop
fucomip
cltd
sub
adc
mov
jecxz
jmp
pushf
decl
inc
cmove
dec
mov
inc
daa
pop
and
fnsave
in
mov
imul
push
jnp
cmpsb
sbb
push
push
and
dec
push
sbb
test
jns
addb
push
scas
sbb
and
test
sti
popf
push
cmp
xchg
out
and
jmp
jp
push
jmp
movb
inc
xchg
xor
jbe
pop
sbb
add
pop
add
push
pop
pop
je
add
jg
jo
iret
dec
mov
outsl
ds
adc
dec
cmc
pop
sub
sub
mov
stos
lock
lea
cmpsb
mov
push
stc
leave
adc
js
pop
inc
mov
out
cli
sahf
dec
dec
add
xchg
fmull
add
js
ss
rcrl
add
lret
mov
xor
aaa
clc
add
dec
shll
dec
jmp
lret
mov
mov
adc
mov
inc
add
or
pop
xor
cld
xchg
xchg
push
jmp
fadds
pusha
cmp
jecxz
add
and
pusha
push
push
iret
icebp
dec
repz
inc
or
mov
iret
lret
mov
or
hlt
mov
dec
push
outsb
jbe
cltd
push
ret
lods
sub
mov
insl
movl
addr16
and
inc
lahf
inc
adc
fmulp
hlt
add
jo
push
mov
add
pop
stos
data16
insl
push
dec
mov
pop
cmpsb
cld
popf
loop
out
or
filds
adc
sbb
ljmp
pop
inc
inc
iret
lret
je
xchg
das
add
or
fsubl
out
mov
fs
movsb
out
out
and
fs
pusha
hlt
fldl
dec
mov
imul
icebp
and
data16
cmpsb
into
icebp
dec
popf
int3
scas
lea
mov
mov
inc
sbb
pop
push
insl
pop
sbb
out
add
stc
xorb
enter
in
std
gs
push
fildl
dec
cmp
test
cli
popa
enter
cmp
call
mov
jb
pop
xor
sub
mov
test
inc
or
imul
or
negl
pop
dec
cld
int3
jle
add
popl
mov
les
add
iret
inc
xchg
sub
cmc
cmc
mov
test
int3
cmpb
cwtl
inc
imulb
cmp
or
and
notb
jle
pop
sbb
js
xor
je
inc
pop
add
adc
and
or
push
insl
jno
adc
pop
sub
mov
mov
call
daa
xchg
pop
jecxz
rclb
mov
jge
int
dec
xor
lea
mov
mov
and
sbb
mov
cmp
dec
or
pop
faddl
pop
sub
dec
xor
pop
adc
push
aas
jnp
add
adc
rorl
int3
push
inc
notl
and
test
arpl
cltd
jmp
cwtl
or
push
adc
inc
testb
sbb
sub
add
sbb
lock
push
and
inc
or
lea
jp
pop
call
ja
or
cmp
push
jno
inc
gs
push
in
into
add
repnz
push
call
xchg
out
add
sub
adc
adc
xor
stos
xchg
and
mov
es
push
sub
dec
inc
pop
pop
bound
fsubrp
sbb
jp
add
sbbl
sbb
xchg
sub
jno
ret
pusha
cli
mov
xchg
jo
jl
insb
in
push
sub
mov
js
mov
mov
arpl
jecxz
fdivs
fnstsw
ljmp
les
call
or
mov
adc
pop
rolb
mov
popf
and
cmp
inc
lahf
pop
mov
mov
jns
mov
xchg
adc
mov
mov
ficompl
imul
leave
add
and
jmp
jno
lds
sub
mov
jle
lds
mov
sbb
enter
popf
push
adc
int
sub
add
mov
pop
pop
nop
xchg
loop
loopne
lea
xor
xor
cmpsb
dec
pop
push
nop
or
pop
test
mov
sub
cld
int
sub
adcl
push
sbb
push
inc
out
rcll
idivl
add
cli
adc
in
lahf
adc
push
movsl
pop
push
push
sbb
mov
popf
inc
push
lods
mov
imul
fistps
inc
sbb
and
rorl
nop
ljmp
cli
leave
pop
popa
dec
fcoms
popa
repnz
mov
adc
mov
inc
push
mov
mov
jg
movsb
inc
mov
js
and
sarl
sub
mov
adc
imul
dec
adc
inc
out
stc
lods
add
loope
push
pop
sarl
in
outsl
bound
pop
pop
fs
outsb
sbb
cmp
jnp
js
xlat
adc
idivb
idivl
je
nop
mov
scas
add
stos
dec
dec
leave
out
or
fmull
dec
push
int
out
call
cmp
and
idivb
mov
add
icebp
xor
pop
lret
push
cwtl
aas
sbb
lcall
sub
loop
cmc
adc
lods
xchg
pop
pop
testb
into
pop
mov
in
xchg
inc
adc
mov
jae
mov
mov
inc
stc
mov
imull
push
or
not
int3
pop
add
lret
pop
popf
mov
xor
push
popf
call
rcl
idiv
xor
fsubrl
pusha
and
xor
sub
xorb
fucompp
xchg
in
add
pusha
inc
std
and
test
adc
mov
mov
mov
mov
mov
cli
pop
adc
outsb
icebp
or
xchg
movsb
cld
or
ds
jg
pop
and
xchg
sub
and
rorb
inc
and
or
test
mov
mov
std
cs
negl
adc
imul
ja
movsb
dec
inc
fiadds
mov
adc
cmp
and
jae
and
xor
dec
add
outsb
loop
inc
lret
pop
xor
sarb
div
jle
fiaddl
push
pop
xor
sub
fstl
das
and
mov
in
mov
les
xchg
xchg
push
mov
scas
add
fisubrs
add
jbe
mov
push
pop
lcall
xchg
and
js
icebp
sbb
bound
cs
mov
xchg
sbb
xor
repnz
mov
loop
comiss
scas
add
inc
mov
addr16
or
add
adc
fucomi
pop
fimull
lret
aas
sub
sub
sbb
shlb
popf
cmp
leave
leave
add
cmp
ret
call
pusha
out
nop
cwtl
loop
stc
or
and
addl
jno
gs
push
dec
cmc
cmp
sub
jo
lea
popf
xchg
sbb
and
adc
inc
rorl
test
xchg
test
inc
sbb
stos
js
gs
cmpl
mov
cmp
adc
mov
push
fcmovnb
sti
jne
push
pop
jle
or
and
pop
xchg
pop
std
sub
pop
and
shlb
imul
scas
pusha
xor
jnp
add
cmp
xchg
jg
cmp
dec
das
fmull
orb
add
adc
fwait
adc
mov
stc
adc
enter
dec
push
adc
and
xchg
sub
add
mov
push
hlt
xchg
adc
ret
jge
xlat
loope
popf
movsl
leave
adc
mov
mov
mov
adc
mov
lods
sti
pop
in
cmp
push
push
roll
movsl
jne
inc
hlt
inc
pop
mov
xor
ss
in
fnstenv
add
dec
xor
lret
loopne
dec
andb
cmp
in
adc
sub
xchg
stc
inc
and
jne
xor
adc
cmp
dec
push
dec
mov
mov
lods
pop
ret
fstpl
sbb
jmp
push
and
out
mov
lahf
push
leave
or
in
ja
mov
movsl
addb
and
ltr
mov
add
imul
push
mov
call
std
sbb
cwtl
lods
pop
adc
jmp
and
push
fiadds
icebp
push
and
add
mov
dec
jno
std
mov
add
mov
jecxz
fisubs
pop
jo
adc
sbb
add
mov
xchg
sbb
push
pop
sbb
jecxz
inc
shlb
mov
movsl
push
insb
flds
stos
rcrb
xchg
jne
repz
repnz
cwtl
xor
sbb
fdivl
pop
lea
cmc
mov
jb
popa
add
js
jmp
mov
bound
cmp
add
xlat
xor
push
cmp
cld
push
pusha
mov
mov
sub
adc
mov
mov
cmpsb
sbb
shrb
pushf
imul
test
or
jg
pop
addb
test
pop
std
or
and
ficoms
and
and
lcall
xchg
add
pop
pop
xor
and
xchg
in
push
lcall
dec
pop
mov
rcl
xorb
fcmove
add
xor
cmp
popf
mov
or
out
test
xchg
mov
fidivs
out
movsl
xor
call
pop
scas
mov
fisubs
xor
sbb
std
mov
jbe
hlt
add
dec
jge
es
jecxz
ret
adc
loope
pop
cs
jno
std
mov
xor
add
addl
adc
in
popf
lea
push
lods
or
jg
mov
dec
mov
inc
add
inc
fmull
in
sub
xor
jmp
pop
jg
adc
stc
sub
mov
sbb
test
sbbl
inc
scas
fdivl
leave
fildll
or
jg
test
stc
and
shll
loopne
fmul
mov
addl
orl
loope
jbe
fiadds
dec
cli
aaa
aas
inc
sub
xchg
je
sub
sbb
sbb
cli
les
sbb
jno
and
sub
je
adc
aas
icebp
and
mov
dec
mov
mov
scas
mov
imul
rcrl
dec
icebp
outsb
add
ficoml
sahf
movsb
dec
mov
jg
mov
dec
mov
xchg
dec
out
vbroadcasti32x2
aaa
pop
mov
sbb
sub
sbb
shlb
in
or
mov
loopne
sub
pop
add
flds
fwait
push
adc
inc
dec
test
les
loop
add
pop
cltd
add
push
or
or
popaw
push
aad
test
mov
daa
jmp
cld
shlb
adc
add
and
mov
xchg
lcall
mov
inc
enter
pusha
mov
pop
mov
bound
jne
cmpsl
cmpl
xchg
pop
ja
or
push
stos
scas
leave
or
and
mov
or
add
jp
pushf
sub
add
or
pop
jae
inc
mov
cli
lods
dec
push
inc
rolb
stos
daa
mov
aam
dec
adc
loope
cs
subb
adc
jno
sub
aas
jmp
clc
pop
jl
mov
dec
fsubrp
call
fld1
jne
xor
pop
lods
jp
movsb
or
pop
fistl
xchg
test
mov
outsl
out
sub
lods
mov
or
fs
jo
aas
add
jns
xchg
jmp
cwtl
jmp
fildl
xor
insl
cli
rolb
sub
outsl
lds
or
jmp
sub
mov
icebp
jae
lahf
ja
les
mov
push
ret
pop
push
ficomps
inc
pop
jecxz
xchg
mov
push
pusha
ljmp
pop
add
or
ljmp
or
or
adc
arpl
mov
or
inc
or
adc
push
push
jbe
test
stos
out
loopne
cmp
xorb
push
mov
adcl
adcl
mov
xchg
pusha
ficompl
sbb
push
bound
push
cmp
addr16
lcall
loope
pop
imul
dec
inc
out
insb
pop
push
out
adc
pop
lret
push
loope
jnp
cmpsl
insl
imul
push
push
lcall
mov
ja
cmp
and
iret
xor
adc
lret
and
xchg
js
test
add
jno
cmpsl
jp
loope
mov
and
jne
andl
scas
sub
lret
cmpsl
jl
mov
jmp
and
cmp
add
inc
popa
popf
xchg
pop
inc
xorb
mov
aas
imul
and
loopne
call
pop
push
pop
xor
mov
adc
enter
test
push
xorb
out
les
push
or
xor
pop
dec
and
nop
push
outsl
mov
jne
add
aad
roll
sub
mov
cmp
add
stos
repnz
ja
cli
movsl
jbe
add
mov
ret
outsl
inc
scas
push
je
into
dec
add
cmpsl
jmp
xchg
dec
add
jge
add
lret
mov
lds
mov
mov
dec
adc
dec
mov
adc
or
dec
sbb
jbe
into
scas
stos
inc
xchg
xorl
inc
stc
fiadds
mov
pop
inc
test
inc
or
dec
and
cmpsl
xor
inc
and
loop
aas
cmp
aad
and
push
and
je
inc
test
adc
loope
fcoml
or
push
dec
xchg
lea
andl
mov
and
mov
dec
cwtl
push
or
fs
jge
adc
sbbl
outsl
push
or
sbb
inc
movsb
out
jns
sub
mov
enter
push
pop
ror
insb
add
stc
mov
cmp
daa
loope
loope
adc
push
adc
add
sub
mov
je
cmpsl
xlat
mov
add
test
clc
pop
push
les
cmp
add
les
adc
jne
orl
dec
lods
dec
and
and
inc
test
repz
push
movsl
int
inc
pop
xchg
js
lret
push
shrb
sub
sti
dec
and
icebp
push
adc
imul
mov
test
mov
aam
lret
mov
jle
inc
aam
or
cmp
enter
xor
mov
mov
and
and
addl
dec
mov
daa
mov
add
pop
call
push
cld
adc
fscale
jno
mov
inc
mov
xor
add
cli
pop
fsubrl
jg
jg
wbinvd
aas
test
pop
and
or
inc
imul
pushf
fimull
jno
xor
movsl
sti
les
dec
and
out
add
jecxz
dec
push
jmp
div
dec
in
add
mov
or
push
hlt
inc
ficoms
ret
and
or
jle
and
fucomip
pushf
cmp
pushl
dec
mov
xchg
push
sub
sbb
sti
aas
mov
imul
outsb
test
xchg
lods
mov
add
add
sahf
push
cpuid
jmp
jbe
mov
dec
cld
xor
je
inc
mov
push
xchg
xor
dec
mov
stc
aas
lods
sbb
test
dec
aas
mov
mov
hlt
add
aaa
or
imul
add
addr16
clc
lods
insl
clc
shrb
sbbb
adc
pop
loopne
adc
adc
inc
adc
insl
stos
cmpsl
sti
jne
cmp
or
xchg
ja
cmp
pcmpeqb
jmp
ss
cltd
add
mov
inc
mov
push
dec
test
mov
mov
xor
add
xchg
pusha
adc
cmpl
cmp
add
jmp
mov
outsb
std
add
xchg
jnp
sbb
mov
or
popf
stc
xor
mov
mov
lret
pop
leave
cmpsl
movsl
pop
lret
or
je
lret
dec
inc
inc
jg
es
jbe
push
mov
xchg
push
loop
xchg
mov
and
or
push
inc
adc
mov
pop
jmp
sbbb
xor
pop
mov
add
adcl
and
xchg
inc
pop
xchg
mov
aam
mov
sbb
mov
push
int
cwtl
iret
add
scas
and
cld
fwait
outsb
xchg
cld
push
pop
leave
pop
loopne
cmc
sbb
add
pusha
aad
or
nop
jb
mov
jnp
jno
clc
ffreep
pop
push
mov
lods
xor
push
dec
int3
or
adc
add
add
movsl
mov
pop
iret
and
xor
ja
popa
hlt
clc
xchg
mov
mov
jo
icebp
popa
xor
adc
stos
popf
jecxz
sbb
push
inc
pop
add
lahf
add
xchg
sub
ret
mov
sbb
push
mov
cmpsb
push
lock
cmp
sahf
adc
outsl
ss
das
cmp
sub
into
and
insl
sbb
div
int
sub
fsubrl
std
outsw
xchg
push
aad
ljmp
imul
sarl
and
add
mov
adc
or
dec
int3
cmp
mov
mov
add
lret
lret
imul
lea
ret
clc
pop
fnstsw
push
mov
insl
mov
add
xchg
xchg
stos
fadds
inc
push
mov
sti
jl
push
add
cmp
lods
jmp
int3
or
into
jb
ret
mov
cmp
xor
cmp
shll
fstpt
xor
lock
dec
mov
cli
dec
cmc
test
add
andl
mov
call
pop
adc
cwtl
bound
je
imul
push
sbb
adc
addr16
and
add
dec
ja
jg
jnp
add
adc
out
cmp
out
lret
inc
jg
fcomi
sub
scas
mov
add
jae
cld
cmp
dec
cmpsl
aad
cmp
jo
orb
sub
cmpsl
jnp
adc
add
pusha
out
cmpsl
cmp
sbb
push
mov
push
mov
dec
test
stos
and
and
add
enter
rclb
xlat
adcb
pop
in
push
jo
jo
xchg
popf
adc
in
xchg
mov
adc
shr
jnp
mov
les
sti
pop
std
inc
lods
dec
and
clc
lcall
lods
aas
pusha
mov
mov
pop
cmp
mov
incl
mov
cmc
sti
cs
pop
mov
ss
dec
test
sub
dec
je
pop
pusha
sub
jne
jnp
mov
gs
test
int
rorb
les
fiadds
out
rcrb
add
cld
jmp
in
adc
arpl
push
mov
mov
sti
out
add
nop
push
mov
xor
mov
sub
pop
pop
mov
or
nop
adc
scas
jmp
pop
jnp
mov
xchg
push
ret
or
add
push
sbb
push
ljmp
pop
adc
movsl
rolb
lret
sub
xor
dec
test
sarb
push
lahf
jns
adcb
stos
push
add
movl
mov
and
mov
fidivrs
pop
mov
adc
adc
mov
push
mov
bound
push
test
pusha
add
cwtl
or
jns
jae
idivb
sub
stos
sbb
pop
movsl
sti
jne
dec
xchg
nop
ss
icebp
pavgw
cmc
sub
xchg
or
repz
push
outsb
mov
call
test
pop
mov
pop
aad
sbbl
fnstsw
in
add
cmp
jne
dec
ret
call
mov
call
cmpsb
shl
in
cs
or
lahf
lods
adcb
sub
dec
pop
lcall
xchg
add
jne
add
add
push
inc
add
aam
or
fldl2e
rorb
outsb
dec
daa
pushf
and
mov
lcall
pop
jp
icebp
loopne
test
dec
scas
mov
inc
cmp
testl
stc
ss
aad
cmc
fldt
arpl
in
adc
cs
mov
and
hlt
push
cld
lret
addr16
sub
add
ficoml
add
pop
pusha
sub
sub
fcoml
mov
jb
and
and
sub
lret
pushf
mov
xchg
adc
stc
mov
out
mov
and
add
incl
mov
cmp
jp
andb
and
pop
dec
mov
mov
jnp
cltd
inc
mov
inc
out
or
pop
mov
cmp
das
ret
or
and
push
rorl
mov
xor
pop
mov
push
outsb
ret
push
pop
mov
adc
mov
idiv
push
inc
pushf
jecxz
xchg
jno
scas
sub
daa
pop
dec
incl
sub
push
pop
shll
ds
and
jle
jge
push
mov
mov
pop
mov
adc
popa
mov
in
add
imul
repz
sbb
nop
test
repnz
or
mov
mov
mov
xor
xchg
push
and
sbb
les
call
in
out
xchg
inc
mov
add
cmp
cld
sub
test
add
mov
pop
roll
cld
lea
iret
pop
das
push
pop
imul
mov
test
pop
gs
fnstcw
cmp
sub
sub
mov
add
mov
mov
jmp
out
stc
dec
sub
and
adc
mov
xor
or
movsl
and
xor
xchg
ja
fcomp
xor
pop
sub
mov
sub
mov
repnz
xchg
dec
xchg
in
and
imul
jae
imul
sbb
cmp
inc
fisubs
sbb
mov
mov
mov
and
inc
outsb
or
and
dec
test
pop
adc
in
negb
jnp
adc
loopne
dec
addb
mov
imul
sahf
inc
mov
mov
push
cmp
lret
mov
test
pusha
cwtl
pop
sub
jo
cwtl
or
movb
mov
movsb
mov
add
sub
lret
jecxz
repz
cld
mov
mov
xor
add
mov
sub
sarl
push
ss
or
jle
sub
inc
push
add
cltd
popa
add
cld
pop
inc
and
xor
cmp
fisubs
mov
sub
pop
jbe
push
push
jmp
packssdw
sbb
cwtl
push
xor
xchg
and
lret
push
xchg
pop
mov
dec
lcall
dec
cmp
in
sub
in
cltd
mov
pusha
fcmovnb
test
add
or
mov
fdivs
roll
cmpsb
push
out
adc
xchg
mov
cmc
shll
dec
adc
inc
stc
pop
pusha
test
rcrl
add
decl
mov
loopne
es
mov
xchg
dec
push
shl
and
adc
inc
push
mov
in
maxps
scas
shll
outsl
mov
nop
lahf
dec
jp
and
cmp
sti
sub
mov
shr
push
push
jp
sbb
nop
stc
mov
or
sbb
lret
mov
pop
mov
loop
adc
icebp
xor
dec
andb
cmp
icebp
lcall
loopne
push
and
xchg
xchg
es
stc
jecxz
xor
mov
mov
or
push
pop
fwait
add
xor
pop
mov
mul
fsubs
xor
jno
dec
popa
les
jg
xor
int3
adc
pop
mov
add
or
int3
add
repnz
and
testl
lods
es
psubusb
shll
addb
or
push
jae
add
and
jbe
pusha
mov
sbb
xchg
aam
cmp
in
add
int3
push
pop
popf
mov
cmp
dec
adc
jo
scas
jg
mov
out
outsb
icebp
add
nop
cltd
cmp
in
gs
xor
dec
push
mov
mov
push
push
push
bnd
pop
mov
adc
pop
xlat
adc
ror
iret
lret
jp
popf
sub
xlat
insl
mov
notl
mov
mov
sbb
jne
in
adc
stos
push
mov
cmpsb
repz
pusha
nop
sbb
rorb
pop
jmp
fcoms
cli
jo
out
scas
out
add
ljmp
fcoms
or
mov
sub
inc
roll
lods
pop
out
inc
add
cmpsl
and
aad
sub
pop
push
orl
cmp
sub
pop
or
cmpsb
jmp
sbb
nop
orl
vfmadd231ps
daa
fs
jb
or
mov
ror
popl
xor
mov
add
or
icebp
pop
adc
lods
mov
cmp
inc
das
rcrb
jmp
sub
dec
dec
aam
scas
cmpsb
add
enter
ds
addr16
mov
in
pop
in
cmp
int
push
movsl
push
insb
push
inc
or
enter
add
jl
addr16
lods
cmp
mov
jbe
loope
scas
push
imul
add
xor
scas
leave
sbb
cmp
xchg
adc
push
out
pop
dec
movsb
cwtl
popf
push
adc
daa
gs
xchg
push
cli
cltd
fwait
imul
or
popf
imul
adc
dec
pop
mov
push
xor
cmpb
in
mov
pop
scas
adc
in
sbb
lods
pushl
push
mov
cmp
mov
jne
dec
cmp
and
push
add
insb
out
or
shll
orb
pop
mov
mov
xor
in
push
mov
lea
popf
pop
adc
pop
out
push
adc
sub
xchg
std
lea
lods
xchg
mov
or
mov
push
add
sbb
add
lods
test
add
fimull
xchg
push
out
cmp
fiadds
mov
sbb
das
jle
lahf
xor
add
sub
pushl
and
rorb
out
or
push
dec
aaa
out
xchg
in
pop
mov
dec
mov
pop
jmp
lcall
aad
xlat
add
or
and
je
adc
mov
add
scas
jne
call
mov
push
mov
shlb
jnp
dec
xor
mov
enter
cs
fs
movsb
add
xchg
add
stc
mov
mov
pop
jbe
xorb
mov
lock
sub
in
push
pop
pop
mov
add
add
inc
push
add
scas
aam
mov
mov
aaa
dec
out
adc
jmp
mov
rep
jmp
push
inc
rcrb
mov
leave
push
jmp
outsb
add
cmc
cmpsb
xor
lods
call
movsb
jno
inc
sbb
je
scas
loop
hlt
jge
xor
dec
push
dec
cmpsb
xorb
mov
add
push
outsl
adc
push
push
jae
stos
add
inc
mov
pop
jns
inc
data16
js
ss
pop
lret
mov
cld
dec
xor
mov
push
js
sub
out
cld
imul
mov
movsl
loopne
add
jmp
jno
sub
insb
jle
inc
loopne
or
jmp
jle
jnp
fbstp
sub
xor
xlat
lods
add
jns
test
add
cmp
mov
call
pop
add
add
jl
pop
xor
imul
aaa
movb
jp
jge
dec
lods
sbb
push
xor
pop
fwait
call
mov
lcall
push
cltd
sbb
aam
add
popf
lods
and
es
cmpsl
sti
les
pusha
clc
sub
divl
mov
mov
popa
xchg
lea
adc
fstpl
loope
jp
mov
imul
fsubr
jge
cmpsl
pop
jno
test
or
fs
aam
pop
xor
xchg
mov
popf
cld
call
mov
xor
pop
shlb
inc
iret
sub
mov
push
pop
lea
hlt
add
flds
mov
and
xchg
icebp
pop
jg
or
ljmp
xchg
pop
mov
clc
pop
neg
or
sbb
pop
in
pusha
repz
int
push
addl
test
movsl
and
jp
add
stos
out
mov
add
jp
das
outsl
fimull
je
les
inc
mov
andb
out
jo
clc
cli
test
adc
push
jmp
in
mov
xchg
cld
sub
lret
or
pop
mov
xor
mov
adc
xor
add
sub
aas
aas
icebp
sub
mov
js
popa
mov
test
jmp
push
mov
mov
pop
sub
les
int3
sbb
push
loop
cmc
lret
and
mov
repz
inc
push
push
stos
mov
loope
incl
xchg
rorl
stc
pop
adc
mov
jne
or
movsl
add
mov
and
jns
mov
rcll
repnz
dec
sbb
and
lods
bound
cmpsl
mov
mov
rorl
mov
jge
xchg
cwtl
lods
mov
adc
sahf
or
out
aam
nop
xor
outsb
jecxz
xor
mov
je
lea
lods
or
int3
add
add
into
xchg
test
push
and
push
adc
roll
xor
test
test
ljmp
push
push
addb
lods
scas
test
push
xor
cs
and
mov
cltd
xor
cmp
pop
mov
dec
cli
and
or
shrb
popa
lods
push
mov
divl
and
lret
int3
adc
loop
xlat
add
daa
mov
addr16
int
enter
mov
stc
aas
mov
cmp
out
in
insb
sub
std
xor
jmp
adc
xchg
mov
sti
jl
xchg
into
dec
jmp
idivl
mov
push
add
loope
and
adc
adc
dec
fwait
fwait
adc
xor
sub
std
js
inc
mov
into
lahf
repnz
mov
mov
in
pusha
addl
push
fnsave
rorb
jle
adc
scas
push
hlt
add
fstps
and
adc
add
mov
stc
xchg
movsb
mov
rcrb
jno
add
pop
xlat
in
fstl
mov
sbb
mov
iret
stos
jbe
add
testb
xor
fxch
sub
pop
push
pusha
cmp
andb
mov
out
xchg
loopne
iret
loope
pop
stc
push
jp
data16
insl
pop
fists
add
jae
mov
adc
add
add
push
mov
fs
pop
adc
pop
push
repz
sbb
or
mov
jmp
mov
test
dec
fwait
mov
in
push
je
inc
daa
pop
xchg
inc
dec
xchg
sbb
adc
pop
fsubs
sub
ja
mov
sub
mov
pop
icebp
pop
jnp
jb
xchg
pop
and
xlat
adc
jbe
fcoms
sub
inc
js
adc
sbb
xchg
add
cld
mov
push
ljmp
push
push
movsl
shr
jo
stos
mov
sub
stos
bound
push
or
daa
inc
sub
inc
xor
std
adc
stc
add
xchg
in
mulb
jno
scas
lock
rorl
fldl
and
sti
mov
push
scas
push
push
inc
xor
and
mov
add
mov
inc
jbe
cli
arpl
movsb
lock
movsl
add
cmc
insl
dec
dec
xchg
inc
into
fisubrl
fcomps
das
fdivl
insl
loop
push
pop
mov
shl
cmp
adcb
fsubs
or
in
enter
pop
adc
push
inc
mov
popa
mov
pop
mov
cmp
xor
mov
decl
addb
inc
inc
inc
cli
jo
out
jp
add
jo
ret
stos
add
or
sbb
jbe
faddl
push
pop
faddl
jbe
test
inc
frstor
fildl
push
push
pop
and
jbe
test
pusha
in
mov
jns
popw
popa
pop
mov
mov
sbb
push
fcomps
pop
xchg
inc
out
inc
pop
jo
push
add
pusha
xor
stos
or
sub
jecxz
mov
cli
sub
add
lret
cmp
pop
sub
adc
pop
das
subb
sub
xchg
mov
or
cld
pusha
sub
xor
sub
ror
push
mov
pop
lcall
outsb
inc
dec
sbb
shll
push
sbb
loop
add
pusha
mov
mov
push
std
pop
mov
call
add
add
mov
jo
loopne
imul
sub
je
rcll
pop
push
jle
add
adc
jne
addl
mov
bound
jne
imul
inc
xorl
orl
add
sahf
test
pop
inc
add
fcompl
and
dec
stc
xchg
xor
mov
scas
mov
push
mov
cli
sbb
inc
add
fildl
lret
loopne
roll
jmp
inc
pop
adc
in
imul
or
or
jno
pop
push
mov
mov
jge
nop
outsb
out
add
insl
cwtl
mov
ljmp
sub
dec
pop
outsl
lods
loopne
pop
shlb
icebp
rcl
and
aam
aam
jno
adc
ficoml
adc
add
xchg
pusha
mov
push
pop
shl
jne
rorl
leave
fwait
lods
sub
inc
arpl
push
push
aam
icebp
cltd
lods
adc
mov
jp
inc
mov
sbb
xchg
in
cmpsl
xchg
dec
fstpt
pop
cmc
enter
insl
in
push
sbb
je
cmp
adc
daa
pop
dec
add
fstpt
dec
lret
cli
pop
fldt
dec
push
into
mov
adc
repz
aas
cmp
add
push
rolb
std
aas
mov
es
mov
xchg
push
pop
int3
lock
mov
push
inc
out
or
xchg
insl
lcall
outsl
les
jne
jno
xchg
push
mov
jge
add
int3
mov
add
arpl
push
pushf
fdivrl
sub
mov
mov
pusha
push
adc
hlt
arpl
imull
and
bound
mov
popa
mov
mov
test
and
daa
adc
les
aad
icebp
mov
dec
test
or
pop
jbe
xchg
add
inc
adc
out
aas
add
mov
sti
adcb
jno
imul
cmp
out
pusha
lods
sbb
dec
lahf
mov
pop
out
push
pop
fisttpll
inc
push
cwtl
dec
or
add
hlt
sahf
cmp
stc
sub
and
dec
push
lods
repnz
loopne
movsl
sub
add
xchg
or
call
add
cs
cmpsl
or
cmp
popf
add
jl
add
sub
dec
jp
xchg
fnstenv
sbb
ficompl
out
popa
mov
mov
sbb
mov
mov
mov
adc
xor
cmp
nop
mov
repnz
mov
inc
or
clc
mov
xor
mov
dec
call
add
xchg
xchg
push
mov
or
sub
push
pop
sahf
mov
cli
sbb
rorb
sbb
add
push
sub
and
dec
pop
and
jne
mov
fsubrs
add
stos
push
mov
repnz
pop
lret
sarb
int
xchg
add
adc
mov
cld
add
mulb
push
es
imulb
lahf
cld
mov
xor
mov
add
cs
mov
jo
inc
mov
icebp
in
xor
std
outsl
mov
sbb
test
mov
pop
jmp
push
adc
jge
test
rorl
add
enter
push
push
clc
cmpsb
mov
mov
sbb
xchg
in
and
sub
adc
sub
bound
shl
fcoms
xchg
lea
stc
je
push
fsubrp
outsb
pop
adc
stc
lock
dec
fcomps
and
add
xor
shll
sub
xchg
mov
xor
aaa
das
addl
aam
xchg
test
add
shrb
and
xchg
shll
jo
xchg
sub
hlt
div
sbb
jp
popf
and
add
das
out
sarl
adc
imul
adc
pushf
ja
xor
ja
add
roll
stos
inc
inc
adc
sub
fstps
rcll
jp
cmp
sbb
in
adc
sbb
xchg
fidivl
pushf
testl
jp
iret
ficoms
pop
cmpb
sbb
add
and
das
xor
xchg
out
shlb
add
sbb
jbe
inc
imul
pop
dec
scas
dec
jge
push
add
inc
add
sbb
add
xor
xor
mov
add
mov
stc
das
add
mov
mov
mov
xchg
ljmp
push
xchg
xchg
mov
mov
jns
inc
inc
add
lods
mov
pop
and
pop
push
ljmp
xor
xor
pusha
xor
mov
jecxz
aas
addr16
adc
dec
lods
iret
test
add
sub
mov
mov
or
or
xchg
scas
adcl
cmp
hlt
in
mov
shr
inc
test
add
test
loop
mull
adc
imul
lcall
add
adc
scas
xchg
pop
or
ret
mov
jl
and
add
push
in
xchg
or
push
fs
push
outsl
sbb
out
ljmp
xor
cwtl
popf
cli
add
repnz
hlt
notb
les
inc
stc
clc
xor
orb
sahf
and
or
jg
stc
pop
push
mov
jne
outsl
popf
dec
ficompl
cli
add
or
dec
mov
mov
xor
enter
out
jp
scas
frstor
cmpsl
add
sub
cld
subb
add
jae
outsl
add
lahf
je
dec
inc
test
mov
add
lods
frstor
mov
loope
inc
or
mov
stc
jl
jmp
decl
test
insb
xlat
sbb
adc
std
mov
inc
add
call
fdivrs
outsw
mov
pop
push
dec
sti
or
cli
imul
aad
enter
and
mov
and
lods
jecxz
mov
mov
mov
add
xor
mov
mov
and
fwait
mov
and
adc
dec
enter
push
mov
inc
jb
lods
scas
push
push
pop
cmc
pusha
inc
inc
fs
ficompl
mov
lea
jae
aam
movsl
arpl
and
add
jae
or
mov
xchg
orb
inc
out
int
or
std
add
sbb
cmpsb
pop
dec
jmp
stc
mov
pop
aad
pop
sti
or
and
loope
add
mov
das
mov
pop
cmp
push
testb
add
push
in
mov
imul
test
in
jbe
loopne
loop
pop
push
pop
mov
xchg
xchg
jmp
mov
mov
mov
clc
fprem1
stos
push
add
in
mov
jmp
pop
das
sub
loope
ficoms
out
push
sbb
xor
fdivr
inc
sbb
dec
mov
mov
add
ss
xchg
pop
das
int3
pop
xchg
fs
pop
push
lods
push
sarb
pop
adc
shll
mov
imul
dec
push
jo
repz
js
aad
pop
sbb
data16
mov
setb
stos
sahf
dec
add
push
in
gs
enter
mov
or
and
jae
mov
aam
aam
outsb
mov
and
sbb
out
cwtl
mov
sub
fstpl
loopne
sahf
pop
push
in
roll
lahf
in
add
mov
inc
insb
mov
add
jne
cmpsl
xchg
test
cmc
and
inc
jge
mov
mov
jle
inc
in
test
add
cmpsl
out
xchg
adc
add
mov
cwtl
bound
sub
mov
iret
int3
test
sbb
fs
cs
fsubl
and
cld
cmp
popf
inc
and
xorb
sub
push
mov
jb
add
int
loopne
hlt
jns
dec
fs
xor
adc
out
adc
mov
rclb
pop
xrelease
push
add
push
mov
sub
add
mov
add
push
mov
sbbb
pop
xchg
cwtl
arpl
in
dec
test
scas
imul
add
into
jp
mov
stos
adc
cmpsb
testb
mov
and
imul
in
push
pop
xchg
dec
inc
dec
or
insl
mov
push
add
test
les
add
es
mov
or
lods
lods
sbb
adc
pop
xor
movsb
adc
mov
mov
cli
add
in
fs
xor
lea
push
stos
push
sbb
cmp
mov
xchg
call
cltd
xchg
test
inc
mov
lods
add
ljmp
fabs
outsl
fwait
xor
sub
add
cmp
push
cmp
loope
mov
icebp
add
aam
fisttps
xchg
leave
mov
ret
ljmp
and
dec
clc
sahf
arpl
pop
lret
xlat
loopne
jmp
fisubs
je
mov
icebp
xor
loop
dec
loope
test
pop
cwtl
inc
xor
sbb
or
jb
and
out
push
add
cmp
dec
in
fwait
sar
mov
js
add
adc
mov
mov
in
mov
out
sub
aaa
jno
add
rolb
fs
std
cs
out
in
mov
add
adc
push
pop
cmpb
mov
add
or
sub
loopne
mov
bound
insb
xor
sub
push
setno
push
add
xor
jg
lahf
out
push
pop
mov
negb
add
pop
pxor
xor
jbe
or
push
pop
out
push
pusha
dec
icebp
inc
nop
add
out
jmp
shrb
pop
push
jg
mov
add
cmpsl
xchg
call
jmp
std
push
jnp
push
je
sar
inc
sub
mov
addl
sub
popf
jl
hlt
add
add
mov
iret
mov
popf
clc
push
xor
jg
push
into
lcall
add
push
sub
add
xchg
cltd
pop
jno
in
push
add
aam
adc
fcoms
push
daa
cmp
shll
orb
mov
in
adc
outsl
push
pop
test
and
jle
xchg
mov
dec
mov
mov
push
xchg
outsl
xchg
rol
xchg
sbb
and
cmp
stos
int3
add
mov
popa
jmp
and
push
mov
jns
jg
dec
in
push
enter
aaa
scas
fs
xchg
loopne
sbb
inc
push
in
add
iret
popf
add
jbe
inc
std
sbb
in
and
xchg
aam
cmp
pop
test
cmpsl
add
nop
mov
sti
adc
cmp
sub
fs
fnsave
scas
mov
fisubs
das
incb
jae
nop
pop
sbb
add
or
out
das
insl
jne
mov
mov
jbe
add
addr16
mov
scas
xchg
and
stc
popf
add
mov
das
jl
push
push
in
cmc
fs
add
or
pop
sarb
or
in
add
lahf
das
pop
add
fnstcw
cmp
mov
jecxz
dec
out
rcrl
ret
pusha
push
popf
jns
daa
xor
inc
add
pop
push
adcl
xor
pop
outsb
mov
adc
mov
bound
cmc
popf
test
cs
cmp
rorl
add
ja
dec
jmp
ljmp
sub
js
out
test
aaa
mov
adc
mov
nop
cmp
mov
push
pop
adcl
dec
ret
mov
fwait
add
push
xchg
mov
pushf
popa
out
push
cmp
lea
adc
inc
fs
popa
pop
adc
sbb
sub
ret
or
stc
dec
and
xchg
test
and
aam
mov
sets
loopne
sub
mov
sub
xor
mov
push
mov
mov
jno
mov
sub
in
add
adc
lods
xchg
dec
cld
outsb
dec
adc
outsb
xor
ja
cmp
into
inc
sub
fildl
aaa
loop
aam
mov
ja
outsb
lods
in
dec
add
xchg
xor
xchg
add
sub
cld
dec
mov
loopne
dec
imul
dec
jp
insl
mov
sub
pusha
fistpll
xorl
movsl
add
icebp
adc
jg
adc
push
popa
mov
mov
jg
orl
std
pop
cld
fdivr
cmp
mov
inc
loope
testb
xor
push
sbb
sub
push
popl
add
data16
add
dec
divl
mov
in
insb
mov
and
pop
out
fdivrl
movzwl
fldlg2
pop
dec
out
loopne
shl
mov
lcall
jp
adc
in
and
out
mov
fldenv
pop
nop
mov
popf
and
adc
mov
sbb
cmp
arpl
mov
outsb
lcall
mov
jl
mov
ud1
sbb
push
jmp
or
xchg
lret
jg
sahf
or
and
sbb
cmp
leave
popf
pop
inc
xchg
jmp
or
popf
fwait
ss
cmp
adc
mov
push
add
xchg
hlt
xchg
ja
add
mov
cmp
mov
pop
mov
xlat
mov
inc
pop
push
xor
mov
repnz
xchg
inc
jne
jmp
jge
dec
test
out
testl
test
fdivrl
sbb
mov
or
cmp
imulb
cmp
xor
insl
mov
shr
pop
dec
add
test
dec
cs
adc
sub
xchg
push
stos
mov
add
loope
les
mov
mov
ss
dec
aad
adc
inc
cmp
ljmp
getsec
jbe
sarl
orb
leave
sbb
cmp
cmp
pop
ds
push
lahf
cmpsl
std
xorb
mov
cmc
mov
das
push
gs
xchg
pop
mov
lods
push
ficompl
cli
insl
es
xor
mov
inc
in
fsub
in
shll
jle
lcall
roll
push
add
sbb
cmp
stos
add
and
scas
fstpt
adcb
in
nop
push
fs
inc
mov
or
imul
int
popf
adc
cmp
ja
mov
popa
mov
loopne
mov
adc
xor
mov
pop
fiadds
cmp
nop
call
shll
and
out
mov
mov
xchg
popf
mov
in
dec
xor
addl
jle
mov
or
pop
jle
and
or
sub
out
add
leave
and
mov
rcr
push
mov
stc
es
jge
xchg
bound
popf
les
cwtl
jno
add
in
outsl
addl
out
mov
movsl
mov
in
addr16
lea
cmp
lods
pop
sbbb
test
cmp
mov
insb
mov
add
xchg
mov
mov
pushl
sbb
fldt
test
adc
mov
xchg
cmp
sti
jnp
and
mov
add
mov
or
loop
xchg
mov
xchg
mov
mov
popa
pop
int
loopne
xchg
jno
inc
shlb
adc
in
mov
add
pop
cmp
cwtl
shll
das
mov
loopne
jge
or
dec
mov
sbb
shll
sbb
outsl
pop
push
xchg
xlat
dec
mov
call
mov
pushf
inc
dec
sbb
outsb
xchg
sub
pop
cmp
fistpll
js
push
test
add
lahf
out
outsl
into
popa
jg
cmc
add
in
nop
jle
or
movsl
jge
jb
xor
loop
dec
inc
aas
popa
sbb
in
jge
add
call
aas
leave
sahf
ror
xchg
pop
or
add
adc
sbbl
add
add
push
or
cli
pop
add
xchg
xchg
daa
mul
push
fstl
mov
loope
sub
call
repnz
pop
call
pushf
dec
aad
daa
cli
outsb
in
pop
mov
mov
mov
dec
subl
aas
imul
add
int3
cs
pop
inc
sub
push
js
adc
imul
add
jns
test
nop
dec
daa
dec
adc
sbb
cmp
outsb
or
mov
or
jle
jmp
mov
sub
lcall
das
jl
jnp
mov
lods
pop
or
mov
jbe
lock
leave
aam
push
dec
imul
jecxz
sbb
outsl
cmpb
cmp
fnstsw
jbe
pusha
popf
fsubl
les
mov
or
lret
enter
dec
sti
ret
inc
mov
cwtl
cmpsb
sub
xor
adc
sbbb
push
push
stc
daa
add
ss
call
and
add
arpl
jae
dec
mov
repnz
pop
jnp
daa
xor
mov
push
add
mov
clc
xor
pop
inc
movsb
mov
outsl
or
leave
aam
xor
pop
xor
dec
mov
sub
dec
int
xorl
mov
jle
aam
dec
mov
mov
daa
push
cltd
adc
loop
je
inc
jle
mov
mov
ja
mov
arpl
add
stc
pop
and
lret
or
push
xchg
popf
rcll
mov
xor
add
mov
push
mov
les
and
adc
or
mov
xor
punpckhdq
xor
clc
inc
push
sub
xlat
and
fs
pusha
in
jo
bound
pop
mov
cmpsl
dec
es
xlat
in
mov
pop
adc
jb
and
dec
xor
fimull
popf
fnsave
adc
movsl
imul
cli
call
xor
dec
adc
ljmp
xor
jo
cs
int3
dec
push
xchg
daa
loop
in
mov
ds
fs
movsl
mov
flds
testb
push
lods
stos
call
addl
imul
mov
push
rcll
or
pop
jmp
sub
test
pop
pusha
xchg
push
pop
ret
add
cld
addr16
xor
jmp
pop
lods
pushf
lock
jae
pusha
xchg
lret
ret
inc
inc
sbb
pop
repnz
roll
test
xchg
sti
pop
mov
mov
jl
test
rcr
repnz
xchg
sarl
shrb
inc
inc
int
jnp
sub
push
cmp
pop
add
rol
mov
and
jg
and
cli
add
popa
std
into
sahf
inc
fldl
pop
fs
mov
dec
mov
pusha
nop
cltd
loop
andl
je
mov
ljmp
cld
shrl
sub
lods
pop
mov
jbe
xor
out
add
adc
or
push
or
mov
push
test
xchg
repnz
test
je
add
inc
adc
or
dec
repnz
xor
or
adc
in
jo
and
pusha
mov
shlb
in
dec
mov
pushf
in
add
test
out
sub
inc
daa
add
out
int
bound
add
cmpsb
nop
xchg
cmpl
repnz
enter
daa
inc
popa
std
pushf
das
daa
loopne
cmp
iret
imul
dec
hlt
gs
mov
or
test
adc
repnz
inc
and
sbb
bound
mov
pop
mov
or
and
mov
jbe
sub
cs
cltd
test
sbb
movsb
mov
mov
cs
mov
add
xor
xchg
mov
or
jns
subl
mov
es
xchg
idivb
repnz
aam
inc
push
nop
iret
in
dec
nop
pusha
cmc
out
fstl
xchg
add
or
mov
dec
and
mov
ds
sub
inc
adc
mov
iret
push
dec
aas
test
adc
push
jnp
jecxz
and
mov
out
loopne
fisubrs
lahf
fsubr
popf
fdivrl
sub
daa
cmp
adc
cmpsl
in
add
inc
leave
clc
das
mov
fs
adc
rcll
mov
adc
ja
addb
in
push
add
lahf
in
adc
sbb
mov
xchg
mov
jae
and
dec
adc
adcl
xor
icebp
loop
jnp
adc
xor
or
xor
sbb
mov
dec
cmpsb
xchg
cld
mov
test
out
cmpsb
daa
mov
das
aam
das
push
sahf
outsl
sti
pop
call
cmpsb
pop
jnp
adc
sbb
lahf
sub
out
dec
or
push
wrmsr
out
outsl
xchg
add
mov
xor
xor
sub
stc
cmc
cs
shl
sbb
daa
jle
subb
in
jns
mov
mov
je
iret
xchg
popf
testl
add
adc
push
mov
pop
lahf
je
jo
mov
or
movsl
add
xchg
sahf
popa
fcompl
lea
xchg
xchg
mov
fwait
iret
das
mov
add
pusha
sahf
inc
leave
or
mov
test
cli
sbb
ret
repnz
rolb
lock
mov
iret
sub
das
sbb
popa
outsb
sub
mov
push
test
fwait
dec
in
jl
jp
mov
add
push
mov
mov
dec
pop
in
mov
test
pop
pop
inc
popf
lods
xlat
sbb
jmp
in
cmc
and
mov
ficomps
push
shlb
mov
sub
fs
mov
pop
rcll
loopne
or
push
inc
shrb
cmp
sub
and
cmp
movsb
inc
sub
adc
cs
sub
movsl
sarl
add
rcll
mov
mov
jb
int
jnp
imul
push
popf
or
test
push
mov
mov
addl
gs
sub
in
orl
or
xchg
mov
push
lock
dec
push
imulb
outsb
test
fsub
fldcw
or
xchg
movsl
jge
jbe
pusha
sub
lea
mov
add
mov
xchg
sbb
mov
jmp
cmp
adc
mov
add
mov
xor
js
mov
jecxz
mov
sbb
sti
das
add
jecxz
scas
jle
mov
test
test
jge
add
push
pop
test
pop
jecxz
loop
ja
loopne
fsubrs
nop
or
lock
and
pusha
cmc
xchg
xchg
mov
cmpb
pop
push
dec
mov
call
cltd
test
pop
fisubrs
repnz
sbb
leave
add
pop
pop
xchg
pop
popf
ficoms
xchg
out
loop
fisttpll
loopne
stc
sbb
pop
repnz
and
pusha
xor
cmpsl
adc
inc
cs
and
filds
pop
add
sbb
pop
jle
lcall
int
aaa
push
aad
mov
dec
pusha
push
lea
faddl
imul
out
loopne
pop
pop
fildl
sqrtps
out
add
andb
jecxz
pop
mov
loope
aad
add
das
ficomps
push
leave
add
xor
jp
mov
lods
popf
xchg
jbe
cmpsl
jo
lret
daa
mov
dec
test
subl
aad
jg
lahf
lock
push
mov
arpl
rorb
pop
add
xchg
pushl
add
ljmp
mov
dec
add
mov
sub
hlt
mov
popf
imul
xchg
das
int
shrl
mov
push
mov
sbb
mov
pushf
sbb
lahf
testb
iret
or
jns
sbb
outsb
mov
pushw
test
in
mov
mov
andb
push
lods
mov
add
aam
out
outsl
xchg
dec
xchg
xchg
test
and
rolb
sub
push
jnp
daa
push
mov
xchg
popf
sbb
cmp
add
mov
in
adc
popa
sub
leave
dec
test
rcll
mov
andl
add
loop
je
loope
pusha
mov
bound
push
jg
xchg
dec
stos
or
shr
ljmp
mov
daa
sarl
dec
or
ficoms
inc
cmp
cld
stc
loop
fnstsw
mov
sbb
mov
pop
jmp
pop
pop
test
mov
cmp
pop
leave
or
push
pop
cmpsb
push
adc
jns
repnz
insl
mov
test
pop
add
mov
adc
stc
mov
jmp
aas
xlat
shlb
sbb
call
sarl
daa
popa
pop
jne
ss
or
ss
ret
push
mov
insl
add
dec
loop
sbb
stc
hlt
or
lcall
sub
jmp
sbb
mov
andb
je
jmp
rcl
jae
pop
push
cld
fcomi
pop
idivl
cmc
psubd
and
and
loop
test
mov
mov
icebp
sbb
loopne
cli
jo
push
out
inc
add
add
push
xor
cmp
ficomps
pusha
push
stos
imull
cmp
pop
add
mov
pop
fidivs
mov
adc
cmp
cltd
sbb
lcall
std
xor
mov
popa
lods
add
dec
bound
arpl
mov
mov
outsl
leave
imul
mov
mov
pop
mov
pop
scas
inc
pop
mov
lods
or
popf
and
adc
pop
inc
mov
push
dec
nop
ja
xor
cmpsl
shlb
mov
mov
pop
sub
push
push
dec
push
inc
pop
xor
adc
mov
cmp
or
or
fisubl
cmp
mov
dec
std
lds
out
outsb
pop
sbb
jmp
add
fisttps
mov
xor
push
mov
sub
mov
lret
inc
inc
out
js
cs
add
lret
ret
dec
dec
imul
lods
push
push
jle
and
jae
or
and
mov
mov
add
repz
push
ss
addb
fnstcw
stc
sbb
nop
faddl
or
jb
mov
push
jbe
mov
add
jmp
fildll
rcrb
pop
or
dec
pop
mov
aad
or
push
sub
adc
dec
mov
subl
orb
popa
mov
jns
sahf
sbb
pop
stos
cmp
mov
push
cli
pop
inc
mov
xor
addr16
lret
or
adc
inc
sbb
stos
movsb
subb
rcrb
popa
cmc
pusha
out
mov
je
mov
gs
imul
adc
jmp
pop
scas
fcmovnbe
adcb
and
jno
adc
out
daa
and
in
bound
mull
loope
stc
in
ret
dec
jno
lcall
adcl
dec
enter
or
les
imul
or
sub
mov
imull
xchg
mov
xlat
sbbb
scas
lds
or
sbb
jg
ljmp
xchg
cmp
inc
xor
outsl
fisttps
sbb
ljmp
mov
jmp
sub
sbb
pop
lods
xor
sbb
fnstcw
jno
add
pop
in
je
cmp
imul
mov
mov
xchg
fwait
xchg
inc
in
cmp
push
cmp
test
lods
andl
inc
stos
outsb
jg
dec
and
fs
add
repnz
in
stos
rolb
clc
mov
jge
outsb
aad
lods
addl
in
push
cmpl
test
or
cmpsl
and
or
and
xchg
int3
das
mov
pop
test
cwtl
or
inc
add
lcall
inc
add
dec
shlb
sub
sub
and
ja
xor
sbb
mov
out
lcall
ss
sub
ficomps
lcall
add
int3
jl
lret
mov
test
pop
outsl
loop
test
pop
test
daa
test
into
mov
jmp
or
inc
xchg
cld
inc
inc
test
jo
dec
sub
mov
dec
jmp
jmp
mov
jns
fs
in
in
mov
xchg
mov
mov
dec
mov
xchg
cmp
or
sub
ds
mov
movsl
aam
and
pusha
jmp
imulb
sbb
popa
lret
loopne
imul
and
in
or
mov
inc
aad
adc
xchg
push
jns
sub
lds
fstl
xchg
clc
or
jae
jno
rcl
inc
adc
mov
cwtl
ljmp
mov
cwtl
repnz
hlt
sub
ficoml
sbb
push
sub
and
and
popa
rorl
out
mov
lods
movsl
test
push
ds
mov
mov
cmp
inc
sub
push
rcl
mov
add
jp
or
decl
and
idivl
push
jb
inc
bound
ja
lahf
rcrb
add
dec
icebp
divl
push
push
push
jne
add
add
in
push
or
iret
xchg
insl
test
enter
fstpt
and
or
or
pop
adc
pop
adc
jbe
add
fcmove
popf
or
mov
add
js
decl
cs
es
fstl
and
sbb
mov
dec
inc
pop
cmp
or
mov
pusha
std
add
xchg
scas
fisubl
enter
xchg
mov
dec
jnp
pop
into
jbe
push
nop
fcmovnb
mov
das
lcall
dec
ds
add
mov
or
inc
icebp
jg
pusha
fld
rclb
mov
and
negb
or
fcoms
add
cld
sub
pushl
insl
add
adc
movsl
push
push
mov
mov
cmp
das
or
test
mov
movb
pop
cmp
scas
mov
cwtl
mov
cmp
cmp
pushf
sarb
out
outsl
cs
loopne
and
xchg
dec
dec
pop
ret
mov
jb,pn
insl
push
adc
sbb
push
push
or
sub
ficompl
lcall
mov
cmp
jmp
ret
jae
mov
jo
xchg
mov
out
push
pop
xchg
add
popl
mov
pop
shlb
mov
push
in
xlat
ret
std
in
mov
add
xchg
pop
sti
shlb
pop
incb
xor
in
sbb
mov
outsb
mov
popf
inc
in
loope
out
add
mov
aad
fs
inc
cs
popf
inc
adc
lcall
xor
xor
or
fs
xchg
or
popf
xor
fimuls
dec
mov
les
mov
aam
xchg
mov
pop
sub
mov
xor
or
cs
ret
push
icebp
push
daa
rorl
cmc
out
pop
push
add
inc
pop
out
push
jl
leave
popa
and
pop
xchg
orb
outsl
adc
xor
push
ret
outsb
push
mov
cltd
in
mov
fimull
xchg
or
mov
mov
out
mov
lcall
popf
in
arpl
cld
push
fdivr
outsl
jbe
jno
cmp
adc
inc
sti
push
fwait
push
aaa
push
test
mov
les
mov
xor
pop
add
incb
fisubrs
pop
loopne
add
cli
add
jno
imull
mov
or
imul
sbb
jecxz
push
pop
cmc
xchg
fsubr
fiadds
mov
roll
popa
or
xor
daa
enter
add
xchg
inc
es
shll
rcll
loope
jle
mov
adc
out
add
mov
loop
leave
cmp
popa
adc
mov
sub
dec
adc
cmp
inc
outsb
insl
add
in
and
push
nop
xor
jge
sahf
test
sbb
fnstenv
pop
mov
mov
adc
dec
mov
adc
xchg
inc
daa
gs
push
xor
pop
pop
scas
jecxz
cmc
fsts
sub
push
cmpsl
add
cmp
sbb
lret
sub
push
or
adc
pop
mov
push
test
pop
pop
xchg
test
pop
sub
arpl
nop
out
sub
scas
mov
sub
inc
scas
pop
jo
mov
mov
mov
mov
fmul
repz
enter
sub
sbb
inc
adc
das
daa
popa
aad
lea
int3
and
cld
pop
push
or
jne
mov
testb
sub
notb
add
and
pop
repz
test
cmpsb
pop
mov
or
sub
dec
rclb
inc
xchg
pusha
jno
dec
xor
adc
adc
add
iret
push
mov
inc
mov
icebp
testb
add
push
pop
imul
pop
arpl
add
daa
push
dec
jp
pop
mov
or
dec
inc
loope
scas
gs
xor
jmp
sbb
cs
cmpsl
sub
out
or
pop
call
add
adc
popf
outsb
cmp
pop
incb
mov
sub
movntq
sarl
jg
jnp
jmp
pop
repnz
dec
add
loope
pop
mov
jp
dec
jnp
add
lods
or
ret
sbb
xor
popf
movsb
pop
sbb
dec
mov
add
shl
cmp
xor
aas
inc
lar
push
mov
pop
cmc
pop
repnz
dec
icebp
mov
test
insb
sub
sub
lret
dec
rcl
jnp
mov
mov
frstor
inc
add
push
sbb
in
mov
lcall
ss
xchg
decl
sub
push
cmp
cmp
lret
pusha
jnp
aam
pop
dec
mov
rorl
fidivrs
loopne
ljmp
in
sbb
mov
xchg
shll
jne
mov
js
pop
test
push
mov
fs
adc
xchg
or
lret
ds
addb
mov
jge
mov
mov
in
filds
pusha
dec
xchg
jae
loope
ret
and
scas
push
add
jmp
sbb
sbb
inc
setne
test
mov
and
dec
pop
testb
cmpsb
cmc
mov
xor
movsl
ret
or
loope
bnd
lcall
mov
mov
mov
push
call
outsl
sahf
or
sub
push
stos
mov
add
in
cmpb
mov
mov
xor
gs
loope
add
xchg
aad
mov
xchg
adc
stos
fucomi
mov
sbb
add
cmp
mov
inc
mov
sbb
pop
shr
pop
push
cld
cwtl
iret
or
inc
add
out
cmp
repz
cmpb
clc
push
cld
mov
push
or
bound
add
mulb
jb
pop
ds
and
add
or
fwait
sub
shll
popa
xor
sub
pop
outsb
adc
out
addr16
arpl
jmp
rcll
sbb
sahf
dec
arpl
shl
clc
dec
leave
cli
jg
mov
and
xor
push
sbb
pop
repnz
jne
mov
rolb
sbb
add
ret
mov
or
pop
xchg
mov
mov
jns
or
leave
jns
add
pop
mov
pusha
dec
cmpb
lods
pusha
lock
jecxz
or
incb
into
add
ss
push
testl
dec
cli
and
mov
test
cmpsb
adc
or
call
rcrl
and
mov
inc
inc
add
addr16
rorb
loop
nopl
sbb
mov
fcompl
adcl
ret
out
sarl
xchg
jae
add
sub
ljmp
sub
or
add
das
add
sbb
ffreep
push
sbb
fdivrl
jne
in
outsl
pop
or
push
in
sti
add
fcoms
movsl
repz
mov
std
dec
add
pop
shrl
cld
pop
aaa
pushf
xlat
lea
or
or
hlt
test
xchg
mov
push
pop
subb
das
cmc
adc
xor
xchg
fidivrl
push
adcl
push
push
xchg
xor
adc
lods
mov
out
int3
xchg
mov
xchg
push
imul
aad
imulb
and
add
jl
mov
and
add
outsb
lods
jb
adc
add
xchg
or
data16
and
mov
cmp
push
daa
and
cmp
outsl
add
test
stos
jle
popf
dec
adc
mov
jecxz
or
popf
cmpsl
adc
in
pusha
inc
jae
or
ja
mov
sarl
mov
sti
pop
ret
mov
push
inc
out
mov
rcrb
mov
dec
test
icebp
stos
cs
idivb
mov
mov
push
ret
or
jns
movsl
mov
mov
push
scas
and
lret
mov
addr16
out
pop
icebp
xchg
mov
and
mov
adc
mov
loopne
add
sub
fisttps
or
push
push
sbb
pop
sbb
fadd
es
or
cmp
dec
mov
stos
add
xor
mov
fiadds
cmpl
cmpsl
pop
scas
xor
fldl
xchg
pop
pusha
popa
imull
pop
inc
fldl
push
fisubrs
mov
push
push
adc
mov
adc
dec
mov
mov
mov
push
xchg
notl
aad
lea
cltd
mov
mov
inc
add
test
xchg
mov
into
mov
pop
gs
inc
movsb
jge
fldt
sub
mov
xchg
js
hlt
jb
adc
add
mov
test
out
inc
aas
push
mov
icebp
call
sbb
test
sub
mov
inc
test
clc
pop
and
lahf
xchg
mov
jmp
aas
fwait
mov
sbbb
fimuls
mov
inc
add
jmp
icebp
push
add
inc
xchg
stos
int
sub
aam
mov
xlat
fwait
push
add
sub
xor
xor
adc
inc
repnz
rclb
inc
pushf
adc
xlat
lock
adc
insb
add
cs
imul
push
pop
test
mov
pop
push
pop
jae
add
out
add
rorl
xchg
in
mov
sti
xor
scas
and
std
addb
adc
pushl
fiadds
lds
mov
sub
pop
xchg
or
or
push
mov
mov
dec
adc
lods
pop
mov
aad
mov
jp
pop
xor
test
add
sub
jae
cmc
jb
loop
mov
xchg
mov
adc
push
cmp
andl
mov
pop
inc
mov
les
in
jb
ljmp
call
xor
jns
adc
insl
mov
inc
std
sub
lock
pop
pop
adc
cmp
inc
pushf
inc
enter
cmpsl
out
mov
out
mov
push
es
nop
mov
or
sbb
add
and
inc
cltd
pop
add
sbb
mov
dec
fs
out
and
add
xchg
jp
jne
jge
add
or
pop
nop
xor
imul
inc
sub
orb
cld
add
sarb
inc
stos
mov
roll
ror
rcl
xor
jmp
insl
mov
push
jmp
pop
push
mov
sub
enter
fsubrl
sub
test
in
out
mov
dec
loopne
xchg
xor
sbb
add
jo
cmpsb
mov
mov
adc
dec
stos
sub
out
mov
fisttps
mov
xor
aas
les
add
or
mov
cs
bound
mov
jmp
mov
popf
fisubs
push
test
mov
gs
xchg
loopne
popf
and
das
stc
push
mov
lea
fnstsw
or
dec
ss
mov
adc
adcl
cmp
loop
popa
and
jo
lahf
pop
lcall
mov
and
dec
mov
pop
jg
popf
out
and
mov
loop
lahf
sbb
adc
imulb
xchg
adc
sbb
out
and
xchg
xor
mov
push
jns
add
pop
sti
das
sar
and
add
test
aam
lret
push
pop
adc
dec
push
mov
add
mov
fdivr
fistpl
and
call
adc
cmc
jbe
rcl
xchg
add
popa
sti
lret
or
mov
mov
xchg
inc
jecxz,pt
and
popf
inc
or
dec
rcr
popa
subb
fstl
icebp
sbb
shlb
pop
minps
in
add
and
mov
pusha
and
inc
or
cmp
or
jl
jmp
sahf
mov
decl
add
dec
insb
jle
jmp
push
fs
outsb
inc
add
add
js
cwtl
jns
sub
push
and
jno
add
mov
lea
sbbb
pop
je
jmp
sub
loope
adc
imul
notl
addb
mov
repnz
push
mov
mov
mov
lds
pop
push
outsl
sysret
movsl
mov
pop
xlat
gs
es
push
icebp
sbb
xchg
mov
add
mov
mov
lret
mov
fsts
outsl
cli
bsr
fsubr
pop
insb
mov
push
cmpsl
in
jne
xchg
cmp
jbe
inc
dec
cwtl
mov
add
sub
fsts
ss
mov
push
jmp
sub
cmp
mov
loopne
xlat
insb
pop
and
xor
push
push
lea
mov
xor
jne
add
sti
adc
leave
pop
pop
cs
add
sub
adc
lds
mov
push
xor
out
sbb
cmpsb
pop
lcall
mov
scas
push
test
in
and
bound
sbb
das
aad
push
mov
roll
data16
dec
lcall
and
jp
mov
add
test
mov
movsl
adc
jg
or
cli
push
icebp
add
xorl
in
int3
repz
push
cld
pop
mov
or
lret
mov
cmp
jl
daa
mov
inc
inc
dec
add
push
mov
dec
pop
and
add
push
xor
jecxz
pop
pop
in
cs
add
loop
push
xchg
and
jl
gs
mov
adc
mov
loop
dec
sbb
in
dec
js
pop
jns
aam
scas
repz
mov
loop
xchg
scas
test
mov
jecxz
cmc
test
mov
add
mov
or
dec
jnp
jae
add
pop
sahf
out
mov
or
push
popa
jne
bound
ja
cmp
je
iret
mov
jb
dec
lret
xor
bound
add
inc
neg
testb
outsl
ret
adc
pop
sbb
mov
mov
cmp
popf
jecxz
test
lcall
aaa
cmpsb
shll
sub
and
imul
add
std
xchg
shrl
xor
cmp
mov
lods
inc
sub
xlat
sbb
aam
mov
jbe
or
pop
test
in
es
arpl
fdivrl
ljmp
addr16
adcb
push
cmp
mov
repnz
scas
jge
sbb
cmp
mov
jle
fdivrl
adc
fisubrs
bound
fstl
dec
int
inc
pushf
jo
push
dec
push
shll
adc
push
mov
inc
sbb
lahf
insl
and
adc
pop
ljmp
dec
jnp
or
jo
or
popf
jne
jbe
mov
jo
lods
loope,pt
adc
add
repz
adc
pop
push
into
and
cmp
cld
subl
push
add
push
lods
jp
filds
xchg
icebp
test
mov
popf
pop
mov
jge
inc
add
mov
fistps
fnsave
pop
inc
add
fistl
shll
mov
pop
sub
outsl
xor
xchg
popf
fistl
xchg
jno
mov
lret
lock
lods
int3
inc
mov
dec
xor
jns
icebp
roll
sbb
sub
mov
mov
mov
xor
pushf
push
fdivrl
aaa
mov
jo
add
jns
add
pop
fisubl
and
push
jmp
add
pop
add
rcrl
je
popa
mov
push
bound
cld
das
mov
cmpsb
dec
dec
sti
aaa
mov
cltd
pop
fcoml
popf
dec
lret
xchg
out
mov
mov
cmc
pop
adc
addr16
and
or
mov
enter
push
xorl
movsb
scas
nop
adc
pop
add
mov
xchg
jecxz
sti
data16
je
ja
sbbb
jne
test
sub
scas
add
mov
push
outsl
push
xor
popf
movsl
xor
mov
je
or
hlt
rcr
xchg
add
pop
mov
jle
test
xor
xlat
jge
push
inc
xor
jno
pop
cld
sub
aaa
push
mov
imul
mov
dec
fwait
int3
xor
shlb
ja
push
rcrb
lds
mov
mov
cli
pusha
popf
fsts
cmp
popf
jg
lea
dec
fs
adc
inc
jecxz
inc
lahf
pop
push
cwtl
rcll
pop
mov
orb
into
jg
out
mov
les
add
sub
inc
inc
sahf
push
dec
mov
push
adc
cmpsb
xor
adc
pusha
add
lret
testl
mov
adc
repnz
xchg
mov
out
and
and
jne
xchg
clc
sbb
push
jg
dec
pop
add
push
hlt
cli
mov
add
stos
aam
sbb
push
pop
push
adc
ljmp
xor
add
xchg
test
dec
sbb
nop
stc
inc
mov
aad
imul
sub
inc
mov
jecxz
fwait
xchg
mov
dec
adc
mov
push
push
push
pop
jmp
push
stc
inc
or
call
insl
mov
fists
xchg
adc
and
dec
fwait
inc
dec
ljmp
or
mov
dec
mov
fistl
dec
sbb
push
push
mov
jmp
cmp
push
roll
lcall
stos
jp
daa
lret
jl
cmp
pop
mov
daa
jmp
bound
aaa
adc
sub
adcl
sub
or
mov
addr16
mov
add
lret
setb
imul
mov
daa
push
mov
push
add
mov
pusha
add
frstor
mov
loope
add
sbb
bound
mov
dec
push
subl
imul
lds
xchg
dec
sti
fxch
out
sub
or
mov
push
xor
adc
sub
mov
mov
imul
repz
test
jno
fldcw
dec
cmp
cmp
add
daa
mov
add
xchg
fs
cmp
mov
ds
push
or
and
add
cmpsl
clc
adc
test
repnz
add
inc
imul
ds
lock
mov
or
enter
int3
xchg
mov
sub
push
xlat
test
inc
inc
mov
adc
inc
cmp
aaa
pop
or
cltd
mov
in
popf
cmp
inc
jno,pn
mov
adc
jno
and
ds
out
shlb
cmp
and
lcall
popl
xchg
arpl
cltd
mov
and
add
push
push
pop
and
testl
mov
loopne
or
cmp
push
mov
cmp
adc
das
enter
cmp
cwtl
movsb
xchg
pop
add
mov
mov
pop
xchg
mov
pop
sbb
ljmp
sbb
sbb
loop
pop
mov
jmp
call
dec
sti
iret
loop
mov
cmpsb
xchg
addr16
mov
xchg
xchg
out
call
mov
mov
mov
or
jmp
int
mov
mov
mov
mov
xor
jge
outsb
stc
leave
mov
aad
daa
fdivrs
sub
shr
and
rcrl
loope
sub
adc
lods
sub
call
adc
dec
push
jmp
sub
into
push
or
gs
out
imull
add
push
mov
mov
adc
add
lods
sbb
inc
add
jp
and
and
pop
jnp
clc
xchg
jp
or
mov
sub
jl
lea
push
mov
aam
fcoml
xchg
loopne
or
pop
mov
sbb
fcmovnbe
add
mov
mov
xchg
push
lock
xchg
add
push
inc
mov
jge
inc
pusha
lods
leave
jo
add
insb
mov
mov
leave
inc
ret
push
repz
pop
and
dec
jg
mov
mov
mov
pop
jmp
sbb
jb
gs
jne
in
push
mov
lcall
faddp
mov
out
add
int3
ss
push
int3
mov
lret
popf
adc
push
dec
mov
push
mov
dec
mov
adc
cwtl
push
sbbb
jmp
add
jne
pop
inc
testl
pop
js
inc
add
pusha
mov
pop
fidivrs
xor
sbb
test
cmp
xor
fwait
mov
shr
dec
lods
std
pop
mov
stos
call
ds
dec
popa
push
sub
fwait
inc
lds
subb
js
push
test
and
cmp
pop
push
mov
inc
addr16
dec
pusha
pop
add
and
fwait
push
pop
pop
or
jbe
rcrl
xchg
into
pop
inc
loop
das
mov
xlat
mov
cwtl
xchg
loop
add
sub
loopne
and
jns
outsl
dec
push
dec
push
mov
mov
addb
mov
push
adc
sub
adc
fldcw
add
sti
in
popa
mov
or
clc
dec
roll
out
xchg
adc
test
rolb
mov
add
mov
adc
out
je
add
cmp
add
testl
fldcw
cmpsb
dec
add
mov
pop
and
daa
pop
dec
add
mov
inc
mov
mov
push
xor
or
sub
add
mov
jecxz
mov
ljmp
pop
adc
mov
xchg
mov
add
sbb
out
pop
out
test
add
testb
arpl
mov
xchg
cmp
cmpsb
xchg
push
testl
push
mov
or
in
push
push
mov
enter
or
out
push
xchg
stc
add
sbb
int3
nop
iret
add
in
pop
mov
test
das
hlt
fdivl
mov
adc
in
mov
cmp
push
lahf
adc
sub
mov
adc
les
outsb
mov
add
dec
loop
nop
or
daa
or
sbb
jle
sbb
lahf
cltd
int
imul
sbb
dec
jmp
inc
mov
or
ud2
cmp
jo
push
bound
inc
int
sub
ficomps
cs
and
ja
ret
push
insb
pop
cmpb
dec
jmp
in
in
xchg
fstpl
xchg
add
mov
xchg
mov
repnz
rolb
push
lock
mov
sarb
popa
mov
fs
out
mov
or
xorl
push
ja
sbb
insl
ficompl
in
outsb
fwait
xchg
test
pop
jmp
repnz
push
xor
out
in
sarb
mov
sahf
push
clc
add
enter
pop
movsb
mov
or
or
and
popa
pop
xchg
cmpsb
and
lret
jl
das
mov
adc
pop
or
loope
test
jecxz
add
int
fdivrs
add
pop
fs
push
jne
insb
push
pop
cmc
outsb
mov
add
jae
xor
sti
imul
mov
push
les
pop
pop
cmpsb
pop
mov
xor
es
aam
or
in
jo
dec
daa
into
mov
push
call
fnstcw
jge
ljmp
sub
dec
push
cmc
jp
xchg
fcmovnu
shlb
add
inc
sti
push
loop
mov
and
sbb
adc
rcl
add
imul
sbbl
cld
mov
in
mov
jmp
sar
popl
scas
insb
push
mov
xchg
xor
testb
xor
repnz
lock
ljmp
dec
push
cmp
repz
pop
mov
sub
adc
pop
sub
sbb
loopne
jl
dec
pop
jne
push
cmp
sbb
inc
sbb
inc
jmp
enter
xor
cmp
push
ret
and
mov
ss
or
shll
adc
jnp
bound
adc
loope
les
pop
push
push
mov
or
inc
adc
or
rol
mov
xor
inc
and
xor
push
aam
dec
or
shll
add
int
mov
sti
ja
add
pop
add
jb
dec
repz
add
ds
fs
leave
addl
mov
loopne
or
push
pop
jbe
jae
add
inc
addl
xor
hlt
andb
lock
sub
inc
popl
cmpl
lea
or
push
test
imul
pop
lret
pusha
adc
jnp
jg
jae
jmp
jae
lods
fsubrl
jo
and
and
outsb
iret
jo
aas
and
xorb
and
out
pop
jno
mov
and
aam
and
repz
dec
jmp
negl
orb
add
inc
out
sub
add
addr16
cmp
cmp
lahf
inc
cmp
pop
mov
xor
and
cmpsb
mov
lock
loop
fs
hlt
inc
push
inc
xor
xor
and
testl
hlt
and
sbb
out
fbld
pop
mov
sti
xor
mov
test
mov
es
rolb
xor
test
fwait
mov
inc
xor
nop
and
fsubrp
xlat
sbb
ljmp
dec
fdiv
roll
adc
pusha
cmp
sbb
sbb
mov
xlat
bound
and
ss
add
cmp
dec
mov
jecxz
bound
push
mov
cwtl
aas
mov
inc
ret
jo
mov
ret
mov
and
or
xor
popa
cmp
inc
sbb
cwtl
je
ljmp
mov
jno
fstl
ror
and
add
insb
sub
ficompl
mov
out
faddl
dec
mov
orl
sbb
add
add
ss
sbb
or
add
mov
sbb
stos
jns
mov
adc
add
adc
and
xchg
movsl
popf
add
xchg
rcll
in
xchg
clc
mov
outsl
cwtl
stos
jle
in
pop
iret
push
and
pop
push
popf
outsb
mov
scas
test
or
fcmovbe
and
cmp
int
jae
add
jnp
cmpsb
push
xchg
adc
lahf
hlt
rcll
jno
lock
iret
inc
clc
ret
pusha
or
idivl
mov
pop
shrl
shlb
adc
ljmp
xor
or
xlat
mov
cltd
arpl
cmpsb
add
inc
rorb
rcll
ret
movsl
push
xor
jp
or
sbb
inc
imul
add
add
outsb
mov
test
mull
lcall
pop
push
xor
add
xchg
dec
addb
mov
popa
je
push
cmpsb
push
fstl
sub
lods
stos
or
sbbb
inc
movb
in
scas
and
add
jb
stos
shlb
jle
scas
add
jl
outsl
clc
cli
jb
out
add
icebp
pop
jp
sub
sbb
or
ret
fs
pop
mov
hlt
mov
push
mov
mov
enter
and
fiadds
or
pop
clc
xor
outsb
insb
mov
cmp
inc
add
lods
icebp
out
cmp
pop
stc
loopne
shrl
inc
mov
and
xchg
pop
add
sbb
int3
addb
jge
ret
and
mov
outsl
cs
mov
push
leave
xchg
cmp
aaa
sub
es
mov
mov
push
cld
lds
int
add
or
add
insb
sbb
add
push
outsb
aam
xor
fildll
addb
or
and
sbb
adc
movsl
test
shll
add
lods
mov
push
add
bound
xor
cli
jp
imull
mov
adc
push
test
pop
test
cmc
pop
push
roll
xor
jp
pop
lock
fisubs
mov
mov
push
add
mov
xchg
sbb
and
xchg
mov
popl
cmp
mov
das
jo
outsl
testl
or
xchg
iret
push
testl
add
pop
dec
in
popf
push
add
xchg
bound
and
jb
xchg
add
ror
xlat
aas
xor
mov
sub
int3
cmp
ja
test
dec
inc
lret
sub
out
iret
lret
or
pop
rcll
nop
dec
adc
fldt
mov
stc
and
adc
add
jbe
cli
lahf
lcall
test
jmp
cmp
add
je
mov
mov
fcomps
in
pusha
sbb
or
in
and
push
rclb
jo
xor
inc
push
xorb
iret
add
dec
sarb
lret
fcmovnbe
es
fisubs
scas
push
jg
sti
or
inc
sub
and
and
and
lahf
shl
or
pop
xchg
fistpl
jecxz
fsubrs
xor
adc
movsl
cmp
lsl
dec
shl
faddl
int
test
cmpsb
add
imul
xchg
iret
rol
insb
stos
adc
fs
addr16
fdivs
sbb
stos
or
scas
rcrl
push
and
enter
pop
inc
push
inc
pop
pop
adc
mov
sarb
add
insb
and
cmp
mov
and
rolb
xchg
in
test
add
cmpsl
aam
cmp
xor
add
loopne
pusha
insl
adc
jp
sbb
jno
jo
sub
notl
inc
fs
cmpl
adcb
jno
and
add
add
cmp
jecxz
sbb
lock
stc
in
adc
adc
add
fwait
sbb
sbb
repnz
jmp
sbb
sarb
lock
cmpb
call
pop
cmpsb
outsl
inc
push
or
push
and
arpl
rolb
lcall
paddsb
cltd
push
add
cmp
and
test
rol
dec
mov
push
xchg
xor
sbb
inc
add
mov
cmp
push
mov
xor
and
xchg
push
insl
test
test
rolb
movl
and
cmp
pop
nop
sub
loope
push
movsb
stc
push
add
stos
testb
out
push
sbb
and
imul
lods
jbe
add
ja
sub
xor
push
mov
or
imul
push
sub
leave
out
sub
mov
ljmp
or
mov
push
lock
or
test
shlb
xorb
imul
adc
inc
nop
mov
pushf
xor
lcall
add
lcall
fnstenv
or
xor
mov
jbe
pushf
movsb
pop
inc
push
or
pop
jecxz
inc
inc
or
sbb
shl
je
add
int
jge
jbe
js
xor
ja
xor
pop
xor
inc
mov
iret
mov
out
andb
xor
gs
mov
ljmp
into
filds
adc
aam
ficompl
jb
outsb
andb
mov
cmp
cmp
xchg
add
dec
xor
xchg
and
push
dec
xor
add
pop
xchg
xor
adc
test
mov
mov
or
jle
lods
stos
testb
add
data16
adcl
ret
or
out
data16
nop
add
jl
inc
sub
incl
dec
mov
or
cmovg
aaa
and
xor
sbb
movsl
or
sub
fnsave
xchg
aaa
cmp
pop
notb
in
gs
xor
mov
jbe
push
mov
lock
xchg
test
scas
addb
lcall
push
mov
xlat
jle
dec
add
inc
pop
pushf
dec
push
lock
jne
sbb
and
adc
dec
add
data16
ret
inc
test
xchg
and
outsb
sub
pop
es
jl
dec
add
pusha
leave
mov
sub
push
rcrl
scas
aam
inc
fidivrl
bound
out
add
ljmp
mov
mov
sub
shrl
mov
inc
pop
arpl
mov
mov
das
add
stos
mov
mov
and
cmp
mov
jno
add
push
sub
repnz
leave
pushf
gs
xchg
hlt
adc
xchg
jmp
in
test
or
inc
and
into
xchg
aam
fcmove
bound
mov
arpl
fnstsw
orb
das
incb
jg
aas
inc
push
add
jno
pop
out
jbe
nop
inc
inc
cmp
dec
nop
loopne
dec
xlat
mov
imul
mov
call
add
lods
rclb
rcrl
pop
add
xlat
in
xchg
mov
and
jne
xchg
jns
sub
add
sti
and
xchg
test
js
cmp
push
mov
sub
add
repz
xor
ficoms
ss
pop
pop
imul
in
nop
rol
lods
aam
fisubl
movsb
aam
mov
or
popa
sbb
cmp
adc
lds
ret
xchg
ficoml
xor
push
jecxz
or
or
jmp
pop
movsb
add
xchg
movsl
adc
pusha
shlb
pop
xor
arpl
pop
divl
cwtl
cmpsl
push
jg
mov
arpl
or
sub
mov
adc
mov
dec
dec
xor
mov
cli
shlb
inc
push
scas
mov
arpl
mov
dec
xor
pop
push
fdivr
scas
add
and
insl
jo
mov
pop
mov
test
cwtl
add
mov
je
sub
add
shlb
mov
and
nop
cld
mov
and
and
outsb
xor
scas
enter
sahf
icebp
lret
aaa
pusha
add
inc
dec
aam
ret
xor
mov
shlb
mov
or
sbb
lret
add
subb
add
pop
push
adc
dec
add
test
fnstenv
test
add
das
jae
and
push
into
fimull
out
push
addl
mov
scas
aam
fnsave
outsl
mov
adc
cmp
fs
inc
mov
aad
xchg
clc
mov
mov
sbb
cmpsl
cld
pop
leave
inc
fadd
ret
fdivs
sbb
les
mov
out
xor
push
call
xor
dec
xor
pop
add
dec
les
aam
mov
jp
fsubr
push
data16
fadds
in
pusha
push
and
sbb
add
test
movl
and
mov
dec
shrl
out
dec
mov
repz
pop
inc
jo
loopne
fs
test
push
cmpsb
sub
addb
fisubrs
jl
imul
insl
in
addr16
add
int
std
loop
push
add
fucomp
push
cs
dec
pop
sbb
lcall
add
inc
sahf
scas
punpcklbw
je
mov
push
mov
ret
loope
sbb
sbb
mov
push
lock
inc
add
adc
add
adc
xchg
aaa
sti
fadd
addl
cmc
pop
add
push
add
or
rcrb
push
in
sub
sub
push
cli
mov
faddl
xchg
xchg
fldenv
enter
dec
adc
shl
jg
sbbb
inc
arpl
push
dec
pop
adc
into
enter
xchg
inc
cwtl
outsl
xor
jb
cmp
mov
das
add
cmp
xchg
adc
pushf
jl
add
jl
mov
jecxz
sbb
in
adc
aam
jp
adc
clc
xchg
sub
inc
mov
popf
xor
dec
mov
add
or
push
inc
fstpl
cmpsl
push
pop
addb
xchg
and
dec
add
popf
adc
scas
je
dec
mov
sar
cs
aad
jge
sbb
or
push
push
std
mov
pop
mov
add
and
push
sbb
mov
rep
xchg
lret
outsl
loopne
mov
add
push
lahf
mov
and
xor
add
vmread
push
ret
fcoml
add
jp
add
fwait
inc
or
lcall
add
rclb
mov
jmp
js
shll
ltr
jae,pn
pop
inc
jl
add
pop
cmpl
pop
and
mulb
dec
fisubrl
mov
add
das
in
add
out
cmp
cmp
scas
adc
mov
call
jnp
mov
ret
test
enter
add
das
adc
imul
pop
add
int
or
cld
fmull
aad
pusha
fdivl
out
popf
pop
sbb
ret
adc
out
sbb
hlt
add
sub
cmp
xchg
rorb
jbe
cmp
call
pop
in
sub
inc
fs
or
repnz
xchg
mov
daa
add
mov
add
js
push
add
cltd
lock
add
sti
add
jg
lret
inc
add
xor
outsb
insl
pusha
rclb
jecxz
ja
addb
jne
das
movsb
sbb
cmp
nop
mov
sub
cmpb
push
test
or
add
xchg
mov
jnp
add
sbb
add
cli
scas
sub
jnp
adc
and
int
gs
loopne
es
push
sbb
xchg
xor
jg
shlb
mov
jne
imul
fnstsw
lock
inc
int3
mov
ret
sahf
aad
jno
cwtl
shl
and
push
lcall
out
pop
push
scas
popf
aaa
mov
mov
and
pop
add
out
insl
xor
sub
push
addl
pushf
sub
out
sbb
dec
sbb
dec
xor
andb
add
call
cmp
mov
into
add
push
mov
add
xchg
dec
add
mov
les
aam
mov
movsb
add
out
mov
cmpsl
or
scas
ficoms
fs
jo
xlat
add
inc
mov
add
adc
xchg
roll
mov
cmc
inc
in
sar
cld
ds
push
or
push
push
roll
outsl
jg
push
int3
fistps
add
jae
inc
loopne
jno
add
xorb
cmp
mov
dec
int3
sub
clc
arpl
or
sbb
push
pop
dec
dec
movb
sub
fwait
out
push
cmp
inc
or
in
push
test
jae
inc
sbb
add
dec
js
add
sbb
pop
jbe
add
mov
cmp
mov
enter
negl
jne
and
pushf
orl
punpckhwd
or
jno
add
ds
leave
pop
dec
and
sub
inc
repz
lahf
xlat
add
rolb
xchg
jo
push
shr
add
jnp
incl
jl
cmp
mov
loopne
jle
xchg
mov
or
add
movsb
push
push
push
dec
add
adc
call
cld
sbb
leave
cmpsb
insb
inc
inc
jg
add
xor
mov
dec
and
xchg
pop
ret
jae
mov
add
mov
mov
pop
xor
pop
movsl
xchg
cs
add
jae
sub
mov
popf
cmp
adcb
add
cmp
push
es
or
jmp
xchg
loope
leave
sbb
std
adc
cltd
ret
es
add
ljmp
pop
jg
xlat
and
movsl
dec
pop
rcll
cltd
xor
inc
int3
shlb
insl
mov
sbb
add
loope
addr16
jle
mov
leave
cmp
mov
cmp
sbb
gs
dec
push
lahf
jecxz
xlat
push
add
gs
cwtl
cmovnp
add
or
and
jo
cmpsb
mov
push
inc
sub
mov
dec
add
shrl
lock
es
mul
mov
push
add
repnz
fs
sub
sub
lock
imull
push
insb
mov
pushf
mov
cmc
mov
imul
add
sub
iret
pmulhuw
xor
in
pop
cmp
add
notb
sub
in
fistpl
stos
aad
add
mov
inc
push
lock
outsl
fsubs
push
cmpsb
pop
mov
push
jge
mov
daa
mov
add
shll
or
syscall
pop
jo
shr
mov
imul
cmp
xor
jmp
xchg
xchg
mov
clc
sbb
icebp
xor
add
add
jnp
jne
rcrl
mov
add
pop
fcomip
mov
pop
push
in
mov
das
out
pop
pop
xchg
mov
push
les
insb
jmp
cmpsl
mov
addb
sub
in
add
mov
add
push
insb
xor
xchg
cmpsb
test
aas
mov
xor
add
sub
lret
sbb
adc
addb
inc
push
ret
pop
add
outsl
ret
cld
cmpsl
xorl
jb
ljmp
xchg
pop
aam
lea
add
daa
push
lock
push
jb
add
sub
shlb
jbe
or
xor
jae
jg
sbb
jmp
xor
mov
insl
jne
cmpsl
in
and
xlat
out
push
aas
pop
mov
xchg
lret
jmp
cmp
or
in
add
push
push
inc
cmp
aas
pusha
mov
mov
push
roll
mov
repz
add
out
push
fcomi
adcl
mov
negb
ja
jp
pop
nop
inc
add
sub
jecxz
add
xchg
jl
sahf
cmpsl
repnz
js
out
jg
cld
add
leave
fildll
sbb
pop
add
xor
pop
in
add
inc
out
mov
add
mov
test
loopne
add
sbb
cmp
popf
repnz
dec
sahf
imull
add
cmp
pop
jl
shlb
shlb
bound
cld
out
aad
scas
add
js
add
sbbb
cmp
add
adc
out
jmp
dec
in
mov
dec
jbe
or
add
popa
loopne
add
xchg
insb
push
pushf
adc
dec
ret
popa
adc
push
or
xor
std
in
rorl
add
jae
cmp
loop
sub
mov
adc
mov
add
cmc
lock
jle
nop
pusha
add
test
jo
je
outsb
pop
nop
add
mov
cmp
add
shll
jno
mov
pop
mov
test
or
add
inc
add
aas
jnp
add
sbb
pop
imul
addl
mov
xchg
and
add
jb
imul
or
clc
push
fsubrp
cmpl
dec
sbb
les
add
repnz
ja
cld
mov
add
pop
addl
mov
shlb
cmp
roll
daa
cmp
sub
mov
ficomps
ret
and
mov
ret
mov
gs
add
repz
pop
sub
test
ret
icebp
subl
add
mov
xchg
jnp
cmp
pop
jb
xchg
cld
mov
fmuls
gs
nop
into
fiadds
mov
pop
icebp
cs
popf
ja
pop
inc
mov
pusha
cmp
faddl
stos
fwait
cld
sub
jae
int3
sbb
and
testb
add
in
lock
cmp
leave
inc
addr16
fcmovne
add
test
jnp
add
push
xor
or
adc
add
insl
xchg
mov
dec
or
daa
imul
sahf
sbb
add
rcll
imull
jne
shrl
dec
add
rcrl
testb
scas
xchg
sub
idivl
inc
inc
add
inc
stos
dec
repnz
add
js
push
push
jge
neg
sbb
sub
xor
add
sub
add
mov
jle
cltd
icebp
mov
push
push
int
sbb
pop
cmp
aas
in
xchg
cltd
ljmp
and
cmp
mov
lcall
loop
mov
clc
add
popf
jmp
fsubrs
pop
jecxz
fsub
inc
mov
add
push
es
gs
and
add
jne
fcoms
or
cwtl
js
sbb
addb
mov
sahf
ficoml
mov
fisttpl
nop
je
sbb
mov
mov
xchg
hlt
pusha
adc
clc
ds
and
push
xchg
in
add
ret
xchg
xor
stc
mov
repz
add
sub
out
adc
add
dec
mov
and
filds
jb
out
cmp
sbb
mov
and
xchg
mov
pop
sahf
mov
int
aam
ds
lods
add
xor
sbb
xor
dec
xlat
lods
lds
add
xchg
rorb
adc
testl
nop
add
sub
and
rorl
data16
mov
add
or
incb
push
or
xchg
push
test
iret
inc
cmp
fpatan
push
add
rol
push
push
push
iret
add
cmp
mov
xchg
pop
dec
cmp
pop
push
negl
mov
fldl
pop
adcb
jl
cmp
push
fisubrs
nop
call
cs
repnz
xchg
sbbl
sub
pop
bound
jle
int3
add
dec
sbb
inc
xchg
outsl
jb
dec
cmp
add
xor
push
andl
pop
mov
pop
scas
push
int3
push
fsubs
sbb
pusha
xchg
rcr
inc
add
push
mov
add
int
mov
xchg
xor
pop
sub
inc
jge
enter
pop
mov
sahf
test
popf
adc
repz
dec
inc
and
add
adc
cld
add
aas
mov
add
notb
fisubrs
add
pusha
xor
push
add
add
mov
ljmp
adc
lock
cmc
je
clc
xchg
repz
sti
push
xor
jmp
scas
and
lret
push
add
add
jle
adc
inc
jns
and
rolb
int
mov
add
mov
fisubrl
jae
add
mov
cld
shrb
xchg
fildl
add
jecxz
sbb
mov
inc
into
cmpsb
add
jge
inc
push
xchg
sbb
add
cltd
xor
pushf
sbb
shlb
lock
rolb
pop
imul
adc
or
mov
pop
push
push
add
add
arpl
hlt
mov
xchg
pop
aad
jmp
jge
sbb
in
inc
test
add
cmp
xchg
repnz
xor
xchg
into
inc
pop
movsl
mov
js
adc
pusha
jle
xchg
xchg
add
jl
les
psraw
push
sbb
lods
adc
fcomps
js
xchg
mov
pop
add
and
dec
ret
sbb
push
loop
cli
cld
push
lods
inc
add
lcall
aas
fsubr
fbld
add
sbbb
cmp
inc
jnp
add
cmpb
add
pushf
adc
ret
test
add
ret
add
add
xor
lods
inc
imul
dec
dec
add
fists
add
jl
add
stos
dec
loope
call
inc
fidivs
cwtl
add
cmp
inc
pop
sbb
xchg
notl
repz
add
mov
cwtl
std
add
dec
dec
mov
cltd
jecxz
or
pop
cmp
addr16
adc
sub
gs
aad
mov
push
popa
lock
clc
lcall
push
sub
pop
pop
jnp
loopne
push
cltd
mov
cmp
ret
pushl
jne
mov
call
insl
push
in
fimull
adcb
mov
addr16
fadds
popf
insb
xor
add
cmpsl
call
clc
mov
add
sbb
mov
add
xchg
xchg
mov
add
mov
mov
pop
rolb
jnp
jecxz
lods
shl
adc
pop
inc
sar
add
add
lret
mov
jo
cmp
outsl
xchg
insb
aam
push
fwait
lock
mov
add
jne
pop
xor
cmp
cli
movsl
add
popf
and
or
clc
inc
je
add
out
stos
or
or
add
es
out
adc
aaa
ja
add
adc
movzbl
sarb
add
pusha
shl
xchg
ljmp
or
andb
mov
cmpsl
shrb
imul
aas
test
xchg
push
test
jl
xorb
testb
cli
lar
pop
out
dec
mov
pushf
jnp
mov
nop
addb
inc
or
sbb
stc
mov
in
addr16
mov
or
dec
insl
std
add
lcall
cmp
test
pop
sub
mov
sbb
or
shl
flds
pop
inc
jle
pop
mov
sub
jns
add
push
inc
xchg
xorb
mov
add
std
inc
sub
imul
sbb
dec
and
adc
add
mov
dec
rcr
pop
add
das
subl
orb
mov
repz
imul
jecxz
adc
in
data16
push
mov
mov
fucomi
call
mov
jge
sbb
out
fisttps
add
test
adc
xchg
je
add
fstl
push
in
rclb
sub
mov
loop
jne
inc
add
and
or
sarb
add
into
lods
cli
sbb
cltd
bound
mov
mov
mov
ret
xor
and
inc
push
inc
push
test
in
loopne
mov
sar
out
mov
aam
push
xchg
dec
sub
mov
rcll
push
call
roll
popf
clc
inc
sbb
pop
ds
fyl2x
imul
iret
mov
movsl
xlat
add
cli
cmp
and
add
int3
dec
inc
popf
daa
ficoml
mov
add
lods
les
negb
ret
jge
sar
int
or
add
mov
xor
mov
lret
std
add
mov
mov
cli
push
dec
test
mul
mov
mov
int
es
mov
enter
insb
popf
in
stos
mov
subl
je
inc
shll
adc
push
out
lcall
and
imul
and
int3
push
addr16
movsb
lock
into
or
and
aaa
arpl
shrl
cwtl
inc
add
aam
ja
rorb
push
roll
les
add
add
dec
push
pop
push
push
pop
popf
pop
and
sub
xor
add
aas
xor
and
js
imul
loope
mov
test
loopne
dec
dec
arpl
int3
pop
cltd
push
add
sbb
dec
dec
cmp
repz
adc
arpl
fadds
add
dec
pop
jecxz
iret
mov
xchg
std
xchg
cwtl
push
das
shrl
in
dec
scas
mov
jp
orb
cwtl
add
jbe
add
int
mov
xorl
add
mov
jl
pop
adc
adc
cmp
or
adc
inc
pop
int
icebp
mov
in
lcall
rolb
xor
lods
pminsw
pop
out
push
lock
psrlw
pop
add
xor
mov
cmp
sbbl
cmc
cmpsl
lds
loope
or
or
or
je
inc
hlt
push
dec
and
ljmp
sar
sbbl
in
xchg
pop
cld
add
fbstp
insb
shlb
xlat
aad
add
or
sbb
outsl
jbe
cmp
push
sti
mov
push
ficoml
leave
cmpsb
sbb
insb
mov
cld
xchg
cmp
mov
test
movaps
in
add
pop
sub
cwtl
or
adc
push
adc
hlt
add
addl
out
add
sub
push
push
jo
dec
add
mov
sub
sub
outsl
mov
test
call
or
in
out
jmp
aas
dec
push
mov
xchg
data16
mov
jmp
imul
ror
aas
inc
shlb
jo
mov
out
int
mov
iret
psubd
nop
mov
mov
mov
scas
clc
addb
mov
lods
lea
sti
hlt
addr16
dec
adc
add
jecxz
jns
jl
ds
fs
lods
leave
cmp
movl
push
jle
jbe
ficomps
and
add
xor
das
cmpsb
xorb
add
adc
cmp
aaa
into
movsb
or
daa
dec
pusha
add
sub
fdivrs
and
jp
rolb
adc
in
dec
sub
sarl
aas
jl
push
repz
movsl
loop
dec
mov
aad
pop
int
cmp
mov
je
or
lcall
repz
add
inc
ljmp
jecxz
sbb
andb
jnp
mov
cmp
add
adc
jg
pop
cmp
dec
push
mov
cmp
cmp
lds
jae
hlt
aam
out
and
inc
loop
call
cmp
clc
push
pop
adc
jns
aas
andb
push
or
sar
out
ret
and
jecxz
push
andl
pop
adc
add
ret
adc
mov
xor
pusha
stos
pop
xchg
or
and
add
mov
pop
out
imul
cmp
jmp
add
scas
mov
add
push
inc
xchg
xor
add
in
out
push
mov
test
popf
arpl
xchg
shlb
add
push
inc
add
mov
add
repz
xchg
je
xor
add
sub
jl
dec
dec
sub
mov
in
and
pop
push
lcall
movsb
adc
rcll
lock
cmp
xchg
add
jmp
in
imul
test
in
jb
add
mov
icebp
mov
mov
fildll
add
adc
loopne
push
xor
lds
cmpsb
jle
je
jnp
add
das
xorb
or
out
adc
push
divl
sbb
je
cmc
mov
inc
rclb
push
sbbl
add
mov
fs
push
add
je
cmc
es
inc
hlt
rorb
aaa
fwait
xchg
cmp
or
sub
imul
int
and
pusha
and
mov
push
mov
add
inc
ret
cmpsl
cmp
aad
ret
jl
inc
stos
add
sub
cmc
pop
inc
js
daa
adc
add
mov
ja
sbbb
daa
fcompl
loop
inc
nop
int
add
out
dec
ret
mov
imul
push
xchg
les
add
in
or
int3
ret
jecxz
and
mov
repz
loop
fsubrs
loope
or
enter
sbb
cmp
mov
push
push
xor
mov
clc
add
sbb
call
add
or
mov
sub
clc
lea
xchg
jns
mov
cld
push
xchg
sbb
xchg
popa
pop
mov
pusha
sti
int
mov
lret
push
cwtl
push
push
sub
sub
fisttps
adc
cltd
add
enter
loop
lock
test
push
adc
add
sub
notl
jbe
sbb
inc
sub
or
mov
pop
xor
cmp
xchg
sahf
xor
adc
shlb
jne
jno
add
sbb
sub
mov
lds
dec
repnz
cld
jge
je
sbb
in
lret
dec
stc
fld
and
add
adc
das
and
add
pop
jl
push
aas
clc
loopne
mov
push
jge
ret
jmp
push
repz
add
add
aaa
cmp
add
lcall
ja
cwtl
adc
add
lods
sbb
pusha
adc
xorl
sbb
mov
inc
aaa
sub
mov
sbb
pusha
mov
xor
or
cmp
shll
push
xor
inc
cmp
loopne
je
std
push
jmp
cmp
daa
xchg
add
fbld
sbb
dec
enter
mov
xchg
adc
cmp
and
outsl
aas
xchg
inc
or
int
ror
dec
mov
loopne
dec
add
scas
fistl
cmp
and
cmp
jp
push
push
add
fisubrs
test
jmp
shll
cmp
and
aaa
xor
clc
rcll
inc
mov
add
mov
inc
dec
add
loope
sub
dec
popf
push
mov
add
xchg
dec
adc
mov
xchg
add
inc
sahf
jp
xor
or
add
icebp
incl
xchg
xor
add
adc
pop
adcb
je
sub
jg
add
mov
pop
add
fisubl
pop
bound
adc
add
arpl
and
push
call
movsb
inc
add
ret
add
popf
ret
jbe
lcall
mov
mov
les
data16
push
test
xor
cmp
add
and
mov
enter
leave
jge
jae
mov
ja
push
or
or
mov
sarl
lea
sbb
push
cli
andl
inc
or
lock
mov
fbld
push
popa
loope
roll
movl
sbb
mov
sbb
pusha
test
push
dec
mov
popfw
mov
cmp
xor
sbb
cmpb
push
fsubl
xor
in
nop
pop
testb
xchg
add
sub
and
mov
dec
xchg
pop
lds
add
sub
inc
dec
mov
imul
mov
add
dec
leave
clc
sub
pop
push
sahf
dec
sub
mov
lods
push
jmp
xchg
and
rcrb
jo
push
ja
cltd
jb
pop
mov
pusha
outsb
or
add
ds
cmpsl
out
xchg
dec
ret
xor
push
jmp
inc
pop
imul
push
xor
inc
add
loopne
xchg
xchg
js
jbe
add
rcrb
xor
fdivs
and
mov
fstl
and
cwtl
bnd
mov
outsl
mov
movb
outsb
addr16
popa
mov
mov
les
mov
out
pushf
in
mov
loopne
add
mov
jmp
dec
xchg
push
orb
cmp
imul
add
ja
arpl
xorb
push
into
jecxz
xor
psubb
notb
je
jbe
add
movsl
cmpsl
dec
aaa
arpl
add
out
cmp
dec
enter
outsb
add
inc
xlat
xchg
inc
dec
inc
idivl
xchg
lock
cmp
adc
popf
push
out
in
movb
inc
pop
das
lods
push
xor
sbb
mov
add
jbe
stos
mov
sub
loop
or
inc
mov
bound
cwtl
cmp
push
out
push
dec
add
inc
imul
scas
pop
in
ja
jle
mov
into
and
je
test
in
arpl
rcr
dec
sub
push
shlb
xor
xchg
and
decb
push
push
stc
add
int
sarb
xor
outsl
dec
fwait
orb
nop
aaa
push
sub
inc
or
pop
cltd
mul
adc
roll
arpl
push
out
aas
add
cwtl
jg
dec
or
jno
and
dec
out
inc
into
hlt
cwtl
mov
ret
adc
cs
enter
in
add
cmp
mov
inc
ret
dec
mov
pop
lock
add
and
jmp
sbb
or
sub
add
mov
jp
outsl
and
loope
scas
lret
stos
sti
enter
or
sub
xor
cs
adc
dec
jg
jp
ds
loopne
cld
cmp
fcomp
mov
repz
les
bound
xchg
lods
sub
insl
sub
dec
sbb
pop
in
adc
nop
and
cs
jl
pop
test
push
icebp
jbe
cmp
add
xchg
ljmp
aam
xchg
add
push
add
movsl
testb
stos
test
cli
sahf
ds
jp
mov
cs
add
pop
jl
cmpl
in
add
pop
jnp
add
inc
repz
sahf
add
popf
adc
and
sbb
into
jbe
sarb
xor
icebp
sub
jo
add
ffreep
lret
adc
jp
inc
fwait
pusha
xor
jns
add
sarb
cmpsb
jno
int
mov
test
ljmp
add
dec
and
sahf
incl
sub
nop
mov
lock
neg
mov
in
adc
or
and
inc
mov
xor
sub
stos
test
and
push
xchg
fwait
mov
pop
mov
out
and
lock
add
loope
nop
lds
jge
xor
scas
sub
imul
es
mov
cmc
sbb
shlb
cmp
incl
pop
div
in
shrb
cmp
xchg
xchg
pop
inc
xchg
iret
add
rcll
cmp
ret
or
rcl
dec
pop
sub
adc
or
pop
in
fidivl
add
mov
add
imul
ret
dec
pushf
add
add
dec
in
mov
mov
mov
pop
stc
outsl
add
inc
mov
sbb
or
push
out
xchg
inc
mov
lret
cmp
or
dec
pop
push
adcl
bound
xchg
push
std
repnz
icebp
ja
add
mov
shr
mov
pop
inc
jno
scas
lock
lods
movl
push
inc
popa
movsl
sub
push
add
fmuls
cli
sbb
jo
add
cmpsl
xchg
add
mov
pop
pop
ret
lea
pusha
inc
fisubrl
mov
dec
pop
fwait
sbb
rcrb
pop
test
add
add
enter
psraw
std
repz
int3
arpl
jg
hlt
dec
daa
add
lretw
cmp
mov
imul
pop
cmp
test
sbb
mov
test
rcr
add
mov
sub
icebp
lret
pop
add
jno
push
mov
sbb
mov
xchg
push
and
jo
push
mov
call
cld
test
dec
cmpxchg
xor
inc
add
ror
mov
push
fisttpl
je
push
cmp
add
inc
enter
jae
mov
in
pop
fbstp
shrl
js
mov
nop
out
fisubrs
xchg
fiaddl
gs
lods
pop
inc
and
add
rclb
mov
push
outsb
pop
or
add
lcall
push
push
mov
add
inc
pop
add
push
imul
add
add
aam
mov
repnz
inc
jns
aas
cmp
sahf
push
add
cmc
enter
add
adc
add
mov
in
add
push
push
inc
xor
shll
mov
push
xchg
jae
popa
push
and
movsl
adc
mov
xchg
out
add
aad
test
hlt
lods
add
clc
push
arpl
enter
sub
inc
imul
pop
mov
dec
inc
add
xchg
call
add
ret
ds
ret
das
add
out
insb
push
dec
in
xchg
pusha
xor
lock
add
push
dec
add
test
push
mov
jno
or
cmp
dec
xchg
sub
adc
pop
xchg
out
dec
dec
shlb
add
subl
jecxz
loop
hlt
push
jg
and
add
arpl
push
mov
pop
add
add
cmp
adcb
xchg
adc
rolb
orl
lds
repnz
add
test
jp
sub
pop
movsb
cmp
adc
pop
xchg
or
xor
adc
clc
or
push
fdivrp
lds
jno
fidivl
pop
shr
ret
push
in
js
jb
add
push
mov
sub
imul
push
int3
cli
ror
pop
xchg
sahf
outsl
mov
dec
clc
add
cmpb
push
das
mov
pop
and
add
mov
jbe
stc
push
pop
int
sahf
mov
ja
add
insl
and
or
pop
dec
nop
and
inc
xchg
xor
push
and
repnz
fidivrl
sti
bound
int3
or
mov
loopne
mov
cld
repz
xor
arpl
or
sbb
jo
dec
sub
xor
adc
mov
dec
xchg
sbb
push
sub
les
aam
dec
push
pop
js
add
jo
in
adc
test
test
push
or
jl
mov
xchg
push
add
mov
ljmp
je
jp
cmp
jb
jmpw
pop
and
cmp
sysret
cmp
mov
mov
add
cmpsb
nop
test
dec
and
or
or
rcrl
lahf
les
fldl
mov
xor
pop
aad
sar
add
push
out
ret
pop
popf
inc
nop
lock
mov
add
mov
in
lea
sbb
cmp
incb
or
popf
inc
in
jbe
fwait
inc
inc
mov
or
push
iret
mov
cmp
xor
inc
and
popa
sbb
mov
cmpsb
push
lds
push
add
jbe
in
ss
cmovbe
mov
loop
repnz
add
shll
subl
lea
scas
add
jne
sahf
add
ljmp
dec
aaa
pusha
dec
aas
mov
adcl
push
loopne
xchg
add
pop
pusha
hlt
jno
aas
mov
gs
sub
cmp
loope
xchg
mov
dec
daa
insb
lret
fucom
mov
rclb
ja
les
hlt
aam
faddl
pop
imul
add
leave
push
jae
inc
fisubrl
rolb
ret
movsl
push
add
adc
aas
xchg
and
push
pop
mov
sub
add
mov
pop
mov
sub
andb
lret
dec
mov
or
xchg
xor
shll
mov
sub
mov
push
call
daa
add
into
iret
ljmp
cwtl
inc
lahf
lock
add
mov
jbe
or
inc
popa
repz
add
imulb
dec
subb
add
pop
sbb
mov
and
std
cli
dec
in
clc
inc
cwtl
ja
aas
sbb
jae
jmp
cli
testb
mov
js
add
es
pop
mov
cmp
popa
add
fs
pop
movsb
cmpsb
cmp
cltd
les
rorb
popf
dec
clc
add
cld
mov
pushf
or
mov
pop
popa
mov
cmp
loopne
in
out
add
das
lods
sub
adcb
pop
add
adc
cmp
pop
insb
jecxz
icebp
aad
xchg
xor
push
mov
lods
mov
xchg
add
rcrb
lods
fcoml
fidivrl
aam
mov
xor
jnp
lods
push
fbld
sub
jbe
nop
fiadds
inc
mov
cmp
dec
pop
and
testl
jns
add
jnp
inc
jo
rclb
bound
pop
mov
inc
sub
jg
or
add
add
fists
and
pop
lret
or
popf
inc
add
xor
inc
add
xor
rcrb
rorl
ja
adc
jg
loopne
push
mov
js
mov
add
add
and
mov
sub
mov
bound
push
push
xor
aam
cwtl
add
dec
sbb
notl
data16
jbe
sbb
decb
iret
or
insb
lret
jg
fsubrs
sub
sbb
negb
inc
andb
in
add
lods
icebp
std
add
mov
xor
stc
sub
mov
mov
ljmp
and
icebp
pop
mov
popa
mov
pushf
add
stc
cmp
loope
fistl
sbb
sub
cmp
imul
add
pop
fidivs
or
loop
jbe
cmpsb
inc
jne
lock
push
fmul
insb
cmpsb
sub
repz
bound
cld
adcb
mov
nop
add
mov
faddl
nop
mov
es
push
xor
add
cmp
or
and
cmp
cmp
push
cmp
pop
inc
inc
call
add
mov
add
add
movsb
inc
aad
add
mov
popf
rcr
and
incl
loop
or
or
stos
inc
push
in
mov
lcall
sbb
lods
add
ljmp
add
adc
and
in
or
lahf
std
cmp
mov
add
iret
xchg
mov
add
push
scas
addb
jae
cmpsb
and
lods
in
add
out
or
push
push
dec
mov
mov
fcomps
add
mov
addl
jb
add
or
test
sbb
out
test
std
mov
adc
stc
fidivl
inc
popf
jge
jg
jne
push
int
das
jnp
dec
cltd
xor
pop
stos
aaa
jno
inc
and
pop
ret
add
cmp
add
in
out
cmpsb
test
add
or
and
aaa
push
or
mov
int3
jbe
roll
out
mov
mov
mov
jb
xor
mov
jg
pop
mov
ret
addr16
push
add
shll
mov
stos
jno
cmp
popf
mov
adc
aad
leave
aam
pop
clc
jnp
mov
jae
into
and
lret
jo
add
ja
mov
mov
cld
iret
jnp
mov
dec
clc
fdivl
gs
inc
pop
add
dec
adcb
mov
test
sbb
add
repnz
ret
xor
in
in
outsb
es
cmp
pop
and
pop
add
insl
pop
outsl
shlb
pop
sub
aam
add
lds
cmp
xchg
enter
lock
shrl
mov
add
enter
cmc
outsb
leave
add
mov
and
mov
rolb
jbe
iret
push
mov
repz
inc
add
shrl
add
subl
sbb
inc
inc
mov
add
add
repnz
sahf
lcall
add
cmp
shrl
orb
mov
daa
pop
mov
in
dec
sub
rcrb
arpl
movsb
add
xchg
cltd
mov
shlb
dec
pop
xor
add
mov
ss
stos
add
adc
push
add
xchg
dec
pop
pop
movsl
dec
daa
and
add
or
mov
mov
mov
push
xor
add
fcomi
add
subl
cmp
in
movsl
imul
js
jb
adc
rolb
mov
sti
and
hlt
or
cwtl
cmp
xchg
dec
sbb
insl
jge
rorb
pusha
dec
test
fildll
fstl
out
add
loop
jno
rcrl
fcom
scas
in
add
add
xchg
mov
dec
add
filds
fcmovbe
int
add
pop
orl
stos
add
inc
cli
and
jno
add
enter
inc
mov
or
inc
jmp
adc
add
add
outsl
or
xchg
sub
xchg
add
lret
cmpsl
inc
push
shlb
adc
jb
pop
sarb
movsb
cwtl
and
pop
add
scas
pop
mov
aas
out
nop
subb
or
arpl
jno
push
cmpsl
xlat
push
out
insb
xchg
maxps
jne
jbe
add
pop
dec
incl
daa
fcmovu
popa
or
mov
sub
mov
xchg
pusha
jge
mov
push
lret
loope
inc
stc
cmpsb
add
out
movsb
mov
jl
iret
add
lahf
subb
or
icebp
pop
imul
fsubl
push
add
sbb
inc
mov
jns
add
mov
out
push
mov
pop
dec
neg
add
sub
and
gs
jno
movsl
dec
mov
add
jle
popf
pop
ljmp
test
mov
sub
add
loop
aas
aad
dec
jo
add
testb
add
xlat
dec
test
and
mov
cmp
iret
imul
addr16
lods
inc
add
pop
out
jecxz
inc
sbb
add
mov
inc
sub
popa
xor
jns
lea
xor
inc
add
push
jecxz
sub
movsb
sbbb
popf
loop
xchg
jle
add
mov
lods
call
into
jo
or
mov
add
fnstcw
verw
scas
popf
fs
xchg
les
xchg
mov
incl
jae,pn
out
push
sti
sub
in
mov
ret
inc
add
pop
adc
dec
imul
and
insl
sarb
push
xor
insb
sbb
aas
popa
fwait
repz
and
lods
dec
dec
dec
and
repnz
add
sbb
into
rcrl
int
pop
push
bound
mov
add
sti
dec
jle
add
and
es
add
mov
fsubrs
lods
push
lea
push
test
in
add
out
and
rclb
test
pop
or
cmp
dec
xorb
clc
mov
xor
outsb
cmp
loopne
adc
xchg
push
mov
add
cmp
add
imul
push
cmp
fdivl
cwtl
fs
test
sbb
cmp
add
and
out
aas
sar
add
gs
movsl
pushf
inc
add
cmp
adc
add
push
int
cmp
rolb
fildll
jb
fldt
ficompl
xchg
cwtl
cmp
icebp
dec
leave
add
xlat
push
aaa
lock
add
sbb
imul
addr16
js
adc
add
adc
mov
divb
mov
add
fsubrs
aas
enter
fildl
xchg
test
popa
add
out
clc
cmp
add
icebp
call
mov
add
add
pop
cld
sbb
out
pusha
or
inc
add
in
test
push
sub
add
imul
lahf
or
clc
and
adc
hlt
in
ficompl
inc
dec
jmp
dec
sbb
adc
mov
imul
ds
jo
inc
test
stc
add
inc
xorb
mov
jl
inc
in
push
and
fisubrs
and
add
cwtl
insb
lds
test
sbb
shll
jp
add
mov
sbb
add
int3
fs
add
orb
push
sbb
mov
in
test
sahf
add
lds
mov
iret
add
and
and
sbb
inc
call
lret
clc
xor
jg
push
jo
fcoml
fists
mov
movsl
ficompl
lock
arpl
xorl
jecxz
add
shl
adc
jnp
xchg
rol
jle
stos
mov
cmp
and
xchg
cs
xor
divb
sbb
loope
jo
fsubr
lcall
jae
add
loop
lret
insb
call
ret
into
xor
fs
or
cwtl
imul
sbb
lret
sarl
add
insb
pop
mov
add
ljmp
mov
jno
fadds
pushf
sub
jge
push
mov
push
fwait
stc
fs
inc
and
xor
gs
mov
sbb
jno
pop
je
test
and
add
outsl
sub
clc
mov
inc
sub
sbbl
pop
jg
add
sbb
in
rcr
add
icebp
mov
lret
mov
insb
clc
mov
test
mov
push
pop
and
sub
add
add
or
pusha
loop
pop
scas
xorb
test
mov
cs
mov
inc
pop
xor
lret
aam
into
jle
jbe
cmovg
push
sub
iret
jno
inc
in
es
mov
mov
adc
inc
mov
fcoml
movsb
jno
or
dec
sub
jne
scas
roll
scas
int
leave
xchg
js
cmp
adc
enter
sub
add
xor
cmp
mov
push
cmpsb
test
xchg
sahf
aam
ja
add
sbb
mov
cmp
add
dec
insl
add
xchg
mov
cld
or
out
fwait
add
pop
mov
sbb
call
xor
pop
push
sub
push
ror
in
js
push
or
cmp
int
adc
dec
or
push
out
add
cmpl
mov
or
lock
and
fs
add
jecxz
mov
jns
push
js
int3
pusha
dec
xchg
gs
mov
imul
jae
pop
dec
ds
push
mov
aaa
cmp
mov
ret
stos
push
or
shrb
sar
in
add
jns
mov
jmp
add
sub
fcmovnbe
cmpsb
cs
idiv
add
and
push
add
incl
mov
mov
js
cmp
lock
push
xchg
add
in
test
mov
cmp
inc
int
fbld
popa
lea
inc
inc
mov
add
xor
fisubl
dec
sbb
lret
xor
test
loope
addb
xchg
add
pop
pop
nop
jns
adc
add
outsb
xor
lahf
inc
pop
cmp
fsts
daa
repz
into
mov
add
hlt
and
shr
lods
mov
fidivs
incl
lahf
jno
insl
sbb
pusha
mov
add
fdivrl
nop
add
mov
inc
jg
fdiv
ror
add
cltd
int3
insb
push
add
xchg
lcall
iret
jne
mov
sub
les
sbb
adc
mov
js
jp
sub
std
clc
add
push
lock
cmp
xchg
les
or
fsubrs
jp
cmp
call
arpl
push
out
or
xorb
push
sbb
scas
add
mov
fcmovnu
in
cmpsb
add
daa
jp
fwait
dec
clc
cmpsl
add
lds
pusha
xchg
xor
cmp
rclb
and
lea
mov
roll
inc
cmp
jge
aas
loope
or
adc
pusha
add
enter
inc
ret
mov
xchg
pop
cmp
outsb
add
pop
inc
xchg
xorl
xor
mov
lcall
orb
mov
xchg
mov
test
or
icebp
add
stc
out
ds
es
add
je
cmpsl
push
sbb
addl
call
push
popa
fisubl
push
mov
mov
fs
add
cmp
scas
push
push
adc
call
cmpl
sub
flds
lea
ror
add
bnd
fcoms
test
xor
adc
subb
cmp
add
jne
ja
mov
out
fistps
xchg
pop
mov
cmp
aam
iret
sub
es
pushf
pushf
cld
pop
pop
mov
and
cmp
jg
test
test
mov
inc
cmp
cli
and
test
add
dec
leave
lods
xor
sbb
mov
sbb
mov
aam
ljmp
fistl
loopne
and
push
pop
sbb
add
dec
push
sbb
popf
jnp
in
add
mov
das
add
cmp
xchg
pop
mov
mov
jle
out
push
mov
dec
dec
fists
add
fcoml
lret
ret
fnsave
into
sub
pusha
js
or
test
dec
and
ret
or
jb
dec
mov
add
je
cmp
mov
dec
inc
in
cltd
in
int3
hlt
clc
cmp
into
pop
push
clc
loopne
jg
data16
sar
es
jns
mov
cmpsb
adc
mov
sub
inc
add
cmp
mov
push
dec
dec
insb
cli
add
mov
loop
lret
dec
add
sub
add
dec
push
test
mov
jle
mov
outsb
push
sbb
mov
add
aad
jl
or
or
lods
cmc
cli
out
or
cs
xchg
das
add
push
add
fwait
ja
loopne
cmpb
les
loope
cli
mov
jp
dec
popf
jle
xchg
mov
jnp
cltd
clc
adc
or
adc
add
test
leave
add
xchg
mov
jge
and
cvttps2pi
cli
xchg
jmp
in
mov
mov
add
push
cmovl
add
fistl
andl
pop
add
xchg
stc
push
fistpll
cld
scas
movsb
add
nopl
psubd
test
stos
mov
fwait
xchg
roll
add
jge
mov
push
loop
in
mov
or
dec
xchg
mov
add
fcoml
dec
add
mov
enter
add
out
in
gs
jno
push
add
outsb
xorl
push
psubusb
imul
add
je
repnz
call
orb
pop
adc
rolb
testl
cmc
dec
cmp
and
xor
hlt
cmp
add
cmp
cli
mov
add
imul
dec
sarb
cmp
and
or
jo
pusha
sbb
xchg
cli
inc
pop
ret
jg
hlt
stos
jb
pop
inc
or
icebp
jno
add
cmc
ds
fwait
or
mov
add
push
inc
fwait
dec
test
das
add
in
call
add
mov
mov
jbe
cmp
or
into
lock
jg
dec
inc
rcrb
sahf
cmp
mov
sbb
in
push
pop
push
in
sub
int3
shlb
jbe
es
dec
xchg
adc
hlt
les
pop
xor
xchg
and
cmpxchg8b
add
push
pop
add
iret
mov
dec
mov
jne
rolb
pop
add
xchg
sbb
adc
push
or
mov
mov
das
sbb
adc
rep
add
sub
scas
mov
nop
or
cs
insb
arpl
dec
cmp
jle
mov
sub
clc
imul
cmp
and
sbb
push
mov
or
xor
xchg
mov
mov
push
add
dec
sub
mov
icebp
push
xor
sbb
stos
push
addb
ja
dec
insb
lods
add
ret
add
inc
mov
lods
pop
pop
aas
out
lahf
loop
lock
adc
mov
andl
mov
lea
insb
mov
inc
inc
dec
outsb
in
test
out
mov
fildl
inc
jge
mov
xor
dec
xchg
mov
icebp
add
fwait
sub
out
mov
jbe
jecxz
mov
dec
mov
test
xor
insb
fdivl
and
ret
imul
and
xor
push
push
sahf
js
aas
das
mov
add
add
out
inc
push
add
loopne
inc
test
lahf
mov
cmpsl
sub
add
fwait
daa
rorb
mov
mov
xchg
ds
cmp
nop
xchg
addb
lret
les
flds
dec
adc
aaa
push
push
stos
or
jp
nop
into
push
jns
mov
sbb
iret
popa
bnd
push
or
push
and
in
or
and
xor
ret
dec
or
mov
xchg
into
jns
es
nop
inc
xor
popa
movsl
inc
movsb
add
mov
add
pop
jbe
mov
fdivrl
pop
pop
aaa
lds
and
fs
mov
jge
iret
add
sub
mov
sub
faddl
loopne
lds
sub
and
mov
gs
push
repz
add
ret
add
ret
stos
das
shlb
jbe
clc
lahf
add
mov
add
sub
pushf
jns
add
add
cli
rolb
inc
mov
sbb
push
mov
xchg
push
cmp
test
add
jecxz
lret
sbb
mov
in
sbb
ret
js
stc
add
es
lret
inc
ret
add
jns
or
and
xchg
add
fwait
jmp
add
and
push
in
cmp
shll
sbb
add
sub
cmp
add
cmpsl
arpl
mov
emms
lret
loopne
stc
hlt
pop
out
add
pushf
movsb
push
mov
cmpsb
add
fwait
test
scas
or
pop
add
in
push
push
push
mov
add
int3
imul
aas
and
sbbb
and
in
ret
data16
clc
bound
cli
or
lret
sbb
popa
xchg
jbe
outsb
adc
ja
scas
sub
pusha
push
in
fs
add
rorb
test
pop
adc
push
xchg
xacquire
aam
dec
in
rorb
cli
inc
push
cmp
stc
leave
js
movsl
xchg
add
jns
sub
sub
dec
push
push
icebp
pop
push
loopne
test
je
dec
sbbb
xor
mov
rorb
cmp
repnz
jecxz
lret
jno
pusha
sub
iret
out
popa
add
in
inc
outsb
xchg
mov
mov
jl
jp
add
mov
nop
add
push
shrb
inc
in
add
dec
repnz
leave
mov
rcl
scas
pop
cld
mov
jmp
inc
add
psubb
imul
ja
data16
fucomip
cmp
movsl
imul
std
adc
cmpsl
addr16
jle
add
sbb
ss
in
add
fcomps
jae
inc
roll
pop
and
jns
dec
pushf
sbb
mov
in
pop
repz
or
add
cmpsl
or
cwtl
je
loopne
jb
add
jae
adc
or
lock
add
pop
push
mov
lahf
add
xchg
sbb
rcl
add
loopne
pop
add
lret
sub
and
repnz
call
pop
push
sub
ret
mov
jns
or
pop
inc
and
out
or
mov
push
mov
rcll
cmpsl
push
inc
rcrb
popa
popf
addb
add
jne
sub
xor
sub
jb
adc
lods
les
rclb
aaa
sahf
add
ret
mov
jae
fisttps
add
test
int3
shlb
aam
popa
leave
jge
pushf
mov
test
imulb
call
dec
fcmovnb
pop
fs
js
pop
sbb
lock
popa
mov
sub
adc
scas
lds
fwait
hlt
jb
sub
fs
mov
leave
jp
adc
pop
add
add
scas
pop
rcll
fdivrs
jns
movsb
es
and
jo
or
xchg
inc
ss
or
or
js
push
and
add
ret
mov
mov
lret
lock
nop
push
push
jp
add
ljmp
add
add
push
inc
or
pop
add
xor
push
aam
jg
jmp
cmp
ret
lret
lret
push
jne
add
ret
push
dec
add
incl
icebp
add
mov
dec
pop
das
push
dec
loopne
inc
outsl
iret
jle
lret
popf
adc
sub
or
or
push
adc
sbb
fdivrl
add
sbb
xchg
pushf
cmc
add
push
jno
mov
or
sub
aad
xlat
dec
add
sbb
ret
testl
lcall
addb
or
std
add
mov
dec
in
xor
mov
insl
test
jo
sbb
mov
sbb
loopne
add
stos
xor
jae
jle
lods
repz
out
pop
add
faddl
push
sbb
addr16
bound
cltd
pop
and
mov
inc
mov
fcmovne
add
mov
add
or
repz
test
subb
mov
dec
ret
push
gs
aas
mov
std
add
sbb
test
fwait
jno
out
andb
add
xchg
ret
std
lock
jbe
ljmp
add
fucom
add
hlt
out
test
xor
mov
rorb
push
stos
add
movsl
push
andb
pop
inc
sbb
inc
imulb
ja
add
cld
inc
push
mov
out
xor
cmpb
cmp
jl
fwait
into
daa
xor
sub
and
and
stc
ss
and
in
inc
js
cmp
adc
es
mov
mov
fldenv
fimuls
ret
lock
icebp
bound
pop
add
cmp
adc
mov
add
inc
je
mov
andl
add
inc
lock
loope
pop
add
lds
movl
xor
push
add
and
test
xchg
in
add
or
cmc
xchg
mov
idivb
cmp
xor
add
in
adc
add
test
bound
lock
and
jae
add
mov
add
jne
push
pop
stos
add
pop
jb
mov
or
or
mov
xor
pop
jnp
mov
push
sub
cli
push
add
lcall
xorb
xor
pop
mov
sub
xor
sbb
out
lea
in
test
jge
mov
add
xchg
add
in
add
pop
les
add
inc
inc
mov
clc
mov
jl
mov
jnp
rorb
ret
sub
loop
sbb
loope
aas
mov
aas
subl
pop
add
and
add
sbb
stos
push
and
add
loop
and
add
jbe
aas
fsubl
imul
inc
ret
sti
cmc
es
add
mov
lcall
mov
mov
push
mov
jg
add
push
rcrb
jle
add
int
push
cmpsb
sub
jnp
push
dec
xchg
xor
cmp
jo
cld
xchg
js
sub
jae
xchg
negl
push
mov
insl
scas
sahf
rclb
aas
repnz
cmpb
jno
jg
addl
fsts
add
out
cmp
add
pop
lods
inc
and
aaa
pop
insb
mov
out
je
mov
push
xor
test
xor
pop
push
loopne
dec
adc
inc
mov
jp
outsb
nop
or
or
aas
stos
jno
lock
popf
sub
jnp
inc
loopne
sub
adc
vphadddq
push
add
jb
jno
arpl
fsub
mov
scas
push
call
subb
add
and
cld
das
cltd
mov
add
popf
xchg
push
xor
dec
add
add
cmc
adc
ja
mov
fcompl
push
lods
xor
or
cli
xor
movsl
cs
imul
xlat
jb
enter
add
test
ss
pushf
add
push
icebp
pop
loopne
adc
add
adc
or
imul
push
out
inc
in
dec
add
xchg
popa
add
in
dec
imul
movsb
mov
cmp
lret
gs
jecxz
mov
add
mov
sub
push
jp
add
pop
out
add
hlt
jnp
jno
js
loope
cmpsl
aas
ret
shr
inc
mov
fnstsw
xchg
pop
fistpll
mov
sarb
bnd
add
das
lcall
push
or
dec
add
into
mov
xchg
xchg
push
sbb
add
push
lock
and
adc
add
push
in
data16
rcrb
cmp
movsl
popf
add
test
pop
and
std
mov
mov
add
sbb
addl
lcall
cmpsl
add
add
mov
jns
pop
xchg
sub
fsub
cmp
add
test
mov
fldcw
sbb
adc
inc
ret
add
in
cmp
pushf
inc
jns
sub
xchg
dec
add
mov
jle
test
push
mov
pop
imul
add
sbb
filds
push
aad
cmp
cli
data16
push
repnz
add
pusha
mov
add
out
and
inc
adc
add
int3
dec
js
popf
fmull
psubusb
push
aam
jnp
fstl
pusha
cltd
clc
add
out
sarb
cwtl
pop
aas
lods
adc
cld
lock
dec
adc
add
and
insb
pop
add
mov
lock
scas
push
cmp
idivl
loop
inc
call
push
sbb
inc
jae
jno
scas
in
push
xorl
ret
add
stos
out
add
icebp
inc
mov
add
cmp
daa
add
in
jb
stc
jns
xadd
add
cmp
jge
pop
cli
mov
mov
shlb
adc
out
cld
sbb
jl
dec
add
pop
clc
adc
sbb
popf
cli
pop
xor
lcall
xchg
fsubs
les
cwtl
adc
mov
aaa
xchg
cmc
sbb
cmpsb
push
sub
cmp
ret
insl
inc
jmp
addb
imul
test
aam
jge
pusha
xchg
add
call
mov
add
cwtl
mov
adcb
or
and
iret
add
mov
fisubs
cmpsl
add
jnp
xchg
fld
setns
fsubrs
lds
enter
push
sub
xor
pop
add
loop
das
mov
dec
add
inc
fsub
xor
in
stos
clc
pop
jmp
add
loop
lods
out
sbb
or
mov
push
or
and
repz
push
sti
add
nop
out
pusha
rcr
in
xchg
xor
jmp
cwtl
add
pop
call
xor
xor
and
icebp
and
pop
or
subl
out
nop
loop
pop
and
out
jne
loopne
aas
jae
arpl
cmp
nop
jmp
jmp
pop
or
clc
add
jl
fs
add
xchg
mov
addr16
js
rcl
repz
add
mov
push
ds
in
add
pushf
enter
add
cltd
ljmp
fsubrs
mov
add
dec
adc
mov
lret
nop
mov
adc
adcl
int3
or
add
jecxz
cs
fcompl
popf
jno
orb
jmp
fisttps
dec
add
ret
out
push
or
add
call
out
repnz
je
mov
cmc
add
or
fwait
push
test
sbb
orb
out
push
sarb
aad
incb
push
and
loope
sbb
nop
lret
divb
jae
add
lret
adc
push
jnp
add
mov
mov
add
sbb
loopne
mov
stos
mov
jp
mov
inc
add
std
aas
mov
add
es
sahf
sub
mov
pop
fwait
arpl
sbb
adc
frstor
inc
mov
push
pop
sub
cmpsb
cmp
aam
adc
push
add
add
repnz
xor
cmp
add
loopne
hlt
xchg
adc
jno
mov
lcall
int
je
add
inc
sbb
add
mov
addl
xchg
sub
mov
xchg
xor
cmp
movsb
lea
sahf
test
sub
pop
mov
lods
lret
pop
fcoms
xor
test
add
push
out
push
mov
and
subb
negl
lods
mov
rcrb
aaa
jne
xchg
roll
fsubrp
pop
andb
sub
movsb
inc
dec
sbb
faddl
jg
mov
push
orl
add
sub
dec
loope
cld
sbb
add
adc
ss
xchg
dec
lods
push
fwait
pusha
sbb
inc
sub
fldl
jmp
mov
jns
dec
ltr
bound
or
and
mov
fildl
mov
psubd
add
or
xor
jo
add
shll
cwtl
xor
sti
sbb
sbb
decb
sbb
inc
inc
xor
lock
mov
sti
cwtl
stc
popa
arpl
and
and
dec
and
or
and
out
or
test
int
pusha
add
jecxz
rorb
sbb
sbb
psubq
stos
add
pop
outsb
roll
push
daa
xor
inc
jno
out
addr16
or
fisubl
add
aas
loope
rcrb
jno
mov
popf
dec
jl
loopne
xchg
sahf
sub
add
or
xor
aaa
push
call
cld
pushf
cmp
dec
xor
and
add
test
add
ja
into
stc
pop
andl
in
jno
fs
jo
test
sarb
bound
arpl
out
cmovns
jno
idivb
cmp
sub
push
xchg
iret
icebp
movsb
inc
sbb
fcompl
mov
hlt
and
sub
jo
inc
loop
and
lock
pop
lods
and
jne
outsb
add
pop
mov
cmp
jb
fsubrp
mul
nop
or
sbb
pop
sub
push
mov
aas
xchg
mov
mov
fnstenv
add
pop
sub
add
outsl
add
mov
inc
xchg
dec
lea
loopne
ret
pop
ljmp
mov
xor
jl
mov
addr16
or
sti
jnp
clc
and
mov
and
add
divl
mov
mov
push
adc
push
push
and
iret
mov
aaa
andb
imul
scas
add
and
flds
pop
movsl
and
push
mov
movsl
cwtl
jae
adc
dec
cmpsl
push
push
shl
adc
ss
popa
insb
sub
add
sahf
mov
push
mov
in
popl
sub
int
pop
add
push
pop
mov
daa
xor
push
and
add
mov
add
pop
sbb
mov
into
fisttps
stc
in
mov
mov
jl
add
add
cmp
push
push
lcall
cwtl
rorl
test
and
cmp
lods
in
test
call
inc
xchg
add
sbb
dec
mov
xchg
out
push
push
and
xchg
arpl
aas
mov
sbb
add
mov
mov
jmp
xchg
movl
sbb
adc
cltd
add
in
popf
dec
push
jg
jo
add
cmp
test
mov
mov
and
sbb
adc
inc
aad
flds
scas
and
les
sub
mov
pop
mov
add
cld
cmp
loop
add
rcrb
add
jnp
insb
roll
outsl
pmaxsw
std
mov
das
push
cwtl
jns
cmp
jecxz
mov
hlt
mov
scas
ljmp
adc
inc
fadds
loopne
add
test
push
add
push
into
in
cmpsl
div
push
xlat
add
in
jne
xchg
jo
pop
add
inc
pop
in
bts
lret
mov
lcall
dec
into
mov
add
pusha
fstpl
mov
inc
lds
add
add
lret
jae
loopne
ret
inc
sub
xor
in
sbb
and
sbb
gs
pop
popa
pop
movntps
movsb
add
neg
add
das
cs
add
sbb
fmull
int3
stos
and
rcrb
xor
rcrl
adc
inc
imul
outsb
ja
mov
mov
shrb
nop
movl
push
cmp
sub
cmpsl
jo
test
xchg
cmp
dec
sub
adcb
pop
ret
fcompl
push
mov
mov
pop
mov
subb
shrb
sbb
adc
and
or
mov
or
in
and
movsb
xchg
jns
add
aad
loop
in
cmp
subl
sarb
add
jmp
ss
in
lods
cld
test
js
sahf
mov
vpsubd
imul
sti
in
jg
in
mov
popa
insb
loope
inc
lds
pop
sbb
nop
sti
mov
sbb
cli
mov
pusha
addr16
call
push
pop
pusha
mov
cmp
int3
inc
add
push
roll
xorl
sbb
inc
sbb
les
into
adc
jae
das
add
mul
add
dec
jne
mov
xor
dec
add
mov
inc
mov
xchg
add
pop
cmpsb
popf
stos
and
inc
pushf
into
xor
mov
xor
loopne
dec
scas
mov
movsb
repz
pushf
mov
push
sub
add
shll
jge
add
rcrb
add
in
jae
fisubrl
sbb
jne
push
inc
add
dec
cmp
je
and
ja
pop
add
add
int3
incb
and
divb
inc
mov
jnp
add
and
test
hlt
test
cmp
leave
outsl
inc
add
cmp
cltd
clc
or
movl
mov
int
int3
xor
sub
and
scas
and
inc
jno
dec
and
xchg
call
iret
testb
cwtl
fistl
sbb
insl
hlt
fisttpll
push
jne
cmpsl
jno
rcl
pop
jge
decb
js
jo
aas
add
orb
xor
pop
dec
popf
push
add
fchs
dec
adc
out
sbb
test
adcb
gs
pop
cmpsl
add
jno
pusha
xor
int
push
jecxz
gs
mov
add
out
sub
sbb
jnp
add
sub
mov
leave
test
in
xchg
push
push
lret
test
in
sub
fisttps
push
mov
jle
add
lret
and
add
stos
inc
sahf
fisttps
add
loop
adc
push
sub
loopne
ja
push
int
add
sub
xor
sbb
rolb
shl
rolb
iret
or
je
add
ss
pop
stos
cmp
inc
dec
push
push
sub
shll
nop
xorb
adc
sahf
scas
jl
sbb
in
ret
add
icebp
push
or
lret
pop
lods
or
add
shlb
in
pushw
addr16
repnz
adc
jg
aas
jmp
adc
mov
sbb
jecxz
jo
mov
nop
add
fildl
sbb
push
mov
rolb
sbb
sub
pop
in
daa
pop
jge
andl
jle
jbe
xor
js
xor
mov
mov
cwtl
enter
cmpsb
mov
inc
test
mov
or
orb
out
or
and
in
add
sar
xchg
mov
mov
and
add
inc
xor
sbb
sar
fucomp
andb
fildll
stos
lcall
lcall
mov
lock
mov
dec
pop
lret
adc
rorb
pop
les
inc
mov
fimuls
jne
addr16
mov
movsb
jle
add
repnz
in
add
pop
mov
cmp
or
add
cmp
mov
out
int3
add
mov
test
add
fdivrl
sbb
fiadds
ret
and
sbb
mov
pusha
adc
jp
add
jg
cwtl
ror
in
add
add
push
push
es
dec
cmc
mov
call
lcall
fistpll
andb
fcomps
xchg
mov
xchg
rcrl
scas
sub
stos
pusha
push
adc
jne
clc
inc
and
xchg
mov
dec
mov
push
and
out
cmpsb
fcmovne
adc
add
sbb
push
add
fsubl
fiadds
lahf
push
aam
inc
mov
movl
rcr
sub
push
pop
add
pop
add
nop
xor
or
dec
bound
pop
sbb
fadds
add
mov
mov
xlat
pmuludq
xor
add
inc
mov
add
pop
cli
mov
lods
push
outsl
sbb
mov
mov
or
dec
out
hlt
das
outsl
lea
insl
adc
faddl
daa
sub
add
mov
mov
out
lock
pop
jle
jno
xchg
push
sub
pop
pusha
pop
jb
mov
pop
stos
std
arpl
dec
ljmp
mov
js
mov
das
sbb
andb
stos
daa
xchg
test
out
jae
add
push
sbb
pop
mov
pop
mov
popa
sub
femms
dec
jecxz
push
mov
daa
xchg
add
pop
mov
xor
mov
insl
repz
adc
sbb
pop
cs
pushf
pop
pop
sub
adc
cmpl
mov
orl
mov
loopne
fwait
push
subb
xchg
shll
xchg
add
sub
test
addb
mov
shrl
jne
add
xchg
in
out
cld
pop
or
outsl
cmpsl
clc
pop
xchg
inc
add
dec
mov
xor
lds
out
scas
xorb
jle
dec
mov
inc
out
call
inc
xor
faddl
mov
sbb
cld
ret
push
cmp
mov
push
cmpb
test
mov
out
add
call
imul
scas
hlt
cwtl
pop
dec
outsl
aaa
jl
into
push
add
sti
add
mov
xor
mov
and
sbb
add
in
push
mov
jbe
fimull
adc
jnp
fsub
ljmp
add
jp
rol
jl
call
pop
in
sub
popf
xchg
ret
filds
push
sti
xor
xor
cmpsl
pop
hlt
jne
dec
xchg
and
mov
mov
add
or
outsb
inc
imul
fwait
lods
pop
adc
enter
ss
hlt
int3
add
leave
clc
xchg
std
inc
enter
fildll
mov
cmc
add
sbb
test
pop
xor
out
adc
aaa
cmpb
pop
test
gs
cmpsl
mov
inc
lahf
popa
orb
imul
jbe
pop
or
cld
inc
xchg
add
xchg
adc
cmp
mov
and
fldl
test
pusha
inc
imul
jmp
out
sub
push
xor
jno
xor
sbb
pop
outsb
jle
or
dec
inc
mov
bound
push
mov
add
pop
nop
lahf
xchg
inc
jmp
popa
pop
mov
push
leave
and
xchg
mov
add
adcb
pop
and
out
xor
cltd
enter
pop
ficoms
lods
mov
xorb
xor
mov
in
sbb
roll
add
add
inc
cwtl
std
push
sahf
add
push
cwtl
sbb
pop
pop
add
insl
mov
pusha
enter
jnp
aaa
lods
pop
shrb
jl
sarl
and
jno
cltd
shl
hlt
inc
int3
stos
pop
add
push
cmp
cmp
add
int3
dec
add
test
incb
cmp
rorl
orb
dec
mov
fistl
xor
cmc
stos
add
push
jg
subb
jp
int3
mov
pusha
mov
cltd
sub
inc
jbe
mov
fwait
mov
test
cli
mov
xchg
popf
mov
mov
sub
sbb
pop
bound
mov
adc
push
test
or
orb
dec
add
data16
roll
jbe
mov
shlb
sbb
xchg
shlb
ja
adc
out
sub
lea
add
mov
insb
mov
scas
sbb
sbb
inc
aaa
inc
add
ja
cmp
jae
outsb
add
fidivrs
ss
jb
cmc
stc
add
pop
cwtl
sub
lahf
jae
js
and
adc
sarl
add
pop
ficomps
cltd
leave
add
jle
in
push
stos
andb
jae
sub
push
xchg
sbb
mov
sub
leave
cmp
mov
lret
xor
fcoms
jno
add
dec
out
mov
arpl
add
fsts
add
lret
sbb
sub
imul
add
sbb
add
push
repnz
push
xor
and
xorb
mov
data16
test
outsl
add
int3
xchg
jg
stc
nop
adc
mov
mov
add
hlt
mov
addr16
mov
jo
testl
fldl
mov
and
sbb
add
or
loopne
insb
mov
jno
add
cmpsb
jge
mov
ss
ret
sbbb
or
and
rolb
mov
mov
cmp
jbe
jne
mov
mov
addr16
popf
and
inc
shlb
aas
cmp
jns
jne
jmp
std
push
add
add
mov
mov
adc
inc
pop
add
loopne
push
push
je
pushf
xorb
xchg
pop
or
mov
xorb
cwtl
out
dec
jl
adc
mov
dec
movsb
leave
adc
outsl
jge
jl
add
inc
add
push
or
sbb
xor
xchg
adc
dec
jno
add
xchg
addb
mov
and
jbe
rcrl
push
cmpsl
js
lret
mov
inc
adc
enter
inc
pop
lods
call
pop
loop
add
int
push
jno
cmpsl
add
cmp
or
lcall
gs
mov
icebp
sub
pop
add
cmp
cmp
aad
lret
xchg
jg
sbbl
scas
orb
pusha
mov
daa
push
icebp
sub
mov
dec
or
rcrb
add
and
pushf
or
in
sub
xchg
mov
or
add
add
fdivrs
imul
pop
clc
inc
imull
rclb
jbe
test
add
cmp
push
pop
loope
cmpsl
pushf
rcll
daa
xchg
mov
add
fisubrl
mov
test
sub
cmp
stos
mov
pusha
lcall
pop
mov
and
add
je
pop
xor
fs
add
mov
cmp
jecxz
or
fstp
nop
subl
sbb
pop
jmp
adc
add
cmp
push
in
fadd
das
add
inc
pop
into
cmp
ljmp
out
mov
push
ds
fiadds
movsb
std
int
shlb
scas
add
push
and
hlt
lds
push
adc
arpl
cli
sbb
out
ja
jbe
add
inc
add
shrl
xor
inc
outsb
jo
nop
std
inc
mov
xchg
mov
fwait
cltd
js
jl
push
out
pop
jae
pop
int
add
or
and
fildll
dec
leave
mov
xor
pop
test
and
test
and
ret
test
sub
and
pop
aad
add
movntq
movsb
mov
xchg
xor
stc
jecxz
add
int
add
leave
or
inc
xchg
and
rolb
pop
stc
sbbb
movsb
xchg
aas
lock
add
imulb
test
and
dec
in
jge
mov
mov
data16
clc
jb
mov
add
xor
jmp
mov
cs
int
xor
insb
push
in
push
mov
xchg
repz
jmp
test
pop
rolb
scas
scas
adc
jnp
adc
cmp
call
jo
fs
clc
xor
inc
and
orl
mov
pop
pop
adc
cwtl
sub
add
enter
xor
add
push
mov
not
fcomip
lcall
or
mov
stos
loopne
int3
add
push
xorb
add
xor
addl
mov
add
je
btc
xor
mov
or
test
pop
nop
adc
ja
push
xor
xor
pop
add
cmpb
pop
xor
leave
test
adc
add
cmpsl
or
jo
or
cmp
mov
aas
mov
pop
cmp
addl
dec
pop
in
mov
mov
mov
add
push
insb
in
push
mov
out
ror
fwait
jbe
add
es
pop
cmc
stc
les
jnp
aam
dec
push
xchg
cmp
inc
je
xor
call
mov
and
inc
js
shrb
lds
adc
ja
rolb
add
dec
pushf
insb
xchg
add
xlat
adc
lret
inc
pop
or
or
incb
stc
imul
and
jns
jne
sbb
add
or
sub
pop
bound
pop
or
pop
dec
test
dec
cmp
popa
mov
pop
stc
lret
and
xchg
cli
xor
jl
push
fs
subb
loopne
add
push
clc
dec
cmp
push
sub
xchg
cld
shlb
push
add
mov
push
fisubrs
jnp
repnz
adc
mov
jo
enter
add
out
pop
pop
aas
adcb
dec
cmp
addb
push
add
jns
or
movsbl
sbb
push
and
jge
sub
pusha
inc
jg
xchg
jmp
fwait
push
push
mov
add
xchg
mov
les
mov
add
adcb
pusha
repnz
pop
lret
inc
or
imul
lods
icebp
jl
cmovo
push
pop
bound
rolb
add
xor
adc
stos
mov
hlt
lcall
mov
mov
mov
mov
pop
adc
cwtl
push
sub
insb
and
and
sub
rorl
xchg
inc
pop
or
xchg
push
jnp
xor
jae
dec
xchg
flds
ss
outsb
pushf
xchg
rclb
fwait
test
out
shl
add
xchg
sbb
push
push
adc
jge
pusha
add
test
pushf
hlt
mov
pop
inc
add
sub
scas
mov
cs
jbe
cmpb
inc
mov
jmp
adc
adc
sti
shrl
jnp
mov
pushf
and
les
cmp
jecxz
xchg
mov
imul
push
nop
outsl
aam
shll
push
cwtl
inc
aad
stos
push
int3
clc
dec
add
fcmovb
xchg
cmp
out
push
and
fmul
sahf
sbb
mov
jbe
adc
push
jbe
mov
sub
aam
or
xchg
test
repz
xor
push
lcall
fs
enter
add
insl
call
fcmovnb
ljmp
stc
cmp
add
add
sub
incl
out
cld
xchg
testb
sub
mov
add
add
test
mov
cmp
add
cmp
add
jno
sbb
xchg
push
jge
lds
ds
xchg
pop
call
popa
addl
pusha
aam
decb
lahf
int
js
test
movsb
push
and
mull
scas
das
jecxz
xchg
push
cmp
ds
add
aam
and
ljmp
insb
sub
mov
adc
fmul
push
sub
aaa
cwtl
push
mov
negb
fs
dec
mov
mov
sarl
mov
mov
jo
jb
repnz
aad
or
push
stos
xchg
ret
add
ror
shr
add
mov
sub
mov
mov
repz
mov
lods
add
adc
jecxz
push
or
cmp
jne
add
cltd
repz
and
flds
imul
fucomp
arpl
lret
movsb
pop
fcompl
add
mov
outsb
add
insb
addr16
div
sub
add
add
test
cld
jno
add
jbe
pop
add
pop
mov
adc
andl
mov
xor
push
or
sbb
xchg
add
mov
sbb
push
dec
cmp
fwait
add
addl
sbb
scas
inc
jo
imul
adc
push
lock
push
add
lret
cld
push
or
imul
and
leave
icebp
or
mov
and
mov
xchg
test
fldl
jae
push
icebp
and
add
push
fistl
mov
dec
mov
sti
xchg
rorb
test
fbld
xchg
popf
add
fisubrs
fiaddl
pop
les
xchg
sbb
dec
pop
arpl
jne
sbb
sbb
mov
out
imulb
add
mov
mov
loopne
inc
adc
pop
xchg
mov
pop
add
daa
fsubr
pusha
jo
push
mov
fmuls
jno
mov
push
shlb
mov
adc
fscale
add
push
add
fidivs
call
mov
incb
shrl
bound
repnz
in
or
push
add
jb
inc
push
mov
pop
add
xchg
or
and
test
xlat
aas
mov
xor
insl
scas
add
cwtl
inc
pop
jae
add
push
out
loope
jge
add
gs
lock
je
add
aaa
lods
and
fistpll
test
cmp
dec
js
je
push
add
pusha
lcall
les
daa
or
out
and
xor
sbb
in
push
movsb
jne
xor
std
adc
loop
and
repnz
sub
cmp
inc
sub
push
mov
inc
mov
xchg
fisttpll
iret
adc
cmp
fdivrl
pop
mov
dec
push
add
shll
jnp
inc
std
pop
or
add
aas
mov
ret
inc
add
add
cmovl
shr
xchg
das
std
mov
pop
cmpsb
aad
cmp
loopne
test
add
into
popa
mov
leavew
sub
add
mov
mov
pushf
pop
jg
dec
in
mov
mov
adcb
popa
fs
scas
xor
cltd
outsb
add
mov
inc
xchg
lret
call
inc
dec
cli
pop
cmp
xchg
jns
cmp
ja
ja
add
fwait
in
mov
sbb
add
out
repz
outsb
jecxz
fcmovbe
jno
popa
shll
mov
outsb
pshufw
scas
mov
lret
pop
adc
push
mov
and
or
pushf
push
pop
ficompl
js
sub
ret
push
int3
inc
add
vmaxpd
dec
add
add
out
out
mov
jnp
jecxz
loopne
jns
cwtl
cli
add
imul
xchg
lock
pop
cmp
sub
inc
rclb
sbb
add
and
add
stos
insb
or
sub
adc
or
lcall
sub
out
xor
xor
or
adc
insl
call
inc
add
pop
xchg
add
repnz
daa
jb
add
test
jg
in
scas
fwait
push
les
and
sbb
nop
pop
add
rcrb
push
popa
push
jnp
pop
dec
cmpsl
xor
push
loope
enter
jns
add
jecxz
out
roll
mov
incb
dec
add
jbe
out
nop
aad
xchg
pop
jge
mov
js
out
ss
xor
mov
adc
cwtl
add
sbb
adc
wbinvd
mov
mov
push
fstp
mov
xor
adc
sbb
scas
out
sbb
fcoms
call
dec
inc
dec
add
fistps
lahf
sub
stc
sbb
inc
xchg
es
sbb
xchg
push
add
cmp
mov
jecxz
outsb
jb
stc
push
fldl
stos
test
hlt
xlat
sbb
dec
shrb
push
pop
jmp
lret
mov
ret
jp
push
hlt
addb
and
sti
dec
in
lahf
pop
push
inc
mov
cmpsb
push
jno
popf
jbe
cmp
add
fmull
stos
mov
rcrb
push
add
xorb
and
or
jp
and
jecxz
arpl
push
add
jg
add
push
adc
adc
and
pop
xlat
cmp
xor
adc
ljmp
shr
nop
cmp
ljmp
pop
cmp
mov
or
inc
je
fwait
add
cmp
add
mov
repz
add
pusha
mov
mov
inc
adc
push
jne
shlb
jmp
and
add
fidivrl
rolb
das
outsl
inc
mov
cld
lods
imul
add
fcomps
rorl
push
inc
inc
dec
dec
out
es
pop
pop
or
push
sbbb
ret
cmp
xchg
fxch
movsl
add
cmp
adcl
rolb
lds
gs
roll
repz
scas
imul
sbb
stos
or
test
ds
rclb
sub
ss
pusha
cmp
pop
negb
lea
lods
cmp
fistl
pop
daa
or
jbe
js
pusha
xchg
dec
and
scas
jno
pop
dec
das
sbb
adc
pusha
cmp
mov
cld
stos
add
roll
sti
fnstcw
jo
ret
add
pop
push
sbbl
in
sti
cmp
insb
jnp
pusha
jp
mov
mov
lahf
jno
dec
add
add
push
enter
push
loop
sbb
and
or
pop
out
es
fadds
shll
stos
cmp
add
inc
jmp
push
adc
testb
cmp
cmp
mov
sbb
cmpsl
mov
sbb
or
andl
imul
sub
add
scas
aaa
fisubrs
in
stc
sbb
xchg
in
subb
loopne
xchg
cmp
test
es
and
insl
sbb
int
mov
sti
pushf
test
into
neg
mov
in
je
sbb
inc
adc
add
mov
xor
test
cmp
int
rorb
adc
sub
outsl
or
inc
in
inc
scas
sbb
add
addb
add
sahf
ret
cmc
ffreep
adc
iret
inc
inc
cmp
pusha
daa
pop
sarb
add
je
fcomps
or
and
nop
sub
bound
scas
lds
fsubs
lock
outsb
fucomip
sbb
add
lds
add
cmp
push
enter
pop
clc
and
cmpsl
leave
inc
cmp
loopne
xor
add
imul
ljmp
repz
sub
scas
rclb
lea
jns
xor
jmp
xor
adc
loopne
pop
xchg
adcl
pop
scas
arpl
cmp
xor
cmp
pop
xchg
int
sub
insl
dec
clc
cmp
pusha
das
bound
call
addl
shrb
jp
cs
and
adc
adc
insb
sub
or
loope
test
icebp
pushf
sub
stc
and
push
xchg
mov
in
or
adc
mov
and
gs
jo
push
sbb
das
pop
or
aaa
mov
test
mov
leave
add
cmp
and
clc
arpl
loope
sub
and
movsb
adc
adc
pop
jecxz
cltd
nop
pop
je
add
loop
xor
sub
add
sub
test
xchg
push
inc
xor
cmp
xchg
jle
les
add
imull
faddp
xchg
sub
jo
pop
or
sbbl
xor
sbb
andb
jno
pop
jl
pop
pop
aam
and
xor
in
xor
push
test
pop
pop
sub
add
mov
mov
repnz
and
cmp
sbb
test
lock
bound
jmp
call
adc
add
pushf
iret
je
shrl
out
lret
stos
sub
data16
leave
jmp
ja
rcrb
jns
push
into
sbb
add
call
inc
push
stos
jp
jmp
jne,pn
sbb
cwtl
and
inc
inc
fldcw
loopne
add
dec
jo
push
mov
push
or
inc
popa
sarb
mov
sub
pop
addb
mov
add
out
pop
insl
fisubrl
push
pop
cld
xor
incl
repnz
or
test
rolb
add
addr16
outsb
cmpsl
inc
arpl
xchg
in
popf
xorb
xchg
xlat
adc
rcr
shrb
adc
jb
dec
lods
inc
add
into
mov
test
cmpsl
cmpsb
dec
insb
add
nop
int3
das
imul
sahf
xchg
xor
lock
or
push
or
pop
jno
add
xor
or
mov
xor
add
lods
inc
clc
and
out
xor
inc
add
fsubl
inc
mov
repz
adc
xor
aaa
stos
pop
mov
add
test
std
and
sbb
jae
mov
jno
sbb
fldt
add
and
aaa
inc
push
pop
shr
bts
sti
dec
cwtl
jmp
call
add
or
mov
cmp
scas
or
pusha
cltd
mov
loopne
mov
pop
fwait
test
fisubs
movl
dec
mov
nop
pop
and
dec
sub
adc
imul
inc
inc
mov
lods
sbb
mov
dec
sub
sbbb
sahf
nop
mov
add
inc
pop
lret
adc
xchg
xorl
cli
jmp
add
mov
jp
and
add
add
dec
push
dec
dec
test
mov
xchg
add
or
cmp
add
dec
push
and
push
push
or
add
sbb
mov
sub
jp
push
xor
push
out
inc
sti
xlat
test
mov
add
dec
bound
push
std
add
adc
dec
add
fadds
test
decl
dec
pop
push
sub
jb
push
cs
pushf
mov
cmp
cwtl
sub
add
rol
scas
inc
and
movsl
nop
int3
movsb
rolb
clc
inc
add
xchg
sub
test
pop
ficompl
mov
or
jmp
add
mov
stos
or
leave
cmp
or
pop
add
inc
mov
cmpb
adc
int
mov
add
and
gs
cs
sbb
mov
dec
inc
add
add
dec
enter
pusha
sbb
fdivrl
push
mov
pop
xchg
xor
mov
or
push
jne
jmp
sub
cltd
add
imul
mov
cmpsl
call
fsubr
dec
imul
fldt
shll
xor
jmp
add
add
sub
aam
mov
mov
jb
sbb
adc
pop
adc
ja
cmp
pusha
andb
pop
dec
in
fs
test
push
incl
nop
and
mov
sub
fmull
adc
cs
into
popf
lcall
and
out
add
adc
cmp
jae
rorl
aaa
addb
xor
clc
std
or
bound
inc
mov
push
inc
sbb
ljmp
push
adc
cs
xlat
mov
or
sub
push
push
int3
push
loope
lods
and
add
sti
xorb
sub
lock
add
in
repz
mov
fsubl
inc
mov
data16
sub
xor
mov
inc
sub
xchg
xchg
cmp
pop
pop
push
clc
jle
push
fwait
cmp
cltd
loop
sub
mov
xorl
xchg
pop
cmp
or
sub
xor
orb
int3
adc
mov
ja
mov
add
and
push
inc
and
and
or
jbe
cmp
ret
inc
into
push
jg
shlb
sub
int
dec
adc
mov
mov
mov
mov
adc
and
sub
test
and
ja
cli
lea
push
das
mov
xorb
add
lret
call
push
call
movsb
or
sub
mov
sub
jg
cwtl
int3
and
add
sahf
jb
cltd
ret
js
pushf
add
ja
jp
nop
rorb
add
and
testl
loope
jecxz
add
sbb
movsb
sub
push
mov
cmp
add
push
cs
out
hlt
mov
lret
fmull
add
into
inc
sub
jg
das
shrl
arpl
lret
wbinvd
add
jno
mov
loope
xchg
sub
sub
pop
imul
into
nop
xor
sbbl
mov
mov
movsb
lods
ret
add
sbb
aad
dec
call
clc
xchg
cmpb
jno
xor
or
jle
fisttps
aad
or
mov
mov
jae
add
xor
sbb
xchg
inc
dec
add
inc
jo
add
je
pusha
pop
dec
sbb
push
nop
lock
stc
sub
movsl
xor
test
push
push
cli
rorl
test
imul
add
popf
lods
xor
ret
cltd
sub
scas
add
mov
push
popf
add
inc
test
sbb
add
pop
bound
out
int3
push
stos
push
mov
add
or
push
in
je
rorl
add
shl
subb
or
push
mov
icebp
add
xor
sbb
es
movsl
mov
add
inc
dec
pushf
mov
je
pop
sub
pop
xor
jbe
outsb
jo
add
int
data16
insb
outsb
pop
or
dec
dec
pop
add
cmpl
arpl
cmp
add
and
in
pop
lock
xor
mov
mov
push
lret
push
ja
and
jl
aas
mov
mov
cmovnp
repz
cmp
std
orb
cmpsb
loope
or
cmp
push
ds
pop
rcrb
mov
pop
cmpsb
add
mov
cs
ret
dec
pop
scas
test
ljmp
xchg
sbb
cld
dec
and
push
adc
mov
add
in
mov
cmp
leave
inc
add
adc
pop
outsb
fwait
loope
mov
mov
sbb
out
iret
push
add
pop
add
daa
pusha
nop
lahf
push
jo
stc
rclb
add
xchg
push
adc
ja
jg
movsb
imul
and
push
and
mov
and
frstor
dec
and
repz
push
pop
pop
add
mov
pop
dec
jge
push
cmp
adc
jmp
rolb
push
add
and
or
adc
lods
arpl
or
xlat
mov
pop
lcall
add
sar
lret
call
cmpsl
inc
push
cwtl
add
mov
push
push
insl
int
fnstcw
rol
sub
shll
and
or
cmp
pop
mov
pop
and
insl
and
jmp
rol
jmp
jp
pusha
int
pop
sarl
add
in
add
adc
imul
dec
sbb
inc
fists
sbb
lret
adc
nop
inc
sub
lds
dec
test
jnp
sbb
int3
dec
sbb
subb
inc
stos
in
push
xchg
push
jmp
push
dec
mov
js
push
shlb
subb
movsb
jmp
xchg
sbb
iret
stc
movsl
push
jg
dec
les
mov
add
divb
add
data16
mov
jl
add
mov
roll
pop
jg
sub
or
jnp
ljmp
cmpsl
lcall
xor
mov
clc
call
idivl
mov
into
cmp
lret
fs
js
sub
daa
xchg
in
rcrb
or
mov
mov
and
movsb
inc
data16
xchg
cli
add
jnp
pop
outsl
and
add
lock
add
mov
shlb
sahf
hlt
sub
add
xor
in
cld
lret
adc
sub
adc
cmpb
out
fbld
pop
scas
popf
sub
daa
addb
adc
in
add
jp
insb
mov
push
inc
add
push
ror
nop
mov
adc
les
lahf
add
and
nop
cmp
jle
jge
sub
dec
or
sub
pop
std
xor
inc
sar
pusha
test
stos
sub
aas
inc
in
mov
add
lcall
add
pop
out
sarl
jno
or
adc
orb
outsb
es
sub
je
mov
sbb
mov
xchg
and
push
adc
enter
arpl
add
test
pop
loopne
push
push
cmp
dec
xlat
scas
mov
or
es
or
inc
enter
push
push
int3
aaa
sub
repnz
repz
xor
js
ja
aaa
cmp
add
subb
mov
sbb
rolb
add
int
inc
mov
add
fdivl
jnp
imul
aam
dec
aaa
or
shr
or
out
out
nop
and
xor
sti
mov
xchg
sbb
mov
or
xor
mov
test
ja
xchg
stc
sbb
jb
mov
and
add
mov
scas
lods
add
mov
adc
sub
pop
add
test
insb
stos
faddl
jecxz
test
sub
fisttpll
adc
add
test
push
mov
mov
pop
add
push
lock
test
jecxz
fisttpl
dec
lock
add
jle
xor
xlat
add
lret
repnz
outsl
jb
shlb
inc
loopne
clc
add
sbb
mov
enter
xchg
mov
pop
dec
int
pop
dec
in
cwtl
cmc
fldl
or
ja
push
add
int3
or
and
xlat
call
call
rcr
push
cmpsl
iret
add
and
add
xchg
dec
fwait
or
xchg
outsl
xor
jno
ficoml
andl
fcompl
pop
adc
dec
sbb
pop
orb
outsl
add
int
sub
push
call
xlat
mov
inc
imul
inc
pop
xchg
mov
jbe
lock
ljmp
adc
cmp
add
in
xchg
std
iret
jg
xor
and
and
pushf
add
cmp
mov
mov
dec
out
nop
dec
loopne
inc
xor
dec
adc
loopne
and
ss
mov
xor
pop
data16
or
out
mov
sub
jno
fimull
adc
xor
inc
and
dec
xchg
fdiv
maxps
mov
out
pop
jecxz
pop
shll
pop
cmpsb
push
xchg
dec
call
jl
in
arpl
jmp
push
dec
sbb
push
jecxz
pop
xchg
or
xchg
mov
cmp
dec
cmp
and
scas
dec
cmp
xlat
out
cwtl
and
or
int3
pop
adcl
ret
push
test
int3
fucomp
add
fcoms
insb
xor
mov
pushf
add
push
xchg
mov
ret
or
addl
mov
adcb
in
push
fs
pop
jo
lcall
mov
adc
nop
cmp
aas
fildl
hlt
sbb
repz
xchg
jg
scas
add
xchg
add
std
out
cmp
add
jne
inc
lcall
call
jle
sub
cmpsb
xchg
add
add
sub
lock
scas
pop
sbb
addr16
xchg
mov
or
pop
sarl
xor
add
cmp
in
pop
xchg
test
jo
je
jae
sbb
cmp
cmp
ljmp
jg
cwtl
jge
lods
mov
movsb
sub
repz
imul
mov
daa
xchg
dec
mov
movq
mov
jl
push
lahf
jne
dec
adc
negb
or
and
adc
and
or
add
rcrl
or
mov
jae
nop
add
push
inc
push
add
repnz
jo
je
jae
pop
subl
into
sub
xchg
push
cmp
pop
mov
paddusb
add
bswap
lock
xor
sbb
inc
or
adc
add
out
adc
dec
adc
insb
mov
inc
push
int3
sub
hlt
xchg
inc
lock
cmp
into
rclb
cmp
lds
les
or
push
stos
mov
loopne
mov
mov
loopne
pop
jmp
push
fbld
and
push
stc
jae
and
xorl
pop
sub
cmp
jo
lahf
aaa
in
xor
cmp
mov
dec
add
push
loopne
mov
xor
jns
jg
adc
add
int
mov
fiadds
pslld
add
push
clc
add
insb
call
add
mov
cmpsl
sub
lds
adcl
outsl
inc
add
jbe
adc
call
mov
repnz
dec
int
xor
js
and
clc
jne
loope
ret
lcall
jmp
inc
pushf
push
and
mov
dec
xchg
mov
mov
ss
add
test
outsl
mov
das
xchg
js
cmp
movsb
out
ret
add
shll
or
xlat
loope
adc
dec
add
jp
mov
pusha
or
lret
fidivs
aaa
mov
or
cmpsb
inc
add
rcl
cmp
cmpsb
fcoms
inc
into
cmp
dec
jae
dec
aam
jns
sub
pop
xlat
inc
fisttps
in
add
xor
add
imul
lock
scas
and
mov
jg
inc
xchg
xchg
imul
lock
jp
add
inc
enter
fdivrl
jnp
xorb
adc
add
inc
pop
movb
or
sbb
imul
mov
hlt
clc
add
xchg
in
sub
xor
aas
mov
fs
add
xor
push
dec
pusha
xlat
jg
lods
jge
sarb
pop
push
mov
or
xlat
movsb
in
je
add
incl
sbb
add
xchg
dec
leave
add
shl
divb
mov
add
insb
inc
fcoms
add
pop
ss
sub
pop
pop
add
mov
xchg
and
cmpsb
lds
loopne
xchg
stos
in
andl
insl
out
or
inc
or
add
cmp
add
aaa
xor
aam
and
inc
daa
out
xor
fiadds
xchg
test
cli
xorb
add
pop
push
fldenv
jmp
in
shrl
insl
addl
cwtl
iret
or
pop
movsl
pusha
stc
out
les
sbb
loopne
lcall
pop
lods
or
or
pop
sbb
add
inc
push
add
jge
fdivrp
fbstp
lret
repz
rcrl
add
jl
push
gs
pop
add
dec
outsb
nop
xchg
jb
nop
enter
repnz
xchg
adcb
mov
push
out
imul
push
cmpb
fxch
test
and
js
pop
jnp
movsl
pop
sub
cmpsb
add
xor
mov
roll
add
repnz
lret
push
das
cmp
pusha
shlb
call
js
in
movhps
pop
inc
leave
repnz
aaa
jg
xor
scas
pusha
sub
in
mulb
pusha
xchg
dec
xchg
cltd
andb
sub
add
out
ljmp
testl
adc
xor
xchg
xor
xchg
add
push
mov
into
and
out
push
gs
add
mov
dec
inc
sbb
xchg
pop
lret
arpl
lock
adc
bnd
js
add
iret
push
lods
xchg
add
loop
movsl
adc
mov
out
xlat
or
ret
ud2
cmp
xchg
dec
sti
or
mov
add
sbb
insl
lea
test
pop
sbb
icebp
ror
rcrl
push
cmpsl
mov
inc
rcrb
sub
xor
pop
xchg
out
add
jecxz
add
insb
jmp
and
cmp
inc
mov
cmpsb
repnz
add
sub
aaa
cli
ja
iret
lds
add
sbb
xor
imul
in
daa
push
xchg
adc
lea
lret
jb
ljmp
xchg
orb
push
mov
dec
es
sub
cmp
jl
jo
jno
clc
xor
mov
popl
call
push
fisubl
adcl
adc
enter
jnp
sbb
lret
leave
sbb
iret
pop
cltd
push
adc
mov
fs
xchg
mov
roll
test
sbb
in
dec
mov
loopne
cmpsl
pushf
enter
mov
dec
and
in
mov
stc
cmp
add
jmp
insl
jl
add
pop
mov
mov
jns
sub
inc
rorb
daa
sub
inc
jne
mov
mov
sub
adc
add
mov
insb
add
pop
xor
add
push
xor
lcall
in
dec
sbb
in
adc
adc
xchg
pushf
add
negl
mov
adc
das
lds
mov
mov
cmp
and
mov
into
add
mov
ret
pop
jg
das
cmp
scas
enter
insl
add
dec
jno
add
enter
jle
lcall
lea
add
jnp
scas
push
movsl
xchg
pushf
je
pop
adc
loopne
cmp
jbe
add
mov
push
andl
add
repz
out
movsl
stos
sbb
push
pmaddwd
arpl
and
push
sbb
scas
inc
daa
mov
imul
mov
pop
adc
test
ror
gs
add
test
mov
pop
inc
stc
jbe
mov
out
insb
adc
insl
mov
mov
dec
or
add
mov
pop
hlt
push
sub
add
mov
add
orb
je
adc
dec
jmp
add
mov
cmp
aad
xor
mov
das
enter
and
inc
push
inc
add
and
add
jle
sub
mov
stos
add
xchg
push
insl
sbb
cld
and
inc
and
inc
out
daa
add
pusha
xor
cmpsl
add
adc
pop
add
loopne
push
dec
enter
cmc
xchg
sbb
dec
sarl
icebp
add
sub
scas
add
cs
add
icebp
bound
jb
outsl
aam
cmp
jo
push
xor
mov
outsb
imul
jecxz
cmpsb
xor
incb
testl
sarb
and
xor
in
adc
mov
lock
adc
push
xor
and
aaa
jbe
dec
adc
lcall
sbb
movsb
fcmovnb
adc
sbb
push
adc
sub
add
sbb
and
dec
pop
lock
ja
add
aam
add
ficompl
lret
add
cmc
adc
dec
aad
dec
cld
sub
add
test
out
hlt
or
push
fildl
pop
arpl
int3
dec
leave
sub
push
jbe
lods
ja
push
dec
cs
inc
cmp
jno
mov
sbb
jbe
jns
mov
sub
in
cmp
sub
jp
out
fidivrl
jnp
test
or
fisubrs
out
out
add
or
dec
iret
jmp
adc
xor
add
cld
and
bsf
rolb
std
imulb
push
add
loop
xchg
mov
cwtl
ljmp
mov
xorb
adc
mov
push
add
sbb
ds
shl
sbb
inc
stc
push
andl
fidivrs
push
xchg
add
loop
mov
pop
adc
lods
add
iret
jno
push
mov
add
sbb
xchg
cld
fwait
add
jmp
pusha
sbb
cmp
jle
fucom
test
fsubr
pop
add
cmp
push
sti
outsb
add
inc
scas
insb
push
pusha
addb
test
or
sbb
clc
std
int3
add
sbb
bnd
movsb
pop
cmpsl
in
imul
add
shrl
add
jbe
insl
push
add
scas
and
ja
mov
add
mov
repnz
jmp
jmp
test
cltd
in
mov
loopne
sbb
enter
sbb
add
sbb
pop
les
inc
jo
movsb
sbbb
or
cmp
xor
sbb
inc
rol
and
mov
enter
int3
repz
lock
fcmovnu
pop
filds
rolb
aas
and
test
sub
add
add
repnz
cmpsl
test
push
jno
cli
sub
bound
cmp
mov
in
jo
ds
mov
out
adc
push
xlat
mov
sbb
das
dec
pusha
or
pop
scas
push
mov
rol
dec
jno
pop
sbb
ds
fdivr
and
mov
dec
dec
and
popf
addb
mov
sub
mov
xor
dec
xor
push
add
mov
pop
mov
sub
cmpb
xchg
mov
add
push
add
ja
xchg
add
mov
push
push
cmp
ja
add
rolb
pop
fmuls
add
in
or
jns
divb
push
in
push
adc
mov
inc
jmp
add
mov
adc
add
loop
fadds
jno
push
mov
add
add
enter
outsb
inc
fs
xor
push
inc
inc
insl
and
xchg
das
inc
sarb
and
sub
ffree
jne
stos
and
mov
push
aaa
popf
add
adc
push
cmpsb
add
xchg
lret
adc
fistpl
popf
sti
push
pop
imul
jp
popa
hlt
add
push
and
sbb
jecxz
pop
jo
push
aaa
jo
push
lcall
sbb
nop
rolb
inc
or
popf
add
mov
lods
mov
shrb
sbb
lds
cmc
xor
fiaddl
mov
call
or
pop
dec
sbbb
jle
mov
add
test
pop
jns
dec
test
jo
add
xchg
sbb
push
xchg
mov
into
push
mov
imul
or
fdivrp
or
jle
adc
cwtl
outsl
das
std
mov
ss
lea
loop
push
andl
mov
pop
or
rorb
lret
jnp
pop
sub
xorb
lret
xor
push
pop
xor
jle
lahf
mov
mov
adc
rorb
bnd
jp
adc
xchg
daa
add
mov
jo
mov
into
push
pop
push
cwtl
push
pushf
ret
mov
jg
push
rcrl
xor
int3
fwait
movsl
push
jae
cmp
add
sbb
push
aam
xchg
push
jns
repz
test
mov
mov
add
jecxz
mov
pop
cmpl
clc
or
add
in
rcrl
inc
sbb
add
aas
mov
inc
mov
testl
fsubrs
add
pmaddwd
jno
pusha
dec
in
jle
xlat
mov
push
mov
test
roll
inc
ja
orb
sub
mov
sub
push
cmpsb
inc
adc
test
and
pop
js
add
push
ja
add
dec
outsl
or
and
cmp
movsb
add
dec
dec
aam
cmpsl
add
hlt
inc
mov
push
cmovnp
pop
jne
add
inc
aas
shlb
test
mov
pusha
dec
xchg
xchg
cmpsb
pop
mov
pushl
imul
add
jnp
es
or
andl
test
pop
xchg
xchg
mov
xchg
mov
mov
adc
mov
mov
push
sbb
aas
inc
jns
hlt
dec
enter
or
jne
push
add
add
int
adc
cld
mov
add
push
dec
jmp
js
ja
add
mull
arpl
aaa
adc
gs
shrb
mov
lret
pop
cmc
push
xor
in
mov
add
mov
xor
mov
outsb
ffree
add
js
adc
outsl
fcmovnu
sarl
popa
sub
or
jge
cmp
jae
adc
cmpb
inc
xchg
cli
push
push
add
pusha
jl
pop
dec
cmp
pop
outsl
pusha
or
dec
rcll
imul
xor
xchg
jl
clc
or
fcoml
pop
add
cmpsl
out
roll
fldl
add
dec
roll
lock
inc
les
inc
sti
add
or
std
and
add
push
xchg
add
and
sub
dec
adc
adcl
adc
pop
push
or
test
adcb
arpl
xchg
imul
lock
mov
fwait
sub
in
add
or
das
pop
ljmp
test
xchg
add
movntq
push
fadds
adc
jp
or
test
sub
and
mov
and
call
cmp
adcb
lods
xchg
xor
sbb
mov
cmpsb
fucomip
into
lock
aad
add
lock
shl
jno
cmp
push
xchg
mov
es
push
cmp
iret
fldt
test
add
leave
sbb
sahf
push
add
lret
int
add
scas
daa
cmpsl
fst
out
arpl
bswap
movsl
fiaddl
push
je
pop
add
inc
jb
mov
jl
inc
lods
in
cmp
std
push
mov
iret
cmp
mov
stos
add
xor
sbb
inc
and
push
les
inc
cmp
push
rolb
mov
iret
lret
pop
add
ret
imull
call
pushw
lcall
add
scas
nop
pop
add
jnp
mov
add
out
cmc
push
outsl
jns
popa
aam
pop
xor
orb
add
sti
stc
fs
inc
shrl
inc
jle
in
inc
pop
in
xor
add
stos
in
push
or
scas
mov
aad
iret
jg
pop
mov
sub
std
sub
hlt
jle
inc
sbb
adc
lcall
add
add
imul
dec
ret
js
push
jecxz
mov
push
sub
sti
add
lea
push
add
dec
add
imul
inc
enter
push
pop
and
or
adc
xchg
stos
out
jle
push
loopne
lahf
mov
std
sbb
push
insl
xchg
dec
shrb
mov
mov
jbe
rorl
add
or
stc
adcl
add
pop
imul
stos
loope
pop
sbb
repnz
xchg
daa
cmpsb
mov
ret
push
mov
orb
jg
add
bound
ret
mov
testl
sub
adc
fistpl
pop
mov
ss
repz
imul
jle
cmp
sbb
and
pop
jecxz
xlat
adc
add
lea
dec
clc
orb
xor
inc
push
sbb
pop
rcll
icebp
adc
add
in
or
das
aam
xchg
andb
mov
in
add
xor
leave
loopne
test
movsl
cmc
mov
push
jecxz
lahf
adc
pop
sub
add
lock
fistps
adc
add
pop
add
dec
mov
or
loopne
mov
and
mov
out
mov
push
ljmp
loope
in
mov
adc
lahf
inc
inc
jle
rcrb
xchg
rolb
cmpsb
xor
push
test
adc
adc
ds
incb
dec
gs
dec
cmp
pop
push
add
or
fwait
mov
add
fucomp
xchg
cltd
add
add
cmp
in
sbb
cmp
and
test
jns
pushf
or
movsl
ja
or
add
dec
adc
insb
std
inc
lods
pop
pusha
stos
sbb
leave
pusha
inc
scas
fistpll
xor
xor
or
and
aas
pop
lock
pushf
loop
pxor
sub
fwait
jmp
arpl
mov
mov
lods
add
adc
call
add
iret
adc
insl
adc
jecxz
sti
clc
popa
mov
add
add
lock
mov
out
fwait
jle
incl
jns
shrl
sar
in
xlat
add
das
pop
sub
jnp
push
nop
add
mov
rolb
lcall
dec
cmp
xchg
add
or
loope
push
adc
sbb
sbb
pop
and
inc
fidivl
movsb
sahf
ljmp
into
cmpsb
xchg
mov
sbb
outsb
mov
pop
adcb
push
hlt
mov
sbb
sub
cmp
add
scas
jno
cld
push
loopne
fsubs
daa
and
cmp
add
into
mov
jne
pop
lods
enter
es
cmp
jbe
je
adcl
add
push
orb
adc
into
clc
jbe
into
dec
mov
and
lods
stos
push
add
jns
aam
lret
add
rcl
in
dec
xor
xchg
pcmpgtb
mov
or
mov
cld
inc
orb
bound
push
lss
cmp
pop
add
scas
xchg
loopne
mov
add
clc
ret
jno
dec
jb
push
xor
int3
aam
adc
adc
shr
rcll
test
sbb
icebp
data16
fsubrs
inc
movsb
sub
add
ss
jge
push
and
add
lock
push
push
dec
call
das
mov
mov
pushf
movsb
cmp
xchg
leave
xlat
iret
push
add
add
pop
mov
pusha
xchg
sbb
jbe
imul
mov
jnp
jmp
cmc
jl
push
inc
in
mov
jecxz
sbb
imul
pop
jp
add
sub
cmp
int3
call
ja
divb
mov
xchg
jno
test
es
insl
cmp
pop
add
aam
or
add
dec
inc
xor
gs
sub
mov
or
fisttpl
add
int
push
fstpl
add
xchg
andb
adc
sub
or
in
mov
inc
outsl
cltd
lds
add
out
and
lea
jae
sub
xchg
add
mov
xchg
ds
stos
jne
xor
sahf
and
add
cmc
psllw
stos
iret
nop
daa
push
mov
cmpsb
stos
mov
xchg
jge
push
mov
inc
popa
pop
aas
and
rorb
sbb
out
push
mov
iret
pushf
outsl
push
lahf
sub
add
adc
call
sahf
adc
dec
xchg
add
popf
mov
inc
jns
mov
int
vucomisd
std
add
cmp
sbbl
xchg
jnp
xor
pusha
pop
mov
pop
repnz
out
jecxz
sbbb
mov
les
or
inc
addl
sub
in
jbe
mov
icebp
mov
mov
mov
mov
sbb
and
aas
dec
fwait
or
cmp
mov
cmp
cwtl
or
cld
and
and
fldcw
aaa
ret
enter
jg
add
push
divl
add
and
or
out
aaa
in
cmc
add
imul
iret
cwtl
mov
push
stos
mov
inc
in
pop
ss
mov
add
sbb
cltd
add
sbb
cwtl
movb
leave
add
es
inc
call
pop
pop
das
or
imul
mov
add
cs
jle
xchg
jnp
mov
ret
add
cwtl
inc
cmp
cmc
jns
xlat
insl
add
xor
adc
in
dec
ljmp
dec
add
rclb
es
out
jmp
mov
add
andl
push
ss
push
fwait
icebp
and
test
push
jmp
and
cld
and
lret
out
add
addl
test
cmp
in
or
jb
sbb
outsb
in
pop
adc
int
lods
jae
add
negb
push
insl
outsb
xor
loopne
mov
push
push
js
fidivs
mov
xchg
cmp
test
add
mov
out
sbb
ret
add
int
add
je
pop
cld
cmpb
loopne
add
lahf
inc
fiadds
pop
fisttps
lods
jns
add
sbb
pop
cmp
pusha
dec
xchg
fldenv
call
mov
cmpsb
mov
sub
dec
xchg
xor
add
and
inc
sub
or
push
mov
bnd
fiadds
dec
ds
jge
pop
xchg
loop
add
sti
pop
add
ljmp
add
pop
adc
lds
outsl
mov
push
fcomp
push
mov
sbb
imul
in
addl
popa
js
sbb
jno
or
sbb
sbb
loope
dec
outsl
adc
dec
mov
out
cld
adc
pushf
aaa
inc
sub
subl
sub
xchg
fadd
pop
sbb
xchg
loopne
rolb
subl
enter
and
dec
push
aad
pop
fdivp
or
sbb
vmread
mov
dec
add
xor
fmull
add
outsb
subb
sub
dec
hlt
add
push
mov
or
push
xchg
sti
jb
add
dec
loope
sbb
std
loopne
sbb
mov
and
adc
sub
dec
adc
imul
aaa
ret
lcall
adc
ja
lds
popf
push
add
mov
test
push
mov
add
loop
add
pop
xor
dec
xor
add
out
xchg
sub
xor
sub
mov
or
popa
shlb
cmc
add
xor
cmpsb
dec
adc
push
pusha
jecxz
pop
in
insl
or
xor
inc
sbb
loope
in
neg
insb
scas
push
inc
cmp
add
mov
cs
fiaddl
mov
push
insl
xchg
mov
or
scas
jmp
cmpsl
cmp
pushf
add
and
sub
movsb
add
int
inc
jge
dec
inc
insb
pop
push
add
xlat
pushf
add
std
shrb
adc
mov
sti
mov
int
or
stc
mov
movsl
inc
cmp
test
jo
leave
rol
pop
loope
ss
scas
push
stc
call
hlt
or
jne
stos
faddl
cli
in
xor
add
orb
notl
cmc
scas
push
iret
sar
in
xchg
jno
add
cmp
pop
cmp
xor
fidivl
or
jmp
aaa
add
out
and
add
pushf
mov
add
imul
sbb
pop
lcall
fcoms
dec
and
sbb
pushf
loopne
mov
nop
add
sub
or
ljmp
pop
mov
add
cwtl
add
push
idivb
mov
pop
cmp
dec
lret
jns
mov
das
int3
add
lock
jp
pop
cld
imul
rolb
stos
add
sbb
jmp
mov
push
mov
sbbb
outsl
and
xchg
sub
popf
sub
rcrb
lahf
in
add
push
rol
mov
addr16
inc
mov
clc
clc
push
push
mov
push
std
in
in
loopne
das
inc
pop
mov
xchg
and
pushf
pop
loopne
mov
insb
int3
negb
mov
and
in
and
push
jge
push
jbe
mov
sbbb
jmp
jmp
lret
pop
inc
cld
push
add
arpl
sub
cmp
in
outsl
cmp
mov
pop
loope
fsubl
fistl
out
je
roll
hlt
stc
sti
cld
jnp
cmp
sbb
cmp
mov
in
cmc
mov
stos
inc
fstl
mov
shl
push
cmp
gs
xor
ss
shlb
cmp
adc
dec
lret
in
xor
adc
rcl
loop
test
lret
addl
sub
xor
pop
mov
push
mov
push
add
sub
test
or
mov
jbe
fidivrs
into
adc
xchg
insl
sysenter
data16
push
adc
sbb
adc
push
push
push
cmp
add
mov
mov
add
or
lods
stc
lret
pop
or
pop
negl
push
hlt
adc
popa
lret
es
int
add
inc
repz
std
int3
test
test
pop
pushf
rolb
xchg
xchg
gs
loope
jnp
cmp
or
imul
and
xchg
add
cwtl
mov
mov
dec
jae
mov
bnd
push
inc
popf
aam
sub
push
pop
sbb
mov
add
mov
test
mov
nop
fst
or
loopne
lods
and
adc
add
xchg
add
push
cmpsb
fildll
daa
adcb
addl
inc
pushf
aas
ret
cmp
mov
rorb
jecxz
lock
sub
cmp
clc
push
pop
inc
push
lock
push
or
pop
fildll
xchg
sarb
lods
gs
sub
pop
adc
xor
and
adc
out
inc
cwtl
mov
nop
cmp
lcall
adc
mov
int3
out
aad
and
sti
push
repnz
inc
mov
jne
sub
cmc
ret
dec
int
aaa
cmpsl
and
and
cwtl
leave
mov
iret
fsincos
cmp
cmp
aam
and
mov
inc
aad
add
adc
fwait
xchg
imul
jnp
push
push
add
addr16
pop
inc
repz
jns
pop
std
add
sbb
in
mov
clc
faddl
cmc
cld
adcb
add
js
mov
cld
cmp
add
cmp
les
add
mov
add
ret
pusha
mov
hlt
mov
push
shlb
inc
mov
les
add
stos
popl
pusha
add
cmp
and
and
mov
pop
fcomip
mov
push
adc
fldl
das
cmpsb
jo
test
mov
add
mov
cld
cmp
hlt
push
test
lods
iret
sbb
add
xlat
push
sahf
push
dec
xor
add
xor
imul
sbb
pop
aam
adc
inc
das
push
add
add
and
sub
cmp
cltd
push
cmp
mov
jne
not
add
sbb
mov
jbe
outsb
adc
push
mov
xchg
mov
cmp
add
addr16
arpl
add
jns
push
and
cmp
jne
cmp
inc
test
in
mov
jb
mov
sub
jmp
mov
jle
adc
mov
stc
jb
inc
xchg
add
push
lds
add
fcoms
or
loopne
mov
or
repz
push
jl
mov
mov
push
add
sub
xor
xor
mov
sub
cmpsl
add
int
pop
mov
dec
mov
ret
es
jo
cmp
aam
add
cmc
push
daa
data16
into
add
xchg
lock
out
add
jg
daa
add
and
push
cmp
push
add
iret
ljmp
push
shrb
pop
ret
dec
and
fmulp
sti
aas
dec
or
fadds
popf
xlat
cmp
dec
inc
mov
add
sub
sbb
add
fisubl
mov
jb
cmpb
shl
inc
in
add
pop
pushf
xchg
push
incb
xor
and
cld
sub
imulb
xchg
cwtl
add
aam
add
test
orb
call
jno
push
add
loope
and
pop
fcomps
cld
xor
loope
mov
jbe
push
sub
xor
dec
faddl
insb
iret
ret
dec
add
nop
mov
mov
add
out
add
imul
mov
cld
or
jg
add
adc
push
int
jne
pop
add
lock
pop
cmpsb
push
mov
xor
jno
jo
inc
xor
push
sbb
fdivrs
sub
push
gs
dec
dec
ret
add
inc
inc
call
cld
jbe
sub
sbb
lcall
and
in
add
out
in
aam
xor
sbb
sbb
cmpsl
pop
dec
add
shr
lods
inc
clc
test
rcrl
inc
pushf
iret
jno
dec
and
and
lods
add
cmp
rclb
inc
gs
cwtl
shlb
pusha
pop
addb
inc
lods
xor
outsb
dec
into
inc
pop
jo
push
mov
xor
movsb
fsubr
pop
mov
dec
add
out
push
inc
in
pextrw
lahf
call
addb
int3
add
add
or
sub
cmpsb
sub
loopne
dec
cmp
add
push
mov
jnp
pusha
clc
std
add
mov
into
aad
xchg
aas
movsl
ret
pop
push
cwtl
test
xor
mov
leave
cmc
sbb
sbb
loopne
test
or
or
xchg
xchg
popa
adc
flds
sarb
xchg
pop
roll
adc
xor
test
loopne
das
lock
popa
out
aas
repz
mov
dec
cmp
imul
out
into
inc
sbb
add
in
mov
fs
add
add
cmp
sbb
and
test
push
std
out
cld
imul
inc
icebp
sti
pop
mov
mov
shll
add
sbb
je
sbb
leave
movl
mov
cmc
fadds
cmp
mov
insb
dec
cmp
xchg
dec
or
scas
mov
add
inc
push
mull
xor
xchg
iret
scas
adc
in
mov
in
xchg
fnstcw
mov
sahf
adc
sbb
dec
fdivrl
cltd
lea
push
add
inc
push
stos
mov
lahf
jg
add
cmpsl
add
imul
sub
xchg
filds
add
push
jmp
mov
dec
rcrl
jne
negl
shl
and
add
sub
push
add
add
dec
sbb
adc
in
add
mov
jl
cltd
sbb
mov
mov
jnp
sbb
xor
adc
jb
adc
lods
mov
gs
rolb
roll
inc
pop
mov
mov
jp
inc
xchg
cmp
sub
pop
adc
jge
hlt
stos
repnz
shr
pop
pop
xor
adc
jo
xor
pop
inc
cs
add
repnz
jge
lock
repnz
inc
sahf
mov
loopne
in
add
mov
in
add
jp
push
jnp
cmp
iret
ss
cmpsl
cmp
dec
aad
sahf
pop
jae
mov
iret
stos
aam
lds
shll
mov
mov
aaa
loope
mov
in
add
mov
jp
sub
fldenv
into
add
xchg
xlat
movsl
xchg
jae
cmp
insb
nop
mov
jae
mov
sub
lcall
push
pop
pop
in
mov
jmp
data16
mov
clc
add
sub
ds
add
bnd
fwait
push
and
sub
or
mov
incb
inc
scas
jbe
fidivrl
outsb
dec
mov
add
pop
xor
inc
or
or
loop
pop
xchg
cmpsl
pop
pop
std
xor
mov
xchg
rcl
jo
sbb
sub
incb
add
repnz
addb
jae
adc
or
out
outsl
cmp
sbb
inc
inc
xor
int
loopne
cmp
add
sub
pop
add
inc
ret
mov
xchg
lret
filds
push
add
cmp
in
arpl
add
in
mov
imul
push
inc
add
in
inc
stc
adcl
filds
push
test
in
pop
adc
sub
loop
mov
dec
mov
jl
in
mov
pop
add
lods
add
push
orl
jg
int3
adc
xchg
cwtl
nop
jo
into
jo
add
addb
out
pop
in
std
and
sti
cltd
les
push
dec
mov
mov
clc
sbb
inc
inc
push
pop
imul
pop
push
cmp
lds
subb
jno
sbb
insb
or
xor
add
add
sbb
aas
mov
adc
sbb
aam
test
push
inc
cmp
fsubrp
jns
mov
dec
icebp
pop
add
push
subb
dec
or
pop
stos
test
cmp
je
mov
sbb
xor
cmp
loop
mov
xor
pusha
cltd
mov
adc
adc
int3
mov
popa
add
or
addb
negb
das
iret
cld
lds
push
call
or
fisubrl
lret
test
in
repnz
les
das
dec
cld
cmc
or
call
data16
pop
mov
inc
daa
stc
pop
test
xchg
inc
cwtl
mov
sti
add
mov
cmp
ret
sub
inc
push
push
movsl
in
mov
fsubs
pop
pop
pop
rorb
sbb
pusha
in
mov
add
and
mov
shll
std
aas
call
enter
adc
cli
movl
pop
in
dec
sbb
jg
rorb
mov
jp
roll
dec
movsb
cmp
clc
mov
xor
cmp
nop
sarl
call
add
mull
rolb
popa
jle
pop
arpl
xor
daa
push
mov
sbbb
loope
sbb
in
xchg
orb
jg
fs
sbb
and
bnd
out
add
sub
sub
and
mov
fsts
dec
es
push
and
mov
ljmp
mov
push
mov
insb
call
les
bound
data16
mov
add
or
notl
push
hlt
sarb
pop
mov
inc
lods
fldl
cmc
jae
inc
sbb
mov
mov
pop
and
sbb
repz
lsl
cmp
dec
jg
sbb
fs
movsl
je
xchg
repnz
and
lahf
movb
add
xor
and
fisttpll
shl
mov
add
jns
mov
add
inc
mov
add
add
adc
push
fadd
xlat
jl
jb
adc
flds
data16
mov
add
adc
fsub
mov
push
pop
and
adcb
stos
js
add
mov
xor
out
pop
cwtl
adc
pop
add
das
add
cmp
pop
pop
mov
inc
cltd
inc
ja
push
add
pusha
add
push
mov
adc
sbb
mov
push
inc
je
adc
push
ds
mov
loopne
inc
add
lods
mov
lock
push
dec
xchg
add
pushaw
shrl
inc
aad
pusha
ds
push
jl
or
xor
hlt
fcomp
mov
cmp
jle
xor
lea
rolb
imul
push
jbe
push
inc
fbld
pop
sbb
push
jmp
jle
push
add
or
loopne
shlb
in
pcmpgtb
loopne
aam
movsb
cld
add
pusha
in
mov
movsl
or
inc
cld
subb
add
push
jno
sbb
adc
int3
sti
add
add
test
popf
inc
mov
mov
add
mov
lods
lret
aas
into
mov
and
hlt
adc
cmpsl
cmp
pop
in
inc
lods
lahf
add
ret
addl
cmp
add
sbb
lods
test
mov
xor
jno
inc
adc
roll
mov
sub
mov
sbb
cli
lods
add
add
mov
mov
sbb
mov
push
xchg
lea
lods
inc
out
ss
cltd
push
aaa
push
mov
xor
inc
shrb
or
sub
aam
sbb
mov
out
test
or
jno
lahf
mov
dec
in
jbe
add
mov
xchg
lret
bswap
arpl
roll
das
mov
push
add
mov
repnz
les
mov
test
push
mov
dec
add
jl
inc
or
pop
sub
add
cmp
add
mov
arpl
add
lock
cmp
iret
add
roll
pop
xchg
pushf
pop
add
mov
outsb
mov
push
nop
add
imul
gs
addr16
and
adc
js
jne
mov
mov
mov
pop
pop
xchg
imulb
push
jno
xlat
repnz
test
xor
inc
hlt
push
sbb
inc
adc
stc
mov
enter
dec
mov
add
insb
cmpsb
stos
adc
insl
ret
mov
lret
adc
add
in
inc
lock
out
movsb
fsubrp
push
js
sbb
xchg
cmp
jmp
pop
idiv
add
push
cwtl
mov
fwait
xor
es
push
jmp
add
push
gs
lods
cmp
or
or
jo
sbb
push
push
add
and
rolb
adc
sbb
mov
sub
cltd
cmc
sbb
adcl
loope
adc
adc
inc
fldl
push
test
cmp
pop
pop
in
add
add
js
jp
sub
pushf
jmp
addr16
add
cld
inc
data16
scas
cmp
outsb
sub
test
push
sbb
mov
ss
push
add
jo
lea
jnp
dec
cmp
sbb
ret
dec
mov
inc
int3
fildll
ret
sbbb
jno
inc
add
or
pushf
mov
mov
xchg
inc
xor
add
push
ds
or
les
add
add
fcmovu
push
adc
outsb
xchg
int3
jo
pop
rorb
add
and
jp
pop
xor
ds
add
loop
cwtl
aas
dec
mov
push
icebp
mov
add
dec
xor
push
mov
add
cmp
mov
sbb
repz
push
jo
dec
and
in
inc
shlb
cmp
je
nop
loop
xor
cmp
pushf
xor
mov
test
or
pop
mov
rcrb
sbb
stos
ljmp
or
inc
hlt
leave
jb
pusha
adc
or
dec
and
pop
notb
rorb
sub
pop
or
add
or
fnstenv
out
xchg
pop
jg
into
mov
mov
aad
lret
lock
xchg
daa
insb
pop
push
jno
into
add
xor
pop
lock
inc
out
add
push
test
cmp
ss
add
push
in
sbb
add
dec
sub
imul
pusha
dec
xor
lds
jl
push
dec
cli
push
sbb
outsl
sub
hlt
bound
jne
repnz
adc
ss
mov
les
sbbl
out
pop
rcrb
ss
pop
add
jb
imul
jle
rol
push
push
mov
lds
fcompl
adc
and
or
mov
sarl
clc
std
push
add
fidivrs
xchg
push
mov
add
xchg
cltd
lcall
add
fistpll
mov
lods
sbb
rorl
mov
cmpsl
add
sub
stos
pop
out
add
cltd
cmp
jle
and
mov
ds
mov
pop
cmp
rorb
push
pop
jl
cmpsl
dec
call
fs
add
push
jns
add
out
dec
add
push
int3
lcall
ljmp
movsb
inc
pop
addb
mov
jo
icebp
add
stc
and
pop
outsl
xchg
mov
sarb
inc
xchg
xchg
push
cmp
add
mov
push
fistps
xlat
out
icebp
sarb
les
dec
in
or
pop
push
adc
jae
sbb
mov
shll
jbe
mov
repnz
mov
adc
mov
pop
test
add
ret
popa
push
daa
dec
movsb
shlb
int
xor
pop
js
test
test
dec
repnz
adc
jne
and
lret
push
mov
sbb
xchg
lret
pop
add
push
sbb
mov
xchg
insb
add
cmp
xchg
mov
enter
and
inc
or
and
test
scas
push
pop
hlt
pop
call
jns
mov
cmp
mov
adc
xchg
outsl
mov
mov
mov
lods
inc
popa
inc
push
stc
sti
nop
aaa
add
mov
sub
repnz
fsubs
sub
out
mov
push
movd
push
hlt
add
jbe
fidivs
into
lock
add
pop
sbb
test
incb
int
push
adc
test
shlb
mov
sbb
jg
lret
and
pop
add
int
sbbb
and
or
add
pop
out
mov
outsb
add
mov
dec
lret
add
cmp
add
inc
dec
roll
movsb
stos
in
push
and
popf
add
push
in
jns
pop
and
rcll
add
mov
stos
dec
push
sahf
xchg
nop
roll
pop
pop
test
add
imull
stc
jp
mov
add
xchg
ss
and
mov
rorl
adc
or
cwtl
outsl
loopne
fwait
mov
adcb
adc
movsl
xchg
or
and
int
aaa
add
rclb
sbb
inc
cmp
ds
sti
fisubs
or
imul
int3
xchg
inc
inc
push
dec
mov
pop
inc
pop
iret
sub
in
stos
add
or
pop
ret
add
cwtl
mov
mov
jge
cmpsl
cmp
lret
mov
adcb
add
jge
out
leave
xorb
in
popl
cmp
xchg
ret
dec
add
mov
nop
adc
pop
cmc
ja,pt
push
pusha
out
int3
add
add
lds
shl
inc
add
mov
cmp
aaa
arpl
les
loope
repnz
outsl
mov
imul
add
pushf
fdivrs
inc
mov
jo
add
mov
jns
mov
addb
int3
dec
adc
or
and
mov
and
in
ss
ret
mov
inc
out
js
mov
loopne
or
mov
add
xchg
mov
push
aam
or
and
push
ja
pop
ficoms
jmp
or
xor
test
add
and
sub
ror
add
mov
movsl
jl
pop
jbe
add
stos
pop
push
insl
jne
add
shl
sbb
fnstcw
das
iret
mov
pop
and
sbb
dec
and
xchg
sbb
popf
sbb
fwait
ret
cmp
subl
nop
mull
clc
subl
shrb
jno
add
daa
mov
sbb
cmp
mov
mov
rolb
pop
scas
jp
add
movsl
mov
repz
sarl
inc
add
mov
sbb
jno
xchg
pop
rcr
sub
andb
mov
bound
xchg
lahf
mov
flds
and
inc
cwtl
cmp
into
pop
adc
sbb
test
ret
jne
push
add
addl
inc
add
mov
xor
jmp
sub
sbb
mov
push
jecxz
hlt
add
mov
jae
push
adc
push
cwtl
add
popa
xchg
sub
inc
mov
daa
push
pop
add
fld
jne
sub
jbe
call
stos
js
add
push
fdiv
jp
fsubp
add
das
pop
adc
jno
test
fcmovu
pop
or
aas
andl
mov
xchg
adc
stos
push
cmpb
fsubrl
mov
rcll
and
imul
mov
in
pushf
add
mov
push
insb
dec
cltd
rcl
fiaddl
pop
add
and
shufps
add
lahf
xchg
ret
daa
inc
add
push
aas
mov
pop
jo
xchg
jmp
mov
inc
pusha
jl
jge
mov
fldt
inc
js
or
pop
insl
cli
add
or
cmp
std
lahf
pop
inc
inc
push
fs
aam
pushf
rolb
fucom
add
jecxz
sahf
loopne
mov
xchg
adcb
sahf
cmp
subb
and
add
fldz
xor
les
ds
arpl
lods
add
mov
int
push
and
cmc
shlb
cltd
sbb
add
jp
push
and
cmp
sbb
sub
dec
sbbl
inc
sti
add
sbb
aas
fcoml
jo
aad
gs
repz
jmp
add
xchg
mov
das
add
dec
or
icebp
jae
add
jmp
mov
mov
sub
and
mov
xor
add
xchg
adc
rclb
and
loope
jl
cli
ret
rcrl
jns
sbb
fs
stos
sbb
xchg
jno
sub
mov
pop
test
or
or
jle
or
out
mov
add
ds
add
fwait
jle
jge
add
int3
add
sbb
les
bound
add
lret
je
js
loopne
sub
addl
test
add
push
push
mov
add
ret
xchg
sbb
stos
and
add
js
les
add
fisttps
inc
sub
cli
add
xor
lods
push
sbb
cmp
pop
mov
addr16
jle
mov
adc
cmp
and
nop
jp
pop
sub
add
cmpb
out
add
leave
mov
pusha
xor
cmp
rorl
lock
pop
add
jne
iret
lods
ret
mov
sbbl
jbe
cmpsb
aaa
add
xchg
stos
mov
lahf
add
push
cmpsl
imul
xor
mov
jge
xor
sbb
inc
das
and
add
scas
sbb
sub
cmp
add
adc
and
or
sbb
mov
add
jp
and
ds
iret
add
lahf
aaa
das
mov
mov
mov
fsubrs
out
lahf
jo
leave
nop
js
mov
ds
sbb
xor
lret
jle
add
xchg
ds
inc
nop
ja
and
or
inc
pop
pop
pop
clc
cmp
lea
sub
mov
addb
and
push
xor
inc
loope
scas
mov
jl
inc
popa
mov
pusha
int3
aas
xchg
sub
lcall
aaa
inc
ss
ja
mov
push
aam
test
lcall
xchg
inc
xor
mov
xchg
mov
std
mov
scas
lods
jg
out
dec
add
xchg
sub
and
bound
add
lods
sbb
lcall
dec
add
push
add
mov
jmp
and
cmc
dec
pushf
ja
mov
and
inc
imul
popl
fbstp
and
fldl
paddw
adc
loopne
sbb
add
jbe
flds
fwait
pusha
rol
dec
popf
push
clc
xlat
fs
mov
inc
add
push
add
pop
adc
or
pusha
iret
push
dec
cmp
and
pop
add
lahf
fs
in
add
xlat
fidivrs
cwtl
scas
je
cld
sbb
fwait
pop
mov
or
loopne
pop
pusha
jns
js
push
or
inc
adc
ds
add
xchg
es
cmp
sub
movsl
aas
mov
pushl
pop
inc
add
not
mov
push
xor
push
ljmp
arpl
out
push
loop
iret
stc
lds
inc
lahf
add
xor
or
loop
pushf
sbb
add
cs
movsb
xor
adc
mov
imul
dec
outsb
jle
in
lock
dec
and
push
in
mov
dec
popa
movsb
bound
sub
dec
mov
inc
int3
or
dec
insb
add
out
aaa
jecxz
ret
dec
adc
lds
adc
mov
outsb
push
mov
lret
arpl
pop
add
jbe
dec
add
fwait
jns
push
jmp
lods
mulb
scas
add
jns
hlt
pop
loopne
xor
lcall
mov
jns
add
xchg
xor
dec
lock
mov
outsl
jne
mov
jecxz
pop
cmpsl
fwait
xor
sbb
pop
add
iret
fnsave
lds
add
inc
gs
pushf
push
sbb
loopne
sub
sbb
clc
cld
add
pop
bound
push
ds
cmp
loopne
xor
enter
je
in
test
sub
mov
add
adc
cmp
dec
jne
pop
adc
hlt
dec
fisttps
dec
add
mull
fnsave
dec
scas
int
js
add
inc
lods
cmp
inc
fistps
das
addr16
add
push
sbb
out
mov
bound
icebp
cltd
sbb
xchg
mov
popa
wrmsr
mov
mov
ja
jge
push
sti
jmp
mov
cmp
mov
dec
xchg
mov
das
pop
aas
loopne
jbe
ja
nop
sub
andb
sbb
lea
aas
jl
add
mov
cmp
or
or
dec
ss
add
add
ret
lock
mov
dec
cmpsl
mov
push
add
dec
movsl
and
cmp
lea
pop
shll
gs
and
add
or
hlt
addr16
add
pop
push
inc
lea
xor
loopne
adc
mov
pusha
add
dec
jne
push
jb
aam
fiaddl
adc
cld
out
add
les
jae
pop
sbb
aaa
pop
pop
shrb
loope
popf
or
add
or
push
lret
fadds
orb
icebp
dec
fsubl
jecxz
cmp
data16
lahf
leave
push
add
cli
xor
pusha
addr16
adc
in
shl
cmpb
pop
dec
jae
out
rdpmc
sbb
and
faddp
xor
and
cmp
nopl
push
inc
in
push
test
add
out
xor
adc
push
xchg
mov
out
lds
mov
dec
clc
repnz
cmp
jmp
sub
xchg
xor
mov
loopne
out
lock
add
scas
jne
aam
xchg
jb
mov
fiaddl
test
insb
imul
dec
or
fbld
or
jo
inc
and
lds
mov
mov
loop
add
mov
test
mov
ljmp
sub
test
add
andb
cmp
mov
mov
testb
pusha
sub
add
jge
popa
ss
cmp
pushw
pop
jg
test
stos
daa
pop
jns
mov
xlat
lock
xor
jbe
sub
cmp
cmp
inc
sbb
add
ret
mov
jmp
leave
sbb
sub
push
add
sti
or
pop
aam
test
push
sbb
inc
xor
pop
adc
jl
jbe
adcb
movsb
icebp
ds
fimull
inc
add
xor
insb
hlt
adc
cmp
and
or
outsb
jmp
xchg
test
cmpsl
movsb
repnz
mov
pop
lret
xor
dec
pop
sbb
mov
add
mov
cmp
jl
cmp
mov
popf
roll
dec
lock
xchg
push
pop
mov
out
mov
add
aas
and
jge
sti
movsl
sahf
or
out
pop
or
xchg
loope
push
les
add
repnz
pop
push
adc
sahf
cs
jl
jb
jbe
pop
je
add
les
cmp
inc
das
add
shrb
mov
imul
lock
add
out
xchg
mov
jo
repnz
mov
push
xchg
rolb
add
dec
add
add
sub
dec
in
cmp
loopne
addl
inc
mov
stc
pop
movsb
daa
add
pop
adcb
add
xor
sub
roll
mov
stos
test
orb
push
push
jbe
push
inc
in
xchg
push
add
jg
xchg
rorl
add
inc
pop
jb
add
inc
xchg
das
lock
add
outsl
jecxz
aaa
or
add
out
sbb
sbb
rcrb
loopne
cmp
popl
xchg
add
push
push
add
fs
call
adc
nop
mov
rcr
cwtl
jg
mov
repnz
lods
mov
loopne
mov
xlat
sub
xchg
enter
jge
mov
jbe
js
add
les
sbb
insl
test
fidivrl
insb
aad
out
or
repnz
iret
sbb
pop
les
xchg
cmp
push
outsb
jo
ret
into
jne
sub
addb
mov
sbb
xchg
push
je
pop
cmp
lock
sub
sub
cmpsb
and
cwtl
jae
loopne
dec
add
rclb
lock
jnp
add
mov
lock
fsubs
mov
jno
add
fstl
adc
add
jo
pop
jge
cmp
stc
xlat
sti
shr
idivb
pop
add
fbld
fs
rolb
fwait
xor
pop
rorb
and
add
call
je
mov
xor
icebp
add
sub
aad
add
mov
xor
sub
bound
add
add
inc
push
mov
add
jnp
cmp
hlt
adc
fs
xchg
dec
push
outsb
mov
mov
xor
dec
add
add
adc
jle
sbb
pop
rolb
mov
sti
je
es
mov
xchg
sarl
mov
aaa
int
xchg
add
jmp
and
test
js
xlat
fs
sbb
mov
pop
add
subl
out
rcr
mov
fistpll
fstl
lret
pushl
scas
add
and
int3
add
sbb
test
push
out
add
add
push
rolb
loopne
rolb
dec
in
les
stc
xor
test
inc
popa
ljmp
inc
gs
insl
and
or
pop
outsl
pop
inc
adc
int
loope
pushf
add
dec
popf
fwait
xor
leave
and
les
insl
adc
xchg
inc
sub
sub
ja
adc
ret
dec
daa
add
push
add
add
ss
mov
dec
xchg
push
mov
mov
into
adc
iret
fsubrs
adc
mov
aad
sub
or
mov
cmp
push
pop
add
stos
ret
test
dec
rolb
daa
imul
xchg
lods
pusha
push
imul
cmp
fsubrs
cmp
ljmp
daa
inc
aam
mov
add
andb
or
mov
add
rcrb
inc
mov
or
je
pop
jp
jg
adc
sub
lods
add
mov
std
pop
loope
adc
cs
xchg
dec
add
and
sub
sbb
cmp
mov
adc
jo
xchg
add
ficomps
fs
and
mov
add
cmpsb
mov
sbb
push
mov
add
push
lods
cmp
or
sub
pop
dec
popf
in
dec
sbb
add
add
or
cld
loopne
mov
push
enter
add
clc
popa
xchg
lods
add
jp
adcl
add
jnp
aas
inc
das
or
adc
inc
fadds
mov
in
sub
mov
add
decl
or
ja
js
add
dec
add
pop
pusha
push
sub
add
xchg
dec
hlt
inc
dec
push
push
scas
shl
ss
mov
push
cmp
jae
call
jl
js
add
jno
adc
mov
mov
add
jnp
dec
lahf
add
sbb
push
stos
inc
push
aas
sub
jo
mov
adc
psubw
dec
adc
cmp
lods
sub
or
nop
push
dec
push
iret
add
mov
xchg
in
in
dec
add
mov
and
pushf
mov
lea
mov
mov
mov
andb
aaa
and
fmuls
es
adc
sbb
add
mov
pop
mov
fcomi
cmp
lock
sub
xadd
jecxz
scas
fadds
mov
inc
jg
or
xchg
rolb
or
push
jge
jno
pop
jg
adc
sub
add
jns
sub
clc
lds
ja
mov
jbe
popa
mov
add
mov
cmpsl
xchg
aas
xor
inc
fwait
addr16
mov
mov
cli
or
nop
cs
hlt
popl
sbb
dec
pop
in
mov
add
gs
dec
sub
bound
push
loop
cs
add
push
or
xorb
orb
inc
dec
pop
and
out
push
add
push
jg
sbb
ret
inc
icebp
add
mov
mov
rolb
stos
addr16
sbb
add
cld
lods
push
negb
cmp
sbb
sub
pop
add
pop
sarl
jge
cmpsl
mov
cmp
push
repz
push
popf
inc
mov
mov
push
add
or
out
pop
cmp
jl
push
jo
insb
test
outsb
aas
push
or
adc
jge
in
test
cld
dec
cwtl
clc
xchg
mov
add
and
jl
adc
mov
xor
mov
add
jge
add
mov
lret
and
mov
dec
cmp
mov
movsl
mov
lock
jno
inc
mov
fildll
leave
add
pusha
scas
sbb
mov
push
sub
cmp
pop
cmp
xlat
jbe
fistl
or
fisubs
rolb
test
push
push
add
mov
and
pop
std
repnz
fdivs
dec
cs
mov
pusha
add
lock
lea
lods
add
and
add
mov
lods
cmovs
into
mov
mov
mov
fs
jo
roll
add
jl
pop
and
mov
sub
add
rolb
ss
adcl
push
add
loopne
or
sbb
ss
adc
addb
cs
mov
movsb
arpl
or
leave
sbb
subb
bnd
in
fdivrs
add
pop
insb
lret
lahf
fstps
int
movsb
outsl
call
or
xchg
or
pop
mov
out
adc
mov
push
inc
js
mov
dec
xor
ret
add
mov
std
pop
adc
sub
ljmp
and
or
in
mov
push
hlt
jle
and
fdiv
int
out
add
pop
adc
dec
jne
pop
pop
mov
cmp
push
mov
xor
cltd
dec
fimull
adc
push
cli
sahf
push
pusha
popa
sbb
jno
adc
jo
pop
add
andl
mov
test
rclb
push
inc
add
sub
pop
es
xor
push
push
inc
rclb
dec
roll
add
pop
add
sbb
loope
aaa
es
add
popf
mov
dec
out
cmp
sub
jae
sub
shll
out
imul
push
mov
xchg
inc
mov
add
jb
push
in
add
dec
xchg
subb
popf
js
pop
inc
add
pop
cmp
in
mov
mov
pop
les
cmpsl
ja
shrl
das
aam
mov
mov
movsb
xor
jnp
test
sbb
push
hlt
rolb
sub
jl
dec
mov
add
adc
xor
enter
movsl
add
push
mov
cs
rcl
sbb
call
mov
in
movsb
loopne
fadds
mov
jmp
in
sahf
enter
add
adc
xchg
and
mov
xchg
daa
testl
push
push
jo
test
lret
scas
adc
out
mov
adc
ret
mov
inc
jb
int
jns
out
add
jae
in
stc
nop
pop
scas
shr
insl
inc
orb
ret
adc
mov
ficompl
mov
fistps
daa
pop
or
cmp
add
test
loope
sub
cmpsl
cmp
gs
in
inc
rolb
daa
es
xchg
add
rcrl
add
mov
xor
jl
or
adc
lea
push
fistl
fldl
sbb
in
cmpsb
adc
scas
out
cmp
pusha
repnz
sub
or
insl
neg
loope
add
cmp
sbb
aaa
add
and
add
or
sbb
add
adc
jp
inc
test
add
pop
or
pusha
add
daa
xchg
dec
xorb
inc
lret
fs
xchg
add
adc
and
dec
add
aam
cmp
adc
movsl
pop
call
stos
testb
ret
loopne
mov
add
repz
add
push
das
shl
sbb
cs
div
add
add
aam
testl
sub
test
sbb
adc
dec
pop
test
mov
sbb
xchg
push
add
mov
push
push
xchg
mov
add
pop
jmp
add
mov
sbb
mov
add
das
dec
gs
or
jge
icebp
jbe
adc
or
pop
gs
pop
jb
cmc
call
mov
into
fs
push
xor
mov
push
sbb
stos
inc
test
pop
xchg
lcall
fidivrs
add
aad
in
mov
cmp
xchg
push
sbb
hlt
std
jecxz
add
push
jmp
adc
jmp
mov
stos
cmpsl
andl
cmp
xor
add
lahf
or
inc
enter
btr
outsl
jg
sub
ss
inc
ficompl
popf
cmp
add
lea
repz
add
adc
push
add
lods
lcall
push
andl
dec
jno
sub
mov
mov
fisttps
and
out
cmp
mov
fwait
lret
add
sti
pop
lcall
out
and
sbbb
push
adc
js
pop
orl
add
mov
xchg
or
or
std
in
movsl
fildl
sub
clc
pop
push
imul
mov
push
fs
test
loope
xor
fwait
xor
jno
sbb
pop
movsl
add
out
cwtl
enter
add
popf
fimull
add
test
inc
cli
daa
jl
add
jecxz
test
add
adc
or
xlat
mov
pop
hlt
xor
ret
fildl
mov
add
inc
cmc
mov
cld
push
inc
or
mov
lcall
push
adc
andl
sbb
repnz
insb
subb
pop
add
push
mov
imul
or
and
dec
rcrb
rcrb
rcrb
cs
cmpl
xchg
add
fiadds
and
adc
push
mov
mov
xlat
in
stc
xchg
sub
or
jmp
int
push
adc
inc
cld
roll
xor
lea
sub
and
cwtl
fldcw
stos
leave
add
or
testb
fwait
adc
es
rolb
stos
jge
inc
mov
add
adc
add
mov
push
add
dec
lret
jbe
add
ss
stc
lods
mov
mov
and
mov
lcall
mov
push
or
jge
dec
adc
jp
scas
into
pop
add
iret
test
inc
lahf
lock
daa
rcrl
lods
push
loopne
addr16
repnz
mov
stos
xor
pop
mov
ljmp
push
insl
adc
stos
push
mov
fs
pop
and
repnz
dec
cmp
add
push
mov
adc
inc
and
in
add
idiv
cli
add
daa
ljmp
in
add
fcos
cltd
les
xor
inc
stc
pop
adc
jae
shll
cmp
testb
and
pusha
push
loopne
add
je
test
add
insb
adc
jne
add
add
insl
stos
add
mov
xor
mov
movsl
cmp
insl
or
and
adc
add
inc
mov
jbe
in
insb
jo
mov
imul
test
ja
add
inc
lock
sbb
add
aam
call
decb
add
ja
mov
dec
dec
add
jb
pusha
andl
daa
add
add
loop,pn
ja
pop
pop
jl
cmp
xor
enter
push
sbbl
repnz
arpl
es
cli
bound
xor
ficompl
outsb
adc
and
lret
push
inc
and
xchg
pop
mov
sub
sub
xchg
or
punpckhdq
xor
pop
sbb
or
call
dec
cmc
imul
outsb
jmp
lret
jecxz
jl
jno
pop
loopew
pop
fildl
fcomip
aaa
aas
mov
fidivrl
notl
jge
inc
stos
mov
fildl
insb
stc
jo
xchg
movsl
imul
mov
loopne
cwtl
jmp
dec
cmpsl
ss
add
inc
loope
enter
add
or
sbb
sbb
imul
loope
mov
test
pop
add
dec
pop
repnz
add
les
in
jge
pop
mov
cmp
sbb
imul
jg
fldenv
add
inc
lods
mov
sbb
xchg
and
stos
clc
pop
add
cmp
shlb
jbe
mov
fldenv
rcl
sahf
pushf
dec
push
and
int3
and
xchg
push
inc
sub
add
push
xchg
mov
sub
add
mov
pop
add
jns
xchg
in
aaa
cmp
jb
inc
addb
sub
fld
es
push
in
fistl
test
push
add
ljmp
add
push
inc
and
and
cwtl
imull
cmpxchg
mov
les
xchg
add
leave
cmp
sbb
add
pop
mov
sbb
adc
mov
clc
add
repz
pop
clc
push
add
pop
inc
mov
xor
xor
jbe
sbbb
loop
adc
mov
je
fadd
push
cmc
sbb
xor
cvtps2pd
sub
xchg
aas
out
sbb
add
fisubrs
jmp
scas
add
push
sub
add
jae
add
push
cmp
and
mov
add
jns
xchg
jecxz
paddsw
and
dec
fildl
cmpsb
testb
insl
add
jnp
xor
mov
push
inc
add
in
add
and
cld
add
sub
hlt
outsl
inc
add
sub
cld
sbb
mov
xor
mov
adc
daa
rorb
cld
and
push
ret
mov
outsb
inc
ret
add
mov
pop
mov
and
scas
add
cmp
add
fwait
lea
ret
inc
mov
das
add
out
mov
and
decl
lods
cli
out
addb
es
mov
add
and
fdivl
cmp
jnp
mov
and
inc
inc
clc
js
push
cmpl
imul
sub
jg
pop
lods
je
incl
sbb
aam
aad
loope
repnz
icebp
xlat
cmc
inc
cmp
dec
add
fiaddl
mov
mov
cld
add
xchg
mov
jbe
pop
xor
js
cmpsb
sub
sub
xchg
stos
dec
add
sbb
add
and
pop
fnstenv
jne
add
es
hlt
mov
jecxz
test
jge
inc
movsl
cmp
or
or
add
test
xchg
loope
ficompl
xor
sub
movsl
addr16
cmp
push
jl
mov
cld
out
or
in
enter
add
ret
test
xchg
in
jmp
insb
in
xchg
scas
in
loopne
xchg
ljmp
pop
cwtl
js
cmpsl
pop
adc
aad
dec
push
mov
mov
add
sub
cmp
jnp
in
pop
add
push
jmp
sahf
inc
sbb
xor
lds
sahf
or
mov
sub
cmpsb
arpl
push
sub
sbb
mov
add
dec
incb
stos
cltd
loop
adc
jg
daa
jae
push
aad
dec
sub
push
test
int
repnz
xchg
push
cmpsb
add
xor
push
int
sarb
mov
dec
jge
jnp
loop
add
clc
dec
push
arpl
sarl
pop
xchg
pop
pop
add
lret
dec
xorl
inc
cs
xchg
mov
hlt
das
sbb
cmpsb
mov
add
cmpsl
enter
pop
jle
popa
loopne
ljmp
loopne
add
or
lret
mov
mov
dec
js
or
mov
inc
push
test
lods
sub
jae
and
outsl
pop
sbb
lahf
pop
pop
ss
jo
add
add
cmpsb
cld
dec
int3
sbb
add
mov
pop
pop
flds
arpl
js
mov
add
xchg
xor
cltd
mov
or
pop
loope
or
data16
lahf
add
or
push
scas
xor
lret
pop
repz
or
push
cltd
jmp
mov
adc
mov
out
cld
mov
cwtl
movb
out
and
mov
loop
jns
add
sbb
mov
adc
inc
adc
push
jb
push
pop
sub
sbbb
sbb
and
push
clc
add
sbb
add
ja
sbb
jecxz
lcall
inc
mov
movsb
and
aad
loopne
add
test
push
or
add
push
movsb
loopne
push
add
push
loope
cmp
aas
test
xor
subb
xor
inc
ljmp
loopne
das
pop
rolb
pop
pop
mov
mov
icebp
xchg
and
mov
imul
mov
xor
xchg
jecxz
inc
daa
jae
add
pop
push
jns
jg
sbb
daa
in
push
cmp
add
mov
add
int
aam
scas
cmpsb
pop
add
movsb
push
lret
outsl
push
ret
popf
add
mov
jno
push
js
sub
add
loop
lret
jnp
pop
add
jle
mov
cmp
mov
lcall
sub
lds
push
xor
imul
stos
xchg
popa
and
xchg
dec
jg
add
adc
push
inc
es
or
cmp
mov
insl
mov
add
push
aas
push
cwtl
mulb
pusha
add
jo
xchg
addr16
xchg
mov
pop
xchg
imul
in
test
sti
pshufw
mov
mov
xor
popa
loopne
mov
and
iret
mov
stos
pop
shrl
enter
xchg
test
add
ja
jg
and
jl
sbbb
addl
sub
mov
ficoml
mov
inc
pop
aas
add
or
lcall
or
inc
push
shll
loope
adc
lret
test
add
jnp
repz
xchg
mov
and
xchg
add
sbb
pop
out
aad
xchg
mov
add
jp
js
daa
add
mov
pop
orb
bound
shlb
popf
enter
xchg
pop
sbb
sar
dec
lock
and
mov
xchg
nop
add
mov
add
mov
sbb
dec
popa
pop
std
fnstsw
cwtl
mov
data16
jo
sbb
in
movsb
dec
into
jmp
inc
out
int
jns
aam
cmp
add
adc
clc
sbb
aaa
cmp
sbb
pop
mov
add
pop
mov
mov
xchg
into
decl
movsl
and
sbb
pushf
enter
pop
add
mov
mov
sub
dec
jno
sub
std
mov
and
xchg
jnp
rclb
decl
gs
cmp
mov
cmp
mov
sbb
add
test
in
lods
scas
add
addb
out
inc
rolb
hlt
dec
mov
in
push
push
jecxz
shl
ja
std
or
loopne
or
aaa
add
jns
and
lds
mov
sahf
cmpsl
mov
or
mov
adcb
lahf
pop
jp
or
adc
add
sbb
adc
jge
add
xchg
loope
mov
mov
insl
cmc
dec
sbb
adc
sub
js
add
xor
out
jl
test
mov
add
popa
or
stos
jo
add
mov
jne
adc
in
pop
add
add
mov
stc
jbe
add
insb
movl
adc
jp
hlt
add
sahf
mov
filds
in
dec
test
roll
enter
movq
std
leave
addl
fdivrs
mov
lret
in
movb
jg
sbb
xchg
out
mov
add
xchg
in
mov
gs
xor
mov
bound
sbb
mov
add
inc
dec
jmp
repnz
call
cmp
sti
pop
mov
jge
shll
mov
fmuls
gs
cwtl
cmp
push
cld
hlt
lcall
fmuls
push
dec
sbb
xchg
in
int3
inc
inc
je
fmuls
ret
lock
mov
push
loopne
add
xchg
dec
push
mov
in
mov
xor
jbe
sbb
call
mov
insb
mov
cmp
movl
nop
fcompl
cld
add
sub
fdivrs
push
xchg
jbe
jnp
sbb
add
mov
cltd
sbb
jb
ljmp
imul
pop
sbb
adc
jl
jo
push
cmpsl
ret
fldl
dec
lret
or
sbb
xchg
les
test
sbb
rolb
mov
dec
cmpsb
sub
clc
sbb
mov
cmp
test
sub
cs
push
mov
mov
push
ds
cmc
adc
and
mov
insb
sub
divb
push
jnp
sub
dec
adc
xor
add
cmp
add
jnp
xchg
push
inc
jae
or
cmc
bnd
leave
shlb
imulb
cmp
loope
orb
mov
sbb
pushf
mov
enter
add
jne
in
leave
daa
mov
arpl
in
fucomi
ret
rcrb
in
addb
stos
mov
mov
add
adc
jbe
stos
aaa
or
jb
testl
xchg
xchg
cli
cmp
addb
dec
push
lock
and
inc
out
sub
fiadds
cmp
sub
inc
nop
cmp
sbb
pop
cld
add
xchg
push
or
xor
daa
lret
and
js
aam
add
out
pop
pop
add
dec
sub
into
xchg
xor
in
add
fadd
stc
pop
dec
sbb
inc
fs
add
adc
cmc
inc
fadds
or
imul
cmp
cmpsb
repnz
sbb
mov
icebp
jnp
es
ktestw
test
and
add
lcall
xor
call
fimuls
ret
rcll
mov
mov
jg
push
pop
pop
pushf
popf
mov
es
adc
inc
xchg
test
into
outsb
mov
das
add
cwtl
mov
aam
add
lea
mov
pop
or
movsl
imul
ret
and
addl
inc
pop
rcr
clc
dec
pushf
dec
sub
add
cld
inc
push
popf
pop
xchg
rorb
pusha
inc
rcrb
bound
fdivrl
mov
inc
sub
adcl
push
mov
out
add
mov
xchg
sbb
adc
add
lods
xchg
fmuls
mov
jl
cmp
test
sahf
cmp
sbbb
add
into
popf
leave
mov
xchg
dec
andl
mov
sbb
or
and
cmpsb
inc
push
inc
loop
scas
loopne
lods
pushf
or
mov
push
pusha
add
xor
adc
gs
xchg
add
sub
push
aas
xchg
insb
fiadds
add
adc
mov
mov
mov
lea
test
inc
es
mov
mov
add
push
push
hlt
sbb
jmp
add
jae
jle
add
out
scas
adc
xor
pop
mov
outsb
add
mov
xor
repz
cmpsl
mov
mov
sarb
jp
mov
add
jae
jle
mov
outsl
shlb
mov
add
cmc
jnp
int
sbb
iret
adc
enter
pop
jl
jge
popa
arpl
pushf
pop
js
pusha
push
xor
pop
cwtl
jle
push
and
cld
xor
bswap
mov
add
or
push
push
jbe
aas
rorl
add
rolb
or
add
dec
jl
xor
xchg
xor
mov
cmp
sub
rolb
add
in
fwait
cmpsb
pop
or
ljmp
mov
out
inc
test
roll
hlt
adc
jno
cmp
insb
mov
add
daa
mov
mov
ret
pop
or
jge
cmpsl
or
shl
jp
ret
dec
xor
adc
vmread
adc
add
push
adc
rorb
add
xlat
inc
xor
js
pop
dec
jl,pt
inc
js
pop
cltd
push
arpl
inc
cmp
fwait
loopne
add
repz
push
insl
cmpsl
jle
sbb
rol
jl
shr
xorb
fwait
add
insb
aam
out
xor
dec
in
inc
idivl
add
mov
jnp
scas
popl
adc
lret
fnsave
pop
and
mov
movl
xchg
or
push
inc
psrlq
movsb
or
enter
add
shr
and
aaa
sub
popa
jo
in
lods
adc
sbb
mov
add
loop,pt
mov
add
dec
shlb
jnp
add
xor
cmp
xor
das
hlt
imul
pop
lret
xchg
rolb
in
xchg
inc
push
sbb
add
je
iret
cmp
cmp
std
fisttps
movsb
lock
packuswb
jbe
mov
hlt
dec
jge
pop
add
mov
dec
jne
add
dec
mov
xchg
and
mov
pop
das
shrl
lock
iret
leave
xor
imul
or
dec
rorb
add
xchg
test
insl
xor
push
cmpb
pop
movb
pmaxsw
pop
int
xor
rorl
cmp
add
dec
loope
mov
jo
inc
imulb
call
cmp
daa
mov
adc
jns
add
lods
aaa
push
pop
loop
push
add
insl
xchg
mov
jecxz
adc
inc
sti
scas
mov
or
xor
cmp
ret
pop
outsl
add
pop
or
mov
lcall
stos
dec
mov
sub
push
sbbb
dec
jnp
xor
fstpt
sbb
stc
pop
sub
out
cmpsb
jb
mov
cmp
inc
xorb
jbe
and
mov
add
and
fisttpl
jl
add
fidivrs
sub
xor
mov
or
jle
or
cld
test
call
mov
and
mov
add
mov
jae
mov
inc
cmpsb
imul
lea
mov
repnz
addr16
push
icebp
movsb
or
jns
mov
imul
ljmp
dec
dec
mov
ss
insl
into
add
cmp
mov
int
xchg
clc
leave
mov
jb
pushf
lret
mov
in
add
cs
mov
add
push
sub
cwtl
or
test
add
xlat
dec
mov
mov
popf
sub
cmp
ret
shl
std
dec
in
loopnew
or
and
inc
enter
or
xor
jmp
cld
jg
mov
sbb
push
add
mov
int3
scas
adc
movsb
cmp
add
dec
and
sbb
inc
dec
enter
mov
cmp
inc
dec
test
dec
mov
add
sub
scas
or
add
cmp
pop
jo
add
pop
aam
mov
and
loop
add
ds
mov
pop
or
mov
mov
fiaddl
or
inc
pop
add
and
ja
mov
mov
adc
inc
stc
jb
adc
lret
inc
lret
push
push
mov
ds
mov
push
inc
es
jle
mov
add
push
mov
mov
push
push
in
xor
fiadds
aad
lods
cmp
adc
mov
movsl
negb
mov
out
sbb
insl
sub
add
pusha
fs
cld
insb
cmp
add
pop
pop
xor
dec
push
jo
icebp
dec
jb
sbb
adc
ljmp
adc
shr
loopne
jbe
jo
adc
add
mov
pop
inc
sub
mov
fildl
pop
dec
add
jo
xchg
pop
jo
add
jb
sub
or
add
scas
push
test
cmp
in
jp
jns
inc
add
cmc
dec
xchg
lods
stc
test
int3
add
mov
pop
leave
enter
mov
sarb
sti
xchg
in
mov
cltd
enter
push
push
xor
stos
add
inc
je
dec
scas
in
jbe
push
add
xor
push
add
bound
adc
pop
dec
add
adc
mov
popf
sub
add
pushf
add
mov
mov
subb
lcall
xchg
xchg
or
hlt
mov
jo
sub
add
add
add
movl
mov
or
jae
iret
stos
mov
scas
fnstsw
jb
clc
jg
data16
ret
out
dec
pusha
add
test
sarb
inc
sti
addr16
ss
int3
imul
sti
push
add
outsb
int
fildl
push
pop
aad
and
jl
ficomps
sti
frstor
push
jge
xlat
or
sahf
rcll
dec
dec
mov
js
and
sbb
in
add
fsubrl
pop
adc
sti
add
push
dec
push
add
lock
ljmp
data16
ja
xchg
loop
scas
cs
xor
pop
mov
mov
jecxz
mov
push
mov
mov
mov
or
negl
popf
and
or
lea
mov
bound
into
push
insl
addb
mov
push
sbb
call
aaa
pop
xor
jae
and
pop
add
pop
dec
loop
adc
mov
orb
or
fs
dec
ficoms
inc
test
inc
nop
mov
inc
psrld
lds
imul
fdivrl
das
add
jno
and
inc
push
lea
cmp
pop
mov
flds
add
cmpsl
pop
pop
outsl
add
aas
inc
seta
mov
jecxz
mov
lret
lods
fs
sbbl
popf
push
rorl
mov
fadd
inc
add
nop
inc
rcrl
xor
push
mov
mov
lods
fsubrs
add
stos
cmp
xor
scas
shlb
or
mov
lea
in
repnz
inc
imul
push
add
ss
cwtl
arpl
mov
filds
aaa
lds
loop
testl
daa
add
fwait
mov
cmp
sbb
add
rcrb
pop
mov
aam
jl
mov
cmp
ror
pushf
in
fisubrs
add
movsl
movsb
jnp
mov
add
cltd
pop
mov
mov
mov
xchg
xchg
adc
cmc
jle
or
nop
xchg
loopne
cwtl
fldt
xor
jecxz
out
jge
and
mov
mov
jnp
sbb
dec
inc
mov
dec
das
xchg
or
jp
or
and
lret
mulb
pop
or
dec
inc
mov
mov
pop
pop
jae
lock
cmp
pop
cmpsb
jbe
sub
xor
fwait
push
pop
inc
cwtl
and
push
in
pop
mov
dec
lds
lcall
xchg
fimull
push
xchg
movsl
hlt
add
jns
incl
push
adc
cmp
or
add
out
lahf
and
push
push
adcb
mov
adc
or
mov
out
loop
jge
add
jns
pop
add
lahf
sub
cs
aas
push
add
mov
push
add
ds
testl
adc
jae
pop
xchg
lea
push
shr
fimull
sbbb
dec
cmp
test
fnstsw
sbb
mov
or
jno
jp
or
jl
xor
dec
sbb
sub
sub
lret
add
iret
sbb
jbe
sub
or
cmp
add
or
jo
add
push
fisttpll
mov
cmp
cwtl
pop
add
pop
and
sbb
dec
int3
add
jmp
rorb
or
std
ret
loop
testb
iret
or
mov
sub
sbb
popf
mov
jnp
jp
or
pop
xor
jle
ficompl
es
inc
pop
rorl
add
sti
faddl
mov
xorl
push
add
inc
out
rolb
in
dec
add
loop
sub
in
mov
pop
xlat
sarb
movsl
adc
arpl
lret
cmpsb
mov
jg
lret
adcl
pop
outsl
add
frstor
jns
imul
lret
push
add
xchg
shrl
sbb
push
and
push
sub
clc
mov
pop
repz
sbb
in
ficoml
jecxz
cmp
call
jbe
loopne
lea
jmp
push
inc
fisubs
sbb
sbb
ja
inc
sub
mov
lret
ret
arpl
jl
sbb
cmp
arpl
or
sub
aaa
movsb
insl
jns
fdivrs
add
pop
std
sub
clc
lret
adc
xorl
mov
dec
xor
xchg
push
sahf
mov
jns
pop
sub
adc
inc
outsl
loope
sbb
mov
pop
sub
sub
mov
add
add
sub
push
and
pop
xor
push
lret
jle
ret
mov
out
inc
dec
roll
mov
rolb
inc
mov
inc
add
fidivl
and
lods
mov
adc
jp
add
jge
cmp
aad
pop
fwait
xor
loopne
dec
push
xchg
insl
fmulp
cld
ret
adc
fldl
add
popa
push
mov
cmp
and
jl
dec
popf
in
mov
daa
into
rcr
out
jnp
add
push
icebp
add
ficomps
rorl
mov
test
sub
adc
das
clc
mov
xor
xchg
sub
add
stos
xchg
add
incl
cmp
sub
mov
push
adc
add
pop
pusha
sbb
jb
orl
push
jl
pop
add
pop
mov
xchg
lds
jo
dec
ljmp
adc
fsubs
sbb
or
movsl
add
movsb
sbb
xor
sub
inc
aas
cmpsl
sub
inc
or
loopne
inc
sbb
xchg
add
push
lds
out
adc
insl
out
add
add
mov
mov
add
test
scas
add
mov
mov
xor
add
repnz
add
add
enter
rclb
mov
dec
pop
daa
add
and
mov
add
sarl
cmp
rclb
mov
scas
pop
inc
negl
jno
jo
call
xchg
add
pop
mov
lods
imul
in
mov
in
add
lods
mov
add
lds
stos
gs
bound
pusha
cld
add
dec
cld
cmpsl
imul
adc
add
jbe
pop
sbb
fbstp
push
loope
add
push
out
adc
push
cmp
mov
mov
mov
cmpsl
in
dec
add
stc
add
cld
jo
test
test
fiadds
and
das
rcll
insb
popl
loopne
add
daa
rclb
mov
fs
mov
add
inc
idivl
xor
and
add
inc
mov
movsb
movsl
pop
sub
ret
cmpsl
mov
sbb
shrl
cwtl
in
jle
imul
and
adc
in
jns
lock
jp
aad
mov
pop
pop
fistpl
ficoms
repz
call
movsb
xor
adc
rorb
scas
add
add
add
xchg
std
inc
fistpl
mov
xlat
dec
xor
mov
xchg
ja
sub
incb
shrl
das
cmp
mov
or
pushf
push
and
mov
sub
and
mov
and
add
mov
add
add
dec
inc
jb
loope
mov
fwait
orl
jp
adc
call
xorb
inc
sbb
add
mov
cltd
add
sub
in
inc
sub
pop
cmp
jle
lock
fildl
outsl
mov
cs
das
stc
roll
popa
and
cltd
lods
push
add
push
int
cwtl
mov
cld
dec
add
sub
and
inc
or
push
add
pop
cmpb
int3
jnp
add
in
cmpb
and
push
inc
data16
sbb
add
mov
push
push
dec
sub
mov
lock
popa
mov
and
test
sbb
test
fldl
dec
mov
insl
pop
clc
mov
adc
or
stos
mov
int3
sarl
jge
adcb
push
popl
mov
add
testl
lcall
jae
jle
lret
test
mov
add
mov
pop
call
adc
sbb
pop
add
and
jge
sub
xor
pop
mov
add
dec
in
enter
push
add
pusha
jge
add
popl
add
xor
add
push
dec
cli
add
pushf
mov
push
rorb
enter
sbb
lea
ds
sub
jg
add
xchg
pop
filds
jbe
mov
lods
es
xchg
fldl
das
jg
aad
xor
adc
aaa
inc
std
mov
mov
fwait
add
mov
inc
gs
or
leave
mov
push
add
cs
mov
or
jle
js
pop
add
fwait
ret
push
movb
lcall
dec
inc
out
add
test
pop
sub
mov
cltd
jge
add
ret
movsb
add
lds
adc
push
adc
jnp
add
push
mov
push
cmp
jle
push
and
pop
push
es
xchg
iret
out
and
mov
add
mov
mov
loopne
add
outsb
rcrl
mov
cmpsl
repnz
add
xchg
cld
jne
add
aaa
mov
sub
xor
dec
sub
pop
loopne
add
xchg
xor
loopne
insl
cmpsb
xlat
loop
in
jbe
and
iret
jl
aas
xchg
ss
pop
jmp
mov
scas
nop
cmp
add
and
ja
add
jno
inc
test
jbe
mov
mov
adc
add
sahf
mov
mov
mov
fwait
call
inc
out
fmul
xor
iret
jp
fwait
repz
sub
add
in
pop
cmc
movsb
mov
add
iret
xor
add
out
push
add
cmp
push
add
mov
call
cmpsb
fmull
jbe
xor
pop
xchg
filds
rcrl
xchg
or
sbb
test
js
lods
rcrb
loopne
or
es
jo
add
test
cmpb
and
shlb
lods
mov
sbb
add
pushw
mulb
loope
shlb
jns
sbbl
xor
or
adc
sbb
daa
xorb
ja
or
add
or
bound
push
add
daa
icebp
add
dec
xchg
jbe
and
scas
sbbb
test
inc
push
pop
dec
sarl
mov
jns
add
push
mov
mov
mov
mov
lret
pop
imull
pmaxub
inc
sub
lahf
add
jge
fmuls
push
add
sub
fistpl
jno
jmp
lods
call
fwait
xor
fsub
cmp
push
push
lods
hlt
xbegin
rolb
sub
add
icebp
push
jle
cs
mov
and
inc
sub
pmaxub
fistpll
jno
cld
and
xor
cmp
add
add
test
ret
xor
dec
test
push
out
int
sub
pop
ljmp
insb
pop
ja
cmc
mov
arpl
xchg
push
aaa
and
sub
lods
data16
or
push
push
xor
popl
add
push
outsb
lcall
push
jo
sub
xchg
movaps
sbb
mov
mov
fisttpl
pop
inc
sub
and
jo
add
scas
testl
loopne
mov
xor
dec
cmp
push
push
jecxz
xchg
rolb
xchg
test
outsl
mov
ficoms
gs
push
add
jo
mov
shlb
cmp
js
jp
mov
mov
dec
out
sarl
push
lods
repnz
mov
mov
xor
sti
sbb
mov
add
lea
jmp
push
xchg
lret
mov
rcrb
jl
pushf
cld
fbld
pop
icebp
xchg
add
out
inc
push
lret
add
add
add
fisttpl
add
jo
add
mov
xchg
stos
mov
adc
push
xchg
test
shrb
mov
jne
sbb
or
mov
push
add
andb
sbb
in
je
and
idivl
pop
add
es
and
push
sbb
jle
pop
push
dec
hlt
ret
add
or
out
bound
mov
mov
add
xchg
add
jno
aad
add
sahf
ror
filds
push
jns
mov
adc
and
jp
cmp
clc
test
nop
js
sub
lahf
divl
jns
jne
mov
rolb
xor
xor
lods
inc
outsl
add
inc
lea
mov
rorl
xor
or
nop
sti
out
push
push
repnz
stos
sbb
mov
cmp
sub
xlat
push
push
cmp
fidivl
mov
or
sub
jmp
mov
add
shl
rcll
sti
or
loopne
add
shl
lods
sbb
lahf
jp
popl
pop
cmpsb
loopne
outsl
std
mov
loop
mov
mov
in
xor
or
mov
imull
sbb
mov
lods
add
stc
and
cmp
add
sbb
mov
sub
repz
in
bndstx
xchg
jns
jl,pn
sbb
in
inc
andb
pop
and
xor
in
icebp
lds
xchg
popa
or
cmp
add
cmp
mov
xor
arpl
adc
cmp
jg
out
dec
rep
jl
pop
mov
adc
and
add
fdivs
fdivp
call
cmp
xchg
pusha
push
mov
int3
jmp
mov
mov
sub
add
jno
adc
cwtl
add
fsin
sbb
daa
outsb
xor
mov
push
andb
bnd
cmp
test
mov
pop
cmp
mov
dec
pop
js
popf
sbb
mov
rolb
hlt
aas
pop
fdivrl
movsb
xor
pop
or
call
js
leave
fnsave
flds
pushf
adc
pop
movsl
inc
and
mov
pusha
nop
stos
test
into
lret
js
movsl
add
adc
fbld
xorb
add
test
push
jno
mov
fadds
fiadds
leave
push
mov
push
cmp
popa
push
out
jmp
push
dec
xchg
mulb
cmp
test
addb
sbb
in
mov
or
pop
xor
cmpb
scas
or
add
mov
leave
repnz
dec
xchg
or
and
add
mov
pop
and
cmp
les
fs
pop
leave
adc
das
outsb
stos
xchg
lods
pop
jg
jp
ds
jecxz
jbe
add
mov
mov
bndstx
dec
lahf
add
andb
js
pop
push
cmp
sub
pop
dec
pop
add
push
mov
dec
mov
mov
push
dec
mov
xchg
xor
push
mov
in
inc
loopne
lods
and
ss
mov
xchg
loop
mov
jb
push
jl
and
loope
adcb
xor
rorb
inc
add
adc
aad
notl
ja
es
daa
mov
jo
sbb
add
in
insl
add
aaa
inc
ss
inc
lods
push
xor
lcall
inc
dec
dec
cwtl
je
cmp
and
into
jge
mov
jae
add
jle
or
ss
out
add
push
pop
andl
xor
les
arpl
and
addl
push
add
cmp
push
cmp
push
add
loope
add
out
mov
lret
adc
mov
cmp
fcompl
add
xchg
push
cmpsl
adc
in
or
push
push
cltd
jns
insl
repnz
sbb
out
pop
inc
cld
add
movsb
add
pop
pop
xlat
jle
mov
imulb
in
out
pop
adc
pop
add
fildl
lods
movsb
mov
or
fidivl
mov
movl
sbb
push
add
mov
int3
mov
xchg
addr16
repz
inc
mov
dec
shrl
adc
pop
or
or
add
add
jbe
add
sti
xorl
jg
mov
push
or
lods
lcall
das
adc
inc
cld
pop
cmpsl
mov
rcll
mov
mov
mov
push
pop
xchg
jle
mov
lret
int3
in
adc
flds
mov
sub
cmp
adc
sub
pop
sub
and
jne
jno
cld
adc
arpl
hlt
popf
mov
lret
jae
out
rolb
sbb
nop
mov
into
or
xchg
mov
jnp
scas
or
and
and
add
fdivs
cmp
add
and
push
std
sub
pop
add
cwtl
cli
sbb
mov
rclb
pusha
adc
add
push
jo
lds
les
inc
ds
pop
ss
adc
jne
pop
sub
sbb
adc
div
mov
mov
push
in
call
ss
outsl
add
imul
ja
inc
insb
cli
outsb
jae
into
add
mov
aad
nop
push
dec
or
lea
pop
jae
mov
inc
push
outsb
sbb
mov
jb
pop
xor
xor
cmc
add
inc
fstpl
mov
outsl
xchg
add
test
fisubl
fadds
mov
dec
pusha
cmp
pop
mov
ret
js
call
dec
rclb
rcrb
test
or
out
and
lock
push
rcl
in
add
pop
add
xor
or
cld
stc
add
scas
imul
pop
or
dec
xchg
push
add
ds
in
mov
add
xlat
sbbl
loopne
add
in
es
add
call
test
jne
jle
mov
int3
sub
lods
movsb
xor
xchg
adc
xor
popa
mov
add
add
shrl
cmp
mov
add
test
dec
mov
xor
push
dec
rorb
addb
outsb
filds
adc
lret
popa
ljmp
das
loope
push
shr
ror
push
mov
cltd
loopne
cmp
fsub
in
adc
lds
add
xor
rol
add
in
fs
cmp
std
jnp
sahf
jmp
cmc
test
shlb
add
icebp
out
out
in
test
adc
add
std
pop
xchg
dec
sbb
sub
push
jge
mov
pop
mov
das
cmp
mov
popf
add
nop
xchg
arpl
mov
ljmp
add
pushf
testl
adc
mov
cmp
push
push
mov
add
lahf
jg
push
ret
xor
add
push
mov
fisubrl
shl
add
mov
adc
push
fadd
addr16
in
add
and
out
add
mov
ret
xlat
loopne
imul
stos
add
inc
aam
inc
rcr
or
pop
inc
dec
ja
add
mov
xlat
add
push
fmull
mov
jnp
pop
sbb
lock
int
sub
add
mov
cs
in
add
pop
push
push
pop
adc
cmp
adcb
add
add
stos
jo
sbb
xor
sub
jo
xchg
rol
add
push
jecxz
lea
fiadds
int
int3
sbb
push
sbb
pop
mov
std
add
push
frstor
add
pusha
in
or
cmc
loopne
pop
cltd
bound
push
mov
cmp
sub
jecxz
and
ffreep
fs
mov
nop
add
jns
mov
sub
icebp
add
mov
je
adc
pop
notb
bound
inc
stc
aam
xchg
cmp
or
mov
imul
xchg
jne
mov
ljmp
pushf
fs
mov
adc
movsl
jne
jmp
mov
std
add
sti
sbb
cwtl
pop
popa
jl
mov
rcrb
mov
sub
jns
ljmp
out
pop
cs
mov
push
mov
andb
add
jno
push
fsubrs
in
xor
cmpsl
inc
add
movsb
fdivl
mov
add
cmpsl
cmpsb
jmp
test
hlt
mov
lock
jo
ret
jle
fmuls
cmpsb
or
ds
daa
add
jge
je
stc
and
repnz
ja
clc
and
hlt
adc
cli
and
repz
push
xor
test
jle
and
je
push
add
or
mov
fldt
ret
add
sub
xchg
lea
inc
loopne
jp
in
shrl
push
xlat
bound
jle
pop
mov
mov
mov
mov
sub
fisubs
inc
int
jmp
dec
push
pop
rol
fstps
cmc
add
adc
or
aad
sbb
xchg
sbb
xor
mov
xlat
in
js
adc
mov
add
mov
sbb
arpl
xchg
loope
push
sbb
cmp
jecxz
or
or
dec
aad
pop
shrl
fmull
inc
inc
lea
jnp
push
clc
out
imul
mov
pop
and
aaa
add
sarb
vpermt2d
hlt
aad
xorl
mov
out
sub
sbb
dec
call
insb
jl
sbb
ret
leave
add
adc
cmpsb
add
lahf
sub
pop
and
adcb
out
jns
rcrl
jmp
andb
fisttps
sbb
out
in
mov
push
push
add
loop
cmpsl
and
in
shrb
or
xchg
dec
gs
shlb
jbe
hlt
mov
push
push
fildl
shlb
add
icebp
cld
bound
mov
jmp
adc
lods
sub
shl
or
add
jnp
fldenv
call
adc
scas
mov
into
add
inc
sbb
mov
stos
pop
gs
mov
mov
xor
lret
dec
xchg
add
mov
xchg
scas
aaa
inc
or
push
pop
sbb
repz
push
outsb
xchg
cmp
cmc
xor
ret
iret
add
pop
ljmp
test
insl
popa
sbb
ds
daa
testb
sub
shlb
insl
cmp
add
dec
lret
lea
add
mov
lcall
imul
shlb
jbe
in
sub
dec
add
shrb
nop
pop
pop
hlt
sbb
and
out
nop
cmp
pop
add
sub
into
push
fs
xchg
sub
inc
fstl
pop
pop
sbb
pushf
loopne
stos
add
xchg
push
mov
js
pop
jo
imull
xchg
cmp
xor
inc
ljmp
les
or
and
inc
add
outsl
lods
cmpsb
add
jl
jmp
and
je
hlt
adc
push
push
add
mov
xchg
sbb
add
nop
or
aas
pop
inc
clc
add
push
or
push
popa
aad
and
incl
rcll
mov
inc
out
mov
rolb
add
xor
xchg
mov
iret
cli
addr16
adc
cmp
rolb
ja
mov
mov
pusha
cmp
or
insl
inc
nop
movsb
cmp
adc
outsl
xchg
sub
pop
jge
pusha
push
and
cmp
scas
inc
jecxz
test
insl
cwtl
xor
pop
and
not
add
hlt
inc
roll
and
subb
jmp
push
mov
xor
loop
push
xor
and
xchg
cmp
aad
or
or
xchg
aam
add
outsb
inc
std
or
jle
push
add
add
push
inc
jo
iret
dec
adc
add
out
inc
jae,pt
add
xor
mov
sbb
and
icebp
cmp
pusha
xchg
push
shrl
ljmp
idivb
adc
scas
jg
pop
add
xchg
leave
nop
push
imul
push
inc
popa
inc
push
aad
xor
mov
pushf
lock
add
add
mov
mov
insl
daa
roll
pushf
loopne
popa
cmc
nop
scas
or
mov
test
xor
data16
push
adc
mov
mov
add
enter
negl
and
and
add
push
cli
pop
roll
inc
ds
addr16
fiaddl
outsb
je
int3
int
sbb
or
add
decl
xchg
cmp
subb
mull
and
jno
push
sarb
inc
or
adc
add
mov
pushf
inc
xchg
fdiv
lret
add
dec
pusha
or
movsb
add
mov
xchg
xchg
int
out
cli
and
inc
cmp
cld
add
pop
repnz
insl
add
frstor
add
xor
ret
roll
fstpl
les
inc
gs
pusha
fstl
adc
pop
rcll
mov
adc
rcrb
xlat
add
clc
or
sbb
mov
inc
xor
stc
add
cwtl
cmpb
add
mov
cmc
pusha
faddl
and
lods
adc
add
aam
cmpsb
cmp
cmpl
test
daa
mov
pop
and
sub
mov
sarl
movsw
rclb
add
mov
and
enter
iret
stc
xchg
ret
orl
hlt
sahf
gs
rcll
inc
insb
jnp
inc
add
jl
jns
dec
pop
sub
dec
cltd
pusha
mov
in
loope
and
add
pop
sbb
subb
add
mov
int3
rcrb
jge
outsl
ficompl
xchg
push
xor
push
push
jl
mov
adc
rcll
lods
cli
loopne
cld
xchg
and
or
xor
das
ljmp
push
pop
cmp
ljmp
rorb
pop
mov
add
xor
jmp
imul
and
mov
add
or
lock
sbb
sbb
imul
ss
jecxz
pop
imul
int3
js
add
idivb
add
adc
lea
adc
loope
std
shlb
inc
scas
and
icebp
test
flds
add
jne
mov
pop
jnp
pop
cmc
xor
add
mov
fimull
ljmp
sahf
add
sarb
mov
add
fwait
cmovg
inc
shlb
test
add
mov
lahf
add
add
add
das
adcb
sub
jno
add
cld
nop
je
cmpsb
pop
loop
pop
mov
aaa
dec
rcr
aad
add
scas
insl
push
test
flds
and
mov
sub
pop
loope
imul
ret
jbe
jb
lea
mov
repnz
int
push
jmp
enter
pop
mov
push
add
dec
or
rcrb
shl
sbb
into
test
dec
pusha
and
stos
adc
push
ret
pusha
jp
and
scas
mov
sbb
dec
ss
or
cmc
mov
jbe
push
xchg
push
addb
mov
add
addr16
adc
add
mov
pop
mov
imul
inc
dec
adc
push
ret
jo
insl
push
sbb
jmp
stc
imul
mov
fmulp
add
mov
and
stos
mov
sub
add
dec
aad
add
mov
add
ljmp
add
mov
lret
sub
pusha
mov
dec
xor
clts
lods
and
and
aas
add
xchg
aaa
nop
jl
xorl
arpl
xchg
sbb
jno
mov
fdivl
xchg
imul
addr16
and
cld
inc
pushf
roll
stos
jp
inc
add
jne
mov
or
notb
cmc
jecxz
jbe
mov
pusha
ss
push
js
mov
rcrb
xchg
pop
inc
aad
sub
or
orb
and
add
cmp
inc
testb
sub
or
sub
and
and
loopne
test
add
scas
repz
fnstcw
loop
loopne
xlat
or
cmp
jae
pop
bound
cmp
inc
push
jge
or
fdiv
out
sbb
fisttpl
add
inc
das
xlat
and
xor
xorl
in
sbb
je
repz
bound
and
inc
mov
sbb
xor
lcall
jle
jno
fimuls
jns
test
imul
out
and
and
xchg
sub
mov
clc
xorl
push
lcall
jg
push
jne
add
lods
sbb
add
xchg
jl
cmp
hlt
cmpsb
xchg
in
lods
loopne
ret
add
scas
out
out
xor
loopne
mov
sub
fstl
jo
push
jmp
sub
cmp
add
dec
push
dec
repnz
hlt
in
test
adc
jno
arpl
pop
sarl
in
push
cmc
test
clc
aad
or
pop
sub
mov
or
add
test
iret
dec
add
mov
sub
push
sbb
dec
imull
jae
pop
inc
sarl
test
lcall
sub
and
jle
mov
aas
inc
dec
rcr
adc
test
and
adc
test
les
adc
call
push
jp
jmp
mov
mov
in
adc
enter
cmp
clc
add
es
lods
mov
adc
cmpsl
adc
shll
shrb
xor
adc
add
mov
jne
cld
outsl
add
bound
add
cmp
sbb
pop
sub
sarb
ficoml
add
jp
push
xchg
adc
and
lods
inc
add
stc
jecxz
rcrb
add
rclb
add
bound
mov
jmp
mov
mov
inc
sub
pop
outsl
jle
jns
add
push
outsb
scas
jne
xchg
fwait
add
pusha
shll
pop
xor
pop
stos
dec
inc
out
mov
pushf
imul
es
xlat
dec
jne
rolb
in
inc
add
js
jnp
stos
mov
sub
stc
lret
push
and
sub
adcb
popf
mov
iret
or
add
lret
and
test
mov
or
popa
mov
pop
loop
out
sbbb
pop
stos
les
nopl
out
xor
mov
outsl
pusha
and
push
ret
lret
rclb
repz
or
cli
lods
add
xor
lea
in
loop
sbb
rclb
stos
mov
sub
mov
mov
out
adc
nop
test
scas
add
mov
and
add
add
adc
mov
add
fwait
icebp
lds
fisttps
mov
sbb
push
lods
xor
aad
mov
out
jo
loope
mov
and
out
pop
inc
das
add
imul
into
jns
and
xchg
in
add
adc
xchg
and
sbb
mov
pop
push
jge
push
mov
lock
mov
and
xlat
aas
mov
add
clc
mov
mov
mov
add
push
fbstp
inc
ljmp
nop
jg
or
push
imul
sbb
mov
jle
mov
cmp
jmp
or
es
gs
mov
sti
add
xchg
add
lods
xchg
mov
iret
inc
mov
daa
popa
ficompl
cld
push
loop
lea
cmpsl
xchg
out
repz
rolb
ret
in
fcoms
gs
les
cmc
nop
fstpl
out
popa
jge
pop
and
and
xchg
sahf
and
dec
cmp
or
je
mov
adc
pop
pop
and
inc
ja
mov
lock
not
mov
mov
jae
push
push
cwtl
movsl
sub
adc
sub
nop
testb
jle
arpl
scas
inc
ja
sti
cmp
insb
das
add
sbbl
mov
mov
mulb
roll
pop
push
lea
cmpsb
push
inc
cmp
rolb
dec
and
inc
out
nop
mov
sti
pop
add
push
inc
ja
dec
scas
adc
cmc
add
pop
sbb
imul
mov
out
sub
push
lea
cmp
fstpt
jnp
aad
add
inc
loope
mov
adcb
add
insb
out
rolb
subl
xchg
add
pop
lods
or
in
jae
std
xchg
mov
into
sbb
in
xlat
inc
add
cmp
jno
gs
or
jnp
jl
cwtl
pushf
xor
jmp
int
popl
mov
add
cmpsl
pop
ljmp
sahf
scas
rcrb
sbb
cmp
push
out
jne
pop
jns
aas
ljmp
jne
out
add
fsin
dec
popa
jb
add
stos
std
mov
call
ljmp
mov
insb
pop
push
add
xor
jl
add
lods
mov
gs
stos
cld
fs
rcll
pop
add
popf
or
sub
lock
repz
in
sbb
jo
pop
fmuls
mov
xchg
outsb
enter
mov
lock
addl
and
add
add
or
sti
test
cli
sub
lcall
sub
jmp
or
xor
addl
sbb
adc
pop
add
mov
adc
setb
xchg
and
sahf
or
push
fdivrs
add
push
cmpsl
pop
popf
daa
add
sbb
ja
adc
leave
push
inc
cmp
aaa
in
add
dec
and
test
pop
mov
dec
shlb
aam
cmc
inc
mov
push
add
aas
in
fildll
jmp
dec
lock
pusha
mov
out
add
mul
and
fadd
add
inc
out
add
mov
inc
jecxz
ja
mov
xor
aas
leave
insb
add
or
nop
pushf
fisubrl
lret
pop
scas
xor
inc
into
add
jl
sub
adc
lret
mov
or
loope
cld
daa
add
pop
popf
xchg
pop
xchg
xor
or
faddp
dec
lahf
mov
ret
sahf
mov
movl
rclb
je
das
sbb
call
std
add
lock
rclb
sbb
xlat
cmp
add
dec
test
or
shr
pop
adc
jg
inc
popa
into
test
add
stos
cmpsl
loope
mov
out
mov
out
push
rorb
jns
or
push
add
cmp
adc
xor
sbb
xor
bound
jne
insb
in
xor
cmp
mov
adc
xor
mov
mov
jb
sbb
lcall
imul
insl
out
fdivrl
adc
and
sbb
addb
pushf
jmp
jle
add
test
xchg
add
lods
dec
pop
push
arpl
cld
add
and
xor
out
add
testl
sbb
add
dec
in
xor
cmp
jl
push
add
or
xchg
stos
jg
push
pop
mov
inc
cli
icebp
jbe
shlb
stos
movsb
add
mov
xchg
and
sahf
clc
rolb
jns
lret
add
adc
add
add
cld
les
pop
inc
add
inc
push
test
mov
adc
pusha
cwtl
and
inc
add
pusha
aaa
or
call
xchg
pop
ljmp
adc
inc
add
outsb
test
in
add
dec
sbb
inc
daa
fwait
and
add
rcr
rcrl
inc
loop
mov
cmc
dec
sub
pop
sarb
adcb
add
insl
mov
outsb
sub
add
lock
sub
repnz
loop
cmpsb
pop
add
inc
inc
adc
das
add
aam
sti
ficoms
loopne
add
jnp
dec
fsubl
xor
ja
repnz
jo
test
adc
popa
pop
jne
loop
add
push
popf
adc
jb
pop
or
bound
das
js
xchg
test
mov
insl
jae
push
adc
lds
sbb
bound
mov
loop
add
xchg
add
add
cltd
mov
pop
sbb
icebp
pop
addr16
popa
and
or
leave
jb
sbb
rclb
push
mov
push
push
les
enter
dec
cmp
add
cmp
add
int3
fs
inc
fwait
orb
add
or
mov
add
test
mov
push
cmp
movsl
sbb
les
inc
shlb
mov
adc
and
mov
xor
and
push
add
jbe
mov
pop
add
adcb
jecxz
addb
dec
push
add
inc
jmp
jp
push
mov
sub
add
stos
or
orb
adc
dec
cmp
sub
fdivrl
pop
add
ret
lods
add
lret
js
negl
and
add
mov
test
push
gs
leave
enter
add
js
arpl
jge
je
or
add
mov
popf
out
outsl
les
fnsave
loop
in
fsubr
pop
add
std
xor
int
or
es
call
shlb
xchg
daa
adc
mov
xchg
sub
jmp
imul
roll
push
xor
shll
daa
stc
mov
test
pop
lods
jnp
inc
shrl
cmc
mov
add
xor
ret
push
cmp
incb
andl
jmp
pushf
adc
in
dec
jns
pop
mov
adc
xchg
add
subb
add
pushf
and
pop
outsb
ljmp
push
incb
arpl
add
mov
jne
cmp
test
or
cmp
cwtl
clc
cmc
stos
add
scas
fidivs
movsl
add
lods
sti
xor
scas
add
clc
mov
mov
add
aaa
mov
or
sub
enter
xchg
cmp
and
lock
dec
jbe
mov
pop
push
outsl
lcall
je
adc
add
movsb
enter
or
mov
cmpl
add
adc
inc
out
dec
sub
push
or
push
dec
and
sub
mov
dec
adc
stos
add
push
push
sbb
dec
movsl
adc
es
filds
mov
push
sbb
mov
outsl
mov
fstpt
mov
out
inc
in
and
add
pop
dec
push
test
mov
jo
sub
pop
cmp
xor
popa
je
subb
hlt
add
adc
adc
rcrb
pop
in
mov
xor
xchg
movsl
push
mov
cmp
add
adc
aas
aad
pop
inc
add
xchg
sbb
lds
daa
xchg
xchg
pusha
add
aad
xchg
add
push
cmpsb
adc
dec
je
mov
xchg
lret
or
cmp
popa
sub
add
sub
jbe
push
inc
jb
jae
add
xchg
cmp
sti
nop
leave
aad
out
or
mov
xor
adc
je
mov
sbb
aad
cmp
cmp
in
jae
sahf
mov
dec
inc
pop
push
insl
nop
push
add
push
mov
sbb
in
add
shl
jnp
sub
xchg
es
add
mov
mov
inc
cld
add
or
mov
pop
lock
xor
sbb
repnz
cmp
mov
add
out
fs
aam
add
push
loope
test
pusha
push
jge
lock
mov
ljmp
mov
out
push
insb
jecxz
lods
mov
and
sbb
mov
adc
sarb
sub
dec
and
push
scas
pop
mov
xor
test
test
push
mov
dec
add
aam
cmpsl
jns
push
add
in
insl
lea
lods
push
pop
hlt
test
xor
xchg
mov
out
add
mov
add
mov
ret
xchg
ds
or
js
hlt
add
mov
push
shll
adc
mov
mov
and
and
cmpb
push
adc
inc
add
dec
push
out
shrl
mov
aam
sub
dec
mov
jbe
cs
sbb
mov
sbb
mov
loopne
imul
sti
add
jne
fwait
repz
sub
lret
jo
mov
add
push
or
ss
xorb
sub
mov
je
int3
cmc
mov
cmp
jl
in
inc
xor
and
daa
mov
es
add
lock
inc
push
les
push
mov
sub
inc
out
push
sbb
jo
fcmovb
mov
sahf
ljmp
add
ss
push
shlb
cmp
add
imul
xor
push
mov
sbb
andl
scas
xor
sarl
pop
cmp
xor
addb
jl
cmp
mov
inc
daa
push
inc
push
and
jp
subl
clc
mov
out
add
frstor
leave
stos
and
orb
lahf
mov
push
cmp
shlb
popa
mov
cltd
mov
in
js
add
dec
sbbb
mov
das
call
loop
jo
pushf
add
or
push
insb
add
jns
jnp
and
fmull
hlt
cmp
add
mov
push
enter
push
add
jle
lock
jl
cmpsb
push
mov
add
pop
mov
lahf
cwtl
push
sbb
add
push
push
mov
es
mov
sbb
lock
cld
insl
cmp
sbb
xor
add
enter
add
mov
sbb
dec
push
inc
pusha
test
adc
cmc
pop
dec
in
rclb
add
adc
and
addb
sub
mov
out
cld
sbb
inc
jo
inc
stc
push
inc
add
std
xor
imul
cmpsl
jo
xlat
pusha
lock
test
das
push
lea
or
and
data16
add
popa
sbb
add
jbe
add
cmp
mov
adc
pusha
ret
sbb
popa
cmp
mov
cmc
jns
outsb
add
inc
and
std
adcl
jge
add
pop
xchg
fadds
pop
mov
or
push
xchg
inc
add
mov
adc
not
pop
ljmp
cmp
rol
add
mov
xchg
rcll
mov
add
adc
call
rolb
pop
or
mov
mov
xorl
xor
nop
add
int3
cltd
and
sub
cld
add
and
add
push
jo
lret
add
jb
aas
cmc
adc
pushf
add
fdivl
jecxz
test
inc
or
repz
aam
mov
fstl
test
sub
insl
mov
push
lea
pop
add
and
fdivl
mov
xor
adc
add
stos
add
cld
or
js
dec
call
pop
push
mulb
enter
lods
mov
mov
mov
roll
movsl
jmp
mov
fdivr
sbb
dec
xchg
movsl
jnp
or
shlb
adc
jge
and
popa
nop
xor
push
imul
jle
sub
out
in
enter
push
test
fistpl
out
subl
pop
cmpb
add
ljmp
cmc
add
sub
hlt
add
into
mov
movsb
pusha
testb
mov
pop
sbb
xchg
xor
add
mov
rorb
jb
add
test
sub
mov
addr16
add
je
aaa
jnp
add
sbb
repnz
mov
add
rcr
jmp
jb
add
lods
add
inc
dec
push
or
add
cmc
jnp
xchg
xchg
mov
ja
add
inc
leave
push
add
test
xor
int3
and
jbe
xlat
inc
icebp
mov
inc
aam
test
mov
leave
mov
mov
dec
adc
inc
adc
add
fdivrs
les
add
in
pop
mov
cmp
sbb
mov
inc
cmp
out
test
dec
inc
popa
adc
cmp
cmp
add
imul
jne
mov
fnsave
push
mov
int3
push
fwait
mov
cmc
jbe
xchg
movsl
mov
in
and
sub
pushf
sbb
push
mov
and
mov
loope
loopne
leave
iret
lods
sti
add
adc
lds
or
rolb
stos
push
xchg
shll
mov
out
pop
sbb
cmp
inc
rcl
pusha
mov
mov
sbbl
ja
sbb
add
clc
loopne
int3
push
fsubrs
mov
jmp
jo
add
push
ret
mov
into
rcrb
push
add
and
add
dec
cwtl
jmp
push
rorl
mov
mov
aam
enterw
push
sub
sub
testb
mov
add
xor
cmc
or
sub
lret
in
loop
add
xchg
push
je
inc
outsb
xchg
cmp
jns
add
push
in
into
sbb
fistpl
jle
cmpsb
fsubrs
enter
lahf
lock
adc
in
adc
push
push
mov
inc
out
imul
rcll
daa
pop
arpl
enter
inc
add
std
out
or
dec
fsubrs
jns
out
and
pop
enter
inc
ret
add
add
adcb
pop
cmp
movsl
loope
jecxz
adc
outsl
fldt
ffree
mov
sbb
or
mov
cmpsl
add
add
mov
aam
loopne
sub
out
xchg
xorb
hlt
xchg
fdiv
push
rolb
jmp
cmp
xor
jo
and
sbb
movsb
add
mov
leave
cmp
arpl
add
mov
cmpsb
lock
add
xor
cwtl
mov
adcb
pop
mov
jecxz
movsb
cld
rolb
cmpsl
xchg
out
repnz
divb
hlt
addl
int3
in
xchg
test
mov
adc
arpl
rorl
mov
or
xlat
sub
js
js
and
outsl
bnd
push
pop
push
inc
sbb
jp
sub
cmp
sti
jb
es
sub
jbe
add
addr16
psrlq
stos
mov
cmc
sub
fadds
jbe
in
jl
rcrl
add
dec
pop
jmp
add
sub
nop
test
stos
add
or
push
or
and
xor
sub
xor
add
aas
jne
pop
push
fisttps
mov
lods
movsb
or
cmp
xor
xchg
push
js
scas
sarl
add
jp
stos
cmpsb
sti
xchg
add
xor
or
stos
cld
lret
mov
dec
in
add
add
jnp
cwtl
sub
or
mov
cs
cmp
daa
mov
mov
push
push
mov
in
add
lds
mov
loopne
xor
in
bound
or
fwait
hlt
mov
pop
lret
in
xchg
mov
cwtl
nop
lods
add
bound
sub
add
adc
pop
rcll
or
sub
mov
or
lods
mov
sub
movsl
cmp
cmp
aas
lahf
cmp
adc
clc
pushf
pop
ds
xor
and
out
sbb
fldt
mov
lcall
add
xlat
lock
add
movsl
pop
or
mov
pop
movsb
mov
ret
out
aam
gs
add
and
lcall
push
std
push
and
adcb
in
inc
and
mov
dec
clc
loope
stos
push
cmp
add
les
loopne
or
lretw
cwtl
and
or
or
push
xchg
mov
add
clc
mov
dec
outsl
lea
int
adc
rcll
add
les
push
mov
lahf
add
pop
divl
add
pop
dec
fwait
add
outsl
leave
xchg
sub
push
cwtl
dec
hlt
sub
lcall
rolb
jnp
and
inc
in
pop
stos
mov
int
or
es
or
dec
adc
movsb
mov
pop
popf
push
xchg
xchg
adc
in
ss
or
std
push
xor
nop
in
stos
adc
add
hlt
jle
leave
outsl
orl
push
dec
sbb
cmpsl
pusha
push
adc
subl
fcom
mov
push
loopne
mov
push
ficomps
mov
sub
adc
pop
jb
je
cmp
add
daa
dec
jge
cmp
mov
cmp
xor
lcall
mov
in
mov
add
out
imul
cmp
xchg
add
cmpsl
fincstp
push
popa
jmp
xchg
xchg
cmpl
dec
int
inc
adc
hlt
mov
cmp
pop
imul
les
jp
jle
add
outsb
mov
rcr
mov
loopne
add
adc
out
adc
cltd
mov
add
sahf
fisubrl
sbb
sub
add
mov
mov
push
je
sbb
addb
jmp
das
add
push
or
jmp
mov
add
aam
push
shlb
and
ljmp
mov
fwait
out
add
or
inc
dec
and
pop
call
add
shll
cs
out
mov
call
or
mov
add
push
stc
stos
push
add
popf
pop
das
in
mov
jp
pushf
mov
shl
add
out
xlat
nop
iret
test
aas
aaa
out
jo
and
fiaddl
leave
int3
inc
fwait
jge
pop
mov
and
pop
dec
rol
jns
and
dec
add
mov
hlt
sbb
and
mov
mov
pop
jp
rcrb
sub
or
iret
add
jle
pushf
fwait
popf
into
push
daa
inc
or
push
add
mov
jl
cwtl
mov
stos
pop
and
mov
orb
jmp
ret
push
push
xor
sbbl
iret
icebp
dec
pop
inc
cmp
or
inc
add
cwtl
xor
mov
out
and
mov
xor
cmp
mov
jno
sub
add
int3
ret
cwtl
insb
sbb
cmpsl
adc
cmp
je
pop
mov
adc
adc
test
and
ret
dec
add
cmp
inc
dec
sahf
add
add
pop
sbb
out
loopne
jmp
add
das
cmp
imul
loopne
testl
pusha
ror
push
xchg
add
mov
push
test
lock
push
ljmp
adc
sub
pushf
adc
add
fmuls
add
fisttps
add
jae
mov
scas
inc
inc
mov
add
push
push
mov
cmpl
pop
lret
and
hlt
je
nop
nop
and
lea
ja
add
cld
sub
loop
cwtl
in
inc
add
push
mov
add
mov
dec
es
cmp
aad
cli
rorb
shlb
aaa
pusha
sub
bound
test
pop
je
push
enter
push
mov
xor
add
or
cld
sub
sub
divb
adc
mov
pop
jmp
cld
push
push
subb
adcb
add
mov
or
stc
and
xor
testb
fsubrl
xor
hlt
sub
std
jno
pushf
mov
andl
sbb
cmpsb
mov
sub
add
leave
clc
inc
mov
sti
jge
iret
pop
je
filds
sub
jmp
push
mov
pop
or
frstor
cmp
sbb
xchg
pop
out
stc
insb
inc
popf
enter
push
sti
fwait
dec
nop
inc
jne
add
out
outsb
push
and
adcl
jns
xor
inc
icebp
or
testl
and
add
xor
out
add
push
gs
or
pop
inc
sbb
adc
mov
ror
mov
mov
je
negb
push
xchg
shlb
add
or
lea
inc
push
xchg
repz
dec
add
cli
mov
cmp
cmc
dec
jbe
and
mov
xor
add
iret
jle
adcl
push
dec
sub
outsb
loopne
adc
ret
lods
add
jle
jmp
cs
insl
in
add
mov
mov
bound
pusha
add
dec
insb
dec
mov
xchg
in
add
add
dec
cmpsb
insl
rcll
lahf
adc
test
shlb
mov
arpl
aas
sbb
add
add
fisubrs
mov
ret
out
fwait
pop
mov
xchg
cmp
pop
movsl
je
ret
cld
jl
add
shrl
sub
in
int3
adc
imul
and
xor
insb
sub
adc
mov
pop
or
inc
bound
adc
jnp
push
test
cmp
dec
fsubrp
lock
mov
mov
xchg
sub
lea
jne
pop
dec
js,pn
lods
or
xchg
andb
adc
bound
andl
dec
xchg
add
lock
lcall
loopne
add
lea
sub
add
shr
push
sbb
arpl
xchg
orl
push
add
pushw
jp
je
mov
sbb
or
out
xchg
in
popf
add
cmp
sbb
nop
pop
and
push
lahf
cli
ds
stos
sub
or
ljmp
orl
test
sbb
pop
add
adc
lods
lds
sub
cld
cld
cmp
hlt
add
shl
test
push
fwait
xchg
mov
xchg
add
sub
xorb
dec
ja
mov
imul
icebp
sub
mov
shll
repnz
dec
dec
clc
pusha
or
push
xlat
inc
add
and
int3
mov
xchg
call
mov
loop
xor
push
pop
fisubrs
aad
test
pusha
adc
scas
cmp
inc
mov
and
push
jl
add
loop
in
and
ds
and
cltd
fsts
mov
cmp
rolb
pop
lods
mov
sub
add
mov
fcmovb
add
popf
add
cmpsl
cwtl
inc
or
and
sub
pop
mov
sti
bound
add
jae
rcrb
aas
add
sahf
cltd
mov
xchg
or
mov
cmpb
add
ds
in
push
shlb
inc
sub
sbb
mov
and
and
nop
fwait
mov
into
add
and
inc
loopne,pt
cmp
lcall
inc
xchg
and
add
pop
sbb
mov
cmpb
add
enter
mov
movsl
clc
sbb
divb
jecxz
cld
or
shrl
call
adc
js
daa
dec
arpl
sbb
adc
cmp
imul
lock
inc
jns
add
stos
or
cmpb
nop
add
xor
xor
in
add
push
add
inc
mov
push
sbb
ja
mov
pop
inc
inc
out
ret
stos
adc
out
pop
add
ror
push
stc
jo
add
cmc
sub
jo
pop
das
mov
pop
repz
aad
iret
jns
in
mov
imulb
and
hlt
add
into
mov
insl
lods
xchg
xchg
pusha
xchg
dec
xor
loop
mov
loope
loopne
lahf
addl
and
pusha
push
sub
es
out
add
in
inc
ss
push
out
jle,pn
shlb
lods
inc
fistpll
jmp
rorl
nop
clc
das
pushf
xor
or
xchg
xorb
mov
les
iret
cltd
lods
or
add
add
mov
aaa
lret
test
out
or
adc
add
dec
shlb
icebp
inc
and
jne
add
bound
xor
mov
dec
mov
sarb
pop
js
sub
and
add
mov
push
aaa
cmpb
add
out
mov
mov
cmp
sub
adc
push
and
mov
ds
and
mov
xorb
out
add
fdivrs
mov
daa
inc
hlt
push
xchg
cmovo
or
add
aaa
fst
push
and
fidivrs
cwtl
cmc
loopne
incb
mov
mov
jg
sub
sbb
and
and
add
xor
or
inc
jb
test
scas
add
pop
test
jo
inc
add
inc
inc
mov
enter
jnp
dec
push
add
cmc
pusha
xor
je
xor
aam
popa
cmp
and
add
pop
test
out
js
add
shlb
add
inc
push
xor
dec
adc
insl
divps
sbbb
add
mov
inc
movb
push
inc
jo
pusha
dec
pop
push
stc
les
andb
mov
push
xchg
sub
stos
mov
jecxz
push
in
daa
inc
sahf
pop
fdivrs
loopne
testb
in
xchg
add
jmp
aad
or
pusha
pop
lock
add
fs
sub
add
faddl
xor
cmpb
loopne
mov
andb
add
imul
out
add
pop
sbb
add
mov
iret
xchg
push
fwait
pushf
cmp
stos
mov
stc
rorb
add
xor
sbb
adc
cmp
jecxz
add
sub
cwtl
add
vmaxps
jb
jecxz
mov
mov
es
lock
popa
mov
add
inc
nop
test
fcmovb
inc
leave
push
add
mov
jle
dec
nop
sbb
rorb
shlb
pop
push
lods
adc
push
imulb
xchg
xor
add
pop
sub
rcrl
add
ficoms
sahf
sti
and
inc
mov
insl
mov
xor
cmc
push
sbb
or
fdivr
and
pop
sub
je
add
enter
add
adc
test
sbbb
jnp
mov
dec
push
xor
pop
and
cmc
inc
adc
adc
mov
in
jp
mov
inc
mov
add
psubsb
jb
or
fildll
and
jnp
pushf
cmp
ljmp
add
jl
add
mov
fstps
add
jmp
push
add
mulb
fmull
pop
xor
cmp
lcall
and
pop
add
jl
ljmp
dec
mov
or
int3
in
loop
mov
xor
add
xor
mov
ror
dec
add
out
inc
fsubr
cmp
inc
and
ljmp
mov
mov
lock
cmp
add
cs
pop
shl
jl
fs
add
push
frstor
dec
repz
in
cmp
push
adc
xchg
dec
jne,pn
add
dec
adc
imulb
je
inc
js
xchg
fildl
push
repz
jl
mov
clc
popa
add
xor
inc
xor
jmp
movsl
push
test
push
and
and
insb
pop
push
daa
sarb
daa
nop
and
int
xchg
and
dec
and
dec
movsb
or
or
pop
lods
loope
out
inc
xor
pop
push
testl
or
xchg
dec
pop
insb
hlt
test
add
push
inc
fimull
aas
mov
jns
arpl
ret
stos
imul
loopne
mov
add
fmull
sub
jl
or
hlt
add
inc
lods
add
test
jnp
sub
pushf
enter
imul
xchg
notb
mov
in
in
inc
into
xchg
insl
cli
pusha
add
mov
jns
sub
out
outsl
dec
add
cwtl
xchg
les
jl
add
jecxz
pop
xchg
xchg
pop
lret
leave
nop
fildl
jo
shrb
lods
lock
hlt
addb
sahf
ret
mov
je
jae
add
and
call
pop
mov
imul
out
rclb
cli
or
inc
adc
mov
pushf
iret
in
push
sub
add
pop
mov
arpl
das
filds
cmp
outsb
popf
sbb
and
enter
mov
lds
cmp
lock
push
lock
sub
mov
loope
popf
call
mov
add
xchg
push
mov
push
sub
ret
cmpsl
push
add
lock
loopne
div
xor
lds
inc
sarb
mov
int3
add
ret
jnp
test
movsb
repz
pop
insb
pop
add
fldcw
jle
loopne
mov
daa
loope
sbbb
cltd
sub
xchg
sbb
cmp
push
and
rsm
jb
jne
lahf
test
sbb
dec
add
xlat
fisubrs
pop
sub
cs
cwtl
mov
outsl
inc
add
test
sbb
push
mov
aaa
push
add
idivb
add
jmp
fwait
jno
int
xor
call
test
jb
push
frstor
lcall
sbb
jns
inc
xchg
add
mov
pusha
nop
add
dec
iret
test
rclb
fildl
outsl
lock
xchg
insl
push
xor
call
js
addr16
sub
arpl
push
rolb
negb
or
adc
test
outsl
sbb
jmp
push
and
in
sarl
enter
jge
imul
xor
adcb
shrb
outsb
es
clts
aaa
push
inc
pop
iret
cld
push
add
int3
add
push
and
jno
inc
clc
pop
incb
inc
lahf
adc
dec
out
mov
inc
aaa
sbbb
cwtl
int3
dec
fildl
stc
lcall
adc
in
lea
mov
outsb
les
mov
add
popf
into
fistl
adc
dec
add
lods
push
ret
xor
daa
shrb
jp
push
clc
mov
jns
test
pop
pop
push
sub
add
lods
add
clc
xchg
hlt
adc
sbb
sbb
inc
push
add
jmp
cmp
cmp
aad
jnp
in
and
mov
mov
js
cmp
add
out
adc
hlt
inc
pop
adc
das
ret
push
mov
sbb
mov
mov
mov
enter
pop
sbb
inc
ret
rolb
xlat
sub
xchg
rclb
sub
sahf
dec
adc
inc
push
mov
xor
mov
je
hlt
arpl
testb
cmpsb
test
aas
ret
and
mov
repnz
mov
ss
ds
fiadds
mov
pop
in
push
inc
clc
dec
pop
add
gs
aam
fstl
orb
mov
add
xor
orl
hlt
repz
cs
dec
movsl
mov
shrl
push
test
mov
mov
lahf
jp
ret
or
int3
rcrl
and
je
int
mov
pop
xchg
cmp
jb
or
pop
push
fcomp
sbb
mov
cmp
add
xchg
loope
mov
pop
cmp
add
ja
cmp
pop
or
lods
pop
pop
test
add
test
mov
insb
outsb
xchg
movsb
in
add
test
rol
jbe
mov
sub
repnz
add
lret
fadds
pushf
push
test
faddl
orb
add
inc
mov
xor
push
add
repnz
xchg
add
pop
out
adc
rcl
pop
call
cmp
in
xor
pop
pop
stos
jle
jecxz
add
in
clc
or
ja
push
in
insb
pushf
push
xchg
mov
adc
mov
push
add
subb
decl
in
ljmp
push
pop
xor
jae
xchg
push
sbb
jle
gs
dec
out
pop
jbe
fdivl
dec
or
and
mov
sbb
pop
movl
mov
add
faddl
scas
inc
andl
mov
fs
rclb
fcmovnb
movsb
or
pop
mov
in
jne
xor
sub
add
jge
or
inc
addb
dec
push
or
adcl
jecxz
inc
jo
out
movb
xchg
lahf
sbb
adc
daa
add
sbb
push
jne
push
add
cmc
js
test
push
hlt
or
es
cmp
add
imul
cmp
gs
inc
dec
test
and
jb
mov
int3
daa
mov
mov
mov
mov
imul
xchg
add
andl
adc
adc
mov
dec
mov
xorb
dec
mov
enter
iret
or
xor
dec
push
jg
test
imul
push
sub
ret
jl
shr
daa
mov
mov
pop
sbb
fisttps
rcrb
push
push
xchg
and
push
mov
and
push
das
pop
pop
xchg
in
in
or
add
or
xlat
pop
outsb
xchg
lahf
cwtl
jl
sub
test
int
add
es
cld
data16
inc
mov
pop
adc
adc
andb
test
subb
mov
in
or
push
out
hlt
or
enter
dec
xchg
adc
push
test
push
ret
js
push
push
fidivrl
inc
sub
aad
sarb
xchg
inc
mov
xor
xor
test
pop
push
add
scas
insb
jmp
mov
xor
shl
xor
es
out
add
mov
jae
pop
mov
add
jmp
cmp
movsb
jl
pop
add
push
test
flds
pop
sbb
sbb
je
mov
repz
fcmovb
add
pop
inc
jl
test
mov
add
mov
add
aad
push
outsb
and
jnp
out
popa
mov
clc
mov
push
add
popf
or
push
enter
pop
push
test
fildl
in
push
jne
adc
inc
pop
and
pop
add
loope
xchg
mov
pusha
jo
sbb
lret
mov
lcall
cwtl
shll
add
xor
pop
pushf
mov
add
icebp
insb
dec
lahf
scas
inc
cld
add
hlt
mov
add
test
bound
adc
push
xchg
hlt
adc
hlt
pushf
test
and
lret
ss
in
and
pop
pop
add
pop
mov
cli
jp
ss
and
les
pop
aad
adc
cld
shrb
adc
mov
push
adcl
push
fst
cmp
add
insb
inc
adc
cmc
dec
fisubl
dec
xchg
popf
loopne
mov
dec
subl
lods
insl
push
mov
das
repnz
jnp
mov
push
dec
movsl
jb
and
xchg
xchg
push
sub
imul
push
add
cltd
int
gs
lahf
dec
ja
ds
or
pop
shll
lahf
divl
mov
in
mov
mov
add
in
mov
in
loope
add
lods
pop
add
add
add
pop
aad
in
push
and
out
add
push
add
dec
test
pop
das
push
pop
loop
jb
mov
cmp
add
jno
dec
ss
jecxz
sub
jmp
jbe
cmp
mov
andl
adc
ss
jp
inc
jg
add
mov
xor
xor
mov
jnp
jae
popf
ret
jbe
leave
imul
add
push
daa
test
push
pusha
push
mov
fwait
test
inc
std
data16
in
cltd
cmp
maxps
jo
movsb
movb
pop
test
insl
xchg
add
add
push
insb
sbb
sub
and
mov
iret
pop
dec
or
and
ret
lret
jo
add
scas
jo
test
rol
add
xchg
add
test
fcoml
pop
push
test
in
nop
inc
lds
adc
aad
rcrl
and
dec
add
gs
sub
mov
repz
dec
jge
add
fidivs
enter
add
xor
cwtl
add
mov
icebp
jno
bound
add
insb
mov
and
inc
out
jmp
xor
shlb
push
js
dec
in
les
mov
xor
add
test
mov
cmp
and
sub
push
leave
add
or
stc
cmpsl
inc
add
lahf
loopne
add
and
xchg
jge
push
cmp
stos
xor
dec
xor
inc
fcoml
iret
push
inc
xchg
stos
push
es
mov
jno
fiaddl
cmpl
sub
mov
std
adc
mov
test
imulb
jb
xor
adc
repz
call
fisttpll
cmc
in
test
cmp
dec
push
jns
mov
in
pop
out
pop
fimuls
pusha
test
ds
cmp
clc
or
int
xor
maskmovq
imull
add
push
xchg
or
addr16
or
cmp
mov
ret
dec
or
cwtl
js
lds
and
rclb
mov
dec
test
scas
in
fadds
leave
mov
or
adc
fs
jno
add
fstps
and
xchg
and
pop
mov
js
mov
adc
pop
sbb
pop
cmp
pusha
add
jge
or
push
inc
xor
shlb
jg
ja
add
mov
in
iret
mov
sbb
test
test
or
dec
and
xchg
cld
cwtl
or
inc
adcb
in
push
add
lods
sbb
mov
outsl
mov
adc
jae
or
and
xlat
lret
cmp
cmp
or
add
mov
add
mov
xchg
add
xchg
cwtl
rclb
pop
mov
add
pop
adc
rclb
xor
hlt
inc
in
xor
push
push
mov
ss
add
sub
das
add
push
mov
mov
cmp
scas
mov
push
lcall
dec
mov
repz
popa
negl
sbb
add
test
jg
pushf
ffreep
or
or
inc
es
pop
bnd
cmc
sbb
cld
jp
sub
or
das
push
jo
cmp
lods
movsb
push
int3
andb
clc
daa
dec
mull
js
mov
aam
cmp
jb
sub
addb
cld
popf
pusha
shrb
sbb
scas
loope
lock
push
add
or
dec
mov
sub
call
and
addr16
add
xor
faddl
add
rcrl
and
sbb
mov
adc
cmp
xchg
imul
loopne
and
mov
fwait
cmp
inc
pop
mov
pop
push
outsl
xor
pop
loope
add
adc
clc
sub
pusha
test
or
inc
mov
mov
sbb
das
or
ja
push
and
in
pop
stos
shll
in
call
push
cmp
xor
in
inc
pop
add
std
push
out
and
adc
or
movsb
stos
call
in
push
test
lods
cld
int
inc
push
sbb
movl
nop
stc
jae
add
ljmp
add
sbb
lods
stos
push
xor
or
pop
and
dec
mov
cmp
mov
cmp
dec
daa
stos
or
xor
pop
or
ljmp
clc
cmp
push
outsl
sbb
rcrb
inc
sub
mov
add
mov
out
outsl
mov
in
pushf
pop
movl
xor
sbb
rcr
add
test
nop
es
popa
fisttps
push
in
cli
pop
add
and
add
fsub
popl
xchg
clc
dec
pop
sbb
mov
xor
lds
fdivr
add
dec
outsb
xchg
mov
and
add
sbb
cmc
push
outsl
sahf
adc
cmpb
rolb
orl
mov
sbb
jne
lret
test
nop
sbb
loopne
out
loope
iret
add
dec
das
cmp
push
ja
test
sub
test
mov
andb
cmp
cmpl
sub
bound
add
pop
mov
loop
and
mov
push
push
je
fistpll
xchg
pusha
clc
dec
and
jns
pop
dec
lret
xor
sbbb
xchg
push
mov
lea
iret
mov
scas
fldenv
mov
cmc
add
bound
adc
add
scas
cmpl
sbb
adc
into
xchg
mov
test
push
fidivs
cmp
cltd
add
ficoml
sahf
adc
adc
add
push
adc
add
mov
jp
add
xchg
sbb
iret
cmpl
js
add
fnstsw
popf
push
lahf
pop
in
fldcw
call
subl
add
testl
clc
je
jmp
add
adc
xchg
adc
cmp
jmp
add
test
out
or
mov
popa
std
add
call
dec
cli
push
jbe
mov
mov
in
insl
dec
xchg
xorb
and
lahf
add
jae
cmp
mov
insl
jmp
pop
xchg
das
and
dec
pop
lret
or
and
mov
add
push
mov
xchg
dec
scas
push
xor
mov
sub
int3
cmp
jmp
and
sbb
pop
xor
push
inc
cli
or
stc
fcom
add
mov
add
stos
pusha
leave
imul
cmpsl
sti
add
lahf
jmp
push
and
sbb
lods
add
mov
repnz
mov
fistpll
insb
ror
les
add
dec
lcall
popa
mov
cwtl
xlat
into
fstp
mov
dec
pop
jmp
dec
rol
in
sbb
mov
mov
mov
cmp
jecxz
push
sub
ret
out
jo
ret
jp
mov
mov
enter
mov
cli
fdivrl
add
adc
pop
sti
dec
shrb
add
pusha
jb
add
or
cld
loop
cmp
testl
nop
and
cmp
add
xor
sbb
add
cwtl
inc
add
ljmp
push
mov
mov
repz
add
sbb
ret
int
push
mov
mov
dec
clc
out
add
shll
dec
mulb
inc
xchg
dec
add
icebp
repnz
xlat
loop
xorb
stos
ja
or
test
push
push
cltd
pop
inc
push
add
jne
in
mov
sub
lea
out
or
ficomps
sub
add
add
sahf
popf
js
add
sub
mov
xchg
mov
out
jp
ret
fwait
jle
nop
sub
mov
fsubrp
sbb
fs
add
out
mov
lds
dec
pop
call
xchg
inc
out
add
mov
pop
add
push
lods
cld
mov
pop
and
dec
out
aam
aam
stos
das
jb
xchg
mov
aaa
adc
sub
mov
xchg
push
lcall
jg
mov
test
cmp
sbb
add
addr16
sti
out
std
jno
rcll
jnp
push
jnp
adc
xlat
pusha
lods
sahf
leave
jge
sub
mov
loop
ret
dec
clc
or
add
xor
lret
and
mov
mov
cmpb
lret
test
in
hlt
add
mov
je
jno
jl
add
addr16
out
pop
add
cmp
cmp
adc
in
loopne
movsb
push
out
inc
int
push
jbe
add
mov
adc
xor
add
gs
shll
add
push
mov
loopne
pop
push
out
out
mov
cmp
mov
sub
push
add
int
add
scas
ffreep
aad
pop
out
mov
mov
fstpl
sub
sub
or
and
dec
cwtl
xchg
pop
or
scas
mov
into
inc
and
inc
mov
js
xchg
adc
lods
adc
add
sub
push
ret
mov
adc
pextrw
mov
mov
sub
pop
adc
add
dec
imul
in
rclb
int3
addr16
add
int
dec
insb
dec
add
cmp
mov
in
das
push
mov
roll
mov
jbe
nop
pushf
cmp
add
jbe
add
lcall
inc
nop
mov
outsl
fs
add
xor
xchg
mov
int3
add
and
sub
pusha
or
dec
inc
mov
fistl
addr16
and
fs
cmp
out
scas
add
jae
pusha
fwait
add
and
stc
outsb
stos
call
xchg
jmp
sbb
add
cmp
dec
add
cld
mov
stc
rorl
mov
je
ds
aam
push
arpl
sbb
or
add
rolb
cltd
ror
lret
cmp
cli
jg
add
ret
or
das
dec
inc
cld
add
sub
mov
fstl
push
repnz
bound
out
stos
xor
lods
xchg
push
inc
lea
icebp
jo
test
out
mov
les
and
sub
arpl
lldt
and
xchg
jae
int
xchg
std
sbb
fimull
xor
jo
add
xchg
movsb
ss
add
nop
and
in
pop
mov
incl
push
push
mov
xor
pop
add
or
mov
rolb
inc
lods
push
and
les
ret
mov
push
dec
lock
test
mov
fbld
mov
add
sarb
rorl
push
cs
cli
add
divl
add
push
movsl
insb
shll
add
call
in
xor
dec
mov
scas
add
or
jmp
shrl
movsb
ja
add
cmc
mov
insl
rcrl
cmpsl
cld
jb
das
aaa
roll
add
ror
xor
or
xchg
movsb
add
push
gs
orb
adc
jb
arpl
iret
add
inc
repnz
push
mov
jg
vmread
cmpsb
ja
cwtl
sub
inc
pop
add
sarl
sub
cmp
adcb
stc
repnz
fsubs
inc
ret
or
xchg
add
and
leave
add
into
daa
mov
and
andl
sti
pop
add
pop
out
out
push
dec
das
adc
test
push
push
or
cmpxchg
mov
leave
call
dec
jns
add
das
lods
sub
out
jbe
push
sbb
mov
xor
xchg
or
lret
add
or
lods
pop
add
cld
bound
jb
add
pop
in
aaa
fmuls
adc
and
push
mov
lds
rolb
pop
icebp
push
cli
popa
mov
push
nop
pushf
aad
pushf
add
sub
and
add
xor
jp
ret
push
rcr
inc
lds
cmp
mov
test
bound
sub
sbb
sbb
pop
int
push
ljmp
pop
xchg
dec
jo
notl
popf
mov
adc
mov
std
fiadds
mov
mov
test
push
add
in
fsubrl
hlt
inc
push
xor
sti
data16
pop
xchg
add
inc
cmp
inc
or
cwtl
inc
cmpsl
add
mov
lock
mov
pop
mov
out
mov
call
add
lahf
test
cmpsb
bnd
add
std
inc
and
divl
add
lcall
rorb
fadds
ja
add
aas
repz
es
pop
push
push
cmp
xor
and
jno
mov
gs
adc
push
xor
dec
add
lret
push
and
clc
imul
bound
jo
mov
pop
mov
je
shll
adc
cmp
popa
mov
dec
test
mov
pop
jno
dec
rolb
call
add
xlat
pop
dec
inc
or
insl
xorb
cmp
hlt
push
mov
pusha
loop
pop
mov
out
repz
sub
pop
aam
push
mov
cmp
cwtl
addr16
data16
dec
cld
jno
add
jg
dec
notl
gs
insl
pop
popa
adc
jp
mov
pushf
out
sbb
les
clc
push
dec
loope
add
adc
call
clc
mov
iret
inc
aad
sar
icebp
cmpsl
cmp
cmp
cld
jp
mov
roll
or
stos
das
call
push
add
adc
test
jmp
cwtl
xchg
into
imul
pop
lea
dec
cmp
sahf
add
js
les
es
fs
sub
adc
add
test
add
rcll
and
les
add
out
jb
dec
pop
test
pop
sbb
jno
arpl
clc
icebp
pop
mov
lods
pushf
punpcklbw
test
sub
push
dec
push
dec
jns
and
pop
xchg
mov
xchg
repz
test
add
mov
cli
icebp
lods
pop
mov
aam
lret
fdivr
push
fstpt
xchg
fucomp
cmp
add
add
add
out
adc
xor
imul
push
les
add
jo
sbb
adc
cmp
arpl
cmp
add
jnp
pushf
shrl
daa
adc
pop
add
push
dec
pop
add
out
popf
cmp
mov
adc
bound
add
or
fwait
popf
add
push
pop
or
inc
add
outsl
sarb
jb
paddsb
pop
das
arpl
adc
inc
cmp
sbb
loope
adcb
out
bound
jg
add
cmc
data16
out
sbb
or
dec
pop
xchg
add
push
test
cmp
cmpsl
mov
add
dec
sub
pusha
jbe
jns
test
jg
clc
pop
mov
test
outsb
sbb
mov
js
loopne
push
in
subl
or
xchg
or
cwtl
js
and
inc
outsl
rolb
inc
outsb
loope
lret
push
add
fcmovnb
adc
les
loope
lret
stos
sarl
hlt
pop
push
imul
jae
loope
xor
cltd
subb
shrl
cmc
add
inc
int3
mov
sub
cmp
popa
in
add
loopne
mov
add
mov
mov
jmp
adc
mov
inc
add
mull
pop
sbb
cld
movsb
inc
mov
mov
emms
lahf
movsl
lds
nop
fsincos
add
dec
jbe
mov
mov
pusha
add
sub
add
mov
push
mov
fwait
sub
jb
add
orl
adc
test
aam
inc
pop
sub
push
adcl
hlt
or
add
sbb
ficomps
add
jb
arpl
jle
les
js
cld
push
sub
mov
pusha
addb
add
imul
dec
push
rcrb
and
dec
pop
dec
and
iret
int3
push
jecxz
inc
sub
out
inc
jno
insb
sti
in
add
jae
adc
push
in
cs
les
sahf
aad
cwtl
negl
nop
mov
mov
mov
and
jmp
pop
sub
add
sub
out
or
sahf
out
insb
out
jmp
int3
imul
sub
jo
or
push
mov
xor
adc
jns
icebp
inc
add
mul
jo
clc
add
cmpsb
adc
fsubl
cmp
add
add
push
lods
pop
or
rclb
mov
in
adc
and
mov
add
and
in
popa
add
shll
call
mov
fdivr
add
scas
out
ljmp
vcvtps2pd
in
cmp
mov
jo
pop
add
push
cmp
gs
dec
jl
add
pop
pop
sbb
test
push
imul
and
idivl
nop
lods
or
out
daa
stos
aam
xor
pop
fstp
repnz
or
fisubs
jmp
dec
sahf
lret
repz
push
pop
sbb
push
mov
jne
pop
push
in
dec
imul
aas
roll
dec
je
add
ficompl
xlat
or
sarb
cmpsb
sbb
inc
add
stos
push
and
in
mov
mov
add
dec
add
iret
add
jg
das
sahf
dec
add
ja
xchg
add
imul
leave
jns
add
sbb
rol
nop
inc
add
and
dec
test
int
scas
mov
add
add
jle
mov
cmp
add
das
fcomps
lret
jmp
je
add
push
jbe
cmp
test
ror
add
hlt
xor
call
ficomps
leave
lds
mov
jo
xor
adcb
mov
jb
test
test
das
fstps
inc
cmp
add
pop
lea
cs
and
jge
push
push
lock
cld
cmpb
rcrb
jecxz
popf
loopne
fnstcw
and
int
enter
jmp
add
pop
mov
stos
or
lret
sbb
jg
aas
adc
add
movsb
jle
std
sub
in
add
out
ss
jecxz,pn
adc
cmp
dec
clc
add
push
add
jnp
jg
mov
push
mov
pop
out
and
xchg
jb
add
pusha
and
add
scas
out
add
pop
or
fnstenv
cmp
fadds
xchg
sub
jno
scas
jg
cmc
cmp
std
ja
mov
xor
dec
adc
mov
add
dec
cs
jbe
sbb
push
push
loopne
push
xor
pop
in
js
pop
adc
test
inc
jmp
add
or
addl
pop
in
cmp
sysret
xchg
decb
dec
pop
push
add
push
pushf
sbb
adc
mov
add
insb
cmpb
scas
lea
outsb
or
and
mov
sbbl
inc
adc
loopne
add
jnp
xor
xor
push
xchg
push
dec
push
pop
test
fldl
lret
movsb
add
loop
scas
and
inc
xor
and
out
pop
dec
pop
and
push
sbb
out
mov
and
movl
or
adc
pop
dec
out
and
push
cmpb
outsb
mov
fists
enter
test
fildll
inc
dec
insl
pop
jo
mov
inc
sbb
xchg
dec
push
shll
out
jnp
mov
fdivr
sub
sbb
cs
adcb
and
decl
sbb
push
mov
call
or
adc
test
xchg
pop
add
loop
cltd
and
sub
or
sbb
cmp
rorb
sub
xchg
nop
add
inc
test
in
inc
popl
test
and
pop
inc
insb
les
pusha
je
enter
or
cmp
sbb
push
sbb
adc
clc
sub
add
pop
rorb
sbb
and
test
ds
adc
inc
cmp
or
shl
aaa
fdivrs
mov
out
xchg
cmpsl
xchg
jae
sti
sbb
dec
loopne
pop
popl
jns
and
cmp
leave
cmp
jo
add
lods
sbb
jecxz
aaa
iret
into
mov
add
ja
pop
lahf
repz
insl
adc
sti
add
stos
dec
pop
mov
adc
hlt
outsl
testb
addb
shl
jb
je
lret
and
mov
sub
and
pushf
or
adc
mov
ficomps
jmp
icebp
sbb
xor
mov
push
out
testl
repz
add
sub
or
fs
shl
std
add
insl
je
ja
icebp
iret
test
ds
arpl
push
jecxz
jmp
jmp
mov
and
pop
pop
dec
out
lock
andb
enter
pop
pushf
repz
xor
xor
jp
popw
les
repnz
hlt
frndint
push
xorb
dec
in
mov
fiaddl
add
xor
push
cmp
sub
cmp
mov
xor
xor
add
and
hlt
and
and
pop
inc
sub
inc
mov
inc
int
dec
pop
adc
repnz
enter
dec
ja
add
push
mov
out
lock
fldl
push
add
cmp
loopne
test
cmp
jge
xor
fidivrl
shl
mov
in
dec
push
lock
add
cmpsb
into
mov
sub
jge
and
les
pushf
add
rcll
ljmp
lods
into
aaa
xorb
mov
add
cmc
cmpb
ret
push
rcr
mov
incb
std
and
shrl
aad
hlt
subl
and
mov
aas
addr16
sahf
out
repnz
jbe
add
iret
test
add
push
sbb
jno
in
add
js
xchg
cmp
je
dec
repz
and
xchg
jae
push
and
xchg
and
fadds
add
stos
ret
mov
inc
mov
and
imul
test
lret
lahf
inc
xchg
sbb
inc
call
je
hlt
cmp
stos
push
cld
int3
roll
mov
mov
push
lahf
inc
inc
cmp
or
fidivl
add
clc
leave
imull
test
jmp
add
in
pusha
jb
lea
lock
add
pushf
out
je
movsl
fcomp
sub
pushf
cmpxchg
add
cmp
loop
lds
mov
sbb
xor
dec
shr
add
and
push
or
jmp
adc
xchg
xor
shlb
add
ljmp
xchg
mov
sub
nop
dec
add
jo
subb
es
mov
das
lret
sbb
cmpsl
pop
sub
add
mov
adc
inc
add
shrb
pop
bnd
aam
js
cmp
jo
fsubl
hlt
cltd
push
jb
add
sub
imul
popa
add
mov
loopne
out
mov
shll
dec
pusha
divb
push
jnp
js
and
loop
cmpsb
add
jae
pop
int
add
daa
sbb
add
xor
xor
mov
push
lods
xlat
jmp
jb
add
pusha
push
stos
testb
ljmp
sbb
andb
cmp
mull
push
sar
pop
xor
fimull
or
inc
mov
pop
xchg
movsb
ss
add
lock
pusha
dec
scas
dec
push
adc
mov
fcoml
jle
xor
sub
rcll
std
andl
nop
por
mov
mov
dec
sub
adc
mov
push
nop
rcrl
icebp
cmp
push
push
test
sub
push
in
add
loope
cmp
rclb
add
lea
scas
sbb
and
ds
pop
add
inc
pop
xorl
mov
adc
jb
cmp
mov
iret
lods
add
mov
aas
xchg
push
negb
icebp
sahf
add
imul
cmp
sbb
mov
pop
xorb
aam
daa
scas
cld
add
xchg
xchg
sbbb
jl
addr16
outsb
cmp
adcl
cmp
add
pusha
xor
test
mov
and
repnz
or
jne
add
jns
add
dec
mov
push
and
add
or
push
inc
sbb
andl
pop
faddl
loope
test
inc
pop
cmp
push
mov
sub
fstpt
push
adc
addb
and
or
xor
gs
cmpsl
aad
sub
fs
mov
add
jbe
push
adc
cmp
mov
stos
add
outsb
mov
add
pop
mov
add
mov
inc
clc
hlt
mov
cmovge
add
jmp
and
arpl
mov
xor
and
les
adc
nop
cvtpi2pd
push
and
popf
push
jns
add
cmp
inc
pop
mov
lret
add
lahf
inc
sbb
push
fwait
jbe
mov
imul
xchg
in
dec
jge
nop
ret
dec
sub
insb
loop
cmpsl
and
incl
xor
add
jecxz
insb
lock
pop
push
push
adc
dec
add
or
sar
push
xor
fldt
lds
add
call
xchg
mov
cltd
xor
cld
lret
mov
rcrb
mov
sbb
pop
cmpsl
orb
insb
inc
push
cmp
add
fisttpll
mov
es
add
xchg
sub
xchg
xchg
jl
mov
std
pop
push
mov
popa
inc
mov
lret
or
add
iret
mov
call
das
es
jo
xchg
push
cld
sbb
jb
mulb
and
jne
aas
mov
mov
add
mov
xchg
nop
call
dec
push
xchg
jnp
and
imul
out
inc
push
mov
add
movsb
bound
push
pop
rolb
push
and
daa
add
add
mov
add
test
ror
cmp
fiaddl
mov
jno
cmp
push
xor
aam
pop
add
sub
add
or
mov
call
in
enter
fiaddl
inc
mov
cwtl
aaa
inc
and
push
push
fsubs
push
pusha
test
mov
sbb
jl
sbb
sti
or
dec
outsb
dec
mov
push
shrb
pop
cmp
arpl
adc
les
adc
subb
add
in
dec
test
add
xlat
push
test
inc
push
jge
adc
xchg
sub
add
loop
jne
cmp
or
cwtl
into
rorb
mov
pop
lret
imul
push
add
aad
negb
loopne
mov
push
cmp
out
rolb
in
inc
shll
clc
and
add
out
test
jp
add
xchg
cmp
pop
shrl
std
inc
pushf
pushf
fiadds
lock
in
ds
mov
fwait
mov
mov
cmp
push
jnp
in
mov
les
xchg
mov
cmpsb
aas
or
push
insl
cmp
scas
dec
jbe
in
test
rorl
stos
inc
add
add
hlt
or
pop
add
mov
pop
and
and
sarb
outsl
push
rcrl
push
mov
push
inc
pop
mov
ret
loop
dec
sub
call
into
fcmovnbe
sbb
int
movsb
add
insb
loopne
lcall
insb
cmc
fdivrs
inc
fisttpl
jge
pop
sub
ja
shr
mov
shr
js
enter
mov
fldl
xchg
add
dec
shr
dec
cmc
or
add
pop
jne
mov
mov
pop
pop
inc
sbb
loopnew
movsb
inc
lret
xchg
repnz
fiaddl
out
aam
movsb
jo
ja
insl
bound
mov
xchg
or
mov
ja
mov
add
jns
jnp
movsl
sarb
add
mov
mov
xchg
cltd
fdivrl
fimull
imul
clc
mov
xor
pop
cmp
jnp
adc
mov
jno
add
sbb
adc
fidivs
std
xlat
movsl
enter
xchg
cmpsl
cld
test
mov
shll
add
clc
ret
pushf
fwait
outsl
add
mov
jge
out
faddl
lea
jecxz
and
xchg
xor
je
rolb
loop
mov
pop
add
mov
inc
and
call
bound
push
cmp
mov
jo
sahf
fst
xchg
cmp
ret
fdivrl
addl
or
sti
addl
mov
add
dec
or
adc
aad
lds
imull
je
rcr
leave
sbb
add
sar
or
lahf
cmp
dec
add
mov
adcl
mov
mov
adc
loop
push
inc
stos
add
xlat
jge
pop
fmulp
in
jns
add
xchg
or
add
inc
jae
xchg
adc
int
add
shrl
rolb
push
or
outsb
movsl
cs
js
lahf
popa
outsb
fildl
ret
mov
lret
stos
cs
push
out
fcmovbe
aas
cmpb
ja
jb
sahf
dec
inc
sbb
fcmovb
inc
shrl
cmp
add
inc
cmpl
pop
fs
xlat
shr
inc
pusha
and
add
inc
sub
insb
mov
inc
mov
pop
call
adc
cld
inc
test
mulb
syscall
and
int
push
out
clc
test
add
push
cwtl
inc
add
mov
lds
add
jo
adc
add
and
add
xorb
pop
out
iret
clc
and
pop
or
xor
xchg
cld
or
sbb
adc
pop
mov
fisttps
lock
out
add
adc
sub
mov
xor
shrl
add
addr16
js
mov
in
cmc
xchg
jo
into
add
arpl
jl
mov
mov
nop
cwtl
add
in
fmuls
hlt
shr
cmpsb
add
xlat
int3
into
ds
int
jp
shrb
mov
mov
sbb
xor
mov
mov
imul
loop
jnp
jp
dec
xor
add
in
int
xchg
lock
pushf
xor
ficompl
add
test
sbbb
movsl
add
jg
call
push
jns
out
adc
xor
les
addl
add
mov
add
cli
loope
mov
test
xor
adc
jecxz
mov
fadds
pop
sub
into
adc
arpl
inc
das
lret
mov
int3
push
mov
mov
es
insb
add
pop
mov
data16
add
aam
jo
xor
or
aad
fsubs
add
add
mov
cltd
inc
gs
cmp
ret
sbb
add
jbe
or
add
pop
popf
mov
jbe
aad
xor
inc
sbb
loopne
std
cmp
sub
pop
xor
aas
jge
push
stos
jne
mov
pop
clc
push
cwtl
out
bound
jbe
add
test
leave
ljmp
and
xor
jl
push
stc
mov
out
push
inc
rclb
clc
and
hlt
and
sub
jle
mov
out
push
fwait
test
add
xchg
mov
or
lret
ja
pop
jne
pop
arpl
enter
add
pop
in
inc
sbbl
xchg
push
loope
inc
hlt
xor
mov
add
test
enter
movsb
call
add
push
lods
lret
inc
or
arpl
and
dec
or
jo
fmul
lret
push
inc
imul
cmpsl
mov
jno
ds
clc
cmp
xchg
dec
mov
icebp
mov
daa
inc
stc
jo
nop
std
jg
add
fnstcw
sub
testb
jnp
mov
loop
add
jno
pop
and
dec
pop
mov
add
jmp
add
dec
call
mov
popf
pop
pop
iret
imul
jb
aas
xor
cmp
add
mov
rcrb
xlat
fcmovb
paddsb
add
sti
add
xchg
sub
lcall
lock
push
pop
jle
add
fs
xor
fidivl
outsb
add
mov
jbe
mov
mov
lods
push
mov
insl
add
movsb
rorl
jmp
jo
es
pop
out
pushf
mov
mov
bound
out
fsubr
cmp
push
sub
dec
add
mov
sbb
xor
popa
pop
inc
mov
jns
sbb
sub
push
cld
cmp
cmp
ss
or
lds
mov
scas
add
push
mov
add
loopne
cltd
arpl
mov
xor
frstor
movsl
cmp
pushf
adc
outsl
push
js
bound
sub
gs
sbb
or
and
sbb
rclb
inc
push
add
in
movsl
mov
mov
out
cltd
addps
mov
fdivrs
pop
add
cmp
push
sahf
filds
cmp
mov
mov
dec
ljmp
jns
and
sub
sbb
sub
dec
leave
popf
add
add
js
adc
sbb
ltr
ja
push
mov
xor
cmp
adcl
shl
into
repnz
add
ret
rorl
je
dec
ja
aaa
fstl
or
push
inc
xor
dec
data16
xchg
inc
aas
and
sbb
inc
nop
leave
xchg
mov
mov
add
scas
ss
mov
xor
roll
xor
mov
repz
out
add
fmuls
clc
push
cmp
pop
repnz
cmpsl
mov
ds
fsubl
test
xor
psubusw
jecxz
repz
jae
in
sti
jp
add
imul
or
shl
outsl
shll
shl
hlt
xor
mov
inc
xchg
test
jmp
test
stos
sbb
add
pop
inc
cs
cmp
sbb
aaa
cmpb
outsl
jnp
lret
cmc
ficompl
jo
roll
mov
ss
pop
push
idivb
aad
sbbb
lea
mov
inc
ljmp
nop
jno
or
and
cmpsl
mov
sub
mov
lcall
cmp
int3
shrb
pusha
mov
fimuls
pop
movb
mov
fbstp
jg
aas
sbb
xchg
add
lret
js
subb
cmp
stos
mov
mov
push
xor
std
mov
sbb
add
cltd
add
mov
data16
add
pop
orl
jg
and
jp
push
pop
xor
add
test
lods
add
cmc
xor
or
and
jo
gs
adc
cmp
imul
fwait
jp
mov
cmc
sbb
and
fadd
fnstcw
in
je
fisubrs
mov
addl
popa
outsb
ja
dec
aam
add
rol
jae
push
jge
mov
jmp
in
sbb
xor
pushl
flds
lock
popa
fnsave
shrb
sbb
push
xlat
sbb
add
add
mov
loop
add
mov
arpl
ret
add
imul
or
sub
jno
cwtl
clc
cmp
xchg
push
lods
pop
dec
mov
or
push
jmp
sar
out
inc
rcrb
mov
jl
notl
jns
mov
add
xchg
cmc
adc
fbstp
jne
fcmovnu
mov
repz
push
outsb
push
cli
sub
or
dec
mov
sub
pop
mov
add
inc
test
xchg
stos
mov
pop
icebp
or
sbb
inc
lods
add
pop
mov
xchg
mov
pushf
add
xchg
js
mov
leave
jo
add
adc
shlb
add
and
loopne
clc
stc
outsb
test
push
dec
xchg
addb
push
in
or
jae
add
fisubrl
cmp
push
inc
mov
shlb
aaa
inc
scas
dec
jp
movsl
fcomp
std
mov
mov
push
mov
test
jne
adc
xor
mov
adc
rolb
movsl
scas
into
jbe
popa
or
or
push
pop
gs
pop
inc
pusha
or
dec
dec
inc
rclb
movl
addb
pop
mov
in
fwait
es
or
outsb
xor
jbe
add
jae
shlb
mov
or
data16
mov
imul
lds
xchg
xor
pop
out
sub
sbb
cmpsb
nop
mov
lahf
aas
mov
push
sbb
jo
out
push
adc
cmp
pop
mov
xor
mov
jp
shrl
add
and
fisubs
add
shld
shlb
mov
xchg
push
rol
outsl
dec
fwait
les
mov
sub
jno
fistpll
add
xorl
pusha
fmul
pusha
aad
xchg
pop
push
add
je
xor
inc
arpl
mov
inc
leave
mov
movl
out
dec
ss
push
add
inc
xchg
or
orb
test
stc
cs
add
pop
mov
mov
addr16
adc
push
lds
adcb
lods
and
and
iret
js
bound
negb
sti
jmp
adc
add
ljmp
je
nop
nop
add
jecxz
test
aam
add
test
dec
notl
dec
into
jg
rorl
pop
stos
hlt
pop
inc
or
cmpsl
out
sbbb
fwait
inc
inc
add
mov
xchg
sbb
loopne
int
leave
shlb
jb
add
pop
clc
pop
xchg
movsb
addb
fwait
or
add
pop
jne
pop
lret
fsubs
add
out
lock
dec
add
sarb
in
add
stos
loopne
and
ljmp
jg
fidivl
loopne
or
cltd
fs
sub
cmp
xor
sub
add
outsl
jle
add
pusha
jno
pop
push
nop
lcall
mov
shlb
sbb
sbb
mov
xchg
in
or
scas
adc
or
and
roll
out
push
loopne
repnz
mov
or
rcrb
xchg
loopne
lock
nop
push
movsl
into
sub
ret
orl
mov
in
add
ss
jmp
mov
add
fadds
add
add
xor
stos
lea
xchg
das
aas
jne
sbbb
fwait
cmp
lock
xchg
test
inc
gs
jg
cmp
and
push
test
negb
jo
cmp
mov
inc
cmp
add
in
mov
fwait
test
addb
inc
sbb
sbb
cmp
mov
ds
add
ret
or
hlt
shl
scas
and
cmp
movsl
rolb
adc
pop
pushf
add
mov
movsl
mov
call
mov
pop
push
xor
mov
add
loope
outsb
add
push
cltd
addb
rcll
jge
sub
stos
sub
add
lret
sbb
jecxz
lgs
dec
push
mull
outsb
repnz
inc
push
es
ss
inc
or
add
test
inc
gs
shlb
out
xor
repz
stc
cmp
inc
fstpt
lods
mov
push
inc
sub
cli
out
in
push
scas
rorl
fcmovnb
repz
adc
or
stos
test
fsubr
xchg
or
xchg
rolb
sbb
js
addb
fstpt
xlat
mov
sbb
add
dec
and
je
outsb
jecxz
in
imul
mov
sub
mov
mov
add
xor
mov
adc
mov
pop
xorl
mov
movsl
lds
out
data16
adc
daa
aam
mov
pop
call
lret
nop
adc
add
pushf
xor
jns
sub
roll
aam
fsubrp
inc
ja
xchg
mov
sub
not
jnp
xchg
gs
add
or
jecxz
and
xchg
lcall
cmp
movsb
sub
add
jns
dec
adc
cmpsl
pushf
add
out
pop
test
sub
add
testb
add
test
sahf
cmp
add
aad
inc
fnsave
push
stc
add
add
cld
add
fs
add
int3
adc
int
fwait
and
or
sbb
ss
add
jnp
insb
dec
movsb
cld
js
add
jecxz
pop
adc
mov
push
or
lods
mov
loop
imul
add
das
sub
or
fldenv
iret
movsb
jo
loop
sahf
fucomi
pop
sbb
xor
mov
push
in
lock
js
add
popa
add
xlat
pop
mov
shr
pop
inc
pop
out
pop
pop
pop
shll
subb
stos
xchg
es
clc
pop
arpl
xchg
jp
push
testl
add
jbe
gs
lock
or
sub
imul
jb
jns
sub
lret
mov
add
and
xor
pop
sbbb
or
int3
xlat
push
fistpl
out
pop
invd
xor
push
jo
cmp
dec
mov
sub
popf
ja
add
sbb
leave
fisttps
jns
xchg
jge
push
stos
xchg
stc
addl
cmpsb
mov
sahf
xor
add
pop
sbb
fmul
cmp
add
pushf
pop
in
cmp
enter
adc
shrb
jno
pop
cld
sbbl
fmuls
pop
adc
jb
in
leave
xchg
dec
shll
add
iret
mov
fldt
push
push
mov
pop
sub
loopne
pop
add
jne
mov
add
jp
pusha
pop
stc
inc
sub
xlat
mov
cld
adcb
add
gs
lock
mov
movsb
pop
push
shl
dec
add
rolb
test
nop
fiadds
loop
lret
push
sub
testb
fld1
mov
mov
mov
mov
pop
lods
iret
jle
mov
inc
cmp
push
push
add
lahf
jmp
push
cwtl
cld
int
push
mov
testb
sbb
insb
icebp
nop
out
pushf
adc
add
adc
cmp
xchg
jo
adc
cmp
and
scas
inc
mov
mov
or
xor
adc
lods
mov
or
inc
rclb
test
xchg
or
adc
and
or
mov
scas
jnp
rcr
mov
add
mov
pop
shll
sub
orl
pushf
arpl
shlb
sub
xor
jmp
ljmp
sbb
lcall
dec
fs
arpl
add
push
ds
dec
daa
sti
sbb
incl
cmp
sub
ror
xor
sub
xor
popf
and
xchg
push
jg
pop
push
lods
icebp
add
mov
add
add
and
loop
mov
lods
jmp
lock
add
pop
lds
sub
cmp
jne
shll
push
sbb
aaa
scas
pop
xor
push
lcall
cmp
inc
and
add
out
lods
mov
add
pop
mov
mov
xor
xchg
rolb
pop
lret
pop
mov
test
xor
sbb
mov
add
mov
push
jns
and
test
je
daa
sub
cmp
repz
add
inc
inc
jae
jle
cmp
pop
xlat
push
sub
mov
nop
xchg
fldl
mov
out
xchg
addl
mov
mov
add
adc
push
mov
inc
call
dec
call
jne
ja
cmp
inc
in
and
add
popf
mov
sarl
test
push
sbb
sub
out
push
das
mov
pop
xor
rclb
in
cmp
sub
ficoml
ss
add
push
jae
adc
mov
jmp
add
push
sub
pop
xchg
jns
fiaddl
push
decb
add
and
cmpsl
lcall
movl
and
mov
je
mov
ret
mul
add
mov
icebp
dec
mov
enter
ret
xlat
stc
dec
pop
mov
jbe
dec
bound
mov
jl
add
or
jb
sub
fcompl
dec
xchg
pop
subb
add
out
jle
sub
add
hlt
add
cmpsb
mov
sub
and
mov
imul
dec
cld
mov
sarl
sub
xor
add
dec
shrb
mov
jg
movsl
push
cmp
in
add
fadd
xchg
push
sub
sarl
mov
out
add
stos
push
in
adc
jle
lods
or
jg
or
and
add
push
xchg
mov
add
scas
jne
adc
cs
fmul
sbb
arpl
pop
test
in
add
sbb
dec
daa
or
mov
inc
lock
mov
pop
or
cwtl
add
mov
stos
les
adc
xchg
rcrb
and
or
and
loopne
add
pop
sub
add
bound
add
jbe
addr16
inc
icebp
add
jp
iret
cwtl
push
add
loop
and
ret
loope
lret
xor
loope
or
psraw
push
stos
add
adc
pop
push
test
lock
incb
stc
stc
sbb
inc
jge
repnz
cltd
dec
sahf
pop
xor
fldcw
incb
das
jns
stos
jne
inc
dec
add
icebp
enter
add
rcll
fdivrs
stos
add
scas
cmpsb
mov
fidivrl
prefetch
xchg
lret
xchg
sub
mov
call
add
loope
out
je
js
cmpsb
add
mov
add
fucomip
pop
sub
and
sub
or
xor
adcl
mov
sbb
add
jbe
out
mov
cmc
pop
and
stos
inc
repz
es
fists
mov
mov
inc
stc
lock
popf
push
in
inc
les
in
or
lcall
dec
mov
nop
xchg
jae
add
push
inc
cmpsl
pop
scas
sarb
fcomps
bound
xchg
cmpsb
inc
add
arpl
enter
jg
out
fisttpl
push
pop
lock
sub
push
ret
call
sub
rcrl
daa
sbb
mov
pop
xchg
adc
fadds
jb
mov
pop
add
movsb
dec
jnp
inc
pop
pop
mov
mov
add
inc
cmp
and
pop
dec
add
xchg
outsl
lds
fsubs
ja
movsl
and
lahf
lret
pop
fs
or
jle
add
outsb
mov
mov
stos
pop
ljmp
pop
int3
addb
in
mov
jo
mov
lret
cmpsb
or
shlb
adc
and
mov
pop
shrl
in
pop
fcmovu
add
movsl
dec
push
jmp
cmpsl
pop
push
lahf
mov
dec
add
mov
out
push
add
xchg
inc
scas
add
movsb
hlt
scas
rorl
dec
xchg
lea
mov
notb
jo
data16
add
jb
das
add
push
popf
xchg
outsl
sbb
loope
test
mov
mov
hlt
add
mov
cmp
gs
aas
jns
add
or
popa
out
push
sub
shll
xor
xchg
adc
iret
pusha
pop
push
xor
xor
sub
add
or
fisubrl
xchg
add
pop
jmp
in
cmp
stc
aad
fsubrl
cmp
push
out
mov
outsl
jl
popf
imul
push
mov
sbb
jmp
pop
xchg
xor
jmp
pop
das
fmuls
dec
imul
and
fwait
icebp
jo
data16
mov
pop
mov
lods
stos
mov
pop
add
and
les
aam
out
lahf
adc
sbb
cwtl
cmp
push
mov
add
bound
xor
pop
add
cmp
fbld
xchg
out
mov
add
pop
sub
sbbl
in
and
inc
rcrl
sahf
pop
pop
cmpb
in
inc
or
cld
cmp
ret
test
sub
add
or
xor
adc
fidivrl
add
xor
pop
mov
inc
loop
shl
add
pop
sub
ljmp
lods
ds
dec
or
xor
mov
and
clc
sub
cld
adc
pop
add
fs
cmp
aas
je
cmp
sub
pop
cmp
rorb
jo
ljmp
sub
lods
punpcklbw
fwait
push
or
loope
jnp
fstps
push
loop
or
in
sub
or
flds
add
fwait
pop
rolb
mov
add
add
dec
cmp
les
sub
out
add
jg,pt
subb
loopne
push
mov
subb
incb
mov
mov
ds
inc
fs
notl
dec
pop
xor
int
adc
nop
add
movb
out
pop
insl
out
mov
mov
insb
jno
push
aaa
hlt
push
add
ljmp
or
fildll
jne
pop
repz
sti
sar
cmpsl
adc
repnz
enter
mov
add
mov
lret
inc
insl
inc
add
pop
sbb
sub
movsb
in
js
repnz
call
push
clc
mov
mov
shll
orb
arpl
add
loopne
in
add
cmp
hlt
add
in
jno
and
sti
cltd
pop
call
inc
add
cmpb
mov
ljmp
jle
test
inc
out
adcb
jae
dec
inc
add
dec
sub
jmp
push
loope
mov
aaa
mov
lds
sub
pop
sub
dec
and
sbb
sbb
faddl
push
add
stos
xor
orl
pop
inc
xor
lods
roll
adc
cmp
xchg
add
loopne
push
and
jo
add
cmpsl
add
xchg
std
dec
out
aas
xor
cmp
stos
adc
sub
adcb
loopne
mov
jo
pop
pop
inc
sbb
dec
flds
or
sub
imul
js
cmpb
in
mov
xlat
arpl
pop
sub
imul
add
xchg
rorb
add
jb
insb
inc
bound
repnz
push
ret
lret
or
pop
pop
sbb
jecxz
inc
xor
aaa
sub
or
sub
addb
scas
nop
pop
or
xor
add
pop
cld
sub
test
jp
mov
lret
out
sub
lea
jne
pop
incb
xchg
sbb
sub
sub
dec
mov
add
jecxz
out
mov
jns
movsb
add
xchg
ret
stos
fimuls
js
mov
push
sbb
mov
mov
stos
push
add
popf
pushf
add
add
fsubrp
add
je
sbb
aad
js
jp
add
push
mov
add
push
ret
or
lret
mov
jns
and
mov
aad
hlt
pop
pop
and
mov
rclb
fbld
push
mov
in
das
sbb
add
gs
std
rorb
adc
jo
enter
rcr
cmp
filds
add
vpshlb
fcoms
add
js
cmp
mov
xor
inc
nop
cmp
push
cmpb
jne
or
add
sahf
subb
xor
testl
push
add
mov
sub
scas
mov
sbb
jo
add
jp
mov
fs
push
movsl
arpl
loope
shlb
xchg
xor
jl
out
addb
add
add
jb
sbb
shrb
stos
cmpb
es
and
jae
add
movsl
repnz
loopne
push
inc
out
push
and
mov
leave
xchg
push
add
in
dec
pop
sub
ss
nop
or
push
test
push
movsb
sbb
imul
sbb
and
add
and
loop
pushf
popf
xor
push
pop
add
jbe
mov
ret
outsb
insb
add
xlat
mov
pusha
adc
sbb
js
push
das
mov
pop
or
and
outsl
mov
loop
jbe
popa
lahf
shlb
mov
std
cmp
lock
add
xchg
push
add
loopne
push
inc
ja
add
mov
inc
dec
or
and
filds
adc
divb
add
ds
adc
cmp
orl
pop
jecxz
int
call
mov
andl
add
test
outsl
xchg
add
mov
jae
adc
mov
in
int
and
les
or
dec
add
add
stos
mov
out
cmp
xchg
add
inc
lea
pop
push
lock
and
cmpsb
or
adc
fsubrs
add
ret
xchg
push
mov
fnstcw
adc
insl
add
ret
add
pop
add
xlat
fstps
inc
insb
lea
mov
jae
add
out
flds
dec
or
sbb
cmpb
pop
in
sub
stc
or
push
ljmp
mov
and
aaa
lar
rclb
and
add
pop
mov
and
xor
cmp
iret
in
orb
roll
fs
cld
add
or
xchg
cmp
rolb
lds
xchg
es
in
add
mov
lcall
push
stc
pop
mov
pop
sbb
incl
lock
ret
xchg
dec
sub
sti
ss
mov
jl
or
rorl
hlt
pushf
dec
loop
sbb
mov
inc
sub
mov
lret
inc
andps
inc
fadds
sub
dec
sub
mov
mov
sbb
and
mov
insb
movsl
adc
ret
add
popa
aad
jg
mov
dec
sub
mov
xor
and
pop
pop
mov
lret
in
mov
das
jns
mov
jne
pop
push
fwait
xor
ds
ja
pop
pop
lret
jb
icebp
imul
adc
arpl
xor
push
add
int
in
lock
inc
or
jecxz
inc
or
push
sbb
jbe
addb
xchg
and
inc
ss
adc
rcll
lods
sub
add
test
add
orb
mov
add
and
nop
int3
out
es
add
pop
ds
into
cmpsb
imul
push
mov
sbb
popf
dec
sub
push
les
add
mov
sub
jge
mov
inc
mov
addr16
add
lods
or
sub
adc
test
outsl
bound
sbbb
stos
add
and
mov
dec
enter
pop
cwtl
addb
fnstcw
loopne,pt
repz
lock
xchg
sti
xor
add
test
adc
stos
ds
rolb
bound
and
xor
lret
dec
lret
add
addr16
lods
fcmove
jo
pop
inc
mov
cmp
iret
jle
out
pusha
add
dec
push
add
xchg
mull
cli
inc
push
add
mov
test
jmp
push
mov
inc
int3
add
out
and
jmp
add
sub
add
pop
add
faddp
bound
mov
cli
insb
cmp
xchg
sbb
aas
pop
push
dec
xchg
sbb
dec
ss
aad
cmpb
adc
int3
adc
dec
push
and
es
push
add
fstpt
xchg
sub
jp
add
out
lock
js
aas
out
cmp
xchg
in
or
pusha
pushf
pop
das
add
scas
cmp
testl
jp
pushf
inc
loope
pop
jle
mov
mov
pop
clc
and
mov
aad
rcrb
lock
lret
fsubs
mov
inc
mov
pop
push
jge
sub
mov
mov
nop
test
xor
jb
fstl
add
je
incl
dec
pop
ds
nopl
bound
cmp
lahf
xor
mov
pop
mov
subb
mov
jecxz
xor
sbb
mov
pop
sub
cld
outsl
dec
xchg
andb
in
mov
cmpsb
xchg
cs
lea
xchg
lock
push
add
add
pop
push
and
dec
dec
aam
fsts
add
jnp
sub
add
cwtl
push
push
insl
outsl
add
add
dec
push
pop
imul
or
test
outsb
xor
rclb
pop
jle
jbe,pn
add
add
cmp
inc
dec
jo
push
pusha
push
lods
por
cmpb
add
pop
sbb
or
pop
fadds
xchg
out
ror
mov
mov
mov
imul
mov
dec
lcall
pop
ret
lea
jnp
rcr
stc
in
adc
cwtl
or
or
cmpsb
xor
out
les
into
fdivrs
nop
adc
xor
cmp
mov
psubusw
mov
mov
in
cmp
ja
sub
jecxz,pt
add
icebp
rorl
jmp
lods
add
mov
mov
add
add
add
loope
push
cmp
adc
push
js
in
mov
mov
inc
add
lret
jne
pusha
pop
cltd
int
pop
jnp,pn
sbbb
outsl
push
pop
and
mov
fucomp
inc
in
mov
add
out
repnz
sub
cmp
mov
sarb
add
fstl
push
lds
enter
push
les
pop
hlt
shl
inc
mov
mov
or
idivb
mov
or
xorb
xor
add
cwtl
xor
and
adc
ja
cltd
fildll
xchg
mov
sbb
push
mov
add
sbb
xorb
or
jge
cmp
xchg
ret
fidivrs
add
mov
push
stc
notl
aad
insl
xlat
dec
incl
call
or
insb
les
in
sti
pusha
sub
es
mov
mov
sbb
in
mov
mov
inc
loop
mov
dec
repnz
push
scas
jge
aaa
add
stos
pop
sti
ret
adc
divb
mov
shll
fisttps
adc
cmc
add
test
add
adc
loope
or
int3
cmp
push
sub
lahf
daa
icebp
popa
cmp
and
xchg
aad
push
test
cmp
imul
push
lea
hlt
shlb
sbb
or
cwtl
or
ljmp
push
subb
sub
add
pop
cmp
in
add
faddl
mov
xor
adc
mov
inc
jge
xchg
jnp
ficomps
jecxz
fstps
loopne
imul
add
cmp
js
add
repnz
push
push
mov
add
out
and
push
aas
push
inc
xchg
jecxz
dec
clc
mov
loope
out
into
int
sbb
jns
add
mov
fistl
add
mov
pop
cld
arpl
sub
inc
adc
jno
add
cltd
xor
ja
pop
sbb
sbb
popf
hlt
add
xchg
jp
iret
popa
loopne
sbb
rcr
movsb
add
mov
push
orb
or
loopne
adc
dec
sub
push
cmp
incl
lock
add
ret
add
jbe
fcoms
sub
jno
pop
add
xor
add
push
js
add
sbb
dec
mov
pushf
cmp
or
lds
add
lcall
mov
dec
addl
ljmp
cmpsb
rorb
pop
dec
sub
jno
push
cmp
jns
fsubs
aas
dec
adc
add
mov
clc
add
adc
mov
mul
add
jnp
js
push
arpl
add
adc
cmp
lock
add
xor
stc
mov
mov
rorb
into
mov
add
out
imul
add
push
pop
cmp
add
aas
repz
xchg
mov
arpl
loopne
in
cwtl
mov
pop
push
movsl
out
xorb
sub
addl
lods
pop
add
mov
and
repz
movsl
enter
in
push
add
ss
dec
or
add
jnp
stos
mov
cmpsb
insl
test
xchg
fimull
clc
insb
sub
sub
cmpsb
cwtl
or
stos
add
mov
add
push
pop
ret
cwtl
les
push
jp
in
mov
sbb
or
xor
andb
testb
add
adc
pop
pop
aaa
enter
jns
rcrb
add
sbb
push
push
mov
inc
popa
sub
outsb
popf
fdivrp
stc
adc
adc
shl
mov
pop
or
inc
lock
loope
xor
xchg
or
mov
add
lock
mov
pop
inc
mov
mov
imul
xor
adc
fisubl
jns
mov
cli
add
or
aas
push
dec
mov
cmp
add
inc
std
adc
add
pop
je
pop
int3
lods
push
scas
or
cmp
fadds
or
push
hlt
clc
xchg
sub
jge
pop
in
dec
or
mov
cmp
inc
mov
mov
jo
pop
outsb
jnp
mov
shlb
xchg
adc
sbb
andb
das
pop
cmp
jl
loopne
inc
rcl
sbb
aaa
adc
sbb
jno
sbb
addr16
movsl
and
pop
inc
mov
and
stos
cld
sbb
add
xor
mov
sbb
mov
test
sbb
sbb
les
add
mov
insl
je
ds
rorb
add
cmp
add
data16
testb
add
pop
adc
filds
add
add
in
mov
int3
insb
mov
inc
or
or
loope
add
add
mov
aas
add
pushf
subb
sarb
in
pop
dec
and
mov
inc
pmulhuw
repz
dec
pop
xor
dec
in
test
pop
push
cs
push
rorl
push
jle
lcall
adc
pop
mov
inc
dec
fiaddl
add
iret
in
enter
sub
dec
add
outsl
jge
add
mov
roll
jnp
mov
gs
mov
call
push
inc
sub
loopne
incl
or
pop
testb
int3
js
jmp
cmp
outsb
les
jmp
mov
push
ret
inc
cmp
repnz
add
sub
les
test
or
dec
cmpl
lock
adc
adc
and
jecxz
mov
mov
sub
lods
stc
popa
dec
imul
shlb
add
shll
dec
inc
cwtl
adc
add
push
test
add
xlat
lods
in
jno
orb
mov
inc
push
xor
lret
xlat
movsl
std
add
mov
or
add
dec
loopne
test
mov
loopne
test
pusha
fwait
leave
cwtl
insb
add
repz
pop
jne
add
mov
and
faddl
movsb
daa
cmp
jo
xchg
dec
adc
push
push
mov
and
call
data16
push
xchg
in
and
jno
stos
mov
jbe
and
xchg
push
adc
pop
aaa
add
adc
lods
pop
iret
or
add
sub
fimull
sub
push
stos
add
push
adcb
es
mov
iret
jbe
stos
push
add
add
pop
pushf
dec
lret
jo
mov
xor
int3
mov
add
cmp
pop
bound
xor
lods
cwtl
mov
sub
sub
cmpsl
in
add
in
shl
mov
imul
cmp
cmp
std
dec
xor
rorl
lret
pop
popa
sbb
push
push
les
out
cwtl
pop
inc
dec
xchg
or
sub
sub
hlt
addr16
dec
repz
les
adc
and
sub
cs
stos
push
push
ret
dec
addl
sub
adcl
sahf
faddl
shrb
and
imul
repz
inc
push
sub
add
sub
cld
cltd
add
mov
push
xlat
cmp
jne
ret
loopne
dec
pop
add
mull
mov
sahf
shrb
add
dec
push
sub
inc
mov
pop
mov
sbb
add
test
enter
add
inc
or
out
mov
mov
mov
sub
pop
dec
and
imul
mov
nop
ljmp
lods
lcall
pop
add
xor
mov
jno
cmpl
inc
sub
leave
dec
faddl
and
push
out
out
jle
add
push
sbb
aas
inc
cmp
adc
push
call
or
icebp
mov
xor
or
xor
roll
test
rolb
pop
jbe
shlb
xor
add
or
in
push
pop
and
sti
sbb
pop
mov
xchg
addr16
int3
aad
repnz
bound
fdivl
dec
and
jbe
repnz
or
or
jge
addb
or
mov
push
sub
mov
push
idiv
xchg
adc
push
loopne
lcall
aad
inc
loop
sahf
add
mov
fcoms
cld
jmp
lahf
sub
or
jno
xor
in
test
es
jmp
add
fcmove
scas
push
fs
add
into
lret
cmpsb
pop
mov
sub
adc
addb
xchg
dec
popa
inc
add
sub
je
orb
add
add
xchg
dec
leave
add
in
lods
inc
push
aas
xchg
nop
add
mov
stos
inc
dec
cld
sub
xor
pop
pusha
jp
jge
add
cli
inc
fdivrs
sbb
mov
inc
stos
mov
push
filds
mov
outsl
cwtl
push
imul
push
xor
pusha
jge
dec
stc
adc
imul
xor
or
stos
pop
add
pop
shrl
call
cmpsl
mov
mov
add
xor
out
xor
mov
scas
out
ficompl
dec
lret
add
addl
insl
mov
xor
push
inc
mov
push
shl
les
push
pop
mov
inc
adc
push
push
jp
cltd
add
in
adc
inc
or
fidivs
inc
lret
mov
ja
dec
and
and
stos
mov
add
jbe
dec
mov
mov
sarl
jg
xchg
and
jmp
fnstsw
nop
loopne
out
inc
sbb
loopne
dec
stc
adc
rorb
sub
in
adc
add
pop
pop
add
pop
cmpsb
bound
cmp
stc
xchg
imul
sbb
xchg
jae
sub
add
dec
sbb
ja
hlt
and
add
not
push
add
lahf
js
jl
andl
int3
jnp
popl
imul
or
xor
out
and
cltd
mov
mov
std
fisubrs
add
or
add
jl
ret
cmp
roll
add
ss
dec
out
testl
or
jbe
lds
movsl
in
push
stos
mov
or
pusha
cwtl
jecxz
add
cld
ss
jmp
mov
push
jo
ljmp
scas
adcl
push
mov
or
push
inc
or
lock
ss
xor
push
add
cli
out
or
lgdtl
xchg
pusha
push
xchg
sbb
cmp
popf
imul
lods
sbb
add
jo
or
outsb
test
mov
inc
add
jmp
loopne
pusha
adc
jecxz
lock
nop
pop
lds
push
fidivrl
bound
add
cmp
mov
lock
fsubs
shll
js
ss
sti
add
test
loope
xor
dec
int
pusha
lret
pusha
mov
fistps
lock
inc
pusha
dec
out
rorb
scas
mov
mov
sbb
add
outsb
fs
mov
add
mov
add
push
adc
dec
rolb
bound
call
push
fsubrl
scas
mov
and
mov
cmc
or
sbb
push
cmp
adcl
inc
and
inc
movb
out
imul
add
sbb
lahf
mov
enter
jne
push
lcall
loop
movsl
mov
adc
in
nop
xor
jo
pop
aad
sbb
or
push
xchg
or
daa
dec
in
pop
and
js
lahf
xor
mov
inc
mov
cmp
mov
sahf
ja
sub
or
cmp
cmp
imul
sbb
ret
add
or
aam
inc
xor
cmp
cmp
les
loope
mov
cld
xor
in
add
or
push
pop
or
push
cmpsb
fildl
pop
sub
lock
jge
or
aas
lret
sub
or
add
adc
push
or
test
push
in
rcll
leave
pause
inc
movsb
xor
push
sbb
add
lds
mov
loope
pop
das
jge
nop
xchg
and
andb
push
push
xchg
xor
pop
scas
sub
int3
add
pop
stos
sbb
sub
notb
insb
sbb
imul
xchg
imul
fimull
xor
push
dec
mov
adc
pop
ret
push
or
jo
aad
enter
add
cs
sbb
pusha
fmuls
jp
or
pop
sti
ficomps
or
test
add
mov
mov
out
repz
mov
inc
in
addb
jge
lcall
add
xchg
push
pop
cmp
push
lahf
push
aaa
pop
mov
pop
test
es
mov
adc
jg
pop
mov
insb
pop
inc
sbb
ret
out
je
lods
mov
gs
jecxz
mov
add
jo
and
je
rcr
push
popa
pop
inc
mov
xor
in
aad
add
js
or
int
inc
iret
xchg
pop
or
les
hlt
nop
in
add
jp
fistpl
leave
cs
aas
add
inc
inc
cltd
xchg
pop
mov
daa
inc
loopne
xor
dec
int
add
std
or
mov
sbb
jge
aas
neg
in
jmp
mov
dec
inc
mov
pop
sbb
add
mov
mov
mov
std
add
cmp
mov
inc
dec
add
fwait
sti
imull
rcll
adc
push
jbe
or
mov
xchg
push
add
xchg
add
pop
repz
in
pop
add
mov
inc
fcmovbe
pop
pushf
sub
daa
inc
or
xchg
inc
addl
xchg
xchg
or
andb
daa
neg
mov
shlb
lret
sbb
adc
popf
aad
jecxz
sti
addl
cld
pop
stos
jae
add
add
movl
dec
shr
add
jnp
ljmp
push
cli
mov
enter
sbb
shl
jb
pop
mov
repnz
sarb
cmpsb
add
ds
out
lahf
sub
sar
add
mov
fldt
insb
push
mov
pop
cmpsb
sub
push
int3
and
pop
sub
popa
jp
nop
rcrb
adc
cmp
mov
sbb
jecxz
sub
dec
add
loope
icebp
fisubrs
movsl
ljmp
xor
fadds
mov
sub
or
xchg
add
in
and
mov
pop
push
cmpl
rolb
add
hlt
lock
sbb
lock
das
faddp
pusha
push
and
mov
movsb
sbb
in
lods
shlb
push
loopne
pop
jecxz
mov
jb
inc
and
sub
add
lahf
push
xchg
cmpsb
je
outsl
pop
xor
add
lds
sbb
ds
add
push
pop
out
test
sbb
mov
in
bound
inc
jmp
out
pop
jnp
pop
sarb
or
out
sbb
push
lds
adc
xorb
push
and
incb
mov
add
or
movzbl
imul
inc
nop
lcall
jge
cmp
xchg
setne
dec
lea
int3
aad
jl
flds
mull
adc
cmp
inc
pmullw
out
mov
sbb
add
andb
add
sahf
and
mov
aas
pop
repz
loopne
lret
xor
add
mov
inc
pop
cld
fistpll
ret
add
jne
movsl
notb
or
inc
aam
xchg
jge
mov
inc
or
push
push
adc
add
sub
push
cmp
add
add
das
leave
iret
push
outsb
loop
sub
clc
mov
or
je
clc
insb
xor
and
cmc
push
jle
cwtl
add
lods
std
adc
jne
xchg
sub
jno
dec
call
sbb
daa
faddl
inc
bound
inc
pmulhuw
xor
push
int3
outsl
out
aaa
sub
rcrb
jg
dec
stos
in
add
mov
data16
call
ja
or
into
subb
cmp
cld
jo
and
add
jno
pop
xor
and
mov
cwtl
into
rol
scas
sti
add
jae
pop
dec
dec
sub
or
gs
inc
add
js
cli
stos
lods
divb
lea
shlb
rorb
pop
test
loopne
sbb
lods
dec
mov
xchg
jb
lock
loopne
mov
out
xor
adcb
ljmp
push
cmp
xchg
push
pop
ret
jo
and
pop
mov
jae
add
jl
out
sbb
lods
mov
movb
enter
xor
add
test
xchg
add
pushf
movsb
jbe
in
arpl
push
jecxz
jle
xor
cmp
dec
les
adcb
adc
add
push
sbb
dec
push
inc
sub
ret
add
jge
add
xchg
loopne
sbb
mov
icebp
sub
out
push
pop
add
loopne
inc
mov
and
ja
inc
push
lea
or
stc
inc
fidivrl
pop
or
cltd
lock
fisubs
xchg
lcall
jno
loope
data16
fldl
dec
test
xor
sbb
jns
call
iret
lahf
add
pop
loop
js
fsubrs
das
lea
sbb
ret
adc
leave
add
cwtl
adc
or
cmp
or
sub
stos
and
rcrl
pop
add
xor
mov
mov
test
jae
and
pusha
dec
xor
cmpsb
mov
sub
lret
add
imul
sbb
xor
fcomp
add
sahf
arpl
add
jb
add
loopne
ljmp
sbb
pop
jne
jg
add
mov
out
aaa
jae
popa
add
out
lea
outsl
jg
imul
jne
call
cmc
cmp
dec
add
mov
aaa
push
shlb
popa
test
dec
inc
movb
lds
adc
ret
cwtl
les
push
ljmp
add
mov
pop
adc
add
add
imul
hlt
mov
add
xor
nop
ja
mov
push
mov
add
push
and
or
pusha
cmp
xorb
in
inc
ljmp
push
inc
std
sbb
frstor
rcl
jnp
test
mov
or
loope
xor
mov
add
sarl
xchg
add
jno
push
bound
lods
cmp
insl
pop
cmpb
or
lret
jns
sub
add
jge
lock
lret
cmpsl
pop
decl
pop
lock
push
and
ljmp
adc
stos
push
mov
inc
or
js
dec
pusha
lea
ss
inc
daa
mov
cmp
mov
sti
add
pop
pop
fs
mov
mov
pop
mov
dec
cmp
rorb
add
mov
dec
mov
add
fwait
dec
pop
push
decl
add
push
sub
lock
add
adc
add
ja
push
arpl
sub
repnz
rolb
add
and
pop
push
add
dec
dec
pop
sarl
mov
sub
icebp
dec
xchg
out
filds
push
push
pop
and
stos
enter
xchg
add
xor
test
jecxz
pop
mov
push
pop
mov
sub
xchg
test
add
mov
sti
push
and
lcall
xchg
sub
sti
add
inc
das
add
daa
xchg
add
sbb
cmp
add
jmp
add
jle
pop
mov
fcomps
aas
loope
lahf
andl
dec
arpl
cmp
and
pushf
xchg
mov
and
or
xchg
popf
int3
inc
hlt
es
sub
add
add
hlt
pop
sarb
push
out
fbld
imul
data16
iret
cmp
add
pop
lret
or
inc
cmp
adc
inc
jns
cmp
rcrb
mov
sbb
andb
js
loop
inc
jg
xor
adc
add
punpckhbw
rcrb
sarl
xor
in
add
loope
add
fcomps
xor
daa
add
aas
xchg
push
dec
jle
push
mov
ss
adc
pop
pushf
xchg
stc
into
lock
add
clc
cmp
push
aad
shrb
add
icebp
add
push
imul
add
cmpsb
aaa
xor
mov
popf
lods
jb
add
aas
cmp
cltd
stos
add
dec
addr16
jge
adc
inc
add
lods
jp
and
sub
or
xor
mov
add
sub
js
lcall
int
mov
mov
ror
push
inc
mov
and
mov
pop
sub
jmp
ja,pt
aas
jg
add
sti
push
lahf
ret
shll
lret
xchg
and
shrl
jno
ljmp
and
mov
aam
pop
lods
mov
push
and
fs
and
push
push
repnz
sub
mov
stc
pop
add
push
add
add
lret
mov
pop
in
call
jmp
mov
or
lret
sub
inc
ljmp
add
inc
sahf
push
sbb
test
cmp
mov
mulb
movsb
test
imul
or
cmp
mov
and
fisubl
sub
mov
adc
and
mov
orl
inc
jecxz
pop
or
cld
pop
sbb
fwait
shlb
sbb
shl
xor
pop
push
call
loopne
dec
pop
popl
sbb
cmc
add
xor
or
sbb
add
repnz
jne
sub
pop
inc
neg
add
pop
add
lock
sub
sub
inc
lods
mov
jns
push
jle
jmp
xor
add
adc
cmp
jo
sbb
dec
pusha
leave
xchg
add
daa
cmp
lret
insb
shl
fnstsw
inc
and
mov
rcrb
movsb
add
mov
bound
adc
xor
dec
cmp
mov
pop
and
mov
add
dec
adc
add
lds
ret
add
or
add
pusha
pop
sub
js
fnstenv
es
cmpsb
cmc
popa
insl
mov
outsb
dec
popf
jo
xor
pushf
mov
add
jl
or
jne
ss
mov
pusha
repz
adc
popf
mov
or
outsl
fsubs
adc
sahf
sub
in
mov
int3
jbe
sub
mov
add
jmp
add
aaa
subl
fmull
out
push
xor
out
xor
subb
lret
pop
enter
in
shl
lock
jp
pop
test
cmpsb
int3
add
push
arpl
add
shl
mov
sub
add
les
loope
and
cmp
das
mov
inc
movsl
incl
fwait
mov
lock
push
add
jg
lds
sub
subl
cmp
and
test
fmuls
mov
fildl
imul
cmp
pop
sti
add
aam
cltd
mov
add
sub
aad
dec
sbb
add
sbb
in
and
call
loope
pushf
rcl
sub
repnz
fildl
lret
xchg
addb
fisubl
out
rolb
push
ja
mov
repnz
ja
dec
cmp
loopne
cmpsl
cmp
orl
into
add
push
push
jae
adc
jne
pmaxub
mov
popl
inc
mov
dec
inc
stc
scas
cli
jae
inc
push
clc
sub
pushf
pop
push
shlb
or
cmp
mov
or
dec
imul
sbb
mov
mov
mov
xor
andl
mov
lock
cli
es
ret
and
mov
ret
xor
jne
sbb
andb
inc
mov
adc
ret
jo
mov
mov
add
loop
ret
push
dec
push
xorb
jns
xchg
out
fwait
cli
je
cmpsl
inc
pusha
lock
and
movsb
enter
leave
add
inc
cmpl
lock
xchg
push
aam
xchg
inc
or
cmp
and
adc
and
cli
clc
add
mov
cmp
mov
push
sahf
enter
add
iret
pop
fs
addb
xor
insl
fstpl
add
dec
addl
lock
add
fidivs
and
stos
mov
cmc
push
or
lcall
adc
inc
mov
in
negl
cmpsb
rolb
mov
mov
sarb
and
jbe
push
cmp
sub
ds
mov
popf
fsubl
push
andb
not
call
xor
jecxz
lea
fldl
fadd
aas
pop
mov
fldt
sub
aam
ja
data16
lret
jge
adc
iret
test
jo
and
sbb
dec
mov
add
pop
and
sub
add
and
pop
rorl
add
lds
mov
add
mov
xchg
clc
push
push
iret
pop
hlt
xor
mov
mov
sbb
aaa
cmpb
into
inc
add
mov
lea
int
add
mov
shrb
add
imul
xchg
ret
xor
jmp
xchg
ficoms
jle
jbe
idivb
aaa
sahf
add
cmc
and
outsb
pop
mov
xor
aas
scas
into
inc
push
les
xor
or
pcmpgtb
sbb
lret
xchg
mov
data16
mov
jno,pt
jmp
sbb
popf
test
inc
mov
jg
xchg
add
or
adc
inc
sbb
pop
fstl
adc
push
push
adc
add
ja
or
sub
xchg
add
ss
mov
leave
xorb
add
mov
fs
or
xchg
loopne
xor
cmp
cmp
fdivrl
js
ret
sub
xor
popa
and
mulb
push
mov
adc
pop
pushf
xchg
add
fildl
mov
daa
dec
ja
shr
xchg
sub
fs
xor
jbe
add
arpl
hlt
jnp
in
subb
mov
add
pushf
les
jno
sarl
push
sbb
fnstcw
adc
mov
lods
add
mov
push
push
jo
xor
adc
dec
ret
insb
aas
int
hlt
jle
pop
int3
lcall
dec
pop
add
lock
fsubrs
push
cmc
add
sbb
adc
loop
dec
inc
adcb
pop
dec
cs
push
out
jae
add
cli
adc
add
mov
xchg
mov
add
push
sub
inc
mov
test
mov
inc
test
sub
addr16
mov
mov
mov
rorl
mov
xchg
iret
xchg
cmpsb
sbb
pop
fldenv
cmp
add
fldl
mov
fcmovb
push
addr16
cmp
add
loopne
dec
add
cmp
or
push
adcl
mov
mov
add
pushf
and
sbb
out
xchg
mov
test
add
mov
out
nop
shl
mulps
into
mov
rclb
and
loopne
cs
ja
inc
lods
orb
mov
scas
mov
adc
loope
cmp
dec
pop
sub
xor
iret
imul
dec
add
xor
pop
psrad
mov
push
sbb
mov
loopne
xor
adc
flds
insb
jecxz
mov
push
popf
js
fldcw
mov
dec
push
lock
ja
sbb
xchg
add
xor
loop
jecxz
das
xchg
mov
push
adc
fmull
mov
roll
jnp
push
or
out
mov
add
movsb
lods
popl
push
push
xor
pop
mov
cli
jecxz
xchg
sbb
mov
shr
dec
and
in
pop
xor
jns
push
cmpsl
addr16
in
jo
dec
push
xor
andb
xlat
enter
jge
add
cmpsb
or
xchg
add
mov
jp
add
adc
push
addb
pop
xlat
fwait
pushw
pop
add
xchg
inc
fstps
add
lods
add
xchg
xor
sub
in
jb
push
hlt
pop
adc
mov
cmp
fs
mov
mov
sbb
add
ja
adc
ss
pop
jno
pop
mov
dec
sbbb
mov
mov
roll
cld
sbb
cmc
flds
inc
add
test
rolb
sub
jns
inc
ret
ljmp
mov
pop
add
loopne
cli
popf
add
movsl
mov
pop
mov
and
mov
push
sbbb
mov
pop
cmp
add
movb
jno
out
sbb
ret
adc
mov
or
adc
aam
lock
inc
ror
mov
mov
add
inc
and
add
aas
shlb
xchg
shll
xchg
lds
mov
dec
aas
inc
pop
xor
sbbb
mov
pop
mov
xorl
insl
mov
mov
xlat
pop
or
add
push
cli
aad
sub
sub
icebp
push
in
push
mov
sbb
imul
xor
cwtl
fadds
push
insb
lock
call
out
out
fdivr
out
mov
add
lret
pop
xchg
pop
in
add
pop
xor
or
pop
sbb
dec
clc
dec
fldenv
hlt
test
xchg
movl
push
clc
mov
cmp
pusha
add
mov
lret
add
jo
test
inc
incl
fstpt
sbb
test
cwtl
jb
mov
sub
push
adc
movb
xor
jl
pop
sbb
add
xor
jo
cs
adc
fnstcw
cmp
add
nop
mov
lret
orl
outsb
sbbl
nop
outsl
or
or
sbb
push
add
jmp
in
mov
cmp
daa
in
cld
pusha
add
ret
leave
or
testb
subb
ffree
jecxz
shr
pushf
ds
xlat
cmp
add
push
pop
push
dec
push
mov
cmp
mov
icebp
add
jae
mov
inc
add
sub
mov
inc
adc
stc
mov
leave
out
push
add
cmp
gs
shlb
push
add
stc
adcl
leave
xchg
add
and
or
dec
stc
in
test
aad
xchg
add
push
cmp
jle
add
adc
inc
sbb
push
and
add
adc
inc
iret
cmp
stos
gs
or
loopne
out
xchg
cltd
enter
stc
jl
push
pextrw
scas
idivb
inc
add
mov
add
add
push
repz
cmpsl
aam
sbb
sti
movb
push
jb
fcmovbe
add
xor
lds
punpckhdq
jae
in
or
popf
cli
add
jo
add
cmp
sub
jmp
mov
jge
xor
push
pop
and
mov
xor
push
loopne
xor
pop
ss
xorl
add
loope
xchg
hlt
test
add
push
rorl
popa
jo
jns
loopne
pop
push
add
fs
inc
adc
xor
xchg
inc
xchg
insb
into
mov
jne
pop
inc
dec
add
cltd
cs
jae
testl
or
mov
jno
adc
call
push
inc
push
rcr
popf
sub
pop
push
into
sub
cltd
out
pop
loopne
test
out
lods
add
movsb
pop
cmp
xchg
addr16
push
das
ret
popa
xchg
fdivl
add
pushf
movb
inc
out
and
push
addl
in
jbe
into
sarl
in
sahf
clc
iret
dec
add
xor
pop
add
clc
add
in
xchg
dec
sub
add
adc
inc
inc
xchg
mov
iret
lock
mov
mov
and
mov
push
je
mov
pusha
pop
add
fwait
lret
cltd
clc
insb
xchg
push
pop
lcall
roll
in
xchg
pop
xchg
enter
jae
add
and
fadd
mov
add
sbb
fwait
ret
scas
stc
add
and
rcrb
jb
mov
add
xchg
mov
call
and
pop
add
push
mov
lret
inc
add
and
xor
jno
add
or
inc
enter
pop
fistl
ret
jmp
jb
pusha
les
pusha
xlat
pop
jbe
jl
and
fcompl
adc
inc
cmp
adc
mov
stos
mov
sbb
adc
psllq
ret
mov
sbb
fiadds
stos
jne
jmp
fwait
idivb
lea
pop
lods
rcr
lock
add
ret
gs
movsl
out
hlt
xorl
xchg
add
adc
adc
int3
loop
dec
pop
stos
inc
int
repz
pop
test
push
test
push
popa
and
shll
or
leave
or
adc
cmpsl
sbb
pop
fiadds
mov
add
lcall
add
cli
xlat
js
test
inc
inc
movsl
neg
cmpsb
outsb
cwtl
faddl
les
int3
mov
shll
repz
movsb
xchg
sbb
push
and
mov
shll
push
fwait
inc
andb
mov
aaa
add
and
loope
sub
dec
xlat
fnstcw
iret
je
addb
xor
jnp
out
insl
ret
xor
sahf
enter
out
add
xor
add
jp,pn
add
xchg
sbb
xor
repnz
and
sbb
mov
push
inc
xor
and
fs
pop
add
cmpsb
or
add
movsb
push
dec
inc
arpl
icebp
adc
cmp
xor
or
shrl
jns
add
push
into
mov
outsl
push
inc
add
shrl
pop
xor
call
aas
adc
movaps
test
jb
call
pusha
hlt
dec
sub
aaa
int
ret
jle
and
testb
cmp
insl
inc
and
xchg
lock
push
imul
lods
and
cs
xor
mov
stos
jle
pop
sub
test
add
dec
in
xorb
shrb
daa
into
jae
jb
hlt
jge
pop
push
dec
enter
lret
jns
add
stos
inc
cmpsb
add
cmp
notl
jge
fsubl
jnp
sbbb
add
aad
sarl
add
test
add
lret
popf
sbb
mov
ffree
sbb
xor
movsl
ret
inc
lods
ss
cwtl
mov
pop
xor
shld
int3
xor
mov
xchg
les
call
add
and
nop
add
mov
xchg
cmp
sbb
dec
jecxz
push
test
dec
fdivl
sub
xor
sub
daa
popf
fmull
enter
sahf
adc
jnp
int3
add
imul
cli
cmp
shlb
bound
mov
adc
push
xchg
jl
add
jno
lods
mov
push
mov
push
or
xlat
or
aas
pop
push
inc
cmp
push
shlb
inc
call
xchg
dec
push
gs
js
or
frstor
sar
into
add
mov
loope
adc
dec
enter
inc
dec
and
add
insl
adc
add
loopne
lret
lahf
pop
fbld
cmp
nop
out
sub
fnstenv
lahf
mov
push
or
sbb
pop
add
push
insb
in
sbbl
jo
lock
push
add
or
xchg
inc
and
addr16
or
cld
push
cmpsb
dec
adc
pop
leave
addl
rorl
insl
call
sbb
arpl
das
push
and
add
mov
test
nopl
sbb
mov
adc
inc
add
adc
aad
pop
setne
add
scas
shll
repnz
jbe
pop
lcall
rclb
sub
test
in
xor
xor
sbb
cmp
push
nop
add
cli
sub
mov
or
sbb
adc
lock
xchg
loopne
cs
add
js
and
int3
cld
cmp
add
xchg
adc
ja
cmp
push
popf
stc
loop
dec
addl
je
pusha
js
mov
add
jbe
xchg
push
rorl
add
mov
dec
xlat
pop
call
ja
cmp
nop
xor
std
js
add
inc
jae
dec
pusha
adc
mov
loopne
adc
jge
cmp
cwtl
xor
lock
aas
add
xchg
mov
orl
mov
add
jmp
js
add
inc
je
daa
xchg
ficoms
or
and
jecxz
enter
push
xorb
aas
mov
inc
ret
stos
ss
stos
sbbb
push
cwtl
cli
jb
lcall
pushf
xor
outsl
mov
ds
paddq
lahf
mov
mov
mov
leave
or
jae
add
or
call
sbb
mov
sub
add
roll
stos
cmp
popf
cmp
or
loopne
add
rcll
cwtl
orb
mov
in
add
cmp
test
push
add
out
bound
fs
dec
cmc
call
mov
mov
loop
loopne
inc
xor
cwtl
mov
mov
je
jns
cs
adc
ffree
ljmp
add
cwtl
add
mov
nop
in
aad
add
cmpsb
rorl
and
ret
test
xchg
lods
cmp
clc
add
pop
fnsave
add
adc
xor
cmp
add
out
add
cmpb
pop
pop
shrb
mov
push
add
pop
xor
stos
popf
orl
xor
or
arpl
mov
add
insb
inc
mov
push
out
adc
lock
ja
dec
mov
lds
adc
jg
sub
xchg
mov
or
pop
dec
fsubl
jns
scas
int
sbbb
lret
xorb
pusha
push
push
mov
jnp
pop
pop
sbbl
xchg
into
rclb
rcll
je
lock
repnz
mov
les
fldenv
cmp
sbb
dec
pop
loope
jp
fnstcw
shl
dec
das
movsl
add
lcall
mulb
sbb
dec
add
pop
xacquire
insb
jb
cmpsb
adc
xchg
add
pop
jp
add
pop
insl
jecxz
sbb
pop
or
mul
add
add
xchg
mov
push
ds
sbb
or
in
call
lea
xor
sbb
jnp
adc
xchg
fists
cmp
xor
xor
cmp
pop
cmp
jl
iret
or
cli
mov
add
add
mov
cmp
or
addb
jle
mov
add
push
jmp
push
push
jl
xor
push
mov
out
inc
ja
or
mov
push
mov
ret
xchg
stos
cwtl
in
or
ja
mov
sbb
xlat
lock
inc
cmpsb
add
cmc
outsl
out
jecxz
enter
ljmp
pop
mov
add
cmp
insl
cld
bound
adc
stc
mov
test
add
jmp
aam
push
rorb
in
xchg
daa
add
xor
test
or
dec
dec
add
xchg
das
lcall
push
add
add
mul
lret
add
rcrl
add
adc
or
inc
push
inc
test
add
outsb
fldcw
clc
pop
fbld
pop
out
shlb
cmp
jl
push
imul
int
xchg
push
or
ss
lret
mov
sahf
xchg
das
decl
mov
dec
add
cmp
add
gs
arpl
add
xchg
xor
daa
mov
in
inc
in
jle
es
add
add
in
mov
stos
gs
sti
jle
divb
repz
mov
lret
into
mov
lcall
push
in
sarl
sbb
inc
cmp
leave
insl
jnp
lds
jno
push
ljmp
sbb
ja
xchg
push
mov
inc
loopne
add
movb
leave
push
xchg
sbbb
jg
add
mov
inc
lds
mov
pusha
jl
push
in
inc
subb
pop
roll
andb
inc
ljmp
rolb
int3
dec
and
test
and
sbb
xorb
test
into
add
movq
sti
jecxz
sub
or
into
push
arpl
mov
movsl
mov
dec
and
leave
jg
rorb
add
imul
xchg
jp
fld
shll
sarb
add
xchg
inc
or
xchg
push
dec
pop
add
dec
add
lret
jg
lods
cmp
out
andb
aam
dec
add
push
sbb
add
in
fwait
push
ds
fsub
popl
fmul
pusha
lcall
cmp
shlb
add
xchg
fldt
add
enter
scas
xchg
ja
movsb
test
sub
mov
mov
ljmp
xor
out
test
in
cltd
gs
mov
fidivrl
adc
or
out
out
and
push
clc
pop
add
cmp
lret
add
xchg
iret
movsb
fmull
xchg
sbb
push
xor
loope
mov
aad
mov
mov
sbb
dec
mov
icebp
sub
data16
and
add
xor
cwtl
jl
add
cltd
hlt
call
jnp
pop
jo
inc
lahf
sub
testl
mov
mov
add
mov
sbb
add
xor
fidivrl
popa
or
sub
mov
out
xor
jge
cmp
sbb
rorb
lods
cld
jae
xchg
and
cmc
add
out
xor
and
jae
mov
test
jno
pusha
jb
fwait
or
arpl
dec
jo
cmp
mov
fwait
lods
add
cmp
in
fistpll
mov
xchg
out
add
les
out
xchg
add
cmp
ljmp
add
cmp
pop
add
in
mov
sbb
popf
divl
addl
loop
push
cmp
add
cmc
fldl
data16
orb
daa
push
into
cmp
push
mov
push
jle
repnz
pusha
cmpsl
dec
mov
test
dec
insl
faddl
inc
scas
pusha
gs
mov
pushf
test
xchg
inc
fists
or
adc
mov
pop
jecxz
fdivrl
and
movsl
lock
mov
sbb
insl
jge
cmp
int3
clc
add
int
add
imul
adc
fcmove
pop
adc
nop
sbb
push
jmp
mov
add
mov
idivb
mov
lret
ljmp
jae
cmpsl
mov
es
aad
iret
lea
or
jns
test
repnz
sub
movsb
sbb
add
xor
adc
bound
je
jle
sbbb
adc
adc
lock
ficoms
data16
jae
out
clc
xlat
xchg
and
or
lret
push
mov
push
jecxz
sub
int3
outsl
ja
xor
dec
add
xlat
rcr
negl
das
inc
inc
xchg
fstl
xchg
and
nop
add
sti
loop
int
add
jnp
hlt
jmp
mov
mov
mov
pop
add
cltd
push
popa
add
inc
fldl
or
lock
enter
push
in
movsl
orps
imul
lods
popa
push
adc
mov
mov
xorb
lret
les
pop
insl
xor
outsl
or
aaa
adc
mov
sbb
adc
cmp
pushf
adcl
sub
aas
or
jo
xchg
add
js
je
or
ljmp
xlat
mov
add
pop
add
sbb
mov
dec
aas
lahf
popf
mov
insl
mov
js
das
movsl
call
xchg
movl
xchg
daa
jnp
add
mov
adc
stos
inc
or
pop
cmp
add
add
mov
jle
js
xor
push
loopne
repnz
mov
jb
incl
mov
adc
push
out
mov
dec
push
jl
cmpb
cmc
jbe
mov
add
adc
nop
add
cmpsb
add
sahf
mov
pushf
mov
mov
mov
add
shlb
and
loop
cmp
int3
pop
adc
cmp
cmp
icebp
pop
fs
push
dec
faddp
je
inc
mov
cmpb
int3
loope
or
sub
push
add
or
mov
push
scas
push
jge
jae
stos
call
icebp
mov
aas
sub
jle
shr
mov
inc
sti
fisubrs
nop
mov
push
repz
cmovno
pusha
cmp
jnp
pop
test
iret
subb
lahf
and
hlt
sahf
add
jl
xor
jge
or
roll
or
dec
mov
add
mov
dec
push
add
inc
mul
data16
sbb
xchg
jg
test
pminsw
jo
cmp
mov
mov
rol
mov
stc
add
or
imul
pop
scas
mov
outsl
add
sbb
xchg
inc
cmp
mov
jecxz
xchg
or
lcall
or
int3
and
dec
mov
test
push
add
mov
push
jge
aaa
xchg
add
inc
pop
mov
mov
popf
test
lahf
mov
push
adc
xor
pop
int3
inc
lods
mov
and
subb
cmp
cs
sbb
add
xor
ja
ss
cmp
lret
sbb
jbe
add
jmp
pop
test
sahf
testl
add
xadd
sub
mov
push
pop
sbb
or
inc
sbb
add
ds
add
cmc
add
stos
mov
jo
add
add
sub
mov
adc
add
ret
outsl
dec
push
mov
push
js
dec
psubsw
out
xor
std
and
add
pop
bound
jl
dec
scas
in
add
dec
nop
xchg
inc
adc
popl
mov
inc
adc
push
add
loop
ja
shlb
add
and
pop
add
out
pop
xchg
inc
in
call
sbb
outsl
add
push
ds
inc
mov
xchg
insb
or
aaa
xor
push
shlb
and
adc
add
lahf
cmp
cs
xchg
add
test
jns
or
js
jo
mov
add
mov
adc
fwait
bound
ret
cld
push
add
mov
cs
jl
push
arpl
andb
jnp
clc
push
add
push
out
xchg
movsl
ss
loop
pusha
in
adc
inc
out
mov
xor
std
rol
lock
in
mov
out
push
adcl
inc
lock
pop
mov
sbb
mov
xchg
rclb
mull
pop
cwtl
xchg
in
ljmp
push
pusha
push
sub
sbbb
xchg
gs
sub
mov
pushl
add
sbb
add
cmpsb
pusha
mov
movsb
add
or
jne
pop
add
adc
and
mov
sbb
add
pop
popa
pushf
aaa
inc
add
inc
or
add
enter
jno
jae
nop
adc
mov
and
lahf
data16
mov
cmpsl
add
xchg
dec
ret
scas
cmpb
mov
jne,pn
and
shlb
mov
add
lods
mov
hlt
adc
aaa
cmpsb
in
daa
shrl
clc
dec
push
int
cmpsb
jno
push
iret
test
and
and
or
lods
sbb
int3
inc
lds
push
inc
mov
in
xor
les
mov
gs
xchg
cmpsb
dec
call
mov
and
mov
movsb
hlt
jl
or
mov
add
jmp
mov
sbb
push
out
mov
push
nop
or
lar
repnz
cmc
adc
inc
pop
add
mov
cs
or
ret
add
lea
rolb
scas
dec
lahf
cmpsb
xchg
pop
add
and
test
insl
gs
jnp
xor
or
decl
hlt
out
add
clc
jno
movsl
dec
lods
faddl
add
stos
mov
pop
add
leave
push
or
cmc
xchg
jb
add
sarl
in
add
push
xchg
and
out
inc
add
cmp
cs
clc
push
jle
ret
sbb
xchg
ficompl
add
sbb
cmpl
es
mov
push
mov
xor
lea
cmc
iret
adcl
into
outsl
pop
in
pop
push
xchg
mull
adc
mov
jle
stos
jge
ror
dec
lret
js
push
pop
or
or
out
ret
jae
rolb
scas
sub
movsb
int
ds
loopne
or
xchg
or
in
push
int
cmp
adc
imul
push
loopne
hlt
in
add
xor
inc
cwtl
testl
inc
adc
add
xor
int3
ss
jge
outsb
add
add
and
inc
add
rcll
sub
pop
add
sbb
push
add
test
and
mov
ljmp
and
add
loope
shlb
mov
sbbb
into
outsl
incb
xchg
dec
lods
in
fs
hlt
add
lret
es
test
cld
inc
sbb
cmpsb
sbb
and
xchg
into
adc
pop
popf
sub
jbe
cwtl
and
and
shl
sub
lds
fstpt
divb
ret
jb
sub
das
cmpl
aam
out
push
jp
add
jno
mov
jb
add
in
push
xchg
add
cmp
mov
cmpsl
dec
add
enter
cld
inc
mov
or
loopne
test
mov
dec
lahf
add
inc
mov
xor
jle
roll
lret
push
sbb
ror
lods
rolb
les
pop
repnz
dec
addr16
pop
out
add
xor
stos
sti
sub
mov
xor
cli
popa
cmp
lods
or
or
push
outsl
add
movsl
push
jns
jnp
add
mov
or
jo
inc
push
sbb
scas
jecxz
jmp
rclb
stos
adc
push
cmp
pop
repz
ficoml
mov
mov
roll
jg
mov
xor
into
sbb
add
ds
mov
pop
cwtl
sarl
js
push
arpl
nop
add
xor
add
cltd
mov
pop
dec
push
in
aas
xchg
out
add
test
jmp
lock
cmpsb
pop
repz
xchg
fsubrl
nop
pop
outsl
fistpll
rcrb
xor
mov
add
push
pop
mov
jnp
loope
popf
push
test
cmp
pop
jmp
xchg
and
inc
mov
add
cmp
in
pusha
enter
fimuls
js
movnti
testl
daa
outsb
xchg
pop
cli
roll
inc
push
cmpsl
int3
enter
cmc
or
adc
inc
mov
cmp
bound
ja
mov
xor
hlt
xor
ret
lods
adc
mov
add
ret
cltd
fadds
inc
hlt
mov
cwtl
mov
rclb
jae
jecxz
push
push
fwait
sbb
fs
es
orl
nop
mov
cli
ja
faddl
pusha
mov
orb
xorb
dec
lret
sbb
mov
and
jmp
test
sbb
jg
psllq
or
jne
mov
sub
stos
fucomi
add
pop
or
add
addr16
sbb
xor
inc
out
scas
iret
xchg
cld
push
push
or
dec
sub
jb
push
unpckhps
add
aas
enter
lea
push
cmp
pop
or
out
cmp
jmp
mov
inc
dec
adc
add
xchg
add
adc
xor
add
mov
fdivrp
movl
sbb
sahf
aam
stos
cli
xlat
ds
stos
cmp
add
jno
testb
add
imul
aas
jns
or
loop
add
popf
ja
pop
cwtl
inc
jns
add
fstps
xchg
loopne
or
insb
jns
add
cmp
push
add
dec
jmp
jmp
fidivrs
cmc
fistpll
in
inc
scas
pop
sub
jmp
xor
add
fwait
adc
cmp
idiv
add
adc
jmp
and
mov
mov
jns
sahf
data16
gs
leave
pop
add
es
addb
dec
ljmp
pop
sbbl
stc
lcall
mov
fldenv
adc
xchg
xor
cli
mov
sub
pop
inc
aas
add
cld
add
repz
inc
ffreep
stos
adc
addb
mov
add
pop
int
inc
dec
pop
add
lea
mov
repnz
xlat
loopne
push
inc
xor
popa
vsqrtpd
adc
mov
lock
mov
js
jle
rcr
add
mov
jnp
cltd
add
in
dec
sbb
push
rolb
test
stc
daa
std
pop
jp
add
dec
mov
imul
mov
add
dec
add
repz
push
test
in
add
add
test
jge
push
sti
add
add
out
mov
hlt
add
pop
mov
mov
xchg
fldenv
es
adc
mov
lods
nop
aaa
cmp
jae
mov
sbb
jp
add
mov
push
xchg
push
or
sbb
xorb
sub
cmp
mov
cmpsl
clc
ljmp
or
cmp
cmp
mov
js
pusha
test
add
ret
fadds
je
push
push
sub
pop
inc
icebp
cmpl
add
lock
loope
xchg
cmp
xchg
mov
lahf
fistpll
jecxz
cmp
push
dec
jne
pusha
lret
jle
clc
mov
push
pop
addl
add
lcall
push
and
shll
add
jb
mov
sub
nop
test
mov
es
cld
out
sbb
por
jno
add
leave
and
das
test
or
sbb
xchg
add
push
add
adc
pop
pop
cmp
xor
sahf
shl
and
inc
add
jo
popa
loop
add
xorl
adc
lds
inc
cmp
push
movsl
mov
addb
sbb
jbe
add
sahf
pop
shlb
jl
pusha
xor
enter
notb
mov
filds
dec
add
lods
fistpll
xchg
in
sbbl
push
add
sbb
sarb
flds
bound
clc
cwtl
and
mov
bound
scas
es
xor
out
dec
push
inc
add
mov
imul
add
xor
loop
or
outsl
dec
pop
add
xor
mov
sub
imul
cmpsb
ret
push
and
add
mov
pop
loope
mov
push
iret
cmp
add
cld
rcrb
adc
and
sub
sbb
xchg
add
jg
cld
test
sub
in
pop
and
outsb
testl
shrb
add
xor
test
inc
add
ror
cmp
push
cwtl
hlt
pop
test
xor
dec
nop
mov
push
imul
sub
loope
dec
cli
push
dec
sbb
or
pushf
fcmovnb
fidivrs
sbb
push
sbb
iret
push
jecxz
and
sbb
xor
cmp
call
xchg
test
rcll
or
cmpb
nop
pop
shll
jbe
orl
test
nop
cmp
sbbl
xchg
daa
add
xchg
fxch
mov
in
jge
or
mov
movb
es
or
mov
add
enter
das
cld
inc
add
lcall
sbb
add
push
repz
cmc
into
aaa
call
add
jb
dec
sbb
repnz
dec
add
add
adc
in
or
out
fsubrs
inc
add
lahf
sub
ja
add
icebp
sarb
pusha
js
rolb
cmpsl
mov
mov
dec
push
popf
cmp
pop
jp
mov
rcl
bound
push
xchg
decl
mov
mov
xchg
fs
dec
or
jmp
cmp
out
xorb
mov
aas
leave
inc
xor
and
aaa
jb
add
ds
rclb
add
aas
jecxz
add
shlb
clc
push
jle
shrb
sbb
push
dec
or
cmpb
sub
les
jle
daa
mov
add
cmp
push
push
mov
outsb
insl
ret
sub
mov
rcrb
add
arpl
je
clc
mov
das
mov
add
inc
repz
ja
xor
loop
sub
add
inc
movsl
ret
insb
mov
push
mov
xor
mov
icebp
sub
sbb
mov
movb
out
add
add
adc
dec
rolb
pop
adc
std
add
xchg
stos
fs
sub
pop
add
adc
int
dec
jecxz
pop
jmp
push
sbb
lock
leave
dec
out
push
mov
cmp
test
inc
xchg
pop
mov
pop
adc
mov
add
xchg
xchg
repnz
loopne
pusha
add
mov
jle
mov
add
sub
lods
enter
cwtl
and
add
push
loopne
or
out
scas
pop
jg
cltd
nop
fwait
out
aas
mov
rorb
cmc
push
jmp
pop
insl
cwtl
add
aam
mov
shll
or
fldl
cmp
push
stc
dec
loopne
add
js
add
mov
mov
dec
and
add
movsb
sub
xchg
mov
pop
or
xor
movsl
sbb
cmp
pop
movsb
pop
cmp
clc
dec
add
inc
mov
rcll
sahf
or
test
mov
mov
push
add
adc
pop
xchg
xchg
mov
mov
pop
cmp
ja
pop
or
jecxz
hlt
jl
movsb
divb
or
and
test
xchg
add
int3
cmc
xlat
pavgw
mov
into
adc
sub
or
jbe
pop
icebp
call
rolb
pop
mov
dec
pop
popa
jnp
add
in
dec
push
xor
add
ljmp
jmp
pop
rolb
or
mov
mov
xchg
push
xor
add
enter
add
sar
push
cmp
pop
inc
add
movsl
mov
stos
nop
repz
and
xor
cwtl
mov
or
js
lret
mov
sbb
pop
add
and
cmp
mov
in
sub
xor
frstor
xchg
fwait
loopne
add
push
push
scas
popf
jmp
iret
das
lret
mov
dec
add
xorb
ljmp
and
xor
aad
add
or
adc
aas
test
jl
add
add
mov
push
sub
mov
sbb
jne
xchg
clc
dec
pop
inc
pop
adc
xchg
stos
and
and
daa
aam
dec
std
inc
mov
push
or
cmp
dec
inc
mov
movsl
subb
mulb
and
pop
pop
ficoml
testb
push
pushf
cwtl
popa
aad
dec
iret
mov
add
mov
xchg
gs
loopne
jmp
leave
out
sbb
jl
jg
adc
sahf
jp
add
mov
call
jecxz
pop
add
xor
xor
or
adc
cltd
out
ljmp
aas
push
push
adc
dec
cs
add
jl
data16
lret
mov
pop
leave
push
pushf
out
add
icebp
mov
rolb
mov
fldcw
push
inc
xchg
scas
int3
sub
and
pop
push
pop
sbb
stos
jns
add
fstpl
cmpsb
pop
jno
imul
es
or
jl
cwtl
add
ficoml
mov
test
add
enter
popa
add
sbb
pop
shlb
or
add
add
cmpsl
movsl
lret
sbb
add
rcll
add
int
scas
add
je
jle
int3
cmpsb
addb
jp
das
xchg
cmc
cwtl
push
test
sub
pop
sub
fildll
or
daa
pop
pop
hlt
mov
pusha
adc
gs
add
mov
push
jge
nop
or
xor
fiadds
mov
je
shll
dec
in
neg
loopne
hlt
jg
add
dec
call
cmp
mov
jo
sub
ljmp
xor
movsb
fsubr
sahf
jb
and
sbb
jp
jns,pn
inc
add
or
add
pop
mov
cmp
in
test
in
mov
lods
add
mov
or
xchg
push
js
int3
push
cmp
gs
dec
in
xchg
add
adc
cmp
cwtl
call
inc
lock
mov
add
movsl
cmp
cmp
sub
insb
loop
add
sbb
lcall
and
jns
mov
arpl
adc
add
sbb
jb
pop
push
sbb
es
int3
mov
add
sbb
movlps
loop
repz
or
movsl
out
loop
ret
push
jle
sub
add
popf
push
lods
and
scas
cltd
sbb
cmp
mov
hlt
ret
ja
repnz
imul
add
adc
mov
jns
lods
jb
xor
pop
lgdtl
cmp
lea
es
ficomps
push
add
xchg
jns
lods
leave
nop
enter
cld
push
lock
imull
mov
std
arpl
push
jnp
push
cwtl
subb
mov
xor
and
enter
movsb
or
mov
mov
movsl
push
adc
repz
inc
add
icebp
jp
xchg
mov
shl
or
iret
test
xorb
and
repz
cmp
addb
jp
mov
inc
adc
push
lret
nop
clc
add
movsb
push
dec
mov
test
cmp
sub
mov
cmpsb
incb
cmp
into
add
mov
dec
inc
lock
repz
dec
pcmpeqb
fldenv
scas
or
test
inc
sub
add
fstps
adc
cmpsb
pop
add
arpl
test
add
rolb
outsb
sti
addl
sub
ret
leave
mov
add
imul
ret
subb
fs
dec
loopne
mov
push
rorl
jecxz
lock
jno
add
int
comiss
mov
pop
dec
push
mov
test
cwtl
mov
jae
dec
and
dec
cld
pop
add
mov
das
jg
test
add
mov
repnz
lock
mulb
movl
shlb
scas
in
loopne
or
mov
aaa
cmpsl
cli
pusha
adc
push
add
jbe
cmp
add
out
rcr
dec
add
mov
addr16
add
adc
lea
mov
push
xchg
jle
call
push
adc
pop
xchg
xor
roll
sub
mov
xorl
mov
xor
fadds
add
and
iret
mov
lcall
dec
cld
iret
add
push
mov
xor
xchg
in
mov
dec
adc
add
pop
negl
cmp
push
cmp
adc
faddl
lret
mov
inc
lret
pop
repz
sub
shr
sub
outsl
adc
mov
xchg
add
hlt
into
cwtl
ja
push
and
ret
or
fcom
mov
add
aam
mov
push
mov
or
cld
xchg
and
jge
sub
add
mov
nop
scas
js
mov
inc
aad
xchg
inc
roll
les
jg
inc
lods
pusha
push
mov
int3
add
mov
dec
lahf
std
sahf
lds
pop
shll
xor
pop
shlb
xor
sbb
lea
mov
test
and
pop
hlt
push
add
movsl
mov
jle
test
add
and
xchg
and
xchg
mov
sar
or
dec
adc
cld
loop
inc
popa
cltd
dec
fadds
repnz
cwtl
push
inc
dec
cmp
je
add
xchg
ss
sbb
push
imul
add
out
xor
lret
add
icebp
js
add
rolb
into
mov
mov
cmp
aad
add
adc
add
sbb
les
popf
push
insb
int
lcall
mov
enter
aas
cmc
mov
xchg
popf
add
in
fld
push
scas
int3
ja
inc
popa
loope
jecxz
test
push
sbb
and
outsb
dec
add
push
cld
add
inc
arpl
or
stos
lds
fdivs
inc
push
cmp
mov
mov
inc
sbb
push
enter
sub
lods
out
inc
dec
push
inc
das
add
je
cwtl
es
adc
pop
sub
push
inc
lock
fldl
aam
ja
cmp
mov
rolb
mov
mov
and
push
add
ja
mov
scas
xchg
add
cmpsl
int3
ret
sbb
stos
enter
sbb
and
test
xchg
sub
sbb
sbb
pop
aad
add
or
add
pushf
xor
mov
add
rolb
iret
add
aam
aad
lret
clc
lea
movsb
int3
mov
cwtl
push
or
add
scas
imul
add
push
jp
and
add
lea
and
ljmp
test
add
jecxz
lahf
cmp
dec
into
mov
add
sahf
mov
movsb
add
fisubs
pop
add
shlb
mov
into
cmp
mov
sub
into
sub
add
sbb
es
call
outsl
fidivl
imul
pop
mov
jl
aaa
add
jecxz
pop
pop
fdivl
add
mov
dec
je
sbb
int
scas
sbb
add
lret
or
shrb
jbe
or
clc
xorb
xor
add
fldl
dec
pop
les
push
test
adcb
push
out
js
fs
outsl
or
jae
ret
sbb
cld
hlt
add
add
pop
and
aas
mov
repnz
shll
add
fwait
push
pop
sahf
jae
aad
lcall
out
mov
inc
add
add
andb
and
lret
push
int
xor
add
dec
jmp
add
cmp
fiadds
mov
mov
adc
sbb
hlt
orl
cmp
adc
das
dec
push
test
loop
stc
shlb
rol
aad
pusha
mov
jecxz
ja
cmp
mov
out
xor
push
sbb
rolb
sbb
push
test
shrl
mov
into
test
mov
lret
push
or
inc
mov
mov
das
inc
add
add
xlat
xor
mov
xor
stc
sar
leave
sub
test
lods
push
mov
fdivrs
andl
mov
cmp
outsb
cwtl
add
popf
call
xchg
inc
add
insl
cltd
movsl
sub
sbb
add
fldl
jp
mov
xchg
lcall
mov
cmp
xchg
adc
mov
bound
mov
add
push
and
lea
or
xchg
outsl
fistpll
addr16
jne
cmp
rorb
xchg
icebp
loope
test
in
sub
mov
test
pop
cltd
test
mov
push
faddl
sbbb
mov
popa
pushf
inc
je
mov
inc
aaa
pop
aad
or
push
add
and
sub
mov
repz
into
add
cld
rolb
xchg
fadds
add
into
add
cmp
sbb
mov
aas
loope
mov
add
ror
std
fcomip
mov
repz
or
into
sbb
les
loope
jg
add
mov
lock
lds
cmp
bound
les
jae
mov
add
pop
int3
xchg
stc
push
bnd
mov
add
mov
cmp
ret
sbb
add
lahf
mov
xlat
fmulp
dec
arpl
jge
out
into
je
mov
pop
outsb
das
add
rcrb
lcall
push
in
xchg
add
inc
push
lock
pop
pop
aad
ror
xor
jg
fcoml
or
fidivrl
sbb
mov
popl
mov
inc
test
shl
cmpsb
dec
repz
xor
add
int3
cmp
pop
test
mov
jbe
aad
jp
aas
mov
shl
jmp
add
xor
xor
xchg
add
out
stc
mov
cmp
fisubs
xor
insb
pusha
ljmp
pop
xchg
dec
out
out
popf
call
test
mulb
inc
out
or
jbe
test
cmpsl
and
loopne
mov
add
inc
inc
cmp
fdivrs
pop
rcrl
and
xor
cltd
outsl
icebp
jmp
es
or
ret
add
push
aam
mov
mov
add
sbb
outsl
mov
adc
fidivrs
ljmp
adc
stc
loop
push
jmp
mov
sub
xchg
cld
or
pop
inc
adc
ret
lahf
subb
int
mov
or
push
and
sti
mov
mov
add
mov
push
mov
enter
int
mov
add
xor
lahf
add
imul
sbb
pop
insl
jge
enter
and
loopne
or
decb
inc
fs
and
bound
add
pop
fadd
repnz
test
aaa
push
scas
add
ja
jae
push
int
jl
add
call
arpl
out
pop
hlt
mov
xchg
rcr
mov
xor
adc
add
push
mov
xor
fmull
mov
adc
sti
out
roll
and
inc
ret
lret
mov
add
adc
dec
call
add
mov
mov
xor
popf
addr16
ret
hlt
jnp
add
jns
fidivrs
sbb
cmpsl
inc
jmp
and
fldenv
in
mov
inc
nop
mov
movsb
sets
mov
aam
test
lock
scas
ljmp
jnp
shlb
std
testb
push
iret
lcall
adc
stos
cmp
adcb
in
add
sbb
popf
fs
sbb
rcrl
inc
push
lock
cmc
push
je
cmpsl
add
cltd
adc
jmp
jb
outsl
pop
mov
mov
ja
inc
arpl
nop
lods
jnp
cmp
add
cmp
orw
aas
jne
xor
lods
inc
sbb
inc
inc
andb
nop
mov
pop
xchg
add
and
cli
in
inc
add
sub
cld
stc
sbb
push
push
jmp
xor
scas
lock
in
xchg
jo
mov
pop
out
add
add
jp
adc
add
or
repz
sti
lock
imul
or
lea
hlt
fsts
sahf
cltd
movb
push
adc
leave
sbb
js
or
jb
mov
outsl
pop
loopne
adc
add
xor
cwtl
rcrl
pop
sti
aaa
scas
imul
pop
push
mov
lock
inc
mov
aam
imulb
push
icebp
js
add
lret
add
je
add
cmpl
cmpsb
outsl
rolb
aas
mov
jp
xorb
imul
mov
pop
sahf
aas
lea
popa
or
dec
sbb
adc
popf
frstor
jo
and
daa
sub
and
xor
push
mov
outsb
and
add
lret
adc
sti
test
jns
sub
cmp
xchg
stos
add
dec
add
push
pop
mov
sub
ss
in
add
and
sbb
ret
sub
pop
filds
add
lret
lcall
xor
fwait
mov
mov
cwtl
push
add
inc
adcl
push
mov
adc
cli
inc
out
pop
jecxz
out
orb
scas
in
add
in
jmp
lcall
dec
inc
test
je
jnp
mov
add
sbb
stos
lea
add
inc
or
ljmp
sbb
inc
js
add
ret
mov
repz
enter
add
mov
push
aad
gs
dec
jae
shlb
fcmovnbe
cld
push
or
imul
shll
add
sub
sub
shlb
dec
add
add
add
mov
incb
xchg
lock
pop
pop
mov
jmp
and
push
jle
add
mov
aaa
add
push
pop
jmp
lods
popl
jl
outsb
mov
sbb
lock
dec
and
leave
sahf
sbb
insl
repnz
xor
imul
lods
mov
in
lock
xor
stos
and
inc
stc
mov
iret
add
ds
mov
inc
dec
in
in
inc
shr
gs
adcb
ret
cmpb
ret
pop
sub
je
fwait
and
lock
int3
push
adc
sub
jb
movl
mov
jecxz
inc
mov
inc
nop
sbb
xchg
stc
mov
add
cld
cli
mov
sahf
adc
in
stos
xlat
pop
jle
sbb
push
pop
xchg
addr16
es
roll
xchg
jno
insb
int
call
fdivrl
fwait
shlb
xchg
fs
xchg
cs
int
xor
mov
mov
daa
add
test
ss
xchg
inc
filds
loopne
imul
add
hlt
fnsave
loope
rcrb
sti
pop
push
in
pop
push
loopne
fs
adc
clc
jecxz
bound
nop
push
add
push
xlat
sbb
mov
sbb
cwtl
add
scas
stos
xor
cmp
mov
jge
add
jmp
mov
inc
clc
imul
pop
xor
sbb
sub
add
imul
mov
and
push
adc
ret
cmp
xchg
jne
add
push
sarb
or
add
iret
lea
xorb
dec
into
clc
jae
ret
jl
add
mov
mov
data16
cmp
adc
ret
and
rcrb
ss
les
repz
lea
rolb
loope
xchg
cmovg
add
test
sarb
pop
fwait
test
out
aam
lea
xor
add
loopne
mov
inc
aas
imul
cmp
pusha
fsubrl
jo
push
sbb
dec
mov
fadd
add
test
aas
int
push
add
imul
or
xor
addb
and
shl
lea
xor
dec
int3
addb
push
test
lds
shll
es
cmpb
incb
pop
add
fsts
add
rorl
add
push
jbe
cli
shlb
fisubs
jo
or
faddl
les
push
mov
pop
add
loope
jg
pop
push
das
adc
into
dec
loopne
xchg
xlat
and
and
pusha
push
das
fisubrl
dec
sub
in
add
sbb
fcomps
nop
inc
or
push
push
xor
push
addb
loope
push
inc
test
add
adc
ds
rcr
add
je
mov
mov
cmp
test
adc
hlt
or
cmp
subb
add
add
pop
cld
mov
mov
nop
add
pop
or
mov
sub
mov
mov
rorb
lods
jge
pop
add
mov
test
test
cli
addl
dec
fsubrl
add
add
cmp
adc
cmc
arpl
cltd
cwtl
repz
add
xor
push
push
dec
xor
or
mov
pop
jge
inc
pop
andl
filds
mov
iret
cli
leave
adc
pop
faddp
cmp
rclb
xor
adc
xlat
lods
loop
andl
jecxz
adc
inc
out
in
sarb
movsb
pusha
in
and
es
adc
add
leave
test
testb
data16
aaa
fs
pop
xchg
inc
push
add
mov
aas
xor
sbb
orl
adc
repnz
jge
add
imul
push
lds
pop
int3
ss
les
lock
mov
test
jns
add
dec
jne
andb
add
dec
xor
loopne
dec
idiv
jl
and
jmp
popa
add
xchg
insb
sub
data16
adc
sbb
addr16
sbb
jbe
flds
xor
cwtl
in
out
filds
imul
add
and
and
pop
xchg
ja
adc
add
inc
rclb
jnp
adc
int3
add
sub
pop
stos
add
jno
cmovs
js
into
je
adc
popa
add
inc
aas
sub
mov
cltd
cli
shrl
int3
fwait
xlat
adc
test
add
je
cmp
push
add
push
repz
cmpl
aad
mov
sub
pop
xor
cltd
cld
jno
hlt
pop
cmp
adcb
or
lds
cmp
ret
mov
loope
call
add
out
xor
push
mov
sbb
das
push
fldl
sti
pop
xchg
adc
or
jbe
xor
pop
popa
dec
sub
pop
test
pop
cmp
add
mov
mov
push
mov
addb
pop
inc
adc
pushf
mov
mov
out
add
cli
mov
push
jo
addr16
inc
sti
mov
xor
jns
leavew
cmovo
movl
pushf
pop
ror
push
sbb
cmp
xchg
movd
shlb
call
stos
aam
mov
mov
add
cmp
push
jnp
cmp
jne
imul
mov
test
jge
lods
push
shrb
outsb
sub
adc
loopne
stc
add
ret
mov
add
xor
call
xlat
movb
cmp
pushf
int
lods
cmp
repnz
pop
lret
mov
mov
pop
cmc
je
add
xor
jne
data16
nop
add
xchg
stos
bswap
mov
add
cli
aam
add
fs
pop
add
and
dec
pextrw
movsb
or
cmpb
cmp
shrl
bound
mov
add
xchg
push
aam
sbb
inc
loop
xchg
mov
rcrl
outsl
xchg
add
ret
jp
leave
enter
xchg
cli
inc
lret
xchg
pop
xor
out
dec
sti
add
nop
ffree
inc
add
lds
adc
pop
dec
cmp
adc
aas
add
clc
mov
data16
repz
push
pusha
adc
adc
es
jbe
aam
add
mov
mov
add
pushf
dec
add
ficomps
add
xor
jecxz
jp
inc
add
mov
xor
inc
aad
pusha
adcl
adcb
mov
loopne
cmp
addl
icebp
mov
out
and
xchg
adc
add
arpl
jno
in
cmp
mov
inc
lcall
fstpt
popa
jmp
dec
mov
mov
aas
mov
jle
add
or
shr
lock
push
cld
jnp
add
aad
or
xchg
inc
mov
jae
or
add
cmp
cmpsb
orb
imul
sub
aam
sbb
pusha
aaa
add
fnsave
mov
mov
cmp
inc
int
jmp
or
fiaddl
xor
push
add
das
pusha
xor
cld
add
or
cmp
fistpll
dec
or
adc
add
leave
out
sbb
xor
ret
add
pop
jle
iret
lcall
adc
inc
shll
movsb
mov
lea
jmp
shl
jns
xor
fnstcw
cmp
add
subb
cmp
xchg
cmp
inc
xor
and
push
jns
pop
test
cmp
aas
inc
xlat
cs
addb
xchg
mov
cld
outsl
leave
add
test
dec
fistpll
jne
loop
lret
jbe
push
inc
movsl
fmull
cmp
and
fwait
add
lcall
lods
and
add
out
and
in
add
mov
jo
jp
cltd
dec
add
js
mov
add
inc
int3
jge
scas
xchg
movhps
push
inc
adc
jns
orb
mov
mov
cli
addr16
add
xchg
test
fidivrs
dec
cmp
add
leave
cmpsl
pop
add
adc
arpl
mov
popf
addb
or
and
pop
es
fstpl
xchg
sub
pop
dec
and
mov
add
xor
cli
adc
js
add
xor
jae
addr16
xor
jno
jne
sub
mov
rcll
pusha
or
mov
sub
push
cmp
xorb
add
pop
into
inc
push
js
and
and
mov
into
int
mov
insb
fiaddl
daa
ljmp
popa
or
das
xor
cwtl
sbb
hlt
daa
jne
lahf
add
add
ret
loope
loopne
mov
cmc
cwtl
sub
add
sub
adc
popa
nop
rcrb
popf
push
or
pop
out
push
addl
add
movsl
xchg
inc
push
or
mov
aas
cmp
or
pop
hlt
lret
inc
cmp
fwait
cmp
xchg
imul
mov
mov
mov
xor
shr
jno
add
fisubrs
dec
ja
add
mov
ds
xchg
cmp
fsubrl
mov
xchg
shlb
add
andb
jae
rorl
add
andl
pop
add
xchg
fwait
push
push
lock
xchg
lods
or
fsubl
pushf
out
pop
xor
mov
fisubrs
dec
push
add
out
testl
mov
imul
cmp
push
pusha
fs
orb
lea
mov
imul
mov
xor
rcrl
jmp
fwait
adc
and
adc
js
es
neg
add
mov
cwtl
dec
xchg
sub
add
inc
jae
test
das
fsts
je
add
xchg
cmp
pop
push
in
rolb
mov
inc
aad
inc
sbb
mov
int3
xchg
in
out
stos
sbb
shl
adc
movsb
add
cmovo
lds
or
xchg
cmp
and
xor
scas
push
add
push
inc
ljmp
dec
hlt
add
add
jg
loop
or
add
adc
ss
repnz
cmp
xchg
add
mov
inc
stc
push
mov
add
xor
pcmpgtw
xchg
orb
fdivp
cmp
sbb
rcrl
add
xchg
xchg
mov
and
jmp
lea
fs
push
daa
or
or
xchg
in
sbb
rcrb
pop
xor
add
outsl
push
xor
sub
add
dec
push
mov
xchg
cwtl
or
inc
inc
out
and
add
sahf
shll
mov
daa
loop
insb
fmulp
pop
loope
xchg
add
xlat
popf
shlb
sbb
add
mov
add
idiv
movsl
push
jl
and
mov
push
jp
and
sti
cli
mov
sub
pop
pusha
pusha
xchg
jno
jo
int3
clc
push
inc
not
bound
std
cmp
sahf
mov
sbb
push
pop
sbb
adc
into
pop
cmp
dec
pop
fs
add
shlb
daa
test
adc
in
sub
sahf
add
lcall
icebp
cwtl
mov
mov
mov
shrl
adc
out
push
mov
std
add
add
lock
add
sbb
fildl
ret
divl
test
repnz
dec
loopne
pop
jne
add
push
leave
add
rcrl
xchg
inc
je
test
sub
xor
add
xchg
xor
addr16
enter
adc
add
cld
or
in
jp
lea
mov
xor
jmp
lock
adc
gs
sbb
jne
jbe
sbb
add
cmp
push
pusha
pavgb
test
sbb
inc
imul
movb
jns
sub
aaa
dec
sub
testl
add
jnp
or
js
movsb
ror
sahf
xor
outsl
mov
jns
push
roll
push
pop
add
xchg
add
adcl
daa
add
cld
xchg
mov
shrb
add
adc
pop
pop
push
popf
orb
sbb
add
loope
roll
cmp
cmpsl
stc
mov
pop
shll
adc
push
cmpsb
and
aaa
adcb
lea
xor
add
and
adc
stos
js
add
popa
xchg
sub
and
insb
outsb
xchg
test
xchg
sbb
xlat
jne
sarl
iret
fists
add
pushf
sub
test
dec
push
lcall
int3
daa
and
xchg
fldl
cld
lods
jb
testl
xor
push
rclb
push
int3
jnp
xor
scas
sbb
push
out
ret
fst
mov
dec
mov
subl
lret
jb
adc
test
insb
and
lahf
cmc
movb
movsl
ret
leave
sub
sub
paddusb
xchg
mov
xor
fisttpl
pop
add
mov
add
loop
xor
scas
inc
nop
addl
cmp
mov
outsb
out
iret
je
stc
push
pop
loope
aad
das
cmp
add
xchg
addr16
roll
xchg
add
loopne
enter
push
push
jb
scas
loopne
pop
jmp
sub
mov
addl
movups
bound
movb
nop
repnz
pop
or
push
hlt
push
dec
insb
add
pop
mov
ret
add
sub
jmp
xchg
daa
stos
jg
shrb
ja
jo
jo
fbstp
lret
cmp
imul
pop
pusha
mov
cli
add
leave
cmpsl
mov
pop
add
sbb
repz
insl
pop
pop
in
ret
shrl
scas
dec
xchg
pusha
sahf
call
pop
lods
xor
stos
fstpt
repnz
add
push
orb
pop
or
push
push
mov
cltd
lock
or
pusha
dec
mov
nop
sub
aaa
data16
lret
push
pop
test
push
mov
adc
add
inc
arpl
pop
add
loopne
push
pop
repnz
sub
stos
dec
fadds
lock
fldt
mov
unpckhps
xchg
pop
add
push
pop
cltd
lock
mov
lock
mov
or
scas
add
dec
push
test
pop
fnstsw
fwait
jo
daa
mov
pop
stos
lcall
jl
rorb
outsl
push
pushf
popf
aas
add
add
in
mov
movsl
inc
shll
add
inc
call
loopne
sub
pop
in
dec
sahf
inc
lds
pop
adc
adc
and
and
mov
cmp
adcb
and
and
adc
adc
mov
inc
mov
push
jae
cmp
imul
jb
test
lock
or
and
jns
jle
daa
jg
pushf
or
jg
push
mov
es
scas
fwait
sbb
cmp
xorb
jb
push
cli
sbb
add
mov
sbb
fiadds
jnp
les
add
xchg
fstps
add
add
pop
jb
sbb
add
cwtl
jp
xchg
and
or
cmp
mov
sbb
popf
loopne
mov
add
push
adc
jo
lock
dec
js
cwtl
imul
jnp
mov
add
or
cmp
cmp
rolb
insb
divb
adc
add
push
repz
xor
pop
or
mov
add
sbb
dec
add
mov
icebp
lods
es
add
mov
lea
test
sbb
push
ss
jp
stc
mov
lret
nop
test
sub
dec
jbe
add
adc
mov
out
jmp
xchg
into
icebp
les
jnp
add
bound
jae
xor
je
dec
pop
or
fsubs
addl
ret
loopne
or
loop
cmc
sahf
mov
outsl
jae
inc
test
xor
dec
stos
pop
mov
mov
add
sub
cmpsb
xchg
or
lea
out
mov
outsl
scas
and
or
sahf
arpl
or
and
fisttpl
mov
xor
cmp
imul
dec
add
inc
sbb
dec
int3
dec
or
add
and
dec
mov
sub
or
packuswb
sbb
mov
in
pop
add
cmp
adc
pop
aam
xor
test
in
dec
jmp
jo
fmull
mov
jecxz
xchg
inc
ud0
shr
xlat
xchg
mov
aas
fimull
jns
sub
cs
data16
cmpsl
xchg
push
add
mov
xor
mov
sbb
mov
and
jg
jge
add
dec
stos
xchg
lea
push
xor
adc
icebp
add
push
inc
mov
push
mov
idivb
push
sti
jl
fs
rorb
and
or
daa
add
inc
add
aad
mov
mov
or
xchg
add
in
push
or
add
subb
push
xor
mov
incl
xchg
bound
imul
adc
ficomps
bt
xchg
loopne
jb
popf
and
xchg
xchg
cmp
mov
inc
mov
xor
and
lds
mov
pop
push
push
or
dec
into
xchg
popf
sub
xchg
or
mov
ret
les
add
pusha
adc
add
and
xor
lahf
add
push
popf
dec
and
addl
push
mov
mov
adc
std
sarb
test
adc
or
das
rcl
cld
sbb
mov
mov
sbb
dec
mov
and
lcall
test
in
xchg
mov
or
pushf
lret
addr16
jg
add
xor
mov
mov
inc
xor
pop
pop
pop
cli
add
push
cmp
inc
jmp
or
xchg
addb
nop
jle
stos
scas
push
add
lcall
mov
out
xor
sbb
mov
fs
push
or
inc
xchg
lret
pop
enter
div
and
subl
outsl
sbb
inc
loope
mov
into
jp
add
repz
jp
add
mov
icebp
ja
xchg
ss
pop
sbb
push
add
add
out
mov
mov
add
fs
pop
nop
les
cmp
rcrb
pop
inc
lahf
loope
and
dec
xor
mov
push
push
jb
or
pop
loope
cmp
xor
test
jp
cmpl
adc
les
mov
pop
jnp
push
sarb
ss
add
imul
jb
movswl
mov
mov
fmuls
add
jne
pop
lea
sbb
stos
fiaddl
xchg
mov
cmc
mov
mov
or
in
add
lods
lea
sbb
add
mov
mov
in
push
mov
cmp
in
ret
in
imul
testb
pop
out
jp
add
pop
add
cmpsl
inc
add
decl
rcr
imul
sub
xor
push
add
cmp
inc
into
fadds
or
ret
xlat
in
add
pop
pop
adc
ffree
jmp
pop
sub
lahf
xor
sbb
mov
fisttpll
xchg
and
in
je
test
cmpsl
lds
lcall
xor
les
or
mov
mov
lahf
push
int
jmp
je
pop
mov
and
nop
fstps
and
aaa
rcrb
jle
mov
xor
scas
cmp
or
push
jl
ljmp
mov
xchg
orl
ret
add
xchg
pop
xchg
and
pcmpgtd
movsl
mov
wrmsr
jne
pop
repnz
sbb
xor
mov
fadds
pusha
sbb
or
xchg
dec
scas
out
and
stos
pusha
add
push
xchg
add
bound
cmp
lret
adc
xchg
push
lock
mov
pusha
adc
adcb
fildl
mov
add
cld
pushf
cmp
inc
cmpb
xor
adc
test
mov
xchg
add
mov
mov
stos
xor
adc
jp
and
inc
add
pop
jl
add
mov
mov
nop
cmc
fimull
mov
cmpxchg
add
lcall
lret
pop
fsubl
mov
add
or
mov
cld
out
fstps
mov
outsb
je
push
cmp
ret
repz
mov
dec
stc
push
je
addr16
add
imul
push
mov
jp
addb
in
loop
dec
jg
cmp
cmp
add
sbb
rorl
jno
sbb
in
cmp
dec
add
sarb
cmpsb
cmp
outsl
rorb
cmp
push
cwtl
mov
pushf
aaa
in
lods
pop
dec
xchg
ds
jp
dec
addr16
or
mov
divb
pusha
test
test
jg
pop
out
push
fmul
popa
dec
cld
testl
adcb
add
mov
mov
jbe
cli
add
int
push
jl
fcmovnbe
es
jg
jns
stc
ljmp
push
mov
push
in
and
sbb
in
add
aad
lods
mov
inc
ljmp
enter
cmp
je
jnp
jo
pop
rclb
add
push
pusha
rcr
stos
leave
push
insl
add
pop
and
add
jp
sahf
adc
mov
jmp
dec
add
shlb
push
or
inc
lahf
or
xlat
cmpl
jp
sbb
jmp
rolb
pop
push
bnd
adc
inc
into
je
dec
sti
xor
arpl
nop
stc
add
clc
and
xor
rcrb
sub
push
pop
ret
sub
enter
out
jmp
cmp
or
ret
shrl
xor
or
jg
fwait
sub
mov
add
mov
les
sahf
js
cmc
and
add
mov
lea
aaa
sbb
dec
add
or
mov
shl
sub
add
xor
sbb
inc
fidivs
clc
mov
add
or
jns
cmp
push
pushf
subl
push
scas
enter
mov
inc
sub
push
movsb
mov
repz
or
and
sbb
lods
add
pop
mov
dec
add
xor
fcompl
inc
pop
xchg
add
add
bnd
xor
lret
adc
and
xchg
jne
add
subl
sbbl
enter
inc
mov
loopne
aad
jg
add
shll
add
add
bound
cmp
mov
pop
int3
cmp
cltd
subl
pushf
lods
pop
hlt
stos
add
push
mov
int3
add
clc
and
push
das
scas
jmp
cmpl
adc
lods
sbb
clc
xchg
pop
mov
add
xchg
push
and
push
pop
out
jbe
jo
mov
xor
andb
add
ja
imul
xchg
or
std
cmc
pop
cmp
addl
je
repz
es
sbb
add
add
sbb
lock
xor
nop
notl
add
and
and
sbb
add
lods
inc
movsb
test
cmpsl
add
ficoml
add
add
sbb
add
pop
jmp
cmp
pop
fbld
adc
xor
pop
iret
aad
add
imul
sti
add
cltd
andb
sub
fwait
clc
push
pop
and
mov
adc
xchg
inc
add
push
pop
jno
test
jg
std
popf
shlb
xchg
cs
ret
xor
jp
add
cmp
lahf
in
dec
add
xchg
rclb
pop
in
jg
leave
lret
hlt
cmp
inc
add
sahf
addb
jo
cmc
adc
mov
mov
and
cltd
pop
loop
mov
outsb
mov
add
add
or
add
call
dec
cmp
and
add
xchg
push
add
cmp
ljmp
or
cld
adc
xchg
mov
mov
loope
and
jne
add
mov
xchg
mov
dec
mov
push
mov
and
decb
jno
pushf
jp
shlb
shll
cli
movb
out
jl
mov
mov
dec
jbe
push
mov
scas
xchg
add
imul
xor
insl
or
mov
sbb
add
jo
lahf
aad
sub
cmpb
adc
shr
push
mov
jmp
add
daa
pop
dec
add
or
lock
and
inc
addl
mov
inc
push
ljmp
lahf
sub
push
pop
sbb
jb
cmpsl
mov
ss
arpl
cld
cld
in
adc
mov
add
dec
add
adc
outsb
andl
rolb
loope
test
test
add
in
out
addl
jae
jp
add
ret
jne
outsb
dec
add
ffreep
ss
dec
cmp
inc
sub
add
in
popf
xor
or
pop
mov
dec
mov
into
inc
stos
sbbb
push
movsl
push
js
scas
sub
sub
adc
in
xchg
or
pop
test
mov
hlt
push
jg
add
loope
adc
pop
cmpsb
int
mov
cmpsl
sbb
sub
add
jle
jns
outsb
daa
pop
mov
ds
mov
and
dec
add
sbb
jb
sbb
xlat
mov
add
pusha
xor
push
dec
dec
sbb
adcb
push
or
test
dec
sbbb
pop
int
loope
ds
in
ja
jle
cmp
inc
fists
fwait
add
pop
and
outsl
cmpsb
sbb
adc
sub
add
int
ljmpw
mov
out
add
xor
and
inc
add
imul
push
mov
adc
icebp
and
mov
stos
sbb
push
aas
xchg
dec
addb
nop
test
push
lock
or
loop
dec
mov
dec
adc
cmp
hlt
dec
gs
add
dec
sub
add
arpl
add
xchg
jne
and
push
xor
cmp
add
cld
jb
stc
pop
scas
xor
test
pop
xchg
mov
sub
xchg
test
cs
xchg
orl
adc
cltd
add
aas
movsb
xor
push
pop
and
shll
pop
cmc
adc
add
sbb
shrl
lds
cmc
mov
add
xchg
add
jns
nop
or
cli
and
jne
loop
xchg
add
add
inc
dec
push
add
data16
jecxz
mov
or
stos
shll
cli
frstor
pop
pop
sub
or
rclb
test
mov
shr
cmp
mov
test
add
xor
cmp
cs
cwtl
jle
xor
push
mov
push
lock
sub
adc
and
dec
inc
xorb
stc
push
ja
outsl
pop
pop
lock
test
add
mov
clc
incl
add
pop
fisttpll
sub
pxor
push
loopne
arpl
mov
xor
es
popa
add
sbb
test
idiv
cmp
mov
push
cli
rolb
bound
dec
test
mov
adc
stos
out
hlt
pop
jnp
add
jle
sub
xor
inc
addr16
mul
add
cmp
cld
fists
jg
push
in
mov
add
adc
fcoms
sbb
inc
dec
and
mov
es
roll
mov
push
cmp
push
das
jnp
fstpt
push
push
or
pusha
inc
loop
ljmp
loope
fwait
repnz
jno
add
fld
aaa
adc
ljmp
pushf
in
roll
push
divb
add
xchg
sbb
add
jmp
rcrb
inc
pushf
cmp
dec
aam
add
mov
add
mov
adc
ljmp
adc
mov
pop
sub
dec
lea
xchg
add
dec
and
and
lods
mov
lea
jg
push
shr
mov
adc
repz
xchg
xor
nop
fs
add
cmp
add
sbbb
xchg
add
cmp
cmp
insb
jmp
popf
sub
jg
jl
ret
add
mov
sub
fs
popa
ret
out
xchg
sbb
inc
addl
sbb
lcall
stos
in
sub
xchg
xchg
add
dec
jg
or
aaa
ds
iret
mov
cmp
dec
xor
cmp
pop
addb
add
pushf
orb
test
rcl
mov
mov
rorb
pop
add
push
dec
out
push
cwtl
and
imul
mov
add
outsl
cmc
ss
mov
cmp
add
sar
js
push
hlt
lock
mov
lea
pop
pop
mov
and
adc
pop
jnp
nop
sbb
mov
shr
sub
adc
lea
pusha
sub
xchg
mov
mov
std
mov
add
push
fwait
pop
stos
pop
sub
movsb
das
sbb
push
xlat
imul
xchg
sub
lods
int3
or
and
andl
sbbb
movl
pop
add
add
outsl
imul
mov
add
fcompp
ljmp
push
repz
scas
popa
lahf
add
aaa
std
add
in
imul
inc
mov
arpl
lahf
push
add
dec
pop
dec
add
clc
negl
add
stos
push
jns
add
sbb
sub
sub
jbe
cmp
insb
push
xlat
pop
mov
dec
imul
or
add
mov
jp
add
xor
cmp
js
out
push
add
fsub
iret
pop
xchg
lds
nop
cmp
and
nop
pop
add
push
stos
sbb
cmp
lahf
sbb
orb
jne
add
cmp
dec
pop
fmull
mov
fcmovb
push
push
je
add
mov
cld
add
xchg
js
add
jmp
lock
pop
pop
ds
jne
add
in
in
push
addl
and
or
mov
add
sbbb
insl
test
dec
lock
gs
add
or
and
daa
jge
mov
xor
xchg
xorl
jle
adcl
and
loope
in
add
fisubrl
add
xchg
das
ret
add
orl
cmp
pop
leave
add
into
sbbb
dec
cmp
mov
insb
push
repnz
mov
add
xchg
or
mov
add
and
fwait
adc
sub
mov
insl
dec
sub
cmp
fmuls
loop
lret
push
add
mov
lods
add
push
pop
xor
lea
xchg
leave
adc
cwtl
je
loop
lcall
insl
stc
add
faddl
push
lcall
std
data16
and
repz
outsl
xlat
sub
loope
mov
inc
xchg
mov
and
or
sti
push
and
lcall
sbb
syscall
addb
bound
jg
pushf
loopne
add
jns
sub
sub
xchg
xchg
mov
push
inc
subl
repz
mov
int3
add
rolb
test
sbb
add
lods
outsb
push
fdivrl
fsts
sbb
aas
in
add
inc
sbb
mov
pop
jp
or
sti
push
punpckhwd
xchg
mov
clc
adc
das
in
dec
sahf
add
mov
cwtl
inc
push
in
cmp
sti
imulb
test
xor
sbb
jbe
xchg
ss
push
mov
sub
in
jl
lea
lods
clc
pusha
loop
sbb
cltd
add
in
and
cmc
outsb
into
movsl
sbb
sbb
pop
cmpsl
pop
add
add
push
adc
test
push
das
mov
mov
xlat
cli
mov
sub
xchg
mov
jmp
or
xchg
mov
mov
dec
in
pushf
inc
add
ds
imul
ja
add
mov
test
add
mov
mov
cld
add
enter
push
iret
add
adc
add
xor
mov
ret
inc
loop
out
in
sbb
push
in
inc
fisttpl
push
push
add
mov
sub
movsb
idivl
sub
xchg
imul
and
xchg
mov
pop
ffree
cmp
dec
gs
nop
inc
pushf
cmp
push
xchg
sbb
rcr
add
stos
mov
sahf
ljmp
sub
sub
cwtl
xchg
cmp
push
fnstenv
mov
out
mov
or
sub
push
jo
mulps
push
xchg
aam
add
sti
shlb
lea
xchg
inc
add
and
ds
scas
jmp
in
popa
mov
mov
sti
xor
cmc
push
add
lds
imul
inc
jge
andb
cwtl
add
and
jb
fs
ret
add
repnz
nop
scas
lods
add
add
pop
subl
je
pop
ja
clc
lret
sbb
repnz
int3
ds
insb
jmp
clc
cs
mov
xchg
push
push
iret
rcr
dec
add
fs
xchg
cli
xor
push
pop
xlat
into
sub
add
or
jne
lock
hlt
in
add
call
cmpsb
popa
ja
cmp
pushf
sbb
fs
inc
jle
add
imul
arpl
outsb
push
push
insb
sbb
add
js
add
subl
jo
mov
adc
outsb
scas
loopne
push
sbb
jmp
rclb
mov
rcrl
pusha
movsb
cli
dec
jne
or
dec
xchg
inc
orb
mov
jle
bound
pop
mov
insb
sub
mov
jp
sub
mov
sbb
ret
ffree
cmp
add
scas
arpl
in
push
iret
add
popa
and
fdivrl
in
into
xchg
test
mov
test
ret
add
xchg
push
popf
call
mov
gs
test
out
shlb
xchg
push
loope
call
jno
jp
inc
or
pusha
push
popa
movsl
arpl
sub
addr16
test
or
jb
les
and
loopne
add
mov
xor
xchg
add
jno
jge
sbb
mov
and
push
cmp
aaa
dec
mov
mov
add
les
sbb
pop
jl
jbe
jl
add
in
mov
xlat
pop
aam
icebp
sub
or
in
repz
nop
les
pushl
aad
push
pop
addr16
sarl
cld
lcall
sti
ds
add
ret
fisttps
stc
mov
sub
adcb
dec
pop
out
adc
clc
gs
outsb
out
mov
cli
add
rolb
or
and
movsl
test
inc
add
pop
or
lea
shlb
add
mov
pop
inc
int3
dec
mov
adc
rol
aad
xchg
imul
mov
mov
stos
cmp
sub
cltd
mov
ret
sbb
dec
inc
add
xor
add
pop
mov
out
insl
push
push
mov
xchg
mov
mov
add
lock
mov
add
dec
repz
add
or
ja
mov
xor
out
add
push
cmc
mov
adc
jl
add
repnz
cmp
push
inc
addr16
mov
imul
adc
adcb
popf
jns
shr
lahf
add
xchg
rolb
ljmp
jl
rol
inc
adc
xor
lock
add
call
clc
out
ja
pop
fcmovne
sub
sub
cmp
jp
int
sbb
dec
or
icebp
pop
sar
in
cli
sub
loop
insl
inc
inc
and
mov
xchg
ret
mov
cld
shl
mov
int3
add
xor
add
sub
add
ds
add
rorl
lods
ret
mov
inc
cmpsl
xchg
xchg
call
or
lret
pop
push
enter
fistpl
jo
xchg
cmpl
mov
inc
test
cmp
pop
imul
sbb
mov
jmp
jl
ror
adc
mov
shlb
in
loopne
push
mov
add
pop
scas
sahf
ret
mov
mov
rorb
sub
loopne
lock
mov
cltd
jle
pop
fisttps
add
xlat
add
repnz
mov
js
jne
push
mov
loop
lods
loopne
xchg
loope
rolb
js
jmp
sub
cmp
insb
call
jae
movsl
fcomps
jmp
jbe
sbb
or
lods
add
mov
int3
pop
add
ja
pop
lea
cmp
mov
mov
insb
in
xchg
rolb
add
stos
sub
loope
insl
in
cmp
push
out
mov
xor
mov
mov
mov
xchg
push
add
push
sbb
addr16
push
lods
dec
jbe
pop
mov
jl
mov
js
mov
out
dec
rclb
xchg
icebp
mov
dec
fstpl
add
sti
js
push
sbb
inc
dec
stc
pop
add
ljmp
mov
stos
mov
cld
fidivrl
test
and
pop
add
mov
nop
sbb
push
adc
push
push
pop
xchg
rcl
or
popf
or
push
stos
dec
mov
sbb
pop
xor
sub
and
inc
or
and
jno
mov
add
out
lahf
xor
push
and
lods
adc
sbb
cmc
jl
iret
popa
stc
cmpb
rcrb
add
or
jmp
add
stos
mov
fcoml
dec
mov
aam
out
xor
xchg
xchg
mov
adc
add
js
cltd
jmp
jo
or
jle
pop
bound
in
scas
hlt
lahf
xchg
mov
popa
inc
dec
add
jge
adc
ud1
loopne
aad
add
push
mov
xlat
push
push
cmp
add
pop
hlt
push
mov
popa
jmp
or
mov
aam
sbb
push
mov
fsubrs
gs
pop
xlat
mov
mov
xor
shlb
push
or
xchg
enter
or
sbb
and
cli
aam
aas
mov
inc
jl
mov
push
xor
bound
aam
pop
aaa
pop
add
ljmp
popf
add
add
fwait
push
test
xor
test
jg
add
fstps
mov
mov
add
cmp
pusha
lock
test
ret
inc
stc
andb
mov
pop
xor
imul
sub
sbb
mov
lods
xchg
add
cmpsl
mov
push
push
outsb
testl
std
sbbb
mov
sub
sbb
or
pop
adc
mov
add
xor
mov
push
pop
push
push
rolb
pop
sub
dec
and
cltd
fldcw
inc
bound
or
mov
mov
dec
jmp
add
test
sub
dec
mov
push
xlat
outsl
lods
jae
pushf
sbb
and
mov
ds
inc
sub
lret
and
or
in
pop
xchg
dec
cmpsb
mov
mov
aad
push
clc
pop
lock
add
cmpsb
cmp
xorb
jl
aaa
incb
test
aas
xor
mov
test
add
jns
cli
icebp
cmpsl
mov
xchg
clc
lods
add
call
cmp
iret
mov
sar
dec
lods
sbb
jg
pop
add
push
int3
mov
pop
pop
mov
nop
cmpsb
adc
pop
rolb
cwtl
or
xlat
sub
mov
xchg
fadd
add
out
sarl
add
test
pop
ret
jae
add
mov
mov
scas
out
out
cmp
loopne
pop
xor
ret
push
mov
xchg
add
test
mov
inc
flds
call
stos
mov
or
sahf
bound
gs
sbb
hlt
jbe
add
outsl
loope
insl
mov
add
das
add
fidivs
cmp
jbe
and
mov
cmp
aam
andl
inc
clc
adcb
mull
lock
into
inc
add
je
scas
enter
ror
xor
and
sti
das
outsb
push
add
dec
add
jge
mov
xchg
add
pop
cmpsb
stc
sbb
add
fs
add
int
mov
out
push
mov
pop
in
and
inc
stc
add
dec
rorb
add
xlat
push
inc
ret
add
mov
call
pop
andl
dec
negb
dec
shrb
aaa
mov
testl
bound
push
out
adc
xchg
iret
lcall
push
les
test
xor
int
dec
dec
int3
repnz
std
cmp
out
sbb
xchg
jo
push
add
mov
loopne
xor
adcb
cmp
sub
add
mov
cwtl
sarb
dec
fiaddl
and
aaa
add
repnz
add
mov
fmuls
iret
lret
sbbb
rcr
lods
xchg
outsl
scas
mov
add
xchg
cmp
push
xlat
pop
add
cmp
mov
ss
mov
daa
out
xchg
xchg
nop
mov
dec
sbb
and
ja
pop
or
js
out
ficoms
jno
pop
out
mov
pop
jae
add
sahf
adc
xor
jge
or
pop
jp
loopne
scas
cmpsb
out
in
fisttps
inc
int3
pusha
rorl
mov
push
inc
stc
out
or
loopne
add
and
add
jno
xorl
stc
rcll
mov
and
shlb
cmp
repz
push
mov
stc
loopne
aaa
in
add
mov
nop
popa
fimuls
repnz
iret
inc
sbb
add
les
addb
mov
inc
call
or
outsl
ret
cmc
sub
cli
xchg
aas
iret
enter
sub
pusha
aaa
add
push
mov
sbb
xor
add
aaa
jle
push
cmpsb
jg
sti
add
mov
into
mov
mov
and
mov
fwait
xorb
rorb
jge
add
dec
enter
push
add
pop
jp
add
js
cmpsl
les
xchg
adc
pop
dec
out
sub
xchg
or
loop
sub
lahf
addr16
xor
sbb
add
jle
rolb
fidivs
dec
dec
add
cmp
and
add
outsl
test
mov
sbb
pop
mov
cmp
add
or
divb
in
pop
sbb
shlb
mov
jne
sbb
shlb
mov
sub
cwtl
add
pop
mov
sbb
add
mov
inc
nop
stos
hlt
and
add
inc
mov
adc
add
push
sbb
xchg
test
dec
add
add
ret
jge
pop
push
add
cltd
xor
popf
loope
fwait
add
mov
shlb
lds
xor
ret
iret
notb
dec
inc
push
mov
aaa
pop
fsts
scas
lock
push
ss
and
xchg
arpl
add
jge
xchg
mov
push
mov
add
mov
mov
push
out
xor
filds
leave
xchg
cld
arpl
mov
adc
loopne
push
add
mov
mov
xor
push
jo
sbb
loope
call
and
mov
sbb
adc
setno
leave
sbb
xchg
cld
sar
push
enter
jb
shlb
in
je
add
adc
stos
fwait
inc
and
add
and
and
push
jmp
add
cltd
sbb
pushf
add
xor
and
push
stos
cmp
js
adc
xlat
mov
nop
inc
add
fwait
push
mov
jne
daa
dec
rclb
add
in
sub
inc
jnp
fsubl
js
adc
loopne
test
inc
cmp
cmpsl
add
pop
xorl
cmp
cmp
inc
xchg
or
div
dec
mov
lods
ficoml
fstps
fstpl
andl
sub
fldenv
insl
jo
add
pop
mov
push
mov
push
clc
push
add
rcrb
fdivl
cmpsl
gs
xlat
add
pop
frstor
ja
sub
sbb
movsl
shrl
icebp
packsswb
and
add
test
mov
ljmp
shll
ja
add
cmc
fsts
cmp
nop
sbb
pusha
movsb
adc
in
and
sar
and
add
mov
int
loopne
mov
add
mov
inc
leave
cmp
lret
les
movsb
adc
call
push
pushf
hlt
fistps
lods
add
pushl
add
mov
fcoml
push
add
pop
stos
cli
pop
dec
mov
aad
into
pop
mov
sub
mov
lea
rclb
adc
idivb
push
cli
ljmp
mov
push
cmp
xor
or
xor
jge
push
push
add
or
add
test
pushf
push
fwait
and
bound
pusha
add
mov
jne
mov
popa
icebp
das
add
mov
mov
jge
or
je
jmp
jns
sub
push
adc
lcall
add
push
mov
jecxz
sub
jae
inc
mov
dec
xchg
icebp
setno
cmp
in
lret
addb
pop
push
xor
push
arpl
mov
add
jg
clc
push
into
insl
or
lea
or
add
lcall
cmpb
cmp
cld
add
or
jbe
fadd
pop
cmp
add
pusha
lods
lock
fdivp
or
add
inc
and
aam
ret
out
xor
fwait
add
mov
in
pop
pop
push
xchg
inc
add
data16
or
rol
test
add
pushf
sbb
cmpsb
aam
and
add
inc
icebp
idivb
xor
sub
shll
xor
mov
out
jle
out
rcr
leave
sub
or
pop
jmp
fs
jb
ffreep
shll
and
add
mov
push
ret
pop
loope
add
cmc
xchg
dec
and
and
insb
push
pop
aaa
sub
adc
pop
pop
fwait
jmp
lret
aam
inc
flds
xor
and
test
add
pop
inc
or
enter
and
mov
xchg
aam
aad
jo
pop
add
push
push
add
inc
gs
xchg
and
add
addr16
pushf
jno
js
ficompl
add
cld
cmpsb
pop
popa
or
es
xor
gs
mov
push
xchg
add
fldl
xor
movsl
pop
xchg
fsubrl
cmpb
test
pusha
add
adc
cmp
lods
les
insb
pop
loope
pslld
pop
mov
add
xor
jns
test
aaa
movsb
xorl
xchg
les
sbb
mov
icebp
add
xor
add
das
je
inc
inc
or
pop
ret
out
jnp
out
inc
mov
add
inc
push
dec
mov
sub
loopnew
push
mov
ds
cmpsl
int
in
xor
jmp
fimuls
mov
pop
cmp
fs
popf
xchg
fmuls
add
or
xor
cld
add
fists
jo
lds
jb
add
xchg
loope
adc
jle
inc
test
gs
xchg
popa
mov
jl
dec
xor
pop
add
ds
mov
push
sub
shr
dec
out
cmpsl
mov
popa
stos
dec
jg
add
lret
andb
xchg
and
inc
sbb
in
testb
add
mov
add
int3
dec
jae
sbb
int
jo
fwait
pushf
inc
add
imul
add
cmp
lods
xchg
add
lcall
sbb
mov
jno
adc
dec
xor
add
xor
sub
aaa
add
mov
push
imul
inc
out
rclb
cwtl
loope
pop
je,pt
add
sub
sbb
xor
inc
icebp
js
add
push
notl
ljmp
data16
xor
dec
movsb
sub
inc
in
mov
shrb
add
shrl
dec
imul
jmp
xchg
inc
xorb
xchg
mov
outsb
mov
seta
push
loope
call
add
jnp
add
cmp
add
insb
mov
push
rcrb
add
loope
push
push
add
push
js
push
add
dec
cli
add
pop
jmp
cmp
jae
lret
add
sbb
add
jno
cmpsl
mov
cwtl
je
jo
push
scas
enter
outsl
cli
rcrb
std
pop
sbbb
enter
out
movsb
jne
pop
dec
rcrb
pop
push
or
mov
pop
dec
inc
jle
and
add
cs
pushf
int
mov
lahf
jnp
push
add
inc
dec
pop
push
mov
rcrb
sub
pop
xchg
loopne
pop
jnp
fmul
repnz
jne
sub
xlat
rclb
pop
clc
mov
add
or
mov
fs
push
xchg
mov
cmpsb
mov
out
jo
push
fisttpl
ds
add
or
movsl
inc
add
push
out
xor
subb
lahf
inc
imul
adc
dec
mov
pusha
sti
push
outsb
add
pop
shlb
pusha
cmp
repnz
dec
in
lock
pop
pop
lret
push
pusha
cmp
loop
lods
mov
andb
cmpsl
push
hlt
lret
add
dec
add
jnp
sub
jne
adcb
inc
jno
sbb
scas
outsl
sti
add
sbb
std
aas
movsb
push
test
aaa
add
adcb
push
push
mov
adc
pop
cmp
inc
mulb
cmpsl
inc
add
add
push
sub
dec
add
orl
adc
mov
adc
push
icebp
xor
mov
or
cmp
in
bound
add
xor
iret
mov
jo
hlt
out
push
aaa
jb
insb
pop
xchg
pop
adc
jle
sti
push
xchg
fisttps
movsl
push
xorb
fcmovnbe
clc
or
cwtl
sbb
insl
mov
inc
addl
dec
cltd
imulb
push
dec
test
addr16
sbb
inc
jle
add
dec
push
movb
repnz
test
cmp
arpl
xchg
movl
pop
leave
cmp
inc
add
in
push
nop
inc
add
push
hlt
inc
inc
mov
in
xor
ja
aaa
test
jnp
pop
push
sbbb
or
outsl
scas
add
jp
push
jb
shrb
ljmp
push
in
fiaddl
lock
mov
add
test
stos
mov
add
jno
lcall
add
cwtl
pop
mov
aas
subps
or
cmp
xchg
add
xchg
push
xor
mov
stos
pop
add
mov
push
int3
add
test
cmp
addl
add
test
scas
lret
add
data16
cmp
in
daa
stos
lock
cmp
add
das
and
mov
cmp
sbb
ja
lods
dec
adc
sbb
es
into
xchg
cli
subps
ret
add
pop
dec
add
pusha
shl
mov
mov
test
cwtl
dec
lret
repnz
add
lock
daa
add
sub
stos
inc
mov
in
cmp
dec
int3
jge
jo
push
ljmp
jbe
hlt
jae
pop
add
xlat
mov
ror
add
cs
sbb
lods
sub
cmpsb
add
cmp
sbb
sub
out
add
adc
sub
aam
jecxz
sarb
mov
xchg
popf
inc
mov
sti
push
mov
fwait
mov
pusha
mov
cwtl
mov
adc
push
mov
sub
popa
push
fists
or
aas
jae
xor
sbb
or
movsb
int3
jb
mov
imul
inc
shlb
xor
xor
sub
add
and
xor
add
dec
fmull
pushf
pop
add
jp
ja
xor
and
loop
jne
jno
pop
cmpsl
cld
jp
ljmp
pop
rcl
mov
and
out
pop
setns
stos
cld
sbb
imulb
jb
ja
nop
fdivrs
add
fs
xor
sub
data16
push
subl
shl
xlat
aaa
add
ja
jno
cmc
xchg
dec
lock
xor
rcr
mov
jae
jecxz
in
xor
inc
or
jne
fst
ja
add
lcall
pop
or
ljmp
push
dec
pop
adc
test
push
sub
nop
lret
add
inc
inc
jp
movsl
mov
inc
add
lods
cltd
sahf
outsl
mov
add
or
mov
sub
enter
fsubr
popa
or
jge
adcl
cmp
mov
and
into
data16
imul
and
enter
stos
mov
insl
shrl
sbb
rcll
jp
ret
test
loopne
jge
xor
cmpsb
test
and
repz
gs
pop
inc
fmuls
xchg
test
fstpt
nopl
xchg
inc
add
mov
pop
jp
cwtl
and
scas
jl
xchg
push
and
mov
dec
cmp
iret
add
cltd
adc
fcmovnu
add
push
loop
mov
ret
xchg
loopne
mov
mov
lods
xor
adc
lahf
cmp
xor
xor
in
mov
mov
and
fadds
sub
or
and
js
stos
pop
out
and
xor
mov
cmp
mov
xchg
mov
add
push
xor
repz
mov
sahf
and
mov
dec
xchg
int
mov
push
mov
lds
xor
add
or
mul
or
add
mov
sbb
sub
mov
push
nop
add
add
stos
pusha
dec
adc
and
add
push
adc
lret
adc
lea
add
pop
in
fadds
push
rcl
nop
mov
out
je
sub
adc
sbb
cld
jg
jae
mov
add
divl
add
mov
jp
push
mov
out
add
jbe
sbb
xchg
push
aas
mov
adc
pop
and
jle
add
cmp
xchg
sbb
add
inc
fucomi
jb
stos
mov
or
adc
add
icebp
aam
mov
call
mov
repnz
jmp
sub
jbe
xor
cmp
xor
add
fldcw
in
gs
insl
pop
add
pop
fiadds
mov
and
xor
jge
scas
test
or
in
sub
les
adcb
lock
in
pop
cli
and
sub
or
mov
pushf
add
push
mov
addr16
inc
add
xchg
stc
mov
lds
sub
inc
decl
bound
pop
les
addr16
add
jp
jl
testb
das
cmpsl
and
mov
and
cmp
test
mov
or
inc
stos
or
add
push
push
cltd
add
popf
pop
in
add
cmpsl
and
mov
ret
jo
xchg
sbbb
pop
inc
call
pop
xor
test
sti
xor
test
add
adc
js
mov
add
outsb
lods
xor
cmp
push
add
xor
add
popa
stc
mov
sbb
push
sbb
jg
pop
lock
insl
dec
dec
in
pop
jp
ss
lret
dec
les
dec
mov
add
sbb
lret
cli
or
pusha
popf
data16
roll
lods
nop
jg
mov
dec
xor
aas
repnz
cmp
out
push
cltd
adc
push
mov
shl
add
jmp
sarb
add
xchg
xor
mov
insb
rcrb
aaa
add
mov
hlt
push
push
inc
jmp
sbb
mov
movsl
pushf
mov
mov
sub
icebp
arpl
and
not
xor
add
jle
add
loope
mov
add
adc
mov
add
dec
les
and
mov
movsl
push
testl
or
les
adc
cs
lock
push
xor
es
mov
mov
dec
add
cmp
xchg
sbb
cmp
xor
pop
mov
js
mov
xor
jg
loopne
icebp
cmp
jmp
xchg
stos
adc
add
lock
sub
int
add
xchg
mov
lds
mov
in
stos
add
sub
or
xor
xor
sahf
adc
loopne
pop
hlt
xchg
add
jp
mov
iret
xor
jmp
cmp
inc
inc
add
pop
lret
aam
dec
in
push
and
jle
push
insb
pop
data16
cmp
mov
jno
add
shlb
pop
pop
jmp
dec
stc
outsb
inc
and
pop
xchg
dec
test
push
scas
sub
fcomps
add
dec
shrl
cmp
push
into
mov
lahf
daa
stos
pop
mov
iret
add
mov
push
jns
or
cmpsl
add
sbb
cwtl
lcall
cmp
out
sahf
pop
mov
dec
subb
outsl
pop
pop
test
add
sub
push
add
jno
jle
push
cwtl
mov
pusha
xor
lods
arpl
lcall
add
sub
sub
je
dec
and
stc
add
push
pop
in
out
imul
inc
bound
sbb
pop
repnz
xor
mov
xor
mov
ljmp
insl
test
cli
aaa
add
sti
enter
add
push
jl
rcrl
popa
add
insb
clc
push
mov
sbb
test
test
xor
add
mov
add
les
adc
scas
push
mov
add
fsubrl
ffree
std
add
mov
subb
push
popa
shl
ja
and
dec
std
pop
jp
in
inc
ss
xchg
ljmp
inc
das
add
and
outsl
add
fs
lds
add
or
add
mov
aad
xchg
xlat
cli
add
aas
cmp
arpl
sbb
andb
shlb
add
inc
fmull
scas
xchg
jecxz
pop
add
lahf
data16
jns
pop
xchg
push
fsubrl
jnp
lret
fnstsw
mov
sub
and
fs
or
sahf
mov
add
mov
or
mov
testl
cs
inc
xor
shl
lea
ss
jno
js
inc
dec
add
sub
pop
bound
popf
loopne
aam
jecxz
jp
cli
jmp
xchg
xor
loopne
add
push
scas
push
not
mov
mov
push
les
add
loop
add
jecxz
fwait
movsb
and
sub
ficomps
push
adc
movsb
mov
adc
into
jl
lcall
sar
add
lret
movsl
scas
dec
add
fsubr
pop
sarb
push
imul
jne
sub
sbb
js
testl
insb
xor
add
xchg
aam
mov
xchg
xchg
in
xchg
sbb
ds
inc
lock
sub
aaa
or
dec
aam
mov
xchg
in
push
loopne
ret
jae
add
xchg
xchg
je
push
inc
push
popf
or
add
xchg
rcll
mov
aad
nop
xor
add
cmp
jl
add
jns
int3
loopne
inc
push
lret
push
rorb
mov
xchg
push
or
test
cmpsb
scas
mov
mov
dec
and
insb
add
adc
cmpb
xor
inc
push
push
mov
fbld
dec
ja
fdivs
push
std
mov
lock
adcb
in
pop
aas
inc
repz
stc
pop
add
ret
arpl
add
in
lret
aas
or
push
mov
popl
and
cli
xor
imul
decb
out
pop
sbbb
adc
jp
mov
pop
sbb
and
push
mov
adc
pop
and
das
or
sub
jmp
sbbl
adc
add
lock
push
in
push
sbb
or
leave
jae
add
flds
xchg
por
add
outsl
or
pop
fdivl
mov
add
sub
inc
sbb
ja
add
pop
aas
pop
dec
mov
cli
fdivrs
add
sub
cmpl
and
sbb
pop
icebp
mov
repnz
mov
in
test
xchg
mov
dec
mov
repz
in
jp
stc
lcall
add
aam
insb
jle
int3
or
addb
cmp
shlb
test
inc
add
fidivl
lret
arpl
add
mov
cmpsl
inc
sbb
sti
add
push
adc
add
sbb
in
ljmp
int
test
sarb
or
scas
xor
sahf
mov
mov
add
int
inc
adc
fildl
cmp
pop
hlt
pop
cmp
shr
aad
or
mov
mov
dec
or
add
sub
in
iret
loope
imul
sbb
xor
nop
xor
bound
add
xor
and
arpl
movsb
cmp
cmp
adc
int3
decb
outsl
sahf
xchg
add
incl
psubsw
jge
lcall
mov
add
mov
je
add
pop
xchg
cltd
into
mov
mov
cmp
add
mov
clc
adc
jno
out
add
into
sbb
aas
xchg
cmpsl
mov
dec
jno
xchg
push
mov
out
in
sahf
int3
jle
add
cmp
in
jg
add
fistpll
fidivrs
add
fninit
sub
mov
clc
mov
cs
sbb
rolb
mov
mov
in
call
xor
rcll
add
inc
mov
into
push
xor
daa
jl
push
pop
pop
mov
xchg
jae
sbb
sub
test
push
lods
add
subb
adc
addr16
inc
fdiv
push
push
jo
or
add
stos
xchg
lret
push
sub
jae
add
push
clc
mov
out
jnp
push
popa
mov
mov
call
cli
enter
adc
xor
ret
jnp
je
or
xchg
jl
push
inc
add
push
mov
rorb
sbb
adc
pop
and
jne
mov
push
dec
sub
ja
adc
popa
dec
lahf
mov
nop
jp
xchg
push
jge
arpl
dec
pop
sti
clc
sbb
adc
divl
push
adc
xor
aam
mov
mov
testb
mov
lods
fstps
aad
shlb
xor
xchg
inc
push
fiaddl
mov
add
xor
jmp
push
xlat
mov
add
ds
jge
and
dec
inc
sbb
insb
adc
andl
mov
push
pop
push
jp
mov
mov
add
icebp
cld
cmp
add
ja
sub
or
jo
stos
cmp
add
or
inc
push
popa
fisubrl
clc
xor
loopne
out
rcll
xchg
push
add
std
pop
bound
xor
add
lods
add
testl
or
negb
add
loopne
pop
gs
sbb
imul
lds
fdiv
mov
inc
xchg
sbb
out
push
add
cmp
push
mov
sub
nop
lock
dec
jecxz
ljmp
aam
nop
jno
cmp
push
loop
mov
mov
cmp
lods
enter
fnstsw
dec
add
in
push
dec
cmpsb
xchg
mov
or
dec
ja
addr16
test
xor
in
push
mov
add
lea
repz
ret
call
aam
inc
icebp
scas
or
popa
push
pop
jae
xor
mov
push
lods
add
add
add
sbb
and
mov
arpl
xchg
filds
ja
fsubs
lahf
xchg
mov
xor
mov
outsb
cwtl
cmp
cmpsb
lock
mov
loop
add
inc
movsl
js
cmp
mov
sbbb
les
jno
cmp
jo
iret
add
or
add
sub
out
jbe
loopne
lea
mov
mov
push
mov
xor
test
nop
fistpll
jp
push
or
jle
jnp
add
mov
adc
pop
ret
mov
pop
lds
add
pop
cmpsl
mov
insl
scas
pop
aaa
psllq
add
mov
std
add
mov
mov
cmp
fwait
mov
jns
add
les
pop
test
data16
or
lods
ds
idivb
and
inc
jmp
cmp
mov
imul
loopne
mov
jmp
jae
cmp
add
pop
jg
add
cmp
cmp
lret
sbb
push
mov
stos
repz
adcb
pop
lahf
lods
add
mov
int
fisubrs
fsub
or
sbb
std
dec
inc
gs
lea
mov
bound
jmp
sub
add
cli
cmp
imul
cmpsl
pop
or
or
stos
mov
cmc
dec
addr16
sbb
shlb
sbb
xor
into
jg
call
push
inc
mov
jne
add
push
mov
xor
and
fnstsw
pusha
mov
adc
push
cwtl
addb
sub
dec
or
test
jecxz
mov
push
adc
jno
mov
add
push
aas
shll
dec
les
pop
mov
nop
movsl
pop
lea
or
rcr
add
jl
push
xor
cmp
or
loop
xchg
icebp
add
cli
out
sub
leave
push
xor
pop
jl
lahf
outsb
nop
lock
stos
add
push
cli
mov
fwait
nop
fbld
jmp
xor
roll
cmp
add
push
pop
movsl
push
jl
add
xchg
adc
and
into
addb
pop
xor
add
push
or
push
lods
movsl
loopne
cld
mov
jbe
lods
je
dec
add
in
adc
in
test
ja
add
adc
pop
jle
adc
loopne
add
ss
xor
mov
sub
jp
jl
out
sbb
and
add
fldl
setle
jl
mov
xchg
hlt
les
movsl
fldcw
dec
scas
leave
xlat
out
fmull
jae
dec
addl
daa
mov
movsl
test
insb
movl
mov
jne
cmp
les
in
lahf
add
xchg
dec
push
add
stos
popf
ljmp
push
xchg
cltd
mov
pusha
add
lods
cld
add
data16
mov
inc
ds
add
xor
pop
mov
cmp
lods
xchg
iret
icebp
lret
inc
fcoms
int3
jb
add
lock
inc
pop
movsb
add
je
std
repnz
out
les
pop
add
jbe
sbb
int3
add
mov
add
adc
adcb
mov
xchg
sub
push
xor
lock
and
movsl
jnp
shrb
cli
stc
add
pushf
add
cmpsl
jge
sub
test
push
lret
add
push
daa
pop
sarb
fisubrs
sub
mov
leave
test
pop
jp
mov
inc
push
or
xchg
push
push
std
loopne
xor
lods
add
or
je
pop
jb
js
sbb
callw
or
test
movsl
jge
add
inc
pop
pusha
mov
push
cltd
add
jns
jg
pop
aam
sbb
mov
push
icebp
mov
sub
ret
test
cld
and
into
add
inc
push
nop
xorps
jecxz
mov
xor
paddsb
mov
add
cmp
shll
jmp
out
rorb
push
ret
add
push
ljmp
shll
and
dec
add
or
xlat
test
out
fdiv
lea
pop
std
clc
mov
add
mov
pop
xchg
lock
or
xor
popa
jae
mov
cwtl
jl
adc
xchg
dec
mov
cltd
adc
lock
call
out
fisttpl
mov
movsb
pop
scas
pop
or
xor
lahf
add
dec
nop
in
imul
les
mov
je
sbb
jnp
add
pop
xchg
negb
testl
int3
inc
bound
mov
jg
or
xor
repnz
leave
out
add
push
push
movsb
inc
sub
add
cmp
lock
mov
and
xchg
shr
pop
jns
add
cltd
jnp
imul
cmp
orb
subb
add
fbstp
bound
xchg
cwtl
or
sub
adc
or
and
xor
js
add
and
divl
aas
adc
cmpl
aaa
or
js
mov
xor
lock
sbb
cmp
dec
jbe
and
adc
adc
mov
pop
daa
sbb
enter
inc
stos
and
xor
out
test
loopne
daa
into
stos
cltd
add
mov
sbb
fbld
movsb
xchg
dec
pop
in
mov
popa
stos
push
iret
test
in
push
add
inc
mov
in
push
pop
in
xchg
pop
pop
mov
sub
stos
cmp
fcmove
cmpsl
jmp
ss
cmp
movsl
add
stc
jg
int3
cmp
rcrl
scas
rcrb
mov
and
jbe
js
and
mov
or
cs
push
xor
add
sbb
and
movsb
clc
and
in
arpl
inc
fnstcw
mov
pop
xchg
and
je
mov
andb
scas
mov
fcmovb
mov
and
push
push
jo
jbe
xor
cmp
sahf
xor
adc
stos
inc
out
cmp
jbe
cmp
cltd
push
or
loope,pt
add
and
ds
movsb
stc
shlb
sbb
pop
inc
bound
cwtl
add
add
gs
xor
sub
test
add
cltd
mov
arpl
lds
jecxz
dec
aas
add
loope
mov
mov
cmpsl
in
mov
jg
mov
daa
or
add
xchg
rclb
cmp
sbb
add
push
aad
addr16
adc
imul
std
pop
stc
pop
jo
mov
popa
lock
mov
push
push
test
iret
and
cmpsl
push
lock
aam
adc
adc
inc
adc
or
add
lods
dec
adc
add
mov
sbb
mov
xchg
shlb
adc
or
add
xlat
jmp
dec
push
pop
pop
pop
or
addl
test
adc
mov
int3
dec
or
push
mov
add
in
es
testb
lods
add
cmp
xor
mov
sarl
clc
pop
and
add
lret
xor
add
in
or
xchg
add
jno
std
testl
mov
push
add
out
xor
popf
popa
aad
inc
mov
add
push
and
xchg
addb
inc
add
cwtl
mov
add
int
sub
add
flds
inc
inc
mov
cmp
sbb
lcall
mov
push
xchg
dec
add
insl
jae
call
dec
cwtl
pop
out
and
add
inc
cmp
mov
je
sub
out
pop
and
mov
sbb
test
adc
insb
cmp
jle
push
or
sbbb
xor
in
stos
ja
add
add
cmp
push
in
pop
cmp
scas
mov
inc
pop
ret
ror
loopne
cli
add
mov
add
in
imul
sub
ret
mov
shll
lahf
fs
sbbl
jb
test
and
or
test
les
jae
sub
lret
cmp
inc
adc
je
fisubrl
push
out
and
imul
mov
outsb
scas
xor
adc
subb
cwtl
add
cmc
jg
sub
movb
fnstsw
out
lea
adcb
pop
clc
add
data16
cwtl
cmpsb
dec
shl
popa
add
push
dec
adc
stos
or
dec
add
or
test
neg
cmp
inc
pop
pop
call
subb
mov
xchg
jne
mov
mov
sbb
sub
adc
cwtl
addl
lea
icebp
xor
adc
push
sbb
lret
mov
jbe
add
jo
pop
xor
arpl
mov
add
cmpsb
fs
nop
pop
fcoms
sbb
les
xorb
cli
repnz
jne
inc
shll
cwtl
out
add
jecxz
and
out
daa
sub
clc
inc
inc
mov
add
dec
cmp
icebp
testl
addl
cmpsl
cmp
jmp
mov
pop
clc
int3
shrb
or
jle
push
adc
inc
adc
mov
lret
xchg
sbb
enter
add
xor
or
pop
mov
pop
stos
paddusb
pop
mov
add
leave
hlt
or
pop
popa
add
stc
movsl
ja
dec
lahf
add
imul
cmp
sbb
fcmovnbe
cs
mov
xor
inc
test
jne
aas
rclb
mov
loopne
neg
add
mov
lcall
add
and
adc
cli
add
mov
and
fs
insb
pusha
add
nop
dec
into
add
cmp
fstl
test
je
sti
xchg
setp
andl
pop
sbb
int
dec
pop
test
insb
mov
cltd
add
mov
jg
sub
call
cmp
xchg
cmp
cltd
dec
xchg
xlat
sub
testb
push
lds
fs
pop
mov
sub
sahf
loopne
sbb
mov
add
push
push
popa
clc
aaa
jbe
cld
dec
pop
or
addr16
sarb
movl
rclb
and
adc
jge
sub
outsl
xor
mov
int3
ret
adc
stc
cmpb
add
lahf
shll
mov
stos
and
lds
mov
arpl
xlat
mov
lods
cs
sbb
packuswb
add
add
dec
cmpsl
bnd
loope
dec
hlt
and
faddl
ss
push
pop
mov
push
int
iret
push
loop
add
inc
in
loope,pn
les
and
xchg
leave
push
mov
push
stos
mov
xor
or
adc
inc
test
enter
inc
add
js
add
push
cmp
pop
push
shlb
pop
and
add
sbb
ds
push
pop
inc
pop
dec
stc
mov
mov
rcl
test
imul
outsb
xor
lock
dec
arpl
mov
test
inc
mov
jecxz
push
dec
sahf
pop
adc
pusha
iret
mov
inc
gs
fsubr
out
adc
adc
inc
rcrb
test
mov
ffreep
loope
mov
arpl
ret
sarl
cli
fadds
gs
sub
cmpsb
jae
sbb
mov
dec
test
xchg
test
pusha
in
cmp
jecxz
test
mov
cltd
sahf
pop
and
test
sbb
loopne
xchg
push
and
sub
cmpl
cld
out
jno
dec
add
push
test
add
push
mov
dec
add
add
and
pusha
mov
add
add
mov
popa
mov
push
data16
fstpl
clc
cmp
xor
inc
add
data16
push
popf
add
mov
jl
or
dec
lea
adc
add
sbb
aam
nop
sbb
aaa
movsb
xor
dec
div
insl
popa
out
stc
imul
jno
stos
add
pop
jmp
pusha
das
mov
mov
inc
es
test
xor
and
ret
mov
push
fcomps
int3
fs
aad
xchg
xchg
jp
add
js
outsl
jecxz
int3
test
mov
adc
push
push
sbb
add
sub
jge
mov
xchg
push
and
jo
mov
mov
cmp
add
ja
addr16
in
add
shll
xchg
and
test
pop
adc
jecxz,pt
mov
pop
mov
inc
pushf
xor
scas
add
clc
test
or
data16
mov
adc
ret
add
adc
jmp
or
ret
mov
rolb
push
js
jno
dec
inc
loopne
dec
fisubs
out
add
out
sub
inc
add
xor
mov
add
push
scas
inc
add
leave
in
mov
mov
inc
cmp
jmp
xor
cmp
and
in
jecxz
in
dec
mov
add
sarb
int
sbb
test
xor
in
pop
xor
jle
mov
add
inc
bound
xor
and
adc
mov
faddl
shrb
repz
add
int
inc
pop
add
and
jb
mov
push
pop
mov
in
gs
roll
scas
pop
adc
movsb
outsl
pop
data16
shlb
pusha
or
cmp
jge
inc
into
pusha
mov
add
lcall
mov
dec
hlt
dec
lock
xchg
jbe
jae
jne
mov
and
ljmp
push
dec
addb
mov
cmp
outsb
lahf
shl
daa
add
adc
fdiv
repnz
cmp
lods
and
shlb
add
stos
or
add
or
push
in
or
hlt
xchg
push
into
xor
cmp
rorb
sbb
add
iret
dec
ret
lods
and
mov
shlb
mov
xor
dec
xlat
push
add
mov
fs
out
add
cli
shlb
add
sbb
mov
and
jo
adc
and
add
sub
enter
test
mov
mov
xchg
push
stos
cmp
cmp
test
jns
lds
repnz
hlt
mov
movsb
mov
pop
push
out
add
push
stos
sub
inc
fcompp
cmp
dec
push
jg
inc
xor
push
addr16
add
and
call
imull
push
imul
fwait
add
inc
int
xchg
dec
pop
push
sub
jmp
add
mov
repz
mov
cltd
out
inc
stos
scas
jecxz
mov
xchg
loop
adc
or
and
cwtl
add
push
movsl
adc
mov
mov
test
jp
rorl
xor
pop
pop
inc
push
add
cmp
push
push
repnz
outsl
mov
fwait
unpckhps
sub
xchg
or
mov
add
cmp
nop
fistps
add
orb
fildl
sbb
jb
popf
lea
clc
pusha
cld
out
mov
push
cmp
les
sti
out
dec
rcrb
xchg
adc
mov
cmp
outsb
in
loope
push
push
lea
ret
add
and
push
fnstcw
movsb
add
les
add
lock
add
mov
adc
adc
jbe
hlt
add
mov
adc
fistpl
push
cmp
pop
lcall
clc
xchg
stc
or
or
xchg
sbb
add
jo
pushf
aam
mov
fadd
mov
nop
add
sbb
mov
js
scas
add
mov
popf
daa
sbb
cli
es
lds
inc
mov
shlb
inc
add
leave
jle
pop
mov
insl
inc
mov
adc
int
sbb
pop
xor
mov
mov
lret
jae
dec
out
stos
mov
mov
add
sbb
add
icebp
es
add
mov
jecxz
rol
ja
sub
addb
cmp
add
push
push
add
adcl
out
mov
loop
and
jbe
xor
test
cli
les
mov
lds
ja
fistl
inc
clc
nop
insl
jge
add
pop
mov
int
inc
mov
jae
push
mov
dec
mov
dec
call
pop
add
shll
loopne
stos
add
inc
push
pop
add
dec
daa
fisttps
fucomp
jns
push
dec
les
mov
das
mov
or
lcall
test
flds
ja
xlat
sbb
sub
add
pop
loope
rcrb
add
aas
mov
add
push
xchg
aad
push
jne
pop
add
add
xchg
adc
call
and
hlt
xchg
pop
mov
sub
xor
inc
xor
fwait
add
xchg
outsb
and
xchg
add
lret
mov
lods
push
cltd
call
pop
rclb
mov
in
add
pusha
mov
add
je
jl
cs
cmp
sub
add
mov
cld
pop
test
mov
loopne
cmc
inc
sub
xchg
scas
push
ret
repz
int
add
push
pop
lods
or
push
imul
cmp
lods
sti
mov
aam
push
sbb
sbb
movsb
fs
push
ficoml
mov
nop
xchg
add
shl
add
dec
pusha
push
adcb
mov
ds
sar
jmp
or
add
dec
push
or
subl
xor
adc
xor
add
mov
push
popf
push
call
iret
inc
adc
and
push
int
push
jmp
mov
add
dec
jb
dec
push
lahf
repnz
insl
test
in
ds
sbb
orl
cmp
call
jae
add
adc
push
push
in
jnp
outsb
mov
xlat
call
sbb
adc
jns
adc
shlb
jle
lret
pop
mov
dec
jl
adc
ror
and
call
jnp
inc
sbb
outsl
nop
popa
in
dec
ja
jg
ror
sbb
mov
and
clc
lds
xchg
daa
adc
or
subb
add
int3
scas
out
shl
mov
mov
mov
xor
shlb
jmp
and
add
nop
jnp
fld
imul
js
clc
jb
cld
push
lret
inc
cli
ds
aas
dec
stc
jge
scas
xchg
andb
fmuls
add
out
cmp
rcrl
add
pop
call
ds
je
rcll
mov
pushf
add
pop
lock
lret
and
mov
fnstsw
add
imul
jl
cwtl
mov
add
popl
pop
mov
jne
adc
mul
adc
popa
pop
fs
or
dec
add
inc
pop
sub
xchg
les
mov
rolb
inc
stc
xchg
xchg
rcrb
std
out
lcall
sub
bound
adc
hlt
test
mov
test
or
frstor
inc
jne
add
xchg
test
adc
add
lds
js
popf
loopne
mov
sbb
stos
jle
movl
movsb
and
in
roll
dec
test
sub
cmp
jo
sbb
fldt
adc
jne
mov
cmp
shlb
sbb
cld
xchg
mov
fbld
add
mov
jbe
addl
cmp
adc
inc
add
cltd
dec
jae
mov
xorl
or
add
inc
cs
cld
adc
xor
cmpb
inc
jns
loope
cltd
inc
push
rorb
and
sub
lcall
add
cmp
add
fdivrl
popa
sahf
out
mov
sbb
mov
xchg
frstor
add
sub
pop
out
cmp
sbb
dec
jo
test
add
stos
jle
sub
cwtl
mov
mov
pop
repz
loop
mov
mov
cmp
push
adc
push
out
and
mov
push
or
sahf
inc
filds
xchg
cmpsl
push
mov
push
enter
stos
pusha
jg
dec
adc
mov
out
test
int3
mov
bound
loop
add
add
insl
sti
mov
aad
add
add
jae
mov
mov
sub
dec
add
jnp
in
inc
and
lret
out
push
aaa
stc
mov
pop
adc
or
add
xchg
add
lret
jbe
pop
repz
mov
mov
add
add
das
mov
mov
imul
scas
int3
jle
inc
add
push
xor
inc
cwtl
add
sbb
in
and
shrl
cli
pop
xor
bnd
add
fidivl
jmp
jo
push
pop
mov
gs
dec
call
push
sbb
in
test
pop
aaa
addl
clc
subb
inc
pop
add
or
jne
add
jns
add
sti
push
fmuls
jnp
xor
js
mov
adc
and
mov
scas
mov
and
push
sahf
outsl
push
orb
push
push
push
mov
jae
mov
or
mulb
inc
ret
js
add
inc
sbb
test
iret
popf
pusha
mov
dec
push
add
xor
mov
enter
cmp
insb
push
int3
pop
or
aad
pop
movntps
mov
add
es
push
ljmp
add
mov
mov
pop
int
push
loopne
xchg
adc
dec
dec
repnz
in
pushf
inc
sbb
and
mov
add
inc
mov
push
pop
mov
xor
adc
push
shrl
push
jo
add
mov
addr16
or
add
xchg
add
and
popa
mov
stos
test
mov
lock
pushf
and
movsl
add
fdivrp
stos
fstpl
outsl
jns
pop
push
shlb
mov
lock
add
or
cmp
mov
mov
jbe
push
or
test
push
out
addb
mov
scas
cs
mov
arpl
pusha
mov
imul
aaa
xor
cs
scas
repz
test
or
cmpsl
push
jp
pop
call
inc
dec
roll
adc
add
lock
and
add
sti
in
scas
mov
xor
sub
ja
shll
jae
into
es
xchg
jnp
jecxz
incb
add
dec
add
dec
add
push
jg
in
rcr
sub
add
pop
fs
mov
jae
mov
je
negb
iret
sbb
and
jbe
sub
imul
add
adc
pop
xor
outsb
out
mov
rcrb
imull
nop
in
xchg
sub
cmc
sub
or
xor
jmp
aas
add
jg
cmp
jecxz
adc
adc
jle
pusha
xor
add
repnz
cld
leave
call
cmp
idivl
aad
shlb
xor
sub
outsl
flds
leave
jns
bound
and
sbb
dec
pop
dec
dec
adc
add
adc
and
inc
bound
test
clc
add
and
xchg
in
dec
pusha
pop
popl
mov
lea
push
mov
xchg
mov
shrb
xlat
sbb
and
mov
cmp
addl
inc
inc
push
fsub
scas
xchg
or
loope
sbb
add
cli
add
pushf
and
js
stos
bound
outsb
sti
orb
data16
inc
jl
lds
mov
adc
xchg
rorb
sub
mov
push
add
jbe
xchg
cmp
cli
xchg
add
xor
pushf
dec
mov
imul
rolb
jecxz
pop
push
sub
xchg
jp
cmpb
mov
add
and
sbb
add
jnp
push
or
add
jmp
cmp
xchg
mov
insb
jge
stc
imul
lret
jno
add
popf
push
jmp
adc
frstor
xor
pop
mov
insb
sub
nop
loope
loop
add
data16
mov
add
inc
add
or
scas
ja
add
push
pop
pop
test
jle
mov
scas
sbb
add
lock
lret
pop
inc
add
xor
ss
add
repnz
in
lock
stc
dec
pop
cld
sbb
loopne
xor
pop
aad
mov
movl
jl
xor
add
rcrl
roll
jmp
mov
movsb
or
insb
or
sbb
ja
jae
xor
cwtl
add
mov
aam
xchg
out
add
clc
faddl
sarl
or
mov
push
loopne
push
mov
mov
sub
pop
rcrl
imul
int3
inc
in
inc
stos
xchg
jp
in
out
inc
sbb
push
pop
add
cwtl
jmp
popf
push
add
js
inc
rclb
and
sub
mov
clc
pop
inc
add
mov
mov
fwait
not
popa
das
daa
sbb
push
add
ret
or
xor
inc
dec
icebp
leave
loopne
sbb
add
jb
xlat
cli
sub
cmp
adcb
jo
adc
jno
add
gs
jae
mov
iret
jp
mov
aas
add
adc
jno
test
jle
add
sbbl
movsl
cwtl
incl
pop
in
adc
add
cld
sub
add
pop
bound
sub
je
jo
cld
mov
add
and
mov
inc
cmp
jle
push
dec
sbb
mov
jb
and
jmp
mov
faddl
dec
xlat
mov
add
push
out
inc
and
cmpb
test
idivb
add
cmp
xor
cltd
cwtl
clc
mov
mov
lock
xchg
rorl
pop
stc
pusha
pop
adc
adcl
dec
fstpl
scas
mov
adc
mov
stc
or
xorl
aam
mov
rolb
add
addb
popa
loop
insl
loope
shl
inc
add
addb
push
movsb
lahf
pop
daa
add
dec
inc
pushf
add
insb
xchg
repz
lods
add
fxch
test
bound
hlt
sti
or
mov
jo
lods
add
push
mov
push
enter
add
movsb
aaa
mov
and
cmp
jne
push
inc
xchg
push
inc
je
pop
jmp
dec
and
cmp
lds
pushl
mov
dec
jbe
ret
push
fdivr
jo
add
ret
lahf
mov
lods
les
adc
mov
mov
pop
std
loope
jno
xor
roll
insl
pushf
or
lods
cld
mov
sbb
mov
jnp
add
adc
mov
xchg
cmc
lea
andl
jl
xor
imul
sarl
push
push
push
loopne
iret
push
imul
cmc
lret
cs
pop
call
and
shll
test
adc
stc
fidivrl
pusha
adc
popf
dec
and
ret
fsubrs
cmp
dec
fildl
add
fs
sbb
stos
cmp
pop
add
add
pop
outsb
cmp
add
out
out
repnz
loope
or
push
push
xchg
or
mov
lds
lret
jns
mov
mov
add
or
es
cmp
decb
add
popa
in
shl
sbb
add
sbb
ficompl
xchg
mov
mov
insb
ljmp
add
xchg
jmp
js
hlt
mov
push
pop
fnsave
sbbb
push
shrl
add
in
mov
mov
dec
or
xorl
sbb
ljmp
fildl
mov
xor
imul
and
hlt
mov
sbb
mov
insl
outsb
push
in
or
rcll
popa
ljmp
mov
xor
adc
pop
dec
in
push
push
mov
test
xor
mov
and
nop
in
add
inc
lcall
mov
push
popf
ja
add
lods
and
or
adc
mov
andl
nop
sub
mov
xchg
outsl
mov
mov
mov
cmp
inc
or
lea
dec
fcmove
push
insl
mov
and
add
jmp
xchg
add
movsb
sbb
push
aas
xor
adc
aam
jb
pop
rolb
imul
pop
mov
push
loopne
pop
sub
push
dec
lods
mov
push
mov
cld
dec
pop
add
add
sbb
ret
mov
adc
inc
fdivl
adc
sbb
ret
ret
cwtl
sub
icebp
add
mov
pop
mov
sbb
push
nop
arpl
mov
add
leave
adc
cvtps2pd
nop
jp
inc
dec
sub
cmp
in
fs
inc
enter
add
push
jnp
push
clc
dec
inc
outsl
mov
adc
push
pusha
sbb
fidivrl
add
xchg
je
pop
mov
inc
sub
jo
cwtl
sbb
scas
or
ret
jo
addr16
mov
xor
daa
or
sub
lret
mov
sbb
mov
dec
fs
pusha
insb
loope
or
jo
mov
movsb
ds
in
nop
into
or
cmp
lret
fmull
sub
mov
in
out
loop
pop
cltd
push
je
daa
repnz
notb
mov
xor
scas
or
add
cs
jg
add
inc
stos
add
sub
pop
lods
aas
adc
and
and
lahf
push
or
cmpsb
icebp
add
in
mov
pop
lock
push
test
mov
test
add
dec
dec
xor
and
mov
mov
jecxz
cmovo
and
pop
dec
jne
and
mov
or
sub
or
sbb
and
mov
add
cli
mov
out
jo
dec
add
lock
jmp
mov
sub
sub
and
jns
and
push
call
arpl
mov
push
insl
sbb
mov
imul
xchg
jne
or
and
pusha
push
scas
out
jp
add
sbb
adc
or
xchg
addr16
cmp
shll
push
add
adc
decl
int
fisubl
sar
bound
xor
sbbb
push
test
movsb
push
adc
insl
repz
inc
sbb
push
cmp
cwtl
cwtl
test
pushf
and
out
pop
rol
lcall
into
adc
test
lods
loopne
das
push
cs
ret
sub
sbb
mov
sub
add
punpckhdq
popa
sub
xor
cmp
push
xor
adc
adc
test
les
gs
test
out
shll
imul
sub
jle
cmp
xchg
add
sub
call
jo
movsl
repnz
cmp
jp
pusha
push
sbb
or
xlat
add
in
and
inc
sti
mov
roll
fisubl
pop
push
jg
pusha
push
sahf
adc
subb
popf
inc
inc
cmp
into
test
push
cmp
or
mov
lock
adc
pusha
bound
popa
ss
es
int3
jecxz
les
push
rcrb
add
fsubrp
or
iret
mov
jp
adc
add
inc
jg
scas
add
lock
push
cmp
iret
sbb
jl
ljmp
in
leave
pop
stc
and
nop
xchg
add
push
mov
aad
movb
repz
mov
mov
mov
adc
sbb
or
test
iret
nop
xor
adc
int3
shrb
pop
lcall
xchg
xchg
repnz
jge
nop
or
add
jmp
xchg
push
test
sahf
hlt
popa
cmp
mov
test
sbb
add
xchg
scas
add
push
shlb
pusha
and
inc
push
roll
mov
je
inc
dec
add
insb
pop
call
dec
mov
scas
incl
lcall
ja
add
lret
mov
adc
xchg
xor
in
push
int
and
and
cld
std
mov
cs
and
add
mov
cld
bound
aas
fldl
cmp
dec
lret
add
rolb
daa
jl
xchg
sbbb
mov
dec
mov
jo
or
add
inc
fdivrl
push
repz
mov
mov
sbb
and
adc
div
push
pusha
pop
jno
sbb
mov
fwait
sarl
pmaxsw
cmp
add
scas
and
scas
xlat
mov
mov
mov
rolb
popf
sarl
push
das
add
jo
mov
icebp
popa
sbb
jmp
imul
and
clc
jnp
das
add
clc
mov
lock
push
pop
jp
mov
stos
fildl
fwait
mov
xchg
scas
sub
pop
pop
xor
or
dec
cmpsb
mov
add
test
pop
mov
pop
stos
clc
jno
xchg
push
mov
es
call
arpl
push
jmp
test
in
jb
add
arpl
dec
or
mov
xor
add
push
insl
rorl
mov
popl
stc
mov
stos
or
popf
cltd
adc
ljmp
pop
sub
cmp
arpl
dec
push
rcrb
mov
jns
and
lcall
adc
psllw
pusha
jns
pop
pop
mov
mov
in
addb
mov
push
insb
and
gs
jl
orb
outsl
icebp
rolb
ja
add
mov
movsb
and
inc
lds
and
dec
int3
cltd
lea
ss
loop
ror
mov
lret
ret
mov
ds
dec
or
sbb
and
fwait
push
pop
sub
adcl
jo
xor
or
or
cmp
shl
inc
cli
jbe
loop
ljmp
dec
or
pop
bound
add
fwait
cmp
les
pop
call
lds
fldcw
repz
add
inc
fildll
inc
clc
push
push
enter
ret
sbb
into
inc
movsb
test
inc
test
push
rol
sahf
jp
out
push
cs
lods
inc
push
add
stc
xchg
xor
pop
popf
and
vpmacssdd
push
and
adc
rcrb
mov
mov
sub
loopne
add
andb
xor
xchg
inc
pushf
jo
sub
sahf
sub
xchg
repz
jo
push
mov
call
dec
das
jg
sub
fstpl
adc
test
mov
and
add
mov
xchg
cld
xor
xor
pop
jno
mov
cmp
pop
movb
mov
dec
add
adc
test
sbb
pop
mov
add
or
inc
inc
pusha
fwait
push
mov
test
fisubl
test
dec
xchg
rolb
add
fstpl
rclb
mov
pushf
inc
cmp
fs
dec
inc
xorb
stc
nop
lret
mov
or
or
inc
mov
pop
enter
aas
iret
add
mov
sub
sbb
jmp
inc
push
sahf
jae
jno
or
fidivrs
pop
xchg
inc
mov
shrl
pop
pusha
je
and
ja
push
fsubr
add
mov
push
jle
add
pop
enter
push
enter
out
orb
aam
xor
icebp
jmp
push
mov
xchg
lods
xchg
stos
push
test
dec
mov
loopne
sub
add
mov
movsb
push
xor
out
out
xchg
inc
rolb
xor
inc
pop
mov
adc
mov
or
enter
or
cmp
mov
adc
push
loop
outsl
fldl
push
xor
xchg
out
pop
addb
and
sbb
lds
adc
dec
dec
add
repnz
loope
repz
add
pop
jo
xor
lock
jne
xchg
cld
mov
adc
pop
pusha
or
adc
loop
iret
cmp
xchg
out
addr16
jns
xor
rorb
push
nop
lock
cmp
push
mov
mov
adc
xor
je
fs
inc
sub
jno
pushf
mov
pop
mov
shlb
and
fisttpl
add
mov
pop
pop
fcompl
jo
push
lock
fsubs
push
pop
dec
xorb
push
xor
or
nop
fsubr
adc
mov
loopne
mov
cmp
pop
mov
popa
push
fsubrl
mov
adc
jp
loop
and
adc
gs
and
sahf
adc
cmpsl
dec
popa
cmp
dec
rcr
add
clc
clc
jno
cmpl
sub
push
or
adc
in
or
sbb
and
push
je
cli
test
add
adc
or
jb
and
mov
add
cmp
les
ds
lea
testb
sbb
inc
stc
icebp
cmp
add
adc
xchg
add
push
mov
sahf
cmp
pushf
pusha
fs
stc
push
pop
in
cli
inc
sbb
push
sti
mov
imul
flds
sub
lea
rcrb
ds
imul
sbb
dec
dec
add
test
arpl
imul
inc
popa
scas
pop
test
cmp
int3
and
and
xchg
loop
cltd
adc
push
mov
popw
lods
mov
xor
es
inc
in
call
xorb
ja
inc
loop
sub
adc
arpl
mov
cmp
mov
pop
or
xor
or
push
mov
adc
xchg
sahf
mov
rclb
add
insl
scas
xchg
roll
movsl
or
push
pushf
add
pop
xchg
pop
sbb
cmp
dec
pop
cmp
dec
das
aaa
cwtl
in
jmp
in
add
xchg
dec
outsb
inc
pop
sub
fld
pushf
jae
jno
dec
xor
jo
pop
or
ljmp
sarb
test
outsl
inc
leave
adc
push
scas
dec
push
ret
or
imul
lahf
cs
cmp
cld
in
push
jnp
dec
outsb
xor
imul
ds
arpl
pop
add
lods
cmpb
cwtl
incl
or
or
andb
jo
and
aaa
jns
sbb
das
mov
inc
adc
or
fisttpl
sbb
pusha
cmp
sub
xchg
inc
loope
ljmp
jne
xor
sbb
mov
loop
subl
xor
test
cmp
jbe
sbb
add
sub
sbb
add
aam
in
or
add
stos
sub
lods
or
inc
pushf
and
add
push
adc
sbb
push
and
add
or
push
aaa
fucom
inc
lods
test
adc
lock
mov
pop
xchg
dec
push
mov
subl
and
cs
stc
and
xchg
bnd
cmp
movsb
outsl
pop
cld
inc
nop
pusha
arpl
pop
lcall
and
test
in
jno
mov
add
out
jg
xchg
adc
xor
test
push
mov
bound
xor
cmp
loope
addb
cmp
sub
fstps
or
aas
mov
mov
mov
mov
movsb
cmc
add
clc
idivb
inc
lods
or
jo
push
mov
addr16
in
mov
jo
inc
int3
stos
pop
xchg
das
pop
pop
incb
ja
xor
sbb
fiaddl
rolb
pop
jb
add
sbb
std
xor
dec
sbb
push
adc
test
add
scas
mov
or
and
mov
lock
mov
dec
and
dec
push
inc
or
shlb
faddl
adc
test
mov
dec
arpl
add
add
or
pusha
add
mov
stos
dec
or
adc
xchg
int3
add
subb
loop
lods
hlt
addr16
push
pushf
inc
pop
out
mov
test
shrb
add
scas
xchg
shlb
mov
inc
or
rcll
push
cmp
shll
inc
push
adc
das
pop
dec
ret
or
movsb
cwtl
push
dec
loop
jo
divl
enter
or
mov
pop
cwtl
and
and
ljmp
mov
dec
pop
sub
push
inc
cmp
sbbb
inc
mov
enter
sti
mov
roll
scas
ss
and
inc
fisubrs
popf
call
sbb
pop
sub
jmp
dec
mov
inc
push
lret
and
xchg
es
fs
mov
cld
pop
addl
ljmp
cmp
mov
pop
push
test
add
enter
pop
add
js
int
test
pop
add
adcl
or
lods
add
inc
ret
pusha
rcrb
test
inc
orb
mov
push
stos
lods
rolb
or
stc
xor
or
add
xchg
cld
inc
lret
mov
adc
add
mov
sub
add
cmp
int3
sbb
adc
cli
icebp
and
out
push
pusha
sub
add
mov
aad
das
add
inc
and
jo
mov
mov
inc
adc
addb
sub
ret
js
addr16
mov
mov
sub
int3
je
fldt
loopne
dec
out
into
ds
sub
push
shll
inc
cltd
add
xor
nop
dec
add
imul
add
bound
aaa
jmp
lods
bound
lods
cmpsl
add
jae
fbstp
dec
push
js
mov
adc
cmp
sbb
adc
arpl
add
lock
jmp
insb
and
dec
imul
les
pop
add
mov
cmp
ss
lock
push
push
jo
data16
out
out
enter
imulb
cld
pusha
mov
hlt
scas
pusha
sbb
sbb
mov
or
pop
jae
mov
cmp
add
bound
fsubr
dec
xor
addr16
ss
loopne
sti
repz
mov
inc
sbb
sbb
ss
sub
sub
sbb
lock
mov
push
psubw
add
and
xor
or
pop
and
pop
cmp
lods
nop
xor
push
jle
and
mov
mov
inc
pop
lods
dec
je
sub
leave
out
call
fwait
and
pop
cmc
scas
fmuls
or
jo
adc
lock
push
inc
iret
mov
es
dec
add
pusha
out
sub
mov
int
adcl
jge
movsb
movsb
inc
mov
or
push
or
cmpsb
sbb
jbe
push
mov
bound
loopne
mov
or
sbb
mov
push
loopne
test
or
or
jle
xor
outsl
mov
add
out
pop
jmp
call
mov
mov
ds
inc
lds
lcall
pandn
fimull
dec
call
mov
aad
xor
lcall
add
sub
scas
aaa
add
push
cmp
jne
in
cmp
xor
and
addl
rcl
test
adc
test
dec
mov
and
push
adc
ficoms
cmpsl
shll
jmp
xor
test
jo
push
fwait
les
test
sub
daa
jge
add
call
jg
stos
and
cli
rcrl
fbstp
cwtl
adc
sub
sbb
inc
test
scas
into
lock
nop
lods
test
das
setae
cwtl
mov
sub
cld
xchg
lods
pusha
shll
test
mov
stos
shlb
push
sub
mov
mov
aaa
lods
dec
jae
mov
cwtl
popf
movsb
out
add
stos
sub
and
je
shll
dec
dec
dec
shl
cmp
xchg
or
in
and
into
cmp
hlt
mov
jnp
subl
mov
enter
sub
inc
inc
add
mov
xorb
mov
or
adc
scas
daa
mov
addl
leave
inc
add
push
sub
rorl
hlt
inc
into
loop
es
es
sbbl
inc
push
shlb
cmp
out
mov
xchg
or
pop
sahf
cltd
push
or
add
in
hlt
scas
enter
pop
adcl
dec
sub
movsb
test
rcll
push
pop
popa
adcl
mov
pop
ja
out
arpl
xchg
or
hlt
xchg
xor
push
inc
jmp
mov
sub
xorb
mov
lcall
adc
pop
mov
inc
movsb
xchg
add
jnp
xchg
xchg
inc
leave
push
test
or
ja
test
add
pop
jge
inc
jmp
xor
adc
leave
cmpsb
lret
dec
adc
push
mov
ret
xchg
add
xchg
push
imul
movsb
shlb
ja,pt
jmp
int3
xchg
cmp
orb
cmp
or
loop
or
and
leave
popf
cmp
stc
cmp
outsb
xor
loop
lret
mov
sbb
sbb
test
push
hlt
dec
mov
nop
ret
mov
arpl
in
inc
xor
inc
jno
lock
gs
xor
adc
sbb
jno
pop
jmp
out
cmp
in
or
out
add
cwtl
push
mov
outsb
add
filds
xor
mov
jle
adc
icebp
rorb
into
lcall
add
mov
adc
adc
xor
mov
cmp
repnz
add
jle
fdivrl
mov
sub
mov
adc
outsb
mov
sbb
pusha
inc
cmp
pop
or
xor
xchg
jge
add
incb
xchg
add
pop
xchg
in
shl
push
imul
mov
push
rol
xor
test
push
xchg
sbb
add
loop
icebp
or
add
push
fisttpl
ret
mov
js
push
jg
adc
cmpsl
je
push
add
cs
sti
adc
stc
xchg
add
inc
add
sbb
enter
pop
add
js
xchg
add
mov
push
add
loop
loopne
sbb
aad
add
inc
sub
shrl
jne
dec
jg
mov
add
xchg
andb
xor
sbb
inc
push
sahf
aam
fmul
inc
out
jns
xor
add
in
mov
pop
sbb
jne
shrb
lahf
push
cmp
dec
addr16
adcb
xchg
shl
lods
pop
push
pop
stos
rcrb
int3
ljmp
test
push
addr16
mov
push
inc
inc
add
mov
das
push
mov
sbb
shrb
dec
dec
mov
test
sbb
or
add
inc
mov
add
mov
test
fs
jmp
clc
mov
cmpsb
push
add
adc
xor
add
frstor
push
test
and
cwtl
in
inc
test
inc
repz
test
adc
mov
sbb
icebp
add
add
lds
rcrb
adc
pop
add
fstps
or
adc
int
mov
xchg
and
jle
inc
xor
or
push
dec
adc
sti
out
adc
dec
pop
or
add
cmpb
adc
out
or
mov
add
and
icebp
push
addr16
sub
hlt
lcall
add
push
sub
fldl
dec
test
icebp
sti
jecxz
xor
loop
and
out
imul
or
fbld
fldl
and
movzwl
push
popa
mull
inc
add
nop
lock
repnz
mov
and
or
movl
fiaddl
dec
add
int3
cmp
in
jo
and
fidivrs
and
xchg
mov
call
dec
xor
ficoml
fs
out
add
outsl
xchg
icebp
ljmp
cmpsl
dec
pop
and
sbb
pop
adc
or
adc
mov
inc
test
cmp
sub
dec
lahf
arpl
lret
add
in
adc
cmc
imul
les
pop
mov
xchg
sub
add
nop
sbb
imul
inc
dec
push
dec
cmpsl
add
push
cltd
movsl
movsb
ret
mov
sbb
cmpsb
xchg
test
aas
mov
fs
pusha
inc
xchg
add
call
mov
cmc
add
cmp
inc
sarl
xor
rorb
fdivr
jns
loope
and
dec
mov
and
pop
cmpb
out
xchg
inc
mov
fdivrs
into
or
sbb
jbe
sub
cmc
lock
in
repnz
imul
gs
dec
pushf
popa
mov
mov
mov
clc
xor
pop
adc
adc
pusha
mov
pop
adc
xchg
or
icebp
sti
data16
dec
aad
rcll
int3
adcb
cmp
add
sahf
sub
cwtl
jle
lahf
out
jo
sti
pop
cmp
dec
inc
hlt
add
and
dec
cmp
xor
xor
jecxz
call
out
sarb
or
mov
cltd
push
add
cmp
pop
mov
mov
fwait
popf
push
arpl
call
ror
push
mov
xchg
icebp
jmp
pusha
ret
or
jb
cmp
cmpsb
dec
nop
js
lds
push
adc
sbbl
in
loope
add
pop
jb
popa
xchg
xor
dec
cmp
pop
js
xor
jnp
daa
mov
add
jns
cs
out
mov
and
mulb
fildll
cs
pop
jb
push
sbb
in
shr
lahf
sbb
mov
inc
lods
popa
in
call
sub
faddl
add
popa
dec
movsb
fdiv
adc
inc
popf
cmp
cmp
std
adc
add
cwtl
jl
fs
dec
decb
or
les
andl
rolb
sahf
in
bound
push
add
insl
mov
add
icebp
pushf
pusha
fistl
loope
andb
shr
add
xchg
imul
pop
add
jmp
cmp
sti
cld
sub
inc
add
loope
cs
loopne
xchg
adc
call
fmuls
mov
mov
roll
gs
dec
out
jo
pop
inc
test
xor
shll
lds
fdivrl
jae
adc
add
pop
je
mov
inc
shr
or
aad
mov
in
add
push
and
fldt
add
sahf
sub
idivl
add
icebp
js
or
imul
imul
dec
hlt
add
mov
sbb
std
pop
or
fcompl
adc
lret
lahf
adc
leave
and
xor
testl
xchg
shrb
cmpsl
inc
or
jo
fldl
in
addr16
dec
add
cmp
jmp
scas
in
add
pusha
hlt
stos
in
fcoml
push
and
xor
aam
pop
call
pop
inc
filds
sbbl
mov
add
sub
adc
inc
cld
mov
add
push
pop
xchg
sbb
jns
into
andb
or
pop
xor
repnz
adc
mov
jne
add
jp
push
push
add
fs
cltd
sub
inc
and
int3
std
adc
adc
fsubs
inc
cmp
push
pop
lea
xor
xlat
es
cs
shrl
add
xchg
mov
xchg
inc
or
inc
push
and
les
cli
fstl
fistl
and
xor
or
mov
add
inc
or
xchg
mov
adc
insb
addr16
adc
cmc
adc
dec
jmp
jecxz
mov
adc
inc
sbb
add
xor
outsl
pop
mov
add
repnz
adc
mov
pop
or
lock
lock
scas
push
cwtl
and
fldcw
pop
push
stc
push
fldl
cmpsl
xchg
call
fwait
pop
push
mov
das
cwtl
sub
cmpb
adc
add
shrb
add
pop
sub
movsl
xchg
xchg
push
rcrl
add
stos
push
xchg
jmp
cmp
add
mov
aad
icebp
jne
adc
movsb
adcl
sub
push
add
jbe
loope
xchg
ja
sbb
or
xchg
inc
add
or
fwait
and
add
mov
subl
fmull
cmp
dec
add
inc
pop
into
sub
cld
enter
jae
add
pop
push
sbb
out
das
loope
inc
dec
xor
jo
mov
test
inc
mov
mov
dec
and
sub
add
enter
subl
mov
adc
pop
test
ljmp
and
and
imul
pop
add
add
add
add
cs
hlt
add
and
in
sbb
mov
xchg
add
or
popa
pop
int
outsl
jb
cmp
jle
inc
int3
incb
mov
addr16
jo
push
lret
mov
ret
out
push
pop
xchg
and
gs
jo
or
mov
in
mov
test
pop
inc
leave
rcr
out
lret
add
push
cmpsb
xchg
mov
jge
cmpsl
je
adc
mov
dec
add
push
ljmp
test
pusha
outsl
lock
push
mov
cmpsb
add
or
inc
sbb
movsb
xlat
insb
jb
sbbl
mov
js
cmpsb
popf
jmp
rol
add
movsb
stc
add
sbb
cmc
pop
add
xor
call
xor
in
xor
sub
add
cmc
mov
add
enter
xchg
adc
fmuls
add
cmp
test
or
and
cmp
mov
mov
inc
push
int3
add
cmpsb
jp
pusha
in
mov
in
or
push
mov
mov
mov
test
pop
mov
fcomi
movsb
add
ret
mov
jno
lods
inc
adcb
or
push
xchg
inc
cwtl
push
call
inc
add
in
je
mov
lock
jl
ret
xlat
aam
mov
xor
add
movsl
jp
xchg
iret
xchg
out
cld
shll
push
lea
out
cmp
mov
ret
and
stos
jb
mov
jl
inc
add
leave
icebp
lds
test
rorl
or
push
lds
lahf
fcompl
mov
inc
ljmp
pushf
inc
mov
and
add
xchg
pop
push
sbb
xchg
add
pop
sbb
andl
js
and
xor
adc
call
nop
call
cmpb
push
or
dec
popa
cmp
je
gs
pop
rclb
mov
orb
hlt
jge
test
add
pop
mov
add
test
sbb
mov
dec
int3
inc
pop
xchg
jmp
loopne
mov
faddl
dec
push
add
scas
mov
sub
fldenv
or
push
loope
and
mov
add
aas
sahf
or
add
push
hlt
push
xor
cltd
push
adc
lret
lock
data16
stc
adc
adc
push
movsl
lock
int3
sbb
popf
aas
imul
stc
rclb
rcrl
mov
sbb
ds
clc
add
pop
pushf
jbe
jle
jb
sub
mov
or
jbe
sub
mov
jecxz
push
std
in
and
add
ljmp
push
std
testl
jns
out
add
xchg
mov
mov
andl
xchg
mov
in
and
dec
roll
ds
add
not
jo
xor
test
pushf
popa
push
xor
sahf
cmp
and
shll
stos
inc
xor
or
test
mov
add
inc
pop
rolb
mov
add
scas
pop
out
jne
and
popa
xor
mov
repz
lea
vaddps
add
pop
adc
ffreep
pop
or
inc
or
fs
aas
or
aad
icebp
movb
push
or
sub
mov
lahf
adc
push
cmp
add
les
mov
add
jecxz
or
xchg
pop
adc
test
bound
movsb
push
xor
gs
xchg
adc
aad
enter
loop
sub
cld
dec
mov
into
test
insb
fmull
call
mov
popf
lds
jle
add
dec
xorl
aad
lret
popf
pop
leave
or
in
add
xor
arpl
cld
in
scas
or
dec
xor
mov
fcoml
mov
jno
push
test
xchg
push
leave
sub
mov
mov
icebp
insb
fsubrs
add
out
xor
cmp
je
or
inc
mov
adc
ss
xchg
mov
add
lock
mov
xchg
lods
jmp
xchg
and
xchg
xor
pop
orl
xchg
mov
sbbl
andb
ret
add
push
xor
sbb
adc
roll
add
iret
pop
inc
inc
outsb
cs
sarb
int3
cmp
xor
cmp
sbb
mov
jge
ret
push
js
ljmp
mov
sbbb
ficomps
repnz
or
bound
pop
stos
cli
sub
into
mov
stc
add
sarl
pop
sub
insl
add
and
cltd
push
add
cmp
enter
cmp
inc
cmp
lcall
mov
ja
mov
adc
add
in
cwtl
sahf
mov
movsb
push
mov
add
and
sti
enter
sub
ror
add
and
cli
sbbb
xorb
imul
pusha
push
ss
mov
or
lods
pop
aam
in
jns
shll
add
pop
sarl
popa
daa
aaa
sbb
cmpsb
repnz
loopne
or
add
inc
nop
push
rorb
and
and
lods
push
pusha
scas
add
cmp
push
aam
dec
sub
sbb
push
mov
mov
stc
pop
pop
cmp
adc
mov
add
adc
inc
pop
adc
aam
cld
faddl
xchg
or
mov
xor
and
add
fs
or
aad
cmpsb
fnstcw
jle
es
jns
nop
and
repnz
clc
test
mov
sbb
pop
sti
add
xor
sub
nop
dec
add
mov
mov
lcall
xchg
adc
xor
adc
in
adcb
and
fsub
pop
test
xchg
test
rcll
add
jmp
xchg
push
loope
mov
outsl
movsb
repnz
mov
mov
pop
fdivl
jno
test
jl
and
or
sub
xlat
add
hlt
pusha
nop
test
pop
cmpsb
add
jle
adc
sub
inc
pushf
push
nop
aam
cmp
sbb
icebp
ljmp
lcall
pop
aad
cmp
push
dec
pop
xchg
ljmp
jae
add
jle
add
add
mov
sbb
cmp
add
sub
pop
addb
icebp
xchg
or
pop
addb
mov
lea
adc
cmpsl
dec
imul
sbb
push
add
sbb
stos
and
xor
jns
pop
sub
iret
mov
xchg
pop
add
int3
jp
jmp
xor
shlb
push
pop
les
je
inc
in
pop
push
int
mov
test
sbb
ljmp
lock
arpl
xchg
push
shl
inc
pop
jae
mov
mov
fwait
pop
inc
inc
cmc
xor
or
mov
pop
lret
lcall
call
shrl
and
jb
xor
push
or
pop
xchg
mov
bound
test
sbb
push
add
fwait
push
or
xchg
jmp
jno
pop
cmp
dec
mov
mov
add
sbb
jmp
mov
mov
and
xorl
insb
cld
imul
xorb
mov
cmp
cmp
add
test
pop
in
mov
add
push
incb
mov
sbb
int3
popf
push
cmpsl
jge
lahf
push
nop
in
inc
push
fstpl
js
sub
das
inc
shl
pop
push
adc
and
cli
rcrb
fcmove
push
mov
incb
enterw
test
jge
mov
mov
inc
sub
test
mov
ret
adc
cmp
lods
pop
icebp
mov
add
sbb
enter
aad
dec
lods
xor
test
adc
jp
ja
mov
ret
jle
pop
dec
and
repz
adc
arpl
hlt
jbe
mov
adc
add
xchg
add
pop
mov
inc
xor
mov
fsts
fdivs
jnp,pn
push
pop
insb
in
into
rclb
pop
or
popa
hlt
sbb
push
movsl
sub
inc
or
add
les
sbbl
dec
xchg
or
dec
pusha
icebp
daa
loop
jno
add
pop
out
ljmp
sbb
dec
test
jbe
and
fdivr
test
sub
mov
xchg
mov
cmpsb
adc
in
adc
xchg
adc
cmp
xlat
addb
notl
and
add
xchg
subb
or
jmp
add
fwait
pop
jne
xor
or
fs
add
cmpsl
loop
shrb
jmp
add
or
cmpsb
or
cld
xchg
nop
push
or
add
out
outsl
scas
mov
add
mov
xor
sub
test
add
or
test
ja
rolb
pop
xor
mov
xor
mov
roll
mov
xchg
icebp
jmp
hlt
subb
inc
ficomps
jecxz
jne
or
xchg
or
mov
push
sub
pop
xchg
sbb
or
xor
mov
movsl
xchg
pusha
xor
aas
xorl
mov
pushf
lock
push
xor
push
cmp
mov
aad
dec
dec
adc
int3
enter
loope
mov
rolb
xchg
jle
jo
pop
push
or
shl
inc
test
xchg
dec
adc
dec
cltd
pop
sbb
sub
out
add
fs
push
add
repnz
push
or
inc
sub
adc
add
ja
cmp
or
les
outsb
arpl
fs
and
daa
or
nop
enter
imul
hlt
roll
jl
mov
mov
popf
addr16
gs
push
mov
add
push
pop
add
xchg
std
add
xchg
add
std
cmc
mov
cmp
pop
and
cmp
push
fdivrl
add
dec
or
or
stos
lds
cmpsb
setl
cmp
sbb
mov
cmp
inc
cld
cltd
mov
cli
mov
pop
daa
or
movsb
stos
mov
jne
add
add
and
pop
sbb
les
jmp
outsb
insb
xchg
fcoml
sahf
and
jne
dec
pop
inc
cmpb
test
add
push
fcomps
add
push
movsb
add
inc
mov
jmp
movsl
inc
xchg
js
add
xchg
xchg
lds
pop
add
inc
daa
icebp
mov
cmpsl
or
aad
push
xorl
hlt
or
movsb
add
xor
dec
scas
mov
in
push
popa
push
xor
dec
add
and
in
xchg
mov
lock
jle
push
xchg
add
push
icebp
push
sub
dec
push
xchg
cmp
mov
jg
adc
sbbl
pusha
or
cld
loopne
pop
mov
popa
pop
push
xchg
daa
adc
punpckhbw
nop
add
in
addl
mov
fdiv
jp
mov
cwtl
adc
adc
das
cmpsb
daa
nop
lods
inc
dec
jne
add
in
nop
shlb
add
mov
imul
test
popa
stos
iret
inc
rcrb
cmovo
xchg
cmp
xchg
add
lock
adc
imul
add
das
ja
mov
hlt
setge
insb
test
mov
pop
and
push
shlb
add
loop
or
sub
add
adc
movsb
je
xchg
nop
cmp
dec
add
add
push
stos
popf
das
mov
loopne
adc
out
int3
dec
pop
xor
mov
cmpsl
aaa
add
in
scas
adc
inc
or
rorl
add
repnz
mov
mov
push
mov
fdivrl
daa
hlt
lods
add
jbe
lods
enter
call
pop
and
addl
add
mov
mov
xor
lahf
pop
cld
adc
xor
mov
stos
int3
mov
ja
lcall
xchg
adc
inc
rcr
add
test
es
comiss
int3
stos
cmp
gs
insb
inc
and
movsb
mov
dec
inc
and
mov
push
ja,pt
fdivl
out
or
xchg
fs
sub
mov
mov
or
xchg
xor
dec
or
xchg
inc
add
jle
adc
mov
movsl
dec
sub
sbb
mov
inc
pop
js
jb
mov
cmp
adc
and
or
arpl
icebp
adc
fildl
add
mov
pop
mov
fdivrs
or
insl
adc
lret
mov
add
mov
mov
ja
and
push
loopne
add
cmp
mov
inc
pop
add
cltd
mov
sti
push
add
fistps
dec
mov
add
mov
lret
adc
aaa
adc
shll
rcrl
cli
cmp
aas
loop
daa
dec
mov
data16
pop
push
out
mov
cmp
jne
test
incl
mov
xchg
mov
add
or
cmpsb
fs
sbb
adcb
add
mov
into
adc
ret
sub
cld
dec
add
jp
mov
add
xor
push
dec
add
xor
int3
mov
and
leave
mov
xor
adc
push
cmc
add
sbb
sbb
cmp
into
and
call
lock
ret
jmp
mov
shrb
jae
xchg
jl
or
test
int3
inc
inc
pop
movl
cwtl
adc
stos
notl
cltd
mov
adc
add
fiaddl
pop
ljmp
call
cmp
pop
add
push
inc
mov
lods
call
dec
lods
cltd
test
repnz
sbb
add
cltd
jns
jl
or
fwait
ja
test
xor
andb
pop
jge
and
pop
xchg
add
inc
cmc
icebp
mov
loope
jle
inc
enter
add
mov
xchg
adc
shrl
test
call
dec
jge
andb
dec
and
pextrw
lea
xchg
shr
and
incb
push
add
sub
xor
sub
and
aaa
sbb
fwait
xchg
stos
into
cli
movsb
out
mov
push
es
xchg
adc
dec
in
mov
into
or
and
les
gs
int3
push
mov
cmc
adc
cwtl
cld
hlt
add
sub
push
ret
add
insb
fisubrl
fs
push
or
repnz
dec
xor
add
lret
ja
xchg
mov
adc
add
fcomp
inc
cmpsl
xchg
or
icebp
lret
ret
lds
andb
jmp
sbb
fcmovnb
mov
sub
add
nop
add
fistl
inc
out
xchg
addb
test
adcb
out
icebp
adc
sbbl
sub
nop
fs
push
daa
pcmpeqd
sub
aam
es
cld
adc
test
in
xor
jmp
and
loope
cltd
nop
add
cmp
jns
inc
pop
xor
rolb
in
hlt
rcll
mov
insb
and
ret
jl
adc
adc
enter
cmp
loopne
add
gs
adc
movsb
xchg
or
lds
enter
mov
lock
add
or
popf
jmp
rcl
pop
movsb
and
xchg
movsb
pushf
xchg
inc
inc
lahf
ss
or
outsb
push
lret
sub
packuswb
lds
mov
je
mov
inc
shlb
test
xchg
loopne
push
call
sub
add
adc
jns
add
fdivs
pop
jne
adc
jo
imul
xchg
test
leave
fs
xchg
cmp
stos
pushf
jbe
adc
addr16
cmpsl
test
fcomps
dec
mov
cwtl
popf
arpl
dec
xchg
lods
stc
lock
inc
mov
lock
xchg
mov
call
test
mov
aaa
je
add
push
rcr
mov
push
mov
call
loope
sbbb
lds
xchg
cmp
add
and
loopne
pusha
mov
xlat
xchg
fwait
mov
jle
dec
leave
mov
test
test
das
in
push
pop
pushf
pop
and
mov
add
cmpsb
leave
je
add
jg
orb
lret
jns
in
xchg
jle,pt
push
mov
add
lcall
bound
lods
jle
mov
xchg
jo
mov
pop
xor
or
jmp
dec
cld
in
in
xchg
or
push
mov
jle
sbbl
cmpsb
or
icebp
and
dec
add
dec
imull
ds
sub
mov
icebp
jae
ret
jne
stos
add
push
test
adc
inc
lock
into
add
mov
xchg
add
push
or
cmpsb
jp
popf
in
jns
pop
in
hlt
add
mov
add
and
dec
lock
add
fadd
sti
aad
fsts
add
aas
lret
push
jnp
js
inc
les
dec
xchg
add
sbb
fldcw
sbb
xor
push
add
mov
lret
adc
out
jmp
dec
jns
add
orl
inc
in
shrb
push
sub
je
movsl
in
mov
pushl
or
rcll
addr16
pop
jbe
add
mov
shrb
lods
movsb
orl
adc
mov
mov
mov
dec
mov
push
pop
pop
cmpsb
push
pop
leave
mov
push
jmp
pop
repnz
fsts
cmp
imulb
sub
add
call
je
and
mov
ds
push
scas
add
arpl
cwtl
mov
xor
pop
loop
adcb
add
jns
pop
mov
lret
xor
cs
add
cmpsb
dec
les
insb
add
repz
dec
dec
mov
decb
mov
test
ror
scas
cmp
push
dec
add
ja
and
pop
clc
sbb
xchg
xor
mov
aad
mov
xchg
pop
shll
cmp
rorl
clc
jg
sub
mov
add
call
mov
shlb
test
lds
fldl
push
add
test
sub
fmulp
add
clc
or
add
repnz
iret
push
pushf
mov
adc
sub
dec
sub
adc
pop
lret
lds
xchg
xchg
dec
jo
inc
add
mov
jne
nop
xor
jecxz
jmp
aam
xlat
or
xor
inc
add
fsts
inc
iret
bound
or
dec
push
les
pop
adc
cmpsl
jno
ret
pop
inc
xchg
mov
push
stos
push
rcr
adcl
pop
add
call
popa
xor
mov
in
adcb
or
cmp
pushf
pop
sbb
inc
mov
js
or
cmp
add
mov
mov
dec
and
js
icebp
sub
int3
jge
popa
pop
aam
cld
mov
push
or
test
add
in
imul
add
pop
adc
and
arpl
popa
stc
add
or
mov
mov
cmp
rorb
mov
pop
adc
not
add
pusha
testl
adc
sbb
jg
add
push
test
push
adcl
movl
shlb
popf
lock
push
hlt
dec
dec
add
test
sub
and
clc
xchg
pushf
xor
leave
ja
fisubs
sbb
test
mov
cmp
and
or
loop
and
movsl
mov
add
cwtl
cltd
js
dec
das
pop
push
sub
add
iret
and
loope
cmp
xor
je
clc
adc
add
in
or
aad
enter
out
cld
pop
add
test
and
add
xor
lea
cmp
arpl
orl
and
mov
jge
push
jl
daa
outsb
xor
or
in
cwtl
test
shr
jg
out
mov
add
cmpsb
dec
popa
jle
es
adc
out
outsb
and
push
je
add
sbb
int3
cmp
push
adc
or
enter
cmp
sub
andl
pop
mov
jge
cmp
int
call
or
xchg
sbb
sbb
cmpsl
add
xchg
pop
das
jl
js
xchg
inc
sub
sub
sbb
mov
mov
je
push
lock
sbb
push
test
lds
adc
pop
orl
xor
xorb
cltd
nop
pusha
xor
popa
jl
daa
addb
fdivrs
dec
stc
add
insb
sahf
mov
outsl
test
xor
and
lret
lds
dec
xchg
aam
clc
xor
cmpsb
aaa
push
xor
adc
cld
mov
les
stos
xchg
mov
xchg
dec
ficompl
push
mov
adc
jb
movsb
ljmp
jp
imul
jecxz
icebp
dec
xor
inc
insb
cld
out
sarb
repnz
js
or
push
iret
sub
and
or
addr16
out
subl
les
arpl
sbb
sti
adc
cwtl
adc
or
divps
inc
rolb
adcb
movb
add
push
imul
sbb
mov
insl
frstor
js
add
test
xchg
cmpsl
jae
addl
mov
aam
idivb
int3
push
fisttpl
pusha
in
icebp
add
fldl
mov
jg
int3
inc
xchg
jae
es
ret
push
xor
test
fadds
iret
and
push
sub
adc
inc
cmp
roll
popf
adc
out
into
lock
arpl
jo
test
repnz
and
imull
adc
sbb
mov
aam
int
or
lods
pop
adc
and
daa
add
shll
fdivl
arpl
sub
movsb
nop
or
lea
adc
push
cld
movsb
aam
add
js
dec
insb
rolb
xchg
and
jl
popf
pop
or
mov
mov
sub
sub
jnp
xor
je
inc
mov
sti
and
lahf
mov
int3
xchg
call
jb
enter
mov
adc
ds
test
mov
jb
jge
jmp
rcrb
gs
arpl
rol
cmp
fiadds
pop
enter
inc
push
sub
stos
ljmp
imul
jl
mov
cmpsl
cmp
loop
icebp
adc
mov
adc
sub
roll
xchg
push
dec
sahf
inc
push
and
xchg
lods
jge
mov
pop
mov
test
in
mov
xorb
jle
dec
dec
fwait
into
mov
dec
mov
enter
pop
add
lea
outsb
jmp
adc
add
rolb
fwait
or
je
mov
stos
and
mov
int3
jnp
sub
or
mov
cmpsl
in
add
fldenv
out
pushf
add
mov
enter
add
mov
jbe
hlt
mov
xchg
adc
add
movsl
pop
aad
dec
push
shll
fs
in
out
call
sahf
pop
aad
ror
call
pop
pop
pop
sqrtps
mov
or
inc
shll
push
mov
mov
mov
jp
xchg
adc
add
repnz
js
incb
les
or
mov
out
fdivl
dec
insl
loope
pop
add
or
popa
divl
stc
bnd
dec
or
pushf
andb
mov
test
fmulp
xchg
ret
lods
mov
dec
mov
test
lock
dec
je
shl
addb
xor
inc
cmpsl
pushf
stc
add
incb
jp
mov
sub
jno
mov
enter
cmp
and
in
movsb
movsl
add
push
jecxz
nop
insb
sbb
je
push
jno
add
in
jns
mov
icebp
lods
cmp
sti
dec
repz
or
pop
cmp
cmpl
jnp
sub
add
clc
add
int3
cltd
aaa
add
sub
add
inc
adc
test
rclb
cmp
add
test
push
and
jnp
and
outsl
and
jo
push
add
movl
movsl
test
push
add
test
push
dec
xchg
call
sbb
rcll
xor
sti
pop
cmp
add
aas
pusha
call
adc
dec
fchs
add
sahf
sbb
shlb
ja
test
bound
jnp
adc
shlb
rcrb
in
and
pop
test
scas
loopne
adc
inc
or
add
mov
enter
imul
jns
and
mov
mov
ja
ds
add
or
adc
xor
repnz
mov
sub
pop
mov
jbe
push
jo
or
pushf
add
jb
adc
fadd
inc
packssdw
jecxz
lods
mov
lret
sbb
cld
out
dec
mov
xchg
push
lahf
mov
popa
ror
outsb
and
pop
push
push
es
or
push
xorl
push
mov
shlb
subl
sub
or
xchg
fildl
inc
jle
fnsave
lock
adc
pushf
inc
sbb
add
jo
bound
loop
cmpsb
mov
mov
mov
lods
push
mov
scas
add
jae
jmp
fcoml
or
iret
enter
test
sarb
popa
dec
callw
and
mov
jbe
jae
psllq
xor
pusha
inc
sub
jbe
loopne
es
pushf
jmp
sub
and
fisttpl
dec
repnz
rcrb
decl
add
test
popa
inc
enter
mov
es
pusha
stc
and
xchg
and
pusha
js
add
jbe
test
xchg
xor
popa
or
daa
xor
inc
xor
pop
mov
outsb
add
fwait
nop
ljmp
mov
xlat
mov
xorb
sub
sbb
xor
sbbb
cmp
sub
scas
add
mov
pusha
push
inc
fisubrl
adc
cmp
clc
sete
adc
outsl
addl
sub
or
dec
loope
add
repz
xchg
mov
mov
mov
push
xchg
pop
add
and
xchg
nop
or
enter
add
mov
mov
xor
sub
rorb
shr
jns
add
dec
add
cli
mov
in
xchg
add
jecxz
pop
xorb
jns
jb,pn
push
mov
xchg
pop
inc
or
ja,pn
push
adc
cmp
jp
cmp
fistpll
jb
adc
cwtl
cmp
or
mov
dec
xor
push
nop
inc
mov
push
sbb
addr16
add
call
xchg
int3
add
mov
dec
movsl
xchg
add
xchg
and
push
push
ds
mov
fadds
cli
fnsave
sub
xor
imul
hlt
sbb
cwtl
insb
or
gs
roll
adc
out
stos
cmpsb
iret
insb
xor
cmp
addb
xchg
mov
addb
js
xchg
stos
bswap
xor
es
sub
pop
mov
jo
jl
pusha
and
or
int
xlat
addb
and
add
lcall
aas
shlb
cmp
mov
test
sub
into
mov
adcb
sub
jp
pop
aam
orb
pop
add
fchs
cmp
or
jecxz
jle
stc
int
sub
dec
push
sarb
xchg
add
imul
das
outsb
add
mov
stc
inc
cmp
push
ljmp
scas
int3
nop
cld
adc
std
scas
add
dec
sub
sti
add
mov
add
jno
test
pop
mov
movsl
pop
outsb
lds
push
cmp
add
pop
cltd
pusha
cmp
push
and
lods
clc
ljmp
pop
xlat
daa
dec
jno
or
adc
add
dec
aaa
out
rorb
pop
shrb
jo
add
pop
dec
or
pusha
int
xchg
clc
add
out
ljmp
push
jb
out
mov
roll
mov
pusha
subl
out
iret
pusha
xor
ds
xor
pop
into
dec
mov
jmp
jne
test
inc
mov
pop
dec
cmp
jmp
stc
and
cmp
test
popf
js
cwtl
test
testl
nop
mov
nop
fwait
sbb
mov
sbbb
xor
add
popa
sbb
out
fistps
cli
cwtl
push
and
add
fidivs
fwait
sub
xor
push
sbb
push
dec
in
sbb
xor
inc
pop
repz
fldcw
jo
andb
mov
push
psubd
in
add
jo
outsb
sbb
pop
mov
xorl
cmp
inc
enter
call
out
in
into
inc
clc
movsb
push
xchg
xchg
fsubs
add
pusha
je
shl
loopne
dec
fs
and
push
test
sbb
cmp
xorb
fbld
pop
inc
cwtl
test
adc
aam
jl
cmpsl
push
clc
push
mov
js
cwtl
test
mov
xor
es
cld
rolb
cli
lea
cwtl
mov
mov
lods
sub
pop
cmp
test
cmp
jo
jns
xor
out
sbb
stc
pop
fmull
add
xor
cmp
pop
dec
pop
aad
in
fildl
fiadds
mov
out
aad
cltd
adc
cmp
aaa
add
cmp
pusha
js
mov
sbb
test
pop
ret
adc
add
loopne
and
xlat
add
pop
push
scas
xchg
sub
mov
xchg
mov
pop
cmp
add
loope
sbb
lods
push
movsb
mov
outsb
xor
das
cmc
add
int
push
dec
lds
subl
mov
cmp
test
and
out
and
fsubs
and
add
ret
out
inc
or
or
lret
addr16
into
movsb
xlat
cwtl
xor
mov
pop
enter
popa
sbb
shlb
and
or
add
pop
sub
lds
lods
push
and
xchg
xchg
insl
add
int3
mov
dec
xor
inc
daa
or
in
out
pushf
add
xor
decl
xchg
jl
dec
mov
sar
push
cmp
ret
ss
fs
push
rorb
and
add
ror
test
and
push
scas
cwtl
nop
jmp
cltd
mov
and
dec
xchg
imul
movsb
and
test
stos
and
rcl
cmp
shlb
xor
and
sbb
adc
insb
rorl
inc
mov
sub
or
cmp
xchg
xor
fisttps
push
cmp
xorl
out
xchg
cld
fwait
push
jo
dec
dec
adc
sbb
xlat
xor
rclb
mov
call
jo
lahf
pusha
sbb
stc
inc
mov
hlt
xchg
mov
das
or
and
xchg
sbb
add
or
mov
lods
adc
imull
inc
cwtl
mov
xor
es
mov
test
add
push
push
mov
iret
xorl
or
jecxz
call
in
jns
mov
and
shll
adc
sbb
jmp
xchg
adc
out
add
fadds
pop
int3
xor
lret
pop
imulb
test
xorb
add
push
jp
ss
mov
push
lahf
or
mov
call
loop
add
les
sub
lahf
xchg
mov
lcall
xchg
je
and
push
sub
xlat
sbbb
and
lea
xor
add
fstpt
push
dec
into
ja
les
cs
and
sbb
inc
push
cwtl
mov
mov
testl
dec
or
add
dec
pop
mov
rcrl
ss
int3
jae
cmp
xchg
push
xchg
sbb
jp
jle
ret
pop
xor
cmp
imul
sbb
mov
and
add
mov
or
cmp
enter
call
and
and
add
mov
and
aam
push
das
inc
jmp
bound
push
add
mov
pop
daa
mov
sarl
jo
test
sub
mov
push
push
lcall
jo
sbb
repnz
jb
fisttpl
adc
dec
test
xor
and
orb
push
lods
xchg
push
pop
cli
add
scas
call
mov
xlat
xor
jbe
push
movsl
mov
addr16
jo
in
fs
xchg
cmp
adc
add
or
xor
cltd
movsb
nop
mov
push
mov
cld
arpl
xor
mov
mov
dec
int3
pushf
sbb
sbb
add
jge
adc
mov
add
and
add
pop
repnz
add
push
out
daa
adc
adc
lret
add
dec
mov
add
mov
fwait
outsl
xor
pushf
and
inc
out
test
mov
ret
and
mov
lret
xchg
sbb
xor
xor
test
mov
add
inc
push
add
and
sub
fiadds
mov
in
out
xchg
push
mov
pop
xchg
add
je
cmp
hlt
imul
add
xchg
nop
mov
sub
mov
mov
cmp
sbb
stos
xor
xor
cmpsb
mov
add
cltd
call
xchg
xor
daa
aaa
imul
add
ret
cmp
repz
inc
loopne
adc
mov
fmul
inc
push
orl
lock
mov
xchg
or
jne
xchg
or
fsub
pop
addr16
push
sbb
dec
arpl
lds
add
sbb
insl
add
mov
daa
jle
pop
lds
push
out
dec
mov
pop
jmp
dec
xor
xor
pop
mov
and
add
adc
in
jl
fdivrs
xor
adcb
negb
push
test
in
dec
add
mov
add
fnstcw
sbb
pop
adc
into
mov
or
xlat
or
bound
test
jg
mov
call
rorb
add
shrl
xchg
push
lahf
scas
xor
es
jmp
adc
xchg
xchg
loope
mov
aaa
mov
mov
jo
dec
sbb
fbstp
cmp
popa
scas
movsl
cld
add
mov
cld
cmp
int
pop
scas
add
or
add
pop
repz
outsb
xchg
jo
loopne
sub
jo
push
sub
and
jbe
sahf
adc
cld
ja
jnp
add
mov
dec
cwtl
mov
sbb
leave
outsl
jnp
paddsb
adc
orb
cli
or
bound
movsb
flds
xor
lahf
stos
adc
pusha
pop
fimuls
test
lods
adc
adc
xchg
xchg
or
sbbl
push
mov
hlt
push
cmp
xchg
adc
pusha
out
push
add
mov
lahf
jg
mov
xor
cmp
xchg
pop
shrb
jle
jns
adc
cmpsl
insl
xor
rolb
cmpsb
mov
cli
mov
mov
nop
ror
xlat
leave
ret
adc
and
sbb
pop
popa
adc
test
mov
es
movsb
scas
repz
inc
and
mov
outsb
test
loop
aaa
xor
loopne
jb
inc
inc
ljmp
add
sub
fidivrs
xchg
mov
xor
add
clc
jle
mov
add
daa
das
mov
imul
jb
pop
sbb
cmpb
mov
or
sahf
shlb
and
inc
frstor
sub
sub
cmp
mov
roll
movsl
shr
lds
addl
adc
push
xchg
cli
mov
and
leave
rorl
xor
xor
clc
xchg
out
and
or
sbb
bound
mov
scas
add
ret
hlt
dec
add
mov
adc
and
jbe
adcb
jno
aas
cmp
data16
inc
mov
fnstcw
cmp
shlb
xchg
adc
push
dec
or
ljmp
and
and
add
popa
inc
es
lret
aam
aaa
scas
jno
shlb
cwtl
push
fs
or
rorb
mov
or
xchg
xchg
push
jae
mov
lcall
or
cmpsl
cmpsl
mov
lods
addr16
pop
pop
inc
mov
daa
inc
inc
xor
lods
jno
int3
add
adc
pop
aad
lods
pop
shlb
ret
test
mov
adc
and
xorb
loope
add
xor
and
jmp
sbb
pop
stos
mov
testb
push
incb
xor
ret
pop
pop
add
repnz
loope
mov
xorb
or
lods
movsb
adc
subl
inc
rclb
add
pusha
movsb
and
es
push
and
push
out
adc
jnp
sbb
idiv
or
cmpsl
in
imul
add
cmpl
inc
pop
or
mov
dec
pop
mov
ja
mov
sarb
cmp
dec
add
rclb
dec
inc
and
adc
or
aad
lahf
mov
cmp
fldcw
dec
es
add
sub
xor
xchg
mov
sub
mov
jmp
enter
popf
fmuls
adc
clts
adc
repnz
add
scas
aam
inc
inc
and
adc
inc
push
or
dec
mov
lock
add
push
pop
sub
lock
ja
add
addb
mov
loop
push
mov
aas
mov
push
push
mov
add
dec
sub
and
jnp
lods
in
mov
push
repnz
pop
nop
clc
sbb
cs
mov
mov
push
mov
mov
sbb
mov
push
jns
adc
lret
mov
xor
pop
dec
test
push
fcmovbe
xchg
arpl
jl
xchg
lcall
ja
xorb
pop
stc
xor
cmp
shlb
jge
add
or
jns,pt
add
lahf
aam
xor
sarb
test
xorl
or
gs
inc
movsl
popf
test
mov
addl
in
cmp
add
popa
int3
mov
add
cltd
add
in
rorl
push
and
inc
outsl
sahf
mov
in
stos
bound
pop
inc
sbb
cltd
lds
pusha
test
adc
cld
loopne
mov
and
mov
aaa
mov
movsl
loope
add
push
lock
add
mov
jb
add
add
or
fisubs
or
movsb
xchg
loop
push
ljmp
mov
or
decl
rcrl
pop
pusha
inc
xchg
add
data16
out
daa
add
loop
push
adc
lret
xchg
xchg
lret
adc
xchg
jecxz
orb
cmp
push
cltd
iret
add
call
lods
cwtl
or
xor
mov
subps
imul
add
xchg
and
std
jge
xchg
pop
insb
mov
mov
add
cmp
inc
jl
icebp
dec
or
cs
inc
add
push
inc
adc
subl
mov
ja
sahf
push
add
push
mov
pop
outsb
cmp
or
je
pop
sub
add
test
mov
or
test
pop
test
add
cmp
cmp
pop
hlt
out
push
adc
fisttpl
unpcklps
ret
aaa
jecxz
dec
push
repz
je
dec
pop
mov
pop
sbb
es
out
in
inc
xor
cli
rorb
jno
rcll
rolb
cmp
pop
lods
shll
and
sbb
int3
push
popa
mov
adc
mov
pop
loope
adc
shll
xor
mov
push
loope
imul
ds
or
insb
pop
inc
mov
enter
stc
shlb
pusha
ja
pop
xchg
xchg
jo
push
pop
arpl
aas
xor
test
dec
mov
outsb
nop
add
into
out
xor
mov
push
add
cwtl
lret
add
inc
xor
das
ret
add
pop
stos
xchg
push
scas
xchg
pop
push
mov
mov
lahf
sub
std
lret
xchg
mov
adc
sbb
add
mov
cmc
push
femms
jnp
cs
lock
adc
push
add
xchg
lahf
inc
arpl
mov
push
adc
add
mov
xor
sbb
insl
adc
cld
lds
xchg
pusha
hlt
cwtl
add
mov
mov
dec
push
add
or
xor
daa
jge
add
dec
or
scas
pop
push
sbb
adcb
out
pop
ds
add
rcrl
jge
add
ja
add
arpl
sbb
shl
cwtl
sqrtps
xorb
sbb
leave
in
sbb
mov
mov
cs
jo
orl
imul
loopne
fiadds
sub
push
stos
cwtl
dec
daa
pop
cmp
push
xlat
mull
cltd
jecxz
arpl
call
add
aam
std
loop
add
mov
pop
jmp
sub
and
ds
addl
faddl
sub
and
cmp
sbb
push
pop
inc
test
inc
push
decl
test
cmc
pushf
incb
cmpsl
cmpb
hlt
lahf
imul
fldl2e
pop
push
stc
push
pop
pop
xchg
outsl
add
adc
fsubrl
adcb
cwtl
add
repz
insb
loop
cmc
mov
cmp
dec
dec
das
adc
fiadds
or
loopne
cs
add
mov
pop
jg
and
and
add
cs
fidivl
pusha
sub
push
xchg
mov
add
iret
inc
or
fcmovnbe
fcoml
sub
xchg
imul
mov
sbb
outsb
cwtl
add
jecxz
movsb
pop
ret
dec
pop
aaa
push
add
xlat
jg
movsl
pusha
lahf
aad
adc
pusha
pop
lock
repz
add
lcall
in
fwait
out
xchg
xchg
ficompl
dec
mov
inc
pop
out
rolb
dec
add
mov
jl
and
adc
mov
in
or
xorb
scas
mov
xlat
xchg
addr16
cmpsl
push
mov
shll
out
fisttpl
add
sub
pop
pushf
dec
pop
mov
lahf
ja
push
insb
out
add
push
sub
call
cltd
sbb
ds
pop
and
loop
or
xchg
jle
scas
xor
stos
jno
lea
mov
rclb
xchg
jp
pusha
clc
lret
mov
pop
ss
cmp
jecxz,pt
inc
xor
std
lock
dec
inc
add
jno
mov
cwtl
add
adc
mov
mov
mov
out
pop
dec
push
and
and
push
dec
inc
loop
into
loope
add
inc
rorl
pusha
subl
add
dec
sub
mov
push
jo
jnp
mov
push
testl
mov
and
push
pushf
lods
or
ja
add
pop
mov
lock
adc
add
dec
or
outsb
push
and
lods
add
out
or
rcrb
add
fbld
or
and
sub
cli
stos
pop
out
adcb
aas
add
aad
mov
enter
test
xchg
int3
icebp
fistpll
sub
mov
imul
leave
out
adc
subb
inc
and
test
adc
and
jle
es
sbb
je
orl
sub
scas
push
and
add
push
sub
mov
andl
pop
rolb
inc
add
imul
dec
cmp
mov
push
cmp
fisubrl
in
add
add
rol
icebp
push
imul
add
sarb
pop
ljmp
mov
sti
jmp
mov
jp
pusha
shlb
pusha
leave
filds
xchg
add
rolb
xorl
jo
xor
add
or
add
addr16
das
sub
mov
aam
subb
mov
mov
scas
outsl
mov
pop
sub
ljmp
mov
shlb
lret
es
or
add
pop
add
inc
test
aaa
movsb
cmp
stos
cmpsl
pusha
test
ret
inc
mov
je
and
xchg
cmp
add
sub
inc
cli
iret
or
adc
cmpsb
hlt
or
cmp
pop
sub
movsb
sbb
sbb
mov
xchg
cmp
add
xor
ret
pop
inc
outsb
mov
icebp
int
test
add
cmp
add
sub
mov
sbb
mov
inc
movsl
shr
add
or
cmpsb
out
pop
mov
rcr
push
sub
dec
lods
jle
add
inc
dec
leave
ret
add
or
nopl
jg
test
hlt
add
pusha
add
scas
pop
xor
adc
cmp
insl
mov
mulb
cmp
aas
push
rcrl
jmp
clc
push
shll
xchg
add
mov
pop
adc
cmp
loop
pxor
jae
mov
mov
add
ja
or
add
popa
add
jae
and
fsubs
rcrb
add
mov
loop
mov
sbb
aas
add
sub
nop
rolb
jmp
xchg
pop
ret
ss
xor
rcl
push
add
cmpsb
sub
pushf
mov
inc
pop
sub
lock
jbe
mov
fildl
lret
adc
xchg
insb
push
data16
repz
inc
cli
add
mov
jns
cmpsl
out
adc
xlat
aam
test
out
mov
add
add
add
add
inc
xlat
icebp
arpl
mov
data16
lock
push
push
incl
loopne
cld
jle
outsl
inc
add
aas
adc
add
roll
mov
idivl
jns
sub
jne
inc
mov
pop
rcrl
or
addb
cli
ret
int3
movsb
or
shrb
add
scas
sub
daa
inc
xlat
fisttpll
adc
ja
xchg
sbb
into
clc
mov
fwait
add
add
subb
jns
test
and
push
ret
orb
dec
xor
les
or
stc
ljmp
lahf
mov
loop
aad
je
mov
ret
lea
cltd
add
jnp
fwait
add
xchg
loopne
in
shlb
jo
shlb
int
or
mov
sub
fstpl
imulb
leave
cs
loopne
add
test
outsb
dec
add
inc
pushf
add
push
add
fs
add
sbb
mov
xchg
or
loop
je
enter
xor
in
add
push
or
sub
scas
or
repz
mov
lahf
fimuls
sbb
lock
lret
dec
rcll
popa
pusha
xorb
cmp
addb
cltd
fistpl
sbb
incl
mov
js
mov
cmp
outsl
adc
xor
sbb
add
stc
xchg
test
pop
push
add
ja
xor
cmp
and
pop
mov
or
loopne
in
adc
jl
sub
fcomps
mov
inc
inc
outsl
add
call
inc
add
mov
jl
popf
inc
add
pop
insl
xchg
repz
mov
cs
and
cmp
xchg
fwait
add
sub
lock
mov
push
repz
jmp
test
mov
jne
notl
out
lock
add
pop
mov
mov
dec
add
inc
arpl
insb
fdivs
mov
sbb
xchg
add
lret
add
and
orl
push
xchg
out
cmp
out
orl
inc
sub
add
xor
enter
push
adcb
add
push
fcoml
push
stos
push
push
xor
cmp
jo
sub
clc
xchg
mov
mov
imul
and
js
sub
add
xchg
insb
out
iret
inc
add
mov
push
movsl
nop
xchg
cmp
add
clc
sub
cs
fsubl
add
jmp
call
cmp
pop
subb
jae
adc
pop
fildl
sub
and
xor
out
push
sbb
cld
loopne
lcall
sbb
icebp
add
push
lret
sbbb
add
sahf
jecxz
dec
mul
add
in
cwtl
ljmp
mov
add
scas
lret
aad
push
in
sbb
mov
fstps
jp
mov
add
xchg
sub
int3
aam
add
push
sub
repnz
je
inc
inc
cmp
ret
xor
and
aas
lods
ds
mov
lods
add
and
fldl
inc
lea
pop
and
pop
add
leave
push
es
lret
xor
sahf
jp
or
mov
in
add
sti
bound
add
mov
ljmp
data16
fbld
fstps
pusha
dec
rolb
je
cmpl
xchg
shll
xorb
inc
add
mov
addl
mov
add
insl
jbe
aaa
push
stos
push
xchg
rorl
shll
inc
cmpb
or
sbb
sbb
pusha
outsb
sbbl
or
in
ja
xor
inc
lods
stos
outsb
add
sub
mov
mov
or
popa
out
sbb
inc
pop
cmpb
push
xchg
mov
add
pushf
aam
addr16
enter
fildll
fdivl
sub
cmp
les
xchg
add
adc
ljmp
mov
sbb
xchg
jl
rorb
dec
inc
xchg
mov
sub
fldenv
jns
jbe
in
pusha
add
js
sbb
jo
or
jb
jns
xchg
pop
add
dec
mov
pop
sarb
out
bound
add
sbb
dec
xchg
mov
popf
push
cmp
add
mov
xchg
add
push
fldl
mov
inc
mov
push
loope
movaps
add
cmp
push
rcrl
add
pop
adc
adcl
sbb
or
mov
add
sbb
outsl
add
call
fldcw
add
or
repz
lret
jecxz
addb
std
out
mul
adc
add
pop
add
push
pop
faddl
cmp
int3
xorl
or
out
aam
out
xchg
lods
aas
add
iret
xor
rorb
test
pop
dec
and
add
push
mov
hlt
sarl
xor
xchg
pop
cwtl
or
fildl
dec
dec
xchg
mov
inc
inc
int3
add
lds
popa
in
es
or
adc
cmp
jl
pop
dec
shl
add
add
dec
sub
dec
sub
push
xor
pushf
and
negb
out
cmp
rol
loopne
dec
aaa
add
lds
cmp
out
movsl
mov
movb
adc
insb
fstps
dec
pop
data16
sbb
cld
movsb
pop
jg
add
std
and
das
rolb
addb
stos
lahf
inc
mov
ret
bound
mov
add
jae
pop
add
movsb
mov
mov
lahf
xchg
xchg
notl
push
icebp
movsl
or
push
cmp
insb
lds
cmp
clc
lcall
sub
add
mov
xor
cmp
push
outsb
lock
outsl
je
or
cwtl
cld
mov
lcall
nop
int
aad
bound
ss
lahf
int3
ret
test
outsl
push
repz
jb
lock
xchg
pop
fstpt
and
shrb
mov
movsb
ret
and
ljmp
jg
stc
pusha
test
xchg
push
inc
leave
push
inc
mov
push
gs
mov
push
shrb
and
movsl
lock
pop
xchg
sub
dec
mov
dec
jg
add
idiv
rcrl
xchg
add
cs
dec
cmp
iret
pop
adc
cmpsl
mov
sahf
dec
mov
cmpsb
pop
or
jo
fisubs
add
jo
movsb
jno
clc
out
repz
arpl
addr16
cmpsl
cmp
mov
pop
sub
test
mov
pshufw
test
in
add
add
addr16
out
pusha
daa
push
shr
cmp
ss
pop
dec
or
repnz
add
or
jo
cltd
out
or
add
mov
gs
hlt
xchg
sbb
sub
test
pop
cmpb
pop
adc
hlt
and
xor
xchg
inc
add
lahf
add
cld
dec
sbb
jge
rcr
lret
push
xchg
sub
into
dec
pop
jne
sbb
sub
cmpsb
sbb
inc
add
movsb
sbb
bound
sti
dec
sub
repnz
add
xchg
or
and
scas
add
jno
and
data16
cmp
add
add
cmpsl
loop
ja
add
push
fisubrl
fmull
movl
add
jno
pop
sub
pop
movsb
dec
lret
popa
sbb
test
mov
adc
mov
pop
push
push
add
roll
ljmp
mov
cmc
sub
and
cmp
mov
add
adc
add
push
mov
repz
data16
mov
leave
add
push
add
lret
sub
ja
xchg
add
or
add
sbb
stc
add
daa
cmp
lea
lock
jle
add
imul
jl
add
cmc
mov
ret
push
rolb
xchg
cmpsb
call
pop
add
adc
ja
insb
dec
pop
add
push
jecxz
mov
je
jae,pt
add
pop
jbe
jne
add
imul
lock
lret
sbb
lret
ds
add
push
mov
andb
repz
mov
test
add
ljmp
add
sbb
mov
mov
add
iret
push
addb
or
sbb
or
add
pop
insl
sub
leave
cmovg
lcall
les
and
or
inc
movsb
imul
push
test
add
adc
cmp
filds
movsb
add
in
xor
mov
xlat
rclb
cmp
inc
jl
sbb
addb
add
lret
xchg
aad
add
das
jecxz
mov
push
adc
loopne
or
icebp
std
push
mov
test
mov
xlat
or
add
mov
inc
lods
adc
cmp
leavew
sbb
inc
pushf
cmpl
int3
push
mov
out
pusha
insl
nopl
out
cmc
add
cmp
test
mov
mov
inc
or
jl
movl
pop
loope
add
jno
jns
mov
add
mov
add
repnz
push
pop
test
add
mov
jg
vorps
rolb
xchg
xlat
subb
iret
add
push
push
dec
ret
mov
add
pop
fincstp
mov
mov
stc
jge
add
mov
or
addr16
adc
movl
pop
lcall
dec
rcl
data16
adc
decb
ficoml
scas
data16
xchg
add
push
popf
arpl
lret
xor
add
xlat
push
mov
insb
push
loopne
or
ja
call
xor
add
mov
add
repz
mov
loopne
in
xchg
mov
aas
scas
clc
push
lods
add
adc
pop
fwait
jecxz
pop
add
pusha
pop
adc
cmc
jns
add
jae
sbb
push
insb
cmp
outsl
add
loope
and
push
pop
xor
imul
cmc
jnp
and
add
sbb
mov
sbbb
mov
cltd
and
sub
pop
or
xchg
into
add
and
js
jl
in
imul
mov
enter
adc
dec
mov
add
mov
ljmp
push
xor
mov
xchg
pop
cmpb
leave
stos
mov
mov
mov
into
test
gs
dec
add
inc
cmp
dec
cmp
ja
and
or
mov
loop
test
mov
test
popa
dec
add
jecxz
mov
xor
loop
add
outsb
ja
pop
repnz
test
cmc
pop
inc
xchg
push
enter
jae
sbb
clc
cmpsl
fcomip
pop
jne
cmpsb
add
mov
jns
outsl
cmc
add
mov
sub
jne
add
dec
push
test
dec
xchg
int
lock
add
cltd
adc
les
add
stos
es
add
clc
jmp
imul
jns
leave
xchg
inc
cmc
sahf
and
add
jae
in
movl
adc
xor
mov
xchg
and
clc
mov
fnstenv
aam
adc
aaa
div
xchg
inc
jg
lds
add
shl
mov
clc
and
scas
xor
sbb
int3
jge
jp
pop
adc
push
fadds
or
pop
pop
xchg
fnstcw
cmp
add
mov
pop
daa
std
sbb
icebp
loopne
xor
jns
lock
sbb
mov
call
xor
scas
sbbl
add
mov
insl
fiadds
push
movsb
jmp
mov
inc
sub
fsubr
pop
cmp
mov
ficomps
jae
aad
mov
inc
jne
or
mov
fildl
call
add
out
ds
sub
test
adc
insl
loope
sub
lods
adc
sbb
arpl
cmp
add
mov
roll
or
add
push
dec
pop
test
jg
inc
lock
cmp
test
push
iret
sbb
rolb
call
xlat
jbe
or
push
fildll
cmp
out
and
cmp
push
dec
cmpsb
jbe
xlat
inc
rclb
pop
push
ss
xchg
xor
adc
mov
adc
xor
push
inc
fwait
mov
push
repz
adc
and
mov
incl
add
cmp
shll
inc
loopne
sti
pusha
or
or
dec
cli
add
mov
es
inc
add
cmp
pop
push
ficomps
mov
lods
xor
cmp
mov
mov
adc
dec
dec
in
xchg
in
sbb
hlt
cld
imul
js
add
jle
sbb
push
mov
shll
mov
jmp
cmp
ss
sub
inc
sub
bound
pusha
push
sub
mov
mov
jle
mov
add
in
add
ds
lret
shlb
add
mov
sahf
adc
mov
leave
dec
ljmp
clc
mov
inc
mov
addb
popf
jl
cwtl
lods
add
lds
dec
cmpsb
leave
lods
aaa
gs
aas
sub
lock
dec
mov
pusha
jo
mov
sbb
mov
mov
mov
aas
test
arpl
mov
js
icebp
jns
nop
mov
mov
insl
arpl
mov
addr16
test
sahf
lret
push
add
lahf
addb
xor
shrl
std
add
mov
mov
fwait
out
pop
pusha
cmpl
push
xor
flds
mov
fisttpl
call
out
add
mov
mov
add
jo
jp
repnz
add
push
inc
cltd
and
shlb
add
rclb
pop
stos
rolb
cmp
int3
leave
add
mov
jbe
add
lods
std
cmp
add
cld
es
sub
add
sub
ret
add
cltd
xor
add
jmp
shll
cmp
test
adc
jp
cwtl
aam
pop
lock
add
mov
adc
pop
pushf
out
sub
hlt
push
mov
pop
pop
add
lods
rorb
dec
add
adc
scas
stc
std
shrb
mov
xchg
mov
xor
addb
loop
mov
sbb
adc
pop
add
pop
iret
and
ror
push
addl
add
pop
mov
push
adc
iret
mov
or
inc
add
into
in
inc
xor
push
xor
pop
mov
add
divb
les
repnz
test
dec
enter
punpckhwd
iret
sbbb
inc
push
sbb
inc
sub
lods
js
jbe
js
add
icebp
gs
dec
mov
add
jl
test
push
aaa
push
lods
push
je
dec
insb
xchg
adc
popf
js
cmp
iret
pusha
sbb
addl
push
leave
popf
dec
scas
dec
push
dec
mov
add
sahf
cmp
add
jb
ret
scas
inc
popf
sbb
xchg
add
std
xchg
jbe
mov
cwtl
add
and
fidivrl
lret
ljmp
add
fidivs
sub
ds
or
ja
inc
mov
or
add
dec
and
dec
jae
xchg
cld
leave
jl
xlat
jmp
dec
and
lahf
add
push
iret
jle
in
sahf
add
mov
arpl
cmp
and
sub
js
add
push
adc
inc
rolb
jle
inc
mov
loope
lret
or
shrb
arpl
pop
push
ss
sbb
mov
inc
mov
popa
cmp
inc
cwtl
or
cld
add
xor
mov
push
lods
orl
pop
add
mov
push
or
ds
and
rorb
ret
sbb
jne
orb
adc
les
rclb
test
add
fbstp
insb
pop
xchg
dec
mov
cmpsl
or
icebp
out
xchg
add
scas
stos
loopne
sub
sbb
jns
cli
nop
cld
xchg
cmc
pop
aad
daa
jae
lock
into
jo
fistpl
or
ret
lea
dec
call
mov
mov
addb
das
add
sub
xlat
jb
iret
in
lcall
lahf
add
mov
cs
push
sbb
jl
rol
outsb
inc
mov
sbb
push
mov
out
aas
out
loop
js
fucomi
sub
xor
jmp
enter
or
mov
push
test
fnstcw
mov
mov
add
pop
push
dec
test
push
loopew
add
in
in
lahf
cltd
add
pop
push
mov
enter
push
sbb
push
add
jns
movsl
cmp
repz
int3
pop
jbe
mov
rcrb
mov
add
loopne
and
sub
je
test
cmp
aam
shll
adc
mov
jg
xchg
jmp
cltd
ss
stc
fwait
push
lods
mov
sbb
and
lret
sbb
sub
add
push
add
dec
and
in
ljmp
xor
inc
js
add
int
shll
pop
pop
in
repz
adc
add
enter
or
mov
and
sbb
adc
inc
sbb
mov
pop
pop
lock
add
int
mov
bswap
and
add
mov
sbb
mov
pminsw
add
loope
pop
mov
js
pop
push
iret
aam
add
xchg
push
jp
fdivl
mov
or
and
fbld
pop
sbb
mov
dec
mov
pop
jl
addb
testb
addb
jns
hlt
add
lods
dec
add
xor
cld
addl
mov
add
mul
addr16
mov
cltd
je
add
ss
push
add
adc
fwait
push
mov
sub
xchg
scas
sbb
or
dec
test
sbb
push
pop
inc
xor
rcrb
dec
cmp
push
sub
sub
pusha
pop
ret
sub
xor
mov
add
std
aam
test
enter
test
cld
jne
cmp
mov
dec
stos
fs
in
dec
fistpll
mov
into
add
cmpsb
sti
push
cld
jo
add
outsl
mov
push
add
lods
decl
add
push
cmp
dec
jge
mov
int
add
into
daa
jbe
mov
xor
xor
out
sbb
fdivr
iret
jp
add
mov
sbb
jnp
add
adc
push
mov
cmp
jecxz
fldenv
jge
cmp
aad
add
ds
jmp
add
add
fstpl
xorb
add
in
inc
add
pop
cs
push
out
add
test
and
and
add
fnstenv
pop
jno
ljmp
aam
add
js
inc
mov
push
and
out
aad
lea
or
cld
sbb
int3
aam
add
mov
cmp
xchg
clc
mov
sti
cmp
pop
jo
jae
fcomip
sbb
dec
int3
in
add
pop
inc
out
rolb
out
adc
inc
mov
mov
add
aad
mov
ja
cwtl
cmp
ja
jle
jo
mov
mov
shlb
sbb
pop
mov
and
rolb
add
frstor
adc
aaa
pop
jo
jmp
xor
pop
rclb
movsl
mov
out
push
jae
add
insl
inc
sbb
cs
and
mov
leave
and
inc
xlat
pop
cs
roll
mov
add
bound
pop
add
add
jbe
dec
push
xchg
ret
adc
fwait
cmp
pushf
inc
shrb
out
jns
jb
in
aam
sub
aam
adc
into
sbb
pop
rep
push
push
lret
sbb
cmp
add
add
insb
sti
andl
lea
jle
inc
or
scas
cld
dec
add
icebp
pop
jnp
dec
sbb
sub
sahf
jnp
add
loopne
dec
mov
inc
sbb
pop
xchg
cmc
jne
adc
mov
cltd
lahf
inc
shlb
sbb
rorb
mov
lcall
test
push
pop
stos
mov
sub
es
cmp
rcll
add
jp
in
mov
or
pop
popa
pop
xchg
movsb
add
pop
out
add
dec
in
or
test
xor
cmc
fwait
aaa
xchg
mov
xorl
jne
or
mov
cmp
fidivrl
pop
lret
mov
mov
mov
add
xchg
and
xorb
mov
cmp
mov
out
xchg
cli
sarb
ds
adc
incb
ja
xchg
inc
sbb
mov
push
pop
fists
inc
cmp
mulb
in
and
cmp
sahf
add
bnd
sub
js
imul
add
jmp
shll
stos
dec
add
test
xchg
jnp
adc
loop
inc
inc
lds
adc
xchg
out
ja
in
add
xchg
loopne
xor
mov
shlb
add
lock
fiadds
loopne
hlt
or
out
mov
les
enter
add
outsb
sub
mov
pusha
xlat
adc
pop
in
cmp
xchg
dec
sbb
movsb
jne
jnp
inc
add
cmp
out
andb
mov
pop
adc
sub
pop
mov
fsubs
add
das
pop
cmovg
int3
inc
aas
std
add
in
mov
xchg
dec
mov
add
pop
mov
or
pop
test
xlat
jne
mov
push
loop
cmc
lds
sahf
shl
push
jecxz
pusha
push
lock
lock
xor
incl
lret
pop
pop
faddl
cld
cmpsb
test
add
rclb
fucomp
leave
xchg
rcrb
pop
rol
push
rorb
js
dec
add
add
dec
push
fwait
aam
call
out
mov
adc
sar
adc
jnp
xchg
out
jl
jno
repnz
imull
jae
cmp
adc
inc
pop
enter
mov
add
adc
cmp
lahf
sub
mov
add
push
shl
add
lret
jne
call
jo
add
sub
mov
xor
xchg
sub
inc
mov
and
add
in
push
push
sub
add
loopne
or
inc
js
sbb
inc
push
jle
test
hlt
push
jge
arpl
jbe
dec
dec
pop
jl
leave
add
into
pop
cmpl
int3
pop
sub
mov
cmp
add
pop
xchg
mov
add
ljmp
ret
addr16
daa
cmp
add
pushf
lods
loop
rclb
adc
subl
sub
hlt
add
or
aad
mov
in
sbb
mov
out
mov
in
push
and
cmpsl
sbb
nop
mov
outsb
loopne
cs
aas
clc
mov
sub
mov
cmpsb
add
pushf
je
adc
or
mov
inc
inc
pop
call
add
push
mov
fistps
ds
inc
xor
add
and
out
add
movsb
inc
xor
stos
ds
adc
push
add
faddl
fsubrs
and
bnd
push
xlat
ljmp
pop
fisubs
inc
add
pop
sub
or
mov
add
inc
insb
cmp
hlt
andb
cld
fiadds
ret
cltd
or
clc
dec
negb
inc
add
mov
fsubs
bnd
or
sar
js
std
out
add
leave
xor
lcall
cmp
xchg
cmpsb
gs
into
add
add
mov
inc
cmp
jle
pop
aas
dec
nop
add
push
fsubr
cmpb
push
clc
adc
sbb
outsl
pop
lods
dec
push
cmpsl
add
mov
sbb
jle
and
ds
xchg
in
insl
movsb
sub
outsb
xchg
cmp
ljmp
push
mov
es
aam
rolb
das
mov
insl
aaa
xor
push
sub
dec
adc
cmp
add
cmp
cmp
push
mov
inc
pusha
subb
push
add
cmpsl
sub
push
cvtps2pd
aaa
adc
sbb
dec
inc
test
movsb
cmp
mov
sbb
jecxz
add
cmpsl
sub
push
fistpl
jo
add
xor
inc
adcl
sub
jp
and
add
mov
cmp
xchg
in
xor
fs
icebp
mov
xchg
xchg
outsb
or
or
addb
push
lock
pop
in
ret
clc
pop
and
popa
xchg
jg
pop
sbb
pop
ljmp
and
cmc
pushf
ret
mov
imul
xor
xchg
adc
out
sbb
cwtl
shlb
in
sbb
xor
mov
pusha
sbb
rorb
mov
cmp
dec
stos
rolb
movsl
into
lds
adc
mov
jmp
shrl
inc
add
ljmp
js
add
ja
add
fwait
push
loopne
iret
add
dec
das
jns
push
aas
add
dec
lock
xor
addr16
xlat
push
sarb
add
push
cmc
adc
pop
push
push
inc
clc
int
xor
sub
aas
sbb
out
push
add
xchg
sbb
in
cld
xor
ja
mov
daa
lret
lods
jnp
daa
fstl
scas
dec
arpl
mov
andb
out
int3
ja
nop
pop
pop
mov
or
jns
add
cmp
adc
cld
movsl
add
loope
xchg
lods
lahf
lret
jmp
sarb
add
inc
ret
lock
add
stos
mov
cld
add
and
divb
cmp
sbb
shrl
nop
aaa
cmp
add
test
mov
xchg
or
lcall
push
cmp
adc
sti
movsl
add
ja
fadds
fmul
leave
mov
xchg
mov
shl
add
scas
lods
test
push
imul
pop
dec
mov
in
lock
lret
dec
mov
cmp
xor
aaa
mov
add
mov
jnp
in
mov
sbb
outsl
ljmp
je
mov
push
xor
cmp
xlat
add
dec
push
fwait
add
push
sarb
or
lea
dec
mov
xchg
in
inc
inc
shll
sahf
cmp
xchg
lahf
or
xchg
add
out
push
adc
movsb
push
and
add
lods
jg
int
jle
jns
sar
out
mov
lods
ja
clc
mov
mov
cmp
inc
adc
sub
mov
addr16
add
insb
jmp
pop
and
pop
pop
sbb
sahf
inc
sti
and
adc
xchg
decb
jne
xchg
push
das
add
mov
xor
push
bound
or
rol
add
and
push
loope
push
aas
enter
test
xchg
pop
xchg
jge
push
or
call
add
cs
and
inc
jbe
add
pop
jl
jae
inc
add
mov
mov
imul
shll
repnz
add
stos
sub
add
cmp
fwait
aam
mov
push
clc
cmpb
push
add
lods
inc
aas
push
data16
jbe
iret
pop
stc
or
push
les
imul
pop
in
loope
call
outsl
dec
ret
cmpsl
dec
lahf
call
push
add
push
bnd
pop
dec
lds
cmpsb
std
icebp
inc
imul
add
push
jle
or
jl
push
sbb
add
fs
clc
mov
add
jnp
mov
sbb
dec
sub
inc
inc
ss
pop
jge
cld
push
mov
mov
inc
dec
stos
inc
sbb
inc
cmp
aas
outsb
push
shlb
jl
mov
lret
sub
sti
js
sbb
test
add
add
push
push
push
dec
jbe
and
add
roll
and
ror
add
xor
sub
add
js
cmp
dec
lret
adc
aad
add
sbb
out
stos
dec
jns
pop
mov
add
xchg
ds
and
xor
or
mov
push
add
xor
pop
jno
add
cmp
xchg
fidivrs
outsl
out
and
mov
cld
jecxz
push
in
test
leave
adc
push
test
lea
add
add
pusha
popf
xchg
adc
scas
outsl
inc
xchg
cmp
imul
dec
movsb
inc
add
movsl
pop
into
bound
aas
nop
push
test
sub
clc
dec
add
sub
cmp
or
in
lcall
insl
call
add
xchg
add
cmp
adc
pop
pushf
push
mov
sbb
loopne
leave
jecxz
mov
rclb
inc
push
fildll
cmpsb
jmp
data16
mov
mov
fadd
adc
dec
push
inc
cmp
out
inc
cmp
pop
xchg
into
adc
mov
xor
adc
add
call
dec
movsb
cs
cmp
push
dec
jl
lods
jbe
push
sahf
mov
rcl
jge
insl
ja
jp
fsts
add
rolb
lret
out
ss
mov
add
inc
das
scas
cmc
aam
push
add
sub
mov
dec
adc
pushf
lea
stos
clc
cmpsl
out
gs
fs
bound
repz
mov
dec
or
rcr
les
incb
add
jno,pn
cltd
pop
rorl
ja
mov
icebp
les
push
dec
sub
add
inc
fcoml
dec
iret
xchg
sbb
xor
fcmovu
out
or
xor
cmp
or
xor
loope
jbe
addb
in
cmp
cmp
add
jmp
outsb
movsl
mov
in
rolb
fstl
flds
out
inc
addr16
iret
xor
and
and
cld
xor
test
or
cmp
mov
lock
int
lcall
pop
call
fisubs
jp
insl
add
cld
mov
adc
mov
in
in
out
mov
push
pop
xor
mov
stos
fdivrl
in
addb
cmp
add
loopne
mov
add
hlt
xor
std
add
add
push
data16
xlat
push
cli
fwait
add
adc
sahf
and
scas
sub
sub
pop
in
cmpl
adc
rcll
or
scas
add
scas
pop
xor
rorl
dec
ret
lds
inc
shrb
lock
out
addr16
aaa
adc
das
loopne
xchg
or
lds
test
add
ret
in
lea
mov
jb
mov
cmp
mov
and
pop
push
push
dec
jg
push
daa
push
add
mov
xchg
mov
add
mov
xor
inc
xorb
add
jmp
sub
out
add
push
out
sub
mov
add
xchg
pop
filds
mov
popa
jle
out
js
lock
mov
cltd
sub
stos
add
insl
popf
jno
dec
out
sbb
nop
inc
pop
inc
add
lea
pop
add
inc
cmp
add
jnp
jle
sbb
jge
inc
and
insl
push
mov
pop
add
pushf
add
cs
aam
add
shll
sub
inc
sarl
ljmp
test
inc
sub
lock
inc
adc
xor
pusha
inc
xor
add
xchg
sub
int
add
and
fcoms
pop
je
xor
inc
xchg
imul
out
aad
add
js
and
inc
aad
pop
sti
add
mov
rolb
mov
imul
and
inc
add
adc
and
fs
stc
xchg
adc
or
add
test
iret
add
adc
or
adc
fnsave
add
jg
lahf
lret
add
and
sbb
sbb
add
sbbb
jmp
imul
les
xor
xchg
push
sbb
bound
rcl
je
inc
pop
sub
mov
push
dec
mov
inc
dec
js
pop
loop
adc
lds
pushf
xorb
rcrb
lods
icebp
adc
push
das
add
cmp
leave
clc
mov
add
insl
inc
or
sub
insb
sub
sti
add
ljmp
std
lods
mov
pusha
mov
and
test
enter
imul
cmpb
sti
das
add
mov
mov
std
adcb
push
sbb
push
push
pusha
imul
sbb
inc
sbb
div
in
shr
lock
ret
in
mov
int3
add
jns
lds
data16
fldl
orb
sahf
xor
repnz
add
cmp
add
mov
sub
data16
bnd
xor
pop
ss
push
mov
fists
mov
mov
stc
outsl
dec
daa
in
adc
insl
andb
stos
push
add
jecxz
push
shlb
shlb
fildll
jne
add
push
jmp
pop
adc
pop
dec
incb
mov
aam
cmp
ret
shlb
xchg
jnp
into
mov
enter
mov
sub
sti
pop
inc
scas
add
rcll
into
or
andl
mov
push
orl
push
enter
aaa
pop
or
and
sbb
fistpll
pusha
sub
sbb
push
dec
dec
mov
aad
dec
add
fs
dec
add
cmp
out
jmp
scas
mov
cltd
xchg
or
and
add
fcoml
add
sbb
jno
xor
cmp
xchg
xchg
mov
sbb
dec
sub
mulps
mov
jl
lods
sbb
mov
fsubl
add
or
adc
sub
push
iret
idivb
lcall
sub
xchg
xchg
loope
lcall
stos
in
mov
push
or
int
add
cltd
xor
and
adcl
push
cmp
sbb
add
movsb
stos
sub
pop
and
dec
xchg
nop
dec
push
pop
jb
stos
sarl
add
test
jle
movsl
pop
xchg
xchg
js
fisubl
cmp
push
inc
add
cmp
dec
and
add
jnp
cwtl
lahf
fildl
sbb
loopne
out
ljmp
enter
jmp
sub
aas
rorl
cwtl
push
call
aad
and
add
or
mov
aaa
push
fldl
movsb
das
outsb
aad
stc
xor
add
push
sub
sarb
imul
out
rdtsc
cmp
add
loopne
movl
sti
sub
dec
enter
cmp
insl
sbb
int
push
jbe
add
in
mov
or
sub
mov
mov
orb
dec
fsubs
pushf
jns
add
cmc
std
cmp
or
loopne
xor
sbb
jno
add
stos
int
or
xlat
mov
fucom
add
out
or
lds
ret
add
shl
pusha
sub
out
xor
add
push
mov
fwait
stos
frstor
inc
xor
xchg
scas
mov
into
adc
mov
sub
dec
dec
add
lahf
push
ret
add
xchg
shr
cmp
std
fwait
mov
add
add
inc
add
aam
jl
mov
mov
pop
add
xlat
dec
mov
mov
sbb
jnp
inc
adc
mov
jl
fiaddl
js
sbb
xchg
mov
std
mov
mov
and
inc
sbb
dec
sub
into
pop
fldt
add
fnstsw
rcrb
aad
mov
xchg
andb
or
popa
pushl
data16
adc
test
add
out
add
lock
dec
into
add
xchg
movb
xchg
mov
xor
add
stos
loope
pop
add
add
stos
pop
adc
lods
xlat
mov
push
mov
iret
pop
push
mov
rcrl
jp
add
lods
pop
out
xor
mov
add
pop
nop
jg
jmp
cs
add
hlt
mov
mov
add
fisubrl
in
and
pop
and
rcll
xchg
mov
movsb
mov
mov
add
mov
mov
push
add
ljmp
cmpsl
add
orl
addb
rol
das
cltd
rorl
push
cmp
movsb
js
add
mov
and
cmp
lods
xorb
fsubrl
cli
shl
lldt
mov
push
sbb
pop
adc
push
sub
add
out
test
pusha
sbb
loop
ja
test
fiadds
popa
cmp
push
and
adc
sbb
fildl
jo
mov
xchg
ja
rorl
aad
add
dec
mov
xchg
aas
add
in
ret
bound
dec
shlb
js
jae
add
adc
lea
int
jl
je
push
in
add
outsl
adc
cmp
scas
xchg
cmc
xor
sbb
push
inc
sub
int3
or
add
dec
test
sub
je
add
movsb
mov
fidivs
jl
add
test
and
adc
and
dec
sbb
xlat
std
sbb
push
std
mov
jecxz
and
dec
seto
mov
cld
out
test
shll
lock
imul
aaa
add
lahf
popf
lret
outsl
neg
addb
nop
dec
jo
bound
mov
rolb
mov
and
pop
add
arpl
inc
fld
loopne
fimull
add
out
cmpsb
pop
or
jnp
pop
add
mov
sti
dec
mov
shlb
fmull
push
cld
mov
in
leave
test
scas
loopne
push
sub
sarb
add
hlt
insl
push
xchg
cmp
pop
and
fdivrl
sbbl
fisubrs
dec
mov
and
or
cmp
cld
insl
scas
pusha
mov
lods
sub
jge
inc
cmp
xchg
movsl
std
in
sbb
cmp
js
sub
xchg
test
xor
mov
sub
and
ljmp
jmp
push
stos
mov
pop
add
test
dec
sbbl
dec
lds
addr16
inc
addb
sub
pop
add
or
lock
shlb
loop
add
pop
mov
mov
cld
push
xchg
add
iret
stos
into
dec
and
movb
inc
mov
or
pop
dec
dec
cmp
and
mov
test
filds
inc
cmpsl
and
aad
jae
mov
pop
popa
dec
push
or
pusha
imul
test
jmp
inc
loopne
aas
aam
add
aad
call
nopl
mov
int
add
adc
cmp
arpl
rorl
sub
cli
pop
push
xor
rorl
mov
movsb
fimull
fs
out
ret
pop
and
push
ds
inc
nop
lock
inc
dec
sbb
lods
mov
push
mov
inc
cmp
mov
add
adc
cmpsb
test
les
sbbb
push
add
adc
cmp
cmp
jmp
imul
add
mov
dec
ret
jle
fisttpl
loop
pop
repnz
test
inc
pop
mov
mov
fwait
sub
nop
cmp
test
add
fidivrl
outsb
jns
push
and
pop
sbb
push
mov
mov
pop
add
fdivrs
push
mov
rorl
add
jecxz
cmp
mov
sbb
imul
jo
in
sub
jne
test
arpl
cs
lock
xor
and
adcl
add
xor
jo
scas
add
jb
bnd
add
cmp
aam
cs
loop
xchg
cmpsb
or
xchg
ret
out
add
sbb
pop
or
or
inc
subl
pop
xchg
cmc
aam
xor
or
ljmp
popl
inc
sarl
pop
mov
add
pop
dec
mov
adc
add
push
jo
ds
sbb
or
push
pop
mulps
pop
xchg
mov
ljmp
jns
pop
stc
jae
add
mov
and
add
call
sbb
into
add
movsb
ss
hlt
pop
mov
int3
mov
testb
push
fwait
add
mov
jnp
jo
xor
daa
scas
test
push
faddl
sub
bound
stc
loopne
dec
cld
mov
gs
in
dec
flds
std
into
inc
movups
xor
xchg
xor
mov
scas
mov
cmpsl
jp
jg
in
sbb
psubusb
jns
outsb
cmp
pop
mov
and
in
or
mov
and
dec
jge
ljmp
pop
and
add
xor
hlt
mov
lea
add
iret
popa
jae
push
add
lret
mov
cmp
xchg
ret
imull
cltd
loop
mov
push
pop
jb
arpl
iret
add
movsb
sub
adc
inc
les
and
add
sbb
xchg
xor
pop
xor
jne
sub
mov
repz
add
and
lret
adc
sub
xchg
add
mov
mul
adc
mov
push
rolb
nop
cmp
sbb
inc
and
out
push
add
inc
into
inc
ss
jle
and
iret
xchg
add
add
fldl
sbb
pop
sub
xor
pop
add
jecxz
push
fwait
or
ret
add
push
xor
lcall
push
sbb
or
mov
clc
mov
adc
sbb
bnd
xchg
push
push
movsl
jae
icebp
mov
test
xchg
fs
lret
movsb
and
add
sbb
fsubrl
adc
xchg
and
add
sub
jbe
xchg
lods
lret
fiaddl
add
pop
inc
sbb
insl
pop
enter
unpckhps
and
test
loope
add
and
cmc
add
mov
aaa
add
and
mov
mov
cld
cmpsb
add
push
movsl
out
arpl
jno
stos
xchg
test
and
xlat
add
dec
sub
cmp
add
ret
dec
xchg
out
or
out
scas
jnp
nop
adc
cmpb
sbb
inc
sbb
enter
and
mov
call
sbbb
cld
pushf
or
ret
out
lcall
inc
sbb
xlat
sbb
xchg
mov
add
adc
addr16
pop
imul
fstp
sbb
aaa
mov
roll
or
or
add
movsl
sahf
cmp
test
mov
add
xor
movsb
pop
std
xchg
add
pop
shlb
int3
lahf
adc
cwtl
movsl
xchg
pushw
test
dec
inc
xor
mov
add
fwait
add
mov
pop
and
pop
xchg
jno
jg
dec
in
testb
inc
out
das
fldenv
pop
test
ret
enter
test
adc
scas
int3
cmpsl
jmp
loope
xchg
roll
dec
mov
xor
lcall
add
scas
dec
bound
test
dec
gs
xchg
push
or
or
jecxz
dec
movsb
loope
clc
inc
fwait
add
xchg
sub
fdiv
out
sbb
rcl
pop
fisttpll
movsb
mov
mov
testb
pop
call
leave
mov
sarl
and
sbb
cmp
rcrb
jle
xchg
and
mov
xor
add
sub
cmp
lahf
push
add
inc
sub
xchg
jo
nop
add
sbb
les
stos
push
dec
int3
push
xchg
pop
in
outsl
pop
add
mov
push
xor
push
sub
faddl
shlb
xchg
in
sar
jo,pn
arpl
pop
lcall
xchg
mov
cmpsl
sbb
incb
push
adc
mov
stc
sbb
adc
cmc
std
add
test
xor
pop
adc
sbb
push
nop
vmwrite
fcompl
jbe
mov
movsb
push
mov
cmpsl
sbb
sub
fwait
shlb
add
or
hlt
xchg
jmp
mov
and
adc
rcll
subb
cwtl
jbe
jle
mov
lcall
cmpsb
add
add
and
call
sub
push
and
cmp
lods
sti
push
mov
daa
add
outsb
pop
lcall
mov
je
sti
leave
add
clc
jo
stos
ret
jbe
pop
push
cmp
add
shr
testl
test
out
cmp
jge
dec
mov
mov
adc
cwtl
sbb
xorb
sub
test
mov
stos
sbb
imul
test
inc
add
jl
cmp
add
sahf
or
jle
popf
sbb
loopne
mov
or
jmp
and
mov
or
cmp
and
add
lcall
outsb
add
sub
cmp
pop
lock
or
out
add
push
jl
movsb
mov
dec
mov
cmp
leave
xor
out
cmpl
cld
fsub
stos
xchg
mov
repz
cwtl
sub
in
les
cmp
jl
jecxz
mov
aad
mov
cmpsl
add
dec
je
adc
sub
xchg
mov
jg
add
and
adc
cmp
cwtl
cld
push
push
and
punpckhbw
mov
pop
mov
lfs
cs
mov
sbb
out
test
hlt
mov
enter
adc
sub
imul
adc
mov
ss
cmp
hlt
je
add
xchg
mov
xor
push
dec
and
aad
add
int3
xchg
push
push
adc
add
and
pop
fnstsw
out
jg
loope
pusha
jo
mov
mov
mov
sti
and
cltd
inc
jno
jmp
jbe
pop
lret
pop
leave
add
and
inc
sbb
fidivl
lea
clc
mov
adc
sub
scas
add
dec
mov
outsb
dec
pop
popf
insb
inc
icebp
cld
xor
jno
test
add
movsl
loope
popf
cmp
cmpsl
cmp
dec
or
jb
adc
mov
ljmp
dec
xor
dec
and
sbb
push
mov
cmc
cwtl
push
push
loopne
mov
pop
outsb
ret
fldenv
shl
pop
sti
add
cltd
dec
jne
in
add
cwtl
cmc
bound
mov
addr16
aam
das
push
loop
clc
sub
pop
adc
lods
addr16
jnp
int3
in
jge
jl
mov
sub
sti
shll
xor
mov
add
repnz
lds
or
fs
mov
repz
add
push
adc
sbb
add
je
lods
or
mov
loop
push
cld
xor
sbb
sub
mov
add
sbb
pop
scas
faddl
add
lock
ret
dec
jg
push
inc
adcb
pop
and
aad
cwtl
test
add
xchg
cmpsl
lds
insb
je
loopne
dec
pop
push
dec
pop
jg
loopne
mov
mov
xchg
pusha
mov
movsb
icebp
push
sbb
xchg
fadds
or
rclb
enter
add
push
mov
jno
mov
loopne
add
and
pop
add
aas
movsl
or
mov
fcompl
jge
sbb
clc
cmp
dec
jge
sbb
fs
pushf
loopne
sahf
xlat
push
adc
mov
or
xchg
add
and
movsb
mov
jne
jp
add
bound
jp
adc
sbb
or
dec
xor
cmpb
adc
xor
ljmp
mov
pop
fwait
stos
add
and
sbb
cmp
mov
jo
add
lea
xor
mov
adc
add
fwait
js
sub
push
jb
es
dec
loope
jl
stc
and
mov
out
nop
lret
call
repnz
stos
je
sbb
push
inc
lods
add
mov
inc
test
adc
xchg
jb
jbe
add
cwtl
out
jae
popa
add
sbb
loop
jg
dec
insb
xor
add
add
sub
mov
adc
scas
inc
sti
movl
inc
cmp
dec
mov
sub
or
out
rcr
add
push
movsb
jo
pusha
addr16
adc
mov
stc
xor
xor
arpl
das
and
mov
addl
add
das
movsb
out
jg
dec
outsl
add
ret
jae
jmp
ficompl
add
inc
loopne
icebp
sbb
iret
adc
xor
sub
cs
scas
popf
int
loopne
int3
mov
and
call
push
stos
dec
or
fnstenv
add
loope
cmc
test
or
mov
add
or
test
pop
call
xorb
lret
dec
bound
xor
pop
inc
add
out
sub
and
cs
in
push
and
add
mov
push
adc
add
mov
jb
lods
jmp
pop
enter
jns
jmp
push
mov
lods
out
test
push
dec
pop
mov
sbb
add
call
div
gs
loop
adc
pusha
lock
jg
add
shlb
jo
jl
jae
sbb
or
cmp
adc
lods
cwtl
add
pusha
jl
add
lock
cltd
pusha
mov
sarb
repnz
jl
and
mov
lods
rcll
lret
adc
icebp
xchg
or
cli
jp
mov
sbb
popf
ja
add
xchg
cmpsl
sbb
sarl
add
dec
sub
hlt
aaa
add
xlat
lock
adc
or
call
adc
aas
cmp
inc
pushl
divb
cmp
xchg
jmp
movsb
movsb
ficoml
add
mov
add
out
inc
add
neg
dec
outsl
cwtl
mov
sub
pop
inc
sub
sbb
insb
jns
jne
push
pop
mov
push
inc
mov
xchg
sbb
mov
call
inc
lds
mov
scas
cmpsl
rclb
mov
or
aad
mov
push
mov
loopne
pop
test
inc
rcl
mov
sbb
stc
mov
icebp
xor
jecxz
push
pop
add
push
pop
and
sbb
out
cmp
stos
int3
and
cwtl
repnz
aam
aaa
shll
je
lss
push
push
test
lret
aas
adc
aad
inc
call
add
jae
add
lret
or
jno
cltd
add
lods
lcall
dec
aas
jg
push
jo
or
loope
or
jo
add
arpl
out
or
cmc
pusha
repz
add
cltd
cmp
les
scas
lret
ja
out
cli
add
add
cld
jmp
add
lahf
shlb
nop
lock
hlt
fwait
aam
test
les
es
sqrtps
jae
dec
cs
mov
mov
movsl
pop
push
adc
insb
roll
lret
lods
mov
ja
cs
mov
add
negb
dec
mov
repz
lods
add
nop
scas
mov
adc
push
sarl
jp
loope
sbb
cmpsb
pop
xor
test
subb
add
jg
pusha
daa
push
mov
add
dec
shlb
xchg
cmp
adcb
fsubs
jecxz
add
jne
sbb
out
aas
pusha
push
mov
dec
push
jge
ljmp
ret
ja
fs
mov
popa
push
loopne
add
stc
mov
out
add
sbb
fwait
dec
lds
rolb
mov
jbe
movsb
dec
jle
adc
out
xor
bound
fsub
and
popa
shrb
dec
lret
mull
ss
add
push
aas
dec
mov
xor
pop
shll
rclb
daa
nop
lahf
adc
dec
jne
mov
mov
sbb
aas
fcmove
arpl
xorl
jae
repz
xor
popa
test
mov
cmpsl
push
sbb
cmp
and
sahf
data16
add
out
test
mov
movsb
and
cmp
pop
pop
leave
sub
enter
inc
and
daa
gs
enter
sbb
shrb
data16
repz
push
pop
fldcw
xor
dec
cs
je
add
jmp
xchg
data16
add
mov
cmp
or
add
incl
icebp
enter
xor
lods
aaa
mov
add
add
lea
cmovge
or
xor
inc
inc
repnz
mov
insl
jbe
in
push
cmp
mov
in
and
lahf
cld
clc
cmp
out
sub
ljmp
mov
adc
cmp
sbb
out
push
add
fiaddl
mov
scas
add
jmp
sub
sarl
in
mov
std
fstpt
movsb
mov
or
pop
push
dec
std
push
xchg
xor
fwait
push
cmp
sbb
rolb
xor
cmp
mov
in
dec
adc
mov
lock
aas
xchg
sbb
lods
movsl
push
or
cmp
jno
lds
enter
cmpsl
add
popfw
daa
adc
and
xchg
dec
cmp
mov
cmpsb
adc
or
inc
add
jno
sbb
cmp
les
jno
or
fisubs
add
movsl
add
decl
cmpsb
add
cmovb
es
add
loopne
rorb
cld
inc
add
or
jge
add
push
xor
and
sahf
mov
repz
add
and
aaa
cmp
adc
add
lahf
mov
add
pushf
aam
insb
add
add
xchg
mov
fmuls
or
inc
out
int3
nop
mov
mov
add
std
rcll
js
rclb
pop
scas
xor
push
cli
int
sar
add
mov
push
xchg
pop
out
cmp
jns
xor
mov
lcall
lods
push
add
push
fsub
add
insb
pushf
sbb
inc
cld
cmc
sbb
incb
not
add
jmp
add
stc
jecxz
sub
jl
fsubr
fdivrl
xlat
insl
pop
scas
imul
jge
mov
push
pusha
lods
int
xchg
mov
pusha
push
stc
sbbb
std
jp
sub
jmp
ror
sbb
add
and
push
inc
add
mov
jmp
dec
fcompl
push
int3
inc
ds
sti
mov
dec
pop
movsb
mov
sbb
lea
adc
insl
add
pop
sbbb
test
xchg
adc
rolb
ds
fnstsw
jo
add
pushf
xchg
cmp
cmp
roll
inc
repnz
add
call
jmp
push
xlat
jae
mov
fadds
add
fstpt
dec
in
cld
jnp
xchg
mov
lret
repz
in
out
jge
add
leave
mov
mov
hlt
movsl
add
lock
mov
adc
mulps
dec
or
fldl2t
add
fsubl
fadds
jg
xchg
sahf
scas
test
cmp
imul
test
push
ss
out
les
inc
ljmp
sub
xchg
sbb
jp
mov
jo
daa
insl
pop
aad
movsb
test
cmp
rolb
jae
inc
mov
pop
push
sub
sbb
popa
cmp
mov
loopne
outsl
fisubrs
fisubl
push
mov
std
cs
xor
loopne
test
jecxz
repnz
or
inc
xchg
rolb
data16
lock
lock
loope
outsb
lock
push
inc
add
les
jno
pop
negl
adc
pop
test
jae
add
outsl
pusha
jne
rorb
pop
mov
and
push
sti
ret
add
lods
mov
inc
add
pop
sbb
and
add
pop
pop
iret
imul
out
mov
lods
sub
pop
add
clc
int
icebp
aam
or
jle
add
cmp
arpl
jo
sbb
mov
cltd
outsb
push
or
sub
into
and
call
push
jb
fisubs
lcall
fildl
sbb
xlat
stos
sbb
jb
aad
pop
into
pop
push
mov
fwait
jae
cmp
out
ljmp
dec
dec
loope
call
xor
and
mov
mov
repz
gs
xor
fsts
sahf
jl
dec
mov
js
push
aaa
fbld
add
in
mov
cmp
sbb
push
and
mov
jg
jne
out
sub
push
jns
adc
cmc
mov
add
stc
jne
daa
dec
cmp
lret
imul
inc
add
fistpll
sub
add
cld
sar
push
data16
pop
aas
and
fs
int
cmpsb
push
xchg
icebp
pop
inc
sbb
clc
cmc
negb
pop
pop
push
add
loope
xor
rorl
jg
add
popa
sub
in
add
neg
mov
dec
and
dec
push
mov
jmp
ror
into
sub
add
enter
addl
jecxz
or
pop
xor
arpl
mull
lods
mov
pushf
pop
aam
shl
mov
push
and
inc
out
mov
push
outsb
jg
inc
or
cmp
or
shll
jg
fnstenv
cmp
add
daa
loopne
jbe
in
mov
mov
scas
sbb
cmp
xchg
lea
push
cld
add
adc
cs
push
mov
xor
mov
jecxz
loopne
mov
and
xor
mov
cmp
cmp
add
cmp
cwtl
sub
xor
aam
add
lock
std
int3
or
and
add
movsb
jbe
mov
inc
sbb
push
int3
subb
dec
outsl
pop
sbb
rorl
adc
sbb
lds
and
mov
mov
add
cwtl
orb
add
inc
lods
clc
fwait
test
cmp
inc
enter
cmp
ss
jmp
jle
in
rolb
shrb
lds
stos
jno
testl
xor
xchg
add
test
data16
or
aad
popa
movsb
jno
loop
add
sub
and
je
leave
insb
xorl
mov
push
repz
add
cs
inc
add
nop
shl
xchg
add
rcr
adc
xor
in
add
loope
hlt
mov
add
popa
ljmp
nop
xchg
or
cmp
out
mov
fwait
shl
mov
fsubrl
hlt
mov
dec
clc
jae
aas
pop
ja
jo
sub
push
adc
and
xchg
xor
mov
jle
dec
movsl
xchg
insl
jno
or
in
add
push
xchg
repz
fildll
push
stos
add
bswap
out
adc
or
pop
dec
fnstenv
insb
pushf
rolb
mov
or
cwtl
lock
add
cs
ret
cld
cli
mov
mov
fnstcw
incl
push
ficoml
jae
sbb
add
jecxz
push
and
adc
and
loope
imul
js
push
or
insl
sbb
adc
pop
add
mov
add
movsb
lods
cmpsb
xor
aad
and
fbld
lods
push
das
adc
lahf
mov
add
mov
sub
add
stos
sahf
pop
add
pop
push
add
insl
and
jmp
popf
in
cli
add
xor
int
xor
lcall
or
insb
jne
sbb
adc
mov
xchg
jns
das
repz
sbb
dec
cmp
push
mov
add
mov
pusha
popa
movsl
jnp
in
lock
ss
push
cmp
sysret
mov
stc
mov
sbbb
xor
sub
sbb
cltd
push
xchg
rorb
pop
sbb
hlt
push
push
lock
into
scas
pushf
shlb
mov
shlb
mov
addb
mov
arpl
pop
push
xor
rcrl
xor
mov
out
push
pusha
xlat
dec
sti
add
movsb
leave
add
scas
int
aaa
add
pop
push
mov
add
mov
rclb
fsubrs
mov
out
push
stc
in
sbb
enter
lahf
insb
push
jl
add
and
add
fadds
lret
add
or
insl
add
cmpsl
jae
add
sub
imulb
push
dec
iret
and
add
sbb
pop
add
xchg
nop
push
imul
sbb
loopne
mov
add
pushf
mov
cmpsl
mov
mov
stc
or
inc
pop
in
sahf
add
int3
das
loope
ss
push
lods
mov
mov
jge
clc
call
xor
js
pushf
enter
rcrl
add
mov
sbb
pop
xor
and
pop
pop
push
jne
loopne
insl
cmp
cmp
inc
add
xchg
mov
repnz
add
adc
mov
sub
pushw
or
add
jmp
subl
mov
and
or
push
add
sbb
sub
xor
push
cmpsb
sbb
push
and
mov
ret
hlt
pop
mov
loopne
and
out
adc
out
fwait
dec
cltd
push
and
pop
and
icebp
mov
mov
xchg
add
adc
scas
shrb
or
aas
mov
cwtl
cmpsb
push
repnz
cltd
testl
mov
jmp
mov
mov
adc
pop
jns
mov
mov
sub
mov
xor
xchg
shlb
mov
outsl
add
pop
inc
dec
movsb
xchg
add
mov
push
mov
add
add
add
cmp
jp
js
add
jns
add
int3
inc
scas
ds
xchg
mov
or
mov
inc
xchg
xchg
add
mov
mov
add
push
jle
or
mov
add
inc
mov
pop
shl
add
jmp
rcrl
lods
inc
dec
decb
mov
jle,pn
shlb
dec
sub
sbb
cmp
mov
jg
cli
jecxz
in
xchg
cmp
and
in
sbb
inc
in
lea
push
lcall
cmp
cmpsb
iret
rclb
mov
adc
outsl
scas
xor
imul
sbb
cli
dec
test
mov
or
pop
cmp
sub
lds
std
add
jne
ss
xchg
push
dec
and
jns
lahf
jge
or
test
ror
lret
out
xchg
outsl
fstps
add
jge
sub
add
test
dec
popa
mov
test
ret
rorb
adc
inc
mov
jno
mov
inc
add
negb
jbe
mov
push
add
xlat
and
add
push
fdivrs
or
aas
xor
lea
pop
or
adc
add
pop
and
mov
mov
sbb
add
push
jne
add
mov
pop
jo
cmp
test
sbb
xor
out
xchg
or
jmp
enter
sub
adcb
lret
inc
mov
cmp
nop
pop
cmp
inc
out
xor
and
lods
cmp
mov
xor
cli
mov
sbb
inc
add
scas
jns
dec
popf
or
dec
mov
insb
aam
enter
sbb
jno
jmp
dec
pop
sbb
ret
adc
jp
pop
push
mov
mov
lret
push
add
sbb
sub
add
ret
sub
lods
pop
inc
lret
push
dec
sbb
xor
cmpb
shlb
das
add
and
arpl
mov
aaa
add
jg,pn
mov
jno
pop
cld
mov
add
inc
fstpt
enter
cli
mov
or
add
lcall
pushf
cmpb
int3
add
adc
imul
dec
ljmp
add
out
jg
or
daa
add
int3
shlb
sarb
sbb
ret
pop
cmp
sub
sub
sbb
sub
mov
add
shll
rolb
xchg
ror
in
adcb
nop
das
sti
mov
pusha
pop
mov
add
ds
in
xor
ja
mov
cmp
sbb
lcall
js
add
frstor
add
fistpll
movsl
jbe
push
aam
data16
sbb
add
adc
or
imul
aam
fistps
test
or
and
add
lahf
mov
add
fistps
mov
xor
jb
mov
aas
cs
sub
add
dec
cmp
in
addr16
xchg
shl
jg
wrmsr
push
insb
loopne
scas
lods
xor
add
sbb
dec
add
pop
and
mov
mov
inc
sbb
sub
add
aas
cwtl
mov
andl
pop
mov
lock
stc
mov
push
push
cmp
or
lret
scas
in
add
fdiv
add
xchg
sub
emms
jecxz
cli
sub
imul
push
xlat
mov
add
xor
xchg
lahf
dec
sti
add
cmpsl
sbb
add
cmp
xor
in
add
scas
mov
add
nop
pop
push
xlat
xor
movsl
pop
int
fwait
add
xor
dec
jo
aam
add
or
cltd
arpl
test
dec
hlt
idiv
or
in
sbb
push
and
nop
add
adc
icebp
lcall
jnp
add
push
mov
add
bound
jne
iret
rolb
test
in
mov
sub
pop
rsqrtps
pop
ljmp
mov
or
xor
or
and
aad
cld
fs
add
insb
es
push
cmp
add
add
jno
test
jp
inc
push
sub
xor
adc
cmp
into
jne
jae
jge
add
hlt
cld
sbb
lea
add
int
pop
add
divb
aad
sbb
out
cwtl
cmpsl
sbb
pop
popf
or
cmp
fs
cmpsb
add
push
cmovge
imul
mov
fsubs
mov
addb
jl
outsb
daa
ljmp
add
push
adc
xchg
mov
mov
mov
ja
xchg
xor
add
jge
shlb
enter
stc
lret
lock
mov
dec
add
add
and
add
jl
les
dec
sbb
loopne
xchg
add
sar
std
add
cmpsb
mov
lods
sub
sub
xchg
in
dec
test
cmp
push
mov
and
mov
cmp
jp
add
les
pop
lds
mov
cld
mov
stos
fsubrs
lahf
movsl
or
shrb
jnp
mov
ficomps
add
cld
rol
and
roll
adcl
add
push
incb
push
loopew
mov
and
fdivr
push
testb
push
das
je
repz
fwait
xchg
inc
add
sbb
jnp
sbb
push
push
dec
bnd
lret
rorl
fnstenv
mov
bound
loopne
add
push
dec
test
add
js
and
je
jle
add
rcrb
add
add
addr16
sbb
fldl
xlat
mov
pop
aad
and
jmp
dec
outsb
xchg
sbbl
dec
leave
mov
cmpsb
jnp
jne
pop
scas
rclb
ret
xchg
pop
add
test
jo
add
cmp
out
call
lret
cmpsl
adc
dec
sub
cli
jp
rclb
sar
inc
mov
int3
gs
insb
jmp
loop
inc
cmp
add
mov
sbb
dec
mov
adc
pop
pusha
imul
and
es
dec
dec
jbe
push
imul
add
bound
inc
test
add
mov
sar
call
fistpl
sbb
push
pop
adc
pop
das
add
out
rorl
add
sub
loop
dec
mov
je
scas
dec
cs
pop
push
inc
mov
push
push
dec
jl
add
cmp
iret
lcall
mov
popl
cltd
push
loope
and
mov
lcall
push
test
fst
inc
shr
rcll
lcall
mov
lock
jb
iret
pop
or
or
enter
mov
jae
cmp
data16
pop
inc
or
clc
add
sub
popf
add
cmc
pop
mov
sar
dec
add
sbb
dec
in
cmp
lahf
filds
lds
gs
mov
pop
shlb
xor
jb
sub
ret
add
push
lahf
mov
pop
mul
add
mov
ljmp
mov
mov
ret
jecxz
stc
lock
push
loopne
cmc
jmp
out
imul
imul
dec
pop
in
add
or
mov
ret
add
lret
and
fdivrs
mov
fdivrl
jno
mov
pop
cli
xchg
mov
pop
push
jb
or
into
push
push
ja
cwtl
add
sti
loopne
push
mov
jge
jmp
fldenv
es
cmc
fldl
aad
jnp
inc
bnd
add
cli
test
addb
sarl
aaa
cli
std
add
into
stos
insb
gs
cmp
in
repz
fisttpl
dec
jo
pop
pop
jg
iret
adc
in
and
jl
add
fnstenv
push
add
std
fcmovnb
test
adc
imul
adc
or
int3
push
add
cs
aaa
roll
flds
sbb
or
and
push
sbb
lods
popa
xor
cmpsb
lcall
add
aam
adc
mov
test
pop
subl
xorb
fsub
dec
add
cli
rcrb
int
xchg
lcall
or
loope
cwtl
sub
and
out
inc
add
addr16
push
add
xor
pop
pop
mov
cmp
mov
sarb
loop
inc
popa
xchg
arpl
or
mov
insb
enter
hlt
cmp
jns
in
les
jnp
cmp
imul
mov
in
rcll
adc
or
js
sub
xchg
add
mov
inc
fdivl
add
mov
dec
popa
xor
pusha
jl
pop
lahf
aas
add
sbb
push
mov
add
ss
cmp
setbe
repnz
in
lahf
pop
lret
add
mov
sub
mov
pusha
popf
scas
adc
sbb
fsubs
xchg
add
mov
or
loop
xchg
lret
int
inc
adcl
push
fwait
js
mov
sbb
sbb
add
pop
add
mov
pop
out
mov
mov
out
add
add
pop
push
scas
pop
inc
repnz
add
ret
rol
pop
je
adc
cld
add
add
adc
mov
pop
xchg
fistl
nop
repnz
push
cmp
pop
mov
lret
mov
pop
add
mov
shrb
test
push
push
add
mov
add
mov
xor
push
lock
incl
jno
add
xchg
or
jg
mov
shlb
or
xor
add
add
push
cmp
decl
lds
sbb
push
add
sub
psubsb
fisubs
sbb
leave
decb
add
push
sub
popa
mov
add
mov
out
mov
add
or
xchg
fs
inc
rcrl
subb
bound
pop
mov
fsubrl
or
jg
lods
jb
push
cmp
mov
inc
lret
ja
jmp
xor
cmpb
and
and
sets
mov
mov
add
insb
rcrb
adc
mov
push
es
pusha
sahf
adc
lret
xchg
ret
in
rolb
pop
outsl
mov
mull
xchg
add
push
insl
movsl
add
imul
xor
push
push
sbb
mov
add
sub
imul
mov
add
sbbb
test
jo
repz
mov
out
sbb
xchg
mov
inc
enter
or
jp
add
jl
mov
shrb
xor
out
stos
mov
xchg
loop
ret
push
cmp
mov
lahf
cmpb
mov
and
sbb
jnp
adcb
repnz
mov
add
cwtl
pushf
xor
pop
add
imul
push
jmp
add
gs
ds
fists
fwait
ss
rol
and
lfs
xchg
sub
nop
mov
mov
xor
loopne
iret
pop
xchg
add
adc
orb
fnstcw
mov
imulb
mov
cmpsb
mov
imul
adc
les
stc
andb
das
pop
daa
jnp
add
push
jl
and
xor
mov
jo
mov
negb
adc
or
arpl
loopne
jbe
outsb
mov
inc
addl
in
adc
mov
xchg
push
pop
dec
xor
sub
add
mov
xchg
into
lahf
js
rolb
lock
adc
shlb
int
jecxz
mov
inc
in
and
inc
fstps
sub
leave
pop
mov
rolb
dec
and
sbb
pop
inc
jle
adcb
outsb
inc
mov
xchg
push
pop
stc
rorl
xchg
icebp
pop
pusha
xor
es
std
mov
pusha
gs
aas
jmp
add
jmp
jge
adcb
jo
lock
xchg
jbe
mov
cmp
fadds
das
mov
sbb
push
mov
popa
or
push
sarb
add
mov
or
add
arpl
lds
repz
lods
add
inc
pop
push
xor
sbb
aaa
add
mov
lock
jg
pop
inc
add
stos
or
popf
lahf
insl
pop
pop
xchg
adc
fadds
and
mov
adc
mov
add
push
xlat
add
add
movsl
xchg
lods
add
out
xchg
mov
popl
pop
icebp
mov
push
push
push
mov
ret
jle
cltd
rolb
sarb
push
pusha
lahf
xor
jge
cmp
lock
in
fxch
imul
adcl
lods
imul
insl
fcmovb
push
xor
add
int
iret
sarl
push
mov
hlt
push
dec
add
pop
dec
in
add
pushl
in
sub
mov
pop
jns
and
xor
jmp
sub
add
cmp
iret
lret
dec
add
fadds
shrb
aas
and
add
addb
pop
jp
lods
sbb
daa
icebp
pop
adc
mov
ljmp
mov
testl
xchg
sbb
jne
fwait
in
and
dec
jl
sub
fdivs
out
add
xchg
aas
mov
or
and
cmp
jp
faddl
add
nop
pop
adc
add
cs
or
cwtl
sub
add
mov
sub
shll
sub
add
inc
stos
mov
xor
pop
sahf
pop
pop
ljmp
test
std
int3
out
scas
lock
or
je
pop
enter
pop
add
jo
bound
int
pop
cmp
ret
lcall
add
jle
ja
sbb
not
xor
lea
push
enter
add
orb
mov
call
add
pop
fmull
add
fwait
dec
xor
stos
ret
jno
ss
inc
scas
xor
jo
or
movsb
push
rolb
add
mov
add
enter
cmp
add
jecxz
pop
inc
dec
mov
mov
stos
adc
add
clc
xchg
loopne
nop
xchg
mov
loope
imul
lahf
vmovsd
int3
cmpsb
ret
add
outsl
gs
add
pushf
xchg
jmp
lret
pop
fistpl
icebp
sbb
add
es
sbb
inc
push
rcrb
add
add
out
inc
xcrypt-ofb
cmpsl
insl
in
inc
lds
lret
pop
mov
and
popl
mov
int
add
push
aaa
das
cmpsl
add
push
cmp
je
jo
jle
add
mov
loopne
or
int3
loopne
push
je
mov
nop
hlt
jno
es
mov
mov
adc
dec
data16
ficomps
in
in
add
push
mov
shrl
and
cmpsb
je
sub
out
mov
ds
loopne
cltd
enter
add
adc
mov
into
mov
lret
cmp
lea
pushf
adc
sub
add
xchg
add
lods
cwtl
pop
add
add
mov
out
jno
xor
sti
fs
das
jl
add
fdivs
mov
pushw
fldl
jge
in
mov
and
in
adc
popf
pop
pop
das
int
adc
add
into
js
mov
sbb
hlt
lahf
fsubl
adc
xchg
js
push
jae
add
movsl
das
in
add
arpl
push
in
ja
jo
sbb
jns
js
sahf
and
mov
fsts
push
cli
popl
enter
bound
add
sbb
push
icebp
jle
mov
sbb
xor
clc
add
js
add
push
movsl
xor
dec
sub
and
hlt
mov
pop
xchg
inc
xchg
add
lods
sub
icebp
loop
mov
jbe
sbb
in
mov
int3
roll
fidivrs
insb
or
lahf
add
xor
ss
mov
xor
test
or
orl
fildl
push
add
call
int
daa
lods
adc
add
cmpsl
and
mov
pop
mov
xchg
fcoms
xchg
push
pop
addl
add
jecxz
sub
aas
push
jbe
fbld
dec
mov
arpl
and
lock
jnp
add
xor
in
and
add
hlt
or
mov
xor
xor
add
cmp
fsubrs
out
mov
add
or
int3
jb
aaa
cmp
mov
fsubs
jo
int
or
adc
push
push
adc
test
mov
and
mov
lret
or
mov
cld
fwait
xchg
pop
test
pop
aad
popa
jnp
mov
int3
out
je
js
push
std
add
and
jbe
pushf
or
outsb
add
inc
pop
push
dec
inc
popf
add
shr
das
cmpsl
enter
lea
pop
lahf
inc
out
pop
rorl
movsb
fists
dec
pop
std
rcrb
lea
test
bnd
pop
pop
js
addr16
imul
loopne
xor
xchg
mov
jle
pop
fstpl
mov
jmp
xchg
or
mov
loopne
test
and
mov
xchg
push
xchg
ljmp
push
jb
fninit
negl
add
xchg
int3
adc
int3
outsb
lods
add
xchg
jle
ja
jg
dec
cmpsl
xchg
adc
pop
sbb
out
pushf
and
nop
or
push
or
mov
jns
pop
xchg
pop
xchg
pop
mov
in
adc
lcall
mov
and
lds
jmp
aas
js
mov
xchg
and
pop
jo
or
push
add
fidivs
xchg
jl
loopne
mov
flds
mov
xchg
loopne
les
test
hlt
out
pop
push
pop
lcall
xchg
xchg
or
sarb
cmpsb
push
add
xor
pop
popf
lds
cmpsl
add
or
test
loope
pop
out
rolb
mov
pop
movsl
nop
loopne
mov
jns
mov
sahf
mov
pop
cmp
shrb
call
movsl
sbb
stos
loopne
movsb
outsb
push
iret
jae
inc
pushf
test
add
push
sbbl
adc
in
or
fsubs
in
jmp
fs
loope
add
test
jo
lea
cmc
ret
mov
or
add
cltd
xor
cmovo
or
mov
fldt
cli
add
cs
xchg
pop
stos
clc
jns
cmp
pushf
dec
sbb
lods
aas
cmpsb
out
roll
xor
mov
add
xchg
lretw
inc
lret
add
sbb
imul
stos
cmp
mov
adc
inc
sub
out
stc
inc
and
add
in
mov
loop
add
int
or
cmp
in
into
jnp
add
aas
dec
add
cmpsl
pextrw
inc
mov
loopne
xorb
mov
xchg
je
ja
shr
mov
jae
adc
sbbl
push
dec
inc
dec
mov
ljmp
and
nop
loope
xor
sub
sub
leave
mov
add
mov
movsb
aam
jecxz
inc
or
xchg
add
adc
ror
jae
cmpsl
mov
push
lahf
adc
sub
repnz
mov
jmp
mov
and
fdivrs
push
adc
idivl
sar
out
mov
mov
push
mov
clc
fwait
add
pop
int
into
xchg
mov
cmp
repnz
mov
and
xor
inc
xor
mov
xchg
push
mov
cmp
addb
xchg
xor
mov
scas
fistl
test
fwait
sbb
pop
int
fs
enter
pushf
jno
int3
out
idiv
add
jle
cmp
mov
xchg
push
cmp
add
push
mov
aas
add
inc
loope
add
rorb
dec
add
cmc
sub
mov
icebp
sub
fnstsw
ja
xchg
or
filds
fldt
stc
cltd
les
int
repnz
adc
push
ljmp
pop
sub
fidivrl
notb
insl
or
add
xlat
lock
aaa
out
and
das
inc
dec
enter
jnp
int3
sarb
pop
push
popa
jle
mov
push
push
inc
cli
xor
push
cmpl
xor
adc
pushl
push
shrb
sbb
pop
sbb
mov
lcall
out
test
les
jb
or
add
or
add
mov
pop
je
add
inc
lret
mov
inc
in
sbbl
add
fwait
add
std
shl
mov
jg
add
data16
pushf
cmp
int3
pop
dec
pop
repz
es
jns
mov
jl
push
adcb
test
ja
add
dec
lds
jnp
mov
scas
sbb
dec
mov
dec
rolb
cld
jnp
mov
pop
sahf
xchg
out
ja
test
in
insl
cmp
push
mov
data16
inc
lock
fsubs
add
jns
mov
sbbl
pop
add
push
add
test
into
fstcw
lds
fimuls
gs
ret
stc
add
into
fcmovne
adc
cmp
add
sub
movsb
push
jl
pop
mov
pop
adc
add
adc
jecxz
pop
sbb
push
xor
mov
dec
leave
jae
outsb
pop
add
std
out
in
shrb
add
xor
cli
xchg
je
test
adcb
imul
popf
sbb
push
lods
hlt
pusha
mov
ret
pop
out
xchg
ja
xchg
pop
inc
sbb
mov
sub
js
inc
pop
add
aam
fisubs
int
or
add
test
add
in
mov
shll
adc
jbe
inc
stc
add
pop
enter
repnz
into
stos
jbe
ja
test
js
adc
adc
pop
or
stos
jns
add
sbb
daa
jns
sbb
loopne
bound
sbb
test
addr16
and
cmp
and
fldl
iret
jp
fs
in
push
add
sti
mov
add
hlt
add
out
add
cmpsb
xor
xchg
xchg
add
aaa
out
icebp
push
nop
dec
pop
mov
cld
bound
iret
popf
clc
mov
loop
push
nop
fsts
cmp
ja,pt
ret
popf
stos
jne
hlt
jmp
mov
mov
pop
jno
sbb
or
xchg
adc
push
jo
mov
test
and
orb
jg
or
dec
mov
xchg
xor
pop
fcoml
add
and
cli
dec
dec
push
add
and
and
faddl
xor
sbb
sbb
push
test
xor
mov
adc
ret
jl
rcrb
add
push
ret
and
imul
mov
sub
adc
loopne
jbe
add
mov
and
mov
or
pop
movsbl
add
out
das
fistl
orl
int
enter
sub
repnz
std
push
adc
mov
js
add
and
inc
test
add
pop
cmpsb
sbb
popa
sub
mov
sarb
add
jmp
xchg
adc
push
loop
add
imul
push
sbb
aas
loopne
add
call
mov
jb
or
lods
cmp
sahf
add
mov
ljmp
sbb
aas
dec
scas
add
sbb
clc
or
or
add
vshufpd
ret
jg
mov
stos
lret
out
adc
icebp
hlt
xchg
insb
dec
push
ret
lfs
adc
sub
mov
pop
adc
mov
add
pop
lods
mov
pusha
movsl
sub
fcomps
and
mov
mov
mov
or
push
cwtl
mov
test
ds
sbb
add
data16
movsb
sbb
pop
jle
in
cli
nop
jo
mov
push
aas
stc
xchg
cmp
jbe
mov
or
enter
add
push
push
scas
cwtl
pop
outsl
ss
adc
pop
or
add
scas
push
into
push
lcall
incb
fnstsw
sbbb
xor
xor
and
popa
and
leave
pop
cmpsl
pop
sahf
cmp
cmpsl
push
cmpb
hlt
cmp
roll
xor
lock
ss
sbb
push
mov
add
inc
mov
pusha
and
out
sbb
rcrb
aad
fdivrl
out
cmp
movsb
imul
iret
lret
sub
mov
push
mov
inc
xchg
ret
mov
repnz
cmc
in
roll
mov
mov
add
pushf
xor
inc
ret
clc
xchg
cmp
test
mov
mov
lea
hlt
movsb
push
sub
int
in
mov
push
jo
sub
addb
std
mov
sarb
jg
push
inc
lret
xor
or
fcomps
in
sub
jno
push
mov
sub
popl
dec
jo
jecxz
push
jno
call
pop
clc
sub
xchg
fwait
and
je
dec
ds
adc
and
push
sete
fiaddl
mov
add
cmp
pop
roll
call
mov
or
and
xor
shrl
push
and
movsb
push
scas
lret
loopne
mov
ficomps
add
sti
int
mov
inc
pop
out
adc
ret
add
adcb
jl
in
mov
jbe
ds
lea
mov
fldlg2
and
cld
or
imul
lcall
je
push
add
adc
sub
pop
in
stc
fwait
push
fsubs
add
jnp
xlat
or
enter
lret
addl
pop
mov
and
into
dec
inc
sti
add
stos
jp
or
mov
dec
ds
ret
sarb
mov
or
sub
mov
add
adc
outsl
add
ret
mov
sbb
adc
mov
test
push
add
imul
add
mov
das
rcrb
add
cli
dec
mov
rcrb
fiaddl
bound
jbe
or
and
jecxz
inc
xor
xchg
sbb
xchg
add
adcb
fisubrl
pop
add
jg
add
mov
loopne
or
sub
mov
out
loop
jmp
inc
mov
jae
sbb
push
mov
andb
cmp
mov
push
push
or
sbb
pop
imul
sbb
add
popf
out
nop
cmpsb
inc
sar
jmp
das
jae
push
mov
adc
push
mov
add
movsb
rcl
mov
fwait
xchg
pop
das
xor
adc
andl
or
cmp
shll
aas
mov
pop
imul
jle
adc
rcr
pop
sbb
push
add
add
inc
pop
loopne
inc
fcoms
sub
pop
push
sub
xchg
and
or
stos
add
jl
mov
xor
add
in
mov
or
idivl
sbb
lret
sub
loope
sahf
or
add
call
scas
ret
pop
ss
pop
in
rcrl
dec
or
pop
add
loopne
scas
add
mov
dec
rolb
lds
je
xor
xchg
sbb
and
xchg
add
addb
pop
fcom
andl
fidivl
jno
inc
mov
cli
pop
ss
add
ljmp
pop
add
scas
or
jnp
addl
repnz
int3
xchg
shlb
decl
adc
add
mov
mov
call
add
add
jae
jb
pop
cmp
loop
data16
pop
or
dec
push
cltd
add
and
add
aam
notl
mov
enter
add
or
add
lea
mov
mov
roll
jbe
adc
je
mov
pop
cmc
xchg
adc
rcrl
jnp
popa
mov
cmp
jno
cmp
mov
sub
lret
jg
push
and
sub
xchg
into
ret
pusha
fs
or
jle
add
sub
aam
loope,pn
pop
incb
sub
clc
push
sahf
imul
pop
jns
scas
test
push
in
pushf
push
xchg
std
add
add
es
mov
dec
and
sub
pop
bound
pop
sbb
jl
push
sub
lds
mov
sbb
out
cli
sahf
add
leave
and
dec
and
pop
cmp
add
mov
std
sbb
pop
loop
add
outsl
fsubs
jl
inc
add
mov
mov
cmp
mov
int3
or
cmpsl
mov
xor
loope
xor
pushf
add
lds
sbbl
scas
int
mulb
and
cmpb
in
xchg
mov
push
and
and
into
and
mov
jg
add
and
lahf
add
dec
test
enter
lea
push
sbbb
sbb
sbb
jne
rolb
inc
xorb
loope
sub
add
mov
ja
clc
dec
push
in
aam
add
test
cmp
imul
push
jbe
add
lods
testb
adc
pop
mov
pop
sub
addr16
xchg
add
cs
out
orl
jmp
dec
add
dec
lock
sbb
aaa
std
and
push
push
int
mov
ljmp
push
stos
mov
push
mov
add
ljmp
pop
dec
jnp
bound
xchg
push
aas
fiadds
das
pop
loopne
das
mov
int3
iret
cmpb
outsl
add
hlt
mulb
shl
add
andb
add
adcl
jg
add
int
adc
push
cwtl
dec
inc
dec
imul
sbb
inc
sub
and
js
dec
add
jne
stos
cmp
push
add
loopne
mov
sbb
addl
add
jbe
jb
stos
xor
bound
idivb
ret
push
or
mov
inc
push
add
stos
andl
inc
adc
mov
sbb
jg
outsl
in
ds
cmpsl
je,pt
xchg
sarb
adc
xor
xor
sub
std
aam
cld
testb
ret
sub
or
movsl
sbb
cmp
cmp
inc
add
dec
je
add
sahf
in
ret
mulb
add
testb
xchg
inc
mov
test
xor
cmp
jecxz
outsl
adc
filds
shlb
and
mov
add
fndisi(8087
dec
ja
jae
add
aad
jp
ss
sub
sub
shrl
xor
dec
add
push
push
push
ret
fidivrl
and
lods
sub
mov
cmp
daa
out
or
pop
push
push
add
rclb
pxor
nop
sbb
clc
pop
leave
icebp
sbb
test
cmp
sbb
pop
out
js
mov
test
aam
in
call
xchg
mov
mov
addr16
ret
scas
add
sub
andb
jp
adc
push
mov
loop
xor
dec
push
cltd
sbb
repnz
add
push
fstl
imul
pop
scas
incb
add
movl
sub
push
aam
mov
rorl
mov
adc
fistpll
mov
dec
lret
test
add
xlat
lods
lcall
ret
leave
cmp
data16
add
xchg
scas
lahf
fwait
fs
inc
fsubr
jne
aaa
mov
push
add
cmpsb
add
rol
and
dec
or
and
das
les
push
add
dec
es
dec
fadd
push
xchg
movsl
je
pop
test
sarb
out
sbb
cmp
inc
int3
mov
push
push
int
push
pop
inc
fdivrs
aas
sahf
pop
mov
sbb
add
adc
or
scas
lods
in
xchg
add
xor
or
push
cmp
add
mov
dec
add
jecxz
test
inc
seto
sbb
loopne
frstor
stc
cltd
xchg
inc
mov
hlt
cmc
pop
incl
int3
cwtl
cs
aaa
add
xchg
out
push
js
jbe
or
andb
mov
xchg
pop
push
sbb
cmc
cs
popa
push
imul
cltd
sbb
aam
add
outsl
repz
jge
nop
sub
sub
fidivrl
call
sub
les
add
cmp
divb
add
lea
mov
sub
mov
mov
icebp
std
and
outsl
mov
insb
adc
cld
sub
add
sarb
sub
dec
outsb
jl
pop
add
and
scas
lods
sub
jnp
mov
iret
int
sahf
mov
add
das
add
xor
mov
insb
and
sbb
or
add
roll
in
pop
repz
mov
test
std
mov
add
cmp
out
lods
inc
xchg
xlat
add
mov
mov
sarb
call
xor
dec
and
add
pusha
lods
iret
data16
add
sub
pop
push
imul
call
add
push
dec
sub
jne,pn
add
int3
outsb
rorb
pushf
hlt
inc
inc
mov
jno
or
adc
fdivrl
jle
mov
jge
es
ss
cmp
and
lahf
sti
mov
xor
pop
add
testl
cwtl
jno
xchg
pop
mov
cmpb
pop
mov
mov
pop
mov
popa
lea
aaa
inc
je
aam
lock
add
push
adc
cmp
lret
aas
sub
jmp
shlb
mov
dec
xchg
cld
into
push
mov
add
fincstp
fwait
jl
jge
add
lock
mov
sub
cmpsl
pop
mov
repnz
out
push
jns
icebp
add
xchg
test
cmp
pop
jl
mov
test
std
add
popf
jno
in
jbe
cmpsl
lcall
pop
dec
mov
lahf
sbb
fildll
imul
inc
jl
cmpsl
in
and
jbe
xor
or
add
sti
xchg
dec
add
inc
pop
addr16
fimuls
dec
add
fmul
xchg
fistps
jg
sub
pusha
cld
bound
mov
ficomps
add
mov
ds
push
pushf
pop
inc
sbb
jnp
push
xor
mov
hlt
push
addb
cmp
jne
pop
xchg
add
movb
xchg
les
mov
pushf
pop
mov
andb
scas
or
add
out
sahf
sbb
test
jo
in
loope
stc
pushf
enter
test
adc
add
pop
add
cmp
adc
mov
add
cmp
sbb
cmc
jno
cwtl
pop
sub
mov
sub
pop
add
cld
ds
mov
adc
sbb
and
cmp
sub
popa
mov
xor
add
push
xchg
add
cmp
mov
loopne
addl
les
lret
pushf
or
jae
pop
pusha
out
lcall
or
mov
in
inc
or
add
into
jns
out
cli
add
cmpsl
and
lods
add
fcmovb
dec
push
jg
mov
dec
push
mov
sbb
xor
repnz
mov
cld
stos
push
push
stc
test
push
adc
pusha
or
inc
lahf
pop
cld
push
push
mov
scas
mov
test
and
xchg
mov
aam
dec
add
jecxz
sub
mov
xchg
push
add
arpl
add
sbb
add
sub
sbb
pop
cmpsb
and
jo
out
jl,pn
add
cmp
lock
mov
jg
sbb
mov
rorb
add
idivb
push
icebp
clc
or
sarl
ja
xor
cmp
push
aas
sbb
jp
incl
jle
and
mov
bound
ljmp
xchg
xchg
or
scas
inc
mov
pusha
popf
adcb
add
and
mov
shl
mov
sbb
dec
fs
add
pop
cmp
jge
cmp
xor
test
xchg
fs
jne
pop
testl
pusha
out
js,pt
subb
dec
xchg
mov
add
mov
es
xor
mov
ret
sbb
add
or
hlt
pop
pop
mov
xor
inc
pop
int
and
inc
mov
pop
cltd
mov
lock
dec
xchg
sbb
loope
sahf
test
faddl
cmpsl
add
xlat
jb
pop
aam
fisubl
jo
jecxz
lods
data16
inc
dec
std
dec
jns
dec
cs
xchg
out
sbb
rcll
je
mov
mov
daa
jae
addl
ds
enter
dec
loop
orl
call
pop
add
adc
cwtl
mov
pop
xlat
ja
je
in
call
add
mov
add
adc
mov
ja
fcomi
icebp
decb
add
and
xor
pop
ret
lret
mov
flds
mov
pop
jns
xor
cmpsl
jg
fwait
popf
adc
push
or
cmc
scas
ljmp
dec
adc
js
lods
add
xor
xchg
sbb
mov
add
rolb
pop
mov
jl
or
jns
adc
or
sub
mov
mov
or
dec
inc
xadd
jns
add
js
sbb
aam
adc
add
jge
dec
inc
int
ret
add
movsb
inc
pop
adc
adc
inc
out
sub
mov
shlb
xacquire
cmp
stos
add
inc
mov
add
in
test
xor
loopne
add
adc
jle
xor
sbb
js
sbb
xor
push
addl
test
adc
in
daa
pop
mov
rol
mov
ds
add
add
push
stos
loopne
cmp
xchg
add
add
xchg
mov
ja
popa
sbb
es
jmp
loope
and
je
mov
pop
or
add
mov
xchg
stos
aad
lods
stc
incl
inc
test
push
fldenv
aaa
add
into
dec
xchg
add
les
mov
das
inc
sub
mov
mov
mov
or
ljmp
test
addr16
add
push
leave
and
add
sar
or
mov
cmpsl
jle
jp
add
addr16
inc
cli
fcomp
xchg
mov
inc
adcb
jecxz
dec
xrstor
loopne
sbb
push
inc
mov
cwtl
movsb
icebp
in
add
outsl
mov
addb
mov
imul
add
int
pop
sti
lock
stos
add
movsl
jmp
add
pushw
fadds
fwait
in
sub
roll
push
pop
add
sbb
int
lahf
pusha
push
or
mov
mov
popa
sbb
sbb
mov
mov
add
or
rcrb
push
add
push
jmp
add
sbb
add
dec
aam
mov
shll
dec
loope
fildl
dec
inc
dec
pop
stc
push
mov
add
pop
sub
add
jbe
add
test
lcall
adc
inc
adc
rolb
add
jo
movsl
sub
add
cmpl
cld
ret
push
xchg
inc
dec
jle
add
pushf
add
int
xlat
test
jae
add
xchg
ja
add
mov
dec
pop
orb
imul
sbb
jecxz
and
cmp
add
into
mov
insl
add
cmp
add
cltd
dec
mov
add
out
or
sbbb
notl
sbb
sar
inc
popf
out
xchg
js
add
fmuls
sub
inc
dec
jns
lock
int
rorb
dec
cld
in
add
aas
adc
xchg
sub
test
and
cli
mov
cmc
sub
push
fdivrp
sbbb
add
push
mov
add
push
jbe
aam
sbb
scas
rorb
xor
add
inc
jmp
dec
add
leave
lods
mov
sub
std
xor
add
lahf
adc
mov
stc
jmp
mov
lret
loopne
movsl
sbbb
jnp
sub
nop
push
loope
xor
xchg
mov
pusha
adc
in
add
push
data16
dec
mov
adc
dec
xchg
call
outsl
scas
in
add
test
cmc
mov
jg
fst
dec
stc
je
in
sbb
add
out
add
outsb
test
and
out
mov
enter
add
xchg
push
outsb
add
inc
sbb
shrb
mov
aas
lds
out
inc
rclb
sahf
jo
movsb
std
cmc
add
dec
adc
test
lret
popa
je
in
hlt
sub
add
rorb
mov
add
jl
cmp
arpl
jl
push
xchg
popa
sbb
clc
fists
sub
fidivs
and
push
add
aad
adc
aam
xchg
add
push
dec
lahf
cmp
mov
mov
addb
add
and
add
jb
xchg
cmp
movsb
ret
arpl
loop
out
sbb
sti
mov
cld
imul
lcall
or
pop
sub
cmp
add
jg
mov
add
or
mov
mov
push
pusha
insl
lret
out
mov
or
add
cmpsb
pop
push
sarb
out
xor
or
hlt
inc
push
pop
addl
scas
sub
xchg
add
xor
xchg
js
add
ret
ja
inc
mov
push
or
mov
add
cmp
mov
mov
inc
pop
inc
loope
add
sti
mov
loop
cs
les
and
adc
add
push
jmp
insl
add
sub
lods
movsl
add
into
adc
sahf
inc
sbb
xor
and
cmp
nop
add
inc
sbbl
mov
jno
push
cltd
add
lahf
stos
iret
mov
dec
clc
sbb
add
cmc
ljmp
pop
push
int
push
ret
pop
pop
fimuls
xchg
sahf
aam
add
sbb
lods
push
cltd
mov
pushf
incl
loopne
add
pop
in
push
shlb
shl
add
shll
imulb
mov
mov
out
comiss
mov
stc
add
stos
add
add
scas
jle
push
add
inc
pop
insl
pop
aad
add
stos
aas
repz
adc
sbb
jl
int
mov
sbb
xor
mov
push
and
je
stos
push
cmp
es
cld
pushf
das
xchg
lods
pop
insl
sub
adc
mov
aaa
dec
or
sub
xchg
and
xlat
add
movsb
sahf
in
adc
add
and
hlt
movsl
sbb
dec
ljmp
lcall
sub
mov
push
cmp
in
lock
or
stos
int
add
fwait
lods
shlb
clc
scas
mov
outsb
mov
sti
inc
mull
mov
lock
xor
jns
mov
inc
mov
inc
sub
cs
dec
or
fidivl
leave
rclb
je
jp
cmp
xchg
xor
xor
jbe
cs
aas
cld
or
enter
sub
add
sbb
jns
sbb
add
add
jecxz
push
es
and
insb
fdivl
adc
add
in
inc
int3
ficoms
xchg
cmp
dec
xor
add
xchg
jecxz
imul
mov
or
push
add
lahf
out
mov
loope
rcl
cmpsl
mov
dec
in
jmp
and
outsb
add
out
enter
and
pop
push
mov
aas
orl
outsl
or
sbb
xchg
push
sub
xchg
push
orb
xor
test
jb
or
push
sbb
adc
lret
movsb
adc
std
add
das
mov
add
fsts
xchg
sbb
aaa
jnp
je
jbe
rcll
int3
jo
xlat
mov
div
add
int
mul
inc
and
xor
fidivl
mov
add
and
scas
push
sbb
xchg
test
xchg
int
and
iret
cmp
sbb
jnp
jo
imul
filds
sbb
xchg
jp
enter
jmp
xchg
add
adc
add
push
sbb
dec
rcl
loope
lods
xor
jo
frstor
sbb
flds
fcom
jno
divb
mov
pop
lods
test
jg
aam
outsb
fldcw
js
cli
or
ss
stos
es
or
dec
add
fisttpl
testl
jp
jns
pop
jecxz
jge
push
add
cld
jbe
cmp
add
icebp
int3
out
dec
mov
aaa
insl
push
mov
add
jne
jge
std
nop
dec
add
movl
inc
mov
cmp
dec
mov
sub
out
add
dec
cltd
testb
xchg
cmp
lahf
test
jo
sub
dec
adc
mov
add
sub
out
adc
insl
add
aaa
fldl
fwait
stos
inc
xchg
push
jb
outsb
bound
fisubrs
or
push
popf
jmp
mov
dec
add
push
leave
out
mov
pushf
cmp
lea
adc
push
pusha
shl
sub
add
xchg
pop
test
ss
adc
jns
es
add
rcrb
jb
aam
cmp
add
lds
and
mov
leave
rorb
jae
jecxz
imul
aam
jne
adc
insb
fxam
and
scas
insl
cwtl
inc
mov
add
jl
mov
jns
sbb
or
cmp
push
imul
ja
sbb
ss
jne
inc
aam
aaa
add
sti
dec
mov
pop
sbb
mov
jecxz
sbb
mov
xor
xor
adc
loop
addb
or
add
mov
jae
xor
jp
fistps
fldl
arpl
ror
xchg
or
sbb
shl
popf
sbb
popa
mov
cmp
sub
cmp
decb
shlb
pop
and
xor
fstl
cmp
fmul
std
stos
dec
in
cli
xchg
pusha
lds
into
jmp
sbb
mov
mov
in
cmpsl
mov
in
or
nop
xchg
inc
rcrl
and
jbe
add
and
inc
cmp
add
xlat
push
dec
push
adc
mov
dec
adc
jg
outsl
add
sahf
cli
fmuls
add
or
add
mov
insl
lret
cmpl
out
mov
adc
fistps
rcrb
mov
and
stc
pop
cmpsl
fsubrs
pop
nop
mov
movsl
fnop
cmp
sahf
pop
add
xchg
sbb
push
cld
cs
lret
pushw
mov
xchg
add
push
daa
mov
jnp
add
pop
clc
pop
idiv
or
ret
cmpsl
cs
add
lock
dec
or
rcll
jecxz
xchg
mov
add
sub
out
sbb
push
je
shll
into
js
test
jnp
add
fsts
add
adc
ljmp
add
dec
fcompl
jno
push
mov
leave
out
pop
lods
insl
lock
add
push
pusha
gs
jle
cmpsl
iret
mov
sbbl
adc
jne
out
pop
cmpsl
push
loop
lahf
and
in
ds
xor
lea
movsb
push
sub
xor
add
pop
movsl
scas
sbb
or
pop
adc
addr16
push
aam
xor
inc
into
mov
or
cmpsb
and
cwtl
mov
sbb
sbb
dec
add
rclb
cmp
or
arpl
add
repz
push
jo
mov
aas
xor
sbb
sbb
xor
repz
inc
cld
cmp
add
fnstenv
inc
jecxz
subb
je
pop
cli
jg
and
sub
adc
xchg
mov
jmp
push
push
adcb
or
rorb
repnz
repz
pusha
cmp
les
fmull
das
cmp
sbb
mov
mov
call
scas
ret
popa
xor
fisttps
aas
push
lahf
or
aad
add
mov
repnz
add
dec
jns
stos
push
push
mov
inc
lahf
push
rcr
in
lret
addr16
mov
call
add
inc
push
dec
push
xchg
loope
fdivrs
mov
int
popa
and
in
add
push
ret
aaa
cmp
jmp
imul
pop
cmpsb
mov
sbb
sbb
add
roll
jmp
cmp
fcompl
hlt
xchg
adc
fsubs
push
sbb
test
fmuls
inc
xchg
or
cli
cltd
add
pushfw
push
pop
popf
popa
add
add
push
adc
sub
cmp
dec
in
add
enter
shrb
xor
sub
bswap
xor
icebp
dec
in
inc
addl
adc
pop
cmp
test
leave
push
xchg
sub
xor
add
hlt
inc
icebp
in
mov
ds
mov
je
xlat
or
mov
adc
and
out
lret
add
lahf
xchg
mov
push
cwtl
sub
xorb
cmpsl
add
mov
sbb
shll
push
out
add
cwtl
cmp
push
and
mov
je
add
cli
scas
roll
test
repz
mov
enter
in
add
andb
pop
add
hlt
pop
pop
cmp
ud0
mov
pusha
sub
daa
jb
mov
scas
jo
push
loopne
adc
and
mov
shrl
xor
cmc
cmp
ds
mov
mov
js
lret
inc
push
inc
hlt
push
jmp
inc
inc
push
and
push
jg
and
add
pop
idiv
jnp
lcall
adc
add
idivb
ficomps
add
and
fistps
mov
lcall
scas
sbb
sbb
xchg
incb
xchg
fs
and
cmp
fstl
xorb
test
pop
out
clc
sarb
or
jge
or
adc
inc
jmp
inc
out
gs
add
xchg
inc
lods
test
rolb
xchg
jge
loop
add
in
popf
lret
shrb
xor
fidivl
mov
cmp
in
cld
ja
cwtl
rcll
rcr
pop
outsb
fs
jb
repnz
cvttps2pi
nop
jb
cmp
out
flds
aaa
test
add
scas
jmp
aas
jns
xor
push
ss
scas
nop
jo
sbb
jge
add
rclb
imul
ficomps
and
pop
pop
je
sbb
push
icebp
inc
test
bswap
mov
fs
xor
sub
xchg
pop
ss
inc
pop
and
jg
mov
adc
add
add
inc
mov
ljmp
and
and
jae
int3
lret
pop
cmpsl
nop
push
and
mov
pop
imul
pop
andl
in
sub
bound
mov
sub
int3
mov
adc
push
faddl
std
mov
xchg
in
add
clc
cmp
pop
mov
fisttpl
adc
push
dec
xlat
add
jge
jns
pop
mov
dec
lret
shlb
mov
packuswb
aam
inc
add
ror
mov
insb
jp
sbb
push
daa
fnstenv
test
mov
jge
divps
subb
fnstcw
icebp
lret
vpsubusb
xor
js
add
mov
stc
jne
xlat
jae
mov
imul
add
jne
shlb
cmp
loop
add
and
xchg
clc
loopne
push
sbb
mov
jg
pop
inc
clc
adc
mov
inc
dec
xorb
add
or
add
popf
insb
sbb
mov
jle
repz
add
das
xchg
aaa
add
jl
ja
scas
leave
add
enter
push
out
out
loopne
dec
inc
xor
pusha
or
test
sub
pop
outsl
jle
cmc
and
popf
add
shr
mov
mov
aad
pop
rolb
dec
jl
lcall
rorl
lods
xor
add
mov
test
add
mov
outsl
je
enter
jns
pop
push
aaa
or
lret
outsl
sub
adc
test
mov
mov
xchg
ja
sbb
sub
mov
push
fsubrs
inc
scas
cmp
add
add
fisttps
nop
cmp
and
std
pop
sub
pop
sbb
das
sbb
loope
ret
push
push
dec
cmp
aas
pop
add
cmp
mov
icebp
idivb
or
adc
mov
jnp
iret
mov
movsl
jo
aam
mov
push
hlt
xchg
xchg
testl
mov
or
push
mov
add
les
or
test
push
pcmpeqd
sub
cwtl
push
add
aad
movsb
roll
mov
xchg
pop
add
dec
ret
mov
scas
icebp
shrb
dec
addb
les
pop
push
cmp
mov
inc
sub
rolb
ret
inc
sbb
vmovups
xor
push
sbb
test
iret
pusha
into
leave
pop
add
sbb
xchg
add
mull
icebp
xor
leave
xor
mov
aad
add
sub
cmpsb
and
add
add
adc
mov
rcrl
scas
ret
push
insl
add
js
les
add
jmp
loope
sbb
lret
ljmp
dec
add
ja
mov
dec
gs
push
iret
cmp
mov
jne
or
sbb
jmp
pop
sub
fists
adc
mov
sbb
in
negb
leave
mov
xchg
stos
loopne
sub
sbbl
adc
sub
dec
add
ds
stos
pop
movl
sbb
add
sub
mov
pop
inc
cs
lahf
jbe
mov
test
jp
psrad
imul
stc
add
push
out
or
cmpsb
sub
es
mov
addl
sub
jae
les
stc
add
ret
shr
enter
add
inc
aaa
fdivrl
add
cld
pushf
imul
addr16
nop
ret
dec
and
xor
pop
cmpsl
rclb
xchg
sub
cmp
scas
sub
jae
add
movsl
iret
mov
and
arpl
xchg
fcoms
pusha
cmp
mov
adc
push
ss
push
ret
hlt
inc
test
and
add
dec
lds
cmp
sub
hlt
add
ja
xchg
add
xchg
add
fiadds
arpl
mov
nop
aaa
add
cld
xchg
cwtl
xchg
cmp
and
das
push
add
pushf
push
imul
cld
push
adc
push
or
mov
dec
dec
pop
bnd
cli
dec
add
push
fisubrl
add
ss
inc
arpl
shlb
jl
adc
imul
mov
adc
pop
jo
cmp
fwait
dec
dec
addl
ret
push
cmc
add
les
add
rol
shlb
xor
add
cmc
mov
push
je
stc
ret
inc
jecxz
cmp
sub
and
arpl
add
adc
jns
mov
jnp
loopne
notb
add
xor
pusha
jg
push
aad
in
mov
je
or
scas
popf
rol
pop
fildll
mov
fimuls
add
jle
sbb
js
cltd
add
add
inc
add
or
dec
adc
cmp
add
aam
std
add
mov
add
add
cli
ds
fldl
push
mov
add
cmp
fadds
pusha
mov
dec
jbe
rcll
add
dec
in
out
and
dec
les
mov
mov
sub
cmpsb
mov
mov
mov
fimuls
add
loope
mov
add
out
add
add
push
in
mov
mov
jge
jecxz
add
pop
mov
jo
dec
dec
jne
sub
cmp
cmp
add
cs
and
outsl
imul
loopne
push
rolb
jb
mov
movsl
rclb
add
dec
mov
xor
or
flds
movsl
cmp
pop
mov
or
jo
test
shll
sbb
in
jle
popf
mov
ss
fwait
push
popl
jl
ret
sbb
mov
push
jmp
sub
fiadds
and
dec
mov
and
cld
add
test
xchg
jo
add
push
lods
add
or
loopne
add
lret
repnz
es
mov
pop
fisubl
divl
inc
outsb
or
cmp
test
stc
xchg
xorb
loop
and
fisttps
cmpsb
mov
stc
mov
aad
pop
arpl
loop
mov
jne
faddl
repz
jae
loopne
xchg
js
and
add
adc
je
jl
push
pop
daa
mov
mov
add
aad
sub
xchg
mov
mov
lahf
rclb
add
hlt
pusha
cmpsl
bound
cmp
cmp
lds
ret
xchg
lock
cs
add
mov
adc
xchg
pop
inc
data16
hlt
das
scas
pop
ror
add
mov
pop
jmp
shlb
sub
insl
jp
add
jae
add
sub
in
sbb
push
xchg
add
fists
in
add
and
adc
mov
add
sti
sbbb
push
sub
test
jle
xchg
mov
or
or
enter
pop
push
fwait
lds
stos
mov
push
call
lret
fmuls
adc
jl
add
pushf
or
add
outsb
pop
or
in
jle
add
or
roll
adc
js
ja
movsb
inc
inc
add
cld
mov
loop
nop
testb
push
jbe
repz
cmp
mov
scas
pop
stc
xor
inc
add
aam
add
int
stos
mov
pop
add
sti
insb
xchg
rclb
shr
add
inc
xchg
xchg
jb
add
inc
sbb
jmp
cmp
add
fiaddl
push
orb
xchg
fbstp
add
xchg
push
stc
lds
push
mov
or
cmp
adc
add
aaa
imul
and
add
test
rorb
rorl
add
cmp
mov
mov
add
cmp
xchg
xchg
cmp
lods
xchg
inc
ja
jo
js
shlb
insl
popf
mov
mov
push
dec
push
fsubs
sub
xchg
push
cli
jne
subb
pop
loope
lahf
int
dec
sbb
add
jbe
xchg
add
lret
pop
ljmp
xchg
int
pop
dec
loop
or
fildl
nop
sub
ja
mov
add
addr16
mov
pop
pop
into
jns
cwtl
out
add
sub
clc
std
xchg
pop
mov
lods
aad
mov
or
pop
sub
icebp
shll
es
push
daa
dec
int3
add
pop
in
iret
cmpsb
shrb
out
push
adc
mov
fsubr
clc
cmp
js
add
into
cmp
jns
push
cwtl
jb
cli
test
xor
add
pop
movsl
ficompl
movl
push
jae
mov
sub
inc
dec
add
mov
inc
jge
cs
hlt
add
fldl
cmc
xor
add
and
iret
data16
add
xor
lds
fdivl
push
pop
sbb
xchg
dec
mov
rcr
xchg
sbb
mov
sub
or
add
enter
xorl
sub
adc
gs
dec
and
inc
add
add
das
dec
add
xchg
pusha
call
les
sub
loopne
mov
cmpsl
fwait
jo
add
popf
fcmovbe
pop
pushf
lods
out
push
xorb
cmpsl
movsb
add
jl
das
sti
push
xor
jb
ljmp
push
push
shlb
push
and
insl
add
loope
pop
fiadds
or
sbb
mov
sar
pop
or
jmp
push
pop
sub
das
add
xor
add
push
xor
lret
rep
add
xchg
sbb
add
test
inc
fneni(8087
pop
call
in
mov
or
cmp
incb
jecxz
adc
js
adc
mov
cwtl
xchg
cmp
add
fmull
insl
imul
mov
iret
or
mov
cld
dec
shr
dec
pop
cwtl
out
fdivl
negl
jnp
add
addl
sbb
and
ret
cld
lahf
add
mov
das
ljmp
lods
insb
add
adc
inc
jg
rorb
daa
pop
bound
das
cltd
ficoml
adc
cmp
push
dec
paddusb
shll
bound
shll
es
xchg
add
inc
add
addb
add
dec
clc
xchg
movsb
pop
cmpsl
add
pop
cmp
pop
sti
or
dec
add
jge
sahf
or
shl
mov
aam
test
xor
or
out
push
mov
lock
stc
sub
fldl
inc
iret
push
mov
mov
push
int3
clc
imul
mov
data16
add
daa
inc
pusha
mov
cs
pop
outsl
sub
sbb
cmp
mov
std
pop
jmp
lds
mov
sbb
loopne
scas
xor
sub
mov
out
aam
inc
orb
fdivs
stos
xor
pop
or
push
bound
cs
adcb
popa
or
dec
add
add
daa
ret
cmp
adcb
cmp
gs
dec
xor
and
enter
fadds
add
jno
aas
add
xlat
cmpl
loop
xor
ljmp
int
ret
es
mov
aam
add
rolb
cwtl
aad
and
cs
iret
ffreep
bound
mov
out
push
lds
les
xchg
jle
addb
xor
das
mov
pop
pop
fiaddl
sub
ret
xor
mov
xchg
push
sbb
cmp
dec
addr16
imul
cmp
fs
out
add
or
pop
jecxz
pop
idivb
dec
addr16
dec
jge
jmp
xchg
mov
arpl
mov
clc
aas
lcall
ret
mov
add
pusha
repz
outsl
or
roll
or
sub
and
lcall
test
lahf
adc
cmp
in
mov
xchg
pop
leave
fistpl
test
stos
roll
movsl
or
add
add
dec
arpl
mov
or
sarb
xchg
cwtl
add
addr16
sub
stos
repnz
pop
adcl
jb
add
xchg
cld
gs
cmp
lock
jb
push
add
aaa
ss
cmp
inc
sbbl
jg
xchg
add
ret
mov
mov
xchg
fstpl
test
loop
sbb
lock
pushf
mov
push
mov
out
adc
js
pop
jge
cwtl
sbb
inc
cmp
add
aas
gs
or
add
adc
add
push
and
push
mov
add
xchg
jnp
add
pushf
decl
add
das
jb
mov
xor
iret
mov
mov
sub
loopne
add
fisttps
adc
sarl
addb
xchg
lods
cltd
add
movsl
dec
cwtl
mov
test
mov
roll
jmp
xor
add
cli
and
pop
call
mov
rcrl
mov
mov
and
popl
imul
push
add
push
add
or
lds
gs
cmp
pop
movsl
xchg
dec
addb
jg
mov
sbb
inc
iret
shrb
adc
jmp
sbb
lods
pop
adc
add
mov
fidivrl
popf
add
lock
out
add
fcompl
mov
cmpsl
inc
add
adcb
scas
add
cltd
lds
push
aaa
lahf
js
adc
mov
jge
push
pop
cmpl
clc
cmpsl
repz
dec
mov
fisubrs
push
call
scas
mov
and
ja
stc
fiaddl
cwtl
gs
jge
push
lods
pop
arpl
inc
add
cmp
add
push
jg
test
push
adcb
lret
push
push
add
test
push
xchg
ljmp
lea
mov
ret
sbb
lods
clc
orb
sub
loop
notl
pop
mov
stc
aas
ss
mov
cmp
rclb
scas
mov
ds
push
cmp
test
ljmp
add
bound
addr16
or
inc
mov
in
push
cmpsb
push
int
js
fiadds
and
loopne
aad
nop
add
addr16
add
loopne
daa
jb
add
xchg
les
add
lds
les
fnstsw
subb
add
sarl
sti
testl
sub
pop
add
mov
dec
sbb
mov
inc
leave
mov
pusha
insl
jae
inc
lret
jge
lahf
jg
push
pmulhw
mov
sbb
jecxz
addr16
add
mov
cld
popf
add
jnp
xchg
fsubs
sarb
adc
add
mov
mov
jg
jae
add
fsub
les
cmpsl
adc
aaa
pop
dec
call
fdivs
rcrb
outsb
xor
add
dec
add
mov
push
adc
addl
hlt
sbbb
jnp
add
lret
aam
mov
add
loopne
lds
icebp
lods
je
int
pop
pop
or
push
mov
lret
mov
adc
ret
lods
mov
daa
push
sub
cmpsb
add
pop
mov
add
push
addr16
add
dec
insl
sbb
inc
add
out
sbb
pop
sub
jne
in
pop
add
gs
xor
cmp
repz
pop
test
jmp
sub
and
xorl
xchg
subl
fbstp
out
pop
shl
fsubs
shrb
dec
adc
hlt
into
inc
inc
cwtl
js
pop
stos
push
pop
lcall
inc
mov
jbe
stos
mov
mov
fwait
adc
jge
into
jp
leave
ret
pop
xchg
aam
fisubl
dec
mov
lods
cmp
outsl
mov
xchg
mov
nopl
add
xor
ds
xchg
xor
mov
mov
in
mov
or
add
push
sub
outsl
fistps
dec
fxch
in
jmp
and
clc
add
jbe
add
sbb
cmp
loop
sub
push
sahf
cmp
push
add
and
ja
xor
popf
cmp
test
add
cmpsl
out
cltd
add
adc
cmp
cs
sbb
push
sub
cmp
mov
add
jmp
xlat
pop
inc
mov
les
out
test
das
add
dec
cltd
xchg
test
or
add
ds
mov
roll
ss
scas
sbb
xchg
aam
add
dec
cmp
xor
js
add
jne
icebp
xchg
sub
inc
add
sub
test
rorl
cmpl
dec
add
es
push
xchg
mov
loop
xlat
scas
mov
iret
lds
rcrl
xchg
mov
jmp
icebp
popf
or
add
inc
hlt
lods
add
ss
test
push
movb
loope
add
insl
add
xor
daa
cmpb
aam
aas
sbb
lret
ss
fldl
aad
outsl
jo
pop
mov
add
push
popf
sub
loopne
fsts
jo
push
add
out
jbe
push
sbb
add
std
jo
sub
arpl
inc
outsl
add
aas
xchg
mov
cmp
test
cmp
push
mov
fst
add
js
cltd
jns
xlat
push
out
imul
jge
add
test
xchg
mov
inc
ja
or
cmp
fmul
sbb
add
ss
les
pusha
sbb
test
lret
jge
add
scas
or
push
push
into
add
out
adc
pop
lds
aam
add
fldcw
xchg
and
js
jge
aad
cmpsl
push
pusha
push
lea
addr16
or
aad
fistps
adc
adc
stos
lock
cmp
fdiv
xchg
add
pop
loope
fistpll
sub
or
adc
xchg
xor
rolb
cmp
sub
shll
test
xor
cmp
popf
lret
push
add
push
rolb
or
stc
aam
movsl
repnz
sbb
std
xor
gs
mov
add
iret
test
lock
popa
ds
sahf
add
scas
movsb
add
dec
lods
lods
imul
mov
cmpsb
and
xchg
pop
fldt
sbb
movsl
jp
add
das
call
sub
roll
std
adc
cwtl
inc
add
rclb
pop
add
pusha
pop
sub
mov
pushf
daa
std
mov
add
mov
sbb
add
add
aad
lea
mov
sbb
in
lods
repnz
loop
add
sub
adcb
jnp
out
cld
cmp
cmpsl
pop
ja
add
pop
or
xchg
mov
mov
jge
lock
add
outsl
test
jle
xor
add
inc
lods
dec
in
insb
enter
int
stos
bound
and
lcall
cmp
lods
and
pushf
hlt
ljmp
into
je
add
icebp
push
cltd
popl
push
xor
test
mov
dec
add
daa
ljmp
jg
lahf
add
out
repz
pop
jno
nop
xchg
push
xlat
push
add
xor
cmpsl
addl
jns
sahf
popl
stos
je
out
xor
sti
adc
sub
jbe
add
mov
movsl
clc
xchg
add
or
mov
jge
orl
stos
les
fwait
cmpsl
je
add
add
mov
fadds
push
xor
out
cmp
es
cmp
jb
adc
xchg
add
dec
mov
xchg
inc
xchg
ret
sub
add
jne
into
fwait
cmp
insl
mov
outsb
gs
or
sbb
popa
adc
dec
mov
sub
pop
jo
xchg
jg
fxtract
pop
lock
sub
push
aaa
inc
rolb
shll
add
jmp
jl
add
test
push
jns
and
add
shrb
and
test
pusha
test
fistpl
repnz
jecxz
push
cs
cltd
xchg
inc
sbb
fiaddl
adc
sbbb
into
outsb
add
cmp
ja
sbb
mov
sbb
add
adc
add
sahf
lds
xor
xchg
mov
rcl
cmp
cmp
add
sbb
pusha
dec
sahf
add
xchg
and
and
add
inc
and
ficompl
push
scas
loope
mov
sahf
mov
dec
add
nop
mov
push
add
adc
sbb
mov
xor
pop
xchg
add
mov
sbb
xchg
and
mov
and
repz
inc
call
pusha
sub
add
repnz
dec
hlt
enter
pop
cmp
pop
je
sbb
xor
and
rcl
loopne
and
add
pop
xchg
push
jae
aad
and
cmpsb
xor
xchg
scas
stc
fs
pop
mov
notl
clc
cmp
add
push
and
add
cld
stc
subb
js
xchg
dec
test
add
cmp
insl
fs
fisubs
jno
dec
xor
inc
add
and
mov
insl
xorb
xor
xor
add
or
pop
mov
add
mov
jne
xchg
and
push
push
pop
and
dec
fwait
stos
dec
cs
das
hlt
push
mov
lret
jo
in
lock
repz
xlat
pop
jecxz
xor
mov
subl
xlat
enter
fwait
jle
loopne
xchg
and
aas
pusha
test
sbb
dec
aad
jo
push
nop
dec
add
jns
lret
pop
ljmp
sti
mov
push
outsl
or
mov
stos
add
jo
add
inc
inc
mov
mov
cmp
cmc
into
nopl
loope
inc
xor
loop
sbb
ds
add
mov
or
xchg
xor
jp
cmc
dec
mov
and
add
and
mov
mov
pop
call
push
push
cmpb
add
into
mov
adc
ret
lea
inc
cmp
add
in
rclb
adc
cmp
stos
jle
jnp
aas
jp
pop
hlt
cltd
adc
pop
pop
mov
jne
lcall
add
add
fbstp
idivb
push
add
xchg
mov
xchg
js
jne
add
sub
aam
out
out
pop
add
fsubl
punpckldq
inc
add
mov
sub
push
into
xchg
subl
add
in
call
aaa
push
jg
jbe
dec
in
add
hlt
xor
out
into
dec
loopne
cmp
das
or
cmpb
ja
mov
and
int
sbb
or
xor
cmpsb
testb
movsb
movsl
cmp
adc
add
in
ja
push
add
inc
imul
dec
fnstcw
jl
adc
add
shll
inc
xor
ffreep
pop
cmp
pop
push
std
cwtl
adc
punpcklwd
fbld
sbb
inc
call
andb
push
pop
mov
and
push
inc
test
arpl
or
lods
fistpl
shl
xchg
es
sti
loope
add
xchg
cmp
mov
pop
jmp
shlb
mov
add
xchg
add
mov
xchg
andb
jecxz
mov
inc
adc
fildll
lret
dec
sbb
add
out
mov
rolb
sub
out
cmp
add
xchg
jns
xor
shll
push
add
mov
add
sub
fbld
add
loope
lret
push
adc
cli
add
mov
xchg
jbe
xlat
add
or
mov
push
adc
shll
jo
ljmp
xor
stos
xlat
xchg
add
add
xchg
push
dec
add
sbb
js
leave
jne
and
jns
out
addl
out
mov
sub
add
fs
mov
cmp
iret
push
add
inc
sbb
jns
xor
adc
add
add
push
test
std
dec
icebp
test
jecxz
cld
stos
add
cmp
cmp
shlb
jmp
sbb
fadds
cld
lods
jnp
rorl
inc
addb
lret
cmpl
rclb
out
movsl
inc
mov
push
mov
and
pop
add
xchg
jmp
into
xchg
mov
dec
das
lret
jno
add
push
jbe
not
push
addb
adc
sbb
dec
lahf
xchg
mov
fs
add
adc
mov
push
ljmp
add
add
std
add
loope
push
jb
mov
ljmp
rcrl
subb
int
fsubrs
xchg
mov
dec
mov
inc
mov
rolb
xchg
out
in
push
cmp
add
mov
loope
xchg
xorb
cwtl
jnp
xor
jns
pop
push
push
ds
scas
xchg
ljmp
sub
out
xchg
sbb
xlat
cmp
mov
fs
add
xchg
or
sahf
xor
pop
cmpsl
jecxz
add
repz
clc
rol
mov
push
or
test
shrb
jp
dec
inc
jo
jp
rorb
push
ficompl
inc
push
sub
movsb
push
push
je
xchg
adc
sub
xor
add
add
jb
pop
add
jnp
pop
adc
jo
xchg
rolb
sub
pusha
or
mov
xchg
cld
mov
or
sbb
ds
or
jne
popa
cmp
in
jno
out
ljmp
int
xor
add
pop
stos
xchg
cmp
in
addb
cwtl
add
sub
add
cs
movsb
or
push
add
mov
or
push
pusha
mov
cmp
gs
sub
jl
shlb
dec
push
les
xchg
bound
xchg
xor
mov
lds
add
rolb
imul
mov
xor
sbb
adc
jo
xchg
add
std
es
add
push
clc
and
sbb
jb
and
mov
sbb
or
dec
adc
sub
adc
push
out
pop
or
lods
add
jae
inc
add
das
popa
mov
into
xor
xor
or
scas
add
dec
or
xchg
xor
add
daa
fsub
dec
add
pusha
push
push
sub
repz
cmpsb
mov
in
sbb
leave
xchg
int
pop
jl
add
rclb
mov
jg
jb
out
out
insb
add
inc
sub
enter
xchg
mov
in
filds
sub
pop
or
xor
aaa
sbb
sub
mov
aad
sub
cwtl
std
iret
xor
mov
xchg
and
adc
pop
add
fcoms
es
gs
jo
sahf
dec
or
add
pushf
add
mov
xchg
add
jle
and
aad
mov
cltd
sbb
dec
xorb
dec
aam
add
mov
jo
shll
insl
pop
pop
call
add
pusha
sbb
incb
pop
cmc
mov
in
xchg
mov
adc
clc
or
shll
rcr
add
lret
cld
faddl
sub
and
pusha
fidivs
jne
jg
test
in
jno
add
inc
in
hlt
mov
pop
mov
cmp
inc
filds
pushf
ret
mov
pop
mov
jno
in
aad
add
xchg
adc
push
xchg
sub
push
mov
je
fdivrs
sub
lret
roll
and
test
jge
pop
push
iret
sarl
add
jmp
push
add
add
and
lock
movl
pop
loopne
jne
pop
add
aas
data16
xchg
mov
push
adc
test
sub
dec
decb
dec
stos
fucom
lret
enter
add
mov
roll
dec
or
jb
pop
loop
dec
pop
mov
fwait
jbe
loopne
sti
or
call
adc
jno
pop
push
cmpsb
add
push
mov
movsl
add
and
loop
cltd
push
jnp
cwtl
push
jp
add
ret
dec
jbe
clc
fdivl
or
mov
cli
jnp
shlb
lcall
or
or
in
lods
addb
addr16
mov
pop
and
mov
lds
inc
int
sti
xor
jns
enter
xchg
pusha
xchg
in
aas
int
hlt
gs
lcall
add
out
add
nop
sahf
dec
test
jg
mov
xchg
add
push
jnp
sub
sbb
inc
lock
movsl
test
sar
pop
rolb
std
sahf
ja
andl
mov
push
and
dec
mov
popf
mov
mov
testb
in
jnp
or
dec
sti
cmp
xchg
sbbb
testl
add
lods
bound
mov
add
insb
cmp
or
jmp
ljmp
cmpsl
xchg
aam
lods
mov
adc
xchg
inc
push
add
stos
push
mov
add
mov
adc
fstpt
dec
sub
or
iret
flds
call
cmpsb
add
add
push
jmp
add
mov
add
inc
jg
and
jo
dec
and
test
add
fistpll
cld
sbb
imul
push
sbb
repz
adc
and
add
jle
imul
pusha
push
loop
fcomps
push
adc
in
lcall
cmpsl
dec
jge
repz
lock
pop
and
jl
lods
rcrl
jg
xor
imul
pop
orb
aaa
or
mov
and
cmpsl
std
pop
js
push
pop
out
pusha
xchg
sbb
xchg
popf
mov
add
cwtl
push
inc
mov
test
add
jb
and
sub
jp
mov
popa
dec
jecxz
mov
adc
movsl
mov
aas
fildll
pop
dec
out
out
add
xchg
xor
andb
loop
rsqrtps
jae
pop
icebp
sub
cmp
cmpb
cmpl
testb
pusha
jmp
cmp
jl
cmpsb
rol
mov
jg
xlat
pop
add
ret
lret
test
outsb
add
xchg
popf
orb
dec
cwtl
aad
imul
or
scas
xor
stos
add
aas
call
adc
ret
aad
dec
test
inc
adc
movsl
les
and
add
out
adc
mov
mov
inc
dec
xchg
cmp
mov
jno
mov
pushf
push
mov
adc
repz
cmp
nop
int3
xor
hlt
xchg
mov
out
aam
sbb
adc
or
add
sarb
push
mov
jmp
sti
test
arpl
add
fistps
add
lea
add
jbe
shrb
add
sub
jns
mov
mov
ja
add
xor
pusha
mov
mov
add
add
hlt
and
jnp
fs
sbb
aam
negl
xor
ret
or
test
fdivs
arpl
negb
add
xor
aad
loopne
ret
fldenv
sub
mov
fucomp
mov
inc
iret
cld
add
inc
cwtl
add
add
inc
jg
add
mov
in
jmp
ret
add
int3
hlt
cmc
or
jne
add
push
xchg
addr16
mov
adc
adcb
leave
cmc
xorb
insl
ja
add
dec
and
enter
test
stos
cmp
mov
push
cmp
enter
fbstp
or
cmp
rolb
adc
nop
add
add
dec
add
cmp
sub
cli
loop
add
or
xor
sbb
popl
push
mov
outsb
push
lods
xor
mov
decb
enter
pushf
loope
add
and
mov
stc
add
and
lds
mov
ja
jb
pop
add
insb
in
sub
xchg
xchg
pushf
or
out
mov
mov
mov
xchg
enter
mov
cmp
and
cwtl
adc
ja
shr
push
fwait
or
nop
cmpsb
cmpsl
pop
iret
xor
mov
cmp
cs
testb
loopne
cwtl
jmp
in
mov
pop
add
jne
dec
push
cmp
loop
cmp
cmc
popf
imull
mov
sub
add
dec
popa
lea
addr16
jbe
add
cltd
sbb
cmp
movsl
push
sti
popa
loopne
xchg
jmp
setg
arpl
test
add
xchg
cmp
ljmp
sahf
dec
mov
cmp
bound
scas
sbb
adc
push
inc
insl
hlt
xor
add
dec
pop
int3
jno
enter
add
cltd
movb
nop
dec
loop
push
xchg
pop
sti
call
gs
or
mov
jo
push
lret
loopne
insl
xlat
mov
or
jp
mov
cmp
add
dec
stc
das
push
pop
inc
jge
add
pop
sbbl
dec
ds
int3
enter
add
cld
jecxz
cld
shr
dec
pop
ret
fcmovb
jmp
mov
mull
andl
pop
lret
xchg
ret
push
ficompl
add
dec
pop
mov
xchg
mov
mov
dec
mov
cmp
mov
ret
lods
sub
les
mov
add
add
inc
push
xor
adc
je
adc
mov
cld
add
icebp
mov
loop
and
in
push
sbb
add
outsl
add
out
add
mov
cmp
movsb
pushf
pop
incb
mov
ret
sub
pop
jge
pop
leave
inc
add
stos
xor
or
add
jae
push
add
gs
mov
adc
cmp
out
pop
adc
mov
test
inc
fcompl
dec
dec
int
add
lods
add
loope,pt
cmpsb
js
add
fdiv
sahf
mov
jg
nop
push
loop
dec
aam
outsl
jp
push
push
or
xor
jns
add
sbb
ror
mov
inc
clc
data16
lgs
imul
mov
adc
jp
adc
inc
pop
jnp
add
sub
add
sub
out
nop
add
or
pusha
rcl
add
scas
add
jl
and
inc
add
sub
nop
call
mov
or
jge
ja
push
out
in
sbb
rcrb
aas
xor
jo
cmp
xor
sub
inc
js
outsl
addr16
jmp
pop
adcb
insl
insb
add
sahf
mov
jns
add
outsl
jnp
adc
hlt
and
repnz
and
sub
add
sahf
movsl
inc
add
push
push
mov
jo
add
add
int
data16
push
sbb
in
mov
jl
adc
add
aas
jo
pop
add
mov
pop
das
add
push
mov
or
addb
xchg
lods
add
test
dec
lahf
icebp
clc
add
lret
mov
mov
dec
inc
ds
push
loop
rorl
cmp
xchg
cmc
mov
or
or
xchg
roll
add
in
cmp
inc
enter
mov
les
pop
loopne
add
not
mov
add
xchg
fwait
mov
add
loopne
pop
popf
mov
pop
rcrb
adcb
jo
fadds
psubw
add
adc
xchg
adc
iret
add
jg
insb
ja
idiv
add
jno
mov
out
add
mov
mov
inc
cmp
add
adc
inc
or
test
out
shrb
imul
loop
out
lods
add
jnp
into
pusha
mov
inc
and
ss
dec
dec
andb
aaa
mov
inc
sbb
sub
mov
inc
ficoml
push
clc
mov
pop
fisttpll
repz
xchg
inc
dec
jecxz
jl
mov
jo
pop
sbb
add
ffreep
pop
xchg
shlb
push
push
push
roll
adc
lock
ds
mov
add
popa
cmc
inc
add
divb
inc
test
sub
jnp
pop
test
xor
push
xchg
and
or
sub
cld
or
clc
mov
pop
lret
and
or
cld
xchg
xchg
pop
hlt
or
fcom
push
adc
pop
add
xor
push
xor
jae
outsl
mov
mov
loopne
mov
test
ret
mov
adc
mov
push
mov
faddp
sbb
jmp
jno
add
xor
mov
in
push
xor
inc
push
pusha
fildl
push
mov
mov
push
sbb
imul
call
cwtl
lret
add
adc
mov
sbb
sbb
jle
les
add
pop
cmp
ljmp
add
dec
mov
subl
add
cmp
push
sbb
outsb
add
out
outsl
mull
lcall
and
xchg
xadd
ret
add
jl
mov
nop
pop
add
inc
mov
aad
jmp
add
adc
add
scas
cmp
add
dec
mov
sbb
jo
mov
mov
adc
or
add
pusha
stc
add
fnsave
adc
pop
fisubrl
out
mov
std
les
mov
add
mov
outsl
dec
cmp
roll
sti
jno
mov
divl
pop
add
push
out
lret
mov
add
adc
mov
inc
pop
pop
sub
mov
mov
sub
out
addl
sbb
sub
lret
mull
mov
mov
out
xchg
leave
pop
mov
mov
test
adc
movsb
cmp
cld
shr
add
popa
mov
popf
pop
mov
jb
or
jge
add
xchg
nop
sub
add
js
fdivs
sbb
add
mov
adc
sar
mov
popa
scas
into
add
fwait
inc
sahf
hlt
xchg
test
cmpsl
jnp
ss
es
inc
jecxz
add
xchg
test
push
out
inc
xchg
lahf
sarl
sub
jnp
and
jo
sbb
into
jg
or
jge
jle
push
in
add
aaa
mov
in
arpl
adc
cmp
sbb
add
outsb
cltd
in
push
lret
incb
aam
push
cmp
adc
push
pop
vmread
fcoms
and
stos
addb
mov
mov
or
add
lds
sbbl
xchg
add
mov
fwait
or
mov
loopne
mov
pop
and
roll
ret
stos
mov
sbb
add
into
push
cld
fdiv
lcall
incl
popa
lret
add
call
push
rorb
xlat
cmp
divl
adc
xchg
mov
dec
arpl
xchg
ljmp
pop
add
jae
sbb
mov
xchg
dec
add
mov
call
pushf
dec
sarb
adc
bound
popa
mov
sti
inc
mov
and
js
add
out
orl
mov
jb
jge
bt
mov
leave
push
mov
adc
je
push
xor
lret
adc
mov
ret
jb
pop
pop
push
sub
push
cmpb
ljmp
add
xchg
mov
and
mov
jo
dec
xor
int3
or
lds
mov
xchg
cli
mov
xchg
add
je
data16
cld
inc
lods
clc
ret
cmp
jae
cmp
add
test
popf
sbb
and
rolb
adc
cmpsb
pop
fiaddl
stc
mov
mov
add
loopne
inc
add
adc
js
jmp
push
popf
push
popa
jl
add
mov
inc
pop
adc
and
xchg
cmp
xchg
xor
and
push
push
int
pop
inc
rcl
push
mov
sbb
xlat
ljmp
pop
jne
push
testb
popa
dec
arpl
sbb
cmp
add
lret
push
addr16
mov
btr
addb
cmp
in
add
inc
sbb
jmp
inc
std
lock
int
cli
push
add
mov
cli
pusha
add
insb
loope
xorb
add
test
mov
ret
push
hlt
add
adc
mov
add
cwtl
jo
add
lea
xchg
xor
rolb
push
xlat
movsb
pop
repnz
jo
adc
mov
add
add
in
add
add
cli
add
jle
and
xor
shrb
fcmovnu
out
mov
lea
imul
xor
test
lret
jne
iret
lret
aam
add
movsb
test
adc
sbb
mov
cmp
mov
test
add
das
add
iret
aam
aas
mov
lock
cmpsb
cmpl
mov
popa
or
push
pop
cmp
inc
cwtl
das
dec
add
and
hlt
sti
jecxz
lock
mov
add
nop
adcl
or
xchg
stos
mov
add
adc
push
je
pop
call
xor
jo
and
pop
sbb
jge
inc
push
xchg
clc
xor
repz
sahf
dec
in
jg
dec
js
add
stc
pop
test
push
xor
lahf
je
outsl
mov
stc
add
mov
pop
sub
dec
add
mov
cmp
es
addb
lcall
cmpsb
xchg
outsb
test
cmp
xor
out
push
pop
gs
sub
iret
add
cs
inc
fsubrl
add
push
mov
testl
clc
psrlq
sub
mov
fldl
jle
stc
xchg
cwtl
push
jl
mov
cmp
outsb
or
push
inc
std
push
sbb
dec
movsb
shl
adc
mov
jnp
sbb
scas
push
pushf
cmp
cmpb
in
mov
nop
cmp
sub
lock
or
dec
pop
in
stc
dec
sbb
cmp
mov
popa
add
stos
dec
pop
adc
lock
cwtl
nop
and
imul
mov
in
cmpsl
inc
lret
cmp
cli
add
cmp
nop
sbb
push
inc
sarl
aas
inc
addr16
add
pop
add
and
lods
add
icebp
mov
loopne
add
call
fcmovnu
cltd
test
enter
add
fwait
sbb
add
xchg
mov
xor
dec
mov
and
xor
sbb
scas
shlb
or
stos
add
pop
fs
add
fcmovne
mov
cmp
xchg
cmp
add
cli
divb
jp
push
pop
add
and
stos
fdivs
icebp
push
xorb
add
in
mov
or
cld
rol
leave
jae
dec
dec
movsb
lock
mov
clc
jbe
pop
dec
nop
sahf
add
adc
dec
or
mov
mov
inc
insb
loopne
mov
dec
pop
shrb
sbb
add
das
jnp
xchg
mov
mov
rcll
and
add
sbb
add
fldcw
shr
mov
sub
xchg
add
das
mov
add
pop
icebp
stc
les
adc
pushf
add
std
pop
in
mov
xchg
addb
cli
lahf
out
push
add
xor
out
mov
add
cmovns
xor
lret
xchg
and
mov
movsb
mul
pop
iret
rcrb
add
scas
or
dec
pusha
push
jge
or
pusha
mov
icebp
imul
imul
sbb
out
add
sbbb
js
lock
fcmovne
pop
xchg
loopne
inc
push
and
scas
or
add
pusha
xor
cvtdq2ps
in
pop
js
test
add
in
into
out
pop
popf
pop
jmp
adc
add
mov
repz
sti
xchg
jo
cmp
test
add
inc
hlt
jae
sub
xchg
xor
mov
out
mov
push
xchg
add
jb
add
in
dec
hlt
cli
inc
mov
data16
pushf
clc
dec
repnz
fcompl
jg
or
xor
arpl
out
test
call
and
insl
adc
dec
or
loopne
test
je
cmp
mov
xorl
mov
dec
inc
add
popf
lock
iret
cmc
add
inc
ja
jmp
outsb
arpl
test
add
mov
push
inc
pop
add
fsubrl
adc
cmpb
jae
cmp
add
loop
add
pusha
daa
arpl
orb
cmp
add
push
push
in
add
ret
cmp
ljmp
or
loopne
push
add
cwtl
cld
ficoms
push
jl
add
loop
cmpsl
bswap
ret
rcrl
call
pop
xchg
cmp
cltd
mov
cmp
add
xor
loop
repnz
imul
imul
scas
adc
dec
rolb
jmp
jbe
je
lods
pop
xchg
mov
test
out
outsl
add
bnd
sbb
cmp
arpl
mov
push
pusha
jecxz
mov
push
add
aam
xchg
stos
pop
push
adcb
int3
scas
pushf
insb
shlb
shll
or
adcb
sahf
lds
push
or
cmp
dec
fdivs
sbb
and
cs
enter
and
outsl
test
cmpsb
hlt
push
add
test
pop
lea
push
insl
stc
mov
pop
push
or
or
les
mov
mov
dec
add
or
repnz
add
push
jecxz
sub
add
mov
lds
jnp
call
jge
int3
cwtl
iret
push
je
test
xlat
std
cltd
cmc
sub
pop
jne
and
push
push
inc
pop
nop
xor
loope
push
pop
pusha
imul
rcll
cltd
ja
clc
jne
add
sahf
leave
call
jo
dec
sub
mov
xchg
repz
mov
and
add
jl
sbb
sbb
pop
lret
inc
stc
or
sbb
add
mov
sbb
jns
add
push
fiaddl
mov
dec
ss
sub
in
pop
sub
lds
sbb
jb
adc
mov
push
sahf
adc
pop
adc
jmp
scas
jle
add
mov
push
int3
inc
sub
push
ror
push
add
xchg
push
js
es
jne
fstps
mov
xor
mov
pop
sub
loopne
add
std
or
jae
pushf
mov
cli
sub
pop
aad
add
push
les
icebp
cmp
fidivrs
jge
cld
test
and
push
add
dec
lods
nop
sub
pop
xlat
add
add
xchg
or
test
mov
adc
in
lods
mov
sub
or
das
lock
adc
das
ret
lds
ja
push
and
popl
adc
cmp
prefetchnta
lea
pop
inc
push
sbbl
and
adcl
ja
sub
or
jno
fnstcw
mov
and
or
rolb
or
cwtl
sbb
jo
addl
jl
stos
adc
and
roll
cmp
mov
or
or
mov
bound
call
out
ljmp
inc
movsb
mov
mov
ret
push
add
sbb
adc
inc
fsubrs
adc
pushf
fs
adc
inc
push
or
and
jns
out
jl
pop
cltd
popa
jnp
call
jle
out
jge
iret
and
ja
jg
and
inc
bound
ret
das
push
cld
aam
mov
and
xor
aas
and
mov
les
mov
or
and
xchg
pop
mov
or
and
mov
sub
nop
loopne
mov
push
and
xchg
push
addr16
data16
dec
shll
adc
push
mov
mov
adc
and
lret
dec
cli
add
icebp
lret
and
lock
loope
ret
pop
or
jl
das
lahf
icebp
pop
bswap
dec
dec
jbe
aas
filds
out
fisttpl
mov
dec
jbe
nop/reserved
cld
lahf
xchg
iret
aas
and
ret
pop
fadd
cmp
clc
jg
xchg
das
ficompl
adc
cld
dec
cmpsl
dec
fs
aas
and
clc
xchg
movntps
inc
adc
cmpsl
sbb
and
mov
lock
sar
push
les
fdivrp
das
inc
shl
pop
pop
xchg
dec
dec
in
aas
xchg
out
lds
adc
cld
xcrypt-ctr
cmpsl
sbb
and
iret
pop
pop
fdivrs
int
or
or
lret
adc
push
and
mov
outsl
or
sbb
pop
and
int
jb
fcompl
adc
or
clc
ljmp
sbb
add
and
icebp
popa
xchg
aad
mov
add
adc
sahf
adc
insl
outsl
shrl
sbb
imul
outsl
ret
add
outsb
inc
xchg
lds
push
arpl
test
js
jne
xchg
ss
icebp
lds
adc
test
or
js
dec
lock
lods
inc
adc
jbe
xor
jne
test
xchg
dec
and
and
adc
cmp
sbb
les
sbb
lds
test
pop
sbb
and
xchg
pusha
sub
pusha
or
mov
pop
loop
xchg
js
andb
sub
and
cmp
cmp
cmpsl
jo
and
add
adc
cmp
lea
bound
pusha
popf
inc
in
push
cltd
jns
push
movups
shrl
and
push
arpl
add
adc
and
inc
add
mov
push
mov
enter
jae
mov
xor
mov
loop
cltd
adc
push
or
jecxz
jecxz
jecxz
ret
mov
sub
lahf
cmp
mov
adc
and
mov
xor
xor
inc
lods
and
sub
js
movsb
inc
push
fisubl
jge
and
sbb
mov
ss
xchg
sub
sub
jns
mov
jae
xchg
push
js
inc
inc
mov
iret
mov
js
stc
mov
xor
movsb
or
jae
mov
xor
lods
mov
sub
ja
es
sub
mov
shlb
mov
sbb
shll
pusha
shrl
sub
jae
inc
leave
lahf
xor
push
jecxz
test
xor
mov
mov
dec
xorl
jge
mov
xchg
mov
call
and
loop
mov
mov
mov
out
pop
aad
add
aam
andl
shll
faddl
lods
add
outsl
or
ja
inc
cwtl
scas
jp
add
xor
out
dec
push
int3
jno
mov
ret
add
inc
pop
push
xlat
mov
push
add
enter
cmp
xchg
adc
and
test
add
shll
clc
jnp
dec
sbb
mov
movsl
push
xlat
mov
sub
pop
in
mov
inc
insb
sbbl
imulb
rorb
or
arpl
fmulp
popa
xor
rorb
dec
mov
jno
jbe
shrb
insl
pop
out
add
fdivrl
iret
xorb
jecxz
sub
mov
or
cmpsb
add
fstps
xlat
in
incb
adc
mov
add
lret
cmpsb
in
ljmp
pop
lock
jae
xchg
aas
imul
mov
shll
and
je
add
scas
mov
sbb
out
jae
fdiv
push
and
imul
cmpsb
pusha
aam
out
push
xchg
cmp
stos
pop
sbb
adc
add
sbb
lea
sub
gs
adc
ret
bound
es
and
arpl
or
loopne
add
rclb
cmp
add
sub
and
push
inc
hlt
inc
pop
xor
or
jmp
mov
and
es
subb
call
jp
add
bound
add
xchg
je
stos
jns
fdivrl
lahf
fstps
cmp
pop
loope
test
into
add
and
push
add
add
sbbl
adcb
icebp
cli
xchg
mov
add
repz
pop
add
xchg
adc
fdivl
fstps
bound
sub
push
movsb
cltd
mov
add
les
neg
inc
xchg
jo
push
insl
inc
dec
jb
push
enter
xor
rcl
pop
jl
add
pop
dec
push
mov
dec
lock
shl
add
or
out
insl
cmp
clc
adc
cmp
sbb
dec
xchg
insl
fadds
loop
in
dec
inc
nop
mov
and
cmc
push
std
aas
sbb
inc
js
push
outsb
jl
cmpl
xor
mov
sub
mov
sub
add
in
inc
mov
and
add
pop
movsb
xchg
push
cmp
and
rorl
cwtl
nop
dec
jl
add
cmpsl
mov
ret
jle
sub
pop
pop
lods
add
loopne
dec
in
xchg
inc
repz
inc
movsb
cmp
daa
adc
in
stos
dec
xor
xor
int
and
xor
add
jne
leave
pop
add
add
das
mov
test
mov
adc
negl
std
push
add
jne
and
jmp
scas
jns
jge
in
pop
xor
mov
dec
shr
add
push
add
dec
ja
lret
pop
push
add
stos
fmull
push
lea
xorl
sbb
clc
sbb
add
pushf
rep
lret
aaa
repnz
sub
or
sub
movsb
sbb
andl
int
scas
cmp
and
jns
arpl
mov
call
jo
andb
or
lock
cmp
mov
divl
rolb
dec
mov
cmp
in
cld
jnp
lods
cmp
or
les
mov
dec
mov
sbb
and
or
jo
mov
cmp
xorl
out
xchg
fiadds
lea
mov
mov
sbb
rolb
cmovl
xor
addr16
fdivl
cmp
insl
mov
xor
daa
jp
xor
test
outsb
add
mov
subl
xor
and
adc
insb
flds
cs
rol
dec
xor
dec
pushf
popa
lock
roll
test
add
test
stos
out
scas
fstp
cmp
mov
add
inc
inc
insb
lahf
into
orl
out
jmp
push
pop
mov
mov
push
das
dec
cli
shrl
xchg
mov
subb
jle
dec
scas
add
mov
mov
fiadds
adc
scas
cmp
cmp
pop
in
pop
cltd
or
adc
lcall
mov
lcall
push
sbb
scas
pop
imul
mov
inc
xor
and
insl
lahf
aam
test
xchg
popf
jmp
sbb
inc
insb
bound
jns
btc
inc
das
mov
subl
divb
xor
add
inc
in
in
sub
shlb
jnp
fwait
cmp
popf
add
nop
fisttps
push
cmc
jl
popa
scas
and
jp
js
and
fadds
push
add
and
inc
call
add
je
lret
insl
fcoms
pop
fbstp
popa
cmc
cld
and
xor
fldcw
call
inc
mov
dec
push
dec
sbb
xor
scas
add
jmpw
popa
pushl
push
push
push
cwtl
sahf
ss
inc
push
mov
rcr
cmp
push
add
push
jmp
loop
pop
and
std
cmpl
add
stc
movsb
fmul
lret
add
sub
fnsave
push
xchg
out
dec
xchg
adc
rcr
mov
inc
cmc
icebp
scas
xorb
fiadds
sbbl
push
loopne
sbb
pushl
xor
and
call
add
add
test
cld
test
cmp
adc
shll
adc
inc
adc
cwtl
js
jno
add
xor
stos
xorb
jp
mov
add
sub
out
std
ds
pmaxub
inc
mov
jnp
add
fwait
xchg
mov
adc
js
and
dec
or
cmp
or
add
mov
add
and
add
scas
mov
testl
jmp
shrb
xor
ret
cmp
stos
lret
mov
add
loopne
pop
add
add
lcall
std
mov
cmp
mov
adc
cld
popa
test
mov
mov
or
shlb
fmuls
adc
pusha
push
incl
clc
cmpsb
cmp
mov
push
push
or
rorb
cmp
xor
mov
pushf
pop
sbb
les
and
sub
mov
sti
add
int
mov
movsl
pusha
add
loope
dec
nop
cmp
cmc
aam
or
xor
repz
inc
adc
cmp
stc
xchg
in
push
add
mov
outsb
add
add
pop
add
mov
test
loopne
and
in
cmp
mov
nop
xlat
add
movsl
lret
cmpsb
pusha
xor
testl
sub
push
cmp
popf
outsl
and
and
jl
xchg
enter
hlt
push
add
lods
mov
sbb
fdivs
mov
add
imul
pop
je
clc
jo
pop
sti
cmp
cmpsb
jb
mov
mov
int3
xor
add
mov
lahf
add
outsb
xchg
aaa
mov
xorl
mov
ret
add
int
cmp
jge
xor
inc
out
sub
jno
pop
fisubrl
sti
mov
cmp
pop
int
and
rorl
outsb
cs
jne
add
test
test
push
ret
sbb
xlat
mov
add
mov
sub
dec
insl
add
pusha
test
xchg
sbb
call
aas
loopne
adc
adc
add
jae
flds
mov
out
jmp
or
out
sbb
add
les
mov
add
xchg
pop
outsb
push
jl
gs
pop
jg
add
add
test
scas
jo
testb
lds
outsl
mov
das
sti
add
cmc
cli
mov
add
inc
ja
cwtl
or
jo
mov
test
nop
add
mov
cmp
cmp
mov
pop
and
mov
add
or
add
jle
dec
je
sbb
jecxz
sbbl
sbb
push
in
mov
mov
loopne
add
add
popf
dec
pushf
jg
fwait
xchg
add
in
and
fdivl
sbb
add
cmp
add
or
cwtl
xchg
popl
cmp
dec
add
pusha
inc
imul
ljmp
fisubrs
lcall
ds
aam
out
add
clc
xor
shr
or
dec
test
add
xchg
aas
sub
sbb
add
dec
enter
mov
pushf
add
mov
movsl
jl
sub
ds
or
mulb
out
pop
push
pusha
lret
dec
add
sbb
inc
mov
sub
fidivrl
and
shrb
and
sbbl
ljmp
popf
inc
or
adcb
aad
add
pushf
mov
outsb
call
int
ret
mov
mov
pop
in
add
aad
es
xor
fdivrl
dec
loop
add
mov
mov
int
rcr
outsl
stc
push
lock
std
xlat
lds
mov
xor
and
int
leave
cmpsb
add
imul
repnz
ret
std
sbb
cmp
out
mov
outsb
scas
faddl
shlb
mov
sbb
push
adc
xchg
cmp
daa
into
fsubr
pop
pop
and
lock
and
add
ds
mov
sbb
addr16
push
imul
cmp
mov
in
inc
add
jle
push
jns
call
hlt
mov
lret
add
outsl
popf
adc
sub
xor
mov
cmp
movsb
leave
lock
ja
xor
add
and
push
push
inc
cwtl
gs
pusha
jns
push
in
in
add
sub
mov
pop
fwait
mov
lds
jb
out
fs
cmp
or
mov
sti
inc
xadd
fwait
aam
shl
popf
out
mov
cwtl
scas
add
add
fnstcw
add
rorb
push
or
jno
add
sub
add
mov
pop
add
in
cmc
push
and
mov
call
das
inc
inc
cmpb
push
xchg
dec
daa
shl
mov
loopne
add
jle
int
stos
xor
or
push
jo
sti
push
les
cwtl
aas
adcb
shrb
add
mov
adc
faddl
test
in
loope
out
add
mov
and
ret
xlat
icebp
add
dec
pop
xor
add
jmp
mov
inc
push
push
inc
aaa
cld
test
dec
ret
dec
add
nop
and
add
mov
xchg
add
xlat
xor
stos
clc
jmp
in
ss
jae
cmc
and
bound
add
xchg
imul
addb
mov
inc
mov
mov
and
jg
ret
js
pop
pop
xor
cmpsl
and
dec
mov
stos
je
out
or
add
data16
jnp
add
push
lret
pop
add
adc
pop
out
enter
shlb
mov
inc
lret
fiaddl
push
js
or
movsb
loope
add
cmpl
mov
add
ds
sbbb
sbbb
pop
jb
fcmove
jge
add
test
add
push
pop
cmp
enter
bnd
pusha
into
or
cmp
xor
xor
pop
jne
dec
fwait
add
rorl
loopne
lods
sahf
add
mov
jecxz
repz
orl
add
mov
push
dec
add
sti
pop
daa
xchg
push
add
testb
fcmovnbe
pop
rorb
mov
aas
pop
popa
insl
int3
ljmp
pop
movsl
adc
or
fstpt
add
cmp
adc
mov
testl
out
ror
stos
add
sbb
test
shl
movl
fucomp
jp
pop
fiaddl
adc
pushf
inc
lods
sub
out
insl
icebp
and
leave
push
and
mov
xor
xchg
test
sub
pushf
ret
add
cmpl
sti
sbb
add
or
pushf
push
test
add
hlt
fmulp
add
das
repz
stos
call
or
mov
jl
dec
arpl
es
aaa
mov
add
scas
xchg
lcall
dec
aaa
sub
adc
mov
aas
dec
lahf
aad
xor
pop
adc
rorb
test
push
jno
xchg
mov
jo
arpl
aas
push
nop
xchg
jg
pusha
jl
and
roll
sbb
mov
loopne
imul
ud1
or
pusha
pop
movl
dec
xor
lods
fsubl
add
fstp
loope
push
adc
add
popf
mov
outsl
cmp
adc
aas
xor
mov
xchg
fs
sahf
mov
or
fidivl
aam
int3
add
popf
enter
mov
aam
xor
push
je
movsl
cmp
pushf
mov
pusha
pop
dec
cmp
pop
cmp
clc
or
popa
enter
arpl
in
jbe
notb
clc
adc
sub
cmpsl
add
jnp
shrl
adc
add
sbb
cmp
fwait
bound
ficomps
and
sub
ret
add
fwait
in
cmc
movsl
sub
add
mov
cltd
mov
sub
data16
add
mov
scas
push
cmp
and
andb
jl
vpor
add
ljmp
inc
adc
jns
add
cmp
push
pop
add
inc
push
mov
pusha
mov
iret
jbe
add
sysret
lds
stos
jecxz
fmul
mov
ljmp
movsl
inc
movsb
add
outsb
aad
lods
pop
sahf
add
dec
dec
adc
je
das
adc
test
add
mov
dec
jg
femms
fs
mull
pop
sbbb
fmulp
pop
lock
inc
inc
mov
repnz
cmp
or
rcll
or
add
and
add
mov
pop
mov
fs
mov
les
cld
sbb
or
mov
xchg
jns
add
pop
jne
andb
pop
mulb
add
and
decl
dec
in
xchg
dec
clc
jg
and
mov
das
lock
sahf
add
inc
dec
and
pop
adc
ljmp
lock
aas
xor
push
sub
repnz
inc
lods
cwtl
mov
push
and
movsl
push
add
insb
je
int
push
add
and
mov
xlat
pusha
mov
add
insl
xchg
das
fs
add
xchg
add
mov
cmpsl
out
mov
loope
les
push
xchg
inc
dec
rcrb
aas
adc
out
xor
inc
mov
clc
repz
push
stc
std
addl
mov
mov
andb
inc
jmp
test
out
insb
jmp
inc
mov
add
xchg
mov
mov
fsubs
add
test
ror
push
or
shl
xor
pop
jb
scas
cmpsl
add
popf
cltd
lahf
loop
lcall
adc
push
daa
jp
mov
repnz
add
fwait
pop
ja
xchg
push
subps
repnz
inc
add
test
repz
call
ljmp
stos
jmp
pop
add
mov
mov
pop
dec
pushf
mov
mov
or
xchg
data16
push
push
lods
sbb
sbb
add
and
add
inc
sarb
add
cmp
xchg
dec
mov
test
mov
call
jne
sbb
xchg
jle
cmp
sub
jno
stc
add
out
jbe
mov
mov
insb
out
aam
mov
shll
mov
jge
add
in
nop
sbb
out
scas
add
dec
pusha
mov
mov
jne
lsl
rolb
sbb
lret
jno
and
and
jle
mov
lret
pop
addl
cmp
push
nop
sbb
xlat
stos
add
pop
add
cmc
out
mov
enter
lret
fidivrl
es
cmp
std
loop
rorb
add
sbbb
roll
xlat
push
aam
mov
in
add
ror
fisubrl
adcl
aas
cld
roll
and
cmp
insl
pop
decb
jle
add
loope
cmc
pusha
loopne
add
loop
pusha
arpl
addr16
add
xlat
push
mov
aam
fmull
add
inc
push
lods
push
mov
add
sbb
add
and
add
pop
hlt
add
mov
push
jns
lock
mov
pop
add
rol
imul
mov
shrb
pop
add
out
repz
add
and
adc
ficoms
out
stc
pusha
inc
flds
movsl
xor
jle
add
push
cmp
jns
shl
rorb
pop
pop
push
mov
add
or
mov
int
add
mov
ja
sbb
add
jno
mov
out
cmp
cmpsb
sahf
jecxz
aam
or
pop
inc
pop
out
loop
stos
mov
addb
xor
loopne
pop
subl
mov
dec
adc
arpl
push
push
cmp
cld
ja
hlt
movsb
push
cmp
and
int3
in
inc
or
dec
sti
mov
mov
sbb
jo
flds
aas
sbb
adc
outsl
loop
xchg
sbb
xchg
out
xchg
or
jae
mov
add
mov
push
jp
mov
movsl
push
sbb
pop
lds
sub
nop
fdivrl
add
ss
jb
push
and
inc
or
pop
bswap
inc
inc
xchg
pusha
int
insb
aam
xor
inc
and
lahf
test
in
icebp
push
out
sbb
mov
sub
mov
xchg
es
repnz
imul
cmpb
cmp
mov
cld
rcll
clc
in
jo
ficoms
jne
sbb
xchg
xchg
scas
add
ja
push
add
jmp
sti
pop
xor
daa
dec
cmp
add
aad
lahf
mov
shrl
outsb
lock
repnz
out
add
js
mov
push
mov
push
ljmp
cld
lock
xchg
add
pop
sbb
adc
push
add
pusha
sbb
daa
inc
scas
xchg
adc
inc
lea
in
inc
pusha
out
and
cmp
movsb
outsl
inc
cmp
pop
push
add
and
lea
ficoms
mov
fiaddl
pop
fisttpll
pop
out
mov
add
or
std
imul
hlt
mulb
cmp
pop
sahf
lahf
xchg
inc
mov
xchg
mov
add
sub
scas
sub
add
jne
ja
mov
xlat
dec
stos
imul
cmc
das
jb
gs
mov
jae
test
inc
in
sub
xor
int3
sub
filds
xchg
scas
pop
shrl
test
lret
loopne
mov
mov
xor
in
call
and
pop
xchg
das
sbb
lahf
sbbl
jns
inc
gs
add
mov
outsl
add
push
mov
mov
sub
pop
mov
add
cmp
aaa
lods
xor
add
fdiv
xchg
add
lcall
adc
cmp
xchg
pop
mov
lahf
jecxz
call
imulb
inc
dec
push
into
and
fs
or
pop
stos
insl
out
jle
sbb
sub
add
scas
in
jmp
add
or
sub
rcl
add
sbb
cmp
jmp
lock
sbb
fcomps
jp
mov
cmp
add
jg
hlt
sbb
lcall
mov
mov
push
jecxz
add
mov
add
leave
nop
sbb
fs
fdivl
in
cmpsl
add
mov
cmpl
add
xchg
mov
cli
leave
jae
add
dec
jp
fnstcw
aad
jae
mov
cwtl
and
jg
xchg
pop
sub
inc
jle
ja
andl
or
sar
out
cmc
push
jmp
call
and
add
scas
mov
push
push
sub
mov
xlat
add
xchg
repnz
add
lods
popa
add
and
scas
push
jmp
lds
sbb
xor
mov
pop
pusha
out
mov
cmpsb
ret
je
nop
add
sbb
mov
xor
mov
mov
xor
andl
stc
shll
jnp
jno
pop
mov
mov
push
dec
add
repz
inc
leave
inc
or
dec
and
pop
jne
pop
loopne
mov
lods
out
aas
push
movsl
pop
pusha
sub
and
rol
lret
jecxz
jae
int
pop
inc
add
dec
movsb
mov
mov
push
xchg
fyl2x
xor
adc
jno
add
push
subb
mov
lock
adc
aas
out
cmp
negb
stos
lods
movb
rclb
aas
xchg
imul
mov
das
sbb
jae
mov
jno
cmp
adc
cmpsb
mov
aam
adc
jge
push
mov
ja
daa
sub
inc
dec
jg
je
jecxz
push
sbb
test
sbb
mov
sarb
cmpb
pusha
inc
test
pop
sbb
loop
loop
jge
je
add
mov
mov
adc
xor
mov
cmc
push
add
int3
cmp
clc
das
add
dec
jae
add
xor
jbe
and
pop
sbb
mov
pop
addr16
sahf
inc
ss
lcall
into
mov
add
loop
imul
push
mov
ret
mov
add
inc
mov
add
je
push
add
leave
sub
and
sahf
add
mov
addb
mov
sub
aad
sti
fcoms
scas
sbb
cmp
lret
loop
mov
add
nop
mov
in
pusha
mov
out
stc
incb
adc
adc
sub
mov
sti
jb
inc
int3
shrb
add
push
fucomi
add
aam
jnp
adc
pop
add
call
push
cld
shrb
roll
mov
pop
mov
and
js
pop
add
out
and
add
push
sti
stc
add
and
enter
je
nop
je
pop
xor
bound
sub
sub
addl
jl
and
test
xor
lock
mov
jnp
adc
pusha
or
or
mov
mov
sub
les
fs
and
mov
add
mov
movsl
sbb
add
out
les
mov
add
xor
or
push
mov
lods
pusha
shrl
add
lcall
cld
or
mov
jnp
mov
imul
and
outsb
add
or
pop
push
or
add
jns
cmp
xchg
push
inc
je
jmp
add
mov
clc
jbe
and
rcrl
push
cmp
dec
add
in
stc
adc
adc
cs
in
clc
add
lret
das
pop
inc
and
and
add
xor
or
cltd
or
icebp
add
dec
mov
sbb
add
fcom
cmp
popa
dec
dec
mov
sbb
in
and
fcomps
cmp
adcl
pop
add
lds
push
or
and
xchg
mov
pop
negl
dec
inc
cmp
add
pop
push
cmpsb
adc
add
sub
dec
loope
fisttpl
enter
xchg
jae
jmp
aas
outsl
add
int3
dec
std
imul
mov
outsb
insb
addl
icebp
adc
jno
cmp
dec
filds
xorl
mov
sbb
cmp
push
mov
push
insb
pop
loopne
shll
pop
mov
add
ret
mov
loopne
repnz
sahf
bound
jbe
pusha
push
jle
imul
test
push
xchg
jne
add
mov
sub
dec
mov
repz
pop
add
fildll
fidivrs
cli
xchg
xor
rolb
jns
adc
leave
push
add
in
push
push
ret
add
scas
aad
fs
jl
push
add
insb
jle
lds
fildl
in
bndstx
add
pop
add
imul
add
cwtl
scas
add
pop
cmp
jno
mull
movsb
jp
inc
lds
add
imul
adc
pop
pushf
push
nop
or
pop
out
mov
les
pop
cs
mov
adcb
add
shll
dec
push
push
pusha
jp
and
loop
icebp
mov
enter
xchg
mov
or
sbb
pop
adc
pushf
add
inc
push
add
mov
mov
ljmp
and
ficoms
add
lea
xor
rclb
dec
pop
inc
shrl
xor
lds
scas
add
mov
sub
and
daa
cld
pop
out
xchg
add
xorl
movsb
pop
mov
lcall
into
nop
and
in
popa
clc
in
movsl
mov
and
pop
mov
data16
stos
inc
loopne
mov
adc
in
pusha
sbb
sub
sahf
cwtl
adc
rolb
push
cmpsb
pop
add
inc
fldcw
orb
and
lahf
test
stc
clc
movb
lret
sbb
sbb
add
insb
in
adcb
ret
call
fiadds
movsl
pop
pushf
scas
mov
lods
add
cmpsb
repz
add
pop
lcall
xor
ljmp
push
loope
les
cmpb
aas
add
addr16
and
cmp
mov
push
rorb
cmpsb
bound
sarl
pop
sub
jne
bnd
lods
and
jns
adcb
pop
mov
cmpsb
lahf
jecxz
add
dec
adc
sbb
inc
cmp
dec
push
mov
add
jo
xchg
dec
xchg
pusha
pushf
inc
push
cmp
movsl
push
movsb
sbb
cmpsl
cld
sbbb
add
cli
xorb
rcrb
int3
fildll
inc
cmpsb
sbb
dec
inc
add
lods
scas
inc
int3
or
aam
out
add
adc
and
push
sbb
inc
and
pop
pop
mov
ljmp
nop
dec
dec
mov
faddl
mov
arpl
add
lahf
push
cli
add
pusha
scas
mov
divb
add
pop
cwtl
push
sub
add
mov
pusha
add
sbb
push
cli
data16
ja
add
shrb
sbb
pop
mov
jae
add
cltd
ss
aaa
lret
xor
or
out
js
adc
adc
rdpmc
std
add
pop
outsl
pop
andb
and
sbb
push
and
mov
cmc
lods
jno
add
mov
add
into
xchg
sub
ficoms
add
mov
in
jl
flds
jns
cld
add
jecxz
scas
cld
cwtl
insb
xchg
mov
sub
mov
or
jmp
je
push
push
mov
mov
rcl
jno
add
ss
loope
pusha
pop
push
dec
insl
add
xchg
mov
mov
cli
sbb
ja
add
std
push
adc
shlb
cwtl
add
in
adcb
cmc
mov
add
inc
dec
add
lods
test
or
mov
cmp
adc
add
enter
rol
out
add
insl
jo
icebp
pop
addb
jnp
in
movl
pop
pop
xchg
cld
aas
in
hlt
jg
add
jmp
inc
in
jno
push
jle
or
addb
pop
lahf
pop
add
mov
ljmp
ljmp
dec
out
cmpb
xor
xchg
inc
xchg
lock
and
cmp
jns
gs
push
mov
aaa
add
out
pusha
jae
es
inc
arpl
inc
xchg
repnz
and
cmp
pop
push
cmp
add
insb
lea
es
xchg
sbb
std
jno
xor
sub
lods
sbbl
add
xor
add
fs
jge
and
lcall
inc
mov
sub
xor
adc
mov
or
repz
add
cmp
add
cwtl
inc
and
lds
addb
test
shl
add
add
shr
push
adc
cmp
push
popa
push
sub
outsl
pop
lret
mov
jo
and
scas
inc
rorb
rolb
test
or
shll
jno
cvtps2pi
loopne
and
push
call
mov
xor
sbb
fs
cmp
xorl
insb
in
test
inc
xchg
xorl
add
and
aas
lods
cwtl
lock
dec
into
push
cmp
inc
sar
jnp
xchg
adc
jo
jp
and
decb
insl
xchg
mov
leave
add
icebp
adc
cmp
dec
mov
mov
or
inc
sbb
and
in
pop
jo
rorl
push
mov
rcll
cmpl
pop
or
add
mov
enter
aaa
repz
mov
pop
sbb
loopne
push
mov
leave
lret
add
pusha
icebp
pop
or
into
push
fstpl
addr16
cmp
add
adcl
rorb
xrelease
push
orl
dec
or
dec
mov
outsl
push
adc
stos
mov
xchg
dec
roll
add
add
call
ret
or
add
xchg
ret
mov
inc
orb
ret
add
insb
sub
les
jne
lret
pop
jnp
jb
add
xlat
lods
inc
pop
stos
fdivl
into
mov
mov
dec
aam
mov
adc
dec
cld
lret
fsub
ret
add
into
push
sbb
int
pusha
cmp
lea
inc
jne
fwait
push
rorl
lods
push
std
sbb
push
add
inc
bound
out
inc
cmpsl
jnp
adc
add
ss
add
aas
cmp
add
inc
push
inc
sub
mov
add
call
aas
jle
add
jae
mov
imul
fildll
int
jg
xlat
sbbb
mov
les
pop
add
inc
pop
ja
lods
pop
stos
add
or
jp
aam
add
test
mov
pop
mov
pop
sub
mov
sub
xchg
cmp
jmp
mov
push
pop
pop
inc
add
lcall
add
ret
out
cmc
mov
enter
repz
imul
lods
inc
cwtl
icebp
jns
sub
in
and
in
xor
add
mov
ja
cmp
mov
and
sub
mov
push
shlb
mov
adc
dec
sbb
mov
add
mov
xor
aas
sarb
pop
mov
movsb
or
repnz
xchg
ss
push
cmp
scas
insl
push
jmp
cmpb
xchg
add
jl
mov
adc
test
fisubrl
pusha
js
pop
pop
xchg
lods
xchg
xorb
fstpl
add
pop
pop
add
and
movsl
dec
das
test
sub
add
mov
dec
js
add
dec
push
into
lods
movsb
cmp
jo
add
cmc
sbb
push
ret
cmp
filds
add
add
adc
sbb
or
xchg
adc
aam
add
imulb
jle
xorb
iret
xchg
mov
ss
cmp
lahf
enter
test
popa
fadds
xor
stos
mov
xchg
es
lods
popa
leave
mov
inc
add
iret
aam
loope
push
add
inc
nop
and
int3
leave
loopne
pusha
add
aas
cmp
scas
jae
add
fcmovnb
in
push
fdivrl
test
dec
test
pop
fsts
sub
in
and
sbb
pop
mov
les
push
pop
push
jl
or
ljmp
push
pop
jbe
mov
mov
aaa
add
shrl
mov
pop
test
shll
imul
ss
ljmp
call
lods
popa
jae
jg
loopne
pushl
cmp
js
push
or
nop
in
inc
mov
test
mov
rol
cs
push
inc
jl
int3
loopne
mov
ja
out
outsl
add
or
mov
hlt
push
imul
mov
add
ja
les
out
repnz
mov
jbe
push
add
aas
mov
mov
js
cltd
mov
addl
test
leave
mov
or
cwtl
sub
in
leave
push
nop
testl
mov
rclb
xor
scas
lds
test
push
dec
adc
pop
inc
jge
jo
push
pop
sahf
nop
jmp
add
in
movsb
ja
mov
xchg
movsl
add
data16
pushf
insb
sahf
xchg
mov
mov
mov
cmc
cmpsl
rcr
push
add
push
inc
cltd
leave
or
xchg
xchg
sbb
or
mov
xor
or
push
inc
test
cwtl
pop
sub
pop
shll
aad
adc
jmp
add
lret
sbb
inc
adc
enter
inc
and
cmp
cmp
and
mov
adc
arpl
clc
xor
cmp
mov
adc
pop
mov
push
into
pop
add
pop
jmp
jmp
xchg
xor
rcrl
pushf
loop
add
mov
inc
jo
and
cld
push
xor
out
inc
and
jecxz
xlat
daa
cmp
inc
aas
or
cmc
push
fadds
outsl
mov
stos
leave
fwait
adc
sahf
lock
stc
add
jge
out
cli
inc
xor
pop
into
cmc
int3
das
div
adc
mov
dec
sbb
add
stos
or
repnz
aaa
mov
or
pop
mov
adc
hlt
ds
fwait
mov
sbb
nop
fsub
scas
out
add
or
fxch
mov
nop
push
in
add
aad
push
mov
sbb
pusha
add
shlb
cmc
mov
jo
faddp
adc
test
insb
add
sahf
mov
addl
add
test
mov
cmpsl
push
cmp
pop
dec
dec
rcrb
add
fldt
shrb
adc
push
jbe
sub
xchg
add
orl
mov
and
jmp
js
and
subb
xchg
add
sub
xchg
jg
push
or
inc
sbb
adc
mov
nop
add
mov
adcb
jmp
je
pop
sub
sbb
insb
seta
adc
rorl
jbe
and
daa
pextrw
mov
cld
cli
inc
test
push
jl
add
popf
add
aaa
add
repz
sub
shl
lret
mov
outsb
bound
jg
cmp
mov
push
icebp
inc
insb
ds
test
sub
mov
rol
and
fnstsw
xor
sub
pop
jecxz
clc
orl
iret
jl
or
aaa
repnz
lock
in
jle
stos
rolb
xor
mov
adc
adc
dec
out
xchg
scas
mov
add
sub
cli
enter
mov
imul
cmp
adc
out
enter
dec
fs
pop
ret
pop
inc
pop
pusha
jae
imul
aaa
add
cmp
rcrb
inc
cmp
add
int
or
dec
ljmp
jno
pushf
jne
jae
insl
add
stos
mov
arpl
ds
inc
inc
aam
mov
test
jmp
pop
jl
add
cltd
out
movsl
jbe
xchg
in
add
cmpsb
or
add
movsb
cltd
subl
gs
arpl
stc
dec
dec
add
in
test
test
xchg
shrb
push
sbb
mov
sub
mov
insl
adc
rol
and
adc
dec
inc
mov
cmp
mov
loopne
inc
fwait
insb
lahf
cltd
cmp
xchg
cmp
inc
pop
rorl
sub
scas
inc
dec
add
and
mov
outsl
ds
inc
push
or
mov
sub
add
pushf
inc
fdiv
loop
add
dec
mov
call
mov
adc
add
mov
jo
dec
sub
lcall
xor
lret
out
pop
outsb
add
pmaddwd
mov
add
lds
inc
inc
fwait
pop
add
ds
jne
jnp
fadds
hlt
and
shl
xor
add
lock
jmp
mov
add
imul
add
fisubrl
outsl
push
shrb
mov
dec
dec
rcl
clc
and
xchg
rorb
mov
or
sub
inc
flds
add
shlb
int
fstps
pushf
jge
or
pop
popl
rcrb
fdivl
jmp
loopne
lea
cmp
push
outsb
fsts
addb
mov
jo
inc
xchg
cmpsl
mov
sbb
adc
sub
repnz
subl
lret
add
sbb
push
outsl
ret
addr16
sub
in
and
mov
add
pop
xchg
cmp
mov
dec
push
hlt
and
mov
js
add
and
adc
push
clc
mov
and
jae
jecxz
jl
add
stos
dec
push
inc
and
ljmp
jns
insb
lea
xor
cld
daa
xchg
fwait
sbb
bound
xchg
mov
and
call
mov
daa
jmp
add
sarl
jnp
adc
inc
sub
std
sbb
shlb
pusha
jl
add
mov
push
xchg
rolb
mov
inc
out
stos
mov
mov
into
inc
lcall
fwait
outsl
repnz
push
xchg
aas
sbb
insb
push
add
gs
sbb
aad
push
and
xchg
sbb
pop
testb
sbb
rcrl
push
repnz
sub
mov
cmp
aad
mov
addb
and
out
movsb
in
inc
push
push
add
sub
out
loop
loopne
add
inc
imul
add
pop
push
nop
add
push
jne
adc
call
pushf
or
add
insb
jae
add
cs
aas
add
xor
out
enter
add
std
mov
add
pop
or
and
push
lds
push
sti
loope
push
add
test
add
mov
iret
cmp
mov
jno
mov
push
orl
in
mov
push
out
or
aam
push
repz
je
add
cwtl
or
int3
push
int3
mov
sarb
insb
roll
nop
inc
and
or
add
pop
mov
orb
xor
add
cmp
sarl
adc
cmp
add
sbb
mov
daa
xchg
push
out
pop
cmp
loope
mov
push
mov
into
stc
push
mov
mov
cld
cmp
aas
or
sbb
aad
das
mov
jge
in
out
inc
jmp
mov
pop
sbb
add
or
test
jp
mov
sbb
jno
mov
sbb
pop
add
push
push
lock
mov
imul
test
add
dec
loopnew
pop
add
mov
pop
dec
stos
clc
add
jae
and
jle
cwtl
addb
fidivrs
or
pop
xorb
xor
mov
sar
add
movsb
jae
or
jl
mov
rclb
mov
mov
xchg
cwtd
repnz
lret
add
mov
rcrl
jnp
mov
inc
loop
addb
leave
mul
in
push
mov
bound
mov
stc
mov
mov
aam
cmp
shl
inc
aam
jbe
int
cld
add
mov
insl
xor
add
cmp
and
imul
adc
ficomps
jnp
fsts
dec
aaa
rclb
sbb
mov
xor
mov
mov
add
iret
inc
add
add
jecxz
stc
mov
xor
push
push
shr
ds
mov
mull
or
sub
sbb
scas
lock
addr16
loop
pop
push
mov
in
add
leave
faddl
idiv
inc
add
cltd
add
pop
cmc
xor
addr16
daa
or
sbb
test
outsl
sti
add
sbb
movsb
mov
lods
add
mov
adc
sub
test
std
add
rcll
jg
adc
inc
add
enter
add
inc
stos
add
pop
out
jns
push
cmp
cmp
orb
cmp
xchg
jnp
insb
enter
dec
inc
sbb
cmc
mulb
out
push
sahf
add
jmp
sub
or
and
add
test
pop
mov
and
push
and
add
cmp
inc
aad
repnz
jne
sarl
or
cmp
shll
adc
mov
fiaddl
aad
sbb
or
push
fsubrs
ja
rorl
sub
mov
inc
loop
xchg
add
or
fbstp
or
push
jmp
and
dec
add
push
inc
shr
icebp
or
mov
popa
xchg
xor
rcll
add
repz
inc
enter
aaa
cmpl
jo
lods
call
insb
jp
xor
loopne
in
jne
sbbb
test
andl
mov
xchg
mov
stc
sbb
call
add
sarb
fwait
insb
hlt
pushf
add
push
daa
test
push
int
fiaddl
add
inc
push
push
adc
aad
add
sub
dec
add
cwtl
ret
shl
gs
adc
mov
fidivrs
xchg
pop
mov
or
xchg
inc
mov
or
test
cmp
pop
add
push
shrb
test
add
nop
pop
cld
dec
rorl
push
adc
loope
lock
add
mov
add
dec
inc
sbb
js
add
shll
in
push
cmpsb
or
push
add
lret
mov
lcall
out
adc
add
push
push
in
add
into
mov
ss
test
add
addr16
xchg
ljmp
ret
dec
cmpsb
fdivrl
add
std
xor
cmp
xor
call
mov
popa
fisubs
pusha
repnz
lcall
lea
ss
pop
mov
lods
xchg
scas
stos
push
push
insl
xor
icebp
and
sbb
inc
lret
and
fisttps
testl
fdiv
xor
add
add
xor
and
rolb
scas
and
cwtl
sub
nop
inc
add
cmp
rcl
jp
jne
add
inc
jge
add
xor
xchg
das
pop
xor
sbb
cmp
add
cmc
sub
mov
pop
lret
or
mov
push
jns
popl
jle
inc
in
daa
xor
lock
pop
dec
aad
xor
lods
jl
punpckhdq
mov
xchg
xlat
push
dec
xchg
add
sub
mov
mov
out
pushf
in
adc
cmp
mov
dec
daa
adc
or
xor
sub
dec
jle
add
push
push
add
vmaskmovdqu
sarl
popf
loopne
inc
or
xchg
xor
mov
fs
ljmp
xchg
idivl
test
xchg
mov
add
xchg
out
arpl
pusha
into
add
imul
dec
cmp
xchg
adc
mov
add
js
test
nop
jns
loope
sbb
push
popl
stc
call
pop
fldenv
leave
push
push
mov
mov
in
loopne
add
pop
mov
and
xor
not
jle
clc
cmpsl
rclb
je
cmovbe
add
pusha
push
sbb
fs
inc
jle
ss
sub
repnz
rclb
cmp
testb
mov
jg
sbb
ret
cwtl
jb
inc
pop
std
inc
mov
cmp
xchg
add
add
cmp
add
mov
xor
aad
into
idiv
add
hlt
add
lods
pop
scas
xchg
pusha
fiaddl
mov
sahf
mov
inc
stos
es
mov
sbb
lods
insl
ret
cmpsl
dec
test
loop
add
fisubl
lcallw
inc
shlb
in
inc
andb
pop
into
flds
adc
add
pop
insb
add
add
dec
mov
popf
in
add
test
incb
fwait
mov
repz
xchg
dec
sub
jp
aas
int
popf
jno
shrl
xor
add
inc
in
dec
movsb
jnp
std
out
sbb
test
inc
add
popf
dec
adc
or
pop
leave
shl
xor
int
mov
call
std
test
push
jnp
sbb
add
in
sub
jg
pusha
sarl
setbe
cmpl
fadd
shrb
add
inc
add
out
call
xor
mov
jnp
jb
sub
negb
mov
outsl
add
push
xchg
jno
ljmp
pop
rclb
pop
adc
int3
out
cmp
or
xor
sbbb
xlat
adc
push
loopne
add
outsb
push
repnz
out
pusha
aaa
lret
iret
xor
mov
xchg
repz
pusha
test
pop
testl
add
add
clc
xor
mov
add
mov
test
test
test
out
sbb
inc
mov
xor
fcomip
sbb
mov
add
jo
pop
adc
lret
or
jle
adc
and
es
pushf
push
out
mov
lahf
add
pop
xchg
jecxz
adc
lock
inc
mov
xchg
mov
mov
js
inc
addb
or
mov
je
imul
mov
sti
and
sub
pop
push
int3
jmp
and
add
gs
adc
mov
inc
mov
pusha
cmpsb
dec
lods
jl
add
loopne
push
add
adc
cmp
lidtl
sbb
les
loop
add
fcmovb
or
test
jb
movsb
sub
rcl
lret
mov
jge
cwtl
pop
sahf
and
jmp
push
cmpsl
es
cmpb
mov
and
nop
lock
nop
and
mov
sub
mov
jp
pop
outsl
mov
mov
cmpsl
fcoms
daa
add
incb
mov
cmp
orl
movsl
and
xor
sbb
mov
add
ljmp
in
out
push
mov
jge
enter
scas
imul
clc
fldln2
mov
in
mov
xorb
sub
clc
leave
add
sbb
clc
xchg
sub
idivl
sbb
xor
push
inc
fcoml
lock
into
add
or
in
pop
cld
mov
or
add
movsl
xchg
add
jp
add
fdivs
lcall
mov
mov
xchg
call
out
or
aaa
or
mov
adc
jae
dec
fs
test
cld
sub
test
mov
add
lock
pusha
cmp
adc
add
lea
cmp
popa
lds
out
aaa
call
cmp
add
cli
dec
movsb
mov
lea
js
mov
cmp
lret
pop
push
in
ja
add
cmp
push
jo
or
add
mov
adc
imul
adc
popf
shlb
in
not
mov
aad
ja
add
test
into
mov
lea
test
enter
xchg
das
add
cmp
pushf
dec
lret
mov
push
mov
out
jo
add
dec
popa
add
fldl
loope
pusha
mov
data16
fdivl
dec
pop
jo
es
cmp
or
add
out
add
test
xorb
inc
mov
xorb
test
dec
mov
shlb
repz
push
add
rcll
scas
sbb
lods
addr16
xor
test
adc
cltd
movsl
and
leave
sub
adc
adc
es
mov
imul
lods
shr
fs
xlat
fbld
fucom
mov
test
out
mov
jp
and
xchg
cs
cwtl
pop
adc
pop
rolb
loope
dec
jmp
aad
adc
in
fsubrl
stc
mov
jg
aad
add
adc
mov
or
push
pop
lods
enter
dec
push
rolb
cmovae
mov
jns
sub
xorl
mov
add
lahf
and
ret
add
mov
push
loop
jg
cmpsl
rorb
loope
in
aam
repz
lret
add
sbb
fwait
andb
popa
mov
add
pop
outsl
outsb
test
popf
rorl
stos
imul
movsb
jmp
push
or
dec
stos
lods
stc
lcall
mov
stos
iret
fstl
xchg
inc
ret
add
ja
add
push
fs
adc
or
sub
push
jae
or
aas
adc
and
xchg
aad
jl
mov
rorb
push
addb
scas
sub
xlat
adc
jae
and
mov
inc
jmp
adc
test
test
and
or
xor
or
inc
test
dec
xchg
adcl
xor
sbb
rclb
mov
sub
in
roll
movsl
add
cmp
mov
inc
test
xlat
jns
xor
xor
in
enter
pop
dec
sub
scas
mov
jmp
out
cwtl
jb
cmc
inc
nop
aad
sub
das
or
push
hlt
cmp
pop
add
xor
xchg
and
jnp
dec
movsb
inc
leave
xchg
inc
loopne
add
das
test
je
lods
add
mov
hlt
cli
add
icebp
mov
dec
and
movsl
dec
xchg
or
aad
sbb
pop
sbb
inc
lock
sahf
or
push
hlt
nop
cltd
sbb
out
addr16
popf
sar
aad
adc
xor
cltd
xchg
jl
xchg
in
mov
sbb
test
in
dec
std
shlb
adc
adc
mov
and
imul
add
or
mov
sub
ret
inc
dec
xchg
push
incb
mov
adc
out
pop
inc
adcb
or
gs
mov
xchg
loopne
sub
dec
ret
or
xchg
test
outsb
lds
scas
sahf
cld
adc
mov
inc
je
push
fiaddl
jo
jmp
iret
pop
sbb
daa
imul
sub
test
sarb
add
or
in
and
sbb
inc
ror
cmp
mov
int
push
or
inc
mov
in
adc
pop
add
scas
movsb
imul
adc
imul
aam
cmp
add
cmpsl
sti
nop
xor
outsl
insb
inc
adc
add
add
aam
pop
shlb
lods
sub
call
adcb
out
jge
push
scas
xchg
pop
adc
adcb
inc
mov
and
mov
pop
adc
icebp
call
add
clc
or
daa
add
adc
nop
cld
dec
sub
int3
lods
ret
jo
adc
and
or
adc
data16
lcall
pop
test
dec
dec
fs
adc
arpl
push
mov
pop
imul
add
sub
stc
orb
out
aas
push
adc
out
and
add
or
sbb
cmpsl
pop
hlt
fadds
mov
enter
scas
hlt
push
jbe
cltd
add
arpl
enter
lods
shll
push
xchg
call
adc
or
jp
inc
adc
cmp
adc
mov
sbb
jns
cld
jae
dec
pop
mov
inc
repnz
xchg
or
or
hlt
push
mov
fcoms
pushf
stos
and
mov
in
jl
pop
inc
xchg
mov
mov
adc
push
js
js
lods
into
inc
je
add
pop
loope
push
add
jmp
sub
inc
in
test
xchg
xchg
nop
xchg
ror
sub
add
lds
lods
adc
ja
outsl
inc
andb
test
test
inc
adc
mov
andl
jl
das
hlt
push
jae
out
mov
adc
dec
in
push
add
leave
int3
fidivs
mov
add
shlb
xlat
xor
add
mov
fsubs
insl
arpl
jo
stos
sbb
clc
test
xor
sub
loopne
jb
in
fstpl
inc
scas
pop
add
jae
or
ds
sub
dec
xor
jnp
pop
add
cli
rorb
xchg
add
push
test
pusha
fsubrs
xchg
push
and
mov
add
fwait
loope
adc
inc
in
ds
lea
dec
out
pop
add
test
cmp
mov
inc
push
or
pop
mov
outsb
sub
xor
xor
jns
xchg
sahf
pop
add
mov
pusha
mov
adc
icebp
loopne
cmp
sbb
jle
inc
insb
in
jbe
xor
ret
pusha
push
ret
out
inc
pop
iret
js
scas
inc
push
imul
adc
lcall
movsb
dec
adc
mov
js
xchg
mov
jecxz
push
push
push
mov
xor
pop
mov
cmp
scas
jmp
adc
push
aas
adc
lods
js
add
sbb
lock
sti
stos
sbb
jae
add
loop
xchg
pop
cli
mov
aas
sbb
mov
mov
pop
or
insb
push
sbb
add
lock
adc
xchg
add
insl
jb
js
add
dec
ljmp
pop
test
pushf
push
add
xor
cmp
popa
pop
and
sbb
or
xor
jle
jge
inc
pop
shrl
push
xchg
adc
arpl
sub
push
rolb
cli
and
movsl
inc
dec
lea
jle
mov
nop
clc
shrb
stos
jno
pusha
orl
sbb
popa
imul
xorb
cmp
sub
clc
jnp
adc
inc
mov
xchg
xor
adc
popa
lock
xor
inc
jae
inc
pop
rcrl
int
stos
jne
cwtl
push
mov
pop
mov
inc
mov
cwtl
add
inc
enter
stos
shlb
popa
mov
sbb
loopne
sub
pusha
mov
mov
sbb
xchg
jecxz
jmp
js
jl
clc
jg
or
outsb
sub
lock
sbbl
and
imul
add
dec
jno
daa
in
imul
sbb
and
lock
icebp
aam
sbb
jmp
pusha
jp
cld
and
enter
pusha
loopne
jne
pop
test
stos
arpl
dec
js
rolb
jmp
lds
test
iret
inc
addr16
aaa
jp
inc
test
jg
pusha
mov
inc
sbb
xor
nop
aaa
mov
lods
dec
add
mov
lret
jp
fdivs
xor
rorl
dec
add
dec
or
push
xlat
sti
mov
clc
push
and
adcl
dec
push
test
leave
mov
es
xchg
inc
lcall
xchg
iret
inc
lret
dec
mov
cmp
sbb
inc
in
mov
add
cmp
inc
cwtl
imul
cwtl
cmp
and
and
or
push
add
mov
iret
arpl
push
imul
add
mov
cwtl
push
js
loopne
adc
or
bound
pusha
or
icebp
addr16
popa
imul
rclb
adc
pusha
lock
pop
pusha
add
pushf
out
inc
or
xor
sti
mov
xor
mov
sti
xchg
xchg
adc
sbb
bound
xor
pop
pushl
add
sarb
jmp
addb
add
and
mov
ret
mov
or
mov
sbb
lock
pop
addb
addb
dec
xchg
repz
pop
inc
pusha
rcll
xchg
xchg
xor
pusha
ret
push
test
inc
push
pusha
icebp
mov
xor
pop
pusha
fcomps
and
pop
loopne
insb
cmp
jecxz
popl
mov
ret
pop
pop
sub
mov
add
add
add
xor
clc
xchg
xor
jnp
pcmpeqw
add
ret
daa
pop
clc
aad
adc
sbb
pop
ds
test
pusha
loopne
push
pop
push
pop
sarb
movl
test
dec
xor
dec
jle
daa
call
jno,pt
push
push
shrl
add
push
pusha
cmp
out
movsb
enter
mov
push
add
mov
jg
inc
jp
inc
mov
test
inc
xchg
mov
arpl
lea
push
gs
aas
and
inc
xchg
dec
fisubl
mov
shrb
add
adc
pop
fsubl
mov
pusha
cli
sub
lahf
rclb
aam
ds
mov
outsl
movsl
fwait
xchg
addb
dec
enter
xchg
dec
mov
in
and
inc
xchg
mov
and
pop
into
inc
add
push
ret
adc
xor
repz
inc
sbb
inc
add
test
mov
call
orl
push
jl
sbb
adc
pusha
ja
cmp
pop
xor
and
mov
add
or
imul
pusha
or
mov
push
andb
pcmpgtw
mov
mov
xchg
orl
loopne
in
divb
arpl
divl
xchg
inc
or
scas
xchg
xchg
rolb
pusha
add
and
push
mov
sub
rclb
shll
ret
inc
pusha
shl
or
push
nop
mov
xchg
push
pop
pusha
push
in
mov
xor
punpcklbw
xchg
or
clc
inc
pop
xor
inc
and
jg
ret
and
add
push
adc
or
mov
mov
pusha
or
scas
xchg
mov
push
push
hlt
mov
add
and
arpl
mov
rorb
fadds
xor
or
cmp
push
pusha
lock
or
inc
aas
jecxz
or
add
inc
xor
ret
adc
push
fiadds
mov
mov
testb
adc
cmp
and
rclb
test
cmp
inc
js
inc
push
fstl
push
inc
push
movsb
lods
xor
cltd
js
xchg
lahf
cmp
add
jecxz
jno
sar
test
ret
jno
cmp
inc
nop
mov
filds
xorl
lock
ret
arpl
or
xchg
push
xchg
repz
lock
xor
and
mov
or
xor
inc
push
jno
enter
sahf
mov
or
jmp
xor
adc
cld
test
xchg
jne
and
pusha
add
out
negl
inc
adc
or
and
push
or
pop
aam
add
pusha
fcom
leave
sub
rorb
lock
es
rorl
mov
lock
adc
loopne
imul
rolb
add
mov
mov
inc
pusha
subl
clc
jnp
adc
mov
loopne
jecxz
mov
jbe
popf
mov
jnp
cmp
xchg
dec
mov
popl
stos
hlt
add
jl
adc
xchg
dec
lock
jo
imulb
lock
cmp
dec
and
xor
test
and
into
insb
test
jecxz
xchg
and
popa
repz
mov
push
xchg
js
pushf
pusha
sti
mov
dec
pop
lds
mov
add
fldenv
inc
pusha
xor
pop
add
jmp
ljmp
lahf
jns
cmp
adcl
xor
shlb
testb
lock
sahf
add
sti
cmp
and
mov
sti
sti
shl
inc
xor
push
ss
add
into
pop
shll
cmp
inc
adc
test
adc
jns
inc
in
push
jne
xor
shl
pop
cmp
sbb
inc
cld
shrb
test
pop
js
inc
test
hlt
dec
daa
mov
popa
sub
loopne
inc
rolb
fbld
jne
and
rol
jnp
ret
pop
push
pusha
fldenv
hlt
lahf
stos
mov
enter
cltd
clc
adc
mov
pop
mov
add
hlt
in
cmp
sub
mov
adc
in
test
jns
mov
shrb
pop
popa
pop
and
mov
int3
xor
shrl
xchg
cltd
and
shr
icebp
sbb
xchg
and
dec
je
into
popa
fnop
inc
pusha
rclb
cmp
xor
push
push
fdivs
insb
pusha
pop
sbb
sub
popa
jns
lods
pusha
andb
pop
mov
or
enter
mov
jmp
pop
repz
cltd
jae
sbb
sbb
or
mov
nop
add
and
sub
add
add
jb
xor
lret
or
out
sbb
xor
bnd
mov
stos
lock
lcall
sahf
cmp
gs
jge
xor
dec
lahf
roll
daa
jp
popf
or
pop
and
or
sub
push
xor
pushf
popa
jp
pop
push
sub
das
in
xor
popl
sub
mov
inc
sub
rcrl
nop
clc
sbb
pushf
add
cli
sbb
lret
xchg
adc
inc
int3
scas
stos
inc
cmp
jl
cli
xchg
or
inc
repz
inc
out
insb
sbb
in
lret
icebp
ds
mov
sbb
mov
popa
pop
in
test
shr
and
adc
push
add
mulb
insl
sbb
leave
or
ret
fiaddl
shl
jno
mov
out
inc
les
sbb
pushf
sbb
ror
xchg
mov
cmp
jl
adc
scas
idivb
xchg
shrl
pop
and
adc
adc
test
ficoml
sbb
jp
ds
popa
jno
xchg
sbb
shll
inc
adc
xor
popa
pop
jl
jo
lock
test
inc
jnp
dec
or
aad
xchg
lea
mov
xor
dec
rolb
xor
jp
aam
dec
ds
call
inc
clc
and
adc
aam
dec
loopne
jmp
into
inc
aad
sbb
and
movsb
ds
jp
stos
aad
mov
lock
xchg
lock
inc
pop
stos
and
nop
pop
add
mov
jl
aas
sbb
and
inc
xchg
sar
dec
iret
mov
or
mov
or
pop
inc
mov
jl
das
push
jnp
mov
jmp
xor
jecxz
xchg
popf
ds
jbe
xor
xor
xchg
pop
add
cmc
popa
loop
ficompl
addr16
add
xchg
jl
cmp
loop
sbb
ja
xor
stc
xchg
stos
test
xchg
sarb
mov
insb
sbb
jb
movsl
filds
add
lahf
ds
pop
xor
mov
mov
stos
les
sahf
jl
mulb
mov
push
jl
dec
sbb
add
xor
cwtl
popa
pop
pushf
pop
add
pop
test
fwait
lock
sub
outsb
xor
push
cmp
mov
or
cmp
pop
push
xchg
pushf
subb
and
out
mov
adcb
or
fst
std
inc
mov
inc
insl
into
jb
cwtl
cmpsb
popa
mov
fwait
or
movsl
bound
outsb
cmp
jle
inc
stc
punpcklbw
leave
or
fldcw
add
fstpt
and
cmpsb
loopne
cmpsb
xor
mov
fidivrs
push
cs
cwtl
pusha
inc
jns
pusha
push
aas
sbb
mov
push
mov
inc
test
test
out
popa
out
lods
pusha
and
xor
and
stc
xchg
mov
pop
cltd
dec
or
pop
pusha
cmp
into
seto
nop
je
rcrb
andb
sbb
jns
ds
inc
test
popa
pop
push
popa
pusha
roll
cmp
xor
inc
and
and
cld
and
lods
pusha
add
fbld
icebp
fldenv
ret
pop
repz
xchg
add
pop
pop
sbb
scas
leave
lock
push
push
les
cltd
shl
pop
jns
pusha
xor
pop
pop
mov
or
fisttps
dec
mov
xor
rcr
add
mov
andb
add
dec
cwtl
nop
add
fs
mov
sbb
sbb
mov
push
mov
pop
gs
pusha
push
adcl
pushaw
pusha
clc
dec
fistpl
mov
aam
adc
xor
rolb
adc
pusha
inc
xchg
add
xchg
movsb
rcrb
or
push
sbb
pop
call
lds
xchg
xor
pop
pop
pusha
pusha
xchg
popl
xor
pop
iret
inc
xchg
stc
cltd
mov
loop
popa
fnstcw
or
cmp
mov
inc
dec
enter
and
pop
mov
inc
push
cmpl
mov
pop
fisttps
or
and
out
mov
xor
xor
jno,pn
sti
sbb
mov
scas
pusha
add
push
loop
mov
pop
sbb
and
pusha
mov
popa
jns
push
pusha
ja
xor
dec
pusha
add
loopne
xchg
inc
add
fmuls
push
add
fldl
std
mov
sub
sub
cmp
mov
adc
inc
js
inc
popa
shrl
or
ror
lea
inc
dec
in
pop
lret
lea
cmc
sbb
stc
fsubrl
sbb
clc
inc
pusha
shll
iret
mov
stc
and
inc
mov
mov
or
popl
and
sub
pop
cld
inc
inc
inc
clc
jl
and
inc
or
test
clc
fwait
xchg
and
loopne
cmp
les
jge
enter
pusha
loopne
frstor
movsb
rolb
mov
mov
or
pop
addr16
mov
add
inc
in
sub
repnz
mov
push
aam
subl
rolb
xchg
fs
xchg
fucom
mov
mov
fisttpll
sub
adc
rorl
sub
and
and
loopne
repnz
push
mov
or
adc
or
xor
lods
pusha
andl
les
sub
or
and
imull
clc
dec
out
xor
xor
nop
dec
testb
or
fldt
and
ljmp
push
xchg
xchg
lock
test
bound
and
mov
test
mov
test
xor
jnp
dec
and
jbe
call
inc
xor
cmp
imul
add
pop
jno
roll
ret
pop
ljmp
add
or
add
aaa
inc
mov
push
push
shll
jp
mov
aad
xchg
popa
and
mov
shl
xchg
ret
jecxz
in
orb
and
cmpl
push
rol
mov
stos
pusha
test
out
es
lea
jae
xor
rorl
popa
xchg
icebp
lock
sbb
loop
daa
loopne
pop
sti
bound
ret
xor
lods
das
xchg
mov
popf
sbb
into
jns
xor
js
add
or
adc
push
jo
into
inc
in
stos
inc
inc
ja
push
test
push
jb
rcll
andb
push
pusha
push
inc
jb
push
jnp
fnstsw
ret
pushf
insl
enter
and
mov
add
or
ljmp
sbb
lahf
popl
adc
mov
mov
and
andb
movsb
rolb
test
cmovbe
mov
add
or
adcl
jb
cmpsw
adc
loop
addr16
add
cli
and
and
fwait
ret
xor
bound
inc
mov
dec
mov
sub
inc
mov
pop
cmc
mov
xor
mov
aaa
add
add
ljmp
push
xchg
rcll
push
add
popa
int
adc
addl
loope
add
mov
lcall
add
gs
fbld
push
fwait
lods
ljmp
push
rolb
or
mov
pop
adc
lods
fcompl
repnz
add
out
and
cwtl
das
dec
push
mov
mov
test
inc
cmp
divb
or
mov
push
xchg
adc
xor
mov
pop
xchg
xlat
movsb
les
pushf
xchg
cmc
test
add
cwtl
enter
cmp
push
push
mov
inc
sbb
int
dec
mov
stc
lcall
mov
sub
xchg
test
adc
aas
add
ret
sbb
jb
push
repnz
add
mov
mov
js
lret
cmc
into
andb
or
jmp
leave
call
xchg
sub
push
push
aad
fs
sbb
xchg
add
jmp
subb
iret
xor
inc
xor
dec
and
xchg
test
test
pop
adcb
mov
lahf
push
inc
sub
and
push
or
sub
test
ret
aas
and
jl
test
and
mov
sbb
test
push
lods
add
pop
movsb
into
aaa
fistpl
daa
jmp
push
jae
lock
xor
mov
shr
jno
add
or
sbb
popa
mov
lret
mov
push
es
or
sbb
and
inc
loopne
push
mov
ret
shrd
or
pusha
out
and
ficoml
add
add
adc
jmp
int3
mov
inc
jbe
sub
fs
xchg
inc
cwtl
push
inc
fcoml
dec
jl
mov
mov
xor
shlb
add
xor
fdivp
push
popw
xchg
js
mov
jmp
icebp
ficoml
push
inc
add
lret
stc
inc
xchg
sbb
xlat
mov
add
data16
call
les
leave
xor
mov
push
cltd
xchg
or
mov
testb
mov
andl
sub
xor
les
pop
bound
pop
mov
jb
cmp
and
fidivs
add
stc
inc
pusha
out
pop
mov
add
cmp
jg
add
leave
pop
push
inc
lock
hlt
or
dec
xor
or
pusha
ss
or
add
fwait
outsl
mov
shlb
mov
cmp
popa
ret
add
aas
clc
jg
ret
and
sub
fildl
mov
lods
dec
and
or
test
sbb
mov
pusha
inc
cmp
test
push
sub
sub
lock
and
faddl
add
sbb
jl
lods
test
and
fcoml
sbb
mov
or
movsb
pop
push
cmp
scas
adc
mov
add
shlb
mov
and
rolb
or
mov
mov
cltd
aam
cmpsb
enter
mov
test
dec
add
scas
add
xchg
or
addb
mov
into
adc
or
filds
in
xor
xor
aad
cmp
sbb
inc
ss
sbb
mov
or
test
pusha
xor
adc
mov
and
pop
subb
mov
jp
add
jge
inc
sbb
mov
icebp
and
cld
pop
jno
int3
inc
mov
pop
nop
fs
mov
mov
out
clc
pop
sti
icebp
add
cmpb
call
or
xchg
cli
jne
jo
cltd
and
dec
adc
push
mov
inc
push
xor
lods
xor
lock
or
rorb
adc
inc
scas
out
lods
ret
inc
leave
add
pop
mov
data16
fsubs
inc
push
pop
jmp
fidivl
xorl
push
sbbb
and
shrb
mov
in
or
pushf
pop
insb
and
sbb
pop
shll
inc
les
fnstsw
or
xchg
xchg
shr
enter
test
pusha
adc
or
scas
out
xor
rorb
mov
push
mov
ss
dec
lods
cmp
in
mov
icebp
push
adc
mov
or
sbb
add
rcl
inc
into
les
sti
lret
push
sub
inc
add
mov
insb
sub
jo
jns
test
sbb
in
fsubl
and
inc
cmp
and
aas
push
or
push
aas
loop
add
and
filds
push
cmpsl
fdivl
std
dec
sbb
jb
sti
je
subb
inc
dec
test
add
js
lret
filds
adc
nop
or
in
cmp
mov
popa
pop
cmp
mov
fiaddl
popf
adc
inc
xor
rol
sbb
push
adc
xchg
pop
sbb
fwait
inc
sbb
push
or
sub
add
pop
rcr
sbb
cmc
mov
xchg
aam
call
push
filds
or
mov
lock
xchg
fwait
add
stc
fs
inc
and
cmp
add
or
xchg
add
pop
stos
ret
add
fwait
xstore-rng
cmpsl
int3
add
pop
inc
xlat
daa
sbb
repnz
xor
mov
pop
xchg
cmp
add
maxps
mov
aam
xchg
lock
popf
test
xchg
add
push
xchg
xchg
cwtl
push
sbb
adc
std
addl
stos
xor
sub
bound
daa
lret
pop
cltd
lea
fidivl
push
inc
lret
push
jle
adc
xchg
or
test
sub
push
add
insb
jnp
sbb
or
das
mov
addb
rcll
adc
jbe
mov
jg
sbbb
or
add
and
into
fimull
and
mov
dec
push
lock
pop
loope
xor
and
xor
loopne
sbb
xor
or
shlb
aas
push
adc
sbb
nop
pop
enter
loop
data16
test
inc
in
ds
push
and
nop
hlt
enter
out
ljmp
sbb
push
dec
into
rcrb
and
nop
xchg
lret
test
xor
xchg
xor
add
mov
bound
sahf
mov
inc
inc
or
rolb
aad
adc
jns
adc
loopne
xor
xor
insl
and
rolb
fwait
test
dec
sub
or
add
test
scas
adc
sub
pop
js
ret
mov
mov
lods
cmp
hlt
mov
add
mov
push
push
adcb
sub
and
inc
push
lods
cmp
jg
pop
cltd
xor
cmp
adc
xor
sbb
add
inc
icebp
leave
jg
pop
inc
pop
push
fwait
stos
loopne
adc
add
andl
xchg
arpl
imul
and
add
mov
movsb
out
test
js
enter
flds
add
add
bound
jmp
rcll
dec
inc
mov
fcoml
bswap
jno
add
mov
or
push
mov
fiaddl
xor
pop
add
and
rcl
or
dec
add
aaa
pop
mulb
sbb
mov
addb
mov
ds
enter
mov
loop
add
cli
add
hlt
je
cmpsl
mov
outsl
adc
pusha
lcall
fwait
inc
cmp
sbb
jnp
test
mov
xchg
sbb
mov
loopne
cmpsl
lds
sbb
inc
cmpsl
xor
outsb
dec
cmp
lahf
add
cmp
push
test
mov
jl
shlb
repnz
sbb
mov
xchg
rcrb
dec
mov
clc
add
pop
int3
ljmp
cmpsl
sti
mov
clc
orb
add
mov
ror
dec
aam
clc
cmp
add
sub
mov
sub
mov
rcl
int
aad
jns
mov
add
add
test
inc
inc
testb
cmp
sub
add
add
out
pusha
aam
mul
cmpsl
add
aas
xchg
cmpsb
dec
mov
call
stos
mov
or
push
stc
mov
sub
inc
lods
mov
mov
xor
xchg
pushf
cmp
pop
add
pop
xor
mov
add
leave
mov
orb
mov
jl
xor
jno
lock
xor
test
incl
adc
sub
cmp
ljmp
jo
loopne
nop
loop
aam
mov
lret
ror
pop
insl
jmp
add
repnz
out
xor
stc
clc
bound
mov
cmp
hlt
subl
cmc
sbb
cmp
daa
jle
mov
rcr
dec
pusha
stc
orb
cmpb
add
dec
mov
sbb
shlb
fiaddl
in
inc
test
xchg
es
adc
add
xor
ljmp
jb
mov
mov
pop
adc
xor
andb
push
icebp
stos
dec
sti
or
and
cmpl
sub
mov
adc
and
add
lods
insb
test
js
mov
test
stos
in
pop
pop
rolb
cmc
add
xor
ret
add
lods
mov
ret
or
adcb
stos
pop
sub
pushw
daa
or
in
inc
mov
push
inc
dec
add
ja
addl
or
inc
sar
clc
orb
mov
mov
cld
rcrb
ja
mov
cmp
push
mov
add
insl
inc
inc
mov
int3
shrb
fcoms
adc
sbb
sbb
shrl
sub
pop
push
jl
adc
gs
add
enter
scas
into
mov
jmp
pop
aas
dec
es
add
add
xchg
addr16
add
push
cmpsb
jo
sbb
sbb
cld
jg
mov
inc
and
xor
ss
stos
mov
daa
pop
out
les
mov
adc
mov
inc
movl
rol
iret
xor
js
sbb
aaa
cmp
dec
fsubr
testl
sub
mov
xor
cmp
bound
fcomi
push
add
add
xor
mov
ljmp
pusha
cwtl
push
lret
add
int
outsb
inc
loope
in
mov
ja
pop
divb
adc
pop
add
or
mov
cmp
leave
push
arpl
mov
xor
loope
dec
mov
push
aam
pusha
adc
scas
sbb
sahf
push
movsb
icebp
imul
loope
dec
dec
mov
mov
mov
inc
popf
in
mov
addr16
add
pop
dec
ds
fistpl
add
sub
push
loopne
inc
add
mov
hlt
push
add
bound
sbb
pop
fsubrl
add
xor
das
divl
out
imul
fwait
cwtl
cli
daa
inc
pop
xor
xorb
rorb
inc
jle
jmp
adc
inc
adc
enter
adc
cmp
xor
adc
add
xor
out
push
test
mov
push
jns
add
xor
dec
aam
arpl
xchg
mov
jno
add
cmp
das
mov
jl
jecxz
mov
push
mov
xchg
addb
adc
aaa
aas
mov
lret
add
add
mov
xchg
push
push
aaa
add
push
jns
add
jmp
xor
in
mov
call
loope
cli
jnp
add
add
mov
mov
jbe
add
out
lret
cmp
inc
cmp
add
iret
loope
mov
xor
flds
ss
sub
bound
inc
xchg
int3
lret
adc
add
sub
cmp
push
pop
dec
aas
inc
push
xchg
ss
inc
faddl
dec
add
stos
pushf
add
jp
xor
pop
adcb
sbb
ficomps
jo
lret
cmp
add
aam
scas
jae
icebp
mov
enter
push
imul
dec
out
loop
and
mov
testb
pop
jo
aas
add
jno
xchg
inc
add
cmp
mov
add
loope
rolb
dec
out
adc
pushf
add
lcall
mov
fiaddl
mov
push
adc
data16
xor
cltd
sbb
inc
lods
push
or
xor
mov
mov
les
mov
test
shll
mov
lret
add
xlat
adc
mov
xchg
int
sub
jno
test
jp
call
jg
and
cwtl
cld
add
sbb
or
or
add
js
and
ret
jg
pop
xor
pusha
in
mov
ficompl
add
xchg
enter
int3
mov
sbb
test
call
cmpb
push
popf
mov
pop
rcl
pushf
pop
sub
push
or
sub
andl
sti
or
das
push
sub
cli
jp
mov
loopne
push
pop
cmp
xor
mov
roll
mov
lcall
mov
arpl
sti
out
xchg
cmp
fcoms
pushf
pop
cmpsl
xor
cwtl
fcmovnbe
outsb
pop
inc
and
pop
jns
or
mov
out
leave
jle
or
in
sbb
ja
pop
outsb
add
test
sbb
imul
das
adc
jno
sahf
add
or
sub
add
and
xchg
call
enter
hlt
mov
add
or
sub
movsb
gs
add
adc
cmp
jno
scas
fstl
je
lods
cs
or
test
lock
add
sbb
mov
cmpsl
movsb
add
mov
sti
pusha
xor
push
cld
les
cmp
sub
sahf
dec
pop
pop
sbb
adcb
divb
clc
add
xchg
shl
fdivrp
filds
icebp
lock
and
add
out
adc
clc
jbe
inc
cltd
add
movsb
sub
test
rclb
lock
mov
ret
jle
psubd
push
pop
orb
add
and
sbb
xor
lret
add
fsubrl
adc
xor
xchg
lods
lock
inc
mov
hlt
loop
push
add
mov
imul
rclb
mov
add
xchg
lret
call
sbb
and
mov
pop
xor
jno
add
pop
mov
and
mov
test
add
loopne
pop
xorl
inc
out
push
int3
leave
add
mov
add
outsl
hlt
jno
mov
repz
and
mov
or
cmp
xchg
mov
in
lret
xchg
cmp
mov
mov
xchg
cmpsb
dec
nop
add
cmc
out
in
add
out
aas
enter
pushf
dec
or
pop
push
sti
push
sbb
adc
pop
test
mov
add
in
out
mov
add
fwait
sahf
inc
or
outsb
adc
jno
xor
gs
xchg
test
pop
jbe
sbb
jp
repz
loopne
aas
or
and
sbb
cmp
and
cmc
pusha
lret
jbe
cmpsb
out
loopne
pop
xchg
jl
pop
and
jo
jne
rolb
mov
xor
call
ja
fcoms
adc
loop
cltd
in
add
lock
add
cmc
mov
jecxz
sub
rcll
addr16
fldl
mov
daa
insl
add
repz
cmpsb
das
aaa
jge
sub
movl
cwtl
test
sub
add
ret
mov
roll
repnz
pop
or
lcall
lods
push
mov
in
sub
add
jmp
xchg
sub
mov
add
jge
mov
pop
xor
pop
add
out
add
addb
lods
add
mov
inc
out
jmp
jo
gs
sahf
lldt
add
dec
add
out
call
cs
gs
in
mov
iret
lahf
call
std
add
adc
cltd
bound
add
outsl
or
shrb
aad
push
add
loope
inc
movl
add
xor
cmpsb
jno
push
add
xor
inc
inc
or
add
fwait
sbb
inc
je
add
call
jge
jo
pusha
je
or
mov
add
inc
shrl
aam
js
testl
pop
scas
adc
add
les
pop
mov
add
inc
call
or
inc
cwtl
lret
rcll
jns
clc
add
xchg
jecxz
or
pop
cmp
xor
sbb
push
xchg
shr
out
cmp
popa
inc
aam
imul
stc
test
push
add
fists
test
add
xchg
loope
es
add
lahf
sbb
mov
mov
mov
add
lea
add
shr
add
mov
fimull
andl
add
stc
testl
cwtl
imul
xor
cmp
mov
jno
push
aas
pusha
movsb
ss
sub
add
fsubs
xchg
xor
pop
imul
fldt
imul
cmp
dec
add
gs
or
xchg
ja
cltd
xchg
repz
outsb
cmp
cwtl
lock
sbb
arpl
mov
in
dec
aaa
fisubrl
into
icebp
out
add
sub
jae
movb
push
and
out
lcall
sbb
jg
add
lds
and
cmp
test
add
leave
pusha
ljmp
icebp
stos
cmp
sub
stc
stos
shll
lds
outsb
hlt
outsl
add
cli
jnp
mov
jmp
add
cmp
mov
iret
cmp
or
inc
mov
pushf
cmpb
pop
mov
xor
push
les
push
aaa
aam
pusha
push
adc
movsb
test
xchg
mov
adc
dec
fadds
xor
leave
scas
push
imul
mov
inc
out
adcl
push
stos
xchg
in
repz
enter
push
popw
aas
jge
push
test
pop
hlt
jmp
push
push
adc
dec
cmpsb
xchg
cmp
cltd
mov
pop
sub
arpl
inc
out
add
mov
xor
in
and
jo
jp
add
shl
aam
leave
cmp
mov
outsb
push
mov
out
jo
cmp
xchg
fwait
add
push
inc
andl
sub
loopne
mov
xchg
rol
jo
mov
add
cmp
inc
lods
insb
sub
pop
mov
add
dec
add
cmp
in
xchg
hlt
add
stc
insl
pop
pop
xorl
cmc
enter
add
loopne
pop
xor
sub
int3
mov
push
popa
fs
mov
repnz
pop
mov
add
push
testl
push
and
adc
add
mov
aas
sub
leave
popf
mov
insb
inc
sub
shl
mov
sbb
and
lock
push
jle
or
xchg
and
mov
movsb
add
mov
pusha
inc
jae
and
xor
loope
pop
cmc
loop
and
fimuls
dec
xor
inc
or
mov
shr
sub
ret
orl
ds
pop
notb
hlt
hlt
test
mov
xlat
ljmp
jno
adc
jecxz
push
lret
and
inc
add
push
loope
pop
sbb
scas
pop
cmp
rorb
dec
roll
push
data16
call
push
adc
shrb
add
mov
push
iret
fcoms
mov
out
add
inc
ret
dec
or
push
push
and
adc
testl
adc
fisubrs
aaa
jae
jo
pop
call
das
lcall
pop
lods
sub
xor
addl
cli
mov
xor
rorb
lds
dec
lea
es
adc
in
mov
adc
pop
fisttps
xor
in
xchg
xlat
jno
lods
and
daa
sub
or
in
sub
xchg
cs
in
adc
icebp
add
pop
sbb
bound
add
rcrb
jno
jmp
add
sub
call
and
ret
arpl
rcll
inc
push
add
cwtl
jno
clc
aam
or
mov
outsb
adc
inc
adcb
push
into
lods
sub
test
test
jne
jnp
add
push
xchg
push
jmp
mov
int
pop
add
pop
jg
pusha
cmp
adc
jl
lock
sbb
cmp
pop
add
add
shufps
inc
daa
lahf
je
jb
push
push
out
popf
adc
jmp
dec
outsl
clc
loop
lcall
inc
xchg
xor
add
lret
adc
xor
ss
jl
jno
sar
jo
loopne
fisubrs
xchg
add
inc
add
rclb
xor
add
inc
fildll
rclb
and
jne
stc
fimull
jo
aad
sbb
cmp
mov
mov
ret
adc
add
sbb
in
inc
add
movsb
in
mov
dec
mov
sti
mov
push
xor
push
bound
add
xchg
punpckhbw
arpl
add
rclb
out
push
sahf
testl
mov
mov
enter
jecxz
sbb
es
add
jbe
adc
aam
in
cwtl
ja
add
inc
jno
add
xor
or
cmp
call
adc
jle
add
daa
loop
add
clc
mov
js
movsl
cld
enter
repz
arpl
jbe
fcoml
out
mov
in
add
mov
js
add
cs
jne
js
in
movsl
add
push
jae
out
and
add
or
out
loopne
pop
lret
cmp
jb
push
add
outsl
movsl
xor
mov
sub
addb
mov
nop
add
dec
insb
add
lea
xorl
les
stc
pop
add
or
imul
push
mov
mov
or
jle
mov
adc
or
mov
mov
popf
andb
mov
and
popl
out
jmp
cmp
sbb
mov
incb
sub
sbb
rol
lds
push
push
xchg
jbe
sbb
pop
fidivl
imul
dec
pushf
imull
add
ljmp
fldt
aad
test
sbb
je
lret
setge
mov
pop
add
fiadds
jb
sbb
add
and
add
loop
imul
sti
cs
hlt
add
sbb
dec
in
push
push
gs
adc
jns
add
dec
in
xchg
mov
fiadds
aam
push
jecxz
pop
jge
pop
sub
iret
in
sub
lea
add
add
fistpl
xchg
lock
mov
or
dec
mov
mov
fnsave
xor
add
pusha
fcmovu
add
xchg
jg
test
flds
add
inc
pop
add
or
daa
adc
pop
push
mov
push
stos
add
sti
inc
xchg
cltd
push
pop
hlt
bnd
mov
pop
cld
sub
cmc
jl
cmp
add
les
in
dec
hlt
pop
lock
jns
adc
adc
sub
nop
test
rcrl
and
in
pusha
pop
adc
inc
add
mov
cmp
data16
jge
js
jne
in
enter
sub
lahf
cltd
into
dec
loop
push
xor
pop
and
and
push
sahf
push
stc
xchg
jo
xchg
pop
mov
xor
jb
ljmp
mov
in
test
dec
jo
outsl
push
pop
loopne
pusha
or
rcll
add
rclb
ficoml
jl
pop
add
arpl
lret
lea
movsb
sbb
nop
add
test
lods
std
push
cmp
xchg
cld
push
pop
adc
ljmp
hlt
mov
add
cmpsl
mov
xlat
jae
add
pop
fstl
adc
mov
insb
push
shlb
sub
sub
xor
jg
add
loop
add
in
pop
mov
cs
dec
xchg
shll
and
into
int3
mov
add
leave
pop
sub
fistpll
add
cmp
xlat
pop
mov
out
pusha
push
or
add
test
in
out
sbb
xchg
lea
inc
call
push
insb
pop
pop
and
jno
shrb
leave
add
or
pop
fistpl
push
add
inc
inc
or
daa
pop
hlt
add
mov
and
flds
aas
inc
jbe
fcompl
leave
xchg
icebp
popa
mov
les
addb
in
fistl
das
mov
js
cmc
jge
gs
fcmovb
sets
jo
fnstcw
clc
mov
and
pop
mov
frstor
enter
out
orb
mov
daa
sbbb
add
sub
mull
sarl
fisttps
lods
sahf
test
jmp
adc
inc
mov
popa
xchg
add
fwait
repz
mov
pusha
add
mov
inc
test
loop
rcl
ss
js
add
dec
adc
lods
popa
jle
jbe
fnstcw
xor
or
jmp
pop
mov
lds
add
std
scas
inc
pop
out
sub
pop
dec
xor
or
andl
popf
enter
sbb
fwait
mov
fs
mov
jnp
lock
imul
add
mov
clc
mov
dec
fcompl
fldl
lods
addb
add
or
faddl
ja
mov
addb
or
jp
jecxz
es
pop
fstpt
ret
xchg
add
mov
xor
dec
sub
shrl
pop
es
lods
mov
mov
inc
nop
js
repz
sub
loop
jo
pop
pop
aad
pusha
dec
bnd
jno
cltd
add
push
rcll
pop
jo
insl
cmpsb
lahf
sbb
imul
jae
dec
xor
insb
mov
inc
fadds
push
out
dec
cmp
pop
test
out
add
in
add
jl
add
les
jp
pushf
fcoms
pusha
jo
adc
mov
add
dec
jmp
in
cmp
aam
sahf
push
sbb
sbb
inc
and
xchg
pop
fwait
pop
push
jns
add
mov
pop
mov
add
mov
mov
or
mov
loopne
sbb
cmp
ds
jne
int
out
mov
mov
gs
subb
clc
in
push
xlat
add
rcl
or
cmp
jmp
pop
add
rcr
test
iret
nop
dec
add
and
lret
mov
call
push
pop
cmp
in
adc
pusha
xchg
popa
adcb
and
add
ret
jno
pop
outsb
lret
hlt
pop
arpl
push
test
and
test
lods
add
test
repnz
add
mov
mov
add
jnp
das
push
inc
pop
xchg
js
hlt
add
incl
and
add
jle
rolb
call
mov
roll
xchg
push
mov
in
lock
movb
xchg
fwait
push
and
jo
xchg
pusha
dec
das
push
jo
add
scas
mov
cmp
push
loopne
iret
fldcw
push
or
jb
js
add
mov
stos
add
out
test
aad
pop
push
and
sub
pushf
pushf
add
into
mov
jp,pt
or
mov
add
push
pop
xchg
outsb
xchg
mov
xor
lock
cwtl
loope
mov
into
mov
add
dec
in
pop
jle
add
out
sub
aad
add
add
fidivrs
add
or
mov
add
cmp
xlat
cli
les
lret
add
lea
out
xor
movl
mov
mov
fnstsw
adc
addb
add
imul
pop
rolb
dec
cld
and
add
stos
fisubl
mov
push
lods
jle
dec
or
sbb
mov
inc
jg
sbb
add
xor
add
sbb
mov
dec
push
test
add
lock
lock
popa
add
adc
add
mov
cmc
pop
je
in
es
add
cmp
jbe
add
xchg
adc
shl
adc
mov
inc
inc
vmwrite
sub
cwtl
mov
lock
add
add
adc
ljmp
imul
sti
or
rcrb
add
je
push
movsb
mov
add
cmpsb
add
jnp
rcrb
add
bnd
pop
ja
cmc
xor
fidivrs
lret
add
ret
add
sub
mov
cmp
cwtl
enter
popf
nop
hlt
adc
cmp
add
jge
mov
add
imul
shl
pop
jno
lret
in
add
insl
nop
inc
pop
shl
push
sar
mov
add
sbb
add
adc
xchg
push
mov
pusha
mov
shll
mov
rcrb
lret
cmp
sbb
adc
jp
mov
aaa
test
dec
mov
inc
fdivr
enter
add
loop
icebp
add
loopne
fmulp
adc
faddl
push
add
lea
add
jb
sub
add
outsl
dec
push
test
lea
ret
and
and
sub
in
mov
loope
pop
testl
fisttpll
or
adc
jo
mov
rclb
or
sahf
icebp
scas
movsl
adc
add
inc
mov
mov
xor
mov
sub
fs
or
out
clc
movsl
add
nop
fwait
xchg
add
push
jo
nop
jp
int3
lcall
pop
mov
add
fcomp
int3
pop
add
mov
cmp
xor
adc
mul
sbb
adc
inc
std
inc
mov
movb
mov
dec
popa
sbb
mov
cwtl
add
fldl
or
fildll
jbe
outsb
and
add
lods
inc
cltd
shrl
pusha
pusha
dec
or
nop
scas
inc
push
xor
test
xchg
lea
outsl
sub
cmp
inc
ds
jb
lcall
and
jle
cmp
adc
jns
xor
mov
arpl
movsl
cmpb
xor
js
sbb
enter
push
out
and
mov
in
sub
adc
loopne
nop
clc
cld
mov
stc
pusha
mov
addr16
add
push
sarb
xor
or
jbe
test
stos
stos
and
jecxz
mov
mov
testl
mov
cld
cs
dec
mov
cmp
fscale
cmpb
pusha
subl
and
movsb
push
push
dec
addr16
sbb
mov
inc
cli
scas
add
pop
pop
jo
cltd
in
add
xchg
in
fldl
repz
mov
prefetchnta
ret
xor
imul
lahf
inc
add
jno
insl
adc
sub
xchg
mov
js
out
xor
add
xchg
mov
mov
es
mov
ficomps
push
push
and
pop
test
add
pop
or
or
sub
add
out
incb
mov
jmp
dec
add
sub
add
mov
cmc
jb
imul
dec
sbb
push
or
add
leave
jg
sub
pop
pop
add
pop
push
cld
cld
jb
adcb
push
in
adcb
mov
add
inc
xchg
sub
cmpsl
mov
xor
lea
push
or
rorb
add
xor
xor
cmp
test
jge
add
pushf
movsb
inc
into
pop
loope
test
push
or
add
out
jl
in
std
and
xchg
imul
les
fldcw
mov
pop
push
into
jb
nop
adcb
ljmp
add
adcl
pop
shr
pushf
loope
inc
mov
fimuls
ja
jns
dec
es
adc
pop
add
lret
call
std
dec
bound
fsubrs
repz
inc
xor
rcl
pop
jge
loopne
pop
int3
add
fmull
enter
pop
xchg
pop
cmc
cmpsb
lock
xlat
mov
sbb
aam
incb
xchg
pop
bound
mov
mov
ficoml
dec
adc
sahf
mov
push
int
in
sub
sbb
fidivrs
push
xlat
stos
add
cltd
and
sahf
std
push
add
push
stos
imul
pop
sbb
cmp
jl
push
dec
imul
bound
daa
xor
dec
pop
xchg
and
sub
lods
push
pop
pop
leave
pop
add
xchg
push
sbb
movsb
in
xor
mov
and
mov
add
jnp
push
fsubs
in
pop
pusha
repnz
insb
sbb
inc
and
in
push
pop
outsb
push
or
xor
lods
add
test
pop
adc
jmp
scas
mov
cmp
btc
iret
nop
push
cwtl
mov
sbb
std
les
clc
aad
add
pop
or
roll
and
adc
xor
mov
fdivrl
clc
cld
xchg
add
or
adc
mov
icebp
add
js
adc
cmpl
inc
cmp
call
std
xor
out
dec
add
clc
imul
xchg
inc
push
pop
or
xor
inc
mov
push
jmp
testl
in
ja
cs
inc
fcoms
lock
cmpsl
add
loopne
sub
lds
mov
ds
cmp
pushf
and
stos
xorl
das
pop
push
enter
lret
jo
adc
add
fnstcw
inc
adc
lods
inc
pop
addb
jbe
call
add
gs
sbb
aaa
push
dec
hlt
popa
add
mov
xor
cmp
sti
movsb
repz
jg
sarl
outsl
push
andl
repnz
adc
mov
in
and
gs
add
hlt
push
addb
or
sbb
ja
sbb
push
mov
shl
mov
fwait
cmp
stos
aas
push
cmp
ds
inc
pop
jmp
into
and
jns
arpl
and
add
add
xchg
mov
and
xchg
push
dec
and
leave
test
pop
add
jge
xorl
inc
fisubl
xor
mov
inc
sbb
dec
fs
sub
jo
adc
sahf
stos
inc
cwtl
mov
dec
and
aaa
jp
popf
add
inc
dec
xor
xor
add
out
fsub
imul
xor
inc
mov
xor
aam
adc
ficomps
cmc
iret
repnz
testl
out
pop
stc
pop
ljmp
dec
inc
lock
mov
ficoms
mov
stc
mov
mov
xor
sbb
daa
jo
aas
adc
and
fidivs
mov
inc
xlat
add
mov
ds
cmp
stc
add
mov
ss
cmpb
mov
xchg
mov
fwait
and
xchg
movsb
sti
loopne
or
sub
pop
push
fbstp
push
mov
stos
rcrb
insb
roll
data16
out
mov
cmp
andb
scas
dec
push
mov
jmp
nop
adc
xchg
scas
fsts
enter
jne
repnz
popf
add
xor
jnp
inc
mov
push
adc
jp
mov
jnp
aad
cmpl
or
add
xchg
aam
mov
sarb
dec
nop
mov
add
cwtl
xorb
add
into
cmp
inc
ret
lock
lret
iret
sub
xlat
aas
addr16
fdivl
int
pusha
aad
push
add
leave
dec
add
push
add
into
sbb
push
push
lods
mov
fsubl
inc
out
xor
push
pop
jae
jb
mov
sub
ljmp
in
push
imul
add
test
lods
iret
add
jle
push
pusha
notb
pop
dec
test
sahf
sub
lock
mov
lds
pusha
jns
into
dec
mov
in
cld
shl
mov
dec
add
das
in
lock
rcl
mov
add
or
or
mov
mov
out
lods
mov
add
push
add
icebp
xchg
or
inc
jecxz
pop
xor
icebp
das
pop
sarb
jno
add
outsl
pop
and
push
rolb
sbb
mov
add
mov
clc
mov
jae
add
testb
test
lock
out
xchg
xor
inc
mov
movsl
pop
popf
dec
or
roll
xchg
push
add
outsl
sbb
mov
nop
iret
and
prefetchw
or
shr
or
jbe
pop
outsl
ret
push
movsb
push
adc
mov
cmp
int3
add
xchg
xor
push
jg
cmp
xchg
or
adc
add
jne
es
sarb
add
call
and
push
push
sahf
push
mov
xor
adc
mov
dec
pop
movsb
pop
push
js
into
inc
int3
mov
mov
mov
or
pop
gs
sbb
jbe
jle
sub
lea
idivb
clc
xor
pop
mov
sbb
sub
scas
ss
xchg
mov
cmp
and
add
jne,pn
add
fnstsw
add
lcall
pop
enter
cmp
cld
jbe
pop
test
inc
insl
popf
dec
lds
in
sbb
xchg
test
fimull
mov
aas
xchg
lods
jne
imul
mov
xlat
and
lds
dec
addr16
adc
pop
loopne
mov
jp
cmp
jge
push
clc
testb
add
imul
into
mov
xchg
in
negl
jmp
nop
fprem1
addb
push
stos
js
mov
rolb
jle
out
mov
mov
push
test
nop
lock
test
cltd
test
mov
add
mov
add
dec
sahf
adcl
addr16
repnz
mov
add
addb
cmc
add
sti
sbb
mov
xchg
xchg
mov
xchg
adc
add
scas
inc
mov
lcall
rcl
mov
and
and
repz
jno
jmp
xchg
sbbl
loopne
movsb
inc
nop
dec
xchg
xor
inc
or
and
push
pop
push
das
push
test
cmpsb
add
out
ja
cmp
hlt
repz
fsubrs
sbb
push
sub
dec
or
inc
sub
add
xor
pop
insb
out
movl
jle
xor
mov
mov
push
cltd
in
add
add
and
dec
mov
je
dec
or
mov
mov
pop
aas
es
hlt
push
or
cs
mov
mov
cltd
ljmp
sbb
jo
and
or
mov
je
enter
aas
lods
ret
mov
pop
jb
or
ljmp
pop
sub
inc
add
daa
div
add
data16
push
mov
or
cmpl
mov
add
nop
inc
rcrl
inc
push
sub
rolb
rolb
mov
leave
add
int3
test
mov
dec
mov
sub
cld
mov
out
addr16
add
js
jae
and
pop
or
add
dec
cmpsl
out
add
loope
nop
das
pop
xchg
mov
dec
je
jge
int3
mov
jl
xor
test
rolb
enter
add
pop
mov
mov
pop
fldl
mov
push
fmuls
push
flds
mov
inc
imul
adc
adcl
ret
xchg
xchg
inc
fsubl
sbbl
cmpb
inc
sbb
add
mov
inc
pop
mov
pop
add
push
sbb
cmp
ret
sub
call
jl
inc
mov
xchg
or
sahf
sti
mov
mov
inc
stos
push
rorb
cwtl
std
lods
or
fwait
ja
cmpsb
adc
add
gs
movsb
insl
add
dec
pop
xchg
dec
in
int
add
cli
imul
jne
sbb
ds
sti
jg
push
in
outsl
dec
lods
xor
pusha
add
iret
pop
jne
aaa
mov
push
movsl
bnd
cld
adc
daa
nop
mov
outsb
or
add
mov
mov
dec
sub
loope
xor
loopne
push
add
fistps
jl
xor
mov
sub
jl
pop
lea
push
inc
stos
cmp
mov
push
push
xchg
jno
cmp
ja
lret
das
cltd
cmp
andl
mov
cmp
ljmp
push
cmp
iret
scas
bound
inc
mov
loopne
mov
jecxz
mov
rcrl
mov
push
out
pop
fstl
stc
add
add
aam
pop
rol
ljmp
stos
sbb
lods
mov
push
sbb
pop
xchg
jge
out
addb
jbe
add
shll
adc
aaa
pop
pop
xchg
lds
sbb
pop
arpl
mov
pop
lds
in
rolb
insl
orl
sub
pop
inc
and
cwtl
adc
sub
sub
movsb
out
sahf
sub
xchg
pop
add
stos
fistpl
add
roll
cli
cs
loopne
xchg
lods
jle
push
or
mov
call
adc
jb
or
in
pusha
inc
adc
xor
in
push
shl
fdivs
or
dec
pop
movsb
cwtl
inc
xchg
and
add
push
pop
jp
or
push
ret
faddl
inc
mov
inc
mov
and
jae
add
push
push
lea
pop
clc
jle
push
in
cmp
arpl
stos
add
ss
mov
pop
adc
or
pop
cmp
inc
out
lea
lcall
cwtl
xchg
add
or
xor
decl
pop
dec
sbb
mov
push
cmp
ja
aam
cmp
movsb
push
scas
ds
dec
test
rolb
imul
cwtl
adc
cmpb
movsl
inc
rcrb
in
xorb
mov
aad
push
pop
test
jl
pusha
add
faddl
and
insb
repz
add
scas
push
push
push
enter
add
or
fadds
inc
lock
add
and
stc
cltd
pop
xor
push
jg
movsb
enter
inc
ror
pop
mov
es
push
and
adc
add
or
push
pop
inc
or
call
or
lds
cmp
inc
sarb
adc
push
xchg
ret
cmp
mov
mov
xor
xor
add
push
xchg
pop
out
movl
addr16
movsl
pop
push
in
test
xchg
lds
xchg
cmp
or
adc
cmp
leave
lcall
xchg
or
test
call
add
adcl
inc
mov
adc
mov
lods
and
out
sbb
push
xor
roll
add
out
jge
sub
rorb
dec
outsl
daa
repnz
fwait
add
dec
gs
jp
mov
cmp
outsl
test
mov
enter
xchg
adc
ret
fildl
pop
in
pop
imul
lods
in
in
mov
and
or
testb
rolb
add
dec
lods
in
mov
in
and
pop
or
rolb
pop
fisttpll
mov
jbe
and
mov
mov
push
sbb
inc
insl
sarl
sbb
scas
aam
adc
lea
insb
insb
jo
stos
xor
add
mov
test
je
adc
cltd
enter
rorb
xor
inc
jne
in
push
ret
xor
mov
sahf
sub
enter
popf
adc
mov
ja
jecxz
jo
add
sub
loope
hlt
cmp
add
test
ja
cmp
lret
pushf
mov
xor
mov
inc
mov
and
cmp
cmp
js
dec
push
and
pop
test
xor
lods
sub
mov
test
sbb
inc
or
cmp
fsubrl
sbb
or
std
iret
mov
jl
mov
test
jno
int
ret
cwtl
mov
jle
add
arpl
xchg
add
loopne
push
sbb
add
imul
divb
inc
or
enter
aas
roll
ficoml
pusha
lods
push
into
mov
push
jno
inc
xchg
mov
enter
leave
add
xchg
cli
aam
mov
inc
xchg
or
xor
fwait
mov
dec
iret
push
notl
mov
cmc
mov
push
mov
lock
or
add
jae
push
rcrb
rcr
stc
pusha
add
mov
sub
adc
add
mov
inc
scas
pop
decb
mov
ja
jb
loopne
test
loop
js
dec
add
push
imull
cmp
stos
pop
xlat
mov
xor
test
jl
call
dec
into
stos
sbb
popa
cltd
mov
lods
mov
mov
jb
test
xor
enter
pusha
imul
ss
mov
mov
fadd
sub
iret
fisttpl
imul
add
test
adc
enter
add
cmpsb
inc
xchg
test
gs
pop
adc
adc
jae
dec
je
cwtl
mov
add
and
adcl
stos
lock
jl
jae
xchg
inc
inc
test
jbe
push
mov
and
mov
adcb
pop
push
sbbb
imul
add
jae
aad
xchg
xor
sbb
inc
cmp
cmp
jp
int
into
lods
xchg
add
cmpsb
ret
add
add
shlb
cltd
fwait
or
pusha
shl
inc
sub
test
jae
push
subl
pop
shlb
jp
inc
andl
shll
push
mov
loope
pop
adcb
rcrb
faddl
icebp
daa
ret
cmpsb
test
cmc
aad
cmp
push
je
push
fwait
sub
ret
ljmp
cmp
call
jbe
clc
aad
mov
jae
or
inc
xchg
cltd
and
xor
sbb
stc
sbb
jmp
adc
addb
jp
push
pusha
inc
xor
js
fs
push
push
pusha
or
les
jno
test
jo
into
and
or
dec
testb
fmuls
xchg
jo
jge
adc
and
pusha
pop
or
xor
cmp
je
mov
adc
pop
sbb
mov
push
push
movsb
fistps
mov
or
jecxz
cmp
mov
cmp
adc
push
sbb
sbb
test
sahf
cmp
sub
xlat
cs
fcomp
jp
push
bound
mov
sbb
cmp
sub
cwtl
add
stos
loop
orl
bound
rclb
fidivrs
adc
not
test
and
lret
lret
ljmp
aam
cmc
xorb
inc
fwait
pop
add
cmp
rcrb
dec
mov
fsubrl
inc
jl
fldenv
jbe
int3
and
ret
adc
rolb
stos
jge
data16
nop
pop
nop
daa
cltd
and
into
es
pusha
fistpll
or
adc
sti
fs
cmp
and
jl
mov
xor
xchg
add
and
jb
mov
adc
aaa
or
outsb
jns
push
push
jae
je
enter
imul
add
aam
shr
daa
or
push
cmp
cwtl
push
mov
loop
cmp
in
std
fsubr
enter
cmp
or
inc
stos
addr16
xchg
cli
dec
push
int3
and
dec
inc
jno
push
add
and
sub
les
les
jl
shlb
xor
jmp
subl
fsubrs
pop
aad
test
adc
cmp
add
nop
sbb
push
repnz
dec
das
aam
int3
sub
jno
mov
insb
and
adc
js
ret
lock
cli
rol
xchg
pusha
sbbb
out
in
pop
mov
lock
cmp
addl
aam
outsl
sub
shll
dec
or
or
or
shlb
cmp
push
add
sbb
sbb
lret
decb
fcom
ret
shll
xor
push
or
rorb
outsb
add
push
add
int3
adc
dec
pshufw
cltd
cltd
cmp
bound
or
fimuls
and
aaa
mov
je
mov
mov
cmpsl
popl
enter
sub
push
jecxz
nop
cmp
jle
and
adc
push
pusha
adc
inc
cmp
mov
add
test
or
lock
and
push
inc
xor
mov
push
rolb
mov
ljmp
stos
test
xchg
movsb
hlt
sub
pushf
mov
or
pusha
jle
adc
push
add
mov
cwtl
xchg
or
test
mov
vunpcklps
pushf
adc
sub
mov
jnp
add
lds
test
cli
sbb
jbe
lock
add
xor
loope
test
jae
mov
push
aam
lods
jl
loopne
loop
or
and
jae
popa
jl
pushl
or
pop
lcall
notb
aas
add
je
add
sub
clc
in
push
jmp
imul
add
enter
adc
ds
dec
xchg
cmp
xchg
mov
cmp
push
daa
or
mov
mov
xchg
jb
push
or
in
mov
xor
xor
mov
cmpsb
cld
cltd
loope
scas
adc
pop
adc
jb
push
push
dec
jg
in
mov
mov
je
int3
orb
int
fcomps
aas
pop
add
scas
sub
call
cmp
dec
and
mov
xor
cld
or
mov
mov
xchg
or
or
test
hlt
push
popa
test
inc
subb
pop
test
imul
add
jnp
inc
jo
add
sbb
dec
ss
and
sbb
orb
dec
pop
inc
or
sub
or
sbb
enter
push
add
test
int
and
mov
mov
aam
ss
cwtl
xor
int3
popa
out
add
das
gs
cmp
mov
rcr
mov
or
jmp
xor
mov
call
invd
inc
les
inc
into
adc
mov
fwait
imulb
add
sbb
les
stos
sub
cmpb
das
sub
mov
mov
sub
insb
and
xor
jl
pop
mov
sub
sti
cwtl
cmp
inc
add
test
inc
addb
cmp
aad
sub
mov
hlt
in
xchg
push
iret
into
push
push
daa
adc
sub
jns
or
pushf
test
in
out
cltd
stos
jo
or
mov
adc
sbb
pop
dec
testl
mov
xchg
add
jecxz
subl
inc
les
das
xchg
out
into
dec
nop
and
mov
or
or
sbb
or
push
xchg
dec
adc
dec
push
nop
call
dec
repnz
jno
daa
sbb
test
cld
jo
cwtl
and
jno
dec
add
push
add
fidivrl
popf
inc
xor
outsl
in
add
idivb
mov
imul
or
inc
mov
js
mov
and
fdivrs
ja
pop
pop
add
adc
xor
mov
push
add
ror
into
inc
rolw
out
sub
cmp
pushf
cmp
inc
jns
lock
mov
out
pop
mov
sbb
orb
xchg
sub
dec
into
cmp
fadds
pop
mov
push
push
insb
mov
inc
xor
rolb
fiaddl
or
lods
rcrl
enter
mov
add
mov
jo
or
scas
hlt
insl
add
into
or
rorb
or
dec
adc
push
cltd
lret
push
cmp
mov
and
sub
cmp
in
rol
dec
andb
jnp
inc
cmp
sbbl
loope
fistps
scas
testl
mov
pop
inc
movsb
sbbb
cmp
daa
xor
sbb
in
add
and
jo,pn
fs
ljmp
mov
out
or
push
inc
nop
nop
and
sbb
jle
adc
adc
adc
clc
pop
pop
xor
cmp
sahf
add
and
popa
add
jae
push
or
adc
int
insl
add
lock
jo
out
lcall
mov
xor
nop
andb
inc
pop
fdivl
cld
adc
inc
ret
les
sub
xor
dec
je
push
repz
cltd
sub
or
and
xchg
or
nop
add
xor
popf
jb
stos
faddl
and
icebp
lods
mov
arpl
mov
dec
pop
add
inc
rclb
or
rclb
add
add
pusha
mov
pop
ds
cli
cmp
jo
fmulp
dec
lods
cwtl
pusha
sti
mov
xchg
xor
loopne
push
jl
or
lret
cmp
js
fs
into
xchg
pushf
addr16
fmuls
cmp
jb
xchg
pop
xorl
aaa
sub
mov
jo
rcrb
ja
cld
jae
cmp
bound
fisubrl
nop
mov
push
jle,pt
cmpb
mov
inc
sbb
or
shlb
add
nop
test
movsl
shlb
ror
add
jo
test
adcb
test
fsubr
push
jmp
movsb
and
in
sbbb
xor
divb
js
jl
ds
addb
mov
jg
cs
shr
sbb
inc
sub
xchg
and
sub
add
dec
inc
push
lret
jge
mov
pusha
sbb
or
xlat
movsb
test
mov
add
aaa
mov
adc
out
add
jecxz
cli
inc
jl
sbbb
sbb
dec
pop
fwait
push
popa
push
jp
and
shrl
or
fcompl
push
les
mov
inc
pop
jno
pop
pusha
js
rclb
or
mov
test
xchg
push
jmp
test
scas
ljmp
push
cmpl
xor
popf
mov
shrb
out
aas
mov
mov
sub
in
add
add
pop
rol
or
or
dec
xor
leave
adc
arpl
push
jno
dec
cmc
cmp
and
stos
mov
xor
sub
or
lds
add
inc
insl
xor
aas
xchg
mull
xchg
outsb
mov
cmp
and
inc
add
push
jb
add
dec
xchg
or
shrb
lss
xchg
dec
insb
fsub
outsl
adc
adc
lds
add
fsubrs
dec
outsb
mov
sub
xorb
addr16
mov
sub
xor
sbb
adc
sbb
mov
insb
orl
enter
aam
mov
push
push
xchg
sti
insl
gs
xor
add
pop
add
pushf
pop
cmc
sub
pusha
jnp
add
insl
or
push
and
aaa
int3
pusha
rcrb
mov
mov
and
inc
out
pop
stos
or
push
or
test
cwtl
cmp
or
mov
inc
pusha
inc
mov
notl
subb
inc
loopne
in
mov
jo
int
add
hlt
add
call
adc
push
sahf
sarb
in
scas
sysenter
mov
xor
sub
lods
sbb
inc
test
or
aam
mov
imul
add
or
stos
push
push
mov
sub
mov
inc
pushf
sbbb
adc
cmp
daa
dec
xor
inc
rcll
clc
add
test
jle
dec
fnstenv
mov
rcll
pop
or
dec
inc
movsb
push
xchg
cltd
mov
jmp
mov
out
and
adc
cmpsb
ret
rolb
std
aad
rorb
adc
mov
pop
xlat
fldt
lods
out
xor
int3
or
clc
cltd
ret
add
jne
cmp
add
hlt
pushf
in
add
lods
or
dec
das
addl
ret
cmc
or
je
out
sub
stos
out
pushf
sub
and
stc
inc
add
shr
or
cmpsl
xchg
dec
dec
and
je
cwtl
push
or
add
insl
shll
aad
xor
xchg
or
sub
sbb
insb
into
lods
inc
push
fistps
dec
sbb
ja
popf
inc
dec
mov
or
xor
andb
mov
add
fdiv
out
push
js
inc
fst
adc
and
in
in
or
mov
mov
add
dec
and
pop
cmpb
int
scas
inc
add
jnp
imul
push
scas
mov
test
outsb
cwtl
pop
push
xchg
inc
into
add
test
and
and
xor
push
xor
jl
xchg
add
pop
adc
add
adc
jmp
lret
pusha
pop
das
xor
call
sbb
loopne
dec
cmp
into
or
test
xchg
cld
pop
pop
mov
inc
loopne
shlb
push
jno
repz
add
jp
pop
call
cmp
iret
call
jb
push
std
test
inc
adc
add
cli
push
jl
mov
xor
adc
ja
xchg
clc
loopne
xor
add
jns
imul
popa
and
or
push
mov
cmp
vmovntpd
pop
xor
mov
push
xor
add
cli
push
wrmsr
call
or
jns
repz
sarb
mov
add
neg
imul
dec
xor
enter
push
jecxz
imul
mov
add
sbb
add
add
push
fs
add
cs
mov
fisttpl
lahf
mov
inc
mov
cwtl
out
out
loopne
cmp
push
in
icebp
lock
sbb
fld
jecxz
and
test
jbe
mov
sub
testl
mov
xchg
in
cmp
add
pusha
es
cld
jo
into
or
inc
cli
mov
popa
jecxz
bound
add
lret
jbe
sbb
nop
out
insl
hlt
movsl
imulb
pushf
push
movsb
jb
or
xrelease
pushf
pusha
adc
repnz
mov
mov
mov
jns
xchg
mov
in
pusha
cmp
add
je
mov
ret
add
aam
imul
pop
dec
test
add
out
loopne
mov
cmp
nop
add
cmp
xor
sub
loop
fcompl
xor
sub
inc
inc
cmp
sbb
add
sub
inc
in
add
jp
in
sahf
mov
enter
int
jbe
dec
adc
cmpsb
stc
aad
imul
and
loope
add
ljmp
test
sub
subb
adc
push
jecxz
xor
mov
xor
wbinvd
cmc
test
jecxz
movsb
test
mov
outsb
or
scas
cmp
pop
out
lret
xchg
push
adc
and
mov
loop
out
add
lret
inc
push
dec
jecxz
test
inc
lahf
dec
fnstsw
mov
dec
sbb
je
or
mov
push
and
insb
cs
mov
mov
add
js
xlat
add
mov
stos
arpl
flds
adc
xchg
push
and
mov
les
cli
das
nop
dec
call
mov
enter
dec
jns
adc
cmpb
add
add
int3
rcrb
xor
setns
js
fadd
insb
nop
hlt
cwtl
push
cmp
ret
push
adc
fistpl
or
incb
and
adc
stc
push
loope
xor
jp
jl
add
mov
stos
in
ret
call
pop
add
cli
jnp
ljmp
movb
inc
mov
je
testb
int
aam
adc
cmovnp
ffree
cmp
push
add
jnp
addb
sbb
add
add
shll
jmp
mov
fwait
loopne
call
mov
xor
inc
mov
push
sbb
push
sti
jo
fs
in
push
mov
or
xchg
adc
cmp
or
cltd
inc
add
out
xlat
sub
cmp
rolb
jne
subl
dec
lock
sub
pop
faddl
jecxz
cmp
cmpsb
or
sub
repz
les
pushf
outsb
push
sbb
shr
jl
jle
pusha
xor
jno
inc
sub
push
inc
inc
insb
mov
pop
das
int3
and
mov
leave
mov
verr
lods
mov
movsl
jmp
add
es
daa
icebp
lret
add
shl
fsubl
jne
sub
cmp
dec
je
in
ja
xor
movsl
gs
and
in
jl
call
in
mov
add
add
gs
leave
insl
jne
subps
out
in
stc
loopne
pop
insb
aam
adc
pop
add
rorl
loopne
cwtl
xchg
cld
es
lahf
add
pop
lds
mov
and
add
push
adc
cli
ljmp
iret
pusha
orl
dec
les
in
aas
or
add
pop
lcall
adc
push
pusha
test
push
call
push
call
adc
sub
or
xchg
data16
add
in
inc
ds
dec
jl
andl
xor
add
add
push
fimuls
cmp
add
enter
fbstp
addb
adc
push
jne
mov
jge
ret
pop
cwtl
mov
mov
push
push
sbb
mov
cltd
scas
inc
adc
inc
dec
add
pop
mov
add
mov
jl
inc
sub
pop
and
out
movsb
lahf
clc
call
pop
out
rclb
shl
mov
inc
lldt
xchg
add
dec
imul
add
icebp
cmp
xchg
or
pop
add
shr
mov
mov
sbbb
adcb
jbe
push
enter
add
cltd
mov
xor
jne
cmc
mov
mov
nop
adc
addb
dec
orb
sarb
inc
sub
subb
xchg
leave
cs
in
push
add
pop
test
add
inc
mov
hlt
add
mov
dec
add
jp
mov
pop
xchg
add
mov
mov
dec
arpl
pusha
xchg
leave
xchg
enter
lret
jne
iret
js
inc
lahf
adc
mov
add
push
jmp
andb
add
cmpsl
mov
add
cli
push
mov
jae
ljmp
dec
sbb
jecxz
mov
std
mov
add
iret
xor
cmp
into
pop
mov
rol
clc
test
daa
cli
mov
lods
inc
jle
add
mov
arpl
or
insb
jecxz
add
in
and
mov
andb
or
pop
lcall
fwait
ljmp
fs
pop
cli
fldt
scas
wbinvd
arpl
jbe
and
mov
aas
ret
cmpsl
and
jge
and
pop
cld
gs
rcrb
add
call
ss
add
insl
in
add
and
leave
xchg
mov
fcoms
jbe
nop
adc
hlt
push
clc
mov
icebp
pop
mov
adcb
cmp
lds
push
push
mov
mov
and
les
test
int3
ret
and
mov
add
rclb
add
sub
pop
or
add
test
in
pusha
popa
std
push
les
psubsb
xchg
add
mov
xchg
adc
loopne
or
in
jl
jl
rcrb
pop
adc
push
or
or
mov
inc
add
bound
add
fmulp
lret
jecxz
scas
popf
mov
repnz
pop
sub
int
sbbl
or
sbb
mov
xchg
add
mov
mov
out
pop
out
popa
aaa
add
lret
adc
pushf
add
adc
sarb
jbe
pop
xor
cwtl
sbb
mov
adc
xchg
inc
jge
inc
xor
dec
or
aam
xchg
and
mov
es
imul
pop
aas
out
add
add
lea
in
pushf
dec
pusha
cmp
jp
cli
add
inc
add
scas
sarb
push
int
nop
mov
jle
push
xor
jl
cmc
cltd
lret
cld
jb
out
dec
sbb
add
jecxz
jne
hlt
dec
xor
test
mov
cwtl
mov
imul
adc
adc
pop
add
js
scas
xor
les
pusha
lock
mov
loop
nop
lods
clc
fistps
lret
jae
sbb
inc
push
jb
aas
inc
mov
add
into
fldcw
scas
add
dec
pop
test
add
add
test
xlat
jle
or
add
adc
or
inc
bswap
push
xchg
out
jl
imulb
or
repz
or
add
in
movzwl
sbb
mov
mov
rolb
lods
popl
push
push
cltd
xchg
nop
push
jnp
sidtl
roll
jl
cmp
sbbb
and
ret
mov
xor
add
jb
pusha
sub
inc
jns
push
mov
pop
push
push
add
xchg
xchg
loopne
leave
clc
xchg
clc
pop
push
aad
adc
ljmp
mov
mov
inc
push
push
inc
push
scas
int3
pop
add
push
jg
sub
and
adc
add
jne
loopne
enter
mov
rorb
xchg
jnp
add
push
movsb
addr16
fnstenv
pushf
xchg
hlt
xor
rorb
add
shll
lret
push
in
leave
outsl
push
incb
mov
push
sbb
mov
inc
lods
inc
fidivrl
filds
das
add
pop
mov
out
int
test
insl
add
push
xor
xchg
pusha
push
add
xchg
aam
add
pop
inc
pop
add
cmp
or
mov
mov
call
xor
mov
add
sbbb
add
pop
int3
sub
out
push
add
in
sub
sbb
jl
inc
cmp
push
pop
adc
pop
add
mov
push
cmpb
aam
or
push
mov
daa
jae
mov
and
lea
pop
inc
nop
inc
xchg
sub
mov
jnp
push
mov
adc
and
jae
inc
and
pop
push
adc
js
sbb
mov
test
in
adc
data16
and
sub
int3
les
movsb
loopne
mov
push
fiadds
es
roll
jno
xor
xor
lcall
imul
jmp
fdivr
dec
fisubrs
push
repz
xchg
mov
sbb
jmp
dec
jnp
adc
insb
dec
je
testb
xor
mov
int3
cmp
jnp
clc
jno
add
push
push
jg
lock
adc
stc
daa
dec
lret
mov
cs
mov
xor
xorb
scas
cltd
call
cld
jmp
sahf
push
dec
add
lret
sub
icebp
jne
sbb
lret
or
mov
inc
lods
int3
sub
shl
dec
test
dec
lea
push
dec
inc
sub
hlt
inc
rolb
sahf
pop
pushf
cmp
add
sbb
ljmp
pusha
cmp
enter
repz
and
loop
pushf
pop
icebp
mov
mov
add
dec
std
xor
adc
outsb
andb
inc
mov
pop
adc
icebp
hlt
sahf
pusha
cld
das
testb
lret
add
call
adc
out
mov
jp
cmp
test
add
fisubl
mov
out
push
daa
cmp
insb
cltd
mov
leave
out
pop
test
add
add
es
shlb
add
sub
adc
dec
push
enter
loopne
movsl
outsl
and
test
in
pop
or
and
in
aas
hlt
adc
xchg
in
mov
pop
mov
inc
sarb
das
leave
xchg
in
jge
lahf
add
mov
mov
jns
mov
add
mov
rolb
dec
cmove
mov
in
sub
adc
jns
shll
and
icebp
mov
je
mov
add
mov
inc
shll
rorb
add
sub
rcl
aam
jmp
lcall
push
mov
jne
les
cs
ret
cli
sub
mov
push
add
jp
sbb
icebp
daa
sbb
or
in
mov
inc
rcll
stos
push
dec
jmp
mov
jno
ja
or
or
lea
add
scas
xor
adc
jne
sub
push
fcomip
hlt
repz
mov
adc
add
adc
and
out
add
add
ljmp
add
jl
bound
pop
lds
jne
push
sub
loopne
adc
and
add
pop
add
mov
gs
or
push
sahf
and
jp,pn
aas
daa
inc
negb
pmulhw
sbb
cmp
push
out
ret
je
hlt
xor
xchg
es
in
dec
inc
or
jle
jb
xor
jnp
in
add
mov
mov
adc
add
aas
bound
pop
sub
add
pop
mov
xchg
in
or
mov
and
aam
add
ja
jecxz
insb
pop
add
ljmp
mov
xor
add
adc
xchg
pushf
inc
sbb
mov
in
mov
cmp
and
add
js
inc
or
xchg
add
mov
or
sbb
in
mov
sbb
stos
xchg
test
add
pop
das
pushf
add
and
leave
pop
lret
adc
movsb
mov
jl
or
les
add
xchg
jno
adc
jbe
push
jo
cmp
nop
push
inc
cmp
mov
add
mov
xor
in
sub
mov
add
shrb
mov
mov
hlt
sub
and
pop
js
cwtl
dec
push
or
lock
cwtl
andl
xor
out
or
or
pushf
clc
or
add
add
pop
xor
sbb
jp
adc
pusha
mov
addb
lret
sub
mov
loope
punpcklbw
adc
jo
std
push
loop
subl
rorb
add
repz
and
add
rolb
adc
fcomps
push
lea
outsb
or
fiaddl
inc
cmp
xchg
adc
mov
popf
adc
inc
mov
fildl
ret
pop
out
push
fcmovu
out
flds
xchg
inc
sub
test
add
jmp
inc
loop
and
dec
or
push
testb
sbb
inc
gs
add
icebp
xchg
out
pop
addb
inc
add
mov
jle
add
lock
lods
cmp
mov
cmp
cwtl
adc
pop
and
mov
mov
in
xor
xor
aam
mov
iret
sar
or
mov
pop
mov
mov
add
jne
mov
pop
pushf
inc
pop
shl
jae
add
jle
add
test
add
pop
xor
mov
inc
and
push
add
xlat
xorl
push
xchg
xchg
xchg
orb
adc
rolb
jmp
out
add
movsl
and
sbb
pusha
in
add
fbstp
mov
xor
mov
fwait
pop
lret
mov
dec
add
stos
jo
ds
shlb
xor
test
cmp
adc
inc
push
fwait
or
in
ljmp
jl
subb
push
aam
outsl
mov
repz
pop
lret
sti
ret
jl
jnp
es
adcb
pop
sbb
mov
add
adc
adc
inc
xor
xchg
pop
cmpb
sbb
test
mov
jbe
mov
add
insl
add
mov
lahf
mov
pop
sbb
push
out
xchg
mov
pop
js
mov
jle
loop
ficompl
add
add
jnp
nop
jp
add
movsl
xchg
les
add
cmp
out
dec
add
mov
or
hlt
pop
pop
cmpsl
dec
push
and
xor
adc
pop
and
xorb
xor
xor
sti
sub
push
mov
add
les
xchg
popl
lret
dec
xor
pop
add
cltd
adc
ret
adc
cmp
fbld
cmp
add
repz
pop
addl
sbb
pushf
mov
add
leave
clc
xor
in
mov
fisttps
add
jno
outsb
cmc
push
adc
sub
sub
jnp
test
add
repnz
pushf
idivb
sub
in
pop
push
jl
ret
fistl
sub
pop
pop
gs
dec
test
xor
add
cmp
bound
lahf
xor
imul
pop
jae
xor
add
mov
je
dec
inc
mov
adc
sub
or
shrl
add
add
lock
add
mov
xor
jmp
jge
cmp
sahf
pop
test
add
sbb
js
rcll
inc
xor
push
fmul
jmp
add
sub
bound
mov
mov
add
insl
cmp
cmp
fdiv
jecxz
xor
mov
jecxz
adc
test
mov
jle
addr16
daa
dec
std
adc
adcl
nop
pop
jl
pop
adc
cmp
mov
js
add
fwait
push
sub
xor
add
dec
mov
lock
mov
mov
sub
jno
lods
mov
or
push
cwtl
fdivl
or
cwtl
data16
out
push
pop
cmp
dec
popa
or
push
nop
or
or
or
sarb
or
sbb
repz
and
pop
test
push
call
mov
int3
mov
add
movsb
push
push
mov
les
xchg
fst
xchg
stc
sbbl
cltd
icebp
push
xchg
xchg
fldenv
add
push
xchg
mov
cmc
popf
nop
hlt
das
incl
test
xor
mov
inc
dec
inc
hlt
aad
mov
jmp
adc
add
inc
xorb
pop
fs
cmp
out
ds
dec
dec
repz
add
out
dec
add
scas
push
xor
loop
arpl
fs
push
and
std
add
inc
repz
cmp
ret
xor
sbb
adc
add
out
arpl
test
add
cltd
call
jo
insb
inc
adc
inc
orb
nop
faddl
sbb
out
je
test
sbb
in
mov
sub
dec
or
ss
hlt
daa
daa
cmp
adcb
shr
push
rcrl
mov
mov
nop
sub
push
fdivrl
ds
shll
faddl
jmp
and
dec
out
mov
add
js
orb
and
call
pop
cld
push
repz
sarb
mov
jno
jae
icebp
add
incb
faddl
mov
add
jnp
xchg
cmp
hlt
sub
mov
or
sbb
add
das
loop
add
dec
add
dec
enter
sub
mov
fdiv
pop
or
shrl
cmpb
loop
or
xor
adc
repz
push
mov
daa
in
add
or
mov
push
ja
adc
cmp
pushf
incb
mov
dec
sub
pop
inc
daa
dec
shl
adc
fsubrs
roll
in
mov
aas
gs
xor
add
shll
lea
lods
addb
pop
lahf
mov
add
push
mov
dec
mov
xor
mov
insb
inc
inc
mov
and
test
lods
jbe
mov
add
sti
add
mov
jle
repnz
xor
andb
ret
pushf
aas
add
inc
mov
mov
or
dec
shr
xchg
sub
clc
rolb
stc
ds
hlt
pop
mov
shl
mov
and
scas
inc
add
inc
test
or
in
or
sbb
add
andb
dec
jae
shr
dec
test
or
mov
cmp
ret
cmpl
xor
imul
push
sub
test
cmp
push
stos
push
test
daa
inc
js
mov
fwait
jae
xor
mov
mov
jl
sub
cmp
pop
adcb
add
fldt
xlat
inc
push
add
cwtl
dec
test
adc
push
mov
and
fisttpl
lock
or
mov
xchg
mov
jl
mov
add
rcrl
xor
jne
push
add
add
orb
mov
adc
int3
in
clc
add
out
daa
jo
or
jne
shll
call
inc
test
push
dec
enter
in
add
dec
add
mov
jae
nop
and
test
or
pop
jbe
add
icebp
hlt
jmp
das
add
lea
pop
nop
lock
and
mov
push
mov
jo
iret
add
movsb
lea
ss
lock
icebp
xchg
push
pop
pop
imul
mov
jbe
xchg
lods
pop
mov
mov
push
enter
xchg
mov
xchg
ret
in
mov
cmp
or
fnstsw
cld
or
rolb
fs
xor
inc
int3
and
dec
push
inc
sub
enter
clc
std
push
add
pop
cmc
xor
inc
mov
int
inc
pusha
pop
sysexit
add
stc
mov
pop
mov
decb
dec
movsl
repz
add
fcoml
add
ss
sbb
inc
mov
cmp
rol
cwtl
adc
cmove
fwait
add
sub
cmp
pushf
ret
dec
inc
inc
add
xor
aam
xor
gs
dec
in
mov
xor
xor
orl
mov
jecxz
imul
xor
lahf
rep
add
lods
adc
or
fwait
jl
pop
mov
ffreep
jbe
ljmp
mov
addl
or
imul
add
xchg
mov
inc
js
rcrb
loop
fs
add
aaa
insl
pop
call
add
mov
cli
add
fbstp
ficoml
arpl
adc
dec
rorb
divl
cmp
mov
iret
addl
loopne
cmp
loop
adc
pop
imul
push
test
and
xor
addl
jnp,pt
jg
or
in
lods
mov
cmc
inc
push
jecxz
and
into
cmp
add
shrb
sub
cmpsb
in
loope
pushf
pushf
inc
cwtl
mov
pop
add
test
adc
push
lock
pushf
or
nop
pushf
ss
pop
sbb
into
jle
and
xorl
mov
pop
mov
xchg
jl
dec
popa
insb
or
cmp
xchg
lock
cmp
jge
inc
inc
cwtl
dec
dec
rcrb
push
pop
mov
inc
neg
dec
into
and
push
inc
add
dec
jb
sub
push
movsl
xchg
jo
inc
xchg
addl
notl
ret
les
cmpsb
pop
adc
xchg
outsb
sti
add
fwait
lea
dec
sahf
push
dec
testb
shll
sub
shrl
aam
mov
add
into
cmp
jo
fxch
in
sti
push
dec
fwait
add
mov
cwtl
aam
cmp
dec
and
mov
sub
pusha
xchg
subb
rolb
add
add
lret
and
jl
orb
cwtl
jb
negl
ljmp
adc
out
mov
sub
add
out
es
jecxz
fsubs
cmp
das
and
repz
dec
movsb
jo
and
jmp
call
icebp
jecxz
fcompl
sbb
ja
add
sub
fmull
mov
jne
lock
cs
mov
adc
rcrl
lock
push
inc
inc
out
push
aas
out
in
adc
add
in
ljmp
xchg
mov
xchg
decb
xor
pop
push
aas
push
fsts
add
jnp
mov
lds
test
ds
add
sbb
dec
add
inc
sti
mov
xchg
push
dec
xchg
nop
xchg
mov
cmp
imul
jo
cmpsb
push
dec
add
mov
pop
sub
add
lock
ret
add
xchg
xchg
adc
dec
ds
lahf
adc
clc
jge
insb
cmpb
cmp
stos
jno
add
movsb
sub
xor
pop
pop
add
pop
testl
add
pop
pop
xchg
in
fnstcw
out
xor
or
and
test
cmpsl
push
test
or
in
sbb
loope
addb
cld
inc
xor
and
xlat
int3
fdivrs
lods
loopne
sbb
loop
bound
test
inc
cmp
into
mov
add
lahf
gs
mov
pop
cmp
in
push
sbb
in
loopne
mov
adc
adc
push
sub
mov
js
lea
std
shll
pop
mov
clc
jo
sbb
xor
add
nop
pop
and
subb
pop
pop
inc
js
lea
repz
push
sbbb
inc
jecxz
jne
sub
stc
out
fildl
rclb
xlat
add
scas
sub
mov
or
adc
pusha
push
add
sub
jl
test
iret
jns
add
lods
or
test
and
or
xor
popf
xchg
dec
xor
inc
mov
je
sub
clc
sub
cmp
cmp
add
sbb
fildl
fdiv
rcrb
cwtl
xchg
sbb
adc
pop
cmp
enter
mov
pop
inc
ds
addb
mov
testl
rolb
adc
add
dec
add
jb
push
adc
rolb
sti
adc
push
jnp
int3
add
clc
xchg
push
addr16
das
dec
jb
call
inc
loope
push
mov
clc
rorl
mov
test
sub
in
add
inc
xor
push
jo
sbb
adc
adc
fsubl
and
mov
add
mov
add
inc
sbb
aam
hlt
mov
loop
add
addb
fadds
xor
jne
push
outsb
and
aas
imul
mov
sahf
add
add
rcrb
add
mov
jns
xor
push
lock
out
insb
adc
mov
mov
dec
rclb
xchg
sahf
inc
movsb
test
ret
lret
inc
jp
pop
add
push
jb
es
std
pop
xchg
mov
and
add
sub
xchg
in
dec
xor
les
das
loopne
jle
adcl
jnp
push
push
cmc
jecxz
or
mov
rcrb
push
enter
mov
and
mov
xchg
shlb
pusha
ja
add
fiaddl
cmp
mov
add
mov
shll
inc
and
cmp
ficompl
jo
lock
and
and
or
ret
nop
test
enter
add
clc
pop
add
fsub
insl
test
lret
divb
jno
pop
aam
pop
pop
pop
mov
jp
add
and
sub
icebp
adc
mov
add
mov
jo
loopne
xchg
mov
adc
mov
sahf
jns
mov
inc
leave
push
jb
pop
lock
ja
add
movsl
lods
push
dec
mov
out
cmpsl
push
ljmp
add
cmp
xor
mov
xchg
js
ror
or
add
cltd
or
mov
pushf
xchg
aam
sub
hlt
cmp
sub
sbb
shrb
mov
repz
out
rolb
repnz
sub
lea
cmp
into
shlb
test
adc
inc
shlb
pusha
push
mov
sbbb
clc
add
cld
jmp
pop
int3
fs
jge
aas
xchg
pop
or
scas
test
mov
enter
iret
aad
es
mov
dec
xchg
subb
cmp
and
out
sbb
push
add
xchg
adc
mov
das
orb
lret
fbstp
xchg
add
ljmp
xchg
dec
sbb
jmp
push
rorl
adc
clc
ret
inc
jnp
add
test
jnp
clc
xchg
imul
add
xor
and
loopne
je
mov
mov
ret
xchg
pop
rclb
lahf
adc
mov
or
dec
sub
pop
mov
inc
and
xor
cmpsl
fsubrs
inc
mov
xlat
out
popa
add
or
mov
icebp
addb
mov
call
xchg
aad
xor
cli
icebp
lcall
xor
and
out
out
xor
sub
inc
push
movsb
inc
push
add
xor
mov
adc
or
pop
dec
add
daa
cld
mov
fnsave
aad
sub
ds
mov
xchg
data16
mov
je
inc
dec
iret
xchg
in
or
add
lret
lcall
sbb
pop
out
xchg
in
or
rcll
ret
cmpsb
push
or
fs
inc
mov
add
inc
js
push
inc
sub
fdivrs
push
sbb
daa
jecxz
inc
hlt
mov
mov
inc
inc
jl
addb
sub
push
push
xor
test
and
xor
dec
in
mov
aad
pushf
cmpl
mov
sub
sbb
test
add
cmp
xor
pop
test
shlb
inc
xchg
fwait
push
jbe
test
cwtl
xchg
pop
loopne
mov
add
jno
push
mov
pushf
sbb
and
pop
mov
out
test
xchg
fldl2t
hlt
mov
push
cmp
add
sbb
scas
sahf
call
lds
cwtl
ss
lods
aas
add
lahf
add
mov
sub
add
pop
sub
cmp
push
ja
fstpt
clc
dec
enter
lock
loop
pop
inc
cmp
adc
adc
mov
repz
sar
fsub
das
mov
cmp
add
iret
xchg
push
sbb
xchg
ds
add
inc
or
push
ds
inc
and
add
nop
push
mov
jecxz
dec
rcll
js
or
inc
mov
add
inc
mov
dec
adc
call
add
enter
jg
adc
inc
add
pop
std
xchg
add
sti
xor
mov
ret
scas
mov
add
inc
dec
or
mov
mov
sub
sarb
mov
loope
cmp
adc
push
out
aas
fdivr
adc
and
inc
repnz
mov
cmp
add
fwait
cli
mov
pop
testb
push
insb
add
push
push
and
pop
push
lock
int3
add
add
sbb
lock
add
xor
dec
cltd
in
sub
or
jae
mov
sub
and
sub
mov
and
or
out
cmp
ds
lret
fcoms
xor
rcrl
mov
test
add
sysret
lea
and
add
add
arpl
adc
jno
js
dec
or
rolb
addl
and
mov
inc
pusha
cmp
test
lret
xchg
repz
je
andl
or
nop
movsb
mov
push
mov
or
out
sti
jle
das
ljmp
mov
inc
push
pop
aaa
or
fs
pusha
xor
push
mov
or
push
cmp
jecxz
push
fs
push
in
mov
mov
xor
inc
mov
stc
add
add
rcrb
mov
fs
and
jge
nop
pop
lock
ljmp
adc
loopne
dec
in
xchg
pop
mov
mov
xchg
andb
movsb
dec
xchg
xor
repz
pop
loopne
gs
pop
pusha
cmp
mov
mov
pop
mov
xor
pop
xchg
in
dec
add
call
mov
add
jge
cltd
xor
or
xlat
fwait
xchg
test
outsb
xor
notb
or
adc
jge
add
or
rorb
add
fdivl
lock
add
push
ja
or
jne
fadd
das
cli
adc
test
movsl
inc
enter
stos
adcl
xor
jbe
and
int3
or
pop
mov
dec
or
pushf
sub
adc
js
inc
mov
clc
pop
sbb
xor
aam
add
sub
inc
pop
jb
insb
add
or
movsb
ret
xor
inc
jl
jae
test
xor
pop
mov
sbb
xor
in
sbb
nop
jg
es
lds
cmp
call
jnp
add
pop
mov
call
add
xchg
push
inc
xor
adc
test
xchg
xchg
addl
fstpt
dec
or
add
cs
jl
idivb
pop
enter
push
xor
les
addb
mov
mov
sbb
add
pop
rclb
pop
cmp
paddusb
loope
divl
xor
iret
cld
mov
xlat
push
ds
xchg
das
and
test
loope
das
sbb
sub
mov
xchg
fsts
mov
test
jbe
and
mov
in
cmp
imul
adc
sbb
push
xor
adc
add
cld
jg
loope
int3
mov
mov
loop
or
ficoms
cmp
or
and
or
push
add
es
mov
fistpl
repz
rolb
jl
add
pop
sbb
shr
imul
dec
adc
xchg
and
xor
les
fwait
cmp
inc
xlat
dec
mov
add
xor
shr
push
jnp
adc
stos
jg
ret
xchg
adc
sub
or
and
aam
out
mov
subps
and
push
stos
out
stc
outsl
cmp
mov
push
jo
inc
lds
add
test
push
add
lea
cld
movsl
cmp
adcb
pop
vpminub
add
add
sub
sbbl
sbb
orl
sbb
dec
sbb
or
pop
andl
cmp
adc
sbb
sub
test
andb
sbb
daa
jecxz
std
lea
loopne
or
dec
sarb
loop
inc
mov
shrb
ljmp
pop
inc
fdivs
inc
es
rdmsr
mov
mov
cmp
cmp
test
mov
dec
push
add
insl
icebp
mov
or
and
rclb
outsl
adc
mov
fdivl
lret
icebp
loop
add
ret
cs
addl
fsubr
pop
sbb
loope
mov
push
js
jl
lcall
jns,pt
add
push
lea
mov
unpckhps
or
xchg
mov
mov
sub
sbbl
lahf
addb
cmp
dec
sbb
mov
xchg
jmp
xchg
fmulp
adc
aam
mov
cmp
push
lret
addb
sahf
xchg
in
jne
leave
and
fs
adc
js
js
xchg
les
rcrb
push
add
jmp
arpl
out
sbbb
lcall
or
add
data16
mov
inc
or
pusha
daa
pop
je
sub
add
xchg
cmp
jns
insb
or
mov
fwait
xor
mov
mov
out
or
mov
add
scas
test
enter
inc
adc
subl
mov
outsl
fldl
testl
jg
cwtl
divb
fsubr
das
or
popa
cltd
aaa
in
or
jb
xchg
sar
shlb
in
dec
loopne
lds
or
push
xchg
or
mov
xchg
dec
mov
imul
add
jcxz
lds
add
inc
mov
push
sbb
into
andb
cmc
cmp
stos
mov
sahf
jecxz
sbb
pop
mov
xor
jo
push
adc
mov
in
inc
popa
pop
into
or
mov
ss
push
icebp
add
jno
and
aam
jne
sub
inc
and
sub
push
das
push
adc
cmp
mov
mov
mov
jl
das
or
add
push
push
je
jnp
xor
or
mov
mov
sbb
int
cmpb
mov
out
icebp
push
add
mov
and
and
add
jp
out
jecxz
sub
adc
hlt
and
int
dec
mov
dec
jno
adc
into
xor
pusha
sub
mov
jo
sbb
sbb
add
xor
mov
push
mov
adc
sub
mov
mov
cs
lret
repz
in
mov
std
xchg
push
inc
mov
pop
std
inc
mov
dec
inc
xchg
sub
cmp
nop
and
adc
add
std
or
ljmp
test
add
sarl
sbb
loopne
add
xor
fsubl
push
in
ret
and
fmull
and
rol
loopne
ds
mov
mov
push
add
mov
add
push
fisubrs
sbb
int3
cmp
jno
cmp
loopne
fnstenv
cmp
cmp
push
dec
push
out
jo
daa
in
inc
jo
mov
psubb
push
pop
or
flds
sbb
add
dec
xlat
xchg
adc
sub
jg
sbb
cmp
cld
add
inc
and
and
and
mov
add
test
stc
rorb
or
push
xor
mov
fstl
xchg
adc
sub
sbb
cmp
pop
inc
cli
in
outsl
or
ficoml
sub
inc
pop
inc
shll
adc
repz
dec
sub
shrb
jo
sbb
cmp
jo
xlat
sar
cmp
and
adc
sub
adc
dec
lock
mov
dec
outsl
cld
in
or
les
in
add
push
inc
push
test
add
cmp
mov
or
add
adc
outsl
ds
mov
loope
pop
into
jmp
mov
cmp
cmp
adcl
sbb
push
arpl
xor
cmpsl
adc
pop
xchg
hlt
mov
and
or
jp
daa
pop
test
adc
gs
imul
out
int3
aas
adc
add
pop
cmp
mov
roll
movsb
popf
fcmovnu
lock
dec
inc
jnp
mov
icebp
pop
mov
mov
or
add
push
cmp
add
shll
push
movsb
cld
mov
mov
add
test
add
push
das
pmulhw
call
pop
cmpsb
iret
mov
cwtl
lock
in
lods
add
das
sub
pop
bound
movsb
faddl
sub
in
mov
cli
mov
lods
sbb
std
fdivr
pop
xor
adc
call
jge
mov
aam
mov
nop
nop
lret
add
pop
add
sarb
xchg
ljmp
jns
add
or
dec
jle
cmpsl
add
fists
mov
in
fmuls
or
sub
inc
and
cmp
mov
shll
xor
xor
rorl
xor
jmp
sbb
stc
icebp
gs
lds
das
mov
push
dec
adc
les
cmp
clc
push
lret
sub
popa
pop
stos
hlt
es
mov
in
add
repz
pop
pop
aas
enter
mov
add
fnstenv
fldl
pop
mov
xchg
cli
repnz
add
fldt
pop
fwait
pop
test
loop
dec
or
testl
add
sbb
xchg
jbe
rolb
and
fiaddl
mov
int3
flds
dec
clc
xchg
and
in
xor
pop
loopne
jle
lods
into
sbbb
sub
push
in
adc
cs
sbb
mov
icebp
out
loop
sbb
dec
sbb
int3
push
push
adc
mov
or
and
ret
sarl
test
dec
dec
lds
add
xchg
jle
add
fcmovb
cmpl
push
push
jno
in
xor
push
test
loopne
test
jae
fcmovb
aaa
xor
cmp
and
add
jp
lret
add
loop
test
mov
xchg
test
sbb
mov
inc
out
adc
add
xor
fsub
dec
inc
add
lar
or
inc
rdpmc
xchg
in
xor
add
pop
mov
movsb
and
or
inc
dec
add
lods
sub
mov
das
jge
aad
dec
jle
cmpl
clc
xorb
add
out
jno
xchg
orb
adc
push
mov
add
inc
rolb
jae
dec
mov
faddl
cmp
adc
jns
test
inc
or
mov
sarb
in
add
pop
xchg
and
add
jge
sahf
loopne
cmpsl
add
mov
push
mov
sbb
adc
ja
jecxz
lock
icebp
test
or
loop
mov
push
xchg
add
pop
push
rclb
pushf
mov
dec
scas
out
add
jb
inc
std
iret
in
xchg
cmp
add
mov
shr
int3
fbld
fwait
out
fwait
rorb
inc
add
popl
mov
add
js
hlt
push
shll
sub
test
adc
pop
and
hlt
popl
mov
or
mov
addr16
add
out
push
scas
xor
movsl
subb
test
push
xor
jb
int3
fdivrl
mov
add
mov
loope
call
movsl
pop
mov
adc
add
add
jecxz
fstpt
imul
jmpw
cld
out
and
xor
test
mov
andl
nop
in
xchg
arpl
rol
es
mov
cld
sbb
clc
andb
lea
add
adc
or
faddl
xor
mov
and
nop
pop
mov
test
xor
sub
xlat
enter
sbb
jmp
out
push
or
cmc
adc
cld
stos
repnz
cmp
jns
sub
add
adc
js
pop
add
pop
int3
repnz
add
fildll
and
in
loope
xchg
faddp
sbbl
cmp
call
ret
fst
add
sbbl
lret
sub
movsb
repnz
movsl
pop
ds
out
inc
mov
dec
testb
pop
aad
pusha
inc
shl
jae
push
mov
jnp
lods
fcoms
inc
ret
cmp
pop
and
ja
add
mov
and
ljmp
rcrl
pusha
adc
out
stos
sub
cli
js
and
fwait
stc
push
pop
cmp
movsb
and
sub
inc
ror
aam
mov
mov
jge
mov
dec
jmp
adc
jae
das
push
call
adc
enter
imul
pushf
push
jl
push
in
or
outsb
adc
xor
ror
cs
mov
int3
inc
adc
and
rcrl
jl
add
in
add
or
daa
fcmovu
repnz
sub
cwtl
add
dec
jg
push
mov
std
repnz
das
mov
mov
sub
out
in
sbb
inc
out
fdivrs
cmpsb
push
subb
shr
icebp
lock
adcl
pop
add
in
sub
xchg
and
das
mov
data16
add
aad
loopne
notb
pushf
add
jnp
rorb
inc
mov
pop
xor
or
sbb
clc
add
cmp
push
dec
in
mov
adc
xor
sub
mov
jl
pusha
mov
pop
sbbl
lahf
shrl
lods
dec
adc
xchg
adc
add
dec
out
mov
int3
lock
cmp
mov
insb
icebp
jnp
add
scas
add
sbb
mov
sbb
fcomps
cmpb
push
or
jns
fists
rcll
out
fdivs
imul
gs
dec
psrld
mov
das
lcall
shlb
rcrl
xchg
inc
pop
repz
sub
je
das
add
or
pop
loopne
mov
cmp
add
and
cmp
mov
in
icebp
out
je
dec
shlb
pop
pop
add
stos
push
fdivrs
cmp
fnstcw
mov
add
test
xchg
push
cmp
add
and
xor
dec
dec
call
xchg
pop
pop
fidivrl
mov
je
xchg
push
mov
call
pop
add
push
mov
fwait
xor
sub
loopne
dec
repz
add
std
das
loop
xchg
xchg
inc
in
loopne
add
in
or
jno
mov
lret
add
lea
add
jno
inc
pcmpeqw
and
out
repnz
pop
xchg
push
js
push
fnstsw
inc
call
shlb
add
pop
lock
fstl
fwait
xor
adc
insb
dec
loop
xor
add
das
add
jmp
adc
mov
roll
xor
clc
push
push
incb
or
lock
movsl
rolb
scas
cltd
dec
sub
jnp
push
sub
jle
xchg
rol
inc
inc
pop
add
pop
cli
lock
inc
mov
sub
inc
mov
sti
aaa
add
std
hlt
faddl
and
ja
push
pop
lret
xchg
loopne
sbb
mov
push
outsb
or
sbb
scas
sbbb
mov
pop
pop
xor
cmp
int3
shrb
dec
aaa
aas
pusha
pop
sarb
sbb
addb
add
dec
in
pop
dec
setb
sbb
fildl
dec
mov
into
fsts
stos
adc
dec
mov
in
jecxz
mov
dec
fwait
push
push
shlb
xchg
or
cmpsb
aaa
in
pushf
add
mov
dec
jmp
push
loopne
dec
mov
pop
out
dec
or
mov
test
sbb
sbb
jne
sarb
loopne
cmpsb
cmpb
fwait
sbb
repnz
loopne
jecxz
popa
lahf
cmp
xchg
cmp
xor
push
add
add
aam
out
dec
push
sbb
test
iret
les
sub
sub
sti
sbb
out
sbb
rorl
nop
popa
cmp
roll
dec
aas
repz
sub
in
xor
sbbl
loopne
sub
mov
aam
cwtl
rclb
add
lds
cltd
sbbb
cs
mov
xchg
shlb
push
pop
iret
pop
cmpsl
mov
xchg
int
repz
xchg
outsl
xor
es
jo
loop
add
pop
xchg
popf
mov
mov
ret
scas
sbb
or
xchg
sbb
xor
push
sbb
adc
and
in
fisubl
addl
inc
loopne
lcall
sbb
ja
pop
insb
int3
popa
rclb
movsl
sub
xchg
add
push
cs
ret
and
pop
inc
arpl
mov
xchg
xchg
lret
sahf
add
js
imul
cwtl
lds
dec
and
adc
push
adc
push
shlb
shrl
pop
mov
repz
pop
les
fmull
adc
cmc
clc
pusha
pop
inc
jmp
scas
ficomps
out
xor
cmpsl
pushf
pop
shl
aaa
fiadds
mov
sti
add
aas
addb
mov
cmc
ja
cs
or
adc
sub
jnp
push
fcompl
add
rclb
pop
cli
inc
xchg
cmpsl
adc
or
pop
in
sbb
out
cmpsl
or
or
pop
mov
stc
xchg
xchg
mov
push
sbb
add
adc
mov
sbb
hlt
js
inc
in
xchg
loope
add
cmp
pusha
sarb
mov
push
add
daa
lret
cmp
xor
and
cli
xchg
inc
enter
repz
sbb
jbe
and
in
xchg
sbb
pop
pop
cwtl
mov
mov
mov
cmp
fiaddl
aam
mov
and
pop
call
and
daa
adc
xchg
pop
add
pop
loop
cmp
rcrb
inc
sub
xlat
inc
xor
cwtl
or
aaa
mov
jle
dec
sahf
and
sti
adc
mov
aam
setne
dec
cltd
push
ljmp
aam
ja
dec
add
out
push
lahf
sarb
pop
push
sbb
int3
sub
add
inc
inc
fcomp
jb
dec
sub
mov
pop
rclb
movsb
adc
ja
xchg
jb
test
in
out
pusha
or
mov
rcl
dec
pop
pop
push
pop
jae
and
xor
mov
add
mov
enter
or
in
xchg
test
jecxz
jl
loope,pn
or
mov
sub
inc
out
mov
xchg
xchg
add
jo
jns
mov
ficompl
mov
lock
pop
daa
push
push
cld
cmp
jp
adc
addr16
lahf
pop
inc
push
dec
iret
inc
adc
sbb
rcrb
dec
adc
mov
mov
pop
pop
fldenv
cld
cmp
aaa
add
rcr
in
and
mov
lret
aad
jp
or
xchg
jg
ret
pop
jle
addb
pop
mov
in
sahf
add
xchg
push
push
push
cmpsl
mov
jae
rolb
pop
mov
add
xchg
jmp
scas
in
push
sub
and
xor
fidivrs
add
ret
cmp
cwtl
xor
aam
pop
dec
ja
adc
xchg
subl
jo
or
xchg
add
shrb
lds
loop
xchg
add
mov
frstor
push
out
xchg
loop
and
push
mov
nop
pop
jb
add
mov
cmpsb
sbb
into
push
cmpsb
mov
and
adc
in
cmp
aad
pop
mov
jns
jle
bound
loope
mov
fwait
add
pop
repnz
xor
stos
lret
cmp
fistpl
icebp
lods
jecxz
xchg
push
mov
push
push
sub
test
std
sbb
cmc
or
cmpsb
or
loope
adc
cmc
inc
or
add
in
mov
xor
push
shl
iret
sbb
adc
lods
jle
push
jge
inc
in
lods
scas
je
lock
add
or
dec
fsubs
pop
mov
adcb
fadds
lods
push
mov
mov
call
or
jo
add
adc
mov
dec
lods
das
xchg
sbb
sub
mov
dec
adc
cmp
pop
cltd
outsb
loopne
stos
inc
pusha
shrl
cld
dec
in
mov
nop
sti
push
cli
orb
repnz
pop
sub
xor
push
emms
push
call
sbb
xchg
or
out
js
sub
test
and
scas
addb
dec
icebp
pop
bnd
pusha
mov
cmpsl
jecxz
push
lods
in
or
add
xchg
mov
add
lods
jmp
xchg
adc
scas
test
xor
sub
pop
mov
and
xchg
xchg
cmp
cli
in
testl
in
nop
sbb
add
shl
xchg
cmp
cmp
and
mov
jge
push
mov
add
cs
adc
pop
bound
add
sub
sub
xor
and
pop
mov
or
cs
mov
rorl
outsl
add
out
jg
movsl
adc
loopne
xor
repnz
dec
fcoms
push
dec
mov
push
pop
ljmp
js
add
arpl
adc
nop
ja
cli
or
inc
xchg
and
pop
test
js
out
nop
xchg
mov
inc
pusha
pop
adc
pop
stos
adc
sub
scas
push
push
sub
pop
mov
add
clc
dec
mov
jle
enter
xchg
inc
ss
stos
inc
mov
adc
cmp
add
mov
cmp
dec
add
xor
jle
sub
push
mov
icebp
je
shlb
shrb
dec
mov
mov
scas
adc
xchg
inc
add
sub
cltd
add
loope
dec
mov
xor
pop
loopne
push
sti
shl
stos
inc
xlat
and
inc
sbb
jne
mov
out
mov
push
iret
mov
and
sub
mov
je
neg
mov
pusha
xorb
cmp
mov
sub
mov
hlt
stos
and
mov
lcall
jb
xchg
sub
cli
fcoml
jne
xor
sar
mov
jp
jns
inc
fcmovnbe
inc
enter
and
xlat
inc
push
cmc
dec
mov
add
rcr
jle
rcll
dec
enter
push
jae
mov
fadds
or
push
ficomps
add
test
shlb
adc
push
out
fimull
mov
add
mov
and
shrb
dec
nop
test
dec
scas
dec
and
cmp
fmul
or
or
cltd
popa
aam
shlb
dec
enter
testl
faddp
data16
test
pop
inc
add
mov
adc
sarl
push
hlt
fidivs
mov
mov
rorb
mov
inc
mov
je
inc
mov
mov
rcrb
orb
subb
rorl
push
loopne
shll
cmp
or
test
add
aad
pop
push
jp
jo
int
data16
movsl
repnz
add
push
dec
sub
icebp
or
and
push
add
les
cld
pop
iret
loope
mov
dec
fidivrl
movsb
and
pop
sub
jae
or
or
push
jmp
add
and
out
or
dec
ja
push
shl
sarl
cmp
dec
jg
aam
add
inc
ret
cmp
sub
push
add
cs
cmp
cmp
aam
adc
fwait
dec
in
add
into
and
cwtl
faddl
scas
xor
cltd
mov
xor
jns
outsl
sarb
enter
scas
sub
xor
sbb
shrl
repz
jg
xchg
mov
test
fsubs
pop
xor
and
or
out
loop
sbb
fadd
dec
pop
sub
cmpsl
xor
adc
pop
cmpsb
pusha
sub
dec
inc
rcrb
pop
aad
movsb
mov
add
addr16
aas
cmpsb
and
or
rcrl
push
xor
and
dec
inc
hlt
and
push
dec
xor
shr
or
sub
insb
add
push
push
cmpsb
lock
xor
cld
cwtl
push
inc
and
inc
ljmp
or
xor
xchg
sbb
stos
test
add
stos
cmp
nop
and
fmull
andb
lods
sub
pushf
sti
repnz
xor
xor
daa
mov
dec
jo
jns
jg
xor
inc
or
mov
stos
pusha
mov
scas
sbb
daa
rcll
add
das
stos
adc
test
adc
jae
inc
jo
cmpsb
push
xchg
sub
cmpsl
sbb
xor
into
dec
xchg
and
add
add
add
and
push
mov
fsub
ret
sbb
and
sarb
data16
jl
es
test
xor
xor
sub
add
or
or
inc
daa
leave
dec
sub
nop
add
xor
add
loope
add
add
ucomiss
rol
stos
out
xor
and
push
mov
jecxz
ja
pusha
adc
pop
or
add
stos
fdivl
push
mov
xchg
shlb
pop
dec
inc
lods
and
scas
or
imul
xchg
dec
lock
daa
int3
inc
scas
adc
test
fstl
push
jo
pushf
xchg
aaa
mov
pop
inc
jb
dec
loopne
outsl
jp
gs
cmp
nop
rolb
xchg
dec
inc
add
jmp
mov
rorl
ljmp
inc
faddl
jle
and
add
pop
pop
and
add
push
mov
cmp
add
inc
mov
inc
ficoml
pop
or
cmp
inc
test
xor
sub
lds
scas
mov
nop
cltd
jbe
pop
sti
into
lds
in
stos
rorb
mov
movsb
pop
subb
xor
mov
daa
cmp
fdivs
sub
mov
imul
int
cvttps2pi
mov
adc
shr
and
push
dec
jle
adc
fscale
cltd
lods
subb
je
xchg
aas
or
addb
inc
insl
ror
mov
adc
out
out
lea
mov
lcall
mov
enter
push
imul
movsb
ja
inc
and
pop
dec
mov
xchg
mov
xchg
xor
mov
cltd
inc
add
stc
clc
sbb
sub
mov
mov
sbb
popf
arpl
or
xorl
jae
stos
inc
adc
pusha
mov
lock
adc
outsb
mov
jmp
cmp
mov
sbb
adc
inc
js
out
mov
dec
enter
test
fdivl
cmp
fwait
movsb
cmpb
and
pop
lret
or
add
cs
xlat
push
sbb
flds
add
scas
rolb
cmp
nop
lret
addb
in
push
push
mov
and
jp
je
add
and
nop
xor
fdivs
enter
xor
movsb
cwtl
nop
sub
sub
inc
test
sub
and
xor
and
shrl
dec
out
xor
fsubs
mov
add
rorb
jb
sub
or
add
aas
jmp
and
jle
rcl
or
dec
shll
sub
xor
mov
add
sahf
je
loop
test
add
mov
push
add
dec
sbb
in
mov
xlat
fsubrs
sub
pop
mov
pop
mov
dec
or
dec
push
sahf
dec
outsl
pop
test
das
fmuls
rcl
mov
imul
add
cmpsl
enter
mov
dec
fsts
rcrl
mov
jae
dec
subb
sbb
out
clc
mov
mov
into
or
mov
push
mov
pop
out
ret
or
stos
clc
mov
pop
inc
inc
pop
pusha
ffreep
or
mov
shl
cmc
cwtl
inc
and
stos
dec
adc
add
adc
jge
jmp
in
jns
cs
lods
add
ror
hlt
pop
push
fwait
add
lods
mov
push
int3
lcall
cld
adc
sbb
add
sub
jbe
mov
jo
mov
ret
or
add
sub
cs
xor
mov
and
aam
movsb
mov
inc
fwait
insl
sar
inc
cmp
xrelease
dec
bound
pop
lods
jno
inc
jns
dec
cmpsl
mov
pop
or
add
out
push
add
lods
insb
fsubl
fcmovnu
addl
cltd
mov
je
shl
bound
xchg
or
rorb
dec
mov
pop
cwtl
jbe
mov
and
sub
fisubrl
ret
mov
fwait
mov
sub
in
insb
jbe
pop
pop
hlt
mov
add
jmp
cmp
xchg
mov
or
je
inc
add
pop
add
aam
leave
fldenv
mov
mov
out
xlat
push
testl
xorb
push
sub
xchg
sarb
leave
cmp
sahf
push
hlt
xchg
out
sub
icebp
inc
in
nop
or
xor
pop
adc
lods
insl
add
sbbl
and
mov
enter
mov
inc
lcall
sub
lods
aam
cmp
cs
inc
movsl
and
call
push
fidivrl
add
jns
mov
jmp
sbb
cmp
or
icebp
mov
stos
insl
aas
dec
orb
sub
out
out
sub
push
or
mov
add
push
cmp
sbb
stos
aam
mov
cld
pop
sbb
nop
inc
daa
adc
ret
dec
adc
cmpsl
sbb
cs
or
pop
das
cmpb
lea
mov
add
test
incb
ret
or
fiaddl
add
jnp
push
pushf
add
sub
add
sbb
jae
pop
jbe
add
xlat
xor
xor
and
or
popa
mov
xor
mov
js
pusha
inc
add
pop
inc
xor
adc
add
mov
lock
add
mov
popa
sub
push
enter
jle
sbb
cltd
sub
mov
addl
push
dec
cmp
or
push
test
add
cmp
xor
aas
pop
xchg
test
push
jg
push
add
adc
loopne
lcall
or
or
pop
cmpsb
and
pusha
sub
movsl
mov
xchg
adc
js
sub
jo
xchg
stos
cmp
mov
ffree
in
inc
test
and
insl
and
add
pushf
flds
dec
inc
enter
xor
frstor
inc
adc
je
shl
mov
movsl
out
ltr
push
pop
jb
add
mov
or
sub
fdivs
add
add
xor
xor
mov
daa
add
fs
xchg
lret
mov
rorb
fiadds
add
insb
adc
fsubl
into
mov
add
xchg
rcll
loopne
jb
fninit
jne
add
mov
out
and
push
mov
mov
mov
sbb
fstl
mov
adc
stos
mov
add
movsb
mov
or
dec
mov
inc
xor
fisubl
and
add
xchg
add
pop
cld
popw
jle
pop
test
add
mov
jl
les
dec
add
or
scas
shll
idivb
je
push
cld
jle
test
pop
and
ss
scas
cltd
stos
mov
adc
xchg
or
cmpsb
jge
call
push
adc
imul
orps
jb
out
inc
or
adc
bound
fstpl
std
in
scas
sahf
daa
mov
out
rolb
push
mov
movsl
cmp
xchg
jmp
add
stc
jo
faddl
enter
ja
std
cmp
orb
adc
mov
out
mov
jge
dec
fidivs
imul
test
stos
add
cmpsb
xor
cmpsl
inc
test
or
imul
fisttps
lea
int3
xchg
dec
cmp
and
mov
sub
insl
imul
adc
enter
mov
es
clc
pusha
adc
xchg
add
adc
cwtl
pop
add
push
scas
lret
or
nop
push
add
stos
dec
inc
mov
jecxz
mov
add
mov
cwtl
enter
or
and
repz
imul
sbb
leave
pusha
sub
ret
pop
xor
push
mov
cld
adcl
fcomp
mov
sub
fcoms
ljmp
sub
adc
or
mov
fs
cld
scas
and
add
lods
out
mov
lds
aad
add
adc
mov
mov
mov
mov
add
fptan
insl
jo
inc
push
add
sub
jg
out
or
stos
dec
or
add
outsl
loopne
lahf
add
js
jno
lods
inc
movsl
repnz
adc
sbb
cmpsl
roll
repnz
and
xchg
add
inc
jg
xchg
sub
fmuls
or
jns
mov
pop
daa
adc
sarb
cmpsl
mov
aad
sub
xchg
enter
lds
xchg
sbb
test
add
sub
lret
push
adc
xor
mov
inc
xor
fcompl
test
repz
fs
dec
stos
mov
mov
ret
movsb
xor
movsb
sub
add
cmp
and
fcomip
inc
mov
mov
and
or
daa
and
aad
xor
rorb
push
lahf
adc
sbb
les
or
or
mov
jo
or
push
push
clc
mov
dec
adc
fidivrl
nop
call
pop
movsl
jle
stc
push
xor
add
inc
data16
mov
inc
jno
mov
loopne
push
filds
add
das
shl
cmp
inc
mov
inc
dec
lcall
jp
inc
dec
cwtl
aam
add
movb
je
mov
or
push
pop
or
mov
movsb
les
aaa
fwait
ret
adc
cmp
xor
int3
inc
fwait
sti
sbbb
addl
jmp
lock
inc
loope
xchg
push
mov
insl
add
rcl
rorl
add
mov
add
fildll
jne
adc
pop
sahf
hlt
lahf
sbb
jae
xor
stos
xchg
lods
pop
mov
jne
adc
ljmp
mov
xor
stos
negl
mov
enter
xchg
dec
xchg
imul
scas
test
cmp
sbb
sub
scas
dec
int3
xchg
lock
loopne
jge
je
out
jg
and
inc
les
inc
cmp
pop
or
add
lret
mov
sbb
insl
movsb
rorl
inc
arpl
push
xchg
push
rcl
pop
push
stos
adc
mov
int3
adc
push
nop
pusha
pop
outsl
pop
cmpl
inc
xor
cmp
jbe
std
flds
dec
adc
fsubs
aam
add
mov
cltd
or
hlt
in
jns
test
aad
add
adc
cmpsb
inc
sbb
add
mov
sub
inc
cmp
mov
imul
push
dec
and
scas
inc
test
pop
push
mov
fwait
pusha
ret
jae
mov
cmpl
bound
fwait
clc
stos
sub
daa
xor
add
insl
ret
and
mov
aad
jne
outsb
sbb
mov
sahf
in
and
inc
rcll
mov
dec
test
inc
faddp
add
insl
lods
lahf
cs
adc
xor
stc
sbb
faddl
jb
ret
sub
popf
mov
pop
mov
imul
add
xchg
pop
inc
daa
or
inc
add
add
xor
stos
jge
insb
rcrl
and
cmp
fcoml
push
in
divb
xchg
in
or
je
add
in
cwtl
and
mov
add
sub
xchg
inc
adc
dec
inc
movsb
adc
cmp
pop
pop
outsb
ret
jbe
shrl
cwtl
or
push
add
in
dec
movsl
movsb
fsubrs
and
pop
push
xor
ror
subb
add
xchg
jl
ja
xchg
dec
add
fidivl
test
stos
filds
cwtl
call
add
push
addb
je
jle
loopne
mov
jl
fs
inc
iret
loopne
int3
test
jl
das
fimull
enter
xor
xor
sbb
fnsetpm(287
mov
add
out
adc
mov
mov
fidivl
or
popa
xor
dec
lock
jns
mov
push
nop
mov
sub
imul
aam
bound
add
pop
lret
popa
enter
add
lret
mov
lahf
mov
cmovno
xor
adc
hlt
out
jns
add
out
pop
or
dec
jl
xlat
pop
lds
and
sar
rcrl
add
je
jno
dec
leave
ds
les
add
out
imul
sbbb
fcom
jo
xchg
jns
inc
or
inc
scas
ret
dec
test
xor
mov
dec
pop
mov
rcl
lock
fldl
jle
fisubl
shlb
shlb
mov
mov
xor
fs
fwait
sub
mov
add
fnstsw
pop
inc
in
in
lock
and
mov
xchg
ret
xor
fs
fdivrs
outsb
fcomps
int3
jle
fistpll
sub
sub
nop
cs
sub
adc
push
test
xor
mov
cwtl
add
or
fists
stc
mov
mov
int
mov
pop
in
xor
or
push
mov
cmpsb
and
and
add
test
add
movsb
mov
pop
adc
or
out
ficoms
dec
stos
lahf
and
js
adc
mov
mov
mov
sub
cld
stc
aam
dec
repz
xor
scas
jo
rolb
loop
xor
inc
and
lret
xchg
cmpsl
fs
push
add
push
jno
mov
adc
call
repnz
dec
push
out
jge
or
mov
jae
ds
mov
xchg
xchg
pop
scas
or
rol
ja
and
cmpsl
hlt
adc
xor
cwtl
das
leave
mov
movsb
clc
call
xor
jge
outsb
jb
add
inc
and
inc
rol
popa
sub
add
jg
sub
add
and
inc
sub
push
and
fmuls
insb
mov
int3
mov
pop
dec
scas
cwtl
sbb
sbb
xor
cmp
mov
add
and
mov
cmpsb
dec
jne
js
lret
jge
in
fdivr
scas
in
add
mov
xchg
push
or
jnp
rolb
inc
rcl
insb
arpl
add
jg
jo
mov
das
stos
pop
das
pusha
std
in
push
aam
fsubl
adc
nop
fldcw
pop
pop
js
ret
and
mov
ds
loope
push
sti
repz
popa
gs
or
lock
stos
stos
push
pop
add
and
and
pop
fnstcw
adc
cmp
adc
cltd
jns
clc
mov
pushf
cmp
loop
push
clc
daa
mov
fs
jmp
pushf
pop
xchg
adc
add
xorb
mov
add
push
inc
pop
loop
movsb
jno
mov
cltd
hlt
add
cmp
push
mov
cmp
mov
mov
mov
repnz
sahf
push
sbb
add
sbbl
fisttps
enter
test
xchg
out
pop
lods
sub
xchg
inc
jno
add
mov
lods
pop
movsb
pusha
add
cmp
cmpsl
inc
sub
inc
fsubl
pop
xor
xor
ds
add
clc
test
cmpsb
mulb
push
cmp
xchg
rcl
and
add
imul
pop
xchg
and
pop
inc
xchg
repnz
jne
cld
stos
add
push
cmpsl
mov
imul
sbb
xchg
cmp
popa
add
stc
mov
add
push
sahf
les
sbb
test
jne
subb
fldl
xchg
shll
loopne
cmp
dec
in
adc
in
xchg
adc
lock
cmp
xchg
outsb
sub
add
xchg
xchg
pusha
xor
scas
mov
sbb
xchg
loopne
dec
aam
cwtl
es
dec
xor
add
outsl
lret
and
mov
shl
and
mov
ja
fcomps
inc
sbb
or
or
xor
mov
jl
aad
xor
dec
xor
nop
dec
and
movsb
imul
add
loopne
ljmp
stc
and
cmpsl
lods
inc
in
movsb
add
mov
adc
es
cmpb
cmp
les
pop
in
pop
jge
jecxz
cmp
fidivl
xor
inc
pop
add
sbb
clc
dec
add
insb
jnp
add
shl
jns
sbbb
int3
pushf
or
int
mov
jp
aas
jno
pop
stos
push
insl
data16
cmpsb
mov
or
push
pop
and
imul
nop
add
rcrl
sahf
push
nop
sbb
pushf
dec
pop
cmp
in
jg
ret
loope
pop
daa
rcl
in
nop
push
cmpsb
jmp
js
inc
dec
inc
add
sahf
mov
gs
int
add
cltd
or
cwtl
xor
clc
pop
inc
sti
mov
fcmovu
rol
sub
ret
mov
or
test
fs
adc
je
enter
xchg
add
hlt
mov
std
pop
pusha
fisubl
in
mov
jbe
jmp
dec
add
sbb
mov
add
loop
sar
sbbb
dec
add
lds
aas
pop
pop
inc
and
mov
call
push
dec
test
inc
scas
popa
hlt
arpl
xchg
and
scas
mov
fidivrs
imul
and
and
and
test
xor
push
inc
clc
rorb
jbe
sete
roll
nop
out
dec
cwtl
add
and
mov
cmp
jae
ret
outsb
add
cmp
nop
add
repnz
and
in
shrb
mov
jbe,pt
movsb
lret
out
pop
mov
add
jb
add
cmp
pop
pushf
pop
mov
xor
jp
inc
fisubrl
mov
mov
nop
insl
adc
rorb
movsb
cli
or
lock
pop
cmp
pushf
pop
cmp
inc
subb
or
sub
and
test
test
xor
mov
mov
dec
mov
arpl
dec
xchg
jmp
stos
lods
sbb
into
cltd
int3
test
jbe
in
or
nop
rclb
mov
enter
inc
shr
add
mov
or
test
pop
and
movsl
pop
add
lds
mov
mov
dec
stc
cld
dec
push
add
xchg
fsubrs
xlat
or
dec
fiaddl
cwtl
rol
out
hlt
add
testb
pop
inc
jae
push
mov
mov
jnp
js
add
dec
rcl
mov
call
aaa
mov
inc
pop
inc
lock
out
inc
cmp
je
dec
push
adc
xchg
int3
cmpsl
shl
ficompl
and
cli
loopne
mov
test
and
adc
lcall
cmpsb
addl
lock
mov
xchg
daa
fdivp
add
jp
mov
cmp
jge
cld
mov
aam
mov
push
lret
out
fs
movsb
sbb
jb
push
add
test
lret
lea
push
movsl
xchg
bound
stc
out
sub
int3
add
add
mov
shrl
jecxz
xchg
jg
cwtl
je
es
sub
xor
lods
sub
pop
mov
stos
mov
fsubrs
nop
fsubl
shlb
mov
dec
dec
js
add
inc
rcll
inc
mov
add
fincstp
shr
push
add
imul
jo
shl
js
adcb
push
dec
xchg
cwtl
fisubl
xchg
mov
mov
call
pusha
push
dec
inc
sub
scas
lock
sub
xchg
mov
dec
dec
stos
mov
xchg
andl
fildl
call
and
pop
dec
mov
xchg
clc
push
or
mov
orb
cmp
pop
push
inc
js
jge
ds
jg
cmpsl
adc
push
sub
sbb
imul
pop
icebp
mov
xchg
test
xor
mov
aas
sbb
cmp
lods
mov
pop
sbb
inc
aad
fldenv
jnp
adc
pushf
orb
mov
jno
and
gs
je
mov
push
cmp
call
inc
dec
clc
ficomps
mov
sahf
test
pop
lds
mov
js
enter
add
nop
jle
xorl
mov
push
inc
push
ss
pop
sbb
popl
or
sub
mov
inc
sbb
mov
loopne
enter
and
inc
xor
add
mov
rcl
mov
stos
sbbb
sub
sub
loopne
call
das
xor
mov
lods
sbb
add
xchg
cld
dec
pop
mov
push
lods
mov
mov
mov
jp
adc
mov
inc
xlat
lds
enter
push
out
pushf
xchg
adc
push
int3
add
fsubl
jmp
sub
xor
cwtl
push
add
cmp
push
dec
sbb
in
inc
and
in
cmp
stos
popf
mov
or
xor
sub
test
lret
sub
add
adc
mov
pop
insb
add
cmovo
lcall
scas
add
fnstcw
jne
and
cmp
iret
add
outsb
pop
fcom
pushf
inc
or
mov
jbe
mov
pop
and
rcl
das
fisttpl
or
jnp
pop
lock
inc
push
mov
add
lods
add
add
jge
insl
iret
enter
adc
cltd
mov
shl
icebp
iret
clc
add
cmp
fsubs
cmp
mov
add
rol
leave
xlat
adc
sbb
shr
mov
fnstenv
movntq
adc
mov
mov
mov
adc
es
or
inc
ror
or
rcr
add
inc
dec
mov
and
cmp
push
sbb
xor
je
in
xor
mov
outsl
add
mov
and
cmpl
sub
pop
cmpb
mov
push
cwtl
jmp
loope
ret
xor
inc
in
cmpsl
rcll
sub
popa
mov
mov
out
sbb
or
cwtl
ds
mov
pop
test
enter
lock
aaa
cmp
in
sbb
push
add
mov
cmc
mov
add
add
xor
xchg
mov
icebp
inc
ficoml
rcrl
mov
cmp
in
js
outsl
dec
cmp
jo
jle
nop
mov
add
fadd
scas
jecxz
sbbb
adc
cmp
les
jle
loopne
loope
xchg
call
test
fs
mov
sub
cmpsl
mov
push
icebp
sbb
negl
and
pop
cld
mov
out
sub
dec
or
cwtl
sub
sub
andb
sub
dec
jl
cmp
cmp
js,pn
daa
xchg
mov
dec
rcrb
mov
pop
aas
cld
shrb
fists
xor
add
jg
and
push
or
sub
pop
adc
add
cmpsb
xchg
arpl
ds
or
test
xchg
or
sahf
and
imul
dec
cmpsl
sub
jl
xlat
and
lahf
sbbl
test
mov
pop
lea
leave
fildll
push
cmp
ljmp
and
rclb
lods
add
std
dec
xor
add
shlb
mov
in
in
jle
xchg
mov
imul
push
popf
add
pop
nop
xor
adc
fistps
mov
push
jne
mov
in
pop
jns
lock
ret
and
repz
lock
add
enter
aam
cld
add
mov
adc
push
bound
jp
xchg
xchg
xchg
mov
dec
inc
arpl
lock
push
in
or
xchg
inc
adc
jns
je
stos
popf
add
or
adc
xor
dec
cmp
mov
mov
loopne
xchg
shlb
or
sub
pop
aas
and
or
push
daa
push
in
mov
aam
and
add
ret
outsl
xor
dec
mov
test
add
pop
lods
inc
mov
mov
and
push
stos
stc
rolb
and
push
or
xor
cmpsl
cmp
pop
adc
popf
addb
adc
fmul
jg
pop
or
pop
cmpsb
test
shrb
fisubl
mov
aam
fsubrs
adc
dec
sbb
aas
scas
add
fidivl
inc
cld
inc
jle
or
cli
test
loop
add
stos
jmp
inc
add
stc
or
cmpsb
jle
loopne
adc
repnz
add
loope
out
inc
sbb
push
jnp
enter
jecxz
loope
push
lret
xor
add
mov
cwtl
pop
andb
push
jl
out
fildl
addb
pusha
lods
adc
jns
test
add
inc
mov
jb
daa
cmp
aam
or
jo
xor
xchg
call
pop
xchg
fdivs
jae
sub
adc
addb
push
call
and
rol
cld
ds
dec
inc
icebp
cmp
movsl
mov
psrlq
fldt
leave
adc
jmp
mov
adc
cmp
inc
nop
pusha
sub
add
pop
sub
mov
push
mov
aam
jl
jnp
cmp
std
mov
mov
cmpsl
mov
lret
je
std
cmp
or
inc
add
cwtl
mov
js
out
ja
test
adc
push
mov
jbe
add
pop
pop
and
test
out
inc
or
rclb
add
test
hlt
adc
add
mov
add
fwait
adc
jmp
add
and
inc
mov
fs
fiaddl
jg
dec
mov
jb
out
jnp
ja
ror
dec
mov
call
push
pop
inc
mov
pusha
sub
enter
fs
std
popf
loopne
dec
xor
jg
fildl
rcll
pop
pop
scas
pop
mov
add
sub
cltd
xchg
sahf
les
cmp
fistl
test
mov
add
add
andl
add
push
inc
ret
scas
pusha
lcall
and
pop
inc
aas
stos
pop
sahf
push
push
cld
aaa
pop
adc
dec
ja
bound
xor
adc
arpl
ret
sbb
js
jnp
stos
jle
roll
je
insl
leave
and
adc
xor
mov
add
int
mov
add
bound
arpl
adc
fldenv
push
jb
js
rcrb
cmp
pushf
adcb
mov
jno
jge
adc
mov
mov
pusha
lods
pushf
push
adc
into
mov
and
push
mov
xor
pusha
jecxz
pop
or
scas
les
addb
mov
fdivs
gs
adc
mov
mov
add
mov
cld
mov
es
pop
popa
pusha
jle
pop
outsl
or
fsubl
push
xchg
daa
push
inc
mov
orb
test
fwait
and
cld
sub
pop
cltd
lds
test
cmp
dec
add
or
js
mov
jns
xor
mov
stos
outsb
xor
push
sub
test
imul
imul
dec
dec
ljmp
lret
aam
pop
out
imul
mov
jge
xchg
or
adc
mov
in
leave
or
int3
add
dec
xor
sbb
add
subl
fdivrl
sbb
adc
rorl
or
lock
pop
test
adc
mov
push
out
enter
jge
cmpsl
test
out
scas
iret
mov
push
incl
jno
add
sub
inc
sbb
test
es
call
pop
daa
cmp
leave
push
inc
mov
jmp
inc
xor
add
shr
loope
or
packuswb
or
jle
xor
push
clc
mov
fnstenv
push
out
mov
fstl
add
ss
daa
je
scas
das
and
and
daa
fsts
adc
mov
lcall
sbb
xchg
xchg
jecxz
mov
gs
and
aaa
pop
add
push
fcmovnbe
mov
lret
sbb
test
adc
pushf
mov
adc
imul
adc
mov
cld
and
add
adc
pop
movsl
les
mov
xor
sti
push
bound
or
jae
mov
push
cmp
inc
nop
leave
testl
dec
sbb
mov
es
aaa
sbb
roll
js
dec
xchg
mov
and
mov
orb
dec
inc
cli
xorb
cmp
addl
xchg
adc
push
inc
rcll
adc
js
mov
mov
decb
add
lods
stos
mov
data16
pop
fidivrl
sbb
or
aad
jb
int3
or
jg
cmp
xor
mov
and
add
push
sbb
dec
add
fcom
push
roll
cmp
scas
add
je
adc
xor
test
sbb
sub
dec
insb
add
scas
adc
add
add
sti
mov
mov
sbbl
mov
sub
jnp
sbb
clc
lret
add
inc
or
xchg
stc
and
or
pop
push
aaa
mov
stos
arpl
inc
xor
jne
mov
lock
into
add
sbb
js
push
mov
stos
lcall
xchg
repnz
fcoms
jo
inc
dec
rcl
mov
add
fsubp
sub
lahf
inc
and
iret
fs
pop
jg
popf
and
scas
loopne
or
lods
mov
daa
int3
xor
inc
into
enter
repnz
mov
pop
add
loopne
ljmp
hlt
dec
cmp
aaa
cwtl
or
rcl
or
add
jbe
xchg
fadd
frstor
fsub
xchg
in
jl
test
jg
clc
nop
xchg
sub
enter
mov
fildl
sub
mov
out
push
popf
int
or
jg
repnz
roll
or
push
add
mov
les
jb
and
and
mov
stos
das
js
fldcw
fcom
add
cmpsl
add
out
lret
push
mov
icebp
je
nop
jae
jp
xchg
mov
cmpsb
addr16
cmp
mov
out
cs
loopne
cwtl
lcall
ds
and
add
in
sbb
in
lods
inc
loopne
adc
mov
dec
jnp
jle
std
or
sub
mov
pushf
adc
dec
xor
bound
cmpsl
rorl
inc
xchg
fdivrl
xor
add
fwait
bound
inc
pop
dec
mov
enter
fistl
cwtl
fld
add
movsb
xor
jg
in
jl
push
pinsrw
je
adc
push
mov
subb
jl
lods
add
or
sub
xor
enter
hlt
jb
pusha
loopne
or
push
out
and
loope
sub
jo
rclb
mov
call
jecxz
add
dec
jbe
inc
jno
call
pusha
xchg
addr16
clc
js
clc
scas
rorb
adc
lahf
inc
shll
and
in
jne
cmp
jns
ds
xorb
insl
andb
clc
jae
icebp
or
adc
jb
inc
inc
ss
inc
jnp
fldl
sub
add
pop
and
xlat
test
mov
dec
lods
sub
adc
cmp
cwtl
es
cmp
sub
sub
das
adcb
loop
mov
mov
jae
dec
fmull
or
lods
sub
addr16
cmp
cmp
hlt
jp
add
dec
stos
push
jnp
in
js
adc
mov
cwtl
cwtl
inc
outsl
fiaddl
pop
xor
test
add
jns
jno
rcr
loopne
jbe
sub
add
int
inc
shl
pop
nop
call
scas
or
insl
enter
and
movsb
aam
lret
cmc
add
or
add
out
cld
add
cld
test
mov
in
das
daa
pop
inc
add
mov
xor
fstpt
mov
mov
sbb
clc
sub
xor
inc
movsb
xor
xor
add
pusha
orb
lds
sub
fcom
hlt
lcall
cli
subb
sbb
push
sub
add
mov
mov
adc
mov
xchg
sbb
inc
test
ror
sub
mov
or
dec
jbe
lock
fisubs
call
jne
ficoml
xchg
adc
adc
sub
jp
sbb
ficoml
push
pusha
push
lock
sbb
cmpsb
mov
js
mov
fiaddl
push
push
scas
or
adc
sbb
subl
mov
dec
mov
adc
jmp
pop
out
adc
adc
mov
bound
cmp
je
std
les
mov
adc
dec
fwait
cmp
movsb
cmp
mov
outsl
or
xor
imul
dec
jae
and
xchg
add
fstl
mov
lods
fnstenv
and
enter
das
mov
push
inc
xchg
pop
add
mov
std
ret
testb
loopne
push
out
cmp
shrb
enter
and
jbe
loopne
lahf
xchg
test
inc
fsubs
dec
and
inc
sbb
xchg
sbb
or
cmp
mov
rcll
add
mov
push
jo
add
jp
mov
jge
dec
fldenv
sarb
cld
xchg
dec
or
aam
add
stos
xchg
pop
sbb
sub
xorb
sub
sbb
loop
jo
adc
mov
cmp
outsb
out
add
loop
dec
xchg
pusha
or
jne
inc
rclb
inc
enter
add
lahf
int
aaa
cwtl
jb
cmovo
add
stos
cmp
mov
add
sahf
cmovns
arpl
insb
cltd
lock
xor
stos
xor
fdivrl
add
dec
and
incl
ss
mov
jmp
aas
fiadds
sub
push
and
cmpsl
idivb
cltd
fcompl
test
mov
outsb
xchg
loop
cmp
cmp
mov
xchg
push
or
xor
fldl
icebp
push
out
push
adc
and
cmp
gs
jg
mov
jae
js
xchg
nop
inc
stos
xor
adc
pushf
std
test
jno
add
pushf
xor
push
loopne
lods
lock
push
add
lcall
int
push
inc
clc
or
xlat
sub
mov
push
mov
mov
add
clc
ja,pt
sarb
pop
add
jecxz
and
adc
aam
add
add
cs
or
xchg
push
rolb
cmp
dec
mov
inc
xchg
lret
pop
pand
ret
cwtl
leave
movsb
aam
cmp
mov
sub
mov
mov
pop
jg
adc
jnp
nop
lods
ds
in
pop
cmp
add
out
lock
mov
pop
add
frndint
and
lahf
rolb
out
push
mov
pop
in
or
add
sub
add
or
pop
test
js
sub
jge
xchg
fwait
lret
insl
cmp
les
mov
inc
jo
and
fwait
add
push
stc
out
aad
ja
adc
inc
inc
test
xor
pop
sahf
sub
push
dec
xchg
mov
or
pop
inc
or
not
add
jno
inc
add
mov
mov
add
xor
mov
cmp
inc
shll
adc
in
std
loope
inc
mov
out
and
dec
and
push
mul
adc
shl
movsb
inc
test
and
add
lret
or
add
fdivl
dec
cs
fadds
adc
xor
sub
stc
jb
enter
out
cli
mov
jnp
dec
cltd
add
jmp
mov
xor
cmp
or
adc
in
and
dec
pop
loop
add
cwtl
pop
push
int3
or
lods
cs
add
stos
cvttps2pi
aam
mov
mov
cmpsb
lret
sbb
sub
shrb
pop
add
int3
ror
jne
inc
dec
cmp
nop
cmp
sub
mov
and
or
adc
xor
push
jg
ljmp
mov
xor
fcoml
pop
xor
fdivrl
enter
xchg
in
xor
lock
adc
jnp
pop
mov
in
daa
adc
xor
push
and
leave
push
add
cmp
jmp
or
les
push
inc
divb
inc
cmp
and
js
rcrb
push
loop
add
adc
pop
int3
je
add
out
cli
inc
fwait
push
jns
add
ds
push
imul
add
out
add
xchg
xor
add
flds
lahf
ret
movq
outsb
nop
shrb
mov
inc
loope
mov
sbb
push
push
and
xchg
enter
add
scas
inc
pop
rorl
gs
sbbb
into
incb
popf
adc
lods
pushf
dec
movsb
rcr
dec
je
adcb
icebp
out
sbb
add
jg
aaa
pop
mov
gs
mov
xor
sbb
loope
mov
orb
cld
andb
lods
fbld
adc
lahf
or
es
jmp
popa
xlat
inc
sbb
add
rcrb
add
lods
enter
mov
or
jl
rcll
enter
sub
mov
sub
xor
cli
add
cmpsl
cmp
adc
xor
cmc
andb
jecxz
add
jo
loopne
movsb
or
add
sub
push
push
daa
mov
sub
pop
cmp
jb
loope
xor
jl
clc
ror
push
adc
jp
mov
and
and
and
xlat
test
leave
xor
jp
xor
rcr
xor
hlt
test
pop
popf
cmpsl
mov
jmp
cwtl
arpl
test
and
xchg
mov
loopne,pn
add
sub
lret
rorl
jge,pn
fnsave
scas
and
int3
and
lods
testb
inc
in
or
xchg
or
push
test
dec
inc
dec
dec
and
or
push
pusha
lock
fdiv
stos
std
xor
enter
lods
stos
shll
mov
adc
add
xchg
movsl
aas
pop
push
fwait
cld
jb
jno
dec
cwtl
push
rcrb
xchg
repz
push
movsb
pop
mov
movsl
icebp
push
jl
add
int3
fdivl
cmp
nop
outsl
scas
ficomps
mov
sbbb
xchg
mov
pop
adc
cmp
adc
stos
xor
gs
pop
inc
adc
rolb
dec
pop
mov
mov
ja
arpl
dec
sub
or
fwait
jg
movsb
fiadds
push
jae
inc
cmp
cmp
popa
jg
loope
ret
inc
addr16
in
ret
fdivr
add
out
xchg
out
cmpsl
add
gs
lahf
lods
add
popa
push
jecxz
in
add
sbb
mov
insl
push
inc
xor
scas
into
out
out
mov
fiaddl
inc
cwtl
mov
pop
inc
in
repnz
sub
push
xor
outsb
fs
std
sub
add
and
jg
push
xor
rcll
xor
and
push
fnstenv
add
stc
sub
push
cmpsb
inc
adc
lock
pop
jge
pusha
add
fnstenv
xchg
add
push
mov
add
repz
cmpsb
sbb
pop
jge
rol
sbb
and
pop
pop
sbb
in
inc
jns
add
aas
adcl
aad
js
pop
mov
push
jmp
add
stc
arpl
outsl
xor
or
aam
cmp
add
pop
cmp
cwtl
mov
in
call
les
imul
cmp
data16
xchg
adc
add
mov
sub
fmull
inc
add
xchg
ja
lods
call
mov
mov
sub
hlt
push
xchg
add
pop
test
inc
cmp
dec
add
push
stc
push
add
rcll
pop
dec
iret
add
aaa
push
pop
mov
loopne
popf
nop
pop
mov
add
xchg
mov
cmc
adc
add
xor
xchg
xchg
jge
add
and
fimuls
popf
repnz
mov
scas
loopne
add
outsl
xchg
fmull
addl
xorb
pop
dec
jp
hlt
add
or
add
dec
inc
sbb
arpl
xchg
push
mov
gs
adc
jl
xor
jno
push
jg
add
push
xor
add
jae
push
pop
dec
rcl
repnz
and
rcl
add
sub
mov
stos
ret
or
dec
out
lock
cmp
aas
jbe
andb
mov
dec
dec
pusha
jp
pop
clc
loopne
inc
sub
mov
setae
or
div
ret
dec
pop
fwait
jp
add
push
cmp
jp
popa
in
add
jns
movsl
add
cwtl
rol
push
mov
and
pop
mov
or
add
jge
fldl
cmp
mov
add
out
mov
testl
in
sub
sbbl
xor
cs
or
sti
gs
inc
push
rolb
jecxz
fs
inc
pop
out
arpl
and
mov
inc
add
mov
popa
dec
xor
and
mov
or
pop
xchg
mov
cmp
roll
push
sbb
mov
mov
ret
push
mov
call
dec
andl
dec
xchg
inc
jmp
call
repnz
push
xchg
test
pop
sub
pop
add
mov
fs
pusha
ja
lock
loopne
or
add
xchg
jl,pt
ja
bound
xchg
out
imul
cmpsl
ja
sti
ljmp
add
push
dec
test
mov
inc
push
mov
lds
in
scas
and
out
in
out
in
pusha
push
sbb
add
mov
out
subl
jle
add
movsb
clc
incl
out
inc
xorb
outsl
into
pop
dec
pushf
xor
jl
inc
lcall
movsl
mov
push
jmp
xchg
jg
adc
cli
add
outsl
push
cmp
pop
enter
mov
cmpb
mov
add
les
pop
push
lock
sub
add
pop
fistps
xor
xor
stos
sub
faddl
cmp
add
insb
lods
xor
or
bound
mov
pop
js
stc
bswap
xor
in
movsl
mov
push
push
jno
push
fidivs
movsb
jo
cld
in
inc
test
xor
and
daa
test
lods
cmpsl
fdivs
sbb
pop
adc
inc
sbb
sub
inc
mov
dec
pusha
sar
add
and
das
add
add
bound
fdivl
mov
and
add
xchg
push
dec
add
mov
imul
pop
or
add
sti
fsts
leave
subb
mov
repz
in
pop
add
movsl
icebp
pop
mov
add
test
push
cli
pusha
dec
insb
dec
push
inc
cmp
addl
add
ret
xchg
jno
jo
and
jp
cmp
fwait
add
lcall
rclb
push
xchg
popa
dec
xor
add
movsb
mov
and
pusha
outsl
inc
push
cmpsl
je
mov
adc
icebp
mov
mov
daa
add
mov
imulb
mov
rorl
popf
sbbl
mov
cmp
and
add
sbb
pop
add
arpl
push
add
sbb
jecxz
and
add
push
mov
cmp
push
stc
inc
add
fs
mov
xchg
incb
xchg
inc
cwtl
pushf
xchg
nop
sti
imul
lock
flds
and
ret
pusha
loop
or
loope
xchg
movsb
mov
jmp
nop
dec
add
in
mov
in
out
in
xor
cs
lcall
xchg
dec
test
sub
add
fmuls
pop
add
mul
or
mov
jp
add
insb
add
jg
adc
fildll
int3
es
aad
cld
ficoms
rcrb
movsl
shll
xor
cmpsb
cld
cmp
in
dec
pop
fmull
push
dec
cmp
add
lahf
inc
inc
lret
and
lret
sbb
adc
sbb
jmp
repz
inc
out
nop
inc
sahf
or
out
xchg
jl
add
inc
dec
inc
and
cmp
sbb
cli
add
push
jle
inc
jns
xor
or
pop
pop
inc
fxam
mov
daa
pop
jg
xchg
add
cmp
cmp
mov
add
jle
adc
addb
daa
add
xchg
jb
push
add
push
jbe
mov
pop
mov
push
pusha
inc
jnp
sub
popl
mov
or
dec
and
lock
dec
add
ljmp
xchg
add
or
or
outsl
iret
add
imul
das
or
pop
add
ret
add
scas
sub
xor
sub
add
jge
dec
pop
rorb
arpl
inc
xchg
cmp
add
pop
or
notb
add
jecxz
stos
ret
fwait
jno
add
mov
loopne
loope
add
jle
scas
clc
mov
inc
push
jge
pushf
and
and
test
fimull
xchg
jo
mov
add
addr16
in
stc
adc
add
dec
das
pop
add
fstpl
ltr
ljmp
mov
mov
push
std
and
push
mov
out
stc
shlb
or
xor
mov
cwtl
movsb
add
mov
loope
cmpsl
sbb
pop
pusha
xchg
push
cld
jns
cmp
sahf
add
xchg
sub
inc
mov
push
sub
jae
clc
add
lds
pop
and
mov
mov
mov
xor
pop
mov
push
arpl
mov
xchg
adc
xchg
xchg
push
sub
hlt
cmp
lea
das
xor
repnz
xor
add
test
enter
int3
dec
repz
fmuls
hlt
cmp
cmp
or
bound
jne
sub
inc
jp
clc
mov
xor
add
insl
sub
push
es
mov
xchg
jno
rclb
push
pop
add
jae
or
addb
push
cs
adc
mov
hlt
jbe
and
xchg
add
into
sub
inc
sub
sahf
pop
add
sbb
call
pusha
add
jle
pushf
sbb
push
bound
stc
rcrb
sbb
mull
jo
add
jb
xchg
ljmp
cmp
push
test
mov
pop
stos
imul
icebp
push
mov
or
mov
xor
add
mov
jbe
lock
arpl
cld
add
sub
les
movsb
and
roll
inc
mov
insl
loopne
mov
inc
pop
enter
dec
push
cs
jmp
movsb
pop
stos
pop
jns
sbb
mov
or
jl
test
nop
movsb
inc
cmc
add
scas
sbb
pop
sahf
fidivs
xorb
mov
pusha
add
test
shr
jmp
clc
pop
mov
movl
in
je
sbb
insl
and
mov
es
inc
cmc
mov
and
sbb
push
mov
loop
sub
and
pop
mov
sbb
dec
xor
xchg
add
inc
push
idivb
arpl
pop
loopne
cmpsb
pop
sbb
sub
shlb
repz
dec
xor
mov
fldenv
mov
repz
pop
cmpsl
pop
imul
fwait
add
daa
hlt
add
jmp
shld
movl
cmp
add
aad
clc
mov
and
add
push
aaa
sub
or
aad
repz
push
mov
mov
mov
in
sbb
adc
verw
mov
sbb
test
js
imul
or
das
es
addb
cmp
cli
and
push
and
push
xor
inc
jp
daa
fidivs
dec
add
jnp
addr16
dec
add
fisttpl
sub
shlb
cs
jle
mov
xchg
push
fistpll
inc
sti
xchg
mov
inc
push
mov
add
insb
pusha
movsl
adc
rorb
xor
jecxz
icebp
add
insb
dec
sbb
and
sub
shlb
mov
shll
and
adc
scas
or
mov
sub
jnp
outsb
dec
test
jge
inc
notb
aad
and
jecxz
xchg
ljmp
mov
push
mov
enter
cmp
mov
add
dec
dec
sub
jmp
add
dec
dec
ss
out
add
adc
mov
pop
das
push
pop
andl
sbb
testb
and
lods
mov
out
push
cmp
aam
ds
xor
stc
add
inc
mov
cmp
or
or
stos
xor
add
sub
rorb
jg
add
mov
shrl
in
jo
addl
mov
mov
add
lods
stos
clc
roll
and
addr16
add
lcall
sbb
outsb
xlat
and
into
int
add
lea
mov
test
add
sbbl
sub
push
mov
mov
mov
mov
ret
je
aaa
outsl
add
mov
mov
xchg
and
lret
jbe
jbe
cmp
xor
out
adc
mov
inc
cltd
add
mov
xlat
std
data16
sub
mov
sub
movsl
xchg
add
sub
and
mov
sub
out
out
fldcw
inc
jl
dec
pusha
ljmp
int3
lock
out
rol
out
clc
hlt
push
sub
jns
and
mov
sbbb
add
arpl
push
xchg
add
gs
jg
jnp
adc
add
fldenv
pushf
imul
out
ss
andl
sbb
rclb
pusha
and
mov
or
add
cmp
lret
clc
lock
sbb
das
add
test
ds
and
mov
lcall
adc
sahf
xchg
filds
adc
scas
inc
cmp
ret
addr16
mov
adc
out
fsubp
adc
adc
sbb
repnz
add
call
pop
ret
mov
jnp
mov
popw
imul
add
push
jecxz
jmp
inc
mov
adc
in
add
xchg
adc
les
lcall
scas
data16
add
fldl
cmp
clc
ss
cld
nop
cmp
notb
rcrb
xchg
movsb
mov
or
cwtl
add
or
add
mov
inc
pop
out
add
xchg
xor
pop
movsb
repnz
fs
push
fsubr
sub
mov
test
xchg
dec
push
and
fcmovb
xchg
in
mov
das
hlt
mov
adc
test
mov
cmpsl
fsubr
add
jne
divl
xchg
xor
xchg
add
push
sbb
push
sahf
imul
daa
das
mov
dec
add
add
mov
add
pop
incl
xor
data16
xchg
sub
sti
insl
daa
add
sahf
popf
xorb
jmp
sbb
lret
pop
and
push
cld
out
stc
sbb
sub
nop
sbb
push
jmp
mov
fcmovnb
push
shlb
jg
add
and
pop
ljmp
sbb
mov
mov
movb
test
inc
pop
mov
sahf
dec
push
mov
add
daa
test
add
fcmovnb
pop
sti
add
mov
stc
or
or
mov
xor
pushf
shrl
push
jge
dec
xor
push
je
dec
inc
nop
data16
mov
push
jle
add
mov
leave
add
sbb
push
adc
div
inc
and
js
call
outsl
dec
imul
push
cmp
pop
add
sarl
sub
out
insl
adc
sub
or
cwtl
pop
add
out
ljmp
movsl
lcall
ret
leave
enter
fadds
or
xor
hlt
sub
add
mov
xchg
pop
cld
gs
pop
sub
and
cmpl
inc
push
or
lret
sub
push
mov
jecxz
push
xchg
fs
lcall
cmp
shlb
add
out
stos
xor
in
mov
int3
cmp
adc
ds
pusha
stos
add
jp
jl
xchg
gs
aaa
xor
jo
xor
leave
push
addr16
scas
fsts
loop
int
loopne
shl
aam
push
or
mov
jnp
js
add
fdivr
testl
inc
sub
add
rcrl
out
push
sarl
pusha
shl
test
push
jo
and
pop
xchg
popa
add
loopne
add
xchg
add
cs
iret
add
or
fsubrs
jle
pop
mov
sti
loopne
movsb
or
xlat
fstpt
ja
jns
add
mov
xor
pop
mov
das
xorl
lahf
add
or
cmpsb
lret
mov
cltd
jp
rolb
mov
dec
xchg
clc
add
inc
pop
xchg
les
add
sub
mov
js
jae,pn
ret
pop
insl
clc
cmp
addr16
repnz
cmc
cmpsb
sbb
jnp
mov
add
adc
addr16
fsincos
push
and
push
dec
xchg
int3
sbbl
aam
dec
push
mov
push
in
mov
iret
dec
add
mov
jecxz
ror
dec
divb
aam
jge
xor
add
aad
xchg
aaa
mov
dec
jae
add
flds
xchg
cld
jns
repz
xchg
jnp
popa
inc
ljmp
loop
add
jb
add
outsl
aam
add
xchg
jmp
addb
jne
js
andl
outsb
adcb
push
cmpsl
mov
push
jle
scas
ljmp
sub
mov
jp
pop
aas
mov
xor
and
nop
stc
xor
cmp
imul
or
pop
in
in
lcall
lea
xchg
loop
xchg
add
push
fsqrt
mov
mov
sbb
adc
dec
push
sti
pusha
xchg
xor
loopne
das
nop
pop
add
cmp
addl
mov
stos
cs
ja
add
imul
outsl
in
pop
jne
sub
enter
add
bound
mov
iret
dec
adc
leave
mov
add
sti
and
add
sbb
aad
sbb
fadds
and
sub
xlat
jmp
lods
pop
scas
lods
cmpsl
xchg
adcl
mov
in
loopne
pop
imulb
adc
enter
adc
or
push
add
loop
xchg
xor
xchg
inc
fistps
add
clc
inc
add
jo
movsb
adc
push
push
add
movsl
ds
hlt
fdivl
mov
pusha
mov
add
mov
subb
push
sub
lret
add
cld
sbb
add
fdivl
jg
xchg
das
xor
popf
mov
repz
call
jge
mov
adc
dec
adc
pop
repnz
lock
add
hlt
shrb
pop
inc
movsl
cmp
or
dec
mov
loop
add
roll
adc
fs
icebp
xor
pusha
test
add
mov
xor
mov
jl
pop
add
dec
out
stos
cwtl
push
add
ret
and
sub
push
test
fsubl
addr16
out
lds
sub
mov
fisubl
xor
or
sbb
and
stos
push
push
cli
push
add
cld
and
in
adc
add
subb
dec
into
add
inc
lods
or
push
mov
imul
adc
test
inc
mov
ja
lcall
and
mov
out
sbb
dec
lods
nop
push
mov
dec
ret
fildll
nop
orl
cmp
adc
ret
loopne
xchg
inc
out
and
nop
cmp
shr
fisubs
out
add
rolb
xchg
jbe
xor
mov
mov
add
mov
pop
and
ds
pop
sbb
lahf
jo
push
xor
loope
mov
es
das
cltd
dec
add
sub
xlat
mov
and
xor
ret
inc
sbb
movsl
add
movsbl
xchg
push
and
mov
add
jmp
enter
add
test
push
sbb
lock
ljmp
lea
push
add
in
arpl
mov
mov
xchg
jl
addb
mov
xlat
rcrb
sbb
mov
aas
testb
xchg
adc
push
jp
add
mov
push
or
arpl
pop
stos
mov
mov
aam
xchg
jg
lea
mov
jbe
pop
and
pop
ljmp
push
jmp
loopne
xchg
in
and
sahf
pop
jo
aas
cmp
or
dec
jae
cmp
push
mov
add
add
sti
sbbl
pushf
cmpsl
jecxz
add
inc
mov
sub
sbb
dec
popf
sub
jo
inc
mov
je
or
movsb
icebp
repz
sbb
ret
fiaddl
or
call
cmp
addr16
cmc
xchg
mov
jo
cmp
jbe
fmuls
add
test
add
mov
jge
sub
lea
pop
jae
add
ret
rcl
insl
cld
add
xchg
mov
subb
ja
mov
nop
mov
testl
or
nop
and
cmpsb
fwait
dec
jo
push
add
dec
ret
cmpsl
mov
cmp
mov
out
xchg
pop
push
clc
mov
mov
sbb
jno
cwtl
mov
les
and
mov
std
repz
lods
add
je
inc
add
or
xchg
cld
stos
push
lahf
jbe
mov
cmp
dec
xchg
or
mov
test
stc
xchg
rolb
outsb
daa
ret
movsl
push
lcall
and
inc
cmpb
ss
loope
repnz
in
enter
and
rorl
popa
loopne
shlb
add
mov
and
mov
out
mov
cli
cmp
dec
jl
fimuls
les
xlat
sahf
add
ret
in
cmp
andl
lcall
pop
dec
jae
int3
imul
cmp
xor
sbb
addb
rolb
test
icebp
decl
push
add
add
mov
movsl
das
test
add
data16
rclb
pop
stos
xchg
cs
pop
lods
jg
xorb
pop
cmp
inc
data16
in
std
fnstenv
xor
add
push
dec
shll
out
xchg
subb
das
sbbl
jp
add
lcall
nop
shufps
rolb
and
sub
sub
add
popf
shrb
repnz
push
xor
mov
xorl
lds
roll
aaa
in
add
add
pop
sahf
std
adc
cmc
add
sub
shl
add
das
sbb
je
mov
add
jmp
idivl
mov
stos
push
pop
add
sub
xor
repz
in
jo
inc
mov
jne
setb
in
test
xchg
ljmp
in
fdivrs
sub
pusha
push
flds
aam
sub
loopne
in
aad
movsb
cmp
mov
cli
ja
sbb
out
repz
aas
pushw
out
je
and
into
rolb
mov
jl
lahf
mov
mov
cli
imul
inc
jo
loopne
int3
sbb
out
jp
pop
jl
push
inc
mov
pop
mov
adc
sbb
fldl
xchg
add
rcrb
data16
fwait
mov
outsb
xor
popf
lods
cwtl
sahf
mov
and
jg
inc
popf
loope
out
fdivs
or
lret
testb
scas
ret
and
inc
push
add
sub
cmp
subb
lock
ljmp
pusha
inc
cwtl
bound
cs
shll
xor
dec
xchg
pop
mov
sets
imul
daa
jnp
addb
ss
add
xchg
in
loop
dec
shl
xlat
jl
jmp
add
scas
jo
notb
sub
push
add
mov
stos
fstl
clc
aad
xor
mov
xchg
add
sbb
sub
inc
add
mov
testl
fldcw
insb
shrb
cmp
push
pop
mov
stos
and
sbb
loope
fsubrs
or
add
dec
sbb
fcmovb
xorl
lods
push
int
pusha
sbb
roll
js
cli
out
outsl
xchg
and
and
les
fistps
add
dec
pop
ss
jg
mov
mov
and
add
xchg
fsubp
rcrl
push
push
ss
xor
in
mov
enter
mov
sti
sarl
jno
shl
nopl
mov
cmpsl
nop
adc
pop
adc
inc
or
testl
jno
in
cmp
fildl
xor
mov
or
andb
inc
lcall
adc
stos
add
ret
mov
rclb
and
mov
int3
shl
push
sahf
inc
or
enter
addl
pop
mov
dec
xor
test
pop
sbb
test
dec
add
push
push
cmpsb
fldl
and
add
pop
mov
add
push
push
adc
je
add
xchg
out
jmp
xor
sbb
xchg
push
scas
lods
int3
add
testl
cwtl
hlt
sbb
sbb
call
sub
push
add
gs
pop
cwtl
mov
mov
test
sbb
fcmovne
inc
mov
xor
roll
cmc
push
cmp
sahf
add
mov
mov
push
scas
test
es
adc
add
icebp
into
add
pusha
nop
push
daa
test
dec
jle
add
add
xchg
fwait
lods
add
rolb
xchg
pinsrw
ror
loopne
jno
dec
add
sbb
ret
rorl
lret
add
int
cmp
stc
mov
lock
pop
aad
lahf
mov
add
and
sbb
rclb
xlat
shlb
test
scas
xor
push
adc
add
icebp
push
add
add
in
jns
stos
int
adc
inc
lret
dec
fldenv
xchg
adc
je
cmpsl
or
pushf
movsl
dec
push
loopne
in
add
pop
rorl
adc
adc
cmpb
pop
mov
and
push
sbbb
fbstp
push
xor
mov
mov
push
adc
pop
jge
mov
pop
or
ret
mov
add
stos
test
lcall
imul
inc
pop
fsubr
inc
mov
orb
sbb
sbb
mov
fs
aam
or
jo
push
dec
push
shlb
sub
or
pop
int
ss
xor
fdiv
pop
aas
add
mov
adc
add
sbb
and
popl
pop
add
in
mul
mov
test
add
push
cwtl
pop
or
jl
add
pop
les
inc
pop
add
mov
int3
ds
sub
add
cmp
and
in
push
add
jl
in
xchg
add
push
lcall
xchg
popa
aaa
cwtl
lret
add
mov
adc
push
arpl
bound
xchg
mov
lock
sbb
jecxz
pop
fs
lret
add
iret
fldl
enter
jge
mov
dec
xchg
inc
js
cmc
inc
imul
xchg
pushf
adc
sbb
mov
add
xchg
sbb
inc
pop
add
push
mov
repnz
adc
sbb
and
jb
mov
cs
rolb
inc
add
outsl
rcl
test
fs
cmp
ficoms
lods
dec
jbe
loope
add
nop
stos
sub
push
add
dec
test
and
mov
add
inc
out
sbb
pop
lret
fsubrp
jg
jb
add
sub
mov
pop
scas
jnp
mov
add
cmp
cmp
fdivl
js
lret
mov
or
lret
push
shlb
push
push
das
repz
add
or
cmp
dec
std
lahf
lea
ljmp
or
fsubl
pop
mov
mov
add
shrb
jp
rorb
push
lods
cld
pop
outsl
and
popa
int3
add
jns
jmp
lock
pop
andb
in
mov
sbb
push
ljmp
pop
imul
mov
in
pop
pusha
cli
test
jg
sbb
mov
sbb
adc
jg
jo
into
add
push
add
bound
nop
in
pop
enter
add
cvttps2pi
sbb
mov
pusha
sarb
add
dec
push
dec
adc
aaa
xlat
add
adc
and
add
add
iret
cmp
mov
sub
mov
repnz
sbb
push
push
jae
aas
enter
daa
sub
add
mov
cwtl
pop
and
fnstenv
aam
xor
sbb
rol
fwait
leave
xor
pusha
cmpl
jl
mov
xor
mov
jge
push
add
or
add
push
lret
andb
loop
int3
test
lahf
dec
andb
ljmp
repz
fistl
cltd
add
out
push
std
out
adc
addl
sbbl
lcall
int
mov
fiadds
push
jl
cmpsl
in
adc
lock
test
inc
xlat
je
loopne
mov
pop
mov
cmp
addl
dec
lcall
xchg
sub
popa
pop
push
xor
leave
mov
pop
inc
fistpll
cltd
add
add
dec
ret
aaa
adc
in
movsb
test
aad
inc
dec
cmp
add
cmpsb
xlat
cmp
add
add
dec
out
inc
add
popa
and
mov
adc
mov
loopne
push
add
js
fdivr
jne
add
jecxz
mov
sub
mov
into
fdivl
dec
mov
pop
mov
inc
jo
popf
es
out
add
xchg
sbb
imul
adc
jle
in
mov
loopne
out
add
subb
xlat
sub
pop
jns
or
ret
pop
mov
orl
outsl
xor
sarl
dec
cmp
stos
outsb
pop
mov
adc
loopne
sahf
push
xor
aam
scas
xchg
loope
sbb
iret
or
rolb
mov
pop
int
add
add
or
lds
add
push
mov
jp
push
pop
xlat
pop
movsl
and
in
add
add
dec
je
dec
mov
add
ljmp
add
push
cld
add
int
pop
pop
dec
mov
add
daa
nop
add
mov
add
icebp
lcall
sbb
leave
add
sbb
mov
push
inc
push
mov
mov
adc
add
js
ret
lahf
rcrl
popa
cmp
xchg
inc
test
add
loopne
cmpsb
aam
stc
loopne
pop
loope
test
cmp
shll
enter
adc
and
js
icebp
jo
ja
shlb
lret
int3
les
jae
loope
and
shrb
adc
inc
mov
repnz
dec
mov
fstpt
nop
ret
and
or
cmp
xchg
cmpb
pop
lcall
ret
mov
push
lcall
pushf
shll
cmpsb
and
xchg
pop
cmpb
out
insl
loope
rolb
adc
pusha
js
fcompl
or
leave
iret
into
sti
xchg
test
movsl
push
out
or
push
icebp
fwait
dec
mov
cs
cmp
xorb
and
lret
sbb
sbb
cmp
mov
aam
add
adc
rcr
in
sub
jbe
jl
add
mov
mov
sub
bound
fistps
and
aam
pusha
mov
pop
mov
lahf
add
push
ds
jle
pop
add
sub
xchg
sbb
loopne
add
cmp
inc
xlat
mov
lods
sbb
add
aaa
xor
mov
pop
addl
push
sbbb
inc
clc
mov
push
data16
cltd
xchg
shlb
test
daa
adc
loope
out
xchg
dec
or
mov
cmp
mov
pop
les
mov
add
jno
and
fisubl
andb
pushf
sbb
arpl
pop
inc
adc
jb
subb
pop
xor
dec
push
test
add
ret
xchg
cmc
and
imul
mov
mov
stos
pop
rolb
cld
movsb
jp
cwtl
int3
mov
pushf
dec
loop
push
arpl
rcrb
roll
lods
push
jmp
xor
cmp
rorb
jns
ja
mov
jl
add
add
mov
and
scas
rcl
add
sbb
fildll
mov
add
cmc
aas
xchg
lods
jmp
call
pop
push
int3
call
jno
faddl
add
lods
jge
or
aad
adc
mov
mov
inc
lods
sub
and
sub
adc
fsubs
push
add
sbb
xlat
add
int
call
enter
test
sub
dec
xchg
cmp
mov
pop
in
xor
mov
jb
add
push
push
push
cmp
and
inc
std
je,pn
lcall
jno
popa
pop
and
outsb
sbb
pusha
mov
ds
sub
ficompl
push
fwait
mov
adc
cmp
fisttps
inc
inc
hlt
mov
mov
mov
dec
mov
sub
dec
add
and
sbbb
add
stos
jno
test
mov
dec
inc
shrl
sub
outsl
inc
or
outsb
fucom
daa
add
into
jb
fs
add
sub
ljmp
sbb
sub
ret
and
cmp
xlat
xorb
ja
push
data16
in
int
xlat
add
pop
into
lldt
mov
and
sti
dec
pop
sbbb
std
lods
add
enter
adc
pop
lret
hlt
push
insl
push
movsl
push
dec
sub
adc
aas
push
mov
adc
addb
jb
popf
add
jge
or
gs
push
xchg
mov
pop
ja
mov
test
sub
imul
cmp
aas
subb
cmp
ds
add
lcall
add
jl
push
pop
and
xchg
add
mov
sbb
jnp
lahf
adcl
sbb
rcll
pop
adc
xor
mov
cmp
jnp
xchg
loopne
ret
mov
cmpb
jecxz
inc
add
push
push
movl
lods
add
xor
jecxz
rolb
mov
jne
cmp
enter
mov
scas
pushf
xor
repz
jle
sub
fstpt
daa
inc
inc
add
jmp
cwtl
pop
xchg
dec
cmpsb
clc
loop
insb
sbb
mov
lods
aas
rolb
pop
dec
stos
int3
push
jl
es
xor
cli
add
dec
sbb
sbb
push
cld
into
test
push
and
test
inc
inc
sarb
stos
js
cli
pusha
dec
popf
sti
cmpb
in
lock
add
cwtl
xchg
pusha
add
jmp
adc
dec
add
inc
fwait
sub
scas
subps
sbb
lock
and
add
outsb
add
add
cmpsb
mov
fiadds
jge
xor
push
sbb
push
mov
les
hlt
bound
jecxz
arpl
fsubrl
pop
or
sbb
xor
cmp
adcb
xor
cmp
xchg
add
jecxz
stos
rcrb
add
or
jne
add
roll
loop
push
add
adc
xchg
add
out
sbb
adc
add
and
sbb
adc
imul
mov
enter
sub
test
fnsave
add
jg
cmp
jmp
jge
mov
loope
add
push
cld
or
insb
idivb
and
cltd
lock
adc
pushf
push
leave
notb
es
loope
imul
fdivrs
sbb
add
inc
clc
shrb
insl
test
shrl
and
insb
add
or
sub
fadds
in
pop
jmp
xchg
mov
add
cwtl
cltd
cmpsb
inc
dec
pusha
jmp
in
adc
arpl
add
popf
int3
xor
clc
and
jg
inc
push
or
test
cwtl
mov
add
and
in
je
jne
in
repz
cld
stos
fidivs
arpl
add
das
shrb
cld
cmp
mov
cld
movsbl
movsb
sub
dec
jmp
jb
add
les
mov
push
or
fildll
push
and
push
pop
inc
es
add
dec
insb
pop
mov
jns
mov
add
add
ja
cmpsl
push
xchg
pop
cmp
mov
fwait
dec
lods
mov
jle
xchg
lock
in
sahf
inc
pop
fimull
add
mov
dec
pop
loop
add
scas
push
mov
sbb
shrl
sub
pop
add
inc
mov
stc
clc
decl
imul
rolb
int3
inc
cmp
lods
cwtl
dec
out
add
xchg
std
outsb
inc
mov
jns
mov
dec
jae
add
sub
fiaddl
pop
in
movsb
stc
enter
adc
cmp
push
dec
push
cmpsb
add
imul
jo
inc
sub
iret
push
ja
pop
add
dec
je
or
outsb
add
or
xor
mov
fldcw
inc
mov
add
adc
sub
pusha
mov
add
inc
ljmp
inc
pause
test
add
cmpsl
or
add
lds
dec
add
mov
add
scas
cmpl
mov
leave
pop
pop
dec
adc
mov
in
jb
cmp
clc
add
stc
ja
cmp
push
jbe
loopne
cmp
xor
imulb
js
xorl
pop
add
daa
xchg
mov
inc
push
loopne
ljmp
or
add
lock
int
mov
ds
mov
testb
out
mov
mov
arpl
es
jno
cmp
sahf
and
add
lock
jno
adc
fwait
dec
pop
addr16
or
and
add
push
paddb
mov
test
fcoms
mov
lret
in
xchg
add
outsb
shlb
std
imul
or
or
jo
add
dec
push
scas
cwtl
cmp
lahf
in
inc
lods
add
adc
adc
sti
inc
ja
mov
jmp
bound
jbe
xchg
or
filds
shr
lods
aam
add
inc
pop
pop
in
mov
popa
push
inc
xor
jns
dec
jno
dec
fists
cmpb
inc
add
mov
outsl
add
pusha
cmp
loope
add
adc
add
adc
cmp
or
add
xchg
inc
cld
cmpsl
addb
stc
js
jns
mul
cmp
sysret
test
stc
jmp
jbe
inc
inc
sbb
arpl
mov
jl
call
xor
sbb
test
sbb
aad
out
out
mov
sysenter
inc
adc
mov
ds
adc
daa
cmp
push
add
leave
stos
stos
outsb
add
jae
addb
fldcw
test
lods
add
pop
cli
jb
icebp
lea
imul
mov
and
test
jle
call
pop
cs
cmc
rorb
add
dec
inc
xor
negb
test
insl
jg
push
dec
jnp
stos
ss
in
fs
cwtl
push
dec
add
inc
mov
subb
insb
or
jle
cmp
mov
sbb
addr16
cmp
mov
and
jecxz
jle
adc
jb
mov
sbb
cmp
add
mov
loop
and
mov
mov
add
push
and
xor
xchg
or
mov
adc
or
add
rdpmc
add
add
add
aaa
push
in
or
fdivr
and
scas
nop
je
sub
pop
mov
jae
add
cmp
movsl
xchg
adc
sub
ret
dec
hlt
xor
and
add
mov
jb
push
mov
cmp
das
test
jl
or
xchg
add
cmpsb
outsl
xchg
adc
or
imul
add
sub
cmc
outsb
mov
add
in
ss
xchg
fsub
iret
add
cmp
jle
and
mov
fisubs
cmp
lds
mov
hlt
out
inc
loope
loopne
cmp
in
xor
rolb
leave
gs
sti
cwtl
cmp
add
mov
jb
leave
aad
negl
jge
add
and
test
hlt
xchg
aam
xlat
mov
mulb
dec
push
and
lods
xchg
pusha
sahf
stc
push
xchg
out
fmull
add
js
pop
loop
call
test
add
scas
mov
and
lock
add
fdivs
dec
fisttps
je
adc
gs
dec
adcb
push
dec
shrb
and
iret
jg
mov
pop
xor
rolb
or
stos
pop
inc
cmpsb
jp
add
push
rcr
ljmp
fwait
leave
movsl
out
and
shrb
adc
mov
add
mov
mov
adc
out
movsb
sub
cmp
sbb
data16
xor
or
xchg
jo
xchg
add
call
jmp
outsb
adc
add
sbb
jns
sub
sar
add
jge
les
push
cltd
insb
aad
pusha
addr16
shll
add
stos
ficoml
adc
pop
fmul
xchg
add
xchg
inc
jb
add
aaa
pop
mov
loop
lahf
add
push
cltd
into
and
arpl
push
fmuls
or
enter
cli
jnp
sbbl
push
adc
mov
inc
mov
pop
xchg
sti
jl
add
sahf
in
lcall
stc
jp
in
sub
ds
or
pushf
jle
mov
jns
pusha
xchg
lods
xchg
in
mov
jo
ljmp
jle
aas
mov
pushf
pop
jns
push
fdivs
or
add
in
arpl
xor
mov
clc
out
nop
jnp
cmp
mov
mov
mov
sbb
add
jns
flds
out
add
push
in
ja
loopne,pt
aas
les
sub
movhps
mov
cwtl
sbb
pop
aas
xor
sub
and
repnz
xlat
inc
mov
push
pop
aam
jge
sub
adc
jle
mov
test
pop
nopl
mov
xchg
push
rcll
mov
add
jmp
imul
cwtl
lock
sbb
pop
loopne
inc
add
aaa
pop
aam
into
cmp
inc
add
cli
out
int3
out
movsb
add
add
xchg
push
cmp
xchg
jo
ret
arpl
in
fwait
xchg
adc
pusha
out
in
idivl
aad
add
mov
push
add
or
insb
adc
jnp
and
push
and
cltd
loop
lds
fisubl
xor
ficomps
mov
mov
sub
xchg
and
mov
scas
or
push
or
popf
and
sbb
cwtl
sub
fdivs
sub
adc
xorb
fimull
popa
test
or
pusha
pusha
popf
pop
je
shlb
jp
aas
je
je
adc
adc
push
lcall
or
jnp
imul
add
clc
mov
pop
loope
push
add
shrd
sub
cmp
testb
lcall
jo
mov
cmp
add
mov
pop
add
sub
pop
sbbb
sub
sub
mov
ljmp
pop
sbb
ljmp
dec
loopne
faddl
add
or
fistpll
das
adc
je
mov
push
movsl
scas
aam
mov
and
jecxz
out
in
inc
mov
rcl
or
shlb
add
stos
push
inc
aas
bnd
mov
cmpsl
gs
or
xor
das
sbb
fs
xchg
mov
cmpsl
sub
adc
jbe
and
xchg
das
mov
mov
push
in
mov
inc
pop
mov
fiaddl
lods
nop
mov
cmp
cmp
inc
xchg
aaa
xor
fwait
mov
adc
xchg
push
jl
repz
test
or
aas
lret
roll
stos
push
jae
or
ds
xlat
lods
cli
subb
sbb
addl
sbb
movl
sub
mov
imul
icebp
pop
aad
inc
repz
sub
mov
xor
out
call
mov
adc
add
fnstsw
cmp
mov
cmp
jmp
lock
popa
or
arpl
fsubrp
add
pop
or
sbb
out
scas
stos
xlat
lock
add
stos
pop
pop
inc
in
call
pop
lret
push
push
fnsetpm(287
fists
hlt
and
inc
imul
es
push
loopne
fs
xchg
dec
out
and
enter
xor
or
in
shrb
insb
shlb
nop
pushf
cmp
add
cli
add
out
inc
jb
cmpl
xor
xchg
out
pop
sub
mov
sbb
shll
bound
jnp
xor
dec
xor
or
inc
cld
js
pop
push
xchg
cmpsl
mov
adc
add
and
fwait
or
and
stos
mov
dec
xlat
sbb
loopne
adc
insb
xor
orb
cmpsb
and
jecxz
lds
cwtl
mov
fsubrl
cmp
adc
shl
dec
mov
sbb
jo
enter
or
mov
mov
add
adc
and
or
test
sbb
and
xlat
push
cmp
je
and
cld
lods
scas
cmp
out
add
dec
es
sbb
cmp
fsubrs
enter
andb
ret
fsts
dec
and
xchg
addb
in
add
jl
and
in
xlat
pop
add
jmp
insb
insl
jb
lret
dec
or
add
or
insb
mov
sbb
test
add
xchg
cmp
pusha
dec
jge
add
int
ja
aam
test
jo
sub
lods
sbb
jp
das
aas
addb
pop
je
scas
fdivrs
out
xchg
push
xchg
pop
or
icebp
cs
dec
mov
shl
add
add
push
lret
iret
test
rolb
jns
push
and
cli
and
je
mov
mov
pop
lret
loop
push
sub
mov
aaa
cwtl
or
and
add
jno
add
leave
push
test
jp
inc
clc
shrl
jmp
add
mov
push
push
cli
sbb
xor
dec
cmpsl
test
fsubl
sub
and
pop
dec
daa
movsl
or
cmp
mov
and
mov
push
scas
xor
push
and
test
sub
dec
jg
cmp
mov
in
mov
ljmp
movsb
icebp
inc
clc
push
pop
xor
and
pop
xor
rol
imul
xor
sbb
push
sub
ljmp
push
inc
aad
push
insl
xor
cmpsl
adc
ret
mov
test
add
dec
enter
jns
push
mov
cld
loope
sub
das
subb
push
xchg
pusha
or
push
inc
add
or
in
outsl
fistpll
push
sbb
add
and
pop
orb
add
stos
nop
iret
add
jmp
imul
addb
call
push
repz
es
pusha
pop
push
adc
push
pop
lods
leave
sbb
cwtl
add
mov
jle
sub
push
lods
fimuls
loopne
iret
push
adc
or
inc
data16
or
stos
addb
and
xchg
fidivl
stc
scas
mov
add
pop
jle
push
or
lods
jne
shrb
cli
rorl
mov
inc
pop
pop
scas
lcall
sbb
jmp
mov
aam
orb
xorb
add
dec
push
es
mov
call
sbb
cmpsl
inc
clc
mov
es
pop
and
add
push
mov
test
sbb
jno
sbb
les
mov
fwait
dec
push
xchg
pop
and
adc
sub
cmp
mov
int3
sub
les
mov
inc
shr
sbb
cmp
or
mov
les
add
and
enter
std
insb
outsl
jb
jecxz
xchg
loope
xor
mov
push
jno
push
lock
sub
xor
pushf
cwtl
mov
cwtl
dec
stos
mov
push
sbb
lods
sbb
and
adc
xchg
jne
xor
add
es
sbb
cmp
popa
test
jns
das
inc
loope
adc
dec
negb
inc
and
xor
cmp
cmpsb
sub
inc
jp
or
in
xchg
and
xor
push
xor
add
sbb
cmp
or
in
outsl
and
fcoml
scas
cmp
jne
je
add
inc
inc
sub
mov
push
cld
xor
jo
repnz
stc
testb
push
add
cmp
sbb
and
sbb
daa
xchg
mov
and
and
xchg
cld
xor
mulb
stc
push
push
mov
pop
adc
bound
jmp
int
inc
cmp
xor
insb
adc
lret
mov
xorb
insb
rorl
cmp
sbbb
adc
test
xchg
in
sub
adc
push
pop
bound
loop
and
add
jle
nop
jo
push
jl
sbb
lea
hlt
adc
arpl
inc
or
push
mov
xchg
in
jns
ficoml
bound
cmp
negb
adc
sbb
jle
mov
fimull
pop
sub
sbb
nop
jle,pt
test
add
shlb
jecxz
adc
push
and
add
xor
sub
pop
mov
daa
iret
add
stos
lret
mov
cmp
int
mov
adc
mov
xchg
add
inc
dec
mov
testb
inc
je
repz
pop
insb
xchg
aaa
and
cmp
cmp
mov
orb
push
push
sub
sahf
cld
mov
shlb
mov
pop
lock
cld
std
aas
dec
in
pop
adc
cmp
mov
movsl
aam
lods
cwtl
int3
and
js
dec
sub
inc
nop
mov
sbb
push
pop
addb
pop
shlb
lods
ds
adc
mov
add
inc
ret
in
mov
sub
sbb
int
inc
pusha
rcrl
pop
aam
icebp
popa
shlb
add
push
jae
sahf
pop
data16
fadd
xor
mov
xchg
hlt
pop
icebp
es
or
scas
and
adc
xor
call
sar
fadds
stos
int3
adc
nop
inc
sub
add
sub
aad
cmp
xchg
bnd
loope
dec
and
std
pop
add
dec
mov
in
fs
pop
pusha
adc
sub
adc
mov
dec
test
out
mov
ds
test
xchg
sbb
loop
dec
dec
je
xchg
pop
push
test
add
inc
imulb
pop
sbb
mov
inc
mov
sbb
xor
add
fs
lods
mov
pusha
int3
insb
repz
add
outsl
xor
add
push
insb
ja
daa
fsubrs
lock
and
and
mov
add
js
enter
aam
pop
mov
push
and
rorl
mov
incl
je
and
push
adcb
and
loop
aas
scas
sbb
or
sbb
pusha
shlb
add
xor
inc
fcompl
addb
scas
popa
mov
add
mov
and
inc
es
add
test
and
and
fstpl
and
mov
movsl
sbb
inc
inc
jge
ljmp
adc
or
push
scas
jp
fistl
in
sbb
or
sti
out
inc
xor
insb
cmpsl
add
lret
inc
and
mov
xor
jns
mov
and
mov
jae
daa
push
lret
or
cmc
adc
stc
pusha
test
sub
jl
inc
cmpsb
int3
pop
cmp
rcrb
adc
aam
mov
and
add
imulb
xor
sbb
int
pop
and
jecxz
stos
mov
adcl
xchg
in
lea
or
cmc
sub
lea
mov
add
movb
or
std
pop
mov
inc
inc
xor
icebp
test
outsb
add
sub
sbbb
push
inc
jb
imul
sbb
ret
push
mov
into
cmp
stc
cs
and
imul
dec
stos
xchg
cmp
and
ja
icebp
out
or
add
sub
pushf
lcall
imul
test
inc
and
data16
mov
mov
push
cmc
or
je
mov
loopne
fildl
rorb
sub
test
xchg
add
xor
ret
shll
test
fiaddl
jmp
dec
dec
xchg
push
jg
je
jno
adc
push
and
pop
pop
les
add
sub
hlt
fwait
test
cmp
and
cmp
mov
addr16
clc
adc
add
rorb
add
add
add
cmpsb
add
outsl
add
int3
cmpsl
stos
add
arpl
dec
pusha
or
and
add
es
lods
xchg
movd
rcrl
sbb
sahf
into
jge
add
inc
mov
in
inc
cmp
and
icebp
cli
adc
daa
add
xlat
sub
das
mov
jp
and
stc
mov
addr16
jge
pop
sbbb
jae
insb
add
mov
leave
xchg
in
cmp
push
add
adc
push
and
dec
xor
es
push
push
mov
pop
les
xor
jb
add
test
mov
add
popf
call
add
aas
mov
mov
mov
add
clc
adc
add
dec
in
shll
in
add
jnp
cmp
adc
add
outsb
int
inc
ja
jecxz
test
popl
mov
std
mov
imul
push
fstpt
clc
add
xor
daa
jecxz
sarb
mov
int
mov
shll
pop
inc
adc
pop
sbb
loopne
or
pop
mov
dec
add
clc
lret
pop
sub
cmp
dec
jg
and
jl
cs
in
inc
scas
pop
cmpsl
cmp
mov
popf
rcl
mov
fisttps
movsl
mov
jns
mov
pop
divb
mov
add
mov
add
pop
lods
xbegin
mov
sbb
loope
addl
push
stos
and
add
sbb
add
lcall
gs
in
push
std
push
xor
insb
mov
shl
jb
jne
es
inc
addr16
arpl
add
ds
movsb
stos
ret
sub
add
outsb
push
pop
mul
add
mov
nop
out
sbb
iret
std
ja
jecxz
jnp
ds
add
inc
mov
lea
jg
lret
cmp
and
xor
xor
imul
and
dec
mov
out
rolb
push
mov
jno
add
out
push
aad
je
gs
add
xor
and
into
push
xor
add
mov
xchg
in
rolb
mov
outsb
xor
add
push
enter
dec
mov
sahf
add
sub
push
lods
pop
pop
lods
punpcklbw
xor
aad
xchg
jle
add
daa
inc
sub
or
pop
out
mov
adc
and
xchg
sbb
add
adc
js
ljmp
idiv
mov
into
cld
test
mov
enter
dec
mov
test
mov
mov
pop
add
and
inc
pusha
enter
test
mov
std
pop
lods
mov
add
movsl
jno
or
mov
jl
add
jmp
mov
jae
adc
test
pop
xchg
jno
jmp
sbb
pop
fwait
daa
rolb
mov
int
nop
call
xchg
sbb
pop
dec
fsubrs
xor
outsb
js
daa
sbb
aaa
push
xchg
or
arpl
ret
cmpsl
sti
cwtl
test
adc
push
pop
mov
clc
loope
pusha
push
adc
outsl
jl
scas
js
cld
dec
mov
mov
pop
inc
mov
popf
imul
outsl
sbb
int3
rcl
add
loopne
out
dec
sub
dec
cmp
cld
lds
mov
mov
cli
mov
add
imull
push
leave
dec
adc
mov
add
rcl
aam
cmp
add
mov
mov
out
popa
stc
add
and
inc
jne
pop
lcall
and
mov
add
fldenv
add
andl
and
pop
cmpsb
and
sbb
leave
fldl
add
pop
mov
cld
mov
pusha
and
add
pop
cmpl
sti
xor
pop
push
or
out
hlt
adc
ds
jno
or
inc
testl
cmp
movsl
push
mov
or
adc
nop
adc
xchg
add
or
fcomps
dec
test
jmp
sti
clc
ss
dec
cmp
jo
add
hlt
lock
push
fcomps
bswap
mov
mov
add
ss
cmp
das
aad
test
add
jecxz
iret
insl
sahf
pusha
add
jbe
mov
test
add
hlt
xchg
enter
cmp
inc
aas
and
pop
add
adcb
jge
xor
dec
add
inc
push
hlt
mov
or
cmp
fmul
nop
pop
add
mov
sbb
int
pop
popf
cmc
mov
iret
xor
pop
xchg
adc
out
or
adc
pop
mov
daa
idivb
lock
dec
repnz
hlt
mov
xchg
andb
pop
jno
jnp
add
fdivrl
push
or
shl
add
mov
test
pusha
lahf
ljmp
addl
lock
dec
cs
cmp
jg
mov
in
xchg
insl
push
int3
gs
add
jns
add
mov
xor
jo
ljmp
dec
mov
roll
je
lret
push
jns
int
insl
pop
jmp
xor
add
mov
cmpb
or
lret
cld
setp
test
loopne
hlt
mov
ret
fmuls
xchg
in
mov
daa
std
loop
mov
cmp
add
push
scas
fpatan
mov
ds
subb
stos
add
push
cmp
push
adc
dec
test
add
aam
cs
sbb
push
and
pop
add
cmp
cmp
adc
aas
fcoml
aad
dec
rorb
inc
hlt
aas
and
addl
cmp
out
mov
aas
pop
lcall
fisubrs
shlb
mov
lahf
cld
jmp
or
sub
sub
adc
pop
cmp
andl
shlb
fiadds
les
adc
add
mov
or
sahf
push
and
pop
mov
loop
sub
add
mov
jge
jg
add
cwtl
sti
dec
xor
pop
add
jmp
sbb
jno
jnp
or
pop
test
mull
push
pop
xchg
jge
push
push
adc
and
mov
add
out
mov
mov
sbb
sti
lret
or
push
xchg
loop
sub
test
jge
add
sub
adc
enter
movd
add
pop
loop
fs
sbb
xchg
mov
cmp
mov
inc
enter
add
cld
push
jecxz
call
pop
gs
inc
add
sub
mov
fsubrs
sbb
mulb
sbb
mov
scas
loop
pop
fdivrs
stos
mov
mov
jecxz
out
mov
outsl
mov
lcall
mov
jae
push
pop
sti
jno
test
std
nop
mov
ja
dec
in
or
jo
call
jg
mov
faddl
out
iret
adc
les
lds
loopne
fstpt
adc
cltd
cmpsl
fadds
fstpl
in
mov
pop
jp
lret
inc
sahf
add
cmp
xor
or
inc
push
add
xor
add
into
fidivl
sahf
add
xchg
pop
mov
subb
push
loope
add
dec
jmp
out
cwtl
sub
data16
insb
xchg
and
inc
add
push
and
rep
push
or
push
adc
add
jne
xor
lret
inc
pusha
ds
jno
imul
mov
lahf
mov
out
outsl
fstl
or
push
xor
add
fldt
jnp
fstps
fdiv
and
add
jns
pop
push
add
das
or
cmp
or
sub
add
jno
ret
inc
jne
pusha
jb
gs
lods
cmpb
aad
xor
xor
sub
rol
stc
xor
mov
push
add
lock
dec
push
adc
xchg
cs
ffree
aam
pop
mov
sub
rolb
clc
fisubrl
pop
mov
add
scas
js
push
jbe
xor
add
lret
jnp
cld
ltr
fnstsw
ljmp
pop
push
push
fistpl
pop
cmp
jne
aam
out
sbb
test
inc
repz
scas
push
mov
adc
add
insl
pop
je
leave
cli
add
divb
or
scas
pop
adc
cld
xor
sbb
adc
pop
das
cmp
shll
popa
sbb
pop
sbb
insl
or
add
lods
cli
mov
icebp
scas
rcll
movsl
or
push
sahf
adc
imul
hlt
add
je
test
addr16
iret
fcom
inc
into
add
xor
cmp
add
and
add
mov
stos
cmp
js
outsl
ja
mov
notl
ret
je
add
test
add
loop
xorb
lcall
out
in
shlb
cmp
mov
icebp
orb
sbb
mov
adc
mov
xor
ljmp
dec
xchg
hlt
shrb
ret
inc
mov
xor
lods
cld
cmp
jno
jmp
add
lods
pop
mov
adc
push
insb
xchg
mov
mov
push
fimull
das
orb
stos
adc
std
sub
cli
cmp
xchg
xchg
pop
iret
mov
lret
test
subl
xor
cmpsb
adc
push
mov
shrl
push
push
cli
sarb
xchg
addr16
jo
addb
xchg
mov
jbe
lea
mov
mov
mov
sbb
adc
push
shll
and
mov
imull
std
jle
xchg
fnstsw
dec
in
jnp
in
int3
test
add
cmpsl
dec
push
dec
adc
adc
mov
pop
aaa
incl
fwait
cmp
cs
popa
enter
push
insl
mov
adc
or
push
test
test
add
dec
lea
out
fs
movsb
shl
fdivrp
shlb
pop
adc
cmp
xchg
lcall
rorl
pop
add
push
iret
and
add
fildl
aaa
lock
clc
mov
or
sbb
incl
add
pop
inc
cwtl
add
jae
push
imul
inc
stc
add
enter
sbb
pop
mov
dec
push
xchg
add
inc
enter
add
xorb
pop
lods
in
out
jecxz
push
mov
mov
push
mov
and
mov
mov
aam
enter
lret
mov
jne
mov
cmpl
ret
push
sbb
adc
jns
setnp
fidivs
add
xor
pusha
pop
cmp
or
add
out
mov
and
adc
pop
ret
jbe
mov
push
and
sbbl
mov
sub
in
adc
xchg
icebp
or
sbb
or
shlb
in
adc
push
repz
enter
jo
repnz
repz
test
add
adc
xor
sbb
jo
sbb
add
dec
xchg
iret
add
mov
mov
push
fldcw
sbb
sub
stc
cltd
rclb
sarb
rorl
lret
inc
data16
movl
cmpl
add
call
xchg
int
mov
js
pusha
nop
filds
imul
dec
lods
popf
push
int
cmp
ds
dec
aas
cltd
add
cmp
outsl
test
add
fidivrs
sub
mov
test
rclb
stos
dec
loop
cmp
mov
inc
ds
rcl
sbb
leave
add
and
lret
push
sub
filds
xor
inc
repz
in
pop
cmovo
inc
ss
adc
push
aad
call
cmpsb
inc
xor
iret
adc
cmc
jg
popf
stc
mov
sub
xchg
jmp
and
sbb
xor
in
cmp
jb
dec
ret
pop
xor
je
push
out
enter
cmpsl
add
sub
std
subb
jno
outsl
add
jo
cld
push
add
ret
and
cmp
pop
add
inc
add
ss
movsl
pushf
fadds
mov
js
mov
sub
pop
push
orb
cmpsb
lods
adc
sub
xchg
mov
ret
sbb
mov
fistps
add
aaa
int3
push
push
ds
out
inc
push
aad
push
add
dec
test
inc
add
pusha
mov
inc
add
aam
movsb
add
repnz
adcl
or
mov
movl
mov
lea
repz
lock
mov
out
sahf
mov
ficompl
aam
jne
or
mov
test
imul
mov
rclb
jo
xlat
push
xchg
test
add
push
inc
stos
dec
fwait
or
cwtl
out
inc
fcoml
pop
mov
sahf
sbb
xor
outsl
adc
mov
and
mov
mov
int3
out
arpl
fldl
push
mov
pop
enter
push
pop
cmp
inc
out
push
mov
add
pop
enter
and
jbe
cmp
scas
add
nop
lahf
mov
add
or
add
pusha
add
adc
in
or
push
pusha
dec
adc
mov
jp
icebp
xchg
push
add
inc
jl
negb
jne
add
or
inc
mov
sahf
or
add
movsb
iret
push
dec
aam
cmp
add
inc
xor
sub
push
insb
mov
or
and
rcrb
mov
clc
adc
fmull
mov
shl
cwtl
xlat
leave
add
mov
rolb
or
sbb
mov
jle
add
or
adc
push
sub
adc
push
inc
lock
cmp
addr16
mov
nop
aam
mov
pop
out
mov
add
mov
xor
cwtl
jle
leave
in
push
add
cmp
inc
adc
ret
lea
stos
mov
cmp
stos
xor
lock
add
add
imul
out
mov
add
sti
shrb
mov
movsl
push
enter
or
jmp
or
add
ds
sarb
stos
fwait
in
loop
shlb
lret
jne
push
inc
bound
mov
and
out
mov
ds
and
movsb
outsl
cmp
gs
je
jge
out
subb
into
push
xor
or
and
pop
xorl
call
and
jns
pop
add
inc
mov
adc
adcl
push
loop
out
and
je
in
or
fsts
add
repz
add
sbb
cmp
aad
inc
ltr
xlat
rcll
dec
dec
push
adc
pusha
xor
out
or
mov
dec
repnz
nop
cmpb
and
enter
cmp
sub
xchg
xchg
mov
shl
je
push
lds
lods
mov
push
fisubrl
mov
mov
lret
push
fisubrl
int3
dec
and
loope
into
add
ljmp
pushf
adc
xchg
and
mov
dec
add
sbb
cwtl
jne
or
add
push
scas
in
js
add
ficoml
fyl2x
add
sbb
fisubrs
ds
or
pusha
test
pushf
dec
mov
jb
stc
inc
cmp
je
add
fmuls
mov
clc
push
pop
inc
adc
lret
sbb
insb
push
mov
adc
inc
mov
or
lret
adc
add
ljmp
dec
pop
nop
pop
pusha
lea
add
add
cmp
jne
cld
mov
cmp
aad
sbb
andb
xor
into
hlt
add
and
aas
xchg
push
cmp
and
and
push
or
rcl
shlb
jb
leave
jecxz
aas
mov
out
cmpsb
add
dec
cmp
xchg
jo
push
push
xchg
shrl
pop
mov
inc
mov
lret
and
rorb
lea
mov
aad
and
dec
add
lods
lock
cmpsb
cmc
add
jg
pop
seto
imul
pop
dec
in
rcr
lcall
mov
pop
ret
add
sbb
push
add
cmp
es
pop
sub
push
movsl
push
jno
outsb
and
sarb
imul
sub
cmp
add
frstor
add
dec
inc
mov
pop
jle
js
push
cmpsb
lret
cmp
popf
add
push
fcmovne
jbe
lds
test
repnz
cli
or
adc
or
and
mov
xchg
hlt
sub
inc
cmp
add
lea
add
rcrb
in
shlb
and
iret
stos
cs
sub
out
test
lock
sub
adc
push
lahf
xchg
aas
add
icebp
pop
leave
cmp
sbb
stos
push
sbb
jo
add
mov
inc
in
mov
cwtl
das
lock
and
inc
aam
push
cmpsb
push
pop
mov
add
mov
add
shrb
mov
adcb
lock
sub
jns
sahf
mov
sub
mov
sub
add
daa
lldt
cs
add
or
repnz
std
xchg
int
inc
ljmp
mov
inc
add
and
psllq
add
fucomi
stc
addl
push
push
mov
js
std
cmp
je
add
pop
pop
jne
push
imul
test
sbb
pop
cmpsl
inc
add
cmp
xchg
mov
lock
int3
adc
add
mov
cmp
repnz
and
fs
mov
or
inc
mov
pop
scas
sbb
xlat
fstpl
mov
cld
sbb
shrb
add
in
pop
lcall
stos
dec
loopne
dec
movsl
sbb
sysret
inc
inc
jns
and
add
imul
daa
push
inc
mov
cmp
subb
inc
push
and
add
in
xchg
adc
push
and
add
mov
xchg
add
decl
dec
sbb
and
out
xor
out
imul
lahf
adc
or
and
pop
jno
dec
inc
xchg
mov
push
enter
mov
icebp
push
in
sbb
dec
loopne
popf
cs
shrb
pushf
lods
subb
fwait
cmpsb
sbb
add
int
and
dec
sub
jbe
add
pop
push
loop
addb
pop
pop
shlb
adc
adc
fwait
mov
pop
loopne
orb
std
xor
cli
mov
ret
inc
movsb
cmp
icebp
imul
loopne
shr
add
lea
lret
push
add
pop
ja
ltr
ljmp
stc
pop
fwait
add
sbb
movb
aad
jae
ss
and
push
out
push
daa
and
add
clc
lds
cmp
cli
jb
pop
pop
sbb
inc
mov
pushf
add
push
mov
or
jge
jmp
sub
mov
loop
mov
dec
cmovl
adc
push
cli
ss
add
cmc
std
push
add
lods
pop
push
add
jmp
aam
fnstcw
js
aad
dec
xor
sbb
add
xor
and
pop
mov
push
mov
fdivrs
mov
jb
sbb
sub
in
fistpll
cmp
icebp
push
out
ljmp
repnz
sub
jbe
movsl
pushf
pop
cwtl
int
ret
sbb
fisttpll
lock
std
insb
ja
in
add
or
pop
shll
mov
or
sub
ret
push
or
mov
sub
outsl
mov
cmp
fldl
std
scas
adc
jb
stos
push
add
add
fmull
sti
data16
pop
mov
aam
pop
int
add
mov
mov
mov
loopne
das
mov
xor
mov
rcll
xchg
xchg
pop
call
ret
jecxz
fists
mov
add
mov
fisubrl
ljmp
jb
or
test
add
pop
shlb
sub
mov
push
pop
add
outsl
mov
pop
sbb
test
jmp
fists
repnz
aas
int
inc
in
mov
add
mov
clc
test
cmc
inc
adc
xchg
cmp
xor
add
cmp
pop
mov
cltd
inc
mov
cmp
aad
mov
test
xchg
rolb
add
loope
jnp
cmp
gs
add
dec
aas
mov
addl
pop
ret
adcb
ss
imul
pop
jmp
sub
sbb
int
and
mov
fwait
js
jns
arpl
push
out
dec
dec
lahf
jns
sbb
sahf
jno
hlt
fldcw
rcr
mov
std
add
idivl
adc
cli
popf
mov
icebp
xchg
aaa
lock
sahf
sub
or
dec
idiv
jns
daa
mov
mov
add
repz
pop
inc
mov
sqrtps
mov
les
and
xchg
adc
hlt
inc
fs
lret
mov
int3
subb
jl
cmp
stos
mov
xor
add
das
or
xchg
lcall
cmc
inc
push
nop
push
mov
test
xlat
xchg
or
stc
mov
ljmp
push
push
les
out
push
sbb
xlat
mov
mov
and
mov
fwait
mov
mov
jge
sbb
mov
shll
xor
xorb
mov
bswap
repz
pusha
popf
push
xor
cwtl
add
push
pushf
into
mov
enter
scas
loop
aas
add
xor
jmp
or
sbb
roll
add
lahf
test
xor
jo
jne
ror
add
pop
push
cmp
adc
lret
push
pop
adc
rolb
imul
and
mov
insl
sbb
add
fxch
push
add
out
inc
sbb
adc
pushf
mov
in
fidivrs
pop
loope
repnz
mov
cmpb
xor
cmp
movl
mov
jae
cld
lahf
sbb
or
and
adc
push
jge
or
xor
pop
push
fstpl
gs
imul
div
rcrl
jb
sbb
cmp
je
pop
jp
out
clc
and
popa
push
call
mov
cmp
push
fiadds
add
sub
das
iret
imull
or
sbb
add
xchg
int3
lahf
jns
mov
add
hlt
sti
in
adc
jg
rcrl
cmp
and
negb
dec
add
in
add
mov
fcomps
push
or
movsl
cmp
repz
jp
xchg
inc
cmp
scas
add
cmp
sub
ss
stos
pop
push
movsl
sbb
incl
cwtl
cltd
sub
adcl
mov
lea
xchg
cmp
inc
push
push
cmp
add
mov
lret
sbb
cmp
add
add
pop
sub
fs
lahf
xchg
test
dec
lret
cwtl
mov
add
pop
popa
addb
std
clc
in
repz
pushf
xor
sub
fwait
jb
push
and
sbb
ret
sbb
inc
mov
mov
add
iret
aas
mov
fdivr
bound
add
sqrtps
dec
daa
mov
scas
ja
filds
fsub
clc
call
add
mov
lods
mov
fsubr
add
daa
sahf
add
dec
sub
test
jmp
pop
lahf
insb
ret
subb
push
sbb
jge
cld
add
mov
lcallw
sbb
mov
cmp
sub
mov
jae
sub
mov
add
rorb
repnz
dec
fdivp
add
push
imul
dec
mov
into
push
cmp
or
mov
or
and
sahf
xchg
add
mov
xor
js
pop
mov
movsl
jb
and
or
sbb
sahf
pop
insb
sbb
jg
push
mov
and
cmp
add
in
shl
movb
jmp
clc
pusha
add
decb
xchg
pop
notl
add
fstpl
mov
pop
test
pop
insl
add
lret
adc
loop
popf
sbb
xchg
js
ret
adcl
or
or
push
hlt
ss
insb
leave
adc
adc
xchg
mov
add
lock
dec
and
aad
data16
adc
add
aam
das
or
jl
out
mov
in
into
cmc
add
mov
sbb
jl
mov
pop
push
addb
insb
mov
push
jnp
sub
nop
xlat
scas
mov
clc
mov
add
shrb
loop
add
xchg
sub
jecxz
dec
mov
cli
add
jmp
dec
pushf
inc
aaa
cmp
andb
into
dec
adc
push
xor
cli
add
push
cmp
push
scas
adc
fdivl
test
loop
lds
push
dec
jne
lcall
mov
subl
push
mov
add
movsb
test
mov
nop
stos
and
popf
ss
scas
dec
add
and
movsb
lds
scas
xchg
fs
int
mov
lods
lahf
pop
into
pop
faddl
addr16
neg
inc
fwait
jnp
add
je
jl
into
add
xor
mov
loop
push
or
aam
gs
out
xchg
jl
sbb
dec
insl
add
push
and
hlt
jnp
push
rcrl
addl
or
mov
xchg
sub
in
ds
and
test
xchg
subb
gs
mov
fcoml
ret
inc
mov
push
pop
sub
cmp
pop
jb
sti
add
inc
mov
cs
shlb
sbb
xchg
inc
lods
pushf
add
ja
movsb
in
mov
add
mov
jmp
sub
xchg
add
add
xchg
pop
adc
cmovo
xchg
popf
add
gs
xor
xchg
sbb
test
insb
pop
enter
xchg
xor
inc
pusha
add
pop
sub
mov
push
pop
ret
fsubr
or
cmp
adcb
out
and
pop
fists
dec
cmpsb
clc
add
jbe
rcrl
push
cli
push
and
sbb
xor
mov
dec
sbbl
lcall
clc
sub
push
inc
lods
shlb
dec
ret
repnz
outsl
gs
lock
xchg
add
cmpsl
mov
addb
insl
jecxz
adc
dec
mov
cli
repnz
mov
add
scas
mov
add
push
sbb
push
push
pushf
mov
xchg
sbb
add
pop
ret
jg
leave
popa
cmp
mov
cmp
mov
cli
or
js
pop
xor
add
sub
fadds
mov
dec
mov
mov
cs
add
ljmp
mov
sti
cmp
mov
jge
jmp
xchg
cs
mov
sub
daa
add
js
and
subb
mov
xchg
sub
mov
add
call
push
subl
ror
jecxz
out
add
test
scas
mov
lock
loop
add
stc
add
in
cwtl
ficoml
les
mov
rcrb
add
insl
test
loopne
push
in
je
pushf
or
mov
cmp
sub
iret
ss
jmp
jnp
nop
out
sub
inc
push
add
lret
imul
sub
out
xlat
pop
jg
add
pop
out
pop
leave
lret
and
daa
add
push
xchg
icebp
add
mov
sub
pop
pop
xchg
je
push
adc
into
adc
push
out
add
cmpsl
ljmp
add
pop
dec
and
xor
pop
cmc
test
add
test
shl
add
ja
out
add
or
loopne
lods
test
icebp
add
fldl
mov
mov
ja
inc
sub
nop
ljmp
adc
shll
add
test
outsl
dec
mov
mov
cwtl
hlt
nop
int
les
push
out
stos
inc
mov
js
out
mov
fcomps
add
mov
cli
repz
rclb
ret
mov
cwtl
in
add
inc
xchg
xchg
dec
xchg
insb
add
inc
out
mov
loopne
addr16
adc
shlb
fcompl
mov
mov
add
and
aam
loopne
add
add
adc
test
add
stos
cmp
hlt
push
out
push
pop
mov
mov
pop
mov
in
repnz
dec
adc
xor
xchg
dec
lock
add
inc
push
cmp
movsl
add
xchg
inc
sahf
decb
adc
loopne
dec
or
fistps
jecxz
jb
cmpl
xbegin
xorb
adc
lret
add
mov
jp
add
cltd
sbb
mov
loopne
sbb
fninit
cmc
int3
dec
jo
ret
pop
fcmovu
xchg
mov
std
test
sbb
push
cmp
mov
gs
add
sub
mov
mov
mov
mov
or
scas
add
add
fisubrl
cmp
add
mov
adc
dec
sbb
jmp
lcall
movntq
aas
xorb
ret
xor
xchg
add
cltd
int
js
cmp
in
xorb
mov
sahf
popf
loop
and
sbb
push
push
xchg
or
rolb
in
loope
mov
mov
add
pushf
fiadds
fdivs
jmp
sbb
mov
xlat
dec
push
jo
cmp
inc
andb
dec
add
cld
mov
icebp
push
push
leave
inc
and
dec
add
pushf
add
pop
jmp
push
add
incl
in
or
gs
outsb
shll
hlt
mov
add
fldl
imul
jmp
add
inc
push
je
jg
add
jbe
into
add
mov
arpl
orb
sub
movsl
xchg
test
or
dec
add
nop
xchg
fs
jecxz
inc
push
add
dec
repz
shlb
aam
lea
pop
aaa
pop
mov
mov
dec
in
add
jl
dec
sbb
ret
dec
popf
addl
add
dec
mov
aam
das
inc
lods
repz
dec
scas
fwait
add
fimull
mov
mov
pop
outsb
add
lret
test
mov
inc
subb
mov
xchg
sub
lahf
hlt
cmp
jo
push
stc
fwait
inc
mov
jl
pop
add
pop
stos
or
out
cmp
pop
or
pop
subb
add
inc
lret
xor
add
iret
cmp
mov
leave
sbb
xchg
or
xor
add
pop
jno
scas
xor
adc
cmp
inc
sarb
and
js
test
push
jg
adc
add
push
cli
call
cmp
sbbl
lods
dec
outsl
out
add
ja
jo
js
xorl
mov
add
sub
push
es
mov
mov
dec
push
repnz
les
jne
ret
lret
pushf
mov
loopne
add
fdivrs
cld
xor
adc
outsl
add
jb
or
aaa
test
cli
leave
cmc
shrl
add
hlt
sbb
pop
mov
daa
ja
push
xorl
xlat
add
inc
enter
mov
rolb
sbb
jno
fadds
gs
sbb
aas
inc
cli
andl
addb
cmp
test
imul
pusha
push
pop
incb
mov
loopne
xor
add
adc
fs
add
fnstcw
add
into
mov
mov
aas
add
inc
mov
addr16
adc
pcmpeqw
mov
sbb
mov
cmpb
cld
push
ds
xor
add
or
out
aam
ret
out
push
xchg
xor
dec
jmp
or
add
out
inc
rcrb
sub
aaa
ficompl
dec
add
jl
add
pop
sub
xchg
dec
sub
aaa
xlat
mov
or
adc
jns
cmpsb
decl
sub
sbb
jmp
cwtl
add
or
clc
cmc
mov
lock
or
sub
add
insl
dec
ds
mov
imul
sbb
add
pop
mov
fwait
lods
mov
inc
in
or
dec
cwtl
pushf
add
pop
pop
push
mov
outsb
into
cwtl
lods
ds
adcb
scas
add
repnz
add
xchg
add
popf
push
lock
jno
ret
xchg
das
clc
add
xor
pop
or
invd
add
push
dec
je
inc
xor
mov
clc
ret
cmp
sahf
fwait
cmc
mov
outsl
add
add
loope
daa
mov
andb
sahf
xlat
ret
or
fs
rcrl
or
inc
mov
sub
pop
ret
jle
rol
xor
jae
mov
sub
adc
and
xor
xor
test
ficompl
pop
fcoms
xchg
nop
das
jbe
aaa
or
mov
loopne
push
cmp
rolb
add
and
mov
and
call
in
pushf
andl
push
das
cltd
xchg
popl
push
enter
add
inc
mov
adc
loopne
sbb
xor
orb
fwait
sbb
sbb
arpl
xchg
xor
fstpl
movl
call
aam
sbb
dec
popa
mov
xchg
mov
mov
push
sarl
adc
xchg
add
aam
je
in
mov
dec
add
sbb
xchg
inc
add
push
adc
test
daa
cltd
jle
cmp
adc
jo
push
or
call
lahf
xor
icebp
incb
push
dec
xchg
std
cltd
test
push
push
push
fstl
mov
cmpsb
jo
test
or
push
dec
out
xor
mov
xor
faddl
adc
jmp
xor
inc
scas
add
int
ljmp
jmp
leave
xchg
adc
add
push
popa
push
pusha
loopne
cmp
stos
test
or
int3
sub
daa
pushf
mov
inc
icebp
outsl
jae
movsl
add
push
add
fdivrl
push
icebp
dec
mov
mov
xor
ljmp
andb
fiaddl
mov
jnp
mov
mov
cmpsb
rcr
adc
lahf
jb
aas
enter
data16
dec
mov
icebp
repz
cld
add
xchg
test
lahf
adc
mov
adc
or
mov
xchg
ficoms
sbb
fstps
arpl
add
mov
xchg
cs
pusha
sahf
jmp
cs
push
xor
lret
add
pop
bound
sbb
or
rclb
add
xchg
or
mov
jb
pop
sbb
cmc
aaa
pop
in
add
repnz
and
scas
or
idiv
xor
aaa
push
sub
sub
pushf
loop
cli
mov
mov
push
mov
mov
ret
inc
in
scas
rclb
shll
cmpb
daa
xchg
mov
fwait
push
sahf
mov
push
ljmp
clc
add
xchg
loop
lret
cmp
sbb
movsl
dec
je
repnz
jnp
lcall
lahf
stos
clc
js
mov
add
in
mov
pop
jmp
cld
pop
push
xor
rol
jno
sbb
mov
xor
xchg
push
inc
bound
or
fdivrl
jne
cli
stos
xchg
out
pop
sbb
dec
sarl
add
jle
adc
mov
push
ja
push
adc
mov
push
ljmp
movsl
dec
mov
add
clc
fidivrs
adc
cs
sub
stos
adc
sub
mov
ret
mov
jno
jnp
cmp
test
arpl
clc
insl
sbb
ficoml
or
cmp
les
out
loope
icebp
mov
xor
and
ljmp
loopne
int3
or
mov
gs
inc
add
in
xlat
out
xor
mov
sub
mov
rolb
add
hlt
mov
lds
and
aad
mov
rolb
add
daa
xor
bound
movsb
mov
adc
adcb
shrl
fldl
xchg
add
mov
movsl
adc
add
or
ljmp
adc
pushf
add
pop
sbb
loop
clc
sub
jl
in
jle
mov
call
xor
iret
cmp
mov
pushf
add
stos
dec
jl
outsl
sbb
mov
ja
dec
add
pop
je
or
idiv
int
pushf
add
lods
or
mov
jns
cmp
data16
sbb
shrb
jno
or
sbbl
mov
push
sbb
mov
addr16
cs
cmp
filds
jmp
roll
fnstenv
testl
push
cmp
and
loopne
push
mov
jne
cmpsb
adc
push
jle
sbb
sbb
andb
add
sti
cmpsb
push
into
xchg
sub
mov
call
sbb
or
xor
add
mov
xchg
cmpsb
xchg
cli
mov
sbb
outsl
push
flds
pop
sahf
out
and
add
scas
mov
xor
cmp
xchg
imul
mov
jns
cli
in
test
xlat
in
add
scas
cmpsl
fadd
scas
xor
sub
movsb
adc
cmp
mov
adc
sbb
dec
add
sub
mov
xchg
sbbb
rolb
add
sub
sbb
cmpb
lret
cld
jo
andb
mov
mov
sbbl
sti
add
xor
call
inc
test
add
pop
shl
mov
xor
add
lret
lcall
sub
mov
jp
add
negb
add
imul
jp
cmp
jnp
or
pmulhuw
add
cs
imul
loope
cwtl
xor
scas
fstps
cmp
movsb
inc
test
xchg
adc
cmc
jg
sbb
in
pop
imul
and
into
jmp
mov
test
scas
daa
mov
inc
es
call
add
push
shl
dec
mov
and
mov
sub
pop
into
sub
addb
and
pop
mulb
add
push
ficomps
push
mov
fstps
repnz
sub
scas
scas
dec
mov
andl
fwait
into
out
push
mov
sub
add
iret
dec
mov
pusha
ss
or
imul
scas
mull
cmp
cmp
add
add
loope
push
in
xchg
add
int
imul
and
pusha
xor
or
adc
cmp
lea
and
je
xchg
add
mov
mov
adc
or
adc
insl
xlat
xor
add
jmp
inc
sbbl
xor
sbb
xchg
lret
mov
mov
popa
xchg
leave
jp
repnz
rclb
bound
pusha
mov
fiadds
mov
pusha
xchg
cwtl
mov
pusha
nop
inc
hlt
mov
mov
cltd
leave
in
scas
and
dec
jecxz
adc
pop
and
cld
and
or
and
mov
movsb
out
add
inc
aaa
xor
jg
loope
push
ja
or
pop
gs
cli
and
xor
mov
shlb
enter
sbb
mov
stos
es
mov
add
push
inc
mov
pop
cmpsb
out
ret
dec
sbb
mov
adc
mov
and
scas
mov
orl
cmp
cmc
sbb
std
ret
sarb
inc
pop
in
mov
sbbb
jg
cs
sbb
add
fstpt
lock
inc
mov
sahf
adc
jb
in
and
imul
mov
dec
add
std
mov
dec
mov
aaa
add
sub
test
xor
or
adc
add
add
leave
inc
mov
jae
insl
add
inc
ret
adc
mov
dec
cmpsl
mov
push
mov
mov
scas
push
push
xor
leave
cmp
fistpll
mov
je
loop
jnp
mov
cmp
jle
icebp
sub
adc
pusha
add
mov
pop
cs
xchg
insl
adc
ss
jecxz
add
aas
xchg
rcll
dec
popa
or
inc
testb
cmp
mov
add
sbb
add
loop
sbb
or
es
das
psrld
mov
test
push
mov
daa
out
sub
push
movsb
and
push
inc
push
sbb
mov
enter
movsl
sub
or
fs
addr16
mov
repnz
mov
clc
and
push
jle
add
scas
push
ljmp
enter
xorl
add
in
jl
mov
adc
inc
mov
push
add
fisttps
clc
sub
testb
adc
mov
jbe
dec
push
mov
stc
cmp
subl
cwtl
push
mov
test
insb
push
xchg
push
add
adc
imul
cld
ret
and
pop
test
inc
add
fists
xor
adc
hlt
rorb
add
cwtl
and
orl
pop
xorb
lods
add
enter
test
test
push
fmul
and
dec
scas
test
movsl
roll
push
faddl
and
xchg
xchg
pop
pop
daa
mov
jp
rcr
xor
mulb
ret
or
sarb
cltd
ror
or
dec
out
xor
add
cltd
sahf
adc
push
scas
mov
push
jl
add
pop
mov
pop
mov
and
and
xor
dec
or
jb,pt
or
or
inc
andb
addl
mov
xor
jmp
in
dec
xchg
mov
js
xor
mov
sbb
sahf
out
jl
mov
fdivrl
test
xchg
cmp
inc
in
add
cwtl
ret
mov
js
fsubl
jg
rclb
loop
adc
aas
or
mov
dec
mov
and
sar
dec
mov
pop
sbb
pop
testb
mov
das
nop
mov
mov
inc
jno
pusha
pop
ret
shl
and
adc
lods
xor
push
lcall
lcall
dec
adc
jg
or
mov
call
sbbb
push
dec
adc
das
fs
roll
aad
or
idivb
sahf
xor
punpckhdq
mov
cmp
add
jb
imul
mov
push
inc
cld
dec
repnz
cmp
scas
rol
xor
lret
xchg
push
in
arpl
jge
scas
idivl
pop
lahf
pop
or
adc
popf
nop
sbb
add
insb
rorb
adcl
or
nop
pusha
cmp
negb
outsb
cmp
adc
lds
mov
out
xchg
mov
cmp
mov
mov
idivb
sbb
loope
sarb
push
cmp
mov
cmp
mov
jle
add
jp
frstor
add
les
xchg
cwtl
hlt
add
lcall
test
rcrb
sbb
adc
mov
andb
dec
mov
pusha
orl
dec
je
mov
mov
add
lret
fdivrs
fbld
test
dec
leave
sub
add
cli
cwtl
jo
flds
jg
mov
in
inc
movsl
rorb
or
sbb
addb
pusha
inc
es
mov
fistps
pop
out
das
and
into
rcrb
sbb
dec
adc
mov
dec
mov
push
lods
jno
mov
inc
fistpll
sub
and
iret
cmp
sbb
mov
sbb
pop
jbe
cmp
xor
add
xchg
xchg
leave
cmp
test
scas
and
daa
imul
mov
dec
gs
sbb
push
cmpsl
xchg
and
enter
jae
or
and
out
divl
mov
and
jg
mov
jmp
dec
repz
add
lock
pop
dec
add
cmp
pop
push
jg
or
dec
xor
sbb
addb
xchg
dec
push
adc
enter
sti
das
push
mov
dec
and
push
pop
fmul
clc
jge
push
jnp
hlt
sbbb
popa
arpl
add
int
out
jg
popf
push
mov
hlt
sbb
dec
dec
in
pushf
add
sbb
sub
cwtl
xor
cmp
jne
add
mov
add
cmc
fists
jp
lods
inc
test
stc
xor
add
test
inc
daa
sub
nop
addb
adc
xchg
cmp
push
mov
hlt
les
cmp
test
xlat
pop
in
inc
les
jmp
sarb
sub
or
dec
cmp
scas
push
incb
imul
mov
push
out
add
hlt
imul
aad
inc
pop
pop
add
xlat
cltd
and
xchg
add
mov
dec
imull
and
daa
out
xor
adc
add
inc
inc
mov
movsb
les
cmpsl
frstor
xor
or
sbb
lock
or
leave
cmp
movsl
int3
jo
mov
and
pop
nop
sbb
add
in
gs
loopne
js
aas
dec
stc
push
movsl
cmp
pop
mov
loope
xor
xor
cmp
push
rclb
adc
daa
iret
sahf
and
mov
xchg
jecxz
out
je
add
jmp
mov
mov
and
jge
add
mov
mov
cld
addl
xor
mov
rcrl
inc
sbb
aam
jmp
gs
adc
sbb
pushf
movsb
rolb
push
in
jo
add
xor
sbb
adc
shr
scas
lahf
add
adc
jnp
imul
fsubrl
add
mov
ds
cld
and
and
adc
xchg
push
pushf
add
loop
jg
or
test
add
and
add
inc
and
mov
stos
mov
cmc
push
sub
pop
push
push
dec
rorl
fstpl
mov
loop
pop
push
cmp
add
adcl
scas
and
call
mov
xchg
jp
pop
jne
add
sbbb
pop
push
xchg
jae
addr16
testb
ret
mov
pop
xchg
rorb
or
inc
xchg
xor
rclb
and
mov
xchg
adc
mov
andl
lahf
jl
mov
pop
sahf
add
rolb
add
push
lea
push
incl
cmp
mov
adc
stc
add
push
sbb
jp
sbb
add
pop
jg
and
nop
cmp
add
push
push
in
cwtl
test
iret
popf
cld
sub
adc
stos
add
shrb
sbb
leave
pop
sbb
inc
je
xchg
cs
jp
jl
mov
dec
add
jbe
cs
pusha
cmp
mov
cmp
inc
xchg
add
stc
add
xchg
int3
clc
lret
pop
jg
mov
arpl
mov
int
xchg
dec
push
cmp
aas
xchg
cmp
jns
cmpsb
lret
pushl
ret
mov
cs
xor
inc
mov
into
lcall
pusha
jnp
sar
inc
iret
je
in
xchg
jp
pop
mov
loop
roll
aas
fsubr
int
pop
daa
pop
pop
xchg
outsb
cmp
add
mov
add
sub
jge
add
or
dec
imulb
addr16
add
les
notl
adc
ret
lock
sub
fs
out
les
in
mov
leave
or
call
pop
xchg
les
push
out
xor
or
add
mov
or
pop
sti
mov
out
incb
add
cli
mov
or
mov
sub
punpcklbw
or
enter
gs
in
andb
pop
or
or
add
add
pop
leave
ret
flds
aaa
stos
shrb
or
pusha
sub
add
scas
sbb
xor
mov
cmp
faddl
pop
lock
repnz
cli
mov
mov
test
out
cmovae
aas
push
cli
subl
push
mov
pusha
push
cmp
in
inc
cmp
ljmp
scas
xor
adc
cs
jecxz
add
loop
fidivl
mov
mov
mov
xchg
mov
jbe
test
std
filds
cli
cmc
or
hlt
test
xor
push
ss
out
add
jae
jg
stc
loope
adc
cmpsb
pushf
pop
and
adc
adc
lret
push
or
mov
incl
mov
pusha
mov
or
pop
jmp
pop
cwtl
sahf
aaa
and
push
cmpsl
addb
in
in
dec
add
lods
mov
push
test
movsl
add
pop
mov
pop
popf
fdivl
inc
push
pop
cs
repnz
pop
pushf
ljmp
sbb
lea
lock
push
xchg
and
loop
scas
subl
add
sub
adc
inc
rolb
and
dec
outsb
in
incl
in
and
sbb
call
add
lea
std
aas
je
add
jge
sbbl
mov
aaa
ret
nop
mov
push
xchg
stc
insb
js
mov
popf
dec
jo
jp
xor
push
xor
int3
notb
mov
loop
pushf
xor
out
push
and
pusha
adc
mov
xchg
fnstenv
popa
fldl
push
mov
fcmovnbe
or
clc
shll
popa
add
imul
mov
or
pop
mov
out
pop
xchg
pop
inc
add
pop
sbb
fdivs
or
popa
pop
lea
mov
add
pop
in
aad
test
inc
hlt
shl
rcrl
push
cwtl
stos
stc
adc
popf
in
sub
mov
shlb
std
xchg
ret
out
mov
call
mov
icebp
cmp
xor
jmp
repnz
mov
imul
inc
fcomp
adc
insl
mov
push
lock
mov
cs
punpckhbw
into
icebp
mov
push
mov
mov
pop
mov
pop
data16
or
mov
ljmp
pop
scas
cmpb
adc
mov
add
insl
pop
pushf
aaa
clc
leave
add
add
mov
xchg
adc
call
or
add
xor
int3
call
roll
andb
lret
add
stc
aaa
pop
rol
push
lods
pop
push
sbb
inc
cmpsb
xor
sbb
xor
out
add
inc
iret
roll
mov
sub
inc
pusha
xchg
jle
mov
rcrb
aad
in
add
or
aam
call
shr
cmp
cmp
jmp
cmp
into
jno
or
shlb
mov
ds
pop
pusha
pop
bound
insb
and
fimull
adc
xor
add
or
sub
out
push
jge
dec
fwait
sbb
es
mov
xchg
dec
dec
mov
andb
jbe
rol
mov
int
cmp
sbbl
sbb
popa
sbb
xchg
and
adc
mov
and
xchg
adc
icebp
cmp
sub
rclb
pop
es
in
outsl
mov
or
shll
scas
jnp
mov
jno
jg
sbb
jle
mov
xor
xorl
aaa
rcr
fildll
and
xor
out
inc
sti
cmpsl
mov
add
scas
sbb
sub
xor
mov
add
pushf
mov
pop
dec
xor
jge
sbb
fsubl
aaa
adc
out
jp
push
les
xchg
dec
mov
cmp
addb
mov
lods
and
shl
movsb
cmp
icebp
xlat
and
sub
popa
mov
and
push
pop
mov
jmp
xlat
notb
jnp
push
or
cld
andb
sub
or
test
vmwrite
inc
inc
jecxz
sbb
dec
add
adc
mov
sbb
decb
inc
pop
push
mov
bound
in
mov
cmp
out
fcompl
add
xor
pushf
int3
cld
testl
dec
fmulp
mov
push
fcoml
and
jg
rcl
or
mov
cmp
cli
add
jmp
sub
xor
cmp
inc
pop
out
xchg
lods
or
jle
push
or
aad
push
ret
andb
xor
testl
add
outsb
mov
add
jae
adc
cld
add
pop
push
imul
clc
mov
nop
cmpsb
cmpl
xchg
mov
aas
les
cmp
push
paddusw
jge
add
adc
in
xor
nop
inc
push
cld
daa
or
call
sub
mov
mov
call
mov
bound
add
inc
aad
jae
roll
js
imul
dec
in
pop
rolb
iret
dec
loope
fimull
int3
aam
pusha
arpl
lret
in
add
inc
adc
xor
dec
adc
sub
mov
and
aam
add
inc
es
dec
sub
pusha
push
daa
and
jg
pcmpeqb
and
pop
add
mov
in
sbb
sbb
loopne
out
add
sub
in
xchg
sti
rorl
push
dec
hlt
mov
neg
add
adc
mov
fimull
and
inc
shrb
jp
mov
out
in
in
push
xor
adc
and
or
inc
gs
jne
add
scas
adc
pop
rorb
subb
icebp
dec
add
jmp
mov
aam
dec
addl
data16
xchg
lock
xor
call
xchg
xchg
xor
lock
aad
daa
cmp
gs
mov
imul
and
or
mov
imul
sahf
movsb
or
nop
dec
lcall
ljmp
cmpl
pop
and
xor
int
add
inc
insb
jmp
or
les
xchg
adcb
push
pop
push
jmp
jnp
pop
les
dec
jg
aam
cmpsb
addb
pusha
xchg
inc
out
push
rcll
std
cli
mov
pop
add
xchg
cmpb
add
add
dec
sbbb
scas
or
xorb
cmpsl
fldl
sbb
imul
loopne
incb
psubb
cmpb
lock
inc
insb
xchg
pop
add
icebp
inc
call
daa
pop
cmc
adcb
and
xor
xchg
movsl
dec
xor
fwait
enter
add
push
stos
mov
jnp
pusha
or
sbb
mov
sbb
dec
add
sub
adc
mov
xor
mov
imul
js
and
adc
enter
push
vorpd
scas
add
or
add
dec
push
mov
jnp
test
aas
pop
mov
insb
out
out
jl
aam
mov
pop
xchg
hlt
push
nop
jnp
out
bswap
xorb
push
mov
mov
jp
adc
call
sahf
push
movsl
dec
test
jecxz
mov
lcall
imul
out
xsha256
cmpsb
xchg
pusha
out
jns
inc
xor
dec
inc
sub
add
outsb
in
cmp
jno
or
xchg
inc
mov
pop
mov
sub
mov
cmpsl
add
push
and
push
cmpsl
pop
iret
pop
xchg
adc
or
adc
push
dec
stc
push
add
aam
lods
inc
imul
mov
push
or
cmp
nop
add
inc
cmp
cs
enter
xlat
jo
mov
pop
add
mov
mov
push
add
adc
adc
dec
cmp
les
or
xchg
mov
dec
decl
lods
mov
mov
jnp
lock
mov
add
xor
jecxz
add
jp
jle
out
or
push
shlb
outsb
imull
sub
test
sbb
adc
push
cwtl
mov
sub
nop
mov
jle
mov
xor
xor
sub
or
or
les
nop
aam
inc
add
add
pop
pop
add
fwait
jp
sahf
mov
movsb
mov
xchg
std
and
orl
sti
icebp
mov
push
in
push
cmp
or
popl
test
or
inc
mov
pushf
pop
jmp
mov
js
repnz
push
pop
pusha
mov
xchg
xor
mov
imul
fnstenv
movq
cmpsb
iret
pop
xlat
mov
sbb
cmpsl
ret
data16
add
loope
add
or
movsb
adc
sub
mov
cmp
cmpsl
jp
or
mov
xchg
sti
shlb
xor
cmp
hlt
mov
xor
xor
bound
out
xor
xchg
mov
push
pusha
xchg
bound
xor
pop
dec
jns
sbb
pusha
or
aad
aas
inc
mov
clc
mov
xor
xchg
add
mov
pusha
or
cmpl
mov
add
ja
push
fdivrl
aad
roll
scas
movsl
dec
mov
xlat
repnz
jg
data16
sub
std
xchg
dec
mov
test
data16
jl
cltd
dec
adcb
xchg
push
ljmp
push
cltd
std
jl
adc
add
mov
pop
scas
inc
jecxz
sti
sbb
insl
add
pop
arpl
pushf
mov
test
adc
and
xor
and
mov
xchg
inc
sub
sarb
loopne
mov
adc
or
adc
xor
enter
pop
lret
inc
clc
jg
or
cmpsb
aas
cmpb
inc
scas
ret
add
aaa
out
gs
cs
mov
push
pop
das
mov
loop
jae
loopne
call
les
add
and
hlt
and
mov
sub
mov
push
mov
subb
ret
aam
or
lret
lret
sbbl
aam
cld
mov
pop
inc
mov
mov
in
adc
and
dec
xchg
sbb
int
test
ss
jae
mov
sub
pop
jns
add
sub
and
lods
mov
scas
fmull
push
add
leave
mov
enter
add
test
subl
jne
dec
scas
adc
loope
ror
add
movsb
cmp
jb
les
clc
sub
sbb
inc
and
mov
add
lret
mov
cwtl
idivb
jns
pop
into
mov
scas
mov
out
add
jo
js
jns
push
jge
pop
push
orb
jno
nop
les
mov
iret
ret
add
cmpsl
pusha
mov
mov
aad
push
cmp
in
and
or
add
lea
add
arpl
adc
loopne
adc
pusha
add
out
fnstenv
mov
movsl
sub
add
or
into
loopne
push
xor
mov
sarb
add
js
test
dec
mov
outsl
es
adcl
std
fidivl
add
add
js
sbb
ss
pop
notl
adc
test
cltd
add
xchg
adc
mov
inc
daa
xor
cmp
in
shr
ret
inc
or
xor
les
add
decb
rorb
mov
xor
sub
cltd
jmp
das
jl
orb
mov
add
mov
add
scas
jb
bswap
je
das
mov
mov
popl
xchg
inc
dec
insb
pop
and
sub
data16
cmpsl
inc
add
pop
add
imul
outsl
mov
jb
push
in
jae
pusha
mov
pusha
add
mov
insl
push
shll
fmul
inc
dec
add
mov
xchg
in
rorl
add
pushf
cmp
inc
jle
xchg
and
jge
add
add
jo
and
xor
jp
je
push
cmp
xlat
and
add
dec
das
mov
mov
out
jbe
mov
xchg
sub
pop
filds
and
add
jmp
xchg
sub
cltd
hlt
push
int
jle
add
sbbl
mov
in
out
loope
shlb
add
sbb
xchg
pushf
cmp
sbb
loopne
or
repz
pop
pop
dec
ss
pop
cltd
cld
es
mov
lcall
pusha
pop
test
push
add
mov
jnp
fsubl
mov
lock
xlat
pop
cwtl
shl
data16
ret
pop
lea
pop
push
jmp
sbb
adc
aas
subb
roll
ret
push
mov
push
xchg
psraw
xor
ret
sbb
arpl
rolb
test
lods
loopne
andb
ret
inc
imul
xor
aas
jl
mov
jno
push
std
sub
sub
push
cmp
xchg
or
int3
rorb
or
mov
jo
jb
cld
cmp
sbbb
add
fwait
mov
inc
xor
mov
sub
shll
aaa
arpl
aas
mov
inc
dec
inc
xor
cmp
ds
lock
pushf
popa
cmovle
cmp
inc
dec
bound
add
push
adc
mov
ss
pop
inc
movsb
push
or
inc
mov
neg
mov
adc
jbe
add
leave
fsubrl
inc
push
sub
dec
adc
test
fldcw
mov
xchg
popf
scas
or
out
add
stc
fwait
cltd
add
inc
pop
cmp
jae
and
pop
in
ja
pop
dec
add
dec
lock
jg
add
es
or
inc
sarl
cmp
dec
lea
enter
add
push
mov
or
stos
mov
andb
loop
mov
cmpsb
pushf
dec
push
mov
sub
xchg
mov
adc
pusha
popf
int3
cmpsb
add
xor
pop
cmp
add
pop
shrl
xor
mov
inc
push
inc
arpl
add
adc
xchg
lock
movsl
add
sbb
push
xchg
cli
lret
pusha
rdmsr
xor
mov
leave
ret
xchg
pop
movsb
leave
add
adc
pop
dec
sub
and
pushf
std
add
push
xor
hlt
add
pop
mov
jle
xor
or
loope
or
mov
jns
cld
addr16
xchg
call
syscall
push
pusha
sub
pop
sbb
loopne
out
daa
lea
sub
lock
jne
shll
or
fstps
mov
xor
in
push
call
jb
dec
or
mov
call
shl
adc
je
add
loope
nop
xchg
aam
add
sti
enter
sbb
adc
xchg
push
add
xchg
jns
push
xchg
loopne
das
adc
clc
add
adc
pusha
adc
xor
add
in
cpuid
pop
mov
movsb
sub
pop
add
jmp
push
mov
sbbb
fisubrl
and
xorb
and
sub
call
adc
stos
clc
push
jnp
pop
stos
and
mov
rolb
es
mov
add
scas
add
xor
inc
xor
jb
aam
xchg
mov
adc
dec
mov
sbb
fwait
jle
or
mov
or
cmp
sbb
shrl
push
notb
add
jo
push
rcrb
int
hlt
push
mov
cmp
shl
xorb
popa
mov
movsl
imul
insl
roll
out
ss
out
mov
adc
add
push
jmp
xor
out
imulb
lret
xchg
push
fldl
arpl
fidivrl
ret
je
jle
div
clc
add
in
vpminub
sahf
rolb
or
repnz
aas
or
push
mov
jge
xor
movsb
in
ret
inc
add
sub
pop
adc
ficompl
xor
arpl
pop
fstl
shlb
push
int3
or
add
inc
adc
lods
sub
test
mov
sub
cmpsl
les
adc
test
add
adc
mov
inc
mov
pop
movsb
lret
dec
testb
jecxz
jbe
jo
mov
lahf
mov
inc
call
repnz
add
xchg
xchg
mov
cmp
orl
pusha
ret
js
or
mov
inc
add
dec
cmp
aaa
adcb
imul
add
loop
outsl
jp
loopne
mov
lods
mov
idivl
sti
sub
xor
add
and
mov
jns
add
jns
enter
adc
out
jg
cmp
mov
std
sahf
jp
xor
es
ss
xchg
xlat
jno
sub
inc
cmp
cmpsb
xchg
jp
cmp
mov
pop
in
dec
call
push
fcompl
aad
xchg
gs
hlt
mov
les
xor
and
dec
push
and
and
fistpll
call
xor
mov
mov
push
out
inc
cmpsb
mov
mov
push
xorb
jo
pop
mov
out
adc
inc
iret
add
cmpsb
lcall
pop
adc
push
or
xor
jnp
xor
rcl
test
repnz
dec
test
sbb
aas
dec
gs
loopne
add
lcall
and
aaa
xchg
cwtl
push
sti
cmp
fmull
cmpsb
add
imul
aas
mov
jo
or
add
out
jne
repnz
pusha
fdivrs
or
or
jl
xor
leave
sub
mov
shrb
or
ss
test
outsb
mov
inc
xchg
mov
adc
push
gs
mov
xchg
sahf
sbb
inc
fdivrs
int3
shll
jo
push
add
imul
fsubrs
jnp
adc
mov
xchg
push
jne
push
lods
in
mov
pusha
cmpsb
sub
add
fstl
cltd
mov
in
lahf
mov
cmc
loopne
div
or
fisubs
fmull
add
xlat
aam
jecxz
add
lds
in
repz
in
mov
repz
mov
sub
xchg
xchg
xor
mov
push
sub
jbe
inc
mov
sub
add
sbb
cmp
xchg
bound
out
rolb
sub
enter
xchg
popf
or
lahf
and
movsb
clc
sub
in
les
inc
loop
add
dec
ret
and
push
jne
add
cmpb
pop
or
inc
cmp
dec
clc
fwait
and
xchg
filds
mov
arpl
sbb
add
or
xor
mov
cld
mov
ds
cli
scas
and
int
cmp
sub
sbb
lods
mov
insb
pop
addb
cld
in
out
stc
jo
out
and
cmp
mov
adc
in
push
add
inc
pusha
pop
popf
out
or
mov
cmp
cltd
mov
lock
push
pop
push
jmp
ljmp
mov
adc
jno
inc
fs
push
sbb
sbb
popf
dec
stc
mov
ss
in
cmc
pop
sub
mov
and
and
test
inc
add
mov
dec
dec
xchg
ret
add
mov
adc
andl
in
out
cmp
add
sti
cmp
pushf
repz
shrl
scas
inc
int3
rolb
pop
xchg
or
mov
out
push
lahf
or
nop
push
add
leave
ret
std
mov
aad
cmp
test
imul
jb
add
add
pusha
hlt
pushf
repnz
ds
push
mov
mov
add
rolb
jle
push
jo
flds
sahf
loopne
inc
aas
lahf
enter
pop
mov
mov
or
add
aam
xor
adc
nop
lods
mov
rolb
icebp
or
xchg
or
or
into
daa
cmpsl
daa
and
mov
lods
push
push
mov
popa
pop
or
mov
xor
push
mov
add
dec
loopne
and
mov
sub
mov
sub
loope
popf
loop
pop
cs
pusha
inc
push
mov
mov
hlt
pusha
and
dec
jge
cs
inc
mov
movsb
cmp
or
and
cli
int
enter
fidivl
cmc
iret
fcompl
inc
test
pop
loopne
push
pop
ja
rorb
repnz
repz
mov
mov
xor
mov
mov
sub
cmp
push
ret
cmp
lret
scas
rolb
dec
mov
les
sbb
and
jbe
jp
sahf
in
int
jmp
mov
add
cmovs
or
xor
jo
imulb
lock
pop
pusha
test
clc
stos
mov
push
pop
in
jns
cmp
test
pop
insb
fcom
add
pop
adc
add
cs
jle
lods
hlt
sbb
cmp
dec
popa
mov
pusha
sbb
add
es
fwait
bsf
cmp
aaa
sbb
or
std
clc
insb
inc
mov
daa
dec
add
xchg
push
ja
or
ja
orl
cltd
sbb
call
sbb
andl
into
jnp
shll
mov
and
js
fsubrp
out
jbe
sbb
or
jl
cmc
test
mov
inc
cltd
sbbb
into
push
and
inc
adcb
es
outsb
shl
inc
xor
outsl
mov
jp
or
add
cli
xor
adc
add
adcb
pushf
js
das
daa
arpl
mov
xor
push
mov
push
aam
ret
jo
inc
loope
lods
popf
add
xchg
out
or
lret
jno
add
mov
pushf
pop
in
into
rclb
aas
xchg
pop
inc
sysret
xchg
enter
mov
dec
pop
sysexit
rcrb
jle
pop
sahf
push
sbb
inc
dec
dec
cwtl
mov
sbb
jl
push
pop
cmpsl
pusha
add
cmpl
imul
add
lea
mov
int3
dec
add
divb
movl
outsb
xor
adc
xchg
and
push
or
ja
jp
fs
add
ffree
repnz
sub
mov
mov
bswap
push
orb
aaa
repz
dec
mov
mov
push
scas
in
cld
sub
mov
insb
pop
push
add
stc
fsts
jge
xor
test
push
dec
or
lcall
ucomiss
std
add
dec
cli
mov
or
pop
mov
add
or
mov
in
lods
js
add
mov
mov
out
in
mov
add
inc
inc
nop
aam
adc
in
cmp
push
mov
leave
stos
dec
mov
orl
rcll
mov
adc
dec
inc
sbbb
sub
dec
add
jo
je
add
jg
leave
mov
clc
and
js
sub
sbb
test
sbb
decl
gs
mov
ret
add
cs
push
adc
loopne
jae
jo
out
and
dec
jge
fstpt
fiadds
loop
add
mov
lahf
sti
add
ljmp
pop
loope
jmp
cmp
adc
push
or
mov
lods
mov
ret
adc
js
aam
inc
repnz
aas
popa
pop
pusha
sbbb
lret
pusha
mov
ss
add
std
aam
aad
fiaddl
fdivrs
lcall
shlb
cmpsb
mov
mov
sub
add
stos
mov
mov
push
out
pop
pop
adc
inc
push
pop
mov
dec
sub
stc
sub
lret
insb
or
ja
repz
sub
int3
mov
inc
pop
mov
mov
sub
mov
fwait
and
aad
adc
out
fstpl
xor
rcll
and
ds
sub
in
scas
and
test
xor
sub
cli
andl
cmpsb
addr16
cmp
inc
lock
call
fs
xorb
cmp
or
loope
and
cmp
pop
xchg
pop
and
mov
add
bound
push
insl
inc
mov
push
cmp
sbb
stc
lahf
xor
clc
dec
cmp
mov
pop
dec
dec
add
add
mov
cmp
andb
jmp
mov
push
cmp
add
dec
repz
das
pop
dec
mov
cltd
dec
and
fcmovbe
in
dec
nop
cmp
in
or
aaa
dec
je
add
pop
notl
imul
aas
in
dec
jnp
divb
jecxz
add
lods
int
adcb
loopne
mov
test
add
lock
cli
call
jae
xchg
xchg
imul
or
out
xor
mov
out
mov
cmp
push
or
sti
rolb
pop
in
btr
lds
add
movsl
sti
adc
xchg
push
or
add
insb
ret
inc
pop
push
pusha
in
push
loopne
inc
subl
xchg
cmp
call
inc
pusha
ja
rol
push
sbb
push
xor
dec
lock
add
push
mov
inc
dec
add
add
jb
pop
imul
mov
stos
ja
and
dec
fcmovb
in
cmpsb
push
push
bnd
les
mov
pusha
aas
or
adc
test
adc
xorl
xchg
and
aaa
and
out
push
add
and
add
sbb
lahf
dec
mov
loope
xor
inc
mov
aas
into
cmp
out
fnstsw
pop
adc
js
lahf
and
adc
sub
ret
notb
aad
in
jle
jle
sub
nop
push
sub
xorl
pop
push
mov
sub
lcall
pop
xchg
jno
out
fcomps
lret
xchg
inc
sbb
fisttpl
cmp
add
loope
fs
push
iret
sbb
fwait
arpl
call
dec
aas
ss
adc
movb
ret
sbb
add
out
jbe
add
jno
inc
mov
pop
jnp
hlt
add
push
adc
fidivrl
jmp
pop
and
jmp
pop
xor
mov
push
push
test
shrl
mov
sbb
adc
cwtl
sub
pop
es
arpl
cmp
jb
mov
mov
jle
add
iret
xchg
inc
repnz
pop
cmc
jbe
xchg
xchg
and
inc
in
and
inc
xchg
fwait
rorb
push
sub
push
js
inc
jl
mov
in
push
out
xor
sub
hlt
sub
xchg
cmp
loop
push
add
popf
push
aad
nop
out
sar
and
adc
xlat
cmp
xchg
pop
addb
add
or
push
int3
pusha
and
hlt
addb
push
wrmsr
push
jns
pop
repz
mov
ja
xchg
add
imul
inc
fiadds
loop
mov
inc
je
inc
and
push
mov
and
pop
and
sub
add
or
mov
out
test
add
call
mov
add
add
sub
lcall
movsl
sub
cmp
test
fiadds
and
es
mov
insw
mov
sub
xchg
pop
xchg
test
adc
pop
or
add
sahf
loopne
mov
jne
push
sub
inc
aad
pop
cwtl
xor
dec
mov
push
dec
rcll
pushf
and
pop
sub
sbb
cmpsb
mov
pusha
notb
push
stos
lret
loopne
inc
mov
out
or
andb
xor
push
fildll
lahf
sub
std
or
push
imul
xchg
mov
dec
or
sub
mov
hlt
in
je
inc
push
arpl
mov
shll
in
sahf
add
xchg
jp
xor
and
xchg
inc
loope
push
xor
pop
mov
add
std
push
dec
mov
mov
pop
push
fcmovnu
mov
mov
mov
icebp
and
cmpsb
mov
fnstenv
imul
scas
cwtl
sar
out
in
call
cmp
test
jecxz
cmp
dec
roll
jb
lret
xchg
hlt
cld
jne
push
rorb
adc
inc
inc
or
test
mov
mov
and
scas
sub
jp
inc
push
int3
repz
or
adc
pop
aad
das
adc
in
xchg
call
cld
adcb
mov
mov
adc
xchg
rolb
jno
pushf
andb
test
pop
cltd
inc
cmp
dec
sbb
std
adc
xorl
cltd
data16
jge
add
mov
ret
iret
sarl
stos
jne
mov
mov
jno
cmp
dec
mov
sbb
mov
imul
mov
and
or
add
repz
mov
aas
mov
enter
pusha
mov
clc
add
push
sub
jne
pusha
or
int3
aaa
outsb
sbb
push
push
aam
negb
movaps
repnz
aam
or
leave
popa
mov
shr
sub
push
and
test
out
addr16
mov
and
cld
xchg
jg
add
fndisi(8087
lock
int3
mov
add
repnz
rol
cmpsb
dec
sub
inc
sub
sahf
sub
mov
outsb
enter
lock
int
and
fldenv
sbbb
je
xchg
clc
popa
or
inc
xchg
cmp
hlt
sarl
push
add
xchg
ficompl
add
addr16
out
and
push
arpl
add
fimull
lahf
pop
nop
xchg
test
sub
mov
ljmp
adc
push
stc
sbb
sbb
jns
lds
pop
or
mov
push
out
shl
and
mov
xchg
mov
cmp
or
add
out
mov
call
xchg
mov
testl
adc
cmp
or
out
adc
loope
sti
sub
into
cmpsl
adc
add
add
fwait
nop
out
in
jge
cmc
lds
iret
and
add
mov
push
mov
cmp
mov
jno
mov
or
xor
ja
xor
test
cmp
and
add
jnp
add
dec
pop
mov
or
es
add
inc
sbb
jnp
add
test
mov
xchg
fmuls
inc
dec
add
jmp
mov
push
mov
add
clc
xchg
pusha
add
or
cmp
mov
dec
ret
mov
or
repz
repz
add
adc
mov
add
add
add
popa
ficoml
lahf
ret
orb
in
jg
ficoml
stc
and
out
es
notb
push
lret
add
dec
adcb
lret
sub
je
add
call
and
sub
arpl
cmp
xor
lea
cmpsb
mov
sbbb
pop
lock
arpl
mov
loopne
lds
loop
int
inc
outsl
rclb
jne
cltd
add
jo
mov
add
jecxz
test
inc
out
cwtl
push
pop
jno
add
jg
add
in
out
adc
dec
or
or
lcall
add
mov
cwtl
inc
jnp
lock
fs
nop
cmp
inc
push
push
addr16
mov
aaa
and
inc
aam
pusha
xchg
jle
aam
add
int
sub
mov
out
xchg
mov
add
sbb
sbb
mov
mov
lea
mov
push
test
cld
dec
cmpsl
add
jnp
add
cwtl
fsts
or
inc
and
outsb
lods
add
xor
add
inc
xchg
inc
cmpsb
rolb
mov
push
je
mov
out
seto
mov
add
mov
cld
mov
inc
xchg
pop
mov
push
inc
iret
repz
jle
enter
jno
adc
in
mov
and
push
xor
pop
and
push
loope
out
loop
add
pop
repnz
imul
movsb
and
fistpll
xchg
cli
sub
je
cmpsb
dec
mov
xchg
add
dec
jg
loope
add
xchg
inc
xor
dec
pop
and
jecxz
and
test
pushf
mov
adc
push
in
add
ret
and
xchg
rcrb
cld
fistpll
pusha
js
adc
loope
pop
nop
hlt
lahf
adc
mov
test
rcrb
mov
jl
push
sbb
inc
jbe
ds
add
shrb
mov
or
push
sbb
adc
sub
dec
loop
cmp
mov
test
pop
jne
pop
enter
test
mov
adcl
rorl
xor
add
mov
jge
sub
int
push
add
inc
fsubl
arpl
xchg
inc
sahf
stc
inc
add
pop
popl
insb
int3
add
sub
mov
jp
test
mov
stc
xchg
adcb
mov
or
push
sbb
sub
inc
repz
xor
jbe
cwtl
sbb
push
mov
inc
clc
mov
xchg
push
lods
xlat
jmp
rorb
or
repz
pop
sbb
pop
pop
inc
and
ljmp
cmp
das
out
sbb
add
push
adc
pop
xchg
data16
call
xor
jbe
mov
orl
mov
pusha
xlat
out
push
pop
aaa
inc
mov
ret
sbb
std
mov
in
add
jl
cmp
sbb
add
xchg
stos
jge
mul
xorb
and
or
jp
add
or
inc
xchg
imul
nop
inc
cmpb
fs
ret
jecxz
repnz
mov
cmpb
add
lock
in
ror
ja
dec
fcoml
dec
jne
nop
cld
mov
add
xor
or
cs
outsl
dec
das
mov
adc
and
sbb
mov
add
aaa
and
pop
pop
inc
loopne
mov
push
orb
dec
and
add
rcll
fcoms
ret
dec
testb
ljmp
daa
insb
pusha
dec
movl
mov
mov
test
add
fsts
pop
push
push
add
cmpsb
aas
test
mov
clc
jno
faddl
les
or
xchg
repz
mov
daa
test
shlb
cmp
out
imul
ret
adc
jmp
cwtl
xor
cmp
add
sub
test
testl
hlt
add
cmpsl
add
das
mov
xchg
push
imulb
movsb
jl
setge
xchg
adc
shl
loope
repz
mov
imul
mov
roll
xor
sbb
adcl
mov
fildll
movsb
pusha
ss
add
cmpsl
hlt
sub
jp,pt
add
loope
pop
fiadds
or
pop
jne
add
or
int3
add
sti
pusha
add
push
dec
add
push
dec
add
dec
