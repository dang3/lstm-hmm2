mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
fsub
sti
pop
add
scas
adc
std
mov
nop
mov
or
jae
jb
or
push
out
or
aas
add
mov
mov
les
sub
jns
pop
push
dec
bound
arpl
pop
sbb
lock
pushf
insl
xor
int
jl
dec
jmp
arpl
sar
cmp
int3
addl
jmp
fdivrp
and
adc
int3
popa
mov
ja
ja
xchg
subl
pop
push
cld
sbb
out
aas
addw
add
add
cmp
adc
adc
std
lods
dec
jo
loope
adc
or
movsb
fldcw
insl
cmp
mov
push
pushf
in
in
cwtl
xchg
nop
adc
in
in
mov
adc
in
in
jo
push
in
pop
pop
push
in
in
or
dec
dec
jns
xor
cld
daa
clc
hlt
inc
sub
daa
call
sahf
cmp
cmp
icebp
loop
dec
sub
add
mov
mov
add
movzwl
mov
ss
pop
ret
addr16
sub
and
stos
cmp
add
popa
lcall
je
jb
inc
and
je
outsl
outsb
and
xor
in
in
adc
push
imul
push
jb
data16
push
mov
push
push
je
popa
clc
adc
gs
insb
outsl
jo
repnz
cmpxchg
ret
lods
jge
jmp
mov
mov
dec
add
inc
or
shll
or
or
or
in
push
dec
adc
push
adc
scas
xor
rcll
adc
fildll
fildll
mov
mov
add
sbb
cs
jp
add
imul
aas
inc
and
dec
in
pusha
cmpsb
sub
inc
dec
ror
xor
sub
xor
xor
cs
pop
xor
cmp
mov
mov
pop
cmp
das
rorl
sub
add
add
neg
std
insl
mov
mov
jl
push
cmp
add
js
enter
and
mov
inc
pop
add
mov
mov
cmc
mov
add
nop
fildl
rorl
push
sub
mov
shr
out
jg
add
mov
mov
and
pop
mov
out
clc
jge
add
ljmp
ja
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jbe
rol
sti
shl
or
sbb
in
push
stc
ret
cmpl
sbb
scas
loop
adc
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
test
push
mov
pusha
push
mov
inc
not
add
push
and
add
jbe
push
add
push
int
add
rclb
or
push
jbe
pop
mov
lods
mov
loop
mov
out
mull
cmpb
mov
sub
mov
mov
sub
sbb
xor
stc
out
mov
nop
cmpb
jmp
fstpt
imul
mov
add
add
clc
test
push
xor
add
add
push
push
push
mov
lea
movb
or
rorl
fwait
and
xchg
or
add
sub
mov
or
ja
push
jle
jg
pop
or
or
imul
lret
outsb
ret
adc
pop
pop
icebp
sti
pop
dec
mov
mov
sub
jae
in
mov
fidivrs
adc
mov
push
and
or
test
jne
in
std
dec
xchg
loop
jns
add
jmp
or
sbb
or
mov
mov
and
push
push
lea
or
push
jg
in
inc
or
push
jne
push
push
mov
cmp
rorb
pushl
sub
add
jmp
test
jne
lods
fimull
and
fisubrs
in
std
add
and
inc
loopne
repnz
sub
pusha
mov
adc
jecxz
jmp
fidivrs
loope
pop
pop
mov
mov
sarl
jbe
ljmp
shl
adc
xchg
xor
push
mov
call
cmpl
test
jo
fs
mov
xchg
adc
cmp
jae
mov
push
aas
dec
and
jae
fmuls
add
lods
iret
lea
movsb
sbb
es
sbb
mov
rolb
pop
or
pusha
jmp
lds
mov
jmp
mov
push
std
sub
add
add
inc
ret
push
mov
iret
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
test
btr
loopne
sarl
or
add
or
dec
jnp
sub
lea
mov
inc
jmp
sbbb
add
scas
fildll
cmp
jb
mov
xchg
in
idiv
int
enter
iret
sub
sub
cmp
and
inc
or
mov
rclb
mov
mov
movl
dec
cld
xor
das
mov
mov
pop
pusha
add
adc
scas
fsubrs
adc
push
or
imull
iret
mov
addr16
sub
dec
jecxz
xor
mov
lds
fucomip
movsb
or
faddl
pop
jle
xor
jne
lea
hlt
add
cld
or
pushl
and
inc
mov
fmuls
rol
or
jmp
mov
lahf
insl
pop
mov
add
push
bsf
mov
push
loopne
rol
loopne
xor
sbb
sub
xor
cmp
pop
cld
jmp
mov
dec
mov
ret
pop
or
inc
bound
cmp
cmp
adc
test
push
pop
xorb
jb
out
subl
or
testl
fisttps
jns
shll
test
roll
push
xchg
test
mov
jne
subl
jge
inc
ljmp
xchg
sub
data16
xchg
movsl
jns
dec
dec
pop
mov
jb
xor
aad
stos
insl
test
sub
outsb
xor
mov
iret
test
push
sub
xchg
scas
into
xor
push
mov
pop
leave
outsl
pop
sbb
repnz
jmp
aaa
inc
or
xor
jle
out
loop
fmull
outsl
sbb
jne
testl
jne
or
xchg
loope
adc
inc
cld
or
cmp
inc
faddp
ret
xchg
xchg
mov
xlat
mov
test
je
xchg
pop
clc
lock
cmp
pop
cmpsl
xor
testb
into
sub
adcl
mov
lahf
pop
mov
cmp
sbb
or
lret
add
inc
cld
xchg
fldt
movl
loopne
add
lcall
ret
loopne
pop
push
in
or
in
mov
enter
sub
sbb
lret
jb
jns
jb
loopne
mov
mov
ret
jg
or
lahf
push
lea
push
mov
sub
mov
sar
and
add
hlt
fwait
mov
lock
mov
call
test
mov
xchg
xor
dec
xchg
sahf
mov
mov
add
jecxz
cmp
cld
dec
aad
push
xchg
cvttps2pi
cmp
jb
sbb
ljmp
cmc
add
sub
add
and
stos
scas
sarb
in
xor
cmp
cmp
push
jge
in
cmp
cmp
fdivrs
and
or
mov
push
mov
add
or
lret
jmp
data16
mov
push
mov
xlat
sub
clc
sbbl
or
lea
mov
out
and
add
lock
call
imul
add
fsub
les
add
ljmp
test
xor
out
dec
mov
dec
push
sarl
xlat
xlat
je
iret
ja
cmp
xchg
pop
mov
call
incl
enter
rolb
add
and
push
ret
andl
push
fsubs
and
jmp
jle
push
lea
aaa
xor
and
xor
mov
les
fisttpll
clc
loopne
insl
rcl
dec
iret
push
xchg
jg
gs
loop
cmp
dec
dec
push
cmp
pop
shl
pop
jl
negb
push
lea
mov
cld
lea
or
mov
out
cltd
jae
neg
fldz
fstl
add
js
or
sar
lea
mov
in
mov
faddl
rorl
or
test
jne
xor
inc
aad
stos
dec
je
mov
adc
cmp
jae
rclb
adc
lods
pop
sub
jg
mov
mov
cmp
jne
mov
cmp
jbe
mov
mov
sub
or
push
jae
and
scas
inc
add
fmuls
jecxz
push
mov
cmpsl
push
mov
ret
xchg
mov
mul
fs
mov
loop
jecxz
sub
pop
shr
mov
add
enter
mov
ficomps
mov
cmp
inc
sbb
wbinvd
shrl
xor
mov
dec
aaa
sbb
sbb
xchg
add
add
enter
add
add
jg
xchg
lret
aas
adc
fdivs
adc
inc
add
icebp
mov
ret
aas
xchg
inc
and
shrb
push
mov
push
inc
cli
mov
or
mov
push
in
cmp
ja
fucomi
mov
pop
or
push
lock
push
jae
ss
mov
pop
jecxz
lock
adc
mov
js
add
std
negl
mov
hlt
jne,pn
push
testb
je
call
sub
jmp
mov
pop
pop
lds
push
push
nop
test
cli
loop
mov
cmp
gs
data16
cmp
test
fdivr
fidivrl
aas
sbb
sbb
test
daa
dec
movb
fistps
add
sti
or
sbb
xor
lods
loopne
in
sbb
mov
push
xor
mov
mov
fistpl
pop
mov
dec
scas
sub
mov
xor
jp
jae
rcrb
xchg
ja
dec
mov
movsb
sub
mov
inc
sbb
adc
adc
fiadds
fsubr
jo
out
mov
mov
push
cwtl
shrl
mov
mov
xor
jl
inc
pop
mov
cmp
jne
add
fildll
mov
and
mov
add
dec
jne
outsb
lock
test
inc
add
cld
mov
call
insb
faddl
lea
lea
ss
add
call
add
mov
sbb
xchg
call
clflush
adc
shl
addr16
or
cmp
je
aaa
adc
lcall
lret
mov
je
mov
sbb
cmpl
imul
xor
int3
sbb
jl
or
dec
or
sbb
fisubs
test
jle
sbb
cmpb
mov
hlt
clc
jge
cmp
jb
jo
push
push
sub
mov
and
dec
loopne
push
lock
sub
je
dec
rolb
sti
cmp
rcrl
in
movq
incl
pop
pop
xor
sbb
push
adc
in
xchg
xchg
xor
nop
scas
xchg
jnp
pop
loope
mov
push
dec
jne
data16
pusha
mov
fdiv
ret
xchg
insb
pop
xchg
push
mov
and
pop
pop
push
inc
mov
jb
clc
push
add
lcall
xchg
add
mov
xchg
pop
mov
push
xor
mov
rcrl
xor
add
or
push
insb
pop
jmp
pop
ljmp
aaa
and
add
mov
shll
mov
in
jnp
sti
sbb
loope
xchg
cmp
movsl
cli
dec
aaa
ret
jecxz
jne
mov
test
cltd
push
sub
jle
ds
sbb
push
aaa
adc
or
ja
fs
xchg
scas
mov
jl
sbb
sti
mov
sub
cmpb
testl
xchg
mov
jnp
aam
sub
push
mov
movl
adc
dec
jb
cld
dec
loopne
push
cmp
sub
lods
inc
ja
scas
in
scas
mov
xchg
lock
xlat
mov
or
gs
repz
xchg
in
daa
movsl
dec
mov
cmp
idiv
cmp
add
mov
dec
adc
push
sarb
and
movsb
jnp
add
or
cmp
rclb
or
add
and
das
xchg
je
jmp
mov
cmp
jmp
xchg
push
push
sub
mov
sbb
inc
fmuls
js
pop
mov
mov
cmp
jmp
dec
pop
incl
cmp
andl
push
sbb
orl
jo
sbb
cmp
cmp
pusha
jb
inc
js
icebp
or
dec
mov
pop
je
inc
pop
sti
aad
emms
or
imul
sarb
adc
push
mov
pcmpeqw
add
and
outsl
ss
outsb
and
gs
enter
insl
gs
outsl
sar
shlb
popa
imul
popa
jae
outsl
arpl
mov
mov
mov
pop
pusha
scas
std
pop
jae
popa
insb
insb
and
dec
imul
add
nop
cmp
jae
out
cld
jg
push
outsb
imul
outsb
add
xchg
outsl
in
jge
imul
add
mov
insl
nop
outsb
and
inc
mov
out
lahf
mov
mov
mov
xor
mov
sbb
movl
in
pop
mov
into
add
add
clc
jbe
mov
add
inc
add
cmp
jne
mov
xchg
mov
cmpsb
push
mov
cmp
jl
in
inc
clc
or
sbb
movl
jmp
add
out
into
dec
xor
jae
mov
rolb
cmp
jbe
ja
dec
mov
pushl
push
in
loopne
add
mov
mov
xor
loope
lea
add
shll
mov
mov
aaa
lret
jbe
mov
cmp
xlat
mov
push
pop
int
xor
div
imul
mov
or
mov
icebp
mov
in
dec
inc
xor
hlt
sbb
movl
mov
mov
mov
jnp
inc
add
or
repz
cmp
xor
lods
jb
push
mov
out
ficoms
jne
mov
jmp
mov
sarl
cmp
xchg
push
mov
cmp
jne
mov
ret
out
mov
dec
adc
insb
inc
or
or
or
and
stos
sbb
cmp
imul
dec
mov
outsl
push
sbb
mov
mov
push
out
lea
cmpl
jg
mov
jge
mov
sub
mov
iret
popf
iret
or
pop
sbbb
sbb
pushf
movl
dec
adc
repz
ret
mov
add
call
sub
mov
xor
adc
addr16
sar
jg
add
xor
mov
inc
xor
or
xor
mov
test
cld
pusha
jo
arpl
ss
pop
mov
mov
mov
lds
sbb
mov
mov
inc
mov
mov
enter
cmpsl
lock
out
adc
test
xchg
add
jecxz
sahf
or
in
aam
in
or
hlt
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
movsb
neg
or
pop
nop
scas
push
add
fucomp
or
loopne
push
push
xor
pop
pop
jne
ds
js
mov
out
call
iret
pop
testb
inc
or
je
ljmp
outsl
pop
jle
cmp
jg
sub
inc
fdivrl
sarl
mov
inc
repz
decl
mov
jmp
mov
jmp
mov
insb
adc
pop
repz
cmp
fmull
cmp
je
cmp
ja
sub
mov
jmp
and
in
sub
sub
or
adc
adc
int3
inc
push
push
or
int3
rorl
dec
dec
sahf
out
sahf
pop
popa
insb
jns
push
mov
lea
dec
or
adc
flds
fsubrp
push
add
cmp
jle
loopne
fisttpl
or
shrl
lret
adc
jbe
adc
mov
add
and
sub
pop
inc
cmc
pop
incl
insl
aas
fmuls
mov
or
xlat
fucomp
ja
inc
add
mov
push
and
add
mov
into
dec
add
pop
cmp
push
add
stos
mov
adc
ret
mov
jbe,pn
fucomp
or
inc
lock
or
jbe
and
cmpb
add
xor
std
in
mov
jmp
sub
mov
fimuls
fisubrs
ret
add
js
inc
mov
adc
push
out
mov
outsl
mov
inc
nop
mov
pop
jne
pusha
push
nop
arpl
loopne
or
out
add
inc
sbb
iret
frstor
orl
pop
clc
mov
fidivl
mov
jo
divb
push
add
fisubl
fnstsw
jmp
mov
fbstp
and
mov
add
dec
jmp
mov
clc
ljmp
or
mov
add
movsl
out
das
pop
xor
imul
dec
cmc
mul
xor
cmp
ja
sub
call
mov
fldcw
cmp
pop
outsl
ja
insl
push
sub
adc
or
fstps
testb
fwait
orw
insb
fistps
add
pop
xchg
stos
neg
sub
pop
inc
lods
sub
repnz
or
or
nop
daa
sbb
dec
add
jmp
data16
mov
or
call
lods
sbb
pop
cmp
js
cmpsb
pop
cmp
and
mov
inc
and
cli
mov
sbb
cwtl
aas
mov
mov
imul
ja
and
adc
xor
add
sbb
fcomip
adc
lahf
jmp
cmp
dec
shr
mov
pushl
ds
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
push
shll
pop
add
xlat
xor
mov
sub
std
in
pcmpeqd
mov
sub
inc
xchg
xchg
stc
mov
sbb
lret
jbe
mov
mov
inc
inc
loopne
test
mov
add
push
xchg
inc
inc
in
mov
ret
je
mov
mov
cmp
jne
dec
je
mov
add
pop
add
aaa
add
sahf
loop
sti
scas
fidivl
add
push
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
jmp
dec
in
adc
cmp
jne
shr
sarl
add
push
mov
shr
or
test
cmp
pop
cmp
mov
rol
pop
and
mov
cmp
int
or
dec
dec
dec
and
andb
xlat
add
cli
clc
int
cmp
das
movsb
pusha
push
add
ljmp
or
cmc
add
push
add
outsl
fistpl
neg
sub
or
rcl
push
mov
ss
add
idiv
cmp
push
sub
xchg
jmp
sahf
out
iret
cs
sbb
sbb
push
adc
sahf
out
adc
push
or
adc
es
push
or
ret
pop
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
std
pop
mov
test
jmp
or
or
cmp
ja
test
and
fcoms
out
int
or
incl
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
inc
sub
popf
cmc
jmp
mov
xorb
cmpsb
popf
mov
xchg
and
add
or
pusha
xchg
scas
leave
shl
stos
aad
cwtl
pop
cmp
sbb
xor
mov
mov
push
cmp
sbb
mov
dec
jne
pop
testb
mov
and
xchg
dec
cs
shr
fs
jl
pusha
xor
cmp
cmpl
adc
in
fldt
leave
enter
loop
jns
pcmpeqb
cmp
adcb
push
and
jmp
pop
xchg
lret
xchg
jge
mov
xor
pop
push
cltd
stc
sbb
jmp
fstp
fldt
adcl
adc
out
mov
xchg
arpl
mov
adc
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
test
push
xor
out
sub
pop
jecxz
add
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
jmp
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
decl
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
call
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
pushl
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
cld
rclb
popa
pushf
mov
and
addr16
repz
mov
incl
mov
push
pusha
les
outsb
bound
xor
jmp
inc
xor
sub
xor
insb
sarb
sbb
add
and
or
and
rcr
mov
dec
js
sbb
movzwl
fwait
std
inc
clc
lea
push
push
inc
or
hlt
mov
jne
xor
push
push
mov
pushl
mov
movl
data16
pop
ja
roll
and
pop
pop
std
ljmp
in
sub
ret
sub
jmp
fidivs
jecxz
and
pop
aas
or
clc
mov
push
dec
inc
push
push
inc
push
inc
pop
lcall
gs
jo
imul
push
dec
popa
jae
push
scas
jo
loop
insb
jne
fninit
fwait
in
clc
sbb
mov
idiv
call
stos
lret
aas
xlat
mov
xor
mov
inc
rep
mov
add
or
cld
int3
leave
out
cmp
push
push
ja
xchg
cmp
daa
jl
inc
sbb
fidivrs
push
das
and
mov
mov
sbb
dec
icebp
out
sbb
add
xchg
ret
and
and
sbb
inc
filds
je
std
std
ds
sub
or
cwtl
mov
sbb
clc
adc
dec
rorb
mov
out
push
mov
out
fisubrs
xchg
push
movups
fs
mov
pop
or
xor
jle
in
addl
and
call
ret
sahf
sti
ljmp
fdivs
rclb
add
stos
pop
and
rep
mov
mov
sub
scas
push
mov
pop
fsubrl
jmp
cmp
je
jbe
add
jae
lock
inc
ss
mov
mov
push
sbb
jne
jne
cwtl
cmpb
lods
mov
mov
jbe
mov
adc
pop
inc
movsb
fdivs
aaa
icebp
xchg
cmp
jb
lar
pop
rol
add
jmp
mov
test
push
lcall
inc
addl
ja
pop
out
and
cld
pop
clc
mov
mov
clc
subl
sub
add
mov
lret
mov
inc
push
mov
mov
callw
shll
jbe
lea
push
sbb
hlt
insb
clc
cmpsl
loop
jbe
sbb
jns
cmp
clc
xor
mov
enter
sarb
cwtl
sahf
xor
xor
jb
push
add
adc
or
jne
or
xor
inc
fcoml
or
mov
fwait
or
pushf
add
daa
cwtl
xor
lods
sarl
decl
push
mov
leave
jne
mov
in
push
xchg
jmp
pushl
fstps
lret
test
test
add
scas
je
pop
loop
mov
in
negb
pop
add
sub
mov
pop
mov
push
xchg
add
cmp
pop
ljmp
jle
and
xor
das
mov
paddusw
ja
jmp
mov
ret
popa
push
inc
pop
push
data16
mov
pop
cmp
inc
push
stos
fiaddl
and
mov
aaa
sti
test
scas
ds
mov
rcrl
adc
or
add
sbb
add
dec
jne
icebp
clc
out
fucomi
sbb
add
sbb
and
jne
dec
cmp
in
outsb
loope
lahf
push
popf
enter
jecxz
push
sbb
fsubrl
jmp
push
xor
call
add
decl
push
push
bound
hlt
xor
lea
fs
sbb
movl
or
or
pop
sub
inc
sub
hlt
or
mov
inc
or
xor
neg
or
push
clc
inc
aas
add
sarb
scas
jnp
xchg
inc
xor
xchg
inc
in
mov
sti
test
or
sbb
fnstsw
add
jae
jg
cwtl
ja
pop
pop
rolb
loopne
sub
add
dec
or
scas
dec
in
push
call
fisubrs
push
push
cmp
and
pop
dec
cs
addb
mov
xlat
gs
sti
in
xor
dec
pop
ljmp
add
or
jne
movsbl
inc
inc
jmp
add
jg
mov
mov
xor
push
or
jecxz
mov
or
push
aas
loop
mov
xchg
adc
std
add
dec
cmp
inc
add
jne
and
cmp
inc
mov
adc
jo
pushf
subb
adc
orb
je
adc
lcall
into
cli
out
push
popa
movsl
mov
push
mov
ja
lea
xor
clc
add
dec
mov
jbe
leave
cmc
cmpl
adc
xor
adc
push
stos
cli
push
jns
adc
pop
fidivs
dec
add
jbe
or
push
cmp
sbb
push
sub
aam
inc
js
sbb
lea
sub
mov
mov
lock
stos
add
push
lods
sar
pop
fisttps
cmovno
xor
sbb
mov
jns
or
je
dec
or
add
adc
sbb
xor
cwtl
xchg
loope
je
or
or
add
lds
lods
loope
subl
fmuls
lods
lock
aam
push
sub
jle
arpl
or
and
fsubl
jne
loopne
jne
outsb
dec
jne
sbb
faddp
and
adc
inc
jmp
sbb
push
cmp
daa
push
adc
lahf
adc
adc
insl
or
mov
mov
pop
adc
adc
or
dec
pusha
shrl
aaa
inc
movsb
jmp
movd
sbb
xor
sbb
sub
adc
xor
add
push
push
shr
sar
rorl
mov
adc
jecxz
and
shlb
in
push
aas
dec
lock
movl
xchg
outsl
or
fadds
cld
cmpsl
push
mov
push
push
push
or
pusha
popa
inc
pop
jb
mov
or
dec
mov
inc
sahf
sbb
adcb
or
pusha
add
inc
inc
aaa
cmp
or
dec
sahf
dec
sti
or
pop
mov
mov
cmc
lea
jae
mov
push
mov
pop
and
adc
loop
xor
add
mov
xchg
xor
xchg
ret
sbb
or
ja
add
ja
jg
je
cmp
push
sub
push
or
push
and
jmp
add
add
ss
jmp
cmp
cmp
adc
jg
mov
sub
cmp
mov
jmp
mov
jmp
mov
clc
std
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
loop
mov
decl
mov
mov
or
pop
ret
pop
push
xchg
mov
iret
setne
imul
cwtl
movsl
imul
xchg
inc
pop
lock
dec
pop
clc
cmp
push
outsb
inc
sbb
ss
push
cli
sub
into
out
out
push
inc
pushl
xor
jl
inc
notb
mov
rorb
fidivs
loope
rorl
scas
sbb
loope
inc
or
push
or
adc
sbbb
enter
repnz
pushl
add
and
clc
in
dec
out
mov
sbb
icebp
xor
add
jge
test
jle
dec
mov
insb
add
add
cmp
sub
adc
mov
fs
xor
leave
add
mov
fs
mov
cmp
jle
and
xor
inc
xlat
iret
cmp
jg
test
nop
movl
sbb
mov
dec
dec
popf
mov
outsb
add
mov
call
lahf
sub
cmpsb
xlat
xchg
ret
dec
xchg
mov
sbb
lcall
add
add
js
imul
dec
jne
pop
pop
dec
adc
or
in
or
mov
mov
mov
cltd
idiv
add
cwtl
mov
and
popf
clc
fldcw
and
dec
mov
add
fldt
and
inc
addb
mov
rcrb
push
xchg
rolb
mov
aam
dec
add
sbb
and
xor
mov
out
xchg
pop
mov
inc
push
data16
filds
sbb
dec
adc
cmp
add
add
insl
jo
loopne
push
push
push
popa
sbb
sbb
cmp
add
dec
inc
ret
or
inc
xor
sti
adc
jge
cmp
and
add
pop
insb
lock
and
jnp
and
pop
push
mov
ret
sub
jne
cmp
icebp
jge
and
adc
sbb
daa
inc
xlat
jle
add
ds
lret
pop
outsb
das
xor
xor
jnp
sahf
sbb
push
cmp
outsl
adc
adc
jne
je
loopne
add
sbb
test
jne
pop
inc
movsl
popf
dec
adc
add
sub
adc
add
mov
mov
sbb
xor
ljmp
inc
push
test
popl
jmp
mov
aad
xor
lods
call
sub
xchg
push
xor
push
mov
and
in
dec
cmp
pop
and
dec
mov
insl
pusha
mov
xchg
mov
sahf
xorl
mov
pop
sbb
repnz
lods
add
add
push
push
or
push
mov
rcll
push
push
cmpsb
add
movsl
cmp
or
adc
scas
imul
adc
decl
daa
push
jle
or
inc
clc
pop
cmp
push
pusha
jg
adc
movl
jbe
push
or
fisubrl
dec
and
inc
jg
sbb
lods
pop
cmp
pop
push
dec
and
add
inc
insb
xchg
adc
lret
xchg
xchg
jle
ss
push
or
jle
push
add
ljmp
inc
pop
movw
or
xor
popf
mov
inc
clc
cld
fisubrs
rcrl
xlat
cltd
mov
mov
das
pop
dec
loop
js
nop
or
cmp
and
aam
fdivrs
mov
inc
scas
or
sbb
or
sbb
adc
jns
xchg
push
mov
aaa
add
inc
add
les
addb
jg
xchg
jmp
lea
add
sub
daa
jge
pop
pop
mov
nop
push
dec
loopne
call
mov
int
loopnew
sub
fldl
fistpl
aaa
push
ficoml
sbb
add
cmp
pop
lock
push
mov
mov
inc
push
xchg
nop
inc
mov
je
push
sub
and
add
std
jbe
pusha
jo
jmp
inc
add
jmp
pop
pop
sub
and
pop
out
sahf
fists
or
push
push
addr16
in
add
jae
ja
mov
inc
xchg
pop
add
repnz
mov
rcrl
rcrl
mov
sub
cld
outsl
push
je
pop
cld
or
fnstcw
mov
inc
cmpsl
mov
pop
pop
xchg
aas
idiv
and
pop
inc
pushf
push
pop
inc
cmp
and
out
test
jmp
jns
and
aaa
repnz
cld
add
jo
cmp
push
pop
rorb
xchg
cmp
sbb
repnz
sub
clc
dec
idiv
arpl
pop
cmp
fdivrl
popf
lahf
cmp
jl
ds
rorl
push
clc
inc
cld
add
jo
popf
rorb
fists
add
pop
push
xor
add
inc
dec
clc
fdivl
jmp
mov
mov
jae
mov
pushl
cmp
jle
push
je
mov
dec
jmp
jbe
xor
jo
cmp
nop
push
dec
jne
mov
lock
cld
popf
cmp
ljmp
push
cld
aaa
add
dec
jmp
xor
inc
pushf
adc
mov
add
dec
jne
sahf
in
inc
dec
shl
dec
pop
xor
lea
jmp
pusha
aas
or
and
xor
xor
or
or
movsb
pop
cld
sub
push
ret
std
adc
and
sub
mov
xor
je
pusha
aam
mov
bsf
shr
js
incl
add
jns
mov
cmp
pop
and
or
pop
mov
mov
ss
into
push
js
push
lret
dec
xchg
pop
mov
add
je
scas
mov
cmp
cmpsb
movsl
xchg
or
push
stos
pop
adc
dec
inc
lret
shrb
cmp
daa
inc
adc
push
aas
push
daa
in
mov
cmp
jge
sub
inc
ja
or
sarb
add
mov
adc
shr
in
jmp
and
insb
pop
test
int3
inc
pop
jp
dec
jl
subb
mov
jge
mov
ss
fadd
jg
stc
add
lea
inc
dec
cmp
push
divb
pop
repz
nop
or
icebp
pop
cmp
dec
cltd
mov
push
cmove
cld
in
clc
jnp
cmp
adc
imul
add
gs
cmp
subl
mov
lea
lock
push
inc
mov
add
mov
push
mov
cmpsl
mov
adc
jb
cmp
cmp
cmp
jl
sbb
add
add
mov
test
mov
fldt
xchg
test
or
mov
dec
movsb
cmp
jb
sub
or
jmp
outsb
and
xor
and
in
pop
negl
jo
shrb
cmp
xor
and
test
sahf
jne
push
or
cmp
dec
push
shll
cmc
add
mov
xor
jne
pop
mov
fwait
mov
pop
sbb
sbb
stos
push
icebp
arpl
adc
mov
mov
add
pop
jo
sarb
scas
sbb
or
or
subb
jmp
cmc
in
mov
test
arpl
out
push
pop
push
lock
cmp
xor
into
and
xlat
jle
dec
lods
lcall
fnstcw
push
pop
lods
cmpsl
add
or
fs
fisttpl
inc
iret
push
push
push
das
and
lods
in
rorb
mov
xsave
cmpsl
cmp
mull
out
cmpsl
cltd
mov
mov
xor
cld
mov
inc
push
jmp
xchg
out
addb
jle
pushf
or
inc
inc
jmp
mov
lret
inc
pushf
cmp
dec
enter
aas
sbb
data16
dec
push
aaa
or
jl
enter
xor
inc
xor
add
inc
mov
add
lahf
or
add
push
pop
mov
rorl
pop
je
dec
push
mov
push
jne
outsb
inc
xor
outsl
test
loope
push
inc
ds
add
inc
and
ja
cs
sbb
or
pop
das
or
pop
or
lahf
lea
xchg
cld
push
clc
push
mov
cmp
jge
pop
dec
cmp
fdivl
lcall
or
ret
cmp
push
fadd
sbb
add
and
test
mov
jle
inc
daa
cltd
inc
sub
sti
inc
cmp
inc
cmp
jle
mov
add
jb
mov
inc
lea
and
sbb
inc
pop
pop
sub
and
inc
aaa
push
mov
lcall
je
or
shl
insb
adc
adc
xor
loop
das
lcall
insl
dec
popa
dec
xchg
push
add
adc
je
cmp
fs
je
cmp
je
cmp
adc
loopne
lret
je
mov
fldcw
pop
add
clc
jmp
adc
add
or
adc
aad
out
jmp
push
mov
mov
pop
add
dec
cs
fstp
sub
adc
cmp
pop
jmp
cmp
dec
add
xlat
push
inc
mov
inc
sbb
insl
pushf
inc
cwtl
jp
adc
or
mov
stos
pop
pop
out
stc
push
loopne
repz
mov
push
or
iret
pop
jbe
test
int
pushf
mov
mulb
mov
dec
sbb
pop
xchg
mov
push
int
pop
addr16
inc
push
outsb
push
sub
jmp
xchg
or
shr
lods
repz
sub
sbb
loope
int3
cmp
dec
pushf
icebp
jmp
fimuls
adc
loopne
scas
daa
dec
pop
add
nop
xchg
adc
loope
cmp
mov
out
sahf
push
push
sub
rorl
jp
add
repz
sub
test
dec
pop
ret
cs
in
dec
adc
rcll
popa
xchg
hlt
or
das
sub
nop
sbb
jg
loope
or
inc
add
cld
mov
dec
clc
push
or
sarl
pop
cmp
ret
adc
mov
clc
mov
mov
cmp
xor
or
jae
jae
je
or
jo
xor
cmpsb
popf
adcb
mov
pop
lock
xor
adc
in
inc
inc
push
fistl
inc
mov
inc
in
dec
sbb
adc
js
mov
mov
jo
pushl
or
in
out
std
dec
push
pop
jmp
aas
add
sarl
xor
insb
in
and
and
xchg
fadds
cwtl
dec
dec
jne
adc
sbbb
aas
enter
insb
and
mov
dec
movsl
jb
in
inc
push
popa
dec
enter
xchg
sahf
or
mov
enter
jne
sub
cmp
sub
xor
push
les
cmp
cmp
or
movd
pushl
incl
pop
add
inc
call
clc
xor
add
cmp
add
inc
mov
push
cmp
pushf
iret
push
cwtl
ret
or
dec
adc
popa
push
sub
dec
adc
push
pop
mov
loope
mov
ret
popf
adc
pop
outsl
mov
das
xchg
inc
cli
xchg
subb
mov
insl
fs
add
xchg
xchg
push
mov
adc
pop
pop
ret
inc
push
sub
cld
lock
fcos
push
popa
push
or
wbinvd
mov
loop
sub
dec
les
int
or
jl
lcall
mov
inc
ja
sbb
inc
jmp
cmp
jne
mov
inc
and
clc
and
je
cmp
mov
out
scas
xor
stc
jnp
insl
das
and
mov
mov
mov
sub
jb
add
sub
jb
add
or
jmp
xor
sub
loop
out
xor
push
getsec
jmp
push
subl
or
jb
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
xor
add
adc
movsb
loop
mov
andb
xor
inc
ret
or
xor
mov
dec
dec
sbb
test
insb
ret
mov
rolb
neg
push
fiaddl
pop
sbb
jae
adc
cmp
push
pusha
sbb
dec
inc
cmp
adc
or
test
jg
inc
or
and
adc
push
dec
mov
dec
daa
push
add
cmp
xchg
and
jg
mov
sbb
or
xchg
shr
sub
loope
setl
cmp
je
dec
int
xor
or
or
les
or
adc
imul
aam
aam
mov
incl
push
pop
jo
int
pop
push
or
addr16
test
repnz
sbb
test
jg
pop
pop
mov
mov
ss
lods
sbb
xchg
push
test
mov
loop
ja
push
cwtl
inc
add
sub
mov
xor
mov
incb
testb
in
imull
dec
into
in
idiv
cmp
je
pushl
pop
sbb
cmp
jne
mov
cmp
jge
add
sbb
or
lahf
std
in
xlat
imul
sub
push
lea
mov
loop
fidivrs
mov
pop
decl
stos
pop
or
lret
in
jge
sbb
xlat
sahf
or
xor
int
test
mov
adc
into
inc
repz
stos
in
dec
push
dec
sarl
adcb
add
scas
pushf
mov
push
sub
pushl
or
add
cmpsl
cmpl
jle
mov
or
xchg
fidivrs
pop
or
push
lea
sar
dec
clc
ss
jne
enter
inc
icebp
sub
add
outsb
jecxz
inc
inc
lahf
xor
jne
jne
add
jge
adc
add
inc
pop
and
test
inc
fwait
mulb
cltd
mov
jl
push
push
sbb
lret
clc
out
pop
pop
jo
aam
js
lahf
adc
in
mov
push
in
add
add
inc
inc
outsl
push
or
mov
adc
insl
mov
popa
fsubs
push
push
cld
inc
jl
les
and
mov
pop
fs
xor
inc
fs
adc
xor
orb
fcomps
cmp
push
and
jae
mov
or
jl
loope
sub
fistpll
clc
jmp
sbb
nop
fildll
pop
push
jl
lret
and
mov
xor
xor
enter
je
xor
cmp
xchg
in
push
movsb
gs
aaa
cmp
out
inc
push
adc
imul
lods
addb
add
call
pop
and
jne
and
sub
sbb
push
ret
sbb
js
pop
sti
mov
shlb
mov
cmpb
xor
push
cs
cwtl
inc
and
ljmp
aaa
fstpl
mov
sub
lea
mov
xor
jno
out
mov
cmp
and
push
imul
xor
xorb
cmpb
ja
je
fdivrp
divl
rorl
lea
shrb
sbb
outsb
pop
mov
push
push
movl
jg
add
imull
sbb
pop
or
std
jg
xor
jb
gs
xor
cs
insb
movl
je
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
and
jno
sub
loopne
and
jge
daa
movb
int3
push
dec
mov
sahf
aam
add
sbb
and
lock
sbb
or
push
test
or
pop
outsb
push
sub
mov
sub
out
inc
stc
int
in
mov
cld
aas
iret
adc
add
mov
repnz
lods
nop
fmuls
mov
inc
xchg
std
lock
sti
das
rcrl
cmpsb
lods
repz
mov
cmpb
mov
jge,pt
movsb
or
mov
fdivl
xor
mov
add
cmp
lock
cmp
jne
clc
fst
ret
popf
inc
xorl
add
out
ret
or
push
mov
gs
mov
je
das
popa
and
nop
push
and
fbld
pop
xlat
fldcw
call
arpl
mov
aaa
xlat
inc
adc
rclb
push
and
push
inc
or
adc
test
add
adc
push
mov
sbb
lds
push
mov
mov
dec
mov
mov
mov
mov
mov
mov
sbb
add
mov
push
mov
rolb
aad
mov
incl
mov
sbb
xor
les
mov
inc
cmp
or
xor
jge
mov
mov
sub
mov
xchg
jae
cmp
inc
js
sbb
xor
inc
add
push
movsb
jg
jg
fsubrs
or
mov
pop
mov
or
cmpl
int
test
mov
popf
ret
sti
and
mov
movsb
pop
sub
dec
insb
les
test
push
pusha
pop
mov
ja
movsb
adc
dec
mov
push
inc
mov
inc
rcrl
les
xor
shrb
mov
adc
outsl
pop
sbb
mov
pop
pop
ret
sbb
je
xchg
out
imul
push
call
pop
sub
mul
mov
push
mov
dec
adc
or
sub
mov
mov
ret
add
sbb
sub
cmpb
adc
or
sbb
ret
sbb
lods
inc
cmp
pop
inc
mov
fdivl
cmp
divb
leave
mov
pop
xchg
xor
dec
inc
cmp
ja
mov
inc
jmp
add
pop
xor
cld
ja
fstpt
or
mov
adc
sbb
and
scas
sar
dec
lret
add
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
mov
inc
add
jb
lea
ret
xchg
addl
add
dec
bound
mov
test
sub
repnz
cld
mov
pop
push
hlt
movzbl
inc
test
je
add
jae
xchg
dec
loope
and
je
cmp
ja
cmpl
jne
fidivrl
shl
or
mov
push
lea
jg
inc
dec
cld
mov
out
adc
lahf
add
nop
or
xorb
out
adc
or
movl
pusha
jmp
inc
mov
ret
aaa
inc
or
stos
sbb
adc
pop
idiv
xorb
sbb
or
jb
inc
dec
test
adc
pop
sbb
packsswb
nop
mov
cld
lods
mov
int3
je
add
dec
add
xor
pop
mov
ret
cwtl
fisttpll
cmp
mov
lods
test
test
sbb
dec
ja
or
aam
push
xchg
imul
imul
inc
jb
xchg
pop
imul
jo
pop
cmp
mov
mov
push
lcall
xchg
pop
inc
pusha
add
jae
push
xorl
mov
pop
je
test
enter
inc
push
inc
mov
imul
and
inc
push
mov
lock
sbb
popa
popa
outsl
rorb
rorb
xchg
arpl
pop
mov
jbe
add
sbbl
ret
cmpl
cwtl
mov
rorb
roll
int3
or
push
clc
add
pop
sub
jmp
sarb
pop
dec
xor
orl
push
sub
rorb
adc
mov
push
sub
inc
jo
mov
out
or
xchg
xchg
mov
into
mov
mov
xor
sbb
test
or
rclb
cmp
pop
clc
sbb
fnsave
cmpl
push
adc
loop
add
pop
testb
push
push
cs
aaa
push
rorb
or
cmp
lcall
insb
add
jns
push
dec
push
mull
loop
mov
ret
mov
loop
mov
push
xchg
mov
adc
mov
mov
insb
idivb
movsb
or
mov
cmp
aaa
cld
pop
daa
push
push
or
or
or
add
movsb
xchg
or
mov
xchg
sub
dec
rcrb
out
jle
shr
push
insb
xchg
sub
ja
enter
sti
outsb
add
push
or
insl
ja
add
dec
push
dec
inc
aaa
mov
std
ja
testl
mov
fs
gs
aas
jnp
sub
adc
jb
jns
es
imul
bound
inc
push
outsl
arpl
out
mov
jne
je
dec
outsl
je
imul
jge
std
mov
ds
outsl
inc
arpl
or
insl
int
ret
or
jb
xor
xor
jg
loopne
outsl
insl
bound
outsl
js
pop
push
imul
outsl
ja
nop
outsb
cmp
andps
outsb
dec
inc
xor
mov
mov
push
sti
add
dec
cld
sub
jb
lock
jb
aam
jb
jb
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
sub
hlt
cmp
cmp
lock
call
cmp
aam
cmp
cmp
int3
enter
cmp
sarb
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
insb
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
fs
push
dec
pushf
pushf
pushf
pushf
inc
inc
push
dec
pushf
pushf
pushf
pushf
pop
pop
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
sub
dec
dec
dec
dec
hlt
lock
call
in
fmull
dec
aam
int3
mov
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
xchg
xchg
fildl
enter
or
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
leave
leave
test
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
sub
hlt
lock
in
in
call
in
aam
in
in
int3
enter
add
test
addl
xchg
mov
adc
lock
and
or
adc
sahf
out
sbb
and
aam
loopne
and
imul
cltd
and
cmp
jl
cmp
xlat
add
shrb
jp
and
ret
in
inc
cmp
push
mov
push
mov
push
sbb
pusha
or
jne
push
gs
and
sti
in
sub
cmpl
pop
lods
str
or
lea
popa
gs
sar
aaa
add
and
push
dec
inc
inc
dec
add
outsl
scas
std
in
mov
pop
push
dec
dec
dec
push
inc
push
dec
sti
fdivrp
mov
push
push
dec
push
push
pop
sub
push
inc
dec
pushf
dec
popa
mov
inc
push
das
pop
cmpsl
jp
xor
out
call
or
inc
scas
mov
cmpsb
psrld
jo
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
jae
jb
stos
stos
lods
lods
imul
push
push
inc
outsl
out
jo
add
adc
add
adc
je
insb
jae
fmull
or
fbld
sbb
nop
in
push
push
or
popa
jb
push
nop
pusha
js
fsubrs
adc
jle
loopne
mov
in
scas
data16
fnstsw
push
mov
movl
js
gs
mov
mov
mov
aas
xchg
push
inc
inc
bound
je
adc
das
js
mov
fdivs
dec
inc
jnp
or
insb
mov
push
leave
leave
insb
les
mov
push
outsl
testl
or
outsb
mov
inc
jb
mov
subb
movsb
jb
shr
es
xchg
sub
js
jg
mov
fdivrs
add
push
sbb
cs
sub
xor
mov
aas
xchg
or
imul
mov
jb
scas
mov
mov
popa
outsb
gs
loopne
data16
or
dec
outsb
jbe
jb
insb
outsl
ja
dec
xor
cmp
cmp
inc
and
dec
in
inc
sti
gs
xchg
scas
xchg
lock
jbe
imul
outsb
scas
in
fstl
push
xchg
insl
jle
gs
andl
jb
scas
inc
addl
adc
pushf
scas
mov
pusha
mov
fs
inc
sbbb
scas
ds
lock
mov
orl
add
daa
push
test
fcoms
or
inc
and
in
inc
push
push
pop
xlat
push
or
scas
sbbl
add
inc
fdivs
push
adc
sbb
popa
sbb
test
inc
dec
dec
push
push
or
lock
push
nop
shrb
push
inc
or
arpl
nop
sbb
xchg
sub
je
mov
or
je
ds
or
popa
and
insl
sub
shlb
push
mov
js
inc
popa
fsubl
xchg
int3
adc
xorl
push
pusha
add
adc
dec
test
out
mov
sbb
jo
repnz
mov
push
mov
lock
or
stos
sbbl
or
adc
popa
data16
cld
aaa
push
pop
jle
add
xor
or
xor
or
jo
xor
xor
sbb
mov
xor
inc
cwtl
insl
popf
mov
gs
outsb
addr16
inc
or
cmp
cmp
sbb
cmp
sbb
push
mov
cmp
repz
test
loopne
xor
outsl
push
xchg
mov
icebp
xchg
push
inc
pop
add
mov
into
cmp
int3
pop
add
fisttps
mov
push
adc
jb
sub
loop
popa
fs
je
cmp
inc
jl
int3
add
loop
pavgw
sbb
mov
push
ds
lret
and
repz
outsb
push
adc
decl
mov
jnp
sbb
push
loopne
sbb
das
js
sub
test
fimuls
aas
xor
adc
das
push
and
icebp
xor
dec
or
push
push
imul
fsubs
jo
inc
push
mov
lods
outsb
arpl
shlb
ljmp
pop
inc
ret
adc
repz
outsb
adc
adc
xchg
mov
mov
aam
test
xorb
ret
pop
xor
sbbl
cmpsl
mov
mov
push
sbb
mov
mov
test
rcrl
shrb
or
mov
adc
mov
add
dec
cmpsb
les
xor
je
nop
push
adc
cmp
mov
adcb
cld
mov
addb
ret
xor
sbb
xchg
shlb
les
rorl
add
jmp
mov
dec
cmp
cmp
jae
data16
dec
mov
add
add
xchg
outsl
movhps
dec
push
pop
add
jno
or
sbb
leave
montmul
cmpsb
inc
pop
or
repz
add
push
imul
sub
out
outsl
ja
js
xor
clc
add
rorl
jg
cltd
jecxz
inc
sahf
cmp
mov
jg
sub
pop
add
pop
adc
pop
in
jg
mov
rolb
aaa
xlat
dec
mov
push
jg
and
std
add
pop
jg
ss
pop
cmp
jne
cmc
popa
loopne
pop
inc
pop
or
neg
out
pushf
add
add
push
push
mov
mov
ffree
jmp
fstpt
mov
xor
push
cmp
clc
fiadds
sub
add
cmp
jg
in
ja
push
outsb
cmp
or
sbb
and
fdivs
pop
lds
sbb
cmp
je
hlt
or
pop
test
jl
mov
pop
pop
dec
sub
jo
inc
pop
or
sub
cmp
jne
jge
add
add
cmp
jno
test
pop
cmp
inc
or
fisubrl
xor
lahf
shlb
outsl
enter
or
ljmp
mov
out
ss
insb
cltd
pop
lds
xchg
mov
sub
int3
jmp
pop
int3
dec
out
fsincos
add
aas
or
mov
loope
mov
inc
cmp
jl
jl
jmp
jbe
adc
or
fcoml
dec
sub
clc
lock
lret
lcall
test
ret
push
jns
or
push
mov
pop
or
xchg
push
mov
lods
imul
adc
ss
add
dec
push
loopne
dec
cwtl
push
notl
xchg
adc
jne
ja
outsl
inc
fdivs
and
sbb
pop
aam
fildl
adc
inc
das
out
xor
std
jne
or
mov
mov
jg
out
out
and
mov
sub
loop
cli
jne
mov
dec
orl
add
dec
mov
call
mov
sub
mov
mov
in
jle
and
aaa
sbb
mov
nop
shrl
imul
push
iret
lahf
jl
mov
imul
sub
adc
idivb
inc
mov
add
sub
jb
or
add
in
add
or
jl
jmp
cmpb
out
test
ljmp
rcrb
outsl
inc
mov
outsb
mov
je,pn
or
mov
push
or
dec
jne
jmp
test
movsb
sub
cmp
cwtl
sahf
push
fcmovu
mov
or
sarb
ret
push
ja
mov
inc
dec
mov
ret
push
push
push
xor
dec
adc
cli
cmp
push
pop
mov
ljmp
adc
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
fcompp
ljmp
cli
push
mov
sub
xor
push
outsb
cltd
rorb
cs
xor
inc
inc
dec
mov
xor
loope
jp
jo
dec
loopne
sbb
cmp
out
cs
ja
pusha
movb
dec
inc
or
adcb
mov
cmp
sbb
hlt
and
lcall
pop
mov
jne
daa
andl
push
and
fistps
ret
add
push
add
rorl
fwait
fdivr
mov
cmp
add
clc
mov
add
push
sub
rcrl
loope
mov
ffree
ffree
ffree
ffree
pop
or
pushf
aad
add
fists
push
frstor
push
or
subb
xchg
inc
rcrb
add
push
in
lock
scas
aaa
and
hlt
or
sbb
or
es
loop
inc
add
add
fwait
rorb
scas
mov
scas
push
sahf
sarl
pusha
or
push
test
imull
add
jnp
xor
cmpsl
mov
sete
pop
or
and
hlt
iret
les
inc
xor
jno
add
inc
loop
cld
iret
mov
lahf
mov
add
add
pusha
sub
mov
sarb
nop
orb
xchg
and
les
mov
adc
sub
adc
ficoms
int3
add
or
loopne
and
or
daa
jmp
call
jl
inc
mov
test
in
lods
in
mov
stos
addb
push
pop
rclb
mov
movsl
push
add
pusha
es
pop
test
pop
pop
dec
push
mov
fidivrl
dec
hlt
jne
mov
add
inc
xchg
or
or
lock
add
andl
insl
lock
setne
jmp
cmp
xchg
fmull
test
and
inc
adc
dec
enter
pop
inc
ret
push
imul
in
xor
add
mov
sub
ret
mov
loope
jmp
xor
push
mov
jg
imul
or
mov
mov
cmp
ja
mov
and
ja
testb
xor
push
adc
push
je
in
sub
inc
mov
sahf
mov
push
mov
mov
pusha
cmp
push
mov
xchg
dec
fstpt
or
aad
dec
lahf
loopne
xchg
pop
int3
pop
push
popa
pop
or
outsb
or
addr16
dec
movsb
mov
aas
xor
pushl
out
je
inc
cli
xor
push
rcr
xor
xchg
shlb
jnp
test
lea
subl
and
sbb
pusha
mov
dec
ja
lds
cmp
pusha
fnsave
test
fsubs
jg
loopne
pop
inc
cmpl
test
add
gs
or
out
adc
lock
je
bound
call
js
aaa
add
ds
sarb
rorb
testb
or
aas
in
adc
hlt
xlat
xor
sahf
sub
jmp
lds
and
dec
ret
sub
adc
iret
loope
or
fimull
popa
mov
outsb
out
subb
xor
add
add
or
or
cld
cmpsl
lods
popf
daa
addb
cld
out
add
inc
pop
ret
xlat
cwtl
ljmp
push
add
gs
ret
jne
cltd
mov
sub
cmp
and
jl
sbb
pop
sub
fcmovnb
testb
lods
enter
mov
pop
inc
xchg
lea
mov
add
jge
mov
dec
mov
pop
sbb
sub
xlat
add
nop
jp
cwtl
jne
cmp
sahf
outsb
xchg
lock
test
daa
in
and
psubsw
push
inc
dec
pop
jl
pushf
cltd
lock
js
fucomi
enter
adcl
mov
nop
mov
cmc
add
mov
andb
out
push
or
je
add
sti
xchg
or
pop
add
inc
loope
mov
inc
sbb
pop
fwait
add
sub
lock
xor
inc
add
negb
jne
push
inc
xor
push
adc
ficomps
and
rclb
cmp
push
add
mov
or
inc
add
or
and
daa
call
push
dec
mov
stos
mov
outsb
pop
pop
pop
mov
roll
push
pop
sbb
dec
call
sbb
push
std
lea
hlt
jmp
int
sub
and
sbb
xor
loopne
inc
mov
popa
inc
aaa
movsb
pop
mov
call
repnz
call
scas
inc
outsl
pop
push
arpl
movzbl
out
loopne
pushl
mov
fadds
xlat
cmpsl
jne
dec
orb
and
push
xchg
or
push
adc
or
loopne
inc
dec
sti
add
xchg
movb
mov
mov
pop
ds
jae
mov
pushf
clc
fwait
mov
cs
mov
mov
mov
and
ret
cmp
pop
jg
push
mov
fadds
jle
pop
pop
jne
or
roll
inc
cmp
addb
aam
cmpl
dec
in
movsb
or
movsb
loopne
adc
aas
call
outsl
jle
aam
jne
pop
xchg
and
jo
add
sbb
shll
push
and
push
jno
movsl
push
aad
call
push
xchg
fs
repz
push
hlt
clc
cld
push
jnp
push
lods
push
jle
cld
imull
mov
hlt
in
xchg
dec
jnp
aam
sbb
loope
dec
or
xor
pop
jg
mov
add
hlt
or
fdivrs
pop
rclb
subl
sbb
inc
pop
inc
mov
adc
es
neg
cli
jg
test
cbtw
add
je
test
insb
movsl
ja
jne
mov
mov
mov
push
pushl
and
out
cmpsb
lea
mov
ds
pop
sub
test
mov
add
out
sbb
adc
push
mov
inc
decl
pop
ret
mov
push
cs
out
repz
mov
ja
inc
xor
mov
mov
ljmp
rep
mov
movsb
jmp
pop
pop
pop
xchg
or
xchg
arpl
insl
aam
pop
jg
mov
cmp
iret
mov
nop
data16
shrb
lock
dec
cmp
jne
cli
jb
add
sahf
fwait
lret
dec
add
sbb
add
push
dec
add
jne
int3
and
enter
jno
pop
jno
sub
jb
jae
pop
or
lock
iret
loope
cmc
add
loope
push
or
push
xor
or
clc
push
pop
invd
and
adc
pop
mov
cmp
or
daa
aad
fistps
sub
sub
je
xor
xor
rclb
shll
es
je
inc
in
ret
out
lret
test
dec
je
mov
mov
pop
sub
jbe
sbb
pop
mov
lods
or
mov
push
add
pop
mov
jne
or
rcrl
sub
add
cmp
sahf
pusha
sbb
cwtl
adcl
ret
lds
xor
test
lods
pop
leave
cmc
nop
inc
jbe
mov
mov
adc
push
cwtl
push
out
push
pusha
fld
add
jbe
pop
jbe
pop
add
insl
js
ret
out
mov
mov
add
cmp
cli
int
xor
push
and
loope
sub
pop
mov
jbe
cmpl
sbb
push
jp
sbb
ficompl
rorb
pop
adc
sbb
scas
pop
adc
or
popf
mov
pop
mov
popa
sub
ds
jbe
or
jge
adc
jp
and
lods
cmp
je
pop
js
subl
jle
xchg
stos
sub
jmp
mov
out
add
xchg
es
jmpw
bound
hlt
and
lods
jmp
inc
in
movl
inc
mov
sub
mov
lret
xchg
outsb
pop
in
adc
jae
fildl
popa
jg
loopne
lret
roll
je
fdivp
mov
rep
sbb
pop
or
adc
push
ja
sbb
mov
fldt
cmp
data16
cmp
ja
imul
or
add
ret
and
in
dec
jle
sbbl
cmp
pusha
jo
jecxz
jl
mov
ret
je
lcall
fisttps
pop
sub
or
xor
mov
push
add
scas
insl
clc
jmp
mov
sub
or
das
pop
movsb
repz
sahf
negl
iret
ss
push
hlt
aad
pop
xchg
xchg
push
inc
call
jecxz
lea
and
outsb
dec
movsl
fsubrl
push
lods
fs
int
rolb
sbb
or
dec
mov
ds
push
pop
outsb
adc
jb
jle
sub
out
pushw
cmp
jo
and
test
cld
lahf
scas
xchg
push
ret
sbb
add
mov
testb
aad
or
jmp
xor
inc
inc
ds
or
enter
pushf
dec
out
add
scas
jmp
push
stc
cld
call
pop
js
mov
add
or
adc
dec
fdivl
or
xchg
ds
jns
ja
dec
mov
fcomps
push
leave
sbb
lods
out
insl
xchg
add
out
push
push
push
inc
je
mov
or
je
mov
mov
stc
inc
je
mov
dec
je
dec
jl
mov
mov
loope
pop
cmp
jbe
mov
or
xchg
adc
ja
movb
mov
push
inc
dec
cvtpi2ps
popf
mov
repnz
iret
dec
lcall
insb
xchg
ret
xor
and
push
scas
lahf
jle
pop
add
out
adc
in
repnz
daa
xchg
sahf
scas
add
xchg
sahf
xchg
out
in
xchg
adc
xchg
testb
pushf
or
or
pop
idivl
push
fistl
cmpsl
push
or
mov
jns
arpl
jmp
sahf
ljmp
cmpb
nop
add
jmp
jmp
jmp
add
and
ljmp
xchg
push
mov
pop
mov
out
cmp
pop
dec
notl
and
adcl
mov
pop
mov
push
mov
ret
cltd
or
mov
sub
jbe
jg
mov
cli
dec
test
fmuls
mov
add
fs
cwtl
daa
add
rclb
push
pop
hlt
int
das
mov
dec
sbb
cmp
aas
jb
imulb
sub
sbb
dec
cld
lea
add
dec
mov
dec
sub
jmp
push
xchg
fdivr
insl
rcll
jg,pn
jmp
add
adcl
sub
mov
divl
cmpl
lret
fcmovne
lea
mov
popa
mov
in
rcll
in
push
jmp
or
xor
mov
dec
add
mov
or
jne
xor
cld
decl
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
das
add
pop
into
mov
int3
aam
adc
cmc
call
add
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
adc
mov
aam
inc
cld
mov
cld
jge
inc
sti
mov
add
hlt
mov
in
mov
add
mov
jne
lcall
fcoms
jle
fisttpl
sbb
mov
adc
jb
fidivrs
dec
clc
adc
jge
push
dec
inc
sub
mov
cs
out
mov
fsubrl
and
jbe
in
xlat
imul
or
je
add
or
mov
add
popf
enter
ljmp
roll
push
fcomps
lods
push
mov
aas
daa
repnz
dec
inc
dec
inc
dec
lods
or
inc
sub
sub
dec
ret
xor
cmpsb
xchg
insl
jo
ret
std
mov
aam
cmp
aad
jg
cmp
jl
pop
sbb
pop
mov
mov
stos
neg
sbb
stos
jmp
mov
filds
je
stos
loop
movlps
pop
pop
mov
clc
dec
mov
mov
scas
out
cs
mov
push
dec
sbb
cwtl
test
mov
sub
in
or
clc
leave
mov
mov
mov
movsb
insl
cmp
pop
test
cli
adc
mov
sbb
es
fcos
sbb
dec
mov
div
mov
inc
test
jne
pop
sbb
in
stos
xor
call
std
imul
or
je
inc
jne
pop
ret
inc
mov
in
test
and
test
in
or
repnz
cmp
lds
lret
add
lea
add
jle
inc
je
push
push
cmp
adc
out
imul
in
inc
jmp
or
mov
inc
loop
ret
push
adc
sub
hlt
fimuls
and
inc
add
and
and
adc
and
in
jbe
sub
sub
xor
sub
jnp
mov
es
in
pushf
jnp
sub
xor
sub
out
sub
xor
add
call
adc
stos
inc
dec
jmp
test
xor
lods
orl
and
or
add
repz
mov
cmpl
int
rcll
push
pusha
lret
lea
sbb
sahf
mov
popf
mov
mov
adc
scas
inc
lcall
inc
enter
sahf
mov
jb
in
mov
mov
test
in
sbb
sarb
nop
adc
inc
test
je
xchg
outsl
repz
mov
shrb
ret
movsb
cmp
cld
jne
testw
dec
in
clc
dec
js
or
xor
inc
mov
push
fldt
je
imul
pop
or
clc
adc
clc
call
ja
out
fabs
push
repz
inc
pop
frndint
in
out
rolb
scas
fs
jge
fwait
mov
std
fildl
testb
je
fidivl
jne
lea
mov
js
mov
nop
shr
and
rcrb
out
push
cmp
xor
stos
mov
or
mov
dec
lds
cmp
jae
mov
cmpb
jb
movb
js
decb
and
pop
fwait
rcrl
pusha
xor
jmp
mov
cmpb
notb
cmp
ljmp
clc
push
add
inc
out
stos
pop
lock
adc
or
or
je
pusha
sbbl
adc
outsl
xchg
or
adc
jl
mov
cmpsl
sub
sbb
jae
dec
add
in
mov
mov
fildll
cli
mov
clc
xchg
cmp
mov
shll
or
sbb
dec
hlt
pop
lcall
mov
and
jne
dec
sub
cmp
mov
inc
or
ljmp
cld
adc
sub
movb
cmpb
divl
adc
push
mov
mov
or
sub
inc
outsb
cmp
mov
lret
f2xm1
fwait
call
je
fldz
cmpsb
mov
ljmp
sbb
fwait
lods
or
icebp
daa
sbb
fsubrp
xor
pusha
jne
inc
sbb
dec
and
cmc
fdivrp
cmp
jne
inc
push
sub
cwtl
jne
mov
adc
add
ja
push
mov
adc
aas
jmp
sub
sbb
test
adc
test
mov
and
push
int
cmp
mov
test
or
fimull
cmpsb
adc
add
jmp
aaa
mov
lahf
inc
imul
push
push
fldl
pop
lock
imul
push
cmp
aaa
add
or
add
sub
push
mov
jmp
bswap
push
dec
cmp
mov
and
rolb
pop
add
add
and
filds
mov
pop
sbb
aam
clc
push
ret
sub
fstpl
fwait
mov
push
in
out
push
shrl
jns
add
or
inc
js
adc
jge
adc
adc
mov
xor
push
adc
xchg
push
in
add
clc
out
cmpsb
jns
xchg
cmp
jae
or
cmp
inc
stc
cli
es
test
sahf
jae
movzwl
push
pop
outsl
out
data16
add
shrb
pusha
jb
ret
rcll
call
fisttpl
mov
xor
fstpl
fwait
and
dec
js
loop
adc
lret
movsb
dec
filds
sahf
push
rolb
movsl
or
mov
in
push
cmpl
cmp
and
jg
imul
loop
add
adc
movsb
fimull
mov
fists
lret
push
cmp
outsb
fnstcw
call
mov
and
enter
add
and
fldenv
mov
rcrl
add
jp
mov
ds
push
pop
loop
std
add
les
shlb
scas
push
aam
dec
enter
addb
dec
orl
push
jb
or
jb
add
push
sti
insb
je
mov
sub
adc
fdivrs
add
inc
dec
jne
sub
dec
mov
aas
push
jo
cld
cltd
idiv
imul
jns
pop
negb
ret
cli
add
repnz
ds
ds
add
ret
pusha
ret
or
and
push
xchg
std
bound
push
xor
das
cmp
add
mov
dec
call
jo
sub
dec
in
test
jg
mov
insl
push
clc
hlt
jbe
mov
inc
test
sub
inc
push
cmpsb
pop
inc
xchg
loope
filds
cmp
jl
addl
into
lcall
shl
lock
pop
pop
xchg
lods
mov
dec
ljmpw
fwait
mov
sub
cmp
insb
fcoms
outsl
xor
sub
mov
mov
pop
sbb
sbb
push
sarb
xchg
sub
lock
push
stos
push
ret
push
jl
lret
dec
cmp
fstp
insl
dec
dec
cmp
jb
adc
sbb
fists
jmp
xchg
sbb
clc
shll
adc
mov
add
push
scas
jbe
or
mov
ret
ds
xchg
iret
cmp
fwait
loope
mov
xlat
jbe
shrb
mov
outsb
or
sub
cli
cmpsl
push
jmp
cmp
test
movsl
js
inc
fstpl
lret
xor
aam
push
push
xchg
sub
mov
mov
sub
cltd
js
roll
stos
add
adc
fisubrl
and
mov
xor
xchg
xor
xchg
sti
mov
push
dec
test
and
ret
push
push
lcall
in
pusha
or
mov
test
jp
in
mov
or
xchg
ss
addr16
xchg
mov
lea
xchg
roll
sarl
or
dec
sti
je
mov
and
inc
inc
hlt
ficoml
js
add
pushl
add
mov
lea
or
xchg
repnz
movb
rorb
add
jecxz
lahf
lret
in
push
in
jge
call
dec
js
jecxz
pop
in
xchg
loopne
lea
add
jo
or
xor
push
push
repnz
adc
enter
sub
mov
push
push
xor
lods
iret
fcomps
or
stos
jl
sbb
and
mov
push
mov
push
sub
cltd
pop
mov
or
and
mov
pop
ret
imul
enter
push
in
imull
cmp
fs
mov
or
push
mov
sar
aas
nop
inc
jo
jbe
shrl
or
adc
push
cmp
add
cltd
mov
ret
mov
mov
push
mov
ljmp
sub
sub
rorl
inc
addr16
imul
inc
and
daa
cmp
and
jmp
and
adc
loope
or
inc
cmpb
jne
lahf
inc
cs
sub
into
dec
add
lods
in
pop
cmp
mov
vmwrite
pop
add
ficompl
aam
mov
add
pop
inc
clc
and
and
es
cmp
mov
inc
add
sub
incl
in
add
inc
dec
jecxz
sbb
sbb
pop
repnz
cmc
adc
jae
pop
xchg
shlb
adc
cmpsl
loopne
jge
int3
sti
ja
lock
sbb
adc
aad
popf
mov
jge
dec
adc
xchg
sbb
pop
loop
mov
fmulp
cmp
xchg
fadds
lods
mov
or
xor
fnstenv
or
or
dec
push
or
or
add
add
add
or
cmp
outsl
or
data16
mov
dec
shll
sahf
jge
jecxz
ret
insl
lock
filds
les
push
mov
dec
fmull
jp
inc
jl,pn
add
sti
xchg
loopne
sub
mov
inc
jbe
and
popf
dec
push
divl
push
pop
sahf
and
mov
lods
adc
sbb
dec
rolb
rolb
sbb
cmpsb
fsubrp
or
add
sub
xchg
mov
into
shll
pop
leave
mov
fmull
dec
add
jmp
out
add
and
les
out
mov
rclb
mov
adc
lods
sub
mov
pop
loopne,pn
lods
test
js
mov
push
lahf
push
inc
je
notl
in
subb
jl
add
adc
and
add
je
sbb
pusha
sub
je
pop
je
jmp
addr16
fwait
push
jne
mov
shld
xchg
sub
mov
int3
add
sbb
add
adc
mov
lahf
mov
inc
jnp
shlb
push
inc
ljmp
adc
or
and
cltd
jbe
or
jmp
sbb
insl
sbb
jo
and
or
sbb
mov
mov
jecxz
add
leave
sub
add
inc
jno
cltd
in
orb
jo
jmp
daa
sub
jbe
lret
cmp
sbb
lds
add
addl
rorl
push
ja
add
push
xchg
in
xchg
ja
stc
push
roll
jmp
and
sub
aam
push
shll
mov
and
or
sti
out
pop
dec
stos
lret
inc
iret
and
pusha
lds
iret
adc
or
mov
sub
loopne
popf
testl
cmp
pop
dec
xor
inc
sbb
cs
stc
jbe
sbb
jmp
xchg
or
cmp
ss
orb
jg
daa
pop
sub
popa
mov
test
shrl
clc
sbb
loop
inc
mov
test
aam
add
dec
das
push
dec
bound
adc
push
add
mov
xchg
lahf
clc
xchg
mov
lret
mov
sub
sbb
push
mov
adc
cmp
lea
les
scas
and
nop
add
incb
jp
dec
cmp
jg
je
mov
push
add
xor
mov
ds
cmp
cmp
or
in
mov
sbb
lret
push
pop
xor
out
inc
ljmp
adc
pop
pop
and
lock
or
sbb
xchg
adc
ret
add
mov
divl
daa
adc
mov
jns
and
xchg
mov
xor
xor
daa
jno
outsl
push
repz
xor
into
cmp
and
cmpsb
sarb
and
ret
push
in
jbe
das
mov
in
add
repnz
sbb
pop
inc
or
mov
sahf
mov
jecxz
or
scas
mov
sub
pop
jl
rolb
cmp
jne
sub
das
imul
sub
and
sub
je
dec
mov
test
sub
je
jmp
mov
jmp
push
push
push
out
mov
jmp
inc
out
clc
jle
out
xor
jg
shrl
add
jns
mov
popa
roll
mov
divb
jnp
jl
pop
mov
cwtl
sub
pop
mov
pop
mov
test
inc
fdivrl
add
lahf
sub
ss
popf
aad
push
jmp
push
fdivs
nop
xor
mov
xor
cmp
jg
sbb
dec
xchg
jmp
ret
ljmp
mov
shlb
push
add
testl
popa
dec
cld
gs
mov
shlb
sub
inc
add
pop
loopne
hlt
mov
dec
sbb
popa
call
sbb
cmp
jl
call
aaa
pusha
repz
mov
dec
adc
xchg
pusha
sub
dec
addr16
sarb
das
mov
fmull
xorl
sub
xlat
ljmp
jno
adc
fidivrl
fidivrl
in
jle
mov
rolb
lods
shlb
in
add
sub
or
pop
or
inc
sahf
out
or
inc
sahf
lret
in
fprem
call
repnz
jb
and
xchg
jge
es
in
iret
imul
lock
iret
jae
cltd
out
lock
out
mov
and
cmpl
lds
add
jo
jge
add
fstps
or
push
xlat
loop
rcrl
out
fdivrp
out
sbb
aaa
add
cmpb
jle
and
fs
sub
outsl
divb
mov
add
or
sub
jnp
inc
mov
adc
cmp
mov
cwtl
mov
cwtl
inc
dec
cmp
repz
mov
and
stc
ljmp
jne
adc
jne
jl,pn
ret
cmp
xor
dec
sbb
dec
adc
cmpsb
cmp
jle
mov
push
nop
and
das
push
jne
mov
dec
notb
movl
jae
xor
xchg
lahf
lret
fdivrs
push
xor
repz
xlat
add
cmp
pop
repnz
fistl
decb
popa
in
mov
or
es
and
test
inc
and
pmulhuw
sub
nop
add
sbb
test
jp
sub
or
imul
and
add
push
or
or
dec
sbb
shll
sbb
out
je
test
inc
push
fadds
add
pushf
cmp
or
add
pop
pop
xor
sbb
test
ret
jge
cmp
push
enter
sub
or
ds
shl
jne
adc
or
lods
push
xor
push
repz
xchg
adc
or
imul
mov
cmp
xlat
xchg
pop
push
dec
push
dec
call
call
mov
and
cmp
inc
orps
mov
insb
loopne
div
mov
jns
lds
jle
adc
adc
add
push
outsl
mov
sbbl
insl
repnz
or
add
or
mov
xlat
std
or
add
sbb
or
and
fstpl
fwait
jmp
sbb
ja
adcl
push
aam
notb
push
push
push
push
push
sbb
incl
cmp
add
fdivr
add
sub
jb
or
xchg
xchg
cmp
test
fwait
je
stos
and
pop
mov
sti
push
sarb
pop
or
cmp
sets
aaa
or
add
orl
arpl
addr16
js
sbbl
push
clc
sub
leave
lods
mov
sbb
or
aaa
add
sbb
mov
in
fcoml
ja
test
jnp
and
sbb
std
push
insl
repz
or
or
fists
rorl
inc
inc
dec
push
adc
mov
mov
fs
out
mov
sbbb
push
movl
decl
sti
or
test
add
push
cld
xchg
push
fldl
add
fs
xchg
in
dec
call
or
sub
call
mov
sarb
lds
xchg
test
loop
pop
mov
inc
add
jl
je
xchg
cmp
push
sbb
adc
push
xorb
add
xchg
addl
sub
push
fnclex
cmp
inc
pop
mov
addl
sbb
push
xor
jmp
or
out
in
xlat
jl
lods
adcl
mov
add
fdiv
subb
std
cmpl
mov
fldt
inc
or
cmp
push
mov
dec
aaa
lret
hlt
push
or
ret
push
enter
mov
scas
pop
cmpl
xchg
sbb
rcrl
daa
add
fcom
or
inc
xchg
dec
clc
test
orb
mov
add
or
repz
aaa
jmp
cwtl
ss
pop
mov
ljmp
je
sub
je
mov
push
rolb
lea
pop
sahf
mov
arpl
mov
jnp
test
dec
enter
mov
lock
add
jge
mov
fmull
outsb
jnp
xchg
adc
call
and
xchg
mov
std
inc
int3
cld
add
jmp
mov
loopne
lahf
movups
jmp
icebp
pop
je
jns
in
jne
ss
or
and
xchg
add
jle
mov
shr
xchg
addr16
mov
lahf
sbb
inc
shrb
or
xor
sub
mov
xchg
test
mov
push
test
mov
or
loopne
pop
push
cmpsb
xor
jne
dec
out
cmp
test
dec
inc
pop
shlb
xor
add
xchg
mov
push
les
jmp
sub
xchg
pop
mov
mov
inc
push
repz
mov
xchg
sub
add
data16
and
sub
push
fwait
and
clc
sarb
mov
mov
sub
cld
loopne
inc
add
dec
loopne
fbld
cs
xor
mov
jns
iret
dec
cld
movb
mov
push
inc
push
mov
std
add
les
add
lods
cmp
or
mov
js
cmpsw
loop
push
imul
cmp
insl
pop
dec
sub
mov
pop
mov
add
hlt
mov
push
dec
neg
es
pop
jecxz
dec
mov
pop
push
cld
hlt
pop
pop
call
loope
js
inc
xor
subl
mov
inc
lds
in
jo
mov
pop
or
adc
lahf
xor
dec
adc
push
lods
lock
add
sbb
cltd
sub
andb
xchg
mov
dec
xorl
cwtl
mov
pop
sbbl
sbb
mov
cs
mov
jnp
push
fwait
dec
add
add
xchg
xchg
out
lods
or
pop
clc
fwait
mov
cmpb
sub
ret
mov
dec
push
or
add
adc
loop
and
add
mov
sti
push
jg
cmp
sbb
sub
frstor
jns
js
sbb
xchg
xchg
fdivs
inc
jo
jo
pop
cwtl
lcall
or
push
call
sar
lret
adc
ljmp
lods
cmpsb
adc
push
sbb
fwait
mov
mov
loopne
push
adc
pop
outsb
lods
int
nop
adc
ret
movsl
mov
rol
movsl
jo
cld
fldl
mov
push
add
cld
mov
aam
xor
movb
mov
cmpsl
mov
or
jge
clc
push
in
in
inc
outsb
push
loopne
lock
loopne
test
mov
jns
fchs
adc
adc
loope
ret
mov
aam
add
in
jne
push
leave
jo
js
xchg
imulb
fs
in
loope
out
mov
push
sbbl
enter
cmp
je
jmp
xor
inc
cs
cs
xor
and
sbb
mov
add
push
dec
shll
or
or
ss
loope
jb
leave
lock
mov
cmpsl
add
adc
mov
mov
test
fdivr
pop
cld
cmpl
leave
push
sbb
mov
jb
mov
sbb
mov
or
pop
in
inc
xor
and
and
fistl
in
movsl
add
adc
loope
dec
decb
and
mov
mov
mov
iret
ja
jnp
jae
or
ja
rcrb
enter
shrb
js
nop
xchg
mov
mov
cmp
pop
sub
and
xchg
cltd
movsb
rcrb
adc
out
or
jns
fsubrl
aam
nop
nop
adc
cld
aad
ret
lahf
xchg
push
cmp
push
lock
int
cld
std
rolb
or
sbb
dec
push
or
imul
je
sti
adc
lret
adc
ret
aaa
sbb
hlt
add
mov
addl
sub
sbb
or
adc
push
repnz
sbb
sbb
lock
push
mull
es
mov
mov
mov
and
out
sub
mov
adcl
or
cld
mov
lods
insb
add
fldl
cli
mov
inc
enter
jns
fdivrl
test
add
or
int3
mov
in
loop
shufps
adc
in
inc
pusha
lds
repz
es
inc
lock
xor
insl
jbe
adc
stos
pop
mov
mov
sbb
loopne
xchg
scas
jo
jne
daa
cmp
inc
loope
js
adc
push
sub
lcall
xchg
xchg
jo
cmpsb
pop
pusha
and
aas
mov
xchg
mov
mov
into
loopne
les
das
add
and
mov
adc
mov
mov
mov
cmp
jne
mov
dec
fnstsw
adc
add
adc
or
aam
clc
cmp
sub
dec
xor
inc
pop
enter
inc
cmp
jae
jae
xchg
in
xchg
test
stos
or
test
imul
sbb
xor
mov
xchg
mov
add
xchg
sbb
sub
addr16
mov
pop
push
cld
add
std
stc
cmp
shl
bound
dec
inc
pop
cmp
cmp
inc
mov
dec
jmp
dec
test
jl
xchg
cmpsb
adc
leave
or
jmp
iret
sub
and
or
inc
pop
mov
add
adc
loope
out
mov
fistps
je
jl
inc
dec
insl
xor
loopne
or
leave
cmp
daa
lods
fwait
movsb
push
fadd
out
lret
mov
test
cmp
jle
push
movsl
cmc
inc
test
ds
pop
xor
test
jg
adc
lods
lds
and
mov
ret
or
jmp
and
mov
push
and
sub
gs
inc
inc
jge
mov
inc
xor
mov
pop
leave
and
test
inc
scas
cmp
jge
fs
jne
sbb
loope
cmp
mov
aaa
pop
inc
cmpsb
add
lea
or
mov
outsl
sbb
cmp
add
dec
xchg
rcrl
insb
jle
pmulhuw
adc
sahf
jp
or
dec
and
add
pop
mov
mov
js
add
jle
repz
cmp
rolb
les
stc
icebp
daa
xchg
out
ficoml
pop
mov
adc
call
mov
push
mov
into
arpl
sub
js
sub
sub
push
daa
popa
fmul
mov
and
sub
xor
adc
icebp
add
dec
test
popa
loopne
and
enter
ret
rolb
pop
push
outsl
js
movlhps
std
popf
daa
mov
test
sbb
sete
adc
pop
mov
push
push
shlb
push
sub
mov
int
mov
fs
xor
shlb
mov
test
lods
xchg
mov
sarl
xchg
or
sub
shll
lahf
pop
sub
adc
xchg
je
cmp
std
loope
adc
pop
jbe
mov
addr16
sbb
or
aam
sbb
insb
sub
inc
mov
je
fwait
js
sbb
je
movsb
scas
scas
adc
aam
cld
push
pusha
test
lea
xchg
adc
jmp
inc
jge
dec
test
jnp
cmp
jecxz
and
sbb
jle
adc
ljmp
je
and
js
jge
jb
jmp
dec
mov
lds
lcall
in
inc
push
stos
or
sub
js
sub
adc
or
inc
outsb
scas
push
push
push
add
mov
dec
clc
sub
aaa
repnz
dec
dec
fiadds
add
ret
or
sub
cmp
jbe
sub
popa
sbb
test
push
sbb
adc
and
imul
inc
das
and
fs
sbb
cmp
pushf
lret
sub
adc
inc
xor
jne
jg
lea
cs
jge
in
push
add
or
pop
push
pop
pop
cld
outsl
mov
fdivs
inc
mov
inc
and
sbb
lret
jne
dec
cmp
jge
js
mov
pop
or
pop
jne
add
in
mov
clc
inc
push
or
inc
add
add
xorb
jno
push
push
sub
inc
adc
data16
jnp
jo
push
shr
mov
jecxz
jp
mov
inc
cld
test
cmp
movsl
pop
cmpl
jmp
movb
punpckhdq
fdivs
rorb
mov
pop
lods
sbb
test
sbb
pop
jp
push
xchg
sbb
dec
sbb
jne
push
scas
ljmp
mov
iret
cmp
adc
scas
fcmovu
mov
stos
xchg
xchg
adc
stos
xorl
aaa
lods
jge
adcb
push
rolb
xlat
mov
rolb
sbb
fdivrl
iret
or
cld
mov
push
sbbb
pop
jb
enter
das
mov
movsl
mov
xchg
fwait
pop
es
mov
adc
sub
pop
js
aam
pop
in
fcomp
mov
push
fld
push
imul
dec
repnz
sub
test
int3
mov
jo
push
hlt
enter
cmp
leave
enter
add
test
mov
jl
ss
sbbb
leave
xchg
rolb
bswap
mov
push
ret
sbb
cld
push
mov
sahf
jns
add
in
ret
lds
sub
or
out
ljmp
sbb
in
mov
sbb
popl
insl
das
fs
and
scas
fcmovne
scas
insl
add
fs
daa
aaa
cltd
mov
add
pop
jo
jecxz
lock
push
call
jmp
iret
cmpsb
dec
cmp
pop
push
fucompp
jmp
in
mov
and
jne
or
subl
testb
std
loopne
pop
xchg
adc
fnstcw
adc
test
mov
jle
hlt
sub
icebp
mov
fmull
jnp
cmpsb
lock
aam
insb
cmp
sarb
push
pushl
mov
roll
insb
xchg
sbb
insl
lods
adcl
insl
loope
pop
arpl
cmp
mov
mov
sarb
call
in
sub
mov
dec
mov
in
in
push
or
adc
test
jg
adc
push
push
outsb
imul
sbb
push
pop
sbb
pmaddwd
out
mov
pop
push
or
fs
gs
outsb
outsw
and
push
in
inc
mov
cmp
rol
mov
mov
or
or
jg
or
xor
inc
jmp
pop
pop
ret
pop
hlt
aaa
scas
add
pushf
clc
push
jp
cmp
fcoml
mov
jne
in
inc
sahf
int
sbb
fmuls
ret
or
out
jle
adc
mov
jge
std
paddw
test
jl
lea
cmpl
scas
dec
cs
cmp
and
mov
push
rcrl
jmp
cmp
popa
shrl
lea
push
inc
ret
call
mov
mov
jl
inc
and
cli
cmp
jne
popf
sub
int
mov
mov
xchg
cmp
xchg
adc
inc
in
and
or
inc
out
adcb
clc
lret
ret
dec
pop
and
addb
stc
ds
cs
or
hlt
inc
daa
in
mov
paddsb
leave
pop
aad
out
aaa
mov
xlat
sbb
add
or
scas
jb
fs
mul
push
mov
xchg
adc
mov
xor
in
adc
out
mov
pop
inc
fists
xchg
add
dec
call
and
call
inc
push
test
rolb
icebp
inc
daa
ds
loopne
pop
xchg
repnz
add
fcoml
imull
out
inc
add
adc
sub
push
imul
ret
sub
test
jb
gs
jo
add
push
scas
pop
xchg
lock
inc
aad
pop
call
ret
xchg
pop
sbb
aaa
loope
mov
in
mov
push
repz
cld
icebp
inc
cmp
jne
movzbl
cld
adc
pusha
cmpb
sbb
in
inc
inc
loope
daa
xchg
js
clc
inc
into
pusha
push
xor
and
inc
push
mov
out
push
xchg
test
dec
and
sbb
ret
insb
xchg
add
and
add
in
jne
push
push
or
call
sub
mov
movl
lea
into
xor
fists
mov
jge
js
daa
mov
loop
add
rorl
or
outsl
lock
loope
mov
lea
sub
and
sbb
bound
mov
std
lea
push
adcb
sub
shrb
imul
xorl
mov
lret
and
mov
mov
adc
out
clc
out
popa
loope
mov
pop
imul
pop
cwtl
mov
and
mov
out
mov
mov
pusha
enter
mov
sbb
popa
dec
pop
adc
mov
sbb
mov
cmp
stos
and
loope
sub
xchg
or
xlat
je
jns
or
ret
les
or
add
xchg
jmp
adc
je
dec
dec
pop
test
mov
xor
test
dec
mov
mov
dec
cmp
pusha
xor
mov
xlat
push
fiadds
inc
decl
cmpl
lods
sbb
ds
jo
stc
ret
mov
or
insb
pop
or
push
pop
xchg
adc
inc
cld
xchg
roll
add
cmp
je
cmp
loope
jmp
jbe
and
jecxz
xchg
pop
xor
js
fucom
push
dec
mov
add
jg
dec
or
mov
inc
cmp
inc
xor
mov
enter
mov
sbb
dec
push
inc
aam
mov
call
mov
inc
push
pop
xor
mov
push
cltd
or
or
pushf
mov
adc
out
dec
repnz
or
outsl
and
cmp
iret
inc
cmp
inc
adc
fildl
push
jne
cmp
jns
mov
cs
cld
adc
jp
mov
imul
mov
int3
xor
mov
call
in
jo
jmp
inc
inc
add
xor
adc
out
stos
ret
out
jle
mov
outsb
je
daa
cwtl
lock
fs
mov
adc
add
push
xchg
sbb
lcall
jo
lock
pop
xchg
push
dec
mov
xchg
iret
repz
fcoms
dec
rolb
out
mov
sarb
clc
imul
cwtl
out
jns
out
nop
hlt
mov
sub
js
mov
repz
idivl
pusha
push
dec
pop
push
fs
mov
inc
das
sarb
jle
push
inc
mov
mov
sahf
mov
sbb
sbb
add
call
adc
and
enter
push
cwtl
mov
mov
inc
add
add
fldenv
repz
js
mov
cwtl
mov
popf
cmp
lahf
hlt
lods
mov
push
in
fmulp
xor
push
mov
in
stc
dec
loopne
hlt
mov
push
fdivs
mov
js
iret
leave
cmp
int3
pop
dec
enter
xchg
xchg
mov
mov
in
mov
stc
pushf
mov
insb
mov
push
dec
fimuls
test
push
movsb
mov
out
in
mov
cwtl
cmp
cmp
daa
out
in
mov
xor
leave
cmp
or
es
pop
add
lahf
insb
cmp
push
stc
adc
sbbb
fucomp
pop
mov
stc
js
int3
and
lock
or
enter
lods
out
mov
ja
mov
sbb
adc
jb
and
and
mov
mov
sahf
sub
mov
pop
mov
pusha
and
push
inc
pusha
inc
test
pushf
adc
stc
add
pop
push
cmp
test
sbb
mov
fsubrs
push
push
xchg
jb
sub
aas
push
stc
and
xchg
mov
fmull
xor
fisubrs
adc
je
sub
jmp
outsb
sbb
in
pop
cwtl
lods
adc
jmp
pop
xchg
imul
or
psubusb
adc
mov
adc
xchg
adc
xchg
decb
sbbl
pop
sbb
jne
pop
in
notb
xlat
xchg
sbbl
push
inc
push
add
push
adc
repnz
outsb
and
jne
leave
adcl
jae
xchg
test
imul
pop
cld
sub
daa
clc
lea
test
jge
add
sbb
in
add
mov
std
pusha
cld
clc
mov
sbb
cwtl
or
scas
xchg
push
in
sbb
jp
jg
leave
test
jecxz
cld
add
nop
fistpll
std
ja
imul
mov
loopne
call
jecxz
std
movl
add
or
fcmovu
in
jmp
mov
into
sub
dec
dec
dec
sub
sti
push
cli
jns
clc
adc
gs
sub
jne
cmp
ret
dec
fists
mov
rclb
mov
pop
mov
or
sub
adc
mov
cmp
inc
es
fs
sbb
and
xchg
dec
and
sub
es
xchg
dec
es
xor
jb
fs
les
rorb
cmp
pushf
inc
test
jns
movsb
lods
dec
adc
mov
dec
or
jns
movsb
jb
fcoml
movsb
jb
in
pop
fdivr
sbb
jns
pop
push
std
or
pusha
pop
sbb
mov
inc
sbb
cmc
xchg
test
push
jns
fcomps
cld
fisubs
dec
add
outsl
je
fs
jne
xchg
das
dec
jne
inc
imul
cmpsb
push
mov
add
inc
mov
inc
insl
jo
inc
jb
insl
push
je
and
push
cmp
or
and
sbb
aas
inc
jae
mov
inc
jns
pop
in
loope
outsl
lahf
inc
add
test
sbb
dec
add
sbb
and
or
and
cmp
sbb
jnp
adc
push
lods
leave
mov
or
and
pop
sbb
add
inc
fisttpl
inc
sub
nop
sub
iret
repz
sbb
xor
mov
jl
les
xorb
push
shl
fsubl
or
adc
cs
arpl
cmp
pop
xor
sbb
adc
or
xchg
or
out
xchg
inc
mov
push
sbb
or
pushf
sbb
adc
sbb
and
in
jl
in
inc
jnp
loopne
xchg
nop
loopne
push
inc
jb
pushf
push
add
inc
add
divl
inc
popa
adc
test
push
and
test
mov
fs
or
or
add
cmp
outsl
bound
je
je
mov
gs
iret
fdivrl
adc
lock
dec
insl
jo
xchg
inc
push
and
xchg
push
inc
push
xor
movsl
loop
inc
ds
repnz
mov
sub
or
shrb
inc
or
mov
lret
arpl
out
cwtl
cld
inc
adc
pop
fs
mov
dec
cld
into
int3
add
pop
and
fidivrl
in
lcall
in
ficoms
dec
jnp
or
sti
add
mov
or
call
sub
mov
xchg
inc
in
push
or
push
sub
xchg
jmp
cmp
inc
jno
pop
or
push
or
mul
mov
add
inc
xor
incb
in
dec
or
add
add
push
or
clc
or
add
je
push
add
sti
imul
mov
xor
mull
sti
and
dec
je
sbb
mov
orb
fldcw
int
push
nop
es
jbe
add
mov
and
jno
pusha
mov
or
add
add
clc
adc
cmp
daa
clc
mov
xchg
mov
pop
add
xchg
dec
lock
lahf
inc
ds
je
in
nop
add
call
hlt
push
in
dec
inc
adc
xchg
int
cmp
jnp
jae
loopne
adc
aaa
loopne
pop
push
push
sbb
cmpsb
jecxz
lods
add
enter
pop
rorb
and
les
push
fmul
ffreep
repnz
popa
fs
std
pop
jecxz
xor
mov
dec
loopne
or
mov
enter
mov
int3
xor
mov
push
je
mov
faddl
ret
aad
jmp
adc
fldenv
xchg
iret
ss
sbb
or
mov
push
xor
enter
orl
inc
pop
pop
add
roll
mov
add
or
adc
pop
mov
incl
lahf
ret
add
or
xor
flds
test
sarb
and
pushf
xchg
jne
pushf
xchg
adc
jg
cmp
jmp
push
pop
addr16
mov
or
push
dec
mov
jnp
mov
call
popf
mov
inc
add
sub
push
add
andb
sub
rorb
je
pavgb
mov
and
pop
les
cs
xchg
clc
jmp
pop
movsb
arpl
lock
and
push
popf
or
jl
inc
xor
ret
rorl
or
dec
call
rcll
and
sbb
aaa
rcrb
xchg
inc
dec
mov
add
pop
dec
inc
leave
rorl
sahf
jmp
inc
mov
nopl
in
repz
dec
jnp
jbe
call
out
test
add
in
fdivrs
fsts
xorb
cld
jmp
pusha
pop
push
in
stos
test
adc
or
fnstcw
jmp
cmp
sbb
jo
fxch
sti
and
adc
sub
or
mov
shr
xor
mov
repnz
fsubr
and
loopne
sbb
pop
notb
jo
jmp
mov
xor
jb
mov
inc
dec
movsl
aas
pop
inc
push
xorl
lods
cmp
nop
and
clc
fimull
inc
inc
add
sub
and
sub
sbb
cs
loopne
or
xchg
sub
loopne
repnz
push
add
jno
lds
mov
and
add
adc
adc
in
lock
call
in
cmp
push
icebp
pop
mov
inc
call
pop
aad
and
cmp
add
inc
sub
popl
push
add
call
decl
push
adc
jns
pop
add
jmp
fwait
negl
andb
cmp
push
rorb
sar
cmpsl
test
dec
adc
repnz
xchg
test
jl
sub
cmp
push
fiaddl
mov
and
shrb
cmc
pop
lahf
bound
dec
cmp
je
pop
push
xchg
dec
shll
push
cmpsb
mov
inc
add
or
or
int3
rcll
ja
mov
inc
pop
addb
push
push
fwait
mov
fs
jo
nop
call
push
add
mov
xchg
add
shrb
mov
and
mov
mov
mov
mov
rolb
movzbl
scas
movsb
push
dec
je
and
inc
mov
cmp
adc
cld
imulb
inc
mov
lahf
out
lock
jnp
hlt
or
adc
enter
adc
movsb
sbb
fbld
call
and
adc
or
rcrb
or
push
inc
mov
adc
dec
add
mov
movsb
and
mov
mov
adc
push
dec
cmpsl
lcall
adc
push
fistps
inc
cmp
push
jg
jae
cmp
imul
roll
mov
and
add
arpl
adcb
jae
ret
rclb
inc
pop
mov
addb
add
adc
fisttps
movsb
ret
jne
sbb
adc
sub
add
outsl
mov
cmpb
mov
cmp
ja
xlat
fs
into
mul
jns
out
push
sub
leave
divl
cmpsl
test
popf
int3
push
jae
sahf
idivl
daa
out
sbb
jno
add
or
add
stos
decb
adc
push
sbb
ret
mov
mov
dec
je
xorb
xor
mov
xor
test
fldt
cmp
mov
inc
dec
lock
add
in
push
or
add
inc
cmp
rclb
js
push
sub
addr16
addl
mov
and
pop
mov
loopne
movsbl
cmp
mov
mov
aam
xor
push
sbb
add
out
cmp
rcl
int3
enter
cmp
jne
imul
enter
push
enter
add
fiaddl
je
dec
je
pusha
dec
loop
jmp
fdivs
add
jns
outsl
les
les
je
scas
cmp
ret
mov
push
in
test
pop
iret
rcrl
sbb
cmpsb
je
repz
call
cmp
mov
lds
pop
xor
into
repz
or
sarb
mov
fmul
jno
mov
inc
dec
es
in
ret
orl
mov
lods
cmp
mov
cmp
adc
test
fwait
test
nop
push
adc
jmp
mov
pushf
lods
cmp
jae
cwtl
jno
jmp
sbb
fsubl
dec
mov
jmp
pushf
nop
nop
inc
adc
outsb
xlat
sub
gs
leave
and
mov
nop
lahf
inc
aaa
sbb
test
push
or
cli
or
imul
cmp
xchg
add
mov
sbb
std
sbb
mov
push
lods
ret
in
push
dec
jl
enter
cmp
inc
inc
cwtl
stos
cmc
nop
mov
xchg
sbb
test
adc
xor
enter
sbb
nop
xchg
xor
jne
imul
and
loopne
sbb
dec
pop
sub
dec
sbb
inc
dec
dec
dec
or
cmp
cltd
and
lea
lcall
imul
sahf
mov
fmulp
jae
jl
test
daa
stc
adc
int
lock
dec
push
adc
add
lcall
ss
inc
ret
ret
lcall
cmp
cmp
add
dec
mov
add
andb
mov
movsb
or
xor
pop
mov
mov
inc
xchg
aam
mov
nop
xchg
cwtl
pop
jne
roll
orb
xor
insb
push
dec
or
and
xchg
or
outsl
in
cmp
test
or
dec
in
cmp
rcrl
mov
idiv
sbb
sub
pop
repz
mov
inc
sbbl
les
shlb
aaa
fmul
roll
dec
mov
fidivs
pop
arpl
mov
popa
js
cmp
and
lods
ret
xor
lods
fwait
test
mov
and
rcrb
cmp
ret
mov
and
in
pushf
jno
and
lods
or
and
cmp
popf
xchg
fsub
enter
push
or
shl
jmp
adc
nop
mov
add
in
mov
add
and
in
dec
push
dec
jno
mov
jle
mov
pop
aas
loope
add
sarb
inc
sub
mov
movw
aam
nop
in
push
sbb
loope
fisubs
cmpsb
gs
mov
push
push
or
test
mov
data16
or
push
seta
loopne
pop
or
mov
pop
push
add
js
adc
cmc
xchg
mov
xor
rolb
push
push
out
pop
outsb
xchg
jo
repnz
mov
pop
push
add
fcoms
mov
aas
addr16
pop
push
addr16
insl
jo
jns
sahf
test
das
dec
jne
pop
les
rclb
addr16
dec
push
daa
pop
mov
inc
push
ds
add
inc
outsl
jne
xchg
cwtl
lods
push
mov
lea
pusha
inc
sbb
or
or
mov
addr16
adc
pop
add
pop
sbbl
fisubrl
dec
das
aas
inc
arpl
xchg
sbb
pop
addb
mov
mov
inc
jns
pop
fisubl
pop
sbb
inc
pusha
aaa
pop
daa
mov
rcrb
add
xchg
idiv
and
mov
adc
push
ds
sti
and
ss
dec
xchg
lcall
adc
aad
sti
inc
or
jae
das
add
test
push
dec
call
cmp
aad
push
mov
jo
xor
inc
repz
push
aas
cmp
or
sbb
sub
xchg
or
mov
and
xchg
mov
inc
les
mov
and
pop
xlat
xchg
in
mov
and
mov
outsb
jns
and
sarl
inc
push
push
gs
push
push
and
js
pusha
pop
jle
andb
mov
hlt
cli
xor
add
test
inc
pop
bound
jle
pop
push
jns
cmp
sbb
inc
push
cvtps2pi
mov
dec
xorl
sbb
add
cmp
sti
popa
xchg
pushl
out
rcrb
jae
add
loop
add
push
cmp
aas
and
subb
xchg
xchg
adc
pop
push
xchg
xlat
sbb
pop
or
inc
icebp
scas
iret
mov
js
jge
cmp
je
aam
sub
into
or
fldl
add
pop
pop
inc
jne
leave
icebp
lea
fsubrl
jg
imul
add
push
fidivs
add
addb
mov
xchg
int
pop
mov
call
mov
add
mov
sub
loop
push
mulb
dec
or
out
daa
xor
outsl
add
fsubl
popa
mov
adc
arpl
add
mulb
inc
nop
or
push
xchg
aad
das
enter
jle
jno
cmpsl
icebp
das
in
dec
xorb
addl
ljmp
sub
addr16
clc
adc
sti
call
xchg
mov
pop
bound
mov
lock
std
sub
std
movsl
adc
pop
or
jbe
push
dec
and
pop
leave
mov
sarb
jle
push
sub
or
push
dec
dec
mov
jno
or
mov
mov
fnstenv
dec
and
inc
stc
add
stc
cwtl
add
dec
sub
cmp
and
sub
sbb
xor
dec
sbb
adcb
mov
sbb
mov
jecxz
daa
push
add
repnz
sti
nop
sahf
btcl
inc
sbb
and
test
jne
cltd
xor
add
xor
cmp
or
lock
mov
shrl
rorl
sbb
adc
cs
call
pop
shrb
xor
cmp
adc
push
xchg
lock
mov
fisubrl
mov
scas
scas
seto
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
lcall
add
movsb
add
ja
push
add
aas
insl
cwtl
xchg
push
or
loope
scas
pop
add
lea
jl
cmpb
mov
add
mov
rcl
cmp
test
jne
xchg
jmp
cs
dec
xor
cmp
jle
mov
and
cmp
jnp
fsubl
jl
dec
adc
cmpl
fisubs
mov
add
sub
movsb
add
lods
sbb
sbbl
and
xor
rorl
stos
or
call
sub
cmpsb
fisttpl
mov
sbbb
clc
jl
or
sbb
mov
and
cmp
je
mov
and
sbb
inc
add
and
jmp
jle
in
rcll
outsb
je
jmp
cmp
sbb
test
mov
dec
jne
mov
fisttpl
mov
dec
push
jg
int
or
stos
mov
push
dec
inc
push
or
xor
sbb
mov
cmpl
mov
bndstx
jmp
insl
movsb
aam
mov
lds
mov
mov
mov
cmpb
je
xchg
mov
lar
decb
ja
call
adc
jmp
xchg
add
jle
movsb
push
add
add
inc
clc
lret
or
movsbl
and
or
jle
add
cs
jo
add
mov
pop
pop
in
push
push
adc
movsb
sahf
jne
mov
mov
cmpb
ja
jb
repnz
mov
call
out
mov
insl
mov
cmp
cmpb
cli
jmp
xor
mov
add
push
adc
por
inc
mov
bound
fsubrp
aaa
xchg
push
stos
mov
lea
push
add
cld
test
xlat
stos
insb
fcomps
sbb
mov
xchg
sahf
data16
jle
adc
incl
cmp
pop
mov
xlat
or
rol
ljmp
sub
cmp
fimull
add
fadd
das
or
jmp
les
js
and
ds
adc
pop
dec
pop
add
dec
pusha
or
mov
mov
mov
push
sub
inc
test
or
cli
sahf
inc
lods
pop
and
push
iret
rolb
fistpll
push
push
push
jo
in
or
adc
inc
enter
mov
movsb
push
iret
hlt
sbb
xor
addr16
adc
rorb
add
or
call
ret
out
dec
hlt
icebp
xor
push
cli
and
jmp
movl
jne
and
add
fidivs
das
or
cmp
add
ljmp
rorb
outsl
mov
cld
xchg
cmp
dec
ret
pop
outsb
push
xor
iret
lods
movsb
repnz
pop
ja
xor
inc
mov
or
outsl
enter
or
xor
add
loopne
xchg
pop
inc
jnp
add
pop
inc
xlat
lcall
xchg
jns
out
lods
mov
fcmovu
insl
or
sbb
fsubl
sub
jb
jo
add
or
pushw
or
mov
cmp
cmp
or
dec
xchg
lcall
mov
orl
push
pop
jge
mov
ljmp
or
push
or
jge
les
sbb
je
fnstenv
or
clc
fstpl
in
dec
pop
movsb
adc
push
fistpll
pop
adc
outsl
xor
sub
shl
jo
ss
hlt
pop
xor
xor
dec
shll
sbb
sub
sbb
addb
or
push
mov
cmc
mov
and
scas
rcl
mov
jp
enter
pushl
int3
fildl
sbb
adc
roll
adc
cwtl
mov
or
jae
add
clc
adc
enter
jbe
add
xchg
push
dec
xchg
mov
jbe
daa
lahf
in
mov
mov
mov
cwtl
jmp
cmp
out
mov
mov
cmpsb
sahf
xchg
or
inc
mov
fistps
adc
mov
movsb
mov
daa
mov
sbb
pop
mov
test
test
aad
fisttps
lds
int3
sbb
or
imul
mov
add
xor
dec
gs
xchg
data16
sbb
push
imul
jb
inc
insb
popa
jbe
scas
add
out
nop
sbb
imul
ds
add
test
loopne
cmp
sbb
adc
dec
outsl
lea
negb
sbb
jle
adc
sub
frstor
scas
push
jp
sbb
mov
jnp
pop
ss
push
mov
inc
mov
jb
or
cmpsl
or
dec
imul
jne
loope
faddl
or
test
hlt
add
dec
ljmp
js
add
movsl
loope
sahf
jno
adc
out
aaa
xchg
or
cs
dec
ret
mov
ljmp
notl
jne
xor
sbb
shll
adc
sbb
enter
push
fsubs
adc
fldl
ds
sub
inc
cmpl
wrmsr
aaa
jg
jo
aas
mov
mov
push
mov
nop
nop
in
or
inc
cs
inc
pop
in
mov
fisubrl
lods
outsb
add
shl
cmp
inc
cmp
leave
ja
or
pushf
pushf
dec
cmpsl
xchg
daa
clc
aaa
or
jb
pop
inc
mov
scas
hlt
ret
test
pop
and
fcmove
jae
dec
cmp
cmpsl
push
push
inc
and
inc
sbb
nop
test
cmpsl
xor
or
mov
push
and
fiaddl
mov
cmp
dec
adc
into
dec
imul
and
pop
inc
imul
mov
js
push
push
cmp
pushf
push
mov
pusha
dec
pmaxsw
mov
xor
mov
mov
and
push
sub
sets
jno
jb
outsl
int3
adc
push
arpl
inc
mov
cmp
pushf
ljmp
popa
pop
daa
push
inc
push
arpl
int
roll
js
push
add
nop
ficoms
pop
nop
and
mov
lea
sub
push
repnz
mov
scas
call
loopne
addr16
pop
push
cmp
in
mov
dec
push
push
push
add
lahf
push
test
push
and
filds
adc
loop
inc
sbb
push
orl
test
movl
test
test
outsb
enter
or
sti
mov
insl
pop
adc
xor
int3
lea
push
movsl
cmp
test
sti
cmpsl
sub
sbb
cmp
push
pusha
xchg
lock
xor
add
fildll
pop
imul
cmp
xor
adc
mov
shll
adc
loopne
and
pop
push
push
aas
enter
addr16
mov
dec
sub
outsb
push
cmp
test
ficoms
add
push
cmp
push
test
nop
jbe
mov
jbe
pop
sub
loopne
cwtl
dec
iret
jae
iret
sar
shr
sbb
dec
pop
and
push
xor
cmp
cmp
xor
das
jo
shll
jno
in
sti
stos
inc
ds
shl
inc
push
push
mov
lea
pop
and
pop
fwait
sub
inc
pop
mov
xchg
or
push
sbb
dec
aas
fidivrl
push
add
push
adc
fs
push
incl
mov
shll
dec
clc
aas
jns
lock
sub
cmovns
aaa
sbb
sahf
fs
jo
push
add
pushf
jae
push
rclb
sahf
cmpsb
int
in
add
fisubrl
outsb
pusha
mov
fwait
addb
push
or
daa
cmp
add
jle
fdivs
jns
insb
mov
shl
push
cld
jle
jg
adcb
mov
xchg
cld
push
imulb
outsl
addr16
ja
mov
sahf
add
adc
jl
sbb
ss
mov
setle
cmp
cmpb
cmpsl
adc
add
faddl
pop
sbbl
mov
pop
sbb
cli
adc
inc
push
or
mov
scas
push
sub
cwtl
dec
repnz
fadds
pop
xor
outsb
adc
imul
cmp
ret
out
je
outsl
in
mov
loope
outsl
fs
pop
push
fadds
fdivl
xchg
ret
cmpsl
popf
outsl
mov
outsl
rorb
or
outsb
mov
mov
insb
xchg
jle
mov
mov
mov
jbe
add
xchg
sub
inc
out
push
pop
popa
nop
movb
rol
shr
das
xchg
mov
push
push
rolb
sbb
aaa
push
lock
pop
and
daa
aam
sbb
cwtl
daa
test
cltd
add
push
or
dec
int3
insb
inc
sahf
je
sub
aam
pop
in
mov
push
das
inc
inc
adc
dec
mov
inc
or
xchg
int3
aas
add
xor
into
pop
and
xor
lahf
xchg
inc
mov
inc
adc
movsl
xchg
xchg
pop
add
inc
cmp
adc
cmp
cltd
in
and
movsb
inc
mov
inc
xchg
mov
inc
enter
mov
enter
xchg
lahf
repz
pop
jnp
mov
test
mov
orb
xchg
or
ljmp
xchg
mull
or
loope
xchg
cltd
inc
icebp
ret
call
dec
fs
jne
addr16
nop
add
fmuls
sbb
cmp
sbb
cmp
es
nop
sub
xor
jo
icebp
in
in
jns
divl
fisubl
in
out
mov
out
dec
pop
imul
jns
xchg
or
jnp
sub
cs
push
push
pop
mov
mov
int3
dec
pushf
stos
nop
jno
and
dec
repz
scas
push
shrb
lods
adc
cmpsl
mov
and
cmp
push
pop
and
push
in
subb
icebp
nop
sub
aas
or
add
push
fisttpl
js
scas
xchg
out
mov
sub
cltd
pop
xchg
push
sbb
dec
pop
test
jp
jg
into
jnp
es
cmp
cmp
push
jo
int
imul
mov
push
sbb
adc
adc
push
adc
dec
push
cmpl
inc
cmp
in
test
shlb
repnz
and
jecxz
imul
in
pop
sbb
add
clc
dec
das
inc
nop
daa
push
add
sbb
mov
cmpsb
jecxz
adc
mov
mov
xchg
fmuls
int
pop
cmp
or
adc
inc
xchg
inc
push
movsb
aam
aam
iret
repz
push
dec
sub
icebp
cmp
add
xchg
pop
inc
int
dec
orb
stc
inc
push
in
jns
add
mov
ljmp
dec
bound
or
push
aam
add
les
xor
sahf
inc
jg
fldl
inc
addr16
cmp
dec
fldenv
fidivl
fsubrs
cmpsl
jge
sub
jbe
inc
push
cmp
fs
loopne
mov
add
add
stc
clc
push
push
push
push
push
push
repz
add
push
call
mov
clc
iret
jnp
out
add
push
adc
cmp
hlt
fdivrl
add
shrb
adc
or
cmp
cmp
add
push
jp
push
cmp
add
cmp
mov
pop
add
test
push
popa
testb
and
xor
out
cmp
push
fs
les
loopne
lahf
jl
fiadds
inc
push
arpl
mov
cli
imul
dec
xchg
pop
xchg
pop
fs
push
push
push
push
push
jb
jns
aam
and
mov
cmpsl
nop
ficoms
inc
in
xorb
out
push
mov
sarb
out
pushl
or
push
fs
push
mov
pusha
sub
dec
and
mov
push
dec
dec
data16
xchg
lea
or
mov
or
and
jne
pop
push
add
movsb
push
push
mov
dec
sbb
insl
add
fiaddl
jbe
cli
cmpl
jne
xor
je
leave
pop
lea
test
mov
or
mov
jle
mov
jne
fsubrl
fsubl
push
or
pop
xchg
push
jae
cmp
enter
jl
or
jo
in
push
outsb
cmpsb
cmp
jo
dec
cwtl
cmp
xlat
xchg
xchg
push
and
test
je
pusha
or
in
and
jmp
add
inc
push
or
inc
or
or
xor
xor
adc
aas
lock
test
pop
add
imulb
inc
cld
sub
fldt
mov
test
sbb
scas
lret
scas
test
add
inc
js
and
fbld
stc
mov
stos
cltd
add
scas
loopne
inc
loopne
ret
pop
push
pop
adc
lock
xlat
and
dec
popa
je
add
inc
pop
xchg
cmpsb
sbb
or
push
xchg
orb
fmuls
push
and
jnp
mov
es
push
or
sarb
pop
or
push
lods
jmp
adc
push
or
sbb
rcrl
jmp
iret
mov
ret
lock
notl
jle
or
inc
int3
sbb
int
mov
xor
dec
jbe
jmp
in
xchg
and
inc
rorb
push
inc
hlt
mov
push
inc
or
rcrl
inc
pop
push
mov
test
adc
lea
xor
ret
sbb
je
xor
mov
sub
bnd
dec
popa
mov
sub
dec
test
push
mov
daa
jae
dec
cmp
fcoms
and
jl
sbbl
mov
js
or
fdivrs
cmp
mov
inc
cmpl
in
jno
and
inc
jecxz
xchg
sub
mov
inc
add
fistpl
imul
push
and
xor
push
mov
dec
cmp
daa
mov
dec
cmp
mov
jne
push
inc
and
je
push
adc
add
jp
push
cltd
and
sbb
xchg
mov
les
jecxz
inc
push
mov
dec
filds
js
mov
push
or
jl
xor
cmpb
dec
add
mov
mov
movb
insl
dec
xor
aaa
and
pop
add
push
roll
fdivrl
movl
in
and
shrl
xor
inc
test
daa
aas
call
push
add
and
out
inc
xor
push
cmp
jne
sbb
mov
xor
dec
cmp
lods
cmpb
dec
fisttpll
mov
add
xchg
lret
dec
scas
into
sub
pushf
dec
jbe
out
clc
pop
dec
cltd
scas
and
mov
inc
hlt
jb
pop
inc
push
aam
insl
lea
gs
leave
mov
dec
and
adc
mov
clc
sahf
add
inc
fcomps
inc
pusha
mov
and
in
add
addb
in
push
jl
inc
push
call
pop
xor
int
pop
lock
pop
imul
mov
scas
rcrb
fldt
mov
lods
push
stc
cmp
push
dec
xchg
push
mov
mov
call
push
mov
adc
mov
lock
adc
inc
or
add
inc
ja
add
pop
enter
inc
mov
test
ja
and
pop
aad
jge
pusha
push
sbb
pop
int
rcr
and
mov
insb
movsb
jmp
jg
mov
lock
cmc
add
js
add
sti
dec
lahf
lret
push
aad
ret
outsl
hlt
mov
add
lods
or
pop
xchg
mov
mov
popa
pop
mov
or
shlb
mov
adc
scas
dec
xor
push
enter
aad
ja
cmp
pop
test
cmpb
sub
test
mov
add
adc
pop
fs
je
pop
push
sub
or
push
and
movswl
pop
cmpsl
iret
lahf
push
adc
imul
add
enter
dec
cmpsl
pop
push
sub
push
addl
ja
mov
push
xchg
nop
pop
clc
imul
xchg
inc
enter
stc
or
arpl
gs
jp
mov
or
xlat
add
sub
add
jg
lea
sub
loope
loop
inc
xlat
enter
loop
cwtl
popa
jbe
inc
sbb
pop
and
xor
ret
dec
sub
push
pop
mov
out
and
jmp
jmp
inc
enter
push
xchg
sbb
cmpb
loopne
shll
and
pop
lds
mov
cltd
pop
push
nop
add
xchg
mov
inc
test
in
repz
mov
inc
lock
nop
inc
dec
mov
mov
dec
push
in
mov
mov
jns
pop
test
add
or
fadds
test
jl
jae
and
add
addr16
add
push
es
or
or
push
pop
ja
fcmove
pop
outsb
dec
push
dec
push
test
pusha
cmpsb
sbb
call
push
leave
sbbb
aad
pop
popa
and
cmp
jne
push
cwtl
ljmp
xchg
mov
mov
arpl
pusha
bound
or
lea
mov
inc
lahf
xchg
rorb
dec
cld
mov
lods
mov
nop
mov
push
pusha
andl
outsl
sbbl
sarb
jne
dec
inc
dec
je
sti
sub
test
sbb
sub
dec
fmull
pop
jp
pop
int3
add
jo
push
mov
add
jecxz
pop
cmp
in
cmpb
push
add
push
mov
xor
imull
mov
enter
out
test
call
rolb
pop
orl
in
sub
repz
adc
jecxz
insb
shrl
daa
or
out
mov
jecxz
mov
push
inc
mov
xor
mov
jge
dec
push
xor
enter
hlt
or
dec
pop
mov
adc
sub
push
sub
push
dec
cmp
push
mov
and
mov
xlat
or
add
addl
dec
mov
dec
nop
faddl
push
aas
or
mov
in
mov
insl
xchg
sbb
out
pop
pop
mov
add
push
xor
mov
outsb
lock
mov
push
or
xor
test
cmpl
movsb
into
insl
mov
cmp
add
sahf
pop
aas
stc
lret
pusha
xor
cmp
push
push
inc
push
clc
je
jbe
pop
lret
sub
aam
pushf
movsl
test
push
xor
test
cld
pop
mov
rorb
sub
psubusw
sub
sbb
insb
jno
fadd
xchg
popa
mov
ja
movsl
sbb
and
test
aaa
xchg
mov
imulb
jo
je
jae
push
dec
ja
rcrl
mov
push
lods
cmp
sbb
lea
fcoml
aas
cltd
jmp
sbb
cmp
test
mov
add
mov
or
decl
sub
lods
adc
mov
incl
or
leave
std
jnp
insl
mov
insb
lahf
dec
add
adc
nop
jnp
fsubrl
mov
add
cwtl
or
mov
sbb
jmp
rolb
lods
stos
mov
dec
pop
pusha
leave
mov
sbb
add
lea
or
mov
in
in
in
mov
jmp
push
push
mov
daa
sbb
lahf
or
push
mov
add
xchg
les
adc
test
cmp
sub
cltd
dec
rolb
aam
js
push
mov
xor
add
aaa
call
test
test
sar
outsb
adc
roll
stc
add
adc
sub
and
pop
jmp
cmp
loope
lahf
add
mov
int
movsb
lock
add
dec
or
aam
das
mov
adc
jne
sbb
leave
dec
scas
pop
popa
mov
stc
std
jle
sub
inc
jae
push
sbb
add
sbb
das
push
hlt
jecxz
add
inc
daa
lea
divl
pop
aaa
and
jl
call
jle
adc
and
pushf
ret
pusha
xchg
jbe
sub
lahf
sahf
popf
subb
pop
and
roll
mov
jns
xor
push
addl
enter
jl
adc
js
jg
hlt
ss
or
pop
sbbl
je
push
rolb
repnz
mov
xchg
fdivrl
jg
jns
fildl
mov
sti
jle
xchg
addb
into
and
or
jmp
dec
xchg
icebp
in
dec
mov
sub
jg
dec
mov
dec
inc
loopne
dec
and
sysret
inc
popf
and
mov
inc
jbe
and
inc
sbb
inc
xchg
xchg
jmp
stos
mov
mov
mov
leavew
and
leave
movl
push
data16
cmp
in
in
aas
xor
fucompp
loopne
pop
mov
cmpb
addl
jne
in
cmpsl
loop
jmp
dec
add
or
xchg
and
out
push
or
iret
daa
cmp
jb
fiaddl
and
nop
sbb
aaa
inc
and
sbb
jle
dec
addr16
push
leave
xchg
outsb
scas
jno
movsl
loop
sbbl
sbb
mov
cmp
dec
cmp
enter
std
roll
insb
rcll
jg
lods
sub
xchg
push
outsb
pop
ds
xor
fdivr
rcrb
clc
add
add
sbb
sub
cmp
je
sbbl
test
inc
push
ror
pop
mov
fstl
loop
shll
xchg
mov
adc
mov
pop
jge
int
cmp
jae
add
leave
je
stos
adc
btr
mov
cli
add
mov
xchg
movb
jmp
test
fmuls
out
inc
hlt
ret
sbb
enter
mov
adc
je
sbb
xor
mov
pop
ja
and
bt
jb
push
inc
push
call
mov
aas
cld
cmp
jl
adc
push
inc
cmp
jne
inc
decl
jne
les
and
xor
aaa
orb
xor
pop
mov
and
dec
push
in
adc
jns
out
imul
sbb
cld
dec
adc
mov
dec
movsl
in
lock
test
pop
adc
mov
test
cwtl
mov
add
xchg
imul
push
enter
adc
insb
add
inc
pop
jle
adc
test
add
aam
lods
mov
adc
movsb
sbb
and
cli
shlb
aaa
js
jne
push
dec
push
mov
out
inc
mov
and
pusha
xchg
mov
je
les
and
sarl
out
adc
mov
lahf
ljmp
add
dec
popa
imul
sub
dec
jb
and
cwtl
stos
adcl
adcl
in
pop
fs
inc
inc
testb
je
addr16
push
pusha
mov
mov
and
jmp
pop
bound
enter
sti
sub
daa
cmc
mov
add
stc
cmpsb
or
insb
xchg
lods
imul
inc
adc
nop
daa
push
addb
stos
mov
sar
fdivs
and
adc
sub
mov
dec
mov
pop
cmpl
dec
rorb
jmp
mov
add
test
mov
ret
inc
pop
push
mov
xlat
xchg
inc
frstor
push
add
pop
ss
ja
pop
cltd
in
in
in
inc
loopne
xor
adc
xchg
push
loopne
adc
and
jmp
lods
test
push
xchg
insl
cwtl
mov
sub
in
insl
in
pop
cmp
and
pop
jle
mov
push
dec
and
lock
add
add
aam
std
add
fldenv
jle
pop
call
pop
push
pop
sbb
rorb
sbb
jne
adc
sbb
mov
pop
and
or
mov
push
inc
xchg
fnstenv
mov
pop
insl
pop
enter
inc
sbb
cmp
pop
fdiv
pop
sbb
movl
or
lea
xchg
xchg
jne
dec
sbb
aas
push
xor
fs
outsl
add
pusha
data16
idivb
xlat
and
cld
pop
rorl
ficomps
js
scas
and
lahf
test
dec
pop
inc
and
aam
inc
addl
and
and
push
loopne
pusha
ret
jle
xor
addl
jns
mov
pop
pop
jnp
dec
push
sarl
sub
imul
sarl
jecxz
dec
shl
sbb
pop
sub
push
and
ficompl
push
xor
jo
fidivs
popf
xorl
out
add
cmc
cmp
in
addr16
clc
mov
scas
nop
inc
daa
mov
add
pop
pop
adc
ss
test
push
clc
pop
inc
test
in
add
add
adc
rol
jecxz
sub
dec
lock
outsb
lock
sbb
je
rolb
imul
adc
cmpsb
data16
pushf
mov
push
xchg
jmp
outsl
ficomps
dec
mov
jb
arpl
lahf
xor
inc
sub
cltd
aaa
inc
fs
mov
shr
jg
cmpb
jne
sbb
xchg
cmp
ret
pop
arpl
xlat
adc
push
sbb
inc
dec
jne
movsb
jns
sub
hlt
sub
adc
inc
sub
jp
pop
insl
outsl
adc
mov
movsb
aad
xor
jne
push
jl
cmp
or
aaa
sbb
fnstcw
adc
or
and
jp
jne
out
iret
pop
push
flds
outsl
mov
lea
and
ds
fnstenv
xchg
addr16
mov
aaa
pop
or
ljmp
sub
jb
xor
mov
pop
ret
add
jne
pop
daa
cmc
sbb
fcoml
add
pop
fs
mov
data16
xchg
jo
xlat
xchg
mov
sub
mov
jne
fsubrs
repnz
adc
std
rolb
pop
loop
lods
shlb
lret
pop
js
and
ja
fs
stos
and
fs
je
mov
stos
clc
add
insb
rep
sub
adc
sbb
lock
adc
out
enter
cmp
dec
jne
int
or
leave
mov
dec
add
into
je
push
cmpl
in
cltd
in
lock
imul
xchg
xchg
insb
adc
pop
and
adc
or
pop
test
cmp
popa
cs
addb
inc
fwait
push
adcl
bound
xchg
xor
push
dec
sub
out
jecxz
loope
sahf
popl
jo
adc
sub
mov
cmp
dec
clc
rcrl
inc
cmpl
and
add
ret
cmp
dec
lods
xorb
cmp
jp
push
xor
push
int
or
in
adcb
pop
add
sbb
jnp
sbb
mov
add
inc
js
jb
adc
sarb
xor
pusha
sbb
xlat
cmc
jbe
sbb
cmc
mov
push
mov
cmp
jge
dec
sub
push
sahf
in
mov
hlt
and
jne
push
pop
es
cld
jbe
sbb
add
add
add
and
add
mov
mov
movb
push
iret
mov
mov
iret
ret
jl
lock
aaa
and
rorl
js
rcll
cmp
shll
sbb
sub
push
jbe
dec
xchg
and
int3
mov
das
sbb
in
sbb
pop
js
popa
adc
jle
push
push
add
lods
lock
dec
inc
bound
iret
sub
cwtl
scas
test
ret
xchg
mov
xlat
jbe
mov
mov
fmull
mov
and
push
shl
sahf
push
js
mov
mov
or
fwait
rolb
lock
jns
clc
mov
std
inc
mov
push
cmp
push
xchg
icebp
mov
cmp
mov
fistpl
fisttps
arpl
nop
pusha
test
jns
and
lods
shl
inc
inc
ljmp
inc
hlt
shll
fidivl
mov
push
js
or
insl
pop
adc
jne
iret
aas
inc
and
fs
mov
stos
jbe
fisubrl
fcoms
pop
mov
and
shl
rolb
dec
sub
leave
cld
imul
cmp
es
loopne
pusha
cld
shll
cld
roll
xlat
movsb
pop
loopne
inc
xchg
or
ja
pop
sbb
inc
clc
xchg
lret
stc
test
hlt
jp
mov
and
jae
popa
in
cld
mov
fcoml
cmc
jl
xchg
pusha
cmpsb
lods
jne
push
push
or
add
aam
sahf
jo
sbb
adc
enter
lods
jmp
jl
adc
sub
clc
mov
icebp
nop
jbe
and
cmpsb
loope
pop
sbb
or
orl
jl
pop
pusha
sub
call
pop
dec
and
sbb
push
push
cmp
push
test
ret
sub
dec
mov
in
push
arpl
mov
sub
pop
js
mov
jmp
add
test
xchg
popa
mov
jne
les
faddp
outsl
jle
mov
and
jecxz
mov
ja
pop
mov
outsb
adc
sbb
test
adc
out
addl
stc
movntps
pusha
and
xchg
jp
and
xchg
jmp
push
lret
jle
xor
or
stos
je
fstl
xchg
sbb
xchg
fwait
jge
aam
mov
mov
cmp
cmp
sbbl
sub
push
loope
xor
pop
pushf
test
dec
out
fwait
daa
jle
push
aaa
inc
cmp
pop
pop
je
cwtl
mov
and
jle
mov
bound
dec
push
adc
mov
hlt
dec
ja
or
daa
jmp
fstl
sbb
scas
or
pushf
sub
sbb
jg
mov
dec
mov
adc
or
push
mov
pop
daa
sub
push
cmp
insl
stos
pop
dec
push
mov
int
cmpsl
and
out
daa
pop
inc
dec
ljmp
cmp
xor
pop
push
pusha
adc
mov
ret
sub
jg
and
add
nop
cmpb
mov
mov
mov
adc
mov
jno
push
inc
cmp
fsts
adc
dec
pusha
cmp
sbb
push
jbe
pop
jns
xchg
xlat
sbb
addl
cmpsb
sub
insl
rorb
loopne
addr16
int
dec
pop
aaa
flds
not
dec
movsb
sbb
push
fists
in
ljmp
adc
sub
btr
adc
popa
loop
sub
stos
add
lret
sub
jle
push
or
cmp
mov
or
jne
divb
mov
or
xlat
mov
jmp
mov
push
dec
call
inc
in
dec
rcrb
mov
cmp
icebp
fwait
cltd
ret
call
sub
rorb
sti
jne
cmp
or
fsubrs
scas
xchg
mov
or
cmp
xor
outsb
stc
je
fistpl
mov
mov
xchg
bound
dec
mov
rcr
test
push
dec
mov
jno
rclb
sbb
or
xchg
or
inc
lea
cmpsb
incb
sub
add
test
add
or
add
mov
sbb
shlb
sbb
and
loopne
mov
jne
pop
mov
sub
add
in
jmp
mov
or
loope
jge
cmp
leave
js
xchg
mov
ja
pop
je
push
outsl
ficompl
push
xchg
pop
cmp
jne
ret
push
adc
lea
xor
mov
push
inc
xorb
call
sub
and
sbb
push
mov
call
scas
add
mov
or
jge
imul
inc
add
or
push
sbb
mov
sbb
into
xor
and
or
adc
xor
das
sbb
cmp
jne
testb
dec
or
or
pop
pop
push
pop
push
orb
int3
push
or
es
add
or
push
adc
jg
add
mov
es
ss
jbe
or
stc
out
add
or
scas
clc
sub
wrmsr
and
and
mov
imul
enter
adc
xchg
inc
imull
push
sbb
sub
and
leave
dec
cmp
mov
cmpb
add
jmp
rorb
push
xchg
mov
mov
jo
cmp
push
or
call
or
es
xor
fdivs
xchg
mov
icebp
inc
fistl
adc
sub
nop
mov
sub
sub
xor
scas
aam
xor
pop
out
sbb
xor
mov
stos
inc
aam
sbb
les
inc
ret
push
andb
das
inc
sbb
pop
dec
nop
arpl
or
dec
xchg
les
cmp
or
pop
dec
mov
jb
push
test
or
iret
imul
sbb
xchg
rorl
inc
jmp
dec
sbb
pop
cltd
add
add
bound
rorl
out
add
or
cli
fucomi
daa
ret
dec
ret
mov
cmp
dec
xor
pop
or
jmp
mov
or
sub
add
adc
inc
mov
nop
aam
subl
jmp
cld
imul
or
and
inc
mov
testb
xor
into
pop
mov
jno
repnz
aaa
mov
sbb
push
fiadds
or
push
mov
xchg
xchg
aaa
pop
repnz
movb
mov
sub
xchg
mov
imul
lretw
cmpsl
stos
shrl
sub
add
or
adc
test
xor
jle
or
or
inc
out
dec
mov
inc
sub
inc
and
jg
pushl
sarl
and
orb
push
mov
ret
xchg
xchg
out
xlat
jno
in
mov
fwait
push
push
incl
stos
pusha
nop
cltd
ja
xchg
mov
and
jl
andl
push
loop
mov
inc
hlt
rorl
xlat
cmp
movsb
inc
adc
ljmp
inc
jg
jl
hlt
je
or
mov
adc
js
add
or
sbb
dec
inc
jge
sbb
jle
int3
xor
jnp
in
fisubrl
hlt
jl
cmp
adc
inc
xor
push
loopne
pop
cmpsl
and
adc
andl
addb
or
mov
add
rcrl
add
lock
adc
xchg
cmp
sbb
xor
mov
xchg
enter
pop
popf
sub
sbb
add
jle
push
cmp
popa
lock
jp
dec
movsb
mov
es
add
add
stos
add
es
roll
pop
inc
add
sbb
loop
xchg
xor
popa
pop
dec
xor
loopne
dec
xchg
or
push
scas
or
insl
mov
dec
sub
out
mov
pop
xorb
gs
mov
insb
out
pop
clc
insl
or
sub
cmpl
xorb
adc
add
and
mov
dec
and
mov
dec
je
shl
cmpsl
test
or
fiaddl
lahf
scas
mov
mov
or
das
lahf
js
pop
popf
test
icebp
lea
dec
push
fadd
push
xor
cwtl
push
or
adc
adc
or
cmp
icebp
inc
call
pop
int3
dec
out
les
jne
dec
or
test
xchg
arpl
scas
jne
jo
aam
movsb
cmp
out
lret
push
sbb
mov
lret
lret
adc
mov
jmp
adc
cmc
fiadds
imul
mov
das
push
cmp
cmpb
adc
mov
push
in
sbb
mov
xchg
popf
sbb
mov
loopne
lahf
jge
pop
adc
xor
mov
adc
sti
add
add
jbe
or
sbb
adc
adc
cmpsb
enter
ret
jle
aam
cmp
aaa
adc
test
or
jbe
add
adc
push
cwtl
lret
stc
jg
adc
jp
mov
push
mov
mov
mov
movsl
call
inc
inc
mov
or
popa
jb
add
dec
in
fiaddl
mov
repnz
mov
pop
inc
xchg
and
xchg
xor
sbb
pop
mov
xchg
bound
ss
and
or
add
faddl
test
movsl
and
pop
lea
mov
inc
jg
jmp
pusha
enter
mov
fistpl
pop
or
and
iret
fsubrl
xor
lahf
faddl
in
xchg
adcl
test
jmp
xchg
andw
mov
adc
movsb
pop
adc
jecxz
sub
sbb
sub
sets
lea
or
add
int
jecxz
in
and
add
imul
in
jae
mov
nop
inc
jmp
xlat
xchg
sarl
enter
jb
and
faddl
mov
insl
xchg
jb
subl
adc
sbb
and
push
pop
jno
daa
fildll
mov
push
adc
or
jnp
push
and
fcomps
pop
cmp
fisubrs
cmp
in
icebp
dec
add
lods
movsl
pop
or
pop
sub
and
or
mov
or
adc
add
sbb
fiadds
test
stos
mov
ret
fwait
testl
xchg
enter
jno
pop
das
lret
mov
clc
lock
mov
repz
or
inc
add
inc
adc
and
hlt
cwtl
aad
pop
mov
or
push
stos
cmp
mov
test
call
cmpsl
jns
pop
outsl
roll
test
xor
jbe
in
adc
repnz
pop
mov
fildll
cbtw
jecxz
pop
les
cld
mov
dec
cmp
push
push
adc
mov
adc
push
loopne
adc
sbb
jmp
lret
nop
pand
out
icebp
sub
ret
cmp
push
ret
jo
pusha
jne
mov
push
push
sub
arpl
fs
mov
data16
outsb
xchg
dec
sub
jnp
xor
adc
adc
xchg
and
add
mov
test
or
movsl
mov
out
out
lods
mov
sbbb
dec
ds
addb
add
jo
xchg
ss
sbb
mov
pop
mov
jg
inc
pop
inc
push
push
lea
aam
pop
jbe
daa
cmpsb
mov
mov
xchg
or
add
sub
push
and
sbb
pop
sarl
and
or
jecxz
mov
in
lret
or
push
push
pop
and
hlt
fcoms
jge
xor
orb
cwtl
mov
out
mov
mov
adcl
xchg
xchg
test
xchg
call
dec
in
push
inc
insb
inc
jmp
leave
mov
push
or
and
in
rorl
mov
xorb
lock
in
cwtl
ffree
mov
aaa
sub
stos
rclb
cld
push
push
sub
mov
aas
mov
push
push
stc
cmp
xor
adc
add
inc
xchg
mov
gs
cmp
xor
test
pusha
jno
cmp
jae
rcr
rclb
fidivrl
mov
mov
and
ja
xor
pop
pop
jo
inc
mov
test
mov
sbb
push
lods
sbb
sbb
pushf
addb
fwait
stos
mov
or
sub
pop
push
rorb
pop
jo
imul
in
loopne,pt
out
in
jmp
inc
movsb
mov
mov
out
ret
adc
imul
lea
imul
adc
or
dec
adc
pushf
scas
or
fisubs
add
imul
add
inc
adc
mov
out
mov
and
push
xchg
jnp
inc
sbb
clc
lods
add
adc
ds
gs
mov
pushf
add
sbb
xor
xchg
fs
dec
add
add
push
aaa
inc
jge
sbb
pop
jecxz
shrb
sub
sahf
push
xchg
mov
iret
and
dec
and
movsb
add
sar
mov
push
jmp
inc
or
or
or
add
sub
jae
adc
hlt
adc
fiaddl
and
out
ficomps
mov
xor
sar
stos
sbb
imul
jae
or
or
daa
pusha
mov
sbb
mov
shrb
out
cmp
push
pop
out
and
inc
roll
notb
push
enter
in
outsl
orb
push
mov
clc
jmp
sbb
lahf
xchg
inc
jmp
push
adc
jmp
fmuls
cmp
ja
push
es
sahf
cmp
mov
xor
mov
push
test
ljmp
sbb
sbb
sbb
push
mov
testb
jne
adc
mov
cli
jno
and
push
lock
adc
or
imul
mov
pop
sar
ficompl
sarb
jnp
or
ja
jl
add
sahf
push
cwtl
orl
xchg
in
addr16
inc
stos
push
incb
andw
fldenv
stc
cld
mov
out
sbb
dec
push
test
aaa
lahf
mov
xchg
inc
popa
out
test
imul
sbb
fisttpl
push
filds
lock
inc
addl
sub
or
ret
je
daa
adc
or
lret
mov
jb
fcmovnb
and
out
dec
je
inc
sub
xchg
inc
arpl
adc
add
xlat
adcl
push
xlat
push
and
lret
xchg
out
mov
push
pop
nop
insb
push
hlt
mov
sbb
or
lods
movsb
mov
jo
push
testb
pop
add
dec
outsb
mov
cmp
popa
adc
mov
push
adc
data16
xchg
xchg
pop
test
dec
mov
xchg
jbe
pop
outsb
jge
fdivrl
fdivr
dec
adc
mov
ret
ja
adc
jge
push
xor
movsb
adc
movsl
pop
jp
jle
incl
cmpl
dec
fimuls
test
mov
ret
jbe
mov
scas
sub
and
lret
or
push
sbb
movb
ljmp
test
dec
pop
gs
setl
loopne
rcr
dec
hlt
aaa
scas
cmp
repnz
lea
inc
mov
add
lea
mov
adc
xchg
push
into
mov
bound
scas
movsb
push
inc
lret
cmp
scas
bound
hlt
aad
lcall
inc
arpl
xor
stos
cs
sub
pop
cmp
cs
sbb
pop
inc
sti
pop
xchg
xchg
inc
notl
push
push
mov
imul
cmp
jge
or
fimuls
push
cmp
mov
mov
das
jp
daa
imul
in
push
push
scas
sub
mov
jecxz
sub
pusha
dec
cmp
out
add
ljmp
push
mov
xor
daa
clc
inc
mulb
mov
sub
jne
push
or
push
mov
cmp
and
cmp
sar
mov
outsl
push
xor
test
movsl
jmp
int3
mov
repz
movsl
fstps
adc
mov
cs
sbb
sbb
and
cld
adc
or
jl
jnp
sarb
fwait
out
sbb
std
jo
cmp
jge
hlt
inc
jl
je
push
pop
js
or
imul
dec
jo
xor
pusha
xor
leave
xor
movsb
insb
push
in
pop
inc
xlat
and
test
and
leave
xchg
movsl
xchg
fs
mov
xchg
cmp
ljmp
adc
adc
cmc
test
adc
dec
sub
es
dec
cmp
ja
inc
loopne
cmp
fcomip
inc
ret
jp
cmc
mov
jmp
sub
cli
cmpsb
ficoms
push
xlat
shlb
decl
mov
and
cmp
loopne
nop
cld
cmp
data16
jbe
call
jbe
mov
pop
mov
mov
outsb
jmp
push
pop
jg
pop
into
sub
sub
xlat
out
out
add
sub
dec
ficompl
nop
nop
inc
movsb
mov
jle
jmp
mov
dec
adc
mov
xchg
sbb
fldcw
mov
sub
sbb
pop
sbbb
push
xchg
push
dec
add
cli
rcrl
test
mov
pop
xlat
fsubs
xor
adc
push
rol
lods
rol
orb
cmp
repz
or
sub
sub
adc
arpl
pusha
stos
movsl
es
add
cmpsl
mov
sar
inc
es
mov
movl
push
addr16
cmp
cmc
jo
test
inc
mov
scas
inc
das
push
jmp
jge
sub
jae
and
test
mov
jo
mov
neg
movsb
js
je
cmp
mov
sbb
push
and
test
xor
ss
dec
mov
xor
out
in
sti
sbb
adc
sbb
jo
xor
lods
sbb
fdivs
ret
cmp
lret
hlt
xchg
pop
xlat
push
jge
jg
enter
je
mov
mov
inc
sahf
lods
jl
inc
imul
cmc
pop
xor
cld
test
sbb
out
cmpsl
movsl
pushl
push
std
sub
imul
jge
cmp
mov
test
mov
push
pushf
fs
add
jmp
sub
shlb
sub
orb
mov
dec
xchg
add
addl
mov
mov
sbb
movsl
cmpsb
push
aaa
or
pop
ljmp
inc
add
out
sbb
xor
popf
iret
mov
jae
dec
cltd
and
sub
test
int
add
stos
pop
call
sbb
in
sub
je
into
jb
push
idivb
int
xchg
jo
imul
pop
push
js
xchg
in
push
jno
push
hlt
adc
iret
push
pop
mov
dec
sbb
adc
addl
adc
sub
lret
sub
push
xchg
sub
daa
mov
push
and
in
add
add
fcoms
aaa
lods
push
pop
les
das
push
sub
mov
and
pop
data16
repz
mov
xor
cmp
mov
or
inc
xor
lods
enter
jns
in
add
shl
adc
push
test
sub
inc
sub
in
jno
iret
fdivr
in
sbb
inc
lock
mov
cmp
les
addr16
adc
fcmovbe
pop
and
sub
fcoml
sbb
fcomps
mov
push
test
jbe
movl
xor
call
cmp
or
test
inc
scas
cli
jecxz
addl
fneni(8087
push
inc
mov
pop
lahf
sbb
scas
jne
fwait
dec
sbb
add
xchg
sbb
out
sub
push
sbb
add
repnz
call
xor
adc
ficompl
xchg
adc
bound
sbb
sbb
fldt
xor
dec
test
inc
jo
lahf
pushf
pop
aaa
mov
les
and
or
push
ret
adcl
xor
aad
sub
fmuls
mov
cmp
out
mov
jns
cld
pop
pushf
sbb
fst
roll
xor
lahf
mov
xor
int
das
test
shrb
scas
cld
lahf
sahf
ret
mov
and
cld
mov
pop
inc
pop
or
mov
cwtl
das
out
or
inc
adc
mov
dec
mov
and
adc
imul
sti
aaa
sub
in
pop
add
idivb
sarb
sbb
popa
sub
or
in
xor
pushf
mov
jns
push
jns
mov
clc
adc
or
adc
dec
push
cmp
add
add
jmp
movsb
dec
das
or
pop
mov
adc
sbb
outsb
jb
gs
lock
push
push
mov
and
and
xor
hlt
and
jl
add
add
flds
or
and
adc
push
xor
and
sbb
cmp
fildll
inc
ret
scas
and
and
adc
popa
mov
ja
mov
inc
lcall
faddl
fdivrl
loopne
sbb
icebp
dec
mov
pop
testl
and
mov
movb
sub
and
cmpl
das
sbb
iret
and
and
test
icebp
mov
xor
cmp
or
test
push
ss
roll
jmp
cmp
push
test
add
push
adc
dec
popf
adc
mov
cli
in
cwtl
sbb
inc
xadd
and
je
aam
addr16
adc
push
dec
loopne
nop
cmp
jg
mov
mov
jne
ret
and
testb
test
mov
aad
repz
xchg
fsub
bound
and
mov
inc
rolb
fists
int3
and
lret
and
in
frstor
outsl
mov
xchg
xchg
fsub
mov
or
es
mov
in
inc
sub
js
fdivl
mov
inc
daa
lds
jnp
dec
pop
xchg
aad
add
lods
mov
setno
test
fs
xor
movsl
leave
les
push
popa
xor
xor
cmp
xor
popf
or
dec
and
pop
movsb
test
hlt
push
mov
mov
mov
insl
push
test
or
mov
imul
jmp
int3
mov
les
popa
jge
sbb
flds
mov
outsl
add
in
add
mov
adc
push
jmp
xchg
test
xlat
rcl
shlb
and
or
pushf
sub
lock
arpl
pop
aad
pop
pop
testl
add
out
sbb
mov
inc
stos
sbb
mov
inc
sub
pusha
cmovl
sbb
mov
incb
dec
js
repz
xchg
ret
and
lret
mov
mov
adc
add
nop
into
out
mov
sbb
sarb
inc
rcrl
pop
mov
dec
dec
fld1
push
test
or
jge
lcall
sarb
xor
dec
sub
gs
pop
add
mov
pop
pop
enter
xor
hlt
in
cmpl
dec
pop
mov
add
or
call
mov
lods
add
std
or
pop
imul
rol
mov
adc
clc
jge
loopne
mov
out
xchg
and
adc
cmp
test
les
jno
cmp
xchg
push
adc
push
sub
outsl
jmp
daa
mov
lcall
sub
xor
dec
fs
les
adc
sbb
cmp
ja
sbb
test
mov
push
popl
out
ds
mov
fcompl
sub
add
mov
mov
dec
call
ljmp
xchg
cmp
enter
xchg
dec
push
bound
xor
jo
fcmovu
in
or
adc
cmc
mov
push
lret
insl
mov
inc
loopne
mov
mov
cmp
cmp
clc
fsubrl
adc
in
scas
and
cs
xchg
ret
mov
dec
sub
push
xor
shl
int3
inc
push
mov
ds
fcomp
cmpsl
sbb
ret
ret
add
fwait
mov
fdivrs
and
sbb
and
out
or
ret
sbb
aaa
add
daa
push
iret
pop
pop
cmpsl
insl
or
adc
push
push
aas
jmp
inc
mov
xchg
mov
dec
fsubrl
adc
or
mov
dec
cmpsb
das
xchg
enter
inc
cmp
jne
test
mov
mov
std
push
and
lods
mull
jge
mov
dec
cmp
fsubrs
cli
in
xchg
in
adc
or
hlt
popa
out
mov
sbb
sub
out
xchg
sub
xor
inc
xchg
loopne
addb
ljmp
lods
clc
add
adc
sbb
pop
cmp
ja
cmp
jne
aaa
or
or
jmp
sub
outsl
xor
lar
ror
mov
mov
aam
sbb
mov
shlb
fmull
loopne
sub
mov
adc
nop
push
mov
outsl
sbb
shlb
cmpsl
mov
inc
aaa
das
cmp
xor
adc
fidivl
xor
das
jbe
dec
mov
enter
inc
leave
pop
lret
adc
add
xor
dec
das
ss
das
xchg
add
inc
shlb
jp
pusha
and
xor
cltd
inc
and
insl
cmp
push
sub
xor
cmp
cs
fistps
cmp
sub
popa
dec
sbb
ret
add
stos
ret
cld
jmp
mov
mov
sarb
daa
pop
loopne
cmp
inc
mov
idivb
jge
roll
sbb
push
dec
imul
cwtl
inc
arpl
pop
pop
or
inc
stos
bound
inc
jbe
nop
sub
mov
pop
inc
in
in
mov
cs
push
mov
loopne
stos
ret
loopne
add
movsl
lock
stos
rcl
lods
lret
les
push
arpl
sarb
add
jg
or
ret
aas
xchg
jno
mov
in
xchg
xchg
test
jle
shl
mov
mov
push
jmp
mov
cmp
push
xor
push
je
push
and
dec
pop
scas
or
adc
inc
sbb
xor
fwait
mov
shrb
xchg
xchg
clc
pop
xchg
inc
mov
pushl
rorl
sbb
push
push
mov
int
sarl
xor
clc
adc
je
jmp
push
cld
or
inc
inc
pushf
adc
dec
fdivrl
addl
push
mov
sahf
sbb
or
add
sahf
inc
dec
inc
shl
dec
adc
jnp
stos
andl
inc
jb
pushl
ret
mov
adc
repz
ret
fadds
cld
scas
andl
lock
adc
pop
push
adc
and
jo
mov
and
scas
rcl
xor
scas
cmp
pop
bound
pusha
cltd
adcb
inc
adc
lahf
push
add
les
ja
or
daa
ret
inc
jg
test
xchg
out
ficoms
fdivrs
jns
ja
pop
call
push
fdiv
cmp
sbb
cmp
loope
loopne
repz
jb
je
push
stos
cmp
mov
dec
aam
mov
jb
add
mov
pop
mov
popf
shll
cmpsb
jnp
push
xor
nop
enter
gs
jmp
mov
fwait
movsb
dec
cmp
adc
in
pusha
rorl
cmp
dec
push
ffree
or
adc
les
xchg
mov
or
push
xchg
or
mov
mov
out
sub
inc
ds
rclb
fadd
ret
pop
pop
xchg
dec
ret
jmp
cmp
push
loope
cmp
xchg
add
push
test
xchg
dec
jo
pop
repnz
jae
sub
sahf
mov
xchg
add
push
dec
pop
push
lods
xor
sbb
std
inc
pop
call
cmp
aas
popf
test
and
inc
cmp
adc
inc
js
mov
and
clc
lret
rclb
shll
test
cld
sub
lcall
dec
call
adc
adc
adc
and
mov
test
in
aam
inc
sbb
sbb
sbb
lret
push
sub
inc
mov
imul
loop
add
movsb
dec
cmpsl
mov
add
inc
jl
jle
fs
loopne
adc
sub
dec
outsb
push
and
insb
pop
jg
jmp
mov
push
mov
push
jp
enter
mov
sub
insb
dec
ja
pop
enter
rolb
in
test
sar
jge
push
inc
iret
mov
inc
and
sbb
mov
push
in
mov
into
or
leave
rol
ret
lock
cmp
loopne
sub
sti
stos
cld
mov
sbb
icebp
dec
inc
add
xchg
test
in
sbb
add
cmp
lock
or
hlt
mov
and
das
xor
pushl
addr16
inc
pop
sub
aas
sbb
xor
nop
inc
xchg
push
lret
out
rorb
mov
dec
lcall
dec
cmpsb
push
loope
push
ret
xchg
out
iret
clc
adc
mov
mov
push
dec
push
pusha
adc
leave
repz
cmp
or
std
sbb
sub
fstps
sub
lods
int3
mov
xor
movsb
mov
inc
cs
mov
jae
xor
mov
int3
pop
inc
test
mov
dec
fcmovu
adc
jo
insl
sub
clc
pop
enter
pushf
jmp
daa
xchg
sub
inc
push
lea
push
pop
sbb
add
jmp
das
mov
inc
ja
adc
jmp
lds
inc
jns
and
adc
sahf
push
adc
aaa
int
mov
data16
dec
or
pop
les
dec
clc
mov
fldcw
shrb
faddl
add
add
dec
and
cltd
jp
es
sub
in
fbstp
ret
mov
sysret
xchg
sti
add
jg
sbb
or
sub
or
push
test
adc
inc
adc
mov
push
add
mov
mov
ret
insl
add
testl
xchg
mov
iret
lret
aas
cwtl
je
mov
cmp
adc
fst
xchg
or
imul
add
adcl
scas
push
or
arpl
es
add
push
mov
xor
cmp
mov
xchg
clc
push
mov
dec
inc
call
int3
xor
insb
je
cmp
or
xor
xchg
mov
insl
lret
addr16
call
mov
sbb
pop
popa
insb
sbb
roll
in
ljmp
dec
or
insl
pop
push
jnp
hlt
adc
je
sbb
insl
and
sub
mov
dec
movsl
mov
pushf
shl
jmp
jns
sbb
jnp
inc
cltd
iret
mov
push
push
cmp
jp
or
bound
jg
pop
out
add
mov
addb
loope
ret
adc
push
dec
or
fmulp
mov
or
stos
pop
sbb
push
cli
sarb
jo
pop
pusha
cmp
xchg
push
pop
orl
add
sbb
mov
negl
jl
mov
sbb
jg
xlat
roll
adc
mov
pop
sub
jg
cmpb
rorb
enter
add
xor
sbb
aaa
adc
stos
cmp
dec
mov
lea
jne
or
add
cli
popa
sbb
pop
lods
je
push
inc
add
push
push
vpsubsw
subb
or
f2xm1
jnp
les
mov
pop
dec
mov
push
flds
lods
cwtl
ds
jo
push
jecxz
fs
fs
test
lock
cs
mov
and
sub
shll
dec
adcb
sbb
icebp
addr16
jne
add
and
testb
or
or
add
test
imul
pop
movsl
inc
dec
dec
je
cmp
jo
sbb
std
pusha
aad
pop
push
jae
ret
lahf
pop
or
sub
rolb
pop
shlb
cmp
cmpb
pop
push
add
mov
sbb
aas
add
inc
mov
loope
push
shll
mov
sbb
sub
pop
xor
jne
les
fstpt
cmp
packuswb
je
arpl
cmp
inc
dec
push
imul
sbb
mov
jne
adc
jne
jno
stos
in
imul
ret
pop
aam
ret
icebp
sbb
add
add
mov
mov
jp
inc
loope
mov
lods
dec
or
icebp
pop
rcl
sbb
inc
fstpl
sub
sub
adc
lock
fld
sbb
xchg
aam
and
push
fldcw
xor
test
mov
jns
ljmp
adc
xor
cmp
push
enter
into
mov
sbb
push
call
jo
inc
inc
fstl
adc
daa
sbb
loopne
pop
leave
popa
shlb
cmp
jbe
push
ret
jno
or
dec
mov
mov
xchg
cmp
adc
sbb
inc
and
add
sub
push
pop
or
push
es
jecxz
sbb
jmp
sar
inc
daa
pop
setge
add
inc
push
add
pop
subb
lret
sub
fcomp
inc
orb
push
jnp
pop
add
adc
cmp
andl
addr16
xchg
test
adc
pushf
sbb
dec
inc
setne
push
pop
popa
dec
sbb
or
jl
push
and
movsb
mov
or
movsb
sarl
xchg
icebp
sub
inc
imul
xchg
outsl
jno
pusha
mov
inc
add
inc
and
xchg
dec
imul
xchg
push
sbb
mov
and
jge
push
jae
hlt
push
or
cmp
sbb
mov
add
mov
fdivs
xor
inc
stos
outsl
shl
and
inc
push
pop
hlt
add
pop
stos
push
pushf
jle
in
orl
je
or
outsb
or
pop
add
sbb
mov
dec
sbb
mov
cmpsl
fldenv
sbb
add
jmp
xchg
xchg
add
push
sbb
add
push
adc
inc
loope
or
out
int3
and
sub
or
lret
push
adc
xlat
test
outsl
sbb
jne
sbb
xchg
loope
add
test
int3
test
popa
mov
mov
and
pop
pop
xchg
xchg
add
ffreep
add
popa
or
or
dec
pop
mov
scas
test
imul
insb
aas
jmp
sbb
or
clc
rcrb
cmp
push
lock
adc
cmp
jne
ret
sbb
jno
aam
sbb
adc
pop
adc
int3
adc
repnz
push
push
orb
ds
or
sbb
adc
sbb
aaa
mov
sbb
jno
scas
mov
movsb
mov
fnstenv
sbb
xor
cmpsb
or
or
adc
xor
inc
psubq
xorb
dec
es
jbe
cmp
pop
push
push
jge
adc
dec
push
setge
call
jp
push
push
xlat
mov
push
js
xchg
sarl
ret
add
hlt
adc
inc
pop
sub
jae
mov
fstpl
add
mov
mov
jo
movl
pop
pop
jae
add
nop
out
inc
aaa
sub
sbb
pop
pushf
jb
lahf
pop
arpl
decb
push
lcall
mov
dec
imul
inc
or
cmp
jne
das
lret
adcl
jne
nop
adc
xchg
jl
enter
adc
add
or
push
cmpb
dec
jg
jge
dec
je
mov
cwtl
rol
dec
hlt
pop
dec
cmp
lods
negl
sub
mov
jl
inc
xor
or
push
lcall
mov
jne
int3
mov
decl
out
les
je
or
jg
hlt
outsb
and
cmp
rorb
stos
push
je
push
das
cmc
lods
fmul
jmp
sbb
sbb
gs
mov
adc
mov
cmpsl
xchg
cmc
add
mov
cmpsl
adc
adc
adc
xor
cltd
jo
mov
pop
adc
and
xor
adc
push
mov
push
add
jg
push
dec
cmp
xlat
push
push
ja
jmp
gs
add
int3
xchg
xchg
jecxz
cmp
dec
sbb
ss
pop
mov
subb
sti
mov
call
incb
push
clc
and
dec
jne
or
adc
popa
mov
ja
sub
or
stos
aam
push
inc
cmp
mov
mov
fs
add
mov
or
push
or
es
dec
cmp
test
mov
and
and
mov
mov
pop
pop
stos
test
inc
and
aas
scas
pop
cmpsl
subl
adc
aam
push
xchg
mov
daa
insb
out
or
iret
aam
andl
bound
or
ret
or
cmpsl
adc
shlb
mov
addr16
out
fs
inc
inc
test
and
aad
dec
fidivrl
xchg
fisubs
adc
int
repz
mov
pop
add
out
adc
loopne
lock
mov
je
inc
add
ret
loope
cmp
push
js
stos
inc
xor
xlat
jge
push
pop
inc
adc
push
ds
sub
dec
push
lea
xor
fld
sub
out
lds
or
mov
stos
push
inc
imul
add
daa
pop
add
inc
cmp
dec
dec
dec
test
mov
xchg
cmp
push
mov
push
inc
je
dec
push
pop
sbb
fwait
shll
pop
xlat
sub
push
popa
cmp
adc
insb
mov
pop
cmpb
stc
jmp
lcall
cmp
xorl
or
or
testb
cmp
jne
jo
and
test
sbb
xor
pop
popa
jno
dec
pop
add
mov
imulb
dec
scas
or
pop
loopne
dec
mov
ljmp
pop
adc
sbb
outsl
xor
pop
test
sub
xor
insb
add
push
je
mov
ljmp
xlat
add
rcrb
mov
out
add
sub
sub
push
mov
cmc
add
psrad
setb
add
add
cmpsl
pop
adc
pop
sbbl
or
jle
add
inc
lret
ss
sbb
push
or
cmpsl
add
or
jo
xor
pop
mov
xlat
pop
sti
cmc
jbe
mov
push
or
lock
push
add
xchg
and
add
lret
incl
test
jmp
push
hlt
int3
add
xchg
nop
shl
movl
sub
xchg
loopne
pop
fsub
and
sbb
push
adc
add
fidivrl
fdiv
sbb
nop
outsb
cs
add
clc
jne
insl
in
shlb
sub
pop
mov
inc
adc
mov
xor
bnd
push
add
sbb
ljmp
adc
test
add
pop
mov
cmpsl
inc
add
jmp
xchg
xor
push
push
push
push
pop
or
dec
cld
push
fcompl
rcl
push
aas
push
and
fdivs
rcll
sub
lret
sbb
mov
push
divps
add
jo
or
xchg
push
adc
adc
add
dec
rorb
xchg
dec
movsl
cltd
jecxz
pop
sbb
in
cmpsl
sbb
xchg
sub
or
mov
adc
jae
test
in
push
or
or
cmp
inc
rcrb
es
mov
and
pop
add
sbb
fdivrs
in
mov
inc
stos
in
movl
testl
out
or
into
push
test
bound
scas
es
aaa
or
inc
pop
sub
jne
sub
test
enter
ja
xor
adc
and
lock
pop
leave
and
out
pop
jg
mov
adc
xor
inc
stos
adc
push
xchg
test
call
test
or
aam
divl
xorb
inc
ret
aaa
mov
add
push
and
cmp
mov
mov
jg
push
lea
mov
mov
cmpl
sub
mov
pop
or
shlb
inc
add
pop
add
mov
cld
pcmpeqb
xor
inc
movsb
pop
mov
pop
push
cld
dec
test
scas
adc
sub
mov
push
inc
or
inc
pop
mov
inc
inc
mov
clc
xor
stc
dec
jmp
jnp
push
daa
mov
insl
popa
jbe
sub
and
mov
xor
jp
pop
ds
pop
hlt
jle
push
push
dec
cwtl
push
sub
in
push
adc
mov
fmuls
adc
dec
sub
cld
push
test
outsb
aaa
add
ss
sub
push
pcmpgtb
sti
pushf
lock
test
or
cmp
aam
das
mov
mov
jge
lret
or
push
shlb
aad
aas
mov
push
push
mov
int3
popf
cmp
mov
pop
cld
in
in
mov
sbb
sub
les
setae
push
mov
jne
lret
in
push
inc
push
sbb
in
int3
xchg
mov
adc
or
dec
jb
sub
rolb
je
xor
iret
add
mov
push
add
nop
push
mov
arpl
xchg
call
ret
add
movsl
xor
dec
dec
lock
adc
ja
cltd
or
and
xorb
mov
pop
scas
prefetchw
dec
les
adc
stc
fistpll
push
pop
rcll
mov
or
adc
sub
nop
outsl
out
adc
xchg
or
nop
push
push
les
dec
int3
mov
push
imul
repz
or
jmp
dec
cmpsb
push
lea
adc
sahf
shr
data16
mov
je
add
inc
in
sbb
sub
mov
insl
mov
pmuludq
or
fcoml
push
flds
ljmp
loop
out
call
cmp
jmp
fsubs
pop
sbb
fildll
jns
out
leave
popf
movsl
lods
or
out
imul
jmp
jmp
repz
cmpsl
stc
cmp
add
shll
cmp
mov
repz
inc
sub
add
ret
dec
lcall
fdivrp
inc
cltd
icebp
sbb
xchg
cmp
cs
outsb
xor
dec
loop
push
inc
call
mov
adc
push
sub
lcall
pop
aaa
mov
stc
dec
and
pop
and
test
loop
xchg
out
test
add
mov
out
adc
pop
out
push
mov
mov
adc
imul
xchg
nop
fmul
xor
ljmp
xchg
push
inc
or
rorl
xor
jno
out
in
jae
dec
std
stos
adc
hlt
pop
loop
in
popf
mov
rclb
sub
mov
roll
add
mov
add
fistpll
mov
les
pop
mov
mov
cwtl
add
sbb
xor
fcoms
sbb
leave
inc
pop
push
shlb
leave
jae
pop
mov
js
arpl
or
pop
movsb
adc
add
xchg
cmc
push
push
dec
jne
inc
sbb
out
pop
and
xchg
cmovp
lods
pop
cmp
mov
adc
add
lods
pop
push
arpl
clc
loope
sbb
jl
jecxz
mov
add
fs
jp
lahf
loop
rcl
mov
push
mov
mov
lock
test
cmp
sbb
test
sub
add
push
ljmp
jno
and
jns
repnz
inc
xor
icebp
popf
adc
inc
and
clc
pop
fisubrl
in
sbb
sbb
xor
and
outsl
cmp
adc
fs
jne
movsl
lock
jecxz
dec
jne
les
popa
fistps
mov
cmp
fs
sub
ret
fstpt
test
sahf
popf
xchg
test
icebp
testl
fstpl
push
mov
add
cmp
pslld
and
add
in
adcb
push
inc
pop
and
and
xchg
dec
push
add
js
mov
adc
mov
std
push
jne
mov
jmp
jno
mov
sbb
loopne
and
jnp
scas
push
adc
cmp
clc
divl
rolb
xorl
fldcw
inc
ja
or
cltd
lea
add
daa
pop
fdivl
repnz
mov
push
cmc
xor
cmp
mov
and
loopne
and
cmpsb
push
mov
or
leave
and
fucomip
adc
into
fcoms
pop
push
mov
mov
cs
dec
xchg
mov
jno
xor
cwtl
fisubs
cmp
call
cmc
xchg
xchg
fwait
push
lock
ja
mov
test
or
in
into
push
inc
cwtl
sub
shlb
push
mov
cmp
out
sbb
hlt
loopne
add
jmp
addl
sub
scas
int
scas
call
sbb
adc
cld
jmp
pop
dec
sub
jne
pop
enter
call
addl
cld
nop
into
aam
aas
cmp
mov
sbb
jl
js
or
das
and
stos
push
jb
sbb
adc
cmpsb
ds
jl
int3
int3
jge
dec
sub
int
bound
stos
xchg
adc
imul
orl
popa
cs
pusha
and
aaa
repz
dec
mov
jae
add
mov
nop
push
fadd
in
lahf
xor
out
push
incb
jnp
das
push
inc
jne
mov
cwtl
mov
popf
outsl
call
jl
js
sbb
add
lock
mov
out
inc
cmpsl
add
dec
and
clc
jge
cmpsl
push
lock
ret
cs
cmpsb
faddl
aam
xor
push
inc
imul
sub
pusha
mov
inc
cmp
push
aaa
push
fwait
mov
aad
iret
int3
int3
or
jmp
pop
andl
push
jbe
sbb
pushf
in
dec
mov
fwait
add
jmp
inc
sbb
lock
ud0
mov
push
sub
cmpb
ret
sbb
lahf
mov
pop
loopne
int
lret
mov
cwtl
add
dec
or
add
and
dec
adc
cwtl
pushf
lcall
xor
test
popa
xor
mov
stos
adcl
or
add
or
inc
xor
bound
jno
hlt
cmp
jo
ret
push
imul
lea
lahf
mov
mov
mov
mov
pop
sub
aas
add
enter
sub
pushaw
add
dec
outsb
adc
xor
aas
xor
xor
jmp
sbb
and
loopne
jmp
lods
jmp
push
call
and
cmpsl
pop
popa
sbbl
ss
fbstp
pop
clc
adc
xchg
pusha
aad
sar
leave
sub
out
add
out
mov
movsl
or
scas
inc
fistl
loopne
jmp
cmp
aad
mov
jecxz
sub
add
sbb
or
sbb
test
cld
out
or
add
add
inc
aaa
xor
add
aaa
mov
aaa
adc
xor
out
adc
mov
test
test
scas
or
sti
mov
jg
int3
mov
imul
lahf
jecxz
dec
cmpsl
mov
shlb
daa
mov
call
push
and
scas
add
cld
and
insb
sbb
jnp
fistps
sub
adc
pop
adc
inc
mov
mov
out
jae
popf
xlat
lods
cld
lock
ret
mov
sub
cld
jg
and
adc
sbb
cmpb
ficompl
dec
aas
adc
dec
xor
sub
mov
mov
mov
or
xor
in
mov
pop
aas
or
xchg
mov
dec
jae
inc
shll
add
divl
movsb
jl
movb
movsl
jl
push
xchg
std
mov
movswl
and
adc
sbb
pop
fldcw
clc
or
rclb
push
ret
jmp
or
dec
data16
jb
sbb
adc
sbb
jae
std
jmp
push
mov
aam
add
dec
sbb
add
or
lods
dec
adc
dec
adc
arpl
cs
cmpb
and
repnz
and
loopne
or
xor
fiaddl
cs
or
incb
push
push
popa
cmp
jle
push
pop
inc
add
and
mov
sub
sub
ficoml
xchg
sub
or
add
inc
adc
sbb
jne
addr16
and
mov
add
jae
dec
ds
cmp
fcom
jmp
push
call
fcoml
pop
jmp
push
lock
push
adc
nop
out
and
add
sbb
sar
dec
add
and
mov
jmp
xor
lock
les
pop
and
lock
clc
sarb
pusha
jl
inc
or
cs
and
das
adc
inc
inc
mov
and
mov
jge
push
hlt
leave
and
add
dec
popa
mov
sub
or
call
jne
adc
cld
inc
ljmp
xor
push
jl
mov
jae
or
insl
adc
push
aas
incb
adc
jle
lea
movsl
add
inc
and
ds
jb
push
sub
push
push
xor
jmp
dec
push
sahf
dec
add
and
test
or
and
and
xchg
inc
es
dec
inc
sub
adc
dec
pop
add
ja
enter
jne
daa
and
jl
adc
ljmp
push
push
adc
fisubrs
xor
fs
pop
sbb
ret
xor
rcll
dec
sbb
clc
addl
and
test
or
addr16
pop
sbb
cbtw
push
pop
das
testb
and
sbb
divl
out
sub
ja
add
adc
loopne
sub
je
call
adc
add
jne
adc
insb
popa
jns
jae
lock
mov
rol
add
cld
out
xor
inc
and
add
pop
sahf
lret
or
or
add
dec
in
adc
push
xchg
pop
sub
lret
dec
add
repnz
or
mov
in
add
cmpl
add
jle
and
das
je
push
clc
sbb
adc
add
arpl
jb
andb
pushf
rolb
das
xchg
pop
movsb
sarl
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
je
rclb
shll
jbe
cld
shlb
inc
mov
sub
xchg
mov
dec
xor
add
push
mov
add
adc
adc
insb
outsl
addr16
imul
mov
decl
jbe
js
in
in
jp
jl
in
in
jle
pusha
in
in
popa
bound
in
in
gs
in
imul
in
outsb
outsl
push
in
in
push
push
push
push
in
in
push
push
push
pop
in
in
pop
pop
pop
pop
in
in
pop
pop
pop
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
inc
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
out
in
es
cmp
push
pop
incl
mov
or
or
xor
jnp
inc
ss
mov
decb
leave
movb
sbb
ficoml
dec
shlb
fs
push
mov
xchg
stos
pop
into
inc
inc
fmuls
out
add
push
jecxz
lret
xlat
adc
or
mov
cmpb
loopne
push
into
adc
push
add
mov
jmp
adc
lcall
add
adc
jl
rolb
pusha
dec
or
insb
add
mov
xor
add
nop
mov
push
sbb
adcl
sti
mov
ret
inc
cmp
mov
dec
mov
imul
inc
push
mov
pop
lcall
add
push
mov
jnp
test
pusha
or
push
jl
xchg
adc
dec
stc
test
jne
cs
pop
dec
icebp
push
add
push
rcrb
mov
and
xor
or
sub
ficoms
js
adcl
push
sbb
cmp
or
lods
mov
test
je
pushl
or
sub
mov
and
loope
insl
mull
sbb
andb
jnp
jmp
flds
or
cmp
pop
movsb
or
mov
xor
movsl
out
pop
and
lds
add
sub
xlat
or
or
stos
pop
cwtl
ret
or
mov
inc
movsl
adc
ret
sub
popa
mov
nop
cmc
sbb
push
xchg
pop
push
xchg
ljmp
dec
sarb
ret
cwtl
gs
jge
outsl
jecxz
add
test
add
push
movsb
or
cmp
dec
xchg
mov
enter
jl
dec
adc
idivl
jno
iret
mov
dec
add
push
pusha
rol
inc
jne
lcall
cmp
loope
add
mov
in
je
cmp
clc
es
jnp
test
add
xchg
outsl
test
ror
sbb
in
ds
adc
ss
pusha
adc
xor
daa
ficoml
mov
arpl
push
sbb
push
ret
pusha
mov
mov
inc
enter
lock
daa
pop
xor
data16
mov
and
adc
add
idivl
push
add
or
out
jae
movsb
xchg
or
mov
add
jae
je
rorb
push
je
insb
jno
pop
fwait
sbb
xor
data16
enter
je
arpl
outsl
or
outsb
add
loop
xchg
in
in
sbb
ss
fisubs
adc
add
lcall
idivb
outsb
int
xor
pop
jo
stos
inc
mov
outsl
sbb
push
inc
incb
or
je
sbb
or
leave
fmull
in
push
inc
jl
or
add
les
sbb
jb
sub
jnp
push
inc
insb
dec
dec
jmp
mov
inc
or
insl
inc
insb
outsl
iretw
inc
sahf
push
push
push
push
jo
fwait
data16
call
sbb
jno
mov
or
nop
and
jbe
xchg
cltd
rcrb
adc
xor
sbb
xor
aas
inc
dec
out
mov
loopne
imul
cmpsl
je
add
shll
inc
jb
or
jo
mov
pop
jns
push
xor
dec
imul
add
sbb
je
iret
mov
inc
adc
pop
out
pop
nop
inc
outsl
jb
jae
es
xchg
adc
pusha
pop
or
mov
scas
inc
and
inc
testl
andps
sbb
mov
pop
sub
gs
lret
mov
lods
ljmp
mov
icebp
imul
sub
and
mov
cmpsl
inc
xchg
clc
rol
fsubrs
nop
or
jns
mov
cmp
sub
add
in
cmpsl
push
sub
sub
out
jmp
pop
std
fdivl
add
cmp
pop
dec
or
adc
push
in
xor
hlt
add
pop
outsl
orb
cmp
sub
push
add
push
das
aas
cs
xchg
addb
gs
mov
rolb
xor
xor
xor
or
repnz
or
pop
dec
mov
ja
roll
add
negb
ss
push
add
push
push
cmp
dec
mov
jl
jl
pop
insb
loop
xchg
mov
les
jns
icebp
pop
mov
cmp
es
lahf
and
sbb
or
adcl
xor
lock
add
or
bound
add
mov
jnp
aam
mov
movl
add
push
xor
lods
adc
call
pop
and
push
movzwl
test
add
add
xor
xor
movl
pusha
sbb
les
add
jo
addr16
pop
nop
scas
mov
cmp
inc
ret
cmp
mov
pop
lods
imul
push
cli
push
pushf
sub
cmp
xlat
loop
push
and
add
aas
push
int3
push
or
vandnps
inc
test
pop
flds
shlb
push
inc
shll
cmp
add
lock
dec
pop
test
mov
popa
or
cmp
jo
add
loopne
push
xchg
dec
test
jne
outsb
adc
inc
insb
adc
orb
inc
push
add
push
sub
pusha
inc
mov
add
or
fs
and
outsl
ja
adc
push
ret
add
add
fidivs
imul
or
dec
push
jb
or
les
ficoms
or
inc
les
and
sbb
add
push
xor
fdivrl
jnp
fmul
daa
sbb
decl
mov
es
sbb
lcall
jnp,pn
push
sahf
imul
cmp
sub
hlt
push
sub
loopne
xchg
icebp
and
dec
push
inc
fcoml
cmpsl
addr16
mov
pop
in
adc
pop
jo
scas
jns
paddq
pop
add
movsb
outsb
lock
pop
fsubs
cmp
push
or
xor
enter
xor
nop
jg
dec
call
cmovge
stos
fcomp
out
inc
push
fdivrs
mov
xchg
or
jne
stos
mov
mov
mov
xor
mov
push
add
push
push
sub
daa
hlt
stos
scas
inc
pop
rolb
mov
es
mov
mov
add
js
add
xor
je
jb
push
arpl
jbe
pop
and
das
mov
ss
or
inc
or
push
shrb
or
sbb
push
jnp
in
pop
sbb
fiaddl
into
test
or
cmp
mulb
movsl
inc
ret
nop
nop
mov
loope
es
xor
mov
in
inc
cmp
jnp
js
inc
or
adc
test
ja
dec
or
addr16
daa
jp
imulb
jo
imul
jns
out
inc
fs
push
mov
loopne
xchg
pop
sub
sbb
movsb
cmp
lock
xchg
je
jp
stos
pop
jno
push
or
or
mov
loope
fcoms
dec
cmp
push
inc
dec
repnz
jl
jl
jle
scas
int
stc
push
cwtl
push
orl
fwait
outsl
call
mov
pcmpeqd
push
fs
cmpxchg
int
xchg
sub
int3
push
cld
xchg
pop
imul
clc
mov
pop
sbb
xchg
ficoms
sbb
hlt
lahf
add
or
outsl
outsb
pop
insb
inc
dec
pop
sbb
nop
pop
test
jns
hlt
xor
int3
xchg
cld
xchg
jo
in
pop
xchg
mov
sbb
cwtl
inc
and
jo
sbb
xchg
lock
imul
and
jo
pop
add
jg
push
pop
sbb
cmp
cs
fwait
bound
or
xchg
aaa
adc
and
pop
push
inc
decl
add
inc
and
mov
push
sbb
dec
nop
dec
sahf
sub
push
inc
fsubs
insl
rorl
xchg
data16
add
jne
mov
jo
pcmpgtd
or
sbb
push
popa
pop
call
pop
mov
pop
and
xor
movzwl
popa
loopne
mov
push
adc
add
adc
aas
push
hlt
and
dec
sbb
or
je
jl
add
jne
sahf
sub
mov
add
lahf
jge
rorl
inc
cmp
out
inc
and
xor
and
xchg
test
dec
pusha
mov
adc
xchg
ljmp
or
ret
pop
push
add
xchg
or
fs
jge
lds
sbb
pop
adc
test
cmc
out
push
test
testb
movsl
mov
movl
inc
cmp
mov
enter
and
and
popf
sub
int
cmc
cmp
add
push
stos
sbb
in
or
sub
sti
adc
push
repnz
xchg
and
pushf
mov
jb
sarb
mov
rcrb
imul
dec
cmpsl
add
ficoms
mov
je
cmp
cmp
adc
mov
and
and
fdivs
xchg
lahf
fbld
mov
sar
je
incl
xor
xchg
fst
movlhps
xchg
cmpsl
iret
cmpb
jp
js
sbb
pusha
imul
ret
xor
adc
mov
pop
jle
adc
push
xchg
add
stos
sbb
jmp
and
pop
xor
iret
sub
movsl
mov
out
jmp
jp
fsubs
je
sub
cld
adc
outsl
xchg
push
jg
mov
inc
adc
adc
sub
dec
push
pop
popf
les
test
or
push
dec
aaa
rcrb
xor
jmp
dec
xlat
daa
add
or
jb
outsl
outsb
or
jnp
inc
inc
lods
outsb
stc
out
repnz
pop
dec
insb
imul
jbe
add
insl
repnz
push
jne
jo
gs
push
gs
insb
pop
jge
add
imul
addr16
adc
dec
in
addr16
mov
xor
repnz
outsb
setg
or
arpl
imul
jno
popa
mov
pop
pop
or
jns
jnp
adc
add
ja
jbe
push
inc
in
and
fisttps
jnp
cmp
outsl
inc
outsl
insb
das
repz
pop
xor
inc
popa
scas
pop
push
mov
add
push
pop
imul
or
addr16
adc
lcall
push
push
popf
jp
xchg
dec
adc
popa
inc
nop
fstps
or
bound
js
jg
fiaddl
push
push
fcoml
add
daa
pop
xchg
fcoms
fs
lahf
sbb
imul
outsl
enter
fsts
shlb
test
nop
negb
push
lods
loope
mov
adc
rep
andb
adc
adc
add
out
or
cltd
push
mov
daa
or
adc
push
pop
outsb
jne
nop
outsl
mov
daa
punpckhbw
ror
das
lahf
test
ret
push
arpl
scas
jecxz
inc
insb
mov
imul
shrl
sub
daa
or
or
fdivs
incb
test
push
mov
mov
cmc
xchg
or
pop
xchg
pop
pop
clts
or
push
adc
das
insb
add
mov
lcall
out
mov
dec
pop
inc
dec
inc
push
push
inc
push
push
ja
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
fcomps
fadds
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
popa
imul
dec
and
out
inc
inc
xor
xor
mov
movb
and
inc
xor
xchg
inc
push
inc
inc
dec
notl
int
addb
mov
push
insl
imul
sbb
mov
nop
jl
inc
dec
push
mov
rcr
roll
or
push
dec
lock
rclb
adc
push
push
push
dec
push
inc
pop
repnz
dec
inc
dec
push
mov
fs
pop
pop
nop
push
mov
fcoml
sti
mov
lfs
pop
test
push
and
loope,pn
les
dec
add
mov
orb
xorb
je
adc
jne
add
enter
pop
mov
out
adc
sarb
sbb
and
mov
adc
cmpxchg
jl
mov
sbb
mov
and
jmp
or
fcomps
add
mov
jg
mov
lea
sbb
jo
jbe
add
mov
adc
add
pop
push
adc
ljmp
sbb
es
pusha
cmpsb
inc
cmp
stos
adc
inc
lods
lahf
mov
sub
inc
xor
das
dec
dec
or
sbb
inc
adc
out
xor
push
jle
loopne
je
jne
xor
mov
xorb
push
xchg
loop
mov
jns
dec
or
cld
testl
insb
fcoms
inc
adc
mov
pop
sbb
adc
addr16
jae
les
in
push
cmp
pop
cmp
je
or
pop
aas
xchg
cmp
clc
cmp
or
out
adc
or
or
mov
fimull
mov
mov
inc
adc
ficoml
dec
gs
rorl
inc
or
sbb
mov
call
je
dec
imul
enter
test
je
shrb
jmp
adc
lret
in
adc
inc
aam
add
je
add
push
cmp
xor
fsubl
cmpb
out
jbe
cmp
jmp
or
icebp
daa
test
cwtl
add
jnp
mov
sarl
mov
sub
sub
sbb
orb
loope
push
mov
jb
sti
add
mov
jmp
xchg
xor
mov
inc
roll
in
cmpb
aad
pop
fwait
adc
clc
pop
push
pop
rol
addb
fs
rep
xchg
pop
jmp
fadds
ljmp
mov
push
push
or
mov
fidivrl
or
dec
fldt
sarb
xchg
enter
push
xor
and
imul
test
or
mov
sbb
jecxz
fmuls
mov
sub
mov
push
adc
rcll
xor
add
push
inc
pop
test
test
lods
sbb
pop
jl
jne
inc
insl
sub
adc
rolb
mov
pushf
inc
xchg
dec
lcall
inc
or
add
jae
fldl
lea
aam
inc
sbb
neg
xor
mov
mov
neg
push
mov
mov
push
sbb
fmuls
sarb
lock
push
incb
pop
adc
add
xchg
push
sbb
cmp
push
mov
dec
outsb
sbb
sbb
push
inc
dec
xchg
ss
push
dec
sbb
and
loopne
inc
mov
test
jmp
je
nop
movb
and
nop
dec
push
sbb
jns
pushf
nop
test
dec
xor
or
or
sbb
and
add
xor
ljmp
pushl
pop
jb
nop
xor
cmpsb
add
leave
and
and
adc
stos
or
jae
jnp
js
fldenv
pop
inc
cmp
sbb
rcrb
and
scas
movsl
lock
sbb
mov
in
loopne
xor
xchg
push
repnz
push
movd
sahf
mov
jns
shrl
and
and
mov
lock
test
and
and
stos
push
or
mov
xchg
adc
cmp
mov
xor
and
xchg
lahf
and
dec
xor
adc
out
inc
push
adc
dec
and
mov
fisttpll
cmp
adc
out
and
xor
push
adc
adc
xchg
and
and
sbb
or
add
notb
and
in
add
aaa
jne
sbb
add
rolb
and
dec
ret
das
xor
add
push
fs
cltd
loop
xor
rclb
or
shlb
sbb
push
adc
shll
subb
das
in
pop
hlt
lock
test
lahf
andb
dec
mov
adc
ficoms
cmp
sahf
pop
jo
dec
lahf
mov
xchg
sub
popa
jae
xor
rcr
enter
imulb
ret
add
adc
pop
push
jle
mov
lahf
nop
cmp
inc
pusha
adc
pop
in
inc
sub
js
jl
dec
in
cmp
cwtl
movl
cmp
cmp
push
add
mov
xchg
bound
in
and
pop
imul
push
addr16
fldcw
mov
push
adc
sbb
xchg
mov
cmpsl
das
ds
and
insl
cli
cmp
cmp
sti
std
add
or
push
add
or
pop
or
or
sarl
or
cwtl
push
sub
push
push
pop
arpl
mov
xchg
andb
and
adc
fildll
cmp
cmpsb
cmp
addl
jp
psrlw
xor
fld
inc
sub
and
adc
sbb
and
iret
push
ds
shrb
adc
add
cmpsl
loopne
dec
adc
pop
add
not
jo
es
push
in
loopne
lods
cltd
rol
fmuls
mov
mov
cmpsb
jge
push
insl
enter
sub
or
insb
movsl
mov
mov
mov
pusha
xor
sub
nop
xchg
dec
push
mov
cmpsl
add
andl
adc
rol
xchg
dec
aaa
add
pop
mov
rclb
xchg
ret
js
movzwl
divl
hlt
pop
push
cmp
push
fnsave
pop
push
mov
bound
pop
popl
cmpsl
add
push
add
sub
aaa
or
fisubrs
cmp
in
sbb
mov
cmp
rclb
sbb
adc
pop
lock
pop
ret
mov
out
dec
jb
int3
xor
push
orl
pop
cltd
mov
sbb
adc
pop
popa
xor
hlt
jne
mov
popa
inc
or
addr16
lea
movsl
movsl
push
inc
cmpl
scas
mov
mov
push
sbb
sti
dec
add
iret
push
push
in
push
cmpsl
outsl
add
sbb
mov
outsl
pop
aam
jbe
mov
dec
add
push
sar
inc
test
or
shlb
dec
sahf
push
and
ja
sbb
push
xchg
orl
mov
scas
or
gs
dec
fcomps
sub
push
sbb
mov
add
arpl
push
lea
sub
orb
adc
jbe
push
insb
jae
repz
inc
mov
not
and
push
ds
je
negb
mov
aad
push
pop
inc
pop
pusha
pop
in
mov
stc
push
cmp
rol
xchg
imulb
jl
add
or
or
xor
sbbb
dec
sub
flds
sbb
or
out
and
aam
cmp
sbb
jne
out
and
adc
and
jne
pop
push
ror
add
rclb
inc
icebp
lahf
idivb
xchg
xchg
dec
mov
xchg
das
pop
enter
mull
mov
hlt
push
inc
mov
xor
cwtl
mov
add
push
jbe
mov
repnz
inc
dec
repnz
inc
inc
push
mov
cmp
inc
inc
fwait
and
pop
xchg
in
pop
adc
sbb
movsl
push
pop
push
xor
push
push
cmpsb
sub
adc
xor
cmp
ror
sti
sbb
lea
dec
adc
shrb
cmp
cli
les
xor
sub
inc
inc
pop
xchg
pop
dec
cld
xor
dec
out
add
pop
divl
sahf
pop
or
hlt
fxch
and
xor
xor
pop
shl
test
int3
push
push
lock
push
push
adc
add
arpl
cwtl
jp
test
fs
sub
aad
or
push
imul
scas
cmp
fdivl
movsl
addr16
xor
mov
sbb
in
rcll
es
jle
insb
fistpl
mov
push
xchg
loop
push
in
cmpsl
cmp
adc
inc
popa
lock
adc
data16
orb
mov
je
or
enter
adc
loope
or
fiaddl
fincstp
shll
fldenv
dec
gs
add
das
xchg
push
jae
adc
jns
imul
insb
cmp
adc
enter
and
push
add
add
push
loopne
jge
adc
pop
jle
sub
sub
stos
int3
jmp
xchg
push
outsb
push
jecxz
adc
xchg
je
rcrb
and
jo
stos
fwait
inc
or
sbb
andb
cmp
sbb
sub
in
and
cmpsl
insb
and
xchg
and
push
push
sub
out
fdiv
dec
jmp
jns
pop
xor
enter
add
sbb
lock
imull
add
inc
aad
add
push
mov
sub
push
mov
stos
popa
movsl
movl
repz
mov
jmp
sbb
sub
or
adc
add
or
push
adc
ficoml
xor
pop
sti
mulb
lea
add
dec
pop
add
fdivs
mov
or
add
mov
loopne
mov
add
fcmovnb
inc
test
mov
fdivrs
inc
sti
cmp
aas
dec
sub
dec
pop
jecxz
jns
out
mov
lea
pop
pop
pop
mov
push
inc
dec
jne
and
jge
adc
adc
adc
fcmovb
imul
sbb
add
loopne
mov
frstor
jae
push
je
fsubrl
in
push
cmpsb
pop
push
sarb
outsb
push
fcomps
and
push
jo
or
mov
mov
mov
sub
shl
mov
mov
jmp
addb
add
sub
cli
and
cld
push
or
and
add
aad
inc
push
ret
cmp
fadds
mov
test
or
nop
cmpl
ds
add
xchg
sub
inc
bswap
mov
mov
test
jg
pop
xor
push
cs
dec
pop
ss
jmp
addr16
data16
push
inc
cld
add
mov
imul
or
dec
leave
push
fiaddl
add
push
out
inc
add
mov
and
das
mov
icebp
inc
das
adc
cmp
inc
add
dec
mov
and
or
in
cmc
clc
or
add
pop
out
sub
adc
mov
push
inc
and
fidivrs
mov
pop
push
push
pop
clc
popf
lods
adc
outsb
movb
push
shlb
dec
mov
cs
xor
push
int
loopne
add
inc
xchg
or
les
aaa
lar
in
jae
and
dec
pusha
rcl
add
pop
and
hlt
loopne
out
ss
push
or
mov
jo
ret
and
pop
add
ds
add
outsl
fadds
jo
leave
fwait
mov
mov
mulb
ds
in
shrl
mov
mov
xor
test
sarb
push
adcl
ljmp
jge
add
xchg
sub
pusha
ret
push
gs
or
adc
mov
movsb
adc
and
dec
rcrb
adc
add
fmull
xchg
pavgb
in
icebp
mov
bound
push
pop
pop
adc
shrl
and
adc
xor
insb
pop
cld
push
and
test
and
sub
jae
fmuls
mov
lods
xor
inc
shl
insl
out
addl
and
push
or
inc
xchg
add
or
add
pop
add
jne
jge
idivb
ss
add
and
in
mov
cmp
jg
test
jle
cmp
jl
cmpsb
dec
js
lcall
or
cmp
jle
add
dec
cmpsl
mov
push
mov
hlt
shl
nop
cmp
orb
adc
pop
dec
dec
imul
add
sbb
fcoms
push
pop
push
es
les
adcl
mov
fdivrs
and
fsubrs
mov
imul
cmp
or
mov
mov
test
lds
inc
dec
cli
addb
mov
jns
add
mov
jge
mov
into
and
shll
outsl
outsl
jg
in
sub
loopne
es
cmp
ss
mov
pop
imulb
clc
cli
mov
inc
dec
jne
cmp
push
xchg
add
cmp
xor
rorl
and
sbb
push
repnz
add
sub
inc
cmpb
add
or
and
and
mov
nop
nop
mov
pop
sbb
int3
jbe
cmp
nop
pop
pusha
mov
sub
in
imull
sbb
imul
mov
cs
or
mov
rolb
repz
mov
adc
push
mov
fimuls
sbb
or
outsl
add
push
hlt
je
or
rcrb
imul
add
imul
or
in
sub
push
xorb
lock
dec
or
cmpsl
in
outsb
rorb
rorb
and
cmp
jl
pop
mov
aam
out
lods
rclb
pop
or
push
push
lea
dec
push
in
aas
and
sbb
jo
jne
sub
sti
lea
mov
inc
or
mov
sub
add
sub
out
add
je
dec
or
jle
lock
push
xor
shr
pushf
push
in
jmp
pop
sub
in
xchg
cwtl
jmp
adc
or
mul
cltd
inc
aam
and
sub
or
aad
lock
inc
and
jae
and
insl
or
push
push
sub
xchg
pop
imul
inc
movsl
and
in
es
xchg
lret
jecxz
mov
je
dec
lock
imul
add
and
jmp
pop
mov
stc
lcall
pushf
mov
sbb
or
pop
jo
cwtl
fstpl
hlt
and
adc
push
leave
adc
push
imul
stos
popa
cs
aaa
stos
rcrl
mov
icebp
rcl
mov
sub
int
jae
ja
push
clc
clc
hlt
nop
xor
hlt
incl
pop
sub
push
xchg
sub
xchg
mov
nop
lahf
lods
mov
mov
mov
mulb
jns
nop
push
sbb
adc
gs
jg
push
xchg
push
add
adc
xor
xchg
addr16
push
in
hlt
int3
jo
push
scas
ret
xor
mov
insl
lcall
adc
in
add
fcoml
jbe
add
loope
and
push
imul
jg
inc
push
add
cmp
xor
jns
xchg
adc
or
xor
mov
push
insb
in
xchg
inc
repz
or
lods
dec
or
mov
orb
in
lods
mov
adc
jl
add
push
push
imul
lods
sbb
in
in
adc
lock
mov
push
std
hlt
loopne
fdivrl
clc
call
jo
int3
sbbl
sub
idivl
movb
out
dec
add
add
addl
jno
pop
mov
sbbb
mov
xor
push
jo
test
dec
or
or
das
mov
xor
nop
xchg
mov
xor
inc
push
jb
jae
lcall
or
lret
xchg
daa
popa
sarb
ficoms
aas
ja
dec
cmp
insb
or
dec
inc
xchg
cmp
push
cs
adc
in
je
sub
mov
inc
rolb
ret
push
test
push
xchg
clc
pop
inc
dec
aam
lret
mov
add
push
mov
call
cmp
jbe
xchg
push
and
pop
jne
cmp
add
outsb
jecxz
jl
push
mov
rolb
or
clc
mov
inc
mov
add
adcb
xor
push
xchg
push
push
sbb
push
cld
mov
ret
pop
mov
cmp
negl
inc
sbb
sbb
lock
push
scas
loopne
push
push
pop
or
nop
test
shrb
or
cs
ret
inc
cmpsl
xor
lods
jmp
and
mov
and
or
xchg
stos
mov
ret
clc
pusha
add
push
gs
push
aaa
shr
mov
in
in
mov
cmp
push
inc
popa
loopne
xchg
add
bound
lahf
and
stc
mov
mov
push
xor
movsb
bound
fstpl
mov
in
ds
dec
sub
mov
les
das
sbb
mov
add
lock
dec
mov
xchg
lock
xchg
xlat
ja
popw
jge
xchg
sbb
imul
xlat
lcall
fadds
push
jp
and
push
dec
pop
shr
jo
and
sbb
mov
mov
icebp
cmc
mov
pop
popf
mov
adc
mov
jle
dec
and
xchg
jnp
sbb
add
or
mov
stos
add
inc
addr16
ds
inc
xchg
xchg
cmp
inc
bound
dec
pop
adc
int3
jge
clc
fcmovb
fldl
jne
pop
xor
xor
inc
clc
frstor
inc
xchg
push
pushf
cmp
dec
pop
mov
sub
pop
inc
add
imul
and
pop
bound
daa
mov
mov
dec
pop
movsb
jb
popa
and
mov
sub
daa
xor
mov
push
or
test
shll
sbb
sarl
adc
stc
push
das
push
dec
sbbb
add
ja
cmp
aas
mov
inc
test
daa
mov
repnz
fcoms
dec
lods
mov
jno
mov
mov
inc
or
dec
je
loope
inc
sub
mov
enter
adc
popf
or
mov
xlat
ds
js
pop
jne
mov
or
adc
adc
pop
fcomps
pop
pusha
mov
inc
sub
push
lcall
xchg
pop
mov
sbb
adc
xor
inc
repnz
rcrb
out
dec
stos
inc
call
and
movb
push
pop
mov
pop
mov
das
sbb
inc
sbb
or
mov
ja
adc
inc
push
and
dec
pop
out
mov
addl
sbb
das
xlat
xchg
adc
adc
fdivl
jno
mov
jno
dec
dec
fcomps
or
cmp
jno
jmp
orl
aaa
ret
test
and
rcrl
jnp
rcrb
sbb
sbb
fistps
and
or
and
mov
and
xor
mov
adc
adc
or
dec
push
sbb
imul
mov
and
inc
popf
cmpsl
push
mov
mov
xor
call
stos
xor
test
and
dec
sub
cmp
pop
mov
add
xor
sbb
inc
mov
jmp
les
mov
or
xor
jo
inc
push
shll
dec
adcl
loopne
or
xor
ss
fimuls
lcall
push
sbb
je
jge
push
fadd
adc
pop
pop
xchg
push
adc
gs
xor
add
loop
fcompl
and
hlt
pop
xor
push
lods
mov
cmpl
fbstp
push
das
and
xchg
mov
iret
xor
mov
scas
add
xlat
push
inc
adc
xchg
add
mov
push
and
and
imul
popa
cmp
push
and
fstl
flds
sbb
inc
mov
adc
xchg
dec
push
fwait
lock
sub
mov
jmp
test
sbb
add
es
int3
pop
hlt
repz
and
clc
adc
add
imul
xchg
jo
outsl
pop
shll
sub
movl
pop
push
enter
push
xlat
cli
add
or
out
insl
dec
test
lea
test
add
mov
adc
adc
cmp
rorb
pushf
arpl
test
inc
inc
add
movsl
js
inc
enter
adc
pushf
pop
jne
lcall
pop
sub
sbb
or
aaa
imul
and
xor
stos
pop
imul
adc
jb
call
jmp
push
sub
fs
fwait
sbb
imul
je
or
clc
push
js
pusha
xor
je
movzwl
enter
sbb
mov
or
or
fmuls
movsb
pop
ss
add
xor
add
nop
or
dec
and
enter
rolb
add
sub
sti
inc
aas
std
push
dec
jmp
adc
jge
pop
sub
aaa
pop
inc
jecxz
push
sbb
jmp
out
pop
and
and
mov
fxch
xchg
xor
push
mov
add
lret
xchg
or
cmp
ret
or
add
movmskps
rolb
cmp
inc
loopne
cltd
lea
mov
decl
cmpl
je
xchg
into
jp
das
cld
sub
adc
dec
push
imul
inc
ja
add
enter
sbb
jp
fs
jae
int3
pop
sarl
dec
cmp
mov
push
sub
sub
stos
imul
adc
iret
jg
gs
test
adc
ret
filds
add
pop
lock
or
int
lcall
fsubp
pop
adc
subb
lret
subl
sar
pop
mov
imul
test
mov
push
push
cmpsb
mov
mov
pusha
adc
cld
sub
push
lret
jbe
and
pop
call
ret
cmp
out
ror
sub
into
or
or
inc
dec
add
hlt
test
nop
lret
clc
js
test
shr
dec
mulb
xchg
lock
pop
mov
enter
adc
inc
jns
data16
mov
mov
cld
mov
and
insb
loopne
addr16
push
les
and
pop
insl
lret
gs
mov
aam
mov
mov
inc
in
xchg
sub
add
sahf
sub
mov
sub
or
cmp
push
adcb
push
mov
dec
add
push
fdivs
and
mov
inc
xor
mov
pushf
add
out
xor
and
aas
call
stc
push
pop
fs
es
popf
push
lock
adc
pop
aaa
sub
std
daa
mov
cmp
je
daa
pop
inc
in
adc
fidivrl
inc
mov
or
nop
lret
sbb
push
cmp
sub
aas
xor
ljmp
jle
rcll
loop
nop
xchg
mov
xchg
fldenv
adc
movsb
movsb
adc
sub
push
cmp
mov
aas
sbb
mov
jmp
xor
jle
xchg
adc
add
ret
sbb
jae
inc
pop
inc
pusha
adc
adc
push
dec
or
data16
xor
jbe
adc
and
cmp
nop
ret
pop
jecxz
les
iret
inc
pop
add
insl
dec
in
mov
or
jmp
loop
cmpb
pop
inc
add
dec
fsubs
leave
lock
and
insl
and
mov
mov
dec
ljmp
push
stos
ss
or
xchg
in
loopne
leave
les
shrl
test
mov
pop
lret
push
cld
adc
push
orl
add
dec
cmp
pop
pop
mov
sahf
imul
jbe
shr
or
jl
sub
mov
lea
ret
ljmp
insb
xor
mov
jl
mov
rclb
imul
test
fsubl
jae
daa
sbb
sub
cmp
imul
insb
and
mov
pop
dec
pushf
mov
mov
mov
or
cmpsb
mov
inc
jge
sub
push
push
test
adc
mov
mov
lahf
test
or
rcrl
sbb
xchg
and
sbb
je
js
mov
adc
lret
out
pop
push
pop
push
xchg
mov
push
xlat
aas
and
mov
jmp
shll
and
and
xor
lods
movsl
or
xor
dec
jmp
jnp
insl
push
dec
add
mov
seto
leave
push
inc
subb
add
sbb
test
add
orb
dec
das
push
pop
mov
cmp
leave
mov
sbbl
pop
add
push
dec
jecxz
and
sub
aam
mov
xor
xchg
adc
hlt
out
dec
cld
cmp
cmp
stos
dec
rcl
sub
sbb
sbb
cmpsb
xor
cmp
es
cli
mov
xchg
repnz
jbe
cmp
fidivrl
outsl
add
cwtl
mov
daa
je
ja
xchg
sbb
movsb
cmpsl
out
xor
xchg
add
cmp
mov
leave
pop
sub
inc
add
or
jns
sub
adc
push
xor
data16
mov
mov
lahf
mov
push
push
jns
jo
cmp
lods
lock
pop
inc
pop
rcrb
cmp
clc
pop
mov
jae
adc
les
mov
aaa
xchg
inc
loop
imul
das
fadd
inc
inc
js
jmp
dec
lock
fwait
cmp
pop
int3
push
sbb
ror
and
jae
pusha
xor
sub
push
loope
pusha
mov
push
xor
add
jmp
mov
jge
decl
jge
add
push
jns
loopne
or
lods
ja
push
push
stc
adc
and
fs
lea
insb
mov
shlb
insl
xchg
cmc
popa
or
xor
fcomp
and
inc
and
dec
insl
fstl
mov
lock
rol
and
sahf
cmpsl
lcall
ja
adc
cmp
lcall
fcmovnu
sub
sbb
push
sub
sub
xor
jb
xchg
push
push
adc
inc
out
mov
pop
jnp
cmp
push
dec
mov
inc
testb
sbb
aam
je
fiaddl
jne
nop
in
pop
adc
es
adc
movl
ds
loopne
dec
pop
gs
dec
sbb
and
add
add
lods
inc
mov
push
mov
cmp
jle
in
outsb
je
adc
and
iret
sbb
sbb
fbld
outsl
add
add
sbb
add
mov
ret
push
js
push
cmp
pop
in
xor
sbb
lock
and
jecxz
jns
jno
xchg
ljmp
jae
jp
loopne
add
or
ljmpw
es
or
dec
mov
cwtl
ret
adc
and
fildll
inc
mov
pop
mov
faddl
fs
inc
loopne
adc
inc
testb
mov
or
jb
pop
das
stc
push
sbb
je
dec
mov
out
push
fmull
adc
sbb
lods
jbe
pop
sahf
push
and
lods
ss
fcmovnbe
ds
sbb
sub
add
stos
sbb
fsubrl
push
push
add
push
test
arpl
imul
cmp
pusha
stos
add
push
imul
pop
jns
add
je
scas
and
clc
rcr
bound
inc
cmp
and
and
out
xchg
insl
aaa
sbb
and
mov
bound
in
jmp
mov
jle
outsl
cmp
je
mov
pop
daa
addb
call
inc
bound
sbb
inc
mov
js
push
or
jne
pushf
inc
nop
mov
addr16
inc
push
mov
test
or
rorl
inc
xorb
jbe
xchg
repnz
or
xchg
xor
ret
je
pop
decl
jl
pop
or
and
or
cli
js
sbb
imul
mov
sbb
and
sbb
imul
or
mov
rorl
mov
dec
cmp
in
jb
or
fs
adc
jmp
xor
fsub
aad
pop
pusha
pop
adc
mov
xor
xchg
mov
push
mov
mov
jmp
push
movl
ds
scas
scas
js
lods
loope
loopne
dec
lea
fcomps
or
std
loopne
and
loopne
cmp
and
mov
push
sub
jmp
push
stc
push
sbb
and
mov
xor
mov
cmp
shlb
sub
cmp
dec
push
jecxz
add
pusha
movsl
loope
jne
dec
sbb
sbb
pop
inc
clc
cmpsb
dec
cmp
in
sbb
into
rcr
xchg
push
lock
addl
sub
sub
push
fwait
xor
dec
add
js
into
push
or
icebp
fwait
lods
add
fcompl
rorl
out
nop
dec
je
pop
movsb
mov
or
dec
rolb
sub
dec
arpl
jnp
sbb
mov
ret
cwtl
js
lods
loopne
sahf
pushf
cld
mov
add
in
ds
leave
ret
inc
addr16
pop
mov
nop
imul
hlt
mov
jnp
mov
mov
adcl
into
dec
arpl
sub
push
addps
cld
sub
aaa
fldt
lock
mov
sbb
cmpsb
lock
imul
xlat
inc
outsl
pop
fdiv
adc
out
sub
jnp
mov
pop
pop
js
in
popa
push
popa
aas
into
rorl
jmp
jo
push
or
addl
pop
add
add
movl
add
ja
jno
jmp
cmp
add
jae
xor
xchg
xor
jp
dec
test
push
push
cmp
adc
xor
jge
scas
push
sbb
mov
jmp
inc
loopne
xor
add
dec
adc
and
and
xor
movsb
push
sub
sahf
inc
push
outsl
nop
pop
fcompl
es
xor
dec
jge
testl
jmp
or
movsb
push
loop
xchg
add
stos
push
mov
sbb
pop
jno
in
ja
in
or
adc
push
out
sub
test
test
insb
movsb
rcrl
push
cmpsl
pusha
sub
and
inc
jbe
movl
out
xor
mov
es
pop
cmp
mov
dec
sub
add
xor
shlb
pop
test
lret
fsubr
fsubs
and
jmp
fs
pop
outsl
data16
sbb
fsubl
adc
movb
sbb
xor
adc
lret
scas
push
pop
add
and
test
inc
outsl
in
xchg
in
mov
add
fcmovnb
xchg
nop
es
sbb
dec
and
jecxz
jge
sbb
sbb
lods
and
push
sbb
insb
imul
sarb
movzwl
sbb
dec
in
scas
shll
cmp
adc
xor
mov
inc
add
push
dec
arpl
rcr
pop
popa
jb
add
push
mov
mov
jbe
imul
iret
ret
sub
pop
leave
adc
mov
ret
mov
std
dec
jbe
nop
xor
ret
xchg
mov
inc
push
pop
pop
adc
and
scas
call
lock
dec
inc
or
inc
lret
sub
inc
sbb
pop
and
inc
call
cmpb
ret
mov
push
fcom
or
in
fwait
push
pop
andl
inc
sbb
roll
cwtl
movl
jmp
popf
add
adc
jmp
push
outsb
pop
lock
add
mov
movsb
push
jbe
jnp
jl
add
xor
mov
push
mov
jle
insl
jl
pop
and
dec
and
and
sahf
test
xor
adc
sub
mov
xchg
lahf
cli
insb
add
mov
sub
clc
sbb
cld
adc
adc
pop
mov
shrb
add
inc
xor
scas
xlat
xor
xor
fldl
fstpt
outsb
or
scas
cmpb
push
scas
es
push
and
jne
xorb
lea
mov
pushf
jecxz
cwtl
dec
daa
in
sub
mov
lahf
test
pop
xchg
or
sbb
sub
add
pop
jo
mov
loope
iret
xor
dec
jne
jmp
and
test
sbb
jae
dec
pop
lret
add
mov
xor
cltd
lods
das
or
mov
nop
ja
jb
gs
negb
cltd
pop
fists
repnz
bound
addb
js
fstpl
sbb
fiaddl
or
add
pop
pusha
push
cwtl
or
dec
dec
adc
mov
pusha
jbe
ja
jae
or
test
mov
xlat
sub
ret
in
and
xchg
dec
loopne
sbb
out
ret
rolb
insb
cmc
inc
aad
push
and
push
lock
fnstenv
orl
ss
dec
insb
adc
test
test
test
jmp
hlt
add
test
xor
xor
dec
nop
sub
lret
jg
js
mov
or
push
dec
pushf
mov
cmpsl
icebp
sbb
adc
dec
mov
ret
inc
xor
push
xor
mull
sub
sub
pop
pop
adc
xchg
sub
js
adc
adc
mov
pop
mov
sub
ss
mov
mov
sub
or
lret
push
loope
fdivr
sub
sub
ljmp
inc
adc
mov
popa
push
inc
adc
or
adc
movb
aad
sub
lods
adc
cmp
or
push
inc
icebp
pop
inc
or
cmpsb
lods
jecxz
rclb
sub
lea
movb
mov
inc
and
mov
push
xchg
dec
daa
vfnmaddps
push
push
add
adc
xchg
or
dec
push
or
mov
lock
ret
or
or
mov
jo
rcrb
inc
orb
out
push
push
and
adc
adc
clc
nop
popf
dec
and
fcoml
mov
nop
ret
mov
jmp
xchg
pop
dec
adc
mov
xchg
aas
dec
rcll
ficoms
push
jmp
fst
or
mov
or
loopne
call
cmp
rorb
mul
fucom
imul
dec
or
add
pop
cs
mov
mov
enter
dec
mov
pop
stos
mov
les
sbb
or
cmpsl
jge
mov
or
push
add
insl
shr
or
js
test
xchg
imul
mov
inc
loopne
push
xchg
clc
add
mov
call
mov
repnz
dec
mov
add
cld
add
and
pop
xchg
pop
pop
pop
pop
sbb
or
push
rolb
mov
dec
add
cvtdq2ps
and
inc
movb
push
add
fcmovb
js
setle
notl
mov
call
adc
or
mov
pop
or
jne
outsb
push
dec
insl
popf
aad
push
push
sbb
pop
into
pop
test
sub
jne
xorl
pop
dec
xlat
jmp
inc
cmpsb
push
cltd
jo
mov
push
rolb
adc
popa
imul
sbbl
mov
negl
dec
pop
cmpsb
add
push
es
inc
mov
pop
imul
mov
inc
xor
dec
ret
or
sub
add
movsl
addb
rorl
in
imul
mov
mov
mov
add
mull
mov
sbb
jl
inc
mov
adc
or
add
xchg
mov
adc
mov
sahf
inc
ja
mov
pop
push
or
nop
sbb
or
shlb
mov
popf
in
sbb
and
inc
in
or
or
leave
test
orb
mov
mov
push
or
jo
sub
jle
sbb
push
xor
and
push
fs
or
push
and
fsub
mov
xchg
adc
mov
pushf
and
pusha
mov
push
daa
enter
add
scas
or
out
fbstp
movsb
dec
mov
adc
push
jmp
test
inc
push
lods
es
push
lds
or
dec
repz
scas
mov
aad
xchg
add
sbb
sbb
test
push
test
pop
xlat
push
jbe
das
cmpsb
iret
push
cmp
cmpsb
and
mov
das
push
mov
pop
push
jle
sti
inc
imul
adc
outsb
jmp
sbb
or
pushf
in
or
popa
xchg
es
jg
lea
cwtl
je
sub
push
add
ret
test
scas
jb
cmp
loopne
das
inc
fwait
add
sbb
push
sbb
pop
cmp
dec
sbb
push
lds
fiadds
adcb
imul
mov
sahf
jno
into
fimull
fistps
xchg
loop
push
test
mov
adc
adc
mov
mov
cwtl
int
mov
mov
lea
dec
adc
mov
add
and
ja
or
out
xchg
inc
pop
xchg
sbb
outsb
popa
or
jo
loopne
popa
mov
mov
push
jecxz
out
addl
mov
movsb
adcb
xchg
es
in
pop
iret
dec
lea
mov
lods
xchg
add
rcll
and
data16
mov
shrl
call
jbe
or
and
cmp
stos
push
mov
adc
dec
stos
les
or
xlat
adc
and
add
add
lock
out
mov
adc
pusha
sbb
jl
sbb
jge
sbb
mov
rcrb
or
pop
dec
lods
sbb
iret
or
push
movsl
mull
nop
inc
lea
ficompl
mov
add
pop
inc
sub
xchg
pop
clc
push
or
mov
insb
subb
pusha
add
cli
cs
popa
sbb
xlat
push
cmp
or
insb
or
jecxz
cli
cmp
xlat
test
push
add
dec
mov
cmp
aam
ds
xor
stc
jmp
outsb
sub
jge
adc
push
pop
push
push
push
dec
dec
mov
sub
or
cmpb
addr16
or
fs
jmp
ja
add
addb
inc
add
clc
cmpsb
add
lcall
lods
and
push
sub
xchg
xlat
imul
insl
mov
fsubl
mov
imul
inc
or
ss
add
jne
mov
aaa
inc
adc
sbb
je
fildll
test
fldl
mov
rcll
or
adc
subb
dec
stos
inc
add
push
jp
clc
pop
out
and
movsb
jl
repz
je
and
in
sub
stos
out
or
out
mov
mov
xor
imul
inc
and
or
dec
lahf
je
inc
push
outsl
sub
dec
repnz
or
mov
jmp
daa
dec
sti
roll
xor
testb
add
pop
jns
jo
sbb
fadds
mov
fildl
sub
push
fs
sbb
rclb
and
mov
fidivrl
adc
cmp
push
or
push
and
shrb
mov
in
sbb
xor
xchg
pop
add
jge
mov
testl
or
adc
mov
push
scas
lods
and
push
push
adc
jne
cmp
je
lea
jae
repz
adc
push
sbb
push
adcb
and
outsl
lret
daa
mov
cmpsl
xchg
or
jg
cmpsl
jo
push
fs
icebp
clc
adc
movb
and
mov
sub
ss
adc
add
and
ret
das
movsb
pop
add
xor
sti
mov
pop
ss
popf
push
xchg
jmp
mov
inc
xchg
mov
and
dec
add
and
add
mov
add
aaa
jnp
lods
aam
mov
pop
xchg
outsb
add
test
xor
inc
adc
in
sub
push
daa
adc
add
outsl
loope
test
jmp
push
sub
lahf
sub
add
mov
dec
xor
lock
sbb
and
inc
mov
push
int3
adc
gs
jmp
add
push
movsb
inc
sub
lock
cmp
or
xchg
pop
xchg
mov
or
cld
cld
jo
dec
aas
stc
xchg
pop
cmp
add
inc
imulb
dec
jo
or
push
and
insl
adc
test
mov
mov
or
pop
and
adc
cmp
lea
pop
sub
andb
lock
stos
pop
lret
addr16
push
in
mov
fidivl
test
cmp
dec
pop
lcall
outsl
sbb
add
data16
cmp
nop
fisubrl
inc
shrb
mov
leave
mov
cmpl
xchg
push
popa
inc
sub
pop
mov
cwtl
xor
pushf
add
clc
inc
adc
imul
in
cmp
cwtl
hlt
clc
sbb
orl
add
push
mov
inc
call
mov
pop
and
sti
cmp
dec
xor
pop
or
lock
push
adc
or
mov
mov
mov
inc
xor
sub
push
pop
mov
jns
cltd
pop
mov
xchg
not
cltd
lgs
pop
mov
cmp
outsb
gs
dec
mov
mov
mov
test
inc
and
push
xorl
cmp
or
xchg
cmp
clc
dec
das
fwait
dec
pushf
add
xor
push
sbb
adc
mov
mov
inc
insb
push
add
iret
xor
or
es
jle
stc
in
lcall
out
cli
test
push
dec
xchg
and
mov
std
xor
push
das
aad
sbb
out
lcall
ds
addb
push
nop
cwtl
icebp
mov
or
leave
ss
mov
xor
int
push
popa
push
cmp
shl
lahf
dec
imul
loop
add
and
pop
sub
adc
or
jne
dec
fsubrs
imul
xlat
dec
push
and
jo
mov
insb
and
sub
adc
aas
and
cmp
mov
pushf
push
or
les
jmp
inc
jno
sbb
fisttpll
or
push
add
mov
fcoml
into
mov
popf
lods
push
lret
xor
adc
loope
mov
in
sbb
add
sub
jge
into
xor
mov
sbb
lret
pop
jo
psubq
pop
dec
mov
xchg
mov
pop
sahf
mov
add
push
mov
sbb
pop
out
ret
jo
clc
out
and
add
inc
or
sbb
push
jbe
and
faddl
and
mov
mov
idiv
inc
push
jbe
and
incb
in
dec
add
sbb
inc
cmp
mov
pop
stc
addr16
mov
inc
add
jne
inc
cmp
ret
add
movd
mov
add
pop
les
push
movb
fbld
and
adc
enter
inc
push
dec
mov
dec
jmp
adc
add
cmc
pushf
or
cmp
adc
cvttps2pi
pop
mov
or
repnz
inc
fsubs
inc
push
adc
imul
sti
sbb
push
sbb
and
mov
adc
pusha
aaa
rol
sub
adc
adc
fidivs
dec
inc
hlt
jl
adc
jns
adc
mov
lahf
adc
outsb
sbb
mov
push
xchg
push
push
push
sarl
movsb
nop
mov
nop
je
xchg
jl
dec
les
fsubs
push
inc
jb
dec
add
pop
lahf
push
add
adc
push
addb
sub
jecxz
pop
pop
call
add
add
sub
push
sub
mov
insb
or
les
adc
sbb
int
inc
adc
push
pop
fs
or
es
loop
or
mov
and
insl
orb
jo
es
repnz
sbb
jo
or
adc
push
mov
inc
adcl
inc
inc
mov
ds
inc
jne
data16
popa
xchg
xchg
push
or
xchg
nop
xchg
push
sub
xor
sub
outsl
or
dec
loope
ffreep
movsb
shll
adc
js
pop
jmp
js
jmp
mov
sub
mov
in
dec
mov
daa
loope
nop
test
je
cmpb
test
mov
push
push
xchg
sbb
pop
nop
mov
fs
lcall
adc
ret
adc
out
aaa
sbb
xlat
push
mov
movsb
test
mov
mov
enter
mov
rcl
fmuls
in
mov
clc
mov
cld
add
add
mov
sbb
and
mov
cmp
inc
dec
mov
pop
pop
lods
xchg
mov
sub
cmp
ret
daa
mov
jecxz
mov
pop
es
lods
arpl
push
mov
xchg
mov
push
movsb
sub
in
movsb
leave
lret
cld
test
test
lods
and
mov
mov
add
movsb
jl
cwtl
push
sbb
shlb
add
rcl
xchg
lods
or
in
or
fmull
inc
sub
sub
add
dec
push
movsb
xor
in
pop
lock
lret
insb
hlt
subb
push
sbb
nop
cld
mov
add
mov
inc
sub
test
test
call
xchg
add
stos
sbb
test
cmp
and
lret
push
sub
push
sbb
dec
gs
sub
test
loopne
movsb
xor
inc
clc
dec
and
dec
and
push
movsb
xor
push
pusha
mov
roll
or
test
test
adc
or
sbb
push
dec
sbb
pop
loope
inc
cwtl
mov
insb
outsl
jae
and
movsb
pop
in
add
dec
scas
inc
mov
add
test
ret
push
fcompl
in
add
add
or
pop
daa
mov
xchg
mov
mov
mov
mov
imul
shr
inc
fcomps
dec
arpl
jae
or
or
adc
mov
mov
daa
lea
inc
add
outsb
mov
jp
or
sbb
push
outsl
pop
xorb
and
ficoml
jbe
sbb
pop
pop
dec
lcall
mov
push
or
mov
add
addr16
or
and
mov
test
sub
add
cmpsl
mov
stos
jns
fimull
push
mov
negb
sub
popa
and
imul
daa
inc
das
in
in
and
pop
in
pop
mov
in
pusha
xchg
pop
pop
xchg
mov
pop
test
or
loopne
and
and
fisubs
sbb
idiv
add
outsb
das
outsb
mov
out
inc
imul
push
das
pop
testb
adc
nop
xchg
outsl
arpl
or
pop
push
xchg
xchg
pop
inc
and
inc
in
sbb
lea
inc
ror
imul
xchg
loopne
ret
push
pop
jne
xchg
shrb
dec
sbb
daa
enter
out
sbb
les
test
sub
lods
cmpsl
cmp
xor
mov
lods
sbb
cmp
xchg
clc
xchg
inc
push
dec
inc
push
dec
xlat
inc
ja
ret
insl
iret
push
adc
ret
outsl
sbb
sub
fwait
mov
cmp
inc
xorl
jmp
sbb
daa
push
and
or
jg
aad
add
pop
daa
mov
push
mov
jl
test
push
add
popf
test
mov
add
dec
pop
ret
push
push
cltd
in
inc
ja
jl
inc
xor
inc
sub
nop
scas
test
lea
popa
jns
add
mov
je
test
dec
or
xor
lret
push
cmpsb
fs
and
jae
les
push
inc
insb
loope
xor
push
xorb
lock
add
push
gs
cmpsb
add
lods
push
cs
or
sbb
mov
shrl
movsb
scas
out
cmp
add
mov
jl
inc
xlat
jg
movsl
xchg
inc
aas
sbb
inc
add
stc
inc
add
enter
lret
inc
add
mov
push
add
cmp
ss
int
repz
rcr
loope
ja
sarl
and
push
add
xor
cmpsb
push
int
mov
jbe
lret
push
sub
push
movsb
out
out
ss
jmp
loopne
loopne
scas
jge
rcl
dec
fmull
mov
into
add
add
mov
mov
mov
inc
jmp
push
cwtl
push
in
rcrb
js
push
sbb
inc
bound
mov
pop
ret
mov
pusha
sub
stos
mov
pop
orb
test
jle
testb
test
and
inc
push
push
add
mov
sbb
xor
sbb
xor
sub
mov
cmovnp
test
fildl
add
dec
dec
pushf
add
and
inc
push
add
out
push
subl
mov
leave
pmuludq
push
test
popf
mov
or
sub
and
or
mov
outsl
push
pop
sarb
je
ljmp
dec
adc
sti
jecxz,pn
into
shl
mov
mov
adc
pop
out
sti
push
stos
jo
jo
mov
outsb
adc
adc
jb
mov
adc
pop
add
add
mov
or
out
jae
es
dec
hlt
mov
or
adc
xchg
dec
xor
push
pop
dec
dec
dec
push
dec
mov
out
pop
fs
pop
in
das
andl
and
sbb
call
push
xchg
push
sbb
push
fcomps
jmp
adc
and
lcall
outsl
adc
sub
lods
int
jno
cmp
xchg
jne
xor
xchg
sbb
mov
mov
or
push
in
pop
cld
call
inc
sahf
push
add
out
xchg
inc
jbe
xor
movsb
cmp
pop
push
mov
dec
ds
das
ss
sbb
out
inc
pop
adc
jo
ret
xor
sbbb
outsb
mov
lea
fmuls
je
jo
pop
and
pop
xchg
and
mov
pop
mov
xor
frstor
les
rclb
pop
mov
js
cmpsl
sti
jns
push
lock
and
sub
and
adc
inc
lahf
test
lret
es
mov
push
clc
pop
data16
mov
psubq
jo
scas
ret
push
imul
mov
popa
pusha
cmp
mov
ffree
xchg
cmp
sbb
daa
push
push
inc
sbb
pusha
aaa
push
loopne
cltd
mov
push
dec
mov
jle
xchg
dec
dec
loopne
and
repnz
nop
cmpsl
std
xor
jl
dec
clc
clc
dec
mov
sub
or
andb
imul
add
pop
repnz
xchg
or
inc
sub
cs
sbb
int3
add
sbb
push
nop
cmp
xor
pop
enter
push
out
nop
or
outsb
test
enter
enter
jbe
rorb
xor
or
mov
pop
dec
mov
push
dec
xor
nop
or
xor
loop
pushf
cs
xor
out
jmp
add
jbe
dec
jb
and
inc
jb
mov
sub
test
add
out
mov
pop
jns
int3
inc
je
inc
sub
inc
sub
rcrb
pop
inc
adc
dec
repz
sbb
jnp
jns
push
push
inc
enter
push
inc
jbe
push
jns
jnp
pushf
nop
push
rorb
push
and
sahf
out
out
cld
push
in
cld
jle
hlt
or
fidivrs
push
add
or
mov
or
inc
jne
outsb
mov
outsb
mov
out
mov
push
push
add
cmpsb
aas
push
inc
xor
cs
pusha
clts
sbb
fsts
inc
sub
inc
aas
hlt
and
imul
fsubs
add
jle
mov
dec
inc
aas
repnz
repnz
in
inc
jge
movsb
int
mov
outsb
pop
addr16
push
bound
pushf
mulb
sub
lods
into
xchg
sub
out
xor
sub
sub
dec
loopne
cs
insb
lahf
test
mov
inc
js
mov
fs
mov
add
jp
adc
fcos
sbb
rolb
sub
js
jno
popl
sub
xlat
hlt
lret
dec
dec
adc
push
adc
jle
int
mov
mov
and
add
adc
inc
je
pop
pop
mov
xchg
add
mov
sarl
insb
mov
push
pop
loopne
push
dec
iret
jo
adc
and
icebp
cwtl
aam
push
jno
aaa
and
xchg
bound
popa
adc
cmp
adc
adc
nop
lret
mov
rcrb
adc
adc
sub
xor
xchg
in
lock
rcrl
dec
rcll
mov
mov
jne
dec
add
sbb
lods
inc
cmp
pop
sbb
cmp
test
out
popa
or
or
mov
xchg
sbb
lods
stos
cmp
add
sbb
push
out
and
cmpsl
xlat
icebp
lds
adc
adc
sbb
into
add
in
mov
insl
mov
outsb
inc
mov
or
call
inc
jl
nop
and
ror
shrl
cmp
and
inc
sub
and
xchg
es
sub
sub
mov
pop
enter
dec
aas
pop
enter
clc
sub
push
js
je
xchg
js
les
notb
dec
or
adc
sahf
adc
sub
pop
mull
fs
sbb
pop
xchg
js
add
push
jo
das
and
inc
and
sbb
pop
push
push
xor
jb
mov
xor
xor
and
and
xor
and
insl
mov
ljmp
mov
adc
mov
add
int3
mov
movb
ret
insb
mov
out
outsl
inc
sbb
mov
and
add
or
and
add
inc
push
or
add
int3
pop
inc
jnp
pusha
ja
add
sbb
pop
sub
dec
rol
mov
dec
inc
sbb
or
add
mov
and
mov
rclb
or
xor
subb
std
subl
les
add
mov
or
enter
lods
cmpxchg
test
dec
xchg
or
rolb
push
xorl
mov
pop
les
jl
sbb
bound
sub
jge
adc
or
push
xchg
scas
lea
aaa
aas
sub
or
inc
jmp
adc
ficompl
mov
fdivp
add
fadds
mov
adc
jp
adc
jb
arpl
addr16
lods
or
test
es
in
jmp
addl
mov
imul
hlt
lret
cld
rol
nop
sub
iret
add
pop
pop
test
je
push
cmp
dec
sub
test
std
sahf
mov
cmpb
jne
vmread
inc
mov
jns
push
jne
or
dec
inc
add
sub
mov
sbb
test
stc
arpl
dec
ljmp
mov
jecxz
xchg
fbstp
xchg
sbbb
test
dec
xchg
xchg
jbe
lahf
jge
or
sub
jae
jge
movsl
fdivrs
fadds
stc
mov
pop
sub
sub
hlt
xchg
shll
adc
ret
or
xchg
int3
xchg
hlt
ret
push
test
sub
add
rcll
and
or
mov
inc
push
and
cs
rorl
or
rorl
lret
xchg
push
or
push
cmpl
dec
insl
add
data16
sub
push
les
cs
cmpsl
dec
and
xchg
xor
cmp
bound
jo
add
clc
and
xchg
inc
stos
orb
add
pop
andl
fcompl
sbbb
cmp
pop
inc
sub
sbb
movsb
jns
movb
add
xlat
xchg
or
das
add
ret
or
call
sbb
dec
loop
cmp
cltd
cs
fdivs
sbb
xchg
xor
data16
xchg
sbb
popa
xchg
fbld
lret
push
and
pop
or
or
ret
unpckhps
sub
fstpt
jmp
and
xlat
cmpsl
call
mov
aam
fs
add
mov
push
dec
add
icebp
shll
xchg
js
shlb
and
or
push
jle
fisttpl
sub
mov
or
cltd
adc
bound
aas
imul
adc
lret
mov
out
push
cmp
inc
inc
andb
inc
and
xlat
fldt
or
fildl
fldl
je
lret
push
nop
aad
nop
lret
or
inc
add
inc
sti
add
inc
dec
sub
sbb
mov
jmp
sub
clc
push
shlb
in
rolb
cmp
inc
ret
fimull
xchg
ljmp
add
pop
dec
movb
imul
cltd
movsb
push
xor
jbe
outsl
int3
push
push
insb
pushf
in
cld
inc
into
mov
sbb
clc
push
mov
inc
jns
cmp
or
dec
jae
and
inc
lea
out
pop
add
mov
jnp
adc
lea
test
add
mov
sbb
push
dec
sub
add
fs
loopne
outsl
and
inc
popf
add
pop
mov
cmp
pmuludq
out
push
jge
aas
mov
pop
mov
pop
dec
push
cmp
daa
je
mov
movb
xchg
mov
mov
cs
mov
jb
fwait
push
xchg
xchg
or
or
int
inc
sub
in
nop
idivb
sbb
js
push
pop
mov
xchg
pushf
jl
sahf
sahf
push
outsl
divl
or
xchg
lahf
inc
sbb
mov
xchg
adc
push
stos
or
push
add
add
and
adc
mov
mov
xchg
xchg
aaa
les
adc
and
negb
ret
inc
cmp
pop
and
pop
fisubs
bound
mov
les
xor
add
pop
xor
adc
mov
stc
mov
adc
aam
inc
or
mov
and
sub
pop
or
add
pminsw
pop
or
or
mov
into
mov
fsubs
mov
xorb
jmp
pop
mov
and
cmp
iret
icebp
xor
adc
and
shlb
mov
rclb
sbb
nop
iret
add
int3
sar
fdivl
mov
adc
arpl
add
mov
mov
js
add
pop
sbb
xchg
mov
sbb
fs
shll
cs
push
or
adc
mov
xorb
imul
xchg
cmp
nop
aaa
adc
push
pop
sub
shr
inc
lods
or
jmp
ret
pop
imul
mov
xor
and
lds
sub
mov
jmp
or
das
jne
addl
pop
outsl
jp
adcl
js
cmp
or
mov
jnp
or
movsl
sub
sbb
jmp
mov
xchg
bswap
jne
in
lret
add
lods
iret
imul
sbb
cmp
cmp
push
loopne
pusha
pop
add
inc
mov
sub
cli
inc
aam
mov
inc
iret
xor
inc
dec
sbb
xor
jmp
jns
inc
cmp
push
cmpsb
ret
test
test
bnd
push
cmpsl
aas
fisubrl
fiadds
mov
mov
ficoml
ljmp
and
dec
scas
mov
cmp
insl
test
push
sbb
loopne
decb
mov
and
adc
loope
test
mov
jp
add
add
ret
sbb
andl
inc
add
sbb
push
push
push
dec
dec
out
sbb
mov
js
cmpw
add
ja
js
xor
or
pop
dec
jmp
aas
pushf
pop
sbbb
inc
pop
push
push
sbb
shlb
faddl
insl
adc
lods
xchg
roll
mov
jns
xchg
adc
xor
roll
pop
pop
shrl
and
jle
leave
rolb
or
cmp
sbbl
mov
cli
in
dec
xchg
sbb
cmpsl
add
add
pop
pop
aad
data16
stos
xchg
pop
push
cmp
xchg
or
cltd
lea
daa
or
adc
shr
mov
push
sub
loop
hlt
rolb
sbb
data16
stos
push
test
das
out
repnz
test
ret
loop
cltd
pop
push
bound
xchg
xor
loope
adc
in
ret
inc
popa
or
adc
xor
pslld
or
insb
fs
arpl
lahf
dec
jbe
xor
push
cltd
daa
or
sbb
les
inc
pop
pop
jmp
mov
daa
adc
je
jno
and
or
pop
sub
sbb
sbb
out
pop
mov
inc
push
mov
xchg
pop
cmpsl
or
sbb
mov
test
leave
test
mov
imull
popa
jo
jns
enter
mov
ss
popa
push
stc
iret
dec
dec
ret
cmpsb
rclb
orl
insb
and
in
mov
out
jp
jb
leave
inc
adc
pop
arpl
mov
je
dec
sub
outsb
lock
iret
dec
gs
jo
adc
outsw
pop
adc
push
and
fs
fs
and
in
imul
pusha
push
adc
push
cli
or
jg
jg
insb
xchg
popl
imul
and
fcmovnbe
icebp
add
inc
jo
bound
mov
xchg
lea
pop
push
imul
inc
inc
push
xchg
mov
push
movsb
je
mov
dec
add
pop
insl
jae
inc
add
cmp
ja
add
pop
es
jns
call
popa
call
jno
insl
inc
xlat
xchg
push
daa
pop
das
inc
add
jb
mov
jo
add
adcb
inc
outsb
xor
leave
popa
pop
or
xchg
scas
xlat
out
pop
mov
lahf
adc
int3
rcll
mov
dec
xlat
sbb
mov
xor
mov
ret
aaa
imul
sub
mov
ds
sahf
dec
and
jno
lods
insl
cmc
inc
xlat
leave
shrb
push
fists
or
dec
push
cmp
xor
mov
inc
xor
mul
addr16
out
xchg
sbb
mov
adc
pop
sbb
adc
xchg
or
and
push
aaa
out
and
xlat
lahf
sbb
ja
enter
inc
das
or
push
jo
aaa
mov
or
push
xchg
inc
ljmp
jl
insl
mov
cmpsl
push
jne
push
mov
aaa
xchg
jae
jg
or
aad
xor
cmpsl
sub
jbe
iret
punpcklwd
sbb
movl
pop
pop
ja
stc
lock
aas
outsl
unpcklps
aaa
cmp
or
xor
lea
sub
aas
sbb
pop
call
test
or
pop
mov
xchg
test
adc
outsb
push
and
xor
roll
imul
mov
add
inc
aam
jae
insb
leave
xchg
addr16
or
bound
mov
les
jl
mov
dec
dec
arpl
nop
inc
adc
testl
cld
mov
stos
pop
iret
lret
push
imul
test
getsec
cmpsl
adc
add
addb
rorl
inc
cmp
sub
and
inc
mov
mov
pusha
aaa
xor
pop
daa
push
pop
pop
or
jbe
cmpsl
push
inc
lods
sbb
sub
sub
shll
adc
dec
push
aaa
je
sub
push
ljmp
cmp
mov
mov
arpl
xor
sbb
sub
and
das
xchg
xchg
nop
pop
rcpps
imul
mov
jne
inc
xor
outsl
push
push
adc
gs
loope
mov
pop
aaa
addr16
popa
xor
sub
outsl
pop
or
scas
into
sbb
or
xor
cmp
xor
push
xchg
push
dec
jecxz
jecxz
xchg
push
mov
jmp
loopne
cmp
cmp
jnp
and
cs
mov
punpckldq
push
in
out
mul
adc
aas
push
out
cmp
repnz
inc
pushf
in
sti
iret
xor
adc
xchg
xlat
inc
lcall
adc
dec
arpl
jmp
loope
xor
sbb
mov
lret
lods
fbld
and
in
xchg
push
pop
add
outsb
dec
jae
cmovne
mov
cmp
and
push
movups
add
inc
adc
push
jb
adc
cmpl
or
mov
adc
sbb
adc
add
in
xlat
ja
or
pusha
sbb
push
push
mov
inc
sbb
xor
xor
pop
or
sbb
ficomps
push
dec
outsb
enter
cmp
add
dec
cs
enter
insb
sbb
xor
or
mov
jns
xchg
repnz
stos
test
mov
and
popf
add
dec
cs
and
and
and
or
bound
es
add
add
add
sub
dec
dec
pushf
sub
loopne
mov
jo
sub
jb
fs
jnp
sub
cs
add
pop
cmp
pop
mov
or
inc
add
adc
xlat
dec
pop
xor
clc
add
push
pop
testl
pop
sbb
inc
orl
xchg
int
add
out
sahf
ja
pop
stc
add
loopne
imul
adc
aam
sub
lahf
add
subb
out
mov
rcrb
lods
and
cmp
call
sub
into
fcomps
add
mov
xor
movl
mov
adc
imul
imul
fcmovnbe
into
int3
inc
enter
pop
or
mov
jge
adc
repnz
sbb
mov
jp
imul
xor
call
xchg
sbbl
loopne
sub
jbe
inc
rcll
subb
adc
mov
lods
mov
cltd
cmp
jg
insb
outsl
das
cmp
jle
idivb
adc
jb
adc
pushf
mov
or
push
adc
stc
jo
fwait
cmp
lcall
faddl
into
jle
cld
and
lea
mov
outsl
mov
std
push
add
dec
xor
jmp
sub
jle
mov
jmp
and
shrl
ja
add
add
pop
jge
xor
or
dec
test
dec
xor
stc
sbb
push
pop
inc
cmp
sbb
push
jl
movsl
sub
in
sub
fmull
ljmp
mov
sbb
dec
enter
sub
xchg
or
mov
add
mull
adc
xor
and
out
or
rclb
adc
sub
or
dec
push
arpl
nop
test
push
push
jae
sti
pop
aaa
or
aas
or
mov
std
nop
arpl
out
inc
sub
and
inc
add
adc
dec
mov
xor
xchg
add
adc
ficoms
loope
xor
add
pusha
fldl
hlt
test
cmpsb
push
push
jnp
inc
sbb
jne
pusha
jno
jle
push
imul
jo
mov
mov
mov
sbbl
jbe
inc
js
aad
mov
jne
cmpb
or
mov
add
sbb
push
and
and
pop
subl
mov
ds
mov
dec
and
fstpt
add
rolb
test
fisubs
mov
daa
movsl
in
ljmp
sbb
loop
popa
sub
adc
in
stos
and
test
scas
dec
mov
iret
xchg
xchg
lret
inc
jge
test
xchg
ss
test
stos
stos
sbb
cmp
ret
or
lock
sbb
sbb
sahf
adc
cmp
push
dec
inc
mov
or
sub
loopne
rorb
pop
or
popf
sbb
sub
scas
push
jne
xchg
nop
mov
into
rol
pop
adc
or
push
leave
cmpsb
xchg
subb
es
and
cmp
jl
test
mov
jl
mov
sub
mov
sbb
icebp
and
pop
sub
jne
xor
or
jmp
daa
testb
popa
push
add
xor
inc
mov
movsl
lods
pop
imul
push
mov
push
out
mov
xor
sub
dec
in
mov
inc
add
lahf
loopne
mov
shrb
xlat
or
add
jg
add
jne
xchg
test
add
push
and
and
cmp
xchg
xchg
mov
popa
in
lods
in
mov
add
test
lock
std
sbb
lcall
add
inc
cmp
add
fmul
ret
mov
push
data16
xchg
movsb
dec
xor
inc
cmpb
in
aaa
lods
cmp
fs
inc
repnz
xlat
push
clc
mov
mov
push
lret
cmp
cmp
lds
or
or
cmp
mov
mov
push
fwait
js
into
push
cmp
loopne
leave
inc
pop
fs
inc
movsb
or
les
jns
inc
cwtl
lock
adc
sbb
ss
push
pusha
and
jns
pop
call
dec
or
hlt
into
insb
repz
add
test
outsl
movsb
add
out
inc
xor
je
mov
sbb
xor
movsb
je
mov
sbb
sbb
pop
pop
sub
mov
xor
jae
hlt
loopne
lret
inc
pop
mov
xor
inc
lock
shlb
or
xrelease
dec
test
push
inc
cmpsl
jno
dec
pop
pop
add
mov
mov
repnz
nop
inc
xor
push
lods
inc
pop
push
adc
push
xor
int
stos
add
repz
je
imul
and
inc
out
loope
dec
dec
push
inc
fdivs
mov
sbb
test
and
add
mov
add
addb
das
loope,pn
jmp
or
popa
inc
test
cmp
cmp
cmp
nop
in
adc
xchg
jle
push
dec
loop
jo
shl
mov
testb
push
aaa
in
inc
insb
push
add
push
push
add
arpl
cmp
rorb
dec
cmp
repz
repz
mov
xlat
sbb
push
xor
addl
adc
or
fistpll
rolb
adc
pop
sub
pop
push
or
inc
lret
stc
into
add
sbb
adc
test
sarl
or
dec
sbb
inc
sub
je
and
lods
adcb
jnp
rcrl
pop
cld
fiadds
das
hlt
inc
push
insb
pop
mov
popa
cmpsl
out
popa
insl
mov
sub
adc
xor
rcrl
in
push
daa
pop
pop
pop
das
inc
jl
aas
int3
mov
call
lea
mov
inc
inc
cmp
jne
lcall
popa
push
push
orb
lcall
insb
add
in
xor
cmp
outsb
add
xor
inc
add
jo
inc
sub
push
xor
inc
pop
iret
rorb
es
fs
fcmove
inc
inc
nop
cmp
aas
inc
inc
dec
ret
push
or
fcomps
inc
mov
inc
inc
dec
inc
movsb
xchg
inc
and
add
add
dec
inc
dec
dec
inc
inc
add
inc
in
pushw
xor
push
inc
insb
nop
jg
mov
inc
add
jo
push
sbb
inc
pushf
xchg
push
jo
push
and
mov
or
lock
xchg
sbb
cmp
adcb
and
or
dec
test
addr16
popa
popa
push
mov
pop
sub
enter
test
inc
test
pop
outsl
lods
push
adcb
add
sub
test
push
xchg
add
lea
mov
pop
pop
ret
add
enter
js
sbb
push
sub
lret
cmp
mov
mov
sbb
sbb
jo
call
pop
inc
ds
int3
mov
scas
rclb
xor
out
sbb
xchg
cmp
addb
jl
inc
sbb
jae
mov
test
cmp
fldz
xlat
jne
inc
pop
loopne
jle
lret
inc
push
push
hlt
rcr
xor
lahf
leave
cmp
sarl
orl
dec
or
ljmp
cwtl
and
iret
sbb
inc
fldl
mov
dec
adc
jnp
dec
mov
xlat
add
jle
clc
cltd
mov
shlb
inc
or
mov
dec
arpl
fisttps
inc
push
mov
jae
and
pop
jge
push
mov
sub
mov
ds
nop
mov
outsl
push
inc
push
out
dec
and
sub
lcall
xor
inc
xchg
es
mov
push
in
or
pusha
call
pop
add
faddl
mov
cli
cmpsl
mov
dec
and
pop
sbb
or
xor
movsb
test
inc
in
adc
ret
sub
es
cmpsb
sbb
xor
mov
movsb
in
xor
test
push
lods
mov
mov
xorl
shlb
clc
lcall
aam
fsub
xchg
xor
dec
mov
setno
mov
sbb
sub
mov
add
call
pop
push
push
push
xchg
and
mov
dec
outsl
cmpsl
and
dec
rorb
adc
add
push
add
push
xor
dec
pop
into
jns
pop
dec
outsb
test
ret
pop
cs
inc
insb
insb
pop
push
outsl
pop
or
and
mov
fcoml
ficompl
xchg
nop
inc
fwait
cmpsb
lea
inc
stc
mov
push
jp
inc
or
push
inc
test
lds
xchg
and
xor
xor
jnp
mov
adc
adc
push
push
xorb
cmp
mov
sub
fadds
out
movl
dec
clc
add
cwtl
or
add
cwtl
xchg
cmp
or
pop
in
daa
int
xor
or
xor
fcoml
aaa
dec
sub
hlt
fstpt
test
movl
emms
pop
test
mov
cmp
jo
pop
cli
mov
and
or
in
jge
push
test
sub
cltd
lea
or
addr16
daa
dec
fmuls
test
bound
pusha
push
fcmovnb
push
inc
jle
jle
or
or
jbe
cmp
push
mov
cwtl
mov
add
aam
bound
fwait
mov
pop
clc
add
xchg
xchg
lods
fadds
or
push
and
dec
add
xchg
mov
inc
adcl
mov
lcall
jne
push
lods
add
sub
adc
add
bound
and
or
mov
push
fdivrl
inc
inc
cwtl
jne
sbb
ret
xor
pop
add
fmuls
insl
rolb
fdivrs
fidivrs
xchg
xchg
xor
bound
xchg
popf
add
add
add
jo
andl
rorl
cmp
mov
sar
rolb
dec
icebp
es
mov
push
mov
mov
inc
lea
add
dec
jg
pusha
enter
test
test
jmp
mov
insl
mov
inc
mov
sbb
jnp
loopne
outsb
call
mov
addr16
lods
rclb
ljmp
mov
daa
aaa
dec
and
mov
and
xchg
in
call
cmp
xchg
mov
subb
jge
dec
rcll
mov
adc
jge
imul
jle
pop
push
xchg
xchg
mov
in
xor
push
je
mov
jne
add
push
gs
inc
dec
rorb
les
inc
dec
cmp
push
les
xchg
inc
testb
mov
sbb
jmp
adc
add
ret
add
sbb
faddl
xor
adc
jae
xor
jb
mov
lods
mov
mov
aam
out
nop
sub
push
mov
mov
pop
mov
adc
sbb
add
mov
ret
or
pop
lret
add
jns
adc
add
into
xor
adc
add
add
inc
sub
mov
icebp
sub
dec
adc
adc
lock
movsl
pop
nop
mov
cltd
pop
fnstenv
inc
test
add
mov
push
mov
add
stos
scas
or
sti
add
add
or
add
push
xor
pusha
mov
push
dec
pop
xchg
mov
out
sbb
in
decl
xor
addr16
mov
out
outsl
cmc
sarb
or
inc
mov
jns
jbe
inc
faddl
jns
sbb
adc
push
jge,pt
mov
adc
mov
xchg
cld
mov
scas
sarl
adc
xchg
dec
sub
pusha
movsb
adc
push
pop
scas
outsb
jge
shll
cmpb
orb
adc
pop
int
add
mov
dec
jmp
sub
or
add
xlat
adc
popf
sub
bound
add
rorb
lea
adc
dec
mov
dec
adc
clc
clc
pop
cmpsl
lret
pushf
jl
add
xchg
push
pop
xchg
fdivrl
or
leave
push
add
je
sub
cmpsl
mov
add
mov
pushf
jbe
ss
cmp
add
and
push
shll
mov
inc
lcall
inc
clc
jo
mov
icebp
add
inc
arpl
out
rclb
lahf
cltd
out
inc
dec
or
cmp
imul
jmp
mov
push
lds
adc
dec
test
mov
adc
aam
das
push
push
test
xor
movsb
add
adc
aaa
and
pop
jl
jno
inc
xchg
lcall
mov
and
outsl
pop
xchg
es
push
add
lsl
fs
pop
cmpsb
pop
je
hlt
cmc
fsubrl
jp
sarb
out
mov
pop
loope
or
or
add
das
or
mov
adc
and
and
mov
jmp
xchg
mov
jge
xor
int3
sub
mov
cmp
shrb
cmpsb
imul
push
icebp
mov
add
ret
pop
pop
add
mov
out
mov
adc
in
add
push
ret
in
movsl
popf
lahf
fisttpl
add
cld
or
or
sbb
cld
cld
mov
mov
mov
or
mov
cmp
pusha
int3
push
stc
or
adc
push
pop
inc
adc
jno
nop
or
insl
data16
adc
or
push
sbb
mov
jmp
mov
add
sub
or
dec
push
aad
sub
or
lea
inc
push
ffreep
adc
ds
adc
push
mov
je
sbb
lock
jae
je
lds
xchg
faddl
inc
mov
add
lret
or
mov
stos
sub
push
mov
xchg
jnp
xchg
sbb
pop
mov
movsb
popa
inc
lret
frstor
cs
iret
lcall
lcall
xor
scas
nop
mov
mov
inc
sbb
xor
mov
mov
or
adc
scas
dec
je
mov
and
and
aaa
mov
pusha
dec
in
sbb
cs
loopne
inc
ror
test
sarb
mov
sbb
mov
push
xchg
popa
gs
dec
mov
into
scas
roll
adc
test
and
lock
hlt
cli
add
push
pop
mov
mov
popa
scas
ror
mov
insb
xor
aaa
cltd
or
fadds
cmc
xor
and
ret
test
enter
sub
pop
push
incl
mov
rorb
mov
mov
push
scas
push
pause
pop
das
fucomip
imul
or
push
push
push
inc
jns
rolb
add
push
imul
cltd
popa
les
not
popf
mov
js
push
sbb
test
in
and
mov
sub
cs
sbb
add
pushf
adc
inc
loop
mov
loopne
push
jl
cmc
mov
push
test
lods
sbb
mov
add
xor
aad
movb
ss
in
xor
sbb
dec
dec
jmp
and
mov
sti
ret
data16
pop
add
mov
fs
addr16
push
sbbb
hlt
push
adc
loope
fnstsw
push
je
and
mov
cmp
daa
xor
loopne
dec
fmulp
aaa
sub
test
out
in
stc
inc
and
and
ds
sbb
mov
out
sbb
cmp
sub
fadd
adcb
mov
out
mov
mov
add
mov
ja
inc
or
mov
inc
or
insb
ljmp
cmovle
adc
mov
add
pushf
or
inc
jl
cs
call
cmp
aam
add
or
and
adc
sub
add
or
shr
and
stc
inc
cmpb
cmpsl
jl
inc
lods
sarl
mov
push
testl
imul
push
push
push
pop
and
iret
sarl
xor
outsb
jae
inc
push
mov
jl
xor
outsb
adc
or
pusha
add
sub
adc
dec
sbb
add
iret
cmp
xor
leave
in
repnz
sbb
dec
sbb
push
or
adc
mov
std
add
imul
movsb
xor
adc
adc
aam
add
and
adc
stos
or
iret
and
rolb
lock
push
xor
sub
pmuludq
and
push
jns
sub
jb
xchg
out
jne
inc
cld
push
push
test
fisubrl
pop
cmp
push
sbb
inc
add
add
inc
push
movsb
orb
xchg
rolb
xchg
stos
daa
cmpsb
inc
lcall
daa
push
sub
imul
xor
inc
das
in
push
push
les
mov
ss
xchg
pop
and
mov
sub
adcb
sbb
outsl
jae
in
bound
ffreep
and
or
out
cmp
jg
unpcklps
add
mov
add
ret
inc
outsl
and
and
add
inc
adc
loopne
xchg
cmp
bound
ret
jge
mov
or
or
mov
in
popa
jae
sahf
jle
adc
lret
add
inc
mov
or
push
jg
ret
push
rol
bound
insb
fs
inc
dec
fwait
xchg
dec
cmp
jno
adc
adc
fiadds
cld
popa
mov
movsb
arpl
popl
inc
or
jle
stos
adc
sub
divb
mov
adc
and
push
pop
cmpb
sub
sbb
jbe
fs
inc
dec
aad
mov
or
icebp
insb
jns
cmp
outsb
mov
bound
ret
xchg
add
sbb
xchg
add
aas
add
jo
dec
arpl
pop
pop
mov
mov
adc
mov
call
in
mov
int
or
das
or
or
jne
sahf
mov
adc
in
es
pop
mov
add
xchg
sub
dec
enterw
xchg
fmull
sbb
and
inc
cmpl
lahf
out
fiadds
jl
sbb
repz
or
mov
jl
cmp
mov
push
lock
out
cmp
cmp
pop
jl
add
pop
sahf
pmullw
sti
sbb
loopne
outsb
xchg
cmp
pop
xor
push
cs
lods
daa
sub
scas
dec
inc
sub
push
test
inc
xchg
sbbb
lock
div
loopne
push
test
xor
push
outsb
insb
pop
mov
jo
pop
push
pusha
pop
inc
mull
mov
pop
aas
push
pop
roll
aaa
repnz
pusha
rcrb
jo
xchg
stc
xor
push
adc
add
pop
cmp
movsb
xor
in
pop
icebp
sub
sbb
sbb
pop
or
add
loope
and
dec
test
imul
cmp
dec
imul
xchg
jmp
gs
dec
cmp
insb
nop
push
lret
add
and
sub
sti
push
jne
push
test
pop
sub
ret
mov
lock
scas
dec
cwtl
cld
pop
inc
jl
add
dec
add
pop
xor
outsl
or
lahf
out
add
orb
inc
adc
add
or
add
inc
or
loopne
mov
inc
enter
mov
add
out
orb
cmp
sbbl
sub
or
or
xor
dec
lock
push
or
fs
pop
inc
inc
pop
inc
insb
gs
gs
les
loopne
lret
and
pop
pop
inc
add
clc
push
popf
roll
sbb
js
inc
and
adc
jle,pn
cltd
inc
ss
sub
lods
sbb
jb
outsb
xchg
and
lea
inc
lock
push
lock
out
adc
jno
jae
mov
in
adc
pop
or
in
mov
adc
nop
adc
in
and
dec
cwtl
cwtl
xchg
orb
dec
and
cwtl
das
in
mov
cmp
pop
iret
mov
jmp
sbb
adc
pop
jne
pop
inc
loopne
inc
or
jne
push
js
mov
outsb
xor
ds
out
bnd
mov
cmp
pop
or
daa
sbb
push
shlb
je
subl
pop
sbb
add
inc
xor
push
sbb
rorb
mov
xlat
lahf
orl
mulb
pop
or
adcb
jge
inc
add
cld
cmpsl
loopne
dec
imul
and
push
or
pop
mov
mov
dec
push
pop
or
or
dec
pop
insb
add
pop
dec
jmp
add
add
pop
fcmovnb
jl
dec
jne
or
or
cmc
cltd
dec
lea
pop
adc
dec
xchg
mov
inc
ja
mov
inc
inc
into
aam
push
and
mov
je
push
jo
cwtl
or
nop
pop
sbb
andps
and
cmp
jo
in
adcb
pop
or
push
in
data16
push
dec
orb
dec
mov
jge
xor
je
imul
cmp
sbb
decl
or
imul
add
sub
leave
stos
and
outsl
add
adc
rcrl
adc
sbb
sub
sub
sbb
int
fwait
nop
in
nop
inc
sbb
push
push
add
in
sbb
pop
call
inc
mov
adc
test
push
test
or
sbb
sbb
and
daa
and
or
test
pusha
mov
and
adc
enter
popa
jmp
and
nop
mov
pop
cwtl
add
inc
pmulhuw
test
cltd
sbb
mov
or
adc
imul
jecxz
or
mov
jns
push
and
push
or
inc
mov
inc
jo
cld
xor
add
xchg
out
push
pushl
jecxz
pop
ds
jecxz
pushf
xorb
jle
scas
or
mov
repnz
mov
push
mov
push
add
xor
xor
xor
xor
ss
cmp
xor
inc
mov
dec
dec
jmp
clc
dec
dec
dec
dec
dec
dec
push
push
push
push
push
pop
pop
pop
or
or
lea
repnz
add
xlat
pusha
or
fbstp
add
cmp
add
sbb
arpl
xlat
xchg
or
push
cwtl
inc
shlb
push
jmp
and
jae
shlb
xor
or
and
xor
add
adc
subb
inc
add
push
mov
jns
cmp
pop
push
decb
rorl
mov
pop
and
mov
push
xor
inc
add
dec
adc
rorb
mov
das
mov
mov
decb
clc
sub
dec
shrl
jp
fiaddl
sti
push
or
orb
adc
inc
jge
rcl
mov
or
jnp
cltd
sarb
imul
cli
push
sbb
test
into
adc
scas
cmp
dec
shll
add
jg
jmp
popf
sbb
add
sub
repnz
popa
fidivl
and
pop
jmp
inc
push
sbb
rolb
dec
pusha
sub
daa
mov
orb
or
ret
mov
or
clc
mov
mov
rcrb
test
adc
mov
dec
xorl
ds
inc
enter
hlt
cmp
fcmovne
sbb
xor
data16
and
sbb
es
inc
add
inc
cmp
sub
xor
xor
mov
mov
mov
into
pop
push
jg
jmp
xor
sahf
fldl
add
mov
sub
jl
xchg
cmp
jg
enter
jg
and
pop
adc
or
imul
test
xchg
loopne
orl
mov
test
int
rolb
gs
xor
popl
mov
jg
add
pmulhuw
sub
add
inc
mov
les
push
or
adc
jge
jmp
inc
rdtsc
add
jne
dec
xchg
and
clc
or
mov
add
xorl
push
sbb
jo
mov
xor
add
scas
shll
add
inc
push
adc
xchg
icebp
sbbb
jecxz
add
out
fs
mov
jge
test
inc
pushl
sbb
pushl
fdivrs
mov
jbe
mov
adc
ret
lahf
arpl
mull
mov
out
ds
jmp
adc
popa
xor
xor
or
jmp
test
out
mov
pop
and
pusha
ljmp
lock
jmp
cmp
adcl
or
xorb
cmpl
in
jle
mov
sub
cmp
pop
cwtl
mov
xlat
cmp
pop
xor
jmp
cmp
je
in
dec
addr16
lods
dec
aaa
add
pop
rcrl
nop
scas
fisttpl
in
in
fists
add
cmp
mov
cld
jbe
adc
and
sub
adc
out
or
adc
ljmp
sbb
addb
lret
adc
fdivrs
xor
dec
or
mov
outsb
mov
add
sbb
lods
push
jmp
mov
inc
sbb
aad
imul
cs
enter
push
sub
loopne
pop
sbb
pop
cmp
nop
pop
xchg
cmp
adc
cmpb
ret
cmpsb
fmuls
into
nop
insb
inc
push
aas
cmp
fbstp
aad
cwtl
gs
addb
push
lods
push
pushf
addb
out
xadd
add
add
adc
in
xor
and
js
xchg
js
cmp
inc
or
mov
dec
xlat
lds
pop
push
shrl
sbb
push
jbe
pop
jg
sbb
mov
dec
aas
jl
les
sahf
mov
mov
aaa
cmp
add
fstpt
mov
cmpsb
cmp
cld
xchg
inc
rol
fdivrs
inc
xchg
inc
cmpl
loope
mov
js
popa
call
or
push
mov
out
jl
inc
mov
add
cmp
add
add
data16
inc
inc
pop
jb
lea
mov
aad
inc
push
sbb
inc
bndldx
sbb
daa
and
add
cmpsl
insl
add
fstps
sbb
push
jmp
jmp
adc
or
jg
cmpl
or
fdivrl
dec
adc
lcall
pop
sub
pusha
inc
push
mov
roll
mov
mov
imul
nop
daa
mov
mov
repnz
lds
adc
ret
arpl
sbb
or
imul
pop
pop
add
dec
mov
xor
add
mov
push
jnp
push
xor
js
add
inc
push
xor
or
and
add
cmpsb
jno
loopne
push
push
mov
xor
inc
dec
repz
pop
popf
pop
sti
and
inc
push
or
xor
out
cmp
inc
sub
cmpb
adc
push
push
dec
or
arpl
or
inc
jo
das
je
bnd
fcompp
mov
push
das
pop
addr16
xor
cmpsb
shlb
dec
inc
ret
adc
dec
subl
xor
imul
orb
test
cmp
dec
or
fisttpl
ret
testl
adc
fwait
pop
jle
inc
cmp
xor
mov
inc
xor
jb
addb
pop
aam
mov
daa
and
push
inc
or
ficompl
adc
xchg
repz
sub
sbb
jae
test
clc
int3
sahf
adcl
or
cmp
orl
mov
or
cmpsb
lcall
inc
sbb
mov
in
jmp
mov
rorl
push
aaa
and
repz
inc
mov
arpl
fildll
fisttps
ret
fsubrl
jne
mov
sbb
pop
add
pusha
ja
cmp
into
pop
jo
and
push
cltd
flds
push
nop
adc
pop
inc
inc
ffreep
fwait
and
dec
pop
aas
adc
push
mov
inc
in
adc
fists
aaa
cltd
pusha
adc
xor
sub
add
or
inc
sbb
testb
adc
ret
shlb
xor
mov
sbb
xor
cli
or
push
sub
ds
cmp
sbb
mov
sub
push
adc
xchg
bound
dec
push
xchg
mov
add
mov
out
or
add
inc
icebp
xchg
insb
push
mov
jae
pop
and
add
xor
lods
mov
decb
inc
ret
aas
shrb
shlb
fldenv
int3
push
dec
shll
mulb
iret
add
mov
xchg
jns
xor
inc
sbb
sub
or
pop
pop
pop
fs
sub
flds
loope
fwait
inc
dec
adc
sahf
insb
inc
cmp
jge
aad
mov
pop
aas
jae
mov
cmp
xor
or
mov
mov
cmpsl
xor
cmp
adc
cmpsb
pusha
pop
sbb
cmp
push
add
jmp
or
push
ret
vpcmpgtd
dec
inc
and
xchg
leave
inc
push
push
jne
add
fsubrl
inc
inc
ljmp
sub
cmpsl
in
add
imul
icebp
mov
cwtl
loope,pn
lcall
mov
mov
xchg
add
inc
sarl
call
ljmp
pusha
aam
pop
push
and
adc
enter
cld
cld
mov
fdivrl
pushl
outsb
mov
filds
adc
movsl
addl
popf
mov
push
mov
js
jmp
mov
arpl
and
rolb
js
fldl
dec
mov
or
push
cmp
daa
xorb
das
adc
in
clc
lret
adc
mov
inc
mov
fwait
rorb
mov
mov
mov
sub
or
and
mov
lcall
lods
inc
data16
add
sbb
data16
imul
out
or
mov
pusha
and
push
or
push
xchg
pop
mov
mov
ret
inc
scas
je
pop
std
xor
push
movsb
jb
mov
ret
mov
aaa
xor
xchg
push
orb
xchg
pop
in
cmpsb
rol
dec
mov
pop
mov
push
pushf
sbb
adc
mov
sbbb
sbb
fwait
jno
jg
and
mov
pop
js
inc
add
subb
daa
xor
push
cs
adcb
and
in
shlb
dec
add
inc
xor
loop
inc
jecxz
xor
cwtl
outsl
add
sbb
or
add
repnz
cmp
outsl
imul
mov
pop
movsl
or
and
inc
sahf
add
adc
loop
inc
jbe
sub
xor
or
xchg
adc
xlat
or
mov
sbb
inc
jl
and
and
fldlg2
cmc
xor
sbb
idivb
cmp
xorb
push
cltd
and
loopne
mov
add
roll
imul
inc
add
aam
loopne
push
js
out
add
add
lods
and
pop
sub
pop
dec
or
or
add
push
repnz
ja
js
lea
jge
hlt
mov
aam
daa
aam
cmp
and
rorb
add
xor
call
add
push
inc
call
sub
adc
fsub
sbb
and
push
es
mov
out
test
out
pop
jo
mov
loop
adc
sbb
pusha
js
lock
out
push
adc
test
imulb
jge
mov
and
sub
fmull
notl
jp
rol
sub
mov
mov
inc
mov
setnp
inc
iret
push
shrb
loopne
adc
dec
pusha
adc
and
pop
js
push
jecxz
push
mov
jo
int
ss
cmp
push
inc
jle
aam
jbe
ljmp
and
cmp
inc
push
dec
mov
dec
loopne
faddl
imul
ret
jnp
or
push
leave
in
outsb
cmp
out
jnp
imul
dec
or
fdivl
dec
aam
xor
add
insl
push
push
inc
inc
push
pop
push
pop
dec
loopne
sub
sub
jnp
dec
xor
stc
shrl
andb
sub
and
push
dec
test
fistpl
loop
test
outsl
xorl
xchg
adc
cwtl
push
test
cltd
xadd
cmp
les
push
cltd
sub
je
or
jge
sbb
jnp
sub
jb
add
aaa
int
add
nop
mov
xor
and
shlb
pushf
movsb
dec
dec
clc
lock
jl
sub
xlat
int
jge,pt
sub
push
repnz
sbb
push
mov
jp
or
gs
fs
mov
imul
mov
push
mov
xlat
adc
ret
hlt
out
repz
lret
or
and
mov
mov
and
rcrb
adc
push
and
mov
push
js
jb
insb
fisubs
enter
mov
enter
je
cmp
fldl
mov
pop
int3
data16
cmpsl
icebp
int3
or
enter
push
pusha
and
jge
gs
fsubs
inc
ret
xlat
mov
pop
xadd
insb
les
adc
lret
in
dec
mov
jge
shrb
pusha
add
fwait
jmp
and
add
push
fidivrl
les
inc
js
push
and
sub
or
out
fsubs
xchg
push
dec
pop
mov
add
push
fcomps
pop
push
adc
mov
faddl
pop
inc
and
nop
aas
sub
pop
call
rolb
sarb
pop
test
and
sti
in
or
mov
or
sbb
cmp
xor
das
jle
push
mov
adc
movsb
and
xchg
popa
daa
jns
push
ss
dec
aas
adc
push
mov
mov
sbb
pop
sbb
pop
adc
outsl
mov
dec
shrl
push
adc
xor
inc
adc
xchg
out
fcomps
hlt
fsubr
xchg
and
out
shl
inc
popa
das
incl
jne
sub
lock
mov
xor
mov
cltd
pop
inc
cmp
xchg
and
test
test
cmp
or
movb
adc
fwait
add
xor
add
fildl
dec
cltd
mov
add
inc
clc
shlb
add
lds
enter
sub
xor
inc
dec
pop
push
push
sbb
push
movsl
pusha
pop
sbb
dec
inc
adc
sahf
jns
decl
stc
ss
sub
cmp
fmuls
pop
mov
rorl
push
jecxz
pop
and
psubusb
mov
mov
inc
fmuls
fsubr
nop
sbb
pop
imul
cwtl
loope
cmp
push
push
inc
adc
shld
std
fsubrs
adc
fldcw
adc
jnp
dec
jg
clc
jg
gs
insl
mov
fcomps
orl
lahf
enter
rcll
push
or
and
jno
sub
xchg
dec
incb
push
add
inc
push
sub
int3
push
enter
sub
roll
pop
add
cmp
sub
push
adc
xlat
mov
add
xor
fidivl
xchg
fsubs
cmp
shrb
sbb
add
lea
roll
ss
pop
adc
xor
cmp
les
add
dec
rcr
cmc
imul
loopne
loope
jp
repnz
jnp
fildl
mov
push
inc
sti
push
loopne
xor
leave
fmuls
or
out
dec
add
das
lock
jo
ds
sbb
sub
fistpl
imul
mov
imul
cs
aad
lock
add
clc
sub
lods
push
lods
cmc
pop
adc
and
test
or
push
bound
dec
leave
rorl
test
xchg
jne
fsubs
mov
ret
or
sbb
lock
clc
pop
movsl
dec
sub
sbb
sub
pop
dec
lock
movsl
inc
fmuls
call
les
lea
ret
sbb
or
cld
hlt
ret
and
popa
test
sub
and
sbb
mov
pop
adc
push
inc
sub
daa
call
sti
je
loope
addr16
clc
inc
add
test
out
iret
inc
pop
out
sbb
clc
jmp
push
jne
and
stc
enter
not
inc
inc
les
add
sbb
enter
push
adc
sbb
xchg
adc
dec
loopne
push
xchg
push
dec
dec
xor
pop
bound
loopne
dec
push
and
add
xchg
mov
enter
int3
call
adc
in
test
jns
sbb
cmp
orb
stos
and
leave
dec
xor
loopne
push
test
ljmp
add
pop
sbb
adc
sbb
dec
clc
add
and
add
adcb
orb
mov
mov
sbb
jns
pop
add
lock
sbbl
in
and
sarl
push
add
pop
das
insl
push
movsb
inc
dec
xor
mov
add
pop
ja
mov
xchg
loop
push
xor
stc
popa
dec
fs
jg
adc
mov
and
arpl
cmp
movsl
je
add
popa
mov
les
mov
jge
es
mov
push
and
dec
add
jbe
sbb
lods
xorl
jle
and
sbb
cmpsb
dec
sbb
pop
jle
or
rcrb
in
call
push
pusha
push
int
fwait
sbb
add
fbstp
add
fcomps
push
lahf
add
test
popa
rorl
sbbl
shll
pop
andl
mov
ss
jg
cmpb
sbb
sbb
jmp
fisttps
and
adc
jo
dec
mov
call
ss
out
and
push
cwtl
movsb
mov
jp
test
dec
dec
pop
jl
or
xchg
mov
popa
in
pop
dec
sbb
dec
xor
dec
push
lea
xchg
inc
xchg
out
cmpsb
adc
or
add
das
or
sarl
in
inc
add
dec
imul
fwait
adc
rclb
mov
dec
hlt
sub
and
sbb
inc
xor
scas
hlt
jle
sbb
fwait
xor
sbb
lcall
jl
add
icebp
push
lock
pop
adc
or
dec
or
jo
fs
sbb
xchg
loopne
inc
rorb
icebp
stc
scas
sub
jo
jp
add
shlb
inc
in
nop
jl
push
or
movsl
fsubrs
test
jecxz
cmp
imul
xor
in
insb
inc
jp
push
fs
adc
mov
fwait
jnp
adc
movq
mov
jmp
out
xchg
push
pop
add
fadds
mov
fcom
and
pop
mov
jo
jmp
pusha
mov
fisubl
add
cmp
repz
test
jg
xlat
cmp
mov
and
push
add
nop
loopne
icebp
int3
addr16
pop
add
sar
enter
adc
sbb
cmc
jo
inc
add
push
rcr
pop
in
rolb
add
mov
dec
add
add
fcompl
loopne
dec
sti
add
mov
inc
filds
pop
inc
pop
pop
sub
fadd
cltd
out
das
loopne
adc
call
rorl
imul
cltd
movsb
pop
lret
or
hlt
pop
push
xor
adc
pop
jae
cld
ja
or
jb
das
pop
loopne
push
jg
jne
pop
xchg
push
xorb
or
or
cmp
rcrl
leave
mov
icebp
cs
sbb
push
gs
or
divl
sbb
data16
cmp
push
sub
fcomps
sbb
add
flds
xor
and
fmuls
mov
jmp
mov
sub
jb
inc
sbb
cmp
jno
mov
in
xchg
inc
scas
test
fcoms
sbb
push
pop
int3
xchg
sahf
sbb
hlt
enter
adc
popa
subb
mov
xchg
out
test
rcrl
fildl
addl
inc
rol
add
addl
dec
push
dec
stos
inc
add
inc
mov
mov
cmp
inc
ret
dec
jecxz
jnp
cmovl
hlt
cmp
inc
sub
dec
cmp
add
fdivs
nop
ljmp
lret
aas
cmp
or
rorb
jp
fcmovnu
roll
cmp
or
es
je
push
add
ret
or
pusha
jl
or
pop
inc
push
enter
stos
shlb
sbb
mov
xor
cmp
jmp
int
sub
xor
and
jg
or
jmp
rorl
push
add
mov
outsl
lahf
out
aas
je
les
aas
dec
or
in
push
ret
adc
ds
push
add
cwtl
ja
inc
hlt
repnz
add
adc
xchg
jp
sbb
jl
pop
mov
jl
and
pop
cmp
adc
mov
ret
outsb
out
xor
inc
sub
inc
inc
push
inc
inc
add
dec
je
pop
inc
jo
outsb
vmovntdq
les
sbb
jg
push
sbb
dec
inc
dec
or
jnp
addl
ret
loope
inc
dec
xor
adc
inc
dec
loopne
scas
pusha
mov
daa
adc
incl
sbbl
fs
ror
xlat
pop
outsb
or
cmp
and
cmpsl
shrl
cmp
je
pop
cmp
push
mov
lret
and
int3
lret
fs
or
cmpsl
pop
movb
mov
mov
sbb
inc
or
daa
jle
or
add
xchg
jle
adc
push
hlt
rolb
dec
pop
mov
add
xor
aad
pop
jnp
sub
inc
aas
jbe
and
push
dec
dec
adc
aas
push
mov
js
data16
pop
inc
push
filds
mov
sahf
pop
movl
das
inc
js
or
add
inc
or
mov
mov
pop
push
push
cwtl
popa
push
fdivrl
inc
or
cmpb
nop
rclb
xchg
cmp
sub
sbb
mov
add
xor
sub
cmp
fdivp
dec
mov
mov
inc
mov
imul
out
cmp
mov
mov
hlt
dec
mov
xor
call
push
add
sbb
add
push
mov
jo
fldl
inc
dec
lods
enter
mov
insb
aaa
lret
ds
adc
stos
xor
in
add
push
jo
shr
addr16
roll
inc
and
pop
mov
or
xor
xor
cmpb
insb
notl
push
lock
test
xchg
orb
dec
popa
jg
test
push
ror
sbb
push
adc
mov
or
mov
sub
rcrl
outsb
orb
test
dec
adc
popf
sbb
or
xchg
push
cbtw
push
sahf
stc
mov
dec
mov
pop
push
test
subl
cli
ds
push
adc
ja
or
mov
movsb
adc
je
mov
add
xchg
sarl
icebp
xor
add
addr16
inc
dec
push
or
sbb
mov
mov
das
sub
jo
psubb
cmpl
ljmp
or
pop
xchg
aaa
enter
mov
dec
cmp
and
sbb
dec
sbb
lret
mov
pop
imul
fcomip
or
cmp
je
mov
cmp
jnp
xor
ret
fistpl
mov
xor
xor
fsubs
test
xchg
mov
ss
jle
xor
fs
call
cli
jne
mov
xchg
and
add
leave
shlb
jnp
mov
lods
adc
jb
inc
pop
mov
imul
or
jg
fimull
ror
sub
jbe
and
xor
mov
cmp
ja
add
mov
xchg
or
mov
xchg
adc
adc
pop
mov
cmp
cs
xor
scas
dec
or
adc
stc
aas
and
cs
mov
cmp
cmp
and
adc
dec
adc
insl
push
push
sub
loope
mov
fucom
rorb
mov
dec
adc
out
adc
fimuls
call
push
pushl
lds
push
mov
sub
pop
add
mov
pop
dec
lret
outsl
lcall
or
je
arpl
dec
sub
push
cmp
pop
push
fsubr
push
push
or
jns
jno
mov
jl
push
js
into
mov
mov
adc
addb
popl
dec
push
dec
pop
cmp
add
sbb
cmpb
and
inc
cmpsb
push
push
orb
lds
xorb
inc
nop
mov
in
pop
xor
aam
sbb
xchg
pop
leave
cld
cld
mov
pusha
test
dec
ret
adc
xchg
shll
push
or
fnsave
lods
adc
inc
inc
sub
int
sbb
ret
pushf
xor
rorb
int
mov
add
jle
call
pop
call
xchg
inc
dec
xlat
nop
jno
sub
adc
add
or
out
xor
mov
sbb
xchg
adc
push
cli
addr16
ret
inc
dec
jne
pushf
pop
sbb
jg
jne
push
pop
xchg
dec
cmpsl
dec
xchg
mov
cs
xor
movsb
outsl
adc
lods
mov
stos
pop
add
call
loop
add
or
mov
add
push
ss
lock
sbb
xchg
fisubrl
jmp
pushl
dec
inc
add
adc
clc
scas
adc
dec
mov
cmpb
pop
push
pop
sbb
mov
pop
sub
xor
xchg
xchg
sbb
fimull
mov
es
rolb
int3
jne
rolb
sub
andl
push
hlt
add
jnp
add
pop
sub
push
bound
cmp
inc
clc
cmc
or
mov
popa
loopne
add
int3
mov
cmp
cmp
les
mov
movsb
test
cmpsl
push
nop
enter
add
cmp
pop
and
pop
dec
xor
fsubr
mov
out
jmp
sbb
subl
pop
bound
xchg
dec
repz
out
or
les
mov
pop
out
xlat
mov
int3
jne
lret
mov
pop
popa
cmp
stos
rcll
add
in
mov
add
push
cmp
xlat
lahf
loopne
xor
mov
imul
inc
adc
lcall
nop
push
adc
js
rcll
xchg
shlb
loop
add
paddusw
xchg
pop
loop
cmp
mov
adc
sbb
mov
outsb
repnz
aas
xchg
or
inc
fildl
out
dec
lea
incl
cmp
and
push
mov
repnz
popa
pop
test
insl
xor
push
fisubrl
pop
and
or
popa
mov
push
mov
sar
dec
jae
int3
mov
xor
inc
add
stc
sub
add
sub
outsb
lret
popf
cmc
ja
pop
push
push
sub
inc
imul
xchg
mov
mov
mov
leave
lods
sub
adcl
jl
push
jmp
dec
add
pop
icebp
in
movsb
sub
push
aam
cmp
in
cmp
sub
and
lods
pop
and
sub
inc
imul
ficompl
inc
adcb
cmp
aad
inc
ds
cmp
mov
or
js
sub
and
cmpsl
and
add
movb
bnd
push
xchg
inc
and
pop
add
fiadds
add
in
pop
jmp
cmpsl
sub
mov
cmp
sarl
adc
movl
push
mov
inc
push
ret
inc
sub
xor
cmpb
movb
and
add
popa
adc
pop
jne
loope
in
ret
push
fadd
sub
mov
jg
dec
and
inc
jb
adc
mov
loope
dec
sub
inc
cmp
jb
sub
pop
adcb
mov
adc
add
xchg
jge
jg
or
sbb
mov
mov
cmp
pop
mov
flds
or
inc
mov
or
or
call
insb
inc
cmp
insb
loopne
jo
or
add
je
nop
pop
xor
mov
inc
cmp
sbb
lock
push
adc
jae
or
xlat
and
xor
lods
or
into
or
jns
stc
daa
pop
push
outsb
insb
loopne
dec
push
mov
push
sahf
pop
sub
xchg
push
push
cmp
dec
sbb
xchg
mov
pop
jge
add
xor
adc
sub
cwtl
inc
dec
lock
add
pusha
inc
negl
xchg
pop
hlt
xchg
out
xor
mov
dec
test
lret
jecxz
nop
pop
js
mov
test
push
fists
pop
mov
jo
pop
scas
push
mov
xchg
sub
add
ljmp
push
mov
scas
je
add
outsb
or
aam
rorb
xor
call
mov
mov
and
insb
fisubs
lock
fs
js
popf
mov
leave
push
sub
xchg
mov
shlb
ja
test
add
mov
lods
movsb
in
mov
cltd
mov
xorl
popa
xchg
scas
add
dec
push
adc
dec
fidivs
xor
mov
push
pop
push
cmp
adc
pop
xchg
test
cmp
mov
add
dec
sbb
add
pushf
mov
pop
icebp
rcl
and
sub
addr16
mov
leave
or
dec
or
loopne
insl
loopne
jno
add
divl
ljmp
aas
mov
jno
add
hlt
test
lret
es
sbb
or
ljmp
dec
push
sarb
sub
ss
call
sbb
pop
std
xor
dec
popf
in
lret
ss
push
sub
rorl
clc
or
xor
add
xchg
add
or
inc
aam
lea
jne
inc
xor
or
loopne
imul
dec
xlat
xor
add
mov
push
pop
add
jb
pop
inc
jmp
outsb
lds
adc
xchg
int3
into
divl
ja
and
or
fcompl
fs
gs
cmp
clc
arpl
jo
mov
push
adc
and
js
sbbl
je
sarb
xor
lds
sbb
sbb
sbb
jo
into
nopl
cmp
ss
popf
add
add
inc
out
jo
mov
or
je
xor
ljmp
inc
test
jle
pop
hlt
pop
in
cli
mov
xchg
add
lock
add
add
pop
fwait
sub
pop
xor
sub
push
movsb
shrb
sub
jbe
inc
iret
and
ja
adc
sahf
inc
aaa
cmpsb
cli
mov
push
cli
mov
setp
mov
inc
cwtl
incl
fs
jge
push
inc
lds
push
sbb
loop
and
xor
test
mov
popa
cs
jp
jbe
out
sub
inc
xchg
jns
add
dec
sbb
push
add
js
or
call
ret
and
movsl
addl
xchg
push
in
add
lods
addr16
lea
mov
bound
push
data16
pop
xchg
push
in
jae
dec
mov
add
mov
jne
mov
push
cli
inc
jmp
imul
push
add
arpl
out
or
test
shrb
pop
and
repz
xor
mov
popa
fstl
xor
xor
xlat
data16
les
push
faddp
sub
jnp
xchg
call
xor
adc
xchg
fdivs
lods
or
mov
push
lea
xchg
or
push
push
mov
xor
gs
notl
push
std
dec
add
pusha
mov
je
and
mov
dec
shrb
inc
lcall
mov
mov
mov
in
cmp
add
rol
lock
insl
mov
xchg
lock
sub
jmp
dec
sub
inc
or
xor
fcmove
lret
push
push
mov
add
in
xor
push
lahf
rcr
addb
movl
inc
push
add
in
repnz
add
dec
movsl
pop
imul
push
pop
fimull
mov
adcl
test
jnp
js
adc
sbb
cmp
sbb
sub
pop
cmp
or
cmp
cmp
or
pop
fcoml
sbb
cmp
cmp
mov
das
insb
mov
jno
xor
lahf
lods
inc
sti
je
in
aas
and
jge
push
adc
mov
fldenv
imulb
loope
fildll
mov
stos
mov
mov
pop
adc
test
mov
inc
xor
out
cmpb
jg
mov
lcall
loop
adc
adc
inc
dec
sub
aam
dec
pop
sub
pushf
pop
mov
dec
loopne
sub
cs
push
pop
sbb
add
jo
rclb
jp
mov
dec
pop
not
fistps
dec
mov
js
xor
pusha
inc
dec
inc
fwait
or
sbb
dec
jno
add
andb
in
aam
cmp
push
rorb
movlps
jno
aas
mov
adc
int
jnp
das
sbb
xchg
test
je
push
ja
push
push
or
or
mov
xchg
inc
clc
std
add
lock
xor
inc
nop
mov
adc
xor
test
fcom
rorb
push
xor
xchg
add
fcompl
mov
xchg
aaa
add
push
movsb
or
and
testl
jp
inc
clc
push
dec
dec
or
clc
jmp
and
rolb
outsl
jge
stos
mov
mov
jg
test
rep
lea
clc
cmp
dec
mov
nop
divl
pop
hlt
xchg
gs
jge
or
pop
hlt
xchg
dec
and
xor
pop
inc
pop
test
nop
in
sbb
rcrb
dec
mov
test
idivl
fdivrl
jp
cwtl
imul
wbinvd
dec
adc
fwait
and
dec
lret
and
or
in
je
sub
dec
shlb
enter
int
out
inc
or
or
and
pusha
and
push
adc
inc
sbb
pop
xlat
out
repz
jmp
sbb
lock
pop
adc
pop
adcb
shll
sarb
cmp
jne
data16
xor
mov
lret
jp
add
imul
or
push
test
stos
or
add
or
shlb
push
xlat
xor
rclb
aaa
in
mov
add
inc
pop
jg
fwait
aam
imul
xchg
inc
pop
xchg
sbb
ja
inc
mov
xchg
xchg
xor
jo
mov
lods
movsb
add
dec
inc
mov
and
cmp
dec
or
sbb
call
adc
inc
adc
dec
roll
imul
gs
jmp
dec
or
inc
inc
leave
inc
js
daa
pop
out
sbb
or
lock
or
mov
add
sbb
mov
inc
loope
lahf
rcll
adc
cmpsb
cmp
test
cmp
jo
into
xchg
movsb
xor
outsb
xorl
cmp
adc
je
pop
cmp
rsm
xor
inc
popa
adc
dec
push
push
xlat
add
cmp
mov
xchg
jne
arpl
imul
push
call
jns
loope
push
and
xor
or
or
mov
sbb
adc
dec
cli
mov
aaa
dec
push
or
push
sbb
sbb
xchg
dec
or
js
push
cld
leave
xchg
add
ret
popa
or
ret
lahf
push
and
repnz
push
xchg
jmp
outsl
or
test
mov
add
jbe
and
sub
sahf
xchg
xor
dec
or
add
stos
imul
jae
sub
mov
or
pop
add
sub
push
cs
jl
shrl
add
ret
lods
pop
enter
xchg
mov
pop
mov
movsb
xor
pop
loop
sbb
lret
push
add
add
jl
jl
je
inc
sbb
push
ret
cvtdq2ps
adc
push
dec
mov
push
ds
xlat
push
repz
lahf
jecxz
and
sbb
push
mov
pop
sub
test
cmpsb
movsb
rcrb
cltd
lret
dec
cwtl
bound
push
sub
sub
mov
add
push
loopne
inc
or
lcall
ljmp
call
bound
or
pop
jge
pop
cmc
push
iret
pop
dec
add
xor
add
mov
sub
testb
mov
dec
rclb
insb
clc
ret
xor
aaa
and
add
push
mov
xchg
jg
xor
test
or
jle
sub
lods
adc
in
and
xchg
mov
insl
mov
push
inc
call
jmp
sub
inc
inc
and
ja
push
push
lea
xchg
jbe
movl
mov
movsb
insl
pop
mov
out
inc
out
or
pop
shlb
and
in
je
fsubs
add
addl
inc
andl
inc
lahf
pop
mov
fcmovb
dec
and
push
packuswb
inc
pop
inc
fcomps
and
sbb
and
ret
dec
push
cmp
dec
jne
cmpsl
rclb
lret
addr16
lret
push
dec
mov
xor
add
sbb
adc
popf
add
movsl
push
scas
popf
sbb
jmp
push
lds
mov
jns
adc
inc
or
testl
xorl
push
push
xchg
jo
fldenv
add
sbb
xorl
pop
push
pop
inc
in
add
aad
pop
loop
inc
pop
push
inc
pop
lcall
push
cmp
pop
mov
add
andb
inc
popa
add
int3
cld
lahf
lret
add
and
xor
fdivl
lock
push
push
js
add
inc
push
lahf
enter
insb
filds
cmp
xor
mov
iret
push
cld
adc
lods
xchg
sub
mull
jle
cltd
jns
cmpb
mov
or
adc
mov
push
pop
dec
add
xlat
clc
adc
test
int3
inc
ljmp
jbe
or
and
cmp
inc
xor
popf
sbb
js
push
sub
cmpsl
mov
pop
gs
and
mov
push
jg
push
mov
sub
sub
enter
sbb
shl
ja
adc
xor
pop
mov
pop
pop
inc
or
and
pop
mov
sti
popa
dec
pop
inc
lahf
xchg
cmp
pop
add
inc
daa
xchg
and
push
sbb
mov
cwtl
fs
nop
jo
jp
pop
call
nop
mov
push
dec
xchg
inc
xchg
push
xor
xlat
sbb
push
adc
sub
or
rclb
cmc
mov
push
sbb
ja
add
push
je
add
push
fs
adc
aaa
sbb
popa
leave
pop
stos
jmp
sti
jmp
inc
sbb
cmp
out
addb
daa
and
mov
and
fdivrl
push
inc
mov
jno
jl
fcoms
pop
test
test
inc
mov
or
sub
dec
push
sub
insl
imul
add
out
cmp
setge
adcb
imul
notl
sub
xor
test
push
mov
rcrb
mov
xlat
dec
bound
addr16
testl
cs
inc
jle
xor
and
clc
jle
sbb
lock
sbb
arpl
mov
fnstsw
adc
jo
les
fcompl
jne
lcall
inc
add
adc
xor
lret
ret
cmpsl
test
pop
mov
es
add
ret
xchg
clc
jle
add
sbb
sbb
jge
pop
addl
jecxz
xchg
cld
dec
mov
add
sub
pop
jnp
loopne
out
xor
les
pop
hlt
push
inc
lock
mov
dec
repz
int3
mov
adc
jl
dec
repz
nop
mov
mov
fadds
rcl
jl
cs
push
sub
mov
fadd
push
cld
shrb
repz
mov
mov
enter
push
inc
mov
jae
jne
imul
pop
adc
xchg
pusha
ss
cmp
xchg
subb
mov
rorb
push
fcoms
notb
mov
loope
arpl
clc
mov
sub
add
cmpb
xchg
cmc
push
aam
popa
ret
popa
ss
mov
insb
fldl
adc
add
or
rcrb
clc
jns
push
push
outsl
lods
mov
loope
add
push
sbb
cmpsl
insl
stos
aad
dec
cs
push
movsb
repz
mov
push
cmp
push
les
int3
or
inc
loop
push
call
fnstsw
adc
inc
cmp
pusha
sub
inc
pop
ds
in
add
mov
mov
push
add
cmp
push
or
sbb
mov
rol
lock
dec
loopne
mov
jb
or
or
jg
lea
test
in
dec
movsb
mov
xchg
xcrypt-cfb
cmpsl
fs
js
or
ja
xor
dec
mov
sub
leave
push
mov
repz
inc
mov
add
push
cmp
adc
iret
xor
inc
jl
rcr
add
pusha
testb
or
sub
aam
enter
adc
rorb
inc
adc
pop
insb
inc
push
je,pt
mov
sub
dec
jl
inc
popa
ret
aaa
subb
lods
jnp
adcl
push
inc
out
adc
adc
test
push
lods
jg
hlt
inc
push
xor
jle
fsubrs
or
imul
dec
pop
cmp
test
rcll
jo
dec
nop
xchg
addr16
adcb
in
roll
pop
jns
and
inc
pusha
repz
repnz
loopne
inc
inc
sbb
inc
xor
fstpl
nop
test
pop
nop
es
lret
pop
add
xchg
or
lret
fisubrs
insl
bound
insl
add
push
ja
jg
rol
iret
repz
insl
popa
ss
push
dec
pop
adc
adc
inc
dec
or
insl
insl
fmuls
clc
and
cmpsl
out
fistps
or
inc
or
fs
and
or
jmp
jae
xchg
ja
inc
loopne
popa
sub
nop
cmp
fs
out
jne
mov
test
pop
fmuls
push
rcll
movswl
sbb
push
fs
lret
into
imul
orb
and
mov
or
push
adc
cmp
or
mov
push
mov
pusha
pop
mov
popa
imul
lock
or
pop
or
cwtl
pop
setp
movsl
mov
inc
inc
pop
aam
cs
mov
pop
adc
dec
or
fdivr
push
jns
roll
push
enter
loope
testb
xor
inc
inc
xchg
or
adc
js
movsb
cmp
addr16
fimuls
or
in
jb
adc
add
jl
cs
adc
add
inc
mov
jbe
xchg
cmp
das
xchg
xchg
dec
xchg
adc
or
js
push
repnz
inc
clc
push
jo
push
or
out
in
cmp
sar
movl
pusha
add
insb
mov
add
shll
xchg
je
or
push
add
in
out
loopne
adc
push
add
adc
adc
pop
push
ret
add
xchg
sete
bound
nop
pop
andb
add
jp
xor
ja
or
popa
fs
sbb
add
and
mov
add
xchg
addb
add
xchg
mov
add
or
dec
mov
xorl
sbb
pop
test
adc
inc
and
dec
add
and
or
add
mov
lds
sbb
adc
pop
xchg
mov
adc
cmp
add
sbb
and
xor
enter
out
add
add
stos
rorb
fnstsw
push
cltd
xchg
decb
fs
jno
add
mov
sub
or
pusha
fs
ret
inc
roll
pop
mov
inc
xor
adc
outsb
inc
or
cmp
ret
pop
sbb
push
xor
psubusb
push
add
loop
xchg
push
lcall
dec
or
mov
lea
push
popf
add
mov
push
add
and
dec
push
lock
fcompl
pop
outsl
arpl
add
mov
inc
mov
fwait
iret
out
xor
jno
adc
aam
sub
leave
mov
push
outsb
fcmovbe
js
gs
push
xor
add
into
jmp
fldcw
pushf
paddusb
mov
xchg
mov
pop
or
lret
adc
inc
loopne
adcl
and
arpl
or
cli
test
add
insb
adc
das
mov
cmp
sbb
xor
push
xor
lds
int
xchg
imul
rcrb
mov
fs
mov
dec
leave
add
push
mov
lods
pusha
xor
popa
js
cs
movsb
pop
sahf
addr16
gs
mov
sub
flds
sbb
mov
lret
jae
in
push
mov
mov
test
xchg
push
push
jo
lods
pusha
and
or
adc
xor
test
mov
dec
sub
popa
add
jle
pop
bound
nop
push
aam
inc
sbb
jns
cmp
inc
inc
mov
scas
xchg
push
or
xchg
push
inc
repz
mov
dec
fidivrl
mov
add
add
inc
add
add
fiaddl
or
xchg
or
mov
mov
mov
mov
mov
mov
or
adc
sbb
cmp
inc
mov
inc
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fwait
or
fdivr
fidivrl
call
call
jg
test
sar
sar
sar
sar
iret
mov
dec
dec
dec
or
rol
lret
dec
xor
dec
sub
xor
mov
repz
pusha
pop
out
lcall
mov
insb
or
movsb
mov
sub
ja
out
imul
lock
cmp
shlb
or
push
pop
and
es
push
sbb
testl
in
add
dec
pop
add
imul
fs
push
push
sarl
push
sub
je
lock
repz
xor
pushf
in
hlt
cld
cwtl
int
mov
add
cmpsb
lock
mov
js
push
push
lock
lahf
divb
push
fimull
sbb
ljmp
idivb
sbb
push
cmp
dec
push
call
pusha
xor
jg
sbb
clc
adc
pop
or
in
adc
addl
add
pop
add
inc
cmp
and
cmp
inc
mov
inc
outsb
push
lods
jno
dec
inc
pushf
add
add
in
cmp
add
adc
dec
add
movb
test
and
add
in
or
push
mov
sbb
pop
clc
test
xchg
es
jo
pop
adc
and
fisubl
and
adc
mov
jae
pusha
adc
jp
dec
rolb
orl
scas
sub
lods
and
sub
mov
nop
inc
inc
push
test
adc
or
mov
xchg
jp
movsb
push
dec
jge
js
fistpl
call
movl
add
outsb
or
sub
js
adc
mov
std
sbb
adc
dec
mov
cmp
xchg
orl
and
pop
sarl
cmpsb
add
push
sbb
ret
and
lea
cmp
insb
sub
iret
adc
arpl
add
add
pop
adc
add
push
js
or
jbe
and
adc
arpl
xchg
movsl
mov
dec
or
jno
add
divb
mov
ret
jp
imul
pop
cmpl
xchg
cmp
dec
cmp
inc
jno
or
mov
movsb
push
mov
cli
lldt
add
outsb
add
dec
xor
mov
xchg
in
dec
adc
add
add
add
add
mov
and
addl
jp
clc
in
jo
jp
adc
sbb
sbb
lea
add
mov
mov
ljmp
push
mov
mov
mov
mov
mov
push
push
mov
mov
and
and
mov
mov
lods
lock
mov
add
push
mov
xor
cmp
pop
nop
pop
loope
sbb
dec
in
decl
cld
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
clc
mov
mov
mov
and
jp
push
mov
les
xor
js
xor
out
rclb
je
imul
dec
sbb
push
lock
dec
repz
sarb
dec
pop
hlt
mov
push
push
push
int3
cmp
push
xor
pop
mov
sahf
cmpsl
jge
out
hlt
push
add
sbb
push
cmp
cmpsl
fnstcw
cwtl
pop
lods
ror
fucom
jns
fdivs
pop
fiadds
mov
jns
pop
fcompl
or
mov
push
push
test
in
sti
cmp
in
push
hlt
cld
cmp
popa
push
jo
jnp
jns
sbb
mov
push
insb
xor
data16
fcompp
insb
push
push
push
inc
push
push
shlb
sahf
int
pusha
je
je
push
sahf
jnp
mov
push
mov
push
xor
iret
cmp
pushf
test
inc
outsb
jbe
mov
add
or
add
int
roll
loopnew
and
lahf
data16
data16
insb
adc
lods
add
add
outsb
scas
pop
shrb
or
out
stos
notl
pop
push
fs
xchg
sbb
lahf
xchg
stc
mov
adc
or
or
movd
sbb
and
push
xchg
sub
inc
in
stos
mull
cmp
in
enter
shrb
inc
and
bound
mov
ret
and
mov
xlat
mov
jne
mov
pop
pop
iret
xchg
mov
cmpsb
bound
xor
xchg
xlat
shrl
js
dec
scas
data16
pusha
xchg
pushf
or
mov
or
out
push
push
addb
test
and
add
adc
sarb
orl
jnp
ds
scas
and
adc
push
fimuls
adc
add
xor
in
clc
paddb
call
cltd
sub
nop
add
and
cmp
xchg
add
les
jl
adc
push
lock
push
test
scas
std
jns
cmpsl
stc
add
xor
jge
out
dec
pop
push
inc
mov
js,pn
dec
xchg
pop
xor
mov
gs
mov
cmpb
stc
push
cmpsl
mov
test
sti
mov
mov
xchg
jo
fwait
push
call
imul
movsb
push
sarw
adc
mov
lods
xchg
add
mov
sub
pop
push
fadds
aas
push
in
push
inc
xor
adc
insb
loop
ficoml
add
push
jmp
dec
dec
jl
mov
and
mov
mov
ja
sbb
dec
xor
sti
int
movsb
xor
dec
push
test
pusha
je
push
and
int
in
pop
sbb
dec
inc
es
js
push
mov
vmread
sbb
inc
mov
dec
imul
dec
fwait
std
jl
movl
push
inc
gs
add
jmp
push
push
idivl
imul
data16
das
fdivs
add
ret
pop
mov
pop
ja
push
test
xor
xor
xor
dec
insb
add
inc
cmp
adc
mov
jecxz
cli
sbb
flds
add
bound
sbb
out
add
inc
pop
jecxz
iret
sbb
cld
pop
iret
adc
jno
add
cmp
nop
ja
inc
pusha
mov
lods
pop
les
ja
repnz
sbb
jns
dec
inc
gs
insl
add
nop
shlb
or
push
sbb
das
idivb
push
inc
outsb
pop
das
cwtl
daa
push
jo
daa
or
faddl
insb
popa
clts
push
in
add
adcb
add
xchg
daa
dec
push
jo
imul
push
lock
cmpsl
mov
cmp
dec
push
popa
push
movl
push
aam
pop
jmp
das
cmp
sbb
and
xor
popa
insl
fldt
adc
lods
xchg
add
or
pop
mov
rolb
jo
inc
jmp
inc
lret
dec
add
ljmp
in
xchg
jge
test
arpl
testl
push
cmovo
arpl
and
cltd
and
xor
sub
pusha
jnp
inc
iret
mov
add
sbb
mov
add
fwait
adc
jb
cmp
adc
xchg
scas
mov
js
js
sub
int
mov
fwait
xchg
je
mov
xchg
scas
add
pushl
pop
adc
dec
inc
out
mov
xchg
lahf
adc
or
jg
xchg
rcrb
arpl
je
movsb
fimuls
adc
add
sbb
push
fnsave
jbe
cmpsb
mov
int3
jl
outsl
or
jb
xchg
sbb
push
or
leave
pop
pop
mulb
xchg
push
xchg
mov
xor
add
xor
lock
mov
add
ret
negl
and
std
leave
arpl
je
pop
inc
mov
jmp
push
sahf
test
mov
fmul
push
pushf
rcll
mov
xor
rclb
mov
dec
xchg
add
sub
lahf
ljmp
dec
jne
push
sbb
jmp
iret
dec
xchg
cmp
das
or
in
cmp
xchg
jmp
nop
push
or
ret
dec
cmp
sbb
xorb
push
or
xor
or
adc
adc
xor
shll
sbb
sub
xor
shrl
sub
xor
mov
pop
dec
xor
scas
push
push
loope
and
jg
rcll
or
movsb
faddl
in
shlb
mov
cmp
aaa
sbb
or
sarb
adc
mov
gs
xchg
add
mov
and
push
xchg
loopne
dec
mov
push
or
or
mov
and
outsl
push
pusha
in
fstps
scas
lock
mov
jmp
hlt
adc
add
pop
mov
jp
enter
or
add
ss
divl
mov
sub
cmp
push
or
mov
sbb
pop
mov
dec
sbb
sub
push
pop
lods
bound
aam
shll
pop
pop
negl
mov
push
mov
jmp
or
ljmp
adc
test
sub
xor
psubd
imul
enter
sub
leave
les
scas
or
cmp
nop
nop
push
test
mov
xchg
inc
testl
inc
sbb
add
imul
fldl
pop
add
inc
lcall
les
inc
dec
iret
jmp
xor
push
inc
dec
jle
add
adc
dec
fwait
xor
pop
dec
mov
pop
and
addr16
jl
or
inc
pop
pop
pop
add
addl
cmp
ret
mov
jae
mov
lock
je
in
push
xor
dec
pusha
es
cmp
lea
and
xchg
add
mov
push
repz
or
push
pusha
sbb
daa
or
repnz
lea
sbb
fs
dec
insl
imul
fimull
enter
or
inc
sbb
loopne
mov
imul
mov
ret
adc
add
mov
repnz
pop
add
push
push
or
lock
mov
sub
dec
xor
dec
adc
leave
in
cmpsb
dec
or
adc
cmp
repnz
or
shlb
neg
mov
cmp
cmp
sbb
push
xchg
add
sbb
xlat
out
cwtl
xor
jbe
out
loopne
pop
lahf
jne
lock
and
roll
add
loopne
mov
or
enter
aaa
mov
sarl
jb
jne
movb
mov
sbb
xor
and
sub
les
mov
divl
hlt
adc
push
sarl
dec
lret
xchg
jp
mov
mov
xor
xor
adcb
fst
notl
std
and
nop
or
mov
jge
cmp
loope
mov
je
cwtl
or
in
test
mov
push
dec
mov
ret
sub
jae
mov
scas
pushf
clc
lods
dec
fnstcw
fsubrl
mov
lcall
add
aam
in
es
dec
pushf
adc
fimull
sub
in
sub
rorb
adc
cmpl
andb
shlb
js
int3
fiaddl
cmp
jecxz
push
or
out
and
cs
inc
rorl
jle
xchg
jmp
div
mov
push
imul
push
pop
cli
and
ds
jge
add
mov
jmp
pop
lds
scas
nop
pop
mov
loopne
aaa
hlt
sub
push
add
add
cmpb
add
pop
add
push
jno
bound
pop
adcb
dec
pop
push
inc
subl
sbb
idiv
pop
mov
fadds
ret
cmpsb
push
and
js
add
and
or
nop
fmuls
jmp
dec
imul
inc
and
add
cmpsl
jo
adc
loop
sbb
jl
mov
adc
push
or
inc
andl
mov
je
pop
inc
and
testb
and
xlat
mov
adc
xchg
cwtl
rorb
fs
rclb
sbb
test
insb
cmp
xor
and
movsb
ret
call
je
mov
sub
xor
mov
jmpw
push
push
sbb
push
sbb
movsb
setbe
pop
push
leave
sbb
inc
cmp
dec
repz
dec
sbb
and
popa
jp
sub
push
inc
pop
ret
lods
clc
xor
mov
adc
jmp
scas
lea
add
xor
mov
gs
daa
cmp
call
sbb
mov
adc
pop
adc
sub
les
add
and
xchg
mov
pop
or
mov
dec
add
dec
add
call
xorl
add
add
andl
jge
insl
or
dec
adc
mov
cmc
mov
adc
add
inc
std
imul
mov
rclb
sbb
mov
cmp
mov
jne
mov
xchg
fcomp
adc
sub
add
inc
jo
imul
sub
jp
iret
mov
inc
add
adc
sbb
in
pop
lock
adc
or
xchg
push
arpl
shlb
or
jbe
mov
lea
add
mov
shr
xchg
push
sbb
push
pop
xor
pop
cmp
mov
dec
jmp
jo
pop
jp
jnp
push
cmp
inc
mov
dec
dec
jns
push
add
roll
rcr
lods
inc
pop
je
arpl
sbb
cmp
push
sbb
sbb
mov
add
test
push
aaa
or
testb
jne
push
lds
dec
pop
je
push
adc
push
fnstcw
sbb
sub
jne
sahf
xorb
pop
or
xor
mulb
cmpsb
adc
ja
jmp
pop
lods
movswl
push
cmp
sbb
cltd
jns
push
or
leave
test
xadd
dec
cmp
ljmp
jo
add
out
pop
movsl
lods
pop
test
and
and
lea
sbb
daa
pop
fcoms
rcll
push
mov
sub
aam
jecxz
sahf
pop
cmp
dec
and
mov
push
repnz
pop
adc
lret
pop
aad
mov
les
aas
mov
xor
fs
or
jae
fcmovb
jae
sbb
inc
dec
adc
ljmp
pop
add
push
adc
sub
adc
pusha
aaa
sub
ret
test
push
iret
sub
lea
jo
or
inc
shrb
stc
sbb
jp
adc
cmp
mov
bound
pop
subb
pop
sub
add
pop
sub
add
and
and
xchg
push
jns
sub
imul
pop
insl
pop
xor
shrb
stc
push
adc
or
insb
das
push
jmp
pop
outsl
cmp
js
ret
pop
stos
repz
or
inc
add
mov
adcb
mov
lock
pop
movsb
les
cld
mov
jg
dec
leave
ljmp
pop
and
in
mov
jo
xchg
in
loop
shrb
dec
clc
pop
inc
jae
adc
test
add
and
int3
inc
out
lea
add
xchg
jne
lea
pop
stos
dec
cmpsb
lea
lds
mov
mov
pop
dec
push
outsl
push
add
out
mov
js
imul
lret
dec
gs
and
push
jmp
test
test
pop
or
fisttpl
add
fs
call
xchg
bound
sub
add
mov
add
pop
jno
push
pop
sbb
pop
cwtl
cmpsb
or
pop
test
xor
push
push
shlb
inc
push
inc
or
inc
pusha
mov
sbb
mov
add
push
dec
insl
jne
mov
out
or
mov
mov
and
mov
xchg
xor
mov
inc
js
addb
sbb
bound
popa
enter
sub
int3
cmp
sti
test
movb
adc
decl
pop
xor
out
pminsw
xor
rorl
je
dec
ds
subb
ds
fnsave
mov
or
jmp
jl
jae
and
push
imul
xchg
jne
cmpsl
adc
in
clc
test
sbb
arpl
pop
nop
inc
sub
outsl
je
mov
lret
int
adc
push
inc
jno
cmpsb
jno
movb
cmp
dec
inc
and
or
or
mov
inc
or
fdiv
sbb
and
adc
sbb
mov
add
pop
xor
enter
or
sub
clc
pop
daa
cwtl
cmp
enter
adc
popf
jmp
ret
push
fsubrl
dec
pop
dec
push
xchg
clc
add
arpl
out
mov
pushf
in
movsl
cli
xchg
xorb
js
mov
pop
adc
push
ret
and
out
adc
jns,pn
nop
mov
mov
lods
pop
xor
cmp
in
nop
dec
adc
mov
jo
dec
push
jecxz
push
jmp
test
pop
or
mov
dec
xchg
les
push
fnstcw
or
les
mov
andl
outsb
test
lock
mov
pushf
jge
mov
js
mov
arpl
movb
cmp
add
lret
or
dec
add
add
fadds
das
push
addw
inc
loopne
or
push
or
adc
push
nop
scas
dec
add
into
inc
mov
xor
add
in
push
orl
add
aas
jnp
jecxz
sbb
add
dec
ja
ficomps
movsb
dec
inc
ret
dec
adc
pop
pusha
lahf
dec
lret
cmp
adc
inc
add
dec
outsb
iret
inc
addr16
in
sub
hlt
imul
adc
push
xchg
add
push
cltd
xor
pop
ljmp
jmp
gs
jl
movsl
icebp
mov
mov
dec
mov
pusha
adc
test
or
jns
test
xchg
xchg
add
jb
mov
mov
ja
mov
mov
fisttpl
mov
sub
insb
hlt
pusha
mov
push
pusha
sub
sbb
loop
mov
cmp
popa
sarb
movsb
jns
inc
pop
pop
add
fiadds
lock
adc
orl
aaa
cmc
andl
push
push
lahf
divl
cmpsb
mov
outsb
mov
xor
mov
adc
add
adc
es
fadds
jno
sub
sub
outsl
mov
out
pop
jmp
cmp
sub
dec
or
or
push
movsb
mov
jge
cmp
push
or
sub
pop
je
xchg
je
mov
jbe
cmp
cmp
fstps
sbb
or
xchg
test
cmpsb
aas
and
lahf
or
sub
mov
sbb
mov
rcrb
dec
jbe
fadds
pop
and
js
push
cmp
dec
or
je
sbb
push
pop
jne
push
inc
sahf
in
in
nop
cltd
les
lea
repz
xchg
mov
les
add
xor
fs
push
xchg
mov
add
jns
clc
sub
pop
and
pop
push
push
sarl
or
xchg
inc
adc
mov
cld
push
pusha
and
xchg
rcrl
or
loope
cmc
rol
enter
lods
imul
dec
loop
mov
rcl
outsl
pop
xchg
repnz
and
imul
sub
sbbb
mov
inc
xor
pop
shlb
push
adc
jns
adc
sbb
or
call
cld
push
orl
push
inc
xchg
syscall
sbb
or
inc
dec
and
adc
adc
mov
add
shlb
xchg
or
cmp
xchg
push
pop
enter
cmp
bound
out
das
inc
jo
xchg
fistpl
leave
shll
xor
rolb
adc
aas
mov
xchg
rol
mov
push
mov
add
pop
rclb
pop
cmp
js
lcall
outsb
push
push
push
or
inc
add
call
mov
pusha
add
xchg
sbb
dec
sarl
les
sbb
jo
mov
cmp
xchg
add
push
fsubrl
inc
jo
inc
inc
push
add
push
sarb
pop
pop
pop
and
mov
push
pop
add
jle
jmp
insb
daa
stos
and
xor
pop
add
stos
das
sub
jg
mov
fldenv
or
xchg
int
or
xor
cmp
mov
adc
mov
add
pop
push
xchg
int3
int3
emms
and
or
insb
mov
rclb
nop
mov
lret
mov
lea
aaa
pop
aaa
pop
and
gs
adc
pop
test
xor
sbb
mov
insb
mov
dec
mov
mov
mov
xor
pop
adc
dec
loopne
mov
ja
jno
js
fists
push
mov
punpckldq
hlt
insb
xchg
or
jl
mov
push
cmp
pushfw
add
in
pop
insb
or
ret
cmp
add
pop
popa
and
into
add
or
ljmp
jne
or
cmp
jne
adc
inc
jne
sub
pop
lcall
and
or
xchg
jg
add
or
jae
int3
loopne
test
inc
mov
lea
andl
add
jmp
orl
ret
fldcw
mov
insb
je
inc
add
pop
sub
dec
or
enter
dec
and
xlat
sub
pop
sub
mov
add
push
and
add
ret
sub
push
ret
xchg
pop
mov
fcoml
sub
icebp
mov
push
xor
add
fs
adc
sub
call
pop
dec
mov
mov
shlb
adc
test
push
div
popf
dec
sbb
lods
push
push
or
xor
dec
jb
pop
xor
in
xchg
cmp
pusha
adc
mov
adc
out
xor
leave
insb
jmp
push
xchg
dec
mov
mov
pop
mov
lock
mov
or
ret
or
jmp
int3
jns
mov
or
or
dec
xchg
stos
rorl
mov
and
insb
xchg
dec
jg
fiaddl
xchg
sarb
ret
jne
rolb
xor
add
clc
adc
jbe
dec
push
push
dec
jne
fisttps
mov
loopne
cmp
adc
xchg
mov
push
pop
inc
movsb
mov
aaa
or
mov
les
mov
hlt
hlt
push
jl
mov
cmp
adc
dec
sub
push
sbbb
cmp
add
push
mov
cltd
addr16
dec
inc
mov
xor
leave
and
inc
sbb
lds
lsl
iret
movsl
inc
adc
aaa
sbb
lock
lret
or
cmp
inc
js
sub
lods
add
les
xchg
add
push
inc
mov
add
add
loop
fistpll
cmpsl
mov
adc
sbb
push
jne
xchg
sub
vmwrite
into
pop
and
sub
xchg
or
inc
push
jmp
add
and
and
mov
das
add
sbb
push
cmp
cld
sub
testl
fmuls
lods
add
loop
mov
subb
dec
rcrb
out
and
inc
sbb
addb
lock
jns
or
or
jge
addr16
inc
imul
jne
inc
test
leave
arpl
iret
dec
mov
or
add
movsl
leave
inc
add
add
flds
loope
or
pop
and
jne,pn
adc
inc
and
and
ret
and
incb
rclb
cmpl
insl
or
push
enter
dec
pop
dec
mov
pop
loopne
adc
adc
adc
xlat
mov
sub
ss
sbb
inc
aam
xor
lods
aad
pop
aam
fs
les
loopne
pop
loope
sbbb
fists
adc
arpl
cwtl
sub
and
jg
pusha
push
sti
dec
adc
test
jne
arpl
in
fsub
xlat
sbb
pop
xlat
adc
mov
mov
mov
js
mov
insb
movb
cmp
pop
lret
cmpl
test
insb
addb
dec
adc
cltd
fcomps
dec
or
and
jb
and
sub
push
mov
insl
xorb
sti
dec
sti
fdivl
jge
jbe
push
roll
sbb
les
cmp
pop
add
andb
int3
fs
mov
xchg
xchg
mov
nop
cmpsl
fdivl
sbb
and
in
loop
sbb
inc
sbb
sbb
adc
cmp
leave
shlb
sub
hlt
push
add
lock
fistpll
leave
jae
loop
lahf
mov
mov
pop
stos
mov
add
pop
mov
pusha
loop
and
pop
pop
je
imul
add
sarb
cmp
pop
jnp
or
rorl
pop
sarb
or
adc
xor
pop
add
adc
xor
pop
sub
inc
inc
or
dec
fidivrs
hlt
add
dec
and
cmp
ljmp
and
adc
stos
fsub
fsub
sbbb
shlb
sub
push
jae
xchg
inc
fsub
lret
mov
xor
inc
mov
cmp
inc
cmpsl
popa
data16
arpl
lock
mov
sbb
andb
movsl
and
nop
shrb
xor
or
jb
je
xor
out
insb
push
jb
adc
xorl
loop
mov
add
ret
flds
pop
sub
sbb
dec
or
into
and
xchg
fstp
dec
pop
nop
sbb
pop
in
inc
dec
or
adc
rcl
rclb
loope
or
sub
lock
or
mov
and
mov
pop
cmpsl
xorb
lods
pop
push
cwtl
cmpl
jle
ja
and
loop
movb
popa
loopne
push
mov
rcrb
outsl
pop
push
pop
les
outsl
or
xchg
lods
loop
pop
and
or
sub
pop
mov
add
imul
lock
dec
out
testb
je
scas
jne
jmp
xchg
adc
cmc
xchg
adc
push
test
pop
popl
and
jle
add
jns
and
xor
or
cmp
mov
jne
out
stc
adc
push
or
sub
adc
fcomp
popf
adc
cwtl
adc
mov
adc
add
or
loopne
ret
leave
and
adc
orl
cwtl
xchg
xchg
mov
add
cmp
fwait
adc
add
or
add
jle
das
clc
cmp
test
in
push
lock
push
mov
xchg
or
mov
iret
cmp
adc
sub
or
pop
aad
ds
add
or
scas
cmp
and
sarb
cmp
es
dec
iret
sbb
pop
pop
mov
mov
or
iret
push
sub
lds
add
push
or
cmpsb
and
and
rcr
push
data16
shr
int3
pop
cmp
push
ljmp
sub
mov
and
pop
call
pop
je
mov
movb
in
pusha
add
cmpsb
mov
lods
push
inc
add
push
test
push
ret
sti
adc
mov
push
imul
pusha
notb
js
or
call
mov
adc
mov
je
mov
out
lea
mov
sarl
cmp
nop
out
sti
shufps
inc
mov
push
and
mov
adc
cmp
clc
pop
daa
adc
out
and
test
xor
adc
add
aad
enter
push
inc
push
mov
pop
repz
push
ficoms
shll
cmp
add
cli
mov
outsl
movlhps
dec
inc
shll
or
mov
and
and
cmp
sbb
adc
stos
sub
push
cmp
shlb
xlat
and
jne
or
sahf
sub
frstor
sbb
xchg
lock
jecxz
xchg
jmp
mov
stc
sbb
int
add
ficoms
test
push
sbb
daa
pop
add
je
mov
mov
mov
dec
sbb
rclb
ret
fs
or
mov
mov
push
adc
pop
or
adc
sub
sarb
jmp
popa
lods
xchg
add
loopne
push
enter
mov
lods
sbb
dec
jle
dec
xor
sti
cmpb
bound
fmul
inc
xor
shl
fsubrl
push
pop
in
out
pop
js
xor
fcomp
inc
jg
or
mov
adc
addr16
scas
xchg
je
test
call
push
add
pusha
pop
push
adc
jo
movsb
repz
lods
loope
out
and
pop
aas
dec
loope
test
jne
enter
into
fcmovnb
gs
fcomps
mov
out
outsl
sub
adc
movsb
push
xor
mov
imul
pop
sub
daa
add
inc
daa
push
xor
je
sub
xor
jp
test
cmpsl
and
rcll
fwait
call
fcompp
sbb
out
sub
sub
mov
fs
dec
js
adc
out
cmp
lds
nop
ror
inc
xor
inc
ret
shr
dec
add
inc
add
shrb
clc
fbstp
or
cmp
dec
xor
adc
cmpb
daa
mov
test
inc
decl
lock
mov
pop
xor
pop
test
loope
ret
cmp
xorb
or
inc
pusha
pop
cld
add
push
sbbb
popa
inc
mov
sbb
push
add
xchg
add
fbld
sub
sbb
out
fldcw
outsb
cwtl
test
xor
adc
out
out
fwait
mov
add
fwait
xchg
xchg
pop
add
pop
push
lods
pop
scas
jb
xchg
sbb
adc
jo
lds
in
lret
adc
cmp
stos
pusha
rorl
pop
or
les
sub
xor
dec
iret
in
jmp
js
or
pushl
daa
mov
push
js
push
in
lea
lret
cmpsb
aam
inc
or
stos
mov
and
outsl
or
sbb
sbb
jno
mov
orl
loopne
mov
push
sub
cmp
inc
sub
mov
fdivrs
add
sbb
jnp
ret
aam
mov
in
xchg
pusha
pop
sti
loopne
dec
xchg
punpcklbw
iret
cmpl
fdivrs
pop
push
push
add
adc
lahf
mov
or
xchg
or
or
or
adc
ficompl
sub
cmpb
jne
cld
xchg
insb
mov
adc
mov
clc
call
fmull
fildl
fsubp
sahf
sub
daa
xor
xchg
ret
lea
ffree
and
fabs
mov
ffree
adc
or
outsb
xor
add
outsb
or
out
dec
faddl
cli
sub
inc
add
push
jo
push
rcll
fdivr
push
loope
xchg
pop
push
outsb
push
mov
sbbb
xor
xchg
inc
pop
out
repnz
clc
rcl
jb
xchg
sbb
cli
cld
clc
in
nop
adc
add
inc
lock
insb
mov
add
jnp
dec
or
aad
and
push
daa
or
xchg
mov
jl
mov
mov
ja
cli
imul
xchg
inc
xchg
push
jne
add
lods
mov
bound
out
fs
negb
call
pop
js
out
cs
pop
sbb
iret
jbe
neg
xor
pop
xlat
int3
loope
jmp
sub
xchg
inc
es
and
ja
fidivl
orb
add
leave
mov
std
dec
mov
subl
or
pusha
inc
enter
mov
mov
lret
adc
push
into
and
xchg
push
aaa
pop
inc
or
add
mov
es
xchg
test
or
dec
daa
outsb
adc
mov
inc
dec
xorl
cld
pusha
dec
fcomi
inc
inc
dec
inc
mov
int
adc
xchg
and
jne
jbe
hlt
loopne
sub
jge
push
testb
dec
jbe
lea
loopne
fsubrl
cmp
fistps
mov
inc
mov
inc
loopne
in
sarb
addl
adcl
add
sub
js
xchg
bound
mov
call
orps
enter
ljmp
pop
sbb
push
ret
mov
jne
inc
movsb
mov
inc
sbb
mov
push
push
pop
jle
pop
add
je
mov
lock
ret
lock
ret
loopne
adc
adcb
std
and
pop
addb
fidivrs
repnz
testl
movsb
sbb
jb
sbb
pusha
xor
xor
cs
in
int3
xchg
sahf
rcrb
orl
jns
cmp
mov
in
or
jecxz
and
add
inc
jl
fsubs
xor
cmp
cmp
aaa
xchg
push
inc
mov
test
inc
mov
jecxz
fsubrl
sbb
cmc
rcr
or
aas
ret
pop
add
jle
int3
push
pop
movsl
add
xor
inc
xchg
clc
lea
push
push
jle
cmp
out
mov
or
jnp
lret
sbb
dec
lock
xor
test
xor
cmp
jb
lea
dec
mov
insb
rol
or
adc
or
or
sbb
icebp
xor
xor
addl
fstpl
adc
xor
icebp
inc
cld
hlt
cld
cmpsb
in
push
and
pop
push
imul
fwait
lods
movsl
jp
call
fisubl
scas
sbb
and
cmc
iret
imull
je
xchg
rol
mov
or
out
arpl
push
lods
cld
add
jge
xchg
xor
rcll
je
sbb
adc
adc
rolb
outsb
int3
and
pop
and
mov
daa
add
js
sbb
adc
pop
loope
push
sbb
test
out
pop
aaa
movsl
push
push
sti
or
adc
js
add
loopne
lock
lahf
adc
out
mov
cmpb
leave
rcl
daa
add
outsl
xor
mov
sub
sub
push
or
xchg
cmovbe
jns
cltd
inc
shrl
jmp
insb
pop
xchg
mov
out
xchg
cltd
mov
mov
mov
out
xor
shrb
inc
ja
add
dec
das
and
xor
imul
adc
or
adc
pop
dec
pop
gs
lock
je
hlt
shlb
stc
scas
sbb
insb
out
or
adc
frstor
push
push
jmp
sub
sub
cs
daa
or
or
and
rcll
fldl
dec
sbb
push
hlt
ret
ret
sub
add
adc
pushf
data16
sub
jge
xchg
cmpsl
repnz
rcll
or
sarb
sub
push
add
push
or
jl
push
imul
adcb
add
jno
push
sub
push
jg
mov
xor
cmp
mov
pop
adcl
in
fldcw
pop
jae
push
in
imul
mov
popa
or
shlb
fsub
std
jl
inc
add
or
sbb
sub
pop
les
rcrl
lret
xor
call
or
aad
adcb
dec
jbe
add
add
sbb
sub
cld
and
iret
fdivrs
jo
add
or
push
pusha
insl
test
inc
add
mov
pop
jns
insb
out
loopne
out
inc
adcl
addb
pop
mov
cmp
adcl
icebp
scas
movsl
push
fisttps
ds
fwait
inc
pushf
les
add
push
adc
jg
pop
ja
push
jns,pn
out
std
stos
into
sahf
int
test
or
xchg
push
out
adc
mov
pop
incb
sbb
pop
decb
xor
add
pusha
push
in
and
jae
sbb
or
cmp
add
insl
pop
push
mov
push
insb
mov
jbe
cmp
inc
xor
fcomp
jbe
pop
pop
out
sub
add
in
cmpsl
dec
push
out
ror
xlat
dec
subl
cmp
push
lea
adc
add
pop
les
outsb
jns
in
sub
and
jge
dec
push
add
jle
push
jmp
orb
test
popf
sbb
popa
and
cmp
jne
lea
cltd
pop
mov
addb
sbb
jne
push
repz
imulb
cwtl
inc
xor
and
push
out
rclb
lea
jo
in
and
adc
repz
lea
ja
sarb
je
dec
dec
add
jmp
push
inc
jo
mov
cwtl
dec
loop
inc
mov
cmp
movsb
loopne
loop
aas
mov
cmpsb
call
add
and
mov
xchg
movsb
shll
push
das
adc
mov
aam
xchg
xlat
pop
pop
setbe
mov
insb
data16
pop
lcall
jmp
and
cld
fcoms
int
stos
dec
jecxz
out
jne
les
sbb
dec
push
add
or
rorb
icebp
cmp
test
sbb
stos
cmp
mov
xchg
cmp
pop
push
sbb
xchg
add
mov
in
mov
inc
pop
xor
imul
dec
mov
cmp
test
nop
and
xchg
add
xchg
mov
push
inc
pop
jb
mov
nop
dec
cs
jle
mov
pop
mov
das
dec
jne
or
add
sub
or
xor
and
xchg
pop
mov
push
push
push
add
cld
pop
add
add
jnp
stc
test
inc
lcall
lods
xorb
pop
or
inc
inc
test
lds
mov
cs
push
mov
mov
mov
inc
dec
mov
in
enter
in
fsubl
pop
testl
das
adc
mov
inc
js
arpl
add
scas
nop
or
add
stc
add
daa
or
xchg
push
push
or
pop
popf
pop
push
inc
add
mov
jmp
adc
adc
adc
insb
adc
arpl
dec
ds
sbb
sbb
sbb
add
xor
in
or
les
xor
xchg
inc
push
xor
in
daa
icebp
cmpw
or
dec
jle
xchg
adcl
mov
inc
add
sahf
lods
sbb
lock
in
cmp
scas
and
out
mov
or
mov
xchg
aaa
xchg
shl
xor
and
xorl
out
pushf
inc
fidivl
adc
xchg
test
add
jl
mov
sbb
xor
adc
rcl
rorb
pop
xchg
in
xlat
adc
pop
or
aaa
mov
nop
lea
jmp
xchg
out
outsb
add
add
cmp
xabort
gs
mov
jp
jp
out
cmp
outsl
dec
call
mov
jo
insb
dec
orb
fwait
jne
xor
pop
pop
pop
and
fdivl
js
add
mov
add
inc
push
nop
call
in
sub
scas
call
push
lret
sbb
test
mov
enter
sub
jnp
sbbb
in
cmpl
xchg
mov
mov
popa
cmp
mov
pop
mov
clc
mov
and
in
out
rcl
xor
and
adc
ror
add
cltd
mov
mov
rclb
insb
add
lret
or
pop
mov
push
or
adc
pop
push
mov
adcb
ss
arpl
jmp
push
loopne
in
push
sbb
mov
push
ja
aaa
inc
test
push
daa
sbb
addr16
sbb
mov
ficoms
sbb
dec
cmp
mov
sbb
in
sbb
jne
and
insl
or
sbb
pusha
add
add
gs
pop
ret
aad
jb
mov
outsl
or
test
push
mov
aam
xchg
lcall
iret
rorl
and
es
jle
sbb
push
adc
or
xchg
xchg
dec
or
dec
sbb
sub
je
pop
pop
sbb
inc
xor
add
inc
sbb
dec
or
in
pop
add
incl
add
cld
inc
add
push
inc
inc
pop
sysret
sbbb
cmp
add
mov
inc
jo
daa
adc
test
dec
pop
xor
test
mov
push
insb
inc
push
movb
adc
push
inc
stc
rcrb
push
push
fisubs
push
inc
jo
sbb
add
lret
repnz
nop
test
mov
dec
lcall
popl
add
adc
add
idivl
lea
add
jo
cmp
push
addl
lock
test
clc
pop
push
shll
mov
cs
or
fwait
jne
cld
mov
sbb
mov
dec
mov
jbe
xor
inc
adc
mov
test
mov
fstps
mov
jnp
aas
mov
adc
rclb
push
sbb
fsub
pop
push
fdivl
test
fcoml
inc
pop
aam
out
cli
push
dec
adc
test
js
lods
lret
lret
cmp
ja
xor
xchg
dec
xor
sub
xchg
jne
pop
pushl
add
sti
mov
and
shlb
add
push
mov
rclb
subl
jge
mov
fcoms
sbb
push
adcl
loopne
xor
and
inc
jmp
push
inc
or
jl
pop
adc
clc
pop
xor
pusha
imul
jle
dec
cld
test
mov
mov
pop
push
sub
div
pop
shl
push
hlt
or
dec
dec
push
ja
add
or
add
sub
and
add
pusha
dec
pusha
mov
fwait
test
lahf
inc
loope
test
adc
xchg
stc
hlt
or
cld
test
pop
test
xor
xchg
ds
push
inc
sbb
mov
lock
ficompl
inc
and
sahf
fs
inc
leave
in
test
mov
lods
mov
clc
pusha
loop
call
or
inc
xlat
xlat
cld
icebp
mov
cmp
movsb
mov
cmpl
xor
and
dec
or
or
adc
rclb
inc
ret
and
cmpsl
adc
imul
push
inc
cli
cwtl
jo
or
lea
dec
adc
sub
les
insb
and
leave
mov
sub
inc
jb
pop
xor
pop
leave
or
sub
jb
jecxz
ror
lods
fbld
and
ljmp
aas
cwtl
push
adc
jmp
lds
inc
and
cmp
adc
adc
enter
pop
cmp
inc
and
inc
cmpsl
dec
loop
xor
and
add
add
insl
push
adc
fcompl
xor
fiadds
insb
por
dec
lods
ja
lea
xlat
enter
push
js
sti
mov
es
jg
mov
rolb
and
lock
mov
std
sti
mov
jns
test
push
add
insl
cmp
push
add
gs
fsubl
dec
sahf
xchg
fisttpl
jne
pop
and
sub
scas
test
sbb
push
ds
int
jl
xor
and
jmp
in
add
call
jo
dec
je
add
jmp
bnd
in
adc
xor
cmp
pop
test
out
sbb
mov
dec
shlb
and
stos
es
subb
call
dec
dec
pop
dec
mov
sub
push
adc
sbb
push
sbb
orb
int
jmp
sbb
das
inc
push
jae
rorb
daa
mov
aas
pop
mov
and
cmp
add
imul
sub
inc
pop
iret
jg
test
ljmp
inc
orb
dec
add
push
test
adc
adc
xor
sbb
scas
adc
test
jmp
mov
adc
leave
leave
mov
sub
sbb
inc
xor
shll
push
adc
push
xor
insb
xor
dec
mov
cmpb
or
ds
jmp
sbb
cmc
cmpsb
inc
sbb
pop
add
std
mov
aad
jb
ret
ret
movl
daa
test
imul
adc
fcom
flds
test
or
je
pop
mov
add
sub
mov
adc
psrad
jl
xorl
test
xor
dec
adc
mov
and
add
sahf
std
insl
inc
addl
inc
and
jmp
popf
out
test
or
mov
push
inc
add
adcb
sub
or
repz
ja
adc
cmp
jp
aas
cmp
cmpsl
loop
cmpl
sbb
sbb
popa
je
js
push
repz
xchg
out
ja
add
xchg
fadd
dec
sbb
add
lods
push
cld
cmp
rcrb
dec
mov
sub
js
mov
ja
dec
jae
mov
inc
push
sbb
inc
xchg
pop
enter
mov
dec
xor
mov
mov
xchg
call
movsb
cmpsb
and
sbb
mov
mov
repnz
inc
pop
push
incl
cmp
push
loopne
outsl
fwait
cld
rolb
les
mov
cmc
jo
cmp
repz
sbb
movl
mov
add
out
or
mov
inc
sbb
or
test
ss
mov
mov
pusha
and
xor
xchg
and
into
xchg
cwtl
or
pushl
cmp
mov
or
inc
push
inc
loopne
dec
jns
xlat
inc
or
ja
lds
cmpb
test
mov
sbb
or
cltd
cli
roll
inc
cmp
cli
jp
adc
or
addr16
fs
aam
xor
faddl
sub
dec
pop
mov
in
les
push
jne
enter
jne
adc
cmpsl
and
dec
or
stc
add
xor
daa
movsb
inc
inc
push
mov
das
xchg
sub
xchg
cwtl
sbb
inc
jl
pop
xor
pop
jno
push
adc
adc
jo
out
mov
fdivrs
xor
sbbb
adc
xchg
bound
cmp
add
addr16
insb
jnp
pop
mov
xor
das
xchg
inc
out
leave
ret
sub
inc
or
pop
pop
and
arpl
rcr
sub
insb
lahf
imul
lahf
fnstsw
or
or
push
call
xor
ja
cmp
fs
mov
dec
or
or
pop
imul
mov
adc
xchg
pop
push
jp
inc
lods
jge
xchg
cmpsb
push
jge
xor
and
pushl
vsqrtsd
mov
dec
mov
enter
dec
dec
inc
sbb
pop
hlt
mov
and
mov
and
mov
add
or
mov
jmp
sub
jmp
pop
jne
dec
and
or
sbb
adcl
mov
xor
add
xchg
dec
sti
xor
jns
in
jmp
sub
jmp
arpl
jg
xchg
dec
fiadds
in
hlt
cld
ljmp
and
js
add
movsb
sbb
and
insl
jb
adc
fs
cmc
jno
pop
inc
sbb
xchg
jno
and
mov
mov
push
xorl
dec
sbb
mov
jl
xchg
mov
add
dec
xor
test
cmp
push
imul
push
and
jae
dec
clc
scas
mov
pop
hlt
dec
cmp
ja
jns
push
mov
das
sbb
mov
rorb
into
in
push
push
imul
loopne
inc
addl
mov
dec
movsl
push
lret
sub
cmpsl
loopne
subb
sub
ret
adc
sub
out
inc
lods
adc
cmp
lds
jne
xchg
add
xor
cmp
lahf
andl
mov
xchg
sbb
push
cmp
xor
andl
shrb
push
movsb
outsb
mov
add
jmp
add
pusha
mov
jle
jmp
sub
jmp
sub
mov
loopne
push
pop
test
add
pop
sbb
lock
jmp
imul
mov
icebp
orl
pop
inc
push
insb
push
sbb
jbe
or
push
add
dec
or
aaa
or
je
sti
cmp
or
xchg
out
mov
xor
ss
push
dec
push
ja
adc
and
fstpt
daa
vmread
and
stos
mov
pushf
rcrb
mov
add
pop
add
and
rol
filds
cmp
stos
jbe
fstp
add
and
mov
mov
ds
lret
xchg
or
mov
add
rcll
push
xchg
arpl
out
test
fs
sub
outsl
call
gs
cmp
enter
test
pop
addb
enter
dec
sub
or
adc
js
lock
sbb
ss
inc
cltd
sub
inc
add
jnp
sbb
cmp
jne
std
ret
pop
cltd
jno
gs
shlb
dec
movsl
je
cmp
or
inc
test
jb
mov
and
inc
ljmp
in
test
mov
or
negb
mov
fcomps
cmp
xchg
je
repz
and
add
cmp
jge
mov
sbb
out
add
or
rorl
mov
sub
pop
mov
incl
xor
jb
mov
pop
mov
mov
pop
mov
cmp
jne
andb
adc
push
or
cli
pop
lods
inc
mov
cmp
sub
inc
imul
mov
and
jne
dec
add
popa
mov
test
lods
add
data16
xchg
lock
in
cmp
sbb
jb
mov
aas
sub
adc
or
bound
add
mov
nop
dec
push
and
nop
mulb
cld
loopne
pop
adc
inc
push
sbb
add
push
xor
int3
jb
adc
das
pop
dec
and
cmovbe
sub
movl
push
loopne
push
inc
insl
gs
nop
inc
test
mov
jle
jmp
and
aaa
dec
jl
or
pop
or
orb
out
adc
cmpsl
das
incw
sbb
add
std
jne
and
lock
or
aaa
in
js
pop
icebp
and
xor
mov
inc
ss
sbb
enter
xchg
pop
imul
inc
andb
mov
dec
sub
push
or
xchg
shll
mov
mov
dec
adc
in
movsb
in
pop
clc
and
add
aaa
cmpsl
fisubs
push
sub
mov
xchg
sbb
adc
inc
fs
xor
shll
and
call
mov
lds
dec
pop
add
dec
outsl
imul
adc
inc
mov
push
adc
jo
adc
std
inc
rolb
fidivrs
sbb
xor
mov
xor
cmp
xchg
addr16
fnstenv
push
int3
inc
jp
popa
and
push
insb
cld
sbb
bound
std
mov
cmc
sbb
xchg
daa
imul
cwtl
sbb
jmp
stos
lods
daa
imul
add
shrb
pop
pop
sbb
sub
shlb
mov
push
pop
mov
test
sub
push
inc
pop
mov
xchg
push
rolb
push
dec
sti
outsl
fists
fs
mov
shlb
sbb
jne
test
arpl
push
sub
ss
dec
fxch
fldln2
adc
mov
pop
inc
decb
enter
pop
lods
out
inc
jp
sub
icebp
jmp
mov
mov
cmp
lods
roll
jbe
repnz
sub
xlat
or
movsl
fcomi
or
pusha
inc
aas
imul
pop
jmp
lock
jle
push
ss
movsl
inc
jmp
fs
and
mov
lods
test
je
add
sbb
ret
and
loopne
cmc
push
and
out
subb
adc
cmp
add
push
addb
cmp
sbb
loopne
pop
sbb
xchg
adc
mov
inc
lret
mull
or
pop
push
xchg
xchg
xlat
cmp
xor
pop
mov
shlb
sbb
outsl
enter
and
cltd
mov
xor
dec
dec
push
mov
add
and
lret
pop
add
xchg
push
mov
mov
pusha
xchg
orl
pushf
and
inc
or
pop
adc
shlb
adc
sub
inc
ds
scas
addl
mov
add
or
add
inc
mov
inc
mov
arpl
je
orl
test
inc
fsts
ds
add
fsubs
pop
dec
fisttpll
dec
shll
dec
sbb
xor
or
dec
mov
les
sub
dec
inc
and
mov
pop
sbb
push
push
popa
dec
cmp
inc
xor
inc
xor
push
inc
adcb
idivb
or
mov
jnp
les
mov
decl
addr16
xchg
adc
sub
and
or
les
daa
sti
nop
call
sub
adcb
adc
dec
ds
mov
adc
nop
das
inc
nop
adc
test
dec
incl
js
xor
lea
imul
dec
sub
cmpsl
or
es
ret
or
ja
mov
inc
je
and
mov
test
push
es
data16
mov
or
mov
jmp
mov
stos
xchg
das
mov
adc
sahf
sbb
js
sbbl
pop
jle
in
je
sbb
cmp
add
lods
mov
and
adc
xchg
push
xchg
pusha
sub
aas
test
jo
roll
or
adc
ljmp
push
and
mov
push
and
mov
xlat
adc
cmpsl
mov
in
or
mov
inc
add
dec
lret
rclb
adc
repnz
mov
mov
iret
insl
jl
inc
sbb
or
or
daa
sbb
add
push
repnz
push
popl
jns
lods
sti
adc
lea
and
jo
test
add
xchg
das
mov
mov
outsl
rcr
adc
push
clc
subb
mov
mov
mov
jne
xchg
sbb
pop
leave
rcl
or
test
enter
shlb
pop
imul
jp
repz
adc
loop
or
stos
test
sub
loope
stc
mov
mov
and
push
std
or
mov
scas
pop
dec
jbe
jle
ja
cld
mov
clc
pop
sbb
int3
dec
lahf
add
jmp
mov
mov
xor
pop
xor
dec
xchg
nop
sub
fs
loope
push
and
cmp
inc
loopne
pop
xchg
std
sub
xchg
pop
pop
addr16
sbb
push
push
ljmp
adc
stos
inc
adcb
repz
rcrb
arpl
sub
test
and
in
mov
push
sti
sbb
inc
dec
inc
sub
or
jl
adc
mov
popa
adc
adcl
sub
or
jne
and
mov
insb
mov
test
fcmovu
push
or
mov
xchg
xor
lock
in
pop
cmp
and
into
es
cmp
add
sbb
push
testb
movsl
leave
xchg
push
sbb
stos
sub
aaa
fnstenv
inc
and
sbb
lds
shrl
addb
push
cmp
inc
pop
adc
mov
push
push
pushf
xor
loope
push
pop
inc
sub
mov
shll
inc
sub
cmpsl
test
test
cmc
add
push
add
mov
sbb
in
add
call
out
mov
bsr
cld
loopne
pop
push
movsl
or
xor
lret
vmovq
mov
fcompl
and
inc
pop
dec
xchg
xorl
mov
and
inc
test
push
mov
dec
and
mov
nop
push
pop
lods
fidivrl
aam
push
lahf
in
pop
sub
inc
xor
cmp
loop
xchg
test
cmp
or
pop
add
sbb
aaa
inc
jne
or
or
jl
dec
sbb
out
push
pop
lods
addr16
xor
mov
or
add
add
mov
fcmovbe
xchg
add
mov
test
xlat
jge
and
lahf
jge
mov
sub
adc
dec
movb
push
popa
sub
les
lock
ret
and
adcl
add
faddl
movsl
pushf
jmp
stos
gs
mov
pop
mov
xor
push
loope
pop
jmp
cwtl
imul
dec
mov
scas
or
push
mov
rclb
cwtl
inc
ret
add
xchg
mov
shrb
mov
push
mov
pushf
cwtl
xor
mov
rcr
lcall
xchg
movsb
sbb
xchg
adc
mov
daa
mov
addb
das
cmp
push
cmc
or
hlt
mov
inc
and
sub
sub
ret
jecxz
sub
or
push
clc
aas
lret
dec
push
hlt
addl
xchg
arpl
xchg
dec
cmp
adc
enter
stos
int3
lret
mov
mov
mov
mov
data16
adc
fdivrp
or
xchg
inc
aaa
fildl
lods
pop
pop
insb
pop
in
pop
aaa
movb
mov
push
push
add
loopne
mov
push
mov
rcrb
sub
cmp
cmp
pop
add
xchg
orb
sbb
ss
pop
cmp
mov
jne
xor
sub
pop
daa
rcrl
int3
add
xorl
fdivr
mov
hlt
rorb
pop
fs
fidivs
adc
movsb
xchg
adc
and
xchg
xor
jns
sbbb
ret
repz
mov
out
cmp
lahf
sbb
lods
cltd
push
call
shrb
or
dec
mov
and
cmp
pop
mov
into
es
or
dec
xchg
pop
mov
std
das
lods
add
into
movb
fcompl
add
adc
test
or
das
gs
sbb
in
test
movsb
inc
addb
rcll
add
aas
loope
sahf
outsl
and
mull
mull
cmp
mov
aam
in
stos
adc
sub
sbb
sub
loope
adc
pop
ss
call
jo
xchg
mov
pushf
enter
lods
jge
arpl
xor
push
mov
adcb
inc
inc
xchg
pop
inc
or
int3
add
xor
mov
pop
jg
xchg
mov
pop
mov
cmpsl
jge
dec
or
push
cmp
push
movsb
push
mov
cmp
add
cmp
les
mov
fstps
jbe
mov
add
mov
je
or
mov
ljmp
popa
ljmp
mov
push
adc
mov
ret
jmp
xor
fs
or
xchg
hlt
arpl
mov
bound
mov
push
gs
jg
push
imul
add
adc
and
shufps
xchg
inc
cmc
jne
dec
rolb
add
inc
movb
cmpb
cmp
clc
dec
cmpsb
jnp
lods
cmp
xchg
and
mov
add
pop
lcall
and
push
or
out
insb
adc
push
sub
jo
mov
lahf
push
adc
inc
sbb
mov
dec
cwtl
pop
shl
pop
js
das
les
add
adc
leave
std
jmp
adc
cs
xchg
addr16
pop
mov
test
addl
or
or
in
cmp
push
xchg
lock
es
xadd
imul
ret
cmp
aam
mov
jg
fidivrl
xchg
add
test
dec
rcl
pushf
andb
inc
and
invd
daa
test
cltd
outsl
mov
and
add
sbb
loop
inc
pop
jecxz
cmpb
jne
pop
add
inc
aam
movsl
push
mov
fdivrs
leave
fsubl
jle
loope
loopne
addl
js
dec
add
nop
mov
imul
add
inc
xchg
cs
mov
add
mov
sub
xchg
in
push
lods
jnp
inc
mov
add
mov
fwait
nop
add
push
popa
addl
pop
sbb
cmpl
and
fcomp
adcl
or
imul
cmp
loop
and
pop
push
jno
inc
sub
adc
sub
cmpsb
mov
cmp
cwtl
mov
inc
mov
adc
btr
jne
push
mov
jns
push
mov
and
push
mov
rcll
add
add
add
jmp
xchg
push
cltd
cmp
add
syscall
inc
imul
and
fadds
mov
cmp
cmp
jmp
mov
mov
mov
test
pop
inc
sbb
mov
or
xor
hlt
pop
adc
add
pop
shlb
shrb
pop
xor
xchg
lock
pop
cltd
sbb
and
sub
or
mov
adc
mov
mov
lahf
mov
hlt
cmpsb
je
jecxz
sbb
inc
adc
add
xchg
push
lcall
inc
adc
leave
test
jno
sub
inc
adc
and
mov
push
jg
cli
jp
xchg
jae
pop
aaa
or
mov
sub
lock
push
loope
fcomip
add
adc
push
push
push
add
enter
into
mulb
and
push
in
popf
dec
je
push
adc
int
inc
lock
out
xor
jmp
arpl
ljmp
add
push
inc
rcrb
fs
xchg
fdivs
mov
cwtl
cmovne
movsl
test
mov
push
fxch
push
or
xor
xor
push
sbb
and
icebp
movsb
mov
icebp
sub
or
data16
stos
adc
dec
cmp
ret
push
sub
add
lea
xor
sub
mov
test
in
dec
es
and
sub
in
push
add
pop
xchg
lret
mov
add
shlb
das
dec
or
arpl
test
shlb
xbegin
jo
inc
xorb
lret
jns
adcb
in
pop
jmp
jg
jno
cmp
mov
dec
add
mov
mov
or
lock
inc
js
nop
cmpsl
in
clc
or
jo
sbb
ja
les
mov
pop
cmp
cmp
orl
dec
ret
shll
lahf
mov
or
mov
push
push
sbb
pushf
test
ret
cmp
push
adc
cmpsb
shll
popa
pop
push
add
inc
inc
rorl
jbe
xorl
roll
mov
mov
xchg
and
adc
mov
jns
scas
inc
push
mov
or
insb
in
add
rolb
cld
lds
call
dec
sub
test
add
inc
cld
pop
mov
add
sbb
sbbb
sbb
hlt
cmp
inc
aad
inc
xor
cld
cld
mov
cmc
mov
push
jno
movsl
sub
jo
les
in
rcr
mov
pinsrw
push
inc
sub
add
je
mov
mov
les
dec
dec
cmpsb
testb
les
lea
push
lock
dec
popa
push
or
out
xor
jmp
push
sub
je
and
pushf
sahf
out
push
xlat
lods
cmp
push
sub
or
in
lock
cmp
in
repz
push
movsb
push
and
jbe
notl
adc
push
aad
adc
and
and
lods
and
push
and
add
push
movl
jne
aaa
cld
test
add
add
aaa
sub
cmovo
xor
ret
jns
mov
cmp
das
mov
add
aas
inc
dec
push
js
lods
cmpl
mov
out
ljmp
add
das
stos
fwait
add
sub
sub
add
or
nop
lret
pop
ss
inc
in
aas
test
dec
inc
jg
or
mov
outsl
inc
clc
or
jb
jl
subl
cmp
dec
repnz
cmp
xchg
mov
cmp
xchg
jne
xchg
aaa
ss
leave
fimuls
jge
cld
adc
xor
or
enter
mov
inc
push
lock
jb
adc
pop
popa
loope
xchg
test
lret
dec
aaa
cmp
or
js
nop
imul
inc
and
cmp
sub
add
jmp
mov
mov
push
add
and
dec
arpl
or
daa
addr16
dec
push
roll
or
pusha
sub
pop
pop
push
iret
movl
push
or
and
xchg
adc
frstor
or
mov
xor
inc
sub
cmp
inc
push
add
cmp
or
jge
cmpb
test
inc
or
sub
push
push
test
inc
xor
rclb
call
mov
inc
add
xchg
insb
lock
stos
sbb
popa
int
adc
add
or
push
xchg
call
inc
add
inc
add
xchg
pusha
adc
std
sbb
cmp
add
je
push
into
lods
call
lock
mov
push
sbb
shlb
int
pop
fistps
pusha
cmp
rorb
jecxz
inc
sub
inc
adc
push
cmp
adc
fadds
sarb
das
add
pop
or
adc
or
lret
subb
test
ja
push
add
cvtdq2ps
mov
fidivl
xor
xor
add
adc
std
cmp
inc
data16
dec
sbb
sbb
ret
inc
or
dec
lret
adc
mov
ret
mulb
jl
sub
pusha
push
push
jnp
lock
loopne
inc
jmp
cmpw
pop
pusha
and
jae
xchg
inc
outsl
iret
daa
push
pop
cmpsb
mov
nop
or
jl
or
cwtl
or
aaa
int3
push
daa
jecxz
push
cmp
ljmp
mov
movb
push
seta
add
orb
clc
inc
arpl
adc
fwait
dec
lea
sarl
jmp
ret
mov
inc
fstpl
inc
sub
testl
dec
cmp
add
sub
push
push
je
xchg
cmp
mov
xchg
movsl
mov
daa
inc
push
adc
push
imul
jge
cwtl
jecxz
xchg
xchg
in
inc
lahf
push
scas
sub
or
lahf
pop
xchg
sub
fdivrs
mov
je
push
mov
ret
sub
mov
xchg
and
loopne
popa
xor
push
mov
andl
stc
sub
or
push
add
jb
push
sarb
mov
hlt
leave
xorl
xchg
movsb
jb
clc
daa
push
cmp
rcll
or
push
rol
cmp
sbb
push
loop
imul
lcall
and
jo
in
and
cmp
jne
jns
imul
out
pop
or
shll
in
sub
test
cmp
movsb
test
insb
pop
cmp
pop
push
mov
jle
push
push
push
iret
pop
and
andb
and
inc
push
enter
enter
xchg
fwait
and
dec
repz
dec
ret
inc
pop
jae
cmp
addb
or
gs
arpl
shlb
xchg
lods
push
mov
xor
xchg
out
les
popf
ret
and
addr16
inc
test
popl
add
xchg
xchg
lret
xorl
inc
mov
add
xlat
mov
and
sbb
fists
push
inc
es
and
xchg
rcrb
lahf
out
jne
mov
fimull
push
xor
daa
adc
mov
or
pop
adc
mov
add
jmp
test
cs
xchg
jne
mov
inc
mov
sbbl
insb
jo
mov
sbb
and
push
xor
out
push
pop
inc
push
cmp
btc
cmp
xlat
out
pusha
add
and
in
test
insl
mov
add
mov
jne
dec
shrl
cmp
sbb
or
inc
stos
inc
and
popf
mov
or
xchg
aas
inc
cmp
or
pusha
sti
icebp
fwait
cmp
and
pop
push
ja
dec
inc
sub
sbb
or
subl
push
mov
dec
mov
sahf
mov
mov
lea
sbb
push
push
cmp
adc
ficompl
or
or
xor
std
push
inc
addb
adc
push
push
jnp
xchg
inc
inc
cltd
jp
repnz
push
xlat
push
inc
pop
add
and
jae
sub
jae
xor
dec
push
pop
and
ljmp
rcpps
add
sub
push
repz
pop
pop
add
aad
clc
jns
ret
fstpt
sub
fwait
push
cmp
push
jne
or
lods
inc
mov
addb
cmp
and
pushf
adc
outsl
outsl
and
insb
or
and
data16
nopl
scas
mov
dec
push
xchg
jne
into
sbb
inc
mov
mov
insb
test
or
inc
lea
cld
das
push
push
cs
jb
push
sbb
sbbb
sub
and
sbb
inc
inc
fildl
fnstcw
and
mov
jns
aas
adc
sahf
adc
xchg
adc
popf
lret
adc
ds
nop
lock
dec
or
jns
test
fildll
lret
aam
mov
stc
mov
orb
mov
sub
outsl
pop
cmpsb
sbbl
cmpsb
nop
jae
add
movsl
pop
loopne
sbb
add
or
ret
sub
jno
lock
and
add
and
push
push
xchg
and
loopne
dec
xchg
xor
fwait
push
add
scas
les
out
in
push
jae
ljmp
mov
sti
inc
or
push
adc
and
fcmovnb
cmp
aam
mov
xor
mov
add
and
loope
push
scas
pop
sti
sub
aaa
pusha
sub
or
mov
jne
scas
add
xlat
push
mov
in
jae
pop
outsb
push
or
push
or
xchg
xchg
cmpsl
push
movsl
xor
ret
xchg
out
repz
pop
inc
inc
lcall
xorl
int
imul
insb
jnp
xor
inc
dec
jne
xchg
cld
fcoml
cmc
xor
stos
adc
arpl
adc
cmp
dec
iret
enter
xor
and
jnp
aaa
and
out
icebp
or
pop
mov
ljmp
push
ret
out
sti
xchg
shlb
addr16
or
or
add
lret
subb
xchg
sbb
test
mov
cli
enter
das
mov
mov
cmp
ret
push
jno
adc
push
push
mov
jns
ret
fsubl
ja
fldcw
imul
cmp
xchg
pop
dec
xadd
stos
and
pop
push
sar
nop
addl
aad
cmp
jno
push
daa
and
or
cmpsl
adc
shlb
in
mov
push
out
push
cwtl
dec
mov
and
push
loope
cmpsb
mov
test
mov
jmp
push
sbb
fs
mov
addr16
mov
andl
out
or
inc
arpl
mov
mov
jb
sbb
ret
js
xlat
adc
fdivs
sub
mov
push
es
mov
mov
mov
pop
mov
aaa
imull
push
je
test
adc
data16
fists
jge
and
and
ljmp
mov
push
mov
jp
pop
fldl
xor
adc
lods
jg
or
push
dec
pop
dec
jmp
mov
push
and
xorl
sbb
mov
add
jb
test
pop
fs
cmp
jg
mov
add
pop
jnp
ret
stos
pop
pop
jne
and
xchg
sti
push
adc
push
or
es
adc
jo
adc
dec
xchg
inc
pop
cmpsl
mov
inc
movsl
pop
inc
subl
pop
mov
inc
add
mov
movsb
stc
ret
dec
ret
movsl
jo
inc
cmp
nop
dec
add
push
leave
sbb
cmp
faddl
xor
icebp
jae
or
xor
dec
pushf
xorb
adc
mov
and
sbb
decl
jle
mov
sub
sub
push
je
inc
xchg
ds
pop
inc
rorb
jb
mov
lock
mov
enter
pop
in
dec
cmp
push
jne
mov
add
test
inc
fdivr
ret
add
dec
lret
dec
push
lods
notb
dec
push
cmp
por
add
adc
adc
mov
in
mov
inc
test
pop
sbb
xchg
push
xchg
push
insb
or
out
outsb
aad
jne
add
js
pushfw
and
das
sub
aas
out
inc
mov
xchg
xchg
adc
je
je
sub
sbb
adc
xor
push
leave
push
addl
push
and
mov
xchg
cmp
cwtl
shlb
sub
mov
mov
les
test
dec
cmp
mov
aad
mov
pop
pop
lcall
int3
sarb
rclb
in
cmpsb
dec
and
sbb
icebp
movsl
aas
dec
dec
push
adc
push
sub
and
dec
cmp
incb
add
xor
les
ljmp
int
xchg
insl
sbb
fwait
dec
sbb
inc
jb
cmc
sbb
pusha
mov
mov
pop
dec
jp
add
sbbb
inc
and
rcrb
or
nop
sbb
insb
push
rolb
dec
imul
or
cwtl
in
inc
jmp
ja
push
or
jmp
lret
jne
inc
ret
add
pop
addr16
scas
inc
add
push
inc
insl
adc
int
and
inc
pop
and
ja
orl
loope
int3
sbb
sbb
and
jae
nop
int3
cmc
add
jb
insl
shrb
shl
cmp
cli
fsts
inc
or
mov
add
dec
mov
inc
xlat
popa
rorb
nop
in
add
and
jmp
dec
test
fcom
loope
mov
mov
in
test
add
in
adc
mov
jle
and
mov
xor
pop
sub
or
xchg
lds
jo
mov
add
sti
cmc
mov
cmp
push
ficompl
orb
imul
push
ret
loopne
mov
out
lds
push
cli
xor
sti
stos
adc
xlat
int3
push
sbb
xchg
inc
mov
and
push
or
dec
xor
adc
jge
cmp
dec
nop
inc
arpl
mov
sbb
pop
mov
pop
add
add
xor
or
daa
sub
rolb
mov
fsubrl
push
or
push
test
mov
add
pop
or
incl
gs
xor
hlt
jne
xor
push
mov
mov
inc
jne,pn
addl
orl
sbb
xor
daa
or
addr16
mov
mov
pop
sub
or
xchg
push
daa
xor
arpl
push
loope
rorb
add
int
pop
mov
sub
imul
andb
mulb
inc
push
inc
sub
fdivs
adc
sub
aaa
cmc
shrl
or
jge
cmpsl
sbb
add
lcall
pop
mov
aas
fucomi
aaa
add
cmp
jle
aas
pop
push
pushf
lods
cltd
dec
mov
cmpsb
testb
xchg
loopne
fiaddl
int3
xorb
xchg
add
rcll
or
push
negl
test
test
aas
das
cmp
movsb
jae
push
testl
insl
mov
movsl
das
nop
pushf
in
mov
jmp
cmp
mov
pop
shufps
dec
adc
push
add
sub
ror
xchg
mov
push
or
sbb
shll
stos
arpl
add
out
xor
cmp
cwtl
xchg
test
push
adc
sub
std
enter
pop
stc
pop
cmc
popf
xor
je
pop
shlb
ss
lahf
cmp
femms
es
and
xchg
imulb
sbb
cmp
and
test
scas
addb
imul
das
mov
mov
mov
je
cs
adc
add
inc
addl
and
and
or
pushf
push
jns
pop
sub
mov
xor
shlb
adc
adc
push
sub
arpl
xchg
xchg
inc
cmpsb
xchg
inc
lock
and
sub
push
adc
xor
push
cmp
pusha
icebp
adc
xlat
or
jno
inc
repz
xor
adc
mov
push
xchg
ret
mov
psubq
addr16
loope
cwtl
cmp
add
or
cwtl
jb
mov
and
dec
xor
xchg
in
call
lock
dec
or
mov
sub
ss
mov
xor
or
rorl
add
dec
mov
adc
imul
cmpb
xor
push
movb
sbb
add
adc
sahf
outsb
in
hlt
sub
scas
iret
jp
or
push
iret
pop
rorl
xchg
add
or
push
fucom
and
add
or
mov
or
daa
sbb
stc
and
imul
iret
push
call
loopne
rolb
jbe
pop
je
pop
int
ret
sbb
sub
adc
mov
sbb
faddp
scas
xor
xchg
cwtl
xor
mov
dec
pop
fsubrl
or
push
add
pop
xor
push
cmp
pushl
ljmp
adc
add
stc
mov
or
add
jl
cmpl
mov
inc
out
mov
add
mov
icebp
pop
dec
jge
outsl
pop
add
dec
dec
mov
push
xlat
sbb
mov
push
xlat
xchg
adc
or
dec
mov
insl
inc
ret
jns
xchg
lods
mov
add
push
imul
clc
fs
cmp
mov
std
inc
sub
dec
movsl
cmp
clc
clc
lock
dec
sub
or
or
call
mov
sbb
pop
rorb
fmul
popa
nop
out
mov
enter
mov
add
sahf
adc
xchg
push
das
add
sbb
repnz
roll
rclb
dec
add
xor
scas
or
outsl
movb
mov
jmp
cmp
sbb
sbb
dec
inc
mov
jle
int
ss
add
mov
daa
add
sub
lock
dec
or
mov
or
addb
pop
or
jb
gs
and
push
mov
dec
and
mov
xchg
dec
movsl
pusha
or
sub
adc
pop
jmp
mov
insl
add
sarb
sub
mov
loopne
add
mov
cs
jle
out
or
out
iret
push
and
jle
adc
pop
push
sbb
ficomps
int3
add
sub
mov
imul
mov
mov
push
sub
or
icebp
bound
dec
or
ret
stos
cmp
xor
fisubl
add
sbb
lcall
dec
int3
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
hlt
test
repz
int3
add
add
lods
fadd
push
or
dec
add
xchg
and
add
dec
mov
add
jo
inc
add
adc
cld
dec
lea
dec
sarb
nop
pop
inc
incl
scas
and
loope
xchg
lock
dec
mov
add
and
xchg
mov
add
mov
or
hlt
sbb
notl
fnstcw
push
jbe
cmp
and
js
xorb
movsb
xor
in
sub
jne
push
dec
cmp
clc
and
jmp
pop
cmpb
jne
stc
cmpsl
insl
or
cmp
add
sub
test
sub
iret
outsb
pop
sbb
jmp
dec
jne
inc
enter
or
adc
push
inc
xchg
enter
mov
jl
mov
cld
add
sbb
mov
or
sub
sub
push
cmpsb
add
sbb
cmp
push
mov
cs
sub
jg
xchg
cmpsb
cmp
and
sub
hlt
rolb
xor
or
inc
cmp
mov
pushf
mov
out
push
jae
mov
rorb
push
ficoms
push
add
xorb
sbb
mov
testb
lock
flds
push
adc
pop
add
enter
inc
or
and
sub
jg
les
shrl
hlt
xchg
jne
pushf
cmp
aam
cwtl
mov
jns
sub
rcll
aaa
iret
ret
push
imul
and
rclb
xorb
lea
int3
es
jge
xchg
shlb
pusha
cmp
aam
pop
les
xchg
cli
mov
mov
les
sbb
testl
jae
and
shll
sahf
and
nop
pop
mov
clc
push
clc
sbb
mov
sub
lcall
adcl
fadd
dec
das
es
add
sbb
sub
movsb
mov
mov
fwait
xchg
and
mov
or
rolb
leave
sbb
stos
mov
mulb
mov
sbb
or
mov
jl
fs
mov
dec
add
rol
shlb
lea
adc
and
out
sub
sbbb
es
movsb
fildl
inc
enter
or
popa
pop
jne
push
add
or
push
ljmp
out
add
jmp
mov
js
sbb
jb
adc
bswap
xor
rol
push
test
xor
cltd
push
dec
mov
fcmovnb
push
mov
js
test
add
push
clc
in
xor
push
add
loope
jb
outsb
daa
pop
andb
pop
jmp
inc
or
pushf
cli
mov
ret
in
adc
dec
es
adc
and
push
or
test
orl
addr16
or
imul
sub
jnp
sbb
xlat
push
jno
ret
or
xor
sbb
and
sub
push
add
insb
add
or
add
and
movsl
enter
mov
or
shlb
dec
xor
add
xchg
dec
xor
push
sbbl
cli
and
mov
xchg
sbb
jo
xlat
xchg
cmpsl
in
or
adc
inc
repnz
addr16
push
cmpsl
cmp
push
jg
mov
add
out
and
ret
and
mov
or
add
nop
cmpsb
cmp
push
fisttps
xlat
ret
sbb
sub
psrlq
mov
int3
stos
push
call
dec
jmp
fistps
lret
les
fcmovne
mov
push
inc
sub
mov
and
ljmp
or
out
sub
js
andl
add
mov
dec
xor
mov
mov
sarb
mov
sbb
sti
call
cmp
cmp
cmp
mov
nop
dec
push
inc
and
sarl
rolb
ja
xor
sbb
pop
push
push
sbb
or
ljmp
dec
jge
mov
stos
dec
sub
add
push
add
inc
jmp
pop
loope
xor
dec
nop
call
or
xor
adc
or
jnp
adc
mov
inc
rolb
push
sbb
xchg
fldcw
xchg
ss
rclb
adc
and
sti
sbb
std
sub
orl
cmp
pop
cmp
xor
leave
pop
sbb
pop
ficoml
add
add
pop
add
adc
xchg
or
fldl
adc
rclb
in
das
dec
cmpb
mov
mov
scas
jmp
sub
hlt
add
and
or
inc
xorl
test
adc
lock
mov
mov
cmovns
popa
lock
lods
dec
inc
add
lods
jl
aaa
pop
jbe
push
mov
mov
inc
in
mov
cmpl
adc
pushf
dec
sub
add
add
push
fimull
jbe
push
or
dec
imul
add
jecxz
clc
dec
push
repz
mov
pop
mov
addl
adc
inc
clc
clc
js
or
sbb
cli
sbbl
xchg
icebp
sbb
inc
cmpsb
add
mov
setp
xchg
hlt
cld
mov
add
jl
xchg
cmc
add
ret
mov
sub
aaa
adc
sub
xchg
loopne
dec
jge
xor
mov
test
lods
and
sbb
dec
lods
iret
add
pop
rcrb
clc
adc
mov
addb
clc
jge
cmp
and
clc
jae
pop
lcall
lods
dec
repz
jb
call
fimull
pop
ss
nop
ss
shl
push
mov
adc
pop
or
or
cmp
nop
jbe
cmp
cli
push
jmp
setl
cmpl
les
or
lods
push
into
and
cs
sbb
enter
sub
sbb
aaa
push
es
lock
push
cs
pop
sub
jmp
add
call
mov
add
mov
push
inc
sub
fnstenv
ret
inc
rorl
mov
cltd
div
inc
sbb
jne
or
out
iret
mov
dec
or
stc
mov
push
fbstp
xchg
inc
or
push
or
mov
or
loope
xchg
testb
lods
sub
dec
push
pop
inc
out
mov
ret
add
mov
add
inc
jbe
ret
or
push
ds
andb
sub
xor
outsl
xchg
and
insb
aad
mov
fcmovne
add
sub
jg
movsl
xchg
adc
mulb
loope
in
lods
push
popa
adc
pop
leave
les
mov
scas
mov
dec
jnp
popa
je
ret
addr16
lds
fmuls
sbb
pop
push
xor
push
pop
lret
inc
leave
test
js
sbb
rcr
fld
add
inc
add
dec
fcmovnbe
sub
lahf
fisttps
fs
fildl
push
js
jne
rol
aam
pop
jbe
fisttpl
and
xchg
pop
jne
inc
faddl
sbb
push
push
adc
out
ljmp
cmp
ja
je
pop
dec
add
or
aam
dec
int3
xchg
js
sbb
inc
insb
repz
inc
fildl
xchg
xor
sbb
jne
and
mov
popa
insb
adc
pop
in
push
in
into
cmp
and
adc
or
or
in
adc
lock
negl
pop
js
add
add
scas
sub
mov
sbb
cltd
loopne
inc
push
or
sbb
aam
es
in
dec
jg
push
sub
add
add
filds
insb
fsubr
add
pop
add
aaa
and
adc
lret
jo
add
dec
fcomps
xor
shrb
xor
daa
cmp
das
cltd
adc
daa
mov
into
sub
jle
jmp
fldl
loopne
mov
icebp
add
hlt
arpl
jo
mov
fs
fstps
adc
ret
inc
dec
mov
dec
push
int
clc
jg
neg
cmpb
adc
pop
jg
and
repnz
sub
add
push
jmp
mov
popa
pop
test
addl
aam
push
aaa
or
aam
push
les
jp
adc
divb
xor
push
add
mov
pop
addb
test
xor
xchg
ret
and
adc
inc
jnp
ljmp
jl
mov
bound
inc
adc
or
pusha
xor
push
adc
cmpsb
adc
inc
ljmp
rclb
inc
scas
add
mov
push
es
push
jne
ja
add
adc
lods
test
scas
and
xchg
fwait
divb
jo
cmp
jne
call
inc
cmpsl
rorb
lods
lea
test
add
mov
xchg
adc
sub
mov
inc
sti
lcall
jg
call
jp
sub
jmp
adc
ljmp
add
push
add
andl
push
push
dec
lock
add
movb
adc
pop
insb
add
and
jle
inc
pop
je
mov
mov
inc
add
ss
les
inc
dec
enter
sbb
dec
jne
jle
xchg
daa
or
dec
ljmp
lcall
and
mov
enter
mov
test
mov
les
add
jb
lea
icebp
ret
pop
sar
mov
inc
and
xchg
das
test
mov
cmp
pop
lea
push
mov
mov
clc
add
mov
adc
decl
adc
cmpl
xor
lods
pop
test
cmp
ficoms
xlat
fsts
dec
xchg
mov
pop
test
dec
mov
in
add
and
cmp
sbb
jp
push
test
pushf
adc
popa
icebp
push
adc
aas
pop
mov
fdivrs
lock
scas
mov
add
and
adc
fcompp
jecxz
or
sbb
pop
or
adc
lret
push
jne
push
cmc
mov
aam
out
and
inc
adc
add
dec
adc
cmpl
cmp
cmpsl
imul
fs
add
inc
aaa
jo
pop
mov
mov
dec
lcall
pop
iret
mov
sub
mov
lock
push
ret
mov
lods
pop
decl
push
jns
insl
inc
mov
lock
data16
cmpsb
sub
insl
pushf
or
xlat
xor
cli
mov
add
mov
xor
push
aad
ret
cmpsl
das
mov
mov
pop
imul
dec
fistpl
adc
je
sbb
jle
add
jle
push
push
insb
divb
nop
mov
push
loope
pop
iret
pop
sbb
sbb
mov
or
cmpsl
or
push
mov
or
sbb
testl
repnz
cmp
or
outsb
bound
cmp
andl
dec
ret
ss
fcomp
add
or
popa
jae
imul
pop
adc
mov
pop
sbb
jns
enter
hlt
or
jno
jl
pusha
pop
mov
out
pusha
pusha
xor
jo
mov
stos
pop
sti
jnp
cmp
mov
sub
adc
jb
out
mov
mov
or
flds
cmp
sub
adc
and
adc
sbb
bound
xlat
pop
mov
mov
or
sbb
and
cmp
cmp
add
inc
mov
add
sub
ja
inc
add
xchg
dec
add
mov
insb
out
or
enter
popf
movsb
iret
add
inc
xorl
test
pop
clc
add
cmp
iret
adc
enter
or
rcrb
subl
jg
adc
ds
adcb
clc
test
rolb
mov
xor
call
aam
fldl
xchg
pop
mov
adc
pop
xor
add
xor
add
pop
dec
and
push
xor
xlat
xchg
fadds
mov
lds
fldl
sbb
shrl
nop
push
sbb
faddl
jne
mov
xor
test
jae
jle
testb
int3
or
test
xor
pushf
push
cs
pop
insl
adc
jge
loopne
js
mov
inc
mov
pop
in
test
je
cmc
mov
mov
sbbb
push
inc
loopne
push
lea
push
mov
inc
mov
ja
push
push
vphadddq
push
or
ljmp
mov
das
fsubrs
icebp
loopne
fcmovnbe
fmuls
mov
pop
xchg
push
sub
adc
in
mov
loopne
xchg
adc
dec
dec
push
jnp
and
add
and
sub
mov
mov
pop
add
daa
jnp
xchg
or
fucomp
sub
add
or
push
inc
mov
test
adc
or
pop
add
idivl
add
sbb
rcrb
clc
xchg
in
jp
xchg
xor
push
mov
mov
or
mov
add
movsl
insb
mov
lock
sub
cmc
test
mov
inc
sbb
jmp
dec
dec
sub
add
loopne
and
inc
int3
or
pusha
add
and
outsb
or
add
fcomps
adc
dec
sbb
sbb
inc
cs
mov
roll
cltd
inc
dec
inc
cwtl
lods
jmp
out
ret
test
sub
or
push
push
movl
push
dec
shll
pop
or
or
sbb
pop
mov
adc
aas
pop
adc
leave
jo
ret
sarl
cmp
bound
js
jmp
mov
daa
sbb
or
clc
cmpsl
push
inc
sub
verr
fldenv
adcb
inc
test
add
jne
sbb
and
ret
push
xor
pop
ss
inc
xchg
jmp
sub
imul
sbb
pop
mov
and
sbb
cmpxchg
xchg
sbb
and
mov
pop
sbb
add
sbb
sbb
in
mov
add
cmp
and
add
adc
xchg
adc
dec
fldt
add
ljmp
loopne
mov
dec
sub
leave
xor
and
lret
jmp
adc
dec
or
mov
add
ret
idivb
imul
jl
scas
sbb
add
fiadds
push
inc
add
ret
add
cmp
xor
hlt
adc
pop
ja
cmp
ficoms
mov
mov
fistps
push
add
mov
int3
cmp
pop
xor
push
or
movsb
ret
adc
push
adc
xor
lret
push
loop
jne,pt
inc
das
mov
push
push
pop
das
and
fdivl
clc
sub
es
adc
das
dec
cmp
lock
xchg
add
add
pop
in
adcb
push
in
xor
sbb
lods
test
and
mov
push
leave
jne
insl
test
sbb
or
sbb
sbb
dec
sbb
push
or
push
fildll
mov
call
call
adc
xor
rcll
jmp
add
lahf
xchg
push
hlt
adc
push
push
and
xor
push
inc
cmpl
or
jle
inc
cmp
ret
jge,pt
dec
movsl
sbb
hlt
imul
adc
popa
mov
rorb
enter
and
and
test
sub
ja
and
xor
inc
sub
outsb
loopne
fisubrs
mov
in
mov
mulb
push
push
je
add
ficompl
jp
and
ds
xor
jl
sub
xchg
addl
mov
push
mov
lret
mov
push
add
int
mov
add
mov
pop
cmp
xor
and
sub
and
insb
sbb
lock
xchg
cmp
imul
jl
mov
jne
test
vpmuludq
je
lea
cmp
mov
cmp
xchg
movsl
adc
inc
push
je
lock
cmp
dec
call
lea
mov
lea
jg
ss
lock
add
adc
adc
std
ss
sbb
adc
xor
dec
cmp
mov
rcl
and
les
and
jle
mov
clc
dec
out
mov
jbe
fwait
push
mov
mov
push
push
pop
jle
sub
inc
mov
int
inc
jge
data16
mov
inc
lods
sub
outsl
sbbl
or
or
insl
fists
inc
sbb
lods
mov
jne
mov
inc
jns
sahf
imul
adc
sbb
orl
test
mov
mov
adc
mov
test
dec
dec
xchg
inc
out
in
pop
pop
xor
jmp
fstpl
adc
pusha
xor
loopne
xor
cmpb
dec
adc
loope
sbb
xor
jbe
sarb
cmp
ss
inc
pop
gs
push
stos
mov
mov
and
fs
fbld
push
pusha
pop
inc
or
adc
in
and
jb
sub
dec
or
in
in
adcb
inc
sbb
jbe
dec
and
pop
aas
aaa
stc
cmp
sbb
ret
fs
iret
pop
testl
push
or
pop
cld
mov
ds
xor
outsb
xchg
sub
inc
jb
jo
out
xchg
push
sub
add
or
or
int
adc
sub
xchg
xchg
mov
out
and
xchg
xor
xchg
jmp
push
sbb
cwtl
add
add
inc
enter
or
xchg
sub
clc
outsl
pop
sub
inc
xor
pop
sahf
jns
sub
mov
inc
enter
add
mov
aaa
add
mov
push
mov
add
leave
xchg
or
push
imul
jo
mov
jns
push
xor
dec
mov
rclb
push
inc
inc
and
jmp
inc
iret
into
in
fisubs
test
jmp
hlt
loope
xor
xor
sub
clc
jno
dec
in
pop
adc
sbb
cmpsl
xor
mull
ljmp
lret
xor
add
sub
cmp
xor
dec
dec
pop
xor
mov
andl
js
movsb
insb
scas
lret
fadds
cmp
pop
sbb
xorb
inc
add
hlt
adc
hlt
sub
or
iret
repz
push
push
or
cmpsb
xchg
push
cmp
mov
sti
lret
subb
mov
xor
sbbl
xor
rcrl
addb
inc
enter
loopne
subb
inc
daa
mov
lods
or
jge
ret
es
jns
addl
dec
sub
mov
or
xchg
mov
hlt
es
jne
add
lock
shl
pop
or
add
clc
sti
js
fstpt
pop
daa
sbb
sub
or
shrb
xchg
sbb
in
and
lahf
push
dec
cmpl
into
push
pop
push
outsl
sbb
divb
or
sbb
push
or
pop
mov
out
cmp
xor
sti
mov
mov
cmp
stos
scas
dec
daa
cmp
jecxz
rorl
imul
jae
sub
cmpsb
daa
add
jne
cmpsl
dec
cmp
rclb
mov
test
roll
add
and
pop
or
mov
mov
xchg
or
enter
hlt
outsl
ret
pop
popf
inc
gs
inc
movsb
adc
stos
inc
jge
push
js
out
xchg
sub
rol
and
aad
xchg
rclb
xchg
inc
pop
stos
test
pop
shrb
jne
add
mov
in
mov
arpl
mov
shrl
sarb
or
sahf
das
or
mov
mov
xchg
adc
jp
pushf
testl
dec
mov
leave
or
sbb
and
xchg
cmp
sub
push
adc
fdivrl
arpl
and
cltd
inc
cs
sbb
adc
or
cmovno
add
jmp
jecxz
popf
xchg
loope
pop
mov
sbb
pop
or
outsb
sub
or
push
ja
mov
sub
inc
jbe
test
out
dec
jecxz
stos
ja
out
pop
es
cwtl
inc
fs
sarl
rol
mov
add
aam
add
mov
imul
adc
push
shrb
push
sbb
test
sbb
or
adc
lret
loop
addb
jmp
or
ret
inc
push
or
xor
into
scas
or
fidivrs
jg
movsb
mov
pushf
dec
sub
ljmp
mov
push
inc
cs
mov
lock
inc
dec
fs
test
ret
add
mov
xor
xchg
stc
mov
inc
pop
sbb
xchg
mov
cmpsb
imul
enter
inc
pushf
ficomps
sbb
xorb
cmpsb
mov
lret
mov
rcrb
or
add
mull
movsb
test
xchg
adc
and
xorl
and
sub
fiadds
jecxz
dec
add
sub
xor
cwtl
test
repz
sub
ror
es
push
ret
repnz
stos
decl
push
sub
repz
faddl
lret
sbb
cmp
adc
xchg
xor
mov
xor
dec
cmc
xor
cmp
roll
mov
or
push
cmp
lcall
sbb
hlt
jge
inc
mov
pop
lock
sbb
dec
and
push
cmp
out
test
xchg
loop
subl
jb
stos
movsl
daa
aaa
in
mov
clc
aam
jne
clc
stos
hlt
mov
and
pop
daa
sub
cmpsb
dec
mov
addb
mov
lret
call
dec
divb
jne
jae
push
add
sub
jae
cmp
jne
pop
pop
loopne
push
or
adc
sub
les
aam
cmpsl
dec
and
pusha
add
and
jnp
shrb
push
or
imul
addl
in
ret
insb
jb
pop
loopne
shlb
pop
add
arpl
icebp
adc
lret
xchg
insb
xchg
pop
xchg
mov
faddl
push
insb
pop
push
cmp
leave
out
rclb
adc
push
push
mov
popf
lock
xchg
lods
sbb
pop
adc
adc
pop
sbb
pusha
dec
add
jo
cmpb
imul
daa
int
push
push
jmp
xchg
push
arpl
sarl
frstor
ss
sub
and
sub
add
mov
es
and
mov
jp
mov
dec
xlat
xlat
push
sub
out
out
lea
add
test
inc
mov
push
fdivrs
and
push
inc
sbb
add
or
push
mov
sub
add
and
mov
push
pop
push
jae
insl
das
cltd
xor
push
adc
and
pop
lret
mov
clc
test
ss
lret
add
aaa
or
loopne
arpl
out
add
pop
cld
je
xchg
test
inc
mov
fucomip
jle
pop
sbb
or
xor
mov
dec
das
popa
js
cmp
jecxz
hlt
clc
movsl
sahf
fcoml
pop
or
mov
clc
rorl
cli
pop
pop
inc
popa
adc
dec
pusha
movsl
mov
clc
push
enter
outsl
mov
ja
jl
cs
add
pusha
in
rol
inc
outsl
rcrb
adc
aad
cmpsb
mov
cmp
nop
jl
xor
out
fnstsw
dec
lock
ss
add
in
lahf
dec
and
xchg
in
sub
pop
out
adc
and
pop
icebp
cli
push
inc
and
lods
sbb
pushw
popa
cmp
cmp
fldt
adc
mov
dec
sub
sub
dec
mov
aad
jae
lcall
push
fst
or
pop
adc
xor
or
sbb
popa
mov
xor
mov
or
ds
push
sub
and
pop
adc
dec
xor
stc
pop
test
mov
adc
popf
jbe
ss
aaa
sub
cmp
add
cltd
mov
test
lock
adc
inc
test
flds
lock
mov
pushf
inc
sbb
aam
stos
movsl
cmp
ret
test
push
pop
jmp
adc
add
inc
cmp
cld
push
jb
cmp
and
filds
pusha
int3
push
add
mov
mov
mov
lods
dec
jg
loopne
mov
jb
push
cmp
int3
jg
mov
xor
cs
and
xchg
jne
shrb
inc
lret
lods
loop
push
mov
not
xchg
xor
scas
and
add
adc
test
mov
add
imul
xchg
mov
lahf
test
sbb
imul
or
mov
adc
and
xor
or
adc
or
add
mov
inc
mov
add
cmpl
pop
mov
adc
cmp
mov
out
jbe
lcall
ds
mov
insl
jge
cld
or
push
push
sbb
inc
inc
adc
sub
jp
mov
out
add
push
addl
and
mov
out
es
or
dec
sbb
sub
adc
xchg
cmc
push
je
push
mov
mov
jg
dec
imul
inc
lds
push
cmp
inc
cmp
int
call
jg
xchg
hlt
jbe
pop
cwtl
jl
in
sbb
mov
fmuls
popa
mov
cli
pushf
add
jo
inc
jmp
inc
and
add
inc
inc
add
sub
inc
add
inc
push
je
fdivl
adc
sub
pop
dec
sub
and
popf
insb
loop
or
sub
dec
sub
fildl
or
mov
push
mov
aam
mov
sub
add
push
lea
imul
dec
push
jns
cmc
xchg
aam
and
insl
or
adc
enter
jge
mov
mov
or
mov
lds
mov
mov
negl
enter
jne
js
sbb
enter
lods
xchg
jne
fcoml
cmp
test
test
sbb
mov
cmp
add
cmpb
lods
rcrb
js
lcall
movsl
and
add
dec
iret
or
adc
xor
jo
and
add
aaa
ss
insl
mov
xchg
movsb
pop
add
scas
jns
or
dec
push
pop
xor
out
in
cmp
xor
add
rolb
push
xor
pop
push
xchg
sbbl
in
jb
ret
test
cmpsb
xchg
lret
cld
push
push
movsl
push
fcoms
insb
cmpsl
or
sti
insl
out
adc
iret
add
cmpl
dec
mov
push
hlt
dec
jo
jo
sbb
das
add
add
and
sbb
cli
popa
dec
or
in
imul
pop
pop
faddl
icebp
jp
mov
lock
mov
inc
adc
or
mov
ja
rorl
aad
test
and
or
jo
inc
rclb
ret
loopne
or
push
jo
inc
stos
xor
pushf
dec
push
adc
inc
in
gs
or
movsb
cmp
call
rcrb
in
lret
and
fcmovnu
repz
addb
xchg
shlb
inc
repnz
scas
dec
mov
push
or
inc
ja
sbb
jo
add
jno
aad
mov
daa
fcomps
or
or
xor
fisubs
mov
mov
inc
out
ret
and
test
push
push
subb
mov
pop
dec
or
inc
loope
stos
cmpsl
sarl
imul
fiaddl
jmp
sub
fistpll
xor
subl
or
add
or
inc
lcall
cld
shrl
dec
cmp
inc
mov
jecxz
rcrb
incb
pushw
add
stc
fists
lea
jl
dec
pushf
and
sbb
imul
or
xor
pop
mov
inc
xchg
jb
adc
fstpl
jmp
push
popf
or
rorl
inc
rolb
fcmovu
mov
and
inc
test
out
pop
or
cwtl
jge
je
jmp
mov
mov
fildll
adc
dec
push
int3
cmp
jp
jmp
pop
mov
rolb
adc
or
mov
stc
adc
mov
add
adc
es
push
and
and
dec
add
push
mov
pop
ret
aaa
cltd
jne
in
rolb
and
nop
dec
in
lcall
test
xchg
movsb
jb
mov
test
fsubrs
pop
push
mov
mov
mov
rolb
jbe
bound
push
out
add
jnp
push
push
push
dec
dec
dec
dec
push
add
cld
mov
insl
insl
or
xchg
jno
push
inc
gs
and
push
gs
adc
orl
daa
inc
jbe
and
push
out
jne
das
add
sub
push
sub
sub
in
leave
push
test
jae
popa
sub
dec
inc
in
inc
out
push
outsl
sub
jae
mov
add
pop
lcall
jp
inc
cmp
cmp
sbb
push
xor
pushf
adc
je
sub
xor
mov
inc
add
mov
mov
insl
scas
or
or
mov
and
out
hlt
xchg
sub
or
ficoml
cwtl
ret
fisttpl
fisubrl
mov
subb
das
ja
or
sbb
loopne
shr
sbb
and
loope
ret
mov
sbb
daa
pushf
push
add
xor
xchg
sbb
add
pop
xorb
imul
xor
pop
mov
in
mov
xchg
dec
sub
xchg
inc
dec
or
inc
pop
inc
mov
cltd
sbb
imul
jo
push
adc
in
mov
push
dec
jbe
mov
xor
cmp
jns
mov
fwait
js
dec
movb
dec
mov
dec
dec
pusha
pusha
in
or
sub
push
push
push
inc
call
push
nop
mov
mov
push
scas
mov
mov
sbb
add
mov
sub
mov
inc
lods
push
aas
inc
enter
mov
cmc
mov
nop
mov
shrb
insl
push
push
insb
jmp
pop
roll
mov
inc
xor
add
addb
cmpsl
cmp
daa
adc
xorl
aaa
outsl
inc
push
std
push
inc
gs
add
sbb
inc
enter
or
sbb
dec
enter
pop
push
adc
sbb
aas
movl
loopne
adc
sti
inc
push
je
add
add
jge
sbb
mov
sub
rorb
or
mov
je
adc
mov
adc
roll
push
test
fnstcw
loop
push
mov
sahf
rclb
inc
adc
pop
ret
inc
add
sbb
push
adc
out
inc
test
adc
adc
adc
adc
dec
aam
adc
loope
mov
lret
add
mov
adc
jno
lea
mov
fistps
mov
and
push
xchg
scas
push
iret
repz
fisttpll
les
add
add
xor
pop
add
cs
xchg
sub
inc
or
mov
sbb
pop
inc
or
jns
ss
mov
dec
add
lcall
xor
or
dec
pop
adcl
xchg
lds
pop
push
into
sbb
pusha
ret
cmpsb
inc
xorb
lea
and
inc
fisubl
mov
or
ja
aas
cmpl
lds
mov
xor
scas
scas
adc
inc
clc
sub
mov
nop
push
ret
lds
shrb
sbb
hlt
jo,pt
in
push
add
mov
dec
inc
leave
push
push
adc
or
pushf
cmpsb
jae
xor
and
xchg
jp
or
out
sub
and
imul
or
adc
push
mov
sub
outsl
add
arpl
insb
push
arpl
imul
jge
adc
outsl
pop
js
bound
mov
es
jb
jb
popa
or
jnp
xchg
adc
insb
bound
dec
mov
fnsave
es
imulb
int
jmp
jo
addr16
jb
addr16
sbb
pop
pop
mov
arpl
mov
testb
daa
push
jg
jnp
out
into
sub
insb
das
je
insl
sti
fsubp
cmpsl
sbb
and
pop
divl
pop
fs
daa
mov
out
push
pop
jb
arpl
jnp
into
daa
jns
outsl
dec
pushw
not
jo
das
add
or
add
pop
fldt
scas
inc
push
loopne
add
inc
xchg
punpckhbw
mov
je
adc
push
fs
rorb
add
loop
filds
cmp
push
push
outsb
je
imul
add
adc
or
add
and
mov
sahf
loopne
push
inc
add
in
cmp
cld
setae
sub
rcrb
popa
pusha
push
push
test
inc
lea
repnz
pop
rolb
ret
je
pop
sbb
lcall
out
pop
and
push
mov
inc
mov
inc
mov
jl
mov
popf
cmc
adcb
or
add
push
rclb
adc
sbb
mov
jo
rcrb
mov
or
jne
mov
xchg
xor
lea
mov
roll
and
adc
adc
push
nop
dec
sub
xor
fsubl
mov
xchg
add
rclb
fdivl
idivl
adc
sub
jo
mov
fldl
xchg
xchg
ss
and
adc
gs
push
lods
sbb
aas
fadd
test
inc
add
pop
adc
sbb
mov
cmpsb
faddl
rcll
outsw
sub
or
lods
cmp
ret
ja
push
es
andb
mov
add
jns
repz
push
sbb
sahf
cmp
aas
mov
sbb
add
movsb
xor
xor
add
or
xorl
loopne
ds
adc
insb
lret
out
lret
add
add
push
jns
ljmp
pop
pop
or
or
or
or
or
or
sahf
out
adc
adc
out
sahf
adc
sbb
jmp
jns
sbb
push
pop
and
and
and
loopne
fadds
int3
push
xchg
test
lret
lcall
pop
xor
jns
out
push
arpl
out
sahf
xchg
cmpsl
mov
dec
repz
or
repz
repz
bound
mov
repz
lcall
mov
mov
ljmp
xchg
imul
or
insl
lds
pop
push
mov
or
or
or
or
in
lret
or
jb
and
sub
pop
adc
xor
xor
cmp
xchg
lret
cmp
mov
push
inc
pop
cs
dec
sbb
xchg
push
push
sbb
and
pop
sub
pusha
ja
push
popa
dec
movsl
repnz
imul
pop
push
sub
adc
sub
and
and
pop
inc
and
push
mov
sti
lock
or
dec
xor
out
cmp
fadds
lea
imul
dec
sarb
fadd
and
fs
js
add
inc
fdivrl
add
cmpsb
xor
clc
push
adc
rorb
dec
push
orb
rclb
shll
lock
lcall
pop
sbb
fwait
in
iret
pop
push
aaa
loopne
faddl
add
pop
dec
int3
mov
xor
rorl
mov
jb
lods
loopne
push
shlb
sbb
test
dec
pop
push
pushf
insb
mov
lsl
jno
addr16
lds
int3
push
push
fldcw
popl
je
xor
adc
add
xor
dec
fwait
lods
mov
add
and
add
push
mov
cmp
jl
add
xchg
outsb
adc
sbb
fs
add
adc
outsl
xchg
es
out
fucomip
fiaddl
loopne
or
mov
pusha
dec
jl
add
lea
xor
imul
rcrb
and
sub
cmp
push
push
pusha
sti
dec
push
fldl
fsub
repnz
test
lods
pop
jl
push
shrl
fldcw
inc
out
fidivrs
jmp
adc
inc
daa
aaa
pop
xor
adc
add
sub
and
xor
je
dec
add
push
mov
or
out
adc
aaa
icebp
inc
mov
lock
push
lcall
or
shrl
test
and
outsl
jno
sbb
in
mull
shlb
lds
dec
repz
sbb
cmp
xchg
pop
mov
mov
insb
fmull
push
jl
cmp
std
mov
add
and
and
add
movl
mov
cmpsl
aad
insb
sbb
cs
addb
cmp
dec
les
les
sub
int3
xor
aam
mov
push
adc
fsubs
add
sbb
xchg
xor
and
test
scas
or
orl
dec
lret
xor
jo
and
push
fld
loope
mov
pop
or
jns
xor
dec
or
mov
or
add
xbegin
popa
sub
adc
pop
add
add
aaa
hlt
adc
cmc
push
mov
loop
sbb
xchg
cmp
ret
scas
pop
daa
insl
mov
sarb
push
rol
jnp
add
stos
movsb
out
addr16
out
cmpb
in
xor
imul
xchg
dec
lret
lahf
adc
jo
cmpsb
cmpsl
nop
cld
xor
xchg
jno
push
aaa
jae,pt
push
or
mov
or
mov
lahf
mov
mov
pop
imul
sbb
push
repnz
add
xor
push
jnp
sbb
rcl
mov
lock
mov
insb
dec
xor
shlb
in
je
push
cmp
test
push
fstpt
xchg
leave
sub
add
xlat
arpl
add
and
lds
incl
cmp
dec
or
push
pop
add
cmp
pop
or
lock
lods
imul
scas
sar
stc
cs
jns
fcoms
je
sub
lock
test
mov
shr
test
inc
mov
pop
adc
jg
dec
pop
mov
fsubrs
imul
add
int3
fisubs
fs
mov
icebp
mov
add
fwait
in
adc
fwait
loope
jmp
mov
xor
push
mov
xchg
pop
clc
push
and
jle
push
xor
mov
test
test
pusha
inc
push
inc
roll
les
add
mov
or
mov
pop
inc
sbb
aaa
movl
aaa
inc
xorb
aam
add
pop
shlb
mov
and
push
in
addr16
xor
sub
mov
loop
push
or
fwait
adc
or
lods
xlat
inc
test
inc
or
nop
jno
pop
adc
iret
loop
add
inc
sub
dec
dec
pop
mov
ret
add
jl
fcoms
add
mov
test
movsb
push
icebp
and
clc
sub
mov
pop
inc
idivb
push
in
xlat
test
movsb
fwait
hlt
cmp
sti
mov
cmp
stos
jmp
sti
and
mov
ret
xchg
ret
cmpsl
sbb
add
jl
loopne
push
add
fbstp
int3
decl
movsl
pushf
aas
in
mov
sbb
inc
inc
fistps
call
rorb
rolb
add
and
nop
mov
or
sub
inc
cmp
clc
mov
and
insl
arpl
xlat
inc
cmpsb
pop
mov
xchg
add
das
lods
leave
sti
lret
mov
or
es
dec
enter
roll
imull
add
inc
mov
or
inc
imul
push
inc
add
inc
inc
lret
inc
test
jne
stos
adc
popf
daa
ret
popf
cmc
and
inc
adc
jg
dec
push
or
push
xor
and
loopne
or
lea
or
inc
mov
ja
sbb
faddl
lcall
fsubrp
cmp
fildl
jl
pop
sub
jb
nop
sub
and
ret
or
push
test
imul
cli
popa
imul
rolb
lret
jl
inc
xor
orb
imul
cwtl
pusha
mov
daa
xor
ljmp
mov
in
lea
mov
inc
adc
inc
dec
dec
xchg
cmpsl
orl
lods
xchg
filds
out
pop
xor
mov
inc
mov
bound
loope
adc
add
cmp
movb
push
dec
loopne
sbb
in
add
in
mov
rolb
cmp
push
movsl
insb
loopne
lea
sub
pop
push
cmp
dec
hlt
mov
xor
clc
iret
dec
cmp
les
push
cmp
pop
and
jae
inc
ficomps
orps
xchg
dec
popa
adc
adc
add
lahf
sarb
push
mov
add
inc
or
adc
inc
jle
xchg
jo
sarb
inc
xor
rclb
sbb
add
rclb
popf
lea
incb
or
fcoms
sbb
cmpsl
mov
shlb
js
fcmovnb
dec
les
cmp
sbb
mov
lret
dec
push
addl
bound
dec
in
imul
dec
rcll
inc
add
mov
popa
cwtl
movsb
xor
aam
pusha
movsb
call
mov
nop
notl
xor
rcrl
or
add
add
imul
adc
adcl
mov
das
out
scas
adc
lea
pop
sub
lock
dec
in
and
dec
in
sub
clc
call
dec
push
xchg
shll
cmp
test
inc
loopne
push
enter
jecxz
cmp
xorb
sub
lods
pop
jge
ljmp
gs
fwait
dec
jb
in
sub
jge
push
push
insl
hlt
and
and
in
inc
inc
push
inc
test
inc
cmpb
inc
pop
in
jmp
imul
and
pop
sub
xor
aam
out
aas
lock
inc
cmpb
and
inc
add
out
or
out
or
xchg
aas
add
adc
gs
cmp
inc
xor
add
add
in
sbb
jl
cmp
insl
movsl
in
shll
shll
test
inc
test
cmp
add
es
jecxz
jne
adc
das
or
das
dec
iret
xchg
test
push
and
sti
dec
jne
mov
ret
add
les
shll
adc
or
scas
mov
stc
xor
push
pop
les
mov
push
out
mov
and
push
xchg
movsb
pop
mov
jb
ret
dec
sbb
mov
inc
into
inc
mov
mov
mov
add
call
cmp
dec
rorb
lea
adc
ja
push
enter
jne
xchg
and
push
and
pop
pop
fs
ret
add
inc
std
mov
inc
pop
ret
push
jbe
cld
scas
xchg
decl
cmpb
inc
or
xchg
imul
add
jo
sub
pop
test
xor
pop
dec
sahf
mov
mov
xchg
adc
add
inc
mov
pop
mov
xor
pop
mov
repz
pop
push
inc
in
push
adc
sub
shll
xchg
shlb
ss
pop
xor
inc
push
jmp
fisubs
and
add
faddl
add
xchg
cmp
dec
or
push
test
xor
mov
dec
xchg
dec
insb
mov
bound
pop
inc
sub
inc
add
vmread
inc
pushf
lock
outsl
lock
and
fiadds
inc
push
fcmovb
repnz
and
idivl
adc
sub
push
pop
pop
cltd
adcb
shll
inc
push
sub
add
or
loopne
lcall
dec
call
inc
adc
adc
mov
inc
or
or
or
shrb
pop
sub
inc
inc
aaa
fs
pop
jnp
mov
call
mov
leave
dec
add
fs
out
js
jl
add
int3
hlt
or
or
int
inc
bound
in
pop
inc
pop
pop
ret
fcoml
insb
mov
fsubp
sbb
pop
lods
push
inc
xlat
push
cmp
repz
je
repz
repz
mov
fcomp
iret
repz
loopne
call
inc
jmp
clc
xchg
jecxz
cmc
push
or
jb
addl
sub
fdivrs
mov
add
fistps
or
insl
add
int3
sub
fwait
dec
stos
mov
push
add
out
fiadds
lret
cmp
sbb
stc
dec
add
xor
mov
mov
aas
andl
push
lea
shrb
imul
loop
sub
popa
push
adc
sub
movsl
ss
flds
loopne
jnp
adc
mov
mov
dec
cs
movsb
jnp
nop
enter
mov
mov
sbb
iret
xor
je
sub
and
iret
enter
mov
adc
adc
mov
dec
jb
or
fmul
orb
xchg
sbbl
adc
arpl
mov
xor
or
mov
call
popf
test
ja
stos
sbb
pop
jmp
xor
push
mov
pop
sbb
and
inc
movsl
test
push
adc
cmpsl
add
xor
nop
or
jno
aad
pop
inc
mov
nop
pop
addb
or
and
cmp
cmp
ljmp
sub
mov
cmp
std
jbe
add
mov
mov
push
movsb
je
sbb
lock
aas
push
mov
add
cmp
mov
push
dec
or
add
sub
push
mov
imul
mov
jo
mov
cmpl
nop
adc
push
adc
test
loope
add
out
add
jle
inc
or
dec
addb
and
fistpl
add
sbb
push
pop
pop
push
sbb
xchg
dec
or
dec
outsb
stos
test
sbb
das
xor
or
xor
jns
add
scas
jmp
ja
aam
lods
inc
loopne
sbbl
sub
and
push
push
push
flds
fwait
mov
sarb
inc
mov
xor
shrb
push
ja
pop
in
lods
sub
inc
sub
cmp
ret
lcall
or
sti
pop
add
cmc
sub
adc
sbb
adc
push
xchg
bound
aam
loop
cmpsb
cmp
dec
mov
daa
ss
mov
mov
mov
addl
push
sub
xchg
and
dec
or
push
mov
sahf
or
and
or
jno
jb
sub
push
add
mov
imul
jl
push
dec
or
lods
ja
adc
insb
xchg
test
jb
scas
sbb
mov
dec
jae
add
aas
imul
dec
or
push
cmp
rcrb
dec
test
dec
jae
ds
lret
pop
sub
inc
mov
add
loopne
push
adc
mov
pushf
outsb
push
dec
push
fmull
ret
aas
xor
xchg
dec
in
sbb
push
push
inc
dec
push
push
jp
idivb
pop
imul
inc
aas
das
sub
and
mov
jns
inc
adcl
neg
test
or
jle
out
das
jl
mov
jnp
inc
test
movsl
les
mov
pop
xchg
loopne
je
and
insb
insb
jecxz
out
pop
xorb
or
rcll
lret
dec
lcall
imul
fsubrs
and
push
arpl
push
movsl
pop
enter
jmp
jno
lock
dec
and
sub
shrl
mov
push
fisttpl
pop
rclb
add
dec
cmpsl
xor
mov
adc
aad
push
jno
leave
pusha
lock
js
aad
xlat
mov
pop
iret
xchg
cmp
je
cwtl
cmpsl
sbb
lea
pop
roll
jl
mov
push
pusha
outsl
cmpl
mov
jmp
in
jns
mov
add
mov
push
rcr
xor
ret
lock
mov
and
les
jl
xchg
bound
cs
push
push
addr16
or
mov
movsl
mov
dec
mov
pop
push
rcl
xor
aas
add
add
imul
movsb
daa
push
mov
inc
adcb
ljmp
sbb
or
cmp
add
sub
lea
push
pop
or
pop
cmp
incb
or
cld
jmp
inc
subl
movsl
pop
inc
scas
rcll
enter
mov
or
enter
inc
inc
neg
add
xor
xchg
movb
dec
inc
repz
inc
inc
push
xchg
add
cmp
nop
lea
arpl
sti
inc
outsl
inc
pop
jb
or
inc
xor
add
orb
ljmp
mov
mov
add
mov
add
or
scas
mov
insb
ss
adc
je
or
inc
xor
dec
push
jae
sbb
cld
pop
in
push
adc
dec
aas
inc
shll
aam
inc
dec
dec
cmp
mov
xor
sbb
popa
pop
push
dec
dec
test
xor
inc
orl
mov
jmp
jge
ret
sub
and
mov
push
sbb
xchg
sub
or
pop
cmp
aas
xchg
mov
or
push
cmp
movsl
add
enter
add
add
or
add
jb
jmp
clc
sub
sub
sbb
pop
repnz
pop
pop
pop
je
push
push
xor
xor
or
insb
sub
cs
js
mov
repnz
mov
imul
enter
pop
or
push
pop
sbb
sbb
dec
pop
xchg
xchg
pop
sbb
sub
or
jo
cmp
cs
pop
cld
sbb
xor
ja
dec
imul
into
sbb
dec
inc
jb
jbe
imul
or
pop
je
pop
cwtl
lcall
pop
stos
fcom
jnp
jle
lsl
fidivrl
das
inc
aaa
dec
sub
push
enter
add
inc
ja
xor
mov
inc
add
fisttps
push
xor
outsb
add
popf
in
jnp
push
pop
and
insb
push
adc
fidivl
xor
pop
adc
lcall
mov
xor
or
cmp
hlt
xor
into
loopne
test
jo
dec
outsb
iret
sbb
xor
popa
lcall
cmp
xchg
or
inc
orb
lea
jp
dec
push
arpl
pop
enter
in
dec
push
add
add
push
imul
add
andl
or
mov
adc
arpl
flds
push
outsl
mov
add
aam
prefetch
dec
ss
mov
movsl
sbb
out
mov
xor
inc
std
das
mov
pop
or
leave
nop
mov
or
data16
into
sub
in
inc
shl
int
pop
add
cmp
push
mov
push
adc
or
or
push
jbe
pop
sbb
jb
pusha
xor
lcall
inc
adc
fimull
imul
pop
sub
xor
divb
and
xchg
mov
mov
imul
outsb
jne
sbb
pop
mov
jbe
add
sahf
push
or
add
or
pusha
ret
out
stc
lret
pop
sbb
or
mov
pop
adc
adc
arpl
ss
mov
je
dec
and
push
gs
pop
adc
imul
adc
cltd
sar
and
andl
mov
test
mov
jne
mov
or
xor
jb
jb
or
mov
or
jmp
into
cmpsl
or
scas
push
outsb
push
pop
xor
outsl
cmpb
sbb
pop
ds
add
dec
dec
xor
fstl
push
xchg
arpl
dec
imul
or
add
mov
or
mov
bound
push
rcr
notl
and
xchg
inc
lods
sbb
jo
xchg
adc
sub
out
dec
and
add
or
lock
pop
adcl
loopne
test
add
or
lock
ja
fldl
add
mov
pop
mov
inc
popa
dec
inc
cwtl
jae
or
add
xor
xor
dec
addr16
jo
cmp
fs
mov
mov
push
jo
lds
or
sbb
adc
adc
or
pop
cs
js
outsb
add
add
in
incb
jns
testl
sub
cwtl
push
add
lods
xor
add
inc
sbb
imul
adcl
cmp
add
add
add
lcall
adc
sbb
and
sub
add
adc
addl
mov
add
fs
add
cs
add
dec
add
mov
and
lar
out
inc
or
mov
scas
dec
das
mov
jg
ljmp
ljmp
jmp
loope
call
and
add
idivb
ds
stos
push
jnp
shlb
jl
jge
stc
cmp
es
pusha
in
cmpb
stc
xor
int3
add
lods
sub
lahf
movsb
sub
aam
sbbl
fwait
int
test
xchg
mov
out
fsts
dec
orl
sbb
pushf
mov
pop
mov
push
in
cmp
cmpsb
jns
push
push
inc
lods
mov
ja
pop
jne
int
cmp
ja
inc
cld
jge
mov
sbb
mov
dec
out
sarl
in
out
inc
loopne
jp
je
pop
pop
dec
sbb
imul
ds
cmp
xchg
or
and
pop
xchg
and
and
sub
fcompl
push
aam
popf
inc
lods
imul
add
or
shlb
fs
hlt
add
and
add
sbb
fld
adc
arpl
cwtl
or
and
js
adc
inc
adc
push
sbb
nop
ljmp
and
xor
fmuls
dec
inc
insb
mov
push
dec
sub
xchg
inc
and
adc
xor
jmp
int3
xor
test
or
sbb
std
xchg
sbb
adc
sub
pop
xor
sbb
sub
inc
loopne
pop
sbb
xchg
out
nop
jno
fcoml
sbb
in
inc
fldenv
push
sbb
push
flds
add
mov
aad
scas
add
or
cwtl
loope
cmpsb
jo
sahf
or
imul
je
xchg
cmc
dec
push
xor
enter
or
xchg
lret
adc
and
inc
sahf
push
mov
out
movsl
nop
adc
push
xchg
inc
repnz
adc
rcl
jnp
xchg
and
push
je
inc
outsb
push
test
and
or
sarb
fldt
ret
popa
pop
mov
lds
out
pop
mov
push
es
or
pushf
push
add
cmp
daa
sub
add
sub
sub
sub
add
or
mov
xchg
in
rclb
mov
ljmp
cld
pop
push
arpl
pop
sbb
xlat
dec
add
inc
push
orb
sbb
inc
inc
adc
popa
xchg
test
sbb
add
adc
push
orb
pop
mov
pop
aam
pop
and
fwait
jne
jne
add
xor
hlt
aas
jbe
ja
xchg
je
add
addb
test
jb
cmp
out
or
inc
nop
sbb
pop
jo
sub
xor
cmpsl
jl
sbb
jb
jl
sbb
xchg
sbb
sbb
stc
mov
daa
cmp
test
pop
push
push
or
pop
adc
xor
les
fcompl
dec
ss
imul
add
push
xor
mov
popa
loopne,pt
or
inc
fildll
xor
je
repnz
je
cmp
jo
add
les
add
rcrb
aam
mov
jge
cmp
ss
xchg
sahf
mov
aas
movsl
dec
mov
jmp
cmp
pop
dec
push
hlt
jo
sbb
pusha
xchg
add
mov
dec
or
push
pop
push
jno
pop
inc
test
lods
push
sbb
mov
push
and
pusha
add
inc
pop
xchg
test
jo
xlat
cwtl
nop
dec
iret
scas
jae
fsubs
test
stos
gs
mov
sub
and
dec
xchg
mov
into
sarb
xchg
inc
sarb
adc
push
mov
push
sbbb
sar
push
ret
adc
inc
cmp
dec
inc
nop
orl
mov
sbb
mov
lcall
add
popf
addl
and
sub
dec
jnp
enter
in
push
add
dec
je
sti
out
cmp
dec
add
incl
and
nop
add
jne
dec
mov
and
dec
mov
dec
cmpb
js
inc
push
shr
dec
inc
popa
test
jbe
loopne
adc
fimuls
cmpsl
inc
fwait
xor
call
adc
cltd
ret
sbb
push
or
pop
push
sbb
dec
jb
sbb
pushf
out
jns
mov
or
mov
clc
sub
test
push
add
pop
repnz
lock
nop
lock
add
sbb
inc
int3
add
bound
cs
xor
addb
dec
pop
subl
call
push
or
push
pop
jge
cmp
sbb
cs
sbb
out
jge
popa
pusha
and
test
inc
inc
loopne
cmpsb
addb
pop
enter
dec
pusha
add
nop
stos
into
and
push
push
add
repz
add
mov
test
lock
jno
push
dec
sahf
lcall
in
dec
pop
pushf
or
fs
cmpsl
pop
sub
rcll
adc
push
push
mov
xor
rcl
shl
and
and
jmp
sti
mov
test
mov
hlt
dec
jnp
sbb
lods
push
in
xlat
je
ret
sahf
xlat
ljmp
out
xor
inc
out
mov
test
lret
add
lahf
out
movsb
push
add
pop
inc
mov
lock
sahf
ss
pop
mov
popf
sub
sysret
repnz
shrb
pop
push
mov
cmp
outsb
nop
nop
sbb
ds
lcall
inc
outsb
cmc
ja
dec
mov
mov
xchg
sbb
mov
fsubl
and
sub
xchg
pop
cmp
shll
sbb
mov
pop
and
jle
subl
xchg
nop
js
mov
cmpl
in
out
sbb
out
insb
push
jo
pop
sbb
enter
and
pop
xor
inc
outsb
aaa
xor
push
andps
and
mov
sub
rclb
mov
or
loopne
sahf
nop
ja
and
mov
ret
cld
pop
in
sub
imul
jo
sub
rolb
loope
add
add
push
in
repnz
loopne
mov
adc
or
daa
xlat
xor
insl
mov
adc
inc
add
cmp
add
mov
sbb
dec
scas
sbb
sub
es
lods
sub
add
aam
out
sti
xor
int
cmpb
arpl
cmp
jg
xchg
add
push
imul
fneni(8087
push
sub
or
je
and
push
push
inc
push
xor
cmp
add
adc
lock
xchg
push
scas
jmp
sbb
xchg
shll
mov
mov
inc
add
call
or
xor
in
mov
or
or
jmp
into
sti
jmp
adc
jb
or
push
or
sbb
or
xchg
lcall
mov
lea
xor
rcll
enter
enter
lock
mov
sbb
xchg
mov
sub
fdivrs
xor
push
mov
mov
shlb
hlt
xor
adc
pop
adc
fidivs
hlt
mov
fnstsw
xorl
add
pop
jl
lods
and
push
inc
cli
pop
xchg
add
or
adc
add
stos
jnp
sahf
mov
shl
adc
jno
and
mov
mov
mov
mov
subb
push
push
xor
sbb
xlat
and
xlat
xchg
dec
lret
cli
sbb
inc
stos
ss
push
roll
das
test
inc
cmp
ret
mov
adc
mov
xchg
into
adc
or
cmp
pop
sub
in
mov
movnti
mov
mov
push
jns
daa
mov
lods
xchg
daa
xchg
es
and
cmp
adc
ret
arpl
xchg
inc
iret
arpl
cmovs
xchg
adc
jo
push
stos
adc
mov
jle
inc
inc
rdmsr
pop
sub
fs
mov
insb
jae
mov
sbb
adc
and
shr
adc
dec
fs
cmpsb
jno
xchg
xchg
sub
mov
add
sbb
sbb
sbb
dec
faddp
fnstsw
lods
mov
je
mov
jae
call
and
or
push
loopne
jo
xchg
push
sub
inc
inc
inc
popa
jns
scas
add
add
lret
jae
add
adc
and
sub
xorl
xchg
adc
mov
imul
cwtl
xchg
ret
cwtl
mov
cs
sub
dec
jae
adc
add
imul
and
mov
add
mov
mov
ljmp
sbb
loope
pop
addr16
add
movsl
test
lea
popa
mov
xor
rolb
jns
mov
loop
movsb
mov
add
add
adc
aaa
push
sbbl
mov
sbb
and
pop
mov
mov
ret
xchg
test
sbb
mov
or
sarl
jno
inc
or
int
or
push
in
or
fisttpl
xchg
xchg
add
or
sbb
sub
push
mov
insb
push
inc
add
sbb
mov
add
mov
adc
inc
pusha
mov
push
add
mov
inc
das
int
test
sbb
or
movsb
xchg
mov
or
bound
pop
xchg
dec
push
dec
fwait
imul
movsb
add
ljmp
push
adc
icebp
pop
ret
or
andl
mov
jns
inc
jmp
cs
add
xor
jl
neg
adc
loope
ficomps
push
inc
dec
or
and
dec
mov
aaa
inc
inc
mov
fisubl
add
add
fists
enter
roll
pushf
mov
inc
dec
dec
jecxz
das
and
sub
sub
add
test
lret
sub
fsubrs
mov
and
cmp
cmp
xor
push
push
cmp
popa
mov
pop
jmp
test
mov
sub
sub
outsl
adc
add
push
test
adc
fcoml
mov
cmp
fdivrs
pop
mov
and
add
sbb
in
lods
mov
leave
inc
add
lock
and
cmp
inc
cmp
outsb
mov
cmc
shrl
xchg
mov
test
sti
or
icebp
xor
pusha
mov
test
test
icebp
push
sbb
mov
ljmp
pop
hlt
neg
jmp
pushf
nop
mov
arpl
je
sbb
imul
jno
sbb
test
addr16
es
inc
sub
and
push
mov
out
add
jbe
mov
movsb
out
fsts
sub
cmpsb
cmp
es
gs
or
and
and
pop
xor
inc
adc
sub
je
test
aas
repnz
sbb
mov
lock
call
in
jp
inc
fs
lret
jne
les
add
add
in
js
adc
in
out
call
insb
adcl
aam
xchg
popf
inc
sub
loopne
cwtl
push
in
cmp
cmove
test
jmp
inc
inc
or
pop
cmp
sti
adc
ret
sti
jmp
lret
add
lock
inc
mov
repz
cmpb
push
pop
cld
loope
jae
test
sub
xor
loopne
imul
xor
shll
fcoms
sub
push
xor
jle
push
mov
mov
and
adc
fcom
shlb
ss
lret
insb
pusha
mov
inc
xchg
jl
mov
imul
push
mov
gs
ljmp
mov
push
inc
bound
movsb
aam
sub
aad
push
fs
cmp
rcl
dec
and
mov
add
inc
outsl
jle
dec
sti
lds
xor
notl
lret
push
dec
int3
pop
dec
test
or
imul
push
sub
and
stos
inc
fcomps
gs
adc
jg
mov
andb
js
push
repnz
adc
push
mov
and
xor
and
adc
in
inc
scas
cmp
je
mov
push
in
pop
cld
push
dec
inc
clc
xchg
cmc
pop
push
sub
sub
pop
pop
push
lret
cld
jo
lret
or
js
xchg
sbb
inc
adc
or
dec
push
adc
push
mov
add
add
cmpsb
mov
je
pop
dec
sub
call
addl
enter
les
sbb
loop
rcl
lock
mov
add
push
xchg
xchg
mov
imul
mov
cmp
bts
and
les
xor
xor
js
jae
outsb
mov
mov
fldl
inc
jb
test
inc
imul
sub
xor
orl
ret
cmp
sub
jbe
sbb
rolb
mov
cmp
pop
imul
test
sbb
andb
pop
test
cld
mov
addr16
cld
jo
or
pop
and
sarb
xchg
xor
cmp
xchg
mov
pop
pop
test
jb
out
sbb
pop
inc
lahf
repz
rolb
mov
ja
cmp
clc
mov
cltd
add
push
cmp
xor
clc
pop
movsl
push
mov
stos
or
fdivs
pusha
and
add
add
adc
or
mov
pusha
imul
repnz
push
xor
mov
pop
push
or
xor
xchg
push
fnstenv
mov
mull
sbb
or
and
cmp
fsubl
or
or
push
aam
adc
cmpsl
lcall
pop
sbb
add
xchg
mov
mov
pop
into
test
mov
push
sub
inc
mov
adc
xor
push
adc
es
or
and
fistpl
xchg
inc
cmpsl
shlb
jo
jne
out
mov
xor
sbb
aaa
jmp
ret
js
and
and
pop
xor
lods
int
ss
imul
sbb
in
dec
lock
xor
jecxz
rorl
jbe
cmp
test
cvttps2pi
push
mov
fwait
rolb
scas
ret
push
and
inc
cmpsb
int3
ss
ror
add
sub
cmpsl
mov
and
push
jno
adc
jns
lods
mov
xor
inc
add
mov
adc
jnp
adc
xchg
pop
je
mov
adc
popa
lock
inc
mov
sbb
pop
inc
emms
push
xchg
das
and
cmpsl
mov
pusha
sub
cwtl
or
pushf
fcmovne
inc
adc
mov
out
and
in
pop
cmp
orl
pandn
sub
or
fucomi
pop
dec
outsl
push
push
inc
insb
in
inc
and
dec
sbb
loopne
icebp
sbb
adc
rcl
imul
mov
mov
outsb
xchg
pop
mov
loopne
add
sar
cmpsb
loope
or
mov
inc
xchg
loope
xchg
rcrl
pop
add
xlat
sbb
inc
add
or
sbb
mov
sbb
xchg
int3
dec
ret
pop
xchg
outsb
vsqrtss
push
adc
aad
aaa
ss
popf
mov
loop
popl
jnp
fdivrp
outsl
or
lds
sbb
out
sbb
pop
mov
shrl
mov
pop
push
jle
mov
nop
fstps
push
inc
sti
mov
sbb
sbb
xchg
pop
inc
cs
enter
das
jns
inc
xor
adc
jnp
and
inc
std
adc
sbb
lea
stos
inc
fcompl
insb
jge
jb
je
and
push
ds
and
or
in
add
pop
and
mov
and
push
ljmp
repnz
fs
xorb
xor
imul
scas
repnz
lods
push
out
sub
mov
and
xchg
pop
xor
inc
dec
jmp
xor
pusha
shlb
and
hlt
pop
stc
xor
fwait
in
jge
cltd
popa
xor
pop
popa
mov
sbb
adc
out
fs
add
fimuls
outsl
sbb
and
adc
inc
push
push
dec
mov
les
jge
sbb
andb
dec
repz
xor
dec
clc
cli
push
push
ss
push
neg
mov
mov
into
arpl
sarb
jo
arpl
mov
or
scas
roll
fs
test
sbb
cmp
mov
ret
js
xchg
cmp
loop
add
dec
adc
mov
xchg
jb
push
jb
push
dec
sub
mov
cmp
add
mov
or
and
in
add
fistps
ret
mov
add
dec
out
mov
test
add
mov
mov
add
xchg
ds
or
sub
pop
adc
sbb
or
sub
sbb
add
xor
jl
scas
dec
and
and
jmp
add
out
push
cmp
cmp
xor
add
xlat
mov
xchg
cmp
ror
icebp
mov
pop
jo
frstor
test
xchg
daa
test
mov
xchg
call
push
fcmovb
fists
lea
inc
add
les
insl
loope
lock
push
rcrb
and
movsb
fadd
dec
lds
daa
orl
and
adc
mov
adc
movb
pop
cmpsl
add
mov
cmp
dec
repz
pusha
jno
jae
jns
pusha
add
mov
push
inc
es
inc
or
mov
nop
sbb
es
mov
push
loopne
cmpsb
mov
or
movsb
jmp
mov
jge
push
or
push
stos
cmpsl
push
int3
adc
adc
cmp
clc
fimull
or
aas
jb
xor
movl
adc
adc
iret
sbb
sub
mov
jp
push
jl
hlt
inc
sbb
cmp
lods
cmpsb
or
cmp
jp
mov
js
xchg
mov
test
and
cld
mov
stos
loopne
or
xor
test
cwtl
cmp
dec
or
inc
mov
add
jo
fadds
into
inc
aam
mov
lea
mov
add
jbe
in
cmp
and
enter
shlb
add
test
sub
imul
pop
cmpsl
push
adc
push
add
es
inc
adc
stos
pop
cmpsl
fists
addb
jg
arpl
in
mov
and
pop
xchg
and
mov
mov
pop
cltd
and
inc
mov
or
addl
mov
mov
nopl
sbbb
dec
int3
mov
ss
or
add
mov
testb
cmp
cld
dec
lods
das
push
jbe
sub
sbb
pop
mov
ljmp
fldl
dec
adc
iret
xchg
add
mov
xorl
int
test
call
adc
xchg
xchg
adc
sub
pop
inc
inc
jg
cmp
insl
and
cmp
inc
nop
int
xorl
xchg
sbb
in
cmp
sbb
scas
bnd
aaa
dec
pop
lods
inc
inc
mov
mov
mov
or
inc
cld
adc
lock
jne
mov
stos
fcoml
hlt
cmp
mov
sti
rolb
imul
mov
orb
ret
mov
xor
cmp
nop
xor
mov
inc
push
sub
push
cmp
inc
mov
out
mov
std
adc
cmp
cmp
xchg
ret
pop
mov
cmpsl
in
repnz
or
and
or
or
je
mov
nop
push
pop
mov
pop
enter
or
and
sub
adc
xor
int
push
xchg
shr
push
sbb
xchg
adc
mov
and
sub
jecxz
push
and
push
cmp
mov
xor
xchg
rolb
out
cmp
sarl
inc
push
sub
dec
mov
xor
and
push
jb
adc
sbb
inc
ljmp
or
pop
rol
add
and
mov
or
aaa
lcall
mov
mov
ret
inc
cmp
inc
inc
cltd
nop
add
dec
lock
in
mov
fwait
mov
inc
jge
call
je
out
add
cs
jmp
nop
add
xor
inc
jbe
lods
fwait
xor
push
cmp
cltd
push
enter
and
add
mov
add
ss
movsb
add
out
mov
or
nop
push
adc
les
cmp
aaa
adc
cs
xchg
mov
outsl
aaa
xchg
nop
outsl
adc
punpcklbw
pop
or
adc
dec
enter
pop
and
repnz
jns
push
inc
mov
push
cs
rcl
pop
add
es
pusha
xor
cmpsl
rcl
mov
mov
mov
xor
or
dec
and
jae
mov
mov
ret
stos
ret
nop
aas
adc
sbb
sahf
dec
jns
mov
lods
sub
cmp
dec
mov
test
push
sub
test
dec
mov
test
je
xor
call
cmp
xchg
add
cmc
sbb
pusha
push
imul
pop
mov
lds
push
mov
xchg
mov
shll
lods
xor
mov
addr16
movsl
addr16
sub
xchg
test
data16
inc
or
test
pop
fs
xchg
lea
push
inc
inc
cmpb
xor
arpl
icebp
sub
pop
leave
rorb
cmp
and
add
inc
outsb
test
adcl
xlat
fiaddl
xor
add
leave
out
mov
add
add
add
and
pop
cmp
or
ss
adc
add
pusha
std
daa
push
sub
sub
cmp
mov
mov
push
insl
lcall
cli
mov
sub
andl
add
add
inc
pop
inc
and
test
inc
lods
and
and
xchg
lahf
cmpb
xchg
add
lods
add
dec
inc
aad
or
xchg
adc
and
fdivl
subb
movsb
mov
sbbb
or
push
mov
sbb
or
adc
lds
sub
cwtl
push
adc
xor
dec
jno
test
xor
xchg
cmp
ja
lcall
add
adc
xor
call
int3
sbb
jb
or
outsl
adc
jne
invd
fisubl
ja
les
ja
sbb
pop
daa
stos
or
lret
mov
pop
mov
sahf
add
add
mov
xchg
xchg
in
or
enter
orb
jmp
andb
rolb
cmp
xchg
push
add
push
and
mov
scas
addr16
cmp
xchg
notb
dec
adc
pop
and
inc
nop
popa
and
leave
or
rorb
ret
jno
ret
sbb
in
push
sbb
jne
pop
cmp
cltd
icebp
jne
mov
aaa
add
or
push
sub
add
int3
and
or
invd
daa
mov
or
adc
andl
inc
push
or
cmp
cli
adc
outsl
xor
enter
cli
inc
imul
scas
stc
adc
dec
or
add
sbb
push
pop
in
push
push
and
ret
lcall
aam
dec
add
sub
fwait
lret
add
shrl
mov
inc
push
movsb
lock
sbb
xlat
inc
and
dec
add
rcr
hlt
fisttpl
adc
test
movsl
popa
mov
int3
aaa
les
es
pushf
cmpb
shrl
pop
add
dec
add
nop
and
xor
xchg
rorl
add
negb
sub
popa
cltd
iret
je
sbb
cmp
mov
xor
add
dec
arpl
mov
gs
jo
lods
and
iret
lret
add
lock
sub
jle
js
in
inc
stos
mov
mov
jo
and
mov
xor
pop
loope
inc
add
cmpb
repnz
scas
inc
push
inc
push
cmp
mov
mov
push
cs
in
sahf
lods
push
inc
add
xchg
test
orb
xor
dec
sbb
inc
add
add
or
sub
gs
inc
imul
xchg
pop
loop,pn
push
nop
cltd
pop
adc
fdivrs
or
insb
loopne
or
add
stc
mov
dec
inc
in
rolb
clc
cmp
lock
std
enter
mov
in
mov
mov
in
hlt
mov
xchg
xchg
jp
add
lock
stc
in
xchg
add
inc
mov
xor
jae
ds
pushf
add
pop
push
out
outsl
pop
mov
sbb
cwtl
sub
pushf
jbe
daa
shll
push
lock
pop
sbbb
dec
or
loope
pusha
add
dec
enter
adc
or
jns
dec
inc
lock
and
and
push
daa
or
test
add
imul
xor
xor
sub
adc
aam
out
repz
adc
add
mov
mov
add
xor
inc
or
dec
ss
adc
jno
sub
into
mov
push
or
sub
mov
sub
sub
pop
add
imul
scas
add
adc
push
inc
lods
pop
push
stos
pop
dec
and
add
mov
mov
inc
inc
adc
pop
push
adc
xchg
jbe
cmp
flds
decl
fistpll
in
pop
lahf
xor
dec
movsb
add
add
shrb
inc
mov
movsb
add
loopw
mov
clc
dec
dec
in
dec
test
loope
xchg
mov
ret
dec
dec
rcll
mov
cmpsl
push
mov
push
lock
rcll
inc
xchg
lea
inc
lods
add
sbb
mov
nop
or
fsts
mov
outsb
stos
add
dec
imul
add
jmp
ja
fxsave
stc
push
andl
add
inc
cli
ss
mov
imul
ja
xchg
push
push
push
pop
pop
icebp
dec
xor
or
test
data16
cmpsl
lds
mov
mov
push
pop
adc
or
mov
pop
jo
or
shll
js
js
sub
xchg
push
mov
push
das
jbe
pop
add
out
inc
or
icebp
mov
pop
rclb
in
pop
and
add
add
push
push
gs
jmp
sbb
push
movsl
lock
adc
cmpsl
push
xchg
mov
mov
mov
cwtl
sub
outsb
adc
sbb
mov
or
mov
clc
push
xchg
sarb
pop
lea
xchg
xor
or
add
or
and
adc
clc
mov
and
andl
gs
test
mov
enter
adc
gs
mov
sarb
add
add
sahf
adc
xor
adc
push
movl
aam
jmp
ss
ficomps
fcoms
fsubr
or
fsubl
add
add
ficoml
or
cli
inc
sahf
xchg
mov
adc
add
or
add
or
add
or
cmp
aam
push
rolb
cmp
mov
pop
mov
pop
loopne
and
out
or
test
or
and
jne
inc
and
inc
and
push
rcll
arpl
dec
push
push
pop
stos
and
or
sti
or
mov
push
test
subl
sbb
and
jg
cmp
mov
adc
jle
andl
mov
mov
mov
aaa
mov
sub
les
enter
lods
xor
jle
lea
pop
repnz
push
jb
push
dec
push
push
pop
sbb
fldt
test
or
jne
orl
or
add
insl
les
imul
fisttpl
je
aaa
adc
or
sbb
jae
lods
mov
mov
inc
add
ret
push
push
or
call
or
pop
dec
cmp
je
adc
inc
shrd
push
sbb
adc
mov
test
jnp
lods
jno
test
mov
cmpb
or
xchg
xchg
and
in
mov
add
mov
add
xor
or
mov
xchg
sub
and
cmp
mov
xor
fsts
push
push
or
popa
mov
pusha
mov
push
xor
movsw
cmp
cld
push
mov
fcoms
inc
xchg
hlt
das
push
or
push
mov
movsb
dec
nop
mov
leave
inc
pop
mov
pop
mov
stos
add
add
cmpsb
adc
rcrb
jp
cld
pop
mov
test
test
dec
cmp
je
add
adc
adc
cmp
ss
or
inc
shll
sbb
outsb
or
outsl
sub
adc
jno
jo
shrb
movb
shlb
or
adc
and
pop
mov
pop
and
adc
loop
jmp
aaa
and
mov
and
sub
js
inc
mov
push
pop
xchg
cmp
mov
or
add
dec
pop
pop
jg
imul
jl
push
push
outsl
rcr
dec
dec
add
jo
mov
xchg
add
push
sub
mov
or
cld
jno
mulb
dec
sub
add
and
add
movsb
dec
test
and
pop
or
inc
add
push
loopne
xor
orps
lcall
movsb
cwtl
cmp
or
cmc
cmp
jno
test
adc
jnp
imul
es
shll
cmpsl
ret
es
sbb
insb
lahf
aas
cmpsl
test
jno
xchg
mov
add
jne
js
insl
inc
and
dec
sbbb
mov
fsubl
movsl
loopne
dec
inc
outsl
push
sbbb
add
push
add
pushf
push
adc
push
cmp
cmp
xchg
mov
in
sub
iret
imul
inc
mov
cmpb
cmpl
xor
and
lods
orl
pop
add
test
lds
and
xchg
push
push
push
inc
xchg
out
fcmovnb
mov
rcrl
jecxz
mov
dec
rolb
xchg
pop
add
ljmp
ret
lret
adc
cmp
dec
add
cmp
xchg
cmp
mov
inc
jo
jl
test
shll
xor
pop
das
dec
inc
daa
fdivs
push
mov
and
or
lock
adc
or
cld
jne
rolb
pop
addr16
es
push
cmp
adc
add
mov
pusha
cmpsl
sub
push
or
xor
pop
add
or
cmp
inc
testl
pop
mov
push
jno
ret
loop
cmpsl
xchg
mov
add
adc
aaa
out
push
push
pusha
jmp
cmp
pop
mov
inc
sbb
repz
sbb
rolb
enter
lahf
add
add
pop
mov
lea
and
xchg
getsec
and
cmp
popa
subb
jo
fsubs
dec
jmp
sub
or
dec
cmp
mov
xchg
movsl
packssdw
jle
lods
sub
and
and
push
adcb
iret
lret
cmp
repnz
pop
in
adc
call
pmullw
das
xchg
xor
jae
imul
mov
imul
scas
jmp
inc
cmove
jl
adc
mov
and
add
push
and
ds
sarl
in
add
and
push
add
lea
stc
js
push
or
pusha
sbb
inc
lcall
orb
test
push
push
jo
js
ret
inc
movb
adc
lcall
pop
cltd
cmp
popf
cmp
jne
xchg
dec
and
jo
fadds
and
cmp
xor
or
cmp
jae
jecxz
aas
mov
shr
rcrl
xor
popa
mov
sbb
sbb
pop
popf
and
loopne
sub
push
pop
in
insb
nop
inc
cltd
pop
movsb
out
inc
xchg
inc
adc
xchg
cmpl
xor
xchg
jp
add
out
adc
mov
inc
jns
add
jo
push
xor
aam
adc
subl
aas
jo
mov
inc
xchg
add
and
mov
add
or
sbb
inc
inc
nop
inc
in
je
dec
imul
insb
in
or
rclb
jp
sub
push
loope
les
add
lods
sub
push
pop
mov
inc
jb
loopne
mov
pop
xchg
fisubs
call
pop
and
cmp
sti
dec
pop
sub
or
jae
sub
jecxz
test
movsb
pop
mov
sub
sub
cmc
and
loopne
cmove
lods
pusha
pop
dec
lcall
push
or
sub
pop
push
sub
add
push
dec
mov
dec
add
sbb
add
push
xor
push
outsl
pusha
jmp
push
inc
mov
in
add
mov
pop
cmp
imul
inc
add
push
mov
sub
pop
fsubs
cltd
into
fisttps
dec
pop
cld
adc
fstps
mov
pop
ret
test
lret
or
sub
inc
push
decl
pop
loope
pop
cmp
insb
lahf
adc
mov
add
cmpb
loopne
and
pop
adc
test
push
add
push
push
mov
gs
fstl
ljmp
gs
cmc
cmp
rcrl
mov
sbb
je
mov
xchg
sbb
add
pop
addr16
jo
adc
fldcw
push
inc
imul
push
scas
cmc
inc
xor
or
xchg
and
out
mov
push
push
sbb
pushf
add
and
push
pop
push
out
into
pop
dec
push
jne
mov
dec
adc
sbb
push
lret
push
lock
clc
and
jne
and
sub
add
jmp
sub
xor
sbb
adc
push
mov
daa
scas
je
pop
cs
inc
or
jo
jmp
cmp
testl
sbb
mov
adc
fucomp
or
xor
sub
push
and
addb
mov
mov
shl
mov
xchg
je
aad
addr16
cld
mov
sub
push
and
add
or
dec
ljmp
adc
push
sbb
jg
pop
movsl
popf
aad
or
or
lea
add
dec
or
xchg
out
fidivrs
ljmp
add
sub
pop
xchg
mov
jne
adc
loope
add
push
push
sbb
xor
jae
aaa
out
adc
cmp
dec
and
es
orl
sbb
mov
adc
sub
mov
sbb
aas
pushl
push
lock
mov
lds
repz
shll
push
mov
inc
pop
test
adc
or
sbbb
sub
add
dec
xor
cli
adc
and
mov
ret
ret
int3
outsl
dec
mov
roll
cmp
push
js
inc
or
lret
pop
outsl
fcos
imul
and
push
es
sub
dec
sub
push
mov
push
es
add
fadds
mov
or
push
mov
mov
pop
cmc
mov
push
and
addb
xchg
dec
loopne
cld
jns
imul
push
mov
xor
daa
in
sbb
mov
or
call
sbb
insl
lds
orl
sbb
mov
xchg
popf
adc
inc
dec
outsb
inc
fiaddl
orl
mov
sbb
add
popa
jle
and
inc
dec
add
mov
aas
stc
dec
cs
lcall
fwait
movsb
fdivs
xchg
add
mov
lods
test
dec
or
mov
adc
add
in
sar
or
jae
dec
sti
add
call
dec
rcll
sbb
add
jnp
dec
clc
and
add
ret
and
bswap
es
out
roll
mov
xor
push
cli
mov
sbb
movsl
pop
incl
idiv
dec
sub
xchg
sbb
mov
in
inc
jb
outsl
fs
call
lahf
add
imul
ljmp
aam
xlat
and
daa
jb
add
push
cwtl
xor
xor
jmp
sbb
jno
ficompl
push
push
clc
adc
inc
fwait
sbb
aas
xchg
jo
sti
xchg
mov
pop
pushf
cmpsb
push
movsl
popf
int
movsb
fmuls
mov
xlat
and
add
arpl
adcl
mov
cmc
and
ja
test
and
je
shrl
add
mov
and
dec
repnz
cmova
jne
or
sbb
test
stc
jmp
cmp
inc
sbb
andb
sbb
cmp
je
jl
adc
in
push
inc
cmp
je
aad
dec
or
aam
adc
lea
pop
ficoms
adc
mov
mov
ja
gs
enter
jo
inc
and
sbb
fisubs
sbb
popf
fs
inc
dec
dec
jae
mov
xor
push
mov
xchg
or
xor
jmp
test
ss
incl
xorb
loopne
jge
repz
jge
pop
xchg
mov
pop
add
fs
sub
push
mov
sbb
les
xchg
fildl
lea
jno
jp
cltd
nop
dec
dec
jmp
and
mov
pop
les
xchg
or
push
or
mov
repnz
cltd
js
add
cmpsl
mov
js
mov
mov
loop
xor
outsb
inc
ficoml
std
dec
add
mov
insb
push
mov
mov
imul
jmp
and
fs
jmp
out
hlt
mov
mov
lds
jmp
lldt
dec
xchg
xchg
fs
out
xor
lahf
inc
call
pusha
dec
dec
sbb
or
stc
and
and
call
cmp
cltd
mov
fistl
inc
loop
addb
outsb
sub
sub
adc
inc
not
and
pop
imul
or
xchg
fadd
imul
sbb
cmpsb
and
rolb
or
push
and
jbe
sub
xor
sub
xchg
mov
and
bound
inc
insl
push
cmp
dec
dec
dec
push
hlt
adc
sub
dec
mov
add
jmp
push
or
dec
aaa
cmpl
or
cmp
or
shrb
sahf
mov
loope
add
or
sbb
mov
js
out
rcll
iret
xor
adc
lret
data16
jmp
sbb
rorb
jns
pop
mov
cmpl
add
je
out
test
jnp
je
dec
cmpb
mov
fnstcw
stos
jns
rolb
xor
sbb
icebp
pusha
cmp
insl
adc
cmp
inc
stc
mov
jb
and
out
lock
ds
cmp
add
jl
sub
push
ret
je
inc
or
fmul
xchg
xor
add
push
mov
adc
xor
add
and
pop
add
xor
and
and
add
push
add
add
cmp
fimuls
cmpsl
mov
leave
in
arpl
jp
aaa
mov
adc
xor
clc
movb
pop
subl
xor
call
dec
inc
gs
in
inc
or
bound
std
cmp
add
dec
xor
imul
jmp
outsl
inc
xchg
cmp
mov
jne
sbb
sub
in
lea
sub
pop
sub
icebp
and
pop
les
mov
xor
jo
xchg
arpl
push
inc
bound
sub
cmpsb
push
ds
sub
dec
or
dec
add
sub
sub
out
fiadds
pop
sti
xchg
leave
lods
cmp
jp
mov
xchg
xchg
pop
stos
dec
cwtl
ror
rcrl
and
or
aam
out
cmp
pop
test
dec
dec
jecxz
rclb
cmp
roll
adc
push
data16
imul
jg
dec
mov
int
aam
jge
addr16
dec
add
xor
push
insl
sbb
xor
jnp
or
mov
push
das
ficompl
jmp
push
ja
xchg
push
fwait
push
jae
pop
mulb
fs
fs
or
push
push
push
mov
rcll
mov
repnz
sub
scas
push
push
push
movsl
gs
or
adc
adc
stos
lret
push
xor
pop
or
dec
push
pop
orl
mov
push
inc
push
fcoml
mov
and
xor
fisttpl
sbb
push
inc
pop
mov
add
aaa
test
icebp
ret
xor
push
sbb
nop
outsb
sbb
add
cmp
cmp
or
les
aaa
add
ficompl
jb
xchg
mov
push
adc
or
lahf
les
push
insb
adc
cmp
imul
in
adc
adc
lret
rorb
addb
push
sbb
push
faddl
mov
add
rol
hlt
jl
mov
push
fbld
push
leave
push
lods
or
add
cmc
sub
mov
test
push
xor
int3
mov
cmpl
insl
out
jmp
lcall
jo
jle
adc
jmp
add
jne
add
jb
mov
cwtl
pop
inc
push
xchg
nop
loop
aam
push
pmaxub
push
xor
add
adcb
and
in
or
fwait
rcll
inc
pop
mov
movsl
and
testl
inc
ret
add
arpl
loopne
lds
outsl
rorb
xor
cmc
dec
aam
xorl
adc
arpl
cmp
jl
sbb
addl
or
or
stos
into
xor
gs
and
addl
cmpb
xor
push
nop
cmpsb
pop
bt
mov
sub
inc
add
inc
push
out
adc
add
inc
jno
test
pop
add
cmp
hlt
and
dec
add
dec
jmp
sbb
cmpsb
subb
and
xchg
cmp
dec
mov
pcmpgtd
ret
adc
lahf
aam
aad
dec
fmull
push
mov
mov
sbb
cmp
stos
gs
sub
rcl
mov
hlt
out
xchg
inc
js
out
push
or
pop
mov
push
daa
adc
jmp
lea
xor
mov
xor
mov
xor
mov
out
sub
mov
dec
lret
nop
inc
gs
pop
orb
fldenv
dec
and
cvtpi2ps
or
add
rcrb
nop
call
les
xchg
invd
pop
mov
je
inc
jb
push
scas
dec
add
or
xorl
dec
sbb
dec
lock
adc
or
jae
loopne
adc
adc
outsl
add
or
cmc
adc
roll
mov
inc
movsl
cmpsl
and
aad
jmp
jae
inc
ds
xchg
orb
inc
xor
insb
inc
orl
inc
and
sbb
arpl
nop
call
adc
scas
add
leave
sbb
test
ljmp
sub
push
mov
xor
pop
inc
addb
sub
fstl
add
inc
cwtl
aas
ficoml
pop
lock
cmpl
adcl
add
pop
add
xor
dec
shrb
jne
jmp
add
sbb
xor
mov
scas
int3
loop
add
xchg
repz
popa
sub
mov
sbb
sbb
popa
fsubrs
cmp
jae
sbb
enter
test
orb
call
in
adc
icebp
out
sub
sub
mov
push
jmp
add
or
jmp
cmpsb
inc
xchg
imul
adc
addb
iret
repz
mov
xlat
outsl
dec
clc
xor
testb
sub
pop
dec
out
xchg
inc
add
rol
clc
shl
inc
outsb
and
mov
movups
adc
sub
adc
nop
add
clc
loopne
xchg
out
popf
xchg
test
test
outsl
lock
mov
push
lods
jb
dec
pop
gs
je
push
andl
mov
adc
add
inc
push
imul
mov
insl
xlat
dec
and
or
xlat
xchg
add
sub
adc
roll
push
jge
sub
mov
test
fbld
in
or
add
orl
xchg
xchg
jmp
sub
dec
jg
or
mov
mov
lods
mov
dec
jne
jae
dec
adc
xchg
sub
lea
std
jns
sbb
pop
sbb
rcl
scas
mov
ret
dec
inc
and
pop
xchg
jbe
dec
dec
and
inc
sub
push
or
lcall
mull
sub
in
add
mov
cmc
sbb
sbb
pop
adc
call
jp
cwtl
subb
outsl
sub
dec
lea
or
lods
jg
fidivrl
imul
sbb
xchg
nop
push
cmp
sbb
sbb
jg
insb
jle
mov
jae
lock
scas
push
outsl
push
inc
add
pop
call
test
fidivrs
sub
out
jle
sub
xchg
add
push
insl
inc
dec
sarl
fsub
in
and
movsb
adc
fsubl
popl
pushf
and
push
dec
mov
cmp
jno
lds
pop
or
outsb
adc
subb
loopne
pop
inc
inc
add
sbb
loopne
pop
xor
and
fs
and
and
stc
jl
lcall
aas
xchg
aam
adc
xor
push
cmp
jmp
push
inc
pop
cmp
cmp
popf
rorl
adc
std
imul
je
mov
pop
add
adc
pop
xchg
imul
inc
mov
imul
mov
jge
push
aaa
jne
iret
add
or
and
mov
loope
int3
je
and
inc
xchg
cwtl
adc
cmp
loopne
add
push
popf
add
xchg
xchg
ret
dec
and
push
xor
push
and
int
test
rcrb
jecxz
cmp
mov
xor
pop
dec
sar
call
add
xchg
mov
jo
sar
jns
adc
test
mov
lret
xchg
lods
insl
dec
rcl
xchg
mov
pop
pop
mov
jle
out
xchg
xor
xchg
mov
jne
into
sub
icebp
inc
cli
or
add
push
stc
fcmovb
cli
inc
popa
or
dec
add
inc
pop
jne
mov
or
adc
xor
bswap
cmp
and
loop
adc
mov
mov
fsubl
test
jne
js
jb
pusha
dec
or
cmp
stos
xchg
mov
sbb
adc
add
sub
xchg
arpl
filds
dec
rclb
pop
dec
or
and
jae
shl
bound
cmp
xchg
ss
adc
push
jo
push
mov
jmp
testl
mov
addr16
dec
shl
or
jbe
sahf
inc
fiaddl
sarl
das
push
in
inc
inc
call
pop
push
dec
mov
inc
push
lods
mov
or
enter
jecxz
jno
jg
or
inc
and
xchg
inc
add
jo
cmp
adc
or
push
inc
push
push
dec
lods
inc
jmp
mov
or
sarb
and
push
mov
inc
cs
jle
sbb
stos
xchg
incb
pop
cmp
lahf
sti
or
cmp
inc
orb
xchg
ret
leave
jnp
ljmp
jb
mov
mov
mov
sbb
mov
add
or
inc
and
push
rorb
fisubrl
xchg
xor
fwait
mov
xor
mov
rdtsc
insb
sub
test
push
sub
rcll
and
pop
rclb
nop
ret
outsl
sarb
pushf
jle
movl
mov
adc
fisubs
adc
or
popa
aam
lods
adc
cmpsl
add
movsb
sti
rcrl
sbb
jge
jmp
sbb
decb
rcrb
adcl
pop
and
jno
inc
insb
mov
lock
xchg
sub
call
lods
leave
scas
inc
fnstsw
lret
add
or
stc
test
xlat
add
scas
scas
adc
sti
sub
add
cmc
por
ret
fwait
sbb
sbb
adc
jecxz
bound
nop
inc
jns
and
cs
xor
aad
rorb
jne
stc
or
mov
or
mov
xor
xchg
test
mull
xchg
mov
and
add
inc
incl
sub
cmpsl
mov
pop
jg
mov
dec
adc
sbb
mov
daa
xchg
dec
rolb
stos
dec
cltd
sub
popf
test
out
cmp
jns
add
loopne
shlb
call
add
sbb
les
scas
js
dec
xchg
sbb
daa
xchg
rorl
fistl
push
pop
push
pop
loopne
xorl
jo
add
mov
sbb
mov
inc
inc
xor
xor
dec
mov
jbe
cmp
lcall
dec
stos
lahf
dec
add
hlt
inc
daa
int
xchg
mov
icebp
add
pop
sub
addb
mov
sbb
iret
orb
pop
mov
roll
jo
sahf
mov
jae
and
cmpsl
sub
ljmp
jge
adc
or
xor
std
sbb
xchg
int3
cmp
mov
out
xor
sbb
mov
cmp
jl
dec
dec
and
shll
sti
jmp
cmp
mov
pop
xor
inc
pop
pop
roll
xor
aaa
js
or
mov
pop
lock
inc
sbb
loope
into
adc
jae
gs
ss
insl
cmp
adc
shlb
dec
adc
mov
cmp
fs
inc
add
xorb
mov
and
jl
inc
das
add
or
ss
rcr
fdivr
test
and
cmovnp
sub
sub
les
jo
pop
ja
insl
inc
shl
fcmovnbe
dec
sbb
inc
loope
and
jne
jae
pop
push
dec
push
and
dec
pop
adc
insb
adc
lcall
or
mov
mov
mov
lret
dec
push
mov
cmp
inc
push
add
das
jne
nop
dec
add
outsb
aaa
sbb
scas
inc
loopne
clc
repz
movsb
lcall
jne
jecxz
push
clc
sbb
pop
add
sbb
cmp
loope
jns
movsb
mov
pop
push
nop
in
dec
pop
mov
xor
sbb
or
push
mov
call
mov
dec
xchg
mov
xchg
das
push
push
xchg
pop
xchg
push
xor
test
mov
pop
inc
pop
jnp
addr16
and
add
push
adc
jne
mov
inc
inc
sub
fcoms
add
jmp
sub
add
std
dec
or
mov
adc
or
cltd
adc
or
add
adc
out
push
push
orl
add
int
cwtl
sbb
push
repz
dec
or
decl
sub
inc
adc
je
les
fnstsw
adc
filds
jl
lds
pop
inc
mov
mov
or
aam
add
test
xchg
xchg
mov
jo
cmp
mov
adc
aad
pop
or
inc
addr16
pusha
inc
xor
adc
xor
cmp
aaa
cmp
push
add
adc
out
call
push
fwait
mov
jne
fdivl
add
add
movsb
sub
cmp
mov
push
xor
xadd
add
xchg
cmpsb
mov
jo
rolb
add
dec
ret
xchg
jbe
add
xchg
pop
orl
or
ss
add
sbb
xor
add
dec
sub
mov
pusha
fildll
jne
push
add
push
insb
pop
fidivs
xor
int
add
jge
push
adc
xchg
and
pop
pop
push
testl
pop
xlat
ror
mov
add
inc
cwtl
mov
inc
add
push
and
movsl
xchg
and
test
out
enter
das
adc
cmp
xor
inc
jge
jno
into
mov
add
lcall
or
pop
jp
xor
pop
xor
scas
fcomp
inc
xadd
xchg
adc
inc
mov
and
mov
or
scas
push
cli
mov
cmpsl
sahf
xchg
dec
mov
push
cmp
jne
jbe
shrb
dec
jp
mov
sbb
mov
push
inc
mov
pop
insl
rcrl
xchg
lock
xchg
pop
fisttpll
or
fsubr
lods
inc
add
ficoml
pop
add
lock
mov
cmp
movsb
jb
jae
pop
xlat
jle
sub
test
pop
leave
sub
sub
sbb
inc
jb
dec
pop
dec
or
xor
ss
pop
sbb
mov
clc
cmp
adc
push
xchg
add
adc
xor
dec
je
and
add
lods
sbb
sub
xchg
add
in
inc
testl
adc
pop
gs
pop
add
mov
mov
insl
pop
and
mov
add
inc
mov
enter
orps
ficomps
aam
daa
popf
add
xchg
lods
sbb
pop
add
sbb
ret
jp
mov
pop
xchg
add
or
mov
cltd
cmp
and
sub
neg
dec
sub
xchg
js
sub
out
test
sub
nop
adc
push
idivb
pop
sub
and
push
ret
pusha
pop
xor
out
mov
mov
cmpsb
pop
out
sbb
add
jb
ret
cltd
dec
dec
ss
lods
sbb
push
push
pop
mov
psrlw
push
jge
inc
js
and
pop
push
mov
pop
and
cmp
and
adc
lahf
and
notl
pop
shlb
mov
xor
inc
test
and
pop
adc
jb
jnp
push
dec
xor
jl
lret
xchg
or
dec
pop
pop
sahf
rolb
lds
xchg
out
shlb
lock
pop
inc
bnd
cmpsl
add
add
popa
mov
pop
dec
cs
sbb
xchg
dec
divl
xchg
inc
push
pop
pop
sbb
and
push
push
mov
rorb
sub
dec
inc
dec
mov
push
aaa
push
sti
lods
xor
dec
inc
push
imul
inc
fs
xchg
in
jo
adc
iret
push
enter
outsb
movsl
xor
faddl
outsl
mov
dec
adc
xchg
pop
lret
movsl
cmpl
xor
add
pop
addr16
push
ret
mov
mov
lahf
imul
fsubl
inc
pusha
mov
les
out
jl
or
jle
push
sub
out
insb
adc
repnz
clc
jecxz
add
inc
imul
push
dec
pop
loop
mov
out
mov
pop
pop
xor
imul
cltd
decb
or
push
mov
push
adc
fs
cmp
or
shrb
sub
pop
sub
mov
mov
mov
xchg
stos
sbb
lcall
push
or
dec
xchg
loopne
cmp
mov
push
sub
jo
pop
movsb
or
push
lret
pop
xchg
adc
pop
cwtl
adc
push
sbb
sbb
sarb
and
adc
inc
pop
dec
push
add
adc
add
lock
push
jge
pop
mov
pusha
test
add
mov
jbe
dec
or
cmc
and
xlat
mov
mov
cmp
mov
pop
imul
sub
add
jb
lahf
sub
sub
mov
lods
cmp
sub
sbb
jne
cmp
jp
js
enter
push
cs
shl
xchg
cmp
adc
dec
jo
jne
out
jno
rorb
cltd
pop
dec
push
jnp
addl
sahf
sbb
and
ret
or
test
cmp
ret
aaa
xor
ret
xor
push
js
insb
sbb
adc
das
xor
push
rclb
or
xchg
jo
lret
mov
das
add
and
cmpl
mov
add
aas
add
jb
push
push
xor
cmp
insb
mov
jbe
outsb
push
lahf
xchg
enter
add
jne
es
bound
pop
mov
rorl
jae
addl
mov
divb
xchg
mov
shlb
subl
outsl
aas
rcll
jne
and
test
inc
lds
loopne
rclb
push
and
sbb
dec
add
loope
inc
dec
pop
nop
cltd
fld
das
insb
sbbb
or
xor
jecxz
dec
mov
push
pusha
sbb
ljmp
add
sbb
push
es
add
sbb
es
fidivs
sarl
movl
es
decl
jb
popf
xorb
or
sbb
mov
inc
rol
out
dec
cmp
loop
inc
pop
lods
xor
lods
sbb
push
and
dec
add
cmc
pop
loope
loope
orl
cmp
testb
dec
push
daa
pusha
sbb
cmp
push
dec
mov
and
dec
jmp
sbb
pop
sub
fistpl
rclb
dec
sbb
mov
jbe
pop
dec
inc
pusha
cmp
sbb
addr16
sbb
shlb
dec
cmp
scas
add
lock
mov
adc
mov
mov
subl
xchg
xor
add
dec
sub
jae
mov
mov
movsl
movsl
sti
cld
push
dec
leave
jge
or
xchg
jne
sub
jne
and
subb
psubsw
cs
cmp
fsubrl
mov
inc
imul
fcmovne
mov
push
or
aas
iret
sbb
xor
inc
arpl
cmp
icebp
in
xor
sub
ja
jmp
sbb
xor
pop
sub
jo
pushf
rorb
lea
or
cwtl
inc
jge
jp
sub
sub
mov
out
repnz
jge
push
add
popf
test
or
cmp
and
inc
push
pop
xor
pop
call
cld
add
cmpsb
les
inc
or
xor
lock
daa
pop
add
sbb
bound
imul
and
hlt
mov
je
ds
hlt
add
nop
dec
xor
xchg
xor
cmp
jne
xor
andb
pop
lock
inc
call
ja
cmp
sub
pop
cmp
fimull
enter
les
pop
hlt
je
dec
pop
fnstenv
push
adc
inc
sbb
shr
add
cmp
fildl
jne
sub
or
xor
sub
jbe
cltd
movsb
push
jnp
rcrb
add
outsl
fsubrp
mov
movl
ret
rcl
mov
sbb
add
or
push
sbb
int3
mov
daa
mov
or
cmpsl
and
lahf
int3
xlat
xor
push
imul
pop
adc
add
nop
inc
add
adc
test
add
decl
inc
je
sbb
dec
inc
cmp
leave
test
sbb
in
jae
sbb
divl
pop
xchg
mov
out
xchg
push
in
aaa
jbe
jae
dec
pushf
mov
xchg
pop
push
out
arpl
es
or
dec
mov
mov
ret
mov
sub
xchg
pusha
dec
cmpl
mov
aam
adc
or
out
mov
lods
fistpll
scas
inc
mov
cmpl
pop
mov
sbb
push
test
ret
adc
leave
add
pop
inc
dec
aaa
push
mov
add
xchg
sbb
loopne
add
jg
mulb
outsb
push
mov
gs
add
push
mov
cwtl
adc
sbb
or
lods
loop
popf
jge
bound
adc
push
fcoml
dec
cli
jbe
dec
mov
add
adc
adc
pusha
add
lock
push
pop
lock
std
cs
inc
loopne
cmp
mov
int
leave
je
pop
push
out
xorl
inc
pop
test
shlb
sbb
clc
push
sub
lock
push
jb
cmpb
add
xor
es
add
mov
dec
js
mov
dec
dec
test
pop
sbb
pop
sbbb
push
adc
rcrl
mov
xlat
lahf
xchg
dec
aaa
jmp
pushl
or
fidivs
xchg
clc
xor
int3
or
add
fcoms
rcrb
outsl
stos
push
popa
xchg
sub
inc
scas
push
in
jecxz
popa
sub
es
xchg
mov
mov
aas
sbb
movsb
dec
jne
mov
inc
add
ja
movsb
push
addb
bound
jp
test
lods
jne
pop
in
int
and
and
xor
lea
jo
sbb
movb
jbe,pn
arpl
and
mov
or
sahf
cmp
int
inc
pop
das
frstor
adc
inc
js
test
add
xorb
xchg
mov
movsl
add
adc
push
icebp
sub
or
inc
cmp
mov
imul
dec
mov
inc
imul
adc
arpl
daa
or
movsl
adc
mov
push
add
cmp
push
cs
sbb
movb
pop
arpl
lea
cs
mov
aam
or
popf
andb
sbb
enter
or
adc
mov
dec
test
int3
cld
push
int3
cli
or
aas
test
dec
inc
dec
dec
dec
inc
dec
dec
icebp
mov
fldl
push
dec
stc
or
movsl
or
in
or
sbb
mov
inc
or
mov
sub
dec
sbb
in
xchg
mov
movb
push
dec
or
rclb
push
fs
sbb
push
push
mov
pop
or
add
adc
push
push
inc
jg
inc
sbb
rclb
andl
add
addb
mov
imul
mov
add
aam
pop
inc
das
paddq
loope
inc
sti
aam
pop
mov
sbb
rclb
inc
addr16
jnp
mov
xchg
sub
ds
inc
mov
mov
sbb
aam
mov
aam
fcmove
test
popa
sub
mov
and
xchg
test
mov
cs
mov
inc
xor
lods
or
cmpsb
sbb
and
pop
ret
or
fsubs
cmp
mov
inc
es
inc
fimull
sbb
imul
add
jg
xor
sbb
mov
dec
repz
clc
mov
sbb
mov
push
movsb
push
xor
adc
add
sbb
push
fs
ror
inc
out
sbb
push
push
dec
sbb
add
sub
push
ret
add
decl
pop
fisttpll
inc
gs
arpl
add
js
cld
aam
nop
or
xor
cltd
or
aaa
xchg
shll
mov
or
sub
in
jnp
insb
rcrb
sbb
pop
imul
gs
jle
inc
pusha
mov
and
pop
lcall
lock
ss
lret
sub
and
inc
inc
pop
sub
xchg
addb
mov
pop
push
inc
push
xchg
movsl
aad
or
aaa
incl
adc
add
xchg
or
pop
jb
in
mov
adc
aas
stos
add
ret
in
pop
add
mov
mov
inc
inc
lea
mov
jo
mov
pop
xchg
pop
xorb
add
fidivs
and
jno
sub
cmpsl
jle
adc
xor
inc
cmp
and
aaa
fsubrs
pop
js
cwtl
xchg
mov
cmp
push
roll
pushf
insl
inc
aaa
outsl
adc
push
addr16
inc
pop
and
repz
push
or
cmp
popa
js
cld
lods
jae
jo
sub
mov
sub
xchg
pop
jo
mov
add
je
push
cmpl
fistl
mov
lods
fstps
sub
adc
cltd
sbb
xorb
push
das
les
cmp
nop
sarl
add
mov
movsl
push
popa
mov
gs
daa
xchg
push
and
push
sti
add
rcrb
ljmp
and
js
dec
mov
pushf
inc
js
jns
mov
xor
cld
decl
sub
pop
or
or
or
jp
dec
and
dec
push
jle
int
or
dec
sbb
cmpb
fwait
or
mov
popa
popl
sub
xchg
jne
daa
mov
cmp
sbb
mov
test
ficomps
int
out
pop
xlat
and
lea
std
pop
xchg
pop
xchg
mov
or
push
jle
add
pop
xchg
add
test
in
dec
add
inc
jle
add
mov
ja
or
push
xchg
sub
mov
dec
arpl
repz
jbe
push
fs
cmpsl
xchg
ss
scas
and
and
or
arpl
subl
pop
mov
or
sbb
pop
jb
mov
sarl
mov
add
iret
lea
jg
add
sub
insb
adc
add
add
cmp
scas
movl
test
mov
int
sahf
test
mov
gs
lahf
add
adc
pop
add
add
jo
add
loopne
and
xchg
add
mov
jg
and
fstpt
imul
pop
rdtsc
dec
cmp
orb
loope
sbb
push
faddl
adc
jmp
push
add
dec
out
cld
push
fldcw
add
xor
push
ret
shl
cmpb
jp
push
adc
adc
into
mov
dec
sub
mov
lahf
cmpsb
mov
pop
xor
jmp
lret
add
or
push
jge
dec
shrl
sarb
or
inc
pop
scas
movl
sub
rorb
push
lcall
repz
movsl
or
or
or
and
mov
pop
inc
or
add
lods
xor
add
addr16
jnp
rolb
cmp
cmp
popa
cld
mov
inc
adc
in
daa
cmpl
sbb
cltd
adc
in
cmpb
cmp
fldt
push
pusha
cmpsb
jbe
inc
inc
pop
mov
loope
scas
call
xchg
mov
jle
push
push
mov
pop
bound
insb
cmp
testl
int
mov
xchg
mov
push
arpl
and
mov
aas
dec
cmp
xlat
dec
pushf
outsb
and
test
call
pop
pop
out
jp
dec
leave
adc
xor
mov
cmp
addb
pushf
subl
push
inc
stos
test
ret
xor
xor
dec
mov
popa
sub
add
and
int3
and
icebp
mov
sub
xor
inc
jo
aaa
sub
xor
ret
stos
aam
movsl
adc
add
sahf
and
outsb
push
fs
and
pmaxub
adc
jo
cld
les
and
mov
xchg
jp
cmp
add
aam
push
dec
movsb
mov
lea
xchg
std
xor
sub
test
push
in
mov
loopne
inc
fstps
jmp
and
adc
sub
sbb
fldt
aas
jmp
cmp
adc
and
xor
inc
cwtl
inc
loope
or
outsl
pop
test
inc
stos
ficoml
clc
fstl
les
mov
lods
mov
mov
jne
pop
add
push
outsl
adc
mov
sbb
push
xchg
cmp
fcoml
inc
sbb
sub
mov
ljmp
les
jmp
xchg
mov
jmp
mull
or
cs
mov
icebp
shll
adc
xor
jl
imul
icebp
popf
rcll
stos
lods
sub
and
mov
je
sbb
and
pusha
loopne
fdivrl
jmp
or
cmp
ficoml
sub
pop
es
mov
pusha
dec
dec
sbb
and
or
mov
adc
or
push
stos
cmpsl
or
sub
xor
mov
cmp
jmp
push
sbb
jge
cmpsl
popf
jle
ret
int
push
leave
jne
lea
mov
mov
push
xorl
and
mov
mov
movsb
mov
sbb
adc
mov
ret
or
mov
cs
lahf
xor
sub
mov
insb
adc
mov
push
add
adc
test
xchg
add
dec
rolb
fldenv
sub
adc
bswap
cltd
xor
xchg
and
stos
inc
decl
or
pop
sbb
or
fdivrl
mov
mov
sbb
test
fildl
pop
mov
push
dec
and
and
loopne
into
xor
or
jmp
pop
jecxz
fstps
mov
cmc
in
sahf
lock
add
lock
jns
pop
adc
aas
sub
push
xchg
js
inc
rcrl
jne
jns
pop
mov
inc
sarl
nop
push
xchg
insb
adc
in
mov
cmp
fimuls
adc
add
paddq
inc
jnp
and
test
push
mov
or
inc
jecxz
or
call
adc
sub
cmp
add
inc
jl
cmp
mov
jl
adc
cmp
dec
sbb
iret
mov
pop
cmpb
adc
sbb
or
pop
sbb
pop
jp
jmp
daa
dec
stos
or
sbbl
mov
dec
test
bsr
push
pop
jns
jmp
dec
push
sub
loopne
fnsave
xor
pop
pop
sti
push
adc
mov
in
cwtl
jle
push
xchg
push
jo
adc
test
add
add
mov
dec
jbe
sbb
call
aas
xlat
sbb
cmpsb
cmp
repz
into
daa
nop
addr16
mov
xor
pusha
andl
adc
or
mov
pusha
jmp
addps
xchg
mov
pop
lods
mov
mov
sbb
movsb
aam
or
leave
push
inc
or
jmp
mov
dec
aam
lea
hlt
and
adc
mov
xchg
mov
dec
shlb
and
dec
insl
inc
cmp
in
sub
mov
mov
idivl
bound
add
and
jne
cs
imul
ja
xlat
mov
mov
adc
xchg
nop
jo
sbb
dec
test
movsb
push
fnstenv
movsl
loope
and
adc
add
add
and
lahf
add
je
sbb
jp
sub
or
popa
xchg
push
adc
loope
push
pushf
movb
icebp
das
rcrb
cmp
jbe
and
xor
inc
insb
loop
cmp
fchs
imul
adc
jo
xor
pop
sahf
or
pusha
push
loop
cli
jne
push
jg
popf
movsl
xchg
dec
dec
fcoms
inc
add
sarl
lcall
or
xchg
lahf
inc
pop
push
in
stos
push
aas
inc
mulb
adc
mov
or
add
fistpll
jno
or
push
jmp
adc
mov
mov
cmp
push
push
sbb
aas
xchg
mov
cmp
pop
or
and
inc
jns
add
adc
mov
or
mov
aaa
sub
aam
cli
test
bound
xchg
and
mov
adc
mov
jne
pusha
negb
xor
pop
movl
dec
outsb
int
lods
inc
daa
jo
inc
sub
add
cmp
and
dec
por
jne
pop
enter
adc
xor
xchg
mov
add
mov
out
scas
xchg
push
adc
arpl
rclb
cli
and
aam
or
add
call
add
and
add
xor
add
add
jo
stc
les
loope
inc
sub
add
add
sub
mov
daa
mov
xchg
pop
push
mov
pop
push
xor
insl
js
aam
push
push
dec
xor
mov
and
inc
insl
cmp
mov
mov
inc
xchg
pusha
add
loopne
mov
sub
mov
or
add
ss
jb
aam
push
in
xchg
das
inc
loopne
inc
in
sbb
ds
adc
insl
pop
sub
ret
fcmovb
and
add
clc
dec
popa
xor
mov
sub
xchg
aaa
in
aad
adc
scas
rcll
push
mov
or
fisubs
andl
data16
call
mov
xchg
xchg
pop
add
in
or
cmp
cltd
fistps
in
int3
out
and
sbb
lods
mov
inc
dec
test
jle
aas
aam
cmpl
cmp
dec
add
addr16
lea
cmp
sbbl
aaa
jne
cmpsb
movzwl
push
push
dec
mov
inc
cmp
mov
push
stc
or
adc
jb
js
mov
je
mov
repnz
aaa
cmp
mov
inc
mov
mov
or
push
outsb
dec
adc
sub
add
mov
pop
pop
movsl
fxch
stos
push
popa
sub
in
and
decl
popf
jp
jecxz
adc
or
jb
inc
sbb
ret
pop
xor
in
ret
and
imul
mov
jmp
add
add
nop
movsl
push
xchg
repnz
and
xchg
dec
pop
xchg
xchg
pop
into
push
clc
movsb
ret
out
test
and
mov
shlb
sbb
sbb
js
xchg
inc
sbb
mov
movsl
add
push
pop
fsubrs
mov
or
inc
mov
fisttpll
sub
add
cmp
and
sub
or
pusha
and
lahf
lahf
push
into
and
cld
add
adc
or
mov
enter
shlb
jno
jp
loope
fisubl
les
sub
or
cmp
cmpsl
and
es
insb
lea
nop
mov
add
mov
xlat
cmp
cmpsl
adc
pusha
or
aas
inc
imul
sbb
jmp
in
punpcklbw
lock
push
mov
xor
lahf
push
sub
pop
jecxz
sbb
lahf
adc
push
out
outsb
syscall
jns
dec
jne
lock
test
inc
or
sub
or
das
sbb
clc
int3
add
add
xlat
add
dec
popa
or
popf
jmp
mov
test
arpl
fiaddl
jmp
fsts
push
out
gs
and
ljmp
push
inc
add
jmp
mov
in
dec
loope
or
arpl
daa
out
rcr
dec
cmp
fcmovnbe
test
aam
cmpsl
popf
enter
sarl
adc
mov
add
insl
cmp
mov
gs
sti
sub
sahf
add
sbb
cmpsl
jbe
sahf
xor
int3
pop
test
hlt
push
mov
jmp
xchg
push
mov
int
and
add
cmp
in
aaa
mov
and
subl
dec
xchg
and
mov
adc
es
addr16
push
dec
and
or
sbb
jg
xor
inc
pop
and
int
push
and
push
mov
icebp
rcrb
pop
pop
pop
inc
cmp
cmp
inc
adc
loope
data16
sub
aaa
push
jl
aaa
add
rcl
inc
orl
adc
xchg
and
and
push
xor
fstl
add
inc
js
and
icebp
loopne
lea
or
pop
cli
es
mov
inc
mov
sub
sbb
sbb
and
xor
sbb
sub
lea
mov
inc
outsl
addr16
das
sbb
inc
imul
pop
rcrb
pop
mov
xchg
js
lock
movsl
das
add
inc
push
testb
fimuls
mov
rclb
mov
fstl
jo
loopne
add
shl
enter
push
and
mov
sbb
sbb
inc
or
adc
cmp
adc
out
jne
daa
into
loopne
shufps
dec
lods
mov
mov
add
push
popa
in
lret
inc
sub
lock
lods
mov
xchg
push
insl
shlb
mov
and
dec
xchg
mov
loop
out
xchg
inc
xchg
les
add
sub
add
mov
pop
repz
mov
mov
daa
push
rcl
inc
mov
mov
dec
sbb
sti
arpl
or
add
aam
jg
push
addr16
clc
jecxz
rclb
insl
dec
jne
xor
fst
movsl
push
pop
add
les
bnd
jle
iret
in
inc
jl
lock
fcom
ss
jne
dec
mov
push
test
clc
inc
mov
mov
clc
jge,pn
mov
sub
out
les
dec
iret
jl
adc
cmpsl
add
push
mov
movl
xlat
inc
shl
lret
or
testl
dec
mov
lods
dec
cmpb
xor
lock
adc
fneni(8087
sbb
cmp
in
xchg
xchg
in
ficomps
sbb
rclb
cmp
mov
je
cmp
and
adc
add
mov
aaa
sub
loope
movsl
or
xchg
lret
popa
out
test
lret
rol
and
bound
xchg
push
icebp
dec
aas
sub
mov
mov
or
mov
insl
pusha
and
push
imul
inc
mov
movsl
jmp
xchg
cmpsb
sbb
cwtl
pop
inc
sbb
xchg
add
adc
adc
and
sub
lret
push
fsubp
fisubrs
mov
dec
pop
stos
adc
lret
fisubrs
cmp
test
or
pusha
sub
les
enter
push
mov
sub
push
pop
and
jne
dec
andb
subb
test
sub
add
mov
push
movsb
or
loope
lcall
inc
sub
test
lea
lcall
jl
lock
add
into
movsb
or
push
adc
dec
lea
in
jle
mov
dec
test
movsl
mov
jl
lea
fildl
test
sub
mov
mov
dec
push
push
test
gs
out
movsl
clc
push
mov
or
xorl
out
mov
cmpb
push
mov
int
xor
insb
xor
jp
pop
push
or
loop
insl
add
mov
cwtl
js
movsl
inc
fs
imul
add
push
adc
adc
repz
xchg
jb
add
aam
push
sub
int3
add
ret
rcrb
inc
les
fidivs
hlt
out
adc
add
sub
xor
aam
test
sub
xchg
stos
push
adc
push
nop
popa
dec
fsubrl
cmp
shlb
add
mov
xchg
in
mov
mov
rorl
dec
mov
xchg
aam
sbb
inc
inc
mov
pop
push
adc
in
lods
and
shll
cmp
out
ljmp
out
pop
cmp
icebp
dec
push
ficoml
push
iret
push
roll
dec
and
es
xchg
inc
insl
test
les
pop
fdivrs
call
cmp
sbb
sbb
pushf
mov
outsl
je
lea
sbb
ds
enter
mov
pop
mov
mov
mov
sub
push
cmc
sub
inc
das
push
cltd
dec
mov
adc
dec
dec
or
push
pop
push
or
mov
or
lea
repnz
mov
or
add
pop
icebp
sbb
pop
mov
rcpps
xlat
in
leave
mov
cli
cld
clc
insl
rolb
adc
or
loopne
andl
sbb
adc
fsubs
cmp
inc
xor
dec
dec
lcall
xchg
mov
mov
mov
xor
and
or
sbb
shlb
jl
jnp
lods
add
inc
sbb
xlat
insb
dec
in
fcmovu
fmuls
add
loop
loopne
cwtl
dec
jge
sub
inc
pop
cmp
inc
dec
in
dec
dec
fadds
pop
sub
sub
pop
inc
test
gs
and
and
and
ret
and
cwtl
mov
insb
xor
sti
mov
ret
mov
shlb
js
mov
mov
inc
testl
out
mov
adc
je
push
sqrtps
or
mov
es
adc
inc
add
movsb
cmp
divl
jnp
mov
xchg
cld
push
xor
inc
insb
pusha
xor
aaa
push
enter
cmpsl
sub
sub
stos
test
jg
jo
ret
addr16
xor
mov
xor
pop
sub
jb
sbb
mov
adc
inc
adc
sbb
das
imul
or
inc
les
xchg
test
es
sar
jmp
sbb
jmp
pop
push
test
pop
outsl
adc
push
xlat
sub
push
adc
daa
and
xor
movzbl
mov
mov
jb
outsl
or
adc
adc
nop
sub
dec
xor
dec
fldcw
fnsave
sarb
adc
adc
rorb
or
enter
and
not
mov
outsb
xlat
mov
insl
push
or
adc
and
xor
adc
sbb
rolb
imul
pop
push
xor
push
and
mov
daa
jne
je
lock
imul
push
or
mov
adc
add
pop
enter
or
jno
xchg
jecxz
icebp
pop
sub
mov
enter
sbb
movsb
jecxz
mov
test
jns
inc
or
test
mov
mov
es
addl
dec
rclb
jbe
lea
pop
loopne
or
lds
push
sbb
sbb
pop
imul
push
push
push
aas
pop
or
pop
sbbb
lcall
adc
mull
dec
pop
and
cmp
and
movb
dec
rcr
dec
xor
adc
es
lcall
adc
jae
je
sbb
inc
sbb
jbe
add
mov
jle
or
adc
push
sbb
push
mov
ret
in
addl
pop
or
je
out
out
stos
push
movsb
xchg
xor
or
inc
cmpsl
jo
or
cmpsl
out
inc
fsub
cmp
or
aad
push
and
xlat
push
push
sub
call
dec
mov
push
test
pop
xchg
in
xchg
cmpsl
scas
out
inc
push
or
push
or
out
stos
cs
repnz
or
clc
xchg
cmpsb
push
mov
push
pusha
mov
xor
sbb
enter
mov
jl
outsl
call
shlb
stc
add
fmul
fadds
fidivs
pop
je
orb
fisubrs
jnp
aaa
push
divl
test
test
inc
dec
add
imul
ss
sub
out
mov
jmp
bound
popa
int
mov
or
fidivrs
or
into
in
ja
mov
inc
sbb
add
fistl
call
frstor
movsl
imul
cs
sbb
cmpsl
and
or
xor
outsb
xchg
pminsw
in
movsl
adc
adc
sbbb
xchg
fimull
leave
add
or
popa
js
push
cltd
add
fbstp
mov
add
push
leave
rorb
dec
das
add
add
ret
xchg
add
push
push
push
mov
add
mov
insb
pusha
push
dec
leave
pop
mov
add
shr
dec
push
cmp
mov
pop
int3
jne
push
sbb
push
lea
pop
leave
add
or
outsl
test
lods
sbb
cmp
enter
pop
push
xchg
fldenv
or
add
ret
lods
mov
insb
ret
and
jge
out
and
fdivs
lock
adc
sbb
aad
fbstp
les
repz
aam
insl
pop
add
push
nop
sbb
inc
push
inc
aam
cwtl
int3
lds
push
mov
sbb
add
pop
adc
sbb
jle
push
push
jae
cmc
sub
push
add
inc
or
pop
aam
sbb
mov
shr
pop
mov
es
mov
mov
cmp
idivb
movsl
ljmp
xchg
enter
icebp
test
lods
lret
pop
push
pop
sbb
repnz
xor
jp
test
cmp
mov
ret
or
mov
or
ret
jae
ret
xor
or
xor
xchg
pop
or
pop
dec
js
xor
js
add
mov
or
push
nop
cmpsl
sbb
push
mov
or
fs
add
les
fldl
loopne
shrb
jbe
divl
addb
incl
bswap
leave
leave
leave
sub
sub
into
leave
leave
sub
lcall
inc
add
jle
imul
adc
cmp
xor
add
imul
xchg
xor
add
sbb
xchg
cmp
jno
add
add
add
sbb
xchg
mov
mov
dec
repz
jnp
rolb
imul
inc
jmp
iret
cmpsl
mov
and
enter
pusha
cmc
inc
pop
sbb
lret
cmp
cmp
dec
add
sbb
nop
and
or
xor
add
adc
or
rclb
add
xor
and
mov
inc
add
mov
inc
or
sub
dec
push
inc
fnsave
push
clc
popa
pop
pop
dec
add
pop
pop
aaa
sar
inc
sarb
ret
add
pop
je
dec
pop
imul
dec
sbb
adc
or
call
int
dec
in
adc
nop
push
cmp
add
clc
mov
xor
loopne
cmp
push
adc
pop
mov
call
out
pop
push
adc
xlat
lods
adc
or
mov
stos
aam
sub
loope
and
inc
hlt
mov
cli
test
push
es
jo
push
inc
and
adc
outsl
and
and
imul
inc
mov
xchg
sub
push
into
ljmp
stos
adc
mov
fmuls
xchg
mov
add
xchg
cmc
xor
adc
and
mov
rolb
xchg
cmpsb
sbb
push
add
xor
cs
enter
xor
pop
cmp
int3
and
int3
mov
loopne
mov
loope
icebp
adc
add
movsb
cmp
mov
ret
and
jmp
scas
enter
pop
push
xchg
loope
inc
les
cs
push
mov
mov
shl
enter
incb
testl
xchg
mov
nop
mov
cs
ds
mov
mov
add
dec
mov
and
mov
jne
push
sbb
or
adc
add
cmp
mov
adc
and
dec
push
sahf
inc
fisttpll
pushf
shrb
cmc
into
bound
int3
fistl
adc
out
les
jns
mov
std
lahf
aas
xor
mov
dec
fsubrl
test
dec
or
xchg
mov
xlat
lds
int
das
loopne
bnd
mov
xchg
js
pop
jae
dec
dec
pop
popaw
pop
iret
inc
je
push
xor
adc
sahf
mov
test
mov
mov
es
xchg
xchg
xchg
cmpsb
ss
mov
in
push
repnz
and
inc
pop
insb
cmp
jmp
jae
and
jmp
and
je
mov
pop
sbb
add
orl
inc
jne
in
sbb
jp
in
rcll
lea
rorb
mov
imul
xchg
pop
ja
mov
roll
rclb
sbb
or
xchg
roll
fmul
jno
mov
mov
dec
sbb
loopne,pn
loope
inc
ret
or
sbb
sbb
mov
test
sbb
scas
adc
popa
subb
and
mov
cmpsb
cmp
inc
jbe
flds
cmpsb
push
jo
jne
ret
insb
call
cmp
pop
xor
xchg
into
cmc
out
and
adc
aad
add
xchg
or
rcll
popf
pop
movsl
outsl
pop
xchg
push
push
push
inc
inc
dec
aaa
and
repz
or
pop
push
cmp
inc
add
pop
or
mov
cmpsb
aaa
pop
addb
inc
cmp
mov
dec
pop
or
daa
sbb
jb
jg
enter
or
inc
or
lods
dec
add
push
sub
sti
and
fs
inc
or
mov
test
and
lcall
movsb
sub
clc
rcr
loopne
loope
mov
mov
rcrb
cld
jmp
out
mov
aam
xor
mov
test
mov
das
out
test
cmp
push
add
cmc
sub
movl
nop
out
outsb
mov
jle
cltd
ret
or
test
outsb
or
rorb
jb
cmp
data16
clc
mov
add
icebp
movsb
push
enter
clc
inc
mov
xchg
addb
mov
push
xor
inc
mov
mov
inc
xchg
scas
mov
daa
sub
adc
dec
cmp
mulb
fistl
add
sbb
adcb
dec
or
push
dec
push
outsb
sbbl
pop
popf
mov
inc
pushf
movq
call
jecxz
inc
inc
xor
xor
inc
push
mov
lods
sbb
mov
jb
ret
jmp
roll
or
pop
lds
xor
stc
push
je
mov
add
adc
mov
inc
adcb
jge
movsl
and
imull
shll
cld
and
decl
cld
xor
imul
je
cmp
sahf
mov
mov
mov
push
cmp
mov
jl
repnz
pop
sbb
inc
ret
mov
and
mov
and
ror
and
mov
ds
lods
add
cld
inc
mov
or
ja
xchg
push
sbbl
inc
adc
faddp
inc
shrb
lret
decb
lret
les
add
xor
fs
loope
mov
icebp
adc
jmp
mov
out
dec
dec
pop
push
add
xchg
sub
inc
adc
jg
add
sub
sbb
call
mov
das
in
inc
cmp
push
aas
rorl
add
pop
inc
loopne
loopne
out
dec
xlat
lcall
sbb
push
sbbl
or
lahf
fstl
push
adc
mov
jns
iret
call
jmp
sbb
dec
jl
fdivrs
xor
mov
testl
pop
or
sub
rorb
fcmove
push
loop
loopne
push
out
jge
or
inc
pusha
jecxz
or
jbe
shlb
out
repz
push
mov
ljmp
jnp
cmp
jbe
and
fs
add
add
adc
pop
push
add
push
imul
out
outsl
inc
xor
push
add
mov
stos
add
pop
push
sbb
dec
gs
and
ljmp
loopne
mov
xchg
and
mov
hlt
fisttps
shl
add
roll
enter
add
add
dec
mov
sub
push
stc
sub
test
sbb
mov
lock
sbb
sbb
sbb
push
inc
jno
inc
out
loope
sbb
jne
inc
outsl
cmp
add
push
movsl
popa
dec
add
and
adc
dec
pusha
add
das
mov
loope
or
xchg
int
or
or
dec
xorb
mov
arpl
faddl
push
mov
imul
or
jmp
mov
cmp
fstps
mov
cmpsb
adc
cs
mov
mov
cmp
mov
mov
call
and
ret
inc
cli
ds
aas
ror
cmpsb
int
loop
bnd
mov
adc
out
add
xor
cvttps2pi
imul
nop
arpl
roll
shll
pop
cmpsl
popf
lea
xchg
jae
or
scas
adc
sti
jae
cmp
jmp
mov
mov
cld
xchg
jne
inc
jmp
adc
sbb
xor
mov
nop
inc
pop
mov
pop
add
aad
jno
test
mov
lcall
sbb
push
dec
fwait
add
mov
sbb
inc
lods
pop
imul
dec
push
adc
fcoms
ss
ret
pop
inc
adc
push
mov
dec
in
cmp
popf
lea
xchg
jp
mov
adcl
dec
add
pop
or
adc
pop
dec
arpl
in
mov
incl
nop
ljmp
xchg
sub
pop
cmpsb
adc
adc
lcall
je
xchg
ret
dec
fsubrl
push
adc
testb
cmp
cmp
jbe
push
ret
pop
in
ficompl
pop
mov
mov
mov
jbe
insb
jmp
and
data16
lret
sub
mov
or
and
enter
outsl
out
loopne
lea
sub
cmp
fcomp
sub
les
rolb
std
add
les
ret
pop
xorb
int3
mov
rorb
bound
cli
in
dec
fwait
loopne
rcr
adc
shlb
addl
imul
and
in
mov
fidivrs
mov
stos
fdivs
sbb
sbb
jge
adc
decl
enter
pusha
add
in
jno
mov
xchg
xor
inc
loope
or
pop
sub
ds
sub
mov
cli
fcompl
neg
pusha
rolb
cmp
aam
aam
mov
jg
mov
and
pop
mov
ror
rorl
cmpsb
dec
mov
lret
xor
mov
inc
aas
xor
mov
faddl
push
enter
xchg
sahf
mov
jbe
out
jmp
rcll
add
lods
outsl
es
rorl
cmp
jbe
popf
xchg
out
sub
sar
rorb
and
adc
or
std
pop
test
inc
pop
sub
inc
es
jo
scas
mov
push
ror
add
cmp
test
shl
push
cmp
sarl
push
add
or
mov
inc
push
in
mov
mov
mov
sub
cmp
shr
andb
pop
push
sti
test
sar
or
int3
mov
adc
and
popf
dec
fcmovnbe
enter
ja
add
loopne
jl
or
cmpsb
enter
mov
movsb
clc
shlb
dec
fsubrs
ja
int3
insl
cmp
test
jae
mov
repz
lock
and
adc
lock
push
sub
sbb
adc
add
mov
lcall
loopne
sbb
dec
repnz
nop
xchg
jle
mov
sbb
mov
nop
dec
addb
mov
jmp
xor
cs
jo
or
adc
adcb
icebp
jecxz
popf
dec
fsubrp
sbb
cmp
mov
inc
jg
adcl
cmp
xchg
roll
dec
lock
adcl
stos
mov
sub
les
mov
jecxz
dec
int3
rolb
sbb
sbb
cmp
inc
or
movsb
mov
lret
loopne
cmp
pop
mov
pop
mov
add
push
adc
pop
push
mov
mov
cmpsl
or
fwait
lock
sti
add
cmp
mov
mov
lret
mov
addr16
add
xor
mov
cmp
out
lock
inc
push
in
add
decl
imul
lock
roll
xchg
xor
cmp
dec
aaa
clc
jb
sub
sbb
cmp
inc
sbb
sub
fsubrl
adc
cld
je
add
sbb
jmp
xlat
and
xchg
iret
insb
mov
mov
sbb
add
pusha
data16
push
cmp
adc
cwtl
push
xchg
sbb
mov
aaa
iret
popa
mull
pushf
and
jne
ds
or
xorl
arpl
dec
outsb
sub
sbb
outsb
and
sbb
add
sarb
dec
mov
imul
pop
sub
inc
pop
mov
or
test
jmp
mov
mov
std
mov
cmp
pop
inc
jae
ficoml
push
pop
push
mov
add
add
adc
sti
add
int3
jge
orb
add
sub
orl
add
push
orl
pop
or
or
enter
or
push
jae
orl
loop
mov
xor
inc
jmp
inc
in
dec
ret
push
pop
popfw
cmp
sbb
xlat
xchg
add
bound
push
ret
adc
mov
add
jle
inc
test
add
shlb
test
jle
jne
mov
sbb
clc
or
movsb
and
pop
sub
mov
add
test
adc
inc
pop
cmp
mov
push
stc
mov
dec
xchg
repz
out
hlt
imul
xor
andb
call
jmp
push
lock
iret
jae
sub
jbe
push
pop
sub
or
xlat
ds
rolb
mov
leave
int
pop
lahf
inc
jb
dec
inc
les
push
loope
ljmp
popa
fadds
orb
mov
int
pushf
mov
xor
shll
imul
call
dec
jmp
push
sub
or
jge
insl
lret
sbbl
inc
add
add
insb
ss
data16
iret
push
sbb
lahf
out
mov
incl
jae
rcrl
add
outsl
imul
or
loopne
push
mov
push
cmp
add
lret
push
xor
in
int3
ret
ret
cmp
xor
lods
push
repz
jmp
or
jl
testl
jl
or
jb
cmp
in
adc
pop
mov
add
sbb
shr
sub
je
dec
out
or
cmp
xor
add
insb
push
jne
dec
mov
sub
mov
sub
lcall
or
and
jl
xor
mov
xor
mov
pop
lock
add
icebp
test
stc
inc
cmpsl
jns
add
push
inc
inc
push
clc
push
sub
add
fsubl
int
push
out
push
sub
push
push
addr16
cmpb
and
or
sbb
std
ja
and
push
push
loopne
jbe
not
shr
and
add
int3
dec
mov
push
add
dec
mov
push
test
shld
or
test
in
into
lock
mov
mov
fiadds
mov
xor
push
pusha
mov
add
push
push
shrb
adc
mov
call
push
cmp
jp
xor
mov
adc
jb
je
stos
inc
lcall
enter
mov
mov
ret
cmpsl
faddl
inc
bound
nop
test
ret
cmpsb
jns
add
inc
push
ret
stos
movsb
jbe
cli
pushf
dec
lods
test
and
adc
xchg
mov
test
imull
fidivs
daa
cmp
jae
insb
aaa
add
xor
rclb
in
jnp
sub
sub
pushf
roll
pop
jl
mov
dec
dec
repz
push
rol
dec
or
shll
adc
add
add
clc
sbb
ja
jo
add
sbb
xchg
dec
hlt
aad
pop
jmp
mov
out
xorb
or
ret
or
cmovg
and
push
push
or
jo
add
or
cmc
xchg
data16
js
add
rorb
adc
sbb
or
jbe
cmp
lods
ljmp
mov
test
add
adc
movl
sub
out
push
sbb
sub
jl
mov
js
mov
outsb
adc
std
jne
test
inc
movsl
add
dec
xchg
push
dec
clc
jae
sub
rol
arpl
popa
mov
jbe
clc
ret
or
jb
xchg
clc
shll
and
shl
pop
mov
push
add
mov
jge
push
mov
fiadds
aam
adc
test
add
mov
sub
dec
adc
clc
mov
mov
cmp
xor
dec
sbb
pop
loopne
jmp
rol
outsl
cmpsb
loopne
or
add
cmp
jb
imul
jg
int
add
sub
imul
hlt
scas
test
sub
call
int
or
movsb
movhps
sub
aas
stos
or
xor
rorb
sub
sbbl
inc
call
cwtl
add
sbb
es
shrl
sub
fildl
jno
adc
sub
push
xor
mov
inc
inc
jmp
ds
inc
push
ss
push
and
push
mov
cmp
or
scas
sbb
or
stc
je
inc
add
popf
test
lea
mov
mov
xor
cmpsl
push
jb
xor
adc
xchg
inc
divb
call
pop
mov
test
push
adc
loopne
lods
mov
je
mov
inc
cmp
rcrb
outsl
push
push
xor
ret
or
or
mov
lahf
pop
pop
jo
lret
add
adc
iret
cmpsl
movsb
dec
rorl
rorb
add
daa
xor
mov
inc
mov
add
jmp
cmp
cmpb
shrb
test
lea
sub
cli
inc
mov
and
subb
jb
cmpsl
icebp
push
and
push
jg
push
pop
sub
jbe
popa
mov
or
ret
add
xchg
dec
inc
je
adc
adc
scas
lea
inc
mov
dec
sub
mov
inc
out
mov
mov
std
sbbb
das
mov
das
push
add
mov
fsubrs
enter
in
dec
jmp
push
sub
push
out
sub
bound
fisttpll
add
push
or
mov
mov
popf
int
mov
stos
daa
and
push
mov
scas
stc
mov
andb
lret
xchg
rclb
out
je
push
js
iret
xchg
call
push
inc
notrack
sbb
push
cmp
inc
hlt
lea
scas
push
adc
and
inc
adc
push
jns
sbb
ds
mov
mov
imul
sbb
test
add
adc
ja
push
pxor
sbb
cmp
sbb
dec
out
inc
dec
or
movl
js
or
and
jae
or
mov
cmp
rol
inc
loop
cli
sbb
mov
mov
sbb
cmp
sti
mov
std
xchg
and
add
into
outsb
ljmp
mov
jg
ss
sub
sbb
out
rcrb
add
or
cmp
negb
je
in
push
jo
in
je
push
data16
arpl
ret
xchg
jnp
inc
jne
cmp
mov
fdivl
pop
shl
adc
rcrl
or
and
pop
inc
movl
adc
xor
pop
mull
sub
daa
push
sub
imul
add
cmp
mov
or
and
frstor
arpl
adc
lds
and
dec
adc
or
and
mov
leave
add
or
ret
movsl
pop
negl
sub
mov
outsb
inc
call
inc
mov
adc
shrl
cmpsb
push
mov
leave
stos
pop
or
xchg
das
or
jbe
cmp
shrb
negl
fmull
cmp
jbe
shll
push
sub
push
sub
push
or
pop
unpcklps
xchg
xchg
sbb
lea
add
das
pop
rcll
xor
rorb
xor
xchg
imul
iret
rcr
push
inc
leave
push
adc
adc
shlb
jae
sbb
sbb
mov
jne
mov
sbb
sbb
sti
lret
and
add
cmp
mov
ror
shll
jae
andb
and
or
pmuludq
jmp
or
into
mov
adc
movsl
xor
cwtl
sahf
cs
or
pop
sub
push
mov
vpor
mov
push
mov
dec
fcoml
push
sub
sbb
rcrb
xchg
add
jmp
rcrl
inc
clc
ja
pop
xor
add
inc
fmuls
pop
fistpll
inc
pop
jbe
ret
push
pop
jno
fdivs
cltd
pop
fisubrl
pop
outsb
or
hlt
add
mov
ret
adc
inc
cmp
sbb
or
xor
test
popa
mov
sbb
cmpsb
jge
sbb
fsubrs
movsb
cli
mov
shll
xor
cld
ret
rorl
pop
fldl
xchg
loopne
or
arpl
dec
out
fstpt
sti
and
push
mov
mov
xchg
jb
xor
call
adc
cmp
adc
inc
lret
lock
jbe
add
sub
dec
cltd
aaa
out
pop
or
push
cmp
jae
ljmp
mov
inc
and
loope
shl
or
xor
inc
and
gs
xor
lcall
or
add
daa
divl
ficoml
mov
addr16
sbb
cmpsl
inc
fldcw
fsubs
cli
mov
or
dec
or
cmp
cs
inc
inc
idivb
sub
pop
fisttpl
or
loopne
rcrl
jle
mov
xor
jae
mov
inc
jl
rcl
lret
and
ss
and
jge
add
push
push
pop
add
dec
add
jle
mov
and
sub
jecxz
add
cmp
jae
mov
outsb
shrb
mov
mov
dec
add
cli
rcr
add
or
int3
jno
pushf
jns
sub
rcr
pop
das
push
call
aam
aam
jbe
clc
mov
mov
adc
push
pop
dec
jmp
cmp
imul
dec
loope
sbb
jb
dec
sub
mov
sti
pop
sub
dec
jne
jmp
jo
push
test
add
jl
ret
and
sbb
mov
aaa
pusha
mov
lods
popf
dec
jle
scas
js
in
sub
shr
adc
adc
add
add
lock
rcll
push
scas
push
push
xchg
ds
adc
or
ret
or
or
adc
inc
push
jae
inc
fcmovne
movsl
imul
cwtl
sub
sbb
loope
jo
mov
nop
mov
adc
inc
sbb
rcrb
sub
xchg
pushl
mov
clc
or
cmpl
sub
inc
lcall
jmp
and
hlt
imul
inc
adc
add
mov
lods
push
push
test
xchg
add
andl
jne
sbb
dec
shr
jb
aam
jbe
rolb
push
lds
and
push
dec
or
jnp
popa
pop
gs
popa
cmp
add
stc
cmp
dec
das
inc
bound
push
mov
mov
les
inc
lods
dec
aas
cmc
push
orb
sub
imul
add
dec
pop
stos
xorb
sub
sti
das
es
call
inc
inc
enter
pop
inc
incl
push
add
xor
mov
inc
dec
jne
adc
lods
mov
outsl
push
sub
inc
out
and
fs
push
or
or
call
pop
mov
das
and
xchg
cmp
and
lret
add
enter
mov
add
pop
je
mov
xlat
or
sbb
or
gs
mov
sub
out
add
shlb
push
or
movl
inc
pop
addb
dec
sub
mov
in
pop
cmc
cli
inc
adc
inc
in
and
adc
cmp
leave
xor
push
nop
mov
fists
inc
sti
push
ret
and
sub
push
in
push
or
dec
mov
mov
imul
das
cld
inc
add
je
pop
stos
mov
mov
xor
jl
dec
push
or
and
sti
loopne
in
lods
rorl
stos
adc
pcmpgtd
or
add
add
mov
bound
add
arpl
mov
shlb
add
add
add
add
in
cmp
imul
pusha
imul
mov
insl
shrb
add
loopne
add
sbb
xorb
sbbb
inc
jb
jb
sbb
jae
sbbb
je
jb
sbb
jne
jbe
jb
sbb
js
xor
ja
cmp
cmp
cs
cmp
pusha
cmp
and
cmp
inc
push
loopne
add
and
sbb
xchg
inc
das
xchg
xchg
andb
sbb
xor
xor
xor
xor
nop
inc
push
nop
aaa
xor
push
ss
aaa
inc
push
nop
inc
pusha
cmp
cmp
inc
rolb
nop
inc
loopne
enter
add
inc
and
enter
inc
inc
and
enter
enter
orb
enter
rorb
and
dec
in
add
add
dec
and
in
add
nop
add
nop
push
pusha
push
in
add
adcb
in
add
nop
add
nop
push
loopne
jb
add
add
push
and
jb
add
je
jbe
push
nop
xor
movsl
adc
adc
setae
nop
lock
scas
push
repnz
adc
mov
icebp
enter
dec
aaa
pop
subb
inc
jle
sub
cmp
push
inc
outsb
mov
add
cmp
xchg
fisttpl
push
adc
adc
aam
jns
popa
sbb
sbb
mov
xchg
jl
add
and
sbb
mov
cmp
mov
xor
dec
xchg
cmp
xchg
cmp
inc
leave
xchg
cmp
mov
dec
mov
cmp
mov
aaa
push
mov
and
mov
roll
fs
xor
insb
mov
aas
jns
daa
stc
je
sbb
mov
imul
pop
xchg
lret
test
je
xor
mov
push
cltd
xchg
cwtl
cwtl
movsb
sub
mov
dec
movsb
int3
test
dec
gs
fsubrl
mov
inc
mov
mov
and
movsl
pop
sub
mov
jmp
and
or
imul
adc
sub
dec
and
add
lahf
mov
jae
or
data16
gs
or
nop
ret
divb
bound
dec
popa
jb
dec
mov
jns
jne
pop
insb
psubw
imul
jo
arpl
dec
outsl
jbe
xchg
pop
push
pop
pop
jne
mov
daa
jb
addr16
aaa
arpl
imul
add
insb
push
push
or
add
and
mov
ffreep
and
out
push
outsl
and
inc
pop
cmp
daa
outsl
daa
daa
push
arpl
push
dec
ret
dec
ds
jne
push
gs
es
mov
es
xor
dec
outsl
pop
js
mov
and
insl
jnp
push
into
jb
fbld
or
dec
inc
mov
push
rclb
pop
xor
movsb
movsl
mov
mov
xchg
and
shlb
aam
xchg
fstl
push
push
adc
or
out
fcomps
mov
xlat
mov
dec
shll
hlt
arpl
mov
andl
out
adc
repnz
mov
cmp
popl
jne
inc
das
cwtl
jo
jg
add
mov
push
test
ja
inc
subb
add
dec
jns
and
out
pusha
lods
nop
subl
lretw
aad
xchg
cwtl
gs
in
test
pop
xor
adc
inc
cmpsl
bound
inc
pop
sarb
mov
xor
inc
out
insb
jns
jg
sub
jnp
push
pop
push
pop
cltd
test
leave
add
push
and
rolb
mov
stos
pusha
call
gs
push
or
adcl
mov
ss
dec
incb
into
adc
movsl
js
pop
clc
insl
xchg
pusha
pop
scas
loope
iret
in
dec
inc
or
xchg
mov
jl
mov
ss
cwtl
jl
push
ret
test
and
add
adc
inc
cwtl
push
or
cmpb
push
shll
cltd
dec
es
leave
fs
orl
ret
dec
xchg
adc
data16
jmp
adc
dec
imul
adc
rcrb
aam
cld
cmp
mov
dec
gs
mov
sub
mov
cmp
sub
mov
repz
call
sbb
dec
dec
and
and
and
jae
inc
dec
push
imul
and
jae
xchg
ror
jae
push
inc
mov
addr16
inc
xor
mov
dec
or
cmpsb
jne
aam
pop
mov
lods
push
add
pop
cmpsb
xchg
imul
xor
xchg
pop
out
loopne
addr16
cmp
adc
adc
cmp
cmp
adc
push
pop
cmp
cmp
sbb
sbb
cmp
cmp
sbb
push
pop
cmp
cmp
add
add
cmp
cmp
add
push
pop
cmp
cmp
or
or
cmp
cmp
or
push
setl
repnz
pushf
pushf
pushf
hlt
cmc
div
pushf
pushf
pushf
pushf
clc
stc
cli
sti
pushf
pushf
pushf
pushf
cld
std
lcall
loop
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
in
in
out
out
fwait
call
dec
imull
das
pusha
test
add
js
inc
aas
in
mov
mov
adc
push
ds
mov
fdivs
in
lock
add
cmp
pop
inc
scas
add
subb
shlb
adc
add
dec
add
mov
adc
push
mov
push
pop
adc
lret
cmp
enter
pop
and
and
add
in
dec
push
popa
cmp
filds
mov
into
mov
sbb
add
adc
push
adc
lock
jno
adc
mov
adc
daa
pop
dec
iret
pop
dec
sbb
push
push
pop
outsb
rcl
mov
shr
enter
and
lahf
fs
inc
sub
add
adc
outsb
sub
push
push
adc
imul
push
add
dec
dec
xorl
vrcpss
movsb
dec
test
mov
pop
loope
xchg
repnz
ds
bnd
pop
dec
mov
test
cmp
jg
mov
sbb
enter
testb
push
es
into
ret
adc
sub
and
dec
mov
pusha
inc
or
adc
xor
les
enter
inc
jne
add
cmp
pop
scas
insl
mov
test
cmp
sbb
jecxz
inc
mov
adc
cmp
lods
add
dec
adc
mov
call
repnz
je
add
xor
inc
lea
gs
test
mov
js
lcall
jae
and
push
push
popf
mov
cmp
fisttpl
xor
inc
dec
daa
add
aam
sub
sbb
rcrb
daa
and
push
mov
pop
out
mov
flds
and
xchg
or
xchg
mov
cld
inc
and
insb
push
add
add
cmpb
lds
addb
jecxz,pn
outsb
push
adc
xor
dec
push
pusha
sub
mov
inc
cmp
xchg
pop
sbb
xchg
les
popf
mov
inc
pop
or
stos
popa
ljmp
dec
sub
aam
lds
add
ret
push
dec
leave
rorl
dec
cwtl
cmp
jo
fs
imul
lods
mov
xor
xchg
pusha
jae
push
jo
jae
insl
xor
adc
inc
ret
fs
dec
call
push
jo,pn
jae
inc
mov
sbb
mov
mov
xor
outsl
xor
and
pop
clc
lcall
xchg
gs
xor
xchg
jmp
negl
enter
xor
jle
filds
adc
js
add
jne
test
sub
adc
and
sbb
pusha
dec
cmp
and
inc
add
push
sub
xor
and
mov
jae
adcb
nop
xchg
iret
cwtl
push
lahf
push
aas
and
dec
push
jbe
sbb
mov
mov
adc
ds
mov
js
or
dec
fnstcw
inc
ret
pop
push
in
or
cmpsl
imul
insb
outsl
bound
cltd
mov
ja
pop
xor
xor
adc
outsl
dec
jne
dec
dec
and
or
xor
and
addr16
js
sub
fwait
mov
pusha
aam
adc
dec
inc
fadds
stc
test
mov
cli
push
sahf
or
jne
push
das
pop
pop
xor
mov
add
adc
sbb
mov
les
mov
inc
cltd
xlat
out
rolb
push
movsb
jae
shlb
aam
add
jbe
xlat
ljmp
xor
movsl
or
jle
stc
jl
or
insb
push
movsb
push
mov
jle
lea
dec
loope
and
cmp
fstpt
mov
push
int
in
cld
rol
and
fs
xchg
imul
mov
sahf
push
add
dec
mov
xchg
or
call
dec
rcrb
clc
xchg
pusha
sub
and
or
adc
xor
push
adc
daa
dec
movsb
icebp
lods
lret
jmp
sub
lods
popa
add
sub
cmp
or
or
sbb
push
push
sbb
xchg
pop
cmp
jno
aaa
jo
adc
nop
push
mov
pop
push
cmp
jmp
inc
mov
and
mov
adc
hlt
pop
lds
lds
pusha
dec
leave
gs
sbb
enter
les
inc
push
inc
or
ja
inc
dec
and
add
pusha
test
ljmp
sbb
lods
rcl
in
adc
pop
mov
push
inc
jae
adc
pushf
or
mov
cmp
sbb
ret
sub
sbb
loop
enter
push
cmc
sbb
pop
or
xchg
imull
rol
jmp
adc
mov
aas
pop
and
cmp
jbe
movsb
add
pop
cmp
mov
add
das
cmp
dec
adc
fldcw
ljmp
sub
std
sti
cmp
cmp
push
inc
jbe
cmp
mov
and
add
pop
scas
xor
add
inc
or
scas
jno
and
jns
pop
push
das
shlb
mov
jne
out
aaa
push
cmp
xor
jmp
les
enter
into
xor
fdivs
push
scas
cmp
inc
inc
adc
adcb
pop
sub
insb
adc
cmp
repz
cmp
dec
cwtl
mov
add
xchg
xor
rorb
popa
sbb
inc
cmp
aad
mov
mov
inc
jb
cli
cmp
je
and
nop
ljmp
jb
shrb
add
dec
insl
sbb
out
and
add
lea
fcmovb
sbb
sub
and
hlt
sbbb
hlt
enter
icebp
mov
iret
repz
inc
pop
or
imul
ds
add
sar
or
jo
add
inc
test
imulb
ljmp
push
pop
cmpsl
mov
dec
int3
or
les
xchg
dec
mov
sarb
nop
sbb
mov
loopne
adc
add
mov
xchg
mov
mov
icebp
adc
xlat
or
or
sbb
enter
push
imul
add
jg
hlt
iret
lahf
in
lea
and
cmp
jne
adc
or
or
add
xchg
jle
jp
add
sub
jo
sbb
dec
dec
jne
adc
cltd
orb
inc
mov
movsb
mov
jl
dec
roll
ss
test
sbb
mov
ret
subl
mov
mov
jne
xchg
add
push
lret
orl
movsb
push
xor
sub
push
push
cwtl
pop
imul
movsb
or
dec
push
adc
xchg
add
cli
xchg
nop
les
add
mov
push
nop
pop
mov
mov
or
adc
mov
sbbb
test
rcrl
push
insb
in
push
dec
cmpsb
nop
orb
push
mov
adc
mov
pop
mov
add
sbb
mov
and
into
out
mov
mov
sarb
dec
pop
cmp
jg
pop
and
cmpsl
iret
inc
add
or
movsl
pop
adc
pop
inc
mov
ret
pop
inc
leave
imul
push
mov
mov
loopne
popa
push
cmc
pop
jge
enter
dec
push
add
mov
pop
xchg
filds
lock
js
call
and
aaa
inc
call
cmp
add
nop
dec
or
jae
shlb
in
push
inc
push
cs
aaa
aad
nop
sahf
pop
test
ss
push
sub
push
fwait
cmp
and
add
adc
jle
andb
or
xchg
fidivl
les
popa
and
ss
or
add
cmpsb
push
cmpb
cld
jno
sbb
nop
pusha
xchg
add
jno
ja
mov
insl
inc
out
mov
or
push
sub
jle
into
sarb
or
push
out
lea
orl
or
sbb
bound
pop
fwait
sub
and
jecxz
test
or
push
and
cmpsl
lods
add
outsl
out
and
arpl
ljmp
or
pop
pop
cmp
adc
lcall
test
inc
iret
bndstx
lods
add
mov
inc
fiadds
dec
add
xor
sub
push
dec
dec
cmp
das
pop
pop
ficoml
scas
ror
ss
adc
lret
mov
insb
hlt
bound
mov
nop
and
ret
add
or
daa
lahf
xchg
clc
inc
arpl
movzbl
repz
add
mov
cld
lea
and
pop
lret
pop
in
or
pusha
fs
lea
mov
in
jo
adc
dec
mov
jns
pop
call
outsb
fstps
sub
sahf
xchg
ss
mov
xlat
sbb
lods
nop
adcl
aaa
mov
fistps
push
add
sub
movsl
or
faddl
dec
push
push
lock
cmp
cmp
cmp
or
and
cmp
pop
jae
sub
lahf
jp
or
pop
inc
popa
pushf
fwait
pusha
aam
mov
movl
and
insb
imulb
and
sbb
cs
cmp
mov
push
sub
rorl
jle
mov
das
xchg
test
sbb
and
addr16
jo
gs
ficompl
pop
cmpsb
adc
sti
fsubl
jns
jl
inc
cwtl
fmuls
test
stos
pusha
js
ss
mov
mull
or
add
jl
les
add
xchg
add
shlb
or
ss
or
int
lahf
imul
punpckhbw
mov
and
mov
pop
and
into
mov
add
and
adc
dec
jae
adc
std
sbb
cmpsl
jg
push
into
mov
les
cmpsb
fidivl
sbb
out
sbb
push
or
ja
sbb
jno
push
jge
add
jne
jne
mov
stos
xchg
inc
movsb
imul
fs
fcom
nop
xor
popa
imul
aaa
popa
mov
mov
iret
insb
push
push
push
adc
pop
dec
hlt
jno
jno
push
in
imul
xchg
pop
cmp
sbb
mov
mov
int3
cld
jb
cmpsl
cmp
loop
push
cmp
daa
or
ret
mov
cmp
rolb
sbb
cwtl
cli
test
orl
push
addr16
mov
push
dec
jns
dec
add
push
std
jno
inc
inc
mov
push
pop
sbb
mov
push
push
repnz
addl
mov
push
nop
fsubr
cwtl
pop
adc
lods
xor
fwait
mov
dec
xchg
sbb
sub
dec
mov
bound
outsl
dec
je
xchg
push
inc
pop
dec
add
and
adc
xchg
push
stc
dec
push
cmpsl
push
xlat
push
addb
add
pop
ja
push
stc
jnp,pt
push
mov
push
out
fdivl
pop
pop
xor
addr16
or
jo
gs
ja
push
jb
lods
xor
push
cmp
jmp
pusha
je
mov
pop
lds
in
or
fs
sbb
push
test
fs
flds
push
insb
add
fsubrl
out
and
mov
sub
and
insb
or
push
cmp
or
movsb
jb
add
addr16
fwait
xor
adc
jb
adc
popa
iret
je
inc
cs
xchg
aaa
je
xor
lods
insb
js
enter
js
or
insl
lret
xchg
jl
jae
lahf
cmpsb
mov
sbb
addb
lret
and
jbe
ja
aaa
inc
jno
pop
sbb
iret
test
sbb
data16
mov
ret
insl
push
mov
in
or
add
cmp
inc
cmpsb
mov
leave
push
mov
nop
xchg
outsl
nop
insb
xor
jbe
xchg
xlat
pusha
outsl
and
jb
xchg
jae
xchg
in
jno
aas
cwtl
outsl
cwtl
inc
adc
or
jne
fs
add
sub
aam
stc
jbe
in
sub
add
jo
or
das
cwtl
bound
and
jg
outsl
movsb
adc
add
iret
test
jb
sub
fnsave
ja
lods
outsl
mov
lods
out
jbe
pop
sbb
ja
test
mov
or
pop
mov
jno
mov
shlb
out
jo
mov
or
sub
mov
outsl
mov
fs
sub
mov
rcrb
rcrb
sbbl
dec
jb
or
bound
pop
enter
leave
and
adc
xchg
dec
push
add
lods
jo
int3
adc
shlb
push
push
adc
insl
push
mov
clc
jb
je
outsl
dec
cmpsl
inc
jae
test
push
push
dec
jbe
cld
inc
jns
fsubs
sub
fcoms
fmull
xchg
mov
pop
loopne
mov
lahf
push
ja
lahf
and
in
loopne
mov
enter
cmpsl
or
mov
je
out
xor
lahf
fwait
bound
dec
cwtl
and
call
in
add
inc
push
out
iret
in
fdivs
incl
mov
jno
xchg
mov
movhps
push
push
sbb
pop
push
pop
hlt
xlat
pusha
jne
fs
ds
or
pop
jp
inc
dec
push
xchg
iret
clc
test
bound
clc
or
pop
cld
fdivl
imul
iret
sub
jg
add
sub
push
and
add
push
pop
enter
pop
data16
pop
jbe
dec
push
jns
push
push
push
stc
ficoms
cwtl
stc
add
or
adc
das
gs
jne
gs
stc
push
inc
inc
xchg
push
cs
leave
or
adc
ja
cmp
adc
movsb
jb
add
fcoms
xchg
adc
adc
xchg
cmp
ja
sub
adc
mov
dec
cs
inc
sbb
fldt
inc
push
ja
jae
xchg
lock
xchg
or
push
mov
js
cs
push
and
js
mov
sbb
in
cmpsl
sub
js
and
rolb
push
inc
sbb
xchg
insb
popa
jo
gs
push
pop
sub
jns
ret
sub
push
jmp
push
cmpl
xor
leave
add
or
test
xor
scas
gs
sbb
xor
test
jae
fsubr
add
fsub
mov
dec
xchg
push
ret
push
dec
cmpsl
cmp
jp
jb
push
cmp
or
mov
and
pop
aas
inc
push
int
dec
push
enter
jg
or
hlt
jp
in
add
push
push
pusha
movsl
sbb
inc
xchg
lret
aaa
dec
or
push
lods
xchg
mov
arpl
and
jnp
pop
inc
push
fimull
mov
cmpsl
cmp
in
mov
or
mov
inc
jbe
pop
daa
or
xchg
inc
dec
sahf
daa
dec
mov
cmp
pop
pop
cmp
pop
addr16
pusha
cwtl
jl
cmp
pusha
or
mov
cmpsl
fs
int3
jl
stc
ss
xchg
or
addr16
adc
pop
ror
sbb
insb
adc
xchg
push
pop
insb
cmpsb
xchg
lret
jo
jo
sbb
xchg
add
je
mov
outsl
inc
adc
mov
cmpsl
cmp
and
sbb
das
dec
mov
xchg
jl
jl
repnz
push
das
adc
in
mov
xchg
add
mov
test
cltd
dec
sub
xchg
lret
mov
or
xchg
add
cld
ja
rorb
push
or
add
inc
nop
jb
adc
fs
outsl
inc
xchg
inc
adcb
cwtl
mov
xchg
dec
and
or
pushf
fadds
and
push
add
inc
xchg
mov
in
mov
xchg
movsb
jo
adc
pushf
pop
and
test
leave
in
and
nop
outsb
or
lods
ja
and
cs
lods
pop
pop
insl
es
or
js
xchg
scas
and
inc
jg
sub
add
nop
xorb
mov
mov
pop
mov
daa
push
test
mov
adc
dec
loopne
bsf
cmpb
xchg
enter
out
rolb
and
push
les
push
nop
les
dec
in
test
enter
ja
or
adc
xor
lock
aam
and
int3
sbb
int3
and
shlb
pop
xor
sbb
nop
mov
test
jbe
xchg
aas
lods
inc
jns
ds
sbb
lds
or
inc
fcoms
adcl
xchg
pop
pop
pop
loopne
and
loopne
or
sbb
in
jb
je
lock
enter
call
inc
xor
or
xchg
in
je
in
mov
add
js
andl
lahf
lock
xchg
rcll
add
or
insl
fadd
insl
or
adc
add
cwtl
subb
inc
lods
dec
dec
in
jns
dec
sbb
push
push
lret
jae
cs
mov
ja
sub
cmp
mov
ja
adc
insb
mov
jo
in
jl
insl
je
js
insl
dec
test
adcb
jns
lahf
test
outsb
mov
in
mov
adc
dec
cwtl
insb
pushf
movsb
mov
fsubl
sahf
lret
jae
mov
push
stc
add
mov
out
pop
shlb
push
adc
dec
shrb
aam
fmuls
adc
repnz
sahf
fsubl
in
pop
sahf
lret
call
push
stc
pop
sahf
lock
xor
clc
movsl
stc
mov
adc
push
in
mov
cmp
push
in
adc
adc
ja
iret
in
sbb
and
in
jl
js
dec
sub
sub
xor
jns
jns
dec
xor
cmp
call
je
sahf
lret
jae
mov
cld
push
sahf
lret
push
stc
cmp
push
nop
pop
enter
pop
pop
adc
out
pop
sahf
movsb
push
sahf
lret
jo
je
repz
jle
adc
pushf
test
mov
pop
sahf
lret
push
mov
lret
push
stc
adc
cwtl
pop
pushf
movsb
lret
pop
mov
out
pop
sahf
test
lods
les
add
mov
mov
out
mov
adc
ds
test
fistl
ror
in
jl
test
sbb
in
jl
fsubrl
test
js
jg
iret
in
rol
adc
xchg
in
adc
mov
add
adc
inc
pop
rorb
dec
cld
mov
lock
dec
loope
addb
sub
rcrb
xchg
mov
inc
mov
ror
push
sub
adc
sub
loopne
xchg
inc
inc
imul
mov
sub
popf
mov
test
insb
and
je
shll
insl
mov
xor
movsl
sbb
jae
cmc
insl
addl
inc
pop
inc
rolb
push
dec
xchg
es
xorb
and
and
sub
add
or
fsubrs
popa
and
push
jl
mov
add
xor
cmp
or
sahf
lock
pop
lcall
dec
fsubs
out
fmuls
movsb
arpl
es
and
addb
inc
xor
jge
sti
mov
scas
mov
xor
add
jae
or
or
int
add
sbb
and
lea
out
test
cmp
inc
test
lea
push
mov
inc
testl
lea
ret
xchg
mov
pop
jns
out
and
xor
aas
out
sahf
out
dec
push
pop
bound
dec
mov
mov
es
or
mov
aas
cs
outsb
sub
mov
aaa
sbb
add
mov
popf
loope
dec
cmp
sub
adc
xchg
push
push
jns
movsb
adc
cs
std
or
or
cmpl
ret
inc
xor
sbb
ljmp
mov
xchg
movsl
or
or
pop
inc
mov
and
lret
in
adc
icebp
add
test
pop
insl
jle
ret
xchg
jae
dec
and
sub
daa
pop
jecxz
push
jb
pusha
push
adc
sub
mov
xor
mov
xchg
cld
cmpsl
popf
cmpsl
mov
clc
and
inc
ss
nop
adc
rcll
or
mov
pop
nop
xor
adc
inc
jb
ret
inc
push
jnp
dec
outsb
pop
call
jbe
nop
shrb
outsl
mov
lock
popf
das
call
imul
pop
arpl
mov
mov
xor
fiaddl
inc
cvtpi2ps
xchg
icebp
sub
and
mov
aas
lock
adc
shll
into
pop
xchg
pop
xchg
or
add
xchg
sbb
sbb
mov
dec
das
enter
inc
cs
pop
insl
out
fnstcw
fdiv
rolb
xor
iret
xor
lea
outsb
jae
jo
lods
adc
sbb
jno
xchg
pop
je
xor
test
adc
inc
and
push
out
pop
fnsave
test
cmp
xor
push
add
lock
in
add
lea
push
sbb
sbb
mov
or
mov
push
in
lods
xchg
push
and
add
loopne
xor
rolb
and
mov
lret
lea
add
roll
and
push
jae
push
hlt
pop
cld
push
xor
roll
xchg
add
xor
cmp
jne
test
fs
sbb
dec
clc
sbb
push
orb
sub
fldl
mov
pop
hlt
hlt
cltd
xchg
out
add
lock
dec
or
in
in
xchg
sub
add
sub
push
inc
dec
fbstp
dec
aam
fsub
mov
add
sti
movsl
add
xor
or
inc
push
in
test
enter
sub
inc
ficoml
cmp
scas
inc
popa
inc
adc
rcrl
inc
jne
test
xor
xor
inc
pop
mov
jl
cmp
jle
add
and
add
dec
inc
sub
fnsave
data16
add
js
pop
sbb
mov
mov
push
sub
into
mov
stos
jne
scas
push
xor
aaa
sub
in
mov
ss
cwtl
xchg
test
inc
jmp
les
mov
add
jb
mov
dec
dec
clc
dec
clc
inc
mov
enter
adc
dec
push
jle
inc
adc
enter
ss
test
fsubr
add
stos
inc
jl
xchg
fmulp
lds
fs
mov
fwait
aad
cmp
testl
insb
sbb
pop
cltd
cmp
repz
pop
outsb
jg
repz
repz
out
lcall
cmp
pop
insl
jle
mov
scas
mov
cmp
out
add
rolb
clc
mov
mov
or
and
mov
or
mov
mov
sbb
mov
jbe
inc
jb
mov
mov
push
leave
lds
mov
or
lds
and
xor
cmp
pop
cmp
hlt
sbb
inc
xchg
xchg
mov
test
pop
mov
jo
out
leave
and
jmp
cmp
nop
iret
outsb
mov
enter
push
in
inc
mov
enter
ss
sub
cmpsb
inc
or
repnz
mov
mov
and
mov
sub
push
call
lret
jge
add
dec
mov
mov
stc
fimuls
mov
xchg
fidivrl
std
mov
push
inc
aaa
or
rorb
cmp
and
sbb
xchg
dec
lea
ja
xchg
ss
call
mov
popa
jmp
fcoml
lea
dec
add
dec
xor
inc
divl
xchg
mov
test
test
push
dec
ficoms
mov
mov
mov
repz
lret
mov
and
movsl
push
fadds
movsb
aaa
mov
cmp
adc
lahf
mov
dec
or
adc
mov
pop
ret
lods
aam
mov
dec
roll
leave
sbb
add
nop
mov
test
mov
shlb
bound
or
or
pop
or
or
lods
iret
or
dec
cmc
inc
ljmp
dec
lea
adc
popa
cmpsb
lea
flds
xor
pop
sbb
sub
ss
mov
iret
out
inc
cld
sbb
dec
scas
or
movl
sbb
sarl
mov
outsl
sub
in
adc
je
loope
jg
xor
xor
in
mov
push
sub
je
xlat
dec
lea
js
push
add
popa
jbe
int
mov
movl
daa
xchg
ret
inc
add
mov
push
jo
jnp
adc
adc
divb
add
fistpll
mov
mov
mov
xor
push
out
nop
adcb
xchg
pop
pop
pop
inc
mov
jnp
sbb
movsl
xchg
lods
push
imulb
fwait
lods
or
inc
mov
stc
xor
int
mov
loopne
scas
sarb
in
mov
hlt
mov
les
push
inc
mov
push
xor
pop
test
pop
stos
dec
cmpsl
sbb
pop
ds
jnp
push
mov
sbb
cmp
insb
test
cmpsb
ss
imulb
cmp
movsb
mov
xor
scas
in
fcoms
cs
inc
cmp
outsl
insb
adc
hlt
mov
ret
cmpb
or
pop
call
inc
jne
sbb
in
bound
pop
rcr
jmp
xchg
mov
sub
sub
lods
cwtl
push
out
push
rcl
push
push
mov
dec
push
call
jge
mov
cli
subl
ss
or
push
inc
inc
dec
orl
test
cmpsl
push
push
and
mov
sbb
xor
daa
push
gs
cmp
pop
enter
scas
mov
iret
aam
dec
xchg
cs
fcompl
js
aam
pop
add
popf
lcall
scas
dec
mov
and
push
xor
or
mov
stos
push
mov
mov
por
aam
push
test
push
sbb
fdivr
sbb
xorl
inc
lcall
adc
lcall
sub
mov
out
mov
xchg
mov
pop
das
aam
in
mov
sahf
jne
aad
hlt
stc
sub
push
mov
push
and
lds
cmp
cmp
fs
rcll
outsl
shr
mov
cs
mov
mov
enter
cwtl
mov
lahf
subb
jecxz
inc
sub
xor
or
inc
push
add
arpl
xchg
nop
jp
arpl
fcomps
push
xor
cmpsl
xor
inc
mov
xor
push
ret
mov
loop
jmp
push
adc
push
mov
sbb
mov
ret
fwait
sbb
cs
or
cmp
xchg
jmp
xor
test
movsb
xchg
cwtl
cltd
icebp
dec
aaa
and
jl
data16
into
add
cli
add
fchs
std
js
add
psrlw
mov
and
push
and
inc
out
push
mov
mov
xchg
mov
mov
mov
cs
enter
cwtl
es
cltd
add
fisttpll
sub
movsl
xor
lods
or
lock
jnp
push
test
adc
adc
sbb
enter
jb
mov
enter
fdiv
or
testb
cmpsl
or
in
repz
and
lods
adc
jno
push
repnz
mov
sub
enter
jl
xchg
cltd
test
cwtl
cmp
mov
add
scas
or
inc
adc
pop
or
inc
je
dec
cmp
addr16
lcall
shlb
mov
test
dec
cmp
push
xchg
and
int3
mov
enter
aam
cs
sbb
xor
xor
cli
pusha
enter
enter
fs
into
test
adc
jg
test
aam
test
xchg
lock
mov
cmpsb
push
inc
or
fadds
push
lds
test
lea
stos
pop
jl
jmp
lods
and
rol
mov
fs
stos
cmp
loopne
mov
push
lds
mov
iret
pop
pop
xchg
aam
mov
xor
mov
nop
sub
cwtl
mov
pushf
jge
push
push
pop
loope
push
int
sarl
movsb
xchg
inc
fisttpll
or
stos
ss
notl
adc
cs
or
or
nop
xchg
mov
fcompl
int3
sarl
in
mov
jae
cmp
mov
cmp
outsl
aad
dec
lret
sbb
orl
cmp
or
fwait
mov
jmp
pop
mov
mov
add
push
movsb
cmp
cmpl
or
cmp
xchg
pop
mov
pusha
mov
dec
add
pop
popa
shll
shr
push
inc
es
aam
mov
aad
mov
bt
add
pop
add
testb
cmp
lods
test
hlt
fisubl
lods
scas
lahf
adcl
cmpl
stos
adc
sbb
xor
push
je
mov
into
and
cmp
mov
or
or
cli
inc
js
mov
adc
cmp
lods
pop
popa
push
stos
test
jnp
test
sbb
lods
pop
aam
or
adc
fsub
adc
nop
sub
inc
xlat
es
or
movsb
xor
sbb
jmp
adc
daa
inc
xorb
cmpsb
ret
adc
xor
inc
adc
scas
cmp
push
add
mov
add
out
outsl
cmp
in
adc
scas
orl
xchg
or
and
mov
or
adc
pop
fmull
mov
js
aam
loopne
cs
dec
or
dec
dec
stos
mov
imul
mov
xchg
ret
xor
fsubs
jmp
adc
xchg
push
pop
push
dec
cltd
inc
add
fidivrl
daa
mov
mov
or
inc
jl
inc
mulb
dec
sub
jl
dec
sub
or
aas
out
inc
inc
mov
pop
orb
or
sub
lret
adc
sbb
les
cs
xchg
sub
adc
rorb
sbb
push
je
iret
jns
jno
mov
sub
jb
clc
mov
adc
mov
lret
cld
and
push
ss
scas
test
mov
outsl
fwait
sbb
xchg
hlt
pop
mov
cmc
nop
hlt
shlb
sbb
mov
cmc
xchg
mov
push
cmp
inc
cs
repz
cwtl
or
jmp
hlt
leave
adc
lret
push
xlat
mov
mov
add
nop
pop
imul
cwtl
mov
and
frstor
pop
xor
mov
stc
sbbb
addr16
mov
jne
inc
cmp
mov
scas
xor
dec
mov
xor
push
dec
dec
call
push
pop
xchg
or
xchg
cltd
dec
leave
and
lahf
mov
xorl
lahf
inc
add
inc
mov
sbb
sub
shrb
addb
mov
jmp
test
xor
or
xchg
test
push
xchg
adc
push
movsl
mov
loopne
fldt
push
mov
insl
arpl
mov
sti
fdivr
mov
mov
mov
jecxz
mov
call
test
mov
sti
imul
sbb
or
jge
cmp
pop
jmp
xlat
adc
imul
lret
mov
inc
jo
xchg
stc
xchg
push
add
repnz
add
xchg
push
imul
jbe
sbb
mov
mov
or
test
push
xor
add
push
aas
ret
push
or
cmp
and
xchg
call
fwait
mulb
in
jo
in
loopne
mov
and
sub
fstp
rol
jmp
cwtl
int3
xchg
mov
or
jns
in
mov
lds
gs
aas
and
xorl
inc
dec
push
xchg
mov
aad
mov
in
flds
cmpsl
xlat
sahf
inc
and
and
mov
enter
loope
mov
add
decb
add
add
push
mov
or
pop
add
loop
add
adc
cmp
in
loopne
cmpsl
insl
mov
lret
pop
push
xor
mov
rorb
or
out
pop
and
adc
jl
xchg
mov
cmpsl
inc
mov
sbb
inc
in
in
addl
std
inc
imul
add
lock
divl
cld
iret
imul
xchg
imul
nop
pop
ja
test
add
lock
test
push
test
and
in
pop
ret
add
inc
cmpsl
out
adc
xor
lock
mov
xchg
pop
or
repnz
shlb
in
sub
add
daa
dec
or
lods
popl
xchg
out
or
lds
scas
int3
mov
mov
jmp
sub
and
cmpsb
mov
dec
aam
and
lret
lods
mov
pop
ja
sbb
nop
cmc
or
rcrb
stos
repnz
dec
sbb
lret
add
cmp
and
pop
pop
add
mov
push
push
call
loop
cs
sub
sarb
jp
loopne
xchg
test
cmp
add
outsb
jne
or
gs
xchg
xorl
push
icebp
add
adc
xlat
movsb
mov
pushf
je
jnp
pop
adc
loopne
jp
pop
and
cmp
push
and
sarb
add
ja
dec
test
lea
test
out
xchg
inc
sbbb
sub
enter
xor
mov
adc
dec
jnp
inc
or
repz
mov
sub
sbb
adc
push
icebp
nop
or
cli
mov
dec
adc
mov
push
nop
in
subl
cmp
bound
fisubl
mov
cwtl
xor
adc
int
xor
shl
and
dec
and
jmp
jbe
sub
cmp
mov
push
mov
icebp
inc
add
test
mov
adc
lea
in
dec
mov
shl
out
pop
mov
adc
dec
rolb
sub
js
test
add
add
and
add
mov
movb
xor
mov
sub
shll
inc
add
adc
sub
test
xchg
test
sub
adc
mov
adc
insb
mov
jb
addb
or
mov
ja
roll
clc
push
pop
jle
mov
mov
sahf
xor
mov
push
sbb
push
sub
gs
adc
in
ret
pop
xor
lea
in
nop
aaa
sub
sub
test
mov
fwait
popa
ret
bound
sub
xor
es
xor
push
push
push
mov
inc
adc
add
push
aad
lcall
sub
dec
cs
lret
imul
int
loope
fwait
mov
aas
mov
add
inc
or
loope
insl
jge
jg
cmc
xorb
sub
hlt
adc
aam
pop
mov
frstor
sub
inc
js
vmread
test
popa
and
push
rorb
inc
sbb
xchg
cld
bound
jne
xorb
adcb
ss
cwtl
jge
test
inc
sbb
add
scas
mov
pop
stos
call
pop
out
scas
ret
mov
or
pop
in
jne
push
in
roll
clc
mov
daa
inc
xor
xor
loope,pt
add
adc
adc
gs
cmpsb
adc
pop
or
jecxz
add
jb
push
fld
cli
out
dec
xchg
mov
or
push
shlb
movb
outsl
ret
pop
popf
outsl
cmp
fmull
adc
and
mov
push
stc
add
xor
pop
mov
aaa
or
mov
sbb
mov
daa
into
addb
mov
jg
les
sbb
or
rolb
add
and
sbb
xor
jo
sbb
testb
and
fsubl
into
push
xor
loop
test
dec
out
arpl
jns
xchg
les
push
adc
pop
push
inc
add
dec
push
or
dec
add
and
pop
mov
sar
add
adc
or
daa
push
add
push
cmc
lahf
pop
push
inc
sahf
sub
movb
xlat
gs
dec
sbb
cmpl
shr
xchg
lret
jae
hlt
dec
in
pusha
and
jnp
pop
outsb
sbb
jg
push
xor
xor
in
in
jo
xor
lds
xchg
loopne
dec
push
xchg
gs
mov
popl
bnd
adc
mov
out
lret
pop
int
inc
leave
dec
leave
inc
lods
sub
lea
pop
sbb
enter
addl
and
leave
push
push
inc
cmp
push
pop
out
mov
rclb
in
cmc
cs
lret
jo
movb
into
clts
pop
push
sub
jl
cmpb
mov
out
sub
clts
push
sub
or
add
mov
jmp
out
pushf
movsb
push
hlt
hlt
or
xchg
rclb
es
jns
xchg
xchg
xlat
pusha
mov
add
jbe
add
int
nop
adc
add
add
jmp
sub
inc
int
xchg
addb
loop
leave
cmpsl
ret
mov
inc
test
inc
shlb
cmc
dec
out
sbb
outsb
lods
lods
inc
mov
push
xor
and
push
mov
dec
cmpsb
inc
ret
mov
push
push
push
or
inc
mov
mov
or
cmpb
adc
sub
inc
add
xchg
xchg
xlat
add
enter
adc
mov
xor
fstl
adc
gs
cltd
push
xor
adc
push
ljmp
sbbl
xor
cmp
je
xchg
sbb
into
fstl
call
cmpsl
sbb
push
xor
push
xor
inc
ret
jne
pop
sbbb
mov
xor
fldenv
xchg
loopne
movsb
or
mov
cltd
and
xor
ret
mov
sub
xchg
sub
dec
pushl
or
or
inc
das
ret
nop/reserved
push
enter
xchg
pop
repnz
push
add
cmp
add
mov
mov
xor
or
jmp
add
sti
push
jne
mov
dec
jl
mov
test
and
out
or
mov
data16
or
js
inc
movsb
ss
adc
sub
and
mull
inc
mov
jne
push
ret
fs
fst
cmpsl
lret
decl
inc
dec
dec
dec
push
push
daa
xor
mov
xor
xor
out
cli
es
fcoms
xchg
adc
push
adc
lock
xor
addl
pop
je
lods
iret
mov
hlt
mov
popa
iret
sub
cmp
or
adc
in
scas
push
inc
cmp
sbb
bound
addb
inc
inc
sub
popl
shlb
and
add
add
ret
pop
adc
jns
rcrb
out
repnz
add
add
mov
and
cmp
jmp
push
pushw
rorb
rol
add
test
in
push
and
shrl
jns
xchg
sarl
push
cmp
xor
shl
sub
jnp
or
sub
cmpl
cwtl
adcb
inc
lea
cli
sub
subb
mov
dec
jae
mov
int
loopne
jns
sbb
push
jo
pop
inc
mov
inc
pop
push
jg
jmp
add
lret
hlt
add
inc
in
aam
or
push
test
add
inc
fisubs
inc
aaa
mov
movl
jg
xchg
arpl
or
test
sub
cmpsb
cmp
pushf
gs
and
ret
push
jl
or
not
xchg
stc
shrl
sarl
iret
lds
in
shll
or
pop
loopne
and
aad
loopne
push
xor
sysret
add
push
mov
inc
or
inc
mov
imul
aam
aam
roll
and
adc
mov
pop
xor
xchg
test
rorl
dec
dec
sbb
adc
adc
and
or
test
jnp
and
jns
bound
lods
aad
dec
enter
call
mov
fcom
inc
je
aas
cmc
inc
xlat
pop
les
adc
roll
sahf
xchg
in
push
pop
fimuls
and
jl
mov
adc
xor
pop
push
popl
adc
test
add
push
mov
dec
cwtl
push
jb
add
jns
or
pop
cli
test
cld
insb
mov
dec
aaa
mov
mov
or
jne
sub
add
mov
rolb
push
push
sub
xor
sub
sub
fbld
rorb
jne
sub
fidivl
adc
outsl
xor
sub
mov
mov
lds
or
nop
xchg
in
mov
adc
inc
xchg
mov
inc
xor
or
inc
xor
enter
pusha
in
mov
add
cmp
enter
jge
daa
enter
cli
or
insb
jbe
add
add
xchg
push
push
pop
cmp
jmp
push
nop
mov
or
jo
mov
or
nop
out
add
mov
pop
jo
or
or
mov
inc
adc
xorb
lea
or
enter
lods
xchg
cmp
inc
fsubr
push
inc
inc
addr16
and
or
push
ja
xor
or
sbb
nop
cld
outsb
or
mov
or
int
or
push
hlt
mov
leave
push
lock
add
rol
inc
ficomps
in
aaa
pusha
fld
or
movsl
sbb
or
or
cmp
ficoml
pushf
push
add
aaa
fwait
in
sub
call
fstpt
inc
loop
xor
or
addr16
push
xor
lods
pop
sub
push
ss
mov
mov
and
add
pop
push
xlat
and
dec
inc
mov
mov
add
sub
lret
and
and
stc
popf
add
jns
fcmovnu
xor
push
add
ret
xorl
ljmp
dec
xlat
lea
xor
dec
and
xor
sub
and
iret
pop
lock
add
lea
sub
adc
cwtl
int
ret
rcll
data16
rolb
sar
sti
inc
shll
jl
inc
cmp
pop
or
pop
movl
in
push
add
and
test
clc
pop
cmp
pop
je
push
mov
inc
inc
stc
test
pop
cmp
dec
in
pop
push
lock
pusha
add
mov
adc
mov
cmp
sbb
push
movsb
mov
jno
sub
sub
adc
fstpt
xor
or
adc
xlat
jmp
add
je
push
into
mov
fwait
insb
push
das
adc
and
adc
insb
or
mov
xchg
fst
push
pusha
leave
lods
sbb
xor
cmp
mov
dec
clc
mov
jl
dec
dec
nop
mov
dec
mov
mov
push
scas
mov
fisubrs
dec
add
mov
pslld
sahf
xchg
movsb
loopne
cmp
inc
mov
loop
filds
mov
sub
andps
inc
xor
sub
imul
xor
add
inc
sbb
inc
pop
add
or
mov
dec
adc
add
jne
sarb
sbb
cltd
ret
dec
push
sub
lret
nop
cmp
adc
pop
shll
inc
push
popa
xchg
and
lds
bound
rcr
inc
push
ret
movsb
aam
inc
xor
xor
test
fcoml
push
sbb
mov
mov
pop
xor
es
mov
inc
movb
rolb
push
movsl
test
and
insb
xchg
and
push
adc
xchg
push
mov
insb
jmp
mov
cs
xchg
popa
adc
aam
adc
adc
shld
xchg
adc
aaa
lock
push
add
and
jmp
dec
adc
or
and
in
je
call
lret
outsl
pop
sub
movsb
push
and
add
mov
lea
lcall
les
xchg
es
or
mov
nop
das
dec
inc
adc
add
mov
testl
popl
scas
xor
pusha
leave
pop
sbb
ja
sub
rcrb
les
push
xor
dec
in
mov
and
in
dec
scas
enter
aam
fsubl
dec
xor
mov
or
jecxz
lret
fisubs
inc
xchg
cmc
gs
and
aam
mov
or
enter
and
test
mov
or
push
inc
adc
xor
mov
iret
inc
sbb
sbb
adc
xchg
pop
adc
iret
inc
mov
xchg
and
xchg
cld
jp
adc
bound
cmp
cld
mov
dec
les
jmp
mov
rol
arpl
insb
pop
push
xchg
out
lahf
lods
or
scas
push
rorl
xor
shrb
cmp
jle
adcb
sub
aas
push
jne
push
pop
xor
xor
jmp
push
sub
sub
jno
xor
sub
push
sbb
cltd
insl
cld
movsl
inc
and
and
pop
pop
cwtl
xchg
and
movsb
inc
xor
lea
push
div
int3
cs
popa
xor
sub
adc
sbb
xchg
pusha
mov
and
lea
jl
sbb
or
loopne
inc
rcrb
pop
inc
in
pop
xor
push
sub
or
js
sbb
push
nop
dec
leave
mov
dec
and
sub
decl
sub
jg
dec
mov
lds
mov
adcb
inc
jne
add
cwtl
sub
pop
ror
ret
xchg
rcrb
mov
xchg
lods
push
rcrb
inc
inc
mov
sub
ljmp
sbb
out
inc
aam
leave
popa
movsl
or
cld
enter
cmp
inc
cmp
je
pmulhuw
or
or
inc
and
and
dec
sub
in
ss
rorb
rcl
in
in
aad
xlat
fsub
in
in
fcmovu
fsub
in
in
shl
in
rol
in
in
enter
in
lret
in
in
int
iret
mov
inc
sbb
mov
xchg
call
or
xlat
test
daa
cli
sbb
mov
call
insl
outsl
or
inc
ljmp
mov
in
fwait
mov
pop
iret
or
and
xchg
pop
mov
cld
ljmp
adcb
ficoms
ret
or
pop
sbb
and
add
and
xchg
or
pop
add
fdivrs
add
sbb
ljmp
mov
jns
add
fsubrs
xor
xor
sbb
inc
xchg
push
pop
mov
pop
and
cmc
aad
sbb
rorl
sbb
test
outsl
mov
mov
inc
cmc
clc
cmp
inc
adc
fchs
sub
mov
jno
add
inc
inc
mov
add
sbb
or
inc
stos
jbe
es
mov
shlb
test
je
sub
push
jmp
pop
inc
sbb
xorl
in
jecxz
js
adc
sbbl
dec
pop
and
mov
rcl
pop
add
popa
bound
xor
stos
fistl
and
cwtl
movsb
or
or
cmp
das
dec
jmp
pushf
mov
xor
test
jmp
xor
jno
ret
lahf
ret
mov
dec
dec
pop
jae
inc
in
out
mov
in
nop
daa
xchg
push
push
add
shr
cltd
test
cmpsl
add
pop
mov
sbb
sub
add
mov
xchg
ret
sbb
xlat
sub
inc
and
aas
xor
push
orl
inc
cmpsl
pop
outsl
std
xchg
mov
insb
jb
mov
gs
test
lock
daa
sbb
add
test
lods
xchg
inc
xor
push
das
adc
cs
inc
pop
pop
insl
adc
in
xchg
test
inc
rcrb
inc
outsb
outsl
jne
push
sbb
jae
push
xlat
insb
push
les
pop
mov
rcll
and
bound
iret
jge
sbb
sarl
out
and
and
shl
daa
add
adc
mov
mov
dec
and
add
xor
sti
and
inc
mov
jge
push
leave
mov
jmp
dec
mov
cmpsb
out
push
cmp
push
mov
add
sub
fcoms
das
lock
lahf
fiadds
push
xchg
lahf
push
outsb
dec
ss
sub
ret
mov
cmp
sub
or
movsl
inc
adc
add
xor
popa
xor
adc
iret
and
in
sbb
xchg
push
fdivl
adc
mov
fbstp
mov
test
lock
inc
imul
xor
mov
pop
filds
cmp
aam
sub
mov
mov
shl
mov
arpl
movsb
add
lock
pop
data16
push
ret
addl
adc
movsl
das
arpl
adc
fiaddl
fisubs
das
xor
jl
fmuls
sbbb
jmp
xor
push
adc
cmp
or
or
insb
pop
jl
push
cmp
mov
clc
and
add
cmp
or
and
dec
fidivrs
hlt
jne
or
and
loop
ds
mov
adc
mov
clc
dec
dec
add
push
inc
lock
rolb
aaa
fwait
push
and
pop
sub
add
and
add
xchg
ds
add
sub
cld
push
push
adc
or
or
xchg
jo
xor
jp
dec
xchg
add
push
and
push
lea
inc
popa
jnp
cmpsl
or
adc
xchg
xchg
sub
jnp
xor
adc
cmp
test
aaa
cmp
sbb
or
inc
add
orb
xchg
in
pop
pop
fists
in
push
sub
hlt
and
fcoml
xchg
repz
in
test
pop
out
mov
dec
jns
and
nop
arpl
dec
aaa
add
push
out
faddl
dec
and
into
sub
jne
adc
sbb
in
mov
popf
cmp
enter
mov
loopne
popf
bound
adc
or
std
aam
push
mov
adc
inc
aad
loopne
rclb
inc
ficompl
loope
in
adc
cmp
enter
mov
inc
or
push
cmpsl
rcll
lahf
jmp
aas
push
sub
mov
flds
ds
pop
lock
pop
rcl
int3
adc
jl
and
cs
sub
movsl
daa
subb
add
mov
jne
outsl
pop
shrl
push
adc
xchg
or
add
sahf
ret
sub
push
cmc
fdivl
dec
push
dec
dec
ret
ret
in
aas
ret
adc
lahf
or
pop
adc
sub
sub
xlat
jmp
adc
inc
add
loopne
repnz
cli
arpl
neg
call
insb
mov
pushf
jge
aaa
or
add
clc
loopne
xorb
cmp
pop
xor
pop
sbb
sub
push
addr16
addb
push
inc
sub
inc
push
scas
sti
fidivs
inc
mov
inc
mov
lret
inc
orb
inc
jnp
shlb
inc
cmc
or
jmp
cmp
mov
xor
lret
lahf
inc
or
or
xor
xchg
divl
nop
testl
dec
add
clc
adc
int
cld
xchg
xchg
sub
pop
dec
dec
mov
inc
or
arpl
cmp
xchg
inc
and
mov
add
ds
js
and
popf
cmpsl
mov
scas
add
pop
or
and
in
sbb
pushf
sti
inc
les
dec
cli
push
and
xor
js
jg
sub
adcl
mov
and
pop
sub
ret
scas
xlat
movsl
mov
or
ss
inc
or
bound
shrb
pop
xlat
inc
dec
in
pop
or
push
add
xchg
jno
or
lods
mov
push
inc
pop
xchg
in
dec
inc
iret
and
pop
push
cmpb
cmp
dec
and
fidivs
cmpsl
push
xor
cwtl
inc
push
xor
push
dec
adc
les
repz
push
sbb
xor
pop
jno
adc
inc
adc
mov
add
mov
sti
inc
fldl
pop
les
js
add
add
imul
pop
sahf
cli
pop
or
pop
xor
jne
pop
adc
adc
sarb
jne
sti
inc
in
adc
sbb
nop
pop
mov
xor
in
push
jg
enter
pusha
and
cld
and
loope
iret
inc
adc
enter
pop
test
mov
es
inc
jb
pop
or
in
call
pop
add
cmpl
and
inc
mov
mov
icebp
fs
dec
outsb
xor
sbbl
nop
mov
inc
mov
test
rclb
dec
mov
mov
sbb
mov
push
inc
cmpsb
add
adcb
faddl
jns
ror
loopne
incb
les
popa
or
xchg
insb
stos
pop
dec
decl
es
or
dec
sbb
dec
jb
pop
insl
push
add
mov
mov
pop
pop
and
pminub
jle
push
outsl
out
add
adc
inc
or
cmp
fnsave
pop
mov
pop
je
mov
mov
xchg
sarb
mov
push
push
dec
adc
add
aas
push
inc
dec
mov
push
add
inc
add
pop
jo
adc
jne
mov
xchg
in
mov
and
fiaddl
or
sbb
add
inc
sbb
jo
movsb
mov
in
stos
mov
mov
daa
and
mov
xor
mov
into
cmp
cmp
sbb
inc
sbb
add
movsb
xlat
test
or
mov
insb
dec
aad
adc
adc
and
enter
xchg
xchg
jns
js
xor
js
add
jno
and
test
lahf
in
call
pop
inc
inc
push
mov
rorl
push
add
adc
mov
mov
outsl
jbe
int
inc
adc
popa
insb
outsl
sbb
xlat
enter
and
sbb
push
add
imul
inc
enter
or
jns
adc
repnz
out
pop
xor
jb
add
and
mov
adc
jmp
inc
enter
mov
mov
or
das
fidivl
cltd
or
in
out
lock
xchg
lock
adc
repnz
push
pop
or
mov
push
enter
sub
gs
xlat
xor
xchg
or
shlb
mov
add
jo
push
arpl
test
movsb
or
pop
xchg
dec
scas
outsl
add
mov
add
push
or
test
jae
mov
jp
sbb
jo
mov
mov
xor
push
pusha
or
dec
push
shlb
and
dec
cld
fxch
or
cmpb
nop
or
data16
int3
in
xor
xchg
push
clc
sbb
adc
cmp
xchg
sbb
fimuls
push
pop
mov
dec
jle
and
ds
jnp
mov
ds
data16
push
nop
sbb
int
mov
push
inc
push
dec
and
push
push
and
je
outsb
adc
pop
xor
sarl
push
lock
popa
in
mov
xchg
cmp
filds
nop
dec
pop
test
shll
out
data16
or
incb
add
incb
in
inc
jo
imul
decl
repnz
pushf
cmp
xchg
cmpsb
push
pop
add
stos
or
repnz
add
add
xor
icebp
lahf
mov
push
movsb
je
or
cmp
ret
sbb
inc
or
loop
jae
iret
mov
push
add
les
sbb
insl
sub
push
adc
sbb
fists
cmp
insb
lea
push
cwtl
cwtl
rolb
and
lret
sub
pop
lea
inc
ret
mov
ss
loope
push
push
orb
inc
scas
pop
push
dec
test
dec
pop
mov
add
inc
out
mov
mov
insb
bound
into
pop
dec
xchg
lock
or
inc
mov
lods
xor
add
call
and
cmpsl
adc
fimull
push
and
mov
das
pop
sti
mov
lea
xor
rol
cs
enter
inc
pop
or
cmp
add
negl
push
inc
out
cmp
pop
adc
push
mov
lods
scas
popf
pop
fmuls
adc
nop
jbe
xchg
lock
out
inc
lcall
xchg
mov
pop
dec
push
pop
add
xor
push
into
insb
adc
pop
xlat
xor
dec
fld
and
fisubs
pushf
push
popa
ljmp
jmp
sub
stos
and
leave
or
or
inc
imul
lcall
jno
je
add
sbb
adc
mov
adc
iret
push
fucomi
xchg
addb
adc
movsb
shrl
push
inc
add
imul
or
xor
adc
adc
es
sti
dec
add
daa
add
movsb
ret
add
xorb
clc
in
adc
out
sbb
loope
enter
test
mov
in
sbb
add
enter
pop
push
cmp
inc
or
insl
sub
loope
rolb
cltd
push
add
test
xchg
nop
jno,pn
mov
mov
mov
dec
push
in
mov
in
daa
test
adc
pop
leave
or
movsb
stc
cmp
lock
or
adc
mov
xchg
push
invd
idivl
jo
stc
movsb
in
and
jg
or
push
in
rol
cmp
cli
dec
xor
mov
js
cmp
je
sub
mov
inc
mov
mov
into
into
subl
aam
mov
xchg
xchg
jle
lods
dec
std
sbb
jge
jle
aaa
adc
test
int
fs
mov
jle
dec
mov
cmp
mov
or
stc
aas
clc
cld
out
loope
rolb
pop
or
pop
pop
arpl
mov
shrl
icebp
test
lods
push
enter
je
nop
loope
fs
ret
js
std
cmpsb
mov
and
test
or
sarb
mov
add
lock
popf
mov
pop
aam
add
scas
pusha
mov
add
dec
and
sbb
imull
sub
add
andb
dec
jne
cmp
cmpb
pop
test
shr
dec
std
bnd
add
inc
lods
add
inc
mov
add
push
or
sub
jmp
jae
or
pop
les
inc
je
dec
push
sbb
mov
add
sbb
add
or
dec
pop
mov
mov
push
cmp
pop
mov
dec
mov
xchg
roll
sbb
ffree
adc
add
and
mov
or
and
pop
pop
dec
stos
sbb
and
sbb
jge
lods
adc
adc
mov
jmp
inc
push
xor
add
xor
lock
or
lods
sub
lods
clc
inc
push
or
push
jb
movups
add
xor
xor
test
push
push
gs
push
or
xchg
int3
sub
jns,pn
call
add
jo
or
je
cmpsb
mov
aas
orl
or
pop
mov
sbb
fnstcw
loopne
inc
push
adc
sbbl
push
and
loop
fistps
push
dec
jae
add
imul
inc
fidivrs
push
and
mov
cltd
pop
cmp
insb
add
fdivl
call
into
or
jg
jg
jmp
inc
jne
inc
mov
push
adc
xchg
test
outsl
jno
or
inc
frstor
dec
ljmp
scas
adc
clc
jne
jg
sbb
lahf
lods
mov
push
enter
sbb
xorl
test
dec
inc
js
jb
aas
rcll
inc
sbb
sub
stc
lcall
sub
mov
out
add
loop
aam
sub
fdivl
cmp
loop
je,pn
xor
mov
in
inc
clc
sub
es
inc
hlt
mov
addr16
iret
addr16
add
xor
push
and
mov
or
xor
stos
das
mov
add
popf
adc
inc
cltd
and
loope
jbe
jb
xchg
imul
xchg
add
sub
cmpsb
movsl
cmpsb
jb
inc
push
fldt
call
dec
daa
add
loopne
xorl
scas
cmpsl
or
loope
sbb
cmp
orb
pop
pop
cltd
insl
inc
test
insl
aad
aam
dec
dec
loope
mov
loopne
sbb
and
in
cwtl
pop
and
add
or
out
xchg
loopne
repz
mov
cmpsl
mov
jle
xchg
mov
xor
push
inc
and
das
mov
aas
rcrb
repz
and
ds
mov
push
test
cmpsb
push
adc
dec
cmp
cli
mov
es
pop
dec
aam
mov
jno
lret
cmpsb
add
outsb
in
loopne
jae
dec
inc
cmpsb
mov
mov
xor
jne
push
jp
and
add
jge
addb
ret
fcoml
mov
stos
vpmullw
adc
push
or
adc
testb
push
lea
je
andl
aas
iret
mov
pop
sbb
enter
cltd
out
cwtl
pop
sbb
subl
cli
insb
pop
sub
fstl
sbb
imul
cmpb
or
hlt
jmp
mov
xorb
rorl
outsb
ss
pop
sbb
pop
sbb
adc
cmp
inc
sub
arpl
jg
dec
inc
ds
mov
sub
out
mov
pusha
or
movsl
shl
pop
and
fucomip
xor
test
cwtl
fs
add
add
nop
sub
or
and
and
enter
and
mov
or
popa
cmc
hlt
aad
pop
adc
stos
xor
inc
and
xchg
and
sbb
outsl
pop
call
or
dec
adc
and
adc
pop
or
addl
fstps
xchg
push
sti
enter
xchg
push
adc
aas
or
test
scas
xor
inc
jns
out
cmpl
sub
and
cmp
rclb
adc
cmpsl
sub
push
inc
mov
xor
jle
cmp
gs
call
ret
or
sub
push
push
movsl
add
add
jle
loopne
idiv
lret
aam
inc
call
or
jle
add
andb
push
cmp
add
adc
cwtl
fiadds
mov
xchg
jae
xchg
and
xchg
cltd
mov
test
loop
les
mov
adc
dec
xor
mov
xchg
xchg
or
clc
or
adc
cmp
jbe
adc
sbb
xchg
and
mov
fwait
sbb
dec
sub
jmp
jmp
lds
call
cmp
push
into
hlt
addl
inc
xchg
pop
out
mov
sti
cmp
dec
jae
lock
popf
inc
test
cld
push
fists
jns
sbb
mov
xlat
pop
je
xchg
fisubrl
addb
and
and
adc
xchg
sarl
push
fld
sub
stc
sub
leave
inc
and
xchg
mov
sbb
adc
mov
movsb
dec
dec
rcrb
mov
loop
andb
or
mov
mov
or
add
inc
and
mov
lock
js
loope
and
daa
dec
negb
mov
push
test
cltd
push
jbe
in
enter
push
test
inc
call
lcall
pop
push
inc
and
js
mov
into
adc
xchg
add
std
sbb
or
push
loopne
jbe
jmp
add
movl
jnp
test
mov
inc
addb
inc
cmc
xchg
pop
int
movl
adc
test
mov
fstpt
inc
leave
or
xchg
fisttpl
popa
push
add
jnp
pushf
mov
dec
xor
pop
js
xchg
mov
cmovp
sbb
insb
push
or
daa
fs
jns
mov
adc
sub
inc
fsubs
mov
mov
push
inc
push
add
jmp
fisubrs
push
mov
scas
sub
inc
adc
jns
fsubrs
inc
or
sub
sub
jl
fdivrs
sbb
mov
jecxz
mov
sbb
or
xorl
fiadds
mov
cmpsb
pop
adc
cld
sbb
pop
pop
add
lea
fmull
mov
mov
and
or
pop
daa
push
cwtl
cwtl
dec
and
push
mov
sbb
jecxz
dec
pop
or
rcrb
or
push
push
repnz
pop
orl
ret
mov
and
mov
add
das
jns
xchg
es
xchg
cmp
push
ja
add
mov
bnd
inc
scas
pusha
popa
and
xorl
mov
fisttpl
or
lea
out
add
sbb
xor
cld
mov
movsb
hlt
sbb
movsb
imul
add
mov
lahf
mov
sbb
lret
addr16
dec
lcall
jb
xchg
aas
sbb
mov
inc
mov
inc
and
stos
fsubrs
add
test
jbe
dec
scas
and
into
sub
pop
and
rorl
cmpsl
sub
sub
push
xor
pop
repnz
enter
inc
fists
push
fs
and
inc
mov
mov
push
or
push
mov
or
inc
inc
daa
pop
and
je
jl
or
mov
divl
out
call
mov
pop
inc
ret
pop
lock
adc
sub
nop
ret
aas
fistl
sub
sbb
pop
cmovp
push
fsubs
movsl
ucomiss
dec
imul
dec
xchg
insb
fs
jmp
jl
xchg
sub
pop
xor
sub
movl
xchg
enter
pusha
das
mov
scas
fwait
lock
and
ret
mov
cmp
pop
inc
jl
push
outsl
jl
in
adc
dec
or
cmp
fldenv
mov
in
pop
inc
sbb
in
popa
add
adc
sub
in
mov
and
and
les
inc
or
mov
push
mov
or
shrb
or
inc
imul
das
pop
test
imul
incl
fcmovb
ss
movsb
lock
jl
add
shll
cmp
or
sub
imull
add
imul
pop
add
cld
mov
push
iret
enter
pop
and
push
imul
stos
add
stc
or
xor
inc
add
nop
mov
pop
call
popa
pop
cmp
shrl
sub
lds
sub
orb
inc
in
mov
fsubp
inc
push
subl
add
and
or
push
inc
push
xchg
movsl
test
ret
js
les
iret
and
add
pop
daa
dec
scas
and
mov
in
sbb
mov
nop
les
enter
mov
cmp
fldcw
xchg
push
pushf
xchg
adc
out
imul
lods
push
push
xchg
fnstcw
lock
push
int3
cmp
or
icebp
cmp
nop
mov
je
daa
mov
fwait
pop
add
ss
daa
rcr
adc
jmp
int
stos
jne
pop
aas
pop
xor
fistl
or
lahf
xor
sbb
sbb
sub
aam
or
or
loopne
dec
iret
pop
sub
imul
mov
mov
pop
lcall
movb
push
cmp
lods
sahf
imul
inc
or
out
and
mov
cmp
in
sarb
xor
mov
repnz
les
nop
or
pop
or
lret
mov
stos
or
add
aam
sbb
xor
push
sbb
add
inc
jbe
in
js
mov
lea
pop
je
es
popf
ljmp
sub
mov
xor
sbb
add
insl
xchg
lahf
aam
arpl
mov
mov
push
leave
inc
or
sti
jae
mov
mov
enter
adc
aam
enter
imul
and
add
je
iret
dec
sbb
mov
out
rolb
push
stos
lods
jl
cmp
pop
and
lcall
and
push
rorb
sub
lea
fcoms
xchg
negb
inc
jle
mov
dec
lea
in
push
xchg
lods
mov
or
fcoml
xchg
les
nop
add
lret
mov
push
in
add
call
dec
dec
mov
sbbb
add
inc
xor
imul
lock
add
mov
sub
lea
cmpsb
cmpsl
fwait
sbb
xor
das
cmpsl
pushaw
lds
arpl
pop
sbb
movsl
aas
rorb
fadds
sar
sbb
cmp
jmp
pop
mov
arpl
lret
les
pop
out
mov
mov
nop
data16
push
mov
mov
jp
test
xchg
lock
mov
enter
sub
xor
adc
rorb
xchg
xchg
push
in
divb
push
aas
in
pusha
sbb
xchg
test
rcll
mov
arpl
sbb
ss
insl
push
jno
sub
fs
push
mov
mov
and
hlt
out
call
xchg
mov
mov
cmpsl
sti
or
out
adc
fucomp
cmpsb
xor
xlat
je
iret
xchg
dec
shll
lods
mov
xor
xchg
mov
loopne
in
in
jb
jl
lahf
nop
xchg
nop
dec
jp
cmp
and
pop
xchg
xlat
std
loopne
mov
mov
outsl
orb
cmp
nop
popf
push
cmp
sbb
pop
iret
pusha
repnz
cmp
or
outsl
pop
mov
cmp
pop
inc
or
mov
and
pop
aam
add
fwait
and
lods
or
dec
cwtl
insl
cltd
popa
and
add
popa
loop
cmp
inc
cmp
push
and
sub
nop
test
call
nop
and
jae
xor
xchg
adc
add
xlat
or
pop
adc
fsubr
dec
push
jne
inc
daa
inc
sahf
sti
adc
xchg
mov
jbe
imul
and
or
into
pop
sbb
jg
or
dec
je
dec
jne
and
sbb
jmp
and
xor
nop
xchg
xchg
dec
add
pop
shrb
out
adc
add
mov
xor
push
and
or
clc
sbb
cs
rcrl
cld
clc
inc
pop
add
sbb
rolb
jne
filds
adcl
addb
lods
mov
jbe
shl
jmp
mov
addb
push
in
mov
lahf
popf
inc
dec
lods
out
or
mov
or
jl
xor
clc
push
fwait
sub
xor
addr16
sub
outsb
iret
sub
or
push
dec
mov
in
xor
push
and
sub
jmp
ret
shrl
sub
movsl
or
xor
cmp
xchg
inc
dec
call
push
sbb
test
hlt
pop
mov
sbb
aaa
arpl
mov
pop
xchg
push
cwtl
push
dec
or
adc
or
push
pop
mov
test
or
pop
mov
mov
jmp
mov
cs
mov
sti
push
sub
and
add
mov
test
sub
fcmovbe
xor
sub
test
addr16
mov
xor
dec
mov
fsubs
cmpb
xchg
cmpl
sbb
jmp
fwait
cmp
jmp
adc
or
data16
leave
pop
popf
ja
inc
inc
jle
in
nop
add
cmp
fcompl
mov
push
ret
ja
dec
sub
lahf
adc
dec
stos
add
orb
jb
and
push
mov
add
or
cmp
and
and
ret
inc
mov
inc
nop
cmp
adc
add
add
xchg
cmp
inc
inc
and
and
dec
shlb
and
popa
mov
dec
incb
xor
insb
inc
push
popa
push
adc
adc
and
popa
pop
scas
nop
test
in
inc
and
add
movsb
sbb
add
pushf
sbb
mov
mov
sub
lods
pusha
sub
jb
sub
nop
and
popa
cmp
stos
test
mov
mov
mov
inc
leave
push
inc
fwait
and
cmc
dec
test
sbb
cwtl
inc
inc
ret
and
sbb
adcl
jno
cmp
aam
inc
jns
dec
inc
dec
push
jnp
pop
cmp
add
push
sub
std
in
mov
or
jl
or
sysenter
or
mov
xchg
inc
and
pushf
int3
or
lods
jns
mov
jne
add
adc
aas
and
jae
xchg
icebp
sbb
fisubs
cmpsb
lods
jae
add
decb
pop
mov
test
es
in
jns
sub
dec
out
cmp
pop
test
inc
cwtl
pop
inc
push
in
int3
jo
pusha
call
lock
arpl
ja
jae
mov
sub
push
or
sub
xor
inc
sbb
pop
jb
push
mov
xor
movsl
mov
dec
mov
mov
inc
call
outsl
pop
inc
es
and
notb
shll
or
jp
ret
mov
popw
or
pop
enter
sub
push
sub
add
lock
sub
add
fildl
sbb
adc
repz
or
pop
sbb
mov
aam
imul
mov
and
or
dec
push
dec
mov
or
mov
push
sub
xchg
fsubrp
mov
sub
cmovo
xchg
ret
dec
sub
shl
in
adc
mov
cld
push
repz
adc
insb
test
jns
adc
sbb
loopne
mov
adc
xor
push
shrb
fcomp
xor
shlb
and
add
aam
fdivl
and
int3
jge
addb
pop
xchg
or
mov
aaa
and
mov
mov
hlt
imul
push
mov
outsb
mov
pop
out
xor
dec
xor
aam
enter
and
aam
push
pop
jb
loopne
mov
cld
inc
sbbb
push
cwtl
pop
jbe
loope
data16
add
dec
add
cs
dec
inc
movsb
cwtl
push
cmp
pop
inc
cmp
cmc
outsb
test
add
mov
lcall
or
scas
sbb
cmc
sub
dec
jmp
inc
sbb
xchg
int
or
test
sbb
addr16
in
enter
inc
inc
sahf
cld
sub
add
clc
ret
imul
add
push
dec
in
push
adc
adc
or
gs
mov
out
add
stos
aaa
adc
cmp
xchg
lods
mov
push
call
add
cmp
add
add
adc
dec
cmp
or
jb
mov
and
popf
cmpsb
adc
icebp
movsb
and
nop
out
enter
or
movsb
xchg
cmp
out
dec
cld
push
add
pop
imul
adc
orb
xchg
test
add
and
xor
shrl
or
mov
sti
pop
xor
fiaddl
pop
mov
int
lea
insl
aam
mov
mov
das
and
or
pusha
mov
mov
and
test
adc
push
jae
rol
addr16
idivl
cmp
rcll
adc
adcb
dec
pop
push
and
push
mov
js
in
cmp
pop
int
and
cmpsl
cmp
mov
add
ds
lea
mov
movsl
add
or
int
add
call
add
sub
sub
sub
inc
add
add
scas
test
sub
std
and
push
xchg
push
mov
fistps
add
flds
aas
into
xchg
cmpsb
inc
xlat
and
mov
or
add
call
inc
sahf
inc
call
jle
lahf
dec
in
push
loopne
xor
loopne
fsubl
iret
and
sub
fsubs
xchg
jno
mov
repnz
cld
aam
or
shlb
or
in
int3
int3
aaa
and
sub
adc
insb
in
mov
and
xchg
shlb
pop
bound
movsl
jo
pop
dec
inc
and
mov
push
in
mov
enter
xchg
or
push
enter
popa
fcomip
icebp
sbb
push
test
push
outsl
das
add
mov
push
xor
ljmp
cmp
adc
push
push
fadds
or
pop
mov
and
dec
dec
and
or
test
mov
les
push
mov
pop
pop
mov
jb
lock
add
in
pusha
and
shr
dec
call
sub
gs
and
loop
mov
loopne
push
xchg
add
inc
cmpsb
nop
add
fcomps
nop
sub
aam
xor
and
sbb
mov
inc
mov
pop
mul
mov
jae
xlat
and
add
cmp
mov
xchg
add
and
rol
sbb
jbe
adc
add
pop
xor
sarb
mov
mov
dec
sub
roll
jp
push
dec
cmpsb
add
test
cmp
rcrb
inc
dec
xchg
push
imul
mov
scas
movb
stc
insb
insl
nop
loopne
pop
stc
adcb
les
add
dec
add
inc
mov
jne
bound
xchg
and
pop
adc
sbb
adc
pop
in
lcall
mov
sbb
sbb
mov
add
aaa
imulb
shlb
stos
mov
sahf
rorb
nop
int3
add
out
sbb
dec
sub
js
add
cwtl
and
lea
lcall
mov
fdivrl
and
inc
adc
sbb
add
jo
inc
and
imul
outsb
sti
cmpb
xor
fcomps
fisttps
dec
cld
rcrb
inc
in
inc
add
jmp
fbld
jae
mov
add
push
lcall
call
xlat
scas
call
cmp
pop
movsb
add
inc
mov
dec
xor
and
je
loopne
jl
sub
add
xchg
mov
dec
lds
xor
jne
lock
xlat
push
adc
push
nop
filds
jns
arpl
bound
loopne
mov
and
popa
lock
popa
mov
in
test
mov
mov
sbb
xor
lea
scas
jno
imul
adc
mov
inc
lea
pop
jo
pop
push
dec
pop
repz
out
outsl
xchg
mov
fcomps
fildll
push
dec
pop
imul
shrl
dec
fdivl
rep
imul
dec
fcom
lods
in
imul
aam
mov
stos
imul
dec
rcl
lods
in
imul
int3
xchg
add
stos
imul
in
add
enter
in
add
rcrb
mov
test
jns
js
pop
xor
loope
loopne
adc
aad
mov
xor
add
push
rclb
les
imul
arpl
test
add
and
xor
orb
adc
pop
and
inc
and
stos
daa
add
rorb
adc
loop
movsb
hlt
sub
inc
add
add
add
ds
jl
xchg
stos
adc
std
xor
clc
mov
out
aam
adc
pop
jb
xor
mov
jb
xchg
int3
lock
mov
mov
inc
lds
jg
dec
adc
and
push
sbb
pop
lret
pop
dec
mov
icebp
aaa
add
jle
ds
pop
cwtl
mov
or
dec
and
lock
sarl
movsb
mov
and
sarl
adc
shrl
and
push
dec
fs
out
iret
lcall
push
jne
icebp
call
or
pop
leave
lock
in
or
push
in
mov
call
leave
call
loopne
out
mov
loopne
jne
pop
leave
loopne
fmull
enter
fadds
enter
aam
int
enter
testl
pop
cmp
mov
das
jo
or
flds
dec
cmpsb
enter
push
les
add
jo
fs
pop
repnz
push
mov
int3
clc
xor
push
popf
dec
pop
push
and
adc
mov
test
mov
mov
mov
sub
mov
leave
iret
test
mov
pop
or
scas
pop
add
inc
mov
imul
mov
adc
aas
cmp
push
add
push
cmp
sub
add
jge
cwtl
lds
les
or
inc
sub
addr16
xor
or
mov
push
mov
push
adc
fistps
rolb
jbe
push
pop
xchg
and
jo
inc
jecxz
rclb
xor
sub
ja
fs
push
mov
jl
fbstp
cwtl
cs
jle
or
inc
mov
movsb
dec
jmp
mov
and
add
push
dec
push
mov
dec
mov
pop
jmp
inc
pop
sub
nop
inc
movsl
lock
mov
insb
inc
inc
adc
mov
pop
xchg
pop
jb
in
add
sahf
data16
outsb
push
sub
jbe
adc
mov
or
push
and
pop
outsb
mov
sbb
incb
ror
adc
mov
out
mov
fdivl
dec
fdivs
pop
dec
aam
aam
enter
ror
and
enter
leave
enter
sub
jmp
xchg
push
add
idivb
jb
or
pop
pushf
xchg
inc
add
push
test
subb
mov
adc
inc
dec
orb
inc
and
and
les
push
enter
jo
sbb
rclb
mov
cmp
inc
jns,pn
lock
inc
pusha
push
sbbb
and
adc
ret
hlt
nop
jl
aas
aas
and
ljmp
nop
iret
je
cld
rolb
inc
inc
std
dec
pop
pop
cmp
jo
or
inc
dec
test
mov
jmp
inc
jg
jno
push
push
add
repnz
push
fs
je
jo
add
jl
jne
mov
sub
movl
fiaddl
add
pop
adc
leave
in
push
sub
js
push
fdivrl
inc
mov
leave
daa
aam
pop
mov
jmp
test
add
xorb
add
xchg
push
dec
insb
xor
sbb
add
inc
sub
pop
js
xor
cmpsb
pop
or
loop
leave
or
inc
and
jns
loop
aam
sti
ja
adc
adc
sbb
jbe
xor
js
pop
in
popa
test
add
xchg
addb
shlb
xor
icebp
in
mov
adcl
shlb
mov
push
and
rcrb
inc
insb
or
jo
mov
movsb
ss
push
fadd
addb
jecxz
les
stc
cmp
mov
dec
fnstsw
inc
das
cmp
repnz
mov
aad
or
adc
inc
mov
and
xor
push
or
and
ret
add
enter
les
das
fwait
and
into
inc
jb
or
and
mov
add
and
jge
jbe
call
call
or
test
inc
enter
jno
cmp
xchg
dec
pop
mov
fsubrs
mov
mov
pop
xor
mov
sbb
push
ja
xor
loopne
out
mov
jecxz
ret
aaa
and
xchg
out
ja
lock
and
or
inc
and
inc
sti
xchg
and
loopne
inc
test
jmp
jae
xor
hlt
data16
add
les
or
movnti
jo
loopne
mov
mov
and
inc
ret
add
int3
push
xchg
inc
cmp
les
pusha
lock
popa
sbb
mov
scas
movsb
popa
loopne
clc
sub
adc
inc
rorl
lods
sbb
pusha
lds
or
mov
adc
sbbl
mov
jp
hlt
jecxz
sbb
cmp
arpl
subb
mov
xlat
xchg
movsb
pop
nop
dec
inc
icebp
outsb
jp
mov
imul
add
dec
out
pop
push
or
js
pop
push
sbb
pusha
jge
in
repnz
or
push
and
adc
xor
cmp
push
enter
jle
cmpb
test
clc
pusha
mov
divl
mov
rorb
mov
sahf
mov
push
jmp
pop
xor
adc
adc
incl
nop
pop
jb
cmpsl
or
inc
lea
repz
or
adc
adc
into
in
lods
test
dec
imul
pop
cmc
imul
in
push
fcoms
mov
call
add
pop
push
sub
pop
insb
and
dec
popa
insb
addl
adc
xchg
lods
inc
mov
mov
sbb
xor
or
push
add
loopne
aas
cmpsl
nop
xor
sbb
pusha
dec
add
mov
add
sbb
xchg
aam
fdivrs
adc
or
mov
test
inc
mov
sti
add
pop
push
outsl
mov
rorb
adc
adc
pop
inc
test
jg
or
aaa
rol
es
push
sub
stos
sbb
adc
add
sbb
or
mov
repnz
xchg
add
lock
dec
dec
cs
clc
inc
mov
jle
out
out
or
cmp
add
pushl
push
push
loop
add
or
xchg
rolb
mov
pop
std
sub
loope
push
jne
or
ffree
outsl
popa
add
shl
mov
dec
dec
aam
das
add
rcrb
adc
in
or
mov
mov
rcll
or
sti
mov
sbbl
cld
in
sbb
dec
inc
insl
pop
adc
jo
add
add
pop
pusha
add
imul
dec
sbb
hlt
hlt
mov
cmp
mov
push
fdivrl
or
mov
push
shr
add
dec
xor
mov
push
sbb
outsb
rol
or
test
and
lock
dec
xor
mov
ret
lods
add
fsts
aas
loope
daa
dec
push
mov
jns
mov
push
je
adc
jo
lea
and
pop
stos
inc
in
or
and
out
push
jns
lea
pop
mov
int3
xor
jmp
and
std
xor
pop
sbb
push
fadds
movsl
add
jb
arpl
adc
rorb
xchg
ja
mov
push
adc
mov
andb
pop
or
nop
xlat
test
mov
mov
shl
test
test
push
xor
inc
adc
push
inc
scas
inc
add
push
sbb
inc
stos
dec
outsb
adc
mov
das
adc
push
xor
add
cmp
lock
adc
jp
mov
loope
addl
mov
in
mov
mov
test
stos
ret
sub
imul
fisubl
movsl
je
clc
adc
jns
shlb
push
mov
mov
or
mov
dec
add
dec
inc
sub
inc
sbb
mov
dec
mov
dec
sub
jmp
sbb
std
mov
inc
pop
add
das
or
fcmovbe
test
xchg
ds
xor
adc
jbe
add
addb
rclb
shll
sbb
ret
les
loop
loopne
sub
lea
aas
jge
jo
sbb
lock
inc
cmpsb
sbb
jge
xchg
call
idivl
mov
add
jo
cmp
gs
add
jns
or
xor
jl
mov
dec
add
adc
inc
mov
imul
jp
test
filds
lock
push
divl
push
dec
mov
mov
xor
push
mov
rcrl
jge
add
lock
xchg
inc
and
add
push
nop
pop
xchg
in
pushf
loop
rolb
sbb
inc
pop
imulb
mov
mov
imul
pop
mov
push
test
mov
push
jmp
dec
xchg
xchg
cmp
int
push
push
inc
cwtl
add
lods
sbb
pop
mov
push
jne
ds
add
mov
shrl
push
and
sbb
inc
test
mov
cmpl
jmp
add
roll
aaa
add
mov
cmpsl
lret
stos
or
or
and
into
in
xchg
stos
and
inc
and
mov
cmp
rcrl
push
mov
je
pop
jmp
gs
mov
or
push
clc
jo
sub
sub
xor
xchg
xor
pop
dec
cltd
xor
negl
sub
dec
push
and
xchg
or
fistpll
cs
dec
or
lods
xchg
mov
dec
and
inc
push
negb
mov
inc
adc
push
push
add
rolb
dec
aad
mov
adc
mov
adc
adc
push
pop
cmc
sbb
add
jecxz
sahf
xorb
int3
push
inc
stos
push
add
or
fidivl
push
sti
lods
inc
and
sbb
xor
add
mov
push
cli
add
mov
fistpl
jo
and
dec
lcall
nop
xchg
dec
lcall
addl
mov
pusha
xchg
aad
imul
push
and
std
rcr
out
add
cmpsl
cmc
sbb
cmpsl
xor
vmread
jne
adc
add
sbb
nop
inc
inc
and
imul
mov
xchg
lock
cmp
inc
mov
adc
or
sbbl
ret
or
andb
rol
push
test
and
cmp
lds
jg
or
aas
mov
or
xchg
cmpsl
test
daa
adc
and
movsb
sbb
int3
fwait
addl
test
ss
push
cmpb
jo
mov
add
movsb
lods
stos
mov
cmp
xor
clc
imul
cmp
andb
inc
jg
push
ja
push
sub
xchg
push
add
push
sbb
pop
push
inc
and
adc
aaa
cmp
mov
testl
aaa
jo
inc
push
pop
das
adc
jb
cmp
orl
push
ss
and
inc
jl
push
or
loopne
xor
or
adc
sbb
inc
xchg
mov
dec
push
stc
adc
mov
fstl
mov
push
iret
les
add
test
orb
addr16
inc
push
add
push
xchg
sbb
dec
pop
push
lahf
pop
xor
add
inc
jmp
cmpsl
data16
add
xchg
ja,pt
adc
or
push
push
mov
xchg
ret
cmc
lock
mov
frstor
out
adc
fdivs
pusha
or
sbb
sub
add
fwait
pop
fnstcw
pusha
cmp
xor
push
sbb
xchg
mov
pop
cmpsb
mov
mov
pusha
es
ds
js
dec
fldcw
pop
sub
adc
mov
fwait
mov
adc
cmp
or
mov
pop
add
sub
jle
imul
mov
add
mov
aas
fldl
gs
mov
dec
es
push
adcb
mov
cmp
and
sub
imul
xchg
xlat
ds
add
int
pop
xchg
test
xchg
xor
pusha
cmpl
cmp
aaa
xor
jecxz
adc
and
je
cmpsl
or
mov
mov
jns
xchg
push
enter
nop
pop
xor
out
xchg
cmp
mov
adc
mov
xlat
xchg
fsubp
aam
mov
dec
sbb
mov
xchg
nop
mov
jecxz
and
cmp
mov
repnz
and
or
stos
adc
out
and
sbb
push
imul
or
push
push
rorl
jmp
pop
test
hlt
cld
cld
add
test
and
loope
in
add
mov
jle,pt
fildl
cld
add
and
xchg
in
lock
ss
cmp
jne
add
loopne
arpl
xchg
xchg
loop
sbb
mov
inc
xchg
and
shl
inc
sub
loope
fdiv
and
pop
test
mov
lea
mov
outsb
pop
and
mov
xchg
dec
and
push
sub
dec
xchg
adc
notl
xchg
adcl
mov
clc
pusha
mov
pop
inc
add
scas
mov
and
ja
xchg
jl
and
and
dec
inc
dec
xchg
or
mov
std
je
test
xchg
pop
sub
mov
int
inc
mov
imul
pop
and
fsubrl
sbb
ffree
mov
pop
add
mov
or
and
add
sub
ja
pusha
clts
bnd
sbb
incb
btr
jb
mov
mov
jno
jp
mov
pusha
imul
push
sub
sub
divl
cs
xor
cmp
xchg
sub
cmp
insl
sti
fildll
pop
ss
cs
jbe
xor
outsl
pop
adc
push
ret
xchg
or
daa
pop
cltd
cmp
inc
dec
xor
aaa
pushf
movsb
fisubrs
arpl
xchg
mov
mov
push
inc
adc
xor
add
cltd
loopne
xor
bound
pop
cmp
pop
in
mov
jb
data16
push
stc
pop
sarl
xchg
inc
push
dec
inc
dec
push
push
inc
fidivrl
or
das
fsubp
push
decl
out
dec
call
xor
inc
xchg
movsb
or
cmovb
xor
xor
lahf
lock
push
ret
xor
xlat
inc
inc
bound
xlat
out
imul
xor
je
movsb
or
fdiv
mov
and
dec
inc
push
jb
inc
inc
push
in
add
sahf
jae
push
push
ja
movsl
or
inc
jg
push
xchg
dec
in
movsl
jg
incl
dec
pop
jnp
cltd
cmp
ja
and
pop
les
pushf
imul
xor
fidivrl
pop
inc
mov
push
cld
mov
mov
pop
lods
inc
cmpsb
xchg
outsl
push
cmp
push
push
insl
add
or
sbb
mov
xor
sbbl
and
iret
dec
push
pop
inc
pop
xor
mov
xchg
xor
cmp
or
fnstenv
sub
xlat
imul
inc
cltd
mov
int
aad
rcll
daa
iret
in
mov
daa
pop
inc
push
inc
pop
leave
stos
fnstsw
dec
push
push
and
dec
pop
jbe
fmuls
dec
add
jl
cvtps2pi
cmp
push
xor
mov
data16
xor
jo
push
outsb
popa
pop
js
out
aaa
jnp
mov
addr16
stos
xlat
stos
jecxz
rorl
outsl
xchg
inc
mov
xor
js
mov
pop
jnp
add
xor
push
rcl
into
ja
push
mov
pop
adc
mov
dec
mov
xchg
push
inc
shll
add
pop
or
push
jb
inc
push
xchg
pushf
xchg
sub
inc
push
mov
outsb
daa
or
xor
imul
outsb
inc
jnp
mov
jno
inc
cmp
dec
pop
xchg
negb
push
add
xchg
xchg
cmp
cmp
insb
ljmp
mov
xor
cmp
xor
fs
jnp
jp
inc
ffreep
bound
mov
or
add
xor
add
outsl
dec
add
mov
inc
pop
pop
lock
sub
xor
and
fdivrs
inc
cs
aaa
js
ret
or
xor
jb
xchg
aaa
push
inc
jns
or
xchg
jl
sub
ss
cmp
cs
add
arpl
push
js
or
aad
push
fs
xchg
mov
mov
pop
mov
add
xchg
cmp
mov
push
lds
jns
outsl
push
sub
push
pushf
repnz
outsl
xor
fcomps
mov
xor
and
mov
lods
loop
pop
loopne
fisubs
arpl
cmp
xor
aas
pop
xor
rcl
out
jnp
inc
pop
jp
sub
inc
repnz
pop
arpl
dec
in
jmp
bound
xor
inc
push
mov
cmp
cwtd
inc
mov
cmp
iret
cmpsb
push
add
pop
mov
inc
pop
add
outsb
outsl
add
pop
dec
and
call
cltd
dec
push
aas
adc
dec
push
inc
rcr
xor
pop
ret
push
inc
xor
ja
pop
dec
sbb
xor
xor
adc
imul
or
xchg
push
inc
push
data16
mov
cmp
push
or
iret
fisubrl
sub
pop
insb
xchg
aaa
out
mov
and
push
bound
incl
xor
cs
dec
push
fidivl
push
dec
pushl
lahf
cs
xor
sbb
dec
pushl
and
xchg
aaa
cmp
add
mov
xchg
push
push
push
jl
dec
jne
addr16
jb
das
xchg
or
cmp
aaa
pop
add
cmp
daa
ja
nop
dec
js
aaa
cmp
lahf
push
popa
test
pop
cmp
cmp
iret
or
sbb
mov
cmp
xor
mov
shlb
aaa
addr16
cmp
call
pop
mov
pop
adc
rcll
pop
xor
lods
jg
sub
sub
daa
mov
ficomps
xchg
xchg
xchg
aas
jno
sbbb
fs
dec
inc
push
sub
pop
inc
cmpsb
xor
aas
notl
pusha
or
fs
mov
or
or
push
push
xlat
mov
mov
bound
pusha
dec
push
daa
pop
xor
dec
stc
ficoms
pop
xor
xor
xorps
xlat
and
mov
xor
ficompl
movsb
xlat
ss
pop
cmp
nop
inc
ss
xor
lds
cmp
mov
xor
xor
xor
cmpsl
cmp
inc
push
inc
pop
pop
stc
movsb
in
push
xor
push
dec
push
push
add
outsl
jb
fbld
cmp
xor
test
pop
daa
cli
aaa
ljmp
push
fidivrl
mul
jno
cmpsw
xor
nop
pop
cmp
cmp
sbb
adc
addl
xor
add
pop
enter
pop
inc
pop
pop
add
cs
bound
cmp
and
fsubrs
cmpl
daa
add
xor
jnp
scas
in
daa
xor
cmp
xor
add
xor
xor
add
and
inc
scas
in
xor
fwait
jno
mov
inc
pop
repnz
inc
dec
inc
fbstp
push
and
mov
addr16
xchg
adc
xor
movb
xor
lods
jmp
popa
aaa
jo
xchg
mov
andb
mov
in
xor
notl
xor
xor
adc
ja
cmp
push
and
xchg
test
inc
ss
jb
mov
aam
fdivrl
mov
sub
cmp
mov
inc
out
jb
dec
adc
fs
xor
sub
bound
pop
out
sbb
xor
inc
xchg
xchg
in
dec
pop
aaa
xchg
or
dec
aaa
ss
stc
das
mov
pop
cmp
cmp
daa
add
jg
cmp
add
insb
sub
xchg
pop
test
sub
jne
mov
pop
and
pop
dec
and
cmp
xor
repnz
loop
cmp
push
ja
adc
idivl
leave
add
add
cmp
cld
cmpsl
leave
cmp
dec
pop
xor
cmp
sub
dec
add
icebp
pushl
push
push
pop
dec
cs
xor
xor
call
inc
ljmp
mov
pop
jns
out
enter
mov
loop
in
push
cmp
in
out
mov
push
xor
inc
sub
sub
or
add
lods
pop
and
xor
push
mov
in
cmpsb
mov
xchg
or
xor
cmpl
pusha
push
notl
or
push
push
add
in
inc
mov
mov
push
das
adc
insl
popa
loop
sbb
add
cmp
outsl
mov
pop
and
ja
cmpsb
movsb
jb
cmp
cmp
and
pop
cmp
xor
dec
cld
je
lret
push
pushf
xor
aas
rclb
inc
dec
cwtl
and
lods
add
and
addr16
cmp
add
jne
stos
nop
fiaddl
xlat
ficompl
lcall
fmuls
xor
mov
pop
xchg
mov
cmp
aaa
ss
mov
push
aaa
xor
sub
push
xor
cmp
mov
pop
adc
xchg
xchg
xchg
dec
cmpsb
add
sub
pop
test
scas
mov
lcall
sbbl
add
ss
bound
scas
cmp
inc
push
pop
insl
inc
jle
decl
xor
aaa
scas
movsb
rcll
pusha
vmovntdq
mov
fimull
jo
sbb
mov
and
push
loop
xor
enter
divl
pop
and
fwait
sbb
inc
push
mov
push
pop
add
dec
mov
imul
les
jne
sub
jmp
enter
sub
inc
aas
cmp
fisubs
pop
push
and
mov
dec
popa
insb
popw
and
orl
outsl
ret
or
add
es
scas
inc
push
cmp
fcomps
push
xchg
inc
arpl
push
sbb
or
push
sbb
dec
and
mov
loopne
mov
push
push
adc
aas
xor
sub
pop
loopne
xchg
push
push
aas
or
fcoml
jae
es
cmp
pop
xor
lock
add
fs
adc
push
sub
popa
in
jb
ja
outsb
insb
or
add
or
nop
xlat
inc
ss
push
rorb
dec
dec
push
dec
cmp
cmp
aaa
xor
inc
mov
and
xor
adc
testl
xor
shll
sbb
aam
inc
xor
mov
cmp
das
push
cmpsl
aaa
lds
cmp
in
imul
enter
cmp
sbb
xchg
imul
xor
or
push
xchg
inc
xor
lcall
and
fidivrl
gs
xor
add
bound
and
xor
mov
sbb
mov
fstl
cwtl
nop
aaa
aaa
das
data16
das
in
cmp
xor
repnz
xor
xor
add
xor
addr16
and
jb
xchg
xor
test
dec
push
push
and
fstpt
je
fists
cmp
mov
bound
hlt
push
repnz
xor
in
cmpsl
bound
push
test
ja
aaa
or
mov
in
popa
insb
je
outsl
loopne
jl
sbbb
sbb
fwait
push
cltd
cltd
cwtl
pop
enter
xor
cmp
es
jg
xor
in
xor
cmp
pushl
jb
xor
inc
es
aaa
aaa
nop
mov
ss
ss
jb
aaa
sbb
xor
imul
and
xor
xor
insl
les
jb
adc
ss
mov
pop
popl
xor
adc
xor
enter
rdpmc
xor
xor
jbe
cltd
sub
in
cs
in
ss
pop
pusha
ret
lahf
or
cmp
cmp
cmp
cmp
nop
inc
push
pop
xchg
aaa
setno
arpl
jne
and
test
xor
fisttpll
cwtl
pop
imul
sbb
push
dec
push
daa
pop
sbbl
and
mov
pop
pusha
or
addr16
bound
jbe
addr16
mulb
fildll
pop
jg
add
testb
je
xchg
adc
daa
xor
sbb
mov
xchg
push
xchg
pop
or
mov
popf
fcoms
sbb
clc
and
inc
push
xor
mov
cmp
xor
push
dec
pop
pop
insb
or
pop
inc
lods
das
mov
xor
xchg
aad
inc
dec
pop
xor
push
rcrl
pop
pop
pop
pop
stos
lods
mov
dec
and
aad
fwait
data16
push
pop
mov
pop
mov
or
dec
dec
push
add
dec
pop
dec
push
push
mov
inc
push
sub
sbb
or
push
jb
push
push
out
shrl
xchg
sub
adc
andnps
xchg
sub
xlat
mov
xchg
popa
xor
cmovge
pop
sti
dec
inc
dec
dec
dec
xchg
scas
dec
outsb
lcall
add
cmpsl
insl
imul
pop
push
dec
mov
xor
jno
and
push
dec
push
push
and
dec
dec
dec
cmp
sub
scas
pop
push
pop
xor
fisttpl
js
ja
push
dec
inc
sub
pop
insl
scas
mov
jno
xor
mov
sub
push
sub
and
outsl
in
lods
in
xor
mov
testl
cmp
jnp
cmpsl
xor
xor
xchg
jl
in
sub
mov
cmpsl
xor
aaa
push
cmpsl
xor
xor
in
test
sub
jb
sbb
xor
insl
leave
jae
imul
inc
scas
ss
outsl
fbstp
sbb
and
xor
imul
aaa
fisttps
xor
es
int
cmpsl
imul
inc
xor
sbb
jae
ss
xor
ss
bound
in
aaa
lahf
data16
fs
cmp
cmp
sbb
leave
sbb
add
sbb
or
add
cmp
test
add
xor
or
mov
ficoms
mov
add
popl
adc
push
mov
xchg
mov
rol
ljmp
dec
sbb
pop
xor
pop
add
xchg
cmpsl
in
pop
xor
xlat
xor
xor
add
shll
sub
or
xor
scas
xor
rolb
lods
xor
xor
jns
loopne,pn
cmp
xor
roll
jmp
arpl
push
or
xor
scas
xor
mov
jg
dec
jle
scas
pop
dec
push
jg
xchg
out
push
mov
sub
add
sbbb
nop
lcall
imul
pop
xor
pushf
xchg
sub
fdivl
sub
and
push
sbb
popa
outsb
push
andl
xchg
sbb
dec
shlb
pop
filds
sbbb
and
data16
lods
popa
xor
outsl
mov
push
imul
cmp
or
js
rcll
add
mov
dec
inc
aaa
jns
orb
bound
push
repnz
sbb
inc
int3
adc
sub
and
cmpsb
lods
and
lahf
dec
push
das
or
out
mov
adc
aaa
mov
cmp
leave
sub
aaa
ss
aaa
mov
xor
cmpsb
arpl
in
aaa
push
xchg
dec
icebp
dec
cvtps2pi
xor
xor
es
fisttpl
add
mov
xor
xor
xor
xor
sub
inc
push
cmp
xor
jp
xor
jb
sub
xor
inc
inc
aas
inc
ret
xor
call
xchg
push
lods
rcll
mov
rcr
sub
dec
popa
fildl
aaa
mov
inc
inc
sub
push
xlat
jp
dec
mov
lret
aas
push
or
mov
pop
jg
push
mov
mov
and
push
xchg
imul
bound
jbe
sub
scas
xor
daa
xlat
or
mov
sub
sbb
dec
or
addl
push
imul
inc
daa
lahf
inc
cmp
xchg
mov
jno
mov
push
imul
push
xor
cmp
dec
les
sub
shl
cmpsl
or
push
icebp
mov
push
xor
inc
pop
test
mov
les
insb
cmpsb
dec
pop
push
call
push
mov
inc
pop
leave
test
push
icebp
xor
sub
pop
sahf
rcr
fisttps
xchg
mov
call
fcoms
xor
xor
add
cs
or
ss
sub
cld
xor
fistps
sub
aaa
addr16
inc
add
lods
sbb
movsb
pop
add
movsb
inc
mov
sub
das
fbld
ss
mov
adc
rolb
xchg
mov
mov
inc
add
lcall
enter
or
inc
in
inc
int
flds
push
adc
clc
jmp
xchg
movb
imul
insb
push
loop
mov
push
dec
clc
in
cmp
inc
add
es
pop
xor
imul
mov
mov
sbb
and
add
addr16
add
xlat
cmp
jne
orb
cmpb
or
dec
add
loopne
add
xchg
push
fwait
add
xchg
inc
dec
mov
jae
lock
mov
jmp
jl
xchg
pop
popf
imul
test
jl
repz
jne
dec
xor
aam
int3
or
pop
cmp
adc
pop
jecxz
add
sti
insl
pop
jmp
imul
lods
ret
rorb
shrl
stos
loop
jne
and
xchg
add
or
mov
push
or
pop
lods
pmaxub
push
xor
iret
sub
cmp
push
ret
rol
and
add
int3
cmp
cmp
xchg
enter
and
jne
jmp
jno
adc
xchg
jg
mov
sub
push
or
gs
icebp
ja
outsl
adc
inc
shrb
jmp
loope
nop
and
push
and
rol
popa
cmp
flds
add
stc
sarb
and
or
or
or
adc
repnz
inc
or
or
ret
push
shl
jb
inc
xchg
xchg
je
incb
cltd
or
clc
xor
jecxz
pop
fiaddl
and
inc
or
aad
xchg
js
test
mov
pop
mov
or
adc
push
xor
adc
and
fwait
inc
or
out
clc
out
test
aaa
jp
addb
pop
shlb
rclb
outsb
and
rclb
adc
and
xor
daa
fst
filds
add
lods
sbb
dec
push
pop
adc
mov
cmpsl
xor
jb
fcom
ret
fbstp
push
mov
dec
xor
mov
into
rcr
mov
push
sub
add
mov
pop
and
xor
inc
nop
daa
sarb
sbb
and
or
fwait
mov
mov
cmp
dec
or
cmp
mov
aas
cmp
xlat
dec
jle
repz
push
mov
or
popa
sbb
setp
sub
cmp
mov
mov
out
ja
adc
lret
or
adc
xor
adc
cmp
sub
inc
jne
inc
push
and
fmuls
mov
fnstsw
cmpsl
push
call
push
insb
rolb
inc
sahf
fisttps
fs
insb
add
notb
scas
loope
adc
call
pop
adc
and
jb
shrb
or
and
into
insl
mov
and
int3
sbb
push
js
ja
daa
mov
mov
aaa
bound
gs
je
cwtl
inc
add
addr16
nop
outsb
fwait
mull
mov
lods
lods
aas
mov
decl
or
cltd
jecxz
jae
push
inc
test
rep
fs
js
test
dec
cs
xor
fdivrl
pop
inc
lcall
movsl
adc
mov
or
pop
fstp
test
sub
popl
inc
jmp
movsb
xchg
loope
sub
sub
stos
movq
repnz
mov
bound
loopne
add
rorb
inc
jo
ds
sbb
mov
xchg
aam
test
pop
sahf
adc
fidivl
cs
aas
pop
pusha
test
jge
xchg
and
adc
mov
or
adc
push
adc
cmp
or
jge
dec
mov
test
inc
movsl
or
and
and
ss
test
pusha
mov
add
aam
add
enter
test
or
and
sub
ret
add
add
cmp
pop
pop
cmp
inc
sub
daa
ret
ret
adc
or
es
and
xchg
shlb
fistl
ds
adc
mov
mov
mov
stc
in
mov
hlt
mov
inc
mov
and
pop
dec
leave
test
mov
xchg
or
dec
daa
in
vmwrite
dec
dec
push
inc
repnz
xchg
dec
xchg
shld
mov
repnz
jecxz
paddq
stc
fdivrs
in
adc
sbb
jb
sbb
sub
xor
inc
in
nop
dec
mov
mov
leave
mov
inc
inc
das
pop
repnz
dec
inc
push
inc
push
push
pop
cmpsl
mov
movsb
ja
push
dec
pop
push
inc
inc
ds
pop
push
inc
push
dec
inc
push
dec
push
in
dec
push
xchg
rcrl
shrb
add
cmp
inc
in
out
ret
mov
ret
or
insl
cmp
pop
les
or
setb
sub
xor
movsb
and
and
or
and
lret
push
fs
mov
in
or
dec
adc
add
lock
inc
add
add
push
test
dec
xor
les
dec
mov
pushf
jl
add
inc
xor
lcall
jmp
xchg
pop
lret
test
and
cmpsb
push
inc
aam
mov
lock
fcomp
scas
push
sbb
loope
xchg
jnp
or
fsubl
mov
ds
in
loopne
repnz
out
jb
and
jae
out
popa
or
lret
mov
cmpsl
addb
pusha
out
push
sub
add
test
shll
dec
jne
addr16
and
dec
out
aaa
sub
dec
divb
mov
jl
push
jno
repnz
ljmp
add
cmp
lods
mov
sbb
fwait
scas
push
xchg
imul
hlt
rcll
movsb
test
xor
and
mov
mov
sbb
jmp
and
rorl
dec
test
mov
je
pop
bound
mov
repz
mov
inc
insl
ja
mov
popa
das
lock
setge
adc
inc
sbb
test
lret
push
inc
sarb
mov
aaa
insb
lds
movsl
xor
xor
xlat
pop
cmc
inc
jns
loop
push
fidivl
fimuls
dec
mov
cmp
and
imul
pop
sbb
and
add
mov
outsb
sub
mov
push
scas
jno
rcrl
pusha
add
fsubs
jmp
dec
dec
xchg
mov
inc
push
fdivrs
push
jmp
push
add
test
adc
adc
jo
aam
add
mov
rcl
sahf
pop
and
jmp
push
int3
mov
adc
rcrb
clc
sub
xchg
and
inc
push
enter
sbb
sbb
and
add
repz
jmp
sub
cwtl
add
fadd
stos
add
sarb
jmp
fstl
mov
or
add
andb
xchg
mov
inc
test
movsb
adc
push
jno
cmp
jmp
xor
iret
xor
mov
cmp
xchg
xor
and
push
or
into
jns
or
jmp
and
or
clc
push
push
dec
repz
fwait
shlb
out
in
in
int3
test
mov
inc
xchg
and
or
negl
pop
mov
rcr
lahf
cli
outsl
lret
repnz
ja
push
dec
adc
push
cltd
adc
push
aaa
or
push
dec
push
rcll
lock
pop
jne
xor
xchg
das
inc
pop
fisubl
xchg
subl
mov
jp
cmpb
add
dec
repnz
fists
push
adc
rorl
sti
push
cmp
mov
leave
leave
leave
dec
or
adc
leave
leave
leave
sbb
and
dec
pop
mov
movb
push
pop
xor
mov
or
je
lcall
lcall
sbb
or
push
jns
repnz
int
mov
ss
adc
ds
xor
push
push
mov
in
jle
sub
mov
xchg
leave
inc
lock
jp
mov
imul
xchg
movsb
sbb
xchg
movsb
scas
cwtl
lock
nop
ja
ds
imul
and
nop
push
xchg
into
ljmp
test
inc
xchg
stos
xor
push
pushf
mov
rcr
cmp
add
ret
sub
adc
dec
shlb
pop
icebp
cmpsb
jnp
xchg
or
dec
movl
cmp
fsubrl
pop
fdivrs
or
adc
addr16
and
shl
sub
fsubl
loope
aaa
lds
xchg
inc
inc
adc
pop
dec
push
inc
aaa
sub
and
and
fcomp
sbb
or
les
repnz
xor
or
mov
pop
das
outsb
das
das
dec
sbb
inc
pop
cmp
pop
aas
push
and
jmp
pop
pop
rorb
push
in
out
xor
or
leave
xor
sub
sbb
repz
fsubrs
outsb
add
bound
hlt
jge
mov
stos
cs
push
push
out
add
cwtl
mov
mov
aaa
xor
sbb
pop
leave
push
aaa
inc
xchg
and
shrb
fs
mov
fucomi
xor
out
xlat
push
push
mov
mov
mov
mov
mov
cmc
data16
dec
leave
in
rorb
repnz
sub
and
insb
adc
or
push
sbbb
cmp
rcr
in
xor
pusha
leave
add
out
in
pop
or
cmpsb
sbb
dec
ficompl
inc
mov
sub
addb
cmp
sbb
loope
clc
lock
pushl
lea
mov
icebp
lock
jno
push
mov
push
xchg
in
and
testb
adc
xchg
fisubrl
and
add
xor
add
jnp
xorb
add
test
push
push
sbb
inc
pop
mov
sbb
daa
in
push
xor
cmp
xor
lahf
sbb
cld
push
add
loopne
and
addr16
push
inc
inc
and
xor
pusha
adc
ss
lcall
adc
push
or
add
pop
adc
cmp
inc
cmp
lods
xchg
aam
push
cmp
dec
addb
adc
mov
cmp
daa
sub
inc
movsb
xchg
mov
sbb
sbb
cmp
push
rorl
cmp
imul
clc
dec
or
xchg
sbb
xor
test
clc
loopne
adc
shufps
add
mov
out
movsl
nop
mov
mov
cwtl
daa
les
clc
push
xchg
cmp
add
mov
sbb
add
aaa
jmp
subl
inc
push
mov
enter
imul
fldl
jo
push
clc
insl
pop
adc
psraw
inc
mov
jmp
cli
mov
jnp
jmp
ret
sbb
and
daa
xchg
dec
jo
xchg
pop
jb
mov
in
pusha
jg
push
add
push
inc
mov
lds
mov
dec
or
sub
ret
mov
jbe
mov
xchg
call
or
int3
jmp
sbb
sbb
outsb
hlt
xor
icebp
subl
jmp
adc
cmp
leave
inc
cs
leave
cli
mov
mov
out
or
sub
or
inc
or
in
inc
dec
int
sti
stos
mov
dec
cmpb
sbb
insb
das
dec
sbb
push
push
push
cmp
les
mov
jmp
xor
push
sub
and
mov
jno
pop
in
xor
add
shrb
ljmp
xchg
mov
pop
lcall
cmp
dec
mov
jbe
std
sub
roll
mov
dec
stc
fwait
subl
pop
cltd
and
test
movsb
sbb
xchg
cld
mov
sbb
stc
fwait
rorb
or
outsl
xchg
xor
scas
dec
call
mov
test
mov
mov
jbe
sbb
xchg
mov
jg
std
push
sbb
and
xchg
xchg
xchg
adc
pop
lret
mov
add
mov
hlt
fcmovb
nop
push
push
aaa
outsl
test
loopne
fsubrl
std
dec
add
scas
inc
jno
xlat
outsl
xor
inc
pusha
shll
sbb
cmpsb
js
sub
ja
mov
cmpb
mov
jae
or
clc
or
jecxz
aas
call
andb
push
mov
rcrb
lods
or
repz
lock
add
arpl
bound
sub
fadds
pop
das
sub
scas
incl
and
insb
push
dec
scas
adc
orb
jmp
in
mov
adc
xor
inc
mov
dec
ja
gs
mov
ja
je
add
or
rcrl
dec
stos
inc
arpl
pop
add
mov
clc
sub
xor
xchg
add
jp
push
xchg
push
jbe
in
popf
add
add
push
add
pop
test
lock
cmp
clc
xor
les
dec
inc
lret
push
pusha
lock
xor
das
pop
sub
call
ret
inc
pop
sub
mov
or
and
popa
add
add
shll
fstp
fwait
xchg
pop
dec
push
jo
add
inc
js
mov
es
ret
in
add
xor
addl
pop
jo
enter
sub
and
sbb
dec
dec
jb
daa
mov
inc
ffree
add
stc
sub
dec
fists
loopne
lock
movsl
dec
daa
insb
mov
dec
and
xor
stc
jle
inc
or
dec
xchg
cmp
cli
pop
ud0
mov
ja
inc
jbe
cmpsb
xor
aam
dec
xor
jp
pop
xor
or
rorb
mov
js
gs
sbb
fmull
xchg
ljmp
aaa
lahf
push
loopne
xor
and
aaa
rclb
pop
dec
dec
xchg
popa
jecxz
add
movb
pusha
xchg
movsl
and
dec
std
xor
add
push
inc
or
ret
and
loope
insb
ficoml
gs
bound
adc
test
and
call
or
test
test
inc
mov
pop
icebp
adc
xchg
dec
add
add
int
lret
and
pushf
in
jg
and
shl
cs
icebp
dec
cmp
jnp
sbb
pop
loop
or
xor
pusha
and
popa
sbb
dec
mov
adc
xor
divl
mov
les
cmp
adc
cmp
xor
jno
or
pop
repz
inc
push
pop
adc
jecxz
pop
hlt
jg
xchg
out
jmp
and
jne
add
xchg
sub
std
cmpsb
shll
cmp
loope
stos
rorl
and
or
shlb
jns
fnstcw
pop
dec
dec
imul
add
in
or
mov
mov
inc
adc
aad
dec
lret
rolb
add
and
or
les
les
mov
xchg
add
cmp
push
adc
push
inc
loope
movsl
fs
or
dec
push
push
clc
sbb
dec
dec
shll
add
imul
leave
jecxz
fadds
mov
lcall
cmpsb
push
jmp
or
popa
jle
add
xlat
lret
xchg
dec
xor
jmp
cld
out
inc
add
andl
sahf
xchg
stc
and
mull
cmp
add
orb
pop
sub
pop
repz
mov
mov
mov
and
jle
pop
mov
cmpsb
or
adc
fs
xor
in
mov
xor
xor
loop
add
mov
mov
and
add
js
sub
aad
mov
call
in
fiadds
out
push
out
es
outsl
in
dec
xrelease
mov
in
push
push
ret
out
and
dec
mov
fisttpll
loop
ret
rorl
pop
lea
inc
or
rorl
add
and
sbb
sub
out
negl
mov
in
pusha
rorb
mov
lret
lret
pop
addl
mov
insl
or
push
or
shrb
sub
sbb
adcl
ret
es
aas
ret
in
adc
xor
sbb
jb
nop
je
add
add
adc
inc
out
push
and
das
shr
add
add
dec
xor
dec
in
push
add
add
add
scas
xchg
push
cmpsb
mov
and
adc
dec
pop
lock
les
test
xadd
push
mov
push
test
enter
in
push
in
and
dec
pop
jne
imul
sbb
xor
aad
sub
pop
xchg
nop
jne
sub
orl
out
cmp
or
pop
cmp
and
inc
dec
fimull
shlb
add
and
lcall
inc
adc
popa
bound
enterw
and
aaa
sub
lock
add
ja
xchg
in
inc
dec
cmp
mov
sbb
jmp
enter
frstor
loop
das
sbb
pop
xchg
pop
cmp
out
movsb
add
adc
in
add
adc
push
mov
dec
loope
mov
pop
pop
sub
dec
movsb
push
dec
inc
into
lahf
xchg
enter
fildll
inc
mov
push
arpl
addr16
mov
bound
jb
je
jbe
js
jp
mov
sub
xlat
lahf
pusha
push
out
adc
shlb
sub
fstl
adc
sbb
mov
in
cmpsl
xor
js
xor
ljmp
dec
jbe
sub
out
mov
enter
hlt
adc
insb
mov
insb
aam
shl
push
testl
addl
movsb
and
adc
push
adc
push
adc
in
inc
add
out
jg
sbb
sar
ficomps
pop
jle
push
push
mov
push
scas
adc
lahf
inc
pop
mov
sub
add
xor
jbe
jl
add
fcoms
dec
add
int3
ds
aad
push
out
inc
bnd
or
push
adc
add
movsl
aaa
loopne
andps
lea
aam
jmp
adc
inc
sub
shll
adc
std
sbb
dec
add
jo
hlt
cmovle
inc
jle
loop
inc
add
dec
mov
mov
aad
adc
cltd
jae
pop
cmp
xchg
nop
inc
aam
ret
or
pop
icebp
xorb
dec
test
roll
pusha
vucomiss
in
sbb
inc
jns
inc
mov
push
add
xor
jmp
push
add
dec
cmp
movsl
pop
out
or
add
mov
aaa
add
mov
mov
or
gs
jbe
shr
pop
mov
or
pop
pusha
or
dec
popa
push
push
imul
cmovl
je
lret
je
sarl
xchg
ficoms
mov
fsts
mov
adc
sahf
or
or
mov
dec
mov
daa
lret
add
inc
ds
pop
out
sbb
mov
or
pop
movsl
sub
into
mov
arpl
mov
jg
lods
int3
sbb
enter
jne
mov
mov
push
cmpl
xchg
mov
inc
add
push
loop
dec
pop
ss
or
lock
mov
or
dec
and
jl
pusha
orb
pushf
adc
int3
aas
ljmp
lret
jle
push
and
insb
kandw
xchg
icebp
out
lock
jo
jb
sbb
mov
test
loop
adc
push
add
sbb
pop
xor
push
iret
aad
arpl
dec
mov
add
loope
dec
jl
jne
movsb
mov
repnz
jmp
pop
or
in
cmpl
sbb
movsb
sbb
xchg
dec
pusha
pop
dec
pop
and
imul
sub
mov
jno
imul
jl
addl
inc
add
mov
and
es
ret
sbb
adc
push
mov
sti
sbb
in
add
push
add
arpl
xchg
push
nop
add
or
xlat
addr16
and
mov
xchg
sub
cmp
adc
cmp
and
xor
cmp
adc
lahf
or
xor
scas
sbb
loope
add
sbb
or
fimuls
mov
lds
jbe
loopne
add
pop
test
adc
inc
xor
dec
pop
push
inc
and
cmpb
insl
or
pop
add
pop
cmp
jns
push
cmp
push
lret
popa
sbb
xor
lahf
inc
push
sahf
or
pusha
add
mov
jb
dec
xor
cmpb
gs
fnclex
aas
or
ficoms
pop
inc
push
inc
dec
adc
adc
jns
aas
cmpsb
adc
mov
add
call
add
adc
dec
push
das
addr16
mov
adc
cld
sbb
mov
sub
imul
jno
or
out
xchg
xchg
push
or
fcomip
sbb
jns
and
and
ds
cmp
lock
fs
add
bound
test
das
push
fildll
mov
pop
and
cmpsb
jae
jo
mov
insb
sbb
pushf
in
push
mov
in
cmovp
push
inc
xor
dec
adc
insb
mov
sub
sbb
xor
das
lea
cld
xor
push
or
jb
push
mov
adc
adc
pop
dec
pop
add
cmp
scas
pop
lcall
dec
insb
dec
xchg
jl
push
movsb
sub
in
hlt
sub
repz
lock
cmp
xor
sbb
loopne
pop
iret
lds
andb
nop
pop
andb
add
and
inc
and
fdivl
dec
or
jae
filds
and
mov
test
ret
inc
add
ret
decl
xor
pop
sbb
dec
and
pop
loope
cmp
les
dec
mov
lcall
inc
dec
push
rorl
clc
loop
je
mov
mov
adc
adc
daa
dec
mov
pop
cmp
aaa
fnstcw
mov
add
insb
xchg
je
push
sbb
sbb
xor
test
add
xor
sbb
addl
outsl
pop
cmpb
mov
inc
sbb
jge
xchg
test
pop
scas
inc
dec
mov
and
xor
sbbb
sti
mulb
inc
and
orb
push
stos
sub
push
or
sbb
and
loopne
std
pushf
call
jl
push
inc
and
push
sbb
lods
mov
inc
add
adc
mov
xchg
mov
and
or
add
push
dec
sbb
push
sti
das
scas
or
or
or
add
mov
dec
mov
xchg
div
push
and
fst
sbb
adc
mov
xor
jmp
test
pusha
jbe
xchg
sbb
rorl
gs
hlt
imul
ret
sahf
leave
dec
cmpsl
push
sbb
aas
pop
and
adc
dec
inc
ret
insl
xchg
sbb
movsl
in
aad
or
jmp
push
and
not
idiv
jae
push
mov
stos
rolb
imull
mov
fmul
mov
push
xor
cmp
or
mov
push
adcl
enter
push
dec
jmp
or
ss
in
mov
adc
sbb
leave
mov
pop
test
mov
mov
dec
or
and
mov
sarl
cmpsl
inc
pop
mov
sbb
jl
jb
jae
arpl
pop
mov
daa
dec
cmpb
add
dec
add
mov
and
jno
push
sbb
lods
mov
sbb
sbb
sub
das
push
add
add
imul
in
inc
clc
mov
mov
adc
mov
aam
mov
je
mov
sbb
cmp
daa
fists
push
adc
mov
in
xor
inc
pop
push
dec
push
inc
push
dec
ds
push
inc
inc
push
add
gs
scas
sub
sub
and
movsb
cs
adc
ret
mov
js
push
dec
inc
sub
sub
cmp
jge
inc
js
daa
jne
push
adc
aaa
sbb
outsb
call
out
insl
pop
xchg
cmp
test
sbb
imul
jnp
fcmovb
xor
xchg
loopne
mov
mov
leave
inc
sbb
aad
xchg
rcl
xchg
sbb
xorb
sub
rorb
roll
loopne
xchg
cmp
xor
mov
push
adc
dec
jae
dec
mov
movsb
push
adcb
imul
push
mov
dec
icebp
sbb
xchg
out
sub
push
cwtl
mov
and
in
negl
fdivl
push
or
or
pop
push
push
out
lock
ljmp
lahf
push
xor
xlat
sub
hlt
dec
xor
xor
fsubrl
fmuls
adc
hlt
pop
xor
push
xor
stos
cmpsb
adc
popa
ret
or
leave
push
sub
add
mov
xchg
scas
aad
iret
jnp
mov
shll
inc
repz
in
xor
imul
jbe
paddusb
dec
xor
jae
jae
repz
push
test
mov
lret
test
mov
cmp
dec
cmp
add
pop
js
push
xchg
data16
cmovle
jbe
add
sbb
push
inc
cmp
call
sub
in
xchg
out
dec
push
add
pusha
je
mov
lret
jb
xor
cwtl
sub
cmp
jle
inc
sub
lock
jb
jl
inc
lea
inc
cld
rcl
insl
call
push
lods
dec
xor
mov
mov
jne
dec
dec
shrb
fildll
lret
inc
push
lock
faddp
addl
popf
xor
xor
inc
repnz
sub
out
pop
sub
psubw
push
dec
dec
dec
inc
dec
dec
dec
mov
pop
daa
mov
cmp
verw
sub
mov
ja
sub
int
outsl
div
mov
xor
fsubrl
inc
imul
push
mov
xchg
in
xchg
and
push
xchg
fiadds
sbb
test
push
into
dec
push
sbb
inc
inc
arpl
arpl
pop
and
movsb
cmp
adc
jo
push
xor
mov
sti
add
pop
lock
adcl
pop
fstps
test
and
jmp
mov
repnz
cmp
inc
out
das
pop
pop
xchg
stos
xor
or
xorl
mov
or
cmp
inc
addr16
pop
into
add
dec
lds
mov
dec
jg
push
or
xor
sbbl
loop
jne
out
push
inc
xchg
cltd
inc
fsubrl
bound
cltd
jo
add
sarl
xchg
push
notl
or
add
push
pusha
aas
mov
rolb
out
ja
push
pop
mov
loopne
mov
dec
mov
in
sbb
sbb
rol
or
pop
cmp
cs
xor
pushf
hlt
xor
mov
test
test
sbb
popa
adc
sbb
adc
mov
and
inc
xchg
out
sar
xor
xlat
add
mov
enter
sbb
mov
rclb
sbb
sbb
jmp
pop
inc
into
adc
cmp
loop
ret
inc
adc
inc
dec
inc
mov
cmp
push
das
pusha
pop
and
ret
nop
pop
pop
sbb
dec
xchg
imul
mov
loop
jmp
adc
mov
call
inc
jbe
and
jecxz
ret
adc
or
push
ss
in
xor
fs
sbb
mov
mov
les
hlt
mov
scas
cmp
dec
push
ljmp
mov
push
and
push
sub
jns
pusha
xor
int
xor
fstpl
mov
mov
das
test
sahf
shlb
mov
das
xor
enter
in
xor
in
hlt
cmp
cmp
js
sbb
pop
nop
mov
jne
or
imul
into
cs
cmp
xor
shlb
mov
sbb
inc
loop
cmc
inc
and
je
movb
clc
cwtl
and
mov
sbb
push
mov
inc
dec
pop
or
mov
fimull
push
mov
push
and
xchg
add
mov
inc
jo
gs
inc
inc
dec
or
sub
pop
push
sub
xchg
rolb
xlat
pusha
jge
adc
xchg
sub
fnsave
inc
jmp
sbb
sbb
push
rcrl
shll
dec
add
add
mov
fldt
adc
mov
subl
mov
je
sbb
in
push
cli
fwait
adc
dec
jne
xor
aam
and
push
cmpb
mov
or
push
mov
imul
sbb
test
fcmovnb
cmpsl
inc
gs
in
outsl
adc
decb
push
add
cld
pop
cld
mov
xchg
adc
insb
mov
jo
push
in
xor
and
je,pn
mov
mov
fiadds
repnz
cmp
xor
mov
add
mov
popa
pop
add
and
add
add
insl
pusha
rcrl
testl
or
add
ret
adc
xor
push
loopne
adcl
lret
clc
ds
ficomps
sbb
inc
dec
lret
jg
and
sbb
ret
ret
xlat
addl
test
clc
or
addl
pop
les
fidivrs
bound
dec
sub
shrl
xorb
cmp
and
inc
pop
xor
dec
addl
sub
inc
mov
xchg
fwait
mov
dec
dec
out
mov
das
add
cmp
mov
mov
cmp
repnz
add
jne
xchg
sbb
mov
xlat
lods
push
push
mov
dec
pop
add
mov
sub
adc
mov
dec
jne
sbbb
sbb
hlt
xor
insb
jbe
lods
clc
mov
xorb
insl
and
clc
jne
inc
nop
stos
arpl
stc
in
idivl
sarb
movsl
adc
inc
mov
push
loop
iret
mov
bound
and
mov
adc
pop
in
pusha
mov
pop
mov
out
adc
int3
test
decl
pop
dec
imul
inc
add
and
add
aad
dec
dec
shrb
adc
or
std
push
inc
dec
xor
mov
hlt
push
aaa
or
ret
in
fs
in
xchg
adc
aaa
ds
jno
add
adc
sbb
adc
mov
mov
bound
or
imul
or
jne
hlt
cmpsl
mov
hlt
sub
fmuls
sbb
push
add
jne
repnz
ds
add
push
push
mov
out
fsubl
inc
xor
mov
inc
inc
push
cli
sub
or
add
iret
xlat
std
stos
inc
sbb
scas
jbe
js
xor
adcb
rclb
jmp
add
add
and
xchg
out
inc
and
aas
clc
arpl
add
or
sbb
push
pusha
and
outsb
or
lahf
and
sarl
das
mov
mov
mov
sbbb
loope
es
inc
pop
xor
test
outsb
inc
ja
shr
adc
fs
mov
adc
mov
sbb
sbb
push
bswap
inc
sbb
pmulhuw
rolb
inc
pop
icebp
mov
mov
add
sub
rolb
jg
pop
inc
test
add
push
push
cmp
add
sbb
aas
pop
sub
add
sar
adc
xor
pop
and
mov
xchg
or
mov
cmp
out
sub
push
jb
clc
push
clc
push
mov
sub
mov
xor
jmp
mov
sbb
sbb
xchg
cmp
roll
and
out
fwait
cmp
mov
call
dec
cmpsl
hlt
sub
dec
dec
incl
pop
push
es
nop
les
pop
cmp
punpcklbw
mov
fnstcw
jns
scas
or
pop
xor
rcll
push
push
push
xor
incl
or
lcall
sbb
mov
or
or
adc
sub
jge
fistl
adc
add
add
dec
test
in
xchg
movsl
orl
push
fadds
or
in
dec
and
or
push
add
add
or
push
add
xchg
pushf
and
push
jecxz
shrb
mov
push
test
movsl
inc
pop
in
jge
and
je
ret
cmp
cmp
adc
nop
push
dec
addr16
xchg
imul
add
ret
mov
sbb
inc
mov
cmc
xchg
lea
jno
cmp
mov
fsubl
inc
push
pop
add
or
sub
push
insl
scas
js
push
push
jb
insl
popa
lea
fidivs
adcb
pop
add
rcrl
rclb
push
roll
sub
adcb
dec
and
sub
addl
cmp
jl
add
inc
rcrl
inc
adc
leave
shrl
push
or
or
icebp
adc
sub
pop
dec
dec
sub
mov
dec
inc
cld
inc
jae
mov
cmpsb
cltd
add
int
pop
lods
popa
cs
sub
rcrb
aam
dec
daa
fnstcw
or
pop
in
pop
leave
subb
in
pop
or
push
pop
dec
cmpsb
pcmpeqb
adcb
xchg
sub
nop
xchg
xchg
inc
or
adc
ja
rcrb
nop
mov
xor
adc
pusha
cs
les
test
insb
jno
mov
pop
or
sahf
dec
cmp
jo
add
and
sbb
and
mov
pop
sbb
jb
dec
pushf
pushf
adc
stos
lods
imul
jl
jl
xchg
or
and
movsl
sahf
addb
inc
test
push
or
dec
sub
lcall
and
movsl
cmc
test
add
add
aas
cmpsb
adc
sbb
dec
pop
int
fstps
dec
andb
pop
and
popa
push
fldcw
bound
dec
pusha
add
lods
mov
add
fmuls
pop
pop
xor
jo
xchg
push
les
mov
or
jae
inc
mov
sub
dec
outsl
jnp
jo
shll
out
js
and
mov
push
sub
je
sub
in
adc
jl
inc
pusha
cs
push
add
das
and
adc
es
or
or
inc
aad
sub
jne
inc
in
inc
sub
outsl
or
cs
cs
js
mov
adc
lcall
add
inc
push
jne
shlb
lahf
dec
test
adc
sub
dec
jae
cmp
cmpsb
xor
or
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
int3
cmpsl
addb
test
and
xchg
or
sub
or
and
cltd
cmc
add
rclb
dec
addps
loope
jecxz
or
mov
or
xchg
ret
movsb
inc
push
or
pop
fcoml
movsb
or
in
mov
sub
call
rorb
adc
mov
int
adc
mov
jl
cmp
mov
mov
test
push
xor
enter
loope
xchg
cwtl
popf
test
popf
pop
fs
sarb
jb
jmp
mov
or
nop
xchg
cs
adc
push
iret
repz
fnsave
sar
and
xchg
es
xor
test
sub
xchg
xchg
pushaw
sub
clc
add
xchg
int3
mov
in
pop
rolb
pop
dec
fwait
xor
mov
or
pop
les
sbb
inc
rorb
sub
cmp
decb
mov
mov
xor
mov
outsl
dec
jnp
fwait
jmp
jbe
lock
aas
mov
push
addl
fdivs
cwtl
orl
fwait
jg
fcompl
das
adc
aaa
in
test
or
xchg
pusha
leave
in
inc
subl
jns
testl
mov
pop
xchg
xchg
mov
arpl
shrb
jl
pushl
cmp
leave
cmp
pop
loopne
lods
fcomps
loope
out
push
push
inc
add
xchg
imul
les
cmp
fs
add
xchg
adc
mov
add
adc
cwtl
cmp
mov
and
leave
adc
push
lods
pop
xchg
int3
das
pop
repnz
cltd
add
mov
dec
fldl
fcomps
fstl
jbe
mov
push
addb
push
scas
adc
hlt
push
push
stc
pusha
push
stos
dec
pusha
cmpsb
xor
inc
subl
inc
push
xor
sbb
sub
xor
sbb
imul
add
out
ljmp
test
ja
or
adc
ja
or
mov
or
cmpl
int
and
push
cmp
and
push
daa
xor
or
xor
rorb
sub
or
add
gs
push
add
or
or
imul
inc
and
js
les
and
adc
mov
inc
sbb
lret
mov
mov
or
or
and
inc
mov
add
or
jb
aad
jmp
fcmovb
sbbl
sub
cmp
add
jl
nop
push
in
sub
nop
mov
sub
inc
inc
sub
pop
inc
or
mov
or
fucomip
add
mov
sub
mov
push
mov
dec
adc
loopne
push
push
nop
fidivl
pop
lds
adc
xorb
fxtract
mov
jb
das
mov
sbb
inc
push
nop
pop
jo
pop
add
enter
pop
pop
mov
cmpsl
adc
nop
dec
lcall
loopne
les
repnz
lcall
add
sub
sbb
and
xor
adc
push
inc
pop
int
pop
add
pop
into
pop
pop
enter
push
push
roll
push
cltd
pop
push
sub
pop
das
prefetch
or
das
add
jg
lahf
adc
mov
lret
xchg
pop
test
pop
sbb
pop
call
rcrb
dec
stos
sub
dec
fimull
push
insb
jo
movsb
cmp
je
jl
in
test
leave
gs
lret
addb
sub
inc
sahf
dec
mov
pushf
xchg
std
or
xor
rcll
jmp
mov
jl
into
jno
cmp
stos
add
insb
notb
inc
mov
mov
pop
fwait
les
insb
sub
sub
sub
push
jmp
jp
sub
and
xchg
jb
mov
clc
push
shll
and
and
mov
jns
pop
repnz
decl
xor
adc
mov
lods
lods
pop
jnp
inc
nop
hlt
pop
and
push
insb
and
mov
add
jo
sub
je
inc
sub
and
pop
pop
dec
push
push
cltd
nop
test
gs
mov
rclb
and
nop
pop
dec
and
or
fcomps
jae
mov
or
ret
mov
cmpsl
cmp
jns
pop
jmp
sbb
mov
clc
mov
pusha
call
push
stc
fisubrs
cld
pop
enter
wbinvd
sub
or
pop
or
mov
adc
adc
add
add
inc
aaa
pop
cmpsb
test
push
movsl
sbb
xchg
icebp
dec
data16
push
adc
sbb
dec
andl
or
xlat
outsl
test
fists
push
or
adc
mov
xchg
dec
sarl
push
dec
js
filds
xlat
mov
lods
adc
imul
or
xchg
ja
arpl
popa
sbb
pop
pop
data16
cld
in
pop
stos
cs
mov
mov
add
xor
hlt
das
xchg
call
inc
call
imul
inc
pop
repnz
popl
out
jns
bound
add
cwtl
ss
aas
mov
mov
cltd
pop
add
sub
jne
outsl
cmp
or
lcall
add
int3
mov
fbld
or
mov
or
pop
mov
loopne
and
push
jnp
add
sub
mov
in
call
add
mov
mov
int
fldenv
mov
add
pop
sub
push
sqrtps
push
cltd
nop
mov
fdivs
je
push
fs
push
inc
jo
outsl
adc
rcrl
arpl
aam
aas
inc
add
mov
adc
fs
jne
loopne
aaa
aaa
pop
and
jge
sub
jnp
pop
clc
sbb
push
testl
jo
jae
ss
mov
lahf
inc
sbb
inc
cmc
pusha
call
dec
xor
pop
push
addb
dec
jo
sbb
punpckhbw
outsb
pop
or
inc
and
or
mov
and
push
dec
gs
sbb
and
add
sbbl
dec
es
sbb
mov
subl
pop
pop
dec
or
fwait
mov
push
dec
add
xor
xor
in
mov
jbe
pop
or
inc
rorl
mov
jle
add
xorb
and
out
mov
xor
push
fldt
inc
push
push
mov
push
sbb
or
inc
push
add
pop
push
addl
inc
dec
arpl
or
inc
les
push
push
push
rcl
adc
incl
sbb
sbb
mov
add
adc
rorl
cmpsl
addr16
shrb
sub
pop
add
push
or
adc
in
pop
sti
or
adc
out
ljmp
addr16
adc
cmp
addr16
fs
xchg
mov
mov
test
or
incl
xlat
rolb
sub
push
lock
mov
cwtl
push
enter
inc
outsl
mov
mov
movsb
push
xchg
in
movl
mov
mov
fmull
into
jg
cmp
roll
mov
jl
nop
cmp
outsb
rolb
aas
pop
scas
sub
cwtl
xchg
jle
pop
mov
push
push
aam
jmp
inc
pusha
add
push
lcall
xor
dec
clc
sahf
dec
dec
xchg
dec
cmp
xchg
js
mov
push
pusha
mov
ja
imul
addps
xor
adc
xchg
dec
les
jl
adc
pushf
jo
dec
imul
outsl
filds
sbb
ret
lock
push
push
sbb
and
add
add
mov
das
xchg
add
clc
mov
push
or
mov
or
push
mov
mov
add
faddl
pop
jno
cmp
mov
adc
or
adc
xchg
cltd
out
fstl
mov
jmp
insl
mov
cmpsl
cmpsb
sub
in
or
mov
push
cld
stos
addl
inc
sahf
idivb
mov
and
and
cmpsb
or
sbb
jae
adc
sub
xchg
nop
movsb
mov
xchg
test
xor
mov
dec
dec
jbe
in
adc
sbb
imul
loop
add
push
adc
stc
inc
sahf
mov
add
adc
clc
and
push
arpl
call
testb
cmp
cmp
mov
mov
test
mov
outsb
dec
jae
imul
lock
pop
pop
js
outsl
push
add
add
aaa
xor
sub
sub
lahf
sbb
imul
jmp
pop
or
push
lods
and
mov
and
ljmp
movsb
daa
sub
mov
and
pop
leave
push
mov
push
push
adc
pop
cmp
inc
arpl
xchg
andl
jo
jo
pusha
imul
nop
je
jns
add
or
arpl
shrb
dec
fisubrl
cmp
fidivl
jno
xchg
mov
fistpl
popl
add
mov
mov
mov
jb
cli
inc
mov
es
xor
pop
mov
push
ret
aas
bound
xor
sub
cmp
add
pusha
sbb
jb
xchg
iret
lret
clc
add
jae
sub
pop
mov
xchg
mov
test
repnz
pop
outsl
lea
sbb
pop
adc
roll
mov
dec
call
stos
mov
loopne
lock
sbb
xlat
icebp
jb
mov
pop
xchg
and
and
cmp
outsl
add
dec
mov
fwait
and
or
and
mov
int3
xlat
inc
pop
fwait
popf
cmp
push
inc
addb
push
xchg
sub
mov
clc
insl
mov
inc
sub
xor
and
dec
fisttpl
adc
pop
jns
adc
or
lea
lret
das
movsl
fld
mov
push
sub
or
nop
jne
das
jp
rcrb
cmpl
fcomps
ljmp
adc
adc
shrb
adc
iret
pop
mov
arpl
imul
and
sbb
push
add
pop
jne
adcl
scas
cmpsl
pop
test
out
and
arpl
andl
add
jb
sub
and
sbb
add
xchg
jbe
sub
scas
leave
call
push
mov
inc
or
sub
jbe
nop
loop
and
dec
inc
out
aad
fstpl
adc
scas
shlb
sbb
pop
ja
call
cmpsl
ret
and
add
sbb
mov
addl
mov
sbb
addb
mov
das
lods
xor
daa
movsbl
js
ret
dec
mov
cmp
fnstcw
mov
or
pop
dec
dec
and
or
sub
adc
ret
pop
adc
rol
js
ret
sbb
les
mov
pop
mov
sbb
or
in
ljmp
rcrb
pop
or
xchg
popa
adc
or
inc
sub
sbb
jbe
lcall
enter
and
sbb
or
shlb
xor
ljmp
and
add
dec
call
inc
fadds
push
mov
sbb
dec
iret
and
xchg
fwait
sub
add
and
and
push
sub
and
adc
jb
push
inc
or
push
fwait
push
sbb
inc
or
or
mov
aaa
sub
or
push
xchg
adc
sbb
sub
mov
adc
inc
and
xor
xor
pop
or
adc
ja
mov
gs
dec
pop
add
loope
das
inc
cmp
mov
imul
pop
test
comiss
in
xchg
lea
xchg
pop
adc
sbb
mov
and
jb
cmp
mov
fdivrs
sub
adc
add
cmp
inc
cld
cmp
loopne
cmp
xor
and
fnstcw
add
jae
add
xor
and
pop
ret
adc
push
cmp
bound
sahf
in
jge
test
sbb
out
mov
sub
mov
cmc
adcb
cmp
sahf
std
mov
mov
es
pop
and
or
and
push
xchg
jnp
movsb
adc
stos
mov
cmp
aam
push
inc
and
push
mov
dec
js
add
std
xchg
dec
lahf
ds
pushl
xchg
int3
inc
mov
mov
and
dec
jle
jmp
inc
fsubl
xorb
imul
or
hlt
lds
push
jmp
adc
ja
jae
inc
jmp
mov
fldcw
mov
movsb
repnz
ret
push
jle
xchg
mov
push
leave
in
xchg
push
sbb
adc
fdivrl
add
addr16
jo
inc
add
aaa
sub
xchg
out
and
dec
sub
arpl
and
mov
mov
lds
es
adc
dec
push
add
scas
sbb
adc
mov
mov
or
jns
pop
sub
lock
push
and
mov
mov
imull
daa
js
dec
jae
cmpb
outsb
fistpl
fwait
test
jge
cmp
ja
adc
add
add
sub
in
jb
pop
sbb
sbb
or
lret
gs
push
or
jmp
sub
int3
adcb
sub
jb
fs
adc
adc
mov
jno
dec
outsl
and
add
outsb
mov
and
jno
pop
enter
mov
arpl
nop
pop
cmp
sub
mov
mov
ret
mov
add
sub
je
push
loop
sti
xchg
shr
jne
cmp
cld
or
jbe
imul
pop
or
xchg
je
mov
mov
or
jle
loopne
lods
push
in
and
fists
dec
outsl
mov
out
outsb
jo
sub
mov
lock
pop
mov
sub
in
add
inc
xor
or
sbb
or
xchg
aam
jne
push
xchg
mov
xor
mov
adc
push
cmp
mov
and
addb
dec
pusha
enter
test
pop
add
je
jae
add
imul
decl
push
and
push
ja
lock
inc
inc
push
push
mov
mov
inc
push
inc
and
iret
fldcw
adc
lcall
mov
test
pop
xor
or
imul
add
sbbb
sub
adc
dec
imul
or
xor
test
in
xchg
lcall
push
xchg
sbb
cmpsl
nop
xchg
add
cmp
aaa
adc
push
inc
dec
add
add
mov
leave
jmp
add
push
sbb
sub
pop
push
add
or
aaa
sahf
imul
outsb
cs
jne
out
cmpsb
push
gs
adc
lar
mov
imul
jae
cmpsl
fwait
nop
and
notl
mov
xchg
inc
mov
movsb
mov
cmp
adc
in
jo
les
cmp
and
ds
cmp
pusha
das
adc
stos
pop
sub
movlps
or
push
mov
pop
mov
mov
xchg
or
or
insl
xor
xchg
out
inc
cmp
adc
mov
pop
jae
mov
adc
adc
mov
dec
sti
mov
sub
lret
mov
lcall
movsb
fwait
xor
xchg
mov
adc
ret
inc
jb
jae
and
hlt
aam
jmp
push
jmp
pop
pop
dec
jbe
and
sub
cmp
popf
cmp
and
xchg
dec
dec
adc
or
pusha
jae
push
cmp
cmp
cwtl
imul
jle
addb
movlps
fwait
jo
sarb
mov
add
or
popa
xor
pop
call
sbb
mov
imul
and
cwtl
imul
js
in
sbb
pusha
stos
inc
sub
mov
mov
cmp
pop
setne
mov
add
and
imul
popa
mov
out
aas
dec
inc
out
sub
xor
decl
dec
xor
test
push
out
arpl
test
lahf
xchg
dec
inc
inc
push
mov
sub
dec
loopne
add
dec
dec
out
sbb
jg
scas
insb
jge
nop
or
inc
lcall
stos
sub
sub
in
fsubrs
cmpl
and
es
xor
xchg
sahf
lret
gs
pop
add
pop
out
pop
xor
aam
sbb
loop
adc
mov
sub
inc
outsl
fldl
inc
and
test
sbb
clc
inc
sub
shrb
mov
dec
jne
xchg
clc
mov
clc
in
int3
adc
adc
push
mov
fdivrp
add
les
dec
xchg
pop
lahf
daa
or
add
mov
adc
add
xchg
mov
nop
insl
jmp
and
add
jmp
inc
cld
loop
push
test
test
aad
sbb
clc
mov
roll
xor
addl
int3
scas
or
sub
jmp
jp
test
xchg
jl
inc
lds
gs
dec
fs
aaa
mov
dec
cmc
add
and
jl
loop
xor
jne
xchg
in
add
or
sub
sbb
inc
sbb
cmp
notb
lret
xchg
inc
inc
cli
andl
call
lea
cmp
sbb
pusha
jg
cmpsb
cs
jmp
cmpsb
shl
cmpsl
or
mov
in
sub
cli
ret
test
mov
dec
sbb
mov
add
jl
data16
push
pusha
xor
xchg
push
jae
push
popfw
pop
loope
imul
mov
icebp
and
mov
call
jne
push
dec
dec
movl
dec
pop
sbb
mov
aam
push
aam
insb
test
adcl
and
outsb
lret
mov
or
mov
adc
test
sub
inc
lds
call
add
stc
pusha
leave
cmpl
les
fstps
push
data16
js
adc
aaa
and
or
xor
or
pop
das
int
inc
das
in
and
pop
ja
into
les
fs
js
push
out
adc
add
cmp
lar
mov
je
sbb
xchg
les
call
andl
and
adc
sub
push
js
ret
inc
inc
add
xchg
xchg
sub
mov
out
fidivl
adc
shll
sbb
dec
add
pop
inc
lods
inc
ss
pop
pop
cld
mov
jb
cmovns
and
dec
fsubrl
xchg
inc
je
xchg
jg
cld
nop
sub
add
add
notl
mov
shlb
loop
push
sarb
pop
xor
adc
dec
mov
xchg
imul
subb
daa
cmp
shlb
mov
gs
nop
pop
sti
jmp
mov
adc
data16
pop
movsb
negl
pop
bound
out
push
xor
lea
sbb
jb
adc
push
or
jg
addl
adc
cmp
stos
jno
scas
mov
jmp
movsl
ret
loop
push
pand
dec
lds
arpl
ds
xor
addl
add
in
frstor
lea
out
mov
dec
mov
push
fldenv
enter
and
popa
sbb
sbb
xchg
and
and
lock
and
xor
mov
fcomip
jmp
mov
rcrb
in
mov
fisubl
call
push
pushf
inc
mov
pusha
sbbb
xchg
mov
dec
incl
dec
push
std
aaa
daa
or
inc
push
sub
sub
sub
xchg
test
daa
jae
faddl
xchg
xchg
lcall
inc
pop
lock
bound
lea
adc
stos
pop
mov
and
movsb
inc
xor
stos
xchg
mov
mov
enter
dec
xchg
adc
pop
mov
je
orb
sub
push
mov
and
and
movsl
adc
adcb
aaa
adc
add
lock
adc
dec
or
fwait
mov
push
push
addr16
mov
adc
or
pushf
dec
mov
sub
lods
movsb
dec
shll
gs
loopne
repnz
test
les
xchg
js
or
fiaddl
andl
cmp
sbbb
add
xorl
mov
out
mov
cmpsb
inc
stc
lcall
in
inc
or
push
pop
add
mov
pop
pushf
adc
dec
jecxz
cltd
cwtl
xchg
dec
sbb
aam
sbb
sub
dec
cwtl
pushf
in
xchg
cmp
aam
add
ja
test
repz
adc
add
ret
push
xchg
xor
in
sahf
adc
enter
cwtl
nop
cli
pop
cwtl
push
inc
test
js
shll
mov
es
pop
frstor
psraw
push
ja
or
int
jp
andb
cmp
ror
cltd
dec
xor
popa
xchg
ret
nop
sbb
in
cli
jle
push
cmpb
outsl
jl
inc
cwtl
sub
mov
push
xor
and
jg
movswl
cmp
jne
adc
and
fdivrl
test
cmp
mov
outsb
mov
fsub
inc
aam
jmp
test
cmpl
in
sbb
or
pop
call
and
cld
clc
cld
push
inc
nop
cmp
inc
inc
push
xchg
cmp
mov
inc
es
es
push
mov
add
es
dec
mov
nop
cmp
fsubrs
movsb
repnz
dec
or
push
xor
lcall
aas
add
inc
add
inc
lcall
or
in
data16
daa
rcrb
outsl
add
test
dec
loopne
pushf
rolb
mov
das
pop
incb
add
inc
flds
xlat
xor
jnp
incb
je
sbbb
sbb
mov
int3
or
pop
add
das
dec
cmpb
rcrb
sbb
dec
add
rorl
or
cltd
adc
and
inc
int
ret
imul
jae
add
push
lahf
outsl
push
cmp
sahf
je,pn
das
and
data16
sbb
adc
fdiv
push
mov
mov
or
icebp
int
jmp
push
cs
or
lock
movsb
pop
mov
mov
sub
dec
xor
pusha
inc
dec
sbb
dec
test
add
movsl
push
in
ljmp
shll
lock
popf
mov
pop
popa
mov
and
fcoms
dec
inc
jecxz
add
add
repnz
pop
sub
cmp
xor
cld
sbb
sub
push
scas
sbb
sub
add
pusha
std
and
add
xchg
andl
hlt
movsb
cmpsl
fsubr
ret
fucomi
arpl
in
push
xor
xchg
sub
jecxz
fistps
scas
add
jae
inc
pushf
arpl
jmp
pop
jg
mov
jge
cwtl
mov
adc
pop
loopne
jo
hlt
out
inc
inc
push
add
mov
iret
cmc
fs
xor
add
enter
jns
sti
in
popa
mov
adc
repnz
adcl
pop
sub
and
dec
jle
adc
sbbl
filds
and
inc
inc
nop
mov
test
js
inc
mov
inc
sub
and
pop
or
cltd
int3
inc
dec
dec
test
mov
outsl
inc
cmp
or
dec
sub
adc
or
mov
mov
leave
dec
mov
adc
jg
pusha
lods
ja
add
inc
test
mov
cmp
dec
push
mov
loope
pushf
mov
mov
int
loop
mov
ja
and
fstpt
lods
inc
mov
or
jge
hlt
clc
mov
push
adc
rolb
push
and
sbb
sbb
pop
mov
adc
xchg
add
dec
mov
add
scas
fcomi
xchg
inc
sub
pop
mov
cld
insl
adc
sub
lods
lods
daa
inc
adc
mov
mov
cmpl
loop
rclb
outsb
sar
cmp
push
and
xlat
scas
xor
adc
lret
push
xorl
inc
jp
lods
jg
or
pop
or
ja
adc
lret
sub
in
pusha
cmp
lea
mov
jnp
mov
addr16
outsl
jno
int
test
cld
push
xor
rorl
mov
movsb
sbb
gs
jno
fbld
mov
sbb
lret
mov
jno
cmp
cmpsl
call
dec
xchg
arpl
cmp
clc
inc
test
es
fildll
lea
adc
xchg
movsb
cwtl
sub
pop
inc
ret
aaa
rol
jmp
nop
inc
add
xchg
andl
rcl
repz
push
ljmp
imul
mov
or
iret
dec
cmp
dec
jns
mov
cmp
pop
push
dec
push
testl
or
push
out
mov
es
divb
inc
adc
jecxz
nop
test
push
lcall
inc
xor
lea
mov
xchg
jae
cmp
sbb
lds
xor
jge
dec
jne
mov
dec
mov
add
mov
xchg
mov
cli
lcall
mov
and
and
lods
mov
mov
jb
push
and
mov
cs
mov
mov
movsl
or
cltd
pop
push
mov
cwtl
or
sarb
es
xchg
inc
dec
xchg
mov
and
mov
pusha
mov
pop
test
addb
cmpb
or
dec
js
lsl
push
je
popa
jo
cmp
sbb
insb
shrb
inc
add
push
outsl
fs
loopne
pusha
pop
cmpb
xchg
out
fistps
push
and
enter
dec
dec
and
pop
or
movsl
dec
dec
dec
imul
test
cmp
add
cmp
xor
xchg
cmp
xor
sbbb
sub
jb
nop
sub
inc
inc
and
and
push
in
and
and
nop
lret
sbbb
inc
add
adc
mov
or
or
and
in
add
add
popa
cld
std
imul
clc
sar
jo
js
std
das
sbb
lock
mov
xchg
in
std
in
dec
inc
mov
call
js
xchg
in
std
xchg
loopne
fsubrl
fdivr
xchg
fcoms
add
dec
aam
and
fwait
cmpsl
outsb
enter
cmp
enter
push
or
ret
sbb
rol
mov
mov
lret
mov
jae
std
int3
std
ja
dec
push
jb
std
rcrb
mov
mov
sbb
lods
test
add
nop
movsb
movsb
mov
cs
pushf
cwtl
xchg
add
nop
push
in
and
sbbb
into
lcall
cmp
add
jmp
and
cwtl
lcall
ds
pop
push
lea
push
lods
jb
mov
sbb
repnz
add
and
adc
pushl
xchg
cmp
jbe
lea
mov
adc
rolb
enter
xchg
cmp
xor
xchg
lret
jnp
mov
jnp
mov
adc
jbe
mov
fisttps
ret
add
fs
stos
push
cmp
and
cmpl
and
inc
inc
mov
push
ret
jl
sub
out
inc
adc
and
ss
cmp
mov
mov
xlat
adc
fcompl
movl
lock
lcall
mov
clc
out
fadd
inc
xlat
mov
push
js
ror
pop
jnp
popl
cmp
jne
imul
mov
stos
xor
add
push
add
aaa
popa
or
pusha
shlb
in
lods
loopne
rolb
sub
pop
leave
xor
or
sbb
dec
sub
sub
xchg
sbb
test
dec
ret
or
push
xchg
scas
mov
push
mov
add
adc
loopne
pusha
and
pop
add
daa
fldt
mov
or
dec
fwait
jl
fildl
cmp
inc
cmp
cld
sub
adc
or
and
jno
dec
cmp
je,pt
sub
sbb
push
clc
add
xor
xor
mov
pop
sbb
int3
adcb
and
and
dec
jnp
sbb
xor
enter
insl
push
dec
lock
dec
inc
mov
xlat
add
cmp
pop
mov
mov
sbb
push
cmp
ret
in
and
adc
fnsave
ss
mov
loopne
pop
jg
mov
adcl
and
xchg
xchg
das
dec
push
xchg
push
pop
inc
push
hlt
mov
call
inc
and
loopne
rolb
jbe
sub
push
mov
xchg
pop
and
push
adc
cmpsl
jmp
rcrb
jnp
ret
adc
push
jge
int3
fxch
enter
push
imul
movsb
jle
sarb
sub
fcmovu
xlat
pop
jo
outsl
cmp
cmp
fistpll
imul
push
lods
mov
cs
shlb
xchg
push
mov
add
xchg
pushf
test
xchg
das
mov
xchg
mov
cmpsb
in
mov
mov
and
addb
rorb
js
mov
mov
je
jo
mov
movsl
test
adc
mov
cmp
pusha
shlb
pop
es
mov
push
adcb
mov
push
and
lret
pop
pop
pop
xor
mov
inc
mov
mov
add
xor
gs
dec
dec
dec
jae
enter
xor
dec
jae
xor
xor
cmp
mov
imul
and
and
sub
pop
enter
adc
xchg
out
and
adc
jb
nop
out
adc
sbb
jb
dec
sbb
add
stos
imul
lea
mov
jnp
lcall
dec
mov
pop
xor
es
test
cmp
loop
or
fcmovnb
insl
lods
or
xchg
movaps
add
ret
push
sub
loop
xchg
je
and
or
xchg
cmp
mov
or
adc
out
mov
sub
adc
imul
insl
ja
inc
sub
cltd
insl
ret
adcb
pop
icebp
sbb
push
or
mov
sbb
rcrb
enter
mov
and
int
lods
mov
mov
movsb
mov
mov
mov
stos
pop
mov
loopne
nop
mov
pop
xchg
cwtl
cwtl
mov
bound
es
xchg
test
mov
movsb
mov
scas
test
aaa
nop
insb
insl
pusha
js
adc
lcall
pop
and
gs
fs
add
lcall
xor
gs
pop
pop
sub
lret
movsb
sbb
es
dec
stos
rcrb
push
push
test
loopne
cwtl
mov
push
fistps
push
mov
adc
inc
cmc
pop
sbb
es
movsb
sbb
xchg
inc
and
lret
shrl
mov
xchg
add
enter
cmp
and
pop
jb
adc
adc
add
or
sbbb
add
add
lret
add
sbb
notl
and
dec
ret
and
pop
xor
lock
sub
les
cmp
jne
pop
in
xor
rolb
icebp
movsl
loopne
jecxz
cmp
dec
add
inc
pop
cs
dec
hlt
lock
jmp
and
lahf
popa
leave
and
lock
aas
cli
cltd
push
jb
test
scas
adc
pop
rolb
xor
and
aaa
je
jno
arpl
sub
call
cs
iret
dec
cmp
leave
mov
and
ficomps
movsl
and
shlb
rorb
xor
lea
and
jge
dec
lods
mov
pusha
movsb
imul
mov
inc
mov
mov
xor
bound
lods
psubsb
sub
daa
cwtl
mov
ja
xchg
outsl
sub
pusha
pushf
out
test
xchg
enter
js
js
add
nop
je
pop
or
jo
and
jo
push
sub
and
pusha
stos
xorb
pusha
sbb
cmp
pop
imul
fcompl
data16
mov
or
jmp
movsl
insl
or
jno
dec
dec
or
dec
inc
dec
jae
in
inc
inc
mov
nop
cmp
pusha
cmp
xchg
push
add
sbb
and
mov
xchg
sub
sub
mov
and
or
mov
and
xchg
sbb
js
inc
or
pop
pusha
xor
mov
clts
movsb
mov
mov
and
andl
and
jbe
stc
cs
and
or
lods
mov
xor
sbb
in
cmpb
in
in
aaa
and
in
loopne
in
fsubl
dec
fdivrl
sbb
std
dec
and
popf
pop
daa
pop
fcomps
push
std
in
popf
fdivs
xchg
or
loopne
add
in
testl
inc
cwtl
cmpb
xor
loope
or
sbb
dec
sbb
xchg
int3
push
enter
mov
jno
movsl
cmp
rolb
popa
push
mov
or
and
test
or
movsb
stc
outsb
aam
or
pushf
add
and
and
in
and
and
cmp
and
sbb
and
rolb
and
shlb
dec
shlb
push
leave
and
and
and
and
and
jb
and
cmp
loopne
add
sbbb
dec
andb
push
push
jns
mov
push
lods
sbb
push
test
sub
out
push
push
mov
cmpb
add
cmp
inc
dec
and
fwait
inc
push
pop
push
and
inc
pop
scas
sub
adc
and
daa
subb
xchg
inc
repnz
subb
test
nop
sbb
pusha
daa
addb
and
add
xor
daa
rorb
nop
daa
subb
xchg
inc
repnz
andb
leave
nop
and
add
xchg
inc
jb
andb
and
mov
jno
jo
or
push
enter
std
mov
mov
sbb
push
and
shlb
dec
mov
nop
and
add
xchg
subb
fs
scas
sbb
sbb
add
inc
sub
nop
cmp
test
imul
jb
mov
sub
cmp
xchg
lock
mov
fdivr
pop
orb
leave
cmp
add
cmp
add
orb
mov
js
xor
cltd
loopne
insb
sbb
mov
aad
cmc
je
and
shlb
inc
insb
inc
cs
loopne
push
sub
xchg
shl
flds
sbb
pusha
pop
outsl
inc
add
dec
shlb
push
push
push
mov
mov
dec
mov
in
inc
dec
or
add
push
cmp
xor
or
gs
xor
and
sbbb
and
jb
nop
lret
and
sbb
add
adc
add
or
jb
xchg
or
cmp
pop
add
inc
or
jmp
add
nop
add
inc
std
outsb
or
cld
xchg
push
mov
cld
sbb
xchg
cld
sbb
inc
mov
inc
cld
test
cld
movl
in
jae
pop
repnz
jb
cld
sbb
in
nop
and
call
pop
sbb
lret
sbb
adc
int3
mov
pusha
xchg
xorl
dec
xchg
out
gs
shlb
mov
dec
mov
dec
daa
outsb
cld
cld
sbb
imul
cwtl
cld
and
cmp
mov
cwtl
cld
cld
gs
or
add
in
cwtl
dec
nop
and
mov
adc
in
mov
add
cld
cld
mov
pop
sbb
out
nop
inc
mov
rorb
lds
or
cld
je
mov
add
aam
sub
insb
sub
repnz
push
cmpsb
adc
pusha
cld
xlat
pusha
sbb
sub
js
dec
fwait
jl
mov
mov
into
jp
out
adc
lret
sbb
gs
push
movsl
cmp
pop
bound
leave
mov
xchg
push
or
add
or
pop
repnz
movsb
xor
pop
insb
decl
mov
seto
outsb
add
sahf
test
mov
jno
mov
and
jecxz
cmp
mov
subl
aam
int3
add
add
ja
loope
pop
leave
lds
insl
xor
mov
adc
jne
fadds
jae
lahf
dec
repnz
repnz
and
add
nop
dec
cmp
pusha
cmpb
and
and
and
es
mov
or
scas
pop
pop
sbb
and
xchg
roll
mov
push
pushf
js
cwtl
in
xchg
inc
flds
xchg
mov
mov
push
dec
mov
mov
pop
test
xchg
lds
inc
into
push
fnstenv
adc
cmpsb
xchg
in
mov
movsl
xor
dec
icebp
push
xchg
mov
sbb
fucomip
xchg
insb
rcrb
hlt
sti
sbb
jo
jbe
lock
sbb
in
sti
fisubl
fbld
and
jb
xchg
dec
in
dec
in
sbb
sti
sti
xchg
addr16
outsl
jno
es
sbbl
dec
aam
and
int3
int3
push
add
or
les
shlb
in
nop
outsl
leave
sti
dec
mov
outsl
inc
cs
jecxz
mov
mov
mov
pop
or
seto
add
fwait
cwtl
jmp
and
lock
bound
test
shll
sbb
add
xorb
sub
cmp
aam
pop
jo
sub
aam
inc
es
je
cmp
mov
add
sbb
mov
jns
dec
push
sub
sub
sub
sub
daa
subb
and
sub
jns
orl
in
das
and
and
and
leave
add
add
add
test
cmp
and
sub
mov
and
add
mov
add
and
in
shlb
and
mov
and
sub
and
and
xchg
inc
jb
das
and
rorb
add
inc
jb
and
xchg
sbb
inc
repnz
sub
ret
jle
popf
adc
nop
cmp
mov
ljmp
mov
add
ret
inc
fadd
das
dec
mov
push
adc
jo
nop
lea
mov
cmp
pop
or
push
mov
dec
mov
xor
cmp
jge
xor
or
sub
les
pushf
dec
add
ret
dec
jge
fbld
and
in
pop
push
inc
mov
enter
push
add
jae
add
not
jmp
enter
je
jp
popa
xor
dec
in
outsl
push
test
add
jns
mov
insb
or
sahf
inc
mov
adc
mov
adc
in
in
sbb
push
stc
add
mov
and
in
mov
insl
insl
sub
sbb
aad
ljmp
xchg
pusha
push
push
cmc
loope
imul
jo
jnp
lock
add
push
inc
shl
or
mov
outsb
inc
sub
sbb
cli
cltd
cmpsl
sbb
sbbb
and
test
lods
or
sbb
ja
mov
mov
push
test
or
mov
or
xchg
or
cltd
scas
sub
push
mov
rclb
push
movsl
push
movb
je
push
cmpsb
clc
push
popa
add
add
pop
xchg
sbb
int3
push
lret
rclb
rorl
into
daa
sbbb
fistl
imul
add
adc
pop
or
mov
or
test
faddl
lds
jae
mov
xchg
je
call
add
fdivrl
ret
and
call
shl
mov
mov
loopne
ret
add
orb
xchg
adcb
rcr
push
mov
int
dec
lods
fdivr
cmpsl
and
xor
xchg
pushf
stos
cmpsb
fstpl
add
data16
inc
add
dec
or
xor
push
clc
mov
fnstsw
jg
pop
jg
xchg
mov
and
outsb
loop
and
mov
or
add
test
fs
subb
mov
and
lods
dec
leave
sahf
cld
xchg
cltd
leave
cld
arpl
jb
ja
leave
daa
subb
nop
sbb
pop
sub
add
and
in
subb
sub
or
and
inc
sbbl
push
mov
or
xor
sbb
inc
daa
subb
cmp
in
inc
add
orb
and
loopne
inc
cs
mov
pop
dec
fwait
xor
dec
pop
pop
int
subb
and
xchg
inc
sub
xchg
add
sbb
je
and
fldenv
pushf
sbb
daa
mov
mov
mov
daa
in
sbb
subb
sub
cmp
add
cmpb
xorb
sbb
inc
pushf
or
and
pusha
mov
push
arpl
add
add
nop
fcomp
adc
aam
dec
push
leave
jmp
sbbb
jb
loopne
inc
es
rolb
jecxz
lds
push
mov
orl
mov
xchg
add
mov
xor
pop
es
sbbb
or
sub
xchg
sub
es
in
dec
pop
scas
mov
and
xorl
sub
sub
in
sbb
subb
sub
cmp
es
es
bound
xchg
fstps
stos
scas
pop
push
pop
push
ret
adcb
pop
pop
fldcw
inc
xchg
dec
enter
inc
inc
inc
and
and
in
jne
pusha
es
or
and
lods
je
push
sub
nop
sbb
pop
and
and
cmp
in
inc
and
loope
and
and
and
and
inc
out
sbb
aam
clc
adc
adc
popf
pop
stos
js
out
aad
hlt
push
fcompl
xor
ret
test
xchg
or
or
shlb
je
or
movsb
xchg
inc
jb
inc
add
or
and
shlb
and
dec
cwtl
std
and
xchg
inc
xor
test
dec
sbb
std
add
add
jb
xchg
mov
push
imul
push
leave
and
inc
and
and
and
mov
mov
mov
jb
xchg
add
push
pop
jb
je
push
leave
mov
and
and
mov
pusha
sbb
sbb
shll
add
in
and
movsl
ret
jg
dec
dec
mov
or
inc
jb
xchg
add
add
cmp
cmp
or
and
dec
push
leave
and
and
sbb
and
push
and
sbb
cs
sbb
pop
adc
in
and
adc
inc
sub
lods
and
nop
sbb
mov
and
and
and
mov
and
and
in
inc
jecxz
dec
in
pop
enter
or
fdivr
add
jecxz
sbb
leave
or
jb
push
jns
shlb
int3
xchg
mov
loope
xchg
nop
cmp
andb
and
adc
cmp
rcr
jl
cwtl
pop
mov
jno
or
aaa
and
jns
fcomp
cld
push
inc
cs
movsb
mov
and
cwtl
jb
inc
mov
sbb
inc
and
xchg
and
and
imul
in
je
or
insb
jo
enter
fs
pop
sub
add
sbb
cld
repnz
pop
push
push
call
shrb
push
dec
jecxz
incl
dec
inc
jb
nop
lret
inc
inc
inc
cmp
inc
add
cmp
pop
enter
xor
xor
lret
sbb
cld
push
in
cld
cld
cld
and
add
jg
sbb
push
in
xchg
cld
xor
nop
lret
sbbb
add
or
or
cs
push
or
nop
sbb
add
and
dec
pop
cmc
and
cmp
shl
push
leave
and
pusha
and
jb
mov
mov
sbb
inc
and
adc
mov
add
sbb
adc
sbb
or
or
lock
adc
xchg
dec
and
cmp
enter
lods
aad
test
gs
ds
movsb
movsb
mov
mov
in
and
out
shl
nop
imul
loopne
loop
dec
push
in
mov
cmp
cs
and
sti
mov
and
mov
jl
dec
js
stc
xor
xchg
js
je
jo
outsl
inc
or
and
fimuls
push
sahf
jno
int3
sti
jecxz
add
pop
push
mov
nop
pop
add
in
push
mov
sbb
dec
jecxz
push
in
orb
inc
ljmp
enter
mov
cmp
cmp
push
or
push
xor
mov
xor
fs
xchg
add
xchg
jecxz
sub
loopne
and
mov
add
mov
cmp
cwtl
pop
add
cmp
clc
lcall
or
daa
sbb
add
rcr
or
lea
and
mov
cli
and
ss
sbb
clc
cli
sbb
cli
and
repnz
lock
cli
rcrl
stos
pop
bnd
cli
sbb
xor
sbb
cli
stc
xchg
bnd
push
dec
fsubs
adc
mov
jae
adc
sar
sbb
aam
clc
aam
aam
and
rcll
enter
cli
mov
add
cli
shlb
pusha
mov
vpshufd
stc
xor
xchg
arpl
fildll
sbb
cli
cli
cmpb
xchg
pushf
movsl
cmp
lds
mov
nop
in
and
daa
jns
push
mov
cli
adc
cli
xchg
add
int3
addb
test
enter
fs
sbb
nop
iret
mov
cmp
cld
decl
xchg
outsb
or
or
push
push
cltd
in
pushf
std
pop
test
push
es
inc
orb
adc
or
les
xchg
adc
mov
sbb
add
inc
pop
mov
pop
mov
add
loop
outsb
clc
and
sbb
es
lock
lock
and
mov
mov
cmp
outsl
cmp
andb
xorb
lods
and
rclb
ror
enter
fs
out
pusha
leave
push
or
mov
lcall
dec
sub
inc
lods
mov
stc
jne
and
xchg
xchg
pushf
or
pop
jb
fs
nop
mov
and
and
pusha
xchg
dec
xchg
and
fnstcw
popf
adc
sbb
and
inc
and
pusha
and
in
daa
add
jo
popf
and
shlb
pop
dec
cmp
inc
pop
andb
dec
push
leave
and
and
jb
and
in
push
dec
in
cmp
mov
je
sbb
lret
or
test
and
xchg
xchg
and
push
std
and
and
movsb
sub
and
sub
es
std
dec
xchg
jb
dec
jne
and
and
xchg
sbb
inc
and
and
in
push
leave
shlb
xchg
cmp
and
and
andb
mov
mov
and
jb
and
and
and
inc
es
sub
xchg
es
in
sbb
inc
mov
adc
popf
adc
xchg
les
sub
and
and
loopne
jbe
and
sub
lea
lods
lds
mov
mov
in
or
loopne
inc
and
and
and
and
xchg
sbb
loopne
loopne
fs
push
and
inc
test
and
inc
es
pop
xchg
pusha
dec
sbb
es
daa
pusha
es
inc
jb
daa
add
in
mov
inc
add
dec
xchg
mov
dec
and
and
es
dec
push
leave
and
and
test
out
and
xchg
inc
jb
and
in
sbb
pusha
and
out
daa
lock
sbb
nop
dec
xchg
mov
test
and
pop
and
fs
pusha
notb
inc
rolb
repz
add
shll
in
fs
pop
je
bound
sub
jecxz
call
mov
inc
mov
xor
imul
jg
pop
sti
imul
push
bound
xor
push
fisubrl
cs
dec
outsb
xor
jbe
inc
push
xlat
or
jbe
aaa
xor
push
push
pop
xor
push
xor
div
cmc
or
aaa
push
dec
pop
js
cmp
xor
nop
inc
push
cmp
nop
inc
push
cmp
cs
in
push
dec
xchg
daa
push
dec
mov
push
dec
int
ret
outsb
mov
add
pop
sbb
cmp
lahf
xor
in
in
add
insb
jo
leave
leave
leave
je
jl
leave
leave
leave
leave
mov
leave
cwtl
pushf
mov
into
test
add
jp
test
xchg
push
pop
adc
or
pusha
loope
push
add
rolb
sub
andb
add
dec
sbb
negb
sub
mov
hlt
fisttps
mov
movl
xor
das
dec
inc
out
add
inc
mov
adc
add
xchg
jbe
xor
cli
lock
and
cmp
push
rclb
int3
enter
jl
dec
add
insb
bswap
add
nop
out
iret
inc
pop
int3
sbb
int3
pop
jb
pop
jo
shlb
and
rcr
or
jns
pop
enter
daa
pop
repnz
in
pop
or
aam
dec
sbb
mov
and
popf
cmp
xorb
and
push
rcrl
push
or
repnz
mov
sub
and
shlb
mov
lock
pusha
cs
add
loopne
test
xchg
xchg
dec
std
mov
mov
pushl
out
and
and
or
sarb
loopne
jne
ret
shlb
shrl
es
adc
and
adc
pop
fimuls
stos
repnz
leave
lods
sti
aam
mov
lret
and
mov
or
mov
or
sbb
or
mov
sbb
into
xchg
loopne
cmp
enter
sbb
push
sbb
and
dec
adc
sub
xchg
pushf
in
add
subb
mov
sub
or
aad
int3
cmpsb
mov
cmpsl
adc
sbb
jle
int3
aam
inc
lcall
ds
enter
sahf
add
nop
enter
xchg
shll
sub
leave
dec
dec
jb
loopne
add
pusha
leave
and
sub
xor
aad
rcrb
add
adc
adc
inc
add
sbb
stos
mov
pop
mov
sub
mov
xchg
xchg
pushf
and
adc
fsubp
dec
push
cltd
rol
cmp
sbb
in
add
mov
pop
nop
mov
jbe
sbb
arpl
loopne
and
xor
jb
shlb
in
push
outsl
pop
sbb
pusha
sbbb
stc
add
imul
dec
mov
fsubr
jecxz
push
ret
sbb
dec
pusha
mov
xchg
or
js
addl
pop
pop
mov
mov
xchg
xchg
mov
pusha
and
or
pop
repnz
and
fadd
mov
mov
out
js
pop
cmp
add
push
outsb
adc
je
dec
add
mov
mov
popl
mov
inc
aaa
push
adc
sbb
add
cld
cld
push
rolb
clc
push
sbb
pop
pop
adc
lret
lea
fimull
addb
loopne
mov
mov
mov
inc
sub
xchg
adc
mov
xchg
dec
adc
mov
jb
xchg
add
add
dec
jnp
inc
sbb
in
lea
mov
add
sbb
loopne
rolb
push
push
add
add
pusha
mov
fcomp
in
jge
jo
add
adc
push
jb
mov
fwait
test
push
add
pushf
bound
int
and
fisubl
and
pusha
test
lds
test
dec
add
and
out
push
aam
rclb
int3
int3
mov
aam
xchg
cld
mov
xchg
mov
add
lret
cmp
jmp
sub
adc
rcrb
adc
lds
scas
pushf
nop
ss
cmp
mov
int3
aas
imul
add
jns
and
andl
and
cmp
and
ret
call
mov
push
inc
sahf
mov
add
pop
iret
dec
xchg
popf
popa
adc
xchg
aaa
popf
and
cltd
in
andb
or
pop
test
pop
mov
xchg
test
and
add
and
leave
sub
add
and
sub
dec
cmp
into
int3
push
lea
and
inc
add
leave
dec
loope
and
in
loopne
subb
imul
xor
cltd
movsb
jb
push
dec
push
pop
mov
push
imul
js
in
or
sub
and
mov
call
mov
leave
sub
sub
push
jns
pop
pop
in
and
shrb
push
and
add
or
and
xchg
pop
push
in
xor
push
and
inc
jb
sub
loopne
leave
and
sub
pusha
add
xor
loopne
sub
pop
xchg
clc
sbb
cld
sbb
xchg
adc
jae
mov
cmp
pusha
sub
inc
jb
push
sub
cs
enter
int3
or
rclb
aam
mov
andb
push
mov
xchg
and
mov
dec
and
xchg
dec
sub
dec
movsb
add
xchg
bswap
mov
adc
and
sub
leave
and
and
rclb
out
pusha
test
gs
cs
test
enter
js
roll
dec
shll
sbb
andb
and
and
and
andb
test
dec
push
and
or
pop
sbb
xor
jb
nop
pop
pop
pop
pop
rclb
dec
pop
test
cmp
and
and
or
and
mov
loope
and
sbb
sub
dec
sub
sub
leave
xchg
sbb
sub
xor
push
and
ljmp
pusha
and
adc
shl
roll
push
std
or
sub
and
xor
repz
std
test
and
add
and
shl
xchg
gs
and
pusha
inc
dec
pop
and
pop
enter
enter
add
int3
int3
sbb
xchg
movsb
mov
nop
and
leave
mov
and
in
dec
push
and
sbb
daa
loope
mov
xchg
cwtl
gs
add
and
sub
loopne
and
dec
mov
dec
pusha
orb
inc
loope
dec
dec
jb
push
mov
in
add
add
insb
pusha
leave
and
insb
lods
xor
and
and
and
and
in
push
and
pusha
rcrb
pop
or
xchg
push
cs
xor
sub
gs
cmp
hlt
mov
dec
fldenv
and
push
or
jmp
shll
and
and
hlt
cmp
pusha
inc
jb
push
and
and
das
or
xchg
gs
xor
add
cmp
and
cld
cld
cld
cld
dec
push
leave
test
pusha
mov
mov
sub
orb
mov
nop
dec
xchg
add
cwtl
daa
inc
dec
push
leave
and
mov
movsl
mov
add
xchg
dec
mov
inc
adcl
add
movsb
pushf
jo
and
and
mov
push
and
jmp
and
andb
and
in
and
shrb
shlb
lea
nop
lret
sbbb
inc
dec
sbb
and
imul
sbb
lea
lret
cld
cld
mov
stos
and
leave
add
xchg
pusha
pusha
inc
jb
push
and
es
dec
movsl
add
cld
cld
cld
xchg
push
cs
movsb
jb
and
cld
cld
jbe
jns
sbb
sbb
sbb
xchg
and
jb
push
and
and
leave
and
and
shr
xchg
or
aaa
sti
dec
sub
push
sti
sti
sti
jb
and
sti
inc
xor
dec
in
adc
sbb
mov
sbb
mov
in
mov
and
pusha
addb
xchg
xchg
out
lret
xchg
nop
and
and
pop
mov
sbb
inc
pusha
sbb
lea
push
sub
and
and
nop
sbb
shlb
add
cmp
and
andb
and
and
dec
mov
sub
and
mov
dec
push
daa
loopne
and
and
pusha
and
push
sub
and
leave
and
and
inc
and
nop
cmovle
mov
adc
sbb
pop
sbb
pusha
add
sbb
negl
pushl
or
and
in
and
andb
push
leave
and
and
sbb
and
and
sub
pusha
sbb
aam
in
rcrb
cli
add
jns
int3
sbb
cmp
sbb
nop
sbb
pusha
and
and
and
and
leave
sub
nop
sbb
inc
and
xchg
sub
and
and
aam
and
mov
test
push
in
jl
bound
seta
pop
add
je
jo
add
nop
insb
insb
push
jl
sbb
mov
cli
dec
pop
pop
nop
pop
dec
clc
rcrl
jl
in
inc
cli
daa
xchg
push
push
in
adcb
dec
and
dec
inc
and
adc
ret
and
cmp
nop
dec
push
in
cmp
cmpb
sbbb
sub
jns
and
sub
and
and
and
push
add
outsl
adc
repnz
mov
adc
nop
push
iret
or
and
xchg
cmp
cli
stc
add
inc
in
add
adcl
arpl
mov
sbbl
sbb
or
xchg
and
stc
stc
and
lcall
jo
pop
or
cld
stc
push
loopne
addr16
add
push
orl
ficoms
dec
sarb
push
add
loopne
insb
dec
mov
xchg
out
pop
lret
les
xor
sarb
push
stc
or
and
int3
add
pop
inc
fbstp
mov
imul
std
test
jecxz
outsb
and
pop
jb
nop
adcb
pushf
cwtl
gs
add
or
nop
nop
mov
jo
xchg
mov
and
mov
fstp
add
call
mov
test
and
inc
dec
sbb
xor
xchg
pop
jo
and
insb
test
xor
adc
sahf
je
jns
pusha
sbb
stc
fwait
nop
cmovnp
push
inc
or
sub
stc
sub
stc
stc
roll
xchg
pusha
shrl
pusha
pop
aad
mov
enter
in
and
fldl
pop
mov
hlt
xchg
jge
and
sub
add
outsl
leave
stc
dec
sbb
stc
es
sub
xor
test
mov
dec
pushf
movb
fwait
inc
or
adc
outsb
mov
or
or
dec
aam
mov
xchg
nop
add
fwait
enter
jb
add
add
clc
mov
mov
clc
sbb
je
pop
enter
or
cmc
mov
mov
lock
mov
cs
sub
popf
dec
lods
add
or
roll
cwtl
lock
lock
rorl
js
in
mov
xchg
or
add
push
sbb
test
call
lahf
cmpsl
mov
clc
loopne
or
enter
push
sub
xchg
sbb
and
cmpsb
std
popa
or
pop
pop
aam
or
jo
mov
fs
mov
and
sub
mov
int3
or
ret
adc
mov
and
add
xor
les
sub
xor
cmp
sub
mov
mov
enter
mov
in
xor
lods
sub
movsb
test
mov
xchg
sub
or
pushf
mov
add
xchg
or
and
inc
pop
and
push
and
nop
xchg
sub
xchg
cwtl
nop
dec
xchg
or
xchg
mov
mov
dec
test
xchg
sub
shlb
js
js
fs
ds
je
nop
je
and
cmpsl
js
jo
or
ret
adc
sub
add
xor
push
subb
push
sub
cmp
pop
test
dec
leave
nop
pop
and
dec
push
dec
push
add
sbb
push
dec
dec
andb
dec
add
xchg
sub
shlb
inc
sub
xchg
and
enter
in
mov
cmp
xor
dec
dec
xor
xor
pop
push
in
sub
add
add
xor
xchg
mov
push
sub
xchg
adc
nop
and
adc
cwtl
dec
test
mov
and
pop
das
dec
pause
out
clc
or
xor
mov
and
ds
leave
cmp
daa
add
cmp
push
dec
mov
cmp
cld
add
or
pushf
in
add
pop
test
add
dec
pusha
or
sub
or
cs
mov
xchg
inc
bound
pop
pushf
mov
scas
add
jge
stos
inc
add
cmp
add
dec
mov
dec
imul
test
mov
mov
add
subl
xor
sbb
js
mov
xlat
and
xor
in
sahf
inc
mov
ficomps
dec
add
rcll
enter
mov
mov
outsl
add
mov
xor
rorb
jl
cmp
jg
jecxz
dec
jecxz
test
ja
pop
lcall
je
loope
mov
loope
jb
pusha
mov
adc
mov
sahf
push
mov
cs
lea
cwtl
push
or
pushf
and
and
xchg
xchg
pop
and
rol
xor
pushf
and
orb
and
and
xor
mov
jmp
add
or
scas
mov
loopne
mov
adc
test
lret
mov
and
sub
push
mov
adc
ss
mov
stos
or
pop
and
pop
ret
and
and
mov
cmp
popa
sbb
and
fmull
jo
mov
mov
cmp
mov
pop
andl
sbb
sbbb
cmp
push
jb
cmp
add
add
jb
scas
pop
add
pusha
and
jns
sbb
and
mov
adc
test
xor
pop
mov
xor
and
popl
and
loopne
cs
push
cmp
or
adc
and
mov
adc
or
sub
lret
roll
add
pushf
push
push
inc
shll
pusha
sbb
and
push
adc
add
push
leave
and
and
and
in
cmp
fmull
shll
jo
ret
sub
mov
pusha
je
sbb
xor
mov
push
mov
lret
orb
mov
nop
pushf
pushf
add
and
xchg
inc
jb
and
and
xchg
push
and
adcb
and
scas
in
sub
push
in
insb
cmpl
js
jl
mov
nop
stos
push
push
and
inc
lods
orl
pop
xchg
xor
xchg
daa
mov
add
pop
xlat
test
jp
xchg
sbb
xchg
xchg
xchg
xor
mov
mov
xchg
into
mov
pop
adc
mov
xrstors
test
xor
sbb
xor
rcll
stos
test
sbb
sub
and
push
je
and
rcl
call
inc
les
call
sbb
pop
sub
push
add
and
movsl
inc
dec
xchg
or
sbb
sub
sbb
jb
or
sbb
adc
pop
mov
inc
adc
push
xchg
inc
jb
and
pop
les
cmp
jb
cmpsb
inc
loopne
add
test
mov
pop
and
jne
pop
hlt
sub
push
jnp
sbb
stos
adc
dec
pop
rorb
dec
mov
jecxz
std
xchg
lcall
out
dec
aam
icebp
dec
loopne
jno
dec
mov
jnp
mov
xchg
enter
sbbb
and
xchg
or
cwtl
pushf
mov
movsb
test
mov
mov
ret
nop
clc
or
and
aaa
sbb
mov
in
dec
jnp
iret
mov
in
and
pusha
dec
add
imul
insb
sbb
jp
ds
out
out
divl
push
sbb
inc
add
inc
aas
out
leave
ja
push
js
clc
adc
mov
out
movsb
bound
jo
inc
add
pop
mov
lock
inc
add
dec
repnz
cwtl
lods
xchg
pop
cld
add
clc
push
cli
inc
es
mov
dec
shrl
inc
int
cmp
leave
andb
cwtl
jl,pt
mov
int
aam
inc
rclb
cmovae
add
jl
fmull
sahf
sbb
xor
into
lock
aad
cwtl
testb
or
lods
pop
inc
out
inc
jbe
adc
and
cwtl
add
fsubr
mov
inc
pop
adc
xor
les
int
and
push
or
outsl
dec
mov
ds
pusha
cs
inc
scas
jo
stc
mov
ds
imul
push
in
fcomps
dec
cmp
cmp
fldl
inc
xchg
adc
fsubs
inc
out
mov
mov
push
inc
dec
das
push
or
jl
inc
adc
sub
je
cwtl
pop
push
jge
add
lahf
cld
es
push
roll
subl
add
addl
inc
add
or
add
mov
lret
mov
dec
rolb
pop
inc
pusha
stc
movl
ficoml
call
jnp
data16
xlat
adc
call
sub
pop
mov
mov
adc
jne
iret
jbe
or
es
js
lods
outsb
cs
out
scas
mov
dec
mov
popa
divps
es
adc
dec
mov
out
sti
jns
mov
cmpb
xor
shrl
fadds
call
jl
repz
pop
and
call
lea
xchg
insb
xchg
testb
sub
fsubr
or
into
pushf
nop
das
xchg
lock
jb
mov
std
sti
or
or
mov
or
mov
mov
test
push
inc
notl
call
in
xchg
fstl
in
xor
sbb
mov
rcll
xchg
sbb
mov
jb
aas
xchg
lea
in
push
inc
movsl
pusha
lods
out
test
loopew
es
bound
clc
call
and
xchg
fs
imulb
jnp
push
mov
aam
pop
add
ja
std
cmp
icebp
mov
sub
inc
cmp
pop
sar
aaa
add
mov
addb
sbb
lock
into
and
mov
cmp
loopne
mov
mov
sti
mov
mov
or
sahf
in
lahf
mov
call
dec
push
lahf
pop
test
dec
push
or
out
mov
and
sbb
lcall
xor
push
inc
xor
cmp
pop
jle
push
jns
xchg
and
out
sbb
pushf
or
loopne
dec
and
scas
jb
cwtl
inc
mov
cmp
mov
cs
je
stc
push
mov
sub
into
ds
pop
or
adc
mov
lret
push
insb
in
in
or
jle
je
xor
adc
mov
test
lret
movsb
xchg
and
sub
daa
xchg
xchg
js
imul
dec
jo
dec
xor
pushf
add
dec
loopne
call
mov
push
xchg
pop
jmp
or
testl
lcall
mull
jb
fs
aad
pop
test
xor
mov
in
int3
pushf
push
movsl
xchg
idivl
lock
daa
sti
adc
out
push
adc
and
cmp
push
push
into
movsl
mov
test
add
mov
mov
lret
sub
adc
inc
pop
das
or
ja
aad
mov
pop
jnp
test
sbb
adc
jb
inc
jecxz
jns
cmp
dec
ficoms
adc
push
jl
cmp
hlt
loope
cmp
pop
xchg
dec
repz
sbb
cmp
iret
push
and
mov
test
inc
or
fimuls
pop
xor
fsts
pop
pusha
cs
test
cmp
pop
push
aam
cmc
xor
sahf
rcrl
clc
out
sbb
dec
enter
fnstenv
xchg
pusha
rcll
or
lds
adc
xchg
pop
xchg
fsubrs
mov
cmp
or
jp
addr16
cld
andb
inc
or
jp
scas
sub
cwtl
push
push
or
fsubl
mov
mov
mov
into
notb
xor
push
push
add
cmp
add
fidivl
add
mov
xor
pop
dec
es
pusha
ds
pop
fs
pop
adc
aas
hlt
push
sbb
std
cld
pop
fmulp
adc
mov
add
push
lret
fcoms
mov
call
cmp
movl
push
mov
sbb
mov
and
jl
int3
scas
adc
dec
adc
mov
fbld
jnp
cmp
sbb
sbb
dec
subl
dec
mov
inc
lahf
jno
push
call
mov
mov
and
aam
dec
sub
jge
and
dec
jne
stc
into
push
scas
movsb
xchg
mov
out
cltd
imul
adc
out
addl
mov
xchg
jb
addb
testl
pop
dec
push
jecxz
xor
mov
shlb
lea
mov
and
dec
inc
test
test
sarl
mov
push
and
sbb
repnz
inc
push
push
inc
pop
or
ja
adc
in
jo
add
cwtl
pop
adc
xor
xor
xchg
repnz
cmp
testl
push
idiv
repz
cmc
adc
or
repz
cmp
inc
outsb
push
mov
es
mov
loope
cwtl
fimuls
loopne
outsl
lock
ret
mov
movsb
fs
pop
push
push
add
inc
pop
scas
xchg
fildl
fsubs
dec
push
outsb
inc
or
outsb
jbe
lds
fcomp
push
pop
adc
lahf
add
pop
cwtl
mov
rolb
inc
mov
mov
adc
adc
sbb
in
test
sub
xchg
and
enter
cmp
inc
aam
mov
push
push
in
pop
aas
inc
jb
pop
pusha
push
jo
or
jb
mov
cwtl
mov
mov
shlb
pop
and
lock
mov
inc
add
adc
mov
cs
mov
inc
pusha
and
mov
das
xchg
mov
adc
inc
jb
dec
inc
jo
push
jmp
add
test
shlb
and
and
xchg
mov
pusha
add
loopne
push
pop
leave
inc
jb
pop
rolb
push
or
or
sbb
data16
xchg
sbb
and
and
inc
ss
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
hlt
pop
xchg
popa
add
es
rorb
pop
and
popa
je
xor
and
and
mov
add
xor
dec
ljmp
push
sbb
pop
repz
mov
dec
lcall
xlat
cmp
dec
jnp
test
sbb
ret
aas
sahf
cmp
std
ja
pop
es
js
inc
addb
nop
repz
repz
mov
repz
ror
fsub
call
lock
add
adc
out
sbb
sub
cmp
jns
out
dec
push
pop
pusha
sahf
out
sahf
push
nop
xor
cwtl
mov
xchg
mov
xchg
mov
xchg
daa
daa
pop
js
leave
enter
sbbl
or
sarb
jnp
xchg
sarb
imul
adc
bswap
adc
ss
sahf
ffreep
arpl
push
adc
adc
adc
dec
gs
aas
movb
push
and
iret
repz
dec
pop
push
repz
ds
loopne
add
and
fnstcw
xor
call
mov
pop
adc
sub
push
add
push
addb
push
inc
sbb
and
sub
inc
and
mov
fisubrs
push
xor
inc
adc
push
lds
es
imul
inc
inc
out
mov
adc
and
push
sbb
fidivrl
mov
pop
xor
pop
pushf
jnp
jnp
add
push
call
jg
cmp
push
mov
incl
les
fdivrs
push
call
out
clc
cmpsb
lret
adc
mov
cmp
dec
push
add
or
out
sahf
js
nop
push
adc
sahf
out
mov
imul
and
sbb
jae
sub
sbb
push
adc
cmp
repz
sbb
rolb
adc
sahf
cmpsl
stc
cmp
sbb
pop
sub
jns
out
inc
push
push
sbb
out
jl
fistps
nop
push
add
push
adc
loop
cmp
loopne
hlt
or
repz
fwait
cmpsl
mov
add
cmp
dec
rolb
jns
out
push
sbbb
xor
dec
mov
out
sahf
mov
mov
mov
jns
hlt
out
call
sub
loopne
loopne
es
add
and
outsb
jg
add
out
mov
or
pop
punpckhdq
pop
cmp
shll
add
fsubrs
or
adcb
sbb
mov
ret
or
ret
andl
sbb
inc
mov
pop
jb
popf
add
ja
inc
ret
cli
cli
xchg
shl
cli
in
lock
add
int
sar
cmc
out
shrl
pushl
repnz
stc
mov
cmc
cmc
pusha
push
cli
jmp
add
ljmp
add
jnp
outsb
out
cli
add
cmc
mov
jns
scas
loopne
adc
push
out
aad
and
lods
add
xchg
mov
pop
in
add
xchg
mov
pop
repz
test
cmc
cli
add
add
push
cmp
enter
inc
mov
clc
jg
aad
push
adc
push
shlb
fisubrs
ds
push
mov
xchg
aad
dec
int
pop
add
cli
cmpb
in
add
jg
pop
inc
mov
arpl
fcoml
movsl
sub
out
loopne
push
shrb
outsb
hlt
movsb
pusha
ljmp
add
iret
aas
dec
aaa
push
cmovne
mov
and
in
rclb
inc
adc
cld
mov
incb
daa
fimuls
jmp
mov
out
call
iret
add
cli
rolb
mov
mov
and
mov
push
lods
ljmp
add
jg
cld
push
iret
aas
stos
cld
nop
out
nop
add
aam
push
mov
inc
fidivrl
xchg
movsl
and
pop
jl
je
imul
pushf
mov
mov
add
imul
dec
adc
add
pop
cmp
jno
mov
ret
aas
mov
push
imul
push
scas
jmp
push
xor
setno
jns
jg
sar
lcall
icebp
xor
mov
push
scas
out
cs
push
mov
mov
push
lods
fsub
add
into
out
jp
iret
mov
in
add
shrl
dec
rorl
push
inc
loopne
fmulp
idivb
jle
fcmovnb
cltd
fwait
sub
fildl
loope
out
int3
dec
add
jo
into
roll
mov
pop
sahf
mov
lock
stc
lcall
sbb
push
nop
cmp
cwtl
sahf
mov
add
push
ds
cmp
push
cltd
xor
nop
push
out
test
out
jnp
mov
rorb
adc
jo
imul
sub
push
xor
dec
shr
cld
xchg
jo
add
fstl
clc
mov
mov
add
lret
cld
fidivl
add
frstor
mov
pop
xchg
mov
ror
sbb
fiadds
sub
push
mov
jnp
push
roll
cmpsb
push
popf
ds
jmp
mov
inc
cmpb
pop
mov
jo
hlt
push
cmc
add
fbld
mov
adcl
mov
dec
cmp
pusha
iret
fsubrl
dec
dec
push
faddl
sahf
push
test
add
fists
fbstp
xlat
dec
out
ficoms
pop
push
push
mov
cmp
and
inc
jg
add
add
mov
sahf
out
loopne
cld
or
sbb
out
iret
sub
dec
push
pop
xor
repz
repz
inc
dec
pop
pusha
push
jo
adcb
mov
sub
pop
add
mov
daa
cmp
add
leave
sti
pop
incb
std
add
jo
neg
push
inc
push
out
nop
sbb
sub
adc
fbstp
xchg
fiaddl
adc
daa
and
fsubrl
add
jb,pn
pusha
dec
add
mov
das
pop
add
dec
aaa
aaa
add
movsl
imull
iret
or
or
pop
add
push
jns
add
or
or
lsl
or
push
std
sbb
sub
out
sahf
out
stc
dec
clc
pusha
sahf
out
sahf
divl
cmc
pushf
jns
out
hlt
mov
shl
jns
out
icebp
call
xor
out
adc
iret
repz
dec
jmp
ljmp
add
xchg
jne
or
xchg
ret
adc
add
aaa
test
sarb
jp
filds
clc
mov
or
das
cltd
cli
add
or
or
or
push
xor
sahf
out
inc
push
fs
out
sahf
out
lods
mov
jl
in
add
sbb
xor
iret
repz
pop
push
into
rep
mov
imul
pop
mov
xlat
aaa
pop
aad
adc
popa
ss
add
mov
jae
das
fdivl
pop
push
xchg
mov
mov
pop
int
xchg
sahf
out
push
stc
mov
sahf
out
cld
std
sahf
out
sahf
add
addb
xchg
jg
loopne
add
test
shl
rolw
iret
repz
push
push
mov
mov
enter
cmc
mov
cmpb
arpl
dec
push
dec
add
insb
add
sbb
cmpsl
es
jb
inc
jge
and
sti
mov
shrb
outsb
gs
dec
ljmp
or
lret
push
mov
mov
fists
out
adc
out
or
or
sahf
adc
pop
sbb
and
cwtl
nop
jp
cmp
repnz
cmpsb
imul
rolb
add
pop
add
add
fiadds
xlat
sbb
jns
out
xor
add
addb
push
cmp
repz
or
sbb
push
add
repz
fistl
or
xchg
xchg
xchg
pop
or
or
or
or
je
add
movups
jnp
jae
push
pop
das
jo
jl
leave
repz
or
jmp
leave
and
cmp
cmp
push
aas
pop
dec
sahf
ja
sbb
in
dec
dec
cmp
push
adc
in
in
sub
in
dec
lock
cmp
adc
jecxz
sub
cmp
cmp
or
fs
add
cmp
cmp
jae
jb
sbb
push
push
adc
cmp
aas
jb
jb
pop
ljmp
jb
jb
or
dec
clc
jb
jb
add
mov
and
les
jb
or
movsb
jb
jb
add
jb
pop
pop
sbb
jp
aam
jb
jb
push
mov
jb
jb
mov
iret
jae
jb
push
push
rolb
daa
daa
daa
xor
int3
daa
daa
daa
daa
pcmpgtd
lods
daa
daa
daa
daa
push
xchg
daa
daa
daa
daa
or
pushf
daa
daa
daa
daa
arpl
fmull
outsb
daa
sbb
outsb
cs
pop
push
aas
mov
cmp
call
and
in
pushl
ret
dec
cs
and
dec
addl
pop
sbb
dec
cmp
imul
mov
mov
in
dec
repnz
adc
das
incb
add
mov
gs
stos
add
or
ljmp
lcall
or
mov
or
cmp
mov
nop
xchg
xchg
jae
arpl
cmp
cmp
cmpsb
add
inc
out
cmp
jnp
xchg
xchg
or
imul
xchg
xchg
xchg
mov
mov
cmp
cs
in
aaa
into
addr16
dec
dec
dec
daa
scas
pop
xchg
inc
dec
dec
inc
out
pop
dec
cs
pop
sahf
jg
leave
in
inc
dec
fisubrs
das
daa
daa
mov
mov
dec
and
es
mov
xchg
and
mov
cltd
dec
es
fs
fnstcw
stc
lds
in
cltd
dec
es
aad
xchg
mov
cltd
dec
es
int
in
xchg
mov
cltd
dec
es
cltd
ret
mov
jecxz
rcll
repz
and
and
xor
and
fstpt
sti
dec
and
leave
cmpsl
out
leave
inc
xor
and
xor
and
leave
lahf
fistpll
incl
repnz
fistps
adc
dec
push
jns
push
add
xchg
aaa
stos
cmp
inc
jg
push
pop
add
and
cmp
in
or
push
or
pusha
incl
orl
pop
push
and
orl
enter
or
or
aad
xchg
fldenv
and
pop
jo
jb
or
push
cmp
xor
test
and
jl
addb
into
jp
add
rclb
xor
rcl
and
dec
out
jae
popf
lods
mov
sub
pop
and
or
insb
sbb
inc
lea
sbb
insb
mov
xor
gs
daa
xchg
pop
jo
andb
test
pop
in
enter
add
add
jmp
add
inc
pop
or
and
das
xor
outsl
pusha
or
lret
inc
dec
dec
add
jae
subl
and
xor
in
fdivl
mov
mov
add
clts
pop
aas
sahf
out
iret
jg
inc
pushl
out
pushl
sbb
and
cli
loop
dec
pop
rolb
or
xchg
add
inc
iret
mov
dec
or
fsubp
jns
sub
sub
add
cmp
out
and
cmp
dec
push
mov
imul
clc
sarl
int
mov
and
adcl
mov
jmp
es
inc
lcall
movsb
data16
sbb
mov
lcall
push
push
xchg
rclb
nop
adc
inc
call
jl
dec
std
xor
or
dec
push
push
imul
or
decb
test
cli
push
xchg
popf
xchg
lret
loopne
pusha
pusha
and
fdivl
mov
lods
test
mov
push
sbb
je
mov
sub
sahf
movsb
scas
adc
add
xchg
icebp
aad
jne
popa
and
fdivl
push
pop
push
inc
in
nop
fwait
mov
popa
sub
cmp
cmpsl
xor
mov
and
loope
sbb
sahf
adc
imul
jne
and
lods
fnsave
adc
mov
cmp
pusha
idivb
inc
lock
inc
inc
pop
imul
shll
sbb
push
sbb
lock
xchg
add
mov
test
ja
stos
adc
mov
push
out
nop
fsubl
sub
mov
fidivs
inc
push
ja
pusha
das
fisubrl
sub
lea
mov
rcll
inc
inc
sar
das
int
or
dec
iret
mov
push
dec
jg
subl
stc
pop
mov
adc
add
ja
jne
inc
adc
pusha
outsb
or
or
insl
movsb
shll
push
lds
cs
inc
sub
sbb
cmp
pushf
jns
movsl
add
fldenv
xchg
in
mov
add
sbb
jecxz
and
mov
test
cs
xor
lret
in
ss
jb
je
daa
enter
call
mov
xor
gs
fs
cmp
in
in
lcall
adc
sti
call
cltd
test
movsl
jge
insb
pop
in
imul
jmp
and
inc
mov
out
xor
jl
xor
fsubr
adc
ret
cmp
cwtl
mov
add
dec
insw
gs
or
push
aam
sub
cmp
in
jmp
sub
xor
adc
insl
popa
jb
push
mov
sbb
sarb
enter
pop
cmp
pop
and
mov
jmp
adc
push
das
mov
js
mov
repz
pop
sub
push
sbb
repz
sub
dec
pop
fs
repz
jl
xchg
mov
lods
mov
pushl
negb
outsl
imul
in
jecxz
ret
and
mov
mov
test
das
add
jns
sub
pop
je
out
sahf
out
movsb
mov
aam
repz
in
add
and
pop
cmp
repz
mov
iret
repz
add
adc
jns
out
dec
pusha
je
lahf
out
sahf
mov
or
out
sahf
ja
push
cmp
jo
out
sahf
test
cmp
repz
or
cmp
rep
adcb
iret
shl
lock
sbb
dec
pop
je
test
sahf
out
mov
fwait
push
iret
repz
sub
dec
push
repz
mov
aam
jns
cmpsl
stc
add
adc
push
out
sahf
out
js
test
iret
sarl
in
add
iret
repz
push
ds
repz
sbb
jns
out
dec
fs
lahf
out
sahf
test
int3
loopne
add
out
sahf
ja
push
xor
fs
out
sahf
nop
lods
fdiv
add
cmp
repz
and
push
fs
repz
mov
jl
fsubr
pop
or
cmp
repz
insb
mov
shr
add
sahf
xor
push
push
out
movsb
mov
cmp
repz
sbb
pusha
iret
repz
jo
mov
mov
movsb
movb
inc
iret
repz
push
adcb
in
adc
out
fs
mov
repz
out
hlt
adc
xor
iret
repz
pusha
test
cmp
add
push
iret
repz
insb
jl
test
aam
cmp
cmp
clc
cmpsl
pop
test
and
sahf
out
cmp
mov
jns
out
test
shl
iret
repz
cld
adc
cmp
repz
mov
iret
repz
cld
adc
iret
repz
push
insb
andb
shl
hlt
add
sbb
dec
pusha
jo
out
sahf
mov
lods
out
sahf
ja
push
xor
sahf
out
sahf
test
iret
sarl
and
dec
pusha
repz
repz
cwtl
test
out
ds
aam
add
jns
inc
push
sbbb
fdiv
or
repz
mov
repz
cwtl
movsb
rcr
add
out
lcall
jns
out
test
cmp
out
or
repz
adcb
cmp
lock
mov
sub
repz
inc
pop
je
cwtl
lods
cmp
repz
fdiv
mov
mov
iret
repz
cmp
xchg
test
iret
repz
fsubr
add
adc
sahf
out
sub
fs
jns
out
cwtl
lods
rcr
sarl
cld
sbb
sub
push
cmp
repz
je
xchg
movsb
stc
cmp
repz
fdiv
add
out
sahf
cmpsl
sbb
pop
jo
out
sahf
adcb
int
jns
hlt
or
iret
repz
js
iret
repz
test
int3
loopne
add
cmp
mov
cmp
iret
repz
insb
adcb
repz
lock
out
cmp
insb
adcb
mov
iret
repz
and
dec
pusha
cmp
repz
sbbb
repz
in
or
out
inc
push
fs
out
sahf
nop
mov
cmp
repz
adc
sub
dec
repz
repz
jo
nop
test
repz
rcl
hlt
or
sahf
out
sahf
sbb
cmp
jns
out
adcb
out
in
mov
repz
and
inc
push
fs
iret
repz
xchg
movsb
mov
imul
hlt
add
adc
jns
out
cmp
pop
insb
sahf
out
sahf
jl
mov
int
jns
lock
or
repz
repz
fs
repz
test
sahf
cmpsl
stc
cmp
add
sbb
cmp
out
push
fs
pushf
idivl
out
rcl
hlt
shrl
out
ret
cmp
jns
out
js
movsb
mov
repz
fdiv
add
adc
iret
repz
push
insb
test
int3
in
adc
out
sahf
cmpsl
sub
pop
je
lahf
out
sahf
pushf
mov
fsubr
add
out
sahf
ja
push
sub
fs
out
sahf
js
mov
dec
repz
or
sbb
cmp
cmp
repz
pusha
jo
nop
iret
repz
mov
adc
and
push
fs
sahf
out
mov
int
clc
or
and
dec
iret
repz
push
fdiv
mov
leave
mov
repz
push
adcb
aam
cld
or
sub
out
cmp
pusha
mov
rcr
add
iret
repz
sbb
cmp
cmp
repz
xchg
movsb
mov
repz
cmp
jns
out
push
out
sahf
lods
rcl
hlt
add
cmp
repz
sub
push
push
jl
movsb
mov
out
sahf
out
into
cmp
je
int
jns
mov
fdiv
adc
xor
repz
insb
mov
repz
shlb
dec
fs
out
test
call
cmp
sub
jl
mov
out
cmp
lock
and
jns
out
push
push
jns
out
int3
loopne
or
cmpsb
jns
out
push
cmp
fs
sarl
mov
call
repz
and
inc
pop
je
ds
repz
mov
jns
out
sbb
pushf
test
out
sahf
out
int3
fsub
lock
ja
cld
or
mov
out
sahf
out
push
pop
push
orl
push
iret
repz
mov
clc
sahf
out
ds
adc
xor
sahf
out
inc
dec
pop
fs
pop
jae
jl
lahf
and
xor
and
shrl
clc
push
push
jp
mov
and
popa
and
pop
out
out
ja
adc
sahf
adc
loop
inc
push
test
cwtl
mov
sahf
leave
push
push
push
es
mov
sub
sbb
inc
xchg
xor
rolb
push
pop
adc
dec
cmpsl
inc
mov
inc
push
push
sub
push
nop
xor
daa
jno
pop
mov
xchg
sarb
push
insb
push
push
dec
fldcw
ss
into
js
aam
into
and
lock
rolb
xchg
or
into
mov
fcompl
mov
negb
insb
gs
push
or
dec
push
pop
out
mov
dec
orb
negb
push
sub
je
add
push
fcompl
inc
xchg
nop
stc
popf
or
outsl
orl
shrb
mov
pop
sbb
jnp
cmp
clc
ss
xchg
loopne
scas
mov
push
sub
fcomps
dec
out
out
mov
lahf
sbb
mov
loopne
xchg
cmpsb
fmuls
data16
sub
aas
out
aam
dec
sbb
sbb
int
or
inc
pop
rolb
or
fadds
inc
cwtl
es
or
mov
jns
cmp
hlt
jbe
xchg
pushf
out
cmp
adc
mov
in
jl
js
jns
dec
rorb
jo
jns
inc
sub
enter
test
fsubrl
testb
lock
fistpll
add
xchg
mov
adc
call
mov
mov
cmp
jp
lock
dec
out
sbb
out
jo,pt
cmp
adc
push
pop
push
sbb
fs
pop
pop
sub
xor
setle
jns
cmp
sbb
or
push
pusha
pop
adc
les
enter
cmp
inc
mov
push
sahf
rcr
mov
mov
dec
je
inc
movsb
imul
mov
loopne
cmp
mov
cmp
push
into
ds
mov
adc
fdivrl
adc
xchg
out
jns
ja
adc
int3
es
lods
jle
lahf
addb
into
add
jbe
mov
xor
and
jge
ja
es
xorl
movsb
je,pt
inc
test
mov
je
ss
into
push
out
stc
fidivrs
movsb
into
aam
adc
lock
int3
or
jnp
fisubs
inc
mov
loopne
cld
cs
push
ldmxcsr
cmp
insb
insb
or
push
dec
and
addr16
sarl
sbb
add
scas
cmp
testl
pop
jnp
push
push
repz
ds
ss
push
and
inc
mov
mov
in
aad
xor
mov
mov
jo
sahf
sahf
dec
cs
cld
jge
adc
and
push
cmpsl
push
pusha
pushf
push
mov
lock
mov
push
sbb
and
shrl
les
jbe
mov
push
jp
pop
push
negl
fidivrs
call
mov
cld
jle
pop
out
mov
pushf
mov
test
inc
or
call
iret
xor
push
pop
mov
out
jns
lods
mov
cld
or
fiadds
scas
or
idivb
inc
ss
imul
push
pushf
shll
dec
mov
inc
push
sarb
movsb
imull
push
mov
dec
push
pxor
mov
xchg
ds
fidivrs
mov
mov
push
ror
mov
mov
cmp
inc
push
dec
xor
xchg
push
xor
rol
push
mov
sub
push
mov
push
inc
sbb
jmp
fdivl
push
add
out
enter
rcl
test
jo
cmp
jp
xor
enter
loop
incl
mov
push
fs
fucom
mov
outsb
aam
out
shl
mov
sbb
mov
mov
out
xchg
fsubs
jnp
jecxz
jo
es
ds
mov
cmp
push
call
inc
push
jns
mov
into
sub
xor
lds
call
xor
cs
rolb
or
add
adc
insb
mov
aas
push
dec
add
sub
pusha
dec
xchg
add
push
nop
sub
add
nop
push
add
add
addl
pop
add
in
adc
dec
push
add
fimuls
pop
inc
sbb
inc
and
fcomi
mov
and
pop
dec
aaa
push
pop
iret
sub
inc
fwait
inc
add
adc
dec
xchg
push
loop
push
outsb
negl
mov
dec
dec
add
mov
inc
dec
push
inc
cmp
cs
aaa
or
add
lock
dec
inc
xchg
push
add
sbb
bound
push
cmp
cmp
or
push
pop
push
aaa
push
xchg
pusha
neg
or
iret
add
or
dec
mov
dec
push
sahf
idivl
sbb
xchg
or
add
out
idivb
dec
fwait
add
push
sub
add
movsl
addl
sbb
push
push
enter
xor
mov
jge
pop
add
lret
xchg
cmpsb
incl
addb
rolb
lcall
add
or
add
xchg
or
xchg
push
incb
cld
jg
repz
clc
aas
push
pop
jmp
shr
sub
cld
add
pop
or
push
aas
or
in
and
jg
add
xchg
cmp
pop
addb
mov
into
push
or
push
mov
add
add
add
int
push
psubb
addr16
insb
inc
out
push
out
ficompl
ds
out
cmp
add
push
sbb
loopne
lock
sbb
pop
in
popf
dec
mov
aas
pop
cs
pop
add
mov
xchg
negl
lock
xor
pop
std
outsl
push
ss
cmp
mov
add
insb
jl
pushw
fstpt
iret
jbe
jg
sbbb
repnz
inc
add
jo
iret
and
mov
incb
lock
iret
pop
aas
pushl
or
push
add
inc
fdivp
pushf
nopl
es
icebp
cmp
repz
add
nopl
jmp
test
into
push
add
add
iret
or
mov
daa
add
out
ficomps
add
comiss
dec
pop
mov
ja
daa
add
pop
int
repz
std
clc
lock
aas
shlb
stos
xchg
pop
clc
dec
add
push
imul
inc
pop
outsl
clc
popl
and
or
add
mov
add
loopne
pop
sbb
fwait
stos
dec
test
inc
nop
mov
add
push
xor
pop
mov
data16
adc
adc
jbe
pop
aas
nopl
adc
out
add
addr16
ss
cmp
cld
pop
cmp
fsubl
mov
stos
xor
xacquire
and
insb
js
xchg
std
or
jle
or
addr16
cmp
sub
inc
add
inc
subl
popa
push
pusha
xor
sbb
push
dec
inc
cmc
mov
sbb
or
jbe
fnstenv
cmp
lock
push
sbb
stc
int
mov
sbb
or
test
loopne
cmp
pop
and
xor
adc
je
jb
push
sub
sahf
mov
adc
add
and
add
or
add
push
jns
add
mov
imulb
subl
mov
daa
sbb
fnsave
xor
daa
and
fidivrs
lahf
and
daa
and
iret
daa
push
adc
cmp
clc
dec
push
out
int
jae
push
mov
push
outsb
fucom
jae
daa
cmp
daa
xchg
pop
ss
push
sbb
mov
dec
addl
push
mov
ja
mov
daa
clc
push
cmc
sbb
mov
add
mov
lahf
adc
xor
cmp
inc
and
cmpl
xor
and
mov
daa
inc
push
movsl
outsl
jns
fisubs
dec
sub
repz
xor
mov
dec
sub
ret
imul
pop
aas
jns
dec
and
ja
xlat
sahf
push
es
and
push
mov
and
and
cmp
mov
mov
pop
push
mov
data16
cmp
push
outsl
jnp
push
xlat
push
lret
push
sbb
mov
and
xor
mov
push
push
mov
xor
cmp
clc
repz
push
addr16
mov
add
testl
cs
inc
inc
or
mov
aas
push
ljmp
xor
gs
out
daa
inc
aad
push
push
mov
dec
pop
daa
mov
out
in
sub
xchg
sub
add
clc
test
adc
in
fdivs
or
mov
aas
mov
fadds
inc
arpl
lods
add
daa
ds
shll
repnz
xor
arpl
adc
fdivs
sbbl
cmp
inc
mov
subb
out
fs
add
fbld
out
sub
aas
daa
dec
out
fildl
lret
ljmp
insb
xor
jb
daa
dec
add
loope
addr16
xor
in
repz
in
push
mov
test
jl
push
pop
adc
fbstp
cwtl
xorb
inc
inc
cmp
insl
xchg
sbb
or
stos
movsb
push
sbb
jnp
sub
or
daa
xor
repnz
daa
aas
das
insb
jo
fldenv
js
bound
in
cld
ja
cld
push
inc
sub
push
daa
xor
insb
ret
sub
call
fidivs
insb
pop
outsb
data16
inc
push
cltd
mov
shlb
mov
shrl
aas
je
stos
inc
aas
call
inc
js
fsubrs
push
ret
lock
in
fsubs
movsb
pop
xor
push
jns
enter
mov
dec
stos
xor
ja
dec
inc
lds
test
sahf
sbb
js
cmove
popf
jg
int3
or
sub
adc
cltd
pop
cmp
sbb
dec
sbb
sbb
andl
ja
cmp
and
clc
or
jbe
mov
sbb
xchg
fcoms
daa
in
mov
pop
dec
xor
dec
xor
dec
daa
jge
mov
clc
dec
push
dec
sarb
dec
jl
inc
jno
xor
dec
rorl
ja
aas
sbb
lcall
incl
cmp
cltd
cltd
push
mov
mov
ret
cltd
add
inc
push
leave
and
xor
cmpsb
and
repz
and
mov
xor
ss
adc
sahf
sbb
inc
xor
dec
adcb
leave
xor
and
add
aas
push
mov
lahf
adc
pop
pushl
inc
sub
inc
jae
sbb
inc
mov
scas
orl
adc
push
push
pushf
aaa
push
pop
xor
es
fistpl
push
sbb
aaa
jl
mov
repz
and
pop
sbb
loop
jbe
stos
sub
aaa
movsl
daa
jno
mull
mov
and
jmp
push
imul
sbb
mov
cmp
fnsave
push
and
out
jmp
xchg
add
insb
test
stos
mov
pop
scas
jp
and
inc
push
xor
enter
or
adc
dec
xchg
int3
add
or
orb
push
jo
pop
out
fstl
push
pop
jg
add
pop
push
mov
lahf
test
jle
js
in
push
push
add
ja
or
adcb
stc
or
mov
pop
sbb
es
cmpsb
lds
fiaddl
push
ja
test
ud2
jnp
cmp
or
add
mov
and
popf
mov
gs
setl
pop
inc
push
inc
jo
mov
movq
jo
negl
pop
push
out
subb
hlt
add
aas
mov
xchg
pop
sub
pop
mov
jg
pop
sub
pop
and
cmpb
les
mov
lahf
lock
cmpsl
enter
int3
iret
popl
or
push
add
add
mov
mov
mov
js
inc
mov
aas
jo
roll
mov
add
or
pop
mov
mov
adcb
pop
adc
inc
xor
aas
mov
add
dec
mov
dec
inc
pop
minps
dec
jne
orw
jp
ja
xchg
adc
and
out
mov
outsb
and
or
jbe
mov
adc
add
outsl
mov
jns
inc
push
fs
pop
push
outsl
test
dec
jnp
arpl
ss
mov
adc
insb
shrl
cmpl
testl
push
loopne
std
push
gs
add
inc
add
push
xchg
js
xor
xor
mov
cmpsl
push
jb
push
jnp
mov
fwait
jno
jae
outsb
outsl
jo
insl
adc
sbb
imul
adcb
pop
add
jae
xor
mov
cmp
popa
jb
insl
ret
jge
dec
outsb
scas
arpl
mov
sbb
shll
jns
addr16
mov
sbb
and
aaa
mov
pop
arpl
jae
cmpsl
fisubrl
cmp
push
pop
cmp
mov
inc
insb
jecxz
data16
faddp
adc
faddp
cmp
add
push
jno
adc
xchg
sub
xor
pop
loope
outsl
cmp
dec
movsl
jecxz
int3
cmp
arpl
popa
mov
pop
mov
outsl
lcall
inc
insb
lahf
lcall
nop
cmp
xchg
fs
mov
mov
out
negb
xchg
mov
sub
push
outsl
bound
loopne
lods
ss
cs
adc
push
mov
daa
data16
push
or
xor
gs
mov
dec
stos
push
dec
mov
adc
dec
stc
jecxz
fiadds
xchg
push
push
add
push
jno
repz
dec
mov
mov
jg
js
adc
out
imul
adc
and
fidivrs
mov
fnsave
sbb
arpl
daa
jg
mov
rorb
bound
adc
movsb
jecxz
pusha
push
mov
add
jnp
js
sbb
mov
scas
mov
fisubrl
xchg
adc
jg
insl
ret
pusha
rol
pop
cmp
pandn
lret
jo
imul
loopne
clc
fisubs
sbb
test
push
mov
cmp
fimull
push
imul
add
popf
mov
pop
hlt
call
popa
jmp
push
push
stos
in
xor
add
add
jae
mov
sbb
js
sub
mov
daa
imul
loopne
add
stos
fs
lds
or
fwait
fs
sarb
lret
push
sub
js
adc
jae
cld
mov
bnd
je
popa
sbb
xor
xlat
fs
pop
fisubrl
dec
add
push
or
and
pop
arpl
xor
imul
mov
xor
dec
xlat
shll
mov
and
pusha
pop
inc
addl
aaa
cmpsb
pop
movsbl
sti
dec
adc
imul
pop
subb
pop
sub
scas
inc
push
je
adcb
push
testw
aaa
sbb
das
xor
add
test
es
mov
jnp
aaa
jns
adcl
rcr
xchg
sbb
dec
sti
dec
rolb
insl
rcl
mov
shll
out
sbb
dec
pop
or
mov
fildll
fistps
ss
popl
gs
mov
mov
cmp
or
popa
adc
pop
sbb
es
xor
sti
es
add
mov
inc
mov
and
and
imul
push
xlat
jb
inc
fnsave
sub
sub
daa
cmp
inc
inc
jae
pop
mov
mov
jnp
xor
call
adc
fidivrl
popa
add
jne
and
cmpsl
dec
jb
inc
repnz
fistl
je
inc
sbb
jae
dec
aad
xchg
sbb
xchg
adc
mov
pop
loop
push
scas
cmp
cmpsb
or
loope
into
mov
jo
jno
aaa
das
fwait
pop
lods
pusha
orb
ss
dec
fwait
scas
and
push
xor
pop
xor
mov
sbb
adc
lods
or
scas
lahf
lret
mov
add
inc
and
adc
out
add
pcmpgtb
add
outsl
and
xor
xchg
das
arpl
sbbl
sbb
and
out
addl
stos
xchg
pop
adc
addb
jp
pop
mov
jae
jae
push
dec
push
xchg
and
mov
imul
lds
sbb
pop
mov
add
daa
sbb
push
sub
mov
xchg
mov
xlat
arpl
inc
xchg
movsb
push
and
pop
mov
push
or
aam
inc
insb
sti
adc
push
imul
push
jo
and
insb
mov
insb
dec
jae
xor
test
jl
pop
jae
adc
je
imul
sub
stos
pop
adc
xchg
or
xchg
adc
or
jo
pop
aas
xchg
or
dec
pop
push
loopne
repz
shll
mov
mov
pop
fucomip
mov
ret
addr16
jnp
dec
outsl
sbb
adc
cvtps2pi
xchg
add
ret
add
stos
js
inc
mov
jmp
pop
stos
mov
and
stos
data16
inc
add
xlat
pop
test
sub
jg
and
bound
or
arpl
mov
push
inc
sarl
jecxz
sub
ja
mov
ret
call
or
mov
outsb
btc
jnp
inc
jge
bound
add
or
jnp
outsl
daa
mov
cmpsl
xor
les
sub
cwtl
bound
cmp
add
outsl
pop
xor
jl
lds
out
mov
pop
pop
es
mov
loopne
or
jnp
bound
stos
sub
ss
outsb
out
add
and
push
rcr
movsl
push
push
jb
jbe
add
jmp
nop
fistpl
inc
roll
inc
add
or
and
lods
inc
test
dec
cmp
cli
outsb
jae
scas
adc
adc
and
mov
push
sbb
mov
sbb
xchg
mov
cmp
cmpsl
stos
insl
shrb
lahf
jbe
add
jle
aaa
ljmp
out
movsl
push
ja
jne
inc
rorb
jl
xchg
js
iret
and
jo
and
aas
fs
gs
dec
arpl
ficoml
popa
xor
push
push
cmp
adc
test
arpl
jbe
stos
push
dec
jg
popa
fistl
xor
pop
lcall
push
loop
and
push
dec
adc
mov
jb
outsl
cmp
adc
add
mov
and
push
movsb
push
out
sbb
push
sbb
sub
dec
arpl
stos
fwait
addr16
cmpsb
push
xchg
jo
cwtl
mov
iret
fldt
sub
xchg
je
add
xor
cmpsb
jmp
add
aaa
mov
push
or
fcmovbe
push
push
adc
jp
dec
stos
ss
mov
scas
jle
push
adcb
xlat
add
ja
dec
jne
mov
mov
aam
mov
sahf
out
mov
fisubrs
out
xchg
jmp
rcrb
das
pop
scas
add
add
pop
ret
xchg
call
fwait
push
out
jnp
dec
sub
add
xor
jl
rcll
inc
lret
sbb
rorl
out
sbb
xlat
add
jle
push
push
or
in
mov
sub
imull
pop
sub
xchg
stos
imul
fmulp
sub
xchg
inc
rorl
adc
xor
mov
adc
stos
dec
dec
pushf
mov
out
les
jmp
daa
outsb
mov
adc
push
subb
jmp
rcrl
je
jo
push
out
fdivs
outsl
pop
cli
jne,pn
ret
push
ja
push
or
cmp
cmpsb
push
and
and
dec
jmp
arpl
pop
pusha
adc
sahf
pop
aad
xchg
or
xchg
jo
shlb
sub
loopne
lds
adc
lret
fwait
jl
test
aaa
imul
and
add
pop
pusha
packssdw
aaa
stos
push
jae
addr16
outsb
pop
orb
out
sbb
sub
adc
mov
lcall
sub
ds
push
push
pop
push
mov
push
fisttpl
jbe
out
and
or
outsl
jp
inc
sti
cmpsl
ss
adc
sbb
inc
cmpsb
js
xor
lds
pop
idivl
xchg
lret
push
inc
pusha
xor
imul
pop
filds
jo
lret
cmp
shll
out
push
fistps
inc
cmp
cli
and
xchg
fisubrs
mov
jb
mov
mulb
or
daa
das
xlat
add
push
mov
outsl
stos
adc
push
xor
dec
imul
or
rcll
es
sub
sti
xlat
pop
cs
mov
orl
sbb
mov
data16
inc
push
aas
daa
pop
shlb
adc
push
outsl
pop
xchg
push
and
sub
add
fwait
dec
mov
mov
or
and
faddl
push
jo
out
bound
mov
xchg
push
sti
pop
loopne
adc
shrb
xlat
pop
push
inc
pop
cs
pop
adc
lds
movsl
loop
xor
push
mov
sub
rorl
pop
pop
sub
mov
arpl
loop
mov
icebp
pusha
add
dec
xor
es
ja
adc
xchg
ret
sbb
mov
adc
and
sub
popa
aaa
push
pop
ja
popa
les
jecxz
pop
movsl
or
push
sbbl
adc
sbb
jmp
mov
addl
cwtl
pusha
and
add
xchg
adc
mov
js
sahf
rolb
aaa
scas
orl
daa
sbb
sbb
fwait
xchg
nop
mov
mov
ficoml
lods
dec
pop
sub
mov
mov
adc
js
out
sbb
addr16
test
cmpsl
mov
adc
xchg
push
xlat
aas
lcall
push
movsl
test
dec
imul
iret
shlb
testb
push
mov
push
mov
mov
inc
pop
rcll
sbb
xor
bndldx
mov
mov
arpl
pop
mov
lods
lcall
xor
ret
mov
sbb
addr16
or
inc
jnp
addl
adc
imull
out
pop
sarl
popa
movsl
add
xchg
sti
xchg
cmp
adc
inc
arpl
or
jns
andb
arpl
mov
es
stos
inc
outsb
dec
pop
jle
repz
mov
mov
ret
cmp
xchg
loop
push
dec
stos
mov
or
lods
bound
push
add
out
shrl
jne
push
sub
mov
iret
lds
xchg
and
in
arpl
daa
and
pop
and
insb
inc
dec
je
mov
and
orb
ret
adc
inc
sub
lock
daa
dec
daa
add
push
adc
or
lods
fidivl
adc
les
mov
stos
adc
xor
shlb
stos
loop
fimuls
dec
push
pop
sti
js
adc
inc
adc
push
fwait
out
mov
sbb
jbe
pop
xchg
or
push
xchg
sbb
inc
and
sub
sbb
and
push
mov
pop
scas
daa
negl
sbb
popa
sahf
mov
arpl
pop
mov
lods
into
clc
sti
add
cmp
cmp
push
mov
loopne
outsb
and
jo
inc
data16
jo
push
inc
ret
xor
add
push
cli
jo
aaa
adc
sub
or
pop
add
inc
pop
pop
pusha
fiaddl
das
inc
or
scas
cwtl
mov
and
mov
loopne
imul
mov
test
mov
push
icebp
adc
adc
lods
inc
pop
and
sbbb
dec
mov
cwtl
aas
movups
lcall
ss
add
cmp
testl
push
fs
jp
cmp
sub
push
add
outsl
inc
movsl
arpl
sub
rclb
jecxz
imul
add
pop
xchg
enter
jae
imul
ja
testl
out
outsl
mov
jnp
dec
ret
jp
or
ljmp
pusha
rcrl
cmpsl
add
add
pop
or
lahf
dec
orl
movsb
dec
mov
sbb
arpl
sbb
pop
cmp
shrl
shlb
data16
mov
jmp
cmp
push
cmpsl
mov
jge
mov
aas
testl
adc
int
adc
ret
daa
or
xor
sbb
adc
aad
das
mov
add
fwait
outsb
and
pop
xchg
pop
push
out
mov
mov
cmp
das
aas
add
xchg
mov
jnp
jbe
sub
sbbl
jg
mov
mov
sbb
arpl
movsl
lods
cmpsb
dec
pop
dec
sbb
rcr
push
lods
mov
xor
scas
adc
ret
push
scas
mov
or
outsb
sub
mov
dec
dec
cmpsl
stos
sub
inc
xchg
fs
adc
xor
jae
pop
das
xorl
in
jo
pop
adc
xor
xchg
das
adc
jnp
pusha
fisttpl
lods
mov
inc
push
and
inc
xlat
add
popw
and
bound
mov
inc
jmp
xchg
test
or
and
rorl
sub
pop
daa
in
xchg
adc
imul
lea
jg
loopne
adc
sti
or
das
ds
dec
mov
inc
xor
outsl
pop
iret
pop
push
adc
xor
sbb
iret
sub
pop
daa
nop
sbb
sbb
jns
adc
fnsave
or
sbb
outsb
cwtl
sbb
arpl
jo
dec
jo
adc
jne
xor
adc
or
xchg
dec
aad
jne
sub
and
pop
aas
sub
es
aaa
mov
pop
fwait
cmp
test
out
mov
sbb
outsl
pop
adc
mov
push
inc
push
xchg
add
dec
leave
adc
cltd
shrb
insb
cmp
mov
mov
mov
insl
enter
inc
adc
adc
xor
sub
push
andb
aam
inc
or
movsl
mov
es
jnp
ljmp
mov
inc
jo
adc
js
adc
pop
ds
pop
jge
aam
jp
push
push
dec
push
jae
mov
mov
nop
loope
push
or
adc
cmp
imul
push
sub
mov
push
sbb
sub
cli
dec
fisubl
mov
dec
sub
repnz
push
push
push
fdivrl
lods
gs
mov
dec
push
jb
sub
inc
push
dec
je
and
push
cs
ret
jb
popa
or
mov
push
test
adc
xor
xchg
inc
addr16
add
lea
push
dec
inc
or
cmp
outsb
jb
movsl
icebp
je
mov
movups
fs
inc
insb
insl
sub
sbb
test
sahf
adc
push
cld
adc
pushw
xchg
mov
jo
rorb
xor
adc
jl
pop
sahf
inc
mov
and
mov
push
push
add
adc
rorb
pop
insl
adc
jns
adc
xchg
and
stc
xchg
rclb
cwtl
ss
fldenv
jl
imul
or
pop
dec
or
xchg
and
in
dec
aaa
mov
pop
and
xor
test
subb
cmpsl
sbb
dec
mov
pushf
adc
jl
lcall
adc
jne
lock
push
jae
decl
inc
add
sbb
add
pop
pop
ret
pop
push
std
dec
adcl
movsb
adc
jns
pop
test
andl
adc
repnz
xchg
dec
popf
mov
mov
fisubrl
les
sbb
bswap
jecxz
sub
cmp
push
mov
shlb
or
je
ror
mov
sub
test
adc
stc
into
out
lret
dec
jne
ljmp
dec
fs
mov
jns
inc
adc
pop
sbb
xchg
sub
and
rcrb
adc
sti
adc
roll
pop
sarb
push
lods
cltd
es
and
jnp
popa
scas
lea
rcll
sbb
sbb
dec
mov
mov
jp
je
sbb
outsb
add
iret
rorl
mov
adc
das
dec
pushf
add
and
sub
sahf
sahf
mov
adc
push
jb
sarl
cmpsb
out
and
fistps
xor
jne
lods
dec
pop
xchg
sbb
xchg
imul
ss
nop
xlat
adc
enter
adc
mov
add
or
add
mov
add
jmp
xchg
or
insb
mov
add
pop
or
cmpb
push
cs
flds
or
addr16
sub
xor
loope
cmc
or
movsb
push
addl
cmp
clc
xchg
inc
lea
rolb
xchg
or
les
mov
adc
adc
jo
pop
push
iret
add
std
icebp
or
aas
and
add
xor
or
add
push
jb
add
xor
push
push
pop
inc
mov
loopne
cmp
dec
adc
mov
add
insb
into
or
xor
mov
and
imul
es
adc
push
mov
add
xchg
pop
lahf
add
dec
ret
lea
pop
sbb
mov
dec
js
cmp
push
mov
xchg
or
lods
aam
mov
gs
movsl
or
and
outsl
xchg
and
in
and
sbb
pop
pusha
lea
mov
out
push
dec
sub
xchg
clc
outsb
fs
iretw
sub
fcomps
imul
outsl
adc
and
loope
add
add
or
jo
sub
in
popa
sub
adc
cmpsl
adc
mov
cmp
push
outsl
loopne
adc
inc
lock
xchg
sbb
push
outsb
dec
lock
adc
push
dec
sbb
xchg
xorl
inc
mov
pushf
outsl
sub
mov
mov
sbb
mov
insb
negb
dec
pop
sub
cmp
xchg
jo
mov
inc
and
adc
push
sub
and
sbb
cmp
pop
gs
pop
outsl
xor
push
pop
rcrb
push
insl
xchg
das
inc
cmp
inc
inc
push
adc
and
push
adc
add
sbb
mov
dec
adc
pop
jns
fcmovb
jae
fnsave
pop
or
add
add
pop
inc
addr16
fstps
inc
inc
sub
sbb
add
mov
imul
inc
add
enter
gs
add
fwait
dec
fs
xlat
pop
ret
push
xchg
sub
add
xchg
dec
adc
fs
sub
sub
inc
gs
push
add
mov
sbb
or
jnp,pt
sbb
mov
negl
das
xchg
pop
push
adc
sbb
and
in
pusha
push
push
sub
push
inc
push
lea
subl
inc
pop
negl
shlb
sub
sub
mov
jge
sbb
sub
ljmp
add
mov
loopne
pop
pop
out
cmpsb
mov
sub
sbb
inc
push
pop
mov
hlt
mov
rcrb
inc
dec
jmp
push
mov
xor
call
add
or
lcall
fldt
stos
push
inc
pop
push
xchg
mov
xor
cmp
push
sub
sub
test
pop
mov
inc
cltd
adc
push
ljmp
adc
dec
ret
dec
adc
xchg
in
mov
ja
lods
stos
xor
mov
cmp
push
rclb
lock
push
je
adc
sub
mov
or
xor
into
cmpsl
push
or
mov
rcrl
popa
pusha
je
gs
out
add
inc
lods
push
cmp
lock
or
lahf
leave
hlt
pop
or
sbbl
inc
pop
push
pop
adc
rolb
andb
pusha
push
mul
sub
adc
and
add
adc
dec
outsl
jnp
outsb
inc
cmp
mov
cli
sub
test
mov
cmp
popa
push
mov
ja
inc
adc
imul
sub
lds
dec
sbb
and
cmpsl
xor
inc
pusha
or
and
ror
daa
insb
sbb
dec
and
mov
orl
in
pop
and
pop
test
sbb
inc
cwtl
test
and
nop
mov
and
dec
movsb
fldl
ret
pop
push
dec
push
xor
mov
in
push
lea
ret
and
imul
shrl
cmp
and
mov
je
sbb
ss
mov
dec
add
fcoms
fs
cld
fadd
insl
jne
xor
icebp
pusha
mov
dec
xorb
loopne
push
and
pop
out
or
and
jo
mov
mov
or
inc
inc
es
mov
sub
arpl
mov
xor
sub
mov
rolb
das
test
outsb
inc
outsl
mov
lods
dec
or
adc
mov
sbb
adc
xorl
das
lea
sbb
and
shlb
inc
pop
arpl
sub
xorl
xor
mov
cmp
sbb
fwait
and
mov
push
jns
sahf
aaa
or
ret
lret
mov
or
jae
xor
dec
test
test
dec
sub
cmp
dec
cwtl
or
inc
mov
dec
dec
sub
push
cmp
xlat
push
pusha
mov
add
sahf
or
xor
in
inc
and
int
imul
sbb
xchg
mov
mov
push
xchg
dec
data16
mov
or
xor
arpl
daa
dec
xchg
dec
loop
cmp
rolb
fs
mov
sbb
and
pop
push
addr16
lds
and
notb
sub
add
and
pop
push
xchg
or
xor
adc
sbb
jg
push
or
lods
jne
les
or
mov
mov
movsl
pusha
je
cmp
insb
outsb
sbb
rol
lea
out
cmp
dec
rorl
sub
add
mov
and
push
or
sbb
xor
shrl
popa
mov
in
inc
and
and
and
fwait
in
orl
subl
pop
mov
jno
lock
cmp
add
lods
jo
mov
inc
stos
iret
and
mov
loopne
shl
sub
int
cmovnp
adc
xchg
xchg
add
dec
and
jne
mov
fcoms
push
inc
push
sbb
push
pop
cmp
outsl
fdivrs
add
mov
test
push
and
adc
sbb
jne
shrl
inc
or
jno
xor
cmp
push
xor
inc
aas
fs
imul
dec
outsb
arpl
sbb
imul
xchg
js
hlt
icebp
sbb
int3
lods
inc
jg
dec
lods
fdivr
test
dec
jae
mov
and
mov
mov
dec
inc
sbb
and
dec
repnz
jae
daa
adc
and
mov
addl
sub
shrl
mov
fcomps
das
push
jl
fstpl
dec
imul
imul
pop
out
and
dec
push
xorl
add
jns
add
mov
jl
aas
cltd
and
xorb
stos
cmp
jns
xor
jae
add
add
sbb
dec
pop
lock
mov
push
or
push
fcmovnu
inc
pop
jno
inc
or
pop
test
adc
mov
and
andl
stc
sbb
fsubs
sbb
push
xchg
adc
pop
inc
inc
inc
orb
jg
adc
xchg
pop
mov
jnp
mov
pop
mov
dec
insb
and
in
push
mov
and
mov
sahf
add
daa
insl
ret
ficoml
das
popa
stos
lods
xchg
jbe
and
popf
xchg
and
pusha
xorl
inc
lret
sub
outsb
adc
adc
test
or
ja
and
leave
inc
and
mov
aad
stos
cs
xchg
mov
les
jbe
xchg
inc
sub
lret
test
dec
andl
jmp
or
mov
in
sbb
add
in
xchg
adc
push
outsl
sbb
mov
push
jecxz
sbb
mov
mov
rcll
xlat
outsb
jecxz
and
cs
mov
sbb
jmp
mov
pop
push
xchg
dec
data16
add
push
rcrl
insb
pop
imul
and
and
sbb
aaa
testl
or
xchg
mov
pop
insl
xchg
adc
dec
sbb
push
hlt
dec
cmp
int3
aaa
inc
adc
dec
or
pop
aaa
push
jo
rcrl
jg
fs
lock
add
vpmullw
mov
mov
popa
test
adc
adc
rcll
add
js
xchg
or
mov
add
jmp
pop
sbb
mov
push
inc
push
dec
add
add
push
aad
xchg
xchg
call
dec
loopne
popl
nop
add
push
adc
jo
add
add
nop/reserved
add
inc
packuswb
add
push
add
sub
outsb
jb
lods
dec
and
jo
add
sbb
pusha
mov
in
mov
xchg
pop
das
cwtl
scas
add
inc
add
mov
les
aam
xlat
mov
or
or
mov
dec
inc
dec
dec
push
push
sub
or
bound
repnz
mov
mov
lahf
xchg
cltd
or
mov
add
or
gs
fwait
and
jo
cmpsb
int3
inc
jae
push
data16
or
jle
pushf
cs
xor
or
sub
and
add
add
add
inc
add
inc
xchg
test
push
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jo
dec
add
ja
