mov
adc
adc
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
idiv
insb
jae
add
jb
lea
sub
add
push
push
mov
inc
add
dec
outsb
je
addr16
and
rcrb
int
das
add
jns
insb
daa
push
outsl
jb
add
in
incl
outsb
add
das
call
je
sub
in
push
add
aas
add
push
xor
imul
push
ret
notb
push
pop
push
dec
bound
arpl
sbb
sub
rol
loop
jae
insl
mov
adc
adc
ss
dec
jb
popa
arpl
add
in
jg
fwait
or
int3
addl
jmp
std
nop
arpl
push
mov
mov
gs
loopne
jno
out
fwait
or
push
mov
and
adc
push
lea
shll
and
sets
mov
mov
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
test
push
pushf
pushf
pushf
pushf
push
sarb
dec
ror
pushf
pushf
pushf
pushf
enter
mov
push
add
mov
sti
mov
imulb
je
movzwl
mov
ss
pop
ret
leave
leave
leave
dec
xor
sub
enter
and
sbb
aas
fwait
jg
push
mov
add
push
add
insl
dec
test
jne
xor
pop
enter
mov
mov
ret
idiv
inc
lea
mov
mov
mov
inc
cmp
jne
mov
mov
push
nop
mov
jg
jnp
mov
ret
scas
mov
mov
xchg
insb
test
xchg
mov
mov
ja
in
in
mov
or
adc
add
mov
aaa
imul
pop
push
mov
push
or
and
or
ret
mov
push
mov
mov
mov
mov
mov
rcrl
lock
out
push
or
push
or
ret
and
mov
outsl
in
hlt
mov
push
or
inc
add
adc
or
aaa
sub
jne
mov
cmp
lcall
push
fisttps
sbb
xor
mov
add
loopne
mov
into
int
bound
jne
mov
ss
insl
shl
or
mov
dec
ret
jmp
pop
mov
pop
shl
add
iret
pop
repnz
sub
stos
fiadds
sub
mov
lock
pop
ret
mov
aam
or
or
xor
sbb
scas
sbb
sti
jne
sbb
nop
fwait
sti
add
es
mov
cmp
or
push
fadds
imul
ljmp
fiaddl
and
push
jg
mov
mov
test
je
mov
mov
jbe
adc
mov
push
and
inc
lock
push
mov
data16
sti
ds
add
shrb
push
and
jne
icebp
add
pushf
popa
roll
cmpl
in
mov
mov
mov
mov
push
in
mov
call
in
add
mov
push
sbb
jae
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
fdivrl
sti
mov
cmpsl
mov
add
jl
jle
sbb
loop
mov
or
push
adc
hlt
outsl
xchg
mov
and
sbb
jle
sbb
inc
sub
or
push
fimuls
pop
cmp
add
mov
add
jbe
or
imul
scas
adc
sti
push
push
cmpl
jmp
ss
rcll
jae
and
push
cmp
mov
lock
cmp
jmp
sahf
nop
nopl
inc
or
sbb
roll
jae
mov
cmp
jae
std
add
add
and
addl
addl
cld
std
mov
mov
mov
aas
or
add
sahf
push
pop
jne
jbe
xor
idivb
inc
xlat
lahf
cmc
popf
mov
push
movsb
in
je
mov
inc
std
xor
and
xor
scas
mov
pop
add
jne
ljmp
movsl
and
push
inc
in
jge
insb
mov
insl
pop
mov
and
cmp
add
jl
in
mov
jne
or
jle
and
mov
sub
push
stos
mov
jg
pop
jl
or
nop
or
mov
push
push
je
mov
pop
fadds
pop
push
out
arpl
xlat
lea
test
xor
imul
jne
xchg
xor
xchg
cmp
push
sarb
sub
inc
popf
ret
lock
xchg
mov
mov
repnz
cwtl
aaa
jecxz
add
lock
filds
pop
mov
out
rorl
cmp
popf
jno
pop
push
test
je
jne
jo
imul
jo
or
adc
jmp
jecxz
cmp
xor
jmp
pop
sbb
sub
sbb
jle
push
push
cmc
aaa
pushl
mov
push
cmp
jne
jl
and
push
adc
fsts
and
push
and
cmpl
jnp
sbb
leave
ret
push
jle
hlt
inc
cmp
in
mov
das
jp
add
rcrb
pop
push
shl
pop
push
adc
sub
pop
mov
sub
mov
dec
mov
lods
jo
xchg
test
shlb
sub
iret
add
cmpb
in
andb
out
ja
xchg
and
fs
mov
je
xorb
mov
mov
cmp
sbb
fs
add
push
cmp
scas
loopne
add
adc
stc
lock
ss
jg
adc
test
jns
add
sar
sarb
jo,pn
cwtl
mov
and
xchg
std
int
mov
sub
add
mov
and
mov
std
mov
pop
add
or
mov
cmp
adc
or
sbb
mov
sub
lea
cmp
jl
movl
ja
mov
jb
sahf
es
or
out
testb
add
sub
test
cld
jnp
loopne
dec
adc
adc
jbe
mov
jl
or
push
rolb
pusha
xchg
or
sbb
dec
add
andl
push
xor
or
loope
or
jmp
iret
add
cmpsb
sub
mov
aas
add
and
dec
jb
sub
cmp
cmp
testb
aad
add
add
test
mov
xor
std
imulb
add
mov
clc
add
and
repz
mov
sub
pop
jp
cmovs
movb
jne
push
out
xchg
jo
sbbb
jmp
xchg
into
push
lea
sub
cli
mov
pop
cld
jg
clc
sub
sub
cmp
jge
jae
icebp
mov
out
fucomi
sub
jmp
daa
xlat
cld
lea
and
in
stos
fwait
mov
sub
lds
stos
clc
aad
pop
mov
adc
shlb
test
jp
or
out
rolb
fisttps
pop
mov
cwtl
jo
xchg
out
shll
test
mov
ss
hlt
cmpsb
adc
mov
bound
cmp
inc
adc
push
sahf
add
sub
cmp
or
adc
mov
and
pop
sbb
adc
xor
daa
or
pushf
inc
pop
mov
popa
and
or
pop
add
mov
cmp
movsl
movsl
mov
cwtl
lds
fwait
pushw
mov
and
or
ja
out
or
push
mov
cmp
pusha
xchg
lods
sub
or
inc
push
adc
repz
sbb
or
sbbl
adc
out
cmp
push
fsubrl
xor
mov
or
mov
arpl
flds
pop
mov
fadds
sbb
fadds
pusha
pop
pop
inc
xlat
test
or
ret
pusha
cmc
inc
enter
xor
ror
sbb
sar
cmp
pop
push
adcb
or
lods
data16
xor
mov
add
xor
mov
fildl
jg,pn
pop
mov
pop
je
je
adc
sub
cmp
xor
aam
insl
aas
jle
fistpll
jne
movsb
sub
cmpl
clc
bound
dec
sbb
hlt
inc
add
xor
dec
loope
sub
je
shrb
xor
mov
pop
inc
and
ljmp
repnz
jne
xlat
roll
xor
cmp
adc
test
loopne
mov
pusha
or
push
int3
sti
clc
stos
jle
inc
cld
leave
aas
lock
jbe
addr16
push
push
mov
imul
pop
or
sti
mov
mov
push
test
jg
inc
sub
or
sbb
loopne
add
pop
inc
scas
shlb
push
adc
jns
mov
jmp
mov
jge
fdivl
pushf
or
xor
add
or
in
jbe
jmp
pop
jl
push
mov
sbb
out
xor
add
mov
sbb
sbb
fcoml
inc
arpl
aam
ss
mov
pop
push
ja
popa
pop
push
push
sbb
mov
sub
jne
out
or
cmp
jo
xor
mov
pop
lock
test
jne
ret
jne
decl
in
mov
sub
mov
test
loope
push
or
test
jge
cmp
xor
cmp
push
jl
nopl
ret
mov
cmp
loopne,pt
sub
in
add
jle
sbb
mov
mov
push
ret
sbb
inc
test
inc
cli
test
aaa
orl
jmp
mov
cmpl
sbb
sti
clc
push
adc
or
adc
sbb
and
add
add
rcr
js
pop
jg
add
or
mov
jge
clc
sbbl
mov
decb
jge
lock
adc
shll
xor
clc
xor
loop
push
jge
sbb
lea
divl
sub
shlb
loopne
add
pop
ret
or
sbb
mov
ficomps
push
fmuls
and
or
mov
sub
pop
jecxz
andl
fmul
imulb
xor
dec
daa
clc
call
inc
lahf
add
cwtl
jp
dec
add
addl
fbld
movsb
les
add
push
sbb
xchg
push
mov
push
pop
pop
pop
ffreep
mov
loop
sub
or
and
or
cmp
lret
cmp
xchg
ret
les
cmpsb
jmp
add
subb
or
xchg
in
mov
sbb
xor
dec
push
call
cmc
adc
inc
movhps
and
mov
mov
jmp
out
adc
xchg
ret
fildl
add
jge
aam
inc
adc
mov
adc
les
mov
mov
idivb
add
call
dec
rorb
pop
or
xor
mov
in
add
je,pt
je
sarb
add
xor
sbb
enter
imul
mov
ret
push
jmp
push
xor
add
jl
jns
adc
repz
pop
push
rcr
mov
inc
dec
bound
orb
aas
cmp
inc
sbb
lds
mov
or
xor
sti
loope
nop
jg
mov
inc
jle
popa
ret
mov
jg
xchg
cmp
cmp
lahf
cwtl
fstpl
scas
add
jo
mov
mov
clc
int3
adc
pop
mov
adc
push
in
jg
enter
push
xor
in
loop
rcrl
xor
pop
psubsb
mov
mov
mov
sub
sbb
ret
sub
inc
cmpsl
decl
sarl
mov
inc
rep
jmp
mov
mov
mov
jl
pop
mov
add
fimuls
xchg
add
stos
vcvttss2si
jno
mov
cmp
adc
divl
je
dec
js
rep
xchg
in
data16
xor
lea
xor
std
xor
scas
or
mov
xchg
or
add
adc
ljmp
cld
and
cmpb
xchg
cmpb
add
out
in
mov
jmp
sti
xchg
mov
cmp
xor
push
shrb
roll
ljmp
jne
in
sbb
pop
adc
push
mov
mov
xor
jmp
decl
gs
mov
mov
inc
inc
test
mov
ja
shl
pop
ds
sbb
into
test
clc
aas
or
in
pop
sub
cld
test
jne
push
push
jno
lahf
add
pop
mov
aas
xor
push
and
insb
imul
sbb
adc
je
js
in
add
jmp
mov
incl
movnti
and
sub
filds
mov
inc
and
push
sbb
loopne
in
adc
aas
mov
push
add
hlt
sub
sub
dec
sar
testb
sbb
jmp
cmp
pop
cmp
jle
addb
mov
mov
add
push
inc
daa
mov
sbb
sbbb
divb
das
or
xlat
ja
and
adc
jne
call
sbb
adc
lahf
cltd
imul
jmp
cmp
rol
outsb
jge
xchg
mov
cmp
js
mov
inc
inc
and
mov
xchg
sarl
in
xor
mov
mov
inc
inc
in
lock
jg
add
ret
ljmp
pop
cmp
jne
dec
and
dec
negb
pop
add
aaa
and
or
loop
push
adc
lcall
loop
je
mov
cmp
jne
dec
je
mov
cmp
jne
pop
icebp
dec
rorl
add
jne
add
call
mov
std
jne
shr
insb
adc
add
out
xchg
push
mov
shr
or
pop
outsb
scas
xor
cmp
shl
aaa
ffreep
add
and
mov
cmp
jne
dec
dec
inc
sarl
dec
and
pushf
xor
pop
jecxz
mov
ficomps
mov
shl
data16
stos
sub
lret
stos
pop
daa
push
adc
mov
sub
mov
push
inc
clc
and
add
je
or
je
and
je
pop
mov
fmulp
je
xor
dec
and
test
mov
jmp
or
or
cmp
ja
lea
outsl
jg
fistpl
add
push
mov
or
jge
jmp
hlt
sti
incl
jle
js
pop
sub
jmp
inc
inc
jmp
mov
push
andnps
popa
jb
xchg
and
js
adc
scas
or
mov
leave
pushf
add
aad
out
test
mov
xchg
mov
jne
fldl
mov
jbe
sub
inc
popa
push
inc
mov
dec
jne
pop
decb
pushf
popf
and
cmpsb
mov
das
xor
sub
je
adc
arpl
mov
adc
lea
fldt
xor
add
fisubs
add
je
das
imul
add
popa
push
and
jmp
xchg
mov
jge
mov
xor
movsb
xor
or
add
stos
sub
adc
out
mov
daa
les
nop
daa
lahf
sbb
mov
daa
lahf
jl
cli
or
or
ret
and
stc
enter
xchg
cwtl
push
and
jl
imul
stc
add
mov
in
ret
movsl
aam
pop
fldenv
sub
test
out
sub
adc
xor
leave
sbb
out
out
mov
inc
jbe
imul
cmp
mov
mov
jg
outsl
bound
cmpb
xlat
fadds
outsb
xor
xchg
fwait
dec
mov
or
push
push
int3
into
sbb
rorl
mov
push
jmp
pop
test
enter
mov
inc
push
and
daa
lret
into
pop
inc
test
decl
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
inc
push
stos
mov
cmp
or
mov
pop
out
sub
imul
call
loopne
inc
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
ljmp
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
call
jecxz
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
movsb
mov
and
pop
mov
repz
mov
subb
and
and
outsb
bound
xor
scas
lret
jmp
rcl
call
cmp
jne
push
pop
and
push
xchg
mov
fdivl
dec
outsb
addr16
movzwl
lods
mov
lea
push
push
inc
pop
stos
mov
ret
mov
push
push
mov
movl
push
pop
hlt
push
data16
add
jo
mov
fistl
fnsave
test
out
mov
jmp
push
clc
sbb
loope
pop
aas
or
leave
mov
pushl
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
incl
inc
push
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
sub
mov
stc
mov
xor
mov
inc
rep
push
or
add
fildll
or
dec
cld
jne
dec
mov
xor
rorb
out
jp
fbstp
lcall
faddl
into
sbb
scas
std
std
in
add
call
rcrb
and
aaa
and
push
ja
rcr
test
or
fdivrl
sub
movups
add
xor
lods
jl
loopne
mov
or
push
cld
cmp
ret
jl
mov
xor
push
shr
dec
rep
pop
lock
outsl
mov
pop
fadd
idiv
stos
cmp
mov
jmp
cmp
je
pop
mov
add
jae
clc
add
outsl
movb
jnp
mov
push
sbb
cmp
pop
ret
mov
mov
mov
jbe
pop
adc
cmp
inc
xchg
aad
lahf
ret
jae,pt
paddd
shufps
jo
add
jmp
mov
insb
push
faddl
rorl
lahf
and
adc
out
pop
clc
inc
nop
cmp
mov
dec
pop
xor
ja
jbe
sub
and
xor
inc
adc
adc
clc
mov
stc
push
push
mov
push
add
pop
lock
sbb
and
fisttpll
movsb
sub
dec
setne
inc
idivl
in
xchg
popf
addl
shl
sarb
cmp
loop
xor
jb
cmp
fmull
or
jne
cmp
mov
inc
inc
mov
xor
lds
push
ret
and
add
and
lods
test
xor
mov
imul
push
mov
mov
cmp
je
mov
leave
jne
mov
pop
push
test
cld
nop
push
xchg
jmp
lret
adc
jg
push
add
repnz
je
pop
in
negb
pop
add
pop
sub
sub
mov
pop
cs
xchg
gs
pop
pop
ljmp
mov
mov
inc
rorb
xor
sbb
push
pop
pop
lods
adc
xor
cld
pop
data16
sarl
adc
pop
push
pop
leave
or
sub
pop
in
mov
decl
bound
sub
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
mov
mov
xor
jecxz
dec
cmp
add
lods
sbb
xchg
adc
sbb
lcall
pop
jmp
push
xor
call
ja
push
pop
add
mov
jl
and
sbb
rclb
sbb
test
mov
testb
pop
popa
pop
xchg
mov
es
sub
or
sahf
sahf
jle
or
test
inc
cmc
addr16
push
clc
pop
sbb
into
mov
jg
lock
pop
xchg
cmpb
clc
punpcklbw
push
call
mov
aaa
pop
pop
push
pusha
push
push
cmp
cmp
insl
sbb
or
cs
or
or
jae
pop
divb
pop
push
push
and
mov
mov
cmpb
je
or
jne
movsbl
inc
inc
jmp
push
cmpsb
add
repnz
addr16
pop
es
jecxz
fs
xor
adc
loop
sbb
cmp
cmp
jecxz
pop
jne
cmp
push
testl
dec
jne
fiadds
push
xlat
std
mov
xchg
je
xchg
and
adc
xor
test
pop
sub
out
sbb
movd
or
cmp
cli
out
push
je
or
sub
or
out
in
stos
pop
sbb
clc
add
stos
iret
outsb
into
sbb
enter
adc
adc
push
xchg
or
push
push
loopne
test
je
orl
mov
push
cmp
push
sbb
push
sub
or
push
mov
xchg
push
sub
decl
sub
outsl
or
inc
add
push
add
dec
pop
sbb
cmpsl
shr
div
aaa
mov
mov
and
mov
mov
push
lret
xchg
popa
dec
or
add
sbb
mov
pop
cwtl
push
or
aad
xchg
inc
or
add
lds
mov
out
sub
repnz
push
loope
sbb
fdivs
mov
std
lea
push
or
mov
xchg
shrb
fsubl
jne
dec
jne
adc
push
sbb
shll
outsl
inc
jmp
pop
lds
push
sub
adc
adc
insl
or
das
push
cmp
cs
adc
or
dec
loopne
pop
lods
movsl
or
push
cmp
mov
add
pushf
ret
push
rol
xchg
inc
call
inc
outsl
or
stos
pushl
mov
push
push
push
push
push
mov
pop
out
jns
and
stc
mov
cmp
xchg
nop
or
pusha
add
imull
sbb
or
movsb
xor
mov
and
mov
mov
mov
pop
movsl
cmc
xchg
jae
mov
fs
lods
pop
cmp
cmpsl
fildll
jmp
ret
xor
mov
mov
xor
xchg
ret
mov
pop
adc
xchg
aam
sub
pop
cmp
adc
push
sub
je
jmp
add
aas
sub
jb
je
jmp
cmp
cmp
lods
sti
inc
adc
jmp
sub
cmp
mov
jmp
aam
idiv
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
or
outsl
cli
mov
jmp
mov
jmp
mov
push
test
call
loope
or
inc
mov
jg
jecxz
movaps
jno
xchg
lods
push
insl
outsl
jp
inc
cmp
inc
pop
test
mov
je
add
push
add
or
jge
aaa
out
push
inc
sti
mov
sbb
pusha
cmpsb
push
sub
dec
rclb
sub
sub
xor
ja
addb
mov
enter
or
adc
fbstp
clc
dec
cmp
jbe
push
repnz
add
jne
in
not
imul
mov
dec
mov
repnz
mov
mov
jle
dec
notb
mov
add
call
and
push
rorl
mov
adc
js
loopne
ret
insb
mov
sbb
mov
xor
nop
scas
add
mov
stc
lret
jbe
cmp
sbbb
jg
sbb
cld
add
lahf
es
insl
xor
adc
sub
js
fnstsw
test
or
bnd
cmp
test
push
add
add
aas
rolb
jo
dec
jne
pop
pop
pop
inc
push
push
push
nop
pop
sbb
movsb
std
add
dec
add
mov
xchg
or
inc
repz
sbb
daa
lock
push
loop
pop
imul
add
rol
mov
es
sti
mov
dec
jbe
mov
mov
xchg
mov
mov
push
push
xchg
xor
lahf
pushf
loop
sbb
neg
sbb
inc
movsl
pop
sbb
testb
adc
ja
add
mov
mov
mov
push
cmpsb
dec
icebp
pop
sub
mov
sbb
clc
adc
cmp
cmc
add
or
xorl
push
push
push
aas
div
hlt
add
pop
xor
add
ret
mov
je
stos
pop
adc
cmp
or
or
mov
mov
gs
adc
ds
push
cmpl
adc
jge
rol
ror
pop
mov
call
and
test
xchg
sub
data16
fsub
daa
push
jne
hlt
scas
icebp
sti
clc
lock
imul
jbe
imul
lea
ret
sbb
and
out
rcr
xor
cmp
je
es
insl
inc
popa
xlat
dec
lods
xchg
mov
push
add
pop
cmp
and
push
push
adc
js
inc
add
pop
pop
cs
rolb
ret
mov
push
push
xchg
sub
add
shlb
aad
pop
mov
adc
decl
test
inc
clc
daa
push
in
fisttps
push
sbb
add
mov
push
fmuls
push
jp
jne
fiadds
popf
clc
mov
jg
cmp
pop
imul
ret
dec
sbb
insb
lret
pop
xchg
adc
xchg
clc
fimuls
mov
push
xchg
jle
push
add
mov
push
lret
pop
movw
xor
sub
shll
cwtl
rorb
clc
das
stc
mov
loopne
testb
pop
ds
cmp
lcall
and
pop
xchg
push
push
mov
push
add
mov
adc
arpl
aaa
mov
xchg
add
cld
pop
push
jg
inc
das
insb
jmp
lea
cmp
push
sbb
dec
loop
into
mov
clc
mov
sbb
sbb
in
xchg
sbb
iret
push
pop
add
fadds
sbb
mov
pop
jge
xor
test
call
loop
or
out
xor
mov
je
cwtl
andb
je
add
pop
neg
or
add
jmp
fidivrl
pop
sub
and
pop
pop
or
push
jnp
mov
jmp
or
add
inc
cmp
mov
inc
xchg
mov
cld
add
cli
repnz
stos
clc
mov
pusha
rcrl
rcrl
mov
ja
xlat
pop
push
and
pop
cld
xchg
adc
fstps
mov
scas
aam
inc
xchg
mov
aas
pop
add
aas
push
xor
or
je
mov
cld
xchg
push
cld
add
cmp
pop
and
lock
lods
mov
adc
mov
sub
push
out
popa
subl
adc
or
pop
mov
and
xchg
pop
pop
hlt
inc
cld
add
mov
fmuls
fisttps
sbb
ja
push
jle
clc
mov
mov
jmp
fwait
arpl
decl
test
or
mov
in
int
cld
dec
jmp
dec
sub
add
cmp
fs
adc
outsb
dec
dec
jne
mov
cld
aam
decl
jge
and
aaa
add
dec
jmp
and
cmpsl
xchg
inc
inc
pushf
sbb
add
pop
or
and
dec
jne
mov
or
loope
mov
dec
pop
and
lea
jmp
mov
aaa
cmp
add
rolb
imul
xchg
dec
pop
dec
pop
dec
add
sbb
pop
pop
dec
mov
adc
pushf
and
and
sub
loopne
jmp
aam
ja
lret
cmpsl
push
clc
inc
das
lods
jp
icebp
mov
add
add
dec
cmp
adc
je
push
cmc
mov
adc
pop
adc
push
inc
es
mov
or
int3
pushf
out
and
ds
fucomip
sub
dec
jl
cmp
jge
sub
xor
mov
inc
sbb
adc
fst
mov
scas
xor
xor
jmp
inc
jmp
and
inc
pop
dec
xor
sub
cmp
lret
jl
sub
clc
fisttpl
sub
mov
add
stc
add
lea
inc
xchg
cmp
movsb
push
push
dec
addr16
pop
lret
or
lahf
cltd
mov
jg
mov
inc
dec
jge
cmp
adc
imul
xchg
gs
cmp
mov
mov
lea
add
or
clc
mov
in
add
xchg
xor
mov
push
mov
dec
js
mov
inc
jb
adc
adc
sub
in
pop
push
faddl
xchg
fsubl
and
cmpl
cld
aas
inc
sbbl
clc
add
sub
push
push
or
clc
pop
push
jecxz
or
and
lods
jmp
xor
sbb
arpl
cli
pop
ret
aad
icebp
pop
out
faddl
push
and
xor
xchg
loopne
cmp
loopne
mov
cs
sub
out
cmpsl
in
cmpsl
push
cmp
insl
bound
scas
mov
sub
push
pop
in
pop
adc
ss
add
cmp
pop
pop
cwtl
jle
cmp
ffree
pushf
nop
add
cmp
add
dec
jl
sbb
int3
pop
pushl
mov
xor
mov
pop
add
and
cwtl
mov
add
add
sahf
inc
cmp
cs
add
jb
and
stc
mov
inc
and
ss
cmpsb
add
pushaw
and
push
cvtps2pd
or
xchg
xor
stc
movsl
pop
or
mov
sti
add
pop
dec
cmp
jbe
sbb
sub
cmp
cs
clc
loope
lods
add
add
xchg
pop
loope
xchg
imull
test
je
jle
cltd
ss
push
sub
push
cmp
iret
jne
enter
sub
shll
sub
dec
lea
or
adc
adc
jp
push
mov
hlt
xchg
jg
sbb
pop
movsb
das
sahf
mov
xchg
fildl
push
add
or
or
pop
icebp
pushl
or
je
cmp
mov
je
mov
add
cwtl
cmpsb
xor
inc
adc
or
adc
jmp
xchg
aad
push
or
ficomps
dec
cs
adc
cmp
pop
jmp
cmp
add
repnz
lock
xchg
popa
xchg
push
cmp
sbbb
addr16
dec
pop
call
fs
stc
push
loopne
adcl
ret
mov
out
push
pop
jbe
test
xchg
rolb
push
mov
cmp
mov
int3
jg
inc
and
sti
aaa
aad
cmp
emms
xor
push
jmp
es
push
pop
push
dec
mov
pushf
nop
lret
or
aam
cmp
jmp
test
test
aaa
addr16
and
call
mov
adc
jl
jmp
add
sbb
xor
mov
pop
fdiv
add
cld
add
clc
push
push
add
cmp
je
sarl
add
loope
sbb
dec
pop
push
mov
cmp
xor
fmull
or
je
or
jo
imul
adc
and
mov
fs
cmp
pop
add
jge
test
in
ss
lea
int3
mov
jno
repnz
call
cmc
mov
inc
cmp
pop
jmp
aas
add
mov
int3
outsb
jns
xor
xlat
inc
pusha
sub
fsts
ds
cld
dec
push
in
jne
shlb
pop
sbbb
and
mov
in
dec
movsl
push
cmp
popa
jge
and
nop
xchg
pushf
clc
mov
pop
mov
cmp
shl
dec
ss
jp
cmp
adc
les
mov
add
es
ja
sti
add
jno
popf
fiaddl
aaa
inc
ljmp
out
js
inc
add
add
je
cmp
ja
leave
dec
sar
inc
jmp
popa
add
sub
pop
ret
lea
cld
je
mov
xlat
sar
cli
pop
mull
mov
sbb
ror
call
ret
nop
push
mov
jne
cmp
lsl
cmc
mov
cmpsb
daa
jo
mul
push
fildl
repnz
mov
sbb
insb
shrb
mov
test
jg
cs
mov
inc
jl
jnp
ss
lods
dec
xchg
rcrl
lock
fdivrs
push
pop
inc
add
movb
xchg
cld
push
xor
call
inc
cmp
je
testb
test
mov
mov
mov
inc
fadds
add
roll
loopne
jge
jge
pop
sbb
fwait
mov
imul
sub
fidivrs
lahf
add
inc
loopne
push
in
mov
pop
decl
add
outsl
loopne
scas
mov
fidivl
rcl
in
xchg
jge
or
out
out
fwait
xor
dec
sbb
dec
in
push
jmp
aaa
jnp
adc
into
stos
xor
or
dec
sar
fldl
les
add
mov
or
adc
test
add
push
cmpl
jle
cwtl
or
xchg
dec
lcall
inc
mov
fimull
xor
mov
lea
daa
test
push
dec
jne
enter
mov
mov
push
adcl
mov
lock
jne
test
adc
push
loopne
xor
adc
and
sbb
scas
adc
dec
jg
add
push
push
lock
out
pop
pop
mov
loop
aas
or
in
sbb
push
rcrb
cltd
enter
shll
cmp
addb
adc
sarl
dec
divl
ljmp
adc
je
pop
mov
mov
adc
pop
inc
popa
or
lock
adc
roll
loopne
jbe
adc
jae
aam
aad
or
mov
ret
adc
jecxz
mov
cltd
sbb
cli
pop
jne
je
mov
ds
mov
push
clc
daa
mov
cwtl
push
jne
push
inc
pusha
cmp
test
push
and
daa
js
pop
or
pop
test
sbb
mov
rcll
daa
mov
in
pop
inc
inc
mov
cmpb
cmp
js
pop
and
jl
and
pop
add
aas
in
cmpb
add
lods
test
je
and
add
add
in
fstpl
insl
jno
mov
sub
add
inc
cmp
rorb
push
push
push
les
addr16
imul
in
and
je
xor
loop
mov
lea
ret
fwait
jg
movb
mov
sbb
push
mov
ss
jg
push
lahf
test
lods
xchg
repnz
mov
jae
imul
gs
xor
cs
insb
pop
inc
gs
outsl
lret
ljmp
push
popa
je
dec
popa
insl
gs
daa
outsl
loopne
mov
jecxz
sub
out
and
push
xor
movsb
cmp
xchg
sbb
and
push
push
js
adc
loopne
repnz
rcll
push
or
pop
push
inc
push
call
mov
or
je
aas
iret
sub
add
xchg
mov
mov
repnz
enter
push
fadds
sti
lcall
push
lods
repz
loope
jmp
js
push
xor
cmpb
dec
nop
jge
call
shrl
xor
jnp
sbb
add
sti
int3
hlt
dec
cmpb
stos
pop
cmp
jne
adc
daa
je
popf
inc
sbbb
sub
fmuls
push
int3
sbb
add
insb
xlat
mov
sub
icebp
je
das
ret
inc
xor
xchg
jecxz
insb
cmc
add
mov
outsl
data16
popa
jb
outsl
or
popa
insb
gs
aaa
add
sbb
cmp
inc
daa
fdivrs
pop
dec
add
in
dec
mov
pop
mov
adc
loopne
mov
outsl
mov
inc
mov
pop
loopne
push
jp
mov
negb
mov
pop
fadd
icebp
mov
mov
dec
lods
push
js
or
fdivrs
cli
mov
cmp
push
inc
bound
sbb
sbb
mov
lock
xchg
push
jno
mov
mov
xor
or
pop
int3
mov
mov
je
jns
mov
inc
xchg
push
cmp
mov
or
mov
pop
mov
movsl
cmp
jne
pop
cs
add
sbb
inc
shr
ret
cwtl
hlt
pushl
or
or
icebp
sub
data16
pop
mov
inc
popa
test
xor
insl
xor
scas
dec
push
inc
mov
sub
rep
mov
mov
push
push
mov
inc
pop
mov
loope
dec
pop
sbb
pop
xchg
ret
sbb
sahf
loopne
push
in
loopne
cltd
jns
and
or
sbb
or
aam
mov
mov
popa
test
or
xchg
pop
add
dec
js
test
lea
int
fadd
cltd
xor
push
loope
push
ja
xchg
push
dec
stos
ds
push
sbb
mov
aad
pop
sub
add
leave
dec
xchg
dec
ljmp
dec
inc
cmp
ja
mov
inc
jmp
cmp
push
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
adc
push
and
sbb
and
lret
add
mov
test
and
and
jg
dec
rolb
dec
or
cmp
pop
rcrl
mov
add
or
xor
loopne
dec
jbe
pop
sbb
cld
flds
inc
add
jb
lea
ret
test
sbb
mov
hlt
sub
mov
dec
ret
mov
rcl
divl
cld
inc
xor
hlt
les
decb
cli
mov
inc
test
je
or
jae
jge
loope
and
je
cmp
adc
mov
and
cmp
psraw
stc
into
test
loop
sar
pop
pop
shl
or
mov
pop
lea
xchg
mov
mov
loopne
adc
lahf
add
lcall
cs
adc
or
movl
shr
inc
mov
ret
xor
scas
sbb
in
xorb
les
or
jb
inc
sbb
loope
idivb
inc
ficoms
jae
ret
popa
movsb
inc
cltd
mov
leave
xchg
dec
mov
je
adc
lea
loope
aas
cltd
std
xor
pop
xor
inc
push
and
jnp
push
xor
or
jmp
in
ror
mov
test
cmp
sub
pushf
mov
pop
pop
mov
lods
addb
fadds
xor
inc
aaa
movsb
xor
repnz
cmp
jns
inc
push
cmp
je
pop
xchg
pop
cmp
inc
pop
ljmp
rorb
outsb
out
ds
sub
push
mov
sarb
add
mov
xor
lea
pop
aas
les
mov
repz
or
add
push
xchg
push
pushf
jbe
push
or
mov
push
xor
pop
lea
push
push
sahf
cltd
pusha
lock
stos
mov
loopne
pop
es
je
xor
pop
lock
cmp
loop
out
mov
dec
add
in
and
xchg
xor
aam
adc
xor
or
stos
mov
test
sbb
movb
aam
pop
xor
xor
gs
xor
and
dec
xor
and
cwtl
popa
xchg
daa
fbld
adc
call
xor
mov
sub
adc
clc
add
cmp
pop
jmp
in
or
sub
bndstx
ja
and
jmp
in
loopne
pop
pop
or
push
push
dec
insb
sahf
sarl
and
inc
cmpl
pop
pop
ds
je
xlat
jge
or
mov
sub
mov
leave
jne
mov
imul
push
je
add
mov
adc
and
ret
mov
lea
arpl
dec
mov
test
cmpl
mov
dec
sbb
jge
leave
cmp
xchg
pop
sub
sbb
push
dec
adc
xor
test
pop
add
or
call
dec
jne
push
push
push
inc
mov
sti
push
add
add
push
or
or
pop
jo
pop
aaa
icebp
mov
jo
and
add
xor
aam
xchg
nop
mulb
and
outsl
fs
gs
fstl
inc
jb
jns
es
imul
mov
adc
inc
push
outsl
arpl
in
out
jg
inc
gs
jne
je
dec
outsl
je
imul
mov
jae
fbstp
ds
outsl
inc
arpl
or
or
imul
jle
inc
xor
xor
pop
cld
ljmp
bound
outsl
js
imul
ja
nop
aam
push
andps
ja
dec
inc
xor
je
dec
add
in
in
push
in
in
fs
inc
sbb
in
in
or
add
jb
xor
cld
inc
clc
hlt
lock
jb
in
call
jb
aam
in
jbe
int3
enter
in
in
mov
in
in
test
mov
pushf
cwtl
xchg
nop
in
in
mov
in
jl
je
in
in
insb
push
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jbe
jb
cld
inc
inc
inc
inc
outsl
fnsetpm(287
in
inc
inc
inc
aas
daa
daa
daa
mov
pmuludq
in
call
in
daa
daa
daa
daa
aam
int3
enter
daa
sarb
mov
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
xchg
xchg
daa
daa
xor
inc
je
xchg
xchg
xchg
insb
fs
pop
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
leave
enter
inc
clc
hlt
leave
leave
leave
leave
lock
call
leave
loopne
fcom
xchg
xchg
fcmovne
ror
mov
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
jb
mov
dec
inc
pop
jb
jb
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
inc
clc
xchg
xchg
xchg
xchg
hlt
lock
call
in
xchg
xchg
xchg
xchg
aam
int3
enter
xchg
sarb
mov
test
xchg
xchg
xchg
movsb
mov
xchg
xchg
xchg
nop
mov
test
xchg
xchg
je
insb
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
push
jecxz
xchg
adc
mov
rol
loop
or
xor
subl
ret
nop
or
sbb
sbb
mov
icebp
insl
test
or
and
cmp
mov
jo
xor
ret
xor
into
jne
mov
push
mov
movswl
add
inc
and
fisubl
mov
push
into
int3
mov
sub
mov
out
push
dec
popf
xorl
push
pushf
cmp
add
or
adc
add
and
dec
jp
je
push
mov
sahf
xchg
inc
lcall
not
ret
scas
cmpsl
inc
mov
and
sbbb
mov
stc
push
xlat
lcall
xor
pop
push
pop
mov
movsl
mov
sbb
add
mov
pop
xchg
sbb
sub
push
jbe
cmpsb
jmp
inc
or
nop
adcl
dec
mov
js
loopne
addb
dec
popa
gs
rcr
cmc
or
and
push
cli
inc
dec
add
outsl
scas
std
in
stos
inc
pop
push
and
dec
push
inc
push
dec
imul
adc
push
mov
push
push
pop
sub
pop
push
dec
pop
dec
dec
dec
inc
push
das
mov
test
push
dec
mov
js
xchg
and
mov
lock
dec
daa
shl
xor
icebp
repnz
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
leave
leave
leave
enter
leave
leave
leave
lret
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmpsl
test
stos
add
leave
fwait
pop
mov
js
xchg
insl
jl
outsb
mov
pop
outsl
or
outsb
push
dec
pop
add
push
ret
add
inc
js
gs
imul
bnd
adcb
insl
mov
in
mov
dec
gs
jo
nop
fdivl
fdivl
or
dec
jne
pop
cmp
gs
outsl
jb
cmp
dec
xor
aas
or
enter
outsb
mov
nop
scas
nop
add
adc
add
push
push
dec
sahf
pop
xor
call
or
adc
dec
jo
xchg
nop
adc
or
pop
mov
or
outsb
mov
xchg
pushf
cld
or
imul
outsl
nop
clc
pop
sbbl
jle
popa
outsb
addr16
jno
push
jno
jbe
inc
out
outsb
jbe
jb
pushf
pop
mov
insb
outsl
ja
mov
inc
push
or
xor
dec
cld
jle
push
scas
ds
pusha
jno
jno
dec
data16
imul
mov
scas
pop
mov
popa
popa
insl
jle
gs
loopne
sbbl
rcl
jae
or
in
adcl
inc
adc
push
ucomiss
outsl
imul
shll
aas
ds
or
inc
popa
jae
ficomps
mov
dec
sbbl
sbb
add
sarl
xchg
adc
addb
adc
pusha
mov
ds
add
pop
scas
push
jb
insb
xor
nop
adc
nop
xor
xor
mov
mov
mov
or
mov
imul
fbstp
inc
in
repnz
mov
popa
jb
popa
outsb
add
rorl
inc
jbe
inc
jbe
xchg
mov
popa
fsubl
mov
inc
push
bound
pusha
in
cld
mov
dec
adc
jo
inc
adc
pop
ja
adc
push
stos
and
in
push
mov
ds
stos
adc
arpl
enter
jle
add
aaa
xor
pop
dec
invd
push
mov
adc
inc
insb
jae
in
inc
jl
andl
add
push
popf
call
enter
push
mov
jb
popa
fs
les
pop
mov
push
int3
add
test
cmp
mov
cmpsb
aam
lret
and
mov
push
lods
jns
mov
xchg
adc
sbb
push
loopne
sbb
push
add
adc
ss
aas
xor
lock
dec
cmpsb
imul
and
xchg
push
fcoms
lods
outsb
arpl
cmp
xor
cmpb
in
push
das
mov
div
dec
mov
add
ja
sbb
mov
mov
push
insb
nop
adc
lret
mov
mov
mov
xchg
inc
mov
push
mov
insl
jl
jmp
aas
mov
add
adc
add
inc
js
mov
mov
mov
pop
into
inc
cmpsb
and
xor
fdivl
fbld
mov
mov
add
fdivl
cmp
cli
sti
ret
adc
fcoms
jmp
sub
mov
cmp
and
mov
ja
sub
mov
inc
inc
dec
mov
xor
push
pop
jg
inc
pop
add
lea
sbbb
aaa
mov
cmp
jbe
mov
int
cmp
repz
je
movzbl
push
push
call
xorl
mov
add
xchg
mov
loop
and
repz
jne
jle
ret
inc
inc
ds
mov
pop
add
mov
or
cwtl
jle
sarb
mov
out
and
sti
je
aad
repnz
loopne
out
sub
pop
sbb
movsb
mov
sub
add
cmp
lock
cltd
and
loop
leave
mov
push
sysenter
ret
pop
ret
shl
sub
add
sbbb
or
inc
imul
add
push
das
adc
mov
mov
cmp
add
mov
dec
add
repz
cmpb
jbe
adc
mov
fcmovnbe
jle
aad
dec
sub
clc
push
sub
jecxz
lret
inc
arpl
mov
pop
in
in
repnz
mov
push
mov
mov
outsl
or
adc
pop
mov
in
sub
sub
je
ljmp
jge
pop
fisttps
arpl
fsubr
cmp
push
push
or
inc
jmp
daa
and
push
decl
jp
mov
mov
or
aas
or
ja
lea
fdivrs
pop
xor
comiss
mov
xlat
jge
mov
mov
xor
in
dec
mov
aas
sub
jmp
lds
mov
add
pop
or
sbb
sbb
lods
loopne
cmp
xor
popa
jbe
mov
push
int3
lock
das
add
pop
lock
mov
inc
iret
and
sbb
adc
outsb
and
gs
dec
imul
decl
sbb
sub
je
jae
cmp
dec
mov
mov
xor
xchg
jb
push
stc
pop
or
sbb
or
jae
inc
dec
jne
int
outsb
and
into
or
jne
jns
testl
outsb
inc
mov
inc
dec
pop
ret
mov
xchg
push
xor
div
dec
movb
outsl
mov
mov
pop
pop
sub
sub
jbe
add
std
mov
sub
jmp
add
dec
jne
push
mov
sub
xor
push
and
loope
outsb
cltd
sub
repnz
jmp
daa
xor
dec
sbb
pushl
pop
dec
data16
loopne
sbb
add
dec
pop
mov
hlt
jae
cld
sub
fisttps
mov
add
outsb
dec
fcomi
orw
sub
mov
dec
add
loope
add
mov
andl
push
and
fistps
ret
add
lret
mov
sub
add
rorl
fdivr
mov
adc
mov
xor
cmp
sub
mov
fstsw
sahf
jae
fldcw
xchg
ffree
ffree
ffree
sub
pushf
loopne
rcrb
add
push
repz
frstor
push
jo
push
xlat
scas
or
cwtl
and
hlt
movsl
xchg
cmp
add
push
mov
inc
aaa
and
mov
aam
and
inc
sbb
and
adc
push
lds
lock
imul
lods
idivb
imul
pop
mov
push
mov
iret
mov
mov
pushf
or
sub
pop
xchg
adc
fcompl
mov
jg
mov
mov
fs
mov
mov
add
stc
outsb
push
fiadds
shlb
and
movb
pop
cwtl
movsb
outsb
test
jl
inc
jge
adc
add
adc
cmp
xchg
and
push
adc
adc
push
lock
xorb
adc
insl
lock
setne
cwtl
sbb
jo
push
ljmp
dec
pop
dec
pop
sti
jnp
mov
add
and
sbbl
pop
pop
add
mov
jmpw
sub
or
fsubs
out
mov
and
adc
adc
aaa
lret
in
cmc
ja
inc
sub
mov
mov
jle
adcl
xor
add
ljmp
cmpl
fcoml
push
adc
sub
loopne
add
dec
mov
mov
jcxz
cmpxchg8b
xor
add
inc
mov
outsb
orb
popa
sub
jb
notl
or
sub
pop
scas
testl
mov
mov
pop
leave
push
xor
pop
adcl
sahf
push
lds
xchg
push
push
cltd
fcomp
testl
cld
ret
jmp
aaa
xchg
push
mov
push
pop
into
cmpb
add
pop
cmp
je
add
data16
push
dec
xor
push
jmp
fisttps
mov
notrack
lds
add
arpl
push
dec
adc
inc
mov
out
mov
jg
sarl
jae
push
mov
mov
jbe
out
aas
pop
cmp
push
dec
or
push
push
sti
test
enter
and
pop
dec
add
pop
out
call
ficoml
hlt
clc
cld
push
jnp
or
insl
clc
movb
sbb
push
in
in
dec
and
xor
mov
ret
sarb
or
xor
adc
ret
dec
sbb
movsl
pushl
jnp
call
ss
mov
ret
das
lea
daa
xor
test
adc
pop
inc
cld
push
dec
imul
notl
mov
mov
loopne
pop
pop
ret
xchg
popa
sub
dec
and
dec
push
add
lret
pop
cli
mov
loope
lods
fsts
pusha
fmuls
add
jnp
and
xlat
scas
cltd
shl
pop
adc
xchg
mov
cmp
jg
repnz
mov
xor
xor
repz
mov
decl
loop
xor
je
dec
popa
pop
cmp
pusha
sti
jl
cli
ljmp
int
addr16
mov
rorb
jl
add
mov
xchg
jmp
push
test
cld
add
adc
scas
fs
cmp
lods
lods
inc
cmpsb
jb
insb
aas
divb
inc
dec
je
mov
mov
pop
sub
jbe
sbb
pop
and
lods
mov
mov
push
add
shll
lcall
jl
and
sbb
pop
pop
cmpsl
or
aam
inc
sbb
popa
xchg
mov
aas
mov
and
xchg
pop
ja
ja
xor
lock
pop
jbe
mov
mov
cmpb
add
lret
mov
mov
add
shlb
mov
cmp
mov
and
test
ja
and
adc
imul
or
sbb
push
adc
add
cwtl
ja
scas
jae
sbb
pop
out
xchg
push
fwait
rcll
push
out
add
jle
adc
or
or
jne
bnd
pop
insb
sub
jp
sub
addr16
lods
mov
call
sub
neg
fsubrl
jne
cs
and
lods
jmp
enter
cmpb
mov
sub
mov
and
pop
fldt
cmp
cmpb
or
pop
testb
jae
roll
xchg
pop
mov
rep
mov
xor
neg
aas
xor
mov
decl
cmp
or
jb
cmp
ja
imul
or
movzbl
add
and
in
dec
push
xor
cmp
or
jl
sbbl
repnz
ret
je
xchg
ror
ret
cli
ret
and
mov
lods
cmp
rcr
dec
pop
jne
lea
mov
lcall
mov
scas
sub
leave
push
dec
push
mov
mov
aad
xlat
pop
out
idivb
pop
aaa
xchg
push
loopne
jge
cmp
xchg
mov
popa
xchg
mov
sub
in
test
jne
cmpsb
mov
fsubrl
je
inc
sbb
test
push
mov
lahf
shr
mov
push
pop
outsb
adc
mov
hlt
out
adc
jg
js
cmp
jne
xlat
mov
cmpl
jbe
mov
aad
xor
or
dec
xor
inc
inc
mov
lods
and
jmp
mov
mov
in
add
aas
and
mov
mov
js
mov
add
mov
xor
dec
in
fadd
fdivl
or
push
and
mov
jecxz
dec
rep
sbb
stc
cwtl
pop
ds
leave
cmp
jo
mov
fisubrl
pushf
mov
outsb
mov
int
scas
lret
aas
mov
or
je
mov
inc
je
mov
ret
std
imul
mov
pop
push
jl
cld
cmp
jbe
mov
xchg
adc
adc
add
movl
pop
mov
pop
push
mov
push
inc
iret
dec
jl
sarl
subl
and
jno
lahf
mov
sub
stos
push
call
cmc
test
mov
outsb
jl
mov
jbe
ja
lock
stc
xchg
push
cmp
aad
icebp
mov
xchg
pop
or
in
in
test
add
mov
xchg
jle
cmp
inc
or
lret
mov
test
lds
lea
add
dec
fbstp
ret
jmp
add
push
insl
cltd
adc
lea
nop
xchg
mov
push
lea
shrl
push
push
xor
stos
or
and
hlt
push
std
das
pop
jge
mov
neg
jmp
or
enter
xchg
push
mov
scas
nop
add
cmpsb
mov
lods
mov
inc
dec
cmp
inc
mov
jmp
cmp
jne
pop
pop
push
mov
xor
mov
sub
lcall
adcb
outsb
cs
mov
repnz
aam
jmp
xor
adc
jo
cmp
add
jge
sbb
jle
mov
cs
daa
push
sbbl
adc
jb
rorb
push
adc
jge
movzwl
sub
and
mov
jge
lea
cmp
jnp
mov
add
fcompl
sti
add
ja
pop
insl
in
or
mov
add
lea
pop
clc
cmp
sbb
call
dec
cld
repz
scas
pushf
jmp
test
insb
jp
jg
dec
inc
dec
inc
dec
lods
or
sbb
sub
dec
aam
push
jnp
push
adc
jg
cmp
jl
pop
sbb
jbe
aad
je
mov
stos
neg
sbb
stos
jmp
neg
std
sti
inc
inc
mov
loop
movlps
pop
mov
inc
clc
dec
test
out
cs
push
mov
mov
incb
sbb
sub
add
call
mov
mov
mov
cld
insl
add
cli
adc
mov
iret
andl
in
stos
mov
enter
repz
inc
test
jne
subb
sbb
test
stos
xor
call
cmp
sti
add
je
inc
jne
fldenv
mov
ret
xchg
repnz
call
or
repnz
fwait
add
jmp
pushf
fwait
lods
mov
mov
mov
je
push
push
cmp
mov
fmuls
sbb
ja
jl
jle
mulb
loop
add
mov
or
testb
and
inc
add
and
and
adc
and
sub
inc
sub
sub
scas
xor
sbb
and
sub
jae
outsl
adc
xor
dec
xchg
jmp
sub
xor
fldenv
jmp
push
add
sbb
arpl
aaa
adc
mov
ret
fists
or
inc
push
pmaddwd
or
aas
ret
mov
movb
addb
subl
adc
clc
adc
pop
faddl
loope
adc
push
pop
std
sbb
rcr
scas
push
fnstsw
fwait
lods
aad
mov
testb
je
fidivl
jne
lea
mov
js
mov
nop
shr
and
add
push
pop
jmp
cmp
xor
stos
jb
jge
jns
lcall
cmp
pushf
or
cmpb
mov
and
dec
js
decb
and
pop
data16
fisttpll
or
add
jmp
mov
add
faddl
je
notb
push
shr
cmp
push
out
xor
pop
inc
jbe
adc
jecxz
addl
test
sbbl
addr16
adc
idiv
fndisi(8087
jl
mov
cmpsl
sbb
jae
dec
add
lret
loopne
push
in
insl
or
mov
or
mov
push
nop
sbb
lcall
sbb
sbb
sub
pushf
and
jne
dec
xchg
cwtl
call
mov
add
aas
and
ja
jae
or
ljmp
enter
sbb
into
cmpb
divl
pop
jmp
pusha
sub
je
mov
iret
dec
jge
icebp
inc
pop
das
sbb
push
adc
mov
f2xm1
fwait
cmp
cli
das
pop
push
fldz
cmpsb
xor
sub
sub
addb
mov
mov
or
cmp
icebp
je
and
fistpll
jmp
sti
inc
jne
inc
push
sub
pop
add
jg
jne
mov
popa
xchg
add
out
rclb
add
loopne
adc
aas
jmp
fcmovnu
sub
aas
dec
test
mov
push
test
insl
sbb
js
and
push
int3
fdivrp
sbb
and
add
jae
fimull
cmpsb
fiaddl
jmp
aaa
mov
adc
or
es
jnp
or
push
inc
imul
push
cmp
aaa
jge
xchg
add
push
xchg
push
dec
sub
cwtl
out
mov
push
ror
filds
add
xor
jmp
insb
mov
mov
scas
sbb
cli
lahf
lcall
fstpl
fwait
sub
push
fnstcw
leave
mov
mov
mov
fistl
cmp
inc
jl
out
xchg
mov
divl
cmp
adc
adc
jo
xchg
lcall
fwait
mov
jae
or
cmp
xor
push
je
dec
dec
insb
sahf
jae
jl
sub
add
imul
adc
mov
dec
shr
add
or
jp
xor
fstpl
fwait
push
ja
stos
pop
pop
add
mov
movsl
push
mov
pushf
ds
add
add
mov
inc
rorb
mov
fnstsw
imul
mov
iret
and
call
out
or
enter
loopne
hlt
pop
or
fldcw
xor
div
pop
xchg
pop
xchg
adcb
nop
add
xchg
punpcklbw
loop
divb
inc
test
lea
lea
add
jge
add
addb
cmp
daa
ja
and
jb
or
jb
sti
mov
push
sti
insb
cli
cmp
ja
adc
fisttps
int
push
mull
pop
dec
incb
jne
sub
roll
cltd
idiv
imul
loope
shl
add
sub
mov
stc
add
pusha
ret
or
add
rol
std
std
pop
inc
xchg
addl
aam
shr
in
test
jg
dec
cmp
push
clc
adc
or
inc
pop
xchg
ds
inc
outsb
dec
insw
rcll
es
adc
inc
rol
inc
inc
and
mov
lods
mov
jg
lock
or
dec
lock
imul
fcomp
sub
fcoms
mov
mov
pop
inc
push
loopne
cmp
xor
dec
pop
mov
mov
mov
aas
sbb
push
dec
aam
imul
cmp
jb
je
sbb
sbb
inc
jmp
ja
or
stos
sbb
dec
xor
hlt
mov
cltd
fld
test
add
decb
xor
or
mov
clc
jge
mov
addr16
xchg
inc
icebp
adc
pop
adc
shlb
push
xchg
adc
mov
fsubrl
cltd
cld
mov
or
inc
xchg
fiaddl
jb
iret
sbb
lea
mov
pop
lret
inc
out
cwtl
xor
ss
sub
divb
adc
fcomi
ret
dec
push
xor
pusha
in
clc
push
pop
or
mov
icebp
sub
and
rcrb
sbb
shlb
mov
add
or
sti
je
test
xchg
sbb
add
out
in
cld
pop
push
cmpb
jne
aaa
jp
pop
pop
add
add
push
lea
or
xchg
popa
div
lcall
in
add
jl
inc
lcall
out
in
mov
jecxz
dec
push
sbb
call
ljmp
sbb
cmpsb
cltd
mov
sbb
inc
push
adc
inc
aam
cmp
pop
lock
and
sbb
xchg
fisubl
std
cmc
inc
mov
mov
adc
adc
inc
or
jo
shlb
jne
cmpsb
add
int
or
sbb
jmp
cmpl
pop
add
sub
adc
or
add
mov
adc
xchg
ficomps
sbb
enter
and
mov
ret
xor
push
mov
push
mov
nop
arpl
xchg
gs
repnz
pop
addr16
iret
in
inc
and
daa
cmp
add
bswap
mov
jmp
and
jmp
lcall
jecxz
push
inc
cmpb
jne
push
subl
dec
ret
mov
ret
push
movsl
lcall
jns
pop
add
orps
clc
fadds
fimull
cli
sub
cmp
pop
mov
jle
fsubrl
pop
incl
mov
adc
jecxz
and
adc
call
sub
scas
insb
mov
adc
ret
jns
mov
add
lahf
mov
call
jne
cmp
jne
mov
xor
pop
jecxz
lcall
push
fwait
sbb
out
add
in
cmovbe
xchg
mov
sti
push
or
fcoms
add
pop
or
or
or
or
push
jae
int
out
jl
popf
sahf
or
cmp
mov
cmc
fneni(8087
jns
push
shll
xchg
add
push
and
xchg
test
icebp
mov
cltd
xchg
flds
add
popf
mov
lea
pop
and
repz
fdiv
or
mov
cmc
adc
mov
lock
sub
test
add
out
dec
lea
push
pop
push
mov
mov
je
add
jmp
out
aad
loop
push
mov
les
push
mov
pop
bnd
mov
les
and
xor
pop
mov
cld
xor
aad
out
addb
in
subb
dec
jg
je
mov
add
sti
fwait
pushl
pop
sub
je
pop
je
jmp
cmpb
dec
mov
hlt
mov
sub
je
add
rorl
jne
rolb
jmp
cmp
xor
mov
push
aaa
aad
mov
mov
mov
push
test
ljmp
mov
jmp
and
mov
call
mov
out
push
fsubrs
pop
ret
dec
fcomip
pop
sbb
popa
out
adc
add
jne
mov
movsb
lret
push
xchg
xchg
dec
in
sub
push
mov
jne
sbb
lret
xchg
xchg
xor
out
out
pop
cmp
addl
insl
push
cmp
daa
jns
adc
add
cmp
jae
lret
cwtl
inc
dec
ficoms
pushf
nop
add
xor
and
je
xor
pop
add
inc
pop
sbb
ret
add
sub
rol
adc
push
cmp
imul
or
or
lods
arpl
mov
jge
js
popf
cmpb
and
mov
or
push
imul
aas
dec
enter
sbb
push
test
jmp
mov
mov
sbb
sub
sub
sub
mov
adc
adc
stos
sbb
clc
inc
mov
js
adc
fnsave
and
jl
xlat
inc
in
popf
sub
dec
xchg
or
adc
in
add
add
jg
jae
jl
insl
mov
fiaddl
adcb
ret
jne
lea
mov
xchg
adc
mov
popa
cmpsl
or
clc
inc
sbb
js
sbb
test
cmpsl
adc
push
lcall
in
mov
cmpsl
daa
sub
clc
je
dec
movb
notl
push
sbb
cltd
call
lahf
jb
mov
add
lock
pop
psrld
sub
ljmp
adc
outsl
xor
sub
jae
jnp
int
popa
or
sbb
scas
sti
sub
enter
js
add
je
pop
cli
mov
fimuls
or
dec
pop
mov
or
mov
nop
inc
adc
xchg
jb
xor
mov
or
or
popa
or
push
mov
and
or
imul
or
mov
sbb
push
mov
mov
push
jne
jl
pop
in
cmp
jne
incl
and
cmc
and
aaa
mov
jmp
sub
lcall
dec
je
sub
sub
je
jmp
mov
jmp
aaa
xchg
mov
es
push
inc
mov
jbe
out
clc
jle
fadd
xchg
pop
bound
add
mov
rorb
cltd
mov
or
pop
js
mov
addr16
scas
bound
or
and
sub
cmc
cltd
jp
movsb
mov
addb
jmp
test
push
xchg
aaa
sahf
test
add
mov
push
call
jne
cmp
jg
or
or
cltd
xor
sub
add
sahf
fs
call
sub
add
cmpl
jle
adc
pop
rcr
dec
push
and
out
cld
gs
xor
mov
xchg
psubusb
loopne
push
arpl
in
jmp
test
pop
mov
xor
jo
or
xor
shlb
xchg
sub
aas
add
xchg
mov
lret
mov
mov
ds
rcrb
mov
mov
dec
add
arpl
sub
out
das
dec
insb
lods
sete
mov
jae
test
dec
or
or
cs
jmp
hlt
lods
xchg
or
cltd
add
and
sahf
jbe
sub
sbb
sahf
lret
add
add
lock
loopne
shll
imulb
jb
in
call
jmp
mov
and
in
call
mov
hlt
push
xchg
xchg
sub
jmp
aaa
repnz
sbb
adc
cmp
jmp
lahf
push
adc
movsb
out
xchg
dec
and
scas
pop
push
jmp
cmpb
ja
ffreep
inc
push
add
fsubrs
push
fldenv
data16
out
in
out
into
lock
add
cmpb
jle
and
fs
jne
loopne
xchg
mov
add
or
xchg
or
ja
pop
jle
sub
dec
aaa
jmp
aaa
in
xor
cmp
fwait
pop
mov
and
xor
cwtl
xchg
jne
fmul
or
sarl
push
mov
fcmovnb
mov
push
add
fsubrl
imul
fcomps
das
xor
inc
repnz
out
dec
test
add
sti
into
test
and
mov
inc
outsb
mov
push
fs
adc
sbb
iret
mov
pop
faddl
aam
mov
and
pushf
sbb
in
loopne
mov
mov
or
adc
sub
pop
xor
das
jp
out
and
add
aaa
xor
imul
or
lret
xchg
enter
iret
je
orl
xor
push
add
pop
inc
or
fs
add
inc
push
test
jo
sbb
and
sbb
inc
ja
jne
loopne
ret
cmp
add
adc
sub
and
aad
sahf
add
pop
sub
mov
test
add
mov
popa
fsubl
mov
pushf
push
scas
dec
dec
cmp
jp
into
rcrl
sub
imul
pusha
shl
int3
mov
jno
cmpsl
pop
jl
mov
cltd
mov
xchg
aaa
jnp
xchg
test
adc
ret
cmp
jbe
jne
dec
lcall
daa
fst
fcomps
or
sbb
fwait
jmp
sbb
subl
sbb
jle
les
fisubrl
pop
push
dec
push
push
or
ror
push
xor
add
loopne
fbstp
sub
jb
or
xchg
or
jno
mov
enter
xchg
sti
mov
dec
rorb
cmp
test
mov
sbb
xor
sbb
xor
add
pop
xchg
stc
or
jp
rol
adc
ss
ljmp
jo
sbb
popa
pop
dec
push
add
mov
ljmp
mov
sub
fmuls
push
push
repnz
sti
iret
mov
lea
dec
push
pushf
pusha
pop
out
sub
mov
lods
inc
lock
ds
mov
inc
imulb
sbb
cmp
sti
or
mov
and
pop
add
shrb
testb
je
shlb
in
insb
xchg
int
dec
call
and
inc
xor
or
xlat
add
lods
mov
pop
jmp
pop
lock
fisttpl
push
jl
je
xchg
cmp
add
push
add
jbe
push
or
mov
lods
adc
mov
test
scas
xchg
sub
mov
push
out
inc
pop
aam
out
popf
mov
lock
and
insb
scas
jmp
mov
in
imul
push
cmpsl
mov
or
je
cmp
rolb
adc
add
repz
clc
cli
inc
mov
pop
xchg
ret
mov
hlt
push
push
add
loope
scas
fs
adc
aas
xor
and
push
jnp
or
add
cmc
dec
sahf
daa
add
or
ds
xchg
clc
test
addb
mov
sub
cmpsb
das
xor
mov
mov
jmp
mov
sub
je
pop
cwtl
push
sub
je
scas
ret
inc
and
imul
cmpl
fcompl
sbb
rclb
xchg
rcll
mov
add
jg
dec
cmp
sarl
add
mov
jo
cmovp
jle
sbb
aas
enter
adc
ret
add
push
orl
mov
jmp
pop
je
jne
xor
jmp
addl
mov
push
stc
mov
pusha
loop
dec
dec
xor
out
inc
es
push
addr16
sbb
add
sub
xlat
dec
sub
add
test
cmp
out
stc
fidivl
sbb
es
sar
subb
fnstsw
sbb
out
movd
add
test
dec
cmp
lods
rcrb
ret
xor
jmp
cltd
inc
out
or
popf
gs
mov
out
push
rolb
repz
ret
mov
sbb
fdivl
jnp
das
xchg
sub
lods
and
inc
loopne
and
mov
adc
fdivs
lcall
ljmp
jp
bound
sub
paddb
add
push
add
and
cmp
or
adc
jo
sbb
fdivl
lods
add
and
cmp
xor
mov
mov
cmp
mov
sarb
mov
xor
pcmpgtd
out
or
or
cmp
insl
mov
mov
fcompl
mov
js
sub
lods
and
lock
nop
inc
push
or
push
dec
inc
jmp
dec
or
dec
mov
cmp
mov
cmp
loopne
xor
xor
ss
inc
push
daa
nop
or
adc
test
lds
test
out
xchg
nop
add
jg
xchg
stos
jne
mov
xchg
mov
aad
add
adc
fistpl
sub
leave
or
addl
and
dec
or
cmp
dec
adc
sti
jecxz
pusha
test
or
fidivs
enter
adc
xchg
test
inc
add
pop
mov
clc
inc
lods
or
das
mov
js
addr16
ret
dec
mov
or
pop
dec
frstor
add
jno
jb
clc
lahf
xor
mov
jl
or
sti
push
jg
cmp
sbb
icebp
lret
cli
in
outsb
mov
iret
call
push
xchg
push
ss
mov
pop
aas
or
movsb
decl
push
and
ljmp
sar
lret
adc
ljmp
adc
adc
les
rorb
cwtl
and
add
inc
sbb
dec
pusha
or
ror
mov
jmp
adc
xchg
pop
jo
in
pop
loopne
cld
or
aam
shrb
orb
lcall
inc
jne
pop
cmp
in
sub
jne
or
jge
clc
mov
in
push
loopne
mov
adc
in
sbb
inc
loopne
gs
adc
mov
and
sarb
cmpxchg
lea
add
cmpsb
cmp
lock
pop
into
jl
jbe
dec
cwtl
sbb
mov
pop
cs
push
push
cmp
je
jmp
sub
aaa
jmp
xor
sti
aas
xchg
das
and
add
mov
add
push
xor
shll
or
or
inc
dec
rorl
xchg
pop
cmpsl
daa
cmpsl
and
mov
add
outsb
xchg
lret
movsl
cmp
or
mov
jnp
lods
pop
cld
sbbl
movaps
cmpsb
inc
xor
bound
test
or
or
arpl
popa
and
sub
mov
sub
cmpsb
dec
xchg
orl
add
mov
add
idivb
or
jae
or
pop
mov
mov
jl
add
xchg
adc
pop
outsb
sub
jl
mul
jmp
sub
jb
mov
leave
and
out
nop
cmp
cmp
dec
sbb
adc
adcb
sbb
or
dec
jl
dec
pop
xchg
mov
gs
mov
cld
std
rolb
or
fstl
mov
jae
jae
jo
neg
cmp
mov
jns
fdivl
hlt
add
mov
femms
lock
pushf
outsl
jo
cs
loopne
inc
outsl
cmp
push
enter
jp
dec
mov
xchg
xchg
cmc
aaa
scas
fwait
xlat
leave
xchg
pusha
nop
outsb
mov
dec
andb
sbb
fwait
add
mov
fcompl
push
loop
sub
push
mov
shrb
mov
iret
mov
sbb
add
sbb
sbb
pop
xchg
aaa
sbb
or
inc
or
adc
pop
pop
inc
cwtl
cwtl
adc
pushf
mov
inc
mov
adc
sbb
nop
shl
and
jb
push
insb
lcall
dec
push
sub
aas
mov
xor
mov
mov
and
mov
add
or
jmp
mov
cmpb
or
adc
cmpb
mov
cmp
mov
adc
jne
cmp
pop
xchg
mov
fucomip
clc
jne
pusha
xchg
sarb
add
cmp
scas
pop
int
mov
sbb
push
cltd
jae
aaa
push
jmp
mov
fisubrs
testl
push
into
ja
xor
sub
and
loop
mov
push
adc
enter
imul
out
data16
push
push
jg
data16
pushl
mov
sub
dec
or
test
jmp
dec
cwtl
adc
aas
or
jb
mov
sub
and
jns
or
adc
dec
or
inc
testb
test
rcll
add
xchg
add
xor
cmp
mov
jp
inc
lods
in
xor
cmp
add
pop
daa
xor
ja
fidivrl
or
xchg
cmpsl
lods
rolb
xor
jle
pop
jg
mov
scas
das
adc
jl
mov
adc
sti
adc
push
scas
shl
inc
inc
inc
jge
shlb
das
clc
dec
push
sbb
dec
and
xchg
rcrb
or
mov
fstps
jge
insl
adc
jl
jne
sbb
inc
mov
push
adc
xchg
cmp
adc
mov
mov
mov
cmp
aas
sarb
cs
push
inc
xor
fisubl
sub
or
adc
sti
jnp
pop
xchg
or
or
mov
and
test
inc
xchg
pop
iret
fisttpll
es
jge
pop
mov
mov
or
push
inc
sub
pop
arpl
ret
daa
push
daa
xor
in
xchg
push
das
pop
and
push
push
jb
fwait
add
dec
and
scas
lcall
push
push
sbb
inc
adc
insb
adc
shr
and
in
popf
push
cmp
loop
ljmp
sub
inc
mov
rolb
ljmp
je
mov
js
jge
jb
iret
push
sbb
and
adc
or
and
cmp
addb
add
je
scas
push
push
and
clc
sub
aaa
fimull
push
outsl
inc
inc
add
add
sbb
ret
sub
jbe
push
push
xchg
js
cmpsl
daa
push
mov
or
mov
lcall
daa
enter
jo
xchg
testl
mov
test
sbb
cmp
add
inc
or
inc
jne
and
mov
stc
adc
xchg
and
push
cmc
pop
hlt
xor
pop
aad
xchg
cmp
or
mov
xor
ds
in
push
mov
fwait
js
div
jg
fidivs
push
mov
sub
jb
inc
mov
mov
js
fdivr
stos
sbb
lret
jne
int
inc
test
or
inc
jne
mov
movsl
enter
pop
ja
mov
insb
pop
pop
or
setb
inc
ja
daa
imull
movl
inc
add
scas
jnp
mov
xor
dec
data16
push
sbb
enter
xchg
loopne
dec
shr
mov
or
test
andb
xlat
or
xchg
mov
movsl
sbb
add
xlat
fucom
pop
sub
pop
mov
test
inc
mov
sbb
pop
outsb
mov
popa
mov
push
xchg
mov
inc
inc
cmp
sti
jne
lea
pop
push
pushf
jo
push
scas
movsl
call
imul
rorl
and
ss
jne
jmp
int
loope
push
lcall
sub
add
arpl
mov
add
add
out
loopne
jp
and
stc
push
and
add
leave
jnp
mov
lods
pushf
mov
sahf
je
pushf
mov
xor
mov
mov
cwtl
ss
imul
lea
adc
iret
mov
mov
call
sti
xor
cmp
mov
push
xchg
push
sbb
mov
mov
xchg
mov
pushf
pop
jb
shlb
loopne
mov
movsl
dec
aam
lods
and
in
cmpl
mov
push
fstps
sub
jb
sarb
sub
mov
push
sarb
sub
xchg
in
int3
mov
inc
test
out
enter
cwtl
or
adc
fadd
call
xor
daa
and
aas
sbbl
rol
add
hlt
mov
insb
ja
and
push
push
hlt
mov
dec
jge
fdivrs
pop
or
in
movsb
lock
mov
aad
aam
inc
jle
mov
or
pop
push
insl
das
fs
add
scas
insl
add
fs
das
fwait
dec
fistpl
insl
pop
jo
mov
push
sbb
and
pop
sbb
push
dec
cmp
pop
push
cmp
into
add
inc
jbe
adc
xchg
jbe
test
dec
dec
mov
aaa
mov
mov
int3
aam
mov
adc
dec
es
in
push
mov
test
int3
adc
int
insb
sub
mov
mov
leave
loope
or
add
jge
mov
xor
push
les
sbb
lods
pop
jmp
clc
mov
loopne
les
inc
repz
stos
mov
or
xorb
adc
dec
add
jb
rcrb
call
push
push
and
mov
loope
test
pop
or
and
add
sar
or
inc
jb
gs
jo
sbb
js
add
xchg
lock
inc
dec
clc
xlat
inc
pop
call
dec
ret
xchg
dec
and
jge
sbb
adcl
mov
or
insb
and
or
mov
or
push
inc
cmp
jne
mov
and
and
jle
jl
fistpll
cmpsb
mov
inc
jmp
push
fiadds
or
movb
loop
xor
fidivrs
mov
in
xchg
add
ljmp
ljmp
sbb
mov
test
inc
movl
or
mov
scas
mov
daa
les
adc
mov
daa
mov
rcll
fs
or
repnz
call
pop
or
lea
loop
xlat
push
test
or
mov
dec
js
sbb
outsb
aas
add
jns
mov
shlb
lock
imul
xchg
mov
adc
pop
adc
scas
rorl
push
js
pop
or
xchg
es
outsb
testl
mov
les
rcrb
cmp
pop
mov
push
rclb
cmp
push
sbb
push
sub
inc
mov
adc
clc
mov
das
decb
and
jl
mov
adcb
xchg
sbb
mov
subl
seta
mov
lea
mov
jmp
and
out
adc
mov
das
add
cmp
insl
jne
scas
orb
mov
xchg
sub
das
dec
cmp
sete
incl
xor
pop
cmp
out
add
dec
sbb
sub
sbb
push
inc
rorb
jg
in
add
lret
mov
dec
lret
pop
fbld
lock
scas
add
or
add
inc
cmp
test
xor
pop
faddl
xchg
pushl
insl
dec
inc
jl
shl
mov
movswl
dec
or
mov
inc
xor
inc
xor
lock
sbb
stc
rorl
stos
jmp
mov
sub
jmp
pop
nop
adc
xor
add
es
inc
testl
mov
or
push
pusha
adc
scas
std
hlt
pop
xchg
cmp
int
fildl
or
pop
inc
enter
cmp
testb
iret
pop
mov
or
mov
cmp
and
mov
int
sbb
aad
movsl
prefetchw
or
push
fs
fdivs
lret
mull
fnstcw
and
pop
nop
pop
out
mov
in
sbb
fs
jmp
sbb
shrl
cmp
push
mov
es
je
mov
inc
add
adc
dec
pop
sarl
hlt
loopne
in
pop
and
iret
sarl
iret
nop
faddl
int3
repz
idivl
les
jl
push
rcr
cmp
mov
lods
or
jle
cmpsl
jne
jnp
push
or
iret
repz
clc
test
fdivrs
cmp
sub
fs
jle
iret
sarl
cs
push
insb
push
dec
xor
stc
sahf
out
dec
aam
push
xor
mov
mov
sahf
cmpsl
sub
and
sbb
or
ja
sbb
es
cmp
outsl
aas
sbb
adc
leave
xor
or
daa
iret
add
add
cld
adc
negb
hlt
cs
repnz
push
mov
in
js
fmulp
jae
or
mov
loopne
in
jns
fcompl
sbb
xchg
je
mov
fwait
cmp
mov
les
mov
fdivrs
mov
or
cmp
iret
mov
lods
mov
test
xchg
out
push
mov
out
in
pushf
mov
leave
cmp
nop
mov
cmp
mov
fs
add
je
cmpl
enter
jb
dec
add
pushf
in
mov
stos
call
repz
push
cmp
mov
enter
cmp
add
sbb
xchg
adc
gs
mov
fiadds
mov
les
cmpsl
jge
inc
push
fsubs
or
arpl
and
cs
and
sbb
enter
sbbb
in
aam
shlb
mov
popa
daa
iret
sub
cmp
xchg
iret
inc
scas
add
mov
add
enter
cmpb
mov
mov
test
test
cmp
sti
shrb
lods
fwait
sbb
js
pushf
xor
push
movsb
push
mov
imulb
cmpl
or
jmp
data16
ljmp
int3
jl
mov
dec
outsb
cltd
movsb
notl
or
or
in
jp
inc
pop
inc
pop
enter
adc
mov
adc
xor
sbbb
adc
add
and
ret
es
and
sbbb
xchg
cld
in
push
aam
xchg
sbb
rcrb
repnz
add
and
sub
dec
pop
leave
addl
clc
clc
jecxz
ds
adc
push
lcall
xchg
push
hlt
push
cmc
jb
test
rclb
add
mov
bound
rcll
sub
or
dec
rolb
dec
mov
cld
or
xor
jecxz
mov
repnz
push
nop
filds
add
mov
enter
xlat
lods
subb
leave
pop
push
or
jl
adc
mov
dec
xor
out
imul
nop
in
in
xchg
nop
mov
pushf
shl
jns
xor
mov
loop
jecxz
mov
add
ret
iret
or
push
push
pop
mov
int3
mov
dec
movsl
sbb
sub
mov
js
xchg
dec
xor
and
cmp
lods
nop
and
dec
xor
xor
mov
xor
and
sarb
ror
cs
dec
enter
xchg
push
cs
shlb
fcom
cs
push
cs
fdivr
ds
xchg
push
clc
fsubl
fimull
xchg
inc
loopne
sbb
cmp
sub
mov
cmp
sub
dec
dec
sub
inc
sbb
hlt
sbb
jne
pop
sti
mov
push
or
xchg
fistpll
daa
dec
add
outsl
je
fs
repnz
push
jne
das
dec
jne
inc
imul
push
cltd
mov
dec
jb
pop
outsl
jb
xchg
das
inc
insl
jo
inc
jb
insl
push
je
pop
test
sbb
int
xor
jns
jbe
dec
sbb
inc
jae
pusha
outsb
and
inc
jns
pop
in
push
pop
outsl
cmpsl
fidivrl
aaa
xchg
dec
cmpsl
sbbl
adc
mov
sbb
fcoml
call
pusha
movsb
icebp
push
rcr
lret
pop
fildl
and
xchg
xchg
push
iret
sar
add
add
adc
add
test
cmp
xor
ds
out
mov
sub
call
je
adc
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
cwtl
testb
addr16
adc
add
push
or
xor
setb
mov
cwtl
jne
fcomps
and
add
movl
popa
and
and
mov
cmp
push
inc
cmpsb
inc
dec
cmp
pop
and
in
sti
inc
jb
lret
mov
fldl
inc
popa
adc
add
pop
test
inc
mov
gs
push
enter
mov
orb
outsl
shrl
lock
ror
add
rolb
sbb
cmp
cmp
scas
inc
nop
sub
dec
insl
jo
shrl
xchg
push
push
mov
movl
push
outsb
divb
sub
push
and
sub
jg
loopne
push
dec
add
mov
cwtl
mov
adc
inc
and
shl
test
lods
mov
ja
imul
das
xorl
pusha
or
call
or
and
mov
jmp
in
loope
add
daa
xor
mov
add
loope
fistpl
jns
shl
loop
inc
dec
xchg
and
mov
add
or
stos
loop
jb
push
xor
mov
pop
movl
in
cmp
or
jg
loope
ror
stos
add
in
cmpsl
mov
mov
into
in
fistps
or
aas
dec
je
sbb
xor
cwtl
fs
dec
lahf
push
nop
es
jbe
fldl
sarb
mov
inc
push
enter
fisttpll
imul
clc
lret
inc
fiadds
pop
stos
hlt
mov
dec
sahf
hlt
mov
mov
sbb
in
mov
cmp
in
in
call
and
fistps
add
mov
sbbb
jnp
jae
dec
mov
loopne
mov
pop
jmp
mov
xor
in
fwait
enter
pop
rorb
jb
repz
add
fcomp
enter
dec
add
mov
jne
sub
add
in
rolb
jb
dec
loopne
or
les
push
ss
cmp
shlb
das
sub
sub
inc
fimuls
in
push
jbe
sub
cwtl
rcl
shr
adc
rol
jmp
scas
iret
cmp
add
in
sbb
jns
cltd
in
add
fstpl
fdivs
pop
pop
stos
lea
add
mov
adc
roll
shll
dec
adc
lahf
ret
jle
pop
and
jge
pop
xor
fs
cmp
inc
mov
insb
jnp
mov
or
pushf
xchg
jne
pushf
xchg
lods
xchg
mov
leave
shr
hlt
stos
mov
nop
mov
mov
push
rcl
xor
test
cld
mov
outsl
insl
sbb
testb
cs
add
andb
enterw
scas
out
cmpsb
or
test
dec
decl
jl
pop
les
adc
in
rorl
xchg
clc
jmp
and
mov
clc
movzwl
lock
or
outsb
add
inc
xor
lea
outsb
imul
call
clc
adc
sub
test
aaa
sbb
mov
xchg
inc
sub
inc
pop
dec
inc
rorl
sahf
jmp
inc
mov
dec
cwtl
in
xor
repz
dec
pop
daa
lock
lods
pop
fsubrl
out
fwait
or
pop
test
and
mov
in
test
push
insl
fdivl
push
cld
nop
pop
pop
sahf
ret
jge
ret
xor
xchg
adc
or
cmpsl
aas
jmp
ret
wbinvd
cmp
jns
and
inc
sub
or
cmp
xor
div
and
jg
xor
cmp
and
movb
rol
aaa
mov
movsl
add
or
fnstenv
mov
call
outsb
push
jne
inc
push
and
aas
fdivrs
cmp
loopne
clc
fimull
sub
add
outsb
je
or
or
and
sbb
in
loopne,pn
nop
or
xchg
in
loopne
fstp
repnz
or
or
add
jnp
pop
jnp
pop
in
sub
adc
mov
push
movsb
test
call
inc
cmp
push
ret
sub
mov
xchg
pop
push
hlt
lret
fdivrs
adc
mov
out
cmpsb
dec
mov
fistpl
push
add
adc
xor
imul
mov
dec
call
add
or
mov
lods
dec
incl
adc
fstpl
rorb
xor
test
test
rorb
cld
push
inc
fcomp
jmp
sbb
push
rorb
or
mov
jmp
cmc
pop
jl
dec
out
cmp
je
pop
jne
and
adc
push
cmpsb
insl
or
add
or
icebp
push
int3
testl
lods
xchg
ss
lea
sbb
jo
pop
call
push
add
adc
xchg
add
shrb
pop
pop
and
adcl
ds
in
popf
push
mov
xchg
adcl
testb
and
inc
add
stc
cld
nop
imul
lods
ss
popf
aaa
test
es
lock
add
cmpsl
int
dec
push
inc
repnz
or
mov
call
repnz
in
jp
test
jno
out
addb
dec
and
adc
es
sbbb
and
inc
lea
jmp
mov
sti
jg
andl
xchg
pop
sarb
adc
ja
cmp
loopne
cltd
ss
pusha
pop
mov
xchg
pop
pushf
mov
push
test
enter
or
test
loope
sbb
jle
and
and
push
fistl
loope,pn
add
cmpsb
or
adcb
jns
adc
fcomps
das
mov
and
jmp
push
pop
sbb
adc
ja
fildl
sbb
lods
xor
cmpsb
inc
push
inc
xchg
psubq
pop
sbb
mov
cmp
ja
scas
xorl
adc
iret
repz
fs
rcr
imul
shl
pop
sahf
out
outsb
pop
inc
pusha
jl
mov
fs
jo
inc
jecxz
addb
sarl
mov
add
je
cs
lods
scas
xadd
in
test
xor
xor
fldcw
add
add
sub
sbb
jmp
push
inc
fstpl
nop
xchg
dec
lock
dec
repnz
add
sub
fistpl
call
aas
inc
xchg
in
mov
loopne
push
mov
pop
adc
dec
lock
fsubl
fmull
les
fcom
xor
dec
or
aam
loopne
jb
mov
cmpsl
loopne
lods
call
push
mov
enter
and
enter
mov
negb
in
lock
sub
lret
jmp
sbb
imul
pushf
rclb
test
add
sub
mov
add
xor
repz
test
stc
cmp
add
repnz
mov
imul
add
push
into
jmp
sbb
les
xchg
mov
mov
mov
jecxz
flds
mov
jb
mov
dec
xchg
fnsave
leave
lods
cmp
fisttpll
cmpl
popa
in
aaa
into
movsb
and
movsb
enter
mov
or
dec
pushf
cmp
lret
cwtl
xor
arpl
xchg
jmp
arpl
aaa
nop
dec
jbe
movl
in
sbb
gs
ret
add
dec
sub
cmp
out
cmp
pop
movsb
xchg
fildl
mov
or
mov
and
in
out
dec
push
and
jmp
mov
stos
mov
jecxz
or
pusha
hlt
cmp
dec
and
in
cmp
popa
and
push
jb
in
loope
push
adc
cmp
push
xor
sub
mov
imul
dec
ret
add
and
cmc
in
mov
dec
cmpsl
cmc
loopne
ret
mov
mov
add
xor
cmp
testb
jb
cmpsl
enter
cmp
push
mull
lcall
clc
data16
imul
negl
cwtl
mov
notl
jb
int
cmp
mov
add
mov
es
xor
inc
mov
pusha
ret
je
ret
lcall
nop
arpl
jno
ds
fwait
es
loopne
movsbl
nop
inc
aaa
dec
adc
jbe
aaa
aam
aam
xchg
xorl
jno
mov
sub
lods
loopne
pop
mov
or
insl
es
or
aaa
xchg
cmpsl
push
orb
sbb
dec
cli
pop
idivb
iret
and
inc
arpl
lret
fwait
xchg
push
inc
daa
mov
in
fcomip
push
ljmp
dec
cwtl
sbb
rclb
jbe
aaa
aaa
mov
mov
cmp
mov
mov
jne
mov
fwait
mov
cmp
orl
popf
add
adc
movsb
aaa
movsb
aad
xchg
dec
dec
jno
cmp
add
xor
pushf
cmp
mov
aaa
cwtl
jno
lods
or
aaa
outsl
mov
xor
aaa
aaa
in
nop
popf
enter
nop
aaa
ss
in
in
in
push
mov
ret
add
sti
mov
fadds
imul
lds
test
nop
xor
sbb
or
adc
and
bnd
mov
inc
xor
mov
jmp
movw
ja
push
test
movl
or
mov
insl
iret
outsl
cmpsl
sbb
or
adc
adcl
xchg
fs
jp
pop
or
mov
fistpll
push
lret
or
cmp
dec
push
nop
add
or
push
out
cld
outsl
or
repnz
cmpl
jb
mov
sahf
add
dec
sub
lods
mov
loop
mov
iret
inc
insl
jo
jns
cmp
jne
pop
int3
dec
rcr
push
insl
popa
inc
daa
das
aaa
mov
in
ficoms
add
inc
outsl
jne
inc
dec
std
filds
outsb
arpl
orb
mov
pusha
xchg
aaa
test
rolb
adc
arpl
inc
pop
fwait
shll
aas
push
outsb
imul
inc
arpl
sub
mov
iret
jb
sbb
inc
jns
andl
lods
dec
add
daa
test
ja
add
jle
pop
add
clc
fcoms
std
ljmp
decl
inc
xchg
loop
dec
ja
test
xlat
in
adc
sbb
xchg
cmpsl
inc
sti
imul
movb
pslld
add
adc
jno
add
jmp
sbbl
xchg
cld
stc
sbb
xor
jne
jne
stos
xor
dec
push
cmp
jo
lea
orl
and
cmp
test
repnz
sbb
inc
xchg
icebp
decb
ds
std
out
in
jge
xor
inc
add
sti
xor
test
inc
push
push
gs
inc
sub
shrb
add
out
xor
xor
inc
jno
xchg
lods
or
test
lahf
pop
les
push
pusha
dec
jle
data16
fmuls
xor
sbb
mov
cwtl
cmp
and
out
or
pushl
out
jb
dec
ror
and
out
sbb
movsb
out
movsb
std
add
push
or
js
hlt
xchg
push
inc
iret
cmc
movsb
stos
xlat
sbb
adc
xor
es
test
xor
jnp
je
outsb
adc
add
jnp
repnz
xchg
pop
pop
sarl
inc
jle
imul
mov
test
adc
add
mov
addb
mov
inc
mov
call
push
ror
mov
add
ret
xchg
les
push
sti
cs
sbb
mov
aaa
xchg
push
mov
add
cld
iret
subb
push
cmp
sbb
lods
jle
and
in
iret
andb
loopne
out
add
movsl
ljmp
loopne
mov
flds
popf
inc
addr16
je
lods
cmpsl
enter
mov
xlat
pop
fimull
push
push
adc
pop
xchg
add
rorb
push
mov
mov
jle
daa
jg
xchg
cld
enter
jns
mov
sti
cmp
in
setg
inc
mov
lods
repnz
shll
jl
fnstenv
and
iret
add
add
ret
daa
lock
nop
or
scas
add
roll
pop
xchg
adc
xchg
add
cmpsb
jl
inc
xor
cmc
nop
les
inc
sbb
cmp
or
inc
rolb
add
xor
imul
mov
or
dec
jne
cmpb
xchg
cwtl
add
mov
enter
int
aad
outsl
nop
pop
mov
cmpsb
jne
and
dec
pop
js
xor
lea
incl
mov
adc
sarl
cld
aaa
fadds
mov
add
out
loope
pop
jbe
subl
dec
mov
push
mov
jo
adc
mov
dec
adc
nop
xor
outsb
in
and
inc
cld
sbb
lret
lret
sbb
mov
arpl
lret
dec
and
sub
call
inc
jle
lods
lods
inc
inc
inc
inc
scas
scas
nop
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
cwtl
cltd
inc
inc
inc
inc
lcall
inc
sahf
lahf
addb
addl
xchg
add
sbb
cmp
push
add
ret
jo
cltd
lods
stos
cmp
outsb
add
push
add
xor
dec
xchg
mov
add
adc
sub
push
sbb
decl
mov
xor
test
jne
sbb
inc
mov
dec
xor
cmp
jle
inc
adcb
aaa
xchg
adc
in
outsl
mov
mov
and
js
jge
loopne
jmp
lea
cmp
in
cmp
adc
jb
pop
testb
mov
push
inc
or
sub
loopne
dec
rcr
cmpsb
fisttpl
mov
add
jo
dec
jl
or
inc
push
or
or
lret
je
stos
or
and
sbb
add
mov
jmp
jle
in
je
jmp
cmp
or
lret
sbb
dec
jne
xchg
call
notl
cmp
aas
pop
je
std
outsl
outsl
xor
push
lar
decb
ja
add
ltr
shr
sbb
and
or
ret
idiv
jle
add
add
adc
add
mov
ficoml
jle
add
lcall
jg
aaa
mov
in
fisttpl
inc
inc
push
cmpsb
cli
shlb
lret
or
cld
or
ja
jb
add
add
call
out
sub
or
jo
scas
mov
push
lea
mov
jb
incl
cmp
pop
dec
and
daa
scas
lcall
hlt
in
pushl
mov
inc
mov
lods
cmp
lcall
pusha
and
ljmp
lret
fcmovnb
mov
mov
xor
ret
adc
xor
out
cmovne
push
push
add
dec
clc
inc
mov
cmovne
ds
fisttpll
aam
xor
lcall
nop
loope
or
and
adc
mov
mov
mov
sbb
jmp
xchg
or
or
adc
test
int3
stc
or
iret
push
lcall
inc
adc
or
jle
xor
add
or
popa
sub
cmp
idivb
hlt
pop
add
mov
stc
fs
jo
ret
rdmsr
sub
sub
jne
mov
imull
addr16
cmp
cmpb
dec
push
xchg
add
mov
pop
mov
pop
lods
add
mov
xchg
cmp
andb
push
xor
iret
push
add
cltd
lods
pop
cmp
add
ja
addr16
es
and
adc
scas
test
mov
cmp
inc
sti
test
xchg
out
faddp
push
iret
std
fldt
dec
fdivp
or
sbb
fucomp
push
movsl
lock
add
inc
mov
lods
pop
inc
or
cmp
or
jae
popa
and
pop
lret
add
mov
mov
jo
sub
cld
stos
or
xchg
aaa
or
dec
or
jne
mov
mov
jbe
sbb
fwait
and
push
out
sub
fldl
adc
dec
push
inc
push
fbld
outsl
xor
sub
repz
add
cmpsl
pop
sub
and
sbb
pop
jmp
sbb
sub
inc
jo
adc
push
or
int
inc
sbb
inc
mov
pop
cld
pop
push
lock
pop
jp
js
jno
pushl
or
testb
adc
mov
mov
xchg
and
mov
jae
inc
lcall
mov
or
dec
add
dec
popa
call
mov
mov
cltd
sti
fxch
mov
lods
jmp
cmp
or
jo
loopne
or
jne
imul
or
sbb
sbb
adc
or
inc
pop
mov
movsb
adc
outsl
push
in
xor
jmp
out
adc
xchg
or
inc
and
inc
xor
sbb
jg
add
push
inc
insb
imul
lret
clc
dec
sbb
imull
inc
dec
gs
popa
lods
mov
jns
sbb
push
lcall
inc
insb
popa
pop
sub
jl
or
inc
imul
bound
test
into
ficomps
nopl
adc
dec
outsl
or
cmpl
mov
dec
cmpsb
dec
outsb
insb
jns
jp
adc
scas
mov
pop
sbb
and
ss
push
mov
je
or
jb
or
ss
aam
mulb
fs
gs
es
xchg
test
or
mov
pop
add
dec
jg
ret
mov
add
ja
dec
cmp
xor
sbb
fidivs
or
dec
gs
lret
sahf
xor
insb
fldcw
and
inc
jne
mov
or
popa
pop
adcl
inc
jbe
pushf
or
mov
lds
lea
push
frstor
out
cmp
add
shrb
pop
in
inc
pop
xchg
mov
in
inc
popf
and
pop
cmpsl
inc
bound
xchg
mov
mov
dec
adc
xor
mov
adc
adc
outsb
mov
scas
cs
xor
ds
or
cs
cld
scas
add
ds
pop
adc
inc
pop
add
scas
pop
iret
adc
sbbl
pop
test
inc
sbb
nop
or
adcl
or
mov
push
jb
into
dec
imul
shrb
inc
imul
or
scas
fisubrl
pop
js
and
cltd
dec
addb
jo
push
mov
aam
aas
sub
test
cwtl
pushf
sub
push
nop
jb
or
adc
inc
dec
adcl
aad
jno
adc
pop
nop
mov
je
xchg
xor
jbe
push
mov
inc
sahf
push
add
xchg
xor
hlt
hlt
and
and
pop
inc
sarl
aas
mov
xor
pop
fcmovb
adc
cmpsl
int3
pop
repz
lods
push
mov
pop
loope
insl
xor
push
cmp
push
add
push
or
sbb
aas
mov
jae
add
jnp
out
pop
and
and
sbb
pusha
or
arpl
or
adc
int3
icebp
jbe
or
incl
or
add
fdivrl
nop
sbb
push
xlat
lea
mov
push
add
aas
add
and
adc
adc
mov
dec
mov
xor
notl
push
nop
cld
sub
cmovns
jae
fs
jo
test
pushl
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
or
cmp
into
jl
mov
push
sbb
xor
sbbb
push
sbb
push
mov
mov
inc
insb
inc
push
inc
sti
int3
jle
aas
lock
psubb
push
cmpsl
mov
and
dec
cmpsb
dec
push
shl
mov
pop
jbe
push
lods
inc
pop
or
fldcw
push
js
ss
fmuls
dec
iret
repz
sahf
push
nop
setle
sub
ret
sub
xchg
inc
or
sbb
nop
scas
pop
sbb
roll
add
dec
sbb
arpl
icebp
aaa
lods
aas
jl
notb
inc
xor
sbb
or
xchg
cwtl
dec
inc
push
push
je
into
lock
jl
pop
lock
dec
push
clc
ficomps
fldenv
push
pop
push
rolb
hlt
jbe
dec
cmp
mull
pushf
push
faddl
dec
push
pop
fcoms
clc
es
and
pop
outsb
mov
jle
push
enter
push
mov
pop
popa
add
pop
push
xlat
and
sbb
pinsrw
pop
daa
mov
ja
andl
test
jg
imul
test
pop
push
xor
repz
mov
out
js
mov
mov
fs
push
js
mov
fistpll
push
or
mov
jnp
lods
out
stc
and
mov
add
or
and
and
sbbb
sbb
in
sbbl
lods
pop
pop
push
inc
imul
dec
negw
repnz
sbb
je
divl
pop
add
daa
fiaddl
xor
sbb
jl
mov
add
call
pop
dec
andps
jmp
or
and
jb
adc
pop
jb
pop
sbb
and
add
sub
add
add
in
repz
inc
push
in
fisubs
call
cmp
ret
rolb
popa
outsl
ds
repz
mov
es
sub
cs
mov
movsb
push
ss
pop
aad
loop
rcrb
cmpsl
stc
aam
mov
xchg
out
sub
sbb
cwtl
push
jge
mov
push
cs
inc
mov
aas
cmp
mov
mov
and
add
mov
cwtl
sub
xchg
dec
scas
dec
pop
mov
pop
pop
push
in
and
in
adc
into
ljmp
fwait
int
cmp
pushw
pushf
data16
mov
imull
mov
ds
in
jbe
aam
xchg
divl
push
popa
jo
popa
call
adc
cmpl
jo
icebp
push
js
sbb
xchg
rcrb
cltd
sarb
mov
jno
cmpsb
jecxz
adc
mov
mov
scas
fmuls
mov
fsubrs
jb
xchg
out
lret
inc
cmp
aam
sbb
out
icebp
vhaddps
adc
loop
in
lcall
mov
xchg
pop
inc
int
dec
addb
push
and
sbb
and
or
cmp
ja
js
scas
jns
mov
push
xor
xchg
adc
les
pushf
xchg
inc
push
lods
push
movsb
xchg
jbe
mov
push
mov
fmull
bound
je
and
hlt
std
cld
sti
inc
fisttps
clc
push
push
push
push
push
push
loop
push
call
cmp
jnp
pop
push
pop
je
js
out
iret
addb
adc
jl
pusha
push
dec
xchg
push
or
nop
xlat
pop
and
add
mov
aam
incl
and
mov
or
pop
add
test
push
popa
addr16
loope
rcrb
iret
sarl
push
fdivrl
adc
mov
hlt
dec
push
inc
push
arpl
test
imul
pop
mov
pop
in
ss
push
push
mov
mov
mov
ss
push
and
hlt
inc
add
out
jmp
pop
xorl
sub
je
and
pusha
pop
lods
jp
push
dec
dec
fs
call
or
xlat
adc
popa
sbb
or
jl
test
push
push
in
sbb
leave
out
push
pushf
imul
nop
mov
dec
dec
dec
enter
std
cmpl
jne
add
je
repnz
mov
jne
in
and
push
inc
jb
jne
subb
and
sub
aad
fcmovbe
jae
mov
cmp
add
add
cld
sbb
push
mov
dec
adc
push
sbb
and
bound
imul
add
adc
adc
pop
push
xor
or
mov
pop
mov
rcl
shrb
std
popa
jecxz
add
cld
sub
mov
dec
pop
and
jmp
sbb
adc
jmp
outsb
jecxz
and
cmp
addl
push
fdivrs
ret
ljmp
add
sbb
sbb
cmp
pop
pop
sbb
fiadds
and
sbb
add
add
jo
je
and
or
sbb
xlat
pop
icebp
mov
inc
add
and
sbb
clc
mov
mov
fwait
test
mov
push
fldlg2
sarl
sbb
pop
cmp
loopne
or
sub
inc
jb
or
sub
push
inc
or
add
js
inc
dec
jne
cmp
add
leave
mov
push
adc
mov
push
cld
clc
and
add
and
mov
xchg
loopne
addb
or
jns
push
inc
and
xor
xchg
ret
adc
and
add
add
jo
xchg
popf
lock
mov
aas
dec
cmp
sub
ja
cmp
and
xchg
cmp
ret
sbb
je
sub
cwtl
add
nop
xor
push
push
push
fs
and
rorl
imul
fildll
dec
imul
popl
popa
mov
mov
je
ficoml
mov
and
sbb
imul
pushl
icebp
orb
pop
movsl
and
push
cltd
clc
push
mov
lea
push
icebp
ja,pt
repnz
add
fs
fidivl
inc
clc
mov
cmp
inc
adc
int
xor
inc
stos
scas
repz
push
jl
inc
xor
out
xor
rcll
dec
jne
mov
mov
mov
movl
and
jns
inc
sbb
xor
adc
push
jb
adcl
into
hlt
mov
insl
dec
loopne
xchg
popf
xor
jb
sub
xchg
dec
mov
and
and
clc
cmp
push
pop
jge
cli
dec
aaa
add
add
hlt
sbb
push
adc
jp
xor
xor
loopw
add
shlb
and
inc
lock
jne
and
fldl
push
sbb
xchg
les
mov
outsb
xor
xchg
jl
inc
push
call
mov
out
es
in
cmp
inc
pop
inc
cmpl
fcoml
icebp
cmp
push
sti
push
cmpsb
jecxz
fidivrl
pop
dec
jl
dec
call
rcrb
das
inc
ds
clc
sbb
adc
dec
add
pop
loopne
and
sbb
xor
push
pop
dec
dec
enter
mov
pop
shr
jge
and
int
shrb
mov
xor
xor
pop
cmp
testb
repz
pop
pop
dec
xchg
mov
mov
xchg
sbb
pushf
or
cli
pusha
xchg
enter
cltd
add
cmp
add
add
cmp
data16
mov
adc
mov
arpl
ja
leave
enter
pop
dec
cs
cs
xchg
sub
or
inc
addb
jns
push
fcom
bound
jae
pop
dec
sbb
xchg
pop
push
sub
or
push
and
mov
inc
mov
push
mov
imul
das
das
push
cli
mov
dec
sub
add
add
mov
push
rol
push
mov
lcall
jecxz
popl
xchg
cmc
in
lods
idiv
lods
das
mov
xor
mov
push
adc
das
cmp
imul
adc
jbe
mov
ret
xor
test
add
sub
xor
stc
push
pop
add
mov
sbb
sbb
mov
mov
cmp
xor
sbb
sbb
push
je
mov
insb
cmp
add
shrl
xorb
mov
sbb
add
inc
xchg
sub
push
enter
lods
xor
dec
jb
and
and
pop
test
sbb
or
mov
nop
inc
jno
dec
scas
fnsave
xor
dec
push
adc
aas
xor
or
mov
rol
loope
ss
addr16
icebp
and
or
or
and
sub
in
cmp
cmp
aaa
jo,pn
pop
xchg
mov
outsl
mov
fwait
push
cld
cmp
shlb
leave
or
pop
popa
and
stos
add
mov
or
mov
jbe
mov
js
js
mov
imul
ret
cs
aam
sub
outsb
loop
aam
pop
scas
add
mov
pop
dec
cld
mov
pop
adc
mov
mov
in
inc
lret
jp
test
sbbl
js
add
xchg
sbb
movsb
divl
out
add
xchg
mov
sbb
pusha
faddl
sub
push
mov
or
mov
dec
insl
and
mov
push
mov
jae
or
cmp
cwtl
loope
mov
pop
ud2
adc
mov
subl
xor
dec
cmpsl
adc
jg
add
hlt
out
clc
jmp
inc
push
sahf
push
mov
inc
push
popf
push
pop
xchg
lea
inc
dec
dec
xchg
dec
push
pop
mov
int3
sbb
js
jnp
inc
jbe
shlb
sbb
pop
ficomps
cmp
dec
mov
mov
or
sbb
sub
test
loope
test
dec
nop
sahf
mov
or
xlat
popf
push
mov
mov
inc
xlat
insb
mov
roll
pop
cmpb
push
push
xor
sub
and
mov
push
or
cwtl
andl
test
adc
cs
insl
arpl
dec
sbb
pop
pop
ss
push
aas
xor
cmp
cmp
pop
cmp
clc
je
mov
lods
ret
adc
cmp
push
pop
aas
je
les
cld
pop
jbe
pop
or
in
add
and
popa
ss
addr16
mov
sbb
fnsave
xchg
sbb
and
arpl
cmp
mov
ss
sub
push
ja
sti
push
push
push
push
push
and
jmp
sbb
cmp
sbb
push
insl
mov
adc
js
fists
mov
or
push
jae
loop
inc
aas
ljmp
incl
or
leave
fisubl
xor
sbb
mov
add
dec
adc
dec
mov
pusha
scas
movsl
int
mov
cwtl
cmp
stos
addr16
cld
shlb
xchg
mov
jp
dec
inc
fucomp
sbb
shl
loop
adc
or
fisttpll
mov
mov
icebp
sub
add
push
mov
sar
push
mov
stos
sbb
adc
cwtl
cmp
aaa
jmp
and
jae
cmpb
les
push
repnz
cmpsl
into
test
cld
xchg
ret
dec
filds
and
xor
xor
sbb
push
sbb
fmuls
or
mov
adc
or
push
xchg
xor
jmp
inc
sub
rcl
scas
sub
add
aaa
dec
clc
inc
cmp
jge
add
adc
jne
sbb
scas
push
rcll
std
jle
andl
jae
or
or
and
mov
inc
add
pop
lods
ljmp
test
mov
inc
fmulp
shlb
call
mov
xor
inc
nop
pop
scas
xor
enter
sbb
push
clc
xchg
movsl
inc
dec
ss
pop
scas
dec
test
shl
xchg
push
pushf
mov
and
mov
enter
lock
xor
or
sbb
or
or
add
sarb
mov
sub
jg
dec
hlt
or
es
dec
dec
inc
mov
mov
outsl
out
jne
adc
inc
pop
inc
mov
mov
stc
add
mov
sub
jbe
addl
mov
push
out
jbe
ja
push
inc
mov
or
in
pop
dec
jo
das
mov
or
dec
fs
cmpb
mov
xchg
inc
jne
sub
jmp
dec
add
add
repnz
push
sahf
or
or
push
sub
inc
movsl
pop
das
rcll
mov
mov
lds
bound
leave
pop
testl
inc
scas
mov
je
add
cmp
jbe
rcr
mov
js
test
jge
mov
in
cmp
dec
stc
pop
sar
mov
shl
pop
int3
lods
dec
sbb
call
out
je
inc
xor
dec
sbb
mov
push
mov
push
xor
or
mov
push
inc
mov
or
mov
fcmovnbe
adc
add
jmp
fsubs
fcomps
cld
pop
and
push
add
cmovp
sarb
stos
adc
btr
push
add
mov
jl
push
inc
adc
or
add
fidivl
fadds
add
adc
dec
testl
orb
xor
enter
test
cli
pop
ja
and
bt
jb
mov
xor
ja
dec
pop
cmpsl
mov
hlt
ret
jmp
dec
sbb
incl
and
inc
decl
jne
les
nop
das
push
xchg
aaa
xor
add
add
insb
xor
ret
imul
xchg
inc
shrb
sbb
inc
push
cltd
cwtl
sbb
fs
add
lret
aas
add
lock
enter
test
scas
adc
shlb
cmp
pop
pop
ret
mov
add
dec
jno
add
insb
add
les
sub
or
aad
sbb
popa
jg
mov
mov
popa
in
insb
insb
and
sbb
orl
mov
pushl
js
imul
fcoml
test
outsl
add
pop
push
fiadds
mov
add
add
test
xor
pop
adc
xor
inc
mov
sbb
xor
or
pop
add
jmp
aas
or
ret
pop
push
insl
xor
push
and
sbb
outsb
fldenv
mov
dec
or
aam
out
mov
jle
push
dec
and
es
or
dec
dec
repz
jnp
add
sub
cmp
cmp
outsb
and
and
popa
adc
int
push
ret
pusha
andl
add
mov
int3
pop
ds
dec
and
ds
mov
xchg
out
pop
inc
iret
xor
sub
xor
shr
icebp
lock
or
sub
call
fiadds
mov
mov
mov
mov
lea
cmc
in
inc
xor
mov
adc
adc
xor
inc
xor
sbb
imul
add
mov
mov
pop
lcall
adc
pop
push
push
jo
fcmovbe
add
inc
add
inc
pop
cmc
xchg
lds
hlt
cs
mov
aaa
mov
sbb
or
sub
ja
mov
dec
clc
ror
and
add
adc
jecxz
add
movsb
lahf
sub
inc
sbb
lea
and
push
push
dec
push
and
adc
mov
imull
adc
lods
lret
push
mov
dec
rorl
jae
dec
sub
add
and
popa
inc
mov
mov
ficoml
fdivrs
xchg
mov
lock
pop
in
push
in
sbb
out
sbb
fs
inc
shll
push
add
out
sbb
pop
enter
scas
sbb
cmc
xor
stos
inc
iret
lds
inc
xchg
in
inc
cmpsl
loopne
lea
lock
insb
add
ss
dec
outsl
mov
xchg
xchg
sbb
stos
stos
mov
mov
aad
movsb
mov
and
and
push
enter
inc
out
std
push
imul
push
jbe
out
xchg
mov
inc
sbb
sub
push
leave
or
mov
dec
inc
or
cmp
mov
loopne
pop
push
cmpsl
or
test
add
pop
fstpt
inc
add
jne
xor
xchg
sbbb
fldt
loopne
push
dec
in
push
push
mov
lret
dec
xor
in
movsl
lods
in
fwait
pop
call
stos
lcall
adc
push
in
in
and
ret
mov
bound
mov
pop
xchg
xor
jno
xchg
cld
or
test
jl
insb
stos
push
lods
hlt
xor
adc
dec
cld
lcall
and
fsubl
add
push
sarl
testl
aas
sub
cmp
call
pop
enter
addr16
add
lret
imul
or
or
push
inc
push
dec
adc
add
mov
and
jle
into
cmpsl
push
pop
sub
sub
mov
test
jne
xchg
nop
loope
push
into
dec
les
outsb
mov
jecxz
sub
shll
out
cmp
sub
or
loope
orl
push
or
outsl
es
loopne
mov
sbb
xor
pushf
cmpsl
or
pop
xlat
test
mov
and
add
insb
mov
jb
mov
clc
fiaddl
repnz
sub
aas
cld
push
jmp
sub
sti
test
in
into
push
push
xchg
or
and
mov
movsl
pop
xor
pop
clc
pusha
xor
add
pop
in
xlat
andb
clc
add
pop
lods
bound
dec
push
add
leave
adc
in
push
and
cli
pop
cmp
loope
adc
lcall
and
jmp
sub
clc
data16
mov
loopne
pop
push
jae
add
lahf
and
lds
dec
int
scas
iret
dec
mov
das
push
ds
inc
mov
dec
js
xchg
fisttps
jns
and
sbb
mov
mov
inc
dec
orb
or
inc
add
cmpsb
xorb
addr16
insl
pop
push
test
das
repnz
dec
das
andb
add
mov
push
pop
icebp
or
or
leave
mov
dec
std
les
mov
sbb
dec
sub
sbb
jmp
fsubs
pop
mov
mov
or
add
lret
sub
dec
fldcw
std
cmpb
jne
nop
inc
hlt
movsl
or
add
int
dec
jecxz
and
xchg
mov
dec
dec
dec
xor
pop
sub
lea
rcll
sbb
sub
xchg
inc
or
push
dec
mov
imul
cmp
inc
js
inc
pop
aas
cmp
mov
sti
pop
jne
testb
orb
sbb
adc
out
sbb
lcall
aad
icebp
add
adc
daa
cmc
faddl
cmp
mov
aam
adc
mov
mov
push
pop
cs
cmp
cld
inc
sub
subb
adc
cs
loope
stos
xchg
mov
push
push
ror
sbb
sbb
mov
fiaddl
jmp
mov
leave
lods
loope
and
in
mov
mov
lods
pop
sbb
sti
pop
data16
and
rcrb
and
sub
movsl
cmp
sbb
dec
xchg
fildl
mov
lret
in
dec
adc
inc
ret
or
int3
push
addb
dec
cmpsb
pop
adc
test
lea
cmp
inc
stos
outsb
ja
addl
inc
lock
movsl
rol
and
sbb
push
jnp
negb
sub
mov
aas
pop
cld
lock
or
rorb
mov
mov
sub
pop
add
or
arpl
pop
ds
cltd
ficoml
outsl
outsl
popa
xor
je
jg
mov
jmp
add
aam
pop
mov
jge
lea
jmp
loope
stos
scas
dec
adc
adc
add
ret
jbe
jge
shll
xor
fiadds
adc
adc
inc
lds
sbb
ret
aas
das
add
xchg
mov
push
mov
lret
leave
fwait
das
repnz
movb
mov
mov
pop
push
xor
ret
adc
mov
mov
xor
push
mov
shll
imull
dec
or
sub
xor
cli
inc
pop
test
or
pop
sub
scas
add
pusha
mov
ljmp
popa
mov
lea
push
bt
nop
and
inc
add
fidivrs
xor
jl
push
adc
mov
mov
dec
in
jl
adcl
pop
loopne
jo
add
inc
hlt
shr
rorl
cmp
mov
insb
and
and
arpl
jl
fcomi
jg
and
add
cmp
jne
inc
jge
sbb
jle
and
ficompl
mov
pusha
hlt
jl
xor
xchg
pop
add
add
sbb
je
lcall
nop
add
sbb
add
loope
push
dec
and
addr16
clc
lret
mov
stos
enter
je
fstpl
cmp
push
jge
inc
outsb
shrb
add
push
add
or
add
out
adc
push
and
cs
add
out
mov
push
adc
les
sbb
fs
pop
daa
mov
dec
addr16
in
es
sbb
push
insl
ret
jno
jl
scas
add
add
call
subb
test
pop
pusha
xchg
movl
movsb
xor
or
jge
xorb
add
mov
jb
sbb
pop
mov
add
lods
jo
mov
mov
add
jecxz
cmpsl
icebp
mov
add
mov
cmpsl
mov
and
pmulhw
and
pop
xchg
out
testl
xchg
cs
or
call
mov
xchg
xor
sbb
add
out
jne
sbb
inc
aam
cltd
mov
jo
jne
cld
mov
adc
xor
push
out
inc
les
aaa
sub
mov
jecxz
ret
or
and
lret
mov
insl
arpl
mov
inc
dec
into
lea
lock
mov
mov
testl
in
enter
or
rol
dec
pcmpeqd
popf
sub
in
sbb
adc
imul
pusha
or
popa
rorb
icebp
or
faddp
repz
sti
add
add
jbe
or
sbb
or
cwtl
sbb
or
cmp
add
bound
add
in
in
jmp
and
xor
mov
adc
dec
inc
shrd
sub
push
mov
mov
mov
les
push
and
pop
mov
bound
leave
icebp
add
mov
push
inc
dec
inc
push
int3
fs
lods
lcall
add
sbb
popa
fs
mov
mov
aam
and
sbb
test
push
decl
lret
mov
loopne
cltd
xorl
dec
out
lods
push
and
scas
sub
push
scas
jg
clc
jle
xchg
or
or
shlb
lds
test
stc
adc
ret
fwait
xlat
sbb
sbb
in
icebp
fld
dec
inc
push
jmp
pop
push
lods
dec
pop
andw
pop
cmpsb
inc
jb
adc
sub
dec
ss
lods
push
fiadds
pushf
sub
and
fbld
push
fwait
mov
repz
in
add
adc
arpl
pop
enter
jno
jge
enter
test
xorb
lods
sbb
xchg
fsubrl
inc
jb
pop
or
add
data16
cmova
add
aam
adc
faddl
pop
sub
jbe
inc
xchg
jo
cmp
je
or
into
iret
jae
rcl
daa
mov
add
xor
jb
je
dec
or
adc
add
or
hlt
outsl
mov
clc
xchg
add
out
dec
dec
xlat
pop
pop
adc
icebp
js
lcall
pop
ficoms
cmp
xchg
inc
add
cmp
and
idivl
or
shlb
imul
xlat
add
nop
mov
idivl
pop
loopne
fs
sbb
push
loopne
lret
pop
cmp
lcall
rorb
add
mov
ret
or
inc
and
sti
je
or
leave
js
jne
pop
inc
rclb
sahf
inc
loopne
movsb
sub
push
push
lods
xchg
adc
xor
daa
or
sub
ds
in
inc
sbb
shrl
bound
cmp
push
ficoml
mov
cmp
xor
add
or
push
add
sub
jnp
jle
or
dec
mov
adc
xlat
test
stos
mov
and
rol
sub
filds
dec
mov
inc
pop
out
into
inc
jo
mov
inc
imul
add
mov
enter
xchg
popa
pop
cwtl
or
nop
add
push
insb
pop
rcl
push
pop
fisttpll
mov
bound
add
movsb
mov
ds
lahf
sbb
lock
adc
sbb
push
ss
lock
je
mov
subl
out
adc
loope
mov
pop
adc
pop
sub
adcl
es
fcmovu
mov
mov
inc
sbb
jmp
dec
das
pusha
test
push
push
adcb
test
stos
inc
adc
ret
rcrb
xchg
ficomps
and
pusha
mov
add
adc
adc
lret
or
outsl
jo
imul
mov
outsb
das
pusha
out
je
add
sub
mov
xchg
nop
push
mov
or
add
inc
adc
inc
sub
cmpsb
or
or
inc
enter
int
adc
or
bound
sbb
ja
fidivs
lods
jne,pn
sbb
mov
sub
mov
lea
xor
test
push
inc
sbb
jnp
mov
jge
xor
inc
or
pop
test
or
push
mov
jae
cmc
loopne
test
stos
mov
add
add
push
aaa
push
fadds
jp
movb
mov
stos
roll
fidivs
and
daa
xchg
jp
inc
xchg
aam
scas
mov
pop
enter
bound
in
inc
jecxz
aaa
fisubl
jmp
mov
jmp
push
fsubr
add
scas
jnp
fsubrs
inc
xchg
adc
inc
bound
adc
mull
outsl
fldt
stos
xchg
mulb
dec
call
or
pop
out
and
rorl
lahf
int
psubw
xor
or
inc
daa
dec
xchg
outsl
pop
jo
mov
mov
xchg
cld
xchg
xor
fs
out
add
je
gs
fs
xor
js
xchg
mov
lods
push
in
dec
and
inc
add
and
mov
repz
popf
ds
hlt
ss
sub
cmpsb
xor
sub
inc
push
push
jl
je
popa
or
aas
das
push
inc
pop
fwait
cli
data16
xchg
jmp
aaa
jl
inc
cmp
jl
or
sub
and
arpl
jmp
icebp
or
adc
and
sbb
inc
inc
jb
sbb
sub
popa
xor
dec
fs
sbb
arpl
hlt
mov
push
faddl
cmp
xor
or
js
or
das
inc
out
cmp
ret
lock
inc
pop
cmp
mov
adc
adc
inc
jo
add
mov
add
adcb
je
inc
xchg
push
mov
dec
sub
add
enter
xlat
lcall
fisttps
mov
pop
push
loop
pop
xchg
and
gs
or
mov
mov
mov
add
jg
lahf
cmp
popa
adc
js
loope
xor
dec
adc
dec
repnz
inc
clc
jo
fnsave
cmp
xchg
dec
out
mov
dec
adc
jbe
ret
mov
xchg
push
jo
pop
cli
mov
data16
push
inc
adc
push
stos
cs
loopne
jo
cmpsl
cwtl
mov
adc
mov
ret
mov
mov
adc
ds
cmp
sbb
dec
sbb
add
movb
adc
add
xchg
mov
adc
inc
hlt
mov
std
rcrb
sti
fisttpll
je
hlt
sbb
test
in
pop
fs
ror
sub
aas
arpl
push
inc
pop
rcr
pop
int3
push
xor
das
loopne
lret
call
add
lea
cmpsl
inc
inc
push
inc
out
loope
mov
sub
lods
popf
inc
cmp
sbb
and
jnp
not
mov
push
xor
cmp
fstps
pop
rcll
clc
flds
or
fildl
cmpsb
std
cmp
jne
push
or
jne
add
repnz
inc
mov
push
pop
not
inc
jle
mov
ret
push
push
cmp
xlat
subb
xor
mov
mov
sbb
ret
fcomps
mov
mov
dec
sbb
clc
pop
js
arpl
pop
jbe
push
xor
xchg
mov
sub
mov
adc
xor
leave
xor
mov
inc
loop
nop
rclb
sahf
sbb
xchg
mov
sarb
adc
jae
imul
je
mov
in
mov
adc
dec
outsb
jmp
je
arpl
xlat
es
jne
pop
fnstsw
xor
pop
pop
cltd
hlt
rol
ss
lods
mov
jmp
scas
pop
cmp
sahf
mov
mov
dec
xchg
push
push
xchg
pop
pop
sbb
ficoml
cmp
test
out
jle
dec
jne
jp
lods
cmp
jne,pn
jge
scas
pop
cli
fsubrl
mov
mov
or
sbb
mov
out
inc
call
xor
adc
ret
jge
mov
jecxz
push
sar
push
dec
dec
jbe
mov
adcb
ja
mov
lock
sbbb
cmp
dec
or
cmpsb
fsts
lret
jp
test
xor
dec
mov
pop
cld
cmpb
inc
mov
pop
adc
pusha
mov
jge
dec
add
pop
sub
lret
mov
and
xor
imul
aaa
inc
imul
ret
dec
cltd
adc
mov
dec
jle
push
mov
or
ret
into
imul
ret
std
je
out
sub
jne
xchg
clc
inc
or
lods
mov
dec
add
data16
push
sbb
jmp
push
inc
mov
loopne
mov
cmp
les
xlat
or
pop
aam
ss
lods
and
in
icebp
dec
pop
ss
sbb
daa
outsl
adc
and
mov
xor
aas
ret
imul
js
shll
sbbb
je
mov
jns
inc
inc
subb
mov
pop
push
pop
inc
and
mov
push
cmpsl
and
mov
lahf
or
pop
add
jge
add
cmp
mov
or
pushf
fs
xor
fdivr
ss
shlb
sub
int3
ret
xor
or
dec
xchg
mov
xorl
add
pop
cwtl
dec
subl
jecxz
dec
fistpll
nop
in
sbb
push
mov
xchg
stos
pop
push
popf
lock
js
cmpl
cld
sub
or
push
data16
jle
int3
outsl
scas
test
lods
rorl
or
sub
push
gs
xchg
int
xchg
jo
imul
adc
mov
xchg
in
add
into
xor
fs
lahf
jbe
push
sub
push
pop
mov
dec
sbb
adc
addl
ret
ss
dec
sub
lret
pop
ret
ja
pop
inc
insl
pushf
cmpsb
push
das
in
out
jb
push
and
in
repz
sbb
das
addb
pop
enter
sub
cmp
clc
lds
jmp
in
xor
inc
mulb
aam
adc
adc
xchg
or
jne
in
adc
and
cmpsb
nop
jo
sub
cmp
xor
daa
mov
pop
ficoml
jp
sub
inc
sub
dec
sub
xchg
daa
fcomps
add
xorl
sbb
and
xor
imul
in
pop
jmp
sbb
sbb
fcomps
mov
push
test
mov
push
notb
arpl
sbb
in
pop
jmp
pop
cmp
ss
lahf
shrb
inc
jb
mov
sbb
add
enter
pop
andl
popf
jne
pop
dec
cmp
mov
add
add
mov
sbb
xchg
adc
fwait
add
mov
mov
adc
pusha
sbb
push
xor
mov
lcall
cmp
push
stc
adc
xchg
sub
xor
mov
adc
xchg
mov
scas
and
scas
ja
lods
add
and
pushf
pop
int
sub
fsubs
test
mov
dec
in
adc
pop
pop
ret
dec
sarb
call
add
aad
mov
jle
sub
arpl
pop
mov
xchg
push
cmp
pop
fbstp
xor
xlat
pop
out
daa
mov
nopl
mov
pop
ljmp
test
lcall
sub
je
jno
jns
cld
imul
jge
popa
sub
xor
pusha
nop
cmpsb
repnz
stc
or
shlb
clc
cld
hlt
sub
push
insl
xchg
xchg
in
push
add
jbe
int
pusha
les
aam
xchg
sbb
or
or
fildll
push
rcrb
cmp
cs
mov
hlt
out
cmp
or
sbb
and
iret
flds
lock
in
or
or
mov
rcrb
xchg
fbld
bound
and
xchg
fldl
add
cmpsw
mov
sahf
das
add
ja
jne
popa
mov
add
or
and
cmp
jnp
adc
in
jns
lods
mov
repz
incb
xor
shlb
jmp
xor
mov
cmp
in
in
das
sbb
jbe
sbb
xor
cmp
and
pop
stos
or
inc
jne
inc
pop
add
iret
cmp
popa
push
dec
xchg
sub
mov
push
and
ss
rcl
jmp
fcomps
mov
push
mov
mov
mov
dec
cmpsl
int3
mov
and
cmp
ret
xor
mov
push
cltd
mov
push
movsl
fwait
out
push
mov
adc
inc
add
push
mov
shl
outsl
mov
jne
mov
push
adcl
push
mov
jno
xchg
and
xor
inc
sbb
and
add
daa
out
adc
dec
add
mov
jne
sbb
arpl
notl
push
push
fsub
mov
pop
jmp
pop
and
mov
test
or
arpl
stos
and
dec
mov
rclb
enter
sbb
out
idivl
daa
jo
push
stc
sbb
es
xor
int
add
pop
mov
mov
xor
shr
test
adc
or
push
dec
or
cmpb
jne
xor
push
or
mov
insl
xor
inc
imul
push
cld
div
icebp
jnp
jp
push
xchg
std
pop
enter
xor
mov
pop
cmpb
or
shrb
push
cmp
mov
orps
fwait
push
jmp
or
lock
rclb
jl
enter
add
shrl
xor
xor
sbb
add
jl
push
packuswb
pop
adc
pop
out
mov
out
js
push
fisttpl
adc
jnp
lret
xchg
pop
jp
cmp
movsl
xlat
std
mov
add
pushf
cmp
pop
gs
popf
call
rorb
imul
stos
cmpsl
test
gs
nop
push
sahf
adc
je
push
xchg
sarb
xor
cmpb
sbb
and
sbb
add
jl
in
xor
xorl
repz
pop
popa
out
mov
add
or
dec
pusha
sub
add
pop
add
pop
mov
adc
clc
jge
shrl
sub
dec
clc
out
in
dec
repnz
lds
orb
jecxz
jo
add
sbb
mov
jle
inc
cmp
daa
add
add
clc
std
dec
imul
mov
push
stc
subl
jnp
sub
xchg
fsubl
push
add
inc
sbbb
jle
daa
fs
jo
ror
pop
nop
jns
testl
ret
jns
ljmp
push
outsb
xchg
xor
enterw
movsb
lea
pop
js
aaa
cmpsb
in
sahf
xorb
ret
cmp
js
or
mov
mov
push
repnz
fdivl
bound
jb
sub
mov
in
cli
sub
addb
lret
sbb
cmp
xchg
sbb
fisubrs
xor
cs
rolb
sbb
in
rcr
dec
insb
pop
or
fwait
inc
cmp
mov
and
aam
cmp
subb
test
call
aaa
pop
fidivrl
push
fildll
inc
fistl
aas
call
jmp
into
jle
inc
push
adc
fadd
loopne
jo
xlat
lahf
dec
int3
add
push
outsl
ret
add
dec
dec
pop
jmp
inc
push
jge
pop
sbb
mov
add
test
adc
jg
jnp
inc
addr16
orb
cwtl
mov
and
imul
aam
rcr
adc
fcompp
push
clc
xor
dec
xorb
push
inc
lret
sub
xchg
mov
addl
sti
cmp
inc
sbb
out
mov
call
lods
jle
jnp
add
jmp
pop
lcall
hlt
mov
mov
daa
jmp
sub
lar
shl
mov
inc
nop
out
rcl
sbbl
jo
dec
sbbb
ror
loopne
sbb
xchg
lcall
dec
addb
outsb
mov
jmp
gs
cmp
mov
sbb
jecxz
adc
or
dec
pop
lds
xchg
cmpsb
adc
dec
rorb
mov
or
and
arpl
fmull
je
add
int
xor
adcl
push
orl
mov
mov
aam
clc
into
mov
push
fistps
dec
je
or
jecxz
or
shrl
adc
inc
cld
out
fsubrs
insl
daa
pop
rol
out
pop
clc
push
insb
lods
test
add
xchg
iret
popa
and
push
adc
add
leave
mov
pusha
adcb
or
in
fstl
xor
xor
ret
cmp
lods
sub
and
loope
inc
sbb
fwait
dec
push
in
lock
loopne
stos
ret
jmp
lds
push
mov
xor
fimuls
aad
cmp
dec
out
mov
ret
push
push
push
sub
pop
sbb
dec
imulb
test
push
or
jne
test
mov
pop
jmp
notl
push
je
push
push
and
adc
mov
inc
pop
idiv
fld
xchg
fwait
adc
xchg
jmp
jb
repnz
inc
divl
test
cmp
jg
iret
push
lock
push
inc
inc
int3
out
aas
pop
rcrl
je
jo
push
shr
push
inc
cmp
ds
dec
cmpl
push
dec
xchg
cmp
mov
adc
dec
jl
and
or
ja
add
aaa
addr16
push
cmp
lock
dec
push
sbbl
push
outsl
out
ret
cld
test
add
add
adc
pop
inc
lahf
mov
and
loope
insl
and
scas
shll
dec
pusha
sbb
mov
les
pusha
repz
pop
xor
scas
inc
cmp
mov
mov
sub
dec
repz
arpl
push
enter
inc
ds
in
adc
leave
repz
cmp
dec
pop
loopne
sahf
out
jl
cltd
jmp
insb
mov
pop
mov
adc
add
push
dec
mov
ret
mov
pop
jne
pop
xchg
je
jbe
insl
das
pop
push
adc
push
lds
sbb
por
or
mov
xchg
sbb
or
sub
or
xchg
add
mov
mov
and
ja
push
enter
test
sub
mov
pop
movsb
sbb
adc
mov
xor
enter
jmp
cmp
pop
fldcw
orl
mov
sbb
dec
inc
push
aad
adc
out
jae
jb
adc
popf
repnz
es
inc
add
cmc
mov
mov
call
cmp
jge
mov
gs
push
adc
jg
sbbl
push
inc
pop
add
bound
aam
xlat
dec
rorb
fists
clc
clc
inc
push
mov
mov
mov
shlb
inc
call
jmp
jo
xchg
ret
sbb
or
in
or
pop
movsb
pop
cmpsb
sbb
push
xor
push
inc
sbb
lea
dec
lret
push
andl
pop
test
sarl
mov
add
mov
add
sub
jle,pn
cmp
inc
mov
sub
push
insb
psubsb
js
pop
pop
loope
jns
add
cwtl
je
in
adc
xorb
mov
lock
cli
or
inc
cld
or
add
adc
inc
out
jmp
repz
ror
negl
or
out
fidivrl
pop
ret
clc
clc
mov
cmp
inc
loopne
sahf
sbb
and
mov
or
jg
inc
shl
and
xor
ret
orb
rorb
inc
push
mov
stc
dec
call
sbb
das
mov
mov
mov
or
inc
pop
sub
aas
sbb
xor
mov
xchg
mov
popf
fistpll
jbe
lret
repz
add
xor
fsubrs
iret
icebp
mov
pop
cs
out
out
dec
push
pop
push
jo
ficoms
or
enter
repz
movsbl
mov
xor
or
and
adcb
add
push
xor
pushf
push
add
jb
xchg
in
push
sub
mov
push
clc
xor
in
xor
jmp
mov
out
outsb
xchg
insl
adc
in
add
push
daa
sub
sti
sub
inc
push
mov
jb
pop
insb
mov
adc
push
dec
jmp
adc
jae
cmp
orb
cmp
iret
fwait
out
mov
dec
or
dec
clc
cmc
loopew
jle
sbb
sub
push
xor
mov
add
cmp
xchg
mov
pop
ret
int3
mov
roll
cmp
data16
mov
pushf
inc
mov
and
iret
adc
jge
jle
jl
or
sbb
pop
xor
jle
out
xchg
add
or
ds
jl
adc
in
push
xchg
xor
mov
push
add
insl
dec
xor
add
add
in
rclb
adc
fstp
outsl
mov
xor
aas
add
mov
xchg
fcompl
xchg
or
movsl
sarl
orps
push
aaa
or
stos
sub
cltd
inc
xor
scas
sbb
adc
mov
and
pop
ss
sbb
push
mov
sbb
pop
rcrl
push
sub
adc
xchg
push
mov
mov
or
xor
or
jg
or
xor
fstl
sbb
push
ds
pop
addb
pop
inc
aas
adc
je
add
daa
add
sub
jns
dec
and
xor
push
jbe
and
mov
mov
andb
daa
xor
dec
cmp
push
push
push
cmp
xchg
int3
xchg
jg
imul
mov
rolb
loopne
pop
dec
sbb
cwtl
and
mov
in
sbb
mov
or
cmp
in
mov
mov
mov
xchg
cmpb
jl
outsl
adc
push
dec
jl
imul
ret
adcl
jecxz
mov
mov
insb
mov
clc
and
add
and
pop
add
into
add
cmpb
pop
arpl
and
jle
or
mov
pop
adc
nop
xor
add
adc
lea
loopne
repz
adc
movsb
imul
pop
mov
push
ret
cmpb
ret
ds
std
pop
dec
leave
fdivrl
jnp
cmp
je
add
sahf
add
mov
sbb
xor
or
test
sti
mov
sbb
dec
sbb
xchg
push
sbb
mov
jp
sbb
xchg
daa
sbb
mov
sbb
repnz
push
sbb
jmp
adc
adc
mov
add
sub
push
jmp
orb
adc
adc
call
add
add
enter
inc
sub
inc
mov
movsl
jnp
testb
incb
mov
pop
ds
sub
dec
int3
enter
icebp
fmuls
clc
cwtl
movsl
popa
push
fsubs
outsl
aaa
or
clc
aam
add
mov
out
adc
inc
sbb
call
xchg
shlb
fstpt
jo
les
sub
pop
pop
scas
adc
sub
dec
xor
dec
or
inc
push
xor
mov
loope
adc
and
adc
or
and
movl
push
or
dec
lock
adc
aad
je
out
push
inc
dec
jp
and
adc
xor
cmp
jl
add
mov
mov
sahf
data16
and
or
xor
xorl
push
xchg
push
setne
mov
jb
push
inc
test
gs
sbb
dec
xchg
lock
dec
gs
je
outsl
jo
cmpsl
or
filds
pop
fcomps
inc
inc
dec
out
cs
pop
inc
notl
arpl
shr
in
decb
int3
xchg
mov
addb
filds
add
arpl
jne
jg
mov
jne
cmp
sub
icebp
pop
add
xor
call
flds
jae
dec
hlt
dec
in
pop
sub
pop
sub
dec
mov
sbb
je
push
adc
xchg
xchg
or
addr16
nop
pop
ret
ret
rolb
jno
lea
lds
cmpl
sub
push
sub
xor
sbb
pushf
inc
aad
imul
loopne
arpl
inc
dec
jne
in
mov
add
ret
pop
and
sbb
clc
fsubrs
dec
push
enter
jle
mov
addb
lcall
sbb
jmp
sbb
dec
aad
popa
mov
adc
call
add
pop
addb
sbb
mov
inc
sbb
xlat
leave
aas
cmp
dec
inc
les
push
add
dec
fs
push
outsb
movsb
fistpl
movsb
jge
cmp
jg
push
dec
cmp
rcr
pop
push
xlat
xor
xor
pop
xlat
je
add
mov
ficoms
jmp
or
sbb
andb
jl
pop
leave
sbb
add
lods
sbb
and
jo
popf
mov
ret
sbb
add
ja
repnz
les
idivl
faddl
out
mov
jmp
sbb
add
pop
add
in
push
or
inc
sarb
sub
and
cmp
and
xchg
clc
les
outsl
sub
and
aaa
sub
fcmovbe
xchg
jge
jne
es
and
loopne
push
pop
rorb
or
inc
and
jle
addr16
add
or
mov
scas
aas
or
dec
dec
pop
roll
push
cmpsl
adc
cmovs
call
aam
daa
lock
or
lock
mov
jle
xchg
mov
out
fistpll
cmp
je
int
repz
cmpsl
mov
sub
adc
mov
fisttps
add
add
dec
adc
inc
or
movsb
add
push
inc
xor
je
xlat
insl
jmp
js
mov
sbb
push
or
inc
pop
out
inc
push
pop
mov
dec
das
ror
sub
rcll
xchg
pushf
or
ja
lcall
push
sub
stos
adc
arpl
repnz
pop
xchg
xor
adc
pop
or
dec
cmp
inc
mov
inc
je
dec
push
out
add
adc
xlat
sub
imul
mov
mov
sub
and
cmpsl
bound
int3
xor
push
dec
adc
or
test
sbb
sub
fsubrp
sbb
lret
cmp
jne
pop
adc
cwtl
pusha
scas
mov
xor
int3
inc
sub
push
pop
sub
mov
sub
rcl
or
cwtl
mov
inc
adc
nop
mov
and
popw
inc
jle
and
adc
and
sbb
daa
and
xchg
lahf
adc
outsb
cld
btc
add
xorb
mov
ds
dec
adc
xor
mov
imul
int
cli
repnz
dec
orb
faddl
jle
add
adc
sbb
pop
adc
mov
ficompl
dec
jle
sti
add
add
inc
lret
and
fs
push
or
ret
cmpsl
add
mov
sbb
pop
sti
pop
push
or
popa
lahf
jge
pop
xlat
jp
loope
adc
movsb
loope
hlt
push
adc
lcall
lret
incl
enter
cmpsl
shr
movsl
mov
movl
push
adc
movl
rclb
or
in
push
xchg
push
lea
jg
adc
add
hlt
add
adc
mov
xor
sti
or
jne
dec
nop
aad
cmp
jg
or
mov
adc
mov
inc
hlt
jle
mov
cld
stos
pushf
add
jo
or
fwait
and
mov
aam
add
scas
xchg
dec
lock
sbb
push
in
js
fcompl
mov
dec
sbb
or
out
add
cld
popf
andb
in
push
sbb
and
je
push
mov
out
sub
pop
pop
mov
push
fmul
mov
xchg
push
subl
xor
cs
cmp
dec
xchg
sbb
jno
int
loopne
jnp
inc
cmp
call
rorl
lds
inc
and
push
mov
inc
jmp
cmpsl
daa
sbb
mov
cld
pop
push
pop
add
sbb
or
push
imulb
cpuid
je
movl
push
jo
into
sub
or
sbb
pop
rcr
sub
sub
pop
mov
daa
or
leave
movb
arpl
jbe
insl
daa
das
or
imul
push
mov
xor
xor
insl
sub
pop
or
add
xor
lret
add
cmp
sahf
mov
add
adc
test
dec
sub
adc
mov
daa
cmc
insb
push
rorl
pop
add
add
cmpb
ss
sarb
mov
push
mov
pop
add
mov
pop
or
add
or
imul
and
or
dec
mov
cld
pcmpeqb
xor
frstor
pop
jo
or
and
lcall
sbb
mov
je
imul
cvtps2pd
movsb
lahf
mov
add
jns
adc
mov
sbb
cmp
adc
loopne
mov
xchg
mov
pop
jmp
jnp
pop
push
push
enter
push
nop
dec
adc
push
inc
fst
sub
and
je
xchg
pop
mov
xor
icebp
fcoms
push
test
mov
add
push
jo
js
xchg
sarl
push
mov
sti
xor
jmp
sbb
push
jge
lret
fcompl
mov
xchg
or
inc
pusha
arpl
fildll
xchg
sbb
xor
mov
jmp
mov
xor
push
call
inc
stos
and
aaa
stos
sbb
push
lods
movsl
push
popa
cltd
imul
sub
fdivrs
js
enter
sub
ret
or
mov
and
pop
inc
dec
jle
and
pop
aad
xchg
xchg
mov
dec
dec
cmp
jns
dec
dec
mov
dec
dec
jo
jb
dec
dec
dec
dec
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
insb
insl
outsb
outsl
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
and
add
inc
cmp
leave
mov
push
add
sub
push
mov
outsl
or
mov
adc
subl
test
daa
lods
leave
pslld
shrl
add
adc
or
adc
xchg
test
incl
outsb
je
imul
xchg
mov
mov
adc
data16
data16
jne
dec
fwait
jae
je
out
adc
nop
test
add
adc
or
jae
je
cmp
addr16
je
cld
sbb
pushf
xor
data16
gs
xor
mov
dec
je
arpl
adc
xor
push
xor
mov
dec
imul
mov
lock
or
aaa
push
mov
or
int
int
inc
inc
add
jo
outsl
das
sti
jge
sbb
push
inc
popa
jae
add
sbb
or
fdivrs
jl
or
dec
outsb
jae
les
movsl
fwait
xor
iret
or
in
xor
insl
inc
insb
subb
imul
mov
push
push
inc
jns
sbb
or
dec
shlb
nop
and
add
mov
test
xor
sub
fisubrs
xor
aas
mov
rol
mov
pop
outsb
lcall
add
jne
iret
xor
fimull
sub
inc
push
add
dec
jl
jp
push
stos
cmp
or
push
repnz
outsl
in
inc
arpl
cs
inc
imul
mov
jae
es
shrl
stos
mov
insb
loope
cld
ss
sbb
adc
add
lret
sahf
jmp
inc
test
pop
mov
or
or
xor
push
dec
mov
test
adc
imul
cmpsl
inc
xchg
insl
out
or
or
push
hlt
jl
sahf
imul
ljmp
cmp
or
mov
and
lret
pop
ja
xor
les
aam
loopne
mov
lds
push
dec
or
add
pop
pop
rol
aas
push
test
test
inc
cmpsb
jo
xchg
push
add
cmp
js
aas
push
push
dec
gs
movups
mov
add
inc
sahf
mov
fidivrl
mov
add
pushf
nop
out
push
imul
push
cmp
loopne
outsl
mov
lahf
xor
pop
dec
sbb
mov
dec
pop
sub
push
add
mov
lahf
pop
sbb
lds
repnz
xorl
xchg
pop
pop
xchg
add
sarl
loopne
bound
add
sub
pop
pop
jnp
pop
cmp
pop
xchg
cmpb
add
sub
push
inc
je
outsb
scas
lcall
sbb
enter
lods
fwait
lret
mov
nop
lahf
pop
sbb
ss
xchg
jl
add
push
lret
in
xor
jmp
inc
push
xchg
add
add
cmc
pop
insb
inc
sub
sbb
fimull
jns
daa
jo
inc
rolb
xor
pop
inc
jl
shll
popa
icebp
mov
mov
sbb
push
xlat
add
movsl
push
lret
mov
dec
imul
pop
and
and
int3
or
inc
mov
or
or
imul
push
scas
cmp
test
shl
sbb
imul
xchg
out
fcoml
push
xchg
dec
adc
mov
sbb
pop
push
sbb
addr16
out
test
push
sti
leave
mov
mov
std
int
jp
aam
jbe
dec
pusha
mov
push
mov
pop
jnp
sub
out
sbb
push
cltd
dec
pop
popa
movl
loop
sub
inc
pop
cmpsl
test
out
dec
mov
pop
js
push
addr16
punpcklbw
cmpsb
jmp
subb
in
or
pop
aaa
sbb
popw
and
enter
sub
xchg
pop
and
dec
daa
push
push
xchg
gs
insl
popa
addr16
mov
xchg
sarb
cmp
push
mov
pop
in
test
or
lods
or
mov
mov
lods
pop
mov
mov
cmp
dec
clc
test
ret
push
cmpsl
sbb
dec
mov
inc
outsl
mov
decb
push
enter
mov
or
dec
insb
or
shlb
testl
push
and
mov
mov
mov
pop
xchg
js
pusha
addr16
sbb
push
pop
sbb
xchg
xor
sub
out
pop
push
or
pop
rorl
hlt
mov
sbb
xchg
stc
nop
xchg
scas
xlat
hlt
adc
push
adc
in
mov
push
xlat
aam
add
add
je
pop
jle
cmp
adc
mov
addl
jl
aam
test
cmp
shlb
enter
mov
push
push
pop
mov
icebp
push
les
push
incl
vpunpcklwd
outsb
mov
mov
xor
pop
pushf
sar
rol
xor
inc
dec
jne
data16
loope
dec
and
pop
push
push
imul
inc
jmp
test
aas
out
mov
or
and
jl
mov
jge
jo
or
stc
adc
ljmp
and
or
jnp
add
and
data16
push
dec
je
jmp
xchg
pop
gs
push
sub
jle
rcr
inc
cmp
xor
rclb
sbb
test
jnp
pushf
andb
adc
mov
xchg
sub
pop
dec
test
or
decl
jns
cwtl
or
mov
lock
insb
and
and
in
add
aas
mov
dec
dec
push
add
ret
decl
lock
clc
xchg
sahf
test
movsb
mov
jne
pop
push
imulb
notl
adc
fcoml
adc
pusha
cli
jmp
mov
pop
add
subl
mov
mov
addb
cld
adc
mov
imul
je
mov
xlat
cmp
loopne
add
push
imul
jmp
add
inc
push
jle
aad
enter
outsl
push
imul
int
mov
mov
or
cmpl
or
or
repz
push
sbb
or
jle
in
addl
push
div
daa
das
imul
jo
mov
xor
dec
shl
and
mov
push
jg
mov
mov
ds
adc
push
sub
mov
fdiv
in
xchg
sbb
rcrb
insb
pop
out
aam
jmp
dec
popa
jb
outsl
outsb
pop
mov
lods
outsb
pop
and
insb
imul
jbe
add
dec
push
jne
jo
gs
push
gs
insb
pop
repnz
inc
ss
imul
or
cmpsb
xchg
add
dec
imul
insb
outsl
ja
mov
inc
or
arpl
imul
jno
popa
mov
addl
flds
fwait
mov
xchg
push
imul
dec
adc
les
and
rorl
fisttps
or
sbb
testl
das
bswap
pop
inc
popa
mov
adc
sbb
imul
and
insb
lods
mov
je
inc
push
xchg
jne
es
or
adc
or
adc
cld
pusha
cmp
sarl
js
or
sub
push
sti
or
mov
fs
lahf
sbb
jae
pop
or
inc
pop
or
push
sbb
mulps
push
or
jg
gs
mov
repz
adc
mov
adcb
aaa
aaa
shll
outsw
inc
push
andb
push
pop
outsb
jne
adc
or
insb
and
repnz
bswap
or
pusha
sbb
aas
jne
leave
jno
arpl
add
clc
xor
shrl
rorb
cmp
and
das
test
mov
or
sahf
jge
addb
or
push
push
inc
ret
push
pop
cld
cmc
xor
pop
out
pop
test
mov
sbb
loopne
inc
mov
sarl
int
pop
pop
scas
loope
xchg
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
std
and
sti
inc
inc
push
dec
push
xor
inc
dec
dec
push
divb
movsb
arpl
inc
inc
push
adc
notb
dec
inc
push
dec
dec
push
mov
pop
sti
sbb
shlb
dec
and
aaa
and
out
inc
inc
xor
xor
adc
push
inc
and
inc
xor
inc
dec
xchg
mov
push
push
dec
dec
push
dec
mov
xor
push
das
sbb
repnz
das
inc
inc
dec
push
out
in
mov
dec
inc
dec
or
push
aaa
jg
xchg
adc
push
push
push
dec
push
nop
cmpsl
xchg
dec
inc
dec
push
mov
fidivrl
nopl
loopne
lahf
sbb
mov
or
bound
into
push
add
add
dec
shlb
orb
and
les
adc
add
or
dec
stos
jge
mov
lea
sub
and
jg
sub
inc
or
push
mov
wrmsr
push
add
push
or
add
add
mov
dec
pusha
loopne
inc
pop
inc
iret
shlb
mov
xor
shlb
lcall
push
mov
out
or
xchg
test
lods
cld
lods
pop
rolb
test
adc
push
pusha
add
loope
add
psllw
sub
xor
add
in
ret
das
repnz
push
shll
or
subl
in
loopne
jle
add
jne
adc
adc
scas
jmp
sarl
and
arpl
loope
fidivrl
scas
cs
cmp
cmp
jo
sbb
cwtl
add
pop
xchg
movsl
je
movsl
arpl
jae
nop
jmp
das
mov
mov
cmp
ret
or
dec
or
mov
cmpsb
push
jle
outsl
mov
add
roll
mov
inc
adc
push
push
and
dec
mov
add
movsl
out
xchg
adc
inc
and
movsl
rorb
enter
sbb
adc
jmp
and
mov
adc
xchg
xchg
lret
in
mov
sbb
outsb
aas
mov
adc
lea
subl
aam
sbb
ss
cmp
mov
movaps
mov
jo
in
xorl
add
fcoms
sub
flds
jecxz
push
mov
or
pop
inc
fildl
or
jmp
aam
int
enter
adcl
push
or
or
adc
inc
lock
out
dec
pop
mov
xor
mov
or
and
movsl
sub
loopne
sub
mov
xor
lock
hlt
nop
push
lods
mov
pop
inc
sahf
je
pop
sub
popa
jg
sbb
repnz
incl
aam
scas
mov
xor
mov
out
mov
cmp
mov
sub
flds
xor
jecxz
mov
fwait
mov
mov
pop
test
fdivrs
movb
inc
push
das
clc
sbbl
je
mov
ret
cmpl
dec
jg
sub
mov
cli
or
sbb
das
sti
lock
jnp
bound
mov
pop
sbb
rolb
push
mov
daa
imul
inc
sbb
xchg
pushf
or
jb
jns
repz
cmp
and
fmull
jns
ffree
add
adc
add
imul
fdivl
repnz
subl
cmpsb
in
pop
mov
call
jg
jne
fistpll
das
sarb
sub
inc
sbb
mov
inc
mov
sub
push
xor
das
in
gs
in
mov
enter
cmp
or
push
cmp
jns
enter
lock
jl
shl
mov
sbb
mov
xchg
adc
in
dec
leave
or
dec
loopne
loopne
sarl
sbbl
leave
push
push
nop
or
jno
leave
xor
mov
pusha
movsb
mov
js
cmp
xchg
and
xchg
loopne
lret
sub
lock
mov
push
inc
mov
popf
pop
ds
lahf
cmp
add
mov
bound
add
movl
dec
into
test
lret
push
push
mov
mov
dec
add
mov
das
cmp
pop
loope
ss
fsubs
ret
ds
into
jnp
jo
mov
sub
iret
push
adc
lret
call
mov
jo
or
fs
loopne
sbb
es
adc
and
or
adc
xor
adc
nop
daa
daa
subb
inc
cmp
inc
clc
test
mov
or
inc
or
shll
inc
sub
hlt
lods
inc
inc
sub
mov
adc
dec
in
scas
mov
jge
jl
inc
and
insb
int3
mov
je
sub
lea
les
or
sbb
fs
adc
add
cmp
rcll
or
sbb
loopne
dec
int
mov
std
jg
mov
mov
push
mov
sub
or
sub
or
mov
xor
add
fstpl
xchg
push
sub
push
push
xor
jnp
das
push
add
sub
or
shrb
in
mov
add
xchg
in
cmp
jne
sbb
iret
rcll
xor
fld
inc
test
call
mov
add
sbbb
jo
call
and
add
or
add
xchg
rcrl
in
in
and
test
or
jge
sub
insl
push
pusha
rep
or
bound
cmp
inc
push
ret
mov
mov
daa
imul
mov
add
dec
lods
mov
es
add
dec
pop
or
movaps
dec
or
push
rorb
loopne
into
add
lods
or
sti
inc
lret
push
lods
fsts
ja
add
aaa
cmp
sbb
test
lahf
fcmovbe
iret
jnp
push
and
orl
adc
sub
iret
rolb
movsb
test
cmp
dec
cmp
js
dec
mov
pop
addl
pop
in
nop
adc
push
push
rclb
addl
push
lock
pop
roll
inc
pop
or
inc
loope
movsb
adc
sbb
mov
popa
fisubl
pop
sub
xchg
mov
ss
in
adc
bound
das
jge
mov
iret
add
sbbb
add
pop
inc
jae
daa
mov
ds
and
or
shlb
cwtl
out
xchg
dec
push
stc
mov
or
mov
ljmp
outsb
jecxz
pop
push
movsb
aas
es
mov
shrb
push
xchg
xor
andb
mov
adc
lea
push
push
scas
xor
pop
or
shll
sbb
mov
je
lret
ret
movsb
and
jne
lcall
pop
pop
ljmp
lcall
push
push
add
or
or
fmulp
jge
xor
push
xor
adc
cmp
add
xchg
mov
mov
push
adc
adc
pop
pop
pop
or
cmp
or
imul
and
mov
push
movsl
lcall
dec
jmp
mov
add
mov
cs
push
je
xor
sti
cmpl
mov
jb
mull
or
les
punpckhbw
ret
ret
push
enter
in
cmp
aam
sub
mov
inc
and
scas
sub
add
dec
push
or
push
ror
or
or
push
pop
cmpb
adc
das
lea
ljmp
aaa
mov
add
pop
ret
aam
iret
addl
in
add
cmpsb
adc
int3
cmpsl
loope
repz
fnstcw
in
adcb
in
xor
push
nop
pop
push
cltd
ret
adc
cmp
test
js
imul
push
insb
bound
mov
mov
add
lock
ror
test
inc
movsl
push
mov
push
inc
iret
cltd
adcb
jns
fcomps
in
push
imul
push
out
mov
xchg
or
push
rcr
ret
adc
add
push
sarb
pop
imul
insb
ljmp
adc
pop
incb
je
or
mov
in
daa
mov
jge
loopne
dec
divl
shrl
and
addr16
sar
xorb
cmp
push
adcb
sub
cmp
mov
lods
mov
loop
sub
test
sub
add
cs
loopne
out
test
push
fisubs
sbb
xor
add
stos
pop
push
or
sub
push
shlb
push
test
lahf
enter
add
and
cmpsl
clc
fsubs
push
jge
daa
out
repnz
es
cmpsl
dec
imul
and
fsubrl
insb
mov
push
sub
dec
jmp
jns
xchg
add
dec
xchg
add
sbb
pop
ret
jge
lock
das
inc
add
int
cmc
fs
push
imulb
sub
movl
push
or
add
mov
or
pop
call
aas
or
punpckhdq
adc
sarb
ret
sub
or
mov
adc
push
mov
mov
pop
lret
or
add
add
movsb
pop
inc
movb
mov
fcmovb
push
adc
and
cmp
aas
dec
es
test
dec
shll
pop
pop
pop
fwait
popl
mov
jne
cli
cmp
jge
sbb
mov
push
sbb
sub
sbb
pop
pop
aam
add
es
xchg
movsb
dec
js
and
and
mov
mov
sti
enter
mov
dec
jns
jmp
push
mov
mov
mov
sub
shl
mov
mov
jmp
mov
clc
movw
add
cli
in
add
push
mov
xchg
push
cld
insl
loopne
jno
fcoms
jl
fcompl
jnp
or
cmp
fwait
sarb
add
jne
ds
ds
jnp
js
xchg
mov
lea
jmp
cmp
push
mov
sbb
daa
jmp
fcompl
nop
movsb
gs
or
sbb
enter
cld
icebp
lock
jle
test
push
jne
inc
dec
sahf
cmp
cmp
test
mov
test
int3
and
or
jl
sahf
stc
ljmp
and
mov
add
rcrl
mov
sbb
mov
mov
daa
pop
cld
or
dec
pop
roll
dec
sarb
pop
pop
cmp
dec
clc
mov
xor
daa
add
fstpl
adc
dec
mov
adc
aam
test
orl
jne
out
mov
push
xchg
mov
push
adc
fmul
mov
adc
test
mov
xorl
icebp
sub
xchg
push
push
and
lcall
push
mov
dec
and
loopne
clc
clc
pusha
and
das
dec
shrl
loopne
fadds
sub
jnp
leave
add
pusha
sub
lret
nop
push
das
inc
test
and
shlb
aas
cmc
ror
push
and
add
out
mov
mov
push
push
mov
movsb
nop
inc
ds
sbb
rorb
dec
fs
loopne
add
lret
jecxz
fldl
clc
test
add
shlb
pop
cmc
inc
rol
stos
shrl
pusha
repnz
and
pop
js
and
xchg
pop
enter
fsubp
mov
repnz
repnz
and
cmp
dec
mov
addb
popa
mov
sbb
movsb
mov
or
rolb
xchg
enter
adc
sub
mov
loopne
movzbl
sbb
popa
pop
jmp
add
sarl
adc
cmp
jg
test
jle
cmp
jl
mov
aaa
sarb
enter
imul
clc
jle
or
movsb
mov
jo
xchg
push
dec
adc
pop
pusha
enter
movsb
inc
or
ss
push
add
dec
gs
shrb
jne
push
and
push
push
and
pop
push
pop
and
adc
sbb
fldcw
fcoms
fbld
andb
or
mov
push
addr16
xchg
push
sbb
lods
sub
fadd
pop
sub
ds
pop
sub
add
into
je
lods
repz
test
insl
addl
inc
inc
fcmovnu
or
or
jl
push
cmp
int3
xor
mov
xor
mov
inc
cltd
popf
into
in
dec
jne
cmp
loop
mov
push
xor
xchg
xor
cli
ficoms
ss
repnz
add
xor
sarb
inc
adc
repnz
leave
sbb
lcall
imul
nop
mov
insl
sbb
int3
jbe
ja
xchg
mov
pop
cwtl
add
fcompl
fldt
sbb
imul
xor
les
ret
lret
sub
xor
sahf
pop
je
enter
rolb
repz
mov
pop
fcoms
push
mov
in
sbb
mov
push
push
mov
sbb
or
rcll
loope
cmp
iret
repnz
sarb
movl
adc
movsb
jge
or
add
cmp
dec
cltd
adc
or
lods
out
dec
add
xchg
aas
sbb
jno
stos
or
js
inc
mov
push
fsubr
inc
jl
sub
sub
jb
test
lea
jno
push
or
or
je
in
movl
fldl
and
mov
lods
mov
sub
jmp
in
pop
outsb
inc
push
mov
and
push
mov
jmp
adc
or
adc
insb
aas
pop
jae
push
orb
or
inc
and
add
inc
loop
push
xchg
push
imul
inc
add
mov
mov
push
xchg
xchg
imul
shlb
or
sbb
shll
imul
add
push
out
add
or
sub
cmpsb
dec
cld
adc
or
and
repnz
or
aad
fsubl
cld
xlat
hlt
inc
xorl
sub
hlt
mov
push
jns
or
push
push
adc
pop
addb
loopne
shlb
clc
bound
cmpsb
inc
jmp
xchg
data16
adc
clc
clc
hlt
ret
nop
hlt
popf
mov
mov
negl
and
jge
shrl
push
test
lock
aam
ja
js
call
jg
xchg
cmpsl
add
lods
adc
je
imul
sbb
cmp
add
cmpsb
imul
push
push
in
hlt
test
sbb
or
loopne
xchg
addl
clc
dec
jae
dec
call
ljmp
mov
add
mov
faddl
pop
sub
loopne
mov
push
leave
push
add
lock
push
repnz
inc
fcoms
fidivl
mov
mov
push
add
push
lods
or
lods
data16
add
insb
mov
lods
enter
cmpsl
mov
mov
mov
lods
inc
js
add
push
test
sbb
push
cmpsl
cmp
mov
out
loopne
mov
adc
movsb
ljmp
sbb
cmp
dec
bound
div
addl
movb
push
addl
adc
mov
add
aas
fbld
sahf
xor
pop
and
and
rcrl
dec
dec
pusha
sbb
add
into
xor
push
out
sub
mov
xor
push
adc
or
stc
repnz
mov
out
push
popf
jmp
and
aas
test
adc
test
adc
add
pop
add
cmp
subl
and
adc
cmp
xor
add
fsubrs
int3
xchg
cmp
aas
mov
adc
cmp
repnz
mov
nop
repnz
pop
loope
push
add
ja
js
push
fisubrs
pop
jne
cmp
rol
jnp
cmp
lods
inc
pop
push
call
outsb
cmp
adc
lea
ret
or
andl
enter
mov
jnp
jno
sbb
mov
push
push
adc
pop
cmp
mov
push
shr
mov
pop
ret
addr16
inc
rcll
pop
pop
jmp
pop
cmp
rcrb
or
jno
inc
rorb
subl
adc
pop
xchg
iret
inc
mov
jb
mov
in
jmp
in
push
or
insl
andl
aaa
mov
sub
and
mov
inc
jecxz
or
mov
sbb
and
mov
add
jl
dec
daa
xchg
inc
jnp
dec
mov
xor
jl
cmp
fldt
mov
cmp
cmp
jne
dec
add
sbb
sbb
in
popa
dec
inc
dec
inc
push
in
mov
jmp
push
es
add
clc
mov
push
shr
loopne
add
aas
jmp
cmpsl
adc
insb
sbb
stc
adc
ja
gs
and
xchg
mov
pop
out
iret
add
mov
imul
mov
adc
adc
mov
sub
xor
fists
lds
mov
inc
in
pop
pop
iret
adc
in
test
sub
out
fs
push
inc
cmp
lock
orb
cwtl
push
cmpsl
repnz
sahf
imul
mov
fdivs
or
push
test
pop
sbbb
shl
push
loope
sub
in
mov
clc
iret
pop
adcb
clc
pop
add
jne
imul
js
adc
pop
sarl
imul
orl
shll
pushf
jge
add
cmp
je
mov
or
sbb
test
movsb
cld
cmp
movsl
fstl
ja
pop
xor
lock
jnp
incb
sbb
sahf
sbb
jns
or
xchg
mov
lcall
adc
jmp
sbb
jg
mov
stc
mov
stos
test
dec
test
enter
xor
xchg
out
jnp
lds
sbb
add
not
sbb
inc
fiaddl
jne
mov
xchg
jle
jne
movl
cmp
loopne
dec
pop
mov
repnz
jne
add
add
xor
push
out
lahf
mov
sub
test
les
pop
out
sahf
adc
and
sbb
sbb
sub
frstor
aaa
or
cmc
add
xlat
and
add
js
xorb
mov
int
push
stos
push
ljmp
movsl
aam
hlt
mov
and
pop
cmc
and
sub
mov
sbb
inc
adc
jb
mov
or
pop
test
ljmp
dec
fistpll
mov
sbb
add
jge
xchg
movl
sub
add
sub
and
adc
pop
call
pop
mov
jns
ret
mov
xchg
push
jecxz
jo
or
sbb
sahf
xchg
push
xchg
sub
fdivl
lods
ss
fistpl
int3
sub
push
or
mov
sub
add
push
inc
dec
rolb
pop
testb
xchg
shl
cld
pusha
stos
add
in
xchg
mov
mov
je
scas
jbe
add
je
pop
shr
icebp
or
fwait
idivb
sbb
pop
movsl
cmp
cmp
je
mov
sarl
lds
adc
xchg
loopne
mov
mov
mov
ret
test
cmpsl
les
ret
or
push
mov
test
or
inc
xorb
imul
jbe
xchg
test
push
add
adc
xchg
sbb
imul
faddl
test
and
lahf
lods
leave
or
adc
hlt
xlat
or
outsl
je
out
fdivrs
xor
subb
jns
xchg
jo
inc
popa
insl
fisubrl
push
ret
into
mov
push
sub
fisubrl
mov
adc
pop
pusha
pop
mov
jae
and
pop
inc
mov
lea
lea
aad
aas
enter
bound
and
dec
je
sarl
repnz
mov
hlt
shrb
pop
loopne
mov
pop
sbb
fcoms
inc
mov
mov
mov
cmp
decl
call
push
lret
add
xchg
mov
out
inc
test
dec
out
cmp
pop
xchg
out
sub
push
mov
in
jecxz
add
loope
imul
loopne
and
pop
mov
popa
xchg
and
add
into
enter
lock
iret
sbb
and
mov
mov
jle
add
addl
xchg
xor
pop
add
xchg
rolb
inc
push
rcrb
or
cwtl
imul
les
rorb
das
sbb
enter
pop
out
pop
pop
pop
rolb
shlb
mov
sub
shlb
mov
iret
mov
mov
in
pop
fsub
mov
add
addb
hlt
in
cmpsb
pop
push
in
lods
incb
mov
nop
and
or
hlt
mov
testl
add
test
or
fistpll
adc
jo
out
push
bswap
sbb
pop
pop
lcall
popa
push
in
fstl
sub
push
lods
imul
test
cmpb
push
inc
dec
dec
mov
hlt
js
xchg
xchg
in
popa
adc
loope
rorl
mov
clc
lea
aaa
fadds
les
jecxz
add
mov
cmp
inc
bound
mov
test
xor
cmp
xorb
dec
push
adc
insb
out
adc
xor
cmp
sub
and
inc
sbb
pop
test
dec
cmp
mov
mov
push
add
add
sbb
lea
icebp
sub
mov
testl
and
cmp
or
push
fld
and
push
and
icebp
xlat
inc
stc
test
add
or
lods
and
pop
pop
mov
jmp
out
and
adc
movsb
push
mov
push
mov
movlps
ret
jge
enter
and
mov
test
xor
clc
mov
mov
insb
movsb
imul
mov
mov
sub
dec
add
inc
and
out
es
xor
cld
cld
or
push
push
dec
in
and
fnstsw
or
insl
test
jg
pop
movb
leave
jo
lds
inc
or
into
or
bound
test
inc
daa
or
mov
pop
repz
lea
cs
add
int
scas
push
push
add
or
xorb
jae
push
lcall
ret
shrl
movnti
inc
adc
xor
and
sbb
inc
cmp
and
xor
sti
pop
rorb
ljmp
sub
imul
imul
ret
shrb
data16
jle
loopne
add
loopne
repz
dec
aad
mov
popa
out
pusha
adc
insl
and
shrl
shl
adc
sub
pop
leave
add
and
adc
movsb
add
inc
cmp
cmp
shl
in
cmp
sub
test
test
call
mov
pop
dec
inc
or
inc
rcrb
sub
inc
sbb
pop
and
pop
mov
pop
out
fidivrl
pusha
or
mov
sbb
sbb
mov
add
icebp
adc
mov
add
sbb
clc
inc
or
adc
jo
test
jmp
bound
aam
or
rolb
inc
pusha
ret
jo
jnp
xorb
push
sbb
xor
rorb
lea
cmp
inc
and
dec
inc
insb
stos
sub
adc
push
xor
xor
ds
sub
inc
lcall
sub
sbb
sbb
daa
cmpb
cmp
push
fildl
mov
fisttps
movsb
adc
movl
pop
jbe
divl
insb
jecxz
cmp
ljmp
add
loopne
or
push
adc
pop
ret
lock
xchg
add
nop
mov
jmp
sub
lea
popa
in
sub
dec
mov
lahf
or
add
sbb
cmpsb
pop
or
lods
pop
ret
in
adc
push
cmp
fwait
mov
sub
ja
dec
jecxz
xor
jo
sbb
call
mov
pop
ja
jb
movsb
cmpl
and
inc
or
inc
jp
test
add
xchg
sti
dec
or
dec
adc
loopne
fcomps
ja
jae
repnz
adc
jmp
lods
push
gs
cmpsl
inc
icebp
lods
test
aaa
iret
jne
pop
pop
outsl
imul
push
push
lock
dec
inc
rorl
adc
pop
ljmp
cmp
cmp
xchg
dec
pop
adc
add
repnz
sub
rcrl
jmp
and
mov
sbb
lcall
pop
sbb
lds
addr16
push
das
outsb
jno
push
dec
nop
sbb
jbe
push
and
in
dec
movb
jmp
or
push
xor
cmpsl
clc
push
add
or
or
jbe
adc
xchg
adc
mov
or
inc
push
popa
sub
dec
ds
jo
fldl
rclb
xor
movsl
mov
pushf
sbb
push
push
and
adc
xor
push
sub
ljmp
aad
rcrb
pop
jno
and
push
rclb
pop
and
into
movb
popf
stos
adc
mov
sarl
xor
or
or
int3
cwtl
mov
xchg
dec
test
or
inc
inc
movb
mov
mov
fadds
jl
jne
mov
mov
jle
call
clc
push
fisttps
and
cmp
mov
dec
add
cltd
popf
mov
or
xchg
or
dec
mov
lea
aam
xchg
rorb
dec
sub
ja
sub
dec
mov
adc
insb
and
dec
adc
clc
push
sub
dec
dec
out
fs
add
pop
mov
in
popa
cmpb
add
orl
mov
jno
cmp
addb
xor
push
jmp
push
fadds
sub
pusha
loopne
ljmp
or
jne
pusha
inc
ffreep
filds
adc
insl
pop
pop
loopne
or
add
enter
inc
mov
or
loopne
orl
imul
sarb
ret
inc
push
sbb
movsl
xor
cs
sbb
jns
xor
push
sub
adc
inc
adc
mov
adc
test
mov
cltd
sub
inc
inc
pop
push
bound
add
or
lahf
xchg
sub
lcall
add
push
mov
and
inc
pop
jbe
mov
dec
push
in
push
sub
push
cmp
pop
pop
and
inc
mov
test
neg
popa
je
adc
dec
loope
sub
or
jp
add
inc
in
add
or
je
mov
or
or
jne
orb
and
cmp
pushf
adc
sbb
adc
clc
cli
or
sbb
cmp
or
loop
shrb
rorl
mov
mov
orb
xchg
fadds
cmp
jb
pushf
xchg
xor
lock
dec
shrb
or
pop
sbb
add
mov
or
leave
or
push
push
or
cvtdq2ps
stos
inc
jne
shl
add
mov
faddp
and
in
jno
push
push
leave
inc
push
nop
into
pop
lods
adc
sub
jo
cmp
aam
jmp
jbe
mov
lea
out
cmc
add
rcrb
loopne
sbb
std
xchg
mov
or
add
mov
imul
inc
sbb
push
es
add
in
or
sbb
pop
rorl
jns
xor
stc
inc
pop
add
mov
pop
add
or
mov
in
sbb
sbb
cmp
pop
leave
or
cmp
loop
bound
test
in
out
or
sub
jbe
adc
adc
dec
mov
and
push
fs
xchg
sahf
lret
mov
xor
xchg
in
mov
movsl
mov
add
enter
xor
adc
push
test
shrb
mov
push
jb
es
inc
int3
fcomps
push
cmp
fisttpl
add
mov
pushf
mov
lods
es
pop
mov
dec
in
rol
mov
xchg
add
cmp
or
jle
push
mov
repnz
sbb
xor
test
outsl
xchg
add
jle
sti
stc
xor
movsb
or
js
ret
push
jle
jne
pop
cmp
adc
cmpsl
ret
fmull
in
xor
or
imul
cltd
cwtl
mov
movsb
add
dec
or
push
xchg
or
adc
fmuls
shlb
inc
dec
sbb
adc
pop
sbb
pop
in
push
or
mov
test
sub
call
mov
inc
add
idivb
iret
mov
xchg
inc
cmp
loop
push
cwtl
sbb
outsl
adc
adc
push
jo
xchg
int
or
mov
lea
dec
push
or
dec
push
jns
outsb
sahf
imul
ja
or
sbb
ja
or
fs
xchg
loop
inc
adc
mov
push
jecxz
and
inc
mov
sub
push
sbb
fiaddl
pop
lds
cmp
fimuls
orl
mov
push
and
dec
or
adc
movsl
push
adc
pop
sbb
sub
and
rorl
cmp
aam
inc
shl
pop
add
add
fs
movsl
rorb
adc
inc
dec
inc
or
mov
lahf
inc
popa
push
fdivrs
fwait
lock
jns
insb
test
pop
xor
arpl
stc
sbb
and
das
jp
inc
mov
lret
xchg
das
or
test
pop
iret
push
addl
popl
sbb
dec
add
mov
rcll
dec
add
inc
add
les
add
push
aam
mov
mov
cmpsl
and
outsb
in
ret
add
icebp
hlt
lds
rorb
loopne
dec
dec
pop
insb
adc
xchg
sahf
fbld
lods
jmp
outsb
js
sbb
mov
cmp
movb
scas
push
push
push
push
or
adc
jge
mov
push
and
icebp
jmp
adc
scas
fimull
mov
jae
push
add
lcall
jg
lar
cltd
addl
dec
jle
sub
into
dec
shlb
fildll
mov
imul
jae
aam
aaa
jo
arpl
cmp
ss
inc
pop
adc
sub
adcl
inc
or
les
js
lock
adcl
xchg
dec
or
push
inc
lsl
sbb
in
daa
and
aam
mov
out
adc
mov
mov
cmp
dec
jbe
mov
push
add
sarl
mov
movl
jle
fimull
shrl
or
cmp
add
aas
push
xor
testb
je
inc
xchg
add
pop
jns
jo
daa
push
sbb
fsubrs
xor
fwait
push
sbb
loopne
mov
sbb
push
inc
jbe
sbb
add
cmp
jp
xchg
nop
add
mov
push
xchg
mov
add
pop
jmp
sbb
cmc
fists
jp
add
vmread
nop
mov
in
add
dec
inc
aas
sbb
aas
push
repz
fdivs
jle
inc
and
sbb
mov
movsb
mov
mov
and
mov
cld
and
fsts
mov
mov
xchg
outsb
or
out
mov
les
fcomps
push
nop
xor
add
enter
andb
adc
adc
nop
pop
mov
add
or
pop
rclb
inc
cmp
jge
dec
jns
cmp
cmpsl
jne
push
jb
arpl
adc
mov
daa
adc
fiadds
jo
iret
test
inc
pop
sbb
stos
inc
push
sub
decb
in
cmp
adc
stos
and
movsb
jmp
call
cmpb
cmp
rclb
adc
js
popf
imul
insl
imul
dec
or
xchg
or
nop
pop
lret
in
adc
push
cmp
sbb
idivb
xor
insb
mov
pop
pushfw
popf
sub
sub
cmp
add
xchg
xchg
cwtl
imul
xor
sbb
sub
pop
sub
fwait
mov
mov
push
sahf
cld
stos
pop
add
and
lret
test
mov
ret
xor
push
mov
mov
out
outsl
pusha
enter
mov
adc
or
mul
jo
or
cmp
sbb
adc
push
mov
mov
add
and
pop
inc
mov
mov
ret
mov
or
mov
aaa
call
mov
push
sarl
sbb
xor
cmpsl
mov
subb
gs
or
pop
push
mov
push
inc
mov
inc
pop
push
push
ret
sub
daa
enter
xchg
fdivrs
daa
mov
mov
dec
add
pop
incl
pop
and
jnp
push
push
xchg
outsb
cmp
dec
xchg
movsl
test
add
mov
ss
aaa
into
adc
cmc
mov
sub
jne
mov
sbb
enter
ja
mov
jne
outsl
subb
subb
cmpl
orl
jp
add
and
test
addr16
dec
or
and
or
adc
push
mov
xchg
and
add
pop
mov
push
test
or
and
jne
push
dec
mov
adc
loop
mov
or
pop
stc
btr
add
push
add
fimull
rol
cs
out
je
out
seto
lock
or
enter
push
fcoml
jbe
in
sbb
push
add
xor
jge
push
jp
clc
inc
xchg
je
fistl
ret
mov
sbb
add
and
lahf
add
add
jl
and
decb
enter
sbb
lock
hlt
incb
ret
add
jge
rcrb
fs
jne
cmpsb
or
bndstx
xchg
push
xor
movsl
jg
and
outsb
hlt
lea
cmp
cmpb
cmpsb
sbb
or
jnp
inc
fsubr
push
outsb
cld
mov
sub
stos
repnz
and
dec
mov
pop
add
pop
mov
insb
mov
inc
jmp
pop
scas
int
add
cltd
cmp
and
jmp
int3
push
adc
in
fdivs
shlb
in
fcoms
cmp
mov
xor
fnsave
xchg
cmp
test
and
dec
adc
push
adc
sub
add
add
in
aad
add
rcll
cld
jge
adcb
pop
and
mov
in
movsb
xor
addb
cmp
mov
subl
mov
add
mov
xor
adc
loopne
xor
cmp
enter
mov
adc
sahf
and
mov
and
mov
lock
jl
xor
jo
call
subb
cmp
jg
or
les
xchg
or
add
stos
dec
enter
add
push
movsl
fistpll
adc
nop
sub
scas
inc
adc
in
sbb
or
mov
ror
fdivr
stos
xchg
sarb
mov
push
or
fidivl
fs
sbb
inc
leave
and
inc
sbb
sbb
nop
daa
adc
sbb
mov
sub
andl
das
and
cmpsl
push
arpl
jle
scas
inc
or
fistpll
mov
lret
jae
mov
add
add
mov
xchg
add
or
dec
lods
mov
lock
jo
jecxz
or
test
aaa
xorl
call
cs
xlat
jbe
pop
sbb
dec
pop
outsl
rcrl
lret
nop
lock
ss
jle
inc
psubb
ret
in
in
call
clc
and
loopne
pushf
pushf
fmull
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pop
mov
lods
out
push
lret
nop
sbb
hlt
mov
push
pop
idiv
test
mov
xchg
xchg
test
adc
cmpb
mov
jbe
cmp
xor
sti
push
or
sub
mov
or
xor
daa
inc
jb
push
les
mov
fldl
mov
je
jno
bnd
into
lods
imul
or
out
fildll
out
movb
add
and
mov
das
and
imul
mov
and
and
clc
inc
pop
pop
push
add
or
cs
ljmp
mov
ljmp
cli
mov
adc
jmp
out
or
jns
adc
and
pusha
or
push
sub
dec
adc
js
xor
jge
sbb
and
mov
addl
sbb
cmp
fcoml
mov
sub
xchg
and
or
incb
push
push
popa
cmp
jle
push
pop
adc
or
mov
lods
or
sub
xchg
addl
dec
das
addr16
pop
and
mov
mov
cld
cmp
pop
mov
ds
cmp
test
cmpsl
jo
mov
cmp
adc
sbb
mov
xor
lock
sbb
jae
nop
adc
daa
mov
sub
xchg
mov
adc
and
and
lret
add
add
xchg
xchg
ret
push
add
jmp
xor
or
or
es
dec
sbb
imul
dec
or
inc
or
mov
das
adc
enter
lock
jne
and
and
xor
outsb
jmp
call
jne
xor
sub
aas
xorb
push
call
push
dec
jne
or
outsb
and
or
add
cld
pop
aas
shlb
fcomps
inc
and
ds
jb
push
pop
add
leave
cmpsl
xchg
out
shll
push
sub
inc
sbb
push
push
dec
inc
pop
cmpsl
dec
movsl
repnz
cmp
leave
leave
or
cwtl
and
and
inc
push
test
and
push
dec
inc
jb
adc
insb
and
inc
es
push
aam
jle
mov
cs
sub
jnp
add
mov
jmp
ss
and
adc
inc
in
mov
andb
xchg
rclb
sbb
clc
clc
push
ja
or
lods
neg
mov
jnp
sub
push
pusha
pop
sbb
in
addl
ss
sub
addl
jne
add
fildl
jmp
ds
add
adc
pusha
mov
mov
push
push
gs
mov
sbb
daa
inc
outsb
jne
incl
popa
jns
jae
push
rorb
xchg
xor
sbb
enter
movsl
pop
add
cmp
and
cmpsl
repnz
and
jmp
sahf
lret
adc
mov
push
push
inc
push
sbbb
inc
dec
dec
pushl
and
cmp
pop
lods
imul
xlat
jne
sub
xchg
sbb
jl
cs
ljmp
or
xchg
cld
mov
pop
shl
pop
add
adc
cmp
inc
cmpsb
mov
repnz
inc
imul
iret
adc
clc
adc
fnstenv
jns
push
imul
jl
mov
xor
adc
addl
and
add
insb
mov
or
imul
jnp
daa
ljmp
or
addr16
xor
mov
xor
xchg
dec
aas
adc
aad
test
nop
add
xchg
pushf
mov
cmpsb
jl
daa
or
hlt
add
ret
andps
fdivrl
add
mov
popf
push
in
in
rorl
cltd
adc
dec
aam
or
cmp
in
and
xor
and
mov
cmp
int3
shrl
out
xor
leave
pop
sub
xor
sub
sarl
incl
sub
pop
fstl
cmpsb
ja,pt
jae,pn
mov
push
pushf
mov
add
sbb
sbb
in
rolb
push
sub
je
js
in
add
fmuls
or
or
enter
inc
xor
bndldx
xlat
stos
add
mov
add
cmpl
sub
pusha
mov
push
shlb
aam
loope
pop
insl
addb
nop
xor
ja
test
imul
jnp
clc
mov
sbb
rolb
stc
and
dec
adc
inc
addl
sbb
sbb
das
and
xor
or
fcomps
sbb
inc
sbb
push
and
dec
lahf
aas
in
sub
hlt
fldcw
lea
es
sub
dec
stos
mov
fs
xor
into
in
inc
sbb
inc
call
cmp
cwtl
xchg
sub
adc
hlt
xor
mov
and
rcll
mov
sbb
xor
mov
sbb
mov
add
mov
lock
cmp
pushf
jle
sarl
mov
pop
and
xchg
sbb
lret
xor
mov
aad
scas
cltd
adc
rclb
lahf
lock
cli
cs
sbb
xchg
mov
sbbl
bound
shll
jbe
push
pusha
sbb
push
loopne
test
push
fs
xchg
or
sarb
mov
inc
lcall
movsb
mov
mov
cmp
jp
mov
into
outsb
inc
push
hlt
jne
ja
pop
subb
cs
loopne
mov
sbb
sbb
sbb
mov
sbb
xor
dec
or
sub
jmp
mov
sub
mov
daa
add
test
xchg
cltd
lods
andb
arpl
or
sbb
test
push
out
filds
pusha
out
mov
test
jle
dec
jne
sbb
xor
lods
data16
and
push
xor
lret
sahf
into
and
inc
xchg
push
inc
push
cmp
add
lock
xorb
pop
xchg
cmp
daa
fstl
das
lods
mov
cmp
fsts
sub
adc
shlb
inc
or
lds
shll
or
sub
fldcw
mov
push
daa
xor
inc
lods
pop
addb
add
fsubl
add
sub
add
bound
inc
push
pusha
popa
or
xor
inc
pop
ror
mov
scas
push
shlb
add
push
fucomi
pop
insl
jle
mov
pop
adc
mov
and
adc
xchg
pop
das
fdivl
shr
jnp
push
lcall
hlt
mov
mov
xlat
dec
mov
dec
lea
jbe
jb
test
sub
inc
outsl
lock
cmp
popa
mov
dec
pop
jae
jmp
mov
pusha
loop
and
or
sub
int
add
loopne
imul
call
mov
lock
pop
xor
clc
fsub
dec
dec
mov
inc
adc
push
push
jne
nop
cmp
jmp
frstor
cmp
inc
test
aaa
dec
lret
xor
lock
lock
nop
xor
cltd
mov
inc
fcmovbe
cmp
and
call
shr
push
cld
imul
push
push
xor
xor
xlat
orl
jo
lcall
dec
push
outsl
fldcw
loope
and
sbb
pop
enter
shll
inc
pop
xchg
and
xlat
pop
and
xchg
sub
dec
jnp
sub
adc
popf
pop
lock
and
stos
and
inc
push
xor
pop
adc
pop
adc
rorl
or
loopne
test
fldt
jo
add
cmp
movsl
sub
mov
imul
mov
xor
jns
icebp
xchg
mov
and
xchg
add
repnz
jmp
push
add
mov
pop
imul
xor
lahf
pop
and
movsl
xchg
sbb
daa
add
std
inc
sub
jne
sbb
cmp
push
adc
and
xor
adc
movsb
and
enter
aaa
add
cmpl
inc
sbb
mov
mov
idiv
fwait
inc
dec
movsl
iret
outsl
xor
je
popf
sbb
je
cmp
dec
pop
repnz
jbe
subl
out
movsl
cmp
pusha
pop
repnz
cmp
dec
and
pop
leave
xchg
enter
cmp
in
aam
pop
push
inc
push
idiv
adc
fcomps
rcrb
insb
push
dec
insb
push
pop
sbb
push
leave
xchg
imul
dec
push
jo
mov
sub
les
hlt
dec
in
xchg
fs
push
bound
xor
mov
and
inc
cmp
cmp
inc
jae
add
push
cmp
and
add
cmp
cwtl
push
add
push
lods
nop
dec
gs
pop
cmp
les
dec
sbb
decl
arpl
pop
rcl
dec
pop
mov
sbb
or
int3
inc
xor
push
inc
daa
push
sub
pop
fs
and
aaa
add
push
das
push
adc
pop
inc
outsb
movsb
lods
imul
das
sbb
mov
xor
dec
add
daa
test
push
fists
add
pusha
or
mov
daa
push
xchg
and
mov
cmp
gs
inc
call
push
push
std
nop
int3
dec
cmp
mov
fstpt
mov
push
insb
push
inc
jb
scas
xchg
test
push
les
ljmp
imul
js
pop
dec
xor
add
movsb
lock
add
xor
subb
push
lods
cmp
cmp
mov
xchg
aam
mov
je
int
cmp
ja
cmp
add
decl
popf
add
adc
sbb
pop
mov
xchg
xchg
lret
out
or
cmp
xchg
xchg
xchg
test
xchg
xchg
xchg
cwtl
pushf
mov
movsb
test
mov
xchg
xchg
xchg
mov
mov
xchg
enter
xchg
xchg
xchg
aam
fsub
xchg
xchg
xchg
xchg
in
in
lock
xchg
xchg
xchg
hlt
clc
cld
add
xchg
xchg
xchg
xchg
add
or
xchg
xchg
xchg
xchg
adc
sbb
lds
sub
cmp
inc
popa
pop
jle
push
jl
push
xor
mov
adc
mov
cmp
add
add
sub
push
cmp
push
sbb
rcll
pusha
and
inc
sub
addb
mov
nop
enter
inc
sub
cwtl
lock
inc
mov
inc
movsb
xor
and
pop
push
push
movsb
xor
nop
lret
mov
push
mov
shrb
enter
xchg
add
hlt
rolb
test
aam
movsb
xor
xchg
fsubs
xor
adcb
in
push
sbb
dec
gs
sub
or
lods
clc
mov
cld
int3
add
nop
lret
loopne
lock
cs
sbb
add
sbb
adc
sub
push
cmp
push
test
insb
and
cwtl
sub
sub
in
jge
xor
xchg
inc
pushl
inc
add
or
mov
push
lahf
adc
popa
inc
insb
outsl
jae
push
test
sbb
test
xor
push
dec
mov
inc
or
imul
sbb
aas
push
popa
jb
in
push
add
test
je
push
or
jbe
mov
addr16
xchg
gs
js
mov
scas
popa
add
rcrl
dec
arpl
jae
xlat
add
fs
mulb
or
jns
jp
adc
jo
inc
outsl
sub
pop
pop
pop
nop
jbe
sub
pop
add
add
pop
ret
adc
pop
xchg
push
or
or
test
addr16
pop
mov
and
push
sahf
dec
pop
adc
jbe
push
and
outsb
mov
sub
outsb
mov
xchg
outsb
popa
and
and
inc
into
push
gs
ffree
fcmovb
ficompl
in
pop
xchg
sbb
pop
pop
xchg
inc
xor
jge
or
ja
and
rcll
jns
in
icebp
and
xchg
jne
insl
outsb
jo
mov
das
pop
fs
fcomps
jo
inc
imul
icebp
mov
mov
xchg
or
and
xor
loope
popl
pop
inc
xchg
push
or
repz
ficoms
rolb
notb
popa
ss
insl
add
and
hlt
push
inc
xor
pop
aaa
bound
xchg
push
add
scas
repnz
aad
inc
int3
mov
test
add
jno
cmpsl
dec
das
cmp
inc
xlat
es
inc
cmp
outsl
dec
and
and
dec
jb
cmp
inc
dec
sbb
xor
inc
dec
dec
push
sbbb
push
push
and
jb
adcl
mov
or
pop
icebp
inc
xor
xchg
pop
clc
pop
inc
cmp
sub
xor
inc
jb
inc
pusha
popa
sbb
sbbb
add
test
dec
pop
aam
imul
and
pop
push
nop
jp
aaa
test
test
dec
add
scas
or
fwait
clc
aam
outsb
push
dec
push
add
out
and
xor
call
sub
inc
cmovnp
cmp
test
insl
hlt
roll
or
sub
bound
add
and
pusha
inc
fsubs
mov
inc
dec
pop
mov
divps
cmp
and
mov
cmpsb
insl
rorb
xor
dec
mov
mov
push
push
mov
push
xor
movb
dec
dec
inc
pop
nop
xor
rorb
cs
jo
inc
and
xchg
xor
cmp
insb
test
cmpl
adc
arpl
inc
cmp
xor
fimull
ret
pop
movsb
test
movsl
sub
mov
adcb
in
adc
das
push
cmpl
pop
jno
pusha
xor
cmp
dec
movb
mov
sbb
scas
xor
dec
call
mov
ret
xchg
adc
inc
add
or
xchg
xor
xorl
pop
rorb
and
jo
lods
push
lahf
gs
jmp
lcall
dec
shll
insb
call
pop
dec
pop
pop
stc
mov
in
dec
aad
fnstcw
jmp
das
mov
add
inc
addb
and
movsb
mov
add
mov
dec
pop
adc
adc
xor
je
mov
adc
lods
push
or
push
add
sbb
push
pop
repnz
add
add
push
push
dec
dec
outsl
sub
sub
arpl
push
or
mov
mov
lret
ret
dec
clc
dec
outsb
outsl
cli
movl
xchg
pop
push
outsl
pop
or
and
cmpsl
jne
cmpsl
mov
pusha
je
jge
push
mov
sbb
push
sbb
je
sbb
outsb
jbe
scas
adc
sub
ja
movsb
mov
pusha
loop
cmc
sub
add
stos
cmp
and
aas
mov
sub
xor
insl
fs
addr16
push
cmpsl
pop
inc
imul
add
mov
cmp
ror
pop
xchg
shlb
sbb
popf
mov
inc
fsubs
xor
fmulp
cld
jl
movsb
js
jl
iret
lods
jb
push
pop
jo
insb
sbb
pushf
cmp
push
daa
out
in
xor
leave
mov
pop
lcall
icebp
fs
lea
sub
mov
jg
dec
mov
das
sbb
adc
jl
dec
jno
mov
mov
lock
in
add
in
and
inc
sub
dec
ljmp
push
push
push
dec
pop
dec
dec
fistpll
dec
fldl
scas
out
push
jae
jg
inc
push
imul
lods
pop
sbb
jo
leave
adc
jae
sbb
cmpsb
pop
jae
subb
outsl
dec
sbb
mov
int3
sbb
xchg
cmc
mov
adc
std
jl
ror
sarb
pop
pop
imull
inc
add
movsl
push
push
fsubrl
rclb
mov
push
xor
adc
paddd
dec
xchg
pop
jne
adc
repnz
enter
xor
mov
pushf
stos
push
movsb
pop
lock
adc
lds
or
ljmp
xor
jnp
je
add
fs
inc
push
push
stc
or
pusha
and
xchg
out
sub
fistpll
push
inc
or
or
outsb
popf
sub
push
xor
jmp
insb
iret
and
mov
mov
or
cmp
cmp
push
mov
push
cmp
jb
cmp
cmp
cmp
jb
jb
ds
and
jb
and
and
jb
jb
es
sub
jb
sub
sub
jb
jb
cs
adc
jb
adc
adc
jb
jb
push
pop
sbb
jb
sbb
sbb
jb
jb
push
pop
add
jb
add
add
loope
jb
push
das
add
mov
xor
sbb
out
sahf
lock
sbb
adc
sahf
out
fmuls
add
repz
repz
push
shl
in
iret
repz
mov
test
mov
cmp
int3
nop
les
mov
iret
repz
jo
push
iret
repz
mov
dec
repz
repz
je
insb
iret
repz
xor
and
repz
dec
adc
ds
repz
xor
pop
sub
jns
out
and
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
shl
in
repz
repz
test
mov
aam
int3
out
cld
daa
hlt
out
push
je
mov
movsb
adc
add
xchg
test
inc
push
sub
xor
test
test
outsb
pop
push
js
xchg
mov
js
mov
push
cmpb
cmp
xchg
push
pop
shlb
cwtl
mov
adc
push
push
imul
push
divl
and
sub
mov
push
mov
push
push
mov
mov
and
jae
hlt
inc
mov
mov
pop
or
push
cmp
xor
sbb
out
sub
sub
fcomps
in
and
and
inc
and
ja
mov
sbb
xchg
lret
adc
add
aaa
movl
sbb
scas
inc
cmp
pop
push
push
and
test
mov
movsb
and
mov
and
test
pusha
sbb
mov
rcl
shll
ss
jg
iret
es
or
push
les
das
push
xor
enter
inc
push
dec
stos
jb
bound
enter
shrl
sbb
mov
aas
fstpt
lret
shl
pushf
push
ja
scas
in
lods
repnz
dec
int3
sbb
adc
rcrb
jbe
cmp
roll
int3
scas
and
push
enter
pop
fdiv
mov
aaa
mov
pop
jnp
adc
and
or
cli
sub
jle
adc
clc
scas
and
jb
popa
je
mov
cli
push
sub
das
lret
jg
cmp
cmp
mov
mov
and
mov
and
mov
add
jne
jbe,pn
push
daa
adc
cmpsl
pop
fmull
dec
ficoml
in
mov
fcompl
adc
mov
pop
dec
pop
sbb
faddl
loope
rcrb
ds
push
push
add
push
push
addl
mov
xor
daa
sub
insl
or
test
sti
xor
xor
sub
xor
dec
imul
push
add
movb
add
pop
jle
pop
arpl
insb
push
arpl
imul
inc
outsl
out
popf
pop
js
bound
pop
es
je
jge
jb
jb
popa
or
imull
ficompl
adc
bound
popf
dec
mov
scas
imulb
in
cmp
mov
addr16
jb
addr16
mov
add
mov
arpl
rcl
fisubl
jg
ja
stc
mov
insb
das
je
in
mov
jnp
sbb
and
pop
ret
and
mov
fucom
pop
je
jo
jb
jge
fcoms
outsl
dec
data16
outsb
fcoms
das
add
or
movsb
imul
lock
mov
mov
js
shlb
mov
clc
add
inc
dec
sub
dec
aam
push
fwait
jp
adc
add
push
pop
inc
push
dec
shrb
dec
call
je
mul
psrld
dec
cmpl
adc
jl
and
cmp
mov
fnstcw
add
mov
dec
mov
jle
or
js
mov
push
dec
mov
push
insb
aad
pop
ds
insb
outsl
xchg
and
push
aas
mov
inc
mov
xchg
pop
mov
pusha
mov
jne,pn
xor
call
or
sub
shrl
addr16
pop
fld1
add
outsl
push
shlb
out
push
ss
xchg
xchg
or
mov
cmp
xorb
lcall
mov
js
fwait
pop
shlb
sub
xor
inc
add
shlb
add
xchg
pop
or
outsb
and
jmp
fsubr
adc
sbb
xor
push
sub
pop
nop
push
or
sub
inc
mov
pop
xor
pop
fs
iret
popl
pop
add
lcall
add
add
jmp
pop
or
or
or
or
or
or
push
movups
adc
adc
push
pop
sbb
out
sbb
sbb
dec
and
and
pop
push
xchg
movsb
mov
cmp
repz
xlat
call
jns
cmpsl
sbb
jns
jo
xchg
mov
out
out
or
repz
repz
cmp
jp
xchg
movsb
mov
sbb
jb
sbb
push
fistps
push
mov
add
push
push
adc
and
or
dec
in
lret
or
push
mov
or
push
cs
and
dec
sub
in
lret
xor
mov
adc
adc
test
inc
push
dec
sub
xchg
lret
sbb
movsb
jb
in
push
sbb
pop
push
mov
pusha
sahf
dec
in
ja
push
popa
imul
bound
arpl
test
fs
and
xor
and
and
and
add
mov
push
push
mov
dec
adc
add
pop
js
les
pcmpeqd
mov
pop
sub
fadds
or
jo
dec
arpl
pop
add
push
lea
mov
jnp
mov
add
push
fidivs
and
add
sahf
std
inc
clc
push
adc
push
add
rcrb
jo
pusha
lock
pusha
sub
sub
sbb
adc
int3
mov
xor
pop
dec
xor
fs
xchg
in
push
loopne
faddl
rcr
push
rorb
mov
dec
and
and
push
fst
in
and
aaa
cmp
push
enter
out
jnp
jg
push
sbb
loopne
dec
cmp
mov
paddusw
jae
adc
lock
daa
push
mov
fs
dec
jnp
cmp
pop
clc
sub
ffree
pop
adc
mov
inc
push
add
push
arpl
adc
add
cmp
inc
out
sbb
out
add
fisubs
into
pop
ss
outsb
out
mov
push
pop
loopne
clc
push
aam
repz
jecxz
es
adc
adc
jnp
lahf
stos
cs
int3
lock
pop
repz
insb
dec
push
push
or
add
fldt
in
test
sbb
push
mov
xor
movsl
mov
cs
cs
fnstcw
fdivrp
xchg
jge
cwtl
insb
or
scas
jl
je
mov
in
mov
faddp
fistpll
adc
adc
mov
cmp
jl
clc
ds
jns
fdivs
insb
loopne
adc
movsb
cmpl
sbb
movl
adc
inc
mov
fs
xor
cltd
add
add
mov
jo
ret
mov
or
jno
add
lret
xorb
inc
inc
sbb
enter
cmp
outsl
je
jecxz
les
pop
cmp
cmpsl
fstps
les
dec
enter
add
cmp
xchg
mov
and
jmp
pop
xchg
addb
dec
call
movsb
cwtl
repz
shll
dec
push
idivb
addr16
ret
test
xor
cwtl
xor
ret
test
add
fnstcw
movsb
push
inc
xchg
inc
sti
xor
cmp
mov
and
test
cwtl
xchg
out
add
xor
xor
add
inc
mov
inc
or
fsubl
lcall
add
inc
insl
mov
xor
cld
mov
bound
xchg
push
mov
clts
or
jbe
mov
xor
dec
arpl
gs
lahf
cmp
add
adc
outsb
rcll
gs
pop
into
and
dec
dec
ds
rep
fcoms
dec
jne
cmpsb
mov
inc
js
pop
inc
jo
shlb
repnz
adc
ret
and
add
mulb
scas
sti
adc
ja
mov
mov
fsubrp
vmovsd
sub
xchg
add
loop
sbb
xchg
or
mov
mov
popa
movsb
jae
movsl
popa
fdivs
jl
dec
pop
dec
loope
dec
loope
dec
jp
adc
jp
mov
mov
jae
cmp
fwait
sub
or
inc
pop
pusha
or
xor
sbb
and
pop
add
mov
adc
sbbb
lock
outsb
je
sbb
mov
adc
push
mov
inc
sbb
push
bound
sahf
int
int
out
dec
outsl
push
dec
repnz
sbb
adc
mov
adc
rcrb
sbb
sub
mov
and
and
loope
gs
test
jns
or
or
jnp
pusha
rcrl
dec
jp
je
inc
adc
ret
test
and
add
test
jns
insb
mov
lahf
outsb
inc
test
pop
xor
pop
cltd
bound
and
push
sub
test
rcrl
dec
jmp
pop
pushf
enter
mov
add
fisttpll
roll
xor
icebp
jecxz
mov
movsb
fnsave
jbe
push
outsl
jo
jo
out
lret
push
mov
mov
mov
adc
add
scas
and
enter
jns
push
test
mov
mov
dec
adc
fs
push
cmc
xchg
rorb
cwtl
aaa
push
aam
out
in
pop
sub
addr16
imul
add
les
mov
rcrl
dec
sub
jne
popf
xor
das
dec
fiaddl
clc
mov
iret
xor
out
dec
push
dec
out
outsb
sbb
and
frstor
pop
or
pop
inc
cmp
xor
imul
sahf
mov
xor
inc
pushf
sahf
inc
mov
xchg
mov
push
sub
or
sbbl
lods
xchg
orl
push
xchg
movsb
test
dec
lock
in
cmpsl
dec
add
xchg
or
or
add
dec
je
or
fs
inc
outsb
jb
dec
sbb
cmp
insl
rolb
add
and
xorb
enter
jl
add
js
je
test
out
test
dec
gs
outsb
push
test
cmp
or
enter
jae
xchg
call
shl
cmpsl
dec
push
jo
test
rcl
or
pop
add
repz
enter
mov
jns
roll
loopne
fnsetpm(287
or
or
xchg
lods
pop
dec
cmp
or
imul
into
mov
cs
inc
jb
and
add
add
sub
push
dec
outsb
aam
add
mov
aam
add
nop
sub
mov
out
xor
pushf
mov
push
lods
inc
push
push
in
add
cld
dec
data16
fidivrs
sbb
cmp
cmp
adc
es
loop
fistpll
cmp
push
push
pusha
push
rcr
push
adc
sbb
outsb
dec
daa
subb
jno
enter
mov
mov
or
mov
dec
nop
xor
mov
ds
push
les
inc
out
pop
mov
jno
sbb
mov
sbb
cmp
mov
add
or
pop
mov
cmp
aam
js
jl
and
xchg
ret
and
pop
jb
lods
pop
sub
lock
sbb
cmpsl
fstps
inc
je
and
adc
jl
test
cwtl
mov
mov
push
mov
add
sub
jmp
nop
daa
incb
hlt
in
mov
inc
sbb
or
icebp
sahf
lds
popa
sbb
les
mov
ds
xor
add
shrl
in
orl
cs
xor
sbb
or
jg
lret
add
lock
and
test
jo
push
mov
cltd
jmp
in
jmp
sbb
enter
mov
in
sub
xchg
push
test
pop
adcb
adc
popa
cmp
pop
out
popa
call
or
sbb
mov
and
add
sbb
cmp
dec
addr16
nop
mov
les
lea
in
les
and
mov
mov
dec
and
xchg
test
in
sbb
sub
xchg
test
add
sub
add
cs
orl
xor
lahf
or
jae
mov
cmovb
xor
clc
addl
mov
add
add
push
pop
jg
or
push
pop
dec
xchg
adc
add
add
push
int
shll
push
xchg
pop
sub
pusha
push
js
bound
stos
cmpl
push
inc
mov
mov
orb
dec
in
or
notb
mov
pop
cld
in
cmpsl
mov
mov
jecxz
movb
add
adc
push
fadd
cmpsl
inc
jno
sbb
add
and
je
inc
push
ja
jnp
movl
ja
je
mov
lods
jo
out
fdivrl
sti
je
mov
insl
xor
imul
adc
jbe
inc
cmp
or
sbb
testl
daa
push
dec
icebp
fcmove
out
add
notl
xchg
lock
popa
nop
sbb
mov
jg
pop
sbb
ficompl
mov
pop
addr16
add
sbb
push
push
js
pop
mov
pop
outsl
cmp
sbb
sub
shll
cmp
arpl
mov
cmp
aas
push
cld
mov
notb
inc
xchg
sub
inc
sbb
fisubrl
dec
in
mov
sti
and
mov
enter
movsb
xchg
cs
push
jo
ss
sbb
xchg
lcall
cmp
pop
int3
inc
ret
push
lahf
loopne
inc
rcrb
jle
aam
addb
ret
cmp
clc
jg
dec
mov
and
ficompl
sahf
inc
je
fnsave
push
dec
imul
shl
pusha
add
sbb
xorb
pop
add
add
cld
leave
and
cld
add
adc
inc
push
and
sti
aas
mov
push
jns
jg
mov
lsl
mov
mov
int3
sub
shr
jne
icebp
mov
or
add
into
add
lea
aam
fadds
loopne
cmp
mov
hlt
add
sbb
adc
mov
outsl
cwtl
mov
sbb
jg
push
mov
add
jne
andl
pop
lahf
jmp
inc
inc
dec
push
pop
pushf
add
and
fmul
cld
outsl
and
inc
popf
je
testb
je
add
add
mov
loopne
xchg
or
pop
aam
sbb
and
mov
inc
rorb
fld
loopne
and
daa
jnp
mov
les
add
test
in
xor
add
add
nop
cmp
out
inc
in
nop
adc
cmpb
and
in
lcall
popa
rolb
ss
insb
sbb
mov
lret
inc
mov
sti
sbb
mov
mov
dec
out
iret
push
mov
daa
not
and
clc
mov
loope
xchg
nop
pop
dec
mov
ja
fildl
stos
or
push
adc
cmp
dec
push
daa
mov
pop
cltd
jp
and
fwait
mov
ss
pop
imul
mov
and
fsubs
fwait
cltd
mov
xor
and
mov
add
adc
rorl
cmp
fnsave
rcll
mov
xlat
add
xchg
rcrb
pop
mov
test
adc
pop
push
sarl
inc
jg
adc
add
jo
pusha
push
notl
inc
dec
xchg
mov
add
add
imul
ja
rcrb
inc
sub
lcall
jo,pt
inc
push
or
mov
or
cmp
jp
add
rclb
or
mov
ds
mov
sub
push
sbb
into
adc
ret
cmpsl
insl
mov
lret
out
cmp
and
adc
mov
out
les
pop
mov
gs
mov
jle
mov
push
xchg
pop
rcrl
push
dec
push
mov
test
or
adc
data16
outsl
loope
pop
push
shlb
jl
lods
dec
inc
xlat
enter
jne
and
and
movsb
pop
xchg
scas
daa
lods
mov
movsb
in
add
into
mov
and
sbb
loopne
out
or
mov
cmc
cmp
jl
stos
jp
push
inc
pop
push
enter
in
mov
jmp
pop
dec
pop
xor
mov
adc
stos
dec
lods
jge
or
fwait
xchg
push
push
mov
dec
popa
test
add
jnp
test
dec
jo
inc
jg
adc
and
cli
push
addr16
cmp
add
cmp
sbb
mov
stos
push
push
add
xor
ja
mov
loopne
scas
and
xor
inc
sbb
divb
lods
ror
test
or
jb
leave
mov
xchg
test
xchg
xchg
fstl
inc
daa
loope
les
dec
lds
mov
and
cwtl
push
mov
movsl
jl
mov
pop
xchg
test
aaa
sub
fcompl
push
push
sub
rorb
hlt
mov
and
adc
and
jecxz
xchg
imul
mov
cli
imul
js
pop
std
push
push
pop
dec
xchg
pop
movb
dec
andl
lock
sbb
sarb
sbb
pop
cmpsb
int3
outsl
mov
addb
push
cmpsl
in
lcall
pop
add
fs
iret
movsl
outsl
or
ss
sub
addl
cs
mov
sbbb
xchg
adc
lea
cmp
or
or
mov
xchg
inc
inc
and
jl
inc
xchg
ja
pusha
cwtl
pop
cmp
testb
and
jns
aaa
jle
adc
sbb
or
and
ljmp
mov
push
pushf
mov
cmp
out
mov
adc
pushl
cmp
mov
stos
sbb
push
imul
cld
sbb
or
push
mov
push
sbb
push
fbstp
mov
add
mov
mov
jno
add
or
jae
and
and
dec
shlb
or
sbb
es
mov
lock
jp
or
push
push
or
and
mov
cmp
add
pushf
jmp
incb
ds
movb
lods
push
push
or
pusha
dec
popa
add
and
pushf
add
fsubrl
add
add
cmp
into
xor
sbb
xlat
or
test
inc
mov
movb
mov
stc
adc
sbb
cmp
sub
sbbl
xlat
movups
ljmp
push
add
xor
add
ss
jnp
nop
xor
jle
ss
xor
scas
mov
or
orl
scas
xchg
and
cld
pop
pop
sub
or
out
sub
jmp
jb
inc
das
mov
adc
inc
cmpsb
xor
in
mov
add
add
adc
or
sbb
adc
das
push
xlat
pop
and
js
cwtl
or
les
sahf
cmpsl
xchg
add
push
lock
dec
cs
add
dec
mov
imull
lret
fists
lea
jecxz
out
cwtl
cmpsl
cmp
sub
call
pop
or
dec
add
and
or
or
or
lods
mov
leave
arpl
call
push
cld
add
std
mov
dec
adc
xchg
sub
aam
lock
lock
fcmovu
imul
push
hlt
loop
movsb
sbb
mov
lds
sub
je
push
push
push
jecxz
lds
mov
mov
push
sbb
mov
js
push
gs
incb
pop
lar
mov
scas
push
push
sbbl
push
cld
pop
add
push
dec
dec
xlat
sbb
cltd
xchg
dec
mov
inc
jge
lea
fimull
jg
pop
movsl
loop
repnz
adc
pop
sbb
test
cld
addl
insb
and
fimuls
cmp
jne
sbb
mov
cmp
sub
nop
pop
jmp
push
out
add
cld
data16
movsb
mov
push
xchg
xor
cwtl
in
dec
stc
fwait
aam
fistpll
push
lock
push
add
cmp
test
jo
or
inc
dec
popl
pop
shlb
mov
cmpsb
dec
cmpsl
pop
imul
xchg
dec
into
pop
in
cmp
nop
inc
jbe
inc
addr16
xchg
xor
in
test
cwtl
mov
push
daa
lods
push
sbb
mov
bswap
jg
lods
add
enter
xchg
add
scas
push
lock
mov
mov
sbb
pop
sub
jl
aaa
pop
and
inc
aas
daa
inc
clc
or
add
inc
dec
mov
lds
mov
lods
jae
ret
mov
movb
iret
jb
es
xchg
clc
push
xchg
repz
pop
mov
and
aam
mov
mov
jne
add
xchg
daa
mov
leave
xor
mov
or
nop
dec
add
loopne
ja
sbb
fstps
push
in
xchg
jns
out
cltd
mov
jns
out
leave
shll
and
jns
orl
cs
aaa
inc
loopne
xor
mov
pop
mov
jp
stc
cli
xchg
add
and
sahf
add
jno
adc
lods
daa
adc
or
push
push
add
sbb
and
nop
cmp
ret
xchg
add
push
xor
bound
jnp
or
inc
insl
cmpsb
xorb
insb
icebp
or
decb
adc
dec
and
and
mov
mov
push
cld
mov
test
mov
outsb
enter
scas
fcoms
pop
cld
shll
sub
mov
gs
sahf
adc
push
cmc
loopne
cmpl
sahf
push
fistl
in
xchg
test
lea
push
cmp
lock
mov
lock
mov
mov
adc
xor
pop
inc
or
test
xlat
jns
outsl
sbbb
cmp
pop
add
push
loope
cmp
xchg
inc
pop
mov
and
frstor
dec
cmp
adc
dec
dec
jg
popa
enter
lea
movb
rorb
addl
inc
mov
fs
dec
xchg
loope
add
add
mov
xchg
mov
push
or
testl
mov
cmpsl
and
and
movsl
data16
mov
jno
or
or
dec
inc
in
jl
mov
mov
inc
ficoml
ret
pop
fs
push
or
aaa
sbb
inc
sbb
add
and
push
xchg
jecxz
push
lock
clc
mov
rclb
or
lcall
aaa
inc
sub
sub
divb
jmp
sub
push
pop
sbb
cmp
sub
sub
and
ret
dec
dec
xor
sub
or
movb
xor
adcb
cmp
sbb
or
movsb
cmpsl
aas
mov
sbb
pop
inc
sbb
or
dec
or
xchg
fs
lock
inc
fiadds
mov
jnp
mov
or
dec
jmp
xor
imul
lock
cld
roll
push
sub
inc
mov
cmp
pop
fnstsw
sub
stc
mov
xchg
and
dec
jne
jo
inc
inc
mov
sub
mov
and
inc
ss
mov
or
or
pop
jb
cmp
mov
and
xor
fldenv
xchg
mov
jno
daa
push
adc
sbb
das
sbb
adc
movl
xchg
adc
ret
ret
fwait
add
pop
jo
and
gs
sbb
add
add
sbb
stc
je
or
je
xor
jo
cmc
lret
jnp
cmpl
inc
pop
outsb
js
ret
loopne
mov
fimull
inc
lock
fisubs
push
sub
add
repz
sub
in
xchg
fisttps
rorb
sub
inc
les
xchg
lret
in
xchg
and
inc
pop
and
pop
add
cmp
jl
xchg
and
jne
pusha
push
add
mov
xor
mov
adc
xchg
out
push
dec
dec
dec
inc
dec
push
add
inc
cmp
or
test
and
xor
aaa
fdiv
and
jne
or
or
aaa
push
sbb
popl
cwtl
mov
les
or
cmpsb
mov
incl
sub
cmp
jne
ss
jb
jne
mov
insl
push
pop
push
push
testl
sub
xchg
cmp
popf
mov
rol
sbb
in
lock
mov
mov
xchg
in
lret
mov
inc
pusha
insb
fidivrl
sahf
xor
dec
pop
adc
gs
jns
xor
inc
int3
loope
ljmp
popa
test
sbb
adcb
mov
mov
and
sub
cs
sbb
sbb
ret
cmp
loopne
jmp
cmc
or
add
dec
roll
add
or
imul
cmp
cmp
js
loopne
sbb
lock
shlb
fsub
and
sbb
outsl
sbb
adc
adc
or
adc
fistpl
sub
and
enter
add
sahf
addb
mov
adc
sub
shlb
aaa
and
sahf
filds
sbb
jge
sbb
adc
dec
inc
in
push
adc
push
das
sub
dec
dec
add
scas
call
add
fwait
dec
dec
pop
push
mov
popa
insb
add
or
or
or
and
ss
sub
popa
insb
popa
mov
shrl
outsb
adc
xchg
addr16
mov
addl
movl
pop
adc
xchg
lds
push
aam
iret
sarl
cmp
lock
hlt
adcb
jns
or
pusha
out
sbbl
pop
and
dec
add
or
sub
cmp
push
and
add
mov
mov
push
sbb
inc
gs
or
fiadds
cmp
lods
loopne
mov
repz
adc
lock
mov
enter
enter
enter
inc
pusha
enter
jb
inc
rcll
jl
js
dec
cmpsb
dec
dec
or
jae
stc
jo
js
loopne
sbb
insb
jno
dec
jo
mov
xchg
xchg
sbb
je
test
push
sahf
negl
push
insb
in
dec
mov
push
cmp
out
pop
sub
cmp
pop
inc
xor
xor
movsb
mov
dec
push
and
je
or
cmp
shlb
movsb
jno
and
inc
mov
faddl
test
push
push
sbb
sub
std
mov
push
jns
jge
jmp
pcmpeqw
pop
movsl
subl
aad
add
mov
inc
jb
je
add
repnz
adc
test
adc
jmp
outsl
ret
adc
cmpsb
add
jo
insl
pop
testb
stc
insl
bound
cs
jg
test
mov
movsb
lds
pushf
outsb
jne
add
inc
jne
popa
aam
pop
dec
jae
mov
jmp
push
jle
repz
xor
fs
inc
dec
cmp
dec
gs
jbe
or
dec
cmp
psubw
cmp
push
imul
nop
jo
add
jmp
data16
inc
mov
push
cmc
in
rcr
adc
push
loope
lods
ret
lret
xchg
popa
imul
popa
and
enter
imul
sbb
inc
loopne
or
jae
jns
hlt
pop
xchg
xchg
movl
cmpsl
mull
jo
cmpl
xlat
int3
fldl
mov
fdivrp
push
push
adc
movl
and
cmpl
lock
push
sarl
nop
adc
add
movsb
sti
test
sbb
inc
or
jmp
or
jb
out
lea
add
dec
cs
in
outsb
adc
add
mov
imul
or
das
adc
adc
and
or
insl
inc
mov
pop
das
or
mov
test
psrld
pop
dec
mov
out
testl
vmovsd
and
cltd
inc
mov
jge
sbb
adc
or
or
sub
dec
sarb
push
xor
fs
ja
out
call
jne
inc
adc
add
rorb
outsl
daa
dec
sub
or
fdiv
lcall
sub
mov
mov
lret
adc
pop
bswap
nop
stos
cmpsl
mov
les
xchg
or
loop
adc
fadds
fmuls
ret
mov
addr16
stos
pop
jne
xchg
cmp
arpl
push
in
xchg
sub
add
out
mov
stos
mov
adc
shrb
push
outsb
leave
and
mov
mov
add
dec
gs
or
xor
in
fisubrl
jmp
test
popa
aad
jmp
fmull
pusha
aaa
add
add
shrb
mov
pop
adc
insb
bound
or
adc
arpl
add
add
test
cs
lahf
add
and
add
sub
pop
rcrb
xor
fmuls
sbb
pop
mov
mov
pop
sub
adc
mov
fists
leave
rcrb
xlat
gs
add
scas
out
and
cmp
js
sbb
sbb
cld
movsl
jns
scas
adc
gs
imul
sbb
unpcklps
lahf
mull
xchg
xor
mov
clc
movhps
push
sub
jo
test
popa
sub
repz
scas
out
stos
mov
or
test
sbb
rcrl
add
add
test
adc
and
add
push
cmpsl
lods
in
inc
ret
jo
hlt
add
sti
inc
cli
push
rolb
clc
jmp
push
test
add
inc
adc
lock
mov
dec
ret
ss
sub
cwtl
divb
orb
add
sub
add
add
add
add
xchg
pop
xchg
addb
decl
add
add
or
or
and
xor
adc
sbb
cmp
inc
mov
ljmp
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivr
fiaddl
fdivr
xlat
call
call
lcall
call
call
call
call
dec
dec
into
ljmp
dec
dec
dec
dec
icebp
dec
push
hlt
pop
jns
mov
lret
push
or
xor
out
enter
or
andb
sbb
or
iret
cmp
jo
push
sbb
sarl
adc
pushf
push
mov
ds
repz
out
psubb
pushf
test
pop
pop
cli
scas
adc
in
jb
mov
icebp
insb
xchg
pop
cmp
jo
lahf
sarb
jae
adc
push
mov
xchg
sti
int
stc
xor
fdivr
in
je
push
call
insb
fs
fmull
data16
cmp
lock
mov
cmp
jl
out
adc
lcall
add
jb
ds
adc
push
push
negb
int3
pop
mov
pop
pop
sbb
pop
sub
sub
add
add
dec
ja
add
je
sbb
into
shrb
dec
cmp
push
sahf
dec
sub
add
cmp
outsb
and
dec
push
mov
movsb
leave
push
push
arpl
mov
jl
inc
xlat
mov
add
aas
incl
lods
pop
je
mov
xor
sub
or
mov
mov
sub
addl
pop
or
dec
ficomps
pop
dec
fcomps
or
mov
ret
jg
mov
pop
xor
movsb
into
jg
push
add
nop
add
xor
cs
xor
addr16
xchg
outsl
mov
push
mov
or
sub
imul
pop
adc
push
inc
jp
insl
or
xchg
inc
pop
xchg
subb
or
sub
sub
cmove
sbb
lock
push
movsb
in
or
add
jne
sub
and
dec
mov
mov
mov
jo
jecxz
mov
hlt
nop
je
outsl
rolw
call
jo
xchg
and
bound
or
outsl
ja
or
push
popa
pushf
adc
dec
xchg
mov
lret
xchg
mov
gs
bound
bound
fidivrl
and
mov
or
pop
cmpsl
and
mov
dec
imul
imul
sub
lret
jb
lock
adc
daa
pop
mov
xchg
aaa
mov
inc
outsl
arpl
std
sbb
add
js
mov
movsb
jnp
or
data16
jns
jne
mov
mov
enter
push
les
inc
push
add
add
add
pop
pop
cmp
out
mov
cmpsl
add
adc
dec
test
push
add
add
cmp
add
incb
pop
test
scas
pop
dec
add
add
add
mov
xchg
sub
mov
pusha
sub
aad
add
sbb
pop
or
add
add
cs
dec
mov
mov
cmp
adc
sbb
jmp
xor
and
and
mov
mov
mov
add
or
loope
push
mov
xor
cmp
fs
mov
inc
inc
inc
inc
inc
inc
or
mov
mov
adc
imul
dec
jnp
jg
pushl
pushl
push
sub
repz
mov
ss
out
dec
insb
hlt
mov
add
out
fsubp
imul
dec
pushw
fsubr
shrl
dec
push
dec
clc
sbb
idivl
push
jl
mov
jle
mov
pop
push
inc
push
cmp
pusha
je
mov
jbe
cmpsb
idivl
out
xchg
pushf
movsb
lods
add
pop
xor
out
push
je
mov
dec
jo
out
mov
mov
push
inc
push
dec
push
mov
mov
push
push
mov
es
addr16
aam
xchg
sub
rorb
sub
jnp
jnp
cs
pop
push
inc
cbtw
inc
push
xchg
sahf
jnp
fwait
in
test
movsb
arpl
pop
and
inc
push
jns
mov
es
les
xor
sti
mov
repz
xor
inc
data16
pop
push
fisubl
inc
dec
push
cld
loopne
es
jge
in
jnp
ss
push
pop
pop
je
and
int3
cmpsl
push
shl
pop
xchg
lods
add
into
inc
pop
and
xor
ljmp
adcb
mov
xlat
dec
je
jb
inc
dec
lock
je
sub
push
mov
outsb
jmp
push
popf
daa
pushf
mov
sub
cmpsl
pop
test
cmp
mov
or
sbb
cld
push
inc
dec
inc
push
int
jnp
jo
in
int3
outsl
hlt
loopne
out
pop
loopne
add
adc
aam
dec
inc
adc
data16
jo
inc
fidivl
mov
push
mov
mov
cwtl
sub
and
or
pop
pop
mov
mov
rol
sarb
outsb
mov
nop
fstps
or
nop
add
nop
adc
and
les
sbb
test
inc
push
sbb
call
mov
cmpsb
push
push
sub
iret
repz
mov
mov
repz
jne
sarb
je
adc
mov
push
insb
mov
push
out
dec
jge
loop
sarl
jg
call
mov
mov
adc
xchg
ss
nop
xchg
outsb
fadds
out
push
dec
and
fsubrl
xchg
lcall
sbb
fld
das
lea
mov
adc
nop
cli
pusha
push
jne
sbb
xor
lock
cmp
mov
mov
inc
push
and
sbb
mov
cmp
sub
push
imul
or
add
ret
adc
movsb
xor
push
push
lods
push
cs
fbstp
push
sbb
or
sbb
jne
insl
sub
loope
xchg
rcrl
add
mull
rcrl
mov
jne
xor
and
roll
rcll
cmp
hlt
inc
lock
subl
pop
punpckldq
or
insb
sbb
sbb
fistps
aas
adc
dec
sbb
add
or
movsl
stos
mov
push
fiadds
xor
fldz
mov
inc
outsl
or
sub
mov
mov
push
xchg
daa
push
test
cwtl
sbb
das
push
push
inc
push
inc
pop
outsb
pop
das
daa
push
jo
daa
or
pop
pop
add
push
add
insb
add
cld
fcomi
loopne
daa
dec
push
jo
imul
sub
or
mov
mov
mov
cmpsl
pop
add
or
add
shlb
cmp
fcomi
add
out
stc
outsl
daa
mov
push
dec
sub
or
pop
pop
sbb
inc
mov
push
mov
inc
insb
or
mov
cmpsl
jmp
subl
sub
icebp
xor
out
jl
and
xor
adc
lea
cmpb
push
pop
ss
decl
sub
inc
push
repz
mov
and
mov
daa
js
out
sub
inc
mov
call
je
mov
ss
rol
popa
add
jno
add
push
mov
adc
xor
mov
inc
xor
add
mov
inc
or
lea
and
incl
sub
push
or
or
scas
daa
sbb
shlb
mov
sub
and
aas
lret
dec
jmp
pop
or
sbb
mov
and
add
xlat
ljmp
in
lret
mov
push
ret
sub
and
orl
dec
out
gs
sbb
inc
and
insl
aam
jle
lcall
xor
and
decl
icebp
dec
dec
jne
xlat
push
cmp
cmp
mov
push
aad
es
es
xor
or
imul
push
dec
or
sbb
mov
push
inc
xchg
xor
rcl
cmp
adc
xor
rcll
sbb
and
xor
and
sub
sub
pusha
sbb
sub
push
movl
in
aam
mov
or
xchg
cmpsl
out
addl
inc
test
mov
out
adcl
or
nop
push
fidivl
xchg
dec
outsl
das
inc
sbb
cli
paddq
cmp
inc
sub
out
sbb
add
mov
xor
shrl
mov
ja
xchg
test
bound
out
loopne
cmp
push
pop
shl
mov
jl
adc
hlt
jmp
mov
adc
dec
arpl
adc
mov
cmp
or
sub
adc
or
cmp
sbb
or
data16
xchg
cmp
xchg
inc
dec
or
xchg
mov
outsb
hlt
jmp
cmp
xor
or
jmp
ss
dec
xchg
fs
push
sub
or
and
adc
pop
push
pop
xor
pop
or
adc
addl
or
int3
or
mov
sbb
mov
and
and
cli
inc
mov
xor
xorb
test
or
sub
sbb
inc
dec
fbstp
cmp
loopne
loopne
filds
dec
add
test
push
jp
or
daa
jno
pop
dec
sub
test
sbb
sub
pop
arpl
imul
and
mov
sub
enter
or
movsl
sub
cmp
xor
lret
mov
xchg
mov
push
scas
test
sbb
jne
mov
push
insb
insb
xor
lock
lea
or
int
pop
inc
inc
lock
jno
insb
rcrb
pop
addr16
in
bound
movsl
ja
mov
lock
repnz
jne
aad
adc
pushf
and
xchg
xor
jle
push
dec
push
sub
mov
bswap
inc
dec
or
xor
mov
xor
into
mov
adcb
ficoms
add
xlat
sub
jae
xchg
daa
inc
bound
fidivl
push
mov
loope
sbb
cmp
sbb
push
and
pushl
add
push
repz
lsl
pusha
sarl
jb
jne
bound
mov
jmp
cmp
jne
aam
add
mov
outsl
dec
pop
xlat
les
add
ljmp
xor
inc
test
lods
jo
adc
sti
popa
mov
sub
mov
jne
divl
cmp
and
fdivl
shr
jge
cmp
mov
and
or
add
mov
push
sbb
lods
mov
sub
add
and
fwait
xchg
lods
inc
pop
sti
or
testl
js
jae
mov
xor
fisubs
movsb
dec
adc
push
adc
dec
and
xchg
sarb
adc
daa
mov
push
incb
cmpl
fildl
in
cmpb
shlb
outsb
inc
dec
fildl
inc
inc
inc
arpl
andb
pop
cs
js
gs
adc
js
insl
js
shlb
ret
xchg
lea
out
inc
loop
or
jae
sbb
cs
sbb
add
pop
iret
xor
sbb
and
mov
aam
cmp
pop
js
movntps
lea
pop
subl
push
cmpb
lea
pop
imul
mov
mov
mov
pop
lock
daa
and
push
xor
dec
jle
push
jo
ljmp
add
daa
cmpsb
push
fs
adc
in
nop
fmuls
sahf
add
rolb
jne
cmp
rcll
cmp
repnz
adc
and
xchg
push
sahf
push
dec
divb
xchg
mov
cmp
dec
xchg
cwtl
sub
inc
jne
and
cmp
les
cwtl
mov
mov
cmpsl
subb
fdivrs
test
sbb
movsl
or
ret
in
sbb
inc
cvtps2pd
movsb
lock
cmp
and
push
rorl
call
fwait
rclb
das
mov
mov
movsl
ljmp
mov
push
pop
inc
dec
iret
nop
cmp
mov
mov
imul
and
dec
or
dec
out
lret
outsb
pop
xor
outsb
push
call
inc
mov
adc
sbb
xchg
xchg
movsl
test
sub
add
jge
mov
fmull
orb
xchg
in
sub
cmp
inc
mov
xchg
sbb
fcmovbe
cmpsl
shl
das
fdivs
test
jb
sbb
dec
pop
and
push
cmpsb
in
or
data16
jo
jl
mov
pop
out
jae
dec
adc
fistps
ds
adc
jp
scas
adc
cmp
pop
fdivs
ds
sbb
mov
mov
sub
les
xor
repz
lds
lods
xchg
ja
clc
ret
ds
shrb
fldl
sbb
mov
sub
mov
or
sub
insb
sub
or
shll
or
sbb
sbb
or
aad
xor
cmpb
movb
jbe
jmp
xchg
add
xor
scas
icebp
psubq
pop
add
dec
jmp
lods
in
repz
xchg
xor
cmp
sub
xchg
test
rorb
ficompl
mov
pop
pop
jae
ja
mov
jae
add
push
mov
push
cs
adc
or
jbe
jle
cmpsb
mov
mov
cmovae
addl
ret
or
bound
out
or
sub
std
xor
sbb
test
dec
or
loope
inc
jmp
mov
xor
arpl
jmp
pop
movsb
movswl
cltd
sub
mov
das
clc
sub
jo
push
cltd
test
addl
out
lds
xchg
out
pop
xchg
clc
fimuls
pop
and
lea
rol
and
adc
ret
push
xchg
jmp
push
fisttpl
jae
mov
dec
mov
pop
sbb
rcll
pop
dec
jecxz
inc
jb
add
or
stos
xor
xor
loop
fdivrl
das
movsb
sbbl
dec
push
movsl
push
fbstp
push
aam
inc
aaa
push
ljmp
aaa
cmp
les
arpl
ss
rorl
sub
clc
dec
es
pusha
and
fisttpl
mov
or
cs
fldt
stc
fstpl
fwait
jmp
inc
and
cmp
and
lret
and
and
imul
imulb
push
push
insl
pop
sub
sbb
fcoms
add
xlat
xchg
jne
sbb
or
pop
ret
imul
pop
sub
mov
mov
add
dec
lcall
mov
and
xlat
loopne
xchg
xchg
gs
xchg
add
sbb
orb
arpl
inc
cmp
fdivrl
dec
lods
lret
xchg
cs
call
and
mov
dec
dec
xchg
jecxz
in
ja
sbb
adc
mov
dec
mov
inc
push
in
pop
ja
mov
fwait
cmp
cmpsb
sub
or
bound
push
xchg
cmovo
lret
inc
sbb
and
adc
mov
mov
test
in
dec
jecxz
testb
js
add
popa
out
ficomps
inc
add
pop
jno
dec
push
fstl
add
and
mov
inc
push
pop
or
mov
dec
nop
test
inc
ror
sarb
push
jne
jnp
cli
mov
mov
sbb
mov
fs
sahf
into
sbb
push
add
xor
mov
outsl
rcrb
cmp
lcall
or
or
test
fwait
fnstcw
testl
push
movb
adc
push
jge
mov
mov
cmp
inc
lahf
and
mov
mov
scas
add
insb
cmc
sub
gs
in
or
scas
adc
inc
testb
cli
jmp
and
or
loop
add
or
sub
test
test
insb
insb
adc
adc
mov
xchg
sar
arpl
push
xchg
xchg
dec
mov
test
inc
loopne
adc
push
cmp
fists
addb
cmp
mov
pop
jmp
orb
jmp
mov
xlat
sub
mov
mov
add
jne
mov
sub
imul
push
adcl
call
adc
or
addr16
xor
pop
test
bound
mov
fisubrl
push
and
xor
mov
notb
cmpsb
test
fs
leave
sub
insb
add
outsl
xchg
daa
mov
pop
mov
je
dec
jne
je
ret
jecxz
fwait
popl
repz
dec
pop
add
imul
lds
adc
call
sahf
add
mov
les
in
xor
mov
enter
and
push
lret
stc
and
and
imull
jno
cmp
mov
add
add
lfs
push
xor
add
push
cwtl
mov
fstl
mov
push
or
xacquire
lock
leave
pop
mov
add
insb
cld
lea
mov
aas
jnp
and
adc
hlt
out
sub
jmp
jmp
dec
inc
xor
xor
mov
jle
dec
xchg
cmp
add
shlb
inc
pop
faddl
divl
jo
push
insl
hlt
imul
adc
push
push
add
inc
push
ja
inc
es
pop
pusha
jmp
mov
icebp
pop
outsb
sbb
xor
cli
or
add
lretw
push
pusha
mov
mov
xchg
sbb
adcl
jb
mov
rclb
add
push
test
add
pusha
aaa
pop
idivb
roll
sub
lea
and
pusha
icebp
cmp
jl
xchg
sbb
cmp
or
xchg
and
mov
shll
mov
adc
add
mov
or
orb
andl
add
fimull
cmpsl
rcrl
push
mov
xor
or
pop
or
add
or
repnz
xor
dec
je
dec
out
pop
jmp
cmp
je
mov
test
jbe
testb
add
jge
cmp
push
or
adc
nop
push
mov
je
mov
cmp
insb
dec
mov
je
cmp
ret
and
cmpsb
add
movsb
push
mov
adc
dec
loop
fistps
je
out
aam
xor
or
jne
in
xchg
popf
ffreep
imul
das
add
sub
ret
and
push
add
cmpb
cmp
and
jmp
mov
popf
popa
loope
inc
lds
xchg
gs
mov
lahf
mov
nop
test
pop
add
mov
add
push
movsb
ss
add
lods
pop
sub
pop
and
push
in
push
push
xlat
or
loopne
lcall
dec
sbb
add
xchg
scas
ret
add
jecxz
sub
fldl
xorb
mov
add
push
addr16
shll
or
iret
stos
sbb
mov
cmp
mov
lods
add
inc
push
packuswb
mov
push
sub
jnp
mov
add
inc
mov
sub
add
clc
mov
push
pushf
pop
sub
cwtl
sub
sub
jmp
fs
jg
dec
lret
loopne
mov
push
mov
loopne
out
movsl
sbb
or
inc
and
or
push
andb
jl
jne
sti
ficoms
je
sbb
xchg
jne
cmp
sub
js
xchg
scas
cmp
push
cmp
mov
cmp
shlb
ret
adc
aas
aam
ror
call
cwtl
lret
ds
push
xchg
xlat
clc
mov
adc
cmp
je
add
sbb
mov
pop
icebp
jl
mov
and
adc
mov
or
jmp
sbb
jo
mov
in
movl
sahf
movb
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
jmp
cmp
xor
push
add
push
je
add
arpl
in
ja
add
cwtl
mov
xor
mov
xchg
add
cmp
mov
mov
mov
or
pushf
testb
fldl
insb
mov
flds
adc
je
push
fs
inc
imul
pop
inc
or
test
mov
adc
or
nop
and
xchg
and
pop
add
imul
push
add
sub
xlat
js
mov
pop
inc
jecxz
xchg
test
cmp
and
inc
pop
ja
cmp
addb
push
fldt
aaa
push
cmpsb
lds
loop
push
fwait
enter
scas
insb
xchg
sbb
fdivrs
pop
sarl
lods
add
sub
mov
push
push
outsl
adc
sar
es
orl
dec
cmp
lods
incl
cmp
cli
cmp
push
mov
or
mov
xor
or
lcall
out
pop
and
ficoml
push
xchg
add
ds
sbb
push
xor
js
daa
pop
mov
adc
sbb
sbbl
pop
sbb
xchg
clc
or
dec
ret
bound
subb
sbb
or
loope
xchg
std
divl
ret
push
call
enter
or
xor
cmp
jo
adc
ljmp
jl
or
mov
and
and
clc
jne
sub
loopne
add
pop
pop
daa
jmp
xchg
xor
mov
nop
jno
push
aas
xor
rcr
push
cmc
push
cmpl
push
je
movsb
lock
push
test
push
out
dec
sub
out
fisttps
std
sub
ret
jne
cs
push
and
pop
cli
cmpb
push
push
dec
dec
inc
mov
faddl
test
inc
push
movsb
or
or
in
xlat
pop
adc
or
mov
pop
inc
jbe
jnp
jne
xor
jne
in
mov
subb
push
int3
mov
loope
mov
mov
mov
xrelease
jl
mov
aas
lret
inc
add
or
iret
fisttps
adc
cmpb
and
push
pusha
add
sarb
test
mov
call
cmp
xchg
push
pop
push
inc
fcom
ljmp
mov
dec
mov
fisttps
pop
push
adc
adc
sar
sub
ror
sub
rclb
dec
mov
outsl
inc
fisubs
mov
inc
sbb
test
cmp
mov
add
cmp
and
inc
or
dec
xchg
adc
cld
aam
inc
ret
outsl
push
pop
data16
fcmovnu
push
sbb
inc
dec
das
pop
dec
xor
pop
js
pop
das
inc
mov
inc
loopne
mov
rcr
aad
jo
inc
push
dec
in
sbb
inc
push
inc
dec
add
mov
xchg
dec
add
push
lcall
pushf
xor
outsb
pop
xlat
ljmp
inc
adc
or
cmp
and
xchg
inc
cmp
cmp
mov
sbb
ds
cmp
orb
push
sub
test
repnz
outsl
ljmp
flds
in
cmp
jnp
inc
idiv
clc
dec
and
mov
push
bound
mov
jns
xor
cli
cmp
fiaddl
in
mov
pusha
push
sti
iret
les
and
pop
dec
imul
sub
jmp
adc
aaa
inc
cmp
cmpsl
es
dec
xor
rolb
in
xchg
adc
or
scas
and
addl
cmpl
enter
dec
lret
outsb
dec
add
test
dec
dec
mov
cs
fsubs
ret
cmp
mov
push
sub
adc
and
retw
pop
mov
pop
xchg
lea
inc
pop
inc
and
sub
mov
pop
sarb
int3
test
aam
fistps
xchg
xchg
aaa
xorb
xchg
mov
hlt
pop
call
jns
mov
jle
addb
addl
shl
pop
shrb
fiadds
push
or
sbb
std
sub
add
repnz
outsl
xchg
mov
add
pop
mov
enter
mov
sub
mov
andb
faddl
test
mov
jmp
mov
cmp
cs
mov
sbb
xor
add
in
add
inc
test
jne
js
add
mov
push
mov
loopne
imul
mov
or
icebp
or
sbb
mov
sub
daa
push
inc
cmp
je
and
pushf
sahf
jg
lea
es
test
bound
rclb
xchg
fsubrl
mov
push
outsb
inc
xor
inc
out
pop
or
adc
add
cmp
mov
add
inc
outsb
lods
add
sbb
xchg
or
add
nop
add
pop
ret
frstor
sahf
or
stos
or
daa
or
adc
ret
shll
adc
add
xor
test
or
adc
or
jnp
add
xchg
pop
push
fstl
pop
addb
jl
xor
adc
addr16
fs
rcrb
xchg
popf
movsl
pop
arpl
jle
inc
test
es
push
pop
je
or
or
dec
push
jae
pop
xor
sub
cmp
out
testb
je
mov
or
rolb
pop
ja,pt
addr16
cmp
xchg
mov
hlt
lods
inc
loopne
mov
or
dec
aam
push
push
call
fcoms
inc
dec
pop
lahf
divb
cli
push
adc
sbb
inc
push
push
loopne
dec
xor
inc
iret
cmc
je
addb
cmp
xchg
cld
adc
and
outsl
add
mov
xchg
clc
sub
pop
cmp
je
pushf
int
cmp
xor
mov
dec
and
mov
xlat
adc
je
mov
push
mov
sti
nop
fbld
nop
pop
push
add
or
pop
mov
lcall
es
sub
dec
mov
shll
adc
push
sbb
mov
imul
adc
cmp
ret
lret
pop
dec
push
pusha
xchg
push
mov
add
test
icebp
pop
popf
add
dec
in
sub
dec
aaa
dec
inc
enter
cld
icebp
in
fistpl
outsb
pop
je
mov
movb
ja
mov
pusha
add
push
jbe
push
dec
sahf
push
jne
sub
bound
mov
push
cs
and
faddl
or
mov
mov
xor
leave
pop
loopne
cs
je
mov
subl
add
mov
sbb
or
nop
cltd
sbb
mov
sub
testl
and
setnp
push
xchg
xchg
out
cmp
mov
pop
or
cs
pop
pop
dec
movsl
and
pusha
jmp
xchg
sbb
data16
data16
add
inc
js
pmaxsw
ror
xor
xchg
sbb
loope
mov
imul
adc
dec
pop
pusha
push
out
or
cwtl
imul
mov
jbe
sbbb
lds
xor
rorl
xor
aaa
add
shll
inc
aaa
xchg
cmp
stos
cmp
shll
decb
sbb
jns
imull
or
jecxz
rclb
insb
mov
ret
pop
adc
cmc
mov
out
pop
adc
pop
or
inc
mov
fisubrl
jnp
sbb
add
mov
adc
pop
inc
and
jae
or
das
fmull
add
or
dec
mov
or
adc
inc
popf
dec
or
cmpb
push
inc
loop
testb
jbe
or
es
push
sbb
orb
adcl
sbb
push
mov
ja
add
cld
mov
repz
imul
call
pop
rorl
in
and
cmpb
aas
into
punpcklwd
in
inc
sub
movsl
les
pop
enter
movsl
ja
or
and
mov
inc
adcl
inc
xchg
or
cmp
jg
rolb
add
inc
pop
or
inc
mov
les
lret
test
sub
test
push
pop
and
insb
mov
lock
test
sbb
fisubl
nop
pop
pop
cmpsb
jo
sbb
movsl
test
repnz
test
cmp
cmp
cld
add
push
popa
inc
shlb
and
dec
es
aad
out
pop
xchg
outsb
or
clc
mov
ret
stos
neg
fs
mov
and
push
addr16
and
xor
jp
mov
pop
das
add
rclb
je
popa
xor
adc
adc
daa
mov
mov
mov
ret
jae
mov
dec
stos
pusha
mov
imul
int
adc
insb
push
js
push
mov
push
aam
and
pop
dec
lret
add
addr16
inc
xchg
out
js
lock
dec
or
imul
lock
les
lahf
add
add
arpl
adc
pop
movsl
pop
shl
pop
sbb
orb
jmp
clc
push
mov
push
dec
lret
in
or
xor
mov
bound
push
pop
in
xchg
fnstsw
call
add
push
sahf
lods
jne
xchg
adc
adc
xchg
sbb
sbb
push
sub
add
add
mov
icebp
ret
lock
test
adc
mov
data16
add
clc
push
jb
dec
and
inc
or
loope
dec
popf
data16
lods
or
mov
inc
fucom
sbb
mov
push
fucomp
adc
or
cld
adc
lock
add
outsb
cmp
inc
pop
sub
inc
sub
out
gs
adc
cmp
jl
mov
push
xor
in
jle
push
mov
push
cmp
inc
shl
add
adc
inc
in
pushf
movsb
mov
or
or
outsl
inc
push
or
add
leave
mov
mov
mov
int3
add
bound
cmpsb
clc
sarl
shl
ljmp
test
xchg
js
jg
jne
add
dec
dec
pushf
shlb
cmpsl
adc
test
lock
inc
fwait
and
ficomps
lea
adc
push
push
inc
loope
mov
jmp
sub
mov
imul
aam
mov
add
cmp
and
cwtl
add
adc
or
inc
push
adc
filds
push
call
jge
addb
jb
sarb
xor
dec
add
xchg
add
mov
sbb
or
loopne
jmp
fwait
pop
add
sbb
push
mov
daa
movsb
enter
inc
std
add
dec
mov
push
call
xchg
sub
sub
cmp
push
mov
or
dec
js
push
sub
cmp
aaa
call
fistps
sub
das
in
or
inc
inc
xchg
sarb
sbb
push
inc
or
dec
std
insb
popa
addl
leave
repnz
inc
fsubr
pop
es
push
cmp
in
adc
mov
outsl
or
les
loopne
sbb
mov
jge
xor
pop
je
add
sbb
sub
jb
je
mov
bound
xor
and
mov
inc
or
push
push
or
les
ss
inc
rol
lods
ficomps
sub
sbb
or
sbb
pusha
xor
xchg
test
cmpl
adc
push
rolb
or
pop
mov
sub
push
ja
cmp
rorl
push
push
addr16
stos
jge
orl
push
fsubr
fcomps
pop
faddl
loopne
outsl
and
pusha
idivl
ret
xor
add
or
enter
inc
int
xchg
pushf
lea
stos
in
push
std
dec
jle
lock
sahf
sti
jmp
mov
test
mov
and
mov
push
int
adc
lahf
mov
test
enter
pop
cmp
add
cmp
xchg
or
loope
mov
mov
andb
sbb
xor
js
or
mov
adc
adc
js
jne
jbe
in
pop
push
imul
in
call
add
lcall
sti
inc
mov
addb
clc
mov
pusha
xor
pushf
or
shlb
pusha
hlt
inc
xor
nop
shlb
and
dec
add
sub
and
and
xchg
xchg
dec
das
xchg
aam
inc
adc
add
ret
loop
test
push
add
sub
popf
les
adc
cmpsl
ljmp
add
gs
cmp
iret
stos
pop
test
adc
sub
std
or
xor
push
pop
movsb
inc
or
add
inc
push
scas
pop
mov
jae
mov
inc
shl
or
cltd
pop
add
cltd
mov
fildl
push
repnz
out
insb
add
rcll
sbb
cltd
int3
shlb
enter
cmc
fwait
clc
xchg
push
inc
int3
test
mov
pcmpeqd
sub
iret
aam
jle
cmp
add
adc
or
add
pop
mov
pop
aaa
lock
je
push
jo
inc
shlb
add
daa
out
jle
iret
adc
mov
jb
cmp
sub
or
push
loope
jb
rcrl
fcmovnbe
ret
sbb
cmp
cmp
jle
and
sahf
js
or
nop
cmp
shrb
or
add
roll
or
or
sarb
sub
push
add
push
dec
inc
dec
jl
pop
xchg
in
jbe
mov
jb
add
cmpsb
adc
sbbb
mov
sbb
es
or
pop
imul
mov
dec
mov
mov
dec
mov
add
inc
cmpb
or
cli
pop
inc
jae
notl
mov
jmp
add
std
inc
dec
lcall
hlt
lcall
sub
dec
ret
pop
pop
xchg
and
and
daa
inc
cmp
pop
shrb
add
push
xchg
xchg
mov
push
jno
mov
sbbb
cmpb
and
test
add
and
or
aaa
cmp
jecxz
cs
outsb
xchg
mov
cmpsl
cmp
jg
mov
andb
adc
jle
es
xorb
add
sbb
sub
dec
sti
and
bound
dec
je
add
pop
fcmovnu
sub
jmp
ret
loope
mov
cmp
dec
pop
add
mov
ja
dec
push
add
jle
push
jmp
mull
stos
aaa
xchg
lods
pop
addl
inc
sbb
push
jae
sub
and
or
dec
dec
pop
mov
mov
test
cmp
inc
pop
add
and
mov
enter
or
popa
leave
push
out
in
mov
or
dec
test
add
jmp
insl
insl
push
and
or
dec
mov
loopne
xchg
inc
cs
inc
sbb
aas
mov
call
xorb
xor
xchg
jne
xchg
and
push
sub
adc
add
mov
pop
loope
mov
out
or
and
inc
pop
ja
sub
or
dec
xchg
or
cmp
and
es
mov
sub
push
push
mov
and
aas
pop
fiadds
imulb
mov
xchg
repnz
iret
fldt
aad
xor
test
sub
mov
pop
bound
adc
jnp
andl
xlat
sbb
mov
sbb
sbb
push
arpl
sub
push
adc
aaa
sub
sub
push
xchg
rolb
bnd
jo
std
fmuls
adc
xor
push
fimull
cmpl
dec
jle
dec
adc
add
icebp
in
sub
in
dec
call
push
enter
sbb
ret
aad
movswl
or
dec
lods
fsubrs
test
or
ret
fdivrl
lods
sub
sub
fidivrl
add
movsb
sbb
push
fiaddl
mov
cmp
push
and
mov
imull
mov
rcl
xchg
xchg
or
inc
mov
inc
int
or
jl
addr16
or
cmpxchg
or
es
mov
jo
nop
or
cs
cmpsb
cmp
cvtps2pd
dec
cmp
and
inc
loopne
out
dec
lcall
test
ret
pop
sbb
add
jge
inc
and
xchg
xor
dec
pushf
in
and
add
mov
in
dec
lahf
outsl
adc
cli
fisubl
push
movl
outsl
sbb
mov
cmpl
sub
bound
pop
sarl
or
ret
in
and
sub
pop
push
rcrb
dec
xlat
in
mov
inc
stc
mov
and
loopne
shlb
and
call
rorl
jbe
mov
pop
dec
xor
push
sbb
push
push
mov
mov
sub
and
dec
xchg
data16
xchg
stos
jmp
sbb
lahf
cli
int3
jo
int3
in
pop
adc
add
addr16
and
pop
movsb
xchg
inc
add
jne
js
adc
ret
sbb
nop
loopne
inc
mov
mov
inc
add
arpl
data16
add
enter
push
movb
adc
call
ret
mov
outsl
xchg
outsl
adc
mov
add
add
mov
mov
or
es
sub
adc
or
adc
or
test
adc
xchg
dec
es
je
or
mov
mov
bound
jne
testb
test
test
js
sahf
push
test
and
push
jne
addb
add
fs
pushf
pop
or
out
push
inc
loop
xchg
mov
mov
jl
xlat
pop
xchg
imul
and
mov
mov
xor
call
cmpsl
popa
pusha
xchg
xchg
sbb
push
jne
arpl
and
mov
sub
dec
push
mov
mov
movsl
dec
aam
popa
or
je
movsl
push
aad
cmp
adc
mov
push
outsl
or
xchg
or
pusha
loope
aaa
lcall
mov
xchg
mov
xchg
cmp
pop
loop
push
sub
pop
push
in
in
dec
cmp
das
mov
pop
push
movl
aas
insb
ret
outsl
xchg
sbb
adc
lds
or
loope
testb
pop
adc
pusha
ret
dec
daa
or
xchg
or
add
iret
and
sahf
push
add
fcomp
fadds
sbb
mov
sub
sbb
fistpl
add
mov
loopne
cld
push
outsl
ret
add
mov
ficomps
adc
xor
jae
sbb
aam
pop
je
dec
lock
mov
push
sub
mov
cwtl
hlt
or
dec
dec
push
xchg
ret
mov
sub
js
dec
enter
lods
lret
pop
adc
andl
sub
adc
or
push
jo
add
ret
push
xor
jbe
inc
dec
and
sub
xchg
rcr
cmp
cmp
inc
pop
repnz
adc
stos
add
test
lret
add
daa
add
pop
arpl
and
ret
fstl
and
xor
pushf
push
mov
inc
push
rorb
ret
cmpl
fmull
cmpsl
xor
andb
fstpt
pop
or
in
push
clc
mov
pop
data16
sub
inc
mov
mov
inc
and
dec
inc
and
adc
pop
cmp
movsb
jo
mov
jp
fwait
sbb
mov
shl
fisubrl
xor
cmc
jmp
leave
aas
sub
xchg
pop
cmp
bound
xchg
arpl
mov
sti
push
sub
and
inc
movsl
aaa
sbbb
push
aaa
add
lods
sub
mov
cmpsb
push
popf
sbb
xchg
mov
inc
inc
daa
movsb
lea
mov
push
xchg
movl
imul
xchg
adc
xchg
and
inc
cld
hlt
xchg
adc
fldl
sub
sbb
and
adc
inc
and
sub
pop
ja
cmc
jbe
das
enter
dec
js
push
fstps
les
dec
jg
mov
aam
in
dec
dec
or
jg
mov
std
adc
mov
push
add
insl
cmp
push
add
gs
out
and
or
inc
lods
add
or
je
jns
shl
sub
nop
xor
xor
lahf
out
sbb
and
xor
fwait
cli
jge
pop
outsb
and
or
call
js
dec
je
add
jmp
bnd
in
mov
add
inc
pop
add
and
push
sbb
lods
and
je
lds
cmp
insb
stos
andb
mov
sbb
mov
push
dec
push
push
dec
inc
dec
je
fcoml
pop
add
ss
movl
data16
mov
out
add
aad
aas
ljmp
cmp
js
pop
mov
mov
xor
xchg
hlt
test
xchg
into
or
je
ds
aad
rolb
dec
inc
dec
adc
outsb
loopne
je
adc
cmp
bound
daa
daa
push
mov
sbb
ret
pushf
outsb
push
loop
rolb
adc
subb
out
xor
test
add
mov
popa
rclb
xchg
ficoms
inc
sbb
mov
dec
test
cmp
inc
enter
sub
push
mov
mov
and
mov
xchg
xor
xorb
sub
in
add
sarb
into
mov
jmp
cmpsl
xlat
enter
push
inc
shrb
xchg
push
mov
pop
fdivr
addr16
popf
shrb
aam
add
add
repz
add
push
lret
mov
gs
dec
cld
test
xchg
mov
jge
and
mov
adc
lea
sbb
lods
jmp
cwtl
repz
pusha
cmp
cmpl
andl
arpl
lret
or
sbb
pop
clc
aam
mov
inc
pop
xor
lahf
mov
mov
cmp
pop
rol
adc
mov
pop
test
into
test
mov
push
cld
add
cmpl
sarl
push
inc
mov
rorb
or
gs
jnp
shll
cld
push
jne
shlb
cmp
or
and
roll
shrb
mov
xchg
mov
les
add
jbe
sbb
shlb
jp
pop
sahf
dec
hlt
mov
sub
repz
into
mov
jo
xor
cwtl
leave
add
nop
jmp
xchg
aad
jbe
pop
jge
sbbb
sub
push
data16
hlt
test
sti
push
inc
add
inc
out
jmp
and
add
dec
insb
hlt
push
imul
dec
sbb
popf
xchg
cmpb
test
addr16
fbstp
pop
mov
pop
or
cmpb
add
cmp
push
inc
and
popa
fnstcw
xchg
outsl
lahf
push
fildll
jmp
ja
jmp
mov
mov
add
sti
notl
cmp
setg
jmp
in
out
inc
inc
inc
fimull
push
dec
cmp
setle
xor
movsl
imul
dec
inc
rorb
dec
adc
cld
lcall
mov
imul
and
ret
add
inc
sti
mov
mov
popa
ljmp
or
stos
insl
cmp
dec
inc
daa
lea
inc
dec
and
dec
sti
dec
mov
lods
ljmp
mov
xor
mov
loopne
pop
or
js
dec
imul
fstps
popa
add
inc
adc
adcb
subl
sub
leave
sbb
test
sub
sub
push
push
mov
pop
and
leave
and
and
dec
in
enter
call
aaa
lock
add
mov
movsb
test
mov
xchg
sbb
adc
ds
cmc
push
in
insl
sub
push
jne
test
movsl
xchg
icebp
xor
sbbl
or
add
sub
mov
or
push
push
jb
sub
or
stos
xchg
pop
or
add
mov
or
pop
add
jnp
push
loope
add
lock
std
pop
lds
scas
shlb
dec
push
sbb
out
sti
daa
inc
push
jns
add
divb
sub
lods
or
xor
imul
xor
mov
rcll
jmp
test
lret
cmpsb
xor
push
push
adc
sbb
mov
mov
in
pushf
test
xchg
sbb
pushf
sbb
jl
pmulhw
cs
add
out
movsl
flds
add
dec
push
push
jecxz
idivl
or
push
sub
stos
push
pop
in
popa
in
push
dec
sub
cltd
mov
mov
in
lea
xor
nop
pop
bound
sbb
pop
cmp
or
sbb
add
movsl
mov
outsl
sbb
add
pop
iret
push
mov
pop
cmp
jne
jo
mov
add
mov
jmp
dec
stos
and
clc
xchg
test
add
xor
jg
push
ficoms
jo
sub
inc
sbb
or
lock
daa
xchg
dec
or
dec
push
cmp
popa
pusha
je
cmpsb
add
cmp
adc
push
sbb
and
pop
dec
cltd
mov
sarl
iret
dec
test
cli
sbb
es
xor
sub
xchg
testl
jg
dec
or
pop
cmpsl
jne
add
out
add
minps
shll
pop
sub
into
cmp
loope
arpl
or
js
pop
inc
pop
scas
sbb
fdivl
or
push
jnp
mov
sbb
test
test
add
adc
adc
lods
lock
mov
pop
sub
cmpsl
sbb
push
clc
pop
inc
roll
jle
mov
rorb
rcrb
pushf
xchg
xchg
and
dec
pop
dec
pop
mull
push
xorl
pop
adc
add
enter
push
push
shlb
ja
and
mov
imul
in
and
jbe
insl
jle
sub
cli
pusha
nopl
dec
pop
pop
lcall
mov
fldl
nop
stos
pop
es
pusha
push
out
lods
call
out
incw
std
push
or
hlt
jb
aam
rolb
stos
sbb
popa
and
xchg
out
cmpb
inc
movsb
jecxz
fdivs
inc
xchg
pop
imul
xor
inc
push
and
inc
scas
pop
cmc
xor
lret
dec
sub
pop
cld
shll
cmpsl
add
pop
push
pop
lods
inc
mov
adcl
pop
lods
and
pusha
add
add
sbb
popaw
adc
mov
test
xor
or
rcr
lods
cs
cli
rcrl
mov
cmpsl
inc
dec
jne
mov
ss
push
dec
mov
xor
mov
sub
mov
outsb
or
adc
out
cwtl
adc
jg
fistl
je
inc
out
fsubrp
inc
pop
loopne
push
xor
in
adc
push
sbb
insb
into
jg
push
jbe
cmp
addb
push
in
mov
mov
xlat
add
push
pop
adc
push
inc
inc
repnz
mov
xchg
lret
imul
or
xchg
fidivrl
movsl
xor
jne
bound
fwait
mov
or
sbb
lods
insb
repz
mov
outsb
dec
sar
and
shrl
or
test
nop
add
xchg
jl
sbb
jecxz
nop
xchg
adc
imul
test
movsb
ret
sbb
and
insb
testb
jmp
adc
jmp
pop
and
dec
or
push
fsubs
fistpll
mov
add
jo
test
movb
pop
arpl
ret
and
or
sbb
loop
addr16
lds
sbb
and
ljmp
leave
je
add
sbb
pop
pop
xlat
and
jno
and
mov
xor
cmp
push
mov
loope
cmp
pop
loop
mov
push
push
sbb
mov
gs
or
or
ja,pn
or
add
popf
sbb
adc
adc
jbe
mov
arpl
int3
push
pop
and
les
cmp
sub
push
fdivs
mov
and
adc
adc
orl
in
and
inc
jmp
enter
cmp
inc
adc
add
sub
jo
ret
fimull
ret
mov
jp
mov
add
inc
cli
cwtl
push
inc
outsl
lea
add
stos
jne
adc
push
add
dec
sub
rorb
ret
test
call
movsb
stos
fisubrl
jmp
inc
or
inc
sub
dec
adc
cmp
xor
and
xchg
je
add
add
stos
sbb
or
xchg
test
mov
push
xor
xor
aaa
push
push
dec
jns
test
add
sbb
add
inc
decl
addr16
xchg
adc
sub
je
adc
cwtl
add
call
testb
xchg
ss
add
and
jmp
dec
add
test
cmp
sbb
hlt
push
cmp
inc
loope
add
pop
inc
inc
pushf
mov
pusha
jne
push
push
inc
pop
pop
es
mov
mov
push
inc
je
cmp
jnp
and
mov
aas
add
adc
push
pop
cwtl
imul
nop
data16
or
mov
mov
popf
add
inc
and
insb
jnp
jge
push
sub
mov
clc
repz
test
cmpb
pop
enter
add
mov
xchg
add
ret
xchg
cwtl
sub
inc
lcall
push
jecxz
mov
and
and
adc
lahf
dec
jmp
sub
xor
xchg
and
push
cwtl
daa
loopne
test
inc
and
mov
jg
mov
mov
incb
mov
mov
push
sbb
sarb
cmp
mov
jp
js
pusha
fmuls
movswl
jo
test
mov
das
das
clc
mov
sub
adc
clc
cmpb
icebp
outsb
add
mov
popa
jne
jb
or
loopne
lea
or
inc
jl
test
mov
idivl
add
pop
out
xchg
cmp
sub
sbb
or
test
pop
adc
cmpsb
test
xchg
pop
or
or
adc
mov
mov
jmp
icebp
add
cld
or
clc
enter
out
xor
add
insb
lret
xchg
push
outsl
dec
or
lahf
dec
repnz
jno
inc
pop
sub
adc
push
mov
leave
and
mov
pusha
sub
cltd
movsl
dec
outsl
mov
adc
scas
xchg
lods
pop
pop
inc
pop
repnz
out
insl
fadds
sbb
add
pusha
psrld
fdiv
shr
pop
jp
and
and
repz
movsb
cmp
pop
andl
sub
and
adc
into
test
push
push
sbb
lods
test
add
adc
add
xor
cmpsl
ja
repnz
lock
mov
out
push
inc
ja
je
out
and
movsl
sbb
sahf
mov
cmpl
test
ss
repnz
xchg
shlb
jne
mov
jo
int3
ret
xlat
pop
rclb
sbb
mov
or
faddl
je
je
cs
inc
or
fwait
mov
push
daa
lds
adc
pusha
sub
imul
dec
mov
cmp
je
sbb
mov
lea
das
int
adc
sbb
sbb
cmpsb
xor
mov
ja
pop
sub
rcr
jmp
hlt
adc
shlb
sub
outsl
mov
inc
bound
lock
test
lods
mov
cmp
sbb
dec
faddl
es
jmp
cmp
mov
push
andb
and
jns
mov
mov
mov
call
mov
mov
mov
cmpsl
sub
add
sbb
dec
pop
outsl
and
add
push
pop
xor
fildl
push
stos
mov
or
push
add
push
inc
adc
push
ret
and
xchg
test
imul
cmp
test
pop
adc
mov
jne
push
inc
cmp
xor
mov
cltd
mov
add
dec
xchg
ljmp
inc
sbb
arpl
pop
dec
gs
pop
mov
xchg
and
jge
sub
icebp
fisubrs
fnsave
jmp
roll
and
adc
out
inc
loop
sub
jmp
add
or
pop
push
dec
popa
adc
aad
fdivrl
pop
xor
sbb
sbb
sbb
inc
or
and
inc
out
xor
roll
push
inc
mov
sbb
or
lods
adc
pop
sub
and
addb
test
daa
push
cmp
js
sbb
call
pop
push
pop
cmp
pop
lret
and
hlt
ss
jo
or
adc
and
or
fidivrl
inc
insb
mulb
dec
cmp
cmp
fdivrs
out
and
test
jno
or
loopne
xor
subl
adc
sar
add
xlat
and
cmp
adc
ret
aam
pop
in
jae
push
sbb
clc
loop
mov
jmp
mov
jmp
push
sbb
test
es
add
and
mov
mov
cmp
jnp
jle
les
ljmp
mov
xchg
lock
add
loope
jb,pn
add
jmp
in
lahf
push
add
iret
es
lret
fsubrs
adc
andb
add
cmc
fnsave
cmp
test
and
pop
loope
ja
pop
pop
or
cmp
mov
xabort
jne
daa
test
xor
in
add
addb
jmp
cs
lods
imul
adc
lea
inc
jno
inc
sub
out
push
adc
mov
pop
sbb
mov
adc
mov
dec
pop
bound
sub
sbb
push
lcall
dec
add
rorl
inc
es
mov
cwtl
or
ret
add
pop
cld
es
mov
or
inc
xchg
cwtl
popf
rorb
inc
jae
insl
xor
and
or
mov
ret
push
adc
fcomps
push
inc
xor
push
rolb
mov
add
pop
pop
scas
adc
adc
pop
nop
mov
xchg
test
adc
pop
sbb
and
dec
mov
mov
movsl
lea
push
stos
adc
adc
cmpb
mov
jl
xchg
aad
and
sbb
je
je
pandn
in
rol
cli
add
call
xchg
dec
jmp
jno
or
addb
rolb
ss
inc
dec
aas
dec
inc
xor
je
xor
xor
lds
inc
add
les
ds
add
sub
aam
lds
mov
push
in
push
push
pop
cmpsl
ss
addr16
imul
test
or
fcomps
or
mov
push
and
sarl
movsb
xor
mov
dec
cmc
dec
rcpps
sbb
or
dec
or
mov
adc
cmp
enter
sbb
fwait
inc
test
cltd
inc
decl
pop
sub
ret
pop
dec
lods
daa
mov
push
in
test
push
inc
cmp
insl
jge
adc
add
je
dec
insl
stos
insb
or
sbb
jp
gs
sahf
mov
dec
rcrl
and
adc
push
or
faddl
sbb
push
sar
sub
or
lods
loopne
push
das
sbb
mov
and
bswap
dec
add
lock
aas
xor
repz
inc
sbb
push
or
rol
lock
sub
mov
lahf
jp
loopne
sub
jecxz
xchg
es
or
sbbl
js
xor
xchg
inc
shrb
and
mov
mov
inc
fisubrl
sbb
sahf
push
push
push
push
lea
dec
popf
push
stos
pop
popf
mov
enter
mov
sub
loopne
pushf
into
pop
add
jnp
push
mov
movsb
test
pop
fadds
pop
sub
inc
aas
pusha
fld
or
mov
jnp
pop
pop
or
mov
fnstenv
mov
and
push
xchg
stos
arpl
mov
inc
dec
ljmp
pop
test
sbb
sub
inc
inc
cmp
and
imul
pop
sub
push
adc
aas
and
add
call
dec
in
inc
jg
clc
push
fs
mov
daa
push
and
test
inc
push
sbb
sub
cltd
or
jmp
repz
cmp
jne
arpl
push
aam
mov
inc
imul
xchg
push
add
mov
mov
punpckhdq
clc
ror
or
ret
mov
push
add
add
dec
inc
add
pop
xor
pusha
adc
fwait
push
dec
sbb
push
stos
sbb
js
nop
ret
cld
push
push
sbb
mov
jne
shlb
icebp
sbbl
mov
leave
pop
push
add
push
dec
inc
adc
push
adc
fidivl
sub
add
or
ret
adc
inc
pop
adc
in
or
sbb
jo
and
add
pop
mov
cmp
push
xchg
sbb
fidivs
mov
inc
cmp
inc
data16
and
adc
hlt
repz
xchg
into
inc
or
mov
gs
lcall
xor
or
je
movswl
add
jmp
cmpw
cmpsl
add
sbb
push
shlb
dec
push
xor
push
pop
or
or
dec
cmp
push
xchg
dec
xor
add
daa
mov
outsl
xchg
mov
add
popa
jle
push
ret
cmpl
or
pop
inc
nop
cwtl
or
mov
je
cwtl
mov
dec
fsubs
cmp
test
dec
ret
cmp
rcrl
adc
daa
pushf
out
add
jnp
xchg
xchg
adc
enter
or
addb
lret
jb
inc
jle
cs
mov
push
sbb
add
inc
cmp
and
xor
inc
and
adc
and
bound
xchg
lret
jbe
adc
xchg
int3
enter
lea
adc
jl,pn
fs
mov
add
inc
mov
rcrl
rol
in
subb
imul
dec
popf
outsl
loop
mov
mov
lahf
mov
test
mov
aad
aaa
ret
pshufw
addl
mov
push
repz
push
hlt
jmp
jo
adc
cmp
or
cmp
inc
ss
cltd
ljmp
inc
xchg
fiadds
pop
cmp
add
pop
ret
xlat
mov
divb
and
dec
sub
dec
ss
jge
mov
adc
addr16
xchg
mov
add
out
rclb
test
rcrb
mov
scas
aam
mov
stos
xor
push
lds
mov
mov
xchg
stos
pop
sbb
sub
dec
cmp
inc
jl
xor
mov
jne
daa
cmpb
adc
and
and
pop
sub
lock
xchg
adc
xchg
jne
dec
or
add
fwait
nop
inc
push
out
andl
pop
fldcw
adc
cmp
in
je
mov
sub
or
inc
inc
sub
add
pop
push
test
pop
pop
js
push
fdivrl
mov
or
mov
int
leave
sbb
aaa
sub
inc
xchg
lea
aam
adc
adc
in
sahf
add
push
dec
cli
mov
lcall
loopne
mov
ja
cmp
or
xchg
cs
fbld
cmp
and
push
pop
push
sub
dec
push
or
cmp
pusha
js
inc
adc
and
ret
inc
jne
mov
adc
iret
add
inc
sbb
int3
ret
pop
cmc
push
rorb
or
and
and
and
dec
xlat
push
and
push
sub
inc
mov
or
push
lea
adc
test
dec
pop
movb
ljmp
loopne
push
rol
add
mov
add
subl
pop
jg
mov
sbb
sbb
cmc
push
clc
shrb
aaa
push
fs
inc
xchg
adc
inc
rcrb
sbb
test
pop
bound
pop
push
in
xchg
add
adc
xchg
push
inc
sub
add
pop
sbb
push
lret
xchg
pop
adc
ljmp
cmp
xchg
pop
and
push
cmp
loop
dec
in
in
aam
out
cmp
sub
mov
cs
mov
aaa
nop
xor
sub
orb
add
pop
bound
icebp
add
arpl
push
xor
push
bound
fcoms
fnstsw
dec
pop
je
rolb
and
mov
mov
dec
adc
mov
addb
and
loopne
add
pushf
sub
sbb
popl
pop
sub
ret
xchg
mov
mov
shrl
pop
mov
or
je
adc
bound
pop
sarb
adcl
sbb
pop
inc
pusha
xchg
push
or
pop
mov
sub
or
sbb
add
stos
push
jns
aad
mov
daa
jo
aaa
add
add
ret
shrb
add
cmpsl
pop
xchg
mov
sbb
adc
es
jcxz
out
fidivs
movb
addr16
jle
mov
jecxz
xor
pop
xchg
jne
mov
aam
cld
and
xchg
xor
hlt
aaa
push
and
js
cli
sbb
fadds
jne
xchg
and
imul
cli
pop
xchg
add
or
dec
add
sbb
les
data16
out
movsb
pop
pop
xchg
sar
hlt
dec
jle
xor
xchg
das
push
imul
das
mov
mov
es
or
lds
rcrb
jo
push
xor
and
cmp
and
ret
imul
ret
adcl
xchg
mov
pop
mov
loop
inc
cmpb
ljmp
jno
in
mov
adc
faddp
xorl
fsub
and
pop
mov
adc
or
rorl
loop
and
or
inc
push
leave
sbb
addr16
adc
into
xor
dec
jecxz
jns
jns
add
mov
outsb
xor
push
or
pop
or
mov
mov
sbbl
js
mov
jno
push
inc
and
movsb
loope
sub
les
or
insl
aam
jae
and
xor
mull
push
xor
jns
cmpb
adc
sub
and
push
jne
push
sbb
add
das
xor
or
repnz
dec
dec
push
jmp
filds
idivl
mov
adcl
into
jnp
or
add
add
cmp
jmp
cmpl
lock
sarl
jmp
in
andl
stos
jne
lods
add
xor
insb
adc
or
call
ljmp
int3
je
xor
xor
rorl
sarl
pop
pop
xor
scas
add
inc
adc
xchg
and
or
loopne
inc
sarl
inc
lcall
outsl
frstor
ficomps
mov
imul
test
out
add
pop
mov
js
subl
and
add
int
cmp
shlb
fistl
lods
dec
add
jae,pn
lods
xchg
popa
xor
xor
mov
sbb
cld
fucomi
rclb
push
je
adc
pop
jmp
add
mov
mov
addr16
push
aam
push
or
out
lahf
or
add
inc
orl
push
shlb
daa
clc
testl
into
add
or
pop
inc
push
es
pop
dec
push
sbb
pushf
pop
test
add
adc
iret
adc
ss
jns
test
mov
pop
clc
insb
or
mov
push
jne
sti
jo
adcl
and
and
and
addr16
repz
subb
iret
sbb
je
xor
jecxz
jne
push
and
adc
add
inc
jge
pop
ret
aam
xchg
cmp
inc
aam
sbbb
icebp
inc
inc
leavew
push
jne
xchg
dec
sub
xchg
inc
push
pusha
push
mov
mov
lea
aaa
pushl
cs
push
pop
outsb
icebp
and
push
and
jb
xchg
out
push
pop
ret
popa
jg
push
int
icebp
xor
ds
xor
inc
jle
je
cmp
iret
pop
arpl
je
xorb
push
push
cmp
pop
inc
outsb
out
cld
mov
leave
loope
mov
fisttpll
inc
rcrl
addr16
jo
pop
or
cld
push
adc
inc
adc
xor
sarl
subb
adc
inc
add
or
stos
rcrb
mov
cltd
xor
mov
mov
xlat
push
mov
fsubrp
mov
inc
jmp
lret
jne
cmp
lea
out
add
push
inc
and
lret
call
aam
or
pop
pop
mov
sbb
or
ffreep
inc
xchg
test
cmp
pop
sarb
add
sub
inc
xchg
lock
jg
les
dec
ret
sbb
add
pushf
cltd
xor
and
push
orl
mov
mov
xchg
mov
nop
xchg
pop
popf
jmp
sub
and
mov
xchg
daa
and
sub
aad
and
sub
outsb
leave
sahf
push
mov
mov
pop
gs
ret
testb
adc
mov
loopne
negb
or
ret
mov
dec
je
dec
out
xor
sbb
not
mov
nop
dec
add
xchg
loope
push
mov
xor
jg
jmp
sarl
mov
mov
jge
pop
js
push
pop
scas
int3
push
inc
adcl
mov
sbb
lea
and
add
nop
or
pusha
andb
cmp
loopne
lea
loopne
in
sbb
shlb
pop
or
loope
lock
add
fcomps
add
shl
fistl
sbb
push
xor
inc
jne
xor
daa
mulb
cs
adc
jne
daa
pop
xor
cwtl
ljmp
mov
inc
jmp
mov
cmp
or
inc
nop
por
push
ss
push
and
push
lock
lcall
xorl
fdivrl
js
pop
xchg
xchg
loopne
aaa
push
fs
and
adc
popa
add
ret
add
testb
adc
or
dec
aas
push
or
adc
in
popa
es
mov
lods
add
dec
fisubl
jo
jge
pop
adc
pusha
outsl
shl
leave
rclb
and
ret
pop
sub
xchg
push
cmp
cmpb
insb
rorb
mov
jg
sub
arpl
and
and
adc
xchg
mov
mov
fcompl
dec
cmpsb
in
inc
test
push
push
dec
xor
fisttpl
enter
dec
push
push
test
movsb
fdivrl
shlb
stos
arpl
divl
into
cmp
in
jno
ret
adc
dec
inc
jmp
add
add
pop
xor
pop
scas
mov
call
dec
mov
lret
sub
imul
and
push
cmp
subl
sbb
push
repnz
pop
xchg
cmpsl
das
mov
insl
mov
inc
ds
adcl
mov
loope
cmp
test
add
mov
hlt
out
and
inc
ja
jns
inc
dec
or
aas
inc
jmp
push
xor
nop
andl
clc
sub
fcmovb
ret
push
enter
popf
sub
inc
inc
push
sub
dec
sbb
test
gs
or
xchg
sub
les
cltd
push
mov
loopne
outsl
cmp
add
xor
sub
mov
je
xchg
adc
dec
jne
cmp
add
ja
mov
bound
sti
mov
hlt
add
xchg
ss
mov
loop
je
testb
sbb
and
xchg
sbb
jne
or
or
mov
jne
or
lock
cmp
into
les
or
fisubs
out
and
notl
adc
out
mov
aad
inc
xor
sub
xchg
or
daa
and
es
cmp
cmc
dec
int3
iret
ficompl
repnz
dec
cmp
or
push
adc
push
out
inc
scas
sbb
jecxz
xchg
lock
add
and
or
push
fsub
add
adc
ret
add
movsl
push
xchg
add
xchg
jns
fmul
lock
xchg
push
gs
or
clc
dec
jbe
push
orb
xchg
pop
adc
mov
adc
loop
or
adc
or
or
xor
xchg
lcall
adc
mov
roll
dec
pop
sub
in
mov
xchg
test
jnp
iret
lcall
jnp
inc
adc
cmpsl
mov
insl
inc
movaps
sub
stos
sub
push
xchg
xchg
std
inc
mov
cmpsl
sub
cmp
add
sbb
add
cmp
daa
xchg
out
mov
clc
lock
cmpsb
cmp
call
les
movsl
rorb
fmul
or
xchg
dec
fmul
aam
popf
or
fstl
mov
mov
push
inc
int3
push
aam
mov
cmp
jmp
mov
push
inc
mov
cmp
mov
push
imul
incl
add
shlb
lods
loop
lods
inc
out
push
or
mul
and
or
cmp
push
inc
pushf
or
mov
mov
dec
icebp
ss
mov
clc
or
xor
adc
add
jb
mov
mov
lret
fs
xchg
cmp
mov
mov
dec
push
imul
add
bound
shr
sub
mov
ret
test
es
or
mov
jge
adc
or
jnp
mov
mov
cs
mov
mov
push
xor
lahf
and
jle
adc
adcb
push
rolb
dec
sub
mov
xchg
mov
ja
push
adc
fmul
adc
ja
or
dec
ja
and
into
adc
mov
add
mov
mov
loopne
sti
dec
jb
rorb
or
cmp
fsubl
in
xchg
cmpsb
sbb
int3
or
fcmovbe
insl
sbb
xchg
cmp
clc
dec
fstl
sbb
mov
rorl
or
xor
push
and
xor
add
xchg
push
push
and
sub
lods
mov
movsl
jmp
adc
icebp
mov
add
add
out
pop
pop
mov
xchg
lock
sub
cmp
in
inc
xlat
add
inc
xchg
jge
xor
xchg
cmpsl
dec
or
sbb
int3
repz
repz
ss
dec
pop
add
cmp
rcll
out
popa
push
fcoms
int
enter
nop
mov
dec
gs
push
les
jns
xor
add
sub
push
dec
mov
push
dec
pusha
sub
pop
rolb
pusha
andb
int3
sub
mov
test
sub
inc
sub
dec
jmp
cmp
xchg
sbb
dec
push
andl
sub
loopne
mov
test
fnstcw
dec
or
mov
scas
loopne
test
cmp
adc
mov
push
clc
xchg
sub
test
fmull
xchg
sub
mov
adc
mov
mov
arpl
inc
xor
jno
fs
cwtl
xchg
cmpsb
adc
nop
cltd
jo
ss
arpl
dec
ret
push
imul
push
arpl
leave
flds
gs
nop
gs
mov
repnz
sti
xchg
rclb
rcll
neg
cmpb
arpl
jmp
add
push
sbb
mov
div
sub
ret
je
push
adc
xchg
fwait
cltd
adc
add
inc
or
repnz
pop
add
mov
push
in
xor
insb
sbb
dec
in
scas
test
imul
xor
inc
aam
xor
xor
adc
xor
jne
dec
inc
arpl
lea
enter
popf
jg
insl
pusha
cmp
sbbl
aam
cld
data16
fnsave
mov
push
add
out
sub
lds
jb
sarl
pop
aam
add
push
inc
ret
ret
movsl
das
and
loopne
dec
xor
repz
dec
movsl
loopne
adc
inc
int
rclb
xchg
sub
and
xchg
or
sbb
enter
pop
cltd
arpl
test
dec
and
adc
jg
rclb
pop
pop
test
insb
xor
je
or
fistpl
lcall
xchg
cmpl
ljmp
sbb
test
lar
jp
data16
dec
adc
push
add
jne
and
inc
test
lret
add
mov
cmpb
sbb
push
add
add
adc
xor
push
loop
or
or
adc
std
sub
jae
dec
add
and
cmp
inc
outsl
cmpl
xchg
add
inc
cmp
lods
mov
inc
addr16
xor
pop
mov
and
pusha
jge
mov
push
pop
sbb
inc
push
aam
lods
push
ficoms
mov
pop
daa
push
ljmp
nop
inc
and
jecxz
push
fsts
ja
xchg
add
rolb
mov
mov
jl
outsl
sub
dec
and
adc
sub
lcall
stos
fcoms
push
add
and
jo
mov
sub
test
cmp
sub
xor
dec
aaa
xor
ret
or
out
xorl
mov
adc
sub
or
or
dec
xorl
jecxz
or
jmp
sbb
arpl
test
stos
mov
and
mov
adc
push
call
or
adc
filds
dec
pop
jbe
popf
mov
xor
test
repnz
add
cmpl
je
xor
sub
es
adc
movb
or
or
inc
pop
xor
or
mov
or
pushf
iret
xlat
insl
and
mov
movl
mov
xlat
es
cmp
inc
inc
sub
dec
in
movsl
sbb
inc
pusha
add
xchg
dec
dec
fisubrs
or
pop
pop
pop
shl
pop
repnz
mov
adc
add
loope
addb
imul
xchg
pop
dec
add
dec
and
dec
nop
sub
rclb
daa
cltd
cmp
push
cmpsb
inc
pop
out
dec
jae
call
fistl
jle
pop
sub
fwait
ss
dec
js
jle
push
and
push
dec
push
push
pop
mov
mov
cli
lahf
shll
cmp
jge
cmpl
je
jno
cltd
push
pusha
sbb
mov
pop
pop
das
sbb
dec
add
test
push
dec
and
das
and
in
dec
sbb
call
ja
push
xor
and
add
bound
les
xchg
and
stos
mov
mov
movsl
pushf
dec
iret
lock
rcrb
inc
sbb
cwtl
or
repnz
mov
aad
cmpsl
aad
or
lds
pop
add
in
orl
push
or
test
pop
sbb
push
outsb
in
add
sub
pop
dec
mov
jne
push
out
and
pop
cltd
por
cmp
mov
sbb
jnp
dec
pusha
push
ds
add
pop
or
add
pop
and
lods
test
dec
ret
sub
fwait
mov
add
sub
dec
mov
call
pop
dec
mov
sub
mov
add
mov
sbb
xchg
rol
hlt
repz
call
mov
add
sub
or
insb
adc
loopne
stos
push
sbb
movswl
adc
lahf
push
or
push
adc
mov
adc
mov
out
test
push
movntps
mov
test
sub
cli
lods
pushf
mov
mov
aas
xchg
jo
sub
cmp
jl
sub
inc
push
dec
enter
outsb
push
or
fcoml
jns
sbb
scas
or
add
cmp
add
pop
push
test
push
js
aaa
es
popa
call
add
pusha
bound
sbbb
or
inc
fimuls
ret
sbb
mov
cmp
je
pop
arpl
fimuls
adc
pusha
fsubrl
jp
mov
mov
inc
gs
mov
outsl
ret
mov
adc
ret
ret
push
popa
inc
mov
inc
shrl
nop
mov
jmp
jae
fld
adc
enter
aam
dec
pop
das
add
das
imul
or
xor
lret
sbbb
fwait
ss
out
xor
loope
jmp
rolb
or
jb
lcall
xor
fdiv
int
pop
nop
sub
mov
call
add
and
and
pop
inc
add
push
and
xchg
cmp
aaa
sarb
roll
or
add
fstl
xchg
out
push
push
xchg
shlb
mov
xchg
dec
inc
dec
push
xlat
or
xchg
inc
imul
inc
sbb
mov
add
jle
cld
dec
iret
xchg
sbb
inc
fs
dec
dec
sub
aas
lods
inc
add
sbb
or
js
mov
sahf
mov
fsubrs
sub
adc
mov
scas
repnz
mov
jmp
mov
orl
inc
mov
jbe
test
adcl
pushf
xchg
cli
subb
adc
divb
sub
ret
push
add
mov
push
pop
les
leave
mov
roll
out
addr16
adcl
fwait
xlat
aad
imul
iret
xchg
cmp
push
push
add
or
adc
push
jmp
je
loope
xor
clc
mov
sbb
pop
inc
cld
aam
sbb
cwtl
push
inc
sbb
push
test
inc
sbb
add
loope
flds
cwtl
pop
fs
push
mov
pushf
addr16
pop
inc
outsl
rorb
inc
fidivs
into
inc
inc
pop
or
or
jmp
outsb
adc
push
pop
jmp
push
and
cmp
mov
jl
pcmpgtd
pop
xchg
sub
jmp
scas
lcall
iret
adc
push
or
fs
insb
ss
call
jmp
shrb
add
mov
lea
mov
insb
xor
dec
adc
and
cmp
add
insb
lods
pop
cmp
jne
mov
jl
lock
push
cld
bound
mov
imul
push
pop
rcrb
add
loope
adc
or
push
je
inc
xor
lods
int3
insl
mov
pop
lods
xchg
and
or
mov
mov
xor
hlt
mov
arpl
out
mov
imul
inc
cmp
ds
push
sbb
xchg
jecxz
fisubrl
jl
sbb
xor
mov
call
faddl
or
fstpt
adc
cli
pusha
fs
lods
adc
inc
jbe
push
inc
jl
daa
sub
inc
dec
push
cmp
pushf
add
inc
mov
into
dec
insb
jp
push
test
pop
sub
dec
pop
push
adc
pop
dec
jno
aas
fdivrs
lock
xlat
imull
mov
jg
enter
pop
mov
pop
test
jo
imul
sahf
sub
push
and
in
icebp
lcall
push
push
jns
cmp
jl
je
clc
shlb
lret
loope
fs
or
cmp
roll
mov
adc
xchg
out
sbb
mov
pop
shlb
sbb
mov
mov
lock
scas
jmp
pop
mov
int3
adc
push
pop
adc
and
das
xchg
add
and
sbb
cli
and
outsl
inc
and
pop
stos
push
jne
iret
pop
pop
arpl
popa
cmp
out
jl
daa
cwtl
imul
cmc
mov
sahf
push
outsb
and
lret
dec
mov
pop
daa
data16
fistps
and
dec
or
mov
xadd
add
hlt
jge
imul
or
inc
cmp
adc
cltd
outsl
push
mov
inc
popf
inc
movb
mov
add
fs
push
jg
sbb
adcl
movsb
inc
cmp
lock
xor
jg
and
das
mov
pop
mov
in
fs
dec
jb
mov
idivl
call
popa
fisttpll
xor
test
cmp
call
sbb
push
inc
mov
mov
pop
xor
dec
mov
push
xor
xor
cwtl
dec
sbb
dec
xor
mov
sti
incl
add
addl
jle
shlb
insb
push
dec
insb
outsb
jg
sub
test
push
in
xor
add
xor
js
fdivr
inc
adc
add
pop
add
and
in
jo
and
pop
aaa
or
or
mov
sbb
fs
shrb
sbb
mov
xlat
add
mov
inc
jl
or
xchg
aam
xchg
fsubrs
xor
pop
push
mov
adc
adc
xor
ja
and
scas
adc
pop
jb
ret
daa
in
jg
jmp
mov
cmp
clc
jb
scas
addl
add
pop
mov
rcrb
add
rolb
add
or
outsb
leave
or
enter
fs
mov
fs
inc
adc
inc
jge
sub
jecxz
push
or
pop
bound
orb
imul
mov
or
loopne
pop
test
int
test
push
pushf
rolb
xor
xor
xor
dec
pop
aad
sbb
inc
push
push
movlps
pop
icebp
and
sub
jne
add
sbb
fdiv
xor
jle
ficoml
pop
sub
push
pusha
movsb
add
idivb
pusha
fidivrs
dec
jne
mov
xor
sahf
or
push
or
sub
mov
adc
fadds
mov
dec
xchg
inc
push
add
xchg
adc
cli
mov
pop
jnp
add
jmp
into
push
pusha
pop
add
into
stos
fdiv
cmp
sub
jo
pop
sbb
pop
test
add
mull
cmp
imul
add
mov
movsl
xor
mov
fdivrs
push
or
push
push
xchg
inc
daa
or
inc
imul
dec
and
dec
loopne
or
xor
or
mov
lea
mov
pop
add
insb
cwtl
test
push
icebp
xchg
mov
push
dec
jmp
xor
sbb
and
and
dec
add
inc
sub
in
pusha
or
lds
sbb
rcll
xchg
push
or
aas
push
lds
push
or
sbb
imul
or
or
rcl
push
adc
aas
and
cmc
rcrl
push
mov
add
shll
js
jmp
mov
daa
sbb
or
mov
inc
sub
or
push
call
adc
or
adcb
mov
sbb
push
pop
add
cmp
mov
push
push
inc
mov
jmp
lcall
sbb
loopne
or
sbb
pop
out
adc
push
loop
test
loopne
pusha
xor
mov
sti
jp
xor
clc
sub
xor
xlat
add
movl
out
mov
in
or
jne
add
add
or
bound
push
pushf
xor
xchg
scas
jge
xor
out
push
fwait
sub
add
lods
aam
cmpsb
int3
xorb
loopne
imul
ficoms
sbb
and
push
pop
add
aaa
mov
mov
sub
aas
adc
adc
add
jmp
into
xchg
jns
jg
jo
shll
jp
jg
mov
addl
lock
ss
loop
xorl
rol
pusha
push
sti
jmp
cmc
fimuls
sbb
mov
push
push
sbb
inc
es
dec
aam
mov
scas
adc
or
call
xchg
xor
sbb
mov
add
add
push
gs
fsubr
icebp
pop
enter
nop
mov
mov
loopne
cs
pop
out
cwtl
out
add
mov
adc
das
stos
push
sub
jne
pop
sbb
push
jno
rclb
rcrl
dec
pop
das
imul
jl
add
sub
xchg
adc
jne
and
mov
or
dec
fdivr
test
sbb
push
dec
cmpb
adc
dec
adc
gs
das
loope
lahf
pop
cmpsl
shl
mov
sbb
jae
or
push
jbe
push
ret
ret
mov
icebp
pop
int3
test
rcrb
jge
pop
inc
jl
scas
push
xchg
push
lea
mov
dec
jbe
ror
rclb
jno
xchg
int3
mov
mov
or
aaa
adc
enter
lock
mov
lea
filds
sub
testb
adc
and
and
xchg
leave
add
inc
sbb
jae
fs
add
insl
popf
mov
je
negl
jo
sub
mov
mov
add
jmp
jmp
xchg
nop
cmp
int
cmp
jmp
sub
or
xor
adc
jge
repz
adc
dec
mov
xchg
negl
shrb
sub
cld
ja
sahf
inc
shll
out
cmp
inc
or
jbe
dec
xchg
aad
mov
fiadds
mov
add
into
add
iret
add
adc
lods
lods
inc
adc
inc
shlb
adc
aad
dec
push
pushf
or
mov
in
mov
and
xchg
fcoms
or
sbb
mov
adc
dec
and
pop
cmp
pop
cmp
push
push
rolb
inc
jo
in
pop
sbb
fmull
ljmp
sbb
mov
add
and
inc
or
ljmp
or
sub
inc
inc
pop
pusha
jae
mov
in
sbb
lods
push
add
sbb
in
imul
ja
mov
fstl
adc
ret
cmp
dec
add
pop
enter
and
test
nop
pop
inc
adc
loope
pusha
add
dec
popa
sti
pop
cmp
jne
and
adc
push
push
in
or
add
shrb
sbb
inc
call
or
pusha
sub
pop
in
dec
mov
shlb
call
lret
sub
mov
iret
data16
add
mov
into
in
jae
add
arpl
or
fstps
test
test
xor
int3
adc
fcmovb
and
pushf
adc
cmp
jb
and
insb
adc
bound
xorb
xor
add
or
and
xchg
mov
imulb
push
lahf
pop
cmp
mov
add
loope
sub
shrl
pop
or
pop
pop
mov
das
add
jnp
push
outsl
sub
add
jae
dec
sbb
mov
inc
or
adc
and
sbb
sar
imul
xlat
mov
insl
rcrl
xor
and
jge
fisttpl
xchg
or
adc
std
iret
popf
icebp
pushf
ret
mov
inc
fs
addr16
dec
jmp
outsl
mov
jns
dec
jge
and
xchg
push
icebp
push
pushf
popa
addr16
and
outsl
sbb
sbb
adc
cs
lret
cs
sbb
mov
mov
xchg
mov
jno
test
scas
or
inc
inc
push
mov
lds
mov
pop
and
xchg
shlb
dec
test
and
push
fdivrl
or
test
adc
dec
xchg
and
mov
xor
inc
call
inc
decb
hlt
hlt
lock
fs
lock
push
inc
xor
inc
dec
pop
and
mov
pusha
aas
mov
add
sahf
xchg
je
cmp
jnp
dec
clc
repz
aam
fsts
jp
sub
rolb
and
fisttpll
or
dec
cmpsb
push
mov
push
orl
pop
add
repnz
adc
mov
mov
push
lods
push
addr16
and
inc
nop
mov
testl
fidivrs
ror
movsb
xor
fcomps
daa
push
pop
or
icebp
pop
lret
les
movntq
dec
adc
push
int3
sbb
jmp
pop
sub
xchg
push
or
pop
mov
push
rolb
shrl
push
das
inc
and
les
add
dec
cmp
js
add
pop
jl
mov
add
pusha
daa
movsl
sbb
mov
adc
into
adc
sbb
adc
ja
mov
xchg
sbb
push
adc
lret
les
dec
push
sbb
std
sbb
add
jl
xor
into
push
mov
test
mov
jle
pop
jecxz
in
push
aaa
push
push
insb
js
xchg
stos
xchg
push
iret
push
or
sub
cmp
xor
lahf
fldt
pop
cmpl
xchg
adc
loopne
inc
sbb
insl
dec
xchg
sub
inc
gs
add
sbb
push
shrd
cli
inc
insl
xchg
stos
jle
icebp
sub
rorb
push
xchg
and
mov
mov
xchg
xor
aad
cltd
nop
mov
jne
dec
jb
and
cmp
gs
popa
push
pop
inc
sub
out
or
and
nop
xchg
ficomps
in
push
xchg
shlb
dec
ja
or
lock
add
and
mov
adc
stc
push
add
xor
sub
mov
int3
or
dec
cmp
pop
pop
lret
mov
hlt
in
and
je
mov
and
xor
enter
and
pop
xchg
lock
sub
adc
sahf
inc
sarb
movl
or
daa
dec
push
sbb
jge
jbe
jne
mov
mov
sti
xchg
lret
jae
cmp
jne
pop
jp
fldl
cmp
mov
and
lods
cmpsl
or
pusha
adc
add
sub
push
lret
shr
imull
mov
sbb
adc
mov
xor
jo
jb
push
pop
adc
clc
or
iret
inc
loop
dec
icebp
mov
movsb
add
test
mov
adc
rclb
cli
adc
pop
jecxz
ret
out
push
mov
insb
pop
cvtps2pd
cmp
test
sbbb
or
jp
cmp
add
addl
pop
scas
daa
push
arpl
and
and
mov
pusha
iret
inc
xorb
js
adc
push
push
add
loope
dec
jne
xor
xchg
jl
loop
pusha
scas
rorl
inc
inc
cmc
movb
or
xor
int3
adc
mov
and
cmpsl
mov
adc
add
addr16
ljmp
push
fiaddl
enter
enter
int
xor
push
adc
mov
cmp
jnp
out
leave
lret
inc
enter
js
arpl
icebp
sub
pop
popa
jb
mov
sbb
in
push
jp
arpl
aad
lods
xor
and
and
push
mov
xor
outsb
or
dec
push
pushf
push
pop
test
clc
cmp
xchg
dec
jo
movsl
iret
add
loopne
rcr
lea
pop
subl
inc
clc
push
std
mov
scas
dec
xor
enter
push
pusha
adc
inc
add
mov
rcrb
xor
in
xchg
pop
and
clc
add
imul
lock
idivl
ss
es
push
push
call
jg
mov
scas
sahf
mov
push
mov
lock
mov
and
push
and
sbb
push
sub
sbb
out
cltd
rcll
pop
push
mov
rclb
mov
xor
or
mov
aad
and
inc
pop
aas
aad
mov
insb
loop
pop
adc
je
pop
add
sub
add
xor
orb
pop
adc
sub
mov
adc
and
mov
mov
cmp
jae
pop
cld
and
add
lret
lods
lea
sub
inc
pop
ror
aam
das
fadds
js
fidivrs
insl
mov
inc
in
iret
xor
ret
xor
pop
sub
xchg
cld
add
push
aaa
mov
cltd
sub
inc
push
cltd
shrb
popa
add
mov
push
push
test
sbb
mov
popa
push
ljmp
mov
nop
or
sbb
popa
inc
pop
ss
xor
aaa
xorb
or
dec
das
inc
jle
push
pop
xor
jmp
xchg
xchg
or
add
dec
or
and
outsl
fidivrs
or
lahf
add
jg
inc
dec
insl
sbb
mov
adc
and
xchg
add
mov
sub
sub
adc
test
xor
cmp
sbb
dec
ret
or
jnp
insb
jns
mov
outsb
pop
aas
xor
shl
cmpsb
lret
rorl
inc
rclb
fldt
push
jae
pop
push
test
arpl
mov
xor
loopne
mov
mov
lods
jge
ljmp
ljmp
icebp
mov
and
popf
hlt
xchg
sbb
outsl
mov
jne
cmp
lahf
test
sbb
jne
dec
lcall
movsl
adc
dec
push
push
sub
in
mov
push
dec
jno
idivl
dec
sti
cmp
mov
push
sti
je
packssdw
incl
inc
sahf
lcall
aam
adc
lods
out
add
nop
iret
shlb
out
lods
add
and
sbb
sbb
mov
ss
jo
mov
xabort
mov
add
and
inc
add
int
and
aas
sbb
imul
test
ja
adc
mov
aad
cmc
mov
jne
or
add
push
xor
rolb
lret
inc
pop
sub
shll
mov
cmp
jnp
cltd
pop
and
enter
dec
mov
mov
sar
loopne
lods
lret
loopne
inc
loopne
inc
inc
lret
push
daa
imul
cmp
adc
xchg
cmpsb
pusha
sbb
lods
push
daa
loope
inc
js
lea
jmp
roll
or
js
pop
cld
clts
enter
addr16
mov
inc
add
cmpsl
shlb
or
add
repnz
add
sub
add
jg
adc
jo
or
inc
or
mov
add
inc
outsl
pop
mov
lahf
repz
adc
outsl
bound
push
push
push
mov
inc
cwtl
or
mov
sbbl
cmp
inc
mov
sub
inc
adc
movb
push
js
out
ret
xchg
decb
and
pop
push
sbbb
mulb
and
stos
leave
push
sbb
test
pusha
addr16
arpl
adc
push
sbb
xor
lods
push
dec
add
imul
cld
pop
or
and
push
popa
inc
cmpb
mov
outsl
loopne
nop
jmp
adc
test
mov
sbb
and
add
adc
xor
xchg
dec
push
fildl
imul
mov
mov
add
les
sti
cmp
out
mov
jo
cwtl
test
add
push
push
jnp
fstl
shl
mov
lods
push
jnp
push
sub
mov
mov
dec
in
xor
dec
jb
xchg
or
test
js
xchg
mov
mov
mov
add
add
adc
ljmp
dec
dec
push
dec
jmp
pusha
leave
dec
dec
inc
add
insl
mov
insb
inc
mov
cltd
xchg
xchg
in
insb
pop
push
gs
push
jbe
fcmovbe
daa
inc
aad
mov
jae
push
push
divb
xchg
stos
and
xchg
add
testb
inc
in
inc
out
and
xchg
das
ret
inc
and
dec
jae
pop
xor
fmuls
into
insl
mov
rclb
and
add
xor
push
adc
lods
add
mov
push
int
lods
mov
add
mov
jnp
stos
push
mov
push
sub
ret
daa
cltd
mov
sti
repz
sbb
js
cmp
adc
xchg
mov
sub
loopne
push
jmp
jecxz
ret
mov
loopne
je
add
pop
test
cmp
sahf
mov
pop
cmp
mov
pop
sub
push
sarl
adc
ds
pusha
mov
into
xchg
and
das
pop
sbb
push
xor
inc
or
pop
pop
adc
or
test
jb
sarl
lahf
and
cmc
popa
fmull
mov
insb
mov
or
sub
mov
or
push
call
arpl
shr
sbbb
dec
loopne
mov
rol
into
nop
push
sub
nop
cwtl
sub
cmp
push
jbe
iret
cmp
xchg
inc
outsb
adc
xor
jno
mov
add
scas
mov
enter
mov
sub
push
shl
and
mov
sub
enter
nop
mov
cmpsb
xorb
xchg
insb
leave
add
es
imull
ret
push
push
ret
cmpsb
iret
inc
inc
adc
lahf
or
adc
fildll
daa
adc
data16
aaa
ja
outsb
lods
push
inc
jb
mov
shrb
outsl
cmpsl
add
in
xchg
test
cmp
insb
stos
cmp
mov
push
jg
dec
push
xchg
outsl
jbe
add
pop
movsl
in
dec
cmpsb
sbb
loop
and
and
add
leave
notl
mov
test
or
daa
sub
sbb
mov
aaa
loop
scas
mov
enter
or
pop
pop
and
lods
add
and
and
nop
and
push
shrb
addr16
out
imul
lods
pop
mov
pop
fcoms
andb
xchg
add
shll
rorl
or
outsb
sarb
sar
xchg
dec
push
adc
popl
mov
or
dec
lret
add
mov
mov
lret
jns
sbb
popl
and
sub
lea
add
repz
adc
aam
sbb
and
push
inc
adc
imul
lods
aas
pop
sub
cmp
xor
stos
mov
loop
jbe
stos
pop
in
repnz
cmovle
sarb
adc
jge
cmp
or
movl
sub
imul
les
or
out
push
push
or
pop
mov
fwait
outsb
daa
aaa
dec
add
outsl
mov
sahf
lahf
jl
add
adc
cmp
or
or
or
in
pushf
dec
scas
les
lock
aaa
push
cmpsb
fsubs
add
out
inc
mov
mov
mov
scas
adc
iret
repz
sub
xor
cmp
iret
repz
inc
dec
dec
push
movb
xchg
sub
pop
and
jge
sub
mov
sbb
xor
mov
ds
aaa
ret
jl
sbb
xchg
test
or
pop
push
sbb
in
xchg
add
sahf
ret
packuswb
popf
sub
leave
aas
subb
mov
pop
inc
sbb
jecxz
fdivrs
cmpsb
loope
lea
loope
dec
sub
pop
jno
xchg
lock
bound
test
inc
jae
sbb
mov
add
data16
sbb
adc
movsb
jnp
lock
test
sti
repz
test
int
test
and
inc
mov
adc
pop
and
cmpl
inc
cmpsl
dec
push
fmuls
insb
pop
scas
lock
es
insb
test
sub
xor
insb
inc
jle
pushf
mov
sbb
pop
pushf
ds
mov
arpl
adc
fs
ja
xor
fisubrl
mov
aam
adc
mov
xchg
pop
jmp
xor
loopne
add
ja
cmp
addr16
je
loop
mov
jmp
xor
adc
cmp
pop
xor
xchg
mov
adc
xor
roll
xchg
call
cmp
jle
repnz
sub
jle
nop
popf
push
dec
lds
mov
cmp
fs
push
pop
mov
out
fidivrl
loope
and
pop
xlat
add
cmc
push
inc
pop
rcrl
dec
jne
dec
cmp
imul
cmp
ret
sub
push
mov
mov
cmpsl
push
movsb
xchg
loopne
das
testl
in
sub
rorl
cmp
inc
and
pop
addl
jbe
stc
push
and
sbb
pop
test
push
mov
cmp
imul
mov
mov
or
dec
jl
and
push
adc
outsl
mov
stc
int3
mov
cmp
aas
xchg
xor
sbb
push
push
cmp
arpl
adc
pop
jno
inc
and
loop
add
jne
bound
dec
dec
mov
add
dec
stos
push
mov
shlb
adc
movsb
nop
add
sarb
xchg
jl
pushf
clc
daa
popa
es
inc
add
bound
imul
add
sub
pop
ret
jl
fs
adc
inc
movsb
data16
sbb
push
mov
lret
dec
jae
add
inc
adc
inc
inc
xchg
dec
or
cmp
push
mov
jae
inc
or
iret
jmp
cmp
pusha
lret
loop
push
push
and
sti
daa
push
ds
rol
jge
dec
scas
jp
test
fmull
fbstp
sub
loopne
pop
psrlw
out
or
pop
xor
leave
add
mov
push
mov
sub
adc
xchg
adc
jne
out
xchg
jo
test
out
ds
mov
les
clc
movsl
inc
push
cmc
add
je
dec
clc
cld
je
push
pushf
rclb
adc
lds
xor
add
ret
shll
enter
pop
mov
pop
inc
sbb
push
xchg
push
pop
cmp
mov
loop
cmc
sub
sbb
out
lds
add
add
mov
xor
add
pop
ljmp
js
lods
xor
push
mov
lds
in
adc
aad
pusha
call
push
pop
js
int
clc
jmp
scas
cmp
je
test
int3
push
push
pop
jb
jg
and
xchg
aas
jl
and
and
jl
push
and
jmp
jne
js
jnp
jns
mov
dec
sbb
mov
inc
sub
mov
sub
mov
scas
cmp
sbb
mov
mov
push
mov
shll
out
rorl
cmpsl
xor
sbb
or
adc
inc
mov
lea
pop
push
add
add
stos
insl
or
out
sbb
lods
orl
mov
sbb
pop
mov
inc
mov
cmpb
jg
sbb
or
int3
add
imul
or
lock
adc
in
push
scas
pop
lahf
or
pusha
adcl
aaa
xchg
ds
shl
enter
adc
bound
test
or
xchg
movzbl
push
inc
sbb
es
mov
mov
dec
adc
cmp
nop
jg
inc
adc
sub
int
xor
jge
stos
jno
mov
and
lock
dec
xchg
pop
adc
rcl
or
in
pop
call
and
ret
mov
out
bound
mov
insl
enter
mov
xlat
mov
insl
mov
lret
sbb
xor
ja
pop
add
push
push
or
push
xchg
or
push
jmp
sbb
adc
dec
add
imul
int
ret
xchg
fiaddl
andl
push
adc
je
dec
sbb
test
cmp
xor
and
ds
fidivrs
xor
sbb
or
inc
in
movsb
add
sub
aaa
adc
aam
lret
sbb
out
inc
push
das
scas
cmp
dec
and
sbb
ret
daa
push
test
mov
add
cmp
adc
fdivs
jge
inc
push
in
insb
xchg
in
ljmp
movb
mov
lea
push
insl
inc
add
inc
jne
dec
sbb
cmp
pop
pop
or
mov
mov
sbb
test
fcom
add
mov
test
ljmp
pop
mov
les
int
loope
inc
sbb
clc
les
fcomps
and
mov
dec
pop
test
testl
and
pop
mov
xchg
icebp
aas
or
add
iret
mov
sub
inc
or
inc
jns
jl
xor
or
xor
rolb
ds
out
pusha
loop
rol
iret
scas
je
jae
mov
out
xchg
movsb
ficompl
lret
movsb
pop
andl
js
nop
mov
aad
add
add
and
or
int3
push
inc
cmc
xor
sbb
adc
popa
xchg
add
mov
rcll
or
or
aam
push
xchg
or
ds
sub
cmp
pusha
inc
insl
ljmp
xchg
popa
icebp
out
mov
test
popf
jecxz
cmp
adc
xchg
and
mov
movhlps
aam
scas
nop
add
jmp
roll
xchg
lea
ss
adc
lds
sbb
mov
sbbl
sbb
mov
add
push
mov
add
inc
lahf
into
rcrb
xchg
pop
push
mov
loopne
and
es
sbb
stos
popl
and
aad
pop
jl
test
imul
xchg
push
ret
sub
testl
pop
movsl
and
pop
ret
jae
in
add
sbb
sbb
inc
call
mov
sbb
cmp
and
push
or
cmpsl
sub
je
xchg
imul
xor
outsl
fs
fimuls
xchg
or
ror
sbb
push
mov
shll
pop
mov
loope
jmp
push
xor
mov
inc
cs
dec
push
xchg
jb
pop
incl
sti
adc
xchg
jne
mov
fwait
push
push
or
xchg
inc
arpl
push
in
push
orb
pop
shlb
dec
xorb
andb
cmp
add
inc
int
faddp
addb
xor
mov
mov
mov
cmp
and
shrb
push
in
cmp
cmpxchg
pop
loop
sbb
test
push
and
push
pusha
fwait
adc
shl
cltd
xchg
inc
cmp
jnp
jmp
inc
dec
jecxz
sbb
loop
hlt
icebp
call
cs
cmp
mov
jl
andb
or
int3
adc
mov
mov
sbb
push
xchg
dec
popf
sub
in
aam
dec
and
ffree
hlt
cmp
bswap
xchg
sbb
test
jl
and
out
mov
mov
jb
push
in
lock
and
jl
sbb
fbstp
int3
rcll
mov
in
mov
add
lcall
xchg
fcomi
pop
call
inc
bound
inc
andb
adc
xchg
stos
add
scas
nop
hlt
xchg
movb
xlat
outsb
sbbl
mov
nop
push
sti
jo
add
mov
aas
jne
and
jne
mov
in
lahf
jmp
add
mov
or
dec
mov
inc
mov
cmc
push
inc
inc
mov
arpl
daa
jmp
lea
test
rolb
mov
dec
loope
test
cs
mov
and
mov
mov
cmpsl
or
orb
arpl
xor
aad
jmp
movl
cmp
jl
pop
sub
enter
sbb
test
adc
push
je
mov
xchg
adc
ja
lret
mov
test
test
xchg
pop
iret
adc
xor
and
inc
enter
mov
xor
int
imul
inc
bound
pop
xor
cs
or
das
add
movsb
mov
das
inc
dec
dec
or
mov
inc
dec
dec
dec
and
inc
roll
lea
and
pop
inc
jo
mov
adcb
mov
inc
pop
mov
inc
enter
mov
jg
or
fdivs
pop
test
cmp
mov
adc
movsl
and
leave
add
fstps
and
sub
mov
dec
clc
xor
sar
repnz
into
leave
add
leave
add
xlat
in
nop
scas
sbb
mov
fs
mov
testl
add
cmp
lahf
lahf
cmp
mov
sub
loope
ja
add
push
scas
rorb
dec
jg
jne
jbe
add
adc
sbb
inc
lods
adc
lock
push
outsl
cmpl
hlt
fwait
cmp
js
test
adc
or
dec
push
jno
or
sbb
bound
cmp
imul
cs
int3
insl
in
loopne
imul
xor
dec
inc
dec
jo
call
or
insb
into
daa
inc
cmp
std
lret
ja
imul
or
add
xlat
out
shrb
scas
adc
xor
add
hlt
lea
rcrb
enter
or
fs
dec
in
arpl
dec
jge
fwait
in
xchg
push
dec
inc
jmp
loopne
push
aas
std
int3
adc
out
movsl
cmp
dec
and
aaa
int
fcoms
cmp
pop
push
cmp
lods
mov
pop
and
pop
clc
xor
xorl
mov
int
inc
loopne
das
test
adc
mov
into
divps
push
xchg
fbld
dec
adc
pop
sub
out
fmull
lea
dec
xchg
ja
and
jne
dec
cmp
mov
mov
or
xchg
xor
or
adc
or
lock
into
ror
mov
cmp
imul
sub
ret
insb
add
lods
das
mov
int
inc
inc
sbb
subb
cwtl
add
out
pop
or
pop
mov
and
repz
aam
mov
rclb
pop
clc
test
sti
dec
jne
push
dec
or
bound
mov
mov
mov
adc
cmp
cmove
add
scas
stc
inc
loop
mov
mov
test
les
push
mov
push
and
add
xchg
rorb
push
push
and
push
cld
push
mov
call
adc
fisubrl
outsl
mov
mov
daa
je
jne
les
add
xchg
rolb
adc
dec
inc
bound
adc
in
aas
and
fs
incl
ret
or
scas
test
jle
decl
cmpb
mov
inc
or
cmpsl
add
xor
repnz
jns
rcll
rcll
outsb
shlb
adcb
outsb
jne
outsb
add
inc
repz
push
imul
roll
neg
xor
aaa
or
push
xchg
jb
popa
jb
add
test
or
popa
mov
add
push
test
and
pop
push
bound
insb
jnp
pop
mov
lock
add
mov
movsl
adc
fwait
pop
inc
test
and
adc
add
les
or
fcmovnu
cmp
push
inc
fs
arpl
inc
dec
movsb
push
jg
mov
insl
mov
fptan
sub
pop
rcll
aam
pop
gs
add
mov
inc
ljmp
test
test
sbb
in
or
or
out
ret
dec
adc
in
adc
mov
jb
dec
fiadds
lret
aam
sub
and
je
add
mov
add
jmp
add
out
repz
les
call
pop
mov
hlt
adc
fidivrs
in
sysenter
jmp
xchg
adc
out
jns
nop
cmpsb
pmullw
cmpsb
loopne
pop
pop
aad
mov
and
out
lcall
add
and
aam
push
and
filds
loopne
fiadds
push
push
push
aaa
fldt
sub
or
xor
xor
pop
sbb
test
xchg
clc
daa
subb
movsb
adc
or
rclb
sarb
adc
or
pusha
nop
and
cwtl
loop
dec
sbb
mov
dec
inc
xchg
or
xor
add
adc
test
test
in
and
imul
push
push
repz
cmp
xor
mov
mov
or
lahf
out
popf
and
gs
dec
cmp
sbb
push
cmp
add
and
pop
lock
fs
test
sub
push
add
scas
rolb
or
add
mov
ds
adc
enter
or
inc
popf
xchg
test
adc
or
les
and
dec
add
or
or
push
cmp
adc
das
repnz
nop
or
cmp
sub
add
or
mov
or
cmp
pop
popa
add
push
dec
pop
push
jne
pop
arpl
xor
dec
jae
jp
cmp
cld
mov
add
fisttpl
sbb
dec
inc
push
lock
pop
pop
cmp
sbb
loopne
rclb
lock
ds
hlt
enter
push
out
adc
mov
mov
call
add
jo
jl
nop
inc
add
pop
pusha
rcr
cwtl
cwtl
mov
xor
add
and
inc
sahf
out
shll
mov
test
fpatan
pop
jnp
daa
mov
fmulp
push
pop
pop
pop
mov
add
adc
paddusb
add
testb
push
hlt
aaa
pop
xchg
xlat
sarl
pop
es
push
adc
loopne
stc
dec
cld
and
mov
stos
inc
jl
add
xor
popf
fists
add
jo
fistps
pop
lods
fidivl
nop
sub
mov
xchg
add
clc
sub
sbb
outsl
mov
pop
pop
and
js
inc
in
or
add
cmp
dec
in
add
add
push
add
add
addr16
dec
orb
add
push
mov
cmp
inc
and
and
imul
cmp
mov
xor
loopne
es
pop
jnp
es
inc
into
add
mov
test
or
push
adc
push
inc
clc
sub
or
subl
fdivrs
popa
fwait
mov
popa
jo
aaa
inc
or
and
jb
arpl
inc
xor
into
out
or
or
xchg
sbb
sbbb
pop
sbb
fdivs
add
sub
cmp
popa
sbb
mov
sbb
xchg
push
sbb
int
dec
enter
into
push
push
add
push
stos
mov
scas
loop
or
cwtl
xor
clc
push
or
nop
pop
pop
and
cmp
push
fsts
or
dec
adc
and
and
popa
ljmp
push
and
jl
in
xor
or
mov
mov
in
push
imul
jecxz
sbb
mov
in
inc
call
xchg
pop
or
inc
add
push
lods
jo
or
repnz
jo
in
xchg
xor
rcl
outsb
filds
inc
enter
or
add
jmp
mov
adc
fimull
xchg
nop
fs
jo
fbstp
jo
in
or
adc
push
cmc
sti
ret
shlb
xor
xor
sub
cmp
xor
inc
addb
dec
dec
dec
dec
clc
aaa
adc
dec
loopne
push
push
push
push
pop
pop
pop
mov
bound
out
cmc
or
xlat
inc
imul
bound
and
xor
cmp
fcoml
cmp
jmp
out
xor
roll
dec
or
aas
adc
inc
std
jbe
cli
and
cs
in
add
add
daa
mov
jns
and
jp
popf
and
and
jp
rorb
pop
push
and
rcrl
dec
xor
sbb
sbb
test
jecxz
push
rcrb
clc
sub
jge
subb
push
mov
mov
in
addr16
sar
push
inc
imul
sub
cmpsb
cmp
and
mov
jmp
stos
pop
cli
push
sbb
pop
lret
sarl
in
sbb
roll
js
mov
push
add
xor
arpl
imul
out
mov
jmp
inc
inc
std
jo
mov
dec
pusha
sub
inc
lret
and
cmp
or
loope
xchg
nop
out
popa
push
dec
inc
clc
leave
stos
or
adc
adc
aas
les
or
xor
and
inc
inc
cs
xor
fdivrs
sbb
or
inc
addr16
add
sub
dec
aam
inc
iret
insl
or
or
loopne
stc
cvtps2pd
adc
push
icebp
pop
lahf
into
or
lock
sti
adc
jmp
xchg
jl
clc
sub
iret
in
jmp
loope
mov
pop
push
and
into
sbb
mov
out
push
das
test
imul
iret
popa
lock
leave
movsl
xor
dec
lret
jne
lahf
sub
mov
add
rcll
mov
or
jmp
inc
sti
push
add
mov
in
cs
or
pop
add
subl
and
fildl
int3
and
lods
pop
push
inc
test
mov
je
lahf
popa
cli
mov
jle
dec
mov
and
adc
xor
pusha
pop
shlb
add
or
jo
jg
cmp
jg
mov
ret
and
mov
lahf
call
fsubrs
cmc
mov
and
insl
clc
lea
fisubrl
inc
jmp
dec
push
adc
adcl
cmp
insb
add
ljmp
mov
sub
push
in
outsl
rcll
int3
sub
lock
ja
jo
iret
lcall
pop
mov
jmp
in
movsb
mov
in
push
xor
add
pop
leave
pop
cmp
xchg
je
jbe
aaa
in
xlat
adc
in
mov
xorl
push
dec
mov
inc
sub
idivl
aad
sub
dec
pop
mov
push
inc
enter
adc
sub
ja
xchg
mov
fwait
xchg
add
les
mov
aad
xchg
jbe
inc
imul
sbbb
push
ljmp
je
es
outsb
pusha
das
mov
inc
arpl
adc
js
ds
and
fstps
js
add
push
aas
cmp
fucomip
addb
dec
and
cwtl
cld
inc
pushw
test
and
and
mov
and
inc
imul
in
add
add
adc
adc
test
out
aas
aam
pushw
xor
mov
add
dec
daa
or
ss
sarl
cmp
cmp
add
add
pop
xchg
xchg
fsubl
leave
cli
lock
mov
fisubrl
mov
add
cmp
add
lret
data16
jo
inc
inc
mov
mov
repnz
xor
or
add
movsb
add
test
pop
add
icebp
sbb
incb
inc
push
add
jmp
int3
mov
pop
or
addl
fidivrl
adc
mov
pop
jno
imul
xor
data16
mov
inc
xor
add
mov
incb
mov
or
add
rolb
cli
push
mov
in
cmpb
add
push
rcll
imul
adc
fucomi
dec
pop
pusha
sbb
or
ss
sub
add
mov
mov
movsb
mov
popa
add
sarb
das
ret
addb
movl
aas
aas
ret
xor
cmp
fs
adc
lcall
cmpsl
mov
lds
or
daa
je
add
imul
mov
mov
inc
cmp
sbb
cmp
fists
leave
mov
or
jmp
cmp
xor
pop
popf
mov
ret
sub
push
pop
fsubrp
xor
pop
cmp
inc
dec
movsl
cltd
out
pop
xlat
or
filds
inc
jmp
and
and
or
lret
addl
add
daa
inc
xor
adc
outsb
iret
adcl
clc
sbb
mov
xchg
lock
push
jno
test
pop
mov
fucomip
push
or
push
in
jmp
inc
push
or
or
inc
add
xchg
in
add
pop
push
nop
pop
test
pop
sub
ds
dec
sti
xchg
imul
sub
out
inc
pop
adc
pop
jo
push
inc
xchg
pop
push
fcmovb
mov
sahf
outsl
add
push
or
and
hlt
push
mov
xchg
pop
push
nop
je
pop
dec
push
sub
mov
add
movb
les
dec
pop
mov
inc
add
xchg
out
pop
xchg
add
add
pop
and
dec
and
inc
sbb
bound
mov
insl
loope
and
or
hlt
popa
jge
mov
jecxz
push
push
adc
dec
push
je
inc
mov
out
add
inc
in
jne
js
mov
fildll
iretw
push
repnz
out
pop
and
incl
jmp
clc
fdivrs
or
es
inc
in
sub
sbb
test
xor
push
mov
xchg
mov
push
push
mov
jo
and
pop
roll
cwtl
test
daa
jno
jae
xor
inc
mov
pop
imul
push
xor
pop
mov
inc
inc
cmp
push
mov
cmp
jae
mov
mov
jmp
jbe
sbb
and
mov
ret
inc
jg
xor
and
jo
fisttpll
cmp
decb
mov
or
push
or
in
xchg
dec
xor
inc
icebp
dec
or
ds
shl
adc
popa
pop
xor
jg
inc
sbb
xor
ja
xchg
sbb
pop
ret
and
repnz
clc
call
adc
and
sub
add
orb
fimull
sub
and
add
add
call
sbb
add
and
adc
out
dec
adc
cmp
jne
vmread
paddusw
fisubrs
sbb
xor
xchg
enter
clc
pushf
mov
push
mov
daa
test
ja
jo
cmpsb
lret
rcl
lcall
cmpb
mov
mov
insl
dec
add
fadd
sbb
pop
inc
cmp
fstl
dec
bound
nop
ret
inc
or
or
mov
inc
stos
dec
add
mov
sub
movsb
subl
inc
sbb
and
int3
push
mov
in
adc
cmpsl
mov
or
or
and
add
icebp
inc
test
add
adc
dec
imul
pop
in
adc
pop
jge
cld
out
xor
push
call
stos
je
inc
jno
dec
add
xchg
scas
and
sbb
sbb
mov
lods
imul
xor
push
and
cmpl
inc
iret
dec
push
ss
jne
rolb
adc
jle
xchg
int3
inc
iret
add
xchg
mov
je
stc
jle
lock
hlt
enter
sbb
and
popa
das
std
dec
enter
jne
hlt
sbb
mov
inc
call
pop
cmp
inc
cltd
pop
inc
data16
push
fidivrs
sbb
shlb
sub
les
push
sbb
rcll
adc
push
rolb
mov
cwtl
addb
mov
nop
adc
add
cmp
bnd
lock
inc
xor
nop
out
inc
jns
hlt
xor
mov
mov
leave
dec
dec
sbb
add
push
xor
fbld
jae
decl
insl
xchg
test
push
fcomps
pusha
ret
icebp
jns
imul
addr16
jecxz
das
push
sub
lock
pop
bound
orl
jnp
mov
xchg
pop
inc
lock
pop
test
inc
cwtl
pop
add
cmp
and
aaa
pop
push
push
fsubr
repnz
inc
adc
push
fsubrs
cltd
call
je
ficoml
test
push
sbb
roll
clc
pop
cmp
imul
sbb
enter
or
or
hlt
sub
sub
push
add
inc
push
sub
cmpl
lock
ret
pop
movsl
push
or
and
repz
clc
test
cmpsl
and
lea
add
fisubl
sbb
push
lock
push
lods
add
sub
shrb
sbb
insl
pop
pop
mov
jnp
pop
mov
cmp
dec
insl
mov
hlt
hlt
pop
into
hlt
sub
inc
add
rep
lock
hlt
ss
imul
mov
xor
adc
push
sbb
xor
sti
push
cmp
rorl
inc
or
cld
add
jp
or
pop
ds
pop
filds
add
push
push
in
subl
pop
stos
xor
xchg
push
sbb
sar
loopne
adcl
mov
andl
outsl
ja
outsb
aaa
fistpll
movsb
xor
push
pop
loope
jmp
push
sbb
add
rcrb
xchg
jne
mov
add
test
leave
jne
loopne
ret
call
dec
iret
push
inc
pusha
or
or
sbb
pusha
rcl
fwait
sbb
add
sbb
dec
pushf
je
loopne
adc
and
sub
xchg
dec
rcll
cmp
cmpl
add
add
xchg
pushf
or
add
sub
mov
xchg
int3
adc
test
add
push
rcrl
sbb
repnz
in
sbb
add
push
shrl
and
sub
data16
dec
sub
pop
lods
inc
adc
negb
jp
xor
mov
sbb
cld
mov
mov
push
and
wrmsr
add
stos
dec
sbb
lret
dec
clc
dec
mov
push
hlt
mov
sbb
ss
insb
stos
repnz
adc
xor
sti
enter
mov
pop
clc
sub
and
call
aaa
pop
dec
lock
clc
seto
nop
icebp
test
dec
sahf
or
je
dec
xchg
add
clc
arpl
test
pop
add
stos
xchg
pop
inc
and
sbb
pop
push
push
adc
sbb
dec
call
test
pop
dec
add
mov
xchg
or
dec
and
dec
push
adcb
pop
push
shlb
and
push
cmp
rorb
imul
dec
test
add
rcr
cwtl
loopne
fidivs
cmp
inc
stos
add
adc
push
sbb
jl
testb
dec
pop
arpl
je
inc
mov
fsubs
push
bnd
cmp
jge
nop
test
out
push
fs
push
sbb
enter
pop
adc
lcall
aaa
aas
mov
push
mov
sub
sbb
inc
jp
js
or
rcrl
push
sbbl
fadds
les
pop
scas
jecxz
in
and
inc
mov
fs
cwtl
arpl
fs
jl
jp
add
gs
jl
or
rolb
add
loop
out
movl
pop
add
leave
mov
sub
repz
sbb
sub
dec
dec
dec
cmpsl
push
xor
pop
fdivl
cld
sbb
push
loop
das
add
clc
mov
add
xor
js
xor
mov
cld
or
cmp
cmpsb
jns
sub
cld
jmp
add
inc
xchg
bound
nop
push
mov
cmp
stos
add
jmp
dec
dec
es
mov
sbb
pop
pop
adc
push
or
jmp
and
es
xor
adc
mov
xor
fs
or
lret
jle
ret
outsl
add
mov
jbe
cld
ja
sbb
int
mov
xor
inc
scas
or
das
lea
xchg
sbb
inc
sbb
or
adc
add
xchg
or
xchg
or
aas
lret
movl
out
lea
cld
daa
adc
arpl
clc
xchg
jo
lods
jmp
ljmp
or
mov
adc
jno
ds
frstor
push
inc
add
xor
adc
in
add
dec
pop
mov
dec
js
cmp
clc
insl
adc
repnz
mov
xchg
test
leave
adc
adc
pop
jp
aas
push
inc
mov
hlt
adc
cmp
mov
or
popa
imul
daa
or
inc
pop
addb
and
and
push
scas
push
push
dec
mov
or
and
out
jle
mov
stc
cmp
cmpsl
cmp
adc
push
pop
xor
test
cmpsb
add
insb
mov
sbbl
sbb
cmp
xchg
cwtl
cmp
je
adc
xor
pop
mov
adc
ds
adcb
inc
rorb
xor
push
mov
pop
xor
jmp
pop
test
xor
pop
test
mov
adcb
fidivrs
ds
add
inc
inc
push
inc
inc
loopne
or
outsb
add
xchg
dec
xor
xor
jg
int
pop
sub
adc
lock
or
movq
imul
mov
in
cli
test
dec
xor
ljmp
ljmp
sub
lock
pop
cmp
andb
mov
and
sub
rcrl
inc
jne
pop
fcmovnu
fimuls
sub
es
sbb
pop
xor
bound
dec
ss
jl
push
mov
out
movsl
jg
js
cmpsb
push
adcl
pop
push
aas
jbe
xor
dec
mov
add
cmp
ret
mov
mov
ljmp
pop
mov
and
stos
pop
or
loopne
test
jbe
movsl
lahf
out
pop
push
xor
aam
jg
pop
fdivr
mov
daa
cwtl
fisubl
jecxz
shrl
or
out
jmp
out
cmp
shrb
lret
mov
inc
and
mov
push
xor
movsb
inc
cmp
enter
mov
mov
movsl
jmp
add
dec
scas
add
xor
insb
ss
inc
popf
push
arpl
mov
rcrb
clc
and
aam
icebp
ss
and
hlt
mov
sub
lret
ss
adc
mov
jns
nop
jbe
int3
and
mov
pop
and
push
sbb
push
xor
add
in
mov
js
sub
test
mov
xor
mov
push
adc
loopne
xlat
mov
sbb
enter
imul
test
mov
aam
dec
jno
inc
dec
and
pop
data16
loopne
jnp
dec
or
dec
ljmp
sahf
inc
inc
inc
les
add
fs
nop
sarb
or
or
cs
enter
jg
cli
repnz
psubb
or
jo
push
inc
or
int
sub
aaa
enter
loop
sbb
popf
fmull
mov
push
cmp
inc
pop
outsl
shll
es
lret
push
cmp
cmp
push
jmp
and
imul
mov
pop
mov
mov
push
push
add
in
test
daa
lret
fcomi
mov
cmpb
cmpsb
push
mov
push
ja
mov
int3
sbb
push
pop
pop
or
inc
pop
mov
shlb
adc
aas
insb
jae
mov
inc
xchg
jne
in
inc
mov
pop
sbb
push
push
mov
xor
pop
in
add
lock
fisubl
jns
add
movsb
mov
cmp
les
repnz
inc
pop
leave
mov
aas
and
jb
pop
and
xor
leave
inc
cmp
inc
jb
pop
inc
or
pop
dec
add
je
mov
or
xchg
push
sbb
inc
movsb
nop
or
pop
lods
in
mov
mov
jge
mov
jge
bound
mov
xor
jle
stos
add
shr
push
push
push
lahf
add
xchg
xlat
in
enter
jl
mov
add
inc
pop
scas
and
sbb
sbb
mov
adcb
xor
fcmovbe
pusha
fs
xorb
add
push
jbe
mov
sar
jnp
ret
cmp
add
and
xor
xchg
jecxz
je
mov
bound
push
lods
adc
in
dec
pusha
sbb
rolb
sti
mov
pop
mov
lds
movsl
sar
call
cmp
cwtl
pop
adc
pop
pop
push
sbb
add
mov
movsb
ss
repz
mov
mov
adc
adc
loope
cmp
adc
jmp
nop
mov
dec
jne
add
sbb
repnz
inc
push
add
push
lock
std
enter
push
mov
push
jb
pop
or
cld
push
xchg
test
push
sbb
aaa
pushl
dec
xor
inc
pop
inc
add
imul
arpl
xor
add
cs
mov
add
sarl
lcall
les
in
es
xchg
add
call
adc
sbb
adc
sub
mov
xor
sbb
add
jp
testl
in
movsl
mov
lds
xchg
push
dec
or
int3
sbb
inc
es
sbb
daa
es
leave
shlb
lret
enter
xor
mov
pop
and
jle
sbb
notb
inc
cmp
gs
dec
mov
les
mov
xor
shll
dec
xor
gs
push
aam
je
push
jnp
push
cmc
sbb
in
bound
xor
shlb
push
pop
and
int
lret
xlat
add
and
push
xchg
jmp
cmp
imul
or
out
lds
inc
push
gs
push
mov
adc
jmp
rorb
and
cmp
jae
js
sbb
dec
pop
xchg
fdivl
dec
and
es
mov
imulb
dec
add
or
sbb
mov
pop
fcmovnb
push
in
xor
mov
sub
inc
inc
fcmovnu
cmpb
pop
pop
or
mov
ss
push
sub
jle
cld
test
pop
or
or
out
insl
xchg
xor
fsub
adc
push
adc
cmpsl
or
or
pop
iret
add
adc
sahf
pop
leave
dec
and
mov
addb
ret
movsb
add
sbb
clc
and
outsl
pop
jg
add
push
and
pop
push
sub
sbb
mov
xor
jno
sahf
push
xchg
mulb
test
lock
lods
cmp
outsb
push
mov
ljmp
push
pop
xor
cwtl
movl
adc
mov
aas
int3
sbb
or
jne
into
mov
cmc
test
cmpsl
sub
or
pop
cmp
mov
add
fs
nop
push
mov
das
add
xchg
lods
push
sahf
xchg
inc
and
call
xchg
add
add
pop
jmp
ja
sti
mov
cmp
test
mov
sub
test
adc
and
inc
shl
mov
mov
dec
ret
jecxz
pop
inc
sbbl
lret
jle
mov
movb
adc
daa
add
pop
cmp
add
xor
fsubl
add
jl
jle
aaa
dec
xchg
sbb
test
adc
dec
inc
jne
mov
xchg
and
cmp
inc
cmp
sub
test
pop
cmpl
call
cs
test
int3
sahf
out
push
lods
pop
push
cmp
xor
enter
rorb
or
roll
frndint
fstps
or
cmp
int3
pop
jo
inc
xor
dec
orb
mov
add
fmul
clc
or
add
cmp
sbb
add
lret
inc
xchg
xor
inc
jae
push
xor
aas
add
addr16
fildl
lods
repz
addr16
sbb
pusha
cmpsl
pop
inc
stc
leave
cmp
es
pop
sub
pop
insb
mov
mov
xchg
push
lock
push
lahf
je
jmp
ja
add
dec
sbb
xor
cwtl
ret
add
addr16
or
nop
push
test
sbb
add
pusha
xchg
xlat
adc
xchg
mov
mov
shl
clc
and
ret
mov
and
arpl
fistps
hlt
repnz
loopne
inc
stos
hlt
mov
mov
mov
push
pushl
dec
subb
daa
cltd
add
or
stos
and
test
and
or
cmp
jmp
aam
sbb
insb
pop
call
js
int3
insb
ret
lea
iret
cmp
leave
mov
mov
popf
pusha
movsl
pop
push
push
mov
sub
lahf
mov
adc
cltd
cltd
jle
and
jae
jl
js
call
or
and
push
adc
push
out
rcrl
jo
lock
filds
dec
sbb
mov
lret
adc
adc
pop
adc
cmpsb
pop
ret
xor
adcl
sbb
addr16
loopne
xor
hlt
cmpb
push
adc
add
xchg
test
xor
fdivrs
pop
dec
sub
add
jae
adc
pushf
xor
in
add
cltd
jb
or
mov
add
add
add
xchg
jbe
outsb
loope
aad
rcrb
lret
adc
cmp
test
fcoml
xchg
lock
in
mov
lods
popa
inc
sub
outsl
imul
test
sub
jecxz
pop
inc
mov
nop
int3
add
cmp
loopne
add
push
int3
cmp
jp
int
push
jno
and
shll
dec
sbb
pushf
dec
cmp
pop
mov
mov
cmpsl
or
sub
or
mov
test
in
loop
or
cli
data16
cli
jo
adc
push
jge
pop
mov
and
and
inc
or
je
inc
shlb
subb
adc
add
cwtl
addr16
enter
mov
pop
add
dec
test
movsb
push
iret
push
and
mov
movb
pop
dec
out
xor
fmuls
nop
push
add
lret
mov
rol
rorl
pop
subb
add
pop
adc
or
xchg
sub
ret
push
add
xor
push
sub
decl
or
lods
lock
ret
lahf
call
pusha
mov
inc
cmp
pop
test
ret
xor
daa
movsb
xor
push
inc
lcall
pop
ret
ret
mov
rcl
dec
inc
cmp
sbbl
inc
lahf
sub
jne
lea
mov
sti
movsb
inc
add
imul
pusha
cs
cmp
sbb
or
xchg
into
ret
dec
add
iret
sbb
adc
xchg
ds
push
lahf
clc
test
pop
movb
inc
push
sub
inc
adc
add
movsl
or
inc
cmp
pop
mov
push
jmp
ja
insb
fucom
std
mov
inc
iret
or
sbb
insb
adc
lret
adc
fcomps
adc
cmp
inc
out
mov
jl
je
xchg
ficomps
cmp
int3
add
into
add
mov
push
dec
add
sub
mov
mov
cmpsb
inc
mov
in
add
andb
pop
push
dec
jo
dec
loop
sbb
pop
push
inc
mov
insb
das
mov
mov
inc
or
fsubrl
or
add
add
dec
cmpb
inc
jmp
sub
inc
addr16
adc
sbb
sub
adc
inc
or
fsubrl
xchg
lret
subb
add
es
mov
adc
sbb
pop
cmc
adc
fiaddl
gs
cltd
cmp
dec
sbb
xor
inc
dec
inc
dec
daa
inc
sub
push
dec
incl
mov
nop
or
dec
inc
push
and
and
inc
fbstp
sahf
inc
pop
fs
test
push
cmp
dec
mov
mov
xchg
jno
jmp
xor
jbe
add
cmp
leave
rolb
pushf
inc
mov
test
es
aas
jo
sub
enter
jmp
decb
push
dec
pop
pop
in
push
and
shlb
jge
xchg
sbb
cltd
inc
pop
rcl
dec
mov
rolb
mov
and
xchg
test
lret
js
inc
xor
dec
movb
adc
sbb
daa
push
xorb
pop
daa
test
andl
lods
aam
or
in
push
aam
cmpsb
fimuls
orl
ja
ret
stc
and
jb
imul
fs
cli
push
mov
xor
add
out
repz
jmp
sbb
out
mov
lods
adc
pop
addb
add
outsl
or
cltd
ja
fidivrl
in
xor
jne
ljmpw
into
ret
adc
insl
mov
in
jns
jno
adc
loopne
movsb
or
pop
push
mov
or
push
into
or
mov
scas
adc
clc
ds
nop
push
in
aaa
in
or
xor
int
and
insb
push
rorb
jne
je
stos
inc
jp
shlb
leave
push
clc
hlt
test
pushf
lods
addr16
add
dec
mov
orl
sbb
mov
fdivrl
add
dec
or
cmp
jp
loopne
adc
test
cmp
pop
pop
or
xor
inc
clc
cld
push
lock
sbb
inc
inc
adc
sbb
fwait
or
gs
mov
and
or
fsubrl
add
lods
xchg
push
test
bound
mov
adc
adc
andb
mov
hlt
mov
and
ret
adc
push
sub
adc
js
push
imul
sbb
push
push
js
add
sub
in
les
arpl
mov
push
fldl
lret
cld
lock
ret
adc
inc
jmp
ficoms
inc
adc
dec
dec
push
or
inc
lods
xor
pop
or
cmp
adc
inc
push
jno
fsubs
loope
aaa
push
pop
iret
pop
add
mov
out
pop
sbbl
push
add
test
mov
cmp
shll
cmp
sub
test
dec
dec
or
add
dec
xor
daa
sub
sub
cvtps2pi
push
adc
or
pop
add
sub
xchg
add
rolb
cmp
dec
rol
sub
iret
mov
xor
pop
sbb
pop
loop
dec
jg
aam
inc
push
test
add
jl
jl
add
pushw
subl
add
push
xchg
or
and
shl
inc
dec
mov
mov
mov
ds
sti
leave
hlt
outsl
and
daa
dec
add
or
fbstp
adc
psubd
mov
add
push
loopne
out
ficoml
sub
pop
or
mov
je
fsubrs
or
inc
nop
inc
ficoml
sub
jge
or
out
stos
fsts
pop
mov
add
or
adc
ja
testb
add
mov
lock
xor
sbb
pop
add
das
cltd
fdivrl
out
xchg
cmpsb
xor
or
adc
in
divl
dec
bound
mov
cmp
inc
mov
jbe
data16
mov
jle
mov
inc
mov
lea
add
movsb
int
and
insb
stos
cmp
pop
mov
xchg
scas
or
and
mov
add
pop
shlb
adc
mov
je
fdivr
stos
gs
sub
adc
fstpt
cwtl
in
xor
dec
ja
ss
cmp
inc
mov
or
xor
ficompl
cmp
cmpsb
in
loope
xor
and
xchg
push
mov
call
cmpsb
ljmp
adc
cmp
jo
ljmp
test
push
sbb
lds
push
mov
int3
adc
pop
and
or
add
das
into
push
push
adc
addl
es
or
aad
sub
push
adc
and
or
dec
pop
decl
lcall
mov
cmp
xchg
xchg
mov
inc
popa
add
add
popa
inc
bnd
js
add
mov
sbb
aaa
divb
push
sub
test
je
ja
cmp
mov
loope
xor
xchg
aaa
pushl
clc
push
fcoml
cli
lods
addb
push
cli
std
jmp
jge
adc
sub
ss
out
add
xchg
jns
cmpb
rorb
mov
or
add
pop
inc
pop
inc
aaa
jb
cmp
mov
mov
pop
int3
pop
sar
insl
loopne
loop
std
pop
std
aam
mov
cmp
lret
outsb
inc
xor
xor
shrb
cmp
js
sti
pop
aam
pusha
lcall
sub
test
test
jl
movzwl
pop
imul
add
cmp
fnstcw
push
stos
lds
dec
adc
stc
cmpsl
add
cmp
ficomps
xchg
xor
sbb
loopne
das
call
jmp
pop
add
shll
imul
ss
testb
adc
pop
daa
das
or
and
imul
out
mov
inc
push
movsb
jge
push
push
je
add
xchg
dec
insb
inc
sbb
pop
data16
in
sbb
bnd
push
sbb
ret
mov
dec
add
fisttpl
jo
xor
inc
xchg
pop
jg
add
push
cmp
jne
call
sbb
mov
repz
outsb
cwtl
xor
adcb
mov
adc
mov
mov
ffreep
sbb
pop
inc
jg
adc
outsl
lock
daa
xor
loope
xchg
sti
jl
mov
or
xor
mov
push
jmp
lods
dec
jl
inc
mov
push
and
inc
js
ret
mov
pop
adc
ss
or
cmc
shrb
sbb
movsl
fsubs
enter
sub
add
mov
mov
adc
mov
iret
sti
pop
lock
sbb
push
rcrb
iret
add
movsb
and
or
repz
fcompl
fcom
aam
out
iret
mov
int3
outsb
nop
enter
sahf
loopne
push
lods
rorb
iret
jnp
out
mov
mov
gs
call
loopne
iret
and
jnp
cmpsb
mov
adc
xchg
adc
mov
enter
aaa
add
push
xchg
das
and
jnp
xor
add
test
xor
popa
xchg
pop
xor
xor
sub
adc
mov
filds
mov
in
movsb
push
ds
add
cwtl
imul
repnz
add
scas
cmp
mov
fdivrs
or
pop
dec
sbb
gs
ss
insl
enter
je
je
add
and
fidivl
addl
sbb
pop
je
adc
loop,pn
pop
adc
adcb
xlat
and
mov
or
add
sub
or
js
jp
inc
test
dec
je
aad
icebp
xchg
inc
mov
rorb
or
sbb
xchg
aaa
or
add
pop
push
fimuls
dec
sbb
xor
inc
sub
mov
in
adc
push
pop
or
add
and
out
sub
clc
arpl
or
adc
dec
pop
repnz
xchg
adc
pop
pop
clc
je
aaa
push
insl
outsl
fs
loope
xor
addl
pop
enter
cmp
or
in
xor
ds
jo
inc
push
push
pop
sbb
cs
arpl
inc
jbe
sbb
fs
sub
loopne
ret
cs
cmp
inc
or
or
dec
add
mov
test
dec
inc
in
in
fisubrs
hlt
fs
popa
js
cmpsb
popf
mov
add
pop
sbb
fsubr
xchg
xor
incb
sbb
mov
sahf
mov
add
insl
add
dec
addr16
and
clc
data16
addr16
add
mov
dec
sbb
dec
insb
jbe
add
sub
jnp
jnp
repnz
and
push
push
in
push
mov
shlb
inc
jp
lods
ret
push
adcl
add
ljmp
rorb
add
mov
or
dec
or
add
and
cmpl
cwtl
dec
xchg
not
mov
inc
jnp
fwait
inc
add
or
std
xchg
or
dec
mov
int
fildl
add
mov
rcll
vmptrst
es
add
and
sbb
rcr
prefetchw
dec
xchg
fbstp
cwtl
and
movsl
sbb
out
mov
das
mov
popa
out
jle
inc
inc
pop
or
out
inc
sbb
cmpsb
sub
out
pop
xchg
ficompl
mov
jb
inc
repz
test
inc
xor
mov
add
out
adc
jns
outsb
sub
test
fcomps
sbb
inc
ret
aam
inc
mov
fwait
pop
cwtl
in
outsb
jne
sbb
adc
mov
adc
xlat
fsubrp
and
push
or
add
sahf
flds
mov
cmp
or
cld
or
addr16
adc
aaa
testb
xor
adc
and
add
push
gs
or
rorl
imul
gs
imul
xor
and
dec
rolb
pushf
imul
mov
xchg
incl
ds
outsl
adc
imul
jnp
add
or
dec
sbb
xor
scas
push
outsb
pusha
popa
push
ds
mov
outsl
imul
addb
and
adc
ds
add
xor
jle
out
sub
xchg
arpl
dec
imul
or
or
iret
rorb
pop
mov
into
fwait
rolb
pop
cmp
adc
jo
xchg
xor
lcall
jle
filds
nop
dec
xchg
add
mov
popl
addr16
push
push
dec
or
xchg
mov
ja
fldl
add
pop
cld
or
mov
popa
xor
movsl
add
xor
dec
pop
xchg
mov
inc
push
insl
jnp
daa
sbb
push
rolb
pop
mov
inc
mov
add
mov
sbb
lret
and
ja
adc
cmpsl
jae
je
jo
and
inc
pop
and
cmp
add
je
jl
add
nop
cmp
jo
add
mov
jl
inc
out
addl
test
xchg
mov
movsb
xchg
add
pusha
xchg
fcoml
cmp
pushf
add
mov
les
data16
les
mov
fnsave
mul
fldl
and
les
dec
mov
add
add
add
add
sti
or
adc
sbb
and
sub
add
add
push
jp
pusha
mov
inc
scas
inc
mov
mov
xchg
add
sub
cmpb
mov
mov
sub
sbb
mov
rcrb
or
mov
pushl
dec
or
lods
pop
rcl
add
jbe
lea
fisubrl
xchg
lahf
push
lcall
push
mov
js
ds
jnp
push
cld
movsb
mov
fldl
inc
push
adc
ds
add
xor
ja
iret
clc
pop
cmpsl
push
dec
mov
sbb
ds
pop
in
test
aam
push
lock
repnz
mov
or
xchg
out
scas
push
xor
test
mov
pop
in
pushf
xchg
lcall
int
pushf
sbb
cmp
add
into
imulb
mov
popf
mov
push
test
ds
jl
sarb
push
jmp
mov
sub
jp
sub
sub
into
je
cvttps2pi
and
faddl
pushf
and
push
xlat
sub
in
nop
popf
inc
sbb
adc
add
mov
or
das
lret
ljmp
add
inc
adc
or
mov
add
or
mov
loope
lcall
xchg
cld
adc
ucomiss
insl
sarb
adc
je
loope
les
jns
mov
data16
aaa
or
pop
cmp
insl
inc
test
xchg
inc
cs
inc
js
leave
or
lcall
cmp
or
add
mov
push
cmpsb
pop
push
mov
insb
add
add
pusha
dec
sbb
popf
ss
or
andl
cmp
orl
test
pop
and
das
repnz
or
and
sbb
sbbb
mov
xlat
mov
xchg
in
push
inc
dec
mov
adc
ret
adc
stc
shlb
lods
pop
dec
movsl
add
push
jae
aad
aaa
or
pop
xchg
xor
mov
push
rorl
mov
in
inc
and
je
and
and
add
stos
pop
add
jb
insb
subl
xchg
mov
xor
and
push
stc
or
flds
adc
jns
adc
push
mov
push
sub
pop
and
mov
iret
jmp
loopne
mov
clc
mov
sub
dec
jle,pn
sub
mov
jbe
pop
add
fimuls
jl
fsubrl
sub
lds
aam
insb
fs
cmpsl
mov
dec
jecxz
aad
pusha
dec
faddl
ret
insl
pusha
daa
add
ret
inc
cs
ficoms
push
sbb
or
push
imul
mov
repz
outsb
sbb
xor
and
push
xor
mov
jns
sub
xor
ds
and
lods
mov
rorb
dec
mov
pop
int
pop
xor
ss
push
sbb
and
test
aaa
jae
repz
cmp
in
or
inc
jne
gs
es
pop
add
cmp
repz
sub
inc
adc
xlat
test
sub
lea
sarb
push
sub
roll
inc
fiadds
add
mov
push
add
out
pop
bound
lods
push
inc
add
mov
roll
pop
or
cmpl
pop
adc
in
nop
aas
das
in
xchg
add
cwtl
cwtl
inc
add
inc
xchg
or
fsubl
enter
and
and
add
inc
cmp
mov
add
mov
inc
js
mov
dec
adc
inc
mov
pop
enter
fadds
dec
subl
inc
mov
nop
mov
ja
dec
shll
jbe
mov
fcomip
pushw
subl
cwtl
pop
enter
add
test
pusha
loope
outsl
add
daa
mov
lods
inc
rorb
cwtl
das
in
dec
add
aas
or
int3
pop
dec
add
and
or
adcb
in
add
or
rclb
dec
and
jne
push
xor
push
pop
pop
inc
xorb
sub
add
jne
adc
and
jne
xorb
dec
push
jne
in
cmp
cmp
push
mov
cmp
mov
repz
inc
inc
push
add
nop
cmpsl
into
and
push
dec
adc
pop
fcomp
mov
mov
mov
xor
sbbb
clc
add
ja
or
inc
jbe
xchg
ret
test
pop
in
pop
enter
ror
enter
pop
and
test
pop
sub
test
pop
sbb
loopne
into
push
pop
xor
push
pop
rclb
inc
repnz
cmpb
or
test
or
repnz
inc
testb
lds
and
mov
mov
push
adc
mov
ss
push
or
mov
imul
pop
sub
rorb
mov
cs
movsb
jo
jbe
add
xor
adc
pop
or
lock
mov
cld
scas
sub
push
ret
push
iret
ds
mov
xchg
pop
roll
xor
sbb
add
and
mov
pop
sbb
and
jnp,pt
adc
inc
je
inc
xchg
insb
dec
rcll
aam
scas
add
push
push
cmpsl
xchg
int
push
inc
add
shlb
and
rolb
cltd
adc
mov
daa
mov
cmpsb
push
rorb
mov
or
sbb
andb
nop
addr16
pop
or
shll
leave
fcomps
adc
jns
imulb
pop
fstpt
jae
pop
cmp
fidivs
cmpsb
out
jmp
add
and
push
je
inc
xchg
into
inc
push
pop
pop
cld
inc
add
jmp
sub
pop
cltd
js
mov
shrb
add
add
test
es
hlt
mov
sub
push
clc
fdivs
jns
xchg
iret
movsb
sbb
daa
or
mov
add
and
dec
mov
cwtl
mov
test
and
sarb
push
dec
or
es
push
dec
add
add
xchg
mov
addl
sub
xchg
mov
test
cmpl
jle
fs
call
or
sbb
rorb
dec
cmp
push
scas
and
mov
cmp
mov
sub
xor
les
or
cmp
pushf
cld
mov
loopne
movsl
and
mov
or
add
fildl
je
mov
dec
push
mov
roll
mov
sbb
cmp
inc
pop
pop
outsl
addl
pop
popa
cmpb
push
inc
jne
loop
push
ret
mov
sub
xorl
repz
aas
mov
sub
test
sub
and
sub
pop
xchg
fadd
rolb
cmp
jae
sbb
mov
imul
mov
shll
lock
fisubrs
arpl
jl
or
adc
mov
xchg
out
add
add
inc
sbb
scas
insl
popa
or
sbb
cltd
fisubl
pop
pop
mov
int3
movsl
or
mov
push
ja
testb
mov
adc
add
add
sub
add
mov
xchg
add
push
pop
and
or
pop
push
in
or
insb
add
xchg
add
xchg
nop
xchg
movsb
push
je
xchg
ss
pop
sbb
jmp
inc
pop
inc
sub
addb
mov
pop
lods
adc
sbb
push
xchg
and
mov
dec
imul
insb
dec
adc
fistl
mov
ds
inc
test
inc
add
aam
hlt
mov
pop
popl
hlt
cmpl
sub
outsl
shl
adc
push
push
adc
push
hlt
or
dec
and
push
pop
adc
or
jg
sbb
xchg
add
dec
dec
push
lret
xor
rcr
fisttpl
mov
add
nop
es
push
push
or
rcr
add
sub
add
cmp
inc
push
or
jle
inc
popa
mov
push
sti
add
push
inc
add
cmp
jl
or
popf
jl
mov
push
hlt
dec
add
mov
dec
push
jns
dec
xchg
lret
add
inc
dec
dec
mov
and
push
sbb
push
cmp
add
into
jl
push
jns
incb
icebp
inc
outsl
jge
je
cmp
pop
xchg
xchg
cmp
cmpb
push
aas
add
pop
sbb
adc
dec
inc
xchg
add
pop
add
rclb
in
fcompl
xlat
fmuls
jp
sahf
daa
mov
adc
sbb
insb
and
sahf
inc
add
jne
add
or
cmp
push
rol
inc
outsl
fmuls
popa
lea
negb
mov
pusha
adc
mov
xlat
lret
xor
mov
lea
js
pop
nop
mov
adc
sub
neg
jmp
arpl
and
pushf
je
addb
pop
add
lahf
fwait
push
push
test
and
es
bnd
jmp
mov
inc
das
sar
mov
xchg
jmp
adc
in
mov
pop
fsubs
icebp
dec
or
cmp
fcmovnb
add
movb
add
dec
jne
cli
push
add
and
cmpl
push
dec
xchg
add
sbb
xor
xlat
jp
nop
push
push
js
fwait
js
ror
cmpsb
adc
andl
lea
ret
std
xor
and
inc
fs
push
pop
pop
fcmovb
add
cmp
ret
bsf
jmp
inc
data16
insl
loope
or
inc
out
ficoms
cs
or
lret
xor
icebp
add
fwait
lods
push
in
add
mov
sub
mov
fiaddl
sar
pop
sub
mov
sub
mov
fsubrl
mov
and
and
pop
movsl
adc
cltd
pusha
inc
std
insl
mov
xchg
sbb
dec
mov
orb
inc
jmp
adc
and
xor
fs
ljmp
adc
add
inc
jl
out
popa
andb
mov
sbb
mov
shll
add
inc
out
or
and
dec
inc
xor
das
mov
cmpl
dec
shlb
inc
dec
out
fs
cmp
push
and
sbb
cmp
sub
mov
add
adc
adc
popa
pop
mov
cmp
jecxz
sub
jne
dec
pop
andb
sbb
loopne
mov
add
and
in
dec
sbb
pop
sbb
sbb
sub
or
inc
sub
xchg
adc
inc
pop
cmpsb
mov
subb
das
add
jo
je
pusha
fistps
mov
push
sub
jle
add
adc
popf
push
adc
push
add
add
mov
and
or
dec
pop
add
outsb
sbbl
mov
std
inc
int3
enter
out
enter
insb
pop
mov
rol
daa
in
inc
mov
add
push
cmpl
pop
cmp
or
scas
mov
push
and
ja
mov
add
dec
xor
and
sbb
xor
js
int
push
mov
mov
inc
mov
leave
jge
inc
jecxz
mov
xor
repnz
test
ret
cmp
sbb
or
jno
inc
fwait
xor
cld
aas
push
sbb
mov
cld
xor
loopne
gs
in
jmp
pop
add
clc
push
cmpl
ja
js
or
push
xor
mov
cmp
nop
inc
xchg
pop
add
les
add
xchg
mov
pop
test
push
push
sbb
and
mov
bsf
lods
ret
push
and
push
mov
inc
dec
sbb
push
mov
push
jae
push
push
ds
inc
loop
shlb
xchg
out
adc
or
ljmp
imul
inc
arpl
hlt
mov
in
daa
mov
mov
lea
jbe
xchg
int3
adc
insb
cmp
sub
stos
cmp
mov
add
sub
testl
adc
outsl
xchg
pushf
bound
test
jmp
outsb
xchg
and
or
mov
ss
inc
adc
sbb
push
sub
adc
xor
stos
and
filds
rcl
xor
loope
and
arpl
or
int3
push
inc
test
je
and
xlat
mov
daa
daa
adcl
inc
dec
xor
xchg
jbe
pop
pushf
mov
stos
imul
adc
mov
inc
test
pop
lock
dec
lock
push
add
pop
cmc
addb
arpl
loope
fisttpll
sub
pop
outsb
pop
pcmpgtd
pop
push
add
add
xor
je
nopl
daa
je
lods
mov
pop
das
push
in
push
sbbl
dec
pushf
mov
les
imul
pop
adc
mov
nop
testb
ja
xchg
pop
jno
out
pop
je
mov
sbb
psubsw
fiaddl
outsl
loopne
or
and
outsl
dec
sub
aaa
movsb
or
or
sub
or
pop
add
lret
call
inc
or
sbbb
xchg
je
in
dec
mov
arpl
mov
adc
mov
aad
and
pop
dec
outsl
fiaddl
and
and
pop
dec
dec
movlps
sbb
or
clc
adc
jp
fisttpll
sub
shll
cmpb
jne
es
inc
sbb
push
adc
xor
sarb
orb
rorb
stos
std
sbb
ficompl
cmc
push
insb
imul
and
leave
mov
adc
push
push
lea
push
and
push
sbb
xchg
icebp
fcmovbe
xor
ljmp
cmp
jge
sbb
pop
xchg
imull
out
sbb
mov
fistpl
jle
mov
fs
add
or
mov
mov
sbb
and
xchg
rcl
nop
or
add
or
enter
lahf
adc
push
hlt
fimuls
ss
adc
xchg
movsb
sbb
inc
dec
scas
sbb
inc
fcompl
or
sbb
cmp
test
shll
adc
add
dec
pusha
push
rol
scas
pop
lret
inc
push
pop
addb
xchg
incl
outsb
mov
xor
xor
cwtl
je
pop
dec
je
mov
addl
push
outsb
add
je
leave
inc
xor
rorl
movsl
rcl
mov
stos
pop
stc
insb
add
add
insl
cmp
pusha
jne
sbb
cmp
and
ljmp
into
mov
ds
dec
xor
and
cwtl
ret
inc
or
arpl
mov
mov
cwtl
xor
or
mov
xchg
pop
and
mov
je
inc
mov
sbb
xchg
inc
push
fadds
mov
lea
adc
shrb
or
sub
inc
pusha
pop
inc
outsb
out
fcoml
cmc
or
test
jo
cmp
in
cwtl
xchg
dec
jb
bound
clc
dec
add
flds
sbb
cmpsb
pop
pop
jo
add
popf
adc
addl
mov
fsubrs
or
sbb
pop
xchg
and
mov
outsl
mov
hlt
pop
sbb
loope
add
fsubp
pop
adc
loope
test
orb
popa
dec
movsb
jle
outsl
es
push
je
inc
mov
popf
pop
mov
mov
scas
cmp
push
xlat
in
insb
pop
pop
hlt
mov
xor
jns
or
cmpb
arpl
add
dec
mov
cwtl
in
sbb
sbb
insl
and
imul
jp
jo
ret
xchg
in
icebp
testb
sbb
push
mov
daa
fisttps
aas
aad
aas
add
inc
mov
adc
and
test
mov
and
dec
jl
push
insb
repnz
cmp
shlb
into
or
orl
adc
mov
adc
inc
xchg
cmp
mov
hlt
cmpsl
or
sub
or
add
inc
clc
jle
repnz
pop
push
xor
cmp
repz
loope
sub
lock
or
insb
mov
add
xor
cwtl
and
dec
push
popf
add
js
and
in
or
mov
pop
stos
dec
inc
fs
rorl
push
mov
out
adc
xchg
popa
enter
andl
xchg
fs
dec
pop
push
add
dec
mov
cmp
stos
sbb
pop
icebp
or
outsb
adc
add
fwait
mov
mov
dec
inc
mov
or
lods
inc
sub
mov
mov
inc
fdivrs
jnp
lock
xchg
out
pop
in
jb
adc
mov
push
cwtl
add
test
inc
cmpsb
push
dec
lock
xor
popa
sub
inc
lods
sti
iret
into
xchg
push
cmp
add
daa
lret
iret
cmp
dec
in
mov
fiaddl
xchg
add
mov
cltd
sub
loope
daa
arpl
add
andb
push
push
out
and
sbb
dec
out
push
or
mov
xlat
inc
add
cmp
lea
ja
add
sub
out
xchg
imull
orb
adc
xchg
jnp
test
pop
insb
dec
jp
jle
jne
leave
jp
push
dec
fs
add
js
enter
scas
xchg
sbb
ljmp
xchg
or
mov
xchg
shrb
and
pusha
js
roll
pop
sarb
and
xchg
scas
leave
xchg
cmpl
pop
leave
push
insl
xor
xor
lods
mov
std
xor
ret
and
in
mov
pop
pop
jo
push
push
in
dec
adcl
inc
adcb
pop
or
shrl
push
pop
adc
jmp
jg
adc
pop
push
hlt
cmp
test
xchg
push
push
lock
add
xor
sub
fnstsw
jo
inc
fdiv
cmp
je
jnp
push
adc
sahf
not
sbb
test
and
sub
and
aad
sub
xorb
rclb
outsl
es
mov
mov
lret
cwtl
mov
and
or
popa
mov
sub
sub
cmp
or
mov
adc
dec
lahf
icebp
ffree
push
ret
loope
nop
data16
pop
xor
mov
pushf
movsb
fstpl
je
js
xor
jne
das
popa
bound
les
cmpsl
arpl
test
xlat
xchg
fwait
adc
mov
ret
repnz
enter
fwait
or
push
pop
mov
lock
xchg
or
and
or
ret
mov
in
xor
addr16
push
mov
xor
mov
into
xchg
pop
xor
or
dec
lahf
hlt
lcall
outsl
xor
xor
push
call
popa
dec
pop
push
std
cli
push
cmpsb
push
and
inc
mov
sub
loope
or
test
pop
fnstsw
cmpb
fcoml
test
test
inc
aam
shl
fdivs
imul
sbb
adc
cmpl
outsl
jns
inc
sbb
xchg
out
sub
jo
adc
xor
adc
in
add
mov
aas
push
mov
push
mov
jae
add
lods
cwtl
pop
enter
add
xor
xor
daa
inc
adc
mov
outsl
sahf
dec
lock
imul
mov
dec
dec
mov
dec
or
push
push
mov
pop
imul
pop
sub
adc
and
jle
je
jae
lret
sub
subl
rcll
in
jl
jns
dec
or
adc
lcall
jne
xchg
out
push
sub
xchg
rolb
cmp
adc
pop
jo
sbbl
shl
test
lods
add
call
je
inc
dec
jl
push
das
pop
addr16
xorb
and
inc
imul
aas
push
imul
ja
and
loopne
dec
sbb
sbb
pop
in
pop
or
mov
push
pop
testb
lret
int3
or
testb
sti
orb
lock
call
cmp
leave
and
xor
jge
cwtl
inc
rcrb
push
cmpsb
leave
xchg
push
jge
pusha
sbb
fidivl
jne
dec
jno
and
inc
dec
lea
cmpsl
xchg
lods
push
mov
push
loope
sub
lcall
jecxz
add
cmp
xchg
test
das
subl
mov
sub
inc
loopne
push
aaa
pop
add
inc
xchg
fsubrp
cli
inc
jg
insb
in
and
loopne
cli
add
sub
mov
cmpsl
mov
test
rcll
pop
cmp
sub
dec
je
daa
jg
pop
icebp
cmpb
cmp
jne
mov
jp
xor
push
test
jne
inc
shlb
int3
xchg
pop
rorl
pop
dec
sbbl
and
or
inc
xor
cmpsb
pop
xchg
push
sbb
movsb
sub
inc
out
mov
xor
pop
inc
hlt
and
stos
or
pop
push
xchg
lahf
add
addb
shll
out
adc
sbb
test
arpl
xor
dec
sbb
inc
bound
add
sbb
movsb
push
lea
test
popa
add
inc
rclb
mov
dec
jnp
cmp
or
mov
pop
test
test
hlt
mov
sub
cmp
sub
inc
ret
pop
pop
dec
out
hlt
in
jp
cmp
in
fsubs
adc
aas
addb
push
mov
add
xchg
ds
nop
add
pop
push
out
arpl
in
jne
mov
popa
xchg
aaa
lods
sub
loope
andl
xor
and
push
rorb
ret
adc
inc
adcl
pop
arpl
nop
inc
lock
push
inc
xorb
dec
rclb
jge
and
fs
xchg
fs
cmp
js
sub
adc
add
clc
inc
ss
aaa
adc
adc
sbb
into
push
sbb
sub
push
mov
add
cmpsb
outsb
xchg
push
jno
sub
dec
mov
jg
add
jb
mov
femms
or
je
add
xor
sbb
scas
add
movsb
lss
adc
jb
pop
cmp
cmp
clc
xchg
mov
mov
je
jnp
inc
mov
cmc
add
add
cmpsl
sub
and
dec
movsb
cmp
or
mov
cmp
addl
push
leave
dec
test
pop
pmaxub
es
shr
add
loope
inc
jl
loopne
ror
ret
lret
sbb
shll
sub
push
out
jb
add
clc
sub
outsb
test
xchg
je
push
mov
fbstp
in
out
inc
or
idivl
imul
push
fsubl
out
add
and
dec
push
sbb
dec
push
or
sbb
or
arpl
mov
lret
add
bound
jle
sub
push
fisubs
ret
adc
clc
push
push
push
add
pop
mov
mov
and
insb
adc
push
enter
int3
pop
or
and
mov
or
mov
iret
leave
les
push
pop
es
dec
in
adc
and
add
insl
mov
inc
xor
ficomps
in
jne
leave
das
jne
push
pop
add
add
cmpb
fnstenv
adc
adc
jmp
sbb
aam
out
adc
xchg
or
inc
nop
jns
add
xor
mov
xlat
mov
cmp
cli
mov
mov
mov
pop
shl
jno
repnz
push
out
pop
addr16
clc
adc
jnp
mov
mov
jo
adc
sti
push
and
jmp
inc
lods
xchg
sub
sub
fldt
jmp
push
mov
mov
sbb
daa
ja
inc
pop
add
fidivrl
jo
mov
movsl
and
dec
rcrl
fldcw
xor
and
loope
scas
dec
lahf
aas
aaa
cmp
inc
lcall
sar
sbb
ja
add
sbb
imull
xchg
mov
cmp
fs
push
xor
push
sti
jno
popa
mov
adc
push
add
test
sub
or
mov
fcoml
mov
add
push
dec
add
js
fiaddl
add
daa
ficoms
sbb
test
fldt
sbb
cwtl
sbb
addl
mov
sub
adc
enter
jp
int3
or
xchg
mov
and
add
sti
pop
adc
dec
scas
add
add
or
pop
inc
and
or
popf
int3
jg
sarb
repnz
cmpb
xchg
push
jnp
add
push
mov
add
sbb
add
sub
or
loope
loopne
jnp
or
sahf
jecxz
iret
cmpb
daa
andl
dec
xchg
ss
inc
and
test
verr
sbb
xchg
or
push
and
inc
test
out
inc
mov
mov
mov
sbb
stc
aam
scas
xchg
cs
jmp
test
ret
aad
push
lds
pop
lock
inc
mov
add
popa
add
dec
arpl
cmp
fldl
fdivs
cmp
or
jo
sbb
enter
movsl
ljmp
adc
jp
or
adc
lret
xchg
enter
push
cmp
shll
rcll
or
aaa
xchg
mov
std
or
pop
push
dec
xchg
push
mov
cs
ret
clc
je
cmp
and
adc
jge
jnp
jnp
jmp
int
jnp
mov
jmp
aaa
jge
test
cs
push
sub
imul
add
dec
mov
mov
push
imul
or
mov
push
push
push
clc
movsl
imul
jo
out
or
loope
mov
and
dec
xchg
dec
xor
cmovno
pop
ss
sub
and
jl
ja
hlt
push
sbb
push
orb
and
test
dec
sarb
or
jle
mov
daa
or
inc
es
pop
xchg
ja
test
push
push
ljmp
daa
in
out
notb
or
cmpl
or
es
mov
mov
loop
xchg
jmp
lods
sbb
imull
mov
js
leave
cmc
pop
and
dec
arpl
mov
adc
inc
test
rcrl
push
maskmovq
divl
imul
in
jp
add
and
add
cmpsl
adcb
fldenv
ja
add
outsb
mov
out
add
enter
push
mov
xor
add
pushf
lret
cmp
mov
add
aad
and
or
dec
cmp
push
outsb
sbb
int
imul
pop
lcall
or
jno,pn
sub
testb
in
imul
ret
or
sub
pop
push
push
rclb
jo
and
subb
arpl
call
pop
mov
add
and
sti
sbbl
add
mov
or
xchg
or
push
js
es
add
add
add
imul
rclb
rorb
xor
sub
dec
add
in
mov
dec
adc
test
jo
mov
test
cltd
cmp
popa
pop
cmp
inc
pop
adc
inc
incl
adc
or
sub
adc
hlt
adc
pop
test
cmpl
push
sub
hlt
xchg
xchg
mov
mov
mov
pop
or
outsl
icebp
pop
pop
add
aas
orl
rorb
push
orb
xchg
cmp
movsb
sbb
lods
add
add
filds
add
add
mov
shl
adc
xchg
push
sub
sbb
rcr
pop
pop
adc
fildll
jmp
push
insb
jmp
sbb
add
xor
and
jne
adc
movsb
mov
lods
jmp
push
loop
negb
xor
add
in
sub
sbb
push
mov
push
push
mov
fadds
sub
add
add
xchg
pop
push
inc
shlb
cwtl
dec
inc
or
mov
mov
movsb
flds
add
data16
and
adc
adc
popf
mov
add
loop
xor
push
or
add
sbb
sti
jge
jmp
or
jp
inc
sub
loop
das
cmp
cwtl
lahf
push
lods
cmp
pop
push
das
add
leave
mov
mov
test
add
repz
mov
xlat
outsb
test
lods
call
adc
fdivs
loop
pop
es
shlb
jmp
bound
test
les
and
cwtl
jp
inc
and
or
mov
push
push
mov
test
dec
mov
js
rcr
jmp
xor
push
add
or
lcall
orl
adc
dec
push
ret
adc
and
jg
int
out
cmpsl
lods
test
or
xor
jge
test
jne
lea
push
add
sahf
sub
mov
add
pop
dec
inc
or
lcall
adc
sbb
lcall
fimull
push
mulb
data16
add
addb
adc
lock
lock
or
mov
pop
add
movsl
pop
incl
idiv
dec
adc
inc
shrl
cmc
out
push
test
and
aam
add
call
iret
je
dec
mov
js
and
hlt
inc
nop
loop
inc
lcall
pop
inc
cmpl
jne
ret
add
jnp
sbb
mov
sbb
pop
js
and
dec
test
xchg
cmp
add
dec
mov
fbstp
dec
mov
mov
jne
xor
add
test
rorb
ja
add
sbbl
loope
pop
dec
mov
xchg
push
insl
push
imull
loop
jnp
sbb
adc
nop
out
sub
mov
cmp
pop
ret
outsl
sahf
cs
rolb
lea
dec
add
xor
incl
sub
jne
cmp
cltd
and
shr
adcl
aam
jecxz
adc
mov
dec
ds
sbb
pop
sbb
sbb
xor
mov
mov
jno
dec
cmc
push
xor
dec
jmp
and
sbb
or
aam
ret
loopne
notl
add
je
ss
push
stos
sbb
or
push
pop
adc
mov
bound
inc
fdivl
xchg
cs
daa
cmp
imul
mov
push
and
loopne
jnp
mov
mov
adc
jmp
and
rcr
or
sbb
hlt
sbb
pop
lock
mov
lods
inc
inc
pop
jno
dec
mov
or
jo
mov
test
and
bound
and
jne
lods
xlat
mov
frstor
inc
mov
nop
aam
mov
je
jne
and
out
aaa
dec
add
xchg
sahf
sbbb
pop
sbb
sbb
or
pop
xor
shlb
push
push
pop
mov
and
or
shrb
mov
mov
dec
push
fcomp
popf
pop
xchg
pop
outsb
inc
add
jae
das
gs
popa
sub
test
xlat
mov
xchg
push
out
sub
aaa
cmpl
fistpl
cmc
sbb
sub
lret
popl
subb
xchg
sbb
xchg
dec
push
mov
add
roll
loope
outsb
sbb
aas
js
pop
pop
push
adc
and
mov
dec
orl
std
in
sti
dec
inc
cmpl
inc
inc
je
ja
sbb
cmpb
andl
test
mov
xchg
mov
xchg
dec
add
cmp
dec
sahf
mov
push
cmp
and
xchg
fisubrs
dec
mov
je,pt
cmp
sub
push
in
push
dec
inc
mov
xchg
in
xor
ret
test
dec
mov
pop
add
movsb
mov
outsb
mov
stos
xchg
shlb
or
cs
popa
rcl
dec
imul
jle
add
sub
cmc
loopne
inc
dec
inc
sti
sub
mov
mov
les
mov
loopne
mov
test
dec
adcl
scas
or
push
imul
ss
lahf
inc
dec
cmp
add
cltd
ficomps
sub
mov
mov
in
sub
mov
mov
mov
push
cmp
cmp
xor
cmpsl
push
shlb
mov
jne
mov
push
push
sub
je
jmp
push
cmp
ret
lock
cmp
popa
or
push
rolb
mov
jb
in
push
ljmp
xor
add
sub
inc
sbb
ss
mov
sbb
jo
mov
pop
daa
push
pusha
add
or
push
loop
rcll
pop
shlb
filds
testb
imul
mov
push
mov
les
icebp
and
sbb
fldenv
sbb
and
sbb
add
xor
jmp
dec
add
push
outsl
lock
add
cmpsb
xor
xor
mov
rcrl
rorl
clc
mov
addr16
push
mov
adc
imull
push
push
xor
jne
fwait
add
xchg
fistl
ja
cmp
nop
add
push
bound
loope
cltd
sub
mov
stc
add
add
cmp
pop
and
adc
adc
aaa
add
sbb
sbb
or
xor
int3
add
lds
cmp
ret
push
mov
mov
mov
pop
sets
fldenv
jmp
fcmovnbe
fnstcw
rcll
jmp
inc
mov
dec
fildl
in
pop
cld
mov
shrb
aas
test
psubb
xchg
mov
mov
insb
stos
loop
mov
call
test
dec
push
add
inc
loopne
add
movsb
in
push
inc
adc
data16
mov
loope
cmp
cs
xchg
dec
xchg
icebp
daa
inc
fbstp
rcrb
aad
mov
adc
mov
xchg
je
mov
add
scas
adc
std
arpl
mov
jo
icebp
shr
sub
xor
inc
mov
iret
loopne
inc
add
jbe
jecxz
stos
mov
and
or
mov
xchg
repnz
nop
jp
inc
jae
je
repnz
or
mov
mov
pop
imul
push
cmp
cmp
faddl
out
aam
fwait
inc
xchg
ret
nop
mov
aam
lret
adc
mov
or
scas
fldenv
jno
dec
cmpsl
call
inc
pusha
pop
adc
aas
push
mov
or
dec
jmp
adc
push
pop
into
movb
lods
and
push
or
nop
dec
adc
adc
jmp
add
in
cmp
dec
adc
ret
jno
stos
fistl
outsl
mov
inc
xchg
stc
cmp
pop
repnz
inc
aaa
sbbl
xor
adc
push
dec
mov
movsb
adc
pop
or
mov
dec
add
sbb
neg
dec
pop
xor
mov
arpl
fildll
or
adc
enter
pop
or
shl
mov
xor
leave
rcll
pop
outsl
lods
mov
jne
push
add
iret
jp
test
or
nop
mov
fwait
popa
mov
movb
pop
addps
jne
outsb
adc
xchg
xchg
imul
pushf
add
cmp
enter
fwait
and
and
fdivr
lahf
jl
xor
out
xor
cmp
xor
idivl
rcrb
je
inc
fsubr
fsub
imul
inc
ret
mov
in
jl
insl
jo
jmp
cli
scas
xorb
sub
mov
dec
pop
sub
test
mov
testb
cmpsb
jne
add
or
shlb
mov
add
sub
test
nop
cmp
pop
jmp
add
lock
push
xor
lock
or
lahf
inc
pop
adc
jp
xchg
push
sub
cltd
xchg
push
icebp
and
test
in
adc
or
mov
add
or
lcall
push
and
sbb
insb
shrb
pop
mov
xchg
adc
ds
cmp
jne
add
sub
sub
sbbb
incl
int3
jge
sub
mov
scas
mov
ss
push
incb
nop
js
mov
inc
or
mov
add
or
inc
sub
and
add
rcrl
dec
cmp
loopne
sbb
lock
stc
push
mulb
and
js
adc
mov
xlat
in
das
sub
mov
pop
lahf
xor
shlb
fs
jmp
jmp
jl
inc
ljmp
dec
push
push
xchg
cmc
jb
jmp
lret
jl
sub
rol
gs
ret
test
xor
inc
shl
jae
lcall
or
je
or
and
mov
imul
inc
or
jle
scas
jge
bound
adc
mov
repnz
mov
push
inc
or
loopne
std
add
push
repnz
scas
xchg
mov
pop
add
inc
iret
pushf
add
dec
stos
mov
pop
sub
jbe
shll
and
push
int3
movl
jae
pop
jne
ss
movsb
adc
cmp
sar
cwtl
roll
aaa
xor
or
push
jmp
sub
jae
pop
xor
add
or
mov
or
mov
push
movb
imul
int3
inc
xchg
subl
ret
add
hlt
or
jo
jmp
jp
ds
jne
sub
mov
dec
sbb
or
scas
pop
dec
add
lock
xchg
stos
leave
mov
add
inc
popf
dec
xchg
xchg
dec
jb
sub
adc
lret
ss
pop
daa
nop
cltd
sbb
pop
xor
jbe
les
insl
add
inc
dec
or
mov
inc
mov
xor
add
inc
movhps
cmpsl
xchg
push
sti
mov
jmp
sahf
and
dec
aaa
call
pusha
add
insb
sub
jge
or
bound
push
insb
pop
loope
arpl
jge
pop
push
pop
cvtpi2ps
jmp
lods
xor
and
inc
fmuls
cltd
mov
mov
sbb
add
cwtl
aam
xchg
call
mov
add
test
popf
jo
sbb
iret
imul
jmp
cld
popa
and
inc
jno
mov
cld
xchg
xchg
lret
ss
lea
lock
sahf
pop
pop
mov
pop
pusha
add
add
sub
scas
loop
shl
push
cld
xlat
icebp
mov
lahf
and
aad
roll
and
push
jo
out
push
xchg
add
sub
orl
inc
jg
mov
lock
pop
and
xorb
loopne
or
cmpsb
jb
lahf
nop
pop
aam
mov
aam
ret
int
mov
movsb
jmp
mov
jmp
sbb
jne
push
push
sbb
jge
mov
movsb
pop
pushl
mov
cs
xchg
adc
mov
pop
rcll
and
aas
stc
adc
add
mov
lahf
add
sbb
stc
cwtl
mov
imul
push
xor
pop
jecxz
and
adc
mov
enter
push
por
je
jmp
cwtl
and
adc
inc
into
sbb
jg
sbb
ret
gs
in
mov
and
add
push
xor
sbbb
popa
jns
or
jg
mov
push
pop
fldl
in
jmp
mov
add
add
inc
mov
pop
add
js
aas
je
or
pop
sub
mov
and
loopne
jp
into
insl
je
mov
sbb
rorb
test
sbb
daa
mov
and
and
or
dec
aas
inc
cli
jge
js
or
push
pop
out
pushf
aad
hlt
xor
mov
movl
xchg
and
adc
hlt
mov
add
mov
loope
and
xchg
mov
push
sub
ja
and
outsl
shlb
jns
adc
insl
xchg
inc
lret
dec
or
jl
pop
negl
dec
xabort
add
insl
adc
adc
insb
faddl
xlat
shrl
cmpsl
rclb
ret
clc
lock
out
xor
sbb
cmp
out
inc
add
pop
jl
push
pop
sbb
xchg
mov
inc
mov
inc
pop
xor
leave
sbbl
pop
pop
mov
add
loopne
inc
add
mov
negl
cmp
mov
lea
dec
mov
loopne
xchg
ret
scas
xor
je
push
add
and
inc
pop
cmp
lods
xchg
adc
inc
js
add
mov
movsl
push
pop
insb
lods
dec
adc
mov
pop
dec
lea
mov
or
subb
test
push
sub
push
fisttpl
sarb
cmp
inc
pop
test
push
mov
nop
das
jne
push
or
inc
ds
loopne
and
xor
push
aam
sbb
push
jo
jecxz
add
xchg
adc
ss
roll
xchg
adc
js
into
cwtl
ret
in
sub
aaa
cmp
mov
test
pop
mov
ds
mov
rcll
sbb
xor
or
adc
mov
add
nop
sub
xchg
cmpsl
pop
lock
fwait
add
cmp
cmp
mov
adcb
inc
mov
mov
push
incl
add
mov
lcall
mov
push
xor
dec
pop
jo
or
stos
push
push
out
or
mov
xor
mov
daa
adc
sbb
jo
lea
pop
and
mov
ret
ret
mov
mov
call
xchg
inc
pop
and
add
push
pop
xchg
ret
cli
or
scas
testl
add
enter
popa
xchg
dec
into
mov
test
je
testl
orps
sub
adc
insl
mov
sbb
cmp
mov
in
call
and
scas
icebp
rolb
test
push
inc
pop
pop
xor
jnp
test
dec
ja
ret
es
cmp
leave
fists
in
call
sbb
aas
je
inc
jl
rcrb
cwtl
xor
dec
or
mov
xchg
add
insl
add
mov
sbb
xor
xor
mov
adc
cmpsl
pop
mov
ja
xlat
dec
or
pop
lret
popa
dec
or
xchg
loope
inc
sbb
imul
pop
push
lock
addl
aam
push
sbb
and
and
or
jle
xor
inc
mov
dec
add
cld
push
mov
sbb
stc
xorb
sub
add
pop
mov
sbb
xor
dec
jne
pop
out
or
dec
movsl
mov
mov
es
mov
outsb
icebp
push
adc
rcrl
int3
iret
fisttpll
pop
and
arpl
inc
and
mov
fsubr
push
or
xlat
mov
pop
mov
cmp
sbb
pop
sub
adc
mov
je
outsb
pop
fldenv
push
inc
pop
fs
ds
sbb
nop
test
insb
dec
bound
and
scas
mov
pop
sub
enter
or
cmp
rorl
lds
outsb
push
les
mov
mov
rclb
sbb
xchg
addb
mov
sub
loop
out
sbb
outsb
sbb
inc
push
cmp
cld
and
add
cld
ss
jb
cld
pusha
test
xchg
fnstsw
add
mov
testl
insl
int
andl
mov
sbb
push
jno
jmp
add
das
add
fimull
xor
das
xor
fsubrs
xchg
das
or
lahf
iret
imul
sub
pop
mov
sti
inc
sub
jmp
fs
pop
adc
jo
sub
mov
sbb
ret
and
mov
sub
sbbl
or
sub
enter
sbb
test
scas
fs
stc
push
lea
and
es
leave
inc
test
pop
xor
pop
and
lahf
int3
sti
rol
xor
aaa
mov
test
mov
mov
sub
js
dec
fisubl
in
in
inc
push
dec
xor
call
pop
adc
dec
stos
mov
xlat
ret
int3
and
lds
pushf
rol
sub
popl
mov
pop
lds
add
add
pop
xchg
pop
jb
dec
dec
dec
dec
movsb
icebp
andb
shlb
pop
pop
dec
inc
ficompl
jne
push
push
in
sub
mov
ss
push
sti
lods
cmpsb
adc
inc
push
dec
add
lcall
fs
mov
add
pop
iret
daa
dec
or
mov
adc
mov
mov
sbb
dec
ss
push
and
mov
out
mov
mov
daa
push
call
pop
xchg
iret
cmp
scas
inc
pusha
mov
insb
mov
out
jl
or
jle
mov
cmp
pop
mov
mov
ja
jo
sub
add
pushl
out
data16
and
out
cmp
outsb
clc
xchg
clc
mov
and
adc
xor
or
add
inc
mov
fs
sub
and
dec
stos
nop
in
jge
jg
mov
pop
sbb
xchg
roll
mov
dec
das
fisubs
mov
or
js
dec
aam
push
sub
gs
add
or
sbb
pop
lock
mov
xor
sub
aas
das
mov
pusha
sarl
push
shlb
inc
pop
sbb
sbb
adc
sbb
and
sarb
add
pop
inc
mov
es
sub
pop
mov
scas
loopne
clc
mov
dec
cmp
loopne
js
enter
es
and
jns
dec
push
pop
sbb
incl
jne
out
jno
scas
lea
std
shr
inc
xchg
test
testl
sbb
cmp
cmp
pop
xor
add
loopne
dec
cmp
ret
xchg
sub
scas
jo
or
lods
gs
adc
cmpb
xchg
dec
adc
and
outsl
jne
and
js,pn
insb
sbb
test
inc
sbb
scas
mov
ret
and
add
out
vmread
int3
jne
cmpl
std
mov
pop
mov
pop
cs
push
push
mov
cmp
call
xchg
lcall
cmp
adc
pusha
es
adc
sarl
pop
xor
jae
pop
inc
add
cmpsb
mov
divb
test
xor
xor
hlt
inc
test
push
mov
and
jne
inc
push
ds
or
sbb
lock
les
jp
and
das
fcmovnb
aaa
xchg
loope
inc
dec
ret
fmull
loopne
iret
insb
lret
or
push
jp
mov
mov
sbb
xchg
or
push
xor
cmp
and
pop
mov
pop
xor
sbb
mov
and
mov
ja
dec
jmp
mov
xchg
ret
jne
movl
es
call
sbbb
xorb
adc
arpl
mov
and
insb
int
mov
stc
out
dec
mov
insl
inc
pop
adc
mov
pop
popf
sub
adc
sbb
icebp
or
sub
mov
mov
mov
mov
mov
lods
mov
push
testb
adc
insb
mov
mov
add
jns
popa
xchg
stos
dec
testb
and
sub
clc
sub
cmp
xchg
sbb
or
push
lock
pusha
mov
xchg
inc
lods
xor
sub
test
lods
sub
out
xchg
add
cmovle
das
jne
xor
mov
dec
rol
xchg
dec
test
push
es
jnp
fwait
add
test
push
cmp
hlt
push
pop
insl
out
push
dec
xchg
pop
movsl
add
mov
and
js
sbb
xor
fadds
dec
cmp
repz
cwtl
rorb
cmp
icebp
in
jmp
sbb
xor
pop
sub
aam
sub
mov
sub
adc
xchg
push
or
jne
into
mov
sub
mov
and
push
dec
cmp
loopne
and
xchg
add
adc
loop
lret
push
adc
or
cmp
ss
dec
mov
lods
sbb
jbe
and
or
xor
lock
sub
pop
push
pop
pop
xor
inc
jmp
sbb
mov
rol
add
clc
hlt
sbb
es
roll
fwait
dec
adc
cmp
mov
or
sub
push
cmp
imul
push
pusha
add
xor
jl
mov
aad
add
sbb
nop
inc
mov
not
and
mov
pop
fiadds
xor
mov
roll
hlt
je
clc
add
imul
sub
shr
cmp
aaa
es
fildl
jne
xchg
dec
shll
sub
pop
insl
filds
lahf
mov
rcll
inc
imul
mov
sbb
push
pop
lea
gs
sub
lods
stc
mov
aaa
lock
insl
lods
adc
ret
add
sahf
mov
xchg
lahf
clc
mov
add
mov
xchg
inc
push
sbb
add
dec
push
cs
mov
dec
pusha
push
xlat
cli
push
fcoms
insb
shl
fucomip
pop
sbb
sub
adc
adc
sbb
xor
sub
sbb
sbb
xchg
mov
fcoml
push
mov
je
aam
sub
mov
add
xchg
adc
daa
push
loope
inc
or
mov
incl
cmp
jmp
mov
add
sub
mov
sub
add
sbb
and
pusha
insl
xor
mov
mov
jge
mov
xor
push
outsb
pop
rclb
or
adc
pop
push
cmpsl
inc
add
dec
push
mov
and
adc
aas
xorb
or
push
sbb
testb
push
mov
and
push
clc
out
mov
rorl
adc
test
call
movsl
sbb
mov
bound
jne
push
fnclex
dec
pop
jbe
cmp
movb
js
cmp
les
jno
pop
mov
int3
sbb
dec
loope
fdivrl
clc
loopne
rcrb
pop
into
leave
je
lock
pop
push
shrb
js
inc
jmp
outsl
insb
or
lret
mov
lock
mov
inc
leave
je
or
or
leave
or
or
les
adc
es
cmp
ficoml
cmpsb
adc
dec
adc
xchg
xor
inc
rorb
sbb
dec
cwtl
and
dec
dec
add
sbb
mov
and
pushf
mov
or
push
pop
jmp
insl
loop
imul
sub
jp
xor
and
mov
test
mov
and
inc
pop
shrb
mov
test
sbbb
or
or
add
sub
mov
adc
movsb
mov
fadds
bound
jae
sub
or
mov
scas
adc
arpl
enter
pop
pop
and
sub
in
lea
daa
cmp
pushf
cs
sbb
or
inc
sti
and
movsb
and
stc
add
ficomps
jbe
push
cmovae
enter
daa
cwtl
popa
loopne
loope
or
outsl
lods
dec
dec
dec
inc
test
pop
repnz
ret
jo
sbbb
icebp
xor
rcrb
dec
add
or
sub
ror
or
lods
push
out
out
cs
inc
sbb
sbb
ret
push
xchg
push
and
jae
pop
movb
or
mov
call
and
mov
pop
cmp
sub
mov
adc
adc
pop
outsb
popa
sub
and
xor
jmp
mov
push
dec
cmc
cltd
movsb
in
aam
test
adc
cwtl
push
or
jecxz
adc
shr
dec
loope
sbb
xor
nop
aam
lea
sahf
lods
xchg
int3
insb
flds
mov
mov
add
cmp
dec
add
imul
mov
pusha
aam
cmp
shrb
movsb
ss
ss
and
jae
jb
inc
xchg
repnz
mov
xor
mov
adc
into
movsb
lcall
or
fwait
insb
sub
inc
cmp
sbb
repnz
and
push
cmp
inc
mov
sub
jns
or
xchg
aad
and
lods
movsb
aam
mov
rolb
popa
movsb
push
cwtl
inc
adc
mov
jp
push
push
fs
sbb
sbb
jne
push
inc
ret
js
pusha
out
or
push
add
lahf
jb
push
add
mov
or
xchg
rolb
jecxz
cmp
inc
inc
mov
popa
sahf
fcmovbe
sub
cli
adc
and
mov
nop
bound
cli
cs
ja
xor
push
xchg
push
arpl
xchg
mov
fwait
repz
mov
sar
cmp
push
mov
roll
loop
pop
cs
pop
adcb
adc
dec
push
fs
adcb
add
sub
add
mov
adc
inc
loop
lock
mov
jnp
aad
add
testl
or
outsb
sbb
cmp
sti
in
dec
fwait
ret
push
mov
ljmp
mov
ret
cld
ucomiss
js
imul
pop
and
mov
adc
jne
test
lock
mov
popa
lock
adc
xor
adc
inc
adc
fcmovnb
data16
dec
repnz
pmullw
push
clc
sub
cmp
addr16
and
test
push
adc
movsl
mov
xor
stc
fcoms
xor
pop
repnz
ret
fadds
adc
add
inc
xor
vcmpss
mov
dec
shrb
xor
mov
push
push
or
xor
xchg
and
mov
es
cmp
or
mov
ss
sub
daa
mov
xor
call
pop
ret
lock
and
jmp
xor
xchg
enter
pop
add
sbb
ljmp
add
adc
popa
sbb
add
or
movsb
adc
fsub
push
adc
pop
data16
mov
mov
sbb
pop
fimull
call
jle
push
lods
subl
adc
or
flds
jl
out
push
push
imul
mov
bound
jb
or
and
js
add
test
adc
mov
push
add
dec
icebp
add
jl
add
xor
shl
add
andb
subb
xor
sbb
rorb
pop
into
sbb
cmp
loopne
xor
sbb
mov
sbb
das
xor
and
mov
pop
jg
movl
adc
sbb
and
fadds
cmp
addr16
xorl
inc
stos
and
bound
adc
in
icebp
inc
jo
adc
mov
loope
jae
nop
pop
add
gs
push
lods
imul
mov
test
xchg
sub
adc
stos
int
add
mov
inc
xor
lsl
loopne
ficoml
fdivs
arpl
fisubs
xchg
push
or
add
push
pusha
ficomps
mov
jns
adc
pushf
pop
cmp
push
jg
out
push
dec
inc
mov
jmp
xor
xor
repz
cmpb
imul
call
pop
push
cmp
outsl
push
jg
fisttpll
test
and
xor
sub
jmp
sbb
mov
aam
sub
dec
test
mov
sti
es
lcall
sub
stos
pushf
nop
aad
add
mov
lods
and
sbb
int
add
xchg
add
push
cmp
push
inc
dec
mov
pop
inc
js
jo
sbb
or
stos
jmp
fistl
ja
adc
cmp
test
xor
rorl
cmpsl
xchg
outsl
dec
adc
mov
loopne
fimull
addr16
xchg
repz
aad
mov
movsb
jno
fldcw
dec
popl
jae
je
lods
out
jbe
fildll
mov
xor
int3
cwtl
lock
mov
cmp
fsubs
bndstx
dec
sbb
adc
in
test
pop
push
jnp
mov
add
jbe
insb
je
and
push
ljmp
and
jbe
add
les
or
scas
loop
lea
and
pop
mov
loopne
movsb
ss
pop
jo
addl
xchg
dec
popa
repz
rcll
sub
inc
push
inc
mov
and
dec
arpl
push
push
test
jmp
or
xchg
into
xchg
mov
cmp
add
mov
test
push
cmp
pop
dec
andl
pop
icebp
or
add
jo
pop
insl
and
adcb
adc
lods
cmp
mov
cmp
mov
stos
inc
inc
xchg
or
and
andb
sub
hlt
nop
test
aam
mov
std
adc
adc
add
dec
mov
popf
pop
and
xor
stc
push
push
jmp
enter
mov
hlt
outsb
jne
mov
test
cmp
pavgb
mov
cmp
pop
jae
jne
subl
movsl
mov
in
or
mov
push
xchg
fwait
lahf
and
mov
jo
mov
or
dec
adc
mov
dec
mov
sbb
test
push
mov
xchg
mov
push
dec
ret
adcb
xor
jnp
jae
add
jmp
or
mov
adcb
dec
insb
xchg
and
lods
mov
cli
jnp
cmp
adc
adc
pop
pop
pop
jbe
es
fisubrs
jno
push
test
popf
xchg
fsubl
add
arpl
push
lahf
push
insl
sub
push
das
int3
mov
cmpsb
inc
add
jl
faddl
cmpxchg8b
iret
adc
movsb
aad
sbb
cmpl
loope
add
xor
add
push
add
je
or
mov
ja
xchg
fmuls
sahf
add
daa
cmp
xchg
das
aas
xor
xor
outsb
testl
or
jle
outsb
pop
jmp
in
mov
outsl
imul
hlt
xor
into
hlt
mov
xor
adc
or
and
imul
push
sar
adc
arpl
sahf
or
pop
add
stos
cmp
sbb
mov
fdivrs
cmp
jne
cmp
adc
jle
add
mov
sahf
and
adc
cmp
sub
or
sbb
and
jns
jp
into
aam
mov
ret
xchg
and
cwtl
test
add
aas
ds
sti
mov
dec
test
jecxz
aas
jo
leave
pop
popf
movsl
test
out
int3
push
mov
adc
imul
jecxz
xor
lea
bound
cmp
push
sub
or
add
mov
cmp
jmp
and
or
sahf
mov
jo
xchg
sub
popa
out
push
adc
sbb
xchg
inc
sub
mov
sub
leave
movsl
add
adc
pop
cmp
add
out
fildl
inc
in
daa
mov
inc
movsb
rolb
ret
stos
pop
cmp
sub
and
add
sbb
fs
dec
fildll
sub
sbb
outsl
lods
addl
hlt
insl
pop
add
in
subb
std
sub
xchg
call
cmp
inc
mov
ss
subb
push
dec
mov
mov
dec
les
lret
add
sub
adc
and
test
pop
add
add
xor
enter
in
in
cmpsb
rclb
imul
add
jmp
test
stos
jo
dec
ljmp
adc
and
xor
pop
adc
pusha
sub
in
sbb
inc
or
out
inc
ds
inc
clc
outsl
ljmp
add
int3
mov
adcb
xchg
jb
xchg
xor
sbb
lret
je
fcomps
dec
jbe
sub
xor
push
adcl
stc
shlb
sbb
add
cmp
dec
setb
and
ljmp
sub
dec
xchg
fistps
adc
fstpl
ss
push
cmp
dec
push
adc
add
push
ss
sub
xchg
test
fmull
sub
es
mov
xor
or
lock
dec
mov
jle
lret
sarl
dec
mov
lods
add
cltd
adc
push
add
xchg
gs
inc
insb
mov
push
fisubrs
inc
push
rorb
cmp
mov
mov
loope
sub
movsb
sub
jge
fiaddl
pop
dec
es
dec
push
addb
push
push
bound
in
and
cmp
icebp
add
and
movzwl
mov
pop
test
xchg
or
aam
mov
rol
mov
fistpl
xor
jmp
lret
lock
movl
aaa
or
sbb
iret
mov
addl
cmpl
cmpsb
mov
dec
loopne
shlb
mov
sub
les
fucomi
adc
test
pop
add
out
and
xchg
pop
dec
popa
dec
mov
or
mov
xor
faddl
adc
inc
mov
fsubrs
or
mov
adcl
fucomip
cmp
je
orl
insl
loopne
push
loop
push
cmp
jne
ss
pop
inc
mov
sub
add
imul
and
jl
shlb
ret
xor
arpl
xchg
pop
fildl
xor
mov
ja
hlt
and
mov
out
dec
and
mov
shrb
adc
xchg
negl
inc
mov
add
or
int
pop
hlt
xchg
add
and
pxor
add
out
jmp
das
xchg
fadds
push
add
sub
movsl
jp
adc
and
daa
enter
mov
fists
adc
decl
inc
test
dec
jbe
inc
push
cmpsb
movsb
test
sub
jmp
jmp
nop
push
add
sub
mov
mov
lock
xchg
hlt
sub
lock
adc
sbb
pop
je
push
imul
pusha
jb
inc
xor
sbb
mov
mov
push
jp
aad
loop
js
sub
adcl
cs
add
and
xor
mov
js
scas
xchg
dec
pop
jmp
inc
mov
xchg
sbb
roll
setae
sub
nop
sbb
and
iret
mov
add
cwtl
xchg
and
add
mov
mov
dec
cli
lahf
mov
cmpsb
push
pop
pop
cmpsb
mov
xor
pop
and
dec
or
fucom
sub
dec
loope
popa
stc
pop
loopne
or
add
jno
negb
adc
mov
orl
stc
or
pop
mov
pop
adc
cmp
jne
xchg
add
pop
add
dec
jmp
mov
and
sub
fbld
test
subl
push
add
or
mov
call
dec
and
pop
cmp
sub
lock
xor
in
sbb
sub
movsb
sbb
sbb
lock
adc
ljmp
jp
xorl
xor
sub
add
mov
lds
or
pop
scas
xlat
cmc
pop
lock
in
daa
mov
nop
es
insb
or
test
nop
dec
lods
cltd
fsubrs
push
cwtl
cmp
jo
lret
push
push
and
cld
mov
shll
scas
add
add
add
inc
jne
push
mov
inc
mov
aam
or
js
jne
movb
test
adc
push
add
and
mov
pop
sar
fdivr
cs
test
jge
mov
sub
inc
setle
shll
xchg
fstpl
rcrb
sub
rclb
fldt
or
inc
jns
idivl
add
adc
sub
scas
mov
rorl
sub
call
addr16
call
faddp
notl
leave
push
repnz
xor
mov
push
in
xchg
sub
iret
and
sbb
and
pop
inc
lods
jo
es
xchg
mov
pop
sbb
rcl
cmc
mov
jmp
jmp
subb
stc
or
aaa
dec
push
or
pusha
inc
push
pop
dec
lret
sub
and
mov
ret
and
inc
jnp
mov
adc
push
adc
pop
movsb
scas
mov
and
jo
sbb
int3
je
and
fldenv
icebp
cmp
lea
in
test
outsb
stc
add
mov
push
hlt
dec
stc
add
mov
frstpm(287
mov
sbb
into
add
adc
jbe
sbb
mov
orb
imul
test
push
cmpsb
imul
lods
sub
mov
addr16
orb
imul
inc
adc
daa
pop
ret
or
jmp
jo,pn
pop
cmp
lds
add
jbe
pop
nop
xchg
xor
je
or
push
sub
ret
xchg
mov
int
fsubl
dec
test
insb
out
jl
lea
adc
je
or
or
adc
sahf
pop
inc
aam
push
adc
test
push
or
mov
loope
mov
inc
sbb
cmpb
in
push
adc
sbb
clc
xor
adc
hlt
xor
xchg
xchg
xor
push
loop
int
sbb
inc
pop
xchg
scas
ljmp
fcoms
adc
push
clc
push
fcomps
addl
jno
andb
xchg
fisubrs
fcom
mov
xor
and
loope
inc
test
pop
dec
add
sbb
adc
fsubs
add
lock
sub
push
sbb
adc
mov
adc
shrb
nop
add
add
imul
push
nop
les
adcb
cmp
jle
push
lods
mov
rorb
sub
aam
mov
xchg
sbb
lds
add
shrl
movsl
cmp
sbb
xor
mov
btc
femms
xchg
adc
cmp
push
pop
dec
sub
ret
xor
data16
js
pushf
push
cli
and
xchg
negb
cld
outsb
jl
je
test
aaa
lds
push
fdivs
sbb
sub
jne
lret
stos
sbb
adc
les
shl
insl
cmpsb
or
cmpsb
xchg
add
nop
or
mov
ret
aam
xchg
dec
lret
mov
mov
loopne
xor
and
push
lea
push
nop
cmpb
sbb
xchg
inc
je
or
add
inc
ret
and
inc
jo
ret
sub
add
xchg
jge
ret
mov
inc
sub
popf
or
in
xor
inc
mov
loop
mov
test
cmpsb
cld
cmp
popa
nop
addr16
dec
push
add
and
xor
in
xchg
add
inc
loop
ficoms
sub
jae
add
xchg
push
sbb
shlb
pushf
ficoms
pop
push
std
roll
cld
push
cmpsb
fwait
jge
dec
std
push
add
and
das
aaa
lsl
inc
xchg
roll
int3
ds
clc
icebp
inc
std
dec
mov
push
or
push
icebp
negb
xor
adc
lods
add
or
jle
nop
leave
jmp
push
pop
xor
test
addr16
pusha
insb
mov
out
sub
sub
dec
adc
xchg
adc
cmpsb
xor
es
sahf
mov
adc
sbb
jmp
cltd
add
jge
cmp
dec
jns
mov
pop
addr16
out
imul
or
es
int
push
out
mov
push
or
jo
pop
std
fwait
jb
lea
mov
enter
aad
push
push
add
add
jo
inc
dec
cmovo
ds
mov
inc
mov
or
mov
test
dec
mov
push
inc
enter
call
jp
call
pop
push
repnz
inc
clc
adc
xorb
adc
add
inc
adc
pop
jbe
mov
fildll
out
outsb
enter
add
xchg
jbe
push
cmp
test
pop
fimuls
sbb
jbe
mov
push
pop
fsubrs
movsb
enter
stos
or
jnp
push
cmp
and
cmpl
fcoms
jnp
orb
push
and
addr16
int3
or
and
mov
clc
xchg
adc
loopne
lret
and
xchg
fsubp
sti
inc
and
xchg
pop
lock
xor
repnz
adc
sysenter
enter
or
or
mov
out
sti
lock
sbb
imul
mov
stos
xor
les
push
add
insl
sub
pop
xor
cmp
outsl
and
fcom
dec
cmp
cmp
inc
or
pusha
pusha
push
and
push
lods
rclb
or
or
mov
mov
inc
arpl
enter
nop
inc
xchg
push
lahf
or
xchg
pop
jecxz
and
aad
mov
and
movb
pop
mov
in
sbbb
ret
and
scas
sub
mov
xor
test
add
mov
cmp
daa
xchg
inc
cld
fsts
shl
dec
fiaddl
sub
nop
jle
mov
pushf
sub
daa
dec
push
leave
add
inc
popa
jbe
add
or
mov
xchg
jmp
add
add
sahf
icebp
fidivrl
popl
push
or
xchg
xchg
xchg
es
stc
xchg
fabs
jne
pop
cmp
popl
xorb
push
push
push
int
out
ja
xchg
les
mov
add
jg
lock
int3
test
xchg
frstor
push
add
add
mov
arpl
sti
mov
cmc
mov
sarl
sbb
jns
push
or
dec
pusha
xor
cmp
in
xlat
aas
lock
sbb
push
cwtl
pop
jecxz
addl
test
imul
push
xor
jmp
insl
mov
mov
jno,pt
inc
ret
pop
inc
fisubrl
add
nop
sub
nop
xchg
lea
lock
and
lock
mov
jle
or
mov
cmpsl
ss
xchg
insb
or
mov
sbb
addl
popf
xorb
movsb
cmpb
dec
fcompl
xchg
imul
rolb
xor
ljmp
call
inc
fildl
pop
hlt
dec
hlt
xor
xlat
fsts
aam
repnz
dec
enter
outsl
or
arpl
add
sub
jo
xchg
pop
imul
push
dec
outsb
repz
out
test
add
hlt
or
data16
push
sub
lods
rcrb
jnp
repz
enter
aam
push
in
pushf
push
mov
int
and
je
adc
add
in
int3
sbb
pushf
js
cmp
adc
sbbb
fs
dec
add
adc
jnp
in
addb
xor
ss
repz
pop
cmp
mov
pusha
inc
or
sahf
out
lcall
repz
ds
int3
push
xor
out
dec
add
nop
out
mov
xor
jns
jns
xor
out
push
insb
cmp
idivb
int
dec
dec
or
xchg
in
jge
iret
repz
lods
jl
push
test
jae
sti
fmulp
push
or
aam
es
push
cmpsl
stc
xor
add
lods
push
jo
xchg
sub
repz
mov
push
lahf
cmp
arpl
add
jge
iret
adc
jo
inc
and
xchg
sahf
into
cmp
cmp
xchg
jle
mov
daa
push
push
pop
add
mov
sub
and
and
imul
sub
jl
cmp
mov
test
inc
push
rolb
dec
add
mov
inc
leave
push
pop
pop
dec
call
add
and
clc
and
pop
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
push
iret
dec
pop
and
add
ljmp
popa
je
xor
xor
ret
pop
mov
add
add
pop
add
push
push
adc
das
add
fucompp
add
adcl
enter
shlb
jae
inc
mov
push
lods
jae
push
add
or
inc
cld
pop
adc
add
and
xor
push
je
test
out
mov
sahf
out
mov
out
sahf
fsub
in
hlt
cld
add
cmp
repz
adc
and
repz
repz
inc
dec
push
iret
repz
pop
fs
je
test
add
xchg
cmp
add
fs
clc
jb
jb
push
jno
jb
mov
cmp
jns
jae
js
fadds
inc
sahf
mov
in
cmp
sub
pop
call
and
and
xchg
xchg
out
sub
jle
mov
or
add
adc
insb
cld
jns
out
pop
push
mov
sahf
out
in
add
sbb
repz
sub
dec
pop
push
cmp
cwtl
test
call
add
adc
popf
xlat
jbe
push
xor
push
sti
rorl
push
inc
xor
pop
jmp
xchg
paddsb
mov
push
and
stos
int3
dec
test
jo
popaw
popf
xlat
ficoms
push
cwtl
mov
cmp
mov
fmul
mov
add
xor
out
adc
and
jle
mov
adc
push
and
sub
add
add
lcall
lret
sti
push
fdivr
mov
movsb
add
or
mov
or
add
inc
subps
repz
jo
mov
fnstcw
repz
or
out
out
fcompl
push
adc
mov
or
repz
repz
or
iret
repz
adc
iret
repz
hlt
push
add
sbb
sbb
xor
cmp
repz
add
push
iret
repz
repz
fld
pop
add
push
add
repz
insb
dec
test
repz
or
in
ds
repz
mov
jns
out
mov
mov
sahf
out
sahf
mov
test
sahf
out
out
sar
jmp
fcomps
push
adc
lret
xchg
jp
mov
fdivp
cmp
or
or
push
punpckldq
movsl
adcb
jbe
into
push
add
jle
xchg
jg
out
sbb
push
aad
sbb
cmp
pusha
sbb
push
call
loop
dec
push
iret
repz
jo
mov
cmp
fsubr
clc
cmpsl
out
sahf
cmpsl
push
or
and
xor
jns
cmp
sbb
lds
jbe
adcb
and
fildl
adc
bound
sbb
and
xor
sti
pushf
and
fcoml
daa
fildll
xchg
orl
dec
dec
dec
add
adc
outsb
or
adc
xor
mov
adc
daa
daa
daa
daa
adc
pop
add
pushf
es
pop
inc
shll
jb
adc
pop
mov
imul
sahf
out
mov
adc
mov
je
addb
call
fs
pop
push
enter
cltd
pop
leave
mov
cmp
repz
push
iret
repz
out
ds
lock
adc
xor
out
sahf
inc
dec
pusha
jo
nop
jne
out
movsb
mov
inc
xchg
mov
jns
test
mov
les
dec
adc
mov
aas
ja
pop
or
or
lsl
lock
out
push
std
add
cld
adc
out
sahf
out
stc
xor
dec
sahf
out
sahf
negl
cmc
test
out
hlt
cwtl
repz
out
sahf
out
icebp
shl
in
repz
out
clc
out
or
in
sbb
iret
repz
xor
inc
ljmp
ret
xacquire
iret
das
fcmovnbe
and
sbb
enter
mov
cld
ja
lahf
mov
mov
add
or
or
iret
mov
push
pop
ret
push
negb
add
add
push
lcall
or
add
push
xor
inc
outsb
pop
rolb
pusha
cmp
inc
xchg
negb
ja
adc
pop
add
pop
sub
outsb
das
xchg
rorl
adc
mov
xchg
rolb
ficoms
pop
pop
add
outsl
xchg
stc
mov
cmp
sti
cld
std
push
cmp
repz
add
or
cmp
test
rcll
cmp
aam
add
mov
inc
push
pushf
xchg
jmp
jbe
push
in
testl
jbe
out
sbb
dec
enter
mov
sub
sbb
add
cmpsl
inc
or
cmpb
cmp
ss
sbb
mov
out
or
test
rclb
fidivs
lahf
neg
fsubs
cld
push
out
imul
scas
jg
or
int3
push
les
mov
movsb
xchg
add
push
iret
inc
jns
es
inc
mov
testl
push
call
pusha
push
pop
cmpsb
out
inc
cmpsb
clc
push
fidivrs
loopne
pop
das
into
mov
fisubrs
rolb
push
shlb
add
inc
cmp
fildll
push
adc
cmp
loope
push
scas
scas
mov
mov
ret
imul
cmp
fdivp
insb
or
push
xchg
aam
imul
add
push
out
faddl
enter
je
mov
push
push
push
dec
push
addl
outsl
push
fsubr
into
jg
cmp
movsb
inc
push
clc
cmp
pop
push
aam
andb
inc
fsubrl
fidivs
addr16
jl
nop
mov
pop
xchg
dec
lock
mov
and
or
or
outsl
out
pop
int3
aaa
cmp
inc
hlt
jbe
push
pop
enter
scas
cmp
fmull
jge
inc
imul
push
mul
mov
adc
faddl
sbb
pop
xor
bswap
jnp
cmpsb
mov
fisubrs
iret
jnp
push
ss
adc
xchg
outsb
push
addr16
rcrb
sarb
cmp
dec
add
int3
dec
add
js
es
and
adc
div
sbb
out
es
dec
jle
icebp
into
mov
mov
shll
jo
cmp
call
out
into
pop
pop
pop
push
and
outsb
cmp
mov
push
cmpsb
xchg
push
fsubrl
cmp
push
sahf
add
push
push
dec
cmpsl
mov
out
sub
push
test
cwtl
aas
faddp
repz
pop
mov
adc
pop
out
hlt
ds
dec
clc
sarl
pcmpeqd
cmp
dec
mov
cmp
les
sub
jns
cmp
outsb
les
xor
pop
pop
incb
movsb
aas
cmpsb
push
inc
add
mov
adc
dec
subb
mov
add
add
add
and
add
push
addb
add
leave
or
or
pop
inc
add
add
push
add
add
pop
in
cld
sti
std
inc
add
add
push
add
add
dec
dec
add
add
push
add
inc
pop
mov
jl
add
push
cmovp
fstp
jnp
inc
mov
mov
add
mov
pop
dec
inc
pop
inc
and
fisubrl
pop
mov
test
cmp
push
dec
dec
fwait
inc
add
fcmovnu
jae
adc
dec
xchg
push
loop
scas
mov
mov
mov
loopne
xlat
or
dec
xor
or
mov
cs
and
inc
push
cs
and
jns
shll
inc
sbb
js
mov
dec
push
rsqrtps
movsb
push
mov
aaa
dec
dec
jge
mov
xor
push
mov
and
inc
xchg
xor
sub
push
inc
arpl
or
insb
add
or
add
mov
jns
inc
in
and
mov
and
mov
fdivl
lods
mov
xchg
or
sub
add
dec
dec
or
and
mov
popa
dec
imul
sti
xchg
and
and
pop
pop
inc
dec
pushl
mov
jge
inc
and
arpl
lods
cmp
jns
scas
popa
outsb
ds
jo
jae
and
mov
jb
gs
and
cwtd
pop
mov
sub
or
inc
pop
inc
sub
cmpsb
sub
je
js
xor
jns
adc
gs
jne
xchg
jge
pop
insl
jae
insb
jbe
xor
pop
addb
rorl
shrb
into
leave
data16
insl
xor
adcb
push
clc
pop
push
ja
dec
pusha
fld
loopne
test
push
mov
outsl
je
je
and
pop
imul
push
or
inc
rep
and
push
sub
adc
dec
orl
sub
sub
xor
mov
out
xor
inc
fs
outsl
or
cltd
jbe
imul
or
jno
xor
xor
sbb
xchg
xor
pusha
dec
sub
mov
test
sbb
and
dec
or
mov
inc
pop
pop
xor
push
sbbl
pop
xor
mov
enter
cmp
das
sub
and
jg
pop
adc
add
inc
push
push
push
inc
incl
push
dec
push
loopne
push
xor
pop
pop
dec
dec
dec
xor
pushl
ds
push
add
inc
dec
push
inc
inc
push
xor
push
inc
inc
xor
jg
decl
dec
inc
inc
ss
push
inc
ss
dec
ss
xor
pop
push
dec
mov
push
push
xor
dec
dec
aaa
cmp
dec
xor
es
pop
aaa
xor
push
das
mov
add
xor
inc
dec
xor
push
dec
inc
xor
mov
or
xor
inc
push
dec
dec
push
dec
xor
pop
inc
xchg
or
push
dec
xor
cmp
ret
mov
ss
inc
loop
dec
inc
xor
push
cli
xor
mov
push
xor
pop
dec
mov
dec
add
dec
ljmp
sti
push
pop
xor
aam
dec
pop
shlb
xor
ss
push
inc
push
dec
dec
push
inc
das
mov
jg
push
inc
dec
xor
dec
push
dec
inc
dec
fcompl
mov
outsl
or
xor
inc
push
inc
push
inc
inc
ss
add
dec
dec
dec
cmp
inc
dec
xor
aaa
add
outsl
sub
mov
dec
cs
xor
fsubrl
clc
add
dec
dec
dec
mov
push
dec
mov
adc
cmp
inc
xor
push
dec
xor
call
xor
loopne
mov
insb
dec
ss
inc
inc
pop
push
dec
xor
add
dec
push
dec
push
sbb
sbb
in
sbb
ss
inc
push
push
mov
xor
mov
xor
mov
in
pop
xchg
xor
cmp
shll
inc
pop
hlt
push
xor
inc
dec
inc
push
jb
mov
dec
inc
ds
xor
push
pop
dec
pop
inc
insb
inc
pop
mov
inc
cmp
cmp
inc
jl
mov
insl
inc
pop
out
push
pop
inc
dec
inc
push
xor
inc
dec
push
dec
mov
inc
cmp
dec
mov
inc
cmp
dec
inc
inc
aaa
ds
dec
push
pop
inc
cmp
sbb
das
adc
push
push
push
push
dec
dec
push
inc
and
adc
dec
mov
add
ss
jp
dec
push
cmp
lret
sub
add
xor
sbb
xor
cmp
fisttps
rolb
xor
pop
dec
inc
dec
or
or
inc
push
inc
inc
fdivrl
mov
jp
dec
cwtl
inc
inc
xor
pop
dec
cs
loopne
call
pop
push
dec
pop
push
dec
push
dec
inc
pop
inc
dec
pop
push
ss
dec
mov
fwait
mov
xor
xor
mov
sbb
dec
push
inc
dec
xchg
adc
pusha
outsl
adc
push
xor
push
add
sahf
push
inc
xchg
shrb
lods
mov
sbb
dec
push
push
cmp
inc
jo
xor
adc
fwait
mov
dec
xor
loop
jae
xchg
push
in
xor
push
inc
dec
push
es
inc
push
xor
push
shlb
sub
dec
outsb
mov
test
insb
xchg
push
out
inc
test
pop
pop
mov
ss
push
push
ficomps
dec
hlt
ljmpw
xor
push
xor
aaa
pusha
push
push
mov
aaa
xor
push
mov
mov
dec
dec
xchg
hlt
or
and
mov
je
hlt
cld
in
lcall
ljmp
fcmovnbe
mov
and
dec
dec
push
push
xor
inc
jno
rorl
fdivl
ret
rclb
repnz
push
ss
or
dec
popa
adc
cmp
and
xor
inc
fsubrl
xor
rcrl
inc
aaa
xor
xchg
xor
mov
xor
dec
lret
hlt
ss
inc
add
cwtl
inc
xor
mov
dec
dec
xor
pusha
sub
js
inc
inc
or
adc
xchg
es
stos
inc
sub
dec
xchg
xchg
movsb
dec
cmp
out
je
mov
push
cmp
jle
inc
dec
xor
dec
jp
sbb
dec
dec
or
imul
push
into
inc
gs
rclb
dec
pusha
pushf
pusha
push
mov
push
push
out
xor
xor
addl
xor
add
push
nop
outsb
pop
and
inc
dec
xchg
mov
ret
xor
add
or
in
pop
add
push
dec
dec
xor
inc
adc
insb
dec
add
pop
xor
test
dec
shr
rcrl
push
push
xor
push
push
cmp
out
aaa
or
push
push
fwait
sub
scas
dec
dec
xor
lods
pusha
popa
mov
sahf
dec
cmp
inc
or
mov
lcall
add
dec
cmp
jle
inc
or
inc
xchg
test
xor
test
je
mov
lock
inc
xor
add
lcall
pop
xor
push
dec
dec
nop
in
inc
in
dec
jo
test
insb
es
ret
adc
push
push
pop
aam
adc
inc
cmpsb
insb
push
lods
jo
fstl
xor
sbb
xor
mov
pop
dec
xchg
stos
mov
dec
xchg
nop
inc
incb
andl
cmpsb
push
dec
inc
mov
pop
push
movsb
fisubrl
cld
cmp
inc
push
push
push
test
fdivl
inc
jb
loop
or
cwtl
mov
mov
adc
pop
cmp
xor
cmp
fdivl
sub
aaa
movsb
mov
push
ret
cmpsb
push
mov
xor
push
xchg
stos
cmpsb
xor
orb
or
xchg
sub
dec
add
js
dec
pop
int3
push
test
xor
ss
pop
sbb
dec
fdivs
and
hlt
inc
pop
xchg
inc
andb
dec
or
lret
jb
dec
inc
sub
and
inc
sub
push
repz
push
or
push
lcall
add
sub
sbb
dec
inc
decb
je
call
sbb
aaa
push
xor
mov
xchg
mov
push
or
rcll
test
pop
dec
xor
push
cmp
jb
xchg
push
inc
cmp
inc
test
push
incb
dec
add
cmpsb
inc
jbe
jne
xor
adc
xor
or
ret
or
rcll
inc
push
movsb
inc
mov
roll
xor
cmp
pusha
xor
xor
scas
or
inc
push
pop
inc
push
shl
xchg
inc
push
test
dec
cmpsb
xor
or
inc
xchg
lret
mov
adc
adc
jo
lcall
dec
sahf
mov
dec
dec
shlb
adc
nop
pushf
or
mov
enter
adc
inc
xchg
call
test
ss
dec
cmp
pusha
inc
or
fimuls
xchg
mov
cli
or
add
xchg
mov
sbb
push
inc
pop
cmp
push
or
xor
inc
dec
mov
insb
pop
and
xor
inc
loope
adc
inc
bound
stos
push
inc
push
dec
stc
push
xor
fdiv
cmp
xor
aaa
xlat
push
aad
clc
push
xor
push
inc
pop
lods
sbb
ret
mov
xor
sub
pop
xchg
jl
xor
mulb
decb
inc
inc
sahf
dec
test
or
dec
enter
add
stos
pop
sub
shlb
xor
xchg
pop
movsl
push
mov
inc
push
fs
push
xorb
xor
xor
sub
ret
dec
pushf
dec
push
push
mov
push
test
xor
sahf
in
pop
ret
cmpsb
xor
xor
push
jo,pn
dec
sbb
xor
dec
insb
push
mov
inc
shlb
xor
xchg
lcall
inc
addl
adc
xchg
adc
push
popa
mov
sbb
add
scas
xor
push
jbe
xor
jmp
xor
cmp
les
xor
fiaddl
into
push
ss
push
add
in
pusha
call
pop
pop
mov
inc
xchg
inc
jle
mov
sbbl
dec
or
loop
dec
dec
adc
pop
dec
mov
test
and
inc
out
sbb
push
orb
xchg
xor
and
test
dec
add
push
push
fs
pusha
dec
hlt
inc
inc
addl
push
dec
cmp
push
inc
jne
xlat
mov
mov
push
push
sbb
sub
push
dec
push
scas
nop
dec
jp
or
or
push
adc
push
shll
jle
dec
xor
or
cs
xor
adc
lods
shlb
mov
push
popa
jb
loopne,pt
push
cmp
cmpsb
or
cmp
popf
dec
hlt
inc
mov
push
mov
push
scas
dec
cld
xor
dec
aam
push
mov
xor
add
push
mov
lcall
mov
jbe
cwtl
or
sbb
push
scas
xor
lret
adc
push
xchg
or
out
cld
cmp
xchg
stos
sbb
lret
addb
faddl
scas
scas
aam
mov
cmp
pop
dec
or
test
in
mov
xor
mov
dec
dec
cmp
xor
aaa
ss
ret
dec
cmpl
nop
clc
xor
or
add
push
aam
dec
dec
test
xor
pop
cli
push
inc
push
add
dec
adc
call
dec
inc
xor
xor
pop
out
add
int3
or
enter
push
insb
push
xchg
loop
mov
hlt
out
inc
dec
cmp
fs
aaa
push
add
dec
fdivl
pop
and
sub
dec
lods
enter
push
orb
push
xor
push
push
mov
dec
push
sub
push
loopne
xor
ret
frstor
push
push
ss
xchg
ficoml
xor
rorb
insb
mov
mov
push
cmp
dec
inc
inc
dec
or
xor
dec
pop
push
xor
lods
adc
push
nop
inc
insb
dec
and
inc
int3
aaa
xor
adc
orl
mov
push
adc
call
dec
push
sahf
dec
fisubs
cltd
loopne
lock
cmp
in
dec
loopne
xor
dec
xchg
sbb
stos
pop
std
cld
pop
push
push
push
sahf
in
dec
mov
mov
sbb
cmp
dec
dec
ljmp
cs
push
push
shl
dec
mov
or
popa
mov
cs
mov
jb
xchg
mov
sbb
mov
dec
outsb
push
dec
dec
push
xor
jbe
out
fmuls
loopne
or
xchg
dec
dec
dec
dec
xor
inc
imul
pop
loopne
sahf
push
dec
test
cwtl
shl
push
pop
inc
and
dec
pop
or
pop
push
notb
inc
cmp
jl
dec
dec
inc
dec
dec
inc
stos
inc
pusha
adc
in
push
xor
inc
xchg
push
or
dec
xchg
inc
popa
push
ficoms
je
adc
xor
inc
push
inc
cs
fs
sbb
inc
aaa
inc
bound
fimuls
push
mov
inc
dec
dec
inc
xor
inc
push
or
ljmp
pop
xor
or
xor
and
mov
inc
jp
inc
mov
fsubl
xchg
dec
pop
xor
xor
xor
ret
in
call
inc
add
mov
pop
enter
or
adc
js
xor
dec
cmp
adc
or
pop
push
cmp
mov
hlt
xor
dec
xor
inc
jp
sub
xor
jp
jbe
fists
inc
sbb
jl
dec
inc
int3
inc
xor
cmpb
push
ss
cmp
rolb
lcall
dec
mov
mov
insb
in
pop
xor
jo
je
inc
cmpsb
dec
ss
push
dec
mov
cwtl
inc
sub
or
xor
and
mov
pusha
mov
popa
ret
dec
dec
push
push
push
cltd
and
ljmp
shlb
jl
xor
push
lods
push
inc
dec
push
cmp
mov
call
inc
pop
test
mov
sub
lods
sub
cwtl
push
es
xor
mov
int3
inc
enter
test
dec
out
movsb
push
sub
xor
sar
push
pop
les
or
aam
dec
xor
pop
xor
mov
dec
imul
and
xchg
push
outsb
xor
out
push
es
sub
hlt
pop
xor
fcomp
or
dec
jp
sarb
xorl
ss
call
pop
xor
inc
dec
push
adc
and
je
push
dec
bound
dec
hlt
mov
dec
pop
rclb
inc
push
test
pusha
cmp
cmp
andl
push
pop
enter
or
es
and
inc
shll
pop
xor
cwtl
aaa
pop
cwtl
rcl
dec
stos
repnz
inc
cmpb
dec
fcomps
push
or
xor
push
pushf
or
inc
data16
dec
mov
push
adc
lods
ss
mov
dec
inc
push
dec
and
push
pop
ret
push
cwtl
ret
cmp
cmp
lds
cmp
divb
inc
mov
sbbb
stos
cmp
push
lods
lods
dec
push
push
adc
dec
inc
loopne
cli
fisubrs
xor
pop
mov
stos
ret
rorl
fcmovb
pop
dec
cmp
test
xor
cmp
ficoml
dec
mov
dec
shl
or
sbb
push
xchg
mov
inc
dec
push
dec
jo
push
push
cmp
pop
add
cs
inc
dec
ss
push
dec
inc
pop
add
sub
jle
push
cwtl
aaa
hlt
pushf
inc
xor
xchg
data16
aaa
lret
outsb
es
inc
xor
xor
ljmp
mov
cwtl
sub
mov
dec
push
fsub
sbbb
jle
pop
push
adc
inc
data16
xchg
cwtl
dec
divb
and
jp
fisubrs
mov
dec
or
inc
je
sbb
xor
shll
xor
ret
mov
movsb
addb
ret
fisttpll
push
cli
jb
fimuls
stos
sbb
xchg
xchg
shrb
movsb
push
aaa
pop
data16
add
fidivs
adc
add
addb
or
dec
push
cmp
fimuls
inc
adc
cmp
sub
xchg
loop
push
sub
insl
cmp
test
cmp
in
mov
push
xchg
mov
xor
add
sbb
pusha
inc
dec
bound
xor
or
fimull
push
add
xchg
lock
mov
push
cmp
sub
push
rorb
pop
pop
sbb
jb
push
js
or
scas
add
test
add
push
mov
mov
xor
add
test
cmp
xchg
jo
cmc
bound
dec
repnz
and
out
mov
add
jb
and
mov
cmp
inc
jb
in
fldl
cmp
and
push
fs
movl
stos
insb
push
inc
ss
adc
inc
dec
stos
dec
dec
push
sub
push
pop
and
push
mov
adc
dec
cmp
dec
dec
xor
pop
mov
pop
push
shl
xchg
or
or
add
dec
push
adc
adc
sbb
ss
shlb
dec
mov
fs
movsb
xor
add
adc
xor
scas
pushf
lcall
push
or
dec
and
sub
sub
and
dec
call
sub
push
fimull
call
dec
jb
xchg
push
mov
cmp
xor
int3
movsb
sbb
lret
lcall
subb
push
jmp
ljmp
push
pop
pop
jle
xor
mov
nop
inc
pop
inc
sub
add
inc
jbe
je
push
cs
pusha
lret
fs
xor
mov
mov
inc
inc
push
aaa
dec
pop
add
test
aam
push
ror
pusha
js
repnz
pop
mov
push
xchg
aam
xor
adc
dec
stos
xor
dec
add
in
mov
jp
sbb
mov
pusha
adc
enter
jo
lock
ss
push
ss
push
push
push
xor
dec
loop
mov
mov
fcoml
es
sbb
jle
mov
or
outsb
push
inc
retw
xor
int3
dec
and
or
xor
dec
push
pop
sbb
stos
jle
add
or
xchg
cs
ljmp
dec
pop
mov
adc
dec
cmp
lret
adc
stos
cmp
jl
cmp
dec
incb
push
and
sub
mov
xchg
pop
push
mov
ss
push
sub
xor
mov
mov
inc
inc
xor
mov
mov
push
push
mov
rclb
shlb
xor
pop
dec
loop
add
inc
xor
or
pop
out
lods
nop
cltd
mov
mov
dec
add
mov
xor
mov
aaa
sub
xor
xor
sub
mov
dec
sbb
sbb
or
inc
mov
inc
rcl
dec
movsb
push
inc
xchg
xchg
dec
push
movsb
loop
inc
stos
dec
in
movsb
pop
and
scas
push
movsl
scas
pop
and
sahf
push
push
dec
ret
and
pusha
add
inc
xor
inc
or
xor
dec
movsb
inc
hlt
sbb
loop
mov
into
int3
ss
dec
clc
dec
push
xor
int3
push
in
pop
ficompl
sub
dec
mov
cmp
xchg
push
pop
pop
fidivrs
xchg
call
or
push
inc
inc
push
loopne
sub
inc
mov
or
movsb
cmp
inc
movsl
mov
inc
aaa
insb
inc
xchg
push
int3
gs
mov
pushf
rorb
rorl
push
jbe
xor
orb
mov
cmpsb
push
rclb
test
xor
cmp
dec
or
xor
sbb
daa
adc
inc
sahf
xor
add
xor
mov
test
push
popa
xchg
dec
push
out
pusha
inc
xor
add
xchg
loopne
push
push
insb
pop
push
inc
sub
push
fs
popa
adc
call
add
sarb
fiadds
push
mov
mov
inc
cmp
inc
pop
push
orb
shll
dec
call
int3
subl
inc
push
add
addl
or
aam
xor
push
rcll
loop
ret
xor
ret
mov
cmpsb
adc
dec
fmull
in
in
aaa
xor
cmp
mov
adc
mov
dec
push
repnz
nop
mov
imul
push
and
and
or
inc
push
cli
add
pop
add
es
pop
cmp
inc
inc
push
dec
dec
dec
xlat
cltd
movsl
or
sub
and
or
dec
call
repnz
cwtl
jp
adc
outsb
sbb
fdivl
cmp
xor
rolb
lcall
inc
bound
stos
xor
cs
inc
stos
rorl
and
cmp
push
sub
inc
inc
test
push
cmp
xor
push
es
push
mov
shl
xor
int3
add
xor
dec
dec
pop
sbb
mov
lcall
mov
push
cltd
push
call
push
add
mov
pop
incb
aaa
inc
ror
lret
pushf
nop
adc
jne
push
xchg
push
push
inc
cli
incb
test
stos
lcall
add
mov
roll
ds
add
fadds
mov
adc
bound
cmp
adc
shlb
pop
adc
daa
stos
movsb
dec
rcrb
and
rcll
push
xor
jo
mov
dec
push
adc
dec
pop
aam
xor
sbb
xor
inc
ret
or
pusha
ljmp
sub
shlb
xorb
int3
inc
repnz
push
xor
pop
inc
inc
sub
pop
pop
push
sub
aam
push
push
pusha
cmp
cltd
mov
push
push
rolb
cmpsb
test
mov
sub
mov
mov
or
or
or
movsb
js
push
pop
dec
or
sbb
or
xor
add
dec
sbb
mov
shlb
mov
imul
loop
push
loop
xor
or
push
push
inc
push
dec
dec
cmp
aaa
loope
loopne
call
mov
add
lret
call
push
pop
dec
pop
sub
xor
sbb
dec
sahf
lcall
xor
or
push
ss
xor
pop
mulb
stos
and
lret
push
jbe
adc
xor
fiaddl
pop
ss
xor
inc
push
inc
ret
add
sbb
dec
ret
insl
subl
cmpsb
and
cld
xor
inc
shlb
sbb
add
loopne
pop
mov
jo
push
sub
stos
xor
pushf
outsl
push
mov
jp
xor
lods
push
inc
fadds
add
cltd
sbb
xchg
ret
mulb
add
inc
jmp
sub
insb
pop
rclb
lret
les
mov
push
dec
fiaddl
cmp
dec
xor
shll
push
or
je
push
sub
cmp
pop
dec
push
inc
dec
inc
mov
pop
sbb
push
sub
jle
cld
aam
stos
or
les
xor
sub
movsb
push
divb
inc
lock
gs
test
mov
loope
mov
xor
sub
push
leave
adc
mov
sbbl
out
movsb
mov
pop
push
inc
push
ret
in
ss
push
dec
dec
push
sub
clc
rcrb
dec
mov
cmp
xor
dec
add
pop
add
mov
pusha
mov
call
mov
sub
stos
add
push
push
dec
lret
mov
bound
push
popa
dec
xor
fs
fs
push
insl
adc
dec
call
dec
cwtl
dec
push
dec
loopne
push
sub
push
cmpsb
jo
aad
pop
and
ljmp
push
push
loop
and
aam
add
or
xor
rclb
cmp
movsb
push
ret
push
addl
sbbl
cmp
dec
je
add
pop
push
sahf
stos
add
dec
inc
ss
call
dec
inc
dec
shr
and
fdivrs
cmp
xor
sbb
cmp
test
ret
sub
dec
dec
mov
push
fs
aam
push
inc
js
push
cwtl
mov
hlt
rclb
jo
mov
adc
cmp
add
inc
push
adc
dec
xor
xchg
dec
popa
push
dec
push
hlt
cwtl
lcall
aaa
shl
adc
mov
jle
push
cs
xor
cltd
movsb
push
pop
push
or
cltd
dec
dec
lock
inc
sahf
add
data16
push
aam
xchg
or
adc
shll
inc
mov
sub
push
mov
mov
xor
push
inc
scas
push
jb
push
shll
cmp
outsb
pop
mov
xor
xor
xor
inc
sbb
pop
push
and
add
add
adc
adc
jmp
shll
dec
incb
test
push
repnz
orl
inc
subl
pop
or
inc
add
or
xchg
xchg
jp
or
xor
sbbb
pusha
xor
xorb
or
fisubs
push
stos
sahf
dec
inc
xorb
fcoms
xor
jb
or
push
stos
dec
sahf
xchg
adc
data16
add
and
pop
sbb
dec
xchg
test
and
jo
xor
shrb
push
je
loopne
cmp
push
js
fimuls
call
adc
sub
in
dec
push
test
adc
inc
xor
into
repnz
or
pop
cmp
push
add
or
sub
xor
cmp
sbb
xor
test
dec
add
push
dec
cs
push
addl
in
xor
xor
movb
xor
pop
pop
jo
inc
gs
push
xchg
push
loop
cmpsb
pop
sub
inc
dec
rclb
xchg
cmp
mov
and
rorb
aam
push
sub
lcall
xor
jo
sub
cltd
mov
add
lret
sbb
pop
add
fidivs
ret
fcompl
inc
inc
xchg
ret
cmpsb
xor
and
inc
inc
push
cmp
xor
inc
rorb
stos
push
sbb
push
mov
cmp
push
inc
subl
dec
cmp
notb
push
movsb
inc
and
jbe
sbb
xor
pop
scas
push
mov
cmp
and
ds
pusha
inc
xchg
sbb
add
lcall
mov
cmp
xor
cmp
outsb
clc
faddp
xor
leave
and
adc
ret
and
jbe
pop
cmp
bound
push
mov
xor
push
cs
enter
int3
add
cwtl
mov
push
loopne
xchg
pushf
pop
dec
dec
xor
add
and
sahf
pop
shlb
loope
inc
cmp
and
and
xor
pushf
loop
xor
sub
push
or
mov
inc
jb
sbb
sbb
inc
push
xor
pop
int
mov
ret
enter
test
pop
jl
cli
push
mov
pop
push
cmp
inc
dec
dec
lods
push
shlb
add
rolb
push
inc
cmp
fs
subb
push
inc
push
inc
clc
sbb
es
xor
push
andb
dec
xchg
add
inc
mov
jne
dec
lret
pop
xor
xor
dec
push
dec
stos
shlb
sbb
in
mov
and
push
xor
mov
inc
in
push
cmp
pop
mov
add
data16
xor
stos
xchg
dec
add
inc
sbb
pop
jle
dec
inc
pop
pop
jb
inc
add
sbb
inc
and
sbb
dec
or
xor
add
sub
or
faddl
ds
mov
push
ret
cmp
push
mov
dec
push
mov
dec
aaa
ds
aam
adc
sub
cld
inc
int3
or
inc
mov
shll
inc
adc
sub
push
adcb
adc
ljmp
or
dec
cmp
shlb
pop
ss
sub
inc
and
or
ret
dec
inc
sbb
xor
mov
push
shlb
mov
xor
and
aam
aam
ss
inc
xchg
flds
mov
adc
add
cld
test
lcall
inc
inc
mov
ret
inc
out
push
cwtl
dec
clc
dec
push
dec
inc
sbb
pop
rorb
jo
test
or
loopne
ds
dec
inc
mov
add
xchg
pop
cmpsb
movsb
push
jmp
and
pushfw
xor
xchg
mov
data16
dec
lods
lret
in
out
xor
sbb
push
sbb
pop
inc
fsubr
outsb
or
jb
sbb
bound
pop
addb
idivb
push
rcll
mov
int3
jle
xor
mov
xor
ljmp
push
xor
inc
pop
or
cmpl
push
rorb
dec
inc
push
fmuls
push
rorb
ret
aam
cld
inc
dec
dec
sahf
jle
mov
sbb
mov
push
dec
dec
dec
aaa
mov
inc
lods
adc
fidivs
dec
inc
mov
cmp
cltd
sbb
sbb
xor
mov
xor
xor
rorb
adc
push
mov
outsb
cmp
inc
ret
inc
dec
cmp
cwtl
inc
gs
push
mov
xor
add
push
mov
loopne
sub
in
lret
loope
data16
cmp
loopne
xor
pop
push
mov
mov
push
dec
mov
xor
pusha
mov
mov
inc
pop
jp
lret
pusha
add
dec
sbb
sbb
push
loope
dec
enter
xor
add
xor
sbb
lret
push
mov
push
push
xchg
and
or
int3
xor
push
aaa
in
mov
cmpsb
or
dec
and
call
add
dec
push
push
mov
or
sbb
pusha
fimull
xchg
pop
dec
pop
xor
rcrb
orb
push
scas
adc
aam
and
ds
xchg
out
and
xor
cmp
cmp
inc
adcb
pop
addb
jle
lods
daa
adc
cmp
xor
add
adc
inc
icebp
mov
dec
cmp
and
xchg
lcall
push
je
nop
ret
mov
add
shll
rol
cwtl
sahf
cmp
dec
or
rorb
adc
orl
and
xor
push
popa
orb
jb
cmp
push
push
inc
adc
pushf
inc
ret
push
popa
mov
pop
mov
in
push
xchg
push
adc
push
xchg
lret
les
mov
adc
push
loopne
repnz
inc
cmpsb
aam
cs
ret
xchg
lcall
es
in
dec
push
xchg
inc
push
test
and
xor
je
dec
xor
repnz
mov
inc
lret
cmp
dec
mov
bnd
sahf
adc
push
dec
jle
push
mov
dec
cmp
addl
dec
int3
xor
pop
jb
rolb
adc
sbbb
fdivs
mov
push
roll
dec
or
subb
inc
push
push
cmp
inc
orl
mov
int3
mov
add
aaa
jbe
pop
dec
push
push
add
dec
pop
and
xchg
jnp
dec
cmp
dec
sbb
fwait
add
inc
push
mov
addb
xor
dec
fs
inc
pop
dec
xor
sbb
pop
add
cmp
and
fucom
cmp
subb
dec
adc
pushf
push
test
push
fidivs
cmp
push
push
xor
mov
xor
aam
test
cs
push
lods
ss
mov
push
xor
jbe
mov
pop
lods
inc
mov
les
inc
push
test
jo
data16
add
adcl
mov
add
fmuls
int3
push
cmpsb
add
xor
sbb
push
add
or
es
dec
in
mov
mov
adcb
xor
inc
ret
outsb
pusha
pop
push
mov
loope
xor
xchg
loop
mov
xor
pop
push
ds
xor
test
add
jp
dec
pop
call
cmp
cmp
cmpsb
lock
inc
loopne
push
rcl
dec
dec
inc
xor
cmp
xor
mov
adcb
mov
sbb
pop
jae
in
push
push
cwtl
pop
dec
inc
dec
push
outsb
inc
pushf
cwtl
mov
pop
dec
test
rol
jo
aam
ljmp
jge
xor
push
dec
aaa
dec
ds
and
lcall
lods
inc
add
adc
xor
add
les
or
inc
fidivs
cmp
inc
push
xor
dec
xor
cwtl
call
aaa
lods
data16
dec
add
adc
and
in
pushf
xorb
cmpsb
cmp
sbb
or
and
cmp
add
sbb
enter
inc
jbe
mov
mov
dec
dec
inc
mov
dec
sub
mov
sub
sub
call
rolb
aaa
sub
push
adcb
pop
mov
es
in
and
pusha
and
call
ljmp
movsl
push
or
sub
push
loop
jae
nop
dec
les
sub
cwtl
lods
ret
or
push
out
aaa
je
xchg
popa
push
mov
jbe
loopne
or
ret
add
push
push
sub
push
xor
adc
call
pop
test
ret
pop
sub
nop
test
or
fsubp
sbb
aad
arpl
xchg
dec
jle
insb
adc
dec
fs
dec
inc
cs
and
mov
cli
lods
inc
xchg
add
fst
cmp
push
dec
ss
js
adc
add
push
mulb
test
push
pop
mov
pop
or
xor
leave
mov
or
push
pop
fs
or
sbb
cmp
pop
push
subb
cld
pop
xor
and
xchg
inc
mov
sahf
mov
cs
aaa
push
ljmp
or
rclb
xchg
mov
ss
mov
inc
xchg
or
mov
ss
mov
movsb
push
js
pushw
fs
rcrb
rorb
test
lods
rorb
inc
push
loopne
push
ss
xor
add
call
and
dec
add
inc
sub
sbb
push
adc
cmpsb
dec
dec
in
dec
dec
jbe
or
sub
xor
or
adc
push
sbb
push
push
jmp
inc
sbb
sbb
push
push
xor
ret
add
sbb
adc
dec
out
push
add
cmp
add
or
push
mov
pop
test
push
inc
inc
push
xchg
sbb
jb
xor
and
push
push
fsubl
sbb
mov
add
data16
stos
enter
add
and
repnz
jbe
push
push
test
mov
dec
push
inc
je
dec
xor
add
es
dec
xchg
xor
jbe
data16
shlb
adc
in
push
add
add
dec
dec
push
push
mov
out
push
xor
in
adc
insb
inc
xchg
push
lret
mov
xor
push
ds
mov
pushf
jo
add
inc
in
mov
and
add
sub
outsb
rorb
stos
jne
popa
xor
push
xor
push
push
popa
add
xchg
push
insb
mov
push
add
stos
rcrb
aam
test
rclb
jo
shrb
mov
enter
and
xor
dec
push
out
xor
push
out
shlb
dec
dec
push
or
pop
add
clc
xor
adc
push
or
adc
mov
cli
xchg
xor
adc
add
bound
push
pop
jp
enter
cmpsb
push
adc
push
pusha
and
ss
lds
sahf
nop
xor
push
imul
jp
outsb
inc
cmpsb
add
dec
push
add
mov
sub
add
div
jl
xlat
gs
aaa
dec
add
dec
lock
inc
xchg
in
inc
pop
je
xor
aad
test
movsb
push
sub
mov
or
outsb
cld
xor
push
fs
xchg
adc
das
inc
andl
dec
inc
push
xor
loope
jb
pop
dec
push
fdivs
pop
lret
aad
add
dec
mov
test
scas
aaa
inc
adc
fs
mov
inc
sub
inc
rorl
jp
push
cs
cmp
inc
loop
dec
cmp
sbb
push
jo
inc
dec
addb
push
stos
push
xor
dec
xor
sbb
outsb
xor
enter
lcall
int
or
enter
sbb
mov
sarb
push
sub
adc
mov
sub
adc
sbbb
loop
xor
or
push
push
push
dec
movsb
test
dec
xchg
cmp
xchg
push
add
ss
jo
inc
xchg
lret
and
stos
lods
cltd
inc
mov
scas
inc
repnz
loope
push
out
inc
inc
xor
inc
xchg
inc
and
ljmp
into
push
xor
pusha
or
jo
cwtl
adc
mov
faddl
test
hlt
push
pusha
push
call
sbb
xor
sahf
sub
pop
enter
data16
aam
adc
pop
data16
push
push
je
mov
and
lock
leave
mov
push
mov
shll
xor
push
dec
mov
mov
ss
push
es
sub
adc
xor
xor
dec
enter
inc
insb
fsubp
es
mov
cmp
inc
dec
dec
pop
mov
ss
xor
outsb
inc
pusha
adc
stos
shrb
pop
dec
jle
inc
or
adc
pop
inc
push
dec
jb
mov
add
xor
dec
mov
inc
and
fs
push
pop
push
pop
and
loopne
xor
lcall
mov
add
sub
xchg
stos
mov
mov
cmpsb
xor
cmove
dec
pushf
cmpsb
push
dec
dec
cli
push
mov
add
sbb
lods
mov
sub
rcrb
push
or
sbb
enter
mov
inc
dec
fidivs
and
dec
cmp
push
mov
addb
push
and
xor
xor
pop
and
jbe
jbe
aam
sbb
push
pop
push
enter
mov
push
cmp
rorb
sbb
or
and
into
cmp
push
push
loop
orb
jb
mov
sbbb
push
and
scas
xor
push
sbb
adc
push
xor
xchg
fmuls
test
add
fisubl
adc
bound
jo
rcl
bound
xor
dec
dec
mov
orb
test
xor
inc
and
ss
rcrl
pop
repnz
fisubrs
ds
xor
dec
lock
js
cmp
jo
push
test
pop
sub
mov
test
push
inc
lcall
lock
mov
push
rorb
dec
pop
xor
dec
out
sbb
push
mov
sbb
mov
and
fdivrs
sub
inc
push
sub
mov
aaa
push
push
dec
add
sub
dec
dec
xor
sub
out
insl
addb
or
mov
xchg
bound
xchg
sub
ss
mov
dec
push
mov
pop
pop
sub
dec
push
dec
xor
dec
add
push
sub
dec
xor
cmpsb
lock
sbb
push
push
out
push
inc
pop
dec
test
jbe
fs
and
add
je
xchg
aas
jle
outsb
add
inc
fimuls
mov
pop
int
pushf
dec
stos
lret
ss
scas
pop
cmp
inc
or
xchg
ds
rolb
sub
sti
movsb
add
push
dec
fmull
stos
stos
add
dec
ds
inc
aam
hlt
pop
es
mov
pop
loopne
stos
sbb
mov
push
in
or
add
sub
add
mov
push
lret
mov
push
mov
cmp
test
inc
mov
cli
test
insb
ret
cmp
cmp
sbbb
pop
adc
or
adc
sub
push
inc
push
xchg
cmpb
dec
add
fnsave
insb
dec
movsb
dec
ss
ljmp
dec
cmp
dec
mov
cmpsb
rolb
or
push
inc
roll
xor
mov
adc
ds
call
mov
nop
xor
pushf
push
mov
xchg
push
and
rorb
push
or
pushf
push
inc
fldcw
addb
cmp
xor
mov
inc
add
enter
inc
pop
clc
xor
ret
inc
xor
movsb
shlb
adc
xor
dec
push
push
dec
or
push
dec
adc
xchg
gs
fidivrl
cmp
xor
xchg
mov
pop
pusha
xor
push
inc
dec
push
sub
dec
inc
xor
popa
adc
push
sbb
mov
lock
add
xchg
mov
dec
cld
or
cs
lcall
push
sub
pop
pusha
sahf
cmp
je
lret
sbb
push
shrb
inc
and
hlt
push
fiadds
dec
jecxz
push
dec
dec
cmp
pop
popa
add
sbb
dec
add
mov
addl
xor
ljmp
loope
movsb
enter
data16
pop
cmpsb
movsb
push
xor
add
xchg
data16
decb
test
ss
dec
lret
call
sub
push
xor
into
pushf
sahf
dec
aad
push
xchg
es
dec
nop
inc
lcall
jb
mov
push
adcl
add
sbb
adc
and
inc
movsb
and
jle
test
xorl
xor
xor
push
shlb
adc
or
add
add
sbb
adc
xchg
push
fsubrl
inc
loop
adc
xor
inc
xor
mov
mov
xchg
out
xor
mov
andb
dec
test
pop
les
dec
jo
pop
nop
mov
stos
xchg
cld
mov
dec
sahf
pusha
movb
shlb
je
pop
jo
rclb
call
mov
push
push
and
test
push
pusha
push
adc
pushf
mov
shrl
adc
ss
push
mov
nop
add
shll
jo
jb
lods
test
xchg
lret
lods
aam
dec
and
enter
push
fs
ljmp
dec
hlt
pop
xchg
movsl
xchg
fcompl
test
ret
sbb
mov
mov
rcrl
mov
push
movsb
rcl
xor
inc
test
dec
lods
ret
adc
dec
dec
bound
pop
addb
push
dec
pop
adc
push
inc
dec
loopne
aaa
adc
jbe
sbb
mov
inc
xchg
jo
dec
loop
dec
or
pusha
or
pop
bound
and
xor
dec
xor
test
or
dec
lods
xor
dec
inc
data16
data16
lret
xchg
push
xchg
pusha
and
dec
dec
out
inc
daa
loopne
out
test
or
dec
push
xor
ljmp
xor
ret
and
stos
inc
xor
adc
pop
sbbb
sbb
mov
clc
test
insl
xor
inc
data16
inc
dec
xor
mov
push
push
sahf
push
push
dec
mov
adc
push
ret
sbbb
es
test
dec
jp
mov
push
push
cmp
or
js
rolb
popa
loopne
inc
push
inc
or
decb
or
cli
mov
push
dec
rorb
lock
dec
inc
sub
aaa
sub
xor
mov
adc
dec
pusha
add
out
sub
cld
push
xor
inc
cwtl
dec
push
xchg
adc
sbb
shlb
dec
and
es
daa
dec
shlb
cld
ss
lcall
loop,pt
xchg
cltd
rcrl
cmpb
out
adc
xor
pop
dec
push
sbb
repnz
inc
push
sbbb
xor
mov
sbb
inc
inc
cs
cmp
adc
push
and
or
dec
jbe
push
jo
repnz
pop
xor
adc
push
push
xor
adc
sub
inc
xchg
mov
dec
fs
push
cmpsb
es
sub
push
inc
or
outsb
xor
pop
sub
ficoms
cmp
ds
pop
dec
push
inc
mov
or
pop
nop
fdivs
fmuls
push
dec
pop
add
add
inc
jbe
adc
mov
pop
pop
ret
in
fidivrs
push
dec
mov
jle
cmp
or
loopne
mov
mov
dec
or
and
xchg
pop
push
cmp
inc
dec
inc
push
pushf
pusha
int
sbb
mov
and
dec
mul
push
js
test
sub
inc
push
push
in
bound
mov
enter
mov
jae
sbb
inc
adc
add
lcall
test
in
cmp
xchg
popa
shll
sahf
sub
lods
lret
int3
cmpsb
xor
stos
sbb
jle
cld
inc
dec
mov
push
int3
xchg
sbbl
mov
mov
sbb
dec
xchg
dec
bound
inc
clc
aaa
add
movsl
xchg
adc
cmp
shrl
pop
cmp
push
and
push
in
enter
shlb
push
orb
push
sub
adc
jle
rorb
mov
cmp
ficoml
inc
inc
dec
jle
cs
xor
inc
and
stos
push
mov
sub
and
dec
test
pop
adc
cli
sub
cmp
xorb
or
ret
subb
shll
inc
push
xchg
outsb
in
push
pusha
jo
rorb
inc
fimuls
mov
jb
mov
cmpsb
xor
or
mov
lcall
jo
and
lea
inc
mov
push
enter
add
lods
inc
jge
adcb
jl
inc
push
push
or
add
cmp
xor
rcrl
pusha
jno
add
or
inc
cmpb
inc
add
lret
in
rolb
adc
mov
inc
add
es
pop
push
outsb
inc
jo
xchg
push
and
sahf
inc
aaa
or
pop
movsb
push
in
mov
mov
inc
dec
sub
inc
daa
push
movsb
dec
fimuls
push
adc
add
inc
jbe
or
adc
xchg
add
inc
jb
pushf
shrl
push
es
mov
inc
clc
push
test
push
inc
and
cmp
mov
push
mov
dec
jb
add
cmp
and
mov
add
xchg
hlt
xor
lret
subb
and
sub
movsb
adc
push
cli
sbbb
xor
push
xchg
cmp
js
push
cmp
add
sub
push
addb
add
or
dec
jb
fwait
xorb
inc
and
inc
sbbl
push
push
push
sar
inc
pop
and
inc
inc
push
fmul
xchg
sub
push
adc
push
xor
cmpsb
inc
repnz
sub
and
add
add
push
mov
push
add
mov
add
pop
and
fs
cwtl
or
sar
cs
push
lods
sbb
mov
scas
and
mov
inc
dec
int3
in
in
or
loope
adc
dec
js
cli
pop
mov
xchg
adc
mov
es
sbb
movsl
stos
xor
inc
mov
les
cmp
call
test
xor
sahf
inc
sbb
cmp
sbb
or
loopne
dec
xor
scas
inc
jle
cs
pop
out
xor
or
ds
ds
cmp
cltd
leave
sbb
add
cmp
inc
adc
and
loopne
jmp
jle
sbb
test
jo
push
push
push
push
cs
inc
mov
xchg
es
sbb
cmp
test
test
and
sbb
xchg
push
je
dec
pushf
mov
or
sub
les
aad
adc
dec
ret
vpdpbusds
adc
inc
sbb
mov
loope
sub
cmp
add
pop
loopne
push
adc
pop
test
ds
sub
push
cmp
stos
js
aas
cmp
mov
test
adc
inc
mov
loope
ret
xor
inc
mov
and
dec
fiadds
mov
xchg
mov
ret
sub
lret
xor
rorl
je
stos
lods
cs
loope
addb
xchg
jo
or
adc
lret
push
mov
inc
push
mov
and
aam
mov
cli
jbe
xor
cmp
into
pop
pop
inc
xor
add
add
inc
pusha
cmp
lret
fs
rcrb
pop
push
inc
xor
pop
popf
cmpb
lock
sbb
sahf
sub
push
push
lahf
xchg
sub
gs
inc
test
stos
xchg
enter
pop
dec
mov
mov
sub
xor
int3
or
mov
sbb
aaa
mov
rorb
xchg
add
push
lret
inc
or
pop
mov
je
nop
inc
and
sub
sbb
in
xchg
clc
cmp
lock
xor
and
pop
xor
ret
sub
and
xchg
xchg
sbb
add
mov
aam
sbb
xor
pop
jle
push
inc
pop
popa
cwtl
enter
fimuls
xor
add
cld
test
xor
dec
inc
add
mov
orb
dec
ljmp
mov
mov
and
inc
xchg
rorb
jb
dec
ss
xchg
inc
sub
sub
xchg
mov
pop
dec
sub
jo
add
fmuls
inc
inc
sub
mov
push
sub
ss
mov
aad
cmp
inc
or
xchg
lret
push
and
xchg
pop
mov
push
test
dec
call
adc
dec
inc
dec
cli
add
inc
or
mov
orb
add
adc
pop
or
aaa
push
mov
xor
movsb
fsubr
js
fs
or
aaa
push
push
mov
mov
push
js
inc
push
dec
rclb
in
inc
mov
call
rolb
pop
inc
ds
inc
mov
add
in
mov
mov
leave
inc
or
mov
rclb
mov
and
xchg
shl
xor
adc
xchg
lret
dec
inc
lods
pop
push
inc
int3
scas
or
adc
xchg
ss
inc
mov
fsubrs
xor
adc
add
add
mov
adc
call
sbb
xor
sbb
sbb
dec
hlt
push
dec
js
push
add
lret
test
push
mov
xor
in
mov
bound
push
adc
xor
push
jbe
xchg
push
mov
xor
mov
adc
push
adc
xor
ds
and
dec
inc
mov
sub
lods
push
mov
dec
sbb
push
inc
pop
push
xchg
int3
or
add
push
cmp
push
sub
inc
lds
test
sub
dec
loopne
inc
xchg
xor
xor
sbb
push
push
nop
inc
fisubrl
addl
ret
aad
and
inc
cmp
adc
mov
je
inc
cmp
data16
xor
lcall
push
jle
dec
fimull
push
mov
fidivl
movsb
push
xor
in
xchg
leave
sub
je
pop
xor
push
xor
jo
jle
push
add
cmp
and
jne
push
xor
test
xor
mov
xchg
adc
xchg
nop
pop
xor
pop
shrb
mov
xor
int3
xor
fs
pusha
cmp
push
dec
movsb
pop
je
jbe
dec
or
push
cmp
cmp
add
pop
and
nop
push
adc
ljmp
mov
xor
sbb
push
xchg
push
mov
xor
enter
jo
pop
ret
or
pop
pop
aaa
add
lods
lods
or
sarl
inc
xor
orl
inc
mov
or
shl
aam
xor
mov
or
rolb
les
aad
pop
or
loopne
out
push
pusha
or
cmp
bound
shll
dec
into
pop
lods
jb
or
fmuls
add
cmp
call
xor
mov
lcall
push
pop
nop
push
leave
stos
inc
ret
sbb
pop
aam
xor
mov
je
add
insb
ss
inc
cmp
or
test
nop
pusha
inc
inc
divb
ds
inc
in
mov
adc
cmp
and
xor
sahf
dec
xor
inc
rcl
inc
push
shlb
stos
sbb
add
jle,pt
es
adc
push
sub
pop
dec
inc
xchg
inc
xor
pushf
lods
inc
jo
sbb
push
xor
xor
test
out
ljmp
cmp
xor
orb
cs
mov
inc
rcrb
mov
in
lock
push
sbb
add
repnz
sub
or
cmpsb
mov
pop
push
inc
and
push
xor
push
sbb
inc
sub
cltd
adc
jle
inc
pop
adc
sub
sub
rclb
or
test
or
add
data16
pop
xor
push
lret
cmpsb
push
cmp
and
and
sahf
fcomps
push
sbb
test
xchg
xor
push
or
dec
xchg
test
mov
push
or
cmpsb
cmpsb
push
and
inc
dec
push
push
ss
ss
clc
pop
dec
dec
lret
mov
inc
sbb
add
cmp
dec
sub
and
loop
dec
inc
cmp
cmp
pop
sub
push
push
shll
sub
add
add
adcb
xchg
ds
ljmp
es
lret
dec
dec
ret
sbb
mov
dec
dec
sub
add
call
mov
xor
push
and
addb
push
and
dec
mov
xchg
push
push
or
push
mov
adc
test
or
add
and
ljmp
push
push
lea
dec
mov
test
xor
sub
adc
lret
and
ljmp
xor
bound
in
push
inc
or
xor
push
mov
sbb
test
cmp
movsb
pop
push
push
adc
and
push
push
sbb
push
adc
in
dec
xor
es
imul
movsb
orl
addl
call
pushf
pusha
ficomps
daa
push
dec
dec
mov
repz
test
movsb
xor
cmp
or
ret
add
fiadds
pop
les
dec
jle
adc
cmp
and
ds
inc
es
or
sbb
or
sbb
push
push
sub
push
push
push
adc
cli
call
insb
fdivs
sarb
inc
inc
push
lret
adc
cmpsb
push
and
nop
jo
mov
cltd
inc
add
or
push
push
cwtl
dec
and
add
jle
add
jp
add
test
pop
loope
pushf
or
ret
ficomps
enter
cmp
sub
ss
cs
aad
sub
cltd
cwtl
xchg
movsb
es
sbb
mov
xor
push
bound
xchg
push
lock
pop
lds
or
push
add
xor
dec
push
xchg
sbb
clc
inc
add
add
andb
xor
dec
and
and
jo
cli
adc
dec
dec
sub
adc
int
inc
inc
push
fidivl
sbb
add
xor
and
jbe
cmp
inc
dec
add
je
mov
xor
addb
in
sub
xor
mov
into
test
add
call
inc
push
and
ficoml
push
sub
mov
cli
inc
adcl
push
mov
push
or
sarb
push
test
mov
push
and
js
test
mov
dec
je
fiaddl
movsb
lods
je
inc
mov
adc
es
xchg
shl
cwtl
clc
movsb
xchg
adc
inc
movsl
out
shlb
push
or
bound
ss
xchg
add
pop
mov
or
xchg
sbb
push
in
xchg
inc
lock
push
inc
jl
ficoms
mov
aaa
xor
jno
movsb
adc
out
rorb
popa
xchg
arpl
mov
and
addb
dec
add
fcoml
mov
into
mov
pop
pop
cmc
jo
add
push
cmpsb
add
push
rolb
mov
ljmp
outsb
mov
push
mov
sbb
add
jbe
and
fdivrl
dec
pusha
fiaddl
jb
mov
dec
and
push
dec
dec
jo
and
push
test
inc
test
dec
aam
xor
mov
decb
push
inc
inc
adc
add
inc
dec
pop
dec
je
and
inc
sub
ljmp
mov
inc
mov
push
push
inc
ljmp
inc
fmulp
shrl
sbb
mov
ss
jae
or
pop
push
popa
push
inc
insb
rorb
mov
aam
sbb
push
clc
mov
test
dec
bound
je
push
sbb
xor
rorb
shlb
mov
inc
loopne
add
je
push
dec
or
cli
dec
dec
dec
dec
or
cld
pop
rcrb
xor
fdivrl
inc
outsb
popa
xor
xor
insb
inc
sbb
into
and
gs
push
fneni(8087
inc
push
and
dec
xchg
ret
push
push
bound
adc
test
and
push
xlat
aas
and
xor
add
divb
push
push
inc
xchg
icebp
jno
dec
inc
cmp
push
jo
push
dec
bound
adc
mov
xor
or
or
dec
cmp
jno
adc
dec
xchg
loop
push
inc
scas
push
sub
inc
loop
dec
mov
add
pusha
mov
jb
jle
ficoml
or
test
mov
xchg
mov
pusha
add
es
push
dec
fcompl
dec
dec
push
dec
xor
and
sbb
leave
add
sbb
jp
add
cs
pop
dec
jl
sub
mov
push
mov
addl
push
and
pop
jae
and
inc
sub
mov
adc
adc
push
sub
ds
dec
jl
mov
and
and
adc
orb
movsb
dec
int3
add
xor
adc
lret
clc
test
lock
xor
test
pushf
shlb
data16
and
in
inc
and
pusha
jbe,pt
push
add
movsb
xor
sub
xor
jl
mov
adc
dec
loopne
inc
ret
sub
sbb
mov
cmp
mov
mov
sub
or
push
push
lods
mov
pop
addl
dec
add
push
or
loop
out
mov
rolb
dec
adc
loopne
dec
stos
in
sahf
xor
add
mov
dec
cmp
mov
ss
dec
insb
pop
lds
mov
stos
movsb
xor
push
test
sub
scas
add
and
push
stos
or
push
push
xor
aam
pop
xor
dec
sbb
loop
pop
adc
insb
les
dec
fdivl
xchg
dec
add
ljmp
push
pop
out
push
bound
inc
push
lock
stos
xor
xchg
dec
or
push
cwtl
ret
xor
pop
lret
lcall
xor
dec
pusha
and
sbb
andb
adc
inc
dec
and
cmpsl
pusha
xorb
inc
dec
out
or
aas
loopne
inc
inc
xchg
aam
push
jne
mov
dec
inc
xor
cltd
push
push
inc
pushf
mov
jo
sub
hlt
sbb
inc
xchg
push
dec
mov
enter
rclb
int3
scas
adc
mov
sbb
test
xor
xchg
shlb
les
or
add
or
pop
push
nop
inc
movsb
xor
add
xchg
nop
push
rolb
sahf
dec
mov
or
push
fsubrp
mov
test
inc
hlt
push
sub
jne
add
push
and
add
sbb
stos
ljmp
or
cwtl
and
aam
adc
xchg
and
xor
xor
xchg
cmp
push
xor
inc
or
dec
sahf
dec
data16
cmpsb
ss
pop
lret
sbb
mov
call
add
mov
xchg
push
jne
adc
lock
pusha
adc
pushf
dec
jb
inc
loope
sahf
push
push
inc
in
add
sub
push
dec
xor
pusha
and
sahf
ret
and
fs
inc
mov
push
rorb
push
hlt
loop
dec
outsb
push
ds
push
outsb
pop
mov
or
enter
xchg
enter
sbb
andl
push
sub
and
or
dec
add
adc
sub
mov
es
scas
add
inc
dec
push
mov
aam
cmp
pop
lock
dec
js
push
xor
insb
dec
cmpsb
push
cltd
movsb
cmp
xchg
adc
movsb
sbb
dec
aaa
inc
mov
sahf
ds
mov
push
pop
push
xchg
and
sbb
pop
xor
dec
or
test
inc
xchg
sbb
pop
mov
mov
mov
nop
xor
shlb
movlps
dec
push
popa
adc
dec
fisubrl
or
popf
adc
pop
xor
pop
push
mov
dec
pop
ja
inc
push
ss
mov
xor
xor
pop
xchg
inc
fisubrs
sub
push
cmp
dec
cld
dec
ret
test
push
xor
xor
mov
ss
enter
scas
or
push
rorb
test
inc
xor
sbb
lahf
pop
lret
or
xorl
sub
xchg
sub
pushf
lea
xor
ret
add
inc
incb
lret
dec
sub
or
cmp
lods
inc
andl
gs
shl
pop
lcall
je
xor
sub
adc
shll
inc
dec
dec
push
jo
inc
cmp
fadd
add
pusha
out
je
mov
add
decb
xchg
push
hlt
push
int3
rorb
jl
es
add
sub
inc
icebp
adc
push
inc
dec
jb
sub
or
nop
mov
dec
inc
push
dec
push
xor
adc
movl
popf
sub
ds
loopne
outsb
ret
add
aam
push
inc
xchg
mov
mov
xor
dec
xor
sub
cltd
add
loopne
dec
js
dec
add
push
xor
ljmp
sbb
shl
aam
or
sub
sbb
xorb
and
into
stos
sbb
push
inc
and
cmp
mov
push
xor
xor
test
inc
ljmp
xor
mov
mov
shlb
sub
mov
fadds
fmull
inc
mov
push
dec
add
sbb
adc
js
inc
push
movsl
push
ljmp
push
inc
inc
test
fs
pushf
adc
dec
pop
inc
loope
sub
mov
pop
stos
test
addl
adc
and
and
cmp
fisubs
push
pop
inc
push
pop
sbb
xorb
fdivrp
aaa
and
cmp
mov
pop
enter
call
inc
sub
sub
sbb
xchg
pushf
cmp
in
xchg
sahf
rcrb
xor
sahf
and
sbb
add
and
call
push
xor
xor
push
xchg
aam
test
sub
dec
inc
pusha
add
and
jl
hlt
sub
lods
or
push
faddl
cmp
xor
adc
push
adc
xchg
add
mov
subl
add
pop
inc
pop
push
xor
ficoms
push
xchg
mov
pop
je
push
pop
dec
xor
ss
push
bound
pop
lcall
adcb
adc
ds
movb
pop
inc
es
jne
pop
mov
xchg
dec
repnz
xor
les
add
jne
or
insb
cmp
and
dec
movsb
xor
gs
aaa
mov
inc
dec
cmp
inc
dec
or
push
and
sbb
aaa
push
push
sub
mov
shrb
ss
stos
test
sub
jle
dec
mov
jl
inc
nop
enter
mov
xchg
bound
fidivs
push
xor
push
cmp
xchg
add
cmp
fs
ret
and
adc
in
movsl
xor
mov
xor
or
mov
inc
int
and
fiadds
or
or
push
dec
shrl
adc
push
or
orb
dec
inc
int
jns
stos
lcall
or
dec
push
mov
ret
pusha
push
push
mov
cld
adcb
push
xchg
in
mov
mov
mov
push
push
int
cmp
mov
orb
push
sbb
add
inc
es
cltd
shll
aaa
sbb
ret
stos
adc
cmp
mov
sub
adc
ret
inc
push
push
mov
or
xchg
dec
pop
sub
dec
push
pop
adc
or
dec
pusha
addb
sub
inc
and
popa
cmp
push
sbb
push
push
arpl
out
push
xor
push
cwtl
int3
sbbb
sbb
xchg
inc
sub
xchg
cmp
push
lods
pop
pop
pop
out
or
dec
call
sbb
dec
jbe
inc
xor
add
or
add
aaa
sub
mov
mov
xchg
xor
dec
mov
or
enter
mov
mov
pop
mov
aaa
dec
xor
push
push
push
xchg
inc
lods
push
or
hlt
ss
insb
cld
sub
cmpsb
movsb
push
mov
test
test
adcl
and
pop
ret
loop
movsb
dec
or
pop
push
test
inc
push
or
rolb
shlb
or
sub
adc
mov
test
push
or
daa
aad
cmp
xchg
or
or
test
into
xor
dec
mov
push
test
inc
cmp
sbb
aaa
pop
inc
push
lret
inc
xor
pop
mov
xor
jo
test
into
inc
inc
pusha
push
inc
sbb
and
mov
adc
dec
dec
mov
inc
je
fiadds
cs
fs
lods
dec
jb
ljmp
dec
sub
mov
push
mov
mov
and
popa
add
mov
adc
and
dec
lcall
cmp
ret
xor
outsb
pop
inc
in
outsb
or
inc
dec
shlb
mov
jl
xor
add
dec
mov
dec
je
cld
xor
shlb
test
fdivl
cmp
push
push
xor
adc
mov
jb
or
or
mov
mov
jb
inc
out
dec
bound
test
ret
and
xor
mov
fwait
or
loopne
push
mov
cmp
popf
push
adc
test
mov
nop
jbe
pop
inc
movsb
push
int3
inc
andb
je
push
mov
loope
cmp
lcall
dec
cs
mov
and
and
mov
and
cld
push
ret
mov
pop
dec
xchg
mov
push
push
or
xchg
sbb
andb
pop
and
ret
dec
dec
ds
adc
mov
dec
fisubl
pop
dec
xor
lods
jp
dec
lret
int
xchg
lock
dec
xchg
push
rol
and
pop
ljmp
je
xor
ret
pop
push
inc
ljmp
cmpsb
mov
mov
imul
push
pop
notb
cmp
push
pusha
push
call
js
push
pop
add
and
push
jle
push
inc
add
addb
push
imul
add
xor
pop
xchg
aam
xchg
xor
ss
xor
es
inc
xchg
ljmp
sub
mov
xor
xorb
sub
cmp
xchg
movsl
xchg
ret
pusha
push
mov
pushf
cltd
leave
or
in
loop
hlt
jb
cmpsb
and
add
pop
outsb
test
adc
cmp
cwtl
add
inc
cmpsl
cmpsb
jl,pn
dec
push
sub
aad
pop
sub
push
cmp
dec
cmp
xchg
mov
dec
movsb
mov
sub
notb
ss
inc
lock
xchg
dec
dec
xor
xor
dec
inc
inc
cmp
fmull
pusha
pop
pop
add
jp
test
inc
mov
inc
push
or
add
bound
xor
add
add
inc
mov
xchg
or
test
and
cmp
push
es
push
inc
push
ret
cmp
adc
sub
jne
pop
xchg
lret
clc
inc
inc
xor
pop
and
cmpsb
ss
sbbb
push
stos
movsb
xor
push
dec
mov
dec
mov
sbb
push
ret
and
call
xchg
scas
call
dec
adc
sahf
outsb
xor
xor
add
lret
test
sbb
sbb
dec
lret
sbb
xor
jl
leave
dec
mov
gs
mov
push
dec
int3
sbb
or
or
adc
es
les
and
cmp
nop
push
sbbb
add
imul
dec
cs
inc
mov
add
xor
push
xchg
or
inc
push
inc
push
cwtl
sahf
loopne
mov
push
push
pop
cmpsb
aam
xor
mov
xor
shr
dec
xor
push
mov
and
push
dec
pop
push
inc
xchg
inc
or
cmpsb
adcb
test
sahf
sub
jb
add
and
or
pop
inc
and
jb
xor
and
pop
pop
pop
push
push
push
jl
adc
andl
or
and
add
fisubrs
adc
inc
dec
sub
push
mov
pop
push
dec
gs
or
enter
add
dec
push
adc
dec
cmp
inc
pop
xchg
or
and
fs
aam
dec
scas
mov
mov
push
aaa
push
mov
inc
inc
adc
sub
scas
pushf
popa
mov
inc
xor
push
or
test
call
push
push
ss
dec
add
xor
jo
push
xchg
shlb
mov
pop
and
stos
inc
aaa
xor
ss
loopne
xchg
daa
fs
pop
insb
sub
mov
and
ret
sub
mov
sbb
sbb
addb
jo
data16
xchg
dec
jb
mov
loope
sbb
cmpsb
push
data16
push
ficomps
mov
cltd
ret
in
sbb
test
mov
or
enter
inc
lds
les
rcll
dec
aam
and
dec
inc
add
lods
sub
or
pop
xor
inc
outsb
cwtl
cltd
pushf
sbbb
test
orb
loop
sub
movsl
push
aaa
xchg
push
loope
mov
adc
pop
sub
addb
push
xor
push
inc
ss
outsb
mov
lods
dec
rol
jp
insl
mov
dec
cwtl
outsb
pushf
sahf
ret
out
scas
enter
orb
mulb
lcall
dec
js
xchg
dec
dec
adc
inc
and
mov
inc
mov
nop
add
mov
cwtl
jle
int3
je
sbb
xchg
and
dec
popa
push
adc
cs
xor
mov
push
push
mov
dec
sub
js
cmc
xchg
jne
cmp
and
cmp
hlt
fcoms
enter
popa
add
or
cmp
sbbl
xor
add
jae
fs
sub
sbb
push
push
mov
cs
jbe
mov
and
adc
push
inc
bound
aaa
sbb
lods
dec
cmp
lods
sahf
pop
inc
add
sub
ret
lods
adc
xor
pop
push
sbb
pusha
data16
mov
push
jl
add
inc
push
scas
push
aad
dec
mov
repnz
cwtl
mov
lods
inc
cwtl
into
test
push
gs
xor
or
ss
inc
adc
dec
es
xor
mov
mov
xor
xor
jp
dec
xor
mov
pop
sbb
push
adc
sub
or
mov
outsb
jge
xor
lret
leave
loopne
sbb
mov
cltd
or
imul
loopne
sub
dec
push
jo
cmp
fs
mov
pop
int3
fisubs
xchg
jb
ror
loop
js
mov
pop
mov
mov
add
jb
repnz
push
xor
push
dec
push
sbb
cmpsb
mov
es
je
add
cmp
adc
xor
add
test
inc
push
in
adc
xor
pop
fsubs
out
pop
pop
cs
loopne
xchg
pop
sub
mov
addl
insb
test
inc
dec
pop
in
mov
ret
movaps
pop
lods
jo
inc
enter
aaa
push
push
lret
popa
and
pop
pop
inc
push
or
ss
lcall
push
push
push
cltd
mov
dec
xchg
enter
or
cli
pop
mov
pop
xor
sbb
mov
cmp
mov
dec
push
addb
sbb
lcall
add
mov
shlb
xor
test
dec
loopne
push
push
push
or
dec
mov
mov
ret
cmpsb
pop
lret
mov
or
jp
sbb
es
inc
add
inc
xchg
rorb
fmull
fidivl
add
sahf
cmp
mov
xchg
adc
mov
cs
dec
push
ss
cmp
loop
ret
add
xor
push
cltd
sbb
push
jbe
mov
add
push
or
dec
mov
push
dec
sub
shrb
mov
je
and
push
inc
aaa
push
push
mov
cwtl
add
insb
lods
sbb
dec
push
mov
add
dec
leave
or
scas
add
xchg
cltd
xorl
mov
sub
mov
adcb
dec
sbb
add
data16
push
inc
cmpsb
cmpsb
int
xchg
les
inc
cwtl
sbb
push
fucomp
xor
mov
insb
dec
add
push
sbb
sub
push
xor
out
or
xor
dec
out
inc
rol
xor
mov
xchg
shlb
int3
push
push
sbb
mov
xor
xorl
lea
xchg
xor
das
mov
sub
test
test
push
cld
push
inc
sub
out
push
andl
mov
fdivr
push
bound
and
adc
call
popa
test
xchg
pushf
aam
push
lea
push
dec
push
popa
adc
sub
mov
add
cmp
push
pop
out
loop
sbb
inc
dec
cmp
sub
xchg
xorb
fsubr
pop
inc
push
push
xor
mov
jae
add
loopne
dec
insb
or
dec
aad
dec
ficompl
frstor
les
dec
push
sbbl
sub
dec
xor
xor
push
int3
sbb
mov
in
xchg
xchg
mov
or
cmp
xor
pop
jp
test
call
dec
es
insb
ds
sbb
in
pop
dec
or
xchg
fimuls
inc
and
inc
loopne
mov
mov
or
inc
cmp
or
inc
insb
push
cmp
push
dec
inc
and
dec
xor
inc
clc
in
rorb
push
mov
xor
sbb
cld
loopne
or
notb
add
add
jle
cmc
pusha
dec
lret
rcrb
mov
dec
lods
mov
fldl
nop
inc
dec
dec
xor
dec
addb
bound
mov
mov
and
inc
inc
jp
cmp
or
dec
push
inc
aaa
or
or
jle
push
dec
add
or
mov
idivb
sub
push
or
pop
orb
cs
dec
inc
pop
adc
and
sub
xor
pusha
inc
xchg
mov
or
mov
in
jmp
push
ds
and
ret
and
fcoml
sub
inc
pop
bound
fstl
sbb
call
xor
outsb
insb
inc
dec
movsl
xor
mov
push
xorl
add
sar
test
xor
pusha
xchg
pop
dec
sub
dec
pushf
dec
inc
xchg
xchg
jo
call
dec
xchg
sub
pop
mov
test
lock
dec
push
loop
inc
mov
mov
inc
mov
jb
movsl
push
sbb
dec
sahf
cmp
xor
dec
and
push
push
fdivs
or
jbe
cmp
inc
loop
xor
dec
push
pusha
inc
push
xor
daa
lcall
addb
and
cmp
out
dec
adc
dec
bound
test
lret
movsl
xor
mov
xchg
out
xor
dec
mov
les
test
mov
nop
orb
inc
dec
push
or
mov
or
xchg
cs
rcl
xchg
sub
hlt
mov
push
adc
rolb
es
mov
xor
stos
sub
faddl
add
insb
es
mov
xor
dec
lret
push
ljmp
push
sub
and
and
mov
mov
and
cmp
mov
pop
test
cmp
push
pop
add
adcb
mov
pop
rcl
lods
ret
loopne
cmp
inc
add
leave
mov
xor
dec
mov
inc
mov
dec
sub
lret
inc
or
add
dec
sub
shlb
inc
inc
pop
pusha
push
jl
les
mov
fmull
in
xor
in
push
mov
cwtl
or
xor
rcl
push
lods
mov
inc
mov
or
dec
jo
inc
jae
pop
and
and
dec
lcall
xchg
dec
dec
in
in
or
sbb
and
mov
add
push
ret
fsubrs
xor
nop
add
sub
pop
push
push
enter
push
xchg
adc
rcrb
enter
sbb
test
mov
lock
push
push
push
addl
rorb
sbb
xor
and
je
pop
xchg
push
ds
and
adc
and
loop
movsl
int
add
aaa
dec
sub
dec
andb
mov
and
sub
pop
push
add
jle
or
cmp
mov
xor
int3
les
jo
cwtl
add
mov
enter
nop
sbb
sub
add
or
adc
xor
dec
push
xchg
xchg
xor
mov
subb
inc
push
or
pop
push
es
jb
test
or
push
xor
loop
xor
loop
ret
and
adc
push
cmpsb
push
cmp
fwait
in
call
adcb
push
mov
xor
push
push
call
xor
dec
incb
xor
push
sbb
xorb
inc
enter
stos
shlb
clc
xchg
mov
jo
sbb
mov
rorl
dec
sbb
adc
popa
push
test
loop
jb
sub
dec
xor
mov
inc
push
sub
stos
shlb
fidivl
in
in
push
sbbl
push
decb
dec
adc
push
nop
enter
test
inc
lret
push
decb
fiadds
dec
insb
xor
push
mov
and
push
call
int3
inc
test
push
pop
cmp
add
push
add
int3
movsl
and
addb
cmp
inc
test
and
loope
nop
inc
sub
push
adc
mov
insl
pop
push
test
inc
push
outsb
lcall
ficomps
adcb
test
push
jle
pusha
adc
mov
xchg
inc
sub
or
pop
push
push
xorl
xchg
shrb
test
out
or
popa
dec
sbb
int3
test
add
mov
cltd
sbb
sahf
outsb
pop
clc
xor
sbb
adc
sub
inc
adcb
xor
mov
mov
xor
cmp
cmpsb
ds
cmp
gs
mov
int3
push
in
jp
push
lret
test
mov
dec
mov
add
mov
aam
xor
dec
pop
inc
pop
sbb
cmp
pop
and
and
xor
dec
inc
dec
inc
push
pusha
xor
push
pop
les
push
test
js
mov
jb
int3
push
scas
adc
dec
popa
push
adc
fdiv
cld
push
es
daa
pop
push
ds
or
push
push
mov
xor
add
test
jle
inc
ret
aam
adc
dec
mov
and
int3
lods
inc
xor
and
sub
mov
push
add
mov
sahf
pop
mov
or
shll
rcr
push
inc
fildl
push
rclb
sbb
test
rcll
inc
int3
lods
inc
cmp
push
adc
dec
faddl
jbe
out
ret
sub
cld
cmp
dec
lret
int
push
repnz
dec
push
dec
and
test
hlt
insb
dec
dec
mov
inc
testb
lods
insb
sub
mov
int3
rcrb
adc
xchg
fisubl
add
xchg
push
rolb
lods
or
repnz
movsw
push
stos
and
dec
adc
push
xchg
jns
xor
push
pop
aaa
inc
dec
add
test
push
nop
shrb
xor
mov
sub
xor
xor
jl
js
xchg
inc
dec
push
xchg
into
or
push
inc
mov
dec
adc
jl
push
add
call
stos
insb
dec
add
or
and
cwtl
sub
xchg
lcall
push
test
enter
mov
push
adc
xor
push
rcrl
mulb
add
rclb
js
push
inc
stos
add
gs
jl
sbb
push
es
movsb
xor
and
dec
stos
cli
stos
ss
push
jo
nop
ret
add
test
in
aaa
adcl
mov
push
enter
adc
sbb
pusha
dec
adc
push
push
mov
mov
test
xor
xor
jo
lea
or
push
xor
add
or
xchg
call
lds
add
mov
es
add
xchg
xor
movsb
adc
clc
lock
aam
xchg
push
jp
xor
xor
lods
adc
orb
pop
dec
add
cmp
dec
dec
in
mov
pushf
inc
movsb
add
out
xor
ss
nop
call
xor
scas
stos
add
pushf
in
sbb
jp
mov
test
mov
test
fdivl
xor
cmp
stos
adc
xchg
dec
xchg
pop
push
aaa
or
mov
cmp
dec
xor
or
sub
movsl
xchg
jb
xor
mov
cmp
ss
dec
dec
push
fidivrs
or
cmp
or
cwtl
cmp
call
es
cmp
subl
lock
pop
jle
imul
cwtl
inc
mov
cli
data16
add
and
mov
push
loopne
loop
add
or
xchg
les
push
jle
andl
adc
push
push
jb
shll
and
rcrb
ljmp
test
xor
xor
push
inc
nop
pop
dec
pusha
mov
adcb
and
jb
dec
dec
int3
push
test
imul
pusha
or
or
mov
adc
stos
mov
outsb
push
or
and
xchg
dec
dec
push
push
mov
sbb
or
out
in
fs
mov
inc
add
lods
pusha
or
lcall
push
add
fmuls
adc
jbe
mov
xor
pusha
adc
adcb
ret
or
inc
cs
movb
lret
add
dec
push
mov
inc
je
add
adc
xor
es
sub
xlat
sub
push
push
idiv
add
mov
clc
and
mov
pop
inc
fcomp
mov
inc
bound
outsb
push
push
bound
sub
loope
mov
or
sbb
or
inc
cmp
orl
hlt
enter
or
and
cmp
and
cmp
int3
dec
cmp
loop
dec
test
jle
pusha
or
lahf
xor
rcll
dec
xor
add
mov
shl
test
xchg
add
dec
xor
sbb
and
mov
dec
rolb
and
mov
sbb
push
enter
mov
mov
push
and
jp
cmc
and
push
sbbb
nop
adc
cmp
subb
enter
ss
or
cmp
mov
or
or
sub
andl
jbe
out
lcall
add
shll
jo
aam
push
mov
cwtl
fmul
inc
test
lea
les
sub
push
inc
sbb
mov
les
loop
fs
inc
orb
cmp
inc
xchg
or
xor
cmpb
insb
lods
and
mov
dec
repnz
push
sbb
push
mov
push
test
jo
addb
fimull
push
test
dec
push
loopne
push
cltd
inc
mov
cmp
dec
es
sbb
add
xchg
dec
inc
mov
sbb
xchg
inc
fdivrl
shll
pop
dec
sub
inc
mov
rcrb
pop
bts
cmp
adc
dec
les
or
cwtl
shlb
cmp
or
aaa
sub
movsb
dec
inc
mov
push
xor
inc
and
push
push
fwait
mov
push
adc
and
add
cmp
cs
xchg
or
dec
cs
sub
pop
mov
ds
or
stos
mov
hlt
dec
cli
jo
sbb
pushf
inc
xor
push
cld
fdivs
push
add
pop
cmp
mov
add
outsb
push
cltd
dec
add
push
jl
and
test
ss
xchg
pop
test
pop
dec
push
bound
fimull
push
pop
push
fiaddl
xchg
fldenv
pop
mov
xchg
sbb
xor
cli
add
dec
cs
or
cld
out
mov
data16
push
push
inc
pop
and
mov
test
xchg
js
addl
in
mov
inc
dec
test
and
icebp
stos
dec
je
sub
add
mov
lret
inc
aam
sub
test
cltd
or
inc
cmpsb
or
inc
inc
dec
mov
or
push
cwtl
out
add
int
jl
aaa
insb
inc
xor
dec
fs
je
cmp
test
push
sbb
push
mov
dec
push
xor
inc
cmp
inc
add
or
xchg
adc
jo
mov
pushf
shlb
push
outsb
cwtl
adc
stos
inc
xchg
dec
mov
push
mov
xchg
dec
es
sub
inc
push
xchg
mov
js
sbb
js
orl
pop
loop
cmp
adc
sbb
dec
pop
call
adc
push
pushf
or
add
inc
pop
push
push
pusha
out
sahf
jl
cmp
or
inc
push
mov
mov
roll
adc
dec
push
rcr
inc
pop
repnz
fdivrl
data16
inc
and
mov
cmp
pusha
xor
enter
ljmp
add
mov
xchg
inc
jle
xor
xor
pop
adcb
int3
aaa
call
dec
add
push
add
es
mov
pop
xchg
add
push
enter
ret
mov
dec
test
push
push
cmp
insl
add
xchg
mov
ret
fisubrs
lcall
lret
fs
call
popa
jb
into
jle
shlb
movsl
or
je
rorb
dec
push
mov
data16
xor
imul
push
dec
test
or
push
cli
add
add
pop
jb
adcb
or
lret
popf
push
push
push
dec
xchg
cltd
xor
xor
pop
or
dec
and
enter
xor
or
add
pushf
les
adc
mov
jo
inc
inc
pop
add
mov
sbbl
or
push
mov
das
mov
inc
stos
pop
dec
pushf
inc
repnz
xchg
add
orb
rolb
pusha
addb
inc
jo
inc
add
add
cwtl
fisubrl
sbb
adc
cmp
xor
sub
repnz
fsubrs
cmc
xor
dec
pop
inc
pop
mov
sub
dec
cs
rolb
out
sub
pop
dec
loopne
insb
mov
push
dec
addl
mulb
xchg
adc
pop
and
andb
dec
shlb
jbe
add
jle
dec
shll
out
ss
xchg
pop
xor
enter
jb
sub
dec
xor
test
push
dec
inc
fsubp
leave
imul
push
mov
xor
in
lret
pop
push
dec
mov
cmp
out
addb
stos
pop
xor
xor
push
mov
sub
shr
test
test
aaa
pop
cltd
or
fdivrs
mov
add
sbb
adc
in
nop
fs
dec
test
add
cs
nop
fnstenv
lcall
insb
cmp
xchg
xor
cmp
mov
es
xor
lods
sbb
xor
xchg
dec
adc
scas
loope
mov
pop
mov
dec
data16
rolb
and
and
dec
sub
push
cwtl
shlb
je
es
popa
push
cmp
or
cld
xchg
adc
lcall
sub
xor
sbb
adc
inc
inc
loopne
sub
dec
inc
xchg
pop
inc
add
ss
and
gs
fimuls
xchg
mov
adcb
pushf
sahf
shll
mov
pop
cmp
gs
lcall
mov
push
leave
mov
xor
add
jp
shrb
cmpsl
fs
inc
push
sbb
in
dec
dec
mov
pop
insb
xchg
cwtl
mov
ror
ds
inc
pop
vpmovsxbw
enter
xchg
push
push
fs
cmp
addb
out
dec
into
or
subl
sub
stos
shll
out
push
adc
push
add
inc
fiadds
nop
cmp
dec
and
jb
push
out
adc
inc
add
push
lock
popa
bound
push
mov
lret
lret
dec
fcoml
dec
mov
inc
cmp
inc
cmp
dec
sarb
dec
mov
movsb
dec
dec
data16
dec
sarl
les
xor
pushf
enter
dec
or
enter
add
dec
push
pushf
mov
dec
sub
loop
and
inc
fiadds
mov
pusha
fs
adc
lea
lcall
push
sbbb
adcl
push
sahf
hlt
data16
ss
push
out
adc
rolb
pusha
jb
xor
andb
int3
mov
jl
adc
enter
fs
adcb
ret
mov
adc
xor
jle
cwtl
loope
adc
or
enter
mov
dec
xchg
aad
push
mov
jo
dec
es
movsb
fdivs
and
add
mov
xchg
gs
sarb
cmp
jbe
jo
imul
inc
aaa
mov
push
test
cmpsl
inc
push
xorb
and
push
jp
push
sub
pop
dec
xor
cld
test
adc
mov
sbb
cmp
cmp
pushf
clc
push
sbbl
rolb
icebp
inc
pop
inc
push
and
pusha
mov
dec
push
sbb
mov
pop
ficoml
xchg
sbb
dec
pushf
ret
push
inc
add
inc
mov
and
push
inc
dec
sahf
or
adc
mov
sub
loop
or
pop
ss
adc
push
dec
daa
shrl
push
inc
mov
xor
and
out
add
out
sbb
mov
or
mov
sub
inc
push
pop
push
test
pusha
lods
xchg
inc
pushf
push
cltd
test
dec
and
and
data16
and
mov
out
mov
dec
adc
and
xchg
test
sbb
pop
mov
dec
adc
xchg
push
push
shll
dec
insb
or
mov
jle
and
sbb
pop
xchg
gs
cmp
aam
out
adc
fs
adcb
adc
xor
ret
add
xchg
lods
cltd
add
jne
cmpsb
fcoml
push
es
je
dec
sub
xchg
push
push
enter
xchg
pop
adc
xchg
mov
push
dec
adc
and
mov
dec
ss
dec
mov
push
enter
ss
pushf
dec
repnz
push
xor
leave
sbb
faddl
mov
push
fidivrs
inc
push
shrl
insb
stos
cmp
popa
mov
mov
push
es
jb
adc
xchg
cmp
loop
cmp
test
test
verr
push
nop
sub
dec
inc
dec
pop
cmp
inc
dec
mov
push
and
xchg
push
adc
inc
sub
xor
addl
mov
sbb
xchg
sbb
sbb
cs
ss
or
dec
rclb
or
sbb
loop
loop
shl
ljmp
outsb
je
push
in
push
mov
les
sbb
push
addb
push
pop
cli
out
ds
dec
add
mov
cmp
popa
sub
outsb
ret
or
dec
mov
je
sub
lret
push
sbb
lret
scas
inc
sub
xchg
inc
xor
inc
adc
xor
mov
xchg
test
adc
add
pop
mov
adc
jbe
mov
push
or
xor
mov
or
fs
mov
lea
adc
dec
inc
orb
mov
add
dec
mov
mov
or
andb
movsb
xchg
adcb
and
cmp
addl
aaa
push
lcall
xor
clc
xor
es
in
ret
pop
fcompl
pusha
int
push
xor
push
push
cmp
inc
add
xchg
mov
outsb
cmc
and
push
dec
push
and
test
pop
dec
xorl
rorb
sbb
adc
mov
pop
test
add
call
lcall
mov
and
mov
sbb
add
push
add
mov
and
cltd
sbb
push
enter
xor
push
cli
shl
fwait
into
loop
out
dec
or
pop
gs
mov
inc
ss
add
dec
push
or
or
xor
aam
lret
push
add
fdivl
mov
adc
sbbb
and
lcall
je
enter
dec
dec
into
sub
and
jle
sub
cmp
inc
cmp
pop
test
xchg
mov
xchg
les
fisubl
movsl
loope
ss
je
jmp
movsb
push
sahf
cs
xor
add
xor
fdivs
push
dec
mov
xor
lret
or
inc
push
out
fs
push
mov
nop
xchg
rcll
outsb
xor
sahf
and
and
cmp
insl
add
stos
out
and
out
push
and
pusha
outsb
lret
jl
dec
xchg
movsb
xchg
dec
and
pushf
sub
mov
or
push
inc
jo
fs
rcrl
pop
mov
push
pop
xchg
cmp
fsubl
jmp
inc
inc
sub
pusha
xor
adc
in
dec
popa
test
pop
xor
dec
and
pop
dec
int3
sbb
xchg
out
sub
cmp
ret
inc
xchg
cli
mov
mov
fadds
xchg
lret
test
in
push
cmp
decb
ss
mov
mov
sbb
stos
sub
push
js
mov
lret
dec
push
add
mov
push
sahf
cmp
push
and
sub
imul
dec
and
js
push
or
or
clc
sub
inc
pop
lods
int3
test
pop
mov
mov
or
rorl
mov
inc
or
mov
inc
push
ret
int3
cmp
fs
and
dec
push
sarb
bt
xchg
inc
in
inc
outsb
enter
push
adc
data16
pop
sbb
sub
sbbb
in
or
nop
enter
orb
and
shlb
dec
xchg
push
xchg
shlb
fidivrs
test
dec
fs
nop
push
mov
loop
xor
sbb
sub
cs
jbe
rorl
aam
sub
add
xchg
rolb
add
lods
test
pop
inc
mov
mov
dec
inc
dec
and
notb
cmpsb
test
push
or
xor
inc
and
push
mov
or
test
or
enter
push
or
cld
in
mov
add
dec
xchg
aam
je
push
add
adc
ret
push
or
push
push
cld
xor
test
xchg
xor
enter
ret
dec
push
inc
pop
push
add
sub
xor
mov
xchg
sbb
add
xchg
leave
lods
testb
fisttpll
xor
push
sbb
mov
addl
je
lods
adc
and
inc
mov
push
dec
hlt
xchg
lods
pusha
or
es
add
sub
mov
mov
jb
fs
mov
clc
inc
xor
dec
sbb
nop
mov
inc
pop
mov
cli
push
aaa
mov
inc
add
inc
push
or
pusha
pop
xor
orl
call
xor
push
xor
add
adc
sub
push
lea
orl
enter
lods
pushw
sbb
aam
xor
cmp
xchg
bound
out
lods
dec
add
sahf
inc
gs
push
adc
pop
test
dec
lcall
add
add
dec
push
movsl
mov
add
loop
aam
test
sbb
mov
inc
in
jbe
pop
and
jno
loopne
ss
cmp
and
add
cmpsb
or
dec
mov
addl
adc
mov
or
sub
pop
or
inc
add
shrb
sbb
test
push
dec
sbb
xor
inc
sub
loopne
inc
jo
aad
push
dec
je
push
inc
xor
loopne
ret
cmp
pushf
cwtl
ficoms
xchg
mov
push
icebp
jp
and
add
dec
dec
push
pop
inc
xor
cs
add
jle
cs
adc
dec
mov
dec
or
xor
dec
popa
xchg
call
mov
outsb
sbb
sbb
or
pusha
jo
xorb
adc
cmp
push
add
jo
dec
dec
ror
movsl
xor
mov
push
sub
push
push
xor
sub
adc
sbb
or
or
sub
add
xor
mov
cli
sbb
loopne
jle
xor
inc
sbb
xchg
sub
add
dec
lret
orl
js
mov
push
cmp
xchg
mov
sub
sub
nop
cmp
popf
xchg
push
inc
in
add
inc
cmpsb
xor
or
int3
push
test
add
shlb
sbb
test
inc
and
pop
push
orl
testb
xchg
jbe
mov
pop
clc
leave
popa
inc
lret
lock
or
popa
sub
mov
xor
mov
sahf
notb
cwtl
mov
sbb
xchg
sbb
push
sahf
or
mov
sbb
dec
or
sbb
cmpsl
aam
pop
fs
in
adc
dec
fsubs
add
adc
xchg
cmp
mov
fidivs
xor
fwait
sub
ss
sbb
inc
inc
es
mov
or
jo
mov
xorb
scas
cmp
inc
pop
push
xor
add
in
cltd
mov
push
subb
adc
les
pop
les
xor
xor
sahf
inc
mov
in
and
xor
stos
nop
inc
call
mov
xchg
addb
cmp
inc
pop
add
int3
faddl
ds
aam
lret
add
test
in
rorb
pop
push
dec
jle
adc
xchg
mov
xor
sahf
or
xchg
cmp
xchg
call
shlb
call
dec
xor
lcall
cmp
add
xchg
or
xor
or
xor
push
inc
xor
mov
push
insl
mov
cmp
or
in
add
enter
and
dec
dec
push
insb
divb
lret
inc
sbb
pop
adc
lret
inc
xchg
clc
push
cmp
mov
add
or
fcoms
lock
jle
and
pusha
xchg
cmpsb
push
or
push
outsb
loopne
sar
mov
sub
cmp
inc
push
xor
xorl
xor
add
xor
insb
mov
mov
push
stos
out
push
mov
xor
push
or
jo
jb
data16
push
mov
les
dec
jmp
repnz
inc
sahf
loop
in
add
and
or
les
in
orb
ss
cmp
mov
push
xchg
subb
dec
or
ficomps
pop
ds
cmp
orb
inc
and
or
js
push
xchg
mov
ror
mov
xor
xor
das
xor
push
or
sub
cmp
or
adc
adc
pusha
xor
or
add
push
adcl
dec
and
test
dec
dec
dec
mov
adc
popf
or
or
test
inc
jbe
rolb
sbb
xchg
mov
xchg
or
clc
out
fs
and
xor
and
inc
add
ficoml
cmp
push
dec
add
mov
sub
int3
pop
test
gs
mov
push
cld
cmp
xchg
movsb
es
aaa
adc
mov
addb
push
filds
add
test
mov
pop
ret
jbe
lods
or
push
push
jle
outsb
jl
adc
cmpl
and
imul
mov
js
xor
adc
or
and
bound
ficoml
ror
sahf
ds
inc
lods
into
push
xor
shlb
fidivs
gs
mov
inc
dec
push
int3
mov
repnz
ret
shrb
pop
repnz
sbb
subb
xchg
adcb
push
fs
or
or
cmp
jnp
aam
nop
pop
pop
addb
pusha
adc
adc
lock
lcall
subb
inc
push
pop
clc
dec
adc
mov
mov
hlt
xchg
adc
sbb
or
es
add
lret
mov
xor
stos
sbb
call
add
dec
mov
test
dec
repnz
adc
xchg
call
dec
ficomps
mov
push
fiadds
push
xchg
or
mov
xor
cmp
xor
push
push
or
sbbb
mov
inc
mov
test
dec
cmp
add
inc
hlt
cltd
dec
push
xchg
cwtl
xor
movsb
and
jp
shll
aam
xchg
add
fisubrl
sbb
sub
jle,pt
nop
enter
cwtl
push
add
push
leave
sbb
and
cmp
dec
dec
mov
or
jo
cmp
mov
add
dec
dec
test
xchg
push
cmp
or
inc
inc
add
mov
inc
les
loope
xor
dec
cmp
mov
dec
sub
cmp
xchg
mov
ss
add
inc
push
xchg
cmc
xchg
call
sub
lods
lds
add
push
mov
push
shll
xor
adc
xchg
dec
mov
dec
cmpb
dec
and
arpl
test
dec
push
test
fdivl
xchg
xor
test
and
push
xor
adc
ljmp
dec
inc
inc
rolb
rol
push
push
mov
fidivs
jo
sub
and
dec
dec
cmpsb
dec
inc
lods
pushf
mov
les
sub
or
cmpsl
or
mov
loop
aaa
pop
add
push
cli
sub
test
push
push
fs
or
dec
jmp
stos
mov
xor
cwtl
mov
pop
sahf
sub
inc
add
and
push
xchg
popa
xchg
and
sbb
int3
push
scas
push
push
or
xorb
adc
xor
add
xchg
push
push
mov
push
add
dec
lods
mov
add
cs
dec
out
test
inc
dec
mov
cwtl
push
cwtl
push
jmp
cs
mov
or
dec
lret
jge
xor
sub
xchg
adc
js
push
adcl
and
enter
dec
nop
inc
fsubrs
inc
cmp
push
inc
sbbb
push
pop
test
xchg
dec
or
mov
push
cmp
in
sub
imul
inc
mov
inc
adc
add
nop
fidivrs
inc
lock
orl
stos
mov
and
sub
data16
xchg
outsb
push
js,pt
rcrb
cs
dec
int3
sbb
orb
loop
inc
adc
jnp
pop
mov
pop
fs
es
pop
or
dec
mov
add
fidivrs
addl
pop
je
add
pusha
push
inc
fiadds
push
test
cmpsb
push
inc
fs
push
mov
sub
xor
lods
stos
jo
mov
pop
dec
xor
sub
add
call
movsl
xor
ss
cmp
aam
cwtl
dec
cwtl
sahf
lea
lret
jle
aaa
sub
push
xchg
or
popa
adc
adc
sub
sbb
xor
or
pop
sub
movsb
xor
in
in
sbb
repnz
call
push
repnz
xchg
mov
push
cmp
test
or
dec
add
and
or
mov
dec
jle
push
cmp
data16
push
test
xor
pop
push
mov
sbb
insb
sbb
int3
popa
xorb
and
and
mov
xor
sub
push
and
cmp
sub
push
nop
shlb
xor
inc
xchg
dec
dec
cwtl
test
ds
ret
add
cmpsb
push
xor
dec
out
pop
cli
ficoms
add
push
pop
or
push
push
pop
adc
push
sbb
ret
je
add
sub
sub
xchg
out
call
clc
hlt
or
xchg
adc
xor
or
mov
mov
push
mov
mov
xchg
inc
or
xor
push
pop
call
ret
enter
sub
lret
mov
xor
dec
repnz
xor
xor
movsb
xor
ficompl
dec
xor
rolb
mov
mov
ret
cs
xchg
pop
jo
inc
cmp
push
adc
ret
mov
jp
in
leave
sbb
mov
push
fdivr
push
inc
mov
xor
dec
dec
mov
add
add
jo
clc
cli
and
add
inc
inc
push
inc
je
decb
push
mov
jbe
dec
xor
cs
sahf
pop
add
xchg
insb
inc
push
or
pop
js
out
xchg
adcb
push
pop
subb
add
xor
mov
sub
data16
dec
test
je
mov
push
mov
loop
mov
or
or
add
addl
cmp
or
nop
inc
nop
jle
push
shlb
dec
ljmp
out
inc
dec
pusha
xor
lret
xchg
xchg
loopne
pop
or
or
mov
cwtl
jle
bound
dec
and
xchg
jmp
dec
popa
add
push
loopne
mov
push
filds
mov
inc
xor
mov
push
adc
sub
inc
push
add
xor
xor
xor
or
cltd
xchg
insb
inc
adc
int3
gs
jo
add
loopne
push
add
cld
pop
mov
dec
dec
or
xchg
sbb
mov
je
xor
pop
sbb
inc
test
mov
add
adc
sbb
sbb
sub
push
push
inc
push
aaa
mov
sub
xchg
adc
hlt
push
clc
lret
or
shll
in
sub
mov
sub
xor
push
mov
xchg
test
dec
or
inc
pop
in
jb
add
mov
xor
fisubrs
fiaddl
inc
lea
xchg
repnz
push
xchg
xor
push
mov
shl
pop
pop
shr
mov
inc
mov
popa
jbe
jle
dec
xor
jo
loopne
repnz
push
xchg
and
lret
out
adc
xor
aaa
js
add
add
mov
inc
add
rorb
fdivs
jbe
mov
or
and
jne
inc
inc
jl
int3
aad
or
mov
xor
add
xor
cmp
cmp
pop
add
aaa
inc
adc
push
nop
or
dec
test
pop
fdivrl
or
mov
mov
xor
push
rolb
or
xchg
repnz
add
inc
and
fcoml
cmp
fdivrs
push
inc
es
cmp
mov
mov
adc
sbb
pop
mov
mov
call
aad
or
call
clc
inc
inc
cmp
mov
int3
inc
rolb
mov
test
popa
add
hlt
xor
sub
push
jmp
insl
mov
dec
lock
inc
aad
sub
ds
xchg
sbb
add
pop
enter
push
push
or
xchg
dec
sbb
bound
sbb
push
push
mov
test
mov
aam
add
xor
add
lcall
or
sub
test
xor
mov
test
shrb
loopne
push
movb
fimuls
pop
cmp
sbb
pop
pop
dec
xor
orb
jle
push
push
out
mov
mov
aam
sub
test
add
adc
xor
adc
pop
add
push
inc
xor
add
mov
lds
sub
movsl
lock
xor
and
dec
andb
and
cld
sub
jb
or
addb
mov
push
inc
xor
or
push
push
add
ss
sub
push
jo
add
cmp
dec
add
cmp
je
jo
inc
fsts
mov
sahf
pop
mov
xor
sbb
mov
xor
ds
je
mov
add
jle
pop
mov
push
jl
dec
ret
ljmp
mov
sarb
jo
add
add
mov
xor
js
call
mov
ss
fiaddl
dec
jo
inc
sub
pop
sbb
inc
in
es
xor
mov
pop
or
dec
enter
cltd
ret
adc
out
add
xor
test
inc
push
inc
enter
xchg
add
or
or
push
xor
or
mov
pop
clc
cmp
mov
push
int3
push
inc
or
push
jae
mov
inc
mov
lods
pop
cmp
lret
inc
sbb
fiadds
lcall
in
loopne
inc
xor
pop
pop
mov
pusha
sbb
and
mov
xor
push
stos
cwtl
xor
out
call
push
cwtl
cmp
inc
pusha
add
bound
and
or
mov
push
xor
inc
in
mov
ds
mov
sub
xchg
lret
inc
add
mov
mov
add
imul
or
inc
and
xor
push
dec
dec
fmull
mov
inc
outsb
push
dec
pop
adc
xor
pop
sub
je
mov
jo
je
xor
cmp
sbb
jae
int3
inc
enter
pop
mov
adc
cli
mov
pop
pop
clc
fisubs
add
jo
and
mov
xchg
xor
or
movsb
mov
loopne
ds
int3
adc
pop
shl
push
dec
xor
test
gs
es
push
or
lods
sbb
sarb
sbb
mov
xor
inc
xor
add
adc
dec
sarb
mov
dec
jo
and
inc
xor
sahf
and
dec
mov
or
adc
ss
test
clc
mov
call
lret
cwtl
push
pushf
push
sahf
imul
cmpsb
out
cli
mov
dec
dec
dec
sbb
jp
push
fsubrl
sbb
mov
js
test
loop
inc
loop
push
dec
push
test
xchg
pop
test
arpl
pushf
fimull
dec
jo
mov
add
in
cmpb
or
inc
and
add
nop
adc
enter
adc
or
push
ss
push
sub
sub
cltd
dec
or
out
pop
inc
xor
inc
adc
ds
sub
pop
push
test
sbb
add
sbb
push
mov
xchg
cmp
inc
push
xor
faddl
daa
jo
stos
inc
mov
mov
inc
adc
orb
fdivrl
add
jo
bound
mov
and
pop
xchg
push
rolb
fs
mov
xor
push
fs
inc
add
bound
push
sub
xor
xchg
inc
sbb
mov
pop
test
mov
jno
dec
pop
sahf
imul
orb
in
mov
inc
fdivrl
dec
mov
adc
loopne
sbb
sahf
test
cwtl
sbb
inc
push
xchg
xchg
jo
mov
push
adcb
mov
pop
cmp
xchg
sbb
lock
pop
subb
push
or
cld
pop
aad
dec
adc
mov
cltd
xorl
loop
insb
xor
sbb
cwtl
dec
pop
add
xchg
push
lock
and
add
push
xor
movb
test
or
stos
or
push
dec
add
add
xor
mov
bound
call
pop
pop
cmp
mov
popa
mov
and
and
movsb
cmp
cmp
enter
dec
or
pop
xor
lods
pushf
in
clc
pop
and
lcall
xchg
cmp
test
and
insb
xor
lock
xor
xor
int3
inc
or
dec
enter
lret
rorb
inc
and
adc
in
xchg
sub
adc
cmp
or
mov
rcrl
pop
rorl
inc
push
xchg
ret
out
subl
int3
outsb
jle
inc
push
dec
dec
mov
add
pusha
xor
stos
sub
xor
pop
sub
mov
out
push
jle
xchg
sbb
sub
add
sub
movsb
sub
inc
mov
xor
push
add
push
add
inc
sub
add
add
cmp
xchg
inc
movsl
inc
push
adc
sbb
inc
jo
adc
mov
out
adc
cmp
inc
push
add
or
fs
rorb
jo
into
add
push
dec
xor
dec
mov
mov
sbbl
popa
call
les
cmpsb
or
add
xor
push
es
fdivl
mov
adc
popa
mov
es
add
sub
mov
pusha
sbb
mov
ret
data16
xor
fs
fdivrl
pop
xor
sub
sub
inc
leave
movsb
pop
add
mov
sbb
sahf
dec
movsb
inc
test
inc
sub
dec
dec
mov
push
adcb
inc
les
arpl
popa
push
dec
test
inc
add
dec
push
jae
pusha
xor
lock
jo
dec
incb
ficoms
rol
dec
dec
cmp
loopne
or
mov
dec
adc
popa
push
pop
bound
pusha
add
test
enter
sbb
pushf
adc
xor
xchg
jp
dec
dec
fimuls
push
push
add
test
inc
ss
sbb
mov
xor
mov
ds
push
dec
xchg
push
sbb
dec
or
pop
pop
inc
add
add
inc
mov
xor
sub
fs
xor
loopne
lcall
dec
cmp
fmulp
mov
cmpsb
inc
pusha
outsb
inc
add
mov
inc
dec
cwtl
hlt
add
and
xchg
inc
cmp
inc
and
dec
dec
sbb
pop
push
mov
lcall
sbb
xor
push
pop
push
shll
cmp
dec
test
push
mov
inc
and
xor
sarb
rorb
jp
mov
adc
clc
dec
movsl
xchg
or
cmp
ljmp
xchg
xor
inc
push
cmp
push
and
mov
inc
or
adcl
mov
push
or
cmp
mov
nop
adcb
inc
shl
dec
pop
sub
or
or
or
arpl
xor
and
push
out
push
in
add
mov
sub
push
xchg
mov
add
push
lret
dec
dec
sbb
xor
adc
mov
rclb
sub
repnz
pop
dec
lea
sub
sub
cwtl
push
pop
add
lret
and
adc
mov
loop
inc
cmp
and
inc
in
dec
xchg
inc
or
xchg
sbb
je
or
lret
aam
mov
add
xchg
xchg
mov
test
sbb
pop
fisubs
test
pop
int3
rolb
ss
dec
adc
cmpsb
pop
and
mov
rcrb
testb
inc
jl
xor
and
xchg
ljmp
nop
insb
push
xor
xor
jmp
pop
fldt
xchg
push
aaa
pop
and
inc
test
adc
push
or
ss
mov
or
fadds
or
nop
sbbb
push
add
dec
inc
adc
pop
push
cltd
or
sahf
jp
sbb
dec
es
sub
cwtl
fmull
jp
xor
fimuls
push
sbb
cmp
shrb
addl
enter
dec
decb
sub
push
inc
xor
inc
lret
test
ss
out
or
or
mov
rorb
call
ds
cli
add
pusha
pushf
or
xchg
mov
or
add
add
cmp
adc
xor
add
jle
lods
dec
and
lret
xchg
xchg
push
adc
mov
inc
pop
sub
data16
dec
sbb
mov
or
pop
out
or
pop
and
mov
mov
sahf
lock
mov
xchg
dec
clc
repnz
test
aam
repnz
or
push
inc
test
xor
aaa
jmp
add
je
push
dec
add
je
outsb
popa
push
int3
inc
dec
test
mov
in
add
xor
fiadds
and
sub
cwtl
incb
andl
rol
gs
aam
cli
dec
rorb
nop
inc
ljmp
jle
push
dec
cmpsb
pop
sub
shl
push
mov
inc
sub
xchg
xor
xor
ss
or
shll
push
pop
jbe
and
test
pop
mov
inc
sbb
mov
fs
adc
cwtl
mov
push
mov
inc
lock
jle
pop
add
xor
bound
push
and
aaa
sub
fwait
rolb
dec
ss
xor
hlt
sahf
push
les
add
or
or
or
push
mov
adc
pushf
cmp
xor
push
mov
nop
inc
xchg
leave
or
rclb
mov
push
cmpsb
inc
popa
push
inc
ds
inc
push
inc
add
gs
ficompl
test
cwtl
into
pop
fidivrs
cwtl
sarb
pop
add
mov
loopne
and
push
inc
insb
sbb
adc
fcom
mov
and
pop
add
rcrl
ds
push
xor
ret
push
add
cmp
cld
rolb
or
xor
lock
repnz
add
sub
push
push
xchg
add
and
fs
push
rcrb
xchg
adc
cld
push
bnd
andl
pop
pusha
in
sbb
dec
push
sub
rorb
dec
xor
push
or
dec
int3
dec
cwtl
fidivl
ljmp
pusha
xor
andb
andb
push
add
push
cmp
dec
add
ret
sub
add
or
cmp
shrb
rcl
adc
pop
dec
loopne
inc
and
pop
inc
adc
cmpsb
mov
cmpsb
mov
faddl
xchg
shrl
push
push
or
test
and
dec
add
push
lret
aam
inc
xor
dec
jbe
sahf
add
popa
add
nop
sbb
scas
sbbb
gs
out
add
cmp
shrl
jge
sbb
movsb
sub
nop
inc
add
sub
inc
es
dec
test
sbbl
sbb
test
aad
mov
dec
fiadds
xor
add
push
bound
push
xchg
push
and
and
xor
sbb
pop
cmp
sbb
rclb
or
adc
push
xorb
sub
mov
push
push
xchg
dec
mov
lret
or
xor
sbb
aam
and
add
mov
insb
xchg
cmp
mov
mov
in
mov
ljmp
mov
xchg
xchg
es
xor
push
pop
or
sbb
xchg
sub
add
and
insb
shlb
jb
pop
es
popa
xorl
sub
adc
push
add
push
aad
xor
test
xchg
mov
xor
mov
push
add
push
or
ret
inc
dec
push
adc
in
enter
push
lret
call
xchg
leave
inc
mov
inc
mov
jl
push
jecxz
jo
inc
mov
add
inc
xchg
dec
mov
ret
test
push
cmp
ds
les
adc
mov
mov
jo
aam
push
testb
ret
add
dec
aaa
push
dec
cmp
sbb
xor
addb
addb
xor
adc
adc
push
jo
add
xor
or
or
xor
dec
mov
mov
mov
xor
test
enter
push
cmp
and
adc
xor
mov
mov
cmp
or
fidivs
stos
add
sbb
cmp
pop
cmpsb
cmp
add
mov
pop
sub
mov
mov
dec
inc
add
and
add
add
add
inc
inc
sbb
lcall
add
sahf
das
rolb
sbb
and
mov
sbb
add
add
incb
xchg
das
pop
es
jg
clc
aas
push
pop
lods
cmp
iret
jmp
rol
add
mov
mov
push
aas
jg
dec
push
xor
addb
cmp
add
test
or
int
push
mov
dec
add
xor
mov
add
jg
or
out
push
out
clc
cmp
data16
out
cmp
fldcw
rolb
loopne
lock
cs
push
imul
aas
pop
fdivs
pop
xchg
addr16
lock
fstps
xor
pop
std
cmp
js
addb
mov
inc
add
repz
data16
jg
adcb
add
jo
sbb
mov
pop
incb
lock
add
pushl
or
push
repnz
out
add
nopl
es
jns
aaa
add
add
nopl
into
push
add
jl
jnp
add
and
cmp
sbb
das
aas
dec
add
outsb
daa
add
ss
out
pop
std
clc
lock
aas
rcrl
insb
rcrb
dec
add
fstpt
pop
outsl
clc
popl
cmp
pop
adc
add
loopne
pop
sbb
sub
addb
psadbw
into
cmp
jg
cmp
pop
or
adc
adc
out
aas
nopl
ds
cmp
sub
add
mov
pop
cmp
fmull
aad
cs
pop
popf
or
jno
add
cs
ret
sub
jle
fwait
int
sbb
push
sub
inc
add
mov
sahf
in
inc
addl
pusha
xor
sbb
stos
ja
xor
push
sbb
js
push
inc
cmc
mov
fldcw
lock
push
outsl
ss
int
cmp
sbb
or
test
fildl
loope
xchg
or
pop
and
add
push
cltd
adc
ja
pop
add
rolb
and
add
or
add
xor
cmp
mov
cmp
xorl
mov
daa
sbb
cmp
scas
mov
aas
daa
and
out
pop
neg
xor
and
sahf
jnp
adc
cmp
clc
dec
push
dec
jnp
sahf
push
mov
push
push
jb
es
daa
cmp
daa
xchg
in
mov
sbb
sbb
fidivrs
inc
daa
out
cmp
aaa
mov
ja
push
into
jne
jne
clc
push
cmc
sbb
pop
push
or
cmp
cmpsl
lahf
adc
add
xor
cmp
inc
and
cmpl
xor
and
xor
lods
pop
daa
inc
push
movsl
jg
mov
daa
dec
sub
repz
xor
mov
daa
xor
dec
sub
clc
xor
iret
loope
pop
jbe
and
push
fnstsw
mov
push
int3
push
cmp
and
and
cmp
jmp
mov
push
dec
pop
push
cmp
fldenv
xor
push
xlat
repnz
jnp
lret
push
and
xor
push
or
fistl
mov
in
push
xbegin
sbb
andl
adc
lahf
jbe
decb
add
ja
testl
incb
or
dec
ljmp
dec
push
pop
xor
outsb
daa
inc
aad
sti
lods
insb
mov
pop
daa
enter
mov
out
in
sbb
jns
push
incb
mov
lahf
dec
clc
add
test
mov
daa
ja
sbb
push
repz
pushf
es
xor
sbb
dec
mov
xor
inc
arpl
jns
mov
inc
shll
xor
arpl
cmp
add
insb
lahf
cmp
inc
dec
pop
and
repz
fs
jnp
fistl
daa
push
lret
in
cmpl
mov
mov
daa
dec
lret
ljmp
inc
inc
es
daa
dec
add
cmp
mov
xor
in
repz
xchg
jecxz
push
shll
pop
adc
loopne
xor
xor
in
inc
or
sbb
or
stos
movsb
out
sub
jb
sahf
inc
repz
daa
xor
jg
cmp
arpl
das
es
mov
jg
in
push
rcr
movsb
inc
sub
push
push
xor
leave
and
repz
sub
addl
inc
push
iret
dec
in
shlb
mov
sti
push
jle
aas
je
stos
inc
aas
call
ret
fsubrs
jo
cs
lock
es
fsubs
movsb
pop
xor
dec
xor
fildl
daa
mov
dec
stos
xor
ja
pop
and
lahf
jmp
jmp
pop
das
divl
adc
inc
jo
mov
fsubrl
or
cld
or
sub
cmp
sbb
xchg
xchg
sbb
push
sbb
into
loopne
adc
daa
mov
or
clc
or
sbb
xchg
xchg
fcoms
daa
gs
testl
daa
adc
jae
dec
daa
dec
daa
clc
dec
or
jnp
cmp
dec
sarb
dec
jl
pop
add
jmp
dec
rorl
ds
push
aaa
loope
cmp
mov
dec
mov
roll
cltd
cltd
push
mov
mov
test
imul
daa
repz
xor
cmp
leave
inc
push
sbb
sahf
fadds
adc
pop
add
mov
push
mov
fsubs
cmp
mov
dec
mov
and
push
dec
push
inc
sbb
pop
adc
jl
push
jae
lahf
es
mov
scas
orl
ljmp
stos
push
sahf
loope
mov
aas
loope
loope
daa
aaa
jl
xor
aaa
daa
and
xchg
mov
cwtl
stos
sub
aaa
fs
into
out
mov
jbe
pushf
test
js
outsb
push
imul
sbb
jbe
pop
jnp
xor
push
and
out
jmp
xchg
orl
lret
push
movntq
es
push
push
adc
dec
sahf
cmc
pop
movb
and
aad
add
or
dec
jp
cltd
xor
cld
push
lock
add
lret
in
aas
pop
mov
lock
xchg
mov
cs
xchg
xorl
pop
or
filds
and
add
inc
push
or
add
add
push
or
cmpsb
mov
xchg
or
imul
add
cmc
js
mov
mov
jg
cld
mov
pop
mov
inc
jbe
inc
lcall
addr16
orl
jg
add
ja
bound
ja
xor
insb
jb
bound
ficomps
jbe
arpl
sbb
pop
shrw
ja
and
mov
js
repnz
xchg
cmp
shll
test
pop
daa
ds
mov
push
pushf
ja
mov
insl
rclb
jl
mov
xor
fwait
loopne
inc
mov
popa
push
jo
xor
ret
pop
out
push
fucomip
pushf
stc
in
mov
jo
mov
lcall
mov
mov
mov
inc
iret
sbb
xorb
and
add
xchg
push
scas
cld
jg
or
aas
clc
add
pop
cld
in
inc
sub
aas
lcall
incl
mov
cld
xchg
sarb
ds
pop
push
add
iret
repz
inc
enter
add
es
add
jne
test
xchg
dec
lods
dec
insl
mov
push
add
lret
movsb
fisubrl
inc
movsb
dec
test
ljmp
xlat
xorl
outsb
inc
sbb
imul
ds
or
dec
or
dec
adc
pop
sti
mov
mov
xor
inc
ja
xorl
insl
push
or
push
es
stos
sbb
push
out
jns
imul
jbe
push
jae
jne
mov
out
push
gs
xor
push
sbb
inc
jecxz
xchg
adcb
adc
dec
push
cmp
or
sbb
stos
xchg
inc
fidivrs
ljmp
push
cmp
data16
or
mov
scas
jge
jns
adc
movsb
lods
sarl
fdivl
dec
dec
push
jbe
mov
pop
jnp
sbb
ss
jo
push
or
addr16
xchg
lcall
sbb
add
movhps
and
mov
pop
inc
add
repnz
mov
insb
xchg
jne
pop
jle
loope
sub
jae
popa
xor
jno
mov
push
push
pop
das
push
fwait
mov
gs
call
ljmp
bound
into
fildll
imul
adc
jmp
aas
push
ss
aaa
push
aaa
inc
sbb
dec
popa
inc
dec
fists
push
xchg
lret
or
mov
hlt
sbb
out
arpl
mov
push
insl
mov
and
cmc
cs
popa
push
outsb
ret
and
mov
adc
jbe
addr16
jnp
stos
lahf
adc
out
push
jns
movsb
mov
xor
xchg
ja
or
jle
mov
or
push
jae
out
push
cmp
pop
and
push
jnp
push
push
or
lock
scas
scas
dec
mov
push
aas
cmp
inc
or
sbb
xor
in
js
pop
and
mov
xor
stos
sti
fwait
sbb
popa
cmp
push
inc
xchg
and
je
imul
jge
xchg
cmp
mov
jnp
jns
push
xchg
add
jnp
push
popaw
xor
xlat
dec
dec
pop
mov
adc
stos
sti
jns
push
add
es
bound
mov
add
add
push
fucomp
adc
inc
fistpl
cmp
dec
mov
mov
push
push
push
faddl
ja
dec
mov
cli
sbb
das
mov
cmp
pop
mov
shrl
call
cmpsb
bound
sbb
xlat
push
jne
mov
pop
dec
xchg
sbb
and
mov
mov
insl
jecxz
cmp
js
xor
shll
scas
cmpl
xchg
fs
sub
bound
popa
inc
jecxz
jo
jo
fldt
es
aas
ds
pop
es
add
jl
sub
inc
cmpsl
arpl
icebp
ss
xchg
push
push
inc
ljmp
into
mov
sub
rorl
cmp
jbe
mov
es
and
or
roll
pop
fsubrs
pop
ss
lock
ficoms
add
push
dec
arpl
loopne
je
inc
arpl
push
rcll
or
repz
adc
mov
mov
pop
cmc
frstor
and
jb
push
adc
push
ret
mov
jmp
outsl
mov
imul
hlt
js
subb
daa
popa
cmp
mov
out
mov
dec
outsb
arpl
addl
addl
jbe
mov
jbe
imul
dec
lahf
fisubl
and
jge
inc
inc
and
sti
sub
jecxz
ret
cmp
pusha
mov
aas
popa
dec
add
fidivs
mov
push
mov
pop
ss
bound
pop
xor
jnp
sub
cmp
sbb
xchg
xchg
ds
shrl
sub
add
ret
push
cmp
sbb
ljmp
fwait
jbe
imul
scas
jmp
lods
sub
cmp
cs
or
push
dec
out
mov
filds
lcall
loope
in
sub
jmp
jg
loopne
pop
add
out
dec
mov
gs
jp
mov
dec
out
and
insl
and
jp
push
jnp
jo
lcall
jo
lret
pop
adc
jae
pop
pop
mov
scas
push
inc
cli
sub
movsb
pop
lahf
lret
cmp
mov
das
pop
cli
out
js
aaa
mov
xorl
popf
xor
out
inc
rolb
hlt
pop
jo
mov
sysret
pop
lret
stos
out
push
mov
xchg
mov
jnp
popa
add
xlat
mov
add
loope
out
cs
dec
mov
xor
cmp
ljmp
mov
adc
aad
sub
ret
push
pop
pop
icebp
xor
jo
jns
dec
rcll
pop
sub
aad
xchg
outsl
das
shrl
out
sub
add
xor
inc
sbb
outsl
cmp
imul
inc
add
mov
dec
pop
inc
ret
push
lea
outsl
push
xchg
and
mov
mov
mov
out
stos
sbb
mov
shlb
lcall
stos
pop
out
sbb
sub
cmp
push
mov
pop
mov
lret
pop
and
icebp
jmp
push
inc
and
jp
mov
stos
fwait
popa
mov
mov
mov
mov
xchg
pop
xor
push
pop
dec
imul
roll
sbb
jae
jg
mov
or
int3
subl
test
ret
adc
aam
push
dec
add
js
mov
pop
daa
jmp
arpl
jae
aad
loopne
pop
pcmpeqw
push
sub
xor
and
out
pop
inc
lock
jmp
mov
imul
or
jbe
cmp
cs
sbb
push
addr16
jmp
sbb
ja
pop
popa
dec
mov
ljmp
mov
push
imul
mov
sbb
ret
aaa
roll
aam
push
bound
in
stc
clc
sbb
and
ret
sbb
ja
or
loop
ja
and
or
push
sbb
jecxz
fistps
mov
xor
sbb
popa
outsl
push
jbe
lcall
aaa
push
outsb
xor
push
push
push
imul
scas
push
mov
push
jae
mov
xchg
outsb
daa
or
xchg
xchg
aas
iret
inc
roll
mov
push
mov
outsl
mov
add
sbb
ret
and
mov
push
mull
dec
rorb
cmp
insb
sub
out
mov
btr
pushf
xor
test
push
sahf
or
push
jb
sbb
cmp
push
mov
mov
and
in
rcrl
sub
mov
out
push
and
out
add
pop
jl
iret
arpl
dec
pop
jne
fimuls
bound
and
mov
mov
fdivp
add
ds
sbb
outsb
sub
aas
inc
mov
out
mov
sbb
out
jb
mov
mov
inc
or
pop
xor
and
rep
emms
or
inc
ja
adc
cmc
lods
cvttps2pi
ret
mov
sub
push
push
xchg
mov
dec
aas
lcall
fildll
mov
notl
or
mov
pop
jae
mov
push
cltd
repz
daa
dec
sbbl
or
pop
call
jnp
subl
out
lahf
cs
rol
sub
mov
pop
mov
arpl
pop
cmp
cmp
sub
adc
pop
sysret
add
jno
adc
repz
aad
pop
fildl
lret
add
mov
imul
xchg
cmpsb
push
jae
or
sub
inc
push
mov
add
ljmp
mov
lahf
scas
jo
or
stos
jbe
mov
sbb
sbb
scas
arpl
shll
adc
scas
sbb
sub
or
fdivs
mov
scas
divb
cmp
loop
mov
mov
testl
sbb
adc
call
or
rclb
sbb
rclb
cmp
dec
imul
mov
jmp
and
pop
xor
ljmp
jae
fdivrp
andb
mov
cli
xlat
movsb
imul
jae
push
adc
cmp
push
xchg
inc
pop
mov
repnz
outsl
outsl
leave
movsl
lods
cmpsb
sbbl
test
add
push
lods
xlat
mov
shlb
fwait
add
push
jp
adc
or
and
cmp
movsl
push
or
jbe
cmp
inc
adc
and
jae
dec
fbld
push
pop
adc
or
or
jne
mov
or
dec
inc
fstp
push
push
push
aad
jnp
loopne
xchg
fisubrl
or
mov
jae
inc
shll
xchg
jae
xchg
jo
aam
div
push
or
add
jb
jbe
pop
or
aaa
add
shrl
jae
or
addr16
jae
jo
push
add
or
das
ds
ret
repz
mov
lods
push
repz
movsl
adc
adc
mov
and
jns
cmp
outsl
mov
lds
fwait
fs
imul
xor
loopne
outsl
movzwl
dec
inc
pop
imul
jo
aam
aaa
outsb
lahf
jb
sti
jo
xchg
push
adc
or
sarl
mov
hlt
pop
outsl
ds
stos
arpl
mov
jo
xchg
dec
push
mov
sbb
add
repz
push
mov
pop
pop
jg
std
decl
add
cmp
aaa
mov
pop
fwait
cmp
movsl
cs
cmp
rolb
add
rol
mov
and
mov
clc
or
add
jnp
push
lret
push
dec
push
in
push
sub
or
inc
pop
jge
xchg
pop
adc
jb
and
dec
sbb
push
or
popf
add
and
inc
fisttpl
add
sbb
dec
or
inc
rcll
lcall
push
mov
push
add
addr16
adc
pop
adc
mov
fnsave
adc
xchg
loopne
fbstp
and
sub
jp
sbb
jb
xchg
push
sub
fbstp
cltd
testb
mov
sub
xor
sub
gs
insb
inc
push
dec
or
xor
aad
outsb
xchg
xchg
adc
outsb
faddp
xor
or
cmpsl
xor
mov
lret
jbe
or
jbe
int
jns
nop
icebp
adc
cmp
dec
inc
insb
addr16
xor
push
or
sub
loopne
mov
adc
adc
gs
push
dec
mov
cmp
xorb
jnp
daa
adc
pop
into
jb
adc
cmp
inc
jo
inc
lods
rcll
xchg
mov
shlb
cmpsb
or
xor
add
fimull
xchg
cmpl
movsl
ds
das
inc
aad
sarl
inc
loope
push
jno
add
xchg
dec
aam
add
xor
add
add
mov
dec
sbb
add
mov
or
mov
jno
xchg
add
gs
ret
cmc
aaa
pop
or
xchg
add
shrb
add
pop
bswap
outsb
add
or
addr16
add
or
or
push
out
in
xor
cmc
or
sbb
pop
push
mov
and
test
pop
or
fs
push
pop
sbb
sbb
inc
pop
pop
adcb
ljmp
xor
cmpsl
add
fistl
cld
movsl
dec
add
push
popa
or
adc
inc
popf
and
pop
add
sbb
or
or
adc
add
jle
inc
push
sbb
dec
dec
push
add
adc
mov
and
and
push
mov
push
cmp
dec
push
inc
ss
aad
sbb
cs
cmc
pop
dec
inc
dec
je
dec
aaa
pop
mov
inc
add
repnz
inc
dec
adc
dec
nop
decb
adc
adc
dec
dec
cmp
push
sbb
xor
xor
xor
shlb
sub
ss
xchg
and
pop
imul
pop
clc
inc
fsubs
xchg
or
push
pop
sbb
push
inc
dec
shlb
and
sub
cltd
or
inc
push
or
inc
ds
lcall
inc
and
xor
aam
pop
jp
mov
xchg
lods
in
cmp
pop
insl
ret
adc
cmp
aad
mov
cmp
xor
push
and
rorb
push
or
fs
adc
pusha
sbb
mov
nop
dec
xchg
push
dec
mov
or
gs
cmp
ss
popf
dec
dec
dec
xor
mov
dec
add
hlt
inc
enter
push
inc
dec
fs
dec
xorb
inc
into
or
imul
cmp
inc
dec
mov
inc
dec
cmp
dec
insl
dec
xor
adc
subl
test
push
dec
push
sarb
inc
mov
mov
mov
xor
pop
sub
andb
mov
push
push
dec
jle
fidivs
cmp
jno
push
xchg
sub
mov
ss
inc
or
lods
roll
mov
sub
aad
dec
or
add
adc
in
inc
jmp
and
ret
fimuls
adc
adc
insl
adc
aaa
dec
cmp
aam
stos
loopne
bound
rol
les
test
push
pop
pop
mov
xor
dec
add
movsb
sub
movsl
cmp
dec
arpl
push
cmp
insb
inc
mov
xchg
enter
cmc
xchg
mov
decb
enter
add
dec
andb
push
ss
mov
bound
imul
inc
test
rcrb
aam
add
cmp
sbb
push
push
sbb
xchg
inc
push
in
sbb
sbb
bound
or
sbb
dec
mov
insb
and
mov
dec
pushf
push
inc
inc
adc
adcl
decb
cltd
push
xor
cwtl
sbb
add
xchg
pop
subb
shll
mov
push
dec
inc
add
ss
xor
pushw
outsb
repnz
inc
sbb
dec
repnz
and
sbb
or
dec
add
rcrl
dec
pop
cmp
mov
lock
sbb
and
popa
dec
inc
insb
dec
or
mov
sub
push
pop
dec
xor
sbb
xor
mov
and
cmpsb
adc
insl
and
jbe
dec
inc
xor
cltd
adc
and
and
ret
push
push
and
leave
push
call
inc
add
dec
aaa
or
xchg
sbb
int3
je
jl
ljmp
xor
in
in
or
xor
dec
cmp
sub
scas
ljmp
push
dec
add
cmpsl
and
xor
add
fsubs
sub
push
jo
sub
es
push
fwait
adc
lret
int3
and
cli
je
ss
push
or
push
cli
sahf
fs
xor
nop
mov
and
movlps
hlt
push
inc
dec
loopne
adc
inc
int3
xor
nop
sahf
mov
dec
push
xchg
mov
testb
sbb
xchg
nop
and
sbb
loop
xor
ss
inc
sbb
adc
and
push
jae
xor
xor
pop
push
xor
and
sub
and
dec
sbb
push
hlt
dec
decb
mov
sub
cmp
jne
adc
cmp
sub
xchg
pop
cmp
and
cmpsl
mov
push
push
sbb
outsb
mov
lds
mov
cmp
xchg
xor
jo
sub
loop
fs
lock
in
dec
and
test
push
pushf
ret
cmp
sbbl
call
xor
cmp
and
mov
add
push
mov
scas
push
enter
cmp
push
xor
sbb
xor
and
mov
mov
mov
cwtl
shll
jbe
and
pop
sbb
addl
inc
ret
and
js
dec
adc
jp
fiaddl
and
cltd
shll
repnz
mov
mov
xor
push
fs
push
fldl2e
hlt
and
insb
jecxz
cmpsb
cwtl
inc
xchg
sbb
adc
dec
mov
and
xor
add
dec
orb
cld
sub
push
sbb
xchg
sbb
dec
hlt
dec
push
push
adc
dec
sbb
jge
xor
sbb
testb
adc
pop
lods
jp
es
xor
js
push
push
inc
push
cwtl
push
in
sbb
test
or
xor
push
and
es
hlt
aad
and
push
sbb
cwtl
ret
insb
addb
xor
xor
fsubs
push
pop
lods
mov
push
dec
xor
call
rcll
mov
inc
jb
test
data16
inc
ret
xor
xchg
or
xchg
mov
cwtl
xchg
sub
sub
adc
xor
dec
and
mov
insb
clc
fisubrs
inc
or
jle
xor
and
jo
andb
leave
movsl
pop
xor
mov
adc
add
gs
inc
xor
cmp
insb
cmp
cmp
shll
push
push
movsb
lcall
sahf
or
cs
and
and
fs
ret
pusha
cmp
shlb
call
add
sub
enter
mov
dec
and
xor
js
dec
inc
ret
hlt
add
push
and
jae
inc
pushf
xchg
push
test
int3
xor
in
push
xchg
inc
pop
adc
mov
aam
in
movsb
mov
fs
mov
sub
out
jp
adc
and
enter
es
cmp
sub
gs
rolb
dec
add
add
pop
mov
fs
mulb
push
fimull
and
sbbl
sub
mov
and
lods
testb
dec
jb
mov
or
ss
hlt
add
xchg
enter
mov
pop
adc
ljmp
dec
dec
push
push
adc
push
push
inc
push
xor
push
xchg
lods
cmp
call
popa
mov
pop
pop
xchg
xchg
cwtl
push
subl
add
movsb
in
fcoml
inc
push
lods
pusha
push
mov
inc
mov
and
and
adc
ret
add
xchg
rorb
xchg
mov
or
cmp
push
inc
or
test
push
and
ret
inc
dec
repnz
adc
xchg
xchg
add
sub
cmp
ret
pop
push
and
sub
cld
dec
pop
xchg
xor
push
push
push
push
in
dec
dec
mov
mov
jb
lcall
inc
or
data16
cmp
adcl
inc
mov
dec
dec
addb
test
mov
add
cs
insb
push
xor
xor
dec
fwait
add
add
add
loopne
sbb
lret
dec
gs
dec
mov
dec
dec
mov
lcall
xor
mov
aam
push
inc
pop
xor
pop
mov
sbb
push
imul
inc
sub
dec
dec
es
push
test
dec
mov
push
xor
loopne
int
add
xor
xor
cmp
fidivrs
xchg
and
push
xchg
push
pop
xor
push
or
or
adc
inc
cmp
adc
jo
sub
mov
inc
inc
cli
mov
inc
dec
pop
test
cmc
add
jl
pop
xor
pop
mov
push
inc
es
data16
sbb
xchg
mov
shlb
stos
push
xor
sbb
in
cmp
cmp
enter
test
loope
mov
push
mov
xor
je
xor
movsl
mov
jbe
mov
push
push
push
adc
test
mov
mov
adc
aaa
cmp
aad
dec
sbb
lret
and
insb
push
fiadds
test
arpl
jnp
mov
jl
jl
pop
xchg
data16
inc
push
pop
es
dec
add
add
sbb
pushf
hlt
pop
test
scas
dec
xorb
stos
adc
cmpb
push
push
xor
mov
dec
dec
sahf
pop
push
mov
ss
push
push
cwtl
push
popa
inc
stos
sbbb
dec
sub
jo
fistl
push
rolb
dec
lret
ss
cmp
cltd
or
mov
xchg
mov
cwtl
sub
cmp
add
xchg
cwtl
or
sbb
ljmp
lcall
add
sbb
shrb
or
movb
int3
and
enter
mov
adc
adc
inc
cmpsb
repnz
int3
mov
inc
xor
inc
dec
mov
push
mov
inc
xor
and
dec
sub
rclb
jo
xchg
arpl
sub
data16
xor
sub
loopne
xor
push
dec
cs
fs
cltd
xchg
dec
ret
and
stos
push
arpl
xor
push
fidivs
or
inc
outsb
sbb
adc
in
inc
xchg
push
inc
push
push
xor
dec
insb
inc
scas
push
lock
xor
insb
pusha
test
and
sahf
lock
pop
sbb
cmp
call
inc
mov
inc
mov
leave
sub
or
cld
addl
ss
mov
add
add
nop
stos
shlb
cs
mov
xchg
pop
cmpsb
push
mov
jo
into
push
dec
loope
cmp
mov
dec
les
mov
or
call
and
push
ljmp
sub
push
adc
mov
or
fs
jmp
push
dec
push
inc
jle
int3
pusha
dec
or
push
mov
rorb
cmp
push
iret
pop
xchg
and
cmp
sub
push
jle
push
dec
adc
jb
faddl
add
add
test
lods
roll
inc
xchg
inc
jo
sbb
daa
call
push
push
pop
fsubs
movsb
pop
adc
push
pusha
pop
and
jp
sbbb
add
inc
dec
push
or
or
shr
jbe
inc
inc
dec
pop
stos
inc
out
mov
mov
inc
push
inc
dec
xor
hlt
xor
and
cwtl
dec
mov
mov
xchg
mov
adc
dec
dec
push
xchg
dec
push
popf
xor
and
pusha
ss
lock
scas
cmpsb
xor
fidivl
mov
mov
xor
inc
inc
daa
and
andb
inc
fs
shlb
push
dec
inc
push
push
test
and
xchg
fdivrs
gs
sub
dec
jecxz
dec
pop
cwtl
sbb
sbb
xchg
adc
ds
leave
lcall
popa
ret
inc
bound
xor
scas
dec
xchg
leave
xor
and
mov
inc
push
push
and
ret
jne
push
inc
cmp
andb
lock
outsb
adc
jb
aaa
dec
dec
sub
mov
clc
dec
shl
aaa
pop
add
sbb
push
pushf
cmp
and
push
cmp
adc
inc
dec
int3
jl
or
push
and
inc
or
adc
mov
push
dec
mov
repnz
sub
sbb
xor
leave
adc
push
cli
je
adcb
xchg
in
xchg
xchg
xchg
dec
shlb
aad
inc
jbe
cs
push
mov
inc
hlt
test
and
and
mov
pop
test
dec
or
xlat
int3
and
lock
cmp
or
sbb
lcall
pushf
inc
dec
test
inc
loope
insb
jl
cs
xchg
hlt
mov
enter
mov
in
and
enter
rol
aam
je
push
fnstenv
mov
adc
sbb
jl
xchg
sbb
out
dec
mov
orl
xchg
icebp
test
push
rcl
mov
push
dec
push
jb
int3
ss
push
and
mov
ss
mov
xor
inc
push
leave
xor
cmpsb
test
xor
mov
xchg
mov
xchg
addl
testb
fs
push
ljmp
xor
inc
fs
imul
movsl
and
cmp
sub
fimuls
jb
sub
mov
rcl
adcb
mov
test
inc
repnz
or
sub
cmp
setne
popl
push
cs
and
inc
loope
popa
jl
mov
xor
inc
out
enter
and
push
and
and
lods
cmp
and
xchg
cli
xchg
lcall
xchg
ret
mov
dec
cs
mov
ret
mov
fcoms
inc
adc
scas
jo
pusha
xor
in
fadd
add
add
jp
inc
fcomps
les
adc
pushf
in
cs
xor
sbb
inc
push
sbb
bound
ss
ret
xchg
nop
movb
inc
dec
dec
aam
nop
add
bound
or
pop
push
dec
or
test
push
cltd
mov
push
enter
pop
add
add
sahf
out
add
lds
sub
add
pop
mov
outsb
push
lods
sbb
call
call
add
pop
push
lret
add
adc
or
cwtl
inc
sub
js
xchg
mov
inc
pusha
outsb
dec
mov
dec
repnz
cmp
sub
cli
pop
roll
cmp
push
or
xor
adc
dec
add
xchg
and
retw
nop
and
call
mov
xor
mov
fcoms
fmul
adc
pusha
orb
les
roll
mov
pushf
scas
scas
mov
lea
insb
and
stos
xchg
mov
push
cmp
add
mov
adc
push
dec
push
mov
pusha
push
cmp
xor
mov
fsubs
mov
or
aam
insb
inc
sbb
or
push
fmuls
test
dec
dec
scas
or
xor
lret
sub
and
enter
sub
push
fadds
mov
jle,pn
dec
add
xchg
fiaddl
es
es
popa
mov
push
sbb
adcl
add
mov
mov
dec
jbe
or
xchg
cmp
dec
jo
sbb
sbb
jo
cltd
dec
lods
sub
cltd
xchg
les
loop
add
ret
mov
adc
lods
mov
enter
or
inc
xor
sbb
push
pusha
dec
adc
cmp
in
test
mov
cs
cwtl
rorb
lock
shrb
popw
add
xchg
in
pop
xor
or
push
dec
or
mov
movsb
push
in
or
push
test
sub
dec
loop
cmp
cltd
jb
dec
call
nop
orb
cmpsb
ss
ficompl
xor
cmpsb
sbb
mov
mov
and
js
add
int
inc
push
in
dec
add
inc
or
add
push
mov
xor
xor
inc
push
dec
push
bound
adc
cmp
push
adc
pop
xchg
pop
push
pop
and
dec
loopne
sub
xor
and
add
test
cwtl
mov
push
and
fs
lret
sub
push
nop
inc
and
rclb
test
mov
dec
lret
add
stos
push
push
ret
xchg
scas
dec
and
mov
data16
push
insb
sbb
in
xor
pop
cli
dec
sbb
push
cmp
ljmp
je
xchg
pop
push
xor
mov
dec
add
jo
push
lock
lcall
cmp
push
or
xchg
pop
jle
inc
sbb
xor
push
inc
scas
leave
pusha
adc
inc
or
push
shrb
or
ss
or
mov
cmp
cmp
inc
pushf
xchg
xor
scas
stos
inc
cmpb
xor
ret
out
enter
inc
ret
dec
mov
lea
xor
push
xor
pop
bound
movsb
insb
xchg
add
pop
sbb
push
inc
xchg
movsl
xchg
gs
adc
pop
cmpsb
nop
les
push
add
mov
pop
pop
jl
test
mov
rcll
adc
xchg
leave
mov
jbe
mov
or
add
aam
cmpsb
mov
or
dec
push
es
add
sub
xor
rcl
and
push
pushf
cmp
mov
ss
xor
enter
rorb
rolb
cli
push
insl
inc
or
xchg
push
packssdw
inc
mov
or
cs
xchg
or
je
dec
xor
push
dec
dec
jecxz
scas
dec
lcall
sbb
inc
in
xor
or
dec
add
cwtl
fsubs
sub
fimuls
or
insb
push
add
or
xor
sub
mov
daa
and
scas
loop
lds
nop
cli
add
sbb
inc
pop
cli
push
test
mov
mov
aaa
ret
sbb
jbe
aam
inc
xor
add
lea
and
xor
loopne
jbe
movsb
xor
xchg
insl
mov
dec
fmuls
push
or
jo
mov
and
xchg
mov
aaa
adc
push
cld
pop
add
xor
es
sub
inc
mov
dec
imul
xchg
fmuls
mov
adc
fmuls
pop
sub
push
mov
cli
push
lret
xchg
xchg
add
add
sub
mov
inc
add
dec
add
push
sub
movsl
movsl
dec
sbb
arpl
in
bound
xchg
xchg
or
test
cmp
push
inc
inc
adc
push
xor
mov
inc
xor
nop
ret
sbb
aam
pop
int
pop
in
stos
dec
xchg
push
add
dec
push
sbb
test
cld
outsb
scas
dec
or
cmpb
pop
xor
in
xchg
sbb
jl
adc
and
and
add
ret
and
or
loopne
cmp
andl
add
mov
mov
inc
aad
push
xor
addl
sbb
je
loope
pushw
dec
add
adc
mov
sub
ss
scas
push
fcomps
dec
dec
inc
cli
fs
inc
hlt
cmc
mov
ss
sub
outsb
aam
fimuls
adc
fnsave
push
sub
push
cwtl
incb
lcall
pop
int3
xor
jb
mov
nop
rcl
sahf
loop
adc
and
loopne
xor
incb
test
mov
jne
sub
dec
or
or
and
aaa
and
or
pop
ret
inc
xchg
rorl
and
clc
testb
xor
cmp
int3
push
xchg
xchg
pop
push
scas
inc
xchg
bound
rolb
dec
lea
add
xor
in
or
xor
add
jle
dec
loopne
adc
mov
pop
data16
loopne
movsb
ret
xor
pusha
leave
and
and
xor
adc
dec
lret
add
ret
sub
test
or
in
add
xor
add
mov
sbbb
sub
pusha
push
and
dec
andb
and
popf
fwait
xchg
push
mov
movsb
movsl
adc
xor
xor
push
fwait
jo
fs
pop
push
push
movsb
xor
xor
cmp
or
jl
and
xchg
ret
pusha
pusha
dec
sub
push
and
rcrl
push
cmp
push
xor
sbb
cmp
or
push
inc
xchg
dec
push
scas
dec
push
xor
shrb
cwtl
adc
inc
dec
pop
ljmp
test
sub
xchg
cld
xchg
call
jb
mov
xchg
fadds
dec
shlb
inc
js
xor
pop
sub
or
inc
pop
test
pop
or
fsubs
cmpsb
inc
cs
add
mov
inc
sbb
js
rorl
hlt
and
fwait
adc
mov
loopne
sub
xchg
inc
out
adc
or
sbb
push
inc
pop
push
or
lods
inc
mov
jno
pusha
lret
sbb
xchg
xor
dec
dec
inc
or
pop
add
loopne
lret
pop
xchg
out
push
clc
cltd
push
mov
pusha
movsb
mov
mov
or
push
xor
aaa
sbbb
stos
test
jo
jo
pushf
insb
cmpsb
testb
mov
sbbb
dec
jb
ss
and
ljmp
xor
movsb
mov
es
cmp
cs
pop
sbb
jb
pop
loop
loope
push
in
fcmove
mov
mov
loop
call
pop
subb
xchg
dec
add
dec
outsb
push
inc
movsl
mov
xchg
loopne
push
sbb
in
pop
scas
dec
xor
shlb
push
sub
adc
add
in
popa
popf
and
out
xchg
cmp
in
outsb
push
add
inc
add
cmp
mov
call
inc
pushf
nop
sbb
xchg
adc
xchg
push
and
adc
sbb
orl
movsb
adc
push
xor
bound
lret
dec
cmp
int3
ss
mov
adc
xor
dec
inc
ljmp
sbb
add
push
dec
push
adc
sbb
pop
or
inc
in
jo
push
inc
mov
xor
inc
cmp
push
lods
add
test
mov
dec
mov
or
bound
cmp
jae
jo
dec
mov
mov
cmp
pop
fisubrl
dec
adc
int3
sub
test
adc
and
mov
inc
dec
inc
pop
lret
rcll
push
push
rol
dec
popf
dec
adcb
cmp
jle
mov
jb
xorb
pusha
xchg
stos
hlt
inc
mov
fcmovnbe
adc
rcrb
out
xchg
xor
pop
xor
jl
inc
sahf
fsubs
or
dec
pop
insb
and
fcoms
stos
cwtl
or
mov
sbb
mov
pop
cmp
push
and
push
xor
mov
mov
pop
inc
dec
push
xor
mov
xor
inc
and
orb
and
add
mov
xor
clc
and
xor
inc
cmp
xor
bound
enter
data16
movsb
lock
xor
xor
cld
fs
fdivl
jle
pop
inc
js
or
cwtl
fsubs
sbb
adc
mov
xor
add
xor
bound
and
jbe
push
pop
dec
dec
out
nop
inc
xchg
or
out
add
pushf
xchg
lods
fstpt
jae
enter
mov
in
mov
add
mov
lret
dec
jb
nop
dec
adc
sub
sbb
sub
jp
cmp
add
and
xchg
adcb
push
add
push
add
cwtl
cmp
xor
cmp
add
push
or
add
les
into
fidivl
test
mov
cmp
push
push
or
lcall
mov
sbb
cmp
es
mov
sbb
pop
loop
ss
dec
add
push
rolb
je
xchg
and
push
push
in
mov
xchg
and
sbb
add
adc
xor
push
cmp
lcall
lock
call
mov
int3
dec
and
push
xlat
ret
inc
inc
sub
addr16
cmp
dec
push
in
enter
shl
sbb
adc
pop
fs
ret
lahf
sub
mov
pop
dec
sbb
inc
jne
mov
xor
pop
adc
insb
jmp
push
push
xor
dec
mov
lods
xor
push
jo
sub
pop
shl
bound
inc
xchg
movsb
push
inc
sbb
push
pop
add
cmpsb
add
push
jo
or
pop
mov
mov
mov
lods
pop
mov
xor
shrb
sub
test
sbb
pop
data16
out
mov
movsb
sbb
addb
xor
push
pop
pop
loop
cmp
lods
inc
push
xchg
mov
lret
add
cmp
xchg
mov
sbb
pop
ss
xor
jbe
cs
cltd
add
dec
xor
ljmp
adc
movsb
or
push
push
jl
adc
xchg
nop
sub
xchg
ret
cmpsb
pop
lcall
fs
dec
push
add
pop
shlb
dec
and
testb
fcoms
or
sbb
fs
pop
add
cltd
add
xchg
jo
adc
push
rclb
push
cmpsb
sbb
int3
or
add
cli
addr16
add
cmp
sbb
xor
cmpsb
dec
push
imul
cld
pop
cwtl
shlb
xor
push
and
jo
mov
cli
dec
aaa
sub
pop
repnz
orb
push
push
es
pop
inc
jbe
mov
push
or
push
test
inc
orb
mov
add
sbb
xchg
int3
dec
push
xchg
or
push
adc
rorb
or
in
in
movsb
loope
dec
int3
sbb
popa
out
push
mov
pop
or
ficoms
sbb
and
outsl
sbb
push
loop
push
sbb
inc
mov
lods
add
pop
dec
push
and
ret
push
sub
or
hlt
jb
and
mov
and
inc
pushf
xor
push
jb
push
es
sbb
inc
sub
lock
enter
or
sub
pop
mov
cmpsb
dec
aaa
loopne
or
jb
push
sahf
cmp
rolb
push
ljmp
push
inc
xor
push
lret
sbb
xor
leave
push
nop
andb
push
movsl
inc
inc
inc
xchg
jecxz
pop
mov
in
xchg
mov
push
in
stos
test
jle
xor
dec
dec
xor
xor
jb
mov
mov
cli
aam
xchg
enter
cmp
sub
popf
cmp
xor
inc
add
inc
xchg
loopne
enter
push
and
ror
nop
mov
ss
leave
adc
push
mov
out
xchg
dec
push
or
push
xchg
xchg
icebp
cmp
dec
add
inc
dec
and
pop
outsb
cwtl
push
movsb
adc
add
push
xor
movsb
je
or
push
test
inc
pusha
add
push
adc
mov
shlb
dec
enter
inc
mov
xorb
in
dec
loopne
test
xor
sbbb
cmp
clc
nop
ss
loopne
daa
dec
sub
pusha
inc
aam
push
inc
inc
inc
add
cld
xchg
cltd
mov
push
pushf
enter
hlt
aam
mov
and
xchg
jmp
dec
movsb
cmp
jo
or
dec
or
mov
cmp
ficoms
push
and
stos
push
insb
dec
inc
gs
push
pop
xchg
dec
into
mov
dec
jne
sarb
push
sub
shlb
rorb
push
xor
cs
mov
js
sbb
inc
fmull
push
push
xor
adc
leave
lock
stos
or
xchg
sbb
mov
mov
ss
fs
ss
sub
jp
or
sub
push
test
jp
push
inc
xor
push
push
cs
xadd
push
dec
mov
addl
inc
and
xchg
inc
cli
adc
mov
inc
adc
faddl
dec
push
xchg
cmpsb
outsb
hlt
bound
sbb
cmp
xor
dec
movsb
in
loopne
ret
push
xchg
mov
adc
push
or
stos
add
inc
dec
mov
arpl
inc
or
nop
fwait
xchg
cli
push
jo
xor
cmpsb
or
and
movsb
jp
mov
in
mov
cli
xor
mov
pop
xor
rcrl
jle
insl
lret
and
mov
int
mov
push
xor
js
or
int3
dec
les
push
adc
push
pop
mov
movsb
loopne
mov
nop
ret
dec
das
xchg
push
nop
adc
mov
sub
imul
xchg
adc
fcoms
cmp
repnz
inc
cmp
sbb
dec
pop
sbb
sbb
mov
in
dec
fdivs
xchg
and
dec
mov
lret
test
push
jbe
mov
jb
mov
xchg
pop
pop
cmp
push
pop
daa
push
push
push
js
pop
adc
push
ret
dec
test
aaa
pusha
je
aad
xor
lock
xor
xor
inc
mov
xor
testb
mov
pop
mov
repnz
xor
and
shr
xor
or
push
shlb
push
cwtl
jmp
dec
add
add
aam
insb
xor
or
add
dec
je
xchg
pop
push
xchg
sbb
les
cwtl
push
push
call
push
mov
clc
push
xchg
or
lcall
pop
rolb
jmp
inc
xor
push
sbb
sbb
pop
cmp
lods
stos
test
or
adc
xor
or
inc
ffree
test
outsb
pop
mov
pop
push
inc
xor
inc
fimull
xor
and
push
scas
andb
add
or
and
push
inc
inc
dec
push
pusha
mov
loop
and
in
mov
add
inc
inc
mov
push
dec
mov
inc
shrl
xchg
mov
add
xor
and
push
pusha
andb
in
mov
sub
cmpsl
incb
subb
adc
adc
mov
cli
jle
dec
dec
bound
push
mov
inc
enter
xor
into
cmpsb
movsb
lock
jne
dec
lock
rolb
movsb
mov
into
dec
addb
enter
fs
cmp
repnz
xchg
rclb
bound
add
xor
jbe
dec
sub
push
sub
adc
inc
push
push
mov
cltd
loopne
mov
cmp
mov
or
repnz
cmp
jle
add
xor
dec
loopne
pop
add
mov
lock
test
mov
inc
or
add
jle
inc
cwtl
stos
inc
loopne
repnz
test
or
fs
popf
jbe
jb
addl
test
or
xchg
add
dec
ret
stos
inc
mov
inc
xor
dec
and
xorl
hlt
shlb
inc
faddl
lock
dec
mov
in
or
sub
or
mov
mov
sub
dec
inc
in
mov
das
mov
sub
pop
mov
movsb
push
inc
jo
sub
add
adc
dec
insl
test
xor
dec
and
int3
enter
and
push
push
movsb
pop
cmp
cmp
fimull
mov
inc
cld
lock
ds
dec
push
pop
mov
or
push
inc
push
lret
jle
mov
ds
dec
push
jmp
call
xor
xchg
xor
pop
inc
dec
xor
inc
xor
pop
cmp
orb
xor
inc
push
jle
push
dec
mov
xor
mov
jo
mov
inc
sbb
xchg
loopne
xchg
mov
out
adc
loop
sahf
dec
test
push
cmp
dec
pop
inc
cli
push
dec
or
sbb
push
adc
rclb
mov
pushf
dec
test
push
orb
dec
pop
or
push
call
adc
inc
inc
mov
jo
pop
or
insb
xor
and
mov
mov
fs
pop
cmp
insb
sub
sbb
xor
push
xchg
mov
mov
jb
or
push
data16
mov
mov
xor
cld
mov
mov
push
dec
dec
push
xor
adc
daa
push
cmpsb
clc
push
dec
and
add
cmp
mov
jo
and
jle
inc
sbb
add
mov
dec
sub
xchg
psubusb
mov
and
dec
push
mov
sbb
bound
or
inc
je
adcb
fcompl
cmp
inc
and
insb
cmpsl
fidivs
or
cltd
push
add
loopne
xchg
pop
push
js
push
mov
adc
or
xchg
popa
dec
push
add
xor
lea
mov
cli
push
pop
dec
pusha
popa
sub
adcb
js
mov
add
add
loopne
add
push
das
cmp
aad
dec
inc
cs
push
adc
push
or
pusha
push
inc
mov
xor
pop
add
mov
cmp
or
or
push
push
adc
xor
push
xchg
cmp
mov
stos
push
clc
dec
add
push
lcall
cmp
cmp
aam
es
movsb
in
push
lock
adc
dec
mov
cwtl
or
or
push
xchg
lods
mov
push
push
or
dec
push
adc
pop
jo
or
sbb
dec
dec
adc
cli
adc
mov
xor
xor
add
mov
fisubrs
adc
pop
adc
out
pushf
lea
dec
ficoms
pushf
lcall
xor
out
inc
mov
and
xchg
pushf
mov
cmpsb
jb
cmpsb
outsb
insb
xor
mov
sbb
push
inc
mov
xchg
lcall
push
mov
fiaddl
cs
dec
in
push
xor
add
je
mov
test
jno
xor
inc
lods
loopne
add
cwtl
shrb
sub
add
sub
push
sub
and
add
movsb
push
inc
or
into
mov
pop
movsb
lods
je
in
adc
test
mov
xor
or
shlb
and
lock
sub
divb
jo
push
xchg
inc
inc
and
cmp
push
and
jo
inc
inc
cmpb
and
mov
ljmp
fimuls
add
or
cmp
dec
xor
enter
xor
push
or
jle
xor
inc
push
dec
dec
shl
into
outsb
notb
dec
rcrb
dec
xchg
test
data16
dec
pop
push
mov
inc
sub
xor
push
sub
cmp
mov
push
inc
mov
imul
cmp
popf
lcall
push
push
inc
outsb
dec
in
mov
setl
hlt
enter
mov
sbb
push
dec
sub
es
xor
and
gs
mov
and
aam
sbb
xor
inc
rclb
push
lcall
push
data16
in
ficompl
sbb
adcb
ret
dec
mov
shll
lcall
adc
sub
lods
pop
test
mov
shlb
push
xchg
add
and
adc
or
add
js
aaa
dec
lcall
movsb
xor
test
dec
mov
ljmp
cmpsb
and
test
adcb
loopne
cs
xor
jbe
xchg
sbb
adc
and
push
and
mov
adc
inc
xorb
and
cmp
sub
mov
cmp
sbb
xor
stos
push
add
sbb
test
sub
loopne
dec
or
adc
inc
enterw
xchg
lret
insb
mov
add
in
dec
inc
and
mov
xor
push
pop
shr
ljmp
or
mov
mov
mov
xor
aam
shrb
push
jbe
xor
push
cmp
popf
je
dec
sbb
shlb
adc
xor
mov
and
sbb
and
rclb
push
dec
rolb
hlt
jbe
jo
jo
jo
inc
xor
lcall
inc
pop
push
aaa
xchg
adc
inc
xor
xor
dec
sub
out
xchg
adc
adcl
and
xor
or
push
mov
fmuls
dec
mov
push
cltd
outsb
cmp
mov
dec
inc
js
xchg
xchg
in
add
orb
push
ss
fsubrl
add
adc
push
das
mov
xor
push
cwtl
dec
and
add
jb
mov
inc
repnz
je
push
inc
sarb
gs
push
cltd
sub
cld
inc
roll
data16
sbb
inc
push
mov
cs
faddl
and
es
add
and
test
or
push
xor
push
xor
sbb
cltd
pop
push
adc
and
scas
add
inc
mov
dec
mov
inc
popa
es
inc
cs
adc
andb
sarl
gs
add
aaa
scas
xor
lcall
test
mov
push
dec
fists
add
push
xchg
xchg
int
int3
gs
push
and
and
test
inc
nop
add
sbb
sub
inc
mov
and
int3
int3
sub
ljmp
es
inc
pop
cmp
jb
mov
sbbl
jle
adc
dec
mov
xchg
fsubs
mov
pop
adc
dec
inc
sub
add
rolb
sbb
popa
push
or
clc
jo
scas
rorl
push
mov
pop
mov
push
data16
push
xchg
cli
or
or
loopne
les
pop
inc
adc
inc
adc
add
or
pop
popa
xor
and
dec
mov
enter
gs
and
in
cmp
cmp
push
jno
jl
mov
inc
aad
mov
push
push
mov
pushf
push
adc
push
movsb
sahf
fs
push
push
jbe
lds
xor
popa
nop
lret
jle
jno
and
addb
jbe
add
add
hlt
mov
sub
dec
mov
fdivrs
mov
add
sbb
gs
faddl
stos
inc
les
xor
cmp
xor
xor
dec
cmp
divb
repnz
xor
mov
andl
dec
xchg
adc
xor
or
or
inc
scas
adc
cmp
jl
je
inc
dec
mov
push
push
push
adcb
push
and
hlt
test
cmpsb
cwtl
push
pop
pop
es
in
test
xor
loope
sbbb
aas
inc
jne
aaa
mov
sbb
hlt
push
inc
push
cmp
and
adc
je
push
xor
addl
loop
sub
or
int3
jle
cwtl
jb
xchg
mov
xchg
je
es
push
int3
cmp
mov
mov
ret
pushf
or
sub
nop
xchg
inc
ret
cmp
insl
sbb
jbe
inc
mov
roll
xor
and
xchg
or
push
pusha
dec
mov
add
sub
inc
pop
movsb
sub
adc
rorl
jl
inc
push
fidivrs
sub
fs
sub
or
rcrb
hlt
or
daa
cmp
xor
xchg
adc
test
inc
mov
les
jp
pushf
xor
sbb
xor
rcrl
ficomps
push
add
inc
data16
xchg
lret
stos
hlt
cwtl
mov
sahf
pop
push
add
xchg
lock
xor
add
add
rorb
mov
inc
into
push
jb
cmp
xchg
mov
sub
xchg
dec
pusha
xchg
or
xor
scas
call
adc
mov
pushf
xor
dec
push
fs
dec
inc
rcr
jo
add
pop
movsb
xor
adc
mov
jl
cmp
add
xchg
inc
fcom
push
cmp
add
xchg
cli
sub
xor
dec
pop
xchg
int3
adc
add
jle
inc
push
gs
push
cmp
int3
lea
xor
mov
or
test
inc
mov
dec
sub
jo
subl
push
xchg
adc
in
xchg
dec
push
push
ljmp
sub
mov
inc
dec
call
push
cli
mov
loopne
push
dec
dec
mov
sub
mov
push
ret
icebp
outsb
mov
adc
jbe
push
push
xacquire
xor
cmpsb
xchg
push
sahf
push
data16
push
scas
pop
adc
dec
or
stos
roll
shrb
orl
fstps
cwtl
xor
lds
jbe
pop
ss
aam
inc
inc
nop
or
push
test
ret
shrl
xor
mov
testb
mov
subl
xor
adc
and
cmp
mov
cmp
sub
lock
push
call
ss
push
and
push
push
pusha
xor
adc
push
sbb
push
add
ret
mov
sbbb
mov
sub
cli
clc
movb
pusha
cld
loop
inc
add
adc
push
jmp
cmp
enter
pop
repnz
mov
xor
fcomps
fs
pushf
loop
adc
cwtl
xor
inc
js
sbb
mov
sub
and
push
push
jbe
dec
ljmp
lods
push
test
mov
push
push
shlb
aam
inc
jae
pop
dec
mov
adc
dec
push
push
cmp
jo
mov
and
push
addb
and
aam
aam
sub
add
pop
xor
xchg
dec
nop
sub
and
add
out
xchg
sbb
or
pusha
dec
sahf
fs
xor
test
xor
and
dec
je
fcompl
inc
inc
ficomps
add
inc
data16
rclb
sbbl
mov
sbb
ret
adc
adc
pusha
xor
xchg
jbe
xor
or
xchg
fistl
mov
dec
cwtl
and
sub
sbb
js
push
mov
push
mov
inc
jnp
push
shll
cmp
ret
and
js
inc
movsb
adc
add
pop
sbb
cltd
pop
sub
cmp
fimuls
cmp
add
pop
or
ss
mov
or
fs
xor
inc
push
sub
cmpsb
clc
jne
inc
and
aam
push
mov
xchg
cmp
pop
cmp
add
mov
inc
cltd
idiv
out
mov
inc
cmp
out
adc
roll
cmp
test
movsl
clc
stos
fiadds
mov
mov
push
sbb
xchg
rorb
sub
and
and
push
mov
or
xor
mov
mov
xchg
push
inc
add
add
or
xchg
call
sbb
xor
push
mov
andb
dec
or
push
sub
xor
in
xor
push
dec
or
ds
add
mov
test
loop
pushf
add
xor
sub
insb
and
inc
push
cmpsb
adc
or
cli
xorb
movsl
adc
rol
sbb
js,pt
dec
dec
cmpsb
jo
pushf
mov
pop
inc
in
cld
xchg
mov
and
movsb
xchg
enter
xorb
ss
add
lcall
push
push
movsb
dec
dec
lea
dec
bound
xchg
xchg
cmpsl
mov
sbb
dec
inc
hlt
dec
push
pop
jne
or
fsubrp
inc
lds
bound
sub
dec
cmp
subb
inc
fs
out
push
inc
mov
loopne
jle
sbb
push
dec
inc
add
addb
push
loope
ss
scas
dec
inc
test
push
pusha
inc
cld
xor
push
test
out
push
imul
add
cmpsb
test
dec
shrl
les
push
shlb
mov
lret
fdivl
shl
rcll
cwtl
add
or
xor
data16
inc
inc
loopne
pop
test
inc
fiadds
add
sub
fs
inc
push
lods
fcompl
test
mov
lret
add
stos
aad
fs
sub
add
xchg
popa
ljmp
xchg
ljmp
add
add
lcall
test
hlt
test
dec
and
pop
mov
push
arpl
nop
mov
test
movsl
xor
movsb
xor
dec
add
ss
aaa
movsb
cmpsl
push
jbe
dec
push
add
in
stos
pop
mov
and
dec
push
inc
mov
dec
lods
push
xor
sbb
push
in
icebp
test
dec
sbb
dec
mov
mov
mov
inc
sub
outsb
mov
xchg
mov
xchg
dec
or
and
dec
adc
pushf
in
rorl
push
dec
add
inc
jp
sub
xchg
add
mov
sbb
push
jbe
insb
sub
out
pushw
inc
test
push
in
add
lret
pop
inc
push
or
inc
adc
add
jmp
mov
push
nop
dec
or
cwtl
push
mov
and
inc
ret
mov
dec
sbb
dec
pop
loope
or
les
pushf
push
xor
inc
ss
push
push
test
lds
sahf
xor
add
je
je
push
pop
add
mov
sub
add
dec
ds
lret
rcr
xchg
inc
jl
push
cltd
or
mov
ss
adc
leave
pop
repnz
sahf
dec
mov
pushf
shlb
shlb
jl
jbe
adc
cmp
dec
sbb
mov
lret
shlb
std
data16
mov
push
sbb
dec
and
cmp
cwtl
aam
outsb
stos
mov
add
add
test
cmp
mov
jle
add
xchg
je
in
mov
xchg
xorb
idivb
push
xor
int3
shlb
cmp
or
hlt
mov
dec
mov
inc
jp
test
xor
add
cmpsb
push
scas
pop
js
imul
dec
add
sarb
sub
mov
inc
or
push
ret
pusha
xor
adc
xchg
rcrb
push
inc
movsb
xor
or
and
jp
fmuls
lcall
sbb
adc
xor
xor
and
lods
inc
push
mov
clc
push
push
mov
xor
inc
and
jae
dec
add
ror
mov
flds
ret
sarb
push
xor
dec
outsl
dec
or
xor
es
mov
push
or
add
fadd
sub
sahf
mov
sbb
movsb
loopne
adc
xchg
push
nop
inc
nop
ret
adc
add
push
fimull
sub
ss
lods
mov
pop
pop
bound
cmp
ret
xchg
dec
mov
sbb
enter
jb
adc
jl
push
fwait
xchg
mov
adc
push
dec
ds
cmp
mov
ret
insb
or
or
push
inc
sbb
inc
movsb
push
in
aaa
test
xchg
push
sub
je
add
movsl
and
cmp
aam
add
adcb
sub
gs
shlb
add
pop
jp
dec
in
jle
mov
sub
mov
push
movb
movsb
cmp
outsb
adc
and
imul
fdiv
xchg
cli
xor
push
cmpsl
jp
lock
test
orl
dec
mov
push
adc
or
dec
and
fimull
push
es
sbb
dec
adcb
out
test
inc
xchg
add
out
inc
push
imul
stos
push
add
or
test
mov
pop
inc
xor
add
lret
inc
dec
jo
cltd
leave
nop
pop
pop
xchg
aam
rorb
subl
addb
dec
loopne
inc
mov
push
jp
es
mov
shlb
es
xor
xor
sbb
les
popf
mov
dec
dec
xor
and
push
ret
or
cs
inc
inc
or
mov
push
mov
outsb
push
add
mov
mov
dec
fmull
lcall
and
cmp
fdivrs
push
or
call
xchg
mov
sbb
adc
mov
imul
xor
xchg
cmpb
into
or
test
xor
xchg
and
sub
pusha
dec
cs
loop
push
inc
clc
rolb
inc
cmp
mov
dec
sub
or
or
gs
xor
mov
int3
mov
in
test
and
xchg
nop
dec
fs
dec
popa
xor
dec
inc
in
push
cmp
xchg
cltd
ror
loop
out
pop
andl
or
and
inc
orl
push
xchg
push
push
adc
ficomps
pop
je
aaa
scas
int3
or
xchg
inc
sub
jbe
adc
xor
pushw
and
push
scas
cld
and
test
les
dec
mov
mov
cmp
movb
sbb
mov
inc
push
lock
or
and
push
inc
push
push
push
or
bound
dec
inc
popa
lods
popf
es
inc
inc
inc
ret
pusha
push
dec
call
icebp
push
cld
mov
rcrb
xor
or
jo
insb
push
sub
xchg
xor
push
pop
pop
mov
mov
add
cmp
jp
in
movsb
int3
and
test
test
add
pushf
fimull
test
and
xor
pop
cmpsb
inc
push
mov
sbb
and
push
dec
lret
add
or
adc
inc
ret
shrb
orb
inc
cmp
xor
hlt
or
aam
add
or
mov
push
push
inc
inc
lret
xor
dec
enter
call
and
dec
shrb
push
loop
add
xor
mov
push
push
adc
push
hlt
push
fsubrl
ret
mov
and
lock
enter
ss
pop
push
mov
xor
lcall
fmul
imul
push
inc
push
sahf
xor
mov
or
mov
xchg
xchg
xor
inc
sbb
inc
push
in
push
inc
sbb
aaa
dec
adc
adc
orb
xchg
adc
add
lods
pop
dec
push
mov
sub
sbb
and
sahf
adc
mov
ss
out
mov
hlt
mov
push
or
cmp
dec
or
and
add
imul
inc
fs
push
pop
addb
ficoml
add
push
insb
dec
dec
ljmp
ret
popf
adc
out
mov
pop
insb
inc
adc
rcl
and
ss
add
cmc
dec
cld
xor
dec
push
adc
pop
and
mov
test
sub
sbb
inc
enter
xor
mov
and
out
test
je
mov
pop
es
fiaddl
add
push
out
adc
popa
jb
xchg
dec
pop
add
jae
stos
and
stos
es
outsb
cmp
mov
sub
pop
xor
mov
dec
add
mov
inc
push
inc
orb
enter
sbbb
cmp
inc
xchg
jo
inc
vorps
jp
cltd
sub
fadds
cltd
inc
pusha
xchg
je
sahf
cmp
cltd
add
cmpb
inc
inc
es
dec
dec
sbb
call
or
scas
negb
shlb
cwtl
adc
rolb
xchg
inc
inc
orb
adc
xor
xchg
push
push
pushf
mov
lret
and
xor
dec
gs
adc
test
adc
push
cs
jb
push
inc
add
leave
or
add
mov
aam
push
pop
scas
push
and
test
inc
adc
sbb
aam
jp
sub
lret
orb
sub
adc
mov
xor
dec
push
das
inc
fs
adcb
or
cwtl
inc
test
pushf
push
push
xchg
and
mov
xor
xchg
or
scas
fmul
xor
outsl
inc
fsubl
pop
push
sbb
xchg
push
jb
ds
cmp
inc
mov
xor
call
sub
enter
mov
cmpsb
in
inc
jl
xor
mov
dec
xchg
loopne
sbbl
hlt
in
mov
add
inc
add
les
test
inc
mov
lods
cmp
dec
das
or
jno
orb
ficoms
or
push
add
daa
mov
xchg
cwtl
nop
imulb
inc
xchg
jp
push
jb
nop
push
mov
data16
or
jo
push
and
pop
and
lods
dec
mov
xor
mov
mov
dec
mov
mov
xor
adc
inc
cmp
mov
inc
ret
xor
dec
adc
xor
je
push
sbb
lret
ss
push
mov
mov
and
sbb
sub
add
cs
dec
and
test
fs
or
dec
or
xor
push
xor
or
ficoml
lods
inc
leave
and
xor
add
ljmp
fs
push
lock
int3
ror
rclb
movsb
dec
and
inc
dec
sbb
and
inc
leave
add
mov
shlb
sub
ret
aam
sbb
dec
pop
or
push
bound
push
add
push
out
je
or
add
sbbb
cmp
cs
shll
dec
hlt
push
fcoml
cmp
push
adc
push
or
out
movsb
cs
push
xchg
pop
xchg
dec
mov
mov
dec
push
sub
adc
sahf
bound
mov
pop
stos
add
mov
pusha
mov
sarb
dec
sub
lret
je
pop
lock
add
dec
xor
and
push
notb
cwtl
and
or
es
js
nop
gs
sahf
into
adc
mov
les
xor
fs
pop
movsb
xor
gs
push
out
movb
push
cmp
xor
and
pushf
lcall
xor
or
lods
loopne
pusha
dec
call
add
nop
and
push
push
xor
pop
or
and
adc
mov
pop
loop
hlt
sarb
rolb
add
add
sbb
cmpsl
and
hlt
xchg
xchg
sbb
or
lret
xor
cmpsl
popa
flds
lcall
pop
sub
and
addr16
push
pushf
outsb
sbb
je
inc
adc
orb
and
out
je
mov
notb
or
inc
mov
add
sbb
sub
inc
and
test
pushf
andb
mov
in
hlt
jp
push
loopne
or
stos
pusha
dec
cwtl
nop
adc
jge
frstor
and
rolw
or
or
sub
dec
nop
adc
push
mov
loope
in
es
add
xor
cltd
enter
dec
mov
hlt
push
inc
jp
push
dec
and
push
addl
add
insb
test
outsb
pop
ljmp
les
xor
mov
dec
int3
fdivl
sub
xor
rorl
sbb
inc
lods
and
lret
fdivs
inc
xor
mov
xchg
dec
push
in
faddl
addb
mov
push
xor
add
push
jo
nop
inc
pusha
ret
je
ret
insb
mov
clc
jl
push
pushf
dec
mov
dec
adc
push
cmp
sub
bound
push
lcall
mov
mov
adc
inc
push
pop
jp
gs
ret
lods
orb
xlat
push
shlb
nop
shlb
add
mov
sahf
mov
int3
cmp
push
bound
dec
mov
mov
cltd
jne
dec
cmp
addb
mov
dec
shll
pop
mov
xchg
bound
lods
test
pusha
data16
call
dec
pusha
hlt
adc
stos
or
dec
adc
xorb
push
xor
dec
adc
pop
or
mov
add
push
inc
add
push
hlt
popa
jo
les
pop
mov
inc
and
or
and
ror
dec
mov
add
into
pop
inc
mov
fs
lret
adc
dec
dec
push
ret
push
ret
jb
aam
dec
adc
aam
test
ret
inc
xchg
movsl
daa
mov
inc
mulb
dec
out
cmpsb
mov
dec
add
dec
aam
jl
dec
or
addb
dec
in
inc
sub
xorb
inc
sub
mov
push
test
pusha
test
inc
mov
cld
or
es
or
pop
or
addb
ss
cmp
sub
pushf
int3
push
xor
cli
jl
dec
adc
dec
push
mov
push
or
inc
pop
add
push
xor
cli
fisubrs
insb
dec
lcall
add
push
je
and
xor
pop
add
loopne
add
orl
roll
dec
xchg
sbb
sub
xor
sbb
push
push
cmp
mov
dec
push
test
ss
call
imul
xor
jo
mov
xor
inc
dec
mov
push
pop
mov
inc
sub
pusha
mov
and
or
mov
adc
pop
outsb
dec
loopne,pn
add
or
loop
loop
and
and
cld
dec
mov
inc
loopne
movsb
jb
sub
push
out
daa
cmp
adc
mov
add
sub
push
mov
inc
scas
lock
lret
add
dec
inc
xor
or
fcomp
cld
mov
ds
push
lcall
push
movsl
mov
adc
mov
xor
xchg
test
pop
daa
push
or
sub
hlt
test
xchg
int3
dec
fmull
xor
js
xorb
sbbb
xchg
xor
sub
adcb
mov
push
mov
push
xor
in
sub
lret
cmp
pop
push
sub
xchg
adc
xchg
pop
mov
les
dec
adc
test
jle
dec
sbbb
mov
and
pushf
je
push
inc
cmp
or
push
inc
sbb
adc
pop
cwtl
fcoms
push
into
mov
mov
shlb
push
rcll
movsl
repnz
call
jb
pop
inc
dec
mov
sbb
pop
xor
movb
pop
hlt
faddl
inc
imul
add
insl
jo
lock
js
lods
xchg
sbb
xor
incb
inc
les
cmp
adc
pop
cmp
xor
xchg
adc
adc
or
xchg
push
and
adc
mov
add
aam
pop
adc
mov
sbb
mov
xchg
xor
or
nop
lock
dec
call
test
xor
sub
int3
in
sbb
push
sbb
push
push
adc
aam
xor
dec
lcall
and
sub
and
push
or
cs
cmp
pop
sub
add
push
xor
or
or
add
call
mov
inc
pusha
movb
mov
test
push
cmp
dec
outsb
cltd
sbb
ret
push
movsb
jo
push
jo
xorb
dec
dec
cmpsb
push
inc
sub
pop
rorb
mov
dec
xor
mov
in
sub
push
aaa
and
insb
mov
adc
sbb
cltd
repnz
pop
xchg
xor
xchg
mov
add
or
inc
mov
mov
jb
or
fcoml
mov
mov
sbbb
and
push
sub
add
loop
xchg
roll
or
call
dec
mov
stos
adc
aam
or
in
push
cwtl
cmp
dec
jbe
xor
cmp
outsb
rolb
cli
xchg
sbb
test
sbb
lret
pushf
cmp
sub
and
cwtl
or
push
or
push
or
xorb
inc
push
out
sbb
les
pop
and
cltd
or
jo
out
push
jno
sbb
pushf
enter
inc
push
pusha
loop
add
or
xor
jb
movsb
test
fs
and
pop
mov
shlb
xor
sub
lods
mov
adc
push
inc
xchg
push
mov
mov
push
or
push
xor
stos
add
adc
add
sbb
add
xor
xor
adcb
push
sbb
dec
shrb
sbb
shr
enter
inc
sub
cwtl
xor
xor
js
inc
shl
inc
xchg
outsb
lret
cmc
xor
pop
push
test
push
ret
ss
test
bound
push
pop
mov
add
jp
inc
pop
push
adc
lods
stos
mov
push
pop
cmp
mov
je
mov
mov
xor
push
push
out
sub
mov
addl
sub
push
sarb
xchg
or
xor
push
rolb
aam
test
inc
pushf
xchg
mov
dec
pusha
ljmp
jle
xchg
adc
sub
pop
xor
xor
adc
push
push
adc
pop
push
xor
xor
adc
dec
jb
in
sbbl
sbb
dec
cwtl
adc
bound
add
inc
testb
cmpb
add
push
cmp
pop
and
leave
and
xor
push
xor
push
inc
jbe
movsb
add
pusha
push
bound
push
push
or
enter
add
xchg
and
adc
sub
or
movsb
rclb
aad
test
jle
push
popa
sbb
push
cs
inc
orl
or
xchg
pop
movsb
dec
enter
and
addl
jl
pop
rolb
sbb
dec
inc
cmp
push
dec
loope
dec
mov
adc
adc
pop
push
cs
xor
push
fmull
xchg
adcl
adc
inc
inc
shlb
push
fwait
jp
pop
cmp
cmp
test
sub
and
mov
sbb
add
mov
aam
xchg
mov
cs
xchg
xchg
nop
add
cmp
mov
aam
cwtl
test
jb
test
xchg
mov
sub
xchg
rcrl
dec
push
mov
dec
or
mov
sub
mov
xor
push
imul
and
inc
push
and
mov
test
hlt
ss
or
dec
test
sahf
xchg
in
mov
sbb
mov
out
pop
mov
and
ret
scas
mov
enter
sbb
pop
mov
gs
xor
shl
inc
sub
test
sub
sahf
cmp
add
ret
inc
inc
ret
cmp
xor
dec
mov
and
push
inc
jb
and
aaa
mov
push
ret
sub
rolb
sbb
adc
add
xchg
adc
scas
sbb
add
mov
dec
sub
mov
xchg
xor
aad
or
xor
add
lret
sub
mov
pop
les
adc
adcl
pop
sbb
test
subb
inc
jo
enter
add
inc
test
add
subb
icebp
sub
or
dec
insl
dec
mov
int
dec
sub
pop
mov
fs
inc
and
loopne
ret
dec
jb
sbb
dec
push
js
sub
pop
jl
dec
push
dec
popa
test
outsb
cmp
sahf
pop
add
rolb
jo
push
xchg
popa
decb
loopne
add
pop
add
dec
mov
add
xor
push
mov
movsl
push
sbb
pusha
cmp
jb
cmpsb
xchg
inc
rolb
add
xor
ss
sub
dec
popa
stos
lcall
push
add
lret
inc
add
jo
sub
cmp
cmp
dec
mov
dec
sub
clc
xor
push
adc
pop
adc
cwtl
dec
fsub
gs
ret
ds
xchg
inc
fs
push
pushf
xchg
rclb
and
adc
aam
add
cmp
add
adcl
mov
into
dec
and
push
sub
fisubrs
push
or
adc
dec
je
sub
dec
clc
lcall
adc
cs
dec
gs
push
push
ja
dec
outsb
dec
xor
fs
test
add
jp
mov
and
mov
mov
lcall
dec
adcb
pusha
dec
insb
test
rclb
xor
test
adc
mov
sahf
mov
fs
xor
xor
aaa
aaa
xchg
test
insb
add
dec
mov
nop
push
insb
cmp
mov
mov
rcrl
push
adcb
popa
adc
inc
shrl
push
andl
xchg
push
rclb
or
fldt
add
or
inc
out
adc
sub
nop
ret
ljmp
test
dec
pusha
pop
xor
push
in
push
test
adc
xor
xchg
push
pop
jle
test
push
push
sbb
mov
in
push
mov
mov
aaa
push
mov
push
add
dec
inc
xor
cmpsl
dec
push
inc
in
fisubs
push
inc
ljmp
or
outsb
and
flds
mov
and
xchg
xor
sub
add
xchg
inc
cltd
fdivl
sub
fiadds
inc
loopne
cmp
addl
xor
int3
sbb
jl
jmp
bound
pusha
adc
sbb
dec
pop
mov
shll
add
mov
adc
push
fimull
mov
xchg
add
cmp
lock
fs
pop
xchg
fs
movsb
movsb
movsb
insb
mov
xchg
js
es
add
mov
and
pushf
add
nop
and
push
mov
xor
push
adc
or
and
cli
push
fstpl
sbb
inc
or
sbb
pop
rorb
mov
ds
out
sbb
adc
inc
hlt
ss
inc
mov
test
test
cmp
adc
pusha
cs
adc
movsl
dec
pop
repnz
push
sub
or
xor
push
dec
or
xor
sub
push
enter
sub
adc
mov
adc
in
out
pop
xchg
scas
add
dec
push
test
push
or
push
mov
lods
popa
jo
push
push
and
cmp
jp
cmp
pushf
or
add
mov
mov
push
lods
mov
ljmp
movsl
add
jg
stos
add
add
and
cld
mov
add
sbb
push
and
xor
xchg
adc
fidivs
jmp
mov
nop
loopne
dec
push
inc
test
xorb
movsb
ss
mov
mov
pusha
push
mov
cmpsb
xchg
mov
cmp
int3
gs
sub
shll
xor
push
mov
dec
aam
pop
lcall
sbb
mov
lods
cmpsb
aam
dec
dec
out
xor
pusha
repnz
cmpsb
nop
push
insb
shrl
add
data16
cmp
testb
int3
xor
gs
mov
xchg
mov
popf
lods
dec
push
loope
in
inc
add
pop
xchg
pusha
push
push
lock
fistl
outsl
enter
push
into
lcall
push
xor
andb
xor
dec
enter
cmp
mov
add
adc
inc
je
bound
aam
pop
pop
push
and
inc
into
xchg
dec
in
cli
jl
push
fwait
shlb
dec
xor
push
shr
les
adc
movsl
xchg
pop
sub
dec
add
push
push
je
add
pusha
push
xor
lret
mov
xor
or
sbb
xor
dec
cwtl
gs
add
push
sub
jl
shrb
mov
dec
inc
add
sbb
scas
test
loop
push
leave
add
xchg
cld
and
dec
dec
mov
and
fs
push
push
cmp
in
sub
jmp
into
push
push
stos
cltd
pop
adc
add
xchg
sub
sub
xor
dec
mov
inc
sub
fmulp
dec
push
inc
mov
dec
test
push
and
or
bound
or
fadds
push
and
in
add
inc
cwtl
addb
push
ss
ss
push
and
or
adc
pop
out
ds
test
sub
xor
xor
dec
xor
push
cmpsl
dec
insb
inc
mov
push
mov
cmp
dec
xor
clc
movsb
fs
clc
push
lock
nop
jb
fs
xchg
fcoml
xor
add
sahf
mov
mov
leave
hlt
addb
stos
aam
test
shlb
xor
mov
inc
push
sahf
mov
or
or
jo
es
and
je
scas
rorb
arpl
push
xchg
sbb
ss
icebp
shrl
fmuls
push
mov
add
mov
stos
push
mov
or
add
mov
cmpb
sbb
add
or
loopne
or
mov
out
dec
xchg
adc
call
push
add
fs
jne
or
aad
cli
in
push
clc
xor
sub
mov
les
movsb
add
jp
out
xchg
mov
push
adc
push
push
inc
loopne
mov
mov
adc
cmp
jo
inc
mulb
push
ss
scas
cs
pusha
mov
add
sub
add
test
push
sub
sbb
pop
or
test
movsb
cmp
dec
mov
sarb
push
add
into
leave
mov
push
nop
es
test
into
add
push
add
sbb
mov
xchg
test
push
push
adc
push
or
jb
mov
dec
dec
lock
inc
sub
addb
fcom
dec
mov
cmpsb
test
or
out
dec
pop
inc
daa
jecxz
jb
push
jae
or
add
rorl
xchg
lods
xor
or
popa
cmpsb
inc
push
stos
or
jb
cmp
dec
push
dec
push
dec
pusha
add
dec
xor
sbb
pusha
push
sub
or
push
inc
or
lret
and
inc
adc
xchg
mov
inc
aaa
fsubl
xchg
adc
lret
dec
or
xchg
adc
jbe
inc
push
sbb
rorl
into
in
cwtl
add
dec
fadds
or
pop
inc
push
inc
pushf
je
dec
sbb
inc
aaa
mov
dec
xchg
imul
lock
xchg
popa
dec
dec
dec
cld
in
nop
lods
loop
sub
movsb
xchg
cmp
inc
cli
xor
adc
addb
pusha
xchg
cmc
mov
xchg
adc
and
ret
mov
add
insl
cltd
push
js
push
test
and
jne
mov
mov
xchg
push
loopne
or
jle
into
push
cmp
inc
faddl
lret
add
inc
xor
idivb
outsb
push
sbb
jbe
dec
test
movsb
sub
add
cmp
mov
push
xchg
aam
gs
sub
nop
lcall
clc
dec
cmp
or
inc
pusha
mov
lods
push
in
adc
push
add
fdivl
insb
xor
cwtl
insb
movsb
sbb
adc
ret
test
xchg
xor
sub
pop
mov
dec
cli
push
loopne
mov
xchg
dec
sbb
mov
and
dec
add
ss
sub
dec
dec
dec
clc
xor
pushf
adc
push
cmp
mov
in
inc
sub
dec
sub
inc
add
js
dec
gs
test
mov
inc
push
add
sub
movsb
xorb
icebp
ficoms
loopne
test
faddl
adc
movsb
inc
ds
ss
sub
inc
sub
sub
test
xor
or
xor
loop
xor
les
pop
stos
cmpsb
dec
sbb
add
jbe
data16
xor
movsl
lock
pop
xchg
dec
push
sub
jp
test
mov
in
add
mov
inc
or
push
push
roll
jle
loop
xor
mov
adc
mov
adc
or
nop
dec
push
cld
sbb
push
xor
dec
cmpl
sbb
mov
jo
pop
dec
mov
push
adc
jb
push
in
add
mov
or
mov
test
cltd
dec
sub
cmp
xchg
add
push
dec
pop
jb
and
in
adc
sbb
fsubr
orb
dec
dec
pop
mov
fadd
sub
cmp
xor
xchg
xchg
xor
mov
push
cmpsb
je
xor
ds
dec
mov
test
sbb
xchg
inc
call
dec
push
lods
push
cmp
xchg
or
adcb
push
or
jb
arpl
pop
mov
popa
xchg
pusha
push
dec
pop
and
in
push
push
inc
test
adc
push
inc
gs
fcoml
push
pop
sarb
push
mov
and
push
push
inc
insb
test
test
mov
xor
sub
aaa
inc
fcoms
mov
jae
adc
sbb
insb
add
data16
mov
xchg
cltd
add
pop
ret
push
push
cli
xor
push
je
jbe
sbb
sub
jp
mov
dec
aaa
clc
insb
xchg
movsb
push
xchg
sbb
dec
mov
xchg
in
add
xchg
cltd
jbe
inc
pop
mov
adc
add
dec
or
add
jl
jne
orl
mov
repnz
ds
push
sub
adcb
cmpsb
lret
jb
movsl
shl
int3
test
xchg
nop
rclb
lcall
add
hlt
gs
pop
dec
push
test
test
xor
inc
inc
xor
inc
mov
dec
cs
xchg
call
nop
and
jge
fs
repnz
pusha
pop
fcoml
pop
push
loop
or
ss
lret
insl
clc
enter
and
and
addb
repnz
clc
or
push
add
mov
dec
sbb
push
inc
or
stos
adc
mov
scas
xor
rorl
pop
movsb
sbb
jb
enter
pusha
and
out
inc
push
inc
repnz
adc
andl
or
xchg
dec
mov
pop
mov
das
xor
lock
sub
xor
cs
adc
ret
xchg
shrb
rclb
fs
adc
inc
cmp
fcompl
pop
jb
notb
insb
push
and
mov
dec
aaa
push
dec
xchg
cmp
lret
call
inc
adcb
js
dec
popa
data16
enter
pop
and
lret
sub
pop
sahf
push
xor
test
adc
fsubrl
leave
add
mov
addr16
rcr
xchg
addb
or
mov
cs
push
add
pop
mov
inc
push
sbb
stos
jmp
ss
and
xchg
call
or
leave
sahf
cmp
dec
dec
mov
push
movsb
or
mov
push
or
cltd
dec
adc
inc
push
jae
inc
and
sbb
hlt
cmpb
xorb
negb
dec
outsb
inc
xor
inc
mov
add
mov
sub
inc
test
stos
xor
cmp
loope
sub
cmp
adc
testb
lret
inc
cmp
sbb
cmp
dec
or
test
dec
mov
or
push
inc
and
enter
adc
add
sbb
mov
pop
add
push
dec
stos
cwtl
pop
jo
xor
and
mov
enter
jae
jbe
movsb
xchg
dec
push
push
dec
push
cwtl
and
rolb
push
dec
nop
push
adc
ret
cmp
dec
adc
sub
les
mov
xor
mov
rclb
adc
push
shlb
jbe
and
sub
pop
dec
or
inc
imul
lods
pushf
adc
dec
popa
and
mov
mov
je
mov
addl
dec
movsl
addb
jb
stos
mov
jb
sub
imul
xchg
ret
mov
sbbb
inc
xor
push
dec
mov
add
lods
push
pop
ljmp
sub
xor
push
rolb
pushf
jle
xchg
sbb
inc
or
add
or
mov
xchg
in
orb
adc
xor
insl
or
xor
aam
push
or
insl
test
mov
sub
inc
loop
push
inc
xchg
adc
je
cmp
sub
add
push
dec
push
cwtl
in
dec
or
jo
push
sbb
xchg
sub
nop
sbb
sbb
roll
push
cld
call
adc
bound
subb
or
mov
sub
xorl
xchg
xchg
sbbb
xor
or
adc
scas
cltd
mov
push
sbb
dec
stos
inc
popa
cwtl
adc
insb
and
sbb
je
hlt
push
dec
push
add
and
sbbl
xchg
or
or
and
add
mov
cmp
inc
inc
xor
rolb
xor
sbb
sbb
pop
add
test
mov
es
ret
sbb
sbb
add
aad
adc
push
xchg
movsb
sbb
sbbb
mov
add
or
mov
push
addb
adc
adcb
inc
lcall
mov
subb
fidivrl
shlb
dec
push
cwtl
and
je
insb
mov
xchg
ret
cli
xlat
lret
xor
ds
rorb
loop
inc
and
push
adc
jp
or
mov
xor
dec
fs
fadds
stos
shl
lock
inc
add
pushf
mov
or
les
inc
mov
fcomps
mov
push
test
add
adc
cmp
or
add
test
push
jp
cmp
sbb
outsb
movsb
mov
sahf
insb
inc
sub
inc
lock
adc
negb
fs
mov
xor
neg
pop
adc
add
inc
or
xchg
push
cli
test
add
mov
push
push
js
sub
mov
sbb
cld
mov
sbbb
cli
sbb
cmp
dec
clc
outsb
push
pop
out
add
loop,pt
aad
lods
inc
ljmp
ljmp
mov
sbb
pop
cmpb
jp
jp
mov
adc
xor
push
add
dec
ss
or
andl
inc
sbbb
adc
mov
push
push
test
inc
push
add
pop
inc
push
or
mov
push
pop
call
inc
mov
push
and
ss
sub
dec
sahf
push
sbb
fld
and
dec
scas
push
or
dec
mov
push
adc
sub
inc
xchg
aam
and
orb
add
xor
inc
fimull
inc
cltd
pop
adc
push
fdivs
dec
jbe
dec
scas
cs
cmp
cld
cs
cmp
sbb
subl
or
scas
push
dec
inc
rclb
inc
cmp
in
xchg
mov
jo
dec
inc
inc
shrb
dec
jo
xor
sub
and
js
and
pop
xchg
dec
add
loope
lock
mov
add
loopne
xchg
push
pop
lock
adc
cmp
in
nop
pop
push
pop
push
xor
adc
ret
mov
add
xchg
insb
into
inc
addb
xchg
test
cmp
rclb
inc
roll
addr16
jo
ret
inc
loopne
sbb
test
push
pop
push
ret
cltd
adc
test
push
push
push
sub
repnz
sub
or
nop
xor
faddl
jae
mov
gs
adc
andb
inc
dec
mov
mov
and
add
sub
push
cmp
cmpb
xchg
or
inc
shr
sbb
xor
add
push
cmp
inc
xor
add
arpl
pushf
stos
jp
out
enter
xorb
movsl
test
dec
shlb
adc
inc
sub
push
enter
enter
adc
je,pn
push
and
and
mov
loop
bound
push
xchg
or
xor
push
cmp
mov
pop
push
fldcw
mov
fcoml
cmpsl
push
in
dec
push
lcall
and
and
push
sbb
ljmp
adc
dec
insb
pop
outsb
dec
out
sbb
push
fnstenv
sahf
dec
xchg
add
add
popa
out
sbb
loopne
or
and
and
loope
xchg
push
aaa
js
movsb
push
fadds
mov
cs
push
xor
inc
xor
ds
dec
push
push
sbb
cmp
push
push
adc
add
test
dec
pop
mov
cmpsb
out
aaa
xchg
incb
ljmp
push
andl
int3
push
data16
push
fwait
dec
add
clc
pop
push
jbe
inc
loope
mov
add
stos
push
push
dec
inc
or
ds
data16
push
ljmp
push
xor
ret
pusha
or
add
adc
clc
mov
or
scas
pushf
les
add
and
dec
sub
adc
fwait
xor
inc
lret
sahf
bound
loop
lret
pop
test
fildl
cmp
add
mov
adc
ljmp
cmp
sahf
push
sub
jbe
inc
inc
sub
and
sbbb
js
xor
xchg
or
pop
shl
add
pop
add
inc
addl
dec
jb
push
insl
lea
les
or
add
mov
xor
mov
pushf
pop
sbb
push
es
push
add
ljmp
cmp
sub
mov
mov
sub
cwtl
loope
idivb
cmp
in
cmp
test
dec
pushf
mov
mov
mov
xchg
add
mov
fwait
or
inc
or
sbb
loop
mov
xor
ret
sbb
inc
fiaddl
inc
into
and
mov
out
mov
push
dec
stos
xor
mov
add
rorb
movb
cmp
pop
dec
xor
shl
sbb
gs
add
cmp
and
sahf
xor
or
xor
sub
fsubl
pusha
test
or
sbb
xor
pusha
bound
or
mov
add
dec
push
dec
sbb
pop
test
call
adc
jbe
add
dec
mov
xchg
inc
cmovb
mov
or
pop
int3
pop
inc
call
and
dec
push
inc
cmpsb
js
add
cmpsb
xor
or
test
dec
pop
inc
push
add
aad
or
mov
hlt
xor
adc
push
or
mov
lods
pusha
and
push
mov
out
or
jo
ret
out
mov
adc
xchg
adc
enter
enter
adc
fdivl
test
cmpsl
fimull
xchg
push
mov
lret
jbe
mov
push
cmp
in
mov
add
push
mov
fs
push
test
jo
pusha
subb
adc
nop
dec
mov
sbb
inc
test
or
adc
sub
cmpsl
and
ljmp
ret
call
rclb
aaa
mov
mov
sub
pop
data16
outsb
hlt
push
test
xor
push
ljmp
push
sbb
push
inc
nop
pop
addb
push
or
testb
orb
js
adc
mov
dec
andl
dec
sbb
dec
and
movsb
pop
xor
cmp
xchg
push
cltd
data16
sub
add
pusha
or
pop
mov
and
push
push
dec
stos
pop
sub
lea
xchg
inc
shlb
adc
pop
mov
movsl
sub
sbb
lods
dec
xchg
lret
xchg
inc
jo
or
pop
mov
shlb
push
stos
xchg
and
out
fcmovbe
sbb
adc
push
or
ret
inc
cmp
lcall
add
ret
push
lcall
inc
pusha
pop
mov
xchg
add
mov
dec
inc
push
inc
add
and
out
sbb
xor
gs
push
pop
sub
add
inc
in
addl
fcoms
and
pusha
andl
xchg
push
adc
pusha
aam
dec
jle
xor
mov
cmpsl
dec
out
sub
mov
sahf
or
add
push
jmp
lds
cmp
dec
or
jo
push
push
pusha
mov
gs
cmp
push
hlt
andb
mov
push
pop
cmpsb
inc
push
stos
sbb
ds
xchg
or
adc
or
mov
xor
loope
push
out
inc
adc
adc
sbb
or
or
repnz
mov
in
dec
mov
cmp
out
add
cmp
xor
push
adc
sbb
inc
xor
shrb
pop
xor
xchg
inc
push
push
mov
aam
add
mov
pushw
movsb
or
lods
shll
loope
xchg
adc
mov
popa
or
mov
sbb
push
cmp
imul
mov
or
push
clc
ret
ror
adcb
test
and
inc
xchg
movsb
enter
and
or
loop
fs
xchg
in
inc
dec
cwtl
or
push
nop
dec
dec
push
call
push
ret
aam
inc
cltd
cltd
clc
cmp
ficomps
jo
push
jb,pn
xchg
fcoml
test
ds
mov
inc
push
outsb
sbb
ret
pop
pushf
inc
dec
cltd
sub
scas
sub
push
subb
mov
xchg
les
jbe
add
ljmp
fiadds
lods
push
inc
loopne
cmp
hlt
js
sub
xor
push
inc
jo
adc
sarb
or
dec
jle
call
or
inc
sub
push
xor
push
xor
xor
xor
cmp
cmp
fadd
dec
mov
int3
test
xchg
bound
inc
andb
and
add
stos
adc
xor
add
or
ss
call
mov
push
ficompl
cltd
inc
repnz
dec
and
or
outsb
bound
inc
loop
sub
cltd
cld
cld
push
ss
xor
dec
lods
push
imul
cmp
jb
pop
nop
imul
and
pop
sbb
dec
dec
mov
cwtl
sub
fdivl
lods
pop
sbbl
repnz
dec
pop
adc
push
fimull
ss
call
dec
aam
xor
sarb
mov
sub
adcb
leave
popa
xchg
ljmp
mov
pop
nop
inc
loope
xchg
push
or
mov
les
push
lret
adc
cmp
shll
cmp
out
dec
cmp
inc
dec
les
sub
ss
push
mov
gs
call
out
pop
out
mov
jo
loop
jo
daa
mov
ds
jb
sbb
dec
movsb
adc
push
scas
sub
dec
dec
mov
gs
lret
xor
and
jo
lea
lods
insb
cltd
adc
sub
pop
xchg
mov
mov
adc
dec
inc
incb
mov
push
insb
xor
sbb
push
add
add
dec
aam
mov
push
xchg
pop
dec
adc
or
pop
mov
movsb
fimuls
add
cmp
mov
dec
lea
mov
dec
cltd
repnz
sbb
inc
inc
inc
imul
sbb
sbb
inc
dec
lahf
add
inc
test
push
or
adc
adc
xor
or
or
jo
dec
add
les
test
loopne
inc
orb
mov
sbb
lods
inc
je
xor
mov
add
movsb
xchg
inc
mov
lret
ret
or
add
shlb
xchg
shlb
add
adc
in
int3
push
sbb
outsb
test
sbb
nop
pusha
lcall
push
outsb
push
cmp
cmpsl
gs
mov
dec
jecxz
sub
rcll
lret
sub
jb
add
pop
or
xor
idivb
dec
in
mov
in
movsb
pop
cmp
mov
shl
xor
xchg
mov
out
dec
ret
xor
xor
xchg
push
test
clc
mov
xor
jb
popf
add
call
in
dec
shlb
push
mov
lcall
pop
data16
fs
xchg
movb
insb
loopne
repnz
mov
mov
push
pushf
inc
pop
adc
push
dec
mov
pop
xor
gs
and
sbb
inc
outsb
push
xchg
jb
xchg
or
rolb
fsubrs
push
adc
push
adc
push
xor
daa
addl
sbb
pop
xor
xor
aam
or
lcall
repnz
xor
sub
and
imul
cmp
push
rorb
loopne
mov
dec
xchg
dec
dec
cmp
pop
cli
cltd
jb
movsb
jo
jb
sbb
sbbb
mov
aam
dec
int3
sbb
dec
dec
enter
stos
dec
inc
sahf
push
stos
cmp
loop
div
imul
subl
les
fdivr
add
ret
dec
pop
jp
and
dec
add
add
adc
loopne
xor
cli
dec
loope
xchg
pop
sahf
xchg
adc
inc
int3
out
inc
add
test
sub
xchg
add
popa
add
rcl
or
adc
dec
pop
or
inc
xor
ds
loop
pusha
outsb
pop
or
test
xor
inc
rcrb
inc
enter
loopne
cwtl
jecxz
add
call
adc
dec
pusha
adc
repnz
mov
and
cmp
sub
in
in
fimull
test
xor
jp
inc
add
adc
sbb
push
shlb
inc
and
lret
push
test
out
insb
or
mov
aaa
push
int3
xor
cmp
and
cli
dec
push
lret
sub
adc
aam
xchg
pushf
pop
cmp
dec
lret
inc
sub
mov
sbb
lcall
mov
pop
xchg
js
or
or
or
movsb
dec
out
push
cs
mov
sbb
jo
xor
sbb
cmp
add
cmpsb
xchg
push
and
sbb
aam
xchg
dec
inc
push
xor
xor
dec
ret
push
hlt
sahf
xor
pusha
xor
movb
aaa
sbb
push
fcoms
add
xchg
sbb
aad
dec
push
inc
fdivl
jbe
inc
inc
ljmp
inc
xor
adc
inc
mov
mov
push
xor
and
adc
cwtl
ljmp
push
inc
pusha
add
and
push
shrl
inc
lret
push
push
adc
inc
mov
mov
push
xchg
xor
dec
pusha
xor
dec
rclb
pop
push
and
ss
inc
sbb
pop
inc
hlt
or
js
add
add
xchg
xchg
add
xchg
sbb
jbe
push
add
pop
xchg
out
loopne
push
add
push
lock
add
push
push
push
loop
dec
add
or
xor
sub
mov
add
stos
add
sub
or
pop
add
imul
shrb
push
jp
mov
xchg
sbb
jp
pop
inc
dec
icebp
mov
xchg
pop
jo
push
lcall
dec
push
xor
dec
jo
inc
and
pop
lret
divb
clc
test
jb
fiaddl
pop
add
popa
es
ljmp
cmp
add
setae
jp
push
push
or
test
pop
sub
dec
int3
test
adc
xor
outsb
mov
xor
mov
fs
call
pushf
cli
andl
movsl
wrmsr
dec
push
or
cmp
dec
inc
mov
add
adc
add
mov
or
mov
loop
dec
outsb
add
clc
lods
ljmp
jle
or
pop
xchg
mov
ret
jl
js
inc
and
xor
aaa
lods
dec
push
cs
cwtl
pop
push
outsw
or
call
sub
adcl
dec
sub
inc
mov
stos
sub
cwtl
mov
and
adc
mov
bound
fs
inc
sbb
sub
add
or
lods
or
push
data16
xor
add
cmpsb
push
and
dec
push
call
and
fsts
inc
stos
push
push
push
xor
sub
sub
in
ret
mov
and
inc
cwtl
inc
adc
popa
xchg
jle
cli
dec
sbb
xchg
pop
push
in
inc
or
sub
je
fsubr
dec
int3
inc
add
dec
addb
add
xorb
imul
push
cmp
popa
push
jmp
jne
sub
js
pop
cmp
push
sub
inc
sub
mov
or
in
xchg
ret
add
add
mov
adc
mov
in
lock
mov
sub
sub
xchg
xchg
rcl
sub
jp
push
loop
push
sbb
repnz
loop
jb
push
faddl
or
mov
push
cmp
push
or
adc
xor
xor
add
cmpsl
add
push
dec
sbbb
pusha
mov
mov
adc
mov
hlt
push
inc
je
dec
outsb
sub
xchg
adc
and
add
rorb
mov
pop
mov
cmp
add
xchg
sbb
push
cmp
clc
lods
cmpsb
adc
fidivrl
pushf
sbb
adc
jp
mov
sbb
mov
or
dec
inc
cmp
cld
adc
lret
dec
out
cwtl
dec
xchg
push
or
inc
nop
xchg
stos
clc
inc
sarb
mov
inc
sub
cld
or
push
pop
push
ds
sbb
jo
adc
loopne
and
pusha
orb
and
mov
add
sbb
add
aam
adc
fidivl
rcrb
xor
lret
inc
sbb
ret
add
ljmp
sarb
push
inc
sbb
and
scas
xor
int3
pop
jle
xor
dec
adc
cs
cmp
and
pushf
mov
xorb
inc
push
cltd
sbb
mov
xchg
dec
and
mov
test
xor
dec
or
push
xor
mov
push
sbb
xor
mov
test
lods
cltd
call
ljmp
rolb
dec
mov
lock
test
mov
pop
mov
sub
stos
pushf
xor
ret
pop
loopne
add
rorl
add
mov
dec
push
cmpsb
sbb
mov
or
mov
push
sbb
lods
jbe
lods
dec
inc
adc
pusha
and
pop
lret
adc
outsb
inc
xchg
inc
lods
or
in
inc
add
and
add
dec
xor
mov
pop
dec
or
cmp
push
data16
push
add
mov
loope
repnz
xor
pop
push
dec
push
adc
inc
dec
in
data16
out
arpl
sbb
cmp
inc
add
int3
lods
inc
inc
sub
mov
incb
gs
int3
mov
rolb
dec
xor
fdivl
loop
testb
mov
outsb
push
cmp
push
rorb
pop
push
mov
xchg
mov
mov
inc
cmp
xchg
sub
xor
call
add
or
mov
adc
pop
es
mov
ret
ljmp
enter
mov
inc
push
test
dec
inc
mov
lret
test
stos
xchg
sbb
pop
push
jb
ficoms
inc
in
mov
xor
pusha
rolb
push
repnz
sub
dec
adcb
sarb
dec
pop
inc
call
mov
or
cld
dec
cmp
jo
addb
fimuls
sbb
push
push
pop
cmp
inc
dec
inc
push
sub
pop
pop
mov
mov
enter
rclb
es
add
fcompl
jp
ss
inc
add
mov
enter
and
add
push
das
xchg
add
and
adc
add
sahf
sub
andb
push
mov
add
mov
pop
ljmp
inc
push
mov
aaa
movsl
push
cmp
mov
inc
push
push
dec
adc
add
mov
lods
xor
lock
xor
xor
push
mov
fsubrl
and
push
inc
mov
xor
add
dec
stos
add
add
jmp
inc
push
dec
push
ss
inc
sahf
dec
xor
or
lret
or
sub
or
insb
es
xor
pop
mov
xchg
jo
stos
enter
and
cs
pushw
cwtl
xor
inc
inc
push
inc
inc
mov
sbb
dec
push
insl
cld
out
xchg
xchg
pop
enter
nop
add
in
es
out
push
gs
loopne
sti
mov
push
push
int3
or
xchg
mov
pushf
call
ficompl
test
rcrb
in
jecxz
or
lcall
jb
mov
and
inc
push
ret
push
dec
sub
fs
dec
mov
mov
push
popf
push
push
fdivrl
clc
into
ret
rol
addb
or
push
push
jecxz
mov
dec
adc
add
fcomps
add
and
jae
inc
and
mov
add
add
add
in
or
fimuls
push
xchg
aaa
inc
mov
clc
mov
bound
out
and
mov
cld
or
pop
cmp
dec
shll
push
push
add
and
mov
sahf
and
or
and
test
incb
aam
int3
mov
pusha
or
dec
adc
adc
in
push
shlb
dec
mov
push
in
in
xor
pop
add
xor
push
add
push
mov
cmp
out
dec
xchg
mov
push
fadd
push
sahf
add
dec
sub
inc
pop
movsb
push
push
inc
or
cmpl
xor
add
or
or
test
pop
fwait
orb
lcall
xor
pop
in
fiaddl
lock
or
xchg
test
push
adc
jbe
add
inc
nop
sub
sub
js
jmp
pusha
sahf
incb
adc
push
bound
or
push
or
cltd
fistpl
inc
and
dec
movsl
pop
cmpsb
dec
clc
into
dec
push
fisubrl
cmp
adc
sub
popa
and
or
dec
sbb
xor
dec
es
cmp
dec
push
dec
and
ss
cmpsb
push
xor
xchg
mov
xchg
sbbl
dec
jo
jp
cs
push
or
dec
and
lcall
call
mov
enter
push
out
push
outsb
pop
outsl
enter
inc
adc
adc
movsb
and
shrb
add
add
sbb
mov
shrb
sub
or
xor
sbbl
adc
imul
hlt
and
orl
jb
and
shlb
or
push
test
add
aam
add
in
and
jl
xchg
popa
test
jb
push
in
xchg
adcb
push
cmpsb
push
push
or
cltd
mov
push
imulb
lods
dec
mov
xor
or
mov
addb
xor
mov
push
inc
dec
js
xor
inc
dec
popa
push
or
lods
xchg
push
es
add
push
adc
xchg
mov
or
ret
pop
cmp
je
inc
mov
xor
adc
sbb
js
pop
inc
inc
sbb
ror
dec
dec
or
xchg
fwait
sbb
test
testb
inc
adc
push
js
push
roll
decb
fiaddl
xor
pop
clc
mov
dec
adc
adc
mov
mov
pop
mov
pop
bound
jb
add
push
outsl
add
rolb
xchg
jo
gs
lock
and
pop
mov
mov
and
mov
adc
sub
mov
adc
fmull
jl
push
xchg
ljmp
js
push
xor
inc
xor
adc
add
outsb
xor
push
sbb
mov
inc
addl
sbb
push
add
fstps
hlt
xchg
jb
xor
das
and
sahf
cwtl
dec
jbe
xor
push
lods
ds
ror
and
pop
in
shrb
cmp
dec
pop
dec
and
and
lret
jge
gs
cmp
icebp
mov
push
inc
cmp
stos
int3
les
ror
xor
push
push
sub
sahf
or
es
adc
adc
push
sbb
mov
and
sbb
and
sbb
mov
xchg
inc
push
add
shrl
xchg
jle
lcall
xchg
ljmp
dec
lods
dec
pop
in
pop
adc
pop
jb
push
rclb
mov
adc
cltd
mov
cwtl
xor
pop
add
xorl
cmp
jecxz
xor
les
lret
pusha
xor
rclb
xchg
jb
clc
push
xchg
xor
cmpb
inc
xor
fcoms
mov
xchg
mov
dec
in
add
or
inc
dec
pop
push
add
or
add
sahf
xchg
aam
and
mov
cwtl
loope
mov
add
insb
pop
bound
push
push
lock
shlb
mov
xor
jle
inc
ljmp
adc
pop
fwait
add
push
jo
push
and
mov
add
out
lret
sbb
enter
dec
stos
into
push
xchg
inc
xor
orb
cmp
xchg
push
insb
push
in
testb
push
enter
cmp
pop
inc
je
and
dec
xchg
fisubs
aam
add
and
sbb
popa
sarb
aaa
mov
test
leave
add
inc
pop
fstpt
add
scas
push
xchg
xchg
aam
sbb
mov
or
mov
insb
cmp
bound
test
dec
and
dec
cmp
jbe
jbe
or
push
mov
inc
mov
lret
pop
xchg
pop
dec
and
sbb
bound
cmp
dec
push
push
lcall
xchg
test
mulb
pop
mov
mov
adc
jbe
dec
pop
xchg
pop
xor
adc
or
push
mov
idiv
xor
or
xchg
pusha
xor
ds
fmuls
add
add
inc
or
mov
jl
xor
dec
rolb
cli
aaa
or
or
cwtl
or
and
xor
cmpsl
movsl
jo
push
cmp
jp
push
inc
xchg
adcb
sahf
pusha
push
inc
test
add
sub
lret
and
xor
mov
push
dec
lret
lock
add
pushf
inc
les
pop
inc
push
cmpb
xor
cmp
mov
inc
inc
push
dec
and
push
rclb
add
cmp
mov
push
mov
popa
es
call
xor
push
in
pop
dec
mov
jne
jle
cs
xor
jl
add
mov
or
and
pop
dec
and
or
and
mov
data16
jo
mov
inc
sarl
push
mov
je
or
or
or
xchg
inc
shlb
jecxz
inc
xchg
adc
adc
push
cmp
or
mov
dec
pusha
mov
jo
test
rorl
push
xor
push
pusha
push
jmp
pusha
push
sbb
xchg
popa
push
js
jp
cltd
cmpb
ret
sbb
fwait
js
mov
sbb
ret
mov
movsl
xchg
ret
push
mov
mov
jo
inc
andb
leave
lods
aaa
out
rorb
sub
sbb
ret
adcl
movsb
out
add
inc
xchg
pop
outsb
notb
and
inc
aam
sub
into
dec
aaa
bound
call
pusha
and
sahf
shlb
pop
adc
cwtl
inc
adc
mov
sbb
fimuls
sbb
popa
pop
push
xor
cmp
add
xor
scas
push
cli
hlt
and
test
movsb
push
and
test
push
in
dec
dec
rclb
or
in
push
sub
push
xor
cmp
aam
dec
test
ret
cmp
dec
sub
pop
ret
pusha
mov
dec
aaa
xor
inc
pop
push
pop
dec
insb
dec
mov
and
inc
adc
dec
inc
or
add
mov
push
outsb
xor
sub
pop
xor
in
clc
in
add
icebp
test
inc
cld
sbb
xchg
or
mov
and
pop
add
loop
dec
sahf
data16
mov
adc
xchg
push
push
lods
cltd
xor
les
mov
mov
dec
inc
test
push
dec
imul
loop
lret
adc
cmp
mov
jno
add
dec
cmp
mov
xchg
jo
pushf
dec
push
movsb
cmp
dec
mov
mov
pop
push
dec
mov
add
pusha
loop
pusha
and
adc
test
int3
nop
jp
call
add
test
add
sub
aad
xor
mov
mov
and
test
orl
inc
imul
popa
mov
xor
mov
dec
pop
jb
push
add
pusha
cmp
and
fadd
repnz
mov
js
mov
xchg
pop
test
inc
adc
adc
loopne
hlt
stos
lret
orb
push
cmp
dec
pushf
pop
mov
cwtl
int3
and
int3
push
rcrb
push
inc
adc
inc
movsb
xchg
hlt
nop
fsub
or
repnz
adc
fadds
xor
dec
add
push
fcoml
sub
mov
mov
or
cltd
gs
or
cwtl
lcall
dec
push
cwtl
lods
sbb
jb
adc
xor
dec
rolb
cwtl
inc
pop
push
adc
and
sbb
xor
mov
push
enter
mov
loopne
es
xchg
adc
sahf
test
add
fmull
ljmp
scas
and
xchg
dec
clc
add
popa
add
into
adc
mov
pusha
int3
xor
push
cmp
xchg
movsb
test
stos
jbe
inc
clc
xor
mov
dec
int3
pop
dec
and
or
sbb
lds
mov
push
cmp
js
and
fs
adc
test
faddp
add
mov
lret
sarb
test
xor
jmp
insb
push
sub
push
test
popa
cmp
loopne
and
adc
xchg
call
and
shr
es
pusha
bound
enter
and
and
sub
adc
mov
dec
or
mov
dec
pusha
cmp
rcl
js
fisttps
mov
shr
and
push
in
xor
cs
mov
add
push
mov
clc
jo
inc
aam
sub
js
cmp
cmp
mov
push
mov
jle
inc
mov
enter
inc
arpl
sub
pop
add
mov
jae
cmp
loopne
scas
xor
fidivs
push
pop
push
lds
insb
cmp
and
mov
fmuls
movsb
ds
cmpsl
add
pop
pop
or
or
mov
add
add
lret
mov
test
pop
xor
shlb
outsb
jle
mov
xchg
movsl
es
rol
inc
dec
sbb
sbb
mov
pop
pop
cmp
ss
jp
int3
and
out
xor
xchg
xor
pop
scas
push
sub
xchg
inc
movsl
outsl
testb
test
dec
xor
cltd
orb
push
out
dec
sbb
aam
test
loop
jle
inc
ret
mov
insb
pusha
push
pop
aam
push
dec
repnz
add
inc
dec
cmp
and
clc
sbb
add
jb
inc
xchg
dec
fdivrl
ret
pop
inc
mov
lods
int3
lods
insl
inc
cs
inc
fiadds
mov
xor
loopne
stos
inc
lods
xchg
cltd
sub
push
lcall
mov
add
js
and
cmp
push
and
adc
xchg
inc
xchg
push
inc
ret
insb
fs
sub
inc
and
adc
or
push
add
xor
ljmp
pop
add
cmp
test
loopne
les
mov
ss
inc
mov
test
loopne
add
xor
pop
xor
mov
mov
push
add
push
xchg
nop
aaa
movsb
and
lcall
inc
cmp
push
sbb
or
aam
lret
cmp
subb
loopne
pusha
aam
add
cmp
pushf
gs
mov
and
cld
test
add
addb
and
test
mov
cld
mov
inc
inc
cld
rclb
repnz
inc
sbb
add
lret
subb
adc
lcall
inc
sbb
or
push
pop
rorb
mov
or
in
lret
in
cwtl
sub
mov
and
lret
xchg
xor
cwtl
or
inc
mov
push
add
lret
and
xorb
aaa
aaa
add
jbe
hlt
inc
push
dec
dec
jecxz
add
xor
stos
clc
movsb
adc
mov
add
push
and
pop
lcall
dec
test
in
dec
in
add
mov
nop
inc
adc
pop
shlb
add
and
push
inc
inc
xor
and
mov
jbe
push
cmpsb
test
add
dec
fnstenv
xor
mov
test
or
cmpsb
add
inc
subb
pop
scas
pop
add
dec
push
jb
inc
xchg
sahf
mov
cwtl
xor
mov
push
push
jl
bound
andb
push
mov
subb
pop
jbe
sbb
xchg
pop
fs
dec
int3
jb
mov
and
inc
inc
dec
adc
scas
inc
push
pop
sub
cmp
xor
movsb
cmp
mov
mov
sub
test
cmp
or
adc
cwtl
orb
xchg
add
xor
stos
cmp
add
push
loopne
mov
js
and
xor
fdivrl
xchg
adc
or
lcall
inc
aaa
push
daa
into
loop
fcompl
and
mov
insb
adc
or
je
mov
sub
adc
push
inc
or
ret
shl
sbb
inc
dec
mov
sub
aam
cmovs
les
sbb
mov
mov
and
dec
rolb
or
outsb
mov
push
sbb
dec
add
adcb
xor
sbb
cmp
into
mov
les
inc
inc
dec
or
and
movsl
enter
lcall
mov
fldcw
fstps
test
hlt
loopne
or
xchg
andb
jb
sbb
sbb
inc
adc
push
scas
pop
xor
or
add
dec
or
or
or
xor
cmp
and
jp
ss
add
xor
mov
push
add
ror
sub
cli
fdivs
inc
pusha
out
rclb
mov
push
pop
xchg
jne
mov
ljmp
data16
jae
out
inc
dec
hlt
xor
pop
subb
test
lods
pop
enter
push
xor
pop
pop
pop
rclb
nop
cltd
inc
and
xchg
enter
xor
cwtl
popa
mov
bound
inc
lcall
pushf
pop
add
inc
cwtl
gs
jp
mov
testb
sbb
dec
outsb
xor
xor
pop
xchg
adc
inc
aaa
sbb
dec
or
jae
mov
or
inc
movsb
and
adc
xor
or
testb
add
addl
mov
push
push
loop
inc
fs
stos
mov
xor
mov
xor
xorb
dec
sbb
aaa
test
inc
add
js
push
adc
and
jb
or
xchg
mov
add
sbb
or
pop
sub
aaa
pushf
push
je
adc
xor
cmp
inc
pop
pop
dec
xchg
cmp
shlb
sub
call
xchg
mov
addl
push
sbb
xor
xchg
movsb
adc
cmp
pusha
xchg
push
stos
or
mov
adc
push
add
and
test
xor
cltd
sub
mov
adc
cmpsb
xchg
hlt
pusha
loope
or
push
or
or
mov
movsb
sub
test
dec
push
inc
sar
shl
xor
cmpb
or
stos
cs
and
add
rolb
xor
sbb
pushf
push
aam
jb
clc
xor
into
xor
sub
add
and
dec
xor
cmp
sbb
mov
adc
lcall
mov
lock
xchg
fdivs
add
ret
push
push
test
inc
data16
push
xchg
inc
pop
mov
add
int3
or
test
mov
xchg
test
mov
mov
push
sub
push
jb
and
leave
and
pushf
jl
adc
dec
neg
xor
or
loop
mov
or
lret
roll
adc
adc
push
sbb
push
lcall
or
jp
mov
ds
adc
pop
inc
lret
xor
xor
inc
cmp
or
inc
add
ret
sub
inc
sub
rcr
adc
dec
inc
xchg
dec
push
lret
sbbl
adc
jae
ret
sub
pusha
push
fs
orb
es
dec
or
shrb
xchg
pop
test
roll
cmp
xchg
ret
adc
stos
cmp
les
sub
insl
or
sbb
aam
push
and
xor
mov
inc
and
es
lret
xor
in
xor
lcall
sahf
pusha
mov
dec
outsb
lret
imul
dec
add
sbb
or
test
dec
call
mov
ljmp
sbb
test
ret
ret
lcall
and
push
xor
fiaddl
or
adc
or
cltd
push
data16
mov
add
and
popf
sub
mov
mov
sbb
xor
or
sbbb
mov
loop
cmpsl
andl
inc
dec
add
mov
inc
hlt
push
cmpb
and
or
sbb
pop
dec
xchg
orl
inc
movsb
add
push
or
add
add
sub
jno
adcb
or
xchg
mov
jb
push
mov
test
and
dec
dec
es
mov
push
dec
push
adc
mov
and
mov
xor
cwtl
pop
ficoml
clc
adc
pop
lret
popf
jb
push
dec
inc
fadds
rcr
in
dec
clc
movsb
xchg
dec
xor
aam
inc
add
sub
jle
lret
or
outsb
xor
ss
dec
bound
popa
in
push
or
adc
or
cs
push
js
dec
lcall
in
add
jl
cmpsb
or
push
add
mov
dec
push
dec
and
sbb
pop
adc
cmp
shlb
mov
mov
cmp
push
push
push
adc
bound
dec
inc
testb
xchg
add
mov
gs
sbbb
sbbb
cli
loopne
stos
sar
push
pushf
mov
loop
ss
or
nop
mov
pop
inc
jecxz
adc
movsb
pop
inc
add
or
lods
pop
clc
aaa
mov
push
test
movsl
cmp
out
adc
test
dec
adc
push
mov
and
inc
cmp
and
pop
shr
pop
sub
or
scas
cmp
shll
les
push
adc
sbb
xor
cld
scas
push
into
pusha
xchg
and
add
xchg
jno
add
xchg
adc
push
sub
data16
mov
or
dec
leave
lods
and
subb
xor
test
jb
cmpsb
sbb
inc
aam
push
xchg
rorb
push
inc
add
dec
loope
jp
imul
pusha
add
and
push
aam
fildl
jecxz
add
rcrb
mov
sub
loopne
adcb
dec
push
pusha
test
aaa
cmpsb
jle
sub
les
push
push
cmp
add
popa
push
push
scas
pop
jbe
cwtl
aam
xchg
xor
leave
add
add
fdivs
test
inc
sub
clc
push
dec
pop
and
mov
push
xchg
dec
and
xchg
inc
in
sarl
xlat
fs
pop
or
clc
loopne
dec
scas
ss
cmp
jmp
test
push
push
inc
dec
pusha
dec
mov
xchg
adc
jmp
dec
aad
adc
hlt
dec
and
xor
jo
add
data16
pop
push
add
es
ds
mov
in
hlt
xor
xchg
push
xor
dec
add
mov
dec
fs
mov
and
add
fidivs
rcrb
or
pop
mov
int
xor
ljmp
jl
rorb
sbb
loopne
ret
jae
test
jle
inc
xchg
cmp
sbb
int3
cmpsb
movsb
jo
push
mov
aaa
dec
pop
inc
cltd
mov
ret
adcl
adc
and
mov
dec
test
mov
pop
jbe
sub
sbb
xor
mov
mov
jp
add
mov
sub
hlt
adc
sbb
in
jp
inc
cltd
ljmp
dec
and
push
cli
xor
scas
adc
shrb
mov
mov
dec
loopne
dec
add
mov
jo
or
and
push
mov
dec
and
pop
sbb
push
ret
or
push
xchg
enter
add
pop
inc
lret
cmp
sahf
xchg
test
pop
push
rolb
mov
sub
or
je
ret
dec
dec
cmp
dec
dec
push
sbb
xorl
mov
mov
mov
incb
ds
int3
in
add
pop
add
pop
rorb
inc
add
xor
mov
rol
push
push
push
cmp
inc
push
andl
mov
cmp
push
subb
lods
inc
sub
adc
jl
sub
loope
lods
add
dec
fadd
mov
lock
inc
mov
insb
fistpl
dec
or
cmp
ret
push
xchg
xor
sbb
sbb
popf
mov
push
jb
xor
lret
addb
xor
mov
add
ret
mov
cli
xchg
inc
push
daa
fadds
cs
push
inc
jl,pn
xchg
dec
popf
xchg
push
cmpsb
faddl
dec
or
mov
push
aam
or
pusha
sbb
ss
xchg
sahf
loopne
mov
mov
mov
jo
icebp
jno
pushf
xor
pop
and
push
inc
push
pop
inc
fbstp
les
inc
pop
pop
xor
add
add
mov
ss
dec
xor
mov
push
and
fimuls
adc
les
push
cmp
cmp
cmpsb
push
add
adc
push
xor
aad
jle
inc
je
add
push
inc
sub
mov
mov
movsl
adc
xor
xor
les
or
adc
lock
pop
push
inc
movsl
mov
data16
inc
and
xchg
and
inc
je
clc
mov
jo
cs
cmp
mov
into
push
cwtl
dec
nop
add
cwtl
sbb
inc
pop
push
sub
mov
dec
insl
or
mov
loope
and
push
or
mov
sbb
and
sbbl
xor
adc
inc
push
insb
pop
pushf
rol
lcall
and
push
push
mov
int3
inc
xor
xor
or
push
mov
in
push
lret
cmp
rcrb
movsl
dec
movsb
xor
add
enter
push
sub
pop
scas
lret
pusha
testb
dec
and
aam
pop
and
and
rcl
mov
adc
scas
js
popa
roll
or
push
js
push
fcoms
movsb
test
xor
or
mov
push
addb
sbb
mov
popa
addb
sub
popa
mov
push
jne
push
lret
sbb
and
mov
call
add
dec
cwtl
out
and
push
test
inc
rclb
dec
and
or
fisubrl
pop
inc
or
xchg
xorb
xor
pop
js
test
mov
xchg
push
jbe
add
popa
or
andl
inc
sub
bound
cwtl
lret
data16
xor
add
or
movsl
test
aaa
sbb
xchg
push
xchg
cmp
inc
xchg
shlb
es
push
xchg
out
sbb
data16
xor
dec
cli
jle
enter
outsl
or
xchg
xor
enter
pop
ss
in
ret
mov
cmp
xchg
dec
adc
test
mov
or
aaa
adc
insb
inc
gs
and
pop
push
lods
or
push
daa
ret
out
mov
in
push
pushf
inc
or
push
int3
push
lods
mov
testb
adc
and
shlb
out
sbb
inc
pop
orl
adc
or
xor
adc
ds
movsb
xchg
dec
mov
shrl
or
sarl
add
cmp
repnz
inc
and
push
sub
pop
add
ret
adc
out
and
mov
xchg
gs
xchg
enter
dec
mov
xchg
mov
and
mov
lock
pop
push
sahf
fmul
sbb
or
inc
xchg
inc
push
int3
loope
ret
mov
push
clts
cmp
add
jl
sub
fidivrl
mov
xor
and
xor
mov
xor
or
add
loopne
sbb
xchg
mov
dec
inc
adc
int3
fs
je
push
dec
push
push
add
mov
dec
shlb
orl
cmp
adc
mov
push
xchg
inc
sub
adc
mov
inc
jb
xor
push
cltd
je
xchg
push
add
cmp
and
xor
sub
cmp
stos
inc
pop
xchg
test
hlt
add
mov
add
inc
ss
adc
add
xor
adcb
aaa
loopne
lods
nop
cmp
xchg
inc
mov
inc
les
sub
enter
int3
stos
mov
jl
pop
xor
lods
enter
jmp
pop
push
pop
ljmp
sub
es
sub
les
aam
mov
or
or
push
add
xor
xor
add
cli
cmpsb
mov
int3
and
push
push
mov
ret
push
dec
mov
pop
jo
add
mov
add
mov
inc
inc
es
imul
lcall
shlb
jo
cwtl
addl
push
jo
sub
pop
and
fwait
xor
adcb
add
xor
push
push
pop
dec
pop
pop
or
rcll
push
inc
mov
and
xchg
xchg
orb
repnz
dec
data16
push
fs
pop
movnti
inc
and
insb
inc
rclb
push
test
mov
lea
je
dec
dec
addb
fstps
pop
push
xchg
add
pop
ret
push
cwtl
bound
nop
dec
mov
sbb
push
sbb
push
dec
int
mov
dec
and
sub
xorb
adc
ret
dec
or
add
push
cmp
inc
xor
es
addr16
push
sub
es
xchg
aam
cmpsb
add
ss
pop
add
and
pop
dec
mov
lcall
lret
inc
cs
clc
js
nop
int3
nop
or
or
inc
push
add
or
dec
dec
stos
addl
fs
add
cmp
push
test
add
int3
xchg
and
es
je
test
dec
shll
and
mov
jbe
stos
add
add
lret
pop
push
pusha
push
push
clc
andb
and
cmp
dec
and
ret
cmpsl
bound
pop
cmp
lcall
add
sbb
push
push
add
mov
cmpsb
push
and
pop
add
sbb
mov
push
popa
push
sbb
cmp
xchg
not
ret
orl
fadds
dec
dec
adc
xchg
sbb
les
or
and
cli
mov
arpl
ret
adc
shlb
sub
dec
pop
fiaddl
mov
mov
ficoml
mov
xchg
xchg
or
inc
test
mov
push
push
mov
test
and
fidivrs
push
sbb
adc
int3
cmp
jecxz
xor
and
outsb
stos
dec
dec
cmp
insl
add
cld
jbe
pop
data16
jb
pushf
sbb
adcb
or
or
inc
cmpsl
test
mov
scas
adc
popa
mov
xor
or
ficoml
scas
dec
push
mov
fidivs
rorb
or
mov
push
adc
mov
lods
imul
jp
xchg
scas
mov
xchg
mov
pop
mov
cmp
pop
add
dec
call
mov
mov
pushf
les
adc
adc
add
les
ret
aaa
insb
pop
dec
popa
adc
or
bound
jb
and
push
xor
pop
sbb
xchg
enter
mov
pop
pushf
scas
push
push
cmp
dec
fdivs
and
push
jne
xchg
repnz
mov
sbb
add
or
dec
dec
insb
mov
dec
sub
or
add
push
pop
imul
pop
push
les
adc
push
and
stos
lret
inc
add
jle
sbb
push
rcll
or
push
jp
loope
xchg
enter
and
jecxz
stos
ds
mov
add
or
add
test
lds
push
xor
dec
pop
cmp
and
ss
and
push
adc
rcrb
inc
mov
push
subb
fisubl
lods
int3
push
dec
cmpsb
fisubl
push
push
inc
xchg
dec
and
insl
and
push
inc
inc
push
int
data16
sbb
pop
bound
push
in
inc
mov
mov
pop
mov
je
xchg
add
dec
inc
adc
inc
js
cwtl
push
push
dec
lods
mov
lea
mov
and
inc
es
lods
insb
sub
stos
push
cmp
ljmp
pusha
aad
ret
xor
mov
cld
push
adcb
sbb
ficoms
rorl
sub
popf
adc
inc
sahf
fsubl
aam
or
cltd
push
inc
jp
dec
sub
out
mov
rcrb
and
xchg
dec
inc
or
imul
xorb
test
int3
dec
test
add
cmp
xor
add
movsl
push
sub
lcall
sub
loopne
push
or
push
push
test
adc
test
sbb
mov
movsl
add
add
cltd
addl
aaa
mov
jmp
pop
push
je
pop
ret
adc
test
dec
ds
les
sbb
sbbb
adc
jne
xchg
stos
cld
ljmpw
xchg
inc
lods
xchg
inc
mov
dec
sub
enter
xchg
je
xor
jo
lcall
mov
add
lock
inc
test
or
pop
xchg
nop
dec
add
pushf
add
mov
loopne
call
rclb
jo
data16
push
lods
or
in
mov
add
xor
inc
and
fisubs
pop
or
sbb
das
loop
mov
xor
inc
push
push
push
xor
loopne
mov
cmc
dec
stos
adc
ret
and
enter
xor
lret
xchg
shlb
cmp
jp
push
sbb
cmpsb
cmpsl
and
and
push
lods
cmp
add
pop
fs
pop
ljmp
add
mov
cli
or
inc
xor
push
ret
jae
mov
sbb
clc
add
push
add
push
stos
testb
push
lods
enter
mov
push
xor
xchg
inc
push
call
test
cwtl
dec
cmp
inc
inc
dec
and
imul
pop
sub
sahf
test
inc
enter
rolb
xchg
je
pushf
rorb
sbb
adc
lret
add
pop
lcall
mov
pusha
sahf
sbb
push
pop
xor
push
inc
enter
xchg
cwtl
push
rcrb
push
inc
fs
mov
stos
dec
xchg
push
inc
inc
repnz
mov
inc
test
fadds
sub
sub
dec
add
mov
inc
xchg
ret
dec
out
sbb
ret
add
sbb
dec
into
and
in
mov
call
or
popa
push
sub
mov
mov
push
jmp
or
add
jle
adc
and
bound
fwait
orb
xor
pop
test
fdivl
add
adc
scas
sarb
bound
xchg
mov
jo
ljmp
cmp
xor
mov
in
ret
cmp
add
ljmp
ret
mov
scas
jb
adc
rcrl
xorb
int3
scas
mov
cmp
push
dec
test
int3
add
xor
pop
es
imul
inc
cwtl
adc
push
sbb
nop
test
dec
xor
invd
mov
xchg
add
xor
adc
sbb
loopne
jbe
sbb
push
insb
xor
xchg
xorl
inc
aam
push
test
or
sub
adcb
push
mov
inc
add
inc
dec
aam
ret
jl
push
xchg
test
lcall
xor
cltd
mov
push
pop
js
jl
mov
dec
pusha
lock
sbb
sbb
test
xor
xorb
cs
xchg
adc
xchg
push
movsl
adc
push
js
xor
or
add
shlb
inc
inc
sarl
ss
shlb
mov
cmp
dec
inc
xor
add
add
pop
add
leave
xor
and
and
mov
mov
inc
dec
cwtl
add
adc
add
add
jo
outsb
dec
dec
inc
inc
or
pop
or
addl
or
xor
sub
xchg
rorb
xor
test
scas
fdivrs
and
es
lds
aam
xor
ret
dec
sbb
stos
shll
inc
in
xor
add
push
adcb
xor
cmp
and
sub
cli
cmpsb
or
stos
dec
js
or
pop
fcomps
add
mov
hlt
mov
push
mov
inc
push
dec
inc
pusha
test
sbb
orb
push
dec
aam
mov
mov
cmp
sbb
insb
cmp
fs
mov
and
testb
adc
xchg
enter
loopne
aaa
in
mov
test
and
test
shl
and
mov
push
push
into
push
pop
xor
inc
loopne
add
inc
pusha
adc
sbb
xchg
add
or
subl
mov
adc
pusha
xor
pusha
add
add
push
add
sub
pop
fmull
push
or
ss
cmp
add
cmpsb
xchg
adc
push
mov
cmpsl
adc
dec
mov
mov
xor
rorb
sbb
inc
cmp
movsb
subb
ss
repnz
dec
test
out
cmp
bound
or
push
jne
add
cli
push
test
icebp
or
pop
xchg
add
sbb
xor
and
rcrb
or
mov
cmpsb
hlt
or
xchg
mov
or
sahf
jbe
inc
pop
rol
push
scas
xor
and
xor
ret
dec
ret
js
dec
outsl
add
add
xor
adc
pop
inc
dec
push
sbb
and
cld
popf
or
sub
push
sub
or
sbb
out
mov
pusha
cwtl
xor
dec
dec
cmovs
jo
mov
xor
ror
data16
sbb
xchg
sbb
aam
adc
push
loopne
xchg
add
inc
dec
add
and
imul
aam
sub
mov
call
push
adc
inc
and
or
int3
insb
pop
mov
fadds
dec
xchg
addb
mov
adcl
test
and
ffree
inc
cld
call
push
dec
out
rorb
lea
cmp
xor
pop
mov
fsub
sbb
inc
adc
cld
lock
loope
xor
cmp
and
cmp
dec
inc
orb
or
cmp
addb
xor
push
xchg
data16
push
xor
adc
xchg
dec
rolb
incb
data16
cmp
daa
popa
and
in
and
cwtl
in
mov
data16
gs
push
jbe
cmp
sub
popa
and
lret
dec
test
sbb
dec
enter
xchg
adc
push
inc
xchg
gs
ret
dec
mov
outsb
in
outsb
pop
sbb
jle
push
dec
stos
dec
add
ljmp
cli
fs
mov
dec
push
and
fwait
sbbb
inc
insb
push
mov
xor
sub
xor
cmp
or
mov
andb
mov
dec
cwtl
push
test
dec
aam
bound
out
push
sbb
mov
gs
sub
subb
push
mov
or
movsl
jo
out
insb
inc
xor
aaa
ss
icebp
sub
and
adc
ret
pop
lods
roll
mov
xchg
shlb
push
xchg
push
push
inc
jb
xchg
push
add
xor
sub
sub
jecxz
add
inc
int3
or
pusha
sub
add
rolb
test
les
adc
sub
addb
dec
rolb
add
jns
add
in
push
inc
inc
sbb
test
es
push
dec
sub
stos
ret
and
bound
or
sub
adc
or
dec
sbb
sbb
inc
adc
push
inc
dec
ljmp
dec
cmp
adc
and
jne
bound
lods
cmp
pop
mov
loop
lret
adc
push
or
ljmp
jbe
push
clc
and
sbb
inc
pusha
mov
ror
or
loopne
mov
add
push
addb
jl
dec
cmp
or
sahf
add
pushf
icebp
push
cmovb
lret
dec
mov
cli
inc
rorb
sub
adc
cmp
and
push
dec
pop
lcall
sub
rcrl
dec
cmpsb
mov
lret
subb
inc
push
out
mov
mov
cmp
inc
mov
faddl
mov
fadds
add
xchg
push
xchg
xchg
push
mov
or
cmp
cmpsb
ljmp
sar
adcb
add
mov
mov
mov
xchg
pusha
cmpsb
cwtl
fidivs
add
dec
fisttpl
push
mov
into
xchg
in
leave
test
mov
sarl
dec
popa
inc
imul
dec
xor
mov
or
aaa
cmp
cmp
cmp
add
call
push
mov
mov
fisubrl
hlt
xor
les
dec
lcall
lock
mov
insb
hlt
xchg
add
sub
mov
dec
inc
sub
dec
and
or
ds
and
aaa
sahf
test
push
ss
movnti
pop
mov
and
enter
add
push
enter
add
mov
xor
or
jbe
add
sbb
adc
outsb
ret
pusha
pop
mov
inc
mov
or
and
mov
movsb
mov
push
mov
add
or
inc
inc
les
inc
and
movsb
notb
je
pop
mov
push
push
push
dec
mov
enter
movsl
and
cmp
aam
pusha
and
adc
dec
add
in
arpl
mov
sub
and
sub
insb
jp
sbb
add
xor
add
insb
lcall
fidivrl
lcall
cmp
mov
inc
fimuls
cmpsb
xor
jl
adc
xor
jp
add
inc
xchg
push
xor
mov
lcall
push
pop
jb
lea
out
and
add
xchg
pusha
mov
pusha
mov
shlb
nop
lret
fadd
nop
and
push
push
sub
loopne
loope
sbb
push
pop
push
add
das
movsl
and
aaa
pop
mov
jp
pop
data16
add
loopne
mov
mov
dec
push
lock
mov
dec
add
add
and
call
and
xchg
inc
dec
jle
cmc
sub
loope
and
or
dec
xchg
cwtl
adc
int3
xchg
dec
push
push
sub
mov
adc
jl
and
sbb
add
mov
adc
xor
xor
cmpsl
inc
jecxz
xor
xor
orb
cmp
cmp
dec
push
mov
or
add
in
adc
push
jo
cltd
rcl
cs
shlb
lods
pusha
dec
push
dec
jb
test
xchg
add
or
hlt
mov
sub
add
sub
or
lods
int3
inc
nop
pushf
pop
clc
inc
pop
cmp
add
ss
inc
enter
incb
jo
in
clc
add
add
inc
mov
js
enter
and
xchg
jo
add
xchg
add
pop
and
inc
add
pop
mov
xor
inc
sbb
in
adc
insb
dec
dec
cmpsb
mov
bound
or
outsb
in
out
sub
add
aam
xchg
cmp
test
xchg
dec
add
mov
dec
adc
pushf
inc
and
inc
ss
push
or
mov
adc
cli
mov
nop
fsubl
loopne
dec
push
xor
push
mov
idivb
jo
xor
inc
sarb
cmp
cmp
shl
jbe
jl
stos
ret
cmp
or
fsubl
add
mov
adc
cmp
push
adc
cld
push
dec
jne
sub
dec
pop
push
loope
lods
jb
adc
sbb
scas
push
mov
js
add
xchg
loope
push
xor
es
jl
sbb
rcrb
int
std
aam
dec
cli
aaa
cmp
add
sub
dec
mov
adc
mov
add
ret
repnz
or
or
push
lods
sbb
jbe
je
or
shll
adc
and
xchg
xor
into
dec
cmp
sub
or
and
adc
mov
movsb
xchg
sbb
shlb
add
mov
and
loopne
cmpb
ret
or
dec
outsb
pusha
mov
push
iret
inc
sbb
repnz
test
mov
int3
push
dec
loop
inc
xor
add
or
push
inc
mov
sbbb
mov
dec
dec
dec
shll
pop
sbb
js
adc
enter
adc
inc
inc
and
push
jle
call
test
mov
push
push
loopne
cmp
xchg
push
or
movsb
les
ret
dec
add
rcll
mov
inc
pop
push
inc
pop
test
push
fsubl
mov
add
cmpsb
rclb
pusha
push
adc
push
gs
gs
xor
call
add
mov
xor
push
push
test
dec
push
lcall
push
xor
je
mov
ror
sbbb
outsb
or
pushf
dec
add
ss
ret
xor
pop
or
insb
xchg
add
xchg
test
push
mov
and
sahf
inc
into
push
mov
cmpsl
and
push
and
xchg
nop
xchg
push
scas
cmp
out
rclb
adc
xchg
dec
adc
mov
cs
dec
jecxz
jb
mov
loopne
inc
ljmp
outsb
mov
adc
jo
push
xor
add
dec
jp
sbb
mov
into
mov
adc
xor
xchg
jbe
adc
dec
pop
push
lock
add
dec
arpl
shll
pushf
mov
sub
dec
mov
push
mov
push
xor
fsubrs
xor
dec
push
leave
lods
add
mov
sub
jb
dec
dec
inc
sub
data16
lret
lret
sub
cmp
popa
and
adc
mov
adc
push
outsb
inc
mov
xchg
pushf
pop
dec
and
mov
shl
mov
ss
orb
shr
push
fmuls
push
xor
sbb
or
loopne
mov
lods
and
and
push
dec
or
enter
or
add
push
push
inc
rclb
popf
sbb
mov
ret
stos
xor
into
add
jl
xorl
dec
les
addl
in
faddl
movsb
in
pusha
inc
sub
adc
loopne
pop
dec
and
jne
push
dec
mov
add
cs
inc
dec
es
xor
push
pop
cld
and
add
ficoms
and
sub
dec
dec
jo
dec
cmpl
inc
fcoms
int
xchg
pop
push
push
pop
sbb
leave
push
ljmp
mov
dec
popf
sub
adc
cltd
cmpsb
aam
mov
inc
jae
addb
adc
sub
pushf
fcompl
xchg
push
aam
shlb
or
ljmp
inc
ljmp
push
push
adc
xchg
sarb
sbbl
add
js
cmp
adc
clc
sbb
adc
and
aaa
andb
insb
repz
xor
int3
xor
pusha
push
inc
in
xchg
jb
push
pusha
inc
es
adc
xchg
xor
xchg
addb
cmp
icebp
xor
jb
clc
test
fisubl
fisubrl
ret
sub
mov
cmp
cmp
push
xchg
dec
mov
mov
xor
leave
aam
jb
jb
xor
adc
ss
dec
inc
or
push
xor
add
add
cmp
sub
xor
mov
inc
les
dec
fsubrl
adc
xchg
pop
mov
dec
or
jle
loop
and
jb
inc
in
adc
shlb
in
xor
push
add
dec
fwait
pusha
push
sub
mov
xor
decb
add
ljmp
adc
mov
push
sbb
jne
xor
lret
leave
pusha
xor
sub
inc
push
int3
push
inc
add
mov
or
fs
sahf
dec
loop
add
xchg
jge
or
nop
dec
aaa
xchg
push
xor
add
xor
or
mov
cmp
jo
push
sub
inc
add
popa
push
sbb
nop
popa
add
shlb
int3
push
jp
pushf
es
or
pop
inc
ret
je
xor
jo
shll
mov
loop
xchg
adc
mov
and
js
pusha
insl
ret
das
xchg
adc
ret
mov
or
lods
nop
sbb
loopne
js
mov
adc
stos
jo
add
pusha
xchg
sbb
imul
mov
mov
add
test
jb
sub
pop
js
mov
addb
push
adc
inc
lret
push
xchg
adc
jo
jbe
sbb
mov
push
adc
adc
sub
push
push
int3
dec
xor
and
push
add
movsb
xor
push
and
xchg
add
nop
call
push
xchg
dec
jb
or
xor
lret
dec
mov
and
pop
add
popa
das
mov
shll
pop
enter
mov
xchg
adc
xor
scas
mov
push
cmpsb
cmp
and
inc
test
scas
push
push
and
sbb
hlt
dec
rcll
push
and
in
in
mov
mov
cld
push
aad
sbb
jo
cld
sub
add
inc
mov
pop
sub
in
xchg
aam
pop
cmpsb
dec
xchg
xor
xor
pushf
cwtl
sub
inc
dec
mov
aaa
popa
nopl
movsb
add
adc
shrb
pop
inc
cmpb
cs
inc
push
sbb
fimull
xor
push
and
pusha
and
clc
jmp
loopne
push
adc
nop
jo
js
cwtl
push
inc
pop
pusha
xor
push
test
jb
clc
fs
push
sub
dec
negb
adc
pop
inc
lret
mov
inc
add
pushf
mov
movb
sbb
push
int3
add
or
test
add
pushf
cmp
fwait
or
inc
pop
and
mov
push
mov
and
jle
push
sbb
add
jl
sub
test
mov
dec
adc
pusha
out
je
dec
push
adc
mov
dec
mov
notb
stos
xor
add
add
dec
loop
mov
jno
dec
idivb
lret
adc
fsubs
pusha
es
jno
dec
stos
sahf
add
push
faddl
push
push
add
xchg
shlb
inc
or
dec
jl
test
ss
dec
sub
repnz
ljmp
push
jo
lods
cmpsb
dec
dec
and
loopne
popa
xchg
scas
aad
inc
and
push
inc
movsl
inc
addb
pop
sub
ss
xor
or
inc
mov
mov
stos
sub
adc
inc
mov
push
jo
shl
cmp
pushf
or
addl
xor
gs
xorl
loopne
push
test
stos
hlt
xor
cmp
cmp
or
stos
sbb
sub
lcall
pop
sbb
sub
mov
push
adc
push
mov
sub
inc
add
jb
pop
sub
push
xor
dec
mov
or
and
loopne
lcall
dec
ficomps
stos
mov
loopne
xor
jmp
pop
push
xor
add
test
and
inc
mov
ss
xchg
dec
inc
or
push
jl
inc
or
adcl
sbb
sarb
sub
mov
js
push
pusha
les
dec
test
and
or
xor
sbb
add
cwtl
test
dec
rolb
add
jno
inc
jp
rorb
add
test
pop
add
mov
mov
xchg
jb
pop
pop
push
andl
mov
add
pop
mov
sub
dec
add
fcoml
mov
xor
pop
insb
lcall
push
dec
adc
ror
lods
cltd
test
bound
push
xchg
xorb
inc
gs
dec
fiaddl
sub
or
sub
adc
gs
outsb
push
pop
in
inc
add
sbb
aam
inc
xor
xor
push
mov
leave
sub
mov
lret
adc
xchg
dec
mov
push
xor
int3
adc
jb
mov
bound
cmp
loop
pop
adc
jo
push
les
xchg
mov
sub
ds
lods
or
cwtl
and
xchg
lock
sbb
add
sbb
popa
adcl
pop
mov
mov
inc
sarb
inc
and
fmul
in
cmp
push
pop
pop
movsb
xor
sbb
push
dec
lret
test
mov
fs
inc
add
push
leave
int3
xchg
mov
dec
sbb
add
rorb
popa
cmpsb
adc
int3
xchg
popa
and
jo
add
aad
mov
jle
dec
mov
mov
mov
pusha
nop
or
int3
fmuls
xor
inc
test
dec
and
test
dec
push
lods
sub
xchg
lods
sbb
mov
push
inc
mov
decb
test
outsb
ret
dec
or
lods
dec
push
sub
aam
ljmp
xchg
mov
push
rol
push
push
sahf
add
je
inc
sar
loopne
mov
xor
xor
lcall
ss
pop
xor
sub
dec
sub
push
fildl
mov
cmp
scas
jl
and
xor
add
push
lret
jbe
cmp
or
ss
dec
loopne
or
hlt
inc
sahf
mov
dec
xchg
sub
sbb
push
inc
and
js
pushf
xchg
mov
jae
cmp
push
lret
add
sub
push
xor
adc
addb
inc
cmp
jp
dec
dec
and
dec
cwtl
mov
fisubl
dec
lock
and
cld
lcall
es
jne
or
sub
js
sbb
or
lcall
add
out
inc
mov
add
add
inc
test
push
cltd
out
sbb
pop
or
adc
push
pop
or
pop
ss
push
lods
mov
sbb
push
test
clc
or
and
jae
add
dec
push
out
add
rolb
cmp
loop
je
or
add
or
stos
sub
xor
pop
adc
mov
dec
xor
and
add
test
push
mov
xchg
jb
and
cmpsb
test
inc
adc
sbb
add
and
je
mov
dec
dec
ljmp
pushf
mov
test
and
inc
fwait
pop
or
stos
pop
push
xor
add
inc
sbbl
jp
mov
sbb
dec
hlt
and
rorb
and
fcom
push
sbb
xor
add
pop
mov
or
xchg
outsb
pop
test
xorl
cmpsl
aam
pop
data16
movb
xor
loopne
lcall
push
adc
xchg
stos
mov
inc
and
out
insb
sbb
xchg
push
inc
pop
lods
push
insb
xchg
in
pop
mov
jle
push
into
push
push
je
lock
sbb
jle
aaa
push
inc
inc
cltd
xchg
int3
dec
inc
ret
add
push
dec
mov
and
xor
pop
adcb
add
add
mov
pusha
cwtl
inc
push
lcall
pop
pushw
mov
xchg
mov
jo
pop
and
mov
and
mov
mov
push
inc
pusha
sbb
es
and
int3
dec
ljmp
cmp
jnp
or
movsl
rcrl
mov
add
decb
inc
enter
popa
out
and
sbb
push
pushf
lods
inc
and
into
mov
les
mov
push
cmp
nop
dec
and
mov
and
lock
xor
andl
mov
and
jo
push
dec
in
push
hlt
call
cmp
ss
mov
test
les
sub
or
push
dec
or
push
dec
or
or
push
shrl
cmp
or
xchg
pop
out
dec
js
adc
jp
mov
insb
subb
dec
sahf
ret
orb
sub
jo
adc
xor
mov
in
mov
sbb
xchg
or
add
add
xor
xchg
movsb
mov
xorb
pop
xor
adc
push
add
dec
divb
mov
adc
shll
rolb
test
add
xchg
aam
inc
pop
add
xchg
loop
or
cmpsl
jne
pop
inc
mov
mov
subb
dec
inc
push
dec
ss
inc
and
add
add
or
pop
add
sub
inc
cld
dec
xchg
sbb
jle
mov
fs
adcl
mov
mov
sub
push
pushf
mov
jb
dec
pop
inc
inc
sub
xchg
inc
cmp
and
dec
pusha
xchg
nop
push
sbb
es
test
pop
stos
stos
nop
ret
call
inc
push
mov
cmp
dec
push
sbb
mov
sub
xchg
xchg
jb
inc
rclb
adc
mov
rol
shlb
test
sbb
pop
cli
ret
or
and
push
sub
cld
test
xchg
test
nop
call
stos
cmpsb
mov
jle
js
and
orb
add
out
xor
mov
dec
pusha
ret
cmp
add
inc
movsb
push
sub
inc
orb
adc
add
dec
cwtl
push
xchg
mov
pushf
sub
sub
addb
xor
sub
inc
add
mov
es
xor
pop
cld
pop
rorl
dec
xchg
jo
test
xor
addb
ret
mov
xchg
cmc
adc
cli
sbb
cmp
mov
mov
dec
addb
rolb
fcompl
andb
or
push
scas
add
test
or
mov
mov
push
add
sbb
or
imulb
adcl
dec
push
inc
mov
movsl
pusha
fcom
arpl
push
push
fisubs
push
rol
int3
pop
clc
and
jne
dec
pop
ss
xchg
sete
add
sbb
loope
or
dec
add
xchg
sub
xchg
addb
add
lret
dec
pop
xchg
add
dec
inc
xor
dec
and
out
enter
fucomi
cs
test
adc
cltd
mov
or
push
hlt
dec
pop
hlt
add
sbb
js
mov
cmp
add
movsb
pop
cmp
pop
adc
adc
xor
and
pusha
or
mov
call
pop
xchg
test
ds
push
inc
xor
or
in
mov
add
jnp
mov
xchg
push
shlb
sbb
pushf
jb
mov
add
ds
add
or
add
adc
inc
xchg
jbe
hlt
insl
mov
pop
add
or
mov
cmp
cmp
popa
pusha
cmp
add
adc
or
out
jo
add
unpcklps
or
dec
loop
cmp
inc
or
sbb
je
mov
xor
pop
push
ret
sarb
and
gs
sbb
or
or
xor
pushf
xchg
push
dec
sub
ret
sbb
loopne
mov
add
sub
sub
or
loop
add
xchg
push
inc
xchg
or
pushf
push
cmp
cmp
popa
sub
enter
add
add
rorb
mov
fdiv
add
or
je
add
jmp
test
or
and
pop
cmp
push
mov
pop
pop
repnz
dec
mov
xchg
push
adc
dec
popa
mov
jle
push
aad
test
push
fcoms
xchg
test
ret
lcall
add
add
into
push
fsub
addb
bound
nop
les
rcl
int3
xchg
dec
mov
mov
xchg
inc
xor
xor
push
sub
xor
adc
adc
outsb
dec
sub
adc
add
push
gs
icebp
push
lcall
push
pop
lods
mov
pop
dec
push
or
mov
insl
cmp
insb
push
loope
shrb
into
or
movsb
rorb
pop
add
push
push
mov
xor
dec
push
lret
adc
sbb
xor
pop
push
dec
je
or
pop
adc
push
dec
push
loopne
mov
les
in
xor
pusha
test
dec
notb
jb
or
outsl
mov
xor
cmp
push
ds
loop
mov
push
push
inc
scas
pop
xchg
pop
fsubr
push
dec
push
outsb
xor
sbb
push
pop
or
or
bound
dec
jp
push
jo
scas
jl
lret
or
cmpsb
sub
or
or
adc
sbb
cmp
adc
ds
rorl
adc
and
mov
dec
cwtl
enter
mov
push
nop
push
fsubl
insb
test
dec
push
and
insb
inc
xchg
push
xchg
scas
lcall
pop
xchg
mov
mov
int3
xor
inc
test
les
pop
cmp
or
cmp
xor
mov
adc
or
test
adc
add
cmpsl
add
sarb
lret
inc
and
sub
and
mov
adc
pusha
sbb
adc
lret
inc
add
adc
ffree
ficoms
mov
enter
push
lock
ficoml
sbb
or
or
test
inc
stos
rcr
cs
out
sub
cmpl
adc
cld
cli
adc
jmp
pop
enter
in
or
inc
cmp
push
mov
insl
or
push
sahf
dec
or
lcall
cmpsb
stos
mov
push
inc
adc
clc
sbb
bound
xchg
push
nop
mov
push
push
adc
dec
mov
nop
dec
dec
rorb
and
mov
inc
and
inc
sbb
clc
addb
xor
xor
xor
xor
loopne
inc
or
push
add
jmp
test
push
loopne
add
xchg
add
xor
and
lea
cwtl
dec
sub
xchg
ret
adc
sbb
jl
outsb
cmp
dec
pop
sub
sbb
jo
pusha
ds
push
es
clc
cmpsb
sbb
gs
sbb
push
sbb
adc
mov
enter
cmp
outsb
mov
loope
add
mov
ret
and
adc
xor
sbb
subb
mov
inc
test
sbb
xor
add
mov
sub
es
test
data16
outsl
pop
push
xchg
dec
mov
test
push
loop
inc
je
mov
or
add
outsb
push
gs
nop
xor
inc
test
mov
adc
xchg
push
push
sbb
dec
adc
jo
adc
mov
sahf
xor
dec
adc
test
and
ficoms
xor
cmp
push
data16
push
aam
pushf
es
mov
lock
cmpsb
stos
sbb
cwtl
push
sub
xorl
or
pop
xor
add
je
popa
dec
add
fsubrl
cmpl
sub
pop
sub
ds
call
xchg
adc
adc
out
inc
sub
inc
pop
jb
rclb
data16
pop
push
pop
mov
or
push
push
fsubl
mov
popa
sbbb
add
xor
adc
push
push
pop
cmpsl
rolb
adc
sahf
cmp
adc
dec
add
cmp
int3
push
push
ret
dec
mov
adc
inc
nop
or
xor
adc
sarl
mov
and
sbbl
sbb
cmp
pop
test
cld
push
dec
ror
imulb
test
jle
mov
xor
pop
jp
push
add
inc
xor
and
insb
ss
das
or
test
push
or
add
cmp
push
xchg
sbb
xor
sub
cmp
cwtl
pop
mov
mov
inc
xchg
clc
add
adc
push
push
int3
and
sub
es
sahf
mov
xor
dec
adc
inc
sbb
pop
ja
sub
push
pushf
push
cltd
rcll
inc
add
bound
cmp
rorb
or
push
mov
ljmp
pop
fs
inc
in
jo
cmpsb
sub
enter
shlb
andl
mov
cld
dec
fsubs
xor
inc
or
hlt
xor
rol
add
push
pushw
mov
push
pop
mov
scas
mov
rcrl
add
or
inc
scas
add
push
dec
sbb
push
push
dec
xchg
mov
cltd
or
mov
dec
and
enter
xor
push
es
inc
data16
test
orb
clc
dec
call
data16
or
fisubl
or
and
xchg
xchg
les
sbb
pop
cld
imul
test
add
xor
mov
dec
xor
pop
adc
aam
ss
inc
pop
bound
push
lret
mov
data16
inc
popa
ss
jb
adc
add
push
push
xor
int3
mov
dec
dec
sub
stos
push
cltd
scas
mov
adc
adc
adc
gs
sub
push
dec
pop
sub
xor
xor
pop
inc
repnz
sub
push
push
xor
cmpsb
insb
in
scas
sub
addl
dec
sub
test
cmpsb
inc
push
push
lret
es
dec
sahf
xorb
pop
xchg
and
inc
push
push
lds
push
dec
je
push
cmp
pop
fdivs
mov
xchg
xchg
adc
insb
push
dec
add
and
and
cmp
ret
push
xor
xor
pusha
sub
adc
push
cmp
add
data16
jbe
pop
or
shl
inc
xor
stos
lcall
inc
push
orb
loopne
inc
movsb
cmp
icebp
jle
mov
inc
nop
dec
fs
fmuls
xchg
and
dec
cmp
nop
fidivrl
add
jo
xor
je
mov
test
mov
push
lcall
pop
add
add
mov
dec
add
add
in
pop
add
push
test
add
jo
test
jo
and
pop
and
push
push
push
adc
pop
in
xor
add
test
cmpsb
xchg
enter
mov
xchg
scas
mov
xor
jo
ret
in
push
and
push
pop
dec
outsb
cwtl
mov
loope
and
shl
xchg
mov
faddl
ss
add
xchg
mov
mov
int3
hlt
fiaddl
push
dec
xchg
mov
jbe
lret
xchg
add
dec
and
inc
sub
adc
push
jo
add
lods
imul
dec
adc
mov
mov
lret
push
sub
cs
inc
mov
sbb
fwait
inc
sbb
mov
dec
sbb
xchg
add
pop
movsb
mov
dec
sub
fwait
shlb
mov
hlt
inc
in
sub
xor
or
arpl
xchg
pop
jbe
fcoml
adc
dec
add
push
dec
lret
and
mov
and
adc
rorl
movsb
xor
add
or
dec
adc
pop
test
or
add
lret
mov
push
test
mov
ds
or
pushf
mov
xchg
jne
cmp
mov
jb
pop
inc
sbbb
sbbb
add
push
movsb
mov
xchg
sub
pusha
jo
dec
ljmp
mov
aad
movsl
pop
in
dec
aaa
sbb
fcoms
xor
dec
add
sbb
xor
push
movb
mov
and
push
adc
xchg
addb
inc
fs
jl
in
dec
mov
cs
and
sbb
dec
ret
or
adc
sub
push
lea
sub
adc
jo
cli
les
loopne
push
out
mov
push
pop
in
mov
add
rorb
push
mov
and
xor
nop
movsb
ret
or
sbb
rolb
rolb
adc
xchg
fmul
inc
xchg
jmp
xchg
sbb
rolb
add
cs
sbbb
lods
xor
orl
adc
outsb
or
cmp
cmp
dec
into
lock
xor
faddl
loopne
popa
sbb
push
dec
xchg
inc
test
or
test
push
mov
xchg
and
xchg
mov
ss
test
sbb
dec
adc
push
adcb
in
dec
sub
mov
inc
mov
ret
ret
and
roll
cmp
pushf
nop
xor
int3
dec
xchg
sub
xchg
add
or
nop
les
pop
js
pop
and
sub
inc
test
pushf
push
rol
xor
shlb
inc
sub
cmp
cwtl
mov
pushf
out
push
inc
sub
cmp
push
in
test
inc
cs
cs
xlat
fs
mov
jl
inc
sbb
cld
dec
dec
inc
sub
aad
subb
aam
add
inc
cwtl
rcr
nop
inc
and
or
lret
inc
rol
inc
ss
or
push
ret
pop
inc
jo
lret
inc
push
xor
or
out
dec
xchg
push
test
test
pop
nop
call
xchg
sbb
mov
inc
or
and
xchg
dec
subb
or
xor
mov
dec
jp
es
adc
movsl
shrb
shlb
xor
lret
push
xor
aaa
add
int3
sbb
lock
repnz
lock
dec
insb
sbb
mov
and
or
pop
dec
and
test
into
lcall
push
dec
stos
cmp
xchg
rolb
push
inc
jb
sub
sahf
leave
inc
cmp
inc
xor
scas
sub
test
into
inc
nop
das
imul
aam
rorl
data16
cmp
cmpsl
and
je
dec
push
adc
call
adc
stos
fcoms
xor
adc
pop
and
cmp
and
and
loop
sbbb
mov
cli
inc
pop
pop
mov
inc
add
push
inc
xchg
sub
push
hlt
or
xchg
ret
or
push
sbb
cltd
add
push
inc
ret
inc
gs
les
push
xchg
pop
or
and
out
xor
xchg
jb
pusha
adcb
sbb
sbb
cmp
es
sub
sbb
mov
cmp
call
adc
jb
dec
jne
pop
mov
add
and
jle
jo
loope
into
adc
xor
addb
rorb
adc
lret
cmpb
xor
push
dec
and
test
je
jae
push
pop
adc
dec
pusha
mov
mov
add
dec
cmp
ss
add
dec
mov
pop
push
add
or
rolb
add
ret
pop
and
dec
push
popa
add
cs
dec
xor
pusha
js
cs
push
mov
xchg
mulb
fmuls
push
push
add
scas
add
mov
enter
or
jl
pop
inc
inc
sbb
ss
xor
adc
push
inc
push
cs
lods
xor
pushf
sbb
shll
xor
js
data16
cmp
inc
fidivs
add
stos
rolb
adc
cmpsb
mov
pop
pop
sbb
and
dec
sbb
aam
mov
or
inc
out
xchg
xor
adc
hlt
mov
pusha
cmp
mov
icebp
hlt
shlb
xor
push
data16
stos
call
lret
xchg
sbb
xor
repnz
mov
cs
or
and
dec
rclb
dec
cwtl
mov
data16
mov
sub
push
inc
in
dec
mulb
or
cmp
test
pusha
out
push
adc
ret
sbb
sbb
mov
in
jbe
add
and
dec
dec
into
inc
sbb
push
inc
inc
clc
pop
fstl
pop
dec
fidivs
add
add
mov
add
pop
mov
call
xchg
icebp
adcb
push
jo
pop
push
sub
fidivrl
inc
mov
adcl
or
and
dec
cmp
js
xchg
orb
push
or
mov
popa
cmpsb
inc
loop
jp
push
xchg
into
adc
fdivl
inc
fidivrl
push
xor
ficoml
aam
test
addr16
enter
test
in
push
inc
dec
xor
push
mov
inc
data16
mov
push
xor
cld
or
mov
pop
hlt
or
push
push
xor
dec
fstps
xchg
adc
xor
dec
lds
push
inc
lock
js
fs
pop
fs
adc
xor
leave
popa
test
pop
push
pop
add
dec
xchg
bnd
push
and
sbb
aaa
dec
xor
xchg
aam
cmp
lret
mov
push
test
pop
adc
mov
ss
cmp
mov
adc
pop
mov
gs
cli
and
inc
adc
movsb
in
sub
pop
mov
xor
insb
and
xor
inc
push
cmp
and
mov
or
sahf
mov
or
mov
add
cs
les
nop
sbbb
cmp
pop
pop
clc
add
adc
insb
mov
cmp
dec
add
dec
push
dec
sahf
cld
arpl
push
bound
pusha
sbb
fiaddl
sbbb
dec
cli
sbb
add
adc
and
fiadds
fisttps
call
rclb
mov
or
cmp
pop
xor
cmpsb
xchg
xchg
inc
sub
subb
mov
mov
jb
in
outsb
mov
adc
cmpsb
dec
popa
xor
les
push
daa
and
sub
cmp
shrb
xchg
repnz
xor
or
sahf
or
pop
push
jbe
add
cmp
cwtl
add
push
pop
xor
fmull
push
call
sbb
fwait
rol
xor
add
sahf
fdivs
xchg
cs
mov
mov
cmp
jecxz
es
jne
mov
dec
add
xchg
ss
or
adc
fdivs
adc
orb
adc
pushf
and
rcl
jo
test
inc
mov
add
xor
test
daa
jle
cs
je
stos
inc
mov
jb
movsb
jl
sbb
xchg
popa
xor
pop
adc
cli
dec
les
sub
mov
add
sahf
pop
int3
pop
sub
jbe
dec
add
add
inc
xor
push
mov
xchg
adcb
inc
and
lcall
add
inc
sbb
addl
push
add
sbb
lret
push
fnstenv
or
movsb
jb
sbb
add
test
pop
pop
adc
xorb
and
lret
sahf
mov
les
stos
pop
push
mov
adc
clc
inc
and
insb
sub
push
xor
dec
test
xor
mov
xor
add
inc
adc
imul
fldlg2
mov
and
and
add
inc
rcrb
fsubrl
xor
pop
mov
inc
inc
mov
aam
daa
ss
mov
mov
inc
mov
pop
je
xor
es
and
pusha
xchg
sbb
mov
cmp
cwtl
adc
lret
inc
cmp
dec
inc
pop
test
adcl
or
faddl
rorl
scas
bound
inc
push
sbb
inc
test
loopne
dec
adc
ret
push
int3
dec
lock
cmp
dec
push
bound
xchg
add
scas
dec
mov
mov
outsb
add
dec
test
add
loopne
inc
push
dec
mov
rol
in
push
stos
add
jp
mov
into
cmpb
push
lea
xchg
sbbb
rolb
add
nop
fs
daa
gs
test
cmp
inc
xchg
adc
loopne
cli
mov
mov
and
ret
addb
clc
xchg
rol
lods
pop
cli
dec
mov
mov
mov
addl
inc
gs
aam
andl
and
decb
adc
dec
adc
adc
inc
or
pusha
movb
xor
push
inc
add
dec
push
mov
or
dec
inc
add
mov
lcall
test
xchg
lcall
push
sub
sub
mov
dec
pop
fcoml
fsubrl
mov
push
sub
loope
jecxz
xor
push
rorl
xor
add
inc
add
mov
rcrb
andb
or
or
clc
add
inc
out
push
sub
mov
mov
roll
sub
inc
loope
int3
sub
mov
add
ljmp
pusha
xor
mov
nop
push
mov
push
push
push
add
dec
jle
ljmp
test
push
push
pop
test
push
sbb
fdiv
inc
xor
dec
inc
addr16
imul
out
xor
push
sbb
adc
dec
fadd
roll
push
nop
dec
call
dec
push
mov
or
dec
inc
lock
xor
test
mov
out
mov
push
cld
xor
js
rcll
sarb
sub
test
pop
xor
inc
mov
es
rcll
cmpsb
cmp
xor
mov
push
push
cli
arpl
gs
cli
aaa
pop
adc
jl
loopne
and
push
jp
xor
jecxz
insb
push
xor
pop
dec
icebp
push
xchg
in
lock
add
pop
in
push
inc
push
and
rolb
int
xor
mov
dec
push
inc
popa
xchg
sbb
imul
andb
xor
sti
mov
xchg
rolb
adc
add
adc
push
xor
sub
add
out
sahf
mov
inc
mov
nop
or
sbb
data16
cmpsb
fcoml
add
dec
push
out
push
inc
push
and
pusha
push
xor
xchg
mov
dec
movb
inc
add
add
lret
or
lret
repnz
sub
lahf
sbb
cmp
push
mov
inc
inc
enter
xor
ret
sub
xchg
js
inc
dec
shrb
add
dec
sbb
mov
ss
sbb
mov
stos
pop
les
lods
test
hlt
add
call
bound
xchg
adcb
fs
and
ficoms
pusha
ss
imul
push
cmp
fidivrl
mov
cwtl
and
sub
push
sbb
dec
rolb
dec
insb
rcrl
xchg
add
xor
xchg
dec
inc
sub
mov
mov
cmpsb
adc
xor
leave
cmpsb
cmp
mov
inc
push
dec
push
or
pop
add
cli
ss
loop
push
mov
mov
jle
inc
int3
inc
jae
mov
ja
mov
inc
mov
arpl
test
jo
add
inc
pop
or
push
and
loope
rorb
aad
or
adc
xor
xor
cwtl
loop
xchg
dec
mov
dec
shrb
add
ret
sbb
clc
add
testb
lcall
dec
jo
sbbb
loop
xor
xchg
fdivrs
inc
andb
test
lods
mov
xchg
cmp
pop
popa
push
cwtl
sub
mov
xchg
in
push
mov
ss
insl
test
inc
sbbl
test
nop
mov
or
dec
and
jp
adc
je
mov
add
push
sub
inc
or
cmpsb
push
sub
cld
or
push
inc
add
jmp
adc
call
add
test
inc
inc
sub
cmp
pop
orb
fsubrp
mov
icebp
mov
push
enter
test
loop
outsl
jl
jo
dec
pop
cwtl
sbb
add
xor
push
sbb
sub
or
ret
add
xor
insb
adcb
pop
js
addb
push
push
add
xlat
sbb
sub
bound
and
sbb
repnz
stos
add
sbb
xchg
ret
mov
subb
addb
inc
or
mov
mov
inc
push
or
or
xchg
les
push
sbb
and
xor
push
dec
inc
dec
and
loopne
and
adc
mov
out
and
add
adc
or
and
add
mov
and
adc
or
mov
shll
jb
mov
sarb
pop
push
xchg
xor
lcall
inc
add
sub
lret
pushf
xchg
push
pop
jne
ds
inc
movsb
mov
rcr
cs
sub
mov
movsl
add
icebp
nop
or
push
jae
and
inc
xchg
shlb
adc
inc
inc
cwtl
or
or
int3
fcoms
cmpsb
lcall
or
sub
out
mov
or
push
cmp
call
jo
sub
push
insl
enter
pusha
dec
adc
push
dec
dec
or
testb
dec
enter
sbb
lcall
mov
cltd
sub
popa
mov
xor
xchg
cwtl
inc
in
adc
out
movsb
dec
dec
or
mov
sbbb
xchg
or
and
lea
shlb
test
xorb
faddl
add
cmp
in
push
stos
shrb
push
pop
or
mov
lret
xor
loopne
push
push
xor
push
push
ret
and
inc
pop
and
cs
push
add
cmp
push
mov
inc
pop
or
shlb
mov
push
inc
xchg
pusha
jp
call
add
inc
push
dec
cs
pop
mov
pushf
push
arpl
sarb
add
dec
mov
add
movsb
cld
push
push
mov
add
push
adc
or
and
push
addr16
and
je
cmp
sbbb
ds
aam
mov
sub
mov
test
and
mov
test
leave
bound
ljmp
les
sbb
js
push
mov
lds
lods
rolb
xor
ljmp
pop
xor
push
or
xchg
adc
fxch
xor
xor
movsl
cmp
inc
lods
add
jl
push
xchg
orl
sub
mov
test
cli
dec
push
fisubl
stos
pop
inc
ss
and
dec
and
push
stos
and
xchg
test
dec
mov
in
incb
sahf
mov
xor
or
test
push
enter
sarb
sub
xchg
lret
inc
mov
xchg
push
adc
push
mov
mov
inc
xor
pop
inc
add
testb
adc
mov
xorb
push
or
push
bound
jge
ret
push
cmp
push
out
dec
insb
inc
lods
mov
dec
dec
mov
int3
cmp
ljmp
test
bound
pop
mov
xor
push
mov
cs
push
data16
cmp
mov
dec
dec
or
test
dec
movsb
cs
adc
mov
inc
inc
push
sbb
add
pop
add
sbb
inc
or
mov
aam
xchg
push
mov
data16
fs
jl
push
mov
data16
or
ljmp
push
add
add
test
push
mov
and
mov
push
nop
lret
xchg
add
lret
cs
mov
in
xor
shlb
pushf
into
pop
inc
nop
or
jb
dec
adc
cltd
cmp
or
push
push
mov
movsb
sub
fcoml
lcall
aam
sub
hlt
and
mov
sub
xchg
mov
mov
dec
call
or
nop
test
sbb
xor
dec
pusha
fs
xchg
add
inc
push
in
insl
add
mov
mov
jbe
inc
scas
fadds
and
xchg
push
jbe
pushf
insb
pusha
mov
xchg
pop
xor
mov
adcb
add
or
cmp
inc
es
fcoml
dec
inc
nop
sub
push
out
bound
scas
and
xchg
push
push
inc
test
sbb
push
pop
push
sub
inc
xchg
xor
push
fldl
push
mov
ret
xchg
jo
lcall
aam
andl
push
orb
or
inc
mov
mov
cmpl
pop
inc
test
pusha
jo
stos
xor
leave
mov
xor
shlb
cwtl
xchg
xchg
xchg
notb
or
pop
or
push
adc
ror
inc
or
and
mov
movsl
push
rclb
or
pop
cs
mov
mov
mov
dec
mov
push
je
sbb
lcall
mov
add
inc
mov
push
sub
inc
nop
rcrl
lret
mov
jle
movsb
inc
push
add
fs
repnz
xor
add
xchg
xchg
mov
inc
push
mov
add
push
or
pop
push
aam
xchg
sbb
scas
push
in
inc
or
push
mov
in
pop
push
jb
inc
mov
mov
out
inc
mov
mov
inc
loopne
movsb
test
mov
pop
push
adc
cmp
icebp
pusha
sub
push
or
sub
fwait
push
adc
pusha
nop
fld
push
loop
mov
lcall
adc
es
add
test
xchg
lock
xchg
mov
fisubrs
push
and
adc
pop
mov
and
mov
jo
hlt
xor
pop
enter
fs
sbb
push
xchg
sbb
lea
dec
call
or
enter
xor
dec
adcb
test
lret
xchg
and
cmp
rolb
ljmp
ds
or
mov
lea
lret
mov
jo
add
push
mov
test
push
inc
dec
gs
pop
fmull
mov
in
push
push
dec
sarl
fs
enter
nop
xchg
adc
add
mov
xor
add
mov
push
je
mov
ja
mov
incb
mov
pusha
inc
lret
lret
dec
inc
cld
movsb
sbb
sbb
dec
mov
mov
lock
push
pop
adc
inc
mov
into
push
dec
cmp
sbb
and
shrb
cmp
addb
and
mov
data16
test
dec
xor
xchg
dec
lods
js
inc
cwtl
dec
lods
sub
cs
mov
inc
subb
stos
push
dec
sub
arpl
dec
add
mov
xchg
dec
sub
xchg
lret
sbb
rcrb
or
inc
loopne
adcl
xchg
hlt
sahf
lret
cs
mov
clc
push
cmpsb
dec
mov
stos
mov
nop
shlb
jno
add
push
adc
dec
ret
or
push
inc
and
cwtl
mov
mov
pop
adc
dec
xor
mov
popf
inc
or
cmp
ret
dec
cltd
inc
nop
jp
and
mov
shll
adc
push
dec
dec
push
enter
sbb
js
or
stos
inc
xor
pusha
adc
cld
pop
xchg
test
jmp
inc
dec
cld
push
dec
or
or
sbb
cmp
mov
mov
cmp
notb
cmp
pop
fcoms
mov
subb
inc
in
xchg
sub
push
movl
or
popa
cmp
mov
push
inc
cmp
rcrb
push
lods
push
xor
call
into
lods
inc
push
adc
dec
mov
pusha
add
adc
mov
mov
xchg
dec
and
or
ljmp
push
test
rol
cmpl
pop
dec
mov
mov
test
xchg
adc
hlt
inc
aaa
int3
rcrb
ficomps
pop
cltd
sbb
lret
addb
ljmp
pusha
push
dec
add
or
sbb
xor
push
and
sahf
inc
dec
or
mov
je
push
insb
les
jl,pt
or
or
xchg
inc
xchg
jb
add
or
jle
bndldx
push
xchg
adc
inc
inc
stos
xchg
or
push
sbb
pop
dec
sub
mov
add
pop
neg
cmpsl
pusha
xchg
adc
fiaddl
dec
lret
mov
in
sub
in
out
inc
and
and
inc
mov
xor
cmp
es
or
sub
mov
data16
mov
int3
incb
mov
test
pop
sbb
ret
ror
xchg
add
inc
xchg
dec
enter
hlt
push
push
dec
call
add
fistl
outsb
shrl
xor
and
push
xchg
ljmp
push
dec
ss
adc
outsb
cmp
pushf
mov
adc
popa
inc
cmp
or
xor
adc
and
mov
push
je
inc
inc
push
pop
movb
fmuls
repnz
xor
push
movb
mov
data16
dec
or
push
pushf
or
fstps
push
push
dec
or
dec
movsb
inc
dec
inc
dec
push
into
int3
xor
and
ljmp
inc
inc
xchg
lea
push
pop
and
scas
inc
sbb
add
cld
xor
fs
mov
and
xor
xor
lods
cmp
push
or
pop
fdivrl
add
cmp
cld
ljmp
int3
xchg
pusha
cmpsl
or
push
sub
mov
xchg
jl
or
bound
add
in
jl
xor
xchg
mov
add
int3
mov
xor
loopne
sbb
mov
call
and
mov
stos
xchg
addr16
sub
roll
sbb
pop
rorb
xchg
leave
xchg
add
adc
inc
stos
mov
inc
xor
push
dec
mov
inc
add
jnp
add
mov
push
inc
push
push
sbb
dec
stos
rorb
hlt
dec
and
inc
add
nop
push
inc
xchg
aaa
add
ljmp
ds
mov
add
cmp
jae
or
lcall
or
pusha
mov
js
insb
dec
ss
add
sbb
dec
pop
addl
sbb
mov
pop
test
mov
scas
sahf
lods
pusha
add
cs
push
inc
sahf
inc
cmpsb
and
dec
mov
jb
and
outsb
jno
sbb
adc
push
adc
shl
xchg
push
inc
and
pop
pop
sub
lods
or
cmp
movsb
mov
dec
adc
pop
adc
pop
aam
xor
sub
inc
adcl
inc
and
dec
mov
push
add
and
test
xchg
outsb
pop
pop
xorb
or
dec
xor
inc
push
xor
mov
or
mov
sbb
test
adc
jnp
ret
push
enter
and
mov
mov
test
jp
insl
jne
clc
cmp
dec
add
push
ficompl
xor
out
xchg
pusha
mov
je
iret
cs
mov
dec
pop
shlb
inc
sbb
push
lods
jo
push
loop
rorl
int3
insb
sbb
or
jnp
js
inc
xchg
add
and
inc
xor
push
data16
ret
pop
shlb
pop
loop
pop
mov
jb
rcrb
int3
or
push
mov
cltd
pushf
lcall
loope
cmp
sub
add
pushf
cli
in
sbb
jne
dec
shrb
sub
push
pop
rcrl
dec
cmpb
shlb
xchg
aam
pop
int3
add
fcoml
inc
mov
mov
inc
sahf
ficomps
push
dec
mov
mov
mov
dec
cwtl
push
adc
add
addb
push
or
mov
js
xor
xchg
out
ds
and
sahf
pusha
add
cmp
sub
movsb
pop
fadds
mov
fcoms
int3
js
cmp
add
xor
inc
imul
push
jecxz
inc
fs
push
dec
adcl
loop
push
cmpsb
addl
cmp
jmp
in
ret
dec
or
mov
or
cmc
adc
nop
dec
inc
sbb
inc
inc
xor
sub
test
out
sahf
push
jo
mov
fimuls
pop
ss
and
clc
addl
ficomps
xor
push
sbb
mov
sub
or
add
push
adcb
fcoml
mov
jl
jb
mov
and
sbb
aam
cltd
push
push
pushf
outsb
fidivl
xor
call
adc
call
push
lock
int3
add
dec
call
jmp
pop
dec
adc
inc
xor
lods
xor
inc
lcall
sub
and
mov
pop
add
cmp
je
and
test
xor
pop
adcb
lods
xor
es
add
mov
sbb
adc
pop
or
adc
and
or
and
pop
or
adc
movsb
cmpsb
sbb
jbe
mov
inc
mov
inc
or
push
jb
mov
add
and
add
push
pop
lds
inc
mov
mov
inc
cmp
lahf
mov
add
push
insb
gs
ret
shl
cld
xor
jo
inc
add
sbb
ss
pushf
movsl
in
pop
xor
daa
dec
mov
inc
sub
push
orb
std
dec
outsb
cmp
imul
insb
xor
arpl
pop
repz
inc
andl
push
push
gs
add
or
outsb
test
pop
dec
jp
insb
lods
pop
xchg
imul
sbb
dec
data16
std
adc
jne
gs
sbb
outsb
adc
push
and
and
sub
insb
sub
mov
dec
sbb
add
test
jb
jb
mov
movsb
add
and
and
inc
push
bound
outsb
insb
les
mov
xchg
movsb
sbb
and
push
dec
pop
fadds
movsb
fisubrl
inc
cwtl
and
out
jbe
gs
mov
arpl
inc
fs
dec
jbe
adc
inc
fdivs
or
sub
jl
adc
sbbl
mov
inc
adc
fmull
mov
sbb
hlt
adc
sti
adc
xchg
pop
mov
mov
sbb
jb
pop
mov
mov
out
jne
inc
inc
and
mov
xchg
ljmp
repz
inc
add
in
and
xor
dec
stc
andl
insb
insb
jnp
or
js
imul
leave
aas
fidivs
jnp
addl
dec
fs
xchg
add
sub
dec
xchg
cmp
push
scas
dec
rclb
jp
xlat
inc
xor
jp
jns
mov
ja
icebp
sbb
sti
sbb
negb
jg
addw
inc
out
sub
adc
jae
and
lea
pop
insb
fwait
jg
addl
iret
sbb
xchg
ret
int3
mov
rcrb
jae
icebp
fsubs
in
push
repnz
hlt
xor
or
sbb
cmp
stos
pop
outsl
movl
adc
pop
mov
dec
fistl
jo
push
pop
dec
mov
aam
mov
sub
sub
push
pusha
xor
in
insl
jmp
push
outsl
ret
outsb
jg
jns
hlt
adc
lds
ljmp
cli
js
stos
jns
popa
loop
dec
inc
dec
sub
shll
mov
inc
jnp
pop
hlt
fs
pop
mov
clc
push
pop
js
push
push
shl
add
fadds
pop
and
and
sub
ja
adc
jno
sbb
mov
in
stos
ljmp
and
and
nop
fstps
insl
mov
ljmp
out
xlat
mov
inc
adc
cmp
and
and
outsl
cmp
or
and
sub
dec
outsl
mov
orb
xor
lds
adc
jnp
test
cmpl
sub
mov
shrb
mov
ja
and
int
and
inc
imul
mov
loope
sub
push
sbb
mov
sbb
or
and
jle
add
add
inc
js
adc
add
arpl
insb
pop
mov
xchg
je
cmc
pop
in
push
mov
dec
or
jge
push
scas
or
xor
cltd
and
rcll
nop
adc
gs
push
xchg
adcl
test
mov
das
mov
scas
adcl
test
insl
scas
inc
inc
aas
inc
xchg
insb
push
or
xor
lret
jnp
xlat
jecxz
lds
jmp
ja
or
or
movsl
jae
mov
xchg
cwtl
and
push
or
add
sbb
and
ret
xor
insl
incl
pusha
push
stos
dec
and
inc
dec
adc
dec
popa
sbb
sbb
out
loope
push
cltd
je
cmpsb
enter
je
mov
mov
xchg
mov
sub
inc
outsl
pop
sbb
arpl
imul
insb
pop
jo
jge
sbb
xchg
dec
pusha
adc
sahf
popf
cmc
hlt
mov
xor
mov
sub
dec
data16
and
push
inc
push
jmp
and
icebp
mov
pop
push
sub
jnp
mov
jo
cmp
aaa
rcl
hlt
cmp
adc
gs
push
ds
cli
mov
mov
outsb
push
inc
sub
mov
shrb
and
jmp
mov
mov
dec
sbb
adc
lock
xor
movsl
cmp
arpl
cwtl
and
and
sarl
mov
sub
or
adc
dec
cmp
push
stc
inc
addr16
nop
pop
jo
jo
cmpsl
push
mov
test
adc
aaa
xor
mov
imul
outsb
lea
or
push
mov
popf
mov
cmp
imul
jb
push
rorl
dec
dec
add
addb
dec
jp
sbb
mov
jae
pop
lods
sbb
xchg
add
sbb
shlb
outsl
outsb
addb
sbb
mov
int
xchg
sbb
pop
popf
or
fs
leave
insl
shrl
out
add
lock
clc
movsb
cmpsl
or
arpl
cs
nop
int
sub
rclb
cmp
mov
push
dec
arpl
inc
das
push
aaa
cmp
or
push
outsl
adc
or
sbb
jg
adc
loope
dec
cmpsl
rcll
push
pop
das
lret
loop
add
jmp
push
mov
push
cmp
push
fs
push
and
inc
xchg
je
jne
xchg
in
out
rcrl
imul
popa
pop
js
jae
dec
jb
xor
xor
cs
sub
js
xor
and
ret
mov
mov
insl
cltd
test
mov
push
arpl
xchg
xchg
imul
and
lret
sbb
cli
push
ret
dec
imul
and
mov
enter
popf
and
mov
add
addb
mov
adc
in
and
xorl
jae
sbb
jae
inc
and
data16
lcall
pop
dec
fcmovnu
pop
jno
inc
add
mov
pop
xchg
and
icebp
shrb
mov
adc
or
pop
and
insl
sbb
push
popa
inc
inc
xor
dec
inc
jo
mov
push
lods
in
das
pop
sbb
mov
stos
push
lret
and
popa
or
cmp
scas
daa
jmp
dec
or
test
dec
lds
pop
xchg
jmp
flds
sub
adc
push
stc
mov
adc
je
shll
sbb
push
jne
sub
cmp
xchg
sub
jno
xchg
add
insl
adc
push
xchg
popa
pusha
sbb
sbb
mov
shll
or
loope
xor
in
loopne
sbb
mov
subl
adc
fs
inc
push
push
mov
or
xchg
fcoms
dec
iret
dec
fldenv
dec
pop
cmp
add
xchg
sub
sbb
aad
push
pop
pop
jmp
testl
cs
push
mov
repz
cmp
jmp
mov
add
out
pop
rorb
fs
in
in
mov
stc
rcr
and
je
movsb
pop
or
mov
stos
rolb
add
mov
and
dec
xchg
dec
dec
sbb
mov
or
add
push
dec
add
pop
or
inc
sub
popl
clc
add
sbb
clc
dec
aam
daa
hlt
push
add
test
or
xor
mov
mov
prefetchnta
add
inc
movups
push
add
sahf
and
lock
mov
add
pop
dec
test
add
inc
fadds
testl
mov
nop
sub
xchg
push
fmuls
mov
adc
push
cmpsl
add
mov
in
out
or
add
in
lock
popa
add
inc
dec
and
push
cmpsb
inc
je
jae
jo
jmp
jb
dec
subb
push
gs
mov
nop
dec
pop
xor
cmpsb
mov
pop
lock
inc
add
movsl
movsb
mov
into
or
and
xchg
lock
inc
or
add
mov
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jo
or
andb
pushf
adc
add
add
add
or
test
add
lret
andb
add
inc
add
addb
add
mov
add
add
add
addb
add
pop
add
add
push
add
add
or
orb
add
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
rorb
add
fmull
add
out
or
sbbb
add
add
add
add
add
add
add
add
add
loopne
add
sub
add
add
add
add
add
add
add
add
add
or
add
dec
dec
push
add
dec
add
in
add
add
add
add
add
add
add
xor
add
jo
push
add
dec
add
in
add
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
push
add
addb
add
js
add
add
add
add
add
add
add
add
add
mov
jmp
add
in
add
add
add
add
add
add
add
enter
enter
xor
add
in
add
add
add
add
add
add
add
lock
add
jmp
add
add
in
add
add
add
add
add
add
add
sbb
add
xor
push
add
add
in
add
add
add
add
add
add
add
inc
add
add
add
add
in
add
add
add
add
add
add
add
push
out
push
add
add
in
add
add
add
add
add
add
add
nop
add
add
lock
add
add
in
add
add
add
or
add
cld
or
orb
add
xor
add
pop
add
subb
add
cmp
add
dec
or
adc
add
clc
add
andb
and
subb
orb
cmpb
xorb
orb
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
add
repz
add
add
add
add
add
add
add
add
add
add
jo
add
mov
push
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
in
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
call
sti
push
add
add
add
add
add
add
add
add
add
add
adc
add
cld
push
add
add
add
add
add
add
add
add
add
add
cmp
add
incb
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
xor
pop
add
add
add
add
add
add
add
add
add
add
fadds
addb
add
add
add
add
add
add
add
add
add
clc
add
add
add
or
or
push
add
add
add
add
add
in
add
add
add
add
add
movsb
or
xorb
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
in
add
add
add
add
adc
icebp
sldt
call
sldt
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
decb
add
lock
add
sbb
add
inc
or
addb
add
add
add
add
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
push
push
add
test
pop
add
add
in
add
add
add
add
add
add
add
js
add
lock
pop
add
add
add
add
add
add
add
add
add
mov
adc
add
add
in
add
add
add
add
add
add
add
enter
fcoml
pop
add
add
add
add
add
add
add
add
add
add
lock
add
les
pop
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
in
add
add
add
add
add
add
add
inc
pop
add
mov
pop
add
add
add
add
add
add
add
add
add
push
sbb
add
in
add
add
add
add
add
add
add
nop
pop
add
in
and
add
add
in
add
add
add
add
add
add
add
mov
and
add
add
add
add
add
add
add
add
add
add
loopne
add
or
pop
add
add
add
add
add
add
add
add
or
add
shlb
add
add
add
add
add
add
add
add
xor
add
movsb
sub
add
add
in
add
add
add
add
add
add
add
pop
or
add
sub
add
add
add
add
add
add
mov
or
or
add
loop
add
add
add
add
add
add
add
test
add
mov
pop
add
add
add
add
add
add
add
add
add
add
rorb
add
shrb
add
add
in
add
add
add
add
add
add
add
clc
or
add
xor
add
add
in
add
add
add
add
pop
add
jg
add
add
js
add
mov
jg
add
or
cmp
add
lock
cmp
add
sbb
add
inc
or
addb
add
add
add
add
add
add
add
add
add
push
das
or
adc
add
in
add
add
add
add
add
add
add
nop
or
add
add
in
add
add
add
add
add
add
add
mov
das
or
adc
add
in
add
add
add
add
add
add
add
loopne
add
mov
or
adc
add
in
add
add
add
add
add
add
add
or
add
enter
adc
add
in
add
add
add
add
add
add
add
xor
add
fsubrl
or
adc
add
in
add
add
add
add
add
add
add
pop
or
add
das
or
adc
add
in
add
add
add
add
add
lock
addb
add
add
add
add
add
add
add
or
add
cwtl
or
add
add
add
in
add
add
add
add
add
push
add
add
pop
add
inc
add
add
dec
add
push
add
add
add
add
dec
add
pop
add
add
dec
add
push
add
dec
add
inc
add
add
dec
add
inc
add
push
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
push
inc
inc
inc
cmp
sub
adc
or
enter
and
bound
adc
outsb
test
and
in
and
movsl
adc
sbb
sbb
or
or
or
or
adc
shll
push
daa
cmp
sub
and
adc
or
add
or
adc
addr16
add
in
sbbb
adcb
adcl
cmpsb
or
or
sub
adc
sub
sbbl
push
test
inc
adcl
adc
or
in
lea
test
sbb
xor
pop
arpl
adc
or
les
add
sbb
or
or
or
cmp
or
and
sbb
and
adc
adc
adc
or
or
jmp
and
add
add
adc
push
jb
inc
adcl
jmp
sub
or
or
bound
and
sbb
sub
jb
adc
adc
sbb
mov
dec
xor
and
xchg
jbe
jp
push
lods
jp
or
sbb
insb
and
sbb
sub
push
sub
dec
outsb
insb
jbe
jle
jle
sbb
sub
dec
jg
pop
push
xor
or
dec
sub
jp
jle
jg
jg
jg
jg
jg
jg
jg
popa
in
adcl
sbb
sub
jp
jle
jg
jg
jg
jg
jg
jg
insl
lds
adc
inc
push
dec
jb
jbe
jno
jle
jg
jg
jg
jg
imul
adc
sbb
sbb
pop
jecxz
add
pop
movq
jle
jbe
jb
sub
add
or
add
add
add
and
add
add
add
call
add
add
jg
add
or
cmp
or
xchg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
add
jg
add
add
add
orb
add
add
sbb
add
and
add
xor
add
cmp
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
imul
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
inc
js
je
jb
arpl
jae
add
push
gs
insb
outsl
jae
dec
gs
add
dec
insl
popa
addr16
imul
add
add
jbe
inc
inc
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
je
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
push
inc
outsl
jo
and
xor
and
and
and
cs
gs
add
add
add
sub
add
jmp
add
nop
add
ljmp
adc
ljmp
stos
ljmp
ljmp
ljmp
ljmp
ljmp
push
ljmp
ljmp
cmpsb
daa
lret
mov
lcall
lret
test
lret
test
addl
test
loopne
ljmp
pop
clc
in
xor
cltd
andl
andl
andl
mov
cltd
andl
mov
ljmp
ljmp
ljmp
ljmp
cmpsb
jmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
or
ljmp
ljmp
ljmp
out
ljmp
ljmp
ljmp
ljmp
cli
ljmp
cli
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
mov
ljmp
ljmp
ljmp
ljmp
ljmp
or
ljmp
ljmp
ljmp
ljmp
ljmp
les
ljmp
or
ljmp
ljmp
ljmp
stos
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
fsubr
mov
jecxz
loopne
iret
and
fs
icebp
mov
ljmp
jmp
sub
xchg
ret
adc
out
lret
repz
shl
repz
imul
repz
repz
out
mov
mov
stos
repz
out
mov
and
push
sbbb
out
add
ljmp
pop
adc
mov
inc
add
dec
dec
mov
sub
jmp
xor
mov
cli
jmp
cwtl
push
xchg
in
in
shll
xor
in
push
shll
roll
cli
mov
mov
test
icebp
mov
cmp
bound
sbb
xchg
sbb
fsubr
ljmp
sub
cmpsb
mov
cmc
ror
fnstenv
mov
loopne
jecxz
jle
lret
adc
adc
jmp
sub
sbb
repnz
xchg
lods
scas
repnz
insb
insl
cltd
leave
xor
push
call
out
jmp
outsb
adc
jno
jno
ljmp
pushf
decb
jecxz
lcall
jo
sbb
ljmp
data16
push
cli
jge
mov
fadd
loop
lock
push
and
in
jo
cltd
shll
int
inc
inc
add
sbb
in
stos
icebp
push
loope
cmpsl
cmp
jle
push
ljmp
xchg
mov
cmp
shlb
stc
pop
xchg
leave
out
jmp
pop
cmp
sub
mov
push
divps
jge
push
and
cmpsl
fucomp
xchg
aam
mov
dec
std
out
inc
push
xchg
xor
ljmp
pop
in
push
xchg
sahf
xor
jmp
outsl
pop
or
clc
scas
and
div
cld
test
stos
fstpl
addl
movsb
icebp
mov
mov
jmp
ficomps
fisttps
inc
adcl
aaa
and
jne
in
dec
mov
push
add
movsl
push
adc
fidivrs
fwait
mov
fldcw
push
and
sub
hlt
sbb
mov
xor
loope
adc
lahf
imul
jmp
adc
into
scas
push
and
push
or
adc
hlt
push
fstpt
movl
loope
pop
scas
xor
adc
outsl
inc
test
adc
mov
outsb
adc
lcall
movsl
push
mov
scas
xor
cli
out
jb
sub
pop
ret
adc
cmp
sarb
loope
lret
jo
pop
mov
dec
call
or
push
fsubr
mov
in
daa
lahf
mov
in
mov
ljmp
repz
cmc
mov
fsub
cmp
ret
std
fucomp
vphaddubd
sbb
adc
movsb
mov
test
cltd
test
loopne
cltd
insl
out
in
andb
fsubrp
fsubs
call
jp
cmp
loop
in
xchg
imul
push
cld
fdivs
jns
fcmovu
ret
std
jmp
mov
pushf
aaa
sub
push
mov
sarb
lods
or
and
pop
xchg
ljmp
sbb
pop
stos
cmpsl
aad
int
push
stos
fstl
mov
std
jno
inc
xorl
jmp
gs
push
and
repnz
mov
adc
repnz
sahf
mov
xor
pop
int
xchg
mov
push
rorl
frstor
lret
jmp
push
clc
mov
cmc
jmp
lret
xchg
or
fwait
lods
imul
inc
cmc
lahf
ljmp
test
sbb
mov
mov
mov
lahf
in
mov
jo
add
in
mov
cmp
push
add
ljmp
mov
pop
adc
cwtl
or
cmp
sti
mov
lahf
daa
lahf
xchg
mov
mov
cmp
stc
mov
jecxz
cmp
xorl
test
mov
scas
mov
jge
fcom
lret
xor
dec
and
mov
cld
test
ljmp
push
fstpl
xor
in
divb
mov
fcompl
aad
testb
clc
jne
andb
dec
sub
cmp
xchg
jne
jmp
cmp
ret
cli
mov
stc
mov
mov
cmpsl
pop
push
ds
les
dec
sahf
vpsubsw
lds
stc
mov
loope
jmp
dec
add
pop
mov
fildl
into
loope
jo
mov
in
jo
cmpb
adc
cmpsl
pop
xchg
fmul
fcmovbe
cmpsb
cmp
cmpsl
cmp
mov
fisubs
fldcw
lcall
xorl
jmp
add
fcomip
jmp
jno
dec
mov
in
xchg
cltd
dec
jp
jno
addl
mov
mov
imulb
fnstenv
mov
mov
mov
mov
cmpsl
pop
fistpll
push
mov
mov
jbe
push
xchg
add
jmp
aas
push
and
mov
or
pop
std
int
cli
xchg
sub
mov
lret
dec
repnz
std
movsl
sahf
push
imul
ret
lahf
mov
movsl
clc
and
push
push
int
std
repz
rcrl
mov
dec
rclb
imul
std
in
dec
add
int
in
ret
fnsave
mov
bound
cli
ret
int
mov
stos
in
adc
int
in
out
icebp
mov
std
std
jp
loop
popf
andb
repnz
mov
mov
int
enter
jmp
jb
lret
jns
mov
movsb
in
jmp
enter
repz
in
dec
jmp
in
cmp
dec
lea
leave
lcall
lahf
in
jmp
fldl
mov
insl
jno
xorl
sub
fisubs
stc
iret
int
movsl
mov
or
and
jecxz
leave
icebp
cs
shrl
ljmp
mov
push
inc
mov
into
test
mov
push
lret
pop
mov
fiaddl
mov
dec
repz
adc
insl
and
ss
mov
lret
iret
out
hlt
shl
shll
icebp
enter
fstpl
lcall
imulb
test
int
add
xchg
push
jp
mov
mov
js
sbb
fisubl
les
push
mov
cmp
in
dec
testb
cmpsb
sbb
sahf
xor
jbe
mov
xor
mov
sbb
mov
cmpsb
inc
push
jg
push
mov
rcll
cld
test
mov
fisttpl
cmpsl
push
mov
pop
pop
mov
pop
push
out
test
cli
mov
xor
loopne
jmp
aad
cmpsb
int
xchg
jbe
mov
clc
fdivrp
sbb
ret
ror
sbbl
imul
cmp
out
sbb
push
sahf
cld
ss
lret
jno
shl
out
int
clc
popf
fdiv
push
cmp
shll
ljmp
pop
in
jmp
andl
cmc
lods
test
cld
jbe
mov
mov
cltd
cli
pop
or
cmpsl
test
cmp
xlat
fidivrs
dec
pop
and
gs
jge
push
int
out
sub
jecxz
dec
xchg
mov
fistl
pop
adc
into
xchg
cmp
xor
fwait
mov
movsl
inc
fnstenv
and
test
fiaddl
cmp
fiaddl
mov
aad
xlat
adc
adc
cli
dec
rol
fstps
mov
adc
xchg
lods
cmpl
cmpsl
orl
lret
cltd
lahf
mov
pop
mov
mov
fadd
movsl
cmpsb
test
and
jecxz
hlt
ja
leave
es
jecxz
or
ljmp
push
icebp
cwtl
mov
cltd
sbbb
lods
jle
cmpsb
mov
adc
aaa
leave
clc
sub
inc
test
pop
sbb
adc
movsl
mov
cltd
sahf
popl
and
mov
mov
outsb
inc
jnp
cmp
aaa
in
push
push
out
pop
int
dec
sahf
cmp
sub
lods
mov
mov
mov
or
mov
dec
push
xchg
xchg
sahf
mov
cli
lcall
addr16
loope
jo
adcl
scas
mov
dec
xorl
je
inc
stos
fadd
scas
cmpsb
cmpsb
in
xrelease
insb
push
pop
pop
jmp
jmp
outsb
jnp
movsb
movsl
pop
cli
jno
jecxz
in
test
loope
lea
incb
les
scas
cmp
pop
fldcw
in
ret
cmpsl
movsl
roll
push
sahf
mov
mov
popf
data16
sbb
lahf
int
jmp
push
xchg
add
in
mov
addr16
inc
sti
test
or
pop
inc
popa
in
add
mov
cwtl
ja
aas
sahf
sbb
and
xchg
xchg
push
pop
test
stos
or
cmp
cli
dec
dec
repnz
push
cmp
call
push
pushf
sub
push
cmp
cmp
icebp
out
mov
inc
adc
mov
mov
mov
xchg
mov
fnstenv
mov
fmuls
in
xchg
scas
test
out
fiaddl
dec
lret
jbe
mov
lods
push
fisubrs
jmp
test
lahf
scas
xchg
stos
lods
mov
stos
mov
sti
mov
lret
mov
mov
mov
stos
inc
das
lds
out
jmp
cmp
or
rclb
lahf
lcall
shll
jmp
sti
sub
in
fisubl
cli
pop
inc
ret
lds
push
push
daa
movsb
sti
out
ljmp
faddp
add
fiadds
jmp
stos
test
fistps
pop
mov
orl
loop
and
xchg
mov
sbb
lcall
iret
shl
popf
icebp
sbb
cmpsb
jno
fisttpll
aam
sti
cltd
lea
cltd
test
inc
lret
lods
testb
repnz
push
xchg
test
push
mov
mov
cmpsl
out
nop
push
dec
inc
add
lcall
addr16
shrl
lea
adc
mov
test
fcomi
add
mov
je
cmc
mov
rcr
inc
sbb
scas
jecxz
sar
fnstsw
xchg
cmc
sti
ja
or
popf
test
loop
mov
jmp
mov
fxch
jmp
in
test
out
arpl
in
out
rcll
adc
add
shl
sti
xlat
adc
dec
pushf
std
mov
sahf
aaa
sub
pop
mov
push
fnsave
lret
out
lret
xchg
rolb
std
out
out
and
jns
mov
mov
enter
clc
mov
cltd
lahf
xchg
scas
sbb
shll
pop
inc
leave
fistpll
mov
pop
mov
jg
lods
jecxz
sbb
ljmp
outsl
imul
clc
inc
sub
xchg
pop
iret
shl
mov
pop
and
std
mov
shl
cmpl
mov
and
cmpsb
fildl
test
pop
and
iret
cli
cmp
imul
icebp
in
mov
lea
stos
cmc
lahf
ljmp
bnd
jne
out
icebp
inc
stos
add
fidivrl
mov
les
cmpsb
jecxz
in
loope
out
mov
in
in
test
outsb
jmp
cmp
or
and
mov
clc
mov
lds
sahf
insl
stos
fcmovnb
xchg
xor
mov
imul
movsl
push
inc
sbbl
jmp
arpl
fisubrl
mov
pop
ljmp
stos
push
stc
xor
xor
or
fiadds
fnstenv
xchg
xchg
lds
jl
inc
cltd
and
imul
in
sub
mov
or
stos
ficoms
or
icebp
dec
scas
stc
fidivrl
roll
repnz
mov
jo
inc
xor
out
icebp
into
dec
mov
std
stos
xchg
sbbl
popf
pop
adc
jl
jmp
inc
icebp
pop
sbb
repnz
mov
adc
jno
add
mov
popf
test
out
push
adc
mov
add
and
sti
dec
push
cmc
stos
push
mov
loopne
push
mov
xchg
push
pushf
xchg
fidivl
mov
xchg
cmp
in
jmp
mov
icebp
orl
popl
push
jmp
nop
test
sahf
pop
mov
mov
mov
jmp
inc
aaa
pushf
int
inc
cwtl
mov
mov
ljmp
push
sahf
or
out
int3
or
xchg
stos
xor
adc
push
push
movsl
popa
mov
or
gs
inc
lret
cmpsl
jo
testl
cld
xor
popa
jle
fimuls
loopne
pop
mov
xchg
add
in
and
test
pop
jp
imulb
test
mov
push
test
pop
adc
dec
mov
popa
add
mov
adc
push
int
jmp
fsubrl
fmul
mov
data16
repnz
jmp
lds
clc
or
sub
mov
lods
lret
push
inc
xor
std
movsl
sub
daa
adc
jne
icebp
cli
push
xchg
rcl
push
jne
out
repnz
aas
popf
popa
aas
mov
test
and
into
in
cltd
add
mov
sub
mov
cmc
xor
xchg
data16
shrb
rcrl
mov
in
mov
jmp
cmp
imulb
sbb
lret
inc
int
fucom
xchg
mov
test
xor
lahf
jg
xchg
loopne
push
and
dec
push
cld
adc
jnp
fbstp
mov
mov
movsl
jl
cmp
int
out
xor
pop
insb
jmp
enter
push
xchg
mov
fcmove
jnp
jno
lock
inc
sti
cld
jbe
std
pop
xor
bound
adc
jge
pop
pop
pop
ljmp
adc
sbb
ja
fs
adc
ljmp
sbb
sbb
push
cmc
sbb
push
dec
pop
sarl
or
ljmp
aam
sbb
dec
dec
loope
ja
sub
dec
inc
inc
inc
ljmp
xor
sub
ds
jmp
pop
adc
dec
ljmp
cmpxchg
pop
ljmp
pop
and
dec
popf
pop
cwtl
mov
ljmp
aaa
adc
test
push
pop
ljmp
test
ljmp
pop
ljmp
dec
dec
jb
push
aaa
add
xor
ljmp
cmp
mov
pop
xchg
pop
jo
std
xor
ljmp
adc
mov
vpsllw
add
xor
xor
inc
adc
xor
add
cmp
adc
mov
adc
add
ljmp
push
xor
ljmp
cmp
test
xchg
push
push
pop
pop
push
push
ljmp
and
sub
pop
loope
leave
and
insb
lods
cs
test
ds
imul
or
mov
jbe,pn
test
push
mov
sub
adc
das
loope
das
push
int
and
pushf
pop
inc
jno
jge
daa
push
sub
sbb
lds
ljmp
cmp
inc
add
or
subb
fldl
pminsw
push
mov
test
jmp
pusha
mov
popf
inc
push
sub
dec
jns
and
sbb
in
or
stc
jo
ja
and
les
ljmp
dec
ljmp
push
xchg
xor
jmp
xchg
push
push
xor
xor
lea
cmp
pushf
push
addb
xchg
jmp
cmp
sbb
xor
mov
and
test
pop
insb
add
xor
std
repz
hlt
sbb
pop
aad
mov
aaa
xor
adc
rolb
in
inc
aam
inc
pop
pushf
xor
push
xchg
add
test
cmp
std
pop
xor
push
pop
dec
jne
xchg
and
sub
xor
pop
std
pop
outsl
jno
and
and
mov
mov
or
cmp
loope
xor
and
leave
stos
xchg
mov
sahf
cmp
mull
test
push
ds
jae
in
in
push
lods
sub
ret
aad
add
outsl
ds
fwait
push
cmp
inc
mov
push
outsl
xor
add
add
mov
push
or
stc
push
pop
test
adcl
icebp
fstpt
cltd
and
ljmp
loope
adc
pop
sbb
mov
inc
dec
shlb
dec
xor
sbb
xchg
adc
xor
xor
or
add
incb
scas
mov
daa
scas
inc
stc
movb
ljmp
ljmp
cmp
cmp
and
and
sub
pop
and
cwtl
push
ljmp
mov
or
ljmp
mov
adc
hlt
cmpsb
adc
adc
stos
test
adc
sbb
mov
adc
lods
adc
rol
neg
fadd
rcr
mov
sbb
adc
jl
leave
fcom
test
mov
xchg
inc
sbb
jge
cwtl
mov
repz
test
lret
adc
sbb
inc
push
sub
pop
inc
xchg
std
cld
lret
repz
mov
mov
daa
add
xor
push
das
ljmp
lret
mov
push
push
mov
add
sub
pop
push
adc
sub
sub
ret
enter
push
fists
aad
adc
fs
sub
icebp
iret
enter
in
in
incb
movsb
rcll
popf
adc
cmp
and
sahf
stc
lret
jecxz
out
in
adc
mov
aam
mov
push
mov
and
das
divl
in
call
mov
mov
xlat
test
push
push
fs
and
and
neg
lret
lock
ret
out
insb
ljmp
popf
cmc
mov
xor
dec
push
movsb
cmp
sti
pop
lret
pop
adc
dec
cli
inc
mov
mov
addr16
pop
cmp
adc
shrl
clc
in
enter
cmc
outsl
icebp
jle
insb
addr16
xor
daa
in
out
adc
sub
lret
mov
sbb
fcompl
bound
xor
cmp
xor
pop
push
aaa
ret
cmpsb
cmc
maxps
addr16
jle
arpl
jl
pop
pop
pop
cmc
test
into
rcll
sbb
addr16
mov
hlt
mov
lret
push
adc
pop
mov
jo
ljmp
ror
jne
xchg
cmc
repz
adc
je
jb
jb
xlat
adc
add
cwtl
test
mov
or
xor
dec
dec
inc
inc
ljmp
dec
push
loope
lret
aam
sbb
push
sbb
popf
jmp
inc
inc
inc
outsb
lahf
cmp
daa
div
or
dec
jne
ss
or
xchg
pop
inc
pop
inc
inc
inc
popa
dec
push
fisttps
test
push
dec
cmp
push
push
cmp
out
aas
cmp
out
inc
sbb
xchg
pop
cmc
add
les
ret
sti
fmul
sub
sbb
xchg
mov
or
or
mov
mov
pop
lahf
cmp
ljmp
ds
push
daa
push
adc
xor
or
jnp
imul
mov
out
adc
adc
push
cmp
popf
jno
bound
cmp
pop
pushf
ljmp
lcall
dec
jns
cmc
lcall
insl
push
test
adc
dec
xlat
lcall
mov
mov
mov
mulb
adc
fwait
fwait
xchg
movsb
pop
sbb
push
mov
jno
mov
adc
outsb
add
xchg
or
jmp
jp
jmp
dec
repz
jmp
xorl
aad
adc
fcoml
ret
pop
insb
das
adc
sbb
cmp
cmpsb
loop
jg
aas
jp
lods
jmp
in
out
or
jecxz
cmpsb
test
jno
popa
jecxz
lret
test
call
push
mov
fwait
rcl
rcl
jp
adc
out
xor
je
in
loop
and
push
add
or
loope
mov
rcrb
int
clc
out
shrl
pop
out
jl
adc
xor
mov
mov
repnz
mov
jae
fidivs
icebp
pop
jb
cmc
pop
sbb
movsl
inc
sub
jmp
clc
shr
enter
dec
out
loop
cwtl
xchg
jns
loope
stos
mov
fnstenv
rcrl
jmp
loope
pop
adc
add
lcall
rcrl
in
in
mov
jb
push
outsl
out
mov
lahf
jmp
ljmp
in
xor
fwait
int3
sti
jmp
popa
loopne
js
inc
in
ljmp
in
sbb
lea
mov
lret
jg
xchg
dec
mov
in
mov
je
call
and
lret
dec
lods
gs
cli
push
in
sbb
mov
jmp
cmc
out
jmp
pusha
mov
shrl
push
pop
lods
shl
fcmove
iret
call
sbb
fs
cwtl
ljmp
or
push
leave
ret
cmpsl
and
jns
add
ljmp
jl
lods
push
icebp
fs
jno
pop
jnp
ljmp
out
stc
into
stc
push
loope
rorl
mov
out
cltd
popf
leave
xchg
idiv
mov
sub
lods
push
xchg
fst
into
mov
ljmp
adc
push
insb
mov
stos
inc
add
mov
fucomip
lret
push
or
rcl
xchg
lret
clc
push
insl
lcall
out
sbb
lret
or
pop
jmp
in
mov
lret
out
fucomi
jmp
pop
loope
push
jmp
jmp
cmp
adc
mov
fwait
lcall
xor
in
mov
mov
push
out
inc
mov
mov
xchg
ljmp
mov
in
jmp
adc
lods
mov
data16
pop
loopne
inc
lret
inc
insb
mov
sahf
mov
in
mov
shrl
mov
inc
lret
adc
add
xor
inc
mov
stos
popa
sub
out
xchg
loop
xchg
aad
hlt
mov
jmp
cmp
stc
call
sbb
and
jg
fucom
pop
pop
xorb
pop
pop
mov
or
out
adc
xor
xor
pop
add
stos
shl
adc
xor
addr16
out
push
aad
ljmp
bnd
push
insb
and
in
stc
stc
mov
aas
ret
jge
loope
mov
or
ret
mov
filds
outsb
fs
ret
jae
repz
repz
adc
jle
in
xchg
push
loope
ja
fcomps
faddl
lds
popf
mov
jge
repz
push
mov
out
out
push
lret
in
sbbb
pop
stc
cli
lret
mov
imul
icebp
jmp
mov
xor
mul
out
in
int3
cmpb
leave
xchg
mov
lcall
jmp
js
xor
data16
icebp
jl
xor
loop
mov
mov
cmpsb
cmpsb
jl
mov
adc
push
in
mov
int
mov
rcl
mov
mov
scas
cwtl
xchg
test
xor
mov
loopne
jle
inc
mov
loop
or
jl
pop
lock
fcomip
mov
cmp
ja
xor
pop
repz
pop
test
enter
iret
ret
loope
ret
imul
and
stc
fldcw
repnz
ret
mov
ret
call
dec
cmpb
mov
jns
xor
sahf
insl
ret
out
shr
arpl
stc
sub
fidivs
pop
mov
iret
test
dec
test
xchg
lret
dec
sahf
adc
dec
loop
lds
mov
adc
jecxz
jae
jg
inc
dec
div
loopne
xchg
dec
lcall
fadd
leave
in
jecxz
lcall
in
jl
mov
movsl
ror
mov
lahf
popf
lods
aaa
lods
mov
jne
mov
jne
andl
jnp
mov
add
lcall
imulb
mov
fdivrl
jl
lcall
mov
jae
lods
mov
sub
jnp
and
stc
mov
pop
repnz
out
in
lret
push
icebp
mov
lcall
bnd
in
push
mov
xchg
mov
jmp
or
lods
adc
aam
shlb
testb
xchg
xor
fcomps
shr
bnd
jns
jmp
shrl
cli
imul
ret
pushl
cs
push
in
sub
out
idivb
js
ret
sub
and
cwtl
fadd
hlt
icebp
cmpl
icebp
dec
and
mov
out
js
mov
inc
fdivrs
aas
mov
mov
les
jp
or
loopne
xlat
in
or
in
enter
xor
jns
adc
sti
in
clc
shlb
fdivr
push
mov
imul
mov
pop
sbb
push
cwtl
mov
and
inc
mov
les
jle
gs
in
push
aad
push
out
ds
ljmp
loope
ds
ja
lret
fwait
cmpb
out
int
adc
lcall
adc
shll
out
jp
sub
pop
call
inc
pop
or
mov
cmpsb
test
cmp
xorl
mov
inc
out
mov
jmp
ljmp
xor
iret
jnp
dec
jno
mov
or
adcl
jae
jmp
cwtl
push
into
pop
sub
push
call
cmpsb
loop
iret
or
fdivrs
dec
cmpsb
test
insl
sub
add
out
sahf
test
add
mov
and
cld
pusha
cld
lret
sahf
lret
mov
std
repnz
fsubrs
repz
jmp
jb
jnp
mov
lret
xchg
xlat
mov
fcmove
mov
repz
ljmp
jno
ljmp
imul
xor
jmp
jae
fadd
push
ret
sbb
repnz
cli
pusha
movsl
popa
mov
sarb
lret
push
pop
loopne
leave
in
adc
pop
sbb
into
fsubp
pop
xchg
cmp
out
loope
adc
lea
xor
push
adc
stc
ds
cltd
jns
in
test
pop
je
fisttpll
jle
outsb
adc
out
test
dec
inc
pop
or
push
fdiv
mov
inc
pop
cwtl
adcl
dec
jecxz
mov
jmp
jmp
outsb
data16
in
add
scas
jmp
adc
dec
xorl
cs
dec
outsb
mov
mov
pop
jns
stos
lret
sub
jmp
hlt
xchg
add
push
iret
pop
xor
shlb
mov
outsl
out
call
in
add
lods
in
adc
inc
mov
cli
adc
pop
in
push
fsubr
lods
scas
push
lods
jp
add
cmpsl
imul
andb
fs
or
adc
out
lods
shr
cmp
cmpsl
lcall
int
fbld
ror
in
iret
cltd
sub
test
dec
jmp
sub
mov
cli
hlt
popa
addr16
sbb
js
movsb
arpl
popf
hlt
nop
jmp
testl
push
fldenv
mul
call
lret
ds
icebp
int3
push
jp
and
clc
repnz
es
lds
add
scas
push
and
orl
and
in
icebp
gs
loop
mov
mov
lcall
pop
arpl
push
icebp
fdiv
call
jecxz
leave
mov
adc
vpsadbw
mov
out
sarl
pushf
int
lock
dec
nop
loopne
and
mov
mov
xchg
mov
ficompl
call
and
mulb
adc
shrb
pop
xchg
fldenv
in
popf
cmp
mov
leave
aaa
lea
sbb
or
mov
fucomip
pop
out
lods
pop
call
mov
xor
aam
fcmovbe
push
xor
andl
scas
jecxz
jmp
sub
or
scas
aas
hlt
push
cmp
adcb
rolb
repnz
mulb
xor
out
cmp
mov
icebp
popf
xor
cmc
pop
dec
xor
mov
lahf
call
repnz
scas
adc
outsb
in
shll
cmpb
push
out
outsl
jmp
and
lcall
push
aam
push
adc
cmp
dec
xchg
nop
lcall
outsb
data16
mov
and
lcall
out
enter
xor
popf
ljmp
int
sahf
xor
insb
int
mov
push
fxch
es
into
sbb
adc
inc
cli
lods
add
in
add
lret
mov
rcl
int
push
sti
sub
lret
inc
arpl
mov
jne
add
pop
pushf
sti
stos
jecxz
xchg
push
adc
clc
inc
fbstp
outsl
inc
jg
repnz
pop
pop
jl
out
into
divl
sbb
pop
stos
test
lods
repnz
int
sbb
mov
inc
sub
mov
repnz
idivl
in
lods
pop
int
adc
jp
fildl
adc
out
lock
fmul
ret
jl
std
add
clc
jno
ljmp
inc
cmp
data16
test
mov
mov
jmp
pop
outsb
ss
adc
js
cmpsb
inc
and
mov
ret
pop
subb
inc
ljmp
sub
data16
scas
test
and
ljmp
fucomip
arpl
js
push
push
jmp
shlb
lcall
repnz
push
stos
out
stos
shlb
mov
fisubrl
fcompl
inc
fistpll
jmp
fdivrl
and
shrl
in
xor
mov
push
mov
ficoml
mov
in
adc
repz
fistps
and
push
cmp
or
call
sub
mov
arpl
and
mov
stos
pop
out
mov
dec
stos
mull
inc
mov
arpl
insl
js
xlat
xor
out
inc
mov
icebp
movsb
test
fwait
push
dec
lea
fs
jmp
shr
push
jmp
aad
mov
sbb
ret
test
out
stos
daa
pop
clc
push
sbbl
icebp
adc
xchg
pop
out
adc
hlt
lret
clc
stos
cmp
xor
mov
adc
cli
jmp
mov
sar
and
xor
push
and
fsubrs
jbe
loop
int3
sub
mov
adc
mov
lret
iret
jmp
into
lcall
outsl
insb
and
mov
in
call
stos
jp
loopne
mov
int
movsb
cs
adc
lock
cwtl
stos
sub
fisubl
jg
mov
or
movsb
mov
and
pop
ret
stos
js
mov
jbe
filds
stos
insl
loope
shlb
in
rclb
ljmp
shrb
call
jecxz
fisttpll
neg
xor
repz
dec
mov
shll
repz
mov
out
push
iret
jmp
test
xchg
imul
loop
popa
jp
into
mov
call
push
outsb
pop
or
call
roll
cli
cs
push
in
filds
add
loope
mov
cmp
out
and
js
ss
and
push
stc
out
out
dec
stc
iret
push
pusha
push
mul
gs
loope
decl
xlat
xchg
and
mov
cli
rcl
cli
mov
scas
push
push
std
and
jno
push
loop
ret
xlat
ret
cmp
jmp
mov
in
fstpt
dec
stos
lods
jecxz
imulb
outsl
insl
cld
adc
fnsave
ljmp
fsub
cld
ss
cli
adc
stc
cmpsl
lret
ljmp
add
dec
jmp
out
xor
repz
mov
addl
xchg
cmp
dec
clc
in
ljmp
popa
jp
inc
mov
ja
lret
loop
sub
cmp
arpl
test
mov
loopne
aam
outsl
cmpsb
cld
mov
lret
movsl
cmp
imul
fdivs
and
sub
sbbb
adc
ret
jecxz
outsb
scas
mov
inc
test
fadd
popa
popf
jmp
jo
test
adc
cmc
push
mov
mov
mov
cmpsb
cmp
mov
js
fbld
pop
enter
pop
out
and
fucomip
shr
adc
push
bnd
mov
cmpsb
lods
int3
sarl
cmpsb
adc
jmp
call
ljmp
ret
sahf
shlb
outsb
cmp
and
out
jmp
arpl
mov
fisttpl
daa
mov
popa
scas
mov
out
jecxz
repnz
jp
xchg
push
jmp
test
imul
jp
lret
out
sarl
xchg
mov
jmp
js
outsb
lret
mov
lret
jns
loope
mov
test
mov
rcrl
and
lcall
cmp
cwtl
jg
les
hlt
cmp
shrl
cli
push
inc
cmp
call
pop
in
add
and
call
lcall
loop
sub
and
adc
mov
inc
mov
ljmp
xchg
mov
push
out
fcmove
pop
stc
jns
lret
aad
mov
jecxz
loop
out
fadd
loope
inc
sub
mov
mov
push
loop
shl
and
stos
lret
aad
add
loope
adc
out
add
idiv
loop
lret
cmpsb
loop
loop
and
call
jmp
rolb
add
loop
fbld
jg
out
cwtl
repz
pop
shr
mov
shll
jmp
shlb
shl
imul
dec
mov
testb
lods
loope
fs
sar
mov
mov
out
std
lret
jge
into
int
loop
sti
push
call
sub
mov
js
imul
call
mov
ret
imul
shrb
bnd
stos
push
out
and
out
out
lcall
out
loop
leave
scas
lods
jg
push
fisubrl
in
call
mov
dec
mov
mov
sar
push
loop
sbb
scas
lods
les
jp
div
cmp
int3
stos
ret
shrb
out
out
mov
imul
popa
out
jb
mov
sub
inc
sti
sub
and
lods
adc
repnz
lods
in
mov
adc
into
mov
mov
fdivrs
and
mov
ror
and
mov
push
stc
cwtl
scas
jl
mov
repz
ljmp
push
sbb
adc
ljmp
lock
popa
adc
loop
jg
push
mov
fistl
lods
fmuls
jno
pop
int3
popa
int3
call
jecxz
stos
cld
fldt
repnz
xlat
jp
pop
adc
stc
out
jns
jmp
outsl
mov
push
xchg
enter
in
xchg
mov
jo
out
inc
ret
jb
lcall
aaa
jmp
push
push
push
xor
cmp
outsl
lods
mov
loop
mov
jecxz
mov
in
push
stos
repz
movsb
sub
mov
sub
jmp
sub
mov
std
ljmp
push
sub
pop
into
mov
adc
repnz
lods
mov
cmpsb
fdivs
into
push
stos
xchg
out
push
adc
repnz
ljmp
loopne
loop
mov
stos
int3
data16
addr16
ficoml
dec
cmpsb
mov
scas
lock
adc
call
inc
cs
cs
adc
dec
and
adc
jns
ret
xor
out
mov
mov
inc
cltd
jnp
movsl
mov
xor
mov
repnz
inc
mov
dec
loopne
jne
loop
xchg
rcr
inc
inc
mov
pop
stc
mov
jp
shl
jno
mov
fdivrp
mov
and
imul
lds
ret
loop
repz
mov
fidivl
sub
ja
ds
shll
call
inc
ljmp
xorb
mov
add
loop
ljmp
push
inc
and
es
je
jmp
ljmp
xchg
cmc
adc
sahf
subb
lea
adc
xor
mov
scas
movsb
mov
mov
mov
pop
mov
sti
ljmp
mov
shr
int3
leave
xchg
push
cltd
lods
mov
adc
mov
mov
pushf
mov
lcall
mov
mov
mov
rcr
test
xchg
mov
insl
shr
stos
inc
mov
adc
daa
call
scas
cmpsb
jmp
ljmp
add
loope
in
jp
mov
out
cmp
ja
dec
cli
in
add
mov
adc
sub
sbb
mov
in
in
btr
pop
xor
loope
call
daa
in
int
sahf
xchg
sahf
inc
outsl
jp
jne
xchg
adc
mov
test
sub
stos
pop
les
sub
sbb
stos
icebp
loop
fldenv
jecxz
ljmp
adc
ljmp
ljmp
mov
adc
jp
jp
pusha
in
lods
in
lods
jmp
lahf
in
popa
hlt
imul
push
jmp
ljmp
hlt
imul
jmp
cltd
add
imul
imul
or
pusha
in
lods
imul
das
jmp
lahf
in
popa
hlt
imul
jmp
lahf
in
popa
hlt
imul
lahf
lret
xor
add
sti
xor
and
xor
hlt
imul
imul
sbb
addr16
imul
call
mov
adc
call
in
imul
add
arpl
ljmp
jmp
sbb
sbb
pusha
mov
mov
add
sub
cli
insb
cs
adc
add
sbb
imul
pop
ljmp
scas
popa
mov
outsb
fisubrl
ljmp
loop
jl
xor
ljmp
sahf
arpl
xchg
in
in
in
lods
mov
sbb
jl
xor
ljmp
imul
jl
xor
ljmp
addr16
ljmp
ljmp
mov
cmp
lret
mov
xchg
mov
mov
aas
mov
scas
into
push
ljmp
push
sbb
adc
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
add
ljmp
ljmp
ljmp
ljmp
ljmp
scas
adc
ljmp
stos
ljmp
jbe
add
ljmp
ljmp
ljmp
out
ljmp
ljmp
adc
ljmp
push
ljmp
push
add
ljmp
ljmp
ljmp
out
ljmp
ljmp
adc
ljmp
sub
ljmp
push
add
ljmp
ljmp
ljmp
out
ljmp
pop
ljmp
ljmp
jmp
loop
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
pop
ljmp
adc
adc
xchg
fs
xor
xor
and
pop
sbb
ljmp
sbb
push
dec
pop
ljmp
jp
aaa
jle
ljmp
or
push
dec
dec
ljmp
xchg
ljmp
inc
ljmp
sub
sub
ljmp
jae
adc
je
ljmp
dec
ljmp
ja
adc
pop
pop
ljmp
pop
ljmp
popf
ljmp
push
ljmp
test
adc
ljmp
push
ljmp
pop
ljmp
fucomp
and
ljmp
cmp
adc
es
cmp
ljmp
jo
adc
xor
mov
pop
pop
ljmp
add
xor
xor
ljmp
and
ljmp
and
popf
cltd
cltd
ljmp
add
xor
push
ljmp
sub
adc
ljmp
test
adc
push
push
ljmp
cmp
and
adc
and
ljmp
insb
ljmp
ds
fwait
ljmp
pop
ljmp
jg
jbe,pn
ljmp
pop
ljmp
outsl
ljmp
push
ljmp
jge
adc
sub
adc
jnp
ljmp
sub
daa
pop
ljmp
or
cmp
or
inc
ljmp
jg
or
cmp
adc
add
ljmp
jb
adc
das
push
ljmp
or
add
aaa
ljmp
ja
sbb
jne
sbb
dec
ljmp
dec
ljmp
aas
ljmp
ljmp
inc
xchg
ljmp
jl
xor
ljmp
sub
inc
mov
adc
cs
ljmp
je
adc
ljmp
ljmp
push
mov
adc
pop
mov
sbb
jns
sbb
aaa
pop
ljmp
shr
ja
ljmp
mov
ljmp
fs
dec
ljmp
addr16
jno
xor
and
and
ljmp
adc
or
or
cmp
pop
ljmp
ljmp
imul
push
xchg
ljmp
out
ljmp
ljmp
mov
ljmp
jns
dec
inc
inc
ljmp
adc
ljmp
cmp
push
or
sbb
add
pop
ljmp
adc
bound
fstpt
ljmp
push
ljmp
adc
or
pminsw
xor
ljmp
xor
add
sbb
sbb
pop
ljmp
xor
xor
ljmp
cmp
scas
mov
adc
xor
xor
adc
add
ljmp
xor
xor
xor
ds
cmp
and
and
and
and
sub
sub
pop
pop
pop
ljmp
cltd
ljmp
mov
cmpsl
cmpsl
cmpsl
ljmp
int3
ljmp
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
mov
pop
adc
adc
mov
sbb
mov
push
rol
neg
fadd
rcr
mov
adc
sbb
cwtl
xchg
data16
jl
leave
fcom
test
mov
adc
xchg
inc
inc
inc
cwtl
mov
mov
ret
test
mov
sbb
push
sub
pop
inc
xchg
std
cld
lret
repz
mov
idiv
mov
adc
out
sbb
inc
push
das
das
das
das
sub
repz
mov
test
rcll
add
sub
sub
sub
ret
hlt
lret
enter
cmpsl
push
push
push
push
fists
adc
xor
and
iret
enter
in
in
incb
push
push
push
push
movsb
rcll
adc
fs
and
sub
iret
enter
jecxz
in
push
push
mov
aam
mov
push
mov
jne
and
and
divl
in
mov
mov
xlat
test
adc
fs
and
and
fdiv
fnsave
and
ret
out
insb
insb
insb
xchg
stos
adc
addr16
push
es
sti
fstp
fnsave
dec
cli
inc
mov
mov
cmp
addr16
pop
cmp
mov
shrl
clc
in
enter
aam
sbb
ds
addr16
xor
cmp
in
push
jmp
cmc
lret
icebp
mov
adc
inc
bound
xor
cmp
push
push
push
in
in
loopne
cld
hlt
lret
repz
cmpsb
adc
dec
addr16
jle
insl
arpl
ret
out
push
push
push
test
enter
into
rcll
jae
jns
jns
jns
jns
incl
push
push
mov
iret
enter
mov
pop
jp
addr16
jbe
jbe
jno
lahf
stos
push
push
cwtl
rcl
mov
iret
repz
adc
jg
sbb
dec
jb
jb
jb
lahf
xlat
add
fstp
adc
dec
dec
inc
inc
inc
inc
inc
inc
dec
dec
dec
push
loope
test
fcmovbe
adc
adc
dec
inc
jge
addr16
pop
inc
inc
inc
inc
inc
inc
outsb
lahf
cmp
adc
adc
or
and
or
xchg
pop
inc
pop
inc
inc
inc
popa
test
push
adc
adc
cmp
aaa
out
ds
cmp
or
or
adc
adc
adc
xadd
rol
sti
fsubrl
add
add
out
adc
adc
cmp
lahf
pop
ret
ret
ret
ret
fcmovu
neg
movsl
aas
ds
push
daa
push
adc
adc
or
jnp
imul
mov
mov
out
adc
adc
adc
popf
jno
jle
bound
xchg
pushf
pushf
pushf
xchg
lods
movsb
push
adc
adc
jns
jle
bound
xchg
xchg
pushf
pushf
lcall
cmpsl
push
adc
adc
jnp
bound
xchg
xchg
pushf
pushf
lcall
in
push
push
mov
adc
adc
push
imul
fwait
fwait
xchg
movsb
pop
sbb
push
mov
adc
adc
adc
mov
adc
mov
adc
adc
sub
sub
ljmp
ljmp
push
ljmp
ljmp
push
ljmp
ljmp
push
ljmp
ljmp
push
ljmp
ljmp
push
ljmp
ljmp
ljmp
xchg
ljmp
xchg
adc
pop
ljmp
ljmp
loop
inc
loop
ljmp
cmp
fsubrp
ljmp
ljmp
mov
ljmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
xchg
test
mov
test
ljmp
ljmp
mov
test
cltd
ljmp
sub
ljmp
jecxz
pop
out
ljmp
ljmp
ljmp
test
mov
test
ljmp
ljmp
shr
fsubrp
test
ljmp
ljmp
mov
lahf
ljmp
mov
xchg
ljmp
ljmp
ljmp
ljmp
xchg
cltd
ljmp
ljmp
ljmp
ljmp
ljmp
mov
lahf
ljmp
cltd
ljmp
ljmp
ljmp
ljmp
test
sahf
ljmp
mov
xchg
movsb
ljmp
ljmp
ljmp
ljmp
cwtl
ljmp
test
mov
xchg
lods
ljmp
test
mov
xchg
cltd
ljmp
lcall
ljmp
ljmp
ljmp
push
add
ljmp
ljmp
add
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
push
ljmp
ljmp
ljmp
movsb
scas
cmpsb
les
mov
les
ljmp
mov
ljmp
test
cltd
cltd
ljmp
mov
ljmp
xchg
ljmp
mov
ljmp
mov
cltd
cltd
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
cltd
test
ror
cmpsl
mov
ljmp
ljmp
ljmp
stos
ljmp
ljmp
ljmp
ljmp
ljmp
push
ljmp
pop
jecxz
lret
push
jmp
daa
lret
mov
lcall
lret
test
lret
test
addl
test
loopne
ljmp
mov
jmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
lret
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
cli
ljmp
cli
ljmp
ljmp
sub
ljmp
ljmp
push
mov
ljmp
ljmp
icebp
ljmp
stc
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
xchg
sahf
ljmp
ljmp
ljmp
ljmp
ljmp
les
ljmp
lret
ljmp
ljmp
ljmp
ljmp
mov
ljmp
ljmp
jmp
ljmp
ljmp
ljmp
mov
ljmp
jmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
ljmp
ljmp
test
ljmp
ljmp
cld
ljmp
ljmp
out
ljmp
ljmp
out
ljmp
xchg
ljmp
ljmp
std
ljmp
sahf
ljmp
ljmp
fsubrp
ljmp
ljmp
stc
ljmp
fdivr
jmp
mov
jmp
lcall
ljmp
jmp
ds
jmp
or
jmp
sbb
jmp
adc
jmp
loopne
jmp
cld
stc
jmp
enter
lods
jmp
mov
stc
jmp
xchg
jmp
push
stc
jmp
dec
stc
jmp
push
stc
jmp
and
jmp
xor
jmp
sub
jmp
lret
ljmp
jmp
add
jmp
push
jmp
pop
jmp
in
jmp
cmp
jmp
call
jmp
hlt
jmp
jmp
movsb
jmp
ljmp
ljmp
jmp
in
jmp
cs
jmp
cmp
jmp
fdivrp
jmp
std
jmp
ret
ljmp
jmp
mov
std
jmp
fs
jmp
dec
std
jmp
inc
std
jmp
sub
jmp
ds
jmp
or
jmp
push
std
jmp
cwtl
std
jmp
pop
cld
jmp
into
bnd
fdiv
jmp
test
jmp
mov
cld
jmp
pushf
cld
jmp
nop
bnd
data16
jo
jmp
dec
bnd
pop
bnd
sub
jmp
cmp
jmp
jle
jmp
cld
jmp
in
bnd
adc
jmp
mov
jmp
hlt
cld
jmp
out
jmp
adc
jmp
add
jmp
sub
jmp
push
jmp
inc
jmp
jo
jmp
jmp
xchg
jmp
cmp
ljmp
jmp
cld
jmp
mov
jmp
xchg
jmp
xor
jmp
idiv
jmp
ljmp
ljmp
jmp
cld
repz
ljmp
ljmp
jmp
dec
repz
js
jmp
push
repz
mov
jmp
movsb
repz
stos
repz
ljmp
push
ljmp
ret
push
ljmp
dec
ljmp
pop
ljmp
dec
ljmp
in
ljmp
and
ljmp
ljmp
jl
ljmp
ljmp
ljmp
loop
ljmp
ljmp
jmp
lock
stos
lock
xchg
jmp
mov
jmp
push
repz
push
repz
cmp
jmp
xchg
lock
lock
jl
jmp
inc
lock
push
lock
cmp
jmp
or
jmp
ljmp
ljmp
into
loop
mov
in
jge
ljmp
ljmp
enter
jmp
xlat
ljmp
xlat
out
repnz
lret
arpl
dec
repnz
pop
mov
fsubrp
ljmp
enter
dec
fmulp
repnz
repnz
cli
std
enter
repnz
stc
adc
enter
fcmove
repnz
mov
into
out
dec
loop
repnz
cli
std
enter
jmp
std
enter
repnz
ljmp
out
xor
repnz
cli
std
enter
ljmp
dec
out
lret
popa
filds
cli
std
enter
out
out
loop
repnz
mov
lret
shrl
ljmp
mov
fbstp
jmp
cli
std
enter
mov
std
enter
lret
mov
ljmp
adc
enter
and
mov
mov
popa
sbb
iret
ljmp
out
imul
std
shll
scas
ljmp
arpl
mov
mov
sub
ljmp
into
out
popa
sub
adc
add
fldcw
fnstcw
sbb
sub
ljmp
stc
jmp
ljmp
pop
loope
ljmp
mov
ljmp
ljmp
cli
adc
loop
jmp
sti
std
enter
ljmp
movsb
out
popa
lods
out
sahf
out
mov
out
ljmp
add
ljmp
ljmp
xchg
into
loop
cmp
repnz
jmp
sti
std
enter
loop
adc
enter
sub
stos
out
in
sub
imul
out
sub
lret
adc
enter
sbb
enter
outsl
sub
outsl
jbe
ljmp
jns
std
enter
test
addl
cltd
cltd
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
and
push
or
addr16
scas
push
and
push
or
addr16
scas
push
and
push
or
addr16
scas
push
and
push
or
test
lods
popl
mov
cwtl
sahf
xchg
lret
lea
mov
test
test
ljmp
movsb
mov
mov
ljmp
test
mov
test
test
cwtl
cltd
addl
lret
mov
ljmp
mov
ljmp
std
enter
enter
enter
enter
enter
enter
enter
repnz
outsl
lock
shr
cli
lret
repnz
sub
sub
enter
cli
std
enter
xlat
adc
repnz
mov
std
enter
adc
repnz
imul
lods
out
mov
mov
mov
loop
sub
imul
adc
lret
repnz
outsl
xchg
mov
repnz
repnz
mov
sub
repz
enter
outsl
aas
lods
ljmp
adc
enter
ljmp
ljmp
fbstp
incl
cli
std
enter
lret
add
iret
mov
repnz
out
lret
outsl
and
jmp
cli
sub
popa
sbb
in
or
sub
and
mov
ljmp
enter
xchg
ljmp
repnz
jmp
cli
std
enter
lret
mov
ljmp
adc
enter
dec
ljmp
sub
and
cli
outsl
adc
ljmp
insb
test
ljmp
sub
into
out
mov
mov
sub
outsl
or
mov
add
shrl
sub
ljmp
mov
into
cli
popa
sbb
push
adc
addr16
popa
jmp
sub
in
mov
mov
out
add
ljmp
jmp
mov
sub
scas
into
out
popa
mov
stos
loop
out
ljmp
movsb
scas
mov
and
cmp
std
enter
ljmp
lret
ljmp
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
in
mov
std
enter
popa
and
lahf
push
adc
outsb
pop
scas
ljmp
add
sub
outsb
pop
scas
ljmp
adc
lcall
out
ljmp
mov
scas
sub
enter
outsl
out
ljmp
movsb
into
add
ljmp
call
sub
std
enter
ljmp
sahf
in
sub
lret
adc
enter
ljmp
out
add
ljmp
popa
sbb
xor
mov
xchg
cmc
mov
popa
jb
adc
ljmp
jb
test
movzwl
mov
sub
lahf
call
popa
fdivrl
fcmove
repnz
cli
std
enter
fisttps
scas
std
enter
sti
std
enter
mov
repnz
stos
mul
jle
sub
adc
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
stos
lret
adc
enter
lret
or
mov
ljmp
outsb
mov
ljmp
popa
and
mov
ljmp
xor
sub
ljmp
enter
jb
std
enter
repnz
es
std
enter
lret
add
ljmp
cli
std
enter
jmp
ljmp
into
loop
in
adc
into
out
sub
sahf
into
cli
adc
enter
sbb
movsb
out
add
ljmp
sub
enter
or
mov
fcmove
repnz
cli
std
enter
ljmp
popa
sub
mov
out
ljmp
sahf
into
loop
sub
lahf
clc
push
dec
in
ljmp
loopne
insb
jbe
ljmp
mov
ljmp
sub
ljmp
sub
outsb
scas
scas
ljmp
ljmp
enter
push
imul
out
mov
repnz
xlat
ljmp
xor
or
push
arpl
arpl
mov
repnz
xchg
std
enter
out
ljmp
scas
push
scas
std
enter
sti
std
enter
and
mov
jp
ljmp
adc
sbb
ret
add
adc
enter
outsb
dec
aam
ljmp
outsl
outsl
aam
ljmp
sub
lcall
jmp
ljmp
sub
outsl
dec
aam
ljmp
jmp
outsl
jp
ljmp
adc
push
lret
adcb
ljmp
mov
sub
ljmp
ljmp
push
ljmp
scas
aam
ljmp
adc
enter
and
std
enter
lret
mov
ljmp
adc
enter
push
sub
ljmp
adc
loop
adc
adc
ljmp
enter
add
ljmp
test
movsb
mov
shr
ljmp
enter
sub
ljmp
add
pop
adc
into
add
pop
adc
in
cmp
enter
arpl
sub
mov
popa
sub
loop
imul
sub
fisttps
adc
mov
enter
std
enter
out
clc
std
enter
lods
scas
sahf
jecxz
mov
sti
std
enter
mov
sub
mov
add
adc
lods
sub
outsl
sub
outsl
cwtl
shr
ljmp
ljmp
mov
arpl
popa
out
arpl
popa
movsb
arpl
rcll
mov
loop
mov
loop
lahf
mov
inc
lods
out
imul
adc
enter
cli
std
enter
fnstcw
arpl
popa
in
xchg
out
arpl
and
loop
in
loop
xchg
out
popa
sub
in
movsl
sarl
ljmp
arpl
push
imul
ljmp
ljmp
ljmp
adc
in
clc
test
ljmp
adc
outsb
lods
test
ljmp
ljmp
outsb
test
ljmp
lahf
out
adc
in
mov
sub
out
mov
xlat
adc
repnz
mov
ljmp
popa
loopne
shrl
in
in
test
ljmp
mov
xor
dec
in
pop
stos
ljmp
scas
into
out
mov
lret
repnz
sub
enter
sti
std
enter
jmp
ljmp
ljmp
mov
fcmovbe
std
enter
mov
push
fcmovbe
std
enter
fnstenv
sbb
arpl
into
cli
mov
out
popa
scas
into
repnz
fldcw
mov
mov
out
popa
scas
into
out
adc
out
sub
ljmp
ljmp
ljmp
adc
enter
lret
repnz
mov
std
enter
lret
repnz
ja
ljmp
loop
lahf
adc
out
stos
call
cli
mov
sub
ljmp
ret
enter
lret
repnz
ljmp
push
push
ljmp
repnz
ljmp
cli
std
enter
call
add
ljmp
mov
adc
jmp
std
enter
add
mov
mov
sbb
jmp
outsl
pop
aad
ljmp
sub
popa
sbb
xchg
in
insl
shr
ljmp
mov
shll
adc
xor
jmp
and
arpl
lret
sub
mov
out
ljmp
ljmp
mov
outsl
adc
xabort
enter
mov
enter
ljmp
test
in
mov
std
enter
scas
loop
mov
cmp
sub
adc
adc
ljmp
sub
jmp
ljmp
adc
mov
scas
push
mov
and
mov
es
lahf
out
lcall
std
enter
jecxz
scas
push
in
jne
ljmp
adc
adc
ljmp
scas
push
mov
adc
lahf
loop
inc
clc
std
enter
std
adc
ficoms
lcall
cli
std
enter
xor
sbb
popa
sub
and
mov
cmpsl
loop
fnstenv
mov
mov
popa
cmp
lahf
adc
cli
mov
cwtl
loop
call
add
cmc
shl
popa
cmp
out
test
lock
adc
loop
adc
lahf
adc
popa
cmp
cmp
sti
in
out
sti
jmp
push
stos
shll
loop
xor
sbb
cltd
in
stos
mov
popa
scas
push
and
xchg
adc
sbb
out
sub
pusha
in
or
call
in
adc
stos
call
lods
add
mov
repnz
and
mov
out
mov
push
lret
popa
out
das
push
lret
popa
stos
outsl
sub
outsl
popa
stos
cli
outsl
sub
outsb
fldenv
loop
cmp
mov
xor
outsb
mov
loop
in
mov
cli
popa
jmp
adc
jmp
popa
sub
mov
mov
adc
enter
ljmp
mov
sub
ljmp
and
out
ljmp
mov
repnz
popa
sub
xor
sub
ljmp
sub
loop
call
in
add
std
enter
ljmp
sub
ljmp
es
mov
ljmp
ljmp
jmp
fs
ljmp
mov
ljmp
mov
ljmp
addr16
ljmp
ljmp
ljmp
jmp
and
je
jmp
ljmp
sub
enter
add
std
enter
lods
adc
enter
rcl
std
enter
cli
sar
enter
cmp
std
enter
pop
sar
enter
sar
enter
mov
std
enter
mov
lods
mov
sar
enter
ret
enter
cli
sar
enter
ljmp
sar
enter
ljmp
sub
ljmp
es
sub
ljmp
jmp
fcmove
repnz
ljmp
popa
adc
outsb
fcmovnbe
ljmp
jmp
into
in
ljmp
enter
ljmp
push
ljmp
fldcw
addr16
into
jmp
ljmp
fcmove
repnz
pop
sbb
adc
adc
ljmp
ljmp
mov
std
enter
insb
sbb
ljmp
jmp
je
jmp
ljmp
adc
enter
arpl
ljmp
pushl
clc
std
enter
sti
std
enter
cmp
jmp
ljmp
ljmp
ljmp
insb
ljmpw
mov
mov
sub
ljmp
popa
sbb
sahf
into
incb
scas
jmp
ljmp
enter
mov
std
enter
ret
enter
ljmp
sub
cmpsb
dec
stos
std
enter
xchg
stos
std
enter
mov
lods
mov
stos
std
enter
fisubrl
mov
stos
std
enter
ljmp
lods
sbbb
std
enter
push
jp
ljmp
enter
mov
lods
rcrb
aam
enter
cmp
std
enter
dec
aam
enter
xchg
aam
enter
rcl
std
enter
repnz
enter
sbb
std
enter
and
std
enter
push
xlat
std
enter
inc
xlat
std
enter
jp
std
enter
xchg
xlat
std
enter
adc
enter
arpl
movsb
xchg
arpl
ljmp
ljmp
ljmpw
ljmp
insb
push
ljmp
ljmp
ljmp
arpl
ljmp
ljmp
arpl
ljmp
ljmp
lret
adc
imul
sub
sub
ljmp
cli
adc
sahf
into
cli
add
ljmp
enter
ret
enter
lods
lret
ret
into
mov
shlb
sub
fsubrp
arpl
sub
enter
xor
mov
out
mov
into
cli
adc
icebp
ljmp
push
repnz
sub
enter
sub
ljmp
sub
lahf
jmp
lods
out
popa
scas
into
out
lods
out
test
enter
repnz
sub
ljmp
enter
sti
std
enter
sub
ljmp
mov
rcll
popa
sbb
jecxz
in
popa
sub
mov
out
ljmp
enter
pop
int3
ljmp
adc
enter
sub
lretw
repnz
pusha
scas
into
out
bound
out
ljmp
ljmp
and
in
and
ljmp
out
ljmp
mov
test
enter
adc
push
ljmp
jmp
ljmp
out
mov
inc
mov
adc
sub
ljmp
arpl
ljmp
ljmp
arpl
ljmp
ljmp
popa
stos
scas
sub
mov
repnz
ljmp
sbb
inc
inc
popa
xchg
into
fldcw
rcll
arpl
in
ljmp
ljmp
arpl
in
ljmp
out
ljmp
ljmp
test
stos
arpl
lods
cmpsb
popa
sub
sub
fiadds
xchg
adc
in
cmp
lcall
adc
adc
jmp
ljmp
enter
ljmp
mov
sub
fsubr
ljmp
ljmp
lret
and
xor
adc
mov
outsb
xor
and
in
adc
arpl
xchg
lret
mov
sub
out
jg
adc
loop
in
subb
in
ljmp
ljmp
mov
out
scas
std
enter
cmpsl
loop
lahf
cli
imul
adc
mov
out
cmp
jb
std
enter
fnstcw
sbb
popa
scas
loop
cmpsl
cli
adc
fldcw
add
mov
popa
lods
out
imul
arpl
popa
lods
push
mov
lods
out
call
and
mov
ljmp
sub
and
mov
ds
out
mov
lret
popa
in
popa
cmp
out
jp
std
enter
fucomip
ljmp
sahf
shr
and
jne
ljmp
enter
fucomip
ljmp
lahf
loop
fucomip
ljmp
loop
popa
lahf
loop
cli
mov
inc
scas
std
enter
dec
lahf
sub
imul
ljmp
leave
sbb
popa
scas
out
fcmovu
sub
and
mov
mov
xlat
int
ljmp
lret
insb
loope
ljmp
in
into
jmp
ljmp
insb
jmp
ljmp
insl
push
jmp
ljmp
imul
scas
std
enter
pop
in
mov
cli
ljmp
enter
dec
in
shr
ljmp
ljmp
mov
mov
mov
sub
ljmp
outsb
mov
ljmp
adc
insl
jo
ljmp
scas
std
enter
shrb
ret
enter
shr
ljmp
ret
enter
dec
in
cmp
ljmp
shr
ljmp
mov
mov
mov
sub
ljmp
in
inc
shr
ljmp
repnz
std
enter
dec
in
jae
ljmp
shr
ljmp
mov
mov
mov
sub
ljmp
xlat
push
xor
in
adc
ljmp
mov
loop
ljmp
in
mov
ljmp
lahf
or
loop
std
enter
fucom
outsl
rcl
ljmp
push
loop
std
enter
dec
in
int
ljmp
shr
ljmp
mov
mov
mov
sub
ljmp
mov
shr
ljmp
push
aas
xchg
in
push
shr
ljmp
adc
sbb
xor
ljmp
shr
ljmp
mov
mov
mov
sub
ljmp
outsl
scas
adc
shr
ljmp
outsb
mov
ljmp
in
rclb
scas
std
enter
and
ljmp
push
xor
sbb
fwait
shr
ljmp
ljmp
mov
mov
mov
sub
ljmp
out
imul
mov
adc
ljmp
adc
popa
push
mov
out
adc
ljmp
in
mov
ljmp
mov
shl
in
mov
movsl
out
popa
lahf
loop
and
lods
ds
outsl
sub
inc
ljmp
sahf
int
repnz
adc
enter
xor
repnz
repnz
jle
repnz
ljmp
cli
std
enter
stos
sahf
out
imul
pop
shr
ljmp
popa
movsb
push
addr16
push
adc
mov
scas
out
data16
shr
ljmp
stc
popa
mov
mov
mov
sub
addr16
out
das
push
lret
popa
mov
fldenv
mov
mov
arpl
in
sub
movsb
jbe
mov
mov
out
mov
out
popa
lods
fisubrs
sahf
loopne
loop
mov
ljmp
shlb
shrb
sahf
jecxz
loop
leave
ljmp
mov
sub
outsl
push
ljmp
sub
ficomps
adc
fidivrs
enter
adc
popa
out
das
push
lret
sbb
fsubr
in
mov
ljmp
and
ljmp
popa
lods
outsl
sub
outsl
mov
lods
sahf
outsl
sub
outsl
mov
lods
cmpsb
outsl
sub
outsl
mov
ljmp
mov
popa
xchg
loop
out
stos
ljmp
outsl
mov
ljmp
out
out
push
lret
popa
mov
loopne
in
addr16
adc
data16
shr
ljmp
lahf
out
in
ljmp
out
mov
movsb
loopne
push
sub
imul
shr
ljmp
out
popa
scas
into
out
adc
fldcw
mov
loop
sbb
into
loop
in
repz
ljmp
sahf
into
loop
or
sub
call
or
sahf
popa
lods
lcall
imul
outsl
sub
lcall
mov
sub
jmp
xor
ljmp
ljmp
xchg
into
loop
popa
scas
into
out
sahf
enter
ljmp
ljmp
mov
ljmp
fldcw
sub
ljmp
add
outsl
and
mov
ret
popa
sbb
xchg
out
adc
ljmp
out
ljmp
scas
into
out
addr16
stos
push
adc
ljmp
adc
xchg
out
fiaddl
or
adc
popa
scas
loop
adc
pop
adc
add
ljmp
adc
adc
mov
out
mov
idivb
popa
lahf
loop
sbb
popl
ljmp
arpl
arpl
lret
repnz
adc
adc
in
pop
fsubr
ljmp
imul
popa
in
mov
enter
out
sub
data16
ljmp
adc
push
out
ljmp
mov
ljmp
mov
sub
ljmp
ljmp
sbb
ljmp
popa
in
popa
adc
inc
out
sub
repnz
sbb
arpl
popa
lods
out
in
out
cs
repnz
sbb
mov
mov
mov
enter
es
std
enter
lret
repnz
mov
std
enter
mov
sti
std
enter
clc
std
enter
mov
adc
dec
sub
repnz
sub
cs
repnz
sti
std
enter
and
repnz
push
mov
ret
xchg
loop
and
ljmp
ljmp
enter
lahf
cli
mov
push
imul
sbb
out
adc
mov
loope
lahf
adc
xchg
jmp
test
addr16
rclb
ljmp
call
imul
xchg
sbb
popa
xchg
loop
pop
mov
popa
and
ljmp
adc
ljmp
popa
scas
arpl
ljmp
insl
ljmpw
mov
sub
ljmp
insb
push
ljmp
ljmp
fs
ljmp
ljmp
sub
cli
imul
inc
inc
inc
fldcw
addr16
into
jmp
ljmp
mov
mov
std
enter
add
mov
stos
sar
enter
ljmp
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
adc
std
enter
int3
ljmp
in
or
ljmp
in
or
ljmp
ljmp
imul
outsl
popf
ret
ljmp
sahf
in
popa
jmp
jmp
cli
popa
movsb
repnz
and
adc
outsb
mov
ljmp
push
adc
add
adc
mov
sub
popa
and
arpl
ljmp
ret
ljmp
adc
popa
sbb
lret
ljmp
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
sub
enter
test
enter
popa
sbb
addr16
mov
and
ljmp
add
popa
sub
stos
out
mov
sbb
sub
outsl
xchg
ljmp
out
ljmp
in
aad
ljmp
sub
ljmp
ljmp
popa
fs
ljmp
insb
loop
ljmp
lret
xorb
popa
adc
outsb
mov
and
adc
arpl
sar
enter
ljmp
ljmp
fldcw
shrl
ljmp
popa
jmp
jmp
cli
imul
jbe
adc
lahf
ds
enter
add
adc
outsb
sbb
ljmp
adc
sub
enter
popa
sahf
into
loop
movsb
fisubrl
sahf
out
popa
jmp
mov
ljmp
imul
imul
popa
mov
mov
shl
cli
lods
std
enter
sahf
into
popa
and
ljmp
cmp
cli
lods
std
enter
fnstenv
sbb
addr16
xor
sub
sub
into
mov
adc
add
mov
popa
lahf
loop
popa
cmp
shr
lret
enter
nop
repz
std
enter
fsubr
ljmp
lahf
loop
int
ljmp
loop
cmp
lret
enter
sbb
popa
cmpsl
out
test
mov
adc
add
popa
scas
into
loop
lret
call
loop
mov
loop
mov
popa
out
das
push
lret
popa
xchg
into
popa
scas
out
adc
ljmp
outsl
mov
ljmp
fnstcw
sbb
mov
scas
loop
mov
arpl
popa
sub
out
fldcw
mov
mov
sub
ljmp
loop
xor
sub
out
sub
shll
jmp
mov
mov
into
outsl
adc
into
cli
in
test
in
xor
xchg
out
in
test
ljmp
in
mov
mov
mov
sub
ljmp
loop
xor
sub
out
sub
shll
jmp
mov
imul
imul
imul
imul
popa
imul
ljmp
ljmp
ljmp
add
ljmp
jmp
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
sub
ljmp
enter
testb
std
enter
lods
adc
enter
rcl
std
enter
cli
sar
enter
cmp
std
enter
pop
sar
enter
sar
enter
mov
std
enter
mov
lods
mov
sar
enter
ret
enter
cli
sar
enter
ljmp
sar
enter
ljmp
sub
ljmp
es
sub
ljmp
pop
adc
ljmp
popa
jmp
jmp
cli
imul
fs
ljmp
ljmp
jmp
jmp
cli
popa
insb
push
ljmp
sub
outsl
xor
ljmp
ljmp
outsl
sub
xor
std
enter
addr16
ljmp
ljmp
add
ljmp
ljmp
fs
ljmp
addr16
ljmp
ljmp
add
ljmp
mov
ljmp
ljmp
mov
outsl
sbb
ljmp
sub
xor
adc
sahf
loopne
xchg
out
adc
ljmp
sbb
enter
adc
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
ljmp
outsl
and
repnz
jmp
pusha
sti
sar
sahf
jecxz
add
cld
ljmp
jmp
mov
mov
lahf
or
mov
cmp
popa
sbb
ljmp
ljmp
std
enter
mov
lods
rcrb
aam
enter
cmp
std
enter
dec
aam
enter
xchg
aam
enter
rcl
std
enter
repnz
enter
sbb
std
enter
and
std
enter
push
xlat
std
enter
inc
xlat
std
enter
jp
std
enter
xchg
xlat
std
enter
adc
enter
ret
ljmp
in
pop
ret
ljmp
in
pop
ret
ljmp
in
pop
ret
ljmp
in
pop
ret
ljmp
in
pop
ret
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
sbb
sub
enter
xor
ljmp
jecxz
ljmp
ljmp
mov
sub
enter
in
dec
ljmp
push
repnz
lahf
stc
cmp
repnz
test
enter
cli
std
enter
push
repnz
mov
std
enter
popa
out
das
push
lret
adc
popa
stos
mov
loop
lods
popa
out
das
push
lret
imul
enter
movsb
test
mov
mov
popf
ljmp
ljmp
ljmp
mov
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
ljmp
std
enter
enter
ljmp
ljmp
xchg
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
ljmp
ljmp
fistl
and
pop
jmp
inc
ljmp
and
jns
sti
gs
mov
cmp
scas
shl
cli
outsb
pop
loop
rol
stc
cli
pop
mov
sti
push
insb
ljmp
pop
jl
pop
push
lock
pop
jbe
inc
ljmp
xchg
in
movsb
icebp
cli
inc
loop
rol
stc
mov
and
imul
inc
ljmp
ljmp
ljmp
jmp
ljmp
ljmp
mov
enter
enter
enter
enter
enter
enter
enter
enter
call
jmp
in
ljmp
push
lock
pop
jbe
inc
ljmp
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
lock
pop
jbe
inc
ljmp
ljmp
ljmp
xlat
loope
gs
loop
rol
repz
ljmp
xchg
out
sub
ljmp
notb
adc
out
lahf
loop
out
ljmp
mov
lahf
out
popa
in
shr
add
cmc
ljmp
std
enter
sbb
pmaddwd
ljmp
mov
loop
ljmp
xchg
cmc
adc
out
lahf
popa
loop
lahf
cli
mov
sbb
out
popa
loop
mov
mov
sub
ljmp
into
cli
adc
sahf
into
cli
add
ljmp
popa
push
imul
jmp
ljmp
mov
ljmp
in
data16
ljmp
lret
adc
enter
popa
test
push
lret
imul
in
mov
out
popa
in
arpl
fsts
enter
cli
std
enter
mov
and
cli
ljmp
mov
repnz
mov
repnz
clc
std
enter
data16
hlt
ljmp
out
popa
mov
aas
push
lret
adc
mov
scas
push
mov
loop
adc
out
mov
popa
loop
adc
popa
scas
out
adc
pop
hlt
ljmp
adc
popa
scas
out
popa
loop
mov
data16
popa
xchg
sub
bnd
out
das
push
lret
adc
adc
into
out
dec
ljmp
adc
sub
ljmp
ret
into
adc
notb
adc
out
lahf
loop
out
ljmp
mov
lahf
cli
mov
add
hlt
ljmp
std
enter
sbb
fdiv
ljmp
cli
mov
popa
in
mov
shrl
adc
enter
popa
scas
cli
adc
adc
notb
out
pushf
loop
adc
popa
scas
cli
mov
loop
sub
mov
sub
ljmp
lahf
loop
movsb
fisubl
adc
in
sub
cmpsl
out
lods
scas
arpl
fldcw
mov
sub
ljmp
sahf
into
loop
movsb
fisubl
adc
in
das
ljmp
fs
adc
ljmp
mov
loop
outsl
sub
xchg
iret
xlat
adc
hlt
imul
call
insb
out
jmp
ljmp
sub
xchg
jmp
ljmp
ljmp
add
addr16
ljmp
ljmp
adc
adc
ljmp
popa
fs
ljmp
push
popa
and
mov
popa
sbb
mov
in
std
cmc
ljmp
mov
ljmp
adc
outsl
ljmp
ljmp
jmp
mov
pop
sti
std
enter
outsl
ljmp
ss
and
loop
mov
loop
std
enter
popa
xor
outsb
arpl
ljmp
outsl
sub
push
repnz
mov
std
enter
jle
repnz
xchg
ljmp
repnz
adc
enter
call
and
repnz
ljmp
lret
adc
enter
lret
dec
jp
repnz
adc
outsl
cld
ljmp
std
enter
jmp
ljmp
scas
loop
fisttps
cli
std
enter
sub
sub
lahf
loop
cmp
sub
outsb
push
out
jmp
ljmp
mov
ljmp
enter
sti
std
enter
outsb
mov
ljmp
outsl
push
push
adc
sbb
adc
repnz
loop
std
enter
outsl
add
adc
lret
adc
enter
adc
adc
pop
adc
add
adc
jmp
ljmp
imul
adc
adc
adc
in
push
ljmp
adc
enter
xchg
cmpsb
scas
adc
adc
mov
adc
sbb
adc
repnz
loop
std
enter
outsl
push
adc
adc
pop
adc
add
adc
jmp
ljmp
adc
adc
adc
in
jnp
ljmp
mov
enter
ljmp
mov
sahf
cltd
outsl
push
adc
adc
cli
std
enter
push
adc
adc
xchg
adc
push
adc
adc
adc
adc
push
push
adc
sbb
adc
sbbb
enter
loop
std
enter
outsl
push
adc
adc
pop
adc
add
adc
ljmp
outsl
push
adc
adc
adc
dec
loop
repnz
adc
out
lret
ljmp
xor
lret
repnz
xlat
out
lret
imul
ljmp
sub
adc
ljmp
jp
repnz
fists
repnz
repnz
cli
std
enter
mov
and
out
ljmp
inc
cli
std
enter
cli
adc
cmp
ljmp
popa
xlat
stos
sti
std
enter
sahf
std
mov
push
ljmp
adc
mov
mov
mov
loop
or
ljmp
adc
enter
into
out
mov
add
ljmp
out
ljmp
cli
outsl
adc
push
ljmp
cli
std
enter
popa
xor
ljmp
call
adc
mov
mov
adc
adc
cli
std
enter
mov
sub
ljmp
adc
enter
add
pop
cli
std
enter
into
out
sub
lret
adc
enter
push
imul
jmp
push
ljmp
adc
in
scas
out
sbb
ret
lcall
std
enter
pop
adc
outsl
ljmp
sub
ljmp
adc
addr16
adc
mov
and
out
mov
call
push
mov
ljmp
std
enter
cs
mov
mov
adc
repnz
push
lret
in
pop
repnz
lcall
std
enter
call
adc
cmp
sub
jmp
lret
jmp
repnz
repnz
xlat
ss
std
enter
adc
mov
adc
popa
scas
push
popa
ja
adc
aas
push
lret
popa
loop
cwtl
lret
mov
sub
jmp
lret
jmp
repnz
repnz
push
sbb
sub
sub
popa
scas
push
adc
mov
scas
push
adc
mov
outsl
xchg
pop
adc
ljmp
adc
das
push
lret
adc
adc
addr16
pop
adc
loop
mov
addr16
mov
mov
xchg
stc
adc
call
scas
adc
loop
scas
push
mov
loop
pop
xchg
adc
sbb
push
jmp
outsl
dec
std
ljmp
mov
sub
ljmp
into
loop
stos
mov
sub
ljmp
outsl
adc
jmp
lods
popa
sahf
into
out
movsb
fisubl
adc
in
lock
ljmp
fs
adc
mov
adc
sub
xchg
adc
mov
loop
shrl
push
xchg
jmp
push
pop
mov
xchg
scas
std
enter
adc
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
into
loop
bound
jmp
loop
sub
pop
push
ljmp
ljmp
arpl
fldcw
sub
ljmp
loop
sbb
sahf
repnz
scas
out
add
in
ret
ljmp
enter
sub
sub
adc
xchg
mov
movsb
fisubl
adc
in
ljmp
out
fs
adc
ljmp
mov
push
ljmp
xor
ljmp
adc
enter
loop
push
adc
push
ljmp
sub
std
enter
call
add
and
adc
lahf
push
adc
ljmp
cli
std
enter
cmpsl
loop
aas
adc
or
ljmp
cmpsl
loop
pushf
unpckhps
ljmp
movb
adc
sahf
loopne
scas
push
jmp
outsl
cltd
loope
ljmp
sub
ljmp
into
loop
stos
stos
arpl
fldcw
sub
ljmp
xchg
mov
movsb
fisubl
adc
in
out
ljmp
stos
adc
ljmp
mov
loop
outsl
sub
xchg
iret
xlat
adc
hlt
imul
jmp
movsb
arpl
ljmp
fldcw
mov
sub
ljmp
and
insb
adc
ljmp
add
adc
push
ljmp
adc
pop
push
adc
adc
ljmp
popa
fs
ljmp
push
popa
and
mov
xchg
out
mulb
into
out
adc
stos
add
loop
adc
imul
ljmp
mov
lahf
out
popf
pop
popa
and
fucomi
ljmp
lahf
popa
in
adc
mov
std
imul
popa
xchg
mov
adc
ljmp
sub
ljmp
scas
adc
ljmp
ljmp
mov
scas
sbb
mov
cmpsl
add
mov
enter
cli
outsl
sub
cmpsl
add
sbb
mov
enter
cli
mov
sub
ljmp
adc
popa
out
lret
repnz
xchg
into
cli
popa
in
subl
jecxz
ljmp
adc
cs
repnz
adc
popa
lods
out
subl
jecxz
ljmp
lods
out
mov
sub
cli
mov
mov
clc
std
enter
addr16
mov
mov
jmp
ljmp
outsl
sub
enter
sahf
mov
enter
ljmp
mov
push
popa
mov
arpl
addr16
adc
cli
push
ljmp
call
popa
scas
out
mov
mov
dec
popa
loop
adc
xchg
loope
sub
imul
mov
sub
ljmp
push
cmp
sahf
into
loop
sahf
into
out
movsb
pop
add
ljmp
imul
adc
pushf
mov
sbb
outsl
sub
ljmp
ljmp
loop
clc
ljmp
adc
in
mov
sub
ljmp
mov
popa
xor
popa
in
and
mov
test
push
loop
ljmp
xchg
lret
sbb
ljmp
adc
adc
sub
cmpsl
sbb
mov
sub
ljmp
mov
xor
cmpsl
push
sub
mov
xor
sub
in
ljmp
mov
mov
out
mov
shrl
xchg
mov
in
mov
loop
ljmp
shrl
xchg
adc
ljmp
mov
sub
mov
ljmp
mov
cld
popa
in
mov
ljmp
mov
call
mov
sub
ljmp
out
mov
push
ljmp
cmpsl
push
sub
in
mov
outsl
sub
outsl
and
gs
loopne
ljmp
adc
enter
add
mov
addr16
ljmp
sahf
into
out
in
mov
sub
ljmp
mov
popa
adc
sub
cmpsl
adc
mov
xlat
imul
in
test
xchg
push
loop
outsl
sar
ljmp
cmpsl
sbb
mov
imul
scas
sbb
adc
mov
mov
sub
ljmp
ljmp
xchg
out
xor
push
popa
in
mov
adc
in
push
ljmp
cmpsl
out
out
mov
shrl
in
dec
ljmp
xor
in
or
xchg
out
ljmp
ljmp
add
in
mov
ljmp
mov
test
push
ljmp
ljmp
xchg
mov
insb
push
ljmp
dec
in
ljmp
add
fs
ljmp
cmpsl
loop
fmuls
adc
addr16
mov
sub
addr16
jmp
ljmp
out
sub
insl
xor
mov
and
loop
mov
mov
xor
shrl
in
test
lahf
loop
cmpsl
out
out
popa
in
mov
shrl
xchg
jecxz
mov
in
fsubp
ljmp
imul
imul
popa
lods
pop
movsb
pop
adc
mov
mov
xor
sub
adc
xchg
out
out
stos
ljmp
mov
imul
ljmp
scas
into
loop
sub
xchg
in
ljmp
pushf
in
ljmp
out
outsl
add
repnz
sub
out
push
jmp
ljmp
into
out
inc
ljmp
adc
ljmp
ljmp
addr16
scas
push
and
push
or
ljmp
pop
sbb
xchg
mov
loop
rol
repz
mov
ljmp
test
ljmp
ljmp
les
ljmp
mov
scas
test
rcr
stos
fadd
scas
shrb
lods
rcr
fstp
fcmovu
stos
stos
fcmovu
fldcw
xchg
mov
test
cwtl
pushf
cwtl
ljmp
xor
adc
adc
adc
adc
jmp
cli
add
xor
cli
std
enter
out
sahf
into
out
sub
add
adc
popa
jmp
jmp
cli
add
xor
adc
adc
adc
arpl
adc
adc
lcall
lahf
jmp
add
push
adc
xor
rcll
popa
cmp
add
sub
outsb
xchg
xor
sub
cmp
out
lahf
jmp
add
add
shlb
shrl
mov
loopne
add
ljmp
mov
sahf
in
popa
ljmp
cmpsb
into
arpl
adc
and
outsb
dec
push
adc
sahf
out
popa
sub
pop
popa
loop
popa
sti
arpl
add
adc
popa
sub
daa
add
adc
outsb
jl
adc
jmp
and
mov
pushl
sti
std
enter
ljmp
lods
scas
outsl
sub
outsb
loopne
adc
sbbb
ljmp
std
enter
add
push
adc
cmp
std
enter
adc
lahf
loop
jmp
sti
std
enter
out
lahf
popa
cli
popa
and
loop
sub
inc
push
adc
lahf
loop
jmp
sti
std
enter
add
popa
and
out
add
sub
lahf
loop
jmp
sti
std
enter
es
popa
and
out
push
mov
std
enter
ljmp
ljmp
ljmp
imul
pushf
pop
ljmp
imul
inc
sbb
sahf
into
popa
sub
popa
pop
sub
call
imul
test
ljmp
lock
and
xor
ljmp
imul
ljmp
adc
ljmp
ljmp
daa
adc
adc
enter
cli
std
enter
adc
sub
call
dec
add
aam
adc
adc
push
sub
pop
lcall
outsl
sbb
loop
in
sub
and
cli
add
adc
shrb
adc
mov
fldcw
add
add
daa
adc
lret
daa
adc
adc
adc
add
add
adc
repnz
add
adc
cmp
adc
popa
jmp
mov
ljmp
add
es
out
add
ljmp
pop
ljmp
out
popa
and
ljmp
xchg
mov
and
and
ljmp
popa
and
adc
sti
std
enter
adc
adc
adc
xor
adc
push
in
adc
adc
dec
and
arpl
ljmp
pushf
out
add
pop
ljmp
mov
pushf
out
add
cli
out
ljmp
push
scas
xor
std
enter
mov
lods
out
lahf
roll
adc
cld
sub
lahf
xor
popa
cmpsl
loop
add
lahf
adc
lahf
push
add
adc
push
popa
cmpsl
push
mov
outsl
mov
sub
clc
out
ljmp
scas
xor
std
enter
outsb
movsb
cmp
shrl
add
push
adc
sahf
cld
sub
lahf
xor
popa
cmpsl
loop
add
icebp
ljmp
add
adc
push
popa
cmpsl
push
mov
leave
mov
addr16
popa
and
inc
aas
adc
adc
out
popf
loop
popf
out
adc
push
sti
std
enter
push
adc
adc
cli
out
ljmp
add
pop
ljmp
fsts
adc
sub
ljmp
std
enter
adc
push
aas
adc
mov
repnz
cli
std
enter
adc
jmp
out
ljmp
imul
in
int3
adc
ljmp
mov
std
enter
call
adc
loop
dec
sub
lahf
loop
pop
xchg
adc
adc
ljmp
std
enter
adc
loop
jecxz
adc
or
ljmp
cmpsl
loop
mov
ja
adc
call
adc
jmp
outsb
loope
adc
adc
lret
adc
enter
adc
popa
mov
xchg
adc
cli
push
ljmp
in
loopne
adc
adc
adc
stos
adc
cmpb
jbe
push
mov
adc
adc
stos
adc
cmpb
jbe
push
mov
adc
adc
stos
adc
cmpb
jbe
push
mov
adc
fldcw
mov
popa
movsb
fidivrl
scas
loop
mov
ljmp
loop
loop
icebp
add
adc
stos
adc
cmpb
jbe
push
mov
adc
push
sub
jp
std
enter
sbb
mov
adc
sub
ljmp
adc
cli
mov
and
sbb
cmpsb
and
sub
ljmp
adc
cli
mov
push
scas
std
enter
dec
in
fsubl
adc
sub
ljmp
adc
push
adc
lret
ljmp
and
mov
lds
adc
cmp
pop
adc
push
adc
jnp
adc
outsb
call
ljmp
adc
adc
clc
std
enter
inc
sbb
out
adc
enter
mov
popa
in
mov
add
adc
and
out
adc
pop
adc
lret
in
cmc
push
adc
lret
in
stc
push
adc
push
cli
std
enter
adc
mov
repnz
cli
std
enter
adc
out
ljmp
enter
lret
stos
dec
dec
repnz
adc
push
adc
adc
arpl
ror
repnz
adc
lret
adc
add
adc
enter
lret
imul
ljmp
cmp
adc
repnz
std
enter
iret
repnz
repnz
pop
adc
adc
dec
repnz
pop
adc
in
push
iret
push
adc
repnz
ret
sbb
repnz
jp
std
enter
repz
sbb
cmp
xchg
out
scas
sbb
adc
adc
in
pop
push
adc
out
push
or
adc
push
adc
in
push
and
sub
stos
mov
push
adc
push
adc
add
push
adc
cli
std
enter
fcmove
repnz
push
adc
fstpt
enter
call
clc
std
enter
outsb
sub
adc
adc
sub
call
imul
inc
add
out
dec
add
loop
outsb
jle
adc
in
xor
adc
adc
lret
repnz
add
outsl
inc
add
adc
adc
adc
ljmp
std
enter
adc
adc
sub
sahf
loop
sub
outsl
imul
adc
enter
adc
lret
repnz
add
repnz
adc
add
std
enter
cmp
std
enter
adc
adc
aas
adc
adc
aas
adc
adc
aas
adc
adc
aas
adc
adc
aas
adc
adc
aas
adc
adc
aas
adc
adc
cmp
adc
mov
adc
adc
cmp
adc
std
enter
call
ljmp
enter
dec
in
das
call
in
push
call
mov
arpl
fldcw
mov
mov
loop
shr
mov
outsl
jbe
ljmp
push
mov
sub
dec
in
call
in
xchg
call
stos
addr16
mov
mov
mov
sub
ljmp
in
mov
ljmp
push
stos
test
enter
dec
in
mov
cmp
outsb
aam
ljmp
scas
mov
mov
mov
sub
ljmp
in
enter
push
cli
ljmp
enter
dec
in
in
ljmp
call
scas
addr16
mov
mov
mov
sub
ljmp
in
por
ljmp
lret
enter
dec
in
cmp
ljmp
jmp
ljmp
mov
mov
mov
sub
ljmp
int
ljmp
ljmp
cli
test
enter
dec
in
jp
ljmp
jmp
ljmp
mov
mov
mov
sub
ljmp
push
xor
in
mov
ljmp
push
jb
std
enter
dec
in
movsl
jmp
ljmp
ljmp
cmpb
out
fldcw
mov
mov
loop
imul
test
enter
mul
outsl
enter
push
cli
ljmp
enter
dec
in
in
ljmp
jmp
ljmp
mov
mov
mov
sub
ljmp
js
sbb
in
or
ljmp
push
sbb
sbb
daa
ljmp
sub
ljmp
mov
adc
mov
mov
loop
imul
xchg
enter
mov
ljmp
push
or
sbb
ljmpw
in
xchg
ljmp
test
mov
mov
mov
sub
ljmp
imul
cli
ljmp
enter
dec
lahf
mov
popa
mov
mov
mov
mov
sub
ljmp
popa
pop
jl
lahf
les
ljmp
enter
dec
lahf
hlt
outsl
cmp
addr16
mov
mov
mov
sub
ljmp
scas
ljmp
mov
fldcw
mov
loop
mov
std
enter
add
and
lret
add
lret
repnz
aad
adc
pop
xchg
ljmp
unpckhps
adc
push
pushf
sub
mov
test
mov
mov
adc
scas
out
add
adc
popa
in
mov
scas
out
scas
sub
cli
add
popa
loop
int
mov
cwtl
sub
fidivrs
enter
adc
adc
mov
ljmp
sub
imul
adc
mov
loop
sub
mov
and
adc
adc
push
adc
adc
add
adc
jb
ljmp
ljmp
push
adc
or
ljmp
adc
movsb
push
adc
and
cmp
push
fisubrl
dec
in
xchg
daa
adc
adc
call
adc
ljmp
outsl
xchg
adc
adc
ljmp
enter
cli
std
enter
loopne
out
stos
ljmp
outsl
xchg
adc
adc
cli
std
enter
call
adc
push
adc
xchg
adc
adc
adc
sub
ljmp
scas
push
mov
adc
clc
std
enter
sub
adc
adc
icebp
or
jmp
outsb
sti
or
adc
lret
adc
enter
adc
adc
iret
or
jmp
outsb
icebp
or
adc
adc
enter
cli
std
enter
adc
loop
sub
adc
in
push
lods
or
in
push
in
adc
add
stos
lret
or
lret
or
lret
or
xchg
adc
lret
adc
enter
adc
dec
lods
std
enter
cli
push
lret
enter
fnstenv
sbb
jb
adc
test
enter
cli
popa
sbb
enter
dec
lahf
loope
scas
loop
mov
adc
ljmp
popa
in
cmpsl
out
or
std
enter
outsl
sub
addr16
cmp
scas
out
mov
test
enter
adc
sahf
rcrb
in
lahf
fisubl
outsl
lret
ljmp
adc
enter
sti
std
enter
arpl
popa
cmpsb
into
loop
out
add
adc
add
lret
adc
enter
loopne
in
in
push
jge
adc
arpl
into
loop
mov
adc
fnstcw
outsl
sub
rcrl
out
sarl
xchg
push
sarl
sahf
xchg
addr16
cmp
shrl
out
push
adc
jge
popa
sub
jge
add
sbb
and
jmp
into
incb
or
adc
imul
and
popa
loop
and
out
lahf
fcmovnbe
and
out
outsl
sbb
int3
mov
fcmove
repnz
cli
std
enter
add
adc
rcrl
cmp
sbb
cmp
ljmp
adc
ljmp
popa
in
adc
and
mov
xchg
repz
lods
out
popa
out
push
outsl
sub
adc
lods
loopne
rcll
xchg
or
ljmp
adc
enter
adc
ljmp
sahf
into
out
in
mov
cmp
adc
outsl
sub
fs
adc
adc
out
push
mov
out
push
lods
loopne
rcll
in
inc
or
out
ljmp
cli
push
ljmp
fnstenv
sbb
mov
adc
scas
std
enter
cli
push
jb
std
enter
fldcw
sbb
aad
adc
cmp
cmp
bound
sbb
sub
dec
in
enter
popa
scas
into
repnz
ljmp
push
mov
nop
pop
adc
out
push
lcall
sub
addr16
pop
adc
adc
ljmp
push
in
in
push
add
adc
in
shr
jb
std
enter
cli
push
jb
std
enter
sbb
popa
scas
cli
fstps
repnz
adc
adc
ljmp
adc
pop
adc
ljmp
stos
ljmp
ljmp
ljmp
sub
push
sub
cli
sub
push
pop
ljmp
imul
ljmp
ljmp
sub
mov
sub
test
jmp
call
ljmp
test
mov
scas
cmpsb
cmpsb
lods
sahf
scas
test
sahf
mov
scas
xchg
test
test
lods
sahf
test
movsl
mov
scas
xchg
cltd
sahf
cwtl
mov
cwtl
ljmp
lea
mov
cwtl
ljmp
xor
scas
push
and
push
or
addr16
scas
push
and
push
or
std
enter
fcomp
ffreep
fcomp
ffreep
fcomp
fucomip
ljmp
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
ljmp
fst
fsubr
ljmp
ljmp
ljmp
addl
ljmp
xchg
test
mov
addl
ljmp
out
loop
loop
out
out
call
ja
repnz
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
ljmp
ljmp
ljmp
ljmp
adc
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
adc
ljmp
ljmp
test
sahf
ljmp
cltd
ljmp
ljmp
cld
cmp
pop
or
dec
and
int
push
xor
sbb
je
inc
ljmp
enter
enter
enter
enter
enter
ljmp
repnz
enter
enter
enter
enter
enter
ljmp
std
enter
enter
enter
enter
enter
enter
ljmp
cmp
pop
lret
ljmp
nop
cmpsl
outsl
xlat
push
cmp
pop
lret
ljmp
nop
cmpsl
outsl
xlat
push
cmp
pop
lret
ljmp
addb
inc
shll
ljmp
out
shll
ljmp
out
shll
ljmp
stos
ror
and
ljmp
push
stos
ror
and
ljmp
call
ljmp
ljmp
ljmp
ljmp
jmp
into
icebp
cli
outsb
pop
loop
rol
stc
addr16
jl
pop
push
lock
pop
jbe
inc
ljmp
pop
pop
push
lock
pop
jbe
inc
ljmp
pop
pop
push
lock
pop
jbe
inc
ljmp
mov
pop
fwait
ljmp
test
sarb
sti
dec
and
loopne
es
icebp
cli
popa
and
inc
ljmp
ljmp
ljmp
jmp
ljmp
ljmp
jmp
ljmp
ljmp
jmp
ljmp
ljmp
jmp
ljmp
ljmp
jmp
ljmp
ljmp
in
sahf
or
icebp
cli
jnp
ljmp
jmp
ljmp
ljmp
inc
jbe
fisubs
inc
ljmp
ljmp
ljmp
inc
les
fisubs
inc
ljmp
jno
add
ljmp
pop
jl
pop
push
lock
pop
jbe
inc
ljmp
pop
pop
push
lock
pop
jbe
inc
ljmp
pop
pop
push
lock
pop
jbe
inc
ljmp
pop
pop
push
lock
pop
jbe
inc
ljmp
add
into
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
loop
fcomip
ljmp
lods
out
ljmp
mov
mov
sbb
imul
ljmp
ljmp
scas
loop
mov
and
sub
ljmp
ljmp
ljmp
imul
ljmp
mov
sub
ljmp
ljmp
adc
enter
xchg
adc
sahf
stos
adc
add
lods
cmpsb
adc
enter
cmpsb
inc
adc
mov
into
adc
add
xchg
cmpsb
ljmp
sub
mov
and
loop
fldcw
add
sub
or
int
ljmp
imul
ljmp
sbb
gs
ljmp
int3
popa
movsb
mov
outsl
and
jmp
cli
popa
movsb
cmpsb
imul
jmp
cli
imul
sbb
sahf
into
cli
adc
inc
imul
ljmp
out
ljmp
xor
ljmp
fldcw
sub
ljmp
out
push
lahf
cli
xor
ljmp
fldcw
mov
loop
popa
sahf
into
out
int3
ljmp
out
stos
lahf
out
jmp
mov
in
mov
xor
out
fwait
out
add
jbe
ljmp
jg
popa
sub
sub
popa
push
imul
lahf
out
xor
xchg
stc
xor
ljmp
imul
sub
ljmp
call
arpl
mov
ljmp
jmp
outsl
sub
popa
mov
mov
sahf
xchg
add
scas
adc
scas
loop
jmp
lahf
push
popa
xchg
push
popa
and
scas
loop
cmp
scas
push
sub
call
mov
xchg
cli
call
mov
in
ljmp
dec
imul
adc
popa
jmp
not
sbb
ljmp
jmp
adc
jno
ljmp
loop
lods
adc
loopne
ljmp
ljmp
push
idivb
imul
ljmp
popa
sub
sti
imul
ljmp
mov
mov
sub
ljmp
adc
in
ljmp
lods
int
ljmp
adc
popa
in
popa
and
sbb
jmp
ljmp
popa
and
mov
clc
out
ljmp
scas
push
mov
sti
std
enter
out
call
mov
std
enter
add
popa
sbb
sahf
into
out
push
ljmp
mov
ljmp
in
sub
ljmp
ljmp
sub
lods
out
ljmp
mov
popa
sbb
ljmp
mov
outsl
sub
in
popa
and
mov
in
popa
and
mov
jmp
jmp
mov
mov
out
ljmp
push
mov
sbb
imul
ljmp
mull
adc
out
ljmp
adc
ljmp
ljmp
movsb
mov
scas
push
mov
ljmp
adc
scas
loop
jmp
mov
pushf
out
add
ljmp
lahf
repnz
ljmp
out
adc
int
ljmp
jbe
movsb
mov
ljmp
mov
in
popa
and
mov
in
sub
ljmp
mov
adc
ljmp
xchg
into
out
ljmp
popa
jmp
stos
out
ljmp
inc
ljmp
sbb
ljmp
out
ljmp
popa
jmp
stos
out
ljmp
inc
ljmp
jmp
jp
ljmp
into
out
ljmp
popa
jmp
stos
out
ljmp
inc
ljmp
jmp
stos
out
ljmp
ljmp
lret
ljmp
imul
and
add
icebp
ljmp
in
mov
sub
ljmp
ljmp
in
popa
and
lods
out
ljmp
ljmp
out
ljmp
popa
jmp
stos
out
ljmp
inc
ljmp
jmp
stos
out
ljmp
ljmp
out
ljmp
out
ljmp
mov
mov
cli
mov
in
adc
outsl
adc
ljmp
adc
cmpsb
scas
push
mov
add
jmp
push
outsl
sub
adc
adc
ljmp
out
add
jge
ljmp
lahf
loop
sub
ljmp
adc
push
popa
movsb
cmpsb
rcll
ljmp
lahf
repnz
sahf
in
lahf
adc
popa
and
call
ljmp
enter
and
mov
in
popa
and
mov
in
in
imul
ljmp
cmpsb
outsl
and
ljmp
mov
in
add
call
sub
popa
mov
in
add
call
sub
popa
mov
in
add
call
sub
popa
mov
jecxz
sahf
into
out
add
call
ljmp
jecxz
sahf
into
out
add
jmp
ljmp
imul
sbb
jmp
ljmp
inc
inc
inc
inc
popa
insb
into
in
ljmp
ljmp
push
jl
ljmp
sbb
mov
out
fs
in
ljmp
popa
fs
in
ljmp
mov
outsb
ljmp
popa
fs
in
ljmp
mov
sub
outsb
jl
ljmp
sbb
into
in
ljmp
xchg
or
loop
mov
fs
in
ljmp
jmp
mov
ljmp
adc
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
add
adc
popa
cmpsb
into
loop
mov
outsl
and
lods
loop
sub
ljmp
add
popa
stos
out
outsl
sub
sub
sub
popa
stos
loop
sub
sub
sub
popa
scas
into
out
outsl
sub
sub
ljmp
loop
popa
cmpsb
into
out
popa
jmp
sub
sub
sahf
in
popa
stos
out
sub
ljmp
sbb
out
add
dec
adc
ljmp
arpl
lods
arpl
out
adc
in
inc
cmp
sub
loopne
or
shrl
sub
ljmp
lods
popa
sub
sub
ljmp
ljmp
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
out
sub
enter
fdivl
adc
adc
add
and
adc
stos
fisubrl
popa
stos
fisubrs
mov
adc
into
loop
sub
ljmp
ljmp
in
arpl
arpl
into
out
popa
stos
cli
arpl
popa
stos
popa
cmpsb
into
loop
jmp
loop
mov
out
popa
sbb
out
popa
and
push
jbe
adc
popa
ljmp
mov
push
adc
in
sub
lret
adc
enter
popa
and
push
adc
lods
cli
add
adc
mov
add
lods
cli
lahf
movsl
popa
lods
into
shrl
push
popa
and
mov
adc
jmp
cli
ret
xchg
popa
and
adc
adc
arpl
adc
adc
shrl
lahf
in
popa
lods
arpl
fldcw
arpl
sub
ljmp
sub
ret
into
arpl
fcmovb
das
add
mov
idivb
loop
xor
jmp
fsubp
insl
int
ljmp
test
scas
sbb
popa
and
xor
adc
scas
sbb
sub
adc
popa
lahf
out
and
cli
popa
sub
xchg
sub
call
imul
test
ret
test
arpl
mov
mov
sub
ljmp
xchg
into
sub
call
popa
scas
loop
or
sbb
test
jmp
fiaddl
ds
mov
sbb
cmp
arpl
adc
inc
sub
sub
xchg
push
arpl
sub
xchg
push
popa
sub
sub
lret
adc
enter
scas
push
in
jmp
ljmp
pushf
arpl
sub
lret
adc
enter
outsb
loop
ljmp
push
imul
cmp
scas
out
xchg
sbb
arpl
mov
adc
popa
cmpsl
sbb
out
adc
sub
call
imul
cmpsl
out
xchg
push
popa
lahf
add
sub
push
outsl
adc
mov
xchg
push
arpl
addr16
fiaddl
mov
adc
shrl
scas
out
mov
popa
and
scas
push
popa
shlb
sub
call
out
scas
adc
popa
and
jmp
dec
lahf
sub
add
push
popa
mov
cltd
out
shll
test
arpl
popa
and
aam
adc
shr
lahf
aam
and
ficoml
adc
test
adc
and
mov
adc
shll
lahf
lock
test
arpl
lret
adc
enter
adc
add
popa
scas
push
popa
xlat
jbe
std
enter
xchg
hlt
popa
cmpsl
push
addr16
fisubrs
faddl
lret
adc
imul
lahf
push
sub
lret
adc
into
adc
adc
mov
popa
xchg
loop
lods
fcmovbe
lods
ficomps
imul
addr16
popa
and
jno
adc
ljmp
sub
xchg
adc
and
loop
xchg
adc
shll
lahf
leave
popa
lods
jmp
popa
lods
faddp
lods
fisubl
ret
cltd
call
out
jmp
mov
and
loop
popa
lods
into
jmp
adc
adc
enter
cli
std
enter
in
lahf
loop
scas
out
lret
cmp
adc
popa
movsb
mov
fisubl
ret
cltd
call
out
jmp
mov
ljmp
adc
add
adc
popa
and
incb
xor
adc
add
mov
popa
xchg
into
jmp
into
ret
xchg
ret
out
popa
and
sub
and
add
adc
in
popa
lods
into
arpl
mov
mov
out
ljmp
add
adc
popa
lods
cli
arpl
lods
lret
mov
popa
cmpsb
into
cli
popa
lods
lret
lahf
fsubl
repnz
mov
adc
lods
negb
mov
mov
out
ljmp
adc
popa
lods
into
arpl
movb
jmp
test
add
popa
stos
mulb
popa
stos
lret
into
loop
jmp
loop
mov
jno
adc
jmp
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
push
ljmp
out
adc
jge
adc
sub
ljmp
loop
cmp
adc
out
movsb
out
adc
arpl
adc
mov
into
loop
pop
adc
into
loop
movsb
out
add
adc
ljmp
push
ljmp
into
adc
jl
adc
sub
ljmp
loop
cmp
adc
out
movsb
into
adc
lds
adc
mov
into
loop
pop
adc
into
loop
movsb
into
add
jo
adc
dec
lretw
repnz
xchg
into
out
adc
sahf
into
outsl
adc
lcall
std
enter
cmp
mov
cli
std
enter
mov
out
ljmp
sub
mov
shrl
in
sub
mov
out
ljmp
lahf
leave
outsb
and
pusha
and
mov
stos
lods
lods
outsb
and
and
in
sub
add
icebp
sub
adc
sbb
lcall
adc
jmp
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
mov
cli
sbb
ljmp
fldcw
mov
out
ljmp
add
inc
adc
add
mov
ljmp
pusha
cld
pusha
and
cli
lahf
leave
outsb
and
pusha
and
mov
lods
stos
stos
outsb
and
and
popa
sub
icebp
sub
adc
out
ljmp
add
ljmp
popa
sbb
imul
ljmp
mov
into
mov
in
hlt
int
ljmp
sub
ljmp
in
ljmp
in
ljmp
ljmp
in
popa
and
insb
imul
ljmp
mov
insb
repnz
ljmp
out
ljmp
insb
imul
ljmp
and
outsl
in
ljmp
popa
insb
imul
ljmp
mov
lods
mov
cli
xor
ljmp
fldcw
mov
out
ljmp
add
insb
repnz
ljmp
out
ljmp
insb
imul
ljmp
sahf
into
loop
and
fucomi
ljmp
loop
insb
repnz
ljmp
add
popa
push
mov
push
mov
sub
outsb
icebp
in
ljmp
addr16
xchg
into
out
sbb
ljmp
sub
ljmp
sub
ljmp
ljmp
ljmp
adc
aas
in
ljmp
out
ljmp
imul
push
out
ljmp
ljmp
pop
cli
in
ljmp
ljmp
adc
ljmp
adc
ljmp
sub
mov
mov
cltd
loop
cs
sahf
mov
lahf
shlb
adc
clc
std
enter
out
xchg
cli
mov
in
sub
loop
mov
adc
sahf
test
lds
shlb
imul
mov
and
mov
sti
mov
ficoml
enter
adc
enter
sbb
add
jmp
ljmp
cmp
pushl
std
enter
sbb
or
xchg
in
xor
loopne
inc
imul
dec
xlat
in
stos
ljmp
ljmp
ljmp
popa
popa
in
imul
mov
pushl
std
enter
arpl
mov
clc
std
enter
add
loop
ljmp
ljmp
adc
ljmp
ljmp
ljmp
popa
in
imul
mov
pushl
std
enter
jmp
scas
out
popa
in
adc
clc
std
enter
add
adc
add
adc
sub
pushl
std
enter
jmp
in
popa
fiaddl
adc
push
mov
imul
stos
lahf
jmp
add
ljmp
arpl
popa
cmpsl
out
popa
in
mov
in
sub
loop
clc
sahf
fwait
imul
out
imul
sub
imul
loopne
adc
xchg
sbb
loope
add
loop
mov
xlat
sti
lret
sahf
mov
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
loop
mov
std
enter
add
lods
loop
inc
popa
pushf
loop
sbb
gs
loop
mov
std
enter
add
scas
into
out
mov
out
lahf
jmp
popa
cli
mov
sti
lret
popa
mov
loop
adc
enter
adc
mov
popa
ljmp
or
popa
push
mov
and
pop
in
adc
mov
leave
in
dec
ljmp
in
dec
ljmp
imul
adc
enter
push
call
and
adc
lret
lahf
xchg
popa
lods
loop
sub
outsb
imul
call
std
enter
adc
enter
mov
loop
incl
std
enter
mov
loop
decl
std
enter
shrl
sti
stos
ljmp
into
imul
push
adc
int3
adc
std
enter
add
out
add
popa
lods
loop
fiaddl
cltd
adc
add
imul
mov
ljmp
adc
loop
ljmp
add
adc
enter
adc
clc
std
enter
mov
jmp
ficoml
enter
mov
jmp
ficoml
enter
shrl
adc
lahf
imul
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
out
mov
lods
cli
adc
enter
sub
ljmp
enter
sbb
enter
popa
cmpsb
into
loop
shl
sahf
stc
mov
adc
enter
sub
sub
ljmp
jle
std
enter
loop
lods
cli
mov
out
ljmp
adc
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
add
sbb
sub
sub
out
ljmp
int
ljmp
sub
xlat
popa
insb
loop
ljmp
sahf
into
out
mull
ljmp
adcb
jmp
fnstsw
std
enter
sub
ljmp
ljmp
ljmp
pop
fs
insb
jmp
ljmp
into
popa
and
ljmp
add
ljmp
in
ljmp
and
adc
ljmp
ljmp
fxch
ljmp
xor
ljmp
mov
push
out
ljmp
int
ljmp
sub
test
insb
loop
ljmp
call
sub
add
adc
sahf
xor
adc
insb
jmp
fnstsw
std
enter
sub
ljmp
ljmp
ljmp
add
adc
jmp
ljmp
scas
into
repnz
cmp
ljmp
adc
insb
ljmp
in
ljmp
adc
add
sbb
in
ljmp
ljmp
fxch
ljmp
add
ljmp
insb
ljmp
int
ljmp
adc
ljmp
fldcw
add
adc
fldcw
shrl
ljmp
ljmp
lahf
ret
mov
ljmp
insb
jmp
fnstsw
std
enter
mov
ljmp
ljmp
in
ljmp
imul
ljmp
ljmp
jmp
jmp
sub
ljmp
into
out
arpl
in
ljmp
fcmove
repnz
idivl
adc
sahf
in
sahf
into
out
popa
and
loop
ljmp
sub
adc
out
sbb
mov
sub
enter
arpl
lods
arpl
cmp
popa
sub
sub
ljmp
ljmp
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
sub
enter
lods
sub
mov
std
enter
lahf
mov
mov
out
mov
ljmp
call
outsb
xor
ljmp
in
cli
jmp
ljmp
ljmp
jmp
ljmp
lahf
loop
lcall
sti
std
enter
lods
fidivrs
ljmp
ljmp
push
sti
std
enter
andb
ljmp
sub
andb
ljmp
loop
cmp
scas
out
popa
and
imul
ljmp
mov
enter
shrl
xchg
mov
pushf
fisubl
mov
adc
adc
adc
mov
adc
adc
adc
mov
adc
adc
adc
mov
adc
adc
mov
loop
scas
out
and
add
mov
mov
ljmp
sbb
mov
std
enter
call
cli
mov
loop
jmp
mov
mov
sub
ljmp
add
ljmp
ljmp
cli
mov
enter
outsl
sub
sub
ljmp
fidivrl
mov
addr16
mov
mov
lods
sarb
mov
lods
mov
mov
mov
loop
ljmp
ljmp
ljmp
lahf
loop
lcall
sti
std
enter
and
ljmp
ljmp
xlat
adc
std
enter
pushf
rolb
adc
sub
pushf
andb
ljmp
imul
mov
push
and
ljmp
sahf
notl
ljmp
jmp
stos
ljmp
adc
jmp
lahf
sbb
sub
lods
stos
lahf
push
popa
xchg
fidivrl
ljmp
cs
std
enter
lods
ficompl
test
cmp
repnz
lahf
loop
lods
stos
jmp
ljmp
imul
ljmp
push
push
ljmp
xor
xchg
cli
lahf
repz
scas
out
repnz
loop
ljmp
sti
std
enter
mov
sub
sub
std
enter
call
add
jle
adc
lahf
push
adc
mov
std
enter
lahf
iret
push
in
in
push
xchg
push
cld
sbb
push
jmp
cli
adc
lret
adc
enter
add
pop
scas
out
lahf
push
adc
sub
std
enter
popa
push
imul
jmp
ljmp
adc
sahf
jecxz
adc
enter
outsl
ljmp
ljmp
mov
jp
std
enter
adc
add
mov
sub
out
push
in
in
push
sub
fldcw
sub
out
ljmp
adc
loop
sahf
stc
outsl
sbb
in
sub
lret
adc
enter
sub
ljmp
mov
sahf
in
ljmp
fldcw
add
adc
addb
adc
out
lahf
repnz
imul
imul
cld
adcb
loop
sub
rcll
xchg
out
lahf
adc
adc
jmp
ljmp
out
sub
ljmp
adc
popa
and
mov
mov
sub
ljmp
lahf
out
in
adc
push
ljmp
mov
lahf
icebp
adcb
out
out
mov
sub
ljmp
add
insl
adc
popa
and
add
adc
imul
fldenv
imul
popa
adc
lahf
in
popa
in
popa
and
mov
mov
sub
ljmp
loop
imul
clc
xor
ljmp
fldcw
mov
mov
loop
imul
add
cltd
insl
adc
and
loop
in
addb
imul
lahf
out
cli
out
ljmp
adc
push
ljmp
lods
out
add
cmpsl
loop
mov
adc
dec
mov
imul
out
shll
lahf
sti
sbb
ljmp
popa
das
mov
mov
sub
out
insl
adc
adc
int
ljmp
out
ljmp
adc
add
push
ljmp
out
popa
and
adc
sub
push
mov
cli
mov
ljmp
adc
out
ljmp
sahf
clc
scas
sbb
add
ljmp
ljmp
into
loop
sahf
into
loop
fwait
out
add
xchg
ljmp
in
sub
sub
ljmp
out
add
imul
popa
sub
out
ljmp
mov
popa
cltd
cli
adc
add
adc
jmp
in
lahf
test
adc
cmpsl
loop
popa
and
mov
fildl
int3
xchg
ljmp
int
ljmp
popa
and
adc
jmp
ljmp
and
loop
sub
push
fldcw
addr16
sbb
lahf
out
inc
inc
mov
add
xchg
ljmp
scas
loop
cmpsl
sbb
push
popa
jmp
and
ljmp
adc
fwait
out
add
xchg
ljmp
fldcw
sub
ljmp
mov
loop
add
sahf
into
cli
adc
sahf
into
cli
adc
xchg
ljmp
sub
ljmp
into
out
sahf
into
out
fwait
out
add
ljmp
arpl
loop
outsl
and
ljmp
popa
xlat
add
std
enter
ljmp
mov
mov
sahf
shlb
popa
scas
add
stos
out
sahf
imul
lahf
push
popa
cmpsl
loop
adc
leave
ljmp
scas
or
jmp
clc
out
ljmp
mov
sahf
leave
popa
cmpsl
push
popa
scas
add
stos
out
sahf
imul
lahf
push
popa
cmpsl
loop
adc
enter
jmp
cmp
out
ljmp
add
sbb
sahf
repz
jecxz
ljmp
ljmp
sub
ljmp
adc
ljmp
repz
jecxz
ljmp
ljmp
sub
ljmp
outsb
adc
cli
addb
xchg
ljmp
ljmp
sbb
ljmp
or
adc
cli
out
ljmp
xchg
ljmp
in
sub
add
add
outsb
adc
in
xchg
ljmp
fldcw
sub
ljmp
loop
out
pop
adc
sbb
loopne
fmul
ljmp
popa
sub
add
mov
add
imul
imul
loop
ljmp
adc
enter
fnstcw
mov
ljmp
ljmp
cli
std
enter
mov
adc
enter
adc
enter
mov
sub
sahf
into
loop
fwait
out
add
ljmp
in
sub
sub
ljmp
mov
push
sub
ljmp
scas
push
mov
add
adc
into
mov
lahf
cli
adc
loop
push
cli
popa
push
dec
dec
dec
dec
add
ljmp
and
out
fldcw
add
adc
fwait
out
add
and
adc
sub
loop
mov
mov
push
sub
ljmp
scas
push
mov
add
adc
into
mov
lahf
cli
adc
loop
push
cli
popa
push
dec
dec
dec
dec
add
divb
fldcw
add
adc
sahf
into
out
sahf
into
notb
xchg
ljmp
in
sub
sub
ljmp
into
out
sahf
into
out
sahf
into
notb
xchg
ljmp
in
sub
sub
ljmp
into
loop
fwait
out
add
xchg
ljmp
in
sub
sub
ljmp
popa
jmp
lahf
adc
out
lahf
loop
jp
ljmp
mov
lret
mov
enter
imul
sub
popa
xor
lds
ljmp
sub
popa
jmp
cli
mov
and
ljmpw
mov
sub
ljmp
imul
popa
push
adc
adc
cli
adc
loop
jp
ljmp
mov
imul
adc
loop
fwait
out
add
xchg
ljmp
popa
push
adc
cli
adc
out
lahf
loop
fwait
out
add
nop
ljmp
popa
push
mov
add
cmpsl
lret
repnz
sub
arpl
lahf
in
sub
mov
sub
fldcw
popa
adc
popa
cmp
add
sbb
and
jmp
nop
ljmp
in
mov
inc
cli
std
enter
pop
cli
std
enter
jmp
mov
add
int3
ljmp
cli
mov
adc
sahf
into
incb
inc
mov
sbb
into
cli
mov
call
lret
xchg
out
sub
add
ljmp
popa
sbb
enter
and
cld
lahf
ret
sahf
clc
pusha
mov
mov
stos
lods
lods
outsb
and
sub
negb
adc
imul
add
ljmp
hlt
int
ljmp
sub
stos
out
ljmp
adc
out
adc
xchg
ljmp
in
sub
sub
ljmp
out
push
scas
into
loop
jmp
adc
fwait
out
add
xchg
ljmp
in
sub
sub
ljmp
jmp
popa
adc
adc
popa
lods
out
imul
arpl
pop
adc
push
adc
mov
adc
sbb
adc
push
adc
adc
push
adc
adc
adc
push
adc
ljmp
fldcw
mov
and
out
ljmp
push
adc
adc
adc
xchg
ljmp
fldenv
sbb
adc
out
add
xchg
ljmp
loope
outsl
push
push
adc
out
add
xchg
ljmp
loope
popa
sub
add
popa
push
mov
movsb
repnz
and
and
out
ljmp
or
scas
push
sahf
popa
movsb
repnz
adc
popa
adc
loop
cmc
sahf
popa
movsb
repnz
push
mov
adc
popa
adc
mov
push
mov
xchg
adc
and
ljmp
ljmp
cmp
jmp
lods
negb
imul
ljmp
negb
jbe
adc
popa
adc
push
xchg
adc
fsubrs
repnz
outsl
adc
in
scas
into
out
mov
ljmp
mov
movsl
repnz
sub
mov
loop
fldcw
add
add
adc
sahf
in
popa
stos
loop
out
ljmp
push
mov
add
xor
sub
sahf
ficoml
add
adc
adc
sahf
int
mov
lahf
call
mov
sahf
out
mov
sahf
loop
popa
and
adc
scas
loop
lods
loop
mov
mov
loop
adc
adc
adc
mov
out
adc
dec
adc
adc
lahf
cld
andb
ljmp
add
adc
outsl
sbb
hlt
imul
jecxz
jmp
and
adc
std
enter
mov
sub
ljmp
popa
adc
mov
adc
sbb
repz
jecxz
ljmp
adc
mov
sub
ljmp
mov
arpl
shll
lahf
in
sub
mov
and
mov
adc
push
sahf
mov
repnz
adc
push
sahf
mov
int
mov
sahf
enter
cli
std
enter
lods
out
shrl
in
in
mov
xchg
outsl
sub
popa
movsl
repnz
push
mov
adc
add
mov
ljmp
scas
adc
ljmp
adc
add
add
and
mov
in
ljmp
ljmp
mov
adc
and
adc
mov
mov
xchg
loop
xlat
rcll
mov
fbstp
cli
std
enter
mov
mov
mov
xor
xor
push
mov
lahf
loop
mov
mov
mov
sub
sub
sbb
addr16
cltd
or
adc
sahf
cmc
mov
ljmp
arpl
sbb
sbb
ljmp
repnz
popa
sbb
enter
mov
adc
adc
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
idiv
insb
jae
add
jb
lea
sub
add
push
push
mov
inc
add
dec
outsb
je
addr16
and
rcrb
int
das
add
jns
insb
daa
push
outsl
jb
add
in
incl
outsb
add
das
call
je
sub
in
push
add
aas
add
push
xor
imul
push
ret
notb
push
pop
push
dec
bound
arpl
sbb
sub
rol
loop
jae
insl
mov
adc
adc
ss
dec
jb
popa
arpl
add
in
jg
fwait
or
int3
addl
jmp
std
nop
arpl
push
mov
mov
gs
loopne
jno
out
fwait
or
push
mov
and
adc
push
lea
shll
and
sets
mov
mov
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
test
push
pushf
pushf
pushf
pushf
push
sarb
dec
ror
pushf
pushf
pushf
pushf
enter
mov
push
add
mov
sti
mov
imulb
je
movzwl
mov
ss
pop
ret
leave
leave
leave
dec
xor
sub
enter
and
sbb
aas
fwait
jg
push
mov
add
push
add
insl
dec
test
jne
xor
pop
enter
mov
mov
ret
idiv
inc
lea
mov
mov
mov
inc
cmp
jne
mov
mov
push
nop
mov
jg
jnp
mov
ret
scas
mov
mov
xchg
insb
test
xchg
mov
mov
ja
in
in
mov
or
adc
add
mov
aaa
imul
pop
push
mov
push
or
and
or
ret
mov
push
mov
mov
mov
mov
mov
rcrl
lock
out
push
or
push
or
ret
and
mov
outsl
in
hlt
mov
push
or
inc
add
adc
or
aaa
sub
jne
mov
cmp
lcall
push
fisttps
sbb
xor
mov
add
loopne
mov
into
int
bound
jne
mov
ss
insl
shl
or
mov
dec
ret
jmp
pop
mov
pop
shl
add
iret
pop
repnz
sub
stos
fiadds
sub
mov
lock
pop
ret
mov
aam
or
or
xor
sbb
scas
sbb
sti
jne
sbb
nop
fwait
sti
add
es
mov
cmp
or
push
fadds
imul
ljmp
fiaddl
and
push
jg
mov
mov
test
je
mov
mov
jbe
adc
mov
push
and
inc
lock
push
mov
data16
sti
ds
add
shrb
push
and
jne
icebp
add
pushf
popa
roll
cmpl
in
mov
mov
mov
mov
push
in
mov
call
in
add
mov
push
sbb
jae
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
fdivrl
sti
mov
cmpsl
mov
add
jl
jle
sbb
loop
mov
or
push
adc
hlt
outsl
xchg
mov
and
sbb
jle
sbb
inc
sub
or
push
fimuls
pop
cmp
add
mov
add
jbe
or
imul
scas
adc
sti
push
push
cmpl
jmp
ss
rcll
jae
and
push
cmp
mov
lock
cmp
jmp
sahf
nop
nopl
inc
or
sbb
roll
jae
mov
cmp
jae
std
add
add
and
addl
addl
cld
std
mov
mov
mov
aas
or
add
sahf
push
pop
jne
jbe
xor
idivb
inc
xlat
lahf
cmc
popf
mov
push
movsb
in
je
mov
inc
std
xor
and
xor
scas
mov
pop
add
jne
ljmp
movsl
and
push
inc
in
jge
insb
mov
insl
pop
mov
and
cmp
add
jl
in
mov
jne
or
jle
and
mov
sub
push
stos
mov
jg
pop
jl
or
nop
or
mov
push
push
je
mov
pop
fadds
pop
push
out
arpl
xlat
lea
test
xor
imul
jne
xchg
xor
xchg
cmp
push
sarb
sub
inc
popf
ret
lock
xchg
mov
mov
repnz
cwtl
aaa
jecxz
add
lock
filds
pop
mov
out
rorl
cmp
popf
jno
pop
push
test
je
jne
jo
imul
jo
or
adc
jmp
jecxz
cmp
xor
jmp
pop
sbb
sub
sbb
jle
push
push
cmc
aaa
pushl
mov
push
cmp
jne
jl
and
push
adc
fsts
and
push
and
cmpl
jnp
sbb
leave
ret
push
jle
hlt
inc
cmp
in
mov
das
jp
add
rcrb
pop
push
shl
pop
push
adc
sub
pop
mov
sub
mov
dec
mov
lods
jo
xchg
test
shlb
sub
iret
add
cmpb
in
andb
out
ja
xchg
and
fs
mov
je
xorb
mov
mov
cmp
sbb
fs
add
push
cmp
scas
loopne
add
adc
stc
lock
ss
jg
adc
test
jns
add
sar
sarb
jo,pn
cwtl
mov
and
xchg
std
int
mov
sub
add
mov
and
mov
std
mov
pop
add
or
mov
cmp
adc
or
sbb
mov
sub
lea
cmp
jl
movl
ja
mov
jb
sahf
es
or
out
testb
add
sub
test
cld
jnp
loopne
dec
adc
adc
jbe
mov
jl
or
push
rolb
pusha
xchg
or
sbb
dec
add
andl
push
xor
or
loope
or
jmp
iret
add
cmpsb
sub
mov
aas
add
and
dec
jb
sub
cmp
cmp
testb
aad
add
add
test
mov
xor
std
imulb
add
mov
clc
add
and
repz
mov
sub
pop
jp
cmovs
movb
jne
push
out
xchg
jo
sbbb
jmp
xchg
into
push
lea
sub
cli
mov
pop
cld
jg
clc
sub
sub
cmp
jge
jae
icebp
mov
out
fucomi
sub
jmp
daa
xlat
cld
lea
and
in
stos
fwait
mov
sub
lds
stos
clc
aad
pop
mov
adc
shlb
test
jp
or
out
rolb
fisttps
pop
mov
cwtl
jo
xchg
out
shll
test
mov
ss
hlt
cmpsb
adc
mov
bound
cmp
inc
adc
push
sahf
add
sub
cmp
or
adc
mov
and
pop
sbb
adc
xor
daa
or
pushf
inc
pop
mov
popa
and
or
pop
add
mov
cmp
movsl
movsl
mov
cwtl
lds
fwait
pushw
mov
and
or
ja
out
or
push
mov
cmp
pusha
xchg
lods
sub
or
inc
push
adc
repz
sbb
or
sbbl
adc
out
cmp
push
fsubrl
xor
mov
or
mov
arpl
flds
pop
mov
fadds
sbb
fadds
pusha
pop
pop
inc
xlat
test
or
ret
pusha
cmc
inc
enter
xor
ror
sbb
sar
cmp
pop
push
adcb
or
lods
data16
xor
mov
add
xor
mov
fildl
jg,pn
pop
mov
pop
je
je
adc
sub
cmp
xor
aam
insl
aas
jle
fistpll
jne
movsb
sub
cmpl
clc
bound
dec
sbb
hlt
inc
add
xor
dec
loope
sub
je
shrb
xor
mov
pop
inc
and
ljmp
repnz
jne
xlat
roll
xor
cmp
adc
test
loopne
mov
pusha
or
push
int3
sti
clc
stos
jle
inc
cld
leave
aas
lock
jbe
addr16
push
push
mov
imul
pop
or
sti
mov
mov
push
test
jg
inc
sub
or
sbb
loopne
add
pop
inc
scas
shlb
push
adc
jns
mov
jmp
mov
jge
fdivl
pushf
or
xor
add
or
in
jbe
jmp
pop
jl
push
mov
sbb
out
xor
add
mov
sbb
sbb
fcoml
inc
arpl
aam
ss
mov
pop
push
ja
popa
pop
push
push
sbb
mov
sub
jne
out
or
cmp
jo
xor
mov
pop
lock
test
jne
ret
jne
decl
in
mov
sub
mov
test
loope
push
or
test
jge
cmp
xor
cmp
push
jl
nopl
ret
mov
cmp
loopne,pt
sub
in
add
jle
sbb
mov
mov
push
ret
sbb
inc
test
inc
cli
test
aaa
orl
jmp
mov
cmpl
sbb
sti
clc
push
adc
or
adc
sbb
and
add
add
rcr
js
pop
jg
add
or
mov
jge
clc
sbbl
mov
decb
jge
lock
adc
shll
xor
clc
xor
loop
push
jge
sbb
lea
divl
sub
shlb
loopne
add
pop
ret
or
sbb
mov
ficomps
push
fmuls
and
or
mov
sub
pop
jecxz
andl
fmul
imulb
xor
dec
daa
clc
call
inc
lahf
add
cwtl
jp
dec
add
addl
fbld
movsb
les
add
push
sbb
xchg
push
mov
push
pop
pop
pop
ffreep
mov
loop
sub
or
and
or
cmp
lret
cmp
xchg
ret
les
cmpsb
jmp
add
subb
or
xchg
in
mov
sbb
xor
dec
push
call
cmc
adc
inc
movhps
and
mov
mov
jmp
out
adc
xchg
ret
fildl
add
jge
aam
inc
adc
mov
adc
les
mov
mov
idivb
add
call
dec
rorb
pop
or
xor
mov
in
add
je,pt
je
sarb
add
xor
sbb
enter
imul
mov
ret
push
jmp
push
xor
add
jl
jns
adc
repz
pop
push
rcr
mov
inc
dec
bound
orb
aas
cmp
inc
sbb
lds
mov
or
xor
sti
loope
nop
jg
mov
inc
jle
popa
ret
mov
jg
xchg
cmp
cmp
lahf
cwtl
fstpl
scas
add
jo
mov
mov
clc
int3
adc
pop
mov
adc
push
in
jg
enter
push
xor
in
loop
rcrl
xor
pop
psubsb
mov
mov
mov
sub
sbb
ret
sub
inc
cmpsl
decl
sarl
mov
inc
rep
jmp
mov
mov
mov
jl
pop
mov
add
fimuls
xchg
add
stos
vcvttss2si
jno
mov
cmp
adc
divl
je
dec
js
rep
xchg
in
data16
xor
lea
xor
std
xor
scas
or
mov
xchg
or
add
adc
ljmp
cld
and
cmpb
xchg
cmpb
add
out
in
mov
jmp
sti
xchg
mov
cmp
xor
push
shrb
roll
ljmp
jne
in
sbb
pop
adc
push
mov
mov
xor
jmp
decl
gs
mov
mov
inc
inc
test
mov
ja
shl
pop
ds
sbb
into
test
clc
aas
or
in
pop
sub
cld
test
jne
push
push
jno
lahf
add
pop
mov
aas
xor
push
and
insb
imul
sbb
adc
je
js
in
add
jmp
mov
incl
movnti
and
sub
filds
mov
inc
and
push
sbb
loopne
in
adc
aas
mov
push
add
hlt
sub
sub
dec
sar
testb
sbb
jmp
cmp
pop
cmp
jle
addb
mov
mov
add
push
inc
daa
mov
sbb
sbbb
divb
das
or
xlat
ja
and
adc
jne
call
sbb
adc
lahf
cltd
imul
jmp
cmp
rol
outsb
jge
xchg
mov
cmp
js
mov
inc
inc
and
mov
xchg
sarl
in
xor
mov
mov
inc
inc
in
lock
jg
add
ret
ljmp
pop
cmp
jne
dec
and
dec
negb
pop
add
aaa
and
or
loop
push
adc
lcall
loop
je
mov
cmp
jne
dec
je
mov
cmp
jne
pop
icebp
dec
rorl
add
jne
add
call
mov
std
jne
shr
insb
adc
add
out
xchg
push
mov
shr
or
pop
outsb
scas
xor
cmp
shl
aaa
ffreep
add
and
mov
cmp
jne
dec
dec
inc
sarl
dec
and
pushf
xor
pop
jecxz
mov
ficomps
mov
shl
data16
stos
sub
lret
stos
pop
daa
push
adc
mov
sub
mov
push
inc
clc
and
add
je
or
je
and
je
pop
mov
fmulp
je
xor
dec
and
test
mov
jmp
or
or
cmp
ja
lea
outsl
jg
fistpl
add
push
mov
or
jge
jmp
hlt
sti
incl
jle
js
pop
sub
jmp
inc
inc
jmp
mov
push
andnps
popa
jb
xchg
and
js
adc
scas
or
mov
leave
pushf
add
aad
out
test
mov
xchg
mov
jne
fldl
mov
jbe
sub
inc
popa
push
inc
mov
dec
jne
pop
decb
pushf
popf
and
cmpsb
mov
das
xor
sub
je
adc
arpl
mov
adc
lea
fldt
xor
add
fisubs
add
je
das
imul
add
popa
push
and
jmp
xchg
mov
jge
mov
xor
movsb
xor
or
add
stos
sub
adc
out
mov
daa
les
nop
daa
lahf
sbb
mov
daa
lahf
jl
cli
or
or
ret
and
stc
enter
xchg
cwtl
push
and
jl
imul
stc
add
mov
in
ret
movsl
aam
pop
fldenv
sub
test
out
sub
adc
xor
leave
sbb
out
out
mov
inc
jbe
imul
cmp
mov
mov
jg
outsl
bound
cmpb
xlat
fadds
outsb
xor
xchg
fwait
dec
mov
or
push
push
int3
into
sbb
rorl
mov
push
jmp
pop
test
enter
mov
inc
push
and
daa
lret
into
pop
inc
test
decl
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
inc
push
stos
mov
cmp
or
mov
pop
out
sub
imul
call
loopne
inc
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
ljmp
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
call
jecxz
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
movsb
mov
and
pop
mov
repz
mov
subb
and
and
outsb
bound
xor
scas
lret
jmp
rcl
call
cmp
jne
push
pop
and
push
xchg
mov
fdivl
dec
outsb
addr16
movzwl
lods
mov
lea
push
push
inc
pop
stos
mov
ret
mov
push
push
mov
movl
push
pop
hlt
push
data16
add
jo
mov
fistl
fnsave
test
out
mov
jmp
push
clc
sbb
loope
pop
aas
or
leave
mov
pushl
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
incl
inc
push
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
sub
mov
stc
mov
xor
mov
inc
rep
push
or
add
fildll
or
dec
cld
jne
dec
mov
xor
rorb
out
jp
fbstp
lcall
faddl
into
sbb
scas
std
std
in
add
call
rcrb
and
aaa
and
push
ja
rcr
test
or
fdivrl
sub
movups
add
xor
lods
jl
loopne
mov
or
push
cld
cmp
ret
jl
mov
xor
push
shr
dec
rep
pop
lock
outsl
mov
pop
fadd
idiv
stos
cmp
mov
jmp
cmp
je
pop
mov
add
jae
clc
add
outsl
movb
jnp
mov
push
sbb
cmp
pop
ret
mov
mov
mov
jbe
pop
adc
cmp
inc
xchg
aad
lahf
ret
jae,pt
paddd
shufps
jo
add
jmp
mov
insb
push
faddl
rorl
lahf
and
adc
out
pop
clc
inc
nop
cmp
mov
dec
pop
xor
ja
jbe
sub
and
xor
inc
adc
adc
clc
mov
stc
push
push
mov
push
add
pop
lock
sbb
and
fisttpll
movsb
sub
dec
setne
inc
idivl
in
xchg
popf
addl
shl
sarb
cmp
loop
xor
jb
cmp
fmull
or
jne
cmp
mov
inc
inc
mov
xor
lds
push
ret
and
add
and
lods
test
xor
mov
imul
push
mov
mov
cmp
je
mov
leave
jne
mov
pop
push
test
cld
nop
push
xchg
jmp
lret
adc
jg
push
add
repnz
je
pop
in
negb
pop
add
pop
sub
sub
mov
pop
cs
xchg
gs
pop
pop
ljmp
mov
mov
inc
rorb
xor
sbb
push
pop
pop
lods
adc
xor
cld
pop
data16
sarl
adc
pop
push
pop
leave
or
sub
pop
in
mov
decl
bound
sub
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
mov
mov
xor
jecxz
dec
cmp
add
lods
sbb
xchg
adc
sbb
lcall
pop
jmp
push
xor
call
ja
push
pop
add
mov
jl
and
sbb
rclb
sbb
test
mov
testb
pop
popa
pop
xchg
mov
es
sub
or
sahf
sahf
jle
or
test
inc
cmc
addr16
push
clc
pop
sbb
into
mov
jg
lock
pop
xchg
cmpb
clc
punpcklbw
push
call
mov
aaa
pop
pop
push
pusha
push
push
cmp
cmp
insl
sbb
or
cs
or
or
jae
pop
divb
pop
push
push
and
mov
mov
cmpb
je
or
jne
movsbl
inc
inc
jmp
push
cmpsb
add
repnz
addr16
pop
es
jecxz
fs
xor
adc
loop
sbb
cmp
cmp
jecxz
pop
jne
cmp
push
testl
dec
jne
fiadds
push
xlat
std
mov
xchg
je
xchg
and
adc
xor
test
pop
sub
out
sbb
movd
or
cmp
cli
out
push
je
or
sub
or
out
in
stos
pop
sbb
clc
add
stos
iret
outsb
into
sbb
enter
adc
adc
push
xchg
or
push
push
loopne
test
je
orl
mov
push
cmp
push
sbb
push
sub
or
push
mov
xchg
push
sub
decl
sub
outsl
or
inc
add
push
add
dec
pop
sbb
cmpsl
shr
div
aaa
mov
mov
and
mov
mov
push
lret
xchg
popa
dec
or
add
sbb
mov
pop
cwtl
push
or
aad
xchg
inc
or
add
lds
mov
out
sub
repnz
push
loope
sbb
fdivs
mov
std
lea
push
or
mov
xchg
shrb
fsubl
jne
dec
jne
adc
push
sbb
shll
outsl
inc
jmp
pop
lds
push
sub
adc
adc
insl
or
das
push
cmp
cs
adc
or
dec
loopne
pop
lods
movsl
or
push
cmp
mov
add
pushf
ret
push
rol
xchg
inc
call
inc
outsl
or
stos
pushl
mov
push
push
push
push
push
mov
pop
out
jns
and
stc
mov
cmp
xchg
nop
or
pusha
add
imull
sbb
or
movsb
xor
mov
and
mov
mov
mov
pop
movsl
cmc
xchg
jae
mov
fs
lods
pop
cmp
cmpsl
fildll
jmp
ret
xor
mov
mov
xor
xchg
ret
mov
pop
adc
xchg
aam
sub
pop
cmp
adc
push
sub
je
jmp
add
aas
sub
jb
je
jmp
cmp
cmp
lods
sti
inc
adc
jmp
sub
cmp
mov
jmp
aam
idiv
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
or
outsl
cli
mov
jmp
mov
jmp
mov
push
test
call
loope
or
inc
mov
jg
jecxz
movaps
jno
xchg
lods
push
insl
outsl
jp
inc
cmp
inc
pop
test
mov
je
add
push
add
or
jge
aaa
out
push
inc
sti
mov
sbb
pusha
cmpsb
push
sub
dec
rclb
sub
sub
xor
ja
addb
mov
enter
or
adc
fbstp
clc
dec
cmp
jbe
push
repnz
add
jne
in
not
imul
mov
dec
mov
repnz
mov
mov
jle
dec
notb
mov
add
call
and
push
rorl
mov
adc
js
loopne
ret
insb
mov
sbb
mov
xor
nop
scas
add
mov
stc
lret
jbe
cmp
sbbb
jg
sbb
cld
add
lahf
es
insl
xor
adc
sub
js
fnstsw
test
or
bnd
cmp
test
push
add
add
aas
rolb
jo
dec
jne
pop
pop
pop
inc
push
push
push
nop
pop
sbb
movsb
std
add
dec
add
mov
xchg
or
inc
repz
sbb
daa
lock
push
loop
pop
imul
add
rol
mov
es
sti
mov
dec
jbe
mov
mov
xchg
mov
mov
push
push
xchg
xor
lahf
pushf
loop
sbb
neg
sbb
inc
movsl
pop
sbb
testb
adc
ja
add
mov
mov
mov
push
cmpsb
dec
icebp
pop
sub
mov
sbb
clc
adc
cmp
cmc
add
or
xorl
push
push
push
aas
div
hlt
add
pop
xor
add
ret
mov
je
stos
pop
adc
cmp
or
or
mov
mov
gs
adc
ds
push
cmpl
adc
jge
rol
ror
pop
mov
call
and
test
xchg
sub
data16
fsub
daa
push
jne
hlt
scas
icebp
sti
clc
lock
imul
jbe
imul
lea
ret
sbb
and
out
rcr
xor
cmp
je
es
insl
inc
popa
xlat
dec
lods
xchg
mov
push
add
pop
cmp
and
push
push
adc
js
inc
add
pop
pop
cs
rolb
ret
mov
push
push
xchg
sub
add
shlb
aad
pop
mov
adc
decl
test
inc
clc
daa
push
in
fisttps
push
sbb
add
mov
push
fmuls
push
jp
jne
fiadds
popf
clc
mov
jg
cmp
pop
imul
ret
dec
sbb
insb
lret
pop
xchg
adc
xchg
clc
fimuls
mov
push
xchg
jle
push
add
mov
push
lret
pop
movw
xor
sub
shll
cwtl
rorb
clc
das
stc
mov
loopne
testb
pop
ds
cmp
lcall
and
pop
xchg
push
push
mov
push
add
mov
adc
arpl
aaa
mov
xchg
add
cld
pop
push
jg
inc
das
insb
jmp
lea
cmp
push
sbb
dec
loop
into
mov
clc
mov
sbb
sbb
in
xchg
sbb
iret
push
pop
add
fadds
sbb
mov
pop
jge
xor
test
call
loop
or
out
xor
mov
je
cwtl
andb
je
add
pop
neg
or
add
jmp
fidivrl
pop
sub
and
pop
pop
or
push
jnp
mov
jmp
or
add
inc
cmp
mov
inc
xchg
mov
cld
add
cli
repnz
stos
clc
mov
pusha
rcrl
rcrl
mov
ja
xlat
pop
push
and
pop
cld
xchg
adc
fstps
mov
scas
aam
inc
xchg
mov
aas
pop
add
aas
push
xor
or
je
mov
cld
xchg
push
cld
add
cmp
pop
and
lock
lods
mov
adc
mov
sub
push
out
popa
subl
adc
or
pop
mov
and
xchg
pop
pop
hlt
inc
cld
add
mov
fmuls
fisttps
sbb
ja
push
jle
clc
mov
mov
jmp
fwait
arpl
decl
test
or
mov
in
int
cld
dec
jmp
dec
sub
add
cmp
fs
adc
outsb
dec
dec
jne
mov
cld
aam
decl
jge
and
aaa
add
dec
jmp
and
cmpsl
xchg
inc
inc
pushf
sbb
add
pop
or
and
dec
jne
mov
or
loope
mov
dec
pop
and
lea
jmp
mov
aaa
cmp
add
rolb
imul
xchg
dec
pop
dec
pop
dec
add
sbb
pop
pop
dec
mov
adc
pushf
and
and
sub
loopne
jmp
aam
ja
lret
cmpsl
push
clc
inc
das
lods
jp
icebp
mov
add
add
dec
cmp
adc
je
push
cmc
mov
adc
pop
adc
push
inc
es
mov
or
int3
pushf
out
and
ds
fucomip
sub
dec
jl
cmp
jge
sub
xor
mov
inc
sbb
adc
fst
mov
scas
xor
xor
jmp
inc
jmp
and
inc
pop
dec
xor
sub
cmp
lret
jl
sub
clc
fisttpl
sub
mov
add
stc
add
lea
inc
xchg
cmp
movsb
push
push
dec
addr16
pop
lret
or
lahf
cltd
mov
jg
mov
inc
dec
jge
cmp
adc
imul
xchg
gs
cmp
mov
mov
lea
add
or
clc
mov
in
add
xchg
xor
mov
push
mov
dec
js
mov
inc
jb
adc
adc
sub
in
pop
push
faddl
xchg
fsubl
and
cmpl
cld
aas
inc
sbbl
clc
add
sub
push
push
or
clc
pop
push
jecxz
or
and
lods
jmp
xor
sbb
arpl
cli
pop
ret
aad
icebp
pop
out
faddl
push
and
xor
xchg
loopne
cmp
loopne
mov
cs
sub
out
cmpsl
in
cmpsl
push
cmp
insl
bound
scas
mov
sub
push
pop
in
pop
adc
ss
add
cmp
pop
pop
cwtl
jle
cmp
ffree
pushf
nop
add
cmp
add
dec
jl
sbb
int3
pop
pushl
mov
xor
mov
pop
add
and
cwtl
mov
add
add
sahf
inc
cmp
cs
add
jb
and
stc
mov
inc
and
ss
cmpsb
add
pushaw
and
push
cvtps2pd
or
xchg
xor
stc
movsl
pop
or
mov
sti
add
pop
dec
cmp
jbe
sbb
sub
cmp
cs
clc
loope
lods
add
add
xchg
pop
loope
xchg
imull
test
je
jle
cltd
ss
push
sub
push
cmp
iret
jne
enter
sub
shll
sub
dec
lea
or
adc
adc
jp
push
mov
hlt
xchg
jg
sbb
pop
movsb
das
sahf
mov
xchg
fildl
push
add
or
or
pop
icebp
pushl
or
je
cmp
mov
je
mov
add
cwtl
cmpsb
xor
inc
adc
or
adc
jmp
xchg
aad
push
or
ficomps
dec
cs
adc
cmp
pop
jmp
cmp
add
repnz
lock
xchg
popa
xchg
push
cmp
sbbb
addr16
dec
pop
call
fs
stc
push
loopne
adcl
ret
mov
out
push
pop
jbe
test
xchg
rolb
push
mov
cmp
mov
int3
jg
inc
and
sti
aaa
aad
cmp
emms
xor
push
jmp
es
push
pop
push
dec
mov
pushf
nop
lret
or
aam
cmp
jmp
test
test
aaa
addr16
and
call
mov
adc
jl
jmp
add
sbb
xor
mov
pop
fdiv
add
cld
add
clc
push
push
add
cmp
je
sarl
add
loope
sbb
dec
pop
push
mov
cmp
xor
fmull
or
je
or
jo
imul
adc
and
mov
fs
cmp
pop
add
jge
test
in
ss
lea
int3
mov
jno
repnz
call
cmc
mov
inc
cmp
pop
jmp
aas
add
mov
int3
outsb
jns
xor
xlat
inc
pusha
sub
fsts
ds
cld
dec
push
in
jne
shlb
pop
sbbb
and
mov
in
dec
movsl
push
cmp
popa
jge
and
nop
xchg
pushf
clc
mov
pop
mov
cmp
shl
dec
ss
jp
cmp
adc
les
mov
add
es
ja
sti
add
jno
popf
fiaddl
aaa
inc
ljmp
out
js
inc
add
add
je
cmp
ja
leave
dec
sar
inc
jmp
popa
add
sub
pop
ret
lea
cld
je
mov
xlat
sar
cli
pop
mull
mov
sbb
ror
call
ret
nop
push
mov
jne
cmp
lsl
cmc
mov
cmpsb
daa
jo
mul
push
fildl
repnz
mov
sbb
insb
shrb
mov
test
jg
cs
mov
inc
jl
jnp
ss
lods
dec
xchg
rcrl
lock
fdivrs
push
pop
inc
add
movb
xchg
cld
push
xor
call
inc
cmp
je
testb
test
mov
mov
mov
inc
fadds
add
roll
loopne
jge
jge
pop
sbb
fwait
mov
imul
sub
fidivrs
lahf
add
inc
loopne
push
in
mov
pop
decl
add
outsl
loopne
scas
mov
fidivl
rcl
in
xchg
jge
or
out
out
fwait
xor
dec
sbb
dec
in
push
jmp
aaa
jnp
adc
into
stos
xor
or
dec
sar
fldl
les
add
mov
or
adc
test
add
push
cmpl
jle
cwtl
or
xchg
dec
lcall
inc
mov
fimull
xor
mov
lea
daa
test
push
dec
jne
enter
mov
mov
push
adcl
mov
lock
jne
test
adc
push
loopne
xor
adc
and
sbb
scas
adc
dec
jg
add
push
push
lock
out
pop
pop
mov
loop
aas
or
in
sbb
push
rcrb
cltd
enter
shll
cmp
addb
adc
sarl
dec
divl
ljmp
adc
je
pop
mov
mov
adc
pop
inc
popa
or
lock
adc
roll
loopne
jbe
adc
jae
aam
aad
or
mov
ret
adc
jecxz
mov
cltd
sbb
cli
pop
jne
je
mov
ds
mov
push
clc
daa
mov
cwtl
push
jne
push
inc
pusha
cmp
test
push
and
daa
js
pop
or
pop
test
sbb
mov
rcll
daa
mov
in
pop
inc
inc
mov
cmpb
cmp
js
pop
and
jl
and
pop
add
aas
in
cmpb
add
lods
test
je
and
add
add
in
fstpl
insl
jno
mov
sub
add
inc
cmp
rorb
push
push
push
les
addr16
imul
in
and
je
xor
loop
mov
lea
ret
fwait
jg
movb
mov
sbb
push
mov
ss
jg
push
lahf
test
lods
xchg
repnz
mov
jae
imul
gs
xor
cs
insb
pop
inc
gs
outsl
lret
ljmp
push
popa
je
dec
popa
insl
gs
daa
outsl
loopne
mov
jecxz
sub
out
and
push
xor
movsb
cmp
xchg
sbb
and
push
push
js
adc
loopne
repnz
rcll
push
or
pop
push
inc
push
call
mov
or
je
aas
iret
sub
add
xchg
mov
mov
repnz
enter
push
fadds
sti
lcall
push
lods
repz
loope
jmp
js
push
xor
cmpb
dec
nop
jge
call
shrl
xor
jnp
sbb
add
sti
int3
hlt
dec
cmpb
stos
pop
cmp
jne
adc
daa
je
popf
inc
sbbb
sub
fmuls
push
int3
sbb
add
insb
xlat
mov
sub
icebp
je
das
ret
inc
xor
xchg
jecxz
insb
cmc
add
mov
outsl
data16
popa
jb
outsl
or
popa
insb
gs
aaa
add
sbb
cmp
inc
daa
fdivrs
pop
dec
add
in
dec
mov
pop
mov
adc
loopne
mov
outsl
mov
inc
mov
pop
loopne
push
jp
mov
negb
mov
pop
fadd
icebp
mov
mov
dec
lods
push
js
or
fdivrs
cli
mov
cmp
push
inc
bound
sbb
sbb
mov
lock
xchg
push
jno
mov
mov
xor
or
pop
int3
mov
mov
je
jns
mov
inc
xchg
push
cmp
mov
or
mov
pop
mov
movsl
cmp
jne
pop
cs
add
sbb
inc
shr
ret
cwtl
hlt
pushl
or
or
icebp
sub
data16
pop
mov
inc
popa
test
xor
insl
xor
scas
dec
push
inc
mov
sub
rep
mov
mov
push
push
mov
inc
pop
mov
loope
dec
pop
sbb
pop
xchg
ret
sbb
sahf
loopne
push
in
loopne
cltd
jns
and
or
sbb
or
aam
mov
mov
popa
test
or
xchg
pop
add
dec
js
test
lea
int
fadd
cltd
xor
push
loope
push
ja
xchg
push
dec
stos
ds
push
sbb
mov
aad
pop
sub
add
leave
dec
xchg
dec
ljmp
dec
inc
cmp
ja
mov
inc
jmp
cmp
push
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
adc
push
and
sbb
and
lret
add
mov
test
and
and
jg
dec
rolb
dec
or
cmp
pop
rcrl
mov
add
or
xor
loopne
dec
jbe
pop
sbb
cld
flds
inc
add
jb
lea
ret
test
sbb
mov
hlt
sub
mov
dec
ret
mov
rcl
divl
cld
inc
xor
hlt
les
decb
cli
mov
inc
test
je
or
jae
jge
loope
and
je
cmp
adc
mov
and
cmp
psraw
stc
into
test
loop
sar
pop
pop
shl
or
mov
pop
lea
xchg
mov
mov
loopne
adc
lahf
add
lcall
cs
adc
or
movl
shr
inc
mov
ret
xor
scas
sbb
in
xorb
les
or
jb
inc
sbb
loope
idivb
inc
ficoms
jae
ret
popa
movsb
inc
cltd
mov
leave
xchg
dec
mov
je
adc
lea
loope
aas
cltd
std
xor
pop
xor
inc
push
and
jnp
push
xor
or
jmp
in
ror
mov
test
cmp
sub
pushf
mov
pop
pop
mov
lods
addb
fadds
xor
inc
aaa
movsb
xor
repnz
cmp
jns
inc
push
cmp
je
pop
xchg
pop
cmp
inc
pop
ljmp
rorb
outsb
out
ds
sub
push
mov
sarb
add
mov
xor
lea
pop
aas
les
mov
repz
or
add
push
xchg
push
pushf
jbe
push
or
mov
push
xor
pop
lea
push
push
sahf
cltd
pusha
lock
stos
mov
loopne
pop
es
je
xor
pop
lock
cmp
loop
out
mov
dec
add
in
and
xchg
xor
aam
adc
xor
or
stos
mov
test
sbb
movb
aam
pop
xor
xor
gs
xor
and
dec
xor
and
cwtl
popa
xchg
daa
fbld
adc
call
xor
mov
sub
adc
clc
add
cmp
pop
jmp
in
or
sub
bndstx
ja
and
jmp
in
loopne
pop
pop
or
push
push
dec
insb
sahf
sarl
and
inc
cmpl
pop
pop
ds
je
xlat
jge
or
mov
sub
mov
leave
jne
mov
imul
push
je
add
mov
adc
and
ret
mov
lea
arpl
dec
mov
test
cmpl
mov
dec
sbb
jge
leave
cmp
xchg
pop
sub
sbb
push
dec
adc
xor
test
pop
add
or
call
dec
jne
push
push
push
inc
mov
sti
push
add
add
push
or
or
pop
jo
pop
aaa
icebp
mov
jo
and
add
xor
aam
xchg
nop
mulb
and
outsl
fs
gs
fstl
inc
jb
jns
es
imul
mov
adc
inc
push
outsl
arpl
in
out
jg
inc
gs
jne
je
dec
outsl
je
imul
mov
jae
fbstp
ds
outsl
inc
arpl
or
or
imul
jle
inc
xor
xor
pop
cld
ljmp
bound
outsl
js
imul
ja
nop
aam
push
andps
ja
dec
inc
xor
je
dec
add
in
in
push
in
in
fs
inc
sbb
in
in
or
add
jb
xor
cld
inc
clc
hlt
lock
jb
in
call
jb
aam
in
jbe
int3
enter
in
in
mov
in
in
test
mov
pushf
cwtl
xchg
nop
in
in
mov
in
jl
je
in
in
insb
push
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jbe
jb
cld
inc
inc
inc
inc
outsl
fnsetpm(287
in
inc
inc
inc
aas
daa
daa
daa
mov
pmuludq
in
call
in
daa
daa
daa
daa
aam
int3
enter
daa
sarb
mov
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
xchg
xchg
daa
daa
xor
inc
je
xchg
xchg
xchg
insb
fs
pop
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
leave
enter
inc
clc
hlt
leave
leave
leave
leave
lock
call
leave
loopne
fcom
xchg
xchg
fcmovne
ror
mov
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
jb
mov
dec
inc
pop
jb
jb
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
inc
clc
xchg
xchg
xchg
xchg
hlt
lock
call
in
xchg
xchg
xchg
xchg
aam
int3
enter
xchg
sarb
mov
test
xchg
xchg
xchg
movsb
mov
xchg
xchg
xchg
nop
mov
test
xchg
xchg
je
insb
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
push
jecxz
xchg
adc
mov
rol
loop
or
xor
subl
ret
nop
or
sbb
sbb
mov
icebp
insl
test
or
and
cmp
mov
jo
xor
ret
xor
into
jne
mov
push
mov
movswl
add
inc
and
fisubl
mov
push
into
int3
mov
sub
mov
out
push
dec
popf
xorl
push
pushf
cmp
add
or
adc
add
and
dec
jp
je
push
mov
sahf
xchg
inc
lcall
not
ret
scas
cmpsl
inc
mov
and
sbbb
mov
stc
push
xlat
lcall
xor
pop
push
pop
mov
movsl
mov
sbb
add
mov
pop
xchg
sbb
sub
push
jbe
cmpsb
jmp
inc
or
nop
adcl
dec
mov
js
loopne
addb
dec
popa
gs
rcr
cmc
or
and
push
cli
inc
dec
add
outsl
scas
std
in
stos
inc
pop
push
and
dec
push
inc
push
dec
imul
adc
push
mov
push
push
pop
sub
pop
push
dec
pop
dec
dec
dec
inc
push
das
mov
test
push
dec
mov
js
xchg
and
mov
lock
dec
daa
shl
xor
icebp
repnz
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
leave
leave
leave
enter
leave
leave
leave
lret
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmpsl
test
stos
add
leave
fwait
pop
mov
js
xchg
insl
jl
outsb
mov
pop
outsl
or
outsb
push
dec
pop
add
push
ret
add
inc
js
gs
imul
bnd
adcb
insl
mov
in
mov
dec
gs
jo
nop
fdivl
fdivl
or
dec
jne
pop
cmp
gs
outsl
jb
cmp
dec
xor
aas
or
enter
outsb
mov
nop
scas
nop
add
adc
add
push
push
dec
sahf
pop
xor
call
or
adc
dec
jo
xchg
nop
adc
or
pop
mov
or
outsb
mov
xchg
pushf
cld
or
imul
outsl
nop
clc
pop
sbbl
jle
popa
outsb
addr16
jno
push
jno
jbe
inc
out
outsb
jbe
jb
pushf
pop
mov
insb
outsl
ja
mov
inc
push
or
xor
dec
cld
jle
push
scas
ds
pusha
jno
jno
dec
data16
imul
mov
scas
pop
mov
popa
popa
insl
jle
gs
loopne
sbbl
rcl
jae
or
in
adcl
inc
adc
push
ucomiss
outsl
imul
shll
aas
ds
or
inc
popa
jae
ficomps
mov
dec
sbbl
sbb
add
sarl
xchg
adc
addb
adc
pusha
mov
ds
add
pop
scas
push
jb
insb
xor
nop
adc
nop
xor
xor
mov
mov
mov
or
mov
imul
fbstp
inc
in
repnz
mov
popa
jb
popa
outsb
add
rorl
inc
jbe
inc
jbe
xchg
mov
popa
fsubl
mov
inc
push
bound
pusha
in
cld
mov
dec
adc
jo
inc
adc
pop
ja
adc
push
stos
and
in
push
mov
ds
stos
adc
arpl
enter
jle
add
aaa
xor
pop
dec
invd
push
mov
adc
inc
insb
jae
in
inc
jl
andl
add
push
popf
call
enter
push
mov
jb
popa
fs
les
pop
mov
push
int3
add
test
cmp
mov
cmpsb
aam
lret
and
mov
push
lods
jns
mov
xchg
adc
sbb
push
loopne
sbb
push
add
adc
ss
aas
xor
lock
dec
cmpsb
imul
and
xchg
push
fcoms
lods
outsb
arpl
cmp
xor
cmpb
in
push
das
mov
div
dec
mov
add
ja
sbb
mov
mov
push
insb
nop
adc
lret
mov
mov
mov
xchg
inc
mov
push
mov
insl
jl
jmp
aas
mov
add
adc
add
inc
js
mov
mov
mov
pop
into
inc
cmpsb
and
xor
fdivl
fbld
mov
mov
add
fdivl
cmp
cli
sti
ret
adc
fcoms
jmp
sub
mov
cmp
and
mov
ja
sub
mov
inc
inc
dec
mov
xor
push
pop
jg
inc
pop
add
lea
sbbb
aaa
mov
cmp
jbe
mov
int
cmp
repz
je
movzbl
push
push
call
xorl
mov
add
xchg
mov
loop
and
repz
jne
jle
ret
inc
inc
ds
mov
pop
add
mov
or
cwtl
jle
sarb
mov
out
and
sti
je
aad
repnz
loopne
out
sub
pop
sbb
movsb
mov
sub
add
cmp
lock
cltd
and
loop
leave
mov
push
sysenter
ret
pop
ret
shl
sub
add
sbbb
or
inc
imul
add
push
das
adc
mov
mov
cmp
add
mov
dec
add
repz
cmpb
jbe
adc
mov
fcmovnbe
jle
aad
dec
sub
clc
push
sub
jecxz
lret
inc
arpl
mov
pop
in
in
repnz
mov
push
mov
mov
outsl
or
adc
pop
mov
in
sub
sub
je
ljmp
jge
pop
fisttps
arpl
fsubr
cmp
push
push
or
inc
jmp
daa
and
push
decl
jp
mov
mov
or
aas
or
ja
lea
fdivrs
pop
xor
comiss
mov
xlat
jge
mov
mov
xor
in
dec
mov
aas
sub
jmp
lds
mov
add
pop
or
sbb
sbb
lods
loopne
cmp
xor
popa
jbe
mov
push
int3
lock
das
add
pop
lock
mov
inc
iret
and
sbb
adc
outsb
and
gs
dec
imul
decl
sbb
sub
je
jae
cmp
dec
mov
mov
xor
xchg
jb
push
stc
pop
or
sbb
or
jae
inc
dec
jne
int
outsb
and
into
or
jne
jns
testl
outsb
inc
mov
inc
dec
pop
ret
mov
xchg
push
xor
div
dec
movb
outsl
mov
mov
pop
pop
sub
sub
jbe
add
std
mov
sub
jmp
add
dec
jne
push
mov
sub
xor
push
and
loope
outsb
cltd
sub
repnz
jmp
daa
xor
dec
sbb
pushl
pop
dec
data16
loopne
sbb
add
dec
pop
mov
hlt
jae
cld
sub
fisttps
mov
add
outsb
dec
fcomi
orw
sub
mov
dec
add
loope
add
mov
andl
push
and
fistps
ret
add
lret
mov
sub
add
rorl
fdivr
mov
adc
mov
xor
cmp
sub
mov
fstsw
sahf
jae
fldcw
xchg
ffree
ffree
ffree
sub
pushf
loopne
rcrb
add
push
repz
frstor
push
jo
push
xlat
scas
or
cwtl
and
hlt
movsl
xchg
cmp
add
push
mov
inc
aaa
and
mov
aam
and
inc
sbb
and
adc
push
lds
lock
imul
lods
idivb
imul
pop
mov
push
mov
iret
mov
mov
pushf
or
sub
pop
xchg
adc
fcompl
mov
jg
mov
mov
fs
mov
mov
add
stc
outsb
push
fiadds
shlb
and
movb
pop
cwtl
movsb
outsb
test
jl
inc
jge
adc
add
adc
cmp
xchg
and
push
adc
adc
push
lock
xorb
adc
insl
lock
setne
cwtl
sbb
jo
push
ljmp
dec
pop
dec
pop
sti
jnp
mov
add
and
sbbl
pop
pop
add
mov
jmpw
sub
or
fsubs
out
mov
and
adc
adc
aaa
lret
in
cmc
ja
inc
sub
mov
mov
jle
adcl
xor
add
ljmp
cmpl
fcoml
push
adc
sub
loopne
add
dec
mov
mov
jcxz
cmpxchg8b
xor
add
inc
mov
outsb
orb
popa
sub
jb
notl
or
sub
pop
scas
testl
mov
mov
pop
leave
push
xor
pop
adcl
sahf
push
lds
xchg
push
push
cltd
fcomp
testl
cld
ret
jmp
aaa
xchg
push
mov
push
pop
into
cmpb
add
pop
cmp
je
add
data16
push
dec
xor
push
jmp
fisttps
mov
notrack
lds
add
arpl
push
dec
adc
inc
mov
out
mov
jg
sarl
jae
push
mov
mov
jbe
out
aas
pop
cmp
push
dec
or
push
push
sti
test
enter
and
pop
dec
add
pop
out
call
ficoml
hlt
clc
cld
push
jnp
or
insl
clc
movb
sbb
push
in
in
dec
and
xor
mov
ret
sarb
or
xor
adc
ret
dec
sbb
movsl
pushl
jnp
call
ss
mov
ret
das
lea
daa
xor
test
adc
pop
inc
cld
push
dec
imul
notl
mov
mov
loopne
pop
pop
ret
xchg
popa
sub
dec
and
dec
push
add
lret
pop
cli
mov
loope
lods
fsts
pusha
fmuls
add
jnp
and
xlat
scas
cltd
shl
pop
adc
xchg
mov
cmp
jg
repnz
mov
xor
xor
repz
mov
decl
loop
xor
je
dec
popa
pop
cmp
pusha
sti
jl
cli
ljmp
int
addr16
mov
rorb
jl
add
mov
xchg
jmp
push
test
cld
add
adc
scas
fs
cmp
lods
lods
inc
cmpsb
jb
insb
aas
divb
inc
dec
je
mov
mov
pop
sub
jbe
sbb
pop
and
lods
mov
mov
push
add
shll
lcall
jl
and
sbb
pop
pop
cmpsl
or
aam
inc
sbb
popa
xchg
mov
aas
mov
and
xchg
pop
ja
ja
xor
lock
pop
jbe
mov
mov
cmpb
add
lret
mov
mov
add
shlb
mov
cmp
mov
and
test
ja
and
adc
imul
or
sbb
push
adc
add
cwtl
ja
scas
jae
sbb
pop
out
xchg
push
fwait
rcll
push
out
add
jle
adc
or
or
jne
bnd
pop
insb
sub
jp
sub
addr16
lods
mov
call
sub
neg
fsubrl
jne
cs
and
lods
jmp
enter
cmpb
mov
sub
mov
and
pop
fldt
cmp
cmpb
or
pop
testb
jae
roll
xchg
pop
mov
rep
mov
xor
neg
aas
xor
mov
decl
cmp
or
jb
cmp
ja
imul
or
movzbl
add
and
in
dec
push
xor
cmp
or
jl
sbbl
repnz
ret
je
xchg
ror
ret
cli
ret
and
mov
lods
cmp
rcr
dec
pop
jne
lea
mov
lcall
mov
scas
sub
leave
push
dec
push
mov
mov
aad
xlat
pop
out
idivb
pop
aaa
xchg
push
loopne
jge
cmp
xchg
mov
popa
xchg
mov
sub
in
test
jne
cmpsb
mov
fsubrl
je
inc
sbb
test
push
mov
lahf
shr
mov
push
pop
outsb
adc
mov
hlt
out
adc
jg
js
cmp
jne
xlat
mov
cmpl
jbe
mov
aad
xor
or
dec
xor
inc
inc
mov
lods
and
jmp
mov
mov
in
add
aas
and
mov
mov
js
mov
add
mov
xor
dec
in
fadd
fdivl
or
push
and
mov
jecxz
dec
rep
sbb
stc
cwtl
pop
ds
leave
cmp
jo
mov
fisubrl
pushf
mov
outsb
mov
int
scas
lret
aas
mov
or
je
mov
inc
je
mov
ret
std
imul
mov
pop
push
jl
cld
cmp
jbe
mov
xchg
adc
adc
add
movl
pop
mov
pop
push
mov
push
inc
iret
dec
jl
sarl
subl
and
jno
lahf
mov
sub
stos
push
call
cmc
test
mov
outsb
jl
mov
jbe
ja
lock
stc
xchg
push
cmp
aad
icebp
mov
xchg
pop
or
in
in
test
add
mov
xchg
jle
cmp
inc
or
lret
mov
test
lds
lea
add
dec
fbstp
ret
jmp
add
push
insl
cltd
adc
lea
nop
xchg
mov
push
lea
shrl
push
push
xor
stos
or
and
hlt
push
std
das
pop
jge
mov
neg
jmp
or
enter
xchg
push
mov
scas
nop
add
cmpsb
mov
lods
mov
inc
dec
cmp
inc
mov
jmp
cmp
jne
pop
pop
push
mov
xor
mov
sub
lcall
adcb
outsb
cs
mov
repnz
aam
jmp
xor
adc
jo
cmp
add
jge
sbb
jle
mov
cs
daa
push
sbbl
adc
jb
rorb
push
adc
jge
movzwl
sub
and
mov
jge
lea
cmp
jnp
mov
add
fcompl
sti
add
ja
pop
insl
in
or
mov
add
lea
pop
clc
cmp
sbb
call
dec
cld
repz
scas
pushf
jmp
test
insb
jp
jg
dec
inc
dec
inc
dec
lods
or
sbb
sub
dec
aam
push
jnp
push
adc
jg
cmp
jl
pop
sbb
jbe
aad
je
mov
stos
neg
sbb
stos
jmp
neg
std
sti
inc
inc
mov
loop
movlps
pop
mov
inc
clc
dec
test
out
cs
push
mov
mov
incb
sbb
sub
add
call
mov
mov
mov
cld
insl
add
cli
adc
mov
iret
andl
in
stos
mov
enter
repz
inc
test
jne
subb
sbb
test
stos
xor
call
cmp
sti
add
je
inc
jne
fldenv
mov
ret
xchg
repnz
call
or
repnz
fwait
add
jmp
pushf
fwait
lods
mov
mov
mov
je
push
push
cmp
mov
fmuls
sbb
ja
jl
jle
mulb
loop
add
mov
or
testb
and
inc
add
and
and
adc
and
sub
inc
sub
sub
scas
xor
sbb
and
sub
jae
outsl
adc
xor
dec
xchg
jmp
sub
xor
fldenv
jmp
push
add
sbb
arpl
aaa
adc
mov
ret
fists
or
inc
push
pmaddwd
or
aas
ret
mov
movb
addb
subl
adc
clc
adc
pop
faddl
loope
adc
push
pop
std
sbb
rcr
scas
push
fnstsw
fwait
lods
aad
mov
testb
je
fidivl
jne
lea
mov
js
mov
nop
shr
and
add
push
pop
jmp
cmp
xor
stos
jb
jge
jns
lcall
cmp
pushf
or
cmpb
mov
and
dec
js
decb
and
pop
data16
fisttpll
or
add
jmp
mov
add
faddl
je
notb
push
shr
cmp
push
out
xor
pop
inc
jbe
adc
jecxz
addl
test
sbbl
addr16
adc
idiv
fndisi(8087
jl
mov
cmpsl
sbb
jae
dec
add
lret
loopne
push
in
insl
or
mov
or
mov
push
nop
sbb
lcall
sbb
sbb
sub
pushf
and
jne
dec
xchg
cwtl
call
mov
add
aas
and
ja
jae
or
ljmp
enter
sbb
into
cmpb
divl
pop
jmp
pusha
sub
je
mov
iret
dec
jge
icebp
inc
pop
das
sbb
push
adc
mov
f2xm1
fwait
cmp
cli
das
pop
push
fldz
cmpsb
xor
sub
sub
addb
mov
mov
or
cmp
icebp
je
and
fistpll
jmp
sti
inc
jne
inc
push
sub
pop
add
jg
jne
mov
popa
xchg
add
out
rclb
add
loopne
adc
aas
jmp
fcmovnu
sub
aas
dec
test
mov
push
test
insl
sbb
js
and
push
int3
fdivrp
sbb
and
add
jae
fimull
cmpsb
fiaddl
jmp
aaa
mov
adc
or
es
jnp
or
push
inc
imul
push
cmp
aaa
jge
xchg
add
push
xchg
push
dec
sub
cwtl
out
mov
push
ror
filds
add
xor
jmp
insb
mov
mov
scas
sbb
cli
lahf
lcall
fstpl
fwait
sub
push
fnstcw
leave
mov
mov
mov
fistl
cmp
inc
jl
out
xchg
mov
divl
cmp
adc
adc
jo
xchg
lcall
fwait
mov
jae
or
cmp
xor
push
je
dec
dec
insb
sahf
jae
jl
sub
add
imul
adc
mov
dec
shr
add
or
jp
xor
fstpl
fwait
push
ja
stos
pop
pop
add
mov
movsl
push
mov
pushf
ds
add
add
mov
inc
rorb
mov
fnstsw
imul
mov
iret
and
call
out
or
enter
loopne
hlt
pop
or
fldcw
xor
div
pop
xchg
pop
xchg
adcb
nop
add
xchg
punpcklbw
loop
divb
inc
test
lea
lea
add
jge
add
addb
cmp
daa
ja
and
jb
or
jb
sti
mov
push
sti
insb
cli
cmp
ja
adc
fisttps
int
push
mull
pop
dec
incb
jne
sub
roll
cltd
idiv
imul
loope
shl
add
sub
mov
stc
add
pusha
ret
or
add
rol
std
std
pop
inc
xchg
addl
aam
shr
in
test
jg
dec
cmp
push
clc
adc
or
inc
pop
xchg
ds
inc
outsb
dec
insw
rcll
es
adc
inc
rol
inc
inc
and
mov
lods
mov
jg
lock
or
dec
lock
imul
fcomp
sub
fcoms
mov
mov
pop
inc
push
loopne
cmp
xor
dec
pop
mov
mov
mov
aas
sbb
push
dec
aam
imul
cmp
jb
je
sbb
sbb
inc
jmp
ja
or
stos
sbb
dec
xor
hlt
mov
cltd
fld
test
add
decb
xor
or
mov
clc
jge
mov
addr16
xchg
inc
icebp
adc
pop
adc
shlb
push
xchg
adc
mov
fsubrl
cltd
cld
mov
or
inc
xchg
fiaddl
jb
iret
sbb
lea
mov
pop
lret
inc
out
cwtl
xor
ss
sub
divb
adc
fcomi
ret
dec
push
xor
pusha
in
clc
push
pop
or
mov
icebp
sub
and
rcrb
sbb
shlb
mov
add
or
sti
je
test
xchg
sbb
add
out
in
cld
pop
push
cmpb
jne
aaa
jp
pop
pop
add
add
push
lea
or
xchg
popa
div
lcall
in
add
jl
inc
lcall
out
in
mov
jecxz
dec
push
sbb
call
ljmp
sbb
cmpsb
cltd
mov
sbb
inc
push
adc
inc
aam
cmp
pop
lock
and
sbb
xchg
fisubl
std
cmc
inc
mov
mov
adc
adc
inc
or
jo
shlb
jne
cmpsb
add
int
or
sbb
jmp
cmpl
pop
add
sub
adc
or
add
mov
adc
xchg
ficomps
sbb
enter
and
mov
ret
xor
push
mov
push
mov
nop
arpl
xchg
gs
repnz
pop
addr16
iret
in
inc
and
daa
cmp
add
bswap
mov
jmp
and
jmp
lcall
jecxz
push
inc
cmpb
jne
push
subl
dec
ret
mov
ret
push
movsl
lcall
jns
pop
add
orps
clc
fadds
fimull
cli
sub
cmp
pop
mov
jle
fsubrl
pop
incl
mov
adc
jecxz
and
adc
call
sub
scas
insb
mov
adc
ret
jns
mov
add
lahf
mov
call
jne
cmp
jne
mov
xor
pop
jecxz
lcall
push
fwait
sbb
out
add
in
cmovbe
xchg
mov
sti
push
or
fcoms
add
pop
or
or
or
or
push
jae
int
out
jl
popf
sahf
or
cmp
mov
cmc
fneni(8087
jns
push
shll
xchg
add
push
and
xchg
test
icebp
mov
cltd
xchg
flds
add
popf
mov
lea
pop
and
repz
fdiv
or
mov
cmc
adc
mov
lock
sub
test
add
out
dec
lea
push
pop
push
mov
mov
je
add
jmp
out
aad
loop
push
mov
les
push
mov
pop
bnd
mov
les
and
xor
pop
mov
cld
xor
aad
out
addb
in
subb
dec
jg
je
mov
add
sti
fwait
pushl
pop
sub
je
pop
je
jmp
cmpb
dec
mov
hlt
mov
sub
je
add
rorl
jne
rolb
jmp
cmp
xor
mov
push
aaa
aad
mov
mov
mov
push
test
ljmp
mov
jmp
and
mov
call
mov
out
push
fsubrs
pop
ret
dec
fcomip
pop
sbb
popa
out
adc
add
jne
mov
movsb
lret
push
xchg
xchg
dec
in
sub
push
mov
jne
sbb
lret
xchg
xchg
xor
out
out
pop
cmp
addl
insl
push
cmp
daa
jns
adc
add
cmp
jae
lret
cwtl
inc
dec
ficoms
pushf
nop
add
xor
and
je
xor
pop
add
inc
pop
sbb
ret
add
sub
rol
adc
push
cmp
imul
or
or
lods
arpl
mov
jge
js
popf
cmpb
and
mov
or
push
imul
aas
dec
enter
sbb
push
test
jmp
mov
mov
sbb
sub
sub
sub
mov
adc
adc
stos
sbb
clc
inc
mov
js
adc
fnsave
and
jl
xlat
inc
in
popf
sub
dec
xchg
or
adc
in
add
add
jg
jae
jl
insl
mov
fiaddl
adcb
ret
jne
lea
mov
xchg
adc
mov
popa
cmpsl
or
clc
inc
sbb
js
sbb
test
cmpsl
adc
push
lcall
in
mov
cmpsl
daa
sub
clc
je
dec
movb
notl
push
sbb
cltd
call
lahf
jb
mov
add
lock
pop
psrld
sub
ljmp
adc
outsl
xor
sub
jae
jnp
int
popa
or
sbb
scas
sti
sub
enter
js
add
je
pop
cli
mov
fimuls
or
dec
pop
mov
or
mov
nop
inc
adc
xchg
jb
xor
mov
or
or
popa
or
push
mov
and
or
imul
or
mov
sbb
push
mov
mov
push
jne
jl
pop
in
cmp
jne
incl
and
cmc
and
aaa
mov
jmp
sub
lcall
dec
je
sub
sub
je
jmp
mov
jmp
aaa
xchg
mov
es
push
inc
mov
jbe
out
clc
jle
fadd
xchg
pop
bound
add
mov
rorb
cltd
mov
or
pop
js
mov
addr16
scas
bound
or
and
sub
cmc
cltd
jp
movsb
mov
addb
jmp
test
push
xchg
aaa
sahf
test
add
mov
push
call
jne
cmp
jg
or
or
cltd
xor
sub
add
sahf
fs
call
sub
add
cmpl
jle
adc
pop
rcr
dec
push
and
out
cld
gs
xor
mov
xchg
psubusb
loopne
push
arpl
in
jmp
test
pop
mov
xor
jo
or
xor
shlb
xchg
sub
aas
add
xchg
mov
lret
mov
mov
ds
rcrb
mov
mov
dec
add
arpl
sub
out
das
dec
insb
lods
sete
mov
jae
test
dec
or
or
cs
jmp
hlt
lods
xchg
or
cltd
add
and
sahf
jbe
sub
sbb
sahf
lret
add
add
lock
loopne
shll
imulb
jb
in
call
jmp
mov
and
in
call
mov
hlt
push
xchg
xchg
sub
jmp
aaa
repnz
sbb
adc
cmp
jmp
lahf
push
adc
movsb
out
xchg
dec
and
scas
pop
push
jmp
cmpb
ja
ffreep
inc
push
add
fsubrs
push
fldenv
data16
out
in
out
into
lock
add
cmpb
jle
and
fs
jne
loopne
xchg
mov
add
or
xchg
or
ja
pop
jle
sub
dec
aaa
jmp
aaa
in
xor
cmp
fwait
pop
mov
and
xor
cwtl
xchg
jne
fmul
or
sarl
push
mov
fcmovnb
mov
push
add
fsubrl
imul
fcomps
das
xor
inc
repnz
out
dec
test
add
sti
into
test
and
mov
inc
outsb
mov
push
fs
adc
sbb
iret
mov
pop
faddl
aam
mov
and
pushf
sbb
in
loopne
mov
mov
or
adc
sub
pop
xor
das
jp
out
and
add
aaa
xor
imul
or
lret
xchg
enter
iret
je
orl
xor
push
add
pop
inc
or
fs
add
inc
push
test
jo
sbb
and
sbb
inc
ja
jne
loopne
ret
cmp
add
adc
sub
and
aad
sahf
add
pop
sub
mov
test
add
mov
popa
fsubl
mov
pushf
push
scas
dec
dec
cmp
jp
into
rcrl
sub
imul
pusha
shl
int3
mov
jno
cmpsl
pop
jl
mov
cltd
mov
xchg
aaa
jnp
xchg
test
adc
ret
cmp
jbe
jne
dec
lcall
daa
fst
fcomps
or
sbb
fwait
jmp
sbb
subl
sbb
jle
les
fisubrl
pop
push
dec
push
push
or
ror
push
xor
add
loopne
fbstp
sub
jb
or
xchg
or
jno
mov
enter
xchg
sti
mov
dec
rorb
cmp
test
mov
sbb
xor
sbb
xor
add
pop
xchg
stc
or
jp
rol
adc
ss
ljmp
jo
sbb
popa
pop
dec
push
add
mov
ljmp
mov
sub
fmuls
push
push
repnz
sti
iret
mov
lea
dec
push
pushf
pusha
pop
out
sub
mov
lods
inc
lock
ds
mov
inc
imulb
sbb
cmp
sti
or
mov
and
pop
add
shrb
testb
je
shlb
in
insb
xchg
int
dec
call
and
inc
xor
or
xlat
add
lods
mov
pop
jmp
pop
lock
fisttpl
push
jl
je
xchg
cmp
add
push
add
jbe
push
or
mov
lods
adc
mov
test
scas
xchg
sub
mov
push
out
inc
pop
aam
out
popf
mov
lock
and
insb
scas
jmp
mov
in
imul
push
cmpsl
mov
or
je
cmp
rolb
adc
add
repz
clc
cli
inc
mov
pop
xchg
ret
mov
hlt
push
push
add
loope
scas
fs
adc
aas
xor
and
push
jnp
or
add
cmc
dec
sahf
daa
add
or
ds
xchg
clc
test
addb
mov
sub
cmpsb
das
xor
mov
mov
jmp
mov
sub
je
pop
cwtl
push
sub
je
scas
ret
inc
and
imul
cmpl
fcompl
sbb
rclb
xchg
rcll
mov
add
jg
dec
cmp
sarl
add
mov
jo
cmovp
jle
sbb
aas
enter
adc
ret
add
push
orl
mov
jmp
pop
je
jne
xor
jmp
addl
mov
push
stc
mov
pusha
loop
dec
dec
xor
out
inc
es
push
addr16
sbb
add
sub
xlat
dec
sub
add
test
cmp
out
stc
fidivl
sbb
es
sar
subb
fnstsw
sbb
out
movd
add
test
dec
cmp
lods
rcrb
ret
xor
jmp
cltd
inc
out
or
popf
gs
mov
out
push
rolb
repz
ret
mov
sbb
fdivl
jnp
das
xchg
sub
lods
and
inc
loopne
and
mov
adc
fdivs
lcall
ljmp
jp
bound
sub
paddb
add
push
add
and
cmp
or
adc
jo
sbb
fdivl
lods
add
and
cmp
xor
mov
mov
cmp
mov
sarb
mov
xor
pcmpgtd
out
or
or
cmp
insl
mov
mov
fcompl
mov
js
sub
lods
and
lock
nop
inc
push
or
push
dec
inc
jmp
dec
or
dec
mov
cmp
mov
cmp
loopne
xor
xor
ss
inc
push
daa
nop
or
adc
test
lds
test
out
xchg
nop
add
jg
xchg
stos
jne
mov
xchg
mov
aad
add
adc
fistpl
sub
leave
or
addl
and
dec
or
cmp
dec
adc
sti
jecxz
pusha
test
or
fidivs
enter
adc
xchg
test
inc
add
pop
mov
clc
inc
lods
or
das
mov
js
addr16
ret
dec
mov
or
pop
dec
frstor
add
jno
jb
clc
lahf
xor
mov
jl
or
sti
push
jg
cmp
sbb
icebp
lret
cli
in
outsb
mov
iret
call
push
xchg
push
ss
mov
pop
aas
or
movsb
decl
push
and
ljmp
sar
lret
adc
ljmp
adc
adc
les
rorb
cwtl
and
add
inc
sbb
dec
pusha
or
ror
mov
jmp
adc
xchg
pop
jo
in
pop
loopne
cld
or
aam
shrb
orb
lcall
inc
jne
pop
cmp
in
sub
jne
or
jge
clc
mov
in
push
loopne
mov
adc
in
sbb
inc
loopne
gs
adc
mov
and
sarb
cmpxchg
lea
add
cmpsb
cmp
lock
pop
into
jl
jbe
dec
cwtl
sbb
mov
pop
cs
push
push
cmp
je
jmp
sub
aaa
jmp
xor
sti
aas
xchg
das
and
add
mov
add
push
xor
shll
or
or
inc
dec
rorl
xchg
pop
cmpsl
daa
cmpsl
and
mov
add
outsb
xchg
lret
movsl
cmp
or
mov
jnp
lods
pop
cld
sbbl
movaps
cmpsb
inc
xor
bound
test
or
or
arpl
popa
and
sub
mov
sub
cmpsb
dec
xchg
orl
add
mov
add
idivb
or
jae
or
pop
mov
mov
jl
add
xchg
adc
pop
outsb
sub
jl
mul
jmp
sub
jb
mov
leave
and
out
nop
cmp
cmp
dec
sbb
adc
adcb
sbb
or
dec
jl
dec
pop
xchg
mov
gs
mov
cld
std
rolb
or
fstl
mov
jae
jae
jo
neg
cmp
mov
jns
fdivl
hlt
add
mov
femms
lock
pushf
outsl
jo
cs
loopne
inc
outsl
cmp
push
enter
jp
dec
mov
xchg
xchg
cmc
aaa
scas
fwait
xlat
leave
xchg
pusha
nop
outsb
mov
dec
andb
sbb
fwait
add
mov
fcompl
push
loop
sub
push
mov
shrb
mov
iret
mov
sbb
add
sbb
sbb
pop
xchg
aaa
sbb
or
inc
or
adc
pop
pop
inc
cwtl
cwtl
adc
pushf
mov
inc
mov
adc
sbb
nop
shl
and
jb
push
insb
lcall
dec
push
sub
aas
mov
xor
mov
mov
and
mov
add
or
jmp
mov
cmpb
or
adc
cmpb
mov
cmp
mov
adc
jne
cmp
pop
xchg
mov
fucomip
clc
jne
pusha
xchg
sarb
add
cmp
scas
pop
int
mov
sbb
push
cltd
jae
aaa
push
jmp
mov
fisubrs
testl
push
into
ja
xor
sub
and
loop
mov
push
adc
enter
imul
out
data16
push
push
jg
data16
pushl
mov
sub
dec
or
test
jmp
dec
cwtl
adc
aas
or
jb
mov
sub
and
jns
or
adc
dec
or
inc
testb
test
rcll
add
xchg
add
xor
cmp
mov
jp
inc
lods
in
xor
cmp
add
pop
daa
xor
ja
fidivrl
or
xchg
cmpsl
lods
rolb
xor
jle
pop
jg
mov
scas
das
adc
jl
mov
adc
sti
adc
push
scas
shl
inc
inc
inc
jge
shlb
das
clc
dec
push
sbb
dec
and
xchg
rcrb
or
mov
fstps
jge
insl
adc
jl
jne
sbb
inc
mov
push
adc
xchg
cmp
adc
mov
mov
mov
cmp
aas
sarb
cs
push
inc
xor
fisubl
sub
or
adc
sti
jnp
pop
xchg
or
or
mov
and
test
inc
xchg
pop
iret
fisttpll
es
jge
pop
mov
mov
or
push
inc
sub
pop
arpl
ret
daa
push
daa
xor
in
xchg
push
das
pop
and
push
push
jb
fwait
add
dec
and
scas
lcall
push
push
sbb
inc
adc
insb
adc
shr
and
in
popf
push
cmp
loop
ljmp
sub
inc
mov
rolb
ljmp
je
mov
js
jge
jb
iret
push
sbb
and
adc
or
and
cmp
addb
add
je
scas
push
push
and
clc
sub
aaa
fimull
push
outsl
inc
inc
add
add
sbb
ret
sub
jbe
push
push
xchg
js
cmpsl
daa
push
mov
or
mov
lcall
daa
enter
jo
xchg
testl
mov
test
sbb
cmp
add
inc
or
inc
jne
and
mov
stc
adc
xchg
and
push
cmc
pop
hlt
xor
pop
aad
xchg
cmp
or
mov
xor
ds
in
push
mov
fwait
js
div
jg
fidivs
push
mov
sub
jb
inc
mov
mov
js
fdivr
stos
sbb
lret
jne
int
inc
test
or
inc
jne
mov
movsl
enter
pop
ja
mov
insb
pop
pop
or
setb
inc
ja
daa
imull
movl
inc
add
scas
jnp
mov
xor
dec
data16
push
sbb
enter
xchg
loopne
dec
shr
mov
or
test
andb
xlat
or
xchg
mov
movsl
sbb
add
xlat
fucom
pop
sub
pop
mov
test
inc
mov
sbb
pop
outsb
mov
popa
mov
push
xchg
mov
inc
inc
cmp
sti
jne
lea
pop
push
pushf
jo
push
scas
movsl
call
imul
rorl
and
ss
jne
jmp
int
loope
push
lcall
sub
add
arpl
mov
add
add
out
loopne
jp
and
stc
push
and
add
leave
jnp
mov
lods
pushf
mov
sahf
je
pushf
mov
xor
mov
mov
cwtl
ss
imul
lea
adc
iret
mov
mov
call
sti
xor
cmp
mov
push
xchg
push
sbb
mov
mov
xchg
mov
pushf
pop
jb
shlb
loopne
mov
movsl
dec
aam
lods
and
in
cmpl
mov
push
fstps
sub
jb
sarb
sub
mov
push
sarb
sub
xchg
in
int3
mov
inc
test
out
enter
cwtl
or
adc
fadd
call
xor
daa
and
aas
sbbl
rol
add
hlt
mov
insb
ja
and
push
push
hlt
mov
dec
jge
fdivrs
pop
or
in
movsb
lock
mov
aad
aam
inc
jle
mov
or
pop
push
insl
das
fs
add
scas
insl
add
fs
das
fwait
dec
fistpl
insl
pop
jo
mov
push
sbb
and
pop
sbb
push
dec
cmp
pop
push
cmp
into
add
inc
jbe
adc
xchg
jbe
test
dec
dec
mov
aaa
mov
mov
int3
aam
mov
adc
dec
es
in
push
mov
test
int3
adc
int
insb
sub
mov
mov
leave
loope
or
add
jge
mov
xor
push
les
sbb
lods
pop
jmp
clc
mov
loopne
les
inc
repz
stos
mov
or
xorb
adc
dec
add
jb
rcrb
call
push
push
and
mov
loope
test
pop
or
and
add
sar
or
inc
jb
gs
jo
sbb
js
add
xchg
lock
inc
dec
clc
xlat
inc
pop
call
dec
ret
xchg
dec
and
jge
sbb
adcl
mov
or
insb
and
or
mov
or
push
inc
cmp
jne
mov
and
and
jle
jl
fistpll
cmpsb
mov
inc
jmp
push
fiadds
or
movb
loop
xor
fidivrs
mov
in
xchg
add
ljmp
ljmp
sbb
mov
test
inc
movl
or
mov
scas
mov
daa
les
adc
mov
daa
mov
rcll
fs
or
repnz
call
pop
or
lea
loop
xlat
push
test
or
mov
dec
js
sbb
outsb
aas
add
jns
mov
shlb
lock
imul
xchg
mov
adc
pop
adc
scas
rorl
push
js
pop
or
xchg
es
outsb
testl
mov
les
rcrb
cmp
pop
mov
push
rclb
cmp
push
sbb
push
sub
inc
mov
adc
clc
mov
das
decb
and
jl
mov
adcb
xchg
sbb
mov
subl
seta
mov
lea
mov
jmp
and
out
adc
mov
das
add
cmp
insl
jne
scas
orb
mov
xchg
sub
das
dec
cmp
sete
incl
xor
pop
cmp
out
add
dec
sbb
sub
sbb
push
inc
rorb
jg
in
add
lret
mov
dec
lret
pop
fbld
lock
scas
add
or
add
inc
cmp
test
xor
pop
faddl
xchg
pushl
insl
dec
inc
jl
shl
mov
movswl
dec
or
mov
inc
xor
inc
xor
lock
sbb
stc
rorl
stos
jmp
mov
sub
jmp
pop
nop
adc
xor
add
es
inc
testl
mov
or
push
pusha
adc
scas
std
hlt
pop
xchg
cmp
int
fildl
or
pop
inc
enter
cmp
testb
iret
pop
mov
or
mov
cmp
and
mov
int
sbb
aad
movsl
prefetchw
or
push
fs
fdivs
lret
mull
fnstcw
and
pop
nop
pop
out
mov
in
sbb
fs
jmp
sbb
shrl
cmp
push
mov
es
je
mov
inc
add
adc
dec
pop
sarl
hlt
loopne
in
pop
and
iret
sarl
iret
nop
faddl
int3
repz
idivl
les
jl
push
rcr
cmp
mov
lods
or
jle
cmpsl
jne
jnp
push
or
iret
repz
clc
test
fdivrs
cmp
sub
fs
jle
iret
sarl
cs
push
insb
push
dec
xor
stc
sahf
out
dec
aam
push
xor
mov
mov
sahf
cmpsl
sub
and
sbb
or
ja
sbb
es
cmp
outsl
aas
sbb
adc
leave
xor
or
daa
iret
add
add
cld
adc
negb
hlt
cs
repnz
push
mov
in
js
fmulp
jae
or
mov
loopne
in
jns
fcompl
sbb
xchg
je
mov
fwait
cmp
mov
les
mov
fdivrs
mov
or
cmp
iret
mov
lods
mov
test
xchg
out
push
mov
out
in
pushf
mov
leave
cmp
nop
mov
cmp
mov
fs
add
je
cmpl
enter
jb
dec
add
pushf
in
mov
stos
call
repz
push
cmp
mov
enter
cmp
add
sbb
xchg
adc
gs
mov
fiadds
mov
les
cmpsl
jge
inc
push
fsubs
or
arpl
and
cs
and
sbb
enter
sbbb
in
aam
shlb
mov
popa
daa
iret
sub
cmp
xchg
iret
inc
scas
add
mov
add
enter
cmpb
mov
mov
test
test
cmp
sti
shrb
lods
fwait
sbb
js
pushf
xor
push
movsb
push
mov
imulb
cmpl
or
jmp
data16
ljmp
int3
jl
mov
dec
outsb
cltd
movsb
notl
or
or
in
jp
inc
pop
inc
pop
enter
adc
mov
adc
xor
sbbb
adc
add
and
ret
es
and
sbbb
xchg
cld
in
push
aam
xchg
sbb
rcrb
repnz
add
and
sub
dec
pop
leave
addl
clc
clc
jecxz
ds
adc
push
lcall
xchg
push
hlt
push
cmc
jb
test
rclb
add
mov
bound
rcll
sub
or
dec
rolb
dec
mov
cld
or
xor
jecxz
mov
repnz
push
nop
filds
add
mov
enter
xlat
lods
subb
leave
pop
push
or
jl
adc
mov
dec
xor
out
imul
nop
in
in
xchg
nop
mov
pushf
shl
jns
xor
mov
loop
jecxz
mov
add
ret
iret
or
push
push
pop
mov
int3
mov
dec
movsl
sbb
sub
mov
js
xchg
dec
xor
and
cmp
lods
nop
and
dec
xor
xor
mov
xor
and
sarb
ror
cs
dec
enter
xchg
push
cs
shlb
fcom
cs
push
cs
fdivr
ds
xchg
push
clc
fsubl
fimull
xchg
inc
loopne
sbb
cmp
sub
mov
cmp
sub
dec
dec
sub
inc
sbb
hlt
sbb
jne
pop
sti
mov
push
or
xchg
fistpll
daa
dec
add
outsl
je
fs
repnz
push
jne
das
dec
jne
inc
imul
push
cltd
mov
dec
jb
pop
outsl
jb
xchg
das
inc
insl
jo
inc
jb
insl
push
je
pop
test
sbb
int
xor
jns
jbe
dec
sbb
inc
jae
pusha
outsb
and
inc
jns
pop
in
push
pop
outsl
cmpsl
fidivrl
aaa
xchg
dec
cmpsl
sbbl
adc
mov
sbb
fcoml
call
pusha
movsb
icebp
push
rcr
lret
pop
fildl
and
xchg
xchg
push
iret
sar
add
add
adc
add
test
cmp
xor
ds
out
mov
sub
call
je
adc
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
cwtl
testb
addr16
adc
add
push
or
xor
setb
mov
cwtl
jne
fcomps
and
add
movl
popa
and
and
mov
cmp
push
inc
cmpsb
inc
dec
cmp
pop
and
in
sti
inc
jb
lret
mov
fldl
inc
popa
adc
add
pop
test
inc
mov
gs
push
enter
mov
orb
outsl
shrl
lock
ror
add
rolb
sbb
cmp
cmp
scas
inc
nop
sub
dec
insl
jo
shrl
xchg
push
push
mov
movl
push
outsb
divb
sub
push
and
sub
jg
loopne
push
dec
add
mov
cwtl
mov
adc
inc
and
shl
test
lods
mov
ja
imul
das
xorl
pusha
or
call
or
and
mov
jmp
in
loope
add
daa
xor
mov
add
loope
fistpl
jns
shl
loop
inc
dec
xchg
and
mov
add
or
stos
loop
jb
push
xor
mov
pop
movl
in
cmp
or
jg
loope
ror
stos
add
in
cmpsl
mov
mov
into
in
fistps
or
aas
dec
je
sbb
xor
cwtl
fs
dec
lahf
push
nop
es
jbe
fldl
sarb
mov
inc
push
enter
fisttpll
imul
clc
lret
inc
fiadds
pop
stos
hlt
mov
dec
sahf
hlt
mov
mov
sbb
in
mov
cmp
in
in
call
and
fistps
add
mov
sbbb
jnp
jae
dec
mov
loopne
mov
pop
jmp
mov
xor
in
fwait
enter
pop
rorb
jb
repz
add
fcomp
enter
dec
add
mov
jne
sub
add
in
rolb
jb
dec
loopne
or
les
push
ss
cmp
shlb
das
sub
sub
inc
fimuls
in
push
jbe
sub
cwtl
rcl
shr
adc
rol
jmp
scas
iret
cmp
add
in
sbb
jns
cltd
in
add
fstpl
fdivs
pop
pop
stos
lea
add
mov
adc
roll
shll
dec
adc
lahf
ret
jle
pop
and
jge
pop
xor
fs
cmp
inc
mov
insb
jnp
mov
or
pushf
xchg
jne
pushf
xchg
lods
xchg
mov
leave
shr
hlt
stos
mov
nop
mov
mov
push
rcl
xor
test
cld
mov
outsl
insl
sbb
testb
cs
add
andb
enterw
scas
out
cmpsb
or
test
dec
decl
jl
pop
les
adc
in
rorl
xchg
clc
jmp
and
mov
clc
movzwl
lock
or
outsb
add
inc
xor
lea
outsb
imul
call
clc
adc
sub
test
aaa
sbb
mov
xchg
inc
sub
inc
pop
dec
inc
rorl
sahf
jmp
inc
mov
dec
cwtl
in
xor
repz
dec
pop
daa
lock
lods
pop
fsubrl
out
fwait
or
pop
test
and
mov
in
test
push
insl
fdivl
push
cld
nop
pop
pop
sahf
ret
jge
ret
xor
xchg
adc
or
cmpsl
aas
jmp
ret
wbinvd
cmp
jns
and
inc
sub
or
cmp
xor
div
and
jg
xor
cmp
and
movb
rol
aaa
mov
movsl
add
or
fnstenv
mov
call
outsb
push
jne
inc
push
and
aas
fdivrs
cmp
loopne
clc
fimull
sub
add
outsb
je
or
or
and
sbb
in
loopne,pn
nop
or
xchg
in
loopne
fstp
repnz
or
or
add
jnp
pop
jnp
pop
in
sub
adc
mov
push
movsb
test
call
inc
cmp
push
ret
sub
mov
xchg
pop
push
hlt
lret
fdivrs
adc
mov
out
cmpsb
dec
mov
fistpl
push
add
adc
xor
imul
mov
dec
call
add
or
mov
lods
dec
incl
adc
fstpl
rorb
xor
test
test
rorb
cld
push
inc
fcomp
jmp
sbb
push
rorb
or
mov
jmp
cmc
pop
jl
dec
out
cmp
je
pop
jne
and
adc
push
cmpsb
insl
or
add
or
icebp
push
int3
testl
lods
xchg
ss
lea
sbb
jo
pop
call
push
add
adc
xchg
add
shrb
pop
pop
and
adcl
ds
in
popf
push
mov
xchg
adcl
testb
and
inc
add
stc
cld
nop
imul
lods
ss
popf
aaa
test
es
lock
add
cmpsl
int
dec
push
inc
repnz
or
mov
call
repnz
in
jp
test
jno
out
addb
dec
and
adc
es
sbbb
and
inc
lea
jmp
mov
sti
jg
andl
xchg
pop
sarb
adc
ja
cmp
loopne
cltd
ss
pusha
pop
mov
xchg
pop
pushf
mov
push
test
enter
or
test
loope
sbb
jle
and
and
push
fistl
loope,pn
add
cmpsb
or
adcb
jns
adc
fcomps
das
mov
and
jmp
push
pop
sbb
adc
ja
fildl
sbb
lods
xor
cmpsb
inc
push
inc
xchg
psubq
pop
sbb
mov
cmp
ja
scas
xorl
adc
iret
repz
fs
rcr
imul
shl
pop
sahf
out
outsb
pop
inc
pusha
jl
mov
fs
jo
inc
jecxz
addb
sarl
mov
add
je
cs
lods
scas
xadd
in
test
xor
xor
fldcw
add
add
sub
sbb
jmp
push
inc
fstpl
nop
xchg
dec
lock
dec
repnz
add
sub
fistpl
call
aas
inc
xchg
in
mov
loopne
push
mov
pop
adc
dec
lock
fsubl
fmull
les
fcom
xor
dec
or
aam
loopne
jb
mov
cmpsl
loopne
lods
call
push
mov
enter
and
enter
mov
negb
in
lock
sub
lret
jmp
sbb
imul
pushf
rclb
test
add
sub
mov
add
xor
repz
test
stc
cmp
add
repnz
mov
imul
add
push
into
jmp
sbb
les
xchg
mov
mov
mov
jecxz
flds
mov
jb
mov
dec
xchg
fnsave
leave
lods
cmp
fisttpll
cmpl
popa
in
aaa
into
movsb
and
movsb
enter
mov
or
dec
pushf
cmp
lret
cwtl
xor
arpl
xchg
jmp
arpl
aaa
nop
dec
jbe
movl
in
sbb
gs
ret
add
dec
sub
cmp
out
cmp
pop
movsb
xchg
fildl
mov
or
mov
and
in
out
dec
push
and
jmp
mov
stos
mov
jecxz
or
pusha
hlt
cmp
dec
and
in
cmp
popa
and
push
jb
in
loope
push
adc
cmp
push
xor
sub
mov
imul
dec
ret
add
and
cmc
in
mov
dec
cmpsl
cmc
loopne
ret
mov
mov
add
xor
cmp
testb
jb
cmpsl
enter
cmp
push
mull
lcall
clc
data16
imul
negl
cwtl
mov
notl
jb
int
cmp
mov
add
mov
es
xor
inc
mov
pusha
ret
je
ret
lcall
nop
arpl
jno
ds
fwait
es
loopne
movsbl
nop
inc
aaa
dec
adc
jbe
aaa
aam
aam
xchg
xorl
jno
mov
sub
lods
loopne
pop
mov
or
insl
es
or
aaa
xchg
cmpsl
push
orb
sbb
dec
cli
pop
idivb
iret
and
inc
arpl
lret
fwait
xchg
push
inc
daa
mov
in
fcomip
push
ljmp
dec
cwtl
sbb
rclb
jbe
aaa
aaa
mov
mov
cmp
mov
mov
jne
mov
fwait
mov
cmp
orl
popf
add
adc
movsb
aaa
movsb
aad
xchg
dec
dec
jno
cmp
add
xor
pushf
cmp
mov
aaa
cwtl
jno
lods
or
aaa
outsl
mov
xor
aaa
aaa
in
nop
popf
enter
nop
aaa
ss
in
in
in
push
mov
ret
add
sti
mov
fadds
imul
lds
test
nop
xor
sbb
or
adc
and
bnd
mov
inc
xor
mov
jmp
movw
ja
push
test
movl
or
mov
insl
iret
outsl
cmpsl
sbb
or
adc
adcl
xchg
fs
jp
pop
or
mov
fistpll
push
lret
or
cmp
dec
push
nop
add
or
push
out
cld
outsl
or
repnz
cmpl
jb
mov
sahf
add
dec
sub
lods
mov
loop
mov
iret
inc
insl
jo
jns
cmp
jne
pop
int3
dec
rcr
push
insl
popa
inc
daa
das
aaa
mov
in
ficoms
add
inc
outsl
jne
inc
dec
std
filds
outsb
arpl
orb
mov
pusha
xchg
aaa
test
rolb
adc
arpl
inc
pop
fwait
shll
aas
push
outsb
imul
inc
arpl
sub
mov
iret
jb
sbb
inc
jns
andl
lods
dec
add
daa
test
ja
add
jle
pop
add
clc
fcoms
std
ljmp
decl
inc
xchg
loop
dec
ja
test
xlat
in
adc
sbb
xchg
cmpsl
inc
sti
imul
movb
pslld
add
adc
jno
add
jmp
sbbl
xchg
cld
stc
sbb
xor
jne
jne
stos
xor
dec
push
cmp
jo
lea
orl
and
cmp
test
repnz
sbb
inc
xchg
icebp
decb
ds
std
out
in
jge
xor
inc
add
sti
xor
test
inc
push
push
gs
inc
sub
shrb
add
out
xor
xor
inc
jno
xchg
lods
or
test
lahf
pop
les
push
pusha
dec
jle
data16
fmuls
xor
sbb
mov
cwtl
cmp
and
out
or
pushl
out
jb
dec
ror
and
out
sbb
movsb
out
movsb
std
add
push
or
js
hlt
xchg
push
inc
iret
cmc
movsb
stos
xlat
sbb
adc
xor
es
test
xor
jnp
je
outsb
adc
add
jnp
repnz
xchg
pop
pop
sarl
inc
jle
imul
mov
test
adc
add
mov
addb
mov
inc
mov
call
push
ror
mov
add
ret
xchg
les
push
sti
cs
sbb
mov
aaa
xchg
push
mov
add
cld
iret
subb
push
cmp
sbb
lods
jle
and
in
iret
andb
loopne
out
add
movsl
ljmp
loopne
mov
flds
popf
inc
addr16
je
lods
cmpsl
enter
mov
xlat
pop
fimull
push
push
adc
pop
xchg
add
rorb
push
mov
mov
jle
daa
jg
xchg
cld
enter
jns
mov
sti
cmp
in
setg
inc
mov
lods
repnz
shll
jl
fnstenv
and
iret
add
add
ret
daa
lock
nop
or
scas
add
roll
pop
xchg
adc
xchg
add
cmpsb
jl
inc
xor
cmc
nop
les
inc
sbb
cmp
or
inc
rolb
add
xor
imul
mov
or
dec
jne
cmpb
xchg
cwtl
add
mov
enter
int
aad
outsl
nop
pop
mov
cmpsb
jne
and
dec
pop
js
xor
lea
incl
mov
adc
sarl
cld
aaa
fadds
mov
add
out
loope
pop
jbe
subl
dec
mov
push
mov
jo
adc
mov
dec
adc
nop
xor
outsb
in
and
inc
cld
sbb
lret
lret
sbb
mov
arpl
lret
dec
and
sub
call
inc
jle
lods
lods
inc
inc
inc
inc
scas
scas
nop
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
cwtl
cltd
inc
inc
inc
inc
lcall
inc
sahf
lahf
addb
addl
xchg
add
sbb
cmp
push
add
ret
jo
cltd
lods
stos
cmp
outsb
add
push
add
xor
dec
xchg
mov
add
adc
sub
push
sbb
decl
mov
xor
test
jne
sbb
inc
mov
dec
xor
cmp
jle
inc
adcb
aaa
xchg
adc
in
outsl
mov
mov
and
js
jge
loopne
jmp
lea
cmp
in
cmp
adc
jb
pop
testb
mov
push
inc
or
sub
loopne
dec
rcr
cmpsb
fisttpl
mov
add
jo
dec
jl
or
inc
push
or
or
lret
je
stos
or
and
sbb
add
mov
jmp
jle
in
je
jmp
cmp
or
lret
sbb
dec
jne
xchg
call
notl
cmp
aas
pop
je
std
outsl
outsl
xor
push
lar
decb
ja
add
ltr
shr
sbb
and
or
ret
idiv
jle
add
add
adc
add
mov
ficoml
jle
add
lcall
jg
aaa
mov
in
fisttpl
inc
inc
push
cmpsb
cli
shlb
lret
or
cld
or
ja
jb
add
add
call
out
sub
or
jo
scas
mov
push
lea
mov
jb
incl
cmp
pop
dec
and
daa
scas
lcall
hlt
in
pushl
mov
inc
mov
lods
cmp
lcall
pusha
and
ljmp
lret
fcmovnb
mov
mov
xor
ret
adc
xor
out
cmovne
push
push
add
dec
clc
inc
mov
cmovne
ds
fisttpll
aam
xor
lcall
nop
loope
or
and
adc
mov
mov
mov
sbb
jmp
xchg
or
or
adc
test
int3
stc
or
iret
push
lcall
inc
adc
or
jle
xor
add
or
popa
sub
cmp
idivb
hlt
pop
add
mov
stc
fs
jo
ret
rdmsr
sub
sub
jne
mov
imull
addr16
cmp
cmpb
dec
push
xchg
add
mov
pop
mov
pop
lods
add
mov
xchg
cmp
andb
push
xor
iret
push
add
cltd
lods
pop
cmp
add
ja
addr16
es
and
adc
scas
test
mov
cmp
inc
sti
test
xchg
out
faddp
push
iret
std
fldt
dec
fdivp
or
sbb
fucomp
push
movsl
lock
add
inc
mov
lods
pop
inc
or
cmp
or
jae
popa
and
pop
lret
add
mov
mov
jo
sub
cld
stos
or
xchg
aaa
or
dec
or
jne
mov
mov
jbe
sbb
fwait
and
push
out
sub
fldl
adc
dec
push
inc
push
fbld
outsl
xor
sub
repz
add
cmpsl
pop
sub
and
sbb
pop
jmp
sbb
sub
inc
jo
adc
push
or
int
inc
sbb
inc
mov
pop
cld
pop
push
lock
pop
jp
js
jno
pushl
or
testb
adc
mov
mov
xchg
and
mov
jae
inc
lcall
mov
or
dec
add
dec
popa
call
mov
mov
cltd
sti
fxch
mov
lods
jmp
cmp
or
jo
loopne
or
jne
imul
or
sbb
sbb
adc
or
inc
pop
mov
movsb
adc
outsl
push
in
xor
jmp
out
adc
xchg
or
inc
and
inc
xor
sbb
jg
add
push
inc
insb
imul
lret
clc
dec
sbb
imull
inc
dec
gs
popa
lods
mov
jns
sbb
push
lcall
inc
insb
popa
pop
sub
jl
or
inc
imul
bound
test
into
ficomps
nopl
adc
dec
outsl
or
cmpl
mov
dec
cmpsb
dec
outsb
insb
jns
jp
adc
scas
mov
pop
sbb
and
ss
push
mov
je
or
jb
or
ss
aam
mulb
fs
gs
es
xchg
test
or
mov
pop
add
dec
jg
ret
mov
add
ja
dec
cmp
xor
sbb
fidivs
or
dec
gs
lret
sahf
xor
insb
fldcw
and
inc
jne
mov
or
popa
pop
adcl
inc
jbe
pushf
or
mov
lds
lea
push
frstor
out
cmp
add
shrb
pop
in
inc
pop
xchg
mov
in
inc
popf
and
pop
cmpsl
inc
bound
xchg
mov
mov
dec
adc
xor
mov
adc
adc
outsb
mov
scas
cs
xor
ds
or
cs
cld
scas
add
ds
pop
adc
inc
pop
add
scas
pop
iret
adc
sbbl
pop
test
inc
sbb
nop
or
adcl
or
mov
push
jb
into
dec
imul
shrb
inc
imul
or
scas
fisubrl
pop
js
and
cltd
dec
addb
jo
push
mov
aam
aas
sub
test
cwtl
pushf
sub
push
nop
jb
or
adc
inc
dec
adcl
aad
jno
adc
pop
nop
mov
je
xchg
xor
jbe
push
mov
inc
sahf
push
add
xchg
xor
hlt
hlt
and
and
pop
inc
sarl
aas
mov
xor
pop
fcmovb
adc
cmpsl
int3
pop
repz
lods
push
mov
pop
loope
insl
xor
push
cmp
push
add
push
or
sbb
aas
mov
jae
add
jnp
out
pop
and
and
sbb
pusha
or
arpl
or
adc
int3
icebp
jbe
or
incl
or
add
fdivrl
nop
sbb
push
xlat
lea
mov
push
add
aas
add
and
adc
adc
mov
dec
mov
xor
notl
push
nop
cld
sub
cmovns
jae
fs
jo
test
pushl
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
or
cmp
into
jl
mov
push
sbb
xor
sbbb
push
sbb
push
mov
mov
inc
insb
inc
push
inc
sti
int3
jle
aas
lock
psubb
push
cmpsl
mov
and
dec
cmpsb
dec
push
shl
mov
pop
jbe
push
lods
inc
pop
or
fldcw
push
js
ss
fmuls
dec
iret
repz
sahf
push
nop
setle
sub
ret
sub
xchg
inc
or
sbb
nop
scas
pop
sbb
roll
add
dec
sbb
arpl
icebp
aaa
lods
aas
jl
notb
inc
xor
sbb
or
xchg
cwtl
dec
inc
push
push
je
into
lock
jl
pop
lock
dec
push
clc
ficomps
fldenv
push
pop
push
rolb
hlt
jbe
dec
cmp
mull
pushf
push
faddl
dec
push
pop
fcoms
clc
es
and
pop
outsb
mov
jle
push
enter
push
mov
pop
popa
add
pop
push
xlat
and
sbb
pinsrw
pop
daa
mov
ja
andl
test
jg
imul
test
pop
push
xor
repz
mov
out
js
mov
mov
fs
push
js
mov
fistpll
push
or
mov
jnp
lods
out
stc
and
mov
add
or
and
and
sbbb
sbb
in
sbbl
lods
pop
pop
push
inc
imul
dec
negw
repnz
sbb
je
divl
pop
add
daa
fiaddl
xor
sbb
jl
mov
add
call
pop
dec
andps
jmp
or
and
jb
adc
pop
jb
pop
sbb
and
add
sub
add
add
in
repz
inc
push
in
fisubs
call
cmp
ret
rolb
popa
outsl
ds
repz
mov
es
sub
cs
mov
movsb
push
ss
pop
aad
loop
rcrb
cmpsl
stc
aam
mov
xchg
out
sub
sbb
cwtl
push
jge
mov
push
cs
inc
mov
aas
cmp
mov
mov
and
add
mov
cwtl
sub
xchg
dec
scas
dec
pop
mov
pop
pop
push
in
and
in
adc
into
ljmp
fwait
int
cmp
pushw
pushf
data16
mov
imull
mov
ds
in
jbe
aam
xchg
divl
push
popa
jo
popa
call
adc
cmpl
jo
icebp
push
js
sbb
xchg
rcrb
cltd
sarb
mov
jno
cmpsb
jecxz
adc
mov
mov
scas
fmuls
mov
fsubrs
jb
xchg
out
lret
inc
cmp
aam
sbb
out
icebp
vhaddps
adc
loop
in
lcall
mov
xchg
pop
inc
int
dec
addb
push
and
sbb
and
or
cmp
ja
js
scas
jns
mov
push
xor
xchg
adc
les
pushf
xchg
inc
push
lods
push
movsb
xchg
jbe
mov
push
mov
fmull
bound
je
and
hlt
std
cld
sti
inc
fisttps
clc
push
push
push
push
push
push
loop
push
call
cmp
jnp
pop
push
pop
je
js
out
iret
addb
adc
jl
pusha
push
dec
xchg
push
or
nop
xlat
pop
and
add
mov
aam
incl
and
mov
or
pop
add
test
push
popa
addr16
loope
rcrb
iret
sarl
push
fdivrl
adc
mov
hlt
dec
push
inc
push
arpl
test
imul
pop
mov
pop
in
ss
push
push
mov
mov
mov
ss
push
and
hlt
inc
add
out
jmp
pop
xorl
sub
je
and
pusha
pop
lods
jp
push
dec
dec
fs
call
or
xlat
adc
popa
sbb
or
jl
test
push
push
in
sbb
leave
out
push
pushf
imul
nop
mov
dec
dec
dec
enter
std
cmpl
jne
add
je
repnz
mov
jne
in
and
push
inc
jb
jne
subb
and
sub
aad
fcmovbe
jae
mov
cmp
add
add
cld
sbb
push
mov
dec
adc
push
sbb
and
bound
imul
add
adc
adc
pop
push
xor
or
mov
pop
mov
rcl
shrb
std
popa
jecxz
add
cld
sub
mov
dec
pop
and
jmp
sbb
adc
jmp
outsb
jecxz
and
cmp
addl
push
fdivrs
ret
ljmp
add
sbb
sbb
cmp
pop
pop
sbb
fiadds
and
sbb
add
add
jo
je
and
or
sbb
xlat
pop
icebp
mov
inc
add
and
sbb
clc
mov
mov
fwait
test
mov
push
fldlg2
sarl
sbb
pop
cmp
loopne
or
sub
inc
jb
or
sub
push
inc
or
add
js
inc
dec
jne
cmp
add
leave
mov
push
adc
mov
push
cld
clc
and
add
and
mov
xchg
loopne
addb
or
jns
push
inc
and
xor
xchg
ret
adc
and
add
add
jo
xchg
popf
lock
mov
aas
dec
cmp
sub
ja
cmp
and
xchg
cmp
ret
sbb
je
sub
cwtl
add
nop
xor
push
push
push
fs
and
rorl
imul
fildll
dec
imul
popl
popa
mov
mov
je
ficoml
mov
and
sbb
imul
pushl
icebp
orb
pop
movsl
and
push
cltd
clc
push
mov
lea
push
icebp
ja,pt
repnz
add
fs
fidivl
inc
clc
mov
cmp
inc
adc
int
xor
inc
stos
scas
repz
push
jl
inc
xor
out
xor
rcll
dec
jne
mov
mov
mov
movl
and
jns
inc
sbb
xor
adc
push
jb
adcl
into
hlt
mov
insl
dec
loopne
xchg
popf
xor
jb
sub
xchg
dec
mov
and
and
clc
cmp
push
pop
jge
cli
dec
aaa
add
add
hlt
sbb
push
adc
jp
xor
xor
loopw
add
shlb
and
inc
lock
jne
and
fldl
push
sbb
xchg
les
mov
outsb
xor
xchg
jl
inc
push
call
mov
out
es
in
cmp
inc
pop
inc
cmpl
fcoml
icebp
cmp
push
sti
push
cmpsb
jecxz
fidivrl
pop
dec
jl
dec
call
rcrb
das
inc
ds
clc
sbb
adc
dec
add
pop
loopne
and
sbb
xor
push
pop
dec
dec
enter
mov
pop
shr
jge
and
int
shrb
mov
xor
xor
pop
cmp
testb
repz
pop
pop
dec
xchg
mov
mov
xchg
sbb
pushf
or
cli
pusha
xchg
enter
cltd
add
cmp
add
add
cmp
data16
mov
adc
mov
arpl
ja
leave
enter
pop
dec
cs
cs
xchg
sub
or
inc
addb
jns
push
fcom
bound
jae
pop
dec
sbb
xchg
pop
push
sub
or
push
and
mov
inc
mov
push
mov
imul
das
das
push
cli
mov
dec
sub
add
add
mov
push
rol
push
mov
lcall
jecxz
popl
xchg
cmc
in
lods
idiv
lods
das
mov
xor
mov
push
adc
das
cmp
imul
adc
jbe
mov
ret
xor
test
add
sub
xor
stc
push
pop
add
mov
sbb
sbb
mov
mov
cmp
xor
sbb
sbb
push
je
mov
insb
cmp
add
shrl
xorb
mov
sbb
add
inc
xchg
sub
push
enter
lods
xor
dec
jb
and
and
pop
test
sbb
or
mov
nop
inc
jno
dec
scas
fnsave
xor
dec
push
adc
aas
xor
or
mov
rol
loope
ss
addr16
icebp
and
or
or
and
sub
in
cmp
cmp
aaa
jo,pn
pop
xchg
mov
outsl
mov
fwait
push
cld
cmp
shlb
leave
or
pop
popa
and
stos
add
mov
or
mov
jbe
mov
js
js
mov
imul
ret
cs
aam
sub
outsb
loop
aam
pop
scas
add
mov
pop
dec
cld
mov
pop
adc
mov
mov
in
inc
lret
jp
test
sbbl
js
add
xchg
sbb
movsb
divl
out
add
xchg
mov
sbb
pusha
faddl
sub
push
mov
or
mov
dec
insl
and
mov
push
mov
jae
or
cmp
cwtl
loope
mov
pop
ud2
adc
mov
subl
xor
dec
cmpsl
adc
jg
add
hlt
out
clc
jmp
inc
push
sahf
push
mov
inc
push
popf
push
pop
xchg
lea
inc
dec
dec
xchg
dec
push
pop
mov
int3
sbb
js
jnp
inc
jbe
shlb
sbb
pop
ficomps
cmp
dec
mov
mov
or
sbb
sub
test
loope
test
dec
nop
sahf
mov
or
xlat
popf
push
mov
mov
inc
xlat
insb
mov
roll
pop
cmpb
push
push
xor
sub
and
mov
push
or
cwtl
andl
test
adc
cs
insl
arpl
dec
sbb
pop
pop
ss
push
aas
xor
cmp
cmp
pop
cmp
clc
je
mov
lods
ret
adc
cmp
push
pop
aas
je
les
cld
pop
jbe
pop
or
in
add
and
popa
ss
addr16
mov
sbb
fnsave
xchg
sbb
and
arpl
cmp
mov
ss
sub
push
ja
sti
push
push
push
push
push
and
jmp
sbb
cmp
sbb
push
insl
mov
adc
js
fists
mov
or
push
jae
loop
inc
aas
ljmp
incl
or
leave
fisubl
xor
sbb
mov
add
dec
adc
dec
mov
pusha
scas
movsl
int
mov
cwtl
cmp
stos
addr16
cld
shlb
xchg
mov
jp
dec
inc
fucomp
sbb
shl
loop
adc
or
fisttpll
mov
mov
icebp
sub
add
push
mov
sar
push
mov
stos
sbb
adc
cwtl
cmp
aaa
jmp
and
jae
cmpb
les
push
repnz
cmpsl
into
test
cld
xchg
ret
dec
filds
and
xor
xor
sbb
push
sbb
fmuls
or
mov
adc
or
push
xchg
xor
jmp
inc
sub
rcl
scas
sub
add
aaa
dec
clc
inc
cmp
jge
add
adc
jne
sbb
scas
push
rcll
std
jle
andl
jae
or
or
and
mov
inc
add
pop
lods
ljmp
test
mov
inc
fmulp
shlb
call
mov
xor
inc
nop
pop
scas
xor
enter
sbb
push
clc
xchg
movsl
inc
dec
ss
pop
scas
dec
test
shl
xchg
push
pushf
mov
and
mov
enter
lock
xor
or
sbb
or
or
add
sarb
mov
sub
jg
dec
hlt
or
es
dec
dec
inc
mov
mov
outsl
out
jne
adc
inc
pop
inc
mov
mov
stc
add
mov
sub
jbe
addl
mov
push
out
jbe
ja
push
inc
mov
or
in
pop
dec
jo
das
mov
or
dec
fs
cmpb
mov
xchg
inc
jne
sub
jmp
dec
add
add
repnz
push
sahf
or
or
push
sub
inc
movsl
pop
das
rcll
mov
mov
lds
bound
leave
pop
testl
inc
scas
mov
je
add
cmp
jbe
rcr
mov
js
test
jge
mov
in
cmp
dec
stc
pop
sar
mov
shl
pop
int3
lods
dec
sbb
call
out
je
inc
xor
dec
sbb
mov
push
mov
push
xor
or
mov
push
inc
mov
or
mov
fcmovnbe
adc
add
jmp
fsubs
fcomps
cld
pop
and
push
add
cmovp
sarb
stos
adc
btr
push
add
mov
jl
push
inc
adc
or
add
fidivl
fadds
add
adc
dec
testl
orb
xor
enter
test
cli
pop
ja
and
bt
jb
mov
xor
ja
dec
pop
cmpsl
mov
hlt
ret
jmp
dec
sbb
incl
and
inc
decl
jne
les
nop
das
push
xchg
aaa
xor
add
add
insb
xor
ret
imul
xchg
inc
shrb
sbb
inc
push
cltd
cwtl
sbb
fs
add
lret
aas
add
lock
enter
test
scas
adc
shlb
cmp
pop
pop
ret
mov
add
dec
jno
add
insb
add
les
sub
or
aad
sbb
popa
jg
mov
mov
popa
in
insb
insb
and
sbb
orl
mov
pushl
js
imul
fcoml
test
outsl
add
pop
push
fiadds
mov
add
add
test
xor
pop
adc
xor
inc
mov
sbb
xor
or
pop
add
jmp
aas
or
ret
pop
push
insl
xor
push
and
sbb
outsb
fldenv
mov
dec
or
aam
out
mov
jle
push
dec
and
es
or
dec
dec
repz
jnp
add
sub
cmp
cmp
outsb
and
and
popa
adc
int
push
ret
pusha
andl
add
mov
int3
pop
ds
dec
and
ds
mov
xchg
out
pop
inc
iret
xor
sub
xor
shr
icebp
lock
or
sub
call
fiadds
mov
mov
mov
mov
lea
cmc
in
inc
xor
mov
adc
adc
xor
inc
xor
sbb
imul
add
mov
mov
pop
lcall
adc
pop
push
push
jo
fcmovbe
add
inc
add
inc
pop
cmc
xchg
lds
hlt
cs
mov
aaa
mov
sbb
or
sub
ja
mov
dec
clc
ror
and
add
adc
jecxz
add
movsb
lahf
sub
inc
sbb
lea
and
push
push
dec
push
and
adc
mov
imull
adc
lods
lret
push
mov
dec
rorl
jae
dec
sub
add
and
popa
inc
mov
mov
ficoml
fdivrs
xchg
mov
lock
pop
in
push
in
sbb
out
sbb
fs
inc
shll
push
add
out
sbb
pop
enter
scas
sbb
cmc
xor
stos
inc
iret
lds
inc
xchg
in
inc
cmpsl
loopne
lea
lock
insb
add
ss
dec
outsl
mov
xchg
xchg
sbb
stos
stos
mov
mov
aad
movsb
mov
and
and
push
enter
inc
out
std
push
imul
push
jbe
out
xchg
mov
inc
sbb
sub
push
leave
or
mov
dec
inc
or
cmp
mov
loopne
pop
push
cmpsl
or
test
add
pop
fstpt
inc
add
jne
xor
xchg
sbbb
fldt
loopne
push
dec
in
push
push
mov
lret
dec
xor
in
movsl
lods
in
fwait
pop
call
stos
lcall
adc
push
in
in
and
ret
mov
bound
mov
pop
xchg
xor
jno
xchg
cld
or
test
jl
insb
stos
push
lods
hlt
xor
adc
dec
cld
lcall
and
fsubl
add
push
sarl
testl
aas
sub
cmp
call
pop
enter
addr16
add
lret
imul
or
or
push
inc
push
dec
adc
add
mov
and
jle
into
cmpsl
push
pop
sub
sub
mov
test
jne
xchg
nop
loope
push
into
dec
les
outsb
mov
jecxz
sub
shll
out
cmp
sub
or
loope
orl
push
or
outsl
es
loopne
mov
sbb
xor
pushf
cmpsl
or
pop
xlat
test
mov
and
add
insb
mov
jb
mov
clc
fiaddl
repnz
sub
aas
cld
push
jmp
sub
sti
test
in
into
push
push
xchg
or
and
mov
movsl
pop
xor
pop
clc
pusha
xor
add
pop
in
xlat
andb
clc
add
pop
lods
bound
dec
push
add
leave
adc
in
push
and
cli
pop
cmp
loope
adc
lcall
and
jmp
sub
clc
data16
mov
loopne
pop
push
jae
add
lahf
and
lds
dec
int
scas
iret
dec
mov
das
push
ds
inc
mov
dec
js
xchg
fisttps
jns
and
sbb
mov
mov
inc
dec
orb
or
inc
add
cmpsb
xorb
addr16
insl
pop
push
test
das
repnz
dec
das
andb
add
mov
push
pop
icebp
or
or
leave
mov
dec
std
les
mov
sbb
dec
sub
sbb
jmp
fsubs
pop
mov
mov
or
add
lret
sub
dec
fldcw
std
cmpb
jne
nop
inc
hlt
movsl
or
add
int
dec
jecxz
and
xchg
mov
dec
dec
dec
xor
pop
sub
lea
rcll
sbb
sub
xchg
inc
or
push
dec
mov
imul
cmp
inc
js
inc
pop
aas
cmp
mov
sti
pop
jne
testb
orb
sbb
adc
out
sbb
lcall
aad
icebp
add
adc
daa
cmc
faddl
cmp
mov
aam
adc
mov
mov
push
pop
cs
cmp
cld
inc
sub
subb
adc
cs
loope
stos
xchg
mov
push
push
ror
sbb
sbb
mov
fiaddl
jmp
mov
leave
lods
loope
and
in
mov
mov
lods
pop
sbb
sti
pop
data16
and
rcrb
and
sub
movsl
cmp
sbb
dec
xchg
fildl
mov
lret
in
dec
adc
inc
ret
or
int3
push
addb
dec
cmpsb
pop
adc
test
lea
cmp
inc
stos
outsb
ja
addl
inc
lock
movsl
rol
and
sbb
push
jnp
negb
sub
mov
aas
pop
cld
lock
or
rorb
mov
mov
sub
pop
add
or
arpl
pop
ds
cltd
ficoml
outsl
outsl
popa
xor
je
jg
mov
jmp
add
aam
pop
mov
jge
lea
jmp
loope
stos
scas
dec
adc
adc
add
ret
jbe
jge
shll
xor
fiadds
adc
adc
inc
lds
sbb
ret
aas
das
add
xchg
mov
push
mov
lret
leave
fwait
das
repnz
movb
mov
mov
pop
push
xor
ret
adc
mov
mov
xor
push
mov
shll
imull
dec
or
sub
xor
cli
inc
pop
test
or
pop
sub
scas
add
pusha
mov
ljmp
popa
mov
lea
push
bt
nop
and
inc
add
fidivrs
xor
jl
push
adc
mov
mov
dec
in
jl
adcl
pop
loopne
jo
add
inc
hlt
shr
rorl
cmp
mov
insb
and
and
arpl
jl
fcomi
jg
and
add
cmp
jne
inc
jge
sbb
jle
and
ficompl
mov
pusha
hlt
jl
xor
xchg
pop
add
add
sbb
je
lcall
nop
add
sbb
add
loope
push
dec
and
addr16
clc
lret
mov
stos
enter
je
fstpl
cmp
push
jge
inc
outsb
shrb
add
push
add
or
add
out
adc
push
and
cs
add
out
mov
push
adc
les
sbb
fs
pop
daa
mov
dec
addr16
in
es
sbb
push
insl
ret
jno
jl
scas
add
add
call
subb
test
pop
pusha
xchg
movl
movsb
xor
or
jge
xorb
add
mov
jb
sbb
pop
mov
add
lods
jo
mov
mov
add
jecxz
cmpsl
icebp
mov
add
mov
cmpsl
mov
and
pmulhw
and
pop
xchg
out
testl
xchg
cs
or
call
mov
xchg
xor
sbb
add
out
jne
sbb
inc
aam
cltd
mov
jo
jne
cld
mov
adc
xor
push
out
inc
les
aaa
sub
mov
jecxz
ret
or
and
lret
mov
insl
arpl
mov
inc
dec
into
lea
lock
mov
mov
testl
in
enter
or
rol
dec
pcmpeqd
popf
sub
in
sbb
adc
imul
pusha
or
popa
rorb
icebp
or
faddp
repz
sti
add
add
jbe
or
sbb
or
cwtl
sbb
or
cmp
add
bound
add
in
in
jmp
and
xor
mov
adc
dec
inc
shrd
sub
push
mov
mov
mov
les
push
and
pop
mov
bound
leave
icebp
add
mov
push
inc
dec
inc
push
int3
fs
lods
lcall
add
sbb
popa
fs
mov
mov
aam
and
sbb
test
push
decl
lret
mov
loopne
cltd
xorl
dec
out
lods
push
and
scas
sub
push
scas
jg
clc
jle
xchg
or
or
shlb
lds
test
stc
adc
ret
fwait
xlat
sbb
sbb
in
icebp
fld
dec
inc
push
jmp
pop
push
lods
dec
pop
andw
pop
cmpsb
inc
jb
adc
sub
dec
ss
lods
push
fiadds
pushf
sub
and
fbld
push
fwait
mov
repz
in
add
adc
arpl
pop
enter
jno
jge
enter
test
xorb
lods
sbb
xchg
fsubrl
inc
jb
pop
or
add
data16
cmova
add
aam
adc
faddl
pop
sub
jbe
inc
xchg
jo
cmp
je
or
into
iret
jae
rcl
daa
mov
add
xor
jb
je
dec
or
adc
add
or
hlt
outsl
mov
clc
xchg
add
out
dec
dec
xlat
pop
pop
adc
icebp
js
lcall
pop
ficoms
cmp
xchg
inc
add
cmp
and
idivl
or
shlb
imul
xlat
add
nop
mov
idivl
pop
loopne
fs
sbb
push
loopne
lret
pop
cmp
lcall
rorb
add
mov
ret
or
inc
and
sti
je
or
leave
js
jne
pop
inc
rclb
sahf
inc
loopne
movsb
sub
push
push
lods
xchg
adc
xor
daa
or
sub
ds
in
inc
sbb
shrl
bound
cmp
push
ficoml
mov
cmp
xor
add
or
push
add
sub
jnp
jle
or
dec
mov
adc
xlat
test
stos
mov
and
rol
sub
filds
dec
mov
inc
pop
out
into
inc
jo
mov
inc
imul
add
mov
enter
xchg
popa
pop
cwtl
or
nop
add
push
insb
pop
rcl
push
pop
fisttpll
mov
bound
add
movsb
mov
ds
lahf
sbb
lock
adc
sbb
push
ss
lock
je
mov
subl
out
adc
loope
mov
pop
adc
pop
sub
adcl
es
fcmovu
mov
mov
inc
sbb
jmp
dec
das
pusha
test
push
push
adcb
test
stos
inc
adc
ret
rcrb
xchg
ficomps
and
pusha
mov
add
adc
adc
lret
or
outsl
jo
imul
mov
outsb
das
pusha
out
je
add
sub
mov
xchg
nop
push
mov
or
add
inc
adc
inc
sub
cmpsb
or
or
inc
enter
int
adc
or
bound
sbb
ja
fidivs
lods
jne,pn
sbb
mov
sub
mov
lea
xor
test
push
inc
sbb
jnp
mov
jge
xor
inc
or
pop
test
or
push
mov
jae
cmc
loopne
test
stos
mov
add
add
push
aaa
push
fadds
jp
movb
mov
stos
roll
fidivs
and
daa
xchg
jp
inc
xchg
aam
scas
mov
pop
enter
bound
in
inc
jecxz
aaa
fisubl
jmp
mov
jmp
push
fsubr
add
scas
jnp
fsubrs
inc
xchg
adc
inc
bound
adc
mull
outsl
fldt
stos
xchg
mulb
dec
call
or
pop
out
and
rorl
lahf
int
psubw
xor
or
inc
daa
dec
xchg
outsl
pop
jo
mov
mov
xchg
cld
xchg
xor
fs
out
add
je
gs
fs
xor
js
xchg
mov
lods
push
in
dec
and
inc
add
and
mov
repz
popf
ds
hlt
ss
sub
cmpsb
xor
sub
inc
push
push
jl
je
popa
or
aas
das
push
inc
pop
fwait
cli
data16
xchg
jmp
aaa
jl
inc
cmp
jl
or
sub
and
arpl
jmp
icebp
or
adc
and
sbb
inc
inc
jb
sbb
sub
popa
xor
dec
fs
sbb
arpl
hlt
mov
push
faddl
cmp
xor
or
js
or
das
inc
out
cmp
ret
lock
inc
pop
cmp
mov
adc
adc
inc
jo
add
mov
add
adcb
je
inc
xchg
push
mov
dec
sub
add
enter
xlat
lcall
fisttps
mov
pop
push
loop
pop
xchg
and
gs
or
mov
mov
mov
add
jg
lahf
cmp
popa
adc
js
loope
xor
dec
adc
dec
repnz
inc
clc
jo
fnsave
cmp
xchg
dec
out
mov
dec
adc
jbe
ret
mov
xchg
push
jo
pop
cli
mov
data16
push
inc
adc
push
stos
cs
loopne
jo
cmpsl
cwtl
mov
adc
mov
ret
mov
mov
adc
ds
cmp
sbb
dec
sbb
add
movb
adc
add
xchg
mov
adc
inc
hlt
mov
std
rcrb
sti
fisttpll
je
hlt
sbb
test
in
pop
fs
ror
sub
aas
arpl
push
inc
pop
rcr
pop
int3
push
xor
das
loopne
lret
call
add
lea
cmpsl
inc
inc
push
inc
out
loope
mov
sub
lods
popf
inc
cmp
sbb
and
jnp
not
mov
push
xor
cmp
fstps
pop
rcll
clc
flds
or
fildl
cmpsb
std
cmp
jne
push
or
jne
add
repnz
inc
mov
push
pop
not
inc
jle
mov
ret
push
push
cmp
xlat
subb
xor
mov
mov
sbb
ret
fcomps
mov
mov
dec
sbb
clc
pop
js
arpl
pop
jbe
push
xor
xchg
mov
sub
mov
adc
xor
leave
xor
mov
inc
loop
nop
rclb
sahf
sbb
xchg
mov
sarb
adc
jae
imul
je
mov
in
mov
adc
dec
outsb
jmp
je
arpl
xlat
es
jne
pop
fnstsw
xor
pop
pop
cltd
hlt
rol
ss
lods
mov
jmp
scas
pop
cmp
sahf
mov
mov
dec
xchg
push
push
xchg
pop
pop
sbb
ficoml
cmp
test
out
jle
dec
jne
jp
lods
cmp
jne,pn
jge
scas
pop
cli
fsubrl
mov
mov
or
sbb
mov
out
inc
call
xor
adc
ret
jge
mov
jecxz
push
sar
push
dec
dec
jbe
mov
adcb
ja
mov
lock
sbbb
cmp
dec
or
cmpsb
fsts
lret
jp
test
xor
dec
mov
pop
cld
cmpb
inc
mov
pop
adc
pusha
mov
jge
dec
add
pop
sub
lret
mov
and
xor
imul
aaa
inc
imul
ret
dec
cltd
adc
mov
dec
jle
push
mov
or
ret
into
imul
ret
std
je
out
sub
jne
xchg
clc
inc
or
lods
mov
dec
add
data16
push
sbb
jmp
push
inc
mov
loopne
mov
cmp
les
xlat
or
pop
aam
ss
lods
and
in
icebp
dec
pop
ss
sbb
daa
outsl
adc
and
mov
xor
aas
ret
imul
js
shll
sbbb
je
mov
jns
inc
inc
subb
mov
pop
push
pop
inc
and
mov
push
cmpsl
and
mov
lahf
or
pop
add
jge
add
cmp
mov
or
pushf
fs
xor
fdivr
ss
shlb
sub
int3
ret
xor
or
dec
xchg
mov
xorl
add
pop
cwtl
dec
subl
jecxz
dec
fistpll
nop
in
sbb
push
mov
xchg
stos
pop
push
popf
lock
js
cmpl
cld
sub
or
push
data16
jle
int3
outsl
scas
test
lods
rorl
or
sub
push
gs
xchg
int
xchg
jo
imul
adc
mov
xchg
in
add
into
xor
fs
lahf
jbe
push
sub
push
pop
mov
dec
sbb
adc
addl
ret
ss
dec
sub
lret
pop
ret
ja
pop
inc
insl
pushf
cmpsb
push
das
in
out
jb
push
and
in
repz
sbb
das
addb
pop
enter
sub
cmp
clc
lds
jmp
in
xor
inc
mulb
aam
adc
adc
xchg
or
jne
in
adc
and
cmpsb
nop
jo
sub
cmp
xor
daa
mov
pop
ficoml
jp
sub
inc
sub
dec
sub
xchg
daa
fcomps
add
xorl
sbb
and
xor
imul
in
pop
jmp
sbb
sbb
fcomps
mov
push
test
mov
push
notb
arpl
sbb
in
pop
jmp
pop
cmp
ss
lahf
shrb
inc
jb
mov
sbb
add
enter
pop
andl
popf
jne
pop
dec
cmp
mov
add
add
mov
sbb
xchg
adc
fwait
add
mov
mov
adc
pusha
sbb
push
xor
mov
lcall
cmp
push
stc
adc
xchg
sub
xor
mov
adc
xchg
mov
scas
and
scas
ja
lods
add
and
pushf
pop
int
sub
fsubs
test
mov
dec
in
adc
pop
pop
ret
dec
sarb
call
add
aad
mov
jle
sub
arpl
pop
mov
xchg
push
cmp
pop
fbstp
xor
xlat
pop
out
daa
mov
nopl
mov
pop
ljmp
test
lcall
sub
je
jno
jns
cld
imul
jge
popa
sub
xor
pusha
nop
cmpsb
repnz
stc
or
shlb
clc
cld
hlt
sub
push
insl
xchg
xchg
in
push
add
jbe
int
pusha
les
aam
xchg
sbb
or
or
fildll
push
rcrb
cmp
cs
mov
hlt
out
cmp
or
sbb
and
iret
flds
lock
in
or
or
mov
rcrb
xchg
fbld
bound
and
xchg
fldl
add
cmpsw
mov
sahf
das
add
ja
jne
popa
mov
add
or
and
cmp
jnp
adc
in
jns
lods
mov
repz
incb
xor
shlb
jmp
xor
mov
cmp
in
in
das
sbb
jbe
sbb
xor
cmp
and
pop
stos
or
inc
jne
inc
pop
add
iret
cmp
popa
push
dec
xchg
sub
mov
push
and
ss
rcl
jmp
fcomps
mov
push
mov
mov
mov
dec
cmpsl
int3
mov
and
cmp
ret
xor
mov
push
cltd
mov
push
movsl
fwait
out
push
mov
adc
inc
add
push
mov
shl
outsl
mov
jne
mov
push
adcl
push
mov
jno
xchg
and
xor
inc
sbb
and
add
daa
out
adc
dec
add
mov
jne
sbb
arpl
notl
push
push
fsub
mov
pop
jmp
pop
and
mov
test
or
arpl
stos
and
dec
mov
rclb
enter
sbb
out
idivl
daa
jo
push
stc
sbb
es
xor
int
add
pop
mov
mov
xor
shr
test
adc
or
push
dec
or
cmpb
jne
xor
push
or
mov
insl
xor
inc
imul
push
cld
div
icebp
jnp
jp
push
xchg
std
pop
enter
xor
mov
pop
cmpb
or
shrb
push
cmp
mov
orps
fwait
push
jmp
or
lock
rclb
jl
enter
add
shrl
xor
xor
sbb
add
jl
push
packuswb
pop
adc
pop
out
mov
out
js
push
fisttpl
adc
jnp
lret
xchg
pop
jp
cmp
movsl
xlat
std
mov
add
pushf
cmp
pop
gs
popf
call
rorb
imul
stos
cmpsl
test
gs
nop
push
sahf
adc
je
push
xchg
sarb
xor
cmpb
sbb
and
sbb
add
jl
in
xor
xorl
repz
pop
popa
out
mov
add
or
dec
pusha
sub
add
pop
add
pop
mov
adc
clc
jge
shrl
sub
dec
clc
out
in
dec
repnz
lds
orb
jecxz
jo
add
sbb
mov
jle
inc
cmp
daa
add
add
clc
std
dec
imul
mov
push
stc
subl
jnp
sub
xchg
fsubl
push
add
inc
sbbb
jle
daa
fs
jo
ror
pop
nop
jns
testl
ret
jns
ljmp
push
outsb
xchg
xor
enterw
movsb
lea
pop
js
aaa
cmpsb
in
sahf
xorb
ret
cmp
js
or
mov
mov
push
repnz
fdivl
bound
jb
sub
mov
in
cli
sub
addb
lret
sbb
cmp
xchg
sbb
fisubrs
xor
cs
rolb
sbb
in
rcr
dec
insb
pop
or
fwait
inc
cmp
mov
and
aam
cmp
subb
test
call
aaa
pop
fidivrl
push
fildll
inc
fistl
aas
call
jmp
into
jle
inc
push
adc
fadd
loopne
jo
xlat
lahf
dec
int3
add
push
outsl
ret
add
dec
dec
pop
jmp
inc
push
jge
pop
sbb
mov
add
test
adc
jg
jnp
inc
addr16
orb
cwtl
mov
and
imul
aam
rcr
adc
fcompp
push
clc
xor
dec
xorb
push
inc
lret
sub
xchg
mov
addl
sti
cmp
inc
sbb
out
mov
call
lods
jle
jnp
add
jmp
pop
lcall
hlt
mov
mov
daa
jmp
sub
lar
shl
mov
inc
nop
out
rcl
sbbl
jo
dec
sbbb
ror
loopne
sbb
xchg
lcall
dec
addb
outsb
mov
jmp
gs
cmp
mov
sbb
jecxz
adc
or
dec
pop
lds
xchg
cmpsb
adc
dec
rorb
mov
or
and
arpl
fmull
je
add
int
xor
adcl
push
orl
mov
mov
aam
clc
into
mov
push
fistps
dec
je
or
jecxz
or
shrl
adc
inc
cld
out
fsubrs
insl
daa
pop
rol
out
pop
clc
push
insb
lods
test
add
xchg
iret
popa
and
push
adc
add
leave
mov
pusha
adcb
or
in
fstl
xor
xor
ret
cmp
lods
sub
and
loope
inc
sbb
fwait
dec
push
in
lock
loopne
stos
ret
jmp
lds
push
mov
xor
fimuls
aad
cmp
dec
out
mov
ret
push
push
push
sub
pop
sbb
dec
imulb
test
push
or
jne
test
mov
pop
jmp
notl
push
je
push
push
and
adc
mov
inc
pop
idiv
fld
xchg
fwait
adc
xchg
jmp
jb
repnz
inc
divl
test
cmp
jg
iret
push
lock
push
inc
inc
int3
out
aas
pop
rcrl
je
jo
push
shr
push
inc
cmp
ds
dec
cmpl
push
dec
xchg
cmp
mov
adc
dec
jl
and
or
ja
add
aaa
addr16
push
cmp
lock
dec
push
sbbl
push
outsl
out
ret
cld
test
add
add
adc
pop
inc
lahf
mov
and
loope
insl
and
scas
shll
dec
pusha
sbb
mov
les
pusha
repz
pop
xor
scas
inc
cmp
mov
mov
sub
dec
repz
arpl
push
enter
inc
ds
in
adc
leave
repz
cmp
dec
pop
loopne
sahf
out
jl
cltd
jmp
insb
mov
pop
mov
adc
add
push
dec
mov
ret
mov
pop
jne
pop
xchg
je
jbe
insl
das
pop
push
adc
push
lds
sbb
por
or
mov
xchg
sbb
or
sub
or
xchg
add
mov
mov
and
ja
push
enter
test
sub
mov
pop
movsb
sbb
adc
mov
xor
enter
jmp
cmp
pop
fldcw
orl
mov
sbb
dec
inc
push
aad
adc
out
jae
jb
adc
popf
repnz
es
inc
add
cmc
mov
mov
call
cmp
jge
mov
gs
push
adc
jg
sbbl
push
inc
pop
add
bound
aam
xlat
dec
rorb
fists
clc
clc
inc
push
mov
mov
mov
shlb
inc
call
jmp
jo
xchg
ret
sbb
or
in
or
pop
movsb
pop
cmpsb
sbb
push
xor
push
inc
sbb
lea
dec
lret
push
andl
pop
test
sarl
mov
add
mov
add
sub
jle,pn
cmp
inc
mov
sub
push
insb
psubsb
js
pop
pop
loope
jns
add
cwtl
je
in
adc
xorb
mov
lock
cli
or
inc
cld
or
add
adc
inc
out
jmp
repz
ror
negl
or
out
fidivrl
pop
ret
clc
clc
mov
cmp
inc
loopne
sahf
sbb
and
mov
or
jg
inc
shl
and
xor
ret
orb
rorb
inc
push
mov
stc
dec
call
sbb
das
mov
mov
mov
or
inc
pop
sub
aas
sbb
xor
mov
xchg
mov
popf
fistpll
jbe
lret
repz
add
xor
fsubrs
iret
icebp
mov
pop
cs
out
out
dec
push
pop
push
jo
ficoms
or
enter
repz
movsbl
mov
xor
or
and
adcb
add
push
xor
pushf
push
add
jb
xchg
in
push
sub
mov
push
clc
xor
in
xor
jmp
mov
out
outsb
xchg
insl
adc
in
add
push
daa
sub
sti
sub
inc
push
mov
jb
pop
insb
mov
adc
push
dec
jmp
adc
jae
cmp
orb
cmp
iret
fwait
out
mov
dec
or
dec
clc
cmc
loopew
jle
sbb
sub
push
xor
mov
add
cmp
xchg
mov
pop
ret
int3
mov
roll
cmp
data16
mov
pushf
inc
mov
and
iret
adc
jge
jle
jl
or
sbb
pop
xor
jle
out
xchg
add
or
ds
jl
adc
in
push
xchg
xor
mov
push
add
insl
dec
xor
add
add
in
rclb
adc
fstp
outsl
mov
xor
aas
add
mov
xchg
fcompl
xchg
or
movsl
sarl
orps
push
aaa
or
stos
sub
cltd
inc
xor
scas
sbb
adc
mov
and
pop
ss
sbb
push
mov
sbb
pop
rcrl
push
sub
adc
xchg
push
mov
mov
or
xor
or
jg
or
xor
fstl
sbb
push
ds
pop
addb
pop
inc
aas
adc
je
add
daa
add
sub
jns
dec
and
xor
push
jbe
and
mov
mov
andb
daa
xor
dec
cmp
push
push
push
cmp
xchg
int3
xchg
jg
imul
mov
rolb
loopne
pop
dec
sbb
cwtl
and
mov
in
sbb
mov
or
cmp
in
mov
mov
mov
xchg
cmpb
jl
outsl
adc
push
dec
jl
imul
ret
adcl
jecxz
mov
mov
insb
mov
clc
and
add
and
pop
add
into
add
cmpb
pop
arpl
and
jle
or
mov
pop
adc
nop
xor
add
adc
lea
loopne
repz
adc
movsb
imul
pop
mov
push
ret
cmpb
ret
ds
std
pop
dec
leave
fdivrl
jnp
cmp
je
add
sahf
add
mov
sbb
xor
or
test
sti
mov
sbb
dec
sbb
xchg
push
sbb
mov
jp
sbb
xchg
daa
sbb
mov
sbb
repnz
push
sbb
jmp
adc
adc
mov
add
sub
push
jmp
orb
adc
adc
call
add
add
enter
inc
sub
inc
mov
movsl
jnp
testb
incb
mov
pop
ds
sub
dec
int3
enter
icebp
fmuls
clc
cwtl
movsl
popa
push
fsubs
outsl
aaa
or
clc
aam
add
mov
out
adc
inc
sbb
call
xchg
shlb
fstpt
jo
les
sub
pop
pop
scas
adc
sub
dec
xor
dec
or
inc
push
xor
mov
loope
adc
and
adc
or
and
movl
push
or
dec
lock
adc
aad
je
out
push
inc
dec
jp
and
adc
xor
cmp
jl
add
mov
mov
sahf
data16
and
or
xor
xorl
push
xchg
push
setne
mov
jb
push
inc
test
gs
sbb
dec
xchg
lock
dec
gs
je
outsl
jo
cmpsl
or
filds
pop
fcomps
inc
inc
dec
out
cs
pop
inc
notl
arpl
shr
in
decb
int3
xchg
mov
addb
filds
add
arpl
jne
jg
mov
jne
cmp
sub
icebp
pop
add
xor
call
flds
jae
dec
hlt
dec
in
pop
sub
pop
sub
dec
mov
sbb
je
push
adc
xchg
xchg
or
addr16
nop
pop
ret
ret
rolb
jno
lea
lds
cmpl
sub
push
sub
xor
sbb
pushf
inc
aad
imul
loopne
arpl
inc
dec
jne
in
mov
add
ret
pop
and
sbb
clc
fsubrs
dec
push
enter
jle
mov
addb
lcall
sbb
jmp
sbb
dec
aad
popa
mov
adc
call
add
pop
addb
sbb
mov
inc
sbb
xlat
leave
aas
cmp
dec
inc
les
push
add
dec
fs
push
outsb
movsb
fistpl
movsb
jge
cmp
jg
push
dec
cmp
rcr
pop
push
xlat
xor
xor
pop
xlat
je
add
mov
ficoms
jmp
or
sbb
andb
jl
pop
leave
sbb
add
lods
sbb
and
jo
popf
mov
ret
sbb
add
ja
repnz
les
idivl
faddl
out
mov
jmp
sbb
add
pop
add
in
push
or
inc
sarb
sub
and
cmp
and
xchg
clc
les
outsl
sub
and
aaa
sub
fcmovbe
xchg
jge
jne
es
and
loopne
push
pop
rorb
or
inc
and
jle
addr16
add
or
mov
scas
aas
or
dec
dec
pop
roll
push
cmpsl
adc
cmovs
call
aam
daa
lock
or
lock
mov
jle
xchg
mov
out
fistpll
cmp
je
int
repz
cmpsl
mov
sub
adc
mov
fisttps
add
add
dec
adc
inc
or
movsb
add
push
inc
xor
je
xlat
insl
jmp
js
mov
sbb
push
or
inc
pop
out
inc
push
pop
mov
dec
das
ror
sub
rcll
xchg
pushf
or
ja
lcall
push
sub
stos
adc
arpl
repnz
pop
xchg
xor
adc
pop
or
dec
cmp
inc
mov
inc
je
dec
push
out
add
adc
xlat
sub
imul
mov
mov
sub
and
cmpsl
bound
int3
xor
push
dec
adc
or
test
sbb
sub
fsubrp
sbb
lret
cmp
jne
pop
adc
cwtl
pusha
scas
mov
xor
int3
inc
sub
push
pop
sub
mov
sub
rcl
or
cwtl
mov
inc
adc
nop
mov
and
popw
inc
jle
and
adc
and
sbb
daa
and
xchg
lahf
adc
outsb
cld
btc
add
xorb
mov
ds
dec
adc
xor
mov
imul
int
cli
repnz
dec
orb
faddl
jle
add
adc
sbb
pop
adc
mov
ficompl
dec
jle
sti
add
add
inc
lret
and
fs
push
or
ret
cmpsl
add
mov
sbb
pop
sti
pop
push
or
popa
lahf
jge
pop
xlat
jp
loope
adc
movsb
loope
hlt
push
adc
lcall
lret
incl
enter
cmpsl
shr
movsl
mov
movl
push
adc
movl
rclb
or
in
push
xchg
push
lea
jg
adc
add
hlt
add
adc
mov
xor
sti
or
jne
dec
nop
aad
cmp
jg
or
mov
adc
mov
inc
hlt
jle
mov
cld
stos
pushf
add
jo
or
fwait
and
mov
aam
add
scas
xchg
dec
lock
sbb
push
in
js
fcompl
mov
dec
sbb
or
out
add
cld
popf
andb
in
push
sbb
and
je
push
mov
out
sub
pop
pop
mov
push
fmul
mov
xchg
push
subl
xor
cs
cmp
dec
xchg
sbb
jno
int
loopne
jnp
inc
cmp
call
rorl
lds
inc
and
push
mov
inc
jmp
cmpsl
daa
sbb
mov
cld
pop
push
pop
add
sbb
or
push
imulb
cpuid
je
movl
push
jo
into
sub
or
sbb
pop
rcr
sub
sub
pop
mov
daa
or
leave
movb
arpl
jbe
insl
daa
das
or
imul
push
mov
xor
xor
insl
sub
pop
or
add
xor
lret
add
cmp
sahf
mov
add
adc
test
dec
sub
adc
mov
daa
cmc
insb
push
rorl
pop
add
add
cmpb
ss
sarb
mov
push
mov
pop
add
mov
pop
or
add
or
imul
and
or
dec
mov
cld
pcmpeqb
xor
frstor
pop
jo
or
and
lcall
sbb
mov
je
imul
cvtps2pd
movsb
lahf
mov
add
jns
adc
mov
sbb
cmp
adc
loopne
mov
xchg
mov
pop
jmp
jnp
pop
push
push
enter
push
nop
dec
adc
push
inc
fst
sub
and
je
xchg
pop
mov
xor
icebp
fcoms
push
test
mov
add
push
jo
js
xchg
sarl
push
mov
sti
xor
jmp
sbb
push
jge
lret
fcompl
mov
xchg
or
inc
pusha
arpl
fildll
xchg
sbb
xor
mov
jmp
mov
xor
push
call
inc
stos
and
aaa
stos
sbb
push
lods
movsl
push
popa
cltd
imul
sub
fdivrs
js
enter
sub
ret
or
mov
and
pop
inc
dec
jle
and
pop
aad
xchg
xchg
mov
dec
dec
cmp
jns
dec
dec
mov
dec
dec
jo
jb
dec
dec
dec
dec
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
insb
insl
outsb
outsl
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
and
add
inc
cmp
leave
mov
push
add
sub
push
mov
outsl
or
mov
adc
subl
test
daa
lods
leave
pslld
shrl
add
adc
or
adc
xchg
test
incl
outsb
je
imul
xchg
mov
mov
adc
data16
data16
jne
dec
fwait
jae
je
out
adc
nop
test
add
adc
or
jae
je
cmp
addr16
je
cld
sbb
pushf
xor
data16
gs
xor
mov
dec
je
arpl
adc
xor
push
xor
mov
dec
imul
mov
lock
or
aaa
push
mov
or
int
int
inc
inc
add
jo
outsl
das
sti
jge
sbb
push
inc
popa
jae
add
sbb
or
fdivrs
jl
or
dec
outsb
jae
les
movsl
fwait
xor
iret
or
in
xor
insl
inc
insb
subb
imul
mov
push
push
inc
jns
sbb
or
dec
shlb
nop
and
add
mov
test
xor
sub
fisubrs
xor
aas
mov
rol
mov
pop
outsb
lcall
add
jne
iret
xor
fimull
sub
inc
push
add
dec
jl
jp
push
stos
cmp
or
push
repnz
outsl
in
inc
arpl
cs
inc
imul
mov
jae
es
shrl
stos
mov
insb
loope
cld
ss
sbb
adc
add
lret
sahf
jmp
inc
test
pop
mov
or
or
xor
push
dec
mov
test
adc
imul
cmpsl
inc
xchg
insl
out
or
or
push
hlt
jl
sahf
imul
ljmp
cmp
or
mov
and
lret
pop
ja
xor
les
aam
loopne
mov
lds
push
dec
or
add
pop
pop
rol
aas
push
test
test
inc
cmpsb
jo
xchg
push
add
cmp
js
aas
push
push
dec
gs
movups
mov
add
inc
sahf
mov
fidivrl
mov
add
pushf
nop
out
push
imul
push
cmp
loopne
outsl
mov
lahf
xor
pop
dec
sbb
mov
dec
pop
sub
push
add
mov
lahf
pop
sbb
lds
repnz
xorl
xchg
pop
pop
xchg
add
sarl
loopne
bound
add
sub
pop
pop
jnp
pop
cmp
pop
xchg
cmpb
add
sub
push
inc
je
outsb
scas
lcall
sbb
enter
lods
fwait
lret
mov
nop
lahf
pop
sbb
ss
xchg
jl
add
push
lret
in
xor
jmp
inc
push
xchg
add
add
cmc
pop
insb
inc
sub
sbb
fimull
jns
daa
jo
inc
rolb
xor
pop
inc
jl
shll
popa
icebp
mov
mov
sbb
push
xlat
add
movsl
push
lret
mov
dec
imul
pop
and
and
int3
or
inc
mov
or
or
imul
push
scas
cmp
test
shl
sbb
imul
xchg
out
fcoml
push
xchg
dec
adc
mov
sbb
pop
push
sbb
addr16
out
test
push
sti
leave
mov
mov
std
int
jp
aam
jbe
dec
pusha
mov
push
mov
pop
jnp
sub
out
sbb
push
cltd
dec
pop
popa
movl
loop
sub
inc
pop
cmpsl
test
out
dec
mov
pop
js
push
addr16
punpcklbw
cmpsb
jmp
subb
in
or
pop
aaa
sbb
popw
and
enter
sub
xchg
pop
and
dec
daa
push
push
xchg
gs
insl
popa
addr16
mov
xchg
sarb
cmp
push
mov
pop
in
test
or
lods
or
mov
mov
lods
pop
mov
mov
cmp
dec
clc
test
ret
push
cmpsl
sbb
dec
mov
inc
outsl
mov
decb
push
enter
mov
or
dec
insb
or
shlb
testl
push
and
mov
mov
mov
pop
xchg
js
pusha
addr16
sbb
push
pop
sbb
xchg
xor
sub
out
pop
push
or
pop
rorl
hlt
mov
sbb
xchg
stc
nop
xchg
scas
xlat
hlt
adc
push
adc
in
mov
push
xlat
aam
add
add
je
pop
jle
cmp
adc
mov
addl
jl
aam
test
cmp
shlb
enter
mov
push
push
pop
mov
icebp
push
les
push
incl
vpunpcklwd
outsb
mov
mov
xor
pop
pushf
sar
rol
xor
inc
dec
jne
data16
loope
dec
and
pop
push
push
imul
inc
jmp
test
aas
out
mov
or
and
jl
mov
jge
jo
or
stc
adc
ljmp
and
or
jnp
add
and
data16
push
dec
je
jmp
xchg
pop
gs
push
sub
jle
rcr
inc
cmp
xor
rclb
sbb
test
jnp
pushf
andb
adc
mov
xchg
sub
pop
dec
test
or
decl
jns
cwtl
or
mov
lock
insb
and
and
in
add
aas
mov
dec
dec
push
add
ret
decl
lock
clc
xchg
sahf
test
movsb
mov
jne
pop
push
imulb
notl
adc
fcoml
adc
pusha
cli
jmp
mov
pop
add
subl
mov
mov
addb
cld
adc
mov
imul
je
mov
xlat
cmp
loopne
add
push
imul
jmp
add
inc
push
jle
aad
enter
outsl
push
imul
int
mov
mov
or
cmpl
or
or
repz
push
sbb
or
jle
in
addl
push
div
daa
das
imul
jo
mov
xor
dec
shl
and
mov
push
jg
mov
mov
ds
adc
push
sub
mov
fdiv
in
xchg
sbb
rcrb
insb
pop
out
aam
jmp
dec
popa
jb
outsl
outsb
pop
mov
lods
outsb
pop
and
insb
imul
jbe
add
dec
push
jne
jo
gs
push
gs
insb
pop
repnz
inc
ss
imul
or
cmpsb
xchg
add
dec
imul
insb
outsl
ja
mov
inc
or
arpl
imul
jno
popa
mov
addl
flds
fwait
mov
xchg
push
imul
dec
adc
les
and
rorl
fisttps
or
sbb
testl
das
bswap
pop
inc
popa
mov
adc
sbb
imul
and
insb
lods
mov
je
inc
push
xchg
jne
es
or
adc
or
adc
cld
pusha
cmp
sarl
js
or
sub
push
sti
or
mov
fs
lahf
sbb
jae
pop
or
inc
pop
or
push
sbb
mulps
push
or
jg
gs
mov
repz
adc
mov
adcb
aaa
aaa
shll
outsw
inc
push
andb
push
pop
outsb
jne
adc
or
insb
and
repnz
bswap
or
pusha
sbb
aas
jne
leave
jno
arpl
add
clc
xor
shrl
rorb
cmp
and
das
test
mov
or
sahf
jge
addb
or
push
push
inc
ret
push
pop
cld
cmc
xor
pop
out
pop
test
mov
sbb
loopne
inc
mov
sarl
int
pop
pop
scas
loope
xchg
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
std
and
sti
inc
inc
push
dec
push
xor
inc
dec
dec
push
divb
movsb
arpl
inc
inc
push
adc
notb
dec
inc
push
dec
dec
push
mov
pop
sti
sbb
shlb
dec
and
aaa
and
out
inc
inc
xor
xor
adc
push
inc
and
inc
xor
inc
dec
xchg
mov
push
push
dec
dec
push
dec
mov
xor
push
das
sbb
repnz
das
inc
inc
dec
push
out
in
mov
dec
inc
dec
or
push
aaa
jg
xchg
adc
push
push
push
dec
push
nop
cmpsl
xchg
dec
inc
dec
push
mov
fidivrl
nopl
loopne
lahf
sbb
mov
or
bound
into
push
add
add
dec
shlb
orb
and
les
adc
add
or
dec
stos
jge
mov
lea
sub
and
jg
sub
inc
or
push
mov
wrmsr
push
add
push
or
add
add
mov
dec
pusha
loopne
inc
pop
inc
iret
shlb
mov
xor
shlb
lcall
push
mov
out
or
xchg
test
lods
cld
lods
pop
rolb
test
adc
push
pusha
add
loope
add
psllw
sub
xor
add
in
ret
das
repnz
push
shll
or
subl
in
loopne
jle
add
jne
adc
adc
scas
jmp
sarl
and
arpl
loope
fidivrl
scas
cs
cmp
cmp
jo
sbb
cwtl
add
pop
xchg
movsl
je
movsl
arpl
jae
nop
jmp
das
mov
mov
cmp
ret
or
dec
or
mov
cmpsb
push
jle
outsl
mov
add
roll
mov
inc
adc
push
push
and
dec
mov
add
movsl
out
xchg
adc
inc
and
movsl
rorb
enter
sbb
adc
jmp
and
mov
adc
xchg
xchg
lret
in
mov
sbb
outsb
aas
mov
adc
lea
subl
aam
sbb
ss
cmp
mov
movaps
mov
jo
in
xorl
add
fcoms
sub
flds
jecxz
push
mov
or
pop
inc
fildl
or
jmp
aam
int
enter
adcl
push
or
or
adc
inc
lock
out
dec
pop
mov
xor
mov
or
and
movsl
sub
loopne
sub
mov
xor
lock
hlt
nop
push
lods
mov
pop
inc
sahf
je
pop
sub
popa
jg
sbb
repnz
incl
aam
scas
mov
xor
mov
out
mov
cmp
mov
sub
flds
xor
jecxz
mov
fwait
mov
mov
pop
test
fdivrs
movb
inc
push
das
clc
sbbl
je
mov
ret
cmpl
dec
jg
sub
mov
cli
or
sbb
das
sti
lock
jnp
bound
mov
pop
sbb
rolb
push
mov
daa
imul
inc
sbb
xchg
pushf
or
jb
jns
repz
cmp
and
fmull
jns
ffree
add
adc
add
imul
fdivl
repnz
subl
cmpsb
in
pop
mov
call
jg
jne
fistpll
das
sarb
sub
inc
sbb
mov
inc
mov
sub
push
xor
das
in
gs
in
mov
enter
cmp
or
push
cmp
jns
enter
lock
jl
shl
mov
sbb
mov
xchg
adc
in
dec
leave
or
dec
loopne
loopne
sarl
sbbl
leave
push
push
nop
or
jno
leave
xor
mov
pusha
movsb
mov
js
cmp
xchg
and
xchg
loopne
lret
sub
lock
mov
push
inc
mov
popf
pop
ds
lahf
cmp
add
mov
bound
add
movl
dec
into
test
lret
push
push
mov
mov
dec
add
mov
das
cmp
pop
loope
ss
fsubs
ret
ds
into
jnp
jo
mov
sub
iret
push
adc
lret
call
mov
jo
or
fs
loopne
sbb
es
adc
and
or
adc
xor
adc
nop
daa
daa
subb
inc
cmp
inc
clc
test
mov
or
inc
or
shll
inc
sub
hlt
lods
inc
inc
sub
mov
adc
dec
in
scas
mov
jge
jl
inc
and
insb
int3
mov
je
sub
lea
les
or
sbb
fs
adc
add
cmp
rcll
or
sbb
loopne
dec
int
mov
std
jg
mov
mov
push
mov
sub
or
sub
or
mov
xor
add
fstpl
xchg
push
sub
push
push
xor
jnp
das
push
add
sub
or
shrb
in
mov
add
xchg
in
cmp
jne
sbb
iret
rcll
xor
fld
inc
test
call
mov
add
sbbb
jo
call
and
add
or
add
xchg
rcrl
in
in
and
test
or
jge
sub
insl
push
pusha
rep
or
bound
cmp
inc
push
ret
mov
mov
daa
imul
mov
add
dec
lods
mov
es
add
dec
pop
or
movaps
dec
or
push
rorb
loopne
into
add
lods
or
sti
inc
lret
push
lods
fsts
ja
add
aaa
cmp
sbb
test
lahf
fcmovbe
iret
jnp
push
and
orl
adc
sub
iret
rolb
movsb
test
cmp
dec
cmp
js
dec
mov
pop
addl
pop
in
nop
adc
push
push
rclb
addl
push
lock
pop
roll
inc
pop
or
inc
loope
movsb
adc
sbb
mov
popa
fisubl
pop
sub
xchg
mov
ss
in
adc
bound
das
jge
mov
iret
add
sbbb
add
pop
inc
jae
daa
mov
ds
and
or
shlb
cwtl
out
xchg
dec
push
stc
mov
or
mov
ljmp
outsb
jecxz
pop
push
movsb
aas
es
mov
shrb
push
xchg
xor
andb
mov
adc
lea
push
push
scas
xor
pop
or
shll
sbb
mov
je
lret
ret
movsb
and
jne
lcall
pop
pop
ljmp
lcall
push
push
add
or
or
fmulp
jge
xor
push
xor
adc
cmp
add
xchg
mov
mov
push
adc
adc
pop
pop
pop
or
cmp
or
imul
and
mov
push
movsl
lcall
dec
jmp
mov
add
mov
cs
push
je
xor
sti
cmpl
mov
jb
mull
or
les
punpckhbw
ret
ret
push
enter
in
cmp
aam
sub
mov
inc
and
scas
sub
add
dec
push
or
push
ror
or
or
push
pop
cmpb
adc
das
lea
ljmp
aaa
mov
add
pop
ret
aam
iret
addl
in
add
cmpsb
adc
int3
cmpsl
loope
repz
fnstcw
in
adcb
in
xor
push
nop
pop
push
cltd
ret
adc
cmp
test
js
imul
push
insb
bound
mov
mov
add
lock
ror
test
inc
movsl
push
mov
push
inc
iret
cltd
adcb
jns
fcomps
in
push
imul
push
out
mov
xchg
or
push
rcr
ret
adc
add
push
sarb
pop
imul
insb
ljmp
adc
pop
incb
je
or
mov
in
daa
mov
jge
loopne
dec
divl
shrl
and
addr16
sar
xorb
cmp
push
adcb
sub
cmp
mov
lods
mov
loop
sub
test
sub
add
cs
loopne
out
test
push
fisubs
sbb
xor
add
stos
pop
push
or
sub
push
shlb
push
test
lahf
enter
add
and
cmpsl
clc
fsubs
push
jge
daa
out
repnz
es
cmpsl
dec
imul
and
fsubrl
insb
mov
push
sub
dec
jmp
jns
xchg
add
dec
xchg
add
sbb
pop
ret
jge
lock
das
inc
add
int
cmc
fs
push
imulb
sub
movl
push
or
add
mov
or
pop
call
aas
or
punpckhdq
adc
sarb
ret
sub
or
mov
adc
push
mov
mov
pop
lret
or
add
add
movsb
pop
inc
movb
mov
fcmovb
push
adc
and
cmp
aas
dec
es
test
dec
shll
pop
pop
pop
fwait
popl
mov
jne
cli
cmp
jge
sbb
mov
push
sbb
sub
sbb
pop
pop
aam
add
es
xchg
movsb
dec
js
and
and
mov
mov
sti
enter
mov
dec
jns
jmp
push
mov
mov
mov
sub
shl
mov
mov
jmp
mov
clc
movw
add
cli
in
add
push
mov
xchg
push
cld
insl
loopne
jno
fcoms
jl
fcompl
jnp
or
cmp
fwait
sarb
add
jne
ds
ds
jnp
js
xchg
mov
lea
jmp
cmp
push
mov
sbb
daa
jmp
fcompl
nop
movsb
gs
or
sbb
enter
cld
icebp
lock
jle
test
push
jne
inc
dec
sahf
cmp
cmp
test
mov
test
int3
and
or
jl
sahf
stc
ljmp
and
mov
add
rcrl
mov
sbb
mov
mov
daa
pop
cld
or
dec
pop
roll
dec
sarb
pop
pop
cmp
dec
clc
mov
xor
daa
add
fstpl
adc
dec
mov
adc
aam
test
orl
jne
out
mov
push
xchg
mov
push
adc
fmul
mov
adc
test
mov
xorl
icebp
sub
xchg
push
push
and
lcall
push
mov
dec
and
loopne
clc
clc
pusha
and
das
dec
shrl
loopne
fadds
sub
jnp
leave
add
pusha
sub
lret
nop
push
das
inc
test
and
shlb
aas
cmc
ror
push
and
add
out
mov
mov
push
push
mov
movsb
nop
inc
ds
sbb
rorb
dec
fs
loopne
add
lret
jecxz
fldl
clc
test
add
shlb
pop
cmc
inc
rol
stos
shrl
pusha
repnz
and
pop
js
and
xchg
pop
enter
fsubp
mov
repnz
repnz
and
cmp
dec
mov
addb
popa
mov
sbb
movsb
mov
or
rolb
xchg
enter
adc
sub
mov
loopne
movzbl
sbb
popa
pop
jmp
add
sarl
adc
cmp
jg
test
jle
cmp
jl
mov
aaa
sarb
enter
imul
clc
jle
or
movsb
mov
jo
xchg
push
dec
adc
pop
pusha
enter
movsb
inc
or
ss
push
add
dec
gs
shrb
jne
push
and
push
push
and
pop
push
pop
and
adc
sbb
fldcw
fcoms
fbld
andb
or
mov
push
addr16
xchg
push
sbb
lods
sub
fadd
pop
sub
ds
pop
sub
add
into
je
lods
repz
test
insl
addl
inc
inc
fcmovnu
or
or
jl
push
cmp
int3
xor
mov
xor
mov
inc
cltd
popf
into
in
dec
jne
cmp
loop
mov
push
xor
xchg
xor
cli
ficoms
ss
repnz
add
xor
sarb
inc
adc
repnz
leave
sbb
lcall
imul
nop
mov
insl
sbb
int3
jbe
ja
xchg
mov
pop
cwtl
add
fcompl
fldt
sbb
imul
xor
les
ret
lret
sub
xor
sahf
pop
je
enter
rolb
repz
mov
pop
fcoms
push
mov
in
sbb
mov
push
push
mov
sbb
or
rcll
loope
cmp
iret
repnz
sarb
movl
adc
movsb
jge
or
add
cmp
dec
cltd
adc
or
lods
out
dec
add
xchg
aas
sbb
jno
stos
or
js
inc
mov
push
fsubr
inc
jl
sub
sub
jb
test
lea
jno
push
or
or
je
in
movl
fldl
and
mov
lods
mov
sub
jmp
in
pop
outsb
inc
push
mov
and
push
mov
jmp
adc
or
adc
insb
aas
pop
jae
push
orb
or
inc
and
add
inc
loop
push
xchg
push
imul
inc
add
mov
mov
push
xchg
xchg
imul
shlb
or
sbb
shll
imul
add
push
out
add
or
sub
cmpsb
dec
cld
adc
or
and
repnz
or
aad
fsubl
cld
xlat
hlt
inc
xorl
sub
hlt
mov
push
jns
or
push
push
adc
pop
addb
loopne
shlb
clc
bound
cmpsb
inc
jmp
xchg
data16
adc
clc
clc
hlt
ret
nop
hlt
popf
mov
mov
negl
and
jge
shrl
push
test
lock
aam
ja
js
call
jg
xchg
cmpsl
add
lods
adc
je
imul
sbb
cmp
add
cmpsb
imul
push
push
in
hlt
test
sbb
or
loopne
xchg
addl
clc
dec
jae
dec
call
ljmp
mov
add
mov
faddl
pop
sub
loopne
mov
push
leave
push
add
lock
push
repnz
inc
fcoms
fidivl
mov
mov
push
add
push
lods
or
lods
data16
add
insb
mov
lods
enter
cmpsl
mov
mov
mov
lods
inc
js
add
push
test
sbb
push
cmpsl
cmp
mov
out
loopne
mov
adc
movsb
ljmp
sbb
cmp
dec
bound
div
addl
movb
push
addl
adc
mov
add
aas
fbld
sahf
xor
pop
and
and
rcrl
dec
dec
pusha
sbb
add
into
xor
push
out
sub
mov
xor
push
adc
or
stc
repnz
mov
out
push
popf
jmp
and
aas
test
adc
test
adc
add
pop
add
cmp
subl
and
adc
cmp
xor
add
fsubrs
int3
xchg
cmp
aas
mov
adc
cmp
repnz
mov
nop
repnz
pop
loope
push
add
ja
js
push
fisubrs
pop
jne
cmp
rol
jnp
cmp
lods
inc
pop
push
call
outsb
cmp
adc
lea
ret
or
andl
enter
mov
jnp
jno
sbb
mov
push
push
adc
pop
cmp
mov
push
shr
mov
pop
ret
addr16
inc
rcll
pop
pop
jmp
pop
cmp
rcrb
or
jno
inc
rorb
subl
adc
pop
xchg
iret
inc
mov
jb
mov
in
jmp
in
push
or
insl
andl
aaa
mov
sub
and
mov
inc
jecxz
or
mov
sbb
and
mov
add
jl
dec
daa
xchg
inc
jnp
dec
mov
xor
jl
cmp
fldt
mov
cmp
cmp
jne
dec
add
sbb
sbb
in
popa
dec
inc
dec
inc
push
in
mov
jmp
push
es
add
clc
mov
push
shr
loopne
add
aas
jmp
cmpsl
adc
insb
sbb
stc
adc
ja
gs
and
xchg
mov
pop
out
iret
add
mov
imul
mov
adc
adc
mov
sub
xor
fists
lds
mov
inc
in
pop
pop
iret
adc
in
test
sub
out
fs
push
inc
cmp
lock
orb
cwtl
push
cmpsl
repnz
sahf
imul
mov
fdivs
or
push
test
pop
sbbb
shl
push
loope
sub
in
mov
clc
iret
pop
adcb
clc
pop
add
jne
imul
js
adc
pop
sarl
imul
orl
shll
pushf
jge
add
cmp
je
mov
or
sbb
test
movsb
cld
cmp
movsl
fstl
ja
pop
xor
lock
jnp
incb
sbb
sahf
sbb
jns
or
xchg
mov
lcall
adc
jmp
sbb
jg
mov
stc
mov
stos
test
dec
test
enter
xor
xchg
out
jnp
lds
sbb
add
not
sbb
inc
fiaddl
jne
mov
xchg
jle
jne
movl
cmp
loopne
dec
pop
mov
repnz
jne
add
add
xor
push
out
lahf
mov
sub
test
les
pop
out
sahf
adc
and
sbb
sbb
sub
frstor
aaa
or
cmc
add
xlat
and
add
js
xorb
mov
int
push
stos
push
ljmp
movsl
aam
hlt
mov
and
pop
cmc
and
sub
mov
sbb
inc
adc
jb
mov
or
pop
test
ljmp
dec
fistpll
mov
sbb
add
jge
xchg
movl
sub
add
sub
and
adc
pop
call
pop
mov
jns
ret
mov
xchg
push
jecxz
jo
or
sbb
sahf
xchg
push
xchg
sub
fdivl
lods
ss
fistpl
int3
sub
push
or
mov
sub
add
push
inc
dec
rolb
pop
testb
xchg
shl
cld
pusha
stos
add
in
xchg
mov
mov
je
scas
jbe
add
je
pop
shr
icebp
or
fwait
idivb
sbb
pop
movsl
cmp
cmp
je
mov
sarl
lds
adc
xchg
loopne
mov
mov
mov
ret
test
cmpsl
les
ret
or
push
mov
test
or
inc
xorb
imul
jbe
xchg
test
push
add
adc
xchg
sbb
imul
faddl
test
and
lahf
lods
leave
or
adc
hlt
xlat
or
outsl
je
out
fdivrs
xor
subb
jns
xchg
jo
inc
popa
insl
fisubrl
push
ret
into
mov
push
sub
fisubrl
mov
adc
pop
pusha
pop
mov
jae
and
pop
inc
mov
lea
lea
aad
aas
enter
bound
and
dec
je
sarl
repnz
mov
hlt
shrb
pop
loopne
mov
pop
sbb
fcoms
inc
mov
mov
mov
cmp
decl
call
push
lret
add
xchg
mov
out
inc
test
dec
out
cmp
pop
xchg
out
sub
push
mov
in
jecxz
add
loope
imul
loopne
and
pop
mov
popa
xchg
and
add
into
enter
lock
iret
sbb
and
mov
mov
jle
add
addl
xchg
xor
pop
add
xchg
rolb
inc
push
rcrb
or
cwtl
imul
les
rorb
das
sbb
enter
pop
out
pop
pop
pop
rolb
shlb
mov
sub
shlb
mov
iret
mov
mov
in
pop
fsub
mov
add
addb
hlt
in
cmpsb
pop
push
in
lods
incb
mov
nop
and
or
hlt
mov
testl
add
test
or
fistpll
adc
jo
out
push
bswap
sbb
pop
pop
lcall
popa
push
in
fstl
sub
push
lods
imul
test
cmpb
push
inc
dec
dec
mov
hlt
js
xchg
xchg
in
popa
adc
loope
rorl
mov
clc
lea
aaa
fadds
les
jecxz
add
mov
cmp
inc
bound
mov
test
xor
cmp
xorb
dec
push
adc
insb
out
adc
xor
cmp
sub
and
inc
sbb
pop
test
dec
cmp
mov
mov
push
add
add
sbb
lea
icebp
sub
mov
testl
and
cmp
or
push
fld
and
push
and
icebp
xlat
inc
stc
test
add
or
lods
and
pop
pop
mov
jmp
out
and
adc
movsb
push
mov
push
mov
movlps
ret
jge
enter
and
mov
test
xor
clc
mov
mov
insb
movsb
imul
mov
mov
sub
dec
add
inc
and
out
es
xor
cld
cld
or
push
push
dec
in
and
fnstsw
or
insl
test
jg
pop
movb
leave
jo
lds
inc
or
into
or
bound
test
inc
daa
or
mov
pop
repz
lea
cs
add
int
scas
push
push
add
or
xorb
jae
push
lcall
ret
shrl
movnti
inc
adc
xor
and
sbb
inc
cmp
and
xor
sti
pop
rorb
ljmp
sub
imul
imul
ret
shrb
data16
jle
loopne
add
loopne
repz
dec
aad
mov
popa
out
pusha
adc
insl
and
shrl
shl
adc
sub
pop
leave
add
and
adc
movsb
add
inc
cmp
cmp
shl
in
cmp
sub
test
test
call
mov
pop
dec
inc
or
inc
rcrb
sub
inc
sbb
pop
and
pop
mov
pop
out
fidivrl
pusha
or
mov
sbb
sbb
mov
add
icebp
adc
mov
add
sbb
clc
inc
or
adc
jo
test
jmp
bound
aam
or
rolb
inc
pusha
ret
jo
jnp
xorb
push
sbb
xor
rorb
lea
cmp
inc
and
dec
inc
insb
stos
sub
adc
push
xor
xor
ds
sub
inc
lcall
sub
sbb
sbb
daa
cmpb
cmp
push
fildl
mov
fisttps
movsb
adc
movl
pop
jbe
divl
insb
jecxz
cmp
ljmp
add
loopne
or
push
adc
pop
ret
lock
xchg
add
nop
mov
jmp
sub
lea
popa
in
sub
dec
mov
lahf
or
add
sbb
cmpsb
pop
or
lods
pop
ret
in
adc
push
cmp
fwait
mov
sub
ja
dec
jecxz
xor
jo
sbb
call
mov
pop
ja
jb
movsb
cmpl
and
inc
or
inc
jp
test
add
xchg
sti
dec
or
dec
adc
loopne
fcomps
ja
jae
repnz
adc
jmp
lods
push
gs
cmpsl
inc
icebp
lods
test
aaa
iret
jne
pop
pop
outsl
imul
push
push
lock
dec
inc
rorl
adc
pop
ljmp
cmp
cmp
xchg
dec
pop
adc
add
repnz
sub
rcrl
jmp
and
mov
sbb
lcall
pop
sbb
lds
addr16
push
das
outsb
jno
push
dec
nop
sbb
jbe
push
and
in
dec
movb
jmp
or
push
xor
cmpsl
clc
push
add
or
or
jbe
adc
xchg
adc
mov
or
inc
push
popa
sub
dec
ds
jo
fldl
rclb
xor
movsl
mov
pushf
sbb
push
push
and
adc
xor
push
sub
ljmp
aad
rcrb
pop
jno
and
push
rclb
pop
and
into
movb
popf
stos
adc
mov
sarl
xor
or
or
int3
cwtl
mov
xchg
dec
test
or
inc
inc
movb
mov
mov
fadds
jl
jne
mov
mov
jle
call
clc
push
fisttps
and
cmp
mov
dec
add
cltd
popf
mov
or
xchg
or
dec
mov
lea
aam
xchg
rorb
dec
sub
ja
sub
dec
mov
adc
insb
and
dec
adc
clc
push
sub
dec
dec
out
fs
add
pop
mov
in
popa
cmpb
add
orl
mov
jno
cmp
addb
xor
push
jmp
push
fadds
sub
pusha
loopne
ljmp
or
jne
pusha
inc
ffreep
filds
adc
insl
pop
pop
loopne
or
add
enter
inc
mov
or
loopne
orl
imul
sarb
ret
inc
push
sbb
movsl
xor
cs
sbb
jns
xor
push
sub
adc
inc
adc
mov
adc
test
mov
cltd
sub
inc
inc
pop
push
bound
add
or
lahf
xchg
sub
lcall
add
push
mov
and
inc
pop
jbe
mov
dec
push
in
push
sub
push
cmp
pop
pop
and
inc
mov
test
neg
popa
je
adc
dec
loope
sub
or
jp
add
inc
in
add
or
je
mov
or
or
jne
orb
and
cmp
pushf
adc
sbb
adc
clc
cli
or
sbb
cmp
or
loop
shrb
rorl
mov
mov
orb
xchg
fadds
cmp
jb
pushf
xchg
xor
lock
dec
shrb
or
pop
sbb
add
mov
or
leave
or
push
push
or
cvtdq2ps
stos
inc
jne
shl
add
mov
faddp
and
in
jno
push
push
leave
inc
push
nop
into
pop
lods
adc
sub
jo
cmp
aam
jmp
jbe
mov
lea
out
cmc
add
rcrb
loopne
sbb
std
xchg
mov
or
add
mov
imul
inc
sbb
push
es
add
in
or
sbb
pop
rorl
jns
xor
stc
inc
pop
add
mov
pop
add
or
mov
in
sbb
sbb
cmp
pop
leave
or
cmp
loop
bound
test
in
out
or
sub
jbe
adc
adc
dec
mov
and
push
fs
xchg
sahf
lret
mov
xor
xchg
in
mov
movsl
mov
add
enter
xor
adc
push
test
shrb
mov
push
jb
es
inc
int3
fcomps
push
cmp
fisttpl
add
mov
pushf
mov
lods
es
pop
mov
dec
in
rol
mov
xchg
add
cmp
or
jle
push
mov
repnz
sbb
xor
test
outsl
xchg
add
jle
sti
stc
xor
movsb
or
js
ret
push
jle
jne
pop
cmp
adc
cmpsl
ret
fmull
in
xor
or
imul
cltd
cwtl
mov
movsb
add
dec
or
push
xchg
or
adc
fmuls
shlb
inc
dec
sbb
adc
pop
sbb
pop
in
push
or
mov
test
sub
call
mov
inc
add
idivb
iret
mov
xchg
inc
cmp
loop
push
cwtl
sbb
outsl
adc
adc
push
jo
xchg
int
or
mov
lea
dec
push
or
dec
push
jns
outsb
sahf
imul
ja
or
sbb
ja
or
fs
xchg
loop
inc
adc
mov
push
jecxz
and
inc
mov
sub
push
sbb
fiaddl
pop
lds
cmp
fimuls
orl
mov
push
and
dec
or
adc
movsl
push
adc
pop
sbb
sub
and
rorl
cmp
aam
inc
shl
pop
add
add
fs
movsl
rorb
adc
inc
dec
inc
or
mov
lahf
inc
popa
push
fdivrs
fwait
lock
jns
insb
test
pop
xor
arpl
stc
sbb
and
das
jp
inc
mov
lret
xchg
das
or
test
pop
iret
push
addl
popl
sbb
dec
add
mov
rcll
dec
add
inc
add
les
add
push
aam
mov
mov
cmpsl
and
outsb
in
ret
add
icebp
hlt
lds
rorb
loopne
dec
dec
pop
insb
adc
xchg
sahf
fbld
lods
jmp
outsb
js
sbb
mov
cmp
movb
scas
push
push
push
push
or
adc
jge
mov
push
and
icebp
jmp
adc
scas
fimull
mov
jae
push
add
lcall
jg
lar
cltd
addl
dec
jle
sub
into
dec
shlb
fildll
mov
imul
jae
aam
aaa
jo
arpl
cmp
ss
inc
pop
adc
sub
adcl
inc
or
les
js
lock
adcl
xchg
dec
or
push
inc
lsl
sbb
in
daa
and
aam
mov
out
adc
mov
mov
cmp
dec
jbe
mov
push
add
sarl
mov
movl
jle
fimull
shrl
or
cmp
add
aas
push
xor
testb
je
inc
xchg
add
pop
jns
jo
daa
push
sbb
fsubrs
xor
fwait
push
sbb
loopne
mov
sbb
push
inc
jbe
sbb
add
cmp
jp
xchg
nop
add
mov
push
xchg
mov
add
pop
jmp
sbb
cmc
fists
jp
add
vmread
nop
mov
in
add
dec
inc
aas
sbb
aas
push
repz
fdivs
jle
inc
and
sbb
mov
movsb
mov
mov
and
mov
cld
and
fsts
mov
mov
xchg
outsb
or
out
mov
les
fcomps
push
nop
xor
add
enter
andb
adc
adc
nop
pop
mov
add
or
pop
rclb
inc
cmp
jge
dec
jns
cmp
cmpsl
jne
push
jb
arpl
adc
mov
daa
adc
fiadds
jo
iret
test
inc
pop
sbb
stos
inc
push
sub
decb
in
cmp
adc
stos
and
movsb
jmp
call
cmpb
cmp
rclb
adc
js
popf
imul
insl
imul
dec
or
xchg
or
nop
pop
lret
in
adc
push
cmp
sbb
idivb
xor
insb
mov
pop
pushfw
popf
sub
sub
cmp
add
xchg
xchg
cwtl
imul
xor
sbb
sub
pop
sub
fwait
mov
mov
push
sahf
cld
stos
pop
add
and
lret
test
mov
ret
xor
push
mov
mov
out
outsl
pusha
enter
mov
adc
or
mul
jo
or
cmp
sbb
adc
push
mov
mov
add
and
pop
inc
mov
mov
ret
mov
or
mov
aaa
call
mov
push
sarl
sbb
xor
cmpsl
mov
subb
gs
or
pop
push
mov
push
inc
mov
inc
pop
push
push
ret
sub
daa
enter
xchg
fdivrs
daa
mov
mov
dec
add
pop
incl
pop
and
jnp
push
push
xchg
outsb
cmp
dec
xchg
movsl
test
add
mov
ss
aaa
into
adc
cmc
mov
sub
jne
mov
sbb
enter
ja
mov
jne
outsl
subb
subb
cmpl
orl
jp
add
and
test
addr16
dec
or
and
or
adc
push
mov
xchg
and
add
pop
mov
push
test
or
and
jne
push
dec
mov
adc
loop
mov
or
pop
stc
btr
add
push
add
fimull
rol
cs
out
je
out
seto
lock
or
enter
push
fcoml
jbe
in
sbb
push
add
xor
jge
push
jp
clc
inc
xchg
je
fistl
ret
mov
sbb
add
and
lahf
add
add
jl
and
decb
enter
sbb
lock
hlt
incb
ret
add
jge
rcrb
fs
jne
cmpsb
or
bndstx
xchg
push
xor
movsl
jg
and
outsb
hlt
lea
cmp
cmpb
cmpsb
sbb
or
jnp
inc
fsubr
push
outsb
cld
mov
sub
stos
repnz
and
dec
mov
pop
add
pop
mov
insb
mov
inc
jmp
pop
scas
int
add
cltd
cmp
and
jmp
int3
push
adc
in
fdivs
shlb
in
fcoms
cmp
mov
xor
fnsave
xchg
cmp
test
and
dec
adc
push
adc
sub
add
add
in
aad
add
rcll
cld
jge
adcb
pop
and
mov
in
movsb
xor
addb
cmp
mov
subl
mov
add
mov
xor
adc
loopne
xor
cmp
enter
mov
adc
sahf
and
mov
and
mov
lock
jl
xor
jo
call
subb
cmp
jg
or
les
xchg
or
add
stos
dec
enter
add
push
movsl
fistpll
adc
nop
sub
scas
inc
adc
in
sbb
or
mov
ror
fdivr
stos
xchg
sarb
mov
push
or
fidivl
fs
sbb
inc
leave
and
inc
sbb
sbb
nop
daa
adc
sbb
mov
sub
andl
das
and
cmpsl
push
arpl
jle
scas
inc
or
fistpll
mov
lret
jae
mov
add
add
mov
xchg
add
or
dec
lods
mov
lock
jo
jecxz
or
test
aaa
xorl
call
cs
xlat
jbe
pop
sbb
dec
pop
outsl
rcrl
lret
nop
lock
ss
jle
inc
psubb
ret
in
in
call
clc
and
loopne
pushf
pushf
fmull
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pop
mov
lods
out
push
lret
nop
sbb
hlt
mov
push
pop
idiv
test
mov
xchg
xchg
test
adc
cmpb
mov
jbe
cmp
xor
sti
push
or
sub
mov
or
xor
daa
inc
jb
push
les
mov
fldl
mov
je
jno
bnd
into
lods
imul
or
out
fildll
out
movb
add
and
mov
das
and
imul
mov
and
and
clc
inc
pop
pop
push
add
or
cs
ljmp
mov
ljmp
cli
mov
adc
jmp
out
or
jns
adc
and
pusha
or
push
sub
dec
adc
js
xor
jge
sbb
and
mov
addl
sbb
cmp
fcoml
mov
sub
xchg
and
or
incb
push
push
popa
cmp
jle
push
pop
adc
or
mov
lods
or
sub
xchg
addl
dec
das
addr16
pop
and
mov
mov
cld
cmp
pop
mov
ds
cmp
test
cmpsl
jo
mov
cmp
adc
sbb
mov
xor
lock
sbb
jae
nop
adc
daa
mov
sub
xchg
mov
adc
and
and
lret
add
add
xchg
xchg
ret
push
add
jmp
xor
or
or
es
dec
sbb
imul
dec
or
inc
or
mov
das
adc
enter
lock
jne
and
and
xor
outsb
jmp
call
jne
xor
sub
aas
xorb
push
call
push
dec
jne
or
outsb
and
or
add
cld
pop
aas
shlb
fcomps
inc
and
ds
jb
push
pop
add
leave
cmpsl
xchg
out
shll
push
sub
inc
sbb
push
push
dec
inc
pop
cmpsl
dec
movsl
repnz
cmp
leave
leave
or
cwtl
and
and
inc
push
test
and
push
dec
inc
jb
adc
insb
and
inc
es
push
aam
jle
mov
cs
sub
jnp
add
mov
jmp
ss
and
adc
inc
in
mov
andb
xchg
rclb
sbb
clc
clc
push
ja
or
lods
neg
mov
jnp
sub
push
pusha
pop
sbb
in
addl
ss
sub
addl
jne
add
fildl
jmp
ds
add
adc
pusha
mov
mov
push
push
gs
mov
sbb
daa
inc
outsb
jne
incl
popa
jns
jae
push
rorb
xchg
xor
sbb
enter
movsl
pop
add
cmp
and
cmpsl
repnz
and
jmp
sahf
lret
adc
mov
push
push
inc
push
sbbb
inc
dec
dec
pushl
and
cmp
pop
lods
imul
xlat
jne
sub
xchg
sbb
jl
cs
ljmp
or
xchg
cld
mov
pop
shl
pop
add
adc
cmp
inc
cmpsb
mov
repnz
inc
imul
iret
adc
clc
adc
fnstenv
jns
push
imul
jl
mov
xor
adc
addl
and
add
insb
mov
or
imul
jnp
daa
ljmp
or
addr16
xor
mov
xor
xchg
dec
aas
adc
aad
test
nop
add
xchg
pushf
mov
cmpsb
jl
daa
or
hlt
add
ret
andps
fdivrl
add
mov
popf
push
in
in
rorl
cltd
adc
dec
aam
or
cmp
in
and
xor
and
mov
cmp
int3
shrl
out
xor
leave
pop
sub
xor
sub
sarl
incl
sub
pop
fstl
cmpsb
ja,pt
jae,pn
mov
push
pushf
mov
add
sbb
sbb
in
rolb
push
sub
je
js
in
add
fmuls
or
or
enter
inc
xor
bndldx
xlat
stos
add
mov
add
cmpl
sub
pusha
mov
push
shlb
aam
loope
pop
insl
addb
nop
xor
ja
test
imul
jnp
clc
mov
sbb
rolb
stc
and
dec
adc
inc
addl
sbb
sbb
das
and
xor
or
fcomps
sbb
inc
sbb
push
and
dec
lahf
aas
in
sub
hlt
fldcw
lea
es
sub
dec
stos
mov
fs
xor
into
in
inc
sbb
inc
call
cmp
cwtl
xchg
sub
adc
hlt
xor
mov
and
rcll
mov
sbb
xor
mov
sbb
mov
add
mov
lock
cmp
pushf
jle
sarl
mov
pop
and
xchg
sbb
lret
xor
mov
aad
scas
cltd
adc
rclb
lahf
lock
cli
cs
sbb
xchg
mov
sbbl
bound
shll
jbe
push
pusha
sbb
push
loopne
test
push
fs
xchg
or
sarb
mov
inc
lcall
movsb
mov
mov
cmp
jp
mov
into
outsb
inc
push
hlt
jne
ja
pop
subb
cs
loopne
mov
sbb
sbb
sbb
mov
sbb
xor
dec
or
sub
jmp
mov
sub
mov
daa
add
test
xchg
cltd
lods
andb
arpl
or
sbb
test
push
out
filds
pusha
out
mov
test
jle
dec
jne
sbb
xor
lods
data16
and
push
xor
lret
sahf
into
and
inc
xchg
push
inc
push
cmp
add
lock
xorb
pop
xchg
cmp
daa
fstl
das
lods
mov
cmp
fsts
sub
adc
shlb
inc
or
lds
shll
or
sub
fldcw
mov
push
daa
xor
inc
lods
pop
addb
add
fsubl
add
sub
add
bound
inc
push
pusha
popa
or
xor
inc
pop
ror
mov
scas
push
shlb
add
push
fucomi
pop
insl
jle
mov
pop
adc
mov
and
adc
xchg
pop
das
fdivl
shr
jnp
push
lcall
hlt
mov
mov
xlat
dec
mov
dec
lea
jbe
jb
test
sub
inc
outsl
lock
cmp
popa
mov
dec
pop
jae
jmp
mov
pusha
loop
and
or
sub
int
add
loopne
imul
call
mov
lock
pop
xor
clc
fsub
dec
dec
mov
inc
adc
push
push
jne
nop
cmp
jmp
frstor
cmp
inc
test
aaa
dec
lret
xor
lock
lock
nop
xor
cltd
mov
inc
fcmovbe
cmp
and
call
shr
push
cld
imul
push
push
xor
xor
xlat
orl
jo
lcall
dec
push
outsl
fldcw
loope
and
sbb
pop
enter
shll
inc
pop
xchg
and
xlat
pop
and
xchg
sub
dec
jnp
sub
adc
popf
pop
lock
and
stos
and
inc
push
xor
pop
adc
pop
adc
rorl
or
loopne
test
fldt
jo
add
cmp
movsl
sub
mov
imul
mov
xor
jns
icebp
xchg
mov
and
xchg
add
repnz
jmp
push
add
mov
pop
imul
xor
lahf
pop
and
movsl
xchg
sbb
daa
add
std
inc
sub
jne
sbb
cmp
push
adc
and
xor
adc
movsb
and
enter
aaa
add
cmpl
inc
sbb
mov
mov
idiv
fwait
inc
dec
movsl
iret
outsl
xor
je
popf
sbb
je
cmp
dec
pop
repnz
jbe
subl
out
movsl
cmp
pusha
pop
repnz
cmp
dec
and
pop
leave
xchg
enter
cmp
in
aam
pop
push
inc
push
idiv
adc
fcomps
rcrb
insb
push
dec
insb
push
pop
sbb
push
leave
xchg
imul
dec
push
jo
mov
sub
les
hlt
dec
in
xchg
fs
push
bound
xor
mov
and
inc
cmp
cmp
inc
jae
add
push
cmp
and
add
cmp
cwtl
push
add
push
lods
nop
dec
gs
pop
cmp
les
dec
sbb
decl
arpl
pop
rcl
dec
pop
mov
sbb
or
int3
inc
xor
push
inc
daa
push
sub
pop
fs
and
aaa
add
push
das
push
adc
pop
inc
outsb
movsb
lods
imul
das
sbb
mov
xor
dec
add
daa
test
push
fists
add
pusha
or
mov
daa
push
xchg
and
mov
cmp
gs
inc
call
push
push
std
nop
int3
dec
cmp
mov
fstpt
mov
push
insb
push
inc
jb
scas
xchg
test
push
les
ljmp
imul
js
pop
dec
xor
add
movsb
lock
add
xor
subb
push
lods
cmp
cmp
mov
xchg
aam
mov
je
int
cmp
ja
cmp
add
decl
popf
add
adc
sbb
pop
mov
xchg
xchg
lret
out
or
cmp
xchg
xchg
xchg
test
xchg
xchg
xchg
cwtl
pushf
mov
movsb
test
mov
xchg
xchg
xchg
mov
mov
xchg
enter
xchg
xchg
xchg
aam
fsub
xchg
xchg
xchg
xchg
in
in
lock
xchg
xchg
xchg
hlt
clc
cld
add
xchg
xchg
xchg
xchg
add
or
xchg
xchg
xchg
xchg
adc
sbb
lds
sub
cmp
inc
popa
pop
jle
push
jl
push
xor
mov
adc
mov
cmp
add
add
sub
push
cmp
push
sbb
rcll
pusha
and
inc
sub
addb
mov
nop
enter
inc
sub
cwtl
lock
inc
mov
inc
movsb
xor
and
pop
push
push
movsb
xor
nop
lret
mov
push
mov
shrb
enter
xchg
add
hlt
rolb
test
aam
movsb
xor
xchg
fsubs
xor
adcb
in
push
sbb
dec
gs
sub
or
lods
clc
mov
cld
int3
add
nop
lret
loopne
lock
cs
sbb
add
sbb
adc
sub
push
cmp
push
test
insb
and
cwtl
sub
sub
in
jge
xor
xchg
inc
pushl
inc
add
or
mov
push
lahf
adc
popa
inc
insb
outsl
jae
push
test
sbb
test
xor
push
dec
mov
inc
or
imul
sbb
aas
push
popa
jb
in
push
add
test
je
push
or
jbe
mov
addr16
xchg
gs
js
mov
scas
popa
add
rcrl
dec
arpl
jae
xlat
add
fs
mulb
or
jns
jp
adc
jo
inc
outsl
sub
pop
pop
pop
nop
jbe
sub
pop
add
add
pop
ret
adc
pop
xchg
push
or
or
test
addr16
pop
mov
and
push
sahf
dec
pop
adc
jbe
push
and
outsb
mov
sub
outsb
mov
xchg
outsb
popa
and
and
inc
into
push
gs
ffree
fcmovb
ficompl
in
pop
xchg
sbb
pop
pop
xchg
inc
xor
jge
or
ja
and
rcll
jns
in
icebp
and
xchg
jne
insl
outsb
jo
mov
das
pop
fs
fcomps
jo
inc
imul
icebp
mov
mov
xchg
or
and
xor
loope
popl
pop
inc
xchg
push
or
repz
ficoms
rolb
notb
popa
ss
insl
add
and
hlt
push
inc
xor
pop
aaa
bound
xchg
push
add
scas
repnz
aad
inc
int3
mov
test
add
jno
cmpsl
dec
das
cmp
inc
xlat
es
inc
cmp
outsl
dec
and
and
dec
jb
cmp
inc
dec
sbb
xor
inc
dec
dec
push
sbbb
push
push
and
jb
adcl
mov
or
pop
icebp
inc
xor
xchg
pop
clc
pop
inc
cmp
sub
xor
inc
jb
inc
pusha
popa
sbb
sbbb
add
test
dec
pop
aam
imul
and
pop
push
nop
jp
aaa
test
test
dec
add
scas
or
fwait
clc
aam
outsb
push
dec
push
add
out
and
xor
call
sub
inc
cmovnp
cmp
test
insl
hlt
roll
or
sub
bound
add
and
pusha
inc
fsubs
mov
inc
dec
pop
mov
divps
cmp
and
mov
cmpsb
insl
rorb
xor
dec
mov
mov
push
push
mov
push
xor
movb
dec
dec
inc
pop
nop
xor
rorb
cs
jo
inc
and
xchg
xor
cmp
insb
test
cmpl
adc
arpl
inc
cmp
xor
fimull
ret
pop
movsb
test
movsl
sub
mov
adcb
in
adc
das
push
cmpl
pop
jno
pusha
xor
cmp
dec
movb
mov
sbb
scas
xor
dec
call
mov
ret
xchg
adc
inc
add
or
xchg
xor
xorl
pop
rorb
and
jo
lods
push
lahf
gs
jmp
lcall
dec
shll
insb
call
pop
dec
pop
pop
stc
mov
in
dec
aad
fnstcw
jmp
das
mov
add
inc
addb
and
movsb
mov
add
mov
dec
pop
adc
adc
xor
je
mov
adc
lods
push
or
push
add
sbb
push
pop
repnz
add
add
push
push
dec
dec
outsl
sub
sub
arpl
push
or
mov
mov
lret
ret
dec
clc
dec
outsb
outsl
cli
movl
xchg
pop
push
outsl
pop
or
and
cmpsl
jne
cmpsl
mov
pusha
je
jge
push
mov
sbb
push
sbb
je
sbb
outsb
jbe
scas
adc
sub
ja
movsb
mov
pusha
loop
cmc
sub
add
stos
cmp
and
aas
mov
sub
xor
insl
fs
addr16
push
cmpsl
pop
inc
imul
add
mov
cmp
ror
pop
xchg
shlb
sbb
popf
mov
inc
fsubs
xor
fmulp
cld
jl
movsb
js
jl
iret
lods
jb
push
pop
jo
insb
sbb
pushf
cmp
push
daa
out
in
xor
leave
mov
pop
lcall
icebp
fs
lea
sub
mov
jg
dec
mov
das
sbb
adc
jl
dec
jno
mov
mov
lock
in
add
in
and
inc
sub
dec
ljmp
push
push
push
dec
pop
dec
dec
fistpll
dec
fldl
scas
out
push
jae
jg
inc
push
imul
lods
pop
sbb
jo
leave
adc
jae
sbb
cmpsb
pop
jae
subb
outsl
dec
sbb
mov
int3
sbb
xchg
cmc
mov
adc
std
jl
ror
sarb
pop
pop
imull
inc
add
movsl
push
push
fsubrl
rclb
mov
push
xor
adc
paddd
dec
xchg
pop
jne
adc
repnz
enter
xor
mov
pushf
stos
push
movsb
pop
lock
adc
lds
or
ljmp
xor
jnp
je
add
fs
inc
push
push
stc
or
pusha
and
xchg
out
sub
fistpll
push
inc
or
or
outsb
popf
sub
push
xor
jmp
insb
iret
and
mov
mov
or
cmp
cmp
push
mov
push
cmp
jb
cmp
cmp
cmp
jb
jb
ds
and
jb
and
and
jb
jb
es
sub
jb
sub
sub
jb
jb
cs
adc
jb
adc
adc
jb
jb
push
pop
sbb
jb
sbb
sbb
jb
jb
push
pop
add
jb
add
add
loope
jb
push
das
add
mov
xor
sbb
out
sahf
lock
sbb
adc
sahf
out
fmuls
add
repz
repz
push
shl
in
iret
repz
mov
test
mov
cmp
int3
nop
les
mov
iret
repz
jo
push
iret
repz
mov
dec
repz
repz
je
insb
iret
repz
xor
and
repz
dec
adc
ds
repz
xor
pop
sub
jns
out
and
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
shl
in
repz
repz
test
mov
aam
int3
out
cld
daa
hlt
out
push
je
mov
movsb
adc
add
xchg
test
inc
push
sub
xor
test
test
outsb
pop
push
js
xchg
mov
js
mov
push
cmpb
cmp
xchg
push
pop
shlb
cwtl
mov
adc
push
push
imul
push
divl
and
sub
mov
push
mov
push
push
mov
mov
and
jae
hlt
inc
mov
mov
pop
or
push
cmp
xor
sbb
out
sub
sub
fcomps
in
and
and
inc
and
ja
mov
sbb
xchg
lret
adc
add
aaa
movl
sbb
scas
inc
cmp
pop
push
push
and
test
mov
movsb
and
mov
and
test
pusha
sbb
mov
rcl
shll
ss
jg
iret
es
or
push
les
das
push
xor
enter
inc
push
dec
stos
jb
bound
enter
shrl
sbb
mov
aas
fstpt
lret
shl
pushf
push
ja
scas
in
lods
repnz
dec
int3
sbb
adc
rcrb
jbe
cmp
roll
int3
scas
and
push
enter
pop
fdiv
mov
aaa
mov
pop
jnp
adc
and
or
cli
sub
jle
adc
clc
scas
and
jb
popa
je
mov
cli
push
sub
das
lret
jg
cmp
cmp
mov
mov
and
mov
and
mov
add
jne
jbe,pn
push
daa
adc
cmpsl
pop
fmull
dec
ficoml
in
mov
fcompl
adc
mov
pop
dec
pop
sbb
faddl
loope
rcrb
ds
push
push
add
push
push
addl
mov
xor
daa
sub
insl
or
test
sti
xor
xor
sub
xor
dec
imul
push
add
movb
add
pop
jle
pop
arpl
insb
push
arpl
imul
inc
outsl
out
popf
pop
js
bound
pop
es
je
jge
jb
jb
popa
or
imull
ficompl
adc
bound
popf
dec
mov
scas
imulb
in
cmp
mov
addr16
jb
addr16
mov
add
mov
arpl
rcl
fisubl
jg
ja
stc
mov
insb
das
je
in
mov
jnp
sbb
and
pop
ret
and
mov
fucom
pop
je
jo
jb
jge
fcoms
outsl
dec
data16
outsb
fcoms
das
add
or
movsb
imul
lock
mov
mov
js
shlb
mov
clc
add
inc
dec
sub
dec
aam
push
fwait
jp
adc
add
push
pop
inc
push
dec
shrb
dec
call
je
mul
psrld
dec
cmpl
adc
jl
and
cmp
mov
fnstcw
add
mov
dec
mov
jle
or
js
mov
push
dec
mov
push
insb
aad
pop
ds
insb
outsl
xchg
and
push
aas
mov
inc
mov
xchg
pop
mov
pusha
mov
jne,pn
xor
call
or
sub
shrl
addr16
pop
fld1
add
outsl
push
shlb
out
push
ss
xchg
xchg
or
mov
cmp
xorb
lcall
mov
js
fwait
pop
shlb
sub
xor
inc
add
shlb
add
xchg
pop
or
outsb
and
jmp
fsubr
adc
sbb
xor
push
sub
pop
nop
push
or
sub
inc
mov
pop
xor
pop
fs
iret
popl
pop
add
lcall
add
add
jmp
pop
or
or
or
or
or
or
push
movups
adc
adc
push
pop
sbb
out
sbb
sbb
dec
and
and
pop
push
xchg
movsb
mov
cmp
repz
xlat
call
jns
cmpsl
sbb
jns
jo
xchg
mov
out
out
or
repz
repz
cmp
jp
xchg
movsb
mov
sbb
jb
sbb
push
fistps
push
mov
add
push
push
adc
and
or
dec
in
lret
or
push
mov
or
push
cs
and
dec
sub
in
lret
xor
mov
adc
adc
test
inc
push
dec
sub
xchg
lret
sbb
movsb
jb
in
push
sbb
pop
push
mov
pusha
sahf
dec
in
ja
push
popa
imul
bound
arpl
test
fs
and
xor
and
and
and
add
mov
push
push
mov
dec
adc
add
pop
js
les
pcmpeqd
mov
pop
sub
fadds
or
jo
dec
arpl
pop
add
push
lea
mov
jnp
mov
add
push
fidivs
and
add
sahf
std
inc
clc
push
adc
push
add
rcrb
jo
pusha
lock
pusha
sub
sub
sbb
adc
int3
mov
xor
pop
dec
xor
fs
xchg
in
push
loopne
faddl
rcr
push
rorb
mov
dec
and
and
push
fst
in
and
aaa
cmp
push
enter
out
jnp
jg
push
sbb
loopne
dec
cmp
mov
paddusw
jae
adc
lock
daa
push
mov
fs
dec
jnp
cmp
pop
clc
sub
ffree
pop
adc
mov
inc
push
add
push
arpl
adc
add
cmp
inc
out
sbb
out
add
fisubs
into
pop
ss
outsb
out
mov
push
pop
loopne
clc
push
aam
repz
jecxz
es
adc
adc
jnp
lahf
stos
cs
int3
lock
pop
repz
insb
dec
push
push
or
add
fldt
in
test
sbb
push
mov
xor
movsl
mov
cs
cs
fnstcw
fdivrp
xchg
jge
cwtl
insb
or
scas
jl
je
mov
in
mov
faddp
fistpll
adc
adc
mov
cmp
jl
clc
ds
jns
fdivs
insb
loopne
adc
movsb
cmpl
sbb
movl
adc
inc
mov
fs
xor
cltd
add
add
mov
jo
ret
mov
or
jno
add
lret
xorb
inc
inc
sbb
enter
cmp
outsl
je
jecxz
les
pop
cmp
cmpsl
fstps
les
dec
enter
add
cmp
xchg
mov
and
jmp
pop
xchg
addb
dec
call
movsb
cwtl
repz
shll
dec
push
idivb
addr16
ret
test
xor
cwtl
xor
ret
test
add
fnstcw
movsb
push
inc
xchg
inc
sti
xor
cmp
mov
and
test
cwtl
xchg
out
add
xor
xor
add
inc
mov
inc
or
fsubl
lcall
add
inc
insl
mov
xor
cld
mov
bound
xchg
push
mov
clts
or
jbe
mov
xor
dec
arpl
gs
lahf
cmp
add
adc
outsb
rcll
gs
pop
into
and
dec
dec
ds
rep
fcoms
dec
jne
cmpsb
mov
inc
js
pop
inc
jo
shlb
repnz
adc
ret
and
add
mulb
scas
sti
adc
ja
mov
mov
fsubrp
vmovsd
sub
xchg
add
loop
sbb
xchg
or
mov
mov
popa
movsb
jae
movsl
popa
fdivs
jl
dec
pop
dec
loope
dec
loope
dec
jp
adc
jp
mov
mov
jae
cmp
fwait
sub
or
inc
pop
pusha
or
xor
sbb
and
pop
add
mov
adc
sbbb
lock
outsb
je
sbb
mov
adc
push
mov
inc
sbb
push
bound
sahf
int
int
out
dec
outsl
push
dec
repnz
sbb
adc
mov
adc
rcrb
sbb
sub
mov
and
and
loope
gs
test
jns
or
or
jnp
pusha
rcrl
dec
jp
je
inc
adc
ret
test
and
add
test
jns
insb
mov
lahf
outsb
inc
test
pop
xor
pop
cltd
bound
and
push
sub
test
rcrl
dec
jmp
pop
pushf
enter
mov
add
fisttpll
roll
xor
icebp
jecxz
mov
movsb
fnsave
jbe
push
outsl
jo
jo
out
lret
push
mov
mov
mov
adc
add
scas
and
enter
jns
push
test
mov
mov
dec
adc
fs
push
cmc
xchg
rorb
cwtl
aaa
push
aam
out
in
pop
sub
addr16
imul
add
les
mov
rcrl
dec
sub
jne
popf
xor
das
dec
fiaddl
clc
mov
iret
xor
out
dec
push
dec
out
outsb
sbb
and
frstor
pop
or
pop
inc
cmp
xor
imul
sahf
mov
xor
inc
pushf
sahf
inc
mov
xchg
mov
push
sub
or
sbbl
lods
xchg
orl
push
xchg
movsb
test
dec
lock
in
cmpsl
dec
add
xchg
or
or
add
dec
je
or
fs
inc
outsb
jb
dec
sbb
cmp
insl
rolb
add
and
xorb
enter
jl
add
js
je
test
out
test
dec
gs
outsb
push
test
cmp
or
enter
jae
xchg
call
shl
cmpsl
dec
push
jo
test
rcl
or
pop
add
repz
enter
mov
jns
roll
loopne
fnsetpm(287
or
or
xchg
lods
pop
dec
cmp
or
imul
into
mov
cs
inc
jb
and
add
add
sub
push
dec
outsb
aam
add
mov
aam
add
nop
sub
mov
out
xor
pushf
mov
push
lods
inc
push
push
in
add
cld
dec
data16
fidivrs
sbb
cmp
cmp
adc
es
loop
fistpll
cmp
push
push
pusha
push
rcr
push
adc
sbb
outsb
dec
daa
subb
jno
enter
mov
mov
or
mov
dec
nop
xor
mov
ds
push
les
inc
out
pop
mov
jno
sbb
mov
sbb
cmp
mov
add
or
pop
mov
cmp
aam
js
jl
and
xchg
ret
and
pop
jb
lods
pop
sub
lock
sbb
cmpsl
fstps
inc
je
and
adc
jl
test
cwtl
mov
mov
push
mov
add
sub
jmp
nop
daa
incb
hlt
in
mov
inc
sbb
or
icebp
sahf
lds
popa
sbb
les
mov
ds
xor
add
shrl
in
orl
cs
xor
sbb
or
jg
lret
add
lock
and
test
jo
push
mov
cltd
jmp
in
jmp
sbb
enter
mov
in
sub
xchg
push
test
pop
adcb
adc
popa
cmp
pop
out
popa
call
or
sbb
mov
and
add
sbb
cmp
dec
addr16
nop
mov
les
lea
in
les
and
mov
mov
dec
and
xchg
test
in
sbb
sub
xchg
test
add
sub
add
cs
orl
xor
lahf
or
jae
mov
cmovb
xor
clc
addl
mov
add
add
push
pop
jg
or
push
pop
dec
xchg
adc
add
add
push
int
shll
push
xchg
pop
sub
pusha
push
js
bound
stos
cmpl
push
inc
mov
mov
orb
dec
in
or
notb
mov
pop
cld
in
cmpsl
mov
mov
jecxz
movb
add
adc
push
fadd
cmpsl
inc
jno
sbb
add
and
je
inc
push
ja
jnp
movl
ja
je
mov
lods
jo
out
fdivrl
sti
je
mov
insl
xor
imul
adc
jbe
inc
cmp
or
sbb
testl
daa
push
dec
icebp
fcmove
out
add
notl
xchg
lock
popa
nop
sbb
mov
jg
pop
sbb
ficompl
mov
pop
addr16
add
sbb
push
push
js
pop
mov
pop
outsl
cmp
sbb
sub
shll
cmp
arpl
mov
cmp
aas
push
cld
mov
notb
inc
xchg
sub
inc
sbb
fisubrl
dec
in
mov
sti
and
mov
enter
movsb
xchg
cs
push
jo
ss
sbb
xchg
lcall
cmp
pop
int3
inc
ret
push
lahf
loopne
inc
rcrb
jle
aam
addb
ret
cmp
clc
jg
dec
mov
and
ficompl
sahf
inc
je
fnsave
push
dec
imul
shl
pusha
add
sbb
xorb
pop
add
add
cld
leave
and
cld
add
adc
inc
push
and
sti
aas
mov
push
jns
jg
mov
lsl
mov
mov
int3
sub
shr
jne
icebp
mov
or
add
into
add
lea
aam
fadds
loopne
cmp
mov
hlt
add
sbb
adc
mov
outsl
cwtl
mov
sbb
jg
push
mov
add
jne
andl
pop
lahf
jmp
inc
inc
dec
push
pop
pushf
add
and
fmul
cld
outsl
and
inc
popf
je
testb
je
add
add
mov
loopne
xchg
or
pop
aam
sbb
and
mov
inc
rorb
fld
loopne
and
daa
jnp
mov
les
add
test
in
xor
add
add
nop
cmp
out
inc
in
nop
adc
cmpb
and
in
lcall
popa
rolb
ss
insb
sbb
mov
lret
inc
mov
sti
sbb
mov
mov
dec
out
iret
push
mov
daa
not
and
clc
mov
loope
xchg
nop
pop
dec
mov
ja
fildl
stos
or
push
adc
cmp
dec
push
daa
mov
pop
cltd
jp
and
fwait
mov
ss
pop
imul
mov
and
fsubs
fwait
cltd
mov
xor
and
mov
add
adc
rorl
cmp
fnsave
rcll
mov
xlat
add
xchg
rcrb
pop
mov
test
adc
pop
push
sarl
inc
jg
adc
add
jo
pusha
push
notl
inc
dec
xchg
mov
add
add
imul
ja
rcrb
inc
sub
lcall
jo,pt
inc
push
or
mov
or
cmp
jp
add
rclb
or
mov
ds
mov
sub
push
sbb
into
adc
ret
cmpsl
insl
mov
lret
out
cmp
and
adc
mov
out
les
pop
mov
gs
mov
jle
mov
push
xchg
pop
rcrl
push
dec
push
mov
test
or
adc
data16
outsl
loope
pop
push
shlb
jl
lods
dec
inc
xlat
enter
jne
and
and
movsb
pop
xchg
scas
daa
lods
mov
movsb
in
add
into
mov
and
sbb
loopne
out
or
mov
cmc
cmp
jl
stos
jp
push
inc
pop
push
enter
in
mov
jmp
pop
dec
pop
xor
mov
adc
stos
dec
lods
jge
or
fwait
xchg
push
push
mov
dec
popa
test
add
jnp
test
dec
jo
inc
jg
adc
and
cli
push
addr16
cmp
add
cmp
sbb
mov
stos
push
push
add
xor
ja
mov
loopne
scas
and
xor
inc
sbb
divb
lods
ror
test
or
jb
leave
mov
xchg
test
xchg
xchg
fstl
inc
daa
loope
les
dec
lds
mov
and
cwtl
push
mov
movsl
jl
mov
pop
xchg
test
aaa
sub
fcompl
push
push
sub
rorb
hlt
mov
and
adc
and
jecxz
xchg
imul
mov
cli
imul
js
pop
std
push
push
pop
dec
xchg
pop
movb
dec
andl
lock
sbb
sarb
sbb
pop
cmpsb
int3
outsl
mov
addb
push
cmpsl
in
lcall
pop
add
fs
iret
movsl
outsl
or
ss
sub
addl
cs
mov
sbbb
xchg
adc
lea
cmp
or
or
mov
xchg
inc
inc
and
jl
inc
xchg
ja
pusha
cwtl
pop
cmp
testb
and
jns
aaa
jle
adc
sbb
or
and
ljmp
mov
push
pushf
mov
cmp
out
mov
adc
pushl
cmp
mov
stos
sbb
push
imul
cld
sbb
or
push
mov
push
sbb
push
fbstp
mov
add
mov
mov
jno
add
or
jae
and
and
dec
shlb
or
sbb
es
mov
lock
jp
or
push
push
or
and
mov
cmp
add
pushf
jmp
incb
ds
movb
lods
push
push
or
pusha
dec
popa
add
and
pushf
add
fsubrl
add
add
cmp
into
xor
sbb
xlat
or
test
inc
mov
movb
mov
stc
adc
sbb
cmp
sub
sbbl
xlat
movups
ljmp
push
add
xor
add
ss
jnp
nop
xor
jle
ss
xor
scas
mov
or
orl
scas
xchg
and
cld
pop
pop
sub
or
out
sub
jmp
jb
inc
das
mov
adc
inc
cmpsb
xor
in
mov
add
add
adc
or
sbb
adc
das
push
xlat
pop
and
js
cwtl
or
les
sahf
cmpsl
xchg
add
push
lock
dec
cs
add
dec
mov
imull
lret
fists
lea
jecxz
out
cwtl
cmpsl
cmp
sub
call
pop
or
dec
add
and
or
or
or
lods
mov
leave
arpl
call
push
cld
add
std
mov
dec
adc
xchg
sub
aam
lock
lock
fcmovu
imul
push
hlt
loop
movsb
sbb
mov
lds
sub
je
push
push
push
jecxz
lds
mov
mov
push
sbb
mov
js
push
gs
incb
pop
lar
mov
scas
push
push
sbbl
push
cld
pop
add
push
dec
dec
xlat
sbb
cltd
xchg
dec
mov
inc
jge
lea
fimull
jg
pop
movsl
loop
repnz
adc
pop
sbb
test
cld
addl
insb
and
fimuls
cmp
jne
sbb
mov
cmp
sub
nop
pop
jmp
push
out
add
cld
data16
movsb
mov
push
xchg
xor
cwtl
in
dec
stc
fwait
aam
fistpll
push
lock
push
add
cmp
test
jo
or
inc
dec
popl
pop
shlb
mov
cmpsb
dec
cmpsl
pop
imul
xchg
dec
into
pop
in
cmp
nop
inc
jbe
inc
addr16
xchg
xor
in
test
cwtl
mov
push
daa
lods
push
sbb
mov
bswap
jg
lods
add
enter
xchg
add
scas
push
lock
mov
mov
sbb
pop
sub
jl
aaa
pop
and
inc
aas
daa
inc
clc
or
add
inc
dec
mov
lds
mov
lods
jae
ret
mov
movb
iret
jb
es
xchg
clc
push
xchg
repz
pop
mov
and
aam
mov
mov
jne
add
xchg
daa
mov
leave
xor
mov
or
nop
dec
add
loopne
ja
sbb
fstps
push
in
xchg
jns
out
cltd
mov
jns
out
leave
shll
and
jns
orl
cs
aaa
inc
loopne
xor
mov
pop
mov
jp
stc
cli
xchg
add
and
sahf
add
jno
adc
lods
daa
adc
or
push
push
add
sbb
and
nop
cmp
ret
xchg
add
push
xor
bound
jnp
or
inc
insl
cmpsb
xorb
insb
icebp
or
decb
adc
dec
and
and
mov
mov
push
cld
mov
test
mov
outsb
enter
scas
fcoms
pop
cld
shll
sub
mov
gs
sahf
adc
push
cmc
loopne
cmpl
sahf
push
fistl
in
xchg
test
lea
push
cmp
lock
mov
lock
mov
mov
adc
xor
pop
inc
or
test
xlat
jns
outsl
sbbb
cmp
pop
add
push
loope
cmp
xchg
inc
pop
mov
and
frstor
dec
cmp
adc
dec
dec
jg
popa
enter
lea
movb
rorb
addl
inc
mov
fs
dec
xchg
loope
add
add
mov
xchg
mov
push
or
testl
mov
cmpsl
and
and
movsl
data16
mov
jno
or
or
dec
inc
in
jl
mov
mov
inc
ficoml
ret
pop
fs
push
or
aaa
sbb
inc
sbb
add
and
push
xchg
jecxz
push
lock
clc
mov
rclb
or
lcall
aaa
inc
sub
sub
divb
jmp
sub
push
pop
sbb
cmp
sub
sub
and
ret
dec
dec
xor
sub
or
movb
xor
adcb
cmp
sbb
or
movsb
cmpsl
aas
mov
sbb
pop
inc
sbb
or
dec
or
xchg
fs
lock
inc
fiadds
mov
jnp
mov
or
dec
jmp
xor
imul
lock
cld
roll
push
sub
inc
mov
cmp
pop
fnstsw
sub
stc
mov
xchg
and
dec
jne
jo
inc
inc
mov
sub
mov
and
inc
ss
mov
or
or
pop
jb
cmp
mov
and
xor
fldenv
xchg
mov
jno
daa
push
adc
sbb
das
sbb
adc
movl
xchg
adc
ret
ret
fwait
add
pop
jo
and
gs
sbb
add
add
sbb
stc
je
or
je
xor
jo
cmc
lret
jnp
cmpl
inc
pop
outsb
js
ret
loopne
mov
fimull
inc
lock
fisubs
push
sub
add
repz
sub
in
xchg
fisttps
rorb
sub
inc
les
xchg
lret
in
xchg
and
inc
pop
and
pop
add
cmp
jl
xchg
and
jne
pusha
push
add
mov
xor
mov
adc
xchg
out
push
dec
dec
dec
inc
dec
push
add
inc
cmp
or
test
and
xor
aaa
fdiv
and
jne
or
or
aaa
push
sbb
popl
cwtl
mov
les
or
cmpsb
mov
incl
sub
cmp
jne
ss
jb
jne
mov
insl
push
pop
push
push
testl
sub
xchg
cmp
popf
mov
rol
sbb
in
lock
mov
mov
xchg
in
lret
mov
inc
pusha
insb
fidivrl
sahf
xor
dec
pop
adc
gs
jns
xor
inc
int3
loope
ljmp
popa
test
sbb
adcb
mov
mov
and
sub
cs
sbb
sbb
ret
cmp
loopne
jmp
cmc
or
add
dec
roll
add
or
imul
cmp
cmp
js
loopne
sbb
lock
shlb
fsub
and
sbb
outsl
sbb
adc
adc
or
adc
fistpl
sub
and
enter
add
sahf
addb
mov
adc
sub
shlb
aaa
and
sahf
filds
sbb
jge
sbb
adc
dec
inc
in
push
adc
push
das
sub
dec
dec
add
scas
call
add
fwait
dec
dec
pop
push
mov
popa
insb
add
or
or
or
and
ss
sub
popa
insb
popa
mov
shrl
outsb
adc
xchg
addr16
mov
addl
movl
pop
adc
xchg
lds
push
aam
iret
sarl
cmp
lock
hlt
adcb
jns
or
pusha
out
sbbl
pop
and
dec
add
or
sub
cmp
push
and
add
mov
mov
push
sbb
inc
gs
or
fiadds
cmp
lods
loopne
mov
repz
adc
lock
mov
enter
enter
enter
inc
pusha
enter
jb
inc
rcll
jl
js
dec
cmpsb
dec
dec
or
jae
stc
jo
js
loopne
sbb
insb
jno
dec
jo
mov
xchg
xchg
sbb
je
test
push
sahf
negl
push
insb
in
dec
mov
push
cmp
out
pop
sub
cmp
pop
inc
xor
xor
movsb
mov
dec
push
and
je
or
cmp
shlb
movsb
jno
and
inc
mov
faddl
test
push
push
sbb
sub
std
mov
push
jns
jge
jmp
pcmpeqw
pop
movsl
subl
aad
add
mov
inc
jb
je
add
repnz
adc
test
adc
jmp
outsl
ret
adc
cmpsb
add
jo
insl
pop
testb
stc
insl
bound
cs
jg
test
mov
movsb
lds
pushf
outsb
jne
add
inc
jne
popa
aam
pop
dec
jae
mov
jmp
push
jle
repz
xor
fs
inc
dec
cmp
dec
gs
jbe
or
dec
cmp
psubw
cmp
push
imul
nop
jo
add
jmp
data16
inc
mov
push
cmc
in
rcr
adc
push
loope
lods
ret
lret
xchg
popa
imul
popa
and
enter
imul
sbb
inc
loopne
or
jae
jns
hlt
pop
xchg
xchg
movl
cmpsl
mull
jo
cmpl
xlat
int3
fldl
mov
fdivrp
push
push
adc
movl
and
cmpl
lock
push
sarl
nop
adc
add
movsb
sti
test
sbb
inc
or
jmp
or
jb
out
lea
add
dec
cs
in
outsb
adc
add
mov
imul
or
das
adc
adc
and
or
insl
inc
mov
pop
das
or
mov
test
psrld
pop
dec
mov
out
testl
vmovsd
and
cltd
inc
mov
jge
sbb
adc
or
or
sub
dec
sarb
push
xor
fs
ja
out
call
jne
inc
adc
add
rorb
outsl
daa
dec
sub
or
fdiv
lcall
sub
mov
mov
lret
adc
pop
bswap
nop
stos
cmpsl
mov
les
xchg
or
loop
adc
fadds
fmuls
ret
mov
addr16
stos
pop
jne
xchg
cmp
arpl
push
in
xchg
sub
add
out
mov
stos
mov
adc
shrb
push
outsb
leave
and
mov
mov
add
dec
gs
or
xor
in
fisubrl
jmp
test
popa
aad
jmp
fmull
pusha
aaa
add
add
shrb
mov
pop
adc
insb
bound
or
adc
arpl
add
add
test
cs
lahf
add
and
add
sub
pop
rcrb
xor
fmuls
sbb
pop
mov
mov
pop
sub
adc
mov
fists
leave
rcrb
xlat
gs
add
scas
out
and
cmp
js
sbb
sbb
cld
movsl
jns
scas
adc
gs
imul
sbb
unpcklps
lahf
mull
xchg
xor
mov
clc
movhps
push
sub
jo
test
popa
sub
repz
scas
out
stos
mov
or
test
sbb
rcrl
add
add
test
adc
and
add
push
cmpsl
lods
in
inc
ret
jo
hlt
add
sti
inc
cli
push
rolb
clc
jmp
push
test
add
inc
adc
lock
mov
dec
ret
ss
sub
cwtl
divb
orb
add
sub
add
add
add
add
xchg
pop
xchg
addb
decl
add
add
or
or
and
xor
adc
sbb
cmp
inc
mov
ljmp
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivr
fiaddl
fdivr
xlat
call
call
lcall
call
call
call
call
dec
dec
into
ljmp
dec
dec
dec
dec
icebp
dec
push
hlt
pop
jns
mov
lret
push
or
xor
out
enter
or
andb
sbb
or
iret
cmp
jo
push
sbb
sarl
adc
pushf
push
mov
ds
repz
out
psubb
pushf
test
pop
pop
cli
scas
adc
in
jb
mov
icebp
insb
xchg
pop
cmp
jo
lahf
sarb
jae
adc
push
mov
xchg
sti
int
stc
xor
fdivr
in
je
push
call
insb
fs
fmull
data16
cmp
lock
mov
cmp
jl
out
adc
lcall
add
jb
ds
adc
push
push
negb
int3
pop
mov
pop
pop
sbb
pop
sub
sub
add
add
dec
ja
add
je
sbb
into
shrb
dec
cmp
push
sahf
dec
sub
add
cmp
outsb
and
dec
push
mov
movsb
leave
push
push
arpl
mov
jl
inc
xlat
mov
add
aas
incl
lods
pop
je
mov
xor
sub
or
mov
mov
sub
addl
pop
or
dec
ficomps
pop
dec
fcomps
or
mov
ret
jg
mov
pop
xor
movsb
into
jg
push
add
nop
add
xor
cs
xor
addr16
xchg
outsl
mov
push
mov
or
sub
imul
pop
adc
push
inc
jp
insl
or
xchg
inc
pop
xchg
subb
or
sub
sub
cmove
sbb
lock
push
movsb
in
or
add
jne
sub
and
dec
mov
mov
mov
jo
jecxz
mov
hlt
nop
je
outsl
rolw
call
jo
xchg
and
bound
or
outsl
ja
or
push
popa
pushf
adc
dec
xchg
mov
lret
xchg
mov
gs
bound
bound
fidivrl
and
mov
or
pop
cmpsl
and
mov
dec
imul
imul
sub
lret
jb
lock
adc
daa
pop
mov
xchg
aaa
mov
inc
outsl
arpl
std
sbb
add
js
mov
movsb
jnp
or
data16
jns
jne
mov
mov
enter
push
les
inc
push
add
add
add
pop
pop
cmp
out
mov
cmpsl
add
adc
dec
test
push
add
add
cmp
add
incb
pop
test
scas
pop
dec
add
add
add
mov
xchg
sub
mov
pusha
sub
aad
add
sbb
pop
or
add
add
cs
dec
mov
mov
cmp
adc
sbb
jmp
xor
and
and
mov
mov
mov
add
or
loope
push
mov
xor
cmp
fs
mov
inc
inc
inc
inc
inc
inc
or
mov
mov
adc
imul
dec
jnp
jg
pushl
pushl
push
sub
repz
mov
ss
out
dec
insb
hlt
mov
add
out
fsubp
imul
dec
pushw
fsubr
shrl
dec
push
dec
clc
sbb
idivl
push
jl
mov
jle
mov
pop
push
inc
push
cmp
pusha
je
mov
jbe
cmpsb
idivl
out
xchg
pushf
movsb
lods
add
pop
xor
out
push
je
mov
dec
jo
out
mov
mov
push
inc
push
dec
push
mov
mov
push
push
mov
es
addr16
aam
xchg
sub
rorb
sub
jnp
jnp
cs
pop
push
inc
cbtw
inc
push
xchg
sahf
jnp
fwait
in
test
movsb
arpl
pop
and
inc
push
jns
mov
es
les
xor
sti
mov
repz
xor
inc
data16
pop
push
fisubl
inc
dec
push
cld
loopne
es
jge
in
jnp
ss
push
pop
pop
je
and
int3
cmpsl
push
shl
pop
xchg
lods
add
into
inc
pop
and
xor
ljmp
adcb
mov
xlat
dec
je
jb
inc
dec
lock
je
sub
push
mov
outsb
jmp
push
popf
daa
pushf
mov
sub
cmpsl
pop
test
cmp
mov
or
sbb
cld
push
inc
dec
inc
push
int
jnp
jo
in
int3
outsl
hlt
loopne
out
pop
loopne
add
adc
aam
dec
inc
adc
data16
jo
inc
fidivl
mov
push
mov
mov
cwtl
sub
and
or
pop
pop
mov
mov
rol
sarb
outsb
mov
nop
fstps
or
nop
add
nop
adc
and
les
sbb
test
inc
push
sbb
call
mov
cmpsb
push
push
sub
iret
repz
mov
mov
repz
jne
sarb
je
adc
mov
push
insb
mov
push
out
dec
jge
loop
sarl
jg
call
mov
mov
adc
xchg
ss
nop
xchg
outsb
fadds
out
push
dec
and
fsubrl
xchg
lcall
sbb
fld
das
lea
mov
adc
nop
cli
pusha
push
jne
sbb
xor
lock
cmp
mov
mov
inc
push
and
sbb
mov
cmp
sub
push
imul
or
add
ret
adc
movsb
xor
push
push
lods
push
cs
fbstp
push
sbb
or
sbb
jne
insl
sub
loope
xchg
rcrl
add
mull
rcrl
mov
jne
xor
and
roll
rcll
cmp
hlt
inc
lock
subl
pop
punpckldq
or
insb
sbb
sbb
fistps
aas
adc
dec
sbb
add
or
movsl
stos
mov
push
fiadds
xor
fldz
mov
inc
outsl
or
sub
mov
mov
push
xchg
daa
push
test
cwtl
sbb
das
push
push
inc
push
inc
pop
outsb
pop
das
daa
push
jo
daa
or
pop
pop
add
push
add
insb
add
cld
fcomi
loopne
daa
dec
push
jo
imul
sub
or
mov
mov
mov
cmpsl
pop
add
or
add
shlb
cmp
fcomi
add
out
stc
outsl
daa
mov
push
dec
sub
or
pop
pop
sbb
inc
mov
push
mov
inc
insb
or
mov
cmpsl
jmp
subl
sub
icebp
xor
out
jl
and
xor
adc
lea
cmpb
push
pop
ss
decl
sub
inc
push
repz
mov
and
mov
daa
js
out
sub
inc
mov
call
je
mov
ss
rol
popa
add
jno
add
push
mov
adc
xor
mov
inc
xor
add
mov
inc
or
lea
and
incl
sub
push
or
or
scas
daa
sbb
shlb
mov
sub
and
aas
lret
dec
jmp
pop
or
sbb
mov
and
add
xlat
ljmp
in
lret
mov
push
ret
sub
and
orl
dec
out
gs
sbb
inc
and
insl
aam
jle
lcall
xor
and
decl
icebp
dec
dec
jne
xlat
push
cmp
cmp
mov
push
aad
es
es
xor
or
imul
push
dec
or
sbb
mov
push
inc
xchg
xor
rcl
cmp
adc
xor
rcll
sbb
and
xor
and
sub
sub
pusha
sbb
sub
push
movl
in
aam
mov
or
xchg
cmpsl
out
addl
inc
test
mov
out
adcl
or
nop
push
fidivl
xchg
dec
outsl
das
inc
sbb
cli
paddq
cmp
inc
sub
out
sbb
add
mov
xor
shrl
mov
ja
xchg
test
bound
out
loopne
cmp
push
pop
shl
mov
jl
adc
hlt
jmp
mov
adc
dec
arpl
adc
mov
cmp
or
sub
adc
or
cmp
sbb
or
data16
xchg
cmp
xchg
inc
dec
or
xchg
mov
outsb
hlt
jmp
cmp
xor
or
jmp
ss
dec
xchg
fs
push
sub
or
and
adc
pop
push
pop
xor
pop
or
adc
addl
or
int3
or
mov
sbb
mov
and
and
cli
inc
mov
xor
xorb
test
or
sub
sbb
inc
dec
fbstp
cmp
loopne
loopne
filds
dec
add
test
push
jp
or
daa
jno
pop
dec
sub
test
sbb
sub
pop
arpl
imul
and
mov
sub
enter
or
movsl
sub
cmp
xor
lret
mov
xchg
mov
push
scas
test
sbb
jne
mov
push
insb
insb
xor
lock
lea
or
int
pop
inc
inc
lock
jno
insb
rcrb
pop
addr16
in
bound
movsl
ja
mov
lock
repnz
jne
aad
adc
pushf
and
xchg
xor
jle
push
dec
push
sub
mov
bswap
inc
dec
or
xor
mov
xor
into
mov
adcb
ficoms
add
xlat
sub
jae
xchg
daa
inc
bound
fidivl
push
mov
loope
sbb
cmp
sbb
push
and
pushl
add
push
repz
lsl
pusha
sarl
jb
jne
bound
mov
jmp
cmp
jne
aam
add
mov
outsl
dec
pop
xlat
les
add
ljmp
xor
inc
test
lods
jo
adc
sti
popa
mov
sub
mov
jne
divl
cmp
and
fdivl
shr
jge
cmp
mov
and
or
add
mov
push
sbb
lods
mov
sub
add
and
fwait
xchg
lods
inc
pop
sti
or
testl
js
jae
mov
xor
fisubs
movsb
dec
adc
push
adc
dec
and
xchg
sarb
adc
daa
mov
push
incb
cmpl
fildl
in
cmpb
shlb
outsb
inc
dec
fildl
inc
inc
inc
arpl
andb
pop
cs
js
gs
adc
js
insl
js
shlb
ret
xchg
lea
out
inc
loop
or
jae
sbb
cs
sbb
add
pop
iret
xor
sbb
and
mov
aam
cmp
pop
js
movntps
lea
pop
subl
push
cmpb
lea
pop
imul
mov
mov
mov
pop
lock
daa
and
push
xor
dec
jle
push
jo
ljmp
add
daa
cmpsb
push
fs
adc
in
nop
fmuls
sahf
add
rolb
jne
cmp
rcll
cmp
repnz
adc
and
xchg
push
sahf
push
dec
divb
xchg
mov
cmp
dec
xchg
cwtl
sub
inc
jne
and
cmp
les
cwtl
mov
mov
cmpsl
subb
fdivrs
test
sbb
movsl
or
ret
in
sbb
inc
cvtps2pd
movsb
lock
cmp
and
push
rorl
call
fwait
rclb
das
mov
mov
movsl
ljmp
mov
push
pop
inc
dec
iret
nop
cmp
mov
mov
imul
and
dec
or
dec
out
lret
outsb
pop
xor
outsb
push
call
inc
mov
adc
sbb
xchg
xchg
movsl
test
sub
add
jge
mov
fmull
orb
xchg
in
sub
cmp
inc
mov
xchg
sbb
fcmovbe
cmpsl
shl
das
fdivs
test
jb
sbb
dec
pop
and
push
cmpsb
in
or
data16
jo
jl
mov
pop
out
jae
dec
adc
fistps
ds
adc
jp
scas
adc
cmp
pop
fdivs
ds
sbb
mov
mov
sub
les
xor
repz
lds
lods
xchg
ja
clc
ret
ds
shrb
fldl
sbb
mov
sub
mov
or
sub
insb
sub
or
shll
or
sbb
sbb
or
aad
xor
cmpb
movb
jbe
jmp
xchg
add
xor
scas
icebp
psubq
pop
add
dec
jmp
lods
in
repz
xchg
xor
cmp
sub
xchg
test
rorb
ficompl
mov
pop
pop
jae
ja
mov
jae
add
push
mov
push
cs
adc
or
jbe
jle
cmpsb
mov
mov
cmovae
addl
ret
or
bound
out
or
sub
std
xor
sbb
test
dec
or
loope
inc
jmp
mov
xor
arpl
jmp
pop
movsb
movswl
cltd
sub
mov
das
clc
sub
jo
push
cltd
test
addl
out
lds
xchg
out
pop
xchg
clc
fimuls
pop
and
lea
rol
and
adc
ret
push
xchg
jmp
push
fisttpl
jae
mov
dec
mov
pop
sbb
rcll
pop
dec
jecxz
inc
jb
add
or
stos
xor
xor
loop
fdivrl
das
movsb
sbbl
dec
push
movsl
push
fbstp
push
aam
inc
aaa
push
ljmp
aaa
cmp
les
arpl
ss
rorl
sub
clc
dec
es
pusha
and
fisttpl
mov
or
cs
fldt
stc
fstpl
fwait
jmp
inc
and
cmp
and
lret
and
and
imul
imulb
push
push
insl
pop
sub
sbb
fcoms
add
xlat
xchg
jne
sbb
or
pop
ret
imul
pop
sub
mov
mov
add
dec
lcall
mov
and
xlat
loopne
xchg
xchg
gs
xchg
add
sbb
orb
arpl
inc
cmp
fdivrl
dec
lods
lret
xchg
cs
call
and
mov
dec
dec
xchg
jecxz
in
ja
sbb
adc
mov
dec
mov
inc
push
in
pop
ja
mov
fwait
cmp
cmpsb
sub
or
bound
push
xchg
cmovo
lret
inc
sbb
and
adc
mov
mov
test
in
dec
jecxz
testb
js
add
popa
out
ficomps
inc
add
pop
jno
dec
push
fstl
add
and
mov
inc
push
pop
or
mov
dec
nop
test
inc
ror
sarb
push
jne
jnp
cli
mov
mov
sbb
mov
fs
sahf
into
sbb
push
add
xor
mov
outsl
rcrb
cmp
lcall
or
or
test
fwait
fnstcw
testl
push
movb
adc
push
jge
mov
mov
cmp
inc
lahf
and
mov
mov
scas
add
insb
cmc
sub
gs
in
or
scas
adc
inc
testb
cli
jmp
and
or
loop
add
or
sub
test
test
insb
insb
adc
adc
mov
xchg
sar
arpl
push
xchg
xchg
dec
mov
test
inc
loopne
adc
push
cmp
fists
addb
cmp
mov
pop
jmp
orb
jmp
mov
xlat
sub
mov
mov
add
jne
mov
sub
imul
push
adcl
call
adc
or
addr16
xor
pop
test
bound
mov
fisubrl
push
and
xor
mov
notb
cmpsb
test
fs
leave
sub
insb
add
outsl
xchg
daa
mov
pop
mov
je
dec
jne
je
ret
jecxz
fwait
popl
repz
dec
pop
add
imul
lds
adc
call
sahf
add
mov
les
in
xor
mov
enter
and
push
lret
stc
and
and
imull
jno
cmp
mov
add
add
lfs
push
xor
add
push
cwtl
mov
fstl
mov
push
or
xacquire
lock
leave
pop
mov
add
insb
cld
lea
mov
aas
jnp
and
adc
hlt
out
sub
jmp
jmp
dec
inc
xor
xor
mov
jle
dec
xchg
cmp
add
shlb
inc
pop
faddl
divl
jo
push
insl
hlt
imul
adc
push
push
add
inc
push
ja
inc
es
pop
pusha
jmp
mov
icebp
pop
outsb
sbb
xor
cli
or
add
lretw
push
pusha
mov
mov
xchg
sbb
adcl
jb
mov
rclb
add
push
test
add
pusha
aaa
pop
idivb
roll
sub
lea
and
pusha
icebp
cmp
jl
xchg
sbb
cmp
or
xchg
and
mov
shll
mov
adc
add
mov
or
orb
andl
add
fimull
cmpsl
rcrl
push
mov
xor
or
pop
or
add
or
repnz
xor
dec
je
dec
out
pop
jmp
cmp
je
mov
test
jbe
testb
add
jge
cmp
push
or
adc
nop
push
mov
je
mov
cmp
insb
dec
mov
je
cmp
ret
and
cmpsb
add
movsb
push
mov
adc
dec
loop
fistps
je
out
aam
xor
or
jne
in
xchg
popf
ffreep
imul
das
add
sub
ret
and
push
add
cmpb
cmp
and
jmp
mov
popf
popa
loope
inc
lds
xchg
gs
mov
lahf
mov
nop
test
pop
add
mov
add
push
movsb
ss
add
lods
pop
sub
pop
and
push
in
push
push
xlat
or
loopne
lcall
dec
sbb
add
xchg
scas
ret
add
jecxz
sub
fldl
xorb
mov
add
push
addr16
shll
or
iret
stos
sbb
mov
cmp
mov
lods
add
inc
push
packuswb
mov
push
sub
jnp
mov
add
inc
mov
sub
add
clc
mov
push
pushf
pop
sub
cwtl
sub
sub
jmp
fs
jg
dec
lret
loopne
mov
push
mov
loopne
out
movsl
sbb
or
inc
and
or
push
andb
jl
jne
sti
ficoms
je
sbb
xchg
jne
cmp
sub
js
xchg
scas
cmp
push
cmp
mov
cmp
shlb
ret
adc
aas
aam
ror
call
cwtl
lret
ds
push
xchg
xlat
clc
mov
adc
cmp
je
add
sbb
mov
pop
icebp
jl
mov
and
adc
mov
or
jmp
sbb
jo
mov
in
movl
sahf
movb
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
jmp
cmp
xor
push
add
push
je
add
arpl
in
ja
add
cwtl
mov
xor
mov
xchg
add
cmp
mov
mov
mov
or
pushf
testb
fldl
insb
mov
flds
adc
je
push
fs
inc
imul
pop
inc
or
test
mov
adc
or
nop
and
xchg
and
pop
add
imul
push
add
sub
xlat
js
mov
pop
inc
jecxz
xchg
test
cmp
and
inc
pop
ja
cmp
addb
push
fldt
aaa
push
cmpsb
lds
loop
push
fwait
enter
scas
insb
xchg
sbb
fdivrs
pop
sarl
lods
add
sub
mov
push
push
outsl
adc
sar
es
orl
dec
cmp
lods
incl
cmp
cli
cmp
push
mov
or
mov
xor
or
lcall
out
pop
and
ficoml
push
xchg
add
ds
sbb
push
xor
js
daa
pop
mov
adc
sbb
sbbl
pop
sbb
xchg
clc
or
dec
ret
bound
subb
sbb
or
loope
xchg
std
divl
ret
push
call
enter
or
xor
cmp
jo
adc
ljmp
jl
or
mov
and
and
clc
jne
sub
loopne
add
pop
pop
daa
jmp
xchg
xor
mov
nop
jno
push
aas
xor
rcr
push
cmc
push
cmpl
push
je
movsb
lock
push
test
push
out
dec
sub
out
fisttps
std
sub
ret
jne
cs
push
and
pop
cli
cmpb
push
push
dec
dec
inc
mov
faddl
test
inc
push
movsb
or
or
in
xlat
pop
adc
or
mov
pop
inc
jbe
jnp
jne
xor
jne
in
mov
subb
push
int3
mov
loope
mov
mov
mov
xrelease
jl
mov
aas
lret
inc
add
or
iret
fisttps
adc
cmpb
and
push
pusha
add
sarb
test
mov
call
cmp
xchg
push
pop
push
inc
fcom
ljmp
mov
dec
mov
fisttps
pop
push
adc
adc
sar
sub
ror
sub
rclb
dec
mov
outsl
inc
fisubs
mov
inc
sbb
test
cmp
mov
add
cmp
and
inc
or
dec
xchg
adc
cld
aam
inc
ret
outsl
push
pop
data16
fcmovnu
push
sbb
inc
dec
das
pop
dec
xor
pop
js
pop
das
inc
mov
inc
loopne
mov
rcr
aad
jo
inc
push
dec
in
sbb
inc
push
inc
dec
add
mov
xchg
dec
add
push
lcall
pushf
xor
outsb
pop
xlat
ljmp
inc
adc
or
cmp
and
xchg
inc
cmp
cmp
mov
sbb
ds
cmp
orb
push
sub
test
repnz
outsl
ljmp
flds
in
cmp
jnp
inc
idiv
clc
dec
and
mov
push
bound
mov
jns
xor
cli
cmp
fiaddl
in
mov
pusha
push
sti
iret
les
and
pop
dec
imul
sub
jmp
adc
aaa
inc
cmp
cmpsl
es
dec
xor
rolb
in
xchg
adc
or
scas
and
addl
cmpl
enter
dec
lret
outsb
dec
add
test
dec
dec
mov
cs
fsubs
ret
cmp
mov
push
sub
adc
and
retw
pop
mov
pop
xchg
lea
inc
pop
inc
and
sub
mov
pop
sarb
int3
test
aam
fistps
xchg
xchg
aaa
xorb
xchg
mov
hlt
pop
call
jns
mov
jle
addb
addl
shl
pop
shrb
fiadds
push
or
sbb
std
sub
add
repnz
outsl
xchg
mov
add
pop
mov
enter
mov
sub
mov
andb
faddl
test
mov
jmp
mov
cmp
cs
mov
sbb
xor
add
in
add
inc
test
jne
js
add
mov
push
mov
loopne
imul
mov
or
icebp
or
sbb
mov
sub
daa
push
inc
cmp
je
and
pushf
sahf
jg
lea
es
test
bound
rclb
xchg
fsubrl
mov
push
outsb
inc
xor
inc
out
pop
or
adc
add
cmp
mov
add
inc
outsb
lods
add
sbb
xchg
or
add
nop
add
pop
ret
frstor
sahf
or
stos
or
daa
or
adc
ret
shll
adc
add
xor
test
or
adc
or
jnp
add
xchg
pop
push
fstl
pop
addb
jl
xor
adc
addr16
fs
rcrb
xchg
popf
movsl
pop
arpl
jle
inc
test
es
push
pop
je
or
or
dec
push
jae
pop
xor
sub
cmp
out
testb
je
mov
or
rolb
pop
ja,pt
addr16
cmp
xchg
mov
hlt
lods
inc
loopne
mov
or
dec
aam
push
push
call
fcoms
inc
dec
pop
lahf
divb
cli
push
adc
sbb
inc
push
push
loopne
dec
xor
inc
iret
cmc
je
addb
cmp
xchg
cld
adc
and
outsl
add
mov
xchg
clc
sub
pop
cmp
je
pushf
int
cmp
xor
mov
dec
and
mov
xlat
adc
je
mov
push
mov
sti
nop
fbld
nop
pop
push
add
or
pop
mov
lcall
es
sub
dec
mov
shll
adc
push
sbb
mov
imul
adc
cmp
ret
lret
pop
dec
push
pusha
xchg
push
mov
add
test
icebp
pop
popf
add
dec
in
sub
dec
aaa
dec
inc
enter
cld
icebp
in
fistpl
outsb
pop
je
mov
movb
ja
mov
pusha
add
push
jbe
push
dec
sahf
push
jne
sub
bound
mov
push
cs
and
faddl
or
mov
mov
xor
leave
pop
loopne
cs
je
mov
subl
add
mov
sbb
or
nop
cltd
sbb
mov
sub
testl
and
setnp
push
xchg
xchg
out
cmp
mov
pop
or
cs
pop
pop
dec
movsl
and
pusha
jmp
xchg
sbb
data16
data16
add
inc
js
pmaxsw
ror
xor
xchg
sbb
loope
mov
imul
adc
dec
pop
pusha
push
out
or
cwtl
imul
mov
jbe
sbbb
lds
xor
rorl
xor
aaa
add
shll
inc
aaa
xchg
cmp
stos
cmp
shll
decb
sbb
jns
imull
or
jecxz
rclb
insb
mov
ret
pop
adc
cmc
mov
out
pop
adc
pop
or
inc
mov
fisubrl
jnp
sbb
add
mov
adc
pop
inc
and
jae
or
das
fmull
add
or
dec
mov
or
adc
inc
popf
dec
or
cmpb
push
inc
loop
testb
jbe
or
es
push
sbb
orb
adcl
sbb
push
mov
ja
add
cld
mov
repz
imul
call
pop
rorl
in
and
cmpb
aas
into
punpcklwd
in
inc
sub
movsl
les
pop
enter
movsl
ja
or
and
mov
inc
adcl
inc
xchg
or
cmp
jg
rolb
add
inc
pop
or
inc
mov
les
lret
test
sub
test
push
pop
and
insb
mov
lock
test
sbb
fisubl
nop
pop
pop
cmpsb
jo
sbb
movsl
test
repnz
test
cmp
cmp
cld
add
push
popa
inc
shlb
and
dec
es
aad
out
pop
xchg
outsb
or
clc
mov
ret
stos
neg
fs
mov
and
push
addr16
and
xor
jp
mov
pop
das
add
rclb
je
popa
xor
adc
adc
daa
mov
mov
mov
ret
jae
mov
dec
stos
pusha
mov
imul
int
adc
insb
push
js
push
mov
push
aam
and
pop
dec
lret
add
addr16
inc
xchg
out
js
lock
dec
or
imul
lock
les
lahf
add
add
arpl
adc
pop
movsl
pop
shl
pop
sbb
orb
jmp
clc
push
mov
push
dec
lret
in
or
xor
mov
bound
push
pop
in
xchg
fnstsw
call
add
push
sahf
lods
jne
xchg
adc
adc
xchg
sbb
sbb
push
sub
add
add
mov
icebp
ret
lock
test
adc
mov
data16
add
clc
push
jb
dec
and
inc
or
loope
dec
popf
data16
lods
or
mov
inc
fucom
sbb
mov
push
fucomp
adc
or
cld
adc
lock
add
outsb
cmp
inc
pop
sub
inc
sub
out
gs
adc
cmp
jl
mov
push
xor
in
jle
push
mov
push
cmp
inc
shl
add
adc
inc
in
pushf
movsb
mov
or
or
outsl
inc
push
or
add
leave
mov
mov
mov
int3
add
bound
cmpsb
clc
sarl
shl
ljmp
test
xchg
js
jg
jne
add
dec
dec
pushf
shlb
cmpsl
adc
test
lock
inc
fwait
and
ficomps
lea
adc
push
push
inc
loope
mov
jmp
sub
mov
imul
aam
mov
add
cmp
and
cwtl
add
adc
or
inc
push
adc
filds
push
call
jge
addb
jb
sarb
xor
dec
add
xchg
add
mov
sbb
or
loopne
jmp
fwait
pop
add
sbb
push
mov
daa
movsb
enter
inc
std
add
dec
mov
push
call
xchg
sub
sub
cmp
push
mov
or
dec
js
push
sub
cmp
aaa
call
fistps
sub
das
in
or
inc
inc
xchg
sarb
sbb
push
inc
or
dec
std
insb
popa
addl
leave
repnz
inc
fsubr
pop
es
push
cmp
in
adc
mov
outsl
or
les
loopne
sbb
mov
jge
xor
pop
je
add
sbb
sub
jb
je
mov
bound
xor
and
mov
inc
or
push
push
or
les
ss
inc
rol
lods
ficomps
sub
sbb
or
sbb
pusha
xor
xchg
test
cmpl
adc
push
rolb
or
pop
mov
sub
push
ja
cmp
rorl
push
push
addr16
stos
jge
orl
push
fsubr
fcomps
pop
faddl
loopne
outsl
and
pusha
idivl
ret
xor
add
or
enter
inc
int
xchg
pushf
lea
stos
in
push
std
dec
jle
lock
sahf
sti
jmp
mov
test
mov
and
mov
push
int
adc
lahf
mov
test
enter
pop
cmp
add
cmp
xchg
or
loope
mov
mov
andb
sbb
xor
js
or
mov
adc
adc
js
jne
jbe
in
pop
push
imul
in
call
add
lcall
sti
inc
mov
addb
clc
mov
pusha
xor
pushf
or
shlb
pusha
hlt
inc
xor
nop
shlb
and
dec
add
sub
and
and
xchg
xchg
dec
das
xchg
aam
inc
adc
add
ret
loop
test
push
add
sub
popf
les
adc
cmpsl
ljmp
add
gs
cmp
iret
stos
pop
test
adc
sub
std
or
xor
push
pop
movsb
inc
or
add
inc
push
scas
pop
mov
jae
mov
inc
shl
or
cltd
pop
add
cltd
mov
fildl
push
repnz
out
insb
add
rcll
sbb
cltd
int3
shlb
enter
cmc
fwait
clc
xchg
push
inc
int3
test
mov
pcmpeqd
sub
iret
aam
jle
cmp
add
adc
or
add
pop
mov
pop
aaa
lock
je
push
jo
inc
shlb
add
daa
out
jle
iret
adc
mov
jb
cmp
sub
or
push
loope
jb
rcrl
fcmovnbe
ret
sbb
cmp
cmp
jle
and
sahf
js
or
nop
cmp
shrb
or
add
roll
or
or
sarb
sub
push
add
push
dec
inc
dec
jl
pop
xchg
in
jbe
mov
jb
add
cmpsb
adc
sbbb
mov
sbb
es
or
pop
imul
mov
dec
mov
mov
dec
mov
add
inc
cmpb
or
cli
pop
inc
jae
notl
mov
jmp
add
std
inc
dec
lcall
hlt
lcall
sub
dec
ret
pop
pop
xchg
and
and
daa
inc
cmp
pop
shrb
add
push
xchg
xchg
mov
push
jno
mov
sbbb
cmpb
and
test
add
and
or
aaa
cmp
jecxz
cs
outsb
xchg
mov
cmpsl
cmp
jg
mov
andb
adc
jle
es
xorb
add
sbb
sub
dec
sti
and
bound
dec
je
add
pop
fcmovnu
sub
jmp
ret
loope
mov
cmp
dec
pop
add
mov
ja
dec
push
add
jle
push
jmp
mull
stos
aaa
xchg
lods
pop
addl
inc
sbb
push
jae
sub
and
or
dec
dec
pop
mov
mov
test
cmp
inc
pop
add
and
mov
enter
or
popa
leave
push
out
in
mov
or
dec
test
add
jmp
insl
insl
push
and
or
dec
mov
loopne
xchg
inc
cs
inc
sbb
aas
mov
call
xorb
xor
xchg
jne
xchg
and
push
sub
adc
add
mov
pop
loope
mov
out
or
and
inc
pop
ja
sub
or
dec
xchg
or
cmp
and
es
mov
sub
push
push
mov
and
aas
pop
fiadds
imulb
mov
xchg
repnz
iret
fldt
aad
xor
test
sub
mov
pop
bound
adc
jnp
andl
xlat
sbb
mov
sbb
sbb
push
arpl
sub
push
adc
aaa
sub
sub
push
xchg
rolb
bnd
jo
std
fmuls
adc
xor
push
fimull
cmpl
dec
jle
dec
adc
add
icebp
in
sub
in
dec
call
push
enter
sbb
ret
aad
movswl
or
dec
lods
fsubrs
test
or
ret
fdivrl
lods
sub
sub
fidivrl
add
movsb
sbb
push
fiaddl
mov
cmp
push
and
mov
imull
mov
rcl
xchg
xchg
or
inc
mov
inc
int
or
jl
addr16
or
cmpxchg
or
es
mov
jo
nop
or
cs
cmpsb
cmp
cvtps2pd
dec
cmp
and
inc
loopne
out
dec
lcall
test
ret
pop
sbb
add
jge
inc
and
xchg
xor
dec
pushf
in
and
add
mov
in
dec
lahf
outsl
adc
cli
fisubl
push
movl
outsl
sbb
mov
cmpl
sub
bound
pop
sarl
or
ret
in
and
sub
pop
push
rcrb
dec
xlat
in
mov
inc
stc
mov
and
loopne
shlb
and
call
rorl
jbe
mov
pop
dec
xor
push
sbb
push
push
mov
mov
sub
and
dec
xchg
data16
xchg
stos
jmp
sbb
lahf
cli
int3
jo
int3
in
pop
adc
add
addr16
and
pop
movsb
xchg
inc
add
jne
js
adc
ret
sbb
nop
loopne
inc
mov
mov
inc
add
arpl
data16
add
enter
push
movb
adc
call
ret
mov
outsl
xchg
outsl
adc
mov
add
add
mov
mov
or
es
sub
adc
or
adc
or
test
adc
xchg
dec
es
je
or
mov
mov
bound
jne
testb
test
test
js
sahf
push
test
and
push
jne
addb
add
fs
pushf
pop
or
out
push
inc
loop
xchg
mov
mov
jl
xlat
pop
xchg
imul
and
mov
mov
xor
call
cmpsl
popa
pusha
xchg
xchg
sbb
push
jne
arpl
and
mov
sub
dec
push
mov
mov
movsl
dec
aam
popa
or
je
movsl
push
aad
cmp
adc
mov
push
outsl
or
xchg
or
pusha
loope
aaa
lcall
mov
xchg
mov
xchg
cmp
pop
loop
push
sub
pop
push
in
in
dec
cmp
das
mov
pop
push
movl
aas
insb
ret
outsl
xchg
sbb
adc
lds
or
loope
testb
pop
adc
pusha
ret
dec
daa
or
xchg
or
add
iret
and
sahf
push
add
fcomp
fadds
sbb
mov
sub
sbb
fistpl
add
mov
loopne
cld
push
outsl
ret
add
mov
ficomps
adc
xor
jae
sbb
aam
pop
je
dec
lock
mov
push
sub
mov
cwtl
hlt
or
dec
dec
push
xchg
ret
mov
sub
js
dec
enter
lods
lret
pop
adc
andl
sub
adc
or
push
jo
add
ret
push
xor
jbe
inc
dec
and
sub
xchg
rcr
cmp
cmp
inc
pop
repnz
adc
stos
add
test
lret
add
daa
add
pop
arpl
and
ret
fstl
and
xor
pushf
push
mov
inc
push
rorb
ret
cmpl
fmull
cmpsl
xor
andb
fstpt
pop
or
in
push
clc
mov
pop
data16
sub
inc
mov
mov
inc
and
dec
inc
and
adc
pop
cmp
movsb
jo
mov
jp
fwait
sbb
mov
shl
fisubrl
xor
cmc
jmp
leave
aas
sub
xchg
pop
cmp
bound
xchg
arpl
mov
sti
push
sub
and
inc
movsl
aaa
sbbb
push
aaa
add
lods
sub
mov
cmpsb
push
popf
sbb
xchg
mov
inc
inc
daa
movsb
lea
mov
push
xchg
movl
imul
xchg
adc
xchg
and
inc
cld
hlt
xchg
adc
fldl
sub
sbb
and
adc
inc
and
sub
pop
ja
cmc
jbe
das
enter
dec
js
push
fstps
les
dec
jg
mov
aam
in
dec
dec
or
jg
mov
std
adc
mov
push
add
insl
cmp
push
add
gs
out
and
or
inc
lods
add
or
je
jns
shl
sub
nop
xor
xor
lahf
out
sbb
and
xor
fwait
cli
jge
pop
outsb
and
or
call
js
dec
je
add
jmp
bnd
in
mov
add
inc
pop
add
and
push
sbb
lods
and
je
lds
cmp
insb
stos
andb
mov
sbb
mov
push
dec
push
push
dec
inc
dec
je
fcoml
pop
add
ss
movl
data16
mov
out
add
aad
aas
ljmp
cmp
js
pop
mov
mov
xor
xchg
hlt
test
xchg
into
or
je
ds
aad
rolb
dec
inc
dec
adc
outsb
loopne
je
adc
cmp
bound
daa
daa
push
mov
sbb
ret
pushf
outsb
push
loop
rolb
adc
subb
out
xor
test
add
mov
popa
rclb
xchg
ficoms
inc
sbb
mov
dec
test
cmp
inc
enter
sub
push
mov
mov
and
mov
xchg
xor
xorb
sub
in
add
sarb
into
mov
jmp
cmpsl
xlat
enter
push
inc
shrb
xchg
push
mov
pop
fdivr
addr16
popf
shrb
aam
add
add
repz
add
push
lret
mov
gs
dec
cld
test
xchg
mov
jge
and
mov
adc
lea
sbb
lods
jmp
cwtl
repz
pusha
cmp
cmpl
andl
arpl
lret
or
sbb
pop
clc
aam
mov
inc
pop
xor
lahf
mov
mov
cmp
pop
rol
adc
mov
pop
test
into
test
mov
push
cld
add
cmpl
sarl
push
inc
mov
rorb
or
gs
jnp
shll
cld
push
jne
shlb
cmp
or
and
roll
shrb
mov
xchg
mov
les
add
jbe
sbb
shlb
jp
pop
sahf
dec
hlt
mov
sub
repz
into
mov
jo
xor
cwtl
leave
add
nop
jmp
xchg
aad
jbe
pop
jge
sbbb
sub
push
data16
hlt
test
sti
push
inc
add
inc
out
jmp
and
add
dec
insb
hlt
push
imul
dec
sbb
popf
xchg
cmpb
test
addr16
fbstp
pop
mov
pop
or
cmpb
add
cmp
push
inc
and
popa
fnstcw
xchg
outsl
lahf
push
fildll
jmp
ja
jmp
mov
mov
add
sti
notl
cmp
setg
jmp
in
out
inc
inc
inc
fimull
push
dec
cmp
setle
xor
movsl
imul
dec
inc
rorb
dec
adc
cld
lcall
mov
imul
and
ret
add
inc
sti
mov
mov
popa
ljmp
or
stos
insl
cmp
dec
inc
daa
lea
inc
dec
and
dec
sti
dec
mov
lods
ljmp
mov
xor
mov
loopne
pop
or
js
dec
imul
fstps
popa
add
inc
adc
adcb
subl
sub
leave
sbb
test
sub
sub
push
push
mov
pop
and
leave
and
and
dec
in
enter
call
aaa
lock
add
mov
movsb
test
mov
xchg
sbb
adc
ds
cmc
push
in
insl
sub
push
jne
test
movsl
xchg
icebp
xor
sbbl
or
add
sub
mov
or
push
push
jb
sub
or
stos
xchg
pop
or
add
mov
or
pop
add
jnp
push
loope
add
lock
std
pop
lds
scas
shlb
dec
push
sbb
out
sti
daa
inc
push
jns
add
divb
sub
lods
or
xor
imul
xor
mov
rcll
jmp
test
lret
cmpsb
xor
push
push
adc
sbb
mov
mov
in
pushf
test
xchg
sbb
pushf
sbb
jl
pmulhw
cs
add
out
movsl
flds
add
dec
push
push
jecxz
idivl
or
push
sub
stos
push
pop
in
popa
in
push
dec
sub
cltd
mov
mov
in
lea
xor
nop
pop
bound
sbb
pop
cmp
or
sbb
add
movsl
mov
outsl
sbb
add
pop
iret
push
mov
pop
cmp
jne
jo
mov
add
mov
jmp
dec
stos
and
clc
xchg
test
add
xor
jg
push
ficoms
jo
sub
inc
sbb
or
lock
daa
xchg
dec
or
dec
push
cmp
popa
pusha
je
cmpsb
add
cmp
adc
push
sbb
and
pop
dec
cltd
mov
sarl
iret
dec
test
cli
sbb
es
xor
sub
xchg
testl
jg
dec
or
pop
cmpsl
jne
add
out
add
minps
shll
pop
sub
into
cmp
loope
arpl
or
js
pop
inc
pop
scas
sbb
fdivl
or
push
jnp
mov
sbb
test
test
add
adc
adc
lods
lock
mov
pop
sub
cmpsl
sbb
push
clc
pop
inc
roll
jle
mov
rorb
rcrb
pushf
xchg
xchg
and
dec
pop
dec
pop
mull
push
xorl
pop
adc
add
enter
push
push
shlb
ja
and
mov
imul
in
and
jbe
insl
jle
sub
cli
pusha
nopl
dec
pop
pop
lcall
mov
fldl
nop
stos
pop
es
pusha
push
out
lods
call
out
incw
std
push
or
hlt
jb
aam
rolb
stos
sbb
popa
and
xchg
out
cmpb
inc
movsb
jecxz
fdivs
inc
xchg
pop
imul
xor
inc
push
and
inc
scas
pop
cmc
xor
lret
dec
sub
pop
cld
shll
cmpsl
add
pop
push
pop
lods
inc
mov
adcl
pop
lods
and
pusha
add
add
sbb
popaw
adc
mov
test
xor
or
rcr
lods
cs
cli
rcrl
mov
cmpsl
inc
dec
jne
mov
ss
push
dec
mov
xor
mov
sub
mov
outsb
or
adc
out
cwtl
adc
jg
fistl
je
inc
out
fsubrp
inc
pop
loopne
push
xor
in
adc
push
sbb
insb
into
jg
push
jbe
cmp
addb
push
in
mov
mov
xlat
add
push
pop
adc
push
inc
inc
repnz
mov
xchg
lret
imul
or
xchg
fidivrl
movsl
xor
jne
bound
fwait
mov
or
sbb
lods
insb
repz
mov
outsb
dec
sar
and
shrl
or
test
nop
add
xchg
jl
sbb
jecxz
nop
xchg
adc
imul
test
movsb
ret
sbb
and
insb
testb
jmp
adc
jmp
pop
and
dec
or
push
fsubs
fistpll
mov
add
jo
test
movb
pop
arpl
ret
and
or
sbb
loop
addr16
lds
sbb
and
ljmp
leave
je
add
sbb
pop
pop
xlat
and
jno
and
mov
xor
cmp
push
mov
loope
cmp
pop
loop
mov
push
push
sbb
mov
gs
or
or
ja,pn
or
add
popf
sbb
adc
adc
jbe
mov
arpl
int3
push
pop
and
les
cmp
sub
push
fdivs
mov
and
adc
adc
orl
in
and
inc
jmp
enter
cmp
inc
adc
add
sub
jo
ret
fimull
ret
mov
jp
mov
add
inc
cli
cwtl
push
inc
outsl
lea
add
stos
jne
adc
push
add
dec
sub
rorb
ret
test
call
movsb
stos
fisubrl
jmp
inc
or
inc
sub
dec
adc
cmp
xor
and
xchg
je
add
add
stos
sbb
or
xchg
test
mov
push
xor
xor
aaa
push
push
dec
jns
test
add
sbb
add
inc
decl
addr16
xchg
adc
sub
je
adc
cwtl
add
call
testb
xchg
ss
add
and
jmp
dec
add
test
cmp
sbb
hlt
push
cmp
inc
loope
add
pop
inc
inc
pushf
mov
pusha
jne
push
push
inc
pop
pop
es
mov
mov
push
inc
je
cmp
jnp
and
mov
aas
add
adc
push
pop
cwtl
imul
nop
data16
or
mov
mov
popf
add
inc
and
insb
jnp
jge
push
sub
mov
clc
repz
test
cmpb
pop
enter
add
mov
xchg
add
ret
xchg
cwtl
sub
inc
lcall
push
jecxz
mov
and
and
adc
lahf
dec
jmp
sub
xor
xchg
and
push
cwtl
daa
loopne
test
inc
and
mov
jg
mov
mov
incb
mov
mov
push
sbb
sarb
cmp
mov
jp
js
pusha
fmuls
movswl
jo
test
mov
das
das
clc
mov
sub
adc
clc
cmpb
icebp
outsb
add
mov
popa
jne
jb
or
loopne
lea
or
inc
jl
test
mov
idivl
add
pop
out
xchg
cmp
sub
sbb
or
test
pop
adc
cmpsb
test
xchg
pop
or
or
adc
mov
mov
jmp
icebp
add
cld
or
clc
enter
out
xor
add
insb
lret
xchg
push
outsl
dec
or
lahf
dec
repnz
jno
inc
pop
sub
adc
push
mov
leave
and
mov
pusha
sub
cltd
movsl
dec
outsl
mov
adc
scas
xchg
lods
pop
pop
inc
pop
repnz
out
insl
fadds
sbb
add
pusha
psrld
fdiv
shr
pop
jp
and
and
repz
movsb
cmp
pop
andl
sub
and
adc
into
test
push
push
sbb
lods
test
add
adc
add
xor
cmpsl
ja
repnz
lock
mov
out
push
inc
ja
je
out
and
movsl
sbb
sahf
mov
cmpl
test
ss
repnz
xchg
shlb
jne
mov
jo
int3
ret
xlat
pop
rclb
sbb
mov
or
faddl
je
je
cs
inc
or
fwait
mov
push
daa
lds
adc
pusha
sub
imul
dec
mov
cmp
je
sbb
mov
lea
das
int
adc
sbb
sbb
cmpsb
xor
mov
ja
pop
sub
rcr
jmp
hlt
adc
shlb
sub
outsl
mov
inc
bound
lock
test
lods
mov
cmp
sbb
dec
faddl
es
jmp
cmp
mov
push
andb
and
jns
mov
mov
mov
call
mov
mov
mov
cmpsl
sub
add
sbb
dec
pop
outsl
and
add
push
pop
xor
fildl
push
stos
mov
or
push
add
push
inc
adc
push
ret
and
xchg
test
imul
cmp
test
pop
adc
mov
jne
push
inc
cmp
xor
mov
cltd
mov
add
dec
xchg
ljmp
inc
sbb
arpl
pop
dec
gs
pop
mov
xchg
and
jge
sub
icebp
fisubrs
fnsave
jmp
roll
and
adc
out
inc
loop
sub
jmp
add
or
pop
push
dec
popa
adc
aad
fdivrl
pop
xor
sbb
sbb
sbb
inc
or
and
inc
out
xor
roll
push
inc
mov
sbb
or
lods
adc
pop
sub
and
addb
test
daa
push
cmp
js
sbb
call
pop
push
pop
cmp
pop
lret
and
hlt
ss
jo
or
adc
and
or
fidivrl
inc
insb
mulb
dec
cmp
cmp
fdivrs
out
and
test
jno
or
loopne
xor
subl
adc
sar
add
xlat
and
cmp
adc
ret
aam
pop
in
jae
push
sbb
clc
loop
mov
jmp
mov
jmp
push
sbb
test
es
add
and
mov
mov
cmp
jnp
jle
les
ljmp
mov
xchg
lock
add
loope
jb,pn
add
jmp
in
lahf
push
add
iret
es
lret
fsubrs
adc
andb
add
cmc
fnsave
cmp
test
and
pop
loope
ja
pop
pop
or
cmp
mov
xabort
jne
daa
test
xor
in
add
addb
jmp
cs
lods
imul
adc
lea
inc
jno
inc
sub
out
push
adc
mov
pop
sbb
mov
adc
mov
dec
pop
bound
sub
sbb
push
lcall
dec
add
rorl
inc
es
mov
cwtl
or
ret
add
pop
cld
es
mov
or
inc
xchg
cwtl
popf
rorb
inc
jae
insl
xor
and
or
mov
ret
push
adc
fcomps
push
inc
xor
push
rolb
mov
add
pop
pop
scas
adc
adc
pop
nop
mov
xchg
test
adc
pop
sbb
and
dec
mov
mov
movsl
lea
push
stos
adc
adc
cmpb
mov
jl
xchg
aad
and
sbb
je
je
pandn
in
rol
cli
add
call
xchg
dec
jmp
jno
or
addb
rolb
ss
inc
dec
aas
dec
inc
xor
je
xor
xor
lds
inc
add
les
ds
add
sub
aam
lds
mov
push
in
push
push
pop
cmpsl
ss
addr16
imul
test
or
fcomps
or
mov
push
and
sarl
movsb
xor
mov
dec
cmc
dec
rcpps
sbb
or
dec
or
mov
adc
cmp
enter
sbb
fwait
inc
test
cltd
inc
decl
pop
sub
ret
pop
dec
lods
daa
mov
push
in
test
push
inc
cmp
insl
jge
adc
add
je
dec
insl
stos
insb
or
sbb
jp
gs
sahf
mov
dec
rcrl
and
adc
push
or
faddl
sbb
push
sar
sub
or
lods
loopne
push
das
sbb
mov
and
bswap
dec
add
lock
aas
xor
repz
inc
sbb
push
or
rol
lock
sub
mov
lahf
jp
loopne
sub
jecxz
xchg
es
or
sbbl
js
xor
xchg
inc
shrb
and
mov
mov
inc
fisubrl
sbb
sahf
push
push
push
push
lea
dec
popf
push
stos
pop
popf
mov
enter
mov
sub
loopne
pushf
into
pop
add
jnp
push
mov
movsb
test
pop
fadds
pop
sub
inc
aas
pusha
fld
or
mov
jnp
pop
pop
or
mov
fnstenv
mov
and
push
xchg
stos
arpl
mov
inc
dec
ljmp
pop
test
sbb
sub
inc
inc
cmp
and
imul
pop
sub
push
adc
aas
and
add
call
dec
in
inc
jg
clc
push
fs
mov
daa
push
and
test
inc
push
sbb
sub
cltd
or
jmp
repz
cmp
jne
arpl
push
aam
mov
inc
imul
xchg
push
add
mov
mov
punpckhdq
clc
ror
or
ret
mov
push
add
add
dec
inc
add
pop
xor
pusha
adc
fwait
push
dec
sbb
push
stos
sbb
js
nop
ret
cld
push
push
sbb
mov
jne
shlb
icebp
sbbl
mov
leave
pop
push
add
push
dec
inc
adc
push
adc
fidivl
sub
add
or
ret
adc
inc
pop
adc
in
or
sbb
jo
and
add
pop
mov
cmp
push
xchg
sbb
fidivs
mov
inc
cmp
inc
data16
and
adc
hlt
repz
xchg
into
inc
or
mov
gs
lcall
xor
or
je
movswl
add
jmp
cmpw
cmpsl
add
sbb
push
shlb
dec
push
xor
push
pop
or
or
dec
cmp
push
xchg
dec
xor
add
daa
mov
outsl
xchg
mov
add
popa
jle
push
ret
cmpl
or
pop
inc
nop
cwtl
or
mov
je
cwtl
mov
dec
fsubs
cmp
test
dec
ret
cmp
rcrl
adc
daa
pushf
out
add
jnp
xchg
xchg
adc
enter
or
addb
lret
jb
inc
jle
cs
mov
push
sbb
add
inc
cmp
and
xor
inc
and
adc
and
bound
xchg
lret
jbe
adc
xchg
int3
enter
lea
adc
jl,pn
fs
mov
add
inc
mov
rcrl
rol
in
subb
imul
dec
popf
outsl
loop
mov
mov
lahf
mov
test
mov
aad
aaa
ret
pshufw
addl
mov
push
repz
push
hlt
jmp
jo
adc
cmp
or
cmp
inc
ss
cltd
ljmp
inc
xchg
fiadds
pop
cmp
add
pop
ret
xlat
mov
divb
and
dec
sub
dec
ss
jge
mov
adc
addr16
xchg
mov
add
out
rclb
test
rcrb
mov
scas
aam
mov
stos
xor
push
lds
mov
mov
xchg
stos
pop
sbb
sub
dec
cmp
inc
jl
xor
mov
jne
daa
cmpb
adc
and
and
pop
sub
lock
xchg
adc
xchg
jne
dec
or
add
fwait
nop
inc
push
out
andl
pop
fldcw
adc
cmp
in
je
mov
sub
or
inc
inc
sub
add
pop
push
test
pop
pop
js
push
fdivrl
mov
or
mov
int
leave
sbb
aaa
sub
inc
xchg
lea
aam
adc
adc
in
sahf
add
push
dec
cli
mov
lcall
loopne
mov
ja
cmp
or
xchg
cs
fbld
cmp
and
push
pop
push
sub
dec
push
or
cmp
pusha
js
inc
adc
and
ret
inc
jne
mov
adc
iret
add
inc
sbb
int3
ret
pop
cmc
push
rorb
or
and
and
and
dec
xlat
push
and
push
sub
inc
mov
or
push
lea
adc
test
dec
pop
movb
ljmp
loopne
push
rol
add
mov
add
subl
pop
jg
mov
sbb
sbb
cmc
push
clc
shrb
aaa
push
fs
inc
xchg
adc
inc
rcrb
sbb
test
pop
bound
pop
push
in
xchg
add
adc
xchg
push
inc
sub
add
pop
sbb
push
lret
xchg
pop
adc
ljmp
cmp
xchg
pop
and
push
cmp
loop
dec
in
in
aam
out
cmp
sub
mov
cs
mov
aaa
nop
xor
sub
orb
add
pop
bound
icebp
add
arpl
push
xor
push
bound
fcoms
fnstsw
dec
pop
je
rolb
and
mov
mov
dec
adc
mov
addb
and
loopne
add
pushf
sub
sbb
popl
pop
sub
ret
xchg
mov
mov
shrl
pop
mov
or
je
adc
bound
pop
sarb
adcl
sbb
pop
inc
pusha
xchg
push
or
pop
mov
sub
or
sbb
add
stos
push
jns
aad
mov
daa
jo
aaa
add
add
ret
shrb
add
cmpsl
pop
xchg
mov
sbb
adc
es
jcxz
out
fidivs
movb
addr16
jle
mov
jecxz
xor
pop
xchg
jne
mov
aam
cld
and
xchg
xor
hlt
aaa
push
and
js
cli
sbb
fadds
jne
xchg
and
imul
cli
pop
xchg
add
or
dec
add
sbb
les
data16
out
movsb
pop
pop
xchg
sar
hlt
dec
jle
xor
xchg
das
push
imul
das
mov
mov
es
or
lds
rcrb
jo
push
xor
and
cmp
and
ret
imul
ret
adcl
xchg
mov
pop
mov
loop
inc
cmpb
ljmp
jno
in
mov
adc
faddp
xorl
fsub
and
pop
mov
adc
or
rorl
loop
and
or
inc
push
leave
sbb
addr16
adc
into
xor
dec
jecxz
jns
jns
add
mov
outsb
xor
push
or
pop
or
mov
mov
sbbl
js
mov
jno
push
inc
and
movsb
loope
sub
les
or
insl
aam
jae
and
xor
mull
push
xor
jns
cmpb
adc
sub
and
push
jne
push
sbb
add
das
xor
or
repnz
dec
dec
push
jmp
filds
idivl
mov
adcl
into
jnp
or
add
add
cmp
jmp
cmpl
lock
sarl
jmp
in
andl
stos
jne
lods
add
xor
insb
adc
or
call
ljmp
int3
je
xor
xor
rorl
sarl
pop
pop
xor
scas
add
inc
adc
xchg
and
or
loopne
inc
sarl
inc
lcall
outsl
frstor
ficomps
mov
imul
test
out
add
pop
mov
js
subl
and
add
int
cmp
shlb
fistl
lods
dec
add
jae,pn
lods
xchg
popa
xor
xor
mov
sbb
cld
fucomi
rclb
push
je
adc
pop
jmp
add
mov
mov
addr16
push
aam
push
or
out
lahf
or
add
inc
orl
push
shlb
daa
clc
testl
into
add
or
pop
inc
push
es
pop
dec
push
sbb
pushf
pop
test
add
adc
iret
adc
ss
jns
test
mov
pop
clc
insb
or
mov
push
jne
sti
jo
adcl
and
and
and
addr16
repz
subb
iret
sbb
je
xor
jecxz
jne
push
and
adc
add
inc
jge
pop
ret
aam
xchg
cmp
inc
aam
sbbb
icebp
inc
inc
leavew
push
jne
xchg
dec
sub
xchg
inc
push
pusha
push
mov
mov
lea
aaa
pushl
cs
push
pop
outsb
icebp
and
push
and
jb
xchg
out
push
pop
ret
popa
jg
push
int
icebp
xor
ds
xor
inc
jle
je
cmp
iret
pop
arpl
je
xorb
push
push
cmp
pop
inc
outsb
out
cld
mov
leave
loope
mov
fisttpll
inc
rcrl
addr16
jo
pop
or
cld
push
adc
inc
adc
xor
sarl
subb
adc
inc
add
or
stos
rcrb
mov
cltd
xor
mov
mov
xlat
push
mov
fsubrp
mov
inc
jmp
lret
jne
cmp
lea
out
add
push
inc
and
lret
call
aam
or
pop
pop
mov
sbb
or
ffreep
inc
xchg
test
cmp
pop
sarb
add
sub
inc
xchg
lock
jg
les
dec
ret
sbb
add
pushf
cltd
xor
and
push
orl
mov
mov
xchg
mov
nop
xchg
pop
popf
jmp
sub
and
mov
xchg
daa
and
sub
aad
and
sub
outsb
leave
sahf
push
mov
mov
pop
gs
ret
testb
adc
mov
loopne
negb
or
ret
mov
dec
je
dec
out
xor
sbb
not
mov
nop
dec
add
xchg
loope
push
mov
xor
jg
jmp
sarl
mov
mov
jge
pop
js
push
pop
scas
int3
push
inc
adcl
mov
sbb
lea
and
add
nop
or
pusha
andb
cmp
loopne
lea
loopne
in
sbb
shlb
pop
or
loope
lock
add
fcomps
add
shl
fistl
sbb
push
xor
inc
jne
xor
daa
mulb
cs
adc
jne
daa
pop
xor
cwtl
ljmp
mov
inc
jmp
mov
cmp
or
inc
nop
por
push
ss
push
and
push
lock
lcall
xorl
fdivrl
js
pop
xchg
xchg
loopne
aaa
push
fs
and
adc
popa
add
ret
add
testb
adc
or
dec
aas
push
or
adc
in
popa
es
mov
lods
add
dec
fisubl
jo
jge
pop
adc
pusha
outsl
shl
leave
rclb
and
ret
pop
sub
xchg
push
cmp
cmpb
insb
rorb
mov
jg
sub
arpl
and
and
adc
xchg
mov
mov
fcompl
dec
cmpsb
in
inc
test
push
push
dec
xor
fisttpl
enter
dec
push
push
test
movsb
fdivrl
shlb
stos
arpl
divl
into
cmp
in
jno
ret
adc
dec
inc
jmp
add
add
pop
xor
pop
scas
mov
call
dec
mov
lret
sub
imul
and
push
cmp
subl
sbb
push
repnz
pop
xchg
cmpsl
das
mov
insl
mov
inc
ds
adcl
mov
loope
cmp
test
add
mov
hlt
out
and
inc
ja
jns
inc
dec
or
aas
inc
jmp
push
xor
nop
andl
clc
sub
fcmovb
ret
push
enter
popf
sub
inc
inc
push
sub
dec
sbb
test
gs
or
xchg
sub
les
cltd
push
mov
loopne
outsl
cmp
add
xor
sub
mov
je
xchg
adc
dec
jne
cmp
add
ja
mov
bound
sti
mov
hlt
add
xchg
ss
mov
loop
je
testb
sbb
and
xchg
sbb
jne
or
or
mov
jne
or
lock
cmp
into
les
or
fisubs
out
and
notl
adc
out
mov
aad
inc
xor
sub
xchg
or
daa
and
es
cmp
cmc
dec
int3
iret
ficompl
repnz
dec
cmp
or
push
adc
push
out
inc
scas
sbb
jecxz
xchg
lock
add
and
or
push
fsub
add
adc
ret
add
movsl
push
xchg
add
xchg
jns
fmul
lock
xchg
push
gs
or
clc
dec
jbe
push
orb
xchg
pop
adc
mov
adc
loop
or
adc
or
or
xor
xchg
lcall
adc
mov
roll
dec
pop
sub
in
mov
xchg
test
jnp
iret
lcall
jnp
inc
adc
cmpsl
mov
insl
inc
movaps
sub
stos
sub
push
xchg
xchg
std
inc
mov
cmpsl
sub
cmp
add
sbb
add
cmp
daa
xchg
out
mov
clc
lock
cmpsb
cmp
call
les
movsl
rorb
fmul
or
xchg
dec
fmul
aam
popf
or
fstl
mov
mov
push
inc
int3
push
aam
mov
cmp
jmp
mov
push
inc
mov
cmp
mov
push
imul
incl
add
shlb
lods
loop
lods
inc
out
push
or
mul
and
or
cmp
push
inc
pushf
or
mov
mov
dec
icebp
ss
mov
clc
or
xor
adc
add
jb
mov
mov
lret
fs
xchg
cmp
mov
mov
dec
push
imul
add
bound
shr
sub
mov
ret
test
es
or
mov
jge
adc
or
jnp
mov
mov
cs
mov
mov
push
xor
lahf
and
jle
adc
adcb
push
rolb
dec
sub
mov
xchg
mov
ja
push
adc
fmul
adc
ja
or
dec
ja
and
into
adc
mov
add
mov
mov
loopne
sti
dec
jb
rorb
or
cmp
fsubl
in
xchg
cmpsb
sbb
int3
or
fcmovbe
insl
sbb
xchg
cmp
clc
dec
fstl
sbb
mov
rorl
or
xor
push
and
xor
add
xchg
push
push
and
sub
lods
mov
movsl
jmp
adc
icebp
mov
add
add
out
pop
pop
mov
xchg
lock
sub
cmp
in
inc
xlat
add
inc
xchg
jge
xor
xchg
cmpsl
dec
or
sbb
int3
repz
repz
ss
dec
pop
add
cmp
rcll
out
popa
push
fcoms
int
enter
nop
mov
dec
gs
push
les
jns
xor
add
sub
push
dec
mov
push
dec
pusha
sub
pop
rolb
pusha
andb
int3
sub
mov
test
sub
inc
sub
dec
jmp
cmp
xchg
sbb
dec
push
andl
sub
loopne
mov
test
fnstcw
dec
or
mov
scas
loopne
test
cmp
adc
mov
push
clc
xchg
sub
test
fmull
xchg
sub
mov
adc
mov
mov
arpl
inc
xor
jno
fs
cwtl
xchg
cmpsb
adc
nop
cltd
jo
ss
arpl
dec
ret
push
imul
push
arpl
leave
flds
gs
nop
gs
mov
repnz
sti
xchg
rclb
rcll
neg
cmpb
arpl
jmp
add
push
sbb
mov
div
sub
ret
je
push
adc
xchg
fwait
cltd
adc
add
inc
or
repnz
pop
add
mov
push
in
xor
insb
sbb
dec
in
scas
test
imul
xor
inc
aam
xor
xor
adc
xor
jne
dec
inc
arpl
lea
enter
popf
jg
insl
pusha
cmp
sbbl
aam
cld
data16
fnsave
mov
push
add
out
sub
lds
jb
sarl
pop
aam
add
push
inc
ret
ret
movsl
das
and
loopne
dec
xor
repz
dec
movsl
loopne
adc
inc
int
rclb
xchg
sub
and
xchg
or
sbb
enter
pop
cltd
arpl
test
dec
and
adc
jg
rclb
pop
pop
test
insb
xor
je
or
fistpl
lcall
xchg
cmpl
ljmp
sbb
test
lar
jp
data16
dec
adc
push
add
jne
and
inc
test
lret
add
mov
cmpb
sbb
push
add
add
adc
xor
push
loop
or
or
adc
std
sub
jae
dec
add
and
cmp
inc
outsl
cmpl
xchg
add
inc
cmp
lods
mov
inc
addr16
xor
pop
mov
and
pusha
jge
mov
push
pop
sbb
inc
push
aam
lods
push
ficoms
mov
pop
daa
push
ljmp
nop
inc
and
jecxz
push
fsts
ja
xchg
add
rolb
mov
mov
jl
outsl
sub
dec
and
adc
sub
lcall
stos
fcoms
push
add
and
jo
mov
sub
test
cmp
sub
xor
dec
aaa
xor
ret
or
out
xorl
mov
adc
sub
or
or
dec
xorl
jecxz
or
jmp
sbb
arpl
test
stos
mov
and
mov
adc
push
call
or
adc
filds
dec
pop
jbe
popf
mov
xor
test
repnz
add
cmpl
je
xor
sub
es
adc
movb
or
or
inc
pop
xor
or
mov
or
pushf
iret
xlat
insl
and
mov
movl
mov
xlat
es
cmp
inc
inc
sub
dec
in
movsl
sbb
inc
pusha
add
xchg
dec
dec
fisubrs
or
pop
pop
pop
shl
pop
repnz
mov
adc
add
loope
addb
imul
xchg
pop
dec
add
dec
and
dec
nop
sub
rclb
daa
cltd
cmp
push
cmpsb
inc
pop
out
dec
jae
call
fistl
jle
pop
sub
fwait
ss
dec
js
jle
push
and
push
dec
push
push
pop
mov
mov
cli
lahf
shll
cmp
jge
cmpl
je
jno
cltd
push
pusha
sbb
mov
pop
pop
das
sbb
dec
add
test
push
dec
and
das
and
in
dec
sbb
call
ja
push
xor
and
add
bound
les
xchg
and
stos
mov
mov
movsl
pushf
dec
iret
lock
rcrb
inc
sbb
cwtl
or
repnz
mov
aad
cmpsl
aad
or
lds
pop
add
in
orl
push
or
test
pop
sbb
push
outsb
in
add
sub
pop
dec
mov
jne
push
out
and
pop
cltd
por
cmp
mov
sbb
jnp
dec
pusha
push
ds
add
pop
or
add
pop
and
lods
test
dec
ret
sub
fwait
mov
add
sub
dec
mov
call
pop
dec
mov
sub
mov
add
mov
sbb
xchg
rol
hlt
repz
call
mov
add
sub
or
insb
adc
loopne
stos
push
sbb
movswl
adc
lahf
push
or
push
adc
mov
adc
mov
out
test
push
movntps
mov
test
sub
cli
lods
pushf
mov
mov
aas
xchg
jo
sub
cmp
jl
sub
inc
push
dec
enter
outsb
push
or
fcoml
jns
sbb
scas
or
add
cmp
add
pop
push
test
push
js
aaa
es
popa
call
add
pusha
bound
sbbb
or
inc
fimuls
ret
sbb
mov
cmp
je
pop
arpl
fimuls
adc
pusha
fsubrl
jp
mov
mov
inc
gs
mov
outsl
ret
mov
adc
ret
ret
push
popa
inc
mov
inc
shrl
nop
mov
jmp
jae
fld
adc
enter
aam
dec
pop
das
add
das
imul
or
xor
lret
sbbb
fwait
ss
out
xor
loope
jmp
rolb
or
jb
lcall
xor
fdiv
int
pop
nop
sub
mov
call
add
and
and
pop
inc
add
push
and
xchg
cmp
aaa
sarb
roll
or
add
fstl
xchg
out
push
push
xchg
shlb
mov
xchg
dec
inc
dec
push
xlat
or
xchg
inc
imul
inc
sbb
mov
add
jle
cld
dec
iret
xchg
sbb
inc
fs
dec
dec
sub
aas
lods
inc
add
sbb
or
js
mov
sahf
mov
fsubrs
sub
adc
mov
scas
repnz
mov
jmp
mov
orl
inc
mov
jbe
test
adcl
pushf
xchg
cli
subb
adc
divb
sub
ret
push
add
mov
push
pop
les
leave
mov
roll
out
addr16
adcl
fwait
xlat
aad
imul
iret
xchg
cmp
push
push
add
or
adc
push
jmp
je
loope
xor
clc
mov
sbb
pop
inc
cld
aam
sbb
cwtl
push
inc
sbb
push
test
inc
sbb
add
loope
flds
cwtl
pop
fs
push
mov
pushf
addr16
pop
inc
outsl
rorb
inc
fidivs
into
inc
inc
pop
or
or
jmp
outsb
adc
push
pop
jmp
push
and
cmp
mov
jl
pcmpgtd
pop
xchg
sub
jmp
scas
lcall
iret
adc
push
or
fs
insb
ss
call
jmp
shrb
add
mov
lea
mov
insb
xor
dec
adc
and
cmp
add
insb
lods
pop
cmp
jne
mov
jl
lock
push
cld
bound
mov
imul
push
pop
rcrb
add
loope
adc
or
push
je
inc
xor
lods
int3
insl
mov
pop
lods
xchg
and
or
mov
mov
xor
hlt
mov
arpl
out
mov
imul
inc
cmp
ds
push
sbb
xchg
jecxz
fisubrl
jl
sbb
xor
mov
call
faddl
or
fstpt
adc
cli
pusha
fs
lods
adc
inc
jbe
push
inc
jl
daa
sub
inc
dec
push
cmp
pushf
add
inc
mov
into
dec
insb
jp
push
test
pop
sub
dec
pop
push
adc
pop
dec
jno
aas
fdivrs
lock
xlat
imull
mov
jg
enter
pop
mov
pop
test
jo
imul
sahf
sub
push
and
in
icebp
lcall
push
push
jns
cmp
jl
je
clc
shlb
lret
loope
fs
or
cmp
roll
mov
adc
xchg
out
sbb
mov
pop
shlb
sbb
mov
mov
lock
scas
jmp
pop
mov
int3
adc
push
pop
adc
and
das
xchg
add
and
sbb
cli
and
outsl
inc
and
pop
stos
push
jne
iret
pop
pop
arpl
popa
cmp
out
jl
daa
cwtl
imul
cmc
mov
sahf
push
outsb
and
lret
dec
mov
pop
daa
data16
fistps
and
dec
or
mov
xadd
add
hlt
jge
imul
or
inc
cmp
adc
cltd
outsl
push
mov
inc
popf
inc
movb
mov
add
fs
push
jg
sbb
adcl
movsb
inc
cmp
lock
xor
jg
and
das
mov
pop
mov
in
fs
dec
jb
mov
idivl
call
popa
fisttpll
xor
test
cmp
call
sbb
push
inc
mov
mov
pop
xor
dec
mov
push
xor
xor
cwtl
dec
sbb
dec
xor
mov
sti
incl
add
addl
jle
shlb
insb
push
dec
insb
outsb
jg
sub
test
push
in
xor
add
xor
js
fdivr
inc
adc
add
pop
add
and
in
jo
and
pop
aaa
or
or
mov
sbb
fs
shrb
sbb
mov
xlat
add
mov
inc
jl
or
xchg
aam
xchg
fsubrs
xor
pop
push
mov
adc
adc
xor
ja
and
scas
adc
pop
jb
ret
daa
in
jg
jmp
mov
cmp
clc
jb
scas
addl
add
pop
mov
rcrb
add
rolb
add
or
outsb
leave
or
enter
fs
mov
fs
inc
adc
inc
jge
sub
jecxz
push
or
pop
bound
orb
imul
mov
or
loopne
pop
test
int
test
push
pushf
rolb
xor
xor
xor
dec
pop
aad
sbb
inc
push
push
movlps
pop
icebp
and
sub
jne
add
sbb
fdiv
xor
jle
ficoml
pop
sub
push
pusha
movsb
add
idivb
pusha
fidivrs
dec
jne
mov
xor
sahf
or
push
or
sub
mov
adc
fadds
mov
dec
xchg
inc
push
add
xchg
adc
cli
mov
pop
jnp
add
jmp
into
push
pusha
pop
add
into
stos
fdiv
cmp
sub
jo
pop
sbb
pop
test
add
mull
cmp
imul
add
mov
movsl
xor
mov
fdivrs
push
or
push
push
xchg
inc
daa
or
inc
imul
dec
and
dec
loopne
or
xor
or
mov
lea
mov
pop
add
insb
cwtl
test
push
icebp
xchg
mov
push
dec
jmp
xor
sbb
and
and
dec
add
inc
sub
in
pusha
or
lds
sbb
rcll
xchg
push
or
aas
push
lds
push
or
sbb
imul
or
or
rcl
push
adc
aas
and
cmc
rcrl
push
mov
add
shll
js
jmp
mov
daa
sbb
or
mov
inc
sub
or
push
call
adc
or
adcb
mov
sbb
push
pop
add
cmp
mov
push
push
inc
mov
jmp
lcall
sbb
loopne
or
sbb
pop
out
adc
push
loop
test
loopne
pusha
xor
mov
sti
jp
xor
clc
sub
xor
xlat
add
movl
out
mov
in
or
jne
add
add
or
bound
push
pushf
xor
xchg
scas
jge
xor
out
push
fwait
sub
add
lods
aam
cmpsb
int3
xorb
loopne
imul
ficoms
sbb
and
push
pop
add
aaa
mov
mov
sub
aas
adc
adc
add
jmp
into
xchg
jns
jg
jo
shll
jp
jg
mov
addl
lock
ss
loop
xorl
rol
pusha
push
sti
jmp
cmc
fimuls
sbb
mov
push
push
sbb
inc
es
dec
aam
mov
scas
adc
or
call
xchg
xor
sbb
mov
add
add
push
gs
fsubr
icebp
pop
enter
nop
mov
mov
loopne
cs
pop
out
cwtl
out
add
mov
adc
das
stos
push
sub
jne
pop
sbb
push
jno
rclb
rcrl
dec
pop
das
imul
jl
add
sub
xchg
adc
jne
and
mov
or
dec
fdivr
test
sbb
push
dec
cmpb
adc
dec
adc
gs
das
loope
lahf
pop
cmpsl
shl
mov
sbb
jae
or
push
jbe
push
ret
ret
mov
icebp
pop
int3
test
rcrb
jge
pop
inc
jl
scas
push
xchg
push
lea
mov
dec
jbe
ror
rclb
jno
xchg
int3
mov
mov
or
aaa
adc
enter
lock
mov
lea
filds
sub
testb
adc
and
and
xchg
leave
add
inc
sbb
jae
fs
add
insl
popf
mov
je
negl
jo
sub
mov
mov
add
jmp
jmp
xchg
nop
cmp
int
cmp
jmp
sub
or
xor
adc
jge
repz
adc
dec
mov
xchg
negl
shrb
sub
cld
ja
sahf
inc
shll
out
cmp
inc
or
jbe
dec
xchg
aad
mov
fiadds
mov
add
into
add
iret
add
adc
lods
lods
inc
adc
inc
shlb
adc
aad
dec
push
pushf
or
mov
in
mov
and
xchg
fcoms
or
sbb
mov
adc
dec
and
pop
cmp
pop
cmp
push
push
rolb
inc
jo
in
pop
sbb
fmull
ljmp
sbb
mov
add
and
inc
or
ljmp
or
sub
inc
inc
pop
pusha
jae
mov
in
sbb
lods
push
add
sbb
in
imul
ja
mov
fstl
adc
ret
cmp
dec
add
pop
enter
and
test
nop
pop
inc
adc
loope
pusha
add
dec
popa
sti
pop
cmp
jne
and
adc
push
push
in
or
add
shrb
sbb
inc
call
or
pusha
sub
pop
in
dec
mov
shlb
call
lret
sub
mov
iret
data16
add
mov
into
in
jae
add
arpl
or
fstps
test
test
xor
int3
adc
fcmovb
and
pushf
adc
cmp
jb
and
insb
adc
bound
xorb
xor
add
or
and
xchg
mov
imulb
push
lahf
pop
cmp
mov
add
loope
sub
shrl
pop
or
pop
pop
mov
das
add
jnp
push
outsl
sub
add
jae
dec
sbb
mov
inc
or
adc
and
sbb
sar
imul
xlat
mov
insl
rcrl
xor
and
jge
fisttpl
xchg
or
adc
std
iret
popf
icebp
pushf
ret
mov
inc
fs
addr16
dec
jmp
outsl
mov
jns
dec
jge
and
xchg
push
icebp
push
pushf
popa
addr16
and
outsl
sbb
sbb
adc
cs
lret
cs
sbb
mov
mov
xchg
mov
jno
test
scas
or
inc
inc
push
mov
lds
mov
pop
and
xchg
shlb
dec
test
and
push
fdivrl
or
test
adc
dec
xchg
and
mov
xor
inc
call
inc
decb
hlt
hlt
lock
fs
lock
push
inc
xor
inc
dec
pop
and
mov
pusha
aas
mov
add
sahf
xchg
je
cmp
jnp
dec
clc
repz
aam
fsts
jp
sub
rolb
and
fisttpll
or
dec
cmpsb
push
mov
push
orl
pop
add
repnz
adc
mov
mov
push
lods
push
addr16
and
inc
nop
mov
testl
fidivrs
ror
movsb
xor
fcomps
daa
push
pop
or
icebp
pop
lret
les
movntq
dec
adc
push
int3
sbb
jmp
pop
sub
xchg
push
or
pop
mov
push
rolb
shrl
push
das
inc
and
les
add
dec
cmp
js
add
pop
jl
mov
add
pusha
daa
movsl
sbb
mov
adc
into
adc
sbb
adc
ja
mov
xchg
sbb
push
adc
lret
les
dec
push
sbb
std
sbb
add
jl
xor
into
push
mov
test
mov
jle
pop
jecxz
in
push
aaa
push
push
insb
js
xchg
stos
xchg
push
iret
push
or
sub
cmp
xor
lahf
fldt
pop
cmpl
xchg
adc
loopne
inc
sbb
insl
dec
xchg
sub
inc
gs
add
sbb
push
shrd
cli
inc
insl
xchg
stos
jle
icebp
sub
rorb
push
xchg
and
mov
mov
xchg
xor
aad
cltd
nop
mov
jne
dec
jb
and
cmp
gs
popa
push
pop
inc
sub
out
or
and
nop
xchg
ficomps
in
push
xchg
shlb
dec
ja
or
lock
add
and
mov
adc
stc
push
add
xor
sub
mov
int3
or
dec
cmp
pop
pop
lret
mov
hlt
in
and
je
mov
and
xor
enter
and
pop
xchg
lock
sub
adc
sahf
inc
sarb
movl
or
daa
dec
push
sbb
jge
jbe
jne
mov
mov
sti
xchg
lret
jae
cmp
jne
pop
jp
fldl
cmp
mov
and
lods
cmpsl
or
pusha
adc
add
sub
push
lret
shr
imull
mov
sbb
adc
mov
xor
jo
jb
push
pop
adc
clc
or
iret
inc
loop
dec
icebp
mov
movsb
add
test
mov
adc
rclb
cli
adc
pop
jecxz
ret
out
push
mov
insb
pop
cvtps2pd
cmp
test
sbbb
or
jp
cmp
add
addl
pop
scas
daa
push
arpl
and
and
mov
pusha
iret
inc
xorb
js
adc
push
push
add
loope
dec
jne
xor
xchg
jl
loop
pusha
scas
rorl
inc
inc
cmc
movb
or
xor
int3
adc
mov
and
cmpsl
mov
adc
add
addr16
ljmp
push
fiaddl
enter
enter
int
xor
push
adc
mov
cmp
jnp
out
leave
lret
inc
enter
js
arpl
icebp
sub
pop
popa
jb
mov
sbb
in
push
jp
arpl
aad
lods
xor
and
and
push
mov
xor
outsb
or
dec
push
pushf
push
pop
test
clc
cmp
xchg
dec
jo
movsl
iret
add
loopne
rcr
lea
pop
subl
inc
clc
push
std
mov
scas
dec
xor
enter
push
pusha
adc
inc
add
mov
rcrb
xor
in
xchg
pop
and
clc
add
imul
lock
idivl
ss
es
push
push
call
jg
mov
scas
sahf
mov
push
mov
lock
mov
and
push
and
sbb
push
sub
sbb
out
cltd
rcll
pop
push
mov
rclb
mov
xor
or
mov
aad
and
inc
pop
aas
aad
mov
insb
loop
pop
adc
je
pop
add
sub
add
xor
orb
pop
adc
sub
mov
adc
and
mov
mov
cmp
jae
pop
cld
and
add
lret
lods
lea
sub
inc
pop
ror
aam
das
fadds
js
fidivrs
insl
mov
inc
in
iret
xor
ret
xor
pop
sub
xchg
cld
add
push
aaa
mov
cltd
sub
inc
push
cltd
shrb
popa
add
mov
push
push
test
sbb
mov
popa
push
ljmp
mov
nop
or
sbb
popa
inc
pop
ss
xor
aaa
xorb
or
dec
das
inc
jle
push
pop
xor
jmp
xchg
xchg
or
add
dec
or
and
outsl
fidivrs
or
lahf
add
jg
inc
dec
insl
sbb
mov
adc
and
xchg
add
mov
sub
sub
adc
test
xor
cmp
sbb
dec
ret
or
jnp
insb
jns
mov
outsb
pop
aas
xor
shl
cmpsb
lret
rorl
inc
rclb
fldt
push
jae
pop
push
test
arpl
mov
xor
loopne
mov
mov
lods
jge
ljmp
ljmp
icebp
mov
and
popf
hlt
xchg
sbb
outsl
mov
jne
cmp
lahf
test
sbb
jne
dec
lcall
movsl
adc
dec
push
push
sub
in
mov
push
dec
jno
idivl
dec
sti
cmp
mov
push
sti
je
packssdw
incl
inc
sahf
lcall
aam
adc
lods
out
add
nop
iret
shlb
out
lods
add
and
sbb
sbb
mov
ss
jo
mov
xabort
mov
add
and
inc
add
int
and
aas
sbb
imul
test
ja
adc
mov
aad
cmc
mov
jne
or
add
push
xor
rolb
lret
inc
pop
sub
shll
mov
cmp
jnp
cltd
pop
and
enter
dec
mov
mov
sar
loopne
lods
lret
loopne
inc
loopne
inc
inc
lret
push
daa
imul
cmp
adc
xchg
cmpsb
pusha
sbb
lods
push
daa
loope
inc
js
lea
jmp
roll
or
js
pop
cld
clts
enter
addr16
mov
inc
add
cmpsl
shlb
or
add
repnz
add
sub
add
jg
adc
jo
or
inc
or
mov
add
inc
outsl
pop
mov
lahf
repz
adc
outsl
bound
push
push
push
mov
inc
cwtl
or
mov
sbbl
cmp
inc
mov
sub
inc
adc
movb
push
js
out
ret
xchg
decb
and
pop
push
sbbb
mulb
and
stos
leave
push
sbb
test
pusha
addr16
arpl
adc
push
sbb
xor
lods
push
dec
add
imul
cld
pop
or
and
push
popa
inc
cmpb
mov
outsl
loopne
nop
jmp
adc
test
mov
sbb
and
add
adc
xor
xchg
dec
push
fildl
imul
mov
mov
add
les
sti
cmp
out
mov
jo
cwtl
test
add
push
push
jnp
fstl
shl
mov
lods
push
jnp
push
sub
mov
mov
dec
in
xor
dec
jb
xchg
or
test
js
xchg
mov
mov
mov
add
add
adc
ljmp
dec
dec
push
dec
jmp
pusha
leave
dec
dec
inc
add
insl
mov
insb
inc
mov
cltd
xchg
xchg
in
insb
pop
push
gs
push
jbe
fcmovbe
daa
inc
aad
mov
jae
push
push
divb
xchg
stos
and
xchg
add
testb
inc
in
inc
out
and
xchg
das
ret
inc
and
dec
jae
pop
xor
fmuls
into
insl
mov
rclb
and
add
xor
push
adc
lods
add
mov
push
int
lods
mov
add
mov
jnp
stos
push
mov
push
sub
ret
daa
cltd
mov
sti
repz
sbb
js
cmp
adc
xchg
mov
sub
loopne
push
jmp
jecxz
ret
mov
loopne
je
add
pop
test
cmp
sahf
mov
pop
cmp
mov
pop
sub
push
sarl
adc
ds
pusha
mov
into
xchg
and
das
pop
sbb
push
xor
inc
or
pop
pop
adc
or
test
jb
sarl
lahf
and
cmc
popa
fmull
mov
insb
mov
or
sub
mov
or
push
call
arpl
shr
sbbb
dec
loopne
mov
rol
into
nop
push
sub
nop
cwtl
sub
cmp
push
jbe
iret
cmp
xchg
inc
outsb
adc
xor
jno
mov
add
scas
mov
enter
mov
sub
push
shl
and
mov
sub
enter
nop
mov
cmpsb
xorb
xchg
insb
leave
add
es
imull
ret
push
push
ret
cmpsb
iret
inc
inc
adc
lahf
or
adc
fildll
daa
adc
data16
aaa
ja
outsb
lods
push
inc
jb
mov
shrb
outsl
cmpsl
add
in
xchg
test
cmp
insb
stos
cmp
mov
push
jg
dec
push
xchg
outsl
jbe
add
pop
movsl
in
dec
cmpsb
sbb
loop
and
and
add
leave
notl
mov
test
or
daa
sub
sbb
mov
aaa
loop
scas
mov
enter
or
pop
pop
and
lods
add
and
and
nop
and
push
shrb
addr16
out
imul
lods
pop
mov
pop
fcoms
andb
xchg
add
shll
rorl
or
outsb
sarb
sar
xchg
dec
push
adc
popl
mov
or
dec
lret
add
mov
mov
lret
jns
sbb
popl
and
sub
lea
add
repz
adc
aam
sbb
and
push
inc
adc
imul
lods
aas
pop
sub
cmp
xor
stos
mov
loop
jbe
stos
pop
in
repnz
cmovle
sarb
adc
jge
cmp
or
movl
sub
imul
les
or
out
push
push
or
pop
mov
fwait
outsb
daa
aaa
dec
add
outsl
mov
sahf
lahf
jl
add
adc
cmp
or
or
or
in
pushf
dec
scas
les
lock
aaa
push
cmpsb
fsubs
add
out
inc
mov
mov
mov
scas
adc
iret
repz
sub
xor
cmp
iret
repz
inc
dec
dec
push
movb
xchg
sub
pop
and
jge
sub
mov
sbb
xor
mov
ds
aaa
ret
jl
sbb
xchg
test
or
pop
push
sbb
in
xchg
add
sahf
ret
packuswb
popf
sub
leave
aas
subb
mov
pop
inc
sbb
jecxz
fdivrs
cmpsb
loope
lea
loope
dec
sub
pop
jno
xchg
lock
bound
test
inc
jae
sbb
mov
add
data16
sbb
adc
movsb
jnp
lock
test
sti
repz
test
int
test
and
inc
mov
adc
pop
and
cmpl
inc
cmpsl
dec
push
fmuls
insb
pop
scas
lock
es
insb
test
sub
xor
insb
inc
jle
pushf
mov
sbb
pop
pushf
ds
mov
arpl
adc
fs
ja
xor
fisubrl
mov
aam
adc
mov
xchg
pop
jmp
xor
loopne
add
ja
cmp
addr16
je
loop
mov
jmp
xor
adc
cmp
pop
xor
xchg
mov
adc
xor
roll
xchg
call
cmp
jle
repnz
sub
jle
nop
popf
push
dec
lds
mov
cmp
fs
push
pop
mov
out
fidivrl
loope
and
pop
xlat
add
cmc
push
inc
pop
rcrl
dec
jne
dec
cmp
imul
cmp
ret
sub
push
mov
mov
cmpsl
push
movsb
xchg
loopne
das
testl
in
sub
rorl
cmp
inc
and
pop
addl
jbe
stc
push
and
sbb
pop
test
push
mov
cmp
imul
mov
mov
or
dec
jl
and
push
adc
outsl
mov
stc
int3
mov
cmp
aas
xchg
xor
sbb
push
push
cmp
arpl
adc
pop
jno
inc
and
loop
add
jne
bound
dec
dec
mov
add
dec
stos
push
mov
shlb
adc
movsb
nop
add
sarb
xchg
jl
pushf
clc
daa
popa
es
inc
add
bound
imul
add
sub
pop
ret
jl
fs
adc
inc
movsb
data16
sbb
push
mov
lret
dec
jae
add
inc
adc
inc
inc
xchg
dec
or
cmp
push
mov
jae
inc
or
iret
jmp
cmp
pusha
lret
loop
push
push
and
sti
daa
push
ds
rol
jge
dec
scas
jp
test
fmull
fbstp
sub
loopne
pop
psrlw
out
or
pop
xor
leave
add
mov
push
mov
sub
adc
xchg
adc
jne
out
xchg
jo
test
out
ds
mov
les
clc
movsl
inc
push
cmc
add
je
dec
clc
cld
je
push
pushf
rclb
adc
lds
xor
add
ret
shll
enter
pop
mov
pop
inc
sbb
push
xchg
push
pop
cmp
mov
loop
cmc
sub
sbb
out
lds
add
add
mov
xor
add
pop
ljmp
js
lods
xor
push
mov
lds
in
adc
aad
pusha
call
push
pop
js
int
clc
jmp
scas
cmp
je
test
int3
push
push
pop
jb
jg
and
xchg
aas
jl
and
and
jl
push
and
jmp
jne
js
jnp
jns
mov
dec
sbb
mov
inc
sub
mov
sub
mov
scas
cmp
sbb
mov
mov
push
mov
shll
out
rorl
cmpsl
xor
sbb
or
adc
inc
mov
lea
pop
push
add
add
stos
insl
or
out
sbb
lods
orl
mov
sbb
pop
mov
inc
mov
cmpb
jg
sbb
or
int3
add
imul
or
lock
adc
in
push
scas
pop
lahf
or
pusha
adcl
aaa
xchg
ds
shl
enter
adc
bound
test
or
xchg
movzbl
push
inc
sbb
es
mov
mov
dec
adc
cmp
nop
jg
inc
adc
sub
int
xor
jge
stos
jno
mov
and
lock
dec
xchg
pop
adc
rcl
or
in
pop
call
and
ret
mov
out
bound
mov
insl
enter
mov
xlat
mov
insl
mov
lret
sbb
xor
ja
pop
add
push
push
or
push
xchg
or
push
jmp
sbb
adc
dec
add
imul
int
ret
xchg
fiaddl
andl
push
adc
je
dec
sbb
test
cmp
xor
and
ds
fidivrs
xor
sbb
or
inc
in
movsb
add
sub
aaa
adc
aam
lret
sbb
out
inc
push
das
scas
cmp
dec
and
sbb
ret
daa
push
test
mov
add
cmp
adc
fdivs
jge
inc
push
in
insb
xchg
in
ljmp
movb
mov
lea
push
insl
inc
add
inc
jne
dec
sbb
cmp
pop
pop
or
mov
mov
sbb
test
fcom
add
mov
test
ljmp
pop
mov
les
int
loope
inc
sbb
clc
les
fcomps
and
mov
dec
pop
test
testl
and
pop
mov
xchg
icebp
aas
or
add
iret
mov
sub
inc
or
inc
jns
jl
xor
or
xor
rolb
ds
out
pusha
loop
rol
iret
scas
je
jae
mov
out
xchg
movsb
ficompl
lret
movsb
pop
andl
js
nop
mov
aad
add
add
and
or
int3
push
inc
cmc
xor
sbb
adc
popa
xchg
add
mov
rcll
or
or
aam
push
xchg
or
ds
sub
cmp
pusha
inc
insl
ljmp
xchg
popa
icebp
out
mov
test
popf
jecxz
cmp
adc
xchg
and
mov
movhlps
aam
scas
nop
add
jmp
roll
xchg
lea
ss
adc
lds
sbb
mov
sbbl
sbb
mov
add
push
mov
add
inc
lahf
into
rcrb
xchg
pop
push
mov
loopne
and
es
sbb
stos
popl
and
aad
pop
jl
test
imul
xchg
push
ret
sub
testl
pop
movsl
and
pop
ret
jae
in
add
sbb
sbb
inc
call
mov
sbb
cmp
and
push
or
cmpsl
sub
je
xchg
imul
xor
outsl
fs
fimuls
xchg
or
ror
sbb
push
mov
shll
pop
mov
loope
jmp
push
xor
mov
inc
cs
dec
push
xchg
jb
pop
incl
sti
adc
xchg
jne
mov
fwait
push
push
or
xchg
inc
arpl
push
in
push
orb
pop
shlb
dec
xorb
andb
cmp
add
inc
int
faddp
addb
xor
mov
mov
mov
cmp
and
shrb
push
in
cmp
cmpxchg
pop
loop
sbb
test
push
and
push
pusha
fwait
adc
shl
cltd
xchg
inc
cmp
jnp
jmp
inc
dec
jecxz
sbb
loop
hlt
icebp
call
cs
cmp
mov
jl
andb
or
int3
adc
mov
mov
sbb
push
xchg
dec
popf
sub
in
aam
dec
and
ffree
hlt
cmp
bswap
xchg
sbb
test
jl
and
out
mov
mov
jb
push
in
lock
and
jl
sbb
fbstp
int3
rcll
mov
in
mov
add
lcall
xchg
fcomi
pop
call
inc
bound
inc
andb
adc
xchg
stos
add
scas
nop
hlt
xchg
movb
xlat
outsb
sbbl
mov
nop
push
sti
jo
add
mov
aas
jne
and
jne
mov
in
lahf
jmp
add
mov
or
dec
mov
inc
mov
cmc
push
inc
inc
mov
arpl
daa
jmp
lea
test
rolb
mov
dec
loope
test
cs
mov
and
mov
mov
cmpsl
or
orb
arpl
xor
aad
jmp
movl
cmp
jl
pop
sub
enter
sbb
test
adc
push
je
mov
xchg
adc
ja
lret
mov
test
test
xchg
pop
iret
adc
xor
and
inc
enter
mov
xor
int
imul
inc
bound
pop
xor
cs
or
das
add
movsb
mov
das
inc
dec
dec
or
mov
inc
dec
dec
dec
and
inc
roll
lea
and
pop
inc
jo
mov
adcb
mov
inc
pop
mov
inc
enter
mov
jg
or
fdivs
pop
test
cmp
mov
adc
movsl
and
leave
add
fstps
and
sub
mov
dec
clc
xor
sar
repnz
into
leave
add
leave
add
xlat
in
nop
scas
sbb
mov
fs
mov
testl
add
cmp
lahf
lahf
cmp
mov
sub
loope
ja
add
push
scas
rorb
dec
jg
jne
jbe
add
adc
sbb
inc
lods
adc
lock
push
outsl
cmpl
hlt
fwait
cmp
js
test
adc
or
dec
push
jno
or
sbb
bound
cmp
imul
cs
int3
insl
in
loopne
imul
xor
dec
inc
dec
jo
call
or
insb
into
daa
inc
cmp
std
lret
ja
imul
or
add
xlat
out
shrb
scas
adc
xor
add
hlt
lea
rcrb
enter
or
fs
dec
in
arpl
dec
jge
fwait
in
xchg
push
dec
inc
jmp
loopne
push
aas
std
int3
adc
out
movsl
cmp
dec
and
aaa
int
fcoms
cmp
pop
push
cmp
lods
mov
pop
and
pop
clc
xor
xorl
mov
int
inc
loopne
das
test
adc
mov
into
divps
push
xchg
fbld
dec
adc
pop
sub
out
fmull
lea
dec
xchg
ja
and
jne
dec
cmp
mov
mov
or
xchg
xor
or
adc
or
lock
into
ror
mov
cmp
imul
sub
ret
insb
add
lods
das
mov
int
inc
inc
sbb
subb
cwtl
add
out
pop
or
pop
mov
and
repz
aam
mov
rclb
pop
clc
test
sti
dec
jne
push
dec
or
bound
mov
mov
mov
adc
cmp
cmove
add
scas
stc
inc
loop
mov
mov
test
les
push
mov
push
and
add
xchg
rorb
push
push
and
push
cld
push
mov
call
adc
fisubrl
outsl
mov
mov
daa
je
jne
les
add
xchg
rolb
adc
dec
inc
bound
adc
in
aas
and
fs
incl
ret
or
scas
test
jle
decl
cmpb
mov
inc
or
cmpsl
add
xor
repnz
jns
rcll
rcll
outsb
shlb
adcb
outsb
jne
outsb
add
inc
repz
push
imul
roll
neg
xor
aaa
or
push
xchg
jb
popa
jb
add
test
or
popa
mov
add
push
test
and
pop
push
bound
insb
jnp
pop
mov
lock
add
mov
movsl
adc
fwait
pop
inc
test
and
adc
add
les
or
fcmovnu
cmp
push
inc
fs
arpl
inc
dec
movsb
push
jg
mov
insl
mov
fptan
sub
pop
rcll
aam
pop
gs
add
mov
inc
ljmp
test
test
sbb
in
or
or
out
ret
dec
adc
in
adc
mov
jb
dec
fiadds
lret
aam
sub
and
je
add
mov
add
jmp
add
out
repz
les
call
pop
mov
hlt
adc
fidivrs
in
sysenter
jmp
xchg
adc
out
jns
nop
cmpsb
pmullw
cmpsb
loopne
pop
pop
aad
mov
and
out
lcall
add
and
aam
push
and
filds
loopne
fiadds
push
push
push
aaa
fldt
sub
or
xor
xor
pop
sbb
test
xchg
clc
daa
subb
movsb
adc
or
rclb
sarb
adc
or
pusha
nop
and
cwtl
loop
dec
sbb
mov
dec
inc
xchg
or
xor
add
adc
test
test
in
and
imul
push
push
repz
cmp
xor
mov
mov
or
lahf
out
popf
and
gs
dec
cmp
sbb
push
cmp
add
and
pop
lock
fs
test
sub
push
add
scas
rolb
or
add
mov
ds
adc
enter
or
inc
popf
xchg
test
adc
or
les
and
dec
add
or
or
push
cmp
adc
das
repnz
nop
or
cmp
sub
add
or
mov
or
cmp
pop
popa
add
push
dec
pop
push
jne
pop
arpl
xor
dec
jae
jp
cmp
cld
mov
add
fisttpl
sbb
dec
inc
push
lock
pop
pop
cmp
sbb
loopne
rclb
lock
ds
hlt
enter
push
out
adc
mov
mov
call
add
jo
jl
nop
inc
add
pop
pusha
rcr
cwtl
cwtl
mov
xor
add
and
inc
sahf
out
shll
mov
test
fpatan
pop
jnp
daa
mov
fmulp
push
pop
pop
pop
mov
add
adc
paddusb
add
testb
push
hlt
aaa
pop
xchg
xlat
sarl
pop
es
push
adc
loopne
stc
dec
cld
and
mov
stos
inc
jl
add
xor
popf
fists
add
jo
fistps
pop
lods
fidivl
nop
sub
mov
xchg
add
clc
sub
sbb
outsl
mov
pop
pop
and
js
inc
in
or
add
cmp
dec
in
add
add
push
add
add
addr16
dec
orb
add
push
mov
cmp
inc
and
and
imul
cmp
mov
xor
loopne
es
pop
jnp
es
inc
into
add
mov
test
or
push
adc
push
inc
clc
sub
or
subl
fdivrs
popa
fwait
mov
popa
jo
aaa
inc
or
and
jb
arpl
inc
xor
into
out
or
or
xchg
sbb
sbbb
pop
sbb
fdivs
add
sub
cmp
popa
sbb
mov
sbb
xchg
push
sbb
int
dec
enter
into
push
push
add
push
stos
mov
scas
loop
or
cwtl
xor
clc
push
or
nop
pop
pop
and
cmp
push
fsts
or
dec
adc
and
and
popa
ljmp
push
and
jl
in
xor
or
mov
mov
in
push
imul
jecxz
sbb
mov
in
inc
call
xchg
pop
or
inc
add
push
lods
jo
or
repnz
jo
in
xchg
xor
rcl
outsb
filds
inc
enter
or
add
jmp
mov
adc
fimull
xchg
nop
fs
jo
fbstp
jo
in
or
adc
push
cmc
sti
ret
shlb
xor
xor
sub
cmp
xor
inc
addb
dec
dec
dec
dec
clc
aaa
adc
dec
loopne
push
push
push
push
pop
pop
pop
mov
bound
out
cmc
or
xlat
inc
imul
bound
and
xor
cmp
fcoml
cmp
jmp
out
xor
roll
dec
or
aas
adc
inc
std
jbe
cli
and
cs
in
add
add
daa
mov
jns
and
jp
popf
and
and
jp
rorb
pop
push
and
rcrl
dec
xor
sbb
sbb
test
jecxz
push
rcrb
clc
sub
jge
subb
push
mov
mov
in
addr16
sar
push
inc
imul
sub
cmpsb
cmp
and
mov
jmp
stos
pop
cli
push
sbb
pop
lret
sarl
in
sbb
roll
js
mov
push
add
xor
arpl
imul
out
mov
jmp
inc
inc
std
jo
mov
dec
pusha
sub
inc
lret
and
cmp
or
loope
xchg
nop
out
popa
push
dec
inc
clc
leave
stos
or
adc
adc
aas
les
or
xor
and
inc
inc
cs
xor
fdivrs
sbb
or
inc
addr16
add
sub
dec
aam
inc
iret
insl
or
or
loopne
stc
cvtps2pd
adc
push
icebp
pop
lahf
into
or
lock
sti
adc
jmp
xchg
jl
clc
sub
iret
in
jmp
loope
mov
pop
push
and
into
sbb
mov
out
push
das
test
imul
iret
popa
lock
leave
movsl
xor
dec
lret
jne
lahf
sub
mov
add
rcll
mov
or
jmp
inc
sti
push
add
mov
in
cs
or
pop
add
subl
and
fildl
int3
and
lods
pop
push
inc
test
mov
je
lahf
popa
cli
mov
jle
dec
mov
and
adc
xor
pusha
pop
shlb
add
or
jo
jg
cmp
jg
mov
ret
and
mov
lahf
call
fsubrs
cmc
mov
and
insl
clc
lea
fisubrl
inc
jmp
dec
push
adc
adcl
cmp
insb
add
ljmp
mov
sub
push
in
outsl
rcll
int3
sub
lock
ja
jo
iret
lcall
pop
mov
jmp
in
movsb
mov
in
push
xor
add
pop
leave
pop
cmp
xchg
je
jbe
aaa
in
xlat
adc
in
mov
xorl
push
dec
mov
inc
sub
idivl
aad
sub
dec
pop
mov
push
inc
enter
adc
sub
ja
xchg
mov
fwait
xchg
add
les
mov
aad
xchg
jbe
inc
imul
sbbb
push
ljmp
je
es
outsb
pusha
das
mov
inc
arpl
adc
js
ds
and
fstps
js
add
push
aas
cmp
fucomip
addb
dec
and
cwtl
cld
inc
pushw
test
and
and
mov
and
inc
imul
in
add
add
adc
adc
test
out
aas
aam
pushw
xor
mov
add
dec
daa
or
ss
sarl
cmp
cmp
add
add
pop
xchg
xchg
fsubl
leave
cli
lock
mov
fisubrl
mov
add
cmp
add
lret
data16
jo
inc
inc
mov
mov
repnz
xor
or
add
movsb
add
test
pop
add
icebp
sbb
incb
inc
push
add
jmp
int3
mov
pop
or
addl
fidivrl
adc
mov
pop
jno
imul
xor
data16
mov
inc
xor
add
mov
incb
mov
or
add
rolb
cli
push
mov
in
cmpb
add
push
rcll
imul
adc
fucomi
dec
pop
pusha
sbb
or
ss
sub
add
mov
mov
movsb
mov
popa
add
sarb
das
ret
addb
movl
aas
aas
ret
xor
cmp
fs
adc
lcall
cmpsl
mov
lds
or
daa
je
add
imul
mov
mov
inc
cmp
sbb
cmp
fists
leave
mov
or
jmp
cmp
xor
pop
popf
mov
ret
sub
push
pop
fsubrp
xor
pop
cmp
inc
dec
movsl
cltd
out
pop
xlat
or
filds
inc
jmp
and
and
or
lret
addl
add
daa
inc
xor
adc
outsb
iret
adcl
clc
sbb
mov
xchg
lock
push
jno
test
pop
mov
fucomip
push
or
push
in
jmp
inc
push
or
or
inc
add
xchg
in
add
pop
push
nop
pop
test
pop
sub
ds
dec
sti
xchg
imul
sub
out
inc
pop
adc
pop
jo
push
inc
xchg
pop
push
fcmovb
mov
sahf
outsl
add
push
or
and
hlt
push
mov
xchg
pop
push
nop
je
pop
dec
push
sub
mov
add
movb
les
dec
pop
mov
inc
add
xchg
out
pop
xchg
add
add
pop
and
dec
and
inc
sbb
bound
mov
insl
loope
and
or
hlt
popa
jge
mov
jecxz
push
push
adc
dec
push
je
inc
mov
out
add
inc
in
jne
js
mov
fildll
iretw
push
repnz
out
pop
and
incl
jmp
clc
fdivrs
or
es
inc
in
sub
sbb
test
xor
push
mov
xchg
mov
push
push
mov
jo
and
pop
roll
cwtl
test
daa
jno
jae
xor
inc
mov
pop
imul
push
xor
pop
mov
inc
inc
cmp
push
mov
cmp
jae
mov
mov
jmp
jbe
sbb
and
mov
ret
inc
jg
xor
and
jo
fisttpll
cmp
decb
mov
or
push
or
in
xchg
dec
xor
inc
icebp
dec
or
ds
shl
adc
popa
pop
xor
jg
inc
sbb
xor
ja
xchg
sbb
pop
ret
and
repnz
clc
call
adc
and
sub
add
orb
fimull
sub
and
add
add
call
sbb
add
and
adc
out
dec
adc
cmp
jne
vmread
paddusw
fisubrs
sbb
xor
xchg
enter
clc
pushf
mov
push
mov
daa
test
ja
jo
cmpsb
lret
rcl
lcall
cmpb
mov
mov
insl
dec
add
fadd
sbb
pop
inc
cmp
fstl
dec
bound
nop
ret
inc
or
or
mov
inc
stos
dec
add
mov
sub
movsb
subl
inc
sbb
and
int3
push
mov
in
adc
cmpsl
mov
or
or
and
add
icebp
inc
test
add
adc
dec
imul
pop
in
adc
pop
jge
cld
out
xor
push
call
stos
je
inc
jno
dec
add
xchg
scas
and
sbb
sbb
mov
lods
imul
xor
push
and
cmpl
inc
iret
dec
push
ss
jne
rolb
adc
jle
xchg
int3
inc
iret
add
xchg
mov
je
stc
jle
lock
hlt
enter
sbb
and
popa
das
std
dec
enter
jne
hlt
sbb
mov
inc
call
pop
cmp
inc
cltd
pop
inc
data16
push
fidivrs
sbb
shlb
sub
les
push
sbb
rcll
adc
push
rolb
mov
cwtl
addb
mov
nop
adc
add
cmp
bnd
lock
inc
xor
nop
out
inc
jns
hlt
xor
mov
mov
leave
dec
dec
sbb
add
push
xor
fbld
jae
decl
insl
xchg
test
push
fcomps
pusha
ret
icebp
jns
imul
addr16
jecxz
das
push
sub
lock
pop
bound
orl
jnp
mov
xchg
pop
inc
lock
pop
test
inc
cwtl
pop
add
cmp
and
aaa
pop
push
push
fsubr
repnz
inc
adc
push
fsubrs
cltd
call
je
ficoml
test
push
sbb
roll
clc
pop
cmp
imul
sbb
enter
or
or
hlt
sub
sub
push
add
inc
push
sub
cmpl
lock
ret
pop
movsl
push
or
and
repz
clc
test
cmpsl
and
lea
add
fisubl
sbb
push
lock
push
lods
add
sub
shrb
sbb
insl
pop
pop
mov
jnp
pop
mov
cmp
dec
insl
mov
hlt
hlt
pop
into
hlt
sub
inc
add
rep
lock
hlt
ss
imul
mov
xor
adc
push
sbb
xor
sti
push
cmp
rorl
inc
or
cld
add
jp
or
pop
ds
pop
filds
add
push
push
in
subl
pop
stos
xor
xchg
push
sbb
sar
loopne
adcl
mov
andl
outsl
ja
outsb
aaa
fistpll
movsb
xor
push
pop
loope
jmp
push
sbb
add
rcrb
xchg
jne
mov
add
test
leave
jne
loopne
ret
call
dec
iret
push
inc
pusha
or
or
sbb
pusha
rcl
fwait
sbb
add
sbb
dec
pushf
je
loopne
adc
and
sub
xchg
dec
rcll
cmp
cmpl
add
add
xchg
pushf
or
add
sub
mov
xchg
int3
adc
test
add
push
rcrl
sbb
repnz
in
sbb
add
push
shrl
and
sub
data16
dec
sub
pop
lods
inc
adc
negb
jp
xor
mov
sbb
cld
mov
mov
push
and
wrmsr
add
stos
dec
sbb
lret
dec
clc
dec
mov
push
hlt
mov
sbb
ss
insb
stos
repnz
adc
xor
sti
enter
mov
pop
clc
sub
and
call
aaa
pop
dec
lock
clc
seto
nop
icebp
test
dec
sahf
or
je
dec
xchg
add
clc
arpl
test
pop
add
stos
xchg
pop
inc
and
sbb
pop
push
push
adc
sbb
dec
call
test
pop
dec
add
mov
xchg
or
dec
and
dec
push
adcb
pop
push
shlb
and
push
cmp
rorb
imul
dec
test
add
rcr
cwtl
loopne
fidivs
cmp
inc
stos
add
adc
push
sbb
jl
testb
dec
pop
arpl
je
inc
mov
fsubs
push
bnd
cmp
jge
nop
test
out
push
fs
push
sbb
enter
pop
adc
lcall
aaa
aas
mov
push
mov
sub
sbb
inc
jp
js
or
rcrl
push
sbbl
fadds
les
pop
scas
jecxz
in
and
inc
mov
fs
cwtl
arpl
fs
jl
jp
add
gs
jl
or
rolb
add
loop
out
movl
pop
add
leave
mov
sub
repz
sbb
sub
dec
dec
dec
cmpsl
push
xor
pop
fdivl
cld
sbb
push
loop
das
add
clc
mov
add
xor
js
xor
mov
cld
or
cmp
cmpsb
jns
sub
cld
jmp
add
inc
xchg
bound
nop
push
mov
cmp
stos
add
jmp
dec
dec
es
mov
sbb
pop
pop
adc
push
or
jmp
and
es
xor
adc
mov
xor
fs
or
lret
jle
ret
outsl
add
mov
jbe
cld
ja
sbb
int
mov
xor
inc
scas
or
das
lea
xchg
sbb
inc
sbb
or
adc
add
xchg
or
xchg
or
aas
lret
movl
out
lea
cld
daa
adc
arpl
clc
xchg
jo
lods
jmp
ljmp
or
mov
adc
jno
ds
frstor
push
inc
add
xor
adc
in
add
dec
pop
mov
dec
js
cmp
clc
insl
adc
repnz
mov
xchg
test
leave
adc
adc
pop
jp
aas
push
inc
mov
hlt
adc
cmp
mov
or
popa
imul
daa
or
inc
pop
addb
and
and
push
scas
push
push
dec
mov
or
and
out
jle
mov
stc
cmp
cmpsl
cmp
adc
push
pop
xor
test
cmpsb
add
insb
mov
sbbl
sbb
cmp
xchg
cwtl
cmp
je
adc
xor
pop
mov
adc
ds
adcb
inc
rorb
xor
push
mov
pop
xor
jmp
pop
test
xor
pop
test
mov
adcb
fidivrs
ds
add
inc
inc
push
inc
inc
loopne
or
outsb
add
xchg
dec
xor
xor
jg
int
pop
sub
adc
lock
or
movq
imul
mov
in
cli
test
dec
xor
ljmp
ljmp
sub
lock
pop
cmp
andb
mov
and
sub
rcrl
inc
jne
pop
fcmovnu
fimuls
sub
es
sbb
pop
xor
bound
dec
ss
jl
push
mov
out
movsl
jg
js
cmpsb
push
adcl
pop
push
aas
jbe
xor
dec
mov
add
cmp
ret
mov
mov
ljmp
pop
mov
and
stos
pop
or
loopne
test
jbe
movsl
lahf
out
pop
push
xor
aam
jg
pop
fdivr
mov
daa
cwtl
fisubl
jecxz
shrl
or
out
jmp
out
cmp
shrb
lret
mov
inc
and
mov
push
xor
movsb
inc
cmp
enter
mov
mov
movsl
jmp
add
dec
scas
add
xor
insb
ss
inc
popf
push
arpl
mov
rcrb
clc
and
aam
icebp
ss
and
hlt
mov
sub
lret
ss
adc
mov
jns
nop
jbe
int3
and
mov
pop
and
push
sbb
push
xor
add
in
mov
js
sub
test
mov
xor
mov
push
adc
loopne
xlat
mov
sbb
enter
imul
test
mov
aam
dec
jno
inc
dec
and
pop
data16
loopne
jnp
dec
or
dec
ljmp
sahf
inc
inc
inc
les
add
fs
nop
sarb
or
or
cs
enter
jg
cli
repnz
psubb
or
jo
push
inc
or
int
sub
aaa
enter
loop
sbb
popf
fmull
mov
push
cmp
inc
pop
outsl
shll
es
lret
push
cmp
cmp
push
jmp
and
imul
mov
pop
mov
mov
push
push
add
in
test
daa
lret
fcomi
mov
cmpb
cmpsb
push
mov
push
ja
mov
int3
sbb
push
pop
pop
or
inc
pop
mov
shlb
adc
aas
insb
jae
mov
inc
xchg
jne
in
inc
mov
pop
sbb
push
push
mov
xor
pop
in
add
lock
fisubl
jns
add
movsb
mov
cmp
les
repnz
inc
pop
leave
mov
aas
and
jb
pop
and
xor
leave
inc
cmp
inc
jb
pop
inc
or
pop
dec
add
je
mov
or
xchg
push
sbb
inc
movsb
nop
or
pop
lods
in
mov
mov
jge
mov
jge
bound
mov
xor
jle
stos
add
shr
push
push
push
lahf
add
xchg
xlat
in
enter
jl
mov
add
inc
pop
scas
and
sbb
sbb
mov
adcb
xor
fcmovbe
pusha
fs
xorb
add
push
jbe
mov
sar
jnp
ret
cmp
add
and
xor
xchg
jecxz
je
mov
bound
push
lods
adc
in
dec
pusha
sbb
rolb
sti
mov
pop
mov
lds
movsl
sar
call
cmp
cwtl
pop
adc
pop
pop
push
sbb
add
mov
movsb
ss
repz
mov
mov
adc
adc
loope
cmp
adc
jmp
nop
mov
dec
jne
add
sbb
repnz
inc
push
add
push
lock
std
enter
push
mov
push
jb
pop
or
cld
push
xchg
test
push
sbb
aaa
pushl
dec
xor
inc
pop
inc
add
imul
arpl
xor
add
cs
mov
add
sarl
lcall
les
in
es
xchg
add
call
adc
sbb
adc
sub
mov
xor
sbb
add
jp
testl
in
movsl
mov
lds
xchg
push
dec
or
int3
sbb
inc
es
sbb
daa
es
leave
shlb
lret
enter
xor
mov
pop
and
jle
sbb
notb
inc
cmp
gs
dec
mov
les
mov
xor
shll
dec
xor
gs
push
aam
je
push
jnp
push
cmc
sbb
in
bound
xor
shlb
push
pop
and
int
lret
xlat
add
and
push
xchg
jmp
cmp
imul
or
out
lds
inc
push
gs
push
mov
adc
jmp
rorb
and
cmp
jae
js
sbb
dec
pop
xchg
fdivl
dec
and
es
mov
imulb
dec
add
or
sbb
mov
pop
fcmovnb
push
in
xor
mov
sub
inc
inc
fcmovnu
cmpb
pop
pop
or
mov
ss
push
sub
jle
cld
test
pop
or
or
out
insl
xchg
xor
fsub
adc
push
adc
cmpsl
or
or
pop
iret
add
adc
sahf
pop
leave
dec
and
mov
addb
ret
movsb
add
sbb
clc
and
outsl
pop
jg
add
push
and
pop
push
sub
sbb
mov
xor
jno
sahf
push
xchg
mulb
test
lock
lods
cmp
outsb
push
mov
ljmp
push
pop
xor
cwtl
movl
adc
mov
aas
int3
sbb
or
jne
into
mov
cmc
test
cmpsl
sub
or
pop
cmp
mov
add
fs
nop
push
mov
das
add
xchg
lods
push
sahf
xchg
inc
and
call
xchg
add
add
pop
jmp
ja
sti
mov
cmp
test
mov
sub
test
adc
and
inc
shl
mov
mov
dec
ret
jecxz
pop
inc
sbbl
lret
jle
mov
movb
adc
daa
add
pop
cmp
add
xor
fsubl
add
jl
jle
aaa
dec
xchg
sbb
test
adc
dec
inc
jne
mov
xchg
and
cmp
inc
cmp
sub
test
pop
cmpl
call
cs
test
int3
sahf
out
push
lods
pop
push
cmp
xor
enter
rorb
or
roll
frndint
fstps
or
cmp
int3
pop
jo
inc
xor
dec
orb
mov
add
fmul
clc
or
add
cmp
sbb
add
lret
inc
xchg
xor
inc
jae
push
xor
aas
add
addr16
fildl
lods
repz
addr16
sbb
pusha
cmpsl
pop
inc
stc
leave
cmp
es
pop
sub
pop
insb
mov
mov
xchg
push
lock
push
lahf
je
jmp
ja
add
dec
sbb
xor
cwtl
ret
add
addr16
or
nop
push
test
sbb
add
pusha
xchg
xlat
adc
xchg
mov
mov
shl
clc
and
ret
mov
and
arpl
fistps
hlt
repnz
loopne
inc
stos
hlt
mov
mov
mov
push
pushl
dec
subb
daa
cltd
add
or
stos
and
test
and
or
cmp
jmp
aam
sbb
insb
pop
call
js
int3
insb
ret
lea
iret
cmp
leave
mov
mov
popf
pusha
movsl
pop
push
push
mov
sub
lahf
mov
adc
cltd
cltd
jle
and
jae
jl
js
call
or
and
push
adc
push
out
rcrl
jo
lock
filds
dec
sbb
mov
lret
adc
adc
pop
adc
cmpsb
pop
ret
xor
adcl
sbb
addr16
loopne
xor
hlt
cmpb
push
adc
add
xchg
test
xor
fdivrs
pop
dec
sub
add
jae
adc
pushf
xor
in
add
cltd
jb
or
mov
add
add
add
xchg
jbe
outsb
loope
aad
rcrb
lret
adc
cmp
test
fcoml
xchg
lock
in
mov
lods
popa
inc
sub
outsl
imul
test
sub
jecxz
pop
inc
mov
nop
int3
add
cmp
loopne
add
push
int3
cmp
jp
int
push
jno
and
shll
dec
sbb
pushf
dec
cmp
pop
mov
mov
cmpsl
or
sub
or
mov
test
in
loop
or
cli
data16
cli
jo
adc
push
jge
pop
mov
and
and
inc
or
je
inc
shlb
subb
adc
add
cwtl
addr16
enter
mov
pop
add
dec
test
movsb
push
iret
push
and
mov
movb
pop
dec
out
xor
fmuls
nop
push
add
lret
mov
rol
rorl
pop
subb
add
pop
adc
or
xchg
sub
ret
push
add
xor
push
sub
decl
or
lods
lock
ret
lahf
call
pusha
mov
inc
cmp
pop
test
ret
xor
daa
movsb
xor
push
inc
lcall
pop
ret
ret
mov
rcl
dec
inc
cmp
sbbl
inc
lahf
sub
jne
lea
mov
sti
movsb
inc
add
imul
pusha
cs
cmp
sbb
or
xchg
into
ret
dec
add
iret
sbb
adc
xchg
ds
push
lahf
clc
test
pop
movb
inc
push
sub
inc
adc
add
movsl
or
inc
cmp
pop
mov
push
jmp
ja
insb
fucom
std
mov
inc
iret
or
sbb
insb
adc
lret
adc
fcomps
adc
cmp
inc
out
mov
jl
je
xchg
ficomps
cmp
int3
add
into
add
mov
push
dec
add
sub
mov
mov
cmpsb
inc
mov
in
add
andb
pop
push
dec
jo
dec
loop
sbb
pop
push
inc
mov
insb
das
mov
mov
inc
or
fsubrl
or
add
add
dec
cmpb
inc
jmp
sub
inc
addr16
adc
sbb
sub
adc
inc
or
fsubrl
xchg
lret
subb
add
es
mov
adc
sbb
pop
cmc
adc
fiaddl
gs
cltd
cmp
dec
sbb
xor
inc
dec
inc
dec
daa
inc
sub
push
dec
incl
mov
nop
or
dec
inc
push
and
and
inc
fbstp
sahf
inc
pop
fs
test
push
cmp
dec
mov
mov
xchg
jno
jmp
xor
jbe
add
cmp
leave
rolb
pushf
inc
mov
test
es
aas
jo
sub
enter
jmp
decb
push
dec
pop
pop
in
push
and
shlb
jge
xchg
sbb
cltd
inc
pop
rcl
dec
mov
rolb
mov
and
xchg
test
lret
js
inc
xor
dec
movb
adc
sbb
daa
push
xorb
pop
daa
test
andl
lods
aam
or
in
push
aam
cmpsb
fimuls
orl
ja
ret
stc
and
jb
imul
fs
cli
push
mov
xor
add
out
repz
jmp
sbb
out
mov
lods
adc
pop
addb
add
outsl
or
cltd
ja
fidivrl
in
xor
jne
ljmpw
into
ret
adc
insl
mov
in
jns
jno
adc
loopne
movsb
or
pop
push
mov
or
push
into
or
mov
scas
adc
clc
ds
nop
push
in
aaa
in
or
xor
int
and
insb
push
rorb
jne
je
stos
inc
jp
shlb
leave
push
clc
hlt
test
pushf
lods
addr16
add
dec
mov
orl
sbb
mov
fdivrl
add
dec
or
cmp
jp
loopne
adc
test
cmp
pop
pop
or
xor
inc
clc
cld
push
lock
sbb
inc
inc
adc
sbb
fwait
or
gs
mov
and
or
fsubrl
add
lods
xchg
push
test
bound
mov
adc
adc
andb
mov
hlt
mov
and
ret
adc
push
sub
adc
js
push
imul
sbb
push
push
js
add
sub
in
les
arpl
mov
push
fldl
lret
cld
lock
ret
adc
inc
jmp
ficoms
inc
adc
dec
dec
push
or
inc
lods
xor
pop
or
cmp
adc
inc
push
jno
fsubs
loope
aaa
push
pop
iret
pop
add
mov
out
pop
sbbl
push
add
test
mov
cmp
shll
cmp
sub
test
dec
dec
or
add
dec
xor
daa
sub
sub
cvtps2pi
push
adc
or
pop
add
sub
xchg
add
rolb
cmp
dec
rol
sub
iret
mov
xor
pop
sbb
pop
loop
dec
jg
aam
inc
push
test
add
jl
jl
add
pushw
subl
add
push
xchg
or
and
shl
inc
dec
mov
mov
mov
ds
sti
leave
hlt
outsl
and
daa
dec
add
or
fbstp
adc
psubd
mov
add
push
loopne
out
ficoml
sub
pop
or
mov
je
fsubrs
or
inc
nop
inc
ficoml
sub
jge
or
out
stos
fsts
pop
mov
add
or
adc
ja
testb
add
mov
lock
xor
sbb
pop
add
das
cltd
fdivrl
out
xchg
cmpsb
xor
or
adc
in
divl
dec
bound
mov
cmp
inc
mov
jbe
data16
mov
jle
mov
inc
mov
lea
add
movsb
int
and
insb
stos
cmp
pop
mov
xchg
scas
or
and
mov
add
pop
shlb
adc
mov
je
fdivr
stos
gs
sub
adc
fstpt
cwtl
in
xor
dec
ja
ss
cmp
inc
mov
or
xor
ficompl
cmp
cmpsb
in
loope
xor
and
xchg
push
mov
call
cmpsb
ljmp
adc
cmp
jo
ljmp
test
push
sbb
lds
push
mov
int3
adc
pop
and
or
add
das
into
push
push
adc
addl
es
or
aad
sub
push
adc
and
or
dec
pop
decl
lcall
mov
cmp
xchg
xchg
mov
inc
popa
add
add
popa
inc
bnd
js
add
mov
sbb
aaa
divb
push
sub
test
je
ja
cmp
mov
loope
xor
xchg
aaa
pushl
clc
push
fcoml
cli
lods
addb
push
cli
std
jmp
jge
adc
sub
ss
out
add
xchg
jns
cmpb
rorb
mov
or
add
pop
inc
pop
inc
aaa
jb
cmp
mov
mov
pop
int3
pop
sar
insl
loopne
loop
std
pop
std
aam
mov
cmp
lret
outsb
inc
xor
xor
shrb
cmp
js
sti
pop
aam
pusha
lcall
sub
test
test
jl
movzwl
pop
imul
add
cmp
fnstcw
push
stos
lds
dec
adc
stc
cmpsl
add
cmp
ficomps
xchg
xor
sbb
loopne
das
call
jmp
pop
add
shll
imul
ss
testb
adc
pop
daa
das
or
and
imul
out
mov
inc
push
movsb
jge
push
push
je
add
xchg
dec
insb
inc
sbb
pop
data16
in
sbb
bnd
push
sbb
ret
mov
dec
add
fisttpl
jo
xor
inc
xchg
pop
jg
add
push
cmp
jne
call
sbb
mov
repz
outsb
cwtl
xor
adcb
mov
adc
mov
mov
ffreep
sbb
pop
inc
jg
adc
outsl
lock
daa
xor
loope
xchg
sti
jl
mov
or
xor
mov
push
jmp
lods
dec
jl
inc
mov
push
and
inc
js
ret
mov
pop
adc
ss
or
cmc
shrb
sbb
movsl
fsubs
enter
sub
add
mov
mov
adc
mov
iret
sti
pop
lock
sbb
push
rcrb
iret
add
movsb
and
or
repz
fcompl
fcom
aam
out
iret
mov
int3
outsb
nop
enter
sahf
loopne
push
lods
rorb
iret
jnp
out
mov
mov
gs
call
loopne
iret
and
jnp
cmpsb
mov
adc
xchg
adc
mov
enter
aaa
add
push
xchg
das
and
jnp
xor
add
test
xor
popa
xchg
pop
xor
xor
sub
adc
mov
filds
mov
in
movsb
push
ds
add
cwtl
imul
repnz
add
scas
cmp
mov
fdivrs
or
pop
dec
sbb
gs
ss
insl
enter
je
je
add
and
fidivl
addl
sbb
pop
je
adc
loop,pn
pop
adc
adcb
xlat
and
mov
or
add
sub
or
js
jp
inc
test
dec
je
aad
icebp
xchg
inc
mov
rorb
or
sbb
xchg
aaa
or
add
pop
push
fimuls
dec
sbb
xor
inc
sub
mov
in
adc
push
pop
or
add
and
out
sub
clc
arpl
or
adc
dec
pop
repnz
xchg
adc
pop
pop
clc
je
aaa
push
insl
outsl
fs
loope
xor
addl
pop
enter
cmp
or
in
xor
ds
jo
inc
push
push
pop
sbb
cs
arpl
inc
jbe
sbb
fs
sub
loopne
ret
cs
cmp
inc
or
or
dec
add
mov
test
dec
inc
in
in
fisubrs
hlt
fs
popa
js
cmpsb
popf
mov
add
pop
sbb
fsubr
xchg
xor
incb
sbb
mov
sahf
mov
add
insl
add
dec
addr16
and
clc
data16
addr16
add
mov
dec
sbb
dec
insb
jbe
add
sub
jnp
jnp
repnz
and
push
push
in
push
mov
shlb
inc
jp
lods
ret
push
adcl
add
ljmp
rorb
add
mov
or
dec
or
add
and
cmpl
cwtl
dec
xchg
not
mov
inc
jnp
fwait
inc
add
or
std
xchg
or
dec
mov
int
fildl
add
mov
rcll
vmptrst
es
add
and
sbb
rcr
prefetchw
dec
xchg
fbstp
cwtl
and
movsl
sbb
out
mov
das
mov
popa
out
jle
inc
inc
pop
or
out
inc
sbb
cmpsb
sub
out
pop
xchg
ficompl
mov
jb
inc
repz
test
inc
xor
mov
add
out
adc
jns
outsb
sub
test
fcomps
sbb
inc
ret
aam
inc
mov
fwait
pop
cwtl
in
outsb
jne
sbb
adc
mov
adc
xlat
fsubrp
and
push
or
add
sahf
flds
mov
cmp
or
cld
or
addr16
adc
aaa
testb
xor
adc
and
add
push
gs
or
rorl
imul
gs
imul
xor
and
dec
rolb
pushf
imul
mov
xchg
incl
ds
outsl
adc
imul
jnp
add
or
dec
sbb
xor
scas
push
outsb
pusha
popa
push
ds
mov
outsl
imul
addb
and
adc
ds
add
xor
jle
out
sub
xchg
arpl
dec
imul
or
or
iret
rorb
pop
mov
into
fwait
rolb
pop
cmp
adc
jo
xchg
xor
lcall
jle
filds
nop
dec
xchg
add
mov
popl
addr16
push
push
dec
or
xchg
mov
ja
fldl
add
pop
cld
or
mov
popa
xor
movsl
add
xor
dec
pop
xchg
mov
inc
push
insl
jnp
daa
sbb
push
rolb
pop
mov
inc
mov
add
mov
sbb
lret
and
ja
adc
cmpsl
jae
je
jo
and
inc
pop
and
cmp
add
je
jl
add
nop
cmp
jo
add
mov
jl
inc
out
addl
test
xchg
mov
movsb
xchg
add
pusha
xchg
fcoml
cmp
pushf
add
mov
les
data16
les
mov
fnsave
mul
fldl
and
les
dec
mov
add
add
add
add
sti
or
adc
sbb
and
sub
add
add
push
jp
pusha
mov
inc
scas
inc
mov
mov
xchg
add
sub
cmpb
mov
mov
sub
sbb
mov
rcrb
or
mov
pushl
dec
or
lods
pop
rcl
add
jbe
lea
fisubrl
xchg
lahf
push
lcall
push
mov
js
ds
jnp
push
cld
movsb
mov
fldl
inc
push
adc
ds
add
xor
ja
iret
clc
pop
cmpsl
push
dec
mov
sbb
ds
pop
in
test
aam
push
lock
repnz
mov
or
xchg
out
scas
push
xor
test
mov
pop
in
pushf
xchg
lcall
int
pushf
sbb
cmp
add
into
imulb
mov
popf
mov
push
test
ds
jl
sarb
push
jmp
mov
sub
jp
sub
sub
into
je
cvttps2pi
and
faddl
pushf
and
push
xlat
sub
in
nop
popf
inc
sbb
adc
add
mov
or
das
lret
ljmp
add
inc
adc
or
mov
add
or
mov
loope
lcall
xchg
cld
adc
ucomiss
insl
sarb
adc
je
loope
les
jns
mov
data16
aaa
or
pop
cmp
insl
inc
test
xchg
inc
cs
inc
js
leave
or
lcall
cmp
or
add
mov
push
cmpsb
pop
push
mov
insb
add
add
pusha
dec
sbb
popf
ss
or
andl
cmp
orl
test
pop
and
das
repnz
or
and
sbb
sbbb
mov
xlat
mov
xchg
in
push
inc
dec
mov
adc
ret
adc
stc
shlb
lods
pop
dec
movsl
add
push
jae
aad
aaa
or
pop
xchg
xor
mov
push
rorl
mov
in
inc
and
je
and
and
add
stos
pop
add
jb
insb
subl
xchg
mov
xor
and
push
stc
or
flds
adc
jns
adc
push
mov
push
sub
pop
and
mov
iret
jmp
loopne
mov
clc
mov
sub
dec
jle,pn
sub
mov
jbe
pop
add
fimuls
jl
fsubrl
sub
lds
aam
insb
fs
cmpsl
mov
dec
jecxz
aad
pusha
dec
faddl
ret
insl
pusha
daa
add
ret
inc
cs
ficoms
push
sbb
or
push
imul
mov
repz
outsb
sbb
xor
and
push
xor
mov
jns
sub
xor
ds
and
lods
mov
rorb
dec
mov
pop
int
pop
xor
ss
push
sbb
and
test
aaa
jae
repz
cmp
in
or
inc
jne
gs
es
pop
add
cmp
repz
sub
inc
adc
xlat
test
sub
lea
sarb
push
sub
roll
inc
fiadds
add
mov
push
add
out
pop
bound
lods
push
inc
add
mov
roll
pop
or
cmpl
pop
adc
in
nop
aas
das
in
xchg
add
cwtl
cwtl
inc
add
inc
xchg
or
fsubl
enter
and
and
add
inc
cmp
mov
add
mov
inc
js
mov
dec
adc
inc
mov
pop
enter
fadds
dec
subl
inc
mov
nop
mov
ja
dec
shll
jbe
mov
fcomip
pushw
subl
cwtl
pop
enter
add
test
pusha
loope
outsl
add
daa
mov
lods
inc
rorb
cwtl
das
in
dec
add
aas
or
int3
pop
dec
add
and
or
adcb
in
add
or
rclb
dec
and
jne
push
xor
push
pop
pop
inc
xorb
sub
add
jne
adc
and
jne
xorb
dec
push
jne
in
cmp
cmp
push
mov
cmp
mov
repz
inc
inc
push
add
nop
cmpsl
into
and
push
dec
adc
pop
fcomp
mov
mov
mov
xor
sbbb
clc
add
ja
or
inc
jbe
xchg
ret
test
pop
in
pop
enter
ror
enter
pop
and
test
pop
sub
test
pop
sbb
loopne
into
push
pop
xor
push
pop
rclb
inc
repnz
cmpb
or
test
or
repnz
inc
testb
lds
and
mov
mov
push
adc
mov
ss
push
or
mov
imul
pop
sub
rorb
mov
cs
movsb
jo
jbe
add
xor
adc
pop
or
lock
mov
cld
scas
sub
push
ret
push
iret
ds
mov
xchg
pop
roll
xor
sbb
add
and
mov
pop
sbb
and
jnp,pt
adc
inc
je
inc
xchg
insb
dec
rcll
aam
scas
add
push
push
cmpsl
xchg
int
push
inc
add
shlb
and
rolb
cltd
adc
mov
daa
mov
cmpsb
push
rorb
mov
or
sbb
andb
nop
addr16
pop
or
shll
leave
fcomps
adc
jns
imulb
pop
fstpt
jae
pop
cmp
fidivs
cmpsb
out
jmp
add
and
push
je
inc
xchg
into
inc
push
pop
pop
cld
inc
add
jmp
sub
pop
cltd
js
mov
shrb
add
add
test
es
hlt
mov
sub
push
clc
fdivs
jns
xchg
iret
movsb
sbb
daa
or
mov
add
and
dec
mov
cwtl
mov
test
and
sarb
push
dec
or
es
push
dec
add
add
xchg
mov
addl
sub
xchg
mov
test
cmpl
jle
fs
call
or
sbb
rorb
dec
cmp
push
scas
and
mov
cmp
mov
sub
xor
les
or
cmp
pushf
cld
mov
loopne
movsl
and
mov
or
add
fildl
je
mov
dec
push
mov
roll
mov
sbb
cmp
inc
pop
pop
outsl
addl
pop
popa
cmpb
push
inc
jne
loop
push
ret
mov
sub
xorl
repz
aas
mov
sub
test
sub
and
sub
pop
xchg
fadd
rolb
cmp
jae
sbb
mov
imul
mov
shll
lock
fisubrs
arpl
jl
or
adc
mov
xchg
out
add
add
inc
sbb
scas
insl
popa
or
sbb
cltd
fisubl
pop
pop
mov
int3
movsl
or
mov
push
ja
testb
mov
adc
add
add
sub
add
mov
xchg
add
push
pop
and
or
pop
push
in
or
insb
add
xchg
add
xchg
nop
xchg
movsb
push
je
xchg
ss
pop
sbb
jmp
inc
pop
inc
sub
addb
mov
pop
lods
adc
sbb
push
xchg
and
mov
dec
imul
insb
dec
adc
fistl
mov
ds
inc
test
inc
add
aam
hlt
mov
pop
popl
hlt
cmpl
sub
outsl
shl
adc
push
push
adc
push
hlt
or
dec
and
push
pop
adc
or
jg
sbb
xchg
add
dec
dec
push
lret
xor
rcr
fisttpl
mov
add
nop
es
push
push
or
rcr
add
sub
add
cmp
inc
push
or
jle
inc
popa
mov
push
sti
add
push
inc
add
cmp
jl
or
popf
jl
mov
push
hlt
dec
add
mov
dec
push
jns
dec
xchg
lret
add
inc
dec
dec
mov
and
push
sbb
push
cmp
add
into
jl
push
jns
incb
icebp
inc
outsl
jge
je
cmp
pop
xchg
xchg
cmp
cmpb
push
aas
add
pop
sbb
adc
dec
inc
xchg
add
pop
add
rclb
in
fcompl
xlat
fmuls
jp
sahf
daa
mov
adc
sbb
insb
and
sahf
inc
add
jne
add
or
cmp
push
rol
inc
outsl
fmuls
popa
lea
negb
mov
pusha
adc
mov
xlat
lret
xor
mov
lea
js
pop
nop
mov
adc
sub
neg
jmp
arpl
and
pushf
je
addb
pop
add
lahf
fwait
push
push
test
and
es
bnd
jmp
mov
inc
das
sar
mov
xchg
jmp
adc
in
mov
pop
fsubs
icebp
dec
or
cmp
fcmovnb
add
movb
add
dec
jne
cli
push
add
and
cmpl
push
dec
xchg
add
sbb
xor
xlat
jp
nop
push
push
js
fwait
js
ror
cmpsb
adc
andl
lea
ret
std
xor
and
inc
fs
push
pop
pop
fcmovb
add
cmp
ret
bsf
jmp
inc
data16
insl
loope
or
inc
out
ficoms
cs
or
lret
xor
icebp
add
fwait
lods
push
in
add
mov
sub
mov
fiaddl
sar
pop
sub
mov
sub
mov
fsubrl
mov
and
and
pop
movsl
adc
cltd
pusha
inc
std
insl
mov
xchg
sbb
dec
mov
orb
inc
jmp
adc
and
xor
fs
ljmp
adc
add
inc
jl
out
popa
andb
mov
sbb
mov
shll
add
inc
out
or
and
dec
inc
xor
das
mov
cmpl
dec
shlb
inc
dec
out
fs
cmp
push
and
sbb
cmp
sub
mov
add
adc
adc
popa
pop
mov
cmp
jecxz
sub
jne
dec
pop
andb
sbb
loopne
mov
add
and
in
dec
sbb
pop
sbb
sbb
sub
or
inc
sub
xchg
adc
inc
pop
cmpsb
mov
subb
das
add
jo
je
pusha
fistps
mov
push
sub
jle
add
adc
popf
push
adc
push
add
add
mov
and
or
dec
pop
add
outsb
sbbl
mov
std
inc
int3
enter
out
enter
insb
pop
mov
rol
daa
in
inc
mov
add
push
cmpl
pop
cmp
or
scas
mov
push
and
ja
mov
add
dec
xor
and
sbb
xor
js
int
push
mov
mov
inc
mov
leave
jge
inc
jecxz
mov
xor
repnz
test
ret
cmp
sbb
or
jno
inc
fwait
xor
cld
aas
push
sbb
mov
cld
xor
loopne
gs
in
jmp
pop
add
clc
push
cmpl
ja
js
or
push
xor
mov
cmp
nop
inc
xchg
pop
add
les
add
xchg
mov
pop
test
push
push
sbb
and
mov
bsf
lods
ret
push
and
push
mov
inc
dec
sbb
push
mov
push
jae
push
push
ds
inc
loop
shlb
xchg
out
adc
or
ljmp
imul
inc
arpl
hlt
mov
in
daa
mov
mov
lea
jbe
xchg
int3
adc
insb
cmp
sub
stos
cmp
mov
add
sub
testl
adc
outsl
xchg
pushf
bound
test
jmp
outsb
xchg
and
or
mov
ss
inc
adc
sbb
push
sub
adc
xor
stos
and
filds
rcl
xor
loope
and
arpl
or
int3
push
inc
test
je
and
xlat
mov
daa
daa
adcl
inc
dec
xor
xchg
jbe
pop
pushf
mov
stos
imul
adc
mov
inc
test
pop
lock
dec
lock
push
add
pop
cmc
addb
arpl
loope
fisttpll
sub
pop
outsb
pop
pcmpgtd
pop
push
add
add
xor
je
nopl
daa
je
lods
mov
pop
das
push
in
push
sbbl
dec
pushf
mov
les
imul
pop
adc
mov
nop
testb
ja
xchg
pop
jno
out
pop
je
mov
sbb
psubsw
fiaddl
outsl
loopne
or
and
outsl
dec
sub
aaa
movsb
or
or
sub
or
pop
add
lret
call
inc
or
sbbb
xchg
je
in
dec
mov
arpl
mov
adc
mov
aad
and
pop
dec
outsl
fiaddl
and
and
pop
dec
dec
movlps
sbb
or
clc
adc
jp
fisttpll
sub
shll
cmpb
jne
es
inc
sbb
push
adc
xor
sarb
orb
rorb
stos
std
sbb
ficompl
cmc
push
insb
imul
and
leave
mov
adc
push
push
lea
push
and
push
sbb
xchg
icebp
fcmovbe
xor
ljmp
cmp
jge
sbb
pop
xchg
imull
out
sbb
mov
fistpl
jle
mov
fs
add
or
mov
mov
sbb
and
xchg
rcl
nop
or
add
or
enter
lahf
adc
push
hlt
fimuls
ss
adc
xchg
movsb
sbb
inc
dec
scas
sbb
inc
fcompl
or
sbb
cmp
test
shll
adc
add
dec
pusha
push
rol
scas
pop
lret
inc
push
pop
addb
xchg
incl
outsb
mov
xor
xor
cwtl
je
pop
dec
je
mov
addl
push
outsb
add
je
leave
inc
xor
rorl
movsl
rcl
mov
stos
pop
stc
insb
add
add
insl
cmp
pusha
jne
sbb
cmp
and
ljmp
into
mov
ds
dec
xor
and
cwtl
ret
inc
or
arpl
mov
mov
cwtl
xor
or
mov
xchg
pop
and
mov
je
inc
mov
sbb
xchg
inc
push
fadds
mov
lea
adc
shrb
or
sub
inc
pusha
pop
inc
outsb
out
fcoml
cmc
or
test
jo
cmp
in
cwtl
xchg
dec
jb
bound
clc
dec
add
flds
sbb
cmpsb
pop
pop
jo
add
popf
adc
addl
mov
fsubrs
or
sbb
pop
xchg
and
mov
outsl
mov
hlt
pop
sbb
loope
add
fsubp
pop
adc
loope
test
orb
popa
dec
movsb
jle
outsl
es
push
je
inc
mov
popf
pop
mov
mov
scas
cmp
push
xlat
in
insb
pop
pop
hlt
mov
xor
jns
or
cmpb
arpl
add
dec
mov
cwtl
in
sbb
sbb
insl
and
imul
jp
jo
ret
xchg
in
icebp
testb
sbb
push
mov
daa
fisttps
aas
aad
aas
add
inc
mov
adc
and
test
mov
and
dec
jl
push
insb
repnz
cmp
shlb
into
or
orl
adc
mov
adc
inc
xchg
cmp
mov
hlt
cmpsl
or
sub
or
add
inc
clc
jle
repnz
pop
push
xor
cmp
repz
loope
sub
lock
or
insb
mov
add
xor
cwtl
and
dec
push
popf
add
js
and
in
or
mov
pop
stos
dec
inc
fs
rorl
push
mov
out
adc
xchg
popa
enter
andl
xchg
fs
dec
pop
push
add
dec
mov
cmp
stos
sbb
pop
icebp
or
outsb
adc
add
fwait
mov
mov
dec
inc
mov
or
lods
inc
sub
mov
mov
inc
fdivrs
jnp
lock
xchg
out
pop
in
jb
adc
mov
push
cwtl
add
test
inc
cmpsb
push
dec
lock
xor
popa
sub
inc
lods
sti
iret
into
xchg
push
cmp
add
daa
lret
iret
cmp
dec
in
mov
fiaddl
xchg
add
mov
cltd
sub
loope
daa
arpl
add
andb
push
push
out
and
sbb
dec
out
push
or
mov
xlat
inc
add
cmp
lea
ja
add
sub
out
xchg
imull
orb
adc
xchg
jnp
test
pop
insb
dec
jp
jle
jne
leave
jp
push
dec
fs
add
js
enter
scas
xchg
sbb
ljmp
xchg
or
mov
xchg
shrb
and
pusha
js
roll
pop
sarb
and
xchg
scas
leave
xchg
cmpl
pop
leave
push
insl
xor
xor
lods
mov
std
xor
ret
and
in
mov
pop
pop
jo
push
push
in
dec
adcl
inc
adcb
pop
or
shrl
push
pop
adc
jmp
jg
adc
pop
push
hlt
cmp
test
xchg
push
push
lock
add
xor
sub
fnstsw
jo
inc
fdiv
cmp
je
jnp
push
adc
sahf
not
sbb
test
and
sub
and
aad
sub
xorb
rclb
outsl
es
mov
mov
lret
cwtl
mov
and
or
popa
mov
sub
sub
cmp
or
mov
adc
dec
lahf
icebp
ffree
push
ret
loope
nop
data16
pop
xor
mov
pushf
movsb
fstpl
je
js
xor
jne
das
popa
bound
les
cmpsl
arpl
test
xlat
xchg
fwait
adc
mov
ret
repnz
enter
fwait
or
push
pop
mov
lock
xchg
or
and
or
ret
mov
in
xor
addr16
push
mov
xor
mov
into
xchg
pop
xor
or
dec
lahf
hlt
lcall
outsl
xor
xor
push
call
popa
dec
pop
push
std
cli
push
cmpsb
push
and
inc
mov
sub
loope
or
test
pop
fnstsw
cmpb
fcoml
test
test
inc
aam
shl
fdivs
imul
sbb
adc
cmpl
outsl
jns
inc
sbb
xchg
out
sub
jo
adc
xor
adc
in
add
mov
aas
push
mov
push
mov
jae
add
lods
cwtl
pop
enter
add
xor
xor
daa
inc
adc
mov
outsl
sahf
dec
lock
imul
mov
dec
dec
mov
dec
or
push
push
mov
pop
imul
pop
sub
adc
and
jle
je
jae
lret
sub
subl
rcll
in
jl
jns
dec
or
adc
lcall
jne
xchg
out
push
sub
xchg
rolb
cmp
adc
pop
jo
sbbl
shl
test
lods
add
call
je
inc
dec
jl
push
das
pop
addr16
xorb
and
inc
imul
aas
push
imul
ja
and
loopne
dec
sbb
sbb
pop
in
pop
or
mov
push
pop
testb
lret
int3
or
testb
sti
orb
lock
call
cmp
leave
and
xor
jge
cwtl
inc
rcrb
push
cmpsb
leave
xchg
push
jge
pusha
sbb
fidivl
jne
dec
jno
and
inc
dec
lea
cmpsl
xchg
lods
push
mov
push
loope
sub
lcall
jecxz
add
cmp
xchg
test
das
subl
mov
sub
inc
loopne
push
aaa
pop
add
inc
xchg
fsubrp
cli
inc
jg
insb
in
and
loopne
cli
add
sub
mov
cmpsl
mov
test
rcll
pop
cmp
sub
dec
je
daa
jg
pop
icebp
cmpb
cmp
jne
mov
jp
xor
push
test
jne
inc
shlb
int3
xchg
pop
rorl
pop
dec
sbbl
and
or
inc
xor
cmpsb
pop
xchg
push
sbb
movsb
sub
inc
out
mov
xor
pop
inc
hlt
and
stos
or
pop
push
xchg
lahf
add
addb
shll
out
adc
sbb
test
arpl
xor
dec
sbb
inc
bound
add
sbb
movsb
push
lea
test
popa
add
inc
rclb
mov
dec
jnp
cmp
or
mov
pop
test
test
hlt
mov
sub
cmp
sub
inc
ret
pop
pop
dec
out
hlt
in
jp
cmp
in
fsubs
adc
aas
addb
push
mov
add
xchg
ds
nop
add
pop
push
out
arpl
in
jne
mov
popa
xchg
aaa
lods
sub
loope
andl
xor
and
push
rorb
ret
adc
inc
adcl
pop
arpl
nop
inc
lock
push
inc
xorb
dec
rclb
jge
and
fs
xchg
fs
cmp
js
sub
adc
add
clc
inc
ss
aaa
adc
adc
sbb
into
push
sbb
sub
push
mov
add
cmpsb
outsb
xchg
push
jno
sub
dec
mov
jg
add
jb
mov
femms
or
je
add
xor
sbb
scas
add
movsb
lss
adc
jb
pop
cmp
cmp
clc
xchg
mov
mov
je
jnp
inc
mov
cmc
add
add
cmpsl
sub
and
dec
movsb
cmp
or
mov
cmp
addl
push
leave
dec
test
pop
pmaxub
es
shr
add
loope
inc
jl
loopne
ror
ret
lret
sbb
shll
sub
push
out
jb
add
clc
sub
outsb
test
xchg
je
push
mov
fbstp
in
out
inc
or
idivl
imul
push
fsubl
out
add
and
dec
push
sbb
dec
push
or
sbb
or
arpl
mov
lret
add
bound
jle
sub
push
fisubs
ret
adc
clc
push
push
push
add
pop
mov
mov
and
insb
adc
push
enter
int3
pop
or
and
mov
or
mov
iret
leave
les
push
pop
es
dec
in
adc
and
add
insl
mov
inc
xor
ficomps
in
jne
leave
das
jne
push
pop
add
add
cmpb
fnstenv
adc
adc
jmp
sbb
aam
out
adc
xchg
or
inc
nop
jns
add
xor
mov
xlat
mov
cmp
cli
mov
mov
mov
pop
shl
jno
repnz
push
out
pop
addr16
clc
adc
jnp
mov
mov
jo
adc
sti
push
and
jmp
inc
lods
xchg
sub
sub
fldt
jmp
push
mov
mov
sbb
daa
ja
inc
pop
add
fidivrl
jo
mov
movsl
and
dec
rcrl
fldcw
xor
and
loope
scas
dec
lahf
aas
aaa
cmp
inc
lcall
sar
sbb
ja
add
sbb
imull
xchg
mov
cmp
fs
push
xor
push
sti
jno
popa
mov
adc
push
add
test
sub
or
mov
fcoml
mov
add
push
dec
add
js
fiaddl
add
daa
ficoms
sbb
test
fldt
sbb
cwtl
sbb
addl
mov
sub
adc
enter
jp
int3
or
xchg
mov
and
add
sti
pop
adc
dec
scas
add
add
or
pop
inc
and
or
popf
int3
jg
sarb
repnz
cmpb
xchg
push
jnp
add
push
mov
add
sbb
add
sub
or
loope
loopne
jnp
or
sahf
jecxz
iret
cmpb
daa
andl
dec
xchg
ss
inc
and
test
verr
sbb
xchg
or
push
and
inc
test
out
inc
mov
mov
mov
sbb
stc
aam
scas
xchg
cs
jmp
test
ret
aad
push
lds
pop
lock
inc
mov
add
popa
add
dec
arpl
cmp
fldl
fdivs
cmp
or
jo
sbb
enter
movsl
ljmp
adc
jp
or
adc
lret
xchg
enter
push
cmp
shll
rcll
or
aaa
xchg
mov
std
or
pop
push
dec
xchg
push
mov
cs
ret
clc
je
cmp
and
adc
jge
jnp
jnp
jmp
int
jnp
mov
jmp
aaa
jge
test
cs
push
sub
imul
add
dec
mov
mov
push
imul
or
mov
push
push
push
clc
movsl
imul
jo
out
or
loope
mov
and
dec
xchg
dec
xor
cmovno
pop
ss
sub
and
jl
ja
hlt
push
sbb
push
orb
and
test
dec
sarb
or
jle
mov
daa
or
inc
es
pop
xchg
ja
test
push
push
ljmp
daa
in
out
notb
or
cmpl
or
es
mov
mov
loop
xchg
jmp
lods
sbb
imull
mov
js
leave
cmc
pop
and
dec
arpl
mov
adc
inc
test
rcrl
push
maskmovq
divl
imul
in
jp
add
and
add
cmpsl
adcb
fldenv
ja
add
outsb
mov
out
add
enter
push
mov
xor
add
pushf
lret
cmp
mov
add
aad
and
or
dec
cmp
push
outsb
sbb
int
imul
pop
lcall
or
jno,pn
sub
testb
in
imul
ret
or
sub
pop
push
push
rclb
jo
and
subb
arpl
call
pop
mov
add
and
sti
sbbl
add
mov
or
xchg
or
push
js
es
add
add
add
imul
rclb
rorb
xor
sub
dec
add
in
mov
dec
adc
test
jo
mov
test
cltd
cmp
popa
pop
cmp
inc
pop
adc
inc
incl
adc
or
sub
adc
hlt
adc
pop
test
cmpl
push
sub
hlt
xchg
xchg
mov
mov
mov
pop
or
outsl
icebp
pop
pop
add
aas
orl
rorb
push
orb
xchg
cmp
movsb
sbb
lods
add
add
filds
add
add
mov
shl
adc
xchg
push
sub
sbb
rcr
pop
pop
adc
fildll
jmp
push
insb
jmp
sbb
add
xor
and
jne
adc
movsb
mov
lods
jmp
push
loop
negb
xor
add
in
sub
sbb
push
mov
push
push
mov
fadds
sub
add
add
xchg
pop
push
inc
shlb
cwtl
dec
inc
or
mov
mov
movsb
flds
add
data16
and
adc
adc
popf
mov
add
loop
xor
push
or
add
sbb
sti
jge
jmp
or
jp
inc
sub
loop
das
cmp
cwtl
lahf
push
lods
cmp
pop
push
das
add
leave
mov
mov
test
add
repz
mov
xlat
outsb
test
lods
call
adc
fdivs
loop
pop
es
shlb
jmp
bound
test
les
and
cwtl
jp
inc
and
or
mov
push
push
mov
test
dec
mov
js
rcr
jmp
xor
push
add
or
lcall
orl
adc
dec
push
ret
adc
and
jg
int
out
cmpsl
lods
test
or
xor
jge
test
jne
lea
push
add
sahf
sub
mov
add
pop
dec
inc
or
lcall
adc
sbb
lcall
fimull
push
mulb
data16
add
addb
adc
lock
lock
or
mov
pop
add
movsl
pop
incl
idiv
dec
adc
inc
shrl
cmc
out
push
test
and
aam
add
call
iret
je
dec
mov
js
and
hlt
inc
nop
loop
inc
lcall
pop
inc
cmpl
jne
ret
add
jnp
sbb
mov
sbb
pop
js
and
dec
test
xchg
cmp
add
dec
mov
fbstp
dec
mov
mov
jne
xor
add
test
rorb
ja
add
sbbl
loope
pop
dec
mov
xchg
push
insl
push
imull
loop
jnp
sbb
adc
nop
out
sub
mov
cmp
pop
ret
outsl
sahf
cs
rolb
lea
dec
add
xor
incl
sub
jne
cmp
cltd
and
shr
adcl
aam
jecxz
adc
mov
dec
ds
sbb
pop
sbb
sbb
xor
mov
mov
jno
dec
cmc
push
xor
dec
jmp
and
sbb
or
aam
ret
loopne
notl
add
je
ss
push
stos
sbb
or
push
pop
adc
mov
bound
inc
fdivl
xchg
cs
daa
cmp
imul
mov
push
and
loopne
jnp
mov
mov
adc
jmp
and
rcr
or
sbb
hlt
sbb
pop
lock
mov
lods
inc
inc
pop
jno
dec
mov
or
jo
mov
test
and
bound
and
jne
lods
xlat
mov
frstor
inc
mov
nop
aam
mov
je
jne
and
out
aaa
dec
add
xchg
sahf
sbbb
pop
sbb
sbb
or
pop
xor
shlb
push
push
pop
mov
and
or
shrb
mov
mov
dec
push
fcomp
popf
pop
xchg
pop
outsb
inc
add
jae
das
gs
popa
sub
test
xlat
mov
xchg
push
out
sub
aaa
cmpl
fistpl
cmc
sbb
sub
lret
popl
subb
xchg
sbb
xchg
dec
push
mov
add
roll
loope
outsb
sbb
aas
js
pop
pop
push
adc
and
mov
dec
orl
std
in
sti
dec
inc
cmpl
inc
inc
je
ja
sbb
cmpb
andl
test
mov
xchg
mov
xchg
dec
add
cmp
dec
sahf
mov
push
cmp
and
xchg
fisubrs
dec
mov
je,pt
cmp
sub
push
in
push
dec
inc
mov
xchg
in
xor
ret
test
dec
mov
pop
add
movsb
mov
outsb
mov
stos
xchg
shlb
or
cs
popa
rcl
dec
imul
jle
add
sub
cmc
loopne
inc
dec
inc
sti
sub
mov
mov
les
mov
loopne
mov
test
dec
adcl
scas
or
push
imul
ss
lahf
inc
dec
cmp
add
cltd
ficomps
sub
mov
mov
in
sub
mov
mov
mov
push
cmp
cmp
xor
cmpsl
push
shlb
mov
jne
mov
push
push
sub
je
jmp
push
cmp
ret
lock
cmp
popa
or
push
rolb
mov
jb
in
push
ljmp
xor
add
sub
inc
sbb
ss
mov
sbb
jo
mov
pop
daa
push
pusha
add
or
push
loop
rcll
pop
shlb
filds
testb
imul
mov
push
mov
les
icebp
and
sbb
fldenv
sbb
and
sbb
add
xor
jmp
dec
add
push
outsl
lock
add
cmpsb
xor
xor
mov
rcrl
rorl
clc
mov
addr16
push
mov
adc
imull
push
push
xor
jne
fwait
add
xchg
fistl
ja
cmp
nop
add
push
bound
loope
cltd
sub
mov
stc
add
add
cmp
pop
and
adc
adc
aaa
add
sbb
sbb
or
xor
int3
add
lds
cmp
ret
push
mov
mov
mov
pop
sets
fldenv
jmp
fcmovnbe
fnstcw
rcll
jmp
inc
mov
dec
fildl
in
pop
cld
mov
shrb
aas
test
psubb
xchg
mov
mov
insb
stos
loop
mov
call
test
dec
push
add
inc
loopne
add
movsb
in
push
inc
adc
data16
mov
loope
cmp
cs
xchg
dec
xchg
icebp
daa
inc
fbstp
rcrb
aad
mov
adc
mov
xchg
je
mov
add
scas
adc
std
arpl
mov
jo
icebp
shr
sub
xor
inc
mov
iret
loopne
inc
add
jbe
jecxz
stos
mov
and
or
mov
xchg
repnz
nop
jp
inc
jae
je
repnz
or
mov
mov
pop
imul
push
cmp
cmp
faddl
out
aam
fwait
inc
xchg
ret
nop
mov
aam
lret
adc
mov
or
scas
fldenv
jno
dec
cmpsl
call
inc
pusha
pop
adc
aas
push
mov
or
dec
jmp
adc
push
pop
into
movb
lods
and
push
or
nop
dec
adc
adc
jmp
add
in
cmp
dec
adc
ret
jno
stos
fistl
outsl
mov
inc
xchg
stc
cmp
pop
repnz
inc
aaa
sbbl
xor
adc
push
dec
mov
movsb
adc
pop
or
mov
dec
add
sbb
neg
dec
pop
xor
mov
arpl
fildll
or
adc
enter
pop
or
shl
mov
xor
leave
rcll
pop
outsl
lods
mov
jne
push
add
iret
jp
test
or
nop
mov
fwait
popa
mov
movb
pop
addps
jne
outsb
adc
xchg
xchg
imul
pushf
add
cmp
enter
fwait
and
and
fdivr
lahf
jl
xor
out
xor
cmp
xor
idivl
rcrb
je
inc
fsubr
fsub
imul
inc
ret
mov
in
jl
insl
jo
jmp
cli
scas
xorb
sub
mov
dec
pop
sub
test
mov
testb
cmpsb
jne
add
or
shlb
mov
add
sub
test
nop
cmp
pop
jmp
add
lock
push
xor
lock
or
lahf
inc
pop
adc
jp
xchg
push
sub
cltd
xchg
push
icebp
and
test
in
adc
or
mov
add
or
lcall
push
and
sbb
insb
shrb
pop
mov
xchg
adc
ds
cmp
jne
add
sub
sub
sbbb
incl
int3
jge
sub
mov
scas
mov
ss
push
incb
nop
js
mov
inc
or
mov
add
or
inc
sub
and
add
rcrl
dec
cmp
loopne
sbb
lock
stc
push
mulb
and
js
adc
mov
xlat
in
das
sub
mov
pop
lahf
xor
shlb
fs
jmp
jmp
jl
inc
ljmp
dec
push
push
xchg
cmc
jb
jmp
lret
jl
sub
rol
gs
ret
test
xor
inc
shl
jae
lcall
or
je
or
and
mov
imul
inc
or
jle
scas
jge
bound
adc
mov
repnz
mov
push
inc
or
loopne
std
add
push
repnz
scas
xchg
mov
pop
add
inc
iret
pushf
add
dec
stos
mov
pop
sub
jbe
shll
and
push
int3
movl
jae
pop
jne
ss
movsb
adc
cmp
sar
cwtl
roll
aaa
xor
or
push
jmp
sub
jae
pop
xor
add
or
mov
or
mov
push
movb
imul
int3
inc
xchg
subl
ret
add
hlt
or
jo
jmp
jp
ds
jne
sub
mov
dec
sbb
or
scas
pop
dec
add
lock
xchg
stos
leave
mov
add
inc
popf
dec
xchg
xchg
dec
jb
sub
adc
lret
ss
pop
daa
nop
cltd
sbb
pop
xor
jbe
les
insl
add
inc
dec
or
mov
inc
mov
xor
add
inc
movhps
cmpsl
xchg
push
sti
mov
jmp
sahf
and
dec
aaa
call
pusha
add
insb
sub
jge
or
bound
push
insb
pop
loope
arpl
jge
pop
push
pop
cvtpi2ps
jmp
lods
xor
and
inc
fmuls
cltd
mov
mov
sbb
add
cwtl
aam
xchg
call
mov
add
test
popf
jo
sbb
iret
imul
jmp
cld
popa
and
inc
jno
mov
cld
xchg
xchg
lret
ss
lea
lock
sahf
pop
pop
mov
pop
pusha
add
add
sub
scas
loop
shl
push
cld
xlat
icebp
mov
lahf
and
aad
roll
and
push
jo
out
push
xchg
add
sub
orl
inc
jg
mov
lock
pop
and
xorb
loopne
or
cmpsb
jb
lahf
nop
pop
aam
mov
aam
ret
int
mov
movsb
jmp
mov
jmp
sbb
jne
push
push
sbb
jge
mov
movsb
pop
pushl
mov
cs
xchg
adc
mov
pop
rcll
and
aas
stc
adc
add
mov
lahf
add
sbb
stc
cwtl
mov
imul
push
xor
pop
jecxz
and
adc
mov
enter
push
por
je
jmp
cwtl
and
adc
inc
into
sbb
jg
sbb
ret
gs
in
mov
and
add
push
xor
sbbb
popa
jns
or
jg
mov
push
pop
fldl
in
jmp
mov
add
add
inc
mov
pop
add
js
aas
je
or
pop
sub
mov
and
loopne
jp
into
insl
je
mov
sbb
rorb
test
sbb
daa
mov
and
and
or
dec
aas
inc
cli
jge
js
or
push
pop
out
pushf
aad
hlt
xor
mov
movl
xchg
and
adc
hlt
mov
add
mov
loope
and
xchg
mov
push
sub
ja
and
outsl
shlb
jns
adc
insl
xchg
inc
lret
dec
or
jl
pop
negl
dec
xabort
add
insl
adc
adc
insb
faddl
xlat
shrl
cmpsl
rclb
ret
clc
lock
out
xor
sbb
cmp
out
inc
add
pop
jl
push
pop
sbb
xchg
mov
inc
mov
inc
pop
xor
leave
sbbl
pop
pop
mov
add
loopne
inc
add
mov
negl
cmp
mov
lea
dec
mov
loopne
xchg
ret
scas
xor
je
push
add
and
inc
pop
cmp
lods
xchg
adc
inc
js
add
mov
movsl
push
pop
insb
lods
dec
adc
mov
pop
dec
lea
mov
or
subb
test
push
sub
push
fisttpl
sarb
cmp
inc
pop
test
push
mov
nop
das
jne
push
or
inc
ds
loopne
and
xor
push
aam
sbb
push
jo
jecxz
add
xchg
adc
ss
roll
xchg
adc
js
into
cwtl
ret
in
sub
aaa
cmp
mov
test
pop
mov
ds
mov
rcll
sbb
xor
or
adc
mov
add
nop
sub
xchg
cmpsl
pop
lock
fwait
add
cmp
cmp
mov
adcb
inc
mov
mov
push
incl
add
mov
lcall
mov
push
xor
dec
pop
jo
or
stos
push
push
out
or
mov
xor
mov
daa
adc
sbb
jo
lea
pop
and
mov
ret
ret
mov
mov
call
xchg
inc
pop
and
add
push
pop
xchg
ret
cli
or
scas
testl
add
enter
popa
xchg
dec
into
mov
test
je
testl
orps
sub
adc
insl
mov
sbb
cmp
mov
in
call
and
scas
icebp
rolb
test
push
inc
pop
pop
xor
jnp
test
dec
ja
ret
es
cmp
leave
fists
in
call
sbb
aas
je
inc
jl
rcrb
cwtl
xor
dec
or
mov
xchg
add
insl
add
mov
sbb
xor
xor
mov
adc
cmpsl
pop
mov
ja
xlat
dec
or
pop
lret
popa
dec
or
xchg
loope
inc
sbb
imul
pop
push
lock
addl
aam
push
sbb
and
and
or
jle
xor
inc
mov
dec
add
cld
push
mov
sbb
stc
xorb
sub
add
pop
mov
sbb
xor
dec
jne
pop
out
or
dec
movsl
mov
mov
es
mov
outsb
icebp
push
adc
rcrl
int3
iret
fisttpll
pop
and
arpl
inc
and
mov
fsubr
push
or
xlat
mov
pop
mov
cmp
sbb
pop
sub
adc
mov
je
outsb
pop
fldenv
push
inc
pop
fs
ds
sbb
nop
test
insb
dec
bound
and
scas
mov
pop
sub
enter
or
cmp
rorl
lds
outsb
push
les
mov
mov
rclb
sbb
xchg
addb
mov
sub
loop
out
sbb
outsb
sbb
inc
push
cmp
cld
and
add
cld
ss
jb
cld
pusha
test
xchg
fnstsw
add
mov
testl
insl
int
andl
mov
sbb
push
jno
jmp
add
das
add
fimull
xor
das
xor
fsubrs
xchg
das
or
lahf
iret
imul
sub
pop
mov
sti
inc
sub
jmp
fs
pop
adc
jo
sub
mov
sbb
ret
and
mov
sub
sbbl
or
sub
enter
sbb
test
scas
fs
stc
push
lea
and
es
leave
inc
test
pop
xor
pop
and
lahf
int3
sti
rol
xor
aaa
mov
test
mov
mov
sub
js
dec
fisubl
in
in
inc
push
dec
xor
call
pop
adc
dec
stos
mov
xlat
ret
int3
and
lds
pushf
rol
sub
popl
mov
pop
lds
add
add
pop
xchg
pop
jb
dec
dec
dec
dec
movsb
icebp
andb
shlb
pop
pop
dec
inc
ficompl
jne
push
push
in
sub
mov
ss
push
sti
lods
cmpsb
adc
inc
push
dec
add
lcall
fs
mov
add
pop
iret
daa
dec
or
mov
adc
mov
mov
sbb
dec
ss
push
and
mov
out
mov
mov
daa
push
call
pop
xchg
iret
cmp
scas
inc
pusha
mov
insb
mov
out
jl
or
jle
mov
cmp
pop
mov
mov
ja
jo
sub
add
pushl
out
data16
and
out
cmp
outsb
clc
xchg
clc
mov
and
adc
xor
or
add
inc
mov
fs
sub
and
dec
stos
nop
in
jge
jg
mov
pop
sbb
xchg
roll
mov
dec
das
fisubs
mov
or
js
dec
aam
push
sub
gs
add
or
sbb
pop
lock
mov
xor
sub
aas
das
mov
pusha
sarl
push
shlb
inc
pop
sbb
sbb
adc
sbb
and
sarb
add
pop
inc
mov
es
sub
pop
mov
scas
loopne
clc
mov
dec
cmp
loopne
js
enter
es
and
jns
dec
push
pop
sbb
incl
jne
out
jno
scas
lea
std
shr
inc
xchg
test
testl
sbb
cmp
cmp
pop
xor
add
loopne
dec
cmp
ret
xchg
sub
scas
jo
or
lods
gs
adc
cmpb
xchg
dec
adc
and
outsl
jne
and
js,pn
insb
sbb
test
inc
sbb
scas
mov
ret
and
add
out
vmread
int3
jne
cmpl
std
mov
pop
mov
pop
cs
push
push
mov
cmp
call
xchg
lcall
cmp
adc
pusha
es
adc
sarl
pop
xor
jae
pop
inc
add
cmpsb
mov
divb
test
xor
xor
hlt
inc
test
push
mov
and
jne
inc
push
ds
or
sbb
lock
les
jp
and
das
fcmovnb
aaa
xchg
loope
inc
dec
ret
fmull
loopne
iret
insb
lret
or
push
jp
mov
mov
sbb
xchg
or
push
xor
cmp
and
pop
mov
pop
xor
sbb
mov
and
mov
ja
dec
jmp
mov
xchg
ret
jne
movl
es
call
sbbb
xorb
adc
arpl
mov
and
insb
int
mov
stc
out
dec
mov
insl
inc
pop
adc
mov
pop
popf
sub
adc
sbb
icebp
or
sub
mov
mov
mov
mov
mov
lods
mov
push
testb
adc
insb
mov
mov
add
jns
popa
xchg
stos
dec
testb
and
sub
clc
sub
cmp
xchg
sbb
or
push
lock
pusha
mov
xchg
inc
lods
xor
sub
test
lods
sub
out
xchg
add
cmovle
das
jne
xor
mov
dec
rol
xchg
dec
test
push
es
jnp
fwait
add
test
push
cmp
hlt
push
pop
insl
out
push
dec
xchg
pop
movsl
add
mov
and
js
sbb
xor
fadds
dec
cmp
repz
cwtl
rorb
cmp
icebp
in
jmp
sbb
xor
pop
sub
aam
sub
mov
sub
adc
xchg
push
or
jne
into
mov
sub
mov
and
push
dec
cmp
loopne
and
xchg
add
adc
loop
lret
push
adc
or
cmp
ss
dec
mov
lods
sbb
jbe
and
or
xor
lock
sub
pop
push
pop
pop
xor
inc
jmp
sbb
mov
rol
add
clc
hlt
sbb
es
roll
fwait
dec
adc
cmp
mov
or
sub
push
cmp
imul
push
pusha
add
xor
jl
mov
aad
add
sbb
nop
inc
mov
not
and
mov
pop
fiadds
xor
mov
roll
hlt
je
clc
add
imul
sub
shr
cmp
aaa
es
fildl
jne
xchg
dec
shll
sub
pop
insl
filds
lahf
mov
rcll
inc
imul
mov
sbb
push
pop
lea
gs
sub
lods
stc
mov
aaa
lock
insl
lods
adc
ret
add
sahf
mov
xchg
lahf
clc
mov
add
mov
xchg
inc
push
sbb
add
dec
push
cs
mov
dec
pusha
push
xlat
cli
push
fcoms
insb
shl
fucomip
pop
sbb
sub
adc
adc
sbb
xor
sub
sbb
sbb
xchg
mov
fcoml
push
mov
je
aam
sub
mov
add
xchg
adc
daa
push
loope
inc
or
mov
incl
cmp
jmp
mov
add
sub
mov
sub
add
sbb
and
pusha
insl
xor
mov
mov
jge
mov
xor
push
outsb
pop
rclb
or
adc
pop
push
cmpsl
inc
add
dec
push
mov
and
adc
aas
xorb
or
push
sbb
testb
push
mov
and
push
clc
out
mov
rorl
adc
test
call
movsl
sbb
mov
bound
jne
push
fnclex
dec
pop
jbe
cmp
movb
js
cmp
les
jno
pop
mov
int3
sbb
dec
loope
fdivrl
clc
loopne
rcrb
pop
into
leave
je
lock
pop
push
shrb
js
inc
jmp
outsl
insb
or
lret
mov
lock
mov
inc
leave
je
or
or
leave
or
or
les
adc
es
cmp
ficoml
cmpsb
adc
dec
adc
xchg
xor
inc
rorb
sbb
dec
cwtl
and
dec
dec
add
sbb
mov
and
pushf
mov
or
push
pop
jmp
insl
loop
imul
sub
jp
xor
and
mov
test
mov
and
inc
pop
shrb
mov
test
sbbb
or
or
add
sub
mov
adc
movsb
mov
fadds
bound
jae
sub
or
mov
scas
adc
arpl
enter
pop
pop
and
sub
in
lea
daa
cmp
pushf
cs
sbb
or
inc
sti
and
movsb
and
stc
add
ficomps
jbe
push
cmovae
enter
daa
cwtl
popa
loopne
loope
or
outsl
lods
dec
dec
dec
inc
test
pop
repnz
ret
jo
sbbb
icebp
xor
rcrb
dec
add
or
sub
ror
or
lods
push
out
out
cs
inc
sbb
sbb
ret
push
xchg
push
and
jae
pop
movb
or
mov
call
and
mov
pop
cmp
sub
mov
adc
adc
pop
outsb
popa
sub
and
xor
jmp
mov
push
dec
cmc
cltd
movsb
in
aam
test
adc
cwtl
push
or
jecxz
adc
shr
dec
loope
sbb
xor
nop
aam
lea
sahf
lods
xchg
int3
insb
flds
mov
mov
add
cmp
dec
add
imul
mov
pusha
aam
cmp
shrb
movsb
ss
ss
and
jae
jb
inc
xchg
repnz
mov
xor
mov
adc
into
movsb
lcall
or
fwait
insb
sub
inc
cmp
sbb
repnz
and
push
cmp
inc
mov
sub
jns
or
xchg
aad
and
lods
movsb
aam
mov
rolb
popa
movsb
push
cwtl
inc
adc
mov
jp
push
push
fs
sbb
sbb
jne
push
inc
ret
js
pusha
out
or
push
add
lahf
jb
push
add
mov
or
xchg
rolb
jecxz
cmp
inc
inc
mov
popa
sahf
fcmovbe
sub
cli
adc
and
mov
nop
bound
cli
cs
ja
xor
push
xchg
push
arpl
xchg
mov
fwait
repz
mov
sar
cmp
push
mov
roll
loop
pop
cs
pop
adcb
adc
dec
push
fs
adcb
add
sub
add
mov
adc
inc
loop
lock
mov
jnp
aad
add
testl
or
outsb
sbb
cmp
sti
in
dec
fwait
ret
push
mov
ljmp
mov
ret
cld
ucomiss
js
imul
pop
and
mov
adc
jne
test
lock
mov
popa
lock
adc
xor
adc
inc
adc
fcmovnb
data16
dec
repnz
pmullw
push
clc
sub
cmp
addr16
and
test
push
adc
movsl
mov
xor
stc
fcoms
xor
pop
repnz
ret
fadds
adc
add
inc
xor
vcmpss
mov
dec
shrb
xor
mov
push
push
or
xor
xchg
and
mov
es
cmp
or
mov
ss
sub
daa
mov
xor
call
pop
ret
lock
and
jmp
xor
xchg
enter
pop
add
sbb
ljmp
add
adc
popa
sbb
add
or
movsb
adc
fsub
push
adc
pop
data16
mov
mov
sbb
pop
fimull
call
jle
push
lods
subl
adc
or
flds
jl
out
push
push
imul
mov
bound
jb
or
and
js
add
test
adc
mov
push
add
dec
icebp
add
jl
add
xor
shl
add
andb
subb
xor
sbb
rorb
pop
into
sbb
cmp
loopne
xor
sbb
mov
sbb
das
xor
and
mov
pop
jg
movl
adc
sbb
and
fadds
cmp
addr16
xorl
inc
stos
and
bound
adc
in
icebp
inc
jo
adc
mov
loope
jae
nop
pop
add
gs
push
lods
imul
mov
test
xchg
sub
adc
stos
int
add
mov
inc
xor
lsl
loopne
ficoml
fdivs
arpl
fisubs
xchg
push
or
add
push
pusha
ficomps
mov
jns
adc
pushf
pop
cmp
push
jg
out
push
dec
inc
mov
jmp
xor
xor
repz
cmpb
imul
call
pop
push
cmp
outsl
push
jg
fisttpll
test
and
xor
sub
jmp
sbb
mov
aam
sub
dec
test
mov
sti
es
lcall
sub
stos
pushf
nop
aad
add
mov
lods
and
sbb
int
add
xchg
add
push
cmp
push
inc
dec
mov
pop
inc
js
jo
sbb
or
stos
jmp
fistl
ja
adc
cmp
test
xor
rorl
cmpsl
xchg
outsl
dec
adc
mov
loopne
fimull
addr16
xchg
repz
aad
mov
movsb
jno
fldcw
dec
popl
jae
je
lods
out
jbe
fildll
mov
xor
int3
cwtl
lock
mov
cmp
fsubs
bndstx
dec
sbb
adc
in
test
pop
push
jnp
mov
add
jbe
insb
je
and
push
ljmp
and
jbe
add
les
or
scas
loop
lea
and
pop
mov
loopne
movsb
ss
pop
jo
addl
xchg
dec
popa
repz
rcll
sub
inc
push
inc
mov
and
dec
arpl
push
push
test
jmp
or
xchg
into
xchg
mov
cmp
add
mov
test
push
cmp
pop
dec
andl
pop
icebp
or
add
jo
pop
insl
and
adcb
adc
lods
cmp
mov
cmp
mov
stos
inc
inc
xchg
or
and
andb
sub
hlt
nop
test
aam
mov
std
adc
adc
add
dec
mov
popf
pop
and
xor
stc
push
push
jmp
enter
mov
hlt
outsb
jne
mov
test
cmp
pavgb
mov
cmp
pop
jae
jne
subl
movsl
mov
in
or
mov
push
xchg
fwait
lahf
and
mov
jo
mov
or
dec
adc
mov
dec
mov
sbb
test
push
mov
xchg
mov
push
dec
ret
adcb
xor
jnp
jae
add
jmp
or
mov
adcb
dec
insb
xchg
and
lods
mov
cli
jnp
cmp
adc
adc
pop
pop
pop
jbe
es
fisubrs
jno
push
test
popf
xchg
fsubl
add
arpl
push
lahf
push
insl
sub
push
das
int3
mov
cmpsb
inc
add
jl
faddl
cmpxchg8b
iret
adc
movsb
aad
sbb
cmpl
loope
add
xor
add
push
add
je
or
mov
ja
xchg
fmuls
sahf
add
daa
cmp
xchg
das
aas
xor
xor
outsb
testl
or
jle
outsb
pop
jmp
in
mov
outsl
imul
hlt
xor
into
hlt
mov
xor
adc
or
and
imul
push
sar
adc
arpl
sahf
or
pop
add
stos
cmp
sbb
mov
fdivrs
cmp
jne
cmp
adc
jle
add
mov
sahf
and
adc
cmp
sub
or
sbb
and
jns
jp
into
aam
mov
ret
xchg
and
cwtl
test
add
aas
ds
sti
mov
dec
test
jecxz
aas
jo
leave
pop
popf
movsl
test
out
int3
push
mov
adc
imul
jecxz
xor
lea
bound
cmp
push
sub
or
add
mov
cmp
jmp
and
or
sahf
mov
jo
xchg
sub
popa
out
push
adc
sbb
xchg
inc
sub
mov
sub
leave
movsl
add
adc
pop
cmp
add
out
fildl
inc
in
daa
mov
inc
movsb
rolb
ret
stos
pop
cmp
sub
and
add
sbb
fs
dec
fildll
sub
sbb
outsl
lods
addl
hlt
insl
pop
add
in
subb
std
sub
xchg
call
cmp
inc
mov
ss
subb
push
dec
mov
mov
dec
les
lret
add
sub
adc
and
test
pop
add
add
xor
enter
in
in
cmpsb
rclb
imul
add
jmp
test
stos
jo
dec
ljmp
adc
and
xor
pop
adc
pusha
sub
in
sbb
inc
or
out
inc
ds
inc
clc
outsl
ljmp
add
int3
mov
adcb
xchg
jb
xchg
xor
sbb
lret
je
fcomps
dec
jbe
sub
xor
push
adcl
stc
shlb
sbb
add
cmp
dec
setb
and
ljmp
sub
dec
xchg
fistps
adc
fstpl
ss
push
cmp
dec
push
adc
add
push
ss
sub
xchg
test
fmull
sub
es
mov
xor
or
lock
dec
mov
jle
lret
sarl
dec
mov
lods
add
cltd
adc
push
add
xchg
gs
inc
insb
mov
push
fisubrs
inc
push
rorb
cmp
mov
mov
loope
sub
movsb
sub
jge
fiaddl
pop
dec
es
dec
push
addb
push
push
bound
in
and
cmp
icebp
add
and
movzwl
mov
pop
test
xchg
or
aam
mov
rol
mov
fistpl
xor
jmp
lret
lock
movl
aaa
or
sbb
iret
mov
addl
cmpl
cmpsb
mov
dec
loopne
shlb
mov
sub
les
fucomi
adc
test
pop
add
out
and
xchg
pop
dec
popa
dec
mov
or
mov
xor
faddl
adc
inc
mov
fsubrs
or
mov
adcl
fucomip
cmp
je
orl
insl
loopne
push
loop
push
cmp
jne
ss
pop
inc
mov
sub
add
imul
and
jl
shlb
ret
xor
arpl
xchg
pop
fildl
xor
mov
ja
hlt
and
mov
out
dec
and
mov
shrb
adc
xchg
negl
inc
mov
add
or
int
pop
hlt
xchg
add
and
pxor
add
out
jmp
das
xchg
fadds
push
add
sub
movsl
jp
adc
and
daa
enter
mov
fists
adc
decl
inc
test
dec
jbe
inc
push
cmpsb
movsb
test
sub
jmp
jmp
nop
push
add
sub
mov
mov
lock
xchg
hlt
sub
lock
adc
sbb
pop
je
push
imul
pusha
jb
inc
xor
sbb
mov
mov
push
jp
aad
loop
js
sub
adcl
cs
add
and
xor
mov
js
scas
xchg
dec
pop
jmp
inc
mov
xchg
sbb
roll
setae
sub
nop
sbb
and
iret
mov
add
cwtl
xchg
and
add
mov
mov
dec
cli
lahf
mov
cmpsb
push
pop
pop
cmpsb
mov
xor
pop
and
dec
or
fucom
sub
dec
loope
popa
stc
pop
loopne
or
add
jno
negb
adc
mov
orl
stc
or
pop
mov
pop
adc
cmp
jne
xchg
add
pop
add
dec
jmp
mov
and
sub
fbld
test
subl
push
add
or
mov
call
dec
and
pop
cmp
sub
lock
xor
in
sbb
sub
movsb
sbb
sbb
lock
adc
ljmp
jp
xorl
xor
sub
add
mov
lds
or
pop
scas
xlat
cmc
pop
lock
in
daa
mov
nop
es
insb
or
test
nop
dec
lods
cltd
fsubrs
push
cwtl
cmp
jo
lret
push
push
and
cld
mov
shll
scas
add
add
add
inc
jne
push
mov
inc
mov
aam
or
js
jne
movb
test
adc
push
add
and
mov
pop
sar
fdivr
cs
test
jge
mov
sub
inc
setle
shll
xchg
fstpl
rcrb
sub
rclb
fldt
or
inc
jns
idivl
add
adc
sub
scas
mov
rorl
sub
call
addr16
call
faddp
notl
leave
push
repnz
xor
mov
push
in
xchg
sub
iret
and
sbb
and
pop
inc
lods
jo
es
xchg
mov
pop
sbb
rcl
cmc
mov
jmp
jmp
subb
stc
or
aaa
dec
push
or
pusha
inc
push
pop
dec
lret
sub
and
mov
ret
and
inc
jnp
mov
adc
push
adc
pop
movsb
scas
mov
and
jo
sbb
int3
je
and
fldenv
icebp
cmp
lea
in
test
outsb
stc
add
mov
push
hlt
dec
stc
add
mov
frstpm(287
mov
sbb
into
add
adc
jbe
sbb
mov
orb
imul
test
push
cmpsb
imul
lods
sub
mov
addr16
orb
imul
inc
adc
daa
pop
ret
or
jmp
jo,pn
pop
cmp
lds
add
jbe
pop
nop
xchg
xor
je
or
push
sub
ret
xchg
mov
int
fsubl
dec
test
insb
out
jl
lea
adc
je
or
or
adc
sahf
pop
inc
aam
push
adc
test
push
or
mov
loope
mov
inc
sbb
cmpb
in
push
adc
sbb
clc
xor
adc
hlt
xor
xchg
xchg
xor
push
loop
int
sbb
inc
pop
xchg
scas
ljmp
fcoms
adc
push
clc
push
fcomps
addl
jno
andb
xchg
fisubrs
fcom
mov
xor
and
loope
inc
test
pop
dec
add
sbb
adc
fsubs
add
lock
sub
push
sbb
adc
mov
adc
shrb
nop
add
add
imul
push
nop
les
adcb
cmp
jle
push
lods
mov
rorb
sub
aam
mov
xchg
sbb
lds
add
shrl
movsl
cmp
sbb
xor
mov
btc
femms
xchg
adc
cmp
push
pop
dec
sub
ret
xor
data16
js
pushf
push
cli
and
xchg
negb
cld
outsb
jl
je
test
aaa
lds
push
fdivs
sbb
sub
jne
lret
stos
sbb
adc
les
shl
insl
cmpsb
or
cmpsb
xchg
add
nop
or
mov
ret
aam
xchg
dec
lret
mov
mov
loopne
xor
and
push
lea
push
nop
cmpb
sbb
xchg
inc
je
or
add
inc
ret
and
inc
jo
ret
sub
add
xchg
jge
ret
mov
inc
sub
popf
or
in
xor
inc
mov
loop
mov
test
cmpsb
cld
cmp
popa
nop
addr16
dec
push
add
and
xor
in
xchg
add
inc
loop
ficoms
sub
jae
add
xchg
push
sbb
shlb
pushf
ficoms
pop
push
std
roll
cld
push
cmpsb
fwait
jge
dec
std
push
add
and
das
aaa
lsl
inc
xchg
roll
int3
ds
clc
icebp
inc
std
dec
mov
push
or
push
icebp
negb
xor
adc
lods
add
or
jle
nop
leave
jmp
push
pop
xor
test
addr16
pusha
insb
mov
out
sub
sub
dec
adc
xchg
adc
cmpsb
xor
es
sahf
mov
adc
sbb
jmp
cltd
add
jge
cmp
dec
jns
mov
pop
addr16
out
imul
or
es
int
push
out
mov
push
or
jo
pop
std
fwait
jb
lea
mov
enter
aad
push
push
add
add
jo
inc
dec
cmovo
ds
mov
inc
mov
or
mov
test
dec
mov
push
inc
enter
call
jp
call
pop
push
repnz
inc
clc
adc
xorb
adc
add
inc
adc
pop
jbe
mov
fildll
out
outsb
enter
add
xchg
jbe
push
cmp
test
pop
fimuls
sbb
jbe
mov
push
pop
fsubrs
movsb
enter
stos
or
jnp
push
cmp
and
cmpl
fcoms
jnp
orb
push
and
addr16
int3
or
and
mov
clc
xchg
adc
loopne
lret
and
xchg
fsubp
sti
inc
and
xchg
pop
lock
xor
repnz
adc
sysenter
enter
or
or
mov
out
sti
lock
sbb
imul
mov
stos
xor
les
push
add
insl
sub
pop
xor
cmp
outsl
and
fcom
dec
cmp
cmp
inc
or
pusha
pusha
push
and
push
lods
rclb
or
or
mov
mov
inc
arpl
enter
nop
inc
xchg
push
lahf
or
xchg
pop
jecxz
and
aad
mov
and
movb
pop
mov
in
sbbb
ret
and
scas
sub
mov
xor
test
add
mov
cmp
daa
xchg
inc
cld
fsts
shl
dec
fiaddl
sub
nop
jle
mov
pushf
sub
daa
dec
push
leave
add
inc
popa
jbe
add
or
mov
xchg
jmp
add
add
sahf
icebp
fidivrl
popl
push
or
xchg
xchg
xchg
es
stc
xchg
fabs
jne
pop
cmp
popl
xorb
push
push
push
int
out
ja
xchg
les
mov
add
jg
lock
int3
test
xchg
frstor
push
add
add
mov
arpl
sti
mov
cmc
mov
sarl
sbb
jns
push
or
dec
pusha
xor
cmp
in
xlat
aas
lock
sbb
push
cwtl
pop
jecxz
addl
test
imul
push
xor
jmp
insl
mov
mov
jno,pt
inc
ret
pop
inc
fisubrl
add
nop
sub
nop
xchg
lea
lock
and
lock
mov
jle
or
mov
cmpsl
ss
xchg
insb
or
mov
sbb
addl
popf
xorb
movsb
cmpb
dec
fcompl
xchg
imul
rolb
xor
ljmp
call
inc
fildl
pop
hlt
dec
hlt
xor
xlat
fsts
aam
repnz
dec
enter
outsl
or
arpl
add
sub
jo
xchg
pop
imul
push
dec
outsb
repz
out
test
add
hlt
or
data16
push
sub
lods
rcrb
jnp
repz
enter
aam
push
in
pushf
push
mov
int
and
je
adc
add
in
int3
sbb
pushf
js
cmp
adc
sbbb
fs
dec
add
adc
jnp
in
addb
xor
ss
repz
pop
cmp
mov
pusha
inc
or
sahf
out
lcall
repz
ds
int3
push
xor
out
dec
add
nop
out
mov
xor
jns
jns
xor
out
push
insb
cmp
idivb
int
dec
dec
or
xchg
in
jge
iret
repz
lods
jl
push
test
jae
sti
fmulp
push
or
aam
es
push
cmpsl
stc
xor
add
lods
push
jo
xchg
sub
repz
mov
push
lahf
cmp
arpl
add
jge
iret
adc
jo
inc
and
xchg
sahf
into
cmp
cmp
xchg
jle
mov
daa
push
push
pop
add
mov
sub
and
and
imul
sub
jl
cmp
mov
test
inc
push
rolb
dec
add
mov
inc
leave
push
pop
pop
dec
call
add
and
clc
and
pop
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
push
iret
dec
pop
and
add
ljmp
popa
je
xor
xor
ret
pop
mov
add
add
pop
add
push
push
adc
das
add
fucompp
add
adcl
enter
shlb
jae
inc
mov
push
lods
jae
push
add
or
inc
cld
pop
adc
add
and
xor
push
je
test
out
mov
sahf
out
mov
out
sahf
fsub
in
hlt
cld
add
cmp
repz
adc
and
repz
repz
inc
dec
push
iret
repz
pop
fs
je
test
add
xchg
cmp
add
fs
clc
jb
jb
push
jno
jb
mov
cmp
jns
jae
js
fadds
inc
sahf
mov
in
cmp
sub
pop
call
and
and
xchg
xchg
out
sub
jle
mov
or
add
adc
insb
cld
jns
out
pop
push
mov
sahf
out
in
add
sbb
repz
sub
dec
pop
push
cmp
cwtl
test
call
add
adc
popf
xlat
jbe
push
xor
push
sti
rorl
push
inc
xor
pop
jmp
xchg
paddsb
mov
push
and
stos
int3
dec
test
jo
popaw
popf
xlat
ficoms
push
cwtl
mov
cmp
mov
fmul
mov
add
xor
out
adc
and
jle
mov
adc
push
and
sub
add
add
lcall
lret
sti
push
fdivr
mov
movsb
add
or
mov
or
add
inc
subps
repz
jo
mov
fnstcw
repz
or
out
out
fcompl
push
adc
mov
or
repz
repz
or
iret
repz
adc
iret
repz
hlt
push
add
sbb
sbb
xor
cmp
repz
add
push
iret
repz
repz
fld
pop
add
push
add
repz
insb
dec
test
repz
or
in
ds
repz
mov
jns
out
mov
mov
sahf
out
sahf
mov
test
sahf
out
out
sar
jmp
fcomps
push
adc
lret
xchg
jp
mov
fdivp
cmp
or
or
push
punpckldq
movsl
adcb
jbe
into
push
add
jle
xchg
jg
out
sbb
push
aad
sbb
cmp
pusha
sbb
push
call
loop
dec
push
iret
repz
jo
mov
cmp
fsubr
clc
cmpsl
out
sahf
cmpsl
push
or
and
xor
jns
cmp
sbb
lds
jbe
adcb
and
fildl
adc
bound
sbb
and
xor
sti
pushf
and
fcoml
daa
fildll
xchg
orl
dec
dec
dec
add
adc
outsb
or
adc
xor
mov
adc
daa
daa
daa
daa
adc
pop
add
pushf
es
pop
inc
shll
jb
adc
pop
mov
imul
sahf
out
mov
adc
mov
je
addb
call
fs
pop
push
enter
cltd
pop
leave
mov
cmp
repz
push
iret
repz
out
ds
lock
adc
xor
out
sahf
inc
dec
pusha
jo
nop
jne
out
movsb
mov
inc
xchg
mov
jns
test
mov
les
dec
adc
mov
aas
ja
pop
or
or
lsl
lock
out
push
std
add
cld
adc
out
sahf
out
stc
xor
dec
sahf
out
sahf
negl
cmc
test
out
hlt
cwtl
repz
out
sahf
out
icebp
shl
in
repz
out
clc
out
or
in
sbb
iret
repz
xor
inc
ljmp
ret
xacquire
iret
das
fcmovnbe
and
sbb
enter
mov
cld
ja
lahf
mov
mov
add
or
or
iret
mov
push
pop
ret
push
negb
add
add
push
lcall
or
add
push
xor
inc
outsb
pop
rolb
pusha
cmp
inc
xchg
negb
ja
adc
pop
add
pop
sub
outsb
das
xchg
rorl
adc
mov
xchg
rolb
ficoms
pop
pop
add
outsl
xchg
stc
mov
cmp
sti
cld
std
push
cmp
repz
add
or
cmp
test
rcll
cmp
aam
add
mov
inc
push
pushf
xchg
jmp
jbe
push
in
testl
jbe
out
sbb
dec
enter
mov
sub
sbb
add
cmpsl
inc
or
cmpb
cmp
ss
sbb
mov
out
or
test
rclb
fidivs
lahf
neg
fsubs
cld
push
out
imul
scas
jg
or
int3
push
les
mov
movsb
xchg
add
push
iret
inc
jns
es
inc
mov
testl
push
call
pusha
push
pop
cmpsb
out
inc
cmpsb
clc
push
fidivrs
loopne
pop
das
into
mov
fisubrs
rolb
push
shlb
add
inc
cmp
fildll
push
adc
cmp
loope
push
scas
scas
mov
mov
ret
imul
cmp
fdivp
insb
or
push
xchg
aam
imul
add
push
out
faddl
enter
je
mov
push
push
push
dec
push
addl
outsl
push
fsubr
into
jg
cmp
movsb
inc
push
clc
cmp
pop
push
aam
andb
inc
fsubrl
fidivs
addr16
jl
nop
mov
pop
xchg
dec
lock
mov
and
or
or
outsl
out
pop
int3
aaa
cmp
inc
hlt
jbe
push
pop
enter
scas
cmp
fmull
jge
inc
imul
push
mul
mov
adc
faddl
sbb
pop
xor
bswap
jnp
cmpsb
mov
fisubrs
iret
jnp
push
ss
adc
xchg
outsb
push
addr16
rcrb
sarb
cmp
dec
add
int3
dec
add
js
es
and
adc
div
sbb
out
es
dec
jle
icebp
into
mov
mov
shll
jo
cmp
call
out
into
pop
pop
pop
push
and
outsb
cmp
mov
push
cmpsb
xchg
push
fsubrl
cmp
push
sahf
add
push
push
dec
cmpsl
mov
out
sub
push
test
cwtl
aas
faddp
repz
pop
mov
adc
pop
out
hlt
ds
dec
clc
sarl
pcmpeqd
cmp
dec
mov
cmp
les
sub
jns
cmp
outsb
les
xor
pop
pop
incb
movsb
aas
cmpsb
push
inc
add
mov
adc
dec
subb
mov
add
add
add
and
add
push
addb
add
leave
or
or
pop
inc
add
add
push
add
add
pop
in
cld
sti
std
inc
add
add
push
add
add
dec
dec
add
add
push
add
inc
pop
mov
jl
add
push
cmovp
fstp
jnp
inc
mov
mov
add
mov
pop
dec
inc
pop
inc
and
fisubrl
pop
mov
test
cmp
push
dec
dec
fwait
inc
add
fcmovnu
jae
adc
dec
xchg
push
loop
scas
mov
mov
mov
loopne
xlat
or
dec
xor
or
mov
cs
and
inc
push
cs
and
jns
shll
inc
sbb
js
mov
dec
push
rsqrtps
movsb
push
mov
aaa
dec
dec
jge
mov
xor
push
mov
and
inc
xchg
xor
sub
push
inc
arpl
or
insb
add
or
add
mov
jns
inc
in
and
mov
and
mov
fdivl
lods
mov
xchg
or
sub
add
dec
dec
or
and
mov
popa
dec
imul
sti
xchg
and
and
pop
pop
inc
dec
pushl
mov
jge
inc
and
arpl
lods
cmp
jns
scas
popa
outsb
ds
jo
jae
and
mov
jb
gs
and
cwtd
pop
mov
sub
or
inc
pop
inc
sub
cmpsb
sub
je
js
xor
jns
adc
gs
jne
xchg
jge
pop
insl
jae
insb
jbe
xor
pop
addb
rorl
shrb
into
leave
data16
insl
xor
adcb
push
clc
pop
push
ja
dec
pusha
fld
loopne
test
push
mov
outsl
je
je
and
pop
imul
push
or
inc
rep
and
push
sub
adc
dec
orl
sub
sub
xor
mov
out
xor
inc
fs
outsl
or
cltd
jbe
imul
or
jno
xor
xor
sbb
xchg
xor
pusha
dec
sub
mov
test
sbb
and
dec
or
mov
inc
pop
pop
xor
push
sbbl
pop
xor
mov
enter
cmp
das
sub
and
jg
pop
adc
add
inc
push
push
push
inc
incl
push
dec
push
loopne
push
xor
pop
pop
dec
dec
dec
xor
pushl
ds
push
add
inc
dec
push
inc
inc
push
xor
push
inc
inc
xor
jg
decl
dec
inc
inc
ss
push
inc
ss
dec
ss
xor
pop
push
dec
mov
push
push
xor
dec
dec
aaa
cmp
dec
xor
es
pop
aaa
xor
push
das
mov
add
xor
inc
dec
xor
push
dec
inc
xor
mov
or
xor
inc
push
dec
dec
push
dec
xor
pop
inc
xchg
or
push
dec
xor
cmp
ret
mov
ss
inc
loop
dec
inc
xor
push
cli
xor
mov
push
xor
pop
dec
mov
dec
add
dec
ljmp
sti
push
pop
xor
aam
dec
pop
shlb
xor
ss
push
inc
push
dec
dec
push
inc
das
mov
jg
push
inc
dec
xor
dec
push
dec
inc
dec
fcompl
mov
outsl
or
xor
inc
push
inc
push
inc
inc
ss
add
dec
dec
dec
cmp
inc
dec
xor
aaa
add
outsl
sub
mov
dec
cs
xor
fsubrl
clc
add
dec
dec
dec
mov
push
dec
mov
adc
cmp
inc
xor
push
dec
xor
call
xor
loopne
mov
insb
dec
ss
inc
inc
pop
push
dec
xor
add
dec
push
dec
push
sbb
sbb
in
sbb
ss
inc
push
push
mov
xor
mov
xor
mov
in
pop
xchg
xor
cmp
shll
inc
pop
hlt
push
xor
inc
dec
inc
push
jb
mov
dec
inc
ds
xor
push
pop
dec
pop
inc
insb
inc
pop
mov
inc
cmp
cmp
inc
jl
mov
insl
inc
pop
out
push
pop
inc
dec
inc
push
xor
inc
dec
push
dec
mov
inc
cmp
dec
mov
inc
cmp
dec
inc
inc
aaa
ds
dec
push
pop
inc
cmp
sbb
das
adc
push
push
push
push
dec
dec
push
inc
and
adc
dec
mov
add
ss
jp
dec
push
cmp
lret
sub
add
xor
sbb
xor
cmp
fisttps
rolb
xor
pop
dec
inc
dec
or
or
inc
push
inc
inc
fdivrl
mov
jp
dec
cwtl
inc
inc
xor
pop
dec
cs
loopne
call
pop
push
dec
pop
push
dec
push
dec
inc
pop
inc
dec
pop
push
ss
dec
mov
fwait
mov
xor
xor
mov
sbb
dec
push
inc
dec
xchg
adc
pusha
outsl
adc
push
xor
push
add
sahf
push
inc
xchg
shrb
lods
mov
sbb
dec
push
push
cmp
inc
jo
xor
adc
fwait
mov
dec
xor
loop
jae
xchg
push
in
xor
push
inc
dec
push
es
inc
push
xor
push
shlb
sub
dec
outsb
mov
test
insb
xchg
push
out
inc
test
pop
pop
mov
ss
push
push
ficomps
dec
hlt
ljmpw
xor
push
xor
aaa
pusha
push
push
mov
aaa
xor
push
mov
mov
dec
dec
xchg
hlt
or
and
mov
je
hlt
cld
in
lcall
ljmp
fcmovnbe
mov
and
dec
dec
push
push
xor
inc
jno
rorl
fdivl
ret
rclb
repnz
push
ss
or
dec
popa
adc
cmp
and
xor
inc
fsubrl
xor
rcrl
inc
aaa
xor
xchg
xor
mov
xor
dec
lret
hlt
ss
inc
add
cwtl
inc
xor
mov
dec
dec
xor
pusha
sub
js
inc
inc
or
adc
xchg
es
stos
inc
sub
dec
xchg
xchg
movsb
dec
cmp
out
je
mov
push
cmp
jle
inc
dec
xor
dec
jp
sbb
dec
dec
or
imul
push
into
inc
gs
rclb
dec
pusha
pushf
pusha
push
mov
push
push
out
xor
xor
addl
xor
add
push
nop
outsb
pop
and
inc
dec
xchg
mov
ret
xor
add
or
in
pop
add
push
dec
dec
xor
inc
adc
insb
dec
add
pop
xor
test
dec
shr
rcrl
push
push
xor
push
push
cmp
out
aaa
or
push
push
fwait
sub
scas
dec
dec
xor
lods
pusha
popa
mov
sahf
dec
cmp
inc
or
mov
lcall
add
dec
cmp
jle
inc
or
inc
xchg
test
xor
test
je
mov
lock
inc
xor
add
lcall
pop
xor
push
dec
dec
nop
in
inc
in
dec
jo
test
insb
es
ret
adc
push
push
pop
aam
adc
inc
cmpsb
insb
push
lods
jo
fstl
xor
sbb
xor
mov
pop
dec
xchg
stos
mov
dec
xchg
nop
inc
incb
andl
cmpsb
push
dec
inc
mov
pop
push
movsb
fisubrl
cld
cmp
inc
push
push
push
test
fdivl
inc
jb
loop
or
cwtl
mov
mov
adc
pop
cmp
xor
cmp
fdivl
sub
aaa
movsb
mov
push
ret
cmpsb
push
mov
xor
push
xchg
stos
cmpsb
xor
orb
or
xchg
sub
dec
add
js
dec
pop
int3
push
test
xor
ss
pop
sbb
dec
fdivs
and
hlt
inc
pop
xchg
inc
andb
dec
or
lret
jb
dec
inc
sub
and
inc
sub
push
repz
push
or
push
lcall
add
sub
sbb
dec
inc
decb
je
call
sbb
aaa
push
xor
mov
xchg
mov
push
or
rcll
test
pop
dec
xor
push
cmp
jb
xchg
push
inc
cmp
inc
test
push
incb
dec
add
cmpsb
inc
jbe
jne
xor
adc
xor
or
ret
or
rcll
inc
push
movsb
inc
mov
roll
xor
cmp
pusha
xor
xor
scas
or
inc
push
pop
inc
push
shl
xchg
inc
push
test
dec
cmpsb
xor
or
inc
xchg
lret
mov
adc
adc
jo
lcall
dec
sahf
mov
dec
dec
shlb
adc
nop
pushf
or
mov
enter
adc
inc
xchg
call
test
ss
dec
cmp
pusha
inc
or
fimuls
xchg
mov
cli
or
add
xchg
mov
sbb
push
inc
pop
cmp
push
or
xor
inc
dec
mov
insb
pop
and
xor
inc
loope
adc
inc
bound
stos
push
inc
push
dec
stc
push
xor
fdiv
cmp
xor
aaa
xlat
push
aad
clc
push
xor
push
inc
pop
lods
sbb
ret
mov
xor
sub
pop
xchg
jl
xor
mulb
decb
inc
inc
sahf
dec
test
or
dec
enter
add
stos
pop
sub
shlb
xor
xchg
pop
movsl
push
mov
inc
push
fs
push
xorb
xor
xor
sub
ret
dec
pushf
dec
push
push
mov
push
test
xor
sahf
in
pop
ret
cmpsb
xor
xor
push
jo,pn
dec
sbb
xor
dec
insb
push
mov
inc
shlb
xor
xchg
lcall
inc
addl
adc
xchg
adc
push
popa
mov
sbb
add
scas
xor
push
jbe
xor
jmp
xor
cmp
les
xor
fiaddl
into
push
ss
push
add
in
pusha
call
pop
pop
mov
inc
xchg
inc
jle
mov
sbbl
dec
or
loop
dec
dec
adc
pop
dec
mov
test
and
inc
out
sbb
push
orb
xchg
xor
and
test
dec
add
push
push
fs
pusha
dec
hlt
inc
inc
addl
push
dec
cmp
push
inc
jne
xlat
mov
mov
push
push
sbb
sub
push
dec
push
scas
nop
dec
jp
or
or
push
adc
push
shll
jle
dec
xor
or
cs
xor
adc
lods
shlb
mov
push
popa
jb
loopne,pt
push
cmp
cmpsb
or
cmp
popf
dec
hlt
inc
mov
push
mov
push
scas
dec
cld
xor
dec
aam
push
mov
xor
add
push
mov
lcall
mov
jbe
cwtl
or
sbb
push
scas
xor
lret
adc
push
xchg
or
out
cld
cmp
xchg
stos
sbb
lret
addb
faddl
scas
scas
aam
mov
cmp
pop
dec
or
test
in
mov
xor
mov
dec
dec
cmp
xor
aaa
ss
ret
dec
cmpl
nop
clc
xor
or
add
push
aam
dec
dec
test
xor
pop
cli
push
inc
push
add
dec
adc
call
dec
inc
xor
xor
pop
out
add
int3
or
enter
push
insb
push
xchg
loop
mov
hlt
out
inc
dec
cmp
fs
aaa
push
add
dec
fdivl
pop
and
sub
dec
lods
enter
push
orb
push
xor
push
push
mov
dec
push
sub
push
loopne
xor
ret
frstor
push
push
ss
xchg
ficoml
xor
rorb
insb
mov
mov
push
cmp
dec
inc
inc
dec
or
xor
dec
pop
push
xor
lods
adc
push
nop
inc
insb
dec
and
inc
int3
aaa
xor
adc
orl
mov
push
adc
call
dec
push
sahf
dec
fisubs
cltd
loopne
lock
cmp
in
dec
loopne
xor
dec
xchg
sbb
stos
pop
std
cld
pop
push
push
push
sahf
in
dec
mov
mov
sbb
cmp
dec
dec
ljmp
cs
push
push
shl
dec
mov
or
popa
mov
cs
mov
jb
xchg
mov
sbb
mov
dec
outsb
push
dec
dec
push
xor
jbe
out
fmuls
loopne
or
xchg
dec
dec
dec
dec
xor
inc
imul
pop
loopne
sahf
push
dec
test
cwtl
shl
push
pop
inc
and
dec
pop
or
pop
push
notb
inc
cmp
jl
dec
dec
inc
dec
dec
inc
stos
inc
pusha
adc
in
push
xor
inc
xchg
push
or
dec
xchg
inc
popa
push
ficoms
je
adc
xor
inc
push
inc
cs
fs
sbb
inc
aaa
inc
bound
fimuls
push
mov
inc
dec
dec
inc
xor
inc
push
or
ljmp
pop
xor
or
xor
and
mov
inc
jp
inc
mov
fsubl
xchg
dec
pop
xor
xor
xor
ret
in
call
inc
add
mov
pop
enter
or
adc
js
xor
dec
cmp
adc
or
pop
push
cmp
mov
hlt
xor
dec
xor
inc
jp
sub
xor
jp
jbe
fists
inc
sbb
jl
dec
inc
int3
inc
xor
cmpb
push
ss
cmp
rolb
lcall
dec
mov
mov
insb
in
pop
xor
jo
je
inc
cmpsb
dec
ss
push
dec
mov
cwtl
inc
sub
or
xor
and
mov
pusha
mov
popa
ret
dec
dec
push
push
push
cltd
and
ljmp
shlb
jl
xor
push
lods
push
inc
dec
push
cmp
mov
call
inc
pop
test
mov
sub
lods
sub
cwtl
push
es
xor
mov
int3
inc
enter
test
dec
out
movsb
push
sub
xor
sar
push
pop
les
or
aam
dec
xor
pop
xor
mov
dec
imul
and
xchg
push
outsb
xor
out
push
es
sub
hlt
pop
xor
fcomp
or
dec
jp
sarb
xorl
ss
call
pop
xor
inc
dec
push
adc
and
je
push
dec
bound
dec
hlt
mov
dec
pop
rclb
inc
push
test
pusha
cmp
cmp
andl
push
pop
enter
or
es
and
inc
shll
pop
xor
cwtl
aaa
pop
cwtl
rcl
dec
stos
repnz
inc
cmpb
dec
fcomps
push
or
xor
push
pushf
or
inc
data16
dec
mov
push
adc
lods
ss
mov
dec
inc
push
dec
and
push
pop
ret
push
cwtl
ret
cmp
cmp
lds
cmp
divb
inc
mov
sbbb
stos
cmp
push
lods
lods
dec
push
push
adc
dec
inc
loopne
cli
fisubrs
xor
pop
mov
stos
ret
rorl
fcmovb
pop
dec
cmp
test
xor
cmp
ficoml
dec
mov
dec
shl
or
sbb
push
xchg
mov
inc
dec
push
dec
jo
push
push
cmp
pop
add
cs
inc
dec
ss
push
dec
inc
pop
add
sub
jle
push
cwtl
aaa
hlt
pushf
inc
xor
xchg
data16
aaa
lret
outsb
es
inc
xor
xor
ljmp
mov
cwtl
sub
mov
dec
push
fsub
sbbb
jle
pop
push
adc
inc
data16
xchg
cwtl
dec
divb
and
jp
fisubrs
mov
dec
or
inc
je
sbb
xor
shll
xor
ret
mov
movsb
addb
ret
fisttpll
push
cli
jb
fimuls
stos
sbb
xchg
xchg
shrb
movsb
push
aaa
pop
data16
add
fidivs
adc
add
addb
or
dec
push
cmp
fimuls
inc
adc
cmp
sub
xchg
loop
push
sub
insl
cmp
test
cmp
in
mov
push
xchg
mov
xor
add
sbb
pusha
inc
dec
bound
xor
or
fimull
push
add
xchg
lock
mov
push
cmp
sub
push
rorb
pop
pop
sbb
jb
push
js
or
scas
add
test
add
push
mov
mov
xor
add
test
cmp
xchg
jo
cmc
bound
dec
repnz
and
out
mov
add
jb
and
mov
cmp
inc
jb
in
fldl
cmp
and
push
fs
movl
stos
insb
push
inc
ss
adc
inc
dec
stos
dec
dec
push
sub
push
pop
and
push
mov
adc
dec
cmp
dec
dec
xor
pop
mov
pop
push
shl
xchg
or
or
add
dec
push
adc
adc
sbb
ss
shlb
dec
mov
fs
movsb
xor
add
adc
xor
scas
pushf
lcall
push
or
dec
and
sub
sub
and
dec
call
sub
push
fimull
call
dec
jb
xchg
push
mov
cmp
xor
int3
movsb
sbb
lret
lcall
subb
push
jmp
ljmp
push
pop
pop
jle
xor
mov
nop
inc
pop
inc
sub
add
inc
jbe
je
push
cs
pusha
lret
fs
xor
mov
mov
inc
inc
push
aaa
dec
pop
add
test
aam
push
ror
pusha
js
repnz
pop
mov
push
xchg
aam
xor
adc
dec
stos
xor
dec
add
in
mov
jp
sbb
mov
pusha
adc
enter
jo
lock
ss
push
ss
push
push
push
xor
dec
loop
mov
mov
fcoml
es
sbb
jle
mov
or
outsb
push
inc
retw
xor
int3
dec
and
or
xor
dec
push
pop
sbb
stos
jle
add
or
xchg
cs
ljmp
dec
pop
mov
adc
dec
cmp
lret
adc
stos
cmp
jl
cmp
dec
incb
push
and
sub
mov
xchg
pop
push
mov
ss
push
sub
xor
mov
mov
inc
inc
xor
mov
mov
push
push
mov
rclb
shlb
xor
pop
dec
loop
add
inc
xor
or
pop
out
lods
nop
cltd
mov
mov
dec
add
mov
xor
mov
aaa
sub
xor
xor
sub
mov
dec
sbb
sbb
or
inc
mov
inc
rcl
dec
movsb
push
inc
xchg
xchg
dec
push
movsb
loop
inc
stos
dec
in
movsb
pop
and
scas
push
movsl
scas
pop
and
sahf
push
push
dec
ret
and
pusha
add
inc
xor
inc
or
xor
dec
movsb
inc
hlt
sbb
loop
mov
into
int3
ss
dec
clc
dec
push
xor
int3
push
in
pop
ficompl
sub
dec
mov
cmp
xchg
push
pop
pop
fidivrs
xchg
call
or
push
inc
inc
push
loopne
sub
inc
mov
or
movsb
cmp
inc
movsl
mov
inc
aaa
insb
inc
xchg
push
int3
gs
mov
pushf
rorb
rorl
push
jbe
xor
orb
mov
cmpsb
push
rclb
test
xor
cmp
dec
or
xor
sbb
daa
adc
inc
sahf
xor
add
xor
mov
test
push
popa
xchg
dec
push
out
pusha
inc
xor
add
xchg
loopne
push
push
insb
pop
push
inc
sub
push
fs
popa
adc
call
add
sarb
fiadds
push
mov
mov
inc
cmp
inc
pop
push
orb
shll
dec
call
int3
subl
inc
push
add
addl
or
aam
xor
push
rcll
loop
ret
xor
ret
mov
cmpsb
adc
dec
fmull
in
in
aaa
xor
cmp
mov
adc
mov
dec
push
repnz
nop
mov
imul
push
and
and
or
inc
push
cli
add
pop
add
es
pop
cmp
inc
inc
push
dec
dec
dec
xlat
cltd
movsl
or
sub
and
or
dec
call
repnz
cwtl
jp
adc
outsb
sbb
fdivl
cmp
xor
rolb
lcall
inc
bound
stos
xor
cs
inc
stos
rorl
and
cmp
push
sub
inc
inc
test
push
cmp
xor
push
es
push
mov
shl
xor
int3
add
xor
dec
dec
pop
sbb
mov
lcall
mov
push
cltd
push
call
push
add
mov
pop
incb
aaa
inc
ror
lret
pushf
nop
adc
jne
push
xchg
push
push
inc
cli
incb
test
stos
lcall
add
mov
roll
ds
add
fadds
mov
adc
bound
cmp
adc
shlb
pop
adc
daa
stos
movsb
dec
rcrb
and
rcll
push
xor
jo
mov
dec
push
adc
dec
pop
aam
xor
sbb
xor
inc
ret
or
pusha
ljmp
sub
shlb
xorb
int3
inc
repnz
push
xor
pop
inc
inc
sub
pop
pop
push
sub
aam
push
push
pusha
cmp
cltd
mov
push
push
rolb
cmpsb
test
mov
sub
mov
mov
or
or
or
movsb
js
push
pop
dec
or
sbb
or
xor
add
dec
sbb
mov
shlb
mov
imul
loop
push
loop
xor
or
push
push
inc
push
dec
dec
cmp
aaa
loope
loopne
call
mov
add
lret
call
push
pop
dec
pop
sub
xor
sbb
dec
sahf
lcall
xor
or
push
ss
xor
pop
mulb
stos
and
lret
push
jbe
adc
xor
fiaddl
pop
ss
xor
inc
push
inc
ret
add
sbb
dec
ret
insl
subl
cmpsb
and
cld
xor
inc
shlb
sbb
add
loopne
pop
mov
jo
push
sub
stos
xor
pushf
outsl
push
mov
jp
xor
lods
push
inc
fadds
add
cltd
sbb
xchg
ret
mulb
add
inc
jmp
sub
insb
pop
rclb
lret
les
mov
push
dec
fiaddl
cmp
dec
xor
shll
push
or
je
push
sub
cmp
pop
dec
push
inc
dec
inc
mov
pop
sbb
push
sub
jle
cld
aam
stos
or
les
xor
sub
movsb
push
divb
inc
lock
gs
test
mov
loope
mov
xor
sub
push
leave
adc
mov
sbbl
out
movsb
mov
pop
push
inc
push
ret
in
ss
push
dec
dec
push
sub
clc
rcrb
dec
mov
cmp
xor
dec
add
pop
add
mov
pusha
mov
call
mov
sub
stos
add
push
push
dec
lret
mov
bound
push
popa
dec
xor
fs
fs
push
insl
adc
dec
call
dec
cwtl
dec
push
dec
loopne
push
sub
push
cmpsb
jo
aad
pop
and
ljmp
push
push
loop
and
aam
add
or
xor
rclb
cmp
movsb
push
ret
push
addl
sbbl
cmp
dec
je
add
pop
push
sahf
stos
add
dec
inc
ss
call
dec
inc
dec
shr
and
fdivrs
cmp
xor
sbb
cmp
test
ret
sub
dec
dec
mov
push
fs
aam
push
inc
js
push
cwtl
mov
hlt
rclb
jo
mov
adc
cmp
add
inc
push
adc
dec
xor
xchg
dec
popa
push
dec
push
hlt
cwtl
lcall
aaa
shl
adc
mov
jle
push
cs
xor
cltd
movsb
push
pop
push
or
cltd
dec
dec
lock
inc
sahf
add
data16
push
aam
xchg
or
adc
shll
inc
mov
sub
push
mov
mov
xor
push
inc
scas
push
jb
push
shll
cmp
outsb
pop
mov
xor
xor
xor
inc
sbb
pop
push
and
add
add
adc
adc
jmp
shll
dec
incb
test
push
repnz
orl
inc
subl
pop
or
inc
add
or
xchg
xchg
jp
or
xor
sbbb
pusha
xor
xorb
or
fisubs
push
stos
sahf
dec
inc
xorb
fcoms
xor
jb
or
push
stos
dec
sahf
xchg
adc
data16
add
and
pop
sbb
dec
xchg
test
and
jo
xor
shrb
push
je
loopne
cmp
push
js
fimuls
call
adc
sub
in
dec
push
test
adc
inc
xor
into
repnz
or
pop
cmp
push
add
or
sub
xor
cmp
sbb
xor
test
dec
add
push
dec
cs
push
addl
in
xor
xor
movb
xor
pop
pop
jo
inc
gs
push
xchg
push
loop
cmpsb
pop
sub
inc
dec
rclb
xchg
cmp
mov
and
rorb
aam
push
sub
lcall
xor
jo
sub
cltd
mov
add
lret
sbb
pop
add
fidivs
ret
fcompl
inc
inc
xchg
ret
cmpsb
xor
and
inc
inc
push
cmp
xor
inc
rorb
stos
push
sbb
push
mov
cmp
push
inc
subl
dec
cmp
notb
push
movsb
inc
and
jbe
sbb
xor
pop
scas
push
mov
cmp
and
ds
pusha
inc
xchg
sbb
add
lcall
mov
cmp
xor
cmp
outsb
clc
faddp
xor
leave
and
adc
ret
and
jbe
pop
cmp
bound
push
mov
xor
push
cs
enter
int3
add
cwtl
mov
push
loopne
xchg
pushf
pop
dec
dec
xor
add
and
sahf
pop
shlb
loope
inc
cmp
and
and
xor
pushf
loop
xor
sub
push
or
mov
inc
jb
sbb
sbb
inc
push
xor
pop
int
mov
ret
enter
test
pop
jl
cli
push
mov
pop
push
cmp
inc
dec
dec
lods
push
shlb
add
rolb
push
inc
cmp
fs
subb
push
inc
push
inc
clc
sbb
es
xor
push
andb
dec
xchg
add
inc
mov
jne
dec
lret
pop
xor
xor
dec
push
dec
stos
shlb
sbb
in
mov
and
push
xor
mov
inc
in
push
cmp
pop
mov
add
data16
xor
stos
xchg
dec
add
inc
sbb
pop
jle
dec
inc
pop
pop
jb
inc
add
sbb
inc
and
sbb
dec
or
xor
add
sub
or
faddl
ds
mov
push
ret
cmp
push
mov
dec
push
mov
dec
aaa
ds
aam
adc
sub
cld
inc
int3
or
inc
mov
shll
inc
adc
sub
push
adcb
adc
ljmp
or
dec
cmp
shlb
pop
ss
sub
inc
and
or
ret
dec
inc
sbb
xor
mov
push
shlb
mov
xor
and
aam
aam
ss
inc
xchg
flds
mov
adc
add
cld
test
lcall
inc
inc
mov
ret
inc
out
push
cwtl
dec
clc
dec
push
dec
inc
sbb
pop
rorb
jo
test
or
loopne
ds
dec
inc
mov
add
xchg
pop
cmpsb
movsb
push
jmp
and
pushfw
xor
xchg
mov
data16
dec
lods
lret
in
out
xor
sbb
push
sbb
pop
inc
fsubr
outsb
or
jb
sbb
bound
pop
addb
idivb
push
rcll
mov
int3
jle
xor
mov
xor
ljmp
push
xor
inc
pop
or
cmpl
push
rorb
dec
inc
push
fmuls
push
rorb
ret
aam
cld
inc
dec
dec
sahf
jle
mov
sbb
mov
push
dec
dec
dec
aaa
mov
inc
lods
adc
fidivs
dec
inc
mov
cmp
cltd
sbb
sbb
xor
mov
xor
xor
rorb
adc
push
mov
outsb
cmp
inc
ret
inc
dec
cmp
cwtl
inc
gs
push
mov
xor
add
push
mov
loopne
sub
in
lret
loope
data16
cmp
loopne
xor
pop
push
mov
mov
push
dec
mov
xor
pusha
mov
mov
inc
pop
jp
lret
pusha
add
dec
sbb
sbb
push
loope
dec
enter
xor
add
xor
sbb
lret
push
mov
push
push
xchg
and
or
int3
xor
push
aaa
in
mov
cmpsb
or
dec
and
call
add
dec
push
push
mov
or
sbb
pusha
fimull
xchg
pop
dec
pop
xor
rcrb
orb
push
scas
adc
aam
and
ds
xchg
out
and
xor
cmp
cmp
inc
adcb
pop
addb
jle
lods
daa
adc
cmp
xor
add
adc
inc
icebp
mov
dec
cmp
and
xchg
lcall
push
je
nop
ret
mov
add
shll
rol
cwtl
sahf
cmp
dec
or
rorb
adc
orl
and
xor
push
popa
orb
jb
cmp
push
push
inc
adc
pushf
inc
ret
push
popa
mov
pop
mov
in
push
xchg
push
adc
push
xchg
lret
les
mov
adc
push
loopne
repnz
inc
cmpsb
aam
cs
ret
xchg
lcall
es
in
dec
push
xchg
inc
push
test
and
xor
je
dec
xor
repnz
mov
inc
lret
cmp
dec
mov
bnd
sahf
adc
push
dec
jle
push
mov
dec
cmp
addl
dec
int3
xor
pop
jb
rolb
adc
sbbb
fdivs
mov
push
roll
dec
or
subb
inc
push
push
cmp
inc
orl
mov
int3
mov
add
aaa
jbe
pop
dec
push
push
add
dec
pop
and
xchg
jnp
dec
cmp
dec
sbb
fwait
add
inc
push
mov
addb
xor
dec
fs
inc
pop
dec
xor
sbb
pop
add
cmp
and
fucom
cmp
subb
dec
adc
pushf
push
test
push
fidivs
cmp
push
push
xor
mov
xor
aam
test
cs
push
lods
ss
mov
push
xor
jbe
mov
pop
lods
inc
mov
les
inc
push
test
jo
data16
add
adcl
mov
add
fmuls
int3
push
cmpsb
add
xor
sbb
push
add
or
es
dec
in
mov
mov
adcb
xor
inc
ret
outsb
pusha
pop
push
mov
loope
xor
xchg
loop
mov
xor
pop
push
ds
xor
test
add
jp
dec
pop
call
cmp
cmp
cmpsb
lock
inc
loopne
push
rcl
dec
dec
inc
xor
cmp
xor
mov
adcb
mov
sbb
pop
jae
in
push
push
cwtl
pop
dec
inc
dec
push
outsb
inc
pushf
cwtl
mov
pop
dec
test
rol
jo
aam
ljmp
jge
xor
push
dec
aaa
dec
ds
and
lcall
lods
inc
add
adc
xor
add
les
or
inc
fidivs
cmp
inc
push
xor
dec
xor
cwtl
call
aaa
lods
data16
dec
add
adc
and
in
pushf
xorb
cmpsb
cmp
sbb
or
and
cmp
add
sbb
enter
inc
jbe
mov
mov
dec
dec
inc
mov
dec
sub
mov
sub
sub
call
rolb
aaa
sub
push
adcb
pop
mov
es
in
and
pusha
and
call
ljmp
movsl
push
or
sub
push
loop
jae
nop
dec
les
sub
cwtl
lods
ret
or
push
out
aaa
je
xchg
popa
push
mov
jbe
loopne
or
ret
add
push
push
sub
push
xor
adc
call
pop
test
ret
pop
sub
nop
test
or
fsubp
sbb
aad
arpl
xchg
dec
jle
insb
adc
dec
fs
dec
inc
cs
and
mov
cli
lods
inc
xchg
add
fst
cmp
push
dec
ss
js
adc
add
push
mulb
test
push
pop
mov
pop
or
xor
leave
mov
or
push
pop
fs
or
sbb
cmp
pop
push
subb
cld
pop
xor
and
xchg
inc
mov
sahf
mov
cs
aaa
push
ljmp
or
rclb
xchg
mov
ss
mov
inc
xchg
or
mov
ss
mov
movsb
push
js
pushw
fs
rcrb
rorb
test
lods
rorb
inc
push
loopne
push
ss
xor
add
call
and
dec
add
inc
sub
sbb
push
adc
cmpsb
dec
dec
in
dec
dec
jbe
or
sub
xor
or
adc
push
sbb
push
push
jmp
inc
sbb
sbb
push
push
xor
ret
add
sbb
adc
dec
out
push
add
cmp
add
or
push
mov
pop
test
push
inc
inc
push
xchg
sbb
jb
xor
and
push
push
fsubl
sbb
mov
add
data16
stos
enter
add
and
repnz
jbe
push
push
test
mov
dec
push
inc
je
dec
xor
add
es
dec
xchg
xor
jbe
data16
shlb
adc
in
push
add
add
dec
dec
push
push
mov
out
push
xor
in
adc
insb
inc
xchg
push
lret
mov
xor
push
ds
mov
pushf
jo
add
inc
in
mov
and
add
sub
outsb
rorb
stos
jne
popa
xor
push
xor
push
push
popa
add
xchg
push
insb
mov
push
add
stos
rcrb
aam
test
rclb
jo
shrb
mov
enter
and
xor
dec
push
out
xor
push
out
shlb
dec
dec
push
or
pop
add
clc
xor
adc
push
or
adc
mov
cli
xchg
xor
adc
add
bound
push
pop
jp
enter
cmpsb
push
adc
push
pusha
and
ss
lds
sahf
nop
xor
push
imul
jp
outsb
inc
cmpsb
add
dec
push
add
mov
sub
add
div
jl
xlat
gs
aaa
dec
add
dec
lock
inc
xchg
in
inc
pop
je
xor
aad
test
movsb
push
sub
mov
or
outsb
cld
xor
push
fs
xchg
adc
das
inc
andl
dec
inc
push
xor
loope
jb
pop
dec
push
fdivs
pop
lret
aad
add
dec
mov
test
scas
aaa
inc
adc
fs
mov
inc
sub
inc
rorl
jp
push
cs
cmp
inc
loop
dec
cmp
sbb
push
jo
inc
dec
addb
push
stos
push
xor
dec
xor
sbb
outsb
xor
enter
lcall
int
or
enter
sbb
mov
sarb
push
sub
adc
mov
sub
adc
sbbb
loop
xor
or
push
push
push
dec
movsb
test
dec
xchg
cmp
xchg
push
add
ss
jo
inc
xchg
lret
and
stos
lods
cltd
inc
mov
scas
inc
repnz
loope
push
out
inc
inc
xor
inc
xchg
inc
and
ljmp
into
push
xor
pusha
or
jo
cwtl
adc
mov
faddl
test
hlt
push
pusha
push
call
sbb
xor
sahf
sub
pop
enter
data16
aam
adc
pop
data16
push
push
je
mov
and
lock
leave
mov
push
mov
shll
xor
push
dec
mov
mov
ss
push
es
sub
adc
xor
xor
dec
enter
inc
insb
fsubp
es
mov
cmp
inc
dec
dec
pop
mov
ss
xor
outsb
inc
pusha
adc
stos
shrb
pop
dec
jle
inc
or
adc
pop
inc
push
dec
jb
mov
add
xor
dec
mov
inc
and
fs
push
pop
push
pop
and
loopne
xor
lcall
mov
add
sub
xchg
stos
mov
mov
cmpsb
xor
cmove
dec
pushf
cmpsb
push
dec
dec
cli
push
mov
add
sbb
lods
mov
sub
rcrb
push
or
sbb
enter
mov
inc
dec
fidivs
and
dec
cmp
push
mov
addb
push
and
xor
xor
pop
and
jbe
jbe
aam
sbb
push
pop
push
enter
mov
push
cmp
rorb
sbb
or
and
into
cmp
push
push
loop
orb
jb
mov
sbbb
push
and
scas
xor
push
sbb
adc
push
xor
xchg
fmuls
test
add
fisubl
adc
bound
jo
rcl
bound
xor
dec
dec
mov
orb
test
xor
inc
and
ss
rcrl
pop
repnz
fisubrs
ds
xor
dec
lock
js
cmp
jo
push
test
pop
sub
mov
test
push
inc
lcall
lock
mov
push
rorb
dec
pop
xor
dec
out
sbb
push
mov
sbb
mov
and
fdivrs
sub
inc
push
sub
mov
aaa
push
push
dec
add
sub
dec
dec
xor
sub
out
insl
addb
or
mov
xchg
bound
xchg
sub
ss
mov
dec
push
mov
pop
pop
sub
dec
push
dec
xor
dec
add
push
sub
dec
xor
cmpsb
lock
sbb
push
push
out
push
inc
pop
dec
test
jbe
fs
and
add
je
xchg
aas
jle
outsb
add
inc
fimuls
mov
pop
int
pushf
dec
stos
lret
ss
scas
pop
cmp
inc
or
xchg
ds
rolb
sub
sti
movsb
add
push
dec
fmull
stos
stos
add
dec
ds
inc
aam
hlt
pop
es
mov
pop
loopne
stos
sbb
mov
push
in
or
add
sub
add
mov
push
lret
mov
push
mov
cmp
test
inc
mov
cli
test
insb
ret
cmp
cmp
sbbb
pop
adc
or
adc
sub
push
inc
push
xchg
cmpb
dec
add
fnsave
insb
dec
movsb
dec
ss
ljmp
dec
cmp
dec
mov
cmpsb
rolb
or
push
inc
roll
xor
mov
adc
ds
call
mov
nop
xor
pushf
push
mov
xchg
push
and
rorb
push
or
pushf
push
inc
fldcw
addb
cmp
xor
mov
inc
add
enter
inc
pop
clc
xor
ret
inc
xor
movsb
shlb
adc
xor
dec
push
push
dec
or
push
dec
adc
xchg
gs
fidivrl
cmp
xor
xchg
mov
pop
pusha
xor
push
inc
dec
push
sub
dec
inc
xor
popa
adc
push
sbb
mov
lock
add
xchg
mov
dec
cld
or
cs
lcall
push
sub
pop
pusha
sahf
cmp
je
lret
sbb
push
shrb
inc
and
hlt
push
fiadds
dec
jecxz
push
dec
dec
cmp
pop
popa
add
sbb
dec
add
mov
addl
xor
ljmp
loope
movsb
enter
data16
pop
cmpsb
movsb
push
xor
add
xchg
data16
decb
test
ss
dec
lret
call
sub
push
xor
into
pushf
sahf
dec
aad
push
xchg
es
dec
nop
inc
lcall
jb
mov
push
adcl
add
sbb
adc
and
inc
movsb
and
jle
test
xorl
xor
xor
push
shlb
adc
or
add
add
sbb
adc
xchg
push
fsubrl
inc
loop
adc
xor
inc
xor
mov
mov
xchg
out
xor
mov
andb
dec
test
pop
les
dec
jo
pop
nop
mov
stos
xchg
cld
mov
dec
sahf
pusha
movb
shlb
je
pop
jo
rclb
call
mov
push
push
and
test
push
pusha
push
adc
pushf
mov
shrl
adc
ss
push
mov
nop
add
shll
jo
jb
lods
test
xchg
lret
lods
aam
dec
and
enter
push
fs
ljmp
dec
hlt
pop
xchg
movsl
xchg
fcompl
test
ret
sbb
mov
mov
rcrl
mov
push
movsb
rcl
xor
inc
test
dec
lods
ret
adc
dec
dec
bound
pop
addb
push
dec
pop
adc
push
inc
dec
loopne
aaa
adc
jbe
sbb
mov
inc
xchg
jo
dec
loop
dec
or
pusha
or
pop
bound
and
xor
dec
xor
test
or
dec
lods
xor
dec
inc
data16
data16
lret
xchg
push
xchg
pusha
and
dec
dec
out
inc
daa
loopne
out
test
or
dec
push
xor
ljmp
xor
ret
and
stos
inc
xor
adc
pop
sbbb
sbb
mov
clc
test
insl
xor
inc
data16
inc
dec
xor
mov
push
push
sahf
push
push
dec
mov
adc
push
ret
sbbb
es
test
dec
jp
mov
push
push
cmp
or
js
rolb
popa
loopne
inc
push
inc
or
decb
or
cli
mov
push
dec
rorb
lock
dec
inc
sub
aaa
sub
xor
mov
adc
dec
pusha
add
out
sub
cld
push
xor
inc
cwtl
dec
push
xchg
adc
sbb
shlb
dec
and
es
daa
dec
shlb
cld
ss
lcall
loop,pt
xchg
cltd
rcrl
cmpb
out
adc
xor
pop
dec
push
sbb
repnz
inc
push
sbbb
xor
mov
sbb
inc
inc
cs
cmp
adc
push
and
or
dec
jbe
push
jo
repnz
pop
xor
adc
push
push
xor
adc
sub
inc
xchg
mov
dec
fs
push
cmpsb
es
sub
push
inc
or
outsb
xor
pop
sub
ficoms
cmp
ds
pop
dec
push
inc
mov
or
pop
nop
fdivs
fmuls
push
dec
pop
add
add
inc
jbe
adc
mov
pop
pop
ret
in
fidivrs
push
dec
mov
jle
cmp
or
loopne
mov
mov
dec
or
and
xchg
pop
push
cmp
inc
dec
inc
push
pushf
pusha
int
sbb
mov
and
dec
mul
push
js
test
sub
inc
push
push
in
bound
mov
enter
mov
jae
sbb
inc
adc
add
lcall
test
in
cmp
xchg
popa
shll
sahf
sub
lods
lret
int3
cmpsb
xor
stos
sbb
jle
cld
inc
dec
mov
push
int3
xchg
sbbl
mov
mov
sbb
dec
xchg
dec
bound
inc
clc
aaa
add
movsl
xchg
adc
cmp
shrl
pop
cmp
push
and
push
in
enter
shlb
push
orb
push
sub
adc
jle
rorb
mov
cmp
ficoml
inc
inc
dec
jle
cs
xor
inc
and
stos
push
mov
sub
and
dec
test
pop
adc
cli
sub
cmp
xorb
or
ret
subb
shll
inc
push
xchg
outsb
in
push
pusha
jo
rorb
inc
fimuls
mov
jb
mov
cmpsb
xor
or
mov
lcall
jo
and
lea
inc
mov
push
enter
add
lods
inc
jge
adcb
jl
inc
push
push
or
add
cmp
xor
rcrl
pusha
jno
add
or
inc
cmpb
inc
add
lret
in
rolb
adc
mov
inc
add
es
pop
push
outsb
inc
jo
xchg
push
and
sahf
inc
aaa
or
pop
movsb
push
in
mov
mov
inc
dec
sub
inc
daa
push
movsb
dec
fimuls
push
adc
add
inc
jbe
or
adc
xchg
add
inc
jb
pushf
shrl
push
es
mov
inc
clc
push
test
push
inc
and
cmp
mov
push
mov
dec
jb
add
cmp
and
mov
add
xchg
hlt
xor
lret
subb
and
sub
movsb
adc
push
cli
sbbb
xor
push
xchg
cmp
js
push
cmp
add
sub
push
addb
add
or
dec
jb
fwait
xorb
inc
and
inc
sbbl
push
push
push
sar
inc
pop
and
inc
inc
push
fmul
xchg
sub
push
adc
push
xor
cmpsb
inc
repnz
sub
and
add
add
push
mov
push
add
mov
add
pop
and
fs
cwtl
or
sar
cs
push
lods
sbb
mov
scas
and
mov
inc
dec
int3
in
in
or
loope
adc
dec
js
cli
pop
mov
xchg
adc
mov
es
sbb
movsl
stos
xor
inc
mov
les
cmp
call
test
xor
sahf
inc
sbb
cmp
sbb
or
loopne
dec
xor
scas
inc
jle
cs
pop
out
xor
or
ds
ds
cmp
cltd
leave
sbb
add
cmp
inc
adc
and
loopne
jmp
jle
sbb
test
jo
push
push
push
push
cs
inc
mov
xchg
es
sbb
cmp
test
test
and
sbb
xchg
push
je
dec
pushf
mov
or
sub
les
aad
adc
dec
ret
vpdpbusds
adc
inc
sbb
mov
loope
sub
cmp
add
pop
loopne
push
adc
pop
test
ds
sub
push
cmp
stos
js
aas
cmp
mov
test
adc
inc
mov
loope
ret
xor
inc
mov
and
dec
fiadds
mov
xchg
mov
ret
sub
lret
xor
rorl
je
stos
lods
cs
loope
addb
xchg
jo
or
adc
lret
push
mov
inc
push
mov
and
aam
mov
cli
jbe
xor
cmp
into
pop
pop
inc
xor
add
add
inc
pusha
cmp
lret
fs
rcrb
pop
push
inc
xor
pop
popf
cmpb
lock
sbb
sahf
sub
push
push
lahf
xchg
sub
gs
inc
test
stos
xchg
enter
pop
dec
mov
mov
sub
xor
int3
or
mov
sbb
aaa
mov
rorb
xchg
add
push
lret
inc
or
pop
mov
je
nop
inc
and
sub
sbb
in
xchg
clc
cmp
lock
xor
and
pop
xor
ret
sub
and
xchg
xchg
sbb
add
mov
aam
sbb
xor
pop
jle
push
inc
pop
popa
cwtl
enter
fimuls
xor
add
cld
test
xor
dec
inc
add
mov
orb
dec
ljmp
mov
mov
and
inc
xchg
rorb
jb
dec
ss
xchg
inc
sub
sub
xchg
mov
pop
dec
sub
jo
add
fmuls
inc
inc
sub
mov
push
sub
ss
mov
aad
cmp
inc
or
xchg
lret
push
and
xchg
pop
mov
push
test
dec
call
adc
dec
inc
dec
cli
add
inc
or
mov
orb
add
adc
pop
or
aaa
push
mov
xor
movsb
fsubr
js
fs
or
aaa
push
push
mov
mov
push
js
inc
push
dec
rclb
in
inc
mov
call
rolb
pop
inc
ds
inc
mov
add
in
mov
mov
leave
inc
or
mov
rclb
mov
and
xchg
shl
xor
adc
xchg
lret
dec
inc
lods
pop
push
inc
int3
scas
or
adc
xchg
ss
inc
mov
fsubrs
xor
adc
add
add
mov
adc
call
sbb
xor
sbb
sbb
dec
hlt
push
dec
js
push
add
lret
test
push
mov
xor
in
mov
bound
push
adc
xor
push
jbe
xchg
push
mov
xor
mov
adc
push
adc
xor
ds
and
dec
inc
mov
sub
lods
push
mov
dec
sbb
push
inc
pop
push
xchg
int3
or
add
push
cmp
push
sub
inc
lds
test
sub
dec
loopne
inc
xchg
xor
xor
sbb
push
push
nop
inc
fisubrl
addl
ret
aad
and
inc
cmp
adc
mov
je
inc
cmp
data16
xor
lcall
push
jle
dec
fimull
push
mov
fidivl
movsb
push
xor
in
xchg
leave
sub
je
pop
xor
push
xor
jo
jle
push
add
cmp
and
jne
push
xor
test
xor
mov
xchg
adc
xchg
nop
pop
xor
pop
shrb
mov
xor
int3
xor
fs
pusha
cmp
push
dec
movsb
pop
je
jbe
dec
or
push
cmp
cmp
add
pop
and
nop
push
adc
ljmp
mov
xor
sbb
push
xchg
push
mov
xor
enter
jo
pop
ret
or
pop
pop
aaa
add
lods
lods
or
sarl
inc
xor
orl
inc
mov
or
shl
aam
xor
mov
or
rolb
les
aad
pop
or
loopne
out
push
pusha
or
cmp
bound
shll
dec
into
pop
lods
jb
or
fmuls
add
cmp
call
xor
mov
lcall
push
pop
nop
push
leave
stos
inc
ret
sbb
pop
aam
xor
mov
je
add
insb
ss
inc
cmp
or
test
nop
pusha
inc
inc
divb
ds
inc
in
mov
adc
cmp
and
xor
sahf
dec
xor
inc
rcl
inc
push
shlb
stos
sbb
add
jle,pt
es
adc
push
sub
pop
dec
inc
xchg
inc
xor
pushf
lods
inc
jo
sbb
push
xor
xor
test
out
ljmp
cmp
xor
orb
cs
mov
inc
rcrb
mov
in
lock
push
sbb
add
repnz
sub
or
cmpsb
mov
pop
push
inc
and
push
xor
push
sbb
inc
sub
cltd
adc
jle
inc
pop
adc
sub
sub
rclb
or
test
or
add
data16
pop
xor
push
lret
cmpsb
push
cmp
and
and
sahf
fcomps
push
sbb
test
xchg
xor
push
or
dec
xchg
test
mov
push
or
cmpsb
cmpsb
push
and
inc
dec
push
push
ss
ss
clc
pop
dec
dec
lret
mov
inc
sbb
add
cmp
dec
sub
and
loop
dec
inc
cmp
cmp
pop
sub
push
push
shll
sub
add
add
adcb
xchg
ds
ljmp
es
lret
dec
dec
ret
sbb
mov
dec
dec
sub
add
call
mov
xor
push
and
addb
push
and
dec
mov
xchg
push
push
or
push
mov
adc
test
or
add
and
ljmp
push
push
lea
dec
mov
test
xor
sub
adc
lret
and
ljmp
xor
bound
in
push
inc
or
xor
push
mov
sbb
test
cmp
movsb
pop
push
push
adc
and
push
push
sbb
push
adc
in
dec
xor
es
imul
movsb
orl
addl
call
pushf
pusha
ficomps
daa
push
dec
dec
mov
repz
test
movsb
xor
cmp
or
ret
add
fiadds
pop
les
dec
jle
adc
cmp
and
ds
inc
es
or
sbb
or
sbb
push
push
sub
push
push
push
adc
cli
call
insb
fdivs
sarb
inc
inc
push
lret
adc
cmpsb
push
and
nop
jo
mov
cltd
inc
add
or
push
push
cwtl
dec
and
add
jle
add
jp
add
test
pop
loope
pushf
or
ret
ficomps
enter
cmp
sub
ss
cs
aad
sub
cltd
cwtl
xchg
movsb
es
sbb
mov
xor
push
bound
xchg
push
lock
pop
lds
or
push
add
xor
dec
push
xchg
sbb
clc
inc
add
add
andb
xor
dec
and
and
jo
cli
adc
dec
dec
sub
adc
int
inc
inc
push
fidivl
sbb
add
xor
and
jbe
cmp
inc
dec
add
je
mov
xor
addb
in
sub
xor
mov
into
test
add
call
inc
push
and
ficoml
push
sub
mov
cli
inc
adcl
push
mov
push
or
sarb
push
test
mov
push
and
js
test
mov
dec
je
fiaddl
movsb
lods
je
inc
mov
adc
es
xchg
shl
cwtl
clc
movsb
xchg
adc
inc
movsl
out
shlb
push
or
bound
ss
xchg
add
pop
mov
or
xchg
sbb
push
in
xchg
inc
lock
push
inc
jl
ficoms
mov
aaa
xor
jno
movsb
adc
out
rorb
popa
xchg
arpl
mov
and
addb
dec
add
fcoml
mov
into
mov
pop
pop
cmc
jo
add
push
cmpsb
add
push
rolb
mov
ljmp
outsb
mov
push
mov
sbb
add
jbe
and
fdivrl
dec
pusha
fiaddl
jb
mov
dec
and
push
dec
dec
jo
and
push
test
inc
test
dec
aam
xor
mov
decb
push
inc
inc
adc
add
inc
dec
pop
dec
je
and
inc
sub
ljmp
mov
inc
mov
push
push
inc
ljmp
inc
fmulp
shrl
sbb
mov
ss
jae
or
pop
push
popa
push
inc
insb
rorb
mov
aam
sbb
push
clc
mov
test
dec
bound
je
push
sbb
xor
rorb
shlb
mov
inc
loopne
add
je
push
dec
or
cli
dec
dec
dec
dec
or
cld
pop
rcrb
xor
fdivrl
inc
outsb
popa
xor
xor
insb
inc
sbb
into
and
gs
push
fneni(8087
inc
push
and
dec
xchg
ret
push
push
bound
adc
test
and
push
xlat
aas
and
xor
add
divb
push
push
inc
xchg
icebp
jno
dec
inc
cmp
push
jo
push
dec
bound
adc
mov
xor
or
or
dec
cmp
jno
adc
dec
xchg
loop
push
inc
scas
push
sub
inc
loop
dec
mov
add
pusha
mov
jb
jle
ficoml
or
test
mov
xchg
mov
pusha
add
es
push
dec
fcompl
dec
dec
push
dec
xor
and
sbb
leave
add
sbb
jp
add
cs
pop
dec
jl
sub
mov
push
mov
addl
push
and
pop
jae
and
inc
sub
mov
adc
adc
push
sub
ds
dec
jl
mov
and
and
adc
orb
movsb
dec
int3
add
xor
adc
lret
clc
test
lock
xor
test
pushf
shlb
data16
and
in
inc
and
pusha
jbe,pt
push
add
movsb
xor
sub
xor
jl
mov
adc
dec
loopne
inc
ret
sub
sbb
mov
cmp
mov
mov
sub
or
push
push
lods
mov
pop
addl
dec
add
push
or
loop
out
mov
rolb
dec
adc
loopne
dec
stos
in
sahf
xor
add
mov
dec
cmp
mov
ss
dec
insb
pop
lds
mov
stos
movsb
xor
push
test
sub
scas
add
and
push
stos
or
push
push
xor
aam
pop
xor
dec
sbb
loop
pop
adc
insb
les
dec
fdivl
xchg
dec
add
ljmp
push
pop
out
push
bound
inc
push
lock
stos
xor
xchg
dec
or
push
cwtl
ret
xor
pop
lret
lcall
xor
dec
pusha
and
sbb
andb
adc
inc
dec
and
cmpsl
pusha
xorb
inc
dec
out
or
aas
loopne
inc
inc
xchg
aam
push
jne
mov
dec
inc
xor
cltd
push
push
inc
pushf
mov
jo
sub
hlt
sbb
inc
xchg
push
dec
mov
enter
rclb
int3
scas
adc
mov
sbb
test
xor
xchg
shlb
les
or
add
or
pop
push
nop
inc
movsb
xor
add
xchg
nop
push
rolb
sahf
dec
mov
or
push
fsubrp
mov
test
inc
hlt
push
sub
jne
add
push
and
add
sbb
stos
ljmp
or
cwtl
and
aam
adc
xchg
and
xor
xor
xchg
cmp
push
xor
inc
or
dec
sahf
dec
data16
cmpsb
ss
pop
lret
sbb
mov
call
add
mov
xchg
push
jne
adc
lock
pusha
adc
pushf
dec
jb
inc
loope
sahf
push
push
inc
in
add
sub
push
dec
xor
pusha
and
sahf
ret
and
fs
inc
mov
push
rorb
push
hlt
loop
dec
outsb
push
ds
push
outsb
pop
mov
or
enter
xchg
enter
sbb
andl
push
sub
and
or
dec
add
adc
sub
mov
es
scas
add
inc
dec
push
mov
aam
cmp
pop
lock
dec
js
push
xor
insb
dec
cmpsb
push
cltd
movsb
cmp
xchg
adc
movsb
sbb
dec
aaa
inc
mov
sahf
ds
mov
push
pop
push
xchg
and
sbb
pop
xor
dec
or
test
inc
xchg
sbb
pop
mov
mov
mov
nop
xor
shlb
movlps
dec
push
popa
adc
dec
fisubrl
or
popf
adc
pop
xor
pop
push
mov
dec
pop
ja
inc
push
ss
mov
xor
xor
pop
xchg
inc
fisubrs
sub
push
cmp
dec
cld
dec
ret
test
push
xor
xor
mov
ss
enter
scas
or
push
rorb
test
inc
xor
sbb
lahf
pop
lret
or
xorl
sub
xchg
sub
pushf
lea
xor
ret
add
inc
incb
lret
dec
sub
or
cmp
lods
inc
andl
gs
shl
pop
lcall
je
xor
sub
adc
shll
inc
dec
dec
push
jo
inc
cmp
fadd
add
pusha
out
je
mov
add
decb
xchg
push
hlt
push
int3
rorb
jl
es
add
sub
inc
icebp
adc
push
inc
dec
jb
sub
or
nop
mov
dec
inc
push
dec
push
xor
adc
movl
popf
sub
ds
loopne
outsb
ret
add
aam
push
inc
xchg
mov
mov
xor
dec
xor
sub
cltd
add
loopne
dec
js
dec
add
push
xor
ljmp
sbb
shl
aam
or
sub
sbb
xorb
and
into
stos
sbb
push
inc
and
cmp
mov
push
xor
xor
test
inc
ljmp
xor
mov
mov
shlb
sub
mov
fadds
fmull
inc
mov
push
dec
add
sbb
adc
js
inc
push
movsl
push
ljmp
push
inc
inc
test
fs
pushf
adc
dec
pop
inc
loope
sub
mov
pop
stos
test
addl
adc
and
and
cmp
fisubs
push
pop
inc
push
pop
sbb
xorb
fdivrp
aaa
and
cmp
mov
pop
enter
call
inc
sub
sub
sbb
xchg
pushf
cmp
in
xchg
sahf
rcrb
xor
sahf
and
sbb
add
and
call
push
xor
xor
push
xchg
aam
test
sub
dec
inc
pusha
add
and
jl
hlt
sub
lods
or
push
faddl
cmp
xor
adc
push
adc
xchg
add
mov
subl
add
pop
inc
pop
push
xor
ficoms
push
xchg
mov
pop
je
push
pop
dec
xor
ss
push
bound
pop
lcall
adcb
adc
ds
movb
pop
inc
es
jne
pop
mov
xchg
dec
repnz
xor
les
add
jne
or
insb
cmp
and
dec
movsb
xor
gs
aaa
mov
inc
dec
cmp
inc
dec
or
push
and
sbb
aaa
push
push
sub
mov
shrb
ss
stos
test
sub
jle
dec
mov
jl
inc
nop
enter
mov
xchg
bound
fidivs
push
xor
push
cmp
xchg
add
cmp
fs
ret
and
adc
in
movsl
xor
mov
xor
or
mov
inc
int
and
fiadds
or
or
push
dec
shrl
adc
push
or
orb
dec
inc
int
jns
stos
lcall
or
dec
push
mov
ret
pusha
push
push
mov
cld
adcb
push
xchg
in
mov
mov
mov
push
push
int
cmp
mov
orb
push
sbb
add
inc
es
cltd
shll
aaa
sbb
ret
stos
adc
cmp
mov
sub
adc
ret
inc
push
push
mov
or
xchg
dec
pop
sub
dec
push
pop
adc
or
dec
pusha
addb
sub
inc
and
popa
cmp
push
sbb
push
push
arpl
out
push
xor
push
cwtl
int3
sbbb
sbb
xchg
inc
sub
xchg
cmp
push
lods
pop
pop
pop
out
or
dec
call
sbb
dec
jbe
inc
xor
add
or
add
aaa
sub
mov
mov
xchg
xor
dec
mov
or
enter
mov
mov
pop
mov
aaa
dec
xor
push
push
push
xchg
inc
lods
push
or
hlt
ss
insb
cld
sub
cmpsb
movsb
push
mov
test
test
adcl
and
pop
ret
loop
movsb
dec
or
pop
push
test
inc
push
or
rolb
shlb
or
sub
adc
mov
test
push
or
daa
aad
cmp
xchg
or
or
test
into
xor
dec
mov
push
test
inc
cmp
sbb
aaa
pop
inc
push
lret
inc
xor
pop
mov
xor
jo
test
into
inc
inc
pusha
push
inc
sbb
and
mov
adc
dec
dec
mov
inc
je
fiadds
cs
fs
lods
dec
jb
ljmp
dec
sub
mov
push
mov
mov
and
popa
add
mov
adc
and
dec
lcall
cmp
ret
xor
outsb
pop
inc
in
outsb
or
inc
dec
shlb
mov
jl
xor
add
dec
mov
dec
je
cld
xor
shlb
test
fdivl
cmp
push
push
xor
adc
mov
jb
or
or
mov
mov
jb
inc
out
dec
bound
test
ret
and
xor
mov
fwait
or
loopne
push
mov
cmp
popf
push
adc
test
mov
nop
jbe
pop
inc
movsb
push
int3
inc
andb
je
push
mov
loope
cmp
lcall
dec
cs
mov
and
and
mov
and
cld
push
ret
mov
pop
dec
xchg
mov
push
push
or
xchg
sbb
andb
pop
and
ret
dec
dec
ds
adc
mov
dec
fisubl
pop
dec
xor
lods
jp
dec
lret
int
xchg
lock
dec
xchg
push
rol
and
pop
ljmp
je
xor
ret
pop
push
inc
ljmp
cmpsb
mov
mov
imul
push
pop
notb
cmp
push
pusha
push
call
js
push
pop
add
and
push
jle
push
inc
add
addb
push
imul
add
xor
pop
xchg
aam
xchg
xor
ss
xor
es
inc
xchg
ljmp
sub
mov
xor
xorb
sub
cmp
xchg
movsl
xchg
ret
pusha
push
mov
pushf
cltd
leave
or
in
loop
hlt
jb
cmpsb
and
add
pop
outsb
test
adc
cmp
cwtl
add
inc
cmpsl
cmpsb
jl,pn
dec
push
sub
aad
pop
sub
push
cmp
dec
cmp
xchg
mov
dec
movsb
mov
sub
notb
ss
inc
lock
xchg
dec
dec
xor
xor
dec
inc
inc
cmp
fmull
pusha
pop
pop
add
jp
test
inc
mov
inc
push
or
add
bound
xor
add
add
inc
mov
xchg
or
test
and
cmp
push
es
push
inc
push
ret
cmp
adc
sub
jne
pop
xchg
lret
clc
inc
inc
xor
pop
and
cmpsb
ss
sbbb
push
stos
movsb
xor
push
dec
mov
dec
mov
sbb
push
ret
and
call
xchg
scas
call
dec
adc
sahf
outsb
xor
xor
add
lret
test
sbb
sbb
dec
lret
sbb
xor
jl
leave
dec
mov
gs
mov
push
dec
int3
sbb
or
or
adc
es
les
and
cmp
nop
push
sbbb
add
imul
dec
cs
inc
mov
add
xor
push
xchg
or
inc
push
inc
push
cwtl
sahf
loopne
mov
push
push
pop
cmpsb
aam
xor
mov
xor
shr
dec
xor
push
mov
and
push
dec
pop
push
inc
xchg
inc
or
cmpsb
adcb
test
sahf
sub
jb
add
and
or
pop
inc
and
jb
xor
and
pop
pop
pop
push
push
push
jl
adc
andl
or
and
add
fisubrs
adc
inc
dec
sub
push
mov
pop
push
dec
gs
or
enter
add
dec
push
adc
dec
cmp
inc
pop
xchg
or
and
fs
aam
dec
scas
mov
mov
push
aaa
push
mov
inc
inc
adc
sub
scas
pushf
popa
mov
inc
xor
push
or
test
call
push
push
ss
dec
add
xor
jo
push
xchg
shlb
mov
pop
and
stos
inc
aaa
xor
ss
loopne
xchg
daa
fs
pop
insb
sub
mov
and
ret
sub
mov
sbb
sbb
addb
jo
data16
xchg
dec
jb
mov
loope
sbb
cmpsb
push
data16
push
ficomps
mov
cltd
ret
in
sbb
test
mov
or
enter
inc
lds
les
rcll
dec
aam
and
dec
inc
add
lods
sub
or
pop
xor
inc
outsb
cwtl
cltd
pushf
sbbb
test
orb
loop
sub
movsl
push
aaa
xchg
push
loope
mov
adc
pop
sub
addb
push
xor
push
inc
ss
outsb
mov
lods
dec
rol
jp
insl
mov
dec
cwtl
outsb
pushf
sahf
ret
out
scas
enter
orb
mulb
lcall
dec
js
xchg
dec
dec
adc
inc
and
mov
inc
mov
nop
add
mov
cwtl
jle
int3
je
sbb
xchg
and
dec
popa
push
adc
cs
xor
mov
push
push
mov
dec
sub
js
cmc
xchg
jne
cmp
and
cmp
hlt
fcoms
enter
popa
add
or
cmp
sbbl
xor
add
jae
fs
sub
sbb
push
push
mov
cs
jbe
mov
and
adc
push
inc
bound
aaa
sbb
lods
dec
cmp
lods
sahf
pop
inc
add
sub
ret
lods
adc
xor
pop
push
sbb
pusha
data16
mov
push
jl
add
inc
push
scas
push
aad
dec
mov
repnz
cwtl
mov
lods
inc
cwtl
into
test
push
gs
xor
or
ss
inc
adc
dec
es
xor
mov
mov
xor
xor
jp
dec
xor
mov
pop
sbb
push
adc
sub
or
mov
outsb
jge
xor
lret
leave
loopne
sbb
mov
cltd
or
imul
loopne
sub
dec
push
jo
cmp
fs
mov
pop
int3
fisubs
xchg
jb
ror
loop
js
mov
pop
mov
mov
add
jb
repnz
push
xor
push
dec
push
sbb
cmpsb
mov
es
je
add
cmp
adc
xor
add
test
inc
push
in
adc
xor
pop
fsubs
out
pop
pop
cs
loopne
xchg
pop
sub
mov
addl
insb
test
inc
dec
pop
in
mov
ret
movaps
pop
lods
jo
inc
enter
aaa
push
push
lret
popa
and
pop
pop
inc
push
or
ss
lcall
push
push
push
cltd
mov
dec
xchg
enter
or
cli
pop
mov
pop
xor
sbb
mov
cmp
mov
dec
push
addb
sbb
lcall
add
mov
shlb
xor
test
dec
loopne
push
push
push
or
dec
mov
mov
ret
cmpsb
pop
lret
mov
or
jp
sbb
es
inc
add
inc
xchg
rorb
fmull
fidivl
add
sahf
cmp
mov
xchg
adc
mov
cs
dec
push
ss
cmp
loop
ret
add
xor
push
cltd
sbb
push
jbe
mov
add
push
or
dec
mov
push
dec
sub
shrb
mov
je
and
push
inc
aaa
push
push
mov
cwtl
add
insb
lods
sbb
dec
push
mov
add
dec
leave
or
scas
add
xchg
cltd
xorl
mov
sub
mov
adcb
dec
sbb
add
data16
push
inc
cmpsb
cmpsb
int
xchg
les
inc
cwtl
sbb
push
fucomp
xor
mov
insb
dec
add
push
sbb
sub
push
xor
out
or
xor
dec
out
inc
rol
xor
mov
xchg
shlb
int3
push
push
sbb
mov
xor
xorl
lea
xchg
xor
das
mov
sub
test
test
push
cld
push
inc
sub
out
push
andl
mov
fdivr
push
bound
and
adc
call
popa
test
xchg
pushf
aam
push
lea
push
dec
push
popa
adc
sub
mov
add
cmp
push
pop
out
loop
sbb
inc
dec
cmp
sub
xchg
xorb
fsubr
pop
inc
push
push
xor
mov
jae
add
loopne
dec
insb
or
dec
aad
dec
ficompl
frstor
les
dec
push
sbbl
sub
dec
xor
xor
push
int3
sbb
mov
in
xchg
xchg
mov
or
cmp
xor
pop
jp
test
call
dec
es
insb
ds
sbb
in
pop
dec
or
xchg
fimuls
inc
and
inc
loopne
mov
mov
or
inc
cmp
or
inc
insb
push
cmp
push
dec
inc
and
dec
xor
inc
clc
in
rorb
push
mov
xor
sbb
cld
loopne
or
notb
add
add
jle
cmc
pusha
dec
lret
rcrb
mov
dec
lods
mov
fldl
nop
inc
dec
dec
xor
dec
addb
bound
mov
mov
and
inc
inc
jp
cmp
or
dec
push
inc
aaa
or
or
jle
push
dec
add
or
mov
idivb
sub
push
or
pop
orb
cs
dec
inc
pop
adc
and
sub
xor
pusha
inc
xchg
mov
or
mov
in
jmp
push
ds
and
ret
and
fcoml
sub
inc
pop
bound
fstl
sbb
call
xor
outsb
insb
inc
dec
movsl
xor
mov
push
xorl
add
sar
test
xor
pusha
xchg
pop
dec
sub
dec
pushf
dec
inc
xchg
xchg
jo
call
dec
xchg
sub
pop
mov
test
lock
dec
push
loop
inc
mov
mov
inc
mov
jb
movsl
push
sbb
dec
sahf
cmp
xor
dec
and
push
push
fdivs
or
jbe
cmp
inc
loop
xor
dec
push
pusha
inc
push
xor
daa
lcall
addb
and
cmp
out
dec
adc
dec
bound
test
lret
movsl
xor
mov
xchg
out
xor
dec
mov
les
test
mov
nop
orb
inc
dec
push
or
mov
or
xchg
cs
rcl
xchg
sub
hlt
mov
push
adc
rolb
es
mov
xor
stos
sub
faddl
add
insb
es
mov
xor
dec
lret
push
ljmp
push
sub
and
and
mov
mov
and
cmp
mov
pop
test
cmp
push
pop
add
adcb
mov
pop
rcl
lods
ret
loopne
cmp
inc
add
leave
mov
xor
dec
mov
inc
mov
dec
sub
lret
inc
or
add
dec
sub
shlb
inc
inc
pop
pusha
push
jl
les
mov
fmull
in
xor
in
push
mov
cwtl
or
xor
rcl
push
lods
mov
inc
mov
or
dec
jo
inc
jae
pop
and
and
dec
lcall
xchg
dec
dec
in
in
or
sbb
and
mov
add
push
ret
fsubrs
xor
nop
add
sub
pop
push
push
enter
push
xchg
adc
rcrb
enter
sbb
test
mov
lock
push
push
push
addl
rorb
sbb
xor
and
je
pop
xchg
push
ds
and
adc
and
loop
movsl
int
add
aaa
dec
sub
dec
andb
mov
and
sub
pop
push
add
jle
or
cmp
mov
xor
int3
les
jo
cwtl
add
mov
enter
nop
sbb
sub
add
or
adc
xor
dec
push
xchg
xchg
xor
mov
subb
inc
push
or
pop
push
es
jb
test
or
push
xor
loop
xor
loop
ret
and
adc
push
cmpsb
push
cmp
fwait
in
call
adcb
push
mov
xor
push
push
call
xor
dec
incb
xor
push
sbb
xorb
inc
enter
stos
shlb
clc
xchg
mov
jo
sbb
mov
rorl
dec
sbb
adc
popa
push
test
loop
jb
sub
dec
xor
mov
inc
push
sub
stos
shlb
fidivl
in
in
push
sbbl
push
decb
dec
adc
push
nop
enter
test
inc
lret
push
decb
fiadds
dec
insb
xor
push
mov
and
push
call
int3
inc
test
push
pop
cmp
add
push
add
int3
movsl
and
addb
cmp
inc
test
and
loope
nop
inc
sub
push
adc
mov
insl
pop
push
test
inc
push
outsb
lcall
ficomps
adcb
test
push
jle
pusha
adc
mov
xchg
inc
sub
or
pop
push
push
xorl
xchg
shrb
test
out
or
popa
dec
sbb
int3
test
add
mov
cltd
sbb
sahf
outsb
pop
clc
xor
sbb
adc
sub
inc
adcb
xor
mov
mov
xor
cmp
cmpsb
ds
cmp
gs
mov
int3
push
in
jp
push
lret
test
mov
dec
mov
add
mov
aam
xor
dec
pop
inc
pop
sbb
cmp
pop
and
and
xor
dec
inc
dec
inc
push
pusha
xor
push
pop
les
push
test
js
mov
jb
int3
push
scas
adc
dec
popa
push
adc
fdiv
cld
push
es
daa
pop
push
ds
or
push
push
mov
xor
add
test
jle
inc
ret
aam
adc
dec
mov
and
int3
lods
inc
xor
and
sub
mov
push
add
mov
sahf
pop
mov
or
shll
rcr
push
inc
fildl
push
rclb
sbb
test
rcll
inc
int3
lods
inc
cmp
push
adc
dec
faddl
jbe
out
ret
sub
cld
cmp
dec
lret
int
push
repnz
dec
push
dec
and
test
hlt
insb
dec
dec
mov
inc
testb
lods
insb
sub
mov
int3
rcrb
adc
xchg
fisubl
add
xchg
push
rolb
lods
or
repnz
movsw
push
stos
and
dec
adc
push
xchg
jns
xor
push
pop
aaa
inc
dec
add
test
push
nop
shrb
xor
mov
sub
xor
xor
jl
js
xchg
inc
dec
push
xchg
into
or
push
inc
mov
dec
adc
jl
push
add
call
stos
insb
dec
add
or
and
cwtl
sub
xchg
lcall
push
test
enter
mov
push
adc
xor
push
rcrl
mulb
add
rclb
js
push
inc
stos
add
gs
jl
sbb
push
es
movsb
xor
and
dec
stos
cli
stos
ss
push
jo
nop
ret
add
test
in
aaa
adcl
mov
push
enter
adc
sbb
pusha
dec
adc
push
push
mov
mov
test
xor
xor
jo
lea
or
push
xor
add
or
xchg
call
lds
add
mov
es
add
xchg
xor
movsb
adc
clc
lock
aam
xchg
push
jp
xor
xor
lods
adc
orb
pop
dec
add
cmp
dec
dec
in
mov
pushf
inc
movsb
add
out
xor
ss
nop
call
xor
scas
stos
add
pushf
in
sbb
jp
mov
test
mov
test
fdivl
xor
cmp
stos
adc
xchg
dec
xchg
pop
push
aaa
or
mov
cmp
dec
xor
or
sub
movsl
xchg
jb
xor
mov
cmp
ss
dec
dec
push
fidivrs
or
cmp
or
cwtl
cmp
call
es
cmp
subl
lock
pop
jle
imul
cwtl
inc
mov
cli
data16
add
and
mov
push
loopne
loop
add
or
xchg
les
push
jle
andl
adc
push
push
jb
shll
and
rcrb
ljmp
test
xor
xor
push
inc
nop
pop
dec
pusha
mov
adcb
and
jb
dec
dec
int3
push
test
imul
pusha
or
or
mov
adc
stos
mov
outsb
push
or
and
xchg
dec
dec
push
push
mov
sbb
or
out
in
fs
mov
inc
add
lods
pusha
or
lcall
push
add
fmuls
adc
jbe
mov
xor
pusha
adc
adcb
ret
or
inc
cs
movb
lret
add
dec
push
mov
inc
je
add
adc
xor
es
sub
xlat
sub
push
push
idiv
add
mov
clc
and
mov
pop
inc
fcomp
mov
inc
bound
outsb
push
push
bound
sub
loope
mov
or
sbb
or
inc
cmp
orl
hlt
enter
or
and
cmp
and
cmp
int3
dec
cmp
loop
dec
test
jle
pusha
or
lahf
xor
rcll
dec
xor
add
mov
shl
test
xchg
add
dec
xor
sbb
and
mov
dec
rolb
and
mov
sbb
push
enter
mov
mov
push
and
jp
cmc
and
push
sbbb
nop
adc
cmp
subb
enter
ss
or
cmp
mov
or
or
sub
andl
jbe
out
lcall
add
shll
jo
aam
push
mov
cwtl
fmul
inc
test
lea
les
sub
push
inc
sbb
mov
les
loop
fs
inc
orb
cmp
inc
xchg
or
xor
cmpb
insb
lods
and
mov
dec
repnz
push
sbb
push
mov
push
test
jo
addb
fimull
push
test
dec
push
loopne
push
cltd
inc
mov
cmp
dec
es
sbb
add
xchg
dec
inc
mov
sbb
xchg
inc
fdivrl
shll
pop
dec
sub
inc
mov
rcrb
pop
bts
cmp
adc
dec
les
or
cwtl
shlb
cmp
or
aaa
sub
movsb
dec
inc
mov
push
xor
inc
and
push
push
fwait
mov
push
adc
and
add
cmp
cs
xchg
or
dec
cs
sub
pop
mov
ds
or
stos
mov
hlt
dec
cli
jo
sbb
pushf
inc
xor
push
cld
fdivs
push
add
pop
cmp
mov
add
outsb
push
cltd
dec
add
push
jl
and
test
ss
xchg
pop
test
pop
dec
push
bound
fimull
push
pop
push
fiaddl
xchg
fldenv
pop
mov
xchg
sbb
xor
cli
add
dec
cs
or
cld
out
mov
data16
push
push
inc
pop
and
mov
test
xchg
js
addl
in
mov
inc
dec
test
and
icebp
stos
dec
je
sub
add
mov
lret
inc
aam
sub
test
cltd
or
inc
cmpsb
or
inc
inc
dec
mov
or
push
cwtl
out
add
int
jl
aaa
insb
inc
xor
dec
fs
je
cmp
test
push
sbb
push
mov
dec
push
xor
inc
cmp
inc
add
or
xchg
adc
jo
mov
pushf
shlb
push
outsb
cwtl
adc
stos
inc
xchg
dec
mov
push
mov
xchg
dec
es
sub
inc
push
xchg
mov
js
sbb
js
orl
pop
loop
cmp
adc
sbb
dec
pop
call
adc
push
pushf
or
add
inc
pop
push
push
pusha
out
sahf
jl
cmp
or
inc
push
mov
mov
roll
adc
dec
push
rcr
inc
pop
repnz
fdivrl
data16
inc
and
mov
cmp
pusha
xor
enter
ljmp
add
mov
xchg
inc
jle
xor
xor
pop
adcb
int3
aaa
call
dec
add
push
add
es
mov
pop
xchg
add
push
enter
ret
mov
dec
test
push
push
cmp
insl
add
xchg
mov
ret
fisubrs
lcall
lret
fs
call
popa
jb
into
jle
shlb
movsl
or
je
rorb
dec
push
mov
data16
xor
imul
push
dec
test
or
push
cli
add
add
pop
jb
adcb
or
lret
popf
push
push
push
dec
xchg
cltd
xor
xor
pop
or
dec
and
enter
xor
or
add
pushf
les
adc
mov
jo
inc
inc
pop
add
mov
sbbl
or
push
mov
das
mov
inc
stos
pop
dec
pushf
inc
repnz
xchg
add
orb
rolb
pusha
addb
inc
jo
inc
add
add
cwtl
fisubrl
sbb
adc
cmp
xor
sub
repnz
fsubrs
cmc
xor
dec
pop
inc
pop
mov
sub
dec
cs
rolb
out
sub
pop
dec
loopne
insb
mov
push
dec
addl
mulb
xchg
adc
pop
and
andb
dec
shlb
jbe
add
jle
dec
shll
out
ss
xchg
pop
xor
enter
jb
sub
dec
xor
test
push
dec
inc
fsubp
leave
imul
push
mov
xor
in
lret
pop
push
dec
mov
cmp
out
addb
stos
pop
xor
xor
push
mov
sub
shr
test
test
aaa
pop
cltd
or
fdivrs
mov
add
sbb
adc
in
nop
fs
dec
test
add
cs
nop
fnstenv
lcall
insb
cmp
xchg
xor
cmp
mov
es
xor
lods
sbb
xor
xchg
dec
adc
scas
loope
mov
pop
mov
dec
data16
rolb
and
and
dec
sub
push
cwtl
shlb
je
es
popa
push
cmp
or
cld
xchg
adc
lcall
sub
xor
sbb
adc
inc
inc
loopne
sub
dec
inc
xchg
pop
inc
add
ss
and
gs
fimuls
xchg
mov
adcb
pushf
sahf
shll
mov
pop
cmp
gs
lcall
mov
push
leave
mov
xor
add
jp
shrb
cmpsl
fs
inc
push
sbb
in
dec
dec
mov
pop
insb
xchg
cwtl
mov
ror
ds
inc
pop
vpmovsxbw
enter
xchg
push
push
fs
cmp
addb
out
dec
into
or
subl
sub
stos
shll
out
push
adc
push
add
inc
fiadds
nop
cmp
dec
and
jb
push
out
adc
inc
add
push
lock
popa
bound
push
mov
lret
lret
dec
fcoml
dec
mov
inc
cmp
inc
cmp
dec
sarb
dec
mov
movsb
dec
dec
data16
dec
sarl
les
xor
pushf
enter
dec
or
enter
add
dec
push
pushf
mov
dec
sub
loop
and
inc
fiadds
mov
pusha
fs
adc
lea
lcall
push
sbbb
adcl
push
sahf
hlt
data16
ss
push
out
adc
rolb
pusha
jb
xor
andb
int3
mov
jl
adc
enter
fs
adcb
ret
mov
adc
xor
jle
cwtl
loope
adc
or
enter
mov
dec
xchg
aad
push
mov
jo
dec
es
movsb
fdivs
and
add
mov
xchg
gs
sarb
cmp
jbe
jo
imul
inc
aaa
mov
push
test
cmpsl
inc
push
xorb
and
push
jp
push
sub
pop
dec
xor
cld
test
adc
mov
sbb
cmp
cmp
pushf
clc
push
sbbl
rolb
icebp
inc
pop
inc
push
and
pusha
mov
dec
push
sbb
mov
pop
ficoml
xchg
sbb
dec
pushf
ret
push
inc
add
inc
mov
and
push
inc
dec
sahf
or
adc
mov
sub
loop
or
pop
ss
adc
push
dec
daa
shrl
push
inc
mov
xor
and
out
add
out
sbb
mov
or
mov
sub
inc
push
pop
push
test
pusha
lods
xchg
inc
pushf
push
cltd
test
dec
and
and
data16
and
mov
out
mov
dec
adc
and
xchg
test
sbb
pop
mov
dec
adc
xchg
push
push
shll
dec
insb
or
mov
jle
and
sbb
pop
xchg
gs
cmp
aam
out
adc
fs
adcb
adc
xor
ret
add
xchg
lods
cltd
add
jne
cmpsb
fcoml
push
es
je
dec
sub
xchg
push
push
enter
xchg
pop
adc
xchg
mov
push
dec
adc
and
mov
dec
ss
dec
mov
push
enter
ss
pushf
dec
repnz
push
xor
leave
sbb
faddl
mov
push
fidivrs
inc
push
shrl
insb
stos
cmp
popa
mov
mov
push
es
jb
adc
xchg
cmp
loop
cmp
test
test
verr
push
nop
sub
dec
inc
dec
pop
cmp
inc
dec
mov
push
and
xchg
push
adc
inc
sub
xor
addl
mov
sbb
xchg
sbb
sbb
cs
ss
or
dec
rclb
or
sbb
loop
loop
shl
ljmp
outsb
je
push
in
push
mov
les
sbb
push
addb
push
pop
cli
out
ds
dec
add
mov
cmp
popa
sub
outsb
ret
or
dec
mov
je
sub
lret
push
sbb
lret
scas
inc
sub
xchg
inc
xor
inc
adc
xor
mov
xchg
test
adc
add
pop
mov
adc
jbe
mov
push
or
xor
mov
or
fs
mov
lea
adc
dec
inc
orb
mov
add
dec
mov
mov
or
andb
movsb
xchg
adcb
and
cmp
addl
aaa
push
lcall
xor
clc
xor
es
in
ret
pop
fcompl
pusha
int
push
xor
push
push
cmp
inc
add
xchg
mov
outsb
cmc
and
push
dec
push
and
test
pop
dec
xorl
rorb
sbb
adc
mov
pop
test
add
call
lcall
mov
and
mov
sbb
add
push
add
mov
and
cltd
sbb
push
enter
xor
push
cli
shl
fwait
into
loop
out
dec
or
pop
gs
mov
inc
ss
add
dec
push
or
or
xor
aam
lret
push
add
fdivl
mov
adc
sbbb
and
lcall
je
enter
dec
dec
into
sub
and
jle
sub
cmp
inc
cmp
pop
test
xchg
mov
xchg
les
fisubl
movsl
loope
ss
je
jmp
movsb
push
sahf
cs
xor
add
xor
fdivs
push
dec
mov
xor
lret
or
inc
push
out
fs
push
mov
nop
xchg
rcll
outsb
xor
sahf
and
and
cmp
insl
add
stos
out
and
out
push
and
pusha
outsb
lret
jl
dec
xchg
movsb
xchg
dec
and
pushf
sub
mov
or
push
inc
jo
fs
rcrl
pop
mov
push
pop
xchg
cmp
fsubl
jmp
inc
inc
sub
pusha
xor
adc
in
dec
popa
test
pop
xor
dec
and
pop
dec
int3
sbb
xchg
out
sub
cmp
ret
inc
xchg
cli
mov
mov
fadds
xchg
lret
test
in
push
cmp
decb
ss
mov
mov
sbb
stos
sub
push
js
mov
lret
dec
push
add
mov
push
sahf
cmp
push
and
sub
imul
dec
and
js
push
or
or
clc
sub
inc
pop
lods
int3
test
pop
mov
mov
or
rorl
mov
inc
or
mov
inc
push
ret
int3
cmp
fs
and
dec
push
sarb
bt
xchg
inc
in
inc
outsb
enter
push
adc
data16
pop
sbb
sub
sbbb
in
or
nop
enter
orb
and
shlb
dec
xchg
push
xchg
shlb
fidivrs
test
dec
fs
nop
push
mov
loop
xor
sbb
sub
cs
jbe
rorl
aam
sub
add
xchg
rolb
add
lods
test
pop
inc
mov
mov
dec
inc
dec
and
notb
cmpsb
test
push
or
xor
inc
and
push
mov
or
test
or
enter
push
or
cld
in
mov
add
dec
xchg
aam
je
push
add
adc
ret
push
or
push
push
cld
xor
test
xchg
xor
enter
ret
dec
push
inc
pop
push
add
sub
xor
mov
xchg
sbb
add
xchg
leave
lods
testb
fisttpll
xor
push
sbb
mov
addl
je
lods
adc
and
inc
mov
push
dec
hlt
xchg
lods
pusha
or
es
add
sub
mov
mov
jb
fs
mov
clc
inc
xor
dec
sbb
nop
mov
inc
pop
mov
cli
push
aaa
mov
inc
add
inc
push
or
pusha
pop
xor
orl
call
xor
push
xor
add
adc
sub
push
lea
orl
enter
lods
pushw
sbb
aam
xor
cmp
xchg
bound
out
lods
dec
add
sahf
inc
gs
push
adc
pop
test
dec
lcall
add
add
dec
push
movsl
mov
add
loop
aam
test
sbb
mov
inc
in
jbe
pop
and
jno
loopne
ss
cmp
and
add
cmpsb
or
dec
mov
addl
adc
mov
or
sub
pop
or
inc
add
shrb
sbb
test
push
dec
sbb
xor
inc
sub
loopne
inc
jo
aad
push
dec
je
push
inc
xor
loopne
ret
cmp
pushf
cwtl
ficoms
xchg
mov
push
icebp
jp
and
add
dec
dec
push
pop
inc
xor
cs
add
jle
cs
adc
dec
mov
dec
or
xor
dec
popa
xchg
call
mov
outsb
sbb
sbb
or
pusha
jo
xorb
adc
cmp
push
add
jo
dec
dec
ror
movsl
xor
mov
push
sub
push
push
xor
sub
adc
sbb
or
or
sub
add
xor
mov
cli
sbb
loopne
jle
xor
inc
sbb
xchg
sub
add
dec
lret
orl
js
mov
push
cmp
xchg
mov
sub
sub
nop
cmp
popf
xchg
push
inc
in
add
inc
cmpsb
xor
or
int3
push
test
add
shlb
sbb
test
inc
and
pop
push
orl
testb
xchg
jbe
mov
pop
clc
leave
popa
inc
lret
lock
or
popa
sub
mov
xor
mov
sahf
notb
cwtl
mov
sbb
xchg
sbb
push
sahf
or
mov
sbb
dec
or
sbb
cmpsl
aam
pop
fs
in
adc
dec
fsubs
add
adc
xchg
cmp
mov
fidivs
xor
fwait
sub
ss
sbb
inc
inc
es
mov
or
jo
mov
xorb
scas
cmp
inc
pop
push
xor
add
in
cltd
mov
push
subb
adc
les
pop
les
xor
xor
sahf
inc
mov
in
and
xor
stos
nop
inc
call
mov
xchg
addb
cmp
inc
pop
add
int3
faddl
ds
aam
lret
add
test
in
rorb
pop
push
dec
jle
adc
xchg
mov
xor
sahf
or
xchg
cmp
xchg
call
shlb
call
dec
xor
lcall
cmp
add
xchg
or
xor
or
xor
push
inc
xor
mov
push
insl
mov
cmp
or
in
add
enter
and
dec
dec
push
insb
divb
lret
inc
sbb
pop
adc
lret
inc
xchg
clc
push
cmp
mov
add
or
fcoms
lock
jle
and
pusha
xchg
cmpsb
push
or
push
outsb
loopne
sar
mov
sub
cmp
inc
push
xor
xorl
xor
add
xor
insb
mov
mov
push
stos
out
push
mov
xor
push
or
jo
jb
data16
push
mov
les
dec
jmp
repnz
inc
sahf
loop
in
add
and
or
les
in
orb
ss
cmp
mov
push
xchg
subb
dec
or
ficomps
pop
ds
cmp
orb
inc
and
or
js
push
xchg
mov
ror
mov
xor
xor
das
xor
push
or
sub
cmp
or
adc
adc
pusha
xor
or
add
push
adcl
dec
and
test
dec
dec
dec
mov
adc
popf
or
or
test
inc
jbe
rolb
sbb
xchg
mov
xchg
or
clc
out
fs
and
xor
and
inc
add
ficoml
cmp
push
dec
add
mov
sub
int3
pop
test
gs
mov
push
cld
cmp
xchg
movsb
es
aaa
adc
mov
addb
push
filds
add
test
mov
pop
ret
jbe
lods
or
push
push
jle
outsb
jl
adc
cmpl
and
imul
mov
js
xor
adc
or
and
bound
ficoml
ror
sahf
ds
inc
lods
into
push
xor
shlb
fidivs
gs
mov
inc
dec
push
int3
mov
repnz
ret
shrb
pop
repnz
sbb
subb
xchg
adcb
push
fs
or
or
cmp
jnp
aam
nop
pop
pop
addb
pusha
adc
adc
lock
lcall
subb
inc
push
pop
clc
dec
adc
mov
mov
hlt
xchg
adc
sbb
or
es
add
lret
mov
xor
stos
sbb
call
add
dec
mov
test
dec
repnz
adc
xchg
call
dec
ficomps
mov
push
fiadds
push
xchg
or
mov
xor
cmp
xor
push
push
or
sbbb
mov
inc
mov
test
dec
cmp
add
inc
hlt
cltd
dec
push
xchg
cwtl
xor
movsb
and
jp
shll
aam
xchg
add
fisubrl
sbb
sub
jle,pt
nop
enter
cwtl
push
add
push
leave
sbb
and
cmp
dec
dec
mov
or
jo
cmp
mov
add
dec
dec
test
xchg
push
cmp
or
inc
inc
add
mov
inc
les
loope
xor
dec
cmp
mov
dec
sub
cmp
xchg
mov
ss
add
inc
push
xchg
cmc
xchg
call
sub
lods
lds
add
push
mov
push
shll
xor
adc
xchg
dec
mov
dec
cmpb
dec
and
arpl
test
dec
push
test
fdivl
xchg
xor
test
and
push
xor
adc
ljmp
dec
inc
inc
rolb
rol
push
push
mov
fidivs
jo
sub
and
dec
dec
cmpsb
dec
inc
lods
pushf
mov
les
sub
or
cmpsl
or
mov
loop
aaa
pop
add
push
cli
sub
test
push
push
fs
or
dec
jmp
stos
mov
xor
cwtl
mov
pop
sahf
sub
inc
add
and
push
xchg
popa
xchg
and
sbb
int3
push
scas
push
push
or
xorb
adc
xor
add
xchg
push
push
mov
push
add
dec
lods
mov
add
cs
dec
out
test
inc
dec
mov
cwtl
push
cwtl
push
jmp
cs
mov
or
dec
lret
jge
xor
sub
xchg
adc
js
push
adcl
and
enter
dec
nop
inc
fsubrs
inc
cmp
push
inc
sbbb
push
pop
test
xchg
dec
or
mov
push
cmp
in
sub
imul
inc
mov
inc
adc
add
nop
fidivrs
inc
lock
orl
stos
mov
and
sub
data16
xchg
outsb
push
js,pt
rcrb
cs
dec
int3
sbb
orb
loop
inc
adc
jnp
pop
mov
pop
fs
es
pop
or
dec
mov
add
fidivrs
addl
pop
je
add
pusha
push
inc
fiadds
push
test
cmpsb
push
inc
fs
push
mov
sub
xor
lods
stos
jo
mov
pop
dec
xor
sub
add
call
movsl
xor
ss
cmp
aam
cwtl
dec
cwtl
sahf
lea
lret
jle
aaa
sub
push
xchg
or
popa
adc
adc
sub
sbb
xor
or
pop
sub
movsb
xor
in
in
sbb
repnz
call
push
repnz
xchg
mov
push
cmp
test
or
dec
add
and
or
mov
dec
jle
push
cmp
data16
push
test
xor
pop
push
mov
sbb
insb
sbb
int3
popa
xorb
and
and
mov
xor
sub
push
and
cmp
sub
push
nop
shlb
xor
inc
xchg
dec
dec
cwtl
test
ds
ret
add
cmpsb
push
xor
dec
out
pop
cli
ficoms
add
push
pop
or
push
push
pop
adc
push
sbb
ret
je
add
sub
sub
xchg
out
call
clc
hlt
or
xchg
adc
xor
or
mov
mov
push
mov
mov
xchg
inc
or
xor
push
pop
call
ret
enter
sub
lret
mov
xor
dec
repnz
xor
xor
movsb
xor
ficompl
dec
xor
rolb
mov
mov
ret
cs
xchg
pop
jo
inc
cmp
push
adc
ret
mov
jp
in
leave
sbb
mov
push
fdivr
push
inc
mov
xor
dec
dec
mov
add
add
jo
clc
cli
and
add
inc
inc
push
inc
je
decb
push
mov
jbe
dec
xor
cs
sahf
pop
add
xchg
insb
inc
push
or
pop
js
out
xchg
adcb
push
pop
subb
add
xor
mov
sub
data16
dec
test
je
mov
push
mov
loop
mov
or
or
add
addl
cmp
or
nop
inc
nop
jle
push
shlb
dec
ljmp
out
inc
dec
pusha
xor
lret
xchg
xchg
loopne
pop
or
or
mov
cwtl
jle
bound
dec
and
xchg
jmp
dec
popa
add
push
loopne
mov
push
filds
mov
inc
xor
mov
push
adc
sub
inc
push
add
xor
xor
xor
or
cltd
xchg
insb
inc
adc
int3
gs
jo
add
loopne
push
add
cld
pop
mov
dec
dec
or
xchg
sbb
mov
je
xor
pop
sbb
inc
test
mov
add
adc
sbb
sbb
sub
push
push
inc
push
aaa
mov
sub
xchg
adc
hlt
push
clc
lret
or
shll
in
sub
mov
sub
xor
push
mov
xchg
test
dec
or
inc
pop
in
jb
add
mov
xor
fisubrs
fiaddl
inc
lea
xchg
repnz
push
xchg
xor
push
mov
shl
pop
pop
shr
mov
inc
mov
popa
jbe
jle
dec
xor
jo
loopne
repnz
push
xchg
and
lret
out
adc
xor
aaa
js
add
add
mov
inc
add
rorb
fdivs
jbe
mov
or
and
jne
inc
inc
jl
int3
aad
or
mov
xor
add
xor
cmp
cmp
pop
add
aaa
inc
adc
push
nop
or
dec
test
pop
fdivrl
or
mov
mov
xor
push
rolb
or
xchg
repnz
add
inc
and
fcoml
cmp
fdivrs
push
inc
es
cmp
mov
mov
adc
sbb
pop
mov
mov
call
aad
or
call
clc
inc
inc
cmp
mov
int3
inc
rolb
mov
test
popa
add
hlt
xor
sub
push
jmp
insl
mov
dec
lock
inc
aad
sub
ds
xchg
sbb
add
pop
enter
push
push
or
xchg
dec
sbb
bound
sbb
push
push
mov
test
mov
aam
add
xor
add
lcall
or
sub
test
xor
mov
test
shrb
loopne
push
movb
fimuls
pop
cmp
sbb
pop
pop
dec
xor
orb
jle
push
push
out
mov
mov
aam
sub
test
add
adc
xor
adc
pop
add
push
inc
xor
add
mov
lds
sub
movsl
lock
xor
and
dec
andb
and
cld
sub
jb
or
addb
mov
push
inc
xor
or
push
push
add
ss
sub
push
jo
add
cmp
dec
add
cmp
je
jo
inc
fsts
mov
sahf
pop
mov
xor
sbb
mov
xor
ds
je
mov
add
jle
pop
mov
push
jl
dec
ret
ljmp
mov
sarb
jo
add
add
mov
xor
js
call
mov
ss
fiaddl
dec
jo
inc
sub
pop
sbb
inc
in
es
xor
mov
pop
or
dec
enter
cltd
ret
adc
out
add
xor
test
inc
push
inc
enter
xchg
add
or
or
push
xor
or
mov
pop
clc
cmp
mov
push
int3
push
inc
or
push
jae
mov
inc
mov
lods
pop
cmp
lret
inc
sbb
fiadds
lcall
in
loopne
inc
xor
pop
pop
mov
pusha
sbb
and
mov
xor
push
stos
cwtl
xor
out
call
push
cwtl
cmp
inc
pusha
add
bound
and
or
mov
push
xor
inc
in
mov
ds
mov
sub
xchg
lret
inc
add
mov
mov
add
imul
or
inc
and
xor
push
dec
dec
fmull
mov
inc
outsb
push
dec
pop
adc
xor
pop
sub
je
mov
jo
je
xor
cmp
sbb
jae
int3
inc
enter
pop
mov
adc
cli
mov
pop
pop
clc
fisubs
add
jo
and
mov
xchg
xor
or
movsb
mov
loopne
ds
int3
adc
pop
shl
push
dec
xor
test
gs
es
push
or
lods
sbb
sarb
sbb
mov
xor
inc
xor
add
adc
dec
sarb
mov
dec
jo
and
inc
xor
sahf
and
dec
mov
or
adc
ss
test
clc
mov
call
lret
cwtl
push
pushf
push
sahf
imul
cmpsb
out
cli
mov
dec
dec
dec
sbb
jp
push
fsubrl
sbb
mov
js
test
loop
inc
loop
push
dec
push
test
xchg
pop
test
arpl
pushf
fimull
dec
jo
mov
add
in
cmpb
or
inc
and
add
nop
adc
enter
adc
or
push
ss
push
sub
sub
cltd
dec
or
out
pop
inc
xor
inc
adc
ds
sub
pop
push
test
sbb
add
sbb
push
mov
xchg
cmp
inc
push
xor
faddl
daa
jo
stos
inc
mov
mov
inc
adc
orb
fdivrl
add
jo
bound
mov
and
pop
xchg
push
rolb
fs
mov
xor
push
fs
inc
add
bound
push
sub
xor
xchg
inc
sbb
mov
pop
test
mov
jno
dec
pop
sahf
imul
orb
in
mov
inc
fdivrl
dec
mov
adc
loopne
sbb
sahf
test
cwtl
sbb
inc
push
xchg
xchg
jo
mov
push
adcb
mov
pop
cmp
xchg
sbb
lock
pop
subb
push
or
cld
pop
aad
dec
adc
mov
cltd
xorl
loop
insb
xor
sbb
cwtl
dec
pop
add
xchg
push
lock
and
add
push
xor
movb
test
or
stos
or
push
dec
add
add
xor
mov
bound
call
pop
pop
cmp
mov
popa
mov
and
and
movsb
cmp
cmp
enter
dec
or
pop
xor
lods
pushf
in
clc
pop
and
lcall
xchg
cmp
test
and
insb
xor
lock
xor
xor
int3
inc
or
dec
enter
lret
rorb
inc
and
adc
in
xchg
sub
adc
cmp
or
mov
rcrl
pop
rorl
inc
push
xchg
ret
out
subl
int3
outsb
jle
inc
push
dec
dec
mov
add
pusha
xor
stos
sub
xor
pop
sub
mov
out
push
jle
xchg
sbb
sub
add
sub
movsb
sub
inc
mov
xor
push
add
push
add
inc
sub
add
add
cmp
xchg
inc
movsl
inc
push
adc
sbb
inc
jo
adc
mov
out
adc
cmp
inc
push
add
or
fs
rorb
jo
into
add
push
dec
xor
dec
mov
mov
sbbl
popa
call
les
cmpsb
or
add
xor
push
es
fdivl
mov
adc
popa
mov
es
add
sub
mov
pusha
sbb
mov
ret
data16
xor
fs
fdivrl
pop
xor
sub
sub
inc
leave
movsb
pop
add
mov
sbb
sahf
dec
movsb
inc
test
inc
sub
dec
dec
mov
push
adcb
inc
les
arpl
popa
push
dec
test
inc
add
dec
push
jae
pusha
xor
lock
jo
dec
incb
ficoms
rol
dec
dec
cmp
loopne
or
mov
dec
adc
popa
push
pop
bound
pusha
add
test
enter
sbb
pushf
adc
xor
xchg
jp
dec
dec
fimuls
push
push
add
test
inc
ss
sbb
mov
xor
mov
ds
push
dec
xchg
push
sbb
dec
or
pop
pop
inc
add
add
inc
mov
xor
sub
fs
xor
loopne
lcall
dec
cmp
fmulp
mov
cmpsb
inc
pusha
outsb
inc
add
mov
inc
dec
cwtl
hlt
add
and
xchg
inc
cmp
inc
and
dec
dec
sbb
pop
push
mov
lcall
sbb
xor
push
pop
push
shll
cmp
dec
test
push
mov
inc
and
xor
sarb
rorb
jp
mov
adc
clc
dec
movsl
xchg
or
cmp
ljmp
xchg
xor
inc
push
cmp
push
and
mov
inc
or
adcl
mov
push
or
cmp
mov
nop
adcb
inc
shl
dec
pop
sub
or
or
or
arpl
xor
and
push
out
push
in
add
mov
sub
push
xchg
mov
add
push
lret
dec
dec
sbb
xor
adc
mov
rclb
sub
repnz
pop
dec
lea
sub
sub
cwtl
push
pop
add
lret
and
adc
mov
loop
inc
cmp
and
inc
in
dec
xchg
inc
or
xchg
sbb
je
or
lret
aam
mov
add
xchg
xchg
mov
test
sbb
pop
fisubs
test
pop
int3
rolb
ss
dec
adc
cmpsb
pop
and
mov
rcrb
testb
inc
jl
xor
and
xchg
ljmp
nop
insb
push
xor
xor
jmp
pop
fldt
xchg
push
aaa
pop
and
inc
test
adc
push
or
ss
mov
or
fadds
or
nop
sbbb
push
add
dec
inc
adc
pop
push
cltd
or
sahf
jp
sbb
dec
es
sub
cwtl
fmull
jp
xor
fimuls
push
sbb
cmp
shrb
addl
enter
dec
decb
sub
push
inc
xor
inc
lret
test
ss
out
or
or
mov
rorb
call
ds
cli
add
pusha
pushf
or
xchg
mov
or
add
add
cmp
adc
xor
add
jle
lods
dec
and
lret
xchg
xchg
push
adc
mov
inc
pop
sub
data16
dec
sbb
mov
or
pop
out
or
pop
and
mov
mov
sahf
lock
mov
xchg
dec
clc
repnz
test
aam
repnz
or
push
inc
test
xor
aaa
jmp
add
je
push
dec
add
je
outsb
popa
push
int3
inc
dec
test
mov
in
add
xor
fiadds
and
sub
cwtl
incb
andl
rol
gs
aam
cli
dec
rorb
nop
inc
ljmp
jle
push
dec
cmpsb
pop
sub
shl
push
mov
inc
sub
xchg
xor
xor
ss
or
shll
push
pop
jbe
and
test
pop
mov
inc
sbb
mov
fs
adc
cwtl
mov
push
mov
inc
lock
jle
pop
add
xor
bound
push
and
aaa
sub
fwait
rolb
dec
ss
xor
hlt
sahf
push
les
add
or
or
or
push
mov
adc
pushf
cmp
xor
push
mov
nop
inc
xchg
leave
or
rclb
mov
push
cmpsb
inc
popa
push
inc
ds
inc
push
inc
add
gs
ficompl
test
cwtl
into
pop
fidivrs
cwtl
sarb
pop
add
mov
loopne
and
push
inc
insb
sbb
adc
fcom
mov
and
pop
add
rcrl
ds
push
xor
ret
push
add
cmp
cld
rolb
or
xor
lock
repnz
add
sub
push
push
xchg
add
and
fs
push
rcrb
xchg
adc
cld
push
bnd
andl
pop
pusha
in
sbb
dec
push
sub
rorb
dec
xor
push
or
dec
int3
dec
cwtl
fidivl
ljmp
pusha
xor
andb
andb
push
add
push
cmp
dec
add
ret
sub
add
or
cmp
shrb
rcl
adc
pop
dec
loopne
inc
and
pop
inc
adc
cmpsb
mov
cmpsb
mov
faddl
xchg
shrl
push
push
or
test
and
dec
add
push
lret
aam
inc
xor
dec
jbe
sahf
add
popa
add
nop
sbb
scas
sbbb
gs
out
add
cmp
shrl
jge
sbb
movsb
sub
nop
inc
add
sub
inc
es
dec
test
sbbl
sbb
test
aad
mov
dec
fiadds
xor
add
push
bound
push
xchg
push
and
and
xor
sbb
pop
cmp
sbb
rclb
or
adc
push
xorb
sub
mov
push
push
xchg
dec
mov
lret
or
xor
sbb
aam
and
add
mov
insb
xchg
cmp
mov
mov
in
mov
ljmp
mov
xchg
xchg
es
xor
push
pop
or
sbb
xchg
sub
add
and
insb
shlb
jb
pop
es
popa
xorl
sub
adc
push
add
push
aad
xor
test
xchg
mov
xor
mov
push
add
push
or
ret
inc
dec
push
adc
in
enter
push
lret
call
xchg
leave
inc
mov
inc
mov
jl
push
jecxz
jo
inc
mov
add
inc
xchg
dec
mov
ret
test
push
cmp
ds
les
adc
mov
mov
jo
aam
push
testb
ret
add
dec
aaa
push
dec
cmp
sbb
xor
addb
addb
xor
adc
adc
push
jo
add
xor
or
or
xor
dec
mov
mov
mov
xor
test
enter
push
cmp
and
adc
xor
mov
mov
cmp
or
fidivs
stos
add
sbb
cmp
pop
cmpsb
cmp
add
mov
pop
sub
mov
mov
dec
inc
add
and
add
add
add
inc
inc
sbb
lcall
add
sahf
das
rolb
sbb
and
mov
sbb
add
add
incb
xchg
das
pop
es
jg
clc
aas
push
pop
lods
cmp
iret
jmp
rol
add
mov
mov
push
aas
jg
dec
push
xor
addb
cmp
add
test
or
int
push
mov
dec
add
xor
mov
add
jg
or
out
push
out
clc
cmp
data16
out
cmp
fldcw
rolb
loopne
lock
cs
push
imul
aas
pop
fdivs
pop
xchg
addr16
lock
fstps
xor
pop
std
cmp
js
addb
mov
inc
add
repz
data16
jg
adcb
add
jo
sbb
mov
pop
incb
lock
add
pushl
or
push
repnz
out
add
nopl
es
jns
aaa
add
add
nopl
into
push
add
jl
jnp
add
and
cmp
sbb
das
aas
dec
add
outsb
daa
add
ss
out
pop
std
clc
lock
aas
rcrl
insb
rcrb
dec
add
fstpt
pop
outsl
clc
popl
cmp
pop
adc
add
loopne
pop
sbb
sub
addb
psadbw
into
cmp
jg
cmp
pop
or
adc
adc
out
aas
nopl
ds
cmp
sub
add
mov
pop
cmp
fmull
aad
cs
pop
popf
or
jno
add
cs
ret
sub
jle
fwait
int
sbb
push
sub
inc
add
mov
sahf
in
inc
addl
pusha
xor
sbb
stos
ja
xor
push
sbb
js
push
inc
cmc
mov
fldcw
lock
push
outsl
ss
int
cmp
sbb
or
test
fildl
loope
xchg
or
pop
and
add
push
cltd
adc
ja
pop
add
rolb
and
add
or
add
xor
cmp
mov
cmp
xorl
mov
daa
sbb
cmp
scas
mov
aas
daa
and
out
pop
neg
xor
and
sahf
jnp
adc
cmp
clc
dec
push
dec
jnp
sahf
push
mov
push
push
jb
es
daa
cmp
daa
xchg
in
mov
sbb
sbb
fidivrs
inc
daa
out
cmp
aaa
mov
ja
push
into
jne
jne
clc
push
cmc
sbb
pop
push
or
cmp
cmpsl
lahf
adc
add
xor
cmp
inc
and
cmpl
xor
and
xor
lods
pop
daa
inc
push
movsl
jg
mov
daa
dec
sub
repz
xor
mov
daa
xor
dec
sub
clc
xor
iret
loope
pop
jbe
and
push
fnstsw
mov
push
int3
push
cmp
and
and
cmp
jmp
mov
push
dec
pop
push
cmp
fldenv
xor
push
xlat
repnz
jnp
lret
push
and
xor
push
or
fistl
mov
in
push
xbegin
sbb
andl
adc
lahf
jbe
decb
add
ja
testl
incb
or
dec
ljmp
dec
push
pop
xor
outsb
daa
inc
aad
sti
lods
insb
mov
pop
daa
enter
mov
out
in
sbb
jns
push
incb
mov
lahf
dec
clc
add
test
mov
daa
ja
sbb
push
repz
pushf
es
xor
sbb
dec
mov
xor
inc
arpl
jns
mov
inc
shll
xor
arpl
cmp
add
insb
lahf
cmp
inc
dec
pop
and
repz
fs
jnp
fistl
daa
push
lret
in
cmpl
mov
mov
daa
dec
lret
ljmp
inc
inc
es
daa
dec
add
cmp
mov
xor
in
repz
xchg
jecxz
push
shll
pop
adc
loopne
xor
xor
in
inc
or
sbb
or
stos
movsb
out
sub
jb
sahf
inc
repz
daa
xor
jg
cmp
arpl
das
es
mov
jg
in
push
rcr
movsb
inc
sub
push
push
xor
leave
and
repz
sub
addl
inc
push
iret
dec
in
shlb
mov
sti
push
jle
aas
je
stos
inc
aas
call
ret
fsubrs
jo
cs
lock
es
fsubs
movsb
pop
xor
dec
xor
fildl
daa
mov
dec
stos
xor
ja
pop
and
lahf
jmp
jmp
pop
das
divl
adc
inc
jo
mov
fsubrl
or
cld
or
sub
cmp
sbb
xchg
xchg
sbb
push
sbb
into
loopne
adc
daa
mov
or
clc
or
sbb
xchg
xchg
fcoms
daa
gs
testl
daa
adc
jae
dec
daa
dec
daa
clc
dec
or
jnp
cmp
dec
sarb
dec
jl
pop
add
jmp
dec
rorl
ds
push
aaa
loope
cmp
mov
dec
mov
roll
cltd
cltd
push
mov
mov
test
imul
daa
repz
xor
cmp
leave
inc
push
sbb
sahf
fadds
adc
pop
add
mov
push
mov
fsubs
cmp
mov
dec
mov
and
push
dec
push
inc
sbb
pop
adc
jl
push
jae
lahf
es
mov
scas
orl
ljmp
stos
push
sahf
loope
mov
aas
loope
loope
daa
aaa
jl
xor
aaa
daa
and
xchg
mov
cwtl
stos
sub
aaa
fs
into
out
mov
jbe
pushf
test
js
outsb
push
imul
sbb
jbe
pop
jnp
xor
push
and
out
jmp
xchg
orl
lret
push
movntq
es
push
push
adc
dec
sahf
cmc
pop
movb
and
aad
add
or
dec
jp
cltd
xor
cld
push
lock
add
lret
in
aas
pop
mov
lock
xchg
mov
cs
xchg
xorl
pop
or
filds
and
add
inc
push
or
add
add
push
or
cmpsb
mov
xchg
or
imul
add
cmc
js
mov
mov
jg
cld
mov
pop
mov
inc
jbe
inc
lcall
addr16
orl
jg
add
ja
bound
ja
xor
insb
jb
bound
ficomps
jbe
arpl
sbb
pop
shrw
ja
and
mov
js
repnz
xchg
cmp
shll
test
pop
daa
ds
mov
push
pushf
ja
mov
insl
rclb
jl
mov
xor
fwait
loopne
inc
mov
popa
push
jo
xor
ret
pop
out
push
fucomip
pushf
stc
in
mov
jo
mov
lcall
mov
mov
mov
inc
iret
sbb
xorb
and
add
xchg
push
scas
cld
jg
or
aas
clc
add
pop
cld
in
inc
sub
aas
lcall
incl
mov
cld
xchg
sarb
ds
pop
push
add
iret
repz
inc
enter
add
es
add
jne
test
xchg
dec
lods
dec
insl
mov
push
add
lret
movsb
fisubrl
inc
movsb
dec
test
ljmp
xlat
xorl
outsb
inc
sbb
imul
ds
or
dec
or
dec
adc
pop
sti
mov
mov
xor
inc
ja
xorl
insl
push
or
push
es
stos
sbb
push
out
jns
imul
jbe
push
jae
jne
mov
out
push
gs
xor
push
sbb
inc
jecxz
xchg
adcb
adc
dec
push
cmp
or
sbb
stos
xchg
inc
fidivrs
ljmp
push
cmp
data16
or
mov
scas
jge
jns
adc
movsb
lods
sarl
fdivl
dec
dec
push
jbe
mov
pop
jnp
sbb
ss
jo
push
or
addr16
xchg
lcall
sbb
add
movhps
and
mov
pop
inc
add
repnz
mov
insb
xchg
jne
pop
jle
loope
sub
jae
popa
xor
jno
mov
push
push
pop
das
push
fwait
mov
gs
call
ljmp
bound
into
fildll
imul
adc
jmp
aas
push
ss
aaa
push
aaa
inc
sbb
dec
popa
inc
dec
fists
push
xchg
lret
or
mov
hlt
sbb
out
arpl
mov
push
insl
mov
and
cmc
cs
popa
push
outsb
ret
and
mov
adc
jbe
addr16
jnp
stos
lahf
adc
out
push
jns
movsb
mov
xor
xchg
ja
or
jle
mov
or
push
jae
out
push
cmp
pop
and
push
jnp
push
push
or
lock
scas
scas
dec
mov
push
aas
cmp
inc
or
sbb
xor
in
js
pop
and
mov
xor
stos
sti
fwait
sbb
popa
cmp
push
inc
xchg
and
je
imul
jge
xchg
cmp
mov
jnp
jns
push
xchg
add
jnp
push
popaw
xor
xlat
dec
dec
pop
mov
adc
stos
sti
jns
push
add
es
bound
mov
add
add
push
fucomp
adc
inc
fistpl
cmp
dec
mov
mov
push
push
push
faddl
ja
dec
mov
cli
sbb
das
mov
cmp
pop
mov
shrl
call
cmpsb
bound
sbb
xlat
push
jne
mov
pop
dec
xchg
sbb
and
mov
mov
insl
jecxz
cmp
js
xor
shll
scas
cmpl
xchg
fs
sub
bound
popa
inc
jecxz
jo
jo
fldt
es
aas
ds
pop
es
add
jl
sub
inc
cmpsl
arpl
icebp
ss
xchg
push
push
inc
ljmp
into
mov
sub
rorl
cmp
jbe
mov
es
and
or
roll
pop
fsubrs
pop
ss
lock
ficoms
add
push
dec
arpl
loopne
je
inc
arpl
push
rcll
or
repz
adc
mov
mov
pop
cmc
frstor
and
jb
push
adc
push
ret
mov
jmp
outsl
mov
imul
hlt
js
subb
daa
popa
cmp
mov
out
mov
dec
outsb
arpl
addl
addl
jbe
mov
jbe
imul
dec
lahf
fisubl
and
jge
inc
inc
and
sti
sub
jecxz
ret
cmp
pusha
mov
aas
popa
dec
add
fidivs
mov
push
mov
pop
ss
bound
pop
xor
jnp
sub
cmp
sbb
xchg
xchg
ds
shrl
sub
add
ret
push
cmp
sbb
ljmp
fwait
jbe
imul
scas
jmp
lods
sub
cmp
cs
or
push
dec
out
mov
filds
lcall
loope
in
sub
jmp
jg
loopne
pop
add
out
dec
mov
gs
jp
mov
dec
out
and
insl
and
jp
push
jnp
jo
lcall
jo
lret
pop
adc
jae
pop
pop
mov
scas
push
inc
cli
sub
movsb
pop
lahf
lret
cmp
mov
das
pop
cli
out
js
aaa
mov
xorl
popf
xor
out
inc
rolb
hlt
pop
jo
mov
sysret
pop
lret
stos
out
push
mov
xchg
mov
jnp
popa
add
xlat
mov
add
loope
out
cs
dec
mov
xor
cmp
ljmp
mov
adc
aad
sub
ret
push
pop
pop
icebp
xor
jo
jns
dec
rcll
pop
sub
aad
xchg
outsl
das
shrl
out
sub
add
xor
inc
sbb
outsl
cmp
imul
inc
add
mov
dec
pop
inc
ret
push
lea
outsl
push
xchg
and
mov
mov
mov
out
stos
sbb
mov
shlb
lcall
stos
pop
out
sbb
sub
cmp
push
mov
pop
mov
lret
pop
and
icebp
jmp
push
inc
and
jp
mov
stos
fwait
popa
mov
mov
mov
mov
xchg
pop
xor
push
pop
dec
imul
roll
sbb
jae
jg
mov
or
int3
subl
test
ret
adc
aam
push
dec
add
js
mov
pop
daa
jmp
arpl
jae
aad
loopne
pop
pcmpeqw
push
sub
xor
and
out
pop
inc
lock
jmp
mov
imul
or
jbe
cmp
cs
sbb
push
addr16
jmp
sbb
ja
pop
popa
dec
mov
ljmp
mov
push
imul
mov
sbb
ret
aaa
roll
aam
push
bound
in
stc
clc
sbb
and
ret
sbb
ja
or
loop
ja
and
or
push
sbb
jecxz
fistps
mov
xor
sbb
popa
outsl
push
jbe
lcall
aaa
push
outsb
xor
push
push
push
imul
scas
push
mov
push
jae
mov
xchg
outsb
daa
or
xchg
xchg
aas
iret
inc
roll
mov
push
mov
outsl
mov
add
sbb
ret
and
mov
push
mull
dec
rorb
cmp
insb
sub
out
mov
btr
pushf
xor
test
push
sahf
or
push
jb
sbb
cmp
push
mov
mov
and
in
rcrl
sub
mov
out
push
and
out
add
pop
jl
iret
arpl
dec
pop
jne
fimuls
bound
and
mov
mov
fdivp
add
ds
sbb
outsb
sub
aas
inc
mov
out
mov
sbb
out
jb
mov
mov
inc
or
pop
xor
and
rep
emms
or
inc
ja
adc
cmc
lods
cvttps2pi
ret
mov
sub
push
push
xchg
mov
dec
aas
lcall
fildll
mov
notl
or
mov
pop
jae
mov
push
cltd
repz
daa
dec
sbbl
or
pop
call
jnp
subl
out
lahf
cs
rol
sub
mov
pop
mov
arpl
pop
cmp
cmp
sub
adc
pop
sysret
add
jno
adc
repz
aad
pop
fildl
lret
add
mov
imul
xchg
cmpsb
push
jae
or
sub
inc
push
mov
add
ljmp
mov
lahf
scas
jo
or
stos
jbe
mov
sbb
sbb
scas
arpl
shll
adc
scas
sbb
sub
or
fdivs
mov
scas
divb
cmp
loop
mov
mov
testl
sbb
adc
call
or
rclb
sbb
rclb
cmp
dec
imul
mov
jmp
and
pop
xor
ljmp
jae
fdivrp
andb
mov
cli
xlat
movsb
imul
jae
push
adc
cmp
push
xchg
inc
pop
mov
repnz
outsl
outsl
leave
movsl
lods
cmpsb
sbbl
test
add
push
lods
xlat
mov
shlb
fwait
add
push
jp
adc
or
and
cmp
movsl
push
or
jbe
cmp
inc
adc
and
jae
dec
fbld
push
pop
adc
or
or
jne
mov
or
dec
inc
fstp
push
push
push
aad
jnp
loopne
xchg
fisubrl
or
mov
jae
inc
shll
xchg
jae
xchg
jo
aam
div
push
or
add
jb
jbe
pop
or
aaa
add
shrl
jae
or
addr16
jae
jo
push
add
or
das
ds
ret
repz
mov
lods
push
repz
movsl
adc
adc
mov
and
jns
cmp
outsl
mov
lds
fwait
fs
imul
xor
loopne
outsl
movzwl
dec
inc
pop
imul
jo
aam
aaa
outsb
lahf
jb
sti
jo
xchg
push
adc
or
sarl
mov
hlt
pop
outsl
ds
stos
arpl
mov
jo
xchg
dec
push
mov
sbb
add
repz
push
mov
pop
pop
jg
std
decl
add
cmp
aaa
mov
pop
fwait
cmp
movsl
cs
cmp
rolb
add
rol
mov
and
mov
clc
or
add
jnp
push
lret
push
dec
push
in
push
sub
or
inc
pop
jge
xchg
pop
adc
jb
and
dec
sbb
push
or
popf
add
and
inc
fisttpl
add
sbb
dec
or
inc
rcll
lcall
push
mov
push
add
addr16
adc
pop
adc
mov
fnsave
adc
xchg
loopne
fbstp
and
sub
jp
sbb
jb
xchg
push
sub
fbstp
cltd
testb
mov
sub
xor
sub
gs
insb
inc
push
dec
or
xor
aad
outsb
xchg
xchg
adc
outsb
faddp
xor
or
cmpsl
xor
mov
lret
jbe
or
jbe
int
jns
nop
icebp
adc
cmp
dec
inc
insb
addr16
xor
push
or
sub
loopne
mov
adc
adc
gs
push
dec
mov
cmp
xorb
jnp
daa
adc
pop
into
jb
adc
cmp
inc
jo
inc
lods
rcll
xchg
mov
shlb
cmpsb
or
xor
add
fimull
xchg
cmpl
movsl
ds
das
inc
aad
sarl
inc
loope
push
jno
add
xchg
dec
aam
add
xor
add
add
mov
dec
sbb
add
mov
or
mov
jno
xchg
add
gs
ret
cmc
aaa
pop
or
xchg
add
shrb
add
pop
bswap
outsb
add
or
addr16
add
or
or
push
out
in
xor
cmc
or
sbb
pop
push
mov
and
test
pop
or
fs
push
pop
sbb
sbb
inc
pop
pop
adcb
ljmp
xor
cmpsl
add
fistl
cld
movsl
dec
add
push
popa
or
adc
inc
popf
and
pop
add
sbb
or
or
adc
add
jle
inc
push
sbb
dec
dec
push
add
adc
mov
and
and
push
mov
push
cmp
dec
push
inc
ss
aad
sbb
cs
cmc
pop
dec
inc
dec
je
dec
aaa
pop
mov
inc
add
repnz
inc
dec
adc
dec
nop
decb
adc
adc
dec
dec
cmp
push
sbb
xor
xor
xor
shlb
sub
ss
xchg
and
pop
imul
pop
clc
inc
fsubs
xchg
or
push
pop
sbb
push
inc
dec
shlb
and
sub
cltd
or
inc
push
or
inc
ds
lcall
inc
and
xor
aam
pop
jp
mov
xchg
lods
in
cmp
pop
insl
ret
adc
cmp
aad
mov
cmp
xor
push
and
rorb
push
or
fs
adc
pusha
sbb
mov
nop
dec
xchg
push
dec
mov
or
gs
cmp
ss
popf
dec
dec
dec
xor
mov
dec
add
hlt
inc
enter
push
inc
dec
fs
dec
xorb
inc
into
or
imul
cmp
inc
dec
mov
inc
dec
cmp
dec
insl
dec
xor
adc
subl
test
push
dec
push
sarb
inc
mov
mov
mov
xor
pop
sub
andb
mov
push
push
dec
jle
fidivs
cmp
jno
push
xchg
sub
mov
ss
inc
or
lods
roll
mov
sub
aad
dec
or
add
adc
in
inc
jmp
and
ret
fimuls
adc
adc
insl
adc
aaa
dec
cmp
aam
stos
loopne
bound
rol
les
test
push
pop
pop
mov
xor
dec
add
movsb
sub
movsl
cmp
dec
arpl
push
cmp
insb
inc
mov
xchg
enter
cmc
xchg
mov
decb
enter
add
dec
andb
push
ss
mov
bound
imul
inc
test
rcrb
aam
add
cmp
sbb
push
push
sbb
xchg
inc
push
in
sbb
sbb
bound
or
sbb
dec
mov
insb
and
mov
dec
pushf
push
inc
inc
adc
adcl
decb
cltd
push
xor
cwtl
sbb
add
xchg
pop
subb
shll
mov
push
dec
inc
add
ss
xor
pushw
outsb
repnz
inc
sbb
dec
repnz
and
sbb
or
dec
add
rcrl
dec
pop
cmp
mov
lock
sbb
and
popa
dec
inc
insb
dec
or
mov
sub
push
pop
dec
xor
sbb
xor
mov
and
cmpsb
adc
insl
and
jbe
dec
inc
xor
cltd
adc
and
and
ret
push
push
and
leave
push
call
inc
add
dec
aaa
or
xchg
sbb
int3
je
jl
ljmp
xor
in
in
or
xor
dec
cmp
sub
scas
ljmp
push
dec
add
cmpsl
and
xor
add
fsubs
sub
push
jo
sub
es
push
fwait
adc
lret
int3
and
cli
je
ss
push
or
push
cli
sahf
fs
xor
nop
mov
and
movlps
hlt
push
inc
dec
loopne
adc
inc
int3
xor
nop
sahf
mov
dec
push
xchg
mov
testb
sbb
xchg
nop
and
sbb
loop
xor
ss
inc
sbb
adc
and
push
jae
xor
xor
pop
push
xor
and
sub
and
dec
sbb
push
hlt
dec
decb
mov
sub
cmp
jne
adc
cmp
sub
xchg
pop
cmp
and
cmpsl
mov
push
push
sbb
outsb
mov
lds
mov
cmp
xchg
xor
jo
sub
loop
fs
lock
in
dec
and
test
push
pushf
ret
cmp
sbbl
call
xor
cmp
and
mov
add
push
mov
scas
push
enter
cmp
push
xor
sbb
xor
and
mov
mov
mov
cwtl
shll
jbe
and
pop
sbb
addl
inc
ret
and
js
dec
adc
jp
fiaddl
and
cltd
shll
repnz
mov
mov
xor
push
fs
push
fldl2e
hlt
and
insb
jecxz
cmpsb
cwtl
inc
xchg
sbb
adc
dec
mov
and
xor
add
dec
orb
cld
sub
push
sbb
xchg
sbb
dec
hlt
dec
push
push
adc
dec
sbb
jge
xor
sbb
testb
adc
pop
lods
jp
es
xor
js
push
push
inc
push
cwtl
push
in
sbb
test
or
xor
push
and
es
hlt
aad
and
push
sbb
cwtl
ret
insb
addb
xor
xor
fsubs
push
pop
lods
mov
push
dec
xor
call
rcll
mov
inc
jb
test
data16
inc
ret
xor
xchg
or
xchg
mov
cwtl
xchg
sub
sub
adc
xor
dec
and
mov
insb
clc
fisubrs
inc
or
jle
xor
and
jo
andb
leave
movsl
pop
xor
mov
adc
add
gs
inc
xor
cmp
insb
cmp
cmp
shll
push
push
movsb
lcall
sahf
or
cs
and
and
fs
ret
pusha
cmp
shlb
call
add
sub
enter
mov
dec
and
xor
js
dec
inc
ret
hlt
add
push
and
jae
inc
pushf
xchg
push
test
int3
xor
in
push
xchg
inc
pop
adc
mov
aam
in
movsb
mov
fs
mov
sub
out
jp
adc
and
enter
es
cmp
sub
gs
rolb
dec
add
add
pop
mov
fs
mulb
push
fimull
and
sbbl
sub
mov
and
lods
testb
dec
jb
mov
or
ss
hlt
add
xchg
enter
mov
pop
adc
ljmp
dec
dec
push
push
adc
push
push
inc
push
xor
push
xchg
lods
cmp
call
popa
mov
pop
pop
xchg
xchg
cwtl
push
subl
add
movsb
in
fcoml
inc
push
lods
pusha
push
mov
inc
mov
and
and
adc
ret
add
xchg
rorb
xchg
mov
or
cmp
push
inc
or
test
push
and
ret
inc
dec
repnz
adc
xchg
xchg
add
sub
cmp
ret
pop
push
and
sub
cld
dec
pop
xchg
xor
push
push
push
push
in
dec
dec
mov
mov
jb
lcall
inc
or
data16
cmp
adcl
inc
mov
dec
dec
addb
test
mov
add
cs
insb
push
xor
xor
dec
fwait
add
add
add
loopne
sbb
lret
dec
gs
dec
mov
dec
dec
mov
lcall
xor
mov
aam
push
inc
pop
xor
pop
mov
sbb
push
imul
inc
sub
dec
dec
es
push
test
dec
mov
push
xor
loopne
int
add
xor
xor
cmp
fidivrs
xchg
and
push
xchg
push
pop
xor
push
or
or
adc
inc
cmp
adc
jo
sub
mov
inc
inc
cli
mov
inc
dec
pop
test
cmc
add
jl
pop
xor
pop
mov
push
inc
es
data16
sbb
xchg
mov
shlb
stos
push
xor
sbb
in
cmp
cmp
enter
test
loope
mov
push
mov
xor
je
xor
movsl
mov
jbe
mov
push
push
push
adc
test
mov
mov
adc
aaa
cmp
aad
dec
sbb
lret
and
insb
push
fiadds
test
arpl
jnp
mov
jl
jl
pop
xchg
data16
inc
push
pop
es
dec
add
add
sbb
pushf
hlt
pop
test
scas
dec
xorb
stos
adc
cmpb
push
push
xor
mov
dec
dec
sahf
pop
push
mov
ss
push
push
cwtl
push
popa
inc
stos
sbbb
dec
sub
jo
fistl
push
rolb
dec
lret
ss
cmp
cltd
or
mov
xchg
mov
cwtl
sub
cmp
add
xchg
cwtl
or
sbb
ljmp
lcall
add
sbb
shrb
or
movb
int3
and
enter
mov
adc
adc
inc
cmpsb
repnz
int3
mov
inc
xor
inc
dec
mov
push
mov
inc
xor
and
dec
sub
rclb
jo
xchg
arpl
sub
data16
xor
sub
loopne
xor
push
dec
cs
fs
cltd
xchg
dec
ret
and
stos
push
arpl
xor
push
fidivs
or
inc
outsb
sbb
adc
in
inc
xchg
push
inc
push
push
xor
dec
insb
inc
scas
push
lock
xor
insb
pusha
test
and
sahf
lock
pop
sbb
cmp
call
inc
mov
inc
mov
leave
sub
or
cld
addl
ss
mov
add
add
nop
stos
shlb
cs
mov
xchg
pop
cmpsb
push
mov
jo
into
push
dec
loope
cmp
mov
dec
les
mov
or
call
and
push
ljmp
sub
push
adc
mov
or
fs
jmp
push
dec
push
inc
jle
int3
pusha
dec
or
push
mov
rorb
cmp
push
iret
pop
xchg
and
cmp
sub
push
jle
push
dec
adc
jb
faddl
add
add
test
lods
roll
inc
xchg
inc
jo
sbb
daa
call
push
push
pop
fsubs
movsb
pop
adc
push
pusha
pop
and
jp
sbbb
add
inc
dec
push
or
or
shr
jbe
inc
inc
dec
pop
stos
inc
out
mov
mov
inc
push
inc
dec
xor
hlt
xor
and
cwtl
dec
mov
mov
xchg
mov
adc
dec
dec
push
xchg
dec
push
popf
xor
and
pusha
ss
lock
scas
cmpsb
xor
fidivl
mov
mov
xor
inc
inc
daa
and
andb
inc
fs
shlb
push
dec
inc
push
push
test
and
xchg
fdivrs
gs
sub
dec
jecxz
dec
pop
cwtl
sbb
sbb
xchg
adc
ds
leave
lcall
popa
ret
inc
bound
xor
scas
dec
xchg
leave
xor
and
mov
inc
push
push
and
ret
jne
push
inc
cmp
andb
lock
outsb
adc
jb
aaa
dec
dec
sub
mov
clc
dec
shl
aaa
pop
add
sbb
push
pushf
cmp
and
push
cmp
adc
inc
dec
int3
jl
or
push
and
inc
or
adc
mov
push
dec
mov
repnz
sub
sbb
xor
leave
adc
push
cli
je
adcb
xchg
in
xchg
xchg
xchg
dec
shlb
aad
inc
jbe
cs
push
mov
inc
hlt
test
and
and
mov
pop
test
dec
or
xlat
int3
and
lock
cmp
or
sbb
lcall
pushf
inc
dec
test
inc
loope
insb
jl
cs
xchg
hlt
mov
enter
mov
in
and
enter
rol
aam
je
push
fnstenv
mov
adc
sbb
jl
xchg
sbb
out
dec
mov
orl
xchg
icebp
test
push
rcl
mov
push
dec
push
jb
int3
ss
push
and
mov
ss
mov
xor
inc
push
leave
xor
cmpsb
test
xor
mov
xchg
mov
xchg
addl
testb
fs
push
ljmp
xor
inc
fs
imul
movsl
and
cmp
sub
fimuls
jb
sub
mov
rcl
adcb
mov
test
inc
repnz
or
sub
cmp
setne
popl
push
cs
and
inc
loope
popa
jl
mov
xor
inc
out
enter
and
push
and
and
lods
cmp
and
xchg
cli
xchg
lcall
xchg
ret
mov
dec
cs
mov
ret
mov
fcoms
inc
adc
scas
jo
pusha
xor
in
fadd
add
add
jp
inc
fcomps
les
adc
pushf
in
cs
xor
sbb
inc
push
sbb
bound
ss
ret
xchg
nop
movb
inc
dec
dec
aam
nop
add
bound
or
pop
push
dec
or
test
push
cltd
mov
push
enter
pop
add
add
sahf
out
add
lds
sub
add
pop
mov
outsb
push
lods
sbb
call
call
add
pop
push
lret
add
adc
or
cwtl
inc
sub
js
xchg
mov
inc
pusha
outsb
dec
mov
dec
repnz
cmp
sub
cli
pop
roll
cmp
push
or
xor
adc
dec
add
xchg
and
retw
nop
and
call
mov
xor
mov
fcoms
fmul
adc
pusha
orb
les
roll
mov
pushf
scas
scas
mov
lea
insb
and
stos
xchg
mov
push
cmp
add
mov
adc
push
dec
push
mov
pusha
push
cmp
xor
mov
fsubs
mov
or
aam
insb
inc
sbb
or
push
fmuls
test
dec
dec
scas
or
xor
lret
sub
and
enter
sub
push
fadds
mov
jle,pn
dec
add
xchg
fiaddl
es
es
popa
mov
push
sbb
adcl
add
mov
mov
dec
jbe
or
xchg
cmp
dec
jo
sbb
sbb
jo
cltd
dec
lods
sub
cltd
xchg
les
loop
add
ret
mov
adc
lods
mov
enter
or
inc
xor
sbb
push
pusha
dec
adc
cmp
in
test
mov
cs
cwtl
rorb
lock
shrb
popw
add
xchg
in
pop
xor
or
push
dec
or
mov
movsb
push
in
or
push
test
sub
dec
loop
cmp
cltd
jb
dec
call
nop
orb
cmpsb
ss
ficompl
xor
cmpsb
sbb
mov
mov
and
js
add
int
inc
push
in
dec
add
inc
or
add
push
mov
xor
xor
inc
push
dec
push
bound
adc
cmp
push
adc
pop
xchg
pop
push
pop
and
dec
loopne
sub
xor
and
add
test
cwtl
mov
push
and
fs
lret
sub
push
nop
inc
and
rclb
test
mov
dec
lret
add
stos
push
push
ret
xchg
scas
dec
and
mov
data16
push
insb
sbb
in
xor
pop
cli
dec
sbb
push
cmp
ljmp
je
xchg
pop
push
xor
mov
dec
add
jo
push
lock
lcall
cmp
push
or
xchg
pop
jle
inc
sbb
xor
push
inc
scas
leave
pusha
adc
inc
or
push
shrb
or
ss
or
mov
cmp
cmp
inc
pushf
xchg
xor
scas
stos
inc
cmpb
xor
ret
out
enter
inc
ret
dec
mov
lea
xor
push
xor
pop
bound
movsb
insb
xchg
add
pop
sbb
push
inc
xchg
movsl
xchg
gs
adc
pop
cmpsb
nop
les
push
add
mov
pop
pop
jl
test
mov
rcll
adc
xchg
leave
mov
jbe
mov
or
add
aam
cmpsb
mov
or
dec
push
es
add
sub
xor
rcl
and
push
pushf
cmp
mov
ss
xor
enter
rorb
rolb
cli
push
insl
inc
or
xchg
push
packssdw
inc
mov
or
cs
xchg
or
je
dec
xor
push
dec
dec
jecxz
scas
dec
lcall
sbb
inc
in
xor
or
dec
add
cwtl
fsubs
sub
fimuls
or
insb
push
add
or
xor
sub
mov
daa
and
scas
loop
lds
nop
cli
add
sbb
inc
pop
cli
push
test
mov
mov
aaa
ret
sbb
jbe
aam
inc
xor
add
lea
and
xor
loopne
jbe
movsb
xor
xchg
insl
mov
dec
fmuls
push
or
jo
mov
and
xchg
mov
aaa
adc
push
cld
pop
add
xor
es
sub
inc
mov
dec
imul
xchg
fmuls
mov
adc
fmuls
pop
sub
push
mov
cli
push
lret
xchg
xchg
add
add
sub
mov
inc
add
dec
add
push
sub
movsl
movsl
dec
sbb
arpl
in
bound
xchg
xchg
or
test
cmp
push
inc
inc
adc
push
xor
mov
inc
xor
nop
ret
sbb
aam
pop
int
pop
in
stos
dec
xchg
push
add
dec
push
sbb
test
cld
outsb
scas
dec
or
cmpb
pop
xor
in
xchg
sbb
jl
adc
and
and
add
ret
and
or
loopne
cmp
andl
add
mov
mov
inc
aad
push
xor
addl
sbb
je
loope
pushw
dec
add
adc
mov
sub
ss
scas
push
fcomps
dec
dec
inc
cli
fs
inc
hlt
cmc
mov
ss
sub
outsb
aam
fimuls
adc
fnsave
push
sub
push
cwtl
incb
lcall
pop
int3
xor
jb
mov
nop
rcl
sahf
loop
adc
and
loopne
xor
incb
test
mov
jne
sub
dec
or
or
and
aaa
and
or
pop
ret
inc
xchg
rorl
and
clc
testb
xor
cmp
int3
push
xchg
xchg
pop
push
scas
inc
xchg
bound
rolb
dec
lea
add
xor
in
or
xor
add
jle
dec
loopne
adc
mov
pop
data16
loopne
movsb
ret
xor
pusha
leave
and
and
xor
adc
dec
lret
add
ret
sub
test
or
in
add
xor
add
mov
sbbb
sub
pusha
push
and
dec
andb
and
popf
fwait
xchg
push
mov
movsb
movsl
adc
xor
xor
push
fwait
jo
fs
pop
push
push
movsb
xor
xor
cmp
or
jl
and
xchg
ret
pusha
pusha
dec
sub
push
and
rcrl
push
cmp
push
xor
sbb
cmp
or
push
inc
xchg
dec
push
scas
dec
push
xor
shrb
cwtl
adc
inc
dec
pop
ljmp
test
sub
xchg
cld
xchg
call
jb
mov
xchg
fadds
dec
shlb
inc
js
xor
pop
sub
or
inc
pop
test
pop
or
fsubs
cmpsb
inc
cs
add
mov
inc
sbb
js
rorl
hlt
and
fwait
adc
mov
loopne
sub
xchg
inc
out
adc
or
sbb
push
inc
pop
push
or
lods
inc
mov
jno
pusha
lret
sbb
xchg
xor
dec
dec
inc
or
pop
add
loopne
lret
pop
xchg
out
push
clc
cltd
push
mov
pusha
movsb
mov
mov
or
push
xor
aaa
sbbb
stos
test
jo
jo
pushf
insb
cmpsb
testb
mov
sbbb
dec
jb
ss
and
ljmp
xor
movsb
mov
es
cmp
cs
pop
sbb
jb
pop
loop
loope
push
in
fcmove
mov
mov
loop
call
pop
subb
xchg
dec
add
dec
outsb
push
inc
movsl
mov
xchg
loopne
push
sbb
in
pop
scas
dec
xor
shlb
push
sub
adc
add
in
popa
popf
and
out
xchg
cmp
in
outsb
push
add
inc
add
cmp
mov
call
inc
pushf
nop
sbb
xchg
adc
xchg
push
and
adc
sbb
orl
movsb
adc
push
xor
bound
lret
dec
cmp
int3
ss
mov
adc
xor
dec
inc
ljmp
sbb
add
push
dec
push
adc
sbb
pop
or
inc
in
jo
push
inc
mov
xor
inc
cmp
push
lods
add
test
mov
dec
mov
or
bound
cmp
jae
jo
dec
mov
mov
cmp
pop
fisubrl
dec
adc
int3
sub
test
adc
and
mov
inc
dec
inc
pop
lret
rcll
push
push
rol
dec
popf
dec
adcb
cmp
jle
mov
jb
xorb
pusha
xchg
stos
hlt
inc
mov
fcmovnbe
adc
rcrb
out
xchg
xor
pop
xor
jl
inc
sahf
fsubs
or
dec
pop
insb
and
fcoms
stos
cwtl
or
mov
sbb
mov
pop
cmp
push
and
push
xor
mov
mov
pop
inc
dec
push
xor
mov
xor
inc
and
orb
and
add
mov
xor
clc
and
xor
inc
cmp
xor
bound
enter
data16
movsb
lock
xor
xor
cld
fs
fdivl
jle
pop
inc
js
or
cwtl
fsubs
sbb
adc
mov
xor
add
xor
bound
and
jbe
push
pop
dec
dec
out
nop
inc
xchg
or
out
add
pushf
xchg
lods
fstpt
jae
enter
mov
in
mov
add
mov
lret
dec
jb
nop
dec
adc
sub
sbb
sub
jp
cmp
add
and
xchg
adcb
push
add
push
add
cwtl
cmp
xor
cmp
add
push
or
add
les
into
fidivl
test
mov
cmp
push
push
or
lcall
mov
sbb
cmp
es
mov
sbb
pop
loop
ss
dec
add
push
rolb
je
xchg
and
push
push
in
mov
xchg
and
sbb
add
adc
xor
push
cmp
lcall
lock
call
mov
int3
dec
and
push
xlat
ret
inc
inc
sub
addr16
cmp
dec
push
in
enter
shl
sbb
adc
pop
fs
ret
lahf
sub
mov
pop
dec
sbb
inc
jne
mov
xor
pop
adc
insb
jmp
push
push
xor
dec
mov
lods
xor
push
jo
sub
pop
shl
bound
inc
xchg
movsb
push
inc
sbb
push
pop
add
cmpsb
add
push
jo
or
pop
mov
mov
mov
lods
pop
mov
xor
shrb
sub
test
sbb
pop
data16
out
mov
movsb
sbb
addb
xor
push
pop
pop
loop
cmp
lods
inc
push
xchg
mov
lret
add
cmp
xchg
mov
sbb
pop
ss
xor
jbe
cs
cltd
add
dec
xor
ljmp
adc
movsb
or
push
push
jl
adc
xchg
nop
sub
xchg
ret
cmpsb
pop
lcall
fs
dec
push
add
pop
shlb
dec
and
testb
fcoms
or
sbb
fs
pop
add
cltd
add
xchg
jo
adc
push
rclb
push
cmpsb
sbb
int3
or
add
cli
addr16
add
cmp
sbb
xor
cmpsb
dec
push
imul
cld
pop
cwtl
shlb
xor
push
and
jo
mov
cli
dec
aaa
sub
pop
repnz
orb
push
push
es
pop
inc
jbe
mov
push
or
push
test
inc
orb
mov
add
sbb
xchg
int3
dec
push
xchg
or
push
adc
rorb
or
in
in
movsb
loope
dec
int3
sbb
popa
out
push
mov
pop
or
ficoms
sbb
and
outsl
sbb
push
loop
push
sbb
inc
mov
lods
add
pop
dec
push
and
ret
push
sub
or
hlt
jb
and
mov
and
inc
pushf
xor
push
jb
push
es
sbb
inc
sub
lock
enter
or
sub
pop
mov
cmpsb
dec
aaa
loopne
or
jb
push
sahf
cmp
rolb
push
ljmp
push
inc
xor
push
lret
sbb
xor
leave
push
nop
andb
push
movsl
inc
inc
inc
xchg
jecxz
pop
mov
in
xchg
mov
push
in
stos
test
jle
xor
dec
dec
xor
xor
jb
mov
mov
cli
aam
xchg
enter
cmp
sub
popf
cmp
xor
inc
add
inc
xchg
loopne
enter
push
and
ror
nop
mov
ss
leave
adc
push
mov
out
xchg
dec
push
or
push
xchg
xchg
icebp
cmp
dec
add
inc
dec
and
pop
outsb
cwtl
push
movsb
adc
add
push
xor
movsb
je
or
push
test
inc
pusha
add
push
adc
mov
shlb
dec
enter
inc
mov
xorb
in
dec
loopne
test
xor
sbbb
cmp
clc
nop
ss
loopne
daa
dec
sub
pusha
inc
aam
push
inc
inc
inc
add
cld
xchg
cltd
mov
push
pushf
enter
hlt
aam
mov
and
xchg
jmp
dec
movsb
cmp
jo
or
dec
or
mov
cmp
ficoms
push
and
stos
push
insb
dec
inc
gs
push
pop
xchg
dec
into
mov
dec
jne
sarb
push
sub
shlb
rorb
push
xor
cs
mov
js
sbb
inc
fmull
push
push
xor
adc
leave
lock
stos
or
xchg
sbb
mov
mov
ss
fs
ss
sub
jp
or
sub
push
test
jp
push
inc
xor
push
push
cs
xadd
push
dec
mov
addl
inc
and
xchg
inc
cli
adc
mov
inc
adc
faddl
dec
push
xchg
cmpsb
outsb
hlt
bound
sbb
cmp
xor
dec
movsb
in
loopne
ret
push
xchg
mov
adc
push
or
stos
add
inc
dec
mov
arpl
inc
or
nop
fwait
xchg
cli
push
jo
xor
cmpsb
or
and
movsb
jp
mov
in
mov
cli
xor
mov
pop
xor
rcrl
jle
insl
lret
and
mov
int
mov
push
xor
js
or
int3
dec
les
push
adc
push
pop
mov
movsb
loopne
mov
nop
ret
dec
das
xchg
push
nop
adc
mov
sub
imul
xchg
adc
fcoms
cmp
repnz
inc
cmp
sbb
dec
pop
sbb
sbb
mov
in
dec
fdivs
xchg
and
dec
mov
lret
test
push
jbe
mov
jb
mov
xchg
pop
pop
cmp
push
pop
daa
push
push
push
js
pop
adc
push
ret
dec
test
aaa
pusha
je
aad
xor
lock
xor
xor
inc
mov
xor
testb
mov
pop
mov
repnz
xor
and
shr
xor
or
push
shlb
push
cwtl
jmp
dec
add
add
aam
insb
xor
or
add
dec
je
xchg
pop
push
xchg
sbb
les
cwtl
push
push
call
push
mov
clc
push
xchg
or
lcall
pop
rolb
jmp
inc
xor
push
sbb
sbb
pop
cmp
lods
stos
test
or
adc
xor
or
inc
ffree
test
outsb
pop
mov
pop
push
inc
xor
inc
fimull
xor
and
push
scas
andb
add
or
and
push
inc
inc
dec
push
pusha
mov
loop
and
in
mov
add
inc
inc
mov
push
dec
mov
inc
shrl
xchg
mov
add
xor
and
push
pusha
andb
in
mov
sub
cmpsl
incb
subb
adc
adc
mov
cli
jle
dec
dec
bound
push
mov
inc
enter
xor
into
cmpsb
movsb
lock
jne
dec
lock
rolb
movsb
mov
into
dec
addb
enter
fs
cmp
repnz
xchg
rclb
bound
add
xor
jbe
dec
sub
push
sub
adc
inc
push
push
mov
cltd
loopne
mov
cmp
mov
or
repnz
cmp
jle
add
xor
dec
loopne
pop
add
mov
lock
test
mov
inc
or
add
jle
inc
cwtl
stos
inc
loopne
repnz
test
or
fs
popf
jbe
jb
addl
test
or
xchg
add
dec
ret
stos
inc
mov
inc
xor
dec
and
xorl
hlt
shlb
inc
faddl
lock
dec
mov
in
or
sub
or
mov
mov
sub
dec
inc
in
mov
das
mov
sub
pop
mov
movsb
push
inc
jo
sub
add
adc
dec
insl
test
xor
dec
and
int3
enter
and
push
push
movsb
pop
cmp
cmp
fimull
mov
inc
cld
lock
ds
dec
push
pop
mov
or
push
inc
push
lret
jle
mov
ds
dec
push
jmp
call
xor
xchg
xor
pop
inc
dec
xor
inc
xor
pop
cmp
orb
xor
inc
push
jle
push
dec
mov
xor
mov
jo
mov
inc
sbb
xchg
loopne
xchg
mov
out
adc
loop
sahf
dec
test
push
cmp
dec
pop
inc
cli
push
dec
or
sbb
push
adc
rclb
mov
pushf
dec
test
push
orb
dec
pop
or
push
call
adc
inc
inc
mov
jo
pop
or
insb
xor
and
mov
mov
fs
pop
cmp
insb
sub
sbb
xor
push
xchg
mov
mov
jb
or
push
data16
mov
mov
xor
cld
mov
mov
push
dec
dec
push
xor
adc
daa
push
cmpsb
clc
push
dec
and
add
cmp
mov
jo
and
jle
inc
sbb
add
mov
dec
sub
xchg
psubusb
mov
and
dec
push
mov
sbb
bound
or
inc
je
adcb
fcompl
cmp
inc
and
insb
cmpsl
fidivs
or
cltd
push
add
loopne
xchg
pop
push
js
push
mov
adc
or
xchg
popa
dec
push
add
xor
lea
mov
cli
push
pop
dec
pusha
popa
sub
adcb
js
mov
add
add
loopne
add
push
das
cmp
aad
dec
inc
cs
push
adc
push
or
pusha
push
inc
mov
xor
pop
add
mov
cmp
or
or
push
push
adc
xor
push
xchg
cmp
mov
stos
push
clc
dec
add
push
lcall
cmp
cmp
aam
es
movsb
in
push
lock
adc
dec
mov
cwtl
or
or
push
xchg
lods
mov
push
push
or
dec
push
adc
pop
jo
or
sbb
dec
dec
adc
cli
adc
mov
xor
xor
add
mov
fisubrs
adc
pop
adc
out
pushf
lea
dec
ficoms
pushf
lcall
xor
out
inc
mov
and
xchg
pushf
mov
cmpsb
jb
cmpsb
outsb
insb
xor
mov
sbb
push
inc
mov
xchg
lcall
push
mov
fiaddl
cs
dec
in
push
xor
add
je
mov
test
jno
xor
inc
lods
loopne
add
cwtl
shrb
sub
add
sub
push
sub
and
add
movsb
push
inc
or
into
mov
pop
movsb
lods
je
in
adc
test
mov
xor
or
shlb
and
lock
sub
divb
jo
push
xchg
inc
inc
and
cmp
push
and
jo
inc
inc
cmpb
and
mov
ljmp
fimuls
add
or
cmp
dec
xor
enter
xor
push
or
jle
xor
inc
push
dec
dec
shl
into
outsb
notb
dec
rcrb
dec
xchg
test
data16
dec
pop
push
mov
inc
sub
xor
push
sub
cmp
mov
push
inc
mov
imul
cmp
popf
lcall
push
push
inc
outsb
dec
in
mov
setl
hlt
enter
mov
sbb
push
dec
sub
es
xor
and
gs
mov
and
aam
sbb
xor
inc
rclb
push
lcall
push
data16
in
ficompl
sbb
adcb
ret
dec
mov
shll
lcall
adc
sub
lods
pop
test
mov
shlb
push
xchg
add
and
adc
or
add
js
aaa
dec
lcall
movsb
xor
test
dec
mov
ljmp
cmpsb
and
test
adcb
loopne
cs
xor
jbe
xchg
sbb
adc
and
push
and
mov
adc
inc
xorb
and
cmp
sub
mov
cmp
sbb
xor
stos
push
add
sbb
test
sub
loopne
dec
or
adc
inc
enterw
xchg
lret
insb
mov
add
in
dec
inc
and
mov
xor
push
pop
shr
ljmp
or
mov
mov
mov
xor
aam
shrb
push
jbe
xor
push
cmp
popf
je
dec
sbb
shlb
adc
xor
mov
and
sbb
and
rclb
push
dec
rolb
hlt
jbe
jo
jo
jo
inc
xor
lcall
inc
pop
push
aaa
xchg
adc
inc
xor
xor
dec
sub
out
xchg
adc
adcl
and
xor
or
push
mov
fmuls
dec
mov
push
cltd
outsb
cmp
mov
dec
inc
js
xchg
xchg
in
add
orb
push
ss
fsubrl
add
adc
push
das
mov
xor
push
cwtl
dec
and
add
jb
mov
inc
repnz
je
push
inc
sarb
gs
push
cltd
sub
cld
inc
roll
data16
sbb
inc
push
mov
cs
faddl
and
es
add
and
test
or
push
xor
push
xor
sbb
cltd
pop
push
adc
and
scas
add
inc
mov
dec
mov
inc
popa
es
inc
cs
adc
andb
sarl
gs
add
aaa
scas
xor
lcall
test
mov
push
dec
fists
add
push
xchg
xchg
int
int3
gs
push
and
and
test
inc
nop
add
sbb
sub
inc
mov
and
int3
int3
sub
ljmp
es
inc
pop
cmp
jb
mov
sbbl
jle
adc
dec
mov
xchg
fsubs
mov
pop
adc
dec
inc
sub
add
rolb
sbb
popa
push
or
clc
jo
scas
rorl
push
mov
pop
mov
push
data16
push
xchg
cli
or
or
loopne
les
pop
inc
adc
inc
adc
add
or
pop
popa
xor
and
dec
mov
enter
gs
and
in
cmp
cmp
push
jno
jl
mov
inc
aad
mov
push
push
mov
pushf
push
adc
push
movsb
sahf
fs
push
push
jbe
lds
xor
popa
nop
lret
jle
jno
and
addb
jbe
add
add
hlt
mov
sub
dec
mov
fdivrs
mov
add
sbb
gs
faddl
stos
inc
les
xor
cmp
xor
xor
dec
cmp
divb
repnz
xor
mov
andl
dec
xchg
adc
xor
or
or
inc
scas
adc
cmp
jl
je
inc
dec
mov
push
push
push
adcb
push
and
hlt
test
cmpsb
cwtl
push
pop
pop
es
in
test
xor
loope
sbbb
aas
inc
jne
aaa
mov
sbb
hlt
push
inc
push
cmp
and
adc
je
push
xor
addl
loop
sub
or
int3
jle
cwtl
jb
xchg
mov
xchg
je
es
push
int3
cmp
mov
mov
ret
pushf
or
sub
nop
xchg
inc
ret
cmp
insl
sbb
jbe
inc
mov
roll
xor
and
xchg
or
push
pusha
dec
mov
add
sub
inc
pop
movsb
sub
adc
rorl
jl
inc
push
fidivrs
sub
fs
sub
or
rcrb
hlt
or
daa
cmp
xor
xchg
adc
test
inc
mov
les
jp
pushf
xor
sbb
xor
rcrl
ficomps
push
add
inc
data16
xchg
lret
stos
hlt
cwtl
mov
sahf
pop
push
add
xchg
lock
xor
add
add
rorb
mov
inc
into
push
jb
cmp
xchg
mov
sub
xchg
dec
pusha
xchg
or
xor
scas
call
adc
mov
pushf
xor
dec
push
fs
dec
inc
rcr
jo
add
pop
movsb
xor
adc
mov
jl
cmp
add
xchg
inc
fcom
push
cmp
add
xchg
cli
sub
xor
dec
pop
xchg
int3
adc
add
jle
inc
push
gs
push
cmp
int3
lea
xor
mov
or
test
inc
mov
dec
sub
jo
subl
push
xchg
adc
in
xchg
dec
push
push
ljmp
sub
mov
inc
dec
call
push
cli
mov
loopne
push
dec
dec
mov
sub
mov
push
ret
icebp
outsb
mov
adc
jbe
push
push
xacquire
xor
cmpsb
xchg
push
sahf
push
data16
push
scas
pop
adc
dec
or
stos
roll
shrb
orl
fstps
cwtl
xor
lds
jbe
pop
ss
aam
inc
inc
nop
or
push
test
ret
shrl
xor
mov
testb
mov
subl
xor
adc
and
cmp
mov
cmp
sub
lock
push
call
ss
push
and
push
push
pusha
xor
adc
push
sbb
push
add
ret
mov
sbbb
mov
sub
cli
clc
movb
pusha
cld
loop
inc
add
adc
push
jmp
cmp
enter
pop
repnz
mov
xor
fcomps
fs
pushf
loop
adc
cwtl
xor
inc
js
sbb
mov
sub
and
push
push
jbe
dec
ljmp
lods
push
test
mov
push
push
shlb
aam
inc
jae
pop
dec
mov
adc
dec
push
push
cmp
jo
mov
and
push
addb
and
aam
aam
sub
add
pop
xor
xchg
dec
nop
sub
and
add
out
xchg
sbb
or
pusha
dec
sahf
fs
xor
test
xor
and
dec
je
fcompl
inc
inc
ficomps
add
inc
data16
rclb
sbbl
mov
sbb
ret
adc
adc
pusha
xor
xchg
jbe
xor
or
xchg
fistl
mov
dec
cwtl
and
sub
sbb
js
push
mov
push
mov
inc
jnp
push
shll
cmp
ret
and
js
inc
movsb
adc
add
pop
sbb
cltd
pop
sub
cmp
fimuls
cmp
add
pop
or
ss
mov
or
fs
xor
inc
push
sub
cmpsb
clc
jne
inc
and
aam
push
mov
xchg
cmp
pop
cmp
add
mov
inc
cltd
idiv
out
mov
inc
cmp
out
adc
roll
cmp
test
movsl
clc
stos
fiadds
mov
mov
push
sbb
xchg
rorb
sub
and
and
push
mov
or
xor
mov
mov
xchg
push
inc
add
add
or
xchg
call
sbb
xor
push
mov
andb
dec
or
push
sub
xor
in
xor
push
dec
or
ds
add
mov
test
loop
pushf
add
xor
sub
insb
and
inc
push
cmpsb
adc
or
cli
xorb
movsl
adc
rol
sbb
js,pt
dec
dec
cmpsb
jo
pushf
mov
pop
inc
in
cld
xchg
mov
and
movsb
xchg
enter
xorb
ss
add
lcall
push
push
movsb
dec
dec
lea
dec
bound
xchg
xchg
cmpsl
mov
sbb
dec
inc
hlt
dec
push
pop
jne
or
fsubrp
inc
lds
bound
sub
dec
cmp
subb
inc
fs
out
push
inc
mov
loopne
jle
sbb
push
dec
inc
add
addb
push
loope
ss
scas
dec
inc
test
push
pusha
inc
cld
xor
push
test
out
push
imul
add
cmpsb
test
dec
shrl
les
push
shlb
mov
lret
fdivl
shl
rcll
cwtl
add
or
xor
data16
inc
inc
loopne
pop
test
inc
fiadds
add
sub
fs
inc
push
lods
fcompl
test
mov
lret
add
stos
aad
fs
sub
add
xchg
popa
ljmp
xchg
ljmp
add
add
lcall
test
hlt
test
dec
and
pop
mov
push
arpl
nop
mov
test
movsl
xor
movsb
xor
dec
add
ss
aaa
movsb
cmpsl
push
jbe
dec
push
add
in
stos
pop
mov
and
dec
push
inc
mov
dec
lods
push
xor
sbb
push
in
icebp
test
dec
sbb
dec
mov
mov
mov
inc
sub
outsb
mov
xchg
mov
xchg
dec
or
and
dec
adc
pushf
in
rorl
push
dec
add
inc
jp
sub
xchg
add
mov
sbb
push
jbe
insb
sub
out
pushw
inc
test
push
in
add
lret
pop
inc
push
or
inc
adc
add
jmp
mov
push
nop
dec
or
cwtl
push
mov
and
inc
ret
mov
dec
sbb
dec
pop
loope
or
les
pushf
push
xor
inc
ss
push
push
test
lds
sahf
xor
add
je
je
push
pop
add
mov
sub
add
dec
ds
lret
rcr
xchg
inc
jl
push
cltd
or
mov
ss
adc
leave
pop
repnz
sahf
dec
mov
pushf
shlb
shlb
jl
jbe
adc
cmp
dec
sbb
mov
lret
shlb
std
data16
mov
push
sbb
dec
and
cmp
cwtl
aam
outsb
stos
mov
add
add
test
cmp
mov
jle
add
xchg
je
in
mov
xchg
xorb
idivb
push
xor
int3
shlb
cmp
or
hlt
mov
dec
mov
inc
jp
test
xor
add
cmpsb
push
scas
pop
js
imul
dec
add
sarb
sub
mov
inc
or
push
ret
pusha
xor
adc
xchg
rcrb
push
inc
movsb
xor
or
and
jp
fmuls
lcall
sbb
adc
xor
xor
and
lods
inc
push
mov
clc
push
push
mov
xor
inc
and
jae
dec
add
ror
mov
flds
ret
sarb
push
xor
dec
outsl
dec
or
xor
es
mov
push
or
add
fadd
sub
sahf
mov
sbb
movsb
loopne
adc
xchg
push
nop
inc
nop
ret
adc
add
push
fimull
sub
ss
lods
mov
pop
pop
bound
cmp
ret
xchg
dec
mov
sbb
enter
jb
adc
jl
push
fwait
xchg
mov
adc
push
dec
ds
cmp
mov
ret
insb
or
or
push
inc
sbb
inc
movsb
push
in
aaa
test
xchg
push
sub
je
add
movsl
and
cmp
aam
add
adcb
sub
gs
shlb
add
pop
jp
dec
in
jle
mov
sub
mov
push
movb
movsb
cmp
outsb
adc
and
imul
fdiv
xchg
cli
xor
push
cmpsl
jp
lock
test
orl
dec
mov
push
adc
or
dec
and
fimull
push
es
sbb
dec
adcb
out
test
inc
xchg
add
out
inc
push
imul
stos
push
add
or
test
mov
pop
inc
xor
add
lret
inc
dec
jo
cltd
leave
nop
pop
pop
xchg
aam
rorb
subl
addb
dec
loopne
inc
mov
push
jp
es
mov
shlb
es
xor
xor
sbb
les
popf
mov
dec
dec
xor
and
push
ret
or
cs
inc
inc
or
mov
push
mov
outsb
push
add
mov
mov
dec
fmull
lcall
and
cmp
fdivrs
push
or
call
xchg
mov
sbb
adc
mov
imul
xor
xchg
cmpb
into
or
test
xor
xchg
and
sub
pusha
dec
cs
loop
push
inc
clc
rolb
inc
cmp
mov
dec
sub
or
or
gs
xor
mov
int3
mov
in
test
and
xchg
nop
dec
fs
dec
popa
xor
dec
inc
in
push
cmp
xchg
cltd
ror
loop
out
pop
andl
or
and
inc
orl
push
xchg
push
push
adc
ficomps
pop
je
aaa
scas
int3
or
xchg
inc
sub
jbe
adc
xor
pushw
and
push
scas
cld
and
test
les
dec
mov
mov
cmp
movb
sbb
mov
inc
push
lock
or
and
push
inc
push
push
push
or
bound
dec
inc
popa
lods
popf
es
inc
inc
inc
ret
pusha
push
dec
call
icebp
push
cld
mov
rcrb
xor
or
jo
insb
push
sub
xchg
xor
push
pop
pop
mov
mov
add
cmp
jp
in
movsb
int3
and
test
test
add
pushf
fimull
test
and
xor
pop
cmpsb
inc
push
mov
sbb
and
push
dec
lret
add
or
adc
inc
ret
shrb
orb
inc
cmp
xor
hlt
or
aam
add
or
mov
push
push
inc
inc
lret
xor
dec
enter
call
and
dec
shrb
push
loop
add
xor
mov
push
push
adc
push
hlt
push
fsubrl
ret
mov
and
lock
enter
ss
pop
push
mov
xor
lcall
fmul
imul
push
inc
push
sahf
xor
mov
or
mov
xchg
xchg
xor
inc
sbb
inc
push
in
push
inc
sbb
aaa
dec
adc
adc
orb
xchg
adc
add
lods
pop
dec
push
mov
sub
sbb
and
sahf
adc
mov
ss
out
mov
hlt
mov
push
or
cmp
dec
or
and
add
imul
inc
fs
push
pop
addb
ficoml
add
push
insb
dec
dec
ljmp
ret
popf
adc
out
mov
pop
insb
inc
adc
rcl
and
ss
add
cmc
dec
cld
xor
dec
push
adc
pop
and
mov
test
sub
sbb
inc
enter
xor
mov
and
out
test
je
mov
pop
es
fiaddl
add
push
out
adc
popa
jb
xchg
dec
pop
add
jae
stos
and
stos
es
outsb
cmp
mov
sub
pop
xor
mov
dec
add
mov
inc
push
inc
orb
enter
sbbb
cmp
inc
xchg
jo
inc
vorps
jp
cltd
sub
fadds
cltd
inc
pusha
xchg
je
sahf
cmp
cltd
add
cmpb
inc
inc
es
dec
dec
sbb
call
or
scas
negb
shlb
cwtl
adc
rolb
xchg
inc
inc
orb
adc
xor
xchg
push
push
pushf
mov
lret
and
xor
dec
gs
adc
test
adc
push
cs
jb
push
inc
add
leave
or
add
mov
aam
push
pop
scas
push
and
test
inc
adc
sbb
aam
jp
sub
lret
orb
sub
adc
mov
xor
dec
push
das
inc
fs
adcb
or
cwtl
inc
test
pushf
push
push
xchg
and
mov
xor
xchg
or
scas
fmul
xor
outsl
inc
fsubl
pop
push
sbb
xchg
push
jb
ds
cmp
inc
mov
xor
call
sub
enter
mov
cmpsb
in
inc
jl
xor
mov
dec
xchg
loopne
sbbl
hlt
in
mov
add
inc
add
les
test
inc
mov
lods
cmp
dec
das
or
jno
orb
ficoms
or
push
add
daa
mov
xchg
cwtl
nop
imulb
inc
xchg
jp
push
jb
nop
push
mov
data16
or
jo
push
and
pop
and
lods
dec
mov
xor
mov
mov
dec
mov
mov
xor
adc
inc
cmp
mov
inc
ret
xor
dec
adc
xor
je
push
sbb
lret
ss
push
mov
mov
and
sbb
sub
add
cs
dec
and
test
fs
or
dec
or
xor
push
xor
or
ficoml
lods
inc
leave
and
xor
add
ljmp
fs
push
lock
int3
ror
rclb
movsb
dec
and
inc
dec
sbb
and
inc
leave
add
mov
shlb
sub
ret
aam
sbb
dec
pop
or
push
bound
push
add
push
out
je
or
add
sbbb
cmp
cs
shll
dec
hlt
push
fcoml
cmp
push
adc
push
or
out
movsb
cs
push
xchg
pop
xchg
dec
mov
mov
dec
push
sub
adc
sahf
bound
mov
pop
stos
add
mov
pusha
mov
sarb
dec
sub
lret
je
pop
lock
add
dec
xor
and
push
notb
cwtl
and
or
es
js
nop
gs
sahf
into
adc
mov
les
xor
fs
pop
movsb
xor
gs
push
out
movb
push
cmp
xor
and
pushf
lcall
xor
or
lods
loopne
pusha
dec
call
add
nop
and
push
push
xor
pop
or
and
adc
mov
pop
loop
hlt
sarb
rolb
add
add
sbb
cmpsl
and
hlt
xchg
xchg
sbb
or
lret
xor
cmpsl
popa
flds
lcall
pop
sub
and
addr16
push
pushf
outsb
sbb
je
inc
adc
orb
and
out
je
mov
notb
or
inc
mov
add
sbb
sub
inc
and
test
pushf
andb
mov
in
hlt
jp
push
loopne
or
stos
pusha
dec
cwtl
nop
adc
jge
frstor
and
rolw
or
or
sub
dec
nop
adc
push
mov
loope
in
es
add
xor
cltd
enter
dec
mov
hlt
push
inc
jp
push
dec
and
push
addl
add
insb
test
outsb
pop
ljmp
les
xor
mov
dec
int3
fdivl
sub
xor
rorl
sbb
inc
lods
and
lret
fdivs
inc
xor
mov
xchg
dec
push
in
faddl
addb
mov
push
xor
add
push
jo
nop
inc
pusha
ret
je
ret
insb
mov
clc
jl
push
pushf
dec
mov
dec
adc
push
cmp
sub
bound
push
lcall
mov
mov
adc
inc
push
pop
jp
gs
ret
lods
orb
xlat
push
shlb
nop
shlb
add
mov
sahf
mov
int3
cmp
push
bound
dec
mov
mov
cltd
jne
dec
cmp
addb
mov
dec
shll
pop
mov
xchg
bound
lods
test
pusha
data16
call
dec
pusha
hlt
adc
stos
or
dec
adc
xorb
push
xor
dec
adc
pop
or
mov
add
push
inc
add
push
hlt
popa
jo
les
pop
mov
inc
and
or
and
ror
dec
mov
add
into
pop
inc
mov
fs
lret
adc
dec
dec
push
ret
push
ret
jb
aam
dec
adc
aam
test
ret
inc
xchg
movsl
daa
mov
inc
mulb
dec
out
cmpsb
mov
dec
add
dec
aam
jl
dec
or
addb
dec
in
inc
sub
xorb
inc
sub
mov
push
test
pusha
test
inc
mov
cld
or
es
or
pop
or
addb
ss
cmp
sub
pushf
int3
push
xor
cli
jl
dec
adc
dec
push
mov
push
or
inc
pop
add
push
xor
cli
fisubrs
insb
dec
lcall
add
push
je
and
xor
pop
add
loopne
add
orl
roll
dec
xchg
sbb
sub
xor
sbb
push
push
cmp
mov
dec
push
test
ss
call
imul
xor
jo
mov
xor
inc
dec
mov
push
pop
mov
inc
sub
pusha
mov
and
or
mov
adc
pop
outsb
dec
loopne,pn
add
or
loop
loop
and
and
cld
dec
mov
inc
loopne
movsb
jb
sub
push
out
daa
cmp
adc
mov
add
sub
push
mov
inc
scas
lock
lret
add
dec
inc
xor
or
fcomp
cld
mov
ds
push
lcall
push
movsl
mov
adc
mov
xor
xchg
test
pop
daa
push
or
sub
hlt
test
xchg
int3
dec
fmull
xor
js
xorb
sbbb
xchg
xor
sub
adcb
mov
push
mov
push
xor
in
sub
lret
cmp
pop
push
sub
xchg
adc
xchg
pop
mov
les
dec
adc
test
jle
dec
sbbb
mov
and
pushf
je
push
inc
cmp
or
push
inc
sbb
adc
pop
cwtl
fcoms
push
into
mov
mov
shlb
push
rcll
movsl
repnz
call
jb
pop
inc
dec
mov
sbb
pop
xor
movb
pop
hlt
faddl
inc
imul
add
insl
jo
lock
js
lods
xchg
sbb
xor
incb
inc
les
cmp
adc
pop
cmp
xor
xchg
adc
adc
or
xchg
push
and
adc
mov
add
aam
pop
adc
mov
sbb
mov
xchg
xor
or
nop
lock
dec
call
test
xor
sub
int3
in
sbb
push
sbb
push
push
adc
aam
xor
dec
lcall
and
sub
and
push
or
cs
cmp
pop
sub
add
push
xor
or
or
add
call
mov
inc
pusha
movb
mov
test
push
cmp
dec
outsb
cltd
sbb
ret
push
movsb
jo
push
jo
xorb
dec
dec
cmpsb
push
inc
sub
pop
rorb
mov
dec
xor
mov
in
sub
push
aaa
and
insb
mov
adc
sbb
cltd
repnz
pop
xchg
xor
xchg
mov
add
or
inc
mov
mov
jb
or
fcoml
mov
mov
sbbb
and
push
sub
add
loop
xchg
roll
or
call
dec
mov
stos
adc
aam
or
in
push
cwtl
cmp
dec
jbe
xor
cmp
outsb
rolb
cli
xchg
sbb
test
sbb
lret
pushf
cmp
sub
and
cwtl
or
push
or
push
or
xorb
inc
push
out
sbb
les
pop
and
cltd
or
jo
out
push
jno
sbb
pushf
enter
inc
push
pusha
loop
add
or
xor
jb
movsb
test
fs
and
pop
mov
shlb
xor
sub
lods
mov
adc
push
inc
xchg
push
mov
mov
push
or
push
xor
stos
add
adc
add
sbb
add
xor
xor
adcb
push
sbb
dec
shrb
sbb
shr
enter
inc
sub
cwtl
xor
xor
js
inc
shl
inc
xchg
outsb
lret
cmc
xor
pop
push
test
push
ret
ss
test
bound
push
pop
mov
add
jp
inc
pop
push
adc
lods
stos
mov
push
pop
cmp
mov
je
mov
mov
xor
push
push
out
sub
mov
addl
sub
push
sarb
xchg
or
xor
push
rolb
aam
test
inc
pushf
xchg
mov
dec
pusha
ljmp
jle
xchg
adc
sub
pop
xor
xor
adc
push
push
adc
pop
push
xor
xor
adc
dec
jb
in
sbbl
sbb
dec
cwtl
adc
bound
add
inc
testb
cmpb
add
push
cmp
pop
and
leave
and
xor
push
xor
push
inc
jbe
movsb
add
pusha
push
bound
push
push
or
enter
add
xchg
and
adc
sub
or
movsb
rclb
aad
test
jle
push
popa
sbb
push
cs
inc
orl
or
xchg
pop
movsb
dec
enter
and
addl
jl
pop
rolb
sbb
dec
inc
cmp
push
dec
loope
dec
mov
adc
adc
pop
push
cs
xor
push
fmull
xchg
adcl
adc
inc
inc
shlb
push
fwait
jp
pop
cmp
cmp
test
sub
and
mov
sbb
add
mov
aam
xchg
mov
cs
xchg
xchg
nop
add
cmp
mov
aam
cwtl
test
jb
test
xchg
mov
sub
xchg
rcrl
dec
push
mov
dec
or
mov
sub
mov
xor
push
imul
and
inc
push
and
mov
test
hlt
ss
or
dec
test
sahf
xchg
in
mov
sbb
mov
out
pop
mov
and
ret
scas
mov
enter
sbb
pop
mov
gs
xor
shl
inc
sub
test
sub
sahf
cmp
add
ret
inc
inc
ret
cmp
xor
dec
mov
and
push
inc
jb
and
aaa
mov
push
ret
sub
rolb
sbb
adc
add
xchg
adc
scas
sbb
add
mov
dec
sub
mov
xchg
xor
aad
or
xor
add
lret
sub
mov
pop
les
adc
adcl
pop
sbb
test
subb
inc
jo
enter
add
inc
test
add
subb
icebp
sub
or
dec
insl
dec
mov
int
dec
sub
pop
mov
fs
inc
and
loopne
ret
dec
jb
sbb
dec
push
js
sub
pop
jl
dec
push
dec
popa
test
outsb
cmp
sahf
pop
add
rolb
jo
push
xchg
popa
decb
loopne
add
pop
add
dec
mov
add
xor
push
mov
movsl
push
sbb
pusha
cmp
jb
cmpsb
xchg
inc
rolb
add
xor
ss
sub
dec
popa
stos
lcall
push
add
lret
inc
add
jo
sub
cmp
cmp
dec
mov
dec
sub
clc
xor
push
adc
pop
adc
cwtl
dec
fsub
gs
ret
ds
xchg
inc
fs
push
pushf
xchg
rclb
and
adc
aam
add
cmp
add
adcl
mov
into
dec
and
push
sub
fisubrs
push
or
adc
dec
je
sub
dec
clc
lcall
adc
cs
dec
gs
push
push
ja
dec
outsb
dec
xor
fs
test
add
jp
mov
and
mov
mov
lcall
dec
adcb
pusha
dec
insb
test
rclb
xor
test
adc
mov
sahf
mov
fs
xor
xor
aaa
aaa
xchg
test
insb
add
dec
mov
nop
push
insb
cmp
mov
mov
rcrl
push
adcb
popa
adc
inc
shrl
push
andl
xchg
push
rclb
or
fldt
add
or
inc
out
adc
sub
nop
ret
ljmp
test
dec
pusha
pop
xor
push
in
push
test
adc
xor
xchg
push
pop
jle
test
push
push
sbb
mov
in
push
mov
mov
aaa
push
mov
push
add
dec
inc
xor
cmpsl
dec
push
inc
in
fisubs
push
inc
ljmp
or
outsb
and
flds
mov
and
xchg
xor
sub
add
xchg
inc
cltd
fdivl
sub
fiadds
inc
loopne
cmp
addl
xor
int3
sbb
jl
jmp
bound
pusha
adc
sbb
dec
pop
mov
shll
add
mov
adc
push
fimull
mov
xchg
add
cmp
lock
fs
pop
xchg
fs
movsb
movsb
movsb
insb
mov
xchg
js
es
add
mov
and
pushf
add
nop
and
push
mov
xor
push
adc
or
and
cli
push
fstpl
sbb
inc
or
sbb
pop
rorb
mov
ds
out
sbb
adc
inc
hlt
ss
inc
mov
test
test
cmp
adc
pusha
cs
adc
movsl
dec
pop
repnz
push
sub
or
xor
push
dec
or
xor
sub
push
enter
sub
adc
mov
adc
in
out
pop
xchg
scas
add
dec
push
test
push
or
push
mov
lods
popa
jo
push
push
and
cmp
jp
cmp
pushf
or
add
mov
mov
push
lods
mov
ljmp
movsl
add
jg
stos
add
add
and
cld
mov
add
sbb
push
and
xor
xchg
adc
fidivs
jmp
mov
nop
loopne
dec
push
inc
test
xorb
movsb
ss
mov
mov
pusha
push
mov
cmpsb
xchg
mov
cmp
int3
gs
sub
shll
xor
push
mov
dec
aam
pop
lcall
sbb
mov
lods
cmpsb
aam
dec
dec
out
xor
pusha
repnz
cmpsb
nop
push
insb
shrl
add
data16
cmp
testb
int3
xor
gs
mov
xchg
mov
popf
lods
dec
push
loope
in
inc
add
pop
xchg
pusha
push
push
lock
fistl
outsl
enter
push
into
lcall
push
xor
andb
xor
dec
enter
cmp
mov
add
adc
inc
je
bound
aam
pop
pop
push
and
inc
into
xchg
dec
in
cli
jl
push
fwait
shlb
dec
xor
push
shr
les
adc
movsl
xchg
pop
sub
dec
add
push
push
je
add
pusha
push
xor
lret
mov
xor
or
sbb
xor
dec
cwtl
gs
add
push
sub
jl
shrb
mov
dec
inc
add
sbb
scas
test
loop
push
leave
add
xchg
cld
and
dec
dec
mov
and
fs
push
push
cmp
in
sub
jmp
into
push
push
stos
cltd
pop
adc
add
xchg
sub
sub
xor
dec
mov
inc
sub
fmulp
dec
push
inc
mov
dec
test
push
and
or
bound
or
fadds
push
and
in
add
inc
cwtl
addb
push
ss
ss
push
and
or
adc
pop
out
ds
test
sub
xor
xor
dec
xor
push
cmpsl
dec
insb
inc
mov
push
mov
cmp
dec
xor
clc
movsb
fs
clc
push
lock
nop
jb
fs
xchg
fcoml
xor
add
sahf
mov
mov
leave
hlt
addb
stos
aam
test
shlb
xor
mov
inc
push
sahf
mov
or
or
jo
es
and
je
scas
rorb
arpl
push
xchg
sbb
ss
icebp
shrl
fmuls
push
mov
add
mov
stos
push
mov
or
add
mov
cmpb
sbb
add
or
loopne
or
mov
out
dec
xchg
adc
call
push
add
fs
jne
or
aad
cli
in
push
clc
xor
sub
mov
les
movsb
add
jp
out
xchg
mov
push
adc
push
push
inc
loopne
mov
mov
adc
cmp
jo
inc
mulb
push
ss
scas
cs
pusha
mov
add
sub
add
test
push
sub
sbb
pop
or
test
movsb
cmp
dec
mov
sarb
push
add
into
leave
mov
push
nop
es
test
into
add
push
add
sbb
mov
xchg
test
push
push
adc
push
or
jb
mov
dec
dec
lock
inc
sub
addb
fcom
dec
mov
cmpsb
test
or
out
dec
pop
inc
daa
jecxz
jb
push
jae
or
add
rorl
xchg
lods
xor
or
popa
cmpsb
inc
push
stos
or
jb
cmp
dec
push
dec
push
dec
pusha
add
dec
xor
sbb
pusha
push
sub
or
push
inc
or
lret
and
inc
adc
xchg
mov
inc
aaa
fsubl
xchg
adc
lret
dec
or
xchg
adc
jbe
inc
push
sbb
rorl
into
in
cwtl
add
dec
fadds
or
pop
inc
push
inc
pushf
je
dec
sbb
inc
aaa
mov
dec
xchg
imul
lock
xchg
popa
dec
dec
dec
cld
in
nop
lods
loop
sub
movsb
xchg
cmp
inc
cli
xor
adc
addb
pusha
xchg
cmc
mov
xchg
adc
and
ret
mov
add
insl
cltd
push
js
push
test
and
jne
mov
mov
xchg
push
loopne
or
jle
into
push
cmp
inc
faddl
lret
add
inc
xor
idivb
outsb
push
sbb
jbe
dec
test
movsb
sub
add
cmp
mov
push
xchg
aam
gs
sub
nop
lcall
clc
dec
cmp
or
inc
pusha
mov
lods
push
in
adc
push
add
fdivl
insb
xor
cwtl
insb
movsb
sbb
adc
ret
test
xchg
xor
sub
pop
mov
dec
cli
push
loopne
mov
xchg
dec
sbb
mov
and
dec
add
ss
sub
dec
dec
dec
clc
xor
pushf
adc
push
cmp
mov
in
inc
sub
dec
sub
inc
add
js
dec
gs
test
mov
inc
push
add
sub
movsb
xorb
icebp
ficoms
loopne
test
faddl
adc
movsb
inc
ds
ss
sub
inc
sub
sub
test
xor
or
xor
loop
xor
les
pop
stos
cmpsb
dec
sbb
add
jbe
data16
xor
movsl
lock
pop
xchg
dec
push
sub
jp
test
mov
in
add
mov
inc
or
push
push
roll
jle
loop
xor
mov
adc
mov
adc
or
nop
dec
push
cld
sbb
push
xor
dec
cmpl
sbb
mov
jo
pop
dec
mov
push
adc
jb
push
in
add
mov
or
mov
test
cltd
dec
sub
cmp
xchg
add
push
dec
pop
jb
and
in
adc
sbb
fsubr
orb
dec
dec
pop
mov
fadd
sub
cmp
xor
xchg
xchg
xor
mov
push
cmpsb
je
xor
ds
dec
mov
test
sbb
xchg
inc
call
dec
push
lods
push
cmp
xchg
or
adcb
push
or
jb
arpl
pop
mov
popa
xchg
pusha
push
dec
pop
and
in
push
push
inc
test
adc
push
inc
gs
fcoml
push
pop
sarb
push
mov
and
push
push
inc
insb
test
test
mov
xor
sub
aaa
inc
fcoms
mov
jae
adc
sbb
insb
add
data16
mov
xchg
cltd
add
pop
ret
push
push
cli
xor
push
je
jbe
sbb
sub
jp
mov
dec
aaa
clc
insb
xchg
movsb
push
xchg
sbb
dec
mov
xchg
in
add
xchg
cltd
jbe
inc
pop
mov
adc
add
dec
or
add
jl
jne
orl
mov
repnz
ds
push
sub
adcb
cmpsb
lret
jb
movsl
shl
int3
test
xchg
nop
rclb
lcall
add
hlt
gs
pop
dec
push
test
test
xor
inc
inc
xor
inc
mov
dec
cs
xchg
call
nop
and
jge
fs
repnz
pusha
pop
fcoml
pop
push
loop
or
ss
lret
insl
clc
enter
and
and
addb
repnz
clc
or
push
add
mov
dec
sbb
push
inc
or
stos
adc
mov
scas
xor
rorl
pop
movsb
sbb
jb
enter
pusha
and
out
inc
push
inc
repnz
adc
andl
or
xchg
dec
mov
pop
mov
das
xor
lock
sub
xor
cs
adc
ret
xchg
shrb
rclb
fs
adc
inc
cmp
fcompl
pop
jb
notb
insb
push
and
mov
dec
aaa
push
dec
xchg
cmp
lret
call
inc
adcb
js
dec
popa
data16
enter
pop
and
lret
sub
pop
sahf
push
xor
test
adc
fsubrl
leave
add
mov
addr16
rcr
xchg
addb
or
mov
cs
push
add
pop
mov
inc
push
sbb
stos
jmp
ss
and
xchg
call
or
leave
sahf
cmp
dec
dec
mov
push
movsb
or
mov
push
or
cltd
dec
adc
inc
push
jae
inc
and
sbb
hlt
cmpb
xorb
negb
dec
outsb
inc
xor
inc
mov
add
mov
sub
inc
test
stos
xor
cmp
loope
sub
cmp
adc
testb
lret
inc
cmp
sbb
cmp
dec
or
test
dec
mov
or
push
inc
and
enter
adc
add
sbb
mov
pop
add
push
dec
stos
cwtl
pop
jo
xor
and
mov
enter
jae
jbe
movsb
xchg
dec
push
push
dec
push
cwtl
and
rolb
push
dec
nop
push
adc
ret
cmp
dec
adc
sub
les
mov
xor
mov
rclb
adc
push
shlb
jbe
and
sub
pop
dec
or
inc
imul
lods
pushf
adc
dec
popa
and
mov
mov
je
mov
addl
dec
movsl
addb
jb
stos
mov
jb
sub
imul
xchg
ret
mov
sbbb
inc
xor
push
dec
mov
add
lods
push
pop
ljmp
sub
xor
push
rolb
pushf
jle
xchg
sbb
inc
or
add
or
mov
xchg
in
orb
adc
xor
insl
or
xor
aam
push
or
insl
test
mov
sub
inc
loop
push
inc
xchg
adc
je
cmp
sub
add
push
dec
push
cwtl
in
dec
or
jo
push
sbb
xchg
sub
nop
sbb
sbb
roll
push
cld
call
adc
bound
subb
or
mov
sub
xorl
xchg
xchg
sbbb
xor
or
adc
scas
cltd
mov
push
sbb
dec
stos
inc
popa
cwtl
adc
insb
and
sbb
je
hlt
push
dec
push
add
and
sbbl
xchg
or
or
and
add
mov
cmp
inc
inc
xor
rolb
xor
sbb
sbb
pop
add
test
mov
es
ret
sbb
sbb
add
aad
adc
push
xchg
movsb
sbb
sbbb
mov
add
or
mov
push
addb
adc
adcb
inc
lcall
mov
subb
fidivrl
shlb
dec
push
cwtl
and
je
insb
mov
xchg
ret
cli
xlat
lret
xor
ds
rorb
loop
inc
and
push
adc
jp
or
mov
xor
dec
fs
fadds
stos
shl
lock
inc
add
pushf
mov
or
les
inc
mov
fcomps
mov
push
test
add
adc
cmp
or
add
test
push
jp
cmp
sbb
outsb
movsb
mov
sahf
insb
inc
sub
inc
lock
adc
negb
fs
mov
xor
neg
pop
adc
add
inc
or
xchg
push
cli
test
add
mov
push
push
js
sub
mov
sbb
cld
mov
sbbb
cli
sbb
cmp
dec
clc
outsb
push
pop
out
add
loop,pt
aad
lods
inc
ljmp
ljmp
mov
sbb
pop
cmpb
jp
jp
mov
adc
xor
push
add
dec
ss
or
andl
inc
sbbb
adc
mov
push
push
test
inc
push
add
pop
inc
push
or
mov
push
pop
call
inc
mov
push
and
ss
sub
dec
sahf
push
sbb
fld
and
dec
scas
push
or
dec
mov
push
adc
sub
inc
xchg
aam
and
orb
add
xor
inc
fimull
inc
cltd
pop
adc
push
fdivs
dec
jbe
dec
scas
cs
cmp
cld
cs
cmp
sbb
subl
or
scas
push
dec
inc
rclb
inc
cmp
in
xchg
mov
jo
dec
inc
inc
shrb
dec
jo
xor
sub
and
js
and
pop
xchg
dec
add
loope
lock
mov
add
loopne
xchg
push
pop
lock
adc
cmp
in
nop
pop
push
pop
push
xor
adc
ret
mov
add
xchg
insb
into
inc
addb
xchg
test
cmp
rclb
inc
roll
addr16
jo
ret
inc
loopne
sbb
test
push
pop
push
ret
cltd
adc
test
push
push
push
sub
repnz
sub
or
nop
xor
faddl
jae
mov
gs
adc
andb
inc
dec
mov
mov
and
add
sub
push
cmp
cmpb
xchg
or
inc
shr
sbb
xor
add
push
cmp
inc
xor
add
arpl
pushf
stos
jp
out
enter
xorb
movsl
test
dec
shlb
adc
inc
sub
push
enter
enter
adc
je,pn
push
and
and
mov
loop
bound
push
xchg
or
xor
push
cmp
mov
pop
push
fldcw
mov
fcoml
cmpsl
push
in
dec
push
lcall
and
and
push
sbb
ljmp
adc
dec
insb
pop
outsb
dec
out
sbb
push
fnstenv
sahf
dec
xchg
add
add
popa
out
sbb
loopne
or
and
and
loope
xchg
push
aaa
js
movsb
push
fadds
mov
cs
push
xor
inc
xor
ds
dec
push
push
sbb
cmp
push
push
adc
add
test
dec
pop
mov
cmpsb
out
aaa
xchg
incb
ljmp
push
andl
int3
push
data16
push
fwait
dec
add
clc
pop
push
jbe
inc
loope
mov
add
stos
push
push
dec
inc
or
ds
data16
push
ljmp
push
xor
ret
pusha
or
add
adc
clc
mov
or
scas
pushf
les
add
and
dec
sub
adc
fwait
xor
inc
lret
sahf
bound
loop
lret
pop
test
fildl
cmp
add
mov
adc
ljmp
cmp
sahf
push
sub
jbe
inc
inc
sub
and
sbbb
js
xor
xchg
or
pop
shl
add
pop
add
inc
addl
dec
jb
push
insl
lea
les
or
add
mov
xor
mov
pushf
pop
sbb
push
es
push
add
ljmp
cmp
sub
mov
mov
sub
cwtl
loope
idivb
cmp
in
cmp
test
dec
pushf
mov
mov
mov
xchg
add
mov
fwait
or
inc
or
sbb
loop
mov
xor
ret
sbb
inc
fiaddl
inc
into
and
mov
out
mov
push
dec
stos
xor
mov
add
rorb
movb
cmp
pop
dec
xor
shl
sbb
gs
add
cmp
and
sahf
xor
or
xor
sub
fsubl
pusha
test
or
sbb
xor
pusha
bound
or
mov
add
dec
push
dec
sbb
pop
test
call
adc
jbe
add
dec
mov
xchg
inc
cmovb
mov
or
pop
int3
pop
inc
call
and
dec
push
inc
cmpsb
js
add
cmpsb
xor
or
test
dec
pop
inc
push
add
aad
or
mov
hlt
xor
adc
push
or
mov
lods
pusha
and
push
mov
out
or
jo
ret
out
mov
adc
xchg
adc
enter
enter
adc
fdivl
test
cmpsl
fimull
xchg
push
mov
lret
jbe
mov
push
cmp
in
mov
add
push
mov
fs
push
test
jo
pusha
subb
adc
nop
dec
mov
sbb
inc
test
or
adc
sub
cmpsl
and
ljmp
ret
call
rclb
aaa
mov
mov
sub
pop
data16
outsb
hlt
push
test
xor
push
ljmp
push
sbb
push
inc
nop
pop
addb
push
or
testb
orb
js
adc
mov
dec
andl
dec
sbb
dec
and
movsb
pop
xor
cmp
xchg
push
cltd
data16
sub
add
pusha
or
pop
mov
and
push
push
dec
stos
pop
sub
lea
xchg
inc
shlb
adc
pop
mov
movsl
sub
sbb
lods
dec
xchg
lret
xchg
inc
jo
or
pop
mov
shlb
push
stos
xchg
and
out
fcmovbe
sbb
adc
push
or
ret
inc
cmp
lcall
add
ret
push
lcall
inc
pusha
pop
mov
xchg
add
mov
dec
inc
push
inc
add
and
out
sbb
xor
gs
push
pop
sub
add
inc
in
addl
fcoms
and
pusha
andl
xchg
push
adc
pusha
aam
dec
jle
xor
mov
cmpsl
dec
out
sub
mov
sahf
or
add
push
jmp
lds
cmp
dec
or
jo
push
push
pusha
mov
gs
cmp
push
hlt
andb
mov
push
pop
cmpsb
inc
push
stos
sbb
ds
xchg
or
adc
or
mov
xor
loope
push
out
inc
adc
adc
sbb
or
or
repnz
mov
in
dec
mov
cmp
out
add
cmp
xor
push
adc
sbb
inc
xor
shrb
pop
xor
xchg
inc
push
push
mov
aam
add
mov
pushw
movsb
or
lods
shll
loope
xchg
adc
mov
popa
or
mov
sbb
push
cmp
imul
mov
or
push
clc
ret
ror
adcb
test
and
inc
xchg
movsb
enter
and
or
loop
fs
xchg
in
inc
dec
cwtl
or
push
nop
dec
dec
push
call
push
ret
aam
inc
cltd
cltd
clc
cmp
ficomps
jo
push
jb,pn
xchg
fcoml
test
ds
mov
inc
push
outsb
sbb
ret
pop
pushf
inc
dec
cltd
sub
scas
sub
push
subb
mov
xchg
les
jbe
add
ljmp
fiadds
lods
push
inc
loopne
cmp
hlt
js
sub
xor
push
inc
jo
adc
sarb
or
dec
jle
call
or
inc
sub
push
xor
push
xor
xor
xor
cmp
cmp
fadd
dec
mov
int3
test
xchg
bound
inc
andb
and
add
stos
adc
xor
add
or
ss
call
mov
push
ficompl
cltd
inc
repnz
dec
and
or
outsb
bound
inc
loop
sub
cltd
cld
cld
push
ss
xor
dec
lods
push
imul
cmp
jb
pop
nop
imul
and
pop
sbb
dec
dec
mov
cwtl
sub
fdivl
lods
pop
sbbl
repnz
dec
pop
adc
push
fimull
ss
call
dec
aam
xor
sarb
mov
sub
adcb
leave
popa
xchg
ljmp
mov
pop
nop
inc
loope
xchg
push
or
mov
les
push
lret
adc
cmp
shll
cmp
out
dec
cmp
inc
dec
les
sub
ss
push
mov
gs
call
out
pop
out
mov
jo
loop
jo
daa
mov
ds
jb
sbb
dec
movsb
adc
push
scas
sub
dec
dec
mov
gs
lret
xor
and
jo
lea
lods
insb
cltd
adc
sub
pop
xchg
mov
mov
adc
dec
inc
incb
mov
push
insb
xor
sbb
push
add
add
dec
aam
mov
push
xchg
pop
dec
adc
or
pop
mov
movsb
fimuls
add
cmp
mov
dec
lea
mov
dec
cltd
repnz
sbb
inc
inc
inc
imul
sbb
sbb
inc
dec
lahf
add
inc
test
push
or
adc
adc
xor
or
or
jo
dec
add
les
test
loopne
inc
orb
mov
sbb
lods
inc
je
xor
mov
add
movsb
xchg
inc
mov
lret
ret
or
add
shlb
xchg
shlb
add
adc
in
int3
push
sbb
outsb
test
sbb
nop
pusha
lcall
push
outsb
push
cmp
cmpsl
gs
mov
dec
jecxz
sub
rcll
lret
sub
jb
add
pop
or
xor
idivb
dec
in
mov
in
movsb
pop
cmp
mov
shl
xor
xchg
mov
out
dec
ret
xor
xor
xchg
push
test
clc
mov
xor
jb
popf
add
call
in
dec
shlb
push
mov
lcall
pop
data16
fs
xchg
movb
insb
loopne
repnz
mov
mov
push
pushf
inc
pop
adc
push
dec
mov
pop
xor
gs
and
sbb
inc
outsb
push
xchg
jb
xchg
or
rolb
fsubrs
push
adc
push
adc
push
xor
daa
addl
sbb
pop
xor
xor
aam
or
lcall
repnz
xor
sub
and
imul
cmp
push
rorb
loopne
mov
dec
xchg
dec
dec
cmp
pop
cli
cltd
jb
movsb
jo
jb
sbb
sbbb
mov
aam
dec
int3
sbb
dec
dec
enter
stos
dec
inc
sahf
push
stos
cmp
loop
div
imul
subl
les
fdivr
add
ret
dec
pop
jp
and
dec
add
add
adc
loopne
xor
cli
dec
loope
xchg
pop
sahf
xchg
adc
inc
int3
out
inc
add
test
sub
xchg
add
popa
add
rcl
or
adc
dec
pop
or
inc
xor
ds
loop
pusha
outsb
pop
or
test
xor
inc
rcrb
inc
enter
loopne
cwtl
jecxz
add
call
adc
dec
pusha
adc
repnz
mov
and
cmp
sub
in
in
fimull
test
xor
jp
inc
add
adc
sbb
push
shlb
inc
and
lret
push
test
out
insb
or
mov
aaa
push
int3
xor
cmp
and
cli
dec
push
lret
sub
adc
aam
xchg
pushf
pop
cmp
dec
lret
inc
sub
mov
sbb
lcall
mov
pop
xchg
js
or
or
or
movsb
dec
out
push
cs
mov
sbb
jo
xor
sbb
cmp
add
cmpsb
xchg
push
and
sbb
aam
xchg
dec
inc
push
xor
xor
dec
ret
push
hlt
sahf
xor
pusha
xor
movb
aaa
sbb
push
fcoms
add
xchg
sbb
aad
dec
push
inc
fdivl
jbe
inc
inc
ljmp
inc
xor
adc
inc
mov
mov
push
xor
and
adc
cwtl
ljmp
push
inc
pusha
add
and
push
shrl
inc
lret
push
push
adc
inc
mov
mov
push
xchg
xor
dec
pusha
xor
dec
rclb
pop
push
and
ss
inc
sbb
pop
inc
hlt
or
js
add
add
xchg
xchg
add
xchg
sbb
jbe
push
add
pop
xchg
out
loopne
push
add
push
lock
add
push
push
push
loop
dec
add
or
xor
sub
mov
add
stos
add
sub
or
pop
add
imul
shrb
push
jp
mov
xchg
sbb
jp
pop
inc
dec
icebp
mov
xchg
pop
jo
push
lcall
dec
push
xor
dec
jo
inc
and
pop
lret
divb
clc
test
jb
fiaddl
pop
add
popa
es
ljmp
cmp
add
setae
jp
push
push
or
test
pop
sub
dec
int3
test
adc
xor
outsb
mov
xor
mov
fs
call
pushf
cli
andl
movsl
wrmsr
dec
push
or
cmp
dec
inc
mov
add
adc
add
mov
or
mov
loop
dec
outsb
add
clc
lods
ljmp
jle
or
pop
xchg
mov
ret
jl
js
inc
and
xor
aaa
lods
dec
push
cs
cwtl
pop
push
outsw
or
call
sub
adcl
dec
sub
inc
mov
stos
sub
cwtl
mov
and
adc
mov
bound
fs
inc
sbb
sub
add
or
lods
or
push
data16
xor
add
cmpsb
push
and
dec
push
call
and
fsts
inc
stos
push
push
push
xor
sub
sub
in
ret
mov
and
inc
cwtl
inc
adc
popa
xchg
jle
cli
dec
sbb
xchg
pop
push
in
inc
or
sub
je
fsubr
dec
int3
inc
add
dec
addb
add
xorb
imul
push
cmp
popa
push
jmp
jne
sub
js
pop
cmp
push
sub
inc
sub
mov
or
in
xchg
ret
add
add
mov
adc
mov
in
lock
mov
sub
sub
xchg
xchg
rcl
sub
jp
push
loop
push
sbb
repnz
loop
jb
push
faddl
or
mov
push
cmp
push
or
adc
xor
xor
add
cmpsl
add
push
dec
sbbb
pusha
mov
mov
adc
mov
hlt
push
inc
je
dec
outsb
sub
xchg
adc
and
add
rorb
mov
pop
mov
cmp
add
xchg
sbb
push
cmp
clc
lods
cmpsb
adc
fidivrl
pushf
sbb
adc
jp
mov
sbb
mov
or
dec
inc
cmp
cld
adc
lret
dec
out
cwtl
dec
xchg
push
or
inc
nop
xchg
stos
clc
inc
sarb
mov
inc
sub
cld
or
push
pop
push
ds
sbb
jo
adc
loopne
and
pusha
orb
and
mov
add
sbb
add
aam
adc
fidivl
rcrb
xor
lret
inc
sbb
ret
add
ljmp
sarb
push
inc
sbb
and
scas
xor
int3
pop
jle
xor
dec
adc
cs
cmp
and
pushf
mov
xorb
inc
push
cltd
sbb
mov
xchg
dec
and
mov
test
xor
dec
or
push
xor
mov
push
sbb
xor
mov
test
lods
cltd
call
ljmp
rolb
dec
mov
lock
test
mov
pop
mov
sub
stos
pushf
xor
ret
pop
loopne
add
rorl
add
mov
dec
push
cmpsb
sbb
mov
or
mov
push
sbb
lods
jbe
lods
dec
inc
adc
pusha
and
pop
lret
adc
outsb
inc
xchg
inc
lods
or
in
inc
add
and
add
dec
xor
mov
pop
dec
or
cmp
push
data16
push
add
mov
loope
repnz
xor
pop
push
dec
push
adc
inc
dec
in
data16
out
arpl
sbb
cmp
inc
add
int3
lods
inc
inc
sub
mov
incb
gs
int3
mov
rolb
dec
xor
fdivl
loop
testb
mov
outsb
push
cmp
push
rorb
pop
push
mov
xchg
mov
mov
inc
cmp
xchg
sub
xor
call
add
or
mov
adc
pop
es
mov
ret
ljmp
enter
mov
inc
push
test
dec
inc
mov
lret
test
stos
xchg
sbb
pop
push
jb
ficoms
inc
in
mov
xor
pusha
rolb
push
repnz
sub
dec
adcb
sarb
dec
pop
inc
call
mov
or
cld
dec
cmp
jo
addb
fimuls
sbb
push
push
pop
cmp
inc
dec
inc
push
sub
pop
pop
mov
mov
enter
rclb
es
add
fcompl
jp
ss
inc
add
mov
enter
and
add
push
das
xchg
add
and
adc
add
sahf
sub
andb
push
mov
add
mov
pop
ljmp
inc
push
mov
aaa
movsl
push
cmp
mov
inc
push
push
dec
adc
add
mov
lods
xor
lock
xor
xor
push
mov
fsubrl
and
push
inc
mov
xor
add
dec
stos
add
add
jmp
inc
push
dec
push
ss
inc
sahf
dec
xor
or
lret
or
sub
or
insb
es
xor
pop
mov
xchg
jo
stos
enter
and
cs
pushw
cwtl
xor
inc
inc
push
inc
inc
mov
sbb
dec
push
insl
cld
out
xchg
xchg
pop
enter
nop
add
in
es
out
push
gs
loopne
sti
mov
push
push
int3
or
xchg
mov
pushf
call
ficompl
test
rcrb
in
jecxz
or
lcall
jb
mov
and
inc
push
ret
push
dec
sub
fs
dec
mov
mov
push
popf
push
push
fdivrl
clc
into
ret
rol
addb
or
push
push
jecxz
mov
dec
adc
add
fcomps
add
and
jae
inc
and
mov
add
add
add
in
or
fimuls
push
xchg
aaa
inc
mov
clc
mov
bound
out
and
mov
cld
or
pop
cmp
dec
shll
push
push
add
and
mov
sahf
and
or
and
test
incb
aam
int3
mov
pusha
or
dec
adc
adc
in
push
shlb
dec
mov
push
in
in
xor
pop
add
xor
push
add
push
mov
cmp
out
dec
xchg
mov
push
fadd
push
sahf
add
dec
sub
inc
pop
movsb
push
push
inc
or
cmpl
xor
add
or
or
test
pop
fwait
orb
lcall
xor
pop
in
fiaddl
lock
or
xchg
test
push
adc
jbe
add
inc
nop
sub
sub
js
jmp
pusha
sahf
incb
adc
push
bound
or
push
or
cltd
fistpl
inc
and
dec
movsl
pop
cmpsb
dec
clc
into
dec
push
fisubrl
cmp
adc
sub
popa
and
or
dec
sbb
xor
dec
es
cmp
dec
push
dec
and
ss
cmpsb
push
xor
xchg
mov
xchg
sbbl
dec
jo
jp
cs
push
or
dec
and
lcall
call
mov
enter
push
out
push
outsb
pop
outsl
enter
inc
adc
adc
movsb
and
shrb
add
add
sbb
mov
shrb
sub
or
xor
sbbl
adc
imul
hlt
and
orl
jb
and
shlb
or
push
test
add
aam
add
in
and
jl
xchg
popa
test
jb
push
in
xchg
adcb
push
cmpsb
push
push
or
cltd
mov
push
imulb
lods
dec
mov
xor
or
mov
addb
xor
mov
push
inc
dec
js
xor
inc
dec
popa
push
or
lods
xchg
push
es
add
push
adc
xchg
mov
or
ret
pop
cmp
je
inc
mov
xor
adc
sbb
js
pop
inc
inc
sbb
ror
dec
dec
or
xchg
fwait
sbb
test
testb
inc
adc
push
js
push
roll
decb
fiaddl
xor
pop
clc
mov
dec
adc
adc
mov
mov
pop
mov
pop
bound
jb
add
push
outsl
add
rolb
xchg
jo
gs
lock
and
pop
mov
mov
and
mov
adc
sub
mov
adc
fmull
jl
push
xchg
ljmp
js
push
xor
inc
xor
adc
add
outsb
xor
push
sbb
mov
inc
addl
sbb
push
add
fstps
hlt
xchg
jb
xor
das
and
sahf
cwtl
dec
jbe
xor
push
lods
ds
ror
and
pop
in
shrb
cmp
dec
pop
dec
and
and
lret
jge
gs
cmp
icebp
mov
push
inc
cmp
stos
int3
les
ror
xor
push
push
sub
sahf
or
es
adc
adc
push
sbb
mov
and
sbb
and
sbb
mov
xchg
inc
push
add
shrl
xchg
jle
lcall
xchg
ljmp
dec
lods
dec
pop
in
pop
adc
pop
jb
push
rclb
mov
adc
cltd
mov
cwtl
xor
pop
add
xorl
cmp
jecxz
xor
les
lret
pusha
xor
rclb
xchg
jb
clc
push
xchg
xor
cmpb
inc
xor
fcoms
mov
xchg
mov
dec
in
add
or
inc
dec
pop
push
add
or
add
sahf
xchg
aam
and
mov
cwtl
loope
mov
add
insb
pop
bound
push
push
lock
shlb
mov
xor
jle
inc
ljmp
adc
pop
fwait
add
push
jo
push
and
mov
add
out
lret
sbb
enter
dec
stos
into
push
xchg
inc
xor
orb
cmp
xchg
push
insb
push
in
testb
push
enter
cmp
pop
inc
je
and
dec
xchg
fisubs
aam
add
and
sbb
popa
sarb
aaa
mov
test
leave
add
inc
pop
fstpt
add
scas
push
xchg
xchg
aam
sbb
mov
or
mov
insb
cmp
bound
test
dec
and
dec
cmp
jbe
jbe
or
push
mov
inc
mov
lret
pop
xchg
pop
dec
and
sbb
bound
cmp
dec
push
push
lcall
xchg
test
mulb
pop
mov
mov
adc
jbe
dec
pop
xchg
pop
xor
adc
or
push
mov
idiv
xor
or
xchg
pusha
xor
ds
fmuls
add
add
inc
or
mov
jl
xor
dec
rolb
cli
aaa
or
or
cwtl
or
and
xor
cmpsl
movsl
jo
push
cmp
jp
push
inc
xchg
adcb
sahf
pusha
push
inc
test
add
sub
lret
and
xor
mov
push
dec
lret
lock
add
pushf
inc
les
pop
inc
push
cmpb
xor
cmp
mov
inc
inc
push
dec
and
push
rclb
add
cmp
mov
push
mov
popa
es
call
xor
push
in
pop
dec
mov
jne
jle
cs
xor
jl
add
mov
or
and
pop
dec
and
or
and
mov
data16
jo
mov
inc
sarl
push
mov
je
or
or
or
xchg
inc
shlb
jecxz
inc
xchg
adc
adc
push
cmp
or
mov
dec
pusha
mov
jo
test
rorl
push
xor
push
pusha
push
jmp
pusha
push
sbb
xchg
popa
push
js
jp
cltd
cmpb
ret
sbb
fwait
js
mov
sbb
ret
mov
movsl
xchg
ret
push
mov
mov
jo
inc
andb
leave
lods
aaa
out
rorb
sub
sbb
ret
adcl
movsb
out
add
inc
xchg
pop
outsb
notb
and
inc
aam
sub
into
dec
aaa
bound
call
pusha
and
sahf
shlb
pop
adc
cwtl
inc
adc
mov
sbb
fimuls
sbb
popa
pop
push
xor
cmp
add
xor
scas
push
cli
hlt
and
test
movsb
push
and
test
push
in
dec
dec
rclb
or
in
push
sub
push
xor
cmp
aam
dec
test
ret
cmp
dec
sub
pop
ret
pusha
mov
dec
aaa
xor
inc
pop
push
pop
dec
insb
dec
mov
and
inc
adc
dec
inc
or
add
mov
push
outsb
xor
sub
pop
xor
in
clc
in
add
icebp
test
inc
cld
sbb
xchg
or
mov
and
pop
add
loop
dec
sahf
data16
mov
adc
xchg
push
push
lods
cltd
xor
les
mov
mov
dec
inc
test
push
dec
imul
loop
lret
adc
cmp
mov
jno
add
dec
cmp
mov
xchg
jo
pushf
dec
push
movsb
cmp
dec
mov
mov
pop
push
dec
mov
add
pusha
loop
pusha
and
adc
test
int3
nop
jp
call
add
test
add
sub
aad
xor
mov
mov
and
test
orl
inc
imul
popa
mov
xor
mov
dec
pop
jb
push
add
pusha
cmp
and
fadd
repnz
mov
js
mov
xchg
pop
test
inc
adc
adc
loopne
hlt
stos
lret
orb
push
cmp
dec
pushf
pop
mov
cwtl
int3
and
int3
push
rcrb
push
inc
adc
inc
movsb
xchg
hlt
nop
fsub
or
repnz
adc
fadds
xor
dec
add
push
fcoml
sub
mov
mov
or
cltd
gs
or
cwtl
lcall
dec
push
cwtl
lods
sbb
jb
adc
xor
dec
rolb
cwtl
inc
pop
push
adc
and
sbb
xor
mov
push
enter
mov
loopne
es
xchg
adc
sahf
test
add
fmull
ljmp
scas
and
xchg
dec
clc
add
popa
add
into
adc
mov
pusha
int3
xor
push
cmp
xchg
movsb
test
stos
jbe
inc
clc
xor
mov
dec
int3
pop
dec
and
or
sbb
lds
mov
push
cmp
js
and
fs
adc
test
faddp
add
mov
lret
sarb
test
xor
jmp
insb
push
sub
push
test
popa
cmp
loopne
and
adc
xchg
call
and
shr
es
pusha
bound
enter
and
and
sub
adc
mov
dec
or
mov
dec
pusha
cmp
rcl
js
fisttps
mov
shr
and
push
in
xor
cs
mov
add
push
mov
clc
jo
inc
aam
sub
js
cmp
cmp
mov
push
mov
jle
inc
mov
enter
inc
arpl
sub
pop
add
mov
jae
cmp
loopne
scas
xor
fidivs
push
pop
push
lds
insb
cmp
and
mov
fmuls
movsb
ds
cmpsl
add
pop
pop
or
or
mov
add
add
lret
mov
test
pop
xor
shlb
outsb
jle
mov
xchg
movsl
es
rol
inc
dec
sbb
sbb
mov
pop
pop
cmp
ss
jp
int3
and
out
xor
xchg
xor
pop
scas
push
sub
xchg
inc
movsl
outsl
testb
test
dec
xor
cltd
orb
push
out
dec
sbb
aam
test
loop
jle
inc
ret
mov
insb
pusha
push
pop
aam
push
dec
repnz
add
inc
dec
cmp
and
clc
sbb
add
jb
inc
xchg
dec
fdivrl
ret
pop
inc
mov
lods
int3
lods
insl
inc
cs
inc
fiadds
mov
xor
loopne
stos
inc
lods
xchg
cltd
sub
push
lcall
mov
add
js
and
cmp
push
and
adc
xchg
inc
xchg
push
inc
ret
insb
fs
sub
inc
and
adc
or
push
add
xor
ljmp
pop
add
cmp
test
loopne
les
mov
ss
inc
mov
test
loopne
add
xor
pop
xor
mov
mov
push
add
push
xchg
nop
aaa
movsb
and
lcall
inc
cmp
push
sbb
or
aam
lret
cmp
subb
loopne
pusha
aam
add
cmp
pushf
gs
mov
and
cld
test
add
addb
and
test
mov
cld
mov
inc
inc
cld
rclb
repnz
inc
sbb
add
lret
subb
adc
lcall
inc
sbb
or
push
pop
rorb
mov
or
in
lret
in
cwtl
sub
mov
and
lret
xchg
xor
cwtl
or
inc
mov
push
add
lret
and
xorb
aaa
aaa
add
jbe
hlt
inc
push
dec
dec
jecxz
add
xor
stos
clc
movsb
adc
mov
add
push
and
pop
lcall
dec
test
in
dec
in
add
mov
nop
inc
adc
pop
shlb
add
and
push
inc
inc
xor
and
mov
jbe
push
cmpsb
test
add
dec
fnstenv
xor
mov
test
or
cmpsb
add
inc
subb
pop
scas
pop
add
dec
push
jb
inc
xchg
sahf
mov
cwtl
xor
mov
push
push
jl
bound
andb
push
mov
subb
pop
jbe
sbb
xchg
pop
fs
dec
int3
jb
mov
and
inc
inc
dec
adc
scas
inc
push
pop
sub
cmp
xor
movsb
cmp
mov
mov
sub
test
cmp
or
adc
cwtl
orb
xchg
add
xor
stos
cmp
add
push
loopne
mov
js
and
xor
fdivrl
xchg
adc
or
lcall
inc
aaa
push
daa
into
loop
fcompl
and
mov
insb
adc
or
je
mov
sub
adc
push
inc
or
ret
shl
sbb
inc
dec
mov
sub
aam
cmovs
les
sbb
mov
mov
and
dec
rolb
or
outsb
mov
push
sbb
dec
add
adcb
xor
sbb
cmp
into
mov
les
inc
inc
dec
or
and
movsl
enter
lcall
mov
fldcw
fstps
test
hlt
loopne
or
xchg
andb
jb
sbb
sbb
inc
adc
push
scas
pop
xor
or
add
dec
or
or
or
xor
cmp
and
jp
ss
add
xor
mov
push
add
ror
sub
cli
fdivs
inc
pusha
out
rclb
mov
push
pop
xchg
jne
mov
ljmp
data16
jae
out
inc
dec
hlt
xor
pop
subb
test
lods
pop
enter
push
xor
pop
pop
pop
rclb
nop
cltd
inc
and
xchg
enter
xor
cwtl
popa
mov
bound
inc
lcall
pushf
pop
add
inc
cwtl
gs
jp
mov
testb
sbb
dec
outsb
xor
xor
pop
xchg
adc
inc
aaa
sbb
dec
or
jae
mov
or
inc
movsb
and
adc
xor
or
testb
add
addl
mov
push
push
loop
inc
fs
stos
mov
xor
mov
xor
xorb
dec
sbb
aaa
test
inc
add
js
push
adc
and
jb
or
xchg
mov
add
sbb
or
pop
sub
aaa
pushf
push
je
adc
xor
cmp
inc
pop
pop
dec
xchg
cmp
shlb
sub
call
xchg
mov
addl
push
sbb
xor
xchg
movsb
adc
cmp
pusha
xchg
push
stos
or
mov
adc
push
add
and
test
xor
cltd
sub
mov
adc
cmpsb
xchg
hlt
pusha
loope
or
push
or
or
mov
movsb
sub
test
dec
push
inc
sar
shl
xor
cmpb
or
stos
cs
and
add
rolb
xor
sbb
pushf
push
aam
jb
clc
xor
into
xor
sub
add
and
dec
xor
cmp
sbb
mov
adc
lcall
mov
lock
xchg
fdivs
add
ret
push
push
test
inc
data16
push
xchg
inc
pop
mov
add
int3
or
test
mov
xchg
test
mov
mov
push
sub
push
jb
and
leave
and
pushf
jl
adc
dec
neg
xor
or
loop
mov
or
lret
roll
adc
adc
push
sbb
push
lcall
or
jp
mov
ds
adc
pop
inc
lret
xor
xor
inc
cmp
or
inc
add
ret
sub
inc
sub
rcr
adc
dec
inc
xchg
dec
push
lret
sbbl
adc
jae
ret
sub
pusha
push
fs
orb
es
dec
or
shrb
xchg
pop
test
roll
cmp
xchg
ret
adc
stos
cmp
les
sub
insl
or
sbb
aam
push
and
xor
mov
inc
and
es
lret
xor
in
xor
lcall
sahf
pusha
mov
dec
outsb
lret
imul
dec
add
sbb
or
test
dec
call
mov
ljmp
sbb
test
ret
ret
lcall
and
push
xor
fiaddl
or
adc
or
cltd
push
data16
mov
add
and
popf
sub
mov
mov
sbb
xor
or
sbbb
mov
loop
cmpsl
andl
inc
dec
add
mov
inc
hlt
push
cmpb
and
or
sbb
pop
dec
xchg
orl
inc
movsb
add
push
or
add
add
sub
jno
adcb
or
xchg
mov
jb
push
mov
test
and
dec
dec
es
mov
push
dec
push
adc
mov
and
mov
xor
cwtl
pop
ficoml
clc
adc
pop
lret
popf
jb
push
dec
inc
fadds
rcr
in
dec
clc
movsb
xchg
dec
xor
aam
inc
add
sub
jle
lret
or
outsb
xor
ss
dec
bound
popa
in
push
or
adc
or
cs
push
js
dec
lcall
in
add
jl
cmpsb
or
push
add
mov
dec
push
dec
and
sbb
pop
adc
cmp
shlb
mov
mov
cmp
push
push
push
adc
bound
dec
inc
testb
xchg
add
mov
gs
sbbb
sbbb
cli
loopne
stos
sar
push
pushf
mov
loop
ss
or
nop
mov
pop
inc
jecxz
adc
movsb
pop
inc
add
or
lods
pop
clc
aaa
mov
push
test
movsl
cmp
out
adc
test
dec
adc
push
mov
and
inc
cmp
and
pop
shr
pop
sub
or
scas
cmp
shll
les
push
adc
sbb
xor
cld
scas
push
into
pusha
xchg
and
add
xchg
jno
add
xchg
adc
push
sub
data16
mov
or
dec
leave
lods
and
subb
xor
test
jb
cmpsb
sbb
inc
aam
push
xchg
rorb
push
inc
add
dec
loope
jp
imul
pusha
add
and
push
aam
fildl
jecxz
add
rcrb
mov
sub
loopne
adcb
dec
push
pusha
test
aaa
cmpsb
jle
sub
les
push
push
cmp
add
popa
push
push
scas
pop
jbe
cwtl
aam
xchg
xor
leave
add
add
fdivs
test
inc
sub
clc
push
dec
pop
and
mov
push
xchg
dec
and
xchg
inc
in
sarl
xlat
fs
pop
or
clc
loopne
dec
scas
ss
cmp
jmp
test
push
push
inc
dec
pusha
dec
mov
xchg
adc
jmp
dec
aad
adc
hlt
dec
and
xor
jo
add
data16
pop
push
add
es
ds
mov
in
hlt
xor
xchg
push
xor
dec
add
mov
dec
fs
mov
and
add
fidivs
rcrb
or
pop
mov
int
xor
ljmp
jl
rorb
sbb
loopne
ret
jae
test
jle
inc
xchg
cmp
sbb
int3
cmpsb
movsb
jo
push
mov
aaa
dec
pop
inc
cltd
mov
ret
adcl
adc
and
mov
dec
test
mov
pop
jbe
sub
sbb
xor
mov
mov
jp
add
mov
sub
hlt
adc
sbb
in
jp
inc
cltd
ljmp
dec
and
push
cli
xor
scas
adc
shrb
mov
mov
dec
loopne
dec
add
mov
jo
or
and
push
mov
dec
and
pop
sbb
push
ret
or
push
xchg
enter
add
pop
inc
lret
cmp
sahf
xchg
test
pop
push
rolb
mov
sub
or
je
ret
dec
dec
cmp
dec
dec
push
sbb
xorl
mov
mov
mov
incb
ds
int3
in
add
pop
add
pop
rorb
inc
add
xor
mov
rol
push
push
push
cmp
inc
push
andl
mov
cmp
push
subb
lods
inc
sub
adc
jl
sub
loope
lods
add
dec
fadd
mov
lock
inc
mov
insb
fistpl
dec
or
cmp
ret
push
xchg
xor
sbb
sbb
popf
mov
push
jb
xor
lret
addb
xor
mov
add
ret
mov
cli
xchg
inc
push
daa
fadds
cs
push
inc
jl,pn
xchg
dec
popf
xchg
push
cmpsb
faddl
dec
or
mov
push
aam
or
pusha
sbb
ss
xchg
sahf
loopne
mov
mov
mov
jo
icebp
jno
pushf
xor
pop
and
push
inc
push
pop
inc
fbstp
les
inc
pop
pop
xor
add
add
mov
ss
dec
xor
mov
push
and
fimuls
adc
les
push
cmp
cmp
cmpsb
push
add
adc
push
xor
aad
jle
inc
je
add
push
inc
sub
mov
mov
movsl
adc
xor
xor
les
or
adc
lock
pop
push
inc
movsl
mov
data16
inc
and
xchg
and
inc
je
clc
mov
jo
cs
cmp
mov
into
push
cwtl
dec
nop
add
cwtl
sbb
inc
pop
push
sub
mov
dec
insl
or
mov
loope
and
push
or
mov
sbb
and
sbbl
xor
adc
inc
push
insb
pop
pushf
rol
lcall
and
push
push
mov
int3
inc
xor
xor
or
push
mov
in
push
lret
cmp
rcrb
movsl
dec
movsb
xor
add
enter
push
sub
pop
scas
lret
pusha
testb
dec
and
aam
pop
and
and
rcl
mov
adc
scas
js
popa
roll
or
push
js
push
fcoms
movsb
test
xor
or
mov
push
addb
sbb
mov
popa
addb
sub
popa
mov
push
jne
push
lret
sbb
and
mov
call
add
dec
cwtl
out
and
push
test
inc
rclb
dec
and
or
fisubrl
pop
inc
or
xchg
xorb
xor
pop
js
test
mov
xchg
push
jbe
add
popa
or
andl
inc
sub
bound
cwtl
lret
data16
xor
add
or
movsl
test
aaa
sbb
xchg
push
xchg
cmp
inc
xchg
shlb
es
push
xchg
out
sbb
data16
xor
dec
cli
jle
enter
outsl
or
xchg
xor
enter
pop
ss
in
ret
mov
cmp
xchg
dec
adc
test
mov
or
aaa
adc
insb
inc
gs
and
pop
push
lods
or
push
daa
ret
out
mov
in
push
pushf
inc
or
push
int3
push
lods
mov
testb
adc
and
shlb
out
sbb
inc
pop
orl
adc
or
xor
adc
ds
movsb
xchg
dec
mov
shrl
or
sarl
add
cmp
repnz
inc
and
push
sub
pop
add
ret
adc
out
and
mov
xchg
gs
xchg
enter
dec
mov
xchg
mov
and
mov
lock
pop
push
sahf
fmul
sbb
or
inc
xchg
inc
push
int3
loope
ret
mov
push
clts
cmp
add
jl
sub
fidivrl
mov
xor
and
xor
mov
xor
or
add
loopne
sbb
xchg
mov
dec
inc
adc
int3
fs
je
push
dec
push
push
add
mov
dec
shlb
orl
cmp
adc
mov
push
xchg
inc
sub
adc
mov
inc
jb
xor
push
cltd
je
xchg
push
add
cmp
and
xor
sub
cmp
stos
inc
pop
xchg
test
hlt
add
mov
add
inc
ss
adc
add
xor
adcb
aaa
loopne
lods
nop
cmp
xchg
inc
mov
inc
les
sub
enter
int3
stos
mov
jl
pop
xor
lods
enter
jmp
pop
push
pop
ljmp
sub
es
sub
les
aam
mov
or
or
push
add
xor
xor
add
cli
cmpsb
mov
int3
and
push
push
mov
ret
push
dec
mov
pop
jo
add
mov
add
mov
inc
inc
es
imul
lcall
shlb
jo
cwtl
addl
push
jo
sub
pop
and
fwait
xor
adcb
add
xor
push
push
pop
dec
pop
pop
or
rcll
push
inc
mov
and
xchg
xchg
orb
repnz
dec
data16
push
fs
pop
movnti
inc
and
insb
inc
rclb
push
test
mov
lea
je
dec
dec
addb
fstps
pop
push
xchg
add
pop
ret
push
cwtl
bound
nop
dec
mov
sbb
push
sbb
push
dec
int
mov
dec
and
sub
xorb
adc
ret
dec
or
add
push
cmp
inc
xor
es
addr16
push
sub
es
xchg
aam
cmpsb
add
ss
pop
add
and
pop
dec
mov
lcall
lret
inc
cs
clc
js
nop
int3
nop
or
or
inc
push
add
or
dec
dec
stos
addl
fs
add
cmp
push
test
add
int3
xchg
and
es
je
test
dec
shll
and
mov
jbe
stos
add
add
lret
pop
push
pusha
push
push
clc
andb
and
cmp
dec
and
ret
cmpsl
bound
pop
cmp
lcall
add
sbb
push
push
add
mov
cmpsb
push
and
pop
add
sbb
mov
push
popa
push
sbb
cmp
xchg
not
ret
orl
fadds
dec
dec
adc
xchg
sbb
les
or
and
cli
mov
arpl
ret
adc
shlb
sub
dec
pop
fiaddl
mov
mov
ficoml
mov
xchg
xchg
or
inc
test
mov
push
push
mov
test
and
fidivrs
push
sbb
adc
int3
cmp
jecxz
xor
and
outsb
stos
dec
dec
cmp
insl
add
cld
jbe
pop
data16
jb
pushf
sbb
adcb
or
or
inc
cmpsl
test
mov
scas
adc
popa
mov
xor
or
ficoml
scas
dec
push
mov
fidivs
rorb
or
mov
push
adc
mov
lods
imul
jp
xchg
scas
mov
xchg
mov
pop
mov
cmp
pop
add
dec
call
mov
mov
pushf
les
adc
adc
add
les
ret
aaa
insb
pop
dec
popa
adc
or
bound
jb
and
push
xor
pop
sbb
xchg
enter
mov
pop
pushf
scas
push
push
cmp
dec
fdivs
and
push
jne
xchg
repnz
mov
sbb
add
or
dec
dec
insb
mov
dec
sub
or
add
push
pop
imul
pop
push
les
adc
push
and
stos
lret
inc
add
jle
sbb
push
rcll
or
push
jp
loope
xchg
enter
and
jecxz
stos
ds
mov
add
or
add
test
lds
push
xor
dec
pop
cmp
and
ss
and
push
adc
rcrb
inc
mov
push
subb
fisubl
lods
int3
push
dec
cmpsb
fisubl
push
push
inc
xchg
dec
and
insl
and
push
inc
inc
push
int
data16
sbb
pop
bound
push
in
inc
mov
mov
pop
mov
je
xchg
add
dec
inc
adc
inc
js
cwtl
push
push
dec
lods
mov
lea
mov
and
inc
es
lods
insb
sub
stos
push
cmp
ljmp
pusha
aad
ret
xor
mov
cld
push
adcb
sbb
ficoms
rorl
sub
popf
adc
inc
sahf
fsubl
aam
or
cltd
push
inc
jp
dec
sub
out
mov
rcrb
and
xchg
dec
inc
or
imul
xorb
test
int3
dec
test
add
cmp
xor
add
movsl
push
sub
lcall
sub
loopne
push
or
push
push
test
adc
test
sbb
mov
movsl
add
add
cltd
addl
aaa
mov
jmp
pop
push
je
pop
ret
adc
test
dec
ds
les
sbb
sbbb
adc
jne
xchg
stos
cld
ljmpw
xchg
inc
lods
xchg
inc
mov
dec
sub
enter
xchg
je
xor
jo
lcall
mov
add
lock
inc
test
or
pop
xchg
nop
dec
add
pushf
add
mov
loopne
call
rclb
jo
data16
push
lods
or
in
mov
add
xor
inc
and
fisubs
pop
or
sbb
das
loop
mov
xor
inc
push
push
push
xor
loopne
mov
cmc
dec
stos
adc
ret
and
enter
xor
lret
xchg
shlb
cmp
jp
push
sbb
cmpsb
cmpsl
and
and
push
lods
cmp
add
pop
fs
pop
ljmp
add
mov
cli
or
inc
xor
push
ret
jae
mov
sbb
clc
add
push
add
push
stos
testb
push
lods
enter
mov
push
xor
xchg
inc
push
call
test
cwtl
dec
cmp
inc
inc
dec
and
imul
pop
sub
sahf
test
inc
enter
rolb
xchg
je
pushf
rorb
sbb
adc
lret
add
pop
lcall
mov
pusha
sahf
sbb
push
pop
xor
push
inc
enter
xchg
cwtl
push
rcrb
push
inc
fs
mov
stos
dec
xchg
push
inc
inc
repnz
mov
inc
test
fadds
sub
sub
dec
add
mov
inc
xchg
ret
dec
out
sbb
ret
add
sbb
dec
into
and
in
mov
call
or
popa
push
sub
mov
mov
push
jmp
or
add
jle
adc
and
bound
fwait
orb
xor
pop
test
fdivl
add
adc
scas
sarb
bound
xchg
mov
jo
ljmp
cmp
xor
mov
in
ret
cmp
add
ljmp
ret
mov
scas
jb
adc
rcrl
xorb
int3
scas
mov
cmp
push
dec
test
int3
add
xor
pop
es
imul
inc
cwtl
adc
push
sbb
nop
test
dec
xor
invd
mov
xchg
add
xor
adc
sbb
loopne
jbe
sbb
push
insb
xor
xchg
xorl
inc
aam
push
test
or
sub
adcb
push
mov
inc
add
inc
dec
aam
ret
jl
push
xchg
test
lcall
xor
cltd
mov
push
pop
js
jl
mov
dec
pusha
lock
sbb
sbb
test
xor
xorb
cs
xchg
adc
xchg
push
movsl
adc
push
js
xor
or
add
shlb
inc
inc
sarl
ss
shlb
mov
cmp
dec
inc
xor
add
add
pop
add
leave
xor
and
and
mov
mov
inc
dec
cwtl
add
adc
add
add
jo
outsb
dec
dec
inc
inc
or
pop
or
addl
or
xor
sub
xchg
rorb
xor
test
scas
fdivrs
and
es
lds
aam
xor
ret
dec
sbb
stos
shll
inc
in
xor
add
push
adcb
xor
cmp
and
sub
cli
cmpsb
or
stos
dec
js
or
pop
fcomps
add
mov
hlt
mov
push
mov
inc
push
dec
inc
pusha
test
sbb
orb
push
dec
aam
mov
mov
cmp
sbb
insb
cmp
fs
mov
and
testb
adc
xchg
enter
loopne
aaa
in
mov
test
and
test
shl
and
mov
push
push
into
push
pop
xor
inc
loopne
add
inc
pusha
adc
sbb
xchg
add
or
subl
mov
adc
pusha
xor
pusha
add
add
push
add
sub
pop
fmull
push
or
ss
cmp
add
cmpsb
xchg
adc
push
mov
cmpsl
adc
dec
mov
mov
xor
rorb
sbb
inc
cmp
movsb
subb
ss
repnz
dec
test
out
cmp
bound
or
push
jne
add
cli
push
test
icebp
or
pop
xchg
add
sbb
xor
and
rcrb
or
mov
cmpsb
hlt
or
xchg
mov
or
sahf
jbe
inc
pop
rol
push
scas
xor
and
xor
ret
dec
ret
js
dec
outsl
add
add
xor
adc
pop
inc
dec
push
sbb
and
cld
popf
or
sub
push
sub
or
sbb
out
mov
pusha
cwtl
xor
dec
dec
cmovs
jo
mov
xor
ror
data16
sbb
xchg
sbb
aam
adc
push
loopne
xchg
add
inc
dec
add
and
imul
aam
sub
mov
call
push
adc
inc
and
or
int3
insb
pop
mov
fadds
dec
xchg
addb
mov
adcl
test
and
ffree
inc
cld
call
push
dec
out
rorb
lea
cmp
xor
pop
mov
fsub
sbb
inc
adc
cld
lock
loope
xor
cmp
and
cmp
dec
inc
orb
or
cmp
addb
xor
push
xchg
data16
push
xor
adc
xchg
dec
rolb
incb
data16
cmp
daa
popa
and
in
and
cwtl
in
mov
data16
gs
push
jbe
cmp
sub
popa
and
lret
dec
test
sbb
dec
enter
xchg
adc
push
inc
xchg
gs
ret
dec
mov
outsb
in
outsb
pop
sbb
jle
push
dec
stos
dec
add
ljmp
cli
fs
mov
dec
push
and
fwait
sbbb
inc
insb
push
mov
xor
sub
xor
cmp
or
mov
andb
mov
dec
cwtl
push
test
dec
aam
bound
out
push
sbb
mov
gs
sub
subb
push
mov
or
movsl
jo
out
insb
inc
xor
aaa
ss
icebp
sub
and
adc
ret
pop
lods
roll
mov
xchg
shlb
push
xchg
push
push
inc
jb
xchg
push
add
xor
sub
sub
jecxz
add
inc
int3
or
pusha
sub
add
rolb
test
les
adc
sub
addb
dec
rolb
add
jns
add
in
push
inc
inc
sbb
test
es
push
dec
sub
stos
ret
and
bound
or
sub
adc
or
dec
sbb
sbb
inc
adc
push
inc
dec
ljmp
dec
cmp
adc
and
jne
bound
lods
cmp
pop
mov
loop
lret
adc
push
or
ljmp
jbe
push
clc
and
sbb
inc
pusha
mov
ror
or
loopne
mov
add
push
addb
jl
dec
cmp
or
sahf
add
pushf
icebp
push
cmovb
lret
dec
mov
cli
inc
rorb
sub
adc
cmp
and
push
dec
pop
lcall
sub
rcrl
dec
cmpsb
mov
lret
subb
inc
push
out
mov
mov
cmp
inc
mov
faddl
mov
fadds
add
xchg
push
xchg
xchg
push
mov
or
cmp
cmpsb
ljmp
sar
adcb
add
mov
mov
mov
xchg
pusha
cmpsb
cwtl
fidivs
add
dec
fisttpl
push
mov
into
xchg
in
leave
test
mov
sarl
dec
popa
inc
imul
dec
xor
mov
or
aaa
cmp
cmp
cmp
add
call
push
mov
mov
fisubrl
hlt
xor
les
dec
lcall
lock
mov
insb
hlt
xchg
add
sub
mov
dec
inc
sub
dec
and
or
ds
and
aaa
sahf
test
push
ss
movnti
pop
mov
and
enter
add
push
enter
add
mov
xor
or
jbe
add
sbb
adc
outsb
ret
pusha
pop
mov
inc
mov
or
and
mov
movsb
mov
push
mov
add
or
inc
inc
les
inc
and
movsb
notb
je
pop
mov
push
push
push
dec
mov
enter
movsl
and
cmp
aam
pusha
and
adc
dec
add
in
arpl
mov
sub
and
sub
insb
jp
sbb
add
xor
add
insb
lcall
fidivrl
lcall
cmp
mov
inc
fimuls
cmpsb
xor
jl
adc
xor
jp
add
inc
xchg
push
xor
mov
lcall
push
pop
jb
lea
out
and
add
xchg
pusha
mov
pusha
mov
shlb
nop
lret
fadd
nop
and
push
push
sub
loopne
loope
sbb
push
pop
push
add
das
movsl
and
aaa
pop
mov
jp
pop
data16
add
loopne
mov
mov
dec
push
lock
mov
dec
add
add
and
call
and
xchg
inc
dec
jle
cmc
sub
loope
and
or
dec
xchg
cwtl
adc
int3
xchg
dec
push
push
sub
mov
adc
jl
and
sbb
add
mov
adc
xor
xor
cmpsl
inc
jecxz
xor
xor
orb
cmp
cmp
dec
push
mov
or
add
in
adc
push
jo
cltd
rcl
cs
shlb
lods
pusha
dec
push
dec
jb
test
xchg
add
or
hlt
mov
sub
add
sub
or
lods
int3
inc
nop
pushf
pop
clc
inc
pop
cmp
add
ss
inc
enter
incb
jo
in
clc
add
add
inc
mov
js
enter
and
xchg
jo
add
xchg
add
pop
and
inc
add
pop
mov
xor
inc
sbb
in
adc
insb
dec
dec
cmpsb
mov
bound
or
outsb
in
out
sub
add
aam
xchg
cmp
test
xchg
dec
add
mov
dec
adc
pushf
inc
and
inc
ss
push
or
mov
adc
cli
mov
nop
fsubl
loopne
dec
push
xor
push
mov
idivb
jo
xor
inc
sarb
cmp
cmp
shl
jbe
jl
stos
ret
cmp
or
fsubl
add
mov
adc
cmp
push
adc
cld
push
dec
jne
sub
dec
pop
push
loope
lods
jb
adc
sbb
scas
push
mov
js
add
xchg
loope
push
xor
es
jl
sbb
rcrb
int
std
aam
dec
cli
aaa
cmp
add
sub
dec
mov
adc
mov
add
ret
repnz
or
or
push
lods
sbb
jbe
je
or
shll
adc
and
xchg
xor
into
dec
cmp
sub
or
and
adc
mov
movsb
xchg
sbb
shlb
add
mov
and
loopne
cmpb
ret
or
dec
outsb
pusha
mov
push
iret
inc
sbb
repnz
test
mov
int3
push
dec
loop
inc
xor
add
or
push
inc
mov
sbbb
mov
dec
dec
dec
shll
pop
sbb
js
adc
enter
adc
inc
inc
and
push
jle
call
test
mov
push
push
loopne
cmp
xchg
push
or
movsb
les
ret
dec
add
rcll
mov
inc
pop
push
inc
pop
test
push
fsubl
mov
add
cmpsb
rclb
pusha
push
adc
push
gs
gs
xor
call
add
mov
xor
push
push
test
dec
push
lcall
push
xor
je
mov
ror
sbbb
outsb
or
pushf
dec
add
ss
ret
xor
pop
or
insb
xchg
add
xchg
test
push
mov
and
sahf
inc
into
push
mov
cmpsl
and
push
and
xchg
nop
xchg
push
scas
cmp
out
rclb
adc
xchg
dec
adc
mov
cs
dec
jecxz
jb
mov
loopne
inc
ljmp
outsb
mov
adc
jo
push
xor
add
dec
jp
sbb
mov
into
mov
adc
xor
xchg
jbe
adc
dec
pop
push
lock
add
dec
arpl
shll
pushf
mov
sub
dec
mov
push
mov
push
xor
fsubrs
xor
dec
push
leave
lods
add
mov
sub
jb
dec
dec
inc
sub
data16
lret
lret
sub
cmp
popa
and
adc
mov
adc
push
outsb
inc
mov
xchg
pushf
pop
dec
and
mov
shl
mov
ss
orb
shr
push
fmuls
push
xor
sbb
or
loopne
mov
lods
and
and
push
dec
or
enter
or
add
push
push
inc
rclb
popf
sbb
mov
ret
stos
xor
into
add
jl
xorl
dec
les
addl
in
faddl
movsb
in
pusha
inc
sub
adc
loopne
pop
dec
and
jne
push
dec
mov
add
cs
inc
dec
es
xor
push
pop
cld
and
add
ficoms
and
sub
dec
dec
jo
dec
cmpl
inc
fcoms
int
xchg
pop
push
push
pop
sbb
leave
push
ljmp
mov
dec
popf
sub
adc
cltd
cmpsb
aam
mov
inc
jae
addb
adc
sub
pushf
fcompl
xchg
push
aam
shlb
or
ljmp
inc
ljmp
push
push
adc
xchg
sarb
sbbl
add
js
cmp
adc
clc
sbb
adc
and
aaa
andb
insb
repz
xor
int3
xor
pusha
push
inc
in
xchg
jb
push
pusha
inc
es
adc
xchg
xor
xchg
addb
cmp
icebp
xor
jb
clc
test
fisubl
fisubrl
ret
sub
mov
cmp
cmp
push
xchg
dec
mov
mov
xor
leave
aam
jb
jb
xor
adc
ss
dec
inc
or
push
xor
add
add
cmp
sub
xor
mov
inc
les
dec
fsubrl
adc
xchg
pop
mov
dec
or
jle
loop
and
jb
inc
in
adc
shlb
in
xor
push
add
dec
fwait
pusha
push
sub
mov
xor
decb
add
ljmp
adc
mov
push
sbb
jne
xor
lret
leave
pusha
xor
sub
inc
push
int3
push
inc
add
mov
or
fs
sahf
dec
loop
add
xchg
jge
or
nop
dec
aaa
xchg
push
xor
add
xor
or
mov
cmp
jo
push
sub
inc
add
popa
push
sbb
nop
popa
add
shlb
int3
push
jp
pushf
es
or
pop
inc
ret
je
xor
jo
shll
mov
loop
xchg
adc
mov
and
js
pusha
insl
ret
das
xchg
adc
ret
mov
or
lods
nop
sbb
loopne
js
mov
adc
stos
jo
add
pusha
xchg
sbb
imul
mov
mov
add
test
jb
sub
pop
js
mov
addb
push
adc
inc
lret
push
xchg
adc
jo
jbe
sbb
mov
push
adc
adc
sub
push
push
int3
dec
xor
and
push
add
movsb
xor
push
and
xchg
add
nop
call
push
xchg
dec
jb
or
xor
lret
dec
mov
and
pop
add
popa
das
mov
shll
pop
enter
mov
xchg
adc
xor
scas
mov
push
cmpsb
cmp
and
inc
test
scas
push
push
and
sbb
hlt
dec
rcll
push
and
in
in
mov
mov
cld
push
aad
sbb
jo
cld
sub
add
inc
mov
pop
sub
in
xchg
aam
pop
cmpsb
dec
xchg
xor
xor
pushf
cwtl
sub
inc
dec
mov
aaa
popa
nopl
movsb
add
adc
shrb
pop
inc
cmpb
cs
inc
push
sbb
fimull
xor
push
and
pusha
and
clc
jmp
loopne
push
adc
nop
jo
js
cwtl
push
inc
pop
pusha
xor
push
test
jb
clc
fs
push
sub
dec
negb
adc
pop
inc
lret
mov
inc
add
pushf
mov
movb
sbb
push
int3
add
or
test
add
pushf
cmp
fwait
or
inc
pop
and
mov
push
mov
and
jle
push
sbb
add
jl
sub
test
mov
dec
adc
pusha
out
je
dec
push
adc
mov
dec
mov
notb
stos
xor
add
add
dec
loop
mov
jno
dec
idivb
lret
adc
fsubs
pusha
es
jno
dec
stos
sahf
add
push
faddl
push
push
add
xchg
shlb
inc
or
dec
jl
test
ss
dec
sub
repnz
ljmp
push
jo
lods
cmpsb
dec
dec
and
loopne
popa
xchg
scas
aad
inc
and
push
inc
movsl
inc
addb
pop
sub
ss
xor
or
inc
mov
mov
stos
sub
adc
inc
mov
push
jo
shl
cmp
pushf
or
addl
xor
gs
xorl
loopne
push
test
stos
hlt
xor
cmp
cmp
or
stos
sbb
sub
lcall
pop
sbb
sub
mov
push
adc
push
mov
sub
inc
add
jb
pop
sub
push
xor
dec
mov
or
and
loopne
lcall
dec
ficomps
stos
mov
loopne
xor
jmp
pop
push
xor
add
test
and
inc
mov
ss
xchg
dec
inc
or
push
jl
inc
or
adcl
sbb
sarb
sub
mov
js
push
pusha
les
dec
test
and
or
xor
sbb
add
cwtl
test
dec
rolb
add
jno
inc
jp
rorb
add
test
pop
add
mov
mov
xchg
jb
pop
pop
push
andl
mov
add
pop
mov
sub
dec
add
fcoml
mov
xor
pop
insb
lcall
push
dec
adc
ror
lods
cltd
test
bound
push
xchg
xorb
inc
gs
dec
fiaddl
sub
or
sub
adc
gs
outsb
push
pop
in
inc
add
sbb
aam
inc
xor
xor
push
mov
leave
sub
mov
lret
adc
xchg
dec
mov
push
xor
int3
adc
jb
mov
bound
cmp
loop
pop
adc
jo
push
les
xchg
mov
sub
ds
lods
or
cwtl
and
xchg
lock
sbb
add
sbb
popa
adcl
pop
mov
mov
inc
sarb
inc
and
fmul
in
cmp
push
pop
pop
movsb
xor
sbb
push
dec
lret
test
mov
fs
inc
add
push
leave
int3
xchg
mov
dec
sbb
add
rorb
popa
cmpsb
adc
int3
xchg
popa
and
jo
add
aad
mov
jle
dec
mov
mov
mov
pusha
nop
or
int3
fmuls
xor
inc
test
dec
and
test
dec
push
lods
sub
xchg
lods
sbb
mov
push
inc
mov
decb
test
outsb
ret
dec
or
lods
dec
push
sub
aam
ljmp
xchg
mov
push
rol
push
push
sahf
add
je
inc
sar
loopne
mov
xor
xor
lcall
ss
pop
xor
sub
dec
sub
push
fildl
mov
cmp
scas
jl
and
xor
add
push
lret
jbe
cmp
or
ss
dec
loopne
or
hlt
inc
sahf
mov
dec
xchg
sub
sbb
push
inc
and
js
pushf
xchg
mov
jae
cmp
push
lret
add
sub
push
xor
adc
addb
inc
cmp
jp
dec
dec
and
dec
cwtl
mov
fisubl
dec
lock
and
cld
lcall
es
jne
or
sub
js
sbb
or
lcall
add
out
inc
mov
add
add
inc
test
push
cltd
out
sbb
pop
or
adc
push
pop
or
pop
ss
push
lods
mov
sbb
push
test
clc
or
and
jae
add
dec
push
out
add
rolb
cmp
loop
je
or
add
or
stos
sub
xor
pop
adc
mov
dec
xor
and
add
test
push
mov
xchg
jb
and
cmpsb
test
inc
adc
sbb
add
and
je
mov
dec
dec
ljmp
pushf
mov
test
and
inc
fwait
pop
or
stos
pop
push
xor
add
inc
sbbl
jp
mov
sbb
dec
hlt
and
rorb
and
fcom
push
sbb
xor
add
pop
mov
or
xchg
outsb
pop
test
xorl
cmpsl
aam
pop
data16
movb
xor
loopne
lcall
push
adc
xchg
stos
mov
inc
and
out
insb
sbb
xchg
push
inc
pop
lods
push
insb
xchg
in
pop
mov
jle
push
into
push
push
je
lock
sbb
jle
aaa
push
inc
inc
cltd
xchg
int3
dec
inc
ret
add
push
dec
mov
and
xor
pop
adcb
add
add
mov
pusha
cwtl
inc
push
lcall
pop
pushw
mov
xchg
mov
jo
pop
and
mov
and
mov
mov
push
inc
pusha
sbb
es
and
int3
dec
ljmp
cmp
jnp
or
movsl
rcrl
mov
add
decb
inc
enter
popa
out
and
sbb
push
pushf
lods
inc
and
into
mov
les
mov
push
cmp
nop
dec
and
mov
and
lock
xor
andl
mov
and
jo
push
dec
in
push
hlt
call
cmp
ss
mov
test
les
sub
or
push
dec
or
push
dec
or
or
push
shrl
cmp
or
xchg
pop
out
dec
js
adc
jp
mov
insb
subb
dec
sahf
ret
orb
sub
jo
adc
xor
mov
in
mov
sbb
xchg
or
add
add
xor
xchg
movsb
mov
xorb
pop
xor
adc
push
add
dec
divb
mov
adc
shll
rolb
test
add
xchg
aam
inc
pop
add
xchg
loop
or
cmpsl
jne
pop
inc
mov
mov
subb
dec
inc
push
dec
ss
inc
and
add
add
or
pop
add
sub
inc
cld
dec
xchg
sbb
jle
mov
fs
adcl
mov
mov
sub
push
pushf
mov
jb
dec
pop
inc
inc
sub
xchg
inc
cmp
and
dec
pusha
xchg
nop
push
sbb
es
test
pop
stos
stos
nop
ret
call
inc
push
mov
cmp
dec
push
sbb
mov
sub
xchg
xchg
jb
inc
rclb
adc
mov
rol
shlb
test
sbb
pop
cli
ret
or
and
push
sub
cld
test
xchg
test
nop
call
stos
cmpsb
mov
jle
js
and
orb
add
out
xor
mov
dec
pusha
ret
cmp
add
inc
movsb
push
sub
inc
orb
adc
add
dec
cwtl
push
xchg
mov
pushf
sub
sub
addb
xor
sub
inc
add
mov
es
xor
pop
cld
pop
rorl
dec
xchg
jo
test
xor
addb
ret
mov
xchg
cmc
adc
cli
sbb
cmp
mov
mov
dec
addb
rolb
fcompl
andb
or
push
scas
add
test
or
mov
mov
push
add
sbb
or
imulb
adcl
dec
push
inc
mov
movsl
pusha
fcom
arpl
push
push
fisubs
push
rol
int3
pop
clc
and
jne
dec
pop
ss
xchg
sete
add
sbb
loope
or
dec
add
xchg
sub
xchg
addb
add
lret
dec
pop
xchg
add
dec
inc
xor
dec
and
out
enter
fucomi
cs
test
adc
cltd
mov
or
push
hlt
dec
pop
hlt
add
sbb
js
mov
cmp
add
movsb
pop
cmp
pop
adc
adc
xor
and
pusha
or
mov
call
pop
xchg
test
ds
push
inc
xor
or
in
mov
add
jnp
mov
xchg
push
shlb
sbb
pushf
jb
mov
add
ds
add
or
add
adc
inc
xchg
jbe
hlt
insl
mov
pop
add
or
mov
cmp
cmp
popa
pusha
cmp
add
adc
or
out
jo
add
unpcklps
or
dec
loop
cmp
inc
or
sbb
je
mov
xor
pop
push
ret
sarb
and
gs
sbb
or
or
xor
pushf
xchg
push
dec
sub
ret
sbb
loopne
mov
add
sub
sub
or
loop
add
xchg
push
inc
xchg
or
pushf
push
cmp
cmp
popa
sub
enter
add
add
rorb
mov
fdiv
add
or
je
add
jmp
test
or
and
pop
cmp
push
mov
pop
pop
repnz
dec
mov
xchg
push
adc
dec
popa
mov
jle
push
aad
test
push
fcoms
xchg
test
ret
lcall
add
add
into
push
fsub
addb
bound
nop
les
rcl
int3
xchg
dec
mov
mov
xchg
inc
xor
xor
push
sub
xor
adc
adc
outsb
dec
sub
adc
add
push
gs
icebp
push
lcall
push
pop
lods
mov
pop
dec
push
or
mov
insl
cmp
insb
push
loope
shrb
into
or
movsb
rorb
pop
add
push
push
mov
xor
dec
push
lret
adc
sbb
xor
pop
push
dec
je
or
pop
adc
push
dec
push
loopne
mov
les
in
xor
pusha
test
dec
notb
jb
or
outsl
mov
xor
cmp
push
ds
loop
mov
push
push
inc
scas
pop
xchg
pop
fsubr
push
dec
push
outsb
xor
sbb
push
pop
or
or
bound
dec
jp
push
jo
scas
jl
lret
or
cmpsb
sub
or
or
adc
sbb
cmp
adc
ds
rorl
adc
and
mov
dec
cwtl
enter
mov
push
nop
push
fsubl
insb
test
dec
push
and
insb
inc
xchg
push
xchg
scas
lcall
pop
xchg
mov
mov
int3
xor
inc
test
les
pop
cmp
or
cmp
xor
mov
adc
or
test
adc
add
cmpsl
add
sarb
lret
inc
and
sub
and
mov
adc
pusha
sbb
adc
lret
inc
add
adc
ffree
ficoms
mov
enter
push
lock
ficoml
sbb
or
or
test
inc
stos
rcr
cs
out
sub
cmpl
adc
cld
cli
adc
jmp
pop
enter
in
or
inc
cmp
push
mov
insl
or
push
sahf
dec
or
lcall
cmpsb
stos
mov
push
inc
adc
clc
sbb
bound
xchg
push
nop
mov
push
push
adc
dec
mov
nop
dec
dec
rorb
and
mov
inc
and
inc
sbb
clc
addb
xor
xor
xor
xor
loopne
inc
or
push
add
jmp
test
push
loopne
add
xchg
add
xor
and
lea
cwtl
dec
sub
xchg
ret
adc
sbb
jl
outsb
cmp
dec
pop
sub
sbb
jo
pusha
ds
push
es
clc
cmpsb
sbb
gs
sbb
push
sbb
adc
mov
enter
cmp
outsb
mov
loope
add
mov
ret
and
adc
xor
sbb
subb
mov
inc
test
sbb
xor
add
mov
sub
es
test
data16
outsl
pop
push
xchg
dec
mov
test
push
loop
inc
je
mov
or
add
outsb
push
gs
nop
xor
inc
test
mov
adc
xchg
push
push
sbb
dec
adc
jo
adc
mov
sahf
xor
dec
adc
test
and
ficoms
xor
cmp
push
data16
push
aam
pushf
es
mov
lock
cmpsb
stos
sbb
cwtl
push
sub
xorl
or
pop
xor
add
je
popa
dec
add
fsubrl
cmpl
sub
pop
sub
ds
call
xchg
adc
adc
out
inc
sub
inc
pop
jb
rclb
data16
pop
push
pop
mov
or
push
push
fsubl
mov
popa
sbbb
add
xor
adc
push
push
pop
cmpsl
rolb
adc
sahf
cmp
adc
dec
add
cmp
int3
push
push
ret
dec
mov
adc
inc
nop
or
xor
adc
sarl
mov
and
sbbl
sbb
cmp
pop
test
cld
push
dec
ror
imulb
test
jle
mov
xor
pop
jp
push
add
inc
xor
and
insb
ss
das
or
test
push
or
add
cmp
push
xchg
sbb
xor
sub
cmp
cwtl
pop
mov
mov
inc
xchg
clc
add
adc
push
push
int3
and
sub
es
sahf
mov
xor
dec
adc
inc
sbb
pop
ja
sub
push
pushf
push
cltd
rcll
inc
add
bound
cmp
rorb
or
push
mov
ljmp
pop
fs
inc
in
jo
cmpsb
sub
enter
shlb
andl
mov
cld
dec
fsubs
xor
inc
or
hlt
xor
rol
add
push
pushw
mov
push
pop
mov
scas
mov
rcrl
add
or
inc
scas
add
push
dec
sbb
push
push
dec
xchg
mov
cltd
or
mov
dec
and
enter
xor
push
es
inc
data16
test
orb
clc
dec
call
data16
or
fisubl
or
and
xchg
xchg
les
sbb
pop
cld
imul
test
add
xor
mov
dec
xor
pop
adc
aam
ss
inc
pop
bound
push
lret
mov
data16
inc
popa
ss
jb
adc
add
push
push
xor
int3
mov
dec
dec
sub
stos
push
cltd
scas
mov
adc
adc
adc
gs
sub
push
dec
pop
sub
xor
xor
pop
inc
repnz
sub
push
push
xor
cmpsb
insb
in
scas
sub
addl
dec
sub
test
cmpsb
inc
push
push
lret
es
dec
sahf
xorb
pop
xchg
and
inc
push
push
lds
push
dec
je
push
cmp
pop
fdivs
mov
xchg
xchg
adc
insb
push
dec
add
and
and
cmp
ret
push
xor
xor
pusha
sub
adc
push
cmp
add
data16
jbe
pop
or
shl
inc
xor
stos
lcall
inc
push
orb
loopne
inc
movsb
cmp
icebp
jle
mov
inc
nop
dec
fs
fmuls
xchg
and
dec
cmp
nop
fidivrl
add
jo
xor
je
mov
test
mov
push
lcall
pop
add
add
mov
dec
add
add
in
pop
add
push
test
add
jo
test
jo
and
pop
and
push
push
push
adc
pop
in
xor
add
test
cmpsb
xchg
enter
mov
xchg
scas
mov
xor
jo
ret
in
push
and
push
pop
dec
outsb
cwtl
mov
loope
and
shl
xchg
mov
faddl
ss
add
xchg
mov
mov
int3
hlt
fiaddl
push
dec
xchg
mov
jbe
lret
xchg
add
dec
and
inc
sub
adc
push
jo
add
lods
imul
dec
adc
mov
mov
lret
push
sub
cs
inc
mov
sbb
fwait
inc
sbb
mov
dec
sbb
xchg
add
pop
movsb
mov
dec
sub
fwait
shlb
mov
hlt
inc
in
sub
xor
or
arpl
xchg
pop
jbe
fcoml
adc
dec
add
push
dec
lret
and
mov
and
adc
rorl
movsb
xor
add
or
dec
adc
pop
test
or
add
lret
mov
push
test
mov
ds
or
pushf
mov
xchg
jne
cmp
mov
jb
pop
inc
sbbb
sbbb
add
push
movsb
mov
xchg
sub
pusha
jo
dec
ljmp
mov
aad
movsl
pop
in
dec
aaa
sbb
fcoms
xor
dec
add
sbb
xor
push
movb
mov
and
push
adc
xchg
addb
inc
fs
jl
in
dec
mov
cs
and
sbb
dec
ret
or
adc
sub
push
lea
sub
adc
jo
cli
les
loopne
push
out
mov
push
pop
in
mov
add
rorb
push
mov
and
xor
nop
movsb
ret
or
sbb
rolb
rolb
adc
xchg
fmul
inc
xchg
jmp
xchg
sbb
rolb
add
cs
sbbb
lods
xor
orl
adc
outsb
or
cmp
cmp
dec
into
lock
xor
faddl
loopne
popa
sbb
push
dec
xchg
inc
test
or
test
push
mov
xchg
and
xchg
mov
ss
test
sbb
dec
adc
push
adcb
in
dec
sub
mov
inc
mov
ret
ret
and
roll
cmp
pushf
nop
xor
int3
dec
xchg
sub
xchg
add
or
nop
les
pop
js
pop
and
sub
inc
test
pushf
push
rol
xor
shlb
inc
sub
cmp
cwtl
mov
pushf
out
push
inc
sub
cmp
push
in
test
inc
cs
cs
xlat
fs
mov
jl
inc
sbb
cld
dec
dec
inc
sub
aad
subb
aam
add
inc
cwtl
rcr
nop
inc
and
or
lret
inc
rol
inc
ss
or
push
ret
pop
inc
jo
lret
inc
push
xor
or
out
dec
xchg
push
test
test
pop
nop
call
xchg
sbb
mov
inc
or
and
xchg
dec
subb
or
xor
mov
dec
jp
es
adc
movsl
shrb
shlb
xor
lret
push
xor
aaa
add
int3
sbb
lock
repnz
lock
dec
insb
sbb
mov
and
or
pop
dec
and
test
into
lcall
push
dec
stos
cmp
xchg
rolb
push
inc
jb
sub
sahf
leave
inc
cmp
inc
xor
scas
sub
test
into
inc
nop
das
imul
aam
rorl
data16
cmp
cmpsl
and
je
dec
push
adc
call
adc
stos
fcoms
xor
adc
pop
and
cmp
and
and
loop
sbbb
mov
cli
inc
pop
pop
mov
inc
add
push
inc
xchg
sub
push
hlt
or
xchg
ret
or
push
sbb
cltd
add
push
inc
ret
inc
gs
les
push
xchg
pop
or
and
out
xor
xchg
jb
pusha
adcb
sbb
sbb
cmp
es
sub
sbb
mov
cmp
call
adc
jb
dec
jne
pop
mov
add
and
jle
jo
loope
into
adc
xor
addb
rorb
adc
lret
cmpb
xor
push
dec
and
test
je
jae
push
pop
adc
dec
pusha
mov
mov
add
dec
cmp
ss
add
dec
mov
pop
push
add
or
rolb
add
ret
pop
and
dec
push
popa
add
cs
dec
xor
pusha
js
cs
push
mov
xchg
mulb
fmuls
push
push
add
scas
add
mov
enter
or
jl
pop
inc
inc
sbb
ss
xor
adc
push
inc
push
cs
lods
xor
pushf
sbb
shll
xor
js
data16
cmp
inc
fidivs
add
stos
rolb
adc
cmpsb
mov
pop
pop
sbb
and
dec
sbb
aam
mov
or
inc
out
xchg
xor
adc
hlt
mov
pusha
cmp
mov
icebp
hlt
shlb
xor
push
data16
stos
call
lret
xchg
sbb
xor
repnz
mov
cs
or
and
dec
rclb
dec
cwtl
mov
data16
mov
sub
push
inc
in
dec
mulb
or
cmp
test
pusha
out
push
adc
ret
sbb
sbb
mov
in
jbe
add
and
dec
dec
into
inc
sbb
push
inc
inc
clc
pop
fstl
pop
dec
fidivs
add
add
mov
add
pop
mov
call
xchg
icebp
adcb
push
jo
pop
push
sub
fidivrl
inc
mov
adcl
or
and
dec
cmp
js
xchg
orb
push
or
mov
popa
cmpsb
inc
loop
jp
push
xchg
into
adc
fdivl
inc
fidivrl
push
xor
ficoml
aam
test
addr16
enter
test
in
push
inc
dec
xor
push
mov
inc
data16
mov
push
xor
cld
or
mov
pop
hlt
or
push
push
xor
dec
fstps
xchg
adc
xor
dec
lds
push
inc
lock
js
fs
pop
fs
adc
xor
leave
popa
test
pop
push
pop
add
dec
xchg
bnd
push
and
sbb
aaa
dec
xor
xchg
aam
cmp
lret
mov
push
test
pop
adc
mov
ss
cmp
mov
adc
pop
mov
gs
cli
and
inc
adc
movsb
in
sub
pop
mov
xor
insb
and
xor
inc
push
cmp
and
mov
or
sahf
mov
or
mov
add
cs
les
nop
sbbb
cmp
pop
pop
clc
add
adc
insb
mov
cmp
dec
add
dec
push
dec
sahf
cld
arpl
push
bound
pusha
sbb
fiaddl
sbbb
dec
cli
sbb
add
adc
and
fiadds
fisttps
call
rclb
mov
or
cmp
pop
xor
cmpsb
xchg
xchg
inc
sub
subb
mov
mov
jb
in
outsb
mov
adc
cmpsb
dec
popa
xor
les
push
daa
and
sub
cmp
shrb
xchg
repnz
xor
or
sahf
or
pop
push
jbe
add
cmp
cwtl
add
push
pop
xor
fmull
push
call
sbb
fwait
rol
xor
add
sahf
fdivs
xchg
cs
mov
mov
cmp
jecxz
es
jne
mov
dec
add
xchg
ss
or
adc
fdivs
adc
orb
adc
pushf
and
rcl
jo
test
inc
mov
add
xor
test
daa
jle
cs
je
stos
inc
mov
jb
movsb
jl
sbb
xchg
popa
xor
pop
adc
cli
dec
les
sub
mov
add
sahf
pop
int3
pop
sub
jbe
dec
add
add
inc
xor
push
mov
xchg
adcb
inc
and
lcall
add
inc
sbb
addl
push
add
sbb
lret
push
fnstenv
or
movsb
jb
sbb
add
test
pop
pop
adc
xorb
and
lret
sahf
mov
les
stos
pop
push
mov
adc
clc
inc
and
insb
sub
push
xor
dec
test
xor
mov
xor
add
inc
adc
imul
fldlg2
mov
and
and
add
inc
rcrb
fsubrl
xor
pop
mov
inc
inc
mov
aam
daa
ss
mov
mov
inc
mov
pop
je
xor
es
and
pusha
xchg
sbb
mov
cmp
cwtl
adc
lret
inc
cmp
dec
inc
pop
test
adcl
or
faddl
rorl
scas
bound
inc
push
sbb
inc
test
loopne
dec
adc
ret
push
int3
dec
lock
cmp
dec
push
bound
xchg
add
scas
dec
mov
mov
outsb
add
dec
test
add
loopne
inc
push
dec
mov
rol
in
push
stos
add
jp
mov
into
cmpb
push
lea
xchg
sbbb
rolb
add
nop
fs
daa
gs
test
cmp
inc
xchg
adc
loopne
cli
mov
mov
and
ret
addb
clc
xchg
rol
lods
pop
cli
dec
mov
mov
mov
addl
inc
gs
aam
andl
and
decb
adc
dec
adc
adc
inc
or
pusha
movb
xor
push
inc
add
dec
push
mov
or
dec
inc
add
mov
lcall
test
xchg
lcall
push
sub
sub
mov
dec
pop
fcoml
fsubrl
mov
push
sub
loope
jecxz
xor
push
rorl
xor
add
inc
add
mov
rcrb
andb
or
or
clc
add
inc
out
push
sub
mov
mov
roll
sub
inc
loope
int3
sub
mov
add
ljmp
pusha
xor
mov
nop
push
mov
push
push
push
add
dec
jle
ljmp
test
push
push
pop
test
push
sbb
fdiv
inc
xor
dec
inc
addr16
imul
out
xor
push
sbb
adc
dec
fadd
roll
push
nop
dec
call
dec
push
mov
or
dec
inc
lock
xor
test
mov
out
mov
push
cld
xor
js
rcll
sarb
sub
test
pop
xor
inc
mov
es
rcll
cmpsb
cmp
xor
mov
push
push
cli
arpl
gs
cli
aaa
pop
adc
jl
loopne
and
push
jp
xor
jecxz
insb
push
xor
pop
dec
icebp
push
xchg
in
lock
add
pop
in
push
inc
push
and
rolb
int
xor
mov
dec
push
inc
popa
xchg
sbb
imul
andb
xor
sti
mov
xchg
rolb
adc
add
adc
push
xor
sub
add
out
sahf
mov
inc
mov
nop
or
sbb
data16
cmpsb
fcoml
add
dec
push
out
push
inc
push
and
pusha
push
xor
xchg
mov
dec
movb
inc
add
add
lret
or
lret
repnz
sub
lahf
sbb
cmp
push
mov
inc
inc
enter
xor
ret
sub
xchg
js
inc
dec
shrb
add
dec
sbb
mov
ss
sbb
mov
stos
pop
les
lods
test
hlt
add
call
bound
xchg
adcb
fs
and
ficoms
pusha
ss
imul
push
cmp
fidivrl
mov
cwtl
and
sub
push
sbb
dec
rolb
dec
insb
rcrl
xchg
add
xor
xchg
dec
inc
sub
mov
mov
cmpsb
adc
xor
leave
cmpsb
cmp
mov
inc
push
dec
push
or
pop
add
cli
ss
loop
push
mov
mov
jle
inc
int3
inc
jae
mov
ja
mov
inc
mov
arpl
test
jo
add
inc
pop
or
push
and
loope
rorb
aad
or
adc
xor
xor
cwtl
loop
xchg
dec
mov
dec
shrb
add
ret
sbb
clc
add
testb
lcall
dec
jo
sbbb
loop
xor
xchg
fdivrs
inc
andb
test
lods
mov
xchg
cmp
pop
popa
push
cwtl
sub
mov
xchg
in
push
mov
ss
insl
test
inc
sbbl
test
nop
mov
or
dec
and
jp
adc
je
mov
add
push
sub
inc
or
cmpsb
push
sub
cld
or
push
inc
add
jmp
adc
call
add
test
inc
inc
sub
cmp
pop
orb
fsubrp
mov
icebp
mov
push
enter
test
loop
outsl
jl
jo
dec
pop
cwtl
sbb
add
xor
push
sbb
sub
or
ret
add
xor
insb
adcb
pop
js
addb
push
push
add
xlat
sbb
sub
bound
and
sbb
repnz
stos
add
sbb
xchg
ret
mov
subb
addb
inc
or
mov
mov
inc
push
or
or
xchg
les
push
sbb
and
xor
push
dec
inc
dec
and
loopne
and
adc
mov
out
and
add
adc
or
and
add
mov
and
adc
or
mov
shll
jb
mov
sarb
pop
push
xchg
xor
lcall
inc
add
sub
lret
pushf
xchg
push
pop
jne
ds
inc
movsb
mov
rcr
cs
sub
mov
movsl
add
icebp
nop
or
push
jae
and
inc
xchg
shlb
adc
inc
inc
cwtl
or
or
int3
fcoms
cmpsb
lcall
or
sub
out
mov
or
push
cmp
call
jo
sub
push
insl
enter
pusha
dec
adc
push
dec
dec
or
testb
dec
enter
sbb
lcall
mov
cltd
sub
popa
mov
xor
xchg
cwtl
inc
in
adc
out
movsb
dec
dec
or
mov
sbbb
xchg
or
and
lea
shlb
test
xorb
faddl
add
cmp
in
push
stos
shrb
push
pop
or
mov
lret
xor
loopne
push
push
xor
push
push
ret
and
inc
pop
and
cs
push
add
cmp
push
mov
inc
pop
or
shlb
mov
push
inc
xchg
pusha
jp
call
add
inc
push
dec
cs
pop
mov
pushf
push
arpl
sarb
add
dec
mov
add
movsb
cld
push
push
mov
add
push
adc
or
and
push
addr16
and
je
cmp
sbbb
ds
aam
mov
sub
mov
test
and
mov
test
leave
bound
ljmp
les
sbb
js
push
mov
lds
lods
rolb
xor
ljmp
pop
xor
push
or
xchg
adc
fxch
xor
xor
movsl
cmp
inc
lods
add
jl
push
xchg
orl
sub
mov
test
cli
dec
push
fisubl
stos
pop
inc
ss
and
dec
and
push
stos
and
xchg
test
dec
mov
in
incb
sahf
mov
xor
or
test
push
enter
sarb
sub
xchg
lret
inc
mov
xchg
push
adc
push
mov
mov
inc
xor
pop
inc
add
testb
adc
mov
xorb
push
or
push
bound
jge
ret
push
cmp
push
out
dec
insb
inc
lods
mov
dec
dec
mov
int3
cmp
ljmp
test
bound
pop
mov
xor
push
mov
cs
push
data16
cmp
mov
dec
dec
or
test
dec
movsb
cs
adc
mov
inc
inc
push
sbb
add
pop
add
sbb
inc
or
mov
aam
xchg
push
mov
data16
fs
jl
push
mov
data16
or
ljmp
push
add
add
test
push
mov
and
mov
push
nop
lret
xchg
add
lret
cs
mov
in
xor
shlb
pushf
into
pop
inc
nop
or
jb
dec
adc
cltd
cmp
or
push
push
mov
movsb
sub
fcoml
lcall
aam
sub
hlt
and
mov
sub
xchg
mov
mov
dec
call
or
nop
test
sbb
xor
dec
pusha
fs
xchg
add
inc
push
in
insl
add
mov
mov
jbe
inc
scas
fadds
and
xchg
push
jbe
pushf
insb
pusha
mov
xchg
pop
xor
mov
adcb
add
or
cmp
inc
es
fcoml
dec
inc
nop
sub
push
out
bound
scas
and
xchg
push
push
inc
test
sbb
push
pop
push
sub
inc
xchg
xor
push
fldl
push
mov
ret
xchg
jo
lcall
aam
andl
push
orb
or
inc
mov
mov
cmpl
pop
inc
test
pusha
jo
stos
xor
leave
mov
xor
shlb
cwtl
xchg
xchg
xchg
notb
or
pop
or
push
adc
ror
inc
or
and
mov
movsl
push
rclb
or
pop
cs
mov
mov
mov
dec
mov
push
je
sbb
lcall
mov
add
inc
mov
push
sub
inc
nop
rcrl
lret
mov
jle
movsb
inc
push
add
fs
repnz
xor
add
xchg
xchg
mov
inc
push
mov
add
push
or
pop
push
aam
xchg
sbb
scas
push
in
inc
or
push
mov
in
pop
push
jb
inc
mov
mov
out
inc
mov
mov
inc
loopne
movsb
test
mov
pop
push
adc
cmp
icebp
pusha
sub
push
or
sub
fwait
push
adc
pusha
nop
fld
push
loop
mov
lcall
adc
es
add
test
xchg
lock
xchg
mov
fisubrs
push
and
adc
pop
mov
and
mov
jo
hlt
xor
pop
enter
fs
sbb
push
xchg
sbb
lea
dec
call
or
enter
xor
dec
adcb
test
lret
xchg
and
cmp
rolb
ljmp
ds
or
mov
lea
lret
mov
jo
add
push
mov
test
push
inc
dec
gs
pop
fmull
mov
in
push
push
dec
sarl
fs
enter
nop
xchg
adc
add
mov
xor
add
mov
push
je
mov
ja
mov
incb
mov
pusha
inc
lret
lret
dec
inc
cld
movsb
sbb
sbb
dec
mov
mov
lock
push
pop
adc
inc
mov
into
push
dec
cmp
sbb
and
shrb
cmp
addb
and
mov
data16
test
dec
xor
xchg
dec
lods
js
inc
cwtl
dec
lods
sub
cs
mov
inc
subb
stos
push
dec
sub
arpl
dec
add
mov
xchg
dec
sub
xchg
lret
sbb
rcrb
or
inc
loopne
adcl
xchg
hlt
sahf
lret
cs
mov
clc
push
cmpsb
dec
mov
stos
mov
nop
shlb
jno
add
push
adc
dec
ret
or
push
inc
and
cwtl
mov
mov
pop
adc
dec
xor
mov
popf
inc
or
cmp
ret
dec
cltd
inc
nop
jp
and
mov
shll
adc
push
dec
dec
push
enter
sbb
js
or
stos
inc
xor
pusha
adc
cld
pop
xchg
test
jmp
inc
dec
cld
push
dec
or
or
sbb
cmp
mov
mov
cmp
notb
cmp
pop
fcoms
mov
subb
inc
in
xchg
sub
push
movl
or
popa
cmp
mov
push
inc
cmp
rcrb
push
lods
push
xor
call
into
lods
inc
push
adc
dec
mov
pusha
add
adc
mov
mov
xchg
dec
and
or
ljmp
push
test
rol
cmpl
pop
dec
mov
mov
test
xchg
adc
hlt
inc
aaa
int3
rcrb
ficomps
pop
cltd
sbb
lret
addb
ljmp
pusha
push
dec
add
or
sbb
xor
push
and
sahf
inc
dec
or
mov
je
push
insb
les
jl,pt
or
or
xchg
inc
xchg
jb
add
or
jle
bndldx
push
xchg
adc
inc
inc
stos
xchg
or
push
sbb
pop
dec
sub
mov
add
pop
neg
cmpsl
pusha
xchg
adc
fiaddl
dec
lret
mov
in
sub
in
out
inc
and
and
inc
mov
xor
cmp
es
or
sub
mov
data16
mov
int3
incb
mov
test
pop
sbb
ret
ror
xchg
add
inc
xchg
dec
enter
hlt
push
push
dec
call
add
fistl
outsb
shrl
xor
and
push
xchg
ljmp
push
dec
ss
adc
outsb
cmp
pushf
mov
adc
popa
inc
cmp
or
xor
adc
and
mov
push
je
inc
inc
push
pop
movb
fmuls
repnz
xor
push
movb
mov
data16
dec
or
push
pushf
or
fstps
push
push
dec
or
dec
movsb
inc
dec
inc
dec
push
into
int3
xor
and
ljmp
inc
inc
xchg
lea
push
pop
and
scas
inc
sbb
add
cld
xor
fs
mov
and
xor
xor
lods
cmp
push
or
pop
fdivrl
add
cmp
cld
ljmp
int3
xchg
pusha
cmpsl
or
push
sub
mov
xchg
jl
or
bound
add
in
jl
xor
xchg
mov
add
int3
mov
xor
loopne
sbb
mov
call
and
mov
stos
xchg
addr16
sub
roll
sbb
pop
rorb
xchg
leave
xchg
add
adc
inc
stos
mov
inc
xor
push
dec
mov
inc
add
jnp
add
mov
push
inc
push
push
sbb
dec
stos
rorb
hlt
dec
and
inc
add
nop
push
inc
xchg
aaa
add
ljmp
ds
mov
add
cmp
jae
or
lcall
or
pusha
mov
js
insb
dec
ss
add
sbb
dec
pop
addl
sbb
mov
pop
test
mov
scas
sahf
lods
pusha
add
cs
push
inc
sahf
inc
cmpsb
and
dec
mov
jb
and
outsb
jno
sbb
adc
push
adc
shl
xchg
push
inc
and
pop
pop
sub
lods
or
cmp
movsb
mov
dec
adc
pop
adc
pop
aam
xor
sub
inc
adcl
inc
and
dec
mov
push
add
and
test
xchg
outsb
pop
pop
xorb
or
dec
xor
inc
push
xor
mov
or
mov
sbb
test
adc
jnp
ret
push
enter
and
mov
mov
test
jp
insl
jne
clc
cmp
dec
add
push
ficompl
xor
out
xchg
pusha
mov
je
iret
cs
mov
dec
pop
shlb
inc
sbb
push
lods
jo
push
loop
rorl
int3
insb
sbb
or
jnp
js
inc
xchg
add
and
inc
xor
push
data16
ret
pop
shlb
pop
loop
pop
mov
jb
rcrb
int3
or
push
mov
cltd
pushf
lcall
loope
cmp
sub
add
pushf
cli
in
sbb
jne
dec
shrb
sub
push
pop
rcrl
dec
cmpb
shlb
xchg
aam
pop
int3
add
fcoml
inc
mov
mov
inc
sahf
ficomps
push
dec
mov
mov
mov
dec
cwtl
push
adc
add
addb
push
or
mov
js
xor
xchg
out
ds
and
sahf
pusha
add
cmp
sub
movsb
pop
fadds
mov
fcoms
int3
js
cmp
add
xor
inc
imul
push
jecxz
inc
fs
push
dec
adcl
loop
push
cmpsb
addl
cmp
jmp
in
ret
dec
or
mov
or
cmc
adc
nop
dec
inc
sbb
inc
inc
xor
sub
test
out
sahf
push
jo
mov
fimuls
pop
ss
and
clc
addl
ficomps
xor
push
sbb
mov
sub
or
add
push
adcb
fcoml
mov
jl
jb
mov
and
sbb
aam
cltd
push
push
pushf
outsb
fidivl
xor
call
adc
call
push
lock
int3
add
dec
call
jmp
pop
dec
adc
inc
xor
lods
xor
inc
lcall
sub
and
mov
pop
add
cmp
je
and
test
xor
pop
adcb
lods
xor
es
add
mov
sbb
adc
pop
or
adc
and
or
and
pop
or
adc
movsb
cmpsb
sbb
jbe
mov
inc
mov
inc
or
push
jb
mov
add
and
add
push
pop
lds
inc
mov
mov
inc
cmp
lahf
mov
add
push
insb
gs
ret
shl
cld
xor
jo
inc
add
sbb
ss
pushf
movsl
in
pop
xor
daa
dec
mov
inc
sub
push
orb
std
dec
outsb
cmp
imul
insb
xor
arpl
pop
repz
inc
andl
push
push
gs
add
or
outsb
test
pop
dec
jp
insb
lods
pop
xchg
imul
sbb
dec
data16
std
adc
jne
gs
sbb
outsb
adc
push
and
and
sub
insb
sub
mov
dec
sbb
add
test
jb
jb
mov
movsb
add
and
and
inc
push
bound
outsb
insb
les
mov
xchg
movsb
sbb
and
push
dec
pop
fadds
movsb
fisubrl
inc
cwtl
and
out
jbe
gs
mov
arpl
inc
fs
dec
jbe
adc
inc
fdivs
or
sub
jl
adc
sbbl
mov
inc
adc
fmull
mov
sbb
hlt
adc
sti
adc
xchg
pop
mov
mov
sbb
jb
pop
mov
mov
out
jne
inc
inc
and
mov
xchg
ljmp
repz
inc
add
in
and
xor
dec
stc
andl
insb
insb
jnp
or
js
imul
leave
aas
fidivs
jnp
addl
dec
fs
xchg
add
sub
dec
xchg
cmp
push
scas
dec
rclb
jp
xlat
inc
xor
jp
jns
mov
ja
icebp
sbb
sti
sbb
negb
jg
addw
inc
out
sub
adc
jae
and
lea
pop
insb
fwait
jg
addl
iret
sbb
xchg
ret
int3
mov
rcrb
jae
icebp
fsubs
in
push
repnz
hlt
xor
or
sbb
cmp
stos
pop
outsl
movl
adc
pop
mov
dec
fistl
jo
push
pop
dec
mov
aam
mov
sub
sub
push
pusha
xor
in
insl
jmp
push
outsl
ret
outsb
jg
jns
hlt
adc
lds
ljmp
cli
js
stos
jns
popa
loop
dec
inc
dec
sub
shll
mov
inc
jnp
pop
hlt
fs
pop
mov
clc
push
pop
js
push
push
shl
add
fadds
pop
and
and
sub
ja
adc
jno
sbb
mov
in
stos
ljmp
and
and
nop
fstps
insl
mov
ljmp
out
xlat
mov
inc
adc
cmp
and
and
outsl
cmp
or
and
sub
dec
outsl
mov
orb
xor
lds
adc
jnp
test
cmpl
sub
mov
shrb
mov
ja
and
int
and
inc
imul
mov
loope
sub
push
sbb
mov
sbb
or
and
jle
add
add
inc
js
adc
add
arpl
insb
pop
mov
xchg
je
cmc
pop
in
push
mov
dec
or
jge
push
scas
or
xor
cltd
and
rcll
nop
adc
gs
push
xchg
adcl
test
mov
das
mov
scas
adcl
test
insl
scas
inc
inc
aas
inc
xchg
insb
push
or
xor
lret
jnp
xlat
jecxz
lds
jmp
ja
or
or
movsl
jae
mov
xchg
cwtl
and
push
or
add
sbb
and
ret
xor
insl
incl
pusha
push
stos
dec
and
inc
dec
adc
dec
popa
sbb
sbb
out
loope
push
cltd
je
cmpsb
enter
je
mov
mov
xchg
mov
sub
inc
outsl
pop
sbb
arpl
imul
insb
pop
jo
jge
sbb
xchg
dec
pusha
adc
sahf
popf
cmc
hlt
mov
xor
mov
sub
dec
data16
and
push
inc
push
jmp
and
icebp
mov
pop
push
sub
jnp
mov
jo
cmp
aaa
rcl
hlt
cmp
adc
gs
push
ds
cli
mov
mov
outsb
push
inc
sub
mov
shrb
and
jmp
mov
mov
dec
sbb
adc
lock
xor
movsl
cmp
arpl
cwtl
and
and
sarl
mov
sub
or
adc
dec
cmp
push
stc
inc
addr16
nop
pop
jo
jo
cmpsl
push
mov
test
adc
aaa
xor
mov
imul
outsb
lea
or
push
mov
popf
mov
cmp
imul
jb
push
rorl
dec
dec
add
addb
dec
jp
sbb
mov
jae
pop
lods
sbb
xchg
add
sbb
shlb
outsl
outsb
addb
sbb
mov
int
xchg
sbb
pop
popf
or
fs
leave
insl
shrl
out
add
lock
clc
movsb
cmpsl
or
arpl
cs
nop
int
sub
rclb
cmp
mov
push
dec
arpl
inc
das
push
aaa
cmp
or
push
outsl
adc
or
sbb
jg
adc
loope
dec
cmpsl
rcll
push
pop
das
lret
loop
add
jmp
push
mov
push
cmp
push
fs
push
and
inc
xchg
je
jne
xchg
in
out
rcrl
imul
popa
pop
js
jae
dec
jb
xor
xor
cs
sub
js
xor
and
ret
mov
mov
insl
cltd
test
mov
push
arpl
xchg
xchg
imul
and
lret
sbb
cli
push
ret
dec
imul
and
mov
enter
popf
and
mov
add
addb
mov
adc
in
and
xorl
jae
sbb
jae
inc
and
data16
lcall
pop
dec
fcmovnu
pop
jno
inc
add
mov
pop
xchg
and
icebp
shrb
mov
adc
or
pop
and
insl
sbb
push
popa
inc
inc
xor
dec
inc
jo
mov
push
lods
in
das
pop
sbb
mov
stos
push
lret
and
popa
or
cmp
scas
daa
jmp
dec
or
test
dec
lds
pop
xchg
jmp
flds
sub
adc
push
stc
mov
adc
je
shll
sbb
push
jne
sub
cmp
xchg
sub
jno
xchg
add
insl
adc
push
xchg
popa
pusha
sbb
sbb
mov
shll
or
loope
xor
in
loopne
sbb
mov
subl
adc
fs
inc
push
push
mov
or
xchg
fcoms
dec
iret
dec
fldenv
dec
pop
cmp
add
xchg
sub
sbb
aad
push
pop
pop
jmp
testl
cs
push
mov
repz
cmp
jmp
mov
add
out
pop
rorb
fs
in
in
mov
stc
rcr
and
je
movsb
pop
or
mov
stos
rolb
add
mov
and
dec
xchg
dec
dec
sbb
mov
or
add
push
dec
add
pop
or
inc
sub
popl
clc
add
sbb
clc
dec
aam
daa
hlt
push
add
test
or
xor
mov
mov
prefetchnta
add
inc
movups
push
add
sahf
and
lock
mov
add
pop
dec
test
add
inc
fadds
testl
mov
nop
sub
xchg
push
fmuls
mov
adc
push
cmpsl
add
mov
in
out
or
add
in
lock
popa
add
inc
dec
and
push
cmpsb
inc
je
jae
jo
jmp
jb
dec
subb
push
gs
mov
nop
dec
pop
xor
cmpsb
mov
pop
lock
inc
add
movsl
movsb
mov
into
or
and
xchg
lock
inc
or
add
mov
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jo
or
andb
pushf
adc
